command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8861677	File	/home/p4ultr4n/workplace/ReVeal/raw_code/vc1_decode_sequence_header_0.c								
ANR	8861678	Function	vc1_decode_sequence_header	1:0:0:4970							
ANR	8861679	FunctionDef	"vc1_decode_sequence_header (AVCodecContext * avctx , VC1Context * v , GetBitContext * gb)"		8861678	0					
ANR	8861680	CompoundStatement		3:0:89:4970	8861678	0					
ANR	8861681	ExpressionStatement	"av_log ( avctx , AV_LOG_DEBUG , ""Header: %0X\\n"" , show_bits ( gb , 32 ) )"	5:4:96:159	8861678	0	True				
ANR	8861682	CallExpression	"av_log ( avctx , AV_LOG_DEBUG , ""Header: %0X\\n"" , show_bits ( gb , 32 ) )"		8861678	0					
ANR	8861683	Callee	av_log		8861678	0					
ANR	8861684	Identifier	av_log		8861678	0					
ANR	8861685	ArgumentList	avctx		8861678	1					
ANR	8861686	Argument	avctx		8861678	0					
ANR	8861687	Identifier	avctx		8861678	0					
ANR	8861688	Argument	AV_LOG_DEBUG		8861678	1					
ANR	8861689	Identifier	AV_LOG_DEBUG		8861678	0					
ANR	8861690	Argument	"""Header: %0X\\n"""		8861678	2					
ANR	8861691	PrimaryExpression	"""Header: %0X\\n"""		8861678	0					
ANR	8861692	Argument	"show_bits ( gb , 32 )"		8861678	3					
ANR	8861693	CallExpression	"show_bits ( gb , 32 )"		8861678	0					
ANR	8861694	Callee	show_bits		8861678	0					
ANR	8861695	Identifier	show_bits		8861678	0					
ANR	8861696	ArgumentList	gb		8861678	1					
ANR	8861697	Argument	gb		8861678	0					
ANR	8861698	Identifier	gb		8861678	0					
ANR	8861699	Argument	32		8861678	1					
ANR	8861700	PrimaryExpression	32		8861678	0					
ANR	8861701	ExpressionStatement	"v -> profile = get_bits ( gb , 2 )"	7:4:166:194	8861678	1	True				
ANR	8861702	AssignmentExpression	"v -> profile = get_bits ( gb , 2 )"		8861678	0		=			
ANR	8861703	PtrMemberAccess	v -> profile		8861678	0					
ANR	8861704	Identifier	v		8861678	0					
ANR	8861705	Identifier	profile		8861678	1					
ANR	8861706	CallExpression	"get_bits ( gb , 2 )"		8861678	1					
ANR	8861707	Callee	get_bits		8861678	0					
ANR	8861708	Identifier	get_bits		8861678	0					
ANR	8861709	ArgumentList	gb		8861678	1					
ANR	8861710	Argument	gb		8861678	0					
ANR	8861711	Identifier	gb		8861678	0					
ANR	8861712	Argument	2		8861678	1					
ANR	8861713	PrimaryExpression	2		8861678	0					
ANR	8861714	IfStatement	if ( v -> profile == PROFILE_COMPLEX )		8861678	2					
ANR	8861715	Condition	v -> profile == PROFILE_COMPLEX	9:8:205:233	8861678	0	True				
ANR	8861716	EqualityExpression	v -> profile == PROFILE_COMPLEX		8861678	0		==			
ANR	8861717	PtrMemberAccess	v -> profile		8861678	0					
ANR	8861718	Identifier	v		8861678	0					
ANR	8861719	Identifier	profile		8861678	1					
ANR	8861720	Identifier	PROFILE_COMPLEX		8861678	1					
ANR	8861721	CompoundStatement		9:4:151:151	8861678	1					
ANR	8861722	ExpressionStatement	"av_log ( avctx , AV_LOG_WARNING , ""WMV3 Complex Profile is not fully supported\\n"" )"	13:8:252:330	8861678	0	True				
ANR	8861723	CallExpression	"av_log ( avctx , AV_LOG_WARNING , ""WMV3 Complex Profile is not fully supported\\n"" )"		8861678	0					
ANR	8861724	Callee	av_log		8861678	0					
ANR	8861725	Identifier	av_log		8861678	0					
ANR	8861726	ArgumentList	avctx		8861678	1					
ANR	8861727	Argument	avctx		8861678	0					
ANR	8861728	Identifier	avctx		8861678	0					
ANR	8861729	Argument	AV_LOG_WARNING		8861678	1					
ANR	8861730	Identifier	AV_LOG_WARNING		8861678	0					
ANR	8861731	Argument	"""WMV3 Complex Profile is not fully supported\\n"""		8861678	2					
ANR	8861732	PrimaryExpression	"""WMV3 Complex Profile is not fully supported\\n"""		8861678	0					
ANR	8861733	IfStatement	if ( v -> profile == PROFILE_ADVANCED )		8861678	3					
ANR	8861734	Condition	v -> profile == PROFILE_ADVANCED	19:8:350:379	8861678	0	True				
ANR	8861735	EqualityExpression	v -> profile == PROFILE_ADVANCED		8861678	0		==			
ANR	8861736	PtrMemberAccess	v -> profile		8861678	0					
ANR	8861737	Identifier	v		8861678	0					
ANR	8861738	Identifier	profile		8861678	1					
ANR	8861739	Identifier	PROFILE_ADVANCED		8861678	1					
ANR	8861740	CompoundStatement		19:4:297:297	8861678	1					
ANR	8861741	ExpressionStatement	v -> zz_8x4 = ff_vc1_adv_progressive_8x4_zz	23:8:398:439	8861678	0	True				
ANR	8861742	AssignmentExpression	v -> zz_8x4 = ff_vc1_adv_progressive_8x4_zz		8861678	0		=			
ANR	8861743	PtrMemberAccess	v -> zz_8x4		8861678	0					
ANR	8861744	Identifier	v		8861678	0					
ANR	8861745	Identifier	zz_8x4		8861678	1					
ANR	8861746	Identifier	ff_vc1_adv_progressive_8x4_zz		8861678	1					
ANR	8861747	ExpressionStatement	v -> zz_4x8 = ff_vc1_adv_progressive_4x8_zz	25:8:450:491	8861678	1	True				
ANR	8861748	AssignmentExpression	v -> zz_4x8 = ff_vc1_adv_progressive_4x8_zz		8861678	0		=			
ANR	8861749	PtrMemberAccess	v -> zz_4x8		8861678	0					
ANR	8861750	Identifier	v		8861678	0					
ANR	8861751	Identifier	zz_4x8		8861678	1					
ANR	8861752	Identifier	ff_vc1_adv_progressive_4x8_zz		8861678	1					
ANR	8861753	ReturnStatement	"return decode_sequence_header_adv ( v , gb ) ;"	27:8:502:542	8861678	2	True				
ANR	8861754	CallExpression	"decode_sequence_header_adv ( v , gb )"		8861678	0					
ANR	8861755	Callee	decode_sequence_header_adv		8861678	0					
ANR	8861756	Identifier	decode_sequence_header_adv		8861678	0					
ANR	8861757	ArgumentList	v		8861678	1					
ANR	8861758	Argument	v		8861678	0					
ANR	8861759	Identifier	v		8861678	0					
ANR	8861760	Argument	gb		8861678	1					
ANR	8861761	Identifier	gb		8861678	0					
ANR	8861762	ElseStatement	else		8861678	0					
ANR	8861763	CompoundStatement		31:4:476:476	8861678	0					
ANR	8861764	ExpressionStatement	v -> zz_8x4 = wmv2_scantableA	35:8:577:604	8861678	0	True				
ANR	8861765	AssignmentExpression	v -> zz_8x4 = wmv2_scantableA		8861678	0		=			
ANR	8861766	PtrMemberAccess	v -> zz_8x4		8861678	0					
ANR	8861767	Identifier	v		8861678	0					
ANR	8861768	Identifier	zz_8x4		8861678	1					
ANR	8861769	Identifier	wmv2_scantableA		8861678	1					
ANR	8861770	ExpressionStatement	v -> zz_4x8 = wmv2_scantableB	37:8:615:642	8861678	1	True				
ANR	8861771	AssignmentExpression	v -> zz_4x8 = wmv2_scantableB		8861678	0		=			
ANR	8861772	PtrMemberAccess	v -> zz_4x8		8861678	0					
ANR	8861773	Identifier	v		8861678	0					
ANR	8861774	Identifier	zz_4x8		8861678	1					
ANR	8861775	Identifier	wmv2_scantableB		8861678	1					
ANR	8861776	ExpressionStatement	v -> res_y411 = get_bits1 ( gb )	39:8:653:682	8861678	2	True				
ANR	8861777	AssignmentExpression	v -> res_y411 = get_bits1 ( gb )		8861678	0		=			
ANR	8861778	PtrMemberAccess	v -> res_y411		8861678	0					
ANR	8861779	Identifier	v		8861678	0					
ANR	8861780	Identifier	res_y411		8861678	1					
ANR	8861781	CallExpression	get_bits1 ( gb )		8861678	1					
ANR	8861782	Callee	get_bits1		8861678	0					
ANR	8861783	Identifier	get_bits1		8861678	0					
ANR	8861784	ArgumentList	gb		8861678	1					
ANR	8861785	Argument	gb		8861678	0					
ANR	8861786	Identifier	gb		8861678	0					
ANR	8861787	ExpressionStatement	v -> res_sprite = get_bits1 ( gb )	41:8:693:722	8861678	3	True				
ANR	8861788	AssignmentExpression	v -> res_sprite = get_bits1 ( gb )		8861678	0		=			
ANR	8861789	PtrMemberAccess	v -> res_sprite		8861678	0					
ANR	8861790	Identifier	v		8861678	0					
ANR	8861791	Identifier	res_sprite		8861678	1					
ANR	8861792	CallExpression	get_bits1 ( gb )		8861678	1					
ANR	8861793	Callee	get_bits1		8861678	0					
ANR	8861794	Identifier	get_bits1		8861678	0					
ANR	8861795	ArgumentList	gb		8861678	1					
ANR	8861796	Argument	gb		8861678	0					
ANR	8861797	Identifier	gb		8861678	0					
ANR	8861798	IfStatement	if ( v -> res_y411 )		8861678	4					
ANR	8861799	Condition	v -> res_y411	43:12:737:747	8861678	0	True				
ANR	8861800	PtrMemberAccess	v -> res_y411		8861678	0					
ANR	8861801	Identifier	v		8861678	0					
ANR	8861802	Identifier	res_y411		8861678	1					
ANR	8861803	CompoundStatement		43:8:669:669	8861678	1					
ANR	8861804	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Old interlaced mode is not supported\\n"" )"	47:12:774:863	8861678	0	True				
ANR	8861805	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Old interlaced mode is not supported\\n"" )"		8861678	0					
ANR	8861806	Callee	av_log		8861678	0					
ANR	8861807	Identifier	av_log		8861678	0					
ANR	8861808	ArgumentList	avctx		8861678	1					
ANR	8861809	Argument	avctx		8861678	0					
ANR	8861810	Identifier	avctx		8861678	0					
ANR	8861811	Argument	AV_LOG_ERROR		8861678	1					
ANR	8861812	Identifier	AV_LOG_ERROR		8861678	0					
ANR	8861813	Argument	"""Old interlaced mode is not supported\\n"""		8861678	2					
ANR	8861814	PrimaryExpression	"""Old interlaced mode is not supported\\n"""		8861678	0					
ANR	8861815	ReturnStatement	return - 1 ;	51:12:878:887	8861678	1	True				
ANR	8861816	UnaryOperationExpression	- 1		8861678	0					
ANR	8861817	UnaryOperator	-		8861678	0					
ANR	8861818	PrimaryExpression	1		8861678	1					
ANR	8861819	IfStatement	if ( v -> res_sprite )		8861678	5					
ANR	8861820	Condition	v -> res_sprite	55:12:913:925	8861678	0	True				
ANR	8861821	PtrMemberAccess	v -> res_sprite		8861678	0					
ANR	8861822	Identifier	v		8861678	0					
ANR	8861823	Identifier	res_sprite		8861678	1					
ANR	8861824	CompoundStatement		53:27:838:838	8861678	1					
ANR	8861825	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""WMVP is not fully supported\\n"" )"	57:12:943:1003	8861678	0	True				
ANR	8861826	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""WMVP is not fully supported\\n"" )"		8861678	0					
ANR	8861827	Callee	av_log		8861678	0					
ANR	8861828	Identifier	av_log		8861678	0					
ANR	8861829	ArgumentList	avctx		8861678	1					
ANR	8861830	Argument	avctx		8861678	0					
ANR	8861831	Identifier	avctx		8861678	0					
ANR	8861832	Argument	AV_LOG_ERROR		8861678	1					
ANR	8861833	Identifier	AV_LOG_ERROR		8861678	0					
ANR	8861834	Argument	"""WMVP is not fully supported\\n"""		8861678	2					
ANR	8861835	PrimaryExpression	"""WMVP is not fully supported\\n"""		8861678	0					
ANR	8861836	ExpressionStatement	"v -> frmrtq_postproc = get_bits ( gb , 3 )"	67:4:1055:1091	8861678	4	True				
ANR	8861837	AssignmentExpression	"v -> frmrtq_postproc = get_bits ( gb , 3 )"		8861678	0		=			
ANR	8861838	PtrMemberAccess	v -> frmrtq_postproc		8861678	0					
ANR	8861839	Identifier	v		8861678	0					
ANR	8861840	Identifier	frmrtq_postproc		8861678	1					
ANR	8861841	CallExpression	"get_bits ( gb , 3 )"		8861678	1					
ANR	8861842	Callee	get_bits		8861678	0					
ANR	8861843	Identifier	get_bits		8861678	0					
ANR	8861844	ArgumentList	gb		8861678	1					
ANR	8861845	Argument	gb		8861678	0					
ANR	8861846	Identifier	gb		8861678	0					
ANR	8861847	Argument	3		8861678	1					
ANR	8861848	PrimaryExpression	3		8861678	0					
ANR	8861849	ExpressionStatement	"v -> bitrtq_postproc = get_bits ( gb , 5 )"	71:4:1139:1175	8861678	5	True				
ANR	8861850	AssignmentExpression	"v -> bitrtq_postproc = get_bits ( gb , 5 )"		8861678	0		=			
ANR	8861851	PtrMemberAccess	v -> bitrtq_postproc		8861678	0					
ANR	8861852	Identifier	v		8861678	0					
ANR	8861853	Identifier	bitrtq_postproc		8861678	1					
ANR	8861854	CallExpression	"get_bits ( gb , 5 )"		8861678	1					
ANR	8861855	Callee	get_bits		8861678	0					
ANR	8861856	Identifier	get_bits		8861678	0					
ANR	8861857	ArgumentList	gb		8861678	1					
ANR	8861858	Argument	gb		8861678	0					
ANR	8861859	Identifier	gb		8861678	0					
ANR	8861860	Argument	5		8861678	1					
ANR	8861861	PrimaryExpression	5		8861678	0					
ANR	8861862	ExpressionStatement	v -> s . loop_filter = get_bits1 ( gb )	73:4:1191:1223	8861678	6	True				
ANR	8861863	AssignmentExpression	v -> s . loop_filter = get_bits1 ( gb )		8861678	0		=			
ANR	8861864	MemberAccess	v -> s . loop_filter		8861678	0					
ANR	8861865	PtrMemberAccess	v -> s		8861678	0					
ANR	8861866	Identifier	v		8861678	0					
ANR	8861867	Identifier	s		8861678	1					
ANR	8861868	Identifier	loop_filter		8861678	1					
ANR	8861869	CallExpression	get_bits1 ( gb )		8861678	1					
ANR	8861870	Callee	get_bits1		8861678	0					
ANR	8861871	Identifier	get_bits1		8861678	0					
ANR	8861872	ArgumentList	gb		8861678	1					
ANR	8861873	Argument	gb		8861678	0					
ANR	8861874	Identifier	gb		8861678	0					
ANR	8861875	IfStatement	if ( v -> s . loop_filter == 1 && v -> profile == PROFILE_SIMPLE )		8861678	7					
ANR	8861876	Condition	v -> s . loop_filter == 1 && v -> profile == PROFILE_SIMPLE	75:7:1242:1294	8861678	0	True				
ANR	8861877	AndExpression	v -> s . loop_filter == 1 && v -> profile == PROFILE_SIMPLE		8861678	0		&&			
ANR	8861878	EqualityExpression	v -> s . loop_filter == 1		8861678	0		==			
ANR	8861879	MemberAccess	v -> s . loop_filter		8861678	0					
ANR	8861880	PtrMemberAccess	v -> s		8861678	0					
ANR	8861881	Identifier	v		8861678	0					
ANR	8861882	Identifier	s		8861678	1					
ANR	8861883	Identifier	loop_filter		8861678	1					
ANR	8861884	PrimaryExpression	1		8861678	1					
ANR	8861885	EqualityExpression	v -> profile == PROFILE_SIMPLE		8861678	1		==			
ANR	8861886	PtrMemberAccess	v -> profile		8861678	0					
ANR	8861887	Identifier	v		8861678	0					
ANR	8861888	Identifier	profile		8861678	1					
ANR	8861889	Identifier	PROFILE_SIMPLE		8861678	1					
ANR	8861890	CompoundStatement		75:4:1212:1212	8861678	1					
ANR	8861891	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""LOOPFILTER shall not be enabled in Simple Profile\\n"" )"	79:8:1313:1411	8861678	0	True				
ANR	8861892	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""LOOPFILTER shall not be enabled in Simple Profile\\n"" )"		8861678	0					
ANR	8861893	Callee	av_log		8861678	0					
ANR	8861894	Identifier	av_log		8861678	0					
ANR	8861895	ArgumentList	avctx		8861678	1					
ANR	8861896	Argument	avctx		8861678	0					
ANR	8861897	Identifier	avctx		8861678	0					
ANR	8861898	Argument	AV_LOG_ERROR		8861678	1					
ANR	8861899	Identifier	AV_LOG_ERROR		8861678	0					
ANR	8861900	Argument	"""LOOPFILTER shall not be enabled in Simple Profile\\n"""		8861678	2					
ANR	8861901	PrimaryExpression	"""LOOPFILTER shall not be enabled in Simple Profile\\n"""		8861678	0					
ANR	8861902	IfStatement	if ( v -> s . avctx -> skip_loop_filter >= AVDISCARD_ALL )		8861678	8					
ANR	8861903	Condition	v -> s . avctx -> skip_loop_filter >= AVDISCARD_ALL	85:7:1428:1472	8861678	0	True				
ANR	8861904	RelationalExpression	v -> s . avctx -> skip_loop_filter >= AVDISCARD_ALL		8861678	0		>=			
ANR	8861905	PtrMemberAccess	v -> s . avctx -> skip_loop_filter		8861678	0					
ANR	8861906	MemberAccess	v -> s . avctx		8861678	0					
ANR	8861907	PtrMemberAccess	v -> s		8861678	0					
ANR	8861908	Identifier	v		8861678	0					
ANR	8861909	Identifier	s		8861678	1					
ANR	8861910	Identifier	avctx		8861678	1					
ANR	8861911	Identifier	skip_loop_filter		8861678	1					
ANR	8861912	Identifier	AVDISCARD_ALL		8861678	1					
ANR	8861913	ExpressionStatement	v -> s . loop_filter = 0	87:8:1484:1504	8861678	1	True				
ANR	8861914	AssignmentExpression	v -> s . loop_filter = 0		8861678	0		=			
ANR	8861915	MemberAccess	v -> s . loop_filter		8861678	0					
ANR	8861916	PtrMemberAccess	v -> s		8861678	0					
ANR	8861917	Identifier	v		8861678	0					
ANR	8861918	Identifier	s		8861678	1					
ANR	8861919	Identifier	loop_filter		8861678	1					
ANR	8861920	PrimaryExpression	0		8861678	1					
ANR	8861921	ExpressionStatement	v -> res_x8 = get_bits1 ( gb )	91:4:1513:1538	8861678	9	True				
ANR	8861922	AssignmentExpression	v -> res_x8 = get_bits1 ( gb )		8861678	0		=			
ANR	8861923	PtrMemberAccess	v -> res_x8		8861678	0					
ANR	8861924	Identifier	v		8861678	0					
ANR	8861925	Identifier	res_x8		8861678	1					
ANR	8861926	CallExpression	get_bits1 ( gb )		8861678	1					
ANR	8861927	Callee	get_bits1		8861678	0					
ANR	8861928	Identifier	get_bits1		8861678	0					
ANR	8861929	ArgumentList	gb		8861678	1					
ANR	8861930	Argument	gb		8861678	0					
ANR	8861931	Identifier	gb		8861678	0					
ANR	8861932	ExpressionStatement	v -> multires = get_bits1 ( gb )	93:4:1556:1583	8861678	10	True				
ANR	8861933	AssignmentExpression	v -> multires = get_bits1 ( gb )		8861678	0		=			
ANR	8861934	PtrMemberAccess	v -> multires		8861678	0					
ANR	8861935	Identifier	v		8861678	0					
ANR	8861936	Identifier	multires		8861678	1					
ANR	8861937	CallExpression	get_bits1 ( gb )		8861678	1					
ANR	8861938	Callee	get_bits1		8861678	0					
ANR	8861939	Identifier	get_bits1		8861678	0					
ANR	8861940	ArgumentList	gb		8861678	1					
ANR	8861941	Argument	gb		8861678	0					
ANR	8861942	Identifier	gb		8861678	0					
ANR	8861943	ExpressionStatement	v -> res_fasttx = get_bits1 ( gb )	95:4:1590:1619	8861678	11	True				
ANR	8861944	AssignmentExpression	v -> res_fasttx = get_bits1 ( gb )		8861678	0		=			
ANR	8861945	PtrMemberAccess	v -> res_fasttx		8861678	0					
ANR	8861946	Identifier	v		8861678	0					
ANR	8861947	Identifier	res_fasttx		8861678	1					
ANR	8861948	CallExpression	get_bits1 ( gb )		8861678	1					
ANR	8861949	Callee	get_bits1		8861678	0					
ANR	8861950	Identifier	get_bits1		8861678	0					
ANR	8861951	ArgumentList	gb		8861678	1					
ANR	8861952	Argument	gb		8861678	0					
ANR	8861953	Identifier	gb		8861678	0					
ANR	8861954	IfStatement	if ( ! v -> res_fasttx )		8861678	12					
ANR	8861955	Condition	! v -> res_fasttx	97:8:1630:1643	8861678	0	True				
ANR	8861956	UnaryOperationExpression	! v -> res_fasttx		8861678	0					
ANR	8861957	UnaryOperator	!		8861678	0					
ANR	8861958	PtrMemberAccess	v -> res_fasttx		8861678	1					
ANR	8861959	Identifier	v		8861678	0					
ANR	8861960	Identifier	res_fasttx		8861678	1					
ANR	8861961	CompoundStatement		97:4:1561:1561	8861678	1					
ANR	8861962	ExpressionStatement	v -> vc1dsp . vc1_inv_trans_8x8 = ff_simple_idct	101:8:1662:1706	8861678	0	True				
ANR	8861963	AssignmentExpression	v -> vc1dsp . vc1_inv_trans_8x8 = ff_simple_idct		8861678	0		=			
ANR	8861964	MemberAccess	v -> vc1dsp . vc1_inv_trans_8x8		8861678	0					
ANR	8861965	PtrMemberAccess	v -> vc1dsp		8861678	0					
ANR	8861966	Identifier	v		8861678	0					
ANR	8861967	Identifier	vc1dsp		8861678	1					
ANR	8861968	Identifier	vc1_inv_trans_8x8		8861678	1					
ANR	8861969	Identifier	ff_simple_idct		8861678	1					
ANR	8861970	ExpressionStatement	v -> vc1dsp . vc1_inv_trans_8x4 = ff_simple_idct84_add	103:8:1717:1767	8861678	1	True				
ANR	8861971	AssignmentExpression	v -> vc1dsp . vc1_inv_trans_8x4 = ff_simple_idct84_add		8861678	0		=			
ANR	8861972	MemberAccess	v -> vc1dsp . vc1_inv_trans_8x4		8861678	0					
ANR	8861973	PtrMemberAccess	v -> vc1dsp		8861678	0					
ANR	8861974	Identifier	v		8861678	0					
ANR	8861975	Identifier	vc1dsp		8861678	1					
ANR	8861976	Identifier	vc1_inv_trans_8x4		8861678	1					
ANR	8861977	Identifier	ff_simple_idct84_add		8861678	1					
ANR	8861978	ExpressionStatement	v -> vc1dsp . vc1_inv_trans_4x8 = ff_simple_idct48_add	105:8:1778:1828	8861678	2	True				
ANR	8861979	AssignmentExpression	v -> vc1dsp . vc1_inv_trans_4x8 = ff_simple_idct48_add		8861678	0		=			
ANR	8861980	MemberAccess	v -> vc1dsp . vc1_inv_trans_4x8		8861678	0					
ANR	8861981	PtrMemberAccess	v -> vc1dsp		8861678	0					
ANR	8861982	Identifier	v		8861678	0					
ANR	8861983	Identifier	vc1dsp		8861678	1					
ANR	8861984	Identifier	vc1_inv_trans_4x8		8861678	1					
ANR	8861985	Identifier	ff_simple_idct48_add		8861678	1					
ANR	8861986	ExpressionStatement	v -> vc1dsp . vc1_inv_trans_4x4 = ff_simple_idct44_add	107:8:1839:1889	8861678	3	True				
ANR	8861987	AssignmentExpression	v -> vc1dsp . vc1_inv_trans_4x4 = ff_simple_idct44_add		8861678	0		=			
ANR	8861988	MemberAccess	v -> vc1dsp . vc1_inv_trans_4x4		8861678	0					
ANR	8861989	PtrMemberAccess	v -> vc1dsp		8861678	0					
ANR	8861990	Identifier	v		8861678	0					
ANR	8861991	Identifier	vc1dsp		8861678	1					
ANR	8861992	Identifier	vc1_inv_trans_4x4		8861678	1					
ANR	8861993	Identifier	ff_simple_idct44_add		8861678	1					
ANR	8861994	ExpressionStatement	v -> vc1dsp . vc1_inv_trans_8x8_dc = ff_simple_idct_add	109:8:1900:1951	8861678	4	True				
ANR	8861995	AssignmentExpression	v -> vc1dsp . vc1_inv_trans_8x8_dc = ff_simple_idct_add		8861678	0		=			
ANR	8861996	MemberAccess	v -> vc1dsp . vc1_inv_trans_8x8_dc		8861678	0					
ANR	8861997	PtrMemberAccess	v -> vc1dsp		8861678	0					
ANR	8861998	Identifier	v		8861678	0					
ANR	8861999	Identifier	vc1dsp		8861678	1					
ANR	8862000	Identifier	vc1_inv_trans_8x8_dc		8861678	1					
ANR	8862001	Identifier	ff_simple_idct_add		8861678	1					
ANR	8862002	ExpressionStatement	v -> vc1dsp . vc1_inv_trans_8x4_dc = ff_simple_idct84_add	111:8:1962:2015	8861678	5	True				
ANR	8862003	AssignmentExpression	v -> vc1dsp . vc1_inv_trans_8x4_dc = ff_simple_idct84_add		8861678	0		=			
ANR	8862004	MemberAccess	v -> vc1dsp . vc1_inv_trans_8x4_dc		8861678	0					
ANR	8862005	PtrMemberAccess	v -> vc1dsp		8861678	0					
ANR	8862006	Identifier	v		8861678	0					
ANR	8862007	Identifier	vc1dsp		8861678	1					
ANR	8862008	Identifier	vc1_inv_trans_8x4_dc		8861678	1					
ANR	8862009	Identifier	ff_simple_idct84_add		8861678	1					
ANR	8862010	ExpressionStatement	v -> vc1dsp . vc1_inv_trans_4x8_dc = ff_simple_idct48_add	113:8:2026:2079	8861678	6	True				
ANR	8862011	AssignmentExpression	v -> vc1dsp . vc1_inv_trans_4x8_dc = ff_simple_idct48_add		8861678	0		=			
ANR	8862012	MemberAccess	v -> vc1dsp . vc1_inv_trans_4x8_dc		8861678	0					
ANR	8862013	PtrMemberAccess	v -> vc1dsp		8861678	0					
ANR	8862014	Identifier	v		8861678	0					
ANR	8862015	Identifier	vc1dsp		8861678	1					
ANR	8862016	Identifier	vc1_inv_trans_4x8_dc		8861678	1					
ANR	8862017	Identifier	ff_simple_idct48_add		8861678	1					
ANR	8862018	ExpressionStatement	v -> vc1dsp . vc1_inv_trans_4x4_dc = ff_simple_idct44_add	115:8:2090:2143	8861678	7	True				
ANR	8862019	AssignmentExpression	v -> vc1dsp . vc1_inv_trans_4x4_dc = ff_simple_idct44_add		8861678	0		=			
ANR	8862020	MemberAccess	v -> vc1dsp . vc1_inv_trans_4x4_dc		8861678	0					
ANR	8862021	PtrMemberAccess	v -> vc1dsp		8861678	0					
ANR	8862022	Identifier	v		8861678	0					
ANR	8862023	Identifier	vc1dsp		8861678	1					
ANR	8862024	Identifier	vc1_inv_trans_4x4_dc		8861678	1					
ANR	8862025	Identifier	ff_simple_idct44_add		8861678	1					
ANR	8862026	ExpressionStatement	v -> fastuvmc = get_bits1 ( gb )	121:4:2159:2187	8861678	13	True				
ANR	8862027	AssignmentExpression	v -> fastuvmc = get_bits1 ( gb )		8861678	0		=			
ANR	8862028	PtrMemberAccess	v -> fastuvmc		8861678	0					
ANR	8862029	Identifier	v		8861678	0					
ANR	8862030	Identifier	fastuvmc		8861678	1					
ANR	8862031	CallExpression	get_bits1 ( gb )		8861678	1					
ANR	8862032	Callee	get_bits1		8861678	0					
ANR	8862033	Identifier	get_bits1		8861678	0					
ANR	8862034	ArgumentList	gb		8861678	1					
ANR	8862035	Argument	gb		8861678	0					
ANR	8862036	Identifier	gb		8861678	0					
ANR	8862037	IfStatement	if ( ! v -> profile && ! v -> fastuvmc )		8861678	14					
ANR	8862038	Condition	! v -> profile && ! v -> fastuvmc	123:8:2207:2233	8861678	0	True				
ANR	8862039	AndExpression	! v -> profile && ! v -> fastuvmc		8861678	0		&&			
ANR	8862040	UnaryOperationExpression	! v -> profile		8861678	0					
ANR	8862041	UnaryOperator	!		8861678	0					
ANR	8862042	PtrMemberAccess	v -> profile		8861678	1					
ANR	8862043	Identifier	v		8861678	0					
ANR	8862044	Identifier	profile		8861678	1					
ANR	8862045	UnaryOperationExpression	! v -> fastuvmc		8861678	1					
ANR	8862046	UnaryOperator	!		8861678	0					
ANR	8862047	PtrMemberAccess	v -> fastuvmc		8861678	1					
ANR	8862048	Identifier	v		8861678	0					
ANR	8862049	Identifier	fastuvmc		8861678	1					
ANR	8862050	CompoundStatement		123:4:2151:2151	8861678	1					
ANR	8862051	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""FASTUVMC unavailable in Simple Profile\\n"" )"	127:8:2252:2339	8861678	0	True				
ANR	8862052	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""FASTUVMC unavailable in Simple Profile\\n"" )"		8861678	0					
ANR	8862053	Callee	av_log		8861678	0					
ANR	8862054	Identifier	av_log		8861678	0					
ANR	8862055	ArgumentList	avctx		8861678	1					
ANR	8862056	Argument	avctx		8861678	0					
ANR	8862057	Identifier	avctx		8861678	0					
ANR	8862058	Argument	AV_LOG_ERROR		8861678	1					
ANR	8862059	Identifier	AV_LOG_ERROR		8861678	0					
ANR	8862060	Argument	"""FASTUVMC unavailable in Simple Profile\\n"""		8861678	2					
ANR	8862061	PrimaryExpression	"""FASTUVMC unavailable in Simple Profile\\n"""		8861678	0					
ANR	8862062	ReturnStatement	return - 1 ;	131:8:2350:2359	8861678	1	True				
ANR	8862063	UnaryOperationExpression	- 1		8861678	0					
ANR	8862064	UnaryOperator	-		8861678	0					
ANR	8862065	PrimaryExpression	1		8861678	1					
ANR	8862066	ExpressionStatement	v -> extended_mv = get_bits1 ( gb )	135:4:2373:2404	8861678	15	True				
ANR	8862067	AssignmentExpression	v -> extended_mv = get_bits1 ( gb )		8861678	0		=			
ANR	8862068	PtrMemberAccess	v -> extended_mv		8861678	0					
ANR	8862069	Identifier	v		8861678	0					
ANR	8862070	Identifier	extended_mv		8861678	1					
ANR	8862071	CallExpression	get_bits1 ( gb )		8861678	1					
ANR	8862072	Callee	get_bits1		8861678	0					
ANR	8862073	Identifier	get_bits1		8861678	0					
ANR	8862074	ArgumentList	gb		8861678	1					
ANR	8862075	Argument	gb		8861678	0					
ANR	8862076	Identifier	gb		8861678	0					
ANR	8862077	IfStatement	if ( ! v -> profile && v -> extended_mv )		8861678	16					
ANR	8862078	Condition	! v -> profile && v -> extended_mv	137:8:2424:2452	8861678	0	True				
ANR	8862079	AndExpression	! v -> profile && v -> extended_mv		8861678	0		&&			
ANR	8862080	UnaryOperationExpression	! v -> profile		8861678	0					
ANR	8862081	UnaryOperator	!		8861678	0					
ANR	8862082	PtrMemberAccess	v -> profile		8861678	1					
ANR	8862083	Identifier	v		8861678	0					
ANR	8862084	Identifier	profile		8861678	1					
ANR	8862085	PtrMemberAccess	v -> extended_mv		8861678	1					
ANR	8862086	Identifier	v		8861678	0					
ANR	8862087	Identifier	extended_mv		8861678	1					
ANR	8862088	CompoundStatement		137:4:2370:2370	8861678	1					
ANR	8862089	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Extended MVs unavailable in Simple Profile\\n"" )"	141:8:2471:2562	8861678	0	True				
ANR	8862090	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Extended MVs unavailable in Simple Profile\\n"" )"		8861678	0					
ANR	8862091	Callee	av_log		8861678	0					
ANR	8862092	Identifier	av_log		8861678	0					
ANR	8862093	ArgumentList	avctx		8861678	1					
ANR	8862094	Argument	avctx		8861678	0					
ANR	8862095	Identifier	avctx		8861678	0					
ANR	8862096	Argument	AV_LOG_ERROR		8861678	1					
ANR	8862097	Identifier	AV_LOG_ERROR		8861678	0					
ANR	8862098	Argument	"""Extended MVs unavailable in Simple Profile\\n"""		8861678	2					
ANR	8862099	PrimaryExpression	"""Extended MVs unavailable in Simple Profile\\n"""		8861678	0					
ANR	8862100	ReturnStatement	return - 1 ;	145:8:2573:2582	8861678	1	True				
ANR	8862101	UnaryOperationExpression	- 1		8861678	0					
ANR	8862102	UnaryOperator	-		8861678	0					
ANR	8862103	PrimaryExpression	1		8861678	1					
ANR	8862104	ExpressionStatement	"v -> dquant = get_bits ( gb , 2 )"	149:4:2596:2624	8861678	17	True				
ANR	8862105	AssignmentExpression	"v -> dquant = get_bits ( gb , 2 )"		8861678	0		=			
ANR	8862106	PtrMemberAccess	v -> dquant		8861678	0					
ANR	8862107	Identifier	v		8861678	0					
ANR	8862108	Identifier	dquant		8861678	1					
ANR	8862109	CallExpression	"get_bits ( gb , 2 )"		8861678	1					
ANR	8862110	Callee	get_bits		8861678	0					
ANR	8862111	Identifier	get_bits		8861678	0					
ANR	8862112	ArgumentList	gb		8861678	1					
ANR	8862113	Argument	gb		8861678	0					
ANR	8862114	Identifier	gb		8861678	0					
ANR	8862115	Argument	2		8861678	1					
ANR	8862116	PrimaryExpression	2		8861678	0					
ANR	8862117	ExpressionStatement	v -> vstransform = get_bits1 ( gb )	151:4:2640:2671	8861678	18	True				
ANR	8862118	AssignmentExpression	v -> vstransform = get_bits1 ( gb )		8861678	0		=			
ANR	8862119	PtrMemberAccess	v -> vstransform		8861678	0					
ANR	8862120	Identifier	v		8861678	0					
ANR	8862121	Identifier	vstransform		8861678	1					
ANR	8862122	CallExpression	get_bits1 ( gb )		8861678	1					
ANR	8862123	Callee	get_bits1		8861678	0					
ANR	8862124	Identifier	get_bits1		8861678	0					
ANR	8862125	ArgumentList	gb		8861678	1					
ANR	8862126	Argument	gb		8861678	0					
ANR	8862127	Identifier	gb		8861678	0					
ANR	8862128	ExpressionStatement	v -> res_transtab = get_bits1 ( gb )	155:4:2689:2720	8861678	19	True				
ANR	8862129	AssignmentExpression	v -> res_transtab = get_bits1 ( gb )		8861678	0		=			
ANR	8862130	PtrMemberAccess	v -> res_transtab		8861678	0					
ANR	8862131	Identifier	v		8861678	0					
ANR	8862132	Identifier	res_transtab		8861678	1					
ANR	8862133	CallExpression	get_bits1 ( gb )		8861678	1					
ANR	8862134	Callee	get_bits1		8861678	0					
ANR	8862135	Identifier	get_bits1		8861678	0					
ANR	8862136	ArgumentList	gb		8861678	1					
ANR	8862137	Argument	gb		8861678	0					
ANR	8862138	Identifier	gb		8861678	0					
ANR	8862139	IfStatement	if ( v -> res_transtab )		8861678	20					
ANR	8862140	Condition	v -> res_transtab	157:8:2731:2745	8861678	0	True				
ANR	8862141	PtrMemberAccess	v -> res_transtab		8861678	0					
ANR	8862142	Identifier	v		8861678	0					
ANR	8862143	Identifier	res_transtab		8861678	1					
ANR	8862144	CompoundStatement		157:4:2663:2663	8861678	1					
ANR	8862145	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""1 for reserved RES_TRANSTAB is forbidden\\n"" )"	161:8:2764:2853	8861678	0	True				
ANR	8862146	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""1 for reserved RES_TRANSTAB is forbidden\\n"" )"		8861678	0					
ANR	8862147	Callee	av_log		8861678	0					
ANR	8862148	Identifier	av_log		8861678	0					
ANR	8862149	ArgumentList	avctx		8861678	1					
ANR	8862150	Argument	avctx		8861678	0					
ANR	8862151	Identifier	avctx		8861678	0					
ANR	8862152	Argument	AV_LOG_ERROR		8861678	1					
ANR	8862153	Identifier	AV_LOG_ERROR		8861678	0					
ANR	8862154	Argument	"""1 for reserved RES_TRANSTAB is forbidden\\n"""		8861678	2					
ANR	8862155	PrimaryExpression	"""1 for reserved RES_TRANSTAB is forbidden\\n"""		8861678	0					
ANR	8862156	ReturnStatement	return - 1 ;	165:8:2864:2873	8861678	1	True				
ANR	8862157	UnaryOperationExpression	- 1		8861678	0					
ANR	8862158	UnaryOperator	-		8861678	0					
ANR	8862159	PrimaryExpression	1		8861678	1					
ANR	8862160	ExpressionStatement	v -> overlap = get_bits1 ( gb )	171:4:2889:2915	8861678	21	True				
ANR	8862161	AssignmentExpression	v -> overlap = get_bits1 ( gb )		8861678	0		=			
ANR	8862162	PtrMemberAccess	v -> overlap		8861678	0					
ANR	8862163	Identifier	v		8861678	0					
ANR	8862164	Identifier	overlap		8861678	1					
ANR	8862165	CallExpression	get_bits1 ( gb )		8861678	1					
ANR	8862166	Callee	get_bits1		8861678	0					
ANR	8862167	Identifier	get_bits1		8861678	0					
ANR	8862168	ArgumentList	gb		8861678	1					
ANR	8862169	Argument	gb		8861678	0					
ANR	8862170	Identifier	gb		8861678	0					
ANR	8862171	ExpressionStatement	v -> s . resync_marker = get_bits1 ( gb )	175:4:2933:2967	8861678	22	True				
ANR	8862172	AssignmentExpression	v -> s . resync_marker = get_bits1 ( gb )		8861678	0		=			
ANR	8862173	MemberAccess	v -> s . resync_marker		8861678	0					
ANR	8862174	PtrMemberAccess	v -> s		8861678	0					
ANR	8862175	Identifier	v		8861678	0					
ANR	8862176	Identifier	s		8861678	1					
ANR	8862177	Identifier	resync_marker		8861678	1					
ANR	8862178	CallExpression	get_bits1 ( gb )		8861678	1					
ANR	8862179	Callee	get_bits1		8861678	0					
ANR	8862180	Identifier	get_bits1		8861678	0					
ANR	8862181	ArgumentList	gb		8861678	1					
ANR	8862182	Argument	gb		8861678	0					
ANR	8862183	Identifier	gb		8861678	0					
ANR	8862184	ExpressionStatement	v -> rangered = get_bits1 ( gb )	177:4:2974:3001	8861678	23	True				
ANR	8862185	AssignmentExpression	v -> rangered = get_bits1 ( gb )		8861678	0		=			
ANR	8862186	PtrMemberAccess	v -> rangered		8861678	0					
ANR	8862187	Identifier	v		8861678	0					
ANR	8862188	Identifier	rangered		8861678	1					
ANR	8862189	CallExpression	get_bits1 ( gb )		8861678	1					
ANR	8862190	Callee	get_bits1		8861678	0					
ANR	8862191	Identifier	get_bits1		8861678	0					
ANR	8862192	ArgumentList	gb		8861678	1					
ANR	8862193	Argument	gb		8861678	0					
ANR	8862194	Identifier	gb		8861678	0					
ANR	8862195	IfStatement	if ( v -> rangered && v -> profile == PROFILE_SIMPLE )		8861678	24					
ANR	8862196	Condition	v -> rangered && v -> profile == PROFILE_SIMPLE	179:8:3012:3054	8861678	0	True				
ANR	8862197	AndExpression	v -> rangered && v -> profile == PROFILE_SIMPLE		8861678	0		&&			
ANR	8862198	PtrMemberAccess	v -> rangered		8861678	0					
ANR	8862199	Identifier	v		8861678	0					
ANR	8862200	Identifier	rangered		8861678	1					
ANR	8862201	EqualityExpression	v -> profile == PROFILE_SIMPLE		8861678	1		==			
ANR	8862202	PtrMemberAccess	v -> profile		8861678	0					
ANR	8862203	Identifier	v		8861678	0					
ANR	8862204	Identifier	profile		8861678	1					
ANR	8862205	Identifier	PROFILE_SIMPLE		8861678	1					
ANR	8862206	CompoundStatement		179:4:2972:2972	8861678	1					
ANR	8862207	ExpressionStatement	"av_log ( avctx , AV_LOG_INFO , ""RANGERED should be set to 0 in Simple Profile\\n"" )"	183:8:3073:3166	8861678	0	True				
ANR	8862208	CallExpression	"av_log ( avctx , AV_LOG_INFO , ""RANGERED should be set to 0 in Simple Profile\\n"" )"		8861678	0					
ANR	8862209	Callee	av_log		8861678	0					
ANR	8862210	Identifier	av_log		8861678	0					
ANR	8862211	ArgumentList	avctx		8861678	1					
ANR	8862212	Argument	avctx		8861678	0					
ANR	8862213	Identifier	avctx		8861678	0					
ANR	8862214	Argument	AV_LOG_INFO		8861678	1					
ANR	8862215	Identifier	AV_LOG_INFO		8861678	0					
ANR	8862216	Argument	"""RANGERED should be set to 0 in Simple Profile\\n"""		8861678	2					
ANR	8862217	PrimaryExpression	"""RANGERED should be set to 0 in Simple Profile\\n"""		8861678	0					
ANR	8862218	ExpressionStatement	"v -> s . max_b_frames = avctx -> max_b_frames = get_bits ( gb , 3 )"	191:4:3182:3239	8861678	25	True				
ANR	8862219	AssignmentExpression	"v -> s . max_b_frames = avctx -> max_b_frames = get_bits ( gb , 3 )"		8861678	0		=			
ANR	8862220	MemberAccess	v -> s . max_b_frames		8861678	0					
ANR	8862221	PtrMemberAccess	v -> s		8861678	0					
ANR	8862222	Identifier	v		8861678	0					
ANR	8862223	Identifier	s		8861678	1					
ANR	8862224	Identifier	max_b_frames		8861678	1					
ANR	8862225	AssignmentExpression	"avctx -> max_b_frames = get_bits ( gb , 3 )"		8861678	1		=			
ANR	8862226	PtrMemberAccess	avctx -> max_b_frames		8861678	0					
ANR	8862227	Identifier	avctx		8861678	0					
ANR	8862228	Identifier	max_b_frames		8861678	1					
ANR	8862229	CallExpression	"get_bits ( gb , 3 )"		8861678	1					
ANR	8862230	Callee	get_bits		8861678	0					
ANR	8862231	Identifier	get_bits		8861678	0					
ANR	8862232	ArgumentList	gb		8861678	1					
ANR	8862233	Argument	gb		8861678	0					
ANR	8862234	Identifier	gb		8861678	0					
ANR	8862235	Argument	3		8861678	1					
ANR	8862236	PrimaryExpression	3		8861678	0					
ANR	8862237	ExpressionStatement	"v -> quantizer_mode = get_bits ( gb , 2 )"	193:4:3255:3290	8861678	26	True				
ANR	8862238	AssignmentExpression	"v -> quantizer_mode = get_bits ( gb , 2 )"		8861678	0		=			
ANR	8862239	PtrMemberAccess	v -> quantizer_mode		8861678	0					
ANR	8862240	Identifier	v		8861678	0					
ANR	8862241	Identifier	quantizer_mode		8861678	1					
ANR	8862242	CallExpression	"get_bits ( gb , 2 )"		8861678	1					
ANR	8862243	Callee	get_bits		8861678	0					
ANR	8862244	Identifier	get_bits		8861678	0					
ANR	8862245	ArgumentList	gb		8861678	1					
ANR	8862246	Argument	gb		8861678	0					
ANR	8862247	Identifier	gb		8861678	0					
ANR	8862248	Argument	2		8861678	1					
ANR	8862249	PrimaryExpression	2		8861678	0					
ANR	8862250	ExpressionStatement	v -> finterpflag = get_bits1 ( gb )	197:4:3308:3338	8861678	27	True				
ANR	8862251	AssignmentExpression	v -> finterpflag = get_bits1 ( gb )		8861678	0		=			
ANR	8862252	PtrMemberAccess	v -> finterpflag		8861678	0					
ANR	8862253	Identifier	v		8861678	0					
ANR	8862254	Identifier	finterpflag		8861678	1					
ANR	8862255	CallExpression	get_bits1 ( gb )		8861678	1					
ANR	8862256	Callee	get_bits1		8861678	0					
ANR	8862257	Identifier	get_bits1		8861678	0					
ANR	8862258	ArgumentList	gb		8861678	1					
ANR	8862259	Argument	gb		8861678	0					
ANR	8862260	Identifier	gb		8861678	0					
ANR	8862261	IfStatement	if ( v -> res_sprite )		8861678	28					
ANR	8862262	Condition	v -> res_sprite	201:8:3360:3372	8861678	0	True				
ANR	8862263	PtrMemberAccess	v -> res_sprite		8861678	0					
ANR	8862264	Identifier	v		8861678	0					
ANR	8862265	Identifier	res_sprite		8861678	1					
ANR	8862266	CompoundStatement		199:23:3285:3285	8861678	1					
ANR	8862267	ExpressionStatement	"v -> s . avctx -> width = v -> s . avctx -> coded_width = get_bits ( gb , 11 )"	203:8:3386:3450	8861678	0	True				
ANR	8862268	AssignmentExpression	"v -> s . avctx -> width = v -> s . avctx -> coded_width = get_bits ( gb , 11 )"		8861678	0		=			
ANR	8862269	PtrMemberAccess	v -> s . avctx -> width		8861678	0					
ANR	8862270	MemberAccess	v -> s . avctx		8861678	0					
ANR	8862271	PtrMemberAccess	v -> s		8861678	0					
ANR	8862272	Identifier	v		8861678	0					
ANR	8862273	Identifier	s		8861678	1					
ANR	8862274	Identifier	avctx		8861678	1					
ANR	8862275	Identifier	width		8861678	1					
ANR	8862276	AssignmentExpression	"v -> s . avctx -> coded_width = get_bits ( gb , 11 )"		8861678	1		=			
ANR	8862277	PtrMemberAccess	v -> s . avctx -> coded_width		8861678	0					
ANR	8862278	MemberAccess	v -> s . avctx		8861678	0					
ANR	8862279	PtrMemberAccess	v -> s		8861678	0					
ANR	8862280	Identifier	v		8861678	0					
ANR	8862281	Identifier	s		8861678	1					
ANR	8862282	Identifier	avctx		8861678	1					
ANR	8862283	Identifier	coded_width		8861678	1					
ANR	8862284	CallExpression	"get_bits ( gb , 11 )"		8861678	1					
ANR	8862285	Callee	get_bits		8861678	0					
ANR	8862286	Identifier	get_bits		8861678	0					
ANR	8862287	ArgumentList	gb		8861678	1					
ANR	8862288	Argument	gb		8861678	0					
ANR	8862289	Identifier	gb		8861678	0					
ANR	8862290	Argument	11		8861678	1					
ANR	8862291	PrimaryExpression	11		8861678	0					
ANR	8862292	ExpressionStatement	"v -> s . avctx -> height = v -> s . avctx -> coded_height = get_bits ( gb , 11 )"	205:8:3461:3525	8861678	1	True				
ANR	8862293	AssignmentExpression	"v -> s . avctx -> height = v -> s . avctx -> coded_height = get_bits ( gb , 11 )"		8861678	0		=			
ANR	8862294	PtrMemberAccess	v -> s . avctx -> height		8861678	0					
ANR	8862295	MemberAccess	v -> s . avctx		8861678	0					
ANR	8862296	PtrMemberAccess	v -> s		8861678	0					
ANR	8862297	Identifier	v		8861678	0					
ANR	8862298	Identifier	s		8861678	1					
ANR	8862299	Identifier	avctx		8861678	1					
ANR	8862300	Identifier	height		8861678	1					
ANR	8862301	AssignmentExpression	"v -> s . avctx -> coded_height = get_bits ( gb , 11 )"		8861678	1		=			
ANR	8862302	PtrMemberAccess	v -> s . avctx -> coded_height		8861678	0					
ANR	8862303	MemberAccess	v -> s . avctx		8861678	0					
ANR	8862304	PtrMemberAccess	v -> s		8861678	0					
ANR	8862305	Identifier	v		8861678	0					
ANR	8862306	Identifier	s		8861678	1					
ANR	8862307	Identifier	avctx		8861678	1					
ANR	8862308	Identifier	coded_height		8861678	1					
ANR	8862309	CallExpression	"get_bits ( gb , 11 )"		8861678	1					
ANR	8862310	Callee	get_bits		8861678	0					
ANR	8862311	Identifier	get_bits		8861678	0					
ANR	8862312	ArgumentList	gb		8861678	1					
ANR	8862313	Argument	gb		8861678	0					
ANR	8862314	Identifier	gb		8861678	0					
ANR	8862315	Argument	11		8861678	1					
ANR	8862316	PrimaryExpression	11		8861678	0					
ANR	8862317	ExpressionStatement	"skip_bits ( gb , 5 )"	207:8:3536:3552	8861678	2	True				
ANR	8862318	CallExpression	"skip_bits ( gb , 5 )"		8861678	0					
ANR	8862319	Callee	skip_bits		8861678	0					
ANR	8862320	Identifier	skip_bits		8861678	0					
ANR	8862321	ArgumentList	gb		8861678	1					
ANR	8862322	Argument	gb		8861678	0					
ANR	8862323	Identifier	gb		8861678	0					
ANR	8862324	Argument	5		8861678	1					
ANR	8862325	PrimaryExpression	5		8861678	0					
ANR	8862326	ExpressionStatement	v -> res_x8 = get_bits1 ( gb )	209:8:3576:3601	8861678	3	True				
ANR	8862327	AssignmentExpression	v -> res_x8 = get_bits1 ( gb )		8861678	0		=			
ANR	8862328	PtrMemberAccess	v -> res_x8		8861678	0					
ANR	8862329	Identifier	v		8861678	0					
ANR	8862330	Identifier	res_x8		8861678	1					
ANR	8862331	CallExpression	get_bits1 ( gb )		8861678	1					
ANR	8862332	Callee	get_bits1		8861678	0					
ANR	8862333	Identifier	get_bits1		8861678	0					
ANR	8862334	ArgumentList	gb		8861678	1					
ANR	8862335	Argument	gb		8861678	0					
ANR	8862336	Identifier	gb		8861678	0					
ANR	8862337	IfStatement	if ( get_bits1 ( gb ) )		8861678	4					
ANR	8862338	Condition	get_bits1 ( gb )	211:12:3616:3628	8861678	0	True				
ANR	8862339	CallExpression	get_bits1 ( gb )		8861678	0					
ANR	8862340	Callee	get_bits1		8861678	0					
ANR	8862341	Identifier	get_bits1		8861678	0					
ANR	8862342	ArgumentList	gb		8861678	1					
ANR	8862343	Argument	gb		8861678	0					
ANR	8862344	Identifier	gb		8861678	0					
ANR	8862345	CompoundStatement		209:27:3541:3541	8861678	1					
ANR	8862346	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Unsupported sprite feature\\n"" )"	213:12:3687:3746	8861678	0	True				
ANR	8862347	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Unsupported sprite feature\\n"" )"		8861678	0					
ANR	8862348	Callee	av_log		8861678	0					
ANR	8862349	Identifier	av_log		8861678	0					
ANR	8862350	ArgumentList	avctx		8861678	1					
ANR	8862351	Argument	avctx		8861678	0					
ANR	8862352	Identifier	avctx		8861678	0					
ANR	8862353	Argument	AV_LOG_ERROR		8861678	1					
ANR	8862354	Identifier	AV_LOG_ERROR		8861678	0					
ANR	8862355	Argument	"""Unsupported sprite feature\\n"""		8861678	2					
ANR	8862356	PrimaryExpression	"""Unsupported sprite feature\\n"""		8861678	0					
ANR	8862357	ReturnStatement	return - 1 ;	215:12:3761:3770	8861678	1	True				
ANR	8862358	UnaryOperationExpression	- 1		8861678	0					
ANR	8862359	UnaryOperator	-		8861678	0					
ANR	8862360	PrimaryExpression	1		8861678	1					
ANR	8862361	ExpressionStatement	"skip_bits ( gb , 3 )"	219:8:3792:3808	8861678	5	True				
ANR	8862362	CallExpression	"skip_bits ( gb , 3 )"		8861678	0					
ANR	8862363	Callee	skip_bits		8861678	0					
ANR	8862364	Identifier	skip_bits		8861678	0					
ANR	8862365	ArgumentList	gb		8861678	1					
ANR	8862366	Argument	gb		8861678	0					
ANR	8862367	Identifier	gb		8861678	0					
ANR	8862368	Argument	3		8861678	1					
ANR	8862369	PrimaryExpression	3		8861678	0					
ANR	8862370	ExpressionStatement	v -> res_rtm_flag = 0	221:8:3832:3851	8861678	6	True				
ANR	8862371	AssignmentExpression	v -> res_rtm_flag = 0		8861678	0		=			
ANR	8862372	PtrMemberAccess	v -> res_rtm_flag		8861678	0					
ANR	8862373	Identifier	v		8861678	0					
ANR	8862374	Identifier	res_rtm_flag		8861678	1					
ANR	8862375	PrimaryExpression	0		8861678	1					
ANR	8862376	ElseStatement	else		8861678	0					
ANR	8862377	CompoundStatement		221:11:3775:3775	8861678	0					
ANR	8862378	ExpressionStatement	v -> res_rtm_flag = get_bits1 ( gb )	225:8:3876:3907	8861678	0	True				
ANR	8862379	AssignmentExpression	v -> res_rtm_flag = get_bits1 ( gb )		8861678	0		=			
ANR	8862380	PtrMemberAccess	v -> res_rtm_flag		8861678	0					
ANR	8862381	Identifier	v		8861678	0					
ANR	8862382	Identifier	res_rtm_flag		8861678	1					
ANR	8862383	CallExpression	get_bits1 ( gb )		8861678	1					
ANR	8862384	Callee	get_bits1		8861678	0					
ANR	8862385	Identifier	get_bits1		8861678	0					
ANR	8862386	ArgumentList	gb		8861678	1					
ANR	8862387	Argument	gb		8861678	0					
ANR	8862388	Identifier	gb		8861678	0					
ANR	8862389	IfStatement	if ( ! v -> res_rtm_flag )		8861678	29					
ANR	8862390	Condition	! v -> res_rtm_flag	229:8:3936:3951	8861678	0	True				
ANR	8862391	UnaryOperationExpression	! v -> res_rtm_flag		8861678	0					
ANR	8862392	UnaryOperator	!		8861678	0					
ANR	8862393	PtrMemberAccess	v -> res_rtm_flag		8861678	1					
ANR	8862394	Identifier	v		8861678	0					
ANR	8862395	Identifier	res_rtm_flag		8861678	1					
ANR	8862396	CompoundStatement		229:4:3869:3869	8861678	1					
ANR	8862397	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Old WMV3 version detected, some frames may be decoded incorrectly\\n"" )"	237:8:4082:4196	8861678	0	True				
ANR	8862398	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Old WMV3 version detected, some frames may be decoded incorrectly\\n"" )"		8861678	0					
ANR	8862399	Callee	av_log		8861678	0					
ANR	8862400	Identifier	av_log		8861678	0					
ANR	8862401	ArgumentList	avctx		8861678	1					
ANR	8862402	Argument	avctx		8861678	0					
ANR	8862403	Identifier	avctx		8861678	0					
ANR	8862404	Argument	AV_LOG_ERROR		8861678	1					
ANR	8862405	Identifier	AV_LOG_ERROR		8861678	0					
ANR	8862406	Argument	"""Old WMV3 version detected, some frames may be decoded incorrectly\\n"""		8861678	2					
ANR	8862407	PrimaryExpression	"""Old WMV3 version detected, some frames may be decoded incorrectly\\n"""		8861678	0					
ANR	8862408	IfStatement	if ( ! v -> res_fasttx )		8861678	30					
ANR	8862409	Condition	! v -> res_fasttx	247:7:4290:4303	8861678	0	True				
ANR	8862410	UnaryOperationExpression	! v -> res_fasttx		8861678	0					
ANR	8862411	UnaryOperator	!		8861678	0					
ANR	8862412	PtrMemberAccess	v -> res_fasttx		8861678	1					
ANR	8862413	Identifier	v		8861678	0					
ANR	8862414	Identifier	res_fasttx		8861678	1					
ANR	8862415	ExpressionStatement	"skip_bits ( gb , 16 )"	247:23:4306:4323	8861678	1	True				
ANR	8862416	CallExpression	"skip_bits ( gb , 16 )"		8861678	0					
ANR	8862417	Callee	skip_bits		8861678	0					
ANR	8862418	Identifier	skip_bits		8861678	0					
ANR	8862419	ArgumentList	gb		8861678	1					
ANR	8862420	Argument	gb		8861678	0					
ANR	8862421	Identifier	gb		8861678	0					
ANR	8862422	Argument	16		8861678	1					
ANR	8862423	PrimaryExpression	16		8861678	0					
ANR	8862424	Statement	av_log	249:4:4330:4335	8861678	31	True				
ANR	8862425	Statement	(	249:10:4336:4336	8861678	32	True				
ANR	8862426	Statement	avctx	249:11:4337:4341	8861678	33	True				
ANR	8862427	Statement	","	249:16:4342:4342	8861678	34	True				
ANR	8862428	Statement	AV_LOG_DEBUG	249:18:4344:4355	8861678	35	True				
ANR	8862429	Statement	","	249:30:4356:4356	8861678	36	True				
ANR	8862430	Statement	"""Profile %i:\\nfrmrtq_postproc=%i, bitrtq_postproc=%i\\n"""	251:15:4374:4428	8861678	37	True				
ANR	8862431	Statement	"""LoopFilter=%i, MultiRes=%i, FastUVMC=%i, Extended MV=%i\\n"""	253:15:4446:4504	8861678	38	True				
ANR	8862432	Statement	"""Rangered=%i, VSTransform=%i, Overlap=%i, SyncMarker=%i\\n"""	255:15:4522:4579	8861678	39	True				
ANR	8862433	Statement	"""DQuant=%i, Quantizer mode=%i, Max B frames=%i\\n"""	257:15:4597:4645	8861678	40	True				
ANR	8862434	Statement	","	257:64:4646:4646	8861678	41	True				
ANR	8862435	Statement	v	259:15:4664:4664	8861678	42	True				
ANR	8862436	Statement	->	259:16:4665:4666	8861678	43	True				
ANR	8862437	Statement	profile	259:18:4667:4673	8861678	44	True				
ANR	8862438	Statement	","	259:25:4674:4674	8861678	45	True				
ANR	8862439	Statement	v	259:27:4676:4676	8861678	46	True				
ANR	8862440	Statement	->	259:28:4677:4678	8861678	47	True				
ANR	8862441	Statement	frmrtq_postproc	259:30:4679:4693	8861678	48	True				
ANR	8862442	Statement	","	259:45:4694:4694	8861678	49	True				
ANR	8862443	Statement	v	259:47:4696:4696	8861678	50	True				
ANR	8862444	Statement	->	259:48:4697:4698	8861678	51	True				
ANR	8862445	Statement	bitrtq_postproc	259:50:4699:4713	8861678	52	True				
ANR	8862446	Statement	","	259:65:4714:4714	8861678	53	True				
ANR	8862447	Statement	v	261:15:4732:4732	8861678	54	True				
ANR	8862448	Statement	->	261:16:4733:4734	8861678	55	True				
ANR	8862449	Statement	s	261:18:4735:4735	8861678	56	True				
ANR	8862450	Statement	.	261:19:4736:4736	8861678	57	True				
ANR	8862451	Statement	loop_filter	261:20:4737:4747	8861678	58	True				
ANR	8862452	Statement	","	261:31:4748:4748	8861678	59	True				
ANR	8862453	Statement	v	261:33:4750:4750	8861678	60	True				
ANR	8862454	Statement	->	261:34:4751:4752	8861678	61	True				
ANR	8862455	Statement	multires	261:36:4753:4760	8861678	62	True				
ANR	8862456	Statement	","	261:44:4761:4761	8861678	63	True				
ANR	8862457	Statement	v	261:46:4763:4763	8861678	64	True				
ANR	8862458	Statement	->	261:47:4764:4765	8861678	65	True				
ANR	8862459	Statement	fastuvmc	261:49:4766:4773	8861678	66	True				
ANR	8862460	Statement	","	261:57:4774:4774	8861678	67	True				
ANR	8862461	Statement	v	261:59:4776:4776	8861678	68	True				
ANR	8862462	Statement	->	261:60:4777:4778	8861678	69	True				
ANR	8862463	Statement	extended_mv	261:62:4779:4789	8861678	70	True				
ANR	8862464	Statement	","	261:73:4790:4790	8861678	71	True				
ANR	8862465	Statement	v	263:15:4808:4808	8861678	72	True				
ANR	8862466	Statement	->	263:16:4809:4810	8861678	73	True				
ANR	8862467	Statement	rangered	263:18:4811:4818	8861678	74	True				
ANR	8862468	Statement	","	263:26:4819:4819	8861678	75	True				
ANR	8862469	Statement	v	263:28:4821:4821	8861678	76	True				
ANR	8862470	Statement	->	263:29:4822:4823	8861678	77	True				
ANR	8862471	Statement	vstransform	263:31:4824:4834	8861678	78	True				
ANR	8862472	Statement	","	263:42:4835:4835	8861678	79	True				
ANR	8862473	Statement	v	263:44:4837:4837	8861678	80	True				
ANR	8862474	Statement	->	263:45:4838:4839	8861678	81	True				
ANR	8862475	Statement	overlap	263:47:4840:4846	8861678	82	True				
ANR	8862476	Statement	","	263:54:4847:4847	8861678	83	True				
ANR	8862477	Statement	v	263:56:4849:4849	8861678	84	True				
ANR	8862478	Statement	->	263:57:4850:4851	8861678	85	True				
ANR	8862479	Statement	s	263:59:4852:4852	8861678	86	True				
ANR	8862480	Statement	.	263:60:4853:4853	8861678	87	True				
ANR	8862481	Statement	resync_marker	263:61:4854:4866	8861678	88	True				
ANR	8862482	Statement	","	263:74:4867:4867	8861678	89	True				
ANR	8862483	Statement	v	265:15:4885:4885	8861678	90	True				
ANR	8862484	Statement	->	265:16:4886:4887	8861678	91	True				
ANR	8862485	Statement	dquant	265:18:4888:4893	8861678	92	True				
ANR	8862486	Statement	","	265:24:4894:4894	8861678	93	True				
ANR	8862487	Statement	v	265:26:4896:4896	8861678	94	True				
ANR	8862488	Statement	->	265:27:4897:4898	8861678	95	True				
ANR	8862489	Statement	quantizer_mode	265:29:4899:4912	8861678	96	True				
ANR	8862490	Statement	","	265:43:4913:4913	8861678	97	True				
ANR	8862491	Statement	avctx	265:45:4915:4919	8861678	98	True				
ANR	8862492	Statement	->	265:50:4920:4921	8861678	99	True				
ANR	8862493	Statement	max_b_frames	265:52:4922:4933	8861678	100	True				
ANR	8862494	Statement	)	267:15:4951:4951	8861678	101	True				
ANR	8862495	ExpressionStatement		267:16:4952:4952	8861678	102	True				
ANR	8862496	ReturnStatement	return 0 ;	269:4:4959:4967	8861678	103	True				
ANR	8862497	PrimaryExpression	0		8861678	0					
ANR	8862498	ReturnType	int		8861678	1					
ANR	8862499	Identifier	vc1_decode_sequence_header		8861678	2					
ANR	8862500	ParameterList	"AVCodecContext * avctx , VC1Context * v , GetBitContext * gb"		8861678	3					
ANR	8862501	Parameter	AVCodecContext * avctx	1:31:31:51	8861678	0	True				
ANR	8862502	ParameterType	AVCodecContext *		8861678	0					
ANR	8862503	Identifier	avctx		8861678	1					
ANR	8862504	Parameter	VC1Context * v	1:54:54:66	8861678	1	True				
ANR	8862505	ParameterType	VC1Context *		8861678	0					
ANR	8862506	Identifier	v		8861678	1					
ANR	8862507	Parameter	GetBitContext * gb	1:69:69:85	8861678	2	True				
ANR	8862508	ParameterType	GetBitContext *		8861678	0					
ANR	8862509	Identifier	gb		8861678	1					
ANR	8862510	CFGEntryNode	ENTRY		8861678		True				
ANR	8862511	CFGExitNode	EXIT		8861678		True				
ANR	8862512	Symbol	* v		8861678						
ANR	8862513	Symbol	v -> res_sprite		8861678						
ANR	8862514	Symbol	ff_simple_idct_add		8861678						
ANR	8862515	Symbol	get_bits		8861678						
ANR	8862516	Symbol	v -> vc1dsp . vc1_inv_trans_8x8_dc		8861678						
ANR	8862517	Symbol	v -> dquant		8861678						
ANR	8862518	Symbol	* v -> s		8861678						
ANR	8862519	Symbol	* v -> s . avctx		8861678						
ANR	8862520	Symbol	v -> res_rtm_flag		8861678						
ANR	8862521	Symbol	avctx -> max_b_frames		8861678						
ANR	8862522	Symbol	v -> profile		8861678						
ANR	8862523	Symbol	show_bits		8861678						
ANR	8862524	Symbol	v -> extended_mv		8861678						
ANR	8862525	Symbol	v -> vc1dsp . vc1_inv_trans_8x4_dc		8861678						
ANR	8862526	Symbol	v -> vc1dsp		8861678						
ANR	8862527	Symbol	v -> zz_8x4		8861678						
ANR	8862528	Symbol	v -> zz_4x8		8861678						
ANR	8862529	Symbol	v -> s		8861678						
ANR	8862530	Symbol	v -> finterpflag		8861678						
ANR	8862531	Symbol	AV_LOG_DEBUG		8861678						
ANR	8862532	Symbol	v -> vc1dsp . vc1_inv_trans_4x4		8861678						
ANR	8862533	Symbol	v -> vc1dsp . vc1_inv_trans_8x4		8861678						
ANR	8862534	Symbol	v -> vc1dsp . vc1_inv_trans_4x8		8861678						
ANR	8862535	Symbol	get_bits1		8861678						
ANR	8862536	Symbol	v -> s . resync_marker		8861678						
ANR	8862537	Symbol	v -> s . avctx -> coded_width		8861678						
ANR	8862538	Symbol	v -> vc1dsp . vc1_inv_trans_8x8		8861678						
ANR	8862539	Symbol	v -> rangered		8861678						
ANR	8862540	Symbol	v -> res_y411		8861678						
ANR	8862541	Symbol	v -> multires		8861678						
ANR	8862542	Symbol	* avctx		8861678						
ANR	8862543	Symbol	ff_simple_idct48_add		8861678						
ANR	8862544	Symbol	v -> s . max_b_frames		8861678						
ANR	8862545	Symbol	PROFILE_ADVANCED		8861678						
ANR	8862546	Symbol	ff_simple_idct84_add		8861678						
ANR	8862547	Symbol	ff_vc1_adv_progressive_8x4_zz		8861678						
ANR	8862548	Symbol	v -> bitrtq_postproc		8861678						
ANR	8862549	Symbol	v -> s . avctx		8861678						
ANR	8862550	Symbol	AV_LOG_INFO		8861678						
ANR	8862551	Symbol	decode_sequence_header_adv		8861678						
ANR	8862552	Symbol	v -> s . avctx -> width		8861678						
ANR	8862553	Symbol	ff_simple_idct44_add		8861678						
ANR	8862554	Symbol	v -> overlap		8861678						
ANR	8862555	Symbol	PROFILE_COMPLEX		8861678						
ANR	8862556	Symbol	ff_simple_idct		8861678						
ANR	8862557	Symbol	v -> res_transtab		8861678						
ANR	8862558	Symbol	v -> quantizer_mode		8861678						
ANR	8862559	Symbol	* * v		8861678						
ANR	8862560	Symbol	v -> fastuvmc		8861678						
ANR	8862561	Symbol	v -> res_x8		8861678						
ANR	8862562	Symbol	gb		8861678						
ANR	8862563	Symbol	avctx		8861678						
ANR	8862564	Symbol	v -> s . loop_filter		8861678						
ANR	8862565	Symbol	v -> res_fasttx		8861678						
ANR	8862566	Symbol	ff_vc1_adv_progressive_4x8_zz		8861678						
ANR	8862567	Symbol	AV_LOG_ERROR		8861678						
ANR	8862568	Symbol	AVDISCARD_ALL		8861678						
ANR	8862569	Symbol	v -> vc1dsp . vc1_inv_trans_4x4_dc		8861678						
ANR	8862570	Symbol	v -> vc1dsp . vc1_inv_trans_4x8_dc		8861678						
ANR	8862571	Symbol	v -> s . avctx -> skip_loop_filter		8861678						
ANR	8862572	Symbol	wmv2_scantableB		8861678						
ANR	8862573	Symbol	v -> s . avctx -> height		8861678						
ANR	8862574	Symbol	wmv2_scantableA		8861678						
ANR	8862575	Symbol	v -> s . avctx -> coded_height		8861678						
ANR	8862576	Symbol	v		8861678						
ANR	8862577	Symbol	v -> vstransform		8861678						
ANR	8862578	Symbol	PROFILE_SIMPLE		8861678						
ANR	8862579	Symbol	v -> frmrtq_postproc		8861678						
ANR	8862580	Symbol	AV_LOG_WARNING		8861678						
