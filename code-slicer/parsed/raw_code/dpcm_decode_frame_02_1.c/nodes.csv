command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2767515	File	/home/p4ultr4n/workplace/ReVeal/raw_code/dpcm_decode_frame_02_1.c								
ANR	2767516	Function	dpcm_decode_frame	1:0:0:4546							
ANR	2767517	FunctionDef	"dpcm_decode_frame (AVCodecContext * avctx , void * data , int * got_frame_ptr , AVPacket * avpkt)"		2767516	0					
ANR	2767518	CompoundStatement		5:0:132:4546	2767516	0					
ANR	2767519	IdentifierDeclStatement	const uint8_t * buf = avpkt -> data ;	7:4:139:171	2767516	0	True				
ANR	2767520	IdentifierDecl	* buf = avpkt -> data		2767516	0					
ANR	2767521	IdentifierDeclType	const uint8_t *		2767516	0					
ANR	2767522	Identifier	buf		2767516	1					
ANR	2767523	AssignmentExpression	* buf = avpkt -> data		2767516	2		=			
ANR	2767524	Identifier	buf		2767516	0					
ANR	2767525	PtrMemberAccess	avpkt -> data		2767516	1					
ANR	2767526	Identifier	avpkt		2767516	0					
ANR	2767527	Identifier	data		2767516	1					
ANR	2767528	IdentifierDeclStatement	int buf_size = avpkt -> size ;	9:4:178:204	2767516	1	True				
ANR	2767529	IdentifierDecl	buf_size = avpkt -> size		2767516	0					
ANR	2767530	IdentifierDeclType	int		2767516	0					
ANR	2767531	Identifier	buf_size		2767516	1					
ANR	2767532	AssignmentExpression	buf_size = avpkt -> size		2767516	2		=			
ANR	2767533	Identifier	buf_size		2767516	0					
ANR	2767534	PtrMemberAccess	avpkt -> size		2767516	1					
ANR	2767535	Identifier	avpkt		2767516	0					
ANR	2767536	Identifier	size		2767516	1					
ANR	2767537	IdentifierDeclStatement	const uint8_t * buf_end = buf + buf_size ;	11:4:211:250	2767516	2	True				
ANR	2767538	IdentifierDecl	* buf_end = buf + buf_size		2767516	0					
ANR	2767539	IdentifierDeclType	const uint8_t *		2767516	0					
ANR	2767540	Identifier	buf_end		2767516	1					
ANR	2767541	AssignmentExpression	* buf_end = buf + buf_size		2767516	2		=			
ANR	2767542	Identifier	buf_end		2767516	0					
ANR	2767543	AdditiveExpression	buf + buf_size		2767516	1		+			
ANR	2767544	Identifier	buf		2767516	0					
ANR	2767545	Identifier	buf_size		2767516	1					
ANR	2767546	IdentifierDeclStatement	DPCMContext * s = avctx -> priv_data ;	13:4:257:290	2767516	3	True				
ANR	2767547	IdentifierDecl	* s = avctx -> priv_data		2767516	0					
ANR	2767548	IdentifierDeclType	DPCMContext *		2767516	0					
ANR	2767549	Identifier	s		2767516	1					
ANR	2767550	AssignmentExpression	* s = avctx -> priv_data		2767516	2		=			
ANR	2767551	Identifier	s		2767516	0					
ANR	2767552	PtrMemberAccess	avctx -> priv_data		2767516	1					
ANR	2767553	Identifier	avctx		2767516	0					
ANR	2767554	Identifier	priv_data		2767516	1					
ANR	2767555	IdentifierDeclStatement	"int out = 0 , ret ;"	15:4:297:313	2767516	4	True				
ANR	2767556	IdentifierDecl	out = 0		2767516	0					
ANR	2767557	IdentifierDeclType	int		2767516	0					
ANR	2767558	Identifier	out		2767516	1					
ANR	2767559	AssignmentExpression	out = 0		2767516	2		=			
ANR	2767560	Identifier	out		2767516	0					
ANR	2767561	PrimaryExpression	0		2767516	1					
ANR	2767562	IdentifierDecl	ret		2767516	1					
ANR	2767563	IdentifierDeclType	int		2767516	0					
ANR	2767564	Identifier	ret		2767516	1					
ANR	2767565	IdentifierDeclStatement	int predictor [ 2 ] ;	17:4:320:336	2767516	5	True				
ANR	2767566	IdentifierDecl	predictor [ 2 ]		2767516	0					
ANR	2767567	IdentifierDeclType	int [ 2 ]		2767516	0					
ANR	2767568	Identifier	predictor		2767516	1					
ANR	2767569	PrimaryExpression	2		2767516	2					
ANR	2767570	IdentifierDeclStatement	int ch = 0 ;	19:4:343:353	2767516	6	True				
ANR	2767571	IdentifierDecl	ch = 0		2767516	0					
ANR	2767572	IdentifierDeclType	int		2767516	0					
ANR	2767573	Identifier	ch		2767516	1					
ANR	2767574	AssignmentExpression	ch = 0		2767516	2		=			
ANR	2767575	Identifier	ch		2767516	0					
ANR	2767576	PrimaryExpression	0		2767516	1					
ANR	2767577	IdentifierDeclStatement	int stereo = s -> channels - 1 ;	21:4:360:388	2767516	7	True				
ANR	2767578	IdentifierDecl	stereo = s -> channels - 1		2767516	0					
ANR	2767579	IdentifierDeclType	int		2767516	0					
ANR	2767580	Identifier	stereo		2767516	1					
ANR	2767581	AssignmentExpression	stereo = s -> channels - 1		2767516	2		=			
ANR	2767582	Identifier	stereo		2767516	0					
ANR	2767583	AdditiveExpression	s -> channels - 1		2767516	1		-			
ANR	2767584	PtrMemberAccess	s -> channels		2767516	0					
ANR	2767585	Identifier	s		2767516	0					
ANR	2767586	Identifier	channels		2767516	1					
ANR	2767587	PrimaryExpression	1		2767516	1					
ANR	2767588	IdentifierDeclStatement	int16_t * output_samples ;	23:4:395:418	2767516	8	True				
ANR	2767589	IdentifierDecl	* output_samples		2767516	0					
ANR	2767590	IdentifierDeclType	int16_t *		2767516	0					
ANR	2767591	Identifier	output_samples		2767516	1					
ANR	2767592	SwitchStatement	switch ( avctx -> codec -> id )		2767516	9					
ANR	2767593	Condition	avctx -> codec -> id	29:11:467:482	2767516	0	True				
ANR	2767594	PtrMemberAccess	avctx -> codec -> id		2767516	0					
ANR	2767595	PtrMemberAccess	avctx -> codec		2767516	0					
ANR	2767596	Identifier	avctx		2767516	0					
ANR	2767597	Identifier	codec		2767516	1					
ANR	2767598	Identifier	id		2767516	1					
ANR	2767599	CompoundStatement		25:29:352:352	2767516	1					
ANR	2767600	Label	case CODEC_ID_ROQ_DPCM :	31:4:492:514	2767516	0	True				
ANR	2767601	Identifier	CODEC_ID_ROQ_DPCM		2767516	0					
ANR	2767602	ExpressionStatement	out = buf_size - 8	33:8:525:543	2767516	1	True				
ANR	2767603	AssignmentExpression	out = buf_size - 8		2767516	0		=			
ANR	2767604	Identifier	out		2767516	0					
ANR	2767605	AdditiveExpression	buf_size - 8		2767516	1		-			
ANR	2767606	Identifier	buf_size		2767516	0					
ANR	2767607	PrimaryExpression	8		2767516	1					
ANR	2767608	BreakStatement	break ;	35:8:554:559	2767516	2	True				
ANR	2767609	Label	case CODEC_ID_INTERPLAY_DPCM :	37:4:566:594	2767516	3	True				
ANR	2767610	Identifier	CODEC_ID_INTERPLAY_DPCM		2767516	0					
ANR	2767611	ExpressionStatement	out = buf_size - 6 - s -> channels	39:8:605:637	2767516	4	True				
ANR	2767612	AssignmentExpression	out = buf_size - 6 - s -> channels		2767516	0		=			
ANR	2767613	Identifier	out		2767516	0					
ANR	2767614	AdditiveExpression	buf_size - 6 - s -> channels		2767516	1		-			
ANR	2767615	Identifier	buf_size		2767516	0					
ANR	2767616	AdditiveExpression	6 - s -> channels		2767516	1		-			
ANR	2767617	PrimaryExpression	6		2767516	0					
ANR	2767618	PtrMemberAccess	s -> channels		2767516	1					
ANR	2767619	Identifier	s		2767516	0					
ANR	2767620	Identifier	channels		2767516	1					
ANR	2767621	BreakStatement	break ;	41:8:648:653	2767516	5	True				
ANR	2767622	Label	case CODEC_ID_XAN_DPCM :	43:4:660:682	2767516	6	True				
ANR	2767623	Identifier	CODEC_ID_XAN_DPCM		2767516	0					
ANR	2767624	ExpressionStatement	out = buf_size - 2 * s -> channels	45:8:693:725	2767516	7	True				
ANR	2767625	AssignmentExpression	out = buf_size - 2 * s -> channels		2767516	0		=			
ANR	2767626	Identifier	out		2767516	0					
ANR	2767627	AdditiveExpression	buf_size - 2 * s -> channels		2767516	1		-			
ANR	2767628	Identifier	buf_size		2767516	0					
ANR	2767629	MultiplicativeExpression	2 * s -> channels		2767516	1		*			
ANR	2767630	PrimaryExpression	2		2767516	0					
ANR	2767631	PtrMemberAccess	s -> channels		2767516	1					
ANR	2767632	Identifier	s		2767516	0					
ANR	2767633	Identifier	channels		2767516	1					
ANR	2767634	BreakStatement	break ;	47:8:736:741	2767516	8	True				
ANR	2767635	Label	case CODEC_ID_SOL_DPCM :	49:4:748:770	2767516	9	True				
ANR	2767636	Identifier	CODEC_ID_SOL_DPCM		2767516	0					
ANR	2767637	IfStatement	if ( avctx -> codec_tag != 3 )		2767516	10					
ANR	2767638	Condition	avctx -> codec_tag != 3	51:12:785:805	2767516	0	True				
ANR	2767639	EqualityExpression	avctx -> codec_tag != 3		2767516	0		!=			
ANR	2767640	PtrMemberAccess	avctx -> codec_tag		2767516	0					
ANR	2767641	Identifier	avctx		2767516	0					
ANR	2767642	Identifier	codec_tag		2767516	1					
ANR	2767643	PrimaryExpression	3		2767516	1					
ANR	2767644	ExpressionStatement	out = buf_size * 2	53:12:821:839	2767516	1	True				
ANR	2767645	AssignmentExpression	out = buf_size * 2		2767516	0		=			
ANR	2767646	Identifier	out		2767516	0					
ANR	2767647	MultiplicativeExpression	buf_size * 2		2767516	1		*			
ANR	2767648	Identifier	buf_size		2767516	0					
ANR	2767649	PrimaryExpression	2		2767516	1					
ANR	2767650	ElseStatement	else		2767516	0					
ANR	2767651	ExpressionStatement	out = buf_size	57:12:868:882	2767516	0	True				
ANR	2767652	AssignmentExpression	out = buf_size		2767516	0		=			
ANR	2767653	Identifier	out		2767516	0					
ANR	2767654	Identifier	buf_size		2767516	1					
ANR	2767655	BreakStatement	break ;	59:8:893:898	2767516	11	True				
ANR	2767656	IfStatement	if ( out <= 0 )		2767516	10					
ANR	2767657	Condition	out <= 0	63:8:916:923	2767516	0	True				
ANR	2767658	RelationalExpression	out <= 0		2767516	0		<=			
ANR	2767659	Identifier	out		2767516	0					
ANR	2767660	PrimaryExpression	0		2767516	1					
ANR	2767661	CompoundStatement		59:18:793:793	2767516	1					
ANR	2767662	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""packet is too small\\n"" )"	65:8:937:989	2767516	0	True				
ANR	2767663	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""packet is too small\\n"" )"		2767516	0					
ANR	2767664	Callee	av_log		2767516	0					
ANR	2767665	Identifier	av_log		2767516	0					
ANR	2767666	ArgumentList	avctx		2767516	1					
ANR	2767667	Argument	avctx		2767516	0					
ANR	2767668	Identifier	avctx		2767516	0					
ANR	2767669	Argument	AV_LOG_ERROR		2767516	1					
ANR	2767670	Identifier	AV_LOG_ERROR		2767516	0					
ANR	2767671	Argument	"""packet is too small\\n"""		2767516	2					
ANR	2767672	PrimaryExpression	"""packet is too small\\n"""		2767516	0					
ANR	2767673	ReturnStatement	return AVERROR ( EINVAL ) ;	67:8:1000:1022	2767516	1	True				
ANR	2767674	CallExpression	AVERROR ( EINVAL )		2767516	0					
ANR	2767675	Callee	AVERROR		2767516	0					
ANR	2767676	Identifier	AVERROR		2767516	0					
ANR	2767677	ArgumentList	EINVAL		2767516	1					
ANR	2767678	Argument	EINVAL		2767516	0					
ANR	2767679	Identifier	EINVAL		2767516	0					
ANR	2767680	ExpressionStatement	s -> frame . nb_samples = out / s -> channels	75:4:1067:1106	2767516	11	True				
ANR	2767681	AssignmentExpression	s -> frame . nb_samples = out / s -> channels		2767516	0		=			
ANR	2767682	MemberAccess	s -> frame . nb_samples		2767516	0					
ANR	2767683	PtrMemberAccess	s -> frame		2767516	0					
ANR	2767684	Identifier	s		2767516	0					
ANR	2767685	Identifier	frame		2767516	1					
ANR	2767686	Identifier	nb_samples		2767516	1					
ANR	2767687	MultiplicativeExpression	out / s -> channels		2767516	1		/			
ANR	2767688	Identifier	out		2767516	0					
ANR	2767689	PtrMemberAccess	s -> channels		2767516	1					
ANR	2767690	Identifier	s		2767516	0					
ANR	2767691	Identifier	channels		2767516	1					
ANR	2767692	IfStatement	"if ( ( ret = avctx -> get_buffer ( avctx , & s -> frame ) ) < 0 )"		2767516	12					
ANR	2767693	Condition	"( ret = avctx -> get_buffer ( avctx , & s -> frame ) ) < 0"	77:8:1117:1163	2767516	0	True				
ANR	2767694	RelationalExpression	"( ret = avctx -> get_buffer ( avctx , & s -> frame ) ) < 0"		2767516	0		<			
ANR	2767695	AssignmentExpression	"ret = avctx -> get_buffer ( avctx , & s -> frame )"		2767516	0		=			
ANR	2767696	Identifier	ret		2767516	0					
ANR	2767697	CallExpression	"avctx -> get_buffer ( avctx , & s -> frame )"		2767516	1					
ANR	2767698	Callee	avctx -> get_buffer		2767516	0					
ANR	2767699	PtrMemberAccess	avctx -> get_buffer		2767516	0					
ANR	2767700	Identifier	avctx		2767516	0					
ANR	2767701	Identifier	get_buffer		2767516	1					
ANR	2767702	ArgumentList	avctx		2767516	1					
ANR	2767703	Argument	avctx		2767516	0					
ANR	2767704	Identifier	avctx		2767516	0					
ANR	2767705	Argument	& s -> frame		2767516	1					
ANR	2767706	UnaryOperationExpression	& s -> frame		2767516	0					
ANR	2767707	UnaryOperator	&		2767516	0					
ANR	2767708	PtrMemberAccess	s -> frame		2767516	1					
ANR	2767709	Identifier	s		2767516	0					
ANR	2767710	Identifier	frame		2767516	1					
ANR	2767711	PrimaryExpression	0		2767516	1					
ANR	2767712	CompoundStatement		73:57:1033:1033	2767516	1					
ANR	2767713	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""get_buffer() failed\\n"" )"	79:8:1177:1229	2767516	0	True				
ANR	2767714	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""get_buffer() failed\\n"" )"		2767516	0					
ANR	2767715	Callee	av_log		2767516	0					
ANR	2767716	Identifier	av_log		2767516	0					
ANR	2767717	ArgumentList	avctx		2767516	1					
ANR	2767718	Argument	avctx		2767516	0					
ANR	2767719	Identifier	avctx		2767516	0					
ANR	2767720	Argument	AV_LOG_ERROR		2767516	1					
ANR	2767721	Identifier	AV_LOG_ERROR		2767516	0					
ANR	2767722	Argument	"""get_buffer() failed\\n"""		2767516	2					
ANR	2767723	PrimaryExpression	"""get_buffer() failed\\n"""		2767516	0					
ANR	2767724	ReturnStatement	return ret ;	81:8:1240:1250	2767516	1	True				
ANR	2767725	Identifier	ret		2767516	0					
ANR	2767726	ExpressionStatement	output_samples = ( int16_t * ) s -> frame . data [ 0 ]	85:4:1264:1308	2767516	13	True				
ANR	2767727	AssignmentExpression	output_samples = ( int16_t * ) s -> frame . data [ 0 ]		2767516	0		=			
ANR	2767728	Identifier	output_samples		2767516	0					
ANR	2767729	CastExpression	( int16_t * ) s -> frame . data [ 0 ]		2767516	1					
ANR	2767730	CastTarget	int16_t *		2767516	0					
ANR	2767731	ArrayIndexing	s -> frame . data [ 0 ]		2767516	1					
ANR	2767732	MemberAccess	s -> frame . data		2767516	0					
ANR	2767733	PtrMemberAccess	s -> frame		2767516	0					
ANR	2767734	Identifier	s		2767516	0					
ANR	2767735	Identifier	frame		2767516	1					
ANR	2767736	Identifier	data		2767516	1					
ANR	2767737	PrimaryExpression	0		2767516	1					
ANR	2767738	SwitchStatement	switch ( avctx -> codec -> id )		2767516	14					
ANR	2767739	Condition	avctx -> codec -> id	89:11:1324:1339	2767516	0	True				
ANR	2767740	PtrMemberAccess	avctx -> codec -> id		2767516	0					
ANR	2767741	PtrMemberAccess	avctx -> codec		2767516	0					
ANR	2767742	Identifier	avctx		2767516	0					
ANR	2767743	Identifier	codec		2767516	1					
ANR	2767744	Identifier	id		2767516	1					
ANR	2767745	CompoundStatement		85:29:1209:1209	2767516	1					
ANR	2767746	Label	case CODEC_ID_ROQ_DPCM :	93:4:1351:1373	2767516	0	True				
ANR	2767747	Identifier	CODEC_ID_ROQ_DPCM		2767516	0					
ANR	2767748	ExpressionStatement	buf += 6	95:8:1384:1392	2767516	1	True				
ANR	2767749	AssignmentExpression	buf += 6		2767516	0		+=			
ANR	2767750	Identifier	buf		2767516	0					
ANR	2767751	PrimaryExpression	6		2767516	1					
ANR	2767752	IfStatement	if ( stereo )		2767516	2					
ANR	2767753	Condition	stereo	99:12:1409:1414	2767516	0	True				
ANR	2767754	Identifier	stereo		2767516	0					
ANR	2767755	CompoundStatement		95:20:1284:1284	2767516	1					
ANR	2767756	ExpressionStatement	predictor [ 1 ] = ( int16_t ) ( bytestream_get_byte ( & buf ) << 8 )	101:12:1432:1488	2767516	0	True				
ANR	2767757	AssignmentExpression	predictor [ 1 ] = ( int16_t ) ( bytestream_get_byte ( & buf ) << 8 )		2767516	0		=			
ANR	2767758	ArrayIndexing	predictor [ 1 ]		2767516	0					
ANR	2767759	Identifier	predictor		2767516	0					
ANR	2767760	PrimaryExpression	1		2767516	1					
ANR	2767761	CastExpression	( int16_t ) ( bytestream_get_byte ( & buf ) << 8 )		2767516	1					
ANR	2767762	CastTarget	int16_t		2767516	0					
ANR	2767763	ShiftExpression	bytestream_get_byte ( & buf ) << 8		2767516	1		<<			
ANR	2767764	CallExpression	bytestream_get_byte ( & buf )		2767516	0					
ANR	2767765	Callee	bytestream_get_byte		2767516	0					
ANR	2767766	Identifier	bytestream_get_byte		2767516	0					
ANR	2767767	ArgumentList	& buf		2767516	1					
ANR	2767768	Argument	& buf		2767516	0					
ANR	2767769	UnaryOperationExpression	& buf		2767516	0					
ANR	2767770	UnaryOperator	&		2767516	0					
ANR	2767771	Identifier	buf		2767516	1					
ANR	2767772	PrimaryExpression	8		2767516	1					
ANR	2767773	ExpressionStatement	predictor [ 0 ] = ( int16_t ) ( bytestream_get_byte ( & buf ) << 8 )	103:12:1503:1559	2767516	1	True				
ANR	2767774	AssignmentExpression	predictor [ 0 ] = ( int16_t ) ( bytestream_get_byte ( & buf ) << 8 )		2767516	0		=			
ANR	2767775	ArrayIndexing	predictor [ 0 ]		2767516	0					
ANR	2767776	Identifier	predictor		2767516	0					
ANR	2767777	PrimaryExpression	0		2767516	1					
ANR	2767778	CastExpression	( int16_t ) ( bytestream_get_byte ( & buf ) << 8 )		2767516	1					
ANR	2767779	CastTarget	int16_t		2767516	0					
ANR	2767780	ShiftExpression	bytestream_get_byte ( & buf ) << 8		2767516	1		<<			
ANR	2767781	CallExpression	bytestream_get_byte ( & buf )		2767516	0					
ANR	2767782	Callee	bytestream_get_byte		2767516	0					
ANR	2767783	Identifier	bytestream_get_byte		2767516	0					
ANR	2767784	ArgumentList	& buf		2767516	1					
ANR	2767785	Argument	& buf		2767516	0					
ANR	2767786	UnaryOperationExpression	& buf		2767516	0					
ANR	2767787	UnaryOperator	&		2767516	0					
ANR	2767788	Identifier	buf		2767516	1					
ANR	2767789	PrimaryExpression	8		2767516	1					
ANR	2767790	ElseStatement	else		2767516	0					
ANR	2767791	CompoundStatement		101:15:1444:1444	2767516	0					
ANR	2767792	ExpressionStatement	predictor [ 0 ] = ( int16_t ) bytestream_get_le16 ( & buf )	107:12:1592:1641	2767516	0	True				
ANR	2767793	AssignmentExpression	predictor [ 0 ] = ( int16_t ) bytestream_get_le16 ( & buf )		2767516	0		=			
ANR	2767794	ArrayIndexing	predictor [ 0 ]		2767516	0					
ANR	2767795	Identifier	predictor		2767516	0					
ANR	2767796	PrimaryExpression	0		2767516	1					
ANR	2767797	CastExpression	( int16_t ) bytestream_get_le16 ( & buf )		2767516	1					
ANR	2767798	CastTarget	int16_t		2767516	0					
ANR	2767799	CallExpression	bytestream_get_le16 ( & buf )		2767516	1					
ANR	2767800	Callee	bytestream_get_le16		2767516	0					
ANR	2767801	Identifier	bytestream_get_le16		2767516	0					
ANR	2767802	ArgumentList	& buf		2767516	1					
ANR	2767803	Argument	& buf		2767516	0					
ANR	2767804	UnaryOperationExpression	& buf		2767516	0					
ANR	2767805	UnaryOperator	&		2767516	0					
ANR	2767806	Identifier	buf		2767516	1					
ANR	2767807	WhileStatement	while ( buf < buf_end )		2767516	3					
ANR	2767808	Condition	buf < buf_end	115:15:1706:1718	2767516	0	True				
ANR	2767809	RelationalExpression	buf < buf_end		2767516	0		<			
ANR	2767810	Identifier	buf		2767516	0					
ANR	2767811	Identifier	buf_end		2767516	1					
ANR	2767812	CompoundStatement		111:30:1588:1588	2767516	1					
ANR	2767813	ExpressionStatement	predictor [ ch ] += s -> roq_square_array [ * buf ++ ]	117:12:1736:1780	2767516	0	True				
ANR	2767814	AssignmentExpression	predictor [ ch ] += s -> roq_square_array [ * buf ++ ]		2767516	0		+=			
ANR	2767815	ArrayIndexing	predictor [ ch ]		2767516	0					
ANR	2767816	Identifier	predictor		2767516	0					
ANR	2767817	Identifier	ch		2767516	1					
ANR	2767818	ArrayIndexing	s -> roq_square_array [ * buf ++ ]		2767516	1					
ANR	2767819	PtrMemberAccess	s -> roq_square_array		2767516	0					
ANR	2767820	Identifier	s		2767516	0					
ANR	2767821	Identifier	roq_square_array		2767516	1					
ANR	2767822	UnaryOperationExpression	* buf ++		2767516	1					
ANR	2767823	UnaryOperator	*		2767516	0					
ANR	2767824	PostIncDecOperationExpression	buf ++		2767516	1					
ANR	2767825	Identifier	buf		2767516	0					
ANR	2767826	IncDec	++		2767516	1					
ANR	2767827	ExpressionStatement	predictor [ ch ] = av_clip_int16 ( predictor [ ch ] )	119:12:1795:1840	2767516	1	True				
ANR	2767828	AssignmentExpression	predictor [ ch ] = av_clip_int16 ( predictor [ ch ] )		2767516	0		=			
ANR	2767829	ArrayIndexing	predictor [ ch ]		2767516	0					
ANR	2767830	Identifier	predictor		2767516	0					
ANR	2767831	Identifier	ch		2767516	1					
ANR	2767832	CallExpression	av_clip_int16 ( predictor [ ch ] )		2767516	1					
ANR	2767833	Callee	av_clip_int16		2767516	0					
ANR	2767834	Identifier	av_clip_int16		2767516	0					
ANR	2767835	ArgumentList	predictor [ ch ]		2767516	1					
ANR	2767836	Argument	predictor [ ch ]		2767516	0					
ANR	2767837	ArrayIndexing	predictor [ ch ]		2767516	0					
ANR	2767838	Identifier	predictor		2767516	0					
ANR	2767839	Identifier	ch		2767516	1					
ANR	2767840	ExpressionStatement	* output_samples ++ = predictor [ ch ]	121:12:1855:1888	2767516	2	True				
ANR	2767841	AssignmentExpression	* output_samples ++ = predictor [ ch ]		2767516	0		=			
ANR	2767842	UnaryOperationExpression	* output_samples ++		2767516	0					
ANR	2767843	UnaryOperator	*		2767516	0					
ANR	2767844	PostIncDecOperationExpression	output_samples ++		2767516	1					
ANR	2767845	Identifier	output_samples		2767516	0					
ANR	2767846	IncDec	++		2767516	1					
ANR	2767847	ArrayIndexing	predictor [ ch ]		2767516	1					
ANR	2767848	Identifier	predictor		2767516	0					
ANR	2767849	Identifier	ch		2767516	1					
ANR	2767850	ExpressionStatement	ch ^= stereo	127:12:1939:1951	2767516	3	True				
ANR	2767851	AssignmentExpression	ch ^= stereo		2767516	0		^=			
ANR	2767852	Identifier	ch		2767516	0					
ANR	2767853	Identifier	stereo		2767516	1					
ANR	2767854	BreakStatement	break ;	131:8:1973:1978	2767516	4	True				
ANR	2767855	Label	case CODEC_ID_INTERPLAY_DPCM :	135:4:1987:2015	2767516	5	True				
ANR	2767856	Identifier	CODEC_ID_INTERPLAY_DPCM		2767516	0					
ANR	2767857	ExpressionStatement	buf += 6	137:8:2026:2034	2767516	6	True				
ANR	2767858	AssignmentExpression	buf += 6		2767516	0		+=			
ANR	2767859	Identifier	buf		2767516	0					
ANR	2767860	PrimaryExpression	6		2767516	1					
ANR	2767861	ForStatement	for ( ch = 0 ; ch < s -> channels ; ch ++ )		2767516	7					
ANR	2767862	ForInit	ch = 0 ;	141:13:2103:2109	2767516	0	True				
ANR	2767863	AssignmentExpression	ch = 0		2767516	0		=			
ANR	2767864	Identifier	ch		2767516	0					
ANR	2767865	PrimaryExpression	0		2767516	1					
ANR	2767866	Condition	ch < s -> channels	141:21:2111:2126	2767516	1	True				
ANR	2767867	RelationalExpression	ch < s -> channels		2767516	0		<			
ANR	2767868	Identifier	ch		2767516	0					
ANR	2767869	PtrMemberAccess	s -> channels		2767516	1					
ANR	2767870	Identifier	s		2767516	0					
ANR	2767871	Identifier	channels		2767516	1					
ANR	2767872	PostIncDecOperationExpression	ch ++	141:39:2129:2132	2767516	2	True				
ANR	2767873	Identifier	ch		2767516	0					
ANR	2767874	IncDec	++		2767516	1					
ANR	2767875	CompoundStatement		137:45:2002:2002	2767516	3					
ANR	2767876	ExpressionStatement	predictor [ ch ] = ( int16_t ) bytestream_get_le16 ( & buf )	143:12:2150:2200	2767516	0	True				
ANR	2767877	AssignmentExpression	predictor [ ch ] = ( int16_t ) bytestream_get_le16 ( & buf )		2767516	0		=			
ANR	2767878	ArrayIndexing	predictor [ ch ]		2767516	0					
ANR	2767879	Identifier	predictor		2767516	0					
ANR	2767880	Identifier	ch		2767516	1					
ANR	2767881	CastExpression	( int16_t ) bytestream_get_le16 ( & buf )		2767516	1					
ANR	2767882	CastTarget	int16_t		2767516	0					
ANR	2767883	CallExpression	bytestream_get_le16 ( & buf )		2767516	1					
ANR	2767884	Callee	bytestream_get_le16		2767516	0					
ANR	2767885	Identifier	bytestream_get_le16		2767516	0					
ANR	2767886	ArgumentList	& buf		2767516	1					
ANR	2767887	Argument	& buf		2767516	0					
ANR	2767888	UnaryOperationExpression	& buf		2767516	0					
ANR	2767889	UnaryOperator	&		2767516	0					
ANR	2767890	Identifier	buf		2767516	1					
ANR	2767891	ExpressionStatement	* output_samples ++ = predictor [ ch ]	145:12:2215:2248	2767516	1	True				
ANR	2767892	AssignmentExpression	* output_samples ++ = predictor [ ch ]		2767516	0		=			
ANR	2767893	UnaryOperationExpression	* output_samples ++		2767516	0					
ANR	2767894	UnaryOperator	*		2767516	0					
ANR	2767895	PostIncDecOperationExpression	output_samples ++		2767516	1					
ANR	2767896	Identifier	output_samples		2767516	0					
ANR	2767897	IncDec	++		2767516	1					
ANR	2767898	ArrayIndexing	predictor [ ch ]		2767516	1					
ANR	2767899	Identifier	predictor		2767516	0					
ANR	2767900	Identifier	ch		2767516	1					
ANR	2767901	ExpressionStatement	ch = 0	151:8:2272:2278	2767516	8	True				
ANR	2767902	AssignmentExpression	ch = 0		2767516	0		=			
ANR	2767903	Identifier	ch		2767516	0					
ANR	2767904	PrimaryExpression	0		2767516	1					
ANR	2767905	WhileStatement	while ( buf < buf_end )		2767516	9					
ANR	2767906	Condition	buf < buf_end	153:15:2296:2308	2767516	0	True				
ANR	2767907	RelationalExpression	buf < buf_end		2767516	0		<			
ANR	2767908	Identifier	buf		2767516	0					
ANR	2767909	Identifier	buf_end		2767516	1					
ANR	2767910	CompoundStatement		149:30:2178:2178	2767516	1					
ANR	2767911	ExpressionStatement	predictor [ ch ] += interplay_delta_table [ * buf ++ ]	155:12:2326:2372	2767516	0	True				
ANR	2767912	AssignmentExpression	predictor [ ch ] += interplay_delta_table [ * buf ++ ]		2767516	0		+=			
ANR	2767913	ArrayIndexing	predictor [ ch ]		2767516	0					
ANR	2767914	Identifier	predictor		2767516	0					
ANR	2767915	Identifier	ch		2767516	1					
ANR	2767916	ArrayIndexing	interplay_delta_table [ * buf ++ ]		2767516	1					
ANR	2767917	Identifier	interplay_delta_table		2767516	0					
ANR	2767918	UnaryOperationExpression	* buf ++		2767516	1					
ANR	2767919	UnaryOperator	*		2767516	0					
ANR	2767920	PostIncDecOperationExpression	buf ++		2767516	1					
ANR	2767921	Identifier	buf		2767516	0					
ANR	2767922	IncDec	++		2767516	1					
ANR	2767923	ExpressionStatement	predictor [ ch ] = av_clip_int16 ( predictor [ ch ] )	157:12:2387:2432	2767516	1	True				
ANR	2767924	AssignmentExpression	predictor [ ch ] = av_clip_int16 ( predictor [ ch ] )		2767516	0		=			
ANR	2767925	ArrayIndexing	predictor [ ch ]		2767516	0					
ANR	2767926	Identifier	predictor		2767516	0					
ANR	2767927	Identifier	ch		2767516	1					
ANR	2767928	CallExpression	av_clip_int16 ( predictor [ ch ] )		2767516	1					
ANR	2767929	Callee	av_clip_int16		2767516	0					
ANR	2767930	Identifier	av_clip_int16		2767516	0					
ANR	2767931	ArgumentList	predictor [ ch ]		2767516	1					
ANR	2767932	Argument	predictor [ ch ]		2767516	0					
ANR	2767933	ArrayIndexing	predictor [ ch ]		2767516	0					
ANR	2767934	Identifier	predictor		2767516	0					
ANR	2767935	Identifier	ch		2767516	1					
ANR	2767936	ExpressionStatement	* output_samples ++ = predictor [ ch ]	159:12:2447:2480	2767516	2	True				
ANR	2767937	AssignmentExpression	* output_samples ++ = predictor [ ch ]		2767516	0		=			
ANR	2767938	UnaryOperationExpression	* output_samples ++		2767516	0					
ANR	2767939	UnaryOperator	*		2767516	0					
ANR	2767940	PostIncDecOperationExpression	output_samples ++		2767516	1					
ANR	2767941	Identifier	output_samples		2767516	0					
ANR	2767942	IncDec	++		2767516	1					
ANR	2767943	ArrayIndexing	predictor [ ch ]		2767516	1					
ANR	2767944	Identifier	predictor		2767516	0					
ANR	2767945	Identifier	ch		2767516	1					
ANR	2767946	ExpressionStatement	ch ^= stereo	165:12:2531:2543	2767516	3	True				
ANR	2767947	AssignmentExpression	ch ^= stereo		2767516	0		^=			
ANR	2767948	Identifier	ch		2767516	0					
ANR	2767949	Identifier	stereo		2767516	1					
ANR	2767950	BreakStatement	break ;	169:8:2565:2570	2767516	10	True				
ANR	2767951	Label	case CODEC_ID_XAN_DPCM :	173:4:2579:2601	2767516	11	True				
ANR	2767952	Identifier	CODEC_ID_XAN_DPCM		2767516	0					
ANR	2767953	CompoundStatement		173:8:2486:2509	2767516	12					
ANR	2767954	IdentifierDeclStatement	"int shift [ 2 ] = { 4 , 4 } ;"	177:8:2619:2642	2767516	0	True				
ANR	2767955	IdentifierDecl	"shift [ 2 ] = { 4 , 4 }"		2767516	0					
ANR	2767956	IdentifierDeclType	int [ 2 ]		2767516	0					
ANR	2767957	Identifier	shift		2767516	1					
ANR	2767958	PrimaryExpression	2		2767516	2					
ANR	2767959	AssignmentExpression	"shift [ 2 ] = { 4 , 4 }"		2767516	3		=			
ANR	2767960	Identifier	shift		2767516	0					
ANR	2767961	InitializerList	4		2767516	1					
ANR	2767962	PrimaryExpression	4		2767516	0					
ANR	2767963	PrimaryExpression	4		2767516	1					
ANR	2767964	ForStatement	for ( ch = 0 ; ch < s -> channels ; ch ++ )		2767516	1					
ANR	2767965	ForInit	ch = 0 ;	181:13:2660:2666	2767516	0	True				
ANR	2767966	AssignmentExpression	ch = 0		2767516	0		=			
ANR	2767967	Identifier	ch		2767516	0					
ANR	2767968	PrimaryExpression	0		2767516	1					
ANR	2767969	Condition	ch < s -> channels	181:21:2668:2683	2767516	1	True				
ANR	2767970	RelationalExpression	ch < s -> channels		2767516	0		<			
ANR	2767971	Identifier	ch		2767516	0					
ANR	2767972	PtrMemberAccess	s -> channels		2767516	1					
ANR	2767973	Identifier	s		2767516	0					
ANR	2767974	Identifier	channels		2767516	1					
ANR	2767975	PostIncDecOperationExpression	ch ++	181:39:2686:2689	2767516	2	True				
ANR	2767976	Identifier	ch		2767516	0					
ANR	2767977	IncDec	++		2767516	1					
ANR	2767978	ExpressionStatement	predictor [ ch ] = ( int16_t ) bytestream_get_le16 ( & buf )	183:12:2705:2755	2767516	3	True				
ANR	2767979	AssignmentExpression	predictor [ ch ] = ( int16_t ) bytestream_get_le16 ( & buf )		2767516	0		=			
ANR	2767980	ArrayIndexing	predictor [ ch ]		2767516	0					
ANR	2767981	Identifier	predictor		2767516	0					
ANR	2767982	Identifier	ch		2767516	1					
ANR	2767983	CastExpression	( int16_t ) bytestream_get_le16 ( & buf )		2767516	1					
ANR	2767984	CastTarget	int16_t		2767516	0					
ANR	2767985	CallExpression	bytestream_get_le16 ( & buf )		2767516	1					
ANR	2767986	Callee	bytestream_get_le16		2767516	0					
ANR	2767987	Identifier	bytestream_get_le16		2767516	0					
ANR	2767988	ArgumentList	& buf		2767516	1					
ANR	2767989	Argument	& buf		2767516	0					
ANR	2767990	UnaryOperationExpression	& buf		2767516	0					
ANR	2767991	UnaryOperator	&		2767516	0					
ANR	2767992	Identifier	buf		2767516	1					
ANR	2767993	ExpressionStatement	ch = 0	187:8:2768:2774	2767516	2	True				
ANR	2767994	AssignmentExpression	ch = 0		2767516	0		=			
ANR	2767995	Identifier	ch		2767516	0					
ANR	2767996	PrimaryExpression	0		2767516	1					
ANR	2767997	WhileStatement	while ( buf < buf_end )		2767516	3					
ANR	2767998	Condition	buf < buf_end	189:15:2792:2804	2767516	0	True				
ANR	2767999	RelationalExpression	buf < buf_end		2767516	0		<			
ANR	2768000	Identifier	buf		2767516	0					
ANR	2768001	Identifier	buf_end		2767516	1					
ANR	2768002	CompoundStatement		189:12:2722:2752	2767516	1					
ANR	2768003	IdentifierDeclStatement	uint8_t n = * buf ++ ;	191:12:2822:2840	2767516	0	True				
ANR	2768004	IdentifierDecl	n = * buf ++		2767516	0					
ANR	2768005	IdentifierDeclType	uint8_t		2767516	0					
ANR	2768006	Identifier	n		2767516	1					
ANR	2768007	AssignmentExpression	n = * buf ++		2767516	2		=			
ANR	2768008	Identifier	n		2767516	0					
ANR	2768009	UnaryOperationExpression	* buf ++		2767516	1					
ANR	2768010	UnaryOperator	*		2767516	0					
ANR	2768011	PostIncDecOperationExpression	buf ++		2767516	1					
ANR	2768012	Identifier	buf		2767516	0					
ANR	2768013	IncDec	++		2767516	1					
ANR	2768014	IdentifierDeclStatement	int16_t diff = ( n & 0xFC ) << 8 ;	193:12:2855:2885	2767516	1	True				
ANR	2768015	IdentifierDecl	diff = ( n & 0xFC ) << 8		2767516	0					
ANR	2768016	IdentifierDeclType	int16_t		2767516	0					
ANR	2768017	Identifier	diff		2767516	1					
ANR	2768018	AssignmentExpression	diff = ( n & 0xFC ) << 8		2767516	2		=			
ANR	2768019	Identifier	diff		2767516	0					
ANR	2768020	ShiftExpression	( n & 0xFC ) << 8		2767516	1		<<			
ANR	2768021	BitAndExpression	n & 0xFC		2767516	0		&			
ANR	2768022	Identifier	n		2767516	0					
ANR	2768023	PrimaryExpression	0xFC		2767516	1					
ANR	2768024	PrimaryExpression	8		2767516	1					
ANR	2768025	IfStatement	if ( ( n & 0x03 ) == 3 )		2767516	2					
ANR	2768026	Condition	( n & 0x03 ) == 3	195:16:2904:2918	2767516	0	True				
ANR	2768027	EqualityExpression	( n & 0x03 ) == 3		2767516	0		==			
ANR	2768028	BitAndExpression	n & 0x03		2767516	0		&			
ANR	2768029	Identifier	n		2767516	0					
ANR	2768030	PrimaryExpression	0x03		2767516	1					
ANR	2768031	PrimaryExpression	3		2767516	1					
ANR	2768032	ExpressionStatement	shift [ ch ] ++	197:16:2938:2949	2767516	1	True				
ANR	2768033	PostIncDecOperationExpression	shift [ ch ] ++		2767516	0					
ANR	2768034	ArrayIndexing	shift [ ch ]		2767516	0					
ANR	2768035	Identifier	shift		2767516	0					
ANR	2768036	Identifier	ch		2767516	1					
ANR	2768037	IncDec	++		2767516	1					
ANR	2768038	ElseStatement	else		2767516	0					
ANR	2768039	ExpressionStatement	shift [ ch ] -= ( 2 * ( n & 3 ) )	201:16:2986:3012	2767516	0	True				
ANR	2768040	AssignmentExpression	shift [ ch ] -= ( 2 * ( n & 3 ) )		2767516	0		-=			
ANR	2768041	ArrayIndexing	shift [ ch ]		2767516	0					
ANR	2768042	Identifier	shift		2767516	0					
ANR	2768043	Identifier	ch		2767516	1					
ANR	2768044	MultiplicativeExpression	2 * ( n & 3 )		2767516	1		*			
ANR	2768045	PrimaryExpression	2		2767516	0					
ANR	2768046	BitAndExpression	n & 3		2767516	1		&			
ANR	2768047	Identifier	n		2767516	0					
ANR	2768048	PrimaryExpression	3		2767516	1					
ANR	2768049	IfStatement	if ( shift [ ch ] < 0 )		2767516	3					
ANR	2768050	Condition	shift [ ch ] < 0	205:16:3093:3105	2767516	0	True				
ANR	2768051	RelationalExpression	shift [ ch ] < 0		2767516	0		<			
ANR	2768052	ArrayIndexing	shift [ ch ]		2767516	0					
ANR	2768053	Identifier	shift		2767516	0					
ANR	2768054	Identifier	ch		2767516	1					
ANR	2768055	PrimaryExpression	0		2767516	1					
ANR	2768056	ExpressionStatement	shift [ ch ] = 0	207:16:3125:3138	2767516	1	True				
ANR	2768057	AssignmentExpression	shift [ ch ] = 0		2767516	0		=			
ANR	2768058	ArrayIndexing	shift [ ch ]		2767516	0					
ANR	2768059	Identifier	shift		2767516	0					
ANR	2768060	Identifier	ch		2767516	1					
ANR	2768061	PrimaryExpression	0		2767516	1					
ANR	2768062	ExpressionStatement	diff >>= shift [ ch ]	211:12:3155:3173	2767516	4	True				
ANR	2768063	AssignmentExpression	diff >>= shift [ ch ]		2767516	0		>>=			
ANR	2768064	Identifier	diff		2767516	0					
ANR	2768065	ArrayIndexing	shift [ ch ]		2767516	1					
ANR	2768066	Identifier	shift		2767516	0					
ANR	2768067	Identifier	ch		2767516	1					
ANR	2768068	ExpressionStatement	predictor [ ch ] += diff	213:12:3188:3209	2767516	5	True				
ANR	2768069	AssignmentExpression	predictor [ ch ] += diff		2767516	0		+=			
ANR	2768070	ArrayIndexing	predictor [ ch ]		2767516	0					
ANR	2768071	Identifier	predictor		2767516	0					
ANR	2768072	Identifier	ch		2767516	1					
ANR	2768073	Identifier	diff		2767516	1					
ANR	2768074	ExpressionStatement	predictor [ ch ] = av_clip_int16 ( predictor [ ch ] )	217:12:3226:3270	2767516	6	True				
ANR	2768075	AssignmentExpression	predictor [ ch ] = av_clip_int16 ( predictor [ ch ] )		2767516	0		=			
ANR	2768076	ArrayIndexing	predictor [ ch ]		2767516	0					
ANR	2768077	Identifier	predictor		2767516	0					
ANR	2768078	Identifier	ch		2767516	1					
ANR	2768079	CallExpression	av_clip_int16 ( predictor [ ch ] )		2767516	1					
ANR	2768080	Callee	av_clip_int16		2767516	0					
ANR	2768081	Identifier	av_clip_int16		2767516	0					
ANR	2768082	ArgumentList	predictor [ ch ]		2767516	1					
ANR	2768083	Argument	predictor [ ch ]		2767516	0					
ANR	2768084	ArrayIndexing	predictor [ ch ]		2767516	0					
ANR	2768085	Identifier	predictor		2767516	0					
ANR	2768086	Identifier	ch		2767516	1					
ANR	2768087	ExpressionStatement	* output_samples ++ = predictor [ ch ]	219:12:3285:3318	2767516	7	True				
ANR	2768088	AssignmentExpression	* output_samples ++ = predictor [ ch ]		2767516	0		=			
ANR	2768089	UnaryOperationExpression	* output_samples ++		2767516	0					
ANR	2768090	UnaryOperator	*		2767516	0					
ANR	2768091	PostIncDecOperationExpression	output_samples ++		2767516	1					
ANR	2768092	Identifier	output_samples		2767516	0					
ANR	2768093	IncDec	++		2767516	1					
ANR	2768094	ArrayIndexing	predictor [ ch ]		2767516	1					
ANR	2768095	Identifier	predictor		2767516	0					
ANR	2768096	Identifier	ch		2767516	1					
ANR	2768097	ExpressionStatement	ch ^= stereo	225:12:3369:3381	2767516	8	True				
ANR	2768098	AssignmentExpression	ch ^= stereo		2767516	0		^=			
ANR	2768099	Identifier	ch		2767516	0					
ANR	2768100	Identifier	stereo		2767516	1					
ANR	2768101	BreakStatement	break ;	229:8:3403:3408	2767516	4	True				
ANR	2768102	Label	case CODEC_ID_SOL_DPCM :	233:4:3422:3444	2767516	13	True				
ANR	2768103	Identifier	CODEC_ID_SOL_DPCM		2767516	0					
ANR	2768104	IfStatement	if ( avctx -> codec_tag != 3 )		2767516	14					
ANR	2768105	Condition	avctx -> codec_tag != 3	235:12:3459:3479	2767516	0	True				
ANR	2768106	EqualityExpression	avctx -> codec_tag != 3		2767516	0		!=			
ANR	2768107	PtrMemberAccess	avctx -> codec_tag		2767516	0					
ANR	2768108	Identifier	avctx		2767516	0					
ANR	2768109	Identifier	codec_tag		2767516	1					
ANR	2768110	PrimaryExpression	3		2767516	1					
ANR	2768111	CompoundStatement		233:12:3364:3397	2767516	1					
ANR	2768112	IdentifierDeclStatement	uint8_t * output_samples_u8 = data ;	237:12:3497:3530	2767516	0	True				
ANR	2768113	IdentifierDecl	* output_samples_u8 = data		2767516	0					
ANR	2768114	IdentifierDeclType	uint8_t *		2767516	0					
ANR	2768115	Identifier	output_samples_u8		2767516	1					
ANR	2768116	AssignmentExpression	* output_samples_u8 = data		2767516	2		=			
ANR	2768117	Identifier	data		2767516	0					
ANR	2768118	Identifier	data		2767516	1					
ANR	2768119	WhileStatement	while ( buf < buf_end )		2767516	1					
ANR	2768120	Condition	buf < buf_end	239:19:3552:3564	2767516	0	True				
ANR	2768121	RelationalExpression	buf < buf_end		2767516	0		<			
ANR	2768122	Identifier	buf		2767516	0					
ANR	2768123	Identifier	buf_end		2767516	1					
ANR	2768124	CompoundStatement		237:16:3453:3471	2767516	1					
ANR	2768125	IdentifierDeclStatement	uint8_t n = * buf ++ ;	241:16:3586:3604	2767516	0	True				
ANR	2768126	IdentifierDecl	n = * buf ++		2767516	0					
ANR	2768127	IdentifierDeclType	uint8_t		2767516	0					
ANR	2768128	Identifier	n		2767516	1					
ANR	2768129	AssignmentExpression	n = * buf ++		2767516	2		=			
ANR	2768130	Identifier	n		2767516	0					
ANR	2768131	UnaryOperationExpression	* buf ++		2767516	1					
ANR	2768132	UnaryOperator	*		2767516	0					
ANR	2768133	PostIncDecOperationExpression	buf ++		2767516	1					
ANR	2768134	Identifier	buf		2767516	0					
ANR	2768135	IncDec	++		2767516	1					
ANR	2768136	ExpressionStatement	s -> sample [ 0 ] += s -> sol_table [ n >> 4 ]	245:16:3625:3661	2767516	1	True				
ANR	2768137	AssignmentExpression	s -> sample [ 0 ] += s -> sol_table [ n >> 4 ]		2767516	0		+=			
ANR	2768138	ArrayIndexing	s -> sample [ 0 ]		2767516	0					
ANR	2768139	PtrMemberAccess	s -> sample		2767516	0					
ANR	2768140	Identifier	s		2767516	0					
ANR	2768141	Identifier	sample		2767516	1					
ANR	2768142	PrimaryExpression	0		2767516	1					
ANR	2768143	ArrayIndexing	s -> sol_table [ n >> 4 ]		2767516	1					
ANR	2768144	PtrMemberAccess	s -> sol_table		2767516	0					
ANR	2768145	Identifier	s		2767516	0					
ANR	2768146	Identifier	sol_table		2767516	1					
ANR	2768147	ShiftExpression	n >> 4		2767516	1		>>			
ANR	2768148	Identifier	n		2767516	0					
ANR	2768149	PrimaryExpression	4		2767516	1					
ANR	2768150	ExpressionStatement	s -> sample [ 0 ] = av_clip_uint8 ( s -> sample [ 0 ] )	247:16:3680:3723	2767516	2	True				
ANR	2768151	AssignmentExpression	s -> sample [ 0 ] = av_clip_uint8 ( s -> sample [ 0 ] )		2767516	0		=			
ANR	2768152	ArrayIndexing	s -> sample [ 0 ]		2767516	0					
ANR	2768153	PtrMemberAccess	s -> sample		2767516	0					
ANR	2768154	Identifier	s		2767516	0					
ANR	2768155	Identifier	sample		2767516	1					
ANR	2768156	PrimaryExpression	0		2767516	1					
ANR	2768157	CallExpression	av_clip_uint8 ( s -> sample [ 0 ] )		2767516	1					
ANR	2768158	Callee	av_clip_uint8		2767516	0					
ANR	2768159	Identifier	av_clip_uint8		2767516	0					
ANR	2768160	ArgumentList	s -> sample [ 0 ]		2767516	1					
ANR	2768161	Argument	s -> sample [ 0 ]		2767516	0					
ANR	2768162	ArrayIndexing	s -> sample [ 0 ]		2767516	0					
ANR	2768163	PtrMemberAccess	s -> sample		2767516	0					
ANR	2768164	Identifier	s		2767516	0					
ANR	2768165	Identifier	sample		2767516	1					
ANR	2768166	PrimaryExpression	0		2767516	1					
ANR	2768167	ExpressionStatement	* output_samples_u8 ++ = s -> sample [ 0 ]	249:16:3742:3777	2767516	3	True				
ANR	2768168	AssignmentExpression	* output_samples_u8 ++ = s -> sample [ 0 ]		2767516	0		=			
ANR	2768169	UnaryOperationExpression	* output_samples_u8 ++		2767516	0					
ANR	2768170	UnaryOperator	*		2767516	0					
ANR	2768171	PostIncDecOperationExpression	output_samples_u8 ++		2767516	1					
ANR	2768172	Identifier	output_samples_u8		2767516	0					
ANR	2768173	IncDec	++		2767516	1					
ANR	2768174	ArrayIndexing	s -> sample [ 0 ]		2767516	1					
ANR	2768175	PtrMemberAccess	s -> sample		2767516	0					
ANR	2768176	Identifier	s		2767516	0					
ANR	2768177	Identifier	sample		2767516	1					
ANR	2768178	PrimaryExpression	0		2767516	1					
ANR	2768179	ExpressionStatement	s -> sample [ stereo ] += s -> sol_table [ n & 0x0F ]	253:16:3798:3841	2767516	4	True				
ANR	2768180	AssignmentExpression	s -> sample [ stereo ] += s -> sol_table [ n & 0x0F ]		2767516	0		+=			
ANR	2768181	ArrayIndexing	s -> sample [ stereo ]		2767516	0					
ANR	2768182	PtrMemberAccess	s -> sample		2767516	0					
ANR	2768183	Identifier	s		2767516	0					
ANR	2768184	Identifier	sample		2767516	1					
ANR	2768185	Identifier	stereo		2767516	1					
ANR	2768186	ArrayIndexing	s -> sol_table [ n & 0x0F ]		2767516	1					
ANR	2768187	PtrMemberAccess	s -> sol_table		2767516	0					
ANR	2768188	Identifier	s		2767516	0					
ANR	2768189	Identifier	sol_table		2767516	1					
ANR	2768190	BitAndExpression	n & 0x0F		2767516	1		&			
ANR	2768191	Identifier	n		2767516	0					
ANR	2768192	PrimaryExpression	0x0F		2767516	1					
ANR	2768193	ExpressionStatement	s -> sample [ stereo ] = av_clip_uint8 ( s -> sample [ stereo ] )	255:16:3860:3913	2767516	5	True				
ANR	2768194	AssignmentExpression	s -> sample [ stereo ] = av_clip_uint8 ( s -> sample [ stereo ] )		2767516	0		=			
ANR	2768195	ArrayIndexing	s -> sample [ stereo ]		2767516	0					
ANR	2768196	PtrMemberAccess	s -> sample		2767516	0					
ANR	2768197	Identifier	s		2767516	0					
ANR	2768198	Identifier	sample		2767516	1					
ANR	2768199	Identifier	stereo		2767516	1					
ANR	2768200	CallExpression	av_clip_uint8 ( s -> sample [ stereo ] )		2767516	1					
ANR	2768201	Callee	av_clip_uint8		2767516	0					
ANR	2768202	Identifier	av_clip_uint8		2767516	0					
ANR	2768203	ArgumentList	s -> sample [ stereo ]		2767516	1					
ANR	2768204	Argument	s -> sample [ stereo ]		2767516	0					
ANR	2768205	ArrayIndexing	s -> sample [ stereo ]		2767516	0					
ANR	2768206	PtrMemberAccess	s -> sample		2767516	0					
ANR	2768207	Identifier	s		2767516	0					
ANR	2768208	Identifier	sample		2767516	1					
ANR	2768209	Identifier	stereo		2767516	1					
ANR	2768210	ExpressionStatement	* output_samples_u8 ++ = s -> sample [ stereo ]	257:16:3932:3972	2767516	6	True				
ANR	2768211	AssignmentExpression	* output_samples_u8 ++ = s -> sample [ stereo ]		2767516	0		=			
ANR	2768212	UnaryOperationExpression	* output_samples_u8 ++		2767516	0					
ANR	2768213	UnaryOperator	*		2767516	0					
ANR	2768214	PostIncDecOperationExpression	output_samples_u8 ++		2767516	1					
ANR	2768215	Identifier	output_samples_u8		2767516	0					
ANR	2768216	IncDec	++		2767516	1					
ANR	2768217	ArrayIndexing	s -> sample [ stereo ]		2767516	1					
ANR	2768218	PtrMemberAccess	s -> sample		2767516	0					
ANR	2768219	Identifier	s		2767516	0					
ANR	2768220	Identifier	sample		2767516	1					
ANR	2768221	Identifier	stereo		2767516	1					
ANR	2768222	ElseStatement	else		2767516	0					
ANR	2768223	CompoundStatement		257:15:3872:3872	2767516	0					
ANR	2768224	WhileStatement	while ( buf < buf_end )		2767516	0					
ANR	2768225	Condition	buf < buf_end	263:19:4027:4039	2767516	0	True				
ANR	2768226	RelationalExpression	buf < buf_end		2767516	0		<			
ANR	2768227	Identifier	buf		2767516	0					
ANR	2768228	Identifier	buf_end		2767516	1					
ANR	2768229	CompoundStatement		261:16:3928:3946	2767516	1					
ANR	2768230	IdentifierDeclStatement	uint8_t n = * buf ++ ;	265:16:4061:4079	2767516	0	True				
ANR	2768231	IdentifierDecl	n = * buf ++		2767516	0					
ANR	2768232	IdentifierDeclType	uint8_t		2767516	0					
ANR	2768233	Identifier	n		2767516	1					
ANR	2768234	AssignmentExpression	n = * buf ++		2767516	2		=			
ANR	2768235	Identifier	n		2767516	0					
ANR	2768236	UnaryOperationExpression	* buf ++		2767516	1					
ANR	2768237	UnaryOperator	*		2767516	0					
ANR	2768238	PostIncDecOperationExpression	buf ++		2767516	1					
ANR	2768239	Identifier	buf		2767516	0					
ANR	2768240	IncDec	++		2767516	1					
ANR	2768241	IfStatement	if ( n & 0x80 )		2767516	1					
ANR	2768242	Condition	n & 0x80	267:20:4102:4109	2767516	0	True				
ANR	2768243	BitAndExpression	n & 0x80		2767516	0		&			
ANR	2768244	Identifier	n		2767516	0					
ANR	2768245	PrimaryExpression	0x80		2767516	1					
ANR	2768246	ExpressionStatement	s -> sample [ ch ] -= sol_table_16 [ n & 0x7F ]	267:30:4112:4151	2767516	1	True				
ANR	2768247	AssignmentExpression	s -> sample [ ch ] -= sol_table_16 [ n & 0x7F ]		2767516	0		-=			
ANR	2768248	ArrayIndexing	s -> sample [ ch ]		2767516	0					
ANR	2768249	PtrMemberAccess	s -> sample		2767516	0					
ANR	2768250	Identifier	s		2767516	0					
ANR	2768251	Identifier	sample		2767516	1					
ANR	2768252	Identifier	ch		2767516	1					
ANR	2768253	ArrayIndexing	sol_table_16 [ n & 0x7F ]		2767516	1					
ANR	2768254	Identifier	sol_table_16		2767516	0					
ANR	2768255	BitAndExpression	n & 0x7F		2767516	1		&			
ANR	2768256	Identifier	n		2767516	0					
ANR	2768257	PrimaryExpression	0x7F		2767516	1					
ANR	2768258	ElseStatement	else		2767516	0					
ANR	2768259	ExpressionStatement	s -> sample [ ch ] += sol_table_16 [ n & 0x7F ]	269:30:4184:4223	2767516	0	True				
ANR	2768260	AssignmentExpression	s -> sample [ ch ] += sol_table_16 [ n & 0x7F ]		2767516	0		+=			
ANR	2768261	ArrayIndexing	s -> sample [ ch ]		2767516	0					
ANR	2768262	PtrMemberAccess	s -> sample		2767516	0					
ANR	2768263	Identifier	s		2767516	0					
ANR	2768264	Identifier	sample		2767516	1					
ANR	2768265	Identifier	ch		2767516	1					
ANR	2768266	ArrayIndexing	sol_table_16 [ n & 0x7F ]		2767516	1					
ANR	2768267	Identifier	sol_table_16		2767516	0					
ANR	2768268	BitAndExpression	n & 0x7F		2767516	1		&			
ANR	2768269	Identifier	n		2767516	0					
ANR	2768270	PrimaryExpression	0x7F		2767516	1					
ANR	2768271	ExpressionStatement	s -> sample [ ch ] = av_clip_int16 ( s -> sample [ ch ] )	271:16:4242:4286	2767516	2	True				
ANR	2768272	AssignmentExpression	s -> sample [ ch ] = av_clip_int16 ( s -> sample [ ch ] )		2767516	0		=			
ANR	2768273	ArrayIndexing	s -> sample [ ch ]		2767516	0					
ANR	2768274	PtrMemberAccess	s -> sample		2767516	0					
ANR	2768275	Identifier	s		2767516	0					
ANR	2768276	Identifier	sample		2767516	1					
ANR	2768277	Identifier	ch		2767516	1					
ANR	2768278	CallExpression	av_clip_int16 ( s -> sample [ ch ] )		2767516	1					
ANR	2768279	Callee	av_clip_int16		2767516	0					
ANR	2768280	Identifier	av_clip_int16		2767516	0					
ANR	2768281	ArgumentList	s -> sample [ ch ]		2767516	1					
ANR	2768282	Argument	s -> sample [ ch ]		2767516	0					
ANR	2768283	ArrayIndexing	s -> sample [ ch ]		2767516	0					
ANR	2768284	PtrMemberAccess	s -> sample		2767516	0					
ANR	2768285	Identifier	s		2767516	0					
ANR	2768286	Identifier	sample		2767516	1					
ANR	2768287	Identifier	ch		2767516	1					
ANR	2768288	ExpressionStatement	* output_samples ++ = s -> sample [ ch ]	273:16:4305:4338	2767516	3	True				
ANR	2768289	AssignmentExpression	* output_samples ++ = s -> sample [ ch ]		2767516	0		=			
ANR	2768290	UnaryOperationExpression	* output_samples ++		2767516	0					
ANR	2768291	UnaryOperator	*		2767516	0					
ANR	2768292	PostIncDecOperationExpression	output_samples ++		2767516	1					
ANR	2768293	Identifier	output_samples		2767516	0					
ANR	2768294	IncDec	++		2767516	1					
ANR	2768295	ArrayIndexing	s -> sample [ ch ]		2767516	1					
ANR	2768296	PtrMemberAccess	s -> sample		2767516	0					
ANR	2768297	Identifier	s		2767516	0					
ANR	2768298	Identifier	sample		2767516	1					
ANR	2768299	Identifier	ch		2767516	1					
ANR	2768300	ExpressionStatement	ch ^= stereo	277:16:4395:4407	2767516	4	True				
ANR	2768301	AssignmentExpression	ch ^= stereo		2767516	0		^=			
ANR	2768302	Identifier	ch		2767516	0					
ANR	2768303	Identifier	stereo		2767516	1					
ANR	2768304	BreakStatement	break ;	283:8:4444:4449	2767516	15	True				
ANR	2768305	ExpressionStatement	* got_frame_ptr = 1	289:4:4465:4485	2767516	15	True				
ANR	2768306	AssignmentExpression	* got_frame_ptr = 1		2767516	0		=			
ANR	2768307	UnaryOperationExpression	* got_frame_ptr		2767516	0					
ANR	2768308	UnaryOperator	*		2767516	0					
ANR	2768309	Identifier	got_frame_ptr		2767516	1					
ANR	2768310	PrimaryExpression	1		2767516	1					
ANR	2768311	ExpressionStatement	* ( AVFrame * ) data = s -> frame	291:4:4492:4519	2767516	16	True				
ANR	2768312	AssignmentExpression	* ( AVFrame * ) data = s -> frame		2767516	0		=			
ANR	2768313	UnaryOperationExpression	* ( AVFrame * ) data		2767516	0					
ANR	2768314	UnaryOperator	*		2767516	0					
ANR	2768315	CastExpression	( AVFrame * ) data		2767516	1					
ANR	2768316	CastTarget	AVFrame *		2767516	0					
ANR	2768317	Identifier	data		2767516	1					
ANR	2768318	PtrMemberAccess	s -> frame		2767516	1					
ANR	2768319	Identifier	s		2767516	0					
ANR	2768320	Identifier	frame		2767516	1					
ANR	2768321	ReturnStatement	return buf_size ;	295:4:4528:4543	2767516	17	True				
ANR	2768322	Identifier	buf_size		2767516	0					
ANR	2768323	ReturnType	static int		2767516	1					
ANR	2768324	Identifier	dpcm_decode_frame		2767516	2					
ANR	2768325	ParameterList	"AVCodecContext * avctx , void * data , int * got_frame_ptr , AVPacket * avpkt"		2767516	3					
ANR	2768326	Parameter	AVCodecContext * avctx	1:29:29:49	2767516	0	True				
ANR	2768327	ParameterType	AVCodecContext *		2767516	0					
ANR	2768328	Identifier	avctx		2767516	1					
ANR	2768329	Parameter	void * data	1:52:52:61	2767516	1	True				
ANR	2768330	ParameterType	void *		2767516	0					
ANR	2768331	Identifier	data		2767516	1					
ANR	2768332	Parameter	int * got_frame_ptr	3:29:94:111	2767516	2	True				
ANR	2768333	ParameterType	int *		2767516	0					
ANR	2768334	Identifier	got_frame_ptr		2767516	1					
ANR	2768335	Parameter	AVPacket * avpkt	3:49:114:128	2767516	3	True				
ANR	2768336	ParameterType	AVPacket *		2767516	0					
ANR	2768337	Identifier	avpkt		2767516	1					
ANR	2768338	CFGEntryNode	ENTRY		2767516		True				
ANR	2768339	CFGExitNode	EXIT		2767516		True				
ANR	2768340	Symbol	data		2767516						
ANR	2768341	Symbol	s -> sample		2767516						
ANR	2768342	Symbol	shift		2767516						
ANR	2768343	Symbol	* sol_table_16		2767516						
ANR	2768344	Symbol	s -> frame . data		2767516						
ANR	2768345	Symbol	* ch		2767516						
ANR	2768346	Symbol	got_frame_ptr		2767516						
ANR	2768347	Symbol	avpkt		2767516						
ANR	2768348	Symbol	* interplay_delta_table		2767516						
ANR	2768349	Symbol	* s -> frame		2767516						
ANR	2768350	Symbol	* output_samples ++		2767516						
ANR	2768351	Symbol	* avctx -> codec		2767516						
ANR	2768352	Symbol	s -> frame		2767516						
ANR	2768353	Symbol	buf_end		2767516						
ANR	2768354	Symbol	* output_samples_u8 ++		2767516						
ANR	2768355	Symbol	ret		2767516						
ANR	2768356	Symbol	avctx -> codec		2767516						
ANR	2768357	Symbol	* s -> sol_table		2767516						
ANR	2768358	Symbol	buf_size		2767516						
ANR	2768359	Symbol	* stereo		2767516						
ANR	2768360	Symbol	output_samples		2767516						
ANR	2768361	Symbol	* * avctx		2767516						
ANR	2768362	Symbol	diff		2767516						
ANR	2768363	Symbol	* s -> sample		2767516						
ANR	2768364	Symbol	bytestream_get_le16		2767516						
ANR	2768365	Symbol	s -> roq_square_array		2767516						
ANR	2768366	Symbol	* avctx		2767516						
ANR	2768367	Symbol	* * buf ++		2767516						
ANR	2768368	Symbol	stereo		2767516						
ANR	2768369	Symbol	av_clip_int16		2767516						
ANR	2768370	Symbol	avpkt -> data		2767516						
ANR	2768371	Symbol	& s -> frame		2767516						
ANR	2768372	Symbol	* s -> roq_square_array		2767516						
ANR	2768373	Symbol	s -> sol_table		2767516						
ANR	2768374	Symbol	av_clip_uint8		2767516						
ANR	2768375	Symbol	interplay_delta_table		2767516						
ANR	2768376	Symbol	output_samples_u8		2767516						
ANR	2768377	Symbol	s -> channels		2767516						
ANR	2768378	Symbol	out		2767516						
ANR	2768379	Symbol	* s -> frame . data		2767516						
ANR	2768380	Symbol	s -> frame . nb_samples		2767516						
ANR	2768381	Symbol	* * s		2767516						
ANR	2768382	Symbol	avpkt -> size		2767516						
ANR	2768383	Symbol	predictor		2767516						
ANR	2768384	Symbol	avctx		2767516						
ANR	2768385	Symbol	avctx -> codec_tag		2767516						
ANR	2768386	Symbol	* predictor		2767516						
ANR	2768387	Symbol	& buf		2767516						
ANR	2768388	Symbol	* avpkt		2767516						
ANR	2768389	Symbol	AV_LOG_ERROR		2767516						
ANR	2768390	Symbol	avctx -> get_buffer		2767516						
ANR	2768391	Symbol	ch		2767516						
ANR	2768392	Symbol	bytestream_get_byte		2767516						
ANR	2768393	Symbol	* got_frame_ptr		2767516						
ANR	2768394	Symbol	* shift		2767516						
ANR	2768395	Symbol	avctx -> priv_data		2767516						
ANR	2768396	Symbol	n		2767516						
ANR	2768397	Symbol	EINVAL		2767516						
ANR	2768398	Symbol	* buf ++		2767516						
ANR	2768399	Symbol	avctx -> codec -> id		2767516						
ANR	2768400	Symbol	buf		2767516						
ANR	2768401	Symbol	s		2767516						
ANR	2768402	Symbol	* n		2767516						
ANR	2768403	Symbol	AVERROR		2767516						
ANR	2768404	Symbol	* ( AVFrame * ) data		2767516						
ANR	2768405	Symbol	* s		2767516						
ANR	2768406	Symbol	sol_table_16		2767516						
ANR	2768407	Symbol	* data		2767516						
