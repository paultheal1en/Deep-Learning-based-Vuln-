command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8087833	File	/home/p4ultr4n/workplace/ReVeal/raw_code/svq3_luma_dc_dequant_idct_c_1.c								
ANR	8087834	Function	svq3_luma_dc_dequant_idct_c	1:0:0:1417							
ANR	8087835	FunctionDef	"svq3_luma_dc_dequant_idct_c (int16_t * output , int16_t * input , int qp)"		8087834	0					
ANR	8087836	CompoundStatement		3:0:82:1417	8087834	0					
ANR	8087837	IdentifierDeclStatement	const int qmul = svq3_dequant_coeff [ qp ] ;	5:4:89:128	8087834	0	True				
ANR	8087838	IdentifierDecl	qmul = svq3_dequant_coeff [ qp ]		8087834	0					
ANR	8087839	IdentifierDeclType	const int		8087834	0					
ANR	8087840	Identifier	qmul		8087834	1					
ANR	8087841	AssignmentExpression	qmul = svq3_dequant_coeff [ qp ]		8087834	2		=			
ANR	8087842	Identifier	qmul		8087834	0					
ANR	8087843	ArrayIndexing	svq3_dequant_coeff [ qp ]		8087834	1					
ANR	8087844	Identifier	svq3_dequant_coeff		8087834	0					
ANR	8087845	Identifier	qp		8087834	1					
ANR	8087846	Statement	define	7:1:132:137	8087834	1	True				
ANR	8087847	Statement	stride	7:8:139:144	8087834	2	True				
ANR	8087848	Statement	16	7:15:146:147	8087834	3	True				
ANR	8087849	IdentifierDeclStatement	int i ;	9:4:154:159	8087834	4	True				
ANR	8087850	IdentifierDecl	i		8087834	0					
ANR	8087851	IdentifierDeclType	int		8087834	0					
ANR	8087852	Identifier	i		8087834	1					
ANR	8087853	IdentifierDeclStatement	int temp [ 16 ] ;	11:4:166:178	8087834	5	True				
ANR	8087854	IdentifierDecl	temp [ 16 ]		8087834	0					
ANR	8087855	IdentifierDeclType	int [ 16 ]		8087834	0					
ANR	8087856	Identifier	temp		8087834	1					
ANR	8087857	PrimaryExpression	16		8087834	2					
ANR	8087858	Statement	static	13:4:185:190	8087834	6	True				
ANR	8087859	IdentifierDeclStatement	"const uint8_t x_offset [ 4 ] = { 0 , 1 * stride , 4 * stride , 5 * stride } ;"	13:11:192:261	8087834	7	True				
ANR	8087860	IdentifierDecl	"x_offset [ 4 ] = { 0 , 1 * stride , 4 * stride , 5 * stride }"		8087834	0					
ANR	8087861	IdentifierDeclType	const uint8_t [ 4 ]		8087834	0					
ANR	8087862	Identifier	x_offset		8087834	1					
ANR	8087863	PrimaryExpression	4		8087834	2					
ANR	8087864	AssignmentExpression	"x_offset [ 4 ] = { 0 , 1 * stride , 4 * stride , 5 * stride }"		8087834	3		=			
ANR	8087865	Identifier	x_offset		8087834	0					
ANR	8087866	InitializerList	0		8087834	1					
ANR	8087867	PrimaryExpression	0		8087834	0					
ANR	8087868	MultiplicativeExpression	1 * stride		8087834	1		*			
ANR	8087869	PrimaryExpression	1		8087834	0					
ANR	8087870	Identifier	stride		8087834	1					
ANR	8087871	MultiplicativeExpression	4 * stride		8087834	2		*			
ANR	8087872	PrimaryExpression	4		8087834	0					
ANR	8087873	Identifier	stride		8087834	1					
ANR	8087874	MultiplicativeExpression	5 * stride		8087834	3		*			
ANR	8087875	PrimaryExpression	5		8087834	0					
ANR	8087876	Identifier	stride		8087834	1					
ANR	8087877	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		8087834	8					
ANR	8087878	ForInit	i = 0 ;	17:9:275:280	8087834	0	True				
ANR	8087879	AssignmentExpression	i = 0		8087834	0		=			
ANR	8087880	Identifier	i		8087834	0					
ANR	8087881	PrimaryExpression	0		8087834	1					
ANR	8087882	Condition	i < 4	17:16:282:286	8087834	1	True				
ANR	8087883	RelationalExpression	i < 4		8087834	0		<			
ANR	8087884	Identifier	i		8087834	0					
ANR	8087885	PrimaryExpression	4		8087834	1					
ANR	8087886	PostIncDecOperationExpression	i ++	17:23:289:291	8087834	2	True				
ANR	8087887	Identifier	i		8087834	0					
ANR	8087888	IncDec	++		8087834	1					
ANR	8087889	CompoundStatement		23:8:440:501	8087834	3					
ANR	8087890	IdentifierDeclStatement	const int z0 = 13 * ( input [ 4 * i + 0 ] + input [ 4 * i + 2 ] ) ;	19:8:305:367	8087834	0	True				
ANR	8087891	IdentifierDecl	z0 = 13 * ( input [ 4 * i + 0 ] + input [ 4 * i + 2 ] )		8087834	0					
ANR	8087892	IdentifierDeclType	const int		8087834	0					
ANR	8087893	Identifier	z0		8087834	1					
ANR	8087894	AssignmentExpression	z0 = 13 * ( input [ 4 * i + 0 ] + input [ 4 * i + 2 ] )		8087834	2		=			
ANR	8087895	Identifier	z0		8087834	0					
ANR	8087896	MultiplicativeExpression	13 * ( input [ 4 * i + 0 ] + input [ 4 * i + 2 ] )		8087834	1		*			
ANR	8087897	PrimaryExpression	13		8087834	0					
ANR	8087898	AdditiveExpression	input [ 4 * i + 0 ] + input [ 4 * i + 2 ]		8087834	1		+			
ANR	8087899	ArrayIndexing	input [ 4 * i + 0 ]		8087834	0					
ANR	8087900	Identifier	input		8087834	0					
ANR	8087901	AdditiveExpression	4 * i + 0		8087834	1		+			
ANR	8087902	MultiplicativeExpression	4 * i		8087834	0		*			
ANR	8087903	PrimaryExpression	4		8087834	0					
ANR	8087904	Identifier	i		8087834	1					
ANR	8087905	PrimaryExpression	0		8087834	1					
ANR	8087906	ArrayIndexing	input [ 4 * i + 2 ]		8087834	1					
ANR	8087907	Identifier	input		8087834	0					
ANR	8087908	AdditiveExpression	4 * i + 2		8087834	1		+			
ANR	8087909	MultiplicativeExpression	4 * i		8087834	0		*			
ANR	8087910	PrimaryExpression	4		8087834	0					
ANR	8087911	Identifier	i		8087834	1					
ANR	8087912	PrimaryExpression	2		8087834	1					
ANR	8087913	IdentifierDeclStatement	const int z1 = 13 * ( input [ 4 * i + 0 ] - input [ 4 * i + 2 ] ) ;	21:8:378:440	8087834	1	True				
ANR	8087914	IdentifierDecl	z1 = 13 * ( input [ 4 * i + 0 ] - input [ 4 * i + 2 ] )		8087834	0					
ANR	8087915	IdentifierDeclType	const int		8087834	0					
ANR	8087916	Identifier	z1		8087834	1					
ANR	8087917	AssignmentExpression	z1 = 13 * ( input [ 4 * i + 0 ] - input [ 4 * i + 2 ] )		8087834	2		=			
ANR	8087918	Identifier	z1		8087834	0					
ANR	8087919	MultiplicativeExpression	13 * ( input [ 4 * i + 0 ] - input [ 4 * i + 2 ] )		8087834	1		*			
ANR	8087920	PrimaryExpression	13		8087834	0					
ANR	8087921	AdditiveExpression	input [ 4 * i + 0 ] - input [ 4 * i + 2 ]		8087834	1		-			
ANR	8087922	ArrayIndexing	input [ 4 * i + 0 ]		8087834	0					
ANR	8087923	Identifier	input		8087834	0					
ANR	8087924	AdditiveExpression	4 * i + 0		8087834	1		+			
ANR	8087925	MultiplicativeExpression	4 * i		8087834	0		*			
ANR	8087926	PrimaryExpression	4		8087834	0					
ANR	8087927	Identifier	i		8087834	1					
ANR	8087928	PrimaryExpression	0		8087834	1					
ANR	8087929	ArrayIndexing	input [ 4 * i + 2 ]		8087834	1					
ANR	8087930	Identifier	input		8087834	0					
ANR	8087931	AdditiveExpression	4 * i + 2		8087834	1		+			
ANR	8087932	MultiplicativeExpression	4 * i		8087834	0		*			
ANR	8087933	PrimaryExpression	4		8087834	0					
ANR	8087934	Identifier	i		8087834	1					
ANR	8087935	PrimaryExpression	2		8087834	1					
ANR	8087936	IdentifierDeclStatement	const int z2 = 7 * input [ 4 * i + 1 ] - 17 * input [ 4 * i + 3 ] ;	23:8:451:512	8087834	2	True				
ANR	8087937	IdentifierDecl	z2 = 7 * input [ 4 * i + 1 ] - 17 * input [ 4 * i + 3 ]		8087834	0					
ANR	8087938	IdentifierDeclType	const int		8087834	0					
ANR	8087939	Identifier	z2		8087834	1					
ANR	8087940	AssignmentExpression	z2 = 7 * input [ 4 * i + 1 ] - 17 * input [ 4 * i + 3 ]		8087834	2		=			
ANR	8087941	Identifier	z2		8087834	0					
ANR	8087942	AdditiveExpression	7 * input [ 4 * i + 1 ] - 17 * input [ 4 * i + 3 ]		8087834	1		-			
ANR	8087943	MultiplicativeExpression	7 * input [ 4 * i + 1 ]		8087834	0		*			
ANR	8087944	PrimaryExpression	7		8087834	0					
ANR	8087945	ArrayIndexing	input [ 4 * i + 1 ]		8087834	1					
ANR	8087946	Identifier	input		8087834	0					
ANR	8087947	AdditiveExpression	4 * i + 1		8087834	1		+			
ANR	8087948	MultiplicativeExpression	4 * i		8087834	0		*			
ANR	8087949	PrimaryExpression	4		8087834	0					
ANR	8087950	Identifier	i		8087834	1					
ANR	8087951	PrimaryExpression	1		8087834	1					
ANR	8087952	MultiplicativeExpression	17 * input [ 4 * i + 3 ]		8087834	1		*			
ANR	8087953	PrimaryExpression	17		8087834	0					
ANR	8087954	ArrayIndexing	input [ 4 * i + 3 ]		8087834	1					
ANR	8087955	Identifier	input		8087834	0					
ANR	8087956	AdditiveExpression	4 * i + 3		8087834	1		+			
ANR	8087957	MultiplicativeExpression	4 * i		8087834	0		*			
ANR	8087958	PrimaryExpression	4		8087834	0					
ANR	8087959	Identifier	i		8087834	1					
ANR	8087960	PrimaryExpression	3		8087834	1					
ANR	8087961	IdentifierDeclStatement	const int z3 = 17 * input [ 4 * i + 1 ] + 7 * input [ 4 * i + 3 ] ;	25:8:523:584	8087834	3	True				
ANR	8087962	IdentifierDecl	z3 = 17 * input [ 4 * i + 1 ] + 7 * input [ 4 * i + 3 ]		8087834	0					
ANR	8087963	IdentifierDeclType	const int		8087834	0					
ANR	8087964	Identifier	z3		8087834	1					
ANR	8087965	AssignmentExpression	z3 = 17 * input [ 4 * i + 1 ] + 7 * input [ 4 * i + 3 ]		8087834	2		=			
ANR	8087966	Identifier	z3		8087834	0					
ANR	8087967	AdditiveExpression	17 * input [ 4 * i + 1 ] + 7 * input [ 4 * i + 3 ]		8087834	1		+			
ANR	8087968	MultiplicativeExpression	17 * input [ 4 * i + 1 ]		8087834	0		*			
ANR	8087969	PrimaryExpression	17		8087834	0					
ANR	8087970	ArrayIndexing	input [ 4 * i + 1 ]		8087834	1					
ANR	8087971	Identifier	input		8087834	0					
ANR	8087972	AdditiveExpression	4 * i + 1		8087834	1		+			
ANR	8087973	MultiplicativeExpression	4 * i		8087834	0		*			
ANR	8087974	PrimaryExpression	4		8087834	0					
ANR	8087975	Identifier	i		8087834	1					
ANR	8087976	PrimaryExpression	1		8087834	1					
ANR	8087977	MultiplicativeExpression	7 * input [ 4 * i + 3 ]		8087834	1		*			
ANR	8087978	PrimaryExpression	7		8087834	0					
ANR	8087979	ArrayIndexing	input [ 4 * i + 3 ]		8087834	1					
ANR	8087980	Identifier	input		8087834	0					
ANR	8087981	AdditiveExpression	4 * i + 3		8087834	1		+			
ANR	8087982	MultiplicativeExpression	4 * i		8087834	0		*			
ANR	8087983	PrimaryExpression	4		8087834	0					
ANR	8087984	Identifier	i		8087834	1					
ANR	8087985	PrimaryExpression	3		8087834	1					
ANR	8087986	ExpressionStatement	temp [ 4 * i + 0 ] = z0 + z3	29:8:597:622	8087834	4	True				
ANR	8087987	AssignmentExpression	temp [ 4 * i + 0 ] = z0 + z3		8087834	0		=			
ANR	8087988	ArrayIndexing	temp [ 4 * i + 0 ]		8087834	0					
ANR	8087989	Identifier	temp		8087834	0					
ANR	8087990	AdditiveExpression	4 * i + 0		8087834	1		+			
ANR	8087991	MultiplicativeExpression	4 * i		8087834	0		*			
ANR	8087992	PrimaryExpression	4		8087834	0					
ANR	8087993	Identifier	i		8087834	1					
ANR	8087994	PrimaryExpression	0		8087834	1					
ANR	8087995	AdditiveExpression	z0 + z3		8087834	1		+			
ANR	8087996	Identifier	z0		8087834	0					
ANR	8087997	Identifier	z3		8087834	1					
ANR	8087998	ExpressionStatement	temp [ 4 * i + 1 ] = z1 + z2	31:8:633:658	8087834	5	True				
ANR	8087999	AssignmentExpression	temp [ 4 * i + 1 ] = z1 + z2		8087834	0		=			
ANR	8088000	ArrayIndexing	temp [ 4 * i + 1 ]		8087834	0					
ANR	8088001	Identifier	temp		8087834	0					
ANR	8088002	AdditiveExpression	4 * i + 1		8087834	1		+			
ANR	8088003	MultiplicativeExpression	4 * i		8087834	0		*			
ANR	8088004	PrimaryExpression	4		8087834	0					
ANR	8088005	Identifier	i		8087834	1					
ANR	8088006	PrimaryExpression	1		8087834	1					
ANR	8088007	AdditiveExpression	z1 + z2		8087834	1		+			
ANR	8088008	Identifier	z1		8087834	0					
ANR	8088009	Identifier	z2		8087834	1					
ANR	8088010	ExpressionStatement	temp [ 4 * i + 2 ] = z1 - z2	33:8:669:694	8087834	6	True				
ANR	8088011	AssignmentExpression	temp [ 4 * i + 2 ] = z1 - z2		8087834	0		=			
ANR	8088012	ArrayIndexing	temp [ 4 * i + 2 ]		8087834	0					
ANR	8088013	Identifier	temp		8087834	0					
ANR	8088014	AdditiveExpression	4 * i + 2		8087834	1		+			
ANR	8088015	MultiplicativeExpression	4 * i		8087834	0		*			
ANR	8088016	PrimaryExpression	4		8087834	0					
ANR	8088017	Identifier	i		8087834	1					
ANR	8088018	PrimaryExpression	2		8087834	1					
ANR	8088019	AdditiveExpression	z1 - z2		8087834	1		-			
ANR	8088020	Identifier	z1		8087834	0					
ANR	8088021	Identifier	z2		8087834	1					
ANR	8088022	ExpressionStatement	temp [ 4 * i + 3 ] = z0 - z3	35:8:705:730	8087834	7	True				
ANR	8088023	AssignmentExpression	temp [ 4 * i + 3 ] = z0 - z3		8087834	0		=			
ANR	8088024	ArrayIndexing	temp [ 4 * i + 3 ]		8087834	0					
ANR	8088025	Identifier	temp		8087834	0					
ANR	8088026	AdditiveExpression	4 * i + 3		8087834	1		+			
ANR	8088027	MultiplicativeExpression	4 * i		8087834	0		*			
ANR	8088028	PrimaryExpression	4		8087834	0					
ANR	8088029	Identifier	i		8087834	1					
ANR	8088030	PrimaryExpression	3		8087834	1					
ANR	8088031	AdditiveExpression	z0 - z3		8087834	1		-			
ANR	8088032	Identifier	z0		8087834	0					
ANR	8088033	Identifier	z3		8087834	1					
ANR	8088034	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		8087834	9					
ANR	8088035	ForInit	i = 0 ;	41:9:751:756	8087834	0	True				
ANR	8088036	AssignmentExpression	i = 0		8087834	0		=			
ANR	8088037	Identifier	i		8087834	0					
ANR	8088038	PrimaryExpression	0		8087834	1					
ANR	8088039	Condition	i < 4	41:16:758:762	8087834	1	True				
ANR	8088040	RelationalExpression	i < 4		8087834	0		<			
ANR	8088041	Identifier	i		8087834	0					
ANR	8088042	PrimaryExpression	4		8087834	1					
ANR	8088043	PostIncDecOperationExpression	i ++	41:23:765:767	8087834	2	True				
ANR	8088044	Identifier	i		8087834	0					
ANR	8088045	IncDec	++		8087834	1					
ANR	8088046	CompoundStatement		49:8:963:1026	8087834	3					
ANR	8088047	IdentifierDeclStatement	const int offset = x_offset [ i ] ;	43:8:781:811	8087834	0	True				
ANR	8088048	IdentifierDecl	offset = x_offset [ i ]		8087834	0					
ANR	8088049	IdentifierDeclType	const int		8087834	0					
ANR	8088050	Identifier	offset		8087834	1					
ANR	8088051	AssignmentExpression	offset = x_offset [ i ]		8087834	2		=			
ANR	8088052	Identifier	offset		8087834	0					
ANR	8088053	ArrayIndexing	x_offset [ i ]		8087834	1					
ANR	8088054	Identifier	x_offset		8087834	0					
ANR	8088055	Identifier	i		8087834	1					
ANR	8088056	IdentifierDeclStatement	const int z0 = 13 * ( temp [ 4 * 0 + i ] + temp [ 4 * 2 + i ] ) ;	45:8:822:886	8087834	1	True				
ANR	8088057	IdentifierDecl	z0 = 13 * ( temp [ 4 * 0 + i ] + temp [ 4 * 2 + i ] )		8087834	0					
ANR	8088058	IdentifierDeclType	const int		8087834	0					
ANR	8088059	Identifier	z0		8087834	1					
ANR	8088060	AssignmentExpression	z0 = 13 * ( temp [ 4 * 0 + i ] + temp [ 4 * 2 + i ] )		8087834	2		=			
ANR	8088061	Identifier	z0		8087834	0					
ANR	8088062	MultiplicativeExpression	13 * ( temp [ 4 * 0 + i ] + temp [ 4 * 2 + i ] )		8087834	1		*			
ANR	8088063	PrimaryExpression	13		8087834	0					
ANR	8088064	AdditiveExpression	temp [ 4 * 0 + i ] + temp [ 4 * 2 + i ]		8087834	1		+			
ANR	8088065	ArrayIndexing	temp [ 4 * 0 + i ]		8087834	0					
ANR	8088066	Identifier	temp		8087834	0					
ANR	8088067	AdditiveExpression	4 * 0 + i		8087834	1		+			
ANR	8088068	MultiplicativeExpression	4 * 0		8087834	0		*			
ANR	8088069	PrimaryExpression	4		8087834	0					
ANR	8088070	PrimaryExpression	0		8087834	1					
ANR	8088071	Identifier	i		8087834	1					
ANR	8088072	ArrayIndexing	temp [ 4 * 2 + i ]		8087834	1					
ANR	8088073	Identifier	temp		8087834	0					
ANR	8088074	AdditiveExpression	4 * 2 + i		8087834	1		+			
ANR	8088075	MultiplicativeExpression	4 * 2		8087834	0		*			
ANR	8088076	PrimaryExpression	4		8087834	0					
ANR	8088077	PrimaryExpression	2		8087834	1					
ANR	8088078	Identifier	i		8087834	1					
ANR	8088079	IdentifierDeclStatement	const int z1 = 13 * ( temp [ 4 * 0 + i ] - temp [ 4 * 2 + i ] ) ;	47:8:897:961	8087834	2	True				
ANR	8088080	IdentifierDecl	z1 = 13 * ( temp [ 4 * 0 + i ] - temp [ 4 * 2 + i ] )		8087834	0					
ANR	8088081	IdentifierDeclType	const int		8087834	0					
ANR	8088082	Identifier	z1		8087834	1					
ANR	8088083	AssignmentExpression	z1 = 13 * ( temp [ 4 * 0 + i ] - temp [ 4 * 2 + i ] )		8087834	2		=			
ANR	8088084	Identifier	z1		8087834	0					
ANR	8088085	MultiplicativeExpression	13 * ( temp [ 4 * 0 + i ] - temp [ 4 * 2 + i ] )		8087834	1		*			
ANR	8088086	PrimaryExpression	13		8087834	0					
ANR	8088087	AdditiveExpression	temp [ 4 * 0 + i ] - temp [ 4 * 2 + i ]		8087834	1		-			
ANR	8088088	ArrayIndexing	temp [ 4 * 0 + i ]		8087834	0					
ANR	8088089	Identifier	temp		8087834	0					
ANR	8088090	AdditiveExpression	4 * 0 + i		8087834	1		+			
ANR	8088091	MultiplicativeExpression	4 * 0		8087834	0		*			
ANR	8088092	PrimaryExpression	4		8087834	0					
ANR	8088093	PrimaryExpression	0		8087834	1					
ANR	8088094	Identifier	i		8087834	1					
ANR	8088095	ArrayIndexing	temp [ 4 * 2 + i ]		8087834	1					
ANR	8088096	Identifier	temp		8087834	0					
ANR	8088097	AdditiveExpression	4 * 2 + i		8087834	1		+			
ANR	8088098	MultiplicativeExpression	4 * 2		8087834	0		*			
ANR	8088099	PrimaryExpression	4		8087834	0					
ANR	8088100	PrimaryExpression	2		8087834	1					
ANR	8088101	Identifier	i		8087834	1					
ANR	8088102	IdentifierDeclStatement	const int z2 = 7 * temp [ 4 * 1 + i ] - 17 * temp [ 4 * 3 + i ] ;	49:8:972:1035	8087834	3	True				
ANR	8088103	IdentifierDecl	z2 = 7 * temp [ 4 * 1 + i ] - 17 * temp [ 4 * 3 + i ]		8087834	0					
ANR	8088104	IdentifierDeclType	const int		8087834	0					
ANR	8088105	Identifier	z2		8087834	1					
ANR	8088106	AssignmentExpression	z2 = 7 * temp [ 4 * 1 + i ] - 17 * temp [ 4 * 3 + i ]		8087834	2		=			
ANR	8088107	Identifier	z2		8087834	0					
ANR	8088108	AdditiveExpression	7 * temp [ 4 * 1 + i ] - 17 * temp [ 4 * 3 + i ]		8087834	1		-			
ANR	8088109	MultiplicativeExpression	7 * temp [ 4 * 1 + i ]		8087834	0		*			
ANR	8088110	PrimaryExpression	7		8087834	0					
ANR	8088111	ArrayIndexing	temp [ 4 * 1 + i ]		8087834	1					
ANR	8088112	Identifier	temp		8087834	0					
ANR	8088113	AdditiveExpression	4 * 1 + i		8087834	1		+			
ANR	8088114	MultiplicativeExpression	4 * 1		8087834	0		*			
ANR	8088115	PrimaryExpression	4		8087834	0					
ANR	8088116	PrimaryExpression	1		8087834	1					
ANR	8088117	Identifier	i		8087834	1					
ANR	8088118	MultiplicativeExpression	17 * temp [ 4 * 3 + i ]		8087834	1		*			
ANR	8088119	PrimaryExpression	17		8087834	0					
ANR	8088120	ArrayIndexing	temp [ 4 * 3 + i ]		8087834	1					
ANR	8088121	Identifier	temp		8087834	0					
ANR	8088122	AdditiveExpression	4 * 3 + i		8087834	1		+			
ANR	8088123	MultiplicativeExpression	4 * 3		8087834	0		*			
ANR	8088124	PrimaryExpression	4		8087834	0					
ANR	8088125	PrimaryExpression	3		8087834	1					
ANR	8088126	Identifier	i		8087834	1					
ANR	8088127	IdentifierDeclStatement	const int z3 = 17 * temp [ 4 * 1 + i ] + 7 * temp [ 4 * 3 + i ] ;	51:8:1046:1109	8087834	4	True				
ANR	8088128	IdentifierDecl	z3 = 17 * temp [ 4 * 1 + i ] + 7 * temp [ 4 * 3 + i ]		8087834	0					
ANR	8088129	IdentifierDeclType	const int		8087834	0					
ANR	8088130	Identifier	z3		8087834	1					
ANR	8088131	AssignmentExpression	z3 = 17 * temp [ 4 * 1 + i ] + 7 * temp [ 4 * 3 + i ]		8087834	2		=			
ANR	8088132	Identifier	z3		8087834	0					
ANR	8088133	AdditiveExpression	17 * temp [ 4 * 1 + i ] + 7 * temp [ 4 * 3 + i ]		8087834	1		+			
ANR	8088134	MultiplicativeExpression	17 * temp [ 4 * 1 + i ]		8087834	0		*			
ANR	8088135	PrimaryExpression	17		8087834	0					
ANR	8088136	ArrayIndexing	temp [ 4 * 1 + i ]		8087834	1					
ANR	8088137	Identifier	temp		8087834	0					
ANR	8088138	AdditiveExpression	4 * 1 + i		8087834	1		+			
ANR	8088139	MultiplicativeExpression	4 * 1		8087834	0		*			
ANR	8088140	PrimaryExpression	4		8087834	0					
ANR	8088141	PrimaryExpression	1		8087834	1					
ANR	8088142	Identifier	i		8087834	1					
ANR	8088143	MultiplicativeExpression	7 * temp [ 4 * 3 + i ]		8087834	1		*			
ANR	8088144	PrimaryExpression	7		8087834	0					
ANR	8088145	ArrayIndexing	temp [ 4 * 3 + i ]		8087834	1					
ANR	8088146	Identifier	temp		8087834	0					
ANR	8088147	AdditiveExpression	4 * 3 + i		8087834	1		+			
ANR	8088148	MultiplicativeExpression	4 * 3		8087834	0		*			
ANR	8088149	PrimaryExpression	4		8087834	0					
ANR	8088150	PrimaryExpression	3		8087834	1					
ANR	8088151	Identifier	i		8087834	1					
ANR	8088152	ExpressionStatement	output [ stride * 0 + offset ] = ( z0 + z3 ) * qmul + 0x80000 >> 20	55:8:1122:1185	8087834	5	True				
ANR	8088153	AssignmentExpression	output [ stride * 0 + offset ] = ( z0 + z3 ) * qmul + 0x80000 >> 20		8087834	0		=			
ANR	8088154	ArrayIndexing	output [ stride * 0 + offset ]		8087834	0					
ANR	8088155	Identifier	output		8087834	0					
ANR	8088156	AdditiveExpression	stride * 0 + offset		8087834	1		+			
ANR	8088157	MultiplicativeExpression	stride * 0		8087834	0		*			
ANR	8088158	Identifier	stride		8087834	0					
ANR	8088159	PrimaryExpression	0		8087834	1					
ANR	8088160	Identifier	offset		8087834	1					
ANR	8088161	ShiftExpression	( z0 + z3 ) * qmul + 0x80000 >> 20		8087834	1		>>			
ANR	8088162	AdditiveExpression	( z0 + z3 ) * qmul + 0x80000		8087834	0		+			
ANR	8088163	MultiplicativeExpression	( z0 + z3 ) * qmul		8087834	0		*			
ANR	8088164	AdditiveExpression	z0 + z3		8087834	0		+			
ANR	8088165	Identifier	z0		8087834	0					
ANR	8088166	Identifier	z3		8087834	1					
ANR	8088167	Identifier	qmul		8087834	1					
ANR	8088168	PrimaryExpression	0x80000		8087834	1					
ANR	8088169	PrimaryExpression	20		8087834	1					
ANR	8088170	ExpressionStatement	output [ stride * 2 + offset ] = ( z1 + z2 ) * qmul + 0x80000 >> 20	57:8:1196:1259	8087834	6	True				
ANR	8088171	AssignmentExpression	output [ stride * 2 + offset ] = ( z1 + z2 ) * qmul + 0x80000 >> 20		8087834	0		=			
ANR	8088172	ArrayIndexing	output [ stride * 2 + offset ]		8087834	0					
ANR	8088173	Identifier	output		8087834	0					
ANR	8088174	AdditiveExpression	stride * 2 + offset		8087834	1		+			
ANR	8088175	MultiplicativeExpression	stride * 2		8087834	0		*			
ANR	8088176	Identifier	stride		8087834	0					
ANR	8088177	PrimaryExpression	2		8087834	1					
ANR	8088178	Identifier	offset		8087834	1					
ANR	8088179	ShiftExpression	( z1 + z2 ) * qmul + 0x80000 >> 20		8087834	1		>>			
ANR	8088180	AdditiveExpression	( z1 + z2 ) * qmul + 0x80000		8087834	0		+			
ANR	8088181	MultiplicativeExpression	( z1 + z2 ) * qmul		8087834	0		*			
ANR	8088182	AdditiveExpression	z1 + z2		8087834	0		+			
ANR	8088183	Identifier	z1		8087834	0					
ANR	8088184	Identifier	z2		8087834	1					
ANR	8088185	Identifier	qmul		8087834	1					
ANR	8088186	PrimaryExpression	0x80000		8087834	1					
ANR	8088187	PrimaryExpression	20		8087834	1					
ANR	8088188	ExpressionStatement	output [ stride * 8 + offset ] = ( z1 - z2 ) * qmul + 0x80000 >> 20	59:8:1270:1333	8087834	7	True				
ANR	8088189	AssignmentExpression	output [ stride * 8 + offset ] = ( z1 - z2 ) * qmul + 0x80000 >> 20		8087834	0		=			
ANR	8088190	ArrayIndexing	output [ stride * 8 + offset ]		8087834	0					
ANR	8088191	Identifier	output		8087834	0					
ANR	8088192	AdditiveExpression	stride * 8 + offset		8087834	1		+			
ANR	8088193	MultiplicativeExpression	stride * 8		8087834	0		*			
ANR	8088194	Identifier	stride		8087834	0					
ANR	8088195	PrimaryExpression	8		8087834	1					
ANR	8088196	Identifier	offset		8087834	1					
ANR	8088197	ShiftExpression	( z1 - z2 ) * qmul + 0x80000 >> 20		8087834	1		>>			
ANR	8088198	AdditiveExpression	( z1 - z2 ) * qmul + 0x80000		8087834	0		+			
ANR	8088199	MultiplicativeExpression	( z1 - z2 ) * qmul		8087834	0		*			
ANR	8088200	AdditiveExpression	z1 - z2		8087834	0		-			
ANR	8088201	Identifier	z1		8087834	0					
ANR	8088202	Identifier	z2		8087834	1					
ANR	8088203	Identifier	qmul		8087834	1					
ANR	8088204	PrimaryExpression	0x80000		8087834	1					
ANR	8088205	PrimaryExpression	20		8087834	1					
ANR	8088206	ExpressionStatement	output [ stride * 10 + offset ] = ( z0 - z3 ) * qmul + 0x80000 >> 20	61:8:1344:1407	8087834	8	True				
ANR	8088207	AssignmentExpression	output [ stride * 10 + offset ] = ( z0 - z3 ) * qmul + 0x80000 >> 20		8087834	0		=			
ANR	8088208	ArrayIndexing	output [ stride * 10 + offset ]		8087834	0					
ANR	8088209	Identifier	output		8087834	0					
ANR	8088210	AdditiveExpression	stride * 10 + offset		8087834	1		+			
ANR	8088211	MultiplicativeExpression	stride * 10		8087834	0		*			
ANR	8088212	Identifier	stride		8087834	0					
ANR	8088213	PrimaryExpression	10		8087834	1					
ANR	8088214	Identifier	offset		8087834	1					
ANR	8088215	ShiftExpression	( z0 - z3 ) * qmul + 0x80000 >> 20		8087834	1		>>			
ANR	8088216	AdditiveExpression	( z0 - z3 ) * qmul + 0x80000		8087834	0		+			
ANR	8088217	MultiplicativeExpression	( z0 - z3 ) * qmul		8087834	0		*			
ANR	8088218	AdditiveExpression	z0 - z3		8087834	0		-			
ANR	8088219	Identifier	z0		8087834	0					
ANR	8088220	Identifier	z3		8087834	1					
ANR	8088221	Identifier	qmul		8087834	1					
ANR	8088222	PrimaryExpression	0x80000		8087834	1					
ANR	8088223	PrimaryExpression	20		8087834	1					
ANR	8088224	ReturnType	static void		8087834	1					
ANR	8088225	Identifier	svq3_luma_dc_dequant_idct_c		8087834	2					
ANR	8088226	ParameterList	"int16_t * output , int16_t * input , int qp"		8087834	3					
ANR	8088227	Parameter	int16_t * output	1:40:40:54	8087834	0	True				
ANR	8088228	ParameterType	int16_t *		8087834	0					
ANR	8088229	Identifier	output		8087834	1					
ANR	8088230	Parameter	int16_t * input	1:57:57:70	8087834	1	True				
ANR	8088231	ParameterType	int16_t *		8087834	0					
ANR	8088232	Identifier	input		8087834	1					
ANR	8088233	Parameter	int qp	1:73:73:78	8087834	2	True				
ANR	8088234	ParameterType	int		8087834	0					
ANR	8088235	Identifier	qp		8087834	1					
ANR	8088236	CFGEntryNode	ENTRY		8087834		True				
ANR	8088237	CFGExitNode	EXIT		8087834		True				
ANR	8088238	Symbol	* stride		8087834						
ANR	8088239	Symbol	temp		8087834						
ANR	8088240	Symbol	offset		8087834						
ANR	8088241	Symbol	qmul		8087834						
ANR	8088242	Symbol	* qp		8087834						
ANR	8088243	Symbol	* input		8087834						
ANR	8088244	Symbol	i		8087834						
ANR	8088245	Symbol	svq3_dequant_coeff		8087834						
ANR	8088246	Symbol	stride		8087834						
ANR	8088247	Symbol	x_offset		8087834						
ANR	8088248	Symbol	* temp		8087834						
ANR	8088249	Symbol	output		8087834						
ANR	8088250	Symbol	input		8087834						
ANR	8088251	Symbol	* i		8087834						
ANR	8088252	Symbol	z0		8087834						
ANR	8088253	Symbol	z1		8087834						
ANR	8088254	Symbol	z2		8087834						
ANR	8088255	Symbol	z3		8087834						
ANR	8088256	Symbol	* offset		8087834						
ANR	8088257	Symbol	* svq3_dequant_coeff		8087834						
ANR	8088258	Symbol	* x_offset		8087834						
ANR	8088259	Symbol	* output		8087834						
ANR	8088260	Symbol	qp		8087834						
