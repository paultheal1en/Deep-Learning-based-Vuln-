command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1396560	File	/home/p4ultr4n/workplace/ReVeal/raw_code/configure_accelerator_02_0.c								
ANR	1396561	Function	configure_accelerator	1:0:0:1443							
ANR	1396562	FunctionDef	configure_accelerator (MachineState * ms)		1396561	0					
ANR	1396563	CompoundStatement		3:0:45:1443	1396561	0					
ANR	1396564	IdentifierDeclStatement	const char * p ;	5:4:52:65	1396561	0	True				
ANR	1396565	IdentifierDecl	* p		1396561	0					
ANR	1396566	IdentifierDeclType	const char *		1396561	0					
ANR	1396567	Identifier	p		1396561	1					
ANR	1396568	IdentifierDeclStatement	char buf [ 10 ] ;	7:4:72:84	1396561	1	True				
ANR	1396569	IdentifierDecl	buf [ 10 ]		1396561	0					
ANR	1396570	IdentifierDeclType	char [ 10 ]		1396561	0					
ANR	1396571	Identifier	buf		1396561	1					
ANR	1396572	PrimaryExpression	10		1396561	2					
ANR	1396573	IdentifierDeclStatement	int ret ;	9:4:91:98	1396561	2	True				
ANR	1396574	IdentifierDecl	ret		1396561	0					
ANR	1396575	IdentifierDeclType	int		1396561	0					
ANR	1396576	Identifier	ret		1396561	1					
ANR	1396577	IdentifierDeclStatement	bool accel_initialised = false ;	11:4:105:135	1396561	3	True				
ANR	1396578	IdentifierDecl	accel_initialised = false		1396561	0					
ANR	1396579	IdentifierDeclType	bool		1396561	0					
ANR	1396580	Identifier	accel_initialised		1396561	1					
ANR	1396581	AssignmentExpression	accel_initialised = false		1396561	2		=			
ANR	1396582	Identifier	false		1396561	0					
ANR	1396583	Identifier	false		1396561	1					
ANR	1396584	IdentifierDeclStatement	bool init_failed = false ;	13:4:142:166	1396561	4	True				
ANR	1396585	IdentifierDecl	init_failed = false		1396561	0					
ANR	1396586	IdentifierDeclType	bool		1396561	0					
ANR	1396587	Identifier	init_failed		1396561	1					
ANR	1396588	AssignmentExpression	init_failed = false		1396561	2		=			
ANR	1396589	Identifier	false		1396561	0					
ANR	1396590	Identifier	false		1396561	1					
ANR	1396591	IdentifierDeclStatement	AccelClass * acc = NULL ;	15:4:173:195	1396561	5	True				
ANR	1396592	IdentifierDecl	* acc = NULL		1396561	0					
ANR	1396593	IdentifierDeclType	AccelClass *		1396561	0					
ANR	1396594	Identifier	acc		1396561	1					
ANR	1396595	AssignmentExpression	* acc = NULL		1396561	2		=			
ANR	1396596	Identifier	NULL		1396561	0					
ANR	1396597	Identifier	NULL		1396561	1					
ANR	1396598	ExpressionStatement	"p = qemu_opt_get ( qemu_get_machine_opts ( ) , ""accel"" )"	19:4:204:254	1396561	6	True				
ANR	1396599	AssignmentExpression	"p = qemu_opt_get ( qemu_get_machine_opts ( ) , ""accel"" )"		1396561	0		=			
ANR	1396600	Identifier	p		1396561	0					
ANR	1396601	CallExpression	"qemu_opt_get ( qemu_get_machine_opts ( ) , ""accel"" )"		1396561	1					
ANR	1396602	Callee	qemu_opt_get		1396561	0					
ANR	1396603	Identifier	qemu_opt_get		1396561	0					
ANR	1396604	ArgumentList	qemu_get_machine_opts ( )		1396561	1					
ANR	1396605	Argument	qemu_get_machine_opts ( )		1396561	0					
ANR	1396606	CallExpression	qemu_get_machine_opts ( )		1396561	0					
ANR	1396607	Callee	qemu_get_machine_opts		1396561	0					
ANR	1396608	Identifier	qemu_get_machine_opts		1396561	0					
ANR	1396609	ArgumentList			1396561	1					
ANR	1396610	Argument	"""accel"""		1396561	1					
ANR	1396611	PrimaryExpression	"""accel"""		1396561	0					
ANR	1396612	IfStatement	if ( p == NULL )		1396561	7					
ANR	1396613	Condition	p == NULL	21:8:265:273	1396561	0	True				
ANR	1396614	EqualityExpression	p == NULL		1396561	0		==			
ANR	1396615	Identifier	p		1396561	0					
ANR	1396616	Identifier	NULL		1396561	1					
ANR	1396617	CompoundStatement		19:19:230:230	1396561	1					
ANR	1396618	ExpressionStatement	"p = ""tcg"""	25:8:337:346	1396561	0	True				
ANR	1396619	AssignmentExpression	"p = ""tcg"""		1396561	0		=			
ANR	1396620	Identifier	p		1396561	0					
ANR	1396621	PrimaryExpression	"""tcg"""		1396561	1					
ANR	1396622	WhileStatement	while ( ! accel_initialised && * p != '\\0' )		1396561	8					
ANR	1396623	Condition	! accel_initialised && * p != '\\0'	31:11:369:400	1396561	0	True				
ANR	1396624	AndExpression	! accel_initialised && * p != '\\0'		1396561	0		&&			
ANR	1396625	UnaryOperationExpression	! accel_initialised		1396561	0					
ANR	1396626	UnaryOperator	!		1396561	0					
ANR	1396627	Identifier	accel_initialised		1396561	1					
ANR	1396628	EqualityExpression	* p != '\\0'		1396561	1		!=			
ANR	1396629	UnaryOperationExpression	* p		1396561	0					
ANR	1396630	UnaryOperator	*		1396561	0					
ANR	1396631	Identifier	p		1396561	1					
ANR	1396632	PrimaryExpression	'\\0'		1396561	1					
ANR	1396633	CompoundStatement		29:45:357:357	1396561	1					
ANR	1396634	IfStatement	if ( * p == ':' )		1396561	0					
ANR	1396635	Condition	* p == ':'	33:12:418:426	1396561	0	True				
ANR	1396636	EqualityExpression	* p == ':'		1396561	0		==			
ANR	1396637	UnaryOperationExpression	* p		1396561	0					
ANR	1396638	UnaryOperator	*		1396561	0					
ANR	1396639	Identifier	p		1396561	1					
ANR	1396640	PrimaryExpression	':'		1396561	1					
ANR	1396641	CompoundStatement		31:23:383:383	1396561	1					
ANR	1396642	ExpressionStatement	p ++	35:12:444:447	1396561	0	True				
ANR	1396643	PostIncDecOperationExpression	p ++		1396561	0					
ANR	1396644	Identifier	p		1396561	0					
ANR	1396645	IncDec	++		1396561	1					
ANR	1396646	ExpressionStatement	"p = get_opt_name ( buf , sizeof ( buf ) , p , ':' )"	39:8:469:511	1396561	1	True				
ANR	1396647	AssignmentExpression	"p = get_opt_name ( buf , sizeof ( buf ) , p , ':' )"		1396561	0		=			
ANR	1396648	Identifier	p		1396561	0					
ANR	1396649	CallExpression	"get_opt_name ( buf , sizeof ( buf ) , p , ':' )"		1396561	1					
ANR	1396650	Callee	get_opt_name		1396561	0					
ANR	1396651	Identifier	get_opt_name		1396561	0					
ANR	1396652	ArgumentList	buf		1396561	1					
ANR	1396653	Argument	buf		1396561	0					
ANR	1396654	Identifier	buf		1396561	0					
ANR	1396655	Argument	sizeof ( buf )		1396561	1					
ANR	1396656	SizeofExpression	sizeof ( buf )		1396561	0					
ANR	1396657	Sizeof	sizeof		1396561	0					
ANR	1396658	SizeofOperand	buf		1396561	1					
ANR	1396659	Argument	p		1396561	2					
ANR	1396660	Identifier	p		1396561	0					
ANR	1396661	Argument	':'		1396561	3					
ANR	1396662	PrimaryExpression	':'		1396561	0					
ANR	1396663	ExpressionStatement	acc = accel_find ( buf )	41:8:522:543	1396561	2	True				
ANR	1396664	AssignmentExpression	acc = accel_find ( buf )		1396561	0		=			
ANR	1396665	Identifier	acc		1396561	0					
ANR	1396666	CallExpression	accel_find ( buf )		1396561	1					
ANR	1396667	Callee	accel_find		1396561	0					
ANR	1396668	Identifier	accel_find		1396561	0					
ANR	1396669	ArgumentList	buf		1396561	1					
ANR	1396670	Argument	buf		1396561	0					
ANR	1396671	Identifier	buf		1396561	0					
ANR	1396672	IfStatement	if ( ! acc )		1396561	3					
ANR	1396673	Condition	! acc	43:12:558:561	1396561	0	True				
ANR	1396674	UnaryOperationExpression	! acc		1396561	0					
ANR	1396675	UnaryOperator	!		1396561	0					
ANR	1396676	Identifier	acc		1396561	1					
ANR	1396677	CompoundStatement		41:18:518:518	1396561	1					
ANR	1396678	ExpressionStatement	"fprintf ( stderr , ""\\""%s\\"" accelerator not found.\\n"" , buf )"	45:12:579:634	1396561	0	True				
ANR	1396679	CallExpression	"fprintf ( stderr , ""\\""%s\\"" accelerator not found.\\n"" , buf )"		1396561	0					
ANR	1396680	Callee	fprintf		1396561	0					
ANR	1396681	Identifier	fprintf		1396561	0					
ANR	1396682	ArgumentList	stderr		1396561	1					
ANR	1396683	Argument	stderr		1396561	0					
ANR	1396684	Identifier	stderr		1396561	0					
ANR	1396685	Argument	"""\\""%s\\"" accelerator not found.\\n"""		1396561	1					
ANR	1396686	PrimaryExpression	"""\\""%s\\"" accelerator not found.\\n"""		1396561	0					
ANR	1396687	Argument	buf		1396561	2					
ANR	1396688	Identifier	buf		1396561	0					
ANR	1396689	ContinueStatement	continue ;	47:12:649:657	1396561	1	True				
ANR	1396690	IfStatement	if ( acc -> available && ! acc -> available ( ) )		1396561	4					
ANR	1396691	Condition	acc -> available && ! acc -> available ( )	51:12:683:717	1396561	0	True				
ANR	1396692	AndExpression	acc -> available && ! acc -> available ( )		1396561	0		&&			
ANR	1396693	PtrMemberAccess	acc -> available		1396561	0					
ANR	1396694	Identifier	acc		1396561	0					
ANR	1396695	Identifier	available		1396561	1					
ANR	1396696	UnaryOperationExpression	! acc -> available ( )		1396561	1					
ANR	1396697	UnaryOperator	!		1396561	0					
ANR	1396698	CallExpression	acc -> available ( )		1396561	1					
ANR	1396699	Callee	acc -> available		1396561	0					
ANR	1396700	PtrMemberAccess	acc -> available		1396561	0					
ANR	1396701	Identifier	acc		1396561	0					
ANR	1396702	Identifier	available		1396561	1					
ANR	1396703	ArgumentList			1396561	1					
ANR	1396704	CompoundStatement		49:49:674:674	1396561	1					
ANR	1396705	ExpressionStatement	"printf ( ""%s not supported for this target\\n"" , acc -> name )"	53:12:735:810	1396561	0	True				
ANR	1396706	CallExpression	"printf ( ""%s not supported for this target\\n"" , acc -> name )"		1396561	0					
ANR	1396707	Callee	printf		1396561	0					
ANR	1396708	Identifier	printf		1396561	0					
ANR	1396709	ArgumentList	"""%s not supported for this target\\n"""		1396561	1					
ANR	1396710	Argument	"""%s not supported for this target\\n"""		1396561	0					
ANR	1396711	PrimaryExpression	"""%s not supported for this target\\n"""		1396561	0					
ANR	1396712	Argument	acc -> name		1396561	1					
ANR	1396713	PtrMemberAccess	acc -> name		1396561	0					
ANR	1396714	Identifier	acc		1396561	0					
ANR	1396715	Identifier	name		1396561	1					
ANR	1396716	ContinueStatement	continue ;	57:12:825:833	1396561	1	True				
ANR	1396717	ExpressionStatement	"ret = accel_init_machine ( acc , ms )"	61:8:855:888	1396561	5	True				
ANR	1396718	AssignmentExpression	"ret = accel_init_machine ( acc , ms )"		1396561	0		=			
ANR	1396719	Identifier	ret		1396561	0					
ANR	1396720	CallExpression	"accel_init_machine ( acc , ms )"		1396561	1					
ANR	1396721	Callee	accel_init_machine		1396561	0					
ANR	1396722	Identifier	accel_init_machine		1396561	0					
ANR	1396723	ArgumentList	acc		1396561	1					
ANR	1396724	Argument	acc		1396561	0					
ANR	1396725	Identifier	acc		1396561	0					
ANR	1396726	Argument	ms		1396561	1					
ANR	1396727	Identifier	ms		1396561	0					
ANR	1396728	IfStatement	if ( ret < 0 )		1396561	6					
ANR	1396729	Condition	ret < 0	63:12:903:909	1396561	0	True				
ANR	1396730	RelationalExpression	ret < 0		1396561	0		<			
ANR	1396731	Identifier	ret		1396561	0					
ANR	1396732	PrimaryExpression	0		1396561	1					
ANR	1396733	CompoundStatement		61:21:866:866	1396561	1					
ANR	1396734	ExpressionStatement	init_failed = true	65:12:927:945	1396561	0	True				
ANR	1396735	AssignmentExpression	init_failed = true		1396561	0		=			
ANR	1396736	Identifier	init_failed		1396561	0					
ANR	1396737	Identifier	true		1396561	1					
ANR	1396738	ExpressionStatement	"fprintf ( stderr , ""failed to initialize %s: %s\\n"" , acc -> name , strerror ( - ret ) )"	67:12:960:1077	1396561	1	True				
ANR	1396739	CallExpression	"fprintf ( stderr , ""failed to initialize %s: %s\\n"" , acc -> name , strerror ( - ret ) )"		1396561	0					
ANR	1396740	Callee	fprintf		1396561	0					
ANR	1396741	Identifier	fprintf		1396561	0					
ANR	1396742	ArgumentList	stderr		1396561	1					
ANR	1396743	Argument	stderr		1396561	0					
ANR	1396744	Identifier	stderr		1396561	0					
ANR	1396745	Argument	"""failed to initialize %s: %s\\n"""		1396561	1					
ANR	1396746	PrimaryExpression	"""failed to initialize %s: %s\\n"""		1396561	0					
ANR	1396747	Argument	acc -> name		1396561	2					
ANR	1396748	PtrMemberAccess	acc -> name		1396561	0					
ANR	1396749	Identifier	acc		1396561	0					
ANR	1396750	Identifier	name		1396561	1					
ANR	1396751	Argument	strerror ( - ret )		1396561	3					
ANR	1396752	CallExpression	strerror ( - ret )		1396561	0					
ANR	1396753	Callee	strerror		1396561	0					
ANR	1396754	Identifier	strerror		1396561	0					
ANR	1396755	ArgumentList	- ret		1396561	1					
ANR	1396756	Argument	- ret		1396561	0					
ANR	1396757	UnaryOperationExpression	- ret		1396561	0					
ANR	1396758	UnaryOperator	-		1396561	0					
ANR	1396759	Identifier	ret		1396561	1					
ANR	1396760	ElseStatement	else		1396561	0					
ANR	1396761	CompoundStatement		71:15:1049:1049	1396561	0					
ANR	1396762	ExpressionStatement	accel_initialised = true	75:12:1110:1134	1396561	0	True				
ANR	1396763	AssignmentExpression	accel_initialised = true		1396561	0		=			
ANR	1396764	Identifier	accel_initialised		1396561	0					
ANR	1396765	Identifier	true		1396561	1					
ANR	1396766	IfStatement	if ( ! accel_initialised )		1396561	9					
ANR	1396767	Condition	! accel_initialised	83:8:1165:1182	1396561	0	True				
ANR	1396768	UnaryOperationExpression	! accel_initialised		1396561	0					
ANR	1396769	UnaryOperator	!		1396561	0					
ANR	1396770	Identifier	accel_initialised		1396561	1					
ANR	1396771	CompoundStatement		81:28:1139:1139	1396561	1					
ANR	1396772	IfStatement	if ( ! init_failed )		1396561	0					
ANR	1396773	Condition	! init_failed	85:12:1200:1211	1396561	0	True				
ANR	1396774	UnaryOperationExpression	! init_failed		1396561	0					
ANR	1396775	UnaryOperator	!		1396561	0					
ANR	1396776	Identifier	init_failed		1396561	1					
ANR	1396777	CompoundStatement		83:26:1168:1168	1396561	1					
ANR	1396778	ExpressionStatement	"fprintf ( stderr , ""No accelerator found!\\n"" )"	87:12:1229:1271	1396561	0	True				
ANR	1396779	CallExpression	"fprintf ( stderr , ""No accelerator found!\\n"" )"		1396561	0					
ANR	1396780	Callee	fprintf		1396561	0					
ANR	1396781	Identifier	fprintf		1396561	0					
ANR	1396782	ArgumentList	stderr		1396561	1					
ANR	1396783	Argument	stderr		1396561	0					
ANR	1396784	Identifier	stderr		1396561	0					
ANR	1396785	Argument	"""No accelerator found!\\n"""		1396561	1					
ANR	1396786	PrimaryExpression	"""No accelerator found!\\n"""		1396561	0					
ANR	1396787	ExpressionStatement	exit ( 1 )	91:8:1293:1300	1396561	1	True				
ANR	1396788	CallExpression	exit ( 1 )		1396561	0					
ANR	1396789	Callee	exit		1396561	0					
ANR	1396790	Identifier	exit		1396561	0					
ANR	1396791	ArgumentList	1		1396561	1					
ANR	1396792	Argument	1		1396561	0					
ANR	1396793	PrimaryExpression	1		1396561	0					
ANR	1396794	IfStatement	if ( init_failed )		1396561	10					
ANR	1396795	Condition	init_failed	97:8:1320:1330	1396561	0	True				
ANR	1396796	Identifier	init_failed		1396561	0					
ANR	1396797	CompoundStatement		95:21:1287:1287	1396561	1					
ANR	1396798	ExpressionStatement	"fprintf ( stderr , ""Back to %s accelerator.\\n"" , acc -> name )"	99:8:1344:1399	1396561	0	True				
ANR	1396799	CallExpression	"fprintf ( stderr , ""Back to %s accelerator.\\n"" , acc -> name )"		1396561	0					
ANR	1396800	Callee	fprintf		1396561	0					
ANR	1396801	Identifier	fprintf		1396561	0					
ANR	1396802	ArgumentList	stderr		1396561	1					
ANR	1396803	Argument	stderr		1396561	0					
ANR	1396804	Identifier	stderr		1396561	0					
ANR	1396805	Argument	"""Back to %s accelerator.\\n"""		1396561	1					
ANR	1396806	PrimaryExpression	"""Back to %s accelerator.\\n"""		1396561	0					
ANR	1396807	Argument	acc -> name		1396561	2					
ANR	1396808	PtrMemberAccess	acc -> name		1396561	0					
ANR	1396809	Identifier	acc		1396561	0					
ANR	1396810	Identifier	name		1396561	1					
ANR	1396811	ReturnStatement	return ! accel_initialised ;	105:4:1415:1440	1396561	11	True				
ANR	1396812	UnaryOperationExpression	! accel_initialised		1396561	0					
ANR	1396813	UnaryOperator	!		1396561	0					
ANR	1396814	Identifier	accel_initialised		1396561	1					
ANR	1396815	ReturnType	int		1396561	1					
ANR	1396816	Identifier	configure_accelerator		1396561	2					
ANR	1396817	ParameterList	MachineState * ms		1396561	3					
ANR	1396818	Parameter	MachineState * ms	1:26:26:41	1396561	0	True				
ANR	1396819	ParameterType	MachineState *		1396561	0					
ANR	1396820	Identifier	ms		1396561	1					
ANR	1396821	CFGEntryNode	ENTRY		1396561		True				
ANR	1396822	CFGExitNode	EXIT		1396561		True				
ANR	1396823	Symbol	ret		1396561						
ANR	1396824	Symbol	acc		1396561						
ANR	1396825	Symbol	NULL		1396561						
ANR	1396826	Symbol	ms		1396561						
ANR	1396827	Symbol	qemu_opt_get		1396561						
ANR	1396828	Symbol	false		1396561						
ANR	1396829	Symbol	acc -> available		1396561						
ANR	1396830	Symbol	accel_init_machine		1396561						
ANR	1396831	Symbol	qemu_get_machine_opts		1396561						
ANR	1396832	Symbol	stderr		1396561						
ANR	1396833	Symbol	p		1396561						
ANR	1396834	Symbol	init_failed		1396561						
ANR	1396835	Symbol	strerror		1396561						
ANR	1396836	Symbol	buf		1396561						
ANR	1396837	Symbol	* acc		1396561						
ANR	1396838	Symbol	accel_initialised		1396561						
ANR	1396839	Symbol	true		1396561						
ANR	1396840	Symbol	* p		1396561						
ANR	1396841	Symbol	accel_find		1396561						
ANR	1396842	Symbol	get_opt_name		1396561						
ANR	1396843	Symbol	acc -> name		1396561						
