command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6253699	File	/home/p4ultr4n/workplace/ReVeal/raw_code/opts_type_int_0.c								
ANR	6253700	Function	opts_type_int	1:0:0:1628							
ANR	6253701	FunctionDef	"opts_type_int (Visitor * v , int64_t * obj , const char * name , Error * * errp)"		6253700	0					
ANR	6253702	CompoundStatement		3:0:73:1628	6253700	0					
ANR	6253703	IdentifierDeclStatement	"OptsVisitor * ov = DO_UPCAST ( OptsVisitor , visitor , v ) ;"	5:4:80:132	6253700	0	True				
ANR	6253704	IdentifierDecl	"* ov = DO_UPCAST ( OptsVisitor , visitor , v )"		6253700	0					
ANR	6253705	IdentifierDeclType	OptsVisitor *		6253700	0					
ANR	6253706	Identifier	ov		6253700	1					
ANR	6253707	AssignmentExpression	"* ov = DO_UPCAST ( OptsVisitor , visitor , v )"		6253700	2		=			
ANR	6253708	Identifier	ov		6253700	0					
ANR	6253709	CallExpression	"DO_UPCAST ( OptsVisitor , visitor , v )"		6253700	1					
ANR	6253710	Callee	DO_UPCAST		6253700	0					
ANR	6253711	Identifier	DO_UPCAST		6253700	0					
ANR	6253712	ArgumentList	OptsVisitor		6253700	1					
ANR	6253713	Argument	OptsVisitor		6253700	0					
ANR	6253714	Identifier	OptsVisitor		6253700	0					
ANR	6253715	Argument	visitor		6253700	1					
ANR	6253716	Identifier	visitor		6253700	0					
ANR	6253717	Argument	v		6253700	2					
ANR	6253718	Identifier	v		6253700	0					
ANR	6253719	IdentifierDeclStatement	const QemuOpt * opt ;	7:4:139:157	6253700	1	True				
ANR	6253720	IdentifierDecl	* opt		6253700	0					
ANR	6253721	IdentifierDeclType	const QemuOpt *		6253700	0					
ANR	6253722	Identifier	opt		6253700	1					
ANR	6253723	IdentifierDeclStatement	const char * str ;	9:4:164:179	6253700	2	True				
ANR	6253724	IdentifierDecl	* str		6253700	0					
ANR	6253725	IdentifierDeclType	const char *		6253700	0					
ANR	6253726	Identifier	str		6253700	1					
ANR	6253727	IdentifierDeclStatement	long long val ;	11:4:186:199	6253700	3	True				
ANR	6253728	IdentifierDecl	val		6253700	0					
ANR	6253729	IdentifierDeclType	long long		6253700	0					
ANR	6253730	Identifier	val		6253700	1					
ANR	6253731	IdentifierDeclStatement	char * endptr ;	13:4:206:218	6253700	4	True				
ANR	6253732	IdentifierDecl	* endptr		6253700	0					
ANR	6253733	IdentifierDeclType	char *		6253700	0					
ANR	6253734	Identifier	endptr		6253700	1					
ANR	6253735	IfStatement	if ( ov -> list_mode == LM_SIGNED_INTERVAL )		6253700	5					
ANR	6253736	Condition	ov -> list_mode == LM_SIGNED_INTERVAL	17:8:231:265	6253700	0	True				
ANR	6253737	EqualityExpression	ov -> list_mode == LM_SIGNED_INTERVAL		6253700	0		==			
ANR	6253738	PtrMemberAccess	ov -> list_mode		6253700	0					
ANR	6253739	Identifier	ov		6253700	0					
ANR	6253740	Identifier	list_mode		6253700	1					
ANR	6253741	Identifier	LM_SIGNED_INTERVAL		6253700	1					
ANR	6253742	CompoundStatement		15:45:194:194	6253700	1					
ANR	6253743	ExpressionStatement	* obj = ov -> range_next . s	19:8:279:302	6253700	0	True				
ANR	6253744	AssignmentExpression	* obj = ov -> range_next . s		6253700	0		=			
ANR	6253745	UnaryOperationExpression	* obj		6253700	0					
ANR	6253746	UnaryOperator	*		6253700	0					
ANR	6253747	Identifier	obj		6253700	1					
ANR	6253748	MemberAccess	ov -> range_next . s		6253700	1					
ANR	6253749	PtrMemberAccess	ov -> range_next		6253700	0					
ANR	6253750	Identifier	ov		6253700	0					
ANR	6253751	Identifier	range_next		6253700	1					
ANR	6253752	Identifier	s		6253700	1					
ANR	6253753	ReturnStatement	return ;	21:8:313:319	6253700	1	True				
ANR	6253754	ExpressionStatement	"opt = lookup_scalar ( ov , name , errp )"	27:4:335:370	6253700	6	True				
ANR	6253755	AssignmentExpression	"opt = lookup_scalar ( ov , name , errp )"		6253700	0		=			
ANR	6253756	Identifier	opt		6253700	0					
ANR	6253757	CallExpression	"lookup_scalar ( ov , name , errp )"		6253700	1					
ANR	6253758	Callee	lookup_scalar		6253700	0					
ANR	6253759	Identifier	lookup_scalar		6253700	0					
ANR	6253760	ArgumentList	ov		6253700	1					
ANR	6253761	Argument	ov		6253700	0					
ANR	6253762	Identifier	ov		6253700	0					
ANR	6253763	Argument	name		6253700	1					
ANR	6253764	Identifier	name		6253700	0					
ANR	6253765	Argument	errp		6253700	2					
ANR	6253766	Identifier	errp		6253700	0					
ANR	6253767	IfStatement	if ( ! opt )		6253700	7					
ANR	6253768	Condition	! opt	29:8:381:384	6253700	0	True				
ANR	6253769	UnaryOperationExpression	! opt		6253700	0					
ANR	6253770	UnaryOperator	!		6253700	0					
ANR	6253771	Identifier	opt		6253700	1					
ANR	6253772	CompoundStatement		27:14:313:313	6253700	1					
ANR	6253773	ReturnStatement	return ;	31:8:398:404	6253700	0	True				
ANR	6253774	ExpressionStatement	"str = opt -> str ? opt -> str : """""	35:4:418:448	6253700	8	True				
ANR	6253775	AssignmentExpression	"str = opt -> str ? opt -> str : """""		6253700	0		=			
ANR	6253776	Identifier	str		6253700	0					
ANR	6253777	ConditionalExpression	"opt -> str ? opt -> str : """""		6253700	1					
ANR	6253778	Condition	opt -> str		6253700	0					
ANR	6253779	PtrMemberAccess	opt -> str		6253700	0					
ANR	6253780	Identifier	opt		6253700	0					
ANR	6253781	Identifier	str		6253700	1					
ANR	6253782	PtrMemberAccess	opt -> str		6253700	1					
ANR	6253783	Identifier	opt		6253700	0					
ANR	6253784	Identifier	str		6253700	1					
ANR	6253785	PrimaryExpression	""""""		6253700	2					
ANR	6253786	ExpressionStatement	assert ( ov -> list_mode == LM_NONE || ov -> list_mode == LM_IN_PROGRESS )	41:4:502:569	6253700	9	True				
ANR	6253787	CallExpression	assert ( ov -> list_mode == LM_NONE || ov -> list_mode == LM_IN_PROGRESS )		6253700	0					
ANR	6253788	Callee	assert		6253700	0					
ANR	6253789	Identifier	assert		6253700	0					
ANR	6253790	ArgumentList	ov -> list_mode == LM_NONE || ov -> list_mode == LM_IN_PROGRESS		6253700	1					
ANR	6253791	Argument	ov -> list_mode == LM_NONE || ov -> list_mode == LM_IN_PROGRESS		6253700	0					
ANR	6253792	OrExpression	ov -> list_mode == LM_NONE || ov -> list_mode == LM_IN_PROGRESS		6253700	0		||			
ANR	6253793	EqualityExpression	ov -> list_mode == LM_NONE		6253700	0		==			
ANR	6253794	PtrMemberAccess	ov -> list_mode		6253700	0					
ANR	6253795	Identifier	ov		6253700	0					
ANR	6253796	Identifier	list_mode		6253700	1					
ANR	6253797	Identifier	LM_NONE		6253700	1					
ANR	6253798	EqualityExpression	ov -> list_mode == LM_IN_PROGRESS		6253700	1		==			
ANR	6253799	PtrMemberAccess	ov -> list_mode		6253700	0					
ANR	6253800	Identifier	ov		6253700	0					
ANR	6253801	Identifier	list_mode		6253700	1					
ANR	6253802	Identifier	LM_IN_PROGRESS		6253700	1					
ANR	6253803	ExpressionStatement	errno = 0	45:4:578:587	6253700	10	True				
ANR	6253804	AssignmentExpression	errno = 0		6253700	0		=			
ANR	6253805	Identifier	errno		6253700	0					
ANR	6253806	PrimaryExpression	0		6253700	1					
ANR	6253807	ExpressionStatement	"val = strtoll ( str , & endptr , 0 )"	47:4:594:624	6253700	11	True				
ANR	6253808	AssignmentExpression	"val = strtoll ( str , & endptr , 0 )"		6253700	0		=			
ANR	6253809	Identifier	val		6253700	0					
ANR	6253810	CallExpression	"strtoll ( str , & endptr , 0 )"		6253700	1					
ANR	6253811	Callee	strtoll		6253700	0					
ANR	6253812	Identifier	strtoll		6253700	0					
ANR	6253813	ArgumentList	str		6253700	1					
ANR	6253814	Argument	str		6253700	0					
ANR	6253815	Identifier	str		6253700	0					
ANR	6253816	Argument	& endptr		6253700	1					
ANR	6253817	UnaryOperationExpression	& endptr		6253700	0					
ANR	6253818	UnaryOperator	&		6253700	0					
ANR	6253819	Identifier	endptr		6253700	1					
ANR	6253820	Argument	0		6253700	2					
ANR	6253821	PrimaryExpression	0		6253700	0					
ANR	6253822	IfStatement	if ( errno == 0 && endptr > str && INT64_MIN <= val && val <= INT64_MAX )		6253700	12					
ANR	6253823	Condition	errno == 0 && endptr > str && INT64_MIN <= val && val <= INT64_MAX	49:8:635:700	6253700	0	True				
ANR	6253824	AndExpression	errno == 0 && endptr > str && INT64_MIN <= val && val <= INT64_MAX		6253700	0		&&			
ANR	6253825	EqualityExpression	errno == 0		6253700	0		==			
ANR	6253826	Identifier	errno		6253700	0					
ANR	6253827	PrimaryExpression	0		6253700	1					
ANR	6253828	AndExpression	endptr > str && INT64_MIN <= val && val <= INT64_MAX		6253700	1		&&			
ANR	6253829	RelationalExpression	endptr > str		6253700	0		>			
ANR	6253830	Identifier	endptr		6253700	0					
ANR	6253831	Identifier	str		6253700	1					
ANR	6253832	AndExpression	INT64_MIN <= val && val <= INT64_MAX		6253700	1		&&			
ANR	6253833	RelationalExpression	INT64_MIN <= val		6253700	0		<=			
ANR	6253834	Identifier	INT64_MIN		6253700	0					
ANR	6253835	Identifier	val		6253700	1					
ANR	6253836	RelationalExpression	val <= INT64_MAX		6253700	1		<=			
ANR	6253837	Identifier	val		6253700	0					
ANR	6253838	Identifier	INT64_MAX		6253700	1					
ANR	6253839	CompoundStatement		47:76:629:629	6253700	1					
ANR	6253840	IfStatement	if ( * endptr == '\\0' )		6253700	0					
ANR	6253841	Condition	* endptr == '\\0'	51:12:718:732	6253700	0	True				
ANR	6253842	EqualityExpression	* endptr == '\\0'		6253700	0		==			
ANR	6253843	UnaryOperationExpression	* endptr		6253700	0					
ANR	6253844	UnaryOperator	*		6253700	0					
ANR	6253845	Identifier	endptr		6253700	1					
ANR	6253846	PrimaryExpression	'\\0'		6253700	1					
ANR	6253847	CompoundStatement		49:29:661:661	6253700	1					
ANR	6253848	ExpressionStatement	* obj = val	53:12:750:760	6253700	0	True				
ANR	6253849	AssignmentExpression	* obj = val		6253700	0		=			
ANR	6253850	UnaryOperationExpression	* obj		6253700	0					
ANR	6253851	UnaryOperator	*		6253700	0					
ANR	6253852	Identifier	obj		6253700	1					
ANR	6253853	Identifier	val		6253700	1					
ANR	6253854	ExpressionStatement	"processed ( ov , name )"	55:12:775:794	6253700	1	True				
ANR	6253855	CallExpression	"processed ( ov , name )"		6253700	0					
ANR	6253856	Callee	processed		6253700	0					
ANR	6253857	Identifier	processed		6253700	0					
ANR	6253858	ArgumentList	ov		6253700	1					
ANR	6253859	Argument	ov		6253700	0					
ANR	6253860	Identifier	ov		6253700	0					
ANR	6253861	Argument	name		6253700	1					
ANR	6253862	Identifier	name		6253700	0					
ANR	6253863	ReturnStatement	return ;	57:12:809:815	6253700	2	True				
ANR	6253864	IfStatement	if ( * endptr == '-' && ov -> list_mode == LM_IN_PROGRESS )		6253700	1					
ANR	6253865	Condition	* endptr == '-' && ov -> list_mode == LM_IN_PROGRESS	61:12:841:889	6253700	0	True				
ANR	6253866	AndExpression	* endptr == '-' && ov -> list_mode == LM_IN_PROGRESS		6253700	0		&&			
ANR	6253867	EqualityExpression	* endptr == '-'		6253700	0		==			
ANR	6253868	UnaryOperationExpression	* endptr		6253700	0					
ANR	6253869	UnaryOperator	*		6253700	0					
ANR	6253870	Identifier	endptr		6253700	1					
ANR	6253871	PrimaryExpression	'-'		6253700	1					
ANR	6253872	EqualityExpression	ov -> list_mode == LM_IN_PROGRESS		6253700	1		==			
ANR	6253873	PtrMemberAccess	ov -> list_mode		6253700	0					
ANR	6253874	Identifier	ov		6253700	0					
ANR	6253875	Identifier	list_mode		6253700	1					
ANR	6253876	Identifier	LM_IN_PROGRESS		6253700	1					
ANR	6253877	CompoundStatement		61:12:833:847	6253700	1					
ANR	6253878	IdentifierDeclStatement	long long val2 ;	63:12:907:921	6253700	0	True				
ANR	6253879	IdentifierDecl	val2		6253700	0					
ANR	6253880	IdentifierDeclType	long long		6253700	0					
ANR	6253881	Identifier	val2		6253700	1					
ANR	6253882	ExpressionStatement	str = endptr + 1	67:12:938:954	6253700	1	True				
ANR	6253883	AssignmentExpression	str = endptr + 1		6253700	0		=			
ANR	6253884	Identifier	str		6253700	0					
ANR	6253885	AdditiveExpression	endptr + 1		6253700	1		+			
ANR	6253886	Identifier	endptr		6253700	0					
ANR	6253887	PrimaryExpression	1		6253700	1					
ANR	6253888	ExpressionStatement	"val2 = strtoll ( str , & endptr , 0 )"	69:12:969:1000	6253700	2	True				
ANR	6253889	AssignmentExpression	"val2 = strtoll ( str , & endptr , 0 )"		6253700	0		=			
ANR	6253890	Identifier	val2		6253700	0					
ANR	6253891	CallExpression	"strtoll ( str , & endptr , 0 )"		6253700	1					
ANR	6253892	Callee	strtoll		6253700	0					
ANR	6253893	Identifier	strtoll		6253700	0					
ANR	6253894	ArgumentList	str		6253700	1					
ANR	6253895	Argument	str		6253700	0					
ANR	6253896	Identifier	str		6253700	0					
ANR	6253897	Argument	& endptr		6253700	1					
ANR	6253898	UnaryOperationExpression	& endptr		6253700	0					
ANR	6253899	UnaryOperator	&		6253700	0					
ANR	6253900	Identifier	endptr		6253700	1					
ANR	6253901	Argument	0		6253700	2					
ANR	6253902	PrimaryExpression	0		6253700	0					
ANR	6253903	IfStatement	if ( errno == 0 && endptr > str && * endptr == '\\0' && INT64_MIN <= val2 && val2 <= INT64_MAX && val <= val2 )		6253700	3					
ANR	6253904	Condition	errno == 0 && endptr > str && * endptr == '\\0' && INT64_MIN <= val2 && val2 <= INT64_MAX && val <= val2	71:16:1019:1137	6253700	0	True				
ANR	6253905	AndExpression	errno == 0 && endptr > str && * endptr == '\\0' && INT64_MIN <= val2 && val2 <= INT64_MAX && val <= val2		6253700	0		&&			
ANR	6253906	EqualityExpression	errno == 0		6253700	0		==			
ANR	6253907	Identifier	errno		6253700	0					
ANR	6253908	PrimaryExpression	0		6253700	1					
ANR	6253909	AndExpression	endptr > str && * endptr == '\\0' && INT64_MIN <= val2 && val2 <= INT64_MAX && val <= val2		6253700	1		&&			
ANR	6253910	RelationalExpression	endptr > str		6253700	0		>			
ANR	6253911	Identifier	endptr		6253700	0					
ANR	6253912	Identifier	str		6253700	1					
ANR	6253913	AndExpression	* endptr == '\\0' && INT64_MIN <= val2 && val2 <= INT64_MAX && val <= val2		6253700	1		&&			
ANR	6253914	EqualityExpression	* endptr == '\\0'		6253700	0		==			
ANR	6253915	UnaryOperationExpression	* endptr		6253700	0					
ANR	6253916	UnaryOperator	*		6253700	0					
ANR	6253917	Identifier	endptr		6253700	1					
ANR	6253918	PrimaryExpression	'\\0'		6253700	1					
ANR	6253919	AndExpression	INT64_MIN <= val2 && val2 <= INT64_MAX && val <= val2		6253700	1		&&			
ANR	6253920	RelationalExpression	INT64_MIN <= val2		6253700	0		<=			
ANR	6253921	Identifier	INT64_MIN		6253700	0					
ANR	6253922	Identifier	val2		6253700	1					
ANR	6253923	AndExpression	val2 <= INT64_MAX && val <= val2		6253700	1		&&			
ANR	6253924	RelationalExpression	val2 <= INT64_MAX		6253700	0		<=			
ANR	6253925	Identifier	val2		6253700	0					
ANR	6253926	Identifier	INT64_MAX		6253700	1					
ANR	6253927	RelationalExpression	val <= val2		6253700	1		<=			
ANR	6253928	Identifier	val		6253700	0					
ANR	6253929	Identifier	val2		6253700	1					
ANR	6253930	CompoundStatement		71:71:1066:1066	6253700	1					
ANR	6253931	ExpressionStatement	ov -> range_next . s = val	75:16:1159:1181	6253700	0	True				
ANR	6253932	AssignmentExpression	ov -> range_next . s = val		6253700	0		=			
ANR	6253933	MemberAccess	ov -> range_next . s		6253700	0					
ANR	6253934	PtrMemberAccess	ov -> range_next		6253700	0					
ANR	6253935	Identifier	ov		6253700	0					
ANR	6253936	Identifier	range_next		6253700	1					
ANR	6253937	Identifier	s		6253700	1					
ANR	6253938	Identifier	val		6253700	1					
ANR	6253939	ExpressionStatement	ov -> range_limit . s = val2	77:16:1200:1224	6253700	1	True				
ANR	6253940	AssignmentExpression	ov -> range_limit . s = val2		6253700	0		=			
ANR	6253941	MemberAccess	ov -> range_limit . s		6253700	0					
ANR	6253942	PtrMemberAccess	ov -> range_limit		6253700	0					
ANR	6253943	Identifier	ov		6253700	0					
ANR	6253944	Identifier	range_limit		6253700	1					
ANR	6253945	Identifier	s		6253700	1					
ANR	6253946	Identifier	val2		6253700	1					
ANR	6253947	ExpressionStatement	ov -> list_mode = LM_SIGNED_INTERVAL	79:16:1243:1277	6253700	2	True				
ANR	6253948	AssignmentExpression	ov -> list_mode = LM_SIGNED_INTERVAL		6253700	0		=			
ANR	6253949	PtrMemberAccess	ov -> list_mode		6253700	0					
ANR	6253950	Identifier	ov		6253700	0					
ANR	6253951	Identifier	list_mode		6253700	1					
ANR	6253952	Identifier	LM_SIGNED_INTERVAL		6253700	1					
ANR	6253953	ExpressionStatement	* obj = ov -> range_next . s	85:16:1347:1370	6253700	3	True				
ANR	6253954	AssignmentExpression	* obj = ov -> range_next . s		6253700	0		=			
ANR	6253955	UnaryOperationExpression	* obj		6253700	0					
ANR	6253956	UnaryOperator	*		6253700	0					
ANR	6253957	Identifier	obj		6253700	1					
ANR	6253958	MemberAccess	ov -> range_next . s		6253700	1					
ANR	6253959	PtrMemberAccess	ov -> range_next		6253700	0					
ANR	6253960	Identifier	ov		6253700	0					
ANR	6253961	Identifier	range_next		6253700	1					
ANR	6253962	Identifier	s		6253700	1					
ANR	6253963	ReturnStatement	return ;	87:16:1389:1395	6253700	4	True				
ANR	6253964	ExpressionStatement	"error_set ( errp , QERR_INVALID_PARAMETER_VALUE , opt -> name , ( ov -> list_mode == LM_NONE ) ? ""an int64 value"" : ""an int64 value or range"" )"	95:4:1435:1625	6253700	13	True				
ANR	6253965	CallExpression	"error_set ( errp , QERR_INVALID_PARAMETER_VALUE , opt -> name , ( ov -> list_mode == LM_NONE ) ? ""an int64 value"" : ""an int64 value or range"" )"		6253700	0					
ANR	6253966	Callee	error_set		6253700	0					
ANR	6253967	Identifier	error_set		6253700	0					
ANR	6253968	ArgumentList	errp		6253700	1					
ANR	6253969	Argument	errp		6253700	0					
ANR	6253970	Identifier	errp		6253700	0					
ANR	6253971	Argument	QERR_INVALID_PARAMETER_VALUE		6253700	1					
ANR	6253972	Identifier	QERR_INVALID_PARAMETER_VALUE		6253700	0					
ANR	6253973	Argument	opt -> name		6253700	2					
ANR	6253974	PtrMemberAccess	opt -> name		6253700	0					
ANR	6253975	Identifier	opt		6253700	0					
ANR	6253976	Identifier	name		6253700	1					
ANR	6253977	Argument	"( ov -> list_mode == LM_NONE ) ? ""an int64 value"" : ""an int64 value or range"""		6253700	3					
ANR	6253978	ConditionalExpression	"( ov -> list_mode == LM_NONE ) ? ""an int64 value"" : ""an int64 value or range"""		6253700	0					
ANR	6253979	Condition	ov -> list_mode == LM_NONE		6253700	0					
ANR	6253980	EqualityExpression	ov -> list_mode == LM_NONE		6253700	0		==			
ANR	6253981	PtrMemberAccess	ov -> list_mode		6253700	0					
ANR	6253982	Identifier	ov		6253700	0					
ANR	6253983	Identifier	list_mode		6253700	1					
ANR	6253984	Identifier	LM_NONE		6253700	1					
ANR	6253985	PrimaryExpression	"""an int64 value"""		6253700	1					
ANR	6253986	PrimaryExpression	"""an int64 value or range"""		6253700	2					
ANR	6253987	Identifier	opts_type_int		6253700	1					
ANR	6253988	ParameterList	"Visitor * v , int64_t * obj , const char * name , Error * * errp"		6253700	2					
ANR	6253989	Parameter	Visitor * v	1:14:14:23	6253700	0	True				
ANR	6253990	ParameterType	Visitor *		6253700	0					
ANR	6253991	Identifier	v		6253700	1					
ANR	6253992	Parameter	int64_t * obj	1:26:26:37	6253700	1	True				
ANR	6253993	ParameterType	int64_t *		6253700	0					
ANR	6253994	Identifier	obj		6253700	1					
ANR	6253995	Parameter	const char * name	1:40:40:55	6253700	2	True				
ANR	6253996	ParameterType	const char *		6253700	0					
ANR	6253997	Identifier	name		6253700	1					
ANR	6253998	Parameter	Error * * errp	1:58:58:69	6253700	3	True				
ANR	6253999	ParameterType	Error * *		6253700	0					
ANR	6254000	Identifier	errp		6253700	1					
ANR	6254001	CFGEntryNode	ENTRY		6253700		True				
ANR	6254002	CFGExitNode	EXIT		6253700		True				
ANR	6254003	Symbol	opt -> name		6253700						
ANR	6254004	Symbol	errp		6253700						
ANR	6254005	Symbol	ov -> range_next		6253700						
ANR	6254006	Symbol	val2		6253700						
ANR	6254007	Symbol	INT64_MAX		6253700						
ANR	6254008	Symbol	* ov		6253700						
ANR	6254009	Symbol	lookup_scalar		6253700						
ANR	6254010	Symbol	ov -> range_next . s		6253700						
ANR	6254011	Symbol	opt -> str		6253700						
ANR	6254012	Symbol	LM_SIGNED_INTERVAL		6253700						
ANR	6254013	Symbol	ov -> range_limit . s		6253700						
ANR	6254014	Symbol	INT64_MIN		6253700						
ANR	6254015	Symbol	* opt		6253700						
ANR	6254016	Symbol	ov -> range_limit		6253700						
ANR	6254017	Symbol	ov -> list_mode		6253700						
ANR	6254018	Symbol	QERR_INVALID_PARAMETER_VALUE		6253700						
ANR	6254019	Symbol	val		6253700						
ANR	6254020	Symbol	* obj		6253700						
ANR	6254021	Symbol	errno		6253700						
ANR	6254022	Symbol	DO_UPCAST		6253700						
ANR	6254023	Symbol	endptr		6253700						
ANR	6254024	Symbol	OptsVisitor		6253700						
ANR	6254025	Symbol	* endptr		6253700						
ANR	6254026	Symbol	ov		6253700						
ANR	6254027	Symbol	& endptr		6253700						
ANR	6254028	Symbol	LM_NONE		6253700						
ANR	6254029	Symbol	LM_IN_PROGRESS		6253700						
ANR	6254030	Symbol	str		6253700						
ANR	6254031	Symbol	opt		6253700						
ANR	6254032	Symbol	v		6253700						
ANR	6254033	Symbol	obj		6253700						
ANR	6254034	Symbol	strtoll		6253700						
ANR	6254035	Symbol	name		6253700						
ANR	6254036	Symbol	visitor		6253700						
