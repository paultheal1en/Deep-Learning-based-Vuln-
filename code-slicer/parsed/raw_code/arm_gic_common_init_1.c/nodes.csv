command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	600674	File	/home/p4ultr4n/workplace/ReVeal/raw_code/arm_gic_common_init_1.c								
ANR	600675	Function	arm_gic_common_init	1:0:0:883							
ANR	600676	FunctionDef	arm_gic_common_init (SysBusDevice * dev)		600675	0					
ANR	600677	CompoundStatement		3:0:51:883	600675	0					
ANR	600678	IdentifierDeclStatement	"GICState * s = FROM_SYSBUS ( GICState , dev ) ;"	5:4:58:98	600675	0	True				
ANR	600679	IdentifierDecl	"* s = FROM_SYSBUS ( GICState , dev )"		600675	0					
ANR	600680	IdentifierDeclType	GICState *		600675	0					
ANR	600681	Identifier	s		600675	1					
ANR	600682	AssignmentExpression	"* s = FROM_SYSBUS ( GICState , dev )"		600675	2		=			
ANR	600683	Identifier	s		600675	0					
ANR	600684	CallExpression	"FROM_SYSBUS ( GICState , dev )"		600675	1					
ANR	600685	Callee	FROM_SYSBUS		600675	0					
ANR	600686	Identifier	FROM_SYSBUS		600675	0					
ANR	600687	ArgumentList	GICState		600675	1					
ANR	600688	Argument	GICState		600675	0					
ANR	600689	Identifier	GICState		600675	0					
ANR	600690	Argument	dev		600675	1					
ANR	600691	Identifier	dev		600675	0					
ANR	600692	IdentifierDeclStatement	int num_irq = s -> num_irq ;	7:4:105:129	600675	1	True				
ANR	600693	IdentifierDecl	num_irq = s -> num_irq		600675	0					
ANR	600694	IdentifierDeclType	int		600675	0					
ANR	600695	Identifier	num_irq		600675	1					
ANR	600696	AssignmentExpression	num_irq = s -> num_irq		600675	2		=			
ANR	600697	Identifier	num_irq		600675	0					
ANR	600698	PtrMemberAccess	s -> num_irq		600675	1					
ANR	600699	Identifier	s		600675	0					
ANR	600700	Identifier	num_irq		600675	1					
ANR	600701	IfStatement	if ( s -> num_cpu > NCPU )		600675	2					
ANR	600702	Condition	s -> num_cpu > NCPU	11:8:142:158	600675	0	True				
ANR	600703	RelationalExpression	s -> num_cpu > NCPU		600675	0		>			
ANR	600704	PtrMemberAccess	s -> num_cpu		600675	0					
ANR	600705	Identifier	s		600675	0					
ANR	600706	Identifier	num_cpu		600675	1					
ANR	600707	Identifier	NCPU		600675	1					
ANR	600708	CompoundStatement		9:27:109:109	600675	1					
ANR	600709	ExpressionStatement	"hw_error ( ""requested %u CPUs exceeds GIC maximum %d\\n"" , s -> num_cpu , NCPU )"	13:8:172:262	600675	0	True				
ANR	600710	CallExpression	"hw_error ( ""requested %u CPUs exceeds GIC maximum %d\\n"" , s -> num_cpu , NCPU )"		600675	0					
ANR	600711	Callee	hw_error		600675	0					
ANR	600712	Identifier	hw_error		600675	0					
ANR	600713	ArgumentList	"""requested %u CPUs exceeds GIC maximum %d\\n"""		600675	1					
ANR	600714	Argument	"""requested %u CPUs exceeds GIC maximum %d\\n"""		600675	0					
ANR	600715	PrimaryExpression	"""requested %u CPUs exceeds GIC maximum %d\\n"""		600675	0					
ANR	600716	Argument	s -> num_cpu		600675	1					
ANR	600717	PtrMemberAccess	s -> num_cpu		600675	0					
ANR	600718	Identifier	s		600675	0					
ANR	600719	Identifier	num_cpu		600675	1					
ANR	600720	Argument	NCPU		600675	2					
ANR	600721	Identifier	NCPU		600675	0					
ANR	600722	ExpressionStatement	s -> num_irq += GIC_BASE_IRQ	19:4:276:302	600675	3	True				
ANR	600723	AssignmentExpression	s -> num_irq += GIC_BASE_IRQ		600675	0		+=			
ANR	600724	PtrMemberAccess	s -> num_irq		600675	0					
ANR	600725	Identifier	s		600675	0					
ANR	600726	Identifier	num_irq		600675	1					
ANR	600727	Identifier	GIC_BASE_IRQ		600675	1					
ANR	600728	IfStatement	if ( s -> num_irq > GIC_MAXIRQ )		600675	4					
ANR	600729	Condition	s -> num_irq > GIC_MAXIRQ	21:8:313:335	600675	0	True				
ANR	600730	RelationalExpression	s -> num_irq > GIC_MAXIRQ		600675	0		>			
ANR	600731	PtrMemberAccess	s -> num_irq		600675	0					
ANR	600732	Identifier	s		600675	0					
ANR	600733	Identifier	num_irq		600675	1					
ANR	600734	Identifier	GIC_MAXIRQ		600675	1					
ANR	600735	CompoundStatement		19:33:286:286	600675	1					
ANR	600736	ExpressionStatement	"hw_error ( ""requested %u interrupt lines exceeds GIC maximum %d\\n"" , num_irq , GIC_MAXIRQ )"	23:8:349:453	600675	0	True				
ANR	600737	CallExpression	"hw_error ( ""requested %u interrupt lines exceeds GIC maximum %d\\n"" , num_irq , GIC_MAXIRQ )"		600675	0					
ANR	600738	Callee	hw_error		600675	0					
ANR	600739	Identifier	hw_error		600675	0					
ANR	600740	ArgumentList	"""requested %u interrupt lines exceeds GIC maximum %d\\n"""		600675	1					
ANR	600741	Argument	"""requested %u interrupt lines exceeds GIC maximum %d\\n"""		600675	0					
ANR	600742	PrimaryExpression	"""requested %u interrupt lines exceeds GIC maximum %d\\n"""		600675	0					
ANR	600743	Argument	num_irq		600675	1					
ANR	600744	Identifier	num_irq		600675	0					
ANR	600745	Argument	GIC_MAXIRQ		600675	2					
ANR	600746	Identifier	GIC_MAXIRQ		600675	0					
ANR	600747	IfStatement	if ( s -> num_irq < 32 || ( s -> num_irq % 32 ) )		600675	5					
ANR	600748	Condition	s -> num_irq < 32 || ( s -> num_irq % 32 )	37:8:646:681	600675	0	True				
ANR	600749	OrExpression	s -> num_irq < 32 || ( s -> num_irq % 32 )		600675	0		||			
ANR	600750	RelationalExpression	s -> num_irq < 32		600675	0		<			
ANR	600751	PtrMemberAccess	s -> num_irq		600675	0					
ANR	600752	Identifier	s		600675	0					
ANR	600753	Identifier	num_irq		600675	1					
ANR	600754	PrimaryExpression	32		600675	1					
ANR	600755	MultiplicativeExpression	s -> num_irq % 32		600675	1		%			
ANR	600756	PtrMemberAccess	s -> num_irq		600675	0					
ANR	600757	Identifier	s		600675	0					
ANR	600758	Identifier	num_irq		600675	1					
ANR	600759	PrimaryExpression	32		600675	1					
ANR	600760	CompoundStatement		35:46:632:632	600675	1					
ANR	600761	ExpressionStatement	"hw_error ( ""%d interrupt lines unsupported: not divisible by 32\\n"" , num_irq )"	39:8:695:787	600675	0	True				
ANR	600762	CallExpression	"hw_error ( ""%d interrupt lines unsupported: not divisible by 32\\n"" , num_irq )"		600675	0					
ANR	600763	Callee	hw_error		600675	0					
ANR	600764	Identifier	hw_error		600675	0					
ANR	600765	ArgumentList	"""%d interrupt lines unsupported: not divisible by 32\\n"""		600675	1					
ANR	600766	Argument	"""%d interrupt lines unsupported: not divisible by 32\\n"""		600675	0					
ANR	600767	PrimaryExpression	"""%d interrupt lines unsupported: not divisible by 32\\n"""		600675	0					
ANR	600768	Argument	num_irq		600675	1					
ANR	600769	Identifier	num_irq		600675	0					
ANR	600770	ExpressionStatement	"register_savevm ( NULL , ""arm_gic"" , - 1 , 3 , gic_save , gic_load , s )"	47:4:803:865	600675	6	True				
ANR	600771	CallExpression	"register_savevm ( NULL , ""arm_gic"" , - 1 , 3 , gic_save , gic_load , s )"		600675	0					
ANR	600772	Callee	register_savevm		600675	0					
ANR	600773	Identifier	register_savevm		600675	0					
ANR	600774	ArgumentList	NULL		600675	1					
ANR	600775	Argument	NULL		600675	0					
ANR	600776	Identifier	NULL		600675	0					
ANR	600777	Argument	"""arm_gic"""		600675	1					
ANR	600778	PrimaryExpression	"""arm_gic"""		600675	0					
ANR	600779	Argument	- 1		600675	2					
ANR	600780	UnaryOperationExpression	- 1		600675	0					
ANR	600781	UnaryOperator	-		600675	0					
ANR	600782	PrimaryExpression	1		600675	1					
ANR	600783	Argument	3		600675	3					
ANR	600784	PrimaryExpression	3		600675	0					
ANR	600785	Argument	gic_save		600675	4					
ANR	600786	Identifier	gic_save		600675	0					
ANR	600787	Argument	gic_load		600675	5					
ANR	600788	Identifier	gic_load		600675	0					
ANR	600789	Argument	s		600675	6					
ANR	600790	Identifier	s		600675	0					
ANR	600791	ReturnStatement	return 0 ;	49:4:872:880	600675	7	True				
ANR	600792	PrimaryExpression	0		600675	0					
ANR	600793	ReturnType	static int		600675	1					
ANR	600794	Identifier	arm_gic_common_init		600675	2					
ANR	600795	ParameterList	SysBusDevice * dev		600675	3					
ANR	600796	Parameter	SysBusDevice * dev	1:31:31:47	600675	0	True				
ANR	600797	ParameterType	SysBusDevice *		600675	0					
ANR	600798	Identifier	dev		600675	1					
ANR	600799	CFGEntryNode	ENTRY		600675		True				
ANR	600800	CFGExitNode	EXIT		600675		True				
ANR	600801	Symbol	GIC_MAXIRQ		600675						
ANR	600802	Symbol	gic_load		600675						
ANR	600803	Symbol	NULL		600675						
ANR	600804	Symbol	GICState		600675						
ANR	600805	Symbol	s -> num_irq		600675						
ANR	600806	Symbol	s -> num_cpu		600675						
ANR	600807	Symbol	FROM_SYSBUS		600675						
ANR	600808	Symbol	num_irq		600675						
ANR	600809	Symbol	GIC_BASE_IRQ		600675						
ANR	600810	Symbol	s		600675						
ANR	600811	Symbol	dev		600675						
ANR	600812	Symbol	gic_save		600675						
ANR	600813	Symbol	* s		600675						
ANR	600814	Symbol	NCPU		600675						
