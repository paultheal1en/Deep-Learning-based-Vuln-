command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	558022	File	/home/p4ultr4n/workplace/ReVeal/raw_code/ape_decode_frame_02_0.c								
ANR	558023	Function	ape_decode_frame	1:0:0:5016							
ANR	558024	FunctionDef	"ape_decode_frame (AVCodecContext * avctx , void * data , int * got_frame_ptr , AVPacket * avpkt)"		558023	0					
ANR	558025	CompoundStatement		5:0:130:5016	558023	0					
ANR	558026	IdentifierDeclStatement	AVFrame * frame = data ;	7:4:137:162	558023	0	True				
ANR	558027	IdentifierDecl	* frame = data		558023	0					
ANR	558028	IdentifierDeclType	AVFrame *		558023	0					
ANR	558029	Identifier	frame		558023	1					
ANR	558030	AssignmentExpression	* frame = data		558023	2		=			
ANR	558031	Identifier	data		558023	0					
ANR	558032	Identifier	data		558023	1					
ANR	558033	IdentifierDeclStatement	const uint8_t * buf = avpkt -> data ;	9:4:169:201	558023	1	True				
ANR	558034	IdentifierDecl	* buf = avpkt -> data		558023	0					
ANR	558035	IdentifierDeclType	const uint8_t *		558023	0					
ANR	558036	Identifier	buf		558023	1					
ANR	558037	AssignmentExpression	* buf = avpkt -> data		558023	2		=			
ANR	558038	Identifier	buf		558023	0					
ANR	558039	PtrMemberAccess	avpkt -> data		558023	1					
ANR	558040	Identifier	avpkt		558023	0					
ANR	558041	Identifier	data		558023	1					
ANR	558042	IdentifierDeclStatement	APEContext * s = avctx -> priv_data ;	11:4:208:240	558023	2	True				
ANR	558043	IdentifierDecl	* s = avctx -> priv_data		558023	0					
ANR	558044	IdentifierDeclType	APEContext *		558023	0					
ANR	558045	Identifier	s		558023	1					
ANR	558046	AssignmentExpression	* s = avctx -> priv_data		558023	2		=			
ANR	558047	Identifier	s		558023	0					
ANR	558048	PtrMemberAccess	avctx -> priv_data		558023	1					
ANR	558049	Identifier	avctx		558023	0					
ANR	558050	Identifier	priv_data		558023	1					
ANR	558051	IdentifierDeclStatement	uint8_t * sample8 ;	13:4:247:263	558023	3	True				
ANR	558052	IdentifierDecl	* sample8		558023	0					
ANR	558053	IdentifierDeclType	uint8_t *		558023	0					
ANR	558054	Identifier	sample8		558023	1					
ANR	558055	IdentifierDeclStatement	int16_t * sample16 ;	15:4:270:287	558023	4	True				
ANR	558056	IdentifierDecl	* sample16		558023	0					
ANR	558057	IdentifierDeclType	int16_t *		558023	0					
ANR	558058	Identifier	sample16		558023	1					
ANR	558059	IdentifierDeclStatement	int32_t * sample24 ;	17:4:294:311	558023	5	True				
ANR	558060	IdentifierDecl	* sample24		558023	0					
ANR	558061	IdentifierDeclType	int32_t *		558023	0					
ANR	558062	Identifier	sample24		558023	1					
ANR	558063	IdentifierDeclStatement	"int i , ch , ret ;"	19:4:318:332	558023	6	True				
ANR	558064	IdentifierDecl	i		558023	0					
ANR	558065	IdentifierDeclType	int		558023	0					
ANR	558066	Identifier	i		558023	1					
ANR	558067	IdentifierDecl	ch		558023	1					
ANR	558068	IdentifierDeclType	int		558023	0					
ANR	558069	Identifier	ch		558023	1					
ANR	558070	IdentifierDecl	ret		558023	2					
ANR	558071	IdentifierDeclType	int		558023	0					
ANR	558072	Identifier	ret		558023	1					
ANR	558073	IdentifierDeclStatement	int blockstodecode ;	21:4:339:357	558023	7	True				
ANR	558074	IdentifierDecl	blockstodecode		558023	0					
ANR	558075	IdentifierDeclType	int		558023	0					
ANR	558076	Identifier	blockstodecode		558023	1					
ANR	558077	ExpressionStatement	av_assert0 ( s -> samples >= 0 )	29:4:484:511	558023	8	True				
ANR	558078	CallExpression	av_assert0 ( s -> samples >= 0 )		558023	0					
ANR	558079	Callee	av_assert0		558023	0					
ANR	558080	Identifier	av_assert0		558023	0					
ANR	558081	ArgumentList	s -> samples >= 0		558023	1					
ANR	558082	Argument	s -> samples >= 0		558023	0					
ANR	558083	RelationalExpression	s -> samples >= 0		558023	0		>=			
ANR	558084	PtrMemberAccess	s -> samples		558023	0					
ANR	558085	Identifier	s		558023	0					
ANR	558086	Identifier	samples		558023	1					
ANR	558087	PrimaryExpression	0		558023	1					
ANR	558088	IfStatement	if ( ! s -> samples )		558023	9					
ANR	558089	Condition	! s -> samples	33:7:523:533	558023	0	True				
ANR	558090	UnaryOperationExpression	! s -> samples		558023	0					
ANR	558091	UnaryOperator	!		558023	0					
ANR	558092	PtrMemberAccess	s -> samples		558023	1					
ANR	558093	Identifier	s		558023	0					
ANR	558094	Identifier	samples		558023	1					
ANR	558095	CompoundStatement		33:8:450:462	558023	1					
ANR	558096	IdentifierDeclStatement	"uint32_t nblocks , offset ;"	35:8:546:570	558023	0	True				
ANR	558097	IdentifierDecl	nblocks		558023	0					
ANR	558098	IdentifierDeclType	uint32_t		558023	0					
ANR	558099	Identifier	nblocks		558023	1					
ANR	558100	IdentifierDecl	offset		558023	1					
ANR	558101	IdentifierDeclType	uint32_t		558023	0					
ANR	558102	Identifier	offset		558023	1					
ANR	558103	IdentifierDeclStatement	int buf_size ;	37:8:581:593	558023	1	True				
ANR	558104	IdentifierDecl	buf_size		558023	0					
ANR	558105	IdentifierDeclType	int		558023	0					
ANR	558106	Identifier	buf_size		558023	1					
ANR	558107	IfStatement	if ( ! avpkt -> size )		558023	2					
ANR	558108	Condition	! avpkt -> size	41:12:610:621	558023	0	True				
ANR	558109	UnaryOperationExpression	! avpkt -> size		558023	0					
ANR	558110	UnaryOperator	!		558023	0					
ANR	558111	PtrMemberAccess	avpkt -> size		558023	1					
ANR	558112	Identifier	avpkt		558023	0					
ANR	558113	Identifier	size		558023	1					
ANR	558114	CompoundStatement		37:26:493:493	558023	1					
ANR	558115	ExpressionStatement	* got_frame_ptr = 0	43:12:639:657	558023	0	True				
ANR	558116	AssignmentExpression	* got_frame_ptr = 0		558023	0		=			
ANR	558117	UnaryOperationExpression	* got_frame_ptr		558023	0					
ANR	558118	UnaryOperator	*		558023	0					
ANR	558119	Identifier	got_frame_ptr		558023	1					
ANR	558120	PrimaryExpression	0		558023	1					
ANR	558121	ReturnStatement	return 0 ;	45:12:672:680	558023	1	True				
ANR	558122	PrimaryExpression	0		558023	0					
ANR	558123	IfStatement	if ( avpkt -> size < 8 )		558023	3					
ANR	558124	Condition	avpkt -> size < 8	49:12:706:720	558023	0	True				
ANR	558125	RelationalExpression	avpkt -> size < 8		558023	0		<			
ANR	558126	PtrMemberAccess	avpkt -> size		558023	0					
ANR	558127	Identifier	avpkt		558023	0					
ANR	558128	Identifier	size		558023	1					
ANR	558129	PrimaryExpression	8		558023	1					
ANR	558130	CompoundStatement		45:29:592:592	558023	1					
ANR	558131	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Packet is too small\\n"" )"	51:12:738:790	558023	0	True				
ANR	558132	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Packet is too small\\n"" )"		558023	0					
ANR	558133	Callee	av_log		558023	0					
ANR	558134	Identifier	av_log		558023	0					
ANR	558135	ArgumentList	avctx		558023	1					
ANR	558136	Argument	avctx		558023	0					
ANR	558137	Identifier	avctx		558023	0					
ANR	558138	Argument	AV_LOG_ERROR		558023	1					
ANR	558139	Identifier	AV_LOG_ERROR		558023	0					
ANR	558140	Argument	"""Packet is too small\\n"""		558023	2					
ANR	558141	PrimaryExpression	"""Packet is too small\\n"""		558023	0					
ANR	558142	ReturnStatement	return AVERROR_INVALIDDATA ;	53:12:805:831	558023	1	True				
ANR	558143	Identifier	AVERROR_INVALIDDATA		558023	0					
ANR	558144	ExpressionStatement	buf_size = avpkt -> size & ~3	57:8:853:880	558023	4	True				
ANR	558145	AssignmentExpression	buf_size = avpkt -> size & ~3		558023	0		=			
ANR	558146	Identifier	buf_size		558023	0					
ANR	558147	BitAndExpression	avpkt -> size & ~3		558023	1		&			
ANR	558148	PtrMemberAccess	avpkt -> size		558023	0					
ANR	558149	Identifier	avpkt		558023	0					
ANR	558150	Identifier	size		558023	1					
ANR	558151	Identifier	~3		558023	1					
ANR	558152	IfStatement	if ( buf_size != avpkt -> size )		558023	5					
ANR	558153	Condition	buf_size != avpkt -> size	59:12:895:917	558023	0	True				
ANR	558154	EqualityExpression	buf_size != avpkt -> size		558023	0		!=			
ANR	558155	Identifier	buf_size		558023	0					
ANR	558156	PtrMemberAccess	avpkt -> size		558023	1					
ANR	558157	Identifier	avpkt		558023	0					
ANR	558158	Identifier	size		558023	1					
ANR	558159	CompoundStatement		55:37:789:789	558023	1					
ANR	558160	Statement	av_log	61:12:935:940	558023	0	True				
ANR	558161	Statement	(	61:18:941:941	558023	1	True				
ANR	558162	Statement	avctx	61:19:942:946	558023	2	True				
ANR	558163	Statement	","	61:24:947:947	558023	3	True				
ANR	558164	Statement	AV_LOG_WARNING	61:26:949:962	558023	4	True				
ANR	558165	Statement	","	61:40:963:963	558023	5	True				
ANR	558166	Statement	"""packet size is not a multiple of 4. """	61:42:965:1002	558023	6	True				
ANR	558167	Statement	"""extra bytes at the end will be skipped.\\n"""	63:19:1024:1066	558023	7	True				
ANR	558168	Statement	)	63:62:1067:1067	558023	8	True				
ANR	558169	ExpressionStatement		63:63:1068:1068	558023	9	True				
ANR	558170	IfStatement	if ( s -> fileversion < 3950 )		558023	6					
ANR	558171	Condition	s -> fileversion < 3950	67:12:1094:1114	558023	0	True				
ANR	558172	RelationalExpression	s -> fileversion < 3950		558023	0		<			
ANR	558173	PtrMemberAccess	s -> fileversion		558023	0					
ANR	558174	Identifier	s		558023	0					
ANR	558175	Identifier	fileversion		558023	1					
ANR	558176	PrimaryExpression	3950		558023	1					
ANR	558177	ExpressionStatement	buf_size += 2	69:12:1170:1183	558023	1	True				
ANR	558178	AssignmentExpression	buf_size += 2		558023	0		+=			
ANR	558179	Identifier	buf_size		558023	0					
ANR	558180	PrimaryExpression	2		558023	1					
ANR	558181	ExpressionStatement	"av_fast_padded_malloc ( & s -> data , & s -> data_size , buf_size )"	71:8:1194:1250	558023	7	True				
ANR	558182	CallExpression	"av_fast_padded_malloc ( & s -> data , & s -> data_size , buf_size )"		558023	0					
ANR	558183	Callee	av_fast_padded_malloc		558023	0					
ANR	558184	Identifier	av_fast_padded_malloc		558023	0					
ANR	558185	ArgumentList	& s -> data		558023	1					
ANR	558186	Argument	& s -> data		558023	0					
ANR	558187	UnaryOperationExpression	& s -> data		558023	0					
ANR	558188	UnaryOperator	&		558023	0					
ANR	558189	PtrMemberAccess	s -> data		558023	1					
ANR	558190	Identifier	s		558023	0					
ANR	558191	Identifier	data		558023	1					
ANR	558192	Argument	& s -> data_size		558023	1					
ANR	558193	UnaryOperationExpression	& s -> data_size		558023	0					
ANR	558194	UnaryOperator	&		558023	0					
ANR	558195	PtrMemberAccess	s -> data_size		558023	1					
ANR	558196	Identifier	s		558023	0					
ANR	558197	Identifier	data_size		558023	1					
ANR	558198	Argument	buf_size		558023	2					
ANR	558199	Identifier	buf_size		558023	0					
ANR	558200	IfStatement	if ( ! s -> data )		558023	8					
ANR	558201	Condition	! s -> data	73:12:1265:1272	558023	0	True				
ANR	558202	UnaryOperationExpression	! s -> data		558023	0					
ANR	558203	UnaryOperator	!		558023	0					
ANR	558204	PtrMemberAccess	s -> data		558023	1					
ANR	558205	Identifier	s		558023	0					
ANR	558206	Identifier	data		558023	1					
ANR	558207	ReturnStatement	return AVERROR ( ENOMEM ) ;	75:12:1288:1310	558023	1	True				
ANR	558208	CallExpression	AVERROR ( ENOMEM )		558023	0					
ANR	558209	Callee	AVERROR		558023	0					
ANR	558210	Identifier	AVERROR		558023	0					
ANR	558211	ArgumentList	ENOMEM		558023	1					
ANR	558212	Argument	ENOMEM		558023	0					
ANR	558213	Identifier	ENOMEM		558023	0					
ANR	558214	ExpressionStatement	"s -> bdsp . bswap_buf ( ( uint32_t * ) s -> data , ( const uint32_t * ) buf , buf_size >> 2 )"	77:8:1321:1426	558023	9	True				
ANR	558215	CallExpression	"s -> bdsp . bswap_buf ( ( uint32_t * ) s -> data , ( const uint32_t * ) buf , buf_size >> 2 )"		558023	0					
ANR	558216	Callee	s -> bdsp . bswap_buf		558023	0					
ANR	558217	MemberAccess	s -> bdsp . bswap_buf		558023	0					
ANR	558218	PtrMemberAccess	s -> bdsp		558023	0					
ANR	558219	Identifier	s		558023	0					
ANR	558220	Identifier	bdsp		558023	1					
ANR	558221	Identifier	bswap_buf		558023	1					
ANR	558222	ArgumentList	( uint32_t * ) s -> data		558023	1					
ANR	558223	Argument	( uint32_t * ) s -> data		558023	0					
ANR	558224	CastExpression	( uint32_t * ) s -> data		558023	0					
ANR	558225	CastTarget	uint32_t *		558023	0					
ANR	558226	PtrMemberAccess	s -> data		558023	1					
ANR	558227	Identifier	s		558023	0					
ANR	558228	Identifier	data		558023	1					
ANR	558229	Argument	( const uint32_t * ) buf		558023	1					
ANR	558230	CastExpression	( const uint32_t * ) buf		558023	0					
ANR	558231	CastTarget	const uint32_t *		558023	0					
ANR	558232	Identifier	buf		558023	1					
ANR	558233	Argument	buf_size >> 2		558023	2					
ANR	558234	ShiftExpression	buf_size >> 2		558023	0		>>			
ANR	558235	Identifier	buf_size		558023	0					
ANR	558236	PrimaryExpression	2		558023	1					
ANR	558237	ExpressionStatement	"memset ( s -> data + ( buf_size & ~3 ) , 0 , buf_size & 3 )"	81:8:1437:1487	558023	10	True				
ANR	558238	CallExpression	"memset ( s -> data + ( buf_size & ~3 ) , 0 , buf_size & 3 )"		558023	0					
ANR	558239	Callee	memset		558023	0					
ANR	558240	Identifier	memset		558023	0					
ANR	558241	ArgumentList	s -> data + ( buf_size & ~3 )		558023	1					
ANR	558242	Argument	s -> data + ( buf_size & ~3 )		558023	0					
ANR	558243	AdditiveExpression	s -> data + ( buf_size & ~3 )		558023	0		+			
ANR	558244	PtrMemberAccess	s -> data		558023	0					
ANR	558245	Identifier	s		558023	0					
ANR	558246	Identifier	data		558023	1					
ANR	558247	BitAndExpression	buf_size & ~3		558023	1		&			
ANR	558248	Identifier	buf_size		558023	0					
ANR	558249	Identifier	~3		558023	1					
ANR	558250	Argument	0		558023	1					
ANR	558251	PrimaryExpression	0		558023	0					
ANR	558252	Argument	buf_size & 3		558023	2					
ANR	558253	BitAndExpression	buf_size & 3		558023	0		&			
ANR	558254	Identifier	buf_size		558023	0					
ANR	558255	PrimaryExpression	3		558023	1					
ANR	558256	ExpressionStatement	s -> ptr = s -> data	83:8:1498:1514	558023	11	True				
ANR	558257	AssignmentExpression	s -> ptr = s -> data		558023	0		=			
ANR	558258	PtrMemberAccess	s -> ptr		558023	0					
ANR	558259	Identifier	s		558023	0					
ANR	558260	Identifier	ptr		558023	1					
ANR	558261	PtrMemberAccess	s -> data		558023	1					
ANR	558262	Identifier	s		558023	0					
ANR	558263	Identifier	data		558023	1					
ANR	558264	ExpressionStatement	s -> data_end = s -> data + buf_size	85:8:1525:1557	558023	12	True				
ANR	558265	AssignmentExpression	s -> data_end = s -> data + buf_size		558023	0		=			
ANR	558266	PtrMemberAccess	s -> data_end		558023	0					
ANR	558267	Identifier	s		558023	0					
ANR	558268	Identifier	data_end		558023	1					
ANR	558269	AdditiveExpression	s -> data + buf_size		558023	1		+			
ANR	558270	PtrMemberAccess	s -> data		558023	0					
ANR	558271	Identifier	s		558023	0					
ANR	558272	Identifier	data		558023	1					
ANR	558273	Identifier	buf_size		558023	1					
ANR	558274	ExpressionStatement	nblocks = bytestream_get_be32 ( & s -> ptr )	89:8:1570:1608	558023	13	True				
ANR	558275	AssignmentExpression	nblocks = bytestream_get_be32 ( & s -> ptr )		558023	0		=			
ANR	558276	Identifier	nblocks		558023	0					
ANR	558277	CallExpression	bytestream_get_be32 ( & s -> ptr )		558023	1					
ANR	558278	Callee	bytestream_get_be32		558023	0					
ANR	558279	Identifier	bytestream_get_be32		558023	0					
ANR	558280	ArgumentList	& s -> ptr		558023	1					
ANR	558281	Argument	& s -> ptr		558023	0					
ANR	558282	UnaryOperationExpression	& s -> ptr		558023	0					
ANR	558283	UnaryOperator	&		558023	0					
ANR	558284	PtrMemberAccess	s -> ptr		558023	1					
ANR	558285	Identifier	s		558023	0					
ANR	558286	Identifier	ptr		558023	1					
ANR	558287	ExpressionStatement	offset = bytestream_get_be32 ( & s -> ptr )	91:8:1619:1657	558023	14	True				
ANR	558288	AssignmentExpression	offset = bytestream_get_be32 ( & s -> ptr )		558023	0		=			
ANR	558289	Identifier	offset		558023	0					
ANR	558290	CallExpression	bytestream_get_be32 ( & s -> ptr )		558023	1					
ANR	558291	Callee	bytestream_get_be32		558023	0					
ANR	558292	Identifier	bytestream_get_be32		558023	0					
ANR	558293	ArgumentList	& s -> ptr		558023	1					
ANR	558294	Argument	& s -> ptr		558023	0					
ANR	558295	UnaryOperationExpression	& s -> ptr		558023	0					
ANR	558296	UnaryOperator	&		558023	0					
ANR	558297	PtrMemberAccess	s -> ptr		558023	1					
ANR	558298	Identifier	s		558023	0					
ANR	558299	Identifier	ptr		558023	1					
ANR	558300	IfStatement	if ( s -> fileversion >= 3900 )		558023	15					
ANR	558301	Condition	s -> fileversion >= 3900	93:12:1672:1693	558023	0	True				
ANR	558302	RelationalExpression	s -> fileversion >= 3900		558023	0		>=			
ANR	558303	PtrMemberAccess	s -> fileversion		558023	0					
ANR	558304	Identifier	s		558023	0					
ANR	558305	Identifier	fileversion		558023	1					
ANR	558306	PrimaryExpression	3900		558023	1					
ANR	558307	CompoundStatement		89:36:1565:1565	558023	1					
ANR	558308	IfStatement	if ( offset > 3 )		558023	0					
ANR	558309	Condition	offset > 3	95:16:1715:1724	558023	0	True				
ANR	558310	RelationalExpression	offset > 3		558023	0		>			
ANR	558311	Identifier	offset		558023	0					
ANR	558312	PrimaryExpression	3		558023	1					
ANR	558313	CompoundStatement		91:28:1596:1596	558023	1					
ANR	558314	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Incorrect offset passed\\n"" )"	97:16:1746:1802	558023	0	True				
ANR	558315	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Incorrect offset passed\\n"" )"		558023	0					
ANR	558316	Callee	av_log		558023	0					
ANR	558317	Identifier	av_log		558023	0					
ANR	558318	ArgumentList	avctx		558023	1					
ANR	558319	Argument	avctx		558023	0					
ANR	558320	Identifier	avctx		558023	0					
ANR	558321	Argument	AV_LOG_ERROR		558023	1					
ANR	558322	Identifier	AV_LOG_ERROR		558023	0					
ANR	558323	Argument	"""Incorrect offset passed\\n"""		558023	2					
ANR	558324	PrimaryExpression	"""Incorrect offset passed\\n"""		558023	0					
ANR	558325	ExpressionStatement	s -> data = NULL	99:16:1821:1835	558023	1	True				
ANR	558326	AssignmentExpression	s -> data = NULL		558023	0		=			
ANR	558327	PtrMemberAccess	s -> data		558023	0					
ANR	558328	Identifier	s		558023	0					
ANR	558329	Identifier	data		558023	1					
ANR	558330	Identifier	NULL		558023	1					
ANR	558331	ReturnStatement	return AVERROR_INVALIDDATA ;	101:16:1854:1880	558023	2	True				
ANR	558332	Identifier	AVERROR_INVALIDDATA		558023	0					
ANR	558333	IfStatement	if ( s -> data_end - s -> ptr < offset )		558023	1					
ANR	558334	Condition	s -> data_end - s -> ptr < offset	105:16:1914:1942	558023	0	True				
ANR	558335	RelationalExpression	s -> data_end - s -> ptr < offset		558023	0		<			
ANR	558336	AdditiveExpression	s -> data_end - s -> ptr		558023	0		-			
ANR	558337	PtrMemberAccess	s -> data_end		558023	0					
ANR	558338	Identifier	s		558023	0					
ANR	558339	Identifier	data_end		558023	1					
ANR	558340	PtrMemberAccess	s -> ptr		558023	1					
ANR	558341	Identifier	s		558023	0					
ANR	558342	Identifier	ptr		558023	1					
ANR	558343	Identifier	offset		558023	1					
ANR	558344	CompoundStatement		101:47:1814:1814	558023	1					
ANR	558345	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Packet is too small\\n"" )"	107:16:1964:2016	558023	0	True				
ANR	558346	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Packet is too small\\n"" )"		558023	0					
ANR	558347	Callee	av_log		558023	0					
ANR	558348	Identifier	av_log		558023	0					
ANR	558349	ArgumentList	avctx		558023	1					
ANR	558350	Argument	avctx		558023	0					
ANR	558351	Identifier	avctx		558023	0					
ANR	558352	Argument	AV_LOG_ERROR		558023	1					
ANR	558353	Identifier	AV_LOG_ERROR		558023	0					
ANR	558354	Argument	"""Packet is too small\\n"""		558023	2					
ANR	558355	PrimaryExpression	"""Packet is too small\\n"""		558023	0					
ANR	558356	ReturnStatement	return AVERROR_INVALIDDATA ;	109:16:2035:2061	558023	1	True				
ANR	558357	Identifier	AVERROR_INVALIDDATA		558023	0					
ANR	558358	ExpressionStatement	s -> ptr += offset	113:12:2091:2107	558023	2	True				
ANR	558359	AssignmentExpression	s -> ptr += offset		558023	0		+=			
ANR	558360	PtrMemberAccess	s -> ptr		558023	0					
ANR	558361	Identifier	s		558023	0					
ANR	558362	Identifier	ptr		558023	1					
ANR	558363	Identifier	offset		558023	1					
ANR	558364	ElseStatement	else		558023	0					
ANR	558365	CompoundStatement		111:15:1994:1994	558023	0					
ANR	558366	IfStatement	"if ( ( ret = init_get_bits8 ( & s -> gb , s -> ptr , s -> data_end - s -> ptr ) ) < 0 )"		558023	0					
ANR	558367	Condition	"( ret = init_get_bits8 ( & s -> gb , s -> ptr , s -> data_end - s -> ptr ) ) < 0"	117:16:2144:2207	558023	0	True				
ANR	558368	RelationalExpression	"( ret = init_get_bits8 ( & s -> gb , s -> ptr , s -> data_end - s -> ptr ) ) < 0"		558023	0		<			
ANR	558369	AssignmentExpression	"ret = init_get_bits8 ( & s -> gb , s -> ptr , s -> data_end - s -> ptr )"		558023	0		=			
ANR	558370	Identifier	ret		558023	0					
ANR	558371	CallExpression	"init_get_bits8 ( & s -> gb , s -> ptr , s -> data_end - s -> ptr )"		558023	1					
ANR	558372	Callee	init_get_bits8		558023	0					
ANR	558373	Identifier	init_get_bits8		558023	0					
ANR	558374	ArgumentList	& s -> gb		558023	1					
ANR	558375	Argument	& s -> gb		558023	0					
ANR	558376	UnaryOperationExpression	& s -> gb		558023	0					
ANR	558377	UnaryOperator	&		558023	0					
ANR	558378	PtrMemberAccess	s -> gb		558023	1					
ANR	558379	Identifier	s		558023	0					
ANR	558380	Identifier	gb		558023	1					
ANR	558381	Argument	s -> ptr		558023	1					
ANR	558382	PtrMemberAccess	s -> ptr		558023	0					
ANR	558383	Identifier	s		558023	0					
ANR	558384	Identifier	ptr		558023	1					
ANR	558385	Argument	s -> data_end - s -> ptr		558023	2					
ANR	558386	AdditiveExpression	s -> data_end - s -> ptr		558023	0		-			
ANR	558387	PtrMemberAccess	s -> data_end		558023	0					
ANR	558388	Identifier	s		558023	0					
ANR	558389	Identifier	data_end		558023	1					
ANR	558390	PtrMemberAccess	s -> ptr		558023	1					
ANR	558391	Identifier	s		558023	0					
ANR	558392	Identifier	ptr		558023	1					
ANR	558393	PrimaryExpression	0		558023	1					
ANR	558394	ReturnStatement	return ret ;	119:16:2227:2237	558023	1	True				
ANR	558395	Identifier	ret		558023	0					
ANR	558396	IfStatement	if ( s -> fileversion > 3800 )		558023	1					
ANR	558397	Condition	s -> fileversion > 3800	121:16:2256:2276	558023	0	True				
ANR	558398	RelationalExpression	s -> fileversion > 3800		558023	0		>			
ANR	558399	PtrMemberAccess	s -> fileversion		558023	0					
ANR	558400	Identifier	s		558023	0					
ANR	558401	Identifier	fileversion		558023	1					
ANR	558402	PrimaryExpression	3800		558023	1					
ANR	558403	ExpressionStatement	"skip_bits_long ( & s -> gb , offset * 8 )"	123:16:2296:2330	558023	1	True				
ANR	558404	CallExpression	"skip_bits_long ( & s -> gb , offset * 8 )"		558023	0					
ANR	558405	Callee	skip_bits_long		558023	0					
ANR	558406	Identifier	skip_bits_long		558023	0					
ANR	558407	ArgumentList	& s -> gb		558023	1					
ANR	558408	Argument	& s -> gb		558023	0					
ANR	558409	UnaryOperationExpression	& s -> gb		558023	0					
ANR	558410	UnaryOperator	&		558023	0					
ANR	558411	PtrMemberAccess	s -> gb		558023	1					
ANR	558412	Identifier	s		558023	0					
ANR	558413	Identifier	gb		558023	1					
ANR	558414	Argument	offset * 8		558023	1					
ANR	558415	MultiplicativeExpression	offset * 8		558023	0		*			
ANR	558416	Identifier	offset		558023	0					
ANR	558417	PrimaryExpression	8		558023	1					
ANR	558418	ElseStatement	else		558023	0					
ANR	558419	ExpressionStatement	"skip_bits_long ( & s -> gb , offset )"	127:16:2367:2397	558023	0	True				
ANR	558420	CallExpression	"skip_bits_long ( & s -> gb , offset )"		558023	0					
ANR	558421	Callee	skip_bits_long		558023	0					
ANR	558422	Identifier	skip_bits_long		558023	0					
ANR	558423	ArgumentList	& s -> gb		558023	1					
ANR	558424	Argument	& s -> gb		558023	0					
ANR	558425	UnaryOperationExpression	& s -> gb		558023	0					
ANR	558426	UnaryOperator	&		558023	0					
ANR	558427	PtrMemberAccess	s -> gb		558023	1					
ANR	558428	Identifier	s		558023	0					
ANR	558429	Identifier	gb		558023	1					
ANR	558430	Argument	offset		558023	1					
ANR	558431	Identifier	offset		558023	0					
ANR	558432	IfStatement	if ( ! nblocks || nblocks > INT_MAX )		558023	16					
ANR	558433	Condition	! nblocks || nblocks > INT_MAX	133:12:2425:2453	558023	0	True				
ANR	558434	OrExpression	! nblocks || nblocks > INT_MAX		558023	0		||			
ANR	558435	UnaryOperationExpression	! nblocks		558023	0					
ANR	558436	UnaryOperator	!		558023	0					
ANR	558437	Identifier	nblocks		558023	1					
ANR	558438	RelationalExpression	nblocks > INT_MAX		558023	1		>			
ANR	558439	Identifier	nblocks		558023	0					
ANR	558440	Identifier	INT_MAX		558023	1					
ANR	558441	CompoundStatement		129:43:2325:2325	558023	1					
ANR	558442	Statement	av_log	135:12:2471:2476	558023	0	True				
ANR	558443	Statement	(	135:18:2477:2477	558023	1	True				
ANR	558444	Statement	avctx	135:19:2478:2482	558023	2	True				
ANR	558445	Statement	","	135:24:2483:2483	558023	3	True				
ANR	558446	Statement	AV_LOG_ERROR	135:26:2485:2496	558023	4	True				
ANR	558447	Statement	","	135:38:2497:2497	558023	5	True				
ANR	558448	Statement	"""Invalid sample count: %"""	135:40:2499:2523	558023	6	True				
ANR	558449	Statement	PRIu32	135:65:2524:2529	558023	7	True				
ANR	558450	Statement	""".\\n"""	135:71:2530:2534	558023	8	True				
ANR	558451	Statement	","	135:76:2535:2535	558023	9	True				
ANR	558452	Statement	nblocks	137:19:2557:2563	558023	10	True				
ANR	558453	Statement	)	137:26:2564:2564	558023	11	True				
ANR	558454	ExpressionStatement		137:27:2565:2565	558023	12	True				
ANR	558455	ReturnStatement	return AVERROR_INVALIDDATA ;	139:12:2580:2606	558023	13	True				
ANR	558456	Identifier	AVERROR_INVALIDDATA		558023	0					
ANR	558457	ExpressionStatement	s -> samples = nblocks	143:8:2628:2648	558023	17	True				
ANR	558458	AssignmentExpression	s -> samples = nblocks		558023	0		=			
ANR	558459	PtrMemberAccess	s -> samples		558023	0					
ANR	558460	Identifier	s		558023	0					
ANR	558461	Identifier	samples		558023	1					
ANR	558462	Identifier	nblocks		558023	1					
ANR	558463	IfStatement	if ( init_frame_decoder ( s ) < 0 )		558023	18					
ANR	558464	Condition	init_frame_decoder ( s ) < 0	149:12:2709:2733	558023	0	True				
ANR	558465	RelationalExpression	init_frame_decoder ( s ) < 0		558023	0		<			
ANR	558466	CallExpression	init_frame_decoder ( s )		558023	0					
ANR	558467	Callee	init_frame_decoder		558023	0					
ANR	558468	Identifier	init_frame_decoder		558023	0					
ANR	558469	ArgumentList	s		558023	1					
ANR	558470	Argument	s		558023	0					
ANR	558471	Identifier	s		558023	0					
ANR	558472	PrimaryExpression	0		558023	1					
ANR	558473	CompoundStatement		145:39:2605:2605	558023	1					
ANR	558474	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Error reading frame header\\n"" )"	151:12:2751:2810	558023	0	True				
ANR	558475	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Error reading frame header\\n"" )"		558023	0					
ANR	558476	Callee	av_log		558023	0					
ANR	558477	Identifier	av_log		558023	0					
ANR	558478	ArgumentList	avctx		558023	1					
ANR	558479	Argument	avctx		558023	0					
ANR	558480	Identifier	avctx		558023	0					
ANR	558481	Argument	AV_LOG_ERROR		558023	1					
ANR	558482	Identifier	AV_LOG_ERROR		558023	0					
ANR	558483	Argument	"""Error reading frame header\\n"""		558023	2					
ANR	558484	PrimaryExpression	"""Error reading frame header\\n"""		558023	0					
ANR	558485	ReturnStatement	return AVERROR_INVALIDDATA ;	153:12:2825:2851	558023	1	True				
ANR	558486	Identifier	AVERROR_INVALIDDATA		558023	0					
ANR	558487	IfStatement	if ( ! s -> data )		558023	10					
ANR	558488	Condition	! s -> data	161:8:2882:2889	558023	0	True				
ANR	558489	UnaryOperationExpression	! s -> data		558023	0					
ANR	558490	UnaryOperator	!		558023	0					
ANR	558491	PtrMemberAccess	s -> data		558023	1					
ANR	558492	Identifier	s		558023	0					
ANR	558493	Identifier	data		558023	1					
ANR	558494	CompoundStatement		157:18:2761:2761	558023	1					
ANR	558495	ExpressionStatement	* got_frame_ptr = 0	163:8:2903:2921	558023	0	True				
ANR	558496	AssignmentExpression	* got_frame_ptr = 0		558023	0		=			
ANR	558497	UnaryOperationExpression	* got_frame_ptr		558023	0					
ANR	558498	UnaryOperator	*		558023	0					
ANR	558499	Identifier	got_frame_ptr		558023	1					
ANR	558500	PrimaryExpression	0		558023	1					
ANR	558501	ReturnStatement	return avpkt -> size ;	165:8:2932:2950	558023	1	True				
ANR	558502	PtrMemberAccess	avpkt -> size		558023	0					
ANR	558503	Identifier	avpkt		558023	0					
ANR	558504	Identifier	size		558023	1					
ANR	558505	ExpressionStatement	"blockstodecode = FFMIN ( s -> blocks_per_loop , s -> samples )"	171:4:2966:3020	558023	11	True				
ANR	558506	AssignmentExpression	"blockstodecode = FFMIN ( s -> blocks_per_loop , s -> samples )"		558023	0		=			
ANR	558507	Identifier	blockstodecode		558023	0					
ANR	558508	CallExpression	"FFMIN ( s -> blocks_per_loop , s -> samples )"		558023	1					
ANR	558509	Callee	FFMIN		558023	0					
ANR	558510	Identifier	FFMIN		558023	0					
ANR	558511	ArgumentList	s -> blocks_per_loop		558023	1					
ANR	558512	Argument	s -> blocks_per_loop		558023	0					
ANR	558513	PtrMemberAccess	s -> blocks_per_loop		558023	0					
ANR	558514	Identifier	s		558023	0					
ANR	558515	Identifier	blocks_per_loop		558023	1					
ANR	558516	Argument	s -> samples		558023	1					
ANR	558517	PtrMemberAccess	s -> samples		558023	0					
ANR	558518	Identifier	s		558023	0					
ANR	558519	Identifier	samples		558023	1					
ANR	558520	IfStatement	if ( s -> fileversion < 3930 )		558023	12					
ANR	558521	Condition	s -> fileversion < 3930	177:8:3137:3157	558023	0	True				
ANR	558522	RelationalExpression	s -> fileversion < 3930		558023	0		<			
ANR	558523	PtrMemberAccess	s -> fileversion		558023	0					
ANR	558524	Identifier	s		558023	0					
ANR	558525	Identifier	fileversion		558023	1					
ANR	558526	PrimaryExpression	3930		558023	1					
ANR	558527	ExpressionStatement	blockstodecode = s -> samples	179:8:3169:3196	558023	1	True				
ANR	558528	AssignmentExpression	blockstodecode = s -> samples		558023	0		=			
ANR	558529	Identifier	blockstodecode		558023	0					
ANR	558530	PtrMemberAccess	s -> samples		558023	1					
ANR	558531	Identifier	s		558023	0					
ANR	558532	Identifier	samples		558023	1					
ANR	558533	ExpressionStatement	"av_fast_malloc ( & s -> decoded_buffer , & s -> decoded_size , 2 * FFALIGN ( blockstodecode , 8 ) * sizeof ( * s -> decoded_buffer ) )"	185:4:3259:3392	558023	13	True				
ANR	558534	CallExpression	"av_fast_malloc ( & s -> decoded_buffer , & s -> decoded_size , 2 * FFALIGN ( blockstodecode , 8 ) * sizeof ( * s -> decoded_buffer ) )"		558023	0					
ANR	558535	Callee	av_fast_malloc		558023	0					
ANR	558536	Identifier	av_fast_malloc		558023	0					
ANR	558537	ArgumentList	& s -> decoded_buffer		558023	1					
ANR	558538	Argument	& s -> decoded_buffer		558023	0					
ANR	558539	UnaryOperationExpression	& s -> decoded_buffer		558023	0					
ANR	558540	UnaryOperator	&		558023	0					
ANR	558541	PtrMemberAccess	s -> decoded_buffer		558023	1					
ANR	558542	Identifier	s		558023	0					
ANR	558543	Identifier	decoded_buffer		558023	1					
ANR	558544	Argument	& s -> decoded_size		558023	1					
ANR	558545	UnaryOperationExpression	& s -> decoded_size		558023	0					
ANR	558546	UnaryOperator	&		558023	0					
ANR	558547	PtrMemberAccess	s -> decoded_size		558023	1					
ANR	558548	Identifier	s		558023	0					
ANR	558549	Identifier	decoded_size		558023	1					
ANR	558550	Argument	"2 * FFALIGN ( blockstodecode , 8 ) * sizeof ( * s -> decoded_buffer )"		558023	2					
ANR	558551	MultiplicativeExpression	"2 * FFALIGN ( blockstodecode , 8 ) * sizeof ( * s -> decoded_buffer )"		558023	0		*			
ANR	558552	PrimaryExpression	2		558023	0					
ANR	558553	MultiplicativeExpression	"FFALIGN ( blockstodecode , 8 ) * sizeof ( * s -> decoded_buffer )"		558023	1		*			
ANR	558554	CallExpression	"FFALIGN ( blockstodecode , 8 )"		558023	0					
ANR	558555	Callee	FFALIGN		558023	0					
ANR	558556	Identifier	FFALIGN		558023	0					
ANR	558557	ArgumentList	blockstodecode		558023	1					
ANR	558558	Argument	blockstodecode		558023	0					
ANR	558559	Identifier	blockstodecode		558023	0					
ANR	558560	Argument	8		558023	1					
ANR	558561	PrimaryExpression	8		558023	0					
ANR	558562	SizeofExpression	sizeof ( * s -> decoded_buffer )		558023	1					
ANR	558563	Sizeof	sizeof		558023	0					
ANR	558564	UnaryOperationExpression	* s -> decoded_buffer		558023	1					
ANR	558565	UnaryOperator	*		558023	0					
ANR	558566	PtrMemberAccess	s -> decoded_buffer		558023	1					
ANR	558567	Identifier	s		558023	0					
ANR	558568	Identifier	decoded_buffer		558023	1					
ANR	558569	IfStatement	if ( ! s -> decoded_buffer )		558023	14					
ANR	558570	Condition	! s -> decoded_buffer	189:8:3403:3420	558023	0	True				
ANR	558571	UnaryOperationExpression	! s -> decoded_buffer		558023	0					
ANR	558572	UnaryOperator	!		558023	0					
ANR	558573	PtrMemberAccess	s -> decoded_buffer		558023	1					
ANR	558574	Identifier	s		558023	0					
ANR	558575	Identifier	decoded_buffer		558023	1					
ANR	558576	ReturnStatement	return AVERROR ( ENOMEM ) ;	191:8:3432:3454	558023	1	True				
ANR	558577	CallExpression	AVERROR ( ENOMEM )		558023	0					
ANR	558578	Callee	AVERROR		558023	0					
ANR	558579	Identifier	AVERROR		558023	0					
ANR	558580	ArgumentList	ENOMEM		558023	1					
ANR	558581	Argument	ENOMEM		558023	0					
ANR	558582	Identifier	ENOMEM		558023	0					
ANR	558583	ExpressionStatement	"memset ( s -> decoded_buffer , 0 , s -> decoded_size )"	193:4:3461:3506	558023	15	True				
ANR	558584	CallExpression	"memset ( s -> decoded_buffer , 0 , s -> decoded_size )"		558023	0					
ANR	558585	Callee	memset		558023	0					
ANR	558586	Identifier	memset		558023	0					
ANR	558587	ArgumentList	s -> decoded_buffer		558023	1					
ANR	558588	Argument	s -> decoded_buffer		558023	0					
ANR	558589	PtrMemberAccess	s -> decoded_buffer		558023	0					
ANR	558590	Identifier	s		558023	0					
ANR	558591	Identifier	decoded_buffer		558023	1					
ANR	558592	Argument	0		558023	1					
ANR	558593	PrimaryExpression	0		558023	0					
ANR	558594	Argument	s -> decoded_size		558023	2					
ANR	558595	PtrMemberAccess	s -> decoded_size		558023	0					
ANR	558596	Identifier	s		558023	0					
ANR	558597	Identifier	decoded_size		558023	1					
ANR	558598	ExpressionStatement	s -> decoded [ 0 ] = s -> decoded_buffer	195:4:3513:3546	558023	16	True				
ANR	558599	AssignmentExpression	s -> decoded [ 0 ] = s -> decoded_buffer		558023	0		=			
ANR	558600	ArrayIndexing	s -> decoded [ 0 ]		558023	0					
ANR	558601	PtrMemberAccess	s -> decoded		558023	0					
ANR	558602	Identifier	s		558023	0					
ANR	558603	Identifier	decoded		558023	1					
ANR	558604	PrimaryExpression	0		558023	1					
ANR	558605	PtrMemberAccess	s -> decoded_buffer		558023	1					
ANR	558606	Identifier	s		558023	0					
ANR	558607	Identifier	decoded_buffer		558023	1					
ANR	558608	ExpressionStatement	"s -> decoded [ 1 ] = s -> decoded_buffer + FFALIGN ( blockstodecode , 8 )"	197:4:3553:3615	558023	17	True				
ANR	558609	AssignmentExpression	"s -> decoded [ 1 ] = s -> decoded_buffer + FFALIGN ( blockstodecode , 8 )"		558023	0		=			
ANR	558610	ArrayIndexing	s -> decoded [ 1 ]		558023	0					
ANR	558611	PtrMemberAccess	s -> decoded		558023	0					
ANR	558612	Identifier	s		558023	0					
ANR	558613	Identifier	decoded		558023	1					
ANR	558614	PrimaryExpression	1		558023	1					
ANR	558615	AdditiveExpression	"s -> decoded_buffer + FFALIGN ( blockstodecode , 8 )"		558023	1		+			
ANR	558616	PtrMemberAccess	s -> decoded_buffer		558023	0					
ANR	558617	Identifier	s		558023	0					
ANR	558618	Identifier	decoded_buffer		558023	1					
ANR	558619	CallExpression	"FFALIGN ( blockstodecode , 8 )"		558023	1					
ANR	558620	Callee	FFALIGN		558023	0					
ANR	558621	Identifier	FFALIGN		558023	0					
ANR	558622	ArgumentList	blockstodecode		558023	1					
ANR	558623	Argument	blockstodecode		558023	0					
ANR	558624	Identifier	blockstodecode		558023	0					
ANR	558625	Argument	8		558023	1					
ANR	558626	PrimaryExpression	8		558023	0					
ANR	558627	ExpressionStatement	frame -> nb_samples = blockstodecode	203:4:3653:3687	558023	18	True				
ANR	558628	AssignmentExpression	frame -> nb_samples = blockstodecode		558023	0		=			
ANR	558629	PtrMemberAccess	frame -> nb_samples		558023	0					
ANR	558630	Identifier	frame		558023	0					
ANR	558631	Identifier	nb_samples		558023	1					
ANR	558632	Identifier	blockstodecode		558023	1					
ANR	558633	IfStatement	"if ( ( ret = ff_get_buffer ( avctx , frame , 0 ) ) < 0 )"		558023	19					
ANR	558634	Condition	"( ret = ff_get_buffer ( avctx , frame , 0 ) ) < 0"	205:8:3698:3739	558023	0	True				
ANR	558635	RelationalExpression	"( ret = ff_get_buffer ( avctx , frame , 0 ) ) < 0"		558023	0		<			
ANR	558636	AssignmentExpression	"ret = ff_get_buffer ( avctx , frame , 0 )"		558023	0		=			
ANR	558637	Identifier	ret		558023	0					
ANR	558638	CallExpression	"ff_get_buffer ( avctx , frame , 0 )"		558023	1					
ANR	558639	Callee	ff_get_buffer		558023	0					
ANR	558640	Identifier	ff_get_buffer		558023	0					
ANR	558641	ArgumentList	avctx		558023	1					
ANR	558642	Argument	avctx		558023	0					
ANR	558643	Identifier	avctx		558023	0					
ANR	558644	Argument	frame		558023	1					
ANR	558645	Identifier	frame		558023	0					
ANR	558646	Argument	0		558023	2					
ANR	558647	PrimaryExpression	0		558023	0					
ANR	558648	PrimaryExpression	0		558023	1					
ANR	558649	ReturnStatement	return ret ;	207:8:3751:3761	558023	1	True				
ANR	558650	Identifier	ret		558023	0					
ANR	558651	ExpressionStatement	s -> error = 0	211:4:3770:3780	558023	20	True				
ANR	558652	AssignmentExpression	s -> error = 0		558023	0		=			
ANR	558653	PtrMemberAccess	s -> error		558023	0					
ANR	558654	Identifier	s		558023	0					
ANR	558655	Identifier	error		558023	1					
ANR	558656	PrimaryExpression	0		558023	1					
ANR	558657	IfStatement	if ( ( s -> channels == 1 ) || ( s -> frameflags & APE_FRAMECODE_PSEUDO_STEREO ) )		558023	21					
ANR	558658	Condition	( s -> channels == 1 ) || ( s -> frameflags & APE_FRAMECODE_PSEUDO_STEREO )	215:8:3793:3859	558023	0	True				
ANR	558659	OrExpression	( s -> channels == 1 ) || ( s -> frameflags & APE_FRAMECODE_PSEUDO_STEREO )		558023	0		||			
ANR	558660	EqualityExpression	s -> channels == 1		558023	0		==			
ANR	558661	PtrMemberAccess	s -> channels		558023	0					
ANR	558662	Identifier	s		558023	0					
ANR	558663	Identifier	channels		558023	1					
ANR	558664	PrimaryExpression	1		558023	1					
ANR	558665	BitAndExpression	s -> frameflags & APE_FRAMECODE_PSEUDO_STEREO		558023	1		&			
ANR	558666	PtrMemberAccess	s -> frameflags		558023	0					
ANR	558667	Identifier	s		558023	0					
ANR	558668	Identifier	frameflags		558023	1					
ANR	558669	Identifier	APE_FRAMECODE_PSEUDO_STEREO		558023	1					
ANR	558670	ExpressionStatement	"ape_unpack_mono ( s , blockstodecode )"	217:8:3871:3905	558023	1	True				
ANR	558671	CallExpression	"ape_unpack_mono ( s , blockstodecode )"		558023	0					
ANR	558672	Callee	ape_unpack_mono		558023	0					
ANR	558673	Identifier	ape_unpack_mono		558023	0					
ANR	558674	ArgumentList	s		558023	1					
ANR	558675	Argument	s		558023	0					
ANR	558676	Identifier	s		558023	0					
ANR	558677	Argument	blockstodecode		558023	1					
ANR	558678	Identifier	blockstodecode		558023	0					
ANR	558679	ElseStatement	else		558023	0					
ANR	558680	ExpressionStatement	"ape_unpack_stereo ( s , blockstodecode )"	221:8:3926:3962	558023	0	True				
ANR	558681	CallExpression	"ape_unpack_stereo ( s , blockstodecode )"		558023	0					
ANR	558682	Callee	ape_unpack_stereo		558023	0					
ANR	558683	Identifier	ape_unpack_stereo		558023	0					
ANR	558684	ArgumentList	s		558023	1					
ANR	558685	Argument	s		558023	0					
ANR	558686	Identifier	s		558023	0					
ANR	558687	Argument	blockstodecode		558023	1					
ANR	558688	Identifier	blockstodecode		558023	0					
ANR	558689	ExpressionStatement	emms_c ( )	223:4:3969:3977	558023	22	True				
ANR	558690	CallExpression	emms_c ( )		558023	0					
ANR	558691	Callee	emms_c		558023	0					
ANR	558692	Identifier	emms_c		558023	0					
ANR	558693	ArgumentList			558023	1					
ANR	558694	IfStatement	if ( s -> error )		558023	23					
ANR	558695	Condition	s -> error	227:8:3990:3997	558023	0	True				
ANR	558696	PtrMemberAccess	s -> error		558023	0					
ANR	558697	Identifier	s		558023	0					
ANR	558698	Identifier	error		558023	1					
ANR	558699	CompoundStatement		223:18:3869:3869	558023	1					
ANR	558700	ExpressionStatement	s -> samples = 0	229:8:4011:4023	558023	0	True				
ANR	558701	AssignmentExpression	s -> samples = 0		558023	0		=			
ANR	558702	PtrMemberAccess	s -> samples		558023	0					
ANR	558703	Identifier	s		558023	0					
ANR	558704	Identifier	samples		558023	1					
ANR	558705	PrimaryExpression	0		558023	1					
ANR	558706	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Error decoding frame\\n"" )"	231:8:4034:4087	558023	1	True				
ANR	558707	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Error decoding frame\\n"" )"		558023	0					
ANR	558708	Callee	av_log		558023	0					
ANR	558709	Identifier	av_log		558023	0					
ANR	558710	ArgumentList	avctx		558023	1					
ANR	558711	Argument	avctx		558023	0					
ANR	558712	Identifier	avctx		558023	0					
ANR	558713	Argument	AV_LOG_ERROR		558023	1					
ANR	558714	Identifier	AV_LOG_ERROR		558023	0					
ANR	558715	Argument	"""Error decoding frame\\n"""		558023	2					
ANR	558716	PrimaryExpression	"""Error decoding frame\\n"""		558023	0					
ANR	558717	ReturnStatement	return AVERROR_INVALIDDATA ;	233:8:4098:4124	558023	2	True				
ANR	558718	Identifier	AVERROR_INVALIDDATA		558023	0					
ANR	558719	SwitchStatement	switch ( s -> bps )		558023	24					
ANR	558720	Condition	s -> bps	239:12:4148:4153	558023	0	True				
ANR	558721	PtrMemberAccess	s -> bps		558023	0					
ANR	558722	Identifier	s		558023	0					
ANR	558723	Identifier	bps		558023	1					
ANR	558724	CompoundStatement		235:20:4025:4025	558023	1					
ANR	558725	Label	case 8 :	241:4:4163:4169	558023	0	True				
ANR	558726	ForStatement	for ( ch = 0 ; ch < s -> channels ; ch ++ )		558023	1					
ANR	558727	ForInit	ch = 0 ;	243:13:4185:4191	558023	0	True				
ANR	558728	AssignmentExpression	ch = 0		558023	0		=			
ANR	558729	Identifier	ch		558023	0					
ANR	558730	PrimaryExpression	0		558023	1					
ANR	558731	Condition	ch < s -> channels	243:21:4193:4208	558023	1	True				
ANR	558732	RelationalExpression	ch < s -> channels		558023	0		<			
ANR	558733	Identifier	ch		558023	0					
ANR	558734	PtrMemberAccess	s -> channels		558023	1					
ANR	558735	Identifier	s		558023	0					
ANR	558736	Identifier	channels		558023	1					
ANR	558737	PostIncDecOperationExpression	ch ++	243:39:4211:4214	558023	2	True				
ANR	558738	Identifier	ch		558023	0					
ANR	558739	IncDec	++		558023	1					
ANR	558740	CompoundStatement		239:45:4086:4086	558023	3					
ANR	558741	ExpressionStatement	sample8 = ( uint8_t * ) frame -> data [ ch ]	245:12:4232:4268	558023	0	True				
ANR	558742	AssignmentExpression	sample8 = ( uint8_t * ) frame -> data [ ch ]		558023	0		=			
ANR	558743	Identifier	sample8		558023	0					
ANR	558744	CastExpression	( uint8_t * ) frame -> data [ ch ]		558023	1					
ANR	558745	CastTarget	uint8_t *		558023	0					
ANR	558746	ArrayIndexing	frame -> data [ ch ]		558023	1					
ANR	558747	PtrMemberAccess	frame -> data		558023	0					
ANR	558748	Identifier	frame		558023	0					
ANR	558749	Identifier	data		558023	1					
ANR	558750	Identifier	ch		558023	1					
ANR	558751	ForStatement	for ( i = 0 ; i < blockstodecode ; i ++ )		558023	1					
ANR	558752	ForInit	i = 0 ;	247:17:4288:4293	558023	0	True				
ANR	558753	AssignmentExpression	i = 0		558023	0		=			
ANR	558754	Identifier	i		558023	0					
ANR	558755	PrimaryExpression	0		558023	1					
ANR	558756	Condition	i < blockstodecode	247:24:4295:4312	558023	1	True				
ANR	558757	RelationalExpression	i < blockstodecode		558023	0		<			
ANR	558758	Identifier	i		558023	0					
ANR	558759	Identifier	blockstodecode		558023	1					
ANR	558760	PostIncDecOperationExpression	i ++	247:44:4315:4317	558023	2	True				
ANR	558761	Identifier	i		558023	0					
ANR	558762	IncDec	++		558023	1					
ANR	558763	ExpressionStatement	* sample8 ++ = ( s -> decoded [ ch ] [ i ] + 0x80 ) & 0xff	249:16:4337:4383	558023	3	True				
ANR	558764	AssignmentExpression	* sample8 ++ = ( s -> decoded [ ch ] [ i ] + 0x80 ) & 0xff		558023	0		=			
ANR	558765	UnaryOperationExpression	* sample8 ++		558023	0					
ANR	558766	UnaryOperator	*		558023	0					
ANR	558767	PostIncDecOperationExpression	sample8 ++		558023	1					
ANR	558768	Identifier	sample8		558023	0					
ANR	558769	IncDec	++		558023	1					
ANR	558770	BitAndExpression	( s -> decoded [ ch ] [ i ] + 0x80 ) & 0xff		558023	1		&			
ANR	558771	AdditiveExpression	s -> decoded [ ch ] [ i ] + 0x80		558023	0		+			
ANR	558772	ArrayIndexing	s -> decoded [ ch ] [ i ]		558023	0					
ANR	558773	ArrayIndexing	s -> decoded [ ch ]		558023	0					
ANR	558774	PtrMemberAccess	s -> decoded		558023	0					
ANR	558775	Identifier	s		558023	0					
ANR	558776	Identifier	decoded		558023	1					
ANR	558777	Identifier	ch		558023	1					
ANR	558778	Identifier	i		558023	1					
ANR	558779	PrimaryExpression	0x80		558023	1					
ANR	558780	PrimaryExpression	0xff		558023	1					
ANR	558781	BreakStatement	break ;	253:8:4405:4410	558023	2	True				
ANR	558782	Label	case 16 :	255:4:4417:4424	558023	3	True				
ANR	558783	ForStatement	for ( ch = 0 ; ch < s -> channels ; ch ++ )		558023	4					
ANR	558784	ForInit	ch = 0 ;	257:13:4440:4446	558023	0	True				
ANR	558785	AssignmentExpression	ch = 0		558023	0		=			
ANR	558786	Identifier	ch		558023	0					
ANR	558787	PrimaryExpression	0		558023	1					
ANR	558788	Condition	ch < s -> channels	257:21:4448:4463	558023	1	True				
ANR	558789	RelationalExpression	ch < s -> channels		558023	0		<			
ANR	558790	Identifier	ch		558023	0					
ANR	558791	PtrMemberAccess	s -> channels		558023	1					
ANR	558792	Identifier	s		558023	0					
ANR	558793	Identifier	channels		558023	1					
ANR	558794	PostIncDecOperationExpression	ch ++	257:39:4466:4469	558023	2	True				
ANR	558795	Identifier	ch		558023	0					
ANR	558796	IncDec	++		558023	1					
ANR	558797	CompoundStatement		253:45:4341:4341	558023	3					
ANR	558798	ExpressionStatement	sample16 = ( int16_t * ) frame -> data [ ch ]	259:12:4487:4524	558023	0	True				
ANR	558799	AssignmentExpression	sample16 = ( int16_t * ) frame -> data [ ch ]		558023	0		=			
ANR	558800	Identifier	sample16		558023	0					
ANR	558801	CastExpression	( int16_t * ) frame -> data [ ch ]		558023	1					
ANR	558802	CastTarget	int16_t *		558023	0					
ANR	558803	ArrayIndexing	frame -> data [ ch ]		558023	1					
ANR	558804	PtrMemberAccess	frame -> data		558023	0					
ANR	558805	Identifier	frame		558023	0					
ANR	558806	Identifier	data		558023	1					
ANR	558807	Identifier	ch		558023	1					
ANR	558808	ForStatement	for ( i = 0 ; i < blockstodecode ; i ++ )		558023	1					
ANR	558809	ForInit	i = 0 ;	261:17:4544:4549	558023	0	True				
ANR	558810	AssignmentExpression	i = 0		558023	0		=			
ANR	558811	Identifier	i		558023	0					
ANR	558812	PrimaryExpression	0		558023	1					
ANR	558813	Condition	i < blockstodecode	261:24:4551:4568	558023	1	True				
ANR	558814	RelationalExpression	i < blockstodecode		558023	0		<			
ANR	558815	Identifier	i		558023	0					
ANR	558816	Identifier	blockstodecode		558023	1					
ANR	558817	PostIncDecOperationExpression	i ++	261:44:4571:4573	558023	2	True				
ANR	558818	Identifier	i		558023	0					
ANR	558819	IncDec	++		558023	1					
ANR	558820	ExpressionStatement	* sample16 ++ = s -> decoded [ ch ] [ i ]	263:16:4593:4624	558023	3	True				
ANR	558821	AssignmentExpression	* sample16 ++ = s -> decoded [ ch ] [ i ]		558023	0		=			
ANR	558822	UnaryOperationExpression	* sample16 ++		558023	0					
ANR	558823	UnaryOperator	*		558023	0					
ANR	558824	PostIncDecOperationExpression	sample16 ++		558023	1					
ANR	558825	Identifier	sample16		558023	0					
ANR	558826	IncDec	++		558023	1					
ANR	558827	ArrayIndexing	s -> decoded [ ch ] [ i ]		558023	1					
ANR	558828	ArrayIndexing	s -> decoded [ ch ]		558023	0					
ANR	558829	PtrMemberAccess	s -> decoded		558023	0					
ANR	558830	Identifier	s		558023	0					
ANR	558831	Identifier	decoded		558023	1					
ANR	558832	Identifier	ch		558023	1					
ANR	558833	Identifier	i		558023	1					
ANR	558834	BreakStatement	break ;	267:8:4646:4651	558023	5	True				
ANR	558835	Label	case 24 :	269:4:4658:4665	558023	6	True				
ANR	558836	ForStatement	for ( ch = 0 ; ch < s -> channels ; ch ++ )		558023	7					
ANR	558837	ForInit	ch = 0 ;	271:13:4681:4687	558023	0	True				
ANR	558838	AssignmentExpression	ch = 0		558023	0		=			
ANR	558839	Identifier	ch		558023	0					
ANR	558840	PrimaryExpression	0		558023	1					
ANR	558841	Condition	ch < s -> channels	271:21:4689:4704	558023	1	True				
ANR	558842	RelationalExpression	ch < s -> channels		558023	0		<			
ANR	558843	Identifier	ch		558023	0					
ANR	558844	PtrMemberAccess	s -> channels		558023	1					
ANR	558845	Identifier	s		558023	0					
ANR	558846	Identifier	channels		558023	1					
ANR	558847	PostIncDecOperationExpression	ch ++	271:39:4707:4710	558023	2	True				
ANR	558848	Identifier	ch		558023	0					
ANR	558849	IncDec	++		558023	1					
ANR	558850	CompoundStatement		267:45:4582:4582	558023	3					
ANR	558851	ExpressionStatement	sample24 = ( int32_t * ) frame -> data [ ch ]	273:12:4728:4765	558023	0	True				
ANR	558852	AssignmentExpression	sample24 = ( int32_t * ) frame -> data [ ch ]		558023	0		=			
ANR	558853	Identifier	sample24		558023	0					
ANR	558854	CastExpression	( int32_t * ) frame -> data [ ch ]		558023	1					
ANR	558855	CastTarget	int32_t *		558023	0					
ANR	558856	ArrayIndexing	frame -> data [ ch ]		558023	1					
ANR	558857	PtrMemberAccess	frame -> data		558023	0					
ANR	558858	Identifier	frame		558023	0					
ANR	558859	Identifier	data		558023	1					
ANR	558860	Identifier	ch		558023	1					
ANR	558861	ForStatement	for ( i = 0 ; i < blockstodecode ; i ++ )		558023	1					
ANR	558862	ForInit	i = 0 ;	275:17:4785:4790	558023	0	True				
ANR	558863	AssignmentExpression	i = 0		558023	0		=			
ANR	558864	Identifier	i		558023	0					
ANR	558865	PrimaryExpression	0		558023	1					
ANR	558866	Condition	i < blockstodecode	275:24:4792:4809	558023	1	True				
ANR	558867	RelationalExpression	i < blockstodecode		558023	0		<			
ANR	558868	Identifier	i		558023	0					
ANR	558869	Identifier	blockstodecode		558023	1					
ANR	558870	PostIncDecOperationExpression	i ++	275:44:4812:4814	558023	2	True				
ANR	558871	Identifier	i		558023	0					
ANR	558872	IncDec	++		558023	1					
ANR	558873	ExpressionStatement	* sample24 ++ = s -> decoded [ ch ] [ i ] << 8	277:16:4834:4870	558023	3	True				
ANR	558874	AssignmentExpression	* sample24 ++ = s -> decoded [ ch ] [ i ] << 8		558023	0		=			
ANR	558875	UnaryOperationExpression	* sample24 ++		558023	0					
ANR	558876	UnaryOperator	*		558023	0					
ANR	558877	PostIncDecOperationExpression	sample24 ++		558023	1					
ANR	558878	Identifier	sample24		558023	0					
ANR	558879	IncDec	++		558023	1					
ANR	558880	ShiftExpression	s -> decoded [ ch ] [ i ] << 8		558023	1		<<			
ANR	558881	ArrayIndexing	s -> decoded [ ch ] [ i ]		558023	0					
ANR	558882	ArrayIndexing	s -> decoded [ ch ]		558023	0					
ANR	558883	PtrMemberAccess	s -> decoded		558023	0					
ANR	558884	Identifier	s		558023	0					
ANR	558885	Identifier	decoded		558023	1					
ANR	558886	Identifier	ch		558023	1					
ANR	558887	Identifier	i		558023	1					
ANR	558888	PrimaryExpression	8		558023	1					
ANR	558889	BreakStatement	break ;	281:8:4892:4897	558023	8	True				
ANR	558890	ExpressionStatement	s -> samples -= blockstodecode	287:4:4913:4941	558023	25	True				
ANR	558891	AssignmentExpression	s -> samples -= blockstodecode		558023	0		-=			
ANR	558892	PtrMemberAccess	s -> samples		558023	0					
ANR	558893	Identifier	s		558023	0					
ANR	558894	Identifier	samples		558023	1					
ANR	558895	Identifier	blockstodecode		558023	1					
ANR	558896	ExpressionStatement	* got_frame_ptr = 1	291:4:4950:4968	558023	26	True				
ANR	558897	AssignmentExpression	* got_frame_ptr = 1		558023	0		=			
ANR	558898	UnaryOperationExpression	* got_frame_ptr		558023	0					
ANR	558899	UnaryOperator	*		558023	0					
ANR	558900	Identifier	got_frame_ptr		558023	1					
ANR	558901	PrimaryExpression	1		558023	1					
ANR	558902	ReturnStatement	return ! s -> samples ? avpkt -> size : 0 ;	295:4:4977:5013	558023	27	True				
ANR	558903	ConditionalExpression	! s -> samples ? avpkt -> size : 0		558023	0					
ANR	558904	Condition	! s -> samples		558023	0					
ANR	558905	UnaryOperationExpression	! s -> samples		558023	0					
ANR	558906	UnaryOperator	!		558023	0					
ANR	558907	PtrMemberAccess	s -> samples		558023	1					
ANR	558908	Identifier	s		558023	0					
ANR	558909	Identifier	samples		558023	1					
ANR	558910	PtrMemberAccess	avpkt -> size		558023	1					
ANR	558911	Identifier	avpkt		558023	0					
ANR	558912	Identifier	size		558023	1					
ANR	558913	PrimaryExpression	0		558023	2					
ANR	558914	ReturnType	static int		558023	1					
ANR	558915	Identifier	ape_decode_frame		558023	2					
ANR	558916	ParameterList	"AVCodecContext * avctx , void * data , int * got_frame_ptr , AVPacket * avpkt"		558023	3					
ANR	558917	Parameter	AVCodecContext * avctx	1:28:28:48	558023	0	True				
ANR	558918	ParameterType	AVCodecContext *		558023	0					
ANR	558919	Identifier	avctx		558023	1					
ANR	558920	Parameter	void * data	1:51:51:60	558023	1	True				
ANR	558921	ParameterType	void *		558023	0					
ANR	558922	Identifier	data		558023	1					
ANR	558923	Parameter	int * got_frame_ptr	3:28:92:109	558023	2	True				
ANR	558924	ParameterType	int *		558023	0					
ANR	558925	Identifier	got_frame_ptr		558023	1					
ANR	558926	Parameter	AVPacket * avpkt	3:48:112:126	558023	3	True				
ANR	558927	ParameterType	AVPacket *		558023	0					
ANR	558928	Identifier	avpkt		558023	1					
ANR	558929	CFGEntryNode	ENTRY		558023		True				
ANR	558930	CFGExitNode	EXIT		558023		True				
ANR	558931	Symbol	ENOMEM		558023						
ANR	558932	Symbol	data		558023						
ANR	558933	Symbol	* ch		558023						
ANR	558934	Symbol	FFMIN		558023						
ANR	558935	Symbol	s -> decoded_size		558023						
ANR	558936	Symbol	got_frame_ptr		558023						
ANR	558937	Symbol	avpkt		558023						
ANR	558938	Symbol	* s -> decoded_buffer		558023						
ANR	558939	Symbol	sample16		558023						
ANR	558940	Symbol	* * frame		558023						
ANR	558941	Symbol	ff_get_buffer		558023						
ANR	558942	Symbol	* * s -> decoded		558023						
ANR	558943	Symbol	s -> data		558023						
ANR	558944	Symbol	s -> bdsp		558023						
ANR	558945	Symbol	* sample8 ++		558023						
ANR	558946	Symbol	init_frame_decoder		558023						
ANR	558947	Symbol	& s -> decoded_size		558023						
ANR	558948	Symbol	frame -> data		558023						
ANR	558949	Symbol	ret		558023						
ANR	558950	Symbol	& s -> ptr		558023						
ANR	558951	Symbol	NULL		558023						
ANR	558952	Symbol	s -> blocks_per_loop		558023						
ANR	558953	Symbol	* sample24 ++		558023						
ANR	558954	Symbol	offset		558023						
ANR	558955	Symbol	s -> error		558023						
ANR	558956	Symbol	& s -> decoded_buffer		558023						
ANR	558957	Symbol	buf_size		558023						
ANR	558958	Symbol	& s -> data		558023						
ANR	558959	Symbol	sample24		558023						
ANR	558960	Symbol	* * * s		558023						
ANR	558961	Symbol	& s -> gb		558023						
ANR	558962	Symbol	s -> frameflags		558023						
ANR	558963	Symbol	* avctx		558023						
ANR	558964	Symbol	init_get_bits8		558023						
ANR	558965	Symbol	& s -> data_size		558023						
ANR	558966	Symbol	nblocks		558023						
ANR	558967	Symbol	FFALIGN		558023						
ANR	558968	Symbol	avpkt -> data		558023						
ANR	558969	Symbol	frame		558023						
ANR	558970	Symbol	* frame -> data		558023						
ANR	558971	Symbol	* frame		558023						
ANR	558972	Symbol	s -> samples		558023						
ANR	558973	Symbol	s -> channels		558023						
ANR	558974	Symbol	APE_FRAMECODE_PSEUDO_STEREO		558023						
ANR	558975	Symbol	s -> decoded_buffer		558023						
ANR	558976	Symbol	bytestream_get_be32		558023						
ANR	558977	Symbol	* * ch		558023						
ANR	558978	Symbol	INT_MAX		558023						
ANR	558979	Symbol	* * s		558023						
ANR	558980	Symbol	avpkt -> size		558023						
ANR	558981	Symbol	avctx		558023						
ANR	558982	Symbol	s -> decoded		558023						
ANR	558983	Symbol	* avpkt		558023						
ANR	558984	Symbol	frame -> nb_samples		558023						
ANR	558985	Symbol	AV_LOG_ERROR		558023						
ANR	558986	Symbol	ch		558023						
ANR	558987	Symbol	* got_frame_ptr		558023						
ANR	558988	Symbol	sample8		558023						
ANR	558989	Symbol	i		558023						
ANR	558990	Symbol	s -> data_end		558023						
ANR	558991	Symbol	* sample16 ++		558023						
ANR	558992	Symbol	avctx -> priv_data		558023						
ANR	558993	Symbol	s -> bps		558023						
ANR	558994	Symbol	buf		558023						
ANR	558995	Symbol	* s -> decoded		558023						
ANR	558996	Symbol	s		558023						
ANR	558997	Symbol	s -> fileversion		558023						
ANR	558998	Symbol	* i		558023						
ANR	558999	Symbol	~3		558023						
ANR	559000	Symbol	AVERROR_INVALIDDATA		558023						
ANR	559001	Symbol	blockstodecode		558023						
ANR	559002	Symbol	AVERROR		558023						
ANR	559003	Symbol	* s		558023						
ANR	559004	Symbol	s -> ptr		558023						
