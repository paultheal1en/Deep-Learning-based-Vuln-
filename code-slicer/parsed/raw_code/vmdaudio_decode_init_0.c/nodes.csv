command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	9161238	File	/home/p4ultr4n/workplace/ReVeal/raw_code/vmdaudio_decode_init_0.c								
ANR	9161239	Function	vmdaudio_decode_init	1:0:0:1189							
ANR	9161240	FunctionDef	vmdaudio_decode_init (AVCodecContext * avctx)		9161239	0					
ANR	9161241	CompoundStatement		3:0:64:1189	9161239	0					
ANR	9161242	IdentifierDeclStatement	VmdAudioContext * s = avctx -> priv_data ;	5:4:71:108	9161239	0	True				
ANR	9161243	IdentifierDecl	* s = avctx -> priv_data		9161239	0					
ANR	9161244	IdentifierDeclType	VmdAudioContext *		9161239	0					
ANR	9161245	Identifier	s		9161239	1					
ANR	9161246	AssignmentExpression	* s = avctx -> priv_data		9161239	2		=			
ANR	9161247	Identifier	s		9161239	0					
ANR	9161248	PtrMemberAccess	avctx -> priv_data		9161239	1					
ANR	9161249	Identifier	avctx		9161239	0					
ANR	9161250	Identifier	priv_data		9161239	1					
ANR	9161251	IfStatement	if ( avctx -> channels < 1 || avctx -> channels > 2 )		9161239	1					
ANR	9161252	Condition	avctx -> channels < 1 || avctx -> channels > 2	9:8:121:162	9161239	0	True				
ANR	9161253	OrExpression	avctx -> channels < 1 || avctx -> channels > 2		9161239	0		||			
ANR	9161254	RelationalExpression	avctx -> channels < 1		9161239	0		<			
ANR	9161255	PtrMemberAccess	avctx -> channels		9161239	0					
ANR	9161256	Identifier	avctx		9161239	0					
ANR	9161257	Identifier	channels		9161239	1					
ANR	9161258	PrimaryExpression	1		9161239	1					
ANR	9161259	RelationalExpression	avctx -> channels > 2		9161239	1		>			
ANR	9161260	PtrMemberAccess	avctx -> channels		9161239	0					
ANR	9161261	Identifier	avctx		9161239	0					
ANR	9161262	Identifier	channels		9161239	1					
ANR	9161263	PrimaryExpression	2		9161239	1					
ANR	9161264	CompoundStatement		7:52:100:100	9161239	1					
ANR	9161265	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""invalid number of channels\\n"" )"	11:8:176:235	9161239	0	True				
ANR	9161266	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""invalid number of channels\\n"" )"		9161239	0					
ANR	9161267	Callee	av_log		9161239	0					
ANR	9161268	Identifier	av_log		9161239	0					
ANR	9161269	ArgumentList	avctx		9161239	1					
ANR	9161270	Argument	avctx		9161239	0					
ANR	9161271	Identifier	avctx		9161239	0					
ANR	9161272	Argument	AV_LOG_ERROR		9161239	1					
ANR	9161273	Identifier	AV_LOG_ERROR		9161239	0					
ANR	9161274	Argument	"""invalid number of channels\\n"""		9161239	2					
ANR	9161275	PrimaryExpression	"""invalid number of channels\\n"""		9161239	0					
ANR	9161276	ReturnStatement	return AVERROR ( EINVAL ) ;	13:8:246:268	9161239	1	True				
ANR	9161277	CallExpression	AVERROR ( EINVAL )		9161239	0					
ANR	9161278	Callee	AVERROR		9161239	0					
ANR	9161279	Identifier	AVERROR		9161239	0					
ANR	9161280	ArgumentList	EINVAL		9161239	1					
ANR	9161281	Argument	EINVAL		9161239	0					
ANR	9161282	Identifier	EINVAL		9161239	0					
ANR	9161283	IfStatement	if ( avctx -> block_align < 1 )		9161239	2					
ANR	9161284	Condition	avctx -> block_align < 1	17:8:286:307	9161239	0	True				
ANR	9161285	RelationalExpression	avctx -> block_align < 1		9161239	0		<			
ANR	9161286	PtrMemberAccess	avctx -> block_align		9161239	0					
ANR	9161287	Identifier	avctx		9161239	0					
ANR	9161288	Identifier	block_align		9161239	1					
ANR	9161289	PrimaryExpression	1		9161239	1					
ANR	9161290	CompoundStatement		15:32:245:245	9161239	1					
ANR	9161291	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""invalid block align\\n"" )"	19:8:321:373	9161239	0	True				
ANR	9161292	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""invalid block align\\n"" )"		9161239	0					
ANR	9161293	Callee	av_log		9161239	0					
ANR	9161294	Identifier	av_log		9161239	0					
ANR	9161295	ArgumentList	avctx		9161239	1					
ANR	9161296	Argument	avctx		9161239	0					
ANR	9161297	Identifier	avctx		9161239	0					
ANR	9161298	Argument	AV_LOG_ERROR		9161239	1					
ANR	9161299	Identifier	AV_LOG_ERROR		9161239	0					
ANR	9161300	Argument	"""invalid block align\\n"""		9161239	2					
ANR	9161301	PrimaryExpression	"""invalid block align\\n"""		9161239	0					
ANR	9161302	ReturnStatement	return AVERROR ( EINVAL ) ;	21:8:384:406	9161239	1	True				
ANR	9161303	CallExpression	AVERROR ( EINVAL )		9161239	0					
ANR	9161304	Callee	AVERROR		9161239	0					
ANR	9161305	Identifier	AVERROR		9161239	0					
ANR	9161306	ArgumentList	EINVAL		9161239	1					
ANR	9161307	Argument	EINVAL		9161239	0					
ANR	9161308	Identifier	EINVAL		9161239	0					
ANR	9161309	ExpressionStatement	avctx -> channel_layout = avctx -> channels == 1 ? AV_CH_LAYOUT_MONO : AV_CH_LAYOUT_STEREO	27:4:422:560	9161239	3	True				
ANR	9161310	AssignmentExpression	avctx -> channel_layout = avctx -> channels == 1 ? AV_CH_LAYOUT_MONO : AV_CH_LAYOUT_STEREO		9161239	0		=			
ANR	9161311	PtrMemberAccess	avctx -> channel_layout		9161239	0					
ANR	9161312	Identifier	avctx		9161239	0					
ANR	9161313	Identifier	channel_layout		9161239	1					
ANR	9161314	ConditionalExpression	avctx -> channels == 1 ? AV_CH_LAYOUT_MONO : AV_CH_LAYOUT_STEREO		9161239	1					
ANR	9161315	Condition	avctx -> channels == 1		9161239	0					
ANR	9161316	EqualityExpression	avctx -> channels == 1		9161239	0		==			
ANR	9161317	PtrMemberAccess	avctx -> channels		9161239	0					
ANR	9161318	Identifier	avctx		9161239	0					
ANR	9161319	Identifier	channels		9161239	1					
ANR	9161320	PrimaryExpression	1		9161239	1					
ANR	9161321	Identifier	AV_CH_LAYOUT_MONO		9161239	1					
ANR	9161322	Identifier	AV_CH_LAYOUT_STEREO		9161239	2					
ANR	9161323	IfStatement	if ( avctx -> bits_per_coded_sample == 16 )		9161239	4					
ANR	9161324	Condition	avctx -> bits_per_coded_sample == 16	33:8:573:606	9161239	0	True				
ANR	9161325	EqualityExpression	avctx -> bits_per_coded_sample == 16		9161239	0		==			
ANR	9161326	PtrMemberAccess	avctx -> bits_per_coded_sample		9161239	0					
ANR	9161327	Identifier	avctx		9161239	0					
ANR	9161328	Identifier	bits_per_coded_sample		9161239	1					
ANR	9161329	PrimaryExpression	16		9161239	1					
ANR	9161330	ExpressionStatement	avctx -> sample_fmt = AV_SAMPLE_FMT_S16	35:8:618:655	9161239	1	True				
ANR	9161331	AssignmentExpression	avctx -> sample_fmt = AV_SAMPLE_FMT_S16		9161239	0		=			
ANR	9161332	PtrMemberAccess	avctx -> sample_fmt		9161239	0					
ANR	9161333	Identifier	avctx		9161239	0					
ANR	9161334	Identifier	sample_fmt		9161239	1					
ANR	9161335	Identifier	AV_SAMPLE_FMT_S16		9161239	1					
ANR	9161336	ElseStatement	else		9161239	0					
ANR	9161337	ExpressionStatement	avctx -> sample_fmt = AV_SAMPLE_FMT_U8	39:8:676:712	9161239	0	True				
ANR	9161338	AssignmentExpression	avctx -> sample_fmt = AV_SAMPLE_FMT_U8		9161239	0		=			
ANR	9161339	PtrMemberAccess	avctx -> sample_fmt		9161239	0					
ANR	9161340	Identifier	avctx		9161239	0					
ANR	9161341	Identifier	sample_fmt		9161239	1					
ANR	9161342	Identifier	AV_SAMPLE_FMT_U8		9161239	1					
ANR	9161343	ExpressionStatement	s -> out_bps = av_get_bytes_per_sample ( avctx -> sample_fmt )	41:4:719:774	9161239	5	True				
ANR	9161344	AssignmentExpression	s -> out_bps = av_get_bytes_per_sample ( avctx -> sample_fmt )		9161239	0		=			
ANR	9161345	PtrMemberAccess	s -> out_bps		9161239	0					
ANR	9161346	Identifier	s		9161239	0					
ANR	9161347	Identifier	out_bps		9161239	1					
ANR	9161348	CallExpression	av_get_bytes_per_sample ( avctx -> sample_fmt )		9161239	1					
ANR	9161349	Callee	av_get_bytes_per_sample		9161239	0					
ANR	9161350	Identifier	av_get_bytes_per_sample		9161239	0					
ANR	9161351	ArgumentList	avctx -> sample_fmt		9161239	1					
ANR	9161352	Argument	avctx -> sample_fmt		9161239	0					
ANR	9161353	PtrMemberAccess	avctx -> sample_fmt		9161239	0					
ANR	9161354	Identifier	avctx		9161239	0					
ANR	9161355	Identifier	sample_fmt		9161239	1					
ANR	9161356	ExpressionStatement	s -> chunk_size = avctx -> block_align + avctx -> channels * ( s -> out_bps == 2 )	45:4:783:855	9161239	6	True				
ANR	9161357	AssignmentExpression	s -> chunk_size = avctx -> block_align + avctx -> channels * ( s -> out_bps == 2 )		9161239	0		=			
ANR	9161358	PtrMemberAccess	s -> chunk_size		9161239	0					
ANR	9161359	Identifier	s		9161239	0					
ANR	9161360	Identifier	chunk_size		9161239	1					
ANR	9161361	AdditiveExpression	avctx -> block_align + avctx -> channels * ( s -> out_bps == 2 )		9161239	1		+			
ANR	9161362	PtrMemberAccess	avctx -> block_align		9161239	0					
ANR	9161363	Identifier	avctx		9161239	0					
ANR	9161364	Identifier	block_align		9161239	1					
ANR	9161365	MultiplicativeExpression	avctx -> channels * ( s -> out_bps == 2 )		9161239	1		*			
ANR	9161366	PtrMemberAccess	avctx -> channels		9161239	0					
ANR	9161367	Identifier	avctx		9161239	0					
ANR	9161368	Identifier	channels		9161239	1					
ANR	9161369	EqualityExpression	s -> out_bps == 2		9161239	1		==			
ANR	9161370	PtrMemberAccess	s -> out_bps		9161239	0					
ANR	9161371	Identifier	s		9161239	0					
ANR	9161372	Identifier	out_bps		9161239	1					
ANR	9161373	PrimaryExpression	2		9161239	1					
ANR	9161374	ExpressionStatement	avcodec_get_frame_defaults ( & s -> frame )	49:4:864:901	9161239	7	True				
ANR	9161375	CallExpression	avcodec_get_frame_defaults ( & s -> frame )		9161239	0					
ANR	9161376	Callee	avcodec_get_frame_defaults		9161239	0					
ANR	9161377	Identifier	avcodec_get_frame_defaults		9161239	0					
ANR	9161378	ArgumentList	& s -> frame		9161239	1					
ANR	9161379	Argument	& s -> frame		9161239	0					
ANR	9161380	UnaryOperationExpression	& s -> frame		9161239	0					
ANR	9161381	UnaryOperator	&		9161239	0					
ANR	9161382	PtrMemberAccess	s -> frame		9161239	1					
ANR	9161383	Identifier	s		9161239	0					
ANR	9161384	Identifier	frame		9161239	1					
ANR	9161385	ExpressionStatement	avctx -> coded_frame = & s -> frame	51:4:908:938	9161239	8	True				
ANR	9161386	AssignmentExpression	avctx -> coded_frame = & s -> frame		9161239	0		=			
ANR	9161387	PtrMemberAccess	avctx -> coded_frame		9161239	0					
ANR	9161388	Identifier	avctx		9161239	0					
ANR	9161389	Identifier	coded_frame		9161239	1					
ANR	9161390	UnaryOperationExpression	& s -> frame		9161239	1					
ANR	9161391	UnaryOperator	&		9161239	0					
ANR	9161392	PtrMemberAccess	s -> frame		9161239	1					
ANR	9161393	Identifier	s		9161239	0					
ANR	9161394	Identifier	frame		9161239	1					
ANR	9161395	Statement	av_log	55:4:947:952	9161239	9	True				
ANR	9161396	Statement	(	55:10:953:953	9161239	10	True				
ANR	9161397	Statement	avctx	55:11:954:958	9161239	11	True				
ANR	9161398	Statement	","	55:16:959:959	9161239	12	True				
ANR	9161399	Statement	AV_LOG_DEBUG	55:18:961:972	9161239	13	True				
ANR	9161400	Statement	","	55:30:973:973	9161239	14	True				
ANR	9161401	Statement	"""%d channels, %d bits/sample, """	55:32:975:1005	9161239	15	True				
ANR	9161402	Statement	"""block align = %d, sample rate = %d\\n"""	57:11:1019:1056	9161239	16	True				
ANR	9161403	Statement	","	57:49:1057:1057	9161239	17	True				
ANR	9161404	Statement	avctx	59:11:1071:1075	9161239	18	True				
ANR	9161405	Statement	->	59:16:1076:1077	9161239	19	True				
ANR	9161406	Statement	channels	59:18:1078:1085	9161239	20	True				
ANR	9161407	Statement	","	59:26:1086:1086	9161239	21	True				
ANR	9161408	Statement	avctx	59:28:1088:1092	9161239	22	True				
ANR	9161409	Statement	->	59:33:1093:1094	9161239	23	True				
ANR	9161410	Statement	bits_per_coded_sample	59:35:1095:1115	9161239	24	True				
ANR	9161411	Statement	","	59:56:1116:1116	9161239	25	True				
ANR	9161412	Statement	avctx	59:58:1118:1122	9161239	26	True				
ANR	9161413	Statement	->	59:63:1123:1124	9161239	27	True				
ANR	9161414	Statement	block_align	59:65:1125:1135	9161239	28	True				
ANR	9161415	Statement	","	59:76:1136:1136	9161239	29	True				
ANR	9161416	Statement	avctx	61:11:1150:1154	9161239	30	True				
ANR	9161417	Statement	->	61:16:1155:1156	9161239	31	True				
ANR	9161418	Statement	sample_rate	61:18:1157:1167	9161239	32	True				
ANR	9161419	Statement	)	61:29:1168:1168	9161239	33	True				
ANR	9161420	ExpressionStatement		61:30:1169:1169	9161239	34	True				
ANR	9161421	ReturnStatement	return 0 ;	65:4:1178:1186	9161239	35	True				
ANR	9161422	PrimaryExpression	0		9161239	0					
ANR	9161423	ReturnType	static av_cold int		9161239	1					
ANR	9161424	Identifier	vmdaudio_decode_init		9161239	2					
ANR	9161425	ParameterList	AVCodecContext * avctx		9161239	3					
ANR	9161426	Parameter	AVCodecContext * avctx	1:40:40:60	9161239	0	True				
ANR	9161427	ParameterType	AVCodecContext *		9161239	0					
ANR	9161428	Identifier	avctx		9161239	1					
ANR	9161429	CFGEntryNode	ENTRY		9161239		True				
ANR	9161430	CFGExitNode	EXIT		9161239		True				
ANR	9161431	Symbol	av_get_bytes_per_sample		9161239						
ANR	9161432	Symbol	& s -> frame		9161239						
ANR	9161433	Symbol	avctx -> bits_per_coded_sample		9161239						
ANR	9161434	Symbol	avctx -> sample_fmt		9161239						
ANR	9161435	Symbol	AV_LOG_ERROR		9161239						
ANR	9161436	Symbol	AV_CH_LAYOUT_STEREO		9161239						
ANR	9161437	Symbol	avctx -> channel_layout		9161239						
ANR	9161438	Symbol	AV_SAMPLE_FMT_U8		9161239						
ANR	9161439	Symbol	avctx -> priv_data		9161239						
ANR	9161440	Symbol	AV_SAMPLE_FMT_S16		9161239						
ANR	9161441	Symbol	avctx -> channels		9161239						
ANR	9161442	Symbol	EINVAL		9161239						
ANR	9161443	Symbol	* avctx		9161239						
ANR	9161444	Symbol	AV_CH_LAYOUT_MONO		9161239						
ANR	9161445	Symbol	s		9161239						
ANR	9161446	Symbol	avctx -> block_align		9161239						
ANR	9161447	Symbol	s -> chunk_size		9161239						
ANR	9161448	Symbol	avctx -> coded_frame		9161239						
ANR	9161449	Symbol	AVERROR		9161239						
ANR	9161450	Symbol	avctx		9161239						
ANR	9161451	Symbol	* s		9161239						
ANR	9161452	Symbol	s -> out_bps		9161239						
