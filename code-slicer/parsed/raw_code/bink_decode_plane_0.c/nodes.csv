command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1032738	File	/home/p4ultr4n/workplace/ReVeal/raw_code/bink_decode_plane_0.c								
ANR	1032739	Function	bink_decode_plane	1:0:0:10074							
ANR	1032740	FunctionDef	"bink_decode_plane (BinkContext * c , AVFrame * frame , GetBitContext * gb , int plane_idx , int is_chroma)"		1032739	0					
ANR	1032741	CompoundStatement		5:0:141:10074	1032739	0					
ANR	1032742	IdentifierDeclStatement	"int blk , ret ;"	7:4:148:160	1032739	0	True				
ANR	1032743	IdentifierDecl	blk		1032739	0					
ANR	1032744	IdentifierDeclType	int		1032739	0					
ANR	1032745	Identifier	blk		1032739	1					
ANR	1032746	IdentifierDecl	ret		1032739	1					
ANR	1032747	IdentifierDeclType	int		1032739	0					
ANR	1032748	Identifier	ret		1032739	1					
ANR	1032749	IdentifierDeclStatement	"int i , j , bx , by ;"	9:4:167:183	1032739	1	True				
ANR	1032750	IdentifierDecl	i		1032739	0					
ANR	1032751	IdentifierDeclType	int		1032739	0					
ANR	1032752	Identifier	i		1032739	1					
ANR	1032753	IdentifierDecl	j		1032739	1					
ANR	1032754	IdentifierDeclType	int		1032739	0					
ANR	1032755	Identifier	j		1032739	1					
ANR	1032756	IdentifierDecl	bx		1032739	2					
ANR	1032757	IdentifierDeclType	int		1032739	0					
ANR	1032758	Identifier	bx		1032739	1					
ANR	1032759	IdentifierDecl	by		1032739	3					
ANR	1032760	IdentifierDeclType	int		1032739	0					
ANR	1032761	Identifier	by		1032739	1					
ANR	1032762	IdentifierDeclStatement	"uint8_t * dst , * prev , * ref , * ref_start , * ref_end ;"	11:4:190:237	1032739	2	True				
ANR	1032763	IdentifierDecl	* dst		1032739	0					
ANR	1032764	IdentifierDeclType	uint8_t *		1032739	0					
ANR	1032765	Identifier	dst		1032739	1					
ANR	1032766	IdentifierDecl	* prev		1032739	1					
ANR	1032767	IdentifierDeclType	uint8_t *		1032739	0					
ANR	1032768	Identifier	prev		1032739	1					
ANR	1032769	IdentifierDecl	* ref		1032739	2					
ANR	1032770	IdentifierDeclType	uint8_t *		1032739	0					
ANR	1032771	Identifier	ref		1032739	1					
ANR	1032772	IdentifierDecl	* ref_start		1032739	3					
ANR	1032773	IdentifierDeclType	uint8_t *		1032739	0					
ANR	1032774	Identifier	ref_start		1032739	1					
ANR	1032775	IdentifierDecl	* ref_end		1032739	4					
ANR	1032776	IdentifierDeclType	uint8_t *		1032739	0					
ANR	1032777	Identifier	ref_end		1032739	1					
ANR	1032778	IdentifierDeclStatement	"int v , col [ 2 ] ;"	13:4:244:257	1032739	3	True				
ANR	1032779	IdentifierDecl	v		1032739	0					
ANR	1032780	IdentifierDeclType	int		1032739	0					
ANR	1032781	Identifier	v		1032739	1					
ANR	1032782	IdentifierDecl	col [ 2 ]		1032739	1					
ANR	1032783	IdentifierDeclType	int [ 2 ]		1032739	0					
ANR	1032784	Identifier	col		1032739	1					
ANR	1032785	PrimaryExpression	2		1032739	2					
ANR	1032786	IdentifierDeclStatement	const uint8_t * scan ;	15:4:264:283	1032739	4	True				
ANR	1032787	IdentifierDecl	* scan		1032739	0					
ANR	1032788	IdentifierDeclType	const uint8_t *		1032739	0					
ANR	1032789	Identifier	scan		1032739	1					
ANR	1032790	IdentifierDeclStatement	"int xoff , yoff ;"	17:4:290:304	1032739	5	True				
ANR	1032791	IdentifierDecl	xoff		1032739	0					
ANR	1032792	IdentifierDeclType	int		1032739	0					
ANR	1032793	Identifier	xoff		1032739	1					
ANR	1032794	IdentifierDecl	yoff		1032739	1					
ANR	1032795	IdentifierDeclType	int		1032739	0					
ANR	1032796	Identifier	yoff		1032739	1					
ANR	1032797	Statement	LOCAL_ALIGNED_16	19:4:311:326	1032739	6	True				
ANR	1032798	Statement	(	19:20:327:327	1032739	7	True				
ANR	1032799	Statement	int16_t	19:21:328:334	1032739	8	True				
ANR	1032800	Statement	","	19:28:335:335	1032739	9	True				
ANR	1032801	Statement	block	19:30:337:341	1032739	10	True				
ANR	1032802	Statement	","	19:35:342:342	1032739	11	True				
ANR	1032803	Statement	[	19:37:344:344	1032739	12	True				
ANR	1032804	Statement	64	19:38:345:346	1032739	13	True				
ANR	1032805	Statement	]	19:40:347:347	1032739	14	True				
ANR	1032806	Statement	)	19:41:348:348	1032739	15	True				
ANR	1032807	ExpressionStatement		19:42:349:349	1032739	16	True				
ANR	1032808	Statement	LOCAL_ALIGNED_16	21:4:356:371	1032739	17	True				
ANR	1032809	Statement	(	21:20:372:372	1032739	18	True				
ANR	1032810	Statement	uint8_t	21:21:373:379	1032739	19	True				
ANR	1032811	Statement	","	21:28:380:380	1032739	20	True				
ANR	1032812	Statement	ublock	21:30:382:387	1032739	21	True				
ANR	1032813	Statement	","	21:36:388:388	1032739	22	True				
ANR	1032814	Statement	[	21:38:390:390	1032739	23	True				
ANR	1032815	Statement	64	21:39:391:392	1032739	24	True				
ANR	1032816	Statement	]	21:41:393:393	1032739	25	True				
ANR	1032817	Statement	)	21:42:394:394	1032739	26	True				
ANR	1032818	ExpressionStatement		21:43:395:395	1032739	27	True				
ANR	1032819	Statement	LOCAL_ALIGNED_16	23:4:402:417	1032739	28	True				
ANR	1032820	Statement	(	23:20:418:418	1032739	29	True				
ANR	1032821	Statement	int32_t	23:21:419:425	1032739	30	True				
ANR	1032822	Statement	","	23:28:426:426	1032739	31	True				
ANR	1032823	Statement	dctblock	23:30:428:435	1032739	32	True				
ANR	1032824	Statement	","	23:38:436:436	1032739	33	True				
ANR	1032825	Statement	[	23:40:438:438	1032739	34	True				
ANR	1032826	Statement	64	23:41:439:440	1032739	35	True				
ANR	1032827	Statement	]	23:43:441:441	1032739	36	True				
ANR	1032828	Statement	)	23:44:442:442	1032739	37	True				
ANR	1032829	ExpressionStatement		23:45:443:443	1032739	38	True				
ANR	1032830	IdentifierDeclStatement	int coordmap [ 64 ] ;	25:4:450:466	1032739	39	True				
ANR	1032831	IdentifierDecl	coordmap [ 64 ]		1032739	0					
ANR	1032832	IdentifierDeclType	int [ 64 ]		1032739	0					
ANR	1032833	Identifier	coordmap		1032739	1					
ANR	1032834	PrimaryExpression	64		1032739	2					
ANR	1032835	IdentifierDeclStatement	const int stride = frame -> linesize [ plane_idx ] ;	29:4:475:520	1032739	40	True				
ANR	1032836	IdentifierDecl	stride = frame -> linesize [ plane_idx ]		1032739	0					
ANR	1032837	IdentifierDeclType	const int		1032739	0					
ANR	1032838	Identifier	stride		1032739	1					
ANR	1032839	AssignmentExpression	stride = frame -> linesize [ plane_idx ]		1032739	2		=			
ANR	1032840	Identifier	stride		1032739	0					
ANR	1032841	ArrayIndexing	frame -> linesize [ plane_idx ]		1032739	1					
ANR	1032842	PtrMemberAccess	frame -> linesize		1032739	0					
ANR	1032843	Identifier	frame		1032739	0					
ANR	1032844	Identifier	linesize		1032739	1					
ANR	1032845	Identifier	plane_idx		1032739	1					
ANR	1032846	IdentifierDeclStatement	int bw = is_chroma ? ( c -> avctx -> width + 15 ) >> 4 : ( c -> avctx -> width + 7 ) >> 3 ;	31:4:527:606	1032739	41	True				
ANR	1032847	IdentifierDecl	bw = is_chroma ? ( c -> avctx -> width + 15 ) >> 4 : ( c -> avctx -> width + 7 ) >> 3		1032739	0					
ANR	1032848	IdentifierDeclType	int		1032739	0					
ANR	1032849	Identifier	bw		1032739	1					
ANR	1032850	AssignmentExpression	bw = is_chroma ? ( c -> avctx -> width + 15 ) >> 4 : ( c -> avctx -> width + 7 ) >> 3		1032739	2		=			
ANR	1032851	Identifier	bw		1032739	0					
ANR	1032852	ConditionalExpression	is_chroma ? ( c -> avctx -> width + 15 ) >> 4 : ( c -> avctx -> width + 7 ) >> 3		1032739	1					
ANR	1032853	Condition	is_chroma		1032739	0					
ANR	1032854	Identifier	is_chroma		1032739	0					
ANR	1032855	ShiftExpression	( c -> avctx -> width + 15 ) >> 4		1032739	1		>>			
ANR	1032856	AdditiveExpression	c -> avctx -> width + 15		1032739	0		+			
ANR	1032857	PtrMemberAccess	c -> avctx -> width		1032739	0					
ANR	1032858	PtrMemberAccess	c -> avctx		1032739	0					
ANR	1032859	Identifier	c		1032739	0					
ANR	1032860	Identifier	avctx		1032739	1					
ANR	1032861	Identifier	width		1032739	1					
ANR	1032862	PrimaryExpression	15		1032739	1					
ANR	1032863	PrimaryExpression	4		1032739	1					
ANR	1032864	ShiftExpression	( c -> avctx -> width + 7 ) >> 3		1032739	2		>>			
ANR	1032865	AdditiveExpression	c -> avctx -> width + 7		1032739	0		+			
ANR	1032866	PtrMemberAccess	c -> avctx -> width		1032739	0					
ANR	1032867	PtrMemberAccess	c -> avctx		1032739	0					
ANR	1032868	Identifier	c		1032739	0					
ANR	1032869	Identifier	avctx		1032739	1					
ANR	1032870	Identifier	width		1032739	1					
ANR	1032871	PrimaryExpression	7		1032739	1					
ANR	1032872	PrimaryExpression	3		1032739	1					
ANR	1032873	IdentifierDeclStatement	int bh = is_chroma ? ( c -> avctx -> height + 15 ) >> 4 : ( c -> avctx -> height + 7 ) >> 3 ;	33:4:613:692	1032739	42	True				
ANR	1032874	IdentifierDecl	bh = is_chroma ? ( c -> avctx -> height + 15 ) >> 4 : ( c -> avctx -> height + 7 ) >> 3		1032739	0					
ANR	1032875	IdentifierDeclType	int		1032739	0					
ANR	1032876	Identifier	bh		1032739	1					
ANR	1032877	AssignmentExpression	bh = is_chroma ? ( c -> avctx -> height + 15 ) >> 4 : ( c -> avctx -> height + 7 ) >> 3		1032739	2		=			
ANR	1032878	Identifier	bh		1032739	0					
ANR	1032879	ConditionalExpression	is_chroma ? ( c -> avctx -> height + 15 ) >> 4 : ( c -> avctx -> height + 7 ) >> 3		1032739	1					
ANR	1032880	Condition	is_chroma		1032739	0					
ANR	1032881	Identifier	is_chroma		1032739	0					
ANR	1032882	ShiftExpression	( c -> avctx -> height + 15 ) >> 4		1032739	1		>>			
ANR	1032883	AdditiveExpression	c -> avctx -> height + 15		1032739	0		+			
ANR	1032884	PtrMemberAccess	c -> avctx -> height		1032739	0					
ANR	1032885	PtrMemberAccess	c -> avctx		1032739	0					
ANR	1032886	Identifier	c		1032739	0					
ANR	1032887	Identifier	avctx		1032739	1					
ANR	1032888	Identifier	height		1032739	1					
ANR	1032889	PrimaryExpression	15		1032739	1					
ANR	1032890	PrimaryExpression	4		1032739	1					
ANR	1032891	ShiftExpression	( c -> avctx -> height + 7 ) >> 3		1032739	2		>>			
ANR	1032892	AdditiveExpression	c -> avctx -> height + 7		1032739	0		+			
ANR	1032893	PtrMemberAccess	c -> avctx -> height		1032739	0					
ANR	1032894	PtrMemberAccess	c -> avctx		1032739	0					
ANR	1032895	Identifier	c		1032739	0					
ANR	1032896	Identifier	avctx		1032739	1					
ANR	1032897	Identifier	height		1032739	1					
ANR	1032898	PrimaryExpression	7		1032739	1					
ANR	1032899	PrimaryExpression	3		1032739	1					
ANR	1032900	IdentifierDeclStatement	int width = c -> avctx -> width >> is_chroma ;	35:4:699:739	1032739	43	True				
ANR	1032901	IdentifierDecl	width = c -> avctx -> width >> is_chroma		1032739	0					
ANR	1032902	IdentifierDeclType	int		1032739	0					
ANR	1032903	Identifier	width		1032739	1					
ANR	1032904	AssignmentExpression	width = c -> avctx -> width >> is_chroma		1032739	2		=			
ANR	1032905	Identifier	width		1032739	0					
ANR	1032906	ShiftExpression	c -> avctx -> width >> is_chroma		1032739	1		>>			
ANR	1032907	PtrMemberAccess	c -> avctx -> width		1032739	0					
ANR	1032908	PtrMemberAccess	c -> avctx		1032739	0					
ANR	1032909	Identifier	c		1032739	0					
ANR	1032910	Identifier	avctx		1032739	1					
ANR	1032911	Identifier	width		1032739	1					
ANR	1032912	Identifier	is_chroma		1032739	1					
ANR	1032913	ExpressionStatement	"init_lengths ( c , FFMAX ( width , 8 ) , bw )"	39:4:748:784	1032739	44	True				
ANR	1032914	CallExpression	"init_lengths ( c , FFMAX ( width , 8 ) , bw )"		1032739	0					
ANR	1032915	Callee	init_lengths		1032739	0					
ANR	1032916	Identifier	init_lengths		1032739	0					
ANR	1032917	ArgumentList	c		1032739	1					
ANR	1032918	Argument	c		1032739	0					
ANR	1032919	Identifier	c		1032739	0					
ANR	1032920	Argument	"FFMAX ( width , 8 )"		1032739	1					
ANR	1032921	CallExpression	"FFMAX ( width , 8 )"		1032739	0					
ANR	1032922	Callee	FFMAX		1032739	0					
ANR	1032923	Identifier	FFMAX		1032739	0					
ANR	1032924	ArgumentList	width		1032739	1					
ANR	1032925	Argument	width		1032739	0					
ANR	1032926	Identifier	width		1032739	0					
ANR	1032927	Argument	8		1032739	1					
ANR	1032928	PrimaryExpression	8		1032739	0					
ANR	1032929	Argument	bw		1032739	2					
ANR	1032930	Identifier	bw		1032739	0					
ANR	1032931	ForStatement	for ( i = 0 ; i < BINK_NB_SRC ; i ++ )		1032739	45					
ANR	1032932	ForInit	i = 0 ;	41:9:796:801	1032739	0	True				
ANR	1032933	AssignmentExpression	i = 0		1032739	0		=			
ANR	1032934	Identifier	i		1032739	0					
ANR	1032935	PrimaryExpression	0		1032739	1					
ANR	1032936	Condition	i < BINK_NB_SRC	41:16:803:817	1032739	1	True				
ANR	1032937	RelationalExpression	i < BINK_NB_SRC		1032739	0		<			
ANR	1032938	Identifier	i		1032739	0					
ANR	1032939	Identifier	BINK_NB_SRC		1032739	1					
ANR	1032940	PostIncDecOperationExpression	i ++	41:33:820:822	1032739	2	True				
ANR	1032941	Identifier	i		1032739	0					
ANR	1032942	IncDec	++		1032739	1					
ANR	1032943	ExpressionStatement	"read_bundle ( gb , c , i )"	43:8:834:855	1032739	3	True				
ANR	1032944	CallExpression	"read_bundle ( gb , c , i )"		1032739	0					
ANR	1032945	Callee	read_bundle		1032739	0					
ANR	1032946	Identifier	read_bundle		1032739	0					
ANR	1032947	ArgumentList	gb		1032739	1					
ANR	1032948	Argument	gb		1032739	0					
ANR	1032949	Identifier	gb		1032739	0					
ANR	1032950	Argument	c		1032739	1					
ANR	1032951	Identifier	c		1032739	0					
ANR	1032952	Argument	i		1032739	2					
ANR	1032953	Identifier	i		1032739	0					
ANR	1032954	ExpressionStatement	ref_start = c -> last -> data [ plane_idx ] ? c -> last -> data [ plane_idx ] : frame -> data [ plane_idx ]	47:4:864:994	1032739	46	True				
ANR	1032955	AssignmentExpression	ref_start = c -> last -> data [ plane_idx ] ? c -> last -> data [ plane_idx ] : frame -> data [ plane_idx ]		1032739	0		=			
ANR	1032956	Identifier	ref_start		1032739	0					
ANR	1032957	ConditionalExpression	c -> last -> data [ plane_idx ] ? c -> last -> data [ plane_idx ] : frame -> data [ plane_idx ]		1032739	1					
ANR	1032958	Condition	c -> last -> data [ plane_idx ]		1032739	0					
ANR	1032959	ArrayIndexing	c -> last -> data [ plane_idx ]		1032739	0					
ANR	1032960	PtrMemberAccess	c -> last -> data		1032739	0					
ANR	1032961	PtrMemberAccess	c -> last		1032739	0					
ANR	1032962	Identifier	c		1032739	0					
ANR	1032963	Identifier	last		1032739	1					
ANR	1032964	Identifier	data		1032739	1					
ANR	1032965	Identifier	plane_idx		1032739	1					
ANR	1032966	ArrayIndexing	c -> last -> data [ plane_idx ]		1032739	1					
ANR	1032967	PtrMemberAccess	c -> last -> data		1032739	0					
ANR	1032968	PtrMemberAccess	c -> last		1032739	0					
ANR	1032969	Identifier	c		1032739	0					
ANR	1032970	Identifier	last		1032739	1					
ANR	1032971	Identifier	data		1032739	1					
ANR	1032972	Identifier	plane_idx		1032739	1					
ANR	1032973	ArrayIndexing	frame -> data [ plane_idx ]		1032739	2					
ANR	1032974	PtrMemberAccess	frame -> data		1032739	0					
ANR	1032975	Identifier	frame		1032739	0					
ANR	1032976	Identifier	data		1032739	1					
ANR	1032977	Identifier	plane_idx		1032739	1					
ANR	1032978	ExpressionStatement	ref_end = ref_start + ( bw - 1 + c -> last -> linesize [ plane_idx ] * ( bh - 1 ) ) * 8	51:4:1001:1096	1032739	47	True				
ANR	1032979	AssignmentExpression	ref_end = ref_start + ( bw - 1 + c -> last -> linesize [ plane_idx ] * ( bh - 1 ) ) * 8		1032739	0		=			
ANR	1032980	Identifier	ref_end		1032739	0					
ANR	1032981	AdditiveExpression	ref_start + ( bw - 1 + c -> last -> linesize [ plane_idx ] * ( bh - 1 ) ) * 8		1032739	1		+			
ANR	1032982	Identifier	ref_start		1032739	0					
ANR	1032983	MultiplicativeExpression	( bw - 1 + c -> last -> linesize [ plane_idx ] * ( bh - 1 ) ) * 8		1032739	1		*			
ANR	1032984	AdditiveExpression	bw - 1 + c -> last -> linesize [ plane_idx ] * ( bh - 1 )		1032739	0		-			
ANR	1032985	Identifier	bw		1032739	0					
ANR	1032986	AdditiveExpression	1 + c -> last -> linesize [ plane_idx ] * ( bh - 1 )		1032739	1		+			
ANR	1032987	PrimaryExpression	1		1032739	0					
ANR	1032988	MultiplicativeExpression	c -> last -> linesize [ plane_idx ] * ( bh - 1 )		1032739	1		*			
ANR	1032989	ArrayIndexing	c -> last -> linesize [ plane_idx ]		1032739	0					
ANR	1032990	PtrMemberAccess	c -> last -> linesize		1032739	0					
ANR	1032991	PtrMemberAccess	c -> last		1032739	0					
ANR	1032992	Identifier	c		1032739	0					
ANR	1032993	Identifier	last		1032739	1					
ANR	1032994	Identifier	linesize		1032739	1					
ANR	1032995	Identifier	plane_idx		1032739	1					
ANR	1032996	AdditiveExpression	bh - 1		1032739	1		-			
ANR	1032997	Identifier	bh		1032739	0					
ANR	1032998	PrimaryExpression	1		1032739	1					
ANR	1032999	PrimaryExpression	8		1032739	1					
ANR	1033000	ForStatement	for ( i = 0 ; i < 64 ; i ++ )		1032739	48					
ANR	1033001	ForInit	i = 0 ;	57:9:1110:1115	1032739	0	True				
ANR	1033002	AssignmentExpression	i = 0		1032739	0		=			
ANR	1033003	Identifier	i		1032739	0					
ANR	1033004	PrimaryExpression	0		1032739	1					
ANR	1033005	Condition	i < 64	57:16:1117:1122	1032739	1	True				
ANR	1033006	RelationalExpression	i < 64		1032739	0		<			
ANR	1033007	Identifier	i		1032739	0					
ANR	1033008	PrimaryExpression	64		1032739	1					
ANR	1033009	PostIncDecOperationExpression	i ++	57:24:1125:1127	1032739	2	True				
ANR	1033010	Identifier	i		1032739	0					
ANR	1033011	IncDec	++		1032739	1					
ANR	1033012	ExpressionStatement	coordmap [ i ] = ( i & 7 ) + ( i >> 3 ) * stride	59:8:1139:1180	1032739	3	True				
ANR	1033013	AssignmentExpression	coordmap [ i ] = ( i & 7 ) + ( i >> 3 ) * stride		1032739	0		=			
ANR	1033014	ArrayIndexing	coordmap [ i ]		1032739	0					
ANR	1033015	Identifier	coordmap		1032739	0					
ANR	1033016	Identifier	i		1032739	1					
ANR	1033017	AdditiveExpression	( i & 7 ) + ( i >> 3 ) * stride		1032739	1		+			
ANR	1033018	BitAndExpression	i & 7		1032739	0		&			
ANR	1033019	Identifier	i		1032739	0					
ANR	1033020	PrimaryExpression	7		1032739	1					
ANR	1033021	MultiplicativeExpression	( i >> 3 ) * stride		1032739	1		*			
ANR	1033022	ShiftExpression	i >> 3		1032739	0		>>			
ANR	1033023	Identifier	i		1032739	0					
ANR	1033024	PrimaryExpression	3		1032739	1					
ANR	1033025	Identifier	stride		1032739	1					
ANR	1033026	ForStatement	for ( by = 0 ; by < bh ; by ++ )		1032739	49					
ANR	1033027	ForInit	by = 0 ;	63:9:1194:1200	1032739	0	True				
ANR	1033028	AssignmentExpression	by = 0		1032739	0		=			
ANR	1033029	Identifier	by		1032739	0					
ANR	1033030	PrimaryExpression	0		1032739	1					
ANR	1033031	Condition	by < bh	63:17:1202:1208	1032739	1	True				
ANR	1033032	RelationalExpression	by < bh		1032739	0		<			
ANR	1033033	Identifier	by		1032739	0					
ANR	1033034	Identifier	bh		1032739	1					
ANR	1033035	PostIncDecOperationExpression	by ++	63:26:1211:1214	1032739	2	True				
ANR	1033036	Identifier	by		1032739	0					
ANR	1033037	IncDec	++		1032739	1					
ANR	1033038	CompoundStatement		59:32:1075:1075	1032739	3					
ANR	1033039	IfStatement	"if ( ( ret = read_block_types ( c -> avctx , gb , & c -> bundle [ BINK_SRC_BLOCK_TYPES ] ) ) < 0 )"		1032739	0					
ANR	1033040	Condition	"( ret = read_block_types ( c -> avctx , gb , & c -> bundle [ BINK_SRC_BLOCK_TYPES ] ) ) < 0"	65:12:1232:1307	1032739	0	True				
ANR	1033041	RelationalExpression	"( ret = read_block_types ( c -> avctx , gb , & c -> bundle [ BINK_SRC_BLOCK_TYPES ] ) ) < 0"		1032739	0		<			
ANR	1033042	AssignmentExpression	"ret = read_block_types ( c -> avctx , gb , & c -> bundle [ BINK_SRC_BLOCK_TYPES ] )"		1032739	0		=			
ANR	1033043	Identifier	ret		1032739	0					
ANR	1033044	CallExpression	"read_block_types ( c -> avctx , gb , & c -> bundle [ BINK_SRC_BLOCK_TYPES ] )"		1032739	1					
ANR	1033045	Callee	read_block_types		1032739	0					
ANR	1033046	Identifier	read_block_types		1032739	0					
ANR	1033047	ArgumentList	c -> avctx		1032739	1					
ANR	1033048	Argument	c -> avctx		1032739	0					
ANR	1033049	PtrMemberAccess	c -> avctx		1032739	0					
ANR	1033050	Identifier	c		1032739	0					
ANR	1033051	Identifier	avctx		1032739	1					
ANR	1033052	Argument	gb		1032739	1					
ANR	1033053	Identifier	gb		1032739	0					
ANR	1033054	Argument	& c -> bundle [ BINK_SRC_BLOCK_TYPES ]		1032739	2					
ANR	1033055	UnaryOperationExpression	& c -> bundle [ BINK_SRC_BLOCK_TYPES ]		1032739	0					
ANR	1033056	UnaryOperator	&		1032739	0					
ANR	1033057	ArrayIndexing	c -> bundle [ BINK_SRC_BLOCK_TYPES ]		1032739	1					
ANR	1033058	PtrMemberAccess	c -> bundle		1032739	0					
ANR	1033059	Identifier	c		1032739	0					
ANR	1033060	Identifier	bundle		1032739	1					
ANR	1033061	Identifier	BINK_SRC_BLOCK_TYPES		1032739	1					
ANR	1033062	PrimaryExpression	0		1032739	1					
ANR	1033063	ReturnStatement	return ret ;	67:12:1323:1333	1032739	1	True				
ANR	1033064	Identifier	ret		1032739	0					
ANR	1033065	IfStatement	"if ( ( ret = read_block_types ( c -> avctx , gb , & c -> bundle [ BINK_SRC_SUB_BLOCK_TYPES ] ) ) < 0 )"		1032739	1					
ANR	1033066	Condition	"( ret = read_block_types ( c -> avctx , gb , & c -> bundle [ BINK_SRC_SUB_BLOCK_TYPES ] ) ) < 0"	69:12:1348:1427	1032739	0	True				
ANR	1033067	RelationalExpression	"( ret = read_block_types ( c -> avctx , gb , & c -> bundle [ BINK_SRC_SUB_BLOCK_TYPES ] ) ) < 0"		1032739	0		<			
ANR	1033068	AssignmentExpression	"ret = read_block_types ( c -> avctx , gb , & c -> bundle [ BINK_SRC_SUB_BLOCK_TYPES ] )"		1032739	0		=			
ANR	1033069	Identifier	ret		1032739	0					
ANR	1033070	CallExpression	"read_block_types ( c -> avctx , gb , & c -> bundle [ BINK_SRC_SUB_BLOCK_TYPES ] )"		1032739	1					
ANR	1033071	Callee	read_block_types		1032739	0					
ANR	1033072	Identifier	read_block_types		1032739	0					
ANR	1033073	ArgumentList	c -> avctx		1032739	1					
ANR	1033074	Argument	c -> avctx		1032739	0					
ANR	1033075	PtrMemberAccess	c -> avctx		1032739	0					
ANR	1033076	Identifier	c		1032739	0					
ANR	1033077	Identifier	avctx		1032739	1					
ANR	1033078	Argument	gb		1032739	1					
ANR	1033079	Identifier	gb		1032739	0					
ANR	1033080	Argument	& c -> bundle [ BINK_SRC_SUB_BLOCK_TYPES ]		1032739	2					
ANR	1033081	UnaryOperationExpression	& c -> bundle [ BINK_SRC_SUB_BLOCK_TYPES ]		1032739	0					
ANR	1033082	UnaryOperator	&		1032739	0					
ANR	1033083	ArrayIndexing	c -> bundle [ BINK_SRC_SUB_BLOCK_TYPES ]		1032739	1					
ANR	1033084	PtrMemberAccess	c -> bundle		1032739	0					
ANR	1033085	Identifier	c		1032739	0					
ANR	1033086	Identifier	bundle		1032739	1					
ANR	1033087	Identifier	BINK_SRC_SUB_BLOCK_TYPES		1032739	1					
ANR	1033088	PrimaryExpression	0		1032739	1					
ANR	1033089	ReturnStatement	return ret ;	71:12:1443:1453	1032739	1	True				
ANR	1033090	Identifier	ret		1032739	0					
ANR	1033091	IfStatement	"if ( ( ret = read_colors ( gb , & c -> bundle [ BINK_SRC_COLORS ] , c ) ) < 0 )"		1032739	2					
ANR	1033092	Condition	"( ret = read_colors ( gb , & c -> bundle [ BINK_SRC_COLORS ] , c ) ) < 0"	73:12:1468:1526	1032739	0	True				
ANR	1033093	RelationalExpression	"( ret = read_colors ( gb , & c -> bundle [ BINK_SRC_COLORS ] , c ) ) < 0"		1032739	0		<			
ANR	1033094	AssignmentExpression	"ret = read_colors ( gb , & c -> bundle [ BINK_SRC_COLORS ] , c )"		1032739	0		=			
ANR	1033095	Identifier	ret		1032739	0					
ANR	1033096	CallExpression	"read_colors ( gb , & c -> bundle [ BINK_SRC_COLORS ] , c )"		1032739	1					
ANR	1033097	Callee	read_colors		1032739	0					
ANR	1033098	Identifier	read_colors		1032739	0					
ANR	1033099	ArgumentList	gb		1032739	1					
ANR	1033100	Argument	gb		1032739	0					
ANR	1033101	Identifier	gb		1032739	0					
ANR	1033102	Argument	& c -> bundle [ BINK_SRC_COLORS ]		1032739	1					
ANR	1033103	UnaryOperationExpression	& c -> bundle [ BINK_SRC_COLORS ]		1032739	0					
ANR	1033104	UnaryOperator	&		1032739	0					
ANR	1033105	ArrayIndexing	c -> bundle [ BINK_SRC_COLORS ]		1032739	1					
ANR	1033106	PtrMemberAccess	c -> bundle		1032739	0					
ANR	1033107	Identifier	c		1032739	0					
ANR	1033108	Identifier	bundle		1032739	1					
ANR	1033109	Identifier	BINK_SRC_COLORS		1032739	1					
ANR	1033110	Argument	c		1032739	2					
ANR	1033111	Identifier	c		1032739	0					
ANR	1033112	PrimaryExpression	0		1032739	1					
ANR	1033113	ReturnStatement	return ret ;	75:12:1542:1552	1032739	1	True				
ANR	1033114	Identifier	ret		1032739	0					
ANR	1033115	IfStatement	"if ( ( ret = read_patterns ( c -> avctx , gb , & c -> bundle [ BINK_SRC_PATTERN ] ) ) < 0 )"		1032739	3					
ANR	1033116	Condition	"( ret = read_patterns ( c -> avctx , gb , & c -> bundle [ BINK_SRC_PATTERN ] ) ) < 0"	77:12:1567:1635	1032739	0	True				
ANR	1033117	RelationalExpression	"( ret = read_patterns ( c -> avctx , gb , & c -> bundle [ BINK_SRC_PATTERN ] ) ) < 0"		1032739	0		<			
ANR	1033118	AssignmentExpression	"ret = read_patterns ( c -> avctx , gb , & c -> bundle [ BINK_SRC_PATTERN ] )"		1032739	0		=			
ANR	1033119	Identifier	ret		1032739	0					
ANR	1033120	CallExpression	"read_patterns ( c -> avctx , gb , & c -> bundle [ BINK_SRC_PATTERN ] )"		1032739	1					
ANR	1033121	Callee	read_patterns		1032739	0					
ANR	1033122	Identifier	read_patterns		1032739	0					
ANR	1033123	ArgumentList	c -> avctx		1032739	1					
ANR	1033124	Argument	c -> avctx		1032739	0					
ANR	1033125	PtrMemberAccess	c -> avctx		1032739	0					
ANR	1033126	Identifier	c		1032739	0					
ANR	1033127	Identifier	avctx		1032739	1					
ANR	1033128	Argument	gb		1032739	1					
ANR	1033129	Identifier	gb		1032739	0					
ANR	1033130	Argument	& c -> bundle [ BINK_SRC_PATTERN ]		1032739	2					
ANR	1033131	UnaryOperationExpression	& c -> bundle [ BINK_SRC_PATTERN ]		1032739	0					
ANR	1033132	UnaryOperator	&		1032739	0					
ANR	1033133	ArrayIndexing	c -> bundle [ BINK_SRC_PATTERN ]		1032739	1					
ANR	1033134	PtrMemberAccess	c -> bundle		1032739	0					
ANR	1033135	Identifier	c		1032739	0					
ANR	1033136	Identifier	bundle		1032739	1					
ANR	1033137	Identifier	BINK_SRC_PATTERN		1032739	1					
ANR	1033138	PrimaryExpression	0		1032739	1					
ANR	1033139	ReturnStatement	return ret ;	79:12:1651:1661	1032739	1	True				
ANR	1033140	Identifier	ret		1032739	0					
ANR	1033141	IfStatement	"if ( ( ret = read_motion_values ( c -> avctx , gb , & c -> bundle [ BINK_SRC_X_OFF ] ) ) < 0 )"		1032739	4					
ANR	1033142	Condition	"( ret = read_motion_values ( c -> avctx , gb , & c -> bundle [ BINK_SRC_X_OFF ] ) ) < 0"	81:12:1676:1747	1032739	0	True				
ANR	1033143	RelationalExpression	"( ret = read_motion_values ( c -> avctx , gb , & c -> bundle [ BINK_SRC_X_OFF ] ) ) < 0"		1032739	0		<			
ANR	1033144	AssignmentExpression	"ret = read_motion_values ( c -> avctx , gb , & c -> bundle [ BINK_SRC_X_OFF ] )"		1032739	0		=			
ANR	1033145	Identifier	ret		1032739	0					
ANR	1033146	CallExpression	"read_motion_values ( c -> avctx , gb , & c -> bundle [ BINK_SRC_X_OFF ] )"		1032739	1					
ANR	1033147	Callee	read_motion_values		1032739	0					
ANR	1033148	Identifier	read_motion_values		1032739	0					
ANR	1033149	ArgumentList	c -> avctx		1032739	1					
ANR	1033150	Argument	c -> avctx		1032739	0					
ANR	1033151	PtrMemberAccess	c -> avctx		1032739	0					
ANR	1033152	Identifier	c		1032739	0					
ANR	1033153	Identifier	avctx		1032739	1					
ANR	1033154	Argument	gb		1032739	1					
ANR	1033155	Identifier	gb		1032739	0					
ANR	1033156	Argument	& c -> bundle [ BINK_SRC_X_OFF ]		1032739	2					
ANR	1033157	UnaryOperationExpression	& c -> bundle [ BINK_SRC_X_OFF ]		1032739	0					
ANR	1033158	UnaryOperator	&		1032739	0					
ANR	1033159	ArrayIndexing	c -> bundle [ BINK_SRC_X_OFF ]		1032739	1					
ANR	1033160	PtrMemberAccess	c -> bundle		1032739	0					
ANR	1033161	Identifier	c		1032739	0					
ANR	1033162	Identifier	bundle		1032739	1					
ANR	1033163	Identifier	BINK_SRC_X_OFF		1032739	1					
ANR	1033164	PrimaryExpression	0		1032739	1					
ANR	1033165	ReturnStatement	return ret ;	83:12:1763:1773	1032739	1	True				
ANR	1033166	Identifier	ret		1032739	0					
ANR	1033167	IfStatement	"if ( ( ret = read_motion_values ( c -> avctx , gb , & c -> bundle [ BINK_SRC_Y_OFF ] ) ) < 0 )"		1032739	5					
ANR	1033168	Condition	"( ret = read_motion_values ( c -> avctx , gb , & c -> bundle [ BINK_SRC_Y_OFF ] ) ) < 0"	85:12:1788:1859	1032739	0	True				
ANR	1033169	RelationalExpression	"( ret = read_motion_values ( c -> avctx , gb , & c -> bundle [ BINK_SRC_Y_OFF ] ) ) < 0"		1032739	0		<			
ANR	1033170	AssignmentExpression	"ret = read_motion_values ( c -> avctx , gb , & c -> bundle [ BINK_SRC_Y_OFF ] )"		1032739	0		=			
ANR	1033171	Identifier	ret		1032739	0					
ANR	1033172	CallExpression	"read_motion_values ( c -> avctx , gb , & c -> bundle [ BINK_SRC_Y_OFF ] )"		1032739	1					
ANR	1033173	Callee	read_motion_values		1032739	0					
ANR	1033174	Identifier	read_motion_values		1032739	0					
ANR	1033175	ArgumentList	c -> avctx		1032739	1					
ANR	1033176	Argument	c -> avctx		1032739	0					
ANR	1033177	PtrMemberAccess	c -> avctx		1032739	0					
ANR	1033178	Identifier	c		1032739	0					
ANR	1033179	Identifier	avctx		1032739	1					
ANR	1033180	Argument	gb		1032739	1					
ANR	1033181	Identifier	gb		1032739	0					
ANR	1033182	Argument	& c -> bundle [ BINK_SRC_Y_OFF ]		1032739	2					
ANR	1033183	UnaryOperationExpression	& c -> bundle [ BINK_SRC_Y_OFF ]		1032739	0					
ANR	1033184	UnaryOperator	&		1032739	0					
ANR	1033185	ArrayIndexing	c -> bundle [ BINK_SRC_Y_OFF ]		1032739	1					
ANR	1033186	PtrMemberAccess	c -> bundle		1032739	0					
ANR	1033187	Identifier	c		1032739	0					
ANR	1033188	Identifier	bundle		1032739	1					
ANR	1033189	Identifier	BINK_SRC_Y_OFF		1032739	1					
ANR	1033190	PrimaryExpression	0		1032739	1					
ANR	1033191	ReturnStatement	return ret ;	87:12:1875:1885	1032739	1	True				
ANR	1033192	Identifier	ret		1032739	0					
ANR	1033193	IfStatement	"if ( ( ret = read_dcs ( c -> avctx , gb , & c -> bundle [ BINK_SRC_INTRA_DC ] , DC_START_BITS , 0 ) ) < 0 )"		1032739	6					
ANR	1033194	Condition	"( ret = read_dcs ( c -> avctx , gb , & c -> bundle [ BINK_SRC_INTRA_DC ] , DC_START_BITS , 0 ) ) < 0"	89:12:1900:1982	1032739	0	True				
ANR	1033195	RelationalExpression	"( ret = read_dcs ( c -> avctx , gb , & c -> bundle [ BINK_SRC_INTRA_DC ] , DC_START_BITS , 0 ) ) < 0"		1032739	0		<			
ANR	1033196	AssignmentExpression	"ret = read_dcs ( c -> avctx , gb , & c -> bundle [ BINK_SRC_INTRA_DC ] , DC_START_BITS , 0 )"		1032739	0		=			
ANR	1033197	Identifier	ret		1032739	0					
ANR	1033198	CallExpression	"read_dcs ( c -> avctx , gb , & c -> bundle [ BINK_SRC_INTRA_DC ] , DC_START_BITS , 0 )"		1032739	1					
ANR	1033199	Callee	read_dcs		1032739	0					
ANR	1033200	Identifier	read_dcs		1032739	0					
ANR	1033201	ArgumentList	c -> avctx		1032739	1					
ANR	1033202	Argument	c -> avctx		1032739	0					
ANR	1033203	PtrMemberAccess	c -> avctx		1032739	0					
ANR	1033204	Identifier	c		1032739	0					
ANR	1033205	Identifier	avctx		1032739	1					
ANR	1033206	Argument	gb		1032739	1					
ANR	1033207	Identifier	gb		1032739	0					
ANR	1033208	Argument	& c -> bundle [ BINK_SRC_INTRA_DC ]		1032739	2					
ANR	1033209	UnaryOperationExpression	& c -> bundle [ BINK_SRC_INTRA_DC ]		1032739	0					
ANR	1033210	UnaryOperator	&		1032739	0					
ANR	1033211	ArrayIndexing	c -> bundle [ BINK_SRC_INTRA_DC ]		1032739	1					
ANR	1033212	PtrMemberAccess	c -> bundle		1032739	0					
ANR	1033213	Identifier	c		1032739	0					
ANR	1033214	Identifier	bundle		1032739	1					
ANR	1033215	Identifier	BINK_SRC_INTRA_DC		1032739	1					
ANR	1033216	Argument	DC_START_BITS		1032739	3					
ANR	1033217	Identifier	DC_START_BITS		1032739	0					
ANR	1033218	Argument	0		1032739	4					
ANR	1033219	PrimaryExpression	0		1032739	0					
ANR	1033220	PrimaryExpression	0		1032739	1					
ANR	1033221	ReturnStatement	return ret ;	91:12:1998:2008	1032739	1	True				
ANR	1033222	Identifier	ret		1032739	0					
ANR	1033223	IfStatement	"if ( ( ret = read_dcs ( c -> avctx , gb , & c -> bundle [ BINK_SRC_INTER_DC ] , DC_START_BITS , 1 ) ) < 0 )"		1032739	7					
ANR	1033224	Condition	"( ret = read_dcs ( c -> avctx , gb , & c -> bundle [ BINK_SRC_INTER_DC ] , DC_START_BITS , 1 ) ) < 0"	93:12:2023:2105	1032739	0	True				
ANR	1033225	RelationalExpression	"( ret = read_dcs ( c -> avctx , gb , & c -> bundle [ BINK_SRC_INTER_DC ] , DC_START_BITS , 1 ) ) < 0"		1032739	0		<			
ANR	1033226	AssignmentExpression	"ret = read_dcs ( c -> avctx , gb , & c -> bundle [ BINK_SRC_INTER_DC ] , DC_START_BITS , 1 )"		1032739	0		=			
ANR	1033227	Identifier	ret		1032739	0					
ANR	1033228	CallExpression	"read_dcs ( c -> avctx , gb , & c -> bundle [ BINK_SRC_INTER_DC ] , DC_START_BITS , 1 )"		1032739	1					
ANR	1033229	Callee	read_dcs		1032739	0					
ANR	1033230	Identifier	read_dcs		1032739	0					
ANR	1033231	ArgumentList	c -> avctx		1032739	1					
ANR	1033232	Argument	c -> avctx		1032739	0					
ANR	1033233	PtrMemberAccess	c -> avctx		1032739	0					
ANR	1033234	Identifier	c		1032739	0					
ANR	1033235	Identifier	avctx		1032739	1					
ANR	1033236	Argument	gb		1032739	1					
ANR	1033237	Identifier	gb		1032739	0					
ANR	1033238	Argument	& c -> bundle [ BINK_SRC_INTER_DC ]		1032739	2					
ANR	1033239	UnaryOperationExpression	& c -> bundle [ BINK_SRC_INTER_DC ]		1032739	0					
ANR	1033240	UnaryOperator	&		1032739	0					
ANR	1033241	ArrayIndexing	c -> bundle [ BINK_SRC_INTER_DC ]		1032739	1					
ANR	1033242	PtrMemberAccess	c -> bundle		1032739	0					
ANR	1033243	Identifier	c		1032739	0					
ANR	1033244	Identifier	bundle		1032739	1					
ANR	1033245	Identifier	BINK_SRC_INTER_DC		1032739	1					
ANR	1033246	Argument	DC_START_BITS		1032739	3					
ANR	1033247	Identifier	DC_START_BITS		1032739	0					
ANR	1033248	Argument	1		1032739	4					
ANR	1033249	PrimaryExpression	1		1032739	0					
ANR	1033250	PrimaryExpression	0		1032739	1					
ANR	1033251	ReturnStatement	return ret ;	95:12:2121:2131	1032739	1	True				
ANR	1033252	Identifier	ret		1032739	0					
ANR	1033253	IfStatement	"if ( ( ret = read_runs ( c -> avctx , gb , & c -> bundle [ BINK_SRC_RUN ] ) ) < 0 )"		1032739	8					
ANR	1033254	Condition	"( ret = read_runs ( c -> avctx , gb , & c -> bundle [ BINK_SRC_RUN ] ) ) < 0"	97:12:2146:2206	1032739	0	True				
ANR	1033255	RelationalExpression	"( ret = read_runs ( c -> avctx , gb , & c -> bundle [ BINK_SRC_RUN ] ) ) < 0"		1032739	0		<			
ANR	1033256	AssignmentExpression	"ret = read_runs ( c -> avctx , gb , & c -> bundle [ BINK_SRC_RUN ] )"		1032739	0		=			
ANR	1033257	Identifier	ret		1032739	0					
ANR	1033258	CallExpression	"read_runs ( c -> avctx , gb , & c -> bundle [ BINK_SRC_RUN ] )"		1032739	1					
ANR	1033259	Callee	read_runs		1032739	0					
ANR	1033260	Identifier	read_runs		1032739	0					
ANR	1033261	ArgumentList	c -> avctx		1032739	1					
ANR	1033262	Argument	c -> avctx		1032739	0					
ANR	1033263	PtrMemberAccess	c -> avctx		1032739	0					
ANR	1033264	Identifier	c		1032739	0					
ANR	1033265	Identifier	avctx		1032739	1					
ANR	1033266	Argument	gb		1032739	1					
ANR	1033267	Identifier	gb		1032739	0					
ANR	1033268	Argument	& c -> bundle [ BINK_SRC_RUN ]		1032739	2					
ANR	1033269	UnaryOperationExpression	& c -> bundle [ BINK_SRC_RUN ]		1032739	0					
ANR	1033270	UnaryOperator	&		1032739	0					
ANR	1033271	ArrayIndexing	c -> bundle [ BINK_SRC_RUN ]		1032739	1					
ANR	1033272	PtrMemberAccess	c -> bundle		1032739	0					
ANR	1033273	Identifier	c		1032739	0					
ANR	1033274	Identifier	bundle		1032739	1					
ANR	1033275	Identifier	BINK_SRC_RUN		1032739	1					
ANR	1033276	PrimaryExpression	0		1032739	1					
ANR	1033277	ReturnStatement	return ret ;	99:12:2222:2232	1032739	1	True				
ANR	1033278	Identifier	ret		1032739	0					
ANR	1033279	IfStatement	if ( by == bh )		1032739	9					
ANR	1033280	Condition	by == bh	103:12:2249:2256	1032739	0	True				
ANR	1033281	EqualityExpression	by == bh		1032739	0		==			
ANR	1033282	Identifier	by		1032739	0					
ANR	1033283	Identifier	bh		1032739	1					
ANR	1033284	BreakStatement	break ;	105:12:2272:2277	1032739	1	True				
ANR	1033285	ExpressionStatement	dst = frame -> data [ plane_idx ] + 8 * by * stride	107:8:2288:2332	1032739	10	True				
ANR	1033286	AssignmentExpression	dst = frame -> data [ plane_idx ] + 8 * by * stride		1032739	0		=			
ANR	1033287	Identifier	dst		1032739	0					
ANR	1033288	AdditiveExpression	frame -> data [ plane_idx ] + 8 * by * stride		1032739	1		+			
ANR	1033289	ArrayIndexing	frame -> data [ plane_idx ]		1032739	0					
ANR	1033290	PtrMemberAccess	frame -> data		1032739	0					
ANR	1033291	Identifier	frame		1032739	0					
ANR	1033292	Identifier	data		1032739	1					
ANR	1033293	Identifier	plane_idx		1032739	1					
ANR	1033294	MultiplicativeExpression	8 * by * stride		1032739	1		*			
ANR	1033295	PrimaryExpression	8		1032739	0					
ANR	1033296	MultiplicativeExpression	by * stride		1032739	1		*			
ANR	1033297	Identifier	by		1032739	0					
ANR	1033298	Identifier	stride		1032739	1					
ANR	1033299	ExpressionStatement	prev = ( c -> last -> data [ plane_idx ] ? c -> last -> data [ plane_idx ] : frame -> data [ plane_idx ] ) + 8 * by * stride	109:8:2343:2484	1032739	11	True				
ANR	1033300	AssignmentExpression	prev = ( c -> last -> data [ plane_idx ] ? c -> last -> data [ plane_idx ] : frame -> data [ plane_idx ] ) + 8 * by * stride		1032739	0		=			
ANR	1033301	Identifier	prev		1032739	0					
ANR	1033302	AdditiveExpression	( c -> last -> data [ plane_idx ] ? c -> last -> data [ plane_idx ] : frame -> data [ plane_idx ] ) + 8 * by * stride		1032739	1		+			
ANR	1033303	ConditionalExpression	c -> last -> data [ plane_idx ] ? c -> last -> data [ plane_idx ] : frame -> data [ plane_idx ]		1032739	0					
ANR	1033304	Condition	c -> last -> data [ plane_idx ]		1032739	0					
ANR	1033305	ArrayIndexing	c -> last -> data [ plane_idx ]		1032739	0					
ANR	1033306	PtrMemberAccess	c -> last -> data		1032739	0					
ANR	1033307	PtrMemberAccess	c -> last		1032739	0					
ANR	1033308	Identifier	c		1032739	0					
ANR	1033309	Identifier	last		1032739	1					
ANR	1033310	Identifier	data		1032739	1					
ANR	1033311	Identifier	plane_idx		1032739	1					
ANR	1033312	ArrayIndexing	c -> last -> data [ plane_idx ]		1032739	1					
ANR	1033313	PtrMemberAccess	c -> last -> data		1032739	0					
ANR	1033314	PtrMemberAccess	c -> last		1032739	0					
ANR	1033315	Identifier	c		1032739	0					
ANR	1033316	Identifier	last		1032739	1					
ANR	1033317	Identifier	data		1032739	1					
ANR	1033318	Identifier	plane_idx		1032739	1					
ANR	1033319	ArrayIndexing	frame -> data [ plane_idx ]		1032739	2					
ANR	1033320	PtrMemberAccess	frame -> data		1032739	0					
ANR	1033321	Identifier	frame		1032739	0					
ANR	1033322	Identifier	data		1032739	1					
ANR	1033323	Identifier	plane_idx		1032739	1					
ANR	1033324	MultiplicativeExpression	8 * by * stride		1032739	1		*			
ANR	1033325	PrimaryExpression	8		1032739	0					
ANR	1033326	MultiplicativeExpression	by * stride		1032739	1		*			
ANR	1033327	Identifier	by		1032739	0					
ANR	1033328	Identifier	stride		1032739	1					
ANR	1033329	ForStatement	"for ( bx = 0 ; bx < bw ; bx ++ , dst += 8 , prev += 8 )"		1032739	12					
ANR	1033330	ForInit	bx = 0 ;	113:13:2500:2506	1032739	0	True				
ANR	1033331	AssignmentExpression	bx = 0		1032739	0		=			
ANR	1033332	Identifier	bx		1032739	0					
ANR	1033333	PrimaryExpression	0		1032739	1					
ANR	1033334	Condition	bx < bw	113:21:2508:2514	1032739	1	True				
ANR	1033335	RelationalExpression	bx < bw		1032739	0		<			
ANR	1033336	Identifier	bx		1032739	0					
ANR	1033337	Identifier	bw		1032739	1					
ANR	1033338	Expression	"bx ++ , dst += 8 , prev += 8"	113:30:2517:2541	1032739	2	True				
ANR	1033339	PostIncDecOperationExpression	bx ++		1032739	0					
ANR	1033340	Identifier	bx		1032739	0					
ANR	1033341	IncDec	++		1032739	1					
ANR	1033342	Expression	"dst += 8 , prev += 8"		1032739	1					
ANR	1033343	AssignmentExpression	dst += 8		1032739	0		+=			
ANR	1033344	Identifier	dst		1032739	0					
ANR	1033345	PrimaryExpression	8		1032739	1					
ANR	1033346	AssignmentExpression	prev += 8		1032739	1		+=			
ANR	1033347	Identifier	prev		1032739	0					
ANR	1033348	PrimaryExpression	8		1032739	1					
ANR	1033349	CompoundStatement		109:57:2402:2402	1032739	3					
ANR	1033350	ExpressionStatement	"blk = get_value ( c , BINK_SRC_BLOCK_TYPES )"	115:12:2559:2599	1032739	0	True				
ANR	1033351	AssignmentExpression	"blk = get_value ( c , BINK_SRC_BLOCK_TYPES )"		1032739	0		=			
ANR	1033352	Identifier	blk		1032739	0					
ANR	1033353	CallExpression	"get_value ( c , BINK_SRC_BLOCK_TYPES )"		1032739	1					
ANR	1033354	Callee	get_value		1032739	0					
ANR	1033355	Identifier	get_value		1032739	0					
ANR	1033356	ArgumentList	c		1032739	1					
ANR	1033357	Argument	c		1032739	0					
ANR	1033358	Identifier	c		1032739	0					
ANR	1033359	Argument	BINK_SRC_BLOCK_TYPES		1032739	1					
ANR	1033360	Identifier	BINK_SRC_BLOCK_TYPES		1032739	0					
ANR	1033361	IfStatement	if ( ( by & 1 ) && blk == SCALED_BLOCK )		1032739	1					
ANR	1033362	Condition	( by & 1 ) && blk == SCALED_BLOCK	119:16:2715:2745	1032739	0	True				
ANR	1033363	AndExpression	( by & 1 ) && blk == SCALED_BLOCK		1032739	0		&&			
ANR	1033364	BitAndExpression	by & 1		1032739	0		&			
ANR	1033365	Identifier	by		1032739	0					
ANR	1033366	PrimaryExpression	1		1032739	1					
ANR	1033367	EqualityExpression	blk == SCALED_BLOCK		1032739	1		==			
ANR	1033368	Identifier	blk		1032739	0					
ANR	1033369	Identifier	SCALED_BLOCK		1032739	1					
ANR	1033370	CompoundStatement		115:49:2606:2606	1032739	1					
ANR	1033371	ExpressionStatement	bx ++	121:16:2767:2771	1032739	0	True				
ANR	1033372	PostIncDecOperationExpression	bx ++		1032739	0					
ANR	1033373	Identifier	bx		1032739	0					
ANR	1033374	IncDec	++		1032739	1					
ANR	1033375	ExpressionStatement	dst += 8	123:16:2790:2799	1032739	1	True				
ANR	1033376	AssignmentExpression	dst += 8		1032739	0		+=			
ANR	1033377	Identifier	dst		1032739	0					
ANR	1033378	PrimaryExpression	8		1032739	1					
ANR	1033379	ExpressionStatement	prev += 8	125:16:2818:2827	1032739	2	True				
ANR	1033380	AssignmentExpression	prev += 8		1032739	0		+=			
ANR	1033381	Identifier	prev		1032739	0					
ANR	1033382	PrimaryExpression	8		1032739	1					
ANR	1033383	ContinueStatement	continue ;	127:16:2846:2854	1032739	3	True				
ANR	1033384	SwitchStatement	switch ( blk )		1032739	2					
ANR	1033385	Condition	blk	131:20:2892:2894	1032739	0	True				
ANR	1033386	Identifier	blk		1032739	0					
ANR	1033387	CompoundStatement		127:25:2755:2755	1032739	1					
ANR	1033388	Label	case SKIP_BLOCK :	133:12:2912:2927	1032739	0	True				
ANR	1033389	Identifier	SKIP_BLOCK		1032739	0					
ANR	1033390	ExpressionStatement	"c -> hdsp . put_pixels_tab [ 1 ] [ 0 ] ( dst , prev , stride , 8 )"	135:16:2946:2996	1032739	1	True				
ANR	1033391	CallExpression	"c -> hdsp . put_pixels_tab [ 1 ] [ 0 ] ( dst , prev , stride , 8 )"		1032739	0					
ANR	1033392	Callee	c -> hdsp . put_pixels_tab [ 1 ] [ 0 ]		1032739	0					
ANR	1033393	ArrayIndexing	c -> hdsp . put_pixels_tab [ 1 ] [ 0 ]		1032739	0					
ANR	1033394	ArrayIndexing	c -> hdsp . put_pixels_tab [ 1 ]		1032739	0					
ANR	1033395	MemberAccess	c -> hdsp . put_pixels_tab		1032739	0					
ANR	1033396	PtrMemberAccess	c -> hdsp		1032739	0					
ANR	1033397	Identifier	c		1032739	0					
ANR	1033398	Identifier	hdsp		1032739	1					
ANR	1033399	Identifier	put_pixels_tab		1032739	1					
ANR	1033400	PrimaryExpression	1		1032739	1					
ANR	1033401	PrimaryExpression	0		1032739	1					
ANR	1033402	ArgumentList	dst		1032739	1					
ANR	1033403	Argument	dst		1032739	0					
ANR	1033404	Identifier	dst		1032739	0					
ANR	1033405	Argument	prev		1032739	1					
ANR	1033406	Identifier	prev		1032739	0					
ANR	1033407	Argument	stride		1032739	2					
ANR	1033408	Identifier	stride		1032739	0					
ANR	1033409	Argument	8		1032739	3					
ANR	1033410	PrimaryExpression	8		1032739	0					
ANR	1033411	BreakStatement	break ;	137:16:3015:3020	1032739	2	True				
ANR	1033412	Label	case SCALED_BLOCK :	139:12:3035:3052	1032739	3	True				
ANR	1033413	Identifier	SCALED_BLOCK		1032739	0					
ANR	1033414	ExpressionStatement	"blk = get_value ( c , BINK_SRC_SUB_BLOCK_TYPES )"	141:16:3071:3115	1032739	4	True				
ANR	1033415	AssignmentExpression	"blk = get_value ( c , BINK_SRC_SUB_BLOCK_TYPES )"		1032739	0		=			
ANR	1033416	Identifier	blk		1032739	0					
ANR	1033417	CallExpression	"get_value ( c , BINK_SRC_SUB_BLOCK_TYPES )"		1032739	1					
ANR	1033418	Callee	get_value		1032739	0					
ANR	1033419	Identifier	get_value		1032739	0					
ANR	1033420	ArgumentList	c		1032739	1					
ANR	1033421	Argument	c		1032739	0					
ANR	1033422	Identifier	c		1032739	0					
ANR	1033423	Argument	BINK_SRC_SUB_BLOCK_TYPES		1032739	1					
ANR	1033424	Identifier	BINK_SRC_SUB_BLOCK_TYPES		1032739	0					
ANR	1033425	SwitchStatement	switch ( blk )		1032739	5					
ANR	1033426	Condition	blk	143:24:3142:3144	1032739	0	True				
ANR	1033427	Identifier	blk		1032739	0					
ANR	1033428	CompoundStatement		139:29:3005:3005	1032739	1					
ANR	1033429	Label	case RUN_BLOCK :	145:16:3166:3180	1032739	0	True				
ANR	1033430	Identifier	RUN_BLOCK		1032739	0					
ANR	1033431	ExpressionStatement	"scan = bink_patterns [ get_bits ( gb , 4 ) ]"	147:20:3203:3240	1032739	1	True				
ANR	1033432	AssignmentExpression	"scan = bink_patterns [ get_bits ( gb , 4 ) ]"		1032739	0		=			
ANR	1033433	Identifier	scan		1032739	0					
ANR	1033434	ArrayIndexing	"bink_patterns [ get_bits ( gb , 4 ) ]"		1032739	1					
ANR	1033435	Identifier	bink_patterns		1032739	0					
ANR	1033436	CallExpression	"get_bits ( gb , 4 )"		1032739	1					
ANR	1033437	Callee	get_bits		1032739	0					
ANR	1033438	Identifier	get_bits		1032739	0					
ANR	1033439	ArgumentList	gb		1032739	1					
ANR	1033440	Argument	gb		1032739	0					
ANR	1033441	Identifier	gb		1032739	0					
ANR	1033442	Argument	4		1032739	1					
ANR	1033443	PrimaryExpression	4		1032739	0					
ANR	1033444	ExpressionStatement	i = 0	149:20:3263:3268	1032739	2	True				
ANR	1033445	AssignmentExpression	i = 0		1032739	0		=			
ANR	1033446	Identifier	i		1032739	0					
ANR	1033447	PrimaryExpression	0		1032739	1					
ANR	1033448	DoStatement	do		1032739	3					
ANR	1033449	CompoundStatement		149:24:3179:3219	1032739	0					
ANR	1033450	IdentifierDeclStatement	"int run = get_value ( c , BINK_SRC_RUN ) + 1 ;"	153:24:3321:3361	1032739	0	True				
ANR	1033451	IdentifierDecl	"run = get_value ( c , BINK_SRC_RUN ) + 1"		1032739	0					
ANR	1033452	IdentifierDeclType	int		1032739	0					
ANR	1033453	Identifier	run		1032739	1					
ANR	1033454	AssignmentExpression	"run = get_value ( c , BINK_SRC_RUN ) + 1"		1032739	2		=			
ANR	1033455	Identifier	run		1032739	0					
ANR	1033456	AdditiveExpression	"get_value ( c , BINK_SRC_RUN ) + 1"		1032739	1		+			
ANR	1033457	CallExpression	"get_value ( c , BINK_SRC_RUN )"		1032739	0					
ANR	1033458	Callee	get_value		1032739	0					
ANR	1033459	Identifier	get_value		1032739	0					
ANR	1033460	ArgumentList	c		1032739	1					
ANR	1033461	Argument	c		1032739	0					
ANR	1033462	Identifier	c		1032739	0					
ANR	1033463	Argument	BINK_SRC_RUN		1032739	1					
ANR	1033464	Identifier	BINK_SRC_RUN		1032739	0					
ANR	1033465	PrimaryExpression	1		1032739	1					
ANR	1033466	ExpressionStatement	i += run	157:24:3390:3398	1032739	1	True				
ANR	1033467	AssignmentExpression	i += run		1032739	0		+=			
ANR	1033468	Identifier	i		1032739	0					
ANR	1033469	Identifier	run		1032739	1					
ANR	1033470	IfStatement	if ( i > 64 )		1032739	2					
ANR	1033471	Condition	i > 64	159:28:3429:3434	1032739	0	True				
ANR	1033472	RelationalExpression	i > 64		1032739	0		>			
ANR	1033473	Identifier	i		1032739	0					
ANR	1033474	PrimaryExpression	64		1032739	1					
ANR	1033475	CompoundStatement		155:36:3295:3295	1032739	1					
ANR	1033476	ExpressionStatement	"av_log ( c -> avctx , AV_LOG_ERROR , ""Run went out of bounds\\n"" )"	161:28:3468:3526	1032739	0	True				
ANR	1033477	CallExpression	"av_log ( c -> avctx , AV_LOG_ERROR , ""Run went out of bounds\\n"" )"		1032739	0					
ANR	1033478	Callee	av_log		1032739	0					
ANR	1033479	Identifier	av_log		1032739	0					
ANR	1033480	ArgumentList	c -> avctx		1032739	1					
ANR	1033481	Argument	c -> avctx		1032739	0					
ANR	1033482	PtrMemberAccess	c -> avctx		1032739	0					
ANR	1033483	Identifier	c		1032739	0					
ANR	1033484	Identifier	avctx		1032739	1					
ANR	1033485	Argument	AV_LOG_ERROR		1032739	1					
ANR	1033486	Identifier	AV_LOG_ERROR		1032739	0					
ANR	1033487	Argument	"""Run went out of bounds\\n"""		1032739	2					
ANR	1033488	PrimaryExpression	"""Run went out of bounds\\n"""		1032739	0					
ANR	1033489	ReturnStatement	return AVERROR_INVALIDDATA ;	163:28:3557:3583	1032739	1	True				
ANR	1033490	Identifier	AVERROR_INVALIDDATA		1032739	0					
ANR	1033491	IfStatement	if ( get_bits1 ( gb ) )		1032739	3					
ANR	1033492	Condition	get_bits1 ( gb )	167:28:3641:3653	1032739	0	True				
ANR	1033493	CallExpression	get_bits1 ( gb )		1032739	0					
ANR	1033494	Callee	get_bits1		1032739	0					
ANR	1033495	Identifier	get_bits1		1032739	0					
ANR	1033496	ArgumentList	gb		1032739	1					
ANR	1033497	Argument	gb		1032739	0					
ANR	1033498	Identifier	gb		1032739	0					
ANR	1033499	CompoundStatement		163:43:3514:3514	1032739	1					
ANR	1033500	ExpressionStatement	"v = get_value ( c , BINK_SRC_COLORS )"	169:28:3687:3720	1032739	0	True				
ANR	1033501	AssignmentExpression	"v = get_value ( c , BINK_SRC_COLORS )"		1032739	0		=			
ANR	1033502	Identifier	v		1032739	0					
ANR	1033503	CallExpression	"get_value ( c , BINK_SRC_COLORS )"		1032739	1					
ANR	1033504	Callee	get_value		1032739	0					
ANR	1033505	Identifier	get_value		1032739	0					
ANR	1033506	ArgumentList	c		1032739	1					
ANR	1033507	Argument	c		1032739	0					
ANR	1033508	Identifier	c		1032739	0					
ANR	1033509	Argument	BINK_SRC_COLORS		1032739	1					
ANR	1033510	Identifier	BINK_SRC_COLORS		1032739	0					
ANR	1033511	ForStatement	for ( j = 0 ; j < run ; j ++ )		1032739	1					
ANR	1033512	ForInit	j = 0 ;	171:33:3756:3761	1032739	0	True				
ANR	1033513	AssignmentExpression	j = 0		1032739	0		=			
ANR	1033514	Identifier	j		1032739	0					
ANR	1033515	PrimaryExpression	0		1032739	1					
ANR	1033516	Condition	j < run	171:40:3763:3769	1032739	1	True				
ANR	1033517	RelationalExpression	j < run		1032739	0		<			
ANR	1033518	Identifier	j		1032739	0					
ANR	1033519	Identifier	run		1032739	1					
ANR	1033520	PostIncDecOperationExpression	j ++	171:49:3772:3774	1032739	2	True				
ANR	1033521	Identifier	j		1032739	0					
ANR	1033522	IncDec	++		1032739	1					
ANR	1033523	ExpressionStatement	ublock [ * scan ++ ] = v	173:32:3810:3829	1032739	3	True				
ANR	1033524	AssignmentExpression	ublock [ * scan ++ ] = v		1032739	0		=			
ANR	1033525	ArrayIndexing	ublock [ * scan ++ ]		1032739	0					
ANR	1033526	Identifier	ublock		1032739	0					
ANR	1033527	UnaryOperationExpression	* scan ++		1032739	1					
ANR	1033528	UnaryOperator	*		1032739	0					
ANR	1033529	PostIncDecOperationExpression	scan ++		1032739	1					
ANR	1033530	Identifier	scan		1032739	0					
ANR	1033531	IncDec	++		1032739	1					
ANR	1033532	Identifier	v		1032739	1					
ANR	1033533	ElseStatement	else		1032739	0					
ANR	1033534	CompoundStatement		171:31:3721:3721	1032739	0					
ANR	1033535	ForStatement	for ( j = 0 ; j < run ; j ++ )		1032739	0					
ANR	1033536	ForInit	j = 0 ;	177:33:3899:3904	1032739	0	True				
ANR	1033537	AssignmentExpression	j = 0		1032739	0		=			
ANR	1033538	Identifier	j		1032739	0					
ANR	1033539	PrimaryExpression	0		1032739	1					
ANR	1033540	Condition	j < run	177:40:3906:3912	1032739	1	True				
ANR	1033541	RelationalExpression	j < run		1032739	0		<			
ANR	1033542	Identifier	j		1032739	0					
ANR	1033543	Identifier	run		1032739	1					
ANR	1033544	PostIncDecOperationExpression	j ++	177:49:3915:3917	1032739	2	True				
ANR	1033545	Identifier	j		1032739	0					
ANR	1033546	IncDec	++		1032739	1					
ANR	1033547	ExpressionStatement	"ublock [ * scan ++ ] = get_value ( c , BINK_SRC_COLORS )"	179:32:3953:4000	1032739	3	True				
ANR	1033548	AssignmentExpression	"ublock [ * scan ++ ] = get_value ( c , BINK_SRC_COLORS )"		1032739	0		=			
ANR	1033549	ArrayIndexing	ublock [ * scan ++ ]		1032739	0					
ANR	1033550	Identifier	ublock		1032739	0					
ANR	1033551	UnaryOperationExpression	* scan ++		1032739	1					
ANR	1033552	UnaryOperator	*		1032739	0					
ANR	1033553	PostIncDecOperationExpression	scan ++		1032739	1					
ANR	1033554	Identifier	scan		1032739	0					
ANR	1033555	IncDec	++		1032739	1					
ANR	1033556	CallExpression	"get_value ( c , BINK_SRC_COLORS )"		1032739	1					
ANR	1033557	Callee	get_value		1032739	0					
ANR	1033558	Identifier	get_value		1032739	0					
ANR	1033559	ArgumentList	c		1032739	1					
ANR	1033560	Argument	c		1032739	0					
ANR	1033561	Identifier	c		1032739	0					
ANR	1033562	Argument	BINK_SRC_COLORS		1032739	1					
ANR	1033563	Identifier	BINK_SRC_COLORS		1032739	0					
ANR	1033564	Condition	i < 63	183:29:4059:4064	1032739	1	True				
ANR	1033565	RelationalExpression	i < 63		1032739	0		<			
ANR	1033566	Identifier	i		1032739	0					
ANR	1033567	PrimaryExpression	63		1032739	1					
ANR	1033568	IfStatement	if ( i == 63 )		1032739	4					
ANR	1033569	Condition	i == 63	185:24:4093:4099	1032739	0	True				
ANR	1033570	EqualityExpression	i == 63		1032739	0		==			
ANR	1033571	Identifier	i		1032739	0					
ANR	1033572	PrimaryExpression	63		1032739	1					
ANR	1033573	ExpressionStatement	"ublock [ * scan ++ ] = get_value ( c , BINK_SRC_COLORS )"	187:24:4127:4174	1032739	1	True				
ANR	1033574	AssignmentExpression	"ublock [ * scan ++ ] = get_value ( c , BINK_SRC_COLORS )"		1032739	0		=			
ANR	1033575	ArrayIndexing	ublock [ * scan ++ ]		1032739	0					
ANR	1033576	Identifier	ublock		1032739	0					
ANR	1033577	UnaryOperationExpression	* scan ++		1032739	1					
ANR	1033578	UnaryOperator	*		1032739	0					
ANR	1033579	PostIncDecOperationExpression	scan ++		1032739	1					
ANR	1033580	Identifier	scan		1032739	0					
ANR	1033581	IncDec	++		1032739	1					
ANR	1033582	CallExpression	"get_value ( c , BINK_SRC_COLORS )"		1032739	1					
ANR	1033583	Callee	get_value		1032739	0					
ANR	1033584	Identifier	get_value		1032739	0					
ANR	1033585	ArgumentList	c		1032739	1					
ANR	1033586	Argument	c		1032739	0					
ANR	1033587	Identifier	c		1032739	0					
ANR	1033588	Argument	BINK_SRC_COLORS		1032739	1					
ANR	1033589	Identifier	BINK_SRC_COLORS		1032739	0					
ANR	1033590	BreakStatement	break ;	189:20:4197:4202	1032739	5	True				
ANR	1033591	Label	case INTRA_BLOCK :	191:16:4221:4237	1032739	6	True				
ANR	1033592	Identifier	INTRA_BLOCK		1032739	0					
ANR	1033593	ExpressionStatement	"memset ( dctblock , 0 , sizeof ( * dctblock ) * 64 )"	193:20:4260:4303	1032739	7	True				
ANR	1033594	CallExpression	"memset ( dctblock , 0 , sizeof ( * dctblock ) * 64 )"		1032739	0					
ANR	1033595	Callee	memset		1032739	0					
ANR	1033596	Identifier	memset		1032739	0					
ANR	1033597	ArgumentList	dctblock		1032739	1					
ANR	1033598	Argument	dctblock		1032739	0					
ANR	1033599	Identifier	dctblock		1032739	0					
ANR	1033600	Argument	0		1032739	1					
ANR	1033601	PrimaryExpression	0		1032739	0					
ANR	1033602	Argument	sizeof ( * dctblock ) * 64		1032739	2					
ANR	1033603	MultiplicativeExpression	sizeof ( * dctblock ) * 64		1032739	0		*			
ANR	1033604	SizeofExpression	sizeof ( * dctblock )		1032739	0					
ANR	1033605	Sizeof	sizeof		1032739	0					
ANR	1033606	UnaryOperationExpression	* dctblock		1032739	1					
ANR	1033607	UnaryOperator	*		1032739	0					
ANR	1033608	Identifier	dctblock		1032739	1					
ANR	1033609	PrimaryExpression	64		1032739	1					
ANR	1033610	ExpressionStatement	"dctblock [ 0 ] = get_value ( c , BINK_SRC_INTRA_DC )"	195:20:4326:4371	1032739	8	True				
ANR	1033611	AssignmentExpression	"dctblock [ 0 ] = get_value ( c , BINK_SRC_INTRA_DC )"		1032739	0		=			
ANR	1033612	ArrayIndexing	dctblock [ 0 ]		1032739	0					
ANR	1033613	Identifier	dctblock		1032739	0					
ANR	1033614	PrimaryExpression	0		1032739	1					
ANR	1033615	CallExpression	"get_value ( c , BINK_SRC_INTRA_DC )"		1032739	1					
ANR	1033616	Callee	get_value		1032739	0					
ANR	1033617	Identifier	get_value		1032739	0					
ANR	1033618	ArgumentList	c		1032739	1					
ANR	1033619	Argument	c		1032739	0					
ANR	1033620	Identifier	c		1032739	0					
ANR	1033621	Argument	BINK_SRC_INTRA_DC		1032739	1					
ANR	1033622	Identifier	BINK_SRC_INTRA_DC		1032739	0					
ANR	1033623	ExpressionStatement	"read_dct_coeffs ( gb , dctblock , bink_scan , bink_intra_quant , - 1 )"	197:20:4394:4456	1032739	9	True				
ANR	1033624	CallExpression	"read_dct_coeffs ( gb , dctblock , bink_scan , bink_intra_quant , - 1 )"		1032739	0					
ANR	1033625	Callee	read_dct_coeffs		1032739	0					
ANR	1033626	Identifier	read_dct_coeffs		1032739	0					
ANR	1033627	ArgumentList	gb		1032739	1					
ANR	1033628	Argument	gb		1032739	0					
ANR	1033629	Identifier	gb		1032739	0					
ANR	1033630	Argument	dctblock		1032739	1					
ANR	1033631	Identifier	dctblock		1032739	0					
ANR	1033632	Argument	bink_scan		1032739	2					
ANR	1033633	Identifier	bink_scan		1032739	0					
ANR	1033634	Argument	bink_intra_quant		1032739	3					
ANR	1033635	Identifier	bink_intra_quant		1032739	0					
ANR	1033636	Argument	- 1		1032739	4					
ANR	1033637	UnaryOperationExpression	- 1		1032739	0					
ANR	1033638	UnaryOperator	-		1032739	0					
ANR	1033639	PrimaryExpression	1		1032739	1					
ANR	1033640	ExpressionStatement	"c -> binkdsp . idct_put ( ublock , 8 , dctblock )"	199:20:4479:4519	1032739	10	True				
ANR	1033641	CallExpression	"c -> binkdsp . idct_put ( ublock , 8 , dctblock )"		1032739	0					
ANR	1033642	Callee	c -> binkdsp . idct_put		1032739	0					
ANR	1033643	MemberAccess	c -> binkdsp . idct_put		1032739	0					
ANR	1033644	PtrMemberAccess	c -> binkdsp		1032739	0					
ANR	1033645	Identifier	c		1032739	0					
ANR	1033646	Identifier	binkdsp		1032739	1					
ANR	1033647	Identifier	idct_put		1032739	1					
ANR	1033648	ArgumentList	ublock		1032739	1					
ANR	1033649	Argument	ublock		1032739	0					
ANR	1033650	Identifier	ublock		1032739	0					
ANR	1033651	Argument	8		1032739	1					
ANR	1033652	PrimaryExpression	8		1032739	0					
ANR	1033653	Argument	dctblock		1032739	2					
ANR	1033654	Identifier	dctblock		1032739	0					
ANR	1033655	BreakStatement	break ;	201:20:4542:4547	1032739	11	True				
ANR	1033656	Label	case FILL_BLOCK :	203:16:4566:4581	1032739	12	True				
ANR	1033657	Identifier	FILL_BLOCK		1032739	0					
ANR	1033658	ExpressionStatement	"v = get_value ( c , BINK_SRC_COLORS )"	205:20:4604:4637	1032739	13	True				
ANR	1033659	AssignmentExpression	"v = get_value ( c , BINK_SRC_COLORS )"		1032739	0		=			
ANR	1033660	Identifier	v		1032739	0					
ANR	1033661	CallExpression	"get_value ( c , BINK_SRC_COLORS )"		1032739	1					
ANR	1033662	Callee	get_value		1032739	0					
ANR	1033663	Identifier	get_value		1032739	0					
ANR	1033664	ArgumentList	c		1032739	1					
ANR	1033665	Argument	c		1032739	0					
ANR	1033666	Identifier	c		1032739	0					
ANR	1033667	Argument	BINK_SRC_COLORS		1032739	1					
ANR	1033668	Identifier	BINK_SRC_COLORS		1032739	0					
ANR	1033669	ExpressionStatement	"c -> bdsp . fill_block_tab [ 0 ] ( dst , v , stride , 16 )"	207:20:4660:4705	1032739	14	True				
ANR	1033670	CallExpression	"c -> bdsp . fill_block_tab [ 0 ] ( dst , v , stride , 16 )"		1032739	0					
ANR	1033671	Callee	c -> bdsp . fill_block_tab [ 0 ]		1032739	0					
ANR	1033672	ArrayIndexing	c -> bdsp . fill_block_tab [ 0 ]		1032739	0					
ANR	1033673	MemberAccess	c -> bdsp . fill_block_tab		1032739	0					
ANR	1033674	PtrMemberAccess	c -> bdsp		1032739	0					
ANR	1033675	Identifier	c		1032739	0					
ANR	1033676	Identifier	bdsp		1032739	1					
ANR	1033677	Identifier	fill_block_tab		1032739	1					
ANR	1033678	PrimaryExpression	0		1032739	1					
ANR	1033679	ArgumentList	dst		1032739	1					
ANR	1033680	Argument	dst		1032739	0					
ANR	1033681	Identifier	dst		1032739	0					
ANR	1033682	Argument	v		1032739	1					
ANR	1033683	Identifier	v		1032739	0					
ANR	1033684	Argument	stride		1032739	2					
ANR	1033685	Identifier	stride		1032739	0					
ANR	1033686	Argument	16		1032739	3					
ANR	1033687	PrimaryExpression	16		1032739	0					
ANR	1033688	BreakStatement	break ;	209:20:4728:4733	1032739	15	True				
ANR	1033689	Label	case PATTERN_BLOCK :	211:16:4752:4770	1032739	16	True				
ANR	1033690	Identifier	PATTERN_BLOCK		1032739	0					
ANR	1033691	ForStatement	for ( i = 0 ; i < 2 ; i ++ )		1032739	17					
ANR	1033692	ForInit	i = 0 ;	213:25:4798:4803	1032739	0	True				
ANR	1033693	AssignmentExpression	i = 0		1032739	0		=			
ANR	1033694	Identifier	i		1032739	0					
ANR	1033695	PrimaryExpression	0		1032739	1					
ANR	1033696	Condition	i < 2	213:32:4805:4809	1032739	1	True				
ANR	1033697	RelationalExpression	i < 2		1032739	0		<			
ANR	1033698	Identifier	i		1032739	0					
ANR	1033699	PrimaryExpression	2		1032739	1					
ANR	1033700	PostIncDecOperationExpression	i ++	213:39:4812:4814	1032739	2	True				
ANR	1033701	Identifier	i		1032739	0					
ANR	1033702	IncDec	++		1032739	1					
ANR	1033703	ExpressionStatement	"col [ i ] = get_value ( c , BINK_SRC_COLORS )"	215:24:4842:4880	1032739	3	True				
ANR	1033704	AssignmentExpression	"col [ i ] = get_value ( c , BINK_SRC_COLORS )"		1032739	0		=			
ANR	1033705	ArrayIndexing	col [ i ]		1032739	0					
ANR	1033706	Identifier	col		1032739	0					
ANR	1033707	Identifier	i		1032739	1					
ANR	1033708	CallExpression	"get_value ( c , BINK_SRC_COLORS )"		1032739	1					
ANR	1033709	Callee	get_value		1032739	0					
ANR	1033710	Identifier	get_value		1032739	0					
ANR	1033711	ArgumentList	c		1032739	1					
ANR	1033712	Argument	c		1032739	0					
ANR	1033713	Identifier	c		1032739	0					
ANR	1033714	Argument	BINK_SRC_COLORS		1032739	1					
ANR	1033715	Identifier	BINK_SRC_COLORS		1032739	0					
ANR	1033716	ForStatement	for ( j = 0 ; j < 8 ; j ++ )		1032739	18					
ANR	1033717	ForInit	j = 0 ;	217:25:4908:4913	1032739	0	True				
ANR	1033718	AssignmentExpression	j = 0		1032739	0		=			
ANR	1033719	Identifier	j		1032739	0					
ANR	1033720	PrimaryExpression	0		1032739	1					
ANR	1033721	Condition	j < 8	217:32:4915:4919	1032739	1	True				
ANR	1033722	RelationalExpression	j < 8		1032739	0		<			
ANR	1033723	Identifier	j		1032739	0					
ANR	1033724	PrimaryExpression	8		1032739	1					
ANR	1033725	PostIncDecOperationExpression	j ++	217:39:4922:4924	1032739	2	True				
ANR	1033726	Identifier	j		1032739	0					
ANR	1033727	IncDec	++		1032739	1					
ANR	1033728	CompoundStatement		213:44:4785:4785	1032739	3					
ANR	1033729	ExpressionStatement	"v = get_value ( c , BINK_SRC_PATTERN )"	219:24:4954:4988	1032739	0	True				
ANR	1033730	AssignmentExpression	"v = get_value ( c , BINK_SRC_PATTERN )"		1032739	0		=			
ANR	1033731	Identifier	v		1032739	0					
ANR	1033732	CallExpression	"get_value ( c , BINK_SRC_PATTERN )"		1032739	1					
ANR	1033733	Callee	get_value		1032739	0					
ANR	1033734	Identifier	get_value		1032739	0					
ANR	1033735	ArgumentList	c		1032739	1					
ANR	1033736	Argument	c		1032739	0					
ANR	1033737	Identifier	c		1032739	0					
ANR	1033738	Argument	BINK_SRC_PATTERN		1032739	1					
ANR	1033739	Identifier	BINK_SRC_PATTERN		1032739	0					
ANR	1033740	ForStatement	"for ( i = 0 ; i < 8 ; i ++ , v >>= 1 )"		1032739	1					
ANR	1033741	ForInit	i = 0 ;	221:29:5020:5025	1032739	0	True				
ANR	1033742	AssignmentExpression	i = 0		1032739	0		=			
ANR	1033743	Identifier	i		1032739	0					
ANR	1033744	PrimaryExpression	0		1032739	1					
ANR	1033745	Condition	i < 8	221:36:5027:5031	1032739	1	True				
ANR	1033746	RelationalExpression	i < 8		1032739	0		<			
ANR	1033747	Identifier	i		1032739	0					
ANR	1033748	PrimaryExpression	8		1032739	1					
ANR	1033749	Expression	"i ++ , v >>= 1"	221:43:5034:5045	1032739	2	True				
ANR	1033750	PostIncDecOperationExpression	i ++		1032739	0					
ANR	1033751	Identifier	i		1032739	0					
ANR	1033752	IncDec	++		1032739	1					
ANR	1033753	AssignmentExpression	v >>= 1		1032739	1		>>=			
ANR	1033754	Identifier	v		1032739	0					
ANR	1033755	PrimaryExpression	1		1032739	1					
ANR	1033756	ExpressionStatement	ublock [ i + j * 8 ] = col [ v & 1 ]	223:28:5077:5105	1032739	3	True				
ANR	1033757	AssignmentExpression	ublock [ i + j * 8 ] = col [ v & 1 ]		1032739	0		=			
ANR	1033758	ArrayIndexing	ublock [ i + j * 8 ]		1032739	0					
ANR	1033759	Identifier	ublock		1032739	0					
ANR	1033760	AdditiveExpression	i + j * 8		1032739	1		+			
ANR	1033761	Identifier	i		1032739	0					
ANR	1033762	MultiplicativeExpression	j * 8		1032739	1		*			
ANR	1033763	Identifier	j		1032739	0					
ANR	1033764	PrimaryExpression	8		1032739	1					
ANR	1033765	ArrayIndexing	col [ v & 1 ]		1032739	1					
ANR	1033766	Identifier	col		1032739	0					
ANR	1033767	BitAndExpression	v & 1		1032739	1		&			
ANR	1033768	Identifier	v		1032739	0					
ANR	1033769	PrimaryExpression	1		1032739	1					
ANR	1033770	BreakStatement	break ;	227:20:5151:5156	1032739	19	True				
ANR	1033771	Label	case RAW_BLOCK :	229:16:5175:5189	1032739	20	True				
ANR	1033772	Identifier	RAW_BLOCK		1032739	0					
ANR	1033773	ForStatement	for ( j = 0 ; j < 8 ; j ++ )		1032739	21					
ANR	1033774	ForInit	j = 0 ;	231:25:5217:5222	1032739	0	True				
ANR	1033775	AssignmentExpression	j = 0		1032739	0		=			
ANR	1033776	Identifier	j		1032739	0					
ANR	1033777	PrimaryExpression	0		1032739	1					
ANR	1033778	Condition	j < 8	231:32:5224:5228	1032739	1	True				
ANR	1033779	RelationalExpression	j < 8		1032739	0		<			
ANR	1033780	Identifier	j		1032739	0					
ANR	1033781	PrimaryExpression	8		1032739	1					
ANR	1033782	PostIncDecOperationExpression	j ++	231:39:5231:5233	1032739	2	True				
ANR	1033783	Identifier	j		1032739	0					
ANR	1033784	IncDec	++		1032739	1					
ANR	1033785	ForStatement	for ( i = 0 ; i < 8 ; i ++ )		1032739	3					
ANR	1033786	ForInit	i = 0 ;	233:29:5266:5271	1032739	0	True				
ANR	1033787	AssignmentExpression	i = 0		1032739	0		=			
ANR	1033788	Identifier	i		1032739	0					
ANR	1033789	PrimaryExpression	0		1032739	1					
ANR	1033790	Condition	i < 8	233:36:5273:5277	1032739	1	True				
ANR	1033791	RelationalExpression	i < 8		1032739	0		<			
ANR	1033792	Identifier	i		1032739	0					
ANR	1033793	PrimaryExpression	8		1032739	1					
ANR	1033794	PostIncDecOperationExpression	i ++	233:43:5280:5282	1032739	2	True				
ANR	1033795	Identifier	i		1032739	0					
ANR	1033796	IncDec	++		1032739	1					
ANR	1033797	ExpressionStatement	"ublock [ i + j * 8 ] = get_value ( c , BINK_SRC_COLORS )"	235:28:5314:5361	1032739	3	True				
ANR	1033798	AssignmentExpression	"ublock [ i + j * 8 ] = get_value ( c , BINK_SRC_COLORS )"		1032739	0		=			
ANR	1033799	ArrayIndexing	ublock [ i + j * 8 ]		1032739	0					
ANR	1033800	Identifier	ublock		1032739	0					
ANR	1033801	AdditiveExpression	i + j * 8		1032739	1		+			
ANR	1033802	Identifier	i		1032739	0					
ANR	1033803	MultiplicativeExpression	j * 8		1032739	1		*			
ANR	1033804	Identifier	j		1032739	0					
ANR	1033805	PrimaryExpression	8		1032739	1					
ANR	1033806	CallExpression	"get_value ( c , BINK_SRC_COLORS )"		1032739	1					
ANR	1033807	Callee	get_value		1032739	0					
ANR	1033808	Identifier	get_value		1032739	0					
ANR	1033809	ArgumentList	c		1032739	1					
ANR	1033810	Argument	c		1032739	0					
ANR	1033811	Identifier	c		1032739	0					
ANR	1033812	Argument	BINK_SRC_COLORS		1032739	1					
ANR	1033813	Identifier	BINK_SRC_COLORS		1032739	0					
ANR	1033814	BreakStatement	break ;	237:20:5384:5389	1032739	22	True				
ANR	1033815	Label	default :	239:16:5408:5415	1032739	23	True				
ANR	1033816	Identifier	default		1032739	0					
ANR	1033817	ExpressionStatement	"av_log ( c -> avctx , AV_LOG_ERROR , ""Incorrect 16x16 block type %d\\n"" , blk )"	241:20:5438:5508	1032739	24	True				
ANR	1033818	CallExpression	"av_log ( c -> avctx , AV_LOG_ERROR , ""Incorrect 16x16 block type %d\\n"" , blk )"		1032739	0					
ANR	1033819	Callee	av_log		1032739	0					
ANR	1033820	Identifier	av_log		1032739	0					
ANR	1033821	ArgumentList	c -> avctx		1032739	1					
ANR	1033822	Argument	c -> avctx		1032739	0					
ANR	1033823	PtrMemberAccess	c -> avctx		1032739	0					
ANR	1033824	Identifier	c		1032739	0					
ANR	1033825	Identifier	avctx		1032739	1					
ANR	1033826	Argument	AV_LOG_ERROR		1032739	1					
ANR	1033827	Identifier	AV_LOG_ERROR		1032739	0					
ANR	1033828	Argument	"""Incorrect 16x16 block type %d\\n"""		1032739	2					
ANR	1033829	PrimaryExpression	"""Incorrect 16x16 block type %d\\n"""		1032739	0					
ANR	1033830	Argument	blk		1032739	3					
ANR	1033831	Identifier	blk		1032739	0					
ANR	1033832	ReturnStatement	return AVERROR_INVALIDDATA ;	243:20:5531:5557	1032739	25	True				
ANR	1033833	Identifier	AVERROR_INVALIDDATA		1032739	0					
ANR	1033834	IfStatement	if ( blk != FILL_BLOCK )		1032739	6					
ANR	1033835	Condition	blk != FILL_BLOCK	247:20:5599:5615	1032739	0	True				
ANR	1033836	EqualityExpression	blk != FILL_BLOCK		1032739	0		!=			
ANR	1033837	Identifier	blk		1032739	0					
ANR	1033838	Identifier	FILL_BLOCK		1032739	1					
ANR	1033839	ExpressionStatement	"c -> binkdsp . scale_block ( ublock , dst , stride )"	249:16:5635:5678	1032739	1	True				
ANR	1033840	CallExpression	"c -> binkdsp . scale_block ( ublock , dst , stride )"		1032739	0					
ANR	1033841	Callee	c -> binkdsp . scale_block		1032739	0					
ANR	1033842	MemberAccess	c -> binkdsp . scale_block		1032739	0					
ANR	1033843	PtrMemberAccess	c -> binkdsp		1032739	0					
ANR	1033844	Identifier	c		1032739	0					
ANR	1033845	Identifier	binkdsp		1032739	1					
ANR	1033846	Identifier	scale_block		1032739	1					
ANR	1033847	ArgumentList	ublock		1032739	1					
ANR	1033848	Argument	ublock		1032739	0					
ANR	1033849	Identifier	ublock		1032739	0					
ANR	1033850	Argument	dst		1032739	1					
ANR	1033851	Identifier	dst		1032739	0					
ANR	1033852	Argument	stride		1032739	2					
ANR	1033853	Identifier	stride		1032739	0					
ANR	1033854	ExpressionStatement	bx ++	251:16:5697:5701	1032739	7	True				
ANR	1033855	PostIncDecOperationExpression	bx ++		1032739	0					
ANR	1033856	Identifier	bx		1032739	0					
ANR	1033857	IncDec	++		1032739	1					
ANR	1033858	ExpressionStatement	dst += 8	253:16:5720:5729	1032739	8	True				
ANR	1033859	AssignmentExpression	dst += 8		1032739	0		+=			
ANR	1033860	Identifier	dst		1032739	0					
ANR	1033861	PrimaryExpression	8		1032739	1					
ANR	1033862	ExpressionStatement	prev += 8	255:16:5748:5757	1032739	9	True				
ANR	1033863	AssignmentExpression	prev += 8		1032739	0		+=			
ANR	1033864	Identifier	prev		1032739	0					
ANR	1033865	PrimaryExpression	8		1032739	1					
ANR	1033866	BreakStatement	break ;	257:16:5776:5781	1032739	10	True				
ANR	1033867	Label	case MOTION_BLOCK :	259:12:5796:5813	1032739	11	True				
ANR	1033868	Identifier	MOTION_BLOCK		1032739	0					
ANR	1033869	ExpressionStatement	"xoff = get_value ( c , BINK_SRC_X_OFF )"	261:16:5832:5867	1032739	12	True				
ANR	1033870	AssignmentExpression	"xoff = get_value ( c , BINK_SRC_X_OFF )"		1032739	0		=			
ANR	1033871	Identifier	xoff		1032739	0					
ANR	1033872	CallExpression	"get_value ( c , BINK_SRC_X_OFF )"		1032739	1					
ANR	1033873	Callee	get_value		1032739	0					
ANR	1033874	Identifier	get_value		1032739	0					
ANR	1033875	ArgumentList	c		1032739	1					
ANR	1033876	Argument	c		1032739	0					
ANR	1033877	Identifier	c		1032739	0					
ANR	1033878	Argument	BINK_SRC_X_OFF		1032739	1					
ANR	1033879	Identifier	BINK_SRC_X_OFF		1032739	0					
ANR	1033880	ExpressionStatement	"yoff = get_value ( c , BINK_SRC_Y_OFF )"	263:16:5886:5921	1032739	13	True				
ANR	1033881	AssignmentExpression	"yoff = get_value ( c , BINK_SRC_Y_OFF )"		1032739	0		=			
ANR	1033882	Identifier	yoff		1032739	0					
ANR	1033883	CallExpression	"get_value ( c , BINK_SRC_Y_OFF )"		1032739	1					
ANR	1033884	Callee	get_value		1032739	0					
ANR	1033885	Identifier	get_value		1032739	0					
ANR	1033886	ArgumentList	c		1032739	1					
ANR	1033887	Argument	c		1032739	0					
ANR	1033888	Identifier	c		1032739	0					
ANR	1033889	Argument	BINK_SRC_Y_OFF		1032739	1					
ANR	1033890	Identifier	BINK_SRC_Y_OFF		1032739	0					
ANR	1033891	ExpressionStatement	ref = prev + xoff + yoff * stride	265:16:5940:5973	1032739	14	True				
ANR	1033892	AssignmentExpression	ref = prev + xoff + yoff * stride		1032739	0		=			
ANR	1033893	Identifier	ref		1032739	0					
ANR	1033894	AdditiveExpression	prev + xoff + yoff * stride		1032739	1		+			
ANR	1033895	Identifier	prev		1032739	0					
ANR	1033896	AdditiveExpression	xoff + yoff * stride		1032739	1		+			
ANR	1033897	Identifier	xoff		1032739	0					
ANR	1033898	MultiplicativeExpression	yoff * stride		1032739	1		*			
ANR	1033899	Identifier	yoff		1032739	0					
ANR	1033900	Identifier	stride		1032739	1					
ANR	1033901	IfStatement	if ( ref < ref_start || ref > ref_end )		1032739	15					
ANR	1033902	Condition	ref < ref_start || ref > ref_end	267:20:5996:6027	1032739	0	True				
ANR	1033903	OrExpression	ref < ref_start || ref > ref_end		1032739	0		||			
ANR	1033904	RelationalExpression	ref < ref_start		1032739	0		<			
ANR	1033905	Identifier	ref		1032739	0					
ANR	1033906	Identifier	ref_start		1032739	1					
ANR	1033907	RelationalExpression	ref > ref_end		1032739	1		>			
ANR	1033908	Identifier	ref		1032739	0					
ANR	1033909	Identifier	ref_end		1032739	1					
ANR	1033910	CompoundStatement		263:54:5888:5888	1032739	1					
ANR	1033911	ExpressionStatement	"av_log ( c -> avctx , AV_LOG_ERROR , ""Copy out of bounds @%d, %d\\n"" , bx * 8 + xoff , by * 8 + yoff )"	269:20:6053:6169	1032739	0	True				
ANR	1033912	CallExpression	"av_log ( c -> avctx , AV_LOG_ERROR , ""Copy out of bounds @%d, %d\\n"" , bx * 8 + xoff , by * 8 + yoff )"		1032739	0					
ANR	1033913	Callee	av_log		1032739	0					
ANR	1033914	Identifier	av_log		1032739	0					
ANR	1033915	ArgumentList	c -> avctx		1032739	1					
ANR	1033916	Argument	c -> avctx		1032739	0					
ANR	1033917	PtrMemberAccess	c -> avctx		1032739	0					
ANR	1033918	Identifier	c		1032739	0					
ANR	1033919	Identifier	avctx		1032739	1					
ANR	1033920	Argument	AV_LOG_ERROR		1032739	1					
ANR	1033921	Identifier	AV_LOG_ERROR		1032739	0					
ANR	1033922	Argument	"""Copy out of bounds @%d, %d\\n"""		1032739	2					
ANR	1033923	PrimaryExpression	"""Copy out of bounds @%d, %d\\n"""		1032739	0					
ANR	1033924	Argument	bx * 8 + xoff		1032739	3					
ANR	1033925	AdditiveExpression	bx * 8 + xoff		1032739	0		+			
ANR	1033926	MultiplicativeExpression	bx * 8		1032739	0		*			
ANR	1033927	Identifier	bx		1032739	0					
ANR	1033928	PrimaryExpression	8		1032739	1					
ANR	1033929	Identifier	xoff		1032739	1					
ANR	1033930	Argument	by * 8 + yoff		1032739	4					
ANR	1033931	AdditiveExpression	by * 8 + yoff		1032739	0		+			
ANR	1033932	MultiplicativeExpression	by * 8		1032739	0		*			
ANR	1033933	Identifier	by		1032739	0					
ANR	1033934	PrimaryExpression	8		1032739	1					
ANR	1033935	Identifier	yoff		1032739	1					
ANR	1033936	ReturnStatement	return AVERROR_INVALIDDATA ;	273:20:6192:6218	1032739	1	True				
ANR	1033937	Identifier	AVERROR_INVALIDDATA		1032739	0					
ANR	1033938	ExpressionStatement	"c -> hdsp . put_pixels_tab [ 1 ] [ 0 ] ( dst , ref , stride , 8 )"	277:16:6256:6305	1032739	16	True				
ANR	1033939	CallExpression	"c -> hdsp . put_pixels_tab [ 1 ] [ 0 ] ( dst , ref , stride , 8 )"		1032739	0					
ANR	1033940	Callee	c -> hdsp . put_pixels_tab [ 1 ] [ 0 ]		1032739	0					
ANR	1033941	ArrayIndexing	c -> hdsp . put_pixels_tab [ 1 ] [ 0 ]		1032739	0					
ANR	1033942	ArrayIndexing	c -> hdsp . put_pixels_tab [ 1 ]		1032739	0					
ANR	1033943	MemberAccess	c -> hdsp . put_pixels_tab		1032739	0					
ANR	1033944	PtrMemberAccess	c -> hdsp		1032739	0					
ANR	1033945	Identifier	c		1032739	0					
ANR	1033946	Identifier	hdsp		1032739	1					
ANR	1033947	Identifier	put_pixels_tab		1032739	1					
ANR	1033948	PrimaryExpression	1		1032739	1					
ANR	1033949	PrimaryExpression	0		1032739	1					
ANR	1033950	ArgumentList	dst		1032739	1					
ANR	1033951	Argument	dst		1032739	0					
ANR	1033952	Identifier	dst		1032739	0					
ANR	1033953	Argument	ref		1032739	1					
ANR	1033954	Identifier	ref		1032739	0					
ANR	1033955	Argument	stride		1032739	2					
ANR	1033956	Identifier	stride		1032739	0					
ANR	1033957	Argument	8		1032739	3					
ANR	1033958	PrimaryExpression	8		1032739	0					
ANR	1033959	BreakStatement	break ;	279:16:6324:6329	1032739	17	True				
ANR	1033960	Label	case RUN_BLOCK :	281:12:6344:6358	1032739	18	True				
ANR	1033961	Identifier	RUN_BLOCK		1032739	0					
ANR	1033962	ExpressionStatement	"scan = bink_patterns [ get_bits ( gb , 4 ) ]"	283:16:6377:6414	1032739	19	True				
ANR	1033963	AssignmentExpression	"scan = bink_patterns [ get_bits ( gb , 4 ) ]"		1032739	0		=			
ANR	1033964	Identifier	scan		1032739	0					
ANR	1033965	ArrayIndexing	"bink_patterns [ get_bits ( gb , 4 ) ]"		1032739	1					
ANR	1033966	Identifier	bink_patterns		1032739	0					
ANR	1033967	CallExpression	"get_bits ( gb , 4 )"		1032739	1					
ANR	1033968	Callee	get_bits		1032739	0					
ANR	1033969	Identifier	get_bits		1032739	0					
ANR	1033970	ArgumentList	gb		1032739	1					
ANR	1033971	Argument	gb		1032739	0					
ANR	1033972	Identifier	gb		1032739	0					
ANR	1033973	Argument	4		1032739	1					
ANR	1033974	PrimaryExpression	4		1032739	0					
ANR	1033975	ExpressionStatement	i = 0	285:16:6433:6438	1032739	20	True				
ANR	1033976	AssignmentExpression	i = 0		1032739	0		=			
ANR	1033977	Identifier	i		1032739	0					
ANR	1033978	PrimaryExpression	0		1032739	1					
ANR	1033979	DoStatement	do		1032739	21					
ANR	1033980	CompoundStatement		285:20:6341:6381	1032739	0					
ANR	1033981	IdentifierDeclStatement	"int run = get_value ( c , BINK_SRC_RUN ) + 1 ;"	289:20:6483:6523	1032739	0	True				
ANR	1033982	IdentifierDecl	"run = get_value ( c , BINK_SRC_RUN ) + 1"		1032739	0					
ANR	1033983	IdentifierDeclType	int		1032739	0					
ANR	1033984	Identifier	run		1032739	1					
ANR	1033985	AssignmentExpression	"run = get_value ( c , BINK_SRC_RUN ) + 1"		1032739	2		=			
ANR	1033986	Identifier	run		1032739	0					
ANR	1033987	AdditiveExpression	"get_value ( c , BINK_SRC_RUN ) + 1"		1032739	1		+			
ANR	1033988	CallExpression	"get_value ( c , BINK_SRC_RUN )"		1032739	0					
ANR	1033989	Callee	get_value		1032739	0					
ANR	1033990	Identifier	get_value		1032739	0					
ANR	1033991	ArgumentList	c		1032739	1					
ANR	1033992	Argument	c		1032739	0					
ANR	1033993	Identifier	c		1032739	0					
ANR	1033994	Argument	BINK_SRC_RUN		1032739	1					
ANR	1033995	Identifier	BINK_SRC_RUN		1032739	0					
ANR	1033996	PrimaryExpression	1		1032739	1					
ANR	1033997	ExpressionStatement	i += run	293:20:6548:6556	1032739	1	True				
ANR	1033998	AssignmentExpression	i += run		1032739	0		+=			
ANR	1033999	Identifier	i		1032739	0					
ANR	1034000	Identifier	run		1032739	1					
ANR	1034001	IfStatement	if ( i > 64 )		1032739	2					
ANR	1034002	Condition	i > 64	295:24:6583:6588	1032739	0	True				
ANR	1034003	RelationalExpression	i > 64		1032739	0		>			
ANR	1034004	Identifier	i		1032739	0					
ANR	1034005	PrimaryExpression	64		1032739	1					
ANR	1034006	CompoundStatement		291:32:6449:6449	1032739	1					
ANR	1034007	ExpressionStatement	"av_log ( c -> avctx , AV_LOG_ERROR , ""Run went out of bounds\\n"" )"	297:24:6618:6676	1032739	0	True				
ANR	1034008	CallExpression	"av_log ( c -> avctx , AV_LOG_ERROR , ""Run went out of bounds\\n"" )"		1032739	0					
ANR	1034009	Callee	av_log		1032739	0					
ANR	1034010	Identifier	av_log		1032739	0					
ANR	1034011	ArgumentList	c -> avctx		1032739	1					
ANR	1034012	Argument	c -> avctx		1032739	0					
ANR	1034013	PtrMemberAccess	c -> avctx		1032739	0					
ANR	1034014	Identifier	c		1032739	0					
ANR	1034015	Identifier	avctx		1032739	1					
ANR	1034016	Argument	AV_LOG_ERROR		1032739	1					
ANR	1034017	Identifier	AV_LOG_ERROR		1032739	0					
ANR	1034018	Argument	"""Run went out of bounds\\n"""		1032739	2					
ANR	1034019	PrimaryExpression	"""Run went out of bounds\\n"""		1032739	0					
ANR	1034020	ReturnStatement	return AVERROR_INVALIDDATA ;	299:24:6703:6729	1032739	1	True				
ANR	1034021	Identifier	AVERROR_INVALIDDATA		1032739	0					
ANR	1034022	IfStatement	if ( get_bits1 ( gb ) )		1032739	3					
ANR	1034023	Condition	get_bits1 ( gb )	303:24:6779:6791	1032739	0	True				
ANR	1034024	CallExpression	get_bits1 ( gb )		1032739	0					
ANR	1034025	Callee	get_bits1		1032739	0					
ANR	1034026	Identifier	get_bits1		1032739	0					
ANR	1034027	ArgumentList	gb		1032739	1					
ANR	1034028	Argument	gb		1032739	0					
ANR	1034029	Identifier	gb		1032739	0					
ANR	1034030	CompoundStatement		299:39:6652:6652	1032739	1					
ANR	1034031	ExpressionStatement	"v = get_value ( c , BINK_SRC_COLORS )"	305:24:6821:6854	1032739	0	True				
ANR	1034032	AssignmentExpression	"v = get_value ( c , BINK_SRC_COLORS )"		1032739	0		=			
ANR	1034033	Identifier	v		1032739	0					
ANR	1034034	CallExpression	"get_value ( c , BINK_SRC_COLORS )"		1032739	1					
ANR	1034035	Callee	get_value		1032739	0					
ANR	1034036	Identifier	get_value		1032739	0					
ANR	1034037	ArgumentList	c		1032739	1					
ANR	1034038	Argument	c		1032739	0					
ANR	1034039	Identifier	c		1032739	0					
ANR	1034040	Argument	BINK_SRC_COLORS		1032739	1					
ANR	1034041	Identifier	BINK_SRC_COLORS		1032739	0					
ANR	1034042	ForStatement	for ( j = 0 ; j < run ; j ++ )		1032739	1					
ANR	1034043	ForInit	j = 0 ;	307:29:6886:6891	1032739	0	True				
ANR	1034044	AssignmentExpression	j = 0		1032739	0		=			
ANR	1034045	Identifier	j		1032739	0					
ANR	1034046	PrimaryExpression	0		1032739	1					
ANR	1034047	Condition	j < run	307:36:6893:6899	1032739	1	True				
ANR	1034048	RelationalExpression	j < run		1032739	0		<			
ANR	1034049	Identifier	j		1032739	0					
ANR	1034050	Identifier	run		1032739	1					
ANR	1034051	PostIncDecOperationExpression	j ++	307:45:6902:6904	1032739	2	True				
ANR	1034052	Identifier	j		1032739	0					
ANR	1034053	IncDec	++		1032739	1					
ANR	1034054	ExpressionStatement	dst [ coordmap [ * scan ++ ] ] = v	309:28:6936:6962	1032739	3	True				
ANR	1034055	AssignmentExpression	dst [ coordmap [ * scan ++ ] ] = v		1032739	0		=			
ANR	1034056	ArrayIndexing	dst [ coordmap [ * scan ++ ] ]		1032739	0					
ANR	1034057	Identifier	dst		1032739	0					
ANR	1034058	ArrayIndexing	coordmap [ * scan ++ ]		1032739	1					
ANR	1034059	Identifier	coordmap		1032739	0					
ANR	1034060	UnaryOperationExpression	* scan ++		1032739	1					
ANR	1034061	UnaryOperator	*		1032739	0					
ANR	1034062	PostIncDecOperationExpression	scan ++		1032739	1					
ANR	1034063	Identifier	scan		1032739	0					
ANR	1034064	IncDec	++		1032739	1					
ANR	1034065	Identifier	v		1032739	1					
ANR	1034066	ElseStatement	else		1032739	0					
ANR	1034067	CompoundStatement		307:27:6850:6850	1032739	0					
ANR	1034068	ForStatement	for ( j = 0 ; j < run ; j ++ )		1032739	0					
ANR	1034069	ForInit	j = 0 ;	313:29:7024:7029	1032739	0	True				
ANR	1034070	AssignmentExpression	j = 0		1032739	0		=			
ANR	1034071	Identifier	j		1032739	0					
ANR	1034072	PrimaryExpression	0		1032739	1					
ANR	1034073	Condition	j < run	313:36:7031:7037	1032739	1	True				
ANR	1034074	RelationalExpression	j < run		1032739	0		<			
ANR	1034075	Identifier	j		1032739	0					
ANR	1034076	Identifier	run		1032739	1					
ANR	1034077	PostIncDecOperationExpression	j ++	313:45:7040:7042	1032739	2	True				
ANR	1034078	Identifier	j		1032739	0					
ANR	1034079	IncDec	++		1032739	1					
ANR	1034080	ExpressionStatement	"dst [ coordmap [ * scan ++ ] ] = get_value ( c , BINK_SRC_COLORS )"	315:28:7074:7128	1032739	3	True				
ANR	1034081	AssignmentExpression	"dst [ coordmap [ * scan ++ ] ] = get_value ( c , BINK_SRC_COLORS )"		1032739	0		=			
ANR	1034082	ArrayIndexing	dst [ coordmap [ * scan ++ ] ]		1032739	0					
ANR	1034083	Identifier	dst		1032739	0					
ANR	1034084	ArrayIndexing	coordmap [ * scan ++ ]		1032739	1					
ANR	1034085	Identifier	coordmap		1032739	0					
ANR	1034086	UnaryOperationExpression	* scan ++		1032739	1					
ANR	1034087	UnaryOperator	*		1032739	0					
ANR	1034088	PostIncDecOperationExpression	scan ++		1032739	1					
ANR	1034089	Identifier	scan		1032739	0					
ANR	1034090	IncDec	++		1032739	1					
ANR	1034091	CallExpression	"get_value ( c , BINK_SRC_COLORS )"		1032739	1					
ANR	1034092	Callee	get_value		1032739	0					
ANR	1034093	Identifier	get_value		1032739	0					
ANR	1034094	ArgumentList	c		1032739	1					
ANR	1034095	Argument	c		1032739	0					
ANR	1034096	Identifier	c		1032739	0					
ANR	1034097	Argument	BINK_SRC_COLORS		1032739	1					
ANR	1034098	Identifier	BINK_SRC_COLORS		1032739	0					
ANR	1034099	Condition	i < 63	319:25:7179:7184	1032739	1	True				
ANR	1034100	RelationalExpression	i < 63		1032739	0		<			
ANR	1034101	Identifier	i		1032739	0					
ANR	1034102	PrimaryExpression	63		1032739	1					
ANR	1034103	IfStatement	if ( i == 63 )		1032739	22					
ANR	1034104	Condition	i == 63	321:20:7209:7215	1032739	0	True				
ANR	1034105	EqualityExpression	i == 63		1032739	0		==			
ANR	1034106	Identifier	i		1032739	0					
ANR	1034107	PrimaryExpression	63		1032739	1					
ANR	1034108	ExpressionStatement	"dst [ coordmap [ * scan ++ ] ] = get_value ( c , BINK_SRC_COLORS )"	323:20:7239:7293	1032739	1	True				
ANR	1034109	AssignmentExpression	"dst [ coordmap [ * scan ++ ] ] = get_value ( c , BINK_SRC_COLORS )"		1032739	0		=			
ANR	1034110	ArrayIndexing	dst [ coordmap [ * scan ++ ] ]		1032739	0					
ANR	1034111	Identifier	dst		1032739	0					
ANR	1034112	ArrayIndexing	coordmap [ * scan ++ ]		1032739	1					
ANR	1034113	Identifier	coordmap		1032739	0					
ANR	1034114	UnaryOperationExpression	* scan ++		1032739	1					
ANR	1034115	UnaryOperator	*		1032739	0					
ANR	1034116	PostIncDecOperationExpression	scan ++		1032739	1					
ANR	1034117	Identifier	scan		1032739	0					
ANR	1034118	IncDec	++		1032739	1					
ANR	1034119	CallExpression	"get_value ( c , BINK_SRC_COLORS )"		1032739	1					
ANR	1034120	Callee	get_value		1032739	0					
ANR	1034121	Identifier	get_value		1032739	0					
ANR	1034122	ArgumentList	c		1032739	1					
ANR	1034123	Argument	c		1032739	0					
ANR	1034124	Identifier	c		1032739	0					
ANR	1034125	Argument	BINK_SRC_COLORS		1032739	1					
ANR	1034126	Identifier	BINK_SRC_COLORS		1032739	0					
ANR	1034127	BreakStatement	break ;	325:16:7312:7317	1032739	23	True				
ANR	1034128	Label	case RESIDUE_BLOCK :	327:12:7332:7350	1032739	24	True				
ANR	1034129	Identifier	RESIDUE_BLOCK		1032739	0					
ANR	1034130	ExpressionStatement	"xoff = get_value ( c , BINK_SRC_X_OFF )"	329:16:7369:7404	1032739	25	True				
ANR	1034131	AssignmentExpression	"xoff = get_value ( c , BINK_SRC_X_OFF )"		1032739	0		=			
ANR	1034132	Identifier	xoff		1032739	0					
ANR	1034133	CallExpression	"get_value ( c , BINK_SRC_X_OFF )"		1032739	1					
ANR	1034134	Callee	get_value		1032739	0					
ANR	1034135	Identifier	get_value		1032739	0					
ANR	1034136	ArgumentList	c		1032739	1					
ANR	1034137	Argument	c		1032739	0					
ANR	1034138	Identifier	c		1032739	0					
ANR	1034139	Argument	BINK_SRC_X_OFF		1032739	1					
ANR	1034140	Identifier	BINK_SRC_X_OFF		1032739	0					
ANR	1034141	ExpressionStatement	"yoff = get_value ( c , BINK_SRC_Y_OFF )"	331:16:7423:7458	1032739	26	True				
ANR	1034142	AssignmentExpression	"yoff = get_value ( c , BINK_SRC_Y_OFF )"		1032739	0		=			
ANR	1034143	Identifier	yoff		1032739	0					
ANR	1034144	CallExpression	"get_value ( c , BINK_SRC_Y_OFF )"		1032739	1					
ANR	1034145	Callee	get_value		1032739	0					
ANR	1034146	Identifier	get_value		1032739	0					
ANR	1034147	ArgumentList	c		1032739	1					
ANR	1034148	Argument	c		1032739	0					
ANR	1034149	Identifier	c		1032739	0					
ANR	1034150	Argument	BINK_SRC_Y_OFF		1032739	1					
ANR	1034151	Identifier	BINK_SRC_Y_OFF		1032739	0					
ANR	1034152	ExpressionStatement	ref = prev + xoff + yoff * stride	333:16:7477:7510	1032739	27	True				
ANR	1034153	AssignmentExpression	ref = prev + xoff + yoff * stride		1032739	0		=			
ANR	1034154	Identifier	ref		1032739	0					
ANR	1034155	AdditiveExpression	prev + xoff + yoff * stride		1032739	1		+			
ANR	1034156	Identifier	prev		1032739	0					
ANR	1034157	AdditiveExpression	xoff + yoff * stride		1032739	1		+			
ANR	1034158	Identifier	xoff		1032739	0					
ANR	1034159	MultiplicativeExpression	yoff * stride		1032739	1		*			
ANR	1034160	Identifier	yoff		1032739	0					
ANR	1034161	Identifier	stride		1032739	1					
ANR	1034162	IfStatement	if ( ref < ref_start || ref > ref_end )		1032739	28					
ANR	1034163	Condition	ref < ref_start || ref > ref_end	335:20:7533:7564	1032739	0	True				
ANR	1034164	OrExpression	ref < ref_start || ref > ref_end		1032739	0		||			
ANR	1034165	RelationalExpression	ref < ref_start		1032739	0		<			
ANR	1034166	Identifier	ref		1032739	0					
ANR	1034167	Identifier	ref_start		1032739	1					
ANR	1034168	RelationalExpression	ref > ref_end		1032739	1		>			
ANR	1034169	Identifier	ref		1032739	0					
ANR	1034170	Identifier	ref_end		1032739	1					
ANR	1034171	CompoundStatement		331:54:7425:7425	1032739	1					
ANR	1034172	ExpressionStatement	"av_log ( c -> avctx , AV_LOG_ERROR , ""Copy out of bounds @%d, %d\\n"" , bx * 8 + xoff , by * 8 + yoff )"	337:20:7590:7706	1032739	0	True				
ANR	1034173	CallExpression	"av_log ( c -> avctx , AV_LOG_ERROR , ""Copy out of bounds @%d, %d\\n"" , bx * 8 + xoff , by * 8 + yoff )"		1032739	0					
ANR	1034174	Callee	av_log		1032739	0					
ANR	1034175	Identifier	av_log		1032739	0					
ANR	1034176	ArgumentList	c -> avctx		1032739	1					
ANR	1034177	Argument	c -> avctx		1032739	0					
ANR	1034178	PtrMemberAccess	c -> avctx		1032739	0					
ANR	1034179	Identifier	c		1032739	0					
ANR	1034180	Identifier	avctx		1032739	1					
ANR	1034181	Argument	AV_LOG_ERROR		1032739	1					
ANR	1034182	Identifier	AV_LOG_ERROR		1032739	0					
ANR	1034183	Argument	"""Copy out of bounds @%d, %d\\n"""		1032739	2					
ANR	1034184	PrimaryExpression	"""Copy out of bounds @%d, %d\\n"""		1032739	0					
ANR	1034185	Argument	bx * 8 + xoff		1032739	3					
ANR	1034186	AdditiveExpression	bx * 8 + xoff		1032739	0		+			
ANR	1034187	MultiplicativeExpression	bx * 8		1032739	0		*			
ANR	1034188	Identifier	bx		1032739	0					
ANR	1034189	PrimaryExpression	8		1032739	1					
ANR	1034190	Identifier	xoff		1032739	1					
ANR	1034191	Argument	by * 8 + yoff		1032739	4					
ANR	1034192	AdditiveExpression	by * 8 + yoff		1032739	0		+			
ANR	1034193	MultiplicativeExpression	by * 8		1032739	0		*			
ANR	1034194	Identifier	by		1032739	0					
ANR	1034195	PrimaryExpression	8		1032739	1					
ANR	1034196	Identifier	yoff		1032739	1					
ANR	1034197	ReturnStatement	return AVERROR_INVALIDDATA ;	341:20:7729:7755	1032739	1	True				
ANR	1034198	Identifier	AVERROR_INVALIDDATA		1032739	0					
ANR	1034199	ExpressionStatement	"c -> hdsp . put_pixels_tab [ 1 ] [ 0 ] ( dst , ref , stride , 8 )"	345:16:7793:7842	1032739	29	True				
ANR	1034200	CallExpression	"c -> hdsp . put_pixels_tab [ 1 ] [ 0 ] ( dst , ref , stride , 8 )"		1032739	0					
ANR	1034201	Callee	c -> hdsp . put_pixels_tab [ 1 ] [ 0 ]		1032739	0					
ANR	1034202	ArrayIndexing	c -> hdsp . put_pixels_tab [ 1 ] [ 0 ]		1032739	0					
ANR	1034203	ArrayIndexing	c -> hdsp . put_pixels_tab [ 1 ]		1032739	0					
ANR	1034204	MemberAccess	c -> hdsp . put_pixels_tab		1032739	0					
ANR	1034205	PtrMemberAccess	c -> hdsp		1032739	0					
ANR	1034206	Identifier	c		1032739	0					
ANR	1034207	Identifier	hdsp		1032739	1					
ANR	1034208	Identifier	put_pixels_tab		1032739	1					
ANR	1034209	PrimaryExpression	1		1032739	1					
ANR	1034210	PrimaryExpression	0		1032739	1					
ANR	1034211	ArgumentList	dst		1032739	1					
ANR	1034212	Argument	dst		1032739	0					
ANR	1034213	Identifier	dst		1032739	0					
ANR	1034214	Argument	ref		1032739	1					
ANR	1034215	Identifier	ref		1032739	0					
ANR	1034216	Argument	stride		1032739	2					
ANR	1034217	Identifier	stride		1032739	0					
ANR	1034218	Argument	8		1032739	3					
ANR	1034219	PrimaryExpression	8		1032739	0					
ANR	1034220	ExpressionStatement	c -> bdsp . clear_block ( block )	347:16:7861:7887	1032739	30	True				
ANR	1034221	CallExpression	c -> bdsp . clear_block ( block )		1032739	0					
ANR	1034222	Callee	c -> bdsp . clear_block		1032739	0					
ANR	1034223	MemberAccess	c -> bdsp . clear_block		1032739	0					
ANR	1034224	PtrMemberAccess	c -> bdsp		1032739	0					
ANR	1034225	Identifier	c		1032739	0					
ANR	1034226	Identifier	bdsp		1032739	1					
ANR	1034227	Identifier	clear_block		1032739	1					
ANR	1034228	ArgumentList	block		1032739	1					
ANR	1034229	Argument	block		1032739	0					
ANR	1034230	Identifier	block		1032739	0					
ANR	1034231	ExpressionStatement	"v = get_bits ( gb , 7 )"	349:16:7906:7925	1032739	31	True				
ANR	1034232	AssignmentExpression	"v = get_bits ( gb , 7 )"		1032739	0		=			
ANR	1034233	Identifier	v		1032739	0					
ANR	1034234	CallExpression	"get_bits ( gb , 7 )"		1032739	1					
ANR	1034235	Callee	get_bits		1032739	0					
ANR	1034236	Identifier	get_bits		1032739	0					
ANR	1034237	ArgumentList	gb		1032739	1					
ANR	1034238	Argument	gb		1032739	0					
ANR	1034239	Identifier	gb		1032739	0					
ANR	1034240	Argument	7		1032739	1					
ANR	1034241	PrimaryExpression	7		1032739	0					
ANR	1034242	ExpressionStatement	"read_residue ( gb , block , v )"	351:16:7944:7970	1032739	32	True				
ANR	1034243	CallExpression	"read_residue ( gb , block , v )"		1032739	0					
ANR	1034244	Callee	read_residue		1032739	0					
ANR	1034245	Identifier	read_residue		1032739	0					
ANR	1034246	ArgumentList	gb		1032739	1					
ANR	1034247	Argument	gb		1032739	0					
ANR	1034248	Identifier	gb		1032739	0					
ANR	1034249	Argument	block		1032739	1					
ANR	1034250	Identifier	block		1032739	0					
ANR	1034251	Argument	v		1032739	2					
ANR	1034252	Identifier	v		1032739	0					
ANR	1034253	ExpressionStatement	"c -> binkdsp . add_pixels8 ( dst , block , stride )"	353:16:7989:8031	1032739	33	True				
ANR	1034254	CallExpression	"c -> binkdsp . add_pixels8 ( dst , block , stride )"		1032739	0					
ANR	1034255	Callee	c -> binkdsp . add_pixels8		1032739	0					
ANR	1034256	MemberAccess	c -> binkdsp . add_pixels8		1032739	0					
ANR	1034257	PtrMemberAccess	c -> binkdsp		1032739	0					
ANR	1034258	Identifier	c		1032739	0					
ANR	1034259	Identifier	binkdsp		1032739	1					
ANR	1034260	Identifier	add_pixels8		1032739	1					
ANR	1034261	ArgumentList	dst		1032739	1					
ANR	1034262	Argument	dst		1032739	0					
ANR	1034263	Identifier	dst		1032739	0					
ANR	1034264	Argument	block		1032739	1					
ANR	1034265	Identifier	block		1032739	0					
ANR	1034266	Argument	stride		1032739	2					
ANR	1034267	Identifier	stride		1032739	0					
ANR	1034268	BreakStatement	break ;	355:16:8050:8055	1032739	34	True				
ANR	1034269	Label	case INTRA_BLOCK :	357:12:8070:8086	1032739	35	True				
ANR	1034270	Identifier	INTRA_BLOCK		1032739	0					
ANR	1034271	ExpressionStatement	"memset ( dctblock , 0 , sizeof ( * dctblock ) * 64 )"	359:16:8105:8148	1032739	36	True				
ANR	1034272	CallExpression	"memset ( dctblock , 0 , sizeof ( * dctblock ) * 64 )"		1032739	0					
ANR	1034273	Callee	memset		1032739	0					
ANR	1034274	Identifier	memset		1032739	0					
ANR	1034275	ArgumentList	dctblock		1032739	1					
ANR	1034276	Argument	dctblock		1032739	0					
ANR	1034277	Identifier	dctblock		1032739	0					
ANR	1034278	Argument	0		1032739	1					
ANR	1034279	PrimaryExpression	0		1032739	0					
ANR	1034280	Argument	sizeof ( * dctblock ) * 64		1032739	2					
ANR	1034281	MultiplicativeExpression	sizeof ( * dctblock ) * 64		1032739	0		*			
ANR	1034282	SizeofExpression	sizeof ( * dctblock )		1032739	0					
ANR	1034283	Sizeof	sizeof		1032739	0					
ANR	1034284	UnaryOperationExpression	* dctblock		1032739	1					
ANR	1034285	UnaryOperator	*		1032739	0					
ANR	1034286	Identifier	dctblock		1032739	1					
ANR	1034287	PrimaryExpression	64		1032739	1					
ANR	1034288	ExpressionStatement	"dctblock [ 0 ] = get_value ( c , BINK_SRC_INTRA_DC )"	361:16:8167:8212	1032739	37	True				
ANR	1034289	AssignmentExpression	"dctblock [ 0 ] = get_value ( c , BINK_SRC_INTRA_DC )"		1032739	0		=			
ANR	1034290	ArrayIndexing	dctblock [ 0 ]		1032739	0					
ANR	1034291	Identifier	dctblock		1032739	0					
ANR	1034292	PrimaryExpression	0		1032739	1					
ANR	1034293	CallExpression	"get_value ( c , BINK_SRC_INTRA_DC )"		1032739	1					
ANR	1034294	Callee	get_value		1032739	0					
ANR	1034295	Identifier	get_value		1032739	0					
ANR	1034296	ArgumentList	c		1032739	1					
ANR	1034297	Argument	c		1032739	0					
ANR	1034298	Identifier	c		1032739	0					
ANR	1034299	Argument	BINK_SRC_INTRA_DC		1032739	1					
ANR	1034300	Identifier	BINK_SRC_INTRA_DC		1032739	0					
ANR	1034301	ExpressionStatement	"read_dct_coeffs ( gb , dctblock , bink_scan , bink_intra_quant , - 1 )"	363:16:8231:8293	1032739	38	True				
ANR	1034302	CallExpression	"read_dct_coeffs ( gb , dctblock , bink_scan , bink_intra_quant , - 1 )"		1032739	0					
ANR	1034303	Callee	read_dct_coeffs		1032739	0					
ANR	1034304	Identifier	read_dct_coeffs		1032739	0					
ANR	1034305	ArgumentList	gb		1032739	1					
ANR	1034306	Argument	gb		1032739	0					
ANR	1034307	Identifier	gb		1032739	0					
ANR	1034308	Argument	dctblock		1032739	1					
ANR	1034309	Identifier	dctblock		1032739	0					
ANR	1034310	Argument	bink_scan		1032739	2					
ANR	1034311	Identifier	bink_scan		1032739	0					
ANR	1034312	Argument	bink_intra_quant		1032739	3					
ANR	1034313	Identifier	bink_intra_quant		1032739	0					
ANR	1034314	Argument	- 1		1032739	4					
ANR	1034315	UnaryOperationExpression	- 1		1032739	0					
ANR	1034316	UnaryOperator	-		1032739	0					
ANR	1034317	PrimaryExpression	1		1032739	1					
ANR	1034318	ExpressionStatement	"c -> binkdsp . idct_put ( dst , stride , dctblock )"	365:16:8312:8354	1032739	39	True				
ANR	1034319	CallExpression	"c -> binkdsp . idct_put ( dst , stride , dctblock )"		1032739	0					
ANR	1034320	Callee	c -> binkdsp . idct_put		1032739	0					
ANR	1034321	MemberAccess	c -> binkdsp . idct_put		1032739	0					
ANR	1034322	PtrMemberAccess	c -> binkdsp		1032739	0					
ANR	1034323	Identifier	c		1032739	0					
ANR	1034324	Identifier	binkdsp		1032739	1					
ANR	1034325	Identifier	idct_put		1032739	1					
ANR	1034326	ArgumentList	dst		1032739	1					
ANR	1034327	Argument	dst		1032739	0					
ANR	1034328	Identifier	dst		1032739	0					
ANR	1034329	Argument	stride		1032739	1					
ANR	1034330	Identifier	stride		1032739	0					
ANR	1034331	Argument	dctblock		1032739	2					
ANR	1034332	Identifier	dctblock		1032739	0					
ANR	1034333	BreakStatement	break ;	367:16:8373:8378	1032739	40	True				
ANR	1034334	Label	case FILL_BLOCK :	369:12:8393:8408	1032739	41	True				
ANR	1034335	Identifier	FILL_BLOCK		1032739	0					
ANR	1034336	ExpressionStatement	"v = get_value ( c , BINK_SRC_COLORS )"	371:16:8427:8460	1032739	42	True				
ANR	1034337	AssignmentExpression	"v = get_value ( c , BINK_SRC_COLORS )"		1032739	0		=			
ANR	1034338	Identifier	v		1032739	0					
ANR	1034339	CallExpression	"get_value ( c , BINK_SRC_COLORS )"		1032739	1					
ANR	1034340	Callee	get_value		1032739	0					
ANR	1034341	Identifier	get_value		1032739	0					
ANR	1034342	ArgumentList	c		1032739	1					
ANR	1034343	Argument	c		1032739	0					
ANR	1034344	Identifier	c		1032739	0					
ANR	1034345	Argument	BINK_SRC_COLORS		1032739	1					
ANR	1034346	Identifier	BINK_SRC_COLORS		1032739	0					
ANR	1034347	ExpressionStatement	"c -> bdsp . fill_block_tab [ 1 ] ( dst , v , stride , 8 )"	373:16:8479:8523	1032739	43	True				
ANR	1034348	CallExpression	"c -> bdsp . fill_block_tab [ 1 ] ( dst , v , stride , 8 )"		1032739	0					
ANR	1034349	Callee	c -> bdsp . fill_block_tab [ 1 ]		1032739	0					
ANR	1034350	ArrayIndexing	c -> bdsp . fill_block_tab [ 1 ]		1032739	0					
ANR	1034351	MemberAccess	c -> bdsp . fill_block_tab		1032739	0					
ANR	1034352	PtrMemberAccess	c -> bdsp		1032739	0					
ANR	1034353	Identifier	c		1032739	0					
ANR	1034354	Identifier	bdsp		1032739	1					
ANR	1034355	Identifier	fill_block_tab		1032739	1					
ANR	1034356	PrimaryExpression	1		1032739	1					
ANR	1034357	ArgumentList	dst		1032739	1					
ANR	1034358	Argument	dst		1032739	0					
ANR	1034359	Identifier	dst		1032739	0					
ANR	1034360	Argument	v		1032739	1					
ANR	1034361	Identifier	v		1032739	0					
ANR	1034362	Argument	stride		1032739	2					
ANR	1034363	Identifier	stride		1032739	0					
ANR	1034364	Argument	8		1032739	3					
ANR	1034365	PrimaryExpression	8		1032739	0					
ANR	1034366	BreakStatement	break ;	375:16:8542:8547	1032739	44	True				
ANR	1034367	Label	case INTER_BLOCK :	377:12:8562:8578	1032739	45	True				
ANR	1034368	Identifier	INTER_BLOCK		1032739	0					
ANR	1034369	ExpressionStatement	"xoff = get_value ( c , BINK_SRC_X_OFF )"	379:16:8597:8632	1032739	46	True				
ANR	1034370	AssignmentExpression	"xoff = get_value ( c , BINK_SRC_X_OFF )"		1032739	0		=			
ANR	1034371	Identifier	xoff		1032739	0					
ANR	1034372	CallExpression	"get_value ( c , BINK_SRC_X_OFF )"		1032739	1					
ANR	1034373	Callee	get_value		1032739	0					
ANR	1034374	Identifier	get_value		1032739	0					
ANR	1034375	ArgumentList	c		1032739	1					
ANR	1034376	Argument	c		1032739	0					
ANR	1034377	Identifier	c		1032739	0					
ANR	1034378	Argument	BINK_SRC_X_OFF		1032739	1					
ANR	1034379	Identifier	BINK_SRC_X_OFF		1032739	0					
ANR	1034380	ExpressionStatement	"yoff = get_value ( c , BINK_SRC_Y_OFF )"	381:16:8651:8686	1032739	47	True				
ANR	1034381	AssignmentExpression	"yoff = get_value ( c , BINK_SRC_Y_OFF )"		1032739	0		=			
ANR	1034382	Identifier	yoff		1032739	0					
ANR	1034383	CallExpression	"get_value ( c , BINK_SRC_Y_OFF )"		1032739	1					
ANR	1034384	Callee	get_value		1032739	0					
ANR	1034385	Identifier	get_value		1032739	0					
ANR	1034386	ArgumentList	c		1032739	1					
ANR	1034387	Argument	c		1032739	0					
ANR	1034388	Identifier	c		1032739	0					
ANR	1034389	Argument	BINK_SRC_Y_OFF		1032739	1					
ANR	1034390	Identifier	BINK_SRC_Y_OFF		1032739	0					
ANR	1034391	ExpressionStatement	ref = prev + xoff + yoff * stride	383:16:8705:8738	1032739	48	True				
ANR	1034392	AssignmentExpression	ref = prev + xoff + yoff * stride		1032739	0		=			
ANR	1034393	Identifier	ref		1032739	0					
ANR	1034394	AdditiveExpression	prev + xoff + yoff * stride		1032739	1		+			
ANR	1034395	Identifier	prev		1032739	0					
ANR	1034396	AdditiveExpression	xoff + yoff * stride		1032739	1		+			
ANR	1034397	Identifier	xoff		1032739	0					
ANR	1034398	MultiplicativeExpression	yoff * stride		1032739	1		*			
ANR	1034399	Identifier	yoff		1032739	0					
ANR	1034400	Identifier	stride		1032739	1					
ANR	1034401	ExpressionStatement	"c -> hdsp . put_pixels_tab [ 1 ] [ 0 ] ( dst , ref , stride , 8 )"	385:16:8757:8806	1032739	49	True				
ANR	1034402	CallExpression	"c -> hdsp . put_pixels_tab [ 1 ] [ 0 ] ( dst , ref , stride , 8 )"		1032739	0					
ANR	1034403	Callee	c -> hdsp . put_pixels_tab [ 1 ] [ 0 ]		1032739	0					
ANR	1034404	ArrayIndexing	c -> hdsp . put_pixels_tab [ 1 ] [ 0 ]		1032739	0					
ANR	1034405	ArrayIndexing	c -> hdsp . put_pixels_tab [ 1 ]		1032739	0					
ANR	1034406	MemberAccess	c -> hdsp . put_pixels_tab		1032739	0					
ANR	1034407	PtrMemberAccess	c -> hdsp		1032739	0					
ANR	1034408	Identifier	c		1032739	0					
ANR	1034409	Identifier	hdsp		1032739	1					
ANR	1034410	Identifier	put_pixels_tab		1032739	1					
ANR	1034411	PrimaryExpression	1		1032739	1					
ANR	1034412	PrimaryExpression	0		1032739	1					
ANR	1034413	ArgumentList	dst		1032739	1					
ANR	1034414	Argument	dst		1032739	0					
ANR	1034415	Identifier	dst		1032739	0					
ANR	1034416	Argument	ref		1032739	1					
ANR	1034417	Identifier	ref		1032739	0					
ANR	1034418	Argument	stride		1032739	2					
ANR	1034419	Identifier	stride		1032739	0					
ANR	1034420	Argument	8		1032739	3					
ANR	1034421	PrimaryExpression	8		1032739	0					
ANR	1034422	ExpressionStatement	"memset ( dctblock , 0 , sizeof ( * dctblock ) * 64 )"	387:16:8825:8868	1032739	50	True				
ANR	1034423	CallExpression	"memset ( dctblock , 0 , sizeof ( * dctblock ) * 64 )"		1032739	0					
ANR	1034424	Callee	memset		1032739	0					
ANR	1034425	Identifier	memset		1032739	0					
ANR	1034426	ArgumentList	dctblock		1032739	1					
ANR	1034427	Argument	dctblock		1032739	0					
ANR	1034428	Identifier	dctblock		1032739	0					
ANR	1034429	Argument	0		1032739	1					
ANR	1034430	PrimaryExpression	0		1032739	0					
ANR	1034431	Argument	sizeof ( * dctblock ) * 64		1032739	2					
ANR	1034432	MultiplicativeExpression	sizeof ( * dctblock ) * 64		1032739	0		*			
ANR	1034433	SizeofExpression	sizeof ( * dctblock )		1032739	0					
ANR	1034434	Sizeof	sizeof		1032739	0					
ANR	1034435	UnaryOperationExpression	* dctblock		1032739	1					
ANR	1034436	UnaryOperator	*		1032739	0					
ANR	1034437	Identifier	dctblock		1032739	1					
ANR	1034438	PrimaryExpression	64		1032739	1					
ANR	1034439	ExpressionStatement	"dctblock [ 0 ] = get_value ( c , BINK_SRC_INTER_DC )"	389:16:8887:8932	1032739	51	True				
ANR	1034440	AssignmentExpression	"dctblock [ 0 ] = get_value ( c , BINK_SRC_INTER_DC )"		1032739	0		=			
ANR	1034441	ArrayIndexing	dctblock [ 0 ]		1032739	0					
ANR	1034442	Identifier	dctblock		1032739	0					
ANR	1034443	PrimaryExpression	0		1032739	1					
ANR	1034444	CallExpression	"get_value ( c , BINK_SRC_INTER_DC )"		1032739	1					
ANR	1034445	Callee	get_value		1032739	0					
ANR	1034446	Identifier	get_value		1032739	0					
ANR	1034447	ArgumentList	c		1032739	1					
ANR	1034448	Argument	c		1032739	0					
ANR	1034449	Identifier	c		1032739	0					
ANR	1034450	Argument	BINK_SRC_INTER_DC		1032739	1					
ANR	1034451	Identifier	BINK_SRC_INTER_DC		1032739	0					
ANR	1034452	ExpressionStatement	"read_dct_coeffs ( gb , dctblock , bink_scan , bink_inter_quant , - 1 )"	391:16:8951:9013	1032739	52	True				
ANR	1034453	CallExpression	"read_dct_coeffs ( gb , dctblock , bink_scan , bink_inter_quant , - 1 )"		1032739	0					
ANR	1034454	Callee	read_dct_coeffs		1032739	0					
ANR	1034455	Identifier	read_dct_coeffs		1032739	0					
ANR	1034456	ArgumentList	gb		1032739	1					
ANR	1034457	Argument	gb		1032739	0					
ANR	1034458	Identifier	gb		1032739	0					
ANR	1034459	Argument	dctblock		1032739	1					
ANR	1034460	Identifier	dctblock		1032739	0					
ANR	1034461	Argument	bink_scan		1032739	2					
ANR	1034462	Identifier	bink_scan		1032739	0					
ANR	1034463	Argument	bink_inter_quant		1032739	3					
ANR	1034464	Identifier	bink_inter_quant		1032739	0					
ANR	1034465	Argument	- 1		1032739	4					
ANR	1034466	UnaryOperationExpression	- 1		1032739	0					
ANR	1034467	UnaryOperator	-		1032739	0					
ANR	1034468	PrimaryExpression	1		1032739	1					
ANR	1034469	ExpressionStatement	"c -> binkdsp . idct_add ( dst , stride , dctblock )"	393:16:9032:9074	1032739	53	True				
ANR	1034470	CallExpression	"c -> binkdsp . idct_add ( dst , stride , dctblock )"		1032739	0					
ANR	1034471	Callee	c -> binkdsp . idct_add		1032739	0					
ANR	1034472	MemberAccess	c -> binkdsp . idct_add		1032739	0					
ANR	1034473	PtrMemberAccess	c -> binkdsp		1032739	0					
ANR	1034474	Identifier	c		1032739	0					
ANR	1034475	Identifier	binkdsp		1032739	1					
ANR	1034476	Identifier	idct_add		1032739	1					
ANR	1034477	ArgumentList	dst		1032739	1					
ANR	1034478	Argument	dst		1032739	0					
ANR	1034479	Identifier	dst		1032739	0					
ANR	1034480	Argument	stride		1032739	1					
ANR	1034481	Identifier	stride		1032739	0					
ANR	1034482	Argument	dctblock		1032739	2					
ANR	1034483	Identifier	dctblock		1032739	0					
ANR	1034484	BreakStatement	break ;	395:16:9093:9098	1032739	54	True				
ANR	1034485	Label	case PATTERN_BLOCK :	397:12:9113:9131	1032739	55	True				
ANR	1034486	Identifier	PATTERN_BLOCK		1032739	0					
ANR	1034487	ForStatement	for ( i = 0 ; i < 2 ; i ++ )		1032739	56					
ANR	1034488	ForInit	i = 0 ;	399:21:9155:9160	1032739	0	True				
ANR	1034489	AssignmentExpression	i = 0		1032739	0		=			
ANR	1034490	Identifier	i		1032739	0					
ANR	1034491	PrimaryExpression	0		1032739	1					
ANR	1034492	Condition	i < 2	399:28:9162:9166	1032739	1	True				
ANR	1034493	RelationalExpression	i < 2		1032739	0		<			
ANR	1034494	Identifier	i		1032739	0					
ANR	1034495	PrimaryExpression	2		1032739	1					
ANR	1034496	PostIncDecOperationExpression	i ++	399:35:9169:9171	1032739	2	True				
ANR	1034497	Identifier	i		1032739	0					
ANR	1034498	IncDec	++		1032739	1					
ANR	1034499	ExpressionStatement	"col [ i ] = get_value ( c , BINK_SRC_COLORS )"	401:20:9195:9233	1032739	3	True				
ANR	1034500	AssignmentExpression	"col [ i ] = get_value ( c , BINK_SRC_COLORS )"		1032739	0		=			
ANR	1034501	ArrayIndexing	col [ i ]		1032739	0					
ANR	1034502	Identifier	col		1032739	0					
ANR	1034503	Identifier	i		1032739	1					
ANR	1034504	CallExpression	"get_value ( c , BINK_SRC_COLORS )"		1032739	1					
ANR	1034505	Callee	get_value		1032739	0					
ANR	1034506	Identifier	get_value		1032739	0					
ANR	1034507	ArgumentList	c		1032739	1					
ANR	1034508	Argument	c		1032739	0					
ANR	1034509	Identifier	c		1032739	0					
ANR	1034510	Argument	BINK_SRC_COLORS		1032739	1					
ANR	1034511	Identifier	BINK_SRC_COLORS		1032739	0					
ANR	1034512	ForStatement	for ( i = 0 ; i < 8 ; i ++ )		1032739	57					
ANR	1034513	ForInit	i = 0 ;	403:21:9257:9262	1032739	0	True				
ANR	1034514	AssignmentExpression	i = 0		1032739	0		=			
ANR	1034515	Identifier	i		1032739	0					
ANR	1034516	PrimaryExpression	0		1032739	1					
ANR	1034517	Condition	i < 8	403:28:9264:9268	1032739	1	True				
ANR	1034518	RelationalExpression	i < 8		1032739	0		<			
ANR	1034519	Identifier	i		1032739	0					
ANR	1034520	PrimaryExpression	8		1032739	1					
ANR	1034521	PostIncDecOperationExpression	i ++	403:35:9271:9273	1032739	2	True				
ANR	1034522	Identifier	i		1032739	0					
ANR	1034523	IncDec	++		1032739	1					
ANR	1034524	CompoundStatement		399:40:9134:9134	1032739	3					
ANR	1034525	ExpressionStatement	"v = get_value ( c , BINK_SRC_PATTERN )"	405:20:9299:9333	1032739	0	True				
ANR	1034526	AssignmentExpression	"v = get_value ( c , BINK_SRC_PATTERN )"		1032739	0		=			
ANR	1034527	Identifier	v		1032739	0					
ANR	1034528	CallExpression	"get_value ( c , BINK_SRC_PATTERN )"		1032739	1					
ANR	1034529	Callee	get_value		1032739	0					
ANR	1034530	Identifier	get_value		1032739	0					
ANR	1034531	ArgumentList	c		1032739	1					
ANR	1034532	Argument	c		1032739	0					
ANR	1034533	Identifier	c		1032739	0					
ANR	1034534	Argument	BINK_SRC_PATTERN		1032739	1					
ANR	1034535	Identifier	BINK_SRC_PATTERN		1032739	0					
ANR	1034536	ForStatement	"for ( j = 0 ; j < 8 ; j ++ , v >>= 1 )"		1032739	1					
ANR	1034537	ForInit	j = 0 ;	407:25:9361:9366	1032739	0	True				
ANR	1034538	AssignmentExpression	j = 0		1032739	0		=			
ANR	1034539	Identifier	j		1032739	0					
ANR	1034540	PrimaryExpression	0		1032739	1					
ANR	1034541	Condition	j < 8	407:32:9368:9372	1032739	1	True				
ANR	1034542	RelationalExpression	j < 8		1032739	0		<			
ANR	1034543	Identifier	j		1032739	0					
ANR	1034544	PrimaryExpression	8		1032739	1					
ANR	1034545	Expression	"j ++ , v >>= 1"	407:39:9375:9386	1032739	2	True				
ANR	1034546	PostIncDecOperationExpression	j ++		1032739	0					
ANR	1034547	Identifier	j		1032739	0					
ANR	1034548	IncDec	++		1032739	1					
ANR	1034549	AssignmentExpression	v >>= 1		1032739	1		>>=			
ANR	1034550	Identifier	v		1032739	0					
ANR	1034551	PrimaryExpression	1		1032739	1					
ANR	1034552	ExpressionStatement	dst [ i * stride + j ] = col [ v & 1 ]	409:24:9414:9444	1032739	3	True				
ANR	1034553	AssignmentExpression	dst [ i * stride + j ] = col [ v & 1 ]		1032739	0		=			
ANR	1034554	ArrayIndexing	dst [ i * stride + j ]		1032739	0					
ANR	1034555	Identifier	dst		1032739	0					
ANR	1034556	AdditiveExpression	i * stride + j		1032739	1		+			
ANR	1034557	MultiplicativeExpression	i * stride		1032739	0		*			
ANR	1034558	Identifier	i		1032739	0					
ANR	1034559	Identifier	stride		1032739	1					
ANR	1034560	Identifier	j		1032739	1					
ANR	1034561	ArrayIndexing	col [ v & 1 ]		1032739	1					
ANR	1034562	Identifier	col		1032739	0					
ANR	1034563	BitAndExpression	v & 1		1032739	1		&			
ANR	1034564	Identifier	v		1032739	0					
ANR	1034565	PrimaryExpression	1		1032739	1					
ANR	1034566	BreakStatement	break ;	413:16:9482:9487	1032739	58	True				
ANR	1034567	Label	case RAW_BLOCK :	415:12:9502:9516	1032739	59	True				
ANR	1034568	Identifier	RAW_BLOCK		1032739	0					
ANR	1034569	ForStatement	for ( i = 0 ; i < 8 ; i ++ )		1032739	60					
ANR	1034570	ForInit	i = 0 ;	417:21:9540:9545	1032739	0	True				
ANR	1034571	AssignmentExpression	i = 0		1032739	0		=			
ANR	1034572	Identifier	i		1032739	0					
ANR	1034573	PrimaryExpression	0		1032739	1					
ANR	1034574	Condition	i < 8	417:28:9547:9551	1032739	1	True				
ANR	1034575	RelationalExpression	i < 8		1032739	0		<			
ANR	1034576	Identifier	i		1032739	0					
ANR	1034577	PrimaryExpression	8		1032739	1					
ANR	1034578	PostIncDecOperationExpression	i ++	417:35:9554:9556	1032739	2	True				
ANR	1034579	Identifier	i		1032739	0					
ANR	1034580	IncDec	++		1032739	1					
ANR	1034581	ExpressionStatement	"memcpy ( dst + i * stride , c -> bundle [ BINK_SRC_COLORS ] . cur_ptr + i * 8 , 8 )"	419:20:9580:9647	1032739	3	True				
ANR	1034582	CallExpression	"memcpy ( dst + i * stride , c -> bundle [ BINK_SRC_COLORS ] . cur_ptr + i * 8 , 8 )"		1032739	0					
ANR	1034583	Callee	memcpy		1032739	0					
ANR	1034584	Identifier	memcpy		1032739	0					
ANR	1034585	ArgumentList	dst + i * stride		1032739	1					
ANR	1034586	Argument	dst + i * stride		1032739	0					
ANR	1034587	AdditiveExpression	dst + i * stride		1032739	0		+			
ANR	1034588	Identifier	dst		1032739	0					
ANR	1034589	MultiplicativeExpression	i * stride		1032739	1		*			
ANR	1034590	Identifier	i		1032739	0					
ANR	1034591	Identifier	stride		1032739	1					
ANR	1034592	Argument	c -> bundle [ BINK_SRC_COLORS ] . cur_ptr + i * 8		1032739	1					
ANR	1034593	AdditiveExpression	c -> bundle [ BINK_SRC_COLORS ] . cur_ptr + i * 8		1032739	0		+			
ANR	1034594	MemberAccess	c -> bundle [ BINK_SRC_COLORS ] . cur_ptr		1032739	0					
ANR	1034595	ArrayIndexing	c -> bundle [ BINK_SRC_COLORS ]		1032739	0					
ANR	1034596	PtrMemberAccess	c -> bundle		1032739	0					
ANR	1034597	Identifier	c		1032739	0					
ANR	1034598	Identifier	bundle		1032739	1					
ANR	1034599	Identifier	BINK_SRC_COLORS		1032739	1					
ANR	1034600	Identifier	cur_ptr		1032739	1					
ANR	1034601	MultiplicativeExpression	i * 8		1032739	1		*			
ANR	1034602	Identifier	i		1032739	0					
ANR	1034603	PrimaryExpression	8		1032739	1					
ANR	1034604	Argument	8		1032739	2					
ANR	1034605	PrimaryExpression	8		1032739	0					
ANR	1034606	ExpressionStatement	c -> bundle [ BINK_SRC_COLORS ] . cur_ptr += 64	421:16:9666:9706	1032739	61	True				
ANR	1034607	AssignmentExpression	c -> bundle [ BINK_SRC_COLORS ] . cur_ptr += 64		1032739	0		+=			
ANR	1034608	MemberAccess	c -> bundle [ BINK_SRC_COLORS ] . cur_ptr		1032739	0					
ANR	1034609	ArrayIndexing	c -> bundle [ BINK_SRC_COLORS ]		1032739	0					
ANR	1034610	PtrMemberAccess	c -> bundle		1032739	0					
ANR	1034611	Identifier	c		1032739	0					
ANR	1034612	Identifier	bundle		1032739	1					
ANR	1034613	Identifier	BINK_SRC_COLORS		1032739	1					
ANR	1034614	Identifier	cur_ptr		1032739	1					
ANR	1034615	PrimaryExpression	64		1032739	1					
ANR	1034616	BreakStatement	break ;	423:16:9725:9730	1032739	62	True				
ANR	1034617	Label	default :	425:12:9745:9752	1032739	63	True				
ANR	1034618	Identifier	default		1032739	0					
ANR	1034619	ExpressionStatement	"av_log ( c -> avctx , AV_LOG_ERROR , ""Unknown block type %d\\n"" , blk )"	427:16:9771:9833	1032739	64	True				
ANR	1034620	CallExpression	"av_log ( c -> avctx , AV_LOG_ERROR , ""Unknown block type %d\\n"" , blk )"		1032739	0					
ANR	1034621	Callee	av_log		1032739	0					
ANR	1034622	Identifier	av_log		1032739	0					
ANR	1034623	ArgumentList	c -> avctx		1032739	1					
ANR	1034624	Argument	c -> avctx		1032739	0					
ANR	1034625	PtrMemberAccess	c -> avctx		1032739	0					
ANR	1034626	Identifier	c		1032739	0					
ANR	1034627	Identifier	avctx		1032739	1					
ANR	1034628	Argument	AV_LOG_ERROR		1032739	1					
ANR	1034629	Identifier	AV_LOG_ERROR		1032739	0					
ANR	1034630	Argument	"""Unknown block type %d\\n"""		1032739	2					
ANR	1034631	PrimaryExpression	"""Unknown block type %d\\n"""		1032739	0					
ANR	1034632	Argument	blk		1032739	3					
ANR	1034633	Identifier	blk		1032739	0					
ANR	1034634	ReturnStatement	return AVERROR_INVALIDDATA ;	429:16:9852:9878	1032739	65	True				
ANR	1034635	Identifier	AVERROR_INVALIDDATA		1032739	0					
ANR	1034636	IfStatement	if ( get_bits_count ( gb ) & 0x1F )		1032739	50					
ANR	1034637	Condition	get_bits_count ( gb ) & 0x1F	437:8:9922:9946	1032739	0	True				
ANR	1034638	BitAndExpression	get_bits_count ( gb ) & 0x1F		1032739	0		&			
ANR	1034639	CallExpression	get_bits_count ( gb )		1032739	0					
ANR	1034640	Callee	get_bits_count		1032739	0					
ANR	1034641	Identifier	get_bits_count		1032739	0					
ANR	1034642	ArgumentList	gb		1032739	1					
ANR	1034643	Argument	gb		1032739	0					
ANR	1034644	Identifier	gb		1032739	0					
ANR	1034645	PrimaryExpression	0x1F		1032739	1					
ANR	1034646	ExpressionStatement	"skip_bits_long ( gb , 32 - ( get_bits_count ( gb ) & 0x1F ) )"	439:8:10002:10054	1032739	1	True				
ANR	1034647	CallExpression	"skip_bits_long ( gb , 32 - ( get_bits_count ( gb ) & 0x1F ) )"		1032739	0					
ANR	1034648	Callee	skip_bits_long		1032739	0					
ANR	1034649	Identifier	skip_bits_long		1032739	0					
ANR	1034650	ArgumentList	gb		1032739	1					
ANR	1034651	Argument	gb		1032739	0					
ANR	1034652	Identifier	gb		1032739	0					
ANR	1034653	Argument	32 - ( get_bits_count ( gb ) & 0x1F )		1032739	1					
ANR	1034654	AdditiveExpression	32 - ( get_bits_count ( gb ) & 0x1F )		1032739	0		-			
ANR	1034655	PrimaryExpression	32		1032739	0					
ANR	1034656	BitAndExpression	get_bits_count ( gb ) & 0x1F		1032739	1		&			
ANR	1034657	CallExpression	get_bits_count ( gb )		1032739	0					
ANR	1034658	Callee	get_bits_count		1032739	0					
ANR	1034659	Identifier	get_bits_count		1032739	0					
ANR	1034660	ArgumentList	gb		1032739	1					
ANR	1034661	Argument	gb		1032739	0					
ANR	1034662	Identifier	gb		1032739	0					
ANR	1034663	PrimaryExpression	0x1F		1032739	1					
ANR	1034664	ReturnStatement	return 0 ;	443:4:10063:10071	1032739	51	True				
ANR	1034665	PrimaryExpression	0		1032739	0					
ANR	1034666	ReturnType	static int		1032739	1					
ANR	1034667	Identifier	bink_decode_plane		1032739	2					
ANR	1034668	ParameterList	"BinkContext * c , AVFrame * frame , GetBitContext * gb , int plane_idx , int is_chroma"		1032739	3					
ANR	1034669	Parameter	BinkContext * c	1:29:29:42	1032739	0	True				
ANR	1034670	ParameterType	BinkContext *		1032739	0					
ANR	1034671	Identifier	c		1032739	1					
ANR	1034672	Parameter	AVFrame * frame	1:45:45:58	1032739	1	True				
ANR	1034673	ParameterType	AVFrame *		1032739	0					
ANR	1034674	Identifier	frame		1032739	1					
ANR	1034675	Parameter	GetBitContext * gb	1:61:61:77	1032739	2	True				
ANR	1034676	ParameterType	GetBitContext *		1032739	0					
ANR	1034677	Identifier	gb		1032739	1					
ANR	1034678	Parameter	int plane_idx	3:29:110:122	1032739	3	True				
ANR	1034679	ParameterType	int		1032739	0					
ANR	1034680	Identifier	plane_idx		1032739	1					
ANR	1034681	Parameter	int is_chroma	3:44:125:137	1032739	4	True				
ANR	1034682	ParameterType	int		1032739	0					
ANR	1034683	Identifier	is_chroma		1032739	1					
ANR	1034684	CFGEntryNode	ENTRY		1032739		True				
ANR	1034685	CFGExitNode	EXIT		1032739		True				
ANR	1034686	Symbol	* v		1032739						
ANR	1034687	Symbol	* stride		1032739						
ANR	1034688	Symbol	ref_start		1032739						
ANR	1034689	Symbol	BINK_NB_SRC		1032739						
ANR	1034690	Symbol	ublock		1032739						
ANR	1034691	Symbol	prev		1032739						
ANR	1034692	Symbol	c -> last -> data		1032739						
ANR	1034693	Symbol	stride		1032739						
ANR	1034694	Symbol	c -> binkdsp		1032739						
ANR	1034695	Symbol	* ublock		1032739						
ANR	1034696	Symbol	BINK_SRC_RUN		1032739						
ANR	1034697	Symbol	bink_scan		1032739						
ANR	1034698	Symbol	block		1032739						
ANR	1034699	Symbol	* coordmap		1032739						
ANR	1034700	Symbol	read_patterns		1032739						
ANR	1034701	Symbol	FILL_BLOCK		1032739						
ANR	1034702	Symbol	BINK_SRC_BLOCK_TYPES		1032739						
ANR	1034703	Symbol	* dctblock		1032739						
ANR	1034704	Symbol	* * * scan ++		1032739						
ANR	1034705	Symbol	BINK_SRC_SUB_BLOCK_TYPES		1032739						
ANR	1034706	Symbol	* * coordmap		1032739						
ANR	1034707	Symbol	get_value		1032739						
ANR	1034708	Symbol	* c -> hdsp . put_pixels_tab		1032739						
ANR	1034709	Symbol	* * * c		1032739						
ANR	1034710	Symbol	c -> last		1032739						
ANR	1034711	Symbol	* * c -> last		1032739						
ANR	1034712	Symbol	* c -> avctx		1032739						
ANR	1034713	Symbol	bh		1032739						
ANR	1034714	Symbol	scan		1032739						
ANR	1034715	Symbol	dctblock		1032739						
ANR	1034716	Symbol	bw		1032739						
ANR	1034717	Symbol	bx		1032739						
ANR	1034718	Symbol	* bink_patterns		1032739						
ANR	1034719	Symbol	by		1032739						
ANR	1034720	Symbol	read_colors		1032739						
ANR	1034721	Symbol	BINK_SRC_Y_OFF		1032739						
ANR	1034722	Symbol	blk		1032739						
ANR	1034723	Symbol	c		1032739						
ANR	1034724	Symbol	AV_LOG_ERROR		1032739						
ANR	1034725	Symbol	* frame -> linesize		1032739						
ANR	1034726	Symbol	i		1032739						
ANR	1034727	Symbol	j		1032739						
ANR	1034728	Symbol	c -> hdsp . put_pixels_tab		1032739						
ANR	1034729	Symbol	SCALED_BLOCK		1032739						
ANR	1034730	Symbol	yoff		1032739						
ANR	1034731	Symbol	c -> last -> linesize		1032739						
ANR	1034732	Symbol	read_motion_values		1032739						
ANR	1034733	Symbol	v		1032739						
ANR	1034734	Symbol	c -> avctx -> height		1032739						
ANR	1034735	Symbol	width		1032739						
ANR	1034736	Symbol	AVERROR_INVALIDDATA		1032739						
ANR	1034737	Symbol	c -> hdsp		1032739						
ANR	1034738	Symbol	FFMAX		1032739						
ANR	1034739	Symbol	coordmap		1032739						
ANR	1034740	Symbol	col		1032739						
ANR	1034741	Symbol	c -> bundle		1032739						
ANR	1034742	Symbol	ref_end		1032739						
ANR	1034743	Symbol	get_bits		1032739						
ANR	1034744	Symbol	c -> bundle [ BINK_SRC_COLORS ] . cur_ptr		1032739						
ANR	1034745	Symbol	run		1032739						
ANR	1034746	Symbol	* * scan ++		1032739						
ANR	1034747	Symbol	* dst		1032739						
ANR	1034748	Symbol	ref		1032739						
ANR	1034749	Symbol	* * frame		1032739						
ANR	1034750	Symbol	bink_intra_quant		1032739						
ANR	1034751	Symbol	* BINK_SRC_COLORS		1032739						
ANR	1034752	Symbol	frame -> data		1032739						
ANR	1034753	Symbol	ret		1032739						
ANR	1034754	Symbol	BINK_SRC_PATTERN		1032739						
ANR	1034755	Symbol	c -> bdsp		1032739						
ANR	1034756	Symbol	get_bits1		1032739						
ANR	1034757	Symbol	* * c		1032739						
ANR	1034758	Symbol	* scan ++		1032739						
ANR	1034759	Symbol	DC_START_BITS		1032739						
ANR	1034760	Symbol	is_chroma		1032739						
ANR	1034761	Symbol	get_bits_count		1032739						
ANR	1034762	Symbol	* plane_idx		1032739						
ANR	1034763	Symbol	c -> avctx		1032739						
ANR	1034764	Symbol	* c -> last -> data		1032739						
ANR	1034765	Symbol	BINK_SRC_COLORS		1032739						
ANR	1034766	Symbol	* c -> hdsp		1032739						
ANR	1034767	Symbol	bink_inter_quant		1032739						
ANR	1034768	Symbol	frame		1032739						
ANR	1034769	Symbol	* frame -> data		1032739						
ANR	1034770	Symbol	* c -> last -> linesize		1032739						
ANR	1034771	Symbol	dst		1032739						
ANR	1034772	Symbol	* frame		1032739						
ANR	1034773	Symbol	plane_idx		1032739						
ANR	1034774	Symbol	c -> bdsp . fill_block_tab		1032739						
ANR	1034775	Symbol	xoff		1032739						
ANR	1034776	Symbol	* col		1032739						
ANR	1034777	Symbol	* c -> bundle		1032739						
ANR	1034778	Symbol	bink_patterns		1032739						
ANR	1034779	Symbol	gb		1032739						
ANR	1034780	Symbol	frame -> linesize		1032739						
ANR	1034781	Symbol	c -> avctx -> width		1032739						
ANR	1034782	Symbol	read_dcs		1032739						
ANR	1034783	Symbol	* get_bits		1032739						
ANR	1034784	Symbol	BINK_SRC_INTER_DC		1032739						
ANR	1034785	Symbol	* c		1032739						
ANR	1034786	Symbol	BINK_SRC_X_OFF		1032739						
ANR	1034787	Symbol	read_runs		1032739						
ANR	1034788	Symbol	BINK_SRC_INTRA_DC		1032739						
ANR	1034789	Symbol	* i		1032739						
ANR	1034790	Symbol	* j		1032739						
ANR	1034791	Symbol	* c -> last		1032739						
ANR	1034792	Symbol	read_block_types		1032739						
