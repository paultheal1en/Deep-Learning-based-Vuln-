command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1096366	File	/home/p4ultr4n/workplace/ReVeal/raw_code/bmp_decode_frame_0.c								
ANR	1096367	Function	bmp_decode_frame	1:0:0:8216							
ANR	1096368	FunctionDef	"bmp_decode_frame (AVCodecContext * avctx , void * data , int * data_size , const uint8_t * buf , int buf_size)"		1096367	0					
ANR	1096369	CompoundStatement		7:0:172:8216	1096367	0					
ANR	1096370	IdentifierDeclStatement	BMPContext * s = avctx -> priv_data ;	9:4:179:211	1096367	0	True				
ANR	1096371	IdentifierDecl	* s = avctx -> priv_data		1096367	0					
ANR	1096372	IdentifierDeclType	BMPContext *		1096367	0					
ANR	1096373	Identifier	s		1096367	1					
ANR	1096374	AssignmentExpression	* s = avctx -> priv_data		1096367	2		=			
ANR	1096375	Identifier	s		1096367	0					
ANR	1096376	PtrMemberAccess	avctx -> priv_data		1096367	1					
ANR	1096377	Identifier	avctx		1096367	0					
ANR	1096378	Identifier	priv_data		1096367	1					
ANR	1096379	IdentifierDeclStatement	AVFrame * picture = data ;	11:4:218:241	1096367	1	True				
ANR	1096380	IdentifierDecl	* picture = data		1096367	0					
ANR	1096381	IdentifierDeclType	AVFrame *		1096367	0					
ANR	1096382	Identifier	picture		1096367	1					
ANR	1096383	AssignmentExpression	* picture = data		1096367	2		=			
ANR	1096384	Identifier	data		1096367	0					
ANR	1096385	Identifier	data		1096367	1					
ANR	1096386	IdentifierDeclStatement	AVFrame * p = & s -> picture ;	13:4:248:272	1096367	2	True				
ANR	1096387	IdentifierDecl	* p = & s -> picture		1096367	0					
ANR	1096388	IdentifierDeclType	AVFrame *		1096367	0					
ANR	1096389	Identifier	p		1096367	1					
ANR	1096390	AssignmentExpression	* p = & s -> picture		1096367	2		=			
ANR	1096391	Identifier	p		1096367	0					
ANR	1096392	UnaryOperationExpression	& s -> picture		1096367	1					
ANR	1096393	UnaryOperator	&		1096367	0					
ANR	1096394	PtrMemberAccess	s -> picture		1096367	1					
ANR	1096395	Identifier	s		1096367	0					
ANR	1096396	Identifier	picture		1096367	1					
ANR	1096397	IdentifierDeclStatement	"unsigned int fsize , hsize ;"	15:4:279:304	1096367	3	True				
ANR	1096398	IdentifierDecl	fsize		1096367	0					
ANR	1096399	IdentifierDeclType	unsigned int		1096367	0					
ANR	1096400	Identifier	fsize		1096367	1					
ANR	1096401	IdentifierDecl	hsize		1096367	1					
ANR	1096402	IdentifierDeclType	unsigned int		1096367	0					
ANR	1096403	Identifier	hsize		1096367	1					
ANR	1096404	IdentifierDeclStatement	"int width , height ;"	17:4:311:328	1096367	4	True				
ANR	1096405	IdentifierDecl	width		1096367	0					
ANR	1096406	IdentifierDeclType	int		1096367	0					
ANR	1096407	Identifier	width		1096367	1					
ANR	1096408	IdentifierDecl	height		1096367	1					
ANR	1096409	IdentifierDeclType	int		1096367	0					
ANR	1096410	Identifier	height		1096367	1					
ANR	1096411	IdentifierDeclStatement	unsigned int depth ;	19:4:335:353	1096367	5	True				
ANR	1096412	IdentifierDecl	depth		1096367	0					
ANR	1096413	IdentifierDeclType	unsigned int		1096367	0					
ANR	1096414	Identifier	depth		1096367	1					
ANR	1096415	IdentifierDeclStatement	BiCompression comp ;	21:4:360:378	1096367	6	True				
ANR	1096416	IdentifierDecl	comp		1096367	0					
ANR	1096417	IdentifierDeclType	BiCompression		1096367	0					
ANR	1096418	Identifier	comp		1096367	1					
ANR	1096419	IdentifierDeclStatement	unsigned int ihsize ;	23:4:385:404	1096367	7	True				
ANR	1096420	IdentifierDecl	ihsize		1096367	0					
ANR	1096421	IdentifierDeclType	unsigned int		1096367	0					
ANR	1096422	Identifier	ihsize		1096367	1					
ANR	1096423	IdentifierDeclStatement	"int i , j , n , linesize ;"	25:4:411:432	1096367	8	True				
ANR	1096424	IdentifierDecl	i		1096367	0					
ANR	1096425	IdentifierDeclType	int		1096367	0					
ANR	1096426	Identifier	i		1096367	1					
ANR	1096427	IdentifierDecl	j		1096367	1					
ANR	1096428	IdentifierDeclType	int		1096367	0					
ANR	1096429	Identifier	j		1096367	1					
ANR	1096430	IdentifierDecl	n		1096367	2					
ANR	1096431	IdentifierDeclType	int		1096367	0					
ANR	1096432	Identifier	n		1096367	1					
ANR	1096433	IdentifierDecl	linesize		1096367	3					
ANR	1096434	IdentifierDeclType	int		1096367	0					
ANR	1096435	Identifier	linesize		1096367	1					
ANR	1096436	IdentifierDeclStatement	uint32_t rgb [ 3 ] ;	27:4:439:454	1096367	9	True				
ANR	1096437	IdentifierDecl	rgb [ 3 ]		1096367	0					
ANR	1096438	IdentifierDeclType	uint32_t [ 3 ]		1096367	0					
ANR	1096439	Identifier	rgb		1096367	1					
ANR	1096440	PrimaryExpression	3		1096367	2					
ANR	1096441	IdentifierDeclStatement	uint8_t * ptr ;	29:4:461:473	1096367	10	True				
ANR	1096442	IdentifierDecl	* ptr		1096367	0					
ANR	1096443	IdentifierDeclType	uint8_t *		1096367	0					
ANR	1096444	Identifier	ptr		1096367	1					
ANR	1096445	IdentifierDeclStatement	int dsize ;	31:4:480:489	1096367	11	True				
ANR	1096446	IdentifierDecl	dsize		1096367	0					
ANR	1096447	IdentifierDeclType	int		1096367	0					
ANR	1096448	Identifier	dsize		1096367	1					
ANR	1096449	IdentifierDeclStatement	const uint8_t * buf0 = buf ;	33:4:496:521	1096367	12	True				
ANR	1096450	IdentifierDecl	* buf0 = buf		1096367	0					
ANR	1096451	IdentifierDeclType	const uint8_t *		1096367	0					
ANR	1096452	Identifier	buf0		1096367	1					
ANR	1096453	AssignmentExpression	* buf0 = buf		1096367	2		=			
ANR	1096454	Identifier	buf		1096367	0					
ANR	1096455	Identifier	buf		1096367	1					
ANR	1096456	IfStatement	if ( buf_size < 14 )		1096367	13					
ANR	1096457	Condition	buf_size < 14	37:7:533:545	1096367	0	True				
ANR	1096458	RelationalExpression	buf_size < 14		1096367	0		<			
ANR	1096459	Identifier	buf_size		1096367	0					
ANR	1096460	PrimaryExpression	14		1096367	1					
ANR	1096461	CompoundStatement		31:21:374:374	1096367	1					
ANR	1096462	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""buf size too small (%d)\\n"" , buf_size )"	39:8:558:624	1096367	0	True				
ANR	1096463	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""buf size too small (%d)\\n"" , buf_size )"		1096367	0					
ANR	1096464	Callee	av_log		1096367	0					
ANR	1096465	Identifier	av_log		1096367	0					
ANR	1096466	ArgumentList	avctx		1096367	1					
ANR	1096467	Argument	avctx		1096367	0					
ANR	1096468	Identifier	avctx		1096367	0					
ANR	1096469	Argument	AV_LOG_ERROR		1096367	1					
ANR	1096470	Identifier	AV_LOG_ERROR		1096367	0					
ANR	1096471	Argument	"""buf size too small (%d)\\n"""		1096367	2					
ANR	1096472	PrimaryExpression	"""buf size too small (%d)\\n"""		1096367	0					
ANR	1096473	Argument	buf_size		1096367	3					
ANR	1096474	Identifier	buf_size		1096367	0					
ANR	1096475	ReturnStatement	return - 1 ;	41:8:635:644	1096367	1	True				
ANR	1096476	UnaryOperationExpression	- 1		1096367	0					
ANR	1096477	UnaryOperator	-		1096367	0					
ANR	1096478	PrimaryExpression	1		1096367	1					
ANR	1096479	IfStatement	if ( bytestream_get_byte ( & buf ) != 'B' || bytestream_get_byte ( & buf ) != 'M' )		1096367	14					
ANR	1096480	Condition	bytestream_get_byte ( & buf ) != 'B' || bytestream_get_byte ( & buf ) != 'M'	47:7:663:738	1096367	0	True				
ANR	1096481	OrExpression	bytestream_get_byte ( & buf ) != 'B' || bytestream_get_byte ( & buf ) != 'M'		1096367	0		||			
ANR	1096482	EqualityExpression	bytestream_get_byte ( & buf ) != 'B'		1096367	0		!=			
ANR	1096483	CallExpression	bytestream_get_byte ( & buf )		1096367	0					
ANR	1096484	Callee	bytestream_get_byte		1096367	0					
ANR	1096485	Identifier	bytestream_get_byte		1096367	0					
ANR	1096486	ArgumentList	& buf		1096367	1					
ANR	1096487	Argument	& buf		1096367	0					
ANR	1096488	UnaryOperationExpression	& buf		1096367	0					
ANR	1096489	UnaryOperator	&		1096367	0					
ANR	1096490	Identifier	buf		1096367	1					
ANR	1096491	PrimaryExpression	'B'		1096367	1					
ANR	1096492	EqualityExpression	bytestream_get_byte ( & buf ) != 'M'		1096367	1		!=			
ANR	1096493	CallExpression	bytestream_get_byte ( & buf )		1096367	0					
ANR	1096494	Callee	bytestream_get_byte		1096367	0					
ANR	1096495	Identifier	bytestream_get_byte		1096367	0					
ANR	1096496	ArgumentList	& buf		1096367	1					
ANR	1096497	Argument	& buf		1096367	0					
ANR	1096498	UnaryOperationExpression	& buf		1096367	0					
ANR	1096499	UnaryOperator	&		1096367	0					
ANR	1096500	Identifier	buf		1096367	1					
ANR	1096501	PrimaryExpression	'M'		1096367	1					
ANR	1096502	CompoundStatement		43:41:568:568	1096367	1					
ANR	1096503	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""bad magic number\\n"" )"	51:8:752:801	1096367	0	True				
ANR	1096504	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""bad magic number\\n"" )"		1096367	0					
ANR	1096505	Callee	av_log		1096367	0					
ANR	1096506	Identifier	av_log		1096367	0					
ANR	1096507	ArgumentList	avctx		1096367	1					
ANR	1096508	Argument	avctx		1096367	0					
ANR	1096509	Identifier	avctx		1096367	0					
ANR	1096510	Argument	AV_LOG_ERROR		1096367	1					
ANR	1096511	Identifier	AV_LOG_ERROR		1096367	0					
ANR	1096512	Argument	"""bad magic number\\n"""		1096367	2					
ANR	1096513	PrimaryExpression	"""bad magic number\\n"""		1096367	0					
ANR	1096514	ReturnStatement	return - 1 ;	53:8:812:821	1096367	1	True				
ANR	1096515	UnaryOperationExpression	- 1		1096367	0					
ANR	1096516	UnaryOperator	-		1096367	0					
ANR	1096517	PrimaryExpression	1		1096367	1					
ANR	1096518	ExpressionStatement	fsize = bytestream_get_le32 ( & buf )	59:4:837:870	1096367	15	True				
ANR	1096519	AssignmentExpression	fsize = bytestream_get_le32 ( & buf )		1096367	0		=			
ANR	1096520	Identifier	fsize		1096367	0					
ANR	1096521	CallExpression	bytestream_get_le32 ( & buf )		1096367	1					
ANR	1096522	Callee	bytestream_get_le32		1096367	0					
ANR	1096523	Identifier	bytestream_get_le32		1096367	0					
ANR	1096524	ArgumentList	& buf		1096367	1					
ANR	1096525	Argument	& buf		1096367	0					
ANR	1096526	UnaryOperationExpression	& buf		1096367	0					
ANR	1096527	UnaryOperator	&		1096367	0					
ANR	1096528	Identifier	buf		1096367	1					
ANR	1096529	IfStatement	if ( buf_size < fsize )		1096367	16					
ANR	1096530	Condition	buf_size < fsize	61:7:880:895	1096367	0	True				
ANR	1096531	RelationalExpression	buf_size < fsize		1096367	0		<			
ANR	1096532	Identifier	buf_size		1096367	0					
ANR	1096533	Identifier	fsize		1096367	1					
ANR	1096534	CompoundStatement		55:24:724:724	1096367	1					
ANR	1096535	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""not enough data (%d < %d)\\n"" , buf_size , fsize )"	63:8:908:999	1096367	0	True				
ANR	1096536	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""not enough data (%d < %d)\\n"" , buf_size , fsize )"		1096367	0					
ANR	1096537	Callee	av_log		1096367	0					
ANR	1096538	Identifier	av_log		1096367	0					
ANR	1096539	ArgumentList	avctx		1096367	1					
ANR	1096540	Argument	avctx		1096367	0					
ANR	1096541	Identifier	avctx		1096367	0					
ANR	1096542	Argument	AV_LOG_ERROR		1096367	1					
ANR	1096543	Identifier	AV_LOG_ERROR		1096367	0					
ANR	1096544	Argument	"""not enough data (%d < %d)\\n"""		1096367	2					
ANR	1096545	PrimaryExpression	"""not enough data (%d < %d)\\n"""		1096367	0					
ANR	1096546	Argument	buf_size		1096367	3					
ANR	1096547	Identifier	buf_size		1096367	0					
ANR	1096548	Argument	fsize		1096367	4					
ANR	1096549	Identifier	fsize		1096367	0					
ANR	1096550	ReturnStatement	return - 1 ;	67:8:1010:1019	1096367	1	True				
ANR	1096551	UnaryOperationExpression	- 1		1096367	0					
ANR	1096552	UnaryOperator	-		1096367	0					
ANR	1096553	PrimaryExpression	1		1096367	1					
ANR	1096554	ExpressionStatement	buf += 2	73:4:1035:1043	1096367	17	True				
ANR	1096555	AssignmentExpression	buf += 2		1096367	0		+=			
ANR	1096556	Identifier	buf		1096367	0					
ANR	1096557	PrimaryExpression	2		1096367	1					
ANR	1096558	ExpressionStatement	buf += 2	75:4:1066:1074	1096367	18	True				
ANR	1096559	AssignmentExpression	buf += 2		1096367	0		+=			
ANR	1096560	Identifier	buf		1096367	0					
ANR	1096561	PrimaryExpression	2		1096367	1					
ANR	1096562	ExpressionStatement	hsize = bytestream_get_le32 ( & buf )	79:4:1099:1132	1096367	19	True				
ANR	1096563	AssignmentExpression	hsize = bytestream_get_le32 ( & buf )		1096367	0		=			
ANR	1096564	Identifier	hsize		1096367	0					
ANR	1096565	CallExpression	bytestream_get_le32 ( & buf )		1096367	1					
ANR	1096566	Callee	bytestream_get_le32		1096367	0					
ANR	1096567	Identifier	bytestream_get_le32		1096367	0					
ANR	1096568	ArgumentList	& buf		1096367	1					
ANR	1096569	Argument	& buf		1096367	0					
ANR	1096570	UnaryOperationExpression	& buf		1096367	0					
ANR	1096571	UnaryOperator	&		1096367	0					
ANR	1096572	Identifier	buf		1096367	1					
ANR	1096573	IfStatement	if ( fsize <= hsize )		1096367	20					
ANR	1096574	Condition	fsize <= hsize	81:7:1160:1173	1096367	0	True				
ANR	1096575	RelationalExpression	fsize <= hsize		1096367	0		<=			
ANR	1096576	Identifier	fsize		1096367	0					
ANR	1096577	Identifier	hsize		1096367	1					
ANR	1096578	CompoundStatement		75:22:1002:1002	1096367	1					
ANR	1096579	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""declared file size is less than header size (%d < %d)\\n"" , fsize , hsize )"	83:8:1186:1302	1096367	0	True				
ANR	1096580	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""declared file size is less than header size (%d < %d)\\n"" , fsize , hsize )"		1096367	0					
ANR	1096581	Callee	av_log		1096367	0					
ANR	1096582	Identifier	av_log		1096367	0					
ANR	1096583	ArgumentList	avctx		1096367	1					
ANR	1096584	Argument	avctx		1096367	0					
ANR	1096585	Identifier	avctx		1096367	0					
ANR	1096586	Argument	AV_LOG_ERROR		1096367	1					
ANR	1096587	Identifier	AV_LOG_ERROR		1096367	0					
ANR	1096588	Argument	"""declared file size is less than header size (%d < %d)\\n"""		1096367	2					
ANR	1096589	PrimaryExpression	"""declared file size is less than header size (%d < %d)\\n"""		1096367	0					
ANR	1096590	Argument	fsize		1096367	3					
ANR	1096591	Identifier	fsize		1096367	0					
ANR	1096592	Argument	hsize		1096367	4					
ANR	1096593	Identifier	hsize		1096367	0					
ANR	1096594	ReturnStatement	return - 1 ;	87:8:1313:1322	1096367	1	True				
ANR	1096595	UnaryOperationExpression	- 1		1096367	0					
ANR	1096596	UnaryOperator	-		1096367	0					
ANR	1096597	PrimaryExpression	1		1096367	1					
ANR	1096598	ExpressionStatement	ihsize = bytestream_get_le32 ( & buf )	93:4:1338:1372	1096367	21	True				
ANR	1096599	AssignmentExpression	ihsize = bytestream_get_le32 ( & buf )		1096367	0		=			
ANR	1096600	Identifier	ihsize		1096367	0					
ANR	1096601	CallExpression	bytestream_get_le32 ( & buf )		1096367	1					
ANR	1096602	Callee	bytestream_get_le32		1096367	0					
ANR	1096603	Identifier	bytestream_get_le32		1096367	0					
ANR	1096604	ArgumentList	& buf		1096367	1					
ANR	1096605	Argument	& buf		1096367	0					
ANR	1096606	UnaryOperationExpression	& buf		1096367	0					
ANR	1096607	UnaryOperator	&		1096367	0					
ANR	1096608	Identifier	buf		1096367	1					
ANR	1096609	IfStatement	if ( ihsize + 14 > hsize )		1096367	22					
ANR	1096610	Condition	ihsize + 14 > hsize	95:7:1411:1429	1096367	0	True				
ANR	1096611	RelationalExpression	ihsize + 14 > hsize		1096367	0		>			
ANR	1096612	AdditiveExpression	ihsize + 14		1096367	0		+			
ANR	1096613	Identifier	ihsize		1096367	0					
ANR	1096614	PrimaryExpression	14		1096367	1					
ANR	1096615	Identifier	hsize		1096367	1					
ANR	1096616	CompoundStatement		89:27:1258:1258	1096367	1					
ANR	1096617	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""invalid header size %d\\n"" , hsize )"	97:8:1442:1504	1096367	0	True				
ANR	1096618	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""invalid header size %d\\n"" , hsize )"		1096367	0					
ANR	1096619	Callee	av_log		1096367	0					
ANR	1096620	Identifier	av_log		1096367	0					
ANR	1096621	ArgumentList	avctx		1096367	1					
ANR	1096622	Argument	avctx		1096367	0					
ANR	1096623	Identifier	avctx		1096367	0					
ANR	1096624	Argument	AV_LOG_ERROR		1096367	1					
ANR	1096625	Identifier	AV_LOG_ERROR		1096367	0					
ANR	1096626	Argument	"""invalid header size %d\\n"""		1096367	2					
ANR	1096627	PrimaryExpression	"""invalid header size %d\\n"""		1096367	0					
ANR	1096628	Argument	hsize		1096367	3					
ANR	1096629	Identifier	hsize		1096367	0					
ANR	1096630	ReturnStatement	return - 1 ;	99:8:1515:1524	1096367	1	True				
ANR	1096631	UnaryOperationExpression	- 1		1096367	0					
ANR	1096632	UnaryOperator	-		1096367	0					
ANR	1096633	PrimaryExpression	1		1096367	1					
ANR	1096634	SwitchStatement	switch ( ihsize )		1096367	23					
ANR	1096635	Condition	ihsize	105:11:1547:1552	1096367	0	True				
ANR	1096636	Identifier	ihsize		1096367	0					
ANR	1096637	CompoundStatement		99:18:1381:1381	1096367	1					
ANR	1096638	Label	case 40 :	107:4:1561:1569	1096367	0	True				
ANR	1096639	Label	case 64 :	109:4:1589:1597	1096367	1	True				
ANR	1096640	Label	case 108 :	111:4:1615:1623	1096367	2	True				
ANR	1096641	Label	case 124 :	113:4:1643:1651	1096367	3	True				
ANR	1096642	ExpressionStatement	width = bytestream_get_le32 ( & buf )	115:8:1675:1708	1096367	4	True				
ANR	1096643	AssignmentExpression	width = bytestream_get_le32 ( & buf )		1096367	0		=			
ANR	1096644	Identifier	width		1096367	0					
ANR	1096645	CallExpression	bytestream_get_le32 ( & buf )		1096367	1					
ANR	1096646	Callee	bytestream_get_le32		1096367	0					
ANR	1096647	Identifier	bytestream_get_le32		1096367	0					
ANR	1096648	ArgumentList	& buf		1096367	1					
ANR	1096649	Argument	& buf		1096367	0					
ANR	1096650	UnaryOperationExpression	& buf		1096367	0					
ANR	1096651	UnaryOperator	&		1096367	0					
ANR	1096652	Identifier	buf		1096367	1					
ANR	1096653	ExpressionStatement	height = bytestream_get_le32 ( & buf )	117:8:1719:1753	1096367	5	True				
ANR	1096654	AssignmentExpression	height = bytestream_get_le32 ( & buf )		1096367	0		=			
ANR	1096655	Identifier	height		1096367	0					
ANR	1096656	CallExpression	bytestream_get_le32 ( & buf )		1096367	1					
ANR	1096657	Callee	bytestream_get_le32		1096367	0					
ANR	1096658	Identifier	bytestream_get_le32		1096367	0					
ANR	1096659	ArgumentList	& buf		1096367	1					
ANR	1096660	Argument	& buf		1096367	0					
ANR	1096661	UnaryOperationExpression	& buf		1096367	0					
ANR	1096662	UnaryOperator	&		1096367	0					
ANR	1096663	Identifier	buf		1096367	1					
ANR	1096664	BreakStatement	break ;	119:8:1764:1769	1096367	6	True				
ANR	1096665	Label	case 12 :	121:4:1776:1784	1096367	7	True				
ANR	1096666	ExpressionStatement	width = bytestream_get_le16 ( & buf )	123:8:1806:1840	1096367	8	True				
ANR	1096667	AssignmentExpression	width = bytestream_get_le16 ( & buf )		1096367	0		=			
ANR	1096668	Identifier	width		1096367	0					
ANR	1096669	CallExpression	bytestream_get_le16 ( & buf )		1096367	1					
ANR	1096670	Callee	bytestream_get_le16		1096367	0					
ANR	1096671	Identifier	bytestream_get_le16		1096367	0					
ANR	1096672	ArgumentList	& buf		1096367	1					
ANR	1096673	Argument	& buf		1096367	0					
ANR	1096674	UnaryOperationExpression	& buf		1096367	0					
ANR	1096675	UnaryOperator	&		1096367	0					
ANR	1096676	Identifier	buf		1096367	1					
ANR	1096677	ExpressionStatement	height = bytestream_get_le16 ( & buf )	125:8:1851:1885	1096367	9	True				
ANR	1096678	AssignmentExpression	height = bytestream_get_le16 ( & buf )		1096367	0		=			
ANR	1096679	Identifier	height		1096367	0					
ANR	1096680	CallExpression	bytestream_get_le16 ( & buf )		1096367	1					
ANR	1096681	Callee	bytestream_get_le16		1096367	0					
ANR	1096682	Identifier	bytestream_get_le16		1096367	0					
ANR	1096683	ArgumentList	& buf		1096367	1					
ANR	1096684	Argument	& buf		1096367	0					
ANR	1096685	UnaryOperationExpression	& buf		1096367	0					
ANR	1096686	UnaryOperator	&		1096367	0					
ANR	1096687	Identifier	buf		1096367	1					
ANR	1096688	BreakStatement	break ;	127:8:1896:1901	1096367	10	True				
ANR	1096689	Label	default :	129:4:1908:1915	1096367	11	True				
ANR	1096690	Identifier	default		1096367	0					
ANR	1096691	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""unsupported BMP file, patch welcome\\n"" )"	131:8:1926:1994	1096367	12	True				
ANR	1096692	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""unsupported BMP file, patch welcome\\n"" )"		1096367	0					
ANR	1096693	Callee	av_log		1096367	0					
ANR	1096694	Identifier	av_log		1096367	0					
ANR	1096695	ArgumentList	avctx		1096367	1					
ANR	1096696	Argument	avctx		1096367	0					
ANR	1096697	Identifier	avctx		1096367	0					
ANR	1096698	Argument	AV_LOG_ERROR		1096367	1					
ANR	1096699	Identifier	AV_LOG_ERROR		1096367	0					
ANR	1096700	Argument	"""unsupported BMP file, patch welcome\\n"""		1096367	2					
ANR	1096701	PrimaryExpression	"""unsupported BMP file, patch welcome\\n"""		1096367	0					
ANR	1096702	ReturnStatement	return - 1 ;	133:8:2005:2014	1096367	13	True				
ANR	1096703	UnaryOperationExpression	- 1		1096367	0					
ANR	1096704	UnaryOperator	-		1096367	0					
ANR	1096705	PrimaryExpression	1		1096367	1					
ANR	1096706	IfStatement	if ( bytestream_get_le16 ( & buf ) != 1 )		1096367	24					
ANR	1096707	Condition	bytestream_get_le16 ( & buf ) != 1	139:7:2033:2062	1096367	0	True				
ANR	1096708	EqualityExpression	bytestream_get_le16 ( & buf ) != 1		1096367	0		!=			
ANR	1096709	CallExpression	bytestream_get_le16 ( & buf )		1096367	0					
ANR	1096710	Callee	bytestream_get_le16		1096367	0					
ANR	1096711	Identifier	bytestream_get_le16		1096367	0					
ANR	1096712	ArgumentList	& buf		1096367	1					
ANR	1096713	Argument	& buf		1096367	0					
ANR	1096714	UnaryOperationExpression	& buf		1096367	0					
ANR	1096715	UnaryOperator	&		1096367	0					
ANR	1096716	Identifier	buf		1096367	1					
ANR	1096717	PrimaryExpression	1		1096367	1					
ANR	1096718	CompoundStatement		133:38:1891:1891	1096367	1					
ANR	1096719	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""invalid BMP header\\n"" )"	141:8:2088:2139	1096367	0	True				
ANR	1096720	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""invalid BMP header\\n"" )"		1096367	0					
ANR	1096721	Callee	av_log		1096367	0					
ANR	1096722	Identifier	av_log		1096367	0					
ANR	1096723	ArgumentList	avctx		1096367	1					
ANR	1096724	Argument	avctx		1096367	0					
ANR	1096725	Identifier	avctx		1096367	0					
ANR	1096726	Argument	AV_LOG_ERROR		1096367	1					
ANR	1096727	Identifier	AV_LOG_ERROR		1096367	0					
ANR	1096728	Argument	"""invalid BMP header\\n"""		1096367	2					
ANR	1096729	PrimaryExpression	"""invalid BMP header\\n"""		1096367	0					
ANR	1096730	ReturnStatement	return - 1 ;	143:8:2150:2159	1096367	1	True				
ANR	1096731	UnaryOperationExpression	- 1		1096367	0					
ANR	1096732	UnaryOperator	-		1096367	0					
ANR	1096733	PrimaryExpression	1		1096367	1					
ANR	1096734	ExpressionStatement	depth = bytestream_get_le16 ( & buf )	149:4:2175:2208	1096367	25	True				
ANR	1096735	AssignmentExpression	depth = bytestream_get_le16 ( & buf )		1096367	0		=			
ANR	1096736	Identifier	depth		1096367	0					
ANR	1096737	CallExpression	bytestream_get_le16 ( & buf )		1096367	1					
ANR	1096738	Callee	bytestream_get_le16		1096367	0					
ANR	1096739	Identifier	bytestream_get_le16		1096367	0					
ANR	1096740	ArgumentList	& buf		1096367	1					
ANR	1096741	Argument	& buf		1096367	0					
ANR	1096742	UnaryOperationExpression	& buf		1096367	0					
ANR	1096743	UnaryOperator	&		1096367	0					
ANR	1096744	Identifier	buf		1096367	1					
ANR	1096745	IfStatement	if ( ihsize == 40 )		1096367	26					
ANR	1096746	Condition	ihsize == 40	153:7:2220:2231	1096367	0	True				
ANR	1096747	EqualityExpression	ihsize == 40		1096367	0		==			
ANR	1096748	Identifier	ihsize		1096367	0					
ANR	1096749	PrimaryExpression	40		1096367	1					
ANR	1096750	ExpressionStatement	comp = bytestream_get_le32 ( & buf )	155:8:2243:2275	1096367	1	True				
ANR	1096751	AssignmentExpression	comp = bytestream_get_le32 ( & buf )		1096367	0		=			
ANR	1096752	Identifier	comp		1096367	0					
ANR	1096753	CallExpression	bytestream_get_le32 ( & buf )		1096367	1					
ANR	1096754	Callee	bytestream_get_le32		1096367	0					
ANR	1096755	Identifier	bytestream_get_le32		1096367	0					
ANR	1096756	ArgumentList	& buf		1096367	1					
ANR	1096757	Argument	& buf		1096367	0					
ANR	1096758	UnaryOperationExpression	& buf		1096367	0					
ANR	1096759	UnaryOperator	&		1096367	0					
ANR	1096760	Identifier	buf		1096367	1					
ANR	1096761	ElseStatement	else		1096367	0					
ANR	1096762	ExpressionStatement	comp = BMP_RGB	159:8:2296:2310	1096367	0	True				
ANR	1096763	AssignmentExpression	comp = BMP_RGB		1096367	0		=			
ANR	1096764	Identifier	comp		1096367	0					
ANR	1096765	Identifier	BMP_RGB		1096367	1					
ANR	1096766	IfStatement	if ( comp != BMP_RGB && comp != BMP_BITFIELDS && comp != BMP_RLE4 && comp != BMP_RLE8 )		1096367	27					
ANR	1096767	Condition	comp != BMP_RGB && comp != BMP_BITFIELDS && comp != BMP_RLE4 && comp != BMP_RLE8	163:7:2322:2401	1096367	0	True				
ANR	1096768	AndExpression	comp != BMP_RGB && comp != BMP_BITFIELDS && comp != BMP_RLE4 && comp != BMP_RLE8		1096367	0		&&			
ANR	1096769	EqualityExpression	comp != BMP_RGB		1096367	0		!=			
ANR	1096770	Identifier	comp		1096367	0					
ANR	1096771	Identifier	BMP_RGB		1096367	1					
ANR	1096772	AndExpression	comp != BMP_BITFIELDS && comp != BMP_RLE4 && comp != BMP_RLE8		1096367	1		&&			
ANR	1096773	EqualityExpression	comp != BMP_BITFIELDS		1096367	0		!=			
ANR	1096774	Identifier	comp		1096367	0					
ANR	1096775	Identifier	BMP_BITFIELDS		1096367	1					
ANR	1096776	AndExpression	comp != BMP_RLE4 && comp != BMP_RLE8		1096367	1		&&			
ANR	1096777	EqualityExpression	comp != BMP_RLE4		1096367	0		!=			
ANR	1096778	Identifier	comp		1096367	0					
ANR	1096779	Identifier	BMP_RLE4		1096367	1					
ANR	1096780	EqualityExpression	comp != BMP_RLE8		1096367	1		!=			
ANR	1096781	Identifier	comp		1096367	0					
ANR	1096782	Identifier	BMP_RLE8		1096367	1					
ANR	1096783	CompoundStatement		157:88:2230:2230	1096367	1					
ANR	1096784	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""BMP coding %d not supported\\n"" , comp )"	165:8:2414:2480	1096367	0	True				
ANR	1096785	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""BMP coding %d not supported\\n"" , comp )"		1096367	0					
ANR	1096786	Callee	av_log		1096367	0					
ANR	1096787	Identifier	av_log		1096367	0					
ANR	1096788	ArgumentList	avctx		1096367	1					
ANR	1096789	Argument	avctx		1096367	0					
ANR	1096790	Identifier	avctx		1096367	0					
ANR	1096791	Argument	AV_LOG_ERROR		1096367	1					
ANR	1096792	Identifier	AV_LOG_ERROR		1096367	0					
ANR	1096793	Argument	"""BMP coding %d not supported\\n"""		1096367	2					
ANR	1096794	PrimaryExpression	"""BMP coding %d not supported\\n"""		1096367	0					
ANR	1096795	Argument	comp		1096367	3					
ANR	1096796	Identifier	comp		1096367	0					
ANR	1096797	ReturnStatement	return - 1 ;	167:8:2491:2500	1096367	1	True				
ANR	1096798	UnaryOperationExpression	- 1		1096367	0					
ANR	1096799	UnaryOperator	-		1096367	0					
ANR	1096800	PrimaryExpression	1		1096367	1					
ANR	1096801	IfStatement	if ( comp == BMP_BITFIELDS )		1096367	28					
ANR	1096802	Condition	comp == BMP_BITFIELDS	173:7:2519:2539	1096367	0	True				
ANR	1096803	EqualityExpression	comp == BMP_BITFIELDS		1096367	0		==			
ANR	1096804	Identifier	comp		1096367	0					
ANR	1096805	Identifier	BMP_BITFIELDS		1096367	1					
ANR	1096806	CompoundStatement		167:29:2368:2368	1096367	1					
ANR	1096807	ExpressionStatement	buf += 20	175:8:2552:2561	1096367	0	True				
ANR	1096808	AssignmentExpression	buf += 20		1096367	0		+=			
ANR	1096809	Identifier	buf		1096367	0					
ANR	1096810	PrimaryExpression	20		1096367	1					
ANR	1096811	ExpressionStatement	rgb [ 0 ] = bytestream_get_le32 ( & buf )	177:8:2572:2606	1096367	1	True				
ANR	1096812	AssignmentExpression	rgb [ 0 ] = bytestream_get_le32 ( & buf )		1096367	0		=			
ANR	1096813	ArrayIndexing	rgb [ 0 ]		1096367	0					
ANR	1096814	Identifier	rgb		1096367	0					
ANR	1096815	PrimaryExpression	0		1096367	1					
ANR	1096816	CallExpression	bytestream_get_le32 ( & buf )		1096367	1					
ANR	1096817	Callee	bytestream_get_le32		1096367	0					
ANR	1096818	Identifier	bytestream_get_le32		1096367	0					
ANR	1096819	ArgumentList	& buf		1096367	1					
ANR	1096820	Argument	& buf		1096367	0					
ANR	1096821	UnaryOperationExpression	& buf		1096367	0					
ANR	1096822	UnaryOperator	&		1096367	0					
ANR	1096823	Identifier	buf		1096367	1					
ANR	1096824	ExpressionStatement	rgb [ 1 ] = bytestream_get_le32 ( & buf )	179:8:2617:2651	1096367	2	True				
ANR	1096825	AssignmentExpression	rgb [ 1 ] = bytestream_get_le32 ( & buf )		1096367	0		=			
ANR	1096826	ArrayIndexing	rgb [ 1 ]		1096367	0					
ANR	1096827	Identifier	rgb		1096367	0					
ANR	1096828	PrimaryExpression	1		1096367	1					
ANR	1096829	CallExpression	bytestream_get_le32 ( & buf )		1096367	1					
ANR	1096830	Callee	bytestream_get_le32		1096367	0					
ANR	1096831	Identifier	bytestream_get_le32		1096367	0					
ANR	1096832	ArgumentList	& buf		1096367	1					
ANR	1096833	Argument	& buf		1096367	0					
ANR	1096834	UnaryOperationExpression	& buf		1096367	0					
ANR	1096835	UnaryOperator	&		1096367	0					
ANR	1096836	Identifier	buf		1096367	1					
ANR	1096837	ExpressionStatement	rgb [ 2 ] = bytestream_get_le32 ( & buf )	181:8:2662:2696	1096367	3	True				
ANR	1096838	AssignmentExpression	rgb [ 2 ] = bytestream_get_le32 ( & buf )		1096367	0		=			
ANR	1096839	ArrayIndexing	rgb [ 2 ]		1096367	0					
ANR	1096840	Identifier	rgb		1096367	0					
ANR	1096841	PrimaryExpression	2		1096367	1					
ANR	1096842	CallExpression	bytestream_get_le32 ( & buf )		1096367	1					
ANR	1096843	Callee	bytestream_get_le32		1096367	0					
ANR	1096844	Identifier	bytestream_get_le32		1096367	0					
ANR	1096845	ArgumentList	& buf		1096367	1					
ANR	1096846	Argument	& buf		1096367	0					
ANR	1096847	UnaryOperationExpression	& buf		1096367	0					
ANR	1096848	UnaryOperator	&		1096367	0					
ANR	1096849	Identifier	buf		1096367	1					
ANR	1096850	ExpressionStatement	avctx -> width = width	187:4:2712:2732	1096367	29	True				
ANR	1096851	AssignmentExpression	avctx -> width = width		1096367	0		=			
ANR	1096852	PtrMemberAccess	avctx -> width		1096367	0					
ANR	1096853	Identifier	avctx		1096367	0					
ANR	1096854	Identifier	width		1096367	1					
ANR	1096855	Identifier	width		1096367	1					
ANR	1096856	ExpressionStatement	avctx -> height = height > 0 ? height : - height	189:4:2739:2782	1096367	30	True				
ANR	1096857	AssignmentExpression	avctx -> height = height > 0 ? height : - height		1096367	0		=			
ANR	1096858	PtrMemberAccess	avctx -> height		1096367	0					
ANR	1096859	Identifier	avctx		1096367	0					
ANR	1096860	Identifier	height		1096367	1					
ANR	1096861	ConditionalExpression	height > 0 ? height : - height		1096367	1					
ANR	1096862	Condition	height > 0		1096367	0					
ANR	1096863	RelationalExpression	height > 0		1096367	0		>			
ANR	1096864	Identifier	height		1096367	0					
ANR	1096865	PrimaryExpression	0		1096367	1					
ANR	1096866	Identifier	height		1096367	1					
ANR	1096867	UnaryOperationExpression	- height		1096367	2					
ANR	1096868	UnaryOperator	-		1096367	0					
ANR	1096869	Identifier	height		1096367	1					
ANR	1096870	ExpressionStatement	avctx -> pix_fmt = PIX_FMT_NONE	193:4:2791:2820	1096367	31	True				
ANR	1096871	AssignmentExpression	avctx -> pix_fmt = PIX_FMT_NONE		1096367	0		=			
ANR	1096872	PtrMemberAccess	avctx -> pix_fmt		1096367	0					
ANR	1096873	Identifier	avctx		1096367	0					
ANR	1096874	Identifier	pix_fmt		1096367	1					
ANR	1096875	Identifier	PIX_FMT_NONE		1096367	1					
ANR	1096876	SwitchStatement	switch ( depth )		1096367	32					
ANR	1096877	Condition	depth	197:11:2836:2840	1096367	0	True				
ANR	1096878	Identifier	depth		1096367	0					
ANR	1096879	CompoundStatement		191:17:2669:2669	1096367	1					
ANR	1096880	Label	case 32 :	199:4:2849:2856	1096367	0	True				
ANR	1096881	IfStatement	if ( comp == BMP_BITFIELDS )		1096367	1					
ANR	1096882	Condition	comp == BMP_BITFIELDS	201:11:2870:2890	1096367	0	True				
ANR	1096883	EqualityExpression	comp == BMP_BITFIELDS		1096367	0		==			
ANR	1096884	Identifier	comp		1096367	0					
ANR	1096885	Identifier	BMP_BITFIELDS		1096367	1					
ANR	1096886	CompoundStatement		195:33:2719:2719	1096367	1					
ANR	1096887	ExpressionStatement	rgb [ 0 ] = ( rgb [ 0 ] >> 15 ) & 3	203:12:2907:2934	1096367	0	True				
ANR	1096888	AssignmentExpression	rgb [ 0 ] = ( rgb [ 0 ] >> 15 ) & 3		1096367	0		=			
ANR	1096889	ArrayIndexing	rgb [ 0 ]		1096367	0					
ANR	1096890	Identifier	rgb		1096367	0					
ANR	1096891	PrimaryExpression	0		1096367	1					
ANR	1096892	BitAndExpression	( rgb [ 0 ] >> 15 ) & 3		1096367	1		&			
ANR	1096893	ShiftExpression	rgb [ 0 ] >> 15		1096367	0		>>			
ANR	1096894	ArrayIndexing	rgb [ 0 ]		1096367	0					
ANR	1096895	Identifier	rgb		1096367	0					
ANR	1096896	PrimaryExpression	0		1096367	1					
ANR	1096897	PrimaryExpression	15		1096367	1					
ANR	1096898	PrimaryExpression	3		1096367	1					
ANR	1096899	ExpressionStatement	rgb [ 1 ] = ( rgb [ 1 ] >> 15 ) & 3	205:12:2949:2976	1096367	1	True				
ANR	1096900	AssignmentExpression	rgb [ 1 ] = ( rgb [ 1 ] >> 15 ) & 3		1096367	0		=			
ANR	1096901	ArrayIndexing	rgb [ 1 ]		1096367	0					
ANR	1096902	Identifier	rgb		1096367	0					
ANR	1096903	PrimaryExpression	1		1096367	1					
ANR	1096904	BitAndExpression	( rgb [ 1 ] >> 15 ) & 3		1096367	1		&			
ANR	1096905	ShiftExpression	rgb [ 1 ] >> 15		1096367	0		>>			
ANR	1096906	ArrayIndexing	rgb [ 1 ]		1096367	0					
ANR	1096907	Identifier	rgb		1096367	0					
ANR	1096908	PrimaryExpression	1		1096367	1					
ANR	1096909	PrimaryExpression	15		1096367	1					
ANR	1096910	PrimaryExpression	3		1096367	1					
ANR	1096911	ExpressionStatement	rgb [ 2 ] = ( rgb [ 2 ] >> 15 ) & 3	207:12:2991:3018	1096367	2	True				
ANR	1096912	AssignmentExpression	rgb [ 2 ] = ( rgb [ 2 ] >> 15 ) & 3		1096367	0		=			
ANR	1096913	ArrayIndexing	rgb [ 2 ]		1096367	0					
ANR	1096914	Identifier	rgb		1096367	0					
ANR	1096915	PrimaryExpression	2		1096367	1					
ANR	1096916	BitAndExpression	( rgb [ 2 ] >> 15 ) & 3		1096367	1		&			
ANR	1096917	ShiftExpression	rgb [ 2 ] >> 15		1096367	0		>>			
ANR	1096918	ArrayIndexing	rgb [ 2 ]		1096367	0					
ANR	1096919	Identifier	rgb		1096367	0					
ANR	1096920	PrimaryExpression	2		1096367	1					
ANR	1096921	PrimaryExpression	15		1096367	1					
ANR	1096922	PrimaryExpression	3		1096367	1					
ANR	1096923	IfStatement	if ( rgb [ 0 ] + rgb [ 1 ] + rgb [ 2 ] != 3 || rgb [ 0 ] == rgb [ 1 ] || rgb [ 0 ] == rgb [ 2 ] || rgb [ 1 ] == rgb [ 2 ] )		1096367	3					
ANR	1096924	Condition	rgb [ 0 ] + rgb [ 1 ] + rgb [ 2 ] != 3 || rgb [ 0 ] == rgb [ 1 ] || rgb [ 0 ] == rgb [ 2 ] || rgb [ 1 ] == rgb [ 2 ]	211:15:3038:3142	1096367	0	True				
ANR	1096925	OrExpression	rgb [ 0 ] + rgb [ 1 ] + rgb [ 2 ] != 3 || rgb [ 0 ] == rgb [ 1 ] || rgb [ 0 ] == rgb [ 2 ] || rgb [ 1 ] == rgb [ 2 ]		1096367	0		||			
ANR	1096926	EqualityExpression	rgb [ 0 ] + rgb [ 1 ] + rgb [ 2 ] != 3		1096367	0		!=			
ANR	1096927	AdditiveExpression	rgb [ 0 ] + rgb [ 1 ] + rgb [ 2 ]		1096367	0		+			
ANR	1096928	ArrayIndexing	rgb [ 0 ]		1096367	0					
ANR	1096929	Identifier	rgb		1096367	0					
ANR	1096930	PrimaryExpression	0		1096367	1					
ANR	1096931	AdditiveExpression	rgb [ 1 ] + rgb [ 2 ]		1096367	1		+			
ANR	1096932	ArrayIndexing	rgb [ 1 ]		1096367	0					
ANR	1096933	Identifier	rgb		1096367	0					
ANR	1096934	PrimaryExpression	1		1096367	1					
ANR	1096935	ArrayIndexing	rgb [ 2 ]		1096367	1					
ANR	1096936	Identifier	rgb		1096367	0					
ANR	1096937	PrimaryExpression	2		1096367	1					
ANR	1096938	PrimaryExpression	3		1096367	1					
ANR	1096939	OrExpression	rgb [ 0 ] == rgb [ 1 ] || rgb [ 0 ] == rgb [ 2 ] || rgb [ 1 ] == rgb [ 2 ]		1096367	1		||			
ANR	1096940	EqualityExpression	rgb [ 0 ] == rgb [ 1 ]		1096367	0		==			
ANR	1096941	ArrayIndexing	rgb [ 0 ]		1096367	0					
ANR	1096942	Identifier	rgb		1096367	0					
ANR	1096943	PrimaryExpression	0		1096367	1					
ANR	1096944	ArrayIndexing	rgb [ 1 ]		1096367	1					
ANR	1096945	Identifier	rgb		1096367	0					
ANR	1096946	PrimaryExpression	1		1096367	1					
ANR	1096947	OrExpression	rgb [ 0 ] == rgb [ 2 ] || rgb [ 1 ] == rgb [ 2 ]		1096367	1		||			
ANR	1096948	EqualityExpression	rgb [ 0 ] == rgb [ 2 ]		1096367	0		==			
ANR	1096949	ArrayIndexing	rgb [ 0 ]		1096367	0					
ANR	1096950	Identifier	rgb		1096367	0					
ANR	1096951	PrimaryExpression	0		1096367	1					
ANR	1096952	ArrayIndexing	rgb [ 2 ]		1096367	1					
ANR	1096953	Identifier	rgb		1096367	0					
ANR	1096954	PrimaryExpression	2		1096367	1					
ANR	1096955	EqualityExpression	rgb [ 1 ] == rgb [ 2 ]		1096367	1		==			
ANR	1096956	ArrayIndexing	rgb [ 1 ]		1096367	0					
ANR	1096957	Identifier	rgb		1096367	0					
ANR	1096958	PrimaryExpression	1		1096367	1					
ANR	1096959	ArrayIndexing	rgb [ 2 ]		1096367	1					
ANR	1096960	Identifier	rgb		1096367	0					
ANR	1096961	PrimaryExpression	2		1096367	1					
ANR	1096962	CompoundStatement		207:72:2971:2971	1096367	1					
ANR	1096963	BreakStatement	break ;	215:16:3163:3168	1096367	0	True				
ANR	1096964	ElseStatement	else		1096367	0					
ANR	1096965	CompoundStatement		213:15:3028:3028	1096367	0					
ANR	1096966	ExpressionStatement	rgb [ 0 ] = 2	221:12:3216:3226	1096367	0	True				
ANR	1096967	AssignmentExpression	rgb [ 0 ] = 2		1096367	0		=			
ANR	1096968	ArrayIndexing	rgb [ 0 ]		1096367	0					
ANR	1096969	Identifier	rgb		1096367	0					
ANR	1096970	PrimaryExpression	0		1096367	1					
ANR	1096971	PrimaryExpression	2		1096367	1					
ANR	1096972	ExpressionStatement	rgb [ 1 ] = 1	223:12:3241:3251	1096367	1	True				
ANR	1096973	AssignmentExpression	rgb [ 1 ] = 1		1096367	0		=			
ANR	1096974	ArrayIndexing	rgb [ 1 ]		1096367	0					
ANR	1096975	Identifier	rgb		1096367	0					
ANR	1096976	PrimaryExpression	1		1096367	1					
ANR	1096977	PrimaryExpression	1		1096367	1					
ANR	1096978	ExpressionStatement	rgb [ 2 ] = 0	225:12:3266:3276	1096367	2	True				
ANR	1096979	AssignmentExpression	rgb [ 2 ] = 0		1096367	0		=			
ANR	1096980	ArrayIndexing	rgb [ 2 ]		1096367	0					
ANR	1096981	Identifier	rgb		1096367	0					
ANR	1096982	PrimaryExpression	2		1096367	1					
ANR	1096983	PrimaryExpression	0		1096367	1					
ANR	1096984	ExpressionStatement	avctx -> pix_fmt = PIX_FMT_BGR24	231:8:3300:3330	1096367	2	True				
ANR	1096985	AssignmentExpression	avctx -> pix_fmt = PIX_FMT_BGR24		1096367	0		=			
ANR	1096986	PtrMemberAccess	avctx -> pix_fmt		1096367	0					
ANR	1096987	Identifier	avctx		1096367	0					
ANR	1096988	Identifier	pix_fmt		1096367	1					
ANR	1096989	Identifier	PIX_FMT_BGR24		1096367	1					
ANR	1096990	BreakStatement	break ;	233:8:3341:3346	1096367	3	True				
ANR	1096991	Label	case 24 :	235:4:3353:3360	1096367	4	True				
ANR	1096992	ExpressionStatement	avctx -> pix_fmt = PIX_FMT_BGR24	237:8:3371:3401	1096367	5	True				
ANR	1096993	AssignmentExpression	avctx -> pix_fmt = PIX_FMT_BGR24		1096367	0		=			
ANR	1096994	PtrMemberAccess	avctx -> pix_fmt		1096367	0					
ANR	1096995	Identifier	avctx		1096367	0					
ANR	1096996	Identifier	pix_fmt		1096367	1					
ANR	1096997	Identifier	PIX_FMT_BGR24		1096367	1					
ANR	1096998	BreakStatement	break ;	239:8:3412:3417	1096367	6	True				
ANR	1096999	Label	case 16 :	241:4:3424:3431	1096367	7	True				
ANR	1097000	IfStatement	if ( comp == BMP_RGB )		1096367	8					
ANR	1097001	Condition	comp == BMP_RGB	243:11:3445:3459	1096367	0	True				
ANR	1097002	EqualityExpression	comp == BMP_RGB		1096367	0		==			
ANR	1097003	Identifier	comp		1096367	0					
ANR	1097004	Identifier	BMP_RGB		1096367	1					
ANR	1097005	ExpressionStatement	avctx -> pix_fmt = PIX_FMT_RGB555	245:12:3475:3506	1096367	1	True				
ANR	1097006	AssignmentExpression	avctx -> pix_fmt = PIX_FMT_RGB555		1096367	0		=			
ANR	1097007	PtrMemberAccess	avctx -> pix_fmt		1096367	0					
ANR	1097008	Identifier	avctx		1096367	0					
ANR	1097009	Identifier	pix_fmt		1096367	1					
ANR	1097010	Identifier	PIX_FMT_RGB555		1096367	1					
ANR	1097011	IfStatement	if ( comp == BMP_BITFIELDS )		1096367	9					
ANR	1097012	Condition	comp == BMP_BITFIELDS	247:11:3520:3540	1096367	0	True				
ANR	1097013	EqualityExpression	comp == BMP_BITFIELDS		1096367	0		==			
ANR	1097014	Identifier	comp		1096367	0					
ANR	1097015	Identifier	BMP_BITFIELDS		1096367	1					
ANR	1097016	ExpressionStatement	avctx -> pix_fmt = rgb [ 1 ] == 0x07E0 ? PIX_FMT_RGB565 : PIX_FMT_RGB555	249:12:3556:3623	1096367	1	True				
ANR	1097017	AssignmentExpression	avctx -> pix_fmt = rgb [ 1 ] == 0x07E0 ? PIX_FMT_RGB565 : PIX_FMT_RGB555		1096367	0		=			
ANR	1097018	PtrMemberAccess	avctx -> pix_fmt		1096367	0					
ANR	1097019	Identifier	avctx		1096367	0					
ANR	1097020	Identifier	pix_fmt		1096367	1					
ANR	1097021	ConditionalExpression	rgb [ 1 ] == 0x07E0 ? PIX_FMT_RGB565 : PIX_FMT_RGB555		1096367	1					
ANR	1097022	Condition	rgb [ 1 ] == 0x07E0		1096367	0					
ANR	1097023	EqualityExpression	rgb [ 1 ] == 0x07E0		1096367	0		==			
ANR	1097024	ArrayIndexing	rgb [ 1 ]		1096367	0					
ANR	1097025	Identifier	rgb		1096367	0					
ANR	1097026	PrimaryExpression	1		1096367	1					
ANR	1097027	PrimaryExpression	0x07E0		1096367	1					
ANR	1097028	Identifier	PIX_FMT_RGB565		1096367	1					
ANR	1097029	Identifier	PIX_FMT_RGB555		1096367	2					
ANR	1097030	BreakStatement	break ;	251:8:3634:3639	1096367	10	True				
ANR	1097031	Label	case 8 :	253:4:3646:3652	1096367	11	True				
ANR	1097032	IfStatement	if ( hsize - ihsize - 14 > 0 )		1096367	12					
ANR	1097033	Condition	hsize - ihsize - 14 > 0	255:11:3666:3688	1096367	0	True				
ANR	1097034	RelationalExpression	hsize - ihsize - 14 > 0		1096367	0		>			
ANR	1097035	AdditiveExpression	hsize - ihsize - 14		1096367	0		-			
ANR	1097036	Identifier	hsize		1096367	0					
ANR	1097037	AdditiveExpression	ihsize - 14		1096367	1		-			
ANR	1097038	Identifier	ihsize		1096367	0					
ANR	1097039	PrimaryExpression	14		1096367	1					
ANR	1097040	PrimaryExpression	0		1096367	1					
ANR	1097041	ExpressionStatement	avctx -> pix_fmt = PIX_FMT_PAL8	257:12:3704:3733	1096367	1	True				
ANR	1097042	AssignmentExpression	avctx -> pix_fmt = PIX_FMT_PAL8		1096367	0		=			
ANR	1097043	PtrMemberAccess	avctx -> pix_fmt		1096367	0					
ANR	1097044	Identifier	avctx		1096367	0					
ANR	1097045	Identifier	pix_fmt		1096367	1					
ANR	1097046	Identifier	PIX_FMT_PAL8		1096367	1					
ANR	1097047	ElseStatement	else		1096367	0					
ANR	1097048	ExpressionStatement	avctx -> pix_fmt = PIX_FMT_GRAY8	261:12:3762:3792	1096367	0	True				
ANR	1097049	AssignmentExpression	avctx -> pix_fmt = PIX_FMT_GRAY8		1096367	0		=			
ANR	1097050	PtrMemberAccess	avctx -> pix_fmt		1096367	0					
ANR	1097051	Identifier	avctx		1096367	0					
ANR	1097052	Identifier	pix_fmt		1096367	1					
ANR	1097053	Identifier	PIX_FMT_GRAY8		1096367	1					
ANR	1097054	BreakStatement	break ;	263:8:3803:3808	1096367	13	True				
ANR	1097055	Label	case 4 :	265:4:3815:3821	1096367	14	True				
ANR	1097056	IfStatement	if ( hsize - ihsize - 14 > 0 )		1096367	15					
ANR	1097057	Condition	hsize - ihsize - 14 > 0	267:11:3835:3857	1096367	0	True				
ANR	1097058	RelationalExpression	hsize - ihsize - 14 > 0		1096367	0		>			
ANR	1097059	AdditiveExpression	hsize - ihsize - 14		1096367	0		-			
ANR	1097060	Identifier	hsize		1096367	0					
ANR	1097061	AdditiveExpression	ihsize - 14		1096367	1		-			
ANR	1097062	Identifier	ihsize		1096367	0					
ANR	1097063	PrimaryExpression	14		1096367	1					
ANR	1097064	PrimaryExpression	0		1096367	1					
ANR	1097065	CompoundStatement		261:35:3686:3686	1096367	1					
ANR	1097066	ExpressionStatement	avctx -> pix_fmt = PIX_FMT_PAL8	269:12:3874:3903	1096367	0	True				
ANR	1097067	AssignmentExpression	avctx -> pix_fmt = PIX_FMT_PAL8		1096367	0		=			
ANR	1097068	PtrMemberAccess	avctx -> pix_fmt		1096367	0					
ANR	1097069	Identifier	avctx		1096367	0					
ANR	1097070	Identifier	pix_fmt		1096367	1					
ANR	1097071	Identifier	PIX_FMT_PAL8		1096367	1					
ANR	1097072	ElseStatement	else		1096367	0					
ANR	1097073	CompoundStatement		265:13:3746:3746	1096367	0					
ANR	1097074	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Unknown palette for 16-colour BMP\\n"" )"	273:12:3934:4000	1096367	0	True				
ANR	1097075	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Unknown palette for 16-colour BMP\\n"" )"		1096367	0					
ANR	1097076	Callee	av_log		1096367	0					
ANR	1097077	Identifier	av_log		1096367	0					
ANR	1097078	ArgumentList	avctx		1096367	1					
ANR	1097079	Argument	avctx		1096367	0					
ANR	1097080	Identifier	avctx		1096367	0					
ANR	1097081	Argument	AV_LOG_ERROR		1096367	1					
ANR	1097082	Identifier	AV_LOG_ERROR		1096367	0					
ANR	1097083	Argument	"""Unknown palette for 16-colour BMP\\n"""		1096367	2					
ANR	1097084	PrimaryExpression	"""Unknown palette for 16-colour BMP\\n"""		1096367	0					
ANR	1097085	ReturnStatement	return - 1 ;	275:12:4015:4024	1096367	1	True				
ANR	1097086	UnaryOperationExpression	- 1		1096367	0					
ANR	1097087	UnaryOperator	-		1096367	0					
ANR	1097088	PrimaryExpression	1		1096367	1					
ANR	1097089	BreakStatement	break ;	279:8:4046:4051	1096367	16	True				
ANR	1097090	Label	case 1 :	281:4:4058:4064	1096367	17	True				
ANR	1097091	ExpressionStatement	avctx -> pix_fmt = PIX_FMT_MONOBLACK	283:8:4075:4109	1096367	18	True				
ANR	1097092	AssignmentExpression	avctx -> pix_fmt = PIX_FMT_MONOBLACK		1096367	0		=			
ANR	1097093	PtrMemberAccess	avctx -> pix_fmt		1096367	0					
ANR	1097094	Identifier	avctx		1096367	0					
ANR	1097095	Identifier	pix_fmt		1096367	1					
ANR	1097096	Identifier	PIX_FMT_MONOBLACK		1096367	1					
ANR	1097097	BreakStatement	break ;	285:8:4120:4125	1096367	19	True				
ANR	1097098	Label	default :	287:4:4132:4139	1096367	20	True				
ANR	1097099	Identifier	default		1096367	0					
ANR	1097100	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""depth %d not supported\\n"" , depth )"	289:8:4150:4212	1096367	21	True				
ANR	1097101	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""depth %d not supported\\n"" , depth )"		1096367	0					
ANR	1097102	Callee	av_log		1096367	0					
ANR	1097103	Identifier	av_log		1096367	0					
ANR	1097104	ArgumentList	avctx		1096367	1					
ANR	1097105	Argument	avctx		1096367	0					
ANR	1097106	Identifier	avctx		1096367	0					
ANR	1097107	Argument	AV_LOG_ERROR		1096367	1					
ANR	1097108	Identifier	AV_LOG_ERROR		1096367	0					
ANR	1097109	Argument	"""depth %d not supported\\n"""		1096367	2					
ANR	1097110	PrimaryExpression	"""depth %d not supported\\n"""		1096367	0					
ANR	1097111	Argument	depth		1096367	3					
ANR	1097112	Identifier	depth		1096367	0					
ANR	1097113	ReturnStatement	return - 1 ;	291:8:4223:4232	1096367	22	True				
ANR	1097114	UnaryOperationExpression	- 1		1096367	0					
ANR	1097115	UnaryOperator	-		1096367	0					
ANR	1097116	PrimaryExpression	1		1096367	1					
ANR	1097117	IfStatement	if ( avctx -> pix_fmt == PIX_FMT_NONE )		1096367	33					
ANR	1097118	Condition	avctx -> pix_fmt == PIX_FMT_NONE	297:7:4251:4280	1096367	0	True				
ANR	1097119	EqualityExpression	avctx -> pix_fmt == PIX_FMT_NONE		1096367	0		==			
ANR	1097120	PtrMemberAccess	avctx -> pix_fmt		1096367	0					
ANR	1097121	Identifier	avctx		1096367	0					
ANR	1097122	Identifier	pix_fmt		1096367	1					
ANR	1097123	Identifier	PIX_FMT_NONE		1096367	1					
ANR	1097124	CompoundStatement		291:38:4109:4109	1096367	1					
ANR	1097125	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""unsupported pixel format\\n"" )"	299:8:4293:4350	1096367	0	True				
ANR	1097126	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""unsupported pixel format\\n"" )"		1096367	0					
ANR	1097127	Callee	av_log		1096367	0					
ANR	1097128	Identifier	av_log		1096367	0					
ANR	1097129	ArgumentList	avctx		1096367	1					
ANR	1097130	Argument	avctx		1096367	0					
ANR	1097131	Identifier	avctx		1096367	0					
ANR	1097132	Argument	AV_LOG_ERROR		1096367	1					
ANR	1097133	Identifier	AV_LOG_ERROR		1096367	0					
ANR	1097134	Argument	"""unsupported pixel format\\n"""		1096367	2					
ANR	1097135	PrimaryExpression	"""unsupported pixel format\\n"""		1096367	0					
ANR	1097136	ReturnStatement	return - 1 ;	301:8:4361:4370	1096367	1	True				
ANR	1097137	UnaryOperationExpression	- 1		1096367	0					
ANR	1097138	UnaryOperator	-		1096367	0					
ANR	1097139	PrimaryExpression	1		1096367	1					
ANR	1097140	IfStatement	if ( p -> data [ 0 ] )		1096367	34					
ANR	1097141	Condition	p -> data [ 0 ]	307:7:4389:4398	1096367	0	True				
ANR	1097142	ArrayIndexing	p -> data [ 0 ]		1096367	0					
ANR	1097143	PtrMemberAccess	p -> data		1096367	0					
ANR	1097144	Identifier	p		1096367	0					
ANR	1097145	Identifier	data		1096367	1					
ANR	1097146	PrimaryExpression	0		1096367	1					
ANR	1097147	ExpressionStatement	"avctx -> release_buffer ( avctx , p )"	309:8:4410:4441	1096367	1	True				
ANR	1097148	CallExpression	"avctx -> release_buffer ( avctx , p )"		1096367	0					
ANR	1097149	Callee	avctx -> release_buffer		1096367	0					
ANR	1097150	PtrMemberAccess	avctx -> release_buffer		1096367	0					
ANR	1097151	Identifier	avctx		1096367	0					
ANR	1097152	Identifier	release_buffer		1096367	1					
ANR	1097153	ArgumentList	avctx		1096367	1					
ANR	1097154	Argument	avctx		1096367	0					
ANR	1097155	Identifier	avctx		1096367	0					
ANR	1097156	Argument	p		1096367	1					
ANR	1097157	Identifier	p		1096367	0					
ANR	1097158	ExpressionStatement	p -> reference = 0	313:4:4450:4466	1096367	35	True				
ANR	1097159	AssignmentExpression	p -> reference = 0		1096367	0		=			
ANR	1097160	PtrMemberAccess	p -> reference		1096367	0					
ANR	1097161	Identifier	p		1096367	0					
ANR	1097162	Identifier	reference		1096367	1					
ANR	1097163	PrimaryExpression	0		1096367	1					
ANR	1097164	IfStatement	"if ( avctx -> get_buffer ( avctx , p ) < 0 )"		1096367	36					
ANR	1097165	Condition	"avctx -> get_buffer ( avctx , p ) < 0"	315:7:4476:4506	1096367	0	True				
ANR	1097166	RelationalExpression	"avctx -> get_buffer ( avctx , p ) < 0"		1096367	0		<			
ANR	1097167	CallExpression	"avctx -> get_buffer ( avctx , p )"		1096367	0					
ANR	1097168	Callee	avctx -> get_buffer		1096367	0					
ANR	1097169	PtrMemberAccess	avctx -> get_buffer		1096367	0					
ANR	1097170	Identifier	avctx		1096367	0					
ANR	1097171	Identifier	get_buffer		1096367	1					
ANR	1097172	ArgumentList	avctx		1096367	1					
ANR	1097173	Argument	avctx		1096367	0					
ANR	1097174	Identifier	avctx		1096367	0					
ANR	1097175	Argument	p		1096367	1					
ANR	1097176	Identifier	p		1096367	0					
ANR	1097177	PrimaryExpression	0		1096367	1					
ANR	1097178	CompoundStatement		309:39:4335:4335	1096367	1					
ANR	1097179	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""get_buffer() failed\\n"" )"	317:8:4519:4571	1096367	0	True				
ANR	1097180	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""get_buffer() failed\\n"" )"		1096367	0					
ANR	1097181	Callee	av_log		1096367	0					
ANR	1097182	Identifier	av_log		1096367	0					
ANR	1097183	ArgumentList	avctx		1096367	1					
ANR	1097184	Argument	avctx		1096367	0					
ANR	1097185	Identifier	avctx		1096367	0					
ANR	1097186	Argument	AV_LOG_ERROR		1096367	1					
ANR	1097187	Identifier	AV_LOG_ERROR		1096367	0					
ANR	1097188	Argument	"""get_buffer() failed\\n"""		1096367	2					
ANR	1097189	PrimaryExpression	"""get_buffer() failed\\n"""		1096367	0					
ANR	1097190	ReturnStatement	return - 1 ;	319:8:4582:4591	1096367	1	True				
ANR	1097191	UnaryOperationExpression	- 1		1096367	0					
ANR	1097192	UnaryOperator	-		1096367	0					
ANR	1097193	PrimaryExpression	1		1096367	1					
ANR	1097194	ExpressionStatement	p -> pict_type = FF_I_TYPE	323:4:4605:4629	1096367	37	True				
ANR	1097195	AssignmentExpression	p -> pict_type = FF_I_TYPE		1096367	0		=			
ANR	1097196	PtrMemberAccess	p -> pict_type		1096367	0					
ANR	1097197	Identifier	p		1096367	0					
ANR	1097198	Identifier	pict_type		1096367	1					
ANR	1097199	Identifier	FF_I_TYPE		1096367	1					
ANR	1097200	ExpressionStatement	p -> key_frame = 1	325:4:4636:4652	1096367	38	True				
ANR	1097201	AssignmentExpression	p -> key_frame = 1		1096367	0		=			
ANR	1097202	PtrMemberAccess	p -> key_frame		1096367	0					
ANR	1097203	Identifier	p		1096367	0					
ANR	1097204	Identifier	key_frame		1096367	1					
ANR	1097205	PrimaryExpression	1		1096367	1					
ANR	1097206	ExpressionStatement	buf = buf0 + hsize	329:4:4661:4679	1096367	39	True				
ANR	1097207	AssignmentExpression	buf = buf0 + hsize		1096367	0		=			
ANR	1097208	Identifier	buf		1096367	0					
ANR	1097209	AdditiveExpression	buf0 + hsize		1096367	1		+			
ANR	1097210	Identifier	buf0		1096367	0					
ANR	1097211	Identifier	hsize		1096367	1					
ANR	1097212	ExpressionStatement	dsize = buf_size - hsize	331:4:4686:4710	1096367	40	True				
ANR	1097213	AssignmentExpression	dsize = buf_size - hsize		1096367	0		=			
ANR	1097214	Identifier	dsize		1096367	0					
ANR	1097215	AdditiveExpression	buf_size - hsize		1096367	1		-			
ANR	1097216	Identifier	buf_size		1096367	0					
ANR	1097217	Identifier	hsize		1096367	1					
ANR	1097218	ExpressionStatement	n = ( ( avctx -> width * depth ) / 8 + 3 ) & ~3	337:4:4762:4803	1096367	41	True				
ANR	1097219	AssignmentExpression	n = ( ( avctx -> width * depth ) / 8 + 3 ) & ~3		1096367	0		=			
ANR	1097220	Identifier	n		1096367	0					
ANR	1097221	BitAndExpression	( ( avctx -> width * depth ) / 8 + 3 ) & ~3		1096367	1		&			
ANR	1097222	AdditiveExpression	( avctx -> width * depth ) / 8 + 3		1096367	0		+			
ANR	1097223	MultiplicativeExpression	( avctx -> width * depth ) / 8		1096367	0		/			
ANR	1097224	MultiplicativeExpression	avctx -> width * depth		1096367	0		*			
ANR	1097225	PtrMemberAccess	avctx -> width		1096367	0					
ANR	1097226	Identifier	avctx		1096367	0					
ANR	1097227	Identifier	width		1096367	1					
ANR	1097228	Identifier	depth		1096367	1					
ANR	1097229	PrimaryExpression	8		1096367	1					
ANR	1097230	PrimaryExpression	3		1096367	1					
ANR	1097231	Identifier	~3		1096367	1					
ANR	1097232	IfStatement	if ( n * avctx -> height > dsize && comp != BMP_RLE4 && comp != BMP_RLE8 )		1096367	42					
ANR	1097233	Condition	n * avctx -> height > dsize && comp != BMP_RLE4 && comp != BMP_RLE8	341:7:4815:4879	1096367	0	True				
ANR	1097234	AndExpression	n * avctx -> height > dsize && comp != BMP_RLE4 && comp != BMP_RLE8		1096367	0		&&			
ANR	1097235	RelationalExpression	n * avctx -> height > dsize		1096367	0		>			
ANR	1097236	MultiplicativeExpression	n * avctx -> height		1096367	0		*			
ANR	1097237	Identifier	n		1096367	0					
ANR	1097238	PtrMemberAccess	avctx -> height		1096367	1					
ANR	1097239	Identifier	avctx		1096367	0					
ANR	1097240	Identifier	height		1096367	1					
ANR	1097241	Identifier	dsize		1096367	1					
ANR	1097242	AndExpression	comp != BMP_RLE4 && comp != BMP_RLE8		1096367	1		&&			
ANR	1097243	EqualityExpression	comp != BMP_RLE4		1096367	0		!=			
ANR	1097244	Identifier	comp		1096367	0					
ANR	1097245	Identifier	BMP_RLE4		1096367	1					
ANR	1097246	EqualityExpression	comp != BMP_RLE8		1096367	1		!=			
ANR	1097247	Identifier	comp		1096367	0					
ANR	1097248	Identifier	BMP_RLE8		1096367	1					
ANR	1097249	CompoundStatement		335:73:4708:4708	1096367	1					
ANR	1097250	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""not enough data (%d < %d)\\n"" , dsize , n * avctx -> height )"	343:8:4892:4992	1096367	0	True				
ANR	1097251	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""not enough data (%d < %d)\\n"" , dsize , n * avctx -> height )"		1096367	0					
ANR	1097252	Callee	av_log		1096367	0					
ANR	1097253	Identifier	av_log		1096367	0					
ANR	1097254	ArgumentList	avctx		1096367	1					
ANR	1097255	Argument	avctx		1096367	0					
ANR	1097256	Identifier	avctx		1096367	0					
ANR	1097257	Argument	AV_LOG_ERROR		1096367	1					
ANR	1097258	Identifier	AV_LOG_ERROR		1096367	0					
ANR	1097259	Argument	"""not enough data (%d < %d)\\n"""		1096367	2					
ANR	1097260	PrimaryExpression	"""not enough data (%d < %d)\\n"""		1096367	0					
ANR	1097261	Argument	dsize		1096367	3					
ANR	1097262	Identifier	dsize		1096367	0					
ANR	1097263	Argument	n * avctx -> height		1096367	4					
ANR	1097264	MultiplicativeExpression	n * avctx -> height		1096367	0		*			
ANR	1097265	Identifier	n		1096367	0					
ANR	1097266	PtrMemberAccess	avctx -> height		1096367	1					
ANR	1097267	Identifier	avctx		1096367	0					
ANR	1097268	Identifier	height		1096367	1					
ANR	1097269	ReturnStatement	return - 1 ;	347:8:5003:5012	1096367	1	True				
ANR	1097270	UnaryOperationExpression	- 1		1096367	0					
ANR	1097271	UnaryOperator	-		1096367	0					
ANR	1097272	PrimaryExpression	1		1096367	1					
ANR	1097273	IfStatement	if ( comp == BMP_RLE4 || comp == BMP_RLE8 )		1096367	43					
ANR	1097274	Condition	comp == BMP_RLE4 || comp == BMP_RLE8	355:7:5114:5149	1096367	0	True				
ANR	1097275	OrExpression	comp == BMP_RLE4 || comp == BMP_RLE8		1096367	0		||			
ANR	1097276	EqualityExpression	comp == BMP_RLE4		1096367	0		==			
ANR	1097277	Identifier	comp		1096367	0					
ANR	1097278	Identifier	BMP_RLE4		1096367	1					
ANR	1097279	EqualityExpression	comp == BMP_RLE8		1096367	1		==			
ANR	1097280	Identifier	comp		1096367	0					
ANR	1097281	Identifier	BMP_RLE8		1096367	1					
ANR	1097282	ExpressionStatement	"memset ( p -> data [ 0 ] , 0 , avctx -> height * p -> linesize [ 0 ] )"	357:8:5161:5214	1096367	1	True				
ANR	1097283	CallExpression	"memset ( p -> data [ 0 ] , 0 , avctx -> height * p -> linesize [ 0 ] )"		1096367	0					
ANR	1097284	Callee	memset		1096367	0					
ANR	1097285	Identifier	memset		1096367	0					
ANR	1097286	ArgumentList	p -> data [ 0 ]		1096367	1					
ANR	1097287	Argument	p -> data [ 0 ]		1096367	0					
ANR	1097288	ArrayIndexing	p -> data [ 0 ]		1096367	0					
ANR	1097289	PtrMemberAccess	p -> data		1096367	0					
ANR	1097290	Identifier	p		1096367	0					
ANR	1097291	Identifier	data		1096367	1					
ANR	1097292	PrimaryExpression	0		1096367	1					
ANR	1097293	Argument	0		1096367	1					
ANR	1097294	PrimaryExpression	0		1096367	0					
ANR	1097295	Argument	avctx -> height * p -> linesize [ 0 ]		1096367	2					
ANR	1097296	MultiplicativeExpression	avctx -> height * p -> linesize [ 0 ]		1096367	0		*			
ANR	1097297	PtrMemberAccess	avctx -> height		1096367	0					
ANR	1097298	Identifier	avctx		1096367	0					
ANR	1097299	Identifier	height		1096367	1					
ANR	1097300	ArrayIndexing	p -> linesize [ 0 ]		1096367	1					
ANR	1097301	PtrMemberAccess	p -> linesize		1096367	0					
ANR	1097302	Identifier	p		1096367	0					
ANR	1097303	Identifier	linesize		1096367	1					
ANR	1097304	PrimaryExpression	0		1096367	1					
ANR	1097305	IfStatement	if ( depth == 4 || depth == 8 )		1096367	44					
ANR	1097306	Condition	depth == 4 || depth == 8	361:7:5226:5249	1096367	0	True				
ANR	1097307	OrExpression	depth == 4 || depth == 8		1096367	0		||			
ANR	1097308	EqualityExpression	depth == 4		1096367	0		==			
ANR	1097309	Identifier	depth		1096367	0					
ANR	1097310	PrimaryExpression	4		1096367	1					
ANR	1097311	EqualityExpression	depth == 8		1096367	1		==			
ANR	1097312	Identifier	depth		1096367	0					
ANR	1097313	PrimaryExpression	8		1096367	1					
ANR	1097314	ExpressionStatement	"memset ( p -> data [ 1 ] , 0 , 1024 )"	363:8:5261:5288	1096367	1	True				
ANR	1097315	CallExpression	"memset ( p -> data [ 1 ] , 0 , 1024 )"		1096367	0					
ANR	1097316	Callee	memset		1096367	0					
ANR	1097317	Identifier	memset		1096367	0					
ANR	1097318	ArgumentList	p -> data [ 1 ]		1096367	1					
ANR	1097319	Argument	p -> data [ 1 ]		1096367	0					
ANR	1097320	ArrayIndexing	p -> data [ 1 ]		1096367	0					
ANR	1097321	PtrMemberAccess	p -> data		1096367	0					
ANR	1097322	Identifier	p		1096367	0					
ANR	1097323	Identifier	data		1096367	1					
ANR	1097324	PrimaryExpression	1		1096367	1					
ANR	1097325	Argument	0		1096367	1					
ANR	1097326	PrimaryExpression	0		1096367	0					
ANR	1097327	Argument	1024		1096367	2					
ANR	1097328	PrimaryExpression	1024		1096367	0					
ANR	1097329	IfStatement	if ( height > 0 )		1096367	45					
ANR	1097330	Condition	height > 0	367:7:5300:5309	1096367	0	True				
ANR	1097331	RelationalExpression	height > 0		1096367	0		>			
ANR	1097332	Identifier	height		1096367	0					
ANR	1097333	PrimaryExpression	0		1096367	1					
ANR	1097334	CompoundStatement		361:18:5138:5138	1096367	1					
ANR	1097335	ExpressionStatement	ptr = p -> data [ 0 ] + ( avctx -> height - 1 ) * p -> linesize [ 0 ]	369:8:5322:5377	1096367	0	True				
ANR	1097336	AssignmentExpression	ptr = p -> data [ 0 ] + ( avctx -> height - 1 ) * p -> linesize [ 0 ]		1096367	0		=			
ANR	1097337	Identifier	ptr		1096367	0					
ANR	1097338	AdditiveExpression	p -> data [ 0 ] + ( avctx -> height - 1 ) * p -> linesize [ 0 ]		1096367	1		+			
ANR	1097339	ArrayIndexing	p -> data [ 0 ]		1096367	0					
ANR	1097340	PtrMemberAccess	p -> data		1096367	0					
ANR	1097341	Identifier	p		1096367	0					
ANR	1097342	Identifier	data		1096367	1					
ANR	1097343	PrimaryExpression	0		1096367	1					
ANR	1097344	MultiplicativeExpression	( avctx -> height - 1 ) * p -> linesize [ 0 ]		1096367	1		*			
ANR	1097345	AdditiveExpression	avctx -> height - 1		1096367	0		-			
ANR	1097346	PtrMemberAccess	avctx -> height		1096367	0					
ANR	1097347	Identifier	avctx		1096367	0					
ANR	1097348	Identifier	height		1096367	1					
ANR	1097349	PrimaryExpression	1		1096367	1					
ANR	1097350	ArrayIndexing	p -> linesize [ 0 ]		1096367	1					
ANR	1097351	PtrMemberAccess	p -> linesize		1096367	0					
ANR	1097352	Identifier	p		1096367	0					
ANR	1097353	Identifier	linesize		1096367	1					
ANR	1097354	PrimaryExpression	0		1096367	1					
ANR	1097355	ExpressionStatement	linesize = - p -> linesize [ 0 ]	371:8:5388:5414	1096367	1	True				
ANR	1097356	AssignmentExpression	linesize = - p -> linesize [ 0 ]		1096367	0		=			
ANR	1097357	Identifier	linesize		1096367	0					
ANR	1097358	UnaryOperationExpression	- p -> linesize [ 0 ]		1096367	1					
ANR	1097359	UnaryOperator	-		1096367	0					
ANR	1097360	ArrayIndexing	p -> linesize [ 0 ]		1096367	1					
ANR	1097361	PtrMemberAccess	p -> linesize		1096367	0					
ANR	1097362	Identifier	p		1096367	0					
ANR	1097363	Identifier	linesize		1096367	1					
ANR	1097364	PrimaryExpression	0		1096367	1					
ANR	1097365	ElseStatement	else		1096367	0					
ANR	1097366	CompoundStatement		367:11:5255:5255	1096367	0					
ANR	1097367	ExpressionStatement	ptr = p -> data [ 0 ]	375:8:5439:5455	1096367	0	True				
ANR	1097368	AssignmentExpression	ptr = p -> data [ 0 ]		1096367	0		=			
ANR	1097369	Identifier	ptr		1096367	0					
ANR	1097370	ArrayIndexing	p -> data [ 0 ]		1096367	1					
ANR	1097371	PtrMemberAccess	p -> data		1096367	0					
ANR	1097372	Identifier	p		1096367	0					
ANR	1097373	Identifier	data		1096367	1					
ANR	1097374	PrimaryExpression	0		1096367	1					
ANR	1097375	ExpressionStatement	linesize = p -> linesize [ 0 ]	377:8:5466:5491	1096367	1	True				
ANR	1097376	AssignmentExpression	linesize = p -> linesize [ 0 ]		1096367	0		=			
ANR	1097377	Identifier	linesize		1096367	0					
ANR	1097378	ArrayIndexing	p -> linesize [ 0 ]		1096367	1					
ANR	1097379	PtrMemberAccess	p -> linesize		1096367	0					
ANR	1097380	Identifier	p		1096367	0					
ANR	1097381	Identifier	linesize		1096367	1					
ANR	1097382	PrimaryExpression	0		1096367	1					
ANR	1097383	IfStatement	if ( avctx -> pix_fmt == PIX_FMT_PAL8 )		1096367	46					
ANR	1097384	Condition	avctx -> pix_fmt == PIX_FMT_PAL8	383:7:5510:5539	1096367	0	True				
ANR	1097385	EqualityExpression	avctx -> pix_fmt == PIX_FMT_PAL8		1096367	0		==			
ANR	1097386	PtrMemberAccess	avctx -> pix_fmt		1096367	0					
ANR	1097387	Identifier	avctx		1096367	0					
ANR	1097388	Identifier	pix_fmt		1096367	1					
ANR	1097389	Identifier	PIX_FMT_PAL8		1096367	1					
ANR	1097390	CompoundStatement		377:38:5368:5368	1096367	1					
ANR	1097391	ExpressionStatement	buf = buf0 + 14 + ihsize	385:8:5552:5576	1096367	0	True				
ANR	1097392	AssignmentExpression	buf = buf0 + 14 + ihsize		1096367	0		=			
ANR	1097393	Identifier	buf		1096367	0					
ANR	1097394	AdditiveExpression	buf0 + 14 + ihsize		1096367	1		+			
ANR	1097395	Identifier	buf0		1096367	0					
ANR	1097396	AdditiveExpression	14 + ihsize		1096367	1		+			
ANR	1097397	PrimaryExpression	14		1096367	0					
ANR	1097398	Identifier	ihsize		1096367	1					
ANR	1097399	IfStatement	if ( ( hsize - ihsize - 14 ) >> depth < 4 )		1096367	1					
ANR	1097400	Condition	( hsize - ihsize - 14 ) >> depth < 4	387:11:5609:5636	1096367	0	True				
ANR	1097401	RelationalExpression	( hsize - ihsize - 14 ) >> depth < 4		1096367	0		<			
ANR	1097402	ShiftExpression	( hsize - ihsize - 14 ) >> depth		1096367	0		>>			
ANR	1097403	AdditiveExpression	hsize - ihsize - 14		1096367	0		-			
ANR	1097404	Identifier	hsize		1096367	0					
ANR	1097405	AdditiveExpression	ihsize - 14		1096367	1		-			
ANR	1097406	Identifier	ihsize		1096367	0					
ANR	1097407	PrimaryExpression	14		1096367	1					
ANR	1097408	Identifier	depth		1096367	1					
ANR	1097409	PrimaryExpression	4		1096367	1					
ANR	1097410	CompoundStatement		381:40:5465:5465	1096367	1					
ANR	1097411	ForStatement	for ( i = 0 ; i < ( 1 << depth ) ; i ++ )		1096367	0					
ANR	1097412	ForInit	i = 0 ;	389:16:5699:5704	1096367	0	True				
ANR	1097413	AssignmentExpression	i = 0		1096367	0		=			
ANR	1097414	Identifier	i		1096367	0					
ANR	1097415	PrimaryExpression	0		1096367	1					
ANR	1097416	Condition	i < ( 1 << depth )	389:23:5706:5721	1096367	1	True				
ANR	1097417	RelationalExpression	i < ( 1 << depth )		1096367	0		<			
ANR	1097418	Identifier	i		1096367	0					
ANR	1097419	ShiftExpression	1 << depth		1096367	1		<<			
ANR	1097420	PrimaryExpression	1		1096367	0					
ANR	1097421	Identifier	depth		1096367	1					
ANR	1097422	PostIncDecOperationExpression	i ++	389:41:5724:5726	1096367	2	True				
ANR	1097423	Identifier	i		1096367	0					
ANR	1097424	IncDec	++		1096367	1					
ANR	1097425	ExpressionStatement	( ( uint32_t * ) p -> data [ 1 ] ) [ i ] = bytestream_get_le24 ( & buf )	391:16:5746:5800	1096367	3	True				
ANR	1097426	AssignmentExpression	( ( uint32_t * ) p -> data [ 1 ] ) [ i ] = bytestream_get_le24 ( & buf )		1096367	0		=			
ANR	1097427	ArrayIndexing	( ( uint32_t * ) p -> data [ 1 ] ) [ i ]		1096367	0					
ANR	1097428	CastExpression	( uint32_t * ) p -> data [ 1 ]		1096367	0					
ANR	1097429	CastTarget	uint32_t *		1096367	0					
ANR	1097430	ArrayIndexing	p -> data [ 1 ]		1096367	1					
ANR	1097431	PtrMemberAccess	p -> data		1096367	0					
ANR	1097432	Identifier	p		1096367	0					
ANR	1097433	Identifier	data		1096367	1					
ANR	1097434	PrimaryExpression	1		1096367	1					
ANR	1097435	Identifier	i		1096367	1					
ANR	1097436	CallExpression	bytestream_get_le24 ( & buf )		1096367	1					
ANR	1097437	Callee	bytestream_get_le24		1096367	0					
ANR	1097438	Identifier	bytestream_get_le24		1096367	0					
ANR	1097439	ArgumentList	& buf		1096367	1					
ANR	1097440	Argument	& buf		1096367	0					
ANR	1097441	UnaryOperationExpression	& buf		1096367	0					
ANR	1097442	UnaryOperator	&		1096367	0					
ANR	1097443	Identifier	buf		1096367	1					
ANR	1097444	ElseStatement	else		1096367	0					
ANR	1097445	CompoundStatement		387:13:5643:5643	1096367	0					
ANR	1097446	ForStatement	for ( i = 0 ; i < ( 1 << depth ) ; i ++ )		1096367	0					
ANR	1097447	ForInit	i = 0 ;	395:16:5835:5840	1096367	0	True				
ANR	1097448	AssignmentExpression	i = 0		1096367	0		=			
ANR	1097449	Identifier	i		1096367	0					
ANR	1097450	PrimaryExpression	0		1096367	1					
ANR	1097451	Condition	i < ( 1 << depth )	395:23:5842:5857	1096367	1	True				
ANR	1097452	RelationalExpression	i < ( 1 << depth )		1096367	0		<			
ANR	1097453	Identifier	i		1096367	0					
ANR	1097454	ShiftExpression	1 << depth		1096367	1		<<			
ANR	1097455	PrimaryExpression	1		1096367	0					
ANR	1097456	Identifier	depth		1096367	1					
ANR	1097457	PostIncDecOperationExpression	i ++	395:41:5860:5862	1096367	2	True				
ANR	1097458	Identifier	i		1096367	0					
ANR	1097459	IncDec	++		1096367	1					
ANR	1097460	ExpressionStatement	( ( uint32_t * ) p -> data [ 1 ] ) [ i ] = bytestream_get_le32 ( & buf )	397:16:5882:5936	1096367	3	True				
ANR	1097461	AssignmentExpression	( ( uint32_t * ) p -> data [ 1 ] ) [ i ] = bytestream_get_le32 ( & buf )		1096367	0		=			
ANR	1097462	ArrayIndexing	( ( uint32_t * ) p -> data [ 1 ] ) [ i ]		1096367	0					
ANR	1097463	CastExpression	( uint32_t * ) p -> data [ 1 ]		1096367	0					
ANR	1097464	CastTarget	uint32_t *		1096367	0					
ANR	1097465	ArrayIndexing	p -> data [ 1 ]		1096367	1					
ANR	1097466	PtrMemberAccess	p -> data		1096367	0					
ANR	1097467	Identifier	p		1096367	0					
ANR	1097468	Identifier	data		1096367	1					
ANR	1097469	PrimaryExpression	1		1096367	1					
ANR	1097470	Identifier	i		1096367	1					
ANR	1097471	CallExpression	bytestream_get_le32 ( & buf )		1096367	1					
ANR	1097472	Callee	bytestream_get_le32		1096367	0					
ANR	1097473	Identifier	bytestream_get_le32		1096367	0					
ANR	1097474	ArgumentList	& buf		1096367	1					
ANR	1097475	Argument	& buf		1096367	0					
ANR	1097476	UnaryOperationExpression	& buf		1096367	0					
ANR	1097477	UnaryOperator	&		1096367	0					
ANR	1097478	Identifier	buf		1096367	1					
ANR	1097479	ExpressionStatement	buf = buf0 + hsize	401:8:5958:5976	1096367	2	True				
ANR	1097480	AssignmentExpression	buf = buf0 + hsize		1096367	0		=			
ANR	1097481	Identifier	buf		1096367	0					
ANR	1097482	AdditiveExpression	buf0 + hsize		1096367	1		+			
ANR	1097483	Identifier	buf0		1096367	0					
ANR	1097484	Identifier	hsize		1096367	1					
ANR	1097485	IfStatement	if ( comp == BMP_RLE4 || comp == BMP_RLE8 )		1096367	47					
ANR	1097486	Condition	comp == BMP_RLE4 || comp == BMP_RLE8	405:7:5993:6028	1096367	0	True				
ANR	1097487	OrExpression	comp == BMP_RLE4 || comp == BMP_RLE8		1096367	0		||			
ANR	1097488	EqualityExpression	comp == BMP_RLE4		1096367	0		==			
ANR	1097489	Identifier	comp		1096367	0					
ANR	1097490	Identifier	BMP_RLE4		1096367	1					
ANR	1097491	EqualityExpression	comp == BMP_RLE8		1096367	1		==			
ANR	1097492	Identifier	comp		1096367	0					
ANR	1097493	Identifier	BMP_RLE8		1096367	1					
ANR	1097494	CompoundStatement		399:44:5857:5857	1096367	1					
ANR	1097495	ExpressionStatement	"ff_msrle_decode ( avctx , p , depth , buf , dsize )"	407:8:6041:6085	1096367	0	True				
ANR	1097496	CallExpression	"ff_msrle_decode ( avctx , p , depth , buf , dsize )"		1096367	0					
ANR	1097497	Callee	ff_msrle_decode		1096367	0					
ANR	1097498	Identifier	ff_msrle_decode		1096367	0					
ANR	1097499	ArgumentList	avctx		1096367	1					
ANR	1097500	Argument	avctx		1096367	0					
ANR	1097501	Identifier	avctx		1096367	0					
ANR	1097502	Argument	p		1096367	1					
ANR	1097503	Identifier	p		1096367	0					
ANR	1097504	Argument	depth		1096367	2					
ANR	1097505	Identifier	depth		1096367	0					
ANR	1097506	Argument	buf		1096367	3					
ANR	1097507	Identifier	buf		1096367	0					
ANR	1097508	Argument	dsize		1096367	4					
ANR	1097509	Identifier	dsize		1096367	0					
ANR	1097510	ElseStatement	else		1096367	0					
ANR	1097511	CompoundStatement		403:9:5924:5924	1096367	0					
ANR	1097512	SwitchStatement	switch ( depth )		1096367	0					
ANR	1097513	Condition	depth	411:15:6115:6119	1096367	0	True				
ANR	1097514	Identifier	depth		1096367	0					
ANR	1097515	CompoundStatement		405:21:5948:5948	1096367	1					
ANR	1097516	Label	case 1 :	413:8:6132:6138	1096367	0	True				
ANR	1097517	ForStatement	for ( i = 0 ; i < avctx -> height ; i ++ )		1096367	1					
ANR	1097518	ForInit	i = 0 ;	415:16:6157:6162	1096367	0	True				
ANR	1097519	AssignmentExpression	i = 0		1096367	0		=			
ANR	1097520	Identifier	i		1096367	0					
ANR	1097521	PrimaryExpression	0		1096367	1					
ANR	1097522	Condition	i < avctx -> height	415:23:6164:6180	1096367	1	True				
ANR	1097523	RelationalExpression	i < avctx -> height		1096367	0		<			
ANR	1097524	Identifier	i		1096367	0					
ANR	1097525	PtrMemberAccess	avctx -> height		1096367	1					
ANR	1097526	Identifier	avctx		1096367	0					
ANR	1097527	Identifier	height		1096367	1					
ANR	1097528	PostIncDecOperationExpression	i ++	415:42:6183:6185	1096367	2	True				
ANR	1097529	Identifier	i		1096367	0					
ANR	1097530	IncDec	++		1096367	1					
ANR	1097531	CompoundStatement		409:46:6014:6014	1096367	3					
ANR	1097532	ExpressionStatement	"memcpy ( ptr , buf , n )"	417:16:6206:6225	1096367	0	True				
ANR	1097533	CallExpression	"memcpy ( ptr , buf , n )"		1096367	0					
ANR	1097534	Callee	memcpy		1096367	0					
ANR	1097535	Identifier	memcpy		1096367	0					
ANR	1097536	ArgumentList	ptr		1096367	1					
ANR	1097537	Argument	ptr		1096367	0					
ANR	1097538	Identifier	ptr		1096367	0					
ANR	1097539	Argument	buf		1096367	1					
ANR	1097540	Identifier	buf		1096367	0					
ANR	1097541	Argument	n		1096367	2					
ANR	1097542	Identifier	n		1096367	0					
ANR	1097543	ExpressionStatement	buf += n	419:16:6244:6252	1096367	1	True				
ANR	1097544	AssignmentExpression	buf += n		1096367	0		+=			
ANR	1097545	Identifier	buf		1096367	0					
ANR	1097546	Identifier	n		1096367	1					
ANR	1097547	ExpressionStatement	ptr += linesize	421:16:6271:6286	1096367	2	True				
ANR	1097548	AssignmentExpression	ptr += linesize		1096367	0		+=			
ANR	1097549	Identifier	ptr		1096367	0					
ANR	1097550	Identifier	linesize		1096367	1					
ANR	1097551	BreakStatement	break ;	425:12:6316:6321	1096367	2	True				
ANR	1097552	Label	case 4 :	427:8:6332:6338	1096367	3	True				
ANR	1097553	ForStatement	for ( i = 0 ; i < avctx -> height ; i ++ )		1096367	4					
ANR	1097554	ForInit	i = 0 ;	429:16:6357:6362	1096367	0	True				
ANR	1097555	AssignmentExpression	i = 0		1096367	0		=			
ANR	1097556	Identifier	i		1096367	0					
ANR	1097557	PrimaryExpression	0		1096367	1					
ANR	1097558	Condition	i < avctx -> height	429:23:6364:6380	1096367	1	True				
ANR	1097559	RelationalExpression	i < avctx -> height		1096367	0		<			
ANR	1097560	Identifier	i		1096367	0					
ANR	1097561	PtrMemberAccess	avctx -> height		1096367	1					
ANR	1097562	Identifier	avctx		1096367	0					
ANR	1097563	Identifier	height		1096367	1					
ANR	1097564	PostIncDecOperationExpression	i ++	429:42:6383:6385	1096367	2	True				
ANR	1097565	Identifier	i		1096367	0					
ANR	1097566	IncDec	++		1096367	1					
ANR	1097567	CompoundStatement		425:16:6233:6238	1096367	3					
ANR	1097568	IdentifierDeclStatement	int j ;	431:16:6406:6411	1096367	0	True				
ANR	1097569	IdentifierDecl	j		1096367	0					
ANR	1097570	IdentifierDeclType	int		1096367	0					
ANR	1097571	Identifier	j		1096367	1					
ANR	1097572	ForStatement	for ( j = 0 ; j < n ; j ++ )		1096367	1					
ANR	1097573	ForInit	j = 0 ;	433:20:6434:6439	1096367	0	True				
ANR	1097574	AssignmentExpression	j = 0		1096367	0		=			
ANR	1097575	Identifier	j		1096367	0					
ANR	1097576	PrimaryExpression	0		1096367	1					
ANR	1097577	Condition	j < n	433:27:6441:6445	1096367	1	True				
ANR	1097578	RelationalExpression	j < n		1096367	0		<			
ANR	1097579	Identifier	j		1096367	0					
ANR	1097580	Identifier	n		1096367	1					
ANR	1097581	PostIncDecOperationExpression	j ++	433:34:6448:6450	1096367	2	True				
ANR	1097582	Identifier	j		1096367	0					
ANR	1097583	IncDec	++		1096367	1					
ANR	1097584	CompoundStatement		427:38:6279:6279	1096367	3					
ANR	1097585	ExpressionStatement	ptr [ j * 2 + 0 ] = ( buf [ j ] >> 4 ) & 0xF	435:20:6475:6507	1096367	0	True				
ANR	1097586	AssignmentExpression	ptr [ j * 2 + 0 ] = ( buf [ j ] >> 4 ) & 0xF		1096367	0		=			
ANR	1097587	ArrayIndexing	ptr [ j * 2 + 0 ]		1096367	0					
ANR	1097588	Identifier	ptr		1096367	0					
ANR	1097589	AdditiveExpression	j * 2 + 0		1096367	1		+			
ANR	1097590	MultiplicativeExpression	j * 2		1096367	0		*			
ANR	1097591	Identifier	j		1096367	0					
ANR	1097592	PrimaryExpression	2		1096367	1					
ANR	1097593	PrimaryExpression	0		1096367	1					
ANR	1097594	BitAndExpression	( buf [ j ] >> 4 ) & 0xF		1096367	1		&			
ANR	1097595	ShiftExpression	buf [ j ] >> 4		1096367	0		>>			
ANR	1097596	ArrayIndexing	buf [ j ]		1096367	0					
ANR	1097597	Identifier	buf		1096367	0					
ANR	1097598	Identifier	j		1096367	1					
ANR	1097599	PrimaryExpression	4		1096367	1					
ANR	1097600	PrimaryExpression	0xF		1096367	1					
ANR	1097601	ExpressionStatement	ptr [ j * 2 + 1 ] = buf [ j ] & 0xF	437:20:6530:6555	1096367	1	True				
ANR	1097602	AssignmentExpression	ptr [ j * 2 + 1 ] = buf [ j ] & 0xF		1096367	0		=			
ANR	1097603	ArrayIndexing	ptr [ j * 2 + 1 ]		1096367	0					
ANR	1097604	Identifier	ptr		1096367	0					
ANR	1097605	AdditiveExpression	j * 2 + 1		1096367	1		+			
ANR	1097606	MultiplicativeExpression	j * 2		1096367	0		*			
ANR	1097607	Identifier	j		1096367	0					
ANR	1097608	PrimaryExpression	2		1096367	1					
ANR	1097609	PrimaryExpression	1		1096367	1					
ANR	1097610	BitAndExpression	buf [ j ] & 0xF		1096367	1		&			
ANR	1097611	ArrayIndexing	buf [ j ]		1096367	0					
ANR	1097612	Identifier	buf		1096367	0					
ANR	1097613	Identifier	j		1096367	1					
ANR	1097614	PrimaryExpression	0xF		1096367	1					
ANR	1097615	ExpressionStatement	buf += n	441:16:6593:6601	1096367	2	True				
ANR	1097616	AssignmentExpression	buf += n		1096367	0		+=			
ANR	1097617	Identifier	buf		1096367	0					
ANR	1097618	Identifier	n		1096367	1					
ANR	1097619	ExpressionStatement	ptr += linesize	443:16:6620:6635	1096367	3	True				
ANR	1097620	AssignmentExpression	ptr += linesize		1096367	0		+=			
ANR	1097621	Identifier	ptr		1096367	0					
ANR	1097622	Identifier	linesize		1096367	1					
ANR	1097623	BreakStatement	break ;	447:12:6665:6670	1096367	5	True				
ANR	1097624	Label	case 8 :	449:8:6681:6687	1096367	6	True				
ANR	1097625	ForStatement	for ( i = 0 ; i < avctx -> height ; i ++ )		1096367	7					
ANR	1097626	ForInit	i = 0 ;	451:16:6706:6711	1096367	0	True				
ANR	1097627	AssignmentExpression	i = 0		1096367	0		=			
ANR	1097628	Identifier	i		1096367	0					
ANR	1097629	PrimaryExpression	0		1096367	1					
ANR	1097630	Condition	i < avctx -> height	451:23:6713:6729	1096367	1	True				
ANR	1097631	RelationalExpression	i < avctx -> height		1096367	0		<			
ANR	1097632	Identifier	i		1096367	0					
ANR	1097633	PtrMemberAccess	avctx -> height		1096367	1					
ANR	1097634	Identifier	avctx		1096367	0					
ANR	1097635	Identifier	height		1096367	1					
ANR	1097636	PostIncDecOperationExpression	i ++	451:42:6732:6734	1096367	2	True				
ANR	1097637	Identifier	i		1096367	0					
ANR	1097638	IncDec	++		1096367	1					
ANR	1097639	CompoundStatement		445:46:6563:6563	1096367	3					
ANR	1097640	ExpressionStatement	"memcpy ( ptr , buf , avctx -> width )"	453:16:6755:6785	1096367	0	True				
ANR	1097641	CallExpression	"memcpy ( ptr , buf , avctx -> width )"		1096367	0					
ANR	1097642	Callee	memcpy		1096367	0					
ANR	1097643	Identifier	memcpy		1096367	0					
ANR	1097644	ArgumentList	ptr		1096367	1					
ANR	1097645	Argument	ptr		1096367	0					
ANR	1097646	Identifier	ptr		1096367	0					
ANR	1097647	Argument	buf		1096367	1					
ANR	1097648	Identifier	buf		1096367	0					
ANR	1097649	Argument	avctx -> width		1096367	2					
ANR	1097650	PtrMemberAccess	avctx -> width		1096367	0					
ANR	1097651	Identifier	avctx		1096367	0					
ANR	1097652	Identifier	width		1096367	1					
ANR	1097653	ExpressionStatement	buf += n	455:16:6804:6812	1096367	1	True				
ANR	1097654	AssignmentExpression	buf += n		1096367	0		+=			
ANR	1097655	Identifier	buf		1096367	0					
ANR	1097656	Identifier	n		1096367	1					
ANR	1097657	ExpressionStatement	ptr += linesize	457:16:6831:6846	1096367	2	True				
ANR	1097658	AssignmentExpression	ptr += linesize		1096367	0		+=			
ANR	1097659	Identifier	ptr		1096367	0					
ANR	1097660	Identifier	linesize		1096367	1					
ANR	1097661	BreakStatement	break ;	461:12:6876:6881	1096367	8	True				
ANR	1097662	Label	case 24 :	463:8:6892:6899	1096367	9	True				
ANR	1097663	ForStatement	for ( i = 0 ; i < avctx -> height ; i ++ )		1096367	10					
ANR	1097664	ForInit	i = 0 ;	465:16:6918:6923	1096367	0	True				
ANR	1097665	AssignmentExpression	i = 0		1096367	0		=			
ANR	1097666	Identifier	i		1096367	0					
ANR	1097667	PrimaryExpression	0		1096367	1					
ANR	1097668	Condition	i < avctx -> height	465:23:6925:6941	1096367	1	True				
ANR	1097669	RelationalExpression	i < avctx -> height		1096367	0		<			
ANR	1097670	Identifier	i		1096367	0					
ANR	1097671	PtrMemberAccess	avctx -> height		1096367	1					
ANR	1097672	Identifier	avctx		1096367	0					
ANR	1097673	Identifier	height		1096367	1					
ANR	1097674	PostIncDecOperationExpression	i ++	465:42:6944:6946	1096367	2	True				
ANR	1097675	Identifier	i		1096367	0					
ANR	1097676	IncDec	++		1096367	1					
ANR	1097677	CompoundStatement		459:46:6775:6775	1096367	3					
ANR	1097678	ExpressionStatement	"memcpy ( ptr , buf , avctx -> width * ( depth >> 3 ) )"	467:16:6967:7008	1096367	0	True				
ANR	1097679	CallExpression	"memcpy ( ptr , buf , avctx -> width * ( depth >> 3 ) )"		1096367	0					
ANR	1097680	Callee	memcpy		1096367	0					
ANR	1097681	Identifier	memcpy		1096367	0					
ANR	1097682	ArgumentList	ptr		1096367	1					
ANR	1097683	Argument	ptr		1096367	0					
ANR	1097684	Identifier	ptr		1096367	0					
ANR	1097685	Argument	buf		1096367	1					
ANR	1097686	Identifier	buf		1096367	0					
ANR	1097687	Argument	avctx -> width * ( depth >> 3 )		1096367	2					
ANR	1097688	MultiplicativeExpression	avctx -> width * ( depth >> 3 )		1096367	0		*			
ANR	1097689	PtrMemberAccess	avctx -> width		1096367	0					
ANR	1097690	Identifier	avctx		1096367	0					
ANR	1097691	Identifier	width		1096367	1					
ANR	1097692	ShiftExpression	depth >> 3		1096367	1		>>			
ANR	1097693	Identifier	depth		1096367	0					
ANR	1097694	PrimaryExpression	3		1096367	1					
ANR	1097695	ExpressionStatement	buf += n	469:16:7027:7035	1096367	1	True				
ANR	1097696	AssignmentExpression	buf += n		1096367	0		+=			
ANR	1097697	Identifier	buf		1096367	0					
ANR	1097698	Identifier	n		1096367	1					
ANR	1097699	ExpressionStatement	ptr += linesize	471:16:7054:7069	1096367	2	True				
ANR	1097700	AssignmentExpression	ptr += linesize		1096367	0		+=			
ANR	1097701	Identifier	ptr		1096367	0					
ANR	1097702	Identifier	linesize		1096367	1					
ANR	1097703	BreakStatement	break ;	475:12:7099:7104	1096367	11	True				
ANR	1097704	Label	case 16 :	477:8:7115:7122	1096367	12	True				
ANR	1097705	ForStatement	for ( i = 0 ; i < avctx -> height ; i ++ )		1096367	13					
ANR	1097706	ForInit	i = 0 ;	479:16:7141:7146	1096367	0	True				
ANR	1097707	AssignmentExpression	i = 0		1096367	0		=			
ANR	1097708	Identifier	i		1096367	0					
ANR	1097709	PrimaryExpression	0		1096367	1					
ANR	1097710	Condition	i < avctx -> height	479:23:7148:7164	1096367	1	True				
ANR	1097711	RelationalExpression	i < avctx -> height		1096367	0		<			
ANR	1097712	Identifier	i		1096367	0					
ANR	1097713	PtrMemberAccess	avctx -> height		1096367	1					
ANR	1097714	Identifier	avctx		1096367	0					
ANR	1097715	Identifier	height		1096367	1					
ANR	1097716	PostIncDecOperationExpression	i ++	479:42:7167:7169	1096367	2	True				
ANR	1097717	Identifier	i		1096367	0					
ANR	1097718	IncDec	++		1096367	1					
ANR	1097719	CompoundStatement		477:16:7080:7112	1096367	3					
ANR	1097720	IdentifierDeclStatement	const uint16_t * src = ( const uint16_t * ) buf ;	481:16:7190:7234	1096367	0	True				
ANR	1097721	IdentifierDecl	* src = ( const uint16_t * ) buf		1096367	0					
ANR	1097722	IdentifierDeclType	const uint16_t *		1096367	0					
ANR	1097723	Identifier	src		1096367	1					
ANR	1097724	AssignmentExpression	* src = ( const uint16_t * ) buf		1096367	2		=			
ANR	1097725	Identifier	src		1096367	0					
ANR	1097726	CastExpression	( const uint16_t * ) buf		1096367	1					
ANR	1097727	CastTarget	const uint16_t *		1096367	0					
ANR	1097728	Identifier	buf		1096367	1					
ANR	1097729	IdentifierDeclStatement	uint16_t * dst = ( uint16_t * ) ptr ;	483:16:7253:7285	1096367	1	True				
ANR	1097730	IdentifierDecl	* dst = ( uint16_t * ) ptr		1096367	0					
ANR	1097731	IdentifierDeclType	uint16_t *		1096367	0					
ANR	1097732	Identifier	dst		1096367	1					
ANR	1097733	AssignmentExpression	* dst = ( uint16_t * ) ptr		1096367	2		=			
ANR	1097734	Identifier	dst		1096367	0					
ANR	1097735	CastExpression	( uint16_t * ) ptr		1096367	1					
ANR	1097736	CastTarget	uint16_t *		1096367	0					
ANR	1097737	Identifier	ptr		1096367	1					
ANR	1097738	ForStatement	for ( j = 0 ; j < avctx -> width ; j ++ )		1096367	2					
ANR	1097739	ForInit	j = 0 ;	487:20:7310:7315	1096367	0	True				
ANR	1097740	AssignmentExpression	j = 0		1096367	0		=			
ANR	1097741	Identifier	j		1096367	0					
ANR	1097742	PrimaryExpression	0		1096367	1					
ANR	1097743	Condition	j < avctx -> width	487:27:7317:7332	1096367	1	True				
ANR	1097744	RelationalExpression	j < avctx -> width		1096367	0		<			
ANR	1097745	Identifier	j		1096367	0					
ANR	1097746	PtrMemberAccess	avctx -> width		1096367	1					
ANR	1097747	Identifier	avctx		1096367	0					
ANR	1097748	Identifier	width		1096367	1					
ANR	1097749	PostIncDecOperationExpression	j ++	487:45:7335:7337	1096367	2	True				
ANR	1097750	Identifier	j		1096367	0					
ANR	1097751	IncDec	++		1096367	1					
ANR	1097752	ExpressionStatement	* dst ++ = le2me_16 ( * src ++ )	489:20:7361:7386	1096367	3	True				
ANR	1097753	AssignmentExpression	* dst ++ = le2me_16 ( * src ++ )		1096367	0		=			
ANR	1097754	UnaryOperationExpression	* dst ++		1096367	0					
ANR	1097755	UnaryOperator	*		1096367	0					
ANR	1097756	PostIncDecOperationExpression	dst ++		1096367	1					
ANR	1097757	Identifier	dst		1096367	0					
ANR	1097758	IncDec	++		1096367	1					
ANR	1097759	CallExpression	le2me_16 ( * src ++ )		1096367	1					
ANR	1097760	Callee	le2me_16		1096367	0					
ANR	1097761	Identifier	le2me_16		1096367	0					
ANR	1097762	ArgumentList	* src ++		1096367	1					
ANR	1097763	Argument	* src ++		1096367	0					
ANR	1097764	UnaryOperationExpression	* src ++		1096367	0					
ANR	1097765	UnaryOperator	*		1096367	0					
ANR	1097766	PostIncDecOperationExpression	src ++		1096367	1					
ANR	1097767	Identifier	src		1096367	0					
ANR	1097768	IncDec	++		1096367	1					
ANR	1097769	ExpressionStatement	buf += n	493:16:7407:7415	1096367	3	True				
ANR	1097770	AssignmentExpression	buf += n		1096367	0		+=			
ANR	1097771	Identifier	buf		1096367	0					
ANR	1097772	Identifier	n		1096367	1					
ANR	1097773	ExpressionStatement	ptr += linesize	495:16:7434:7449	1096367	4	True				
ANR	1097774	AssignmentExpression	ptr += linesize		1096367	0		+=			
ANR	1097775	Identifier	ptr		1096367	0					
ANR	1097776	Identifier	linesize		1096367	1					
ANR	1097777	BreakStatement	break ;	499:12:7479:7484	1096367	14	True				
ANR	1097778	Label	case 32 :	501:8:7495:7502	1096367	15	True				
ANR	1097779	ForStatement	for ( i = 0 ; i < avctx -> height ; i ++ )		1096367	16					
ANR	1097780	ForInit	i = 0 ;	503:16:7521:7526	1096367	0	True				
ANR	1097781	AssignmentExpression	i = 0		1096367	0		=			
ANR	1097782	Identifier	i		1096367	0					
ANR	1097783	PrimaryExpression	0		1096367	1					
ANR	1097784	Condition	i < avctx -> height	503:23:7528:7544	1096367	1	True				
ANR	1097785	RelationalExpression	i < avctx -> height		1096367	0		<			
ANR	1097786	Identifier	i		1096367	0					
ANR	1097787	PtrMemberAccess	avctx -> height		1096367	1					
ANR	1097788	Identifier	avctx		1096367	0					
ANR	1097789	Identifier	height		1096367	1					
ANR	1097790	PostIncDecOperationExpression	i ++	503:42:7547:7549	1096367	2	True				
ANR	1097791	Identifier	i		1096367	0					
ANR	1097792	IncDec	++		1096367	1					
ANR	1097793	CompoundStatement		501:16:7440:7458	1096367	3					
ANR	1097794	IdentifierDeclStatement	const uint8_t * src = buf ;	505:16:7570:7594	1096367	0	True				
ANR	1097795	IdentifierDecl	* src = buf		1096367	0					
ANR	1097796	IdentifierDeclType	const uint8_t *		1096367	0					
ANR	1097797	Identifier	src		1096367	1					
ANR	1097798	AssignmentExpression	* src = buf		1096367	2		=			
ANR	1097799	Identifier	buf		1096367	0					
ANR	1097800	Identifier	buf		1096367	1					
ANR	1097801	IdentifierDeclStatement	uint8_t * dst = ptr ;	507:16:7613:7631	1096367	1	True				
ANR	1097802	IdentifierDecl	* dst = ptr		1096367	0					
ANR	1097803	IdentifierDeclType	uint8_t *		1096367	0					
ANR	1097804	Identifier	dst		1096367	1					
ANR	1097805	AssignmentExpression	* dst = ptr		1096367	2		=			
ANR	1097806	Identifier	ptr		1096367	0					
ANR	1097807	Identifier	ptr		1096367	1					
ANR	1097808	ForStatement	for ( j = 0 ; j < avctx -> width ; j ++ )		1096367	2					
ANR	1097809	ForInit	j = 0 ;	511:20:7656:7661	1096367	0	True				
ANR	1097810	AssignmentExpression	j = 0		1096367	0		=			
ANR	1097811	Identifier	j		1096367	0					
ANR	1097812	PrimaryExpression	0		1096367	1					
ANR	1097813	Condition	j < avctx -> width	511:27:7663:7678	1096367	1	True				
ANR	1097814	RelationalExpression	j < avctx -> width		1096367	0		<			
ANR	1097815	Identifier	j		1096367	0					
ANR	1097816	PtrMemberAccess	avctx -> width		1096367	1					
ANR	1097817	Identifier	avctx		1096367	0					
ANR	1097818	Identifier	width		1096367	1					
ANR	1097819	PostIncDecOperationExpression	j ++	511:45:7681:7683	1096367	2	True				
ANR	1097820	Identifier	j		1096367	0					
ANR	1097821	IncDec	++		1096367	1					
ANR	1097822	CompoundStatement		505:49:7512:7512	1096367	3					
ANR	1097823	ExpressionStatement	dst [ 0 ] = src [ rgb [ 2 ] ]	513:20:7708:7728	1096367	0	True				
ANR	1097824	AssignmentExpression	dst [ 0 ] = src [ rgb [ 2 ] ]		1096367	0		=			
ANR	1097825	ArrayIndexing	dst [ 0 ]		1096367	0					
ANR	1097826	Identifier	dst		1096367	0					
ANR	1097827	PrimaryExpression	0		1096367	1					
ANR	1097828	ArrayIndexing	src [ rgb [ 2 ] ]		1096367	1					
ANR	1097829	Identifier	src		1096367	0					
ANR	1097830	ArrayIndexing	rgb [ 2 ]		1096367	1					
ANR	1097831	Identifier	rgb		1096367	0					
ANR	1097832	PrimaryExpression	2		1096367	1					
ANR	1097833	ExpressionStatement	dst [ 1 ] = src [ rgb [ 1 ] ]	515:20:7751:7771	1096367	1	True				
ANR	1097834	AssignmentExpression	dst [ 1 ] = src [ rgb [ 1 ] ]		1096367	0		=			
ANR	1097835	ArrayIndexing	dst [ 1 ]		1096367	0					
ANR	1097836	Identifier	dst		1096367	0					
ANR	1097837	PrimaryExpression	1		1096367	1					
ANR	1097838	ArrayIndexing	src [ rgb [ 1 ] ]		1096367	1					
ANR	1097839	Identifier	src		1096367	0					
ANR	1097840	ArrayIndexing	rgb [ 1 ]		1096367	1					
ANR	1097841	Identifier	rgb		1096367	0					
ANR	1097842	PrimaryExpression	1		1096367	1					
ANR	1097843	ExpressionStatement	dst [ 2 ] = src [ rgb [ 0 ] ]	517:20:7794:7814	1096367	2	True				
ANR	1097844	AssignmentExpression	dst [ 2 ] = src [ rgb [ 0 ] ]		1096367	0		=			
ANR	1097845	ArrayIndexing	dst [ 2 ]		1096367	0					
ANR	1097846	Identifier	dst		1096367	0					
ANR	1097847	PrimaryExpression	2		1096367	1					
ANR	1097848	ArrayIndexing	src [ rgb [ 0 ] ]		1096367	1					
ANR	1097849	Identifier	src		1096367	0					
ANR	1097850	ArrayIndexing	rgb [ 0 ]		1096367	1					
ANR	1097851	Identifier	rgb		1096367	0					
ANR	1097852	PrimaryExpression	0		1096367	1					
ANR	1097853	ExpressionStatement	dst += 3	519:20:7837:7845	1096367	3	True				
ANR	1097854	AssignmentExpression	dst += 3		1096367	0		+=			
ANR	1097855	Identifier	dst		1096367	0					
ANR	1097856	PrimaryExpression	3		1096367	1					
ANR	1097857	ExpressionStatement	src += 4	521:20:7868:7876	1096367	4	True				
ANR	1097858	AssignmentExpression	src += 4		1096367	0		+=			
ANR	1097859	Identifier	src		1096367	0					
ANR	1097860	PrimaryExpression	4		1096367	1					
ANR	1097861	ExpressionStatement	buf += n	527:16:7916:7924	1096367	3	True				
ANR	1097862	AssignmentExpression	buf += n		1096367	0		+=			
ANR	1097863	Identifier	buf		1096367	0					
ANR	1097864	Identifier	n		1096367	1					
ANR	1097865	ExpressionStatement	ptr += linesize	529:16:7943:7958	1096367	4	True				
ANR	1097866	AssignmentExpression	ptr += linesize		1096367	0		+=			
ANR	1097867	Identifier	ptr		1096367	0					
ANR	1097868	Identifier	linesize		1096367	1					
ANR	1097869	BreakStatement	break ;	533:12:7988:7993	1096367	17	True				
ANR	1097870	Label	default :	535:8:8004:8011	1096367	18	True				
ANR	1097871	Identifier	default		1096367	0					
ANR	1097872	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""BMP decoder is broken\\n"" )"	537:12:8026:8080	1096367	19	True				
ANR	1097873	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""BMP decoder is broken\\n"" )"		1096367	0					
ANR	1097874	Callee	av_log		1096367	0					
ANR	1097875	Identifier	av_log		1096367	0					
ANR	1097876	ArgumentList	avctx		1096367	1					
ANR	1097877	Argument	avctx		1096367	0					
ANR	1097878	Identifier	avctx		1096367	0					
ANR	1097879	Argument	AV_LOG_ERROR		1096367	1					
ANR	1097880	Identifier	AV_LOG_ERROR		1096367	0					
ANR	1097881	Argument	"""BMP decoder is broken\\n"""		1096367	2					
ANR	1097882	PrimaryExpression	"""BMP decoder is broken\\n"""		1096367	0					
ANR	1097883	ReturnStatement	return - 1 ;	539:12:8095:8104	1096367	20	True				
ANR	1097884	UnaryOperationExpression	- 1		1096367	0					
ANR	1097885	UnaryOperator	-		1096367	0					
ANR	1097886	PrimaryExpression	1		1096367	1					
ANR	1097887	ExpressionStatement	* picture = s -> picture	547:4:8131:8152	1096367	48	True				
ANR	1097888	AssignmentExpression	* picture = s -> picture		1096367	0		=			
ANR	1097889	UnaryOperationExpression	* picture		1096367	0					
ANR	1097890	UnaryOperator	*		1096367	0					
ANR	1097891	Identifier	picture		1096367	1					
ANR	1097892	PtrMemberAccess	s -> picture		1096367	1					
ANR	1097893	Identifier	s		1096367	0					
ANR	1097894	Identifier	picture		1096367	1					
ANR	1097895	ExpressionStatement	* data_size = sizeof ( AVPicture )	549:4:8159:8189	1096367	49	True				
ANR	1097896	AssignmentExpression	* data_size = sizeof ( AVPicture )		1096367	0		=			
ANR	1097897	UnaryOperationExpression	* data_size		1096367	0					
ANR	1097898	UnaryOperator	*		1096367	0					
ANR	1097899	Identifier	data_size		1096367	1					
ANR	1097900	SizeofExpression	sizeof ( AVPicture )		1096367	1					
ANR	1097901	Sizeof	sizeof		1096367	0					
ANR	1097902	SizeofOperand	AVPicture		1096367	1					
ANR	1097903	ReturnStatement	return buf_size ;	553:4:8198:8213	1096367	50	True				
ANR	1097904	Identifier	buf_size		1096367	0					
ANR	1097905	ReturnType	static int		1096367	1					
ANR	1097906	Identifier	bmp_decode_frame		1096367	2					
ANR	1097907	ParameterList	"AVCodecContext * avctx , void * data , int * data_size , const uint8_t * buf , int buf_size"		1096367	3					
ANR	1097908	Parameter	AVCodecContext * avctx	1:28:28:48	1096367	0	True				
ANR	1097909	ParameterType	AVCodecContext *		1096367	0					
ANR	1097910	Identifier	avctx		1096367	1					
ANR	1097911	Parameter	void * data	3:28:80:89	1096367	1	True				
ANR	1097912	ParameterType	void *		1096367	0					
ANR	1097913	Identifier	data		1096367	1					
ANR	1097914	Parameter	int * data_size	3:40:92:105	1096367	2	True				
ANR	1097915	ParameterType	int *		1096367	0					
ANR	1097916	Identifier	data_size		1096367	1					
ANR	1097917	Parameter	const uint8_t * buf	5:28:137:154	1096367	3	True				
ANR	1097918	ParameterType	const uint8_t *		1096367	0					
ANR	1097919	Identifier	buf		1096367	1					
ANR	1097920	Parameter	int buf_size	5:48:157:168	1096367	4	True				
ANR	1097921	ParameterType	int		1096367	0					
ANR	1097922	Identifier	buf_size		1096367	1					
ANR	1097923	CFGEntryNode	ENTRY		1096367		True				
ANR	1097924	CFGExitNode	EXIT		1096367		True				
ANR	1097925	Symbol	PIX_FMT_GRAY8		1096367						
ANR	1097926	Symbol	data		1096367						
ANR	1097927	Symbol	hsize		1096367						
ANR	1097928	Symbol	BMP_RGB		1096367						
ANR	1097929	Symbol	PIX_FMT_PAL8		1096367						
ANR	1097930	Symbol	PIX_FMT_MONOBLACK		1096367						
ANR	1097931	Symbol	* data_size		1096367						
ANR	1097932	Symbol	* src		1096367						
ANR	1097933	Symbol	* dst		1096367						
ANR	1097934	Symbol	linesize		1096367						
ANR	1097935	Symbol	* p -> data		1096367						
ANR	1097936	Symbol	PIX_FMT_RGB555		1096367						
ANR	1097937	Symbol	* ptr		1096367						
ANR	1097938	Symbol	height		1096367						
ANR	1097939	Symbol	data_size		1096367						
ANR	1097940	Symbol	comp		1096367						
ANR	1097941	Symbol	* * rgb		1096367						
ANR	1097942	Symbol	* buf		1096367						
ANR	1097943	Symbol	buf_size		1096367						
ANR	1097944	Symbol	le2me_16		1096367						
ANR	1097945	Symbol	* * p -> data		1096367						
ANR	1097946	Symbol	p -> linesize		1096367						
ANR	1097947	Symbol	bytestream_get_le16		1096367						
ANR	1097948	Symbol	* * * p		1096367						
ANR	1097949	Symbol	* avctx		1096367						
ANR	1097950	Symbol	buf0		1096367						
ANR	1097951	Symbol	fsize		1096367						
ANR	1097952	Symbol	PIX_FMT_RGB565		1096367						
ANR	1097953	Symbol	* dst ++		1096367						
ANR	1097954	Symbol	* rgb		1096367						
ANR	1097955	Symbol	* src ++		1096367						
ANR	1097956	Symbol	avctx -> pix_fmt		1096367						
ANR	1097957	Symbol	ihsize		1096367						
ANR	1097958	Symbol	p -> reference		1096367						
ANR	1097959	Symbol	dst		1096367						
ANR	1097960	Symbol	p -> data		1096367						
ANR	1097961	Symbol	avctx -> width		1096367						
ANR	1097962	Symbol	PIX_FMT_BGR24		1096367						
ANR	1097963	Symbol	s -> picture		1096367						
ANR	1097964	Symbol	bytestream_get_le24		1096367						
ANR	1097965	Symbol	rgb		1096367						
ANR	1097966	Symbol	BMP_RLE4		1096367						
ANR	1097967	Symbol	dsize		1096367						
ANR	1097968	Symbol	avctx -> height		1096367						
ANR	1097969	Symbol	BMP_RLE8		1096367						
ANR	1097970	Symbol	* * p		1096367						
ANR	1097971	Symbol	avctx		1096367						
ANR	1097972	Symbol	p -> pict_type		1096367						
ANR	1097973	Symbol	& buf		1096367						
ANR	1097974	Symbol	BMP_BITFIELDS		1096367						
ANR	1097975	Symbol	FF_I_TYPE		1096367						
ANR	1097976	Symbol	AV_LOG_ERROR		1096367						
ANR	1097977	Symbol	avctx -> get_buffer		1096367						
ANR	1097978	Symbol	bytestream_get_byte		1096367						
ANR	1097979	Symbol	src		1096367						
ANR	1097980	Symbol	p -> key_frame		1096367						
ANR	1097981	Symbol	i		1096367						
ANR	1097982	Symbol	bytestream_get_le32		1096367						
ANR	1097983	Symbol	j		1096367						
ANR	1097984	Symbol	avctx -> priv_data		1096367						
ANR	1097985	Symbol	* p -> linesize		1096367						
ANR	1097986	Symbol	PIX_FMT_NONE		1096367						
ANR	1097987	Symbol	picture		1096367						
ANR	1097988	Symbol	n		1096367						
ANR	1097989	Symbol	ptr		1096367						
ANR	1097990	Symbol	p		1096367						
ANR	1097991	Symbol	buf		1096367						
ANR	1097992	Symbol	s		1096367						
ANR	1097993	Symbol	depth		1096367						
ANR	1097994	Symbol	* i		1096367						
ANR	1097995	Symbol	& s -> picture		1096367						
ANR	1097996	Symbol	* j		1096367						
ANR	1097997	Symbol	~3		1096367						
ANR	1097998	Symbol	width		1096367						
ANR	1097999	Symbol	* picture		1096367						
ANR	1098000	Symbol	* p		1096367						
ANR	1098001	Symbol	* s		1096367						
