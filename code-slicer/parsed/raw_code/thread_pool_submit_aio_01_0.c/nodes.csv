command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8428784	File	/home/p4ultr4n/workplace/ReVeal/raw_code/thread_pool_submit_aio_01_0.c								
ANR	8428785	Function	thread_pool_submit_aio	1:0:0:769							
ANR	8428786	FunctionDef	"thread_pool_submit_aio (ThreadPoolFunc * func , void * arg , BlockDriverCompletionFunc * cb , void * opaque)"		8428785	0					
ANR	8428787	CompoundStatement		5:0:129:769	8428785	0					
ANR	8428788	IdentifierDeclStatement	ThreadPool * pool = & global_pool ;	7:4:136:167	8428785	0	True				
ANR	8428789	IdentifierDecl	* pool = & global_pool		8428785	0					
ANR	8428790	IdentifierDeclType	ThreadPool *		8428785	0					
ANR	8428791	Identifier	pool		8428785	1					
ANR	8428792	AssignmentExpression	* pool = & global_pool		8428785	2		=			
ANR	8428793	Identifier	pool		8428785	0					
ANR	8428794	UnaryOperationExpression	& global_pool		8428785	1					
ANR	8428795	UnaryOperator	&		8428785	0					
ANR	8428796	Identifier	global_pool		8428785	1					
ANR	8428797	IdentifierDeclStatement	ThreadPoolElement * req ;	9:4:174:196	8428785	1	True				
ANR	8428798	IdentifierDecl	* req		8428785	0					
ANR	8428799	IdentifierDeclType	ThreadPoolElement *		8428785	0					
ANR	8428800	Identifier	req		8428785	1					
ANR	8428801	ExpressionStatement	"req = qemu_aio_get ( & thread_pool_aiocb_info , NULL , cb , opaque )"	13:4:205:266	8428785	2	True				
ANR	8428802	AssignmentExpression	"req = qemu_aio_get ( & thread_pool_aiocb_info , NULL , cb , opaque )"		8428785	0		=			
ANR	8428803	Identifier	req		8428785	0					
ANR	8428804	CallExpression	"qemu_aio_get ( & thread_pool_aiocb_info , NULL , cb , opaque )"		8428785	1					
ANR	8428805	Callee	qemu_aio_get		8428785	0					
ANR	8428806	Identifier	qemu_aio_get		8428785	0					
ANR	8428807	ArgumentList	& thread_pool_aiocb_info		8428785	1					
ANR	8428808	Argument	& thread_pool_aiocb_info		8428785	0					
ANR	8428809	UnaryOperationExpression	& thread_pool_aiocb_info		8428785	0					
ANR	8428810	UnaryOperator	&		8428785	0					
ANR	8428811	Identifier	thread_pool_aiocb_info		8428785	1					
ANR	8428812	Argument	NULL		8428785	1					
ANR	8428813	Identifier	NULL		8428785	0					
ANR	8428814	Argument	cb		8428785	2					
ANR	8428815	Identifier	cb		8428785	0					
ANR	8428816	Argument	opaque		8428785	3					
ANR	8428817	Identifier	opaque		8428785	0					
ANR	8428818	ExpressionStatement	req -> func = func	15:4:273:289	8428785	3	True				
ANR	8428819	AssignmentExpression	req -> func = func		8428785	0		=			
ANR	8428820	PtrMemberAccess	req -> func		8428785	0					
ANR	8428821	Identifier	req		8428785	0					
ANR	8428822	Identifier	func		8428785	1					
ANR	8428823	Identifier	func		8428785	1					
ANR	8428824	ExpressionStatement	req -> arg = arg	17:4:296:310	8428785	4	True				
ANR	8428825	AssignmentExpression	req -> arg = arg		8428785	0		=			
ANR	8428826	PtrMemberAccess	req -> arg		8428785	0					
ANR	8428827	Identifier	req		8428785	0					
ANR	8428828	Identifier	arg		8428785	1					
ANR	8428829	Identifier	arg		8428785	1					
ANR	8428830	ExpressionStatement	req -> state = THREAD_QUEUED	19:4:317:343	8428785	5	True				
ANR	8428831	AssignmentExpression	req -> state = THREAD_QUEUED		8428785	0		=			
ANR	8428832	PtrMemberAccess	req -> state		8428785	0					
ANR	8428833	Identifier	req		8428785	0					
ANR	8428834	Identifier	state		8428785	1					
ANR	8428835	Identifier	THREAD_QUEUED		8428785	1					
ANR	8428836	ExpressionStatement	req -> pool = pool	21:4:350:366	8428785	6	True				
ANR	8428837	AssignmentExpression	req -> pool = pool		8428785	0		=			
ANR	8428838	PtrMemberAccess	req -> pool		8428785	0					
ANR	8428839	Identifier	req		8428785	0					
ANR	8428840	Identifier	pool		8428785	1					
ANR	8428841	Identifier	pool		8428785	1					
ANR	8428842	ExpressionStatement	"QLIST_INSERT_HEAD ( & pool -> head , req , all )"	25:4:375:415	8428785	7	True				
ANR	8428843	CallExpression	"QLIST_INSERT_HEAD ( & pool -> head , req , all )"		8428785	0					
ANR	8428844	Callee	QLIST_INSERT_HEAD		8428785	0					
ANR	8428845	Identifier	QLIST_INSERT_HEAD		8428785	0					
ANR	8428846	ArgumentList	& pool -> head		8428785	1					
ANR	8428847	Argument	& pool -> head		8428785	0					
ANR	8428848	UnaryOperationExpression	& pool -> head		8428785	0					
ANR	8428849	UnaryOperator	&		8428785	0					
ANR	8428850	PtrMemberAccess	pool -> head		8428785	1					
ANR	8428851	Identifier	pool		8428785	0					
ANR	8428852	Identifier	head		8428785	1					
ANR	8428853	Argument	req		8428785	1					
ANR	8428854	Identifier	req		8428785	0					
ANR	8428855	Argument	all		8428785	2					
ANR	8428856	Identifier	all		8428785	0					
ANR	8428857	ExpressionStatement	"trace_thread_pool_submit ( pool , req , arg )"	29:4:424:464	8428785	8	True				
ANR	8428858	CallExpression	"trace_thread_pool_submit ( pool , req , arg )"		8428785	0					
ANR	8428859	Callee	trace_thread_pool_submit		8428785	0					
ANR	8428860	Identifier	trace_thread_pool_submit		8428785	0					
ANR	8428861	ArgumentList	pool		8428785	1					
ANR	8428862	Argument	pool		8428785	0					
ANR	8428863	Identifier	pool		8428785	0					
ANR	8428864	Argument	req		8428785	1					
ANR	8428865	Identifier	req		8428785	0					
ANR	8428866	Argument	arg		8428785	2					
ANR	8428867	Identifier	arg		8428785	0					
ANR	8428868	ExpressionStatement	qemu_mutex_lock ( & pool -> lock )	33:4:473:501	8428785	9	True				
ANR	8428869	CallExpression	qemu_mutex_lock ( & pool -> lock )		8428785	0					
ANR	8428870	Callee	qemu_mutex_lock		8428785	0					
ANR	8428871	Identifier	qemu_mutex_lock		8428785	0					
ANR	8428872	ArgumentList	& pool -> lock		8428785	1					
ANR	8428873	Argument	& pool -> lock		8428785	0					
ANR	8428874	UnaryOperationExpression	& pool -> lock		8428785	0					
ANR	8428875	UnaryOperator	&		8428785	0					
ANR	8428876	PtrMemberAccess	pool -> lock		8428785	1					
ANR	8428877	Identifier	pool		8428785	0					
ANR	8428878	Identifier	lock		8428785	1					
ANR	8428879	IfStatement	if ( pool -> idle_threads == 0 && pool -> cur_threads < pool -> max_threads )		8428785	10					
ANR	8428880	Condition	pool -> idle_threads == 0 && pool -> cur_threads < pool -> max_threads	35:8:512:575	8428785	0	True				
ANR	8428881	AndExpression	pool -> idle_threads == 0 && pool -> cur_threads < pool -> max_threads		8428785	0		&&			
ANR	8428882	EqualityExpression	pool -> idle_threads == 0		8428785	0		==			
ANR	8428883	PtrMemberAccess	pool -> idle_threads		8428785	0					
ANR	8428884	Identifier	pool		8428785	0					
ANR	8428885	Identifier	idle_threads		8428785	1					
ANR	8428886	PrimaryExpression	0		8428785	1					
ANR	8428887	RelationalExpression	pool -> cur_threads < pool -> max_threads		8428785	1		<			
ANR	8428888	PtrMemberAccess	pool -> cur_threads		8428785	0					
ANR	8428889	Identifier	pool		8428785	0					
ANR	8428890	Identifier	cur_threads		8428785	1					
ANR	8428891	PtrMemberAccess	pool -> max_threads		8428785	1					
ANR	8428892	Identifier	pool		8428785	0					
ANR	8428893	Identifier	max_threads		8428785	1					
ANR	8428894	CompoundStatement		31:74:448:448	8428785	1					
ANR	8428895	ExpressionStatement	spawn_thread ( pool )	37:8:589:607	8428785	0	True				
ANR	8428896	CallExpression	spawn_thread ( pool )		8428785	0					
ANR	8428897	Callee	spawn_thread		8428785	0					
ANR	8428898	Identifier	spawn_thread		8428785	0					
ANR	8428899	ArgumentList	pool		8428785	1					
ANR	8428900	Argument	pool		8428785	0					
ANR	8428901	Identifier	pool		8428785	0					
ANR	8428902	ExpressionStatement	"QTAILQ_INSERT_TAIL ( & pool -> request_list , req , reqs )"	41:4:621:671	8428785	11	True				
ANR	8428903	CallExpression	"QTAILQ_INSERT_TAIL ( & pool -> request_list , req , reqs )"		8428785	0					
ANR	8428904	Callee	QTAILQ_INSERT_TAIL		8428785	0					
ANR	8428905	Identifier	QTAILQ_INSERT_TAIL		8428785	0					
ANR	8428906	ArgumentList	& pool -> request_list		8428785	1					
ANR	8428907	Argument	& pool -> request_list		8428785	0					
ANR	8428908	UnaryOperationExpression	& pool -> request_list		8428785	0					
ANR	8428909	UnaryOperator	&		8428785	0					
ANR	8428910	PtrMemberAccess	pool -> request_list		8428785	1					
ANR	8428911	Identifier	pool		8428785	0					
ANR	8428912	Identifier	request_list		8428785	1					
ANR	8428913	Argument	req		8428785	1					
ANR	8428914	Identifier	req		8428785	0					
ANR	8428915	Argument	reqs		8428785	2					
ANR	8428916	Identifier	reqs		8428785	0					
ANR	8428917	ExpressionStatement	qemu_mutex_unlock ( & pool -> lock )	43:4:678:708	8428785	12	True				
ANR	8428918	CallExpression	qemu_mutex_unlock ( & pool -> lock )		8428785	0					
ANR	8428919	Callee	qemu_mutex_unlock		8428785	0					
ANR	8428920	Identifier	qemu_mutex_unlock		8428785	0					
ANR	8428921	ArgumentList	& pool -> lock		8428785	1					
ANR	8428922	Argument	& pool -> lock		8428785	0					
ANR	8428923	UnaryOperationExpression	& pool -> lock		8428785	0					
ANR	8428924	UnaryOperator	&		8428785	0					
ANR	8428925	PtrMemberAccess	pool -> lock		8428785	1					
ANR	8428926	Identifier	pool		8428785	0					
ANR	8428927	Identifier	lock		8428785	1					
ANR	8428928	ExpressionStatement	qemu_sem_post ( & pool -> sem )	45:4:715:740	8428785	13	True				
ANR	8428929	CallExpression	qemu_sem_post ( & pool -> sem )		8428785	0					
ANR	8428930	Callee	qemu_sem_post		8428785	0					
ANR	8428931	Identifier	qemu_sem_post		8428785	0					
ANR	8428932	ArgumentList	& pool -> sem		8428785	1					
ANR	8428933	Argument	& pool -> sem		8428785	0					
ANR	8428934	UnaryOperationExpression	& pool -> sem		8428785	0					
ANR	8428935	UnaryOperator	&		8428785	0					
ANR	8428936	PtrMemberAccess	pool -> sem		8428785	1					
ANR	8428937	Identifier	pool		8428785	0					
ANR	8428938	Identifier	sem		8428785	1					
ANR	8428939	ReturnStatement	return & req -> common ;	47:4:747:766	8428785	14	True				
ANR	8428940	UnaryOperationExpression	& req -> common		8428785	0					
ANR	8428941	UnaryOperator	&		8428785	0					
ANR	8428942	PtrMemberAccess	req -> common		8428785	1					
ANR	8428943	Identifier	req		8428785	0					
ANR	8428944	Identifier	common		8428785	1					
ANR	8428945	ReturnType	BlockDriverAIOCB *		8428785	1					
ANR	8428946	Identifier	thread_pool_submit_aio		8428785	2					
ANR	8428947	ParameterList	"ThreadPoolFunc * func , void * arg , BlockDriverCompletionFunc * cb , void * opaque"		8428785	3					
ANR	8428948	Parameter	ThreadPoolFunc * func	1:41:41:60	8428785	0	True				
ANR	8428949	ParameterType	ThreadPoolFunc *		8428785	0					
ANR	8428950	Identifier	func		8428785	1					
ANR	8428951	Parameter	void * arg	1:63:63:71	8428785	1	True				
ANR	8428952	ParameterType	void *		8428785	0					
ANR	8428953	Identifier	arg		8428785	1					
ANR	8428954	Parameter	BlockDriverCompletionFunc * cb	3:8:83:111	8428785	2	True				
ANR	8428955	ParameterType	BlockDriverCompletionFunc *		8428785	0					
ANR	8428956	Identifier	cb		8428785	1					
ANR	8428957	Parameter	void * opaque	3:39:114:125	8428785	3	True				
ANR	8428958	ParameterType	void *		8428785	0					
ANR	8428959	Identifier	opaque		8428785	1					
ANR	8428960	CFGEntryNode	ENTRY		8428785		True				
ANR	8428961	CFGExitNode	EXIT		8428785		True				
ANR	8428962	Symbol	req -> pool		8428785						
ANR	8428963	Symbol	& global_pool		8428785						
ANR	8428964	Symbol	* req		8428785						
ANR	8428965	Symbol	pool -> max_threads		8428785						
ANR	8428966	Symbol	& req -> common		8428785						
ANR	8428967	Symbol	req -> arg		8428785						
ANR	8428968	Symbol	arg		8428785						
ANR	8428969	Symbol	& thread_pool_aiocb_info		8428785						
ANR	8428970	Symbol	pool -> cur_threads		8428785						
ANR	8428971	Symbol	cb		8428785						
ANR	8428972	Symbol	req		8428785						
ANR	8428973	Symbol	THREAD_QUEUED		8428785						
ANR	8428974	Symbol	all		8428785						
ANR	8428975	Symbol	reqs		8428785						
ANR	8428976	Symbol	opaque		8428785						
ANR	8428977	Symbol	NULL		8428785						
ANR	8428978	Symbol	& pool -> head		8428785						
ANR	8428979	Symbol	pool		8428785						
ANR	8428980	Symbol	req -> state		8428785						
ANR	8428981	Symbol	qemu_aio_get		8428785						
ANR	8428982	Symbol	* pool		8428785						
ANR	8428983	Symbol	req -> func		8428785						
ANR	8428984	Symbol	& pool -> request_list		8428785						
ANR	8428985	Symbol	& pool -> sem		8428785						
ANR	8428986	Symbol	func		8428785						
ANR	8428987	Symbol	& pool -> lock		8428785						
ANR	8428988	Symbol	pool -> idle_threads		8428785						
