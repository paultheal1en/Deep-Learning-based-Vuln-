command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5555190	File	/home/p4ultr4n/workplace/ReVeal/raw_code/mmu_translate_segment_0.c								
ANR	5555191	Function	mmu_translate_segment	1:0:0:1076							
ANR	5555192	FunctionDef	"mmu_translate_segment (CPUS390XState * env , target_ulong vaddr , uint64_t asc , uint64_t st_entry , target_ulong * raddr , int * flags , int rw)"		5555191	0					
ANR	5555193	CompoundStatement		7:0:216:1076	5555191	0					
ANR	5555194	IdentifierDeclStatement	CPUState * cs = CPU ( s390_env_get_cpu ( env ) ) ;	9:4:223:264	5555191	0	True				
ANR	5555195	IdentifierDecl	* cs = CPU ( s390_env_get_cpu ( env ) )		5555191	0					
ANR	5555196	IdentifierDeclType	CPUState *		5555191	0					
ANR	5555197	Identifier	cs		5555191	1					
ANR	5555198	AssignmentExpression	* cs = CPU ( s390_env_get_cpu ( env ) )		5555191	2		=			
ANR	5555199	Identifier	cs		5555191	0					
ANR	5555200	CallExpression	CPU ( s390_env_get_cpu ( env ) )		5555191	1					
ANR	5555201	Callee	CPU		5555191	0					
ANR	5555202	Identifier	CPU		5555191	0					
ANR	5555203	ArgumentList	s390_env_get_cpu ( env )		5555191	1					
ANR	5555204	Argument	s390_env_get_cpu ( env )		5555191	0					
ANR	5555205	CallExpression	s390_env_get_cpu ( env )		5555191	0					
ANR	5555206	Callee	s390_env_get_cpu		5555191	0					
ANR	5555207	Identifier	s390_env_get_cpu		5555191	0					
ANR	5555208	ArgumentList	env		5555191	1					
ANR	5555209	Argument	env		5555191	0					
ANR	5555210	Identifier	env		5555191	0					
ANR	5555211	IdentifierDeclStatement	"uint64_t origin , offs , pt_entry ;"	11:4:271:302	5555191	1	True				
ANR	5555212	IdentifierDecl	origin		5555191	0					
ANR	5555213	IdentifierDeclType	uint64_t		5555191	0					
ANR	5555214	Identifier	origin		5555191	1					
ANR	5555215	IdentifierDecl	offs		5555191	1					
ANR	5555216	IdentifierDeclType	uint64_t		5555191	0					
ANR	5555217	Identifier	offs		5555191	1					
ANR	5555218	IdentifierDecl	pt_entry		5555191	2					
ANR	5555219	IdentifierDeclType	uint64_t		5555191	0					
ANR	5555220	Identifier	pt_entry		5555191	1					
ANR	5555221	IfStatement	if ( st_entry & _SEGMENT_ENTRY_RO )		5555191	2					
ANR	5555222	Condition	st_entry & _SEGMENT_ENTRY_RO	15:8:315:342	5555191	0	True				
ANR	5555223	BitAndExpression	st_entry & _SEGMENT_ENTRY_RO		5555191	0		&			
ANR	5555224	Identifier	st_entry		5555191	0					
ANR	5555225	Identifier	_SEGMENT_ENTRY_RO		5555191	1					
ANR	5555226	CompoundStatement		9:38:128:128	5555191	1					
ANR	5555227	ExpressionStatement	* flags &= ~PAGE_WRITE	17:8:356:377	5555191	0	True				
ANR	5555228	AssignmentExpression	* flags &= ~PAGE_WRITE		5555191	0		&=			
ANR	5555229	UnaryOperationExpression	* flags		5555191	0					
ANR	5555230	UnaryOperator	*		5555191	0					
ANR	5555231	Identifier	flags		5555191	1					
ANR	5555232	Identifier	~PAGE_WRITE		5555191	1					
ANR	5555233	IfStatement	if ( ( st_entry & _SEGMENT_ENTRY_FC ) && ( env -> cregs [ 0 ] & CR0_EDAT ) )		5555191	3					
ANR	5555234	Condition	( st_entry & _SEGMENT_ENTRY_FC ) && ( env -> cregs [ 0 ] & CR0_EDAT )	23:8:397:456	5555191	0	True				
ANR	5555235	AndExpression	( st_entry & _SEGMENT_ENTRY_FC ) && ( env -> cregs [ 0 ] & CR0_EDAT )		5555191	0		&&			
ANR	5555236	BitAndExpression	st_entry & _SEGMENT_ENTRY_FC		5555191	0		&			
ANR	5555237	Identifier	st_entry		5555191	0					
ANR	5555238	Identifier	_SEGMENT_ENTRY_FC		5555191	1					
ANR	5555239	BitAndExpression	env -> cregs [ 0 ] & CR0_EDAT		5555191	1		&			
ANR	5555240	ArrayIndexing	env -> cregs [ 0 ]		5555191	0					
ANR	5555241	PtrMemberAccess	env -> cregs		5555191	0					
ANR	5555242	Identifier	env		5555191	0					
ANR	5555243	Identifier	cregs		5555191	1					
ANR	5555244	PrimaryExpression	0		5555191	1					
ANR	5555245	Identifier	CR0_EDAT		5555191	1					
ANR	5555246	CompoundStatement		17:70:242:242	5555191	1					
ANR	5555247	Statement	*	27:8:540:540	5555191	0	True				
ANR	5555248	Statement	raddr	27:9:541:545	5555191	1	True				
ANR	5555249	Statement	=	27:15:547:547	5555191	2	True				
ANR	5555250	Statement	(	27:17:549:549	5555191	3	True				
ANR	5555251	Statement	st_entry	27:18:550:557	5555191	4	True				
ANR	5555252	Statement	&	27:27:559:559	5555191	5	True				
ANR	5555253	Statement	0xfffffffffff00000UL	27:29:561:580	5555191	6	True				
ANR	5555254	Statement	L	27:49:581:581	5555191	7	True				
ANR	5555255	Statement	)	27:50:582:582	5555191	8	True				
ANR	5555256	Statement	|	27:52:584:584	5555191	9	True				
ANR	5555257	ExpressionStatement	vaddr & 0xfffff	27:54:586:603	5555191	10	True				
ANR	5555258	BitAndExpression	vaddr & 0xfffff		5555191	0		&			
ANR	5555259	Identifier	vaddr		5555191	0					
ANR	5555260	PrimaryExpression	0xfffff		5555191	1					
ANR	5555261	Statement	PTE_DPRINTF	29:8:614:624	5555191	11	True				
ANR	5555262	Statement	(	29:19:625:625	5555191	12	True				
ANR	5555263	Statement	"""%s: SEG=0x%"""	29:20:626:638	5555191	13	True				
ANR	5555264	Statement	PRIx64	29:34:640:645	5555191	14	True				
ANR	5555265	Statement	"""\\n"""	29:41:647:650	5555191	15	True				
ANR	5555266	Statement	","	29:45:651:651	5555191	16	True				
ANR	5555267	Statement	__func__	29:47:653:660	5555191	17	True				
ANR	5555268	Statement	","	29:55:661:661	5555191	18	True				
ANR	5555269	Statement	st_entry	29:57:663:670	5555191	19	True				
ANR	5555270	Statement	)	29:65:671:671	5555191	20	True				
ANR	5555271	ExpressionStatement		29:66:672:672	5555191	21	True				
ANR	5555272	ReturnStatement	return 0 ;	31:8:683:691	5555191	22	True				
ANR	5555273	PrimaryExpression	0		5555191	0					
ANR	5555274	ExpressionStatement	origin = st_entry & _SEGMENT_ENTRY_ORIGIN	39:4:741:782	5555191	4	True				
ANR	5555275	AssignmentExpression	origin = st_entry & _SEGMENT_ENTRY_ORIGIN		5555191	0		=			
ANR	5555276	Identifier	origin		5555191	0					
ANR	5555277	BitAndExpression	st_entry & _SEGMENT_ENTRY_ORIGIN		5555191	1		&			
ANR	5555278	Identifier	st_entry		5555191	0					
ANR	5555279	Identifier	_SEGMENT_ENTRY_ORIGIN		5555191	1					
ANR	5555280	ExpressionStatement	offs = ( vaddr & VADDR_PX ) >> 9	41:4:789:820	5555191	5	True				
ANR	5555281	AssignmentExpression	offs = ( vaddr & VADDR_PX ) >> 9		5555191	0		=			
ANR	5555282	Identifier	offs		5555191	0					
ANR	5555283	ShiftExpression	( vaddr & VADDR_PX ) >> 9		5555191	1		>>			
ANR	5555284	BitAndExpression	vaddr & VADDR_PX		5555191	0		&			
ANR	5555285	Identifier	vaddr		5555191	0					
ANR	5555286	Identifier	VADDR_PX		5555191	1					
ANR	5555287	PrimaryExpression	9		5555191	1					
ANR	5555288	ExpressionStatement	"pt_entry = ldq_phys ( cs -> as , origin + offs )"	43:4:827:869	5555191	6	True				
ANR	5555289	AssignmentExpression	"pt_entry = ldq_phys ( cs -> as , origin + offs )"		5555191	0		=			
ANR	5555290	Identifier	pt_entry		5555191	0					
ANR	5555291	CallExpression	"ldq_phys ( cs -> as , origin + offs )"		5555191	1					
ANR	5555292	Callee	ldq_phys		5555191	0					
ANR	5555293	Identifier	ldq_phys		5555191	0					
ANR	5555294	ArgumentList	cs -> as		5555191	1					
ANR	5555295	Argument	cs -> as		5555191	0					
ANR	5555296	PtrMemberAccess	cs -> as		5555191	0					
ANR	5555297	Identifier	cs		5555191	0					
ANR	5555298	Identifier	as		5555191	1					
ANR	5555299	Argument	origin + offs		5555191	1					
ANR	5555300	AdditiveExpression	origin + offs		5555191	0		+			
ANR	5555301	Identifier	origin		5555191	0					
ANR	5555302	Identifier	offs		5555191	1					
ANR	5555303	Statement	PTE_DPRINTF	45:4:876:886	5555191	7	True				
ANR	5555304	Statement	(	45:15:887:887	5555191	8	True				
ANR	5555305	Statement	"""%s: 0x%"""	45:16:888:896	5555191	9	True				
ANR	5555306	Statement	PRIx64	45:26:898:903	5555191	10	True				
ANR	5555307	Statement	""" + 0x%"""	45:33:905:912	5555191	11	True				
ANR	5555308	Statement	PRIx64	45:42:914:919	5555191	12	True				
ANR	5555309	Statement	""" => 0x%016"""	45:49:921:932	5555191	13	True				
ANR	5555310	Statement	PRIx64	45:62:934:939	5555191	14	True				
ANR	5555311	Statement	"""\\n"""	45:69:941:944	5555191	15	True				
ANR	5555312	Statement	","	45:73:945:945	5555191	16	True				
ANR	5555313	Statement	__func__	47:16:964:971	5555191	17	True				
ANR	5555314	Statement	","	47:24:972:972	5555191	18	True				
ANR	5555315	Statement	origin	47:26:974:979	5555191	19	True				
ANR	5555316	Statement	","	47:32:980:980	5555191	20	True				
ANR	5555317	Statement	offs	47:34:982:985	5555191	21	True				
ANR	5555318	Statement	","	47:38:986:986	5555191	22	True				
ANR	5555319	Statement	pt_entry	47:40:988:995	5555191	23	True				
ANR	5555320	Statement	)	47:48:996:996	5555191	24	True				
ANR	5555321	ExpressionStatement		47:49:997:997	5555191	25	True				
ANR	5555322	ReturnStatement	"return mmu_translate_pte ( env , vaddr , asc , pt_entry , raddr , flags , rw ) ;"	49:4:1004:1073	5555191	26	True				
ANR	5555323	CallExpression	"mmu_translate_pte ( env , vaddr , asc , pt_entry , raddr , flags , rw )"		5555191	0					
ANR	5555324	Callee	mmu_translate_pte		5555191	0					
ANR	5555325	Identifier	mmu_translate_pte		5555191	0					
ANR	5555326	ArgumentList	env		5555191	1					
ANR	5555327	Argument	env		5555191	0					
ANR	5555328	Identifier	env		5555191	0					
ANR	5555329	Argument	vaddr		5555191	1					
ANR	5555330	Identifier	vaddr		5555191	0					
ANR	5555331	Argument	asc		5555191	2					
ANR	5555332	Identifier	asc		5555191	0					
ANR	5555333	Argument	pt_entry		5555191	3					
ANR	5555334	Identifier	pt_entry		5555191	0					
ANR	5555335	Argument	raddr		5555191	4					
ANR	5555336	Identifier	raddr		5555191	0					
ANR	5555337	Argument	flags		5555191	5					
ANR	5555338	Identifier	flags		5555191	0					
ANR	5555339	Argument	rw		5555191	6					
ANR	5555340	Identifier	rw		5555191	0					
ANR	5555341	ReturnType	static int		5555191	1					
ANR	5555342	Identifier	mmu_translate_segment		5555191	2					
ANR	5555343	ParameterList	"CPUS390XState * env , target_ulong vaddr , uint64_t asc , uint64_t st_entry , target_ulong * raddr , int * flags , int rw"		5555191	3					
ANR	5555344	Parameter	CPUS390XState * env	1:33:33:50	5555191	0	True				
ANR	5555345	ParameterType	CPUS390XState *		5555191	0					
ANR	5555346	Identifier	env		5555191	1					
ANR	5555347	Parameter	target_ulong vaddr	1:53:53:70	5555191	1	True				
ANR	5555348	ParameterType	target_ulong		5555191	0					
ANR	5555349	Identifier	vaddr		5555191	1					
ANR	5555350	Parameter	uint64_t asc	3:33:107:118	5555191	2	True				
ANR	5555351	ParameterType	uint64_t		5555191	0					
ANR	5555352	Identifier	asc		5555191	1					
ANR	5555353	Parameter	uint64_t st_entry	3:47:121:137	5555191	3	True				
ANR	5555354	ParameterType	uint64_t		5555191	0					
ANR	5555355	Identifier	st_entry		5555191	1					
ANR	5555356	Parameter	target_ulong * raddr	5:33:174:192	5555191	4	True				
ANR	5555357	ParameterType	target_ulong *		5555191	0					
ANR	5555358	Identifier	raddr		5555191	1					
ANR	5555359	Parameter	int * flags	5:54:195:204	5555191	5	True				
ANR	5555360	ParameterType	int *		5555191	0					
ANR	5555361	Identifier	flags		5555191	1					
ANR	5555362	Parameter	int rw	5:66:207:212	5555191	6	True				
ANR	5555363	ParameterType	int		5555191	0					
ANR	5555364	Identifier	rw		5555191	1					
ANR	5555365	CFGEntryNode	ENTRY		5555191		True				
ANR	5555366	CFGExitNode	EXIT		5555191		True				
ANR	5555367	Symbol	CR0_EDAT		5555191						
ANR	5555368	Symbol	* * env		5555191						
ANR	5555369	Symbol	pt_entry		5555191						
ANR	5555370	Symbol	rw		5555191						
ANR	5555371	Symbol	origin		5555191						
ANR	5555372	Symbol	flags		5555191						
ANR	5555373	Symbol	VADDR_PX		5555191						
ANR	5555374	Symbol	CPU		5555191						
ANR	5555375	Symbol	vaddr		5555191						
ANR	5555376	Symbol	st_entry		5555191						
ANR	5555377	Symbol	offs		5555191						
ANR	5555378	Symbol	raddr		5555191						
ANR	5555379	Symbol	_SEGMENT_ENTRY_RO		5555191						
ANR	5555380	Symbol	_SEGMENT_ENTRY_FC		5555191						
ANR	5555381	Symbol	mmu_translate_pte		5555191						
ANR	5555382	Symbol	* flags		5555191						
ANR	5555383	Symbol	cs -> as		5555191						
ANR	5555384	Symbol	* env		5555191						
ANR	5555385	Symbol	ldq_phys		5555191						
ANR	5555386	Symbol	env		5555191						
ANR	5555387	Symbol	s390_env_get_cpu		5555191						
ANR	5555388	Symbol	asc		5555191						
ANR	5555389	Symbol	cs		5555191						
ANR	5555390	Symbol	* cs		5555191						
ANR	5555391	Symbol	_SEGMENT_ENTRY_ORIGIN		5555191						
ANR	5555392	Symbol	env -> cregs		5555191						
ANR	5555393	Symbol	~PAGE_WRITE		5555191						
ANR	5555394	Symbol	* env -> cregs		5555191						
