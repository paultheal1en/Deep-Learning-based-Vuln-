command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4812684	File	/home/p4ultr4n/workplace/ReVeal/raw_code/if_start_01_0.c								
ANR	4812685	Function	if_start	1:0:0:1781							
ANR	4812686	FunctionDef	if_start (Slirp * slirp)		4812685	0					
ANR	4812687	CompoundStatement		3:0:24:1781	4812685	0					
ANR	4812688	IdentifierDeclStatement	uint64_t now = qemu_get_clock_ns ( rt_clock ) ;	5:4:31:73	4812685	0	True				
ANR	4812689	IdentifierDecl	now = qemu_get_clock_ns ( rt_clock )		4812685	0					
ANR	4812690	IdentifierDeclType	uint64_t		4812685	0					
ANR	4812691	Identifier	now		4812685	1					
ANR	4812692	AssignmentExpression	now = qemu_get_clock_ns ( rt_clock )		4812685	2		=			
ANR	4812693	Identifier	now		4812685	0					
ANR	4812694	CallExpression	qemu_get_clock_ns ( rt_clock )		4812685	1					
ANR	4812695	Callee	qemu_get_clock_ns		4812685	0					
ANR	4812696	Identifier	qemu_get_clock_ns		4812685	0					
ANR	4812697	ArgumentList	rt_clock		4812685	1					
ANR	4812698	Argument	rt_clock		4812685	0					
ANR	4812699	Identifier	rt_clock		4812685	0					
ANR	4812700	IdentifierDeclStatement	int requeued = 0 ;	7:4:80:96	4812685	1	True				
ANR	4812701	IdentifierDecl	requeued = 0		4812685	0					
ANR	4812702	IdentifierDeclType	int		4812685	0					
ANR	4812703	Identifier	requeued		4812685	1					
ANR	4812704	AssignmentExpression	requeued = 0		4812685	2		=			
ANR	4812705	Identifier	requeued		4812685	0					
ANR	4812706	PrimaryExpression	0		4812685	1					
ANR	4812707	IdentifierDeclStatement	bool from_batchq = false ;	9:4:103:127	4812685	2	True				
ANR	4812708	IdentifierDecl	from_batchq = false		4812685	0					
ANR	4812709	IdentifierDeclType	bool		4812685	0					
ANR	4812710	Identifier	from_batchq		4812685	1					
ANR	4812711	AssignmentExpression	from_batchq = false		4812685	2		=			
ANR	4812712	Identifier	false		4812685	0					
ANR	4812713	Identifier	false		4812685	1					
ANR	4812714	IdentifierDeclStatement	"struct mbuf * ifm , * ifqt ;"	11:1:131:154	4812685	3	True				
ANR	4812715	IdentifierDecl	* ifm		4812685	0					
ANR	4812716	IdentifierDeclType	struct mbuf *		4812685	0					
ANR	4812717	Identifier	ifm		4812685	1					
ANR	4812718	IdentifierDecl	* ifqt		4812685	1					
ANR	4812719	IdentifierDeclType	struct mbuf *		4812685	0					
ANR	4812720	Identifier	ifqt		4812685	1					
ANR	4812721	ExpressionStatement	"DEBUG_CALL ( ""if_start"" )"	15:1:160:182	4812685	4	True				
ANR	4812722	CallExpression	"DEBUG_CALL ( ""if_start"" )"		4812685	0					
ANR	4812723	Callee	DEBUG_CALL		4812685	0					
ANR	4812724	Identifier	DEBUG_CALL		4812685	0					
ANR	4812725	ArgumentList	"""if_start"""		4812685	1					
ANR	4812726	Argument	"""if_start"""		4812685	0					
ANR	4812727	PrimaryExpression	"""if_start"""		4812685	0					
ANR	4812728	IfStatement	if ( slirp -> if_queued == 0 )		4812685	5					
ANR	4812729	Condition	slirp -> if_queued == 0	19:5:192:212	4812685	0	True				
ANR	4812730	EqualityExpression	slirp -> if_queued == 0		4812685	0		==			
ANR	4812731	PtrMemberAccess	slirp -> if_queued		4812685	0					
ANR	4812732	Identifier	slirp		4812685	0					
ANR	4812733	Identifier	if_queued		4812685	1					
ANR	4812734	PrimaryExpression	0		4812685	1					
ANR	4812735	ReturnStatement	return ;	21:4:220:226	4812685	1	True				
ANR	4812736	Label	again :	25:1:252:257	4812685	6	True				
ANR	4812737	Identifier	again		4812685	0					
ANR	4812738	IfStatement	if ( ! slirp_can_output ( slirp -> opaque ) )		4812685	7					
ANR	4812739	Condition	! slirp_can_output ( slirp -> opaque )	29:12:317:348	4812685	0	True				
ANR	4812740	UnaryOperationExpression	! slirp_can_output ( slirp -> opaque )		4812685	0					
ANR	4812741	UnaryOperator	!		4812685	0					
ANR	4812742	CallExpression	slirp_can_output ( slirp -> opaque )		4812685	1					
ANR	4812743	Callee	slirp_can_output		4812685	0					
ANR	4812744	Identifier	slirp_can_output		4812685	0					
ANR	4812745	ArgumentList	slirp -> opaque		4812685	1					
ANR	4812746	Argument	slirp -> opaque		4812685	0					
ANR	4812747	PtrMemberAccess	slirp -> opaque		4812685	0					
ANR	4812748	Identifier	slirp		4812685	0					
ANR	4812749	Identifier	opaque		4812685	1					
ANR	4812750	ReturnStatement	return ;	31:12:364:370	4812685	1	True				
ANR	4812751	IfStatement	if ( slirp -> if_fastq . ifq_next != & slirp -> if_fastq )		4812685	8					
ANR	4812752	Condition	slirp -> if_fastq . ifq_next != & slirp -> if_fastq	43:5:498:541	4812685	0	True				
ANR	4812753	EqualityExpression	slirp -> if_fastq . ifq_next != & slirp -> if_fastq		4812685	0		!=			
ANR	4812754	MemberAccess	slirp -> if_fastq . ifq_next		4812685	0					
ANR	4812755	PtrMemberAccess	slirp -> if_fastq		4812685	0					
ANR	4812756	Identifier	slirp		4812685	0					
ANR	4812757	Identifier	if_fastq		4812685	1					
ANR	4812758	Identifier	ifq_next		4812685	1					
ANR	4812759	UnaryOperationExpression	& slirp -> if_fastq		4812685	1					
ANR	4812760	UnaryOperator	&		4812685	0					
ANR	4812761	PtrMemberAccess	slirp -> if_fastq		4812685	1					
ANR	4812762	Identifier	slirp		4812685	0					
ANR	4812763	Identifier	if_fastq		4812685	1					
ANR	4812764	CompoundStatement		41:51:519:519	4812685	1					
ANR	4812765	ExpressionStatement	ifm = slirp -> if_fastq . ifq_next	45:2:549:579	4812685	0	True				
ANR	4812766	AssignmentExpression	ifm = slirp -> if_fastq . ifq_next		4812685	0		=			
ANR	4812767	Identifier	ifm		4812685	0					
ANR	4812768	MemberAccess	slirp -> if_fastq . ifq_next		4812685	1					
ANR	4812769	PtrMemberAccess	slirp -> if_fastq		4812685	0					
ANR	4812770	Identifier	slirp		4812685	0					
ANR	4812771	Identifier	if_fastq		4812685	1					
ANR	4812772	Identifier	ifq_next		4812685	1					
ANR	4812773	ElseStatement	else		4812685	0					
ANR	4812774	CompoundStatement		45:8:565:565	4812685	0					
ANR	4812775	IfStatement	if ( slirp -> next_m != & slirp -> if_batchq )		4812685	0					
ANR	4812776	Condition	slirp -> next_m != & slirp -> if_batchq	51:6:649:682	4812685	0	True				
ANR	4812777	EqualityExpression	slirp -> next_m != & slirp -> if_batchq		4812685	0		!=			
ANR	4812778	PtrMemberAccess	slirp -> next_m		4812685	0					
ANR	4812779	Identifier	slirp		4812685	0					
ANR	4812780	Identifier	next_m		4812685	1					
ANR	4812781	UnaryOperationExpression	& slirp -> if_batchq		4812685	1					
ANR	4812782	UnaryOperator	&		4812685	0					
ANR	4812783	PtrMemberAccess	slirp -> if_batchq		4812685	1					
ANR	4812784	Identifier	slirp		4812685	0					
ANR	4812785	Identifier	if_batchq		4812685	1					
ANR	4812786	ExpressionStatement	ifm = slirp -> next_m	53:5:691:710	4812685	1	True				
ANR	4812787	AssignmentExpression	ifm = slirp -> next_m		4812685	0		=			
ANR	4812788	Identifier	ifm		4812685	0					
ANR	4812789	PtrMemberAccess	slirp -> next_m		4812685	1					
ANR	4812790	Identifier	slirp		4812685	0					
ANR	4812791	Identifier	next_m		4812685	1					
ANR	4812792	ElseStatement	else		4812685	0					
ANR	4812793	ExpressionStatement	ifm = slirp -> if_batchq . ifq_next	57:5:726:757	4812685	0	True				
ANR	4812794	AssignmentExpression	ifm = slirp -> if_batchq . ifq_next		4812685	0		=			
ANR	4812795	Identifier	ifm		4812685	0					
ANR	4812796	MemberAccess	slirp -> if_batchq . ifq_next		4812685	1					
ANR	4812797	PtrMemberAccess	slirp -> if_batchq		4812685	0					
ANR	4812798	Identifier	slirp		4812685	0					
ANR	4812799	Identifier	if_batchq		4812685	1					
ANR	4812800	Identifier	ifq_next		4812685	1					
ANR	4812801	ExpressionStatement	from_batchq = true	61:16:778:796	4812685	1	True				
ANR	4812802	AssignmentExpression	from_batchq = true		4812685	0		=			
ANR	4812803	Identifier	from_batchq		4812685	0					
ANR	4812804	Identifier	true		4812685	1					
ANR	4812805	ExpressionStatement	slirp -> if_queued --	67:8:813:831	4812685	9	True				
ANR	4812806	PostIncDecOperationExpression	slirp -> if_queued --		4812685	0					
ANR	4812807	PtrMemberAccess	slirp -> if_queued		4812685	0					
ANR	4812808	Identifier	slirp		4812685	0					
ANR	4812809	Identifier	if_queued		4812685	1					
ANR	4812810	IncDec	--		4812685	1					
ANR	4812811	IfStatement	"if ( ifm -> expiration_date >= now && ! if_encap ( slirp , ifm ) )"		4812685	10					
ANR	4812812	Condition	"ifm -> expiration_date >= now && ! if_encap ( slirp , ifm )"	73:12:908:959	4812685	0	True				
ANR	4812813	AndExpression	"ifm -> expiration_date >= now && ! if_encap ( slirp , ifm )"		4812685	0		&&			
ANR	4812814	RelationalExpression	ifm -> expiration_date >= now		4812685	0		>=			
ANR	4812815	PtrMemberAccess	ifm -> expiration_date		4812685	0					
ANR	4812816	Identifier	ifm		4812685	0					
ANR	4812817	Identifier	expiration_date		4812685	1					
ANR	4812818	Identifier	now		4812685	1					
ANR	4812819	UnaryOperationExpression	"! if_encap ( slirp , ifm )"		4812685	1					
ANR	4812820	UnaryOperator	!		4812685	0					
ANR	4812821	CallExpression	"if_encap ( slirp , ifm )"		4812685	1					
ANR	4812822	Callee	if_encap		4812685	0					
ANR	4812823	Identifier	if_encap		4812685	0					
ANR	4812824	ArgumentList	slirp		4812685	1					
ANR	4812825	Argument	slirp		4812685	0					
ANR	4812826	Identifier	slirp		4812685	0					
ANR	4812827	Argument	ifm		4812685	1					
ANR	4812828	Identifier	ifm		4812685	0					
ANR	4812829	CompoundStatement		71:66:937:937	4812685	1					
ANR	4812830	ExpressionStatement	requeued ++	77:12:1044:1054	4812685	0	True				
ANR	4812831	PostIncDecOperationExpression	requeued ++		4812685	0					
ANR	4812832	Identifier	requeued		4812685	0					
ANR	4812833	IncDec	++		4812685	1					
ANR	4812834	GotoStatement	goto out ;	79:12:1069:1077	4812685	1	True				
ANR	4812835	Identifier	out		4812685	0					
ANR	4812836	IfStatement	if ( from_batchq )		4812685	11					
ANR	4812837	Condition	from_batchq	85:12:1105:1115	4812685	0	True				
ANR	4812838	Identifier	from_batchq		4812685	0					
ANR	4812839	CompoundStatement		83:25:1093:1093	4812685	1					
ANR	4812840	ExpressionStatement	slirp -> next_m = ifm -> ifq_next	89:12:1195:1224	4812685	0	True				
ANR	4812841	AssignmentExpression	slirp -> next_m = ifm -> ifq_next		4812685	0		=			
ANR	4812842	PtrMemberAccess	slirp -> next_m		4812685	0					
ANR	4812843	Identifier	slirp		4812685	0					
ANR	4812844	Identifier	next_m		4812685	1					
ANR	4812845	PtrMemberAccess	ifm -> ifq_next		4812685	1					
ANR	4812846	Identifier	ifm		4812685	0					
ANR	4812847	Identifier	ifq_next		4812685	1					
ANR	4812848	ExpressionStatement	ifqt = ifm -> ifq_prev	97:1:1274:1294	4812685	12	True				
ANR	4812849	AssignmentExpression	ifqt = ifm -> ifq_prev		4812685	0		=			
ANR	4812850	Identifier	ifqt		4812685	0					
ANR	4812851	PtrMemberAccess	ifm -> ifq_prev		4812685	1					
ANR	4812852	Identifier	ifm		4812685	0					
ANR	4812853	Identifier	ifq_prev		4812685	1					
ANR	4812854	ExpressionStatement	remque ( ifm )	99:1:1298:1309	4812685	13	True				
ANR	4812855	CallExpression	remque ( ifm )		4812685	0					
ANR	4812856	Callee	remque		4812685	0					
ANR	4812857	Identifier	remque		4812685	0					
ANR	4812858	ArgumentList	ifm		4812685	1					
ANR	4812859	Argument	ifm		4812685	0					
ANR	4812860	Identifier	ifm		4812685	0					
ANR	4812861	IfStatement	if ( ifm -> ifs_next != ifm )		4812685	14					
ANR	4812862	Condition	ifm -> ifs_next != ifm	105:5:1385:1427	4812685	0	True				
ANR	4812863	EqualityExpression	ifm -> ifs_next != ifm		4812685	0		!=			
ANR	4812864	PtrMemberAccess	ifm -> ifs_next		4812685	0					
ANR	4812865	Identifier	ifm		4812685	0					
ANR	4812866	Identifier	ifs_next		4812685	1					
ANR	4812867	Identifier	ifm		4812685	1					
ANR	4812868	CompoundStatement		103:50:1405:1405	4812685	1					
ANR	4812869	ExpressionStatement	"insque ( ifm -> ifs_next , ifqt )"	107:2:1435:1462	4812685	0	True				
ANR	4812870	CallExpression	"insque ( ifm -> ifs_next , ifqt )"		4812685	0					
ANR	4812871	Callee	insque		4812685	0					
ANR	4812872	Identifier	insque		4812685	0					
ANR	4812873	ArgumentList	ifm -> ifs_next		4812685	1					
ANR	4812874	Argument	ifm -> ifs_next		4812685	0					
ANR	4812875	PtrMemberAccess	ifm -> ifs_next		4812685	0					
ANR	4812876	Identifier	ifm		4812685	0					
ANR	4812877	Identifier	ifs_next		4812685	1					
ANR	4812878	Argument	ifqt		4812685	1					
ANR	4812879	Identifier	ifqt		4812685	0					
ANR	4812880	ExpressionStatement	ifs_remque ( ifm )	109:2:1467:1482	4812685	1	True				
ANR	4812881	CallExpression	ifs_remque ( ifm )		4812685	0					
ANR	4812882	Callee	ifs_remque		4812685	0					
ANR	4812883	Identifier	ifs_remque		4812685	0					
ANR	4812884	ArgumentList	ifm		4812685	1					
ANR	4812885	Argument	ifm		4812685	0					
ANR	4812886	Identifier	ifm		4812685	0					
ANR	4812887	IfStatement	if ( ifm -> ifq_so )		4812685	15					
ANR	4812888	Condition	ifm -> ifq_so	117:5:1521:1531	4812685	0	True				
ANR	4812889	PtrMemberAccess	ifm -> ifq_so		4812685	0					
ANR	4812890	Identifier	ifm		4812685	0					
ANR	4812891	Identifier	ifq_so		4812685	1					
ANR	4812892	CompoundStatement		115:18:1509:1509	4812685	1					
ANR	4812893	IfStatement	if ( -- ifm -> ifq_so -> so_queued == 0 )		4812685	0					
ANR	4812894	Condition	-- ifm -> ifq_so -> so_queued == 0	119:6:1543:1571	4812685	0	True				
ANR	4812895	EqualityExpression	-- ifm -> ifq_so -> so_queued == 0		4812685	0		==			
ANR	4812896	UnaryExpression	-- ifm -> ifq_so -> so_queued		4812685	0					
ANR	4812897	IncDec	--		4812685	0					
ANR	4812898	PtrMemberAccess	ifm -> ifq_so -> so_queued		4812685	1					
ANR	4812899	PtrMemberAccess	ifm -> ifq_so		4812685	0					
ANR	4812900	Identifier	ifm		4812685	0					
ANR	4812901	Identifier	ifq_so		4812685	1					
ANR	4812902	Identifier	so_queued		4812685	1					
ANR	4812903	PrimaryExpression	0		4812685	1					
ANR	4812904	ExpressionStatement	ifm -> ifq_so -> so_nqueued = 0	123:5:1633:1660	4812685	1	True				
ANR	4812905	AssignmentExpression	ifm -> ifq_so -> so_nqueued = 0		4812685	0		=			
ANR	4812906	PtrMemberAccess	ifm -> ifq_so -> so_nqueued		4812685	0					
ANR	4812907	PtrMemberAccess	ifm -> ifq_so		4812685	0					
ANR	4812908	Identifier	ifm		4812685	0					
ANR	4812909	Identifier	ifq_so		4812685	1					
ANR	4812910	Identifier	so_nqueued		4812685	1					
ANR	4812911	PrimaryExpression	0		4812685	1					
ANR	4812912	ExpressionStatement	m_free ( ifm )	129:8:1677:1688	4812685	16	True				
ANR	4812913	CallExpression	m_free ( ifm )		4812685	0					
ANR	4812914	Callee	m_free		4812685	0					
ANR	4812915	Identifier	m_free		4812685	0					
ANR	4812916	ArgumentList	ifm		4812685	1					
ANR	4812917	Argument	ifm		4812685	0					
ANR	4812918	Identifier	ifm		4812685	0					
ANR	4812919	Label	out :	133:1:1694:1697	4812685	17	True				
ANR	4812920	Identifier	out		4812685	0					
ANR	4812921	IfStatement	if ( slirp -> if_queued )		4812685	18					
ANR	4812922	Condition	slirp -> if_queued	135:5:1705:1720	4812685	0	True				
ANR	4812923	PtrMemberAccess	slirp -> if_queued		4812685	0					
ANR	4812924	Identifier	slirp		4812685	0					
ANR	4812925	Identifier	if_queued		4812685	1					
ANR	4812926	GotoStatement	goto again ;	137:4:1728:1738	4812685	1	True				
ANR	4812927	Identifier	again		4812685	0					
ANR	4812928	ExpressionStatement	slirp -> if_queued = requeued	141:8:1751:1778	4812685	19	True				
ANR	4812929	AssignmentExpression	slirp -> if_queued = requeued		4812685	0		=			
ANR	4812930	PtrMemberAccess	slirp -> if_queued		4812685	0					
ANR	4812931	Identifier	slirp		4812685	0					
ANR	4812932	Identifier	if_queued		4812685	1					
ANR	4812933	Identifier	requeued		4812685	1					
ANR	4812934	Identifier	if_start		4812685	1					
ANR	4812935	ParameterList	Slirp * slirp		4812685	2					
ANR	4812936	Parameter	Slirp * slirp	1:9:9:20	4812685	0	True				
ANR	4812937	ParameterType	Slirp *		4812685	0					
ANR	4812938	Identifier	slirp		4812685	1					
ANR	4812939	CFGEntryNode	ENTRY		4812685		True				
ANR	4812940	CFGExitNode	EXIT		4812685		True				
ANR	4812941	Symbol	ifm -> ifq_next		4812685						
ANR	4812942	Symbol	* * ifm		4812685						
ANR	4812943	Symbol	slirp -> if_queued		4812685						
ANR	4812944	Symbol	ifm -> expiration_date		4812685						
ANR	4812945	Symbol	rt_clock		4812685						
ANR	4812946	Symbol	slirp -> if_batchq . ifq_next		4812685						
ANR	4812947	Symbol	ifm -> ifq_so		4812685						
ANR	4812948	Symbol	* slirp		4812685						
ANR	4812949	Symbol	ifm -> ifq_so -> so_queued		4812685						
ANR	4812950	Symbol	if_encap		4812685						
ANR	4812951	Symbol	ifm -> ifs_next		4812685						
ANR	4812952	Symbol	* ifm -> ifq_so		4812685						
ANR	4812953	Symbol	slirp_can_output		4812685						
ANR	4812954	Symbol	& slirp -> if_batchq		4812685						
ANR	4812955	Symbol	qemu_get_clock_ns		4812685						
ANR	4812956	Symbol	now		4812685						
ANR	4812957	Symbol	& slirp -> if_fastq		4812685						
ANR	4812958	Symbol	* ifm		4812685						
ANR	4812959	Symbol	false		4812685						
ANR	4812960	Symbol	slirp		4812685						
ANR	4812961	Symbol	requeued		4812685						
ANR	4812962	Symbol	slirp -> if_batchq		4812685						
ANR	4812963	Symbol	slirp -> opaque		4812685						
ANR	4812964	Symbol	slirp -> if_fastq . ifq_next		4812685						
ANR	4812965	Symbol	ifm		4812685						
ANR	4812966	Symbol	ifqt		4812685						
ANR	4812967	Symbol	slirp -> next_m		4812685						
ANR	4812968	Symbol	true		4812685						
ANR	4812969	Symbol	from_batchq		4812685						
ANR	4812970	Symbol	slirp -> if_fastq		4812685						
ANR	4812971	Symbol	ifm -> ifq_so -> so_nqueued		4812685						
ANR	4812972	Symbol	ifm -> ifq_prev		4812685						
