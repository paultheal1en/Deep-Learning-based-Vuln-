command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	812152	File	/home/p4ultr4n/workplace/ReVeal/raw_code/avcodec_decode_audio3_1.c								
ANR	812153	Function	avcodec_decode_audio3	1:0:0:1608							
ANR	812154	FunctionDef	"avcodec_decode_audio3 (AVCodecContext * avctx , int16_t * samples , int * frame_size_ptr , AVPacket * avpkt)"		812153	0					
ANR	812155	CompoundStatement		7:0:178:1608	812153	0					
ANR	812156	IdentifierDeclStatement	AVFrame frame ;	9:4:185:198	812153	0	True				
ANR	812157	IdentifierDecl	frame		812153	0					
ANR	812158	IdentifierDeclType	AVFrame		812153	0					
ANR	812159	Identifier	frame		812153	1					
ANR	812160	IdentifierDeclStatement	"int ret , got_frame = 0 ;"	11:4:205:227	812153	1	True				
ANR	812161	IdentifierDecl	ret		812153	0					
ANR	812162	IdentifierDeclType	int		812153	0					
ANR	812163	Identifier	ret		812153	1					
ANR	812164	IdentifierDecl	got_frame = 0		812153	1					
ANR	812165	IdentifierDeclType	int		812153	0					
ANR	812166	Identifier	got_frame		812153	1					
ANR	812167	AssignmentExpression	got_frame = 0		812153	2		=			
ANR	812168	Identifier	got_frame		812153	0					
ANR	812169	PrimaryExpression	0		812153	1					
ANR	812170	IfStatement	if ( avctx -> get_buffer != avcodec_default_get_buffer )		812153	2					
ANR	812171	Condition	avctx -> get_buffer != avcodec_default_get_buffer	15:8:240:286	812153	0	True				
ANR	812172	EqualityExpression	avctx -> get_buffer != avcodec_default_get_buffer		812153	0		!=			
ANR	812173	PtrMemberAccess	avctx -> get_buffer		812153	0					
ANR	812174	Identifier	avctx		812153	0					
ANR	812175	Identifier	get_buffer		812153	1					
ANR	812176	Identifier	avcodec_default_get_buffer		812153	1					
ANR	812177	CompoundStatement		9:57:110:110	812153	1					
ANR	812178	Statement	av_log	17:8:300:305	812153	0	True				
ANR	812179	Statement	(	17:14:306:306	812153	1	True				
ANR	812180	Statement	avctx	17:15:307:311	812153	2	True				
ANR	812181	Statement	","	17:20:312:312	812153	3	True				
ANR	812182	Statement	AV_LOG_ERROR	17:22:314:325	812153	4	True				
ANR	812183	Statement	","	17:34:326:326	812153	5	True				
ANR	812184	Statement	"""A custom get_buffer() cannot be used with """	17:36:328:371	812153	6	True				
ANR	812185	Statement	"""avcodec_decode_audio3()\\n"""	19:15:389:415	812153	7	True				
ANR	812186	Statement	)	19:42:416:416	812153	8	True				
ANR	812187	ExpressionStatement		19:43:417:417	812153	9	True				
ANR	812188	ReturnStatement	return AVERROR ( EINVAL ) ;	21:8:428:450	812153	10	True				
ANR	812189	CallExpression	AVERROR ( EINVAL )		812153	0					
ANR	812190	Callee	AVERROR		812153	0					
ANR	812191	Identifier	AVERROR		812153	0					
ANR	812192	ArgumentList	EINVAL		812153	1					
ANR	812193	Argument	EINVAL		812153	0					
ANR	812194	Identifier	EINVAL		812153	0					
ANR	812195	ExpressionStatement	"ret = avcodec_decode_audio4 ( avctx , & frame , & got_frame , avpkt )"	27:4:466:527	812153	3	True				
ANR	812196	AssignmentExpression	"ret = avcodec_decode_audio4 ( avctx , & frame , & got_frame , avpkt )"		812153	0		=			
ANR	812197	Identifier	ret		812153	0					
ANR	812198	CallExpression	"avcodec_decode_audio4 ( avctx , & frame , & got_frame , avpkt )"		812153	1					
ANR	812199	Callee	avcodec_decode_audio4		812153	0					
ANR	812200	Identifier	avcodec_decode_audio4		812153	0					
ANR	812201	ArgumentList	avctx		812153	1					
ANR	812202	Argument	avctx		812153	0					
ANR	812203	Identifier	avctx		812153	0					
ANR	812204	Argument	& frame		812153	1					
ANR	812205	UnaryOperationExpression	& frame		812153	0					
ANR	812206	UnaryOperator	&		812153	0					
ANR	812207	Identifier	frame		812153	1					
ANR	812208	Argument	& got_frame		812153	2					
ANR	812209	UnaryOperationExpression	& got_frame		812153	0					
ANR	812210	UnaryOperator	&		812153	0					
ANR	812211	Identifier	got_frame		812153	1					
ANR	812212	Argument	avpkt		812153	3					
ANR	812213	Identifier	avpkt		812153	0					
ANR	812214	IfStatement	if ( ret >= 0 && got_frame )		812153	4					
ANR	812215	Condition	ret >= 0 && got_frame	31:8:540:560	812153	0	True				
ANR	812216	AndExpression	ret >= 0 && got_frame		812153	0		&&			
ANR	812217	RelationalExpression	ret >= 0		812153	0		>=			
ANR	812218	Identifier	ret		812153	0					
ANR	812219	PrimaryExpression	0		812153	1					
ANR	812220	Identifier	got_frame		812153	1					
ANR	812221	CompoundStatement		31:8:490:706	812153	1					
ANR	812222	IdentifierDeclStatement	"int ch , plane_size ;"	33:8:574:592	812153	0	True				
ANR	812223	IdentifierDecl	ch		812153	0					
ANR	812224	IdentifierDeclType	int		812153	0					
ANR	812225	Identifier	ch		812153	1					
ANR	812226	IdentifierDecl	plane_size		812153	1					
ANR	812227	IdentifierDeclType	int		812153	0					
ANR	812228	Identifier	plane_size		812153	1					
ANR	812229	IdentifierDeclStatement	int planar = av_sample_fmt_is_planar ( avctx -> sample_fmt ) ;	35:8:603:658	812153	1	True				
ANR	812230	IdentifierDecl	planar = av_sample_fmt_is_planar ( avctx -> sample_fmt )		812153	0					
ANR	812231	IdentifierDeclType	int		812153	0					
ANR	812232	Identifier	planar		812153	1					
ANR	812233	AssignmentExpression	planar = av_sample_fmt_is_planar ( avctx -> sample_fmt )		812153	2		=			
ANR	812234	Identifier	planar		812153	0					
ANR	812235	CallExpression	av_sample_fmt_is_planar ( avctx -> sample_fmt )		812153	1					
ANR	812236	Callee	av_sample_fmt_is_planar		812153	0					
ANR	812237	Identifier	av_sample_fmt_is_planar		812153	0					
ANR	812238	ArgumentList	avctx -> sample_fmt		812153	1					
ANR	812239	Argument	avctx -> sample_fmt		812153	0					
ANR	812240	PtrMemberAccess	avctx -> sample_fmt		812153	0					
ANR	812241	Identifier	avctx		812153	0					
ANR	812242	Identifier	sample_fmt		812153	1					
ANR	812243	IdentifierDeclStatement	"int data_size = av_samples_get_buffer_size ( & plane_size , avctx -> channels , frame . nb_samples , avctx -> sample_fmt , 1 ) ;"	37:8:669:885	812153	2	True				
ANR	812244	IdentifierDecl	"data_size = av_samples_get_buffer_size ( & plane_size , avctx -> channels , frame . nb_samples , avctx -> sample_fmt , 1 )"		812153	0					
ANR	812245	IdentifierDeclType	int		812153	0					
ANR	812246	Identifier	data_size		812153	1					
ANR	812247	AssignmentExpression	"data_size = av_samples_get_buffer_size ( & plane_size , avctx -> channels , frame . nb_samples , avctx -> sample_fmt , 1 )"		812153	2		=			
ANR	812248	Identifier	data_size		812153	0					
ANR	812249	CallExpression	"av_samples_get_buffer_size ( & plane_size , avctx -> channels , frame . nb_samples , avctx -> sample_fmt , 1 )"		812153	1					
ANR	812250	Callee	av_samples_get_buffer_size		812153	0					
ANR	812251	Identifier	av_samples_get_buffer_size		812153	0					
ANR	812252	ArgumentList	& plane_size		812153	1					
ANR	812253	Argument	& plane_size		812153	0					
ANR	812254	UnaryOperationExpression	& plane_size		812153	0					
ANR	812255	UnaryOperator	&		812153	0					
ANR	812256	Identifier	plane_size		812153	1					
ANR	812257	Argument	avctx -> channels		812153	1					
ANR	812258	PtrMemberAccess	avctx -> channels		812153	0					
ANR	812259	Identifier	avctx		812153	0					
ANR	812260	Identifier	channels		812153	1					
ANR	812261	Argument	frame . nb_samples		812153	2					
ANR	812262	MemberAccess	frame . nb_samples		812153	0					
ANR	812263	Identifier	frame		812153	0					
ANR	812264	Identifier	nb_samples		812153	1					
ANR	812265	Argument	avctx -> sample_fmt		812153	3					
ANR	812266	PtrMemberAccess	avctx -> sample_fmt		812153	0					
ANR	812267	Identifier	avctx		812153	0					
ANR	812268	Identifier	sample_fmt		812153	1					
ANR	812269	Argument	1		812153	4					
ANR	812270	PrimaryExpression	1		812153	0					
ANR	812271	IfStatement	if ( * frame_size_ptr < data_size )		812153	3					
ANR	812272	Condition	* frame_size_ptr < data_size	43:12:900:926	812153	0	True				
ANR	812273	RelationalExpression	* frame_size_ptr < data_size		812153	0		<			
ANR	812274	UnaryOperationExpression	* frame_size_ptr		812153	0					
ANR	812275	UnaryOperator	*		812153	0					
ANR	812276	Identifier	frame_size_ptr		812153	1					
ANR	812277	Identifier	data_size		812153	1					
ANR	812278	CompoundStatement		37:41:750:750	812153	1					
ANR	812279	Statement	av_log	45:12:944:949	812153	0	True				
ANR	812280	Statement	(	45:18:950:950	812153	1	True				
ANR	812281	Statement	avctx	45:19:951:955	812153	2	True				
ANR	812282	Statement	","	45:24:956:956	812153	3	True				
ANR	812283	Statement	AV_LOG_ERROR	45:26:958:969	812153	4	True				
ANR	812284	Statement	","	45:38:970:970	812153	5	True				
ANR	812285	Statement	"""output buffer size is too small for """	45:40:972:1009	812153	6	True				
ANR	812286	Statement	"""the current frame (%d < %d)\\n"""	47:19:1031:1061	812153	7	True				
ANR	812287	Statement	","	47:50:1062:1062	812153	8	True				
ANR	812288	Statement	*	47:52:1064:1064	812153	9	True				
ANR	812289	Statement	frame_size_ptr	47:53:1065:1078	812153	10	True				
ANR	812290	Statement	","	47:67:1079:1079	812153	11	True				
ANR	812291	Statement	data_size	47:69:1081:1089	812153	12	True				
ANR	812292	Statement	)	47:78:1090:1090	812153	13	True				
ANR	812293	ExpressionStatement		47:79:1091:1091	812153	14	True				
ANR	812294	ReturnStatement	return AVERROR ( EINVAL ) ;	49:12:1106:1128	812153	15	True				
ANR	812295	CallExpression	AVERROR ( EINVAL )		812153	0					
ANR	812296	Callee	AVERROR		812153	0					
ANR	812297	Identifier	AVERROR		812153	0					
ANR	812298	ArgumentList	EINVAL		812153	1					
ANR	812299	Argument	EINVAL		812153	0					
ANR	812300	Identifier	EINVAL		812153	0					
ANR	812301	ExpressionStatement	"memcpy ( samples , frame . extended_data [ 0 ] , plane_size )"	55:8:1152:1203	812153	4	True				
ANR	812302	CallExpression	"memcpy ( samples , frame . extended_data [ 0 ] , plane_size )"		812153	0					
ANR	812303	Callee	memcpy		812153	0					
ANR	812304	Identifier	memcpy		812153	0					
ANR	812305	ArgumentList	samples		812153	1					
ANR	812306	Argument	samples		812153	0					
ANR	812307	Identifier	samples		812153	0					
ANR	812308	Argument	frame . extended_data [ 0 ]		812153	1					
ANR	812309	ArrayIndexing	frame . extended_data [ 0 ]		812153	0					
ANR	812310	MemberAccess	frame . extended_data		812153	0					
ANR	812311	Identifier	frame		812153	0					
ANR	812312	Identifier	extended_data		812153	1					
ANR	812313	PrimaryExpression	0		812153	1					
ANR	812314	Argument	plane_size		812153	2					
ANR	812315	Identifier	plane_size		812153	0					
ANR	812316	IfStatement	if ( planar && avctx -> channels > 1 )		812153	5					
ANR	812317	Condition	planar && avctx -> channels > 1	59:12:1220:1248	812153	0	True				
ANR	812318	AndExpression	planar && avctx -> channels > 1		812153	0		&&			
ANR	812319	Identifier	planar		812153	0					
ANR	812320	RelationalExpression	avctx -> channels > 1		812153	1		>			
ANR	812321	PtrMemberAccess	avctx -> channels		812153	0					
ANR	812322	Identifier	avctx		812153	0					
ANR	812323	Identifier	channels		812153	1					
ANR	812324	PrimaryExpression	1		812153	1					
ANR	812325	CompoundStatement		55:12:1087:1135	812153	1					
ANR	812326	IdentifierDeclStatement	uint8_t * out = ( ( uint8_t * ) samples ) + plane_size ;	61:12:1266:1314	812153	0	True				
ANR	812327	IdentifierDecl	* out = ( ( uint8_t * ) samples ) + plane_size		812153	0					
ANR	812328	IdentifierDeclType	uint8_t *		812153	0					
ANR	812329	Identifier	out		812153	1					
ANR	812330	AssignmentExpression	* out = ( ( uint8_t * ) samples ) + plane_size		812153	2		=			
ANR	812331	Identifier	out		812153	0					
ANR	812332	AdditiveExpression	( ( uint8_t * ) samples ) + plane_size		812153	1		+			
ANR	812333	CastExpression	( uint8_t * ) samples		812153	0					
ANR	812334	CastTarget	uint8_t *		812153	0					
ANR	812335	Identifier	samples		812153	1					
ANR	812336	Identifier	plane_size		812153	1					
ANR	812337	ForStatement	for ( ch = 1 ; ch < avctx -> channels ; ch ++ )		812153	1					
ANR	812338	ForInit	ch = 1 ;	63:17:1334:1340	812153	0	True				
ANR	812339	AssignmentExpression	ch = 1		812153	0		=			
ANR	812340	Identifier	ch		812153	0					
ANR	812341	PrimaryExpression	1		812153	1					
ANR	812342	Condition	ch < avctx -> channels	63:25:1342:1361	812153	1	True				
ANR	812343	RelationalExpression	ch < avctx -> channels		812153	0		<			
ANR	812344	Identifier	ch		812153	0					
ANR	812345	PtrMemberAccess	avctx -> channels		812153	1					
ANR	812346	Identifier	avctx		812153	0					
ANR	812347	Identifier	channels		812153	1					
ANR	812348	PostIncDecOperationExpression	ch ++	63:47:1364:1367	812153	2	True				
ANR	812349	Identifier	ch		812153	0					
ANR	812350	IncDec	++		812153	1					
ANR	812351	CompoundStatement		57:53:1191:1191	812153	3					
ANR	812352	ExpressionStatement	"memcpy ( out , frame . extended_data [ ch ] , plane_size )"	65:16:1389:1437	812153	0	True				
ANR	812353	CallExpression	"memcpy ( out , frame . extended_data [ ch ] , plane_size )"		812153	0					
ANR	812354	Callee	memcpy		812153	0					
ANR	812355	Identifier	memcpy		812153	0					
ANR	812356	ArgumentList	out		812153	1					
ANR	812357	Argument	out		812153	0					
ANR	812358	Identifier	out		812153	0					
ANR	812359	Argument	frame . extended_data [ ch ]		812153	1					
ANR	812360	ArrayIndexing	frame . extended_data [ ch ]		812153	0					
ANR	812361	MemberAccess	frame . extended_data		812153	0					
ANR	812362	Identifier	frame		812153	0					
ANR	812363	Identifier	extended_data		812153	1					
ANR	812364	Identifier	ch		812153	1					
ANR	812365	Argument	plane_size		812153	2					
ANR	812366	Identifier	plane_size		812153	0					
ANR	812367	ExpressionStatement	out += plane_size	67:16:1456:1473	812153	1	True				
ANR	812368	AssignmentExpression	out += plane_size		812153	0		+=			
ANR	812369	Identifier	out		812153	0					
ANR	812370	Identifier	plane_size		812153	1					
ANR	812371	ExpressionStatement	* frame_size_ptr = data_size	73:8:1510:1537	812153	6	True				
ANR	812372	AssignmentExpression	* frame_size_ptr = data_size		812153	0		=			
ANR	812373	UnaryOperationExpression	* frame_size_ptr		812153	0					
ANR	812374	UnaryOperator	*		812153	0					
ANR	812375	Identifier	frame_size_ptr		812153	1					
ANR	812376	Identifier	data_size		812153	1					
ANR	812377	ElseStatement	else		812153	0					
ANR	812378	CompoundStatement		69:11:1372:1372	812153	0					
ANR	812379	ExpressionStatement	* frame_size_ptr = 0	77:8:1562:1581	812153	0	True				
ANR	812380	AssignmentExpression	* frame_size_ptr = 0		812153	0		=			
ANR	812381	UnaryOperationExpression	* frame_size_ptr		812153	0					
ANR	812382	UnaryOperator	*		812153	0					
ANR	812383	Identifier	frame_size_ptr		812153	1					
ANR	812384	PrimaryExpression	0		812153	1					
ANR	812385	ReturnStatement	return ret ;	81:4:1595:1605	812153	5	True				
ANR	812386	Identifier	ret		812153	0					
ANR	812387	ReturnType	int attribute_align_arg		812153	1					
ANR	812388	Identifier	avcodec_decode_audio3		812153	2					
ANR	812389	ParameterList	"AVCodecContext * avctx , int16_t * samples , int * frame_size_ptr , AVPacket * avpkt"		812153	3					
ANR	812390	Parameter	AVCodecContext * avctx	1:46:46:66	812153	0	True				
ANR	812391	ParameterType	AVCodecContext *		812153	0					
ANR	812392	Identifier	avctx		812153	1					
ANR	812393	Parameter	int16_t * samples	1:69:69:84	812153	1	True				
ANR	812394	ParameterType	int16_t *		812153	0					
ANR	812395	Identifier	samples		812153	1					
ANR	812396	Parameter	int * frame_size_ptr	3:25:113:131	812153	2	True				
ANR	812397	ParameterType	int *		812153	0					
ANR	812398	Identifier	frame_size_ptr		812153	1					
ANR	812399	Parameter	AVPacket * avpkt	5:25:160:174	812153	3	True				
ANR	812400	ParameterType	AVPacket *		812153	0					
ANR	812401	Identifier	avpkt		812153	1					
ANR	812402	CFGEntryNode	ENTRY		812153		True				
ANR	812403	CFGExitNode	EXIT		812153		True				
ANR	812404	Symbol	& plane_size		812153						
ANR	812405	Symbol	frame_size_ptr		812153						
ANR	812406	Symbol	avcodec_default_get_buffer		812153						
ANR	812407	Symbol	* frame		812153						
ANR	812408	Symbol	* ch		812153						
ANR	812409	Symbol	avpkt		812153						
ANR	812410	Symbol	& got_frame		812153						
ANR	812411	Symbol	plane_size		812153						
ANR	812412	Symbol	out		812153						
ANR	812413	Symbol	avctx -> channels		812153						
ANR	812414	Symbol	frame . nb_samples		812153						
ANR	812415	Symbol	* frame . extended_data		812153						
ANR	812416	Symbol	got_frame		812153						
ANR	812417	Symbol	* frame_size_ptr		812153						
ANR	812418	Symbol	av_samples_get_buffer_size		812153						
ANR	812419	Symbol	avctx		812153						
ANR	812420	Symbol	ret		812153						
ANR	812421	Symbol	data_size		812153						
ANR	812422	Symbol	avctx -> sample_fmt		812153						
ANR	812423	Symbol	frame . extended_data		812153						
ANR	812424	Symbol	avctx -> get_buffer		812153						
ANR	812425	Symbol	planar		812153						
ANR	812426	Symbol	ch		812153						
ANR	812427	Symbol	avcodec_decode_audio4		812153						
ANR	812428	Symbol	& frame		812153						
ANR	812429	Symbol	samples		812153						
ANR	812430	Symbol	EINVAL		812153						
ANR	812431	Symbol	* avctx		812153						
ANR	812432	Symbol	AVERROR		812153						
ANR	812433	Symbol	av_sample_fmt_is_planar		812153						
ANR	812434	Symbol	frame		812153						
