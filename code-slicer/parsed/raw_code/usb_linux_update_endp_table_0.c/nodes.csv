command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8687814	File	/home/p4ultr4n/workplace/ReVeal/raw_code/usb_linux_update_endp_table_0.c								
ANR	8687815	Function	usb_linux_update_endp_table	1:0:0:3084							
ANR	8687816	FunctionDef	usb_linux_update_endp_table (USBHostDevice * s)		8687815	0					
ANR	8687817	CompoundStatement		3:0:58:3084	8687815	0					
ANR	8687818	IdentifierDeclStatement	uint8_t * descriptors ;	5:4:65:85	8687815	0	True				
ANR	8687819	IdentifierDecl	* descriptors		8687815	0					
ANR	8687820	IdentifierDeclType	uint8_t *		8687815	0					
ANR	8687821	Identifier	descriptors		8687815	1					
ANR	8687822	IdentifierDeclStatement	"uint8_t devep , type , alt_interface ;"	7:4:92:126	8687815	1	True				
ANR	8687823	IdentifierDecl	devep		8687815	0					
ANR	8687824	IdentifierDeclType	uint8_t		8687815	0					
ANR	8687825	Identifier	devep		8687815	1					
ANR	8687826	IdentifierDecl	type		8687815	1					
ANR	8687827	IdentifierDeclType	uint8_t		8687815	0					
ANR	8687828	Identifier	type		8687815	1					
ANR	8687829	IdentifierDecl	alt_interface		8687815	2					
ANR	8687830	IdentifierDeclType	uint8_t		8687815	0					
ANR	8687831	Identifier	alt_interface		8687815	1					
ANR	8687832	IdentifierDeclStatement	"int interface , length , i , ep , pid ;"	9:4:133:166	8687815	2	True				
ANR	8687833	IdentifierDecl	interface		8687815	0					
ANR	8687834	IdentifierDeclType	int		8687815	0					
ANR	8687835	Identifier	interface		8687815	1					
ANR	8687836	IdentifierDecl	length		8687815	1					
ANR	8687837	IdentifierDeclType	int		8687815	0					
ANR	8687838	Identifier	length		8687815	1					
ANR	8687839	IdentifierDecl	i		8687815	2					
ANR	8687840	IdentifierDeclType	int		8687815	0					
ANR	8687841	Identifier	i		8687815	1					
ANR	8687842	IdentifierDecl	ep		8687815	3					
ANR	8687843	IdentifierDeclType	int		8687815	0					
ANR	8687844	Identifier	ep		8687815	1					
ANR	8687845	IdentifierDecl	pid		8687815	4					
ANR	8687846	IdentifierDeclType	int		8687815	0					
ANR	8687847	Identifier	pid		8687815	1					
ANR	8687848	IdentifierDeclStatement	struct endp_data * epd ;	11:4:173:194	8687815	3	True				
ANR	8687849	IdentifierDecl	* epd		8687815	0					
ANR	8687850	IdentifierDeclType	struct endp_data *		8687815	0					
ANR	8687851	Identifier	epd		8687815	1					
ANR	8687852	ForStatement	for ( i = 0 ; i < MAX_ENDPOINTS ; i ++ )		8687815	4					
ANR	8687853	ForInit	i = 0 ;	15:9:208:213	8687815	0	True				
ANR	8687854	AssignmentExpression	i = 0		8687815	0		=			
ANR	8687855	Identifier	i		8687815	0					
ANR	8687856	PrimaryExpression	0		8687815	1					
ANR	8687857	Condition	i < MAX_ENDPOINTS	15:16:215:231	8687815	1	True				
ANR	8687858	RelationalExpression	i < MAX_ENDPOINTS		8687815	0		<			
ANR	8687859	Identifier	i		8687815	0					
ANR	8687860	Identifier	MAX_ENDPOINTS		8687815	1					
ANR	8687861	PostIncDecOperationExpression	i ++	15:35:234:236	8687815	2	True				
ANR	8687862	Identifier	i		8687815	0					
ANR	8687863	IncDec	++		8687815	1					
ANR	8687864	CompoundStatement		13:40:180:180	8687815	3					
ANR	8687865	ExpressionStatement	s -> ep_in [ i ] . type = INVALID_EP_TYPE	17:8:250:284	8687815	0	True				
ANR	8687866	AssignmentExpression	s -> ep_in [ i ] . type = INVALID_EP_TYPE		8687815	0		=			
ANR	8687867	MemberAccess	s -> ep_in [ i ] . type		8687815	0					
ANR	8687868	ArrayIndexing	s -> ep_in [ i ]		8687815	0					
ANR	8687869	PtrMemberAccess	s -> ep_in		8687815	0					
ANR	8687870	Identifier	s		8687815	0					
ANR	8687871	Identifier	ep_in		8687815	1					
ANR	8687872	Identifier	i		8687815	1					
ANR	8687873	Identifier	type		8687815	1					
ANR	8687874	Identifier	INVALID_EP_TYPE		8687815	1					
ANR	8687875	ExpressionStatement	s -> ep_out [ i ] . type = INVALID_EP_TYPE	19:8:295:330	8687815	1	True				
ANR	8687876	AssignmentExpression	s -> ep_out [ i ] . type = INVALID_EP_TYPE		8687815	0		=			
ANR	8687877	MemberAccess	s -> ep_out [ i ] . type		8687815	0					
ANR	8687878	ArrayIndexing	s -> ep_out [ i ]		8687815	0					
ANR	8687879	PtrMemberAccess	s -> ep_out		8687815	0					
ANR	8687880	Identifier	s		8687815	0					
ANR	8687881	Identifier	ep_out		8687815	1					
ANR	8687882	Identifier	i		8687815	1					
ANR	8687883	Identifier	type		8687815	1					
ANR	8687884	Identifier	INVALID_EP_TYPE		8687815	1					
ANR	8687885	IfStatement	if ( s -> configuration == 0 )		8687815	5					
ANR	8687886	Condition	s -> configuration == 0	25:8:350:370	8687815	0	True				
ANR	8687887	EqualityExpression	s -> configuration == 0		8687815	0		==			
ANR	8687888	PtrMemberAccess	s -> configuration		8687815	0					
ANR	8687889	Identifier	s		8687815	0					
ANR	8687890	Identifier	configuration		8687815	1					
ANR	8687891	PrimaryExpression	0		8687815	1					
ANR	8687892	CompoundStatement		23:31:314:314	8687815	1					
ANR	8687893	ReturnStatement	return 0 ;	29:8:450:458	8687815	0	True				
ANR	8687894	PrimaryExpression	0		8687815	0					
ANR	8687895	ExpressionStatement	descriptors = & s -> descr [ 18 ]	39:4:584:611	8687815	6	True				
ANR	8687896	AssignmentExpression	descriptors = & s -> descr [ 18 ]		8687815	0		=			
ANR	8687897	Identifier	descriptors		8687815	0					
ANR	8687898	UnaryOperationExpression	& s -> descr [ 18 ]		8687815	1					
ANR	8687899	UnaryOperator	&		8687815	0					
ANR	8687900	ArrayIndexing	s -> descr [ 18 ]		8687815	1					
ANR	8687901	PtrMemberAccess	s -> descr		8687815	0					
ANR	8687902	Identifier	s		8687815	0					
ANR	8687903	Identifier	descr		8687815	1					
ANR	8687904	PrimaryExpression	18		8687815	1					
ANR	8687905	ExpressionStatement	length = s -> descr_len - 18	41:4:618:644	8687815	7	True				
ANR	8687906	AssignmentExpression	length = s -> descr_len - 18		8687815	0		=			
ANR	8687907	Identifier	length		8687815	0					
ANR	8687908	AdditiveExpression	s -> descr_len - 18		8687815	1		-			
ANR	8687909	PtrMemberAccess	s -> descr_len		8687815	0					
ANR	8687910	Identifier	s		8687815	0					
ANR	8687911	Identifier	descr_len		8687815	1					
ANR	8687912	PrimaryExpression	18		8687815	1					
ANR	8687913	ExpressionStatement	i = 0	43:4:651:656	8687815	8	True				
ANR	8687914	AssignmentExpression	i = 0		8687815	0		=			
ANR	8687915	Identifier	i		8687815	0					
ANR	8687916	PrimaryExpression	0		8687815	1					
ANR	8687917	IfStatement	if ( descriptors [ i + 1 ] != USB_DT_CONFIG || descriptors [ i + 5 ] != s -> configuration )		8687815	9					
ANR	8687918	Condition	descriptors [ i + 1 ] != USB_DT_CONFIG || descriptors [ i + 5 ] != s -> configuration	47:8:669:754	8687815	0	True				
ANR	8687919	OrExpression	descriptors [ i + 1 ] != USB_DT_CONFIG || descriptors [ i + 5 ] != s -> configuration		8687815	0		||			
ANR	8687920	EqualityExpression	descriptors [ i + 1 ] != USB_DT_CONFIG		8687815	0		!=			
ANR	8687921	ArrayIndexing	descriptors [ i + 1 ]		8687815	0					
ANR	8687922	Identifier	descriptors		8687815	0					
ANR	8687923	AdditiveExpression	i + 1		8687815	1		+			
ANR	8687924	Identifier	i		8687815	0					
ANR	8687925	PrimaryExpression	1		8687815	1					
ANR	8687926	Identifier	USB_DT_CONFIG		8687815	1					
ANR	8687927	EqualityExpression	descriptors [ i + 5 ] != s -> configuration		8687815	1		!=			
ANR	8687928	ArrayIndexing	descriptors [ i + 5 ]		8687815	0					
ANR	8687929	Identifier	descriptors		8687815	0					
ANR	8687930	AdditiveExpression	i + 5		8687815	1		+			
ANR	8687931	Identifier	i		8687815	0					
ANR	8687932	PrimaryExpression	5		8687815	1					
ANR	8687933	PtrMemberAccess	s -> configuration		8687815	1					
ANR	8687934	Identifier	s		8687815	0					
ANR	8687935	Identifier	configuration		8687815	1					
ANR	8687936	CompoundStatement		47:48:698:698	8687815	1					
ANR	8687937	ExpressionStatement	"fprintf ( stderr , ""invalid descriptor data - configuration %d\\n"" , s -> configuration )"	51:8:768:866	8687815	0	True				
ANR	8687938	CallExpression	"fprintf ( stderr , ""invalid descriptor data - configuration %d\\n"" , s -> configuration )"		8687815	0					
ANR	8687939	Callee	fprintf		8687815	0					
ANR	8687940	Identifier	fprintf		8687815	0					
ANR	8687941	ArgumentList	stderr		8687815	1					
ANR	8687942	Argument	stderr		8687815	0					
ANR	8687943	Identifier	stderr		8687815	0					
ANR	8687944	Argument	"""invalid descriptor data - configuration %d\\n"""		8687815	1					
ANR	8687945	PrimaryExpression	"""invalid descriptor data - configuration %d\\n"""		8687815	0					
ANR	8687946	Argument	s -> configuration		8687815	2					
ANR	8687947	PtrMemberAccess	s -> configuration		8687815	0					
ANR	8687948	Identifier	s		8687815	0					
ANR	8687949	Identifier	configuration		8687815	1					
ANR	8687950	ReturnStatement	return 1 ;	55:8:877:885	8687815	1	True				
ANR	8687951	PrimaryExpression	1		8687815	0					
ANR	8687952	ExpressionStatement	i += descriptors [ i ]	59:4:899:918	8687815	10	True				
ANR	8687953	AssignmentExpression	i += descriptors [ i ]		8687815	0		+=			
ANR	8687954	Identifier	i		8687815	0					
ANR	8687955	ArrayIndexing	descriptors [ i ]		8687815	1					
ANR	8687956	Identifier	descriptors		8687815	0					
ANR	8687957	Identifier	i		8687815	1					
ANR	8687958	WhileStatement	while ( i < length )		8687815	11					
ANR	8687959	Condition	i < length	63:11:934:943	8687815	0	True				
ANR	8687960	RelationalExpression	i < length		8687815	0		<			
ANR	8687961	Identifier	i		8687815	0					
ANR	8687962	Identifier	length		8687815	1					
ANR	8687963	CompoundStatement		61:23:887:887	8687815	1					
ANR	8687964	IfStatement	if ( descriptors [ i + 1 ] != USB_DT_INTERFACE || ( descriptors [ i + 1 ] == USB_DT_INTERFACE && descriptors [ i + 4 ] == 0 ) )		8687815	0					
ANR	8687965	Condition	descriptors [ i + 1 ] != USB_DT_INTERFACE || ( descriptors [ i + 1 ] == USB_DT_INTERFACE && descriptors [ i + 4 ] == 0 )	65:12:961:1096	8687815	0	True				
ANR	8687966	OrExpression	descriptors [ i + 1 ] != USB_DT_INTERFACE || ( descriptors [ i + 1 ] == USB_DT_INTERFACE && descriptors [ i + 4 ] == 0 )		8687815	0		||			
ANR	8687967	EqualityExpression	descriptors [ i + 1 ] != USB_DT_INTERFACE		8687815	0		!=			
ANR	8687968	ArrayIndexing	descriptors [ i + 1 ]		8687815	0					
ANR	8687969	Identifier	descriptors		8687815	0					
ANR	8687970	AdditiveExpression	i + 1		8687815	1		+			
ANR	8687971	Identifier	i		8687815	0					
ANR	8687972	PrimaryExpression	1		8687815	1					
ANR	8687973	Identifier	USB_DT_INTERFACE		8687815	1					
ANR	8687974	AndExpression	descriptors [ i + 1 ] == USB_DT_INTERFACE && descriptors [ i + 4 ] == 0		8687815	1		&&			
ANR	8687975	EqualityExpression	descriptors [ i + 1 ] == USB_DT_INTERFACE		8687815	0		==			
ANR	8687976	ArrayIndexing	descriptors [ i + 1 ]		8687815	0					
ANR	8687977	Identifier	descriptors		8687815	0					
ANR	8687978	AdditiveExpression	i + 1		8687815	1		+			
ANR	8687979	Identifier	i		8687815	0					
ANR	8687980	PrimaryExpression	1		8687815	1					
ANR	8687981	Identifier	USB_DT_INTERFACE		8687815	1					
ANR	8687982	EqualityExpression	descriptors [ i + 4 ] == 0		8687815	1		==			
ANR	8687983	ArrayIndexing	descriptors [ i + 4 ]		8687815	0					
ANR	8687984	Identifier	descriptors		8687815	0					
ANR	8687985	AdditiveExpression	i + 4		8687815	1		+			
ANR	8687986	Identifier	i		8687815	0					
ANR	8687987	PrimaryExpression	4		8687815	1					
ANR	8687988	PrimaryExpression	0		8687815	1					
ANR	8687989	CompoundStatement		67:39:1040:1040	8687815	1					
ANR	8687990	ExpressionStatement	i += descriptors [ i ]	71:12:1114:1133	8687815	0	True				
ANR	8687991	AssignmentExpression	i += descriptors [ i ]		8687815	0		+=			
ANR	8687992	Identifier	i		8687815	0					
ANR	8687993	ArrayIndexing	descriptors [ i ]		8687815	1					
ANR	8687994	Identifier	descriptors		8687815	0					
ANR	8687995	Identifier	i		8687815	1					
ANR	8687996	ContinueStatement	continue ;	73:12:1148:1156	8687815	1	True				
ANR	8687997	ExpressionStatement	interface = descriptors [ i + 2 ]	79:8:1180:1210	8687815	1	True				
ANR	8687998	AssignmentExpression	interface = descriptors [ i + 2 ]		8687815	0		=			
ANR	8687999	Identifier	interface		8687815	0					
ANR	8688000	ArrayIndexing	descriptors [ i + 2 ]		8687815	1					
ANR	8688001	Identifier	descriptors		8687815	0					
ANR	8688002	AdditiveExpression	i + 2		8687815	1		+			
ANR	8688003	Identifier	i		8687815	0					
ANR	8688004	PrimaryExpression	2		8687815	1					
ANR	8688005	ExpressionStatement	"alt_interface = usb_linux_get_alt_setting ( s , s -> configuration , interface )"	81:8:1221:1345	8687815	2	True				
ANR	8688006	AssignmentExpression	"alt_interface = usb_linux_get_alt_setting ( s , s -> configuration , interface )"		8687815	0		=			
ANR	8688007	Identifier	alt_interface		8687815	0					
ANR	8688008	CallExpression	"usb_linux_get_alt_setting ( s , s -> configuration , interface )"		8687815	1					
ANR	8688009	Callee	usb_linux_get_alt_setting		8687815	0					
ANR	8688010	Identifier	usb_linux_get_alt_setting		8687815	0					
ANR	8688011	ArgumentList	s		8687815	1					
ANR	8688012	Argument	s		8687815	0					
ANR	8688013	Identifier	s		8687815	0					
ANR	8688014	Argument	s -> configuration		8687815	1					
ANR	8688015	PtrMemberAccess	s -> configuration		8687815	0					
ANR	8688016	Identifier	s		8687815	0					
ANR	8688017	Identifier	configuration		8687815	1					
ANR	8688018	Argument	interface		8687815	2					
ANR	8688019	Identifier	interface		8687815	0					
ANR	8688020	IfStatement	if ( descriptors [ i + 3 ] != alt_interface )		8687815	3					
ANR	8688021	Condition	descriptors [ i + 3 ] != alt_interface	91:12:1464:1498	8687815	0	True				
ANR	8688022	EqualityExpression	descriptors [ i + 3 ] != alt_interface		8687815	0		!=			
ANR	8688023	ArrayIndexing	descriptors [ i + 3 ]		8687815	0					
ANR	8688024	Identifier	descriptors		8687815	0					
ANR	8688025	AdditiveExpression	i + 3		8687815	1		+			
ANR	8688026	Identifier	i		8687815	0					
ANR	8688027	PrimaryExpression	3		8687815	1					
ANR	8688028	Identifier	alt_interface		8687815	1					
ANR	8688029	CompoundStatement		89:49:1442:1442	8687815	1					
ANR	8688030	ExpressionStatement	i += descriptors [ i ]	93:12:1516:1535	8687815	0	True				
ANR	8688031	AssignmentExpression	i += descriptors [ i ]		8687815	0		+=			
ANR	8688032	Identifier	i		8687815	0					
ANR	8688033	ArrayIndexing	descriptors [ i ]		8687815	1					
ANR	8688034	Identifier	descriptors		8687815	0					
ANR	8688035	Identifier	i		8687815	1					
ANR	8688036	ContinueStatement	continue ;	95:12:1550:1558	8687815	1	True				
ANR	8688037	WhileStatement	while ( i < length && descriptors [ i + 1 ] != USB_DT_ENDPOINT )		8687815	4					
ANR	8688038	Condition	i < length && descriptors [ i + 1 ] != USB_DT_ENDPOINT	103:15:1629:1678	8687815	0	True				
ANR	8688039	AndExpression	i < length && descriptors [ i + 1 ] != USB_DT_ENDPOINT		8687815	0		&&			
ANR	8688040	RelationalExpression	i < length		8687815	0		<			
ANR	8688041	Identifier	i		8687815	0					
ANR	8688042	Identifier	length		8687815	1					
ANR	8688043	EqualityExpression	descriptors [ i + 1 ] != USB_DT_ENDPOINT		8687815	1		!=			
ANR	8688044	ArrayIndexing	descriptors [ i + 1 ]		8687815	0					
ANR	8688045	Identifier	descriptors		8687815	0					
ANR	8688046	AdditiveExpression	i + 1		8687815	1		+			
ANR	8688047	Identifier	i		8687815	0					
ANR	8688048	PrimaryExpression	1		8687815	1					
ANR	8688049	Identifier	USB_DT_ENDPOINT		8687815	1					
ANR	8688050	CompoundStatement		101:67:1622:1622	8687815	1					
ANR	8688051	ExpressionStatement	i += descriptors [ i ]	105:12:1696:1715	8687815	0	True				
ANR	8688052	AssignmentExpression	i += descriptors [ i ]		8687815	0		+=			
ANR	8688053	Identifier	i		8687815	0					
ANR	8688054	ArrayIndexing	descriptors [ i ]		8687815	1					
ANR	8688055	Identifier	descriptors		8687815	0					
ANR	8688056	Identifier	i		8687815	1					
ANR	8688057	IfStatement	if ( i >= length )		8687815	5					
ANR	8688058	Condition	i >= length	111:12:1743:1753	8687815	0	True				
ANR	8688059	RelationalExpression	i >= length		8687815	0		>=			
ANR	8688060	Identifier	i		8687815	0					
ANR	8688061	Identifier	length		8687815	1					
ANR	8688062	BreakStatement	break ;	113:12:1769:1774	8687815	1	True				
ANR	8688063	WhileStatement	while ( i < length )		8687815	6					
ANR	8688064	Condition	i < length	117:15:1794:1803	8687815	0	True				
ANR	8688065	RelationalExpression	i < length		8687815	0		<			
ANR	8688066	Identifier	i		8687815	0					
ANR	8688067	Identifier	length		8687815	1					
ANR	8688068	CompoundStatement		115:27:1747:1747	8687815	1					
ANR	8688069	IfStatement	if ( descriptors [ i + 1 ] != USB_DT_ENDPOINT )		8687815	0					
ANR	8688070	Condition	descriptors [ i + 1 ] != USB_DT_ENDPOINT	119:16:1825:1861	8687815	0	True				
ANR	8688071	EqualityExpression	descriptors [ i + 1 ] != USB_DT_ENDPOINT		8687815	0		!=			
ANR	8688072	ArrayIndexing	descriptors [ i + 1 ]		8687815	0					
ANR	8688073	Identifier	descriptors		8687815	0					
ANR	8688074	AdditiveExpression	i + 1		8687815	1		+			
ANR	8688075	Identifier	i		8687815	0					
ANR	8688076	PrimaryExpression	1		8687815	1					
ANR	8688077	Identifier	USB_DT_ENDPOINT		8687815	1					
ANR	8688078	CompoundStatement		117:55:1805:1805	8687815	1					
ANR	8688079	BreakStatement	break ;	121:16:1883:1888	8687815	0	True				
ANR	8688080	ExpressionStatement	devep = descriptors [ i + 2 ]	127:12:1920:1946	8687815	1	True				
ANR	8688081	AssignmentExpression	devep = descriptors [ i + 2 ]		8687815	0		=			
ANR	8688082	Identifier	devep		8687815	0					
ANR	8688083	ArrayIndexing	descriptors [ i + 2 ]		8687815	1					
ANR	8688084	Identifier	descriptors		8687815	0					
ANR	8688085	AdditiveExpression	i + 2		8687815	1		+			
ANR	8688086	Identifier	i		8687815	0					
ANR	8688087	PrimaryExpression	2		8687815	1					
ANR	8688088	ExpressionStatement	pid = ( devep & USB_DIR_IN ) ? USB_TOKEN_IN : USB_TOKEN_OUT	129:12:1961:2018	8687815	2	True				
ANR	8688089	AssignmentExpression	pid = ( devep & USB_DIR_IN ) ? USB_TOKEN_IN : USB_TOKEN_OUT		8687815	0		=			
ANR	8688090	Identifier	pid		8687815	0					
ANR	8688091	ConditionalExpression	( devep & USB_DIR_IN ) ? USB_TOKEN_IN : USB_TOKEN_OUT		8687815	1					
ANR	8688092	Condition	devep & USB_DIR_IN		8687815	0					
ANR	8688093	BitAndExpression	devep & USB_DIR_IN		8687815	0		&			
ANR	8688094	Identifier	devep		8687815	0					
ANR	8688095	Identifier	USB_DIR_IN		8687815	1					
ANR	8688096	Identifier	USB_TOKEN_IN		8687815	1					
ANR	8688097	Identifier	USB_TOKEN_OUT		8687815	2					
ANR	8688098	ExpressionStatement	ep = devep & 0xf	131:12:2033:2049	8687815	3	True				
ANR	8688099	AssignmentExpression	ep = devep & 0xf		8687815	0		=			
ANR	8688100	Identifier	ep		8687815	0					
ANR	8688101	BitAndExpression	devep & 0xf		8687815	1		&			
ANR	8688102	Identifier	devep		8687815	0					
ANR	8688103	PrimaryExpression	0xf		8687815	1					
ANR	8688104	IfStatement	if ( ep == 0 )		8687815	4					
ANR	8688105	Condition	ep == 0	133:16:2068:2074	8687815	0	True				
ANR	8688106	EqualityExpression	ep == 0		8687815	0		==			
ANR	8688107	Identifier	ep		8687815	0					
ANR	8688108	PrimaryExpression	0		8687815	1					
ANR	8688109	CompoundStatement		131:25:2018:2018	8687815	1					
ANR	8688110	ExpressionStatement	"fprintf ( stderr , ""usb-linux: invalid ep descriptor, ep == 0\\n"" )"	135:16:2096:2158	8687815	0	True				
ANR	8688111	CallExpression	"fprintf ( stderr , ""usb-linux: invalid ep descriptor, ep == 0\\n"" )"		8687815	0					
ANR	8688112	Callee	fprintf		8687815	0					
ANR	8688113	Identifier	fprintf		8687815	0					
ANR	8688114	ArgumentList	stderr		8687815	1					
ANR	8688115	Argument	stderr		8687815	0					
ANR	8688116	Identifier	stderr		8687815	0					
ANR	8688117	Argument	"""usb-linux: invalid ep descriptor, ep == 0\\n"""		8687815	1					
ANR	8688118	PrimaryExpression	"""usb-linux: invalid ep descriptor, ep == 0\\n"""		8687815	0					
ANR	8688119	ReturnStatement	return 1 ;	137:16:2177:2185	8687815	1	True				
ANR	8688120	PrimaryExpression	1		8687815	0					
ANR	8688121	SwitchStatement	switch ( descriptors [ i + 3 ] & 0x3 )		8687815	5					
ANR	8688122	Condition	descriptors [ i + 3 ] & 0x3	143:20:2225:2248	8687815	0	True				
ANR	8688123	BitAndExpression	descriptors [ i + 3 ] & 0x3		8687815	0		&			
ANR	8688124	ArrayIndexing	descriptors [ i + 3 ]		8687815	0					
ANR	8688125	Identifier	descriptors		8687815	0					
ANR	8688126	AdditiveExpression	i + 3		8687815	1		+			
ANR	8688127	Identifier	i		8687815	0					
ANR	8688128	PrimaryExpression	3		8687815	1					
ANR	8688129	PrimaryExpression	0x3		8687815	1					
ANR	8688130	CompoundStatement		141:46:2192:2192	8687815	1					
ANR	8688131	Label	case 0x00 :	145:12:2266:2275	8687815	0	True				
ANR	8688132	ExpressionStatement	type = USBDEVFS_URB_TYPE_CONTROL	147:16:2294:2326	8687815	1	True				
ANR	8688133	AssignmentExpression	type = USBDEVFS_URB_TYPE_CONTROL		8687815	0		=			
ANR	8688134	Identifier	type		8687815	0					
ANR	8688135	Identifier	USBDEVFS_URB_TYPE_CONTROL		8687815	1					
ANR	8688136	BreakStatement	break ;	149:16:2345:2350	8687815	2	True				
ANR	8688137	Label	case 0x01 :	151:12:2365:2374	8687815	3	True				
ANR	8688138	ExpressionStatement	type = USBDEVFS_URB_TYPE_ISO	153:16:2393:2421	8687815	4	True				
ANR	8688139	AssignmentExpression	type = USBDEVFS_URB_TYPE_ISO		8687815	0		=			
ANR	8688140	Identifier	type		8687815	0					
ANR	8688141	Identifier	USBDEVFS_URB_TYPE_ISO		8687815	1					
ANR	8688142	ExpressionStatement	"set_max_packet_size ( s , pid , ep , descriptors + i )"	155:16:2440:2488	8687815	5	True				
ANR	8688143	CallExpression	"set_max_packet_size ( s , pid , ep , descriptors + i )"		8687815	0					
ANR	8688144	Callee	set_max_packet_size		8687815	0					
ANR	8688145	Identifier	set_max_packet_size		8687815	0					
ANR	8688146	ArgumentList	s		8687815	1					
ANR	8688147	Argument	s		8687815	0					
ANR	8688148	Identifier	s		8687815	0					
ANR	8688149	Argument	pid		8687815	1					
ANR	8688150	Identifier	pid		8687815	0					
ANR	8688151	Argument	ep		8687815	2					
ANR	8688152	Identifier	ep		8687815	0					
ANR	8688153	Argument	descriptors + i		8687815	3					
ANR	8688154	AdditiveExpression	descriptors + i		8687815	0		+			
ANR	8688155	Identifier	descriptors		8687815	0					
ANR	8688156	Identifier	i		8687815	1					
ANR	8688157	BreakStatement	break ;	157:16:2507:2512	8687815	6	True				
ANR	8688158	Label	case 0x02 :	159:12:2527:2536	8687815	7	True				
ANR	8688159	ExpressionStatement	type = USBDEVFS_URB_TYPE_BULK	161:16:2555:2584	8687815	8	True				
ANR	8688160	AssignmentExpression	type = USBDEVFS_URB_TYPE_BULK		8687815	0		=			
ANR	8688161	Identifier	type		8687815	0					
ANR	8688162	Identifier	USBDEVFS_URB_TYPE_BULK		8687815	1					
ANR	8688163	BreakStatement	break ;	163:16:2603:2608	8687815	9	True				
ANR	8688164	Label	case 0x03 :	165:12:2623:2632	8687815	10	True				
ANR	8688165	ExpressionStatement	type = USBDEVFS_URB_TYPE_INTERRUPT	167:16:2651:2685	8687815	11	True				
ANR	8688166	AssignmentExpression	type = USBDEVFS_URB_TYPE_INTERRUPT		8687815	0		=			
ANR	8688167	Identifier	type		8687815	0					
ANR	8688168	Identifier	USBDEVFS_URB_TYPE_INTERRUPT		8687815	1					
ANR	8688169	BreakStatement	break ;	169:16:2704:2709	8687815	12	True				
ANR	8688170	Label	default :	171:12:2724:2731	8687815	13	True				
ANR	8688171	Identifier	default		8687815	0					
ANR	8688172	ExpressionStatement	"DPRINTF ( ""usb_host: malformed endpoint type\\n"" )"	173:16:2750:2796	8687815	14	True				
ANR	8688173	CallExpression	"DPRINTF ( ""usb_host: malformed endpoint type\\n"" )"		8687815	0					
ANR	8688174	Callee	DPRINTF		8687815	0					
ANR	8688175	Identifier	DPRINTF		8687815	0					
ANR	8688176	ArgumentList	"""usb_host: malformed endpoint type\\n"""		8687815	1					
ANR	8688177	Argument	"""usb_host: malformed endpoint type\\n"""		8687815	0					
ANR	8688178	PrimaryExpression	"""usb_host: malformed endpoint type\\n"""		8687815	0					
ANR	8688179	ExpressionStatement	type = USBDEVFS_URB_TYPE_BULK	175:16:2815:2844	8687815	15	True				
ANR	8688180	AssignmentExpression	type = USBDEVFS_URB_TYPE_BULK		8687815	0		=			
ANR	8688181	Identifier	type		8687815	0					
ANR	8688182	Identifier	USBDEVFS_URB_TYPE_BULK		8687815	1					
ANR	8688183	ExpressionStatement	"epd = get_endp ( s , pid , ep )"	179:12:2874:2900	8687815	6	True				
ANR	8688184	AssignmentExpression	"epd = get_endp ( s , pid , ep )"		8687815	0		=			
ANR	8688185	Identifier	epd		8687815	0					
ANR	8688186	CallExpression	"get_endp ( s , pid , ep )"		8687815	1					
ANR	8688187	Callee	get_endp		8687815	0					
ANR	8688188	Identifier	get_endp		8687815	0					
ANR	8688189	ArgumentList	s		8687815	1					
ANR	8688190	Argument	s		8687815	0					
ANR	8688191	Identifier	s		8687815	0					
ANR	8688192	Argument	pid		8687815	1					
ANR	8688193	Identifier	pid		8687815	0					
ANR	8688194	Argument	ep		8687815	2					
ANR	8688195	Identifier	ep		8687815	0					
ANR	8688196	ExpressionStatement	assert ( epd -> type == INVALID_EP_TYPE )	181:12:2915:2951	8687815	7	True				
ANR	8688197	CallExpression	assert ( epd -> type == INVALID_EP_TYPE )		8687815	0					
ANR	8688198	Callee	assert		8687815	0					
ANR	8688199	Identifier	assert		8687815	0					
ANR	8688200	ArgumentList	epd -> type == INVALID_EP_TYPE		8687815	1					
ANR	8688201	Argument	epd -> type == INVALID_EP_TYPE		8687815	0					
ANR	8688202	EqualityExpression	epd -> type == INVALID_EP_TYPE		8687815	0		==			
ANR	8688203	PtrMemberAccess	epd -> type		8687815	0					
ANR	8688204	Identifier	epd		8687815	0					
ANR	8688205	Identifier	type		8687815	1					
ANR	8688206	Identifier	INVALID_EP_TYPE		8687815	1					
ANR	8688207	ExpressionStatement	epd -> type = type	183:12:2966:2982	8687815	8	True				
ANR	8688208	AssignmentExpression	epd -> type = type		8687815	0		=			
ANR	8688209	PtrMemberAccess	epd -> type		8687815	0					
ANR	8688210	Identifier	epd		8687815	0					
ANR	8688211	Identifier	type		8687815	1					
ANR	8688212	Identifier	type		8687815	1					
ANR	8688213	ExpressionStatement	epd -> halted = 0	185:12:2997:3012	8687815	9	True				
ANR	8688214	AssignmentExpression	epd -> halted = 0		8687815	0		=			
ANR	8688215	PtrMemberAccess	epd -> halted		8687815	0					
ANR	8688216	Identifier	epd		8687815	0					
ANR	8688217	Identifier	halted		8687815	1					
ANR	8688218	PrimaryExpression	0		8687815	1					
ANR	8688219	ExpressionStatement	i += descriptors [ i ]	189:12:3029:3048	8687815	10	True				
ANR	8688220	AssignmentExpression	i += descriptors [ i ]		8687815	0		+=			
ANR	8688221	Identifier	i		8687815	0					
ANR	8688222	ArrayIndexing	descriptors [ i ]		8687815	1					
ANR	8688223	Identifier	descriptors		8687815	0					
ANR	8688224	Identifier	i		8687815	1					
ANR	8688225	ReturnStatement	return 0 ;	195:4:3073:3081	8687815	12	True				
ANR	8688226	PrimaryExpression	0		8687815	0					
ANR	8688227	ReturnType	static int		8687815	1					
ANR	8688228	Identifier	usb_linux_update_endp_table		8687815	2					
ANR	8688229	ParameterList	USBHostDevice * s		8687815	3					
ANR	8688230	Parameter	USBHostDevice * s	1:39:39:54	8687815	0	True				
ANR	8688231	ParameterType	USBHostDevice *		8687815	0					
ANR	8688232	Identifier	s		8687815	1					
ANR	8688233	CFGEntryNode	ENTRY		8687815		True				
ANR	8688234	CFGExitNode	EXIT		8687815		True				
ANR	8688235	Symbol	* s -> ep_out		8687815						
ANR	8688236	Symbol	USB_TOKEN_OUT		8687815						
ANR	8688237	Symbol	USBDEVFS_URB_TYPE_INTERRUPT		8687815						
ANR	8688238	Symbol	* descriptors		8687815						
ANR	8688239	Symbol	pid		8687815						
ANR	8688240	Symbol	USBDEVFS_URB_TYPE_BULK		8687815						
ANR	8688241	Symbol	type		8687815						
ANR	8688242	Symbol	interface		8687815						
ANR	8688243	Symbol	alt_interface		8687815						
ANR	8688244	Symbol	USB_DT_INTERFACE		8687815						
ANR	8688245	Symbol	descriptors		8687815						
ANR	8688246	Symbol	USB_DT_CONFIG		8687815						
ANR	8688247	Symbol	USBDEVFS_URB_TYPE_CONTROL		8687815						
ANR	8688248	Symbol	s -> ep_in		8687815						
ANR	8688249	Symbol	USB_TOKEN_IN		8687815						
ANR	8688250	Symbol	epd		8687815						
ANR	8688251	Symbol	* * s		8687815						
ANR	8688252	Symbol	s -> descr_len		8687815						
ANR	8688253	Symbol	usb_linux_get_alt_setting		8687815						
ANR	8688254	Symbol	USBDEVFS_URB_TYPE_ISO		8687815						
ANR	8688255	Symbol	length		8687815						
ANR	8688256	Symbol	USB_DT_ENDPOINT		8687815						
ANR	8688257	Symbol	i		8687815						
ANR	8688258	Symbol	ep		8687815						
ANR	8688259	Symbol	s -> configuration		8687815						
ANR	8688260	Symbol	stderr		8687815						
ANR	8688261	Symbol	INVALID_EP_TYPE		8687815						
ANR	8688262	Symbol	s -> ep_out		8687815						
ANR	8688263	Symbol	s -> ep_out [ i ] . type		8687815						
ANR	8688264	Symbol	epd -> halted		8687815						
ANR	8688265	Symbol	devep		8687815						
ANR	8688266	Symbol	* s -> ep_in		8687815						
ANR	8688267	Symbol	s -> descr		8687815						
ANR	8688268	Symbol	s		8687815						
ANR	8688269	Symbol	* i		8687815						
ANR	8688270	Symbol	MAX_ENDPOINTS		8687815						
ANR	8688271	Symbol	get_endp		8687815						
ANR	8688272	Symbol	s -> ep_in [ i ] . type		8687815						
ANR	8688273	Symbol	USB_DIR_IN		8687815						
ANR	8688274	Symbol	epd -> type		8687815						
ANR	8688275	Symbol	* epd		8687815						
ANR	8688276	Symbol	* s		8687815						
