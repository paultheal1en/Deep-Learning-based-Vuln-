command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5963381	File	/home/p4ultr4n/workplace/ReVeal/raw_code/net_cleanup_0.c								
ANR	5963382	Function	net_cleanup	1:0:0:846							
ANR	5963383	FunctionDef	net_cleanup ()		5963382	0					
ANR	5963384	CompoundStatement		3:0:24:846	5963382	0					
ANR	5963385	IdentifierDeclStatement	VLANState * vlan ;	5:4:31:46	5963382	0	True				
ANR	5963386	IdentifierDecl	* vlan		5963382	0					
ANR	5963387	IdentifierDeclType	VLANState *		5963382	0					
ANR	5963388	Identifier	vlan		5963382	1					
ANR	5963389	ForStatement	for ( vlan = first_vlan ; vlan != NULL ; vlan = vlan -> next )		5963382	1					
ANR	5963390	ForInit	vlan = first_vlan ;	13:8:114:131	5963382	0	True				
ANR	5963391	AssignmentExpression	vlan = first_vlan		5963382	0		=			
ANR	5963392	Identifier	vlan		5963382	0					
ANR	5963393	Identifier	first_vlan		5963382	1					
ANR	5963394	Condition	vlan != NULL	13:27:133:144	5963382	1	True				
ANR	5963395	EqualityExpression	vlan != NULL		5963382	0		!=			
ANR	5963396	Identifier	vlan		5963382	0					
ANR	5963397	Identifier	NULL		5963382	1					
ANR	5963398	AssignmentExpression	vlan = vlan -> next	13:41:147:163	5963382	2	True	=			
ANR	5963399	Identifier	vlan		5963382	0					
ANR	5963400	PtrMemberAccess	vlan -> next		5963382	1					
ANR	5963401	Identifier	vlan		5963382	0					
ANR	5963402	Identifier	next		5963382	1					
ANR	5963403	CompoundStatement		13:8:152:171	5963382	3					
ANR	5963404	IdentifierDeclStatement	VLANClientState * vc ;	15:8:177:196	5963382	0	True				
ANR	5963405	IdentifierDecl	* vc		5963382	0					
ANR	5963406	IdentifierDeclType	VLANClientState *		5963382	0					
ANR	5963407	Identifier	vc		5963382	1					
ANR	5963408	ForStatement	for ( vc = vlan -> first_client ; vc != NULL ; vc = vc -> next )		5963382	1					
ANR	5963409	ForInit	vc = vlan -> first_client ;	19:12:213:236	5963382	0	True				
ANR	5963410	AssignmentExpression	vc = vlan -> first_client		5963382	0		=			
ANR	5963411	Identifier	vc		5963382	0					
ANR	5963412	PtrMemberAccess	vlan -> first_client		5963382	1					
ANR	5963413	Identifier	vlan		5963382	0					
ANR	5963414	Identifier	first_client		5963382	1					
ANR	5963415	Condition	vc != NULL	19:37:238:247	5963382	1	True				
ANR	5963416	EqualityExpression	vc != NULL		5963382	0		!=			
ANR	5963417	Identifier	vc		5963382	0					
ANR	5963418	Identifier	NULL		5963382	1					
ANR	5963419	AssignmentExpression	vc = vc -> next	19:49:250:262	5963382	2	True	=			
ANR	5963420	Identifier	vc		5963382	0					
ANR	5963421	PtrMemberAccess	vc -> next		5963382	1					
ANR	5963422	Identifier	vc		5963382	0					
ANR	5963423	Identifier	next		5963382	1					
ANR	5963424	CompoundStatement		17:64:240:240	5963382	3					
ANR	5963425	IfStatement	if ( vc -> fd_read == tap_receive )		5963382	0					
ANR	5963426	Condition	vc -> fd_read == tap_receive	21:16:284:309	5963382	0	True				
ANR	5963427	EqualityExpression	vc -> fd_read == tap_receive		5963382	0		==			
ANR	5963428	PtrMemberAccess	vc -> fd_read		5963382	0					
ANR	5963429	Identifier	vc		5963382	0					
ANR	5963430	Identifier	fd_read		5963382	1					
ANR	5963431	Identifier	tap_receive		5963382	1					
ANR	5963432	CompoundStatement		23:16:340:364	5963382	1					
ANR	5963433	IdentifierDeclStatement	char ifname [ 64 ] ;	23:16:331:346	5963382	0	True				
ANR	5963434	IdentifierDecl	ifname [ 64 ]		5963382	0					
ANR	5963435	IdentifierDeclType	char [ 64 ]		5963382	0					
ANR	5963436	Identifier	ifname		5963382	1					
ANR	5963437	PrimaryExpression	64		5963382	2					
ANR	5963438	IdentifierDeclStatement	TAPState * s = vc -> opaque ;	25:16:365:389	5963382	1	True				
ANR	5963439	IdentifierDecl	* s = vc -> opaque		5963382	0					
ANR	5963440	IdentifierDeclType	TAPState *		5963382	0					
ANR	5963441	Identifier	s		5963382	1					
ANR	5963442	AssignmentExpression	* s = vc -> opaque		5963382	2		=			
ANR	5963443	Identifier	s		5963382	0					
ANR	5963444	PtrMemberAccess	vc -> opaque		5963382	1					
ANR	5963445	Identifier	vc		5963382	0					
ANR	5963446	Identifier	opaque		5963382	1					
ANR	5963447	IfStatement	"if ( strcmp ( vc -> model , ""tap"" ) == 0 && sscanf ( vc -> info_str , ""ifname=%63s "" , ifname ) == 1 && s -> down_script [ 0 ] )"		5963382	2					
ANR	5963448	Condition	"strcmp ( vc -> model , ""tap"" ) == 0 && sscanf ( vc -> info_str , ""ifname=%63s "" , ifname ) == 1 && s -> down_script [ 0 ]"	29:20:414:558	5963382	0	True				
ANR	5963449	AndExpression	"strcmp ( vc -> model , ""tap"" ) == 0 && sscanf ( vc -> info_str , ""ifname=%63s "" , ifname ) == 1 && s -> down_script [ 0 ]"		5963382	0		&&			
ANR	5963450	EqualityExpression	"strcmp ( vc -> model , ""tap"" ) == 0"		5963382	0		==			
ANR	5963451	CallExpression	"strcmp ( vc -> model , ""tap"" )"		5963382	0					
ANR	5963452	Callee	strcmp		5963382	0					
ANR	5963453	Identifier	strcmp		5963382	0					
ANR	5963454	ArgumentList	vc -> model		5963382	1					
ANR	5963455	Argument	vc -> model		5963382	0					
ANR	5963456	PtrMemberAccess	vc -> model		5963382	0					
ANR	5963457	Identifier	vc		5963382	0					
ANR	5963458	Identifier	model		5963382	1					
ANR	5963459	Argument	"""tap"""		5963382	1					
ANR	5963460	PrimaryExpression	"""tap"""		5963382	0					
ANR	5963461	PrimaryExpression	0		5963382	1					
ANR	5963462	AndExpression	"sscanf ( vc -> info_str , ""ifname=%63s "" , ifname ) == 1 && s -> down_script [ 0 ]"		5963382	1		&&			
ANR	5963463	EqualityExpression	"sscanf ( vc -> info_str , ""ifname=%63s "" , ifname ) == 1"		5963382	0		==			
ANR	5963464	CallExpression	"sscanf ( vc -> info_str , ""ifname=%63s "" , ifname )"		5963382	0					
ANR	5963465	Callee	sscanf		5963382	0					
ANR	5963466	Identifier	sscanf		5963382	0					
ANR	5963467	ArgumentList	vc -> info_str		5963382	1					
ANR	5963468	Argument	vc -> info_str		5963382	0					
ANR	5963469	PtrMemberAccess	vc -> info_str		5963382	0					
ANR	5963470	Identifier	vc		5963382	0					
ANR	5963471	Identifier	info_str		5963382	1					
ANR	5963472	Argument	"""ifname=%63s """		5963382	1					
ANR	5963473	PrimaryExpression	"""ifname=%63s """		5963382	0					
ANR	5963474	Argument	ifname		5963382	2					
ANR	5963475	Identifier	ifname		5963382	0					
ANR	5963476	PrimaryExpression	1		5963382	1					
ANR	5963477	ArrayIndexing	s -> down_script [ 0 ]		5963382	1					
ANR	5963478	PtrMemberAccess	s -> down_script		5963382	0					
ANR	5963479	Identifier	s		5963382	0					
ANR	5963480	Identifier	down_script		5963382	1					
ANR	5963481	PrimaryExpression	0		5963382	1					
ANR	5963482	ExpressionStatement	"launch_script ( s -> down_script , ifname , s -> fd )"	35:20:582:626	5963382	1	True				
ANR	5963483	CallExpression	"launch_script ( s -> down_script , ifname , s -> fd )"		5963382	0					
ANR	5963484	Callee	launch_script		5963382	0					
ANR	5963485	Identifier	launch_script		5963382	0					
ANR	5963486	ArgumentList	s -> down_script		5963382	1					
ANR	5963487	Argument	s -> down_script		5963382	0					
ANR	5963488	PtrMemberAccess	s -> down_script		5963382	0					
ANR	5963489	Identifier	s		5963382	0					
ANR	5963490	Identifier	down_script		5963382	1					
ANR	5963491	Argument	ifname		5963382	1					
ANR	5963492	Identifier	ifname		5963382	0					
ANR	5963493	Argument	s -> fd		5963382	2					
ANR	5963494	PtrMemberAccess	s -> fd		5963382	0					
ANR	5963495	Identifier	s		5963382	0					
ANR	5963496	Identifier	fd		5963382	1					
ANR	5963497	IfStatement	if ( vc -> fd_read == vde_from_qemu )		5963382	1					
ANR	5963498	Condition	vc -> fd_read == vde_from_qemu	41:16:685:712	5963382	0	True				
ANR	5963499	EqualityExpression	vc -> fd_read == vde_from_qemu		5963382	0		==			
ANR	5963500	PtrMemberAccess	vc -> fd_read		5963382	0					
ANR	5963501	Identifier	vc		5963382	0					
ANR	5963502	Identifier	fd_read		5963382	1					
ANR	5963503	Identifier	vde_from_qemu		5963382	1					
ANR	5963504	CompoundStatement		41:16:709:733	5963382	1					
ANR	5963505	IdentifierDeclStatement	VDEState * s = vc -> opaque ;	43:16:734:758	5963382	0	True				
ANR	5963506	IdentifierDecl	* s = vc -> opaque		5963382	0					
ANR	5963507	IdentifierDeclType	VDEState *		5963382	0					
ANR	5963508	Identifier	s		5963382	1					
ANR	5963509	AssignmentExpression	* s = vc -> opaque		5963382	2		=			
ANR	5963510	Identifier	s		5963382	0					
ANR	5963511	PtrMemberAccess	vc -> opaque		5963382	1					
ANR	5963512	Identifier	vc		5963382	0					
ANR	5963513	Identifier	opaque		5963382	1					
ANR	5963514	ExpressionStatement	vde_close ( s -> vde )	45:16:777:794	5963382	1	True				
ANR	5963515	CallExpression	vde_close ( s -> vde )		5963382	0					
ANR	5963516	Callee	vde_close		5963382	0					
ANR	5963517	Identifier	vde_close		5963382	0					
ANR	5963518	ArgumentList	s -> vde		5963382	1					
ANR	5963519	Argument	s -> vde		5963382	0					
ANR	5963520	PtrMemberAccess	s -> vde		5963382	0					
ANR	5963521	Identifier	s		5963382	0					
ANR	5963522	Identifier	vde		5963382	1					
ANR	5963523	ReturnType	void		5963382	1					
ANR	5963524	Identifier	net_cleanup		5963382	2					
ANR	5963525	ParameterList			5963382	3					
ANR	5963526	CFGEntryNode	ENTRY		5963382		True				
ANR	5963527	CFGExitNode	EXIT		5963382		True				
ANR	5963528	Symbol	vc -> fd_read		5963382						
ANR	5963529	Symbol	vc -> model		5963382						
ANR	5963530	Symbol	s -> down_script		5963382						
ANR	5963531	Symbol	vlan		5963382						
ANR	5963532	Symbol	ifname		5963382						
ANR	5963533	Symbol	* * s		5963382						
ANR	5963534	Symbol	strcmp		5963382						
ANR	5963535	Symbol	NULL		5963382						
ANR	5963536	Symbol	vc -> opaque		5963382						
ANR	5963537	Symbol	s -> vde		5963382						
ANR	5963538	Symbol	vc		5963382						
ANR	5963539	Symbol	* vc		5963382						
ANR	5963540	Symbol	tap_receive		5963382						
ANR	5963541	Symbol	s		5963382						
ANR	5963542	Symbol	sscanf		5963382						
ANR	5963543	Symbol	first_vlan		5963382						
ANR	5963544	Symbol	vlan -> first_client		5963382						
ANR	5963545	Symbol	vc -> info_str		5963382						
ANR	5963546	Symbol	vde_from_qemu		5963382						
ANR	5963547	Symbol	* vlan		5963382						
ANR	5963548	Symbol	* s -> down_script		5963382						
ANR	5963549	Symbol	vc -> next		5963382						
ANR	5963550	Symbol	* s		5963382						
ANR	5963551	Symbol	s -> fd		5963382						
ANR	5963552	Symbol	vlan -> next		5963382						
