command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5070286	File	/home/p4ultr4n/workplace/ReVeal/raw_code/kalman_smoothen_1.c								
ANR	5070287	Function	kalman_smoothen	1:0:0:1057							
ANR	5070288	FunctionDef	"kalman_smoothen (WMAVoiceContext * s , int pitch , const float * in , float * out , int size)"		5070287	0					
ANR	5070289	CompoundStatement		5:0:126:1057	5070287	0					
ANR	5070290	IdentifierDeclStatement	int n ;	7:4:133:138	5070287	0	True				
ANR	5070291	IdentifierDecl	n		5070287	0					
ANR	5070292	IdentifierDeclType	int		5070287	0					
ANR	5070293	Identifier	n		5070287	1					
ANR	5070294	IdentifierDeclStatement	"float optimal_gain = 0 , dot ;"	9:4:145:172	5070287	1	True				
ANR	5070295	IdentifierDecl	optimal_gain = 0		5070287	0					
ANR	5070296	IdentifierDeclType	float		5070287	0					
ANR	5070297	Identifier	optimal_gain		5070287	1					
ANR	5070298	AssignmentExpression	optimal_gain = 0		5070287	2		=			
ANR	5070299	Identifier	optimal_gain		5070287	0					
ANR	5070300	PrimaryExpression	0		5070287	1					
ANR	5070301	IdentifierDecl	dot		5070287	1					
ANR	5070302	IdentifierDeclType	float		5070287	0					
ANR	5070303	Identifier	dot		5070287	1					
ANR	5070304	IdentifierDeclStatement	"const float * ptr = & in [ - FFMAX ( s -> min_pitch_val , pitch - 3 ) ] , * end = & in [ - FFMIN ( s -> max_pitch_val , pitch + 3 ) ] , * best_hist_ptr ;"	11:4:179:337	5070287	2	True				
ANR	5070305	IdentifierDecl	"* ptr = & in [ - FFMAX ( s -> min_pitch_val , pitch - 3 ) ]"		5070287	0					
ANR	5070306	IdentifierDeclType	const float *		5070287	0					
ANR	5070307	Identifier	ptr		5070287	1					
ANR	5070308	AssignmentExpression	"* ptr = & in [ - FFMAX ( s -> min_pitch_val , pitch - 3 ) ]"		5070287	2		=			
ANR	5070309	Identifier	ptr		5070287	0					
ANR	5070310	UnaryOperationExpression	"& in [ - FFMAX ( s -> min_pitch_val , pitch - 3 ) ]"		5070287	1					
ANR	5070311	UnaryOperator	&		5070287	0					
ANR	5070312	ArrayIndexing	"in [ - FFMAX ( s -> min_pitch_val , pitch - 3 ) ]"		5070287	1					
ANR	5070313	Identifier	in		5070287	0					
ANR	5070314	UnaryOperationExpression	"- FFMAX ( s -> min_pitch_val , pitch - 3 )"		5070287	1					
ANR	5070315	UnaryOperator	-		5070287	0					
ANR	5070316	CallExpression	"FFMAX ( s -> min_pitch_val , pitch - 3 )"		5070287	1					
ANR	5070317	Callee	FFMAX		5070287	0					
ANR	5070318	Identifier	FFMAX		5070287	0					
ANR	5070319	ArgumentList	s -> min_pitch_val		5070287	1					
ANR	5070320	Argument	s -> min_pitch_val		5070287	0					
ANR	5070321	PtrMemberAccess	s -> min_pitch_val		5070287	0					
ANR	5070322	Identifier	s		5070287	0					
ANR	5070323	Identifier	min_pitch_val		5070287	1					
ANR	5070324	Argument	pitch - 3		5070287	1					
ANR	5070325	AdditiveExpression	pitch - 3		5070287	0		-			
ANR	5070326	Identifier	pitch		5070287	0					
ANR	5070327	PrimaryExpression	3		5070287	1					
ANR	5070328	IdentifierDecl	"* end = & in [ - FFMIN ( s -> max_pitch_val , pitch + 3 ) ]"		5070287	1					
ANR	5070329	IdentifierDeclType	const float *		5070287	0					
ANR	5070330	Identifier	end		5070287	1					
ANR	5070331	AssignmentExpression	"* end = & in [ - FFMIN ( s -> max_pitch_val , pitch + 3 ) ]"		5070287	2		=			
ANR	5070332	Identifier	end		5070287	0					
ANR	5070333	UnaryOperationExpression	"& in [ - FFMIN ( s -> max_pitch_val , pitch + 3 ) ]"		5070287	1					
ANR	5070334	UnaryOperator	&		5070287	0					
ANR	5070335	ArrayIndexing	"in [ - FFMIN ( s -> max_pitch_val , pitch + 3 ) ]"		5070287	1					
ANR	5070336	Identifier	in		5070287	0					
ANR	5070337	UnaryOperationExpression	"- FFMIN ( s -> max_pitch_val , pitch + 3 )"		5070287	1					
ANR	5070338	UnaryOperator	-		5070287	0					
ANR	5070339	CallExpression	"FFMIN ( s -> max_pitch_val , pitch + 3 )"		5070287	1					
ANR	5070340	Callee	FFMIN		5070287	0					
ANR	5070341	Identifier	FFMIN		5070287	0					
ANR	5070342	ArgumentList	s -> max_pitch_val		5070287	1					
ANR	5070343	Argument	s -> max_pitch_val		5070287	0					
ANR	5070344	PtrMemberAccess	s -> max_pitch_val		5070287	0					
ANR	5070345	Identifier	s		5070287	0					
ANR	5070346	Identifier	max_pitch_val		5070287	1					
ANR	5070347	Argument	pitch + 3		5070287	1					
ANR	5070348	AdditiveExpression	pitch + 3		5070287	0		+			
ANR	5070349	Identifier	pitch		5070287	0					
ANR	5070350	PrimaryExpression	3		5070287	1					
ANR	5070351	IdentifierDecl	* best_hist_ptr		5070287	2					
ANR	5070352	IdentifierDeclType	const float *		5070287	0					
ANR	5070353	Identifier	best_hist_ptr		5070287	1					
ANR	5070354	DoStatement	do		5070287	3					
ANR	5070355	CompoundStatement		17:7:268:268	5070287	0					
ANR	5070356	ExpressionStatement	"dot = ff_scalarproduct_float_c ( in , ptr , size )"	23:8:406:451	5070287	0	True				
ANR	5070357	AssignmentExpression	"dot = ff_scalarproduct_float_c ( in , ptr , size )"		5070287	0		=			
ANR	5070358	Identifier	dot		5070287	0					
ANR	5070359	CallExpression	"ff_scalarproduct_float_c ( in , ptr , size )"		5070287	1					
ANR	5070360	Callee	ff_scalarproduct_float_c		5070287	0					
ANR	5070361	Identifier	ff_scalarproduct_float_c		5070287	0					
ANR	5070362	ArgumentList	in		5070287	1					
ANR	5070363	Argument	in		5070287	0					
ANR	5070364	Identifier	in		5070287	0					
ANR	5070365	Argument	ptr		5070287	1					
ANR	5070366	Identifier	ptr		5070287	0					
ANR	5070367	Argument	size		5070287	2					
ANR	5070368	Identifier	size		5070287	0					
ANR	5070369	IfStatement	if ( dot > optimal_gain )		5070287	1					
ANR	5070370	Condition	dot > optimal_gain	25:12:466:483	5070287	0	True				
ANR	5070371	RelationalExpression	dot > optimal_gain		5070287	0		>			
ANR	5070372	Identifier	dot		5070287	0					
ANR	5070373	Identifier	optimal_gain		5070287	1					
ANR	5070374	CompoundStatement		21:32:359:359	5070287	1					
ANR	5070375	ExpressionStatement	optimal_gain = dot	27:12:501:520	5070287	0	True				
ANR	5070376	AssignmentExpression	optimal_gain = dot		5070287	0		=			
ANR	5070377	Identifier	optimal_gain		5070287	0					
ANR	5070378	Identifier	dot		5070287	1					
ANR	5070379	ExpressionStatement	best_hist_ptr = ptr	29:12:535:554	5070287	1	True				
ANR	5070380	AssignmentExpression	best_hist_ptr = ptr		5070287	0		=			
ANR	5070381	Identifier	best_hist_ptr		5070287	0					
ANR	5070382	Identifier	ptr		5070287	1					
ANR	5070383	Condition	-- ptr >= end	33:13:581:592	5070287	1	True				
ANR	5070384	RelationalExpression	-- ptr >= end		5070287	0		>=			
ANR	5070385	UnaryExpression	-- ptr		5070287	0					
ANR	5070386	IncDec	--		5070287	0					
ANR	5070387	Identifier	ptr		5070287	1					
ANR	5070388	Identifier	end		5070287	1					
ANR	5070389	IfStatement	if ( optimal_gain <= 0 )		5070287	4					
ANR	5070390	Condition	optimal_gain <= 0	37:8:607:623	5070287	0	True				
ANR	5070391	RelationalExpression	optimal_gain <= 0		5070287	0		<=			
ANR	5070392	Identifier	optimal_gain		5070287	0					
ANR	5070393	PrimaryExpression	0		5070287	1					
ANR	5070394	ReturnStatement	return - 1 ;	39:8:635:644	5070287	1	True				
ANR	5070395	UnaryOperationExpression	- 1		5070287	0					
ANR	5070396	UnaryOperator	-		5070287	0					
ANR	5070397	PrimaryExpression	1		5070287	1					
ANR	5070398	ExpressionStatement	"dot = ff_scalarproduct_float_c ( best_hist_ptr , best_hist_ptr , size )"	41:4:651:717	5070287	5	True				
ANR	5070399	AssignmentExpression	"dot = ff_scalarproduct_float_c ( best_hist_ptr , best_hist_ptr , size )"		5070287	0		=			
ANR	5070400	Identifier	dot		5070287	0					
ANR	5070401	CallExpression	"ff_scalarproduct_float_c ( best_hist_ptr , best_hist_ptr , size )"		5070287	1					
ANR	5070402	Callee	ff_scalarproduct_float_c		5070287	0					
ANR	5070403	Identifier	ff_scalarproduct_float_c		5070287	0					
ANR	5070404	ArgumentList	best_hist_ptr		5070287	1					
ANR	5070405	Argument	best_hist_ptr		5070287	0					
ANR	5070406	Identifier	best_hist_ptr		5070287	0					
ANR	5070407	Argument	best_hist_ptr		5070287	1					
ANR	5070408	Identifier	best_hist_ptr		5070287	0					
ANR	5070409	Argument	size		5070287	2					
ANR	5070410	Identifier	size		5070287	0					
ANR	5070411	IfStatement	if ( dot <= 0 )		5070287	6					
ANR	5070412	Condition	dot <= 0	43:8:728:735	5070287	0	True				
ANR	5070413	RelationalExpression	dot <= 0		5070287	0		<=			
ANR	5070414	Identifier	dot		5070287	0					
ANR	5070415	PrimaryExpression	0		5070287	1					
ANR	5070416	ReturnStatement	return - 1 ;	45:8:763:772	5070287	1	True				
ANR	5070417	UnaryOperationExpression	- 1		5070287	0					
ANR	5070418	UnaryOperator	-		5070287	0					
ANR	5070419	PrimaryExpression	1		5070287	1					
ANR	5070420	IfStatement	if ( optimal_gain <= dot )		5070287	7					
ANR	5070421	Condition	optimal_gain <= dot	49:8:785:803	5070287	0	True				
ANR	5070422	RelationalExpression	optimal_gain <= dot		5070287	0		<=			
ANR	5070423	Identifier	optimal_gain		5070287	0					
ANR	5070424	Identifier	dot		5070287	1					
ANR	5070425	CompoundStatement		45:29:679:679	5070287	1					
ANR	5070426	ExpressionStatement	dot = dot / ( dot + 0.6 * optimal_gain )	51:8:817:855	5070287	0	True				
ANR	5070427	AssignmentExpression	dot = dot / ( dot + 0.6 * optimal_gain )		5070287	0		=			
ANR	5070428	Identifier	dot		5070287	0					
ANR	5070429	MultiplicativeExpression	dot / ( dot + 0.6 * optimal_gain )		5070287	1		/			
ANR	5070430	Identifier	dot		5070287	0					
ANR	5070431	AdditiveExpression	dot + 0.6 * optimal_gain		5070287	1		+			
ANR	5070432	Identifier	dot		5070287	0					
ANR	5070433	MultiplicativeExpression	0.6 * optimal_gain		5070287	1		*			
ANR	5070434	PrimaryExpression	0.6		5070287	0					
ANR	5070435	Identifier	optimal_gain		5070287	1					
ANR	5070436	ElseStatement	else		5070287	0					
ANR	5070437	ExpressionStatement	dot = 0.625	55:8:893:904	5070287	0	True				
ANR	5070438	AssignmentExpression	dot = 0.625		5070287	0		=			
ANR	5070439	Identifier	dot		5070287	0					
ANR	5070440	PrimaryExpression	0.625		5070287	1					
ANR	5070441	ForStatement	for ( n = 0 ; n < size ; n ++ )		5070287	8					
ANR	5070442	ForInit	n = 0 ;	61:9:946:951	5070287	0	True				
ANR	5070443	AssignmentExpression	n = 0		5070287	0		=			
ANR	5070444	Identifier	n		5070287	0					
ANR	5070445	PrimaryExpression	0		5070287	1					
ANR	5070446	Condition	n < size	61:16:953:960	5070287	1	True				
ANR	5070447	RelationalExpression	n < size		5070287	0		<			
ANR	5070448	Identifier	n		5070287	0					
ANR	5070449	Identifier	size		5070287	1					
ANR	5070450	PostIncDecOperationExpression	n ++	61:26:963:965	5070287	2	True				
ANR	5070451	Identifier	n		5070287	0					
ANR	5070452	IncDec	++		5070287	1					
ANR	5070453	ExpressionStatement	out [ n ] = best_hist_ptr [ n ] + dot * ( in [ n ] - best_hist_ptr [ n ] )	63:8:977:1037	5070287	3	True				
ANR	5070454	AssignmentExpression	out [ n ] = best_hist_ptr [ n ] + dot * ( in [ n ] - best_hist_ptr [ n ] )		5070287	0		=			
ANR	5070455	ArrayIndexing	out [ n ]		5070287	0					
ANR	5070456	Identifier	out		5070287	0					
ANR	5070457	Identifier	n		5070287	1					
ANR	5070458	AdditiveExpression	best_hist_ptr [ n ] + dot * ( in [ n ] - best_hist_ptr [ n ] )		5070287	1		+			
ANR	5070459	ArrayIndexing	best_hist_ptr [ n ]		5070287	0					
ANR	5070460	Identifier	best_hist_ptr		5070287	0					
ANR	5070461	Identifier	n		5070287	1					
ANR	5070462	MultiplicativeExpression	dot * ( in [ n ] - best_hist_ptr [ n ] )		5070287	1		*			
ANR	5070463	Identifier	dot		5070287	0					
ANR	5070464	AdditiveExpression	in [ n ] - best_hist_ptr [ n ]		5070287	1		-			
ANR	5070465	ArrayIndexing	in [ n ]		5070287	0					
ANR	5070466	Identifier	in		5070287	0					
ANR	5070467	Identifier	n		5070287	1					
ANR	5070468	ArrayIndexing	best_hist_ptr [ n ]		5070287	1					
ANR	5070469	Identifier	best_hist_ptr		5070287	0					
ANR	5070470	Identifier	n		5070287	1					
ANR	5070471	ReturnStatement	return 0 ;	67:4:1046:1054	5070287	9	True				
ANR	5070472	PrimaryExpression	0		5070287	0					
ANR	5070473	ReturnType	static int		5070287	1					
ANR	5070474	Identifier	kalman_smoothen		5070287	2					
ANR	5070475	ParameterList	"WMAVoiceContext * s , int pitch , const float * in , float * out , int size"		5070287	3					
ANR	5070476	Parameter	WMAVoiceContext * s	1:27:27:44	5070287	0	True				
ANR	5070477	ParameterType	WMAVoiceContext *		5070287	0					
ANR	5070478	Identifier	s		5070287	1					
ANR	5070479	Parameter	int pitch	1:47:47:55	5070287	1	True				
ANR	5070480	ParameterType	int		5070287	0					
ANR	5070481	Identifier	pitch		5070287	1					
ANR	5070482	Parameter	const float * in	3:27:86:100	5070287	2	True				
ANR	5070483	ParameterType	const float *		5070287	0					
ANR	5070484	Identifier	in		5070287	1					
ANR	5070485	Parameter	float * out	3:44:103:112	5070287	3	True				
ANR	5070486	ParameterType	float *		5070287	0					
ANR	5070487	Identifier	out		5070287	1					
ANR	5070488	Parameter	int size	3:56:115:122	5070287	4	True				
ANR	5070489	ParameterType	int		5070287	0					
ANR	5070490	Identifier	size		5070287	1					
ANR	5070491	CFGEntryNode	ENTRY		5070287		True				
ANR	5070492	CFGExitNode	EXIT		5070287		True				
ANR	5070493	Symbol	* best_hist_ptr		5070287						
ANR	5070494	Symbol	in		5070287						
ANR	5070495	Symbol	ff_scalarproduct_float_c		5070287						
ANR	5070496	Symbol	dot		5070287						
ANR	5070497	Symbol	* in		5070287						
ANR	5070498	Symbol	FFMIN		5070287						
ANR	5070499	Symbol	s -> max_pitch_val		5070287						
ANR	5070500	Symbol	n		5070287						
ANR	5070501	Symbol	out		5070287						
ANR	5070502	Symbol	ptr		5070287						
ANR	5070503	Symbol	best_hist_ptr		5070287						
ANR	5070504	Symbol	s		5070287						
ANR	5070505	Symbol	size		5070287						
ANR	5070506	Symbol	s -> min_pitch_val		5070287						
ANR	5070507	Symbol	* n		5070287						
ANR	5070508	Symbol	* out		5070287						
ANR	5070509	Symbol	end		5070287						
ANR	5070510	Symbol	pitch		5070287						
ANR	5070511	Symbol	optimal_gain		5070287						
ANR	5070512	Symbol	* s		5070287						
ANR	5070513	Symbol	FFMAX		5070287						
