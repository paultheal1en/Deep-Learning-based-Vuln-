command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5560960	File	/home/p4ultr4n/workplace/ReVeal/raw_code/monitor_find_completion_01_0.c								
ANR	5560961	Function	monitor_find_completion	1:0:0:3320							
ANR	5560962	FunctionDef	monitor_find_completion (const char * cmdline)		5560961	0					
ANR	5560963	CompoundStatement		3:0:58:3320	5560961	0					
ANR	5560964	IdentifierDeclStatement	const char * cmdname ;	5:4:65:84	5560961	0	True				
ANR	5560965	IdentifierDecl	* cmdname		5560961	0					
ANR	5560966	IdentifierDeclType	const char *		5560961	0					
ANR	5560967	Identifier	cmdname		5560961	1					
ANR	5560968	IdentifierDeclStatement	char * args [ MAX_ARGS ] ;	7:4:91:111	5560961	1	True				
ANR	5560969	IdentifierDecl	* args [ MAX_ARGS ]		5560961	0					
ANR	5560970	IdentifierDeclType	char * [ MAX_ARGS ]		5560961	0					
ANR	5560971	Identifier	args		5560961	1					
ANR	5560972	Identifier	MAX_ARGS		5560961	2					
ANR	5560973	IdentifierDeclStatement	"int nb_args , i , len ;"	9:4:118:137	5560961	2	True				
ANR	5560974	IdentifierDecl	nb_args		5560961	0					
ANR	5560975	IdentifierDeclType	int		5560961	0					
ANR	5560976	Identifier	nb_args		5560961	1					
ANR	5560977	IdentifierDecl	i		5560961	1					
ANR	5560978	IdentifierDeclType	int		5560961	0					
ANR	5560979	Identifier	i		5560961	1					
ANR	5560980	IdentifierDecl	len		5560961	2					
ANR	5560981	IdentifierDeclType	int		5560961	0					
ANR	5560982	Identifier	len		5560961	1					
ANR	5560983	IdentifierDeclStatement	"const char * ptype , * str ;"	11:4:144:167	5560961	3	True				
ANR	5560984	IdentifierDecl	* ptype		5560961	0					
ANR	5560985	IdentifierDeclType	const char *		5560961	0					
ANR	5560986	Identifier	ptype		5560961	1					
ANR	5560987	IdentifierDecl	* str		5560961	1					
ANR	5560988	IdentifierDeclType	const char *		5560961	0					
ANR	5560989	Identifier	str		5560961	1					
ANR	5560990	IdentifierDeclStatement	const mon_cmd_t * cmd ;	13:4:174:194	5560961	4	True				
ANR	5560991	IdentifierDecl	* cmd		5560961	0					
ANR	5560992	IdentifierDeclType	const mon_cmd_t *		5560961	0					
ANR	5560993	Identifier	cmd		5560961	1					
ANR	5560994	IdentifierDeclStatement	const KeyDef * key ;	15:4:201:218	5560961	5	True				
ANR	5560995	IdentifierDecl	* key		5560961	0					
ANR	5560996	IdentifierDeclType	const KeyDef *		5560961	0					
ANR	5560997	Identifier	key		5560961	1					
ANR	5560998	ExpressionStatement	"parse_cmdline ( cmdline , & nb_args , args )"	19:4:227:265	5560961	6	True				
ANR	5560999	CallExpression	"parse_cmdline ( cmdline , & nb_args , args )"		5560961	0					
ANR	5561000	Callee	parse_cmdline		5560961	0					
ANR	5561001	Identifier	parse_cmdline		5560961	0					
ANR	5561002	ArgumentList	cmdline		5560961	1					
ANR	5561003	Argument	cmdline		5560961	0					
ANR	5561004	Identifier	cmdline		5560961	0					
ANR	5561005	Argument	& nb_args		5560961	1					
ANR	5561006	UnaryOperationExpression	& nb_args		5560961	0					
ANR	5561007	UnaryOperator	&		5560961	0					
ANR	5561008	Identifier	nb_args		5560961	1					
ANR	5561009	Argument	args		5560961	2					
ANR	5561010	Identifier	args		5560961	0					
ANR	5561011	ForStatement	for ( i = 0 ; i < nb_args ; i ++ )		5560961	7					
ANR	5561012	ForInit	i = 0 ;	23:8:301:306	5560961	0	True				
ANR	5561013	AssignmentExpression	i = 0		5560961	0		=			
ANR	5561014	Identifier	i		5560961	0					
ANR	5561015	PrimaryExpression	0		5560961	1					
ANR	5561016	Condition	i < nb_args	23:15:308:318	5560961	1	True				
ANR	5561017	RelationalExpression	i < nb_args		5560961	0		<			
ANR	5561018	Identifier	i		5560961	0					
ANR	5561019	Identifier	nb_args		5560961	1					
ANR	5561020	PostIncDecOperationExpression	i ++	23:28:321:323	5560961	2	True				
ANR	5561021	Identifier	i		5560961	0					
ANR	5561022	IncDec	++		5560961	1					
ANR	5561023	CompoundStatement		21:33:267:267	5560961	3					
ANR	5561024	ExpressionStatement	"monitor_printf ( cur_mon , ""arg%d = '%s'\\n"" , i , ( char * ) args [ i ] )"	25:8:337:398	5560961	0	True				
ANR	5561025	CallExpression	"monitor_printf ( cur_mon , ""arg%d = '%s'\\n"" , i , ( char * ) args [ i ] )"		5560961	0					
ANR	5561026	Callee	monitor_printf		5560961	0					
ANR	5561027	Identifier	monitor_printf		5560961	0					
ANR	5561028	ArgumentList	cur_mon		5560961	1					
ANR	5561029	Argument	cur_mon		5560961	0					
ANR	5561030	Identifier	cur_mon		5560961	0					
ANR	5561031	Argument	"""arg%d = '%s'\\n"""		5560961	1					
ANR	5561032	PrimaryExpression	"""arg%d = '%s'\\n"""		5560961	0					
ANR	5561033	Argument	i		5560961	2					
ANR	5561034	Identifier	i		5560961	0					
ANR	5561035	Argument	( char * ) args [ i ]		5560961	3					
ANR	5561036	CastExpression	( char * ) args [ i ]		5560961	0					
ANR	5561037	CastTarget	char *		5560961	0					
ANR	5561038	ArrayIndexing	args [ i ]		5560961	1					
ANR	5561039	Identifier	args		5560961	0					
ANR	5561040	Identifier	i		5560961	1					
ANR	5561041	ExpressionStatement	len = strlen ( cmdline )	37:4:514:535	5560961	8	True				
ANR	5561042	AssignmentExpression	len = strlen ( cmdline )		5560961	0		=			
ANR	5561043	Identifier	len		5560961	0					
ANR	5561044	CallExpression	strlen ( cmdline )		5560961	1					
ANR	5561045	Callee	strlen		5560961	0					
ANR	5561046	Identifier	strlen		5560961	0					
ANR	5561047	ArgumentList	cmdline		5560961	1					
ANR	5561048	Argument	cmdline		5560961	0					
ANR	5561049	Identifier	cmdline		5560961	0					
ANR	5561050	IfStatement	if ( len > 0 && qemu_isspace ( cmdline [ len - 1 ] ) )		5560961	9					
ANR	5561051	Condition	len > 0 && qemu_isspace ( cmdline [ len - 1 ] )	39:8:546:586	5560961	0	True				
ANR	5561052	AndExpression	len > 0 && qemu_isspace ( cmdline [ len - 1 ] )		5560961	0		&&			
ANR	5561053	RelationalExpression	len > 0		5560961	0		>			
ANR	5561054	Identifier	len		5560961	0					
ANR	5561055	PrimaryExpression	0		5560961	1					
ANR	5561056	CallExpression	qemu_isspace ( cmdline [ len - 1 ] )		5560961	1					
ANR	5561057	Callee	qemu_isspace		5560961	0					
ANR	5561058	Identifier	qemu_isspace		5560961	0					
ANR	5561059	ArgumentList	cmdline [ len - 1 ]		5560961	1					
ANR	5561060	Argument	cmdline [ len - 1 ]		5560961	0					
ANR	5561061	ArrayIndexing	cmdline [ len - 1 ]		5560961	0					
ANR	5561062	Identifier	cmdline		5560961	0					
ANR	5561063	AdditiveExpression	len - 1		5560961	1		-			
ANR	5561064	Identifier	len		5560961	0					
ANR	5561065	PrimaryExpression	1		5560961	1					
ANR	5561066	CompoundStatement		37:51:530:530	5560961	1					
ANR	5561067	IfStatement	if ( nb_args >= MAX_ARGS )		5560961	0					
ANR	5561068	Condition	nb_args >= MAX_ARGS	41:12:604:622	5560961	0	True				
ANR	5561069	RelationalExpression	nb_args >= MAX_ARGS		5560961	0		>=			
ANR	5561070	Identifier	nb_args		5560961	0					
ANR	5561071	Identifier	MAX_ARGS		5560961	1					
ANR	5561072	CompoundStatement		39:33:566:566	5560961	1					
ANR	5561073	GotoStatement	goto cleanup ;	43:12:640:652	5560961	0	True				
ANR	5561074	Identifier	cleanup		5560961	0					
ANR	5561075	ExpressionStatement	"args [ nb_args ++ ] = g_strdup ( """" )"	47:8:674:704	5560961	1	True				
ANR	5561076	AssignmentExpression	"args [ nb_args ++ ] = g_strdup ( """" )"		5560961	0		=			
ANR	5561077	ArrayIndexing	args [ nb_args ++ ]		5560961	0					
ANR	5561078	Identifier	args		5560961	0					
ANR	5561079	PostIncDecOperationExpression	nb_args ++		5560961	1					
ANR	5561080	Identifier	nb_args		5560961	0					
ANR	5561081	IncDec	++		5560961	1					
ANR	5561082	CallExpression	"g_strdup ( """" )"		5560961	1					
ANR	5561083	Callee	g_strdup		5560961	0					
ANR	5561084	Identifier	g_strdup		5560961	0					
ANR	5561085	ArgumentList	""""""		5560961	1					
ANR	5561086	Argument	""""""		5560961	0					
ANR	5561087	PrimaryExpression	""""""		5560961	0					
ANR	5561088	IfStatement	if ( nb_args <= 1 )		5560961	10					
ANR	5561089	Condition	nb_args <= 1	51:8:722:733	5560961	0	True				
ANR	5561090	RelationalExpression	nb_args <= 1		5560961	0		<=			
ANR	5561091	Identifier	nb_args		5560961	0					
ANR	5561092	PrimaryExpression	1		5560961	1					
ANR	5561093	CompoundStatement		49:22:677:677	5560961	1					
ANR	5561094	IfStatement	if ( nb_args == 0 )		5560961	0					
ANR	5561095	Condition	nb_args == 0	55:12:785:796	5560961	0	True				
ANR	5561096	EqualityExpression	nb_args == 0		5560961	0		==			
ANR	5561097	Identifier	nb_args		5560961	0					
ANR	5561098	PrimaryExpression	0		5560961	1					
ANR	5561099	ExpressionStatement	"cmdname = """""	57:12:812:824	5560961	1	True				
ANR	5561100	AssignmentExpression	"cmdname = """""		5560961	0		=			
ANR	5561101	Identifier	cmdname		5560961	0					
ANR	5561102	PrimaryExpression	""""""		5560961	1					
ANR	5561103	ElseStatement	else		5560961	0					
ANR	5561104	ExpressionStatement	cmdname = args [ 0 ]	61:12:853:870	5560961	0	True				
ANR	5561105	AssignmentExpression	cmdname = args [ 0 ]		5560961	0		=			
ANR	5561106	Identifier	cmdname		5560961	0					
ANR	5561107	ArrayIndexing	args [ 0 ]		5560961	1					
ANR	5561108	Identifier	args		5560961	0					
ANR	5561109	PrimaryExpression	0		5560961	1					
ANR	5561110	ExpressionStatement	"readline_set_completion_index ( cur_mon -> rs , strlen ( cmdname ) )"	63:8:881:940	5560961	1	True				
ANR	5561111	CallExpression	"readline_set_completion_index ( cur_mon -> rs , strlen ( cmdname ) )"		5560961	0					
ANR	5561112	Callee	readline_set_completion_index		5560961	0					
ANR	5561113	Identifier	readline_set_completion_index		5560961	0					
ANR	5561114	ArgumentList	cur_mon -> rs		5560961	1					
ANR	5561115	Argument	cur_mon -> rs		5560961	0					
ANR	5561116	PtrMemberAccess	cur_mon -> rs		5560961	0					
ANR	5561117	Identifier	cur_mon		5560961	0					
ANR	5561118	Identifier	rs		5560961	1					
ANR	5561119	Argument	strlen ( cmdname )		5560961	1					
ANR	5561120	CallExpression	strlen ( cmdname )		5560961	0					
ANR	5561121	Callee	strlen		5560961	0					
ANR	5561122	Identifier	strlen		5560961	0					
ANR	5561123	ArgumentList	cmdname		5560961	1					
ANR	5561124	Argument	cmdname		5560961	0					
ANR	5561125	Identifier	cmdname		5560961	0					
ANR	5561126	ForStatement	for ( cmd = mon_cmds ; cmd -> name != NULL ; cmd ++ )		5560961	2					
ANR	5561127	ForInit	cmd = mon_cmds ;	65:12:955:969	5560961	0	True				
ANR	5561128	AssignmentExpression	cmd = mon_cmds		5560961	0		=			
ANR	5561129	Identifier	cmd		5560961	0					
ANR	5561130	Identifier	mon_cmds		5560961	1					
ANR	5561131	Condition	cmd -> name != NULL	65:28:971:987	5560961	1	True				
ANR	5561132	EqualityExpression	cmd -> name != NULL		5560961	0		!=			
ANR	5561133	PtrMemberAccess	cmd -> name		5560961	0					
ANR	5561134	Identifier	cmd		5560961	0					
ANR	5561135	Identifier	name		5560961	1					
ANR	5561136	Identifier	NULL		5560961	1					
ANR	5561137	PostIncDecOperationExpression	cmd ++	65:47:990:994	5560961	2	True				
ANR	5561138	Identifier	cmd		5560961	0					
ANR	5561139	IncDec	++		5560961	1					
ANR	5561140	CompoundStatement		63:54:938:938	5560961	3					
ANR	5561141	ExpressionStatement	"cmd_completion ( cmdname , cmd -> name )"	67:12:1012:1046	5560961	0	True				
ANR	5561142	CallExpression	"cmd_completion ( cmdname , cmd -> name )"		5560961	0					
ANR	5561143	Callee	cmd_completion		5560961	0					
ANR	5561144	Identifier	cmd_completion		5560961	0					
ANR	5561145	ArgumentList	cmdname		5560961	1					
ANR	5561146	Argument	cmdname		5560961	0					
ANR	5561147	Identifier	cmdname		5560961	0					
ANR	5561148	Argument	cmd -> name		5560961	1					
ANR	5561149	PtrMemberAccess	cmd -> name		5560961	0					
ANR	5561150	Identifier	cmd		5560961	0					
ANR	5561151	Identifier	name		5560961	1					
ANR	5561152	ElseStatement	else		5560961	0					
ANR	5561153	CompoundStatement		69:11:1012:1012	5560961	0					
ANR	5561154	ForStatement	for ( cmd = mon_cmds ; cmd -> name != NULL ; cmd ++ )		5560961	0					
ANR	5561155	ForInit	cmd = mon_cmds ;	75:13:1119:1133	5560961	0	True				
ANR	5561156	AssignmentExpression	cmd = mon_cmds		5560961	0		=			
ANR	5561157	Identifier	cmd		5560961	0					
ANR	5561158	Identifier	mon_cmds		5560961	1					
ANR	5561159	Condition	cmd -> name != NULL	75:29:1135:1151	5560961	1	True				
ANR	5561160	EqualityExpression	cmd -> name != NULL		5560961	0		!=			
ANR	5561161	PtrMemberAccess	cmd -> name		5560961	0					
ANR	5561162	Identifier	cmd		5560961	0					
ANR	5561163	Identifier	name		5560961	1					
ANR	5561164	Identifier	NULL		5560961	1					
ANR	5561165	PostIncDecOperationExpression	cmd ++	75:48:1154:1158	5560961	2	True				
ANR	5561166	Identifier	cmd		5560961	0					
ANR	5561167	IncDec	++		5560961	1					
ANR	5561168	CompoundStatement		73:55:1102:1102	5560961	3					
ANR	5561169	IfStatement	"if ( compare_cmd ( args [ 0 ] , cmd -> name ) )"		5560961	0					
ANR	5561170	Condition	"compare_cmd ( args [ 0 ] , cmd -> name )"	77:16:1180:1210	5560961	0	True				
ANR	5561171	CallExpression	"compare_cmd ( args [ 0 ] , cmd -> name )"		5560961	0					
ANR	5561172	Callee	compare_cmd		5560961	0					
ANR	5561173	Identifier	compare_cmd		5560961	0					
ANR	5561174	ArgumentList	args [ 0 ]		5560961	1					
ANR	5561175	Argument	args [ 0 ]		5560961	0					
ANR	5561176	ArrayIndexing	args [ 0 ]		5560961	0					
ANR	5561177	Identifier	args		5560961	0					
ANR	5561178	PrimaryExpression	0		5560961	1					
ANR	5561179	Argument	cmd -> name		5560961	1					
ANR	5561180	PtrMemberAccess	cmd -> name		5560961	0					
ANR	5561181	Identifier	cmd		5560961	0					
ANR	5561182	Identifier	name		5560961	1					
ANR	5561183	CompoundStatement		75:49:1154:1154	5560961	1					
ANR	5561184	BreakStatement	break ;	79:16:1232:1237	5560961	0	True				
ANR	5561185	IfStatement	if ( ! cmd -> name )		5560961	1					
ANR	5561186	Condition	! cmd -> name	85:12:1278:1287	5560961	0	True				
ANR	5561187	UnaryOperationExpression	! cmd -> name		5560961	0					
ANR	5561188	UnaryOperator	!		5560961	0					
ANR	5561189	PtrMemberAccess	cmd -> name		5560961	1					
ANR	5561190	Identifier	cmd		5560961	0					
ANR	5561191	Identifier	name		5560961	1					
ANR	5561192	CompoundStatement		83:24:1231:1231	5560961	1					
ANR	5561193	GotoStatement	goto cleanup ;	87:12:1305:1317	5560961	0	True				
ANR	5561194	Identifier	cleanup		5560961	0					
ANR	5561195	ExpressionStatement	ptype = next_arg_type ( cmd -> args_type )	93:8:1341:1378	5560961	2	True				
ANR	5561196	AssignmentExpression	ptype = next_arg_type ( cmd -> args_type )		5560961	0		=			
ANR	5561197	Identifier	ptype		5560961	0					
ANR	5561198	CallExpression	next_arg_type ( cmd -> args_type )		5560961	1					
ANR	5561199	Callee	next_arg_type		5560961	0					
ANR	5561200	Identifier	next_arg_type		5560961	0					
ANR	5561201	ArgumentList	cmd -> args_type		5560961	1					
ANR	5561202	Argument	cmd -> args_type		5560961	0					
ANR	5561203	PtrMemberAccess	cmd -> args_type		5560961	0					
ANR	5561204	Identifier	cmd		5560961	0					
ANR	5561205	Identifier	args_type		5560961	1					
ANR	5561206	ForStatement	for ( i = 0 ; i < nb_args - 2 ; i ++ )		5560961	3					
ANR	5561207	ForInit	i = 0 ;	95:12:1393:1398	5560961	0	True				
ANR	5561208	AssignmentExpression	i = 0		5560961	0		=			
ANR	5561209	Identifier	i		5560961	0					
ANR	5561210	PrimaryExpression	0		5560961	1					
ANR	5561211	Condition	i < nb_args - 2	95:19:1400:1414	5560961	1	True				
ANR	5561212	RelationalExpression	i < nb_args - 2		5560961	0		<			
ANR	5561213	Identifier	i		5560961	0					
ANR	5561214	AdditiveExpression	nb_args - 2		5560961	1		-			
ANR	5561215	Identifier	nb_args		5560961	0					
ANR	5561216	PrimaryExpression	2		5560961	1					
ANR	5561217	PostIncDecOperationExpression	i ++	95:36:1417:1419	5560961	2	True				
ANR	5561218	Identifier	i		5560961	0					
ANR	5561219	IncDec	++		5560961	1					
ANR	5561220	CompoundStatement		93:41:1363:1363	5560961	3					
ANR	5561221	IfStatement	if ( * ptype != '\\0' )		5560961	0					
ANR	5561222	Condition	* ptype != '\\0'	97:16:1441:1454	5560961	0	True				
ANR	5561223	EqualityExpression	* ptype != '\\0'		5560961	0		!=			
ANR	5561224	UnaryOperationExpression	* ptype		5560961	0					
ANR	5561225	UnaryOperator	*		5560961	0					
ANR	5561226	Identifier	ptype		5560961	1					
ANR	5561227	PrimaryExpression	'\\0'		5560961	1					
ANR	5561228	CompoundStatement		95:32:1398:1398	5560961	1					
ANR	5561229	ExpressionStatement	ptype = next_arg_type ( ptype )	99:16:1476:1504	5560961	0	True				
ANR	5561230	AssignmentExpression	ptype = next_arg_type ( ptype )		5560961	0		=			
ANR	5561231	Identifier	ptype		5560961	0					
ANR	5561232	CallExpression	next_arg_type ( ptype )		5560961	1					
ANR	5561233	Callee	next_arg_type		5560961	0					
ANR	5561234	Identifier	next_arg_type		5560961	0					
ANR	5561235	ArgumentList	ptype		5560961	1					
ANR	5561236	Argument	ptype		5560961	0					
ANR	5561237	Identifier	ptype		5560961	0					
ANR	5561238	WhileStatement	while ( * ptype == '?' )		5560961	1					
ANR	5561239	Condition	* ptype == '?'	101:23:1530:1542	5560961	0	True				
ANR	5561240	EqualityExpression	* ptype == '?'		5560961	0		==			
ANR	5561241	UnaryOperationExpression	* ptype		5560961	0					
ANR	5561242	UnaryOperator	*		5560961	0					
ANR	5561243	Identifier	ptype		5560961	1					
ANR	5561244	PrimaryExpression	'?'		5560961	1					
ANR	5561245	ExpressionStatement	ptype = next_arg_type ( ptype )	103:20:1566:1594	5560961	1	True				
ANR	5561246	AssignmentExpression	ptype = next_arg_type ( ptype )		5560961	0		=			
ANR	5561247	Identifier	ptype		5560961	0					
ANR	5561248	CallExpression	next_arg_type ( ptype )		5560961	1					
ANR	5561249	Callee	next_arg_type		5560961	0					
ANR	5561250	Identifier	next_arg_type		5560961	0					
ANR	5561251	ArgumentList	ptype		5560961	1					
ANR	5561252	Argument	ptype		5560961	0					
ANR	5561253	Identifier	ptype		5560961	0					
ANR	5561254	ExpressionStatement	str = args [ nb_args - 1 ]	109:8:1631:1654	5560961	4	True				
ANR	5561255	AssignmentExpression	str = args [ nb_args - 1 ]		5560961	0		=			
ANR	5561256	Identifier	str		5560961	0					
ANR	5561257	ArrayIndexing	args [ nb_args - 1 ]		5560961	1					
ANR	5561258	Identifier	args		5560961	0					
ANR	5561259	AdditiveExpression	nb_args - 1		5560961	1		-			
ANR	5561260	Identifier	nb_args		5560961	0					
ANR	5561261	PrimaryExpression	1		5560961	1					
ANR	5561262	IfStatement	if ( * ptype == '-' && ptype [ 1 ] != '\\0' )		5560961	5					
ANR	5561263	Condition	* ptype == '-' && ptype [ 1 ] != '\\0'	111:12:1669:1701	5560961	0	True				
ANR	5561264	AndExpression	* ptype == '-' && ptype [ 1 ] != '\\0'		5560961	0		&&			
ANR	5561265	EqualityExpression	* ptype == '-'		5560961	0		==			
ANR	5561266	UnaryOperationExpression	* ptype		5560961	0					
ANR	5561267	UnaryOperator	*		5560961	0					
ANR	5561268	Identifier	ptype		5560961	1					
ANR	5561269	PrimaryExpression	'-'		5560961	1					
ANR	5561270	EqualityExpression	ptype [ 1 ] != '\\0'		5560961	1		!=			
ANR	5561271	ArrayIndexing	ptype [ 1 ]		5560961	0					
ANR	5561272	Identifier	ptype		5560961	0					
ANR	5561273	PrimaryExpression	1		5560961	1					
ANR	5561274	PrimaryExpression	'\\0'		5560961	1					
ANR	5561275	CompoundStatement		109:47:1645:1645	5560961	1					
ANR	5561276	ExpressionStatement	ptype = next_arg_type ( ptype )	113:12:1719:1747	5560961	0	True				
ANR	5561277	AssignmentExpression	ptype = next_arg_type ( ptype )		5560961	0		=			
ANR	5561278	Identifier	ptype		5560961	0					
ANR	5561279	CallExpression	next_arg_type ( ptype )		5560961	1					
ANR	5561280	Callee	next_arg_type		5560961	0					
ANR	5561281	Identifier	next_arg_type		5560961	0					
ANR	5561282	ArgumentList	ptype		5560961	1					
ANR	5561283	Argument	ptype		5560961	0					
ANR	5561284	Identifier	ptype		5560961	0					
ANR	5561285	SwitchStatement	switch ( * ptype )		5560961	6					
ANR	5561286	Condition	* ptype	117:15:1776:1781	5560961	0	True				
ANR	5561287	UnaryOperationExpression	* ptype		5560961	0					
ANR	5561288	UnaryOperator	*		5560961	0					
ANR	5561289	Identifier	ptype		5560961	1					
ANR	5561290	CompoundStatement		115:23:1725:1725	5560961	1					
ANR	5561291	Label	case 'F' :	119:8:1795:1803	5560961	0	True				
ANR	5561292	ExpressionStatement	"readline_set_completion_index ( cur_mon -> rs , strlen ( str ) )"	123:12:1853:1908	5560961	1	True				
ANR	5561293	CallExpression	"readline_set_completion_index ( cur_mon -> rs , strlen ( str ) )"		5560961	0					
ANR	5561294	Callee	readline_set_completion_index		5560961	0					
ANR	5561295	Identifier	readline_set_completion_index		5560961	0					
ANR	5561296	ArgumentList	cur_mon -> rs		5560961	1					
ANR	5561297	Argument	cur_mon -> rs		5560961	0					
ANR	5561298	PtrMemberAccess	cur_mon -> rs		5560961	0					
ANR	5561299	Identifier	cur_mon		5560961	0					
ANR	5561300	Identifier	rs		5560961	1					
ANR	5561301	Argument	strlen ( str )		5560961	1					
ANR	5561302	CallExpression	strlen ( str )		5560961	0					
ANR	5561303	Callee	strlen		5560961	0					
ANR	5561304	Identifier	strlen		5560961	0					
ANR	5561305	ArgumentList	str		5560961	1					
ANR	5561306	Argument	str		5560961	0					
ANR	5561307	Identifier	str		5560961	0					
ANR	5561308	ExpressionStatement	file_completion ( str )	125:12:1923:1943	5560961	2	True				
ANR	5561309	CallExpression	file_completion ( str )		5560961	0					
ANR	5561310	Callee	file_completion		5560961	0					
ANR	5561311	Identifier	file_completion		5560961	0					
ANR	5561312	ArgumentList	str		5560961	1					
ANR	5561313	Argument	str		5560961	0					
ANR	5561314	Identifier	str		5560961	0					
ANR	5561315	BreakStatement	break ;	127:12:1958:1963	5560961	3	True				
ANR	5561316	Label	case 'B' :	129:8:1974:1982	5560961	4	True				
ANR	5561317	ExpressionStatement	"readline_set_completion_index ( cur_mon -> rs , strlen ( str ) )"	133:12:2045:2100	5560961	5	True				
ANR	5561318	CallExpression	"readline_set_completion_index ( cur_mon -> rs , strlen ( str ) )"		5560961	0					
ANR	5561319	Callee	readline_set_completion_index		5560961	0					
ANR	5561320	Identifier	readline_set_completion_index		5560961	0					
ANR	5561321	ArgumentList	cur_mon -> rs		5560961	1					
ANR	5561322	Argument	cur_mon -> rs		5560961	0					
ANR	5561323	PtrMemberAccess	cur_mon -> rs		5560961	0					
ANR	5561324	Identifier	cur_mon		5560961	0					
ANR	5561325	Identifier	rs		5560961	1					
ANR	5561326	Argument	strlen ( str )		5560961	1					
ANR	5561327	CallExpression	strlen ( str )		5560961	0					
ANR	5561328	Callee	strlen		5560961	0					
ANR	5561329	Identifier	strlen		5560961	0					
ANR	5561330	ArgumentList	str		5560961	1					
ANR	5561331	Argument	str		5560961	0					
ANR	5561332	Identifier	str		5560961	0					
ANR	5561333	ExpressionStatement	"bdrv_iterate ( block_completion_it , ( void * ) str )"	135:12:2115:2161	5560961	6	True				
ANR	5561334	CallExpression	"bdrv_iterate ( block_completion_it , ( void * ) str )"		5560961	0					
ANR	5561335	Callee	bdrv_iterate		5560961	0					
ANR	5561336	Identifier	bdrv_iterate		5560961	0					
ANR	5561337	ArgumentList	block_completion_it		5560961	1					
ANR	5561338	Argument	block_completion_it		5560961	0					
ANR	5561339	Identifier	block_completion_it		5560961	0					
ANR	5561340	Argument	( void * ) str		5560961	1					
ANR	5561341	CastExpression	( void * ) str		5560961	0					
ANR	5561342	CastTarget	void *		5560961	0					
ANR	5561343	Identifier	str		5560961	1					
ANR	5561344	BreakStatement	break ;	137:12:2176:2181	5560961	7	True				
ANR	5561345	Label	case 's' :	139:8:2192:2200	5560961	8	True				
ANR	5561346	IfStatement	"if ( ! strcmp ( cmd -> name , ""info"" ) )"		5560961	9					
ANR	5561347	Condition	"! strcmp ( cmd -> name , ""info"" )"	143:16:2258:2283	5560961	0	True				
ANR	5561348	UnaryOperationExpression	"! strcmp ( cmd -> name , ""info"" )"		5560961	0					
ANR	5561349	UnaryOperator	!		5560961	0					
ANR	5561350	CallExpression	"strcmp ( cmd -> name , ""info"" )"		5560961	1					
ANR	5561351	Callee	strcmp		5560961	0					
ANR	5561352	Identifier	strcmp		5560961	0					
ANR	5561353	ArgumentList	cmd -> name		5560961	1					
ANR	5561354	Argument	cmd -> name		5560961	0					
ANR	5561355	PtrMemberAccess	cmd -> name		5560961	0					
ANR	5561356	Identifier	cmd		5560961	0					
ANR	5561357	Identifier	name		5560961	1					
ANR	5561358	Argument	"""info"""		5560961	1					
ANR	5561359	PrimaryExpression	"""info"""		5560961	0					
ANR	5561360	CompoundStatement		141:44:2227:2227	5560961	1					
ANR	5561361	ExpressionStatement	"readline_set_completion_index ( cur_mon -> rs , strlen ( str ) )"	145:16:2305:2360	5560961	0	True				
ANR	5561362	CallExpression	"readline_set_completion_index ( cur_mon -> rs , strlen ( str ) )"		5560961	0					
ANR	5561363	Callee	readline_set_completion_index		5560961	0					
ANR	5561364	Identifier	readline_set_completion_index		5560961	0					
ANR	5561365	ArgumentList	cur_mon -> rs		5560961	1					
ANR	5561366	Argument	cur_mon -> rs		5560961	0					
ANR	5561367	PtrMemberAccess	cur_mon -> rs		5560961	0					
ANR	5561368	Identifier	cur_mon		5560961	0					
ANR	5561369	Identifier	rs		5560961	1					
ANR	5561370	Argument	strlen ( str )		5560961	1					
ANR	5561371	CallExpression	strlen ( str )		5560961	0					
ANR	5561372	Callee	strlen		5560961	0					
ANR	5561373	Identifier	strlen		5560961	0					
ANR	5561374	ArgumentList	str		5560961	1					
ANR	5561375	Argument	str		5560961	0					
ANR	5561376	Identifier	str		5560961	0					
ANR	5561377	ForStatement	for ( cmd = info_cmds ; cmd -> name != NULL ; cmd ++ )		5560961	1					
ANR	5561378	ForInit	cmd = info_cmds ;	147:20:2383:2398	5560961	0	True				
ANR	5561379	AssignmentExpression	cmd = info_cmds		5560961	0		=			
ANR	5561380	Identifier	cmd		5560961	0					
ANR	5561381	Identifier	info_cmds		5560961	1					
ANR	5561382	Condition	cmd -> name != NULL	147:37:2400:2416	5560961	1	True				
ANR	5561383	EqualityExpression	cmd -> name != NULL		5560961	0		!=			
ANR	5561384	PtrMemberAccess	cmd -> name		5560961	0					
ANR	5561385	Identifier	cmd		5560961	0					
ANR	5561386	Identifier	name		5560961	1					
ANR	5561387	Identifier	NULL		5560961	1					
ANR	5561388	PostIncDecOperationExpression	cmd ++	147:56:2419:2423	5560961	2	True				
ANR	5561389	Identifier	cmd		5560961	0					
ANR	5561390	IncDec	++		5560961	1					
ANR	5561391	CompoundStatement		145:63:2367:2367	5560961	3					
ANR	5561392	ExpressionStatement	"cmd_completion ( str , cmd -> name )"	149:20:2449:2479	5560961	0	True				
ANR	5561393	CallExpression	"cmd_completion ( str , cmd -> name )"		5560961	0					
ANR	5561394	Callee	cmd_completion		5560961	0					
ANR	5561395	Identifier	cmd_completion		5560961	0					
ANR	5561396	ArgumentList	str		5560961	1					
ANR	5561397	Argument	str		5560961	0					
ANR	5561398	Identifier	str		5560961	0					
ANR	5561399	Argument	cmd -> name		5560961	1					
ANR	5561400	PtrMemberAccess	cmd -> name		5560961	0					
ANR	5561401	Identifier	cmd		5560961	0					
ANR	5561402	Identifier	name		5560961	1					
ANR	5561403	ElseStatement	else		5560961	0					
ANR	5561404	IfStatement	"if ( ! strcmp ( cmd -> name , ""sendkey"" ) )"		5560961	0					
ANR	5561405	Condition	"! strcmp ( cmd -> name , ""sendkey"" )"	153:23:2524:2552	5560961	0	True				
ANR	5561406	UnaryOperationExpression	"! strcmp ( cmd -> name , ""sendkey"" )"		5560961	0					
ANR	5561407	UnaryOperator	!		5560961	0					
ANR	5561408	CallExpression	"strcmp ( cmd -> name , ""sendkey"" )"		5560961	1					
ANR	5561409	Callee	strcmp		5560961	0					
ANR	5561410	Identifier	strcmp		5560961	0					
ANR	5561411	ArgumentList	cmd -> name		5560961	1					
ANR	5561412	Argument	cmd -> name		5560961	0					
ANR	5561413	PtrMemberAccess	cmd -> name		5560961	0					
ANR	5561414	Identifier	cmd		5560961	0					
ANR	5561415	Identifier	name		5560961	1					
ANR	5561416	Argument	"""sendkey"""		5560961	1					
ANR	5561417	PrimaryExpression	"""sendkey"""		5560961	0					
ANR	5561418	CompoundStatement		153:16:2515:2544	5560961	1					
ANR	5561419	IdentifierDeclStatement	"char * sep = strrchr ( str , '-' ) ;"	155:16:2574:2603	5560961	0	True				
ANR	5561420	IdentifierDecl	"* sep = strrchr ( str , '-' )"		5560961	0					
ANR	5561421	IdentifierDeclType	char *		5560961	0					
ANR	5561422	Identifier	sep		5560961	1					
ANR	5561423	AssignmentExpression	"* sep = strrchr ( str , '-' )"		5560961	2		=			
ANR	5561424	Identifier	sep		5560961	0					
ANR	5561425	CallExpression	"strrchr ( str , '-' )"		5560961	1					
ANR	5561426	Callee	strrchr		5560961	0					
ANR	5561427	Identifier	strrchr		5560961	0					
ANR	5561428	ArgumentList	str		5560961	1					
ANR	5561429	Argument	str		5560961	0					
ANR	5561430	Identifier	str		5560961	0					
ANR	5561431	Argument	'-'		5560961	1					
ANR	5561432	PrimaryExpression	'-'		5560961	0					
ANR	5561433	IfStatement	if ( sep )		5560961	1					
ANR	5561434	Condition	sep	157:20:2626:2628	5560961	0	True				
ANR	5561435	Identifier	sep		5560961	0					
ANR	5561436	ExpressionStatement	str = sep + 1	159:20:2652:2665	5560961	1	True				
ANR	5561437	AssignmentExpression	str = sep + 1		5560961	0		=			
ANR	5561438	Identifier	str		5560961	0					
ANR	5561439	AdditiveExpression	sep + 1		5560961	1		+			
ANR	5561440	Identifier	sep		5560961	0					
ANR	5561441	PrimaryExpression	1		5560961	1					
ANR	5561442	ExpressionStatement	"readline_set_completion_index ( cur_mon -> rs , strlen ( str ) )"	161:16:2684:2739	5560961	2	True				
ANR	5561443	CallExpression	"readline_set_completion_index ( cur_mon -> rs , strlen ( str ) )"		5560961	0					
ANR	5561444	Callee	readline_set_completion_index		5560961	0					
ANR	5561445	Identifier	readline_set_completion_index		5560961	0					
ANR	5561446	ArgumentList	cur_mon -> rs		5560961	1					
ANR	5561447	Argument	cur_mon -> rs		5560961	0					
ANR	5561448	PtrMemberAccess	cur_mon -> rs		5560961	0					
ANR	5561449	Identifier	cur_mon		5560961	0					
ANR	5561450	Identifier	rs		5560961	1					
ANR	5561451	Argument	strlen ( str )		5560961	1					
ANR	5561452	CallExpression	strlen ( str )		5560961	0					
ANR	5561453	Callee	strlen		5560961	0					
ANR	5561454	Identifier	strlen		5560961	0					
ANR	5561455	ArgumentList	str		5560961	1					
ANR	5561456	Argument	str		5560961	0					
ANR	5561457	Identifier	str		5560961	0					
ANR	5561458	ForStatement	for ( key = key_defs ; key -> name != NULL ; key ++ )		5560961	3					
ANR	5561459	ForInit	key = key_defs ;	163:20:2762:2776	5560961	0	True				
ANR	5561460	AssignmentExpression	key = key_defs		5560961	0		=			
ANR	5561461	Identifier	key		5560961	0					
ANR	5561462	Identifier	key_defs		5560961	1					
ANR	5561463	Condition	key -> name != NULL	163:36:2778:2794	5560961	1	True				
ANR	5561464	EqualityExpression	key -> name != NULL		5560961	0		!=			
ANR	5561465	PtrMemberAccess	key -> name		5560961	0					
ANR	5561466	Identifier	key		5560961	0					
ANR	5561467	Identifier	name		5560961	1					
ANR	5561468	Identifier	NULL		5560961	1					
ANR	5561469	PostIncDecOperationExpression	key ++	163:55:2797:2801	5560961	2	True				
ANR	5561470	Identifier	key		5560961	0					
ANR	5561471	IncDec	++		5560961	1					
ANR	5561472	CompoundStatement		161:62:2745:2745	5560961	3					
ANR	5561473	ExpressionStatement	"cmd_completion ( str , key -> name )"	165:20:2827:2857	5560961	0	True				
ANR	5561474	CallExpression	"cmd_completion ( str , key -> name )"		5560961	0					
ANR	5561475	Callee	cmd_completion		5560961	0					
ANR	5561476	Identifier	cmd_completion		5560961	0					
ANR	5561477	ArgumentList	str		5560961	1					
ANR	5561478	Argument	str		5560961	0					
ANR	5561479	Identifier	str		5560961	0					
ANR	5561480	Argument	key -> name		5560961	1					
ANR	5561481	PtrMemberAccess	key -> name		5560961	0					
ANR	5561482	Identifier	key		5560961	0					
ANR	5561483	Identifier	name		5560961	1					
ANR	5561484	ElseStatement	else		5560961	0					
ANR	5561485	IfStatement	"if ( ! strcmp ( cmd -> name , ""help|?"" ) )"		5560961	0					
ANR	5561486	Condition	"! strcmp ( cmd -> name , ""help|?"" )"	169:23:2902:2929	5560961	0	True				
ANR	5561487	UnaryOperationExpression	"! strcmp ( cmd -> name , ""help|?"" )"		5560961	0					
ANR	5561488	UnaryOperator	!		5560961	0					
ANR	5561489	CallExpression	"strcmp ( cmd -> name , ""help|?"" )"		5560961	1					
ANR	5561490	Callee	strcmp		5560961	0					
ANR	5561491	Identifier	strcmp		5560961	0					
ANR	5561492	ArgumentList	cmd -> name		5560961	1					
ANR	5561493	Argument	cmd -> name		5560961	0					
ANR	5561494	PtrMemberAccess	cmd -> name		5560961	0					
ANR	5561495	Identifier	cmd		5560961	0					
ANR	5561496	Identifier	name		5560961	1					
ANR	5561497	Argument	"""help|?"""		5560961	1					
ANR	5561498	PrimaryExpression	"""help|?"""		5560961	0					
ANR	5561499	CompoundStatement		167:53:2873:2873	5560961	1					
ANR	5561500	ExpressionStatement	"readline_set_completion_index ( cur_mon -> rs , strlen ( str ) )"	171:16:2951:3006	5560961	0	True				
ANR	5561501	CallExpression	"readline_set_completion_index ( cur_mon -> rs , strlen ( str ) )"		5560961	0					
ANR	5561502	Callee	readline_set_completion_index		5560961	0					
ANR	5561503	Identifier	readline_set_completion_index		5560961	0					
ANR	5561504	ArgumentList	cur_mon -> rs		5560961	1					
ANR	5561505	Argument	cur_mon -> rs		5560961	0					
ANR	5561506	PtrMemberAccess	cur_mon -> rs		5560961	0					
ANR	5561507	Identifier	cur_mon		5560961	0					
ANR	5561508	Identifier	rs		5560961	1					
ANR	5561509	Argument	strlen ( str )		5560961	1					
ANR	5561510	CallExpression	strlen ( str )		5560961	0					
ANR	5561511	Callee	strlen		5560961	0					
ANR	5561512	Identifier	strlen		5560961	0					
ANR	5561513	ArgumentList	str		5560961	1					
ANR	5561514	Argument	str		5560961	0					
ANR	5561515	Identifier	str		5560961	0					
ANR	5561516	ForStatement	for ( cmd = mon_cmds ; cmd -> name != NULL ; cmd ++ )		5560961	1					
ANR	5561517	ForInit	cmd = mon_cmds ;	173:21:3030:3044	5560961	0	True				
ANR	5561518	AssignmentExpression	cmd = mon_cmds		5560961	0		=			
ANR	5561519	Identifier	cmd		5560961	0					
ANR	5561520	Identifier	mon_cmds		5560961	1					
ANR	5561521	Condition	cmd -> name != NULL	173:37:3046:3062	5560961	1	True				
ANR	5561522	EqualityExpression	cmd -> name != NULL		5560961	0		!=			
ANR	5561523	PtrMemberAccess	cmd -> name		5560961	0					
ANR	5561524	Identifier	cmd		5560961	0					
ANR	5561525	Identifier	name		5560961	1					
ANR	5561526	Identifier	NULL		5560961	1					
ANR	5561527	PostIncDecOperationExpression	cmd ++	173:56:3065:3069	5560961	2	True				
ANR	5561528	Identifier	cmd		5560961	0					
ANR	5561529	IncDec	++		5560961	1					
ANR	5561530	CompoundStatement		171:63:3013:3013	5560961	3					
ANR	5561531	ExpressionStatement	"cmd_completion ( str , cmd -> name )"	175:20:3095:3125	5560961	0	True				
ANR	5561532	CallExpression	"cmd_completion ( str , cmd -> name )"		5560961	0					
ANR	5561533	Callee	cmd_completion		5560961	0					
ANR	5561534	Identifier	cmd_completion		5560961	0					
ANR	5561535	ArgumentList	str		5560961	1					
ANR	5561536	Argument	str		5560961	0					
ANR	5561537	Identifier	str		5560961	0					
ANR	5561538	Argument	cmd -> name		5560961	1					
ANR	5561539	PtrMemberAccess	cmd -> name		5560961	0					
ANR	5561540	Identifier	cmd		5560961	0					
ANR	5561541	Identifier	name		5560961	1					
ANR	5561542	BreakStatement	break ;	181:12:3174:3179	5560961	10	True				
ANR	5561543	Label	default :	183:8:3190:3197	5560961	11	True				
ANR	5561544	Identifier	default		5560961	0					
ANR	5561545	BreakStatement	break ;	185:12:3212:3217	5560961	12	True				
ANR	5561546	Label	cleanup :	193:0:3240:3247	5560961	11	True				
ANR	5561547	Identifier	cleanup		5560961	0					
ANR	5561548	ForStatement	for ( i = 0 ; i < nb_args ; i ++ )		5560961	12					
ANR	5561549	ForInit	i = 0 ;	195:9:3259:3264	5560961	0	True				
ANR	5561550	AssignmentExpression	i = 0		5560961	0		=			
ANR	5561551	Identifier	i		5560961	0					
ANR	5561552	PrimaryExpression	0		5560961	1					
ANR	5561553	Condition	i < nb_args	195:16:3266:3276	5560961	1	True				
ANR	5561554	RelationalExpression	i < nb_args		5560961	0		<			
ANR	5561555	Identifier	i		5560961	0					
ANR	5561556	Identifier	nb_args		5560961	1					
ANR	5561557	PostIncDecOperationExpression	i ++	195:29:3279:3281	5560961	2	True				
ANR	5561558	Identifier	i		5560961	0					
ANR	5561559	IncDec	++		5560961	1					
ANR	5561560	CompoundStatement		193:34:3225:3225	5560961	3					
ANR	5561561	ExpressionStatement	g_free ( args [ i ] )	197:8:3295:3310	5560961	0	True				
ANR	5561562	CallExpression	g_free ( args [ i ] )		5560961	0					
ANR	5561563	Callee	g_free		5560961	0					
ANR	5561564	Identifier	g_free		5560961	0					
ANR	5561565	ArgumentList	args [ i ]		5560961	1					
ANR	5561566	Argument	args [ i ]		5560961	0					
ANR	5561567	ArrayIndexing	args [ i ]		5560961	0					
ANR	5561568	Identifier	args		5560961	0					
ANR	5561569	Identifier	i		5560961	1					
ANR	5561570	ReturnType	static void		5560961	1					
ANR	5561571	Identifier	monitor_find_completion		5560961	2					
ANR	5561572	ParameterList	const char * cmdline		5560961	3					
ANR	5561573	Parameter	const char * cmdline	1:36:36:54	5560961	0	True				
ANR	5561574	ParameterType	const char *		5560961	0					
ANR	5561575	Identifier	cmdline		5560961	1					
ANR	5561576	CFGEntryNode	ENTRY		5560961		True				
ANR	5561577	CFGExitNode	EXIT		5560961		True				
ANR	5561578	Symbol	* key		5560961						
ANR	5561579	Symbol	ptype		5560961						
ANR	5561580	Symbol	MAX_ARGS		5560961						
ANR	5561581	Symbol	info_cmds		5560961						
ANR	5561582	Symbol	* args		5560961						
ANR	5561583	Symbol	compare_cmd		5560961						
ANR	5561584	Symbol	key -> name		5560961						
ANR	5561585	Symbol	& nb_args		5560961						
ANR	5561586	Symbol	strlen		5560961						
ANR	5561587	Symbol	cmdline		5560961						
ANR	5561588	Symbol	len		5560961						
ANR	5561589	Symbol	* cur_mon		5560961						
ANR	5561590	Symbol	nb_args		5560961						
ANR	5561591	Symbol	g_strdup		5560961						
ANR	5561592	Symbol	* cmd		5560961						
ANR	5561593	Symbol	key		5560961						
ANR	5561594	Symbol	mon_cmds		5560961						
ANR	5561595	Symbol	next_arg_type		5560961						
ANR	5561596	Symbol	sep		5560961						
ANR	5561597	Symbol	strcmp		5560961						
ANR	5561598	Symbol	* nb_args		5560961						
ANR	5561599	Symbol	NULL		5560961						
ANR	5561600	Symbol	* cmdline		5560961						
ANR	5561601	Symbol	cur_mon -> rs		5560961						
ANR	5561602	Symbol	cmd -> name		5560961						
ANR	5561603	Symbol	i		5560961						
ANR	5561604	Symbol	block_completion_it		5560961						
ANR	5561605	Symbol	qemu_isspace		5560961						
ANR	5561606	Symbol	cur_mon		5560961						
ANR	5561607	Symbol	args		5560961						
ANR	5561608	Symbol	str		5560961						
ANR	5561609	Symbol	* i		5560961						
ANR	5561610	Symbol	* ptype		5560961						
ANR	5561611	Symbol	strrchr		5560961						
ANR	5561612	Symbol	cmdname		5560961						
ANR	5561613	Symbol	key_defs		5560961						
ANR	5561614	Symbol	cmd		5560961						
ANR	5561615	Symbol	cmd -> args_type		5560961						
ANR	5561616	Symbol	* len		5560961						
