command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8627067	File	/home/p4ultr4n/workplace/ReVeal/raw_code/unpack_alpha_0.c								
ANR	8627068	Function	unpack_alpha	1:0:0:1348							
ANR	8627069	FunctionDef	"unpack_alpha (GetBitContext * gb , uint16_t * dst , int num_coeffs , const int num_bits)"		8627068	0					
ANR	8627070	CompoundStatement		5:0:122:1348	8627068	0					
ANR	8627071	IdentifierDeclStatement	const int mask = ( 1 << num_bits ) - 1 ;	7:4:129:165	8627068	0	True				
ANR	8627072	IdentifierDecl	mask = ( 1 << num_bits ) - 1		8627068	0					
ANR	8627073	IdentifierDeclType	const int		8627068	0					
ANR	8627074	Identifier	mask		8627068	1					
ANR	8627075	AssignmentExpression	mask = ( 1 << num_bits ) - 1		8627068	2		=			
ANR	8627076	Identifier	mask		8627068	0					
ANR	8627077	AdditiveExpression	( 1 << num_bits ) - 1		8627068	1		-			
ANR	8627078	ShiftExpression	1 << num_bits		8627068	0		<<			
ANR	8627079	PrimaryExpression	1		8627068	0					
ANR	8627080	Identifier	num_bits		8627068	1					
ANR	8627081	PrimaryExpression	1		8627068	1					
ANR	8627082	IdentifierDeclStatement	"int i , idx , val , alpha_val ;"	9:4:172:198	8627068	1	True				
ANR	8627083	IdentifierDecl	i		8627068	0					
ANR	8627084	IdentifierDeclType	int		8627068	0					
ANR	8627085	Identifier	i		8627068	1					
ANR	8627086	IdentifierDecl	idx		8627068	1					
ANR	8627087	IdentifierDeclType	int		8627068	0					
ANR	8627088	Identifier	idx		8627068	1					
ANR	8627089	IdentifierDecl	val		8627068	2					
ANR	8627090	IdentifierDeclType	int		8627068	0					
ANR	8627091	Identifier	val		8627068	1					
ANR	8627092	IdentifierDecl	alpha_val		8627068	3					
ANR	8627093	IdentifierDeclType	int		8627068	0					
ANR	8627094	Identifier	alpha_val		8627068	1					
ANR	8627095	ExpressionStatement	idx = 0	13:4:207:220	8627068	2	True				
ANR	8627096	AssignmentExpression	idx = 0		8627068	0		=			
ANR	8627097	Identifier	idx		8627068	0					
ANR	8627098	PrimaryExpression	0		8627068	1					
ANR	8627099	ExpressionStatement	alpha_val = mask	15:4:227:243	8627068	3	True				
ANR	8627100	AssignmentExpression	alpha_val = mask		8627068	0		=			
ANR	8627101	Identifier	alpha_val		8627068	0					
ANR	8627102	Identifier	mask		8627068	1					
ANR	8627103	DoStatement	do		8627068	4					
ANR	8627104	CompoundStatement		13:7:130:130	8627068	0					
ANR	8627105	DoStatement	do		8627068	0					
ANR	8627106	CompoundStatement		15:11:144:144	8627068	0					
ANR	8627107	IfStatement	if ( get_bits1 ( gb ) )		8627068	0					
ANR	8627108	Condition	get_bits1 ( gb )	21:16:286:298	8627068	0	True				
ANR	8627109	CallExpression	get_bits1 ( gb )		8627068	0					
ANR	8627110	Callee	get_bits1		8627068	0					
ANR	8627111	Identifier	get_bits1		8627068	0					
ANR	8627112	ArgumentList	gb		8627068	1					
ANR	8627113	Argument	gb		8627068	0					
ANR	8627114	Identifier	gb		8627068	0					
ANR	8627115	ExpressionStatement	"val = get_bits ( gb , num_bits )"	23:16:318:346	8627068	1	True				
ANR	8627116	AssignmentExpression	"val = get_bits ( gb , num_bits )"		8627068	0		=			
ANR	8627117	Identifier	val		8627068	0					
ANR	8627118	CallExpression	"get_bits ( gb , num_bits )"		8627068	1					
ANR	8627119	Callee	get_bits		8627068	0					
ANR	8627120	Identifier	get_bits		8627068	0					
ANR	8627121	ArgumentList	gb		8627068	1					
ANR	8627122	Argument	gb		8627068	0					
ANR	8627123	Identifier	gb		8627068	0					
ANR	8627124	Argument	num_bits		8627068	1					
ANR	8627125	Identifier	num_bits		8627068	0					
ANR	8627126	ElseStatement	else		8627068	0					
ANR	8627127	CompoundStatement		23:16:262:270	8627068	0					
ANR	8627128	IdentifierDeclStatement	int sign ;	27:16:385:393	8627068	0	True				
ANR	8627129	IdentifierDecl	sign		8627068	0					
ANR	8627130	IdentifierDeclType	int		8627068	0					
ANR	8627131	Identifier	sign		8627068	1					
ANR	8627132	ExpressionStatement	"val = get_bits ( gb , num_bits == 16 ? 7 : 4 )"	29:16:412:455	8627068	1	True				
ANR	8627133	AssignmentExpression	"val = get_bits ( gb , num_bits == 16 ? 7 : 4 )"		8627068	0		=			
ANR	8627134	Identifier	val		8627068	0					
ANR	8627135	CallExpression	"get_bits ( gb , num_bits == 16 ? 7 : 4 )"		8627068	1					
ANR	8627136	Callee	get_bits		8627068	0					
ANR	8627137	Identifier	get_bits		8627068	0					
ANR	8627138	ArgumentList	gb		8627068	1					
ANR	8627139	Argument	gb		8627068	0					
ANR	8627140	Identifier	gb		8627068	0					
ANR	8627141	Argument	num_bits == 16 ? 7 : 4		8627068	1					
ANR	8627142	ConditionalExpression	num_bits == 16 ? 7 : 4		8627068	0					
ANR	8627143	Condition	num_bits == 16		8627068	0					
ANR	8627144	EqualityExpression	num_bits == 16		8627068	0		==			
ANR	8627145	Identifier	num_bits		8627068	0					
ANR	8627146	PrimaryExpression	16		8627068	1					
ANR	8627147	PrimaryExpression	7		8627068	1					
ANR	8627148	PrimaryExpression	4		8627068	2					
ANR	8627149	ExpressionStatement	sign = val & 1	31:16:474:488	8627068	2	True				
ANR	8627150	AssignmentExpression	sign = val & 1		8627068	0		=			
ANR	8627151	Identifier	sign		8627068	0					
ANR	8627152	BitAndExpression	val & 1		8627068	1		&			
ANR	8627153	Identifier	val		8627068	0					
ANR	8627154	PrimaryExpression	1		8627068	1					
ANR	8627155	ExpressionStatement	val = ( val + 2 ) >> 1	33:16:507:528	8627068	3	True				
ANR	8627156	AssignmentExpression	val = ( val + 2 ) >> 1		8627068	0		=			
ANR	8627157	Identifier	val		8627068	0					
ANR	8627158	ShiftExpression	( val + 2 ) >> 1		8627068	1		>>			
ANR	8627159	AdditiveExpression	val + 2		8627068	0		+			
ANR	8627160	Identifier	val		8627068	0					
ANR	8627161	PrimaryExpression	2		8627068	1					
ANR	8627162	PrimaryExpression	1		8627068	1					
ANR	8627163	IfStatement	if ( sign )		8627068	4					
ANR	8627164	Condition	sign	35:20:551:554	8627068	0	True				
ANR	8627165	Identifier	sign		8627068	0					
ANR	8627166	ExpressionStatement	val = - val	37:20:578:588	8627068	1	True				
ANR	8627167	AssignmentExpression	val = - val		8627068	0		=			
ANR	8627168	Identifier	val		8627068	0					
ANR	8627169	UnaryOperationExpression	- val		8627068	1					
ANR	8627170	UnaryOperator	-		8627068	0					
ANR	8627171	Identifier	val		8627068	1					
ANR	8627172	ExpressionStatement	alpha_val = ( alpha_val + val ) & mask	41:12:618:654	8627068	1	True				
ANR	8627173	AssignmentExpression	alpha_val = ( alpha_val + val ) & mask		8627068	0		=			
ANR	8627174	Identifier	alpha_val		8627068	0					
ANR	8627175	BitAndExpression	( alpha_val + val ) & mask		8627068	1		&			
ANR	8627176	AdditiveExpression	alpha_val + val		8627068	0		+			
ANR	8627177	Identifier	alpha_val		8627068	0					
ANR	8627178	Identifier	val		8627068	1					
ANR	8627179	Identifier	mask		8627068	1					
ANR	8627180	IfStatement	if ( num_bits == 16 )		8627068	2					
ANR	8627181	Condition	num_bits == 16	43:16:673:686	8627068	0	True				
ANR	8627182	EqualityExpression	num_bits == 16		8627068	0		==			
ANR	8627183	Identifier	num_bits		8627068	0					
ANR	8627184	PrimaryExpression	16		8627068	1					
ANR	8627185	ExpressionStatement	dst [ idx ++ ] = alpha_val >> 6	45:16:706:733	8627068	1	True				
ANR	8627186	AssignmentExpression	dst [ idx ++ ] = alpha_val >> 6		8627068	0		=			
ANR	8627187	ArrayIndexing	dst [ idx ++ ]		8627068	0					
ANR	8627188	Identifier	dst		8627068	0					
ANR	8627189	PostIncDecOperationExpression	idx ++		8627068	1					
ANR	8627190	Identifier	idx		8627068	0					
ANR	8627191	IncDec	++		8627068	1					
ANR	8627192	ShiftExpression	alpha_val >> 6		8627068	1		>>			
ANR	8627193	Identifier	alpha_val		8627068	0					
ANR	8627194	PrimaryExpression	6		8627068	1					
ANR	8627195	ElseStatement	else		8627068	0					
ANR	8627196	ExpressionStatement	dst [ idx ++ ] = ( alpha_val << 2 ) | ( alpha_val >> 6 )	49:16:770:818	8627068	0	True				
ANR	8627197	AssignmentExpression	dst [ idx ++ ] = ( alpha_val << 2 ) | ( alpha_val >> 6 )		8627068	0		=			
ANR	8627198	ArrayIndexing	dst [ idx ++ ]		8627068	0					
ANR	8627199	Identifier	dst		8627068	0					
ANR	8627200	PostIncDecOperationExpression	idx ++		8627068	1					
ANR	8627201	Identifier	idx		8627068	0					
ANR	8627202	IncDec	++		8627068	1					
ANR	8627203	InclusiveOrExpression	( alpha_val << 2 ) | ( alpha_val >> 6 )		8627068	1		|			
ANR	8627204	ShiftExpression	alpha_val << 2		8627068	0		<<			
ANR	8627205	Identifier	alpha_val		8627068	0					
ANR	8627206	PrimaryExpression	2		8627068	1					
ANR	8627207	ShiftExpression	alpha_val >> 6		8627068	1		>>			
ANR	8627208	Identifier	alpha_val		8627068	0					
ANR	8627209	PrimaryExpression	6		8627068	1					
ANR	8627210	IfStatement	if ( idx == num_coeffs - 1 )		8627068	3					
ANR	8627211	Condition	idx == num_coeffs - 1	51:16:837:857	8627068	0	True				
ANR	8627212	EqualityExpression	idx == num_coeffs - 1		8627068	0		==			
ANR	8627213	Identifier	idx		8627068	0					
ANR	8627214	AdditiveExpression	num_coeffs - 1		8627068	1		-			
ANR	8627215	Identifier	num_coeffs		8627068	0					
ANR	8627216	PrimaryExpression	1		8627068	1					
ANR	8627217	BreakStatement	break ;	53:16:877:882	8627068	1	True				
ANR	8627218	Condition	get_bits1 ( gb )	55:17:902:914	8627068	1	True				
ANR	8627219	CallExpression	get_bits1 ( gb )		8627068	0					
ANR	8627220	Callee	get_bits1		8627068	0					
ANR	8627221	Identifier	get_bits1		8627068	0					
ANR	8627222	ArgumentList	gb		8627068	1					
ANR	8627223	Argument	gb		8627068	0					
ANR	8627224	Identifier	gb		8627068	0					
ANR	8627225	ExpressionStatement	"val = get_bits ( gb , 4 )"	57:8:927:948	8627068	1	True				
ANR	8627226	AssignmentExpression	"val = get_bits ( gb , 4 )"		8627068	0		=			
ANR	8627227	Identifier	val		8627068	0					
ANR	8627228	CallExpression	"get_bits ( gb , 4 )"		8627068	1					
ANR	8627229	Callee	get_bits		8627068	0					
ANR	8627230	Identifier	get_bits		8627068	0					
ANR	8627231	ArgumentList	gb		8627068	1					
ANR	8627232	Argument	gb		8627068	0					
ANR	8627233	Identifier	gb		8627068	0					
ANR	8627234	Argument	4		8627068	1					
ANR	8627235	PrimaryExpression	4		8627068	0					
ANR	8627236	IfStatement	if ( ! val )		8627068	2					
ANR	8627237	Condition	! val	59:12:963:966	8627068	0	True				
ANR	8627238	UnaryOperationExpression	! val		8627068	0					
ANR	8627239	UnaryOperator	!		8627068	0					
ANR	8627240	Identifier	val		8627068	1					
ANR	8627241	ExpressionStatement	"val = get_bits ( gb , 11 )"	61:12:982:1004	8627068	1	True				
ANR	8627242	AssignmentExpression	"val = get_bits ( gb , 11 )"		8627068	0		=			
ANR	8627243	Identifier	val		8627068	0					
ANR	8627244	CallExpression	"get_bits ( gb , 11 )"		8627068	1					
ANR	8627245	Callee	get_bits		8627068	0					
ANR	8627246	Identifier	get_bits		8627068	0					
ANR	8627247	ArgumentList	gb		8627068	1					
ANR	8627248	Argument	gb		8627068	0					
ANR	8627249	Identifier	gb		8627068	0					
ANR	8627250	Argument	11		8627068	1					
ANR	8627251	PrimaryExpression	11		8627068	0					
ANR	8627252	IfStatement	if ( idx + val > num_coeffs )		8627068	3					
ANR	8627253	Condition	idx + val > num_coeffs	63:12:1019:1040	8627068	0	True				
ANR	8627254	RelationalExpression	idx + val > num_coeffs		8627068	0		>			
ANR	8627255	AdditiveExpression	idx + val		8627068	0		+			
ANR	8627256	Identifier	idx		8627068	0					
ANR	8627257	Identifier	val		8627068	1					
ANR	8627258	Identifier	num_coeffs		8627068	1					
ANR	8627259	ExpressionStatement	val = num_coeffs - idx	65:12:1056:1078	8627068	1	True				
ANR	8627260	AssignmentExpression	val = num_coeffs - idx		8627068	0		=			
ANR	8627261	Identifier	val		8627068	0					
ANR	8627262	AdditiveExpression	num_coeffs - idx		8627068	1		-			
ANR	8627263	Identifier	num_coeffs		8627068	0					
ANR	8627264	Identifier	idx		8627068	1					
ANR	8627265	IfStatement	if ( num_bits == 16 )		8627068	4					
ANR	8627266	Condition	num_bits == 16	67:12:1093:1106	8627068	0	True				
ANR	8627267	EqualityExpression	num_bits == 16		8627068	0		==			
ANR	8627268	Identifier	num_bits		8627068	0					
ANR	8627269	PrimaryExpression	16		8627068	1					
ANR	8627270	ForStatement	for ( i = 0 ; i < val ; i ++ )		8627068	1					
ANR	8627271	ForInit	i = 0 ;	69:17:1127:1132	8627068	0	True				
ANR	8627272	AssignmentExpression	i = 0		8627068	0		=			
ANR	8627273	Identifier	i		8627068	0					
ANR	8627274	PrimaryExpression	0		8627068	1					
ANR	8627275	Condition	i < val	69:24:1134:1140	8627068	1	True				
ANR	8627276	RelationalExpression	i < val		8627068	0		<			
ANR	8627277	Identifier	i		8627068	0					
ANR	8627278	Identifier	val		8627068	1					
ANR	8627279	PostIncDecOperationExpression	i ++	69:33:1143:1145	8627068	2	True				
ANR	8627280	Identifier	i		8627068	0					
ANR	8627281	IncDec	++		8627068	1					
ANR	8627282	ExpressionStatement	dst [ idx ++ ] = alpha_val >> 6	71:16:1165:1192	8627068	3	True				
ANR	8627283	AssignmentExpression	dst [ idx ++ ] = alpha_val >> 6		8627068	0		=			
ANR	8627284	ArrayIndexing	dst [ idx ++ ]		8627068	0					
ANR	8627285	Identifier	dst		8627068	0					
ANR	8627286	PostIncDecOperationExpression	idx ++		8627068	1					
ANR	8627287	Identifier	idx		8627068	0					
ANR	8627288	IncDec	++		8627068	1					
ANR	8627289	ShiftExpression	alpha_val >> 6		8627068	1		>>			
ANR	8627290	Identifier	alpha_val		8627068	0					
ANR	8627291	PrimaryExpression	6		8627068	1					
ANR	8627292	ElseStatement	else		8627068	0					
ANR	8627293	ForStatement	for ( i = 0 ; i < val ; i ++ )		8627068	0					
ANR	8627294	ForInit	i = 0 ;	75:17:1226:1231	8627068	0	True				
ANR	8627295	AssignmentExpression	i = 0		8627068	0		=			
ANR	8627296	Identifier	i		8627068	0					
ANR	8627297	PrimaryExpression	0		8627068	1					
ANR	8627298	Condition	i < val	75:24:1233:1239	8627068	1	True				
ANR	8627299	RelationalExpression	i < val		8627068	0		<			
ANR	8627300	Identifier	i		8627068	0					
ANR	8627301	Identifier	val		8627068	1					
ANR	8627302	PostIncDecOperationExpression	i ++	75:33:1242:1244	8627068	2	True				
ANR	8627303	Identifier	i		8627068	0					
ANR	8627304	IncDec	++		8627068	1					
ANR	8627305	ExpressionStatement	dst [ idx ++ ] = ( alpha_val << 2 ) | ( alpha_val >> 6 )	77:16:1264:1312	8627068	3	True				
ANR	8627306	AssignmentExpression	dst [ idx ++ ] = ( alpha_val << 2 ) | ( alpha_val >> 6 )		8627068	0		=			
ANR	8627307	ArrayIndexing	dst [ idx ++ ]		8627068	0					
ANR	8627308	Identifier	dst		8627068	0					
ANR	8627309	PostIncDecOperationExpression	idx ++		8627068	1					
ANR	8627310	Identifier	idx		8627068	0					
ANR	8627311	IncDec	++		8627068	1					
ANR	8627312	InclusiveOrExpression	( alpha_val << 2 ) | ( alpha_val >> 6 )		8627068	1		|			
ANR	8627313	ShiftExpression	alpha_val << 2		8627068	0		<<			
ANR	8627314	Identifier	alpha_val		8627068	0					
ANR	8627315	PrimaryExpression	2		8627068	1					
ANR	8627316	ShiftExpression	alpha_val >> 6		8627068	1		>>			
ANR	8627317	Identifier	alpha_val		8627068	0					
ANR	8627318	PrimaryExpression	6		8627068	1					
ANR	8627319	Condition	idx < num_coeffs	79:13:1328:1343	8627068	1	True				
ANR	8627320	RelationalExpression	idx < num_coeffs		8627068	0		<			
ANR	8627321	Identifier	idx		8627068	0					
ANR	8627322	Identifier	num_coeffs		8627068	1					
ANR	8627323	ReturnType	static void		8627068	1					
ANR	8627324	Identifier	unpack_alpha		8627068	2					
ANR	8627325	ParameterList	"GetBitContext * gb , uint16_t * dst , int num_coeffs , const int num_bits"		8627068	3					
ANR	8627326	Parameter	GetBitContext * gb	1:25:25:41	8627068	0	True				
ANR	8627327	ParameterType	GetBitContext *		8627068	0					
ANR	8627328	Identifier	gb		8627068	1					
ANR	8627329	Parameter	uint16_t * dst	1:44:44:56	8627068	1	True				
ANR	8627330	ParameterType	uint16_t *		8627068	0					
ANR	8627331	Identifier	dst		8627068	1					
ANR	8627332	Parameter	int num_coeffs	1:59:59:72	8627068	2	True				
ANR	8627333	ParameterType	int		8627068	0					
ANR	8627334	Identifier	num_coeffs		8627068	1					
ANR	8627335	Parameter	const int num_bits	3:25:101:118	8627068	3	True				
ANR	8627336	ParameterType	const int		8627068	0					
ANR	8627337	Identifier	num_bits		8627068	1					
ANR	8627338	CFGEntryNode	ENTRY		8627068		True				
ANR	8627339	CFGExitNode	EXIT		8627068		True				
ANR	8627340	Symbol	val		8627068						
ANR	8627341	Symbol	alpha_val		8627068						
ANR	8627342	Symbol	dst		8627068						
ANR	8627343	Symbol	get_bits		8627068						
ANR	8627344	Symbol	get_bits1		8627068						
ANR	8627345	Symbol	sign		8627068						
ANR	8627346	Symbol	i		8627068						
ANR	8627347	Symbol	* dst		8627068						
ANR	8627348	Symbol	num_coeffs		8627068						
ANR	8627349	Symbol	gb		8627068						
ANR	8627350	Symbol	num_bits		8627068						
ANR	8627351	Symbol	idx		8627068						
ANR	8627352	Symbol	mask		8627068						
