command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3212277	File	/home/p4ultr4n/workplace/ReVeal/raw_code/ff_cmap_read_palette_0.c								
ANR	3212278	Function	ff_cmap_read_palette	1:0:0:586							
ANR	3212279	FunctionDef	"ff_cmap_read_palette (AVCodecContext * avctx , uint32_t * pal)"		3212278	0					
ANR	3212280	CompoundStatement		3:0:64:586	3212278	0					
ANR	3212281	IdentifierDeclStatement	"int count , i ;"	5:4:71:83	3212278	0	True				
ANR	3212282	IdentifierDecl	count		3212278	0					
ANR	3212283	IdentifierDeclType	int		3212278	0					
ANR	3212284	Identifier	count		3212278	1					
ANR	3212285	IdentifierDecl	i		3212278	1					
ANR	3212286	IdentifierDeclType	int		3212278	0					
ANR	3212287	Identifier	i		3212278	1					
ANR	3212288	IfStatement	if ( avctx -> bits_per_coded_sample > 8 )		3212278	1					
ANR	3212289	Condition	avctx -> bits_per_coded_sample > 8	9:8:96:127	3212278	0	True				
ANR	3212290	RelationalExpression	avctx -> bits_per_coded_sample > 8		3212278	0		>			
ANR	3212291	PtrMemberAccess	avctx -> bits_per_coded_sample		3212278	0					
ANR	3212292	Identifier	avctx		3212278	0					
ANR	3212293	Identifier	bits_per_coded_sample		3212278	1					
ANR	3212294	PrimaryExpression	8		3212278	1					
ANR	3212295	CompoundStatement		7:42:65:65	3212278	1					
ANR	3212296	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""bit_per_coded_sample > 8 not supported\\n"" )"	11:8:141:212	3212278	0	True				
ANR	3212297	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""bit_per_coded_sample > 8 not supported\\n"" )"		3212278	0					
ANR	3212298	Callee	av_log		3212278	0					
ANR	3212299	Identifier	av_log		3212278	0					
ANR	3212300	ArgumentList	avctx		3212278	1					
ANR	3212301	Argument	avctx		3212278	0					
ANR	3212302	Identifier	avctx		3212278	0					
ANR	3212303	Argument	AV_LOG_ERROR		3212278	1					
ANR	3212304	Identifier	AV_LOG_ERROR		3212278	0					
ANR	3212305	Argument	"""bit_per_coded_sample > 8 not supported\\n"""		3212278	2					
ANR	3212306	PrimaryExpression	"""bit_per_coded_sample > 8 not supported\\n"""		3212278	0					
ANR	3212307	ReturnStatement	return AVERROR_INVALIDDATA ;	13:8:223:249	3212278	1	True				
ANR	3212308	Identifier	AVERROR_INVALIDDATA		3212278	0					
ANR	3212309	ExpressionStatement	count = 1 << avctx -> bits_per_coded_sample	19:4:265:306	3212278	2	True				
ANR	3212310	AssignmentExpression	count = 1 << avctx -> bits_per_coded_sample		3212278	0		=			
ANR	3212311	Identifier	count		3212278	0					
ANR	3212312	ShiftExpression	1 << avctx -> bits_per_coded_sample		3212278	1		<<			
ANR	3212313	PrimaryExpression	1		3212278	0					
ANR	3212314	PtrMemberAccess	avctx -> bits_per_coded_sample		3212278	1					
ANR	3212315	Identifier	avctx		3212278	0					
ANR	3212316	Identifier	bits_per_coded_sample		3212278	1					
ANR	3212317	IfStatement	if ( avctx -> extradata_size < count * 3 )		3212278	3					
ANR	3212318	Condition	avctx -> extradata_size < count * 3	21:8:317:349	3212278	0	True				
ANR	3212319	RelationalExpression	avctx -> extradata_size < count * 3		3212278	0		<			
ANR	3212320	PtrMemberAccess	avctx -> extradata_size		3212278	0					
ANR	3212321	Identifier	avctx		3212278	0					
ANR	3212322	Identifier	extradata_size		3212278	1					
ANR	3212323	MultiplicativeExpression	count * 3		3212278	1		*			
ANR	3212324	Identifier	count		3212278	0					
ANR	3212325	PrimaryExpression	3		3212278	1					
ANR	3212326	CompoundStatement		19:43:287:287	3212278	1					
ANR	3212327	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""palette data underflow\\n"" )"	23:8:363:418	3212278	0	True				
ANR	3212328	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""palette data underflow\\n"" )"		3212278	0					
ANR	3212329	Callee	av_log		3212278	0					
ANR	3212330	Identifier	av_log		3212278	0					
ANR	3212331	ArgumentList	avctx		3212278	1					
ANR	3212332	Argument	avctx		3212278	0					
ANR	3212333	Identifier	avctx		3212278	0					
ANR	3212334	Argument	AV_LOG_ERROR		3212278	1					
ANR	3212335	Identifier	AV_LOG_ERROR		3212278	0					
ANR	3212336	Argument	"""palette data underflow\\n"""		3212278	2					
ANR	3212337	PrimaryExpression	"""palette data underflow\\n"""		3212278	0					
ANR	3212338	ReturnStatement	return AVERROR_INVALIDDATA ;	25:8:429:455	3212278	1	True				
ANR	3212339	Identifier	AVERROR_INVALIDDATA		3212278	0					
ANR	3212340	ForStatement	for ( i = 0 ; i < count ; i ++ )		3212278	4					
ANR	3212341	ForInit	i = 0 ;	29:9:474:477	3212278	0	True				
ANR	3212342	AssignmentExpression	i = 0		3212278	0		=			
ANR	3212343	Identifier	i		3212278	0					
ANR	3212344	PrimaryExpression	0		3212278	1					
ANR	3212345	Condition	i < count	29:14:479:487	3212278	1	True				
ANR	3212346	RelationalExpression	i < count		3212278	0		<			
ANR	3212347	Identifier	i		3212278	0					
ANR	3212348	Identifier	count		3212278	1					
ANR	3212349	PostIncDecOperationExpression	i ++	29:25:490:492	3212278	2	True				
ANR	3212350	Identifier	i		3212278	0					
ANR	3212351	IncDec	++		3212278	1					
ANR	3212352	CompoundStatement		27:30:430:430	3212278	3					
ANR	3212353	ExpressionStatement	pal [ i ] = 0xFF000000 | AV_RB24 ( avctx -> extradata + i * 3 )	31:8:506:561	3212278	0	True				
ANR	3212354	AssignmentExpression	pal [ i ] = 0xFF000000 | AV_RB24 ( avctx -> extradata + i * 3 )		3212278	0		=			
ANR	3212355	ArrayIndexing	pal [ i ]		3212278	0					
ANR	3212356	Identifier	pal		3212278	0					
ANR	3212357	Identifier	i		3212278	1					
ANR	3212358	InclusiveOrExpression	0xFF000000 | AV_RB24 ( avctx -> extradata + i * 3 )		3212278	1		|			
ANR	3212359	PrimaryExpression	0xFF000000		3212278	0					
ANR	3212360	CallExpression	AV_RB24 ( avctx -> extradata + i * 3 )		3212278	1					
ANR	3212361	Callee	AV_RB24		3212278	0					
ANR	3212362	Identifier	AV_RB24		3212278	0					
ANR	3212363	ArgumentList	avctx -> extradata + i * 3		3212278	1					
ANR	3212364	Argument	avctx -> extradata + i * 3		3212278	0					
ANR	3212365	AdditiveExpression	avctx -> extradata + i * 3		3212278	0		+			
ANR	3212366	PtrMemberAccess	avctx -> extradata		3212278	0					
ANR	3212367	Identifier	avctx		3212278	0					
ANR	3212368	Identifier	extradata		3212278	1					
ANR	3212369	MultiplicativeExpression	i * 3		3212278	1		*			
ANR	3212370	Identifier	i		3212278	0					
ANR	3212371	PrimaryExpression	3		3212278	1					
ANR	3212372	ReturnStatement	return 0 ;	35:4:575:583	3212278	5	True				
ANR	3212373	PrimaryExpression	0		3212278	0					
ANR	3212374	ReturnType	int		3212278	1					
ANR	3212375	Identifier	ff_cmap_read_palette		3212278	2					
ANR	3212376	ParameterList	"AVCodecContext * avctx , uint32_t * pal"		3212278	3					
ANR	3212377	Parameter	AVCodecContext * avctx	1:25:25:45	3212278	0	True				
ANR	3212378	ParameterType	AVCodecContext *		3212278	0					
ANR	3212379	Identifier	avctx		3212278	1					
ANR	3212380	Parameter	uint32_t * pal	1:48:48:60	3212278	1	True				
ANR	3212381	ParameterType	uint32_t *		3212278	0					
ANR	3212382	Identifier	pal		3212278	1					
ANR	3212383	CFGEntryNode	ENTRY		3212278		True				
ANR	3212384	CFGExitNode	EXIT		3212278		True				
ANR	3212385	Symbol	avctx -> extradata		3212278						
ANR	3212386	Symbol	avctx -> bits_per_coded_sample		3212278						
ANR	3212387	Symbol	AV_LOG_ERROR		3212278						
ANR	3212388	Symbol	* pal		3212278						
ANR	3212389	Symbol	count		3212278						
ANR	3212390	Symbol	avctx -> extradata_size		3212278						
ANR	3212391	Symbol	i		3212278						
ANR	3212392	Symbol	AV_RB24		3212278						
ANR	3212393	Symbol	* avctx		3212278						
ANR	3212394	Symbol	* i		3212278						
ANR	3212395	Symbol	pal		3212278						
ANR	3212396	Symbol	AVERROR_INVALIDDATA		3212278						
ANR	3212397	Symbol	avctx		3212278						
