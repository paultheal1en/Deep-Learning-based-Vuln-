command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	610309	File	/home/p4ultr4n/workplace/ReVeal/raw_code/armv7m_nvic_acknowledge_irq_0.c								
ANR	610310	Function	armv7m_nvic_acknowledge_irq	1:0:0:285							
ANR	610311	FunctionDef	armv7m_nvic_acknowledge_irq (void * opaque)		610310	0					
ANR	610312	CompoundStatement		3:0:47:285	610310	0					
ANR	610313	IdentifierDeclStatement	nvic_state * s = ( nvic_state * ) opaque ;	5:4:54:90	610310	0	True				
ANR	610314	IdentifierDecl	* s = ( nvic_state * ) opaque		610310	0					
ANR	610315	IdentifierDeclType	nvic_state *		610310	0					
ANR	610316	Identifier	s		610310	1					
ANR	610317	AssignmentExpression	* s = ( nvic_state * ) opaque		610310	2		=			
ANR	610318	Identifier	s		610310	0					
ANR	610319	CastExpression	( nvic_state * ) opaque		610310	1					
ANR	610320	CastTarget	nvic_state *		610310	0					
ANR	610321	Identifier	opaque		610310	1					
ANR	610322	IdentifierDeclStatement	uint32_t irq ;	7:4:97:109	610310	1	True				
ANR	610323	IdentifierDecl	irq		610310	0					
ANR	610324	IdentifierDeclType	uint32_t		610310	0					
ANR	610325	Identifier	irq		610310	1					
ANR	610326	ExpressionStatement	"irq = gic_acknowledge_irq ( & s -> gic , 0 )"	11:4:118:155	610310	2	True				
ANR	610327	AssignmentExpression	"irq = gic_acknowledge_irq ( & s -> gic , 0 )"		610310	0		=			
ANR	610328	Identifier	irq		610310	0					
ANR	610329	CallExpression	"gic_acknowledge_irq ( & s -> gic , 0 )"		610310	1					
ANR	610330	Callee	gic_acknowledge_irq		610310	0					
ANR	610331	Identifier	gic_acknowledge_irq		610310	0					
ANR	610332	ArgumentList	& s -> gic		610310	1					
ANR	610333	Argument	& s -> gic		610310	0					
ANR	610334	UnaryOperationExpression	& s -> gic		610310	0					
ANR	610335	UnaryOperator	&		610310	0					
ANR	610336	PtrMemberAccess	s -> gic		610310	1					
ANR	610337	Identifier	s		610310	0					
ANR	610338	Identifier	gic		610310	1					
ANR	610339	Argument	0		610310	1					
ANR	610340	PrimaryExpression	0		610310	0					
ANR	610341	IfStatement	if ( irq == 1023 )		610310	3					
ANR	610342	Condition	irq == 1023	13:8:166:176	610310	0	True				
ANR	610343	EqualityExpression	irq == 1023		610310	0		==			
ANR	610344	Identifier	irq		610310	0					
ANR	610345	PrimaryExpression	1023		610310	1					
ANR	610346	ExpressionStatement	"hw_error ( ""Interrupt but no vector\\n"" )"	15:8:188:225	610310	1	True				
ANR	610347	CallExpression	"hw_error ( ""Interrupt but no vector\\n"" )"		610310	0					
ANR	610348	Callee	hw_error		610310	0					
ANR	610349	Identifier	hw_error		610310	0					
ANR	610350	ArgumentList	"""Interrupt but no vector\\n"""		610310	1					
ANR	610351	Argument	"""Interrupt but no vector\\n"""		610310	0					
ANR	610352	PrimaryExpression	"""Interrupt but no vector\\n"""		610310	0					
ANR	610353	IfStatement	if ( irq >= 32 )		610310	4					
ANR	610354	Condition	irq >= 32	17:8:236:244	610310	0	True				
ANR	610355	RelationalExpression	irq >= 32		610310	0		>=			
ANR	610356	Identifier	irq		610310	0					
ANR	610357	PrimaryExpression	32		610310	1					
ANR	610358	ExpressionStatement	irq -= 16	19:8:256:265	610310	1	True				
ANR	610359	AssignmentExpression	irq -= 16		610310	0		-=			
ANR	610360	Identifier	irq		610310	0					
ANR	610361	PrimaryExpression	16		610310	1					
ANR	610362	ReturnStatement	return irq ;	21:4:272:282	610310	5	True				
ANR	610363	Identifier	irq		610310	0					
ANR	610364	ReturnType	int		610310	1					
ANR	610365	Identifier	armv7m_nvic_acknowledge_irq		610310	2					
ANR	610366	ParameterList	void * opaque		610310	3					
ANR	610367	Parameter	void * opaque	1:32:32:43	610310	0	True				
ANR	610368	ParameterType	void *		610310	0					
ANR	610369	Identifier	opaque		610310	1					
ANR	610370	CFGEntryNode	ENTRY		610310		True				
ANR	610371	CFGExitNode	EXIT		610310		True				
ANR	610372	Symbol	gic_acknowledge_irq		610310						
ANR	610373	Symbol	opaque		610310						
ANR	610374	Symbol	s		610310						
ANR	610375	Symbol	irq		610310						
ANR	610376	Symbol	& s -> gic		610310						
