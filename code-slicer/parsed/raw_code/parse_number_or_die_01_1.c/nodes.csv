command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6346711	File	/home/p4ultr4n/workplace/ReVeal/raw_code/parse_number_or_die_01_1.c								
ANR	6346712	Function	parse_number_or_die	1:0:0:578							
ANR	6346713	FunctionDef	"parse_number_or_die (const char * context , const char * numstr , int type , double min , double max)"		6346712	0					
ANR	6346714	CompoundStatement		3:0:103:578	6346712	0					
ANR	6346715	IdentifierDeclStatement	char * tail ;	5:4:110:120	6346712	0	True				
ANR	6346716	IdentifierDecl	* tail		6346712	0					
ANR	6346717	IdentifierDeclType	char *		6346712	0					
ANR	6346718	Identifier	tail		6346712	1					
ANR	6346719	IdentifierDeclStatement	const char * error ;	7:4:127:144	6346712	1	True				
ANR	6346720	IdentifierDecl	* error		6346712	0					
ANR	6346721	IdentifierDeclType	const char *		6346712	0					
ANR	6346722	Identifier	error		6346712	1					
ANR	6346723	IdentifierDeclStatement	"double d = av_strtod ( numstr , & tail ) ;"	9:4:151:186	6346712	2	True				
ANR	6346724	IdentifierDecl	"d = av_strtod ( numstr , & tail )"		6346712	0					
ANR	6346725	IdentifierDeclType	double		6346712	0					
ANR	6346726	Identifier	d		6346712	1					
ANR	6346727	AssignmentExpression	"d = av_strtod ( numstr , & tail )"		6346712	2		=			
ANR	6346728	Identifier	d		6346712	0					
ANR	6346729	CallExpression	"av_strtod ( numstr , & tail )"		6346712	1					
ANR	6346730	Callee	av_strtod		6346712	0					
ANR	6346731	Identifier	av_strtod		6346712	0					
ANR	6346732	ArgumentList	numstr		6346712	1					
ANR	6346733	Argument	numstr		6346712	0					
ANR	6346734	Identifier	numstr		6346712	0					
ANR	6346735	Argument	& tail		6346712	1					
ANR	6346736	UnaryOperationExpression	& tail		6346712	0					
ANR	6346737	UnaryOperator	&		6346712	0					
ANR	6346738	Identifier	tail		6346712	1					
ANR	6346739	IfStatement	if ( * tail )		6346712	3					
ANR	6346740	Condition	* tail	11:8:197:201	6346712	0	True				
ANR	6346741	UnaryOperationExpression	* tail		6346712	0					
ANR	6346742	UnaryOperator	*		6346712	0					
ANR	6346743	Identifier	tail		6346712	1					
ANR	6346744	ExpressionStatement	"error = ""Expected number for %s but found: %s\\n"""	13:8:213:260	6346712	1	True				
ANR	6346745	AssignmentExpression	"error = ""Expected number for %s but found: %s\\n"""		6346712	0		=			
ANR	6346746	Identifier	error		6346712	0					
ANR	6346747	PrimaryExpression	"""Expected number for %s but found: %s\\n"""		6346712	1					
ANR	6346748	ElseStatement	else		6346712	0					
ANR	6346749	IfStatement	if ( d < min || d > max )		6346712	0					
ANR	6346750	Condition	d < min || d > max	15:13:276:293	6346712	0	True				
ANR	6346751	OrExpression	d < min || d > max		6346712	0		||			
ANR	6346752	RelationalExpression	d < min		6346712	0		<			
ANR	6346753	Identifier	d		6346712	0					
ANR	6346754	Identifier	min		6346712	1					
ANR	6346755	RelationalExpression	d > max		6346712	1		>			
ANR	6346756	Identifier	d		6346712	0					
ANR	6346757	Identifier	max		6346712	1					
ANR	6346758	ExpressionStatement	"error = ""The value for %s was %s which is not within %f - %f\\n"""	17:8:305:367	6346712	1	True				
ANR	6346759	AssignmentExpression	"error = ""The value for %s was %s which is not within %f - %f\\n"""		6346712	0		=			
ANR	6346760	Identifier	error		6346712	0					
ANR	6346761	PrimaryExpression	"""The value for %s was %s which is not within %f - %f\\n"""		6346712	1					
ANR	6346762	ElseStatement	else		6346712	0					
ANR	6346763	IfStatement	if ( type == OPT_INT64 && ( int64_t ) d != d )		6346712	0					
ANR	6346764	Condition	type == OPT_INT64 && ( int64_t ) d != d	19:12:382:417	6346712	0	True				
ANR	6346765	AndExpression	type == OPT_INT64 && ( int64_t ) d != d		6346712	0		&&			
ANR	6346766	EqualityExpression	type == OPT_INT64		6346712	0		==			
ANR	6346767	Identifier	type		6346712	0					
ANR	6346768	Identifier	OPT_INT64		6346712	1					
ANR	6346769	EqualityExpression	( int64_t ) d != d		6346712	1		!=			
ANR	6346770	CastExpression	( int64_t ) d		6346712	0					
ANR	6346771	CastTarget	int64_t		6346712	0					
ANR	6346772	Identifier	d		6346712	1					
ANR	6346773	Identifier	d		6346712	1					
ANR	6346774	ExpressionStatement	"error = ""Expected int64 for %s but found %s\\n"""	21:8:429:474	6346712	1	True				
ANR	6346775	AssignmentExpression	"error = ""Expected int64 for %s but found %s\\n"""		6346712	0		=			
ANR	6346776	Identifier	error		6346712	0					
ANR	6346777	PrimaryExpression	"""Expected int64 for %s but found %s\\n"""		6346712	1					
ANR	6346778	ElseStatement	else		6346712	0					
ANR	6346779	ReturnStatement	return d ;	27:8:497:505	6346712	0	True				
ANR	6346780	Identifier	d		6346712	0					
ANR	6346781	ExpressionStatement	"fprintf ( stderr , error , context , numstr , min , max )"	29:4:512:561	6346712	4	True				
ANR	6346782	CallExpression	"fprintf ( stderr , error , context , numstr , min , max )"		6346712	0					
ANR	6346783	Callee	fprintf		6346712	0					
ANR	6346784	Identifier	fprintf		6346712	0					
ANR	6346785	ArgumentList	stderr		6346712	1					
ANR	6346786	Argument	stderr		6346712	0					
ANR	6346787	Identifier	stderr		6346712	0					
ANR	6346788	Argument	error		6346712	1					
ANR	6346789	Identifier	error		6346712	0					
ANR	6346790	Argument	context		6346712	2					
ANR	6346791	Identifier	context		6346712	0					
ANR	6346792	Argument	numstr		6346712	3					
ANR	6346793	Identifier	numstr		6346712	0					
ANR	6346794	Argument	min		6346712	4					
ANR	6346795	Identifier	min		6346712	0					
ANR	6346796	Argument	max		6346712	5					
ANR	6346797	Identifier	max		6346712	0					
ANR	6346798	ExpressionStatement	exit ( 1 )	31:4:568:575	6346712	5	True				
ANR	6346799	CallExpression	exit ( 1 )		6346712	0					
ANR	6346800	Callee	exit		6346712	0					
ANR	6346801	Identifier	exit		6346712	0					
ANR	6346802	ArgumentList	1		6346712	1					
ANR	6346803	Argument	1		6346712	0					
ANR	6346804	PrimaryExpression	1		6346712	0					
ANR	6346805	ReturnType	double		6346712	1					
ANR	6346806	Identifier	parse_number_or_die		6346712	2					
ANR	6346807	ParameterList	"const char * context , const char * numstr , int type , double min , double max"		6346712	3					
ANR	6346808	Parameter	const char * context	1:27:27:45	6346712	0	True				
ANR	6346809	ParameterType	const char *		6346712	0					
ANR	6346810	Identifier	context		6346712	1					
ANR	6346811	Parameter	const char * numstr	1:48:48:65	6346712	1	True				
ANR	6346812	ParameterType	const char *		6346712	0					
ANR	6346813	Identifier	numstr		6346712	1					
ANR	6346814	Parameter	int type	1:68:68:75	6346712	2	True				
ANR	6346815	ParameterType	int		6346712	0					
ANR	6346816	Identifier	type		6346712	1					
ANR	6346817	Parameter	double min	1:78:78:87	6346712	3	True				
ANR	6346818	ParameterType	double		6346712	0					
ANR	6346819	Identifier	min		6346712	1					
ANR	6346820	Parameter	double max	1:90:90:99	6346712	4	True				
ANR	6346821	ParameterType	double		6346712	0					
ANR	6346822	Identifier	max		6346712	1					
ANR	6346823	CFGEntryNode	ENTRY		6346712		True				
ANR	6346824	CFGExitNode	EXIT		6346712		True				
ANR	6346825	Symbol	* tail		6346712						
ANR	6346826	Symbol	d		6346712						
ANR	6346827	Symbol	max		6346712						
ANR	6346828	Symbol	tail		6346712						
ANR	6346829	Symbol	type		6346712						
ANR	6346830	Symbol	error		6346712						
ANR	6346831	Symbol	OPT_INT64		6346712						
ANR	6346832	Symbol	stderr		6346712						
ANR	6346833	Symbol	numstr		6346712						
ANR	6346834	Symbol	min		6346712						
ANR	6346835	Symbol	context		6346712						
ANR	6346836	Symbol	& tail		6346712						
ANR	6346837	Symbol	av_strtod		6346712						
