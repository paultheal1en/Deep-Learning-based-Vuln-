command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1680222	File	/home/p4ultr4n/workplace/ReVeal/raw_code/decode_0_01_1.c								
ANR	1680223	Function	decode_0	1:0:0:3861							
ANR	1680224	FunctionDef	"decode_0 (AVCodecContext * avctx , uint8_t code , uint8_t * pkt)"		1680223	0					
ANR	1680225	CompoundStatement		3:0:72:3861	1680223	0					
ANR	1680226	IdentifierDeclStatement	PAFVideoDecContext * c = avctx -> priv_data ;	5:4:79:119	1680223	0	True				
ANR	1680227	IdentifierDecl	* c = avctx -> priv_data		1680223	0					
ANR	1680228	IdentifierDeclType	PAFVideoDecContext *		1680223	0					
ANR	1680229	Identifier	c		1680223	1					
ANR	1680230	AssignmentExpression	* c = avctx -> priv_data		1680223	2		=			
ANR	1680231	Identifier	c		1680223	0					
ANR	1680232	PtrMemberAccess	avctx -> priv_data		1680223	1					
ANR	1680233	Identifier	avctx		1680223	0					
ANR	1680234	Identifier	priv_data		1680223	1					
ANR	1680235	IdentifierDeclStatement	"uint32_t opcode_size , offset ;"	7:4:126:154	1680223	1	True				
ANR	1680236	IdentifierDecl	opcode_size		1680223	0					
ANR	1680237	IdentifierDeclType	uint32_t		1680223	0					
ANR	1680238	Identifier	opcode_size		1680223	1					
ANR	1680239	IdentifierDecl	offset		1680223	1					
ANR	1680240	IdentifierDeclType	uint32_t		1680223	0					
ANR	1680241	Identifier	offset		1680223	1					
ANR	1680242	IdentifierDeclStatement	"uint8_t * dst , * dend , mask = 0 , color = 0 , a , b , p ;"	9:4:161:210	1680223	2	True				
ANR	1680243	IdentifierDecl	* dst		1680223	0					
ANR	1680244	IdentifierDeclType	uint8_t *		1680223	0					
ANR	1680245	Identifier	dst		1680223	1					
ANR	1680246	IdentifierDecl	* dend		1680223	1					
ANR	1680247	IdentifierDeclType	uint8_t *		1680223	0					
ANR	1680248	Identifier	dend		1680223	1					
ANR	1680249	IdentifierDecl	mask = 0		1680223	2					
ANR	1680250	IdentifierDeclType	uint8_t		1680223	0					
ANR	1680251	Identifier	mask		1680223	1					
ANR	1680252	AssignmentExpression	mask = 0		1680223	2		=			
ANR	1680253	Identifier	mask		1680223	0					
ANR	1680254	PrimaryExpression	0		1680223	1					
ANR	1680255	IdentifierDecl	color = 0		1680223	3					
ANR	1680256	IdentifierDeclType	uint8_t		1680223	0					
ANR	1680257	Identifier	color		1680223	1					
ANR	1680258	AssignmentExpression	color = 0		1680223	2		=			
ANR	1680259	Identifier	color		1680223	0					
ANR	1680260	PrimaryExpression	0		1680223	1					
ANR	1680261	IdentifierDecl	a		1680223	4					
ANR	1680262	IdentifierDeclType	uint8_t		1680223	0					
ANR	1680263	Identifier	a		1680223	1					
ANR	1680264	IdentifierDecl	b		1680223	5					
ANR	1680265	IdentifierDeclType	uint8_t		1680223	0					
ANR	1680266	Identifier	b		1680223	1					
ANR	1680267	IdentifierDecl	p		1680223	6					
ANR	1680268	IdentifierDeclType	uint8_t		1680223	0					
ANR	1680269	Identifier	p		1680223	1					
ANR	1680270	IdentifierDeclStatement	"const uint8_t * src , * send , * opcodes ;"	11:4:217:252	1680223	3	True				
ANR	1680271	IdentifierDecl	* src		1680223	0					
ANR	1680272	IdentifierDeclType	const uint8_t *		1680223	0					
ANR	1680273	Identifier	src		1680223	1					
ANR	1680274	IdentifierDecl	* send		1680223	1					
ANR	1680275	IdentifierDeclType	const uint8_t *		1680223	0					
ANR	1680276	Identifier	send		1680223	1					
ANR	1680277	IdentifierDecl	* opcodes		1680223	2					
ANR	1680278	IdentifierDeclType	const uint8_t *		1680223	0					
ANR	1680279	Identifier	opcodes		1680223	1					
ANR	1680280	IdentifierDeclStatement	"int i , j , x = 0 ;"	13:4:259:275	1680223	4	True				
ANR	1680281	IdentifierDecl	i		1680223	0					
ANR	1680282	IdentifierDeclType	int		1680223	0					
ANR	1680283	Identifier	i		1680223	1					
ANR	1680284	IdentifierDecl	j		1680223	1					
ANR	1680285	IdentifierDeclType	int		1680223	0					
ANR	1680286	Identifier	j		1680223	1					
ANR	1680287	IdentifierDecl	x = 0		1680223	2					
ANR	1680288	IdentifierDeclType	int		1680223	0					
ANR	1680289	Identifier	x		1680223	1					
ANR	1680290	AssignmentExpression	x = 0		1680223	2		=			
ANR	1680291	Identifier	x		1680223	0					
ANR	1680292	PrimaryExpression	0		1680223	1					
ANR	1680293	ExpressionStatement	i = bytestream2_get_byte ( & c -> gb )	17:4:284:316	1680223	5	True				
ANR	1680294	AssignmentExpression	i = bytestream2_get_byte ( & c -> gb )		1680223	0		=			
ANR	1680295	Identifier	i		1680223	0					
ANR	1680296	CallExpression	bytestream2_get_byte ( & c -> gb )		1680223	1					
ANR	1680297	Callee	bytestream2_get_byte		1680223	0					
ANR	1680298	Identifier	bytestream2_get_byte		1680223	0					
ANR	1680299	ArgumentList	& c -> gb		1680223	1					
ANR	1680300	Argument	& c -> gb		1680223	0					
ANR	1680301	UnaryOperationExpression	& c -> gb		1680223	0					
ANR	1680302	UnaryOperator	&		1680223	0					
ANR	1680303	PtrMemberAccess	c -> gb		1680223	1					
ANR	1680304	Identifier	c		1680223	0					
ANR	1680305	Identifier	gb		1680223	1					
ANR	1680306	IfStatement	if ( i )		1680223	6					
ANR	1680307	Condition	i	19:8:327:327	1680223	0	True				
ANR	1680308	Identifier	i		1680223	0					
ANR	1680309	CompoundStatement		17:11:257:257	1680223	1					
ANR	1680310	IfStatement	if ( code & 0x10 )		1680223	0					
ANR	1680311	Condition	code & 0x10	21:12:345:355	1680223	0	True				
ANR	1680312	BitAndExpression	code & 0x10		1680223	0		&			
ANR	1680313	Identifier	code		1680223	0					
ANR	1680314	PrimaryExpression	0x10		1680223	1					
ANR	1680315	CompoundStatement		21:12:300:309	1680223	1					
ANR	1680316	IdentifierDeclStatement	int align ;	23:12:373:382	1680223	0	True				
ANR	1680317	IdentifierDecl	align		1680223	0					
ANR	1680318	IdentifierDeclType	int		1680223	0					
ANR	1680319	Identifier	align		1680223	1					
ANR	1680320	ExpressionStatement	align = bytestream2_tell ( & c -> gb ) & 3	27:12:399:435	1680223	1	True				
ANR	1680321	AssignmentExpression	align = bytestream2_tell ( & c -> gb ) & 3		1680223	0		=			
ANR	1680322	Identifier	align		1680223	0					
ANR	1680323	BitAndExpression	bytestream2_tell ( & c -> gb ) & 3		1680223	1		&			
ANR	1680324	CallExpression	bytestream2_tell ( & c -> gb )		1680223	0					
ANR	1680325	Callee	bytestream2_tell		1680223	0					
ANR	1680326	Identifier	bytestream2_tell		1680223	0					
ANR	1680327	ArgumentList	& c -> gb		1680223	1					
ANR	1680328	Argument	& c -> gb		1680223	0					
ANR	1680329	UnaryOperationExpression	& c -> gb		1680223	0					
ANR	1680330	UnaryOperator	&		1680223	0					
ANR	1680331	PtrMemberAccess	c -> gb		1680223	1					
ANR	1680332	Identifier	c		1680223	0					
ANR	1680333	Identifier	gb		1680223	1					
ANR	1680334	PrimaryExpression	3		1680223	1					
ANR	1680335	IfStatement	if ( align )		1680223	2					
ANR	1680336	Condition	align	29:16:454:458	1680223	0	True				
ANR	1680337	Identifier	align		1680223	0					
ANR	1680338	ExpressionStatement	"bytestream2_skip ( & c -> gb , 4 - align )"	31:16:478:513	1680223	1	True				
ANR	1680339	CallExpression	"bytestream2_skip ( & c -> gb , 4 - align )"		1680223	0					
ANR	1680340	Callee	bytestream2_skip		1680223	0					
ANR	1680341	Identifier	bytestream2_skip		1680223	0					
ANR	1680342	ArgumentList	& c -> gb		1680223	1					
ANR	1680343	Argument	& c -> gb		1680223	0					
ANR	1680344	UnaryOperationExpression	& c -> gb		1680223	0					
ANR	1680345	UnaryOperator	&		1680223	0					
ANR	1680346	PtrMemberAccess	c -> gb		1680223	1					
ANR	1680347	Identifier	c		1680223	0					
ANR	1680348	Identifier	gb		1680223	1					
ANR	1680349	Argument	4 - align		1680223	1					
ANR	1680350	AdditiveExpression	4 - align		1680223	0		-			
ANR	1680351	PrimaryExpression	4		1680223	0					
ANR	1680352	Identifier	align		1680223	1					
ANR	1680353	DoStatement	do		1680223	1					
ANR	1680354	CompoundStatement		33:11:465:465	1680223	0					
ANR	1680355	ExpressionStatement	a = bytestream2_get_byte ( & c -> gb )	37:12:553:590	1680223	0	True				
ANR	1680356	AssignmentExpression	a = bytestream2_get_byte ( & c -> gb )		1680223	0		=			
ANR	1680357	Identifier	a		1680223	0					
ANR	1680358	CallExpression	bytestream2_get_byte ( & c -> gb )		1680223	1					
ANR	1680359	Callee	bytestream2_get_byte		1680223	0					
ANR	1680360	Identifier	bytestream2_get_byte		1680223	0					
ANR	1680361	ArgumentList	& c -> gb		1680223	1					
ANR	1680362	Argument	& c -> gb		1680223	0					
ANR	1680363	UnaryOperationExpression	& c -> gb		1680223	0					
ANR	1680364	UnaryOperator	&		1680223	0					
ANR	1680365	PtrMemberAccess	c -> gb		1680223	1					
ANR	1680366	Identifier	c		1680223	0					
ANR	1680367	Identifier	gb		1680223	1					
ANR	1680368	ExpressionStatement	b = bytestream2_get_byte ( & c -> gb )	39:12:605:642	1680223	1	True				
ANR	1680369	AssignmentExpression	b = bytestream2_get_byte ( & c -> gb )		1680223	0		=			
ANR	1680370	Identifier	b		1680223	0					
ANR	1680371	CallExpression	bytestream2_get_byte ( & c -> gb )		1680223	1					
ANR	1680372	Callee	bytestream2_get_byte		1680223	0					
ANR	1680373	Identifier	bytestream2_get_byte		1680223	0					
ANR	1680374	ArgumentList	& c -> gb		1680223	1					
ANR	1680375	Argument	& c -> gb		1680223	0					
ANR	1680376	UnaryOperationExpression	& c -> gb		1680223	0					
ANR	1680377	UnaryOperator	&		1680223	0					
ANR	1680378	PtrMemberAccess	c -> gb		1680223	1					
ANR	1680379	Identifier	c		1680223	0					
ANR	1680380	Identifier	gb		1680223	1					
ANR	1680381	ExpressionStatement	p = ( a & 0xC0 ) >> 6	41:12:657:681	1680223	2	True				
ANR	1680382	AssignmentExpression	p = ( a & 0xC0 ) >> 6		1680223	0		=			
ANR	1680383	Identifier	p		1680223	0					
ANR	1680384	ShiftExpression	( a & 0xC0 ) >> 6		1680223	1		>>			
ANR	1680385	BitAndExpression	a & 0xC0		1680223	0		&			
ANR	1680386	Identifier	a		1680223	0					
ANR	1680387	PrimaryExpression	0xC0		1680223	1					
ANR	1680388	PrimaryExpression	6		1680223	1					
ANR	1680389	ExpressionStatement	"dst = c -> frame [ p ] + get_video_page_offset ( avctx , a , b )"	43:12:696:753	1680223	3	True				
ANR	1680390	AssignmentExpression	"dst = c -> frame [ p ] + get_video_page_offset ( avctx , a , b )"		1680223	0		=			
ANR	1680391	Identifier	dst		1680223	0					
ANR	1680392	AdditiveExpression	"c -> frame [ p ] + get_video_page_offset ( avctx , a , b )"		1680223	1		+			
ANR	1680393	ArrayIndexing	c -> frame [ p ]		1680223	0					
ANR	1680394	PtrMemberAccess	c -> frame		1680223	0					
ANR	1680395	Identifier	c		1680223	0					
ANR	1680396	Identifier	frame		1680223	1					
ANR	1680397	Identifier	p		1680223	1					
ANR	1680398	CallExpression	"get_video_page_offset ( avctx , a , b )"		1680223	1					
ANR	1680399	Callee	get_video_page_offset		1680223	0					
ANR	1680400	Identifier	get_video_page_offset		1680223	0					
ANR	1680401	ArgumentList	avctx		1680223	1					
ANR	1680402	Argument	avctx		1680223	0					
ANR	1680403	Identifier	avctx		1680223	0					
ANR	1680404	Argument	a		1680223	1					
ANR	1680405	Identifier	a		1680223	0					
ANR	1680406	Argument	b		1680223	2					
ANR	1680407	Identifier	b		1680223	0					
ANR	1680408	ExpressionStatement	dend = c -> frame [ p ] + c -> frame_size	45:12:768:804	1680223	4	True				
ANR	1680409	AssignmentExpression	dend = c -> frame [ p ] + c -> frame_size		1680223	0		=			
ANR	1680410	Identifier	dend		1680223	0					
ANR	1680411	AdditiveExpression	c -> frame [ p ] + c -> frame_size		1680223	1		+			
ANR	1680412	ArrayIndexing	c -> frame [ p ]		1680223	0					
ANR	1680413	PtrMemberAccess	c -> frame		1680223	0					
ANR	1680414	Identifier	c		1680223	0					
ANR	1680415	Identifier	frame		1680223	1					
ANR	1680416	Identifier	p		1680223	1					
ANR	1680417	PtrMemberAccess	c -> frame_size		1680223	1					
ANR	1680418	Identifier	c		1680223	0					
ANR	1680419	Identifier	frame_size		1680223	1					
ANR	1680420	ExpressionStatement	offset = ( b & 0x7F ) * 2	47:12:819:842	1680223	5	True				
ANR	1680421	AssignmentExpression	offset = ( b & 0x7F ) * 2		1680223	0		=			
ANR	1680422	Identifier	offset		1680223	0					
ANR	1680423	MultiplicativeExpression	( b & 0x7F ) * 2		1680223	1		*			
ANR	1680424	BitAndExpression	b & 0x7F		1680223	0		&			
ANR	1680425	Identifier	b		1680223	0					
ANR	1680426	PrimaryExpression	0x7F		1680223	1					
ANR	1680427	PrimaryExpression	2		1680223	1					
ANR	1680428	ExpressionStatement	j = bytestream2_get_le16 ( & c -> gb ) + offset	49:12:857:903	1680223	6	True				
ANR	1680429	AssignmentExpression	j = bytestream2_get_le16 ( & c -> gb ) + offset		1680223	0		=			
ANR	1680430	Identifier	j		1680223	0					
ANR	1680431	AdditiveExpression	bytestream2_get_le16 ( & c -> gb ) + offset		1680223	1		+			
ANR	1680432	CallExpression	bytestream2_get_le16 ( & c -> gb )		1680223	0					
ANR	1680433	Callee	bytestream2_get_le16		1680223	0					
ANR	1680434	Identifier	bytestream2_get_le16		1680223	0					
ANR	1680435	ArgumentList	& c -> gb		1680223	1					
ANR	1680436	Argument	& c -> gb		1680223	0					
ANR	1680437	UnaryOperationExpression	& c -> gb		1680223	0					
ANR	1680438	UnaryOperator	&		1680223	0					
ANR	1680439	PtrMemberAccess	c -> gb		1680223	1					
ANR	1680440	Identifier	c		1680223	0					
ANR	1680441	Identifier	gb		1680223	1					
ANR	1680442	Identifier	offset		1680223	1					
ANR	1680443	DoStatement	do		1680223	7					
ANR	1680444	CompoundStatement		51:15:850:850	1680223	0					
ANR	1680445	ExpressionStatement	offset ++	55:16:942:950	1680223	0	True				
ANR	1680446	PostIncDecOperationExpression	offset ++		1680223	0					
ANR	1680447	Identifier	offset		1680223	0					
ANR	1680448	IncDec	++		1680223	1					
ANR	1680449	IfStatement	if ( dst + 3 * avctx -> width + 4 > dend )		1680223	1					
ANR	1680450	Condition	dst + 3 * avctx -> width + 4 > dend	57:20:973:1005	1680223	0	True				
ANR	1680451	RelationalExpression	dst + 3 * avctx -> width + 4 > dend		1680223	0		>			
ANR	1680452	AdditiveExpression	dst + 3 * avctx -> width + 4		1680223	0		+			
ANR	1680453	Identifier	dst		1680223	0					
ANR	1680454	AdditiveExpression	3 * avctx -> width + 4		1680223	1		+			
ANR	1680455	MultiplicativeExpression	3 * avctx -> width		1680223	0		*			
ANR	1680456	PrimaryExpression	3		1680223	0					
ANR	1680457	PtrMemberAccess	avctx -> width		1680223	1					
ANR	1680458	Identifier	avctx		1680223	0					
ANR	1680459	Identifier	width		1680223	1					
ANR	1680460	PrimaryExpression	4		1680223	1					
ANR	1680461	Identifier	dend		1680223	1					
ANR	1680462	ReturnStatement	return AVERROR_INVALIDDATA ;	59:20:1029:1055	1680223	1	True				
ANR	1680463	Identifier	AVERROR_INVALIDDATA		1680223	0					
ANR	1680464	ExpressionStatement	"copy4h ( avctx , dst )"	61:16:1074:1092	1680223	2	True				
ANR	1680465	CallExpression	"copy4h ( avctx , dst )"		1680223	0					
ANR	1680466	Callee	copy4h		1680223	0					
ANR	1680467	Identifier	copy4h		1680223	0					
ANR	1680468	ArgumentList	avctx		1680223	1					
ANR	1680469	Argument	avctx		1680223	0					
ANR	1680470	Identifier	avctx		1680223	0					
ANR	1680471	Argument	dst		1680223	1					
ANR	1680472	Identifier	dst		1680223	0					
ANR	1680473	IfStatement	if ( ( offset & 0x3F ) == 0 )		1680223	3					
ANR	1680474	Condition	( offset & 0x3F ) == 0	63:20:1115:1134	1680223	0	True				
ANR	1680475	EqualityExpression	( offset & 0x3F ) == 0		1680223	0		==			
ANR	1680476	BitAndExpression	offset & 0x3F		1680223	0		&			
ANR	1680477	Identifier	offset		1680223	0					
ANR	1680478	PrimaryExpression	0x3F		1680223	1					
ANR	1680479	PrimaryExpression	0		1680223	1					
ANR	1680480	ExpressionStatement	dst += avctx -> width * 3	65:20:1158:1181	1680223	1	True				
ANR	1680481	AssignmentExpression	dst += avctx -> width * 3		1680223	0		+=			
ANR	1680482	Identifier	dst		1680223	0					
ANR	1680483	MultiplicativeExpression	avctx -> width * 3		1680223	1		*			
ANR	1680484	PtrMemberAccess	avctx -> width		1680223	0					
ANR	1680485	Identifier	avctx		1680223	0					
ANR	1680486	Identifier	width		1680223	1					
ANR	1680487	PrimaryExpression	3		1680223	1					
ANR	1680488	ExpressionStatement	dst += 4	67:16:1200:1208	1680223	4	True				
ANR	1680489	AssignmentExpression	dst += 4		1680223	0		+=			
ANR	1680490	Identifier	dst		1680223	0					
ANR	1680491	PrimaryExpression	4		1680223	1					
ANR	1680492	Condition	offset < j	69:21:1232:1241	1680223	1	True				
ANR	1680493	RelationalExpression	offset < j		1680223	0		<			
ANR	1680494	Identifier	offset		1680223	0					
ANR	1680495	Identifier	j		1680223	1					
ANR	1680496	Condition	-- i	71:17:1263:1265	1680223	1	True				
ANR	1680497	UnaryExpression	-- i		1680223	0					
ANR	1680498	IncDec	--		1680223	0					
ANR	1680499	Identifier	i		1680223	1					
ANR	1680500	ExpressionStatement	dst = c -> frame [ c -> current_frame ]	77:4:1283:1315	1680223	7	True				
ANR	1680501	AssignmentExpression	dst = c -> frame [ c -> current_frame ]		1680223	0		=			
ANR	1680502	Identifier	dst		1680223	0					
ANR	1680503	ArrayIndexing	c -> frame [ c -> current_frame ]		1680223	1					
ANR	1680504	PtrMemberAccess	c -> frame		1680223	0					
ANR	1680505	Identifier	c		1680223	0					
ANR	1680506	Identifier	frame		1680223	1					
ANR	1680507	PtrMemberAccess	c -> current_frame		1680223	1					
ANR	1680508	Identifier	c		1680223	0					
ANR	1680509	Identifier	current_frame		1680223	1					
ANR	1680510	DoStatement	do		1680223	8					
ANR	1680511	CompoundStatement		77:7:1252:1252	1680223	0					
ANR	1680512	ExpressionStatement	a = bytestream2_get_byte ( & c -> gb )	81:8:1336:1371	1680223	0	True				
ANR	1680513	AssignmentExpression	a = bytestream2_get_byte ( & c -> gb )		1680223	0		=			
ANR	1680514	Identifier	a		1680223	0					
ANR	1680515	CallExpression	bytestream2_get_byte ( & c -> gb )		1680223	1					
ANR	1680516	Callee	bytestream2_get_byte		1680223	0					
ANR	1680517	Identifier	bytestream2_get_byte		1680223	0					
ANR	1680518	ArgumentList	& c -> gb		1680223	1					
ANR	1680519	Argument	& c -> gb		1680223	0					
ANR	1680520	UnaryOperationExpression	& c -> gb		1680223	0					
ANR	1680521	UnaryOperator	&		1680223	0					
ANR	1680522	PtrMemberAccess	c -> gb		1680223	1					
ANR	1680523	Identifier	c		1680223	0					
ANR	1680524	Identifier	gb		1680223	1					
ANR	1680525	ExpressionStatement	b = bytestream2_get_byte ( & c -> gb )	83:8:1382:1417	1680223	1	True				
ANR	1680526	AssignmentExpression	b = bytestream2_get_byte ( & c -> gb )		1680223	0		=			
ANR	1680527	Identifier	b		1680223	0					
ANR	1680528	CallExpression	bytestream2_get_byte ( & c -> gb )		1680223	1					
ANR	1680529	Callee	bytestream2_get_byte		1680223	0					
ANR	1680530	Identifier	bytestream2_get_byte		1680223	0					
ANR	1680531	ArgumentList	& c -> gb		1680223	1					
ANR	1680532	Argument	& c -> gb		1680223	0					
ANR	1680533	UnaryOperationExpression	& c -> gb		1680223	0					
ANR	1680534	UnaryOperator	&		1680223	0					
ANR	1680535	PtrMemberAccess	c -> gb		1680223	1					
ANR	1680536	Identifier	c		1680223	0					
ANR	1680537	Identifier	gb		1680223	1					
ANR	1680538	ExpressionStatement	p = ( a & 0xC0 ) >> 6	85:8:1428:1450	1680223	2	True				
ANR	1680539	AssignmentExpression	p = ( a & 0xC0 ) >> 6		1680223	0		=			
ANR	1680540	Identifier	p		1680223	0					
ANR	1680541	ShiftExpression	( a & 0xC0 ) >> 6		1680223	1		>>			
ANR	1680542	BitAndExpression	a & 0xC0		1680223	0		&			
ANR	1680543	Identifier	a		1680223	0					
ANR	1680544	PrimaryExpression	0xC0		1680223	1					
ANR	1680545	PrimaryExpression	6		1680223	1					
ANR	1680546	ExpressionStatement	"src = c -> frame [ p ] + get_video_page_offset ( avctx , a , b )"	87:8:1461:1516	1680223	3	True				
ANR	1680547	AssignmentExpression	"src = c -> frame [ p ] + get_video_page_offset ( avctx , a , b )"		1680223	0		=			
ANR	1680548	Identifier	src		1680223	0					
ANR	1680549	AdditiveExpression	"c -> frame [ p ] + get_video_page_offset ( avctx , a , b )"		1680223	1		+			
ANR	1680550	ArrayIndexing	c -> frame [ p ]		1680223	0					
ANR	1680551	PtrMemberAccess	c -> frame		1680223	0					
ANR	1680552	Identifier	c		1680223	0					
ANR	1680553	Identifier	frame		1680223	1					
ANR	1680554	Identifier	p		1680223	1					
ANR	1680555	CallExpression	"get_video_page_offset ( avctx , a , b )"		1680223	1					
ANR	1680556	Callee	get_video_page_offset		1680223	0					
ANR	1680557	Identifier	get_video_page_offset		1680223	0					
ANR	1680558	ArgumentList	avctx		1680223	1					
ANR	1680559	Argument	avctx		1680223	0					
ANR	1680560	Identifier	avctx		1680223	0					
ANR	1680561	Argument	a		1680223	1					
ANR	1680562	Identifier	a		1680223	0					
ANR	1680563	Argument	b		1680223	2					
ANR	1680564	Identifier	b		1680223	0					
ANR	1680565	ExpressionStatement	send = c -> frame [ p ] + c -> frame_size	89:8:1527:1561	1680223	4	True				
ANR	1680566	AssignmentExpression	send = c -> frame [ p ] + c -> frame_size		1680223	0		=			
ANR	1680567	Identifier	send		1680223	0					
ANR	1680568	AdditiveExpression	c -> frame [ p ] + c -> frame_size		1680223	1		+			
ANR	1680569	ArrayIndexing	c -> frame [ p ]		1680223	0					
ANR	1680570	PtrMemberAccess	c -> frame		1680223	0					
ANR	1680571	Identifier	c		1680223	0					
ANR	1680572	Identifier	frame		1680223	1					
ANR	1680573	Identifier	p		1680223	1					
ANR	1680574	PtrMemberAccess	c -> frame_size		1680223	1					
ANR	1680575	Identifier	c		1680223	0					
ANR	1680576	Identifier	frame_size		1680223	1					
ANR	1680577	IfStatement	if ( src + 3 * avctx -> width + 4 > send )		1680223	5					
ANR	1680578	Condition	src + 3 * avctx -> width + 4 > send	91:12:1576:1608	1680223	0	True				
ANR	1680579	RelationalExpression	src + 3 * avctx -> width + 4 > send		1680223	0		>			
ANR	1680580	AdditiveExpression	src + 3 * avctx -> width + 4		1680223	0		+			
ANR	1680581	Identifier	src		1680223	0					
ANR	1680582	AdditiveExpression	3 * avctx -> width + 4		1680223	1		+			
ANR	1680583	MultiplicativeExpression	3 * avctx -> width		1680223	0		*			
ANR	1680584	PrimaryExpression	3		1680223	0					
ANR	1680585	PtrMemberAccess	avctx -> width		1680223	1					
ANR	1680586	Identifier	avctx		1680223	0					
ANR	1680587	Identifier	width		1680223	1					
ANR	1680588	PrimaryExpression	4		1680223	1					
ANR	1680589	Identifier	send		1680223	1					
ANR	1680590	ReturnStatement	return AVERROR_INVALIDDATA ;	93:12:1624:1650	1680223	1	True				
ANR	1680591	Identifier	AVERROR_INVALIDDATA		1680223	0					
ANR	1680592	ExpressionStatement	"copy_block4 ( dst , src , avctx -> width , avctx -> width , 4 )"	95:8:1661:1713	1680223	6	True				
ANR	1680593	CallExpression	"copy_block4 ( dst , src , avctx -> width , avctx -> width , 4 )"		1680223	0					
ANR	1680594	Callee	copy_block4		1680223	0					
ANR	1680595	Identifier	copy_block4		1680223	0					
ANR	1680596	ArgumentList	dst		1680223	1					
ANR	1680597	Argument	dst		1680223	0					
ANR	1680598	Identifier	dst		1680223	0					
ANR	1680599	Argument	src		1680223	1					
ANR	1680600	Identifier	src		1680223	0					
ANR	1680601	Argument	avctx -> width		1680223	2					
ANR	1680602	PtrMemberAccess	avctx -> width		1680223	0					
ANR	1680603	Identifier	avctx		1680223	0					
ANR	1680604	Identifier	width		1680223	1					
ANR	1680605	Argument	avctx -> width		1680223	3					
ANR	1680606	PtrMemberAccess	avctx -> width		1680223	0					
ANR	1680607	Identifier	avctx		1680223	0					
ANR	1680608	Identifier	width		1680223	1					
ANR	1680609	Argument	4		1680223	4					
ANR	1680610	PrimaryExpression	4		1680223	0					
ANR	1680611	ExpressionStatement	i ++	97:8:1724:1727	1680223	7	True				
ANR	1680612	PostIncDecOperationExpression	i ++		1680223	0					
ANR	1680613	Identifier	i		1680223	0					
ANR	1680614	IncDec	++		1680223	1					
ANR	1680615	IfStatement	if ( ( i & 0x3F ) == 0 )		1680223	8					
ANR	1680616	Condition	( i & 0x3F ) == 0	99:12:1742:1756	1680223	0	True				
ANR	1680617	EqualityExpression	( i & 0x3F ) == 0		1680223	0		==			
ANR	1680618	BitAndExpression	i & 0x3F		1680223	0		&			
ANR	1680619	Identifier	i		1680223	0					
ANR	1680620	PrimaryExpression	0x3F		1680223	1					
ANR	1680621	PrimaryExpression	0		1680223	1					
ANR	1680622	ExpressionStatement	dst += avctx -> width * 3	101:12:1772:1795	1680223	1	True				
ANR	1680623	AssignmentExpression	dst += avctx -> width * 3		1680223	0		+=			
ANR	1680624	Identifier	dst		1680223	0					
ANR	1680625	MultiplicativeExpression	avctx -> width * 3		1680223	1		*			
ANR	1680626	PtrMemberAccess	avctx -> width		1680223	0					
ANR	1680627	Identifier	avctx		1680223	0					
ANR	1680628	Identifier	width		1680223	1					
ANR	1680629	PrimaryExpression	3		1680223	1					
ANR	1680630	ExpressionStatement	dst += 4	103:8:1806:1814	1680223	9	True				
ANR	1680631	AssignmentExpression	dst += 4		1680223	0		+=			
ANR	1680632	Identifier	dst		1680223	0					
ANR	1680633	PrimaryExpression	4		1680223	1					
ANR	1680634	Condition	i < c -> video_size / 16	105:13:1830:1851	1680223	1	True				
ANR	1680635	RelationalExpression	i < c -> video_size / 16		1680223	0		<			
ANR	1680636	Identifier	i		1680223	0					
ANR	1680637	MultiplicativeExpression	c -> video_size / 16		1680223	1		/			
ANR	1680638	PtrMemberAccess	c -> video_size		1680223	0					
ANR	1680639	Identifier	c		1680223	0					
ANR	1680640	Identifier	video_size		1680223	1					
ANR	1680641	PrimaryExpression	16		1680223	1					
ANR	1680642	ExpressionStatement	opcode_size = bytestream2_get_le16 ( & c -> gb )	109:4:1862:1904	1680223	9	True				
ANR	1680643	AssignmentExpression	opcode_size = bytestream2_get_le16 ( & c -> gb )		1680223	0		=			
ANR	1680644	Identifier	opcode_size		1680223	0					
ANR	1680645	CallExpression	bytestream2_get_le16 ( & c -> gb )		1680223	1					
ANR	1680646	Callee	bytestream2_get_le16		1680223	0					
ANR	1680647	Identifier	bytestream2_get_le16		1680223	0					
ANR	1680648	ArgumentList	& c -> gb		1680223	1					
ANR	1680649	Argument	& c -> gb		1680223	0					
ANR	1680650	UnaryOperationExpression	& c -> gb		1680223	0					
ANR	1680651	UnaryOperator	&		1680223	0					
ANR	1680652	PtrMemberAccess	c -> gb		1680223	1					
ANR	1680653	Identifier	c		1680223	0					
ANR	1680654	Identifier	gb		1680223	1					
ANR	1680655	ExpressionStatement	"bytestream2_skip ( & c -> gb , 2 )"	111:4:1911:1938	1680223	10	True				
ANR	1680656	CallExpression	"bytestream2_skip ( & c -> gb , 2 )"		1680223	0					
ANR	1680657	Callee	bytestream2_skip		1680223	0					
ANR	1680658	Identifier	bytestream2_skip		1680223	0					
ANR	1680659	ArgumentList	& c -> gb		1680223	1					
ANR	1680660	Argument	& c -> gb		1680223	0					
ANR	1680661	UnaryOperationExpression	& c -> gb		1680223	0					
ANR	1680662	UnaryOperator	&		1680223	0					
ANR	1680663	PtrMemberAccess	c -> gb		1680223	1					
ANR	1680664	Identifier	c		1680223	0					
ANR	1680665	Identifier	gb		1680223	1					
ANR	1680666	Argument	2		1680223	1					
ANR	1680667	PrimaryExpression	2		1680223	0					
ANR	1680668	IfStatement	if ( bytestream2_get_bytes_left ( & c -> gb ) < opcode_size )		1680223	11					
ANR	1680669	Condition	bytestream2_get_bytes_left ( & c -> gb ) < opcode_size	115:8:1951:1998	1680223	0	True				
ANR	1680670	RelationalExpression	bytestream2_get_bytes_left ( & c -> gb ) < opcode_size		1680223	0		<			
ANR	1680671	CallExpression	bytestream2_get_bytes_left ( & c -> gb )		1680223	0					
ANR	1680672	Callee	bytestream2_get_bytes_left		1680223	0					
ANR	1680673	Identifier	bytestream2_get_bytes_left		1680223	0					
ANR	1680674	ArgumentList	& c -> gb		1680223	1					
ANR	1680675	Argument	& c -> gb		1680223	0					
ANR	1680676	UnaryOperationExpression	& c -> gb		1680223	0					
ANR	1680677	UnaryOperator	&		1680223	0					
ANR	1680678	PtrMemberAccess	c -> gb		1680223	1					
ANR	1680679	Identifier	c		1680223	0					
ANR	1680680	Identifier	gb		1680223	1					
ANR	1680681	Identifier	opcode_size		1680223	1					
ANR	1680682	ReturnStatement	return AVERROR_INVALIDDATA ;	117:8:2010:2036	1680223	1	True				
ANR	1680683	Identifier	AVERROR_INVALIDDATA		1680223	0					
ANR	1680684	ExpressionStatement	opcodes = pkt + bytestream2_tell ( & c -> gb )	121:4:2045:2085	1680223	12	True				
ANR	1680685	AssignmentExpression	opcodes = pkt + bytestream2_tell ( & c -> gb )		1680223	0		=			
ANR	1680686	Identifier	opcodes		1680223	0					
ANR	1680687	AdditiveExpression	pkt + bytestream2_tell ( & c -> gb )		1680223	1		+			
ANR	1680688	Identifier	pkt		1680223	0					
ANR	1680689	CallExpression	bytestream2_tell ( & c -> gb )		1680223	1					
ANR	1680690	Callee	bytestream2_tell		1680223	0					
ANR	1680691	Identifier	bytestream2_tell		1680223	0					
ANR	1680692	ArgumentList	& c -> gb		1680223	1					
ANR	1680693	Argument	& c -> gb		1680223	0					
ANR	1680694	UnaryOperationExpression	& c -> gb		1680223	0					
ANR	1680695	UnaryOperator	&		1680223	0					
ANR	1680696	PtrMemberAccess	c -> gb		1680223	1					
ANR	1680697	Identifier	c		1680223	0					
ANR	1680698	Identifier	gb		1680223	1					
ANR	1680699	ExpressionStatement	"bytestream2_skipu ( & c -> gb , opcode_size )"	123:4:2092:2130	1680223	13	True				
ANR	1680700	CallExpression	"bytestream2_skipu ( & c -> gb , opcode_size )"		1680223	0					
ANR	1680701	Callee	bytestream2_skipu		1680223	0					
ANR	1680702	Identifier	bytestream2_skipu		1680223	0					
ANR	1680703	ArgumentList	& c -> gb		1680223	1					
ANR	1680704	Argument	& c -> gb		1680223	0					
ANR	1680705	UnaryOperationExpression	& c -> gb		1680223	0					
ANR	1680706	UnaryOperator	&		1680223	0					
ANR	1680707	PtrMemberAccess	c -> gb		1680223	1					
ANR	1680708	Identifier	c		1680223	0					
ANR	1680709	Identifier	gb		1680223	1					
ANR	1680710	Argument	opcode_size		1680223	1					
ANR	1680711	Identifier	opcode_size		1680223	0					
ANR	1680712	ExpressionStatement	dst = c -> frame [ c -> current_frame ]	127:4:2139:2171	1680223	14	True				
ANR	1680713	AssignmentExpression	dst = c -> frame [ c -> current_frame ]		1680223	0		=			
ANR	1680714	Identifier	dst		1680223	0					
ANR	1680715	ArrayIndexing	c -> frame [ c -> current_frame ]		1680223	1					
ANR	1680716	PtrMemberAccess	c -> frame		1680223	0					
ANR	1680717	Identifier	c		1680223	0					
ANR	1680718	Identifier	frame		1680223	1					
ANR	1680719	PtrMemberAccess	c -> current_frame		1680223	1					
ANR	1680720	Identifier	c		1680223	0					
ANR	1680721	Identifier	current_frame		1680223	1					
ANR	1680722	ForStatement	"for ( i = 0 ; i < avctx -> height ; i += 4 , dst += avctx -> width * 3 )"		1680223	15					
ANR	1680723	ForInit	i = 0 ;	131:9:2185:2190	1680223	0	True				
ANR	1680724	AssignmentExpression	i = 0		1680223	0		=			
ANR	1680725	Identifier	i		1680223	0					
ANR	1680726	PrimaryExpression	0		1680223	1					
ANR	1680727	Condition	i < avctx -> height	131:16:2192:2208	1680223	1	True				
ANR	1680728	RelationalExpression	i < avctx -> height		1680223	0		<			
ANR	1680729	Identifier	i		1680223	0					
ANR	1680730	PtrMemberAccess	avctx -> height		1680223	1					
ANR	1680731	Identifier	avctx		1680223	0					
ANR	1680732	Identifier	height		1680223	1					
ANR	1680733	Expression	"i += 4 , dst += avctx -> width * 3"	131:35:2211:2241	1680223	2	True				
ANR	1680734	AssignmentExpression	i += 4		1680223	0		+=			
ANR	1680735	Identifier	i		1680223	0					
ANR	1680736	PrimaryExpression	4		1680223	1					
ANR	1680737	AssignmentExpression	dst += avctx -> width * 3		1680223	1		+=			
ANR	1680738	Identifier	dst		1680223	0					
ANR	1680739	MultiplicativeExpression	avctx -> width * 3		1680223	1		*			
ANR	1680740	PtrMemberAccess	avctx -> width		1680223	0					
ANR	1680741	Identifier	avctx		1680223	0					
ANR	1680742	Identifier	width		1680223	1					
ANR	1680743	PrimaryExpression	3		1680223	1					
ANR	1680744	CompoundStatement		129:68:2171:2171	1680223	3					
ANR	1680745	ForStatement	"for ( j = 0 ; j < avctx -> width ; j += 4 , dst += 4 )"		1680223	0					
ANR	1680746	ForInit	j = 0 ;	133:13:2260:2265	1680223	0	True				
ANR	1680747	AssignmentExpression	j = 0		1680223	0		=			
ANR	1680748	Identifier	j		1680223	0					
ANR	1680749	PrimaryExpression	0		1680223	1					
ANR	1680750	Condition	j < avctx -> width	133:20:2267:2282	1680223	1	True				
ANR	1680751	RelationalExpression	j < avctx -> width		1680223	0		<			
ANR	1680752	Identifier	j		1680223	0					
ANR	1680753	PtrMemberAccess	avctx -> width		1680223	1					
ANR	1680754	Identifier	avctx		1680223	0					
ANR	1680755	Identifier	width		1680223	1					
ANR	1680756	Expression	"j += 4 , dst += 4"	133:38:2285:2300	1680223	2	True				
ANR	1680757	AssignmentExpression	j += 4		1680223	0		+=			
ANR	1680758	Identifier	j		1680223	0					
ANR	1680759	PrimaryExpression	4		1680223	1					
ANR	1680760	AssignmentExpression	dst += 4		1680223	1		+=			
ANR	1680761	Identifier	dst		1680223	0					
ANR	1680762	PrimaryExpression	4		1680223	1					
ANR	1680763	CompoundStatement		133:12:2245:2262	1680223	3					
ANR	1680764	IdentifierDeclStatement	"int opcode , k = 0 ;"	135:12:2318:2335	1680223	0	True				
ANR	1680765	IdentifierDecl	opcode		1680223	0					
ANR	1680766	IdentifierDeclType	int		1680223	0					
ANR	1680767	Identifier	opcode		1680223	1					
ANR	1680768	IdentifierDecl	k = 0		1680223	1					
ANR	1680769	IdentifierDeclType	int		1680223	0					
ANR	1680770	Identifier	k		1680223	1					
ANR	1680771	AssignmentExpression	k = 0		1680223	2		=			
ANR	1680772	Identifier	k		1680223	0					
ANR	1680773	PrimaryExpression	0		1680223	1					
ANR	1680774	IfStatement	if ( x > opcode_size )		1680223	1					
ANR	1680775	Condition	x > opcode_size	139:16:2356:2370	1680223	0	True				
ANR	1680776	RelationalExpression	x > opcode_size		1680223	0		>			
ANR	1680777	Identifier	x		1680223	0					
ANR	1680778	Identifier	opcode_size		1680223	1					
ANR	1680779	ReturnStatement	return AVERROR_INVALIDDATA ;	141:16:2390:2416	1680223	1	True				
ANR	1680780	Identifier	AVERROR_INVALIDDATA		1680223	0					
ANR	1680781	IfStatement	if ( j & 4 )		1680223	2					
ANR	1680782	Condition	j & 4	143:16:2435:2439	1680223	0	True				
ANR	1680783	BitAndExpression	j & 4		1680223	0		&			
ANR	1680784	Identifier	j		1680223	0					
ANR	1680785	PrimaryExpression	4		1680223	1					
ANR	1680786	CompoundStatement		141:23:2369:2369	1680223	1					
ANR	1680787	ExpressionStatement	opcode = opcodes [ x ] & 15	145:16:2461:2485	1680223	0	True				
ANR	1680788	AssignmentExpression	opcode = opcodes [ x ] & 15		1680223	0		=			
ANR	1680789	Identifier	opcode		1680223	0					
ANR	1680790	BitAndExpression	opcodes [ x ] & 15		1680223	1		&			
ANR	1680791	ArrayIndexing	opcodes [ x ]		1680223	0					
ANR	1680792	Identifier	opcodes		1680223	0					
ANR	1680793	Identifier	x		1680223	1					
ANR	1680794	PrimaryExpression	15		1680223	1					
ANR	1680795	ExpressionStatement	x ++	147:16:2504:2507	1680223	1	True				
ANR	1680796	PostIncDecOperationExpression	x ++		1680223	0					
ANR	1680797	Identifier	x		1680223	0					
ANR	1680798	IncDec	++		1680223	1					
ANR	1680799	ElseStatement	else		1680223	0					
ANR	1680800	CompoundStatement		147:19:2456:2456	1680223	0					
ANR	1680801	ExpressionStatement	opcode = opcodes [ x ] >> 4	151:16:2548:2572	1680223	0	True				
ANR	1680802	AssignmentExpression	opcode = opcodes [ x ] >> 4		1680223	0		=			
ANR	1680803	Identifier	opcode		1680223	0					
ANR	1680804	ShiftExpression	opcodes [ x ] >> 4		1680223	1		>>			
ANR	1680805	ArrayIndexing	opcodes [ x ]		1680223	0					
ANR	1680806	Identifier	opcodes		1680223	0					
ANR	1680807	Identifier	x		1680223	1					
ANR	1680808	PrimaryExpression	4		1680223	1					
ANR	1680809	WhileStatement	while ( block_sequences [ opcode ] [ k ] )		1680223	3					
ANR	1680810	Condition	block_sequences [ opcode ] [ k ]	157:19:2611:2636	1680223	0	True				
ANR	1680811	ArrayIndexing	block_sequences [ opcode ] [ k ]		1680223	0					
ANR	1680812	ArrayIndexing	block_sequences [ opcode ]		1680223	0					
ANR	1680813	Identifier	block_sequences		1680223	0					
ANR	1680814	Identifier	opcode		1680223	1					
ANR	1680815	Identifier	k		1680223	1					
ANR	1680816	CompoundStatement		155:47:2566:2566	1680223	1					
ANR	1680817	ExpressionStatement	offset = avctx -> width * 2	161:16:2660:2685	1680223	0	True				
ANR	1680818	AssignmentExpression	offset = avctx -> width * 2		1680223	0		=			
ANR	1680819	Identifier	offset		1680223	0					
ANR	1680820	MultiplicativeExpression	avctx -> width * 2		1680223	1		*			
ANR	1680821	PtrMemberAccess	avctx -> width		1680223	0					
ANR	1680822	Identifier	avctx		1680223	0					
ANR	1680823	Identifier	width		1680223	1					
ANR	1680824	PrimaryExpression	2		1680223	1					
ANR	1680825	ExpressionStatement	code = block_sequences [ opcode ] [ k ++ ]	163:16:2704:2741	1680223	1	True				
ANR	1680826	AssignmentExpression	code = block_sequences [ opcode ] [ k ++ ]		1680223	0		=			
ANR	1680827	Identifier	code		1680223	0					
ANR	1680828	ArrayIndexing	block_sequences [ opcode ] [ k ++ ]		1680223	1					
ANR	1680829	ArrayIndexing	block_sequences [ opcode ]		1680223	0					
ANR	1680830	Identifier	block_sequences		1680223	0					
ANR	1680831	Identifier	opcode		1680223	1					
ANR	1680832	PostIncDecOperationExpression	k ++		1680223	1					
ANR	1680833	Identifier	k		1680223	0					
ANR	1680834	IncDec	++		1680223	1					
ANR	1680835	SwitchStatement	switch ( code )		1680223	2					
ANR	1680836	Condition	code	167:24:2770:2773	1680223	0	True				
ANR	1680837	Identifier	code		1680223	0					
ANR	1680838	CompoundStatement		165:30:2703:2703	1680223	1					
ANR	1680839	Label	case 2 :	169:16:2795:2801	1680223	0	True				
ANR	1680840	ExpressionStatement	offset = 0	171:20:2824:2834	1680223	1	True				
ANR	1680841	AssignmentExpression	offset = 0		1680223	0		=			
ANR	1680842	Identifier	offset		1680223	0					
ANR	1680843	PrimaryExpression	0		1680223	1					
ANR	1680844	Label	case 3 :	173:16:2853:2859	1680223	2	True				
ANR	1680845	ExpressionStatement	color = bytestream2_get_byte ( & c -> gb )	175:20:2882:2919	1680223	3	True				
ANR	1680846	AssignmentExpression	color = bytestream2_get_byte ( & c -> gb )		1680223	0		=			
ANR	1680847	Identifier	color		1680223	0					
ANR	1680848	CallExpression	bytestream2_get_byte ( & c -> gb )		1680223	1					
ANR	1680849	Callee	bytestream2_get_byte		1680223	0					
ANR	1680850	Identifier	bytestream2_get_byte		1680223	0					
ANR	1680851	ArgumentList	& c -> gb		1680223	1					
ANR	1680852	Argument	& c -> gb		1680223	0					
ANR	1680853	UnaryOperationExpression	& c -> gb		1680223	0					
ANR	1680854	UnaryOperator	&		1680223	0					
ANR	1680855	PtrMemberAccess	c -> gb		1680223	1					
ANR	1680856	Identifier	c		1680223	0					
ANR	1680857	Identifier	gb		1680223	1					
ANR	1680858	Label	case 4 :	177:16:2938:2944	1680223	4	True				
ANR	1680859	ExpressionStatement	mask = bytestream2_get_byte ( & c -> gb )	179:20:2967:3004	1680223	5	True				
ANR	1680860	AssignmentExpression	mask = bytestream2_get_byte ( & c -> gb )		1680223	0		=			
ANR	1680861	Identifier	mask		1680223	0					
ANR	1680862	CallExpression	bytestream2_get_byte ( & c -> gb )		1680223	1					
ANR	1680863	Callee	bytestream2_get_byte		1680223	0					
ANR	1680864	Identifier	bytestream2_get_byte		1680223	0					
ANR	1680865	ArgumentList	& c -> gb		1680223	1					
ANR	1680866	Argument	& c -> gb		1680223	0					
ANR	1680867	UnaryOperationExpression	& c -> gb		1680223	0					
ANR	1680868	UnaryOperator	&		1680223	0					
ANR	1680869	PtrMemberAccess	c -> gb		1680223	1					
ANR	1680870	Identifier	c		1680223	0					
ANR	1680871	Identifier	gb		1680223	1					
ANR	1680872	ExpressionStatement	"copy_color_mask ( avctx , mask , dst + offset , color )"	181:20:3027:3076	1680223	6	True				
ANR	1680873	CallExpression	"copy_color_mask ( avctx , mask , dst + offset , color )"		1680223	0					
ANR	1680874	Callee	copy_color_mask		1680223	0					
ANR	1680875	Identifier	copy_color_mask		1680223	0					
ANR	1680876	ArgumentList	avctx		1680223	1					
ANR	1680877	Argument	avctx		1680223	0					
ANR	1680878	Identifier	avctx		1680223	0					
ANR	1680879	Argument	mask		1680223	1					
ANR	1680880	Identifier	mask		1680223	0					
ANR	1680881	Argument	dst + offset		1680223	2					
ANR	1680882	AdditiveExpression	dst + offset		1680223	0		+			
ANR	1680883	Identifier	dst		1680223	0					
ANR	1680884	Identifier	offset		1680223	1					
ANR	1680885	Argument	color		1680223	3					
ANR	1680886	Identifier	color		1680223	0					
ANR	1680887	BreakStatement	break ;	183:20:3099:3104	1680223	7	True				
ANR	1680888	Label	case 5 :	185:16:3123:3129	1680223	8	True				
ANR	1680889	ExpressionStatement	offset = 0	187:20:3152:3162	1680223	9	True				
ANR	1680890	AssignmentExpression	offset = 0		1680223	0		=			
ANR	1680891	Identifier	offset		1680223	0					
ANR	1680892	PrimaryExpression	0		1680223	1					
ANR	1680893	Label	case 6 :	189:16:3181:3187	1680223	10	True				
ANR	1680894	ExpressionStatement	a = bytestream2_get_byte ( & c -> gb )	191:20:3210:3245	1680223	11	True				
ANR	1680895	AssignmentExpression	a = bytestream2_get_byte ( & c -> gb )		1680223	0		=			
ANR	1680896	Identifier	a		1680223	0					
ANR	1680897	CallExpression	bytestream2_get_byte ( & c -> gb )		1680223	1					
ANR	1680898	Callee	bytestream2_get_byte		1680223	0					
ANR	1680899	Identifier	bytestream2_get_byte		1680223	0					
ANR	1680900	ArgumentList	& c -> gb		1680223	1					
ANR	1680901	Argument	& c -> gb		1680223	0					
ANR	1680902	UnaryOperationExpression	& c -> gb		1680223	0					
ANR	1680903	UnaryOperator	&		1680223	0					
ANR	1680904	PtrMemberAccess	c -> gb		1680223	1					
ANR	1680905	Identifier	c		1680223	0					
ANR	1680906	Identifier	gb		1680223	1					
ANR	1680907	ExpressionStatement	b = bytestream2_get_byte ( & c -> gb )	193:20:3268:3303	1680223	12	True				
ANR	1680908	AssignmentExpression	b = bytestream2_get_byte ( & c -> gb )		1680223	0		=			
ANR	1680909	Identifier	b		1680223	0					
ANR	1680910	CallExpression	bytestream2_get_byte ( & c -> gb )		1680223	1					
ANR	1680911	Callee	bytestream2_get_byte		1680223	0					
ANR	1680912	Identifier	bytestream2_get_byte		1680223	0					
ANR	1680913	ArgumentList	& c -> gb		1680223	1					
ANR	1680914	Argument	& c -> gb		1680223	0					
ANR	1680915	UnaryOperationExpression	& c -> gb		1680223	0					
ANR	1680916	UnaryOperator	&		1680223	0					
ANR	1680917	PtrMemberAccess	c -> gb		1680223	1					
ANR	1680918	Identifier	c		1680223	0					
ANR	1680919	Identifier	gb		1680223	1					
ANR	1680920	ExpressionStatement	p = ( a & 0xC0 ) >> 6	195:20:3326:3348	1680223	13	True				
ANR	1680921	AssignmentExpression	p = ( a & 0xC0 ) >> 6		1680223	0		=			
ANR	1680922	Identifier	p		1680223	0					
ANR	1680923	ShiftExpression	( a & 0xC0 ) >> 6		1680223	1		>>			
ANR	1680924	BitAndExpression	a & 0xC0		1680223	0		&			
ANR	1680925	Identifier	a		1680223	0					
ANR	1680926	PrimaryExpression	0xC0		1680223	1					
ANR	1680927	PrimaryExpression	6		1680223	1					
ANR	1680928	ExpressionStatement	"src = c -> frame [ p ] + get_video_page_offset ( avctx , a , b )"	197:20:3371:3426	1680223	14	True				
ANR	1680929	AssignmentExpression	"src = c -> frame [ p ] + get_video_page_offset ( avctx , a , b )"		1680223	0		=			
ANR	1680930	Identifier	src		1680223	0					
ANR	1680931	AdditiveExpression	"c -> frame [ p ] + get_video_page_offset ( avctx , a , b )"		1680223	1		+			
ANR	1680932	ArrayIndexing	c -> frame [ p ]		1680223	0					
ANR	1680933	PtrMemberAccess	c -> frame		1680223	0					
ANR	1680934	Identifier	c		1680223	0					
ANR	1680935	Identifier	frame		1680223	1					
ANR	1680936	Identifier	p		1680223	1					
ANR	1680937	CallExpression	"get_video_page_offset ( avctx , a , b )"		1680223	1					
ANR	1680938	Callee	get_video_page_offset		1680223	0					
ANR	1680939	Identifier	get_video_page_offset		1680223	0					
ANR	1680940	ArgumentList	avctx		1680223	1					
ANR	1680941	Argument	avctx		1680223	0					
ANR	1680942	Identifier	avctx		1680223	0					
ANR	1680943	Argument	a		1680223	1					
ANR	1680944	Identifier	a		1680223	0					
ANR	1680945	Argument	b		1680223	2					
ANR	1680946	Identifier	b		1680223	0					
ANR	1680947	ExpressionStatement	send = c -> frame [ p ] + c -> frame_size	199:20:3449:3483	1680223	15	True				
ANR	1680948	AssignmentExpression	send = c -> frame [ p ] + c -> frame_size		1680223	0		=			
ANR	1680949	Identifier	send		1680223	0					
ANR	1680950	AdditiveExpression	c -> frame [ p ] + c -> frame_size		1680223	1		+			
ANR	1680951	ArrayIndexing	c -> frame [ p ]		1680223	0					
ANR	1680952	PtrMemberAccess	c -> frame		1680223	0					
ANR	1680953	Identifier	c		1680223	0					
ANR	1680954	Identifier	frame		1680223	1					
ANR	1680955	Identifier	p		1680223	1					
ANR	1680956	PtrMemberAccess	c -> frame_size		1680223	1					
ANR	1680957	Identifier	c		1680223	0					
ANR	1680958	Identifier	frame_size		1680223	1					
ANR	1680959	Label	case 7 :	201:16:3502:3508	1680223	16	True				
ANR	1680960	IfStatement	if ( src + offset + avctx -> width + 4 > send )		1680223	17					
ANR	1680961	Condition	src + offset + avctx -> width + 4 > send	203:24:3535:3572	1680223	0	True				
ANR	1680962	RelationalExpression	src + offset + avctx -> width + 4 > send		1680223	0		>			
ANR	1680963	AdditiveExpression	src + offset + avctx -> width + 4		1680223	0		+			
ANR	1680964	Identifier	src		1680223	0					
ANR	1680965	AdditiveExpression	offset + avctx -> width + 4		1680223	1		+			
ANR	1680966	Identifier	offset		1680223	0					
ANR	1680967	AdditiveExpression	avctx -> width + 4		1680223	1		+			
ANR	1680968	PtrMemberAccess	avctx -> width		1680223	0					
ANR	1680969	Identifier	avctx		1680223	0					
ANR	1680970	Identifier	width		1680223	1					
ANR	1680971	PrimaryExpression	4		1680223	1					
ANR	1680972	Identifier	send		1680223	1					
ANR	1680973	ReturnStatement	return AVERROR_INVALIDDATA ;	205:24:3600:3626	1680223	1	True				
ANR	1680974	Identifier	AVERROR_INVALIDDATA		1680223	0					
ANR	1680975	ExpressionStatement	mask = bytestream2_get_byte ( & c -> gb )	207:20:3649:3684	1680223	18	True				
ANR	1680976	AssignmentExpression	mask = bytestream2_get_byte ( & c -> gb )		1680223	0		=			
ANR	1680977	Identifier	mask		1680223	0					
ANR	1680978	CallExpression	bytestream2_get_byte ( & c -> gb )		1680223	1					
ANR	1680979	Callee	bytestream2_get_byte		1680223	0					
ANR	1680980	Identifier	bytestream2_get_byte		1680223	0					
ANR	1680981	ArgumentList	& c -> gb		1680223	1					
ANR	1680982	Argument	& c -> gb		1680223	0					
ANR	1680983	UnaryOperationExpression	& c -> gb		1680223	0					
ANR	1680984	UnaryOperator	&		1680223	0					
ANR	1680985	PtrMemberAccess	c -> gb		1680223	1					
ANR	1680986	Identifier	c		1680223	0					
ANR	1680987	Identifier	gb		1680223	1					
ANR	1680988	ExpressionStatement	"copy_src_mask ( avctx , mask , dst + offset , src + offset )"	209:20:3707:3761	1680223	19	True				
ANR	1680989	CallExpression	"copy_src_mask ( avctx , mask , dst + offset , src + offset )"		1680223	0					
ANR	1680990	Callee	copy_src_mask		1680223	0					
ANR	1680991	Identifier	copy_src_mask		1680223	0					
ANR	1680992	ArgumentList	avctx		1680223	1					
ANR	1680993	Argument	avctx		1680223	0					
ANR	1680994	Identifier	avctx		1680223	0					
ANR	1680995	Argument	mask		1680223	1					
ANR	1680996	Identifier	mask		1680223	0					
ANR	1680997	Argument	dst + offset		1680223	2					
ANR	1680998	AdditiveExpression	dst + offset		1680223	0		+			
ANR	1680999	Identifier	dst		1680223	0					
ANR	1681000	Identifier	offset		1680223	1					
ANR	1681001	Argument	src + offset		1680223	3					
ANR	1681002	AdditiveExpression	src + offset		1680223	0		+			
ANR	1681003	Identifier	src		1680223	0					
ANR	1681004	Identifier	offset		1680223	1					
ANR	1681005	BreakStatement	break ;	211:20:3784:3789	1680223	20	True				
ANR	1681006	ReturnStatement	return 0 ;	223:4:3850:3858	1680223	16	True				
ANR	1681007	PrimaryExpression	0		1680223	0					
ANR	1681008	ReturnType	static int		1680223	1					
ANR	1681009	Identifier	decode_0		1680223	2					
ANR	1681010	ParameterList	"AVCodecContext * avctx , uint8_t code , uint8_t * pkt"		1680223	3					
ANR	1681011	Parameter	AVCodecContext * avctx	1:20:20:40	1680223	0	True				
ANR	1681012	ParameterType	AVCodecContext *		1680223	0					
ANR	1681013	Identifier	avctx		1680223	1					
ANR	1681014	Parameter	uint8_t code	1:43:43:54	1680223	1	True				
ANR	1681015	ParameterType	uint8_t		1680223	0					
ANR	1681016	Identifier	code		1680223	1					
ANR	1681017	Parameter	uint8_t * pkt	1:57:57:68	1680223	2	True				
ANR	1681018	ParameterType	uint8_t *		1680223	0					
ANR	1681019	Identifier	pkt		1680223	1					
ANR	1681020	CFGEntryNode	ENTRY		1680223		True				
ANR	1681021	CFGExitNode	EXIT		1680223		True				
ANR	1681022	Symbol	* x		1680223						
ANR	1681023	Symbol	c -> current_frame		1680223						
ANR	1681024	Symbol	* block_sequences		1680223						
ANR	1681025	Symbol	align		1680223						
ANR	1681026	Symbol	opcode		1680223						
ANR	1681027	Symbol	* opcodes		1680223						
ANR	1681028	Symbol	* c -> current_frame		1680223						
ANR	1681029	Symbol	bytestream2_get_le16		1680223						
ANR	1681030	Symbol	offset		1680223						
ANR	1681031	Symbol	* * c		1680223						
ANR	1681032	Symbol	block_sequences		1680223						
ANR	1681033	Symbol	* * opcode		1680223						
ANR	1681034	Symbol	* avctx		1680223						
ANR	1681035	Symbol	& c -> gb		1680223						
ANR	1681036	Symbol	send		1680223						
ANR	1681037	Symbol	code		1680223						
ANR	1681038	Symbol	dst		1680223						
ANR	1681039	Symbol	color		1680223						
ANR	1681040	Symbol	avctx -> width		1680223						
ANR	1681041	Symbol	opcode_size		1680223						
ANR	1681042	Symbol	avctx -> height		1680223						
ANR	1681043	Symbol	pkt		1680223						
ANR	1681044	Symbol	dend		1680223						
ANR	1681045	Symbol	bytestream2_tell		1680223						
ANR	1681046	Symbol	avctx		1680223						
ANR	1681047	Symbol	bytestream2_get_bytes_left		1680223						
ANR	1681048	Symbol	mask		1680223						
ANR	1681049	Symbol	c -> video_size		1680223						
ANR	1681050	Symbol	get_video_page_offset		1680223						
ANR	1681051	Symbol	a		1680223						
ANR	1681052	Symbol	b		1680223						
ANR	1681053	Symbol	c -> frame		1680223						
ANR	1681054	Symbol	c		1680223						
ANR	1681055	Symbol	* c -> frame		1680223						
ANR	1681056	Symbol	src		1680223						
ANR	1681057	Symbol	* * block_sequences		1680223						
ANR	1681058	Symbol	i		1680223						
ANR	1681059	Symbol	j		1680223						
ANR	1681060	Symbol	k		1680223						
ANR	1681061	Symbol	avctx -> priv_data		1680223						
ANR	1681062	Symbol	* c		1680223						
ANR	1681063	Symbol	p		1680223						
ANR	1681064	Symbol	c -> frame_size		1680223						
ANR	1681065	Symbol	* k		1680223						
ANR	1681066	Symbol	x		1680223						
ANR	1681067	Symbol	* p		1680223						
ANR	1681068	Symbol	AVERROR_INVALIDDATA		1680223						
ANR	1681069	Symbol	opcodes		1680223						
ANR	1681070	Symbol	bytestream2_get_byte		1680223						
ANR	1681071	Symbol	* opcode		1680223						
