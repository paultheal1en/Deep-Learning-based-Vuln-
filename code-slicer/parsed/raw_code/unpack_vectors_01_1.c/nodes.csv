command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8636632	File	/home/p4ultr4n/workplace/ReVeal/raw_code/unpack_vectors_01_1.c								
ANR	8636633	Function	unpack_vectors	1:0:0:6403							
ANR	8636634	FunctionDef	"unpack_vectors (Vp3DecodeContext * s , GetBitContext * gb)"		8636633	0					
ANR	8636635	CompoundStatement		3:0:68:6403	8636633	0					
ANR	8636636	IdentifierDeclStatement	"int i , j , k ;"	5:4:75:86	8636633	0	True				
ANR	8636637	IdentifierDecl	i		8636633	0					
ANR	8636638	IdentifierDeclType	int		8636633	0					
ANR	8636639	Identifier	i		8636633	1					
ANR	8636640	IdentifierDecl	j		8636633	1					
ANR	8636641	IdentifierDeclType	int		8636633	0					
ANR	8636642	Identifier	j		8636633	1					
ANR	8636643	IdentifierDecl	k		8636633	2					
ANR	8636644	IdentifierDeclType	int		8636633	0					
ANR	8636645	Identifier	k		8636633	1					
ANR	8636646	IdentifierDeclStatement	int coding_mode ;	7:4:93:108	8636633	1	True				
ANR	8636647	IdentifierDecl	coding_mode		8636633	0					
ANR	8636648	IdentifierDeclType	int		8636633	0					
ANR	8636649	Identifier	coding_mode		8636633	1					
ANR	8636650	IdentifierDeclStatement	int motion_x [ 6 ] ;	9:4:115:130	8636633	2	True				
ANR	8636651	IdentifierDecl	motion_x [ 6 ]		8636633	0					
ANR	8636652	IdentifierDeclType	int [ 6 ]		8636633	0					
ANR	8636653	Identifier	motion_x		8636633	1					
ANR	8636654	PrimaryExpression	6		8636633	2					
ANR	8636655	IdentifierDeclStatement	int motion_y [ 6 ] ;	11:4:137:152	8636633	3	True				
ANR	8636656	IdentifierDecl	motion_y [ 6 ]		8636633	0					
ANR	8636657	IdentifierDeclType	int [ 6 ]		8636633	0					
ANR	8636658	Identifier	motion_y		8636633	1					
ANR	8636659	PrimaryExpression	6		8636633	2					
ANR	8636660	IdentifierDeclStatement	int last_motion_x = 0 ;	13:4:159:180	8636633	4	True				
ANR	8636661	IdentifierDecl	last_motion_x = 0		8636633	0					
ANR	8636662	IdentifierDeclType	int		8636633	0					
ANR	8636663	Identifier	last_motion_x		8636633	1					
ANR	8636664	AssignmentExpression	last_motion_x = 0		8636633	2		=			
ANR	8636665	Identifier	last_motion_x		8636633	0					
ANR	8636666	PrimaryExpression	0		8636633	1					
ANR	8636667	IdentifierDeclStatement	int last_motion_y = 0 ;	15:4:187:208	8636633	5	True				
ANR	8636668	IdentifierDecl	last_motion_y = 0		8636633	0					
ANR	8636669	IdentifierDeclType	int		8636633	0					
ANR	8636670	Identifier	last_motion_y		8636633	1					
ANR	8636671	AssignmentExpression	last_motion_y = 0		8636633	2		=			
ANR	8636672	Identifier	last_motion_y		8636633	0					
ANR	8636673	PrimaryExpression	0		8636633	1					
ANR	8636674	IdentifierDeclStatement	int prior_last_motion_x = 0 ;	17:4:215:242	8636633	6	True				
ANR	8636675	IdentifierDecl	prior_last_motion_x = 0		8636633	0					
ANR	8636676	IdentifierDeclType	int		8636633	0					
ANR	8636677	Identifier	prior_last_motion_x		8636633	1					
ANR	8636678	AssignmentExpression	prior_last_motion_x = 0		8636633	2		=			
ANR	8636679	Identifier	prior_last_motion_x		8636633	0					
ANR	8636680	PrimaryExpression	0		8636633	1					
ANR	8636681	IdentifierDeclStatement	int prior_last_motion_y = 0 ;	19:4:249:276	8636633	7	True				
ANR	8636682	IdentifierDecl	prior_last_motion_y = 0		8636633	0					
ANR	8636683	IdentifierDeclType	int		8636633	0					
ANR	8636684	Identifier	prior_last_motion_y		8636633	1					
ANR	8636685	AssignmentExpression	prior_last_motion_y = 0		8636633	2		=			
ANR	8636686	Identifier	prior_last_motion_y		8636633	0					
ANR	8636687	PrimaryExpression	0		8636633	1					
ANR	8636688	IdentifierDeclStatement	int current_macroblock ;	21:4:283:305	8636633	8	True				
ANR	8636689	IdentifierDecl	current_macroblock		8636633	0					
ANR	8636690	IdentifierDeclType	int		8636633	0					
ANR	8636691	Identifier	current_macroblock		8636633	1					
ANR	8636692	IdentifierDeclStatement	int current_fragment ;	23:4:312:332	8636633	9	True				
ANR	8636693	IdentifierDecl	current_fragment		8636633	0					
ANR	8636694	IdentifierDeclType	int		8636633	0					
ANR	8636695	Identifier	current_fragment		8636633	1					
ANR	8636696	ExpressionStatement	"debug_vp3 ( ""  vp3: unpacking motion vectors\\n"" )"	27:4:341:387	8636633	10	True				
ANR	8636697	CallExpression	"debug_vp3 ( ""  vp3: unpacking motion vectors\\n"" )"		8636633	0					
ANR	8636698	Callee	debug_vp3		8636633	0					
ANR	8636699	Identifier	debug_vp3		8636633	0					
ANR	8636700	ArgumentList	"""  vp3: unpacking motion vectors\\n"""		8636633	1					
ANR	8636701	Argument	"""  vp3: unpacking motion vectors\\n"""		8636633	0					
ANR	8636702	PrimaryExpression	"""  vp3: unpacking motion vectors\\n"""		8636633	0					
ANR	8636703	IfStatement	if ( s -> keyframe )		8636633	11					
ANR	8636704	Condition	s -> keyframe	31:8:400:410	8636633	0	True				
ANR	8636705	PtrMemberAccess	s -> keyframe		8636633	0					
ANR	8636706	Identifier	s		8636633	0					
ANR	8636707	Identifier	keyframe		8636633	1					
ANR	8636708	CompoundStatement		29:21:344:344	8636633	1					
ANR	8636709	ExpressionStatement	"debug_vp3 ( ""    keyframe-- there are no motion vectors\\n"" )"	35:8:426:483	8636633	0	True				
ANR	8636710	CallExpression	"debug_vp3 ( ""    keyframe-- there are no motion vectors\\n"" )"		8636633	0					
ANR	8636711	Callee	debug_vp3		8636633	0					
ANR	8636712	Identifier	debug_vp3		8636633	0					
ANR	8636713	ArgumentList	"""    keyframe-- there are no motion vectors\\n"""		8636633	1					
ANR	8636714	Argument	"""    keyframe-- there are no motion vectors\\n"""		8636633	0					
ANR	8636715	PrimaryExpression	"""    keyframe-- there are no motion vectors\\n"""		8636633	0					
ANR	8636716	ElseStatement	else		8636633	0					
ANR	8636717	CompoundStatement		37:11:430:430	8636633	0					
ANR	8636718	ExpressionStatement	"memset ( motion_x , 0 , 6 * sizeof ( int ) )"	43:8:512:548	8636633	0	True				
ANR	8636719	CallExpression	"memset ( motion_x , 0 , 6 * sizeof ( int ) )"		8636633	0					
ANR	8636720	Callee	memset		8636633	0					
ANR	8636721	Identifier	memset		8636633	0					
ANR	8636722	ArgumentList	motion_x		8636633	1					
ANR	8636723	Argument	motion_x		8636633	0					
ANR	8636724	Identifier	motion_x		8636633	0					
ANR	8636725	Argument	0		8636633	1					
ANR	8636726	PrimaryExpression	0		8636633	0					
ANR	8636727	Argument	6 * sizeof ( int )		8636633	2					
ANR	8636728	MultiplicativeExpression	6 * sizeof ( int )		8636633	0		*			
ANR	8636729	PrimaryExpression	6		8636633	0					
ANR	8636730	SizeofExpression	sizeof ( int )		8636633	1					
ANR	8636731	Sizeof	sizeof		8636633	0					
ANR	8636732	SizeofOperand	int		8636633	1					
ANR	8636733	ExpressionStatement	"memset ( motion_y , 0 , 6 * sizeof ( int ) )"	45:8:559:595	8636633	1	True				
ANR	8636734	CallExpression	"memset ( motion_y , 0 , 6 * sizeof ( int ) )"		8636633	0					
ANR	8636735	Callee	memset		8636633	0					
ANR	8636736	Identifier	memset		8636633	0					
ANR	8636737	ArgumentList	motion_y		8636633	1					
ANR	8636738	Argument	motion_y		8636633	0					
ANR	8636739	Identifier	motion_y		8636633	0					
ANR	8636740	Argument	0		8636633	1					
ANR	8636741	PrimaryExpression	0		8636633	0					
ANR	8636742	Argument	6 * sizeof ( int )		8636633	2					
ANR	8636743	MultiplicativeExpression	6 * sizeof ( int )		8636633	0		*			
ANR	8636744	PrimaryExpression	6		8636633	0					
ANR	8636745	SizeofExpression	sizeof ( int )		8636633	1					
ANR	8636746	Sizeof	sizeof		8636633	0					
ANR	8636747	SizeofOperand	int		8636633	1					
ANR	8636748	ExpressionStatement	"coding_mode = get_bits ( gb , 1 )"	51:8:683:712	8636633	2	True				
ANR	8636749	AssignmentExpression	"coding_mode = get_bits ( gb , 1 )"		8636633	0		=			
ANR	8636750	Identifier	coding_mode		8636633	0					
ANR	8636751	CallExpression	"get_bits ( gb , 1 )"		8636633	1					
ANR	8636752	Callee	get_bits		8636633	0					
ANR	8636753	Identifier	get_bits		8636633	0					
ANR	8636754	ArgumentList	gb		8636633	1					
ANR	8636755	Argument	gb		8636633	0					
ANR	8636756	Identifier	gb		8636633	0					
ANR	8636757	Argument	1		8636633	1					
ANR	8636758	PrimaryExpression	1		8636633	0					
ANR	8636759	ExpressionStatement	"debug_vectors ( ""    using %s scheme for unpacking motion vectors\\n"" , ( coding_mode == 0 ) ? ""VLC"" : ""fixed-length"" )"	53:8:723:848	8636633	3	True				
ANR	8636760	CallExpression	"debug_vectors ( ""    using %s scheme for unpacking motion vectors\\n"" , ( coding_mode == 0 ) ? ""VLC"" : ""fixed-length"" )"		8636633	0					
ANR	8636761	Callee	debug_vectors		8636633	0					
ANR	8636762	Identifier	debug_vectors		8636633	0					
ANR	8636763	ArgumentList	"""    using %s scheme for unpacking motion vectors\\n"""		8636633	1					
ANR	8636764	Argument	"""    using %s scheme for unpacking motion vectors\\n"""		8636633	0					
ANR	8636765	PrimaryExpression	"""    using %s scheme for unpacking motion vectors\\n"""		8636633	0					
ANR	8636766	Argument	"( coding_mode == 0 ) ? ""VLC"" : ""fixed-length"""		8636633	1					
ANR	8636767	ConditionalExpression	"( coding_mode == 0 ) ? ""VLC"" : ""fixed-length"""		8636633	0					
ANR	8636768	Condition	coding_mode == 0		8636633	0					
ANR	8636769	EqualityExpression	coding_mode == 0		8636633	0		==			
ANR	8636770	Identifier	coding_mode		8636633	0					
ANR	8636771	PrimaryExpression	0		8636633	1					
ANR	8636772	PrimaryExpression	"""VLC"""		8636633	1					
ANR	8636773	PrimaryExpression	"""fixed-length"""		8636633	2					
ANR	8636774	ForStatement	for ( i = 0 ; i < s -> u_superblock_start ; i ++ )		8636633	4					
ANR	8636775	ForInit	i = 0 ;	63:13:971:976	8636633	0	True				
ANR	8636776	AssignmentExpression	i = 0		8636633	0		=			
ANR	8636777	Identifier	i		8636633	0					
ANR	8636778	PrimaryExpression	0		8636633	1					
ANR	8636779	Condition	i < s -> u_superblock_start	63:20:978:1002	8636633	1	True				
ANR	8636780	RelationalExpression	i < s -> u_superblock_start		8636633	0		<			
ANR	8636781	Identifier	i		8636633	0					
ANR	8636782	PtrMemberAccess	s -> u_superblock_start		8636633	1					
ANR	8636783	Identifier	s		8636633	0					
ANR	8636784	Identifier	u_superblock_start		8636633	1					
ANR	8636785	PostIncDecOperationExpression	i ++	63:47:1005:1007	8636633	2	True				
ANR	8636786	Identifier	i		8636633	0					
ANR	8636787	IncDec	++		8636633	1					
ANR	8636788	CompoundStatement		61:52:941:941	8636633	3					
ANR	8636789	ForStatement	for ( j = 0 ; j < 4 ; j ++ )		8636633	0					
ANR	8636790	ForInit	j = 0 ;	67:17:1032:1037	8636633	0	True				
ANR	8636791	AssignmentExpression	j = 0		8636633	0		=			
ANR	8636792	Identifier	j		8636633	0					
ANR	8636793	PrimaryExpression	0		8636633	1					
ANR	8636794	Condition	j < 4	67:24:1039:1043	8636633	1	True				
ANR	8636795	RelationalExpression	j < 4		8636633	0		<			
ANR	8636796	Identifier	j		8636633	0					
ANR	8636797	PrimaryExpression	4		8636633	1					
ANR	8636798	PostIncDecOperationExpression	j ++	67:31:1046:1048	8636633	2	True				
ANR	8636799	Identifier	j		8636633	0					
ANR	8636800	IncDec	++		8636633	1					
ANR	8636801	CompoundStatement		65:36:982:982	8636633	3					
ANR	8636802	ExpressionStatement	current_macroblock = s -> superblock_macroblocks [ i * 4 + j ]	69:16:1070:1127	8636633	0	True				
ANR	8636803	AssignmentExpression	current_macroblock = s -> superblock_macroblocks [ i * 4 + j ]		8636633	0		=			
ANR	8636804	Identifier	current_macroblock		8636633	0					
ANR	8636805	ArrayIndexing	s -> superblock_macroblocks [ i * 4 + j ]		8636633	1					
ANR	8636806	PtrMemberAccess	s -> superblock_macroblocks		8636633	0					
ANR	8636807	Identifier	s		8636633	0					
ANR	8636808	Identifier	superblock_macroblocks		8636633	1					
ANR	8636809	AdditiveExpression	i * 4 + j		8636633	1		+			
ANR	8636810	MultiplicativeExpression	i * 4		8636633	0		*			
ANR	8636811	Identifier	i		8636633	0					
ANR	8636812	PrimaryExpression	4		8636633	1					
ANR	8636813	Identifier	j		8636633	1					
ANR	8636814	IfStatement	if ( ( current_macroblock == - 1 ) || ( ! s -> macroblock_coded [ current_macroblock ] ) )		8636633	1					
ANR	8636815	Condition	( current_macroblock == - 1 ) || ( ! s -> macroblock_coded [ current_macroblock ] )	71:20:1150:1242	8636633	0	True				
ANR	8636816	OrExpression	( current_macroblock == - 1 ) || ( ! s -> macroblock_coded [ current_macroblock ] )		8636633	0		||			
ANR	8636817	EqualityExpression	current_macroblock == - 1		8636633	0		==			
ANR	8636818	Identifier	current_macroblock		8636633	0					
ANR	8636819	UnaryOperationExpression	- 1		8636633	1					
ANR	8636820	UnaryOperator	-		8636633	0					
ANR	8636821	PrimaryExpression	1		8636633	1					
ANR	8636822	UnaryOperationExpression	! s -> macroblock_coded [ current_macroblock ]		8636633	1					
ANR	8636823	UnaryOperator	!		8636633	0					
ANR	8636824	ArrayIndexing	s -> macroblock_coded [ current_macroblock ]		8636633	1					
ANR	8636825	PtrMemberAccess	s -> macroblock_coded		8636633	0					
ANR	8636826	Identifier	s		8636633	0					
ANR	8636827	Identifier	macroblock_coded		8636633	1					
ANR	8636828	Identifier	current_macroblock		8636633	1					
ANR	8636829	ContinueStatement	continue ;	75:20:1266:1274	8636633	1	True				
ANR	8636830	ExpressionStatement	current_fragment = s -> macroblock_fragments [ current_macroblock * 6 ]	79:16:1295:1361	8636633	2	True				
ANR	8636831	AssignmentExpression	current_fragment = s -> macroblock_fragments [ current_macroblock * 6 ]		8636633	0		=			
ANR	8636832	Identifier	current_fragment		8636633	0					
ANR	8636833	ArrayIndexing	s -> macroblock_fragments [ current_macroblock * 6 ]		8636633	1					
ANR	8636834	PtrMemberAccess	s -> macroblock_fragments		8636633	0					
ANR	8636835	Identifier	s		8636633	0					
ANR	8636836	Identifier	macroblock_fragments		8636633	1					
ANR	8636837	MultiplicativeExpression	current_macroblock * 6		8636633	1		*			
ANR	8636838	Identifier	current_macroblock		8636633	0					
ANR	8636839	PrimaryExpression	6		8636633	1					
ANR	8636840	SwitchStatement	switch ( s -> all_fragments [ current_fragment ] . coding_method )		8636633	3					
ANR	8636841	Condition	s -> all_fragments [ current_fragment ] . coding_method	81:24:1388:1435	8636633	0	True				
ANR	8636842	MemberAccess	s -> all_fragments [ current_fragment ] . coding_method		8636633	0					
ANR	8636843	ArrayIndexing	s -> all_fragments [ current_fragment ]		8636633	0					
ANR	8636844	PtrMemberAccess	s -> all_fragments		8636633	0					
ANR	8636845	Identifier	s		8636633	0					
ANR	8636846	Identifier	all_fragments		8636633	1					
ANR	8636847	Identifier	current_fragment		8636633	1					
ANR	8636848	Identifier	coding_method		8636633	1					
ANR	8636849	CompoundStatement		79:74:1369:1369	8636633	1					
ANR	8636850	Label	case MODE_INTER_PLUS_MV :	85:16:1459:1482	8636633	0	True				
ANR	8636851	Identifier	MODE_INTER_PLUS_MV		8636633	0					
ANR	8636852	Label	case MODE_GOLDEN_MV :	87:16:1501:1520	8636633	1	True				
ANR	8636853	Identifier	MODE_GOLDEN_MV		8636633	0					
ANR	8636854	IfStatement	if ( coding_mode == 0 )		8636633	2					
ANR	8636855	Condition	coding_mode == 0	91:24:1617:1632	8636633	0	True				
ANR	8636856	EqualityExpression	coding_mode == 0		8636633	0		==			
ANR	8636857	Identifier	coding_mode		8636633	0					
ANR	8636858	PrimaryExpression	0		8636633	1					
ANR	8636859	CompoundStatement		89:42:1566:1566	8636633	1					
ANR	8636860	ExpressionStatement	motion_x [ 0 ] = get_motion_vector_vlc ( gb )	93:24:1662:1701	8636633	0	True				
ANR	8636861	AssignmentExpression	motion_x [ 0 ] = get_motion_vector_vlc ( gb )		8636633	0		=			
ANR	8636862	ArrayIndexing	motion_x [ 0 ]		8636633	0					
ANR	8636863	Identifier	motion_x		8636633	0					
ANR	8636864	PrimaryExpression	0		8636633	1					
ANR	8636865	CallExpression	get_motion_vector_vlc ( gb )		8636633	1					
ANR	8636866	Callee	get_motion_vector_vlc		8636633	0					
ANR	8636867	Identifier	get_motion_vector_vlc		8636633	0					
ANR	8636868	ArgumentList	gb		8636633	1					
ANR	8636869	Argument	gb		8636633	0					
ANR	8636870	Identifier	gb		8636633	0					
ANR	8636871	ExpressionStatement	motion_y [ 0 ] = get_motion_vector_vlc ( gb )	95:24:1728:1767	8636633	1	True				
ANR	8636872	AssignmentExpression	motion_y [ 0 ] = get_motion_vector_vlc ( gb )		8636633	0		=			
ANR	8636873	ArrayIndexing	motion_y [ 0 ]		8636633	0					
ANR	8636874	Identifier	motion_y		8636633	0					
ANR	8636875	PrimaryExpression	0		8636633	1					
ANR	8636876	CallExpression	get_motion_vector_vlc ( gb )		8636633	1					
ANR	8636877	Callee	get_motion_vector_vlc		8636633	0					
ANR	8636878	Identifier	get_motion_vector_vlc		8636633	0					
ANR	8636879	ArgumentList	gb		8636633	1					
ANR	8636880	Argument	gb		8636633	0					
ANR	8636881	Identifier	gb		8636633	0					
ANR	8636882	ElseStatement	else		8636633	0					
ANR	8636883	CompoundStatement		95:27:1728:1728	8636633	0					
ANR	8636884	ExpressionStatement	motion_x [ 0 ] = get_motion_vector_fixed ( gb )	99:24:1824:1865	8636633	0	True				
ANR	8636885	AssignmentExpression	motion_x [ 0 ] = get_motion_vector_fixed ( gb )		8636633	0		=			
ANR	8636886	ArrayIndexing	motion_x [ 0 ]		8636633	0					
ANR	8636887	Identifier	motion_x		8636633	0					
ANR	8636888	PrimaryExpression	0		8636633	1					
ANR	8636889	CallExpression	get_motion_vector_fixed ( gb )		8636633	1					
ANR	8636890	Callee	get_motion_vector_fixed		8636633	0					
ANR	8636891	Identifier	get_motion_vector_fixed		8636633	0					
ANR	8636892	ArgumentList	gb		8636633	1					
ANR	8636893	Argument	gb		8636633	0					
ANR	8636894	Identifier	gb		8636633	0					
ANR	8636895	ExpressionStatement	motion_y [ 0 ] = get_motion_vector_fixed ( gb )	101:24:1892:1933	8636633	1	True				
ANR	8636896	AssignmentExpression	motion_y [ 0 ] = get_motion_vector_fixed ( gb )		8636633	0		=			
ANR	8636897	ArrayIndexing	motion_y [ 0 ]		8636633	0					
ANR	8636898	Identifier	motion_y		8636633	0					
ANR	8636899	PrimaryExpression	0		8636633	1					
ANR	8636900	CallExpression	get_motion_vector_fixed ( gb )		8636633	1					
ANR	8636901	Callee	get_motion_vector_fixed		8636633	0					
ANR	8636902	Identifier	get_motion_vector_fixed		8636633	0					
ANR	8636903	ArgumentList	gb		8636633	1					
ANR	8636904	Argument	gb		8636633	0					
ANR	8636905	Identifier	gb		8636633	0					
ANR	8636906	ForStatement	for ( k = 1 ; k < 6 ; k ++ )		8636633	3					
ANR	8636907	ForInit	k = 1 ;	105:25:1984:1989	8636633	0	True				
ANR	8636908	AssignmentExpression	k = 1		8636633	0		=			
ANR	8636909	Identifier	k		8636633	0					
ANR	8636910	PrimaryExpression	1		8636633	1					
ANR	8636911	Condition	k < 6	105:32:1991:1995	8636633	1	True				
ANR	8636912	RelationalExpression	k < 6		8636633	0		<			
ANR	8636913	Identifier	k		8636633	0					
ANR	8636914	PrimaryExpression	6		8636633	1					
ANR	8636915	PostIncDecOperationExpression	k ++	105:39:1998:2000	8636633	2	True				
ANR	8636916	Identifier	k		8636633	0					
ANR	8636917	IncDec	++		8636633	1					
ANR	8636918	CompoundStatement		103:44:1934:1934	8636633	3					
ANR	8636919	ExpressionStatement	motion_x [ k ] = motion_x [ 0 ]	107:24:2030:2055	8636633	0	True				
ANR	8636920	AssignmentExpression	motion_x [ k ] = motion_x [ 0 ]		8636633	0		=			
ANR	8636921	ArrayIndexing	motion_x [ k ]		8636633	0					
ANR	8636922	Identifier	motion_x		8636633	0					
ANR	8636923	Identifier	k		8636633	1					
ANR	8636924	ArrayIndexing	motion_x [ 0 ]		8636633	1					
ANR	8636925	Identifier	motion_x		8636633	0					
ANR	8636926	PrimaryExpression	0		8636633	1					
ANR	8636927	ExpressionStatement	motion_y [ k ] = motion_y [ 0 ]	109:24:2082:2107	8636633	1	True				
ANR	8636928	AssignmentExpression	motion_y [ k ] = motion_y [ 0 ]		8636633	0		=			
ANR	8636929	ArrayIndexing	motion_y [ k ]		8636633	0					
ANR	8636930	Identifier	motion_y		8636633	0					
ANR	8636931	Identifier	k		8636633	1					
ANR	8636932	ArrayIndexing	motion_y [ 0 ]		8636633	1					
ANR	8636933	Identifier	motion_y		8636633	0					
ANR	8636934	PrimaryExpression	0		8636633	1					
ANR	8636935	IfStatement	if ( s -> all_fragments [ current_fragment ] . coding_method == MODE_INTER_PLUS_MV )		8636633	4					
ANR	8636936	Condition	s -> all_fragments [ current_fragment ] . coding_method == MODE_INTER_PLUS_MV	117:24:2233:2327	8636633	0	True				
ANR	8636937	EqualityExpression	s -> all_fragments [ current_fragment ] . coding_method == MODE_INTER_PLUS_MV		8636633	0		==			
ANR	8636938	MemberAccess	s -> all_fragments [ current_fragment ] . coding_method		8636633	0					
ANR	8636939	ArrayIndexing	s -> all_fragments [ current_fragment ]		8636633	0					
ANR	8636940	PtrMemberAccess	s -> all_fragments		8636633	0					
ANR	8636941	Identifier	s		8636633	0					
ANR	8636942	Identifier	all_fragments		8636633	1					
ANR	8636943	Identifier	current_fragment		8636633	1					
ANR	8636944	Identifier	coding_method		8636633	1					
ANR	8636945	Identifier	MODE_INTER_PLUS_MV		8636633	1					
ANR	8636946	CompoundStatement		117:44:2261:2261	8636633	1					
ANR	8636947	ExpressionStatement	prior_last_motion_x = last_motion_x	121:24:2357:2392	8636633	0	True				
ANR	8636948	AssignmentExpression	prior_last_motion_x = last_motion_x		8636633	0		=			
ANR	8636949	Identifier	prior_last_motion_x		8636633	0					
ANR	8636950	Identifier	last_motion_x		8636633	1					
ANR	8636951	ExpressionStatement	prior_last_motion_y = last_motion_y	123:24:2419:2454	8636633	1	True				
ANR	8636952	AssignmentExpression	prior_last_motion_y = last_motion_y		8636633	0		=			
ANR	8636953	Identifier	prior_last_motion_y		8636633	0					
ANR	8636954	Identifier	last_motion_y		8636633	1					
ANR	8636955	ExpressionStatement	last_motion_x = motion_x [ 0 ]	125:24:2481:2508	8636633	2	True				
ANR	8636956	AssignmentExpression	last_motion_x = motion_x [ 0 ]		8636633	0		=			
ANR	8636957	Identifier	last_motion_x		8636633	0					
ANR	8636958	ArrayIndexing	motion_x [ 0 ]		8636633	1					
ANR	8636959	Identifier	motion_x		8636633	0					
ANR	8636960	PrimaryExpression	0		8636633	1					
ANR	8636961	ExpressionStatement	last_motion_y = motion_y [ 0 ]	127:24:2535:2562	8636633	3	True				
ANR	8636962	AssignmentExpression	last_motion_y = motion_y [ 0 ]		8636633	0		=			
ANR	8636963	Identifier	last_motion_y		8636633	0					
ANR	8636964	ArrayIndexing	motion_y [ 0 ]		8636633	1					
ANR	8636965	Identifier	motion_y		8636633	0					
ANR	8636966	PrimaryExpression	0		8636633	1					
ANR	8636967	BreakStatement	break ;	131:20:2608:2613	8636633	5	True				
ANR	8636968	Label	case MODE_INTER_FOURMV :	135:16:2634:2656	8636633	6	True				
ANR	8636969	Identifier	MODE_INTER_FOURMV		8636633	0					
ANR	8636970	ExpressionStatement	motion_x [ 4 ] = motion_y [ 4 ] = 0	141:20:2831:2860	8636633	7	True				
ANR	8636971	AssignmentExpression	motion_x [ 4 ] = motion_y [ 4 ] = 0		8636633	0		=			
ANR	8636972	ArrayIndexing	motion_x [ 4 ]		8636633	0					
ANR	8636973	Identifier	motion_x		8636633	0					
ANR	8636974	PrimaryExpression	4		8636633	1					
ANR	8636975	AssignmentExpression	motion_y [ 4 ] = 0		8636633	1		=			
ANR	8636976	ArrayIndexing	motion_y [ 4 ]		8636633	0					
ANR	8636977	Identifier	motion_y		8636633	0					
ANR	8636978	PrimaryExpression	4		8636633	1					
ANR	8636979	PrimaryExpression	0		8636633	1					
ANR	8636980	ForStatement	for ( k = 0 ; k < 4 ; k ++ )		8636633	8					
ANR	8636981	ForInit	k = 0 ;	143:25:2888:2893	8636633	0	True				
ANR	8636982	AssignmentExpression	k = 0		8636633	0		=			
ANR	8636983	Identifier	k		8636633	0					
ANR	8636984	PrimaryExpression	0		8636633	1					
ANR	8636985	Condition	k < 4	143:32:2895:2899	8636633	1	True				
ANR	8636986	RelationalExpression	k < 4		8636633	0		<			
ANR	8636987	Identifier	k		8636633	0					
ANR	8636988	PrimaryExpression	4		8636633	1					
ANR	8636989	PostIncDecOperationExpression	k ++	143:39:2902:2904	8636633	2	True				
ANR	8636990	Identifier	k		8636633	0					
ANR	8636991	IncDec	++		8636633	1					
ANR	8636992	CompoundStatement		141:44:2838:2838	8636633	3					
ANR	8636993	IfStatement	if ( coding_mode == 0 )		8636633	0					
ANR	8636994	Condition	coding_mode == 0	145:28:2938:2953	8636633	0	True				
ANR	8636995	EqualityExpression	coding_mode == 0		8636633	0		==			
ANR	8636996	Identifier	coding_mode		8636633	0					
ANR	8636997	PrimaryExpression	0		8636633	1					
ANR	8636998	CompoundStatement		143:46:2887:2887	8636633	1					
ANR	8636999	ExpressionStatement	motion_x [ k ] = get_motion_vector_vlc ( gb )	147:28:2987:3026	8636633	0	True				
ANR	8637000	AssignmentExpression	motion_x [ k ] = get_motion_vector_vlc ( gb )		8636633	0		=			
ANR	8637001	ArrayIndexing	motion_x [ k ]		8636633	0					
ANR	8637002	Identifier	motion_x		8636633	0					
ANR	8637003	Identifier	k		8636633	1					
ANR	8637004	CallExpression	get_motion_vector_vlc ( gb )		8636633	1					
ANR	8637005	Callee	get_motion_vector_vlc		8636633	0					
ANR	8637006	Identifier	get_motion_vector_vlc		8636633	0					
ANR	8637007	ArgumentList	gb		8636633	1					
ANR	8637008	Argument	gb		8636633	0					
ANR	8637009	Identifier	gb		8636633	0					
ANR	8637010	ExpressionStatement	motion_y [ k ] = get_motion_vector_vlc ( gb )	149:28:3057:3096	8636633	1	True				
ANR	8637011	AssignmentExpression	motion_y [ k ] = get_motion_vector_vlc ( gb )		8636633	0		=			
ANR	8637012	ArrayIndexing	motion_y [ k ]		8636633	0					
ANR	8637013	Identifier	motion_y		8636633	0					
ANR	8637014	Identifier	k		8636633	1					
ANR	8637015	CallExpression	get_motion_vector_vlc ( gb )		8636633	1					
ANR	8637016	Callee	get_motion_vector_vlc		8636633	0					
ANR	8637017	Identifier	get_motion_vector_vlc		8636633	0					
ANR	8637018	ArgumentList	gb		8636633	1					
ANR	8637019	Argument	gb		8636633	0					
ANR	8637020	Identifier	gb		8636633	0					
ANR	8637021	ElseStatement	else		8636633	0					
ANR	8637022	CompoundStatement		149:31:3061:3061	8636633	0					
ANR	8637023	ExpressionStatement	motion_x [ k ] = get_motion_vector_fixed ( gb )	153:28:3161:3202	8636633	0	True				
ANR	8637024	AssignmentExpression	motion_x [ k ] = get_motion_vector_fixed ( gb )		8636633	0		=			
ANR	8637025	ArrayIndexing	motion_x [ k ]		8636633	0					
ANR	8637026	Identifier	motion_x		8636633	0					
ANR	8637027	Identifier	k		8636633	1					
ANR	8637028	CallExpression	get_motion_vector_fixed ( gb )		8636633	1					
ANR	8637029	Callee	get_motion_vector_fixed		8636633	0					
ANR	8637030	Identifier	get_motion_vector_fixed		8636633	0					
ANR	8637031	ArgumentList	gb		8636633	1					
ANR	8637032	Argument	gb		8636633	0					
ANR	8637033	Identifier	gb		8636633	0					
ANR	8637034	ExpressionStatement	motion_y [ k ] = get_motion_vector_fixed ( gb )	155:28:3233:3274	8636633	1	True				
ANR	8637035	AssignmentExpression	motion_y [ k ] = get_motion_vector_fixed ( gb )		8636633	0		=			
ANR	8637036	ArrayIndexing	motion_y [ k ]		8636633	0					
ANR	8637037	Identifier	motion_y		8636633	0					
ANR	8637038	Identifier	k		8636633	1					
ANR	8637039	CallExpression	get_motion_vector_fixed ( gb )		8636633	1					
ANR	8637040	Callee	get_motion_vector_fixed		8636633	0					
ANR	8637041	Identifier	get_motion_vector_fixed		8636633	0					
ANR	8637042	ArgumentList	gb		8636633	1					
ANR	8637043	Argument	gb		8636633	0					
ANR	8637044	Identifier	gb		8636633	0					
ANR	8637045	ExpressionStatement	motion_x [ 4 ] += motion_x [ k ]	159:24:3328:3354	8636633	1	True				
ANR	8637046	AssignmentExpression	motion_x [ 4 ] += motion_x [ k ]		8636633	0		+=			
ANR	8637047	ArrayIndexing	motion_x [ 4 ]		8636633	0					
ANR	8637048	Identifier	motion_x		8636633	0					
ANR	8637049	PrimaryExpression	4		8636633	1					
ANR	8637050	ArrayIndexing	motion_x [ k ]		8636633	1					
ANR	8637051	Identifier	motion_x		8636633	0					
ANR	8637052	Identifier	k		8636633	1					
ANR	8637053	ExpressionStatement	motion_y [ 4 ] += motion_y [ k ]	161:24:3381:3407	8636633	2	True				
ANR	8637054	AssignmentExpression	motion_y [ 4 ] += motion_y [ k ]		8636633	0		+=			
ANR	8637055	ArrayIndexing	motion_y [ 4 ]		8636633	0					
ANR	8637056	Identifier	motion_y		8636633	0					
ANR	8637057	PrimaryExpression	4		8636633	1					
ANR	8637058	ArrayIndexing	motion_y [ k ]		8636633	1					
ANR	8637059	Identifier	motion_y		8636633	0					
ANR	8637060	Identifier	k		8636633	1					
ANR	8637061	IfStatement	if ( motion_x [ 4 ] >= 0 )		8636633	9					
ANR	8637062	Condition	motion_x [ 4 ] >= 0	167:24:3459:3474	8636633	0	True				
ANR	8637063	RelationalExpression	motion_x [ 4 ] >= 0		8636633	0		>=			
ANR	8637064	ArrayIndexing	motion_x [ 4 ]		8636633	0					
ANR	8637065	Identifier	motion_x		8636633	0					
ANR	8637066	PrimaryExpression	4		8636633	1					
ANR	8637067	PrimaryExpression	0		8636633	1					
ANR	8637068	ExpressionStatement	motion_x [ 4 ] = ( motion_x [ 4 ] + 2 ) / 4	169:24:3503:3538	8636633	1	True				
ANR	8637069	AssignmentExpression	motion_x [ 4 ] = ( motion_x [ 4 ] + 2 ) / 4		8636633	0		=			
ANR	8637070	ArrayIndexing	motion_x [ 4 ]		8636633	0					
ANR	8637071	Identifier	motion_x		8636633	0					
ANR	8637072	PrimaryExpression	4		8636633	1					
ANR	8637073	MultiplicativeExpression	( motion_x [ 4 ] + 2 ) / 4		8636633	1		/			
ANR	8637074	AdditiveExpression	motion_x [ 4 ] + 2		8636633	0		+			
ANR	8637075	ArrayIndexing	motion_x [ 4 ]		8636633	0					
ANR	8637076	Identifier	motion_x		8636633	0					
ANR	8637077	PrimaryExpression	4		8636633	1					
ANR	8637078	PrimaryExpression	2		8636633	1					
ANR	8637079	PrimaryExpression	4		8636633	1					
ANR	8637080	ElseStatement	else		8636633	0					
ANR	8637081	ExpressionStatement	motion_x [ 4 ] = ( motion_x [ 4 ] - 2 ) / 4	173:24:3591:3626	8636633	0	True				
ANR	8637082	AssignmentExpression	motion_x [ 4 ] = ( motion_x [ 4 ] - 2 ) / 4		8636633	0		=			
ANR	8637083	ArrayIndexing	motion_x [ 4 ]		8636633	0					
ANR	8637084	Identifier	motion_x		8636633	0					
ANR	8637085	PrimaryExpression	4		8636633	1					
ANR	8637086	MultiplicativeExpression	( motion_x [ 4 ] - 2 ) / 4		8636633	1		/			
ANR	8637087	AdditiveExpression	motion_x [ 4 ] - 2		8636633	0		-			
ANR	8637088	ArrayIndexing	motion_x [ 4 ]		8636633	0					
ANR	8637089	Identifier	motion_x		8636633	0					
ANR	8637090	PrimaryExpression	4		8636633	1					
ANR	8637091	PrimaryExpression	2		8636633	1					
ANR	8637092	PrimaryExpression	4		8636633	1					
ANR	8637093	ExpressionStatement	motion_x [ 5 ] = motion_x [ 4 ]	175:20:3649:3674	8636633	10	True				
ANR	8637094	AssignmentExpression	motion_x [ 5 ] = motion_x [ 4 ]		8636633	0		=			
ANR	8637095	ArrayIndexing	motion_x [ 5 ]		8636633	0					
ANR	8637096	Identifier	motion_x		8636633	0					
ANR	8637097	PrimaryExpression	5		8636633	1					
ANR	8637098	ArrayIndexing	motion_x [ 4 ]		8636633	1					
ANR	8637099	Identifier	motion_x		8636633	0					
ANR	8637100	PrimaryExpression	4		8636633	1					
ANR	8637101	IfStatement	if ( motion_y [ 4 ] >= 0 )		8636633	11					
ANR	8637102	Condition	motion_y [ 4 ] >= 0	179:24:3703:3718	8636633	0	True				
ANR	8637103	RelationalExpression	motion_y [ 4 ] >= 0		8636633	0		>=			
ANR	8637104	ArrayIndexing	motion_y [ 4 ]		8636633	0					
ANR	8637105	Identifier	motion_y		8636633	0					
ANR	8637106	PrimaryExpression	4		8636633	1					
ANR	8637107	PrimaryExpression	0		8636633	1					
ANR	8637108	ExpressionStatement	motion_y [ 4 ] = ( motion_y [ 4 ] + 2 ) / 4	181:24:3747:3782	8636633	1	True				
ANR	8637109	AssignmentExpression	motion_y [ 4 ] = ( motion_y [ 4 ] + 2 ) / 4		8636633	0		=			
ANR	8637110	ArrayIndexing	motion_y [ 4 ]		8636633	0					
ANR	8637111	Identifier	motion_y		8636633	0					
ANR	8637112	PrimaryExpression	4		8636633	1					
ANR	8637113	MultiplicativeExpression	( motion_y [ 4 ] + 2 ) / 4		8636633	1		/			
ANR	8637114	AdditiveExpression	motion_y [ 4 ] + 2		8636633	0		+			
ANR	8637115	ArrayIndexing	motion_y [ 4 ]		8636633	0					
ANR	8637116	Identifier	motion_y		8636633	0					
ANR	8637117	PrimaryExpression	4		8636633	1					
ANR	8637118	PrimaryExpression	2		8636633	1					
ANR	8637119	PrimaryExpression	4		8636633	1					
ANR	8637120	ElseStatement	else		8636633	0					
ANR	8637121	ExpressionStatement	motion_y [ 4 ] = ( motion_y [ 4 ] - 2 ) / 4	185:24:3835:3870	8636633	0	True				
ANR	8637122	AssignmentExpression	motion_y [ 4 ] = ( motion_y [ 4 ] - 2 ) / 4		8636633	0		=			
ANR	8637123	ArrayIndexing	motion_y [ 4 ]		8636633	0					
ANR	8637124	Identifier	motion_y		8636633	0					
ANR	8637125	PrimaryExpression	4		8636633	1					
ANR	8637126	MultiplicativeExpression	( motion_y [ 4 ] - 2 ) / 4		8636633	1		/			
ANR	8637127	AdditiveExpression	motion_y [ 4 ] - 2		8636633	0		-			
ANR	8637128	ArrayIndexing	motion_y [ 4 ]		8636633	0					
ANR	8637129	Identifier	motion_y		8636633	0					
ANR	8637130	PrimaryExpression	4		8636633	1					
ANR	8637131	PrimaryExpression	2		8636633	1					
ANR	8637132	PrimaryExpression	4		8636633	1					
ANR	8637133	ExpressionStatement	motion_y [ 5 ] = motion_y [ 4 ]	187:20:3893:3918	8636633	12	True				
ANR	8637134	AssignmentExpression	motion_y [ 5 ] = motion_y [ 4 ]		8636633	0		=			
ANR	8637135	ArrayIndexing	motion_y [ 5 ]		8636633	0					
ANR	8637136	Identifier	motion_y		8636633	0					
ANR	8637137	PrimaryExpression	5		8636633	1					
ANR	8637138	ArrayIndexing	motion_y [ 4 ]		8636633	1					
ANR	8637139	Identifier	motion_y		8636633	0					
ANR	8637140	PrimaryExpression	4		8636633	1					
ANR	8637141	ExpressionStatement	prior_last_motion_x = last_motion_x	195:20:4067:4102	8636633	13	True				
ANR	8637142	AssignmentExpression	prior_last_motion_x = last_motion_x		8636633	0		=			
ANR	8637143	Identifier	prior_last_motion_x		8636633	0					
ANR	8637144	Identifier	last_motion_x		8636633	1					
ANR	8637145	ExpressionStatement	prior_last_motion_y = last_motion_y	197:20:4125:4160	8636633	14	True				
ANR	8637146	AssignmentExpression	prior_last_motion_y = last_motion_y		8636633	0		=			
ANR	8637147	Identifier	prior_last_motion_y		8636633	0					
ANR	8637148	Identifier	last_motion_y		8636633	1					
ANR	8637149	ExpressionStatement	last_motion_x = motion_x [ 3 ]	199:20:4183:4210	8636633	15	True				
ANR	8637150	AssignmentExpression	last_motion_x = motion_x [ 3 ]		8636633	0		=			
ANR	8637151	Identifier	last_motion_x		8636633	0					
ANR	8637152	ArrayIndexing	motion_x [ 3 ]		8636633	1					
ANR	8637153	Identifier	motion_x		8636633	0					
ANR	8637154	PrimaryExpression	3		8636633	1					
ANR	8637155	ExpressionStatement	last_motion_y = motion_y [ 3 ]	201:20:4233:4260	8636633	16	True				
ANR	8637156	AssignmentExpression	last_motion_y = motion_y [ 3 ]		8636633	0		=			
ANR	8637157	Identifier	last_motion_y		8636633	0					
ANR	8637158	ArrayIndexing	motion_y [ 3 ]		8636633	1					
ANR	8637159	Identifier	motion_y		8636633	0					
ANR	8637160	PrimaryExpression	3		8636633	1					
ANR	8637161	BreakStatement	break ;	203:20:4283:4288	8636633	17	True				
ANR	8637162	Label	case MODE_INTER_LAST_MV :	207:16:4309:4332	8636633	18	True				
ANR	8637163	Identifier	MODE_INTER_LAST_MV		8636633	0					
ANR	8637164	ExpressionStatement	motion_x [ 0 ] = last_motion_x	211:20:4425:4452	8636633	19	True				
ANR	8637165	AssignmentExpression	motion_x [ 0 ] = last_motion_x		8636633	0		=			
ANR	8637166	ArrayIndexing	motion_x [ 0 ]		8636633	0					
ANR	8637167	Identifier	motion_x		8636633	0					
ANR	8637168	PrimaryExpression	0		8636633	1					
ANR	8637169	Identifier	last_motion_x		8636633	1					
ANR	8637170	ExpressionStatement	motion_y [ 0 ] = last_motion_y	213:20:4475:4502	8636633	20	True				
ANR	8637171	AssignmentExpression	motion_y [ 0 ] = last_motion_y		8636633	0		=			
ANR	8637172	ArrayIndexing	motion_y [ 0 ]		8636633	0					
ANR	8637173	Identifier	motion_y		8636633	0					
ANR	8637174	PrimaryExpression	0		8636633	1					
ANR	8637175	Identifier	last_motion_y		8636633	1					
ANR	8637176	ForStatement	for ( k = 1 ; k < 6 ; k ++ )		8636633	21					
ANR	8637177	ForInit	k = 1 ;	215:25:4530:4535	8636633	0	True				
ANR	8637178	AssignmentExpression	k = 1		8636633	0		=			
ANR	8637179	Identifier	k		8636633	0					
ANR	8637180	PrimaryExpression	1		8636633	1					
ANR	8637181	Condition	k < 6	215:32:4537:4541	8636633	1	True				
ANR	8637182	RelationalExpression	k < 6		8636633	0		<			
ANR	8637183	Identifier	k		8636633	0					
ANR	8637184	PrimaryExpression	6		8636633	1					
ANR	8637185	PostIncDecOperationExpression	k ++	215:39:4544:4546	8636633	2	True				
ANR	8637186	Identifier	k		8636633	0					
ANR	8637187	IncDec	++		8636633	1					
ANR	8637188	CompoundStatement		213:44:4480:4480	8636633	3					
ANR	8637189	ExpressionStatement	motion_x [ k ] = motion_x [ 0 ]	217:24:4576:4601	8636633	0	True				
ANR	8637190	AssignmentExpression	motion_x [ k ] = motion_x [ 0 ]		8636633	0		=			
ANR	8637191	ArrayIndexing	motion_x [ k ]		8636633	0					
ANR	8637192	Identifier	motion_x		8636633	0					
ANR	8637193	Identifier	k		8636633	1					
ANR	8637194	ArrayIndexing	motion_x [ 0 ]		8636633	1					
ANR	8637195	Identifier	motion_x		8636633	0					
ANR	8637196	PrimaryExpression	0		8636633	1					
ANR	8637197	ExpressionStatement	motion_y [ k ] = motion_y [ 0 ]	219:24:4628:4653	8636633	1	True				
ANR	8637198	AssignmentExpression	motion_y [ k ] = motion_y [ 0 ]		8636633	0		=			
ANR	8637199	ArrayIndexing	motion_y [ k ]		8636633	0					
ANR	8637200	Identifier	motion_y		8636633	0					
ANR	8637201	Identifier	k		8636633	1					
ANR	8637202	ArrayIndexing	motion_y [ 0 ]		8636633	1					
ANR	8637203	Identifier	motion_y		8636633	0					
ANR	8637204	PrimaryExpression	0		8636633	1					
ANR	8637205	BreakStatement	break ;	229:20:4812:4817	8636633	22	True				
ANR	8637206	Label	case MODE_INTER_PRIOR_LAST :	233:16:4838:4864	8636633	23	True				
ANR	8637207	Identifier	MODE_INTER_PRIOR_LAST		8636633	0					
ANR	8637208	ExpressionStatement	motion_x [ 0 ] = prior_last_motion_x	239:20:5008:5041	8636633	24	True				
ANR	8637209	AssignmentExpression	motion_x [ 0 ] = prior_last_motion_x		8636633	0		=			
ANR	8637210	ArrayIndexing	motion_x [ 0 ]		8636633	0					
ANR	8637211	Identifier	motion_x		8636633	0					
ANR	8637212	PrimaryExpression	0		8636633	1					
ANR	8637213	Identifier	prior_last_motion_x		8636633	1					
ANR	8637214	ExpressionStatement	motion_y [ 0 ] = prior_last_motion_y	241:20:5064:5097	8636633	25	True				
ANR	8637215	AssignmentExpression	motion_y [ 0 ] = prior_last_motion_y		8636633	0		=			
ANR	8637216	ArrayIndexing	motion_y [ 0 ]		8636633	0					
ANR	8637217	Identifier	motion_y		8636633	0					
ANR	8637218	PrimaryExpression	0		8636633	1					
ANR	8637219	Identifier	prior_last_motion_y		8636633	1					
ANR	8637220	ForStatement	for ( k = 1 ; k < 6 ; k ++ )		8636633	26					
ANR	8637221	ForInit	k = 1 ;	243:25:5125:5130	8636633	0	True				
ANR	8637222	AssignmentExpression	k = 1		8636633	0		=			
ANR	8637223	Identifier	k		8636633	0					
ANR	8637224	PrimaryExpression	1		8636633	1					
ANR	8637225	Condition	k < 6	243:32:5132:5136	8636633	1	True				
ANR	8637226	RelationalExpression	k < 6		8636633	0		<			
ANR	8637227	Identifier	k		8636633	0					
ANR	8637228	PrimaryExpression	6		8636633	1					
ANR	8637229	PostIncDecOperationExpression	k ++	243:39:5139:5141	8636633	2	True				
ANR	8637230	Identifier	k		8636633	0					
ANR	8637231	IncDec	++		8636633	1					
ANR	8637232	CompoundStatement		241:44:5075:5075	8636633	3					
ANR	8637233	ExpressionStatement	motion_x [ k ] = motion_x [ 0 ]	245:24:5171:5196	8636633	0	True				
ANR	8637234	AssignmentExpression	motion_x [ k ] = motion_x [ 0 ]		8636633	0		=			
ANR	8637235	ArrayIndexing	motion_x [ k ]		8636633	0					
ANR	8637236	Identifier	motion_x		8636633	0					
ANR	8637237	Identifier	k		8636633	1					
ANR	8637238	ArrayIndexing	motion_x [ 0 ]		8636633	1					
ANR	8637239	Identifier	motion_x		8636633	0					
ANR	8637240	PrimaryExpression	0		8636633	1					
ANR	8637241	ExpressionStatement	motion_y [ k ] = motion_y [ 0 ]	247:24:5223:5248	8636633	1	True				
ANR	8637242	AssignmentExpression	motion_y [ k ] = motion_y [ 0 ]		8636633	0		=			
ANR	8637243	ArrayIndexing	motion_y [ k ]		8636633	0					
ANR	8637244	Identifier	motion_y		8636633	0					
ANR	8637245	Identifier	k		8636633	1					
ANR	8637246	ArrayIndexing	motion_y [ 0 ]		8636633	1					
ANR	8637247	Identifier	motion_y		8636633	0					
ANR	8637248	PrimaryExpression	0		8636633	1					
ANR	8637249	ExpressionStatement	prior_last_motion_x = last_motion_x	255:20:5342:5377	8636633	27	True				
ANR	8637250	AssignmentExpression	prior_last_motion_x = last_motion_x		8636633	0		=			
ANR	8637251	Identifier	prior_last_motion_x		8636633	0					
ANR	8637252	Identifier	last_motion_x		8636633	1					
ANR	8637253	ExpressionStatement	prior_last_motion_y = last_motion_y	257:20:5400:5435	8636633	28	True				
ANR	8637254	AssignmentExpression	prior_last_motion_y = last_motion_y		8636633	0		=			
ANR	8637255	Identifier	prior_last_motion_y		8636633	0					
ANR	8637256	Identifier	last_motion_y		8636633	1					
ANR	8637257	ExpressionStatement	last_motion_x = motion_x [ 0 ]	259:20:5458:5485	8636633	29	True				
ANR	8637258	AssignmentExpression	last_motion_x = motion_x [ 0 ]		8636633	0		=			
ANR	8637259	Identifier	last_motion_x		8636633	0					
ANR	8637260	ArrayIndexing	motion_x [ 0 ]		8636633	1					
ANR	8637261	Identifier	motion_x		8636633	0					
ANR	8637262	PrimaryExpression	0		8636633	1					
ANR	8637263	ExpressionStatement	last_motion_y = motion_y [ 0 ]	261:20:5508:5535	8636633	30	True				
ANR	8637264	AssignmentExpression	last_motion_y = motion_y [ 0 ]		8636633	0		=			
ANR	8637265	Identifier	last_motion_y		8636633	0					
ANR	8637266	ArrayIndexing	motion_y [ 0 ]		8636633	1					
ANR	8637267	Identifier	motion_y		8636633	0					
ANR	8637268	PrimaryExpression	0		8636633	1					
ANR	8637269	BreakStatement	break ;	263:20:5558:5563	8636633	31	True				
ANR	8637270	ExpressionStatement	"debug_vectors ( ""    vectors for macroblock starting @ fragment %d (coding method %d):\\n"" , current_fragment , s -> all_fragments [ current_fragment ] . coding_method )"	271:16:5677:5875	8636633	4	True				
ANR	8637271	CallExpression	"debug_vectors ( ""    vectors for macroblock starting @ fragment %d (coding method %d):\\n"" , current_fragment , s -> all_fragments [ current_fragment ] . coding_method )"		8636633	0					
ANR	8637272	Callee	debug_vectors		8636633	0					
ANR	8637273	Identifier	debug_vectors		8636633	0					
ANR	8637274	ArgumentList	"""    vectors for macroblock starting @ fragment %d (coding method %d):\\n"""		8636633	1					
ANR	8637275	Argument	"""    vectors for macroblock starting @ fragment %d (coding method %d):\\n"""		8636633	0					
ANR	8637276	PrimaryExpression	"""    vectors for macroblock starting @ fragment %d (coding method %d):\\n"""		8636633	0					
ANR	8637277	Argument	current_fragment		8636633	1					
ANR	8637278	Identifier	current_fragment		8636633	0					
ANR	8637279	Argument	s -> all_fragments [ current_fragment ] . coding_method		8636633	2					
ANR	8637280	MemberAccess	s -> all_fragments [ current_fragment ] . coding_method		8636633	0					
ANR	8637281	ArrayIndexing	s -> all_fragments [ current_fragment ]		8636633	0					
ANR	8637282	PtrMemberAccess	s -> all_fragments		8636633	0					
ANR	8637283	Identifier	s		8636633	0					
ANR	8637284	Identifier	all_fragments		8636633	1					
ANR	8637285	Identifier	current_fragment		8636633	1					
ANR	8637286	Identifier	coding_method		8636633	1					
ANR	8637287	ForStatement	for ( k = 0 ; k < 6 ; k ++ )		8636633	5					
ANR	8637288	ForInit	k = 0 ;	277:21:5899:5904	8636633	0	True				
ANR	8637289	AssignmentExpression	k = 0		8636633	0		=			
ANR	8637290	Identifier	k		8636633	0					
ANR	8637291	PrimaryExpression	0		8636633	1					
ANR	8637292	Condition	k < 6	277:28:5906:5910	8636633	1	True				
ANR	8637293	RelationalExpression	k < 6		8636633	0		<			
ANR	8637294	Identifier	k		8636633	0					
ANR	8637295	PrimaryExpression	6		8636633	1					
ANR	8637296	PostIncDecOperationExpression	k ++	277:35:5913:5915	8636633	2	True				
ANR	8637297	Identifier	k		8636633	0					
ANR	8637298	IncDec	++		8636633	1					
ANR	8637299	CompoundStatement		275:40:5849:5849	8636633	3					
ANR	8637300	ExpressionStatement	current_fragment = s -> macroblock_fragments [ current_macroblock * 6 + k ]	279:20:5941:6037	8636633	0	True				
ANR	8637301	AssignmentExpression	current_fragment = s -> macroblock_fragments [ current_macroblock * 6 + k ]		8636633	0		=			
ANR	8637302	Identifier	current_fragment		8636633	0					
ANR	8637303	ArrayIndexing	s -> macroblock_fragments [ current_macroblock * 6 + k ]		8636633	1					
ANR	8637304	PtrMemberAccess	s -> macroblock_fragments		8636633	0					
ANR	8637305	Identifier	s		8636633	0					
ANR	8637306	Identifier	macroblock_fragments		8636633	1					
ANR	8637307	AdditiveExpression	current_macroblock * 6 + k		8636633	1		+			
ANR	8637308	MultiplicativeExpression	current_macroblock * 6		8636633	0		*			
ANR	8637309	Identifier	current_macroblock		8636633	0					
ANR	8637310	PrimaryExpression	6		8636633	1					
ANR	8637311	Identifier	k		8636633	1					
ANR	8637312	ExpressionStatement	s -> all_fragments [ current_fragment ] . motion_x = motion_x [ k ]	283:20:6060:6117	8636633	1	True				
ANR	8637313	AssignmentExpression	s -> all_fragments [ current_fragment ] . motion_x = motion_x [ k ]		8636633	0		=			
ANR	8637314	MemberAccess	s -> all_fragments [ current_fragment ] . motion_x		8636633	0					
ANR	8637315	ArrayIndexing	s -> all_fragments [ current_fragment ]		8636633	0					
ANR	8637316	PtrMemberAccess	s -> all_fragments		8636633	0					
ANR	8637317	Identifier	s		8636633	0					
ANR	8637318	Identifier	all_fragments		8636633	1					
ANR	8637319	Identifier	current_fragment		8636633	1					
ANR	8637320	Identifier	motion_x		8636633	1					
ANR	8637321	ArrayIndexing	motion_x [ k ]		8636633	1					
ANR	8637322	Identifier	motion_x		8636633	0					
ANR	8637323	Identifier	k		8636633	1					
ANR	8637324	ExpressionStatement	s -> all_fragments [ current_fragment ] . motion_x = motion_y [ k ]	285:20:6140:6197	8636633	2	True				
ANR	8637325	AssignmentExpression	s -> all_fragments [ current_fragment ] . motion_x = motion_y [ k ]		8636633	0		=			
ANR	8637326	MemberAccess	s -> all_fragments [ current_fragment ] . motion_x		8636633	0					
ANR	8637327	ArrayIndexing	s -> all_fragments [ current_fragment ]		8636633	0					
ANR	8637328	PtrMemberAccess	s -> all_fragments		8636633	0					
ANR	8637329	Identifier	s		8636633	0					
ANR	8637330	Identifier	all_fragments		8636633	1					
ANR	8637331	Identifier	current_fragment		8636633	1					
ANR	8637332	Identifier	motion_x		8636633	1					
ANR	8637333	ArrayIndexing	motion_y [ k ]		8636633	1					
ANR	8637334	Identifier	motion_y		8636633	0					
ANR	8637335	Identifier	k		8636633	1					
ANR	8637336	ExpressionStatement	"debug_vectors ( ""    vector %d: fragment %d = (%d, %d)\\n"" , k , current_fragment , motion_x [ k ] , motion_y [ k ] )"	287:20:6220:6348	8636633	3	True				
ANR	8637337	CallExpression	"debug_vectors ( ""    vector %d: fragment %d = (%d, %d)\\n"" , k , current_fragment , motion_x [ k ] , motion_y [ k ] )"		8636633	0					
ANR	8637338	Callee	debug_vectors		8636633	0					
ANR	8637339	Identifier	debug_vectors		8636633	0					
ANR	8637340	ArgumentList	"""    vector %d: fragment %d = (%d, %d)\\n"""		8636633	1					
ANR	8637341	Argument	"""    vector %d: fragment %d = (%d, %d)\\n"""		8636633	0					
ANR	8637342	PrimaryExpression	"""    vector %d: fragment %d = (%d, %d)\\n"""		8636633	0					
ANR	8637343	Argument	k		8636633	1					
ANR	8637344	Identifier	k		8636633	0					
ANR	8637345	Argument	current_fragment		8636633	2					
ANR	8637346	Identifier	current_fragment		8636633	0					
ANR	8637347	Argument	motion_x [ k ]		8636633	3					
ANR	8637348	ArrayIndexing	motion_x [ k ]		8636633	0					
ANR	8637349	Identifier	motion_x		8636633	0					
ANR	8637350	Identifier	k		8636633	1					
ANR	8637351	Argument	motion_y [ k ]		8636633	4					
ANR	8637352	ArrayIndexing	motion_y [ k ]		8636633	0					
ANR	8637353	Identifier	motion_y		8636633	0					
ANR	8637354	Identifier	k		8636633	1					
ANR	8637355	ReturnType	static void		8636633	1					
ANR	8637356	Identifier	unpack_vectors		8636633	2					
ANR	8637357	ParameterList	"Vp3DecodeContext * s , GetBitContext * gb"		8636633	3					
ANR	8637358	Parameter	Vp3DecodeContext * s	1:27:27:45	8636633	0	True				
ANR	8637359	ParameterType	Vp3DecodeContext *		8636633	0					
ANR	8637360	Identifier	s		8636633	1					
ANR	8637361	Parameter	GetBitContext * gb	1:48:48:64	8636633	1	True				
ANR	8637362	ParameterType	GetBitContext *		8636633	0					
ANR	8637363	Identifier	gb		8636633	1					
ANR	8637364	CFGEntryNode	ENTRY		8636633		True				
ANR	8637365	CFGExitNode	EXIT		8636633		True				
ANR	8637366	Symbol	s -> macroblock_fragments		8636633						
ANR	8637367	Symbol	get_bits		8636633						
ANR	8637368	Symbol	s -> keyframe		8636633						
ANR	8637369	Symbol	s -> superblock_macroblocks		8636633						
ANR	8637370	Symbol	MODE_INTER_PLUS_MV		8636633						
ANR	8637371	Symbol	s -> all_fragments [ current_fragment ] . motion_x		8636633						
ANR	8637372	Symbol	motion_x		8636633						
ANR	8637373	Symbol	motion_y		8636633						
ANR	8637374	Symbol	prior_last_motion_x		8636633						
ANR	8637375	Symbol	prior_last_motion_y		8636633						
ANR	8637376	Symbol	last_motion_x		8636633						
ANR	8637377	Symbol	* * s		8636633						
ANR	8637378	Symbol	last_motion_y		8636633						
ANR	8637379	Symbol	* s -> superblock_macroblocks		8636633						
ANR	8637380	Symbol	* motion_x		8636633						
ANR	8637381	Symbol	* motion_y		8636633						
ANR	8637382	Symbol	gb		8636633						
ANR	8637383	Symbol	current_fragment		8636633						
ANR	8637384	Symbol	get_motion_vector_vlc		8636633						
ANR	8637385	Symbol	s -> u_superblock_start		8636633						
ANR	8637386	Symbol	s -> macroblock_coded		8636633						
ANR	8637387	Symbol	coding_mode		8636633						
ANR	8637388	Symbol	i		8636633						
ANR	8637389	Symbol	j		8636633						
ANR	8637390	Symbol	k		8636633						
ANR	8637391	Symbol	* current_fragment		8636633						
ANR	8637392	Symbol	* s -> macroblock_fragments		8636633						
ANR	8637393	Symbol	get_motion_vector_fixed		8636633						
ANR	8637394	Symbol	s -> all_fragments		8636633						
ANR	8637395	Symbol	* s -> all_fragments		8636633						
ANR	8637396	Symbol	s		8636633						
ANR	8637397	Symbol	* i		8636633						
ANR	8637398	Symbol	* j		8636633						
ANR	8637399	Symbol	* k		8636633						
ANR	8637400	Symbol	current_macroblock		8636633						
ANR	8637401	Symbol	* current_macroblock		8636633						
ANR	8637402	Symbol	* s -> macroblock_coded		8636633						
ANR	8637403	Symbol	* s		8636633						
ANR	8637404	Symbol	s -> all_fragments [ current_fragment ] . coding_method		8636633						
