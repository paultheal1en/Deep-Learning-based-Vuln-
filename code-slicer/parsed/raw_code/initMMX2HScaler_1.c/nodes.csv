command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4881166	File	/home/p4ultr4n/workplace/ReVeal/raw_code/initMMX2HScaler_1.c								
ANR	4881167	Function	initMMX2HScaler	1:0:0:2061							
ANR	4881168	FunctionDef	"initMMX2HScaler (int dstW , int xInc , uint8_t * funnyCode)"		4881167	0					
ANR	4881169	CompoundStatement		3:0:69:2061	4881167	0					
ANR	4881170	IdentifierDeclStatement	uint8_t * fragment ;	5:1:73:90	4881167	0	True				
ANR	4881171	IdentifierDecl	* fragment		4881167	0					
ANR	4881172	IdentifierDeclType	uint8_t *		4881167	0					
ANR	4881173	Identifier	fragment		4881167	1					
ANR	4881174	IdentifierDeclStatement	int imm8OfPShufW1 ;	7:1:94:111	4881167	1	True				
ANR	4881175	IdentifierDecl	imm8OfPShufW1		4881167	0					
ANR	4881176	IdentifierDeclType	int		4881167	0					
ANR	4881177	Identifier	imm8OfPShufW1		4881167	1					
ANR	4881178	IdentifierDeclStatement	int imm8OfPShufW2 ;	9:1:115:132	4881167	2	True				
ANR	4881179	IdentifierDecl	imm8OfPShufW2		4881167	0					
ANR	4881180	IdentifierDeclType	int		4881167	0					
ANR	4881181	Identifier	imm8OfPShufW2		4881167	1					
ANR	4881182	IdentifierDeclStatement	int fragmentLength ;	11:1:136:154	4881167	3	True				
ANR	4881183	IdentifierDecl	fragmentLength		4881167	0					
ANR	4881184	IdentifierDeclType	int		4881167	0					
ANR	4881185	Identifier	fragmentLength		4881167	1					
ANR	4881186	IdentifierDeclStatement	"int xpos , i ;"	15:1:160:171	4881167	4	True				
ANR	4881187	IdentifierDecl	xpos		4881167	0					
ANR	4881188	IdentifierDeclType	int		4881167	0					
ANR	4881189	Identifier	xpos		4881167	1					
ANR	4881190	IdentifierDecl	i		4881167	1					
ANR	4881191	IdentifierDeclType	int		4881167	0					
ANR	4881192	Identifier	i		4881167	1					
ANR	4881193	Statement	asm	27:1:251:253	4881167	5	True				
ANR	4881194	Statement	volatile	27:5:255:262	4881167	6	True				
ANR	4881195	Statement	(	27:13:263:263	4881167	7	True				
ANR	4881196	Statement	"""jmp 9f\\t\\t\\t\\t\\n\\t"""	29:2:268:283	4881167	8	True				
ANR	4881197	Statement	"""0:\\t\\t\\t\\t\\n\\t"""	33:2:299:310	4881167	9	True				
ANR	4881198	Statement	"""movq (%%esi), %%mm0\\t\\t\\n\\t"""	35:2:315:341	4881167	10	True				
ANR	4881199	Statement	"""movq %%mm0, %%mm1\\t\\t\\n\\t"""	37:2:364:388	4881167	11	True				
ANR	4881200	Statement	"""psrlq $8, %%mm0\\t\\t\\n\\t"""	39:2:393:415	4881167	12	True				
ANR	4881201	Statement	"""punpcklbw %%mm7, %%mm1\\t\\n\\t"""	41:2:420:448	4881167	13	True				
ANR	4881202	Statement	"""movq %%mm2, %%mm3\\t\\t\\n\\t"""	43:2:453:477	4881167	14	True				
ANR	4881203	Statement	"""punpcklbw %%mm7, %%mm0\\t\\n\\t"""	45:2:482:510	4881167	15	True				
ANR	4881204	Statement	"""addw %%bx, %%cx\\t\\t\\n\\t"""	47:2:515:537	4881167	16	True				
ANR	4881205	Statement	"""pshufw $0xFF, %%mm1, %%mm1\\t\\n\\t"""	49:2:575:607	4881167	17	True				
ANR	4881206	Statement	"""1:\\t\\t\\t\\t\\n\\t"""	51:2:612:623	4881167	18	True				
ANR	4881207	Statement	"""adcl %%edx, %%esi\\t\\t\\n\\t"""	53:2:628:652	4881167	19	True				
ANR	4881208	Statement	"""pshufw $0xFF, %%mm0, %%mm0\\t\\n\\t"""	55:2:688:720	4881167	20	True				
ANR	4881209	Statement	"""2:\\t\\t\\t\\t\\n\\t"""	57:2:725:736	4881167	21	True				
ANR	4881210	Statement	"""psrlw $9, %%mm3\\t\\t\\n\\t"""	59:2:741:763	4881167	22	True				
ANR	4881211	Statement	"""psubw %%mm1, %%mm0\\t\\t\\n\\t"""	61:2:768:793	4881167	23	True				
ANR	4881212	Statement	"""pmullw %%mm3, %%mm0\\t\\t\\n\\t"""	63:2:798:824	4881167	24	True				
ANR	4881213	Statement	"""paddw %%mm6, %%mm2\\t\\t\\n\\t"""	65:2:829:854	4881167	25	True				
ANR	4881214	Statement	"""psllw $7, %%mm1\\t\\t\\n\\t"""	67:2:885:907	4881167	26	True				
ANR	4881215	Statement	"""paddw %%mm1, %%mm0\\t\\t\\n\\t"""	69:2:912:937	4881167	27	True				
ANR	4881216	Statement	"""movq %%mm0, (%%edi, %%eax)\\t\\n\\t"""	73:2:944:976	4881167	28	True				
ANR	4881217	Statement	"""addl $8, %%eax\\t\\t\\t\\n\\t"""	77:2:983:1005	4881167	29	True				
ANR	4881218	Statement	"""9:\\t\\t\\t\\t\\n\\t"""	81:2:1019:1030	4881167	30	True				
ANR	4881219	Statement	"""leal 0b, %0\\t\\t\\t\\n\\t"""	85:2:1053:1072	4881167	31	True				
ANR	4881220	Statement	"""leal 1b, %1\\t\\t\\t\\n\\t"""	87:2:1077:1096	4881167	32	True				
ANR	4881221	Statement	"""leal 2b, %2\\t\\t\\t\\n\\t"""	89:2:1101:1120	4881167	33	True				
ANR	4881222	Statement	"""decl %1\\t\\t\\t\\n\\t"""	91:2:1125:1140	4881167	34	True				
ANR	4881223	Statement	"""decl %2\\t\\t\\t\\n\\t"""	93:2:1145:1160	4881167	35	True				
ANR	4881224	Statement	"""subl %0, %1\\t\\t\\t\\n\\t"""	95:2:1165:1184	4881167	36	True				
ANR	4881225	Statement	"""subl %0, %2\\t\\t\\t\\n\\t"""	97:2:1189:1208	4881167	37	True				
ANR	4881226	Statement	"""leal 9b, %3\\t\\t\\t\\n\\t"""	99:2:1213:1232	4881167	38	True				
ANR	4881227	Statement	"""subl %0, %3\\t\\t\\t\\n\\t"""	101:2:1237:1256	4881167	39	True				
ANR	4881228	Statement	:	103:2:1261:1261	4881167	40	True				
ANR	4881229	Statement	"""=r"""	103:3:1262:1265	4881167	41	True				
ANR	4881230	Statement	(	103:8:1267:1267	4881167	42	True				
ANR	4881231	Statement	fragment	103:9:1268:1275	4881167	43	True				
ANR	4881232	Statement	)	103:17:1276:1276	4881167	44	True				
ANR	4881233	Statement	","	103:18:1277:1277	4881167	45	True				
ANR	4881234	Statement	"""=r"""	103:20:1279:1282	4881167	46	True				
ANR	4881235	Statement	(	103:25:1284:1284	4881167	47	True				
ANR	4881236	Statement	imm8OfPShufW1	103:26:1285:1297	4881167	48	True				
ANR	4881237	Statement	)	103:39:1298:1298	4881167	49	True				
ANR	4881238	Statement	","	103:40:1299:1299	4881167	50	True				
ANR	4881239	Statement	"""=r"""	103:42:1301:1304	4881167	51	True				
ANR	4881240	Statement	(	103:47:1306:1306	4881167	52	True				
ANR	4881241	Statement	imm8OfPShufW2	103:48:1307:1319	4881167	53	True				
ANR	4881242	Statement	)	103:61:1320:1320	4881167	54	True				
ANR	4881243	Statement	","	103:62:1321:1321	4881167	55	True				
ANR	4881244	Statement	"""=r"""	105:2:1326:1329	4881167	56	True				
ANR	4881245	Statement	(	105:7:1331:1331	4881167	57	True				
ANR	4881246	Statement	fragmentLength	105:8:1332:1345	4881167	58	True				
ANR	4881247	Statement	)	105:22:1346:1346	4881167	59	True				
ANR	4881248	Statement	)	107:1:1350:1350	4881167	60	True				
ANR	4881249	ExpressionStatement		107:2:1351:1351	4881167	61	True				
ANR	4881250	ExpressionStatement	xpos = 0	111:1:1357:1364	4881167	62	True				
ANR	4881251	AssignmentExpression	xpos = 0		4881167	0		=			
ANR	4881252	Identifier	xpos		4881167	0					
ANR	4881253	PrimaryExpression	0		4881167	1					
ANR	4881254	ForStatement	for ( i = 0 ; i < dstW / 8 ; i ++ )		4881167	63					
ANR	4881255	ForInit	i = 0 ;	115:5:1432:1435	4881167	0	True				
ANR	4881256	AssignmentExpression	i = 0		4881167	0		=			
ANR	4881257	Identifier	i		4881167	0					
ANR	4881258	PrimaryExpression	0		4881167	1					
ANR	4881259	Condition	i < dstW / 8	115:10:1437:1444	4881167	1	True				
ANR	4881260	RelationalExpression	i < dstW / 8		4881167	0		<			
ANR	4881261	Identifier	i		4881167	0					
ANR	4881262	MultiplicativeExpression	dstW / 8		4881167	1		/			
ANR	4881263	Identifier	dstW		4881167	0					
ANR	4881264	PrimaryExpression	8		4881167	1					
ANR	4881265	PostIncDecOperationExpression	i ++	115:20:1447:1449	4881167	2	True				
ANR	4881266	Identifier	i		4881167	0					
ANR	4881267	IncDec	++		4881167	1					
ANR	4881268	CompoundStatement		117:2:1389:1404	4881167	3					
ANR	4881269	IdentifierDeclStatement	int xx = xpos >> 16 ;	119:2:1459:1474	4881167	0	True				
ANR	4881270	IdentifierDecl	xx = xpos >> 16		4881167	0					
ANR	4881271	IdentifierDeclType	int		4881167	0					
ANR	4881272	Identifier	xx		4881167	1					
ANR	4881273	AssignmentExpression	xx = xpos >> 16		4881167	2		=			
ANR	4881274	Identifier	xx		4881167	0					
ANR	4881275	ShiftExpression	xpos >> 16		4881167	1		>>			
ANR	4881276	Identifier	xpos		4881167	0					
ANR	4881277	PrimaryExpression	16		4881167	1					
ANR	4881278	IfStatement	if ( ( i & 3 ) == 0 )		4881167	1					
ANR	4881279	Condition	( i & 3 ) == 0	123:5:1484:1493	4881167	0	True				
ANR	4881280	EqualityExpression	( i & 3 ) == 0		4881167	0		==			
ANR	4881281	BitAndExpression	i & 3		4881167	0		&			
ANR	4881282	Identifier	i		4881167	0					
ANR	4881283	PrimaryExpression	3		4881167	1					
ANR	4881284	PrimaryExpression	0		4881167	1					
ANR	4881285	CompoundStatement		131:3:1518:1548	4881167	1					
ANR	4881286	IdentifierDeclStatement	int a = 0 ;	127:3:1505:1512	4881167	0	True				
ANR	4881287	IdentifierDecl	a = 0		4881167	0					
ANR	4881288	IdentifierDeclType	int		4881167	0					
ANR	4881289	Identifier	a		4881167	1					
ANR	4881290	AssignmentExpression	a = 0		4881167	2		=			
ANR	4881291	Identifier	a		4881167	0					
ANR	4881292	PrimaryExpression	0		4881167	1					
ANR	4881293	IdentifierDeclStatement	int b = ( ( xpos + xInc ) >> 16 ) - xx ;	129:3:1518:1546	4881167	1	True				
ANR	4881294	IdentifierDecl	b = ( ( xpos + xInc ) >> 16 ) - xx		4881167	0					
ANR	4881295	IdentifierDeclType	int		4881167	0					
ANR	4881296	Identifier	b		4881167	1					
ANR	4881297	AssignmentExpression	b = ( ( xpos + xInc ) >> 16 ) - xx		4881167	2		=			
ANR	4881298	Identifier	b		4881167	0					
ANR	4881299	AdditiveExpression	( ( xpos + xInc ) >> 16 ) - xx		4881167	1		-			
ANR	4881300	ShiftExpression	( xpos + xInc ) >> 16		4881167	0		>>			
ANR	4881301	AdditiveExpression	xpos + xInc		4881167	0		+			
ANR	4881302	Identifier	xpos		4881167	0					
ANR	4881303	Identifier	xInc		4881167	1					
ANR	4881304	PrimaryExpression	16		4881167	1					
ANR	4881305	Identifier	xx		4881167	1					
ANR	4881306	IdentifierDeclStatement	int c = ( ( xpos + xInc * 2 ) >> 16 ) - xx ;	131:3:1552:1582	4881167	2	True				
ANR	4881307	IdentifierDecl	c = ( ( xpos + xInc * 2 ) >> 16 ) - xx		4881167	0					
ANR	4881308	IdentifierDeclType	int		4881167	0					
ANR	4881309	Identifier	c		4881167	1					
ANR	4881310	AssignmentExpression	c = ( ( xpos + xInc * 2 ) >> 16 ) - xx		4881167	2		=			
ANR	4881311	Identifier	c		4881167	0					
ANR	4881312	AdditiveExpression	( ( xpos + xInc * 2 ) >> 16 ) - xx		4881167	1		-			
ANR	4881313	ShiftExpression	( xpos + xInc * 2 ) >> 16		4881167	0		>>			
ANR	4881314	AdditiveExpression	xpos + xInc * 2		4881167	0		+			
ANR	4881315	Identifier	xpos		4881167	0					
ANR	4881316	MultiplicativeExpression	xInc * 2		4881167	1		*			
ANR	4881317	Identifier	xInc		4881167	0					
ANR	4881318	PrimaryExpression	2		4881167	1					
ANR	4881319	PrimaryExpression	16		4881167	1					
ANR	4881320	Identifier	xx		4881167	1					
ANR	4881321	IdentifierDeclStatement	int d = ( ( xpos + xInc * 3 ) >> 16 ) - xx ;	133:3:1588:1618	4881167	3	True				
ANR	4881322	IdentifierDecl	d = ( ( xpos + xInc * 3 ) >> 16 ) - xx		4881167	0					
ANR	4881323	IdentifierDeclType	int		4881167	0					
ANR	4881324	Identifier	d		4881167	1					
ANR	4881325	AssignmentExpression	d = ( ( xpos + xInc * 3 ) >> 16 ) - xx		4881167	2		=			
ANR	4881326	Identifier	d		4881167	0					
ANR	4881327	AdditiveExpression	( ( xpos + xInc * 3 ) >> 16 ) - xx		4881167	1		-			
ANR	4881328	ShiftExpression	( xpos + xInc * 3 ) >> 16		4881167	0		>>			
ANR	4881329	AdditiveExpression	xpos + xInc * 3		4881167	0		+			
ANR	4881330	Identifier	xpos		4881167	0					
ANR	4881331	MultiplicativeExpression	xInc * 3		4881167	1		*			
ANR	4881332	Identifier	xInc		4881167	0					
ANR	4881333	PrimaryExpression	3		4881167	1					
ANR	4881334	PrimaryExpression	16		4881167	1					
ANR	4881335	Identifier	xx		4881167	1					
ANR	4881336	ExpressionStatement	"memcpy ( funnyCode + fragmentLength * i / 4 , fragment , fragmentLength )"	137:3:1626:1690	4881167	4	True				
ANR	4881337	CallExpression	"memcpy ( funnyCode + fragmentLength * i / 4 , fragment , fragmentLength )"		4881167	0					
ANR	4881338	Callee	memcpy		4881167	0					
ANR	4881339	Identifier	memcpy		4881167	0					
ANR	4881340	ArgumentList	funnyCode + fragmentLength * i / 4		4881167	1					
ANR	4881341	Argument	funnyCode + fragmentLength * i / 4		4881167	0					
ANR	4881342	AdditiveExpression	funnyCode + fragmentLength * i / 4		4881167	0		+			
ANR	4881343	Identifier	funnyCode		4881167	0					
ANR	4881344	MultiplicativeExpression	fragmentLength * i / 4		4881167	1		*			
ANR	4881345	Identifier	fragmentLength		4881167	0					
ANR	4881346	MultiplicativeExpression	i / 4		4881167	1		/			
ANR	4881347	Identifier	i		4881167	0					
ANR	4881348	PrimaryExpression	4		4881167	1					
ANR	4881349	Argument	fragment		4881167	1					
ANR	4881350	Identifier	fragment		4881167	0					
ANR	4881351	Argument	fragmentLength		4881167	2					
ANR	4881352	Identifier	fragmentLength		4881167	0					
ANR	4881353	ExpressionStatement	funnyCode [ fragmentLength * i / 4 + imm8OfPShufW1 ] = funnyCode [ fragmentLength * i / 4 + imm8OfPShufW2 ] = a | ( b << 2 ) | ( c << 4 ) | ( d << 6 )	141:3:1698:1829	4881167	5	True				
ANR	4881354	AssignmentExpression	funnyCode [ fragmentLength * i / 4 + imm8OfPShufW1 ] = funnyCode [ fragmentLength * i / 4 + imm8OfPShufW2 ] = a | ( b << 2 ) | ( c << 4 ) | ( d << 6 )		4881167	0		=			
ANR	4881355	ArrayIndexing	funnyCode [ fragmentLength * i / 4 + imm8OfPShufW1 ]		4881167	0					
ANR	4881356	Identifier	funnyCode		4881167	0					
ANR	4881357	AdditiveExpression	fragmentLength * i / 4 + imm8OfPShufW1		4881167	1		+			
ANR	4881358	MultiplicativeExpression	fragmentLength * i / 4		4881167	0		*			
ANR	4881359	Identifier	fragmentLength		4881167	0					
ANR	4881360	MultiplicativeExpression	i / 4		4881167	1		/			
ANR	4881361	Identifier	i		4881167	0					
ANR	4881362	PrimaryExpression	4		4881167	1					
ANR	4881363	Identifier	imm8OfPShufW1		4881167	1					
ANR	4881364	AssignmentExpression	funnyCode [ fragmentLength * i / 4 + imm8OfPShufW2 ] = a | ( b << 2 ) | ( c << 4 ) | ( d << 6 )		4881167	1		=			
ANR	4881365	ArrayIndexing	funnyCode [ fragmentLength * i / 4 + imm8OfPShufW2 ]		4881167	0					
ANR	4881366	Identifier	funnyCode		4881167	0					
ANR	4881367	AdditiveExpression	fragmentLength * i / 4 + imm8OfPShufW2		4881167	1		+			
ANR	4881368	MultiplicativeExpression	fragmentLength * i / 4		4881167	0		*			
ANR	4881369	Identifier	fragmentLength		4881167	0					
ANR	4881370	MultiplicativeExpression	i / 4		4881167	1		/			
ANR	4881371	Identifier	i		4881167	0					
ANR	4881372	PrimaryExpression	4		4881167	1					
ANR	4881373	Identifier	imm8OfPShufW2		4881167	1					
ANR	4881374	InclusiveOrExpression	a | ( b << 2 ) | ( c << 4 ) | ( d << 6 )		4881167	1		|			
ANR	4881375	Identifier	a		4881167	0					
ANR	4881376	InclusiveOrExpression	( b << 2 ) | ( c << 4 ) | ( d << 6 )		4881167	1		|			
ANR	4881377	ShiftExpression	b << 2		4881167	0		<<			
ANR	4881378	Identifier	b		4881167	0					
ANR	4881379	PrimaryExpression	2		4881167	1					
ANR	4881380	InclusiveOrExpression	( c << 4 ) | ( d << 6 )		4881167	1		|			
ANR	4881381	ShiftExpression	c << 4		4881167	0		<<			
ANR	4881382	Identifier	c		4881167	0					
ANR	4881383	PrimaryExpression	4		4881167	1					
ANR	4881384	ShiftExpression	d << 6		4881167	1		<<			
ANR	4881385	Identifier	d		4881167	0					
ANR	4881386	PrimaryExpression	6		4881167	1					
ANR	4881387	IfStatement	if ( d < 3 )		4881167	6					
ANR	4881388	Condition	d < 3	153:6:1944:1946	4881167	0	True				
ANR	4881389	RelationalExpression	d < 3		4881167	0		<			
ANR	4881390	Identifier	d		4881167	0					
ANR	4881391	PrimaryExpression	3		4881167	1					
ANR	4881392	ExpressionStatement	funnyCode [ fragmentLength * i / 4 + 1 ] = 0x6E	153:11:1949:1988	4881167	1	True				
ANR	4881393	AssignmentExpression	funnyCode [ fragmentLength * i / 4 + 1 ] = 0x6E		4881167	0		=			
ANR	4881394	ArrayIndexing	funnyCode [ fragmentLength * i / 4 + 1 ]		4881167	0					
ANR	4881395	Identifier	funnyCode		4881167	0					
ANR	4881396	AdditiveExpression	fragmentLength * i / 4 + 1		4881167	1		+			
ANR	4881397	MultiplicativeExpression	fragmentLength * i / 4		4881167	0		*			
ANR	4881398	Identifier	fragmentLength		4881167	0					
ANR	4881399	MultiplicativeExpression	i / 4		4881167	1		/			
ANR	4881400	Identifier	i		4881167	0					
ANR	4881401	PrimaryExpression	4		4881167	1					
ANR	4881402	PrimaryExpression	1		4881167	1					
ANR	4881403	PrimaryExpression	0x6E		4881167	1					
ANR	4881404	ExpressionStatement	funnyCode [ fragmentLength * ( i + 4 ) / 4 ] = RET	157:3:1996:2034	4881167	7	True				
ANR	4881405	AssignmentExpression	funnyCode [ fragmentLength * ( i + 4 ) / 4 ] = RET		4881167	0		=			
ANR	4881406	ArrayIndexing	funnyCode [ fragmentLength * ( i + 4 ) / 4 ]		4881167	0					
ANR	4881407	Identifier	funnyCode		4881167	0					
ANR	4881408	MultiplicativeExpression	fragmentLength * ( i + 4 ) / 4		4881167	1		*			
ANR	4881409	Identifier	fragmentLength		4881167	0					
ANR	4881410	MultiplicativeExpression	( i + 4 ) / 4		4881167	1		/			
ANR	4881411	AdditiveExpression	i + 4		4881167	0		+			
ANR	4881412	Identifier	i		4881167	0					
ANR	4881413	PrimaryExpression	4		4881167	1					
ANR	4881414	PrimaryExpression	4		4881167	1					
ANR	4881415	Identifier	RET		4881167	1					
ANR	4881416	ExpressionStatement	xpos += xInc	161:2:2044:2054	4881167	2	True				
ANR	4881417	AssignmentExpression	xpos += xInc		4881167	0		+=			
ANR	4881418	Identifier	xpos		4881167	0					
ANR	4881419	Identifier	xInc		4881167	1					
ANR	4881420	ReturnType	static void		4881167	1					
ANR	4881421	Identifier	initMMX2HScaler		4881167	2					
ANR	4881422	ParameterList	"int dstW , int xInc , uint8_t * funnyCode"		4881167	3					
ANR	4881423	Parameter	int dstW	1:28:28:35	4881167	0	True				
ANR	4881424	ParameterType	int		4881167	0					
ANR	4881425	Identifier	dstW		4881167	1					
ANR	4881426	Parameter	int xInc	1:38:38:45	4881167	1	True				
ANR	4881427	ParameterType	int		4881167	0					
ANR	4881428	Identifier	xInc		4881167	1					
ANR	4881429	Parameter	uint8_t * funnyCode	1:48:48:65	4881167	2	True				
ANR	4881430	ParameterType	uint8_t *		4881167	0					
ANR	4881431	Identifier	funnyCode		4881167	1					
ANR	4881432	CFGEntryNode	ENTRY		4881167		True				
ANR	4881433	CFGExitNode	EXIT		4881167		True				
ANR	4881434	Symbol	xx		4881167						
ANR	4881435	Symbol	RET		4881167						
ANR	4881436	Symbol	fragmentLength		4881167						
ANR	4881437	Symbol	a		4881167						
ANR	4881438	Symbol	b		4881167						
ANR	4881439	Symbol	c		4881167						
ANR	4881440	Symbol	xpos		4881167						
ANR	4881441	Symbol	d		4881167						
ANR	4881442	Symbol	imm8OfPShufW2		4881167						
ANR	4881443	Symbol	imm8OfPShufW1		4881167						
ANR	4881444	Symbol	i		4881167						
ANR	4881445	Symbol	* funnyCode		4881167						
ANR	4881446	Symbol	funnyCode		4881167						
ANR	4881447	Symbol	* imm8OfPShufW2		4881167						
ANR	4881448	Symbol	xInc		4881167						
ANR	4881449	Symbol	* imm8OfPShufW1		4881167						
ANR	4881450	Symbol	fragment		4881167						
ANR	4881451	Symbol	* i		4881167						
ANR	4881452	Symbol	dstW		4881167						
ANR	4881453	Symbol	* fragmentLength		4881167						
