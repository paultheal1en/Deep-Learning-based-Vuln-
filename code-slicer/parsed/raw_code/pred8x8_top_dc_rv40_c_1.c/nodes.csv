command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6669503	File	/home/p4ultr4n/workplace/ReVeal/raw_code/pred8x8_top_dc_rv40_c_1.c								
ANR	6669504	Function	pred8x8_top_dc_rv40_c	1:0:0:313							
ANR	6669505	FunctionDef	"pred8x8_top_dc_rv40_c (uint8_t * src , int stride)"		6669504	0					
ANR	6669506	CompoundStatement		1:59:59:313	6669504	0					
ANR	6669507	IdentifierDeclStatement	int i ;	3:4:66:71	6669504	0	True				
ANR	6669508	IdentifierDecl	i		6669504	0					
ANR	6669509	IdentifierDeclType	int		6669504	0					
ANR	6669510	Identifier	i		6669504	1					
ANR	6669511	IdentifierDeclStatement	int dc0 ;	5:4:78:85	6669504	1	True				
ANR	6669512	IdentifierDecl	dc0		6669504	0					
ANR	6669513	IdentifierDeclType	int		6669504	0					
ANR	6669514	Identifier	dc0		6669504	1					
ANR	6669515	ExpressionStatement	dc0 = 0	9:4:94:99	6669504	2	True				
ANR	6669516	AssignmentExpression	dc0 = 0		6669504	0		=			
ANR	6669517	Identifier	dc0		6669504	0					
ANR	6669518	PrimaryExpression	0		6669504	1					
ANR	6669519	ForStatement	for ( i = 0 ; i < 8 ; i ++ )		6669504	3					
ANR	6669520	ForInit	i = 0 ;	11:8:110:113	6669504	0	True				
ANR	6669521	AssignmentExpression	i = 0		6669504	0		=			
ANR	6669522	Identifier	i		6669504	0					
ANR	6669523	PrimaryExpression	0		6669504	1					
ANR	6669524	Condition	i < 8	11:12:114:116	6669504	1	True				
ANR	6669525	RelationalExpression	i < 8		6669504	0		<			
ANR	6669526	Identifier	i		6669504	0					
ANR	6669527	PrimaryExpression	8		6669504	1					
ANR	6669528	PostIncDecOperationExpression	i ++	11:17:119:121	6669504	2	True				
ANR	6669529	Identifier	i		6669504	0					
ANR	6669530	IncDec	++		6669504	1					
ANR	6669531	ExpressionStatement	dc0 += src [ i - stride ]	13:8:133:152	6669504	3	True				
ANR	6669532	AssignmentExpression	dc0 += src [ i - stride ]		6669504	0		+=			
ANR	6669533	Identifier	dc0		6669504	0					
ANR	6669534	ArrayIndexing	src [ i - stride ]		6669504	1					
ANR	6669535	Identifier	src		6669504	0					
ANR	6669536	AdditiveExpression	i - stride		6669504	1		-			
ANR	6669537	Identifier	i		6669504	0					
ANR	6669538	Identifier	stride		6669504	1					
ANR	6669539	ExpressionStatement	dc0 = 0x01010101 * ( ( dc0 + 4 ) >> 3 )	15:4:159:189	6669504	4	True				
ANR	6669540	AssignmentExpression	dc0 = 0x01010101 * ( ( dc0 + 4 ) >> 3 )		6669504	0		=			
ANR	6669541	Identifier	dc0		6669504	0					
ANR	6669542	MultiplicativeExpression	0x01010101 * ( ( dc0 + 4 ) >> 3 )		6669504	1		*			
ANR	6669543	PrimaryExpression	0x01010101		6669504	0					
ANR	6669544	ShiftExpression	( dc0 + 4 ) >> 3		6669504	1		>>			
ANR	6669545	AdditiveExpression	dc0 + 4		6669504	0		+			
ANR	6669546	Identifier	dc0		6669504	0					
ANR	6669547	PrimaryExpression	4		6669504	1					
ANR	6669548	PrimaryExpression	3		6669504	1					
ANR	6669549	ForStatement	for ( i = 0 ; i < 8 ; i ++ )		6669504	5					
ANR	6669550	ForInit	i = 0 ;	19:8:202:205	6669504	0	True				
ANR	6669551	AssignmentExpression	i = 0		6669504	0		=			
ANR	6669552	Identifier	i		6669504	0					
ANR	6669553	PrimaryExpression	0		6669504	1					
ANR	6669554	Condition	i < 8	19:13:207:209	6669504	1	True				
ANR	6669555	RelationalExpression	i < 8		6669504	0		<			
ANR	6669556	Identifier	i		6669504	0					
ANR	6669557	PrimaryExpression	8		6669504	1					
ANR	6669558	PostIncDecOperationExpression	i ++	19:18:212:214	6669504	2	True				
ANR	6669559	Identifier	i		6669504	0					
ANR	6669560	IncDec	++		6669504	1					
ANR	6669561	CompoundStatement		19:22:156:156	6669504	3					
ANR	6669562	ExpressionStatement	( ( uint32_t * ) ( src + i * stride ) ) [ 0 ] = ( ( uint32_t * ) ( src + i * stride ) ) [ 1 ] = dc0	21:8:227:303	6669504	0	True				
ANR	6669563	AssignmentExpression	( ( uint32_t * ) ( src + i * stride ) ) [ 0 ] = ( ( uint32_t * ) ( src + i * stride ) ) [ 1 ] = dc0		6669504	0		=			
ANR	6669564	ArrayIndexing	( ( uint32_t * ) ( src + i * stride ) ) [ 0 ]		6669504	0					
ANR	6669565	CastExpression	( uint32_t * ) ( src + i * stride )		6669504	0					
ANR	6669566	CastTarget	uint32_t *		6669504	0					
ANR	6669567	AdditiveExpression	src + i * stride		6669504	1		+			
ANR	6669568	Identifier	src		6669504	0					
ANR	6669569	MultiplicativeExpression	i * stride		6669504	1		*			
ANR	6669570	Identifier	i		6669504	0					
ANR	6669571	Identifier	stride		6669504	1					
ANR	6669572	PrimaryExpression	0		6669504	1					
ANR	6669573	AssignmentExpression	( ( uint32_t * ) ( src + i * stride ) ) [ 1 ] = dc0		6669504	1		=			
ANR	6669574	ArrayIndexing	( ( uint32_t * ) ( src + i * stride ) ) [ 1 ]		6669504	0					
ANR	6669575	CastExpression	( uint32_t * ) ( src + i * stride )		6669504	0					
ANR	6669576	CastTarget	uint32_t *		6669504	0					
ANR	6669577	AdditiveExpression	src + i * stride		6669504	1		+			
ANR	6669578	Identifier	src		6669504	0					
ANR	6669579	MultiplicativeExpression	i * stride		6669504	1		*			
ANR	6669580	Identifier	i		6669504	0					
ANR	6669581	Identifier	stride		6669504	1					
ANR	6669582	PrimaryExpression	1		6669504	1					
ANR	6669583	Identifier	dc0		6669504	1					
ANR	6669584	ReturnType	static void		6669504	1					
ANR	6669585	Identifier	pred8x8_top_dc_rv40_c		6669504	2					
ANR	6669586	ParameterList	"uint8_t * src , int stride"		6669504	3					
ANR	6669587	Parameter	uint8_t * src	1:34:34:45	6669504	0	True				
ANR	6669588	ParameterType	uint8_t *		6669504	0					
ANR	6669589	Identifier	src		6669504	1					
ANR	6669590	Parameter	int stride	1:48:48:57	6669504	1	True				
ANR	6669591	ParameterType	int		6669504	0					
ANR	6669592	Identifier	stride		6669504	1					
ANR	6669593	CFGEntryNode	ENTRY		6669504		True				
ANR	6669594	CFGExitNode	EXIT		6669504		True				
ANR	6669595	Symbol	dc0		6669504						
ANR	6669596	Symbol	* stride		6669504						
ANR	6669597	Symbol	* i		6669504						
ANR	6669598	Symbol	src		6669504						
ANR	6669599	Symbol	i		6669504						
ANR	6669600	Symbol	stride		6669504						
ANR	6669601	Symbol	* src		6669504						
