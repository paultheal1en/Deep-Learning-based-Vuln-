command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5073284	File	/home/p4ultr4n/workplace/ReVeal/raw_code/keyval_parse_one_0.c								
ANR	5073285	Function	keyval_parse_one	1:0:0:2479							
ANR	5073286	FunctionDef	"keyval_parse_one (QDict * qdict , const char * params , const char * implied_key , Error * * errp)"		5073285	0					
ANR	5073287	CompoundStatement		7:0:184:2479	5073285	0					
ANR	5073288	IdentifierDeclStatement	"const char * key , * key_end , * s ;"	9:4:191:220	5073285	0	True				
ANR	5073289	IdentifierDecl	* key		5073285	0					
ANR	5073290	IdentifierDeclType	const char *		5073285	0					
ANR	5073291	Identifier	key		5073285	1					
ANR	5073292	IdentifierDecl	* key_end		5073285	1					
ANR	5073293	IdentifierDeclType	const char *		5073285	0					
ANR	5073294	Identifier	key_end		5073285	1					
ANR	5073295	IdentifierDecl	* s		5073285	2					
ANR	5073296	IdentifierDeclType	const char *		5073285	0					
ANR	5073297	Identifier	s		5073285	1					
ANR	5073298	IdentifierDeclStatement	size_t len ;	11:4:227:237	5073285	1	True				
ANR	5073299	IdentifierDecl	len		5073285	0					
ANR	5073300	IdentifierDeclType	size_t		5073285	0					
ANR	5073301	Identifier	len		5073285	1					
ANR	5073302	IdentifierDeclStatement	char key_in_cur [ 128 ] ;	13:4:244:264	5073285	2	True				
ANR	5073303	IdentifierDecl	key_in_cur [ 128 ]		5073285	0					
ANR	5073304	IdentifierDeclType	char [ 128 ]		5073285	0					
ANR	5073305	Identifier	key_in_cur		5073285	1					
ANR	5073306	PrimaryExpression	128		5073285	2					
ANR	5073307	IdentifierDeclStatement	QDict * cur ;	15:4:271:281	5073285	3	True				
ANR	5073308	IdentifierDecl	* cur		5073285	0					
ANR	5073309	IdentifierDeclType	QDict *		5073285	0					
ANR	5073310	Identifier	cur		5073285	1					
ANR	5073311	IdentifierDeclStatement	QObject * next ;	17:4:288:301	5073285	4	True				
ANR	5073312	IdentifierDecl	* next		5073285	0					
ANR	5073313	IdentifierDeclType	QObject *		5073285	0					
ANR	5073314	Identifier	next		5073285	1					
ANR	5073315	IdentifierDeclStatement	QString * val ;	19:4:308:320	5073285	5	True				
ANR	5073316	IdentifierDecl	* val		5073285	0					
ANR	5073317	IdentifierDeclType	QString *		5073285	0					
ANR	5073318	Identifier	val		5073285	1					
ANR	5073319	ExpressionStatement	key = params	23:4:329:341	5073285	6	True				
ANR	5073320	AssignmentExpression	key = params		5073285	0		=			
ANR	5073321	Identifier	key		5073285	0					
ANR	5073322	Identifier	params		5073285	1					
ANR	5073323	ExpressionStatement	"len = strcspn ( params , ""=,"" )"	25:4:348:375	5073285	7	True				
ANR	5073324	AssignmentExpression	"len = strcspn ( params , ""=,"" )"		5073285	0		=			
ANR	5073325	Identifier	len		5073285	0					
ANR	5073326	CallExpression	"strcspn ( params , ""=,"" )"		5073285	1					
ANR	5073327	Callee	strcspn		5073285	0					
ANR	5073328	Identifier	strcspn		5073285	0					
ANR	5073329	ArgumentList	params		5073285	1					
ANR	5073330	Argument	params		5073285	0					
ANR	5073331	Identifier	params		5073285	0					
ANR	5073332	Argument	"""=,"""		5073285	1					
ANR	5073333	PrimaryExpression	"""=,"""		5073285	0					
ANR	5073334	IfStatement	if ( implied_key && len && key [ len ] != '=' )		5073285	8					
ANR	5073335	Condition	implied_key && len && key [ len ] != '='	27:8:386:422	5073285	0	True				
ANR	5073336	AndExpression	implied_key && len && key [ len ] != '='		5073285	0		&&			
ANR	5073337	Identifier	implied_key		5073285	0					
ANR	5073338	AndExpression	len && key [ len ] != '='		5073285	1		&&			
ANR	5073339	Identifier	len		5073285	0					
ANR	5073340	EqualityExpression	key [ len ] != '='		5073285	1		!=			
ANR	5073341	ArrayIndexing	key [ len ]		5073285	0					
ANR	5073342	Identifier	key		5073285	0					
ANR	5073343	Identifier	len		5073285	1					
ANR	5073344	PrimaryExpression	'='		5073285	1					
ANR	5073345	CompoundStatement		21:47:240:240	5073285	1					
ANR	5073346	ExpressionStatement	key = implied_key	31:8:471:488	5073285	0	True				
ANR	5073347	AssignmentExpression	key = implied_key		5073285	0		=			
ANR	5073348	Identifier	key		5073285	0					
ANR	5073349	Identifier	implied_key		5073285	1					
ANR	5073350	ExpressionStatement	len = strlen ( implied_key )	33:8:499:524	5073285	1	True				
ANR	5073351	AssignmentExpression	len = strlen ( implied_key )		5073285	0		=			
ANR	5073352	Identifier	len		5073285	0					
ANR	5073353	CallExpression	strlen ( implied_key )		5073285	1					
ANR	5073354	Callee	strlen		5073285	0					
ANR	5073355	Identifier	strlen		5073285	0					
ANR	5073356	ArgumentList	implied_key		5073285	1					
ANR	5073357	Argument	implied_key		5073285	0					
ANR	5073358	Identifier	implied_key		5073285	0					
ANR	5073359	ExpressionStatement	key_end = key + len	37:4:538:557	5073285	9	True				
ANR	5073360	AssignmentExpression	key_end = key + len		5073285	0		=			
ANR	5073361	Identifier	key_end		5073285	0					
ANR	5073362	AdditiveExpression	key + len		5073285	1		+			
ANR	5073363	Identifier	key		5073285	0					
ANR	5073364	Identifier	len		5073285	1					
ANR	5073365	ExpressionStatement	cur = qdict	49:4:719:730	5073285	10	True				
ANR	5073366	AssignmentExpression	cur = qdict		5073285	0		=			
ANR	5073367	Identifier	cur		5073285	0					
ANR	5073368	Identifier	qdict		5073285	1					
ANR	5073369	ExpressionStatement	s = key	51:4:737:744	5073285	11	True				
ANR	5073370	AssignmentExpression	s = key		5073285	0		=			
ANR	5073371	Identifier	s		5073285	0					
ANR	5073372	Identifier	key		5073285	1					
ANR	5073373	ForStatement	for ( ; ; )		5073285	12					
ANR	5073374	CompoundStatement		47:13:575:575	5073285	0					
ANR	5073375	ForStatement	for ( len = 0 ; s + len < key_end && s [ len ] != '.' ; len ++ )		5073285	0					
ANR	5073376	ForInit	len = 0 ;	55:13:776:783	5073285	0	True				
ANR	5073377	AssignmentExpression	len = 0		5073285	0		=			
ANR	5073378	Identifier	len		5073285	0					
ANR	5073379	PrimaryExpression	0		5073285	1					
ANR	5073380	Condition	s + len < key_end && s [ len ] != '.'	55:22:785:818	5073285	1	True				
ANR	5073381	AndExpression	s + len < key_end && s [ len ] != '.'		5073285	0		&&			
ANR	5073382	RelationalExpression	s + len < key_end		5073285	0		<			
ANR	5073383	AdditiveExpression	s + len		5073285	0		+			
ANR	5073384	Identifier	s		5073285	0					
ANR	5073385	Identifier	len		5073285	1					
ANR	5073386	Identifier	key_end		5073285	1					
ANR	5073387	EqualityExpression	s [ len ] != '.'		5073285	1		!=			
ANR	5073388	ArrayIndexing	s [ len ]		5073285	0					
ANR	5073389	Identifier	s		5073285	0					
ANR	5073390	Identifier	len		5073285	1					
ANR	5073391	PrimaryExpression	'.'		5073285	1					
ANR	5073392	PostIncDecOperationExpression	len ++	55:58:821:825	5073285	2	True				
ANR	5073393	Identifier	len		5073285	0					
ANR	5073394	IncDec	++		5073285	1					
ANR	5073395	CompoundStatement		49:65:643:643	5073285	3					
ANR	5073396	IfStatement	if ( ! len )		5073285	1					
ANR	5073397	Condition	! len	59:12:854:857	5073285	0	True				
ANR	5073398	UnaryOperationExpression	! len		5073285	0					
ANR	5073399	UnaryOperator	!		5073285	0					
ANR	5073400	Identifier	len		5073285	1					
ANR	5073401	CompoundStatement		53:18:675:675	5073285	1					
ANR	5073402	ExpressionStatement	assert ( key != implied_key )	61:12:875:901	5073285	0	True				
ANR	5073403	CallExpression	assert ( key != implied_key )		5073285	0					
ANR	5073404	Callee	assert		5073285	0					
ANR	5073405	Identifier	assert		5073285	0					
ANR	5073406	ArgumentList	key != implied_key		5073285	1					
ANR	5073407	Argument	key != implied_key		5073285	0					
ANR	5073408	EqualityExpression	key != implied_key		5073285	0		!=			
ANR	5073409	Identifier	key		5073285	0					
ANR	5073410	Identifier	implied_key		5073285	1					
ANR	5073411	ExpressionStatement	"error_setg ( errp , ""Invalid parameter '%.*s'"" , ( int ) ( key_end - key ) , key )"	63:12:916:1011	5073285	1	True				
ANR	5073412	CallExpression	"error_setg ( errp , ""Invalid parameter '%.*s'"" , ( int ) ( key_end - key ) , key )"		5073285	0					
ANR	5073413	Callee	error_setg		5073285	0					
ANR	5073414	Identifier	error_setg		5073285	0					
ANR	5073415	ArgumentList	errp		5073285	1					
ANR	5073416	Argument	errp		5073285	0					
ANR	5073417	Identifier	errp		5073285	0					
ANR	5073418	Argument	"""Invalid parameter '%.*s'"""		5073285	1					
ANR	5073419	PrimaryExpression	"""Invalid parameter '%.*s'"""		5073285	0					
ANR	5073420	Argument	( int ) ( key_end - key )		5073285	2					
ANR	5073421	CastExpression	( int ) ( key_end - key )		5073285	0					
ANR	5073422	CastTarget	int		5073285	0					
ANR	5073423	AdditiveExpression	key_end - key		5073285	1		-			
ANR	5073424	Identifier	key_end		5073285	0					
ANR	5073425	Identifier	key		5073285	1					
ANR	5073426	Argument	key		5073285	3					
ANR	5073427	Identifier	key		5073285	0					
ANR	5073428	ReturnStatement	return NULL ;	67:12:1026:1037	5073285	2	True				
ANR	5073429	Identifier	NULL		5073285	0					
ANR	5073430	IfStatement	if ( len >= sizeof ( key_in_cur ) )		5073285	2					
ANR	5073431	Condition	len >= sizeof ( key_in_cur )	71:12:1063:1087	5073285	0	True				
ANR	5073432	RelationalExpression	len >= sizeof ( key_in_cur )		5073285	0		>=			
ANR	5073433	Identifier	len		5073285	0					
ANR	5073434	SizeofExpression	sizeof ( key_in_cur )		5073285	1					
ANR	5073435	Sizeof	sizeof		5073285	0					
ANR	5073436	SizeofOperand	key_in_cur		5073285	1					
ANR	5073437	CompoundStatement		65:39:905:905	5073285	1					
ANR	5073438	ExpressionStatement	assert ( key != implied_key )	73:12:1105:1131	5073285	0	True				
ANR	5073439	CallExpression	assert ( key != implied_key )		5073285	0					
ANR	5073440	Callee	assert		5073285	0					
ANR	5073441	Identifier	assert		5073285	0					
ANR	5073442	ArgumentList	key != implied_key		5073285	1					
ANR	5073443	Argument	key != implied_key		5073285	0					
ANR	5073444	EqualityExpression	key != implied_key		5073285	0		!=			
ANR	5073445	Identifier	key		5073285	0					
ANR	5073446	Identifier	implied_key		5073285	1					
ANR	5073447	ExpressionStatement	"error_setg ( errp , ""Parameter%s '%.*s' is too long"" , s != key || s + len != key_end ? "" fragment"" : """" , ( int ) len , s )"	75:12:1146:1308	5073285	1	True				
ANR	5073448	CallExpression	"error_setg ( errp , ""Parameter%s '%.*s' is too long"" , s != key || s + len != key_end ? "" fragment"" : """" , ( int ) len , s )"		5073285	0					
ANR	5073449	Callee	error_setg		5073285	0					
ANR	5073450	Identifier	error_setg		5073285	0					
ANR	5073451	ArgumentList	errp		5073285	1					
ANR	5073452	Argument	errp		5073285	0					
ANR	5073453	Identifier	errp		5073285	0					
ANR	5073454	Argument	"""Parameter%s '%.*s' is too long"""		5073285	1					
ANR	5073455	PrimaryExpression	"""Parameter%s '%.*s' is too long"""		5073285	0					
ANR	5073456	Argument	"s != key || s + len != key_end ? "" fragment"" : """""		5073285	2					
ANR	5073457	ConditionalExpression	"s != key || s + len != key_end ? "" fragment"" : """""		5073285	0					
ANR	5073458	Condition	s != key || s + len != key_end		5073285	0					
ANR	5073459	OrExpression	s != key || s + len != key_end		5073285	0		||			
ANR	5073460	EqualityExpression	s != key		5073285	0		!=			
ANR	5073461	Identifier	s		5073285	0					
ANR	5073462	Identifier	key		5073285	1					
ANR	5073463	EqualityExpression	s + len != key_end		5073285	1		!=			
ANR	5073464	AdditiveExpression	s + len		5073285	0		+			
ANR	5073465	Identifier	s		5073285	0					
ANR	5073466	Identifier	len		5073285	1					
ANR	5073467	Identifier	key_end		5073285	1					
ANR	5073468	PrimaryExpression	""" fragment"""		5073285	1					
ANR	5073469	PrimaryExpression	""""""		5073285	2					
ANR	5073470	Argument	( int ) len		5073285	3					
ANR	5073471	CastExpression	( int ) len		5073285	0					
ANR	5073472	CastTarget	int		5073285	0					
ANR	5073473	Identifier	len		5073285	1					
ANR	5073474	Argument	s		5073285	4					
ANR	5073475	Identifier	s		5073285	0					
ANR	5073476	ReturnStatement	return NULL ;	81:12:1323:1334	5073285	2	True				
ANR	5073477	Identifier	NULL		5073285	0					
ANR	5073478	IfStatement	if ( s != key )		5073285	3					
ANR	5073479	Condition	s != key	87:12:1362:1369	5073285	0	True				
ANR	5073480	EqualityExpression	s != key		5073285	0		!=			
ANR	5073481	Identifier	s		5073285	0					
ANR	5073482	Identifier	key		5073285	1					
ANR	5073483	CompoundStatement		81:22:1187:1187	5073285	1					
ANR	5073484	ExpressionStatement	"next = keyval_parse_put ( cur , key_in_cur , NULL , key , s - 1 , errp )"	89:12:1387:1488	5073285	0	True				
ANR	5073485	AssignmentExpression	"next = keyval_parse_put ( cur , key_in_cur , NULL , key , s - 1 , errp )"		5073285	0		=			
ANR	5073486	Identifier	next		5073285	0					
ANR	5073487	CallExpression	"keyval_parse_put ( cur , key_in_cur , NULL , key , s - 1 , errp )"		5073285	1					
ANR	5073488	Callee	keyval_parse_put		5073285	0					
ANR	5073489	Identifier	keyval_parse_put		5073285	0					
ANR	5073490	ArgumentList	cur		5073285	1					
ANR	5073491	Argument	cur		5073285	0					
ANR	5073492	Identifier	cur		5073285	0					
ANR	5073493	Argument	key_in_cur		5073285	1					
ANR	5073494	Identifier	key_in_cur		5073285	0					
ANR	5073495	Argument	NULL		5073285	2					
ANR	5073496	Identifier	NULL		5073285	0					
ANR	5073497	Argument	key		5073285	3					
ANR	5073498	Identifier	key		5073285	0					
ANR	5073499	Argument	s - 1		5073285	4					
ANR	5073500	AdditiveExpression	s - 1		5073285	0		-			
ANR	5073501	Identifier	s		5073285	0					
ANR	5073502	PrimaryExpression	1		5073285	1					
ANR	5073503	Argument	errp		5073285	5					
ANR	5073504	Identifier	errp		5073285	0					
ANR	5073505	IfStatement	if ( ! next )		5073285	1					
ANR	5073506	Condition	! next	93:16:1507:1511	5073285	0	True				
ANR	5073507	UnaryOperationExpression	! next		5073285	0					
ANR	5073508	UnaryOperator	!		5073285	0					
ANR	5073509	Identifier	next		5073285	1					
ANR	5073510	CompoundStatement		87:23:1329:1329	5073285	1					
ANR	5073511	ReturnStatement	return NULL ;	95:16:1533:1544	5073285	0	True				
ANR	5073512	Identifier	NULL		5073285	0					
ANR	5073513	ExpressionStatement	cur = qobject_to_qdict ( next )	99:12:1574:1602	5073285	2	True				
ANR	5073514	AssignmentExpression	cur = qobject_to_qdict ( next )		5073285	0		=			
ANR	5073515	Identifier	cur		5073285	0					
ANR	5073516	CallExpression	qobject_to_qdict ( next )		5073285	1					
ANR	5073517	Callee	qobject_to_qdict		5073285	0					
ANR	5073518	Identifier	qobject_to_qdict		5073285	0					
ANR	5073519	ArgumentList	next		5073285	1					
ANR	5073520	Argument	next		5073285	0					
ANR	5073521	Identifier	next		5073285	0					
ANR	5073522	ExpressionStatement	assert ( cur )	101:12:1617:1628	5073285	3	True				
ANR	5073523	CallExpression	assert ( cur )		5073285	0					
ANR	5073524	Callee	assert		5073285	0					
ANR	5073525	Identifier	assert		5073285	0					
ANR	5073526	ArgumentList	cur		5073285	1					
ANR	5073527	Argument	cur		5073285	0					
ANR	5073528	Identifier	cur		5073285	0					
ANR	5073529	ExpressionStatement	"memcpy ( key_in_cur , s , len )"	107:8:1652:1678	5073285	4	True				
ANR	5073530	CallExpression	"memcpy ( key_in_cur , s , len )"		5073285	0					
ANR	5073531	Callee	memcpy		5073285	0					
ANR	5073532	Identifier	memcpy		5073285	0					
ANR	5073533	ArgumentList	key_in_cur		5073285	1					
ANR	5073534	Argument	key_in_cur		5073285	0					
ANR	5073535	Identifier	key_in_cur		5073285	0					
ANR	5073536	Argument	s		5073285	1					
ANR	5073537	Identifier	s		5073285	0					
ANR	5073538	Argument	len		5073285	2					
ANR	5073539	Identifier	len		5073285	0					
ANR	5073540	ExpressionStatement	key_in_cur [ len ] = 0	109:8:1689:1708	5073285	5	True				
ANR	5073541	AssignmentExpression	key_in_cur [ len ] = 0		5073285	0		=			
ANR	5073542	ArrayIndexing	key_in_cur [ len ]		5073285	0					
ANR	5073543	Identifier	key_in_cur		5073285	0					
ANR	5073544	Identifier	len		5073285	1					
ANR	5073545	PrimaryExpression	0		5073285	1					
ANR	5073546	ExpressionStatement	s += len	111:8:1719:1727	5073285	6	True				
ANR	5073547	AssignmentExpression	s += len		5073285	0		+=			
ANR	5073548	Identifier	s		5073285	0					
ANR	5073549	Identifier	len		5073285	1					
ANR	5073550	IfStatement	if ( * s != '.' )		5073285	7					
ANR	5073551	Condition	* s != '.'	115:12:1744:1752	5073285	0	True				
ANR	5073552	EqualityExpression	* s != '.'		5073285	0		!=			
ANR	5073553	UnaryOperationExpression	* s		5073285	0					
ANR	5073554	UnaryOperator	*		5073285	0					
ANR	5073555	Identifier	s		5073285	1					
ANR	5073556	PrimaryExpression	'.'		5073285	1					
ANR	5073557	CompoundStatement		109:23:1570:1570	5073285	1					
ANR	5073558	BreakStatement	break ;	117:12:1770:1775	5073285	0	True				
ANR	5073559	ExpressionStatement	s ++	121:8:1797:1800	5073285	8	True				
ANR	5073560	PostIncDecOperationExpression	s ++		5073285	0					
ANR	5073561	Identifier	s		5073285	0					
ANR	5073562	IncDec	++		5073285	1					
ANR	5073563	IfStatement	if ( key == implied_key )		5073285	13					
ANR	5073564	Condition	key == implied_key	127:8:1820:1837	5073285	0	True				
ANR	5073565	EqualityExpression	key == implied_key		5073285	0		==			
ANR	5073566	Identifier	key		5073285	0					
ANR	5073567	Identifier	implied_key		5073285	1					
ANR	5073568	CompoundStatement		121:28:1655:1655	5073285	1					
ANR	5073569	ExpressionStatement	assert ( ! * s )	129:8:1851:1862	5073285	0	True				
ANR	5073570	CallExpression	assert ( ! * s )		5073285	0					
ANR	5073571	Callee	assert		5073285	0					
ANR	5073572	Identifier	assert		5073285	0					
ANR	5073573	ArgumentList	! * s		5073285	1					
ANR	5073574	Argument	! * s		5073285	0					
ANR	5073575	UnaryOperationExpression	! * s		5073285	0					
ANR	5073576	UnaryOperator	!		5073285	0					
ANR	5073577	UnaryOperationExpression	* s		5073285	1					
ANR	5073578	UnaryOperator	*		5073285	0					
ANR	5073579	Identifier	s		5073285	1					
ANR	5073580	ExpressionStatement	s = params	131:8:1873:1883	5073285	1	True				
ANR	5073581	AssignmentExpression	s = params		5073285	0		=			
ANR	5073582	Identifier	s		5073285	0					
ANR	5073583	Identifier	params		5073285	1					
ANR	5073584	ElseStatement	else		5073285	0					
ANR	5073585	CompoundStatement		127:11:1712:1712	5073285	0					
ANR	5073586	IfStatement	if ( * s != '=' )		5073285	0					
ANR	5073587	Condition	* s != '='	135:12:1912:1920	5073285	0	True				
ANR	5073588	EqualityExpression	* s != '='		5073285	0		!=			
ANR	5073589	UnaryOperationExpression	* s		5073285	0					
ANR	5073590	UnaryOperator	*		5073285	0					
ANR	5073591	Identifier	s		5073285	1					
ANR	5073592	PrimaryExpression	'='		5073285	1					
ANR	5073593	CompoundStatement		129:23:1738:1738	5073285	1					
ANR	5073594	ExpressionStatement	"error_setg ( errp , ""Expected '=' after parameter '%.*s'"" , ( int ) ( s - key ) , key )"	137:12:1938:2038	5073285	0	True				
ANR	5073595	CallExpression	"error_setg ( errp , ""Expected '=' after parameter '%.*s'"" , ( int ) ( s - key ) , key )"		5073285	0					
ANR	5073596	Callee	error_setg		5073285	0					
ANR	5073597	Identifier	error_setg		5073285	0					
ANR	5073598	ArgumentList	errp		5073285	1					
ANR	5073599	Argument	errp		5073285	0					
ANR	5073600	Identifier	errp		5073285	0					
ANR	5073601	Argument	"""Expected '=' after parameter '%.*s'"""		5073285	1					
ANR	5073602	PrimaryExpression	"""Expected '=' after parameter '%.*s'"""		5073285	0					
ANR	5073603	Argument	( int ) ( s - key )		5073285	2					
ANR	5073604	CastExpression	( int ) ( s - key )		5073285	0					
ANR	5073605	CastTarget	int		5073285	0					
ANR	5073606	AdditiveExpression	s - key		5073285	1		-			
ANR	5073607	Identifier	s		5073285	0					
ANR	5073608	Identifier	key		5073285	1					
ANR	5073609	Argument	key		5073285	3					
ANR	5073610	Identifier	key		5073285	0					
ANR	5073611	ReturnStatement	return NULL ;	141:12:2053:2064	5073285	1	True				
ANR	5073612	Identifier	NULL		5073285	0					
ANR	5073613	ExpressionStatement	s ++	145:8:2086:2089	5073285	1	True				
ANR	5073614	PostIncDecOperationExpression	s ++		5073285	0					
ANR	5073615	Identifier	s		5073285	0					
ANR	5073616	IncDec	++		5073285	1					
ANR	5073617	ExpressionStatement	val = qstring_new ( )	151:4:2105:2124	5073285	14	True				
ANR	5073618	AssignmentExpression	val = qstring_new ( )		5073285	0		=			
ANR	5073619	Identifier	val		5073285	0					
ANR	5073620	CallExpression	qstring_new ( )		5073285	1					
ANR	5073621	Callee	qstring_new		5073285	0					
ANR	5073622	Identifier	qstring_new		5073285	0					
ANR	5073623	ArgumentList			5073285	1					
ANR	5073624	ForStatement	for ( ; ; )		5073285	15					
ANR	5073625	CompoundStatement		147:13:1955:1955	5073285	0					
ANR	5073626	IfStatement	if ( ! * s )		5073285	0					
ANR	5073627	Condition	! * s	155:12:2155:2157	5073285	0	True				
ANR	5073628	UnaryOperationExpression	! * s		5073285	0					
ANR	5073629	UnaryOperator	!		5073285	0					
ANR	5073630	UnaryOperationExpression	* s		5073285	1					
ANR	5073631	UnaryOperator	*		5073285	0					
ANR	5073632	Identifier	s		5073285	1					
ANR	5073633	CompoundStatement		149:17:1975:1975	5073285	1					
ANR	5073634	BreakStatement	break ;	157:12:2175:2180	5073285	0	True				
ANR	5073635	ElseStatement	else		5073285	0					
ANR	5073636	IfStatement	"if ( * s == ',' )"		5073285	0					
ANR	5073637	Condition	"* s == ','"	159:19:2202:2210	5073285	0	True				
ANR	5073638	EqualityExpression	"* s == ','"		5073285	0		==			
ANR	5073639	UnaryOperationExpression	* s		5073285	0					
ANR	5073640	UnaryOperator	*		5073285	0					
ANR	5073641	Identifier	s		5073285	1					
ANR	5073642	PrimaryExpression	"','"		5073285	1					
ANR	5073643	CompoundStatement		153:30:2028:2028	5073285	1					
ANR	5073644	ExpressionStatement	s ++	161:12:2228:2231	5073285	0	True				
ANR	5073645	PostIncDecOperationExpression	s ++		5073285	0					
ANR	5073646	Identifier	s		5073285	0					
ANR	5073647	IncDec	++		5073285	1					
ANR	5073648	IfStatement	"if ( * s != ',' )"		5073285	1					
ANR	5073649	Condition	"* s != ','"	163:16:2250:2258	5073285	0	True				
ANR	5073650	EqualityExpression	"* s != ','"		5073285	0		!=			
ANR	5073651	UnaryOperationExpression	* s		5073285	0					
ANR	5073652	UnaryOperator	*		5073285	0					
ANR	5073653	Identifier	s		5073285	1					
ANR	5073654	PrimaryExpression	"','"		5073285	1					
ANR	5073655	CompoundStatement		157:27:2076:2076	5073285	1					
ANR	5073656	BreakStatement	break ;	165:16:2280:2285	5073285	0	True				
ANR	5073657	ExpressionStatement	"qstring_append_chr ( val , * s ++ )"	171:8:2322:2351	5073285	1	True				
ANR	5073658	CallExpression	"qstring_append_chr ( val , * s ++ )"		5073285	0					
ANR	5073659	Callee	qstring_append_chr		5073285	0					
ANR	5073660	Identifier	qstring_append_chr		5073285	0					
ANR	5073661	ArgumentList	val		5073285	1					
ANR	5073662	Argument	val		5073285	0					
ANR	5073663	Identifier	val		5073285	0					
ANR	5073664	Argument	* s ++		5073285	1					
ANR	5073665	UnaryOperationExpression	* s ++		5073285	0					
ANR	5073666	UnaryOperator	*		5073285	0					
ANR	5073667	PostIncDecOperationExpression	s ++		5073285	1					
ANR	5073668	Identifier	s		5073285	0					
ANR	5073669	IncDec	++		5073285	1					
ANR	5073670	IfStatement	"if ( ! keyval_parse_put ( cur , key_in_cur , val , key , key_end , errp ) )"		5073285	16					
ANR	5073671	Condition	"! keyval_parse_put ( cur , key_in_cur , val , key , key_end , errp )"	177:8:2371:2429	5073285	0	True				
ANR	5073672	UnaryOperationExpression	"! keyval_parse_put ( cur , key_in_cur , val , key , key_end , errp )"		5073285	0					
ANR	5073673	UnaryOperator	!		5073285	0					
ANR	5073674	CallExpression	"keyval_parse_put ( cur , key_in_cur , val , key , key_end , errp )"		5073285	1					
ANR	5073675	Callee	keyval_parse_put		5073285	0					
ANR	5073676	Identifier	keyval_parse_put		5073285	0					
ANR	5073677	ArgumentList	cur		5073285	1					
ANR	5073678	Argument	cur		5073285	0					
ANR	5073679	Identifier	cur		5073285	0					
ANR	5073680	Argument	key_in_cur		5073285	1					
ANR	5073681	Identifier	key_in_cur		5073285	0					
ANR	5073682	Argument	val		5073285	2					
ANR	5073683	Identifier	val		5073285	0					
ANR	5073684	Argument	key		5073285	3					
ANR	5073685	Identifier	key		5073285	0					
ANR	5073686	Argument	key_end		5073285	4					
ANR	5073687	Identifier	key_end		5073285	0					
ANR	5073688	Argument	errp		5073285	5					
ANR	5073689	Identifier	errp		5073285	0					
ANR	5073690	CompoundStatement		171:69:2247:2247	5073285	1					
ANR	5073691	ReturnStatement	return NULL ;	179:8:2443:2454	5073285	0	True				
ANR	5073692	Identifier	NULL		5073285	0					
ANR	5073693	ReturnStatement	return s ;	183:4:2468:2476	5073285	17	True				
ANR	5073694	Identifier	s		5073285	0					
ANR	5073695	ReturnType	static const char *		5073285	1					
ANR	5073696	Identifier	keyval_parse_one		5073285	2					
ANR	5073697	ParameterList	"QDict * qdict , const char * params , const char * implied_key , Error * * errp"		5073285	3					
ANR	5073698	Parameter	QDict * qdict	1:36:36:47	5073285	0	True				
ANR	5073699	ParameterType	QDict *		5073285	0					
ANR	5073700	Identifier	qdict		5073285	1					
ANR	5073701	Parameter	const char * params	1:50:50:67	5073285	1	True				
ANR	5073702	ParameterType	const char *		5073285	0					
ANR	5073703	Identifier	params		5073285	1					
ANR	5073704	Parameter	const char * implied_key	3:36:107:129	5073285	2	True				
ANR	5073705	ParameterType	const char *		5073285	0					
ANR	5073706	Identifier	implied_key		5073285	1					
ANR	5073707	Parameter	Error * * errp	5:36:169:180	5073285	3	True				
ANR	5073708	ParameterType	Error * *		5073285	0					
ANR	5073709	Identifier	errp		5073285	1					
ANR	5073710	CFGEntryNode	ENTRY		5073285		True				
ANR	5073711	CFGExitNode	EXIT		5073285		True				
ANR	5073712	InfiniteForNode	true		5073285		True				
ANR	5073713	InfiniteForNode	true		5073285		True				
ANR	5073714	Symbol	qdict		5073285						
ANR	5073715	Symbol	next		5073285						
ANR	5073716	Symbol	val		5073285						
ANR	5073717	Symbol	* s ++		5073285						
ANR	5073718	Symbol	cur		5073285						
ANR	5073719	Symbol	NULL		5073285						
ANR	5073720	Symbol	errp		5073285						
ANR	5073721	Symbol	* key		5073285						
ANR	5073722	Symbol	params		5073285						
ANR	5073723	Symbol	strcspn		5073285						
ANR	5073724	Symbol	* key_in_cur		5073285						
ANR	5073725	Symbol	key_end		5073285						
ANR	5073726	Symbol	key_in_cur		5073285						
ANR	5073727	Symbol	strlen		5073285						
ANR	5073728	Symbol	s		5073285						
ANR	5073729	Symbol	qobject_to_qdict		5073285						
ANR	5073730	Symbol	len		5073285						
ANR	5073731	Symbol	keyval_parse_put		5073285						
ANR	5073732	Symbol	qstring_new		5073285						
ANR	5073733	Symbol	* s		5073285						
ANR	5073734	Symbol	key		5073285						
ANR	5073735	Symbol	implied_key		5073285						
ANR	5073736	Symbol	* len		5073285						
