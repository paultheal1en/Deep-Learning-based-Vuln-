command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6814834	File	/home/p4ultr4n/workplace/ReVeal/raw_code/pxr24_uncompress_1.c								
ANR	6814835	Function	pxr24_uncompress	1:0:0:2942							
ANR	6814836	FunctionDef	"pxr24_uncompress (EXRContext * s , const uint8_t * src , int compressed_size , int uncompressed_size , EXRThreadData * td)"		6814835	0					
ANR	6814837	CompoundStatement		7:0:185:2942	6814835	0					
ANR	6814838	IdentifierDeclStatement	"unsigned long dest_len , expected_len = 0 ;"	9:4:192:232	6814835	0	True				
ANR	6814839	IdentifierDecl	dest_len		6814835	0					
ANR	6814840	IdentifierDeclType	unsigned long		6814835	0					
ANR	6814841	Identifier	dest_len		6814835	1					
ANR	6814842	IdentifierDecl	expected_len = 0		6814835	1					
ANR	6814843	IdentifierDeclType	unsigned long		6814835	0					
ANR	6814844	Identifier	expected_len		6814835	1					
ANR	6814845	AssignmentExpression	expected_len = 0		6814835	2		=			
ANR	6814846	Identifier	expected_len		6814835	0					
ANR	6814847	PrimaryExpression	0		6814835	1					
ANR	6814848	IdentifierDeclStatement	const uint8_t * in = td -> tmp ;	11:4:239:266	6814835	1	True				
ANR	6814849	IdentifierDecl	* in = td -> tmp		6814835	0					
ANR	6814850	IdentifierDeclType	const uint8_t *		6814835	0					
ANR	6814851	Identifier	in		6814835	1					
ANR	6814852	AssignmentExpression	* in = td -> tmp		6814835	2		=			
ANR	6814853	Identifier	in		6814835	0					
ANR	6814854	PtrMemberAccess	td -> tmp		6814835	1					
ANR	6814855	Identifier	td		6814835	0					
ANR	6814856	Identifier	tmp		6814835	1					
ANR	6814857	IdentifierDeclStatement	uint8_t * out ;	13:4:273:285	6814835	2	True				
ANR	6814858	IdentifierDecl	* out		6814835	0					
ANR	6814859	IdentifierDeclType	uint8_t *		6814835	0					
ANR	6814860	Identifier	out		6814835	1					
ANR	6814861	IdentifierDeclStatement	"int c , i , j ;"	15:4:292:303	6814835	3	True				
ANR	6814862	IdentifierDecl	c		6814835	0					
ANR	6814863	IdentifierDeclType	int		6814835	0					
ANR	6814864	Identifier	c		6814835	1					
ANR	6814865	IdentifierDecl	i		6814835	1					
ANR	6814866	IdentifierDeclType	int		6814835	0					
ANR	6814867	Identifier	i		6814835	1					
ANR	6814868	IdentifierDecl	j		6814835	2					
ANR	6814869	IdentifierDeclType	int		6814835	0					
ANR	6814870	Identifier	j		6814835	1					
ANR	6814871	ForStatement	for ( i = 0 ; i < s -> nb_channels ; i ++ )		6814835	4					
ANR	6814872	ForInit	i = 0 ;	19:9:317:322	6814835	0	True				
ANR	6814873	AssignmentExpression	i = 0		6814835	0		=			
ANR	6814874	Identifier	i		6814835	0					
ANR	6814875	PrimaryExpression	0		6814835	1					
ANR	6814876	Condition	i < s -> nb_channels	19:16:324:341	6814835	1	True				
ANR	6814877	RelationalExpression	i < s -> nb_channels		6814835	0		<			
ANR	6814878	Identifier	i		6814835	0					
ANR	6814879	PtrMemberAccess	s -> nb_channels		6814835	1					
ANR	6814880	Identifier	s		6814835	0					
ANR	6814881	Identifier	nb_channels		6814835	1					
ANR	6814882	PostIncDecOperationExpression	i ++	19:36:344:346	6814835	2	True				
ANR	6814883	Identifier	i		6814835	0					
ANR	6814884	IncDec	++		6814835	1					
ANR	6814885	CompoundStatement		13:41:163:163	6814835	3					
ANR	6814886	IfStatement	if ( s -> channels [ i ] . pixel_type == EXR_FLOAT )		6814835	0					
ANR	6814887	Condition	s -> channels [ i ] . pixel_type == EXR_FLOAT	21:12:364:401	6814835	0	True				
ANR	6814888	EqualityExpression	s -> channels [ i ] . pixel_type == EXR_FLOAT		6814835	0		==			
ANR	6814889	MemberAccess	s -> channels [ i ] . pixel_type		6814835	0					
ANR	6814890	ArrayIndexing	s -> channels [ i ]		6814835	0					
ANR	6814891	PtrMemberAccess	s -> channels		6814835	0					
ANR	6814892	Identifier	s		6814835	0					
ANR	6814893	Identifier	channels		6814835	1					
ANR	6814894	Identifier	i		6814835	1					
ANR	6814895	Identifier	pixel_type		6814835	1					
ANR	6814896	Identifier	EXR_FLOAT		6814835	1					
ANR	6814897	CompoundStatement		15:52:218:218	6814835	1					
ANR	6814898	ExpressionStatement	expected_len += ( td -> xsize * td -> ysize * 3 )	23:12:419:462	6814835	0	True				
ANR	6814899	AssignmentExpression	expected_len += ( td -> xsize * td -> ysize * 3 )		6814835	0		+=			
ANR	6814900	Identifier	expected_len		6814835	0					
ANR	6814901	MultiplicativeExpression	td -> xsize * td -> ysize * 3		6814835	1		*			
ANR	6814902	PtrMemberAccess	td -> xsize		6814835	0					
ANR	6814903	Identifier	td		6814835	0					
ANR	6814904	Identifier	xsize		6814835	1					
ANR	6814905	MultiplicativeExpression	td -> ysize * 3		6814835	1		*			
ANR	6814906	PtrMemberAccess	td -> ysize		6814835	0					
ANR	6814907	Identifier	td		6814835	0					
ANR	6814908	Identifier	ysize		6814835	1					
ANR	6814909	PrimaryExpression	3		6814835	1					
ANR	6814910	ElseStatement	else		6814835	0					
ANR	6814911	IfStatement	if ( s -> channels [ i ] . pixel_type == EXR_HALF )		6814835	0					
ANR	6814912	Condition	s -> channels [ i ] . pixel_type == EXR_HALF	25:19:532:568	6814835	0	True				
ANR	6814913	EqualityExpression	s -> channels [ i ] . pixel_type == EXR_HALF		6814835	0		==			
ANR	6814914	MemberAccess	s -> channels [ i ] . pixel_type		6814835	0					
ANR	6814915	ArrayIndexing	s -> channels [ i ]		6814835	0					
ANR	6814916	PtrMemberAccess	s -> channels		6814835	0					
ANR	6814917	Identifier	s		6814835	0					
ANR	6814918	Identifier	channels		6814835	1					
ANR	6814919	Identifier	i		6814835	1					
ANR	6814920	Identifier	pixel_type		6814835	1					
ANR	6814921	Identifier	EXR_HALF		6814835	1					
ANR	6814922	CompoundStatement		19:58:385:385	6814835	1					
ANR	6814923	ExpressionStatement	expected_len += ( td -> xsize * td -> ysize * 2 )	27:12:586:629	6814835	0	True				
ANR	6814924	AssignmentExpression	expected_len += ( td -> xsize * td -> ysize * 2 )		6814835	0		+=			
ANR	6814925	Identifier	expected_len		6814835	0					
ANR	6814926	MultiplicativeExpression	td -> xsize * td -> ysize * 2		6814835	1		*			
ANR	6814927	PtrMemberAccess	td -> xsize		6814835	0					
ANR	6814928	Identifier	td		6814835	0					
ANR	6814929	Identifier	xsize		6814835	1					
ANR	6814930	MultiplicativeExpression	td -> ysize * 2		6814835	1		*			
ANR	6814931	PtrMemberAccess	td -> ysize		6814835	0					
ANR	6814932	Identifier	td		6814835	0					
ANR	6814933	Identifier	ysize		6814835	1					
ANR	6814934	PrimaryExpression	2		6814835	1					
ANR	6814935	ElseStatement	else		6814835	0					
ANR	6814936	CompoundStatement		23:15:461:461	6814835	0					
ANR	6814937	ExpressionStatement	expected_len += ( td -> xsize * td -> ysize * 4 )	31:12:671:714	6814835	0	True				
ANR	6814938	AssignmentExpression	expected_len += ( td -> xsize * td -> ysize * 4 )		6814835	0		+=			
ANR	6814939	Identifier	expected_len		6814835	0					
ANR	6814940	MultiplicativeExpression	td -> xsize * td -> ysize * 4		6814835	1		*			
ANR	6814941	PtrMemberAccess	td -> xsize		6814835	0					
ANR	6814942	Identifier	td		6814835	0					
ANR	6814943	Identifier	xsize		6814835	1					
ANR	6814944	MultiplicativeExpression	td -> ysize * 4		6814835	1		*			
ANR	6814945	PtrMemberAccess	td -> ysize		6814835	0					
ANR	6814946	Identifier	td		6814835	0					
ANR	6814947	Identifier	ysize		6814835	1					
ANR	6814948	PrimaryExpression	4		6814835	1					
ANR	6814949	ExpressionStatement	dest_len = expected_len	39:4:741:764	6814835	5	True				
ANR	6814950	AssignmentExpression	dest_len = expected_len		6814835	0		=			
ANR	6814951	Identifier	dest_len		6814835	0					
ANR	6814952	Identifier	expected_len		6814835	1					
ANR	6814953	IfStatement	"if ( uncompress ( td -> tmp , & dest_len , src , compressed_size ) != Z_OK )"		6814835	6					
ANR	6814954	Condition	"uncompress ( td -> tmp , & dest_len , src , compressed_size ) != Z_OK"	43:8:777:836	6814835	0	True				
ANR	6814955	EqualityExpression	"uncompress ( td -> tmp , & dest_len , src , compressed_size ) != Z_OK"		6814835	0		!=			
ANR	6814956	CallExpression	"uncompress ( td -> tmp , & dest_len , src , compressed_size )"		6814835	0					
ANR	6814957	Callee	uncompress		6814835	0					
ANR	6814958	Identifier	uncompress		6814835	0					
ANR	6814959	ArgumentList	td -> tmp		6814835	1					
ANR	6814960	Argument	td -> tmp		6814835	0					
ANR	6814961	PtrMemberAccess	td -> tmp		6814835	0					
ANR	6814962	Identifier	td		6814835	0					
ANR	6814963	Identifier	tmp		6814835	1					
ANR	6814964	Argument	& dest_len		6814835	1					
ANR	6814965	UnaryOperationExpression	& dest_len		6814835	0					
ANR	6814966	UnaryOperator	&		6814835	0					
ANR	6814967	Identifier	dest_len		6814835	1					
ANR	6814968	Argument	src		6814835	2					
ANR	6814969	Identifier	src		6814835	0					
ANR	6814970	Argument	compressed_size		6814835	3					
ANR	6814971	Identifier	compressed_size		6814835	0					
ANR	6814972	Identifier	Z_OK		6814835	1					
ANR	6814973	CompoundStatement		37:70:653:653	6814835	1					
ANR	6814974	ReturnStatement	return AVERROR_INVALIDDATA ;	45:8:850:876	6814835	0	True				
ANR	6814975	Identifier	AVERROR_INVALIDDATA		6814835	0					
ANR	6814976	ElseStatement	else		6814835	0					
ANR	6814977	IfStatement	if ( dest_len != expected_len )		6814835	0					
ANR	6814978	Condition	dest_len != expected_len	47:15:894:917	6814835	0	True				
ANR	6814979	EqualityExpression	dest_len != expected_len		6814835	0		!=			
ANR	6814980	Identifier	dest_len		6814835	0					
ANR	6814981	Identifier	expected_len		6814835	1					
ANR	6814982	CompoundStatement		41:41:734:734	6814835	1					
ANR	6814983	ReturnStatement	return AVERROR_INVALIDDATA ;	49:8:931:957	6814835	0	True				
ANR	6814984	Identifier	AVERROR_INVALIDDATA		6814835	0					
ANR	6814985	ExpressionStatement	out = td -> uncompressed_data	55:4:973:1000	6814835	7	True				
ANR	6814986	AssignmentExpression	out = td -> uncompressed_data		6814835	0		=			
ANR	6814987	Identifier	out		6814835	0					
ANR	6814988	PtrMemberAccess	td -> uncompressed_data		6814835	1					
ANR	6814989	Identifier	td		6814835	0					
ANR	6814990	Identifier	uncompressed_data		6814835	1					
ANR	6814991	ForStatement	for ( i = 0 ; i < td -> ysize ; i ++ )		6814835	8					
ANR	6814992	ForInit	i = 0 ;	57:9:1012:1017	6814835	0	True				
ANR	6814993	AssignmentExpression	i = 0		6814835	0		=			
ANR	6814994	Identifier	i		6814835	0					
ANR	6814995	PrimaryExpression	0		6814835	1					
ANR	6814996	Condition	i < td -> ysize	57:16:1019:1031	6814835	1	True				
ANR	6814997	RelationalExpression	i < td -> ysize		6814835	0		<			
ANR	6814998	Identifier	i		6814835	0					
ANR	6814999	PtrMemberAccess	td -> ysize		6814835	1					
ANR	6815000	Identifier	td		6814835	0					
ANR	6815001	Identifier	ysize		6814835	1					
ANR	6815002	PostIncDecOperationExpression	i ++	57:31:1034:1036	6814835	2	True				
ANR	6815003	Identifier	i		6814835	0					
ANR	6815004	IncDec	++		6814835	1					
ANR	6815005	ForStatement	for ( c = 0 ; c < s -> nb_channels ; c ++ )		6814835	3					
ANR	6815006	ForInit	c = 0 ;	59:13:1053:1058	6814835	0	True				
ANR	6815007	AssignmentExpression	c = 0		6814835	0		=			
ANR	6815008	Identifier	c		6814835	0					
ANR	6815009	PrimaryExpression	0		6814835	1					
ANR	6815010	Condition	c < s -> nb_channels	59:20:1060:1077	6814835	1	True				
ANR	6815011	RelationalExpression	c < s -> nb_channels		6814835	0		<			
ANR	6815012	Identifier	c		6814835	0					
ANR	6815013	PtrMemberAccess	s -> nb_channels		6814835	1					
ANR	6815014	Identifier	s		6814835	0					
ANR	6815015	Identifier	nb_channels		6814835	1					
ANR	6815016	PostIncDecOperationExpression	c ++	59:40:1080:1082	6814835	2	True				
ANR	6815017	Identifier	c		6814835	0					
ANR	6815018	IncDec	++		6814835	1					
ANR	6815019	CompoundStatement		59:12:1002:1020	6814835	3					
ANR	6815020	IdentifierDeclStatement	EXRChannel * channel = & s -> channels [ c ] ;	61:12:1100:1137	6814835	0	True				
ANR	6815021	IdentifierDecl	* channel = & s -> channels [ c ]		6814835	0					
ANR	6815022	IdentifierDeclType	EXRChannel *		6814835	0					
ANR	6815023	Identifier	channel		6814835	1					
ANR	6815024	AssignmentExpression	* channel = & s -> channels [ c ]		6814835	2		=			
ANR	6815025	Identifier	channel		6814835	0					
ANR	6815026	UnaryOperationExpression	& s -> channels [ c ]		6814835	1					
ANR	6815027	UnaryOperator	&		6814835	0					
ANR	6815028	ArrayIndexing	s -> channels [ c ]		6814835	1					
ANR	6815029	PtrMemberAccess	s -> channels		6814835	0					
ANR	6815030	Identifier	s		6814835	0					
ANR	6815031	Identifier	channels		6814835	1					
ANR	6815032	Identifier	c		6814835	1					
ANR	6815033	IdentifierDeclStatement	const uint8_t * ptr [ 4 ] ;	63:12:1152:1173	6814835	1	True				
ANR	6815034	IdentifierDecl	* ptr [ 4 ]		6814835	0					
ANR	6815035	IdentifierDeclType	const uint8_t * [ 4 ]		6814835	0					
ANR	6815036	Identifier	ptr		6814835	1					
ANR	6815037	PrimaryExpression	4		6814835	2					
ANR	6815038	IdentifierDeclStatement	uint32_t pixel = 0 ;	65:12:1188:1206	6814835	2	True				
ANR	6815039	IdentifierDecl	pixel = 0		6814835	0					
ANR	6815040	IdentifierDeclType	uint32_t		6814835	0					
ANR	6815041	Identifier	pixel		6814835	1					
ANR	6815042	AssignmentExpression	pixel = 0		6814835	2		=			
ANR	6815043	Identifier	pixel		6814835	0					
ANR	6815044	PrimaryExpression	0		6814835	1					
ANR	6815045	SwitchStatement	switch ( channel -> pixel_type )		6814835	3					
ANR	6815046	Condition	channel -> pixel_type	69:20:1231:1249	6814835	0	True				
ANR	6815047	PtrMemberAccess	channel -> pixel_type		6814835	0					
ANR	6815048	Identifier	channel		6814835	0					
ANR	6815049	Identifier	pixel_type		6814835	1					
ANR	6815050	CompoundStatement		63:41:1066:1066	6814835	1					
ANR	6815051	Label	case EXR_FLOAT :	71:12:1267:1281	6814835	0	True				
ANR	6815052	Identifier	EXR_FLOAT		6814835	0					
ANR	6815053	ExpressionStatement	ptr [ 0 ] = in	73:16:1300:1311	6814835	1	True				
ANR	6815054	AssignmentExpression	ptr [ 0 ] = in		6814835	0		=			
ANR	6815055	ArrayIndexing	ptr [ 0 ]		6814835	0					
ANR	6815056	Identifier	ptr		6814835	0					
ANR	6815057	PrimaryExpression	0		6814835	1					
ANR	6815058	Identifier	in		6814835	1					
ANR	6815059	ExpressionStatement	ptr [ 1 ] = ptr [ 0 ] + td -> xsize	75:16:1330:1357	6814835	2	True				
ANR	6815060	AssignmentExpression	ptr [ 1 ] = ptr [ 0 ] + td -> xsize		6814835	0		=			
ANR	6815061	ArrayIndexing	ptr [ 1 ]		6814835	0					
ANR	6815062	Identifier	ptr		6814835	0					
ANR	6815063	PrimaryExpression	1		6814835	1					
ANR	6815064	AdditiveExpression	ptr [ 0 ] + td -> xsize		6814835	1		+			
ANR	6815065	ArrayIndexing	ptr [ 0 ]		6814835	0					
ANR	6815066	Identifier	ptr		6814835	0					
ANR	6815067	PrimaryExpression	0		6814835	1					
ANR	6815068	PtrMemberAccess	td -> xsize		6814835	1					
ANR	6815069	Identifier	td		6814835	0					
ANR	6815070	Identifier	xsize		6814835	1					
ANR	6815071	ExpressionStatement	ptr [ 2 ] = ptr [ 1 ] + td -> xsize	77:16:1376:1403	6814835	3	True				
ANR	6815072	AssignmentExpression	ptr [ 2 ] = ptr [ 1 ] + td -> xsize		6814835	0		=			
ANR	6815073	ArrayIndexing	ptr [ 2 ]		6814835	0					
ANR	6815074	Identifier	ptr		6814835	0					
ANR	6815075	PrimaryExpression	2		6814835	1					
ANR	6815076	AdditiveExpression	ptr [ 1 ] + td -> xsize		6814835	1		+			
ANR	6815077	ArrayIndexing	ptr [ 1 ]		6814835	0					
ANR	6815078	Identifier	ptr		6814835	0					
ANR	6815079	PrimaryExpression	1		6814835	1					
ANR	6815080	PtrMemberAccess	td -> xsize		6814835	1					
ANR	6815081	Identifier	td		6814835	0					
ANR	6815082	Identifier	xsize		6814835	1					
ANR	6815083	ExpressionStatement	in = ptr [ 2 ] + td -> xsize	79:16:1422:1449	6814835	4	True				
ANR	6815084	AssignmentExpression	in = ptr [ 2 ] + td -> xsize		6814835	0		=			
ANR	6815085	Identifier	in		6814835	0					
ANR	6815086	AdditiveExpression	ptr [ 2 ] + td -> xsize		6814835	1		+			
ANR	6815087	ArrayIndexing	ptr [ 2 ]		6814835	0					
ANR	6815088	Identifier	ptr		6814835	0					
ANR	6815089	PrimaryExpression	2		6814835	1					
ANR	6815090	PtrMemberAccess	td -> xsize		6814835	1					
ANR	6815091	Identifier	td		6814835	0					
ANR	6815092	Identifier	xsize		6814835	1					
ANR	6815093	ForStatement	for ( j = 0 ; j < td -> xsize ; ++ j )		6814835	5					
ANR	6815094	ForInit	j = 0 ;	83:21:1475:1480	6814835	0	True				
ANR	6815095	AssignmentExpression	j = 0		6814835	0		=			
ANR	6815096	Identifier	j		6814835	0					
ANR	6815097	PrimaryExpression	0		6814835	1					
ANR	6815098	Condition	j < td -> xsize	83:28:1482:1494	6814835	1	True				
ANR	6815099	RelationalExpression	j < td -> xsize		6814835	0		<			
ANR	6815100	Identifier	j		6814835	0					
ANR	6815101	PtrMemberAccess	td -> xsize		6814835	1					
ANR	6815102	Identifier	td		6814835	0					
ANR	6815103	Identifier	xsize		6814835	1					
ANR	6815104	UnaryExpression	++ j	83:43:1497:1499	6814835	2	True				
ANR	6815105	IncDec	++		6814835	0					
ANR	6815106	Identifier	j		6814835	1					
ANR	6815107	CompoundStatement		79:20:1339:1491	6814835	3					
ANR	6815108	IdentifierDeclStatement	uint32_t diff = ( * ( ptr [ 0 ] ++ ) << 24 ) | ( * ( ptr [ 1 ] ++ ) << 16 ) | ( * ( ptr [ 2 ] ++ ) << 8 ) ;	85:20:1525:1677	6814835	0	True				
ANR	6815109	IdentifierDecl	diff = ( * ( ptr [ 0 ] ++ ) << 24 ) | ( * ( ptr [ 1 ] ++ ) << 16 ) | ( * ( ptr [ 2 ] ++ ) << 8 )		6814835	0					
ANR	6815110	IdentifierDeclType	uint32_t		6814835	0					
ANR	6815111	Identifier	diff		6814835	1					
ANR	6815112	AssignmentExpression	diff = ( * ( ptr [ 0 ] ++ ) << 24 ) | ( * ( ptr [ 1 ] ++ ) << 16 ) | ( * ( ptr [ 2 ] ++ ) << 8 )		6814835	2		=			
ANR	6815113	Identifier	diff		6814835	0					
ANR	6815114	InclusiveOrExpression	( * ( ptr [ 0 ] ++ ) << 24 ) | ( * ( ptr [ 1 ] ++ ) << 16 ) | ( * ( ptr [ 2 ] ++ ) << 8 )		6814835	1		|			
ANR	6815115	ShiftExpression	* ( ptr [ 0 ] ++ ) << 24		6814835	0		<<			
ANR	6815116	UnaryOperationExpression	* ( ptr [ 0 ] ++ )		6814835	0					
ANR	6815117	UnaryOperator	*		6814835	0					
ANR	6815118	PostIncDecOperationExpression	ptr [ 0 ] ++		6814835	1					
ANR	6815119	ArrayIndexing	ptr [ 0 ]		6814835	0					
ANR	6815120	Identifier	ptr		6814835	0					
ANR	6815121	PrimaryExpression	0		6814835	1					
ANR	6815122	IncDec	++		6814835	1					
ANR	6815123	PrimaryExpression	24		6814835	1					
ANR	6815124	InclusiveOrExpression	( * ( ptr [ 1 ] ++ ) << 16 ) | ( * ( ptr [ 2 ] ++ ) << 8 )		6814835	1		|			
ANR	6815125	ShiftExpression	* ( ptr [ 1 ] ++ ) << 16		6814835	0		<<			
ANR	6815126	UnaryOperationExpression	* ( ptr [ 1 ] ++ )		6814835	0					
ANR	6815127	UnaryOperator	*		6814835	0					
ANR	6815128	PostIncDecOperationExpression	ptr [ 1 ] ++		6814835	1					
ANR	6815129	ArrayIndexing	ptr [ 1 ]		6814835	0					
ANR	6815130	Identifier	ptr		6814835	0					
ANR	6815131	PrimaryExpression	1		6814835	1					
ANR	6815132	IncDec	++		6814835	1					
ANR	6815133	PrimaryExpression	16		6814835	1					
ANR	6815134	ShiftExpression	* ( ptr [ 2 ] ++ ) << 8		6814835	1		<<			
ANR	6815135	UnaryOperationExpression	* ( ptr [ 2 ] ++ )		6814835	0					
ANR	6815136	UnaryOperator	*		6814835	0					
ANR	6815137	PostIncDecOperationExpression	ptr [ 2 ] ++		6814835	1					
ANR	6815138	ArrayIndexing	ptr [ 2 ]		6814835	0					
ANR	6815139	Identifier	ptr		6814835	0					
ANR	6815140	PrimaryExpression	2		6814835	1					
ANR	6815141	IncDec	++		6814835	1					
ANR	6815142	PrimaryExpression	8		6814835	1					
ANR	6815143	ExpressionStatement	pixel += diff	91:20:1700:1713	6814835	1	True				
ANR	6815144	AssignmentExpression	pixel += diff		6814835	0		+=			
ANR	6815145	Identifier	pixel		6814835	0					
ANR	6815146	Identifier	diff		6814835	1					
ANR	6815147	ExpressionStatement	"bytestream_put_le32 ( & out , pixel )"	93:20:1736:1768	6814835	2	True				
ANR	6815148	CallExpression	"bytestream_put_le32 ( & out , pixel )"		6814835	0					
ANR	6815149	Callee	bytestream_put_le32		6814835	0					
ANR	6815150	Identifier	bytestream_put_le32		6814835	0					
ANR	6815151	ArgumentList	& out		6814835	1					
ANR	6815152	Argument	& out		6814835	0					
ANR	6815153	UnaryOperationExpression	& out		6814835	0					
ANR	6815154	UnaryOperator	&		6814835	0					
ANR	6815155	Identifier	out		6814835	1					
ANR	6815156	Argument	pixel		6814835	1					
ANR	6815157	Identifier	pixel		6814835	0					
ANR	6815158	BreakStatement	break ;	97:16:1806:1811	6814835	6	True				
ANR	6815159	Label	case EXR_HALF :	99:12:1826:1839	6814835	7	True				
ANR	6815160	Identifier	EXR_HALF		6814835	0					
ANR	6815161	ExpressionStatement	ptr [ 0 ] = in	101:16:1858:1869	6814835	8	True				
ANR	6815162	AssignmentExpression	ptr [ 0 ] = in		6814835	0		=			
ANR	6815163	ArrayIndexing	ptr [ 0 ]		6814835	0					
ANR	6815164	Identifier	ptr		6814835	0					
ANR	6815165	PrimaryExpression	0		6814835	1					
ANR	6815166	Identifier	in		6814835	1					
ANR	6815167	ExpressionStatement	ptr [ 1 ] = ptr [ 0 ] + td -> xsize	103:16:1888:1915	6814835	9	True				
ANR	6815168	AssignmentExpression	ptr [ 1 ] = ptr [ 0 ] + td -> xsize		6814835	0		=			
ANR	6815169	ArrayIndexing	ptr [ 1 ]		6814835	0					
ANR	6815170	Identifier	ptr		6814835	0					
ANR	6815171	PrimaryExpression	1		6814835	1					
ANR	6815172	AdditiveExpression	ptr [ 0 ] + td -> xsize		6814835	1		+			
ANR	6815173	ArrayIndexing	ptr [ 0 ]		6814835	0					
ANR	6815174	Identifier	ptr		6814835	0					
ANR	6815175	PrimaryExpression	0		6814835	1					
ANR	6815176	PtrMemberAccess	td -> xsize		6814835	1					
ANR	6815177	Identifier	td		6814835	0					
ANR	6815178	Identifier	xsize		6814835	1					
ANR	6815179	ExpressionStatement	in = ptr [ 1 ] + td -> xsize	105:16:1934:1961	6814835	10	True				
ANR	6815180	AssignmentExpression	in = ptr [ 1 ] + td -> xsize		6814835	0		=			
ANR	6815181	Identifier	in		6814835	0					
ANR	6815182	AdditiveExpression	ptr [ 1 ] + td -> xsize		6814835	1		+			
ANR	6815183	ArrayIndexing	ptr [ 1 ]		6814835	0					
ANR	6815184	Identifier	ptr		6814835	0					
ANR	6815185	PrimaryExpression	1		6814835	1					
ANR	6815186	PtrMemberAccess	td -> xsize		6814835	1					
ANR	6815187	Identifier	td		6814835	0					
ANR	6815188	Identifier	xsize		6814835	1					
ANR	6815189	ForStatement	for ( j = 0 ; j < td -> xsize ; j ++ )		6814835	11					
ANR	6815190	ForInit	j = 0 ;	107:21:1985:1990	6814835	0	True				
ANR	6815191	AssignmentExpression	j = 0		6814835	0		=			
ANR	6815192	Identifier	j		6814835	0					
ANR	6815193	PrimaryExpression	0		6814835	1					
ANR	6815194	Condition	j < td -> xsize	107:28:1992:2004	6814835	1	True				
ANR	6815195	RelationalExpression	j < td -> xsize		6814835	0		<			
ANR	6815196	Identifier	j		6814835	0					
ANR	6815197	PtrMemberAccess	td -> xsize		6814835	1					
ANR	6815198	Identifier	td		6814835	0					
ANR	6815199	Identifier	xsize		6814835	1					
ANR	6815200	PostIncDecOperationExpression	j ++	107:43:2007:2009	6814835	2	True				
ANR	6815201	Identifier	j		6814835	0					
ANR	6815202	IncDec	++		6814835	1					
ANR	6815203	CompoundStatement		103:20:1849:1897	6814835	3					
ANR	6815204	IdentifierDeclStatement	uint32_t diff = ( * ( ptr [ 0 ] ++ ) << 8 ) | * ( ptr [ 1 ] ++ ) ;	109:20:2035:2083	6814835	0	True				
ANR	6815205	IdentifierDecl	diff = ( * ( ptr [ 0 ] ++ ) << 8 ) | * ( ptr [ 1 ] ++ )		6814835	0					
ANR	6815206	IdentifierDeclType	uint32_t		6814835	0					
ANR	6815207	Identifier	diff		6814835	1					
ANR	6815208	AssignmentExpression	diff = ( * ( ptr [ 0 ] ++ ) << 8 ) | * ( ptr [ 1 ] ++ )		6814835	2		=			
ANR	6815209	Identifier	diff		6814835	0					
ANR	6815210	InclusiveOrExpression	( * ( ptr [ 0 ] ++ ) << 8 ) | * ( ptr [ 1 ] ++ )		6814835	1		|			
ANR	6815211	ShiftExpression	* ( ptr [ 0 ] ++ ) << 8		6814835	0		<<			
ANR	6815212	UnaryOperationExpression	* ( ptr [ 0 ] ++ )		6814835	0					
ANR	6815213	UnaryOperator	*		6814835	0					
ANR	6815214	PostIncDecOperationExpression	ptr [ 0 ] ++		6814835	1					
ANR	6815215	ArrayIndexing	ptr [ 0 ]		6814835	0					
ANR	6815216	Identifier	ptr		6814835	0					
ANR	6815217	PrimaryExpression	0		6814835	1					
ANR	6815218	IncDec	++		6814835	1					
ANR	6815219	PrimaryExpression	8		6814835	1					
ANR	6815220	UnaryOperationExpression	* ( ptr [ 1 ] ++ )		6814835	1					
ANR	6815221	UnaryOperator	*		6814835	0					
ANR	6815222	PostIncDecOperationExpression	ptr [ 1 ] ++		6814835	1					
ANR	6815223	ArrayIndexing	ptr [ 1 ]		6814835	0					
ANR	6815224	Identifier	ptr		6814835	0					
ANR	6815225	PrimaryExpression	1		6814835	1					
ANR	6815226	IncDec	++		6814835	1					
ANR	6815227	ExpressionStatement	pixel += diff	113:20:2108:2121	6814835	1	True				
ANR	6815228	AssignmentExpression	pixel += diff		6814835	0		+=			
ANR	6815229	Identifier	pixel		6814835	0					
ANR	6815230	Identifier	diff		6814835	1					
ANR	6815231	ExpressionStatement	"bytestream_put_le16 ( & out , pixel )"	115:20:2144:2176	6814835	2	True				
ANR	6815232	CallExpression	"bytestream_put_le16 ( & out , pixel )"		6814835	0					
ANR	6815233	Callee	bytestream_put_le16		6814835	0					
ANR	6815234	Identifier	bytestream_put_le16		6814835	0					
ANR	6815235	ArgumentList	& out		6814835	1					
ANR	6815236	Argument	& out		6814835	0					
ANR	6815237	UnaryOperationExpression	& out		6814835	0					
ANR	6815238	UnaryOperator	&		6814835	0					
ANR	6815239	Identifier	out		6814835	1					
ANR	6815240	Argument	pixel		6814835	1					
ANR	6815241	Identifier	pixel		6814835	0					
ANR	6815242	BreakStatement	break ;	119:16:2214:2219	6814835	12	True				
ANR	6815243	Label	case EXR_UINT :	121:12:2234:2247	6814835	13	True				
ANR	6815244	Identifier	EXR_UINT		6814835	0					
ANR	6815245	ExpressionStatement	ptr [ 0 ] = in	123:16:2266:2277	6814835	14	True				
ANR	6815246	AssignmentExpression	ptr [ 0 ] = in		6814835	0		=			
ANR	6815247	ArrayIndexing	ptr [ 0 ]		6814835	0					
ANR	6815248	Identifier	ptr		6814835	0					
ANR	6815249	PrimaryExpression	0		6814835	1					
ANR	6815250	Identifier	in		6814835	1					
ANR	6815251	ExpressionStatement	ptr [ 1 ] = ptr [ 0 ] + s -> xdelta	125:16:2296:2323	6814835	15	True				
ANR	6815252	AssignmentExpression	ptr [ 1 ] = ptr [ 0 ] + s -> xdelta		6814835	0		=			
ANR	6815253	ArrayIndexing	ptr [ 1 ]		6814835	0					
ANR	6815254	Identifier	ptr		6814835	0					
ANR	6815255	PrimaryExpression	1		6814835	1					
ANR	6815256	AdditiveExpression	ptr [ 0 ] + s -> xdelta		6814835	1		+			
ANR	6815257	ArrayIndexing	ptr [ 0 ]		6814835	0					
ANR	6815258	Identifier	ptr		6814835	0					
ANR	6815259	PrimaryExpression	0		6814835	1					
ANR	6815260	PtrMemberAccess	s -> xdelta		6814835	1					
ANR	6815261	Identifier	s		6814835	0					
ANR	6815262	Identifier	xdelta		6814835	1					
ANR	6815263	ExpressionStatement	ptr [ 2 ] = ptr [ 1 ] + s -> xdelta	127:16:2342:2369	6814835	16	True				
ANR	6815264	AssignmentExpression	ptr [ 2 ] = ptr [ 1 ] + s -> xdelta		6814835	0		=			
ANR	6815265	ArrayIndexing	ptr [ 2 ]		6814835	0					
ANR	6815266	Identifier	ptr		6814835	0					
ANR	6815267	PrimaryExpression	2		6814835	1					
ANR	6815268	AdditiveExpression	ptr [ 1 ] + s -> xdelta		6814835	1		+			
ANR	6815269	ArrayIndexing	ptr [ 1 ]		6814835	0					
ANR	6815270	Identifier	ptr		6814835	0					
ANR	6815271	PrimaryExpression	1		6814835	1					
ANR	6815272	PtrMemberAccess	s -> xdelta		6814835	1					
ANR	6815273	Identifier	s		6814835	0					
ANR	6815274	Identifier	xdelta		6814835	1					
ANR	6815275	ExpressionStatement	ptr [ 3 ] = ptr [ 2 ] + s -> xdelta	129:16:2388:2415	6814835	17	True				
ANR	6815276	AssignmentExpression	ptr [ 3 ] = ptr [ 2 ] + s -> xdelta		6814835	0		=			
ANR	6815277	ArrayIndexing	ptr [ 3 ]		6814835	0					
ANR	6815278	Identifier	ptr		6814835	0					
ANR	6815279	PrimaryExpression	3		6814835	1					
ANR	6815280	AdditiveExpression	ptr [ 2 ] + s -> xdelta		6814835	1		+			
ANR	6815281	ArrayIndexing	ptr [ 2 ]		6814835	0					
ANR	6815282	Identifier	ptr		6814835	0					
ANR	6815283	PrimaryExpression	2		6814835	1					
ANR	6815284	PtrMemberAccess	s -> xdelta		6814835	1					
ANR	6815285	Identifier	s		6814835	0					
ANR	6815286	Identifier	xdelta		6814835	1					
ANR	6815287	ExpressionStatement	in = ptr [ 3 ] + s -> xdelta	131:16:2434:2461	6814835	18	True				
ANR	6815288	AssignmentExpression	in = ptr [ 3 ] + s -> xdelta		6814835	0		=			
ANR	6815289	Identifier	in		6814835	0					
ANR	6815290	AdditiveExpression	ptr [ 3 ] + s -> xdelta		6814835	1		+			
ANR	6815291	ArrayIndexing	ptr [ 3 ]		6814835	0					
ANR	6815292	Identifier	ptr		6814835	0					
ANR	6815293	PrimaryExpression	3		6814835	1					
ANR	6815294	PtrMemberAccess	s -> xdelta		6814835	1					
ANR	6815295	Identifier	s		6814835	0					
ANR	6815296	Identifier	xdelta		6814835	1					
ANR	6815297	ForStatement	for ( j = 0 ; j < s -> xdelta ; ++ j )		6814835	19					
ANR	6815298	ForInit	j = 0 ;	135:21:2487:2492	6814835	0	True				
ANR	6815299	AssignmentExpression	j = 0		6814835	0		=			
ANR	6815300	Identifier	j		6814835	0					
ANR	6815301	PrimaryExpression	0		6814835	1					
ANR	6815302	Condition	j < s -> xdelta	135:28:2494:2506	6814835	1	True				
ANR	6815303	RelationalExpression	j < s -> xdelta		6814835	0		<			
ANR	6815304	Identifier	j		6814835	0					
ANR	6815305	PtrMemberAccess	s -> xdelta		6814835	1					
ANR	6815306	Identifier	s		6814835	0					
ANR	6815307	Identifier	xdelta		6814835	1					
ANR	6815308	UnaryExpression	++ j	135:43:2509:2511	6814835	2	True				
ANR	6815309	IncDec	++		6814835	0					
ANR	6815310	Identifier	j		6814835	1					
ANR	6815311	CompoundStatement		131:20:2351:2509	6814835	3					
ANR	6815312	IdentifierDeclStatement	uint32_t diff = ( * ( ptr [ 0 ] ++ ) << 24 ) | ( * ( ptr [ 1 ] ++ ) << 16 ) | ( * ( ptr [ 2 ] ++ ) << 8 ) | ( * ( ptr [ 3 ] ++ ) ) ;	137:20:2537:2695	6814835	0	True				
ANR	6815313	IdentifierDecl	diff = ( * ( ptr [ 0 ] ++ ) << 24 ) | ( * ( ptr [ 1 ] ++ ) << 16 ) | ( * ( ptr [ 2 ] ++ ) << 8 ) | ( * ( ptr [ 3 ] ++ ) )		6814835	0					
ANR	6815314	IdentifierDeclType	uint32_t		6814835	0					
ANR	6815315	Identifier	diff		6814835	1					
ANR	6815316	AssignmentExpression	diff = ( * ( ptr [ 0 ] ++ ) << 24 ) | ( * ( ptr [ 1 ] ++ ) << 16 ) | ( * ( ptr [ 2 ] ++ ) << 8 ) | ( * ( ptr [ 3 ] ++ ) )		6814835	2		=			
ANR	6815317	Identifier	diff		6814835	0					
ANR	6815318	InclusiveOrExpression	( * ( ptr [ 0 ] ++ ) << 24 ) | ( * ( ptr [ 1 ] ++ ) << 16 ) | ( * ( ptr [ 2 ] ++ ) << 8 ) | ( * ( ptr [ 3 ] ++ ) )		6814835	1		|			
ANR	6815319	ShiftExpression	* ( ptr [ 0 ] ++ ) << 24		6814835	0		<<			
ANR	6815320	UnaryOperationExpression	* ( ptr [ 0 ] ++ )		6814835	0					
ANR	6815321	UnaryOperator	*		6814835	0					
ANR	6815322	PostIncDecOperationExpression	ptr [ 0 ] ++		6814835	1					
ANR	6815323	ArrayIndexing	ptr [ 0 ]		6814835	0					
ANR	6815324	Identifier	ptr		6814835	0					
ANR	6815325	PrimaryExpression	0		6814835	1					
ANR	6815326	IncDec	++		6814835	1					
ANR	6815327	PrimaryExpression	24		6814835	1					
ANR	6815328	InclusiveOrExpression	( * ( ptr [ 1 ] ++ ) << 16 ) | ( * ( ptr [ 2 ] ++ ) << 8 ) | ( * ( ptr [ 3 ] ++ ) )		6814835	1		|			
ANR	6815329	ShiftExpression	* ( ptr [ 1 ] ++ ) << 16		6814835	0		<<			
ANR	6815330	UnaryOperationExpression	* ( ptr [ 1 ] ++ )		6814835	0					
ANR	6815331	UnaryOperator	*		6814835	0					
ANR	6815332	PostIncDecOperationExpression	ptr [ 1 ] ++		6814835	1					
ANR	6815333	ArrayIndexing	ptr [ 1 ]		6814835	0					
ANR	6815334	Identifier	ptr		6814835	0					
ANR	6815335	PrimaryExpression	1		6814835	1					
ANR	6815336	IncDec	++		6814835	1					
ANR	6815337	PrimaryExpression	16		6814835	1					
ANR	6815338	InclusiveOrExpression	( * ( ptr [ 2 ] ++ ) << 8 ) | ( * ( ptr [ 3 ] ++ ) )		6814835	1		|			
ANR	6815339	ShiftExpression	* ( ptr [ 2 ] ++ ) << 8		6814835	0		<<			
ANR	6815340	UnaryOperationExpression	* ( ptr [ 2 ] ++ )		6814835	0					
ANR	6815341	UnaryOperator	*		6814835	0					
ANR	6815342	PostIncDecOperationExpression	ptr [ 2 ] ++		6814835	1					
ANR	6815343	ArrayIndexing	ptr [ 2 ]		6814835	0					
ANR	6815344	Identifier	ptr		6814835	0					
ANR	6815345	PrimaryExpression	2		6814835	1					
ANR	6815346	IncDec	++		6814835	1					
ANR	6815347	PrimaryExpression	8		6814835	1					
ANR	6815348	UnaryOperationExpression	* ( ptr [ 3 ] ++ )		6814835	1					
ANR	6815349	UnaryOperator	*		6814835	0					
ANR	6815350	PostIncDecOperationExpression	ptr [ 3 ] ++		6814835	1					
ANR	6815351	ArrayIndexing	ptr [ 3 ]		6814835	0					
ANR	6815352	Identifier	ptr		6814835	0					
ANR	6815353	PrimaryExpression	3		6814835	1					
ANR	6815354	IncDec	++		6814835	1					
ANR	6815355	ExpressionStatement	pixel += diff	145:20:2718:2731	6814835	1	True				
ANR	6815356	AssignmentExpression	pixel += diff		6814835	0		+=			
ANR	6815357	Identifier	pixel		6814835	0					
ANR	6815358	Identifier	diff		6814835	1					
ANR	6815359	ExpressionStatement	"bytestream_put_le32 ( & out , pixel )"	147:20:2754:2786	6814835	2	True				
ANR	6815360	CallExpression	"bytestream_put_le32 ( & out , pixel )"		6814835	0					
ANR	6815361	Callee	bytestream_put_le32		6814835	0					
ANR	6815362	Identifier	bytestream_put_le32		6814835	0					
ANR	6815363	ArgumentList	& out		6814835	1					
ANR	6815364	Argument	& out		6814835	0					
ANR	6815365	UnaryOperationExpression	& out		6814835	0					
ANR	6815366	UnaryOperator	&		6814835	0					
ANR	6815367	Identifier	out		6814835	1					
ANR	6815368	Argument	pixel		6814835	1					
ANR	6815369	Identifier	pixel		6814835	0					
ANR	6815370	BreakStatement	break ;	151:16:2824:2829	6814835	20	True				
ANR	6815371	Label	default :	153:12:2844:2851	6814835	21	True				
ANR	6815372	Identifier	default		6814835	0					
ANR	6815373	ReturnStatement	return AVERROR_INVALIDDATA ;	155:16:2870:2896	6814835	22	True				
ANR	6815374	Identifier	AVERROR_INVALIDDATA		6814835	0					
ANR	6815375	ReturnStatement	return 0 ;	163:4:2931:2939	6814835	9	True				
ANR	6815376	PrimaryExpression	0		6814835	0					
ANR	6815377	ReturnType	static int		6814835	1					
ANR	6815378	Identifier	pxr24_uncompress		6814835	2					
ANR	6815379	ParameterList	"EXRContext * s , const uint8_t * src , int compressed_size , int uncompressed_size , EXRThreadData * td"		6814835	3					
ANR	6815380	Parameter	EXRContext * s	1:28:28:40	6814835	0	True				
ANR	6815381	ParameterType	EXRContext *		6814835	0					
ANR	6815382	Identifier	s		6814835	1					
ANR	6815383	Parameter	const uint8_t * src	1:43:43:60	6814835	1	True				
ANR	6815384	ParameterType	const uint8_t *		6814835	0					
ANR	6815385	Identifier	src		6814835	1					
ANR	6815386	Parameter	int compressed_size	3:28:92:110	6814835	2	True				
ANR	6815387	ParameterType	int		6814835	0					
ANR	6815388	Identifier	compressed_size		6814835	1					
ANR	6815389	Parameter	int uncompressed_size	3:49:113:133	6814835	3	True				
ANR	6815390	ParameterType	int		6814835	0					
ANR	6815391	Identifier	uncompressed_size		6814835	1					
ANR	6815392	Parameter	EXRThreadData * td	5:28:165:181	6814835	4	True				
ANR	6815393	ParameterType	EXRThreadData *		6814835	0					
ANR	6815394	Identifier	td		6814835	1					
ANR	6815395	CFGEntryNode	ENTRY		6814835		True				
ANR	6815396	CFGExitNode	EXIT		6814835		True				
ANR	6815397	Symbol	* s -> channels		6814835						
ANR	6815398	Symbol	td -> uncompressed_data		6814835						
ANR	6815399	Symbol	channel		6814835						
ANR	6815400	Symbol	td -> ysize		6814835						
ANR	6815401	Symbol	Z_OK		6814835						
ANR	6815402	Symbol	* ( ptr [ 3 ] ++ )		6814835						
ANR	6815403	Symbol	s -> channels		6814835						
ANR	6815404	Symbol	EXR_FLOAT		6814835						
ANR	6815405	Symbol	* ( ptr [ 2 ] ++ )		6814835						
ANR	6815406	Symbol	out		6814835						
ANR	6815407	Symbol	s -> nb_channels		6814835						
ANR	6815408	Symbol	expected_len		6814835						
ANR	6815409	Symbol	compressed_size		6814835						
ANR	6815410	Symbol	* * s		6814835						
ANR	6815411	Symbol	td -> xsize		6814835						
ANR	6815412	Symbol	* ptr		6814835						
ANR	6815413	Symbol	s -> xdelta		6814835						
ANR	6815414	Symbol	td -> tmp		6814835						
ANR	6815415	Symbol	pixel		6814835						
ANR	6815416	Symbol	c		6814835						
ANR	6815417	Symbol	src		6814835						
ANR	6815418	Symbol	in		6814835						
ANR	6815419	Symbol	* channel		6814835						
ANR	6815420	Symbol	i		6814835						
ANR	6815421	Symbol	j		6814835						
ANR	6815422	Symbol	diff		6814835						
ANR	6815423	Symbol	channel -> pixel_type		6814835						
ANR	6815424	Symbol	EXR_HALF		6814835						
ANR	6815425	Symbol	dest_len		6814835						
ANR	6815426	Symbol	ptr		6814835						
ANR	6815427	Symbol	* ( ptr [ 0 ] ++ )		6814835						
ANR	6815428	Symbol	* ( ptr [ 1 ] ++ )		6814835						
ANR	6815429	Symbol	td		6814835						
ANR	6815430	Symbol	uncompressed_size		6814835						
ANR	6815431	Symbol	s		6814835						
ANR	6815432	Symbol	* i		6814835						
ANR	6815433	Symbol	& out		6814835						
ANR	6815434	Symbol	* td		6814835						
ANR	6815435	Symbol	AVERROR_INVALIDDATA		6814835						
ANR	6815436	Symbol	uncompress		6814835						
ANR	6815437	Symbol	* s		6814835						
ANR	6815438	Symbol	s -> channels [ i ] . pixel_type		6814835						
ANR	6815439	Symbol	& dest_len		6814835						
