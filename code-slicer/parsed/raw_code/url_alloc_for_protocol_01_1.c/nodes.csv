command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8660041	File	/home/p4ultr4n/workplace/ReVeal/raw_code/url_alloc_for_protocol_01_1.c								
ANR	8660042	Function	url_alloc_for_protocol	1:0:0:3053							
ANR	8660043	FunctionDef	"url_alloc_for_protocol (URLContext * * puc , struct URLProtocol * up , const char * filename , int flags , const AVIOInterruptCB * int_cb)"		8660042	0					
ANR	8660044	CompoundStatement		7:0:211:3053	8660042	0					
ANR	8660045	IdentifierDeclStatement	URLContext * uc ;	9:4:218:232	8660042	0	True				
ANR	8660046	IdentifierDecl	* uc		8660042	0					
ANR	8660047	IdentifierDeclType	URLContext *		8660042	0					
ANR	8660048	Identifier	uc		8660042	1					
ANR	8660049	IdentifierDeclStatement	int err ;	11:4:239:246	8660042	1	True				
ANR	8660050	IdentifierDecl	err		8660042	0					
ANR	8660051	IdentifierDeclType	int		8660042	0					
ANR	8660052	Identifier	err		8660042	1					
ANR	8660053	IfStatement	if ( up -> flags & URL_PROTOCOL_FLAG_NETWORK && ! ff_network_init ( ) )		8660042	2					
ANR	8660054	Condition	up -> flags & URL_PROTOCOL_FLAG_NETWORK && ! ff_network_init ( )	17:8:279:337	8660042	0	True				
ANR	8660055	AndExpression	up -> flags & URL_PROTOCOL_FLAG_NETWORK && ! ff_network_init ( )		8660042	0		&&			
ANR	8660056	BitAndExpression	up -> flags & URL_PROTOCOL_FLAG_NETWORK		8660042	0		&			
ANR	8660057	PtrMemberAccess	up -> flags		8660042	0					
ANR	8660058	Identifier	up		8660042	0					
ANR	8660059	Identifier	flags		8660042	1					
ANR	8660060	Identifier	URL_PROTOCOL_FLAG_NETWORK		8660042	1					
ANR	8660061	UnaryOperationExpression	! ff_network_init ( )		8660042	1					
ANR	8660062	UnaryOperator	!		8660042	0					
ANR	8660063	CallExpression	ff_network_init ( )		8660042	1					
ANR	8660064	Callee	ff_network_init		8660042	0					
ANR	8660065	Identifier	ff_network_init		8660042	0					
ANR	8660066	ArgumentList			8660042	1					
ANR	8660067	ReturnStatement	return AVERROR ( EIO ) ;	19:8:349:368	8660042	1	True				
ANR	8660068	CallExpression	AVERROR ( EIO )		8660042	0					
ANR	8660069	Callee	AVERROR		8660042	0					
ANR	8660070	Identifier	AVERROR		8660042	0					
ANR	8660071	ArgumentList	EIO		8660042	1					
ANR	8660072	Argument	EIO		8660042	0					
ANR	8660073	Identifier	EIO		8660042	0					
ANR	8660074	IfStatement	if ( ( flags & AVIO_FLAG_READ ) && ! up -> url_read )		8660042	3					
ANR	8660075	Condition	( flags & AVIO_FLAG_READ ) && ! up -> url_read	23:8:387:427	8660042	0	True				
ANR	8660076	AndExpression	( flags & AVIO_FLAG_READ ) && ! up -> url_read		8660042	0		&&			
ANR	8660077	BitAndExpression	flags & AVIO_FLAG_READ		8660042	0		&			
ANR	8660078	Identifier	flags		8660042	0					
ANR	8660079	Identifier	AVIO_FLAG_READ		8660042	1					
ANR	8660080	UnaryOperationExpression	! up -> url_read		8660042	1					
ANR	8660081	UnaryOperator	!		8660042	0					
ANR	8660082	PtrMemberAccess	up -> url_read		8660042	1					
ANR	8660083	Identifier	up		8660042	0					
ANR	8660084	Identifier	url_read		8660042	1					
ANR	8660085	CompoundStatement		17:51:218:218	8660042	1					
ANR	8660086	ExpressionStatement	"av_log ( NULL , AV_LOG_ERROR , ""Impossible to open the '%s' protocol for reading\\n"" , up -> name )"	25:8:441:547	8660042	0	True				
ANR	8660087	CallExpression	"av_log ( NULL , AV_LOG_ERROR , ""Impossible to open the '%s' protocol for reading\\n"" , up -> name )"		8660042	0					
ANR	8660088	Callee	av_log		8660042	0					
ANR	8660089	Identifier	av_log		8660042	0					
ANR	8660090	ArgumentList	NULL		8660042	1					
ANR	8660091	Argument	NULL		8660042	0					
ANR	8660092	Identifier	NULL		8660042	0					
ANR	8660093	Argument	AV_LOG_ERROR		8660042	1					
ANR	8660094	Identifier	AV_LOG_ERROR		8660042	0					
ANR	8660095	Argument	"""Impossible to open the '%s' protocol for reading\\n"""		8660042	2					
ANR	8660096	PrimaryExpression	"""Impossible to open the '%s' protocol for reading\\n"""		8660042	0					
ANR	8660097	Argument	up -> name		8660042	3					
ANR	8660098	PtrMemberAccess	up -> name		8660042	0					
ANR	8660099	Identifier	up		8660042	0					
ANR	8660100	Identifier	name		8660042	1					
ANR	8660101	ReturnStatement	return AVERROR ( EIO ) ;	29:8:558:577	8660042	1	True				
ANR	8660102	CallExpression	AVERROR ( EIO )		8660042	0					
ANR	8660103	Callee	AVERROR		8660042	0					
ANR	8660104	Identifier	AVERROR		8660042	0					
ANR	8660105	ArgumentList	EIO		8660042	1					
ANR	8660106	Argument	EIO		8660042	0					
ANR	8660107	Identifier	EIO		8660042	0					
ANR	8660108	IfStatement	if ( ( flags & AVIO_FLAG_WRITE ) && ! up -> url_write )		8660042	4					
ANR	8660109	Condition	( flags & AVIO_FLAG_WRITE ) && ! up -> url_write	33:8:595:637	8660042	0	True				
ANR	8660110	AndExpression	( flags & AVIO_FLAG_WRITE ) && ! up -> url_write		8660042	0		&&			
ANR	8660111	BitAndExpression	flags & AVIO_FLAG_WRITE		8660042	0		&			
ANR	8660112	Identifier	flags		8660042	0					
ANR	8660113	Identifier	AVIO_FLAG_WRITE		8660042	1					
ANR	8660114	UnaryOperationExpression	! up -> url_write		8660042	1					
ANR	8660115	UnaryOperator	!		8660042	0					
ANR	8660116	PtrMemberAccess	up -> url_write		8660042	1					
ANR	8660117	Identifier	up		8660042	0					
ANR	8660118	Identifier	url_write		8660042	1					
ANR	8660119	CompoundStatement		27:53:428:428	8660042	1					
ANR	8660120	ExpressionStatement	"av_log ( NULL , AV_LOG_ERROR , ""Impossible to open the '%s' protocol for writing\\n"" , up -> name )"	35:8:651:757	8660042	0	True				
ANR	8660121	CallExpression	"av_log ( NULL , AV_LOG_ERROR , ""Impossible to open the '%s' protocol for writing\\n"" , up -> name )"		8660042	0					
ANR	8660122	Callee	av_log		8660042	0					
ANR	8660123	Identifier	av_log		8660042	0					
ANR	8660124	ArgumentList	NULL		8660042	1					
ANR	8660125	Argument	NULL		8660042	0					
ANR	8660126	Identifier	NULL		8660042	0					
ANR	8660127	Argument	AV_LOG_ERROR		8660042	1					
ANR	8660128	Identifier	AV_LOG_ERROR		8660042	0					
ANR	8660129	Argument	"""Impossible to open the '%s' protocol for writing\\n"""		8660042	2					
ANR	8660130	PrimaryExpression	"""Impossible to open the '%s' protocol for writing\\n"""		8660042	0					
ANR	8660131	Argument	up -> name		8660042	3					
ANR	8660132	PtrMemberAccess	up -> name		8660042	0					
ANR	8660133	Identifier	up		8660042	0					
ANR	8660134	Identifier	name		8660042	1					
ANR	8660135	ReturnStatement	return AVERROR ( EIO ) ;	39:8:768:787	8660042	1	True				
ANR	8660136	CallExpression	AVERROR ( EIO )		8660042	0					
ANR	8660137	Callee	AVERROR		8660042	0					
ANR	8660138	Identifier	AVERROR		8660042	0					
ANR	8660139	ArgumentList	EIO		8660042	1					
ANR	8660140	Argument	EIO		8660042	0					
ANR	8660141	Identifier	EIO		8660042	0					
ANR	8660142	ExpressionStatement	uc = av_mallocz ( sizeof ( URLContext ) + strlen ( filename ) + 1 )	43:4:801:859	8660042	5	True				
ANR	8660143	AssignmentExpression	uc = av_mallocz ( sizeof ( URLContext ) + strlen ( filename ) + 1 )		8660042	0		=			
ANR	8660144	Identifier	uc		8660042	0					
ANR	8660145	CallExpression	av_mallocz ( sizeof ( URLContext ) + strlen ( filename ) + 1 )		8660042	1					
ANR	8660146	Callee	av_mallocz		8660042	0					
ANR	8660147	Identifier	av_mallocz		8660042	0					
ANR	8660148	ArgumentList	sizeof ( URLContext ) + strlen ( filename ) + 1		8660042	1					
ANR	8660149	Argument	sizeof ( URLContext ) + strlen ( filename ) + 1		8660042	0					
ANR	8660150	AdditiveExpression	sizeof ( URLContext ) + strlen ( filename ) + 1		8660042	0		+			
ANR	8660151	SizeofExpression	sizeof ( URLContext )		8660042	0					
ANR	8660152	Sizeof	sizeof		8660042	0					
ANR	8660153	SizeofOperand	URLContext		8660042	1					
ANR	8660154	AdditiveExpression	strlen ( filename ) + 1		8660042	1		+			
ANR	8660155	CallExpression	strlen ( filename )		8660042	0					
ANR	8660156	Callee	strlen		8660042	0					
ANR	8660157	Identifier	strlen		8660042	0					
ANR	8660158	ArgumentList	filename		8660042	1					
ANR	8660159	Argument	filename		8660042	0					
ANR	8660160	Identifier	filename		8660042	0					
ANR	8660161	PrimaryExpression	1		8660042	1					
ANR	8660162	IfStatement	if ( ! uc )		8660042	6					
ANR	8660163	Condition	! uc	45:8:870:872	8660042	0	True				
ANR	8660164	UnaryOperationExpression	! uc		8660042	0					
ANR	8660165	UnaryOperator	!		8660042	0					
ANR	8660166	Identifier	uc		8660042	1					
ANR	8660167	CompoundStatement		39:13:663:663	8660042	1					
ANR	8660168	ExpressionStatement	err = AVERROR ( ENOMEM )	47:8:886:907	8660042	0	True				
ANR	8660169	AssignmentExpression	err = AVERROR ( ENOMEM )		8660042	0		=			
ANR	8660170	Identifier	err		8660042	0					
ANR	8660171	CallExpression	AVERROR ( ENOMEM )		8660042	1					
ANR	8660172	Callee	AVERROR		8660042	0					
ANR	8660173	Identifier	AVERROR		8660042	0					
ANR	8660174	ArgumentList	ENOMEM		8660042	1					
ANR	8660175	Argument	ENOMEM		8660042	0					
ANR	8660176	Identifier	ENOMEM		8660042	0					
ANR	8660177	GotoStatement	goto fail ;	49:8:918:927	8660042	1	True				
ANR	8660178	Identifier	fail		8660042	0					
ANR	8660179	ExpressionStatement	uc -> av_class = & ffurl_context_class	53:4:941:976	8660042	7	True				
ANR	8660180	AssignmentExpression	uc -> av_class = & ffurl_context_class		8660042	0		=			
ANR	8660181	PtrMemberAccess	uc -> av_class		8660042	0					
ANR	8660182	Identifier	uc		8660042	0					
ANR	8660183	Identifier	av_class		8660042	1					
ANR	8660184	UnaryOperationExpression	& ffurl_context_class		8660042	1					
ANR	8660185	UnaryOperator	&		8660042	0					
ANR	8660186	Identifier	ffurl_context_class		8660042	1					
ANR	8660187	ExpressionStatement	uc -> filename = ( char * ) & uc [ 1 ]	55:4:983:1012	8660042	8	True				
ANR	8660188	AssignmentExpression	uc -> filename = ( char * ) & uc [ 1 ]		8660042	0		=			
ANR	8660189	PtrMemberAccess	uc -> filename		8660042	0					
ANR	8660190	Identifier	uc		8660042	0					
ANR	8660191	Identifier	filename		8660042	1					
ANR	8660192	CastExpression	( char * ) & uc [ 1 ]		8660042	1					
ANR	8660193	CastTarget	char *		8660042	0					
ANR	8660194	UnaryOperationExpression	& uc [ 1 ]		8660042	1					
ANR	8660195	UnaryOperator	&		8660042	0					
ANR	8660196	ArrayIndexing	uc [ 1 ]		8660042	1					
ANR	8660197	Identifier	uc		8660042	0					
ANR	8660198	PrimaryExpression	1		8660042	1					
ANR	8660199	ExpressionStatement	"strcpy ( uc -> filename , filename )"	57:4:1019:1049	8660042	9	True				
ANR	8660200	CallExpression	"strcpy ( uc -> filename , filename )"		8660042	0					
ANR	8660201	Callee	strcpy		8660042	0					
ANR	8660202	Identifier	strcpy		8660042	0					
ANR	8660203	ArgumentList	uc -> filename		8660042	1					
ANR	8660204	Argument	uc -> filename		8660042	0					
ANR	8660205	PtrMemberAccess	uc -> filename		8660042	0					
ANR	8660206	Identifier	uc		8660042	0					
ANR	8660207	Identifier	filename		8660042	1					
ANR	8660208	Argument	filename		8660042	1					
ANR	8660209	Identifier	filename		8660042	0					
ANR	8660210	ExpressionStatement	uc -> prot = up	59:4:1056:1080	8660042	10	True				
ANR	8660211	AssignmentExpression	uc -> prot = up		8660042	0		=			
ANR	8660212	PtrMemberAccess	uc -> prot		8660042	0					
ANR	8660213	Identifier	uc		8660042	0					
ANR	8660214	Identifier	prot		8660042	1					
ANR	8660215	Identifier	up		8660042	1					
ANR	8660216	ExpressionStatement	uc -> flags = flags	61:4:1087:1114	8660042	11	True				
ANR	8660217	AssignmentExpression	uc -> flags = flags		8660042	0		=			
ANR	8660218	PtrMemberAccess	uc -> flags		8660042	0					
ANR	8660219	Identifier	uc		8660042	0					
ANR	8660220	Identifier	flags		8660042	1					
ANR	8660221	Identifier	flags		8660042	1					
ANR	8660222	ExpressionStatement	uc -> is_streamed = 0	63:4:1121:1144	8660042	12	True				
ANR	8660223	AssignmentExpression	uc -> is_streamed = 0		8660042	0		=			
ANR	8660224	PtrMemberAccess	uc -> is_streamed		8660042	0					
ANR	8660225	Identifier	uc		8660042	0					
ANR	8660226	Identifier	is_streamed		8660042	1					
ANR	8660227	PrimaryExpression	0		8660042	1					
ANR	8660228	ExpressionStatement	uc -> max_packet_size = 0	65:4:1180:1203	8660042	13	True				
ANR	8660229	AssignmentExpression	uc -> max_packet_size = 0		8660042	0		=			
ANR	8660230	PtrMemberAccess	uc -> max_packet_size		8660042	0					
ANR	8660231	Identifier	uc		8660042	0					
ANR	8660232	Identifier	max_packet_size		8660042	1					
ANR	8660233	PrimaryExpression	0		8660042	1					
ANR	8660234	IfStatement	if ( up -> priv_data_size )		8660042	14					
ANR	8660235	Condition	up -> priv_data_size	67:8:1241:1258	8660042	0	True				
ANR	8660236	PtrMemberAccess	up -> priv_data_size		8660042	0					
ANR	8660237	Identifier	up		8660042	0					
ANR	8660238	Identifier	priv_data_size		8660042	1					
ANR	8660239	CompoundStatement		61:28:1049:1049	8660042	1					
ANR	8660240	ExpressionStatement	uc -> priv_data = av_mallocz ( up -> priv_data_size )	69:8:1272:1318	8660042	0	True				
ANR	8660241	AssignmentExpression	uc -> priv_data = av_mallocz ( up -> priv_data_size )		8660042	0		=			
ANR	8660242	PtrMemberAccess	uc -> priv_data		8660042	0					
ANR	8660243	Identifier	uc		8660042	0					
ANR	8660244	Identifier	priv_data		8660042	1					
ANR	8660245	CallExpression	av_mallocz ( up -> priv_data_size )		8660042	1					
ANR	8660246	Callee	av_mallocz		8660042	0					
ANR	8660247	Identifier	av_mallocz		8660042	0					
ANR	8660248	ArgumentList	up -> priv_data_size		8660042	1					
ANR	8660249	Argument	up -> priv_data_size		8660042	0					
ANR	8660250	PtrMemberAccess	up -> priv_data_size		8660042	0					
ANR	8660251	Identifier	up		8660042	0					
ANR	8660252	Identifier	priv_data_size		8660042	1					
ANR	8660253	IfStatement	if ( ! uc -> priv_data )		8660042	1					
ANR	8660254	Condition	! uc -> priv_data	71:12:1333:1346	8660042	0	True				
ANR	8660255	UnaryOperationExpression	! uc -> priv_data		8660042	0					
ANR	8660256	UnaryOperator	!		8660042	0					
ANR	8660257	PtrMemberAccess	uc -> priv_data		8660042	1					
ANR	8660258	Identifier	uc		8660042	0					
ANR	8660259	Identifier	priv_data		8660042	1					
ANR	8660260	CompoundStatement		65:28:1137:1137	8660042	1					
ANR	8660261	ExpressionStatement	err = AVERROR ( ENOMEM )	73:12:1364:1385	8660042	0	True				
ANR	8660262	AssignmentExpression	err = AVERROR ( ENOMEM )		8660042	0		=			
ANR	8660263	Identifier	err		8660042	0					
ANR	8660264	CallExpression	AVERROR ( ENOMEM )		8660042	1					
ANR	8660265	Callee	AVERROR		8660042	0					
ANR	8660266	Identifier	AVERROR		8660042	0					
ANR	8660267	ArgumentList	ENOMEM		8660042	1					
ANR	8660268	Argument	ENOMEM		8660042	0					
ANR	8660269	Identifier	ENOMEM		8660042	0					
ANR	8660270	GotoStatement	goto fail ;	75:12:1400:1409	8660042	1	True				
ANR	8660271	Identifier	fail		8660042	0					
ANR	8660272	IfStatement	if ( up -> priv_data_class )		8660042	2					
ANR	8660273	Condition	up -> priv_data_class	79:12:1435:1453	8660042	0	True				
ANR	8660274	PtrMemberAccess	up -> priv_data_class		8660042	0					
ANR	8660275	Identifier	up		8660042	0					
ANR	8660276	Identifier	priv_data_class		8660042	1					
ANR	8660277	CompoundStatement		77:12:1305:1344	8660042	1					
ANR	8660278	IdentifierDeclStatement	int proto_len = strlen ( up -> name ) ;	81:12:1471:1502	8660042	0	True				
ANR	8660279	IdentifierDecl	proto_len = strlen ( up -> name )		8660042	0					
ANR	8660280	IdentifierDeclType	int		8660042	0					
ANR	8660281	Identifier	proto_len		8660042	1					
ANR	8660282	AssignmentExpression	proto_len = strlen ( up -> name )		8660042	2		=			
ANR	8660283	Identifier	proto_len		8660042	0					
ANR	8660284	CallExpression	strlen ( up -> name )		8660042	1					
ANR	8660285	Callee	strlen		8660042	0					
ANR	8660286	Identifier	strlen		8660042	0					
ANR	8660287	ArgumentList	up -> name		8660042	1					
ANR	8660288	Argument	up -> name		8660042	0					
ANR	8660289	PtrMemberAccess	up -> name		8660042	0					
ANR	8660290	Identifier	up		8660042	0					
ANR	8660291	Identifier	name		8660042	1					
ANR	8660292	IdentifierDeclStatement	"char * start = strchr ( uc -> filename , ',' ) ;"	83:12:1517:1556	8660042	1	True				
ANR	8660293	IdentifierDecl	"* start = strchr ( uc -> filename , ',' )"		8660042	0					
ANR	8660294	IdentifierDeclType	char *		8660042	0					
ANR	8660295	Identifier	start		8660042	1					
ANR	8660296	AssignmentExpression	"* start = strchr ( uc -> filename , ',' )"		8660042	2		=			
ANR	8660297	Identifier	start		8660042	0					
ANR	8660298	CallExpression	"strchr ( uc -> filename , ',' )"		8660042	1					
ANR	8660299	Callee	strchr		8660042	0					
ANR	8660300	Identifier	strchr		8660042	0					
ANR	8660301	ArgumentList	uc -> filename		8660042	1					
ANR	8660302	Argument	uc -> filename		8660042	0					
ANR	8660303	PtrMemberAccess	uc -> filename		8660042	0					
ANR	8660304	Identifier	uc		8660042	0					
ANR	8660305	Identifier	filename		8660042	1					
ANR	8660306	Argument	"','"		8660042	1					
ANR	8660307	PrimaryExpression	"','"		8660042	0					
ANR	8660308	ExpressionStatement	* ( const AVClass * * ) uc -> priv_data = up -> priv_data_class	85:12:1571:1625	8660042	2	True				
ANR	8660309	AssignmentExpression	* ( const AVClass * * ) uc -> priv_data = up -> priv_data_class		8660042	0		=			
ANR	8660310	UnaryOperationExpression	* ( const AVClass * * ) uc -> priv_data		8660042	0					
ANR	8660311	UnaryOperator	*		8660042	0					
ANR	8660312	CastExpression	( const AVClass * * ) uc -> priv_data		8660042	1					
ANR	8660313	CastTarget	const AVClass * *		8660042	0					
ANR	8660314	PtrMemberAccess	uc -> priv_data		8660042	1					
ANR	8660315	Identifier	uc		8660042	0					
ANR	8660316	Identifier	priv_data		8660042	1					
ANR	8660317	PtrMemberAccess	up -> priv_data_class		8660042	1					
ANR	8660318	Identifier	up		8660042	0					
ANR	8660319	Identifier	priv_data_class		8660042	1					
ANR	8660320	ExpressionStatement	av_opt_set_defaults ( uc -> priv_data )	87:12:1640:1674	8660042	3	True				
ANR	8660321	CallExpression	av_opt_set_defaults ( uc -> priv_data )		8660042	0					
ANR	8660322	Callee	av_opt_set_defaults		8660042	0					
ANR	8660323	Identifier	av_opt_set_defaults		8660042	0					
ANR	8660324	ArgumentList	uc -> priv_data		8660042	1					
ANR	8660325	Argument	uc -> priv_data		8660042	0					
ANR	8660326	PtrMemberAccess	uc -> priv_data		8660042	0					
ANR	8660327	Identifier	uc		8660042	0					
ANR	8660328	Identifier	priv_data		8660042	1					
ANR	8660329	IfStatement	"if ( ! strncmp ( up -> name , uc -> filename , proto_len ) && uc -> filename + proto_len == start )"		8660042	4					
ANR	8660330	Condition	"! strncmp ( up -> name , uc -> filename , proto_len ) && uc -> filename + proto_len == start"	89:15:1692:1771	8660042	0	True				
ANR	8660331	AndExpression	"! strncmp ( up -> name , uc -> filename , proto_len ) && uc -> filename + proto_len == start"		8660042	0		&&			
ANR	8660332	UnaryOperationExpression	"! strncmp ( up -> name , uc -> filename , proto_len )"		8660042	0					
ANR	8660333	UnaryOperator	!		8660042	0					
ANR	8660334	CallExpression	"strncmp ( up -> name , uc -> filename , proto_len )"		8660042	1					
ANR	8660335	Callee	strncmp		8660042	0					
ANR	8660336	Identifier	strncmp		8660042	0					
ANR	8660337	ArgumentList	up -> name		8660042	1					
ANR	8660338	Argument	up -> name		8660042	0					
ANR	8660339	PtrMemberAccess	up -> name		8660042	0					
ANR	8660340	Identifier	up		8660042	0					
ANR	8660341	Identifier	name		8660042	1					
ANR	8660342	Argument	uc -> filename		8660042	1					
ANR	8660343	PtrMemberAccess	uc -> filename		8660042	0					
ANR	8660344	Identifier	uc		8660042	0					
ANR	8660345	Identifier	filename		8660042	1					
ANR	8660346	Argument	proto_len		8660042	2					
ANR	8660347	Identifier	proto_len		8660042	0					
ANR	8660348	EqualityExpression	uc -> filename + proto_len == start		8660042	1		==			
ANR	8660349	AdditiveExpression	uc -> filename + proto_len		8660042	0		+			
ANR	8660350	PtrMemberAccess	uc -> filename		8660042	0					
ANR	8660351	Identifier	uc		8660042	0					
ANR	8660352	Identifier	filename		8660042	1					
ANR	8660353	Identifier	proto_len		8660042	1					
ANR	8660354	Identifier	start		8660042	1					
ANR	8660355	CompoundStatement		91:16:1675:1690	8660042	1					
ANR	8660356	IdentifierDeclStatement	int ret = 0 ;	91:16:1792:1802	8660042	0	True				
ANR	8660357	IdentifierDecl	ret = 0		8660042	0					
ANR	8660358	IdentifierDeclType	int		8660042	0					
ANR	8660359	Identifier	ret		8660042	1					
ANR	8660360	AssignmentExpression	ret = 0		8660042	2		=			
ANR	8660361	Identifier	ret		8660042	0					
ANR	8660362	PrimaryExpression	0		8660042	1					
ANR	8660363	IdentifierDeclStatement	char * p = start ;	93:16:1821:1835	8660042	1	True				
ANR	8660364	IdentifierDecl	* p = start		8660042	0					
ANR	8660365	IdentifierDeclType	char *		8660042	0					
ANR	8660366	Identifier	p		8660042	1					
ANR	8660367	AssignmentExpression	* p = start		8660042	2		=			
ANR	8660368	Identifier	start		8660042	0					
ANR	8660369	Identifier	start		8660042	1					
ANR	8660370	IdentifierDeclStatement	char sep = * ++ p ;	95:16:1854:1868	8660042	2	True				
ANR	8660371	IdentifierDecl	sep = * ++ p		8660042	0					
ANR	8660372	IdentifierDeclType	char		8660042	0					
ANR	8660373	Identifier	sep		8660042	1					
ANR	8660374	AssignmentExpression	sep = * ++ p		8660042	2		=			
ANR	8660375	Identifier	sep		8660042	0					
ANR	8660376	UnaryOperationExpression	* ++ p		8660042	1					
ANR	8660377	UnaryOperator	*		8660042	0					
ANR	8660378	UnaryExpression	++ p		8660042	1					
ANR	8660379	IncDec	++		8660042	0					
ANR	8660380	Identifier	p		8660042	1					
ANR	8660381	IdentifierDeclStatement	"char * key , * val ;"	97:16:1887:1902	8660042	3	True				
ANR	8660382	IdentifierDecl	* key		8660042	0					
ANR	8660383	IdentifierDeclType	char *		8660042	0					
ANR	8660384	Identifier	key		8660042	1					
ANR	8660385	IdentifierDecl	* val		8660042	1					
ANR	8660386	IdentifierDeclType	char *		8660042	0					
ANR	8660387	Identifier	val		8660042	1					
ANR	8660388	ExpressionStatement	p ++	99:16:1921:1924	8660042	4	True				
ANR	8660389	PostIncDecOperationExpression	p ++		8660042	0					
ANR	8660390	Identifier	p		8660042	0					
ANR	8660391	IncDec	++		8660042	1					
ANR	8660392	WhileStatement	"while ( ret >= 0 && ( key = strchr ( p , sep ) ) && p < key && ( val = strchr ( key + 1 , sep ) ) )"		8660042	5					
ANR	8660393	Condition	"ret >= 0 && ( key = strchr ( p , sep ) ) && p < key && ( val = strchr ( key + 1 , sep ) )"	101:22:1949:2020	8660042	0	True				
ANR	8660394	AndExpression	"ret >= 0 && ( key = strchr ( p , sep ) ) && p < key && ( val = strchr ( key + 1 , sep ) )"		8660042	0		&&			
ANR	8660395	RelationalExpression	ret >= 0		8660042	0		>=			
ANR	8660396	Identifier	ret		8660042	0					
ANR	8660397	PrimaryExpression	0		8660042	1					
ANR	8660398	AndExpression	"( key = strchr ( p , sep ) ) && p < key && ( val = strchr ( key + 1 , sep ) )"		8660042	1		&&			
ANR	8660399	AssignmentExpression	"key = strchr ( p , sep )"		8660042	0		=			
ANR	8660400	Identifier	key		8660042	0					
ANR	8660401	CallExpression	"strchr ( p , sep )"		8660042	1					
ANR	8660402	Callee	strchr		8660042	0					
ANR	8660403	Identifier	strchr		8660042	0					
ANR	8660404	ArgumentList	p		8660042	1					
ANR	8660405	Argument	p		8660042	0					
ANR	8660406	Identifier	p		8660042	0					
ANR	8660407	Argument	sep		8660042	1					
ANR	8660408	Identifier	sep		8660042	0					
ANR	8660409	AndExpression	"p < key && ( val = strchr ( key + 1 , sep ) )"		8660042	1		&&			
ANR	8660410	RelationalExpression	p < key		8660042	0		<			
ANR	8660411	Identifier	p		8660042	0					
ANR	8660412	Identifier	key		8660042	1					
ANR	8660413	AssignmentExpression	"val = strchr ( key + 1 , sep )"		8660042	1		=			
ANR	8660414	Identifier	val		8660042	0					
ANR	8660415	CallExpression	"strchr ( key + 1 , sep )"		8660042	1					
ANR	8660416	Callee	strchr		8660042	0					
ANR	8660417	Identifier	strchr		8660042	0					
ANR	8660418	ArgumentList	key + 1		8660042	1					
ANR	8660419	Argument	key + 1		8660042	0					
ANR	8660420	AdditiveExpression	key + 1		8660042	0		+			
ANR	8660421	Identifier	key		8660042	0					
ANR	8660422	PrimaryExpression	1		8660042	1					
ANR	8660423	Argument	sep		8660042	1					
ANR	8660424	Identifier	sep		8660042	0					
ANR	8660425	CompoundStatement		95:95:1810:1810	8660042	1					
ANR	8660426	ExpressionStatement	* val = * key = 0	103:20:2045:2058	8660042	0	True				
ANR	8660427	AssignmentExpression	* val = * key = 0		8660042	0		=			
ANR	8660428	UnaryOperationExpression	* val		8660042	0					
ANR	8660429	UnaryOperator	*		8660042	0					
ANR	8660430	Identifier	val		8660042	1					
ANR	8660431	AssignmentExpression	* key = 0		8660042	1		=			
ANR	8660432	UnaryOperationExpression	* key		8660042	0					
ANR	8660433	UnaryOperator	*		8660042	0					
ANR	8660434	Identifier	key		8660042	1					
ANR	8660435	PrimaryExpression	0		8660042	1					
ANR	8660436	ExpressionStatement	"ret = av_opt_set ( uc -> priv_data , p , key + 1 , 0 )"	105:20:2081:2124	8660042	1	True				
ANR	8660437	AssignmentExpression	"ret = av_opt_set ( uc -> priv_data , p , key + 1 , 0 )"		8660042	0		=			
ANR	8660438	Identifier	ret		8660042	0					
ANR	8660439	CallExpression	"av_opt_set ( uc -> priv_data , p , key + 1 , 0 )"		8660042	1					
ANR	8660440	Callee	av_opt_set		8660042	0					
ANR	8660441	Identifier	av_opt_set		8660042	0					
ANR	8660442	ArgumentList	uc -> priv_data		8660042	1					
ANR	8660443	Argument	uc -> priv_data		8660042	0					
ANR	8660444	PtrMemberAccess	uc -> priv_data		8660042	0					
ANR	8660445	Identifier	uc		8660042	0					
ANR	8660446	Identifier	priv_data		8660042	1					
ANR	8660447	Argument	p		8660042	1					
ANR	8660448	Identifier	p		8660042	0					
ANR	8660449	Argument	key + 1		8660042	2					
ANR	8660450	AdditiveExpression	key + 1		8660042	0		+			
ANR	8660451	Identifier	key		8660042	0					
ANR	8660452	PrimaryExpression	1		8660042	1					
ANR	8660453	Argument	0		8660042	3					
ANR	8660454	PrimaryExpression	0		8660042	0					
ANR	8660455	IfStatement	if ( ret == AVERROR_OPTION_NOT_FOUND )		8660042	2					
ANR	8660456	Condition	ret == AVERROR_OPTION_NOT_FOUND	107:24:2151:2181	8660042	0	True				
ANR	8660457	EqualityExpression	ret == AVERROR_OPTION_NOT_FOUND		8660042	0		==			
ANR	8660458	Identifier	ret		8660042	0					
ANR	8660459	Identifier	AVERROR_OPTION_NOT_FOUND		8660042	1					
ANR	8660460	ExpressionStatement	"av_log ( uc , AV_LOG_ERROR , ""Key '%s' not found.\\n"" , p )"	109:24:2209:2261	8660042	1	True				
ANR	8660461	CallExpression	"av_log ( uc , AV_LOG_ERROR , ""Key '%s' not found.\\n"" , p )"		8660042	0					
ANR	8660462	Callee	av_log		8660042	0					
ANR	8660463	Identifier	av_log		8660042	0					
ANR	8660464	ArgumentList	uc		8660042	1					
ANR	8660465	Argument	uc		8660042	0					
ANR	8660466	Identifier	uc		8660042	0					
ANR	8660467	Argument	AV_LOG_ERROR		8660042	1					
ANR	8660468	Identifier	AV_LOG_ERROR		8660042	0					
ANR	8660469	Argument	"""Key '%s' not found.\\n"""		8660042	2					
ANR	8660470	PrimaryExpression	"""Key '%s' not found.\\n"""		8660042	0					
ANR	8660471	Argument	p		8660042	3					
ANR	8660472	Identifier	p		8660042	0					
ANR	8660473	ExpressionStatement	* val = * key = sep	111:20:2284:2299	8660042	3	True				
ANR	8660474	AssignmentExpression	* val = * key = sep		8660042	0		=			
ANR	8660475	UnaryOperationExpression	* val		8660042	0					
ANR	8660476	UnaryOperator	*		8660042	0					
ANR	8660477	Identifier	val		8660042	1					
ANR	8660478	AssignmentExpression	* key = sep		8660042	1		=			
ANR	8660479	UnaryOperationExpression	* key		8660042	0					
ANR	8660480	UnaryOperator	*		8660042	0					
ANR	8660481	Identifier	key		8660042	1					
ANR	8660482	Identifier	sep		8660042	1					
ANR	8660483	ExpressionStatement	p = val + 1	113:20:2322:2330	8660042	4	True				
ANR	8660484	AssignmentExpression	p = val + 1		8660042	0		=			
ANR	8660485	Identifier	p		8660042	0					
ANR	8660486	AdditiveExpression	val + 1		8660042	1		+			
ANR	8660487	Identifier	val		8660042	0					
ANR	8660488	PrimaryExpression	1		8660042	1					
ANR	8660489	IfStatement	if ( ret < 0 || p != key )		8660042	6					
ANR	8660490	Condition	ret < 0 || p != key	117:19:2371:2385	8660042	0	True				
ANR	8660491	OrExpression	ret < 0 || p != key		8660042	0		||			
ANR	8660492	RelationalExpression	ret < 0		8660042	0		<			
ANR	8660493	Identifier	ret		8660042	0					
ANR	8660494	PrimaryExpression	0		8660042	1					
ANR	8660495	EqualityExpression	p != key		8660042	1		!=			
ANR	8660496	Identifier	p		8660042	0					
ANR	8660497	Identifier	key		8660042	1					
ANR	8660498	CompoundStatement		111:35:2175:2175	8660042	1					
ANR	8660499	ExpressionStatement	"av_log ( uc , AV_LOG_ERROR , ""Error parsing options string %s\\n"" , start )"	119:20:2410:2478	8660042	0	True				
ANR	8660500	CallExpression	"av_log ( uc , AV_LOG_ERROR , ""Error parsing options string %s\\n"" , start )"		8660042	0					
ANR	8660501	Callee	av_log		8660042	0					
ANR	8660502	Identifier	av_log		8660042	0					
ANR	8660503	ArgumentList	uc		8660042	1					
ANR	8660504	Argument	uc		8660042	0					
ANR	8660505	Identifier	uc		8660042	0					
ANR	8660506	Argument	AV_LOG_ERROR		8660042	1					
ANR	8660507	Identifier	AV_LOG_ERROR		8660042	0					
ANR	8660508	Argument	"""Error parsing options string %s\\n"""		8660042	2					
ANR	8660509	PrimaryExpression	"""Error parsing options string %s\\n"""		8660042	0					
ANR	8660510	Argument	start		8660042	3					
ANR	8660511	Identifier	start		8660042	0					
ANR	8660512	ExpressionStatement	av_freep ( & uc -> priv_data )	121:20:2501:2525	8660042	1	True				
ANR	8660513	CallExpression	av_freep ( & uc -> priv_data )		8660042	0					
ANR	8660514	Callee	av_freep		8660042	0					
ANR	8660515	Identifier	av_freep		8660042	0					
ANR	8660516	ArgumentList	& uc -> priv_data		8660042	1					
ANR	8660517	Argument	& uc -> priv_data		8660042	0					
ANR	8660518	UnaryOperationExpression	& uc -> priv_data		8660042	0					
ANR	8660519	UnaryOperator	&		8660042	0					
ANR	8660520	PtrMemberAccess	uc -> priv_data		8660042	1					
ANR	8660521	Identifier	uc		8660042	0					
ANR	8660522	Identifier	priv_data		8660042	1					
ANR	8660523	ExpressionStatement	av_freep ( & uc )	123:20:2548:2561	8660042	2	True				
ANR	8660524	CallExpression	av_freep ( & uc )		8660042	0					
ANR	8660525	Callee	av_freep		8660042	0					
ANR	8660526	Identifier	av_freep		8660042	0					
ANR	8660527	ArgumentList	& uc		8660042	1					
ANR	8660528	Argument	& uc		8660042	0					
ANR	8660529	UnaryOperationExpression	& uc		8660042	0					
ANR	8660530	UnaryOperator	&		8660042	0					
ANR	8660531	Identifier	uc		8660042	1					
ANR	8660532	ExpressionStatement	err = AVERROR ( EINVAL )	125:20:2584:2605	8660042	3	True				
ANR	8660533	AssignmentExpression	err = AVERROR ( EINVAL )		8660042	0		=			
ANR	8660534	Identifier	err		8660042	0					
ANR	8660535	CallExpression	AVERROR ( EINVAL )		8660042	1					
ANR	8660536	Callee	AVERROR		8660042	0					
ANR	8660537	Identifier	AVERROR		8660042	0					
ANR	8660538	ArgumentList	EINVAL		8660042	1					
ANR	8660539	Argument	EINVAL		8660042	0					
ANR	8660540	Identifier	EINVAL		8660042	0					
ANR	8660541	GotoStatement	goto fail ;	127:20:2628:2637	8660042	4	True				
ANR	8660542	Identifier	fail		8660042	0					
ANR	8660543	ExpressionStatement	"memmove ( start , key + 1 , strlen ( key ) )"	131:16:2675:2709	8660042	7	True				
ANR	8660544	CallExpression	"memmove ( start , key + 1 , strlen ( key ) )"		8660042	0					
ANR	8660545	Callee	memmove		8660042	0					
ANR	8660546	Identifier	memmove		8660042	0					
ANR	8660547	ArgumentList	start		8660042	1					
ANR	8660548	Argument	start		8660042	0					
ANR	8660549	Identifier	start		8660042	0					
ANR	8660550	Argument	key + 1		8660042	1					
ANR	8660551	AdditiveExpression	key + 1		8660042	0		+			
ANR	8660552	Identifier	key		8660042	0					
ANR	8660553	PrimaryExpression	1		8660042	1					
ANR	8660554	Argument	strlen ( key )		8660042	2					
ANR	8660555	CallExpression	strlen ( key )		8660042	0					
ANR	8660556	Callee	strlen		8660042	0					
ANR	8660557	Identifier	strlen		8660042	0					
ANR	8660558	ArgumentList	key		8660042	1					
ANR	8660559	Argument	key		8660042	0					
ANR	8660560	Identifier	key		8660042	0					
ANR	8660561	IfStatement	if ( int_cb )		8660042	15					
ANR	8660562	Condition	int_cb	139:8:2753:2758	8660042	0	True				
ANR	8660563	Identifier	int_cb		8660042	0					
ANR	8660564	ExpressionStatement	uc -> interrupt_callback = * int_cb	141:8:2770:2802	8660042	1	True				
ANR	8660565	AssignmentExpression	uc -> interrupt_callback = * int_cb		8660042	0		=			
ANR	8660566	PtrMemberAccess	uc -> interrupt_callback		8660042	0					
ANR	8660567	Identifier	uc		8660042	0					
ANR	8660568	Identifier	interrupt_callback		8660042	1					
ANR	8660569	UnaryOperationExpression	* int_cb		8660042	1					
ANR	8660570	UnaryOperator	*		8660042	0					
ANR	8660571	Identifier	int_cb		8660042	1					
ANR	8660572	ExpressionStatement	* puc = uc	145:4:2811:2820	8660042	16	True				
ANR	8660573	AssignmentExpression	* puc = uc		8660042	0		=			
ANR	8660574	UnaryOperationExpression	* puc		8660042	0					
ANR	8660575	UnaryOperator	*		8660042	0					
ANR	8660576	Identifier	puc		8660042	1					
ANR	8660577	Identifier	uc		8660042	1					
ANR	8660578	ReturnStatement	return 0 ;	147:4:2827:2835	8660042	17	True				
ANR	8660579	PrimaryExpression	0		8660042	0					
ANR	8660580	Label	fail :	149:0:2838:2842	8660042	18	True				
ANR	8660581	Identifier	fail		8660042	0					
ANR	8660582	ExpressionStatement	* puc = NULL	151:4:2849:2860	8660042	19	True				
ANR	8660583	AssignmentExpression	* puc = NULL		8660042	0		=			
ANR	8660584	UnaryOperationExpression	* puc		8660042	0					
ANR	8660585	UnaryOperator	*		8660042	0					
ANR	8660586	Identifier	puc		8660042	1					
ANR	8660587	Identifier	NULL		8660042	1					
ANR	8660588	IfStatement	if ( uc )		8660042	20					
ANR	8660589	Condition	uc	153:8:2871:2872	8660042	0	True				
ANR	8660590	Identifier	uc		8660042	0					
ANR	8660591	ExpressionStatement	av_freep ( & uc -> priv_data )	155:8:2884:2908	8660042	1	True				
ANR	8660592	CallExpression	av_freep ( & uc -> priv_data )		8660042	0					
ANR	8660593	Callee	av_freep		8660042	0					
ANR	8660594	Identifier	av_freep		8660042	0					
ANR	8660595	ArgumentList	& uc -> priv_data		8660042	1					
ANR	8660596	Argument	& uc -> priv_data		8660042	0					
ANR	8660597	UnaryOperationExpression	& uc -> priv_data		8660042	0					
ANR	8660598	UnaryOperator	&		8660042	0					
ANR	8660599	PtrMemberAccess	uc -> priv_data		8660042	1					
ANR	8660600	Identifier	uc		8660042	0					
ANR	8660601	Identifier	priv_data		8660042	1					
ANR	8660602	ExpressionStatement	av_freep ( & uc )	157:4:2915:2928	8660042	21	True				
ANR	8660603	CallExpression	av_freep ( & uc )		8660042	0					
ANR	8660604	Callee	av_freep		8660042	0					
ANR	8660605	Identifier	av_freep		8660042	0					
ANR	8660606	ArgumentList	& uc		8660042	1					
ANR	8660607	Argument	& uc		8660042	0					
ANR	8660608	UnaryOperationExpression	& uc		8660042	0					
ANR	8660609	UnaryOperator	&		8660042	0					
ANR	8660610	Identifier	uc		8660042	1					
ANR	8660611	IfStatement	if ( up -> flags & URL_PROTOCOL_FLAG_NETWORK )		8660042	22					
ANR	8660612	Condition	up -> flags & URL_PROTOCOL_FLAG_NETWORK	161:8:2959:2995	8660042	0	True				
ANR	8660613	BitAndExpression	up -> flags & URL_PROTOCOL_FLAG_NETWORK		8660042	0		&			
ANR	8660614	PtrMemberAccess	up -> flags		8660042	0					
ANR	8660615	Identifier	up		8660042	0					
ANR	8660616	Identifier	flags		8660042	1					
ANR	8660617	Identifier	URL_PROTOCOL_FLAG_NETWORK		8660042	1					
ANR	8660618	ExpressionStatement	ff_network_close ( )	163:8:3007:3025	8660042	1	True				
ANR	8660619	CallExpression	ff_network_close ( )		8660042	0					
ANR	8660620	Callee	ff_network_close		8660042	0					
ANR	8660621	Identifier	ff_network_close		8660042	0					
ANR	8660622	ArgumentList			8660042	1					
ANR	8660623	ReturnStatement	return err ;	167:4:3040:3050	8660042	23	True				
ANR	8660624	Identifier	err		8660042	0					
ANR	8660625	ReturnType	static int		8660042	1					
ANR	8660626	Identifier	url_alloc_for_protocol		8660042	2					
ANR	8660627	ParameterList	"URLContext * * puc , struct URLProtocol * up , const char * filename , int flags , const AVIOInterruptCB * int_cb"		8660042	3					
ANR	8660628	Parameter	URLContext * * puc	1:34:34:49	8660042	0	True				
ANR	8660629	ParameterType	URLContext * *		8660042	0					
ANR	8660630	Identifier	puc		8660042	1					
ANR	8660631	Parameter	struct URLProtocol * up	1:52:52:73	8660042	1	True				
ANR	8660632	ParameterType	struct URLProtocol *		8660042	0					
ANR	8660633	Identifier	up		8660042	1					
ANR	8660634	Parameter	const char * filename	3:34:111:130	8660042	2	True				
ANR	8660635	ParameterType	const char *		8660042	0					
ANR	8660636	Identifier	filename		8660042	1					
ANR	8660637	Parameter	int flags	3:56:133:141	8660042	3	True				
ANR	8660638	ParameterType	int		8660042	0					
ANR	8660639	Identifier	flags		8660042	1					
ANR	8660640	Parameter	const AVIOInterruptCB * int_cb	5:34:179:207	8660042	4	True				
ANR	8660641	ParameterType	const AVIOInterruptCB *		8660042	0					
ANR	8660642	Identifier	int_cb		8660042	1					
ANR	8660643	CFGEntryNode	ENTRY		8660042		True				
ANR	8660644	CFGExitNode	EXIT		8660042		True				
ANR	8660645	Symbol	URL_PROTOCOL_FLAG_NETWORK		8660042						
ANR	8660646	Symbol	ENOMEM		8660042						
ANR	8660647	Symbol	up -> priv_data_class		8660042						
ANR	8660648	Symbol	strchr		8660042						
ANR	8660649	Symbol	* key		8660042						
ANR	8660650	Symbol	uc -> prot		8660042						
ANR	8660651	Symbol	uc		8660042						
ANR	8660652	Symbol	uc -> av_class		8660042						
ANR	8660653	Symbol	strlen		8660042						
ANR	8660654	Symbol	strncmp		8660042						
ANR	8660655	Symbol	& ffurl_context_class		8660042						
ANR	8660656	Symbol	uc -> flags		8660042						
ANR	8660657	Symbol	up		8660042						
ANR	8660658	Symbol	ff_network_init		8660042						
ANR	8660659	Symbol	ret		8660042						
ANR	8660660	Symbol	val		8660042						
ANR	8660661	Symbol	uc -> is_streamed		8660042						
ANR	8660662	Symbol	NULL		8660042						
ANR	8660663	Symbol	av_mallocz		8660042						
ANR	8660664	Symbol	EIO		8660042						
ANR	8660665	Symbol	uc -> max_packet_size		8660042						
ANR	8660666	Symbol	filename		8660042						
ANR	8660667	Symbol	AVIO_FLAG_READ		8660042						
ANR	8660668	Symbol	av_opt_set		8660042						
ANR	8660669	Symbol	* up		8660042						
ANR	8660670	Symbol	AVERROR_OPTION_NOT_FOUND		8660042						
ANR	8660671	Symbol	flags		8660042						
ANR	8660672	Symbol	up -> flags		8660042						
ANR	8660673	Symbol	* val		8660042						
ANR	8660674	Symbol	* int_cb		8660042						
ANR	8660675	Symbol	up -> url_write		8660042						
ANR	8660676	Symbol	* ( const AVClass * * ) uc -> priv_data		8660042						
ANR	8660677	Symbol	* uc		8660042						
ANR	8660678	Symbol	& uc		8660042						
ANR	8660679	Symbol	* uc -> priv_data		8660042						
ANR	8660680	Symbol	int_cb		8660042						
ANR	8660681	Symbol	key		8660042						
ANR	8660682	Symbol	sep		8660042						
ANR	8660683	Symbol	uc -> interrupt_callback		8660042						
ANR	8660684	Symbol	err		8660042						
ANR	8660685	Symbol	AV_LOG_ERROR		8660042						
ANR	8660686	Symbol	* ++ p		8660042						
ANR	8660687	Symbol	start		8660042						
ANR	8660688	Symbol	* puc		8660042						
ANR	8660689	Symbol	up -> url_read		8660042						
ANR	8660690	Symbol	up -> priv_data_size		8660042						
ANR	8660691	Symbol	AVIO_FLAG_WRITE		8660042						
ANR	8660692	Symbol	p		8660042						
ANR	8660693	Symbol	EINVAL		8660042						
ANR	8660694	Symbol	& uc -> priv_data		8660042						
ANR	8660695	Symbol	up -> name		8660042						
ANR	8660696	Symbol	uc -> filename		8660042						
ANR	8660697	Symbol	* * uc		8660042						
ANR	8660698	Symbol	* p		8660042						
ANR	8660699	Symbol	AVERROR		8660042						
ANR	8660700	Symbol	proto_len		8660042						
ANR	8660701	Symbol	uc -> priv_data		8660042						
ANR	8660702	Symbol	puc		8660042						
