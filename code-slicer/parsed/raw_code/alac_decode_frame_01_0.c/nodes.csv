command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	503399	File	/home/p4ultr4n/workplace/ReVeal/raw_code/alac_decode_frame_01_0.c								
ANR	503400	Function	alac_decode_frame	1:0:0:7150							
ANR	503401	FunctionDef	"alac_decode_frame (AVCodecContext * avctx , void * outbuffer , int * outputsize , AVPacket * avpkt)"		503400	0					
ANR	503402	CompoundStatement		7:0:164:7150	503400	0					
ANR	503403	IdentifierDeclStatement	const uint8_t * inbuffer = avpkt -> data ;	9:4:171:208	503400	0	True				
ANR	503404	IdentifierDecl	* inbuffer = avpkt -> data		503400	0					
ANR	503405	IdentifierDeclType	const uint8_t *		503400	0					
ANR	503406	Identifier	inbuffer		503400	1					
ANR	503407	AssignmentExpression	* inbuffer = avpkt -> data		503400	2		=			
ANR	503408	Identifier	inbuffer		503400	0					
ANR	503409	PtrMemberAccess	avpkt -> data		503400	1					
ANR	503410	Identifier	avpkt		503400	0					
ANR	503411	Identifier	data		503400	1					
ANR	503412	IdentifierDeclStatement	int input_buffer_size = avpkt -> size ;	11:4:215:250	503400	1	True				
ANR	503413	IdentifierDecl	input_buffer_size = avpkt -> size		503400	0					
ANR	503414	IdentifierDeclType	int		503400	0					
ANR	503415	Identifier	input_buffer_size		503400	1					
ANR	503416	AssignmentExpression	input_buffer_size = avpkt -> size		503400	2		=			
ANR	503417	Identifier	input_buffer_size		503400	0					
ANR	503418	PtrMemberAccess	avpkt -> size		503400	1					
ANR	503419	Identifier	avpkt		503400	0					
ANR	503420	Identifier	size		503400	1					
ANR	503421	IdentifierDeclStatement	ALACContext * alac = avctx -> priv_data ;	13:4:257:293	503400	2	True				
ANR	503422	IdentifierDecl	* alac = avctx -> priv_data		503400	0					
ANR	503423	IdentifierDeclType	ALACContext *		503400	0					
ANR	503424	Identifier	alac		503400	1					
ANR	503425	AssignmentExpression	* alac = avctx -> priv_data		503400	2		=			
ANR	503426	Identifier	alac		503400	0					
ANR	503427	PtrMemberAccess	avctx -> priv_data		503400	1					
ANR	503428	Identifier	avctx		503400	0					
ANR	503429	Identifier	priv_data		503400	1					
ANR	503430	IdentifierDeclStatement	int channels ;	17:4:302:314	503400	3	True				
ANR	503431	IdentifierDecl	channels		503400	0					
ANR	503432	IdentifierDeclType	int		503400	0					
ANR	503433	Identifier	channels		503400	1					
ANR	503434	IdentifierDeclStatement	unsigned int outputsamples ;	19:4:321:347	503400	4	True				
ANR	503435	IdentifierDecl	outputsamples		503400	0					
ANR	503436	IdentifierDeclType	unsigned int		503400	0					
ANR	503437	Identifier	outputsamples		503400	1					
ANR	503438	IdentifierDeclStatement	int hassize ;	21:4:354:365	503400	5	True				
ANR	503439	IdentifierDecl	hassize		503400	0					
ANR	503440	IdentifierDeclType	int		503400	0					
ANR	503441	Identifier	hassize		503400	1					
ANR	503442	IdentifierDeclStatement	unsigned int readsamplesize ;	23:4:372:399	503400	6	True				
ANR	503443	IdentifierDecl	readsamplesize		503400	0					
ANR	503444	IdentifierDeclType	unsigned int		503400	0					
ANR	503445	Identifier	readsamplesize		503400	1					
ANR	503446	IdentifierDeclStatement	int isnotcompressed ;	25:4:406:425	503400	7	True				
ANR	503447	IdentifierDecl	isnotcompressed		503400	0					
ANR	503448	IdentifierDeclType	int		503400	0					
ANR	503449	Identifier	isnotcompressed		503400	1					
ANR	503450	IdentifierDeclStatement	uint8_t interlacing_shift ;	27:4:432:457	503400	8	True				
ANR	503451	IdentifierDecl	interlacing_shift		503400	0					
ANR	503452	IdentifierDeclType	uint8_t		503400	0					
ANR	503453	Identifier	interlacing_shift		503400	1					
ANR	503454	IdentifierDeclStatement	uint8_t interlacing_leftweight ;	29:4:464:494	503400	9	True				
ANR	503455	IdentifierDecl	interlacing_leftweight		503400	0					
ANR	503456	IdentifierDeclType	uint8_t		503400	0					
ANR	503457	Identifier	interlacing_leftweight		503400	1					
ANR	503458	IdentifierDeclStatement	"int i , ch ;"	31:4:501:510	503400	10	True				
ANR	503459	IdentifierDecl	i		503400	0					
ANR	503460	IdentifierDeclType	int		503400	0					
ANR	503461	Identifier	i		503400	1					
ANR	503462	IdentifierDecl	ch		503400	1					
ANR	503463	IdentifierDeclType	int		503400	0					
ANR	503464	Identifier	ch		503400	1					
ANR	503465	IfStatement	if ( ! inbuffer || ! input_buffer_size )		503400	11					
ANR	503466	Condition	! inbuffer || ! input_buffer_size	37:8:561:591	503400	0	True				
ANR	503467	OrExpression	! inbuffer || ! input_buffer_size		503400	0		||			
ANR	503468	UnaryOperationExpression	! inbuffer		503400	0					
ANR	503469	UnaryOperator	!		503400	0					
ANR	503470	Identifier	inbuffer		503400	1					
ANR	503471	UnaryOperationExpression	! input_buffer_size		503400	1					
ANR	503472	UnaryOperator	!		503400	0					
ANR	503473	Identifier	input_buffer_size		503400	1					
ANR	503474	ReturnStatement	return - 1 ;	39:8:603:612	503400	1	True				
ANR	503475	UnaryOperationExpression	- 1		503400	0					
ANR	503476	UnaryOperator	-		503400	0					
ANR	503477	PrimaryExpression	1		503400	1					
ANR	503478	ExpressionStatement	"init_get_bits ( & alac -> gb , inbuffer , input_buffer_size * 8 )"	43:4:621:678	503400	12	True				
ANR	503479	CallExpression	"init_get_bits ( & alac -> gb , inbuffer , input_buffer_size * 8 )"		503400	0					
ANR	503480	Callee	init_get_bits		503400	0					
ANR	503481	Identifier	init_get_bits		503400	0					
ANR	503482	ArgumentList	& alac -> gb		503400	1					
ANR	503483	Argument	& alac -> gb		503400	0					
ANR	503484	UnaryOperationExpression	& alac -> gb		503400	0					
ANR	503485	UnaryOperator	&		503400	0					
ANR	503486	PtrMemberAccess	alac -> gb		503400	1					
ANR	503487	Identifier	alac		503400	0					
ANR	503488	Identifier	gb		503400	1					
ANR	503489	Argument	inbuffer		503400	1					
ANR	503490	Identifier	inbuffer		503400	0					
ANR	503491	Argument	input_buffer_size * 8		503400	2					
ANR	503492	MultiplicativeExpression	input_buffer_size * 8		503400	0		*			
ANR	503493	Identifier	input_buffer_size		503400	0					
ANR	503494	PrimaryExpression	8		503400	1					
ANR	503495	ExpressionStatement	"channels = get_bits ( & alac -> gb , 3 ) + 1"	47:4:687:724	503400	13	True				
ANR	503496	AssignmentExpression	"channels = get_bits ( & alac -> gb , 3 ) + 1"		503400	0		=			
ANR	503497	Identifier	channels		503400	0					
ANR	503498	AdditiveExpression	"get_bits ( & alac -> gb , 3 ) + 1"		503400	1		+			
ANR	503499	CallExpression	"get_bits ( & alac -> gb , 3 )"		503400	0					
ANR	503500	Callee	get_bits		503400	0					
ANR	503501	Identifier	get_bits		503400	0					
ANR	503502	ArgumentList	& alac -> gb		503400	1					
ANR	503503	Argument	& alac -> gb		503400	0					
ANR	503504	UnaryOperationExpression	& alac -> gb		503400	0					
ANR	503505	UnaryOperator	&		503400	0					
ANR	503506	PtrMemberAccess	alac -> gb		503400	1					
ANR	503507	Identifier	alac		503400	0					
ANR	503508	Identifier	gb		503400	1					
ANR	503509	Argument	3		503400	1					
ANR	503510	PrimaryExpression	3		503400	0					
ANR	503511	PrimaryExpression	1		503400	1					
ANR	503512	IfStatement	if ( channels != avctx -> channels )		503400	14					
ANR	503513	Condition	channels != avctx -> channels	49:8:735:761	503400	0	True				
ANR	503514	EqualityExpression	channels != avctx -> channels		503400	0		!=			
ANR	503515	Identifier	channels		503400	0					
ANR	503516	PtrMemberAccess	avctx -> channels		503400	1					
ANR	503517	Identifier	avctx		503400	0					
ANR	503518	Identifier	channels		503400	1					
ANR	503519	CompoundStatement		43:37:599:599	503400	1					
ANR	503520	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""frame header channel count mismatch\\n"" )"	51:8:775:843	503400	0	True				
ANR	503521	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""frame header channel count mismatch\\n"" )"		503400	0					
ANR	503522	Callee	av_log		503400	0					
ANR	503523	Identifier	av_log		503400	0					
ANR	503524	ArgumentList	avctx		503400	1					
ANR	503525	Argument	avctx		503400	0					
ANR	503526	Identifier	avctx		503400	0					
ANR	503527	Argument	AV_LOG_ERROR		503400	1					
ANR	503528	Identifier	AV_LOG_ERROR		503400	0					
ANR	503529	Argument	"""frame header channel count mismatch\\n"""		503400	2					
ANR	503530	PrimaryExpression	"""frame header channel count mismatch\\n"""		503400	0					
ANR	503531	ReturnStatement	return AVERROR_INVALIDDATA ;	53:8:854:880	503400	1	True				
ANR	503532	Identifier	AVERROR_INVALIDDATA		503400	0					
ANR	503533	ExpressionStatement	"skip_bits ( & alac -> gb , 4 )"	65:4:1017:1040	503400	15	True				
ANR	503534	CallExpression	"skip_bits ( & alac -> gb , 4 )"		503400	0					
ANR	503535	Callee	skip_bits		503400	0					
ANR	503536	Identifier	skip_bits		503400	0					
ANR	503537	ArgumentList	& alac -> gb		503400	1					
ANR	503538	Argument	& alac -> gb		503400	0					
ANR	503539	UnaryOperationExpression	& alac -> gb		503400	0					
ANR	503540	UnaryOperator	&		503400	0					
ANR	503541	PtrMemberAccess	alac -> gb		503400	1					
ANR	503542	Identifier	alac		503400	0					
ANR	503543	Identifier	gb		503400	1					
ANR	503544	Argument	4		503400	1					
ANR	503545	PrimaryExpression	4		503400	0					
ANR	503546	ExpressionStatement	"skip_bits ( & alac -> gb , 12 )"	69:4:1049:1073	503400	16	True				
ANR	503547	CallExpression	"skip_bits ( & alac -> gb , 12 )"		503400	0					
ANR	503548	Callee	skip_bits		503400	0					
ANR	503549	Identifier	skip_bits		503400	0					
ANR	503550	ArgumentList	& alac -> gb		503400	1					
ANR	503551	Argument	& alac -> gb		503400	0					
ANR	503552	UnaryOperationExpression	& alac -> gb		503400	0					
ANR	503553	UnaryOperator	&		503400	0					
ANR	503554	PtrMemberAccess	alac -> gb		503400	1					
ANR	503555	Identifier	alac		503400	0					
ANR	503556	Identifier	gb		503400	1					
ANR	503557	Argument	12		503400	1					
ANR	503558	PrimaryExpression	12		503400	0					
ANR	503559	ExpressionStatement	hassize = get_bits1 ( & alac -> gb )	75:4:1159:1189	503400	17	True				
ANR	503560	AssignmentExpression	hassize = get_bits1 ( & alac -> gb )		503400	0		=			
ANR	503561	Identifier	hassize		503400	0					
ANR	503562	CallExpression	get_bits1 ( & alac -> gb )		503400	1					
ANR	503563	Callee	get_bits1		503400	0					
ANR	503564	Identifier	get_bits1		503400	0					
ANR	503565	ArgumentList	& alac -> gb		503400	1					
ANR	503566	Argument	& alac -> gb		503400	0					
ANR	503567	UnaryOperationExpression	& alac -> gb		503400	0					
ANR	503568	UnaryOperator	&		503400	0					
ANR	503569	PtrMemberAccess	alac -> gb		503400	1					
ANR	503570	Identifier	alac		503400	0					
ANR	503571	Identifier	gb		503400	1					
ANR	503572	ExpressionStatement	"alac -> extra_bits = get_bits ( & alac -> gb , 2 ) << 3"	79:4:1198:1244	503400	18	True				
ANR	503573	AssignmentExpression	"alac -> extra_bits = get_bits ( & alac -> gb , 2 ) << 3"		503400	0		=			
ANR	503574	PtrMemberAccess	alac -> extra_bits		503400	0					
ANR	503575	Identifier	alac		503400	0					
ANR	503576	Identifier	extra_bits		503400	1					
ANR	503577	ShiftExpression	"get_bits ( & alac -> gb , 2 ) << 3"		503400	1		<<			
ANR	503578	CallExpression	"get_bits ( & alac -> gb , 2 )"		503400	0					
ANR	503579	Callee	get_bits		503400	0					
ANR	503580	Identifier	get_bits		503400	0					
ANR	503581	ArgumentList	& alac -> gb		503400	1					
ANR	503582	Argument	& alac -> gb		503400	0					
ANR	503583	UnaryOperationExpression	& alac -> gb		503400	0					
ANR	503584	UnaryOperator	&		503400	0					
ANR	503585	PtrMemberAccess	alac -> gb		503400	1					
ANR	503586	Identifier	alac		503400	0					
ANR	503587	Identifier	gb		503400	1					
ANR	503588	Argument	2		503400	1					
ANR	503589	PrimaryExpression	2		503400	0					
ANR	503590	PrimaryExpression	3		503400	1					
ANR	503591	ExpressionStatement	isnotcompressed = get_bits1 ( & alac -> gb )	85:4:1296:1334	503400	19	True				
ANR	503592	AssignmentExpression	isnotcompressed = get_bits1 ( & alac -> gb )		503400	0		=			
ANR	503593	Identifier	isnotcompressed		503400	0					
ANR	503594	CallExpression	get_bits1 ( & alac -> gb )		503400	1					
ANR	503595	Callee	get_bits1		503400	0					
ANR	503596	Identifier	get_bits1		503400	0					
ANR	503597	ArgumentList	& alac -> gb		503400	1					
ANR	503598	Argument	& alac -> gb		503400	0					
ANR	503599	UnaryOperationExpression	& alac -> gb		503400	0					
ANR	503600	UnaryOperator	&		503400	0					
ANR	503601	PtrMemberAccess	alac -> gb		503400	1					
ANR	503602	Identifier	alac		503400	0					
ANR	503603	Identifier	gb		503400	1					
ANR	503604	IfStatement	if ( hassize )		503400	20					
ANR	503605	Condition	hassize	89:8:1347:1353	503400	0	True				
ANR	503606	Identifier	hassize		503400	0					
ANR	503607	CompoundStatement		83:17:1191:1191	503400	1					
ANR	503608	ExpressionStatement	"outputsamples = get_bits_long ( & alac -> gb , 32 )"	93:8:1432:1476	503400	0	True				
ANR	503609	AssignmentExpression	"outputsamples = get_bits_long ( & alac -> gb , 32 )"		503400	0		=			
ANR	503610	Identifier	outputsamples		503400	0					
ANR	503611	CallExpression	"get_bits_long ( & alac -> gb , 32 )"		503400	1					
ANR	503612	Callee	get_bits_long		503400	0					
ANR	503613	Identifier	get_bits_long		503400	0					
ANR	503614	ArgumentList	& alac -> gb		503400	1					
ANR	503615	Argument	& alac -> gb		503400	0					
ANR	503616	UnaryOperationExpression	& alac -> gb		503400	0					
ANR	503617	UnaryOperator	&		503400	0					
ANR	503618	PtrMemberAccess	alac -> gb		503400	1					
ANR	503619	Identifier	alac		503400	0					
ANR	503620	Identifier	gb		503400	1					
ANR	503621	Argument	32		503400	1					
ANR	503622	PrimaryExpression	32		503400	0					
ANR	503623	IfStatement	if ( outputsamples > alac -> setinfo_max_samples_per_frame )		503400	1					
ANR	503624	Condition	outputsamples > alac -> setinfo_max_samples_per_frame	95:11:1490:1540	503400	0	True				
ANR	503625	RelationalExpression	outputsamples > alac -> setinfo_max_samples_per_frame		503400	0		>			
ANR	503626	Identifier	outputsamples		503400	0					
ANR	503627	PtrMemberAccess	alac -> setinfo_max_samples_per_frame		503400	1					
ANR	503628	Identifier	alac		503400	0					
ANR	503629	Identifier	setinfo_max_samples_per_frame		503400	1					
ANR	503630	CompoundStatement		89:63:1377:1377	503400	1					
ANR	503631	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""outputsamples %d > %d\\n"" , outputsamples , alac -> setinfo_max_samples_per_frame )"	97:12:1557:1663	503400	0	True				
ANR	503632	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""outputsamples %d > %d\\n"" , outputsamples , alac -> setinfo_max_samples_per_frame )"		503400	0					
ANR	503633	Callee	av_log		503400	0					
ANR	503634	Identifier	av_log		503400	0					
ANR	503635	ArgumentList	avctx		503400	1					
ANR	503636	Argument	avctx		503400	0					
ANR	503637	Identifier	avctx		503400	0					
ANR	503638	Argument	AV_LOG_ERROR		503400	1					
ANR	503639	Identifier	AV_LOG_ERROR		503400	0					
ANR	503640	Argument	"""outputsamples %d > %d\\n"""		503400	2					
ANR	503641	PrimaryExpression	"""outputsamples %d > %d\\n"""		503400	0					
ANR	503642	Argument	outputsamples		503400	3					
ANR	503643	Identifier	outputsamples		503400	0					
ANR	503644	Argument	alac -> setinfo_max_samples_per_frame		503400	4					
ANR	503645	PtrMemberAccess	alac -> setinfo_max_samples_per_frame		503400	0					
ANR	503646	Identifier	alac		503400	0					
ANR	503647	Identifier	setinfo_max_samples_per_frame		503400	1					
ANR	503648	ReturnStatement	return - 1 ;	99:12:1678:1687	503400	1	True				
ANR	503649	UnaryOperationExpression	- 1		503400	0					
ANR	503650	UnaryOperator	-		503400	0					
ANR	503651	PrimaryExpression	1		503400	1					
ANR	503652	ElseStatement	else		503400	0					
ANR	503653	ExpressionStatement	outputsamples = alac -> setinfo_max_samples_per_frame	105:8:1721:1772	503400	0	True				
ANR	503654	AssignmentExpression	outputsamples = alac -> setinfo_max_samples_per_frame		503400	0		=			
ANR	503655	Identifier	outputsamples		503400	0					
ANR	503656	PtrMemberAccess	alac -> setinfo_max_samples_per_frame		503400	1					
ANR	503657	Identifier	alac		503400	0					
ANR	503658	Identifier	setinfo_max_samples_per_frame		503400	1					
ANR	503659	ExpressionStatement	alac -> bytespersample = channels * av_get_bytes_per_sample ( avctx -> sample_fmt )	109:4:1781:1857	503400	21	True				
ANR	503660	AssignmentExpression	alac -> bytespersample = channels * av_get_bytes_per_sample ( avctx -> sample_fmt )		503400	0		=			
ANR	503661	PtrMemberAccess	alac -> bytespersample		503400	0					
ANR	503662	Identifier	alac		503400	0					
ANR	503663	Identifier	bytespersample		503400	1					
ANR	503664	MultiplicativeExpression	channels * av_get_bytes_per_sample ( avctx -> sample_fmt )		503400	1		*			
ANR	503665	Identifier	channels		503400	0					
ANR	503666	CallExpression	av_get_bytes_per_sample ( avctx -> sample_fmt )		503400	1					
ANR	503667	Callee	av_get_bytes_per_sample		503400	0					
ANR	503668	Identifier	av_get_bytes_per_sample		503400	0					
ANR	503669	ArgumentList	avctx -> sample_fmt		503400	1					
ANR	503670	Argument	avctx -> sample_fmt		503400	0					
ANR	503671	PtrMemberAccess	avctx -> sample_fmt		503400	0					
ANR	503672	Identifier	avctx		503400	0					
ANR	503673	Identifier	sample_fmt		503400	1					
ANR	503674	IfStatement	if ( outputsamples > * outputsize / alac -> bytespersample )		503400	22					
ANR	503675	Condition	outputsamples > * outputsize / alac -> bytespersample	113:7:1869:1918	503400	0	True				
ANR	503676	RelationalExpression	outputsamples > * outputsize / alac -> bytespersample		503400	0		>			
ANR	503677	Identifier	outputsamples		503400	0					
ANR	503678	MultiplicativeExpression	* outputsize / alac -> bytespersample		503400	1		/			
ANR	503679	UnaryOperationExpression	* outputsize		503400	0					
ANR	503680	UnaryOperator	*		503400	0					
ANR	503681	Identifier	outputsize		503400	1					
ANR	503682	PtrMemberAccess	alac -> bytespersample		503400	1					
ANR	503683	Identifier	alac		503400	0					
ANR	503684	Identifier	bytespersample		503400	1					
ANR	503685	CompoundStatement		107:58:1755:1755	503400	1					
ANR	503686	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""sample buffer too small\\n"" )"	115:8:1931:1987	503400	0	True				
ANR	503687	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""sample buffer too small\\n"" )"		503400	0					
ANR	503688	Callee	av_log		503400	0					
ANR	503689	Identifier	av_log		503400	0					
ANR	503690	ArgumentList	avctx		503400	1					
ANR	503691	Argument	avctx		503400	0					
ANR	503692	Identifier	avctx		503400	0					
ANR	503693	Argument	AV_LOG_ERROR		503400	1					
ANR	503694	Identifier	AV_LOG_ERROR		503400	0					
ANR	503695	Argument	"""sample buffer too small\\n"""		503400	2					
ANR	503696	PrimaryExpression	"""sample buffer too small\\n"""		503400	0					
ANR	503697	ReturnStatement	return - 1 ;	117:8:1998:2007	503400	1	True				
ANR	503698	UnaryOperationExpression	- 1		503400	0					
ANR	503699	UnaryOperator	-		503400	0					
ANR	503700	PrimaryExpression	1		503400	1					
ANR	503701	ExpressionStatement	* outputsize = outputsamples * alac -> bytespersample	123:4:2023:2073	503400	23	True				
ANR	503702	AssignmentExpression	* outputsize = outputsamples * alac -> bytespersample		503400	0		=			
ANR	503703	UnaryOperationExpression	* outputsize		503400	0					
ANR	503704	UnaryOperator	*		503400	0					
ANR	503705	Identifier	outputsize		503400	1					
ANR	503706	MultiplicativeExpression	outputsamples * alac -> bytespersample		503400	1		*			
ANR	503707	Identifier	outputsamples		503400	0					
ANR	503708	PtrMemberAccess	alac -> bytespersample		503400	1					
ANR	503709	Identifier	alac		503400	0					
ANR	503710	Identifier	bytespersample		503400	1					
ANR	503711	ExpressionStatement	readsamplesize = alac -> setinfo_sample_size - alac -> extra_bits + channels - 1	125:4:2080:2156	503400	24	True				
ANR	503712	AssignmentExpression	readsamplesize = alac -> setinfo_sample_size - alac -> extra_bits + channels - 1		503400	0		=			
ANR	503713	Identifier	readsamplesize		503400	0					
ANR	503714	AdditiveExpression	alac -> setinfo_sample_size - alac -> extra_bits + channels - 1		503400	1		-			
ANR	503715	PtrMemberAccess	alac -> setinfo_sample_size		503400	0					
ANR	503716	Identifier	alac		503400	0					
ANR	503717	Identifier	setinfo_sample_size		503400	1					
ANR	503718	AdditiveExpression	alac -> extra_bits + channels - 1		503400	1		+			
ANR	503719	PtrMemberAccess	alac -> extra_bits		503400	0					
ANR	503720	Identifier	alac		503400	0					
ANR	503721	Identifier	extra_bits		503400	1					
ANR	503722	AdditiveExpression	channels - 1		503400	1		-			
ANR	503723	Identifier	channels		503400	0					
ANR	503724	PrimaryExpression	1		503400	1					
ANR	503725	IfStatement	if ( readsamplesize > MIN_CACHE_BITS )		503400	25					
ANR	503726	Condition	readsamplesize > MIN_CACHE_BITS	127:8:2167:2197	503400	0	True				
ANR	503727	RelationalExpression	readsamplesize > MIN_CACHE_BITS		503400	0		>			
ANR	503728	Identifier	readsamplesize		503400	0					
ANR	503729	Identifier	MIN_CACHE_BITS		503400	1					
ANR	503730	CompoundStatement		121:41:2035:2035	503400	1					
ANR	503731	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""readsamplesize too big (%d)\\n"" , readsamplesize )"	129:8:2211:2287	503400	0	True				
ANR	503732	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""readsamplesize too big (%d)\\n"" , readsamplesize )"		503400	0					
ANR	503733	Callee	av_log		503400	0					
ANR	503734	Identifier	av_log		503400	0					
ANR	503735	ArgumentList	avctx		503400	1					
ANR	503736	Argument	avctx		503400	0					
ANR	503737	Identifier	avctx		503400	0					
ANR	503738	Argument	AV_LOG_ERROR		503400	1					
ANR	503739	Identifier	AV_LOG_ERROR		503400	0					
ANR	503740	Argument	"""readsamplesize too big (%d)\\n"""		503400	2					
ANR	503741	PrimaryExpression	"""readsamplesize too big (%d)\\n"""		503400	0					
ANR	503742	Argument	readsamplesize		503400	3					
ANR	503743	Identifier	readsamplesize		503400	0					
ANR	503744	ReturnStatement	return - 1 ;	131:8:2298:2307	503400	1	True				
ANR	503745	UnaryOperationExpression	- 1		503400	0					
ANR	503746	UnaryOperator	-		503400	0					
ANR	503747	PrimaryExpression	1		503400	1					
ANR	503748	IfStatement	if ( ! isnotcompressed )		503400	26					
ANR	503749	Condition	! isnotcompressed	137:8:2327:2342	503400	0	True				
ANR	503750	UnaryOperationExpression	! isnotcompressed		503400	0					
ANR	503751	UnaryOperator	!		503400	0					
ANR	503752	Identifier	isnotcompressed		503400	1					
ANR	503753	CompoundStatement		143:8:2428:2458	503400	1					
ANR	503754	Statement	int16_t	141:8:2391:2397	503400	0	True				
ANR	503755	ExpressionStatement	predictor_coef_table [ MAX_CHANNELS ] [ 32 ]	141:16:2399:2437	503400	1	True				
ANR	503756	ArrayIndexing	predictor_coef_table [ MAX_CHANNELS ] [ 32 ]		503400	0					
ANR	503757	ArrayIndexing	predictor_coef_table [ MAX_CHANNELS ]		503400	0					
ANR	503758	Identifier	predictor_coef_table		503400	0					
ANR	503759	Identifier	MAX_CHANNELS		503400	1					
ANR	503760	PrimaryExpression	32		503400	1					
ANR	503761	IdentifierDeclStatement	int predictor_coef_num [ MAX_CHANNELS ] ;	143:8:2448:2484	503400	2	True				
ANR	503762	IdentifierDecl	predictor_coef_num [ MAX_CHANNELS ]		503400	0					
ANR	503763	IdentifierDeclType	int [ MAX_CHANNELS ]		503400	0					
ANR	503764	Identifier	predictor_coef_num		503400	1					
ANR	503765	Identifier	MAX_CHANNELS		503400	2					
ANR	503766	IdentifierDeclStatement	int prediction_type [ MAX_CHANNELS ] ;	145:8:2495:2528	503400	3	True				
ANR	503767	IdentifierDecl	prediction_type [ MAX_CHANNELS ]		503400	0					
ANR	503768	IdentifierDeclType	int [ MAX_CHANNELS ]		503400	0					
ANR	503769	Identifier	prediction_type		503400	1					
ANR	503770	Identifier	MAX_CHANNELS		503400	2					
ANR	503771	IdentifierDeclStatement	int prediction_quantitization [ MAX_CHANNELS ] ;	147:8:2539:2582	503400	4	True				
ANR	503772	IdentifierDecl	prediction_quantitization [ MAX_CHANNELS ]		503400	0					
ANR	503773	IdentifierDeclType	int [ MAX_CHANNELS ]		503400	0					
ANR	503774	Identifier	prediction_quantitization		503400	1					
ANR	503775	Identifier	MAX_CHANNELS		503400	2					
ANR	503776	IdentifierDeclStatement	int ricemodifier [ MAX_CHANNELS ] ;	149:8:2593:2623	503400	5	True				
ANR	503777	IdentifierDecl	ricemodifier [ MAX_CHANNELS ]		503400	0					
ANR	503778	IdentifierDeclType	int [ MAX_CHANNELS ]		503400	0					
ANR	503779	Identifier	ricemodifier		503400	1					
ANR	503780	Identifier	MAX_CHANNELS		503400	2					
ANR	503781	ExpressionStatement	"interlacing_shift = get_bits ( & alac -> gb , 8 )"	153:8:2636:2678	503400	6	True				
ANR	503782	AssignmentExpression	"interlacing_shift = get_bits ( & alac -> gb , 8 )"		503400	0		=			
ANR	503783	Identifier	interlacing_shift		503400	0					
ANR	503784	CallExpression	"get_bits ( & alac -> gb , 8 )"		503400	1					
ANR	503785	Callee	get_bits		503400	0					
ANR	503786	Identifier	get_bits		503400	0					
ANR	503787	ArgumentList	& alac -> gb		503400	1					
ANR	503788	Argument	& alac -> gb		503400	0					
ANR	503789	UnaryOperationExpression	& alac -> gb		503400	0					
ANR	503790	UnaryOperator	&		503400	0					
ANR	503791	PtrMemberAccess	alac -> gb		503400	1					
ANR	503792	Identifier	alac		503400	0					
ANR	503793	Identifier	gb		503400	1					
ANR	503794	Argument	8		503400	1					
ANR	503795	PrimaryExpression	8		503400	0					
ANR	503796	ExpressionStatement	"interlacing_leftweight = get_bits ( & alac -> gb , 8 )"	155:8:2689:2736	503400	7	True				
ANR	503797	AssignmentExpression	"interlacing_leftweight = get_bits ( & alac -> gb , 8 )"		503400	0		=			
ANR	503798	Identifier	interlacing_leftweight		503400	0					
ANR	503799	CallExpression	"get_bits ( & alac -> gb , 8 )"		503400	1					
ANR	503800	Callee	get_bits		503400	0					
ANR	503801	Identifier	get_bits		503400	0					
ANR	503802	ArgumentList	& alac -> gb		503400	1					
ANR	503803	Argument	& alac -> gb		503400	0					
ANR	503804	UnaryOperationExpression	& alac -> gb		503400	0					
ANR	503805	UnaryOperator	&		503400	0					
ANR	503806	PtrMemberAccess	alac -> gb		503400	1					
ANR	503807	Identifier	alac		503400	0					
ANR	503808	Identifier	gb		503400	1					
ANR	503809	Argument	8		503400	1					
ANR	503810	PrimaryExpression	8		503400	0					
ANR	503811	ForStatement	for ( ch = 0 ; ch < channels ; ch ++ )		503400	8					
ANR	503812	ForInit	ch = 0 ;	159:13:2754:2760	503400	0	True				
ANR	503813	AssignmentExpression	ch = 0		503400	0		=			
ANR	503814	Identifier	ch		503400	0					
ANR	503815	PrimaryExpression	0		503400	1					
ANR	503816	Condition	ch < channels	159:21:2762:2774	503400	1	True				
ANR	503817	RelationalExpression	ch < channels		503400	0		<			
ANR	503818	Identifier	ch		503400	0					
ANR	503819	Identifier	channels		503400	1					
ANR	503820	PostIncDecOperationExpression	ch ++	159:36:2777:2780	503400	2	True				
ANR	503821	Identifier	ch		503400	0					
ANR	503822	IncDec	++		503400	1					
ANR	503823	CompoundStatement		153:42:2618:2618	503400	3					
ANR	503824	ExpressionStatement	"prediction_type [ ch ] = get_bits ( & alac -> gb , 4 )"	161:12:2798:2842	503400	0	True				
ANR	503825	AssignmentExpression	"prediction_type [ ch ] = get_bits ( & alac -> gb , 4 )"		503400	0		=			
ANR	503826	ArrayIndexing	prediction_type [ ch ]		503400	0					
ANR	503827	Identifier	prediction_type		503400	0					
ANR	503828	Identifier	ch		503400	1					
ANR	503829	CallExpression	"get_bits ( & alac -> gb , 4 )"		503400	1					
ANR	503830	Callee	get_bits		503400	0					
ANR	503831	Identifier	get_bits		503400	0					
ANR	503832	ArgumentList	& alac -> gb		503400	1					
ANR	503833	Argument	& alac -> gb		503400	0					
ANR	503834	UnaryOperationExpression	& alac -> gb		503400	0					
ANR	503835	UnaryOperator	&		503400	0					
ANR	503836	PtrMemberAccess	alac -> gb		503400	1					
ANR	503837	Identifier	alac		503400	0					
ANR	503838	Identifier	gb		503400	1					
ANR	503839	Argument	4		503400	1					
ANR	503840	PrimaryExpression	4		503400	0					
ANR	503841	ExpressionStatement	"prediction_quantitization [ ch ] = get_bits ( & alac -> gb , 4 )"	163:12:2857:2911	503400	1	True				
ANR	503842	AssignmentExpression	"prediction_quantitization [ ch ] = get_bits ( & alac -> gb , 4 )"		503400	0		=			
ANR	503843	ArrayIndexing	prediction_quantitization [ ch ]		503400	0					
ANR	503844	Identifier	prediction_quantitization		503400	0					
ANR	503845	Identifier	ch		503400	1					
ANR	503846	CallExpression	"get_bits ( & alac -> gb , 4 )"		503400	1					
ANR	503847	Callee	get_bits		503400	0					
ANR	503848	Identifier	get_bits		503400	0					
ANR	503849	ArgumentList	& alac -> gb		503400	1					
ANR	503850	Argument	& alac -> gb		503400	0					
ANR	503851	UnaryOperationExpression	& alac -> gb		503400	0					
ANR	503852	UnaryOperator	&		503400	0					
ANR	503853	PtrMemberAccess	alac -> gb		503400	1					
ANR	503854	Identifier	alac		503400	0					
ANR	503855	Identifier	gb		503400	1					
ANR	503856	Argument	4		503400	1					
ANR	503857	PrimaryExpression	4		503400	0					
ANR	503858	ExpressionStatement	"ricemodifier [ ch ] = get_bits ( & alac -> gb , 3 )"	167:12:2928:2969	503400	2	True				
ANR	503859	AssignmentExpression	"ricemodifier [ ch ] = get_bits ( & alac -> gb , 3 )"		503400	0		=			
ANR	503860	ArrayIndexing	ricemodifier [ ch ]		503400	0					
ANR	503861	Identifier	ricemodifier		503400	0					
ANR	503862	Identifier	ch		503400	1					
ANR	503863	CallExpression	"get_bits ( & alac -> gb , 3 )"		503400	1					
ANR	503864	Callee	get_bits		503400	0					
ANR	503865	Identifier	get_bits		503400	0					
ANR	503866	ArgumentList	& alac -> gb		503400	1					
ANR	503867	Argument	& alac -> gb		503400	0					
ANR	503868	UnaryOperationExpression	& alac -> gb		503400	0					
ANR	503869	UnaryOperator	&		503400	0					
ANR	503870	PtrMemberAccess	alac -> gb		503400	1					
ANR	503871	Identifier	alac		503400	0					
ANR	503872	Identifier	gb		503400	1					
ANR	503873	Argument	3		503400	1					
ANR	503874	PrimaryExpression	3		503400	0					
ANR	503875	ExpressionStatement	"predictor_coef_num [ ch ] = get_bits ( & alac -> gb , 5 )"	169:12:2984:3031	503400	3	True				
ANR	503876	AssignmentExpression	"predictor_coef_num [ ch ] = get_bits ( & alac -> gb , 5 )"		503400	0		=			
ANR	503877	ArrayIndexing	predictor_coef_num [ ch ]		503400	0					
ANR	503878	Identifier	predictor_coef_num		503400	0					
ANR	503879	Identifier	ch		503400	1					
ANR	503880	CallExpression	"get_bits ( & alac -> gb , 5 )"		503400	1					
ANR	503881	Callee	get_bits		503400	0					
ANR	503882	Identifier	get_bits		503400	0					
ANR	503883	ArgumentList	& alac -> gb		503400	1					
ANR	503884	Argument	& alac -> gb		503400	0					
ANR	503885	UnaryOperationExpression	& alac -> gb		503400	0					
ANR	503886	UnaryOperator	&		503400	0					
ANR	503887	PtrMemberAccess	alac -> gb		503400	1					
ANR	503888	Identifier	alac		503400	0					
ANR	503889	Identifier	gb		503400	1					
ANR	503890	Argument	5		503400	1					
ANR	503891	PrimaryExpression	5		503400	0					
ANR	503892	ForStatement	for ( i = 0 ; i < predictor_coef_num [ ch ] ; i ++ )		503400	4					
ANR	503893	ForInit	i = 0 ;	175:17:3097:3102	503400	0	True				
ANR	503894	AssignmentExpression	i = 0		503400	0		=			
ANR	503895	Identifier	i		503400	0					
ANR	503896	PrimaryExpression	0		503400	1					
ANR	503897	Condition	i < predictor_coef_num [ ch ]	175:24:3104:3129	503400	1	True				
ANR	503898	RelationalExpression	i < predictor_coef_num [ ch ]		503400	0		<			
ANR	503899	Identifier	i		503400	0					
ANR	503900	ArrayIndexing	predictor_coef_num [ ch ]		503400	1					
ANR	503901	Identifier	predictor_coef_num		503400	0					
ANR	503902	Identifier	ch		503400	1					
ANR	503903	PostIncDecOperationExpression	i ++	175:52:3132:3134	503400	2	True				
ANR	503904	Identifier	i		503400	0					
ANR	503905	IncDec	++		503400	1					
ANR	503906	ExpressionStatement	"predictor_coef_table [ ch ] [ i ] = ( int16_t ) get_bits ( & alac -> gb , 16 )"	177:16:3154:3216	503400	3	True				
ANR	503907	AssignmentExpression	"predictor_coef_table [ ch ] [ i ] = ( int16_t ) get_bits ( & alac -> gb , 16 )"		503400	0		=			
ANR	503908	ArrayIndexing	predictor_coef_table [ ch ] [ i ]		503400	0					
ANR	503909	ArrayIndexing	predictor_coef_table [ ch ]		503400	0					
ANR	503910	Identifier	predictor_coef_table		503400	0					
ANR	503911	Identifier	ch		503400	1					
ANR	503912	Identifier	i		503400	1					
ANR	503913	CastExpression	"( int16_t ) get_bits ( & alac -> gb , 16 )"		503400	1					
ANR	503914	CastTarget	int16_t		503400	0					
ANR	503915	CallExpression	"get_bits ( & alac -> gb , 16 )"		503400	1					
ANR	503916	Callee	get_bits		503400	0					
ANR	503917	Identifier	get_bits		503400	0					
ANR	503918	ArgumentList	& alac -> gb		503400	1					
ANR	503919	Argument	& alac -> gb		503400	0					
ANR	503920	UnaryOperationExpression	& alac -> gb		503400	0					
ANR	503921	UnaryOperator	&		503400	0					
ANR	503922	PtrMemberAccess	alac -> gb		503400	1					
ANR	503923	Identifier	alac		503400	0					
ANR	503924	Identifier	gb		503400	1					
ANR	503925	Argument	16		503400	1					
ANR	503926	PrimaryExpression	16		503400	0					
ANR	503927	IfStatement	if ( alac -> extra_bits )		503400	9					
ANR	503928	Condition	alac -> extra_bits	183:12:3244:3259	503400	0	True				
ANR	503929	PtrMemberAccess	alac -> extra_bits		503400	0					
ANR	503930	Identifier	alac		503400	0					
ANR	503931	Identifier	extra_bits		503400	1					
ANR	503932	CompoundStatement		177:30:3097:3097	503400	1					
ANR	503933	ForStatement	for ( i = 0 ; i < outputsamples ; i ++ )		503400	0					
ANR	503934	ForInit	i = 0 ;	185:17:3282:3287	503400	0	True				
ANR	503935	AssignmentExpression	i = 0		503400	0		=			
ANR	503936	Identifier	i		503400	0					
ANR	503937	PrimaryExpression	0		503400	1					
ANR	503938	Condition	i < outputsamples	185:24:3289:3305	503400	1	True				
ANR	503939	RelationalExpression	i < outputsamples		503400	0		<			
ANR	503940	Identifier	i		503400	0					
ANR	503941	Identifier	outputsamples		503400	1					
ANR	503942	PostIncDecOperationExpression	i ++	185:43:3308:3310	503400	2	True				
ANR	503943	Identifier	i		503400	0					
ANR	503944	IncDec	++		503400	1					
ANR	503945	CompoundStatement		179:48:3148:3148	503400	3					
ANR	503946	ForStatement	for ( ch = 0 ; ch < channels ; ch ++ )		503400	0					
ANR	503947	ForInit	ch = 0 ;	187:21:3337:3343	503400	0	True				
ANR	503948	AssignmentExpression	ch = 0		503400	0		=			
ANR	503949	Identifier	ch		503400	0					
ANR	503950	PrimaryExpression	0		503400	1					
ANR	503951	Condition	ch < channels	187:29:3345:3357	503400	1	True				
ANR	503952	RelationalExpression	ch < channels		503400	0		<			
ANR	503953	Identifier	ch		503400	0					
ANR	503954	Identifier	channels		503400	1					
ANR	503955	PostIncDecOperationExpression	ch ++	187:44:3360:3363	503400	2	True				
ANR	503956	Identifier	ch		503400	0					
ANR	503957	IncDec	++		503400	1					
ANR	503958	ExpressionStatement	"alac -> extra_bits_buffer [ ch ] [ i ] = get_bits ( & alac -> gb , alac -> extra_bits )"	189:20:3387:3457	503400	3	True				
ANR	503959	AssignmentExpression	"alac -> extra_bits_buffer [ ch ] [ i ] = get_bits ( & alac -> gb , alac -> extra_bits )"		503400	0		=			
ANR	503960	ArrayIndexing	alac -> extra_bits_buffer [ ch ] [ i ]		503400	0					
ANR	503961	ArrayIndexing	alac -> extra_bits_buffer [ ch ]		503400	0					
ANR	503962	PtrMemberAccess	alac -> extra_bits_buffer		503400	0					
ANR	503963	Identifier	alac		503400	0					
ANR	503964	Identifier	extra_bits_buffer		503400	1					
ANR	503965	Identifier	ch		503400	1					
ANR	503966	Identifier	i		503400	1					
ANR	503967	CallExpression	"get_bits ( & alac -> gb , alac -> extra_bits )"		503400	1					
ANR	503968	Callee	get_bits		503400	0					
ANR	503969	Identifier	get_bits		503400	0					
ANR	503970	ArgumentList	& alac -> gb		503400	1					
ANR	503971	Argument	& alac -> gb		503400	0					
ANR	503972	UnaryOperationExpression	& alac -> gb		503400	0					
ANR	503973	UnaryOperator	&		503400	0					
ANR	503974	PtrMemberAccess	alac -> gb		503400	1					
ANR	503975	Identifier	alac		503400	0					
ANR	503976	Identifier	gb		503400	1					
ANR	503977	Argument	alac -> extra_bits		503400	1					
ANR	503978	PtrMemberAccess	alac -> extra_bits		503400	0					
ANR	503979	Identifier	alac		503400	0					
ANR	503980	Identifier	extra_bits		503400	1					
ANR	503981	ForStatement	for ( ch = 0 ; ch < channels ; ch ++ )		503400	10					
ANR	503982	ForInit	ch = 0 ;	195:13:3499:3505	503400	0	True				
ANR	503983	AssignmentExpression	ch = 0		503400	0		=			
ANR	503984	Identifier	ch		503400	0					
ANR	503985	PrimaryExpression	0		503400	1					
ANR	503986	Condition	ch < channels	195:21:3507:3519	503400	1	True				
ANR	503987	RelationalExpression	ch < channels		503400	0		<			
ANR	503988	Identifier	ch		503400	0					
ANR	503989	Identifier	channels		503400	1					
ANR	503990	PostIncDecOperationExpression	ch ++	195:36:3522:3525	503400	2	True				
ANR	503991	Identifier	ch		503400	0					
ANR	503992	IncDec	++		503400	1					
ANR	503993	CompoundStatement		189:42:3363:3363	503400	3					
ANR	503994	ExpressionStatement	"bastardized_rice_decompress ( alac , alac -> predicterror_buffer [ ch ] , outputsamples , readsamplesize , alac -> setinfo_rice_initialhistory , alac -> setinfo_rice_kmodifier , ricemodifier [ ch ] * alac -> setinfo_rice_historymult / 4 , ( 1 << alac -> setinfo_rice_kmodifier ) - 1 )"	197:12:3543:4086	503400	0	True				
ANR	503995	CallExpression	"bastardized_rice_decompress ( alac , alac -> predicterror_buffer [ ch ] , outputsamples , readsamplesize , alac -> setinfo_rice_initialhistory , alac -> setinfo_rice_kmodifier , ricemodifier [ ch ] * alac -> setinfo_rice_historymult / 4 , ( 1 << alac -> setinfo_rice_kmodifier ) - 1 )"		503400	0					
ANR	503996	Callee	bastardized_rice_decompress		503400	0					
ANR	503997	Identifier	bastardized_rice_decompress		503400	0					
ANR	503998	ArgumentList	alac		503400	1					
ANR	503999	Argument	alac		503400	0					
ANR	504000	Identifier	alac		503400	0					
ANR	504001	Argument	alac -> predicterror_buffer [ ch ]		503400	1					
ANR	504002	ArrayIndexing	alac -> predicterror_buffer [ ch ]		503400	0					
ANR	504003	PtrMemberAccess	alac -> predicterror_buffer		503400	0					
ANR	504004	Identifier	alac		503400	0					
ANR	504005	Identifier	predicterror_buffer		503400	1					
ANR	504006	Identifier	ch		503400	1					
ANR	504007	Argument	outputsamples		503400	2					
ANR	504008	Identifier	outputsamples		503400	0					
ANR	504009	Argument	readsamplesize		503400	3					
ANR	504010	Identifier	readsamplesize		503400	0					
ANR	504011	Argument	alac -> setinfo_rice_initialhistory		503400	4					
ANR	504012	PtrMemberAccess	alac -> setinfo_rice_initialhistory		503400	0					
ANR	504013	Identifier	alac		503400	0					
ANR	504014	Identifier	setinfo_rice_initialhistory		503400	1					
ANR	504015	Argument	alac -> setinfo_rice_kmodifier		503400	5					
ANR	504016	PtrMemberAccess	alac -> setinfo_rice_kmodifier		503400	0					
ANR	504017	Identifier	alac		503400	0					
ANR	504018	Identifier	setinfo_rice_kmodifier		503400	1					
ANR	504019	Argument	ricemodifier [ ch ] * alac -> setinfo_rice_historymult / 4		503400	6					
ANR	504020	MultiplicativeExpression	ricemodifier [ ch ] * alac -> setinfo_rice_historymult / 4		503400	0		*			
ANR	504021	ArrayIndexing	ricemodifier [ ch ]		503400	0					
ANR	504022	Identifier	ricemodifier		503400	0					
ANR	504023	Identifier	ch		503400	1					
ANR	504024	MultiplicativeExpression	alac -> setinfo_rice_historymult / 4		503400	1		/			
ANR	504025	PtrMemberAccess	alac -> setinfo_rice_historymult		503400	0					
ANR	504026	Identifier	alac		503400	0					
ANR	504027	Identifier	setinfo_rice_historymult		503400	1					
ANR	504028	PrimaryExpression	4		503400	1					
ANR	504029	Argument	( 1 << alac -> setinfo_rice_kmodifier ) - 1		503400	7					
ANR	504030	AdditiveExpression	( 1 << alac -> setinfo_rice_kmodifier ) - 1		503400	0		-			
ANR	504031	ShiftExpression	1 << alac -> setinfo_rice_kmodifier		503400	0		<<			
ANR	504032	PrimaryExpression	1		503400	0					
ANR	504033	PtrMemberAccess	alac -> setinfo_rice_kmodifier		503400	1					
ANR	504034	Identifier	alac		503400	0					
ANR	504035	Identifier	setinfo_rice_kmodifier		503400	1					
ANR	504036	PrimaryExpression	1		503400	1					
ANR	504037	IfStatement	if ( prediction_type [ ch ] == 0 )		503400	1					
ANR	504038	Condition	prediction_type [ ch ] == 0	215:16:4107:4130	503400	0	True				
ANR	504039	EqualityExpression	prediction_type [ ch ] == 0		503400	0		==			
ANR	504040	ArrayIndexing	prediction_type [ ch ]		503400	0					
ANR	504041	Identifier	prediction_type		503400	0					
ANR	504042	Identifier	ch		503400	1					
ANR	504043	PrimaryExpression	0		503400	1					
ANR	504044	CompoundStatement		209:42:3968:3968	503400	1					
ANR	504045	ExpressionStatement	"predictor_decompress_fir_adapt ( alac -> predicterror_buffer [ ch ] , alac -> outputsamples_buffer [ ch ] , outputsamples , readsamplesize , predictor_coef_table [ ch ] , predictor_coef_num [ ch ] , prediction_quantitization [ ch ] )"	219:16:4188:4681	503400	0	True				
ANR	504046	CallExpression	"predictor_decompress_fir_adapt ( alac -> predicterror_buffer [ ch ] , alac -> outputsamples_buffer [ ch ] , outputsamples , readsamplesize , predictor_coef_table [ ch ] , predictor_coef_num [ ch ] , prediction_quantitization [ ch ] )"		503400	0					
ANR	504047	Callee	predictor_decompress_fir_adapt		503400	0					
ANR	504048	Identifier	predictor_decompress_fir_adapt		503400	0					
ANR	504049	ArgumentList	alac -> predicterror_buffer [ ch ]		503400	1					
ANR	504050	Argument	alac -> predicterror_buffer [ ch ]		503400	0					
ANR	504051	ArrayIndexing	alac -> predicterror_buffer [ ch ]		503400	0					
ANR	504052	PtrMemberAccess	alac -> predicterror_buffer		503400	0					
ANR	504053	Identifier	alac		503400	0					
ANR	504054	Identifier	predicterror_buffer		503400	1					
ANR	504055	Identifier	ch		503400	1					
ANR	504056	Argument	alac -> outputsamples_buffer [ ch ]		503400	1					
ANR	504057	ArrayIndexing	alac -> outputsamples_buffer [ ch ]		503400	0					
ANR	504058	PtrMemberAccess	alac -> outputsamples_buffer		503400	0					
ANR	504059	Identifier	alac		503400	0					
ANR	504060	Identifier	outputsamples_buffer		503400	1					
ANR	504061	Identifier	ch		503400	1					
ANR	504062	Argument	outputsamples		503400	2					
ANR	504063	Identifier	outputsamples		503400	0					
ANR	504064	Argument	readsamplesize		503400	3					
ANR	504065	Identifier	readsamplesize		503400	0					
ANR	504066	Argument	predictor_coef_table [ ch ]		503400	4					
ANR	504067	ArrayIndexing	predictor_coef_table [ ch ]		503400	0					
ANR	504068	Identifier	predictor_coef_table		503400	0					
ANR	504069	Identifier	ch		503400	1					
ANR	504070	Argument	predictor_coef_num [ ch ]		503400	5					
ANR	504071	ArrayIndexing	predictor_coef_num [ ch ]		503400	0					
ANR	504072	Identifier	predictor_coef_num		503400	0					
ANR	504073	Identifier	ch		503400	1					
ANR	504074	Argument	prediction_quantitization [ ch ]		503400	6					
ANR	504075	ArrayIndexing	prediction_quantitization [ ch ]		503400	0					
ANR	504076	Identifier	prediction_quantitization		503400	0					
ANR	504077	Identifier	ch		503400	1					
ANR	504078	ElseStatement	else		503400	0					
ANR	504079	CompoundStatement		227:19:4538:4538	503400	0					
ANR	504080	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""FIXME: unhandled prediction type: %i\\n"" , prediction_type [ ch ] )"	235:16:4722:4812	503400	0	True				
ANR	504081	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""FIXME: unhandled prediction type: %i\\n"" , prediction_type [ ch ] )"		503400	0					
ANR	504082	Callee	av_log		503400	0					
ANR	504083	Identifier	av_log		503400	0					
ANR	504084	ArgumentList	avctx		503400	1					
ANR	504085	Argument	avctx		503400	0					
ANR	504086	Identifier	avctx		503400	0					
ANR	504087	Argument	AV_LOG_ERROR		503400	1					
ANR	504088	Identifier	AV_LOG_ERROR		503400	0					
ANR	504089	Argument	"""FIXME: unhandled prediction type: %i\\n"""		503400	2					
ANR	504090	PrimaryExpression	"""FIXME: unhandled prediction type: %i\\n"""		503400	0					
ANR	504091	Argument	prediction_type [ ch ]		503400	3					
ANR	504092	ArrayIndexing	prediction_type [ ch ]		503400	0					
ANR	504093	Identifier	prediction_type		503400	0					
ANR	504094	Identifier	ch		503400	1					
ANR	504095	ElseStatement	else		503400	0					
ANR	504096	CompoundStatement		247:11:5062:5062	503400	0					
ANR	504097	ForStatement	for ( i = 0 ; i < outputsamples ; i ++ )		503400	0					
ANR	504098	ForInit	i = 0 ;	257:13:5284:5289	503400	0	True				
ANR	504099	AssignmentExpression	i = 0		503400	0		=			
ANR	504100	Identifier	i		503400	0					
ANR	504101	PrimaryExpression	0		503400	1					
ANR	504102	Condition	i < outputsamples	257:20:5291:5307	503400	1	True				
ANR	504103	RelationalExpression	i < outputsamples		503400	0		<			
ANR	504104	Identifier	i		503400	0					
ANR	504105	Identifier	outputsamples		503400	1					
ANR	504106	PostIncDecOperationExpression	i ++	257:39:5310:5312	503400	2	True				
ANR	504107	Identifier	i		503400	0					
ANR	504108	IncDec	++		503400	1					
ANR	504109	CompoundStatement		251:44:5150:5150	503400	3					
ANR	504110	ForStatement	for ( ch = 0 ; ch < channels ; ch ++ )		503400	0					
ANR	504111	ForInit	ch = 0 ;	259:17:5335:5341	503400	0	True				
ANR	504112	AssignmentExpression	ch = 0		503400	0		=			
ANR	504113	Identifier	ch		503400	0					
ANR	504114	PrimaryExpression	0		503400	1					
ANR	504115	Condition	ch < channels	259:25:5343:5355	503400	1	True				
ANR	504116	RelationalExpression	ch < channels		503400	0		<			
ANR	504117	Identifier	ch		503400	0					
ANR	504118	Identifier	channels		503400	1					
ANR	504119	PostIncDecOperationExpression	ch ++	259:40:5358:5361	503400	2	True				
ANR	504120	Identifier	ch		503400	0					
ANR	504121	IncDec	++		503400	1					
ANR	504122	CompoundStatement		253:46:5199:5199	503400	3					
ANR	504123	ExpressionStatement	"alac -> outputsamples_buffer [ ch ] [ i ] = get_sbits_long ( & alac -> gb , alac -> setinfo_sample_size )"	261:16:5383:5539	503400	0	True				
ANR	504124	AssignmentExpression	"alac -> outputsamples_buffer [ ch ] [ i ] = get_sbits_long ( & alac -> gb , alac -> setinfo_sample_size )"		503400	0		=			
ANR	504125	ArrayIndexing	alac -> outputsamples_buffer [ ch ] [ i ]		503400	0					
ANR	504126	ArrayIndexing	alac -> outputsamples_buffer [ ch ]		503400	0					
ANR	504127	PtrMemberAccess	alac -> outputsamples_buffer		503400	0					
ANR	504128	Identifier	alac		503400	0					
ANR	504129	Identifier	outputsamples_buffer		503400	1					
ANR	504130	Identifier	ch		503400	1					
ANR	504131	Identifier	i		503400	1					
ANR	504132	CallExpression	"get_sbits_long ( & alac -> gb , alac -> setinfo_sample_size )"		503400	1					
ANR	504133	Callee	get_sbits_long		503400	0					
ANR	504134	Identifier	get_sbits_long		503400	0					
ANR	504135	ArgumentList	& alac -> gb		503400	1					
ANR	504136	Argument	& alac -> gb		503400	0					
ANR	504137	UnaryOperationExpression	& alac -> gb		503400	0					
ANR	504138	UnaryOperator	&		503400	0					
ANR	504139	PtrMemberAccess	alac -> gb		503400	1					
ANR	504140	Identifier	alac		503400	0					
ANR	504141	Identifier	gb		503400	1					
ANR	504142	Argument	alac -> setinfo_sample_size		503400	1					
ANR	504143	PtrMemberAccess	alac -> setinfo_sample_size		503400	0					
ANR	504144	Identifier	alac		503400	0					
ANR	504145	Identifier	setinfo_sample_size		503400	1					
ANR	504146	ExpressionStatement	alac -> extra_bits = 0	269:8:5576:5596	503400	1	True				
ANR	504147	AssignmentExpression	alac -> extra_bits = 0		503400	0		=			
ANR	504148	PtrMemberAccess	alac -> extra_bits		503400	0					
ANR	504149	Identifier	alac		503400	0					
ANR	504150	Identifier	extra_bits		503400	1					
ANR	504151	PrimaryExpression	0		503400	1					
ANR	504152	ExpressionStatement	interlacing_shift = 0	271:8:5607:5628	503400	2	True				
ANR	504153	AssignmentExpression	interlacing_shift = 0		503400	0		=			
ANR	504154	Identifier	interlacing_shift		503400	0					
ANR	504155	PrimaryExpression	0		503400	1					
ANR	504156	ExpressionStatement	interlacing_leftweight = 0	273:8:5639:5665	503400	3	True				
ANR	504157	AssignmentExpression	interlacing_leftweight = 0		503400	0		=			
ANR	504158	Identifier	interlacing_leftweight		503400	0					
ANR	504159	PrimaryExpression	0		503400	1					
ANR	504160	IfStatement	"if ( get_bits ( & alac -> gb , 3 ) != 7 )"		503400	27					
ANR	504161	Condition	"get_bits ( & alac -> gb , 3 ) != 7"	277:8:5683:5709	503400	0	True				
ANR	504162	EqualityExpression	"get_bits ( & alac -> gb , 3 ) != 7"		503400	0		!=			
ANR	504163	CallExpression	"get_bits ( & alac -> gb , 3 )"		503400	0					
ANR	504164	Callee	get_bits		503400	0					
ANR	504165	Identifier	get_bits		503400	0					
ANR	504166	ArgumentList	& alac -> gb		503400	1					
ANR	504167	Argument	& alac -> gb		503400	0					
ANR	504168	UnaryOperationExpression	& alac -> gb		503400	0					
ANR	504169	UnaryOperator	&		503400	0					
ANR	504170	PtrMemberAccess	alac -> gb		503400	1					
ANR	504171	Identifier	alac		503400	0					
ANR	504172	Identifier	gb		503400	1					
ANR	504173	Argument	3		503400	1					
ANR	504174	PrimaryExpression	3		503400	0					
ANR	504175	PrimaryExpression	7		503400	1					
ANR	504176	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Error : Wrong End Of Frame\\n"" )"	279:8:5721:5780	503400	1	True				
ANR	504177	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Error : Wrong End Of Frame\\n"" )"		503400	0					
ANR	504178	Callee	av_log		503400	0					
ANR	504179	Identifier	av_log		503400	0					
ANR	504180	ArgumentList	avctx		503400	1					
ANR	504181	Argument	avctx		503400	0					
ANR	504182	Identifier	avctx		503400	0					
ANR	504183	Argument	AV_LOG_ERROR		503400	1					
ANR	504184	Identifier	AV_LOG_ERROR		503400	0					
ANR	504185	Argument	"""Error : Wrong End Of Frame\\n"""		503400	2					
ANR	504186	PrimaryExpression	"""Error : Wrong End Of Frame\\n"""		503400	0					
ANR	504187	IfStatement	if ( channels == 2 && interlacing_leftweight )		503400	28					
ANR	504188	Condition	channels == 2 && interlacing_leftweight	283:8:5793:5831	503400	0	True				
ANR	504189	AndExpression	channels == 2 && interlacing_leftweight		503400	0		&&			
ANR	504190	EqualityExpression	channels == 2		503400	0		==			
ANR	504191	Identifier	channels		503400	0					
ANR	504192	PrimaryExpression	2		503400	1					
ANR	504193	Identifier	interlacing_leftweight		503400	1					
ANR	504194	CompoundStatement		277:49:5669:5669	503400	1					
ANR	504195	ExpressionStatement	"decorrelate_stereo ( alac -> outputsamples_buffer , outputsamples , interlacing_shift , interlacing_leftweight )"	285:8:5845:5977	503400	0	True				
ANR	504196	CallExpression	"decorrelate_stereo ( alac -> outputsamples_buffer , outputsamples , interlacing_shift , interlacing_leftweight )"		503400	0					
ANR	504197	Callee	decorrelate_stereo		503400	0					
ANR	504198	Identifier	decorrelate_stereo		503400	0					
ANR	504199	ArgumentList	alac -> outputsamples_buffer		503400	1					
ANR	504200	Argument	alac -> outputsamples_buffer		503400	0					
ANR	504201	PtrMemberAccess	alac -> outputsamples_buffer		503400	0					
ANR	504202	Identifier	alac		503400	0					
ANR	504203	Identifier	outputsamples_buffer		503400	1					
ANR	504204	Argument	outputsamples		503400	1					
ANR	504205	Identifier	outputsamples		503400	0					
ANR	504206	Argument	interlacing_shift		503400	2					
ANR	504207	Identifier	interlacing_shift		503400	0					
ANR	504208	Argument	interlacing_leftweight		503400	3					
ANR	504209	Identifier	interlacing_leftweight		503400	0					
ANR	504210	IfStatement	if ( alac -> extra_bits )		503400	29					
ANR	504211	Condition	alac -> extra_bits	293:8:5997:6012	503400	0	True				
ANR	504212	PtrMemberAccess	alac -> extra_bits		503400	0					
ANR	504213	Identifier	alac		503400	0					
ANR	504214	Identifier	extra_bits		503400	1					
ANR	504215	CompoundStatement		287:26:5850:5850	503400	1					
ANR	504216	ExpressionStatement	"append_extra_bits ( alac -> outputsamples_buffer , alac -> extra_bits_buffer , alac -> extra_bits , alac -> numchannels , outputsamples )"	295:8:6026:6175	503400	0	True				
ANR	504217	CallExpression	"append_extra_bits ( alac -> outputsamples_buffer , alac -> extra_bits_buffer , alac -> extra_bits , alac -> numchannels , outputsamples )"		503400	0					
ANR	504218	Callee	append_extra_bits		503400	0					
ANR	504219	Identifier	append_extra_bits		503400	0					
ANR	504220	ArgumentList	alac -> outputsamples_buffer		503400	1					
ANR	504221	Argument	alac -> outputsamples_buffer		503400	0					
ANR	504222	PtrMemberAccess	alac -> outputsamples_buffer		503400	0					
ANR	504223	Identifier	alac		503400	0					
ANR	504224	Identifier	outputsamples_buffer		503400	1					
ANR	504225	Argument	alac -> extra_bits_buffer		503400	1					
ANR	504226	PtrMemberAccess	alac -> extra_bits_buffer		503400	0					
ANR	504227	Identifier	alac		503400	0					
ANR	504228	Identifier	extra_bits_buffer		503400	1					
ANR	504229	Argument	alac -> extra_bits		503400	2					
ANR	504230	PtrMemberAccess	alac -> extra_bits		503400	0					
ANR	504231	Identifier	alac		503400	0					
ANR	504232	Identifier	extra_bits		503400	1					
ANR	504233	Argument	alac -> numchannels		503400	3					
ANR	504234	PtrMemberAccess	alac -> numchannels		503400	0					
ANR	504235	Identifier	alac		503400	0					
ANR	504236	Identifier	numchannels		503400	1					
ANR	504237	Argument	outputsamples		503400	4					
ANR	504238	Identifier	outputsamples		503400	0					
ANR	504239	SwitchStatement	switch ( alac -> setinfo_sample_size )		503400	30					
ANR	504240	Condition	alac -> setinfo_sample_size	303:11:6198:6222	503400	0	True				
ANR	504241	PtrMemberAccess	alac -> setinfo_sample_size		503400	0					
ANR	504242	Identifier	alac		503400	0					
ANR	504243	Identifier	setinfo_sample_size		503400	1					
ANR	504244	CompoundStatement		297:38:6060:6060	503400	1					
ANR	504245	Label	case 16 :	305:4:6232:6239	503400	0	True				
ANR	504246	IfStatement	if ( channels == 2 )		503400	1					
ANR	504247	Condition	channels == 2	307:12:6254:6266	503400	0	True				
ANR	504248	EqualityExpression	channels == 2		503400	0		==			
ANR	504249	Identifier	channels		503400	0					
ANR	504250	PrimaryExpression	2		503400	1					
ANR	504251	CompoundStatement		301:27:6104:6104	503400	1					
ANR	504252	ExpressionStatement	"interleave_stereo_16 ( alac -> outputsamples_buffer , outbuffer , outputsamples )"	309:12:6284:6392	503400	0	True				
ANR	504253	CallExpression	"interleave_stereo_16 ( alac -> outputsamples_buffer , outbuffer , outputsamples )"		503400	0					
ANR	504254	Callee	interleave_stereo_16		503400	0					
ANR	504255	Identifier	interleave_stereo_16		503400	0					
ANR	504256	ArgumentList	alac -> outputsamples_buffer		503400	1					
ANR	504257	Argument	alac -> outputsamples_buffer		503400	0					
ANR	504258	PtrMemberAccess	alac -> outputsamples_buffer		503400	0					
ANR	504259	Identifier	alac		503400	0					
ANR	504260	Identifier	outputsamples_buffer		503400	1					
ANR	504261	Argument	outbuffer		503400	1					
ANR	504262	Identifier	outbuffer		503400	0					
ANR	504263	Argument	outputsamples		503400	2					
ANR	504264	Identifier	outputsamples		503400	0					
ANR	504265	ElseStatement	else		503400	0					
ANR	504266	CompoundStatement		307:15:6245:6245	503400	0					
ANR	504267	ForStatement	for ( i = 0 ; i < outputsamples ; i ++ )		503400	0					
ANR	504268	ForInit	i = 0 ;	315:17:6430:6435	503400	0	True				
ANR	504269	AssignmentExpression	i = 0		503400	0		=			
ANR	504270	Identifier	i		503400	0					
ANR	504271	PrimaryExpression	0		503400	1					
ANR	504272	Condition	i < outputsamples	315:24:6437:6453	503400	1	True				
ANR	504273	RelationalExpression	i < outputsamples		503400	0		<			
ANR	504274	Identifier	i		503400	0					
ANR	504275	Identifier	outputsamples		503400	1					
ANR	504276	PostIncDecOperationExpression	i ++	315:43:6456:6458	503400	2	True				
ANR	504277	Identifier	i		503400	0					
ANR	504278	IncDec	++		503400	1					
ANR	504279	CompoundStatement		309:48:6296:6296	503400	3					
ANR	504280	ExpressionStatement	( ( int16_t * ) outbuffer ) [ i ] = alac -> outputsamples_buffer [ 0 ] [ i ]	317:16:6480:6539	503400	0	True				
ANR	504281	AssignmentExpression	( ( int16_t * ) outbuffer ) [ i ] = alac -> outputsamples_buffer [ 0 ] [ i ]		503400	0		=			
ANR	504282	ArrayIndexing	( ( int16_t * ) outbuffer ) [ i ]		503400	0					
ANR	504283	CastExpression	( int16_t * ) outbuffer		503400	0					
ANR	504284	CastTarget	int16_t *		503400	0					
ANR	504285	Identifier	outbuffer		503400	1					
ANR	504286	Identifier	i		503400	1					
ANR	504287	ArrayIndexing	alac -> outputsamples_buffer [ 0 ] [ i ]		503400	1					
ANR	504288	ArrayIndexing	alac -> outputsamples_buffer [ 0 ]		503400	0					
ANR	504289	PtrMemberAccess	alac -> outputsamples_buffer		503400	0					
ANR	504290	Identifier	alac		503400	0					
ANR	504291	Identifier	outputsamples_buffer		503400	1					
ANR	504292	PrimaryExpression	0		503400	1					
ANR	504293	Identifier	i		503400	1					
ANR	504294	BreakStatement	break ;	323:8:6576:6581	503400	2	True				
ANR	504295	Label	case 24 :	325:4:6588:6595	503400	3	True				
ANR	504296	IfStatement	if ( channels == 2 )		503400	4					
ANR	504297	Condition	channels == 2	327:12:6610:6622	503400	0	True				
ANR	504298	EqualityExpression	channels == 2		503400	0		==			
ANR	504299	Identifier	channels		503400	0					
ANR	504300	PrimaryExpression	2		503400	1					
ANR	504301	CompoundStatement		321:27:6460:6460	503400	1					
ANR	504302	ExpressionStatement	"interleave_stereo_24 ( alac -> outputsamples_buffer , outbuffer , outputsamples )"	329:12:6640:6748	503400	0	True				
ANR	504303	CallExpression	"interleave_stereo_24 ( alac -> outputsamples_buffer , outbuffer , outputsamples )"		503400	0					
ANR	504304	Callee	interleave_stereo_24		503400	0					
ANR	504305	Identifier	interleave_stereo_24		503400	0					
ANR	504306	ArgumentList	alac -> outputsamples_buffer		503400	1					
ANR	504307	Argument	alac -> outputsamples_buffer		503400	0					
ANR	504308	PtrMemberAccess	alac -> outputsamples_buffer		503400	0					
ANR	504309	Identifier	alac		503400	0					
ANR	504310	Identifier	outputsamples_buffer		503400	1					
ANR	504311	Argument	outbuffer		503400	1					
ANR	504312	Identifier	outbuffer		503400	0					
ANR	504313	Argument	outputsamples		503400	2					
ANR	504314	Identifier	outputsamples		503400	0					
ANR	504315	ElseStatement	else		503400	0					
ANR	504316	CompoundStatement		327:15:6601:6601	503400	0					
ANR	504317	ForStatement	for ( i = 0 ; i < outputsamples ; i ++ )		503400	0					
ANR	504318	ForInit	i = 0 ;	335:17:6786:6791	503400	0	True				
ANR	504319	AssignmentExpression	i = 0		503400	0		=			
ANR	504320	Identifier	i		503400	0					
ANR	504321	PrimaryExpression	0		503400	1					
ANR	504322	Condition	i < outputsamples	335:24:6793:6809	503400	1	True				
ANR	504323	RelationalExpression	i < outputsamples		503400	0		<			
ANR	504324	Identifier	i		503400	0					
ANR	504325	Identifier	outputsamples		503400	1					
ANR	504326	PostIncDecOperationExpression	i ++	335:43:6812:6814	503400	2	True				
ANR	504327	Identifier	i		503400	0					
ANR	504328	IncDec	++		503400	1					
ANR	504329	ExpressionStatement	( ( int32_t * ) outbuffer ) [ i ] = alac -> outputsamples_buffer [ 0 ] [ i ] << 8	337:16:6834:6899	503400	3	True				
ANR	504330	AssignmentExpression	( ( int32_t * ) outbuffer ) [ i ] = alac -> outputsamples_buffer [ 0 ] [ i ] << 8		503400	0		=			
ANR	504331	ArrayIndexing	( ( int32_t * ) outbuffer ) [ i ]		503400	0					
ANR	504332	CastExpression	( int32_t * ) outbuffer		503400	0					
ANR	504333	CastTarget	int32_t *		503400	0					
ANR	504334	Identifier	outbuffer		503400	1					
ANR	504335	Identifier	i		503400	1					
ANR	504336	ShiftExpression	alac -> outputsamples_buffer [ 0 ] [ i ] << 8		503400	1		<<			
ANR	504337	ArrayIndexing	alac -> outputsamples_buffer [ 0 ] [ i ]		503400	0					
ANR	504338	ArrayIndexing	alac -> outputsamples_buffer [ 0 ]		503400	0					
ANR	504339	PtrMemberAccess	alac -> outputsamples_buffer		503400	0					
ANR	504340	Identifier	alac		503400	0					
ANR	504341	Identifier	outputsamples_buffer		503400	1					
ANR	504342	PrimaryExpression	0		503400	1					
ANR	504343	Identifier	i		503400	1					
ANR	504344	PrimaryExpression	8		503400	1					
ANR	504345	BreakStatement	break ;	341:8:6921:6926	503400	5	True				
ANR	504346	IfStatement	if ( input_buffer_size * 8 - get_bits_count ( & alac -> gb ) > 8 )		503400	31					
ANR	504347	Condition	input_buffer_size * 8 - get_bits_count ( & alac -> gb ) > 8	347:8:6946:6998	503400	0	True				
ANR	504348	RelationalExpression	input_buffer_size * 8 - get_bits_count ( & alac -> gb ) > 8		503400	0		>			
ANR	504349	AdditiveExpression	input_buffer_size * 8 - get_bits_count ( & alac -> gb )		503400	0		-			
ANR	504350	MultiplicativeExpression	input_buffer_size * 8		503400	0		*			
ANR	504351	Identifier	input_buffer_size		503400	0					
ANR	504352	PrimaryExpression	8		503400	1					
ANR	504353	CallExpression	get_bits_count ( & alac -> gb )		503400	1					
ANR	504354	Callee	get_bits_count		503400	0					
ANR	504355	Identifier	get_bits_count		503400	0					
ANR	504356	ArgumentList	& alac -> gb		503400	1					
ANR	504357	Argument	& alac -> gb		503400	0					
ANR	504358	UnaryOperationExpression	& alac -> gb		503400	0					
ANR	504359	UnaryOperator	&		503400	0					
ANR	504360	PtrMemberAccess	alac -> gb		503400	1					
ANR	504361	Identifier	alac		503400	0					
ANR	504362	Identifier	gb		503400	1					
ANR	504363	PrimaryExpression	8		503400	1					
ANR	504364	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Error : %d bits left\\n"" , input_buffer_size * 8 - get_bits_count ( & alac -> gb ) )"	349:8:7010:7114	503400	1	True				
ANR	504365	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Error : %d bits left\\n"" , input_buffer_size * 8 - get_bits_count ( & alac -> gb ) )"		503400	0					
ANR	504366	Callee	av_log		503400	0					
ANR	504367	Identifier	av_log		503400	0					
ANR	504368	ArgumentList	avctx		503400	1					
ANR	504369	Argument	avctx		503400	0					
ANR	504370	Identifier	avctx		503400	0					
ANR	504371	Argument	AV_LOG_ERROR		503400	1					
ANR	504372	Identifier	AV_LOG_ERROR		503400	0					
ANR	504373	Argument	"""Error : %d bits left\\n"""		503400	2					
ANR	504374	PrimaryExpression	"""Error : %d bits left\\n"""		503400	0					
ANR	504375	Argument	input_buffer_size * 8 - get_bits_count ( & alac -> gb )		503400	3					
ANR	504376	AdditiveExpression	input_buffer_size * 8 - get_bits_count ( & alac -> gb )		503400	0		-			
ANR	504377	MultiplicativeExpression	input_buffer_size * 8		503400	0		*			
ANR	504378	Identifier	input_buffer_size		503400	0					
ANR	504379	PrimaryExpression	8		503400	1					
ANR	504380	CallExpression	get_bits_count ( & alac -> gb )		503400	1					
ANR	504381	Callee	get_bits_count		503400	0					
ANR	504382	Identifier	get_bits_count		503400	0					
ANR	504383	ArgumentList	& alac -> gb		503400	1					
ANR	504384	Argument	& alac -> gb		503400	0					
ANR	504385	UnaryOperationExpression	& alac -> gb		503400	0					
ANR	504386	UnaryOperator	&		503400	0					
ANR	504387	PtrMemberAccess	alac -> gb		503400	1					
ANR	504388	Identifier	alac		503400	0					
ANR	504389	Identifier	gb		503400	1					
ANR	504390	ReturnStatement	return input_buffer_size ;	353:4:7123:7147	503400	32	True				
ANR	504391	Identifier	input_buffer_size		503400	0					
ANR	504392	ReturnType	static int		503400	1					
ANR	504393	Identifier	alac_decode_frame		503400	2					
ANR	504394	ParameterList	"AVCodecContext * avctx , void * outbuffer , int * outputsize , AVPacket * avpkt"		503400	3					
ANR	504395	Parameter	AVCodecContext * avctx	1:29:29:49	503400	0	True				
ANR	504396	ParameterType	AVCodecContext *		503400	0					
ANR	504397	Identifier	avctx		503400	1					
ANR	504398	Parameter	void * outbuffer	3:29:82:96	503400	1	True				
ANR	504399	ParameterType	void *		503400	0					
ANR	504400	Identifier	outbuffer		503400	1					
ANR	504401	Parameter	int * outputsize	3:46:99:113	503400	2	True				
ANR	504402	ParameterType	int *		503400	0					
ANR	504403	Identifier	outputsize		503400	1					
ANR	504404	Parameter	AVPacket * avpkt	5:29:146:160	503400	3	True				
ANR	504405	ParameterType	AVPacket *		503400	0					
ANR	504406	Identifier	avpkt		503400	1					
ANR	504407	CFGEntryNode	ENTRY		503400		True				
ANR	504408	CFGExitNode	EXIT		503400		True				
ANR	504409	Symbol	inbuffer		503400						
ANR	504410	Symbol	MIN_CACHE_BITS		503400						
ANR	504411	Symbol	prediction_quantitization		503400						
ANR	504412	Symbol	* * alac -> extra_bits_buffer		503400						
ANR	504413	Symbol	hassize		503400						
ANR	504414	Symbol	* ricemodifier		503400						
ANR	504415	Symbol	get_bits		503400						
ANR	504416	Symbol	* ch		503400						
ANR	504417	Symbol	avpkt		503400						
ANR	504418	Symbol	* prediction_type		503400						
ANR	504419	Symbol	prediction_type		503400						
ANR	504420	Symbol	avctx -> channels		503400						
ANR	504421	Symbol	* predictor_coef_table		503400						
ANR	504422	Symbol	alac -> bytespersample		503400						
ANR	504423	Symbol	predictor_coef_num		503400						
ANR	504424	Symbol	alac		503400						
ANR	504425	Symbol	outputsize		503400						
ANR	504426	Symbol	avctx -> sample_fmt		503400						
ANR	504427	Symbol	alac -> setinfo_rice_historymult		503400						
ANR	504428	Symbol	isnotcompressed		503400						
ANR	504429	Symbol	& alac -> gb		503400						
ANR	504430	Symbol	get_bits1		503400						
ANR	504431	Symbol	alac -> extra_bits		503400						
ANR	504432	Symbol	* * alac		503400						
ANR	504433	Symbol	get_bits_count		503400						
ANR	504434	Symbol	* prediction_quantitization		503400						
ANR	504435	Symbol	ricemodifier		503400						
ANR	504436	Symbol	* avctx		503400						
ANR	504437	Symbol	channels		503400						
ANR	504438	Symbol	* alac -> outputsamples_buffer		503400						
ANR	504439	Symbol	* alac -> predicterror_buffer		503400						
ANR	504440	Symbol	interlacing_leftweight		503400						
ANR	504441	Symbol	alac -> setinfo_rice_initialhistory		503400						
ANR	504442	Symbol	avpkt -> data		503400						
ANR	504443	Symbol	alac -> extra_bits_buffer		503400						
ANR	504444	Symbol	* alac -> extra_bits_buffer		503400						
ANR	504445	Symbol	alac -> outputsamples_buffer		503400						
ANR	504446	Symbol	av_get_bytes_per_sample		503400						
ANR	504447	Symbol	* * * alac		503400						
ANR	504448	Symbol	input_buffer_size		503400						
ANR	504449	Symbol	MAX_CHANNELS		503400						
ANR	504450	Symbol	interlacing_shift		503400						
ANR	504451	Symbol	* * predictor_coef_table		503400						
ANR	504452	Symbol	outbuffer		503400						
ANR	504453	Symbol	alac -> numchannels		503400						
ANR	504454	Symbol	outputsamples		503400						
ANR	504455	Symbol	* MAX_CHANNELS		503400						
ANR	504456	Symbol	* * ch		503400						
ANR	504457	Symbol	get_bits_long		503400						
ANR	504458	Symbol	alac -> setinfo_rice_kmodifier		503400						
ANR	504459	Symbol	avpkt -> size		503400						
ANR	504460	Symbol	avctx		503400						
ANR	504461	Symbol	* alac		503400						
ANR	504462	Symbol	get_sbits_long		503400						
ANR	504463	Symbol	predictor_coef_table		503400						
ANR	504464	Symbol	* avpkt		503400						
ANR	504465	Symbol	AV_LOG_ERROR		503400						
ANR	504466	Symbol	* outputsize		503400						
ANR	504467	Symbol	ch		503400						
ANR	504468	Symbol	i		503400						
ANR	504469	Symbol	* predictor_coef_num		503400						
ANR	504470	Symbol	avctx -> priv_data		503400						
ANR	504471	Symbol	alac -> setinfo_max_samples_per_frame		503400						
ANR	504472	Symbol	* outbuffer		503400						
ANR	504473	Symbol	readsamplesize		503400						
ANR	504474	Symbol	* i		503400						
ANR	504475	Symbol	alac -> predicterror_buffer		503400						
ANR	504476	Symbol	alac -> setinfo_sample_size		503400						
ANR	504477	Symbol	AVERROR_INVALIDDATA		503400						
ANR	504478	Symbol	* * alac -> outputsamples_buffer		503400						
