command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	9179170	File	/home/p4ultr4n/workplace/ReVeal/raw_code/vmdk_probe_0.c								
ANR	9179171	Function	vmdk_probe	1:0:0:1763							
ANR	9179172	FunctionDef	"vmdk_probe (const uint8_t * buf , int buf_size , const char * filename)"		9179171	0					
ANR	9179173	CompoundStatement		3:0:79:1763	9179171	0					
ANR	9179174	IdentifierDeclStatement	uint32_t magic ;	5:4:86:100	9179171	0	True				
ANR	9179175	IdentifierDecl	magic		9179171	0					
ANR	9179176	IdentifierDeclType	uint32_t		9179171	0					
ANR	9179177	Identifier	magic		9179171	1					
ANR	9179178	IfStatement	if ( buf_size < 4 )		9179171	1					
ANR	9179179	Condition	buf_size < 4	9:8:113:124	9179171	0	True				
ANR	9179180	RelationalExpression	buf_size < 4		9179171	0		<			
ANR	9179181	Identifier	buf_size		9179171	0					
ANR	9179182	PrimaryExpression	4		9179171	1					
ANR	9179183	ReturnStatement	return 0 ;	11:8:136:144	9179171	1	True				
ANR	9179184	PrimaryExpression	0		9179171	0					
ANR	9179185	ExpressionStatement	magic = be32_to_cpu ( * ( uint32_t * ) buf )	13:4:151:188	9179171	2	True				
ANR	9179186	AssignmentExpression	magic = be32_to_cpu ( * ( uint32_t * ) buf )		9179171	0		=			
ANR	9179187	Identifier	magic		9179171	0					
ANR	9179188	CallExpression	be32_to_cpu ( * ( uint32_t * ) buf )		9179171	1					
ANR	9179189	Callee	be32_to_cpu		9179171	0					
ANR	9179190	Identifier	be32_to_cpu		9179171	0					
ANR	9179191	ArgumentList	* ( uint32_t * ) buf		9179171	1					
ANR	9179192	Argument	* ( uint32_t * ) buf		9179171	0					
ANR	9179193	UnaryOperationExpression	* ( uint32_t * ) buf		9179171	0					
ANR	9179194	UnaryOperator	*		9179171	0					
ANR	9179195	CastExpression	( uint32_t * ) buf		9179171	1					
ANR	9179196	CastTarget	uint32_t *		9179171	0					
ANR	9179197	Identifier	buf		9179171	1					
ANR	9179198	IfStatement	if ( magic == VMDK3_MAGIC || magic == VMDK4_MAGIC )		9179171	3					
ANR	9179199	Condition	magic == VMDK3_MAGIC || magic == VMDK4_MAGIC	15:8:199:251	9179171	0	True				
ANR	9179200	OrExpression	magic == VMDK3_MAGIC || magic == VMDK4_MAGIC		9179171	0		||			
ANR	9179201	EqualityExpression	magic == VMDK3_MAGIC		9179171	0		==			
ANR	9179202	Identifier	magic		9179171	0					
ANR	9179203	Identifier	VMDK3_MAGIC		9179171	1					
ANR	9179204	EqualityExpression	magic == VMDK4_MAGIC		9179171	1		==			
ANR	9179205	Identifier	magic		9179171	0					
ANR	9179206	Identifier	VMDK4_MAGIC		9179171	1					
ANR	9179207	CompoundStatement		15:30:174:174	9179171	1					
ANR	9179208	ReturnStatement	return 100 ;	19:8:265:275	9179171	0	True				
ANR	9179209	PrimaryExpression	100		9179171	0					
ANR	9179210	ElseStatement	else		9179171	0					
ANR	9179211	CompoundStatement		23:8:264:294	9179171	0					
ANR	9179212	IdentifierDeclStatement	const char * p = ( const char * ) buf ;	23:8:300:333	9179171	0	True				
ANR	9179213	IdentifierDecl	* p = ( const char * ) buf		9179171	0					
ANR	9179214	IdentifierDeclType	const char *		9179171	0					
ANR	9179215	Identifier	p		9179171	1					
ANR	9179216	AssignmentExpression	* p = ( const char * ) buf		9179171	2		=			
ANR	9179217	Identifier	p		9179171	0					
ANR	9179218	CastExpression	( const char * ) buf		9179171	1					
ANR	9179219	CastTarget	const char *		9179171	0					
ANR	9179220	Identifier	buf		9179171	1					
ANR	9179221	IdentifierDeclStatement	const char * end = p + buf_size ;	25:8:344:374	9179171	1	True				
ANR	9179222	IdentifierDecl	* end = p + buf_size		9179171	0					
ANR	9179223	IdentifierDeclType	const char *		9179171	0					
ANR	9179224	Identifier	end		9179171	1					
ANR	9179225	AssignmentExpression	* end = p + buf_size		9179171	2		=			
ANR	9179226	Identifier	end		9179171	0					
ANR	9179227	AdditiveExpression	p + buf_size		9179171	1		+			
ANR	9179228	Identifier	p		9179171	0					
ANR	9179229	Identifier	buf_size		9179171	1					
ANR	9179230	WhileStatement	while ( p < end )		9179171	2					
ANR	9179231	Condition	p < end	27:15:392:398	9179171	0	True				
ANR	9179232	RelationalExpression	p < end		9179171	0		<			
ANR	9179233	Identifier	p		9179171	0					
ANR	9179234	Identifier	end		9179171	1					
ANR	9179235	CompoundStatement		25:24:321:321	9179171	1					
ANR	9179236	IfStatement	if ( * p == '#' )		9179171	0					
ANR	9179237	Condition	* p == '#'	29:16:420:428	9179171	0	True				
ANR	9179238	EqualityExpression	* p == '#'		9179171	0		==			
ANR	9179239	UnaryOperationExpression	* p		9179171	0					
ANR	9179240	UnaryOperator	*		9179171	0					
ANR	9179241	Identifier	p		9179171	1					
ANR	9179242	PrimaryExpression	'#'		9179171	1					
ANR	9179243	CompoundStatement		27:27:351:351	9179171	1					
ANR	9179244	WhileStatement	while ( p < end && * p != '\\n' )		9179171	0					
ANR	9179245	Condition	p < end && * p != '\\n'	33:23:498:518	9179171	0	True				
ANR	9179246	AndExpression	p < end && * p != '\\n'		9179171	0		&&			
ANR	9179247	RelationalExpression	p < end		9179171	0		<			
ANR	9179248	Identifier	p		9179171	0					
ANR	9179249	Identifier	end		9179171	1					
ANR	9179250	EqualityExpression	* p != '\\n'		9179171	1		!=			
ANR	9179251	UnaryOperationExpression	* p		9179171	0					
ANR	9179252	UnaryOperator	*		9179171	0					
ANR	9179253	Identifier	p		9179171	1					
ANR	9179254	PrimaryExpression	'\\n'		9179171	1					
ANR	9179255	CompoundStatement		31:46:441:441	9179171	1					
ANR	9179256	ExpressionStatement	p ++	35:20:544:547	9179171	0	True				
ANR	9179257	PostIncDecOperationExpression	p ++		9179171	0					
ANR	9179258	Identifier	p		9179171	0					
ANR	9179259	IncDec	++		9179171	1					
ANR	9179260	ExpressionStatement	p ++	39:16:585:588	9179171	1	True				
ANR	9179261	PostIncDecOperationExpression	p ++		9179171	0					
ANR	9179262	Identifier	p		9179171	0					
ANR	9179263	IncDec	++		9179171	1					
ANR	9179264	ContinueStatement	continue ;	41:16:607:615	9179171	2	True				
ANR	9179265	IfStatement	if ( * p == ' ' )		9179171	1					
ANR	9179266	Condition	* p == ' '	45:16:649:657	9179171	0	True				
ANR	9179267	EqualityExpression	* p == ' '		9179171	0		==			
ANR	9179268	UnaryOperationExpression	* p		9179171	0					
ANR	9179269	UnaryOperator	*		9179171	0					
ANR	9179270	Identifier	p		9179171	1					
ANR	9179271	PrimaryExpression	' '		9179171	1					
ANR	9179272	CompoundStatement		43:27:580:580	9179171	1					
ANR	9179273	WhileStatement	while ( p < end && * p == ' ' )		9179171	0					
ANR	9179274	Condition	p < end && * p == ' '	47:23:686:705	9179171	0	True				
ANR	9179275	AndExpression	p < end && * p == ' '		9179171	0		&&			
ANR	9179276	RelationalExpression	p < end		9179171	0		<			
ANR	9179277	Identifier	p		9179171	0					
ANR	9179278	Identifier	end		9179171	1					
ANR	9179279	EqualityExpression	* p == ' '		9179171	1		==			
ANR	9179280	UnaryOperationExpression	* p		9179171	0					
ANR	9179281	UnaryOperator	*		9179171	0					
ANR	9179282	Identifier	p		9179171	1					
ANR	9179283	PrimaryExpression	' '		9179171	1					
ANR	9179284	CompoundStatement		45:45:628:628	9179171	1					
ANR	9179285	ExpressionStatement	p ++	49:20:731:734	9179171	0	True				
ANR	9179286	PostIncDecOperationExpression	p ++		9179171	0					
ANR	9179287	Identifier	p		9179171	0					
ANR	9179288	IncDec	++		9179171	1					
ANR	9179289	IfStatement	if ( p < end && * p == '\\r' )		9179171	1					
ANR	9179290	Condition	p < end && * p == '\\r'	55:20:839:859	9179171	0	True				
ANR	9179291	AndExpression	p < end && * p == '\\r'		9179171	0		&&			
ANR	9179292	RelationalExpression	p < end		9179171	0		<			
ANR	9179293	Identifier	p		9179171	0					
ANR	9179294	Identifier	end		9179171	1					
ANR	9179295	EqualityExpression	* p == '\\r'		9179171	1		==			
ANR	9179296	UnaryOperationExpression	* p		9179171	0					
ANR	9179297	UnaryOperator	*		9179171	0					
ANR	9179298	Identifier	p		9179171	1					
ANR	9179299	PrimaryExpression	'\\r'		9179171	1					
ANR	9179300	CompoundStatement		53:43:782:782	9179171	1					
ANR	9179301	ExpressionStatement	p ++	57:20:885:888	9179171	0	True				
ANR	9179302	PostIncDecOperationExpression	p ++		9179171	0					
ANR	9179303	Identifier	p		9179171	0					
ANR	9179304	IncDec	++		9179171	1					
ANR	9179305	IfStatement	if ( p == end || * p != '\\n' )		9179171	2					
ANR	9179306	Condition	p == end || * p != '\\n'	63:20:1000:1021	9179171	0	True				
ANR	9179307	OrExpression	p == end || * p != '\\n'		9179171	0		||			
ANR	9179308	EqualityExpression	p == end		9179171	0		==			
ANR	9179309	Identifier	p		9179171	0					
ANR	9179310	Identifier	end		9179171	1					
ANR	9179311	EqualityExpression	* p != '\\n'		9179171	1		!=			
ANR	9179312	UnaryOperationExpression	* p		9179171	0					
ANR	9179313	UnaryOperator	*		9179171	0					
ANR	9179314	Identifier	p		9179171	1					
ANR	9179315	PrimaryExpression	'\\n'		9179171	1					
ANR	9179316	CompoundStatement		61:44:944:944	9179171	1					
ANR	9179317	ReturnStatement	return 0 ;	65:20:1047:1055	9179171	0	True				
ANR	9179318	PrimaryExpression	0		9179171	0					
ANR	9179319	ExpressionStatement	p ++	69:16:1093:1096	9179171	3	True				
ANR	9179320	PostIncDecOperationExpression	p ++		9179171	0					
ANR	9179321	Identifier	p		9179171	0					
ANR	9179322	IncDec	++		9179171	1					
ANR	9179323	ContinueStatement	continue ;	71:16:1115:1123	9179171	4	True				
ANR	9179324	IfStatement	"if ( end - p >= strlen ( ""version=X\\n"" ) )"		9179171	2					
ANR	9179325	Condition	"end - p >= strlen ( ""version=X\\n"" )"	75:16:1157:1188	9179171	0	True				
ANR	9179326	RelationalExpression	"end - p >= strlen ( ""version=X\\n"" )"		9179171	0		>=			
ANR	9179327	AdditiveExpression	end - p		9179171	0		-			
ANR	9179328	Identifier	end		9179171	0					
ANR	9179329	Identifier	p		9179171	1					
ANR	9179330	CallExpression	"strlen ( ""version=X\\n"" )"		9179171	1					
ANR	9179331	Callee	strlen		9179171	0					
ANR	9179332	Identifier	strlen		9179171	0					
ANR	9179333	ArgumentList	"""version=X\\n"""		9179171	1					
ANR	9179334	Argument	"""version=X\\n"""		9179171	0					
ANR	9179335	PrimaryExpression	"""version=X\\n"""		9179171	0					
ANR	9179336	CompoundStatement		73:50:1111:1111	9179171	1					
ANR	9179337	IfStatement	"if ( strncmp ( ""version=1\\n"" , p , strlen ( ""version=1\\n"" ) ) == 0 || strncmp ( ""version=2\\n"" , p , strlen ( ""version=2\\n"" ) ) == 0 )"		9179171	0					
ANR	9179338	Condition	"strncmp ( ""version=1\\n"" , p , strlen ( ""version=1\\n"" ) ) == 0 || strncmp ( ""version=2\\n"" , p , strlen ( ""version=2\\n"" ) ) == 0"	77:20:1214:1344	9179171	0	True				
ANR	9179339	OrExpression	"strncmp ( ""version=1\\n"" , p , strlen ( ""version=1\\n"" ) ) == 0 || strncmp ( ""version=2\\n"" , p , strlen ( ""version=2\\n"" ) ) == 0"		9179171	0		||			
ANR	9179340	EqualityExpression	"strncmp ( ""version=1\\n"" , p , strlen ( ""version=1\\n"" ) ) == 0"		9179171	0		==			
ANR	9179341	CallExpression	"strncmp ( ""version=1\\n"" , p , strlen ( ""version=1\\n"" ) )"		9179171	0					
ANR	9179342	Callee	strncmp		9179171	0					
ANR	9179343	Identifier	strncmp		9179171	0					
ANR	9179344	ArgumentList	"""version=1\\n"""		9179171	1					
ANR	9179345	Argument	"""version=1\\n"""		9179171	0					
ANR	9179346	PrimaryExpression	"""version=1\\n"""		9179171	0					
ANR	9179347	Argument	p		9179171	1					
ANR	9179348	Identifier	p		9179171	0					
ANR	9179349	Argument	"strlen ( ""version=1\\n"" )"		9179171	2					
ANR	9179350	CallExpression	"strlen ( ""version=1\\n"" )"		9179171	0					
ANR	9179351	Callee	strlen		9179171	0					
ANR	9179352	Identifier	strlen		9179171	0					
ANR	9179353	ArgumentList	"""version=1\\n"""		9179171	1					
ANR	9179354	Argument	"""version=1\\n"""		9179171	0					
ANR	9179355	PrimaryExpression	"""version=1\\n"""		9179171	0					
ANR	9179356	PrimaryExpression	0		9179171	1					
ANR	9179357	EqualityExpression	"strncmp ( ""version=2\\n"" , p , strlen ( ""version=2\\n"" ) ) == 0"		9179171	1		==			
ANR	9179358	CallExpression	"strncmp ( ""version=2\\n"" , p , strlen ( ""version=2\\n"" ) )"		9179171	0					
ANR	9179359	Callee	strncmp		9179171	0					
ANR	9179360	Identifier	strncmp		9179171	0					
ANR	9179361	ArgumentList	"""version=2\\n"""		9179171	1					
ANR	9179362	Argument	"""version=2\\n"""		9179171	0					
ANR	9179363	PrimaryExpression	"""version=2\\n"""		9179171	0					
ANR	9179364	Argument	p		9179171	1					
ANR	9179365	Identifier	p		9179171	0					
ANR	9179366	Argument	"strlen ( ""version=2\\n"" )"		9179171	2					
ANR	9179367	CallExpression	"strlen ( ""version=2\\n"" )"		9179171	0					
ANR	9179368	Callee	strlen		9179171	0					
ANR	9179369	Identifier	strlen		9179171	0					
ANR	9179370	ArgumentList	"""version=2\\n"""		9179171	1					
ANR	9179371	Argument	"""version=2\\n"""		9179171	0					
ANR	9179372	PrimaryExpression	"""version=2\\n"""		9179171	0					
ANR	9179373	PrimaryExpression	0		9179171	1					
ANR	9179374	CompoundStatement		77:75:1267:1267	9179171	1					
ANR	9179375	ReturnStatement	return 100 ;	81:20:1370:1380	9179171	0	True				
ANR	9179376	PrimaryExpression	100		9179171	0					
ANR	9179377	IfStatement	"if ( end - p >= strlen ( ""version=X\\r\\n"" ) )"		9179171	3					
ANR	9179378	Condition	"end - p >= strlen ( ""version=X\\r\\n"" )"	87:16:1433:1466	9179171	0	True				
ANR	9179379	RelationalExpression	"end - p >= strlen ( ""version=X\\r\\n"" )"		9179171	0		>=			
ANR	9179380	AdditiveExpression	end - p		9179171	0		-			
ANR	9179381	Identifier	end		9179171	0					
ANR	9179382	Identifier	p		9179171	1					
ANR	9179383	CallExpression	"strlen ( ""version=X\\r\\n"" )"		9179171	1					
ANR	9179384	Callee	strlen		9179171	0					
ANR	9179385	Identifier	strlen		9179171	0					
ANR	9179386	ArgumentList	"""version=X\\r\\n"""		9179171	1					
ANR	9179387	Argument	"""version=X\\r\\n"""		9179171	0					
ANR	9179388	PrimaryExpression	"""version=X\\r\\n"""		9179171	0					
ANR	9179389	CompoundStatement		85:52:1389:1389	9179171	1					
ANR	9179390	IfStatement	"if ( strncmp ( ""version=1\\r\\n"" , p , strlen ( ""version=1\\r\\n"" ) ) == 0 || strncmp ( ""version=2\\r\\n"" , p , strlen ( ""version=2\\r\\n"" ) ) == 0 )"		9179171	0					
ANR	9179391	Condition	"strncmp ( ""version=1\\r\\n"" , p , strlen ( ""version=1\\r\\n"" ) ) == 0 || strncmp ( ""version=2\\r\\n"" , p , strlen ( ""version=2\\r\\n"" ) ) == 0"	89:20:1492:1630	9179171	0	True				
ANR	9179392	OrExpression	"strncmp ( ""version=1\\r\\n"" , p , strlen ( ""version=1\\r\\n"" ) ) == 0 || strncmp ( ""version=2\\r\\n"" , p , strlen ( ""version=2\\r\\n"" ) ) == 0"		9179171	0		||			
ANR	9179393	EqualityExpression	"strncmp ( ""version=1\\r\\n"" , p , strlen ( ""version=1\\r\\n"" ) ) == 0"		9179171	0		==			
ANR	9179394	CallExpression	"strncmp ( ""version=1\\r\\n"" , p , strlen ( ""version=1\\r\\n"" ) )"		9179171	0					
ANR	9179395	Callee	strncmp		9179171	0					
ANR	9179396	Identifier	strncmp		9179171	0					
ANR	9179397	ArgumentList	"""version=1\\r\\n"""		9179171	1					
ANR	9179398	Argument	"""version=1\\r\\n"""		9179171	0					
ANR	9179399	PrimaryExpression	"""version=1\\r\\n"""		9179171	0					
ANR	9179400	Argument	p		9179171	1					
ANR	9179401	Identifier	p		9179171	0					
ANR	9179402	Argument	"strlen ( ""version=1\\r\\n"" )"		9179171	2					
ANR	9179403	CallExpression	"strlen ( ""version=1\\r\\n"" )"		9179171	0					
ANR	9179404	Callee	strlen		9179171	0					
ANR	9179405	Identifier	strlen		9179171	0					
ANR	9179406	ArgumentList	"""version=1\\r\\n"""		9179171	1					
ANR	9179407	Argument	"""version=1\\r\\n"""		9179171	0					
ANR	9179408	PrimaryExpression	"""version=1\\r\\n"""		9179171	0					
ANR	9179409	PrimaryExpression	0		9179171	1					
ANR	9179410	EqualityExpression	"strncmp ( ""version=2\\r\\n"" , p , strlen ( ""version=2\\r\\n"" ) ) == 0"		9179171	1		==			
ANR	9179411	CallExpression	"strncmp ( ""version=2\\r\\n"" , p , strlen ( ""version=2\\r\\n"" ) )"		9179171	0					
ANR	9179412	Callee	strncmp		9179171	0					
ANR	9179413	Identifier	strncmp		9179171	0					
ANR	9179414	ArgumentList	"""version=2\\r\\n"""		9179171	1					
ANR	9179415	Argument	"""version=2\\r\\n"""		9179171	0					
ANR	9179416	PrimaryExpression	"""version=2\\r\\n"""		9179171	0					
ANR	9179417	Argument	p		9179171	1					
ANR	9179418	Identifier	p		9179171	0					
ANR	9179419	Argument	"strlen ( ""version=2\\r\\n"" )"		9179171	2					
ANR	9179420	CallExpression	"strlen ( ""version=2\\r\\n"" )"		9179171	0					
ANR	9179421	Callee	strlen		9179171	0					
ANR	9179422	Identifier	strlen		9179171	0					
ANR	9179423	ArgumentList	"""version=2\\r\\n"""		9179171	1					
ANR	9179424	Argument	"""version=2\\r\\n"""		9179171	0					
ANR	9179425	PrimaryExpression	"""version=2\\r\\n"""		9179171	0					
ANR	9179426	PrimaryExpression	0		9179171	1					
ANR	9179427	CompoundStatement		89:79:1553:1553	9179171	1					
ANR	9179428	ReturnStatement	return 100 ;	93:20:1656:1666	9179171	0	True				
ANR	9179429	PrimaryExpression	100		9179171	0					
ANR	9179430	ReturnStatement	return 0 ;	99:12:1715:1723	9179171	4	True				
ANR	9179431	PrimaryExpression	0		9179171	0					
ANR	9179432	ReturnStatement	return 0 ;	103:8:1745:1753	9179171	3	True				
ANR	9179433	PrimaryExpression	0		9179171	0					
ANR	9179434	ReturnType	static int		9179171	1					
ANR	9179435	Identifier	vmdk_probe		9179171	2					
ANR	9179436	ParameterList	"const uint8_t * buf , int buf_size , const char * filename"		9179171	3					
ANR	9179437	Parameter	const uint8_t * buf	1:22:22:39	9179171	0	True				
ANR	9179438	ParameterType	const uint8_t *		9179171	0					
ANR	9179439	Identifier	buf		9179171	1					
ANR	9179440	Parameter	int buf_size	1:42:42:53	9179171	1	True				
ANR	9179441	ParameterType	int		9179171	0					
ANR	9179442	Identifier	buf_size		9179171	1					
ANR	9179443	Parameter	const char * filename	1:56:56:75	9179171	2	True				
ANR	9179444	ParameterType	const char *		9179171	0					
ANR	9179445	Identifier	filename		9179171	1					
ANR	9179446	CFGEntryNode	ENTRY		9179171		True				
ANR	9179447	CFGExitNode	EXIT		9179171		True				
ANR	9179448	Symbol	magic		9179171						
ANR	9179449	Symbol	* buf		9179171						
ANR	9179450	Symbol	VMDK3_MAGIC		9179171						
ANR	9179451	Symbol	buf_size		9179171						
ANR	9179452	Symbol	VMDK4_MAGIC		9179171						
ANR	9179453	Symbol	be32_to_cpu		9179171						
ANR	9179454	Symbol	p		9179171						
ANR	9179455	Symbol	strlen		9179171						
ANR	9179456	Symbol	strncmp		9179171						
ANR	9179457	Symbol	buf		9179171						
ANR	9179458	Symbol	filename		9179171						
ANR	9179459	Symbol	end		9179171						
ANR	9179460	Symbol	* p		9179171						
ANR	9179461	Symbol	* ( uint32_t * ) buf		9179171						
