command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3245279	File	/home/p4ultr4n/workplace/ReVeal/raw_code/ff_eac3_parse_header_0.c								
ANR	3245280	Function	ff_eac3_parse_header	1:0:0:12716							
ANR	3245281	FunctionDef	ff_eac3_parse_header (AC3DecodeContext * s)		3245280	0					
ANR	3245282	CompoundStatement		3:0:47:12716	3245280	0					
ANR	3245283	IdentifierDeclStatement	"int i , blk , ch ;"	5:4:54:68	3245280	0	True				
ANR	3245284	IdentifierDecl	i		3245280	0					
ANR	3245285	IdentifierDeclType	int		3245280	0					
ANR	3245286	Identifier	i		3245280	1					
ANR	3245287	IdentifierDecl	blk		3245280	1					
ANR	3245288	IdentifierDeclType	int		3245280	0					
ANR	3245289	Identifier	blk		3245280	1					
ANR	3245290	IdentifierDecl	ch		3245280	2					
ANR	3245291	IdentifierDeclType	int		3245280	0					
ANR	3245292	Identifier	ch		3245280	1					
ANR	3245293	IdentifierDeclStatement	"int ac3_exponent_strategy , parse_aht_info , parse_spx_atten_data ;"	7:4:75:138	3245280	1	True				
ANR	3245294	IdentifierDecl	ac3_exponent_strategy		3245280	0					
ANR	3245295	IdentifierDeclType	int		3245280	0					
ANR	3245296	Identifier	ac3_exponent_strategy		3245280	1					
ANR	3245297	IdentifierDecl	parse_aht_info		3245280	1					
ANR	3245298	IdentifierDeclType	int		3245280	0					
ANR	3245299	Identifier	parse_aht_info		3245280	1					
ANR	3245300	IdentifierDecl	parse_spx_atten_data		3245280	2					
ANR	3245301	IdentifierDeclType	int		3245280	0					
ANR	3245302	Identifier	parse_spx_atten_data		3245280	1					
ANR	3245303	IdentifierDeclStatement	int parse_transient_proc_info ;	9:4:145:174	3245280	2	True				
ANR	3245304	IdentifierDecl	parse_transient_proc_info		3245280	0					
ANR	3245305	IdentifierDeclType	int		3245280	0					
ANR	3245306	Identifier	parse_transient_proc_info		3245280	1					
ANR	3245307	IdentifierDeclStatement	int num_cpl_blocks ;	11:4:181:199	3245280	3	True				
ANR	3245308	IdentifierDecl	num_cpl_blocks		3245280	0					
ANR	3245309	IdentifierDeclType	int		3245280	0					
ANR	3245310	Identifier	num_cpl_blocks		3245280	1					
ANR	3245311	IdentifierDeclStatement	GetBitContext * gbc = & s -> gbc ;	13:4:206:234	3245280	4	True				
ANR	3245312	IdentifierDecl	* gbc = & s -> gbc		3245280	0					
ANR	3245313	IdentifierDeclType	GetBitContext *		3245280	0					
ANR	3245314	Identifier	gbc		3245280	1					
ANR	3245315	AssignmentExpression	* gbc = & s -> gbc		3245280	2		=			
ANR	3245316	Identifier	gbc		3245280	0					
ANR	3245317	UnaryOperationExpression	& s -> gbc		3245280	1					
ANR	3245318	UnaryOperator	&		3245280	0					
ANR	3245319	PtrMemberAccess	s -> gbc		3245280	1					
ANR	3245320	Identifier	s		3245280	0					
ANR	3245321	Identifier	gbc		3245280	1					
ANR	3245322	IfStatement	if ( s -> frame_type == EAC3_FRAME_TYPE_DEPENDENT )		3245280	5					
ANR	3245323	Condition	s -> frame_type == EAC3_FRAME_TYPE_DEPENDENT	23:8:470:511	3245280	0	True				
ANR	3245324	EqualityExpression	s -> frame_type == EAC3_FRAME_TYPE_DEPENDENT		3245280	0		==			
ANR	3245325	PtrMemberAccess	s -> frame_type		3245280	0					
ANR	3245326	Identifier	s		3245280	0					
ANR	3245327	Identifier	frame_type		3245280	1					
ANR	3245328	Identifier	EAC3_FRAME_TYPE_DEPENDENT		3245280	1					
ANR	3245329	CompoundStatement		21:52:466:466	3245280	1					
ANR	3245330	ExpressionStatement	"avpriv_request_sample ( s -> avctx , ""Dependent substream decoding"" )"	25:8:525:588	3245280	0	True				
ANR	3245331	CallExpression	"avpriv_request_sample ( s -> avctx , ""Dependent substream decoding"" )"		3245280	0					
ANR	3245332	Callee	avpriv_request_sample		3245280	0					
ANR	3245333	Identifier	avpriv_request_sample		3245280	0					
ANR	3245334	ArgumentList	s -> avctx		3245280	1					
ANR	3245335	Argument	s -> avctx		3245280	0					
ANR	3245336	PtrMemberAccess	s -> avctx		3245280	0					
ANR	3245337	Identifier	s		3245280	0					
ANR	3245338	Identifier	avctx		3245280	1					
ANR	3245339	Argument	"""Dependent substream decoding"""		3245280	1					
ANR	3245340	PrimaryExpression	"""Dependent substream decoding"""		3245280	0					
ANR	3245341	ReturnStatement	return AAC_AC3_PARSE_ERROR_FRAME_TYPE ;	27:8:599:636	3245280	1	True				
ANR	3245342	Identifier	AAC_AC3_PARSE_ERROR_FRAME_TYPE		3245280	0					
ANR	3245343	ElseStatement	else		3245280	0					
ANR	3245344	IfStatement	if ( s -> frame_type == EAC3_FRAME_TYPE_RESERVED )		3245280	0					
ANR	3245345	Condition	s -> frame_type == EAC3_FRAME_TYPE_RESERVED	29:15:654:694	3245280	0	True				
ANR	3245346	EqualityExpression	s -> frame_type == EAC3_FRAME_TYPE_RESERVED		3245280	0		==			
ANR	3245347	PtrMemberAccess	s -> frame_type		3245280	0					
ANR	3245348	Identifier	s		3245280	0					
ANR	3245349	Identifier	frame_type		3245280	1					
ANR	3245350	Identifier	EAC3_FRAME_TYPE_RESERVED		3245280	1					
ANR	3245351	CompoundStatement		27:58:649:649	3245280	1					
ANR	3245352	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_ERROR , ""Reserved frame type\\n"" )"	31:8:708:763	3245280	0	True				
ANR	3245353	CallExpression	"av_log ( s -> avctx , AV_LOG_ERROR , ""Reserved frame type\\n"" )"		3245280	0					
ANR	3245354	Callee	av_log		3245280	0					
ANR	3245355	Identifier	av_log		3245280	0					
ANR	3245356	ArgumentList	s -> avctx		3245280	1					
ANR	3245357	Argument	s -> avctx		3245280	0					
ANR	3245358	PtrMemberAccess	s -> avctx		3245280	0					
ANR	3245359	Identifier	s		3245280	0					
ANR	3245360	Identifier	avctx		3245280	1					
ANR	3245361	Argument	AV_LOG_ERROR		3245280	1					
ANR	3245362	Identifier	AV_LOG_ERROR		3245280	0					
ANR	3245363	Argument	"""Reserved frame type\\n"""		3245280	2					
ANR	3245364	PrimaryExpression	"""Reserved frame type\\n"""		3245280	0					
ANR	3245365	ReturnStatement	return AAC_AC3_PARSE_ERROR_FRAME_TYPE ;	33:8:774:811	3245280	1	True				
ANR	3245366	Identifier	AAC_AC3_PARSE_ERROR_FRAME_TYPE		3245280	0					
ANR	3245367	IfStatement	if ( s -> substreamid )		3245280	6					
ANR	3245368	Condition	s -> substreamid	45:8:1066:1079	3245280	0	True				
ANR	3245369	PtrMemberAccess	s -> substreamid		3245280	0					
ANR	3245370	Identifier	s		3245280	0					
ANR	3245371	Identifier	substreamid		3245280	1					
ANR	3245372	CompoundStatement		43:24:1034:1034	3245280	1					
ANR	3245373	ExpressionStatement	"avpriv_request_sample ( s -> avctx , ""Additional substreams"" )"	49:8:1173:1229	3245280	0	True				
ANR	3245374	CallExpression	"avpriv_request_sample ( s -> avctx , ""Additional substreams"" )"		3245280	0					
ANR	3245375	Callee	avpriv_request_sample		3245280	0					
ANR	3245376	Identifier	avpriv_request_sample		3245280	0					
ANR	3245377	ArgumentList	s -> avctx		3245280	1					
ANR	3245378	Argument	s -> avctx		3245280	0					
ANR	3245379	PtrMemberAccess	s -> avctx		3245280	0					
ANR	3245380	Identifier	s		3245280	0					
ANR	3245381	Identifier	avctx		3245280	1					
ANR	3245382	Argument	"""Additional substreams"""		3245280	1					
ANR	3245383	PrimaryExpression	"""Additional substreams"""		3245280	0					
ANR	3245384	ReturnStatement	return AAC_AC3_PARSE_ERROR_FRAME_TYPE ;	51:8:1240:1277	3245280	1	True				
ANR	3245385	Identifier	AAC_AC3_PARSE_ERROR_FRAME_TYPE		3245280	0					
ANR	3245386	IfStatement	if ( s -> bit_alloc_params . sr_code == EAC3_SR_CODE_REDUCED )		3245280	7					
ANR	3245387	Condition	s -> bit_alloc_params . sr_code == EAC3_SR_CODE_REDUCED	57:8:1297:1347	3245280	0	True				
ANR	3245388	EqualityExpression	s -> bit_alloc_params . sr_code == EAC3_SR_CODE_REDUCED		3245280	0		==			
ANR	3245389	MemberAccess	s -> bit_alloc_params . sr_code		3245280	0					
ANR	3245390	PtrMemberAccess	s -> bit_alloc_params		3245280	0					
ANR	3245391	Identifier	s		3245280	0					
ANR	3245392	Identifier	bit_alloc_params		3245280	1					
ANR	3245393	Identifier	sr_code		3245280	1					
ANR	3245394	Identifier	EAC3_SR_CODE_REDUCED		3245280	1					
ANR	3245395	CompoundStatement		55:61:1302:1302	3245280	1					
ANR	3245396	ExpressionStatement	"avpriv_request_sample ( s -> avctx , ""Reduced sampling rate"" )"	67:8:1648:1704	3245280	0	True				
ANR	3245397	CallExpression	"avpriv_request_sample ( s -> avctx , ""Reduced sampling rate"" )"		3245280	0					
ANR	3245398	Callee	avpriv_request_sample		3245280	0					
ANR	3245399	Identifier	avpriv_request_sample		3245280	0					
ANR	3245400	ArgumentList	s -> avctx		3245280	1					
ANR	3245401	Argument	s -> avctx		3245280	0					
ANR	3245402	PtrMemberAccess	s -> avctx		3245280	0					
ANR	3245403	Identifier	s		3245280	0					
ANR	3245404	Identifier	avctx		3245280	1					
ANR	3245405	Argument	"""Reduced sampling rate"""		3245280	1					
ANR	3245406	PrimaryExpression	"""Reduced sampling rate"""		3245280	0					
ANR	3245407	ReturnStatement	return AVERROR_PATCHWELCOME ;	69:8:1715:1742	3245280	1	True				
ANR	3245408	Identifier	AVERROR_PATCHWELCOME		3245280	0					
ANR	3245409	ExpressionStatement	"skip_bits ( gbc , 5 )"	73:4:1756:1773	3245280	8	True				
ANR	3245410	CallExpression	"skip_bits ( gbc , 5 )"		3245280	0					
ANR	3245411	Callee	skip_bits		3245280	0					
ANR	3245412	Identifier	skip_bits		3245280	0					
ANR	3245413	ArgumentList	gbc		3245280	1					
ANR	3245414	Argument	gbc		3245280	0					
ANR	3245415	Identifier	gbc		3245280	0					
ANR	3245416	Argument	5		3245280	1					
ANR	3245417	PrimaryExpression	5		3245280	0					
ANR	3245418	ForStatement	for ( i = 0 ; i < ( s -> channel_mode ? 1 : 2 ) ; i ++ )		3245280	9					
ANR	3245419	ForInit	i = 0 ;	79:9:1841:1846	3245280	0	True				
ANR	3245420	AssignmentExpression	i = 0		3245280	0		=			
ANR	3245421	Identifier	i		3245280	0					
ANR	3245422	PrimaryExpression	0		3245280	1					
ANR	3245423	Condition	i < ( s -> channel_mode ? 1 : 2 )	79:16:1848:1876	3245280	1	True				
ANR	3245424	RelationalExpression	i < ( s -> channel_mode ? 1 : 2 )		3245280	0		<			
ANR	3245425	Identifier	i		3245280	0					
ANR	3245426	ConditionalExpression	s -> channel_mode ? 1 : 2		3245280	1					
ANR	3245427	Condition	s -> channel_mode		3245280	0					
ANR	3245428	PtrMemberAccess	s -> channel_mode		3245280	0					
ANR	3245429	Identifier	s		3245280	0					
ANR	3245430	Identifier	channel_mode		3245280	1					
ANR	3245431	PrimaryExpression	1		3245280	1					
ANR	3245432	PrimaryExpression	2		3245280	2					
ANR	3245433	PostIncDecOperationExpression	i ++	79:47:1879:1881	3245280	2	True				
ANR	3245434	Identifier	i		3245280	0					
ANR	3245435	IncDec	++		3245280	1					
ANR	3245436	CompoundStatement		77:52:1836:1836	3245280	3					
ANR	3245437	ExpressionStatement	"skip_bits ( gbc , 5 )"	81:8:1895:1912	3245280	0	True				
ANR	3245438	CallExpression	"skip_bits ( gbc , 5 )"		3245280	0					
ANR	3245439	Callee	skip_bits		3245280	0					
ANR	3245440	Identifier	skip_bits		3245280	0					
ANR	3245441	ArgumentList	gbc		3245280	1					
ANR	3245442	Argument	gbc		3245280	0					
ANR	3245443	Identifier	gbc		3245280	0					
ANR	3245444	Argument	5		3245280	1					
ANR	3245445	PrimaryExpression	5		3245280	0					
ANR	3245446	IfStatement	if ( get_bits1 ( gbc ) )		3245280	1					
ANR	3245447	Condition	get_bits1 ( gbc )	83:12:1956:1969	3245280	0	True				
ANR	3245448	CallExpression	get_bits1 ( gbc )		3245280	0					
ANR	3245449	Callee	get_bits1		3245280	0					
ANR	3245450	Identifier	get_bits1		3245280	0					
ANR	3245451	ArgumentList	gbc		3245280	1					
ANR	3245452	Argument	gbc		3245280	0					
ANR	3245453	Identifier	gbc		3245280	0					
ANR	3245454	CompoundStatement		81:28:1924:1924	3245280	1					
ANR	3245455	ExpressionStatement	"skip_bits ( gbc , 8 )"	85:12:1987:2004	3245280	0	True				
ANR	3245456	CallExpression	"skip_bits ( gbc , 8 )"		3245280	0					
ANR	3245457	Callee	skip_bits		3245280	0					
ANR	3245458	Identifier	skip_bits		3245280	0					
ANR	3245459	ArgumentList	gbc		3245280	1					
ANR	3245460	Argument	gbc		3245280	0					
ANR	3245461	Identifier	gbc		3245280	0					
ANR	3245462	Argument	8		3245280	1					
ANR	3245463	PrimaryExpression	8		3245280	0					
ANR	3245464	IfStatement	if ( s -> frame_type == EAC3_FRAME_TYPE_DEPENDENT )		3245280	10					
ANR	3245465	Condition	s -> frame_type == EAC3_FRAME_TYPE_DEPENDENT	95:8:2105:2146	3245280	0	True				
ANR	3245466	EqualityExpression	s -> frame_type == EAC3_FRAME_TYPE_DEPENDENT		3245280	0		==			
ANR	3245467	PtrMemberAccess	s -> frame_type		3245280	0					
ANR	3245468	Identifier	s		3245280	0					
ANR	3245469	Identifier	frame_type		3245280	1					
ANR	3245470	Identifier	EAC3_FRAME_TYPE_DEPENDENT		3245280	1					
ANR	3245471	CompoundStatement		93:52:2101:2101	3245280	1					
ANR	3245472	IfStatement	if ( get_bits1 ( gbc ) )		3245280	0					
ANR	3245473	Condition	get_bits1 ( gbc )	97:12:2164:2177	3245280	0	True				
ANR	3245474	CallExpression	get_bits1 ( gbc )		3245280	0					
ANR	3245475	Callee	get_bits1		3245280	0					
ANR	3245476	Identifier	get_bits1		3245280	0					
ANR	3245477	ArgumentList	gbc		3245280	1					
ANR	3245478	Argument	gbc		3245280	0					
ANR	3245479	Identifier	gbc		3245280	0					
ANR	3245480	CompoundStatement		95:28:2132:2132	3245280	1					
ANR	3245481	ExpressionStatement	"skip_bits ( gbc , 16 )"	99:12:2195:2213	3245280	0	True				
ANR	3245482	CallExpression	"skip_bits ( gbc , 16 )"		3245280	0					
ANR	3245483	Callee	skip_bits		3245280	0					
ANR	3245484	Identifier	skip_bits		3245280	0					
ANR	3245485	ArgumentList	gbc		3245280	1					
ANR	3245486	Argument	gbc		3245280	0					
ANR	3245487	Identifier	gbc		3245280	0					
ANR	3245488	Argument	16		3245280	1					
ANR	3245489	PrimaryExpression	16		3245280	0					
ANR	3245490	IfStatement	if ( get_bits1 ( gbc ) )		3245280	11					
ANR	3245491	Condition	get_bits1 ( gbc )	109:8:2298:2311	3245280	0	True				
ANR	3245492	CallExpression	get_bits1 ( gbc )		3245280	0					
ANR	3245493	Callee	get_bits1		3245280	0					
ANR	3245494	Identifier	get_bits1		3245280	0					
ANR	3245495	ArgumentList	gbc		3245280	1					
ANR	3245496	Argument	gbc		3245280	0					
ANR	3245497	Identifier	gbc		3245280	0					
ANR	3245498	CompoundStatement		107:24:2266:2266	3245280	1					
ANR	3245499	IfStatement	if ( s -> channel_mode > AC3_CHMODE_STEREO )		3245280	0					
ANR	3245500	Condition	s -> channel_mode > AC3_CHMODE_STEREO	113:12:2375:2409	3245280	0	True				
ANR	3245501	RelationalExpression	s -> channel_mode > AC3_CHMODE_STEREO		3245280	0		>			
ANR	3245502	PtrMemberAccess	s -> channel_mode		3245280	0					
ANR	3245503	Identifier	s		3245280	0					
ANR	3245504	Identifier	channel_mode		3245280	1					
ANR	3245505	Identifier	AC3_CHMODE_STEREO		3245280	1					
ANR	3245506	CompoundStatement		111:49:2364:2364	3245280	1					
ANR	3245507	ExpressionStatement	"s -> preferred_downmix = get_bits ( gbc , 2 )"	115:12:2427:2466	3245280	0	True				
ANR	3245508	AssignmentExpression	"s -> preferred_downmix = get_bits ( gbc , 2 )"		3245280	0		=			
ANR	3245509	PtrMemberAccess	s -> preferred_downmix		3245280	0					
ANR	3245510	Identifier	s		3245280	0					
ANR	3245511	Identifier	preferred_downmix		3245280	1					
ANR	3245512	CallExpression	"get_bits ( gbc , 2 )"		3245280	1					
ANR	3245513	Callee	get_bits		3245280	0					
ANR	3245514	Identifier	get_bits		3245280	0					
ANR	3245515	ArgumentList	gbc		3245280	1					
ANR	3245516	Argument	gbc		3245280	0					
ANR	3245517	Identifier	gbc		3245280	0					
ANR	3245518	Argument	2		3245280	1					
ANR	3245519	PrimaryExpression	2		3245280	0					
ANR	3245520	IfStatement	if ( s -> channel_mode & 1 )		3245280	1					
ANR	3245521	Condition	s -> channel_mode & 1	117:16:2485:2503	3245280	0	True				
ANR	3245522	BitAndExpression	s -> channel_mode & 1		3245280	0		&			
ANR	3245523	PtrMemberAccess	s -> channel_mode		3245280	0					
ANR	3245524	Identifier	s		3245280	0					
ANR	3245525	Identifier	channel_mode		3245280	1					
ANR	3245526	PrimaryExpression	1		3245280	1					
ANR	3245527	CompoundStatement		115:37:2458:2458	3245280	1					
ANR	3245528	ExpressionStatement	"s -> center_mix_level_ltrt = get_bits ( gbc , 3 )"	121:16:2578:2621	3245280	0	True				
ANR	3245529	AssignmentExpression	"s -> center_mix_level_ltrt = get_bits ( gbc , 3 )"		3245280	0		=			
ANR	3245530	PtrMemberAccess	s -> center_mix_level_ltrt		3245280	0					
ANR	3245531	Identifier	s		3245280	0					
ANR	3245532	Identifier	center_mix_level_ltrt		3245280	1					
ANR	3245533	CallExpression	"get_bits ( gbc , 3 )"		3245280	1					
ANR	3245534	Callee	get_bits		3245280	0					
ANR	3245535	Identifier	get_bits		3245280	0					
ANR	3245536	ArgumentList	gbc		3245280	1					
ANR	3245537	Argument	gbc		3245280	0					
ANR	3245538	Identifier	gbc		3245280	0					
ANR	3245539	Argument	3		3245280	1					
ANR	3245540	PrimaryExpression	3		3245280	0					
ANR	3245541	ExpressionStatement	"s -> center_mix_level = get_bits ( gbc , 3 )"	123:16:2640:2683	3245280	1	True				
ANR	3245542	AssignmentExpression	"s -> center_mix_level = get_bits ( gbc , 3 )"		3245280	0		=			
ANR	3245543	PtrMemberAccess	s -> center_mix_level		3245280	0					
ANR	3245544	Identifier	s		3245280	0					
ANR	3245545	Identifier	center_mix_level		3245280	1					
ANR	3245546	CallExpression	"get_bits ( gbc , 3 )"		3245280	1					
ANR	3245547	Callee	get_bits		3245280	0					
ANR	3245548	Identifier	get_bits		3245280	0					
ANR	3245549	ArgumentList	gbc		3245280	1					
ANR	3245550	Argument	gbc		3245280	0					
ANR	3245551	Identifier	gbc		3245280	0					
ANR	3245552	Argument	3		3245280	1					
ANR	3245553	PrimaryExpression	3		3245280	0					
ANR	3245554	IfStatement	if ( s -> channel_mode & 4 )		3245280	2					
ANR	3245555	Condition	s -> channel_mode & 4	127:16:2717:2735	3245280	0	True				
ANR	3245556	BitAndExpression	s -> channel_mode & 4		3245280	0		&			
ANR	3245557	PtrMemberAccess	s -> channel_mode		3245280	0					
ANR	3245558	Identifier	s		3245280	0					
ANR	3245559	Identifier	channel_mode		3245280	1					
ANR	3245560	PrimaryExpression	4		3245280	1					
ANR	3245561	CompoundStatement		125:37:2690:2690	3245280	1					
ANR	3245562	ExpressionStatement	"s -> surround_mix_level_ltrt = av_clip ( get_bits ( gbc , 3 ) , 3 , 7 )"	131:16:2809:2869	3245280	0	True				
ANR	3245563	AssignmentExpression	"s -> surround_mix_level_ltrt = av_clip ( get_bits ( gbc , 3 ) , 3 , 7 )"		3245280	0		=			
ANR	3245564	PtrMemberAccess	s -> surround_mix_level_ltrt		3245280	0					
ANR	3245565	Identifier	s		3245280	0					
ANR	3245566	Identifier	surround_mix_level_ltrt		3245280	1					
ANR	3245567	CallExpression	"av_clip ( get_bits ( gbc , 3 ) , 3 , 7 )"		3245280	1					
ANR	3245568	Callee	av_clip		3245280	0					
ANR	3245569	Identifier	av_clip		3245280	0					
ANR	3245570	ArgumentList	"get_bits ( gbc , 3 )"		3245280	1					
ANR	3245571	Argument	"get_bits ( gbc , 3 )"		3245280	0					
ANR	3245572	CallExpression	"get_bits ( gbc , 3 )"		3245280	0					
ANR	3245573	Callee	get_bits		3245280	0					
ANR	3245574	Identifier	get_bits		3245280	0					
ANR	3245575	ArgumentList	gbc		3245280	1					
ANR	3245576	Argument	gbc		3245280	0					
ANR	3245577	Identifier	gbc		3245280	0					
ANR	3245578	Argument	3		3245280	1					
ANR	3245579	PrimaryExpression	3		3245280	0					
ANR	3245580	Argument	3		3245280	1					
ANR	3245581	PrimaryExpression	3		3245280	0					
ANR	3245582	Argument	7		3245280	2					
ANR	3245583	PrimaryExpression	7		3245280	0					
ANR	3245584	ExpressionStatement	"s -> surround_mix_level = av_clip ( get_bits ( gbc , 3 ) , 3 , 7 )"	133:16:2888:2948	3245280	1	True				
ANR	3245585	AssignmentExpression	"s -> surround_mix_level = av_clip ( get_bits ( gbc , 3 ) , 3 , 7 )"		3245280	0		=			
ANR	3245586	PtrMemberAccess	s -> surround_mix_level		3245280	0					
ANR	3245587	Identifier	s		3245280	0					
ANR	3245588	Identifier	surround_mix_level		3245280	1					
ANR	3245589	CallExpression	"av_clip ( get_bits ( gbc , 3 ) , 3 , 7 )"		3245280	1					
ANR	3245590	Callee	av_clip		3245280	0					
ANR	3245591	Identifier	av_clip		3245280	0					
ANR	3245592	ArgumentList	"get_bits ( gbc , 3 )"		3245280	1					
ANR	3245593	Argument	"get_bits ( gbc , 3 )"		3245280	0					
ANR	3245594	CallExpression	"get_bits ( gbc , 3 )"		3245280	0					
ANR	3245595	Callee	get_bits		3245280	0					
ANR	3245596	Identifier	get_bits		3245280	0					
ANR	3245597	ArgumentList	gbc		3245280	1					
ANR	3245598	Argument	gbc		3245280	0					
ANR	3245599	Identifier	gbc		3245280	0					
ANR	3245600	Argument	3		3245280	1					
ANR	3245601	PrimaryExpression	3		3245280	0					
ANR	3245602	Argument	3		3245280	1					
ANR	3245603	PrimaryExpression	3		3245280	0					
ANR	3245604	Argument	7		3245280	2					
ANR	3245605	PrimaryExpression	7		3245280	0					
ANR	3245606	IfStatement	if ( s -> lfe_on && ( s -> lfe_mix_level_exists = get_bits1 ( gbc ) ) )		3245280	1					
ANR	3245607	Condition	s -> lfe_on && ( s -> lfe_mix_level_exists = get_bits1 ( gbc ) )	143:12:3020:3074	3245280	0	True				
ANR	3245608	AndExpression	s -> lfe_on && ( s -> lfe_mix_level_exists = get_bits1 ( gbc ) )		3245280	0		&&			
ANR	3245609	PtrMemberAccess	s -> lfe_on		3245280	0					
ANR	3245610	Identifier	s		3245280	0					
ANR	3245611	Identifier	lfe_on		3245280	1					
ANR	3245612	AssignmentExpression	s -> lfe_mix_level_exists = get_bits1 ( gbc )		3245280	1		=			
ANR	3245613	PtrMemberAccess	s -> lfe_mix_level_exists		3245280	0					
ANR	3245614	Identifier	s		3245280	0					
ANR	3245615	Identifier	lfe_mix_level_exists		3245280	1					
ANR	3245616	CallExpression	get_bits1 ( gbc )		3245280	1					
ANR	3245617	Callee	get_bits1		3245280	0					
ANR	3245618	Identifier	get_bits1		3245280	0					
ANR	3245619	ArgumentList	gbc		3245280	1					
ANR	3245620	Argument	gbc		3245280	0					
ANR	3245621	Identifier	gbc		3245280	0					
ANR	3245622	CompoundStatement		141:69:3029:3029	3245280	1					
ANR	3245623	ExpressionStatement	"s -> lfe_mix_level = get_bits ( gbc , 5 )"	145:12:3092:3127	3245280	0	True				
ANR	3245624	AssignmentExpression	"s -> lfe_mix_level = get_bits ( gbc , 5 )"		3245280	0		=			
ANR	3245625	PtrMemberAccess	s -> lfe_mix_level		3245280	0					
ANR	3245626	Identifier	s		3245280	0					
ANR	3245627	Identifier	lfe_mix_level		3245280	1					
ANR	3245628	CallExpression	"get_bits ( gbc , 5 )"		3245280	1					
ANR	3245629	Callee	get_bits		3245280	0					
ANR	3245630	Identifier	get_bits		3245280	0					
ANR	3245631	ArgumentList	gbc		3245280	1					
ANR	3245632	Argument	gbc		3245280	0					
ANR	3245633	Identifier	gbc		3245280	0					
ANR	3245634	Argument	5		3245280	1					
ANR	3245635	PrimaryExpression	5		3245280	0					
ANR	3245636	IfStatement	if ( s -> frame_type == EAC3_FRAME_TYPE_INDEPENDENT )		3245280	2					
ANR	3245637	Condition	s -> frame_type == EAC3_FRAME_TYPE_INDEPENDENT	153:12:3220:3263	3245280	0	True				
ANR	3245638	EqualityExpression	s -> frame_type == EAC3_FRAME_TYPE_INDEPENDENT		3245280	0		==			
ANR	3245639	PtrMemberAccess	s -> frame_type		3245280	0					
ANR	3245640	Identifier	s		3245280	0					
ANR	3245641	Identifier	frame_type		3245280	1					
ANR	3245642	Identifier	EAC3_FRAME_TYPE_INDEPENDENT		3245280	1					
ANR	3245643	CompoundStatement		151:58:3218:3218	3245280	1					
ANR	3245644	ForStatement	for ( i = 0 ; i < ( s -> channel_mode ? 1 : 2 ) ; i ++ )		3245280	0					
ANR	3245645	ForInit	i = 0 ;	155:17:3286:3291	3245280	0	True				
ANR	3245646	AssignmentExpression	i = 0		3245280	0		=			
ANR	3245647	Identifier	i		3245280	0					
ANR	3245648	PrimaryExpression	0		3245280	1					
ANR	3245649	Condition	i < ( s -> channel_mode ? 1 : 2 )	155:24:3293:3321	3245280	1	True				
ANR	3245650	RelationalExpression	i < ( s -> channel_mode ? 1 : 2 )		3245280	0		<			
ANR	3245651	Identifier	i		3245280	0					
ANR	3245652	ConditionalExpression	s -> channel_mode ? 1 : 2		3245280	1					
ANR	3245653	Condition	s -> channel_mode		3245280	0					
ANR	3245654	PtrMemberAccess	s -> channel_mode		3245280	0					
ANR	3245655	Identifier	s		3245280	0					
ANR	3245656	Identifier	channel_mode		3245280	1					
ANR	3245657	PrimaryExpression	1		3245280	1					
ANR	3245658	PrimaryExpression	2		3245280	2					
ANR	3245659	PostIncDecOperationExpression	i ++	155:55:3324:3326	3245280	2	True				
ANR	3245660	Identifier	i		3245280	0					
ANR	3245661	IncDec	++		3245280	1					
ANR	3245662	CompoundStatement		153:60:3281:3281	3245280	3					
ANR	3245663	IfStatement	if ( get_bits1 ( gbc ) )		3245280	0					
ANR	3245664	Condition	get_bits1 ( gbc )	159:20:3405:3418	3245280	0	True				
ANR	3245665	CallExpression	get_bits1 ( gbc )		3245280	0					
ANR	3245666	Callee	get_bits1		3245280	0					
ANR	3245667	Identifier	get_bits1		3245280	0					
ANR	3245668	ArgumentList	gbc		3245280	1					
ANR	3245669	Argument	gbc		3245280	0					
ANR	3245670	Identifier	gbc		3245280	0					
ANR	3245671	CompoundStatement		157:36:3373:3373	3245280	1					
ANR	3245672	ExpressionStatement	"skip_bits ( gbc , 6 )"	161:20:3444:3461	3245280	0	True				
ANR	3245673	CallExpression	"skip_bits ( gbc , 6 )"		3245280	0					
ANR	3245674	Callee	skip_bits		3245280	0					
ANR	3245675	Identifier	skip_bits		3245280	0					
ANR	3245676	ArgumentList	gbc		3245280	1					
ANR	3245677	Argument	gbc		3245280	0					
ANR	3245678	Identifier	gbc		3245280	0					
ANR	3245679	Argument	6		3245280	1					
ANR	3245680	PrimaryExpression	6		3245280	0					
ANR	3245681	IfStatement	if ( get_bits1 ( gbc ) )		3245280	1					
ANR	3245682	Condition	get_bits1 ( gbc )	167:16:3544:3557	3245280	0	True				
ANR	3245683	CallExpression	get_bits1 ( gbc )		3245280	0					
ANR	3245684	Callee	get_bits1		3245280	0					
ANR	3245685	Identifier	get_bits1		3245280	0					
ANR	3245686	ArgumentList	gbc		3245280	1					
ANR	3245687	Argument	gbc		3245280	0					
ANR	3245688	Identifier	gbc		3245280	0					
ANR	3245689	CompoundStatement		165:32:3512:3512	3245280	1					
ANR	3245690	ExpressionStatement	"skip_bits ( gbc , 6 )"	169:16:3579:3596	3245280	0	True				
ANR	3245691	CallExpression	"skip_bits ( gbc , 6 )"		3245280	0					
ANR	3245692	Callee	skip_bits		3245280	0					
ANR	3245693	Identifier	skip_bits		3245280	0					
ANR	3245694	ArgumentList	gbc		3245280	1					
ANR	3245695	Argument	gbc		3245280	0					
ANR	3245696	Identifier	gbc		3245280	0					
ANR	3245697	Argument	6		3245280	1					
ANR	3245698	PrimaryExpression	6		3245280	0					
ANR	3245699	SwitchStatement	"switch ( get_bits ( gbc , 2 ) )"		3245280	2					
ANR	3245700	Condition	"get_bits ( gbc , 2 )"	175:19:3718:3733	3245280	0	True				
ANR	3245701	CallExpression	"get_bits ( gbc , 2 )"		3245280	0					
ANR	3245702	Callee	get_bits		3245280	0					
ANR	3245703	Identifier	get_bits		3245280	0					
ANR	3245704	ArgumentList	gbc		3245280	1					
ANR	3245705	Argument	gbc		3245280	0					
ANR	3245706	Identifier	gbc		3245280	0					
ANR	3245707	Argument	2		3245280	1					
ANR	3245708	PrimaryExpression	2		3245280	0					
ANR	3245709	CompoundStatement		173:37:3688:3688	3245280	1					
ANR	3245710	Label	case 1 :	177:16:3755:3761	3245280	0	True				
ANR	3245711	ExpressionStatement	"skip_bits ( gbc , 5 )"	177:24:3763:3780	3245280	1	True				
ANR	3245712	CallExpression	"skip_bits ( gbc , 5 )"		3245280	0					
ANR	3245713	Callee	skip_bits		3245280	0					
ANR	3245714	Identifier	skip_bits		3245280	0					
ANR	3245715	ArgumentList	gbc		3245280	1					
ANR	3245716	Argument	gbc		3245280	0					
ANR	3245717	Identifier	gbc		3245280	0					
ANR	3245718	Argument	5		3245280	1					
ANR	3245719	PrimaryExpression	5		3245280	0					
ANR	3245720	BreakStatement	break ;	177:44:3783:3788	3245280	2	True				
ANR	3245721	Label	case 2 :	179:16:3807:3813	3245280	3	True				
ANR	3245722	ExpressionStatement	"skip_bits ( gbc , 12 )"	179:24:3815:3833	3245280	4	True				
ANR	3245723	CallExpression	"skip_bits ( gbc , 12 )"		3245280	0					
ANR	3245724	Callee	skip_bits		3245280	0					
ANR	3245725	Identifier	skip_bits		3245280	0					
ANR	3245726	ArgumentList	gbc		3245280	1					
ANR	3245727	Argument	gbc		3245280	0					
ANR	3245728	Identifier	gbc		3245280	0					
ANR	3245729	Argument	12		3245280	1					
ANR	3245730	PrimaryExpression	12		3245280	0					
ANR	3245731	BreakStatement	break ;	179:44:3835:3840	3245280	5	True				
ANR	3245732	Label	case 3 :	181:16:3859:3865	3245280	6	True				
ANR	3245733	CompoundStatement		181:20:3842:3889	3245280	7					
ANR	3245734	IdentifierDeclStatement	"int mix_data_size = ( get_bits ( gbc , 5 ) + 2 ) << 3 ;"	183:20:3890:3937	3245280	0	True				
ANR	3245735	IdentifierDecl	"mix_data_size = ( get_bits ( gbc , 5 ) + 2 ) << 3"		3245280	0					
ANR	3245736	IdentifierDeclType	int		3245280	0					
ANR	3245737	Identifier	mix_data_size		3245280	1					
ANR	3245738	AssignmentExpression	"mix_data_size = ( get_bits ( gbc , 5 ) + 2 ) << 3"		3245280	2		=			
ANR	3245739	Identifier	mix_data_size		3245280	0					
ANR	3245740	ShiftExpression	"( get_bits ( gbc , 5 ) + 2 ) << 3"		3245280	1		<<			
ANR	3245741	AdditiveExpression	"get_bits ( gbc , 5 ) + 2"		3245280	0		+			
ANR	3245742	CallExpression	"get_bits ( gbc , 5 )"		3245280	0					
ANR	3245743	Callee	get_bits		3245280	0					
ANR	3245744	Identifier	get_bits		3245280	0					
ANR	3245745	ArgumentList	gbc		3245280	1					
ANR	3245746	Argument	gbc		3245280	0					
ANR	3245747	Identifier	gbc		3245280	0					
ANR	3245748	Argument	5		3245280	1					
ANR	3245749	PrimaryExpression	5		3245280	0					
ANR	3245750	PrimaryExpression	2		3245280	1					
ANR	3245751	PrimaryExpression	3		3245280	1					
ANR	3245752	ExpressionStatement	"skip_bits_long ( gbc , mix_data_size )"	185:20:3960:3994	3245280	1	True				
ANR	3245753	CallExpression	"skip_bits_long ( gbc , mix_data_size )"		3245280	0					
ANR	3245754	Callee	skip_bits_long		3245280	0					
ANR	3245755	Identifier	skip_bits_long		3245280	0					
ANR	3245756	ArgumentList	gbc		3245280	1					
ANR	3245757	Argument	gbc		3245280	0					
ANR	3245758	Identifier	gbc		3245280	0					
ANR	3245759	Argument	mix_data_size		3245280	1					
ANR	3245760	Identifier	mix_data_size		3245280	0					
ANR	3245761	BreakStatement	break ;	187:20:4017:4022	3245280	2	True				
ANR	3245762	IfStatement	if ( s -> channel_mode < AC3_CHMODE_STEREO )		3245280	3					
ANR	3245763	Condition	s -> channel_mode < AC3_CHMODE_STEREO	195:16:4144:4178	3245280	0	True				
ANR	3245764	RelationalExpression	s -> channel_mode < AC3_CHMODE_STEREO		3245280	0		<			
ANR	3245765	PtrMemberAccess	s -> channel_mode		3245280	0					
ANR	3245766	Identifier	s		3245280	0					
ANR	3245767	Identifier	channel_mode		3245280	1					
ANR	3245768	Identifier	AC3_CHMODE_STEREO		3245280	1					
ANR	3245769	CompoundStatement		193:53:4133:4133	3245280	1					
ANR	3245770	ForStatement	for ( i = 0 ; i < ( s -> channel_mode ? 1 : 2 ) ; i ++ )		3245280	0					
ANR	3245771	ForInit	i = 0 ;	197:21:4205:4210	3245280	0	True				
ANR	3245772	AssignmentExpression	i = 0		3245280	0		=			
ANR	3245773	Identifier	i		3245280	0					
ANR	3245774	PrimaryExpression	0		3245280	1					
ANR	3245775	Condition	i < ( s -> channel_mode ? 1 : 2 )	197:28:4212:4240	3245280	1	True				
ANR	3245776	RelationalExpression	i < ( s -> channel_mode ? 1 : 2 )		3245280	0		<			
ANR	3245777	Identifier	i		3245280	0					
ANR	3245778	ConditionalExpression	s -> channel_mode ? 1 : 2		3245280	1					
ANR	3245779	Condition	s -> channel_mode		3245280	0					
ANR	3245780	PtrMemberAccess	s -> channel_mode		3245280	0					
ANR	3245781	Identifier	s		3245280	0					
ANR	3245782	Identifier	channel_mode		3245280	1					
ANR	3245783	PrimaryExpression	1		3245280	1					
ANR	3245784	PrimaryExpression	2		3245280	2					
ANR	3245785	PostIncDecOperationExpression	i ++	197:59:4243:4245	3245280	2	True				
ANR	3245786	Identifier	i		3245280	0					
ANR	3245787	IncDec	++		3245280	1					
ANR	3245788	CompoundStatement		195:64:4200:4200	3245280	3					
ANR	3245789	IfStatement	if ( get_bits1 ( gbc ) )		3245280	0					
ANR	3245790	Condition	get_bits1 ( gbc )	199:24:4275:4288	3245280	0	True				
ANR	3245791	CallExpression	get_bits1 ( gbc )		3245280	0					
ANR	3245792	Callee	get_bits1		3245280	0					
ANR	3245793	Identifier	get_bits1		3245280	0					
ANR	3245794	ArgumentList	gbc		3245280	1					
ANR	3245795	Argument	gbc		3245280	0					
ANR	3245796	Identifier	gbc		3245280	0					
ANR	3245797	CompoundStatement		197:40:4243:4243	3245280	1					
ANR	3245798	ExpressionStatement	"skip_bits ( gbc , 8 )"	207:24:4520:4537	3245280	0	True				
ANR	3245799	CallExpression	"skip_bits ( gbc , 8 )"		3245280	0					
ANR	3245800	Callee	skip_bits		3245280	0					
ANR	3245801	Identifier	skip_bits		3245280	0					
ANR	3245802	ArgumentList	gbc		3245280	1					
ANR	3245803	Argument	gbc		3245280	0					
ANR	3245804	Identifier	gbc		3245280	0					
ANR	3245805	Argument	8		3245280	1					
ANR	3245806	PrimaryExpression	8		3245280	0					
ANR	3245807	ExpressionStatement	"skip_bits ( gbc , 6 )"	209:24:4598:4615	3245280	1	True				
ANR	3245808	CallExpression	"skip_bits ( gbc , 6 )"		3245280	0					
ANR	3245809	Callee	skip_bits		3245280	0					
ANR	3245810	Identifier	skip_bits		3245280	0					
ANR	3245811	ArgumentList	gbc		3245280	1					
ANR	3245812	Argument	gbc		3245280	0					
ANR	3245813	Identifier	gbc		3245280	0					
ANR	3245814	Argument	6		3245280	1					
ANR	3245815	PrimaryExpression	6		3245280	0					
ANR	3245816	IfStatement	if ( get_bits1 ( gbc ) )		3245280	4					
ANR	3245817	Condition	get_bits1 ( gbc )	219:16:4779:4792	3245280	0	True				
ANR	3245818	CallExpression	get_bits1 ( gbc )		3245280	0					
ANR	3245819	Callee	get_bits1		3245280	0					
ANR	3245820	Identifier	get_bits1		3245280	0					
ANR	3245821	ArgumentList	gbc		3245280	1					
ANR	3245822	Argument	gbc		3245280	0					
ANR	3245823	Identifier	gbc		3245280	0					
ANR	3245824	CompoundStatement		217:32:4747:4747	3245280	1					
ANR	3245825	ForStatement	for ( blk = 0 ; blk < s -> num_blocks ; blk ++ )		3245280	0					
ANR	3245826	ForInit	blk = 0 ;	221:21:4819:4826	3245280	0	True				
ANR	3245827	AssignmentExpression	blk = 0		3245280	0		=			
ANR	3245828	Identifier	blk		3245280	0					
ANR	3245829	PrimaryExpression	0		3245280	1					
ANR	3245830	Condition	blk < s -> num_blocks	221:30:4828:4846	3245280	1	True				
ANR	3245831	RelationalExpression	blk < s -> num_blocks		3245280	0		<			
ANR	3245832	Identifier	blk		3245280	0					
ANR	3245833	PtrMemberAccess	s -> num_blocks		3245280	1					
ANR	3245834	Identifier	s		3245280	0					
ANR	3245835	Identifier	num_blocks		3245280	1					
ANR	3245836	PostIncDecOperationExpression	blk ++	221:51:4849:4853	3245280	2	True				
ANR	3245837	Identifier	blk		3245280	0					
ANR	3245838	IncDec	++		3245280	1					
ANR	3245839	CompoundStatement		219:58:4808:4808	3245280	3					
ANR	3245840	IfStatement	if ( s -> num_blocks == 1 || get_bits1 ( gbc ) )		3245280	0					
ANR	3245841	Condition	s -> num_blocks == 1 || get_bits1 ( gbc )	223:24:4883:4918	3245280	0	True				
ANR	3245842	OrExpression	s -> num_blocks == 1 || get_bits1 ( gbc )		3245280	0		||			
ANR	3245843	EqualityExpression	s -> num_blocks == 1		3245280	0		==			
ANR	3245844	PtrMemberAccess	s -> num_blocks		3245280	0					
ANR	3245845	Identifier	s		3245280	0					
ANR	3245846	Identifier	num_blocks		3245280	1					
ANR	3245847	PrimaryExpression	1		3245280	1					
ANR	3245848	CallExpression	get_bits1 ( gbc )		3245280	1					
ANR	3245849	Callee	get_bits1		3245280	0					
ANR	3245850	Identifier	get_bits1		3245280	0					
ANR	3245851	ArgumentList	gbc		3245280	1					
ANR	3245852	Argument	gbc		3245280	0					
ANR	3245853	Identifier	gbc		3245280	0					
ANR	3245854	CompoundStatement		221:62:4873:4873	3245280	1					
ANR	3245855	ExpressionStatement	"skip_bits ( gbc , 5 )"	225:24:4948:4965	3245280	0	True				
ANR	3245856	CallExpression	"skip_bits ( gbc , 5 )"		3245280	0					
ANR	3245857	Callee	skip_bits		3245280	0					
ANR	3245858	Identifier	skip_bits		3245280	0					
ANR	3245859	ArgumentList	gbc		3245280	1					
ANR	3245860	Argument	gbc		3245280	0					
ANR	3245861	Identifier	gbc		3245280	0					
ANR	3245862	Argument	5		3245280	1					
ANR	3245863	PrimaryExpression	5		3245280	0					
ANR	3245864	IfStatement	if ( get_bits1 ( gbc ) )		3245280	12					
ANR	3245865	Condition	get_bits1 ( gbc )	241:8:5087:5100	3245280	0	True				
ANR	3245866	CallExpression	get_bits1 ( gbc )		3245280	0					
ANR	3245867	Callee	get_bits1		3245280	0					
ANR	3245868	Identifier	get_bits1		3245280	0					
ANR	3245869	ArgumentList	gbc		3245280	1					
ANR	3245870	Argument	gbc		3245280	0					
ANR	3245871	Identifier	gbc		3245280	0					
ANR	3245872	CompoundStatement		239:24:5055:5055	3245280	1					
ANR	3245873	ExpressionStatement	"s -> bitstream_mode = get_bits ( gbc , 3 )"	243:8:5114:5150	3245280	0	True				
ANR	3245874	AssignmentExpression	"s -> bitstream_mode = get_bits ( gbc , 3 )"		3245280	0		=			
ANR	3245875	PtrMemberAccess	s -> bitstream_mode		3245280	0					
ANR	3245876	Identifier	s		3245280	0					
ANR	3245877	Identifier	bitstream_mode		3245280	1					
ANR	3245878	CallExpression	"get_bits ( gbc , 3 )"		3245280	1					
ANR	3245879	Callee	get_bits		3245280	0					
ANR	3245880	Identifier	get_bits		3245280	0					
ANR	3245881	ArgumentList	gbc		3245280	1					
ANR	3245882	Argument	gbc		3245280	0					
ANR	3245883	Identifier	gbc		3245280	0					
ANR	3245884	Argument	3		3245280	1					
ANR	3245885	PrimaryExpression	3		3245280	0					
ANR	3245886	ExpressionStatement	"skip_bits ( gbc , 2 )"	245:8:5161:5178	3245280	1	True				
ANR	3245887	CallExpression	"skip_bits ( gbc , 2 )"		3245280	0					
ANR	3245888	Callee	skip_bits		3245280	0					
ANR	3245889	Identifier	skip_bits		3245280	0					
ANR	3245890	ArgumentList	gbc		3245280	1					
ANR	3245891	Argument	gbc		3245280	0					
ANR	3245892	Identifier	gbc		3245280	0					
ANR	3245893	Argument	2		3245280	1					
ANR	3245894	PrimaryExpression	2		3245280	0					
ANR	3245895	IfStatement	if ( s -> channel_mode == AC3_CHMODE_STEREO )		3245280	2					
ANR	3245896	Condition	s -> channel_mode == AC3_CHMODE_STEREO	247:12:5242:5277	3245280	0	True				
ANR	3245897	EqualityExpression	s -> channel_mode == AC3_CHMODE_STEREO		3245280	0		==			
ANR	3245898	PtrMemberAccess	s -> channel_mode		3245280	0					
ANR	3245899	Identifier	s		3245280	0					
ANR	3245900	Identifier	channel_mode		3245280	1					
ANR	3245901	Identifier	AC3_CHMODE_STEREO		3245280	1					
ANR	3245902	CompoundStatement		245:50:5232:5232	3245280	1					
ANR	3245903	ExpressionStatement	"s -> dolby_surround_mode = get_bits ( gbc , 2 )"	249:12:5295:5337	3245280	0	True				
ANR	3245904	AssignmentExpression	"s -> dolby_surround_mode = get_bits ( gbc , 2 )"		3245280	0		=			
ANR	3245905	PtrMemberAccess	s -> dolby_surround_mode		3245280	0					
ANR	3245906	Identifier	s		3245280	0					
ANR	3245907	Identifier	dolby_surround_mode		3245280	1					
ANR	3245908	CallExpression	"get_bits ( gbc , 2 )"		3245280	1					
ANR	3245909	Callee	get_bits		3245280	0					
ANR	3245910	Identifier	get_bits		3245280	0					
ANR	3245911	ArgumentList	gbc		3245280	1					
ANR	3245912	Argument	gbc		3245280	0					
ANR	3245913	Identifier	gbc		3245280	0					
ANR	3245914	Argument	2		3245280	1					
ANR	3245915	PrimaryExpression	2		3245280	0					
ANR	3245916	ExpressionStatement	"s -> dolby_headphone_mode = get_bits ( gbc , 2 )"	251:12:5352:5394	3245280	1	True				
ANR	3245917	AssignmentExpression	"s -> dolby_headphone_mode = get_bits ( gbc , 2 )"		3245280	0		=			
ANR	3245918	PtrMemberAccess	s -> dolby_headphone_mode		3245280	0					
ANR	3245919	Identifier	s		3245280	0					
ANR	3245920	Identifier	dolby_headphone_mode		3245280	1					
ANR	3245921	CallExpression	"get_bits ( gbc , 2 )"		3245280	1					
ANR	3245922	Callee	get_bits		3245280	0					
ANR	3245923	Identifier	get_bits		3245280	0					
ANR	3245924	ArgumentList	gbc		3245280	1					
ANR	3245925	Argument	gbc		3245280	0					
ANR	3245926	Identifier	gbc		3245280	0					
ANR	3245927	Argument	2		3245280	1					
ANR	3245928	PrimaryExpression	2		3245280	0					
ANR	3245929	IfStatement	if ( s -> channel_mode >= AC3_CHMODE_2F2R )		3245280	3					
ANR	3245930	Condition	s -> channel_mode >= AC3_CHMODE_2F2R	255:12:5420:5453	3245280	0	True				
ANR	3245931	RelationalExpression	s -> channel_mode >= AC3_CHMODE_2F2R		3245280	0		>=			
ANR	3245932	PtrMemberAccess	s -> channel_mode		3245280	0					
ANR	3245933	Identifier	s		3245280	0					
ANR	3245934	Identifier	channel_mode		3245280	1					
ANR	3245935	Identifier	AC3_CHMODE_2F2R		3245280	1					
ANR	3245936	CompoundStatement		253:48:5408:5408	3245280	1					
ANR	3245937	ExpressionStatement	"s -> dolby_surround_ex_mode = get_bits ( gbc , 2 )"	257:12:5471:5515	3245280	0	True				
ANR	3245938	AssignmentExpression	"s -> dolby_surround_ex_mode = get_bits ( gbc , 2 )"		3245280	0		=			
ANR	3245939	PtrMemberAccess	s -> dolby_surround_ex_mode		3245280	0					
ANR	3245940	Identifier	s		3245280	0					
ANR	3245941	Identifier	dolby_surround_ex_mode		3245280	1					
ANR	3245942	CallExpression	"get_bits ( gbc , 2 )"		3245280	1					
ANR	3245943	Callee	get_bits		3245280	0					
ANR	3245944	Identifier	get_bits		3245280	0					
ANR	3245945	ArgumentList	gbc		3245280	1					
ANR	3245946	Argument	gbc		3245280	0					
ANR	3245947	Identifier	gbc		3245280	0					
ANR	3245948	Argument	2		3245280	1					
ANR	3245949	PrimaryExpression	2		3245280	0					
ANR	3245950	ForStatement	for ( i = 0 ; i < ( s -> channel_mode ? 1 : 2 ) ; i ++ )		3245280	4					
ANR	3245951	ForInit	i = 0 ;	261:13:5542:5547	3245280	0	True				
ANR	3245952	AssignmentExpression	i = 0		3245280	0		=			
ANR	3245953	Identifier	i		3245280	0					
ANR	3245954	PrimaryExpression	0		3245280	1					
ANR	3245955	Condition	i < ( s -> channel_mode ? 1 : 2 )	261:20:5549:5577	3245280	1	True				
ANR	3245956	RelationalExpression	i < ( s -> channel_mode ? 1 : 2 )		3245280	0		<			
ANR	3245957	Identifier	i		3245280	0					
ANR	3245958	ConditionalExpression	s -> channel_mode ? 1 : 2		3245280	1					
ANR	3245959	Condition	s -> channel_mode		3245280	0					
ANR	3245960	PtrMemberAccess	s -> channel_mode		3245280	0					
ANR	3245961	Identifier	s		3245280	0					
ANR	3245962	Identifier	channel_mode		3245280	1					
ANR	3245963	PrimaryExpression	1		3245280	1					
ANR	3245964	PrimaryExpression	2		3245280	2					
ANR	3245965	PostIncDecOperationExpression	i ++	261:51:5580:5582	3245280	2	True				
ANR	3245966	Identifier	i		3245280	0					
ANR	3245967	IncDec	++		3245280	1					
ANR	3245968	CompoundStatement		259:56:5537:5537	3245280	3					
ANR	3245969	IfStatement	if ( get_bits1 ( gbc ) )		3245280	0					
ANR	3245970	Condition	get_bits1 ( gbc )	263:16:5604:5617	3245280	0	True				
ANR	3245971	CallExpression	get_bits1 ( gbc )		3245280	0					
ANR	3245972	Callee	get_bits1		3245280	0					
ANR	3245973	Identifier	get_bits1		3245280	0					
ANR	3245974	ArgumentList	gbc		3245280	1					
ANR	3245975	Argument	gbc		3245280	0					
ANR	3245976	Identifier	gbc		3245280	0					
ANR	3245977	CompoundStatement		261:32:5572:5572	3245280	1					
ANR	3245978	ExpressionStatement	"skip_bits ( gbc , 8 )"	265:16:5639:5656	3245280	0	True				
ANR	3245979	CallExpression	"skip_bits ( gbc , 8 )"		3245280	0					
ANR	3245980	Callee	skip_bits		3245280	0					
ANR	3245981	Identifier	skip_bits		3245280	0					
ANR	3245982	ArgumentList	gbc		3245280	1					
ANR	3245983	Argument	gbc		3245280	0					
ANR	3245984	Identifier	gbc		3245280	0					
ANR	3245985	Argument	8		3245280	1					
ANR	3245986	PrimaryExpression	8		3245280	0					
ANR	3245987	IfStatement	if ( s -> bit_alloc_params . sr_code != EAC3_SR_CODE_REDUCED )		3245280	5					
ANR	3245988	Condition	s -> bit_alloc_params . sr_code != EAC3_SR_CODE_REDUCED	271:12:5750:5800	3245280	0	True				
ANR	3245989	EqualityExpression	s -> bit_alloc_params . sr_code != EAC3_SR_CODE_REDUCED		3245280	0		!=			
ANR	3245990	MemberAccess	s -> bit_alloc_params . sr_code		3245280	0					
ANR	3245991	PtrMemberAccess	s -> bit_alloc_params		3245280	0					
ANR	3245992	Identifier	s		3245280	0					
ANR	3245993	Identifier	bit_alloc_params		3245280	1					
ANR	3245994	Identifier	sr_code		3245280	1					
ANR	3245995	Identifier	EAC3_SR_CODE_REDUCED		3245280	1					
ANR	3245996	CompoundStatement		269:65:5755:5755	3245280	1					
ANR	3245997	ExpressionStatement	skip_bits1 ( gbc )	273:12:5818:5833	3245280	0	True				
ANR	3245998	CallExpression	skip_bits1 ( gbc )		3245280	0					
ANR	3245999	Callee	skip_bits1		3245280	0					
ANR	3246000	Identifier	skip_bits1		3245280	0					
ANR	3246001	ArgumentList	gbc		3245280	1					
ANR	3246002	Argument	gbc		3245280	0					
ANR	3246003	Identifier	gbc		3245280	0					
ANR	3246004	IfStatement	if ( s -> frame_type == EAC3_FRAME_TYPE_INDEPENDENT && s -> num_blocks != 6 )		3245280	13					
ANR	3246005	Condition	s -> frame_type == EAC3_FRAME_TYPE_INDEPENDENT && s -> num_blocks != 6	289:8:6132:6197	3245280	0	True				
ANR	3246006	AndExpression	s -> frame_type == EAC3_FRAME_TYPE_INDEPENDENT && s -> num_blocks != 6		3245280	0		&&			
ANR	3246007	EqualityExpression	s -> frame_type == EAC3_FRAME_TYPE_INDEPENDENT		3245280	0		==			
ANR	3246008	PtrMemberAccess	s -> frame_type		3245280	0					
ANR	3246009	Identifier	s		3245280	0					
ANR	3246010	Identifier	frame_type		3245280	1					
ANR	3246011	Identifier	EAC3_FRAME_TYPE_INDEPENDENT		3245280	1					
ANR	3246012	EqualityExpression	s -> num_blocks != 6		3245280	1		!=			
ANR	3246013	PtrMemberAccess	s -> num_blocks		3245280	0					
ANR	3246014	Identifier	s		3245280	0					
ANR	3246015	Identifier	num_blocks		3245280	1					
ANR	3246016	PrimaryExpression	6		3245280	1					
ANR	3246017	CompoundStatement		287:76:6152:6152	3245280	1					
ANR	3246018	ExpressionStatement	skip_bits1 ( gbc )	291:8:6211:6226	3245280	0	True				
ANR	3246019	CallExpression	skip_bits1 ( gbc )		3245280	0					
ANR	3246020	Callee	skip_bits1		3245280	0					
ANR	3246021	Identifier	skip_bits1		3245280	0					
ANR	3246022	ArgumentList	gbc		3245280	1					
ANR	3246023	Argument	gbc		3245280	0					
ANR	3246024	Identifier	gbc		3245280	0					
ANR	3246025	IfStatement	if ( s -> frame_type == EAC3_FRAME_TYPE_AC3_CONVERT && ( s -> num_blocks == 6 || get_bits1 ( gbc ) ) )		3245280	14					
ANR	3246026	Condition	s -> frame_type == EAC3_FRAME_TYPE_AC3_CONVERT && ( s -> num_blocks == 6 || get_bits1 ( gbc ) )	299:8:6360:6458	3245280	0	True				
ANR	3246027	AndExpression	s -> frame_type == EAC3_FRAME_TYPE_AC3_CONVERT && ( s -> num_blocks == 6 || get_bits1 ( gbc ) )		3245280	0		&&			
ANR	3246028	EqualityExpression	s -> frame_type == EAC3_FRAME_TYPE_AC3_CONVERT		3245280	0		==			
ANR	3246029	PtrMemberAccess	s -> frame_type		3245280	0					
ANR	3246030	Identifier	s		3245280	0					
ANR	3246031	Identifier	frame_type		3245280	1					
ANR	3246032	Identifier	EAC3_FRAME_TYPE_AC3_CONVERT		3245280	1					
ANR	3246033	OrExpression	s -> num_blocks == 6 || get_bits1 ( gbc )		3245280	1		||			
ANR	3246034	EqualityExpression	s -> num_blocks == 6		3245280	0		==			
ANR	3246035	PtrMemberAccess	s -> num_blocks		3245280	0					
ANR	3246036	Identifier	s		3245280	0					
ANR	3246037	Identifier	num_blocks		3245280	1					
ANR	3246038	PrimaryExpression	6		3245280	1					
ANR	3246039	CallExpression	get_bits1 ( gbc )		3245280	1					
ANR	3246040	Callee	get_bits1		3245280	0					
ANR	3246041	Identifier	get_bits1		3245280	0					
ANR	3246042	ArgumentList	gbc		3245280	1					
ANR	3246043	Argument	gbc		3245280	0					
ANR	3246044	Identifier	gbc		3245280	0					
ANR	3246045	CompoundStatement		299:52:6413:6413	3245280	1					
ANR	3246046	ExpressionStatement	"skip_bits ( gbc , 6 )"	303:8:6472:6489	3245280	0	True				
ANR	3246047	CallExpression	"skip_bits ( gbc , 6 )"		3245280	0					
ANR	3246048	Callee	skip_bits		3245280	0					
ANR	3246049	Identifier	skip_bits		3245280	0					
ANR	3246050	ArgumentList	gbc		3245280	1					
ANR	3246051	Argument	gbc		3245280	0					
ANR	3246052	Identifier	gbc		3245280	0					
ANR	3246053	Argument	6		3245280	1					
ANR	3246054	PrimaryExpression	6		3245280	0					
ANR	3246055	IfStatement	if ( get_bits1 ( gbc ) )		3245280	15					
ANR	3246056	Condition	get_bits1 ( gbc )	311:8:6570:6583	3245280	0	True				
ANR	3246057	CallExpression	get_bits1 ( gbc )		3245280	0					
ANR	3246058	Callee	get_bits1		3245280	0					
ANR	3246059	Identifier	get_bits1		3245280	0					
ANR	3246060	ArgumentList	gbc		3245280	1					
ANR	3246061	Argument	gbc		3245280	0					
ANR	3246062	Identifier	gbc		3245280	0					
ANR	3246063	CompoundStatement		311:8:6549:6579	3245280	1					
ANR	3246064	IdentifierDeclStatement	"int addbsil = get_bits ( gbc , 6 ) ;"	313:8:6597:6627	3245280	0	True				
ANR	3246065	IdentifierDecl	"addbsil = get_bits ( gbc , 6 )"		3245280	0					
ANR	3246066	IdentifierDeclType	int		3245280	0					
ANR	3246067	Identifier	addbsil		3245280	1					
ANR	3246068	AssignmentExpression	"addbsil = get_bits ( gbc , 6 )"		3245280	2		=			
ANR	3246069	Identifier	addbsil		3245280	0					
ANR	3246070	CallExpression	"get_bits ( gbc , 6 )"		3245280	1					
ANR	3246071	Callee	get_bits		3245280	0					
ANR	3246072	Identifier	get_bits		3245280	0					
ANR	3246073	ArgumentList	gbc		3245280	1					
ANR	3246074	Argument	gbc		3245280	0					
ANR	3246075	Identifier	gbc		3245280	0					
ANR	3246076	Argument	6		3245280	1					
ANR	3246077	PrimaryExpression	6		3245280	0					
ANR	3246078	ForStatement	for ( i = 0 ; i < addbsil + 1 ; i ++ )		3245280	1					
ANR	3246079	ForInit	i = 0 ;	315:13:6643:6648	3245280	0	True				
ANR	3246080	AssignmentExpression	i = 0		3245280	0		=			
ANR	3246081	Identifier	i		3245280	0					
ANR	3246082	PrimaryExpression	0		3245280	1					
ANR	3246083	Condition	i < addbsil + 1	315:20:6650:6664	3245280	1	True				
ANR	3246084	RelationalExpression	i < addbsil + 1		3245280	0		<			
ANR	3246085	Identifier	i		3245280	0					
ANR	3246086	AdditiveExpression	addbsil + 1		3245280	1		+			
ANR	3246087	Identifier	addbsil		3245280	0					
ANR	3246088	PrimaryExpression	1		3245280	1					
ANR	3246089	PostIncDecOperationExpression	i ++	315:37:6667:6669	3245280	2	True				
ANR	3246090	Identifier	i		3245280	0					
ANR	3246091	IncDec	++		3245280	1					
ANR	3246092	CompoundStatement		313:42:6624:6624	3245280	3					
ANR	3246093	ExpressionStatement	"skip_bits ( gbc , 8 )"	317:12:6687:6704	3245280	0	True				
ANR	3246094	CallExpression	"skip_bits ( gbc , 8 )"		3245280	0					
ANR	3246095	Callee	skip_bits		3245280	0					
ANR	3246096	Identifier	skip_bits		3245280	0					
ANR	3246097	ArgumentList	gbc		3245280	1					
ANR	3246098	Argument	gbc		3245280	0					
ANR	3246099	Identifier	gbc		3245280	0					
ANR	3246100	Argument	8		3245280	1					
ANR	3246101	PrimaryExpression	8		3245280	0					
ANR	3246102	IfStatement	if ( s -> num_blocks == 6 )		3245280	16					
ANR	3246103	Condition	s -> num_blocks == 6	329:8:6843:6860	3245280	0	True				
ANR	3246104	EqualityExpression	s -> num_blocks == 6		3245280	0		==			
ANR	3246105	PtrMemberAccess	s -> num_blocks		3245280	0					
ANR	3246106	Identifier	s		3245280	0					
ANR	3246107	Identifier	num_blocks		3245280	1					
ANR	3246108	PrimaryExpression	6		3245280	1					
ANR	3246109	CompoundStatement		327:28:6815:6815	3245280	1					
ANR	3246110	ExpressionStatement	ac3_exponent_strategy = get_bits1 ( gbc )	331:8:6874:6912	3245280	0	True				
ANR	3246111	AssignmentExpression	ac3_exponent_strategy = get_bits1 ( gbc )		3245280	0		=			
ANR	3246112	Identifier	ac3_exponent_strategy		3245280	0					
ANR	3246113	CallExpression	get_bits1 ( gbc )		3245280	1					
ANR	3246114	Callee	get_bits1		3245280	0					
ANR	3246115	Identifier	get_bits1		3245280	0					
ANR	3246116	ArgumentList	gbc		3245280	1					
ANR	3246117	Argument	gbc		3245280	0					
ANR	3246118	Identifier	gbc		3245280	0					
ANR	3246119	ExpressionStatement	parse_aht_info = get_bits1 ( gbc )	333:8:6923:6961	3245280	1	True				
ANR	3246120	AssignmentExpression	parse_aht_info = get_bits1 ( gbc )		3245280	0		=			
ANR	3246121	Identifier	parse_aht_info		3245280	0					
ANR	3246122	CallExpression	get_bits1 ( gbc )		3245280	1					
ANR	3246123	Callee	get_bits1		3245280	0					
ANR	3246124	Identifier	get_bits1		3245280	0					
ANR	3246125	ArgumentList	gbc		3245280	1					
ANR	3246126	Argument	gbc		3245280	0					
ANR	3246127	Identifier	gbc		3245280	0					
ANR	3246128	ElseStatement	else		3245280	0					
ANR	3246129	CompoundStatement		333:11:6927:6927	3245280	0					
ANR	3246130	ExpressionStatement	ac3_exponent_strategy = 1	341:8:7096:7121	3245280	0	True				
ANR	3246131	AssignmentExpression	ac3_exponent_strategy = 1		3245280	0		=			
ANR	3246132	Identifier	ac3_exponent_strategy		3245280	0					
ANR	3246133	PrimaryExpression	1		3245280	1					
ANR	3246134	ExpressionStatement	parse_aht_info = 0	343:8:7132:7150	3245280	1	True				
ANR	3246135	AssignmentExpression	parse_aht_info = 0		3245280	0		=			
ANR	3246136	Identifier	parse_aht_info		3245280	0					
ANR	3246137	PrimaryExpression	0		3245280	1					
ANR	3246138	ExpressionStatement	"s -> snr_offset_strategy = get_bits ( gbc , 2 )"	349:4:7166:7210	3245280	17	True				
ANR	3246139	AssignmentExpression	"s -> snr_offset_strategy = get_bits ( gbc , 2 )"		3245280	0		=			
ANR	3246140	PtrMemberAccess	s -> snr_offset_strategy		3245280	0					
ANR	3246141	Identifier	s		3245280	0					
ANR	3246142	Identifier	snr_offset_strategy		3245280	1					
ANR	3246143	CallExpression	"get_bits ( gbc , 2 )"		3245280	1					
ANR	3246144	Callee	get_bits		3245280	0					
ANR	3246145	Identifier	get_bits		3245280	0					
ANR	3246146	ArgumentList	gbc		3245280	1					
ANR	3246147	Argument	gbc		3245280	0					
ANR	3246148	Identifier	gbc		3245280	0					
ANR	3246149	Argument	2		3245280	1					
ANR	3246150	PrimaryExpression	2		3245280	0					
ANR	3246151	ExpressionStatement	parse_transient_proc_info = get_bits1 ( gbc )	351:4:7217:7259	3245280	18	True				
ANR	3246152	AssignmentExpression	parse_transient_proc_info = get_bits1 ( gbc )		3245280	0		=			
ANR	3246153	Identifier	parse_transient_proc_info		3245280	0					
ANR	3246154	CallExpression	get_bits1 ( gbc )		3245280	1					
ANR	3246155	Callee	get_bits1		3245280	0					
ANR	3246156	Identifier	get_bits1		3245280	0					
ANR	3246157	ArgumentList	gbc		3245280	1					
ANR	3246158	Argument	gbc		3245280	0					
ANR	3246159	Identifier	gbc		3245280	0					
ANR	3246160	ExpressionStatement	s -> block_switch_syntax = get_bits1 ( gbc )	355:4:7268:7307	3245280	19	True				
ANR	3246161	AssignmentExpression	s -> block_switch_syntax = get_bits1 ( gbc )		3245280	0		=			
ANR	3246162	PtrMemberAccess	s -> block_switch_syntax		3245280	0					
ANR	3246163	Identifier	s		3245280	0					
ANR	3246164	Identifier	block_switch_syntax		3245280	1					
ANR	3246165	CallExpression	get_bits1 ( gbc )		3245280	1					
ANR	3246166	Callee	get_bits1		3245280	0					
ANR	3246167	Identifier	get_bits1		3245280	0					
ANR	3246168	ArgumentList	gbc		3245280	1					
ANR	3246169	Argument	gbc		3245280	0					
ANR	3246170	Identifier	gbc		3245280	0					
ANR	3246171	IfStatement	if ( ! s -> block_switch_syntax )		3245280	20					
ANR	3246172	Condition	! s -> block_switch_syntax	357:8:7318:7340	3245280	0	True				
ANR	3246173	UnaryOperationExpression	! s -> block_switch_syntax		3245280	0					
ANR	3246174	UnaryOperator	!		3245280	0					
ANR	3246175	PtrMemberAccess	s -> block_switch_syntax		3245280	1					
ANR	3246176	Identifier	s		3245280	0					
ANR	3246177	Identifier	block_switch_syntax		3245280	1					
ANR	3246178	ExpressionStatement	"memset ( s -> block_switch , 0 , sizeof ( s -> block_switch ) )"	359:8:7352:7403	3245280	1	True				
ANR	3246179	CallExpression	"memset ( s -> block_switch , 0 , sizeof ( s -> block_switch ) )"		3245280	0					
ANR	3246180	Callee	memset		3245280	0					
ANR	3246181	Identifier	memset		3245280	0					
ANR	3246182	ArgumentList	s -> block_switch		3245280	1					
ANR	3246183	Argument	s -> block_switch		3245280	0					
ANR	3246184	PtrMemberAccess	s -> block_switch		3245280	0					
ANR	3246185	Identifier	s		3245280	0					
ANR	3246186	Identifier	block_switch		3245280	1					
ANR	3246187	Argument	0		3245280	1					
ANR	3246188	PrimaryExpression	0		3245280	0					
ANR	3246189	Argument	sizeof ( s -> block_switch )		3245280	2					
ANR	3246190	SizeofExpression	sizeof ( s -> block_switch )		3245280	0					
ANR	3246191	Sizeof	sizeof		3245280	0					
ANR	3246192	PtrMemberAccess	s -> block_switch		3245280	1					
ANR	3246193	Identifier	s		3245280	0					
ANR	3246194	Identifier	block_switch		3245280	1					
ANR	3246195	ExpressionStatement	s -> dither_flag_syntax = get_bits1 ( gbc )	363:4:7412:7450	3245280	21	True				
ANR	3246196	AssignmentExpression	s -> dither_flag_syntax = get_bits1 ( gbc )		3245280	0		=			
ANR	3246197	PtrMemberAccess	s -> dither_flag_syntax		3245280	0					
ANR	3246198	Identifier	s		3245280	0					
ANR	3246199	Identifier	dither_flag_syntax		3245280	1					
ANR	3246200	CallExpression	get_bits1 ( gbc )		3245280	1					
ANR	3246201	Callee	get_bits1		3245280	0					
ANR	3246202	Identifier	get_bits1		3245280	0					
ANR	3246203	ArgumentList	gbc		3245280	1					
ANR	3246204	Argument	gbc		3245280	0					
ANR	3246205	Identifier	gbc		3245280	0					
ANR	3246206	IfStatement	if ( ! s -> dither_flag_syntax )		3245280	22					
ANR	3246207	Condition	! s -> dither_flag_syntax	365:8:7461:7482	3245280	0	True				
ANR	3246208	UnaryOperationExpression	! s -> dither_flag_syntax		3245280	0					
ANR	3246209	UnaryOperator	!		3245280	0					
ANR	3246210	PtrMemberAccess	s -> dither_flag_syntax		3245280	1					
ANR	3246211	Identifier	s		3245280	0					
ANR	3246212	Identifier	dither_flag_syntax		3245280	1					
ANR	3246213	CompoundStatement		363:32:7437:7437	3245280	1					
ANR	3246214	ForStatement	for ( ch = 1 ; ch <= s -> fbw_channels ; ch ++ )		3245280	0					
ANR	3246215	ForInit	ch = 1 ;	367:13:7501:7507	3245280	0	True				
ANR	3246216	AssignmentExpression	ch = 1		3245280	0		=			
ANR	3246217	Identifier	ch		3245280	0					
ANR	3246218	PrimaryExpression	1		3245280	1					
ANR	3246219	Condition	ch <= s -> fbw_channels	367:21:7509:7529	3245280	1	True				
ANR	3246220	RelationalExpression	ch <= s -> fbw_channels		3245280	0		<=			
ANR	3246221	Identifier	ch		3245280	0					
ANR	3246222	PtrMemberAccess	s -> fbw_channels		3245280	1					
ANR	3246223	Identifier	s		3245280	0					
ANR	3246224	Identifier	fbw_channels		3245280	1					
ANR	3246225	PostIncDecOperationExpression	ch ++	367:44:7532:7535	3245280	2	True				
ANR	3246226	Identifier	ch		3245280	0					
ANR	3246227	IncDec	++		3245280	1					
ANR	3246228	ExpressionStatement	s -> dither_flag [ ch ] = 1	369:12:7551:7573	3245280	3	True				
ANR	3246229	AssignmentExpression	s -> dither_flag [ ch ] = 1		3245280	0		=			
ANR	3246230	ArrayIndexing	s -> dither_flag [ ch ]		3245280	0					
ANR	3246231	PtrMemberAccess	s -> dither_flag		3245280	0					
ANR	3246232	Identifier	s		3245280	0					
ANR	3246233	Identifier	dither_flag		3245280	1					
ANR	3246234	Identifier	ch		3245280	1					
ANR	3246235	PrimaryExpression	1		3245280	1					
ANR	3246236	ExpressionStatement	s -> dither_flag [ CPL_CH ] = s -> dither_flag [ s -> lfe_ch ] = 0	373:4:7587:7641	3245280	23	True				
ANR	3246237	AssignmentExpression	s -> dither_flag [ CPL_CH ] = s -> dither_flag [ s -> lfe_ch ] = 0		3245280	0		=			
ANR	3246238	ArrayIndexing	s -> dither_flag [ CPL_CH ]		3245280	0					
ANR	3246239	PtrMemberAccess	s -> dither_flag		3245280	0					
ANR	3246240	Identifier	s		3245280	0					
ANR	3246241	Identifier	dither_flag		3245280	1					
ANR	3246242	Identifier	CPL_CH		3245280	1					
ANR	3246243	AssignmentExpression	s -> dither_flag [ s -> lfe_ch ] = 0		3245280	1		=			
ANR	3246244	ArrayIndexing	s -> dither_flag [ s -> lfe_ch ]		3245280	0					
ANR	3246245	PtrMemberAccess	s -> dither_flag		3245280	0					
ANR	3246246	Identifier	s		3245280	0					
ANR	3246247	Identifier	dither_flag		3245280	1					
ANR	3246248	PtrMemberAccess	s -> lfe_ch		3245280	1					
ANR	3246249	Identifier	s		3245280	0					
ANR	3246250	Identifier	lfe_ch		3245280	1					
ANR	3246251	PrimaryExpression	0		3245280	1					
ANR	3246252	ExpressionStatement	s -> bit_allocation_syntax = get_bits1 ( gbc )	377:4:7650:7691	3245280	24	True				
ANR	3246253	AssignmentExpression	s -> bit_allocation_syntax = get_bits1 ( gbc )		3245280	0		=			
ANR	3246254	PtrMemberAccess	s -> bit_allocation_syntax		3245280	0					
ANR	3246255	Identifier	s		3245280	0					
ANR	3246256	Identifier	bit_allocation_syntax		3245280	1					
ANR	3246257	CallExpression	get_bits1 ( gbc )		3245280	1					
ANR	3246258	Callee	get_bits1		3245280	0					
ANR	3246259	Identifier	get_bits1		3245280	0					
ANR	3246260	ArgumentList	gbc		3245280	1					
ANR	3246261	Argument	gbc		3245280	0					
ANR	3246262	Identifier	gbc		3245280	0					
ANR	3246263	IfStatement	if ( ! s -> bit_allocation_syntax )		3245280	25					
ANR	3246264	Condition	! s -> bit_allocation_syntax	379:8:7702:7726	3245280	0	True				
ANR	3246265	UnaryOperationExpression	! s -> bit_allocation_syntax		3245280	0					
ANR	3246266	UnaryOperator	!		3245280	0					
ANR	3246267	PtrMemberAccess	s -> bit_allocation_syntax		3245280	1					
ANR	3246268	Identifier	s		3245280	0					
ANR	3246269	Identifier	bit_allocation_syntax		3245280	1					
ANR	3246270	CompoundStatement		377:35:7681:7681	3245280	1					
ANR	3246271	ExpressionStatement	s -> bit_alloc_params . slow_decay = ff_ac3_slow_decay_tab [ 2 ]	383:8:7793:7850	3245280	0	True				
ANR	3246272	AssignmentExpression	s -> bit_alloc_params . slow_decay = ff_ac3_slow_decay_tab [ 2 ]		3245280	0		=			
ANR	3246273	MemberAccess	s -> bit_alloc_params . slow_decay		3245280	0					
ANR	3246274	PtrMemberAccess	s -> bit_alloc_params		3245280	0					
ANR	3246275	Identifier	s		3245280	0					
ANR	3246276	Identifier	bit_alloc_params		3245280	1					
ANR	3246277	Identifier	slow_decay		3245280	1					
ANR	3246278	ArrayIndexing	ff_ac3_slow_decay_tab [ 2 ]		3245280	1					
ANR	3246279	Identifier	ff_ac3_slow_decay_tab		3245280	0					
ANR	3246280	PrimaryExpression	2		3245280	1					
ANR	3246281	ExpressionStatement	s -> bit_alloc_params . fast_decay = ff_ac3_fast_decay_tab [ 1 ]	385:8:7861:7918	3245280	1	True				
ANR	3246282	AssignmentExpression	s -> bit_alloc_params . fast_decay = ff_ac3_fast_decay_tab [ 1 ]		3245280	0		=			
ANR	3246283	MemberAccess	s -> bit_alloc_params . fast_decay		3245280	0					
ANR	3246284	PtrMemberAccess	s -> bit_alloc_params		3245280	0					
ANR	3246285	Identifier	s		3245280	0					
ANR	3246286	Identifier	bit_alloc_params		3245280	1					
ANR	3246287	Identifier	fast_decay		3245280	1					
ANR	3246288	ArrayIndexing	ff_ac3_fast_decay_tab [ 1 ]		3245280	1					
ANR	3246289	Identifier	ff_ac3_fast_decay_tab		3245280	0					
ANR	3246290	PrimaryExpression	1		3245280	1					
ANR	3246291	ExpressionStatement	s -> bit_alloc_params . slow_gain = ff_ac3_slow_gain_tab [ 1 ]	387:8:7929:7986	3245280	2	True				
ANR	3246292	AssignmentExpression	s -> bit_alloc_params . slow_gain = ff_ac3_slow_gain_tab [ 1 ]		3245280	0		=			
ANR	3246293	MemberAccess	s -> bit_alloc_params . slow_gain		3245280	0					
ANR	3246294	PtrMemberAccess	s -> bit_alloc_params		3245280	0					
ANR	3246295	Identifier	s		3245280	0					
ANR	3246296	Identifier	bit_alloc_params		3245280	1					
ANR	3246297	Identifier	slow_gain		3245280	1					
ANR	3246298	ArrayIndexing	ff_ac3_slow_gain_tab [ 1 ]		3245280	1					
ANR	3246299	Identifier	ff_ac3_slow_gain_tab		3245280	0					
ANR	3246300	PrimaryExpression	1		3245280	1					
ANR	3246301	ExpressionStatement	s -> bit_alloc_params . db_per_bit = ff_ac3_db_per_bit_tab [ 2 ]	389:8:7997:8054	3245280	3	True				
ANR	3246302	AssignmentExpression	s -> bit_alloc_params . db_per_bit = ff_ac3_db_per_bit_tab [ 2 ]		3245280	0		=			
ANR	3246303	MemberAccess	s -> bit_alloc_params . db_per_bit		3245280	0					
ANR	3246304	PtrMemberAccess	s -> bit_alloc_params		3245280	0					
ANR	3246305	Identifier	s		3245280	0					
ANR	3246306	Identifier	bit_alloc_params		3245280	1					
ANR	3246307	Identifier	db_per_bit		3245280	1					
ANR	3246308	ArrayIndexing	ff_ac3_db_per_bit_tab [ 2 ]		3245280	1					
ANR	3246309	Identifier	ff_ac3_db_per_bit_tab		3245280	0					
ANR	3246310	PrimaryExpression	2		3245280	1					
ANR	3246311	ExpressionStatement	s -> bit_alloc_params . floor = ff_ac3_floor_tab [ 7 ]	391:8:8065:8122	3245280	4	True				
ANR	3246312	AssignmentExpression	s -> bit_alloc_params . floor = ff_ac3_floor_tab [ 7 ]		3245280	0		=			
ANR	3246313	MemberAccess	s -> bit_alloc_params . floor		3245280	0					
ANR	3246314	PtrMemberAccess	s -> bit_alloc_params		3245280	0					
ANR	3246315	Identifier	s		3245280	0					
ANR	3246316	Identifier	bit_alloc_params		3245280	1					
ANR	3246317	Identifier	floor		3245280	1					
ANR	3246318	ArrayIndexing	ff_ac3_floor_tab [ 7 ]		3245280	1					
ANR	3246319	Identifier	ff_ac3_floor_tab		3245280	0					
ANR	3246320	PrimaryExpression	7		3245280	1					
ANR	3246321	ExpressionStatement	s -> fast_gain_syntax = get_bits1 ( gbc )	397:4:8138:8175	3245280	26	True				
ANR	3246322	AssignmentExpression	s -> fast_gain_syntax = get_bits1 ( gbc )		3245280	0		=			
ANR	3246323	PtrMemberAccess	s -> fast_gain_syntax		3245280	0					
ANR	3246324	Identifier	s		3245280	0					
ANR	3246325	Identifier	fast_gain_syntax		3245280	1					
ANR	3246326	CallExpression	get_bits1 ( gbc )		3245280	1					
ANR	3246327	Callee	get_bits1		3245280	0					
ANR	3246328	Identifier	get_bits1		3245280	0					
ANR	3246329	ArgumentList	gbc		3245280	1					
ANR	3246330	Argument	gbc		3245280	0					
ANR	3246331	Identifier	gbc		3245280	0					
ANR	3246332	ExpressionStatement	s -> dba_syntax = get_bits1 ( gbc )	399:4:8182:8219	3245280	27	True				
ANR	3246333	AssignmentExpression	s -> dba_syntax = get_bits1 ( gbc )		3245280	0		=			
ANR	3246334	PtrMemberAccess	s -> dba_syntax		3245280	0					
ANR	3246335	Identifier	s		3245280	0					
ANR	3246336	Identifier	dba_syntax		3245280	1					
ANR	3246337	CallExpression	get_bits1 ( gbc )		3245280	1					
ANR	3246338	Callee	get_bits1		3245280	0					
ANR	3246339	Identifier	get_bits1		3245280	0					
ANR	3246340	ArgumentList	gbc		3245280	1					
ANR	3246341	Argument	gbc		3245280	0					
ANR	3246342	Identifier	gbc		3245280	0					
ANR	3246343	ExpressionStatement	s -> skip_syntax = get_bits1 ( gbc )	401:4:8226:8263	3245280	28	True				
ANR	3246344	AssignmentExpression	s -> skip_syntax = get_bits1 ( gbc )		3245280	0		=			
ANR	3246345	PtrMemberAccess	s -> skip_syntax		3245280	0					
ANR	3246346	Identifier	s		3245280	0					
ANR	3246347	Identifier	skip_syntax		3245280	1					
ANR	3246348	CallExpression	get_bits1 ( gbc )		3245280	1					
ANR	3246349	Callee	get_bits1		3245280	0					
ANR	3246350	Identifier	get_bits1		3245280	0					
ANR	3246351	ArgumentList	gbc		3245280	1					
ANR	3246352	Argument	gbc		3245280	0					
ANR	3246353	Identifier	gbc		3245280	0					
ANR	3246354	ExpressionStatement	parse_spx_atten_data = get_bits1 ( gbc )	403:4:8270:8307	3245280	29	True				
ANR	3246355	AssignmentExpression	parse_spx_atten_data = get_bits1 ( gbc )		3245280	0		=			
ANR	3246356	Identifier	parse_spx_atten_data		3245280	0					
ANR	3246357	CallExpression	get_bits1 ( gbc )		3245280	1					
ANR	3246358	Callee	get_bits1		3245280	0					
ANR	3246359	Identifier	get_bits1		3245280	0					
ANR	3246360	ArgumentList	gbc		3245280	1					
ANR	3246361	Argument	gbc		3245280	0					
ANR	3246362	Identifier	gbc		3245280	0					
ANR	3246363	ExpressionStatement	num_cpl_blocks = 0	409:4:8383:8401	3245280	30	True				
ANR	3246364	AssignmentExpression	num_cpl_blocks = 0		3245280	0		=			
ANR	3246365	Identifier	num_cpl_blocks		3245280	0					
ANR	3246366	PrimaryExpression	0		3245280	1					
ANR	3246367	IfStatement	if ( s -> channel_mode > 1 )		3245280	31					
ANR	3246368	Condition	s -> channel_mode > 1	411:8:8412:8430	3245280	0	True				
ANR	3246369	RelationalExpression	s -> channel_mode > 1		3245280	0		>			
ANR	3246370	PtrMemberAccess	s -> channel_mode		3245280	0					
ANR	3246371	Identifier	s		3245280	0					
ANR	3246372	Identifier	channel_mode		3245280	1					
ANR	3246373	PrimaryExpression	1		3245280	1					
ANR	3246374	CompoundStatement		409:29:8385:8385	3245280	1					
ANR	3246375	ForStatement	for ( blk = 0 ; blk < s -> num_blocks ; blk ++ )		3245280	0					
ANR	3246376	ForInit	blk = 0 ;	413:13:8449:8456	3245280	0	True				
ANR	3246377	AssignmentExpression	blk = 0		3245280	0		=			
ANR	3246378	Identifier	blk		3245280	0					
ANR	3246379	PrimaryExpression	0		3245280	1					
ANR	3246380	Condition	blk < s -> num_blocks	413:22:8458:8476	3245280	1	True				
ANR	3246381	RelationalExpression	blk < s -> num_blocks		3245280	0		<			
ANR	3246382	Identifier	blk		3245280	0					
ANR	3246383	PtrMemberAccess	s -> num_blocks		3245280	1					
ANR	3246384	Identifier	s		3245280	0					
ANR	3246385	Identifier	num_blocks		3245280	1					
ANR	3246386	PostIncDecOperationExpression	blk ++	413:43:8479:8483	3245280	2	True				
ANR	3246387	Identifier	blk		3245280	0					
ANR	3246388	IncDec	++		3245280	1					
ANR	3246389	CompoundStatement		411:50:8438:8438	3245280	3					
ANR	3246390	ExpressionStatement	s -> cpl_strategy_exists [ blk ] = ( ! blk || get_bits1 ( gbc ) )	415:12:8501:8555	3245280	0	True				
ANR	3246391	AssignmentExpression	s -> cpl_strategy_exists [ blk ] = ( ! blk || get_bits1 ( gbc ) )		3245280	0		=			
ANR	3246392	ArrayIndexing	s -> cpl_strategy_exists [ blk ]		3245280	0					
ANR	3246393	PtrMemberAccess	s -> cpl_strategy_exists		3245280	0					
ANR	3246394	Identifier	s		3245280	0					
ANR	3246395	Identifier	cpl_strategy_exists		3245280	1					
ANR	3246396	Identifier	blk		3245280	1					
ANR	3246397	OrExpression	! blk || get_bits1 ( gbc )		3245280	1		||			
ANR	3246398	UnaryOperationExpression	! blk		3245280	0					
ANR	3246399	UnaryOperator	!		3245280	0					
ANR	3246400	Identifier	blk		3245280	1					
ANR	3246401	CallExpression	get_bits1 ( gbc )		3245280	1					
ANR	3246402	Callee	get_bits1		3245280	0					
ANR	3246403	Identifier	get_bits1		3245280	0					
ANR	3246404	ArgumentList	gbc		3245280	1					
ANR	3246405	Argument	gbc		3245280	0					
ANR	3246406	Identifier	gbc		3245280	0					
ANR	3246407	IfStatement	if ( s -> cpl_strategy_exists [ blk ] )		3245280	1					
ANR	3246408	Condition	s -> cpl_strategy_exists [ blk ]	417:16:8574:8600	3245280	0	True				
ANR	3246409	ArrayIndexing	s -> cpl_strategy_exists [ blk ]		3245280	0					
ANR	3246410	PtrMemberAccess	s -> cpl_strategy_exists		3245280	0					
ANR	3246411	Identifier	s		3245280	0					
ANR	3246412	Identifier	cpl_strategy_exists		3245280	1					
ANR	3246413	Identifier	blk		3245280	1					
ANR	3246414	CompoundStatement		415:45:8555:8555	3245280	1					
ANR	3246415	ExpressionStatement	s -> cpl_in_use [ blk ] = get_bits1 ( gbc )	419:16:8622:8657	3245280	0	True				
ANR	3246416	AssignmentExpression	s -> cpl_in_use [ blk ] = get_bits1 ( gbc )		3245280	0		=			
ANR	3246417	ArrayIndexing	s -> cpl_in_use [ blk ]		3245280	0					
ANR	3246418	PtrMemberAccess	s -> cpl_in_use		3245280	0					
ANR	3246419	Identifier	s		3245280	0					
ANR	3246420	Identifier	cpl_in_use		3245280	1					
ANR	3246421	Identifier	blk		3245280	1					
ANR	3246422	CallExpression	get_bits1 ( gbc )		3245280	1					
ANR	3246423	Callee	get_bits1		3245280	0					
ANR	3246424	Identifier	get_bits1		3245280	0					
ANR	3246425	ArgumentList	gbc		3245280	1					
ANR	3246426	Argument	gbc		3245280	0					
ANR	3246427	Identifier	gbc		3245280	0					
ANR	3246428	ElseStatement	else		3245280	0					
ANR	3246429	CompoundStatement		419:19:8631:8631	3245280	0					
ANR	3246430	ExpressionStatement	s -> cpl_in_use [ blk ] = s -> cpl_in_use [ blk - 1 ]	423:16:8698:8739	3245280	0	True				
ANR	3246431	AssignmentExpression	s -> cpl_in_use [ blk ] = s -> cpl_in_use [ blk - 1 ]		3245280	0		=			
ANR	3246432	ArrayIndexing	s -> cpl_in_use [ blk ]		3245280	0					
ANR	3246433	PtrMemberAccess	s -> cpl_in_use		3245280	0					
ANR	3246434	Identifier	s		3245280	0					
ANR	3246435	Identifier	cpl_in_use		3245280	1					
ANR	3246436	Identifier	blk		3245280	1					
ANR	3246437	ArrayIndexing	s -> cpl_in_use [ blk - 1 ]		3245280	1					
ANR	3246438	PtrMemberAccess	s -> cpl_in_use		3245280	0					
ANR	3246439	Identifier	s		3245280	0					
ANR	3246440	Identifier	cpl_in_use		3245280	1					
ANR	3246441	AdditiveExpression	blk - 1		3245280	1		-			
ANR	3246442	Identifier	blk		3245280	0					
ANR	3246443	PrimaryExpression	1		3245280	1					
ANR	3246444	ExpressionStatement	num_cpl_blocks += s -> cpl_in_use [ blk ]	427:12:8769:8805	3245280	2	True				
ANR	3246445	AssignmentExpression	num_cpl_blocks += s -> cpl_in_use [ blk ]		3245280	0		+=			
ANR	3246446	Identifier	num_cpl_blocks		3245280	0					
ANR	3246447	ArrayIndexing	s -> cpl_in_use [ blk ]		3245280	1					
ANR	3246448	PtrMemberAccess	s -> cpl_in_use		3245280	0					
ANR	3246449	Identifier	s		3245280	0					
ANR	3246450	Identifier	cpl_in_use		3245280	1					
ANR	3246451	Identifier	blk		3245280	1					
ANR	3246452	ElseStatement	else		3245280	0					
ANR	3246453	CompoundStatement		429:11:8782:8782	3245280	0					
ANR	3246454	ExpressionStatement	"memset ( s -> cpl_in_use , 0 , sizeof ( s -> cpl_in_use ) )"	433:8:8841:8888	3245280	0	True				
ANR	3246455	CallExpression	"memset ( s -> cpl_in_use , 0 , sizeof ( s -> cpl_in_use ) )"		3245280	0					
ANR	3246456	Callee	memset		3245280	0					
ANR	3246457	Identifier	memset		3245280	0					
ANR	3246458	ArgumentList	s -> cpl_in_use		3245280	1					
ANR	3246459	Argument	s -> cpl_in_use		3245280	0					
ANR	3246460	PtrMemberAccess	s -> cpl_in_use		3245280	0					
ANR	3246461	Identifier	s		3245280	0					
ANR	3246462	Identifier	cpl_in_use		3245280	1					
ANR	3246463	Argument	0		3245280	1					
ANR	3246464	PrimaryExpression	0		3245280	0					
ANR	3246465	Argument	sizeof ( s -> cpl_in_use )		3245280	2					
ANR	3246466	SizeofExpression	sizeof ( s -> cpl_in_use )		3245280	0					
ANR	3246467	Sizeof	sizeof		3245280	0					
ANR	3246468	PtrMemberAccess	s -> cpl_in_use		3245280	1					
ANR	3246469	Identifier	s		3245280	0					
ANR	3246470	Identifier	cpl_in_use		3245280	1					
ANR	3246471	IfStatement	if ( ac3_exponent_strategy )		3245280	32					
ANR	3246472	Condition	ac3_exponent_strategy	441:8:8942:8962	3245280	0	True				
ANR	3246473	Identifier	ac3_exponent_strategy		3245280	0					
ANR	3246474	CompoundStatement		439:31:8917:8917	3245280	1					
ANR	3246475	ForStatement	for ( blk = 0 ; blk < s -> num_blocks ; blk ++ )		3245280	0					
ANR	3246476	ForInit	blk = 0 ;	445:13:9032:9039	3245280	0	True				
ANR	3246477	AssignmentExpression	blk = 0		3245280	0		=			
ANR	3246478	Identifier	blk		3245280	0					
ANR	3246479	PrimaryExpression	0		3245280	1					
ANR	3246480	Condition	blk < s -> num_blocks	445:22:9041:9059	3245280	1	True				
ANR	3246481	RelationalExpression	blk < s -> num_blocks		3245280	0		<			
ANR	3246482	Identifier	blk		3245280	0					
ANR	3246483	PtrMemberAccess	s -> num_blocks		3245280	1					
ANR	3246484	Identifier	s		3245280	0					
ANR	3246485	Identifier	num_blocks		3245280	1					
ANR	3246486	PostIncDecOperationExpression	blk ++	445:43:9062:9066	3245280	2	True				
ANR	3246487	Identifier	blk		3245280	0					
ANR	3246488	IncDec	++		3245280	1					
ANR	3246489	CompoundStatement		443:50:9021:9021	3245280	3					
ANR	3246490	ForStatement	for ( ch = ! s -> cpl_in_use [ blk ] ; ch <= s -> fbw_channels ; ch ++ )		3245280	0					
ANR	3246491	ForInit	ch = ! s -> cpl_in_use [ blk ] ;	447:17:9089:9113	3245280	0	True				
ANR	3246492	AssignmentExpression	ch = ! s -> cpl_in_use [ blk ]		3245280	0		=			
ANR	3246493	Identifier	ch		3245280	0					
ANR	3246494	UnaryOperationExpression	! s -> cpl_in_use [ blk ]		3245280	1					
ANR	3246495	UnaryOperator	!		3245280	0					
ANR	3246496	ArrayIndexing	s -> cpl_in_use [ blk ]		3245280	1					
ANR	3246497	PtrMemberAccess	s -> cpl_in_use		3245280	0					
ANR	3246498	Identifier	s		3245280	0					
ANR	3246499	Identifier	cpl_in_use		3245280	1					
ANR	3246500	Identifier	blk		3245280	1					
ANR	3246501	Condition	ch <= s -> fbw_channels	447:43:9115:9135	3245280	1	True				
ANR	3246502	RelationalExpression	ch <= s -> fbw_channels		3245280	0		<=			
ANR	3246503	Identifier	ch		3245280	0					
ANR	3246504	PtrMemberAccess	s -> fbw_channels		3245280	1					
ANR	3246505	Identifier	s		3245280	0					
ANR	3246506	Identifier	fbw_channels		3245280	1					
ANR	3246507	PostIncDecOperationExpression	ch ++	447:66:9138:9141	3245280	2	True				
ANR	3246508	Identifier	ch		3245280	0					
ANR	3246509	IncDec	++		3245280	1					
ANR	3246510	CompoundStatement		445:72:9096:9096	3245280	3					
ANR	3246511	ExpressionStatement	"s -> exp_strategy [ blk ] [ ch ] = get_bits ( gbc , 2 )"	449:16:9163:9206	3245280	0	True				
ANR	3246512	AssignmentExpression	"s -> exp_strategy [ blk ] [ ch ] = get_bits ( gbc , 2 )"		3245280	0		=			
ANR	3246513	ArrayIndexing	s -> exp_strategy [ blk ] [ ch ]		3245280	0					
ANR	3246514	ArrayIndexing	s -> exp_strategy [ blk ]		3245280	0					
ANR	3246515	PtrMemberAccess	s -> exp_strategy		3245280	0					
ANR	3246516	Identifier	s		3245280	0					
ANR	3246517	Identifier	exp_strategy		3245280	1					
ANR	3246518	Identifier	blk		3245280	1					
ANR	3246519	Identifier	ch		3245280	1					
ANR	3246520	CallExpression	"get_bits ( gbc , 2 )"		3245280	1					
ANR	3246521	Callee	get_bits		3245280	0					
ANR	3246522	Identifier	get_bits		3245280	0					
ANR	3246523	ArgumentList	gbc		3245280	1					
ANR	3246524	Argument	gbc		3245280	0					
ANR	3246525	Identifier	gbc		3245280	0					
ANR	3246526	Argument	2		3245280	1					
ANR	3246527	PrimaryExpression	2		3245280	0					
ANR	3246528	ElseStatement	else		3245280	0					
ANR	3246529	CompoundStatement		453:11:9198:9198	3245280	0					
ANR	3246530	ForStatement	for ( ch = ! ( ( s -> channel_mode > 1 ) && num_cpl_blocks ) ; ch <= s -> fbw_channels ; ch ++ )		3245280	0					
ANR	3246531	ForInit	ch = ! ( ( s -> channel_mode > 1 ) && num_cpl_blocks ) ;	459:13:9312:9359	3245280	0	True				
ANR	3246532	AssignmentExpression	ch = ! ( ( s -> channel_mode > 1 ) && num_cpl_blocks )		3245280	0		=			
ANR	3246533	Identifier	ch		3245280	0					
ANR	3246534	UnaryOperationExpression	! ( ( s -> channel_mode > 1 ) && num_cpl_blocks )		3245280	1					
ANR	3246535	UnaryOperator	!		3245280	0					
ANR	3246536	AndExpression	( s -> channel_mode > 1 ) && num_cpl_blocks		3245280	1		&&			
ANR	3246537	RelationalExpression	s -> channel_mode > 1		3245280	0		>			
ANR	3246538	PtrMemberAccess	s -> channel_mode		3245280	0					
ANR	3246539	Identifier	s		3245280	0					
ANR	3246540	Identifier	channel_mode		3245280	1					
ANR	3246541	PrimaryExpression	1		3245280	1					
ANR	3246542	Identifier	num_cpl_blocks		3245280	1					
ANR	3246543	Condition	ch <= s -> fbw_channels	459:62:9361:9381	3245280	1	True				
ANR	3246544	RelationalExpression	ch <= s -> fbw_channels		3245280	0		<=			
ANR	3246545	Identifier	ch		3245280	0					
ANR	3246546	PtrMemberAccess	s -> fbw_channels		3245280	1					
ANR	3246547	Identifier	s		3245280	0					
ANR	3246548	Identifier	fbw_channels		3245280	1					
ANR	3246549	PostIncDecOperationExpression	ch ++	459:85:9384:9387	3245280	2	True				
ANR	3246550	Identifier	ch		3245280	0					
ANR	3246551	IncDec	++		3245280	1					
ANR	3246552	CompoundStatement		459:12:9357:9391	3245280	3					
ANR	3246553	IdentifierDeclStatement	"int frmchexpstr = get_bits ( gbc , 5 ) ;"	461:12:9405:9439	3245280	0	True				
ANR	3246554	IdentifierDecl	"frmchexpstr = get_bits ( gbc , 5 )"		3245280	0					
ANR	3246555	IdentifierDeclType	int		3245280	0					
ANR	3246556	Identifier	frmchexpstr		3245280	1					
ANR	3246557	AssignmentExpression	"frmchexpstr = get_bits ( gbc , 5 )"		3245280	2		=			
ANR	3246558	Identifier	frmchexpstr		3245280	0					
ANR	3246559	CallExpression	"get_bits ( gbc , 5 )"		3245280	1					
ANR	3246560	Callee	get_bits		3245280	0					
ANR	3246561	Identifier	get_bits		3245280	0					
ANR	3246562	ArgumentList	gbc		3245280	1					
ANR	3246563	Argument	gbc		3245280	0					
ANR	3246564	Identifier	gbc		3245280	0					
ANR	3246565	Argument	5		3245280	1					
ANR	3246566	PrimaryExpression	5		3245280	0					
ANR	3246567	ForStatement	for ( blk = 0 ; blk < 6 ; blk ++ )		3245280	1					
ANR	3246568	ForInit	blk = 0 ;	463:17:9459:9466	3245280	0	True				
ANR	3246569	AssignmentExpression	blk = 0		3245280	0		=			
ANR	3246570	Identifier	blk		3245280	0					
ANR	3246571	PrimaryExpression	0		3245280	1					
ANR	3246572	Condition	blk < 6	463:26:9468:9474	3245280	1	True				
ANR	3246573	RelationalExpression	blk < 6		3245280	0		<			
ANR	3246574	Identifier	blk		3245280	0					
ANR	3246575	PrimaryExpression	6		3245280	1					
ANR	3246576	PostIncDecOperationExpression	blk ++	463:35:9477:9481	3245280	2	True				
ANR	3246577	Identifier	blk		3245280	0					
ANR	3246578	IncDec	++		3245280	1					
ANR	3246579	CompoundStatement		461:42:9436:9436	3245280	3					
ANR	3246580	ExpressionStatement	s -> exp_strategy [ blk ] [ ch ] = ff_eac3_frm_expstr [ frmchexpstr ] [ blk ]	465:16:9503:9566	3245280	0	True				
ANR	3246581	AssignmentExpression	s -> exp_strategy [ blk ] [ ch ] = ff_eac3_frm_expstr [ frmchexpstr ] [ blk ]		3245280	0		=			
ANR	3246582	ArrayIndexing	s -> exp_strategy [ blk ] [ ch ]		3245280	0					
ANR	3246583	ArrayIndexing	s -> exp_strategy [ blk ]		3245280	0					
ANR	3246584	PtrMemberAccess	s -> exp_strategy		3245280	0					
ANR	3246585	Identifier	s		3245280	0					
ANR	3246586	Identifier	exp_strategy		3245280	1					
ANR	3246587	Identifier	blk		3245280	1					
ANR	3246588	Identifier	ch		3245280	1					
ANR	3246589	ArrayIndexing	ff_eac3_frm_expstr [ frmchexpstr ] [ blk ]		3245280	1					
ANR	3246590	ArrayIndexing	ff_eac3_frm_expstr [ frmchexpstr ]		3245280	0					
ANR	3246591	Identifier	ff_eac3_frm_expstr		3245280	0					
ANR	3246592	Identifier	frmchexpstr		3245280	1					
ANR	3246593	Identifier	blk		3245280	1					
ANR	3246594	IfStatement	if ( s -> lfe_on )		3245280	33					
ANR	3246595	Condition	s -> lfe_on	475:8:9643:9651	3245280	0	True				
ANR	3246596	PtrMemberAccess	s -> lfe_on		3245280	0					
ANR	3246597	Identifier	s		3245280	0					
ANR	3246598	Identifier	lfe_on		3245280	1					
ANR	3246599	CompoundStatement		473:19:9606:9606	3245280	1					
ANR	3246600	ForStatement	for ( blk = 0 ; blk < s -> num_blocks ; blk ++ )		3245280	0					
ANR	3246601	ForInit	blk = 0 ;	477:13:9670:9677	3245280	0	True				
ANR	3246602	AssignmentExpression	blk = 0		3245280	0		=			
ANR	3246603	Identifier	blk		3245280	0					
ANR	3246604	PrimaryExpression	0		3245280	1					
ANR	3246605	Condition	blk < s -> num_blocks	477:22:9679:9697	3245280	1	True				
ANR	3246606	RelationalExpression	blk < s -> num_blocks		3245280	0		<			
ANR	3246607	Identifier	blk		3245280	0					
ANR	3246608	PtrMemberAccess	s -> num_blocks		3245280	1					
ANR	3246609	Identifier	s		3245280	0					
ANR	3246610	Identifier	num_blocks		3245280	1					
ANR	3246611	PostIncDecOperationExpression	blk ++	477:43:9700:9704	3245280	2	True				
ANR	3246612	Identifier	blk		3245280	0					
ANR	3246613	IncDec	++		3245280	1					
ANR	3246614	CompoundStatement		475:50:9659:9659	3245280	3					
ANR	3246615	ExpressionStatement	s -> exp_strategy [ blk ] [ s -> lfe_ch ] = get_bits1 ( gbc )	479:12:9722:9770	3245280	0	True				
ANR	3246616	AssignmentExpression	s -> exp_strategy [ blk ] [ s -> lfe_ch ] = get_bits1 ( gbc )		3245280	0		=			
ANR	3246617	ArrayIndexing	s -> exp_strategy [ blk ] [ s -> lfe_ch ]		3245280	0					
ANR	3246618	ArrayIndexing	s -> exp_strategy [ blk ]		3245280	0					
ANR	3246619	PtrMemberAccess	s -> exp_strategy		3245280	0					
ANR	3246620	Identifier	s		3245280	0					
ANR	3246621	Identifier	exp_strategy		3245280	1					
ANR	3246622	Identifier	blk		3245280	1					
ANR	3246623	PtrMemberAccess	s -> lfe_ch		3245280	1					
ANR	3246624	Identifier	s		3245280	0					
ANR	3246625	Identifier	lfe_ch		3245280	1					
ANR	3246626	CallExpression	get_bits1 ( gbc )		3245280	1					
ANR	3246627	Callee	get_bits1		3245280	0					
ANR	3246628	Identifier	get_bits1		3245280	0					
ANR	3246629	ArgumentList	gbc		3245280	1					
ANR	3246630	Argument	gbc		3245280	0					
ANR	3246631	Identifier	gbc		3245280	0					
ANR	3246632	IfStatement	if ( s -> frame_type == EAC3_FRAME_TYPE_INDEPENDENT && ( s -> num_blocks == 6 || get_bits1 ( gbc ) ) )		3245280	34					
ANR	3246633	Condition	s -> frame_type == EAC3_FRAME_TYPE_INDEPENDENT && ( s -> num_blocks == 6 || get_bits1 ( gbc ) )	487:8:9878:9976	3245280	0	True				
ANR	3246634	AndExpression	s -> frame_type == EAC3_FRAME_TYPE_INDEPENDENT && ( s -> num_blocks == 6 || get_bits1 ( gbc ) )		3245280	0		&&			
ANR	3246635	EqualityExpression	s -> frame_type == EAC3_FRAME_TYPE_INDEPENDENT		3245280	0		==			
ANR	3246636	PtrMemberAccess	s -> frame_type		3245280	0					
ANR	3246637	Identifier	s		3245280	0					
ANR	3246638	Identifier	frame_type		3245280	1					
ANR	3246639	Identifier	EAC3_FRAME_TYPE_INDEPENDENT		3245280	1					
ANR	3246640	OrExpression	s -> num_blocks == 6 || get_bits1 ( gbc )		3245280	1		||			
ANR	3246641	EqualityExpression	s -> num_blocks == 6		3245280	0		==			
ANR	3246642	PtrMemberAccess	s -> num_blocks		3245280	0					
ANR	3246643	Identifier	s		3245280	0					
ANR	3246644	Identifier	num_blocks		3245280	1					
ANR	3246645	PrimaryExpression	6		3245280	1					
ANR	3246646	CallExpression	get_bits1 ( gbc )		3245280	1					
ANR	3246647	Callee	get_bits1		3245280	0					
ANR	3246648	Identifier	get_bits1		3245280	0					
ANR	3246649	ArgumentList	gbc		3245280	1					
ANR	3246650	Argument	gbc		3245280	0					
ANR	3246651	Identifier	gbc		3245280	0					
ANR	3246652	CompoundStatement		487:52:9931:9931	3245280	1					
ANR	3246653	ExpressionStatement	"skip_bits ( gbc , 5 * s -> fbw_channels )"	491:8:9990:10025	3245280	0	True				
ANR	3246654	CallExpression	"skip_bits ( gbc , 5 * s -> fbw_channels )"		3245280	0					
ANR	3246655	Callee	skip_bits		3245280	0					
ANR	3246656	Identifier	skip_bits		3245280	0					
ANR	3246657	ArgumentList	gbc		3245280	1					
ANR	3246658	Argument	gbc		3245280	0					
ANR	3246659	Identifier	gbc		3245280	0					
ANR	3246660	Argument	5 * s -> fbw_channels		3245280	1					
ANR	3246661	MultiplicativeExpression	5 * s -> fbw_channels		3245280	0		*			
ANR	3246662	PrimaryExpression	5		3245280	0					
ANR	3246663	PtrMemberAccess	s -> fbw_channels		3245280	1					
ANR	3246664	Identifier	s		3245280	0					
ANR	3246665	Identifier	fbw_channels		3245280	1					
ANR	3246666	IfStatement	if ( parse_aht_info )		3245280	35					
ANR	3246667	Condition	parse_aht_info	499:8:10133:10146	3245280	0	True				
ANR	3246668	Identifier	parse_aht_info		3245280	0					
ANR	3246669	CompoundStatement		497:24:10101:10101	3245280	1					
ANR	3246670	ExpressionStatement	s -> channel_uses_aht [ CPL_CH ] = 0	509:8:10417:10446	3245280	0	True				
ANR	3246671	AssignmentExpression	s -> channel_uses_aht [ CPL_CH ] = 0		3245280	0		=			
ANR	3246672	ArrayIndexing	s -> channel_uses_aht [ CPL_CH ]		3245280	0					
ANR	3246673	PtrMemberAccess	s -> channel_uses_aht		3245280	0					
ANR	3246674	Identifier	s		3245280	0					
ANR	3246675	Identifier	channel_uses_aht		3245280	1					
ANR	3246676	Identifier	CPL_CH		3245280	1					
ANR	3246677	PrimaryExpression	0		3245280	1					
ANR	3246678	ForStatement	for ( ch = ( num_cpl_blocks != 6 ) ; ch <= s -> channels ; ch ++ )		3245280	1					
ANR	3246679	ForInit	ch = ( num_cpl_blocks != 6 ) ;	511:13:10462:10488	3245280	0	True				
ANR	3246680	AssignmentExpression	ch = ( num_cpl_blocks != 6 )		3245280	0		=			
ANR	3246681	Identifier	ch		3245280	0					
ANR	3246682	EqualityExpression	num_cpl_blocks != 6		3245280	1		!=			
ANR	3246683	Identifier	num_cpl_blocks		3245280	0					
ANR	3246684	PrimaryExpression	6		3245280	1					
ANR	3246685	Condition	ch <= s -> channels	511:41:10490:10506	3245280	1	True				
ANR	3246686	RelationalExpression	ch <= s -> channels		3245280	0		<=			
ANR	3246687	Identifier	ch		3245280	0					
ANR	3246688	PtrMemberAccess	s -> channels		3245280	1					
ANR	3246689	Identifier	s		3245280	0					
ANR	3246690	Identifier	channels		3245280	1					
ANR	3246691	PostIncDecOperationExpression	ch ++	511:60:10509:10512	3245280	2	True				
ANR	3246692	Identifier	ch		3245280	0					
ANR	3246693	IncDec	++		3245280	1					
ANR	3246694	CompoundStatement		511:12:10482:10497	3245280	3					
ANR	3246695	IdentifierDeclStatement	int use_aht = 1 ;	513:12:10530:10545	3245280	0	True				
ANR	3246696	IdentifierDecl	use_aht = 1		3245280	0					
ANR	3246697	IdentifierDeclType	int		3245280	0					
ANR	3246698	Identifier	use_aht		3245280	1					
ANR	3246699	AssignmentExpression	use_aht = 1		3245280	2		=			
ANR	3246700	Identifier	use_aht		3245280	0					
ANR	3246701	PrimaryExpression	1		3245280	1					
ANR	3246702	ForStatement	for ( blk = 1 ; blk < 6 ; blk ++ )		3245280	1					
ANR	3246703	ForInit	blk = 1 ;	515:17:10565:10572	3245280	0	True				
ANR	3246704	AssignmentExpression	blk = 1		3245280	0		=			
ANR	3246705	Identifier	blk		3245280	0					
ANR	3246706	PrimaryExpression	1		3245280	1					
ANR	3246707	Condition	blk < 6	515:26:10574:10580	3245280	1	True				
ANR	3246708	RelationalExpression	blk < 6		3245280	0		<			
ANR	3246709	Identifier	blk		3245280	0					
ANR	3246710	PrimaryExpression	6		3245280	1					
ANR	3246711	PostIncDecOperationExpression	blk ++	515:35:10583:10587	3245280	2	True				
ANR	3246712	Identifier	blk		3245280	0					
ANR	3246713	IncDec	++		3245280	1					
ANR	3246714	CompoundStatement		513:42:10542:10542	3245280	3					
ANR	3246715	IfStatement	if ( ( s -> exp_strategy [ blk ] [ ch ] != EXP_REUSE ) || ( ! ch && s -> cpl_strategy_exists [ blk ] ) )		3245280	0					
ANR	3246716	Condition	( s -> exp_strategy [ blk ] [ ch ] != EXP_REUSE ) || ( ! ch && s -> cpl_strategy_exists [ blk ] )	517:20:10613:10716	3245280	0	True				
ANR	3246717	OrExpression	( s -> exp_strategy [ blk ] [ ch ] != EXP_REUSE ) || ( ! ch && s -> cpl_strategy_exists [ blk ] )		3245280	0		||			
ANR	3246718	EqualityExpression	s -> exp_strategy [ blk ] [ ch ] != EXP_REUSE		3245280	0		!=			
ANR	3246719	ArrayIndexing	s -> exp_strategy [ blk ] [ ch ]		3245280	0					
ANR	3246720	ArrayIndexing	s -> exp_strategy [ blk ]		3245280	0					
ANR	3246721	PtrMemberAccess	s -> exp_strategy		3245280	0					
ANR	3246722	Identifier	s		3245280	0					
ANR	3246723	Identifier	exp_strategy		3245280	1					
ANR	3246724	Identifier	blk		3245280	1					
ANR	3246725	Identifier	ch		3245280	1					
ANR	3246726	Identifier	EXP_REUSE		3245280	1					
ANR	3246727	AndExpression	! ch && s -> cpl_strategy_exists [ blk ]		3245280	1		&&			
ANR	3246728	UnaryOperationExpression	! ch		3245280	0					
ANR	3246729	UnaryOperator	!		3245280	0					
ANR	3246730	Identifier	ch		3245280	1					
ANR	3246731	ArrayIndexing	s -> cpl_strategy_exists [ blk ]		3245280	1					
ANR	3246732	PtrMemberAccess	s -> cpl_strategy_exists		3245280	0					
ANR	3246733	Identifier	s		3245280	0					
ANR	3246734	Identifier	cpl_strategy_exists		3245280	1					
ANR	3246735	Identifier	blk		3245280	1					
ANR	3246736	CompoundStatement		517:62:10671:10671	3245280	1					
ANR	3246737	ExpressionStatement	use_aht = 0	521:20:10742:10753	3245280	0	True				
ANR	3246738	AssignmentExpression	use_aht = 0		3245280	0		=			
ANR	3246739	Identifier	use_aht		3245280	0					
ANR	3246740	PrimaryExpression	0		3245280	1					
ANR	3246741	BreakStatement	break ;	523:20:10776:10781	3245280	1	True				
ANR	3246742	ExpressionStatement	s -> channel_uses_aht [ ch ] = use_aht && get_bits1 ( gbc )	529:12:10830:10881	3245280	2	True				
ANR	3246743	AssignmentExpression	s -> channel_uses_aht [ ch ] = use_aht && get_bits1 ( gbc )		3245280	0		=			
ANR	3246744	ArrayIndexing	s -> channel_uses_aht [ ch ]		3245280	0					
ANR	3246745	PtrMemberAccess	s -> channel_uses_aht		3245280	0					
ANR	3246746	Identifier	s		3245280	0					
ANR	3246747	Identifier	channel_uses_aht		3245280	1					
ANR	3246748	Identifier	ch		3245280	1					
ANR	3246749	AndExpression	use_aht && get_bits1 ( gbc )		3245280	1		&&			
ANR	3246750	Identifier	use_aht		3245280	0					
ANR	3246751	CallExpression	get_bits1 ( gbc )		3245280	1					
ANR	3246752	Callee	get_bits1		3245280	0					
ANR	3246753	Identifier	get_bits1		3245280	0					
ANR	3246754	ArgumentList	gbc		3245280	1					
ANR	3246755	Argument	gbc		3245280	0					
ANR	3246756	Identifier	gbc		3245280	0					
ANR	3246757	ElseStatement	else		3245280	0					
ANR	3246758	CompoundStatement		531:11:10858:10858	3245280	0					
ANR	3246759	ExpressionStatement	"memset ( s -> channel_uses_aht , 0 , sizeof ( s -> channel_uses_aht ) )"	535:8:10917:10976	3245280	0	True				
ANR	3246760	CallExpression	"memset ( s -> channel_uses_aht , 0 , sizeof ( s -> channel_uses_aht ) )"		3245280	0					
ANR	3246761	Callee	memset		3245280	0					
ANR	3246762	Identifier	memset		3245280	0					
ANR	3246763	ArgumentList	s -> channel_uses_aht		3245280	1					
ANR	3246764	Argument	s -> channel_uses_aht		3245280	0					
ANR	3246765	PtrMemberAccess	s -> channel_uses_aht		3245280	0					
ANR	3246766	Identifier	s		3245280	0					
ANR	3246767	Identifier	channel_uses_aht		3245280	1					
ANR	3246768	Argument	0		3245280	1					
ANR	3246769	PrimaryExpression	0		3245280	0					
ANR	3246770	Argument	sizeof ( s -> channel_uses_aht )		3245280	2					
ANR	3246771	SizeofExpression	sizeof ( s -> channel_uses_aht )		3245280	0					
ANR	3246772	Sizeof	sizeof		3245280	0					
ANR	3246773	PtrMemberAccess	s -> channel_uses_aht		3245280	1					
ANR	3246774	Identifier	s		3245280	0					
ANR	3246775	Identifier	channel_uses_aht		3245280	1					
ANR	3246776	IfStatement	if ( ! s -> snr_offset_strategy )		3245280	36					
ANR	3246777	Condition	! s -> snr_offset_strategy	543:8:11028:11050	3245280	0	True				
ANR	3246778	UnaryOperationExpression	! s -> snr_offset_strategy		3245280	0					
ANR	3246779	UnaryOperator	!		3245280	0					
ANR	3246780	PtrMemberAccess	s -> snr_offset_strategy		3245280	1					
ANR	3246781	Identifier	s		3245280	0					
ANR	3246782	Identifier	snr_offset_strategy		3245280	1					
ANR	3246783	CompoundStatement		545:8:11071:11121	3245280	1					
ANR	3246784	IdentifierDeclStatement	"int csnroffst = ( get_bits ( gbc , 6 ) - 15 ) << 4 ;"	545:8:11064:11108	3245280	0	True				
ANR	3246785	IdentifierDecl	"csnroffst = ( get_bits ( gbc , 6 ) - 15 ) << 4"		3245280	0					
ANR	3246786	IdentifierDeclType	int		3245280	0					
ANR	3246787	Identifier	csnroffst		3245280	1					
ANR	3246788	AssignmentExpression	"csnroffst = ( get_bits ( gbc , 6 ) - 15 ) << 4"		3245280	2		=			
ANR	3246789	Identifier	csnroffst		3245280	0					
ANR	3246790	ShiftExpression	"( get_bits ( gbc , 6 ) - 15 ) << 4"		3245280	1		<<			
ANR	3246791	AdditiveExpression	"get_bits ( gbc , 6 ) - 15"		3245280	0		-			
ANR	3246792	CallExpression	"get_bits ( gbc , 6 )"		3245280	0					
ANR	3246793	Callee	get_bits		3245280	0					
ANR	3246794	Identifier	get_bits		3245280	0					
ANR	3246795	ArgumentList	gbc		3245280	1					
ANR	3246796	Argument	gbc		3245280	0					
ANR	3246797	Identifier	gbc		3245280	0					
ANR	3246798	Argument	6		3245280	1					
ANR	3246799	PrimaryExpression	6		3245280	0					
ANR	3246800	PrimaryExpression	15		3245280	1					
ANR	3246801	PrimaryExpression	4		3245280	1					
ANR	3246802	IdentifierDeclStatement	"int snroffst = ( csnroffst + get_bits ( gbc , 4 ) ) << 2 ;"	547:8:11119:11169	3245280	1	True				
ANR	3246803	IdentifierDecl	"snroffst = ( csnroffst + get_bits ( gbc , 4 ) ) << 2"		3245280	0					
ANR	3246804	IdentifierDeclType	int		3245280	0					
ANR	3246805	Identifier	snroffst		3245280	1					
ANR	3246806	AssignmentExpression	"snroffst = ( csnroffst + get_bits ( gbc , 4 ) ) << 2"		3245280	2		=			
ANR	3246807	Identifier	snroffst		3245280	0					
ANR	3246808	ShiftExpression	"( csnroffst + get_bits ( gbc , 4 ) ) << 2"		3245280	1		<<			
ANR	3246809	AdditiveExpression	"csnroffst + get_bits ( gbc , 4 )"		3245280	0		+			
ANR	3246810	Identifier	csnroffst		3245280	0					
ANR	3246811	CallExpression	"get_bits ( gbc , 4 )"		3245280	1					
ANR	3246812	Callee	get_bits		3245280	0					
ANR	3246813	Identifier	get_bits		3245280	0					
ANR	3246814	ArgumentList	gbc		3245280	1					
ANR	3246815	Argument	gbc		3245280	0					
ANR	3246816	Identifier	gbc		3245280	0					
ANR	3246817	Argument	4		3245280	1					
ANR	3246818	PrimaryExpression	4		3245280	0					
ANR	3246819	PrimaryExpression	2		3245280	1					
ANR	3246820	ForStatement	for ( ch = 0 ; ch <= s -> channels ; ch ++ )		3245280	2					
ANR	3246821	ForInit	ch = 0 ;	549:13:11185:11191	3245280	0	True				
ANR	3246822	AssignmentExpression	ch = 0		3245280	0		=			
ANR	3246823	Identifier	ch		3245280	0					
ANR	3246824	PrimaryExpression	0		3245280	1					
ANR	3246825	Condition	ch <= s -> channels	549:21:11193:11209	3245280	1	True				
ANR	3246826	RelationalExpression	ch <= s -> channels		3245280	0		<=			
ANR	3246827	Identifier	ch		3245280	0					
ANR	3246828	PtrMemberAccess	s -> channels		3245280	1					
ANR	3246829	Identifier	s		3245280	0					
ANR	3246830	Identifier	channels		3245280	1					
ANR	3246831	PostIncDecOperationExpression	ch ++	549:40:11212:11215	3245280	2	True				
ANR	3246832	Identifier	ch		3245280	0					
ANR	3246833	IncDec	++		3245280	1					
ANR	3246834	ExpressionStatement	s -> snr_offset [ ch ] = snroffst	551:12:11231:11259	3245280	3	True				
ANR	3246835	AssignmentExpression	s -> snr_offset [ ch ] = snroffst		3245280	0		=			
ANR	3246836	ArrayIndexing	s -> snr_offset [ ch ]		3245280	0					
ANR	3246837	PtrMemberAccess	s -> snr_offset		3245280	0					
ANR	3246838	Identifier	s		3245280	0					
ANR	3246839	Identifier	snr_offset		3245280	1					
ANR	3246840	Identifier	ch		3245280	1					
ANR	3246841	Identifier	snroffst		3245280	1					
ANR	3246842	IfStatement	if ( parse_transient_proc_info )		3245280	37					
ANR	3246843	Condition	parse_transient_proc_info	559:8:11326:11350	3245280	0	True				
ANR	3246844	Identifier	parse_transient_proc_info		3245280	0					
ANR	3246845	CompoundStatement		557:35:11305:11305	3245280	1					
ANR	3246846	ForStatement	for ( ch = 1 ; ch <= s -> fbw_channels ; ch ++ )		3245280	0					
ANR	3246847	ForInit	ch = 1 ;	561:13:11369:11375	3245280	0	True				
ANR	3246848	AssignmentExpression	ch = 1		3245280	0		=			
ANR	3246849	Identifier	ch		3245280	0					
ANR	3246850	PrimaryExpression	1		3245280	1					
ANR	3246851	Condition	ch <= s -> fbw_channels	561:21:11377:11397	3245280	1	True				
ANR	3246852	RelationalExpression	ch <= s -> fbw_channels		3245280	0		<=			
ANR	3246853	Identifier	ch		3245280	0					
ANR	3246854	PtrMemberAccess	s -> fbw_channels		3245280	1					
ANR	3246855	Identifier	s		3245280	0					
ANR	3246856	Identifier	fbw_channels		3245280	1					
ANR	3246857	PostIncDecOperationExpression	ch ++	561:44:11400:11403	3245280	2	True				
ANR	3246858	Identifier	ch		3245280	0					
ANR	3246859	IncDec	++		3245280	1					
ANR	3246860	CompoundStatement		559:50:11358:11358	3245280	3					
ANR	3246861	IfStatement	if ( get_bits1 ( gbc ) )		3245280	0					
ANR	3246862	Condition	get_bits1 ( gbc )	563:16:11425:11438	3245280	0	True				
ANR	3246863	CallExpression	get_bits1 ( gbc )		3245280	0					
ANR	3246864	Callee	get_bits1		3245280	0					
ANR	3246865	Identifier	get_bits1		3245280	0					
ANR	3246866	ArgumentList	gbc		3245280	1					
ANR	3246867	Argument	gbc		3245280	0					
ANR	3246868	Identifier	gbc		3245280	0					
ANR	3246869	CompoundStatement		561:32:11393:11393	3245280	1					
ANR	3246870	ExpressionStatement	"skip_bits ( gbc , 10 )"	565:16:11495:11513	3245280	0	True				
ANR	3246871	CallExpression	"skip_bits ( gbc , 10 )"		3245280	0					
ANR	3246872	Callee	skip_bits		3245280	0					
ANR	3246873	Identifier	skip_bits		3245280	0					
ANR	3246874	ArgumentList	gbc		3245280	1					
ANR	3246875	Argument	gbc		3245280	0					
ANR	3246876	Identifier	gbc		3245280	0					
ANR	3246877	Argument	10		3245280	1					
ANR	3246878	PrimaryExpression	10		3245280	0					
ANR	3246879	ExpressionStatement	"skip_bits ( gbc , 8 )"	567:16:11570:11587	3245280	1	True				
ANR	3246880	CallExpression	"skip_bits ( gbc , 8 )"		3245280	0					
ANR	3246881	Callee	skip_bits		3245280	0					
ANR	3246882	Identifier	skip_bits		3245280	0					
ANR	3246883	ArgumentList	gbc		3245280	1					
ANR	3246884	Argument	gbc		3245280	0					
ANR	3246885	Identifier	gbc		3245280	0					
ANR	3246886	Argument	8		3245280	1					
ANR	3246887	PrimaryExpression	8		3245280	0					
ANR	3246888	ForStatement	for ( ch = 1 ; ch <= s -> fbw_channels ; ch ++ )		3245280	38					
ANR	3246889	ForInit	ch = 1 ;	579:9:11718:11724	3245280	0	True				
ANR	3246890	AssignmentExpression	ch = 1		3245280	0		=			
ANR	3246891	Identifier	ch		3245280	0					
ANR	3246892	PrimaryExpression	1		3245280	1					
ANR	3246893	Condition	ch <= s -> fbw_channels	579:17:11726:11746	3245280	1	True				
ANR	3246894	RelationalExpression	ch <= s -> fbw_channels		3245280	0		<=			
ANR	3246895	Identifier	ch		3245280	0					
ANR	3246896	PtrMemberAccess	s -> fbw_channels		3245280	1					
ANR	3246897	Identifier	s		3245280	0					
ANR	3246898	Identifier	fbw_channels		3245280	1					
ANR	3246899	PostIncDecOperationExpression	ch ++	579:40:11749:11752	3245280	2	True				
ANR	3246900	Identifier	ch		3245280	0					
ANR	3246901	IncDec	++		3245280	1					
ANR	3246902	CompoundStatement		577:46:11707:11707	3245280	3					
ANR	3246903	IfStatement	if ( parse_spx_atten_data && get_bits1 ( gbc ) )		3245280	0					
ANR	3246904	Condition	parse_spx_atten_data && get_bits1 ( gbc )	581:12:11770:11807	3245280	0	True				
ANR	3246905	AndExpression	parse_spx_atten_data && get_bits1 ( gbc )		3245280	0		&&			
ANR	3246906	Identifier	parse_spx_atten_data		3245280	0					
ANR	3246907	CallExpression	get_bits1 ( gbc )		3245280	1					
ANR	3246908	Callee	get_bits1		3245280	0					
ANR	3246909	Identifier	get_bits1		3245280	0					
ANR	3246910	ArgumentList	gbc		3245280	1					
ANR	3246911	Argument	gbc		3245280	0					
ANR	3246912	Identifier	gbc		3245280	0					
ANR	3246913	CompoundStatement		579:52:11762:11762	3245280	1					
ANR	3246914	ExpressionStatement	"s -> spx_atten_code [ ch ] = get_bits ( gbc , 5 )"	583:12:11825:11865	3245280	0	True				
ANR	3246915	AssignmentExpression	"s -> spx_atten_code [ ch ] = get_bits ( gbc , 5 )"		3245280	0		=			
ANR	3246916	ArrayIndexing	s -> spx_atten_code [ ch ]		3245280	0					
ANR	3246917	PtrMemberAccess	s -> spx_atten_code		3245280	0					
ANR	3246918	Identifier	s		3245280	0					
ANR	3246919	Identifier	spx_atten_code		3245280	1					
ANR	3246920	Identifier	ch		3245280	1					
ANR	3246921	CallExpression	"get_bits ( gbc , 5 )"		3245280	1					
ANR	3246922	Callee	get_bits		3245280	0					
ANR	3246923	Identifier	get_bits		3245280	0					
ANR	3246924	ArgumentList	gbc		3245280	1					
ANR	3246925	Argument	gbc		3245280	0					
ANR	3246926	Identifier	gbc		3245280	0					
ANR	3246927	Argument	5		3245280	1					
ANR	3246928	PrimaryExpression	5		3245280	0					
ANR	3246929	ElseStatement	else		3245280	0					
ANR	3246930	CompoundStatement		583:15:11835:11835	3245280	0					
ANR	3246931	ExpressionStatement	s -> spx_atten_code [ ch ] = - 1	587:12:11898:11924	3245280	0	True				
ANR	3246932	AssignmentExpression	s -> spx_atten_code [ ch ] = - 1		3245280	0		=			
ANR	3246933	ArrayIndexing	s -> spx_atten_code [ ch ]		3245280	0					
ANR	3246934	PtrMemberAccess	s -> spx_atten_code		3245280	0					
ANR	3246935	Identifier	s		3245280	0					
ANR	3246936	Identifier	spx_atten_code		3245280	1					
ANR	3246937	Identifier	ch		3245280	1					
ANR	3246938	UnaryOperationExpression	- 1		3245280	1					
ANR	3246939	UnaryOperator	-		3245280	0					
ANR	3246940	PrimaryExpression	1		3245280	1					
ANR	3246941	IfStatement	if ( s -> num_blocks > 1 && get_bits1 ( gbc ) )		3245280	39					
ANR	3246942	Condition	s -> num_blocks > 1 && get_bits1 ( gbc )	597:8:11990:12024	3245280	0	True				
ANR	3246943	AndExpression	s -> num_blocks > 1 && get_bits1 ( gbc )		3245280	0		&&			
ANR	3246944	RelationalExpression	s -> num_blocks > 1		3245280	0		>			
ANR	3246945	PtrMemberAccess	s -> num_blocks		3245280	0					
ANR	3246946	Identifier	s		3245280	0					
ANR	3246947	Identifier	num_blocks		3245280	1					
ANR	3246948	PrimaryExpression	1		3245280	1					
ANR	3246949	CallExpression	get_bits1 ( gbc )		3245280	1					
ANR	3246950	Callee	get_bits1		3245280	0					
ANR	3246951	Identifier	get_bits1		3245280	0					
ANR	3246952	ArgumentList	gbc		3245280	1					
ANR	3246953	Argument	gbc		3245280	0					
ANR	3246954	Identifier	gbc		3245280	0					
ANR	3246955	CompoundStatement		605:8:12257:12330	3245280	1					
ANR	3246956	IdentifierDeclStatement	int block_start_bits = ( s -> num_blocks - 1 ) * ( 4 + av_log2 ( s -> frame_size - 2 ) ) ;	607:8:12305:12378	3245280	0	True				
ANR	3246957	IdentifierDecl	block_start_bits = ( s -> num_blocks - 1 ) * ( 4 + av_log2 ( s -> frame_size - 2 ) )		3245280	0					
ANR	3246958	IdentifierDeclType	int		3245280	0					
ANR	3246959	Identifier	block_start_bits		3245280	1					
ANR	3246960	AssignmentExpression	block_start_bits = ( s -> num_blocks - 1 ) * ( 4 + av_log2 ( s -> frame_size - 2 ) )		3245280	2		=			
ANR	3246961	Identifier	block_start_bits		3245280	0					
ANR	3246962	MultiplicativeExpression	( s -> num_blocks - 1 ) * ( 4 + av_log2 ( s -> frame_size - 2 ) )		3245280	1		*			
ANR	3246963	AdditiveExpression	s -> num_blocks - 1		3245280	0		-			
ANR	3246964	PtrMemberAccess	s -> num_blocks		3245280	0					
ANR	3246965	Identifier	s		3245280	0					
ANR	3246966	Identifier	num_blocks		3245280	1					
ANR	3246967	PrimaryExpression	1		3245280	1					
ANR	3246968	AdditiveExpression	4 + av_log2 ( s -> frame_size - 2 )		3245280	1		+			
ANR	3246969	PrimaryExpression	4		3245280	0					
ANR	3246970	CallExpression	av_log2 ( s -> frame_size - 2 )		3245280	1					
ANR	3246971	Callee	av_log2		3245280	0					
ANR	3246972	Identifier	av_log2		3245280	0					
ANR	3246973	ArgumentList	s -> frame_size - 2		3245280	1					
ANR	3246974	Argument	s -> frame_size - 2		3245280	0					
ANR	3246975	AdditiveExpression	s -> frame_size - 2		3245280	0		-			
ANR	3246976	PtrMemberAccess	s -> frame_size		3245280	0					
ANR	3246977	Identifier	s		3245280	0					
ANR	3246978	Identifier	frame_size		3245280	1					
ANR	3246979	PrimaryExpression	2		3245280	1					
ANR	3246980	ExpressionStatement	"skip_bits_long ( gbc , block_start_bits )"	609:8:12389:12426	3245280	1	True				
ANR	3246981	CallExpression	"skip_bits_long ( gbc , block_start_bits )"		3245280	0					
ANR	3246982	Callee	skip_bits_long		3245280	0					
ANR	3246983	Identifier	skip_bits_long		3245280	0					
ANR	3246984	ArgumentList	gbc		3245280	1					
ANR	3246985	Argument	gbc		3245280	0					
ANR	3246986	Identifier	gbc		3245280	0					
ANR	3246987	Argument	block_start_bits		3245280	1					
ANR	3246988	Identifier	block_start_bits		3245280	0					
ANR	3246989	ExpressionStatement	"avpriv_request_sample ( s -> avctx , ""Block start info"" )"	611:8:12437:12488	3245280	2	True				
ANR	3246990	CallExpression	"avpriv_request_sample ( s -> avctx , ""Block start info"" )"		3245280	0					
ANR	3246991	Callee	avpriv_request_sample		3245280	0					
ANR	3246992	Identifier	avpriv_request_sample		3245280	0					
ANR	3246993	ArgumentList	s -> avctx		3245280	1					
ANR	3246994	Argument	s -> avctx		3245280	0					
ANR	3246995	PtrMemberAccess	s -> avctx		3245280	0					
ANR	3246996	Identifier	s		3245280	0					
ANR	3246997	Identifier	avctx		3245280	1					
ANR	3246998	Argument	"""Block start info"""		3245280	1					
ANR	3246999	PrimaryExpression	"""Block start info"""		3245280	0					
ANR	3247000	ForStatement	for ( ch = 1 ; ch <= s -> fbw_channels ; ch ++ )		3245280	40					
ANR	3247001	ForInit	ch = 1 ;	619:9:12548:12554	3245280	0	True				
ANR	3247002	AssignmentExpression	ch = 1		3245280	0		=			
ANR	3247003	Identifier	ch		3245280	0					
ANR	3247004	PrimaryExpression	1		3245280	1					
ANR	3247005	Condition	ch <= s -> fbw_channels	619:17:12556:12576	3245280	1	True				
ANR	3247006	RelationalExpression	ch <= s -> fbw_channels		3245280	0		<=			
ANR	3247007	Identifier	ch		3245280	0					
ANR	3247008	PtrMemberAccess	s -> fbw_channels		3245280	1					
ANR	3247009	Identifier	s		3245280	0					
ANR	3247010	Identifier	fbw_channels		3245280	1					
ANR	3247011	PostIncDecOperationExpression	ch ++	619:40:12579:12582	3245280	2	True				
ANR	3247012	Identifier	ch		3245280	0					
ANR	3247013	IncDec	++		3245280	1					
ANR	3247014	CompoundStatement		617:46:12537:12537	3245280	3					
ANR	3247015	ExpressionStatement	s -> first_spx_coords [ ch ] = 1	621:8:12596:12623	3245280	0	True				
ANR	3247016	AssignmentExpression	s -> first_spx_coords [ ch ] = 1		3245280	0		=			
ANR	3247017	ArrayIndexing	s -> first_spx_coords [ ch ]		3245280	0					
ANR	3247018	PtrMemberAccess	s -> first_spx_coords		3245280	0					
ANR	3247019	Identifier	s		3245280	0					
ANR	3247020	Identifier	first_spx_coords		3245280	1					
ANR	3247021	Identifier	ch		3245280	1					
ANR	3247022	PrimaryExpression	1		3245280	1					
ANR	3247023	ExpressionStatement	s -> first_cpl_coords [ ch ] = 1	623:8:12634:12661	3245280	1	True				
ANR	3247024	AssignmentExpression	s -> first_cpl_coords [ ch ] = 1		3245280	0		=			
ANR	3247025	ArrayIndexing	s -> first_cpl_coords [ ch ]		3245280	0					
ANR	3247026	PtrMemberAccess	s -> first_cpl_coords		3245280	0					
ANR	3247027	Identifier	s		3245280	0					
ANR	3247028	Identifier	first_cpl_coords		3245280	1					
ANR	3247029	Identifier	ch		3245280	1					
ANR	3247030	PrimaryExpression	1		3245280	1					
ANR	3247031	ExpressionStatement	s -> first_cpl_leak = 1	627:4:12675:12696	3245280	41	True				
ANR	3247032	AssignmentExpression	s -> first_cpl_leak = 1		3245280	0		=			
ANR	3247033	PtrMemberAccess	s -> first_cpl_leak		3245280	0					
ANR	3247034	Identifier	s		3245280	0					
ANR	3247035	Identifier	first_cpl_leak		3245280	1					
ANR	3247036	PrimaryExpression	1		3245280	1					
ANR	3247037	ReturnStatement	return 0 ;	631:4:12705:12713	3245280	42	True				
ANR	3247038	PrimaryExpression	0		3245280	0					
ANR	3247039	ReturnType	int		3245280	1					
ANR	3247040	Identifier	ff_eac3_parse_header		3245280	2					
ANR	3247041	ParameterList	AC3DecodeContext * s		3245280	3					
ANR	3247042	Parameter	AC3DecodeContext * s	1:25:25:43	3245280	0	True				
ANR	3247043	ParameterType	AC3DecodeContext *		3245280	0					
ANR	3247044	Identifier	s		3245280	1					
ANR	3247045	CFGEntryNode	ENTRY		3245280		True				
ANR	3247046	CFGExitNode	EXIT		3245280		True				
ANR	3247047	Symbol	s -> dolby_headphone_mode		3245280						
ANR	3247048	Symbol	s -> block_switch		3245280						
ANR	3247049	Symbol	* * ff_eac3_frm_expstr		3245280						
ANR	3247050	Symbol	frmchexpstr		3245280						
ANR	3247051	Symbol	* ch		3245280						
ANR	3247052	Symbol	s -> bit_allocation_syntax		3245280						
ANR	3247053	Symbol	ff_eac3_frm_expstr		3245280						
ANR	3247054	Symbol	s -> lfe_on		3245280						
ANR	3247055	Symbol	s -> bit_alloc_params . slow_gain		3245280						
ANR	3247056	Symbol	snroffst		3245280						
ANR	3247057	Symbol	EAC3_SR_CODE_REDUCED		3245280						
ANR	3247058	Symbol	av_clip		3245280						
ANR	3247059	Symbol	* ff_ac3_fast_decay_tab		3245280						
ANR	3247060	Symbol	* s -> snr_offset		3245280						
ANR	3247061	Symbol	EXP_REUSE		3245280						
ANR	3247062	Symbol	s -> first_cpl_leak		3245280						
ANR	3247063	Symbol	s -> channel_uses_aht		3245280						
ANR	3247064	Symbol	mix_data_size		3245280						
ANR	3247065	Symbol	s -> exp_strategy		3245280						
ANR	3247066	Symbol	s -> substreamid		3245280						
ANR	3247067	Symbol	s -> center_mix_level		3245280						
ANR	3247068	Symbol	ff_ac3_slow_gain_tab		3245280						
ANR	3247069	Symbol	* * * s		3245280						
ANR	3247070	Symbol	s -> bit_alloc_params		3245280						
ANR	3247071	Symbol	s -> bitstream_mode		3245280						
ANR	3247072	Symbol	EAC3_FRAME_TYPE_RESERVED		3245280						
ANR	3247073	Symbol	* blk		3245280						
ANR	3247074	Symbol	s -> num_blocks		3245280						
ANR	3247075	Symbol	* * blk		3245280						
ANR	3247076	Symbol	block_start_bits		3245280						
ANR	3247077	Symbol	csnroffst		3245280						
ANR	3247078	Symbol	av_log2		3245280						
ANR	3247079	Symbol	ff_ac3_fast_decay_tab		3245280						
ANR	3247080	Symbol	* CPL_CH		3245280						
ANR	3247081	Symbol	s -> bit_alloc_params . sr_code		3245280						
ANR	3247082	Symbol	s -> bit_alloc_params . floor		3245280						
ANR	3247083	Symbol	use_aht		3245280						
ANR	3247084	Symbol	parse_spx_atten_data		3245280						
ANR	3247085	Symbol	* ff_ac3_slow_gain_tab		3245280						
ANR	3247086	Symbol	* ff_ac3_floor_tab		3245280						
ANR	3247087	Symbol	s -> dba_syntax		3245280						
ANR	3247088	Symbol	ff_ac3_db_per_bit_tab		3245280						
ANR	3247089	Symbol	* s -> spx_atten_code		3245280						
ANR	3247090	Symbol	* * s		3245280						
ANR	3247091	Symbol	AVERROR_PATCHWELCOME		3245280						
ANR	3247092	Symbol	s -> lfe_mix_level_exists		3245280						
ANR	3247093	Symbol	* * s -> exp_strategy		3245280						
ANR	3247094	Symbol	s -> bit_alloc_params . fast_decay		3245280						
ANR	3247095	Symbol	* s -> cpl_strategy_exists		3245280						
ANR	3247096	Symbol	blk		3245280						
ANR	3247097	Symbol	s -> frame_type		3245280						
ANR	3247098	Symbol	AV_LOG_ERROR		3245280						
ANR	3247099	Symbol	ch		3245280						
ANR	3247100	Symbol	* * frmchexpstr		3245280						
ANR	3247101	Symbol	i		3245280						
ANR	3247102	Symbol	s -> dither_flag_syntax		3245280						
ANR	3247103	Symbol	* s -> first_spx_coords		3245280						
ANR	3247104	Symbol	s -> skip_syntax		3245280						
ANR	3247105	Symbol	s		3245280						
ANR	3247106	Symbol	s -> center_mix_level_ltrt		3245280						
ANR	3247107	Symbol	s -> cpl_strategy_exists		3245280						
ANR	3247108	Symbol	s -> fast_gain_syntax		3245280						
ANR	3247109	Symbol	s -> snr_offset		3245280						
ANR	3247110	Symbol	s -> lfe_ch		3245280						
ANR	3247111	Symbol	* ff_ac3_slow_decay_tab		3245280						
ANR	3247112	Symbol	ac3_exponent_strategy		3245280						
ANR	3247113	Symbol	* s -> exp_strategy		3245280						
ANR	3247114	Symbol	get_bits		3245280						
ANR	3247115	Symbol	AC3_CHMODE_2F2R		3245280						
ANR	3247116	Symbol	EAC3_FRAME_TYPE_DEPENDENT		3245280						
ANR	3247117	Symbol	* ff_ac3_db_per_bit_tab		3245280						
ANR	3247118	Symbol	parse_aht_info		3245280						
ANR	3247119	Symbol	s -> snr_offset_strategy		3245280						
ANR	3247120	Symbol	s -> dolby_surround_mode		3245280						
ANR	3247121	Symbol	AC3_CHMODE_STEREO		3245280						
ANR	3247122	Symbol	s -> first_cpl_coords		3245280						
ANR	3247123	Symbol	s -> channel_mode		3245280						
ANR	3247124	Symbol	s -> dolby_surround_ex_mode		3245280						
ANR	3247125	Symbol	parse_transient_proc_info		3245280						
ANR	3247126	Symbol	s -> spx_atten_code		3245280						
ANR	3247127	Symbol	& s -> gbc		3245280						
ANR	3247128	Symbol	get_bits1		3245280						
ANR	3247129	Symbol	num_cpl_blocks		3245280						
ANR	3247130	Symbol	s -> surround_mix_level_ltrt		3245280						
ANR	3247131	Symbol	* s -> channel_uses_aht		3245280						
ANR	3247132	Symbol	* frmchexpstr		3245280						
ANR	3247133	Symbol	s -> frame_size		3245280						
ANR	3247134	Symbol	s -> avctx		3245280						
ANR	3247135	Symbol	* s -> dither_flag		3245280						
ANR	3247136	Symbol	ff_ac3_floor_tab		3245280						
ANR	3247137	Symbol	s -> bit_alloc_params . db_per_bit		3245280						
ANR	3247138	Symbol	s -> fbw_channels		3245280						
ANR	3247139	Symbol	addbsil		3245280						
ANR	3247140	Symbol	CPL_CH		3245280						
ANR	3247141	Symbol	s -> preferred_downmix		3245280						
ANR	3247142	Symbol	s -> first_spx_coords		3245280						
ANR	3247143	Symbol	s -> channels		3245280						
ANR	3247144	Symbol	ff_ac3_slow_decay_tab		3245280						
ANR	3247145	Symbol	* s -> cpl_in_use		3245280						
ANR	3247146	Symbol	EAC3_FRAME_TYPE_AC3_CONVERT		3245280						
ANR	3247147	Symbol	s -> surround_mix_level		3245280						
ANR	3247148	Symbol	s -> dither_flag		3245280						
ANR	3247149	Symbol	s -> bit_alloc_params . slow_decay		3245280						
ANR	3247150	Symbol	* ff_eac3_frm_expstr		3245280						
ANR	3247151	Symbol	s -> lfe_mix_level		3245280						
ANR	3247152	Symbol	EAC3_FRAME_TYPE_INDEPENDENT		3245280						
ANR	3247153	Symbol	gbc		3245280						
ANR	3247154	Symbol	* s -> lfe_ch		3245280						
ANR	3247155	Symbol	AAC_AC3_PARSE_ERROR_FRAME_TYPE		3245280						
ANR	3247156	Symbol	s -> cpl_in_use		3245280						
ANR	3247157	Symbol	* s -> first_cpl_coords		3245280						
ANR	3247158	Symbol	s -> block_switch_syntax		3245280						
ANR	3247159	Symbol	* s		3245280						
