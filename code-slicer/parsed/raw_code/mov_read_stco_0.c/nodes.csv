command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5615885	File	/home/p4ultr4n/workplace/ReVeal/raw_code/mov_read_stco_0.c								
ANR	5615886	Function	mov_read_stco	1:0:0:849							
ANR	5615887	FunctionDef	"mov_read_stco (MOVContext * c , ByteIOContext * pb , MOVAtom atom)"		5615886	0					
ANR	5615888	CompoundStatement		3:0:74:849	5615886	0					
ANR	5615889	IdentifierDeclStatement	AVStream * st = c -> fc -> streams [ c -> fc -> nb_streams - 1 ] ;	5:4:81:131	5615886	0	True				
ANR	5615890	IdentifierDecl	* st = c -> fc -> streams [ c -> fc -> nb_streams - 1 ]		5615886	0					
ANR	5615891	IdentifierDeclType	AVStream *		5615886	0					
ANR	5615892	Identifier	st		5615886	1					
ANR	5615893	AssignmentExpression	* st = c -> fc -> streams [ c -> fc -> nb_streams - 1 ]		5615886	2		=			
ANR	5615894	Identifier	st		5615886	0					
ANR	5615895	ArrayIndexing	c -> fc -> streams [ c -> fc -> nb_streams - 1 ]		5615886	1					
ANR	5615896	PtrMemberAccess	c -> fc -> streams		5615886	0					
ANR	5615897	PtrMemberAccess	c -> fc		5615886	0					
ANR	5615898	Identifier	c		5615886	0					
ANR	5615899	Identifier	fc		5615886	1					
ANR	5615900	Identifier	streams		5615886	1					
ANR	5615901	AdditiveExpression	c -> fc -> nb_streams - 1		5615886	1		-			
ANR	5615902	PtrMemberAccess	c -> fc -> nb_streams		5615886	0					
ANR	5615903	PtrMemberAccess	c -> fc		5615886	0					
ANR	5615904	Identifier	c		5615886	0					
ANR	5615905	Identifier	fc		5615886	1					
ANR	5615906	Identifier	nb_streams		5615886	1					
ANR	5615907	PrimaryExpression	1		5615886	1					
ANR	5615908	IdentifierDeclStatement	MOVStreamContext * sc = st -> priv_data ;	7:4:138:174	5615886	1	True				
ANR	5615909	IdentifierDecl	* sc = st -> priv_data		5615886	0					
ANR	5615910	IdentifierDeclType	MOVStreamContext *		5615886	0					
ANR	5615911	Identifier	sc		5615886	1					
ANR	5615912	AssignmentExpression	* sc = st -> priv_data		5615886	2		=			
ANR	5615913	Identifier	sc		5615886	0					
ANR	5615914	PtrMemberAccess	st -> priv_data		5615886	1					
ANR	5615915	Identifier	st		5615886	0					
ANR	5615916	Identifier	priv_data		5615886	1					
ANR	5615917	IdentifierDeclStatement	"unsigned int i , entries ;"	9:4:181:204	5615886	2	True				
ANR	5615918	IdentifierDecl	i		5615886	0					
ANR	5615919	IdentifierDeclType	unsigned int		5615886	0					
ANR	5615920	Identifier	i		5615886	1					
ANR	5615921	IdentifierDecl	entries		5615886	1					
ANR	5615922	IdentifierDeclType	unsigned int		5615886	0					
ANR	5615923	Identifier	entries		5615886	1					
ANR	5615924	ExpressionStatement	get_byte ( pb )	13:4:213:225	5615886	3	True				
ANR	5615925	CallExpression	get_byte ( pb )		5615886	0					
ANR	5615926	Callee	get_byte		5615886	0					
ANR	5615927	Identifier	get_byte		5615886	0					
ANR	5615928	ArgumentList	pb		5615886	1					
ANR	5615929	Argument	pb		5615886	0					
ANR	5615930	Identifier	pb		5615886	0					
ANR	5615931	ExpressionStatement	get_be24 ( pb )	15:4:246:258	5615886	4	True				
ANR	5615932	CallExpression	get_be24 ( pb )		5615886	0					
ANR	5615933	Callee	get_be24		5615886	0					
ANR	5615934	Identifier	get_be24		5615886	0					
ANR	5615935	ArgumentList	pb		5615886	1					
ANR	5615936	Argument	pb		5615886	0					
ANR	5615937	Identifier	pb		5615886	0					
ANR	5615938	ExpressionStatement	entries = get_be32 ( pb )	19:4:279:301	5615886	5	True				
ANR	5615939	AssignmentExpression	entries = get_be32 ( pb )		5615886	0		=			
ANR	5615940	Identifier	entries		5615886	0					
ANR	5615941	CallExpression	get_be32 ( pb )		5615886	1					
ANR	5615942	Callee	get_be32		5615886	0					
ANR	5615943	Identifier	get_be32		5615886	0					
ANR	5615944	ArgumentList	pb		5615886	1					
ANR	5615945	Argument	pb		5615886	0					
ANR	5615946	Identifier	pb		5615886	0					
ANR	5615947	IfStatement	if ( entries >= UINT_MAX / sizeof ( int64_t ) )		5615886	6					
ANR	5615948	Condition	entries >= UINT_MAX / sizeof ( int64_t )	23:7:313:347	5615886	0	True				
ANR	5615949	RelationalExpression	entries >= UINT_MAX / sizeof ( int64_t )		5615886	0		>=			
ANR	5615950	Identifier	entries		5615886	0					
ANR	5615951	MultiplicativeExpression	UINT_MAX / sizeof ( int64_t )		5615886	1		/			
ANR	5615952	Identifier	UINT_MAX		5615886	0					
ANR	5615953	SizeofExpression	sizeof ( int64_t )		5615886	1					
ANR	5615954	Sizeof	sizeof		5615886	0					
ANR	5615955	SizeofOperand	int64_t		5615886	1					
ANR	5615956	ReturnStatement	return - 1 ;	25:8:359:368	5615886	1	True				
ANR	5615957	UnaryOperationExpression	- 1		5615886	0					
ANR	5615958	UnaryOperator	-		5615886	0					
ANR	5615959	PrimaryExpression	1		5615886	1					
ANR	5615960	ExpressionStatement	sc -> chunk_offsets = av_malloc ( entries * sizeof ( int64_t ) )	29:4:377:433	5615886	7	True				
ANR	5615961	AssignmentExpression	sc -> chunk_offsets = av_malloc ( entries * sizeof ( int64_t ) )		5615886	0		=			
ANR	5615962	PtrMemberAccess	sc -> chunk_offsets		5615886	0					
ANR	5615963	Identifier	sc		5615886	0					
ANR	5615964	Identifier	chunk_offsets		5615886	1					
ANR	5615965	CallExpression	av_malloc ( entries * sizeof ( int64_t ) )		5615886	1					
ANR	5615966	Callee	av_malloc		5615886	0					
ANR	5615967	Identifier	av_malloc		5615886	0					
ANR	5615968	ArgumentList	entries * sizeof ( int64_t )		5615886	1					
ANR	5615969	Argument	entries * sizeof ( int64_t )		5615886	0					
ANR	5615970	MultiplicativeExpression	entries * sizeof ( int64_t )		5615886	0		*			
ANR	5615971	Identifier	entries		5615886	0					
ANR	5615972	SizeofExpression	sizeof ( int64_t )		5615886	1					
ANR	5615973	Sizeof	sizeof		5615886	0					
ANR	5615974	SizeofOperand	int64_t		5615886	1					
ANR	5615975	IfStatement	if ( ! sc -> chunk_offsets )		5615886	8					
ANR	5615976	Condition	! sc -> chunk_offsets	31:8:444:461	5615886	0	True				
ANR	5615977	UnaryOperationExpression	! sc -> chunk_offsets		5615886	0					
ANR	5615978	UnaryOperator	!		5615886	0					
ANR	5615979	PtrMemberAccess	sc -> chunk_offsets		5615886	1					
ANR	5615980	Identifier	sc		5615886	0					
ANR	5615981	Identifier	chunk_offsets		5615886	1					
ANR	5615982	ReturnStatement	return AVERROR ( ENOMEM ) ;	33:8:473:495	5615886	1	True				
ANR	5615983	CallExpression	AVERROR ( ENOMEM )		5615886	0					
ANR	5615984	Callee	AVERROR		5615886	0					
ANR	5615985	Identifier	AVERROR		5615886	0					
ANR	5615986	ArgumentList	ENOMEM		5615886	1					
ANR	5615987	Argument	ENOMEM		5615886	0					
ANR	5615988	Identifier	ENOMEM		5615886	0					
ANR	5615989	ExpressionStatement	sc -> chunk_count = entries	35:4:502:527	5615886	9	True				
ANR	5615990	AssignmentExpression	sc -> chunk_count = entries		5615886	0		=			
ANR	5615991	PtrMemberAccess	sc -> chunk_count		5615886	0					
ANR	5615992	Identifier	sc		5615886	0					
ANR	5615993	Identifier	chunk_count		5615886	1					
ANR	5615994	Identifier	entries		5615886	1					
ANR	5615995	IfStatement	"if ( atom . type == MKTAG ( 's' , 't' , 'c' , 'o' ) )"		5615886	10					
ANR	5615996	Condition	"atom . type == MKTAG ( 's' , 't' , 'c' , 'o' )"	39:13:545:579	5615886	0	True				
ANR	5615997	EqualityExpression	"atom . type == MKTAG ( 's' , 't' , 'c' , 'o' )"		5615886	0		==			
ANR	5615998	MemberAccess	atom . type		5615886	0					
ANR	5615999	Identifier	atom		5615886	0					
ANR	5616000	Identifier	type		5615886	1					
ANR	5616001	CallExpression	"MKTAG ( 's' , 't' , 'c' , 'o' )"		5615886	1					
ANR	5616002	Callee	MKTAG		5615886	0					
ANR	5616003	Identifier	MKTAG		5615886	0					
ANR	5616004	ArgumentList	's'		5615886	1					
ANR	5616005	Argument	's'		5615886	0					
ANR	5616006	PrimaryExpression	's'		5615886	0					
ANR	5616007	Argument	't'		5615886	1					
ANR	5616008	PrimaryExpression	't'		5615886	0					
ANR	5616009	Argument	'c'		5615886	2					
ANR	5616010	PrimaryExpression	'c'		5615886	0					
ANR	5616011	Argument	'o'		5615886	3					
ANR	5616012	PrimaryExpression	'o'		5615886	0					
ANR	5616013	ForStatement	for ( i = 0 ; i < entries ; i ++ )		5615886	1					
ANR	5616014	ForInit	i = 0 ;	41:12:595:598	5615886	0	True				
ANR	5616015	AssignmentExpression	i = 0		5615886	0		=			
ANR	5616016	Identifier	i		5615886	0					
ANR	5616017	PrimaryExpression	0		5615886	1					
ANR	5616018	Condition	i < entries	41:17:600:608	5615886	1	True				
ANR	5616019	RelationalExpression	i < entries		5615886	0		<			
ANR	5616020	Identifier	i		5615886	0					
ANR	5616021	Identifier	entries		5615886	1					
ANR	5616022	PostIncDecOperationExpression	i ++	41:28:611:613	5615886	2	True				
ANR	5616023	Identifier	i		5615886	0					
ANR	5616024	IncDec	++		5615886	1					
ANR	5616025	ExpressionStatement	sc -> chunk_offsets [ i ] = get_be32 ( pb )	43:12:629:664	5615886	3	True				
ANR	5616026	AssignmentExpression	sc -> chunk_offsets [ i ] = get_be32 ( pb )		5615886	0		=			
ANR	5616027	ArrayIndexing	sc -> chunk_offsets [ i ]		5615886	0					
ANR	5616028	PtrMemberAccess	sc -> chunk_offsets		5615886	0					
ANR	5616029	Identifier	sc		5615886	0					
ANR	5616030	Identifier	chunk_offsets		5615886	1					
ANR	5616031	Identifier	i		5615886	1					
ANR	5616032	CallExpression	get_be32 ( pb )		5615886	1					
ANR	5616033	Callee	get_be32		5615886	0					
ANR	5616034	Identifier	get_be32		5615886	0					
ANR	5616035	ArgumentList	pb		5615886	1					
ANR	5616036	Argument	pb		5615886	0					
ANR	5616037	Identifier	pb		5615886	0					
ANR	5616038	ElseStatement	else		5615886	0					
ANR	5616039	IfStatement	"if ( atom . type == MKTAG ( 'c' , 'o' , '6' , '4' ) )"		5615886	0					
ANR	5616040	Condition	"atom . type == MKTAG ( 'c' , 'o' , '6' , '4' )"	45:13:680:714	5615886	0	True				
ANR	5616041	EqualityExpression	"atom . type == MKTAG ( 'c' , 'o' , '6' , '4' )"		5615886	0		==			
ANR	5616042	MemberAccess	atom . type		5615886	0					
ANR	5616043	Identifier	atom		5615886	0					
ANR	5616044	Identifier	type		5615886	1					
ANR	5616045	CallExpression	"MKTAG ( 'c' , 'o' , '6' , '4' )"		5615886	1					
ANR	5616046	Callee	MKTAG		5615886	0					
ANR	5616047	Identifier	MKTAG		5615886	0					
ANR	5616048	ArgumentList	'c'		5615886	1					
ANR	5616049	Argument	'c'		5615886	0					
ANR	5616050	PrimaryExpression	'c'		5615886	0					
ANR	5616051	Argument	'o'		5615886	1					
ANR	5616052	PrimaryExpression	'o'		5615886	0					
ANR	5616053	Argument	'6'		5615886	2					
ANR	5616054	PrimaryExpression	'6'		5615886	0					
ANR	5616055	Argument	'4'		5615886	3					
ANR	5616056	PrimaryExpression	'4'		5615886	0					
ANR	5616057	ForStatement	for ( i = 0 ; i < entries ; i ++ )		5615886	1					
ANR	5616058	ForInit	i = 0 ;	47:12:730:733	5615886	0	True				
ANR	5616059	AssignmentExpression	i = 0		5615886	0		=			
ANR	5616060	Identifier	i		5615886	0					
ANR	5616061	PrimaryExpression	0		5615886	1					
ANR	5616062	Condition	i < entries	47:17:735:743	5615886	1	True				
ANR	5616063	RelationalExpression	i < entries		5615886	0		<			
ANR	5616064	Identifier	i		5615886	0					
ANR	5616065	Identifier	entries		5615886	1					
ANR	5616066	PostIncDecOperationExpression	i ++	47:28:746:748	5615886	2	True				
ANR	5616067	Identifier	i		5615886	0					
ANR	5616068	IncDec	++		5615886	1					
ANR	5616069	ExpressionStatement	sc -> chunk_offsets [ i ] = get_be64 ( pb )	49:12:764:799	5615886	3	True				
ANR	5616070	AssignmentExpression	sc -> chunk_offsets [ i ] = get_be64 ( pb )		5615886	0		=			
ANR	5616071	ArrayIndexing	sc -> chunk_offsets [ i ]		5615886	0					
ANR	5616072	PtrMemberAccess	sc -> chunk_offsets		5615886	0					
ANR	5616073	Identifier	sc		5615886	0					
ANR	5616074	Identifier	chunk_offsets		5615886	1					
ANR	5616075	Identifier	i		5615886	1					
ANR	5616076	CallExpression	get_be64 ( pb )		5615886	1					
ANR	5616077	Callee	get_be64		5615886	0					
ANR	5616078	Identifier	get_be64		5615886	0					
ANR	5616079	ArgumentList	pb		5615886	1					
ANR	5616080	Argument	pb		5615886	0					
ANR	5616081	Identifier	pb		5615886	0					
ANR	5616082	ElseStatement	else		5615886	0					
ANR	5616083	ReturnStatement	return - 1 ;	53:8:820:829	5615886	0	True				
ANR	5616084	UnaryOperationExpression	- 1		5615886	0					
ANR	5616085	UnaryOperator	-		5615886	0					
ANR	5616086	PrimaryExpression	1		5615886	1					
ANR	5616087	ReturnStatement	return 0 ;	57:4:838:846	5615886	11	True				
ANR	5616088	PrimaryExpression	0		5615886	0					
ANR	5616089	ReturnType	static int		5615886	1					
ANR	5616090	Identifier	mov_read_stco		5615886	2					
ANR	5616091	ParameterList	"MOVContext * c , ByteIOContext * pb , MOVAtom atom"		5615886	3					
ANR	5616092	Parameter	MOVContext * c	1:25:25:37	5615886	0	True				
ANR	5616093	ParameterType	MOVContext *		5615886	0					
ANR	5616094	Identifier	c		5615886	1					
ANR	5616095	Parameter	ByteIOContext * pb	1:40:40:56	5615886	1	True				
ANR	5616096	ParameterType	ByteIOContext *		5615886	0					
ANR	5616097	Identifier	pb		5615886	1					
ANR	5616098	Parameter	MOVAtom atom	1:59:59:70	5615886	2	True				
ANR	5616099	ParameterType	MOVAtom		5615886	0					
ANR	5616100	Identifier	atom		5615886	1					
ANR	5616101	CFGEntryNode	ENTRY		5615886		True				
ANR	5616102	CFGExitNode	EXIT		5615886		True				
ANR	5616103	Symbol	av_malloc		5615886						
ANR	5616104	Symbol	ENOMEM		5615886						
ANR	5616105	Symbol	sc -> chunk_count		5615886						
ANR	5616106	Symbol	* c -> fc		5615886						
ANR	5616107	Symbol	get_be64		5615886						
ANR	5616108	Symbol	* st		5615886						
ANR	5616109	Symbol	c -> fc -> nb_streams		5615886						
ANR	5616110	Symbol	* c -> fc -> nb_streams		5615886						
ANR	5616111	Symbol	st -> priv_data		5615886						
ANR	5616112	Symbol	UINT_MAX		5615886						
ANR	5616113	Symbol	sc		5615886						
ANR	5616114	Symbol	* sc		5615886						
ANR	5616115	Symbol	* sc -> chunk_offsets		5615886						
ANR	5616116	Symbol	* c -> fc -> streams		5615886						
ANR	5616117	Symbol	atom . type		5615886						
ANR	5616118	Symbol	st		5615886						
ANR	5616119	Symbol	get_be32		5615886						
ANR	5616120	Symbol	c		5615886						
ANR	5616121	Symbol	* * c		5615886						
ANR	5616122	Symbol	i		5615886						
ANR	5616123	Symbol	* * c -> fc		5615886						
ANR	5616124	Symbol	* c		5615886						
ANR	5616125	Symbol	c -> fc -> streams		5615886						
ANR	5616126	Symbol	pb		5615886						
ANR	5616127	Symbol	entries		5615886						
ANR	5616128	Symbol	* i		5615886						
ANR	5616129	Symbol	sc -> chunk_offsets		5615886						
ANR	5616130	Symbol	c -> fc		5615886						
ANR	5616131	Symbol	AVERROR		5615886						
ANR	5616132	Symbol	atom		5615886						
ANR	5616133	Symbol	MKTAG		5615886						
ANR	5616134	Symbol	* * * c		5615886						
ANR	5616135	Symbol	* * sc		5615886						
