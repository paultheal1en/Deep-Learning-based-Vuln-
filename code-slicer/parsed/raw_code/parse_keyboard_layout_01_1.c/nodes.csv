command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6330350	File	/home/p4ultr4n/workplace/ReVeal/raw_code/parse_keyboard_layout_01_1.c								
ANR	6330351	Function	parse_keyboard_layout	1:0:0:2120							
ANR	6330352	FunctionDef	"parse_keyboard_layout (const name2keysym_t * table , const char * language , kbd_layout_t * k)"		6330351	0					
ANR	6330353	CompoundStatement		7:0:130:2120	6330351	0					
ANR	6330354	IdentifierDeclStatement	FILE * f ;	9:4:137:144	6330351	0	True				
ANR	6330355	IdentifierDecl	* f		6330351	0					
ANR	6330356	IdentifierDeclType	FILE *		6330351	0					
ANR	6330357	Identifier	f		6330351	1					
ANR	6330358	IdentifierDeclStatement	char * filename ;	11:4:151:166	6330351	1	True				
ANR	6330359	IdentifierDecl	* filename		6330351	0					
ANR	6330360	IdentifierDeclType	char *		6330351	0					
ANR	6330361	Identifier	filename		6330351	1					
ANR	6330362	IdentifierDeclStatement	char line [ 1024 ] ;	13:4:173:188	6330351	2	True				
ANR	6330363	IdentifierDecl	line [ 1024 ]		6330351	0					
ANR	6330364	IdentifierDeclType	char [ 1024 ]		6330351	0					
ANR	6330365	Identifier	line		6330351	1					
ANR	6330366	PrimaryExpression	1024		6330351	2					
ANR	6330367	IdentifierDeclStatement	int len ;	15:4:195:202	6330351	3	True				
ANR	6330368	IdentifierDecl	len		6330351	0					
ANR	6330369	IdentifierDeclType	int		6330351	0					
ANR	6330370	Identifier	len		6330351	1					
ANR	6330371	ExpressionStatement	"filename = qemu_find_file ( QEMU_FILE_TYPE_KEYMAP , language )"	19:4:211:269	6330351	4	True				
ANR	6330372	AssignmentExpression	"filename = qemu_find_file ( QEMU_FILE_TYPE_KEYMAP , language )"		6330351	0		=			
ANR	6330373	Identifier	filename		6330351	0					
ANR	6330374	CallExpression	"qemu_find_file ( QEMU_FILE_TYPE_KEYMAP , language )"		6330351	1					
ANR	6330375	Callee	qemu_find_file		6330351	0					
ANR	6330376	Identifier	qemu_find_file		6330351	0					
ANR	6330377	ArgumentList	QEMU_FILE_TYPE_KEYMAP		6330351	1					
ANR	6330378	Argument	QEMU_FILE_TYPE_KEYMAP		6330351	0					
ANR	6330379	Identifier	QEMU_FILE_TYPE_KEYMAP		6330351	0					
ANR	6330380	Argument	language		6330351	1					
ANR	6330381	Identifier	language		6330351	0					
ANR	6330382	IfStatement	if ( ! k )		6330351	5					
ANR	6330383	Condition	! k	23:8:282:283	6330351	0	True				
ANR	6330384	UnaryOperationExpression	! k		6330351	0					
ANR	6330385	UnaryOperator	!		6330351	0					
ANR	6330386	Identifier	k		6330351	1					
ANR	6330387	ExpressionStatement	k = g_malloc0 ( sizeof ( kbd_layout_t ) )	25:1:288:323	6330351	1	True				
ANR	6330388	AssignmentExpression	k = g_malloc0 ( sizeof ( kbd_layout_t ) )		6330351	0		=			
ANR	6330389	Identifier	k		6330351	0					
ANR	6330390	CallExpression	g_malloc0 ( sizeof ( kbd_layout_t ) )		6330351	1					
ANR	6330391	Callee	g_malloc0		6330351	0					
ANR	6330392	Identifier	g_malloc0		6330351	0					
ANR	6330393	ArgumentList	sizeof ( kbd_layout_t )		6330351	1					
ANR	6330394	Argument	sizeof ( kbd_layout_t )		6330351	0					
ANR	6330395	SizeofExpression	sizeof ( kbd_layout_t )		6330351	0					
ANR	6330396	Sizeof	sizeof		6330351	0					
ANR	6330397	SizeofOperand	kbd_layout_t		6330351	1					
ANR	6330398	IfStatement	"if ( ! ( filename && ( f = fopen ( filename , ""r"" ) ) ) )"		6330351	6					
ANR	6330399	Condition	"! ( filename && ( f = fopen ( filename , ""r"" ) ) )"	27:8:334:374	6330351	0	True				
ANR	6330400	UnaryOperationExpression	"! ( filename && ( f = fopen ( filename , ""r"" ) ) )"		6330351	0					
ANR	6330401	UnaryOperator	!		6330351	0					
ANR	6330402	AndExpression	"filename && ( f = fopen ( filename , ""r"" ) )"		6330351	1		&&			
ANR	6330403	Identifier	filename		6330351	0					
ANR	6330404	AssignmentExpression	"f = fopen ( filename , ""r"" )"		6330351	1		=			
ANR	6330405	Identifier	f		6330351	0					
ANR	6330406	CallExpression	"fopen ( filename , ""r"" )"		6330351	1					
ANR	6330407	Callee	fopen		6330351	0					
ANR	6330408	Identifier	fopen		6330351	0					
ANR	6330409	ArgumentList	filename		6330351	1					
ANR	6330410	Argument	filename		6330351	0					
ANR	6330411	Identifier	filename		6330351	0					
ANR	6330412	Argument	"""r"""		6330351	1					
ANR	6330413	PrimaryExpression	"""r"""		6330351	0					
ANR	6330414	CompoundStatement		21:51:246:246	6330351	1					
ANR	6330415	ExpressionStatement	"fprintf ( stderr , ""Could not read keymap file: '%s'\\n"" , language )"	29:1:381:447	6330351	0	True				
ANR	6330416	CallExpression	"fprintf ( stderr , ""Could not read keymap file: '%s'\\n"" , language )"		6330351	0					
ANR	6330417	Callee	fprintf		6330351	0					
ANR	6330418	Identifier	fprintf		6330351	0					
ANR	6330419	ArgumentList	stderr		6330351	1					
ANR	6330420	Argument	stderr		6330351	0					
ANR	6330421	Identifier	stderr		6330351	0					
ANR	6330422	Argument	"""Could not read keymap file: '%s'\\n"""		6330351	1					
ANR	6330423	PrimaryExpression	"""Could not read keymap file: '%s'\\n"""		6330351	0					
ANR	6330424	Argument	language		6330351	2					
ANR	6330425	Identifier	language		6330351	0					
ANR	6330426	ReturnStatement	return NULL ;	33:1:451:462	6330351	1	True				
ANR	6330427	Identifier	NULL		6330351	0					
ANR	6330428	ExpressionStatement	g_free ( filename )	37:4:476:492	6330351	7	True				
ANR	6330429	CallExpression	g_free ( filename )		6330351	0					
ANR	6330430	Callee	g_free		6330351	0					
ANR	6330431	Identifier	g_free		6330351	0					
ANR	6330432	ArgumentList	filename		6330351	1					
ANR	6330433	Argument	filename		6330351	0					
ANR	6330434	Identifier	filename		6330351	0					
ANR	6330435	ForStatement	for ( ; ; )		6330351	8					
ANR	6330436	CompoundStatement		33:12:376:376	6330351	0					
ANR	6330437	IfStatement	"if ( fgets ( line , 1024 , f ) == NULL )"		6330351	0					
ANR	6330438	Condition	"fgets ( line , 1024 , f ) == NULL"	41:5:515:542	6330351	0	True				
ANR	6330439	EqualityExpression	"fgets ( line , 1024 , f ) == NULL"		6330351	0		==			
ANR	6330440	CallExpression	"fgets ( line , 1024 , f )"		6330351	0					
ANR	6330441	Callee	fgets		6330351	0					
ANR	6330442	Identifier	fgets		6330351	0					
ANR	6330443	ArgumentList	line		6330351	1					
ANR	6330444	Argument	line		6330351	0					
ANR	6330445	Identifier	line		6330351	0					
ANR	6330446	Argument	1024		6330351	1					
ANR	6330447	PrimaryExpression	1024		6330351	0					
ANR	6330448	Argument	f		6330351	2					
ANR	6330449	Identifier	f		6330351	0					
ANR	6330450	Identifier	NULL		6330351	1					
ANR	6330451	BreakStatement	break ;	43:12:558:563	6330351	1	True				
ANR	6330452	ExpressionStatement	len = strlen ( line )	45:8:574:592	6330351	1	True				
ANR	6330453	AssignmentExpression	len = strlen ( line )		6330351	0		=			
ANR	6330454	Identifier	len		6330351	0					
ANR	6330455	CallExpression	strlen ( line )		6330351	1					
ANR	6330456	Callee	strlen		6330351	0					
ANR	6330457	Identifier	strlen		6330351	0					
ANR	6330458	ArgumentList	line		6330351	1					
ANR	6330459	Argument	line		6330351	0					
ANR	6330460	Identifier	line		6330351	0					
ANR	6330461	IfStatement	if ( len > 0 && line [ len - 1 ] == '\\n' )		6330351	2					
ANR	6330462	Condition	len > 0 && line [ len - 1 ] == '\\n'	47:12:607:638	6330351	0	True				
ANR	6330463	AndExpression	len > 0 && line [ len - 1 ] == '\\n'		6330351	0		&&			
ANR	6330464	RelationalExpression	len > 0		6330351	0		>			
ANR	6330465	Identifier	len		6330351	0					
ANR	6330466	PrimaryExpression	0		6330351	1					
ANR	6330467	EqualityExpression	line [ len - 1 ] == '\\n'		6330351	1		==			
ANR	6330468	ArrayIndexing	line [ len - 1 ]		6330351	0					
ANR	6330469	Identifier	line		6330351	0					
ANR	6330470	AdditiveExpression	len - 1		6330351	1		-			
ANR	6330471	Identifier	len		6330351	0					
ANR	6330472	PrimaryExpression	1		6330351	1					
ANR	6330473	PrimaryExpression	'\\n'		6330351	1					
ANR	6330474	ExpressionStatement	line [ len - 1 ] = '\\0'	49:12:654:674	6330351	1	True				
ANR	6330475	AssignmentExpression	line [ len - 1 ] = '\\0'		6330351	0		=			
ANR	6330476	ArrayIndexing	line [ len - 1 ]		6330351	0					
ANR	6330477	Identifier	line		6330351	0					
ANR	6330478	AdditiveExpression	len - 1		6330351	1		-			
ANR	6330479	Identifier	len		6330351	0					
ANR	6330480	PrimaryExpression	1		6330351	1					
ANR	6330481	PrimaryExpression	'\\0'		6330351	1					
ANR	6330482	IfStatement	if ( line [ 0 ] == '#' )		6330351	3					
ANR	6330483	Condition	line [ 0 ] == '#'	51:12:689:702	6330351	0	True				
ANR	6330484	EqualityExpression	line [ 0 ] == '#'		6330351	0		==			
ANR	6330485	ArrayIndexing	line [ 0 ]		6330351	0					
ANR	6330486	Identifier	line		6330351	0					
ANR	6330487	PrimaryExpression	0		6330351	1					
ANR	6330488	PrimaryExpression	'#'		6330351	1					
ANR	6330489	ContinueStatement	continue ;	53:5:711:719	6330351	1	True				
ANR	6330490	IfStatement	"if ( ! strncmp ( line , ""map "" , 4 ) )"		6330351	4					
ANR	6330491	Condition	"! strncmp ( line , ""map "" , 4 )"	55:5:727:751	6330351	0	True				
ANR	6330492	UnaryOperationExpression	"! strncmp ( line , ""map "" , 4 )"		6330351	0					
ANR	6330493	UnaryOperator	!		6330351	0					
ANR	6330494	CallExpression	"strncmp ( line , ""map "" , 4 )"		6330351	1					
ANR	6330495	Callee	strncmp		6330351	0					
ANR	6330496	Identifier	strncmp		6330351	0					
ANR	6330497	ArgumentList	line		6330351	1					
ANR	6330498	Argument	line		6330351	0					
ANR	6330499	Identifier	line		6330351	0					
ANR	6330500	Argument	"""map """		6330351	1					
ANR	6330501	PrimaryExpression	"""map """		6330351	0					
ANR	6330502	Argument	4		6330351	2					
ANR	6330503	PrimaryExpression	4		6330351	0					
ANR	6330504	ContinueStatement	continue ;	57:5:760:768	6330351	1	True				
ANR	6330505	IfStatement	"if ( ! strncmp ( line , ""include "" , 8 ) )"		6330351	5					
ANR	6330506	Condition	"! strncmp ( line , ""include "" , 8 )"	59:5:776:804	6330351	0	True				
ANR	6330507	UnaryOperationExpression	"! strncmp ( line , ""include "" , 8 )"		6330351	0					
ANR	6330508	UnaryOperator	!		6330351	0					
ANR	6330509	CallExpression	"strncmp ( line , ""include "" , 8 )"		6330351	1					
ANR	6330510	Callee	strncmp		6330351	0					
ANR	6330511	Identifier	strncmp		6330351	0					
ANR	6330512	ArgumentList	line		6330351	1					
ANR	6330513	Argument	line		6330351	0					
ANR	6330514	Identifier	line		6330351	0					
ANR	6330515	Argument	"""include """		6330351	1					
ANR	6330516	PrimaryExpression	"""include """		6330351	0					
ANR	6330517	Argument	8		6330351	2					
ANR	6330518	PrimaryExpression	8		6330351	0					
ANR	6330519	CompoundStatement		53:36:676:676	6330351	1					
ANR	6330520	ExpressionStatement	"parse_keyboard_layout ( table , line + 8 , k )"	61:5:815:856	6330351	0	True				
ANR	6330521	CallExpression	"parse_keyboard_layout ( table , line + 8 , k )"		6330351	0					
ANR	6330522	Callee	parse_keyboard_layout		6330351	0					
ANR	6330523	Identifier	parse_keyboard_layout		6330351	0					
ANR	6330524	ArgumentList	table		6330351	1					
ANR	6330525	Argument	table		6330351	0					
ANR	6330526	Identifier	table		6330351	0					
ANR	6330527	Argument	line + 8		6330351	1					
ANR	6330528	AdditiveExpression	line + 8		6330351	0		+			
ANR	6330529	Identifier	line		6330351	0					
ANR	6330530	PrimaryExpression	8		6330351	1					
ANR	6330531	Argument	k		6330351	2					
ANR	6330532	Identifier	k		6330351	0					
ANR	6330533	ElseStatement	else		6330351	0					
ANR	6330534	CompoundStatement		59:5:751:777	6330351	0					
ANR	6330535	IdentifierDeclStatement	char * end_of_keysym = line ;	65:5:882:908	6330351	0	True				
ANR	6330536	IdentifierDecl	* end_of_keysym = line		6330351	0					
ANR	6330537	IdentifierDeclType	char *		6330351	0					
ANR	6330538	Identifier	end_of_keysym		6330351	1					
ANR	6330539	AssignmentExpression	* end_of_keysym = line		6330351	2		=			
ANR	6330540	Identifier	line		6330351	0					
ANR	6330541	Identifier	line		6330351	1					
ANR	6330542	WhileStatement	while ( * end_of_keysym != 0 && * end_of_keysym != ' ' )		6330351	1					
ANR	6330543	Condition	* end_of_keysym != 0 && * end_of_keysym != ' '	67:12:923:966	6330351	0	True				
ANR	6330544	AndExpression	* end_of_keysym != 0 && * end_of_keysym != ' '		6330351	0		&&			
ANR	6330545	EqualityExpression	* end_of_keysym != 0		6330351	0		!=			
ANR	6330546	UnaryOperationExpression	* end_of_keysym		6330351	0					
ANR	6330547	UnaryOperator	*		6330351	0					
ANR	6330548	Identifier	end_of_keysym		6330351	1					
ANR	6330549	PrimaryExpression	0		6330351	1					
ANR	6330550	EqualityExpression	* end_of_keysym != ' '		6330351	1		!=			
ANR	6330551	UnaryOperationExpression	* end_of_keysym		6330351	0					
ANR	6330552	UnaryOperator	*		6330351	0					
ANR	6330553	Identifier	end_of_keysym		6330351	1					
ANR	6330554	PrimaryExpression	' '		6330351	1					
ANR	6330555	ExpressionStatement	end_of_keysym ++	69:2:972:987	6330351	1	True				
ANR	6330556	PostIncDecOperationExpression	end_of_keysym ++		6330351	0					
ANR	6330557	Identifier	end_of_keysym		6330351	0					
ANR	6330558	IncDec	++		6330351	1					
ANR	6330559	IfStatement	if ( * end_of_keysym )		6330351	2					
ANR	6330560	Condition	* end_of_keysym	71:9:999:1012	6330351	0	True				
ANR	6330561	UnaryOperationExpression	* end_of_keysym		6330351	0					
ANR	6330562	UnaryOperator	*		6330351	0					
ANR	6330563	Identifier	end_of_keysym		6330351	1					
ANR	6330564	CompoundStatement		67:2:889:899	6330351	1					
ANR	6330565	IdentifierDeclStatement	int keysym ;	73:2:1020:1030	6330351	0	True				
ANR	6330566	IdentifierDecl	keysym		6330351	0					
ANR	6330567	IdentifierDeclType	int		6330351	0					
ANR	6330568	Identifier	keysym		6330351	1					
ANR	6330569	ExpressionStatement	* end_of_keysym = 0	75:2:1035:1053	6330351	1	True				
ANR	6330570	AssignmentExpression	* end_of_keysym = 0		6330351	0		=			
ANR	6330571	UnaryOperationExpression	* end_of_keysym		6330351	0					
ANR	6330572	UnaryOperator	*		6330351	0					
ANR	6330573	Identifier	end_of_keysym		6330351	1					
ANR	6330574	PrimaryExpression	0		6330351	1					
ANR	6330575	ExpressionStatement	"keysym = get_keysym ( table , line )"	77:2:1058:1090	6330351	2	True				
ANR	6330576	AssignmentExpression	"keysym = get_keysym ( table , line )"		6330351	0		=			
ANR	6330577	Identifier	keysym		6330351	0					
ANR	6330578	CallExpression	"get_keysym ( table , line )"		6330351	1					
ANR	6330579	Callee	get_keysym		6330351	0					
ANR	6330580	Identifier	get_keysym		6330351	0					
ANR	6330581	ArgumentList	table		6330351	1					
ANR	6330582	Argument	table		6330351	0					
ANR	6330583	Identifier	table		6330351	0					
ANR	6330584	Argument	line		6330351	1					
ANR	6330585	Identifier	line		6330351	0					
ANR	6330586	IfStatement	if ( keysym == 0 )		6330351	3					
ANR	6330587	Condition	keysym == 0	79:6:1099:1109	6330351	0	True				
ANR	6330588	EqualityExpression	keysym == 0		6330351	0		==			
ANR	6330589	Identifier	keysym		6330351	0					
ANR	6330590	PrimaryExpression	0		6330351	1					
ANR	6330591	CompoundStatement		73:19:981:981	6330351	1					
ANR	6330592	ElseStatement	else		6330351	0					
ANR	6330593	CompoundStatement		83:6:1151:1188	6330351	0					
ANR	6330594	IdentifierDeclStatement	const char * rest = end_of_keysym + 1 ;	85:6:1217:1253	6330351	0	True				
ANR	6330595	IdentifierDecl	* rest = end_of_keysym + 1		6330351	0					
ANR	6330596	IdentifierDeclType	const char *		6330351	0					
ANR	6330597	Identifier	rest		6330351	1					
ANR	6330598	AssignmentExpression	* rest = end_of_keysym + 1		6330351	2		=			
ANR	6330599	Identifier	rest		6330351	0					
ANR	6330600	AdditiveExpression	end_of_keysym + 1		6330351	1		+			
ANR	6330601	Identifier	end_of_keysym		6330351	0					
ANR	6330602	PrimaryExpression	1		6330351	1					
ANR	6330603	IdentifierDeclStatement	char * rest2 ;	87:6:1262:1273	6330351	1	True				
ANR	6330604	IdentifierDecl	* rest2		6330351	0					
ANR	6330605	IdentifierDeclType	char *		6330351	0					
ANR	6330606	Identifier	rest2		6330351	1					
ANR	6330607	IdentifierDeclStatement	"int keycode = strtol ( rest , & rest2 , 0 ) ;"	89:6:1282:1319	6330351	2	True				
ANR	6330608	IdentifierDecl	"keycode = strtol ( rest , & rest2 , 0 )"		6330351	0					
ANR	6330609	IdentifierDeclType	int		6330351	0					
ANR	6330610	Identifier	keycode		6330351	1					
ANR	6330611	AssignmentExpression	"keycode = strtol ( rest , & rest2 , 0 )"		6330351	2		=			
ANR	6330612	Identifier	keycode		6330351	0					
ANR	6330613	CallExpression	"strtol ( rest , & rest2 , 0 )"		6330351	1					
ANR	6330614	Callee	strtol		6330351	0					
ANR	6330615	Identifier	strtol		6330351	0					
ANR	6330616	ArgumentList	rest		6330351	1					
ANR	6330617	Argument	rest		6330351	0					
ANR	6330618	Identifier	rest		6330351	0					
ANR	6330619	Argument	& rest2		6330351	1					
ANR	6330620	UnaryOperationExpression	& rest2		6330351	0					
ANR	6330621	UnaryOperator	&		6330351	0					
ANR	6330622	Identifier	rest2		6330351	1					
ANR	6330623	Argument	0		6330351	2					
ANR	6330624	PrimaryExpression	0		6330351	0					
ANR	6330625	IfStatement	"if ( rest && strstr ( rest , ""numlock"" ) )"		6330351	3					
ANR	6330626	Condition	"rest && strstr ( rest , ""numlock"" )"	93:10:1334:1364	6330351	0	True				
ANR	6330627	AndExpression	"rest && strstr ( rest , ""numlock"" )"		6330351	0		&&			
ANR	6330628	Identifier	rest		6330351	0					
ANR	6330629	CallExpression	"strstr ( rest , ""numlock"" )"		6330351	1					
ANR	6330630	Callee	strstr		6330351	0					
ANR	6330631	Identifier	strstr		6330351	0					
ANR	6330632	ArgumentList	rest		6330351	1					
ANR	6330633	Argument	rest		6330351	0					
ANR	6330634	Identifier	rest		6330351	0					
ANR	6330635	Argument	"""numlock"""		6330351	1					
ANR	6330636	PrimaryExpression	"""numlock"""		6330351	0					
ANR	6330637	CompoundStatement		87:43:1236:1236	6330351	1					
ANR	6330638	ExpressionStatement	"add_to_key_range ( & k -> keypad_range , keycode )"	95:3:1373:1416	6330351	0	True				
ANR	6330639	CallExpression	"add_to_key_range ( & k -> keypad_range , keycode )"		6330351	0					
ANR	6330640	Callee	add_to_key_range		6330351	0					
ANR	6330641	Identifier	add_to_key_range		6330351	0					
ANR	6330642	ArgumentList	& k -> keypad_range		6330351	1					
ANR	6330643	Argument	& k -> keypad_range		6330351	0					
ANR	6330644	UnaryOperationExpression	& k -> keypad_range		6330351	0					
ANR	6330645	UnaryOperator	&		6330351	0					
ANR	6330646	PtrMemberAccess	k -> keypad_range		6330351	1					
ANR	6330647	Identifier	k		6330351	0					
ANR	6330648	Identifier	keypad_range		6330351	1					
ANR	6330649	Argument	keycode		6330351	1					
ANR	6330650	Identifier	keycode		6330351	0					
ANR	6330651	ExpressionStatement	"add_to_key_range ( & k -> numlock_range , keysym )"	97:3:1422:1465	6330351	1	True				
ANR	6330652	CallExpression	"add_to_key_range ( & k -> numlock_range , keysym )"		6330351	0					
ANR	6330653	Callee	add_to_key_range		6330351	0					
ANR	6330654	Identifier	add_to_key_range		6330351	0					
ANR	6330655	ArgumentList	& k -> numlock_range		6330351	1					
ANR	6330656	Argument	& k -> numlock_range		6330351	0					
ANR	6330657	UnaryOperationExpression	& k -> numlock_range		6330351	0					
ANR	6330658	UnaryOperator	&		6330351	0					
ANR	6330659	PtrMemberAccess	k -> numlock_range		6330351	1					
ANR	6330660	Identifier	k		6330351	0					
ANR	6330661	Identifier	numlock_range		6330351	1					
ANR	6330662	Argument	keysym		6330351	1					
ANR	6330663	Identifier	keysym		6330351	0					
ANR	6330664	IfStatement	"if ( rest && strstr ( rest , ""shift"" ) )"		6330351	4					
ANR	6330665	Condition	"rest && strstr ( rest , ""shift"" )"	105:10:1564:1592	6330351	0	True				
ANR	6330666	AndExpression	"rest && strstr ( rest , ""shift"" )"		6330351	0		&&			
ANR	6330667	Identifier	rest		6330351	0					
ANR	6330668	CallExpression	"strstr ( rest , ""shift"" )"		6330351	1					
ANR	6330669	Callee	strstr		6330351	0					
ANR	6330670	Identifier	strstr		6330351	0					
ANR	6330671	ArgumentList	rest		6330351	1					
ANR	6330672	Argument	rest		6330351	0					
ANR	6330673	Identifier	rest		6330351	0					
ANR	6330674	Argument	"""shift"""		6330351	1					
ANR	6330675	PrimaryExpression	"""shift"""		6330351	0					
ANR	6330676	ExpressionStatement	keycode |= SCANCODE_SHIFT	107:3:1599:1624	6330351	1	True				
ANR	6330677	AssignmentExpression	keycode |= SCANCODE_SHIFT		6330351	0		|=			
ANR	6330678	Identifier	keycode		6330351	0					
ANR	6330679	Identifier	SCANCODE_SHIFT		6330351	1					
ANR	6330680	IfStatement	"if ( rest && strstr ( rest , ""altgr"" ) )"		6330351	5					
ANR	6330681	Condition	"rest && strstr ( rest , ""altgr"" )"	109:10:1637:1665	6330351	0	True				
ANR	6330682	AndExpression	"rest && strstr ( rest , ""altgr"" )"		6330351	0		&&			
ANR	6330683	Identifier	rest		6330351	0					
ANR	6330684	CallExpression	"strstr ( rest , ""altgr"" )"		6330351	1					
ANR	6330685	Callee	strstr		6330351	0					
ANR	6330686	Identifier	strstr		6330351	0					
ANR	6330687	ArgumentList	rest		6330351	1					
ANR	6330688	Argument	rest		6330351	0					
ANR	6330689	Identifier	rest		6330351	0					
ANR	6330690	Argument	"""altgr"""		6330351	1					
ANR	6330691	PrimaryExpression	"""altgr"""		6330351	0					
ANR	6330692	ExpressionStatement	keycode |= SCANCODE_ALTGR	111:3:1672:1697	6330351	1	True				
ANR	6330693	AssignmentExpression	keycode |= SCANCODE_ALTGR		6330351	0		|=			
ANR	6330694	Identifier	keycode		6330351	0					
ANR	6330695	Identifier	SCANCODE_ALTGR		6330351	1					
ANR	6330696	IfStatement	"if ( rest && strstr ( rest , ""ctrl"" ) )"		6330351	6					
ANR	6330697	Condition	"rest && strstr ( rest , ""ctrl"" )"	113:10:1710:1737	6330351	0	True				
ANR	6330698	AndExpression	"rest && strstr ( rest , ""ctrl"" )"		6330351	0		&&			
ANR	6330699	Identifier	rest		6330351	0					
ANR	6330700	CallExpression	"strstr ( rest , ""ctrl"" )"		6330351	1					
ANR	6330701	Callee	strstr		6330351	0					
ANR	6330702	Identifier	strstr		6330351	0					
ANR	6330703	ArgumentList	rest		6330351	1					
ANR	6330704	Argument	rest		6330351	0					
ANR	6330705	Identifier	rest		6330351	0					
ANR	6330706	Argument	"""ctrl"""		6330351	1					
ANR	6330707	PrimaryExpression	"""ctrl"""		6330351	0					
ANR	6330708	ExpressionStatement	keycode |= SCANCODE_CTRL	115:3:1744:1768	6330351	1	True				
ANR	6330709	AssignmentExpression	keycode |= SCANCODE_CTRL		6330351	0		|=			
ANR	6330710	Identifier	keycode		6330351	0					
ANR	6330711	Identifier	SCANCODE_CTRL		6330351	1					
ANR	6330712	ExpressionStatement	"add_keysym ( line , keysym , keycode , k )"	119:6:1779:1815	6330351	7	True				
ANR	6330713	CallExpression	"add_keysym ( line , keysym , keycode , k )"		6330351	0					
ANR	6330714	Callee	add_keysym		6330351	0					
ANR	6330715	Identifier	add_keysym		6330351	0					
ANR	6330716	ArgumentList	line		6330351	1					
ANR	6330717	Argument	line		6330351	0					
ANR	6330718	Identifier	line		6330351	0					
ANR	6330719	Argument	keysym		6330351	1					
ANR	6330720	Identifier	keysym		6330351	0					
ANR	6330721	Argument	keycode		6330351	2					
ANR	6330722	Identifier	keycode		6330351	0					
ANR	6330723	Argument	k		6330351	3					
ANR	6330724	Identifier	k		6330351	0					
ANR	6330725	IfStatement	"if ( rest && strstr ( rest , ""addupper"" ) )"		6330351	8					
ANR	6330726	Condition	"rest && strstr ( rest , ""addupper"" )"	123:10:1830:1861	6330351	0	True				
ANR	6330727	AndExpression	"rest && strstr ( rest , ""addupper"" )"		6330351	0		&&			
ANR	6330728	Identifier	rest		6330351	0					
ANR	6330729	CallExpression	"strstr ( rest , ""addupper"" )"		6330351	1					
ANR	6330730	Callee	strstr		6330351	0					
ANR	6330731	Identifier	strstr		6330351	0					
ANR	6330732	ArgumentList	rest		6330351	1					
ANR	6330733	Argument	rest		6330351	0					
ANR	6330734	Identifier	rest		6330351	0					
ANR	6330735	Argument	"""addupper"""		6330351	1					
ANR	6330736	PrimaryExpression	"""addupper"""		6330351	0					
ANR	6330737	CompoundStatement		119:3:1739:1746	6330351	1					
ANR	6330738	IdentifierDeclStatement	char * c ;	125:3:1870:1877	6330351	0	True				
ANR	6330739	IdentifierDecl	* c		6330351	0					
ANR	6330740	IdentifierDeclType	char *		6330351	0					
ANR	6330741	Identifier	c		6330351	1					
ANR	6330742	ForStatement	for ( c = line ; * c ; c ++ )		6330351	1					
ANR	6330743	ForInit	c = line ;	127:8:1888:1896	6330351	0	True				
ANR	6330744	AssignmentExpression	c = line		6330351	0		=			
ANR	6330745	Identifier	c		6330351	0					
ANR	6330746	Identifier	line		6330351	1					
ANR	6330747	Condition	* c	127:18:1898:1899	6330351	1	True				
ANR	6330748	UnaryOperationExpression	* c		6330351	0					
ANR	6330749	UnaryOperator	*		6330351	0					
ANR	6330750	Identifier	c		6330351	1					
ANR	6330751	PostIncDecOperationExpression	c ++	127:22:1902:1904	6330351	2	True				
ANR	6330752	Identifier	c		6330351	0					
ANR	6330753	IncDec	++		6330351	1					
ANR	6330754	ExpressionStatement	* c = qemu_toupper ( * c )	129:7:1915:1936	6330351	3	True				
ANR	6330755	AssignmentExpression	* c = qemu_toupper ( * c )		6330351	0		=			
ANR	6330756	UnaryOperationExpression	* c		6330351	0					
ANR	6330757	UnaryOperator	*		6330351	0					
ANR	6330758	Identifier	c		6330351	1					
ANR	6330759	CallExpression	qemu_toupper ( * c )		6330351	1					
ANR	6330760	Callee	qemu_toupper		6330351	0					
ANR	6330761	Identifier	qemu_toupper		6330351	0					
ANR	6330762	ArgumentList	* c		6330351	1					
ANR	6330763	Argument	* c		6330351	0					
ANR	6330764	UnaryOperationExpression	* c		6330351	0					
ANR	6330765	UnaryOperator	*		6330351	0					
ANR	6330766	Identifier	c		6330351	1					
ANR	6330767	ExpressionStatement	"keysym = get_keysym ( table , line )"	131:3:1942:1974	6330351	2	True				
ANR	6330768	AssignmentExpression	"keysym = get_keysym ( table , line )"		6330351	0		=			
ANR	6330769	Identifier	keysym		6330351	0					
ANR	6330770	CallExpression	"get_keysym ( table , line )"		6330351	1					
ANR	6330771	Callee	get_keysym		6330351	0					
ANR	6330772	Identifier	get_keysym		6330351	0					
ANR	6330773	ArgumentList	table		6330351	1					
ANR	6330774	Argument	table		6330351	0					
ANR	6330775	Identifier	table		6330351	0					
ANR	6330776	Argument	line		6330351	1					
ANR	6330777	Identifier	line		6330351	0					
ANR	6330778	IfStatement	if ( keysym )		6330351	3					
ANR	6330779	Condition	keysym	133:7:1984:1989	6330351	0	True				
ANR	6330780	Identifier	keysym		6330351	0					
ANR	6330781	ExpressionStatement	"add_keysym ( line , keysym , keycode | SCANCODE_SHIFT , k )"	135:7:2000:2053	6330351	1	True				
ANR	6330782	CallExpression	"add_keysym ( line , keysym , keycode | SCANCODE_SHIFT , k )"		6330351	0					
ANR	6330783	Callee	add_keysym		6330351	0					
ANR	6330784	Identifier	add_keysym		6330351	0					
ANR	6330785	ArgumentList	line		6330351	1					
ANR	6330786	Argument	line		6330351	0					
ANR	6330787	Identifier	line		6330351	0					
ANR	6330788	Argument	keysym		6330351	1					
ANR	6330789	Identifier	keysym		6330351	0					
ANR	6330790	Argument	keycode | SCANCODE_SHIFT		6330351	2					
ANR	6330791	InclusiveOrExpression	keycode | SCANCODE_SHIFT		6330351	0		|			
ANR	6330792	Identifier	keycode		6330351	0					
ANR	6330793	Identifier	SCANCODE_SHIFT		6330351	1					
ANR	6330794	Argument	k		6330351	3					
ANR	6330795	Identifier	k		6330351	0					
ANR	6330796	ExpressionStatement	fclose ( f )	147:4:2093:2102	6330351	9	True				
ANR	6330797	CallExpression	fclose ( f )		6330351	0					
ANR	6330798	Callee	fclose		6330351	0					
ANR	6330799	Identifier	fclose		6330351	0					
ANR	6330800	ArgumentList	f		6330351	1					
ANR	6330801	Argument	f		6330351	0					
ANR	6330802	Identifier	f		6330351	0					
ANR	6330803	ReturnStatement	return k ;	149:4:2109:2117	6330351	10	True				
ANR	6330804	Identifier	k		6330351	0					
ANR	6330805	ReturnType	static kbd_layout_t *		6330351	1					
ANR	6330806	Identifier	parse_keyboard_layout		6330351	2					
ANR	6330807	ParameterList	"const name2keysym_t * table , const char * language , kbd_layout_t * k"		6330351	3					
ANR	6330808	Parameter	const name2keysym_t * table	1:43:43:68	6330351	0	True				
ANR	6330809	ParameterType	const name2keysym_t *		6330351	0					
ANR	6330810	Identifier	table		6330351	1					
ANR	6330811	Parameter	const char * language	3:8:80:99	6330351	1	True				
ANR	6330812	ParameterType	const char *		6330351	0					
ANR	6330813	Identifier	language		6330351	1					
ANR	6330814	Parameter	kbd_layout_t * k	5:8:111:126	6330351	2	True				
ANR	6330815	ParameterType	kbd_layout_t *		6330351	0					
ANR	6330816	Identifier	k		6330351	1					
ANR	6330817	CFGEntryNode	ENTRY		6330351		True				
ANR	6330818	CFGExitNode	EXIT		6330351		True				
ANR	6330819	InfiniteForNode	true		6330351		True				
ANR	6330820	Symbol	end_of_keysym		6330351						
ANR	6330821	Symbol	line		6330351						
ANR	6330822	Symbol	language		6330351						
ANR	6330823	Symbol	* line		6330351						
ANR	6330824	Symbol	SCANCODE_SHIFT		6330351						
ANR	6330825	Symbol	fgets		6330351						
ANR	6330826	Symbol	strlen		6330351						
ANR	6330827	Symbol	strncmp		6330351						
ANR	6330828	Symbol	len		6330351						
ANR	6330829	Symbol	strtol		6330351						
ANR	6330830	Symbol	keysym		6330351						
ANR	6330831	Symbol	& rest2		6330351						
ANR	6330832	Symbol	SCANCODE_ALTGR		6330351						
ANR	6330833	Symbol	table		6330351						
ANR	6330834	Symbol	* end_of_keysym		6330351						
ANR	6330835	Symbol	keycode		6330351						
ANR	6330836	Symbol	qemu_find_file		6330351						
ANR	6330837	Symbol	fopen		6330351						
ANR	6330838	Symbol	rest		6330351						
ANR	6330839	Symbol	& k -> numlock_range		6330351						
ANR	6330840	Symbol	NULL		6330351						
ANR	6330841	Symbol	c		6330351						
ANR	6330842	Symbol	f		6330351						
ANR	6330843	Symbol	qemu_toupper		6330351						
ANR	6330844	Symbol	rest2		6330351						
ANR	6330845	Symbol	k		6330351						
ANR	6330846	Symbol	QEMU_FILE_TYPE_KEYMAP		6330351						
ANR	6330847	Symbol	stderr		6330351						
ANR	6330848	Symbol	& k -> keypad_range		6330351						
ANR	6330849	Symbol	* c		6330351						
ANR	6330850	Symbol	SCANCODE_CTRL		6330351						
ANR	6330851	Symbol	get_keysym		6330351						
ANR	6330852	Symbol	filename		6330351						
ANR	6330853	Symbol	strstr		6330351						
ANR	6330854	Symbol	g_malloc0		6330351						
ANR	6330855	Symbol	* len		6330351						
