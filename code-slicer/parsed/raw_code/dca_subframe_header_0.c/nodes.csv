command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1630739	File	/home/p4ultr4n/workplace/ReVeal/raw_code/dca_subframe_header_0.c								
ANR	1630740	Function	dca_subframe_header	1:0:0:10790							
ANR	1630741	FunctionDef	"dca_subframe_header (DCAContext * s , int base_channel , int block_index)"		1630740	0					
ANR	1630742	CompoundStatement		3:0:82:10790	1630740	0					
ANR	1630743	IdentifierDeclStatement	"int j , k ;"	7:4:138:146	1630740	0	True				
ANR	1630744	IdentifierDecl	j		1630740	0					
ANR	1630745	IdentifierDeclType	int		1630740	0					
ANR	1630746	Identifier	j		1630740	1					
ANR	1630747	IdentifierDecl	k		1630740	1					
ANR	1630748	IdentifierDeclType	int		1630740	0					
ANR	1630749	Identifier	k		1630740	1					
ANR	1630750	IfStatement	if ( get_bits_left ( & s -> gb ) < 0 )		1630740	1					
ANR	1630751	Condition	get_bits_left ( & s -> gb ) < 0	11:8:159:183	1630740	0	True				
ANR	1630752	RelationalExpression	get_bits_left ( & s -> gb ) < 0		1630740	0		<			
ANR	1630753	CallExpression	get_bits_left ( & s -> gb )		1630740	0					
ANR	1630754	Callee	get_bits_left		1630740	0					
ANR	1630755	Identifier	get_bits_left		1630740	0					
ANR	1630756	ArgumentList	& s -> gb		1630740	1					
ANR	1630757	Argument	& s -> gb		1630740	0					
ANR	1630758	UnaryOperationExpression	& s -> gb		1630740	0					
ANR	1630759	UnaryOperator	&		1630740	0					
ANR	1630760	PtrMemberAccess	s -> gb		1630740	1					
ANR	1630761	Identifier	s		1630740	0					
ANR	1630762	Identifier	gb		1630740	1					
ANR	1630763	PrimaryExpression	0		1630740	1					
ANR	1630764	ReturnStatement	return AVERROR_INVALIDDATA ;	13:8:195:221	1630740	1	True				
ANR	1630765	Identifier	AVERROR_INVALIDDATA		1630740	0					
ANR	1630766	IfStatement	if ( ! base_channel )		1630740	2					
ANR	1630767	Condition	! base_channel	17:8:234:246	1630740	0	True				
ANR	1630768	UnaryOperationExpression	! base_channel		1630740	0					
ANR	1630769	UnaryOperator	!		1630740	0					
ANR	1630770	Identifier	base_channel		1630740	1					
ANR	1630771	CompoundStatement		15:23:166:166	1630740	1					
ANR	1630772	ExpressionStatement	"s -> subsubframes [ s -> current_subframe ] = get_bits ( & s -> gb , 2 ) + 1"	19:8:260:325	1630740	0	True				
ANR	1630773	AssignmentExpression	"s -> subsubframes [ s -> current_subframe ] = get_bits ( & s -> gb , 2 ) + 1"		1630740	0		=			
ANR	1630774	ArrayIndexing	s -> subsubframes [ s -> current_subframe ]		1630740	0					
ANR	1630775	PtrMemberAccess	s -> subsubframes		1630740	0					
ANR	1630776	Identifier	s		1630740	0					
ANR	1630777	Identifier	subsubframes		1630740	1					
ANR	1630778	PtrMemberAccess	s -> current_subframe		1630740	1					
ANR	1630779	Identifier	s		1630740	0					
ANR	1630780	Identifier	current_subframe		1630740	1					
ANR	1630781	AdditiveExpression	"get_bits ( & s -> gb , 2 ) + 1"		1630740	1		+			
ANR	1630782	CallExpression	"get_bits ( & s -> gb , 2 )"		1630740	0					
ANR	1630783	Callee	get_bits		1630740	0					
ANR	1630784	Identifier	get_bits		1630740	0					
ANR	1630785	ArgumentList	& s -> gb		1630740	1					
ANR	1630786	Argument	& s -> gb		1630740	0					
ANR	1630787	UnaryOperationExpression	& s -> gb		1630740	0					
ANR	1630788	UnaryOperator	&		1630740	0					
ANR	1630789	PtrMemberAccess	s -> gb		1630740	1					
ANR	1630790	Identifier	s		1630740	0					
ANR	1630791	Identifier	gb		1630740	1					
ANR	1630792	Argument	2		1630740	1					
ANR	1630793	PrimaryExpression	2		1630740	0					
ANR	1630794	PrimaryExpression	1		1630740	1					
ANR	1630795	ExpressionStatement	"s -> partial_samples [ s -> current_subframe ] = get_bits ( & s -> gb , 3 )"	21:8:336:397	1630740	1	True				
ANR	1630796	AssignmentExpression	"s -> partial_samples [ s -> current_subframe ] = get_bits ( & s -> gb , 3 )"		1630740	0		=			
ANR	1630797	ArrayIndexing	s -> partial_samples [ s -> current_subframe ]		1630740	0					
ANR	1630798	PtrMemberAccess	s -> partial_samples		1630740	0					
ANR	1630799	Identifier	s		1630740	0					
ANR	1630800	Identifier	partial_samples		1630740	1					
ANR	1630801	PtrMemberAccess	s -> current_subframe		1630740	1					
ANR	1630802	Identifier	s		1630740	0					
ANR	1630803	Identifier	current_subframe		1630740	1					
ANR	1630804	CallExpression	"get_bits ( & s -> gb , 3 )"		1630740	1					
ANR	1630805	Callee	get_bits		1630740	0					
ANR	1630806	Identifier	get_bits		1630740	0					
ANR	1630807	ArgumentList	& s -> gb		1630740	1					
ANR	1630808	Argument	& s -> gb		1630740	0					
ANR	1630809	UnaryOperationExpression	& s -> gb		1630740	0					
ANR	1630810	UnaryOperator	&		1630740	0					
ANR	1630811	PtrMemberAccess	s -> gb		1630740	1					
ANR	1630812	Identifier	s		1630740	0					
ANR	1630813	Identifier	gb		1630740	1					
ANR	1630814	Argument	3		1630740	1					
ANR	1630815	PrimaryExpression	3		1630740	0					
ANR	1630816	ForStatement	for ( j = base_channel ; j < s -> prim_channels ; j ++ )		1630740	3					
ANR	1630817	ForInit	j = base_channel ;	27:9:418:434	1630740	0	True				
ANR	1630818	AssignmentExpression	j = base_channel		1630740	0		=			
ANR	1630819	Identifier	j		1630740	0					
ANR	1630820	Identifier	base_channel		1630740	1					
ANR	1630821	Condition	j < s -> prim_channels	27:27:436:455	1630740	1	True				
ANR	1630822	RelationalExpression	j < s -> prim_channels		1630740	0		<			
ANR	1630823	Identifier	j		1630740	0					
ANR	1630824	PtrMemberAccess	s -> prim_channels		1630740	1					
ANR	1630825	Identifier	s		1630740	0					
ANR	1630826	Identifier	prim_channels		1630740	1					
ANR	1630827	PostIncDecOperationExpression	j ++	27:49:458:460	1630740	2	True				
ANR	1630828	Identifier	j		1630740	0					
ANR	1630829	IncDec	++		1630740	1					
ANR	1630830	CompoundStatement		25:54:380:380	1630740	3					
ANR	1630831	ForStatement	for ( k = 0 ; k < s -> subband_activity [ j ] ; k ++ )		1630740	0					
ANR	1630832	ForInit	k = 0 ;	29:13:479:484	1630740	0	True				
ANR	1630833	AssignmentExpression	k = 0		1630740	0		=			
ANR	1630834	Identifier	k		1630740	0					
ANR	1630835	PrimaryExpression	0		1630740	1					
ANR	1630836	Condition	k < s -> subband_activity [ j ]	29:20:486:511	1630740	1	True				
ANR	1630837	RelationalExpression	k < s -> subband_activity [ j ]		1630740	0		<			
ANR	1630838	Identifier	k		1630740	0					
ANR	1630839	ArrayIndexing	s -> subband_activity [ j ]		1630740	1					
ANR	1630840	PtrMemberAccess	s -> subband_activity		1630740	0					
ANR	1630841	Identifier	s		1630740	0					
ANR	1630842	Identifier	subband_activity		1630740	1					
ANR	1630843	Identifier	j		1630740	1					
ANR	1630844	PostIncDecOperationExpression	k ++	29:48:514:516	1630740	2	True				
ANR	1630845	Identifier	k		1630740	0					
ANR	1630846	IncDec	++		1630740	1					
ANR	1630847	ExpressionStatement	"s -> prediction_mode [ j ] [ k ] = get_bits ( & s -> gb , 1 )"	31:12:532:578	1630740	3	True				
ANR	1630848	AssignmentExpression	"s -> prediction_mode [ j ] [ k ] = get_bits ( & s -> gb , 1 )"		1630740	0		=			
ANR	1630849	ArrayIndexing	s -> prediction_mode [ j ] [ k ]		1630740	0					
ANR	1630850	ArrayIndexing	s -> prediction_mode [ j ]		1630740	0					
ANR	1630851	PtrMemberAccess	s -> prediction_mode		1630740	0					
ANR	1630852	Identifier	s		1630740	0					
ANR	1630853	Identifier	prediction_mode		1630740	1					
ANR	1630854	Identifier	j		1630740	1					
ANR	1630855	Identifier	k		1630740	1					
ANR	1630856	CallExpression	"get_bits ( & s -> gb , 1 )"		1630740	1					
ANR	1630857	Callee	get_bits		1630740	0					
ANR	1630858	Identifier	get_bits		1630740	0					
ANR	1630859	ArgumentList	& s -> gb		1630740	1					
ANR	1630860	Argument	& s -> gb		1630740	0					
ANR	1630861	UnaryOperationExpression	& s -> gb		1630740	0					
ANR	1630862	UnaryOperator	&		1630740	0					
ANR	1630863	PtrMemberAccess	s -> gb		1630740	1					
ANR	1630864	Identifier	s		1630740	0					
ANR	1630865	Identifier	gb		1630740	1					
ANR	1630866	Argument	1		1630740	1					
ANR	1630867	PrimaryExpression	1		1630740	0					
ANR	1630868	ForStatement	for ( j = base_channel ; j < s -> prim_channels ; j ++ )		1630740	4					
ANR	1630869	ForInit	j = base_channel ;	39:9:634:650	1630740	0	True				
ANR	1630870	AssignmentExpression	j = base_channel		1630740	0		=			
ANR	1630871	Identifier	j		1630740	0					
ANR	1630872	Identifier	base_channel		1630740	1					
ANR	1630873	Condition	j < s -> prim_channels	39:27:652:671	1630740	1	True				
ANR	1630874	RelationalExpression	j < s -> prim_channels		1630740	0		<			
ANR	1630875	Identifier	j		1630740	0					
ANR	1630876	PtrMemberAccess	s -> prim_channels		1630740	1					
ANR	1630877	Identifier	s		1630740	0					
ANR	1630878	Identifier	prim_channels		1630740	1					
ANR	1630879	PostIncDecOperationExpression	j ++	39:49:674:676	1630740	2	True				
ANR	1630880	Identifier	j		1630740	0					
ANR	1630881	IncDec	++		1630740	1					
ANR	1630882	CompoundStatement		37:54:596:596	1630740	3					
ANR	1630883	ForStatement	for ( k = 0 ; k < s -> subband_activity [ j ] ; k ++ )		1630740	0					
ANR	1630884	ForInit	k = 0 ;	41:13:695:700	1630740	0	True				
ANR	1630885	AssignmentExpression	k = 0		1630740	0		=			
ANR	1630886	Identifier	k		1630740	0					
ANR	1630887	PrimaryExpression	0		1630740	1					
ANR	1630888	Condition	k < s -> subband_activity [ j ]	41:20:702:727	1630740	1	True				
ANR	1630889	RelationalExpression	k < s -> subband_activity [ j ]		1630740	0		<			
ANR	1630890	Identifier	k		1630740	0					
ANR	1630891	ArrayIndexing	s -> subband_activity [ j ]		1630740	1					
ANR	1630892	PtrMemberAccess	s -> subband_activity		1630740	0					
ANR	1630893	Identifier	s		1630740	0					
ANR	1630894	Identifier	subband_activity		1630740	1					
ANR	1630895	Identifier	j		1630740	1					
ANR	1630896	PostIncDecOperationExpression	k ++	41:48:730:732	1630740	2	True				
ANR	1630897	Identifier	k		1630740	0					
ANR	1630898	IncDec	++		1630740	1					
ANR	1630899	CompoundStatement		39:53:652:652	1630740	3					
ANR	1630900	IfStatement	if ( s -> prediction_mode [ j ] [ k ] > 0 )		1630740	0					
ANR	1630901	Condition	s -> prediction_mode [ j ] [ k ] > 0	43:16:754:781	1630740	0	True				
ANR	1630902	RelationalExpression	s -> prediction_mode [ j ] [ k ] > 0		1630740	0		>			
ANR	1630903	ArrayIndexing	s -> prediction_mode [ j ] [ k ]		1630740	0					
ANR	1630904	ArrayIndexing	s -> prediction_mode [ j ]		1630740	0					
ANR	1630905	PtrMemberAccess	s -> prediction_mode		1630740	0					
ANR	1630906	Identifier	s		1630740	0					
ANR	1630907	Identifier	prediction_mode		1630740	1					
ANR	1630908	Identifier	j		1630740	1					
ANR	1630909	Identifier	k		1630740	1					
ANR	1630910	PrimaryExpression	0		1630740	1					
ANR	1630911	CompoundStatement		41:46:701:701	1630740	1					
ANR	1630912	ExpressionStatement	"s -> prediction_vq [ j ] [ k ] = get_bits ( & s -> gb , 12 )"	47:16:862:907	1630740	0	True				
ANR	1630913	AssignmentExpression	"s -> prediction_vq [ j ] [ k ] = get_bits ( & s -> gb , 12 )"		1630740	0		=			
ANR	1630914	ArrayIndexing	s -> prediction_vq [ j ] [ k ]		1630740	0					
ANR	1630915	ArrayIndexing	s -> prediction_vq [ j ]		1630740	0					
ANR	1630916	PtrMemberAccess	s -> prediction_vq		1630740	0					
ANR	1630917	Identifier	s		1630740	0					
ANR	1630918	Identifier	prediction_vq		1630740	1					
ANR	1630919	Identifier	j		1630740	1					
ANR	1630920	Identifier	k		1630740	1					
ANR	1630921	CallExpression	"get_bits ( & s -> gb , 12 )"		1630740	1					
ANR	1630922	Callee	get_bits		1630740	0					
ANR	1630923	Identifier	get_bits		1630740	0					
ANR	1630924	ArgumentList	& s -> gb		1630740	1					
ANR	1630925	Argument	& s -> gb		1630740	0					
ANR	1630926	UnaryOperationExpression	& s -> gb		1630740	0					
ANR	1630927	UnaryOperator	&		1630740	0					
ANR	1630928	PtrMemberAccess	s -> gb		1630740	1					
ANR	1630929	Identifier	s		1630740	0					
ANR	1630930	Identifier	gb		1630740	1					
ANR	1630931	Argument	12		1630740	1					
ANR	1630932	PrimaryExpression	12		1630740	0					
ANR	1630933	ForStatement	for ( j = base_channel ; j < s -> prim_channels ; j ++ )		1630740	5					
ANR	1630934	ForInit	j = base_channel ;	59:9:986:1002	1630740	0	True				
ANR	1630935	AssignmentExpression	j = base_channel		1630740	0		=			
ANR	1630936	Identifier	j		1630740	0					
ANR	1630937	Identifier	base_channel		1630740	1					
ANR	1630938	Condition	j < s -> prim_channels	59:27:1004:1023	1630740	1	True				
ANR	1630939	RelationalExpression	j < s -> prim_channels		1630740	0		<			
ANR	1630940	Identifier	j		1630740	0					
ANR	1630941	PtrMemberAccess	s -> prim_channels		1630740	1					
ANR	1630942	Identifier	s		1630740	0					
ANR	1630943	Identifier	prim_channels		1630740	1					
ANR	1630944	PostIncDecOperationExpression	j ++	59:49:1026:1028	1630740	2	True				
ANR	1630945	Identifier	j		1630740	0					
ANR	1630946	IncDec	++		1630740	1					
ANR	1630947	CompoundStatement		57:54:948:948	1630740	3					
ANR	1630948	ForStatement	for ( k = 0 ; k < s -> vq_start_subband [ j ] ; k ++ )		1630740	0					
ANR	1630949	ForInit	k = 0 ;	61:13:1047:1052	1630740	0	True				
ANR	1630950	AssignmentExpression	k = 0		1630740	0		=			
ANR	1630951	Identifier	k		1630740	0					
ANR	1630952	PrimaryExpression	0		1630740	1					
ANR	1630953	Condition	k < s -> vq_start_subband [ j ]	61:20:1054:1079	1630740	1	True				
ANR	1630954	RelationalExpression	k < s -> vq_start_subband [ j ]		1630740	0		<			
ANR	1630955	Identifier	k		1630740	0					
ANR	1630956	ArrayIndexing	s -> vq_start_subband [ j ]		1630740	1					
ANR	1630957	PtrMemberAccess	s -> vq_start_subband		1630740	0					
ANR	1630958	Identifier	s		1630740	0					
ANR	1630959	Identifier	vq_start_subband		1630740	1					
ANR	1630960	Identifier	j		1630740	1					
ANR	1630961	PostIncDecOperationExpression	k ++	61:48:1082:1084	1630740	2	True				
ANR	1630962	Identifier	k		1630740	0					
ANR	1630963	IncDec	++		1630740	1					
ANR	1630964	CompoundStatement		59:53:1004:1004	1630740	3					
ANR	1630965	IfStatement	if ( s -> bitalloc_huffman [ j ] == 6 )		1630740	0					
ANR	1630966	Condition	s -> bitalloc_huffman [ j ] == 6	63:16:1106:1132	1630740	0	True				
ANR	1630967	EqualityExpression	s -> bitalloc_huffman [ j ] == 6		1630740	0		==			
ANR	1630968	ArrayIndexing	s -> bitalloc_huffman [ j ]		1630740	0					
ANR	1630969	PtrMemberAccess	s -> bitalloc_huffman		1630740	0					
ANR	1630970	Identifier	s		1630740	0					
ANR	1630971	Identifier	bitalloc_huffman		1630740	1					
ANR	1630972	Identifier	j		1630740	1					
ANR	1630973	PrimaryExpression	6		1630740	1					
ANR	1630974	ExpressionStatement	"s -> bitalloc [ j ] [ k ] = get_bits ( & s -> gb , 5 )"	65:16:1152:1191	1630740	1	True				
ANR	1630975	AssignmentExpression	"s -> bitalloc [ j ] [ k ] = get_bits ( & s -> gb , 5 )"		1630740	0		=			
ANR	1630976	ArrayIndexing	s -> bitalloc [ j ] [ k ]		1630740	0					
ANR	1630977	ArrayIndexing	s -> bitalloc [ j ]		1630740	0					
ANR	1630978	PtrMemberAccess	s -> bitalloc		1630740	0					
ANR	1630979	Identifier	s		1630740	0					
ANR	1630980	Identifier	bitalloc		1630740	1					
ANR	1630981	Identifier	j		1630740	1					
ANR	1630982	Identifier	k		1630740	1					
ANR	1630983	CallExpression	"get_bits ( & s -> gb , 5 )"		1630740	1					
ANR	1630984	Callee	get_bits		1630740	0					
ANR	1630985	Identifier	get_bits		1630740	0					
ANR	1630986	ArgumentList	& s -> gb		1630740	1					
ANR	1630987	Argument	& s -> gb		1630740	0					
ANR	1630988	UnaryOperationExpression	& s -> gb		1630740	0					
ANR	1630989	UnaryOperator	&		1630740	0					
ANR	1630990	PtrMemberAccess	s -> gb		1630740	1					
ANR	1630991	Identifier	s		1630740	0					
ANR	1630992	Identifier	gb		1630740	1					
ANR	1630993	Argument	5		1630740	1					
ANR	1630994	PrimaryExpression	5		1630740	0					
ANR	1630995	ElseStatement	else		1630740	0					
ANR	1630996	IfStatement	if ( s -> bitalloc_huffman [ j ] == 5 )		1630740	0					
ANR	1630997	Condition	s -> bitalloc_huffman [ j ] == 5	67:21:1215:1241	1630740	0	True				
ANR	1630998	EqualityExpression	s -> bitalloc_huffman [ j ] == 5		1630740	0		==			
ANR	1630999	ArrayIndexing	s -> bitalloc_huffman [ j ]		1630740	0					
ANR	1631000	PtrMemberAccess	s -> bitalloc_huffman		1630740	0					
ANR	1631001	Identifier	s		1630740	0					
ANR	1631002	Identifier	bitalloc_huffman		1630740	1					
ANR	1631003	Identifier	j		1630740	1					
ANR	1631004	PrimaryExpression	5		1630740	1					
ANR	1631005	ExpressionStatement	"s -> bitalloc [ j ] [ k ] = get_bits ( & s -> gb , 4 )"	69:16:1261:1300	1630740	1	True				
ANR	1631006	AssignmentExpression	"s -> bitalloc [ j ] [ k ] = get_bits ( & s -> gb , 4 )"		1630740	0		=			
ANR	1631007	ArrayIndexing	s -> bitalloc [ j ] [ k ]		1630740	0					
ANR	1631008	ArrayIndexing	s -> bitalloc [ j ]		1630740	0					
ANR	1631009	PtrMemberAccess	s -> bitalloc		1630740	0					
ANR	1631010	Identifier	s		1630740	0					
ANR	1631011	Identifier	bitalloc		1630740	1					
ANR	1631012	Identifier	j		1630740	1					
ANR	1631013	Identifier	k		1630740	1					
ANR	1631014	CallExpression	"get_bits ( & s -> gb , 4 )"		1630740	1					
ANR	1631015	Callee	get_bits		1630740	0					
ANR	1631016	Identifier	get_bits		1630740	0					
ANR	1631017	ArgumentList	& s -> gb		1630740	1					
ANR	1631018	Argument	& s -> gb		1630740	0					
ANR	1631019	UnaryOperationExpression	& s -> gb		1630740	0					
ANR	1631020	UnaryOperator	&		1630740	0					
ANR	1631021	PtrMemberAccess	s -> gb		1630740	1					
ANR	1631022	Identifier	s		1630740	0					
ANR	1631023	Identifier	gb		1630740	1					
ANR	1631024	Argument	4		1630740	1					
ANR	1631025	PrimaryExpression	4		1630740	0					
ANR	1631026	ElseStatement	else		1630740	0					
ANR	1631027	IfStatement	if ( s -> bitalloc_huffman [ j ] == 7 )		1630740	0					
ANR	1631028	Condition	s -> bitalloc_huffman [ j ] == 7	71:21:1324:1350	1630740	0	True				
ANR	1631029	EqualityExpression	s -> bitalloc_huffman [ j ] == 7		1630740	0		==			
ANR	1631030	ArrayIndexing	s -> bitalloc_huffman [ j ]		1630740	0					
ANR	1631031	PtrMemberAccess	s -> bitalloc_huffman		1630740	0					
ANR	1631032	Identifier	s		1630740	0					
ANR	1631033	Identifier	bitalloc_huffman		1630740	1					
ANR	1631034	Identifier	j		1630740	1					
ANR	1631035	PrimaryExpression	7		1630740	1					
ANR	1631036	CompoundStatement		69:50:1270:1270	1630740	1					
ANR	1631037	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_ERROR , ""Invalid bit allocation index\\n"" )"	73:16:1372:1460	1630740	0	True				
ANR	1631038	CallExpression	"av_log ( s -> avctx , AV_LOG_ERROR , ""Invalid bit allocation index\\n"" )"		1630740	0					
ANR	1631039	Callee	av_log		1630740	0					
ANR	1631040	Identifier	av_log		1630740	0					
ANR	1631041	ArgumentList	s -> avctx		1630740	1					
ANR	1631042	Argument	s -> avctx		1630740	0					
ANR	1631043	PtrMemberAccess	s -> avctx		1630740	0					
ANR	1631044	Identifier	s		1630740	0					
ANR	1631045	Identifier	avctx		1630740	1					
ANR	1631046	Argument	AV_LOG_ERROR		1630740	1					
ANR	1631047	Identifier	AV_LOG_ERROR		1630740	0					
ANR	1631048	Argument	"""Invalid bit allocation index\\n"""		1630740	2					
ANR	1631049	PrimaryExpression	"""Invalid bit allocation index\\n"""		1630740	0					
ANR	1631050	ReturnStatement	return AVERROR_INVALIDDATA ;	77:16:1479:1505	1630740	1	True				
ANR	1631051	Identifier	AVERROR_INVALIDDATA		1630740	0					
ANR	1631052	ElseStatement	else		1630740	0					
ANR	1631053	CompoundStatement		77:19:1444:1444	1630740	0					
ANR	1631054	ExpressionStatement	"s -> bitalloc [ j ] [ k ] = get_bitalloc ( & s -> gb , & dca_bitalloc_index , s -> bitalloc_huffman [ j ] )"	81:16:1546:1652	1630740	0	True				
ANR	1631055	AssignmentExpression	"s -> bitalloc [ j ] [ k ] = get_bitalloc ( & s -> gb , & dca_bitalloc_index , s -> bitalloc_huffman [ j ] )"		1630740	0		=			
ANR	1631056	ArrayIndexing	s -> bitalloc [ j ] [ k ]		1630740	0					
ANR	1631057	ArrayIndexing	s -> bitalloc [ j ]		1630740	0					
ANR	1631058	PtrMemberAccess	s -> bitalloc		1630740	0					
ANR	1631059	Identifier	s		1630740	0					
ANR	1631060	Identifier	bitalloc		1630740	1					
ANR	1631061	Identifier	j		1630740	1					
ANR	1631062	Identifier	k		1630740	1					
ANR	1631063	CallExpression	"get_bitalloc ( & s -> gb , & dca_bitalloc_index , s -> bitalloc_huffman [ j ] )"		1630740	1					
ANR	1631064	Callee	get_bitalloc		1630740	0					
ANR	1631065	Identifier	get_bitalloc		1630740	0					
ANR	1631066	ArgumentList	& s -> gb		1630740	1					
ANR	1631067	Argument	& s -> gb		1630740	0					
ANR	1631068	UnaryOperationExpression	& s -> gb		1630740	0					
ANR	1631069	UnaryOperator	&		1630740	0					
ANR	1631070	PtrMemberAccess	s -> gb		1630740	1					
ANR	1631071	Identifier	s		1630740	0					
ANR	1631072	Identifier	gb		1630740	1					
ANR	1631073	Argument	& dca_bitalloc_index		1630740	1					
ANR	1631074	UnaryOperationExpression	& dca_bitalloc_index		1630740	0					
ANR	1631075	UnaryOperator	&		1630740	0					
ANR	1631076	Identifier	dca_bitalloc_index		1630740	1					
ANR	1631077	Argument	s -> bitalloc_huffman [ j ]		1630740	2					
ANR	1631078	ArrayIndexing	s -> bitalloc_huffman [ j ]		1630740	0					
ANR	1631079	PtrMemberAccess	s -> bitalloc_huffman		1630740	0					
ANR	1631080	Identifier	s		1630740	0					
ANR	1631081	Identifier	bitalloc_huffman		1630740	1					
ANR	1631082	Identifier	j		1630740	1					
ANR	1631083	IfStatement	if ( s -> bitalloc [ j ] [ k ] > 26 )		1630740	1					
ANR	1631084	Condition	s -> bitalloc [ j ] [ k ] > 26	89:16:1688:1709	1630740	0	True				
ANR	1631085	RelationalExpression	s -> bitalloc [ j ] [ k ] > 26		1630740	0		>			
ANR	1631086	ArrayIndexing	s -> bitalloc [ j ] [ k ]		1630740	0					
ANR	1631087	ArrayIndexing	s -> bitalloc [ j ]		1630740	0					
ANR	1631088	PtrMemberAccess	s -> bitalloc		1630740	0					
ANR	1631089	Identifier	s		1630740	0					
ANR	1631090	Identifier	bitalloc		1630740	1					
ANR	1631091	Identifier	j		1630740	1					
ANR	1631092	Identifier	k		1630740	1					
ANR	1631093	PrimaryExpression	26		1630740	1					
ANR	1631094	CompoundStatement		87:40:1629:1629	1630740	1					
ANR	1631095	ReturnStatement	return AVERROR_INVALIDDATA ;	95:16:1877:1903	1630740	0	True				
ANR	1631096	Identifier	AVERROR_INVALIDDATA		1630740	0					
ANR	1631097	ForStatement	for ( j = base_channel ; j < s -> prim_channels ; j ++ )		1630740	6					
ANR	1631098	ForInit	j = base_channel ;	107:9:1977:1993	1630740	0	True				
ANR	1631099	AssignmentExpression	j = base_channel		1630740	0		=			
ANR	1631100	Identifier	j		1630740	0					
ANR	1631101	Identifier	base_channel		1630740	1					
ANR	1631102	Condition	j < s -> prim_channels	107:27:1995:2014	1630740	1	True				
ANR	1631103	RelationalExpression	j < s -> prim_channels		1630740	0		<			
ANR	1631104	Identifier	j		1630740	0					
ANR	1631105	PtrMemberAccess	s -> prim_channels		1630740	1					
ANR	1631106	Identifier	s		1630740	0					
ANR	1631107	Identifier	prim_channels		1630740	1					
ANR	1631108	PostIncDecOperationExpression	j ++	107:49:2017:2019	1630740	2	True				
ANR	1631109	Identifier	j		1630740	0					
ANR	1631110	IncDec	++		1630740	1					
ANR	1631111	CompoundStatement		105:54:1939:1939	1630740	3					
ANR	1631112	ForStatement	for ( k = 0 ; k < s -> subband_activity [ j ] ; k ++ )		1630740	0					
ANR	1631113	ForInit	k = 0 ;	109:13:2038:2043	1630740	0	True				
ANR	1631114	AssignmentExpression	k = 0		1630740	0		=			
ANR	1631115	Identifier	k		1630740	0					
ANR	1631116	PrimaryExpression	0		1630740	1					
ANR	1631117	Condition	k < s -> subband_activity [ j ]	109:20:2045:2070	1630740	1	True				
ANR	1631118	RelationalExpression	k < s -> subband_activity [ j ]		1630740	0		<			
ANR	1631119	Identifier	k		1630740	0					
ANR	1631120	ArrayIndexing	s -> subband_activity [ j ]		1630740	1					
ANR	1631121	PtrMemberAccess	s -> subband_activity		1630740	0					
ANR	1631122	Identifier	s		1630740	0					
ANR	1631123	Identifier	subband_activity		1630740	1					
ANR	1631124	Identifier	j		1630740	1					
ANR	1631125	PostIncDecOperationExpression	k ++	109:48:2073:2075	1630740	2	True				
ANR	1631126	Identifier	k		1630740	0					
ANR	1631127	IncDec	++		1630740	1					
ANR	1631128	CompoundStatement		107:53:1995:1995	1630740	3					
ANR	1631129	ExpressionStatement	s -> transition_mode [ j ] [ k ] = 0	111:12:2093:2121	1630740	0	True				
ANR	1631130	AssignmentExpression	s -> transition_mode [ j ] [ k ] = 0		1630740	0		=			
ANR	1631131	ArrayIndexing	s -> transition_mode [ j ] [ k ]		1630740	0					
ANR	1631132	ArrayIndexing	s -> transition_mode [ j ]		1630740	0					
ANR	1631133	PtrMemberAccess	s -> transition_mode		1630740	0					
ANR	1631134	Identifier	s		1630740	0					
ANR	1631135	Identifier	transition_mode		1630740	1					
ANR	1631136	Identifier	j		1630740	1					
ANR	1631137	Identifier	k		1630740	1					
ANR	1631138	PrimaryExpression	0		1630740	1					
ANR	1631139	IfStatement	if ( s -> subsubframes [ s -> current_subframe ] > 1 && k < s -> vq_start_subband [ j ] && s -> bitalloc [ j ] [ k ] > 0 )		1630740	1					
ANR	1631140	Condition	s -> subsubframes [ s -> current_subframe ] > 1 && k < s -> vq_start_subband [ j ] && s -> bitalloc [ j ] [ k ] > 0	113:16:2140:2251	1630740	0	True				
ANR	1631141	AndExpression	s -> subsubframes [ s -> current_subframe ] > 1 && k < s -> vq_start_subband [ j ] && s -> bitalloc [ j ] [ k ] > 0		1630740	0		&&			
ANR	1631142	RelationalExpression	s -> subsubframes [ s -> current_subframe ] > 1		1630740	0		>			
ANR	1631143	ArrayIndexing	s -> subsubframes [ s -> current_subframe ]		1630740	0					
ANR	1631144	PtrMemberAccess	s -> subsubframes		1630740	0					
ANR	1631145	Identifier	s		1630740	0					
ANR	1631146	Identifier	subsubframes		1630740	1					
ANR	1631147	PtrMemberAccess	s -> current_subframe		1630740	1					
ANR	1631148	Identifier	s		1630740	0					
ANR	1631149	Identifier	current_subframe		1630740	1					
ANR	1631150	PrimaryExpression	1		1630740	1					
ANR	1631151	AndExpression	k < s -> vq_start_subband [ j ] && s -> bitalloc [ j ] [ k ] > 0		1630740	1		&&			
ANR	1631152	RelationalExpression	k < s -> vq_start_subband [ j ]		1630740	0		<			
ANR	1631153	Identifier	k		1630740	0					
ANR	1631154	ArrayIndexing	s -> vq_start_subband [ j ]		1630740	1					
ANR	1631155	PtrMemberAccess	s -> vq_start_subband		1630740	0					
ANR	1631156	Identifier	s		1630740	0					
ANR	1631157	Identifier	vq_start_subband		1630740	1					
ANR	1631158	Identifier	j		1630740	1					
ANR	1631159	RelationalExpression	s -> bitalloc [ j ] [ k ] > 0		1630740	1		>			
ANR	1631160	ArrayIndexing	s -> bitalloc [ j ] [ k ]		1630740	0					
ANR	1631161	ArrayIndexing	s -> bitalloc [ j ]		1630740	0					
ANR	1631162	PtrMemberAccess	s -> bitalloc		1630740	0					
ANR	1631163	Identifier	s		1630740	0					
ANR	1631164	Identifier	bitalloc		1630740	1					
ANR	1631165	Identifier	j		1630740	1					
ANR	1631166	Identifier	k		1630740	1					
ANR	1631167	PrimaryExpression	0		1630740	1					
ANR	1631168	CompoundStatement		113:69:2171:2171	1630740	1					
ANR	1631169	ExpressionStatement	"s -> transition_mode [ j ] [ k ] = get_bitalloc ( & s -> gb , & dca_tmode , s -> transient_huffman [ j ] )"	117:16:2273:2378	1630740	0	True				
ANR	1631170	AssignmentExpression	"s -> transition_mode [ j ] [ k ] = get_bitalloc ( & s -> gb , & dca_tmode , s -> transient_huffman [ j ] )"		1630740	0		=			
ANR	1631171	ArrayIndexing	s -> transition_mode [ j ] [ k ]		1630740	0					
ANR	1631172	ArrayIndexing	s -> transition_mode [ j ]		1630740	0					
ANR	1631173	PtrMemberAccess	s -> transition_mode		1630740	0					
ANR	1631174	Identifier	s		1630740	0					
ANR	1631175	Identifier	transition_mode		1630740	1					
ANR	1631176	Identifier	j		1630740	1					
ANR	1631177	Identifier	k		1630740	1					
ANR	1631178	CallExpression	"get_bitalloc ( & s -> gb , & dca_tmode , s -> transient_huffman [ j ] )"		1630740	1					
ANR	1631179	Callee	get_bitalloc		1630740	0					
ANR	1631180	Identifier	get_bitalloc		1630740	0					
ANR	1631181	ArgumentList	& s -> gb		1630740	1					
ANR	1631182	Argument	& s -> gb		1630740	0					
ANR	1631183	UnaryOperationExpression	& s -> gb		1630740	0					
ANR	1631184	UnaryOperator	&		1630740	0					
ANR	1631185	PtrMemberAccess	s -> gb		1630740	1					
ANR	1631186	Identifier	s		1630740	0					
ANR	1631187	Identifier	gb		1630740	1					
ANR	1631188	Argument	& dca_tmode		1630740	1					
ANR	1631189	UnaryOperationExpression	& dca_tmode		1630740	0					
ANR	1631190	UnaryOperator	&		1630740	0					
ANR	1631191	Identifier	dca_tmode		1630740	1					
ANR	1631192	Argument	s -> transient_huffman [ j ]		1630740	2					
ANR	1631193	ArrayIndexing	s -> transient_huffman [ j ]		1630740	0					
ANR	1631194	PtrMemberAccess	s -> transient_huffman		1630740	0					
ANR	1631195	Identifier	s		1630740	0					
ANR	1631196	Identifier	transient_huffman		1630740	1					
ANR	1631197	Identifier	j		1630740	1					
ANR	1631198	IfStatement	if ( get_bits_left ( & s -> gb ) < 0 )		1630740	7					
ANR	1631199	Condition	get_bits_left ( & s -> gb ) < 0	129:8:2424:2448	1630740	0	True				
ANR	1631200	RelationalExpression	get_bits_left ( & s -> gb ) < 0		1630740	0		<			
ANR	1631201	CallExpression	get_bits_left ( & s -> gb )		1630740	0					
ANR	1631202	Callee	get_bits_left		1630740	0					
ANR	1631203	Identifier	get_bits_left		1630740	0					
ANR	1631204	ArgumentList	& s -> gb		1630740	1					
ANR	1631205	Argument	& s -> gb		1630740	0					
ANR	1631206	UnaryOperationExpression	& s -> gb		1630740	0					
ANR	1631207	UnaryOperator	&		1630740	0					
ANR	1631208	PtrMemberAccess	s -> gb		1630740	1					
ANR	1631209	Identifier	s		1630740	0					
ANR	1631210	Identifier	gb		1630740	1					
ANR	1631211	PrimaryExpression	0		1630740	1					
ANR	1631212	ReturnStatement	return AVERROR_INVALIDDATA ;	131:8:2460:2486	1630740	1	True				
ANR	1631213	Identifier	AVERROR_INVALIDDATA		1630740	0					
ANR	1631214	ForStatement	for ( j = base_channel ; j < s -> prim_channels ; j ++ )		1630740	8					
ANR	1631215	ForInit	j = base_channel ;	135:9:2500:2516	1630740	0	True				
ANR	1631216	AssignmentExpression	j = base_channel		1630740	0		=			
ANR	1631217	Identifier	j		1630740	0					
ANR	1631218	Identifier	base_channel		1630740	1					
ANR	1631219	Condition	j < s -> prim_channels	135:27:2518:2537	1630740	1	True				
ANR	1631220	RelationalExpression	j < s -> prim_channels		1630740	0		<			
ANR	1631221	Identifier	j		1630740	0					
ANR	1631222	PtrMemberAccess	s -> prim_channels		1630740	1					
ANR	1631223	Identifier	s		1630740	0					
ANR	1631224	Identifier	prim_channels		1630740	1					
ANR	1631225	PostIncDecOperationExpression	j ++	135:49:2540:2542	1630740	2	True				
ANR	1631226	Identifier	j		1630740	0					
ANR	1631227	IncDec	++		1630740	1					
ANR	1631228	CompoundStatement		137:8:2511:2524	1630740	3					
ANR	1631229	IdentifierDeclStatement	const uint32_t * scale_table ;	137:8:2556:2583	1630740	0	True				
ANR	1631230	IdentifierDecl	* scale_table		1630740	0					
ANR	1631231	IdentifierDeclType	const uint32_t *		1630740	0					
ANR	1631232	Identifier	scale_table		1630740	1					
ANR	1631233	IdentifierDeclStatement	int scale_sum ;	139:8:2594:2607	1630740	1	True				
ANR	1631234	IdentifierDecl	scale_sum		1630740	0					
ANR	1631235	IdentifierDeclType	int		1630740	0					
ANR	1631236	Identifier	scale_sum		1630740	1					
ANR	1631237	ExpressionStatement	"memset ( s -> scale_factor [ j ] , 0 , s -> subband_activity [ j ] * sizeof ( s -> scale_factor [ 0 ] [ 0 ] [ 0 ] ) * 2 )"	143:8:2620:2728	1630740	2	True				
ANR	1631238	CallExpression	"memset ( s -> scale_factor [ j ] , 0 , s -> subband_activity [ j ] * sizeof ( s -> scale_factor [ 0 ] [ 0 ] [ 0 ] ) * 2 )"		1630740	0					
ANR	1631239	Callee	memset		1630740	0					
ANR	1631240	Identifier	memset		1630740	0					
ANR	1631241	ArgumentList	s -> scale_factor [ j ]		1630740	1					
ANR	1631242	Argument	s -> scale_factor [ j ]		1630740	0					
ANR	1631243	ArrayIndexing	s -> scale_factor [ j ]		1630740	0					
ANR	1631244	PtrMemberAccess	s -> scale_factor		1630740	0					
ANR	1631245	Identifier	s		1630740	0					
ANR	1631246	Identifier	scale_factor		1630740	1					
ANR	1631247	Identifier	j		1630740	1					
ANR	1631248	Argument	0		1630740	1					
ANR	1631249	PrimaryExpression	0		1630740	0					
ANR	1631250	Argument	s -> subband_activity [ j ] * sizeof ( s -> scale_factor [ 0 ] [ 0 ] [ 0 ] ) * 2		1630740	2					
ANR	1631251	MultiplicativeExpression	s -> subband_activity [ j ] * sizeof ( s -> scale_factor [ 0 ] [ 0 ] [ 0 ] ) * 2		1630740	0		*			
ANR	1631252	ArrayIndexing	s -> subband_activity [ j ]		1630740	0					
ANR	1631253	PtrMemberAccess	s -> subband_activity		1630740	0					
ANR	1631254	Identifier	s		1630740	0					
ANR	1631255	Identifier	subband_activity		1630740	1					
ANR	1631256	Identifier	j		1630740	1					
ANR	1631257	MultiplicativeExpression	sizeof ( s -> scale_factor [ 0 ] [ 0 ] [ 0 ] ) * 2		1630740	1		*			
ANR	1631258	SizeofExpression	sizeof ( s -> scale_factor [ 0 ] [ 0 ] [ 0 ] )		1630740	0					
ANR	1631259	Sizeof	sizeof		1630740	0					
ANR	1631260	ArrayIndexing	s -> scale_factor [ 0 ] [ 0 ] [ 0 ]		1630740	1					
ANR	1631261	ArrayIndexing	s -> scale_factor [ 0 ] [ 0 ]		1630740	0					
ANR	1631262	ArrayIndexing	s -> scale_factor [ 0 ]		1630740	0					
ANR	1631263	PtrMemberAccess	s -> scale_factor		1630740	0					
ANR	1631264	Identifier	s		1630740	0					
ANR	1631265	Identifier	scale_factor		1630740	1					
ANR	1631266	PrimaryExpression	0		1630740	1					
ANR	1631267	PrimaryExpression	0		1630740	1					
ANR	1631268	PrimaryExpression	0		1630740	1					
ANR	1631269	PrimaryExpression	2		1630740	1					
ANR	1631270	IfStatement	if ( s -> scalefactor_huffman [ j ] == 6 )		1630740	3					
ANR	1631271	Condition	s -> scalefactor_huffman [ j ] == 6	149:12:2745:2774	1630740	0	True				
ANR	1631272	EqualityExpression	s -> scalefactor_huffman [ j ] == 6		1630740	0		==			
ANR	1631273	ArrayIndexing	s -> scalefactor_huffman [ j ]		1630740	0					
ANR	1631274	PtrMemberAccess	s -> scalefactor_huffman		1630740	0					
ANR	1631275	Identifier	s		1630740	0					
ANR	1631276	Identifier	scalefactor_huffman		1630740	1					
ANR	1631277	Identifier	j		1630740	1					
ANR	1631278	PrimaryExpression	6		1630740	1					
ANR	1631279	ExpressionStatement	scale_table = scale_factor_quant7	151:12:2790:2823	1630740	1	True				
ANR	1631280	AssignmentExpression	scale_table = scale_factor_quant7		1630740	0		=			
ANR	1631281	Identifier	scale_table		1630740	0					
ANR	1631282	Identifier	scale_factor_quant7		1630740	1					
ANR	1631283	ElseStatement	else		1630740	0					
ANR	1631284	ExpressionStatement	scale_table = scale_factor_quant6	155:12:2852:2885	1630740	0	True				
ANR	1631285	AssignmentExpression	scale_table = scale_factor_quant6		1630740	0		=			
ANR	1631286	Identifier	scale_table		1630740	0					
ANR	1631287	Identifier	scale_factor_quant6		1630740	1					
ANR	1631288	ExpressionStatement	scale_sum = 0	161:8:2964:2977	1630740	4	True				
ANR	1631289	AssignmentExpression	scale_sum = 0		1630740	0		=			
ANR	1631290	Identifier	scale_sum		1630740	0					
ANR	1631291	PrimaryExpression	0		1630740	1					
ANR	1631292	ForStatement	for ( k = 0 ; k < s -> subband_activity [ j ] ; k ++ )		1630740	5					
ANR	1631293	ForInit	k = 0 ;	165:13:2995:3000	1630740	0	True				
ANR	1631294	AssignmentExpression	k = 0		1630740	0		=			
ANR	1631295	Identifier	k		1630740	0					
ANR	1631296	PrimaryExpression	0		1630740	1					
ANR	1631297	Condition	k < s -> subband_activity [ j ]	165:20:3002:3027	1630740	1	True				
ANR	1631298	RelationalExpression	k < s -> subband_activity [ j ]		1630740	0		<			
ANR	1631299	Identifier	k		1630740	0					
ANR	1631300	ArrayIndexing	s -> subband_activity [ j ]		1630740	1					
ANR	1631301	PtrMemberAccess	s -> subband_activity		1630740	0					
ANR	1631302	Identifier	s		1630740	0					
ANR	1631303	Identifier	subband_activity		1630740	1					
ANR	1631304	Identifier	j		1630740	1					
ANR	1631305	PostIncDecOperationExpression	k ++	165:48:3030:3032	1630740	2	True				
ANR	1631306	Identifier	k		1630740	0					
ANR	1631307	IncDec	++		1630740	1					
ANR	1631308	CompoundStatement		163:53:2952:2952	1630740	3					
ANR	1631309	IfStatement	if ( k >= s -> vq_start_subband [ j ] || s -> bitalloc [ j ] [ k ] > 0 )		1630740	0					
ANR	1631310	Condition	k >= s -> vq_start_subband [ j ] || s -> bitalloc [ j ] [ k ] > 0	167:16:3054:3105	1630740	0	True				
ANR	1631311	OrExpression	k >= s -> vq_start_subband [ j ] || s -> bitalloc [ j ] [ k ] > 0		1630740	0		||			
ANR	1631312	RelationalExpression	k >= s -> vq_start_subband [ j ]		1630740	0		>=			
ANR	1631313	Identifier	k		1630740	0					
ANR	1631314	ArrayIndexing	s -> vq_start_subband [ j ]		1630740	1					
ANR	1631315	PtrMemberAccess	s -> vq_start_subband		1630740	0					
ANR	1631316	Identifier	s		1630740	0					
ANR	1631317	Identifier	vq_start_subband		1630740	1					
ANR	1631318	Identifier	j		1630740	1					
ANR	1631319	RelationalExpression	s -> bitalloc [ j ] [ k ] > 0		1630740	1		>			
ANR	1631320	ArrayIndexing	s -> bitalloc [ j ] [ k ]		1630740	0					
ANR	1631321	ArrayIndexing	s -> bitalloc [ j ]		1630740	0					
ANR	1631322	PtrMemberAccess	s -> bitalloc		1630740	0					
ANR	1631323	Identifier	s		1630740	0					
ANR	1631324	Identifier	bitalloc		1630740	1					
ANR	1631325	Identifier	j		1630740	1					
ANR	1631326	Identifier	k		1630740	1					
ANR	1631327	PrimaryExpression	0		1630740	1					
ANR	1631328	CompoundStatement		165:70:3025:3025	1630740	1					
ANR	1631329	ExpressionStatement	"scale_sum = get_scale ( & s -> gb , s -> scalefactor_huffman [ j ] , scale_sum )"	169:16:3127:3194	1630740	0	True				
ANR	1631330	AssignmentExpression	"scale_sum = get_scale ( & s -> gb , s -> scalefactor_huffman [ j ] , scale_sum )"		1630740	0		=			
ANR	1631331	Identifier	scale_sum		1630740	0					
ANR	1631332	CallExpression	"get_scale ( & s -> gb , s -> scalefactor_huffman [ j ] , scale_sum )"		1630740	1					
ANR	1631333	Callee	get_scale		1630740	0					
ANR	1631334	Identifier	get_scale		1630740	0					
ANR	1631335	ArgumentList	& s -> gb		1630740	1					
ANR	1631336	Argument	& s -> gb		1630740	0					
ANR	1631337	UnaryOperationExpression	& s -> gb		1630740	0					
ANR	1631338	UnaryOperator	&		1630740	0					
ANR	1631339	PtrMemberAccess	s -> gb		1630740	1					
ANR	1631340	Identifier	s		1630740	0					
ANR	1631341	Identifier	gb		1630740	1					
ANR	1631342	Argument	s -> scalefactor_huffman [ j ]		1630740	1					
ANR	1631343	ArrayIndexing	s -> scalefactor_huffman [ j ]		1630740	0					
ANR	1631344	PtrMemberAccess	s -> scalefactor_huffman		1630740	0					
ANR	1631345	Identifier	s		1630740	0					
ANR	1631346	Identifier	scalefactor_huffman		1630740	1					
ANR	1631347	Identifier	j		1630740	1					
ANR	1631348	Argument	scale_sum		1630740	2					
ANR	1631349	Identifier	scale_sum		1630740	0					
ANR	1631350	ExpressionStatement	s -> scale_factor [ j ] [ k ] [ 0 ] = scale_table [ scale_sum ]	171:16:3213:3262	1630740	1	True				
ANR	1631351	AssignmentExpression	s -> scale_factor [ j ] [ k ] [ 0 ] = scale_table [ scale_sum ]		1630740	0		=			
ANR	1631352	ArrayIndexing	s -> scale_factor [ j ] [ k ] [ 0 ]		1630740	0					
ANR	1631353	ArrayIndexing	s -> scale_factor [ j ] [ k ]		1630740	0					
ANR	1631354	ArrayIndexing	s -> scale_factor [ j ]		1630740	0					
ANR	1631355	PtrMemberAccess	s -> scale_factor		1630740	0					
ANR	1631356	Identifier	s		1630740	0					
ANR	1631357	Identifier	scale_factor		1630740	1					
ANR	1631358	Identifier	j		1630740	1					
ANR	1631359	Identifier	k		1630740	1					
ANR	1631360	PrimaryExpression	0		1630740	1					
ANR	1631361	ArrayIndexing	scale_table [ scale_sum ]		1630740	1					
ANR	1631362	Identifier	scale_table		1630740	0					
ANR	1631363	Identifier	scale_sum		1630740	1					
ANR	1631364	IfStatement	if ( k < s -> vq_start_subband [ j ] && s -> transition_mode [ j ] [ k ] )		1630740	1					
ANR	1631365	Condition	k < s -> vq_start_subband [ j ] && s -> transition_mode [ j ] [ k ]	177:16:3298:3351	1630740	0	True				
ANR	1631366	AndExpression	k < s -> vq_start_subband [ j ] && s -> transition_mode [ j ] [ k ]		1630740	0		&&			
ANR	1631367	RelationalExpression	k < s -> vq_start_subband [ j ]		1630740	0		<			
ANR	1631368	Identifier	k		1630740	0					
ANR	1631369	ArrayIndexing	s -> vq_start_subband [ j ]		1630740	1					
ANR	1631370	PtrMemberAccess	s -> vq_start_subband		1630740	0					
ANR	1631371	Identifier	s		1630740	0					
ANR	1631372	Identifier	vq_start_subband		1630740	1					
ANR	1631373	Identifier	j		1630740	1					
ANR	1631374	ArrayIndexing	s -> transition_mode [ j ] [ k ]		1630740	1					
ANR	1631375	ArrayIndexing	s -> transition_mode [ j ]		1630740	0					
ANR	1631376	PtrMemberAccess	s -> transition_mode		1630740	0					
ANR	1631377	Identifier	s		1630740	0					
ANR	1631378	Identifier	transition_mode		1630740	1					
ANR	1631379	Identifier	j		1630740	1					
ANR	1631380	Identifier	k		1630740	1					
ANR	1631381	CompoundStatement		175:72:3271:3271	1630740	1					
ANR	1631382	ExpressionStatement	"scale_sum = get_scale ( & s -> gb , s -> scalefactor_huffman [ j ] , scale_sum )"	181:16:3420:3487	1630740	0	True				
ANR	1631383	AssignmentExpression	"scale_sum = get_scale ( & s -> gb , s -> scalefactor_huffman [ j ] , scale_sum )"		1630740	0		=			
ANR	1631384	Identifier	scale_sum		1630740	0					
ANR	1631385	CallExpression	"get_scale ( & s -> gb , s -> scalefactor_huffman [ j ] , scale_sum )"		1630740	1					
ANR	1631386	Callee	get_scale		1630740	0					
ANR	1631387	Identifier	get_scale		1630740	0					
ANR	1631388	ArgumentList	& s -> gb		1630740	1					
ANR	1631389	Argument	& s -> gb		1630740	0					
ANR	1631390	UnaryOperationExpression	& s -> gb		1630740	0					
ANR	1631391	UnaryOperator	&		1630740	0					
ANR	1631392	PtrMemberAccess	s -> gb		1630740	1					
ANR	1631393	Identifier	s		1630740	0					
ANR	1631394	Identifier	gb		1630740	1					
ANR	1631395	Argument	s -> scalefactor_huffman [ j ]		1630740	1					
ANR	1631396	ArrayIndexing	s -> scalefactor_huffman [ j ]		1630740	0					
ANR	1631397	PtrMemberAccess	s -> scalefactor_huffman		1630740	0					
ANR	1631398	Identifier	s		1630740	0					
ANR	1631399	Identifier	scalefactor_huffman		1630740	1					
ANR	1631400	Identifier	j		1630740	1					
ANR	1631401	Argument	scale_sum		1630740	2					
ANR	1631402	Identifier	scale_sum		1630740	0					
ANR	1631403	ExpressionStatement	s -> scale_factor [ j ] [ k ] [ 1 ] = scale_table [ scale_sum ]	183:16:3506:3555	1630740	1	True				
ANR	1631404	AssignmentExpression	s -> scale_factor [ j ] [ k ] [ 1 ] = scale_table [ scale_sum ]		1630740	0		=			
ANR	1631405	ArrayIndexing	s -> scale_factor [ j ] [ k ] [ 1 ]		1630740	0					
ANR	1631406	ArrayIndexing	s -> scale_factor [ j ] [ k ]		1630740	0					
ANR	1631407	ArrayIndexing	s -> scale_factor [ j ]		1630740	0					
ANR	1631408	PtrMemberAccess	s -> scale_factor		1630740	0					
ANR	1631409	Identifier	s		1630740	0					
ANR	1631410	Identifier	scale_factor		1630740	1					
ANR	1631411	Identifier	j		1630740	1					
ANR	1631412	Identifier	k		1630740	1					
ANR	1631413	PrimaryExpression	1		1630740	1					
ANR	1631414	ArrayIndexing	scale_table [ scale_sum ]		1630740	1					
ANR	1631415	Identifier	scale_table		1630740	0					
ANR	1631416	Identifier	scale_sum		1630740	1					
ANR	1631417	ForStatement	for ( j = base_channel ; j < s -> prim_channels ; j ++ )		1630740	9					
ANR	1631418	ForInit	j = base_channel ;	195:9:3656:3672	1630740	0	True				
ANR	1631419	AssignmentExpression	j = base_channel		1630740	0		=			
ANR	1631420	Identifier	j		1630740	0					
ANR	1631421	Identifier	base_channel		1630740	1					
ANR	1631422	Condition	j < s -> prim_channels	195:27:3674:3693	1630740	1	True				
ANR	1631423	RelationalExpression	j < s -> prim_channels		1630740	0		<			
ANR	1631424	Identifier	j		1630740	0					
ANR	1631425	PtrMemberAccess	s -> prim_channels		1630740	1					
ANR	1631426	Identifier	s		1630740	0					
ANR	1631427	Identifier	prim_channels		1630740	1					
ANR	1631428	PostIncDecOperationExpression	j ++	195:49:3696:3698	1630740	2	True				
ANR	1631429	Identifier	j		1630740	0					
ANR	1631430	IncDec	++		1630740	1					
ANR	1631431	CompoundStatement		193:54:3618:3618	1630740	3					
ANR	1631432	IfStatement	if ( s -> joint_intensity [ j ] > 0 )		1630740	0					
ANR	1631433	Condition	s -> joint_intensity [ j ] > 0	199:12:3780:3804	1630740	0	True				
ANR	1631434	RelationalExpression	s -> joint_intensity [ j ] > 0		1630740	0		>			
ANR	1631435	ArrayIndexing	s -> joint_intensity [ j ]		1630740	0					
ANR	1631436	PtrMemberAccess	s -> joint_intensity		1630740	0					
ANR	1631437	Identifier	s		1630740	0					
ANR	1631438	Identifier	joint_intensity		1630740	1					
ANR	1631439	Identifier	j		1630740	1					
ANR	1631440	PrimaryExpression	0		1630740	1					
ANR	1631441	ExpressionStatement	"s -> joint_huff [ j ] = get_bits ( & s -> gb , 3 )"	201:12:3820:3858	1630740	1	True				
ANR	1631442	AssignmentExpression	"s -> joint_huff [ j ] = get_bits ( & s -> gb , 3 )"		1630740	0		=			
ANR	1631443	ArrayIndexing	s -> joint_huff [ j ]		1630740	0					
ANR	1631444	PtrMemberAccess	s -> joint_huff		1630740	0					
ANR	1631445	Identifier	s		1630740	0					
ANR	1631446	Identifier	joint_huff		1630740	1					
ANR	1631447	Identifier	j		1630740	1					
ANR	1631448	CallExpression	"get_bits ( & s -> gb , 3 )"		1630740	1					
ANR	1631449	Callee	get_bits		1630740	0					
ANR	1631450	Identifier	get_bits		1630740	0					
ANR	1631451	ArgumentList	& s -> gb		1630740	1					
ANR	1631452	Argument	& s -> gb		1630740	0					
ANR	1631453	UnaryOperationExpression	& s -> gb		1630740	0					
ANR	1631454	UnaryOperator	&		1630740	0					
ANR	1631455	PtrMemberAccess	s -> gb		1630740	1					
ANR	1631456	Identifier	s		1630740	0					
ANR	1631457	Identifier	gb		1630740	1					
ANR	1631458	Argument	3		1630740	1					
ANR	1631459	PrimaryExpression	3		1630740	0					
ANR	1631460	IfStatement	if ( get_bits_left ( & s -> gb ) < 0 )		1630740	10					
ANR	1631461	Condition	get_bits_left ( & s -> gb ) < 0	207:8:3878:3902	1630740	0	True				
ANR	1631462	RelationalExpression	get_bits_left ( & s -> gb ) < 0		1630740	0		<			
ANR	1631463	CallExpression	get_bits_left ( & s -> gb )		1630740	0					
ANR	1631464	Callee	get_bits_left		1630740	0					
ANR	1631465	Identifier	get_bits_left		1630740	0					
ANR	1631466	ArgumentList	& s -> gb		1630740	1					
ANR	1631467	Argument	& s -> gb		1630740	0					
ANR	1631468	UnaryOperationExpression	& s -> gb		1630740	0					
ANR	1631469	UnaryOperator	&		1630740	0					
ANR	1631470	PtrMemberAccess	s -> gb		1630740	1					
ANR	1631471	Identifier	s		1630740	0					
ANR	1631472	Identifier	gb		1630740	1					
ANR	1631473	PrimaryExpression	0		1630740	1					
ANR	1631474	ReturnStatement	return AVERROR_INVALIDDATA ;	209:8:3914:3940	1630740	1	True				
ANR	1631475	Identifier	AVERROR_INVALIDDATA		1630740	0					
ANR	1631476	ForStatement	for ( j = base_channel ; j < s -> prim_channels ; j ++ )		1630740	11					
ANR	1631477	ForInit	j = base_channel ;	215:9:4004:4020	1630740	0	True				
ANR	1631478	AssignmentExpression	j = base_channel		1630740	0		=			
ANR	1631479	Identifier	j		1630740	0					
ANR	1631480	Identifier	base_channel		1630740	1					
ANR	1631481	Condition	j < s -> prim_channels	215:27:4022:4041	1630740	1	True				
ANR	1631482	RelationalExpression	j < s -> prim_channels		1630740	0		<			
ANR	1631483	Identifier	j		1630740	0					
ANR	1631484	PtrMemberAccess	s -> prim_channels		1630740	1					
ANR	1631485	Identifier	s		1630740	0					
ANR	1631486	Identifier	prim_channels		1630740	1					
ANR	1631487	PostIncDecOperationExpression	j ++	215:49:4044:4046	1630740	2	True				
ANR	1631488	Identifier	j		1630740	0					
ANR	1631489	IncDec	++		1630740	1					
ANR	1631490	CompoundStatement		215:8:3977:3995	1630740	3					
ANR	1631491	IdentifierDeclStatement	int source_channel ;	217:8:4060:4078	1630740	0	True				
ANR	1631492	IdentifierDecl	source_channel		1630740	0					
ANR	1631493	IdentifierDeclType	int		1630740	0					
ANR	1631494	Identifier	source_channel		1630740	1					
ANR	1631495	IfStatement	if ( s -> joint_intensity [ j ] > 0 )		1630740	1					
ANR	1631496	Condition	s -> joint_intensity [ j ] > 0	223:12:4159:4183	1630740	0	True				
ANR	1631497	RelationalExpression	s -> joint_intensity [ j ] > 0		1630740	0		>			
ANR	1631498	ArrayIndexing	s -> joint_intensity [ j ]		1630740	0					
ANR	1631499	PtrMemberAccess	s -> joint_intensity		1630740	0					
ANR	1631500	Identifier	s		1630740	0					
ANR	1631501	Identifier	joint_intensity		1630740	1					
ANR	1631502	Identifier	j		1630740	1					
ANR	1631503	PrimaryExpression	0		1630740	1					
ANR	1631504	CompoundStatement		223:12:4118:4131	1630740	1					
ANR	1631505	IdentifierDeclStatement	int scale = 0 ;	225:12:4201:4214	1630740	0	True				
ANR	1631506	IdentifierDecl	scale = 0		1630740	0					
ANR	1631507	IdentifierDeclType	int		1630740	0					
ANR	1631508	Identifier	scale		1630740	1					
ANR	1631509	AssignmentExpression	scale = 0		1630740	2		=			
ANR	1631510	Identifier	scale		1630740	0					
ANR	1631511	PrimaryExpression	0		1630740	1					
ANR	1631512	ExpressionStatement	source_channel = s -> joint_intensity [ j ] - 1	227:12:4229:4271	1630740	1	True				
ANR	1631513	AssignmentExpression	source_channel = s -> joint_intensity [ j ] - 1		1630740	0		=			
ANR	1631514	Identifier	source_channel		1630740	0					
ANR	1631515	AdditiveExpression	s -> joint_intensity [ j ] - 1		1630740	1		-			
ANR	1631516	ArrayIndexing	s -> joint_intensity [ j ]		1630740	0					
ANR	1631517	PtrMemberAccess	s -> joint_intensity		1630740	0					
ANR	1631518	Identifier	s		1630740	0					
ANR	1631519	Identifier	joint_intensity		1630740	1					
ANR	1631520	Identifier	j		1630740	1					
ANR	1631521	PrimaryExpression	1		1630740	1					
ANR	1631522	ForStatement	for ( k = s -> subband_activity [ j ] ; k < s -> subband_activity [ source_channel ] ; k ++ )		1630740	2					
ANR	1631523	ForInit	k = s -> subband_activity [ j ] ;	237:17:4426:4452	1630740	0	True				
ANR	1631524	AssignmentExpression	k = s -> subband_activity [ j ]		1630740	0		=			
ANR	1631525	Identifier	k		1630740	0					
ANR	1631526	ArrayIndexing	s -> subband_activity [ j ]		1630740	1					
ANR	1631527	PtrMemberAccess	s -> subband_activity		1630740	0					
ANR	1631528	Identifier	s		1630740	0					
ANR	1631529	Identifier	subband_activity		1630740	1					
ANR	1631530	Identifier	j		1630740	1					
ANR	1631531	Condition	k < s -> subband_activity [ source_channel ]	237:45:4454:4492	1630740	1	True				
ANR	1631532	RelationalExpression	k < s -> subband_activity [ source_channel ]		1630740	0		<			
ANR	1631533	Identifier	k		1630740	0					
ANR	1631534	ArrayIndexing	s -> subband_activity [ source_channel ]		1630740	1					
ANR	1631535	PtrMemberAccess	s -> subband_activity		1630740	0					
ANR	1631536	Identifier	s		1630740	0					
ANR	1631537	Identifier	subband_activity		1630740	1					
ANR	1631538	Identifier	source_channel		1630740	1					
ANR	1631539	PostIncDecOperationExpression	k ++	237:86:4495:4497	1630740	2	True				
ANR	1631540	Identifier	k		1630740	0					
ANR	1631541	IncDec	++		1630740	1					
ANR	1631542	CompoundStatement		235:91:4417:4417	1630740	3					
ANR	1631543	ExpressionStatement	"scale = get_scale ( & s -> gb , s -> joint_huff [ j ] , 0 )"	239:16:4519:4565	1630740	0	True				
ANR	1631544	AssignmentExpression	"scale = get_scale ( & s -> gb , s -> joint_huff [ j ] , 0 )"		1630740	0		=			
ANR	1631545	Identifier	scale		1630740	0					
ANR	1631546	CallExpression	"get_scale ( & s -> gb , s -> joint_huff [ j ] , 0 )"		1630740	1					
ANR	1631547	Callee	get_scale		1630740	0					
ANR	1631548	Identifier	get_scale		1630740	0					
ANR	1631549	ArgumentList	& s -> gb		1630740	1					
ANR	1631550	Argument	& s -> gb		1630740	0					
ANR	1631551	UnaryOperationExpression	& s -> gb		1630740	0					
ANR	1631552	UnaryOperator	&		1630740	0					
ANR	1631553	PtrMemberAccess	s -> gb		1630740	1					
ANR	1631554	Identifier	s		1630740	0					
ANR	1631555	Identifier	gb		1630740	1					
ANR	1631556	Argument	s -> joint_huff [ j ]		1630740	1					
ANR	1631557	ArrayIndexing	s -> joint_huff [ j ]		1630740	0					
ANR	1631558	PtrMemberAccess	s -> joint_huff		1630740	0					
ANR	1631559	Identifier	s		1630740	0					
ANR	1631560	Identifier	joint_huff		1630740	1					
ANR	1631561	Identifier	j		1630740	1					
ANR	1631562	Argument	0		1630740	2					
ANR	1631563	PrimaryExpression	0		1630740	0					
ANR	1631564	ExpressionStatement	scale += 64	241:16:4584:4595	1630740	1	True				
ANR	1631565	AssignmentExpression	scale += 64		1630740	0		+=			
ANR	1631566	Identifier	scale		1630740	0					
ANR	1631567	PrimaryExpression	64		1630740	1					
ANR	1631568	ExpressionStatement	s -> joint_scale_factor [ j ] [ k ] = scale	243:16:4628:4663	1630740	2	True				
ANR	1631569	AssignmentExpression	s -> joint_scale_factor [ j ] [ k ] = scale		1630740	0		=			
ANR	1631570	ArrayIndexing	s -> joint_scale_factor [ j ] [ k ]		1630740	0					
ANR	1631571	ArrayIndexing	s -> joint_scale_factor [ j ]		1630740	0					
ANR	1631572	PtrMemberAccess	s -> joint_scale_factor		1630740	0					
ANR	1631573	Identifier	s		1630740	0					
ANR	1631574	Identifier	joint_scale_factor		1630740	1					
ANR	1631575	Identifier	j		1630740	1					
ANR	1631576	Identifier	k		1630740	1					
ANR	1631577	Identifier	scale		1630740	1					
ANR	1631578	IfStatement	if ( ! ( s -> debug_flag & 0x02 ) )		1630740	3					
ANR	1631579	Condition	! ( s -> debug_flag & 0x02 )	249:16:4733:4755	1630740	0	True				
ANR	1631580	UnaryOperationExpression	! ( s -> debug_flag & 0x02 )		1630740	0					
ANR	1631581	UnaryOperator	!		1630740	0					
ANR	1631582	BitAndExpression	s -> debug_flag & 0x02		1630740	1		&			
ANR	1631583	PtrMemberAccess	s -> debug_flag		1630740	0					
ANR	1631584	Identifier	s		1630740	0					
ANR	1631585	Identifier	debug_flag		1630740	1					
ANR	1631586	PrimaryExpression	0x02		1630740	1					
ANR	1631587	CompoundStatement		247:41:4675:4675	1630740	1					
ANR	1631588	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_DEBUG , ""Joint stereo coding not supported\\n"" )"	251:16:4777:4870	1630740	0	True				
ANR	1631589	CallExpression	"av_log ( s -> avctx , AV_LOG_DEBUG , ""Joint stereo coding not supported\\n"" )"		1630740	0					
ANR	1631590	Callee	av_log		1630740	0					
ANR	1631591	Identifier	av_log		1630740	0					
ANR	1631592	ArgumentList	s -> avctx		1630740	1					
ANR	1631593	Argument	s -> avctx		1630740	0					
ANR	1631594	PtrMemberAccess	s -> avctx		1630740	0					
ANR	1631595	Identifier	s		1630740	0					
ANR	1631596	Identifier	avctx		1630740	1					
ANR	1631597	Argument	AV_LOG_DEBUG		1630740	1					
ANR	1631598	Identifier	AV_LOG_DEBUG		1630740	0					
ANR	1631599	Argument	"""Joint stereo coding not supported\\n"""		1630740	2					
ANR	1631600	PrimaryExpression	"""Joint stereo coding not supported\\n"""		1630740	0					
ANR	1631601	ExpressionStatement	s -> debug_flag |= 0x02	255:16:4889:4910	1630740	1	True				
ANR	1631602	AssignmentExpression	s -> debug_flag |= 0x02		1630740	0		|=			
ANR	1631603	PtrMemberAccess	s -> debug_flag		1630740	0					
ANR	1631604	Identifier	s		1630740	0					
ANR	1631605	Identifier	debug_flag		1630740	1					
ANR	1631606	PrimaryExpression	0x02		1630740	1					
ANR	1631607	IfStatement	if ( ! base_channel && s -> prim_channels > 2 )		1630740	12					
ANR	1631608	Condition	! base_channel && s -> prim_channels > 2	267:8:4995:5031	1630740	0	True				
ANR	1631609	AndExpression	! base_channel && s -> prim_channels > 2		1630740	0		&&			
ANR	1631610	UnaryOperationExpression	! base_channel		1630740	0					
ANR	1631611	UnaryOperator	!		1630740	0					
ANR	1631612	Identifier	base_channel		1630740	1					
ANR	1631613	RelationalExpression	s -> prim_channels > 2		1630740	1		>			
ANR	1631614	PtrMemberAccess	s -> prim_channels		1630740	0					
ANR	1631615	Identifier	s		1630740	0					
ANR	1631616	Identifier	prim_channels		1630740	1					
ANR	1631617	PrimaryExpression	2		1630740	1					
ANR	1631618	CompoundStatement		265:47:4951:4951	1630740	1					
ANR	1631619	IfStatement	if ( s -> downmix )		1630740	0					
ANR	1631620	Condition	s -> downmix	269:12:5049:5058	1630740	0	True				
ANR	1631621	PtrMemberAccess	s -> downmix		1630740	0					
ANR	1631622	Identifier	s		1630740	0					
ANR	1631623	Identifier	downmix		1630740	1					
ANR	1631624	CompoundStatement		267:24:4978:4978	1630740	1					
ANR	1631625	ForStatement	for ( j = base_channel ; j < s -> prim_channels ; j ++ )		1630740	0					
ANR	1631626	ForInit	j = base_channel ;	271:17:5081:5097	1630740	0	True				
ANR	1631627	AssignmentExpression	j = base_channel		1630740	0		=			
ANR	1631628	Identifier	j		1630740	0					
ANR	1631629	Identifier	base_channel		1630740	1					
ANR	1631630	Condition	j < s -> prim_channels	271:35:5099:5118	1630740	1	True				
ANR	1631631	RelationalExpression	j < s -> prim_channels		1630740	0		<			
ANR	1631632	Identifier	j		1630740	0					
ANR	1631633	PtrMemberAccess	s -> prim_channels		1630740	1					
ANR	1631634	Identifier	s		1630740	0					
ANR	1631635	Identifier	prim_channels		1630740	1					
ANR	1631636	PostIncDecOperationExpression	j ++	271:57:5121:5123	1630740	2	True				
ANR	1631637	Identifier	j		1630740	0					
ANR	1631638	IncDec	++		1630740	1					
ANR	1631639	CompoundStatement		269:62:5043:5043	1630740	3					
ANR	1631640	ExpressionStatement	"s -> downmix_coef [ j ] [ 0 ] = get_bits ( & s -> gb , 7 )"	273:16:5145:5188	1630740	0	True				
ANR	1631641	AssignmentExpression	"s -> downmix_coef [ j ] [ 0 ] = get_bits ( & s -> gb , 7 )"		1630740	0		=			
ANR	1631642	ArrayIndexing	s -> downmix_coef [ j ] [ 0 ]		1630740	0					
ANR	1631643	ArrayIndexing	s -> downmix_coef [ j ]		1630740	0					
ANR	1631644	PtrMemberAccess	s -> downmix_coef		1630740	0					
ANR	1631645	Identifier	s		1630740	0					
ANR	1631646	Identifier	downmix_coef		1630740	1					
ANR	1631647	Identifier	j		1630740	1					
ANR	1631648	PrimaryExpression	0		1630740	1					
ANR	1631649	CallExpression	"get_bits ( & s -> gb , 7 )"		1630740	1					
ANR	1631650	Callee	get_bits		1630740	0					
ANR	1631651	Identifier	get_bits		1630740	0					
ANR	1631652	ArgumentList	& s -> gb		1630740	1					
ANR	1631653	Argument	& s -> gb		1630740	0					
ANR	1631654	UnaryOperationExpression	& s -> gb		1630740	0					
ANR	1631655	UnaryOperator	&		1630740	0					
ANR	1631656	PtrMemberAccess	s -> gb		1630740	1					
ANR	1631657	Identifier	s		1630740	0					
ANR	1631658	Identifier	gb		1630740	1					
ANR	1631659	Argument	7		1630740	1					
ANR	1631660	PrimaryExpression	7		1630740	0					
ANR	1631661	ExpressionStatement	"s -> downmix_coef [ j ] [ 1 ] = get_bits ( & s -> gb , 7 )"	275:16:5207:5250	1630740	1	True				
ANR	1631662	AssignmentExpression	"s -> downmix_coef [ j ] [ 1 ] = get_bits ( & s -> gb , 7 )"		1630740	0		=			
ANR	1631663	ArrayIndexing	s -> downmix_coef [ j ] [ 1 ]		1630740	0					
ANR	1631664	ArrayIndexing	s -> downmix_coef [ j ]		1630740	0					
ANR	1631665	PtrMemberAccess	s -> downmix_coef		1630740	0					
ANR	1631666	Identifier	s		1630740	0					
ANR	1631667	Identifier	downmix_coef		1630740	1					
ANR	1631668	Identifier	j		1630740	1					
ANR	1631669	PrimaryExpression	1		1630740	1					
ANR	1631670	CallExpression	"get_bits ( & s -> gb , 7 )"		1630740	1					
ANR	1631671	Callee	get_bits		1630740	0					
ANR	1631672	Identifier	get_bits		1630740	0					
ANR	1631673	ArgumentList	& s -> gb		1630740	1					
ANR	1631674	Argument	& s -> gb		1630740	0					
ANR	1631675	UnaryOperationExpression	& s -> gb		1630740	0					
ANR	1631676	UnaryOperator	&		1630740	0					
ANR	1631677	PtrMemberAccess	s -> gb		1630740	1					
ANR	1631678	Identifier	s		1630740	0					
ANR	1631679	Identifier	gb		1630740	1					
ANR	1631680	Argument	7		1630740	1					
ANR	1631681	PrimaryExpression	7		1630740	0					
ANR	1631682	ElseStatement	else		1630740	0					
ANR	1631683	CompoundStatement		279:12:5215:5251	1630740	0					
ANR	1631684	IdentifierDeclStatement	int am = s -> amode & DCA_CHANNEL_MASK ;	281:12:5298:5334	1630740	0	True				
ANR	1631685	IdentifierDecl	am = s -> amode & DCA_CHANNEL_MASK		1630740	0					
ANR	1631686	IdentifierDeclType	int		1630740	0					
ANR	1631687	Identifier	am		1630740	1					
ANR	1631688	AssignmentExpression	am = s -> amode & DCA_CHANNEL_MASK		1630740	2		=			
ANR	1631689	Identifier	am		1630740	0					
ANR	1631690	BitAndExpression	s -> amode & DCA_CHANNEL_MASK		1630740	1		&			
ANR	1631691	PtrMemberAccess	s -> amode		1630740	0					
ANR	1631692	Identifier	s		1630740	0					
ANR	1631693	Identifier	amode		1630740	1					
ANR	1631694	Identifier	DCA_CHANNEL_MASK		1630740	1					
ANR	1631695	ForStatement	for ( j = base_channel ; j < s -> prim_channels ; j ++ )		1630740	1					
ANR	1631696	ForInit	j = base_channel ;	283:17:5354:5370	1630740	0	True				
ANR	1631697	AssignmentExpression	j = base_channel		1630740	0		=			
ANR	1631698	Identifier	j		1630740	0					
ANR	1631699	Identifier	base_channel		1630740	1					
ANR	1631700	Condition	j < s -> prim_channels	283:35:5372:5391	1630740	1	True				
ANR	1631701	RelationalExpression	j < s -> prim_channels		1630740	0		<			
ANR	1631702	Identifier	j		1630740	0					
ANR	1631703	PtrMemberAccess	s -> prim_channels		1630740	1					
ANR	1631704	Identifier	s		1630740	0					
ANR	1631705	Identifier	prim_channels		1630740	1					
ANR	1631706	PostIncDecOperationExpression	j ++	283:57:5394:5396	1630740	2	True				
ANR	1631707	Identifier	j		1630740	0					
ANR	1631708	IncDec	++		1630740	1					
ANR	1631709	CompoundStatement		281:62:5316:5316	1630740	3					
ANR	1631710	ExpressionStatement	s -> downmix_coef [ j ] [ 0 ] = dca_default_coeffs [ am ] [ j ] [ 0 ]	285:16:5418:5470	1630740	0	True				
ANR	1631711	AssignmentExpression	s -> downmix_coef [ j ] [ 0 ] = dca_default_coeffs [ am ] [ j ] [ 0 ]		1630740	0		=			
ANR	1631712	ArrayIndexing	s -> downmix_coef [ j ] [ 0 ]		1630740	0					
ANR	1631713	ArrayIndexing	s -> downmix_coef [ j ]		1630740	0					
ANR	1631714	PtrMemberAccess	s -> downmix_coef		1630740	0					
ANR	1631715	Identifier	s		1630740	0					
ANR	1631716	Identifier	downmix_coef		1630740	1					
ANR	1631717	Identifier	j		1630740	1					
ANR	1631718	PrimaryExpression	0		1630740	1					
ANR	1631719	ArrayIndexing	dca_default_coeffs [ am ] [ j ] [ 0 ]		1630740	1					
ANR	1631720	ArrayIndexing	dca_default_coeffs [ am ] [ j ]		1630740	0					
ANR	1631721	ArrayIndexing	dca_default_coeffs [ am ]		1630740	0					
ANR	1631722	Identifier	dca_default_coeffs		1630740	0					
ANR	1631723	Identifier	am		1630740	1					
ANR	1631724	Identifier	j		1630740	1					
ANR	1631725	PrimaryExpression	0		1630740	1					
ANR	1631726	ExpressionStatement	s -> downmix_coef [ j ] [ 1 ] = dca_default_coeffs [ am ] [ j ] [ 1 ]	287:16:5489:5541	1630740	1	True				
ANR	1631727	AssignmentExpression	s -> downmix_coef [ j ] [ 1 ] = dca_default_coeffs [ am ] [ j ] [ 1 ]		1630740	0		=			
ANR	1631728	ArrayIndexing	s -> downmix_coef [ j ] [ 1 ]		1630740	0					
ANR	1631729	ArrayIndexing	s -> downmix_coef [ j ]		1630740	0					
ANR	1631730	PtrMemberAccess	s -> downmix_coef		1630740	0					
ANR	1631731	Identifier	s		1630740	0					
ANR	1631732	Identifier	downmix_coef		1630740	1					
ANR	1631733	Identifier	j		1630740	1					
ANR	1631734	PrimaryExpression	1		1630740	1					
ANR	1631735	ArrayIndexing	dca_default_coeffs [ am ] [ j ] [ 1 ]		1630740	1					
ANR	1631736	ArrayIndexing	dca_default_coeffs [ am ] [ j ]		1630740	0					
ANR	1631737	ArrayIndexing	dca_default_coeffs [ am ]		1630740	0					
ANR	1631738	Identifier	dca_default_coeffs		1630740	0					
ANR	1631739	Identifier	am		1630740	1					
ANR	1631740	Identifier	j		1630740	1					
ANR	1631741	PrimaryExpression	1		1630740	1					
ANR	1631742	IfStatement	if ( ! base_channel && s -> dynrange )		1630740	13					
ANR	1631743	Condition	! base_channel && s -> dynrange	299:8:5624:5651	1630740	0	True				
ANR	1631744	AndExpression	! base_channel && s -> dynrange		1630740	0		&&			
ANR	1631745	UnaryOperationExpression	! base_channel		1630740	0					
ANR	1631746	UnaryOperator	!		1630740	0					
ANR	1631747	Identifier	base_channel		1630740	1					
ANR	1631748	PtrMemberAccess	s -> dynrange		1630740	1					
ANR	1631749	Identifier	s		1630740	0					
ANR	1631750	Identifier	dynrange		1630740	1					
ANR	1631751	ExpressionStatement	"s -> dynrange_coef = get_bits ( & s -> gb , 8 )"	301:8:5663:5701	1630740	1	True				
ANR	1631752	AssignmentExpression	"s -> dynrange_coef = get_bits ( & s -> gb , 8 )"		1630740	0		=			
ANR	1631753	PtrMemberAccess	s -> dynrange_coef		1630740	0					
ANR	1631754	Identifier	s		1630740	0					
ANR	1631755	Identifier	dynrange_coef		1630740	1					
ANR	1631756	CallExpression	"get_bits ( & s -> gb , 8 )"		1630740	1					
ANR	1631757	Callee	get_bits		1630740	0					
ANR	1631758	Identifier	get_bits		1630740	0					
ANR	1631759	ArgumentList	& s -> gb		1630740	1					
ANR	1631760	Argument	& s -> gb		1630740	0					
ANR	1631761	UnaryOperationExpression	& s -> gb		1630740	0					
ANR	1631762	UnaryOperator	&		1630740	0					
ANR	1631763	PtrMemberAccess	s -> gb		1630740	1					
ANR	1631764	Identifier	s		1630740	0					
ANR	1631765	Identifier	gb		1630740	1					
ANR	1631766	Argument	8		1630740	1					
ANR	1631767	PrimaryExpression	8		1630740	0					
ANR	1631768	IfStatement	if ( s -> crc_present )		1630740	14					
ANR	1631769	Condition	s -> crc_present	307:8:5757:5770	1630740	0	True				
ANR	1631770	PtrMemberAccess	s -> crc_present		1630740	0					
ANR	1631771	Identifier	s		1630740	0					
ANR	1631772	Identifier	crc_present		1630740	1					
ANR	1631773	CompoundStatement		305:24:5690:5690	1630740	1					
ANR	1631774	ExpressionStatement	"get_bits ( & s -> gb , 16 )"	309:8:5784:5804	1630740	0	True				
ANR	1631775	CallExpression	"get_bits ( & s -> gb , 16 )"		1630740	0					
ANR	1631776	Callee	get_bits		1630740	0					
ANR	1631777	Identifier	get_bits		1630740	0					
ANR	1631778	ArgumentList	& s -> gb		1630740	1					
ANR	1631779	Argument	& s -> gb		1630740	0					
ANR	1631780	UnaryOperationExpression	& s -> gb		1630740	0					
ANR	1631781	UnaryOperator	&		1630740	0					
ANR	1631782	PtrMemberAccess	s -> gb		1630740	1					
ANR	1631783	Identifier	s		1630740	0					
ANR	1631784	Identifier	gb		1630740	1					
ANR	1631785	Argument	16		1630740	1					
ANR	1631786	PrimaryExpression	16		1630740	0					
ANR	1631787	ForStatement	for ( j = base_channel ; j < s -> prim_channels ; j ++ )		1630740	15					
ANR	1631788	ForInit	j = base_channel ;	325:9:5924:5940	1630740	0	True				
ANR	1631789	AssignmentExpression	j = base_channel		1630740	0		=			
ANR	1631790	Identifier	j		1630740	0					
ANR	1631791	Identifier	base_channel		1630740	1					
ANR	1631792	Condition	j < s -> prim_channels	325:27:5942:5961	1630740	1	True				
ANR	1631793	RelationalExpression	j < s -> prim_channels		1630740	0		<			
ANR	1631794	Identifier	j		1630740	0					
ANR	1631795	PtrMemberAccess	s -> prim_channels		1630740	1					
ANR	1631796	Identifier	s		1630740	0					
ANR	1631797	Identifier	prim_channels		1630740	1					
ANR	1631798	PostIncDecOperationExpression	j ++	325:49:5964:5966	1630740	2	True				
ANR	1631799	Identifier	j		1630740	0					
ANR	1631800	IncDec	++		1630740	1					
ANR	1631801	ForStatement	for ( k = s -> vq_start_subband [ j ] ; k < s -> subband_activity [ j ] ; k ++ )		1630740	3					
ANR	1631802	ForInit	k = s -> vq_start_subband [ j ] ;	327:13:5983:6009	1630740	0	True				
ANR	1631803	AssignmentExpression	k = s -> vq_start_subband [ j ]		1630740	0		=			
ANR	1631804	Identifier	k		1630740	0					
ANR	1631805	ArrayIndexing	s -> vq_start_subband [ j ]		1630740	1					
ANR	1631806	PtrMemberAccess	s -> vq_start_subband		1630740	0					
ANR	1631807	Identifier	s		1630740	0					
ANR	1631808	Identifier	vq_start_subband		1630740	1					
ANR	1631809	Identifier	j		1630740	1					
ANR	1631810	Condition	k < s -> subband_activity [ j ]	327:41:6011:6036	1630740	1	True				
ANR	1631811	RelationalExpression	k < s -> subband_activity [ j ]		1630740	0		<			
ANR	1631812	Identifier	k		1630740	0					
ANR	1631813	ArrayIndexing	s -> subband_activity [ j ]		1630740	1					
ANR	1631814	PtrMemberAccess	s -> subband_activity		1630740	0					
ANR	1631815	Identifier	s		1630740	0					
ANR	1631816	Identifier	subband_activity		1630740	1					
ANR	1631817	Identifier	j		1630740	1					
ANR	1631818	PostIncDecOperationExpression	k ++	327:69:6039:6041	1630740	2	True				
ANR	1631819	Identifier	k		1630740	0					
ANR	1631820	IncDec	++		1630740	1					
ANR	1631821	ExpressionStatement	"s -> high_freq_vq [ j ] [ k ] = get_bits ( & s -> gb , 10 )"	331:12:6099:6143	1630740	3	True				
ANR	1631822	AssignmentExpression	"s -> high_freq_vq [ j ] [ k ] = get_bits ( & s -> gb , 10 )"		1630740	0		=			
ANR	1631823	ArrayIndexing	s -> high_freq_vq [ j ] [ k ]		1630740	0					
ANR	1631824	ArrayIndexing	s -> high_freq_vq [ j ]		1630740	0					
ANR	1631825	PtrMemberAccess	s -> high_freq_vq		1630740	0					
ANR	1631826	Identifier	s		1630740	0					
ANR	1631827	Identifier	high_freq_vq		1630740	1					
ANR	1631828	Identifier	j		1630740	1					
ANR	1631829	Identifier	k		1630740	1					
ANR	1631830	CallExpression	"get_bits ( & s -> gb , 10 )"		1630740	1					
ANR	1631831	Callee	get_bits		1630740	0					
ANR	1631832	Identifier	get_bits		1630740	0					
ANR	1631833	ArgumentList	& s -> gb		1630740	1					
ANR	1631834	Argument	& s -> gb		1630740	0					
ANR	1631835	UnaryOperationExpression	& s -> gb		1630740	0					
ANR	1631836	UnaryOperator	&		1630740	0					
ANR	1631837	PtrMemberAccess	s -> gb		1630740	1					
ANR	1631838	Identifier	s		1630740	0					
ANR	1631839	Identifier	gb		1630740	1					
ANR	1631840	Argument	10		1630740	1					
ANR	1631841	PrimaryExpression	10		1630740	0					
ANR	1631842	IfStatement	if ( ! base_channel && s -> lfe )		1630740	16					
ANR	1631843	Condition	! base_channel && s -> lfe	337:8:6193:6215	1630740	0	True				
ANR	1631844	AndExpression	! base_channel && s -> lfe		1630740	0		&&			
ANR	1631845	UnaryOperationExpression	! base_channel		1630740	0					
ANR	1631846	UnaryOperator	!		1630740	0					
ANR	1631847	Identifier	base_channel		1630740	1					
ANR	1631848	PtrMemberAccess	s -> lfe		1630740	1					
ANR	1631849	Identifier	s		1630740	0					
ANR	1631850	Identifier	lfe		1630740	1					
ANR	1631851	CompoundStatement		343:8:6333:6348	1630740	1					
ANR	1631852	IdentifierDeclStatement	int lfe_samples = 2 * s -> lfe * ( 4 + block_index ) ;	341:8:6256:6304	1630740	0	True				
ANR	1631853	IdentifierDecl	lfe_samples = 2 * s -> lfe * ( 4 + block_index )		1630740	0					
ANR	1631854	IdentifierDeclType	int		1630740	0					
ANR	1631855	Identifier	lfe_samples		1630740	1					
ANR	1631856	AssignmentExpression	lfe_samples = 2 * s -> lfe * ( 4 + block_index )		1630740	2		=			
ANR	1631857	Identifier	lfe_samples		1630740	0					
ANR	1631858	MultiplicativeExpression	2 * s -> lfe * ( 4 + block_index )		1630740	1		*			
ANR	1631859	PrimaryExpression	2		1630740	0					
ANR	1631860	MultiplicativeExpression	s -> lfe * ( 4 + block_index )		1630740	1		*			
ANR	1631861	PtrMemberAccess	s -> lfe		1630740	0					
ANR	1631862	Identifier	s		1630740	0					
ANR	1631863	Identifier	lfe		1630740	1					
ANR	1631864	AdditiveExpression	4 + block_index		1630740	1		+			
ANR	1631865	PrimaryExpression	4		1630740	0					
ANR	1631866	Identifier	block_index		1630740	1					
ANR	1631867	IdentifierDeclStatement	int lfe_end_sample = 2 * s -> lfe * ( 4 + block_index + s -> subsubframes [ s -> current_subframe ] ) ;	343:8:6315:6405	1630740	1	True				
ANR	1631868	IdentifierDecl	lfe_end_sample = 2 * s -> lfe * ( 4 + block_index + s -> subsubframes [ s -> current_subframe ] )		1630740	0					
ANR	1631869	IdentifierDeclType	int		1630740	0					
ANR	1631870	Identifier	lfe_end_sample		1630740	1					
ANR	1631871	AssignmentExpression	lfe_end_sample = 2 * s -> lfe * ( 4 + block_index + s -> subsubframes [ s -> current_subframe ] )		1630740	2		=			
ANR	1631872	Identifier	lfe_end_sample		1630740	0					
ANR	1631873	MultiplicativeExpression	2 * s -> lfe * ( 4 + block_index + s -> subsubframes [ s -> current_subframe ] )		1630740	1		*			
ANR	1631874	PrimaryExpression	2		1630740	0					
ANR	1631875	MultiplicativeExpression	s -> lfe * ( 4 + block_index + s -> subsubframes [ s -> current_subframe ] )		1630740	1		*			
ANR	1631876	PtrMemberAccess	s -> lfe		1630740	0					
ANR	1631877	Identifier	s		1630740	0					
ANR	1631878	Identifier	lfe		1630740	1					
ANR	1631879	AdditiveExpression	4 + block_index + s -> subsubframes [ s -> current_subframe ]		1630740	1		+			
ANR	1631880	PrimaryExpression	4		1630740	0					
ANR	1631881	AdditiveExpression	block_index + s -> subsubframes [ s -> current_subframe ]		1630740	1		+			
ANR	1631882	Identifier	block_index		1630740	0					
ANR	1631883	ArrayIndexing	s -> subsubframes [ s -> current_subframe ]		1630740	1					
ANR	1631884	PtrMemberAccess	s -> subsubframes		1630740	0					
ANR	1631885	Identifier	s		1630740	0					
ANR	1631886	Identifier	subsubframes		1630740	1					
ANR	1631887	PtrMemberAccess	s -> current_subframe		1630740	1					
ANR	1631888	Identifier	s		1630740	0					
ANR	1631889	Identifier	current_subframe		1630740	1					
ANR	1631890	IdentifierDeclStatement	float lfe_scale ;	345:8:6416:6431	1630740	2	True				
ANR	1631891	IdentifierDecl	lfe_scale		1630740	0					
ANR	1631892	IdentifierDeclType	float		1630740	0					
ANR	1631893	Identifier	lfe_scale		1630740	1					
ANR	1631894	ForStatement	for ( j = lfe_samples ; j < lfe_end_sample ; j ++ )		1630740	3					
ANR	1631895	ForInit	j = lfe_samples ;	349:13:6449:6464	1630740	0	True				
ANR	1631896	AssignmentExpression	j = lfe_samples		1630740	0		=			
ANR	1631897	Identifier	j		1630740	0					
ANR	1631898	Identifier	lfe_samples		1630740	1					
ANR	1631899	Condition	j < lfe_end_sample	349:30:6466:6483	1630740	1	True				
ANR	1631900	RelationalExpression	j < lfe_end_sample		1630740	0		<			
ANR	1631901	Identifier	j		1630740	0					
ANR	1631902	Identifier	lfe_end_sample		1630740	1					
ANR	1631903	PostIncDecOperationExpression	j ++	349:50:6486:6488	1630740	2	True				
ANR	1631904	Identifier	j		1630740	0					
ANR	1631905	IncDec	++		1630740	1					
ANR	1631906	CompoundStatement		347:55:6408:6408	1630740	3					
ANR	1631907	ExpressionStatement	"s -> lfe_data [ j ] = get_sbits ( & s -> gb , 8 )"	353:12:6543:6580	1630740	0	True				
ANR	1631908	AssignmentExpression	"s -> lfe_data [ j ] = get_sbits ( & s -> gb , 8 )"		1630740	0		=			
ANR	1631909	ArrayIndexing	s -> lfe_data [ j ]		1630740	0					
ANR	1631910	PtrMemberAccess	s -> lfe_data		1630740	0					
ANR	1631911	Identifier	s		1630740	0					
ANR	1631912	Identifier	lfe_data		1630740	1					
ANR	1631913	Identifier	j		1630740	1					
ANR	1631914	CallExpression	"get_sbits ( & s -> gb , 8 )"		1630740	1					
ANR	1631915	Callee	get_sbits		1630740	0					
ANR	1631916	Identifier	get_sbits		1630740	0					
ANR	1631917	ArgumentList	& s -> gb		1630740	1					
ANR	1631918	Argument	& s -> gb		1630740	0					
ANR	1631919	UnaryOperationExpression	& s -> gb		1630740	0					
ANR	1631920	UnaryOperator	&		1630740	0					
ANR	1631921	PtrMemberAccess	s -> gb		1630740	1					
ANR	1631922	Identifier	s		1630740	0					
ANR	1631923	Identifier	gb		1630740	1					
ANR	1631924	Argument	8		1630740	1					
ANR	1631925	PrimaryExpression	8		1630740	0					
ANR	1631926	ExpressionStatement	"s -> lfe_scale_factor = scale_factor_quant7 [ get_bits ( & s -> gb , 8 ) ]"	361:8:6638:6700	1630740	4	True				
ANR	1631927	AssignmentExpression	"s -> lfe_scale_factor = scale_factor_quant7 [ get_bits ( & s -> gb , 8 ) ]"		1630740	0		=			
ANR	1631928	PtrMemberAccess	s -> lfe_scale_factor		1630740	0					
ANR	1631929	Identifier	s		1630740	0					
ANR	1631930	Identifier	lfe_scale_factor		1630740	1					
ANR	1631931	ArrayIndexing	"scale_factor_quant7 [ get_bits ( & s -> gb , 8 ) ]"		1630740	1					
ANR	1631932	Identifier	scale_factor_quant7		1630740	0					
ANR	1631933	CallExpression	"get_bits ( & s -> gb , 8 )"		1630740	1					
ANR	1631934	Callee	get_bits		1630740	0					
ANR	1631935	Identifier	get_bits		1630740	0					
ANR	1631936	ArgumentList	& s -> gb		1630740	1					
ANR	1631937	Argument	& s -> gb		1630740	0					
ANR	1631938	UnaryOperationExpression	& s -> gb		1630740	0					
ANR	1631939	UnaryOperator	&		1630740	0					
ANR	1631940	PtrMemberAccess	s -> gb		1630740	1					
ANR	1631941	Identifier	s		1630740	0					
ANR	1631942	Identifier	gb		1630740	1					
ANR	1631943	Argument	8		1630740	1					
ANR	1631944	PrimaryExpression	8		1630740	0					
ANR	1631945	ExpressionStatement	lfe_scale = 0.035 * s -> lfe_scale_factor	367:8:6766:6805	1630740	5	True				
ANR	1631946	AssignmentExpression	lfe_scale = 0.035 * s -> lfe_scale_factor		1630740	0		=			
ANR	1631947	Identifier	lfe_scale		1630740	0					
ANR	1631948	MultiplicativeExpression	0.035 * s -> lfe_scale_factor		1630740	1		*			
ANR	1631949	PrimaryExpression	0.035		1630740	0					
ANR	1631950	PtrMemberAccess	s -> lfe_scale_factor		1630740	1					
ANR	1631951	Identifier	s		1630740	0					
ANR	1631952	Identifier	lfe_scale_factor		1630740	1					
ANR	1631953	ForStatement	for ( j = lfe_samples ; j < lfe_end_sample ; j ++ )		1630740	6					
ANR	1631954	ForInit	j = lfe_samples ;	371:13:6823:6838	1630740	0	True				
ANR	1631955	AssignmentExpression	j = lfe_samples		1630740	0		=			
ANR	1631956	Identifier	j		1630740	0					
ANR	1631957	Identifier	lfe_samples		1630740	1					
ANR	1631958	Condition	j < lfe_end_sample	371:30:6840:6857	1630740	1	True				
ANR	1631959	RelationalExpression	j < lfe_end_sample		1630740	0		<			
ANR	1631960	Identifier	j		1630740	0					
ANR	1631961	Identifier	lfe_end_sample		1630740	1					
ANR	1631962	PostIncDecOperationExpression	j ++	371:50:6860:6862	1630740	2	True				
ANR	1631963	Identifier	j		1630740	0					
ANR	1631964	IncDec	++		1630740	1					
ANR	1631965	ExpressionStatement	s -> lfe_data [ j ] *= lfe_scale	373:12:6878:6905	1630740	3	True				
ANR	1631966	AssignmentExpression	s -> lfe_data [ j ] *= lfe_scale		1630740	0		*=			
ANR	1631967	ArrayIndexing	s -> lfe_data [ j ]		1630740	0					
ANR	1631968	PtrMemberAccess	s -> lfe_data		1630740	0					
ANR	1631969	Identifier	s		1630740	0					
ANR	1631970	Identifier	lfe_data		1630740	1					
ANR	1631971	Identifier	j		1630740	1					
ANR	1631972	Identifier	lfe_scale		1630740	1					
ANR	1631973	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_DEBUG , ""subsubframes: %i\\n"" , s -> subsubframes [ s -> current_subframe ] )"	381:4:6935:7037	1630740	17	True				
ANR	1631974	CallExpression	"av_log ( s -> avctx , AV_LOG_DEBUG , ""subsubframes: %i\\n"" , s -> subsubframes [ s -> current_subframe ] )"		1630740	0					
ANR	1631975	Callee	av_log		1630740	0					
ANR	1631976	Identifier	av_log		1630740	0					
ANR	1631977	ArgumentList	s -> avctx		1630740	1					
ANR	1631978	Argument	s -> avctx		1630740	0					
ANR	1631979	PtrMemberAccess	s -> avctx		1630740	0					
ANR	1631980	Identifier	s		1630740	0					
ANR	1631981	Identifier	avctx		1630740	1					
ANR	1631982	Argument	AV_LOG_DEBUG		1630740	1					
ANR	1631983	Identifier	AV_LOG_DEBUG		1630740	0					
ANR	1631984	Argument	"""subsubframes: %i\\n"""		1630740	2					
ANR	1631985	PrimaryExpression	"""subsubframes: %i\\n"""		1630740	0					
ANR	1631986	Argument	s -> subsubframes [ s -> current_subframe ]		1630740	3					
ANR	1631987	ArrayIndexing	s -> subsubframes [ s -> current_subframe ]		1630740	0					
ANR	1631988	PtrMemberAccess	s -> subsubframes		1630740	0					
ANR	1631989	Identifier	s		1630740	0					
ANR	1631990	Identifier	subsubframes		1630740	1					
ANR	1631991	PtrMemberAccess	s -> current_subframe		1630740	1					
ANR	1631992	Identifier	s		1630740	0					
ANR	1631993	Identifier	current_subframe		1630740	1					
ANR	1631994	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_DEBUG , ""partial samples: %i\\n"" , s -> partial_samples [ s -> current_subframe ] )"	385:4:7044:7152	1630740	18	True				
ANR	1631995	CallExpression	"av_log ( s -> avctx , AV_LOG_DEBUG , ""partial samples: %i\\n"" , s -> partial_samples [ s -> current_subframe ] )"		1630740	0					
ANR	1631996	Callee	av_log		1630740	0					
ANR	1631997	Identifier	av_log		1630740	0					
ANR	1631998	ArgumentList	s -> avctx		1630740	1					
ANR	1631999	Argument	s -> avctx		1630740	0					
ANR	1632000	PtrMemberAccess	s -> avctx		1630740	0					
ANR	1632001	Identifier	s		1630740	0					
ANR	1632002	Identifier	avctx		1630740	1					
ANR	1632003	Argument	AV_LOG_DEBUG		1630740	1					
ANR	1632004	Identifier	AV_LOG_DEBUG		1630740	0					
ANR	1632005	Argument	"""partial samples: %i\\n"""		1630740	2					
ANR	1632006	PrimaryExpression	"""partial samples: %i\\n"""		1630740	0					
ANR	1632007	Argument	s -> partial_samples [ s -> current_subframe ]		1630740	3					
ANR	1632008	ArrayIndexing	s -> partial_samples [ s -> current_subframe ]		1630740	0					
ANR	1632009	PtrMemberAccess	s -> partial_samples		1630740	0					
ANR	1632010	Identifier	s		1630740	0					
ANR	1632011	Identifier	partial_samples		1630740	1					
ANR	1632012	PtrMemberAccess	s -> current_subframe		1630740	1					
ANR	1632013	Identifier	s		1630740	0					
ANR	1632014	Identifier	current_subframe		1630740	1					
ANR	1632015	ForStatement	for ( j = base_channel ; j < s -> prim_channels ; j ++ )		1630740	19					
ANR	1632016	ForInit	j = base_channel ;	391:9:7166:7182	1630740	0	True				
ANR	1632017	AssignmentExpression	j = base_channel		1630740	0		=			
ANR	1632018	Identifier	j		1630740	0					
ANR	1632019	Identifier	base_channel		1630740	1					
ANR	1632020	Condition	j < s -> prim_channels	391:27:7184:7203	1630740	1	True				
ANR	1632021	RelationalExpression	j < s -> prim_channels		1630740	0		<			
ANR	1632022	Identifier	j		1630740	0					
ANR	1632023	PtrMemberAccess	s -> prim_channels		1630740	1					
ANR	1632024	Identifier	s		1630740	0					
ANR	1632025	Identifier	prim_channels		1630740	1					
ANR	1632026	PostIncDecOperationExpression	j ++	391:49:7206:7208	1630740	2	True				
ANR	1632027	Identifier	j		1630740	0					
ANR	1632028	IncDec	++		1630740	1					
ANR	1632029	CompoundStatement		389:54:7128:7128	1630740	3					
ANR	1632030	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_DEBUG , ""prediction mode:"" )"	393:8:7222:7272	1630740	0	True				
ANR	1632031	CallExpression	"av_log ( s -> avctx , AV_LOG_DEBUG , ""prediction mode:"" )"		1630740	0					
ANR	1632032	Callee	av_log		1630740	0					
ANR	1632033	Identifier	av_log		1630740	0					
ANR	1632034	ArgumentList	s -> avctx		1630740	1					
ANR	1632035	Argument	s -> avctx		1630740	0					
ANR	1632036	PtrMemberAccess	s -> avctx		1630740	0					
ANR	1632037	Identifier	s		1630740	0					
ANR	1632038	Identifier	avctx		1630740	1					
ANR	1632039	Argument	AV_LOG_DEBUG		1630740	1					
ANR	1632040	Identifier	AV_LOG_DEBUG		1630740	0					
ANR	1632041	Argument	"""prediction mode:"""		1630740	2					
ANR	1632042	PrimaryExpression	"""prediction mode:"""		1630740	0					
ANR	1632043	ForStatement	for ( k = 0 ; k < s -> subband_activity [ j ] ; k ++ )		1630740	1					
ANR	1632044	ForInit	k = 0 ;	395:13:7288:7293	1630740	0	True				
ANR	1632045	AssignmentExpression	k = 0		1630740	0		=			
ANR	1632046	Identifier	k		1630740	0					
ANR	1632047	PrimaryExpression	0		1630740	1					
ANR	1632048	Condition	k < s -> subband_activity [ j ]	395:20:7295:7320	1630740	1	True				
ANR	1632049	RelationalExpression	k < s -> subband_activity [ j ]		1630740	0		<			
ANR	1632050	Identifier	k		1630740	0					
ANR	1632051	ArrayIndexing	s -> subband_activity [ j ]		1630740	1					
ANR	1632052	PtrMemberAccess	s -> subband_activity		1630740	0					
ANR	1632053	Identifier	s		1630740	0					
ANR	1632054	Identifier	subband_activity		1630740	1					
ANR	1632055	Identifier	j		1630740	1					
ANR	1632056	PostIncDecOperationExpression	k ++	395:48:7323:7325	1630740	2	True				
ANR	1632057	Identifier	k		1630740	0					
ANR	1632058	IncDec	++		1630740	1					
ANR	1632059	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_DEBUG , "" %i"" , s -> prediction_mode [ j ] [ k ] )"	397:12:7341:7404	1630740	3	True				
ANR	1632060	CallExpression	"av_log ( s -> avctx , AV_LOG_DEBUG , "" %i"" , s -> prediction_mode [ j ] [ k ] )"		1630740	0					
ANR	1632061	Callee	av_log		1630740	0					
ANR	1632062	Identifier	av_log		1630740	0					
ANR	1632063	ArgumentList	s -> avctx		1630740	1					
ANR	1632064	Argument	s -> avctx		1630740	0					
ANR	1632065	PtrMemberAccess	s -> avctx		1630740	0					
ANR	1632066	Identifier	s		1630740	0					
ANR	1632067	Identifier	avctx		1630740	1					
ANR	1632068	Argument	AV_LOG_DEBUG		1630740	1					
ANR	1632069	Identifier	AV_LOG_DEBUG		1630740	0					
ANR	1632070	Argument	""" %i"""		1630740	2					
ANR	1632071	PrimaryExpression	""" %i"""		1630740	0					
ANR	1632072	Argument	s -> prediction_mode [ j ] [ k ]		1630740	3					
ANR	1632073	ArrayIndexing	s -> prediction_mode [ j ] [ k ]		1630740	0					
ANR	1632074	ArrayIndexing	s -> prediction_mode [ j ]		1630740	0					
ANR	1632075	PtrMemberAccess	s -> prediction_mode		1630740	0					
ANR	1632076	Identifier	s		1630740	0					
ANR	1632077	Identifier	prediction_mode		1630740	1					
ANR	1632078	Identifier	j		1630740	1					
ANR	1632079	Identifier	k		1630740	1					
ANR	1632080	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_DEBUG , ""\\n"" )"	399:8:7415:7451	1630740	2	True				
ANR	1632081	CallExpression	"av_log ( s -> avctx , AV_LOG_DEBUG , ""\\n"" )"		1630740	0					
ANR	1632082	Callee	av_log		1630740	0					
ANR	1632083	Identifier	av_log		1630740	0					
ANR	1632084	ArgumentList	s -> avctx		1630740	1					
ANR	1632085	Argument	s -> avctx		1630740	0					
ANR	1632086	PtrMemberAccess	s -> avctx		1630740	0					
ANR	1632087	Identifier	s		1630740	0					
ANR	1632088	Identifier	avctx		1630740	1					
ANR	1632089	Argument	AV_LOG_DEBUG		1630740	1					
ANR	1632090	Identifier	AV_LOG_DEBUG		1630740	0					
ANR	1632091	Argument	"""\\n"""		1630740	2					
ANR	1632092	PrimaryExpression	"""\\n"""		1630740	0					
ANR	1632093	ForStatement	for ( j = base_channel ; j < s -> prim_channels ; j ++ )		1630740	20					
ANR	1632094	ForInit	j = base_channel ;	403:9:7470:7486	1630740	0	True				
ANR	1632095	AssignmentExpression	j = base_channel		1630740	0		=			
ANR	1632096	Identifier	j		1630740	0					
ANR	1632097	Identifier	base_channel		1630740	1					
ANR	1632098	Condition	j < s -> prim_channels	403:27:7488:7507	1630740	1	True				
ANR	1632099	RelationalExpression	j < s -> prim_channels		1630740	0		<			
ANR	1632100	Identifier	j		1630740	0					
ANR	1632101	PtrMemberAccess	s -> prim_channels		1630740	1					
ANR	1632102	Identifier	s		1630740	0					
ANR	1632103	Identifier	prim_channels		1630740	1					
ANR	1632104	PostIncDecOperationExpression	j ++	403:49:7510:7512	1630740	2	True				
ANR	1632105	Identifier	j		1630740	0					
ANR	1632106	IncDec	++		1630740	1					
ANR	1632107	CompoundStatement		401:54:7432:7432	1630740	3					
ANR	1632108	ForStatement	for ( k = 0 ; k < s -> subband_activity [ j ] ; k ++ )		1630740	0					
ANR	1632109	ForInit	k = 0 ;	405:13:7531:7536	1630740	0	True				
ANR	1632110	AssignmentExpression	k = 0		1630740	0		=			
ANR	1632111	Identifier	k		1630740	0					
ANR	1632112	PrimaryExpression	0		1630740	1					
ANR	1632113	Condition	k < s -> subband_activity [ j ]	405:20:7538:7563	1630740	1	True				
ANR	1632114	RelationalExpression	k < s -> subband_activity [ j ]		1630740	0		<			
ANR	1632115	Identifier	k		1630740	0					
ANR	1632116	ArrayIndexing	s -> subband_activity [ j ]		1630740	1					
ANR	1632117	PtrMemberAccess	s -> subband_activity		1630740	0					
ANR	1632118	Identifier	s		1630740	0					
ANR	1632119	Identifier	subband_activity		1630740	1					
ANR	1632120	Identifier	j		1630740	1					
ANR	1632121	PostIncDecOperationExpression	k ++	405:48:7566:7568	1630740	2	True				
ANR	1632122	Identifier	k		1630740	0					
ANR	1632123	IncDec	++		1630740	1					
ANR	1632124	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_DEBUG , ""prediction coefs: %f, %f, %f, %f\\n"" , ( float ) adpcm_vb [ s -> prediction_vq [ j ] [ k ] ] [ 0 ] / 8192 , ( float ) adpcm_vb [ s -> prediction_vq [ j ] [ k ] ] [ 1 ] / 8192 , ( float ) adpcm_vb [ s -> prediction_vq [ j ] [ k ] ] [ 2 ] / 8192 , ( float ) adpcm_vb [ s -> prediction_vq [ j ] [ k ] ] [ 3 ] / 8192 )"	407:12:7584:7960	1630740	3	True				
ANR	1632125	CallExpression	"av_log ( s -> avctx , AV_LOG_DEBUG , ""prediction coefs: %f, %f, %f, %f\\n"" , ( float ) adpcm_vb [ s -> prediction_vq [ j ] [ k ] ] [ 0 ] / 8192 , ( float ) adpcm_vb [ s -> prediction_vq [ j ] [ k ] ] [ 1 ] / 8192 , ( float ) adpcm_vb [ s -> prediction_vq [ j ] [ k ] ] [ 2 ] / 8192 , ( float ) adpcm_vb [ s -> prediction_vq [ j ] [ k ] ] [ 3 ] / 8192 )"		1630740	0					
ANR	1632126	Callee	av_log		1630740	0					
ANR	1632127	Identifier	av_log		1630740	0					
ANR	1632128	ArgumentList	s -> avctx		1630740	1					
ANR	1632129	Argument	s -> avctx		1630740	0					
ANR	1632130	PtrMemberAccess	s -> avctx		1630740	0					
ANR	1632131	Identifier	s		1630740	0					
ANR	1632132	Identifier	avctx		1630740	1					
ANR	1632133	Argument	AV_LOG_DEBUG		1630740	1					
ANR	1632134	Identifier	AV_LOG_DEBUG		1630740	0					
ANR	1632135	Argument	"""prediction coefs: %f, %f, %f, %f\\n"""		1630740	2					
ANR	1632136	PrimaryExpression	"""prediction coefs: %f, %f, %f, %f\\n"""		1630740	0					
ANR	1632137	Argument	( float ) adpcm_vb [ s -> prediction_vq [ j ] [ k ] ] [ 0 ] / 8192		1630740	3					
ANR	1632138	MultiplicativeExpression	( float ) adpcm_vb [ s -> prediction_vq [ j ] [ k ] ] [ 0 ] / 8192		1630740	0		/			
ANR	1632139	CastExpression	( float ) adpcm_vb [ s -> prediction_vq [ j ] [ k ] ] [ 0 ]		1630740	0					
ANR	1632140	CastTarget	float		1630740	0					
ANR	1632141	ArrayIndexing	adpcm_vb [ s -> prediction_vq [ j ] [ k ] ] [ 0 ]		1630740	1					
ANR	1632142	ArrayIndexing	adpcm_vb [ s -> prediction_vq [ j ] [ k ] ]		1630740	0					
ANR	1632143	Identifier	adpcm_vb		1630740	0					
ANR	1632144	ArrayIndexing	s -> prediction_vq [ j ] [ k ]		1630740	1					
ANR	1632145	ArrayIndexing	s -> prediction_vq [ j ]		1630740	0					
ANR	1632146	PtrMemberAccess	s -> prediction_vq		1630740	0					
ANR	1632147	Identifier	s		1630740	0					
ANR	1632148	Identifier	prediction_vq		1630740	1					
ANR	1632149	Identifier	j		1630740	1					
ANR	1632150	Identifier	k		1630740	1					
ANR	1632151	PrimaryExpression	0		1630740	1					
ANR	1632152	PrimaryExpression	8192		1630740	1					
ANR	1632153	Argument	( float ) adpcm_vb [ s -> prediction_vq [ j ] [ k ] ] [ 1 ] / 8192		1630740	4					
ANR	1632154	MultiplicativeExpression	( float ) adpcm_vb [ s -> prediction_vq [ j ] [ k ] ] [ 1 ] / 8192		1630740	0		/			
ANR	1632155	CastExpression	( float ) adpcm_vb [ s -> prediction_vq [ j ] [ k ] ] [ 1 ]		1630740	0					
ANR	1632156	CastTarget	float		1630740	0					
ANR	1632157	ArrayIndexing	adpcm_vb [ s -> prediction_vq [ j ] [ k ] ] [ 1 ]		1630740	1					
ANR	1632158	ArrayIndexing	adpcm_vb [ s -> prediction_vq [ j ] [ k ] ]		1630740	0					
ANR	1632159	Identifier	adpcm_vb		1630740	0					
ANR	1632160	ArrayIndexing	s -> prediction_vq [ j ] [ k ]		1630740	1					
ANR	1632161	ArrayIndexing	s -> prediction_vq [ j ]		1630740	0					
ANR	1632162	PtrMemberAccess	s -> prediction_vq		1630740	0					
ANR	1632163	Identifier	s		1630740	0					
ANR	1632164	Identifier	prediction_vq		1630740	1					
ANR	1632165	Identifier	j		1630740	1					
ANR	1632166	Identifier	k		1630740	1					
ANR	1632167	PrimaryExpression	1		1630740	1					
ANR	1632168	PrimaryExpression	8192		1630740	1					
ANR	1632169	Argument	( float ) adpcm_vb [ s -> prediction_vq [ j ] [ k ] ] [ 2 ] / 8192		1630740	5					
ANR	1632170	MultiplicativeExpression	( float ) adpcm_vb [ s -> prediction_vq [ j ] [ k ] ] [ 2 ] / 8192		1630740	0		/			
ANR	1632171	CastExpression	( float ) adpcm_vb [ s -> prediction_vq [ j ] [ k ] ] [ 2 ]		1630740	0					
ANR	1632172	CastTarget	float		1630740	0					
ANR	1632173	ArrayIndexing	adpcm_vb [ s -> prediction_vq [ j ] [ k ] ] [ 2 ]		1630740	1					
ANR	1632174	ArrayIndexing	adpcm_vb [ s -> prediction_vq [ j ] [ k ] ]		1630740	0					
ANR	1632175	Identifier	adpcm_vb		1630740	0					
ANR	1632176	ArrayIndexing	s -> prediction_vq [ j ] [ k ]		1630740	1					
ANR	1632177	ArrayIndexing	s -> prediction_vq [ j ]		1630740	0					
ANR	1632178	PtrMemberAccess	s -> prediction_vq		1630740	0					
ANR	1632179	Identifier	s		1630740	0					
ANR	1632180	Identifier	prediction_vq		1630740	1					
ANR	1632181	Identifier	j		1630740	1					
ANR	1632182	Identifier	k		1630740	1					
ANR	1632183	PrimaryExpression	2		1630740	1					
ANR	1632184	PrimaryExpression	8192		1630740	1					
ANR	1632185	Argument	( float ) adpcm_vb [ s -> prediction_vq [ j ] [ k ] ] [ 3 ] / 8192		1630740	6					
ANR	1632186	MultiplicativeExpression	( float ) adpcm_vb [ s -> prediction_vq [ j ] [ k ] ] [ 3 ] / 8192		1630740	0		/			
ANR	1632187	CastExpression	( float ) adpcm_vb [ s -> prediction_vq [ j ] [ k ] ] [ 3 ]		1630740	0					
ANR	1632188	CastTarget	float		1630740	0					
ANR	1632189	ArrayIndexing	adpcm_vb [ s -> prediction_vq [ j ] [ k ] ] [ 3 ]		1630740	1					
ANR	1632190	ArrayIndexing	adpcm_vb [ s -> prediction_vq [ j ] [ k ] ]		1630740	0					
ANR	1632191	Identifier	adpcm_vb		1630740	0					
ANR	1632192	ArrayIndexing	s -> prediction_vq [ j ] [ k ]		1630740	1					
ANR	1632193	ArrayIndexing	s -> prediction_vq [ j ]		1630740	0					
ANR	1632194	PtrMemberAccess	s -> prediction_vq		1630740	0					
ANR	1632195	Identifier	s		1630740	0					
ANR	1632196	Identifier	prediction_vq		1630740	1					
ANR	1632197	Identifier	j		1630740	1					
ANR	1632198	Identifier	k		1630740	1					
ANR	1632199	PrimaryExpression	3		1630740	1					
ANR	1632200	PrimaryExpression	8192		1630740	1					
ANR	1632201	ForStatement	for ( j = base_channel ; j < s -> prim_channels ; j ++ )		1630740	21					
ANR	1632202	ForInit	j = base_channel ;	421:9:7979:7995	1630740	0	True				
ANR	1632203	AssignmentExpression	j = base_channel		1630740	0		=			
ANR	1632204	Identifier	j		1630740	0					
ANR	1632205	Identifier	base_channel		1630740	1					
ANR	1632206	Condition	j < s -> prim_channels	421:27:7997:8016	1630740	1	True				
ANR	1632207	RelationalExpression	j < s -> prim_channels		1630740	0		<			
ANR	1632208	Identifier	j		1630740	0					
ANR	1632209	PtrMemberAccess	s -> prim_channels		1630740	1					
ANR	1632210	Identifier	s		1630740	0					
ANR	1632211	Identifier	prim_channels		1630740	1					
ANR	1632212	PostIncDecOperationExpression	j ++	421:49:8019:8021	1630740	2	True				
ANR	1632213	Identifier	j		1630740	0					
ANR	1632214	IncDec	++		1630740	1					
ANR	1632215	CompoundStatement		419:54:7941:7941	1630740	3					
ANR	1632216	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_DEBUG , ""bitalloc index: "" )"	423:8:8035:8085	1630740	0	True				
ANR	1632217	CallExpression	"av_log ( s -> avctx , AV_LOG_DEBUG , ""bitalloc index: "" )"		1630740	0					
ANR	1632218	Callee	av_log		1630740	0					
ANR	1632219	Identifier	av_log		1630740	0					
ANR	1632220	ArgumentList	s -> avctx		1630740	1					
ANR	1632221	Argument	s -> avctx		1630740	0					
ANR	1632222	PtrMemberAccess	s -> avctx		1630740	0					
ANR	1632223	Identifier	s		1630740	0					
ANR	1632224	Identifier	avctx		1630740	1					
ANR	1632225	Argument	AV_LOG_DEBUG		1630740	1					
ANR	1632226	Identifier	AV_LOG_DEBUG		1630740	0					
ANR	1632227	Argument	"""bitalloc index: """		1630740	2					
ANR	1632228	PrimaryExpression	"""bitalloc index: """		1630740	0					
ANR	1632229	ForStatement	for ( k = 0 ; k < s -> vq_start_subband [ j ] ; k ++ )		1630740	1					
ANR	1632230	ForInit	k = 0 ;	425:13:8101:8106	1630740	0	True				
ANR	1632231	AssignmentExpression	k = 0		1630740	0		=			
ANR	1632232	Identifier	k		1630740	0					
ANR	1632233	PrimaryExpression	0		1630740	1					
ANR	1632234	Condition	k < s -> vq_start_subband [ j ]	425:20:8108:8133	1630740	1	True				
ANR	1632235	RelationalExpression	k < s -> vq_start_subband [ j ]		1630740	0		<			
ANR	1632236	Identifier	k		1630740	0					
ANR	1632237	ArrayIndexing	s -> vq_start_subband [ j ]		1630740	1					
ANR	1632238	PtrMemberAccess	s -> vq_start_subband		1630740	0					
ANR	1632239	Identifier	s		1630740	0					
ANR	1632240	Identifier	vq_start_subband		1630740	1					
ANR	1632241	Identifier	j		1630740	1					
ANR	1632242	PostIncDecOperationExpression	k ++	425:48:8136:8138	1630740	2	True				
ANR	1632243	Identifier	k		1630740	0					
ANR	1632244	IncDec	++		1630740	1					
ANR	1632245	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_DEBUG , ""%2.2i "" , s -> bitalloc [ j ] [ k ] )"	427:12:8154:8213	1630740	3	True				
ANR	1632246	CallExpression	"av_log ( s -> avctx , AV_LOG_DEBUG , ""%2.2i "" , s -> bitalloc [ j ] [ k ] )"		1630740	0					
ANR	1632247	Callee	av_log		1630740	0					
ANR	1632248	Identifier	av_log		1630740	0					
ANR	1632249	ArgumentList	s -> avctx		1630740	1					
ANR	1632250	Argument	s -> avctx		1630740	0					
ANR	1632251	PtrMemberAccess	s -> avctx		1630740	0					
ANR	1632252	Identifier	s		1630740	0					
ANR	1632253	Identifier	avctx		1630740	1					
ANR	1632254	Argument	AV_LOG_DEBUG		1630740	1					
ANR	1632255	Identifier	AV_LOG_DEBUG		1630740	0					
ANR	1632256	Argument	"""%2.2i """		1630740	2					
ANR	1632257	PrimaryExpression	"""%2.2i """		1630740	0					
ANR	1632258	Argument	s -> bitalloc [ j ] [ k ]		1630740	3					
ANR	1632259	ArrayIndexing	s -> bitalloc [ j ] [ k ]		1630740	0					
ANR	1632260	ArrayIndexing	s -> bitalloc [ j ]		1630740	0					
ANR	1632261	PtrMemberAccess	s -> bitalloc		1630740	0					
ANR	1632262	Identifier	s		1630740	0					
ANR	1632263	Identifier	bitalloc		1630740	1					
ANR	1632264	Identifier	j		1630740	1					
ANR	1632265	Identifier	k		1630740	1					
ANR	1632266	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_DEBUG , ""\\n"" )"	429:8:8224:8260	1630740	2	True				
ANR	1632267	CallExpression	"av_log ( s -> avctx , AV_LOG_DEBUG , ""\\n"" )"		1630740	0					
ANR	1632268	Callee	av_log		1630740	0					
ANR	1632269	Identifier	av_log		1630740	0					
ANR	1632270	ArgumentList	s -> avctx		1630740	1					
ANR	1632271	Argument	s -> avctx		1630740	0					
ANR	1632272	PtrMemberAccess	s -> avctx		1630740	0					
ANR	1632273	Identifier	s		1630740	0					
ANR	1632274	Identifier	avctx		1630740	1					
ANR	1632275	Argument	AV_LOG_DEBUG		1630740	1					
ANR	1632276	Identifier	AV_LOG_DEBUG		1630740	0					
ANR	1632277	Argument	"""\\n"""		1630740	2					
ANR	1632278	PrimaryExpression	"""\\n"""		1630740	0					
ANR	1632279	ForStatement	for ( j = base_channel ; j < s -> prim_channels ; j ++ )		1630740	22					
ANR	1632280	ForInit	j = base_channel ;	433:9:8279:8295	1630740	0	True				
ANR	1632281	AssignmentExpression	j = base_channel		1630740	0		=			
ANR	1632282	Identifier	j		1630740	0					
ANR	1632283	Identifier	base_channel		1630740	1					
ANR	1632284	Condition	j < s -> prim_channels	433:27:8297:8316	1630740	1	True				
ANR	1632285	RelationalExpression	j < s -> prim_channels		1630740	0		<			
ANR	1632286	Identifier	j		1630740	0					
ANR	1632287	PtrMemberAccess	s -> prim_channels		1630740	1					
ANR	1632288	Identifier	s		1630740	0					
ANR	1632289	Identifier	prim_channels		1630740	1					
ANR	1632290	PostIncDecOperationExpression	j ++	433:49:8319:8321	1630740	2	True				
ANR	1632291	Identifier	j		1630740	0					
ANR	1632292	IncDec	++		1630740	1					
ANR	1632293	CompoundStatement		431:54:8241:8241	1630740	3					
ANR	1632294	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_DEBUG , ""Transition mode:"" )"	435:8:8335:8385	1630740	0	True				
ANR	1632295	CallExpression	"av_log ( s -> avctx , AV_LOG_DEBUG , ""Transition mode:"" )"		1630740	0					
ANR	1632296	Callee	av_log		1630740	0					
ANR	1632297	Identifier	av_log		1630740	0					
ANR	1632298	ArgumentList	s -> avctx		1630740	1					
ANR	1632299	Argument	s -> avctx		1630740	0					
ANR	1632300	PtrMemberAccess	s -> avctx		1630740	0					
ANR	1632301	Identifier	s		1630740	0					
ANR	1632302	Identifier	avctx		1630740	1					
ANR	1632303	Argument	AV_LOG_DEBUG		1630740	1					
ANR	1632304	Identifier	AV_LOG_DEBUG		1630740	0					
ANR	1632305	Argument	"""Transition mode:"""		1630740	2					
ANR	1632306	PrimaryExpression	"""Transition mode:"""		1630740	0					
ANR	1632307	ForStatement	for ( k = 0 ; k < s -> subband_activity [ j ] ; k ++ )		1630740	1					
ANR	1632308	ForInit	k = 0 ;	437:13:8401:8406	1630740	0	True				
ANR	1632309	AssignmentExpression	k = 0		1630740	0		=			
ANR	1632310	Identifier	k		1630740	0					
ANR	1632311	PrimaryExpression	0		1630740	1					
ANR	1632312	Condition	k < s -> subband_activity [ j ]	437:20:8408:8433	1630740	1	True				
ANR	1632313	RelationalExpression	k < s -> subband_activity [ j ]		1630740	0		<			
ANR	1632314	Identifier	k		1630740	0					
ANR	1632315	ArrayIndexing	s -> subband_activity [ j ]		1630740	1					
ANR	1632316	PtrMemberAccess	s -> subband_activity		1630740	0					
ANR	1632317	Identifier	s		1630740	0					
ANR	1632318	Identifier	subband_activity		1630740	1					
ANR	1632319	Identifier	j		1630740	1					
ANR	1632320	PostIncDecOperationExpression	k ++	437:48:8436:8438	1630740	2	True				
ANR	1632321	Identifier	k		1630740	0					
ANR	1632322	IncDec	++		1630740	1					
ANR	1632323	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_DEBUG , "" %i"" , s -> transition_mode [ j ] [ k ] )"	439:12:8454:8517	1630740	3	True				
ANR	1632324	CallExpression	"av_log ( s -> avctx , AV_LOG_DEBUG , "" %i"" , s -> transition_mode [ j ] [ k ] )"		1630740	0					
ANR	1632325	Callee	av_log		1630740	0					
ANR	1632326	Identifier	av_log		1630740	0					
ANR	1632327	ArgumentList	s -> avctx		1630740	1					
ANR	1632328	Argument	s -> avctx		1630740	0					
ANR	1632329	PtrMemberAccess	s -> avctx		1630740	0					
ANR	1632330	Identifier	s		1630740	0					
ANR	1632331	Identifier	avctx		1630740	1					
ANR	1632332	Argument	AV_LOG_DEBUG		1630740	1					
ANR	1632333	Identifier	AV_LOG_DEBUG		1630740	0					
ANR	1632334	Argument	""" %i"""		1630740	2					
ANR	1632335	PrimaryExpression	""" %i"""		1630740	0					
ANR	1632336	Argument	s -> transition_mode [ j ] [ k ]		1630740	3					
ANR	1632337	ArrayIndexing	s -> transition_mode [ j ] [ k ]		1630740	0					
ANR	1632338	ArrayIndexing	s -> transition_mode [ j ]		1630740	0					
ANR	1632339	PtrMemberAccess	s -> transition_mode		1630740	0					
ANR	1632340	Identifier	s		1630740	0					
ANR	1632341	Identifier	transition_mode		1630740	1					
ANR	1632342	Identifier	j		1630740	1					
ANR	1632343	Identifier	k		1630740	1					
ANR	1632344	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_DEBUG , ""\\n"" )"	441:8:8528:8564	1630740	2	True				
ANR	1632345	CallExpression	"av_log ( s -> avctx , AV_LOG_DEBUG , ""\\n"" )"		1630740	0					
ANR	1632346	Callee	av_log		1630740	0					
ANR	1632347	Identifier	av_log		1630740	0					
ANR	1632348	ArgumentList	s -> avctx		1630740	1					
ANR	1632349	Argument	s -> avctx		1630740	0					
ANR	1632350	PtrMemberAccess	s -> avctx		1630740	0					
ANR	1632351	Identifier	s		1630740	0					
ANR	1632352	Identifier	avctx		1630740	1					
ANR	1632353	Argument	AV_LOG_DEBUG		1630740	1					
ANR	1632354	Identifier	AV_LOG_DEBUG		1630740	0					
ANR	1632355	Argument	"""\\n"""		1630740	2					
ANR	1632356	PrimaryExpression	"""\\n"""		1630740	0					
ANR	1632357	ForStatement	for ( j = base_channel ; j < s -> prim_channels ; j ++ )		1630740	23					
ANR	1632358	ForInit	j = base_channel ;	445:9:8583:8599	1630740	0	True				
ANR	1632359	AssignmentExpression	j = base_channel		1630740	0		=			
ANR	1632360	Identifier	j		1630740	0					
ANR	1632361	Identifier	base_channel		1630740	1					
ANR	1632362	Condition	j < s -> prim_channels	445:27:8601:8620	1630740	1	True				
ANR	1632363	RelationalExpression	j < s -> prim_channels		1630740	0		<			
ANR	1632364	Identifier	j		1630740	0					
ANR	1632365	PtrMemberAccess	s -> prim_channels		1630740	1					
ANR	1632366	Identifier	s		1630740	0					
ANR	1632367	Identifier	prim_channels		1630740	1					
ANR	1632368	PostIncDecOperationExpression	j ++	445:49:8623:8625	1630740	2	True				
ANR	1632369	Identifier	j		1630740	0					
ANR	1632370	IncDec	++		1630740	1					
ANR	1632371	CompoundStatement		443:54:8545:8545	1630740	3					
ANR	1632372	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_DEBUG , ""Scale factor:"" )"	447:8:8639:8686	1630740	0	True				
ANR	1632373	CallExpression	"av_log ( s -> avctx , AV_LOG_DEBUG , ""Scale factor:"" )"		1630740	0					
ANR	1632374	Callee	av_log		1630740	0					
ANR	1632375	Identifier	av_log		1630740	0					
ANR	1632376	ArgumentList	s -> avctx		1630740	1					
ANR	1632377	Argument	s -> avctx		1630740	0					
ANR	1632378	PtrMemberAccess	s -> avctx		1630740	0					
ANR	1632379	Identifier	s		1630740	0					
ANR	1632380	Identifier	avctx		1630740	1					
ANR	1632381	Argument	AV_LOG_DEBUG		1630740	1					
ANR	1632382	Identifier	AV_LOG_DEBUG		1630740	0					
ANR	1632383	Argument	"""Scale factor:"""		1630740	2					
ANR	1632384	PrimaryExpression	"""Scale factor:"""		1630740	0					
ANR	1632385	ForStatement	for ( k = 0 ; k < s -> subband_activity [ j ] ; k ++ )		1630740	1					
ANR	1632386	ForInit	k = 0 ;	449:13:8702:8707	1630740	0	True				
ANR	1632387	AssignmentExpression	k = 0		1630740	0		=			
ANR	1632388	Identifier	k		1630740	0					
ANR	1632389	PrimaryExpression	0		1630740	1					
ANR	1632390	Condition	k < s -> subband_activity [ j ]	449:20:8709:8734	1630740	1	True				
ANR	1632391	RelationalExpression	k < s -> subband_activity [ j ]		1630740	0		<			
ANR	1632392	Identifier	k		1630740	0					
ANR	1632393	ArrayIndexing	s -> subband_activity [ j ]		1630740	1					
ANR	1632394	PtrMemberAccess	s -> subband_activity		1630740	0					
ANR	1632395	Identifier	s		1630740	0					
ANR	1632396	Identifier	subband_activity		1630740	1					
ANR	1632397	Identifier	j		1630740	1					
ANR	1632398	PostIncDecOperationExpression	k ++	449:48:8737:8739	1630740	2	True				
ANR	1632399	Identifier	k		1630740	0					
ANR	1632400	IncDec	++		1630740	1					
ANR	1632401	CompoundStatement		447:53:8659:8659	1630740	3					
ANR	1632402	IfStatement	if ( k >= s -> vq_start_subband [ j ] || s -> bitalloc [ j ] [ k ] > 0 )		1630740	0					
ANR	1632403	Condition	k >= s -> vq_start_subband [ j ] || s -> bitalloc [ j ] [ k ] > 0	451:16:8761:8812	1630740	0	True				
ANR	1632404	OrExpression	k >= s -> vq_start_subband [ j ] || s -> bitalloc [ j ] [ k ] > 0		1630740	0		||			
ANR	1632405	RelationalExpression	k >= s -> vq_start_subband [ j ]		1630740	0		>=			
ANR	1632406	Identifier	k		1630740	0					
ANR	1632407	ArrayIndexing	s -> vq_start_subband [ j ]		1630740	1					
ANR	1632408	PtrMemberAccess	s -> vq_start_subband		1630740	0					
ANR	1632409	Identifier	s		1630740	0					
ANR	1632410	Identifier	vq_start_subband		1630740	1					
ANR	1632411	Identifier	j		1630740	1					
ANR	1632412	RelationalExpression	s -> bitalloc [ j ] [ k ] > 0		1630740	1		>			
ANR	1632413	ArrayIndexing	s -> bitalloc [ j ] [ k ]		1630740	0					
ANR	1632414	ArrayIndexing	s -> bitalloc [ j ]		1630740	0					
ANR	1632415	PtrMemberAccess	s -> bitalloc		1630740	0					
ANR	1632416	Identifier	s		1630740	0					
ANR	1632417	Identifier	bitalloc		1630740	1					
ANR	1632418	Identifier	j		1630740	1					
ANR	1632419	Identifier	k		1630740	1					
ANR	1632420	PrimaryExpression	0		1630740	1					
ANR	1632421	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_DEBUG , "" %i"" , s -> scale_factor [ j ] [ k ] [ 0 ] )"	453:16:8832:8895	1630740	1	True				
ANR	1632422	CallExpression	"av_log ( s -> avctx , AV_LOG_DEBUG , "" %i"" , s -> scale_factor [ j ] [ k ] [ 0 ] )"		1630740	0					
ANR	1632423	Callee	av_log		1630740	0					
ANR	1632424	Identifier	av_log		1630740	0					
ANR	1632425	ArgumentList	s -> avctx		1630740	1					
ANR	1632426	Argument	s -> avctx		1630740	0					
ANR	1632427	PtrMemberAccess	s -> avctx		1630740	0					
ANR	1632428	Identifier	s		1630740	0					
ANR	1632429	Identifier	avctx		1630740	1					
ANR	1632430	Argument	AV_LOG_DEBUG		1630740	1					
ANR	1632431	Identifier	AV_LOG_DEBUG		1630740	0					
ANR	1632432	Argument	""" %i"""		1630740	2					
ANR	1632433	PrimaryExpression	""" %i"""		1630740	0					
ANR	1632434	Argument	s -> scale_factor [ j ] [ k ] [ 0 ]		1630740	3					
ANR	1632435	ArrayIndexing	s -> scale_factor [ j ] [ k ] [ 0 ]		1630740	0					
ANR	1632436	ArrayIndexing	s -> scale_factor [ j ] [ k ]		1630740	0					
ANR	1632437	ArrayIndexing	s -> scale_factor [ j ]		1630740	0					
ANR	1632438	PtrMemberAccess	s -> scale_factor		1630740	0					
ANR	1632439	Identifier	s		1630740	0					
ANR	1632440	Identifier	scale_factor		1630740	1					
ANR	1632441	Identifier	j		1630740	1					
ANR	1632442	Identifier	k		1630740	1					
ANR	1632443	PrimaryExpression	0		1630740	1					
ANR	1632444	IfStatement	if ( k < s -> vq_start_subband [ j ] && s -> transition_mode [ j ] [ k ] )		1630740	1					
ANR	1632445	Condition	k < s -> vq_start_subband [ j ] && s -> transition_mode [ j ] [ k ]	455:16:8914:8967	1630740	0	True				
ANR	1632446	AndExpression	k < s -> vq_start_subband [ j ] && s -> transition_mode [ j ] [ k ]		1630740	0		&&			
ANR	1632447	RelationalExpression	k < s -> vq_start_subband [ j ]		1630740	0		<			
ANR	1632448	Identifier	k		1630740	0					
ANR	1632449	ArrayIndexing	s -> vq_start_subband [ j ]		1630740	1					
ANR	1632450	PtrMemberAccess	s -> vq_start_subband		1630740	0					
ANR	1632451	Identifier	s		1630740	0					
ANR	1632452	Identifier	vq_start_subband		1630740	1					
ANR	1632453	Identifier	j		1630740	1					
ANR	1632454	ArrayIndexing	s -> transition_mode [ j ] [ k ]		1630740	1					
ANR	1632455	ArrayIndexing	s -> transition_mode [ j ]		1630740	0					
ANR	1632456	PtrMemberAccess	s -> transition_mode		1630740	0					
ANR	1632457	Identifier	s		1630740	0					
ANR	1632458	Identifier	transition_mode		1630740	1					
ANR	1632459	Identifier	j		1630740	1					
ANR	1632460	Identifier	k		1630740	1					
ANR	1632461	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_DEBUG , "" %i(t)"" , s -> scale_factor [ j ] [ k ] [ 1 ] )"	457:16:8987:9053	1630740	1	True				
ANR	1632462	CallExpression	"av_log ( s -> avctx , AV_LOG_DEBUG , "" %i(t)"" , s -> scale_factor [ j ] [ k ] [ 1 ] )"		1630740	0					
ANR	1632463	Callee	av_log		1630740	0					
ANR	1632464	Identifier	av_log		1630740	0					
ANR	1632465	ArgumentList	s -> avctx		1630740	1					
ANR	1632466	Argument	s -> avctx		1630740	0					
ANR	1632467	PtrMemberAccess	s -> avctx		1630740	0					
ANR	1632468	Identifier	s		1630740	0					
ANR	1632469	Identifier	avctx		1630740	1					
ANR	1632470	Argument	AV_LOG_DEBUG		1630740	1					
ANR	1632471	Identifier	AV_LOG_DEBUG		1630740	0					
ANR	1632472	Argument	""" %i(t)"""		1630740	2					
ANR	1632473	PrimaryExpression	""" %i(t)"""		1630740	0					
ANR	1632474	Argument	s -> scale_factor [ j ] [ k ] [ 1 ]		1630740	3					
ANR	1632475	ArrayIndexing	s -> scale_factor [ j ] [ k ] [ 1 ]		1630740	0					
ANR	1632476	ArrayIndexing	s -> scale_factor [ j ] [ k ]		1630740	0					
ANR	1632477	ArrayIndexing	s -> scale_factor [ j ]		1630740	0					
ANR	1632478	PtrMemberAccess	s -> scale_factor		1630740	0					
ANR	1632479	Identifier	s		1630740	0					
ANR	1632480	Identifier	scale_factor		1630740	1					
ANR	1632481	Identifier	j		1630740	1					
ANR	1632482	Identifier	k		1630740	1					
ANR	1632483	PrimaryExpression	1		1630740	1					
ANR	1632484	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_DEBUG , ""\\n"" )"	461:8:9075:9111	1630740	2	True				
ANR	1632485	CallExpression	"av_log ( s -> avctx , AV_LOG_DEBUG , ""\\n"" )"		1630740	0					
ANR	1632486	Callee	av_log		1630740	0					
ANR	1632487	Identifier	av_log		1630740	0					
ANR	1632488	ArgumentList	s -> avctx		1630740	1					
ANR	1632489	Argument	s -> avctx		1630740	0					
ANR	1632490	PtrMemberAccess	s -> avctx		1630740	0					
ANR	1632491	Identifier	s		1630740	0					
ANR	1632492	Identifier	avctx		1630740	1					
ANR	1632493	Argument	AV_LOG_DEBUG		1630740	1					
ANR	1632494	Identifier	AV_LOG_DEBUG		1630740	0					
ANR	1632495	Argument	"""\\n"""		1630740	2					
ANR	1632496	PrimaryExpression	"""\\n"""		1630740	0					
ANR	1632497	ForStatement	for ( j = base_channel ; j < s -> prim_channels ; j ++ )		1630740	24					
ANR	1632498	ForInit	j = base_channel ;	465:9:9130:9146	1630740	0	True				
ANR	1632499	AssignmentExpression	j = base_channel		1630740	0		=			
ANR	1632500	Identifier	j		1630740	0					
ANR	1632501	Identifier	base_channel		1630740	1					
ANR	1632502	Condition	j < s -> prim_channels	465:27:9148:9167	1630740	1	True				
ANR	1632503	RelationalExpression	j < s -> prim_channels		1630740	0		<			
ANR	1632504	Identifier	j		1630740	0					
ANR	1632505	PtrMemberAccess	s -> prim_channels		1630740	1					
ANR	1632506	Identifier	s		1630740	0					
ANR	1632507	Identifier	prim_channels		1630740	1					
ANR	1632508	PostIncDecOperationExpression	j ++	465:49:9170:9172	1630740	2	True				
ANR	1632509	Identifier	j		1630740	0					
ANR	1632510	IncDec	++		1630740	1					
ANR	1632511	CompoundStatement		463:54:9092:9092	1630740	3					
ANR	1632512	IfStatement	if ( s -> joint_intensity [ j ] > 0 )		1630740	0					
ANR	1632513	Condition	s -> joint_intensity [ j ] > 0	467:12:9190:9214	1630740	0	True				
ANR	1632514	RelationalExpression	s -> joint_intensity [ j ] > 0		1630740	0		>			
ANR	1632515	ArrayIndexing	s -> joint_intensity [ j ]		1630740	0					
ANR	1632516	PtrMemberAccess	s -> joint_intensity		1630740	0					
ANR	1632517	Identifier	s		1630740	0					
ANR	1632518	Identifier	joint_intensity		1630740	1					
ANR	1632519	Identifier	j		1630740	1					
ANR	1632520	PrimaryExpression	0		1630740	1					
ANR	1632521	CompoundStatement		467:12:9149:9195	1630740	1					
ANR	1632522	IdentifierDeclStatement	int source_channel = s -> joint_intensity [ j ] - 1 ;	469:12:9232:9278	1630740	0	True				
ANR	1632523	IdentifierDecl	source_channel = s -> joint_intensity [ j ] - 1		1630740	0					
ANR	1632524	IdentifierDeclType	int		1630740	0					
ANR	1632525	Identifier	source_channel		1630740	1					
ANR	1632526	AssignmentExpression	source_channel = s -> joint_intensity [ j ] - 1		1630740	2		=			
ANR	1632527	Identifier	source_channel		1630740	0					
ANR	1632528	AdditiveExpression	s -> joint_intensity [ j ] - 1		1630740	1		-			
ANR	1632529	ArrayIndexing	s -> joint_intensity [ j ]		1630740	0					
ANR	1632530	PtrMemberAccess	s -> joint_intensity		1630740	0					
ANR	1632531	Identifier	s		1630740	0					
ANR	1632532	Identifier	joint_intensity		1630740	1					
ANR	1632533	Identifier	j		1630740	1					
ANR	1632534	PrimaryExpression	1		1630740	1					
ANR	1632535	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_DEBUG , ""Joint scale factor index:\\n"" )"	471:12:9293:9354	1630740	1	True				
ANR	1632536	CallExpression	"av_log ( s -> avctx , AV_LOG_DEBUG , ""Joint scale factor index:\\n"" )"		1630740	0					
ANR	1632537	Callee	av_log		1630740	0					
ANR	1632538	Identifier	av_log		1630740	0					
ANR	1632539	ArgumentList	s -> avctx		1630740	1					
ANR	1632540	Argument	s -> avctx		1630740	0					
ANR	1632541	PtrMemberAccess	s -> avctx		1630740	0					
ANR	1632542	Identifier	s		1630740	0					
ANR	1632543	Identifier	avctx		1630740	1					
ANR	1632544	Argument	AV_LOG_DEBUG		1630740	1					
ANR	1632545	Identifier	AV_LOG_DEBUG		1630740	0					
ANR	1632546	Argument	"""Joint scale factor index:\\n"""		1630740	2					
ANR	1632547	PrimaryExpression	"""Joint scale factor index:\\n"""		1630740	0					
ANR	1632548	ForStatement	for ( k = s -> subband_activity [ j ] ; k < s -> subband_activity [ source_channel ] ; k ++ )		1630740	2					
ANR	1632549	ForInit	k = s -> subband_activity [ j ] ;	473:17:9374:9400	1630740	0	True				
ANR	1632550	AssignmentExpression	k = s -> subband_activity [ j ]		1630740	0		=			
ANR	1632551	Identifier	k		1630740	0					
ANR	1632552	ArrayIndexing	s -> subband_activity [ j ]		1630740	1					
ANR	1632553	PtrMemberAccess	s -> subband_activity		1630740	0					
ANR	1632554	Identifier	s		1630740	0					
ANR	1632555	Identifier	subband_activity		1630740	1					
ANR	1632556	Identifier	j		1630740	1					
ANR	1632557	Condition	k < s -> subband_activity [ source_channel ]	473:45:9402:9440	1630740	1	True				
ANR	1632558	RelationalExpression	k < s -> subband_activity [ source_channel ]		1630740	0		<			
ANR	1632559	Identifier	k		1630740	0					
ANR	1632560	ArrayIndexing	s -> subband_activity [ source_channel ]		1630740	1					
ANR	1632561	PtrMemberAccess	s -> subband_activity		1630740	0					
ANR	1632562	Identifier	s		1630740	0					
ANR	1632563	Identifier	subband_activity		1630740	1					
ANR	1632564	Identifier	source_channel		1630740	1					
ANR	1632565	PostIncDecOperationExpression	k ++	473:86:9443:9445	1630740	2	True				
ANR	1632566	Identifier	k		1630740	0					
ANR	1632567	IncDec	++		1630740	1					
ANR	1632568	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_DEBUG , "" %i"" , s -> joint_scale_factor [ j ] [ k ] )"	475:16:9465:9531	1630740	3	True				
ANR	1632569	CallExpression	"av_log ( s -> avctx , AV_LOG_DEBUG , "" %i"" , s -> joint_scale_factor [ j ] [ k ] )"		1630740	0					
ANR	1632570	Callee	av_log		1630740	0					
ANR	1632571	Identifier	av_log		1630740	0					
ANR	1632572	ArgumentList	s -> avctx		1630740	1					
ANR	1632573	Argument	s -> avctx		1630740	0					
ANR	1632574	PtrMemberAccess	s -> avctx		1630740	0					
ANR	1632575	Identifier	s		1630740	0					
ANR	1632576	Identifier	avctx		1630740	1					
ANR	1632577	Argument	AV_LOG_DEBUG		1630740	1					
ANR	1632578	Identifier	AV_LOG_DEBUG		1630740	0					
ANR	1632579	Argument	""" %i"""		1630740	2					
ANR	1632580	PrimaryExpression	""" %i"""		1630740	0					
ANR	1632581	Argument	s -> joint_scale_factor [ j ] [ k ]		1630740	3					
ANR	1632582	ArrayIndexing	s -> joint_scale_factor [ j ] [ k ]		1630740	0					
ANR	1632583	ArrayIndexing	s -> joint_scale_factor [ j ]		1630740	0					
ANR	1632584	PtrMemberAccess	s -> joint_scale_factor		1630740	0					
ANR	1632585	Identifier	s		1630740	0					
ANR	1632586	Identifier	joint_scale_factor		1630740	1					
ANR	1632587	Identifier	j		1630740	1					
ANR	1632588	Identifier	k		1630740	1					
ANR	1632589	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_DEBUG , ""\\n"" )"	477:12:9546:9582	1630740	3	True				
ANR	1632590	CallExpression	"av_log ( s -> avctx , AV_LOG_DEBUG , ""\\n"" )"		1630740	0					
ANR	1632591	Callee	av_log		1630740	0					
ANR	1632592	Identifier	av_log		1630740	0					
ANR	1632593	ArgumentList	s -> avctx		1630740	1					
ANR	1632594	Argument	s -> avctx		1630740	0					
ANR	1632595	PtrMemberAccess	s -> avctx		1630740	0					
ANR	1632596	Identifier	s		1630740	0					
ANR	1632597	Identifier	avctx		1630740	1					
ANR	1632598	Argument	AV_LOG_DEBUG		1630740	1					
ANR	1632599	Identifier	AV_LOG_DEBUG		1630740	0					
ANR	1632600	Argument	"""\\n"""		1630740	2					
ANR	1632601	PrimaryExpression	"""\\n"""		1630740	0					
ANR	1632602	IfStatement	if ( ! base_channel && s -> prim_channels > 2 && s -> downmix )		1630740	25					
ANR	1632603	Condition	! base_channel && s -> prim_channels > 2 && s -> downmix	483:8:9611:9661	1630740	0	True				
ANR	1632604	AndExpression	! base_channel && s -> prim_channels > 2 && s -> downmix		1630740	0		&&			
ANR	1632605	UnaryOperationExpression	! base_channel		1630740	0					
ANR	1632606	UnaryOperator	!		1630740	0					
ANR	1632607	Identifier	base_channel		1630740	1					
ANR	1632608	AndExpression	s -> prim_channels > 2 && s -> downmix		1630740	1		&&			
ANR	1632609	RelationalExpression	s -> prim_channels > 2		1630740	0		>			
ANR	1632610	PtrMemberAccess	s -> prim_channels		1630740	0					
ANR	1632611	Identifier	s		1630740	0					
ANR	1632612	Identifier	prim_channels		1630740	1					
ANR	1632613	PrimaryExpression	2		1630740	1					
ANR	1632614	PtrMemberAccess	s -> downmix		1630740	1					
ANR	1632615	Identifier	s		1630740	0					
ANR	1632616	Identifier	downmix		1630740	1					
ANR	1632617	CompoundStatement		481:61:9581:9581	1630740	1					
ANR	1632618	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_DEBUG , ""Downmix coeffs:\\n"" )"	485:8:9675:9726	1630740	0	True				
ANR	1632619	CallExpression	"av_log ( s -> avctx , AV_LOG_DEBUG , ""Downmix coeffs:\\n"" )"		1630740	0					
ANR	1632620	Callee	av_log		1630740	0					
ANR	1632621	Identifier	av_log		1630740	0					
ANR	1632622	ArgumentList	s -> avctx		1630740	1					
ANR	1632623	Argument	s -> avctx		1630740	0					
ANR	1632624	PtrMemberAccess	s -> avctx		1630740	0					
ANR	1632625	Identifier	s		1630740	0					
ANR	1632626	Identifier	avctx		1630740	1					
ANR	1632627	Argument	AV_LOG_DEBUG		1630740	1					
ANR	1632628	Identifier	AV_LOG_DEBUG		1630740	0					
ANR	1632629	Argument	"""Downmix coeffs:\\n"""		1630740	2					
ANR	1632630	PrimaryExpression	"""Downmix coeffs:\\n"""		1630740	0					
ANR	1632631	ForStatement	for ( j = 0 ; j < s -> prim_channels ; j ++ )		1630740	1					
ANR	1632632	ForInit	j = 0 ;	487:13:9742:9747	1630740	0	True				
ANR	1632633	AssignmentExpression	j = 0		1630740	0		=			
ANR	1632634	Identifier	j		1630740	0					
ANR	1632635	PrimaryExpression	0		1630740	1					
ANR	1632636	Condition	j < s -> prim_channels	487:20:9749:9768	1630740	1	True				
ANR	1632637	RelationalExpression	j < s -> prim_channels		1630740	0		<			
ANR	1632638	Identifier	j		1630740	0					
ANR	1632639	PtrMemberAccess	s -> prim_channels		1630740	1					
ANR	1632640	Identifier	s		1630740	0					
ANR	1632641	Identifier	prim_channels		1630740	1					
ANR	1632642	PostIncDecOperationExpression	j ++	487:42:9771:9773	1630740	2	True				
ANR	1632643	Identifier	j		1630740	0					
ANR	1632644	IncDec	++		1630740	1					
ANR	1632645	CompoundStatement		485:47:9693:9693	1630740	3					
ANR	1632646	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_DEBUG , ""Channel 0, %d = %f\\n"" , j , dca_downmix_coeffs [ s -> downmix_coef [ j ] [ 0 ] ] )"	489:12:9791:9911	1630740	0	True				
ANR	1632647	CallExpression	"av_log ( s -> avctx , AV_LOG_DEBUG , ""Channel 0, %d = %f\\n"" , j , dca_downmix_coeffs [ s -> downmix_coef [ j ] [ 0 ] ] )"		1630740	0					
ANR	1632648	Callee	av_log		1630740	0					
ANR	1632649	Identifier	av_log		1630740	0					
ANR	1632650	ArgumentList	s -> avctx		1630740	1					
ANR	1632651	Argument	s -> avctx		1630740	0					
ANR	1632652	PtrMemberAccess	s -> avctx		1630740	0					
ANR	1632653	Identifier	s		1630740	0					
ANR	1632654	Identifier	avctx		1630740	1					
ANR	1632655	Argument	AV_LOG_DEBUG		1630740	1					
ANR	1632656	Identifier	AV_LOG_DEBUG		1630740	0					
ANR	1632657	Argument	"""Channel 0, %d = %f\\n"""		1630740	2					
ANR	1632658	PrimaryExpression	"""Channel 0, %d = %f\\n"""		1630740	0					
ANR	1632659	Argument	j		1630740	3					
ANR	1632660	Identifier	j		1630740	0					
ANR	1632661	Argument	dca_downmix_coeffs [ s -> downmix_coef [ j ] [ 0 ] ]		1630740	4					
ANR	1632662	ArrayIndexing	dca_downmix_coeffs [ s -> downmix_coef [ j ] [ 0 ] ]		1630740	0					
ANR	1632663	Identifier	dca_downmix_coeffs		1630740	0					
ANR	1632664	ArrayIndexing	s -> downmix_coef [ j ] [ 0 ]		1630740	1					
ANR	1632665	ArrayIndexing	s -> downmix_coef [ j ]		1630740	0					
ANR	1632666	PtrMemberAccess	s -> downmix_coef		1630740	0					
ANR	1632667	Identifier	s		1630740	0					
ANR	1632668	Identifier	downmix_coef		1630740	1					
ANR	1632669	Identifier	j		1630740	1					
ANR	1632670	PrimaryExpression	0		1630740	1					
ANR	1632671	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_DEBUG , ""Channel 1, %d = %f\\n"" , j , dca_downmix_coeffs [ s -> downmix_coef [ j ] [ 1 ] ] )"	493:12:9926:10046	1630740	1	True				
ANR	1632672	CallExpression	"av_log ( s -> avctx , AV_LOG_DEBUG , ""Channel 1, %d = %f\\n"" , j , dca_downmix_coeffs [ s -> downmix_coef [ j ] [ 1 ] ] )"		1630740	0					
ANR	1632673	Callee	av_log		1630740	0					
ANR	1632674	Identifier	av_log		1630740	0					
ANR	1632675	ArgumentList	s -> avctx		1630740	1					
ANR	1632676	Argument	s -> avctx		1630740	0					
ANR	1632677	PtrMemberAccess	s -> avctx		1630740	0					
ANR	1632678	Identifier	s		1630740	0					
ANR	1632679	Identifier	avctx		1630740	1					
ANR	1632680	Argument	AV_LOG_DEBUG		1630740	1					
ANR	1632681	Identifier	AV_LOG_DEBUG		1630740	0					
ANR	1632682	Argument	"""Channel 1, %d = %f\\n"""		1630740	2					
ANR	1632683	PrimaryExpression	"""Channel 1, %d = %f\\n"""		1630740	0					
ANR	1632684	Argument	j		1630740	3					
ANR	1632685	Identifier	j		1630740	0					
ANR	1632686	Argument	dca_downmix_coeffs [ s -> downmix_coef [ j ] [ 1 ] ]		1630740	4					
ANR	1632687	ArrayIndexing	dca_downmix_coeffs [ s -> downmix_coef [ j ] [ 1 ] ]		1630740	0					
ANR	1632688	Identifier	dca_downmix_coeffs		1630740	0					
ANR	1632689	ArrayIndexing	s -> downmix_coef [ j ] [ 1 ]		1630740	1					
ANR	1632690	ArrayIndexing	s -> downmix_coef [ j ]		1630740	0					
ANR	1632691	PtrMemberAccess	s -> downmix_coef		1630740	0					
ANR	1632692	Identifier	s		1630740	0					
ANR	1632693	Identifier	downmix_coef		1630740	1					
ANR	1632694	Identifier	j		1630740	1					
ANR	1632695	PrimaryExpression	1		1630740	1					
ANR	1632696	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_DEBUG , ""\\n"" )"	499:8:10068:10104	1630740	2	True				
ANR	1632697	CallExpression	"av_log ( s -> avctx , AV_LOG_DEBUG , ""\\n"" )"		1630740	0					
ANR	1632698	Callee	av_log		1630740	0					
ANR	1632699	Identifier	av_log		1630740	0					
ANR	1632700	ArgumentList	s -> avctx		1630740	1					
ANR	1632701	Argument	s -> avctx		1630740	0					
ANR	1632702	PtrMemberAccess	s -> avctx		1630740	0					
ANR	1632703	Identifier	s		1630740	0					
ANR	1632704	Identifier	avctx		1630740	1					
ANR	1632705	Argument	AV_LOG_DEBUG		1630740	1					
ANR	1632706	Identifier	AV_LOG_DEBUG		1630740	0					
ANR	1632707	Argument	"""\\n"""		1630740	2					
ANR	1632708	PrimaryExpression	"""\\n"""		1630740	0					
ANR	1632709	ForStatement	for ( j = base_channel ; j < s -> prim_channels ; j ++ )		1630740	26					
ANR	1632710	ForInit	j = base_channel ;	503:9:10123:10139	1630740	0	True				
ANR	1632711	AssignmentExpression	j = base_channel		1630740	0		=			
ANR	1632712	Identifier	j		1630740	0					
ANR	1632713	Identifier	base_channel		1630740	1					
ANR	1632714	Condition	j < s -> prim_channels	503:27:10141:10160	1630740	1	True				
ANR	1632715	RelationalExpression	j < s -> prim_channels		1630740	0		<			
ANR	1632716	Identifier	j		1630740	0					
ANR	1632717	PtrMemberAccess	s -> prim_channels		1630740	1					
ANR	1632718	Identifier	s		1630740	0					
ANR	1632719	Identifier	prim_channels		1630740	1					
ANR	1632720	PostIncDecOperationExpression	j ++	503:49:10163:10165	1630740	2	True				
ANR	1632721	Identifier	j		1630740	0					
ANR	1632722	IncDec	++		1630740	1					
ANR	1632723	ForStatement	for ( k = s -> vq_start_subband [ j ] ; k < s -> subband_activity [ j ] ; k ++ )		1630740	3					
ANR	1632724	ForInit	k = s -> vq_start_subband [ j ] ;	505:13:10182:10208	1630740	0	True				
ANR	1632725	AssignmentExpression	k = s -> vq_start_subband [ j ]		1630740	0		=			
ANR	1632726	Identifier	k		1630740	0					
ANR	1632727	ArrayIndexing	s -> vq_start_subband [ j ]		1630740	1					
ANR	1632728	PtrMemberAccess	s -> vq_start_subband		1630740	0					
ANR	1632729	Identifier	s		1630740	0					
ANR	1632730	Identifier	vq_start_subband		1630740	1					
ANR	1632731	Identifier	j		1630740	1					
ANR	1632732	Condition	k < s -> subband_activity [ j ]	505:41:10210:10235	1630740	1	True				
ANR	1632733	RelationalExpression	k < s -> subband_activity [ j ]		1630740	0		<			
ANR	1632734	Identifier	k		1630740	0					
ANR	1632735	ArrayIndexing	s -> subband_activity [ j ]		1630740	1					
ANR	1632736	PtrMemberAccess	s -> subband_activity		1630740	0					
ANR	1632737	Identifier	s		1630740	0					
ANR	1632738	Identifier	subband_activity		1630740	1					
ANR	1632739	Identifier	j		1630740	1					
ANR	1632740	PostIncDecOperationExpression	k ++	505:69:10238:10240	1630740	2	True				
ANR	1632741	Identifier	k		1630740	0					
ANR	1632742	IncDec	++		1630740	1					
ANR	1632743	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_DEBUG , ""VQ index: %i\\n"" , s -> high_freq_vq [ j ] [ k ] )"	507:12:10256:10327	1630740	3	True				
ANR	1632744	CallExpression	"av_log ( s -> avctx , AV_LOG_DEBUG , ""VQ index: %i\\n"" , s -> high_freq_vq [ j ] [ k ] )"		1630740	0					
ANR	1632745	Callee	av_log		1630740	0					
ANR	1632746	Identifier	av_log		1630740	0					
ANR	1632747	ArgumentList	s -> avctx		1630740	1					
ANR	1632748	Argument	s -> avctx		1630740	0					
ANR	1632749	PtrMemberAccess	s -> avctx		1630740	0					
ANR	1632750	Identifier	s		1630740	0					
ANR	1632751	Identifier	avctx		1630740	1					
ANR	1632752	Argument	AV_LOG_DEBUG		1630740	1					
ANR	1632753	Identifier	AV_LOG_DEBUG		1630740	0					
ANR	1632754	Argument	"""VQ index: %i\\n"""		1630740	2					
ANR	1632755	PrimaryExpression	"""VQ index: %i\\n"""		1630740	0					
ANR	1632756	Argument	s -> high_freq_vq [ j ] [ k ]		1630740	3					
ANR	1632757	ArrayIndexing	s -> high_freq_vq [ j ] [ k ]		1630740	0					
ANR	1632758	ArrayIndexing	s -> high_freq_vq [ j ]		1630740	0					
ANR	1632759	PtrMemberAccess	s -> high_freq_vq		1630740	0					
ANR	1632760	Identifier	s		1630740	0					
ANR	1632761	Identifier	high_freq_vq		1630740	1					
ANR	1632762	Identifier	j		1630740	1					
ANR	1632763	Identifier	k		1630740	1					
ANR	1632764	IfStatement	if ( ! base_channel && s -> lfe )		1630740	27					
ANR	1632765	Condition	! base_channel && s -> lfe	509:8:10338:10360	1630740	0	True				
ANR	1632766	AndExpression	! base_channel && s -> lfe		1630740	0		&&			
ANR	1632767	UnaryOperationExpression	! base_channel		1630740	0					
ANR	1632768	UnaryOperator	!		1630740	0					
ANR	1632769	Identifier	base_channel		1630740	1					
ANR	1632770	PtrMemberAccess	s -> lfe		1630740	1					
ANR	1632771	Identifier	s		1630740	0					
ANR	1632772	Identifier	lfe		1630740	1					
ANR	1632773	CompoundStatement		511:8:10350:10440	1630740	1					
ANR	1632774	IdentifierDeclStatement	int lfe_samples = 2 * s -> lfe * ( 4 + block_index ) ;	511:8:10374:10422	1630740	0	True				
ANR	1632775	IdentifierDecl	lfe_samples = 2 * s -> lfe * ( 4 + block_index )		1630740	0					
ANR	1632776	IdentifierDeclType	int		1630740	0					
ANR	1632777	Identifier	lfe_samples		1630740	1					
ANR	1632778	AssignmentExpression	lfe_samples = 2 * s -> lfe * ( 4 + block_index )		1630740	2		=			
ANR	1632779	Identifier	lfe_samples		1630740	0					
ANR	1632780	MultiplicativeExpression	2 * s -> lfe * ( 4 + block_index )		1630740	1		*			
ANR	1632781	PrimaryExpression	2		1630740	0					
ANR	1632782	MultiplicativeExpression	s -> lfe * ( 4 + block_index )		1630740	1		*			
ANR	1632783	PtrMemberAccess	s -> lfe		1630740	0					
ANR	1632784	Identifier	s		1630740	0					
ANR	1632785	Identifier	lfe		1630740	1					
ANR	1632786	AdditiveExpression	4 + block_index		1630740	1		+			
ANR	1632787	PrimaryExpression	4		1630740	0					
ANR	1632788	Identifier	block_index		1630740	1					
ANR	1632789	IdentifierDeclStatement	int lfe_end_sample = 2 * s -> lfe * ( 4 + block_index + s -> subsubframes [ s -> current_subframe ] ) ;	513:8:10433:10523	1630740	1	True				
ANR	1632790	IdentifierDecl	lfe_end_sample = 2 * s -> lfe * ( 4 + block_index + s -> subsubframes [ s -> current_subframe ] )		1630740	0					
ANR	1632791	IdentifierDeclType	int		1630740	0					
ANR	1632792	Identifier	lfe_end_sample		1630740	1					
ANR	1632793	AssignmentExpression	lfe_end_sample = 2 * s -> lfe * ( 4 + block_index + s -> subsubframes [ s -> current_subframe ] )		1630740	2		=			
ANR	1632794	Identifier	lfe_end_sample		1630740	0					
ANR	1632795	MultiplicativeExpression	2 * s -> lfe * ( 4 + block_index + s -> subsubframes [ s -> current_subframe ] )		1630740	1		*			
ANR	1632796	PrimaryExpression	2		1630740	0					
ANR	1632797	MultiplicativeExpression	s -> lfe * ( 4 + block_index + s -> subsubframes [ s -> current_subframe ] )		1630740	1		*			
ANR	1632798	PtrMemberAccess	s -> lfe		1630740	0					
ANR	1632799	Identifier	s		1630740	0					
ANR	1632800	Identifier	lfe		1630740	1					
ANR	1632801	AdditiveExpression	4 + block_index + s -> subsubframes [ s -> current_subframe ]		1630740	1		+			
ANR	1632802	PrimaryExpression	4		1630740	0					
ANR	1632803	AdditiveExpression	block_index + s -> subsubframes [ s -> current_subframe ]		1630740	1		+			
ANR	1632804	Identifier	block_index		1630740	0					
ANR	1632805	ArrayIndexing	s -> subsubframes [ s -> current_subframe ]		1630740	1					
ANR	1632806	PtrMemberAccess	s -> subsubframes		1630740	0					
ANR	1632807	Identifier	s		1630740	0					
ANR	1632808	Identifier	subsubframes		1630740	1					
ANR	1632809	PtrMemberAccess	s -> current_subframe		1630740	1					
ANR	1632810	Identifier	s		1630740	0					
ANR	1632811	Identifier	current_subframe		1630740	1					
ANR	1632812	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_DEBUG , ""LFE samples:\\n"" )"	517:8:10536:10584	1630740	2	True				
ANR	1632813	CallExpression	"av_log ( s -> avctx , AV_LOG_DEBUG , ""LFE samples:\\n"" )"		1630740	0					
ANR	1632814	Callee	av_log		1630740	0					
ANR	1632815	Identifier	av_log		1630740	0					
ANR	1632816	ArgumentList	s -> avctx		1630740	1					
ANR	1632817	Argument	s -> avctx		1630740	0					
ANR	1632818	PtrMemberAccess	s -> avctx		1630740	0					
ANR	1632819	Identifier	s		1630740	0					
ANR	1632820	Identifier	avctx		1630740	1					
ANR	1632821	Argument	AV_LOG_DEBUG		1630740	1					
ANR	1632822	Identifier	AV_LOG_DEBUG		1630740	0					
ANR	1632823	Argument	"""LFE samples:\\n"""		1630740	2					
ANR	1632824	PrimaryExpression	"""LFE samples:\\n"""		1630740	0					
ANR	1632825	ForStatement	for ( j = lfe_samples ; j < lfe_end_sample ; j ++ )		1630740	3					
ANR	1632826	ForInit	j = lfe_samples ;	519:13:10600:10615	1630740	0	True				
ANR	1632827	AssignmentExpression	j = lfe_samples		1630740	0		=			
ANR	1632828	Identifier	j		1630740	0					
ANR	1632829	Identifier	lfe_samples		1630740	1					
ANR	1632830	Condition	j < lfe_end_sample	519:30:10617:10634	1630740	1	True				
ANR	1632831	RelationalExpression	j < lfe_end_sample		1630740	0		<			
ANR	1632832	Identifier	j		1630740	0					
ANR	1632833	Identifier	lfe_end_sample		1630740	1					
ANR	1632834	PostIncDecOperationExpression	j ++	519:50:10637:10639	1630740	2	True				
ANR	1632835	Identifier	j		1630740	0					
ANR	1632836	IncDec	++		1630740	1					
ANR	1632837	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_DEBUG , "" %f"" , s -> lfe_data [ j ] )"	521:12:10655:10708	1630740	3	True				
ANR	1632838	CallExpression	"av_log ( s -> avctx , AV_LOG_DEBUG , "" %f"" , s -> lfe_data [ j ] )"		1630740	0					
ANR	1632839	Callee	av_log		1630740	0					
ANR	1632840	Identifier	av_log		1630740	0					
ANR	1632841	ArgumentList	s -> avctx		1630740	1					
ANR	1632842	Argument	s -> avctx		1630740	0					
ANR	1632843	PtrMemberAccess	s -> avctx		1630740	0					
ANR	1632844	Identifier	s		1630740	0					
ANR	1632845	Identifier	avctx		1630740	1					
ANR	1632846	Argument	AV_LOG_DEBUG		1630740	1					
ANR	1632847	Identifier	AV_LOG_DEBUG		1630740	0					
ANR	1632848	Argument	""" %f"""		1630740	2					
ANR	1632849	PrimaryExpression	""" %f"""		1630740	0					
ANR	1632850	Argument	s -> lfe_data [ j ]		1630740	3					
ANR	1632851	ArrayIndexing	s -> lfe_data [ j ]		1630740	0					
ANR	1632852	PtrMemberAccess	s -> lfe_data		1630740	0					
ANR	1632853	Identifier	s		1630740	0					
ANR	1632854	Identifier	lfe_data		1630740	1					
ANR	1632855	Identifier	j		1630740	1					
ANR	1632856	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_DEBUG , ""\\n"" )"	523:8:10719:10755	1630740	4	True				
ANR	1632857	CallExpression	"av_log ( s -> avctx , AV_LOG_DEBUG , ""\\n"" )"		1630740	0					
ANR	1632858	Callee	av_log		1630740	0					
ANR	1632859	Identifier	av_log		1630740	0					
ANR	1632860	ArgumentList	s -> avctx		1630740	1					
ANR	1632861	Argument	s -> avctx		1630740	0					
ANR	1632862	PtrMemberAccess	s -> avctx		1630740	0					
ANR	1632863	Identifier	s		1630740	0					
ANR	1632864	Identifier	avctx		1630740	1					
ANR	1632865	Argument	AV_LOG_DEBUG		1630740	1					
ANR	1632866	Identifier	AV_LOG_DEBUG		1630740	0					
ANR	1632867	Argument	"""\\n"""		1630740	2					
ANR	1632868	PrimaryExpression	"""\\n"""		1630740	0					
ANR	1632869	ReturnStatement	return 0 ;	531:4:10779:10787	1630740	28	True				
ANR	1632870	PrimaryExpression	0		1630740	0					
ANR	1632871	ReturnType	static int		1630740	1					
ANR	1632872	Identifier	dca_subframe_header		1630740	2					
ANR	1632873	ParameterList	"DCAContext * s , int base_channel , int block_index"		1630740	3					
ANR	1632874	Parameter	DCAContext * s	1:31:31:43	1630740	0	True				
ANR	1632875	ParameterType	DCAContext *		1630740	0					
ANR	1632876	Identifier	s		1630740	1					
ANR	1632877	Parameter	int base_channel	1:46:46:61	1630740	1	True				
ANR	1632878	ParameterType	int		1630740	0					
ANR	1632879	Identifier	base_channel		1630740	1					
ANR	1632880	Parameter	int block_index	1:64:64:78	1630740	2	True				
ANR	1632881	ParameterType	int		1630740	0					
ANR	1632882	Identifier	block_index		1630740	1					
ANR	1632883	CFGEntryNode	ENTRY		1630740		True				
ANR	1632884	CFGExitNode	EXIT		1630740		True				
ANR	1632885	Symbol	* scale_factor_quant7		1630740						
ANR	1632886	Symbol	scale_table		1630740						
ANR	1632887	Symbol	s -> bitalloc		1630740						
ANR	1632888	Symbol	adpcm_vb		1630740						
ANR	1632889	Symbol	* * * s -> downmix_coef		1630740						
ANR	1632890	Symbol	* s -> scalefactor_huffman		1630740						
ANR	1632891	Symbol	* * * s -> prediction_vq		1630740						
ANR	1632892	Symbol	AV_LOG_DEBUG		1630740						
ANR	1632893	Symbol	s -> current_subframe		1630740						
ANR	1632894	Symbol	dca_downmix_coeffs		1630740						
ANR	1632895	Symbol	am		1630740						
ANR	1632896	Symbol	* * * s		1630740						
ANR	1632897	Symbol	s -> joint_scale_factor		1630740						
ANR	1632898	Symbol	& s -> gb		1630740						
ANR	1632899	Symbol	dca_default_coeffs		1630740						
ANR	1632900	Symbol	* s -> bitalloc_huffman		1630740						
ANR	1632901	Symbol	* dca_default_coeffs		1630740						
ANR	1632902	Symbol	* * * k		1630740						
ANR	1632903	Symbol	* * * j		1630740						
ANR	1632904	Symbol	* * * s -> scale_factor		1630740						
ANR	1632905	Symbol	block_index		1630740						
ANR	1632906	Symbol	lfe_scale		1630740						
ANR	1632907	Symbol	& dca_tmode		1630740						
ANR	1632908	Symbol	* source_channel		1630740						
ANR	1632909	Symbol	* s -> bitalloc		1630740						
ANR	1632910	Symbol	s -> transient_huffman		1630740						
ANR	1632911	Symbol	* * s -> prediction_vq		1630740						
ANR	1632912	Symbol	s -> dynrange		1630740						
ANR	1632913	Symbol	* * dca_default_coeffs		1630740						
ANR	1632914	Symbol	* * s		1630740						
ANR	1632915	Symbol	* * s -> scale_factor		1630740						
ANR	1632916	Symbol	* * adpcm_vb		1630740						
ANR	1632917	Symbol	DCA_CHANNEL_MASK		1630740						
ANR	1632918	Symbol	AV_LOG_ERROR		1630740						
ANR	1632919	Symbol	* s -> downmix_coef		1630740						
ANR	1632920	Symbol	j		1630740						
ANR	1632921	Symbol	s -> amode		1630740						
ANR	1632922	Symbol	lfe_end_sample		1630740						
ANR	1632923	Symbol	k		1630740						
ANR	1632924	Symbol	& dca_bitalloc_index		1630740						
ANR	1632925	Symbol	get_bitalloc		1630740						
ANR	1632926	Symbol	get_scale		1630740						
ANR	1632927	Symbol	s		1630740						
ANR	1632928	Symbol	* * s -> prediction_mode		1630740						
ANR	1632929	Symbol	* * s -> transition_mode		1630740						
ANR	1632930	Symbol	AVERROR_INVALIDDATA		1630740						
ANR	1632931	Symbol	* s -> high_freq_vq		1630740						
ANR	1632932	Symbol	lfe_samples		1630740						
ANR	1632933	Symbol	get_sbits		1630740						
ANR	1632934	Symbol	s -> debug_flag		1630740						
ANR	1632935	Symbol	* * * * s -> prediction_vq		1630740						
ANR	1632936	Symbol	* * * * s		1630740						
ANR	1632937	Symbol	get_bits		1630740						
ANR	1632938	Symbol	* s -> transient_huffman		1630740						
ANR	1632939	Symbol	* s -> transition_mode		1630740						
ANR	1632940	Symbol	s -> lfe_scale_factor		1630740						
ANR	1632941	Symbol	* * * * j		1630740						
ANR	1632942	Symbol	* s -> current_subframe		1630740						
ANR	1632943	Symbol	* s -> prediction_vq		1630740						
ANR	1632944	Symbol	* s -> prediction_mode		1630740						
ANR	1632945	Symbol	* * am		1630740						
ANR	1632946	Symbol	* * s -> high_freq_vq		1630740						
ANR	1632947	Symbol	* s -> joint_intensity		1630740						
ANR	1632948	Symbol	s -> dynrange_coef		1630740						
ANR	1632949	Symbol	* * k		1630740						
ANR	1632950	Symbol	* * j		1630740						
ANR	1632951	Symbol	* s -> vq_start_subband		1630740						
ANR	1632952	Symbol	s -> joint_intensity		1630740						
ANR	1632953	Symbol	source_channel		1630740						
ANR	1632954	Symbol	* s -> subband_activity		1630740						
ANR	1632955	Symbol	s -> prim_channels		1630740						
ANR	1632956	Symbol	* scale_sum		1630740						
ANR	1632957	Symbol	s -> scalefactor_huffman		1630740						
ANR	1632958	Symbol	s -> joint_huff		1630740						
ANR	1632959	Symbol	s -> bitalloc_huffman		1630740						
ANR	1632960	Symbol	* s -> subsubframes		1630740						
ANR	1632961	Symbol	s -> partial_samples		1630740						
ANR	1632962	Symbol	s -> subband_activity		1630740						
ANR	1632963	Symbol	* * * dca_default_coeffs		1630740						
ANR	1632964	Symbol	* * s -> bitalloc		1630740						
ANR	1632965	Symbol	s -> lfe_data		1630740						
ANR	1632966	Symbol	s -> scale_factor		1630740						
ANR	1632967	Symbol	s -> crc_present		1630740						
ANR	1632968	Symbol	s -> high_freq_vq		1630740						
ANR	1632969	Symbol	s -> lfe		1630740						
ANR	1632970	Symbol	s -> avctx		1630740						
ANR	1632971	Symbol	s -> vq_start_subband		1630740						
ANR	1632972	Symbol	scale_sum		1630740						
ANR	1632973	Symbol	* dca_downmix_coeffs		1630740						
ANR	1632974	Symbol	scale_factor_quant6		1630740						
ANR	1632975	Symbol	scale_factor_quant7		1630740						
ANR	1632976	Symbol	s -> downmix		1630740						
ANR	1632977	Symbol	scale		1630740						
ANR	1632978	Symbol	* s -> joint_huff		1630740						
ANR	1632979	Symbol	get_bits_left		1630740						
ANR	1632980	Symbol	base_channel		1630740						
ANR	1632981	Symbol	s -> prediction_mode		1630740						
ANR	1632982	Symbol	s -> prediction_vq		1630740						
ANR	1632983	Symbol	s -> downmix_coef		1630740						
ANR	1632984	Symbol	* * s -> joint_scale_factor		1630740						
ANR	1632985	Symbol	* * s -> downmix_coef		1630740						
ANR	1632986	Symbol	* scale_table		1630740						
ANR	1632987	Symbol	* get_bits		1630740						
ANR	1632988	Symbol	* adpcm_vb		1630740						
ANR	1632989	Symbol	* s -> joint_scale_factor		1630740						
ANR	1632990	Symbol	* am		1630740						
ANR	1632991	Symbol	* j		1630740						
ANR	1632992	Symbol	* * * am		1630740						
ANR	1632993	Symbol	* k		1630740						
ANR	1632994	Symbol	s -> transition_mode		1630740						
ANR	1632995	Symbol	* s -> partial_samples		1630740						
ANR	1632996	Symbol	* * * * * s		1630740						
ANR	1632997	Symbol	s -> subsubframes		1630740						
ANR	1632998	Symbol	* s -> lfe_data		1630740						
ANR	1632999	Symbol	* s		1630740						
ANR	1633000	Symbol	* s -> scale_factor		1630740						
