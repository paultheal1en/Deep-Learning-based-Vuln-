command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6761631	File	/home/p4ultr4n/workplace/ReVeal/raw_code/pte64_check_03_0.c								
ANR	6761632	Function	pte64_check	1:0:0:1527							
ANR	6761633	FunctionDef	"pte64_check (mmu_ctx_t * ctx , target_ulong pte0 , target_ulong pte1 , int h , int rw , int type)"		6761632	0					
ANR	6761634	CompoundStatement		5:0:127:1527	6761632	0					
ANR	6761635	IdentifierDeclStatement	"target_ulong ptem , mmask ;"	7:4:134:158	6761632	0	True				
ANR	6761636	IdentifierDecl	ptem		6761632	0					
ANR	6761637	IdentifierDeclType	target_ulong		6761632	0					
ANR	6761638	Identifier	ptem		6761632	1					
ANR	6761639	IdentifierDecl	mmask		6761632	1					
ANR	6761640	IdentifierDeclType	target_ulong		6761632	0					
ANR	6761641	Identifier	mmask		6761632	1					
ANR	6761642	IdentifierDeclStatement	"int access , ret , pteh , ptev , pp ;"	9:4:165:196	6761632	1	True				
ANR	6761643	IdentifierDecl	access		6761632	0					
ANR	6761644	IdentifierDeclType	int		6761632	0					
ANR	6761645	Identifier	access		6761632	1					
ANR	6761646	IdentifierDecl	ret		6761632	1					
ANR	6761647	IdentifierDeclType	int		6761632	0					
ANR	6761648	Identifier	ret		6761632	1					
ANR	6761649	IdentifierDecl	pteh		6761632	2					
ANR	6761650	IdentifierDeclType	int		6761632	0					
ANR	6761651	Identifier	pteh		6761632	1					
ANR	6761652	IdentifierDecl	ptev		6761632	3					
ANR	6761653	IdentifierDeclType	int		6761632	0					
ANR	6761654	Identifier	ptev		6761632	1					
ANR	6761655	IdentifierDecl	pp		6761632	4					
ANR	6761656	IdentifierDeclType	int		6761632	0					
ANR	6761657	Identifier	pp		6761632	1					
ANR	6761658	ExpressionStatement	ret = - 1	13:4:205:213	6761632	2	True				
ANR	6761659	AssignmentExpression	ret = - 1		6761632	0		=			
ANR	6761660	Identifier	ret		6761632	0					
ANR	6761661	UnaryOperationExpression	- 1		6761632	1					
ANR	6761662	UnaryOperator	-		6761632	0					
ANR	6761663	PrimaryExpression	1		6761632	1					
ANR	6761664	ExpressionStatement	ptev = pte64_is_valid ( pte0 )	17:4:262:289	6761632	3	True				
ANR	6761665	AssignmentExpression	ptev = pte64_is_valid ( pte0 )		6761632	0		=			
ANR	6761666	Identifier	ptev		6761632	0					
ANR	6761667	CallExpression	pte64_is_valid ( pte0 )		6761632	1					
ANR	6761668	Callee	pte64_is_valid		6761632	0					
ANR	6761669	Identifier	pte64_is_valid		6761632	0					
ANR	6761670	ArgumentList	pte0		6761632	1					
ANR	6761671	Argument	pte0		6761632	0					
ANR	6761672	Identifier	pte0		6761632	0					
ANR	6761673	ExpressionStatement	pteh = ( pte0 >> 1 ) & 1	19:4:296:318	6761632	4	True				
ANR	6761674	AssignmentExpression	pteh = ( pte0 >> 1 ) & 1		6761632	0		=			
ANR	6761675	Identifier	pteh		6761632	0					
ANR	6761676	BitAndExpression	( pte0 >> 1 ) & 1		6761632	1		&			
ANR	6761677	ShiftExpression	pte0 >> 1		6761632	0		>>			
ANR	6761678	Identifier	pte0		6761632	0					
ANR	6761679	PrimaryExpression	1		6761632	1					
ANR	6761680	PrimaryExpression	1		6761632	1					
ANR	6761681	IfStatement	if ( ptev && h == pteh )		6761632	5					
ANR	6761682	Condition	ptev && h == pteh	21:8:329:345	6761632	0	True				
ANR	6761683	AndExpression	ptev && h == pteh		6761632	0		&&			
ANR	6761684	Identifier	ptev		6761632	0					
ANR	6761685	EqualityExpression	h == pteh		6761632	1		==			
ANR	6761686	Identifier	h		6761632	0					
ANR	6761687	Identifier	pteh		6761632	1					
ANR	6761688	CompoundStatement		17:27:220:220	6761632	1					
ANR	6761689	ExpressionStatement	ptem = pte0 & PTE64_PTEM_MASK	25:8:391:420	6761632	0	True				
ANR	6761690	AssignmentExpression	ptem = pte0 & PTE64_PTEM_MASK		6761632	0		=			
ANR	6761691	Identifier	ptem		6761632	0					
ANR	6761692	BitAndExpression	pte0 & PTE64_PTEM_MASK		6761632	1		&			
ANR	6761693	Identifier	pte0		6761632	0					
ANR	6761694	Identifier	PTE64_PTEM_MASK		6761632	1					
ANR	6761695	ExpressionStatement	mmask = PTE64_CHECK_MASK	27:8:431:455	6761632	1	True				
ANR	6761696	AssignmentExpression	mmask = PTE64_CHECK_MASK		6761632	0		=			
ANR	6761697	Identifier	mmask		6761632	0					
ANR	6761698	Identifier	PTE64_CHECK_MASK		6761632	1					
ANR	6761699	ExpressionStatement	pp = ( pte1 & 0x00000003 ) | ( ( pte1 >> 61 ) & 0x00000004 )	29:8:466:520	6761632	2	True				
ANR	6761700	AssignmentExpression	pp = ( pte1 & 0x00000003 ) | ( ( pte1 >> 61 ) & 0x00000004 )		6761632	0		=			
ANR	6761701	Identifier	pp		6761632	0					
ANR	6761702	InclusiveOrExpression	( pte1 & 0x00000003 ) | ( ( pte1 >> 61 ) & 0x00000004 )		6761632	1		|			
ANR	6761703	BitAndExpression	pte1 & 0x00000003		6761632	0		&			
ANR	6761704	Identifier	pte1		6761632	0					
ANR	6761705	PrimaryExpression	0x00000003		6761632	1					
ANR	6761706	BitAndExpression	( pte1 >> 61 ) & 0x00000004		6761632	1		&			
ANR	6761707	ShiftExpression	pte1 >> 61		6761632	0		>>			
ANR	6761708	Identifier	pte1		6761632	0					
ANR	6761709	PrimaryExpression	61		6761632	1					
ANR	6761710	PrimaryExpression	0x00000004		6761632	1					
ANR	6761711	ExpressionStatement	ctx -> nx = ( pte1 >> 2 ) & 1	31:8:531:557	6761632	3	True				
ANR	6761712	AssignmentExpression	ctx -> nx = ( pte1 >> 2 ) & 1		6761632	0		=			
ANR	6761713	PtrMemberAccess	ctx -> nx		6761632	0					
ANR	6761714	Identifier	ctx		6761632	0					
ANR	6761715	Identifier	nx		6761632	1					
ANR	6761716	BitAndExpression	( pte1 >> 2 ) & 1		6761632	1		&			
ANR	6761717	ShiftExpression	pte1 >> 2		6761632	0		>>			
ANR	6761718	Identifier	pte1		6761632	0					
ANR	6761719	PrimaryExpression	2		6761632	1					
ANR	6761720	PrimaryExpression	1		6761632	1					
ANR	6761721	ExpressionStatement	ctx -> nx |= ( pte1 >> 3 ) & 1	33:8:589:615	6761632	4	True				
ANR	6761722	AssignmentExpression	ctx -> nx |= ( pte1 >> 3 ) & 1		6761632	0		|=			
ANR	6761723	PtrMemberAccess	ctx -> nx		6761632	0					
ANR	6761724	Identifier	ctx		6761632	0					
ANR	6761725	Identifier	nx		6761632	1					
ANR	6761726	BitAndExpression	( pte1 >> 3 ) & 1		6761632	1		&			
ANR	6761727	ShiftExpression	pte1 >> 3		6761632	0		>>			
ANR	6761728	Identifier	pte1		6761632	0					
ANR	6761729	PrimaryExpression	3		6761632	1					
ANR	6761730	PrimaryExpression	1		6761632	1					
ANR	6761731	IfStatement	if ( ptem == ctx -> ptem )		6761632	5					
ANR	6761732	Condition	ptem == ctx -> ptem	35:12:651:667	6761632	0	True				
ANR	6761733	EqualityExpression	ptem == ctx -> ptem		6761632	0		==			
ANR	6761734	Identifier	ptem		6761632	0					
ANR	6761735	PtrMemberAccess	ctx -> ptem		6761632	1					
ANR	6761736	Identifier	ctx		6761632	0					
ANR	6761737	Identifier	ptem		6761632	1					
ANR	6761738	CompoundStatement		31:31:542:542	6761632	1					
ANR	6761739	Statement	if	37:12:685:686	6761632	0	True				
ANR	6761740	Statement	(	37:15:688:688	6761632	1	True				
ANR	6761741	Statement	ctx	37:16:689:691	6761632	2	True				
ANR	6761742	Statement	->	37:19:692:693	6761632	3	True				
ANR	6761743	Statement	raddr	37:21:694:698	6761632	4	True				
ANR	6761744	Statement	!=	37:27:700:701	6761632	5	True				
ANR	6761745	Statement	(	37:30:703:703	6761632	6	True				
ANR	6761746	Statement	hwaddr	37:31:704:709	6761632	7	True				
ANR	6761747	Statement	)	37:37:710:710	6761632	8	True				
ANR	6761748	Statement	-	37:38:711:711	6761632	9	True				
ANR	6761749	Statement	1UL	37:39:712:714	6761632	10	True				
ANR	6761750	Statement	L	37:42:715:715	6761632	11	True				
ANR	6761751	Statement	)	37:43:716:716	6761632	12	True				
ANR	6761752	CompoundStatement		33:45:590:590	6761632	13					
ANR	6761753	IfStatement	if ( ( ctx -> raddr & mmask ) != ( pte1 & mmask ) )		6761632	0					
ANR	6761754	Condition	( ctx -> raddr & mmask ) != ( pte1 & mmask )	41:20:809:846	6761632	0	True				
ANR	6761755	EqualityExpression	( ctx -> raddr & mmask ) != ( pte1 & mmask )		6761632	0		!=			
ANR	6761756	BitAndExpression	ctx -> raddr & mmask		6761632	0		&			
ANR	6761757	PtrMemberAccess	ctx -> raddr		6761632	0					
ANR	6761758	Identifier	ctx		6761632	0					
ANR	6761759	Identifier	raddr		6761632	1					
ANR	6761760	Identifier	mmask		6761632	1					
ANR	6761761	BitAndExpression	pte1 & mmask		6761632	1		&			
ANR	6761762	Identifier	pte1		6761632	0					
ANR	6761763	Identifier	mmask		6761632	1					
ANR	6761764	CompoundStatement		37:60:721:721	6761632	1					
ANR	6761765	ExpressionStatement	"qemu_log ( ""Bad RPN/WIMG/PP\\n"" )"	43:20:872:901	6761632	0	True				
ANR	6761766	CallExpression	"qemu_log ( ""Bad RPN/WIMG/PP\\n"" )"		6761632	0					
ANR	6761767	Callee	qemu_log		6761632	0					
ANR	6761768	Identifier	qemu_log		6761632	0					
ANR	6761769	ArgumentList	"""Bad RPN/WIMG/PP\\n"""		6761632	1					
ANR	6761770	Argument	"""Bad RPN/WIMG/PP\\n"""		6761632	0					
ANR	6761771	PrimaryExpression	"""Bad RPN/WIMG/PP\\n"""		6761632	0					
ANR	6761772	ReturnStatement	return - 3 ;	45:20:924:933	6761632	1	True				
ANR	6761773	UnaryOperationExpression	- 3		6761632	0					
ANR	6761774	UnaryOperator	-		6761632	0					
ANR	6761775	PrimaryExpression	3		6761632	1					
ANR	6761776	ExpressionStatement	"access = pp_check ( ctx -> key , pp , ctx -> nx )"	53:12:1023:1063	6761632	14	True				
ANR	6761777	AssignmentExpression	"access = pp_check ( ctx -> key , pp , ctx -> nx )"		6761632	0		=			
ANR	6761778	Identifier	access		6761632	0					
ANR	6761779	CallExpression	"pp_check ( ctx -> key , pp , ctx -> nx )"		6761632	1					
ANR	6761780	Callee	pp_check		6761632	0					
ANR	6761781	Identifier	pp_check		6761632	0					
ANR	6761782	ArgumentList	ctx -> key		6761632	1					
ANR	6761783	Argument	ctx -> key		6761632	0					
ANR	6761784	PtrMemberAccess	ctx -> key		6761632	0					
ANR	6761785	Identifier	ctx		6761632	0					
ANR	6761786	Identifier	key		6761632	1					
ANR	6761787	Argument	pp		6761632	1					
ANR	6761788	Identifier	pp		6761632	0					
ANR	6761789	Argument	ctx -> nx		6761632	2					
ANR	6761790	PtrMemberAccess	ctx -> nx		6761632	0					
ANR	6761791	Identifier	ctx		6761632	0					
ANR	6761792	Identifier	nx		6761632	1					
ANR	6761793	ExpressionStatement	ctx -> raddr = pte1	57:12:1132:1149	6761632	15	True				
ANR	6761794	AssignmentExpression	ctx -> raddr = pte1		6761632	0		=			
ANR	6761795	PtrMemberAccess	ctx -> raddr		6761632	0					
ANR	6761796	Identifier	ctx		6761632	0					
ANR	6761797	Identifier	raddr		6761632	1					
ANR	6761798	Identifier	pte1		6761632	1					
ANR	6761799	ExpressionStatement	ctx -> prot = access	59:12:1164:1182	6761632	16	True				
ANR	6761800	AssignmentExpression	ctx -> prot = access		6761632	0		=			
ANR	6761801	PtrMemberAccess	ctx -> prot		6761632	0					
ANR	6761802	Identifier	ctx		6761632	0					
ANR	6761803	Identifier	prot		6761632	1					
ANR	6761804	Identifier	access		6761632	1					
ANR	6761805	ExpressionStatement	"ret = check_prot ( ctx -> prot , rw , type )"	61:12:1197:1234	6761632	17	True				
ANR	6761806	AssignmentExpression	"ret = check_prot ( ctx -> prot , rw , type )"		6761632	0		=			
ANR	6761807	Identifier	ret		6761632	0					
ANR	6761808	CallExpression	"check_prot ( ctx -> prot , rw , type )"		6761632	1					
ANR	6761809	Callee	check_prot		6761632	0					
ANR	6761810	Identifier	check_prot		6761632	0					
ANR	6761811	ArgumentList	ctx -> prot		6761632	1					
ANR	6761812	Argument	ctx -> prot		6761632	0					
ANR	6761813	PtrMemberAccess	ctx -> prot		6761632	0					
ANR	6761814	Identifier	ctx		6761632	0					
ANR	6761815	Identifier	prot		6761632	1					
ANR	6761816	Argument	rw		6761632	1					
ANR	6761817	Identifier	rw		6761632	0					
ANR	6761818	Argument	type		6761632	2					
ANR	6761819	Identifier	type		6761632	0					
ANR	6761820	IfStatement	if ( ret == 0 )		6761632	18					
ANR	6761821	Condition	ret == 0	63:16:1253:1260	6761632	0	True				
ANR	6761822	EqualityExpression	ret == 0		6761632	0		==			
ANR	6761823	Identifier	ret		6761632	0					
ANR	6761824	PrimaryExpression	0		6761632	1					
ANR	6761825	CompoundStatement		59:26:1135:1135	6761632	1					
ANR	6761826	ExpressionStatement	"LOG_MMU ( ""PTE access granted !\\n"" )"	67:16:1320:1353	6761632	0	True				
ANR	6761827	CallExpression	"LOG_MMU ( ""PTE access granted !\\n"" )"		6761632	0					
ANR	6761828	Callee	LOG_MMU		6761632	0					
ANR	6761829	Identifier	LOG_MMU		6761632	0					
ANR	6761830	ArgumentList	"""PTE access granted !\\n"""		6761632	1					
ANR	6761831	Argument	"""PTE access granted !\\n"""		6761632	0					
ANR	6761832	PrimaryExpression	"""PTE access granted !\\n"""		6761632	0					
ANR	6761833	ElseStatement	else		6761632	0					
ANR	6761834	CompoundStatement		65:19:1247:1247	6761632	0					
ANR	6761835	ExpressionStatement	"LOG_MMU ( ""PTE access rejected\\n"" )"	73:16:1440:1472	6761632	0	True				
ANR	6761836	CallExpression	"LOG_MMU ( ""PTE access rejected\\n"" )"		6761632	0					
ANR	6761837	Callee	LOG_MMU		6761632	0					
ANR	6761838	Identifier	LOG_MMU		6761632	0					
ANR	6761839	ArgumentList	"""PTE access rejected\\n"""		6761632	1					
ANR	6761840	Argument	"""PTE access rejected\\n"""		6761632	0					
ANR	6761841	PrimaryExpression	"""PTE access rejected\\n"""		6761632	0					
ANR	6761842	ReturnStatement	return ret ;	83:4:1514:1524	6761632	6	True				
ANR	6761843	Identifier	ret		6761632	0					
ANR	6761844	ReturnType	static int		6761632	1					
ANR	6761845	Identifier	pte64_check		6761632	2					
ANR	6761846	ParameterList	"mmu_ctx_t * ctx , target_ulong pte0 , target_ulong pte1 , int h , int rw , int type"		6761632	3					
ANR	6761847	Parameter	mmu_ctx_t * ctx	1:23:23:36	6761632	0	True				
ANR	6761848	ParameterType	mmu_ctx_t *		6761632	0					
ANR	6761849	Identifier	ctx		6761632	1					
ANR	6761850	Parameter	target_ulong pte0	1:39:39:55	6761632	1	True				
ANR	6761851	ParameterType	target_ulong		6761632	0					
ANR	6761852	Identifier	pte0		6761632	1					
ANR	6761853	Parameter	target_ulong pte1	3:23:82:98	6761632	2	True				
ANR	6761854	ParameterType	target_ulong		6761632	0					
ANR	6761855	Identifier	pte1		6761632	1					
ANR	6761856	Parameter	int h	3:42:101:105	6761632	3	True				
ANR	6761857	ParameterType	int		6761632	0					
ANR	6761858	Identifier	h		6761632	1					
ANR	6761859	Parameter	int rw	3:49:108:113	6761632	4	True				
ANR	6761860	ParameterType	int		6761632	0					
ANR	6761861	Identifier	rw		6761632	1					
ANR	6761862	Parameter	int type	3:57:116:123	6761632	5	True				
ANR	6761863	ParameterType	int		6761632	0					
ANR	6761864	Identifier	type		6761632	1					
ANR	6761865	CFGEntryNode	ENTRY		6761632		True				
ANR	6761866	CFGExitNode	EXIT		6761632		True				
ANR	6761867	Symbol	ret		6761632						
ANR	6761868	Symbol	pp		6761632						
ANR	6761869	Symbol	ptev		6761632						
ANR	6761870	Symbol	access		6761632						
ANR	6761871	Symbol	pte1		6761632						
ANR	6761872	Symbol	rw		6761632						
ANR	6761873	Symbol	ctx		6761632						
ANR	6761874	Symbol	check_prot		6761632						
ANR	6761875	Symbol	h		6761632						
ANR	6761876	Symbol	ctx -> key		6761632						
ANR	6761877	Symbol	mmask		6761632						
ANR	6761878	Symbol	type		6761632						
ANR	6761879	Symbol	ctx -> ptem		6761632						
ANR	6761880	Symbol	* ctx		6761632						
ANR	6761881	Symbol	PTE64_PTEM_MASK		6761632						
ANR	6761882	Symbol	pteh		6761632						
ANR	6761883	Symbol	ctx -> prot		6761632						
ANR	6761884	Symbol	PTE64_CHECK_MASK		6761632						
ANR	6761885	Symbol	pp_check		6761632						
ANR	6761886	Symbol	ptem		6761632						
ANR	6761887	Symbol	ctx -> raddr		6761632						
ANR	6761888	Symbol	pte0		6761632						
ANR	6761889	Symbol	pte64_is_valid		6761632						
ANR	6761890	Symbol	ctx -> nx		6761632						
