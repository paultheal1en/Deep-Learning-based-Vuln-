command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4820882	File	/home/p4ultr4n/workplace/ReVeal/raw_code/imc_get_coeffs_0.c								
ANR	4820883	Function	imc_get_coeffs	1:0:0:919							
ANR	4820884	FunctionDef	"imc_get_coeffs (AVCodecContext * avctx , IMCContext * q , IMCChannel * chctx)"		4820883	0					
ANR	4820885	CompoundStatement		5:0:113:919	4820883	0					
ANR	4820886	IdentifierDeclStatement	"int i , j , cw_len , cw ;"	7:4:120:140	4820883	0	True				
ANR	4820887	IdentifierDecl	i		4820883	0					
ANR	4820888	IdentifierDeclType	int		4820883	0					
ANR	4820889	Identifier	i		4820883	1					
ANR	4820890	IdentifierDecl	j		4820883	1					
ANR	4820891	IdentifierDeclType	int		4820883	0					
ANR	4820892	Identifier	j		4820883	1					
ANR	4820893	IdentifierDecl	cw_len		4820883	2					
ANR	4820894	IdentifierDeclType	int		4820883	0					
ANR	4820895	Identifier	cw_len		4820883	1					
ANR	4820896	IdentifierDecl	cw		4820883	3					
ANR	4820897	IdentifierDeclType	int		4820883	0					
ANR	4820898	Identifier	cw		4820883	1					
ANR	4820899	ForStatement	for ( i = 0 ; i < BANDS ; i ++ )		4820883	1					
ANR	4820900	ForInit	i = 0 ;	11:9:154:159	4820883	0	True				
ANR	4820901	AssignmentExpression	i = 0		4820883	0		=			
ANR	4820902	Identifier	i		4820883	0					
ANR	4820903	PrimaryExpression	0		4820883	1					
ANR	4820904	Condition	i < BANDS	11:16:161:169	4820883	1	True				
ANR	4820905	RelationalExpression	i < BANDS		4820883	0		<			
ANR	4820906	Identifier	i		4820883	0					
ANR	4820907	Identifier	BANDS		4820883	1					
ANR	4820908	PostIncDecOperationExpression	i ++	11:27:172:174	4820883	2	True				
ANR	4820909	Identifier	i		4820883	0					
ANR	4820910	IncDec	++		4820883	1					
ANR	4820911	CompoundStatement		7:32:63:63	4820883	3					
ANR	4820912	IfStatement	if ( ! chctx -> sumLenArr [ i ] )		4820883	0					
ANR	4820913	Condition	! chctx -> sumLenArr [ i ]	13:12:192:211	4820883	0	True				
ANR	4820914	UnaryOperationExpression	! chctx -> sumLenArr [ i ]		4820883	0					
ANR	4820915	UnaryOperator	!		4820883	0					
ANR	4820916	ArrayIndexing	chctx -> sumLenArr [ i ]		4820883	1					
ANR	4820917	PtrMemberAccess	chctx -> sumLenArr		4820883	0					
ANR	4820918	Identifier	chctx		4820883	0					
ANR	4820919	Identifier	sumLenArr		4820883	1					
ANR	4820920	Identifier	i		4820883	1					
ANR	4820921	ContinueStatement	continue ;	15:12:227:235	4820883	1	True				
ANR	4820922	IfStatement	if ( chctx -> bandFlagsBuf [ i ] || chctx -> bandWidthT [ i ] )		4820883	1					
ANR	4820923	Condition	chctx -> bandFlagsBuf [ i ] || chctx -> bandWidthT [ i ]	17:12:250:295	4820883	0	True				
ANR	4820924	OrExpression	chctx -> bandFlagsBuf [ i ] || chctx -> bandWidthT [ i ]		4820883	0		||			
ANR	4820925	ArrayIndexing	chctx -> bandFlagsBuf [ i ]		4820883	0					
ANR	4820926	PtrMemberAccess	chctx -> bandFlagsBuf		4820883	0					
ANR	4820927	Identifier	chctx		4820883	0					
ANR	4820928	Identifier	bandFlagsBuf		4820883	1					
ANR	4820929	Identifier	i		4820883	1					
ANR	4820930	ArrayIndexing	chctx -> bandWidthT [ i ]		4820883	1					
ANR	4820931	PtrMemberAccess	chctx -> bandWidthT		4820883	0					
ANR	4820932	Identifier	chctx		4820883	0					
ANR	4820933	Identifier	bandWidthT		4820883	1					
ANR	4820934	Identifier	i		4820883	1					
ANR	4820935	CompoundStatement		13:60:184:184	4820883	1					
ANR	4820936	ForStatement	for ( j = band_tab [ i ] ; j < band_tab [ i + 1 ] ; j ++ )		4820883	0					
ANR	4820937	ForInit	j = band_tab [ i ] ;	19:17:318:333	4820883	0	True				
ANR	4820938	AssignmentExpression	j = band_tab [ i ]		4820883	0		=			
ANR	4820939	Identifier	j		4820883	0					
ANR	4820940	ArrayIndexing	band_tab [ i ]		4820883	1					
ANR	4820941	Identifier	band_tab		4820883	0					
ANR	4820942	Identifier	i		4820883	1					
ANR	4820943	Condition	j < band_tab [ i + 1 ]	19:34:335:353	4820883	1	True				
ANR	4820944	RelationalExpression	j < band_tab [ i + 1 ]		4820883	0		<			
ANR	4820945	Identifier	j		4820883	0					
ANR	4820946	ArrayIndexing	band_tab [ i + 1 ]		4820883	1					
ANR	4820947	Identifier	band_tab		4820883	0					
ANR	4820948	AdditiveExpression	i + 1		4820883	1		+			
ANR	4820949	Identifier	i		4820883	0					
ANR	4820950	PrimaryExpression	1		4820883	1					
ANR	4820951	PostIncDecOperationExpression	j ++	19:55:356:358	4820883	2	True				
ANR	4820952	Identifier	j		4820883	0					
ANR	4820953	IncDec	++		4820883	1					
ANR	4820954	CompoundStatement		15:60:247:247	4820883	3					
ANR	4820955	ExpressionStatement	cw_len = chctx -> CWlengthT [ j ]	21:16:380:408	4820883	0	True				
ANR	4820956	AssignmentExpression	cw_len = chctx -> CWlengthT [ j ]		4820883	0		=			
ANR	4820957	Identifier	cw_len		4820883	0					
ANR	4820958	ArrayIndexing	chctx -> CWlengthT [ j ]		4820883	1					
ANR	4820959	PtrMemberAccess	chctx -> CWlengthT		4820883	0					
ANR	4820960	Identifier	chctx		4820883	0					
ANR	4820961	Identifier	CWlengthT		4820883	1					
ANR	4820962	Identifier	j		4820883	1					
ANR	4820963	ExpressionStatement	cw = 0	23:16:427:433	4820883	1	True				
ANR	4820964	AssignmentExpression	cw = 0		4820883	0		=			
ANR	4820965	Identifier	cw		4820883	0					
ANR	4820966	PrimaryExpression	0		4820883	1					
ANR	4820967	IfStatement	if ( get_bits_count ( & q -> gb ) + cw_len > 512 )		4820883	2					
ANR	4820968	Condition	get_bits_count ( & q -> gb ) + cw_len > 512	27:20:458:494	4820883	0	True				
ANR	4820969	RelationalExpression	get_bits_count ( & q -> gb ) + cw_len > 512		4820883	0		>			
ANR	4820970	AdditiveExpression	get_bits_count ( & q -> gb ) + cw_len		4820883	0		+			
ANR	4820971	CallExpression	get_bits_count ( & q -> gb )		4820883	0					
ANR	4820972	Callee	get_bits_count		4820883	0					
ANR	4820973	Identifier	get_bits_count		4820883	0					
ANR	4820974	ArgumentList	& q -> gb		4820883	1					
ANR	4820975	Argument	& q -> gb		4820883	0					
ANR	4820976	UnaryOperationExpression	& q -> gb		4820883	0					
ANR	4820977	UnaryOperator	&		4820883	0					
ANR	4820978	PtrMemberAccess	q -> gb		4820883	1					
ANR	4820979	Identifier	q		4820883	0					
ANR	4820980	Identifier	gb		4820883	1					
ANR	4820981	Identifier	cw_len		4820883	1					
ANR	4820982	PrimaryExpression	512		4820883	1					
ANR	4820983	CompoundStatement		23:59:383:383	4820883	1					
ANR	4820984	Statement	av_log	29:20:520:525	4820883	0	True				
ANR	4820985	Statement	(	29:26:526:526	4820883	1	True				
ANR	4820986	Statement	avctx	29:27:527:531	4820883	2	True				
ANR	4820987	Statement	","	29:32:532:532	4820883	3	True				
ANR	4820988	Statement	AV_LOG_WARNING	29:34:534:547	4820883	4	True				
ANR	4820989	Statement	","	29:48:548:548	4820883	5	True				
ANR	4820990	Statement	"""Potential problem on band %i, coefficient %i"""	31:27:578:623	4820883	6	True				
ANR	4820991	Statement	""": cw_len=%i\\n"""	33:27:653:667	4820883	7	True				
ANR	4820992	Statement	","	33:42:668:668	4820883	8	True				
ANR	4820993	Statement	i	33:44:670:670	4820883	9	True				
ANR	4820994	Statement	","	33:45:671:671	4820883	10	True				
ANR	4820995	Statement	j	33:47:673:673	4820883	11	True				
ANR	4820996	Statement	","	33:48:674:674	4820883	12	True				
ANR	4820997	Statement	cw_len	33:50:676:681	4820883	13	True				
ANR	4820998	Statement	)	33:56:682:682	4820883	14	True				
ANR	4820999	ExpressionStatement		33:57:683:683	4820883	15	True				
ANR	4821000	IfStatement	if ( cw_len && ( ! chctx -> bandFlagsBuf [ i ] || ! chctx -> skipFlags [ j ] ) )		4820883	3					
ANR	4821001	Condition	cw_len && ( ! chctx -> bandFlagsBuf [ i ] || ! chctx -> skipFlags [ j ] )	39:20:727:785	4820883	0	True				
ANR	4821002	AndExpression	cw_len && ( ! chctx -> bandFlagsBuf [ i ] || ! chctx -> skipFlags [ j ] )		4820883	0		&&			
ANR	4821003	Identifier	cw_len		4820883	0					
ANR	4821004	OrExpression	! chctx -> bandFlagsBuf [ i ] || ! chctx -> skipFlags [ j ]		4820883	1		||			
ANR	4821005	UnaryOperationExpression	! chctx -> bandFlagsBuf [ i ]		4820883	0					
ANR	4821006	UnaryOperator	!		4820883	0					
ANR	4821007	ArrayIndexing	chctx -> bandFlagsBuf [ i ]		4820883	1					
ANR	4821008	PtrMemberAccess	chctx -> bandFlagsBuf		4820883	0					
ANR	4821009	Identifier	chctx		4820883	0					
ANR	4821010	Identifier	bandFlagsBuf		4820883	1					
ANR	4821011	Identifier	i		4820883	1					
ANR	4821012	UnaryOperationExpression	! chctx -> skipFlags [ j ]		4820883	1					
ANR	4821013	UnaryOperator	!		4820883	0					
ANR	4821014	ArrayIndexing	chctx -> skipFlags [ j ]		4820883	1					
ANR	4821015	PtrMemberAccess	chctx -> skipFlags		4820883	0					
ANR	4821016	Identifier	chctx		4820883	0					
ANR	4821017	Identifier	skipFlags		4820883	1					
ANR	4821018	Identifier	j		4820883	1					
ANR	4821019	ExpressionStatement	"cw = get_bits ( & q -> gb , cw_len )"	41:20:809:838	4820883	1	True				
ANR	4821020	AssignmentExpression	"cw = get_bits ( & q -> gb , cw_len )"		4820883	0		=			
ANR	4821021	Identifier	cw		4820883	0					
ANR	4821022	CallExpression	"get_bits ( & q -> gb , cw_len )"		4820883	1					
ANR	4821023	Callee	get_bits		4820883	0					
ANR	4821024	Identifier	get_bits		4820883	0					
ANR	4821025	ArgumentList	& q -> gb		4820883	1					
ANR	4821026	Argument	& q -> gb		4820883	0					
ANR	4821027	UnaryOperationExpression	& q -> gb		4820883	0					
ANR	4821028	UnaryOperator	&		4820883	0					
ANR	4821029	PtrMemberAccess	q -> gb		4820883	1					
ANR	4821030	Identifier	q		4820883	0					
ANR	4821031	Identifier	gb		4820883	1					
ANR	4821032	Argument	cw_len		4820883	1					
ANR	4821033	Identifier	cw_len		4820883	0					
ANR	4821034	ExpressionStatement	chctx -> codewords [ j ] = cw	45:16:859:883	4820883	4	True				
ANR	4821035	AssignmentExpression	chctx -> codewords [ j ] = cw		4820883	0		=			
ANR	4821036	ArrayIndexing	chctx -> codewords [ j ]		4820883	0					
ANR	4821037	PtrMemberAccess	chctx -> codewords		4820883	0					
ANR	4821038	Identifier	chctx		4820883	0					
ANR	4821039	Identifier	codewords		4820883	1					
ANR	4821040	Identifier	j		4820883	1					
ANR	4821041	Identifier	cw		4820883	1					
ANR	4821042	ReturnType	static void		4820883	1					
ANR	4821043	Identifier	imc_get_coeffs		4820883	2					
ANR	4821044	ParameterList	"AVCodecContext * avctx , IMCContext * q , IMCChannel * chctx"		4820883	3					
ANR	4821045	Parameter	AVCodecContext * avctx	1:27:27:47	4820883	0	True				
ANR	4821046	ParameterType	AVCodecContext *		4820883	0					
ANR	4821047	Identifier	avctx		4820883	1					
ANR	4821048	Parameter	IMCContext * q	3:27:78:90	4820883	1	True				
ANR	4821049	ParameterType	IMCContext *		4820883	0					
ANR	4821050	Identifier	q		4820883	1					
ANR	4821051	Parameter	IMCChannel * chctx	3:42:93:109	4820883	2	True				
ANR	4821052	ParameterType	IMCChannel *		4820883	0					
ANR	4821053	Identifier	chctx		4820883	1					
ANR	4821054	CFGEntryNode	ENTRY		4820883		True				
ANR	4821055	CFGExitNode	EXIT		4820883		True				
ANR	4821056	Symbol	chctx		4820883						
ANR	4821057	Symbol	* chctx -> codewords		4820883						
ANR	4821058	Symbol	chctx -> sumLenArr		4820883						
ANR	4821059	Symbol	chctx -> CWlengthT		4820883						
ANR	4821060	Symbol	get_bits		4820883						
ANR	4821061	Symbol	* chctx -> bandFlagsBuf		4820883						
ANR	4821062	Symbol	chctx -> skipFlags		4820883						
ANR	4821063	Symbol	* * chctx		4820883						
ANR	4821064	Symbol	band_tab		4820883						
ANR	4821065	Symbol	* chctx -> CWlengthT		4820883						
ANR	4821066	Symbol	avctx		4820883						
ANR	4821067	Symbol	* chctx -> bandWidthT		4820883						
ANR	4821068	Symbol	& q -> gb		4820883						
ANR	4821069	Symbol	* chctx -> sumLenArr		4820883						
ANR	4821070	Symbol	cw_len		4820883						
ANR	4821071	Symbol	chctx -> bandWidthT		4820883						
ANR	4821072	Symbol	chctx -> bandFlagsBuf		4820883						
ANR	4821073	Symbol	* chctx		4820883						
ANR	4821074	Symbol	i		4820883						
ANR	4821075	Symbol	j		4820883						
ANR	4821076	Symbol	* band_tab		4820883						
ANR	4821077	Symbol	chctx -> codewords		4820883						
ANR	4821078	Symbol	get_bits_count		4820883						
ANR	4821079	Symbol	q		4820883						
ANR	4821080	Symbol	* i		4820883						
ANR	4821081	Symbol	cw		4820883						
ANR	4821082	Symbol	* j		4820883						
ANR	4821083	Symbol	BANDS		4820883						
ANR	4821084	Symbol	* chctx -> skipFlags		4820883						
