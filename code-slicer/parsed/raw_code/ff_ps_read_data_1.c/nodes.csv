command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3610001	File	/home/p4ultr4n/workplace/ReVeal/raw_code/ff_ps_read_data_1.c								
ANR	3610002	Function	ff_ps_read_data	1:0:0:4379							
ANR	3610003	FunctionDef	"ff_ps_read_data (AVCodecContext * avctx , GetBitContext * gb_host , PSContext * ps , int bits_left)"		3610002	0					
ANR	3610004	CompoundStatement		3:0:98:4379	3610002	0					
ANR	3610005	IdentifierDeclStatement	int e ;	5:4:105:110	3610002	0	True				
ANR	3610006	IdentifierDecl	e		3610002	0					
ANR	3610007	IdentifierDeclType	int		3610002	0					
ANR	3610008	Identifier	e		3610002	1					
ANR	3610009	IdentifierDeclStatement	int bit_count_start = get_bits_count ( gb_host ) ;	7:4:117:162	3610002	1	True				
ANR	3610010	IdentifierDecl	bit_count_start = get_bits_count ( gb_host )		3610002	0					
ANR	3610011	IdentifierDeclType	int		3610002	0					
ANR	3610012	Identifier	bit_count_start		3610002	1					
ANR	3610013	AssignmentExpression	bit_count_start = get_bits_count ( gb_host )		3610002	2		=			
ANR	3610014	Identifier	bit_count_start		3610002	0					
ANR	3610015	CallExpression	get_bits_count ( gb_host )		3610002	1					
ANR	3610016	Callee	get_bits_count		3610002	0					
ANR	3610017	Identifier	get_bits_count		3610002	0					
ANR	3610018	ArgumentList	gb_host		3610002	1					
ANR	3610019	Argument	gb_host		3610002	0					
ANR	3610020	Identifier	gb_host		3610002	0					
ANR	3610021	IdentifierDeclStatement	int header ;	9:4:169:179	3610002	2	True				
ANR	3610022	IdentifierDecl	header		3610002	0					
ANR	3610023	IdentifierDeclType	int		3610002	0					
ANR	3610024	Identifier	header		3610002	1					
ANR	3610025	IdentifierDeclStatement	int bits_consumed ;	11:4:186:203	3610002	3	True				
ANR	3610026	IdentifierDecl	bits_consumed		3610002	0					
ANR	3610027	IdentifierDeclType	int		3610002	0					
ANR	3610028	Identifier	bits_consumed		3610002	1					
ANR	3610029	IdentifierDeclStatement	"GetBitContext gbc = * gb_host , * gb = & gbc ;"	13:4:210:250	3610002	4	True				
ANR	3610030	IdentifierDecl	gbc = * gb_host		3610002	0					
ANR	3610031	IdentifierDeclType	GetBitContext		3610002	0					
ANR	3610032	Identifier	gbc		3610002	1					
ANR	3610033	AssignmentExpression	gbc = * gb_host		3610002	2		=			
ANR	3610034	Identifier	gbc		3610002	0					
ANR	3610035	UnaryOperationExpression	* gb_host		3610002	1					
ANR	3610036	UnaryOperator	*		3610002	0					
ANR	3610037	Identifier	gb_host		3610002	1					
ANR	3610038	IdentifierDecl	* gb = & gbc		3610002	1					
ANR	3610039	IdentifierDeclType	GetBitContext *		3610002	0					
ANR	3610040	Identifier	gb		3610002	1					
ANR	3610041	AssignmentExpression	* gb = & gbc		3610002	2		=			
ANR	3610042	Identifier	gb		3610002	0					
ANR	3610043	UnaryOperationExpression	& gbc		3610002	1					
ANR	3610044	UnaryOperator	&		3610002	0					
ANR	3610045	Identifier	gbc		3610002	1					
ANR	3610046	ExpressionStatement	header = get_bits1 ( gb )	17:4:259:281	3610002	5	True				
ANR	3610047	AssignmentExpression	header = get_bits1 ( gb )		3610002	0		=			
ANR	3610048	Identifier	header		3610002	0					
ANR	3610049	CallExpression	get_bits1 ( gb )		3610002	1					
ANR	3610050	Callee	get_bits1		3610002	0					
ANR	3610051	Identifier	get_bits1		3610002	0					
ANR	3610052	ArgumentList	gb		3610002	1					
ANR	3610053	Argument	gb		3610002	0					
ANR	3610054	Identifier	gb		3610002	0					
ANR	3610055	IfStatement	if ( header )		3610002	6					
ANR	3610056	Condition	header	19:8:292:297	3610002	0	True				
ANR	3610057	Identifier	header		3610002	0					
ANR	3610058	CompoundStatement		17:16:201:201	3610002	1					
ANR	3610059	ExpressionStatement	ps -> enable_iid = get_bits1 ( gb )	21:8:334:364	3610002	0	True				
ANR	3610060	AssignmentExpression	ps -> enable_iid = get_bits1 ( gb )		3610002	0		=			
ANR	3610061	PtrMemberAccess	ps -> enable_iid		3610002	0					
ANR	3610062	Identifier	ps		3610002	0					
ANR	3610063	Identifier	enable_iid		3610002	1					
ANR	3610064	CallExpression	get_bits1 ( gb )		3610002	1					
ANR	3610065	Callee	get_bits1		3610002	0					
ANR	3610066	Identifier	get_bits1		3610002	0					
ANR	3610067	ArgumentList	gb		3610002	1					
ANR	3610068	Argument	gb		3610002	0					
ANR	3610069	Identifier	gb		3610002	0					
ANR	3610070	IfStatement	if ( ps -> enable_iid )		3610002	1					
ANR	3610071	Condition	ps -> enable_iid	23:12:379:392	3610002	0	True				
ANR	3610072	PtrMemberAccess	ps -> enable_iid		3610002	0					
ANR	3610073	Identifier	ps		3610002	0					
ANR	3610074	Identifier	enable_iid		3610002	1					
ANR	3610075	CompoundStatement		23:12:311:341	3610002	1					
ANR	3610076	IdentifierDeclStatement	"int iid_mode = get_bits ( gb , 3 ) ;"	25:12:410:440	3610002	0	True				
ANR	3610077	IdentifierDecl	"iid_mode = get_bits ( gb , 3 )"		3610002	0					
ANR	3610078	IdentifierDeclType	int		3610002	0					
ANR	3610079	Identifier	iid_mode		3610002	1					
ANR	3610080	AssignmentExpression	"iid_mode = get_bits ( gb , 3 )"		3610002	2		=			
ANR	3610081	Identifier	iid_mode		3610002	0					
ANR	3610082	CallExpression	"get_bits ( gb , 3 )"		3610002	1					
ANR	3610083	Callee	get_bits		3610002	0					
ANR	3610084	Identifier	get_bits		3610002	0					
ANR	3610085	ArgumentList	gb		3610002	1					
ANR	3610086	Argument	gb		3610002	0					
ANR	3610087	Identifier	gb		3610002	0					
ANR	3610088	Argument	3		3610002	1					
ANR	3610089	PrimaryExpression	3		3610002	0					
ANR	3610090	IfStatement	if ( iid_mode > 5 )		3610002	1					
ANR	3610091	Condition	iid_mode > 5	27:16:459:470	3610002	0	True				
ANR	3610092	RelationalExpression	iid_mode > 5		3610002	0		>			
ANR	3610093	Identifier	iid_mode		3610002	0					
ANR	3610094	PrimaryExpression	5		3610002	1					
ANR	3610095	CompoundStatement		25:30:374:374	3610002	1					
ANR	3610096	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""iid_mode %d is reserved.\\n"" , iid_mode )"	29:16:492:583	3610002	0	True				
ANR	3610097	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""iid_mode %d is reserved.\\n"" , iid_mode )"		3610002	0					
ANR	3610098	Callee	av_log		3610002	0					
ANR	3610099	Identifier	av_log		3610002	0					
ANR	3610100	ArgumentList	avctx		3610002	1					
ANR	3610101	Argument	avctx		3610002	0					
ANR	3610102	Identifier	avctx		3610002	0					
ANR	3610103	Argument	AV_LOG_ERROR		3610002	1					
ANR	3610104	Identifier	AV_LOG_ERROR		3610002	0					
ANR	3610105	Argument	"""iid_mode %d is reserved.\\n"""		3610002	2					
ANR	3610106	PrimaryExpression	"""iid_mode %d is reserved.\\n"""		3610002	0					
ANR	3610107	Argument	iid_mode		3610002	3					
ANR	3610108	Identifier	iid_mode		3610002	0					
ANR	3610109	GotoStatement	goto err ;	33:16:602:610	3610002	1	True				
ANR	3610110	Identifier	err		3610002	0					
ANR	3610111	ExpressionStatement	ps -> nr_iid_par = nr_iidicc_par_tab [ iid_mode ]	37:12:640:687	3610002	2	True				
ANR	3610112	AssignmentExpression	ps -> nr_iid_par = nr_iidicc_par_tab [ iid_mode ]		3610002	0		=			
ANR	3610113	PtrMemberAccess	ps -> nr_iid_par		3610002	0					
ANR	3610114	Identifier	ps		3610002	0					
ANR	3610115	Identifier	nr_iid_par		3610002	1					
ANR	3610116	ArrayIndexing	nr_iidicc_par_tab [ iid_mode ]		3610002	1					
ANR	3610117	Identifier	nr_iidicc_par_tab		3610002	0					
ANR	3610118	Identifier	iid_mode		3610002	1					
ANR	3610119	ExpressionStatement	ps -> iid_quant = iid_mode > 2	39:12:702:734	3610002	3	True				
ANR	3610120	AssignmentExpression	ps -> iid_quant = iid_mode > 2		3610002	0		=			
ANR	3610121	PtrMemberAccess	ps -> iid_quant		3610002	0					
ANR	3610122	Identifier	ps		3610002	0					
ANR	3610123	Identifier	iid_quant		3610002	1					
ANR	3610124	RelationalExpression	iid_mode > 2		3610002	1		>			
ANR	3610125	Identifier	iid_mode		3610002	0					
ANR	3610126	PrimaryExpression	2		3610002	1					
ANR	3610127	ExpressionStatement	ps -> nr_ipdopd_par = nr_iidopd_par_tab [ iid_mode ]	41:12:749:796	3610002	4	True				
ANR	3610128	AssignmentExpression	ps -> nr_ipdopd_par = nr_iidopd_par_tab [ iid_mode ]		3610002	0		=			
ANR	3610129	PtrMemberAccess	ps -> nr_ipdopd_par		3610002	0					
ANR	3610130	Identifier	ps		3610002	0					
ANR	3610131	Identifier	nr_ipdopd_par		3610002	1					
ANR	3610132	ArrayIndexing	nr_iidopd_par_tab [ iid_mode ]		3610002	1					
ANR	3610133	Identifier	nr_iidopd_par_tab		3610002	0					
ANR	3610134	Identifier	iid_mode		3610002	1					
ANR	3610135	ExpressionStatement	ps -> enable_icc = get_bits1 ( gb )	45:8:818:848	3610002	2	True				
ANR	3610136	AssignmentExpression	ps -> enable_icc = get_bits1 ( gb )		3610002	0		=			
ANR	3610137	PtrMemberAccess	ps -> enable_icc		3610002	0					
ANR	3610138	Identifier	ps		3610002	0					
ANR	3610139	Identifier	enable_icc		3610002	1					
ANR	3610140	CallExpression	get_bits1 ( gb )		3610002	1					
ANR	3610141	Callee	get_bits1		3610002	0					
ANR	3610142	Identifier	get_bits1		3610002	0					
ANR	3610143	ArgumentList	gb		3610002	1					
ANR	3610144	Argument	gb		3610002	0					
ANR	3610145	Identifier	gb		3610002	0					
ANR	3610146	IfStatement	if ( ps -> enable_icc )		3610002	3					
ANR	3610147	Condition	ps -> enable_icc	47:12:863:876	3610002	0	True				
ANR	3610148	PtrMemberAccess	ps -> enable_icc		3610002	0					
ANR	3610149	Identifier	ps		3610002	0					
ANR	3610150	Identifier	enable_icc		3610002	1					
ANR	3610151	CompoundStatement		45:28:780:780	3610002	1					
ANR	3610152	ExpressionStatement	"ps -> icc_mode = get_bits ( gb , 3 )"	49:12:894:924	3610002	0	True				
ANR	3610153	AssignmentExpression	"ps -> icc_mode = get_bits ( gb , 3 )"		3610002	0		=			
ANR	3610154	PtrMemberAccess	ps -> icc_mode		3610002	0					
ANR	3610155	Identifier	ps		3610002	0					
ANR	3610156	Identifier	icc_mode		3610002	1					
ANR	3610157	CallExpression	"get_bits ( gb , 3 )"		3610002	1					
ANR	3610158	Callee	get_bits		3610002	0					
ANR	3610159	Identifier	get_bits		3610002	0					
ANR	3610160	ArgumentList	gb		3610002	1					
ANR	3610161	Argument	gb		3610002	0					
ANR	3610162	Identifier	gb		3610002	0					
ANR	3610163	Argument	3		3610002	1					
ANR	3610164	PrimaryExpression	3		3610002	0					
ANR	3610165	IfStatement	if ( ps -> icc_mode > 5 )		3610002	1					
ANR	3610166	Condition	ps -> icc_mode > 5	51:16:943:958	3610002	0	True				
ANR	3610167	RelationalExpression	ps -> icc_mode > 5		3610002	0		>			
ANR	3610168	PtrMemberAccess	ps -> icc_mode		3610002	0					
ANR	3610169	Identifier	ps		3610002	0					
ANR	3610170	Identifier	icc_mode		3610002	1					
ANR	3610171	PrimaryExpression	5		3610002	1					
ANR	3610172	CompoundStatement		49:34:862:862	3610002	1					
ANR	3610173	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""icc_mode %d is reserved.\\n"" , ps -> icc_mode )"	53:16:980:1075	3610002	0	True				
ANR	3610174	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""icc_mode %d is reserved.\\n"" , ps -> icc_mode )"		3610002	0					
ANR	3610175	Callee	av_log		3610002	0					
ANR	3610176	Identifier	av_log		3610002	0					
ANR	3610177	ArgumentList	avctx		3610002	1					
ANR	3610178	Argument	avctx		3610002	0					
ANR	3610179	Identifier	avctx		3610002	0					
ANR	3610180	Argument	AV_LOG_ERROR		3610002	1					
ANR	3610181	Identifier	AV_LOG_ERROR		3610002	0					
ANR	3610182	Argument	"""icc_mode %d is reserved.\\n"""		3610002	2					
ANR	3610183	PrimaryExpression	"""icc_mode %d is reserved.\\n"""		3610002	0					
ANR	3610184	Argument	ps -> icc_mode		3610002	3					
ANR	3610185	PtrMemberAccess	ps -> icc_mode		3610002	0					
ANR	3610186	Identifier	ps		3610002	0					
ANR	3610187	Identifier	icc_mode		3610002	1					
ANR	3610188	GotoStatement	goto err ;	57:16:1094:1102	3610002	1	True				
ANR	3610189	Identifier	err		3610002	0					
ANR	3610190	ExpressionStatement	ps -> nr_icc_par = nr_iidicc_par_tab [ ps -> icc_mode ]	61:12:1132:1180	3610002	2	True				
ANR	3610191	AssignmentExpression	ps -> nr_icc_par = nr_iidicc_par_tab [ ps -> icc_mode ]		3610002	0		=			
ANR	3610192	PtrMemberAccess	ps -> nr_icc_par		3610002	0					
ANR	3610193	Identifier	ps		3610002	0					
ANR	3610194	Identifier	nr_icc_par		3610002	1					
ANR	3610195	ArrayIndexing	nr_iidicc_par_tab [ ps -> icc_mode ]		3610002	1					
ANR	3610196	Identifier	nr_iidicc_par_tab		3610002	0					
ANR	3610197	PtrMemberAccess	ps -> icc_mode		3610002	1					
ANR	3610198	Identifier	ps		3610002	0					
ANR	3610199	Identifier	icc_mode		3610002	1					
ANR	3610200	ExpressionStatement	ps -> enable_ext = get_bits1 ( gb )	65:8:1202:1232	3610002	4	True				
ANR	3610201	AssignmentExpression	ps -> enable_ext = get_bits1 ( gb )		3610002	0		=			
ANR	3610202	PtrMemberAccess	ps -> enable_ext		3610002	0					
ANR	3610203	Identifier	ps		3610002	0					
ANR	3610204	Identifier	enable_ext		3610002	1					
ANR	3610205	CallExpression	get_bits1 ( gb )		3610002	1					
ANR	3610206	Callee	get_bits1		3610002	0					
ANR	3610207	Identifier	get_bits1		3610002	0					
ANR	3610208	ArgumentList	gb		3610002	1					
ANR	3610209	Argument	gb		3610002	0					
ANR	3610210	Identifier	gb		3610002	0					
ANR	3610211	ExpressionStatement	ps -> frame_class = get_bits1 ( gb )	71:4:1248:1279	3610002	7	True				
ANR	3610212	AssignmentExpression	ps -> frame_class = get_bits1 ( gb )		3610002	0		=			
ANR	3610213	PtrMemberAccess	ps -> frame_class		3610002	0					
ANR	3610214	Identifier	ps		3610002	0					
ANR	3610215	Identifier	frame_class		3610002	1					
ANR	3610216	CallExpression	get_bits1 ( gb )		3610002	1					
ANR	3610217	Callee	get_bits1		3610002	0					
ANR	3610218	Identifier	get_bits1		3610002	0					
ANR	3610219	ArgumentList	gb		3610002	1					
ANR	3610220	Argument	gb		3610002	0					
ANR	3610221	Identifier	gb		3610002	0					
ANR	3610222	ExpressionStatement	ps -> num_env_old = ps -> num_env	73:4:1286:1315	3610002	8	True				
ANR	3610223	AssignmentExpression	ps -> num_env_old = ps -> num_env		3610002	0		=			
ANR	3610224	PtrMemberAccess	ps -> num_env_old		3610002	0					
ANR	3610225	Identifier	ps		3610002	0					
ANR	3610226	Identifier	num_env_old		3610002	1					
ANR	3610227	PtrMemberAccess	ps -> num_env		3610002	1					
ANR	3610228	Identifier	ps		3610002	0					
ANR	3610229	Identifier	num_env		3610002	1					
ANR	3610230	ExpressionStatement	"ps -> num_env = num_env_tab [ ps -> frame_class ] [ get_bits ( gb , 2 ) ]"	75:4:1322:1385	3610002	9	True				
ANR	3610231	AssignmentExpression	"ps -> num_env = num_env_tab [ ps -> frame_class ] [ get_bits ( gb , 2 ) ]"		3610002	0		=			
ANR	3610232	PtrMemberAccess	ps -> num_env		3610002	0					
ANR	3610233	Identifier	ps		3610002	0					
ANR	3610234	Identifier	num_env		3610002	1					
ANR	3610235	ArrayIndexing	"num_env_tab [ ps -> frame_class ] [ get_bits ( gb , 2 ) ]"		3610002	1					
ANR	3610236	ArrayIndexing	num_env_tab [ ps -> frame_class ]		3610002	0					
ANR	3610237	Identifier	num_env_tab		3610002	0					
ANR	3610238	PtrMemberAccess	ps -> frame_class		3610002	1					
ANR	3610239	Identifier	ps		3610002	0					
ANR	3610240	Identifier	frame_class		3610002	1					
ANR	3610241	CallExpression	"get_bits ( gb , 2 )"		3610002	1					
ANR	3610242	Callee	get_bits		3610002	0					
ANR	3610243	Identifier	get_bits		3610002	0					
ANR	3610244	ArgumentList	gb		3610002	1					
ANR	3610245	Argument	gb		3610002	0					
ANR	3610246	Identifier	gb		3610002	0					
ANR	3610247	Argument	2		3610002	1					
ANR	3610248	PrimaryExpression	2		3610002	0					
ANR	3610249	ExpressionStatement	ps -> border_position [ 0 ] = - 1	79:4:1394:1421	3610002	10	True				
ANR	3610250	AssignmentExpression	ps -> border_position [ 0 ] = - 1		3610002	0		=			
ANR	3610251	ArrayIndexing	ps -> border_position [ 0 ]		3610002	0					
ANR	3610252	PtrMemberAccess	ps -> border_position		3610002	0					
ANR	3610253	Identifier	ps		3610002	0					
ANR	3610254	Identifier	border_position		3610002	1					
ANR	3610255	PrimaryExpression	0		3610002	1					
ANR	3610256	UnaryOperationExpression	- 1		3610002	1					
ANR	3610257	UnaryOperator	-		3610002	0					
ANR	3610258	PrimaryExpression	1		3610002	1					
ANR	3610259	IfStatement	if ( ps -> frame_class )		3610002	11					
ANR	3610260	Condition	ps -> frame_class	81:8:1432:1446	3610002	0	True				
ANR	3610261	PtrMemberAccess	ps -> frame_class		3610002	0					
ANR	3610262	Identifier	ps		3610002	0					
ANR	3610263	Identifier	frame_class		3610002	1					
ANR	3610264	CompoundStatement		79:25:1350:1350	3610002	1					
ANR	3610265	ForStatement	for ( e = 1 ; e <= ps -> num_env ; e ++ )		3610002	0					
ANR	3610266	ForInit	e = 1 ;	83:13:1465:1470	3610002	0	True				
ANR	3610267	AssignmentExpression	e = 1		3610002	0		=			
ANR	3610268	Identifier	e		3610002	0					
ANR	3610269	PrimaryExpression	1		3610002	1					
ANR	3610270	Condition	e <= ps -> num_env	83:20:1472:1487	3610002	1	True				
ANR	3610271	RelationalExpression	e <= ps -> num_env		3610002	0		<=			
ANR	3610272	Identifier	e		3610002	0					
ANR	3610273	PtrMemberAccess	ps -> num_env		3610002	1					
ANR	3610274	Identifier	ps		3610002	0					
ANR	3610275	Identifier	num_env		3610002	1					
ANR	3610276	PostIncDecOperationExpression	e ++	83:38:1490:1492	3610002	2	True				
ANR	3610277	Identifier	e		3610002	0					
ANR	3610278	IncDec	++		3610002	1					
ANR	3610279	ExpressionStatement	"ps -> border_position [ e ] = get_bits ( gb , 5 )"	85:12:1508:1548	3610002	3	True				
ANR	3610280	AssignmentExpression	"ps -> border_position [ e ] = get_bits ( gb , 5 )"		3610002	0		=			
ANR	3610281	ArrayIndexing	ps -> border_position [ e ]		3610002	0					
ANR	3610282	PtrMemberAccess	ps -> border_position		3610002	0					
ANR	3610283	Identifier	ps		3610002	0					
ANR	3610284	Identifier	border_position		3610002	1					
ANR	3610285	Identifier	e		3610002	1					
ANR	3610286	CallExpression	"get_bits ( gb , 5 )"		3610002	1					
ANR	3610287	Callee	get_bits		3610002	0					
ANR	3610288	Identifier	get_bits		3610002	0					
ANR	3610289	ArgumentList	gb		3610002	1					
ANR	3610290	Argument	gb		3610002	0					
ANR	3610291	Identifier	gb		3610002	0					
ANR	3610292	Argument	5		3610002	1					
ANR	3610293	PrimaryExpression	5		3610002	0					
ANR	3610294	ElseStatement	else		3610002	0					
ANR	3610295	ForStatement	for ( e = 1 ; e <= ps -> num_env ; e ++ )		3610002	0					
ANR	3610296	ForInit	e = 1 ;	89:13:1576:1581	3610002	0	True				
ANR	3610297	AssignmentExpression	e = 1		3610002	0		=			
ANR	3610298	Identifier	e		3610002	0					
ANR	3610299	PrimaryExpression	1		3610002	1					
ANR	3610300	Condition	e <= ps -> num_env	89:20:1583:1598	3610002	1	True				
ANR	3610301	RelationalExpression	e <= ps -> num_env		3610002	0		<=			
ANR	3610302	Identifier	e		3610002	0					
ANR	3610303	PtrMemberAccess	ps -> num_env		3610002	1					
ANR	3610304	Identifier	ps		3610002	0					
ANR	3610305	Identifier	num_env		3610002	1					
ANR	3610306	PostIncDecOperationExpression	e ++	89:38:1601:1603	3610002	2	True				
ANR	3610307	Identifier	e		3610002	0					
ANR	3610308	IncDec	++		3610002	1					
ANR	3610309	ExpressionStatement	ps -> border_position [ e ] = ( e * numQMFSlots >> ff_log2_tab [ ps -> num_env ] ) - 1	91:12:1619:1693	3610002	3	True				
ANR	3610310	AssignmentExpression	ps -> border_position [ e ] = ( e * numQMFSlots >> ff_log2_tab [ ps -> num_env ] ) - 1		3610002	0		=			
ANR	3610311	ArrayIndexing	ps -> border_position [ e ]		3610002	0					
ANR	3610312	PtrMemberAccess	ps -> border_position		3610002	0					
ANR	3610313	Identifier	ps		3610002	0					
ANR	3610314	Identifier	border_position		3610002	1					
ANR	3610315	Identifier	e		3610002	1					
ANR	3610316	AdditiveExpression	( e * numQMFSlots >> ff_log2_tab [ ps -> num_env ] ) - 1		3610002	1		-			
ANR	3610317	ShiftExpression	e * numQMFSlots >> ff_log2_tab [ ps -> num_env ]		3610002	0		>>			
ANR	3610318	MultiplicativeExpression	e * numQMFSlots		3610002	0		*			
ANR	3610319	Identifier	e		3610002	0					
ANR	3610320	Identifier	numQMFSlots		3610002	1					
ANR	3610321	ArrayIndexing	ff_log2_tab [ ps -> num_env ]		3610002	1					
ANR	3610322	Identifier	ff_log2_tab		3610002	0					
ANR	3610323	PtrMemberAccess	ps -> num_env		3610002	1					
ANR	3610324	Identifier	ps		3610002	0					
ANR	3610325	Identifier	num_env		3610002	1					
ANR	3610326	PrimaryExpression	1		3610002	1					
ANR	3610327	IfStatement	if ( ps -> enable_iid )		3610002	12					
ANR	3610328	Condition	ps -> enable_iid	95:8:1706:1719	3610002	0	True				
ANR	3610329	PtrMemberAccess	ps -> enable_iid		3610002	0					
ANR	3610330	Identifier	ps		3610002	0					
ANR	3610331	Identifier	enable_iid		3610002	1					
ANR	3610332	CompoundStatement		93:24:1623:1623	3610002	1					
ANR	3610333	ForStatement	for ( e = 0 ; e < ps -> num_env ; e ++ )		3610002	0					
ANR	3610334	ForInit	e = 0 ;	97:13:1738:1743	3610002	0	True				
ANR	3610335	AssignmentExpression	e = 0		3610002	0		=			
ANR	3610336	Identifier	e		3610002	0					
ANR	3610337	PrimaryExpression	0		3610002	1					
ANR	3610338	Condition	e < ps -> num_env	97:20:1745:1759	3610002	1	True				
ANR	3610339	RelationalExpression	e < ps -> num_env		3610002	0		<			
ANR	3610340	Identifier	e		3610002	0					
ANR	3610341	PtrMemberAccess	ps -> num_env		3610002	1					
ANR	3610342	Identifier	ps		3610002	0					
ANR	3610343	Identifier	num_env		3610002	1					
ANR	3610344	PostIncDecOperationExpression	e ++	97:37:1762:1764	3610002	2	True				
ANR	3610345	Identifier	e		3610002	0					
ANR	3610346	IncDec	++		3610002	1					
ANR	3610347	CompoundStatement		97:12:1683:1705	3610002	3					
ANR	3610348	IdentifierDeclStatement	int dt = get_bits1 ( gb ) ;	99:12:1782:1804	3610002	0	True				
ANR	3610349	IdentifierDecl	dt = get_bits1 ( gb )		3610002	0					
ANR	3610350	IdentifierDeclType	int		3610002	0					
ANR	3610351	Identifier	dt		3610002	1					
ANR	3610352	AssignmentExpression	dt = get_bits1 ( gb )		3610002	2		=			
ANR	3610353	Identifier	dt		3610002	0					
ANR	3610354	CallExpression	get_bits1 ( gb )		3610002	1					
ANR	3610355	Callee	get_bits1		3610002	0					
ANR	3610356	Identifier	get_bits1		3610002	0					
ANR	3610357	ArgumentList	gb		3610002	1					
ANR	3610358	Argument	gb		3610002	0					
ANR	3610359	Identifier	gb		3610002	0					
ANR	3610360	IfStatement	"if ( read_iid_data ( avctx , gb , ps , ps -> iid_par , huff_iid [ 2 * dt + ps -> iid_quant ] , e , dt ) )"		3610002	1					
ANR	3610361	Condition	"read_iid_data ( avctx , gb , ps , ps -> iid_par , huff_iid [ 2 * dt + ps -> iid_quant ] , e , dt )"	101:16:1823:1900	3610002	0	True				
ANR	3610362	CallExpression	"read_iid_data ( avctx , gb , ps , ps -> iid_par , huff_iid [ 2 * dt + ps -> iid_quant ] , e , dt )"		3610002	0					
ANR	3610363	Callee	read_iid_data		3610002	0					
ANR	3610364	Identifier	read_iid_data		3610002	0					
ANR	3610365	ArgumentList	avctx		3610002	1					
ANR	3610366	Argument	avctx		3610002	0					
ANR	3610367	Identifier	avctx		3610002	0					
ANR	3610368	Argument	gb		3610002	1					
ANR	3610369	Identifier	gb		3610002	0					
ANR	3610370	Argument	ps		3610002	2					
ANR	3610371	Identifier	ps		3610002	0					
ANR	3610372	Argument	ps -> iid_par		3610002	3					
ANR	3610373	PtrMemberAccess	ps -> iid_par		3610002	0					
ANR	3610374	Identifier	ps		3610002	0					
ANR	3610375	Identifier	iid_par		3610002	1					
ANR	3610376	Argument	huff_iid [ 2 * dt + ps -> iid_quant ]		3610002	4					
ANR	3610377	ArrayIndexing	huff_iid [ 2 * dt + ps -> iid_quant ]		3610002	0					
ANR	3610378	Identifier	huff_iid		3610002	0					
ANR	3610379	AdditiveExpression	2 * dt + ps -> iid_quant		3610002	1		+			
ANR	3610380	MultiplicativeExpression	2 * dt		3610002	0		*			
ANR	3610381	PrimaryExpression	2		3610002	0					
ANR	3610382	Identifier	dt		3610002	1					
ANR	3610383	PtrMemberAccess	ps -> iid_quant		3610002	1					
ANR	3610384	Identifier	ps		3610002	0					
ANR	3610385	Identifier	iid_quant		3610002	1					
ANR	3610386	Argument	e		3610002	5					
ANR	3610387	Identifier	e		3610002	0					
ANR	3610388	Argument	dt		3610002	6					
ANR	3610389	Identifier	dt		3610002	0					
ANR	3610390	GotoStatement	goto err ;	103:16:1920:1928	3610002	1	True				
ANR	3610391	Identifier	err		3610002	0					
ANR	3610392	ElseStatement	else		3610002	0					
ANR	3610393	IfStatement	if ( ps -> enable_icc )		3610002	0					
ANR	3610394	Condition	ps -> enable_icc	112:8:1965:1978	3610002	0	True				
ANR	3610395	PtrMemberAccess	ps -> enable_icc		3610002	0					
ANR	3610396	Identifier	ps		3610002	0					
ANR	3610397	Identifier	enable_icc		3610002	1					
ANR	3610398	ForStatement	for ( e = 0 ; e < ps -> num_env ; e ++ )		3610002	1					
ANR	3610399	ForInit	e = 0 ;	114:13:1995:2000	3610002	0	True				
ANR	3610400	AssignmentExpression	e = 0		3610002	0		=			
ANR	3610401	Identifier	e		3610002	0					
ANR	3610402	PrimaryExpression	0		3610002	1					
ANR	3610403	Condition	e < ps -> num_env	114:20:2002:2016	3610002	1	True				
ANR	3610404	RelationalExpression	e < ps -> num_env		3610002	0		<			
ANR	3610405	Identifier	e		3610002	0					
ANR	3610406	PtrMemberAccess	ps -> num_env		3610002	1					
ANR	3610407	Identifier	ps		3610002	0					
ANR	3610408	Identifier	num_env		3610002	1					
ANR	3610409	PostIncDecOperationExpression	e ++	114:37:2019:2021	3610002	2	True				
ANR	3610410	Identifier	e		3610002	0					
ANR	3610411	IncDec	++		3610002	1					
ANR	3610412	CompoundStatement		114:12:1940:1962	3610002	3					
ANR	3610413	IdentifierDeclStatement	int dt = get_bits1 ( gb ) ;	116:12:2039:2061	3610002	0	True				
ANR	3610414	IdentifierDecl	dt = get_bits1 ( gb )		3610002	0					
ANR	3610415	IdentifierDeclType	int		3610002	0					
ANR	3610416	Identifier	dt		3610002	1					
ANR	3610417	AssignmentExpression	dt = get_bits1 ( gb )		3610002	2		=			
ANR	3610418	Identifier	dt		3610002	0					
ANR	3610419	CallExpression	get_bits1 ( gb )		3610002	1					
ANR	3610420	Callee	get_bits1		3610002	0					
ANR	3610421	Identifier	get_bits1		3610002	0					
ANR	3610422	ArgumentList	gb		3610002	1					
ANR	3610423	Argument	gb		3610002	0					
ANR	3610424	Identifier	gb		3610002	0					
ANR	3610425	IfStatement	"if ( read_icc_data ( avctx , gb , ps , ps -> icc_par , dt ? huff_icc_dt : huff_icc_df , e , dt ) )"		3610002	1					
ANR	3610426	Condition	"read_icc_data ( avctx , gb , ps , ps -> icc_par , dt ? huff_icc_dt : huff_icc_df , e , dt )"	118:16:2080:2159	3610002	0	True				
ANR	3610427	CallExpression	"read_icc_data ( avctx , gb , ps , ps -> icc_par , dt ? huff_icc_dt : huff_icc_df , e , dt )"		3610002	0					
ANR	3610428	Callee	read_icc_data		3610002	0					
ANR	3610429	Identifier	read_icc_data		3610002	0					
ANR	3610430	ArgumentList	avctx		3610002	1					
ANR	3610431	Argument	avctx		3610002	0					
ANR	3610432	Identifier	avctx		3610002	0					
ANR	3610433	Argument	gb		3610002	1					
ANR	3610434	Identifier	gb		3610002	0					
ANR	3610435	Argument	ps		3610002	2					
ANR	3610436	Identifier	ps		3610002	0					
ANR	3610437	Argument	ps -> icc_par		3610002	3					
ANR	3610438	PtrMemberAccess	ps -> icc_par		3610002	0					
ANR	3610439	Identifier	ps		3610002	0					
ANR	3610440	Identifier	icc_par		3610002	1					
ANR	3610441	Argument	dt ? huff_icc_dt : huff_icc_df		3610002	4					
ANR	3610442	ConditionalExpression	dt ? huff_icc_dt : huff_icc_df		3610002	0					
ANR	3610443	Condition	dt		3610002	0					
ANR	3610444	Identifier	dt		3610002	0					
ANR	3610445	Identifier	huff_icc_dt		3610002	1					
ANR	3610446	Identifier	huff_icc_df		3610002	2					
ANR	3610447	Argument	e		3610002	5					
ANR	3610448	Identifier	e		3610002	0					
ANR	3610449	Argument	dt		3610002	6					
ANR	3610450	Identifier	dt		3610002	0					
ANR	3610451	GotoStatement	goto err ;	120:16:2179:2187	3610002	1	True				
ANR	3610452	Identifier	err		3610002	0					
ANR	3610453	ElseStatement	else		3610002	0					
ANR	3610454	IfStatement	if ( ps -> enable_ext )		3610002	0					
ANR	3610455	Condition	ps -> enable_ext	129:8:2222:2235	3610002	0	True				
ANR	3610456	PtrMemberAccess	ps -> enable_ext		3610002	0					
ANR	3610457	Identifier	ps		3610002	0					
ANR	3610458	Identifier	enable_ext		3610002	1					
ANR	3610459	CompoundStatement		129:8:2150:2175	3610002	1					
ANR	3610460	IdentifierDeclStatement	"int cnt = get_bits ( gb , 4 ) ;"	131:8:2249:2274	3610002	0	True				
ANR	3610461	IdentifierDecl	"cnt = get_bits ( gb , 4 )"		3610002	0					
ANR	3610462	IdentifierDeclType	int		3610002	0					
ANR	3610463	Identifier	cnt		3610002	1					
ANR	3610464	AssignmentExpression	"cnt = get_bits ( gb , 4 )"		3610002	2		=			
ANR	3610465	Identifier	cnt		3610002	0					
ANR	3610466	CallExpression	"get_bits ( gb , 4 )"		3610002	1					
ANR	3610467	Callee	get_bits		3610002	0					
ANR	3610468	Identifier	get_bits		3610002	0					
ANR	3610469	ArgumentList	gb		3610002	1					
ANR	3610470	Argument	gb		3610002	0					
ANR	3610471	Identifier	gb		3610002	0					
ANR	3610472	Argument	4		3610002	1					
ANR	3610473	PrimaryExpression	4		3610002	0					
ANR	3610474	IfStatement	if ( cnt == 15 )		3610002	1					
ANR	3610475	Condition	cnt == 15	133:12:2289:2297	3610002	0	True				
ANR	3610476	EqualityExpression	cnt == 15		3610002	0		==			
ANR	3610477	Identifier	cnt		3610002	0					
ANR	3610478	PrimaryExpression	15		3610002	1					
ANR	3610479	CompoundStatement		131:23:2201:2201	3610002	1					
ANR	3610480	ExpressionStatement	"cnt += get_bits ( gb , 8 )"	135:12:2315:2337	3610002	0	True				
ANR	3610481	AssignmentExpression	"cnt += get_bits ( gb , 8 )"		3610002	0		+=			
ANR	3610482	Identifier	cnt		3610002	0					
ANR	3610483	CallExpression	"get_bits ( gb , 8 )"		3610002	1					
ANR	3610484	Callee	get_bits		3610002	0					
ANR	3610485	Identifier	get_bits		3610002	0					
ANR	3610486	ArgumentList	gb		3610002	1					
ANR	3610487	Argument	gb		3610002	0					
ANR	3610488	Identifier	gb		3610002	0					
ANR	3610489	Argument	8		3610002	1					
ANR	3610490	PrimaryExpression	8		3610002	0					
ANR	3610491	ExpressionStatement	cnt *= 8	139:8:2359:2367	3610002	2	True				
ANR	3610492	AssignmentExpression	cnt *= 8		3610002	0		*=			
ANR	3610493	Identifier	cnt		3610002	0					
ANR	3610494	PrimaryExpression	8		3610002	1					
ANR	3610495	WhileStatement	while ( cnt > 7 )		3610002	3					
ANR	3610496	Condition	cnt > 7	141:15:2385:2391	3610002	0	True				
ANR	3610497	RelationalExpression	cnt > 7		3610002	0		>			
ANR	3610498	Identifier	cnt		3610002	0					
ANR	3610499	PrimaryExpression	7		3610002	1					
ANR	3610500	CompoundStatement		141:12:2310:2347	3610002	1					
ANR	3610501	IdentifierDeclStatement	"int ps_extension_id = get_bits ( gb , 2 ) ;"	143:12:2409:2446	3610002	0	True				
ANR	3610502	IdentifierDecl	"ps_extension_id = get_bits ( gb , 2 )"		3610002	0					
ANR	3610503	IdentifierDeclType	int		3610002	0					
ANR	3610504	Identifier	ps_extension_id		3610002	1					
ANR	3610505	AssignmentExpression	"ps_extension_id = get_bits ( gb , 2 )"		3610002	2		=			
ANR	3610506	Identifier	ps_extension_id		3610002	0					
ANR	3610507	CallExpression	"get_bits ( gb , 2 )"		3610002	1					
ANR	3610508	Callee	get_bits		3610002	0					
ANR	3610509	Identifier	get_bits		3610002	0					
ANR	3610510	ArgumentList	gb		3610002	1					
ANR	3610511	Argument	gb		3610002	0					
ANR	3610512	Identifier	gb		3610002	0					
ANR	3610513	Argument	2		3610002	1					
ANR	3610514	PrimaryExpression	2		3610002	0					
ANR	3610515	ExpressionStatement	"cnt -= 2 + ps_read_extension_data ( gb , ps , ps_extension_id )"	145:12:2461:2519	3610002	1	True				
ANR	3610516	AssignmentExpression	"cnt -= 2 + ps_read_extension_data ( gb , ps , ps_extension_id )"		3610002	0		-=			
ANR	3610517	Identifier	cnt		3610002	0					
ANR	3610518	AdditiveExpression	"2 + ps_read_extension_data ( gb , ps , ps_extension_id )"		3610002	1		+			
ANR	3610519	PrimaryExpression	2		3610002	0					
ANR	3610520	CallExpression	"ps_read_extension_data ( gb , ps , ps_extension_id )"		3610002	1					
ANR	3610521	Callee	ps_read_extension_data		3610002	0					
ANR	3610522	Identifier	ps_read_extension_data		3610002	0					
ANR	3610523	ArgumentList	gb		3610002	1					
ANR	3610524	Argument	gb		3610002	0					
ANR	3610525	Identifier	gb		3610002	0					
ANR	3610526	Argument	ps		3610002	1					
ANR	3610527	Identifier	ps		3610002	0					
ANR	3610528	Argument	ps_extension_id		3610002	2					
ANR	3610529	Identifier	ps_extension_id		3610002	0					
ANR	3610530	IfStatement	if ( cnt < 0 )		3610002	4					
ANR	3610531	Condition	cnt < 0	149:12:2545:2551	3610002	0	True				
ANR	3610532	RelationalExpression	cnt < 0		3610002	0		<			
ANR	3610533	Identifier	cnt		3610002	0					
ANR	3610534	PrimaryExpression	0		3610002	1					
ANR	3610535	CompoundStatement		147:21:2455:2455	3610002	1					
ANR	3610536	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""ps extension overflow %d\\n"" , cnt )"	151:12:2569:2631	3610002	0	True				
ANR	3610537	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""ps extension overflow %d\\n"" , cnt )"		3610002	0					
ANR	3610538	Callee	av_log		3610002	0					
ANR	3610539	Identifier	av_log		3610002	0					
ANR	3610540	ArgumentList	avctx		3610002	1					
ANR	3610541	Argument	avctx		3610002	0					
ANR	3610542	Identifier	avctx		3610002	0					
ANR	3610543	Argument	AV_LOG_ERROR		3610002	1					
ANR	3610544	Identifier	AV_LOG_ERROR		3610002	0					
ANR	3610545	Argument	"""ps extension overflow %d\\n"""		3610002	2					
ANR	3610546	PrimaryExpression	"""ps extension overflow %d\\n"""		3610002	0					
ANR	3610547	Argument	cnt		3610002	3					
ANR	3610548	Identifier	cnt		3610002	0					
ANR	3610549	GotoStatement	goto err ;	153:12:2646:2654	3610002	1	True				
ANR	3610550	Identifier	err		3610002	0					
ANR	3610551	ExpressionStatement	"skip_bits ( gb , cnt )"	157:8:2676:2694	3610002	5	True				
ANR	3610552	CallExpression	"skip_bits ( gb , cnt )"		3610002	0					
ANR	3610553	Callee	skip_bits		3610002	0					
ANR	3610554	Identifier	skip_bits		3610002	0					
ANR	3610555	ArgumentList	gb		3610002	1					
ANR	3610556	Argument	gb		3610002	0					
ANR	3610557	Identifier	gb		3610002	0					
ANR	3610558	Argument	cnt		3610002	1					
ANR	3610559	Identifier	cnt		3610002	0					
ANR	3610560	ExpressionStatement	ps -> enable_ipdopd &= ! PS_BASELINE	163:4:2710:2743	3610002	13	True				
ANR	3610561	AssignmentExpression	ps -> enable_ipdopd &= ! PS_BASELINE		3610002	0		&=			
ANR	3610562	PtrMemberAccess	ps -> enable_ipdopd		3610002	0					
ANR	3610563	Identifier	ps		3610002	0					
ANR	3610564	Identifier	enable_ipdopd		3610002	1					
ANR	3610565	UnaryOperationExpression	! PS_BASELINE		3610002	1					
ANR	3610566	UnaryOperator	!		3610002	0					
ANR	3610567	Identifier	PS_BASELINE		3610002	1					
ANR	3610568	IfStatement	if ( ! ps -> num_env || ps -> border_position [ ps -> num_env ] < numQMFSlots - 1 )		3610002	14					
ANR	3610569	Condition	! ps -> num_env || ps -> border_position [ ps -> num_env ] < numQMFSlots - 1	169:8:2780:2845	3610002	0	True				
ANR	3610570	OrExpression	! ps -> num_env || ps -> border_position [ ps -> num_env ] < numQMFSlots - 1		3610002	0		||			
ANR	3610571	UnaryOperationExpression	! ps -> num_env		3610002	0					
ANR	3610572	UnaryOperator	!		3610002	0					
ANR	3610573	PtrMemberAccess	ps -> num_env		3610002	1					
ANR	3610574	Identifier	ps		3610002	0					
ANR	3610575	Identifier	num_env		3610002	1					
ANR	3610576	RelationalExpression	ps -> border_position [ ps -> num_env ] < numQMFSlots - 1		3610002	1		<			
ANR	3610577	ArrayIndexing	ps -> border_position [ ps -> num_env ]		3610002	0					
ANR	3610578	PtrMemberAccess	ps -> border_position		3610002	0					
ANR	3610579	Identifier	ps		3610002	0					
ANR	3610580	Identifier	border_position		3610002	1					
ANR	3610581	PtrMemberAccess	ps -> num_env		3610002	1					
ANR	3610582	Identifier	ps		3610002	0					
ANR	3610583	Identifier	num_env		3610002	1					
ANR	3610584	AdditiveExpression	numQMFSlots - 1		3610002	1		-			
ANR	3610585	Identifier	numQMFSlots		3610002	0					
ANR	3610586	PrimaryExpression	1		3610002	1					
ANR	3610587	CompoundStatement		171:8:2794:2858	3610002	1					
ANR	3610588	IdentifierDeclStatement	int source = ps -> num_env ? ps -> num_env - 1 : ps -> num_env_old - 1 ;	173:8:2893:2957	3610002	0	True				
ANR	3610589	IdentifierDecl	source = ps -> num_env ? ps -> num_env - 1 : ps -> num_env_old - 1		3610002	0					
ANR	3610590	IdentifierDeclType	int		3610002	0					
ANR	3610591	Identifier	source		3610002	1					
ANR	3610592	AssignmentExpression	source = ps -> num_env ? ps -> num_env - 1 : ps -> num_env_old - 1		3610002	2		=			
ANR	3610593	Identifier	source		3610002	0					
ANR	3610594	ConditionalExpression	ps -> num_env ? ps -> num_env - 1 : ps -> num_env_old - 1		3610002	1					
ANR	3610595	Condition	ps -> num_env		3610002	0					
ANR	3610596	PtrMemberAccess	ps -> num_env		3610002	0					
ANR	3610597	Identifier	ps		3610002	0					
ANR	3610598	Identifier	num_env		3610002	1					
ANR	3610599	AdditiveExpression	ps -> num_env - 1		3610002	1		-			
ANR	3610600	PtrMemberAccess	ps -> num_env		3610002	0					
ANR	3610601	Identifier	ps		3610002	0					
ANR	3610602	Identifier	num_env		3610002	1					
ANR	3610603	PrimaryExpression	1		3610002	1					
ANR	3610604	AdditiveExpression	ps -> num_env_old - 1		3610002	2		-			
ANR	3610605	PtrMemberAccess	ps -> num_env_old		3610002	0					
ANR	3610606	Identifier	ps		3610002	0					
ANR	3610607	Identifier	num_env_old		3610002	1					
ANR	3610608	PrimaryExpression	1		3610002	1					
ANR	3610609	IfStatement	if ( source >= 0 && source != ps -> num_env )		3610002	1					
ANR	3610610	Condition	source >= 0 && source != ps -> num_env	175:12:2972:3007	3610002	0	True				
ANR	3610611	AndExpression	source >= 0 && source != ps -> num_env		3610002	0		&&			
ANR	3610612	RelationalExpression	source >= 0		3610002	0		>=			
ANR	3610613	Identifier	source		3610002	0					
ANR	3610614	PrimaryExpression	0		3610002	1					
ANR	3610615	EqualityExpression	source != ps -> num_env		3610002	1		!=			
ANR	3610616	Identifier	source		3610002	0					
ANR	3610617	PtrMemberAccess	ps -> num_env		3610002	1					
ANR	3610618	Identifier	ps		3610002	0					
ANR	3610619	Identifier	num_env		3610002	1					
ANR	3610620	CompoundStatement		173:50:2911:2911	3610002	1					
ANR	3610621	IfStatement	if ( ps -> enable_iid )		3610002	0					
ANR	3610622	Condition	ps -> enable_iid	177:16:3029:3042	3610002	0	True				
ANR	3610623	PtrMemberAccess	ps -> enable_iid		3610002	0					
ANR	3610624	Identifier	ps		3610002	0					
ANR	3610625	Identifier	enable_iid		3610002	1					
ANR	3610626	CompoundStatement		175:32:2946:2946	3610002	1					
ANR	3610627	ExpressionStatement	"memcpy ( ps -> iid_par + ps -> num_env , ps -> iid_par + source , sizeof ( ps -> iid_par [ 0 ] ) )"	179:16:3064:3139	3610002	0	True				
ANR	3610628	CallExpression	"memcpy ( ps -> iid_par + ps -> num_env , ps -> iid_par + source , sizeof ( ps -> iid_par [ 0 ] ) )"		3610002	0					
ANR	3610629	Callee	memcpy		3610002	0					
ANR	3610630	Identifier	memcpy		3610002	0					
ANR	3610631	ArgumentList	ps -> iid_par + ps -> num_env		3610002	1					
ANR	3610632	Argument	ps -> iid_par + ps -> num_env		3610002	0					
ANR	3610633	AdditiveExpression	ps -> iid_par + ps -> num_env		3610002	0		+			
ANR	3610634	PtrMemberAccess	ps -> iid_par		3610002	0					
ANR	3610635	Identifier	ps		3610002	0					
ANR	3610636	Identifier	iid_par		3610002	1					
ANR	3610637	PtrMemberAccess	ps -> num_env		3610002	1					
ANR	3610638	Identifier	ps		3610002	0					
ANR	3610639	Identifier	num_env		3610002	1					
ANR	3610640	Argument	ps -> iid_par + source		3610002	1					
ANR	3610641	AdditiveExpression	ps -> iid_par + source		3610002	0		+			
ANR	3610642	PtrMemberAccess	ps -> iid_par		3610002	0					
ANR	3610643	Identifier	ps		3610002	0					
ANR	3610644	Identifier	iid_par		3610002	1					
ANR	3610645	Identifier	source		3610002	1					
ANR	3610646	Argument	sizeof ( ps -> iid_par [ 0 ] )		3610002	2					
ANR	3610647	SizeofExpression	sizeof ( ps -> iid_par [ 0 ] )		3610002	0					
ANR	3610648	Sizeof	sizeof		3610002	0					
ANR	3610649	ArrayIndexing	ps -> iid_par [ 0 ]		3610002	1					
ANR	3610650	PtrMemberAccess	ps -> iid_par		3610002	0					
ANR	3610651	Identifier	ps		3610002	0					
ANR	3610652	Identifier	iid_par		3610002	1					
ANR	3610653	PrimaryExpression	0		3610002	1					
ANR	3610654	IfStatement	if ( ps -> enable_icc )		3610002	1					
ANR	3610655	Condition	ps -> enable_icc	183:16:3173:3186	3610002	0	True				
ANR	3610656	PtrMemberAccess	ps -> enable_icc		3610002	0					
ANR	3610657	Identifier	ps		3610002	0					
ANR	3610658	Identifier	enable_icc		3610002	1					
ANR	3610659	CompoundStatement		181:32:3090:3090	3610002	1					
ANR	3610660	ExpressionStatement	"memcpy ( ps -> icc_par + ps -> num_env , ps -> icc_par + source , sizeof ( ps -> icc_par [ 0 ] ) )"	185:16:3208:3283	3610002	0	True				
ANR	3610661	CallExpression	"memcpy ( ps -> icc_par + ps -> num_env , ps -> icc_par + source , sizeof ( ps -> icc_par [ 0 ] ) )"		3610002	0					
ANR	3610662	Callee	memcpy		3610002	0					
ANR	3610663	Identifier	memcpy		3610002	0					
ANR	3610664	ArgumentList	ps -> icc_par + ps -> num_env		3610002	1					
ANR	3610665	Argument	ps -> icc_par + ps -> num_env		3610002	0					
ANR	3610666	AdditiveExpression	ps -> icc_par + ps -> num_env		3610002	0		+			
ANR	3610667	PtrMemberAccess	ps -> icc_par		3610002	0					
ANR	3610668	Identifier	ps		3610002	0					
ANR	3610669	Identifier	icc_par		3610002	1					
ANR	3610670	PtrMemberAccess	ps -> num_env		3610002	1					
ANR	3610671	Identifier	ps		3610002	0					
ANR	3610672	Identifier	num_env		3610002	1					
ANR	3610673	Argument	ps -> icc_par + source		3610002	1					
ANR	3610674	AdditiveExpression	ps -> icc_par + source		3610002	0		+			
ANR	3610675	PtrMemberAccess	ps -> icc_par		3610002	0					
ANR	3610676	Identifier	ps		3610002	0					
ANR	3610677	Identifier	icc_par		3610002	1					
ANR	3610678	Identifier	source		3610002	1					
ANR	3610679	Argument	sizeof ( ps -> icc_par [ 0 ] )		3610002	2					
ANR	3610680	SizeofExpression	sizeof ( ps -> icc_par [ 0 ] )		3610002	0					
ANR	3610681	Sizeof	sizeof		3610002	0					
ANR	3610682	ArrayIndexing	ps -> icc_par [ 0 ]		3610002	1					
ANR	3610683	PtrMemberAccess	ps -> icc_par		3610002	0					
ANR	3610684	Identifier	ps		3610002	0					
ANR	3610685	Identifier	icc_par		3610002	1					
ANR	3610686	PrimaryExpression	0		3610002	1					
ANR	3610687	IfStatement	if ( ps -> enable_ipdopd )		3610002	2					
ANR	3610688	Condition	ps -> enable_ipdopd	189:16:3317:3333	3610002	0	True				
ANR	3610689	PtrMemberAccess	ps -> enable_ipdopd		3610002	0					
ANR	3610690	Identifier	ps		3610002	0					
ANR	3610691	Identifier	enable_ipdopd		3610002	1					
ANR	3610692	CompoundStatement		187:35:3237:3237	3610002	1					
ANR	3610693	ExpressionStatement	"memcpy ( ps -> ipd_par + ps -> num_env , ps -> ipd_par + source , sizeof ( ps -> ipd_par [ 0 ] ) )"	191:16:3355:3430	3610002	0	True				
ANR	3610694	CallExpression	"memcpy ( ps -> ipd_par + ps -> num_env , ps -> ipd_par + source , sizeof ( ps -> ipd_par [ 0 ] ) )"		3610002	0					
ANR	3610695	Callee	memcpy		3610002	0					
ANR	3610696	Identifier	memcpy		3610002	0					
ANR	3610697	ArgumentList	ps -> ipd_par + ps -> num_env		3610002	1					
ANR	3610698	Argument	ps -> ipd_par + ps -> num_env		3610002	0					
ANR	3610699	AdditiveExpression	ps -> ipd_par + ps -> num_env		3610002	0		+			
ANR	3610700	PtrMemberAccess	ps -> ipd_par		3610002	0					
ANR	3610701	Identifier	ps		3610002	0					
ANR	3610702	Identifier	ipd_par		3610002	1					
ANR	3610703	PtrMemberAccess	ps -> num_env		3610002	1					
ANR	3610704	Identifier	ps		3610002	0					
ANR	3610705	Identifier	num_env		3610002	1					
ANR	3610706	Argument	ps -> ipd_par + source		3610002	1					
ANR	3610707	AdditiveExpression	ps -> ipd_par + source		3610002	0		+			
ANR	3610708	PtrMemberAccess	ps -> ipd_par		3610002	0					
ANR	3610709	Identifier	ps		3610002	0					
ANR	3610710	Identifier	ipd_par		3610002	1					
ANR	3610711	Identifier	source		3610002	1					
ANR	3610712	Argument	sizeof ( ps -> ipd_par [ 0 ] )		3610002	2					
ANR	3610713	SizeofExpression	sizeof ( ps -> ipd_par [ 0 ] )		3610002	0					
ANR	3610714	Sizeof	sizeof		3610002	0					
ANR	3610715	ArrayIndexing	ps -> ipd_par [ 0 ]		3610002	1					
ANR	3610716	PtrMemberAccess	ps -> ipd_par		3610002	0					
ANR	3610717	Identifier	ps		3610002	0					
ANR	3610718	Identifier	ipd_par		3610002	1					
ANR	3610719	PrimaryExpression	0		3610002	1					
ANR	3610720	ExpressionStatement	"memcpy ( ps -> opd_par + ps -> num_env , ps -> opd_par + source , sizeof ( ps -> opd_par [ 0 ] ) )"	193:16:3449:3524	3610002	1	True				
ANR	3610721	CallExpression	"memcpy ( ps -> opd_par + ps -> num_env , ps -> opd_par + source , sizeof ( ps -> opd_par [ 0 ] ) )"		3610002	0					
ANR	3610722	Callee	memcpy		3610002	0					
ANR	3610723	Identifier	memcpy		3610002	0					
ANR	3610724	ArgumentList	ps -> opd_par + ps -> num_env		3610002	1					
ANR	3610725	Argument	ps -> opd_par + ps -> num_env		3610002	0					
ANR	3610726	AdditiveExpression	ps -> opd_par + ps -> num_env		3610002	0		+			
ANR	3610727	PtrMemberAccess	ps -> opd_par		3610002	0					
ANR	3610728	Identifier	ps		3610002	0					
ANR	3610729	Identifier	opd_par		3610002	1					
ANR	3610730	PtrMemberAccess	ps -> num_env		3610002	1					
ANR	3610731	Identifier	ps		3610002	0					
ANR	3610732	Identifier	num_env		3610002	1					
ANR	3610733	Argument	ps -> opd_par + source		3610002	1					
ANR	3610734	AdditiveExpression	ps -> opd_par + source		3610002	0		+			
ANR	3610735	PtrMemberAccess	ps -> opd_par		3610002	0					
ANR	3610736	Identifier	ps		3610002	0					
ANR	3610737	Identifier	opd_par		3610002	1					
ANR	3610738	Identifier	source		3610002	1					
ANR	3610739	Argument	sizeof ( ps -> opd_par [ 0 ] )		3610002	2					
ANR	3610740	SizeofExpression	sizeof ( ps -> opd_par [ 0 ] )		3610002	0					
ANR	3610741	Sizeof	sizeof		3610002	0					
ANR	3610742	ArrayIndexing	ps -> opd_par [ 0 ]		3610002	1					
ANR	3610743	PtrMemberAccess	ps -> opd_par		3610002	0					
ANR	3610744	Identifier	ps		3610002	0					
ANR	3610745	Identifier	opd_par		3610002	1					
ANR	3610746	PrimaryExpression	0		3610002	1					
ANR	3610747	ExpressionStatement	ps -> num_env ++	199:8:3561:3574	3610002	2	True				
ANR	3610748	PostIncDecOperationExpression	ps -> num_env ++		3610002	0					
ANR	3610749	PtrMemberAccess	ps -> num_env		3610002	0					
ANR	3610750	Identifier	ps		3610002	0					
ANR	3610751	Identifier	num_env		3610002	1					
ANR	3610752	IncDec	++		3610002	1					
ANR	3610753	ExpressionStatement	ps -> border_position [ ps -> num_env ] = numQMFSlots - 1	201:8:3585:3635	3610002	3	True				
ANR	3610754	AssignmentExpression	ps -> border_position [ ps -> num_env ] = numQMFSlots - 1		3610002	0		=			
ANR	3610755	ArrayIndexing	ps -> border_position [ ps -> num_env ]		3610002	0					
ANR	3610756	PtrMemberAccess	ps -> border_position		3610002	0					
ANR	3610757	Identifier	ps		3610002	0					
ANR	3610758	Identifier	border_position		3610002	1					
ANR	3610759	PtrMemberAccess	ps -> num_env		3610002	1					
ANR	3610760	Identifier	ps		3610002	0					
ANR	3610761	Identifier	num_env		3610002	1					
ANR	3610762	AdditiveExpression	numQMFSlots - 1		3610002	1		-			
ANR	3610763	Identifier	numQMFSlots		3610002	0					
ANR	3610764	PrimaryExpression	1		3610002	1					
ANR	3610765	ExpressionStatement	ps -> is34bands_old = ps -> is34bands	209:4:3653:3686	3610002	15	True				
ANR	3610766	AssignmentExpression	ps -> is34bands_old = ps -> is34bands		3610002	0		=			
ANR	3610767	PtrMemberAccess	ps -> is34bands_old		3610002	0					
ANR	3610768	Identifier	ps		3610002	0					
ANR	3610769	Identifier	is34bands_old		3610002	1					
ANR	3610770	PtrMemberAccess	ps -> is34bands		3610002	1					
ANR	3610771	Identifier	ps		3610002	0					
ANR	3610772	Identifier	is34bands		3610002	1					
ANR	3610773	IfStatement	if ( ! PS_BASELINE && ( ps -> enable_iid || ps -> enable_icc ) )		3610002	16					
ANR	3610774	Condition	! PS_BASELINE && ( ps -> enable_iid || ps -> enable_icc )	211:8:3697:3746	3610002	0	True				
ANR	3610775	AndExpression	! PS_BASELINE && ( ps -> enable_iid || ps -> enable_icc )		3610002	0		&&			
ANR	3610776	UnaryOperationExpression	! PS_BASELINE		3610002	0					
ANR	3610777	UnaryOperator	!		3610002	0					
ANR	3610778	Identifier	PS_BASELINE		3610002	1					
ANR	3610779	OrExpression	ps -> enable_iid || ps -> enable_icc		3610002	1		||			
ANR	3610780	PtrMemberAccess	ps -> enable_iid		3610002	0					
ANR	3610781	Identifier	ps		3610002	0					
ANR	3610782	Identifier	enable_iid		3610002	1					
ANR	3610783	PtrMemberAccess	ps -> enable_icc		3610002	1					
ANR	3610784	Identifier	ps		3610002	0					
ANR	3610785	Identifier	enable_icc		3610002	1					
ANR	3610786	ExpressionStatement	ps -> is34bands = ( ps -> enable_iid && ps -> nr_iid_par == 34 ) || ( ps -> enable_icc && ps -> nr_icc_par == 34 )	213:8:3758:3883	3610002	1	True				
ANR	3610787	AssignmentExpression	ps -> is34bands = ( ps -> enable_iid && ps -> nr_iid_par == 34 ) || ( ps -> enable_icc && ps -> nr_icc_par == 34 )		3610002	0		=			
ANR	3610788	PtrMemberAccess	ps -> is34bands		3610002	0					
ANR	3610789	Identifier	ps		3610002	0					
ANR	3610790	Identifier	is34bands		3610002	1					
ANR	3610791	OrExpression	( ps -> enable_iid && ps -> nr_iid_par == 34 ) || ( ps -> enable_icc && ps -> nr_icc_par == 34 )		3610002	1		||			
ANR	3610792	AndExpression	ps -> enable_iid && ps -> nr_iid_par == 34		3610002	0		&&			
ANR	3610793	PtrMemberAccess	ps -> enable_iid		3610002	0					
ANR	3610794	Identifier	ps		3610002	0					
ANR	3610795	Identifier	enable_iid		3610002	1					
ANR	3610796	EqualityExpression	ps -> nr_iid_par == 34		3610002	1		==			
ANR	3610797	PtrMemberAccess	ps -> nr_iid_par		3610002	0					
ANR	3610798	Identifier	ps		3610002	0					
ANR	3610799	Identifier	nr_iid_par		3610002	1					
ANR	3610800	PrimaryExpression	34		3610002	1					
ANR	3610801	AndExpression	ps -> enable_icc && ps -> nr_icc_par == 34		3610002	1		&&			
ANR	3610802	PtrMemberAccess	ps -> enable_icc		3610002	0					
ANR	3610803	Identifier	ps		3610002	0					
ANR	3610804	Identifier	enable_icc		3610002	1					
ANR	3610805	EqualityExpression	ps -> nr_icc_par == 34		3610002	1		==			
ANR	3610806	PtrMemberAccess	ps -> nr_icc_par		3610002	0					
ANR	3610807	Identifier	ps		3610002	0					
ANR	3610808	Identifier	nr_icc_par		3610002	1					
ANR	3610809	PrimaryExpression	34		3610002	1					
ANR	3610810	IfStatement	if ( ! ps -> enable_ipdopd )		3610002	17					
ANR	3610811	Condition	! ps -> enable_ipdopd	221:8:3912:3929	3610002	0	True				
ANR	3610812	UnaryOperationExpression	! ps -> enable_ipdopd		3610002	0					
ANR	3610813	UnaryOperator	!		3610002	0					
ANR	3610814	PtrMemberAccess	ps -> enable_ipdopd		3610002	1					
ANR	3610815	Identifier	ps		3610002	0					
ANR	3610816	Identifier	enable_ipdopd		3610002	1					
ANR	3610817	CompoundStatement		219:28:3833:3833	3610002	1					
ANR	3610818	IfStatement	if ( header )		3610002	18					
ANR	3610819	Condition	header	229:8:3954:3959	3610002	0	True				
ANR	3610820	Identifier	header		3610002	0					
ANR	3610821	ExpressionStatement	ps -> start = 1	231:8:3971:3984	3610002	1	True				
ANR	3610822	AssignmentExpression	ps -> start = 1		3610002	0		=			
ANR	3610823	PtrMemberAccess	ps -> start		3610002	0					
ANR	3610824	Identifier	ps		3610002	0					
ANR	3610825	Identifier	start		3610002	1					
ANR	3610826	PrimaryExpression	1		3610002	1					
ANR	3610827	ExpressionStatement	bits_consumed = get_bits_count ( gb ) - bit_count_start	235:4:3993:4045	3610002	19	True				
ANR	3610828	AssignmentExpression	bits_consumed = get_bits_count ( gb ) - bit_count_start		3610002	0		=			
ANR	3610829	Identifier	bits_consumed		3610002	0					
ANR	3610830	AdditiveExpression	get_bits_count ( gb ) - bit_count_start		3610002	1		-			
ANR	3610831	CallExpression	get_bits_count ( gb )		3610002	0					
ANR	3610832	Callee	get_bits_count		3610002	0					
ANR	3610833	Identifier	get_bits_count		3610002	0					
ANR	3610834	ArgumentList	gb		3610002	1					
ANR	3610835	Argument	gb		3610002	0					
ANR	3610836	Identifier	gb		3610002	0					
ANR	3610837	Identifier	bit_count_start		3610002	1					
ANR	3610838	IfStatement	if ( bits_consumed <= bits_left )		3610002	20					
ANR	3610839	Condition	bits_consumed <= bits_left	237:8:4056:4081	3610002	0	True				
ANR	3610840	RelationalExpression	bits_consumed <= bits_left		3610002	0		<=			
ANR	3610841	Identifier	bits_consumed		3610002	0					
ANR	3610842	Identifier	bits_left		3610002	1					
ANR	3610843	CompoundStatement		235:36:3985:3985	3610002	1					
ANR	3610844	ExpressionStatement	"skip_bits_long ( gb_host , bits_consumed )"	239:8:4095:4133	3610002	0	True				
ANR	3610845	CallExpression	"skip_bits_long ( gb_host , bits_consumed )"		3610002	0					
ANR	3610846	Callee	skip_bits_long		3610002	0					
ANR	3610847	Identifier	skip_bits_long		3610002	0					
ANR	3610848	ArgumentList	gb_host		3610002	1					
ANR	3610849	Argument	gb_host		3610002	0					
ANR	3610850	Identifier	gb_host		3610002	0					
ANR	3610851	Argument	bits_consumed		3610002	1					
ANR	3610852	Identifier	bits_consumed		3610002	0					
ANR	3610853	ReturnStatement	return bits_consumed ;	241:8:4144:4164	3610002	1	True				
ANR	3610854	Identifier	bits_consumed		3610002	0					
ANR	3610855	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Expected to read %d PS bits actually read %d.\\n"" , bits_left , bits_consumed )"	245:4:4178:4282	3610002	21	True				
ANR	3610856	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Expected to read %d PS bits actually read %d.\\n"" , bits_left , bits_consumed )"		3610002	0					
ANR	3610857	Callee	av_log		3610002	0					
ANR	3610858	Identifier	av_log		3610002	0					
ANR	3610859	ArgumentList	avctx		3610002	1					
ANR	3610860	Argument	avctx		3610002	0					
ANR	3610861	Identifier	avctx		3610002	0					
ANR	3610862	Argument	AV_LOG_ERROR		3610002	1					
ANR	3610863	Identifier	AV_LOG_ERROR		3610002	0					
ANR	3610864	Argument	"""Expected to read %d PS bits actually read %d.\\n"""		3610002	2					
ANR	3610865	PrimaryExpression	"""Expected to read %d PS bits actually read %d.\\n"""		3610002	0					
ANR	3610866	Argument	bits_left		3610002	3					
ANR	3610867	Identifier	bits_left		3610002	0					
ANR	3610868	Argument	bits_consumed		3610002	4					
ANR	3610869	Identifier	bits_consumed		3610002	0					
ANR	3610870	Label	err :	247:0:4285:4288	3610002	22	True				
ANR	3610871	Identifier	err		3610002	0					
ANR	3610872	ExpressionStatement	ps -> start = 0	249:4:4295:4308	3610002	23	True				
ANR	3610873	AssignmentExpression	ps -> start = 0		3610002	0		=			
ANR	3610874	PtrMemberAccess	ps -> start		3610002	0					
ANR	3610875	Identifier	ps		3610002	0					
ANR	3610876	Identifier	start		3610002	1					
ANR	3610877	PrimaryExpression	0		3610002	1					
ANR	3610878	ExpressionStatement	"skip_bits_long ( gb_host , bits_left )"	251:4:4315:4349	3610002	24	True				
ANR	3610879	CallExpression	"skip_bits_long ( gb_host , bits_left )"		3610002	0					
ANR	3610880	Callee	skip_bits_long		3610002	0					
ANR	3610881	Identifier	skip_bits_long		3610002	0					
ANR	3610882	ArgumentList	gb_host		3610002	1					
ANR	3610883	Argument	gb_host		3610002	0					
ANR	3610884	Identifier	gb_host		3610002	0					
ANR	3610885	Argument	bits_left		3610002	1					
ANR	3610886	Identifier	bits_left		3610002	0					
ANR	3610887	ReturnStatement	return bits_left ;	257:4:4360:4376	3610002	25	True				
ANR	3610888	Identifier	bits_left		3610002	0					
ANR	3610889	ReturnType	int		3610002	1					
ANR	3610890	Identifier	ff_ps_read_data		3610002	2					
ANR	3610891	ParameterList	"AVCodecContext * avctx , GetBitContext * gb_host , PSContext * ps , int bits_left"		3610002	3					
ANR	3610892	Parameter	AVCodecContext * avctx	1:20:20:40	3610002	0	True				
ANR	3610893	ParameterType	AVCodecContext *		3610002	0					
ANR	3610894	Identifier	avctx		3610002	1					
ANR	3610895	Parameter	GetBitContext * gb_host	1:43:43:64	3610002	1	True				
ANR	3610896	ParameterType	GetBitContext *		3610002	0					
ANR	3610897	Identifier	gb_host		3610002	1					
ANR	3610898	Parameter	PSContext * ps	1:67:67:79	3610002	2	True				
ANR	3610899	ParameterType	PSContext *		3610002	0					
ANR	3610900	Identifier	ps		3610002	1					
ANR	3610901	Parameter	int bits_left	1:82:82:94	3610002	3	True				
ANR	3610902	ParameterType	int		3610002	0					
ANR	3610903	Identifier	bits_left		3610002	1					
ANR	3610904	CFGEntryNode	ENTRY		3610002		True				
ANR	3610905	CFGExitNode	EXIT		3610002		True				
ANR	3610906	Symbol	* ps -> icc_mode		3610002						
ANR	3610907	Symbol	ps_read_extension_data		3610002						
ANR	3610908	Symbol	* iid_mode		3610002						
ANR	3610909	Symbol	ps		3610002						
ANR	3610910	Symbol	ps -> is34bands_old		3610002						
ANR	3610911	Symbol	get_bits		3610002						
ANR	3610912	Symbol	source		3610002						
ANR	3610913	Symbol	bit_count_start		3610002						
ANR	3610914	Symbol	* nr_iidopd_par_tab		3610002						
ANR	3610915	Symbol	dt		3610002						
ANR	3610916	Symbol	* ff_log2_tab		3610002						
ANR	3610917	Symbol	ps -> border_position		3610002						
ANR	3610918	Symbol	huff_iid		3610002						
ANR	3610919	Symbol	ps -> num_env_old		3610002						
ANR	3610920	Symbol	ps -> num_env		3610002						
ANR	3610921	Symbol	* ps -> ipd_par		3610002						
ANR	3610922	Symbol	ps -> frame_class		3610002						
ANR	3610923	Symbol	numQMFSlots		3610002						
ANR	3610924	Symbol	* * * ps		3610002						
ANR	3610925	Symbol	* ps -> border_position		3610002						
ANR	3610926	Symbol	ps -> enable_icc		3610002						
ANR	3610927	Symbol	ps -> start		3610002						
ANR	3610928	Symbol	get_bits1		3610002						
ANR	3610929	Symbol	* ps -> iid_par		3610002						
ANR	3610930	Symbol	ff_log2_tab		3610002						
ANR	3610931	Symbol	* ps		3610002						
ANR	3610932	Symbol	bits_left		3610002						
ANR	3610933	Symbol	ps -> opd_par		3610002						
ANR	3610934	Symbol	get_bits_count		3610002						
ANR	3610935	Symbol	ps_extension_id		3610002						
ANR	3610936	Symbol	* ps -> iid_quant		3610002						
ANR	3610937	Symbol	bits_consumed		3610002						
ANR	3610938	Symbol	ps -> is34bands		3610002						
ANR	3610939	Symbol	nr_iidopd_par_tab		3610002						
ANR	3610940	Symbol	num_env_tab		3610002						
ANR	3610941	Symbol	* * num_env_tab		3610002						
ANR	3610942	Symbol	ps -> nr_icc_par		3610002						
ANR	3610943	Symbol	ps -> enable_ipdopd		3610002						
ANR	3610944	Symbol	header		3610002						
ANR	3610945	Symbol	ps -> nr_iid_par		3610002						
ANR	3610946	Symbol	* gb_host		3610002						
ANR	3610947	Symbol	nr_iidicc_par_tab		3610002						
ANR	3610948	Symbol	PS_BASELINE		3610002						
ANR	3610949	Symbol	read_icc_data		3610002						
ANR	3610950	Symbol	gb_host		3610002						
ANR	3610951	Symbol	& gbc		3610002						
ANR	3610952	Symbol	read_iid_data		3610002						
ANR	3610953	Symbol	ps -> enable_ext		3610002						
ANR	3610954	Symbol	huff_icc_dt		3610002						
ANR	3610955	Symbol	ps -> nr_ipdopd_par		3610002						
ANR	3610956	Symbol	* ps -> icc_par		3610002						
ANR	3610957	Symbol	ps -> iid_par		3610002						
ANR	3610958	Symbol	* dt		3610002						
ANR	3610959	Symbol	huff_icc_df		3610002						
ANR	3610960	Symbol	gb		3610002						
ANR	3610961	Symbol	avctx		3610002						
ANR	3610962	Symbol	* ps -> num_env		3610002						
ANR	3610963	Symbol	ps -> ipd_par		3610002						
ANR	3610964	Symbol	iid_mode		3610002						
ANR	3610965	Symbol	AV_LOG_ERROR		3610002						
ANR	3610966	Symbol	e		3610002						
ANR	3610967	Symbol	ps -> iid_quant		3610002						
ANR	3610968	Symbol	* ps -> frame_class		3610002						
ANR	3610969	Symbol	ps -> enable_iid		3610002						
ANR	3610970	Symbol	* get_bits		3610002						
ANR	3610971	Symbol	* num_env_tab		3610002						
ANR	3610972	Symbol	* * ps -> frame_class		3610002						
ANR	3610973	Symbol	cnt		3610002						
ANR	3610974	Symbol	gbc		3610002						
ANR	3610975	Symbol	ps -> icc_par		3610002						
ANR	3610976	Symbol	* ps -> opd_par		3610002						
ANR	3610977	Symbol	* * ps		3610002						
ANR	3610978	Symbol	ps -> icc_mode		3610002						
ANR	3610979	Symbol	* huff_iid		3610002						
ANR	3610980	Symbol	* e		3610002						
ANR	3610981	Symbol	* nr_iidicc_par_tab		3610002						
