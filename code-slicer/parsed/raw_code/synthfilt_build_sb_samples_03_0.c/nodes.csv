command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8157452	File	/home/p4ultr4n/workplace/ReVeal/raw_code/synthfilt_build_sb_samples_03_0.c								
ANR	8157453	Function	synthfilt_build_sb_samples	1:0:0:7506							
ANR	8157454	FunctionDef	"synthfilt_build_sb_samples (QDM2Context * q , GetBitContext * gb , int length , int sb_min , int sb_max)"		8157453	0					
ANR	8157455	CompoundStatement		3:0:111:7506	8157453	0					
ANR	8157456	IdentifierDeclStatement	"int sb , j , k , n , ch , run , channels ;"	5:4:118:152	8157453	0	True				
ANR	8157457	IdentifierDecl	sb		8157453	0					
ANR	8157458	IdentifierDeclType	int		8157453	0					
ANR	8157459	Identifier	sb		8157453	1					
ANR	8157460	IdentifierDecl	j		8157453	1					
ANR	8157461	IdentifierDeclType	int		8157453	0					
ANR	8157462	Identifier	j		8157453	1					
ANR	8157463	IdentifierDecl	k		8157453	2					
ANR	8157464	IdentifierDeclType	int		8157453	0					
ANR	8157465	Identifier	k		8157453	1					
ANR	8157466	IdentifierDecl	n		8157453	3					
ANR	8157467	IdentifierDeclType	int		8157453	0					
ANR	8157468	Identifier	n		8157453	1					
ANR	8157469	IdentifierDecl	ch		8157453	4					
ANR	8157470	IdentifierDeclType	int		8157453	0					
ANR	8157471	Identifier	ch		8157453	1					
ANR	8157472	IdentifierDecl	run		8157453	5					
ANR	8157473	IdentifierDeclType	int		8157453	0					
ANR	8157474	Identifier	run		8157453	1					
ANR	8157475	IdentifierDecl	channels		8157453	6					
ANR	8157476	IdentifierDeclType	int		8157453	0					
ANR	8157477	Identifier	channels		8157453	1					
ANR	8157478	IdentifierDeclStatement	"int joined_stereo , zero_encoding , chs ;"	7:4:159:196	8157453	1	True				
ANR	8157479	IdentifierDecl	joined_stereo		8157453	0					
ANR	8157480	IdentifierDeclType	int		8157453	0					
ANR	8157481	Identifier	joined_stereo		8157453	1					
ANR	8157482	IdentifierDecl	zero_encoding		8157453	1					
ANR	8157483	IdentifierDeclType	int		8157453	0					
ANR	8157484	Identifier	zero_encoding		8157453	1					
ANR	8157485	IdentifierDecl	chs		8157453	2					
ANR	8157486	IdentifierDeclType	int		8157453	0					
ANR	8157487	Identifier	chs		8157453	1					
ANR	8157488	IdentifierDeclStatement	int type34_first ;	9:4:203:219	8157453	2	True				
ANR	8157489	IdentifierDecl	type34_first		8157453	0					
ANR	8157490	IdentifierDeclType	int		8157453	0					
ANR	8157491	Identifier	type34_first		8157453	1					
ANR	8157492	IdentifierDeclStatement	float type34_div = 0 ;	11:4:226:246	8157453	3	True				
ANR	8157493	IdentifierDecl	type34_div = 0		8157453	0					
ANR	8157494	IdentifierDeclType	float		8157453	0					
ANR	8157495	Identifier	type34_div		8157453	1					
ANR	8157496	AssignmentExpression	type34_div = 0		8157453	2		=			
ANR	8157497	Identifier	type34_div		8157453	0					
ANR	8157498	PrimaryExpression	0		8157453	1					
ANR	8157499	IdentifierDeclStatement	float type34_predictor ;	13:4:253:275	8157453	4	True				
ANR	8157500	IdentifierDecl	type34_predictor		8157453	0					
ANR	8157501	IdentifierDeclType	float		8157453	0					
ANR	8157502	Identifier	type34_predictor		8157453	1					
ANR	8157503	IdentifierDeclStatement	"float samples [ 10 ] , sign_bits [ 16 ] ;"	15:4:282:314	8157453	5	True				
ANR	8157504	IdentifierDecl	samples [ 10 ]		8157453	0					
ANR	8157505	IdentifierDeclType	float [ 10 ]		8157453	0					
ANR	8157506	Identifier	samples		8157453	1					
ANR	8157507	PrimaryExpression	10		8157453	2					
ANR	8157508	IdentifierDecl	sign_bits [ 16 ]		8157453	1					
ANR	8157509	IdentifierDeclType	float [ 16 ]		8157453	0					
ANR	8157510	Identifier	sign_bits		8157453	1					
ANR	8157511	PrimaryExpression	16		8157453	2					
ANR	8157512	IfStatement	if ( length == 0 )		8157453	6					
ANR	8157513	Condition	length == 0	19:8:327:337	8157453	0	True				
ANR	8157514	EqualityExpression	length == 0		8157453	0		==			
ANR	8157515	Identifier	length		8157453	0					
ANR	8157516	PrimaryExpression	0		8157453	1					
ANR	8157517	CompoundStatement		17:21:228:228	8157453	1					
ANR	8157518	ForStatement	for ( sb = sb_min ; sb < sb_max ; sb ++ )		8157453	0					
ANR	8157519	ForInit	sb = sb_min ;	23:13:389:398	8157453	0	True				
ANR	8157520	AssignmentExpression	sb = sb_min		8157453	0		=			
ANR	8157521	Identifier	sb		8157453	0					
ANR	8157522	Identifier	sb_min		8157453	1					
ANR	8157523	Condition	sb < sb_max	23:24:400:410	8157453	1	True				
ANR	8157524	RelationalExpression	sb < sb_max		8157453	0		<			
ANR	8157525	Identifier	sb		8157453	0					
ANR	8157526	Identifier	sb_max		8157453	1					
ANR	8157527	PostIncDecOperationExpression	sb ++	23:37:413:416	8157453	2	True				
ANR	8157528	Identifier	sb		8157453	0					
ANR	8157529	IncDec	++		8157453	1					
ANR	8157530	ExpressionStatement	"build_sb_samples_from_noise ( q , sb )"	25:12:432:467	8157453	3	True				
ANR	8157531	CallExpression	"build_sb_samples_from_noise ( q , sb )"		8157453	0					
ANR	8157532	Callee	build_sb_samples_from_noise		8157453	0					
ANR	8157533	Identifier	build_sb_samples_from_noise		8157453	0					
ANR	8157534	ArgumentList	q		8157453	1					
ANR	8157535	Argument	q		8157453	0					
ANR	8157536	Identifier	q		8157453	0					
ANR	8157537	Argument	sb		8157453	1					
ANR	8157538	Identifier	sb		8157453	0					
ANR	8157539	ReturnStatement	return 0 ;	29:8:480:488	8157453	1	True				
ANR	8157540	PrimaryExpression	0		8157453	0					
ANR	8157541	ForStatement	for ( sb = sb_min ; sb < sb_max ; sb ++ )		8157453	7					
ANR	8157542	ForInit	sb = sb_min ;	35:9:509:520	8157453	0	True				
ANR	8157543	AssignmentExpression	sb = sb_min		8157453	0		=			
ANR	8157544	Identifier	sb		8157453	0					
ANR	8157545	Identifier	sb_min		8157453	1					
ANR	8157546	Condition	sb < sb_max	35:22:522:532	8157453	1	True				
ANR	8157547	RelationalExpression	sb < sb_max		8157453	0		<			
ANR	8157548	Identifier	sb		8157453	0					
ANR	8157549	Identifier	sb_max		8157453	1					
ANR	8157550	PostIncDecOperationExpression	sb ++	35:35:535:538	8157453	2	True				
ANR	8157551	Identifier	sb		8157453	0					
ANR	8157552	IncDec	++		8157453	1					
ANR	8157553	CompoundStatement		33:41:429:429	8157453	3					
ANR	8157554	ExpressionStatement	FIX_NOISE_IDX ( q -> noise_idx )	37:8:552:579	8157453	0	True				
ANR	8157555	CallExpression	FIX_NOISE_IDX ( q -> noise_idx )		8157453	0					
ANR	8157556	Callee	FIX_NOISE_IDX		8157453	0					
ANR	8157557	Identifier	FIX_NOISE_IDX		8157453	0					
ANR	8157558	ArgumentList	q -> noise_idx		8157453	1					
ANR	8157559	Argument	q -> noise_idx		8157453	0					
ANR	8157560	PtrMemberAccess	q -> noise_idx		8157453	0					
ANR	8157561	Identifier	q		8157453	0					
ANR	8157562	Identifier	noise_idx		8157453	1					
ANR	8157563	ExpressionStatement	channels = q -> nb_channels	41:8:592:617	8157453	1	True				
ANR	8157564	AssignmentExpression	channels = q -> nb_channels		8157453	0		=			
ANR	8157565	Identifier	channels		8157453	0					
ANR	8157566	PtrMemberAccess	q -> nb_channels		8157453	1					
ANR	8157567	Identifier	q		8157453	0					
ANR	8157568	Identifier	nb_channels		8157453	1					
ANR	8157569	IfStatement	if ( q -> nb_channels <= 1 || sb < 12 )		8157453	2					
ANR	8157570	Condition	q -> nb_channels <= 1 || sb < 12	45:12:634:663	8157453	0	True				
ANR	8157571	OrExpression	q -> nb_channels <= 1 || sb < 12		8157453	0		||			
ANR	8157572	RelationalExpression	q -> nb_channels <= 1		8157453	0		<=			
ANR	8157573	PtrMemberAccess	q -> nb_channels		8157453	0					
ANR	8157574	Identifier	q		8157453	0					
ANR	8157575	Identifier	nb_channels		8157453	1					
ANR	8157576	PrimaryExpression	1		8157453	1					
ANR	8157577	RelationalExpression	sb < 12		8157453	1		<			
ANR	8157578	Identifier	sb		8157453	0					
ANR	8157579	PrimaryExpression	12		8157453	1					
ANR	8157580	ExpressionStatement	joined_stereo = 0	47:12:679:696	8157453	1	True				
ANR	8157581	AssignmentExpression	joined_stereo = 0		8157453	0		=			
ANR	8157582	Identifier	joined_stereo		8157453	0					
ANR	8157583	PrimaryExpression	0		8157453	1					
ANR	8157584	ElseStatement	else		8157453	0					
ANR	8157585	IfStatement	if ( sb >= 24 )		8157453	0					
ANR	8157586	Condition	sb >= 24	49:17:716:723	8157453	0	True				
ANR	8157587	RelationalExpression	sb >= 24		8157453	0		>=			
ANR	8157588	Identifier	sb		8157453	0					
ANR	8157589	PrimaryExpression	24		8157453	1					
ANR	8157590	ExpressionStatement	joined_stereo = 1	51:12:739:756	8157453	1	True				
ANR	8157591	AssignmentExpression	joined_stereo = 1		8157453	0		=			
ANR	8157592	Identifier	joined_stereo		8157453	0					
ANR	8157593	PrimaryExpression	1		8157453	1					
ANR	8157594	ElseStatement	else		8157453	0					
ANR	8157595	ExpressionStatement	"joined_stereo = ( BITS_LEFT ( length , gb ) >= 1 ) ? get_bits1 ( gb ) : 0"	55:12:785:849	8157453	0	True				
ANR	8157596	AssignmentExpression	"joined_stereo = ( BITS_LEFT ( length , gb ) >= 1 ) ? get_bits1 ( gb ) : 0"		8157453	0		=			
ANR	8157597	Identifier	joined_stereo		8157453	0					
ANR	8157598	ConditionalExpression	"( BITS_LEFT ( length , gb ) >= 1 ) ? get_bits1 ( gb ) : 0"		8157453	1					
ANR	8157599	Condition	"BITS_LEFT ( length , gb ) >= 1"		8157453	0					
ANR	8157600	RelationalExpression	"BITS_LEFT ( length , gb ) >= 1"		8157453	0		>=			
ANR	8157601	CallExpression	"BITS_LEFT ( length , gb )"		8157453	0					
ANR	8157602	Callee	BITS_LEFT		8157453	0					
ANR	8157603	Identifier	BITS_LEFT		8157453	0					
ANR	8157604	ArgumentList	length		8157453	1					
ANR	8157605	Argument	length		8157453	0					
ANR	8157606	Identifier	length		8157453	0					
ANR	8157607	Argument	gb		8157453	1					
ANR	8157608	Identifier	gb		8157453	0					
ANR	8157609	PrimaryExpression	1		8157453	1					
ANR	8157610	CallExpression	get_bits1 ( gb )		8157453	1					
ANR	8157611	Callee	get_bits1		8157453	0					
ANR	8157612	Identifier	get_bits1		8157453	0					
ANR	8157613	ArgumentList	gb		8157453	1					
ANR	8157614	Argument	gb		8157453	0					
ANR	8157615	Identifier	gb		8157453	0					
ANR	8157616	PrimaryExpression	0		8157453	2					
ANR	8157617	IfStatement	if ( joined_stereo )		8157453	3					
ANR	8157618	Condition	joined_stereo	59:12:866:878	8157453	0	True				
ANR	8157619	Identifier	joined_stereo		8157453	0					
ANR	8157620	CompoundStatement		57:27:769:769	8157453	1					
ANR	8157621	IfStatement	"if ( BITS_LEFT ( length , gb ) >= 16 )"		8157453	0					
ANR	8157622	Condition	"BITS_LEFT ( length , gb ) >= 16"	61:16:900:925	8157453	0	True				
ANR	8157623	RelationalExpression	"BITS_LEFT ( length , gb ) >= 16"		8157453	0		>=			
ANR	8157624	CallExpression	"BITS_LEFT ( length , gb )"		8157453	0					
ANR	8157625	Callee	BITS_LEFT		8157453	0					
ANR	8157626	Identifier	BITS_LEFT		8157453	0					
ANR	8157627	ArgumentList	length		8157453	1					
ANR	8157628	Argument	length		8157453	0					
ANR	8157629	Identifier	length		8157453	0					
ANR	8157630	Argument	gb		8157453	1					
ANR	8157631	Identifier	gb		8157453	0					
ANR	8157632	PrimaryExpression	16		8157453	1					
ANR	8157633	ForStatement	for ( j = 0 ; j < 16 ; j ++ )		8157453	1					
ANR	8157634	ForInit	j = 0 ;	63:21:950:955	8157453	0	True				
ANR	8157635	AssignmentExpression	j = 0		8157453	0		=			
ANR	8157636	Identifier	j		8157453	0					
ANR	8157637	PrimaryExpression	0		8157453	1					
ANR	8157638	Condition	j < 16	63:28:957:962	8157453	1	True				
ANR	8157639	RelationalExpression	j < 16		8157453	0		<			
ANR	8157640	Identifier	j		8157453	0					
ANR	8157641	PrimaryExpression	16		8157453	1					
ANR	8157642	PostIncDecOperationExpression	j ++	63:36:965:967	8157453	2	True				
ANR	8157643	Identifier	j		8157453	0					
ANR	8157644	IncDec	++		8157453	1					
ANR	8157645	ExpressionStatement	sign_bits [ j ] = get_bits1 ( gb )	65:20:991:1020	8157453	3	True				
ANR	8157646	AssignmentExpression	sign_bits [ j ] = get_bits1 ( gb )		8157453	0		=			
ANR	8157647	ArrayIndexing	sign_bits [ j ]		8157453	0					
ANR	8157648	Identifier	sign_bits		8157453	0					
ANR	8157649	Identifier	j		8157453	1					
ANR	8157650	CallExpression	get_bits1 ( gb )		8157453	1					
ANR	8157651	Callee	get_bits1		8157453	0					
ANR	8157652	Identifier	get_bits1		8157453	0					
ANR	8157653	ArgumentList	gb		8157453	1					
ANR	8157654	Argument	gb		8157453	0					
ANR	8157655	Identifier	gb		8157453	0					
ANR	8157656	ForStatement	for ( j = 0 ; j < 64 ; j ++ )		8157453	1					
ANR	8157657	ForInit	j = 0 ;	69:17:1042:1047	8157453	0	True				
ANR	8157658	AssignmentExpression	j = 0		8157453	0		=			
ANR	8157659	Identifier	j		8157453	0					
ANR	8157660	PrimaryExpression	0		8157453	1					
ANR	8157661	Condition	j < 64	69:24:1049:1054	8157453	1	True				
ANR	8157662	RelationalExpression	j < 64		8157453	0		<			
ANR	8157663	Identifier	j		8157453	0					
ANR	8157664	PrimaryExpression	64		8157453	1					
ANR	8157665	PostIncDecOperationExpression	j ++	69:32:1057:1059	8157453	2	True				
ANR	8157666	Identifier	j		8157453	0					
ANR	8157667	IncDec	++		8157453	1					
ANR	8157668	IfStatement	if ( q -> coding_method [ 1 ] [ sb ] [ j ] > q -> coding_method [ 0 ] [ sb ] [ j ] )		8157453	3					
ANR	8157669	Condition	q -> coding_method [ 1 ] [ sb ] [ j ] > q -> coding_method [ 0 ] [ sb ] [ j ]	71:20:1083:1137	8157453	0	True				
ANR	8157670	RelationalExpression	q -> coding_method [ 1 ] [ sb ] [ j ] > q -> coding_method [ 0 ] [ sb ] [ j ]		8157453	0		>			
ANR	8157671	ArrayIndexing	q -> coding_method [ 1 ] [ sb ] [ j ]		8157453	0					
ANR	8157672	ArrayIndexing	q -> coding_method [ 1 ] [ sb ]		8157453	0					
ANR	8157673	ArrayIndexing	q -> coding_method [ 1 ]		8157453	0					
ANR	8157674	PtrMemberAccess	q -> coding_method		8157453	0					
ANR	8157675	Identifier	q		8157453	0					
ANR	8157676	Identifier	coding_method		8157453	1					
ANR	8157677	PrimaryExpression	1		8157453	1					
ANR	8157678	Identifier	sb		8157453	1					
ANR	8157679	Identifier	j		8157453	1					
ANR	8157680	ArrayIndexing	q -> coding_method [ 0 ] [ sb ] [ j ]		8157453	1					
ANR	8157681	ArrayIndexing	q -> coding_method [ 0 ] [ sb ]		8157453	0					
ANR	8157682	ArrayIndexing	q -> coding_method [ 0 ]		8157453	0					
ANR	8157683	PtrMemberAccess	q -> coding_method		8157453	0					
ANR	8157684	Identifier	q		8157453	0					
ANR	8157685	Identifier	coding_method		8157453	1					
ANR	8157686	PrimaryExpression	0		8157453	1					
ANR	8157687	Identifier	sb		8157453	1					
ANR	8157688	Identifier	j		8157453	1					
ANR	8157689	ExpressionStatement	q -> coding_method [ 0 ] [ sb ] [ j ] = q -> coding_method [ 1 ] [ sb ] [ j ]	73:20:1161:1216	8157453	1	True				
ANR	8157690	AssignmentExpression	q -> coding_method [ 0 ] [ sb ] [ j ] = q -> coding_method [ 1 ] [ sb ] [ j ]		8157453	0		=			
ANR	8157691	ArrayIndexing	q -> coding_method [ 0 ] [ sb ] [ j ]		8157453	0					
ANR	8157692	ArrayIndexing	q -> coding_method [ 0 ] [ sb ]		8157453	0					
ANR	8157693	ArrayIndexing	q -> coding_method [ 0 ]		8157453	0					
ANR	8157694	PtrMemberAccess	q -> coding_method		8157453	0					
ANR	8157695	Identifier	q		8157453	0					
ANR	8157696	Identifier	coding_method		8157453	1					
ANR	8157697	PrimaryExpression	0		8157453	1					
ANR	8157698	Identifier	sb		8157453	1					
ANR	8157699	Identifier	j		8157453	1					
ANR	8157700	ArrayIndexing	q -> coding_method [ 1 ] [ sb ] [ j ]		8157453	1					
ANR	8157701	ArrayIndexing	q -> coding_method [ 1 ] [ sb ]		8157453	0					
ANR	8157702	ArrayIndexing	q -> coding_method [ 1 ]		8157453	0					
ANR	8157703	PtrMemberAccess	q -> coding_method		8157453	0					
ANR	8157704	Identifier	q		8157453	0					
ANR	8157705	Identifier	coding_method		8157453	1					
ANR	8157706	PrimaryExpression	1		8157453	1					
ANR	8157707	Identifier	sb		8157453	1					
ANR	8157708	Identifier	j		8157453	1					
ANR	8157709	ExpressionStatement	"fix_coding_method_array ( sb , q -> nb_channels , q -> coding_method )"	77:12:1233:1294	8157453	2	True				
ANR	8157710	CallExpression	"fix_coding_method_array ( sb , q -> nb_channels , q -> coding_method )"		8157453	0					
ANR	8157711	Callee	fix_coding_method_array		8157453	0					
ANR	8157712	Identifier	fix_coding_method_array		8157453	0					
ANR	8157713	ArgumentList	sb		8157453	1					
ANR	8157714	Argument	sb		8157453	0					
ANR	8157715	Identifier	sb		8157453	0					
ANR	8157716	Argument	q -> nb_channels		8157453	1					
ANR	8157717	PtrMemberAccess	q -> nb_channels		8157453	0					
ANR	8157718	Identifier	q		8157453	0					
ANR	8157719	Identifier	nb_channels		8157453	1					
ANR	8157720	Argument	q -> coding_method		8157453	2					
ANR	8157721	PtrMemberAccess	q -> coding_method		8157453	0					
ANR	8157722	Identifier	q		8157453	0					
ANR	8157723	Identifier	coding_method		8157453	1					
ANR	8157724	ExpressionStatement	channels = 1	79:12:1309:1321	8157453	3	True				
ANR	8157725	AssignmentExpression	channels = 1		8157453	0		=			
ANR	8157726	Identifier	channels		8157453	0					
ANR	8157727	PrimaryExpression	1		8157453	1					
ANR	8157728	ForStatement	for ( ch = 0 ; ch < channels ; ch ++ )		8157453	4					
ANR	8157729	ForInit	ch = 0 ;	85:13:1350:1356	8157453	0	True				
ANR	8157730	AssignmentExpression	ch = 0		8157453	0		=			
ANR	8157731	Identifier	ch		8157453	0					
ANR	8157732	PrimaryExpression	0		8157453	1					
ANR	8157733	Condition	ch < channels	85:21:1358:1370	8157453	1	True				
ANR	8157734	RelationalExpression	ch < channels		8157453	0		<			
ANR	8157735	Identifier	ch		8157453	0					
ANR	8157736	Identifier	channels		8157453	1					
ANR	8157737	PostIncDecOperationExpression	ch ++	85:36:1373:1376	8157453	2	True				
ANR	8157738	Identifier	ch		8157453	0					
ANR	8157739	IncDec	++		8157453	1					
ANR	8157740	CompoundStatement		83:42:1267:1267	8157453	3					
ANR	8157741	ExpressionStatement	"zero_encoding = ( BITS_LEFT ( length , gb ) >= 1 ) ? get_bits1 ( gb ) : 0"	87:12:1394:1457	8157453	0	True				
ANR	8157742	AssignmentExpression	"zero_encoding = ( BITS_LEFT ( length , gb ) >= 1 ) ? get_bits1 ( gb ) : 0"		8157453	0		=			
ANR	8157743	Identifier	zero_encoding		8157453	0					
ANR	8157744	ConditionalExpression	"( BITS_LEFT ( length , gb ) >= 1 ) ? get_bits1 ( gb ) : 0"		8157453	1					
ANR	8157745	Condition	"BITS_LEFT ( length , gb ) >= 1"		8157453	0					
ANR	8157746	RelationalExpression	"BITS_LEFT ( length , gb ) >= 1"		8157453	0		>=			
ANR	8157747	CallExpression	"BITS_LEFT ( length , gb )"		8157453	0					
ANR	8157748	Callee	BITS_LEFT		8157453	0					
ANR	8157749	Identifier	BITS_LEFT		8157453	0					
ANR	8157750	ArgumentList	length		8157453	1					
ANR	8157751	Argument	length		8157453	0					
ANR	8157752	Identifier	length		8157453	0					
ANR	8157753	Argument	gb		8157453	1					
ANR	8157754	Identifier	gb		8157453	0					
ANR	8157755	PrimaryExpression	1		8157453	1					
ANR	8157756	CallExpression	get_bits1 ( gb )		8157453	1					
ANR	8157757	Callee	get_bits1		8157453	0					
ANR	8157758	Identifier	get_bits1		8157453	0					
ANR	8157759	ArgumentList	gb		8157453	1					
ANR	8157760	Argument	gb		8157453	0					
ANR	8157761	Identifier	gb		8157453	0					
ANR	8157762	PrimaryExpression	0		8157453	2					
ANR	8157763	ExpressionStatement	type34_predictor = 0.0	89:12:1472:1494	8157453	1	True				
ANR	8157764	AssignmentExpression	type34_predictor = 0.0		8157453	0		=			
ANR	8157765	Identifier	type34_predictor		8157453	0					
ANR	8157766	PrimaryExpression	0.0		8157453	1					
ANR	8157767	ExpressionStatement	type34_first = 1	91:12:1509:1525	8157453	2	True				
ANR	8157768	AssignmentExpression	type34_first = 1		8157453	0		=			
ANR	8157769	Identifier	type34_first		8157453	0					
ANR	8157770	PrimaryExpression	1		8157453	1					
ANR	8157771	ForStatement	for ( j = 0 ; j < 128 ; )		8157453	3					
ANR	8157772	ForInit	j = 0 ;	95:17:1547:1552	8157453	0	True				
ANR	8157773	AssignmentExpression	j = 0		8157453	0		=			
ANR	8157774	Identifier	j		8157453	0					
ANR	8157775	PrimaryExpression	0		8157453	1					
ANR	8157776	Condition	j < 128	95:24:1554:1560	8157453	1	True				
ANR	8157777	RelationalExpression	j < 128		8157453	0		<			
ANR	8157778	Identifier	j		8157453	0					
ANR	8157779	PrimaryExpression	128		8157453	1					
ANR	8157780	CompoundStatement		93:35:1453:1453	8157453	2					
ANR	8157781	SwitchStatement	switch ( q -> coding_method [ ch ] [ sb ] [ j / 2 ] )		8157453	0					
ANR	8157782	Condition	q -> coding_method [ ch ] [ sb ] [ j / 2 ]	97:24:1592:1622	8157453	0	True				
ANR	8157783	ArrayIndexing	q -> coding_method [ ch ] [ sb ] [ j / 2 ]		8157453	0					
ANR	8157784	ArrayIndexing	q -> coding_method [ ch ] [ sb ]		8157453	0					
ANR	8157785	ArrayIndexing	q -> coding_method [ ch ]		8157453	0					
ANR	8157786	PtrMemberAccess	q -> coding_method		8157453	0					
ANR	8157787	Identifier	q		8157453	0					
ANR	8157788	Identifier	coding_method		8157453	1					
ANR	8157789	Identifier	ch		8157453	1					
ANR	8157790	Identifier	sb		8157453	1					
ANR	8157791	MultiplicativeExpression	j / 2		8157453	1		/			
ANR	8157792	Identifier	j		8157453	0					
ANR	8157793	PrimaryExpression	2		8157453	1					
ANR	8157794	CompoundStatement		95:57:1513:1513	8157453	1					
ANR	8157795	Label	case 8 :	99:20:1648:1654	8157453	0	True				
ANR	8157796	IfStatement	"if ( BITS_LEFT ( length , gb ) >= 10 )"		8157453	1					
ANR	8157797	Condition	"BITS_LEFT ( length , gb ) >= 10"	101:28:1685:1710	8157453	0	True				
ANR	8157798	RelationalExpression	"BITS_LEFT ( length , gb ) >= 10"		8157453	0		>=			
ANR	8157799	CallExpression	"BITS_LEFT ( length , gb )"		8157453	0					
ANR	8157800	Callee	BITS_LEFT		8157453	0					
ANR	8157801	Identifier	BITS_LEFT		8157453	0					
ANR	8157802	ArgumentList	length		8157453	1					
ANR	8157803	Argument	length		8157453	0					
ANR	8157804	Identifier	length		8157453	0					
ANR	8157805	Argument	gb		8157453	1					
ANR	8157806	Identifier	gb		8157453	0					
ANR	8157807	PrimaryExpression	10		8157453	1					
ANR	8157808	CompoundStatement		99:56:1601:1601	8157453	1					
ANR	8157809	IfStatement	if ( zero_encoding )		8157453	0					
ANR	8157810	Condition	zero_encoding	103:32:1748:1760	8157453	0	True				
ANR	8157811	Identifier	zero_encoding		8157453	0					
ANR	8157812	CompoundStatement		101:47:1651:1651	8157453	1					
ANR	8157813	ForStatement	for ( k = 0 ; k < 5 ; k ++ )		8157453	0					
ANR	8157814	ForInit	k = 0 ;	105:37:1803:1808	8157453	0	True				
ANR	8157815	AssignmentExpression	k = 0		8157453	0		=			
ANR	8157816	Identifier	k		8157453	0					
ANR	8157817	PrimaryExpression	0		8157453	1					
ANR	8157818	Condition	k < 5	105:44:1810:1814	8157453	1	True				
ANR	8157819	RelationalExpression	k < 5		8157453	0		<			
ANR	8157820	Identifier	k		8157453	0					
ANR	8157821	PrimaryExpression	5		8157453	1					
ANR	8157822	PostIncDecOperationExpression	k ++	105:51:1817:1819	8157453	2	True				
ANR	8157823	Identifier	k		8157453	0					
ANR	8157824	IncDec	++		8157453	1					
ANR	8157825	CompoundStatement		103:56:1710:1710	8157453	3					
ANR	8157826	IfStatement	if ( ( j + 2 * k ) >= 128 )		8157453	0					
ANR	8157827	Condition	( j + 2 * k ) >= 128	107:40:1865:1882	8157453	0	True				
ANR	8157828	RelationalExpression	( j + 2 * k ) >= 128		8157453	0		>=			
ANR	8157829	AdditiveExpression	j + 2 * k		8157453	0		+			
ANR	8157830	Identifier	j		8157453	0					
ANR	8157831	MultiplicativeExpression	2 * k		8157453	1		*			
ANR	8157832	PrimaryExpression	2		8157453	0					
ANR	8157833	Identifier	k		8157453	1					
ANR	8157834	PrimaryExpression	128		8157453	1					
ANR	8157835	BreakStatement	break ;	109:40:1926:1931	8157453	1	True				
ANR	8157836	ExpressionStatement	samples [ 2 * k ] = get_bits1 ( gb ) ? dequant_1bit [ joined_stereo ] [ 2 * get_bits1 ( gb ) ] : 0	111:36:1970:2053	8157453	1	True				
ANR	8157837	AssignmentExpression	samples [ 2 * k ] = get_bits1 ( gb ) ? dequant_1bit [ joined_stereo ] [ 2 * get_bits1 ( gb ) ] : 0		8157453	0		=			
ANR	8157838	ArrayIndexing	samples [ 2 * k ]		8157453	0					
ANR	8157839	Identifier	samples		8157453	0					
ANR	8157840	MultiplicativeExpression	2 * k		8157453	1		*			
ANR	8157841	PrimaryExpression	2		8157453	0					
ANR	8157842	Identifier	k		8157453	1					
ANR	8157843	ConditionalExpression	get_bits1 ( gb ) ? dequant_1bit [ joined_stereo ] [ 2 * get_bits1 ( gb ) ] : 0		8157453	1					
ANR	8157844	Condition	get_bits1 ( gb )		8157453	0					
ANR	8157845	CallExpression	get_bits1 ( gb )		8157453	0					
ANR	8157846	Callee	get_bits1		8157453	0					
ANR	8157847	Identifier	get_bits1		8157453	0					
ANR	8157848	ArgumentList	gb		8157453	1					
ANR	8157849	Argument	gb		8157453	0					
ANR	8157850	Identifier	gb		8157453	0					
ANR	8157851	ArrayIndexing	dequant_1bit [ joined_stereo ] [ 2 * get_bits1 ( gb ) ]		8157453	1					
ANR	8157852	ArrayIndexing	dequant_1bit [ joined_stereo ]		8157453	0					
ANR	8157853	Identifier	dequant_1bit		8157453	0					
ANR	8157854	Identifier	joined_stereo		8157453	1					
ANR	8157855	MultiplicativeExpression	2 * get_bits1 ( gb )		8157453	1		*			
ANR	8157856	PrimaryExpression	2		8157453	0					
ANR	8157857	CallExpression	get_bits1 ( gb )		8157453	1					
ANR	8157858	Callee	get_bits1		8157453	0					
ANR	8157859	Identifier	get_bits1		8157453	0					
ANR	8157860	ArgumentList	gb		8157453	1					
ANR	8157861	Argument	gb		8157453	0					
ANR	8157862	Identifier	gb		8157453	0					
ANR	8157863	PrimaryExpression	0		8157453	2					
ANR	8157864	ElseStatement	else		8157453	0					
ANR	8157865	CompoundStatement		113:35:2014:2014	8157453	0					
ANR	8157866	ExpressionStatement	"n = get_bits ( gb , 8 )"	117:32:2161:2180	8157453	0	True				
ANR	8157867	AssignmentExpression	"n = get_bits ( gb , 8 )"		8157453	0		=			
ANR	8157868	Identifier	n		8157453	0					
ANR	8157869	CallExpression	"get_bits ( gb , 8 )"		8157453	1					
ANR	8157870	Callee	get_bits		8157453	0					
ANR	8157871	Identifier	get_bits		8157453	0					
ANR	8157872	ArgumentList	gb		8157453	1					
ANR	8157873	Argument	gb		8157453	0					
ANR	8157874	Identifier	gb		8157453	0					
ANR	8157875	Argument	8		8157453	1					
ANR	8157876	PrimaryExpression	8		8157453	0					
ANR	8157877	ForStatement	for ( k = 0 ; k < 5 ; k ++ )		8157453	1					
ANR	8157878	ForInit	k = 0 ;	119:37:2220:2225	8157453	0	True				
ANR	8157879	AssignmentExpression	k = 0		8157453	0		=			
ANR	8157880	Identifier	k		8157453	0					
ANR	8157881	PrimaryExpression	0		8157453	1					
ANR	8157882	Condition	k < 5	119:44:2227:2231	8157453	1	True				
ANR	8157883	RelationalExpression	k < 5		8157453	0		<			
ANR	8157884	Identifier	k		8157453	0					
ANR	8157885	PrimaryExpression	5		8157453	1					
ANR	8157886	PostIncDecOperationExpression	k ++	119:51:2234:2236	8157453	2	True				
ANR	8157887	Identifier	k		8157453	0					
ANR	8157888	IncDec	++		8157453	1					
ANR	8157889	ExpressionStatement	samples [ 2 * k ] = dequant_1bit [ joined_stereo ] [ random_dequant_index [ n ] [ k ] ]	121:36:2276:2348	8157453	3	True				
ANR	8157890	AssignmentExpression	samples [ 2 * k ] = dequant_1bit [ joined_stereo ] [ random_dequant_index [ n ] [ k ] ]		8157453	0		=			
ANR	8157891	ArrayIndexing	samples [ 2 * k ]		8157453	0					
ANR	8157892	Identifier	samples		8157453	0					
ANR	8157893	MultiplicativeExpression	2 * k		8157453	1		*			
ANR	8157894	PrimaryExpression	2		8157453	0					
ANR	8157895	Identifier	k		8157453	1					
ANR	8157896	ArrayIndexing	dequant_1bit [ joined_stereo ] [ random_dequant_index [ n ] [ k ] ]		8157453	1					
ANR	8157897	ArrayIndexing	dequant_1bit [ joined_stereo ]		8157453	0					
ANR	8157898	Identifier	dequant_1bit		8157453	0					
ANR	8157899	Identifier	joined_stereo		8157453	1					
ANR	8157900	ArrayIndexing	random_dequant_index [ n ] [ k ]		8157453	1					
ANR	8157901	ArrayIndexing	random_dequant_index [ n ]		8157453	0					
ANR	8157902	Identifier	random_dequant_index		8157453	0					
ANR	8157903	Identifier	n		8157453	1					
ANR	8157904	Identifier	k		8157453	1					
ANR	8157905	ForStatement	for ( k = 0 ; k < 5 ; k ++ )		8157453	1					
ANR	8157906	ForInit	k = 0 ;	125:33:2415:2420	8157453	0	True				
ANR	8157907	AssignmentExpression	k = 0		8157453	0		=			
ANR	8157908	Identifier	k		8157453	0					
ANR	8157909	PrimaryExpression	0		8157453	1					
ANR	8157910	Condition	k < 5	125:40:2422:2426	8157453	1	True				
ANR	8157911	RelationalExpression	k < 5		8157453	0		<			
ANR	8157912	Identifier	k		8157453	0					
ANR	8157913	PrimaryExpression	5		8157453	1					
ANR	8157914	PostIncDecOperationExpression	k ++	125:47:2429:2431	8157453	2	True				
ANR	8157915	Identifier	k		8157453	0					
ANR	8157916	IncDec	++		8157453	1					
ANR	8157917	ExpressionStatement	"samples [ 2 * k + 1 ] = SB_DITHERING_NOISE ( sb , q -> noise_idx )"	127:32:2467:2523	8157453	3	True				
ANR	8157918	AssignmentExpression	"samples [ 2 * k + 1 ] = SB_DITHERING_NOISE ( sb , q -> noise_idx )"		8157453	0		=			
ANR	8157919	ArrayIndexing	samples [ 2 * k + 1 ]		8157453	0					
ANR	8157920	Identifier	samples		8157453	0					
ANR	8157921	AdditiveExpression	2 * k + 1		8157453	1		+			
ANR	8157922	MultiplicativeExpression	2 * k		8157453	0		*			
ANR	8157923	PrimaryExpression	2		8157453	0					
ANR	8157924	Identifier	k		8157453	1					
ANR	8157925	PrimaryExpression	1		8157453	1					
ANR	8157926	CallExpression	"SB_DITHERING_NOISE ( sb , q -> noise_idx )"		8157453	1					
ANR	8157927	Callee	SB_DITHERING_NOISE		8157453	0					
ANR	8157928	Identifier	SB_DITHERING_NOISE		8157453	0					
ANR	8157929	ArgumentList	sb		8157453	1					
ANR	8157930	Argument	sb		8157453	0					
ANR	8157931	Identifier	sb		8157453	0					
ANR	8157932	Argument	q -> noise_idx		8157453	1					
ANR	8157933	PtrMemberAccess	q -> noise_idx		8157453	0					
ANR	8157934	Identifier	q		8157453	0					
ANR	8157935	Identifier	noise_idx		8157453	1					
ANR	8157936	ElseStatement	else		8157453	0					
ANR	8157937	CompoundStatement		127:31:2445:2445	8157453	0					
ANR	8157938	ForStatement	for ( k = 0 ; k < 10 ; k ++ )		8157453	0					
ANR	8157939	ForInit	k = 0 ;	131:33:2593:2598	8157453	0	True				
ANR	8157940	AssignmentExpression	k = 0		8157453	0		=			
ANR	8157941	Identifier	k		8157453	0					
ANR	8157942	PrimaryExpression	0		8157453	1					
ANR	8157943	Condition	k < 10	131:40:2600:2605	8157453	1	True				
ANR	8157944	RelationalExpression	k < 10		8157453	0		<			
ANR	8157945	Identifier	k		8157453	0					
ANR	8157946	PrimaryExpression	10		8157453	1					
ANR	8157947	PostIncDecOperationExpression	k ++	131:48:2608:2610	8157453	2	True				
ANR	8157948	Identifier	k		8157453	0					
ANR	8157949	IncDec	++		8157453	1					
ANR	8157950	ExpressionStatement	"samples [ k ] = SB_DITHERING_NOISE ( sb , q -> noise_idx )"	133:32:2646:2694	8157453	3	True				
ANR	8157951	AssignmentExpression	"samples [ k ] = SB_DITHERING_NOISE ( sb , q -> noise_idx )"		8157453	0		=			
ANR	8157952	ArrayIndexing	samples [ k ]		8157453	0					
ANR	8157953	Identifier	samples		8157453	0					
ANR	8157954	Identifier	k		8157453	1					
ANR	8157955	CallExpression	"SB_DITHERING_NOISE ( sb , q -> noise_idx )"		8157453	1					
ANR	8157956	Callee	SB_DITHERING_NOISE		8157453	0					
ANR	8157957	Identifier	SB_DITHERING_NOISE		8157453	0					
ANR	8157958	ArgumentList	sb		8157453	1					
ANR	8157959	Argument	sb		8157453	0					
ANR	8157960	Identifier	sb		8157453	0					
ANR	8157961	Argument	q -> noise_idx		8157453	1					
ANR	8157962	PtrMemberAccess	q -> noise_idx		8157453	0					
ANR	8157963	Identifier	q		8157453	0					
ANR	8157964	Identifier	noise_idx		8157453	1					
ANR	8157965	ExpressionStatement	run = 10	137:24:2748:2756	8157453	2	True				
ANR	8157966	AssignmentExpression	run = 10		8157453	0		=			
ANR	8157967	Identifier	run		8157453	0					
ANR	8157968	PrimaryExpression	10		8157453	1					
ANR	8157969	BreakStatement	break ;	139:24:2783:2788	8157453	3	True				
ANR	8157970	Label	case 10 :	143:20:2813:2820	8157453	4	True				
ANR	8157971	IfStatement	"if ( BITS_LEFT ( length , gb ) >= 1 )"		8157453	5					
ANR	8157972	Condition	"BITS_LEFT ( length , gb ) >= 1"	145:28:2851:2875	8157453	0	True				
ANR	8157973	RelationalExpression	"BITS_LEFT ( length , gb ) >= 1"		8157453	0		>=			
ANR	8157974	CallExpression	"BITS_LEFT ( length , gb )"		8157453	0					
ANR	8157975	Callee	BITS_LEFT		8157453	0					
ANR	8157976	Identifier	BITS_LEFT		8157453	0					
ANR	8157977	ArgumentList	length		8157453	1					
ANR	8157978	Argument	length		8157453	0					
ANR	8157979	Identifier	length		8157453	0					
ANR	8157980	Argument	gb		8157453	1					
ANR	8157981	Identifier	gb		8157453	0					
ANR	8157982	PrimaryExpression	1		8157453	1					
ANR	8157983	CompoundStatement		145:28:2797:2811	8157453	1					
ANR	8157984	IdentifierDeclStatement	float f = 0.81 ;	147:28:2909:2923	8157453	0	True				
ANR	8157985	IdentifierDecl	f = 0.81		8157453	0					
ANR	8157986	IdentifierDeclType	float		8157453	0					
ANR	8157987	Identifier	f		8157453	1					
ANR	8157988	AssignmentExpression	f = 0.81		8157453	2		=			
ANR	8157989	Identifier	f		8157453	0					
ANR	8157990	PrimaryExpression	0.81		8157453	1					
ANR	8157991	IfStatement	if ( get_bits1 ( gb ) )		8157453	1					
ANR	8157992	Condition	get_bits1 ( gb )	151:32:2960:2972	8157453	0	True				
ANR	8157993	CallExpression	get_bits1 ( gb )		8157453	0					
ANR	8157994	Callee	get_bits1		8157453	0					
ANR	8157995	Identifier	get_bits1		8157453	0					
ANR	8157996	ArgumentList	gb		8157453	1					
ANR	8157997	Argument	gb		8157453	0					
ANR	8157998	Identifier	gb		8157453	0					
ANR	8157999	ExpressionStatement	f = - f	153:32:3008:3014	8157453	1	True				
ANR	8158000	AssignmentExpression	f = - f		8157453	0		=			
ANR	8158001	Identifier	f		8157453	0					
ANR	8158002	UnaryOperationExpression	- f		8157453	1					
ANR	8158003	UnaryOperator	-		8157453	0					
ANR	8158004	Identifier	f		8157453	1					
ANR	8158005	ExpressionStatement	f -= noise_samples [ ( ( sb + 1 ) * ( j + 5 * ch + 1 ) ) & 127 ] * 9.0 / 40.0	155:28:3045:3112	8157453	2	True				
ANR	8158006	AssignmentExpression	f -= noise_samples [ ( ( sb + 1 ) * ( j + 5 * ch + 1 ) ) & 127 ] * 9.0 / 40.0		8157453	0		-=			
ANR	8158007	Identifier	f		8157453	0					
ANR	8158008	MultiplicativeExpression	noise_samples [ ( ( sb + 1 ) * ( j + 5 * ch + 1 ) ) & 127 ] * 9.0 / 40.0		8157453	1		*			
ANR	8158009	ArrayIndexing	noise_samples [ ( ( sb + 1 ) * ( j + 5 * ch + 1 ) ) & 127 ]		8157453	0					
ANR	8158010	Identifier	noise_samples		8157453	0					
ANR	8158011	BitAndExpression	( ( sb + 1 ) * ( j + 5 * ch + 1 ) ) & 127		8157453	1		&			
ANR	8158012	MultiplicativeExpression	( sb + 1 ) * ( j + 5 * ch + 1 )		8157453	0		*			
ANR	8158013	AdditiveExpression	sb + 1		8157453	0		+			
ANR	8158014	Identifier	sb		8157453	0					
ANR	8158015	PrimaryExpression	1		8157453	1					
ANR	8158016	AdditiveExpression	j + 5 * ch + 1		8157453	1		+			
ANR	8158017	Identifier	j		8157453	0					
ANR	8158018	AdditiveExpression	5 * ch + 1		8157453	1		+			
ANR	8158019	MultiplicativeExpression	5 * ch		8157453	0		*			
ANR	8158020	PrimaryExpression	5		8157453	0					
ANR	8158021	Identifier	ch		8157453	1					
ANR	8158022	PrimaryExpression	1		8157453	1					
ANR	8158023	PrimaryExpression	127		8157453	1					
ANR	8158024	MultiplicativeExpression	9.0 / 40.0		8157453	1		/			
ANR	8158025	PrimaryExpression	9.0		8157453	0					
ANR	8158026	PrimaryExpression	40.0		8157453	1					
ANR	8158027	ExpressionStatement	samples [ 0 ] = f	157:28:3143:3157	8157453	3	True				
ANR	8158028	AssignmentExpression	samples [ 0 ] = f		8157453	0		=			
ANR	8158029	ArrayIndexing	samples [ 0 ]		8157453	0					
ANR	8158030	Identifier	samples		8157453	0					
ANR	8158031	PrimaryExpression	0		8157453	1					
ANR	8158032	Identifier	f		8157453	1					
ANR	8158033	ElseStatement	else		8157453	0					
ANR	8158034	CompoundStatement		157:31:3079:3079	8157453	0					
ANR	8158035	ExpressionStatement	"samples [ 0 ] = SB_DITHERING_NOISE ( sb , q -> noise_idx )"	161:28:3222:3270	8157453	0	True				
ANR	8158036	AssignmentExpression	"samples [ 0 ] = SB_DITHERING_NOISE ( sb , q -> noise_idx )"		8157453	0		=			
ANR	8158037	ArrayIndexing	samples [ 0 ]		8157453	0					
ANR	8158038	Identifier	samples		8157453	0					
ANR	8158039	PrimaryExpression	0		8157453	1					
ANR	8158040	CallExpression	"SB_DITHERING_NOISE ( sb , q -> noise_idx )"		8157453	1					
ANR	8158041	Callee	SB_DITHERING_NOISE		8157453	0					
ANR	8158042	Identifier	SB_DITHERING_NOISE		8157453	0					
ANR	8158043	ArgumentList	sb		8157453	1					
ANR	8158044	Argument	sb		8157453	0					
ANR	8158045	Identifier	sb		8157453	0					
ANR	8158046	Argument	q -> noise_idx		8157453	1					
ANR	8158047	PtrMemberAccess	q -> noise_idx		8157453	0					
ANR	8158048	Identifier	q		8157453	0					
ANR	8158049	Identifier	noise_idx		8157453	1					
ANR	8158050	ExpressionStatement	run = 1	165:24:3324:3331	8157453	6	True				
ANR	8158051	AssignmentExpression	run = 1		8157453	0		=			
ANR	8158052	Identifier	run		8157453	0					
ANR	8158053	PrimaryExpression	1		8157453	1					
ANR	8158054	BreakStatement	break ;	167:24:3358:3363	8157453	7	True				
ANR	8158055	Label	case 16 :	171:20:3388:3395	8157453	8	True				
ANR	8158056	IfStatement	"if ( BITS_LEFT ( length , gb ) >= 10 )"		8157453	9					
ANR	8158057	Condition	"BITS_LEFT ( length , gb ) >= 10"	173:28:3426:3451	8157453	0	True				
ANR	8158058	RelationalExpression	"BITS_LEFT ( length , gb ) >= 10"		8157453	0		>=			
ANR	8158059	CallExpression	"BITS_LEFT ( length , gb )"		8157453	0					
ANR	8158060	Callee	BITS_LEFT		8157453	0					
ANR	8158061	Identifier	BITS_LEFT		8157453	0					
ANR	8158062	ArgumentList	length		8157453	1					
ANR	8158063	Argument	length		8157453	0					
ANR	8158064	Identifier	length		8157453	0					
ANR	8158065	Argument	gb		8157453	1					
ANR	8158066	Identifier	gb		8157453	0					
ANR	8158067	PrimaryExpression	10		8157453	1					
ANR	8158068	CompoundStatement		171:56:3342:3342	8157453	1					
ANR	8158069	IfStatement	if ( zero_encoding )		8157453	0					
ANR	8158070	Condition	zero_encoding	175:32:3489:3501	8157453	0	True				
ANR	8158071	Identifier	zero_encoding		8157453	0					
ANR	8158072	CompoundStatement		173:47:3392:3392	8157453	1					
ANR	8158073	ForStatement	for ( k = 0 ; k < 5 ; k ++ )		8157453	0					
ANR	8158074	ForInit	k = 0 ;	177:37:3544:3549	8157453	0	True				
ANR	8158075	AssignmentExpression	k = 0		8157453	0		=			
ANR	8158076	Identifier	k		8157453	0					
ANR	8158077	PrimaryExpression	0		8157453	1					
ANR	8158078	Condition	k < 5	177:44:3551:3555	8157453	1	True				
ANR	8158079	RelationalExpression	k < 5		8157453	0		<			
ANR	8158080	Identifier	k		8157453	0					
ANR	8158081	PrimaryExpression	5		8157453	1					
ANR	8158082	PostIncDecOperationExpression	k ++	177:51:3558:3560	8157453	2	True				
ANR	8158083	Identifier	k		8157453	0					
ANR	8158084	IncDec	++		8157453	1					
ANR	8158085	CompoundStatement		175:56:3451:3451	8157453	3					
ANR	8158086	IfStatement	if ( ( j + k ) >= 128 )		8157453	0					
ANR	8158087	Condition	( j + k ) >= 128	179:40:3606:3619	8157453	0	True				
ANR	8158088	RelationalExpression	( j + k ) >= 128		8157453	0		>=			
ANR	8158089	AdditiveExpression	j + k		8157453	0		+			
ANR	8158090	Identifier	j		8157453	0					
ANR	8158091	Identifier	k		8157453	1					
ANR	8158092	PrimaryExpression	128		8157453	1					
ANR	8158093	BreakStatement	break ;	181:40:3663:3668	8157453	1	True				
ANR	8158094	ExpressionStatement	samples [ k ] = ( get_bits1 ( gb ) == 0 ) ? 0 : dequant_1bit [ joined_stereo ] [ 2 * get_bits1 ( gb ) ]	183:36:3707:3793	8157453	1	True				
ANR	8158095	AssignmentExpression	samples [ k ] = ( get_bits1 ( gb ) == 0 ) ? 0 : dequant_1bit [ joined_stereo ] [ 2 * get_bits1 ( gb ) ]		8157453	0		=			
ANR	8158096	ArrayIndexing	samples [ k ]		8157453	0					
ANR	8158097	Identifier	samples		8157453	0					
ANR	8158098	Identifier	k		8157453	1					
ANR	8158099	ConditionalExpression	( get_bits1 ( gb ) == 0 ) ? 0 : dequant_1bit [ joined_stereo ] [ 2 * get_bits1 ( gb ) ]		8157453	1					
ANR	8158100	Condition	get_bits1 ( gb ) == 0		8157453	0					
ANR	8158101	EqualityExpression	get_bits1 ( gb ) == 0		8157453	0		==			
ANR	8158102	CallExpression	get_bits1 ( gb )		8157453	0					
ANR	8158103	Callee	get_bits1		8157453	0					
ANR	8158104	Identifier	get_bits1		8157453	0					
ANR	8158105	ArgumentList	gb		8157453	1					
ANR	8158106	Argument	gb		8157453	0					
ANR	8158107	Identifier	gb		8157453	0					
ANR	8158108	PrimaryExpression	0		8157453	1					
ANR	8158109	PrimaryExpression	0		8157453	1					
ANR	8158110	ArrayIndexing	dequant_1bit [ joined_stereo ] [ 2 * get_bits1 ( gb ) ]		8157453	2					
ANR	8158111	ArrayIndexing	dequant_1bit [ joined_stereo ]		8157453	0					
ANR	8158112	Identifier	dequant_1bit		8157453	0					
ANR	8158113	Identifier	joined_stereo		8157453	1					
ANR	8158114	MultiplicativeExpression	2 * get_bits1 ( gb )		8157453	1		*			
ANR	8158115	PrimaryExpression	2		8157453	0					
ANR	8158116	CallExpression	get_bits1 ( gb )		8157453	1					
ANR	8158117	Callee	get_bits1		8157453	0					
ANR	8158118	Identifier	get_bits1		8157453	0					
ANR	8158119	ArgumentList	gb		8157453	1					
ANR	8158120	Argument	gb		8157453	0					
ANR	8158121	Identifier	gb		8157453	0					
ANR	8158122	ElseStatement	else		8157453	0					
ANR	8158123	CompoundStatement		185:35:3754:3754	8157453	0					
ANR	8158124	ExpressionStatement	"n = get_bits ( gb , 8 )"	189:32:3901:3921	8157453	0	True				
ANR	8158125	AssignmentExpression	"n = get_bits ( gb , 8 )"		8157453	0		=			
ANR	8158126	Identifier	n		8157453	0					
ANR	8158127	CallExpression	"get_bits ( gb , 8 )"		8157453	1					
ANR	8158128	Callee	get_bits		8157453	0					
ANR	8158129	Identifier	get_bits		8157453	0					
ANR	8158130	ArgumentList	gb		8157453	1					
ANR	8158131	Argument	gb		8157453	0					
ANR	8158132	Identifier	gb		8157453	0					
ANR	8158133	Argument	8		8157453	1					
ANR	8158134	PrimaryExpression	8		8157453	0					
ANR	8158135	ForStatement	for ( k = 0 ; k < 5 ; k ++ )		8157453	1					
ANR	8158136	ForInit	k = 0 ;	191:37:3961:3966	8157453	0	True				
ANR	8158137	AssignmentExpression	k = 0		8157453	0		=			
ANR	8158138	Identifier	k		8157453	0					
ANR	8158139	PrimaryExpression	0		8157453	1					
ANR	8158140	Condition	k < 5	191:44:3968:3972	8157453	1	True				
ANR	8158141	RelationalExpression	k < 5		8157453	0		<			
ANR	8158142	Identifier	k		8157453	0					
ANR	8158143	PrimaryExpression	5		8157453	1					
ANR	8158144	PostIncDecOperationExpression	k ++	191:51:3975:3977	8157453	2	True				
ANR	8158145	Identifier	k		8157453	0					
ANR	8158146	IncDec	++		8157453	1					
ANR	8158147	ExpressionStatement	samples [ k ] = dequant_1bit [ joined_stereo ] [ random_dequant_index [ n ] [ k ] ]	193:36:4017:4085	8157453	3	True				
ANR	8158148	AssignmentExpression	samples [ k ] = dequant_1bit [ joined_stereo ] [ random_dequant_index [ n ] [ k ] ]		8157453	0		=			
ANR	8158149	ArrayIndexing	samples [ k ]		8157453	0					
ANR	8158150	Identifier	samples		8157453	0					
ANR	8158151	Identifier	k		8157453	1					
ANR	8158152	ArrayIndexing	dequant_1bit [ joined_stereo ] [ random_dequant_index [ n ] [ k ] ]		8157453	1					
ANR	8158153	ArrayIndexing	dequant_1bit [ joined_stereo ]		8157453	0					
ANR	8158154	Identifier	dequant_1bit		8157453	0					
ANR	8158155	Identifier	joined_stereo		8157453	1					
ANR	8158156	ArrayIndexing	random_dequant_index [ n ] [ k ]		8157453	1					
ANR	8158157	ArrayIndexing	random_dequant_index [ n ]		8157453	0					
ANR	8158158	Identifier	random_dequant_index		8157453	0					
ANR	8158159	Identifier	n		8157453	1					
ANR	8158160	Identifier	k		8157453	1					
ANR	8158161	ElseStatement	else		8157453	0					
ANR	8158162	CompoundStatement		195:31:4038:4038	8157453	0					
ANR	8158163	ForStatement	for ( k = 0 ; k < 5 ; k ++ )		8157453	0					
ANR	8158164	ForInit	k = 0 ;	199:33:4186:4191	8157453	0	True				
ANR	8158165	AssignmentExpression	k = 0		8157453	0		=			
ANR	8158166	Identifier	k		8157453	0					
ANR	8158167	PrimaryExpression	0		8157453	1					
ANR	8158168	Condition	k < 5	199:40:4193:4197	8157453	1	True				
ANR	8158169	RelationalExpression	k < 5		8157453	0		<			
ANR	8158170	Identifier	k		8157453	0					
ANR	8158171	PrimaryExpression	5		8157453	1					
ANR	8158172	PostIncDecOperationExpression	k ++	199:47:4200:4202	8157453	2	True				
ANR	8158173	Identifier	k		8157453	0					
ANR	8158174	IncDec	++		8157453	1					
ANR	8158175	ExpressionStatement	"samples [ k ] = SB_DITHERING_NOISE ( sb , q -> noise_idx )"	201:32:4238:4286	8157453	3	True				
ANR	8158176	AssignmentExpression	"samples [ k ] = SB_DITHERING_NOISE ( sb , q -> noise_idx )"		8157453	0		=			
ANR	8158177	ArrayIndexing	samples [ k ]		8157453	0					
ANR	8158178	Identifier	samples		8157453	0					
ANR	8158179	Identifier	k		8157453	1					
ANR	8158180	CallExpression	"SB_DITHERING_NOISE ( sb , q -> noise_idx )"		8157453	1					
ANR	8158181	Callee	SB_DITHERING_NOISE		8157453	0					
ANR	8158182	Identifier	SB_DITHERING_NOISE		8157453	0					
ANR	8158183	ArgumentList	sb		8157453	1					
ANR	8158184	Argument	sb		8157453	0					
ANR	8158185	Identifier	sb		8157453	0					
ANR	8158186	Argument	q -> noise_idx		8157453	1					
ANR	8158187	PtrMemberAccess	q -> noise_idx		8157453	0					
ANR	8158188	Identifier	q		8157453	0					
ANR	8158189	Identifier	noise_idx		8157453	1					
ANR	8158190	ExpressionStatement	run = 5	205:24:4340:4347	8157453	10	True				
ANR	8158191	AssignmentExpression	run = 5		8157453	0		=			
ANR	8158192	Identifier	run		8157453	0					
ANR	8158193	PrimaryExpression	5		8157453	1					
ANR	8158194	BreakStatement	break ;	207:24:4374:4379	8157453	11	True				
ANR	8158195	Label	case 24 :	211:20:4404:4411	8157453	12	True				
ANR	8158196	IfStatement	"if ( BITS_LEFT ( length , gb ) >= 7 )"		8157453	13					
ANR	8158197	Condition	"BITS_LEFT ( length , gb ) >= 7"	213:28:4442:4466	8157453	0	True				
ANR	8158198	RelationalExpression	"BITS_LEFT ( length , gb ) >= 7"		8157453	0		>=			
ANR	8158199	CallExpression	"BITS_LEFT ( length , gb )"		8157453	0					
ANR	8158200	Callee	BITS_LEFT		8157453	0					
ANR	8158201	Identifier	BITS_LEFT		8157453	0					
ANR	8158202	ArgumentList	length		8157453	1					
ANR	8158203	Argument	length		8157453	0					
ANR	8158204	Identifier	length		8157453	0					
ANR	8158205	Argument	gb		8157453	1					
ANR	8158206	Identifier	gb		8157453	0					
ANR	8158207	PrimaryExpression	7		8157453	1					
ANR	8158208	CompoundStatement		211:55:4357:4357	8157453	1					
ANR	8158209	ExpressionStatement	"n = get_bits ( gb , 7 )"	215:28:4500:4519	8157453	0	True				
ANR	8158210	AssignmentExpression	"n = get_bits ( gb , 7 )"		8157453	0		=			
ANR	8158211	Identifier	n		8157453	0					
ANR	8158212	CallExpression	"get_bits ( gb , 7 )"		8157453	1					
ANR	8158213	Callee	get_bits		8157453	0					
ANR	8158214	Identifier	get_bits		8157453	0					
ANR	8158215	ArgumentList	gb		8157453	1					
ANR	8158216	Argument	gb		8157453	0					
ANR	8158217	Identifier	gb		8157453	0					
ANR	8158218	Argument	7		8157453	1					
ANR	8158219	PrimaryExpression	7		8157453	0					
ANR	8158220	ForStatement	for ( k = 0 ; k < 3 ; k ++ )		8157453	1					
ANR	8158221	ForInit	k = 0 ;	217:33:4555:4560	8157453	0	True				
ANR	8158222	AssignmentExpression	k = 0		8157453	0		=			
ANR	8158223	Identifier	k		8157453	0					
ANR	8158224	PrimaryExpression	0		8157453	1					
ANR	8158225	Condition	k < 3	217:40:4562:4566	8157453	1	True				
ANR	8158226	RelationalExpression	k < 3		8157453	0		<			
ANR	8158227	Identifier	k		8157453	0					
ANR	8158228	PrimaryExpression	3		8157453	1					
ANR	8158229	PostIncDecOperationExpression	k ++	217:47:4569:4571	8157453	2	True				
ANR	8158230	Identifier	k		8157453	0					
ANR	8158231	IncDec	++		8157453	1					
ANR	8158232	ExpressionStatement	samples [ k ] = ( random_dequant_type24 [ n ] [ k ] - 2.0 ) * 0.5	219:32:4607:4661	8157453	3	True				
ANR	8158233	AssignmentExpression	samples [ k ] = ( random_dequant_type24 [ n ] [ k ] - 2.0 ) * 0.5		8157453	0		=			
ANR	8158234	ArrayIndexing	samples [ k ]		8157453	0					
ANR	8158235	Identifier	samples		8157453	0					
ANR	8158236	Identifier	k		8157453	1					
ANR	8158237	MultiplicativeExpression	( random_dequant_type24 [ n ] [ k ] - 2.0 ) * 0.5		8157453	1		*			
ANR	8158238	AdditiveExpression	random_dequant_type24 [ n ] [ k ] - 2.0		8157453	0		-			
ANR	8158239	ArrayIndexing	random_dequant_type24 [ n ] [ k ]		8157453	0					
ANR	8158240	ArrayIndexing	random_dequant_type24 [ n ]		8157453	0					
ANR	8158241	Identifier	random_dequant_type24		8157453	0					
ANR	8158242	Identifier	n		8157453	1					
ANR	8158243	Identifier	k		8157453	1					
ANR	8158244	PrimaryExpression	2.0		8157453	1					
ANR	8158245	PrimaryExpression	0.5		8157453	1					
ANR	8158246	ElseStatement	else		8157453	0					
ANR	8158247	CompoundStatement		219:31:4583:4583	8157453	0					
ANR	8158248	ForStatement	for ( k = 0 ; k < 3 ; k ++ )		8157453	0					
ANR	8158249	ForInit	k = 0 ;	223:33:4731:4736	8157453	0	True				
ANR	8158250	AssignmentExpression	k = 0		8157453	0		=			
ANR	8158251	Identifier	k		8157453	0					
ANR	8158252	PrimaryExpression	0		8157453	1					
ANR	8158253	Condition	k < 3	223:40:4738:4742	8157453	1	True				
ANR	8158254	RelationalExpression	k < 3		8157453	0		<			
ANR	8158255	Identifier	k		8157453	0					
ANR	8158256	PrimaryExpression	3		8157453	1					
ANR	8158257	PostIncDecOperationExpression	k ++	223:47:4745:4747	8157453	2	True				
ANR	8158258	Identifier	k		8157453	0					
ANR	8158259	IncDec	++		8157453	1					
ANR	8158260	ExpressionStatement	"samples [ k ] = SB_DITHERING_NOISE ( sb , q -> noise_idx )"	225:32:4783:4831	8157453	3	True				
ANR	8158261	AssignmentExpression	"samples [ k ] = SB_DITHERING_NOISE ( sb , q -> noise_idx )"		8157453	0		=			
ANR	8158262	ArrayIndexing	samples [ k ]		8157453	0					
ANR	8158263	Identifier	samples		8157453	0					
ANR	8158264	Identifier	k		8157453	1					
ANR	8158265	CallExpression	"SB_DITHERING_NOISE ( sb , q -> noise_idx )"		8157453	1					
ANR	8158266	Callee	SB_DITHERING_NOISE		8157453	0					
ANR	8158267	Identifier	SB_DITHERING_NOISE		8157453	0					
ANR	8158268	ArgumentList	sb		8157453	1					
ANR	8158269	Argument	sb		8157453	0					
ANR	8158270	Identifier	sb		8157453	0					
ANR	8158271	Argument	q -> noise_idx		8157453	1					
ANR	8158272	PtrMemberAccess	q -> noise_idx		8157453	0					
ANR	8158273	Identifier	q		8157453	0					
ANR	8158274	Identifier	noise_idx		8157453	1					
ANR	8158275	ExpressionStatement	run = 3	229:24:4885:4892	8157453	14	True				
ANR	8158276	AssignmentExpression	run = 3		8157453	0		=			
ANR	8158277	Identifier	run		8157453	0					
ANR	8158278	PrimaryExpression	3		8157453	1					
ANR	8158279	BreakStatement	break ;	231:24:4919:4924	8157453	15	True				
ANR	8158280	Label	case 30 :	235:20:4949:4956	8157453	16	True				
ANR	8158281	IfStatement	"if ( BITS_LEFT ( length , gb ) >= 4 )"		8157453	17					
ANR	8158282	Condition	"BITS_LEFT ( length , gb ) >= 4"	237:28:4987:5011	8157453	0	True				
ANR	8158283	RelationalExpression	"BITS_LEFT ( length , gb ) >= 4"		8157453	0		>=			
ANR	8158284	CallExpression	"BITS_LEFT ( length , gb )"		8157453	0					
ANR	8158285	Callee	BITS_LEFT		8157453	0					
ANR	8158286	Identifier	BITS_LEFT		8157453	0					
ANR	8158287	ArgumentList	length		8157453	1					
ANR	8158288	Argument	length		8157453	0					
ANR	8158289	Identifier	length		8157453	0					
ANR	8158290	Argument	gb		8157453	1					
ANR	8158291	Identifier	gb		8157453	0					
ANR	8158292	PrimaryExpression	4		8157453	1					
ANR	8158293	ExpressionStatement	"samples [ 0 ] = type30_dequant [ qdm2_get_vlc ( gb , & vlc_tab_type30 , 0 , 1 ) ]"	239:28:5043:5111	8157453	1	True				
ANR	8158294	AssignmentExpression	"samples [ 0 ] = type30_dequant [ qdm2_get_vlc ( gb , & vlc_tab_type30 , 0 , 1 ) ]"		8157453	0		=			
ANR	8158295	ArrayIndexing	samples [ 0 ]		8157453	0					
ANR	8158296	Identifier	samples		8157453	0					
ANR	8158297	PrimaryExpression	0		8157453	1					
ANR	8158298	ArrayIndexing	"type30_dequant [ qdm2_get_vlc ( gb , & vlc_tab_type30 , 0 , 1 ) ]"		8157453	1					
ANR	8158299	Identifier	type30_dequant		8157453	0					
ANR	8158300	CallExpression	"qdm2_get_vlc ( gb , & vlc_tab_type30 , 0 , 1 )"		8157453	1					
ANR	8158301	Callee	qdm2_get_vlc		8157453	0					
ANR	8158302	Identifier	qdm2_get_vlc		8157453	0					
ANR	8158303	ArgumentList	gb		8157453	1					
ANR	8158304	Argument	gb		8157453	0					
ANR	8158305	Identifier	gb		8157453	0					
ANR	8158306	Argument	& vlc_tab_type30		8157453	1					
ANR	8158307	UnaryOperationExpression	& vlc_tab_type30		8157453	0					
ANR	8158308	UnaryOperator	&		8157453	0					
ANR	8158309	Identifier	vlc_tab_type30		8157453	1					
ANR	8158310	Argument	0		8157453	2					
ANR	8158311	PrimaryExpression	0		8157453	0					
ANR	8158312	Argument	1		8157453	3					
ANR	8158313	PrimaryExpression	1		8157453	0					
ANR	8158314	ElseStatement	else		8157453	0					
ANR	8158315	ExpressionStatement	"samples [ 0 ] = SB_DITHERING_NOISE ( sb , q -> noise_idx )"	243:28:5172:5220	8157453	0	True				
ANR	8158316	AssignmentExpression	"samples [ 0 ] = SB_DITHERING_NOISE ( sb , q -> noise_idx )"		8157453	0		=			
ANR	8158317	ArrayIndexing	samples [ 0 ]		8157453	0					
ANR	8158318	Identifier	samples		8157453	0					
ANR	8158319	PrimaryExpression	0		8157453	1					
ANR	8158320	CallExpression	"SB_DITHERING_NOISE ( sb , q -> noise_idx )"		8157453	1					
ANR	8158321	Callee	SB_DITHERING_NOISE		8157453	0					
ANR	8158322	Identifier	SB_DITHERING_NOISE		8157453	0					
ANR	8158323	ArgumentList	sb		8157453	1					
ANR	8158324	Argument	sb		8157453	0					
ANR	8158325	Identifier	sb		8157453	0					
ANR	8158326	Argument	q -> noise_idx		8157453	1					
ANR	8158327	PtrMemberAccess	q -> noise_idx		8157453	0					
ANR	8158328	Identifier	q		8157453	0					
ANR	8158329	Identifier	noise_idx		8157453	1					
ANR	8158330	ExpressionStatement	run = 1	247:24:5249:5256	8157453	18	True				
ANR	8158331	AssignmentExpression	run = 1		8157453	0		=			
ANR	8158332	Identifier	run		8157453	0					
ANR	8158333	PrimaryExpression	1		8157453	1					
ANR	8158334	BreakStatement	break ;	249:24:5283:5288	8157453	19	True				
ANR	8158335	Label	case 34 :	253:20:5313:5320	8157453	20	True				
ANR	8158336	IfStatement	"if ( BITS_LEFT ( length , gb ) >= 7 )"		8157453	21					
ANR	8158337	Condition	"BITS_LEFT ( length , gb ) >= 7"	255:28:5351:5375	8157453	0	True				
ANR	8158338	RelationalExpression	"BITS_LEFT ( length , gb ) >= 7"		8157453	0		>=			
ANR	8158339	CallExpression	"BITS_LEFT ( length , gb )"		8157453	0					
ANR	8158340	Callee	BITS_LEFT		8157453	0					
ANR	8158341	Identifier	BITS_LEFT		8157453	0					
ANR	8158342	ArgumentList	length		8157453	1					
ANR	8158343	Argument	length		8157453	0					
ANR	8158344	Identifier	length		8157453	0					
ANR	8158345	Argument	gb		8157453	1					
ANR	8158346	Identifier	gb		8157453	0					
ANR	8158347	PrimaryExpression	7		8157453	1					
ANR	8158348	CompoundStatement		253:55:5266:5266	8157453	1					
ANR	8158349	IfStatement	if ( type34_first )		8157453	0					
ANR	8158350	Condition	type34_first	257:32:5413:5424	8157453	0	True				
ANR	8158351	Identifier	type34_first		8157453	0					
ANR	8158352	CompoundStatement		255:46:5315:5315	8157453	1					
ANR	8158353	ExpressionStatement	"type34_div = ( float ) ( 1 << get_bits ( gb , 2 ) )"	259:32:5462:5504	8157453	0	True				
ANR	8158354	AssignmentExpression	"type34_div = ( float ) ( 1 << get_bits ( gb , 2 ) )"		8157453	0		=			
ANR	8158355	Identifier	type34_div		8157453	0					
ANR	8158356	CastExpression	"( float ) ( 1 << get_bits ( gb , 2 ) )"		8157453	1					
ANR	8158357	CastTarget	float		8157453	0					
ANR	8158358	ShiftExpression	"1 << get_bits ( gb , 2 )"		8157453	1		<<			
ANR	8158359	PrimaryExpression	1		8157453	0					
ANR	8158360	CallExpression	"get_bits ( gb , 2 )"		8157453	1					
ANR	8158361	Callee	get_bits		8157453	0					
ANR	8158362	Identifier	get_bits		8157453	0					
ANR	8158363	ArgumentList	gb		8157453	1					
ANR	8158364	Argument	gb		8157453	0					
ANR	8158365	Identifier	gb		8157453	0					
ANR	8158366	Argument	2		8157453	1					
ANR	8158367	PrimaryExpression	2		8157453	0					
ANR	8158368	ExpressionStatement	"samples [ 0 ] = ( ( float ) get_bits ( gb , 5 ) - 16.0 ) / 15.0"	261:32:5539:5590	8157453	1	True				
ANR	8158369	AssignmentExpression	"samples [ 0 ] = ( ( float ) get_bits ( gb , 5 ) - 16.0 ) / 15.0"		8157453	0		=			
ANR	8158370	ArrayIndexing	samples [ 0 ]		8157453	0					
ANR	8158371	Identifier	samples		8157453	0					
ANR	8158372	PrimaryExpression	0		8157453	1					
ANR	8158373	MultiplicativeExpression	"( ( float ) get_bits ( gb , 5 ) - 16.0 ) / 15.0"		8157453	1		/			
ANR	8158374	AdditiveExpression	"( float ) get_bits ( gb , 5 ) - 16.0"		8157453	0		-			
ANR	8158375	CastExpression	"( float ) get_bits ( gb , 5 )"		8157453	0					
ANR	8158376	CastTarget	float		8157453	0					
ANR	8158377	CallExpression	"get_bits ( gb , 5 )"		8157453	1					
ANR	8158378	Callee	get_bits		8157453	0					
ANR	8158379	Identifier	get_bits		8157453	0					
ANR	8158380	ArgumentList	gb		8157453	1					
ANR	8158381	Argument	gb		8157453	0					
ANR	8158382	Identifier	gb		8157453	0					
ANR	8158383	Argument	5		8157453	1					
ANR	8158384	PrimaryExpression	5		8157453	0					
ANR	8158385	PrimaryExpression	16.0		8157453	1					
ANR	8158386	PrimaryExpression	15.0		8157453	1					
ANR	8158387	ExpressionStatement	type34_predictor = samples [ 0 ]	263:32:5625:5654	8157453	2	True				
ANR	8158388	AssignmentExpression	type34_predictor = samples [ 0 ]		8157453	0		=			
ANR	8158389	Identifier	type34_predictor		8157453	0					
ANR	8158390	ArrayIndexing	samples [ 0 ]		8157453	1					
ANR	8158391	Identifier	samples		8157453	0					
ANR	8158392	PrimaryExpression	0		8157453	1					
ANR	8158393	ExpressionStatement	type34_first = 0	265:32:5689:5705	8157453	3	True				
ANR	8158394	AssignmentExpression	type34_first = 0		8157453	0		=			
ANR	8158395	Identifier	type34_first		8157453	0					
ANR	8158396	PrimaryExpression	0		8157453	1					
ANR	8158397	ElseStatement	else		8157453	0					
ANR	8158398	CompoundStatement		267:32:5666:5718	8157453	0					
ANR	8158399	IdentifierDeclStatement	"unsigned v = qdm2_get_vlc ( gb , & vlc_tab_type34 , 0 , 1 ) ;"	269:32:5778:5830	8157453	0	True				
ANR	8158400	IdentifierDecl	"v = qdm2_get_vlc ( gb , & vlc_tab_type34 , 0 , 1 )"		8157453	0					
ANR	8158401	IdentifierDeclType	unsigned		8157453	0					
ANR	8158402	Identifier	v		8157453	1					
ANR	8158403	AssignmentExpression	"v = qdm2_get_vlc ( gb , & vlc_tab_type34 , 0 , 1 )"		8157453	2		=			
ANR	8158404	Identifier	v		8157453	0					
ANR	8158405	CallExpression	"qdm2_get_vlc ( gb , & vlc_tab_type34 , 0 , 1 )"		8157453	1					
ANR	8158406	Callee	qdm2_get_vlc		8157453	0					
ANR	8158407	Identifier	qdm2_get_vlc		8157453	0					
ANR	8158408	ArgumentList	gb		8157453	1					
ANR	8158409	Argument	gb		8157453	0					
ANR	8158410	Identifier	gb		8157453	0					
ANR	8158411	Argument	& vlc_tab_type34		8157453	1					
ANR	8158412	UnaryOperationExpression	& vlc_tab_type34		8157453	0					
ANR	8158413	UnaryOperator	&		8157453	0					
ANR	8158414	Identifier	vlc_tab_type34		8157453	1					
ANR	8158415	Argument	0		8157453	2					
ANR	8158416	PrimaryExpression	0		8157453	0					
ANR	8158417	Argument	1		8157453	3					
ANR	8158418	PrimaryExpression	1		8157453	0					
ANR	8158419	IfStatement	if ( v >= FF_ARRAY_ELEMS ( type34_delta ) )		8157453	1					
ANR	8158420	Condition	v >= FF_ARRAY_ELEMS ( type34_delta )	271:36:5869:5901	8157453	0	True				
ANR	8158421	RelationalExpression	v >= FF_ARRAY_ELEMS ( type34_delta )		8157453	0		>=			
ANR	8158422	Identifier	v		8157453	0					
ANR	8158423	CallExpression	FF_ARRAY_ELEMS ( type34_delta )		8157453	1					
ANR	8158424	Callee	FF_ARRAY_ELEMS		8157453	0					
ANR	8158425	Identifier	FF_ARRAY_ELEMS		8157453	0					
ANR	8158426	ArgumentList	type34_delta		8157453	1					
ANR	8158427	Argument	type34_delta		8157453	0					
ANR	8158428	Identifier	type34_delta		8157453	0					
ANR	8158429	ReturnStatement	return AVERROR_INVALIDDATA ;	273:36:5941:5967	8157453	1	True				
ANR	8158430	Identifier	AVERROR_INVALIDDATA		8157453	0					
ANR	8158431	ExpressionStatement	samples [ 0 ] = type34_delta [ v ] / type34_div + type34_predictor	275:32:6002:6062	8157453	2	True				
ANR	8158432	AssignmentExpression	samples [ 0 ] = type34_delta [ v ] / type34_div + type34_predictor		8157453	0		=			
ANR	8158433	ArrayIndexing	samples [ 0 ]		8157453	0					
ANR	8158434	Identifier	samples		8157453	0					
ANR	8158435	PrimaryExpression	0		8157453	1					
ANR	8158436	AdditiveExpression	type34_delta [ v ] / type34_div + type34_predictor		8157453	1		+			
ANR	8158437	MultiplicativeExpression	type34_delta [ v ] / type34_div		8157453	0		/			
ANR	8158438	ArrayIndexing	type34_delta [ v ]		8157453	0					
ANR	8158439	Identifier	type34_delta		8157453	0					
ANR	8158440	Identifier	v		8157453	1					
ANR	8158441	Identifier	type34_div		8157453	1					
ANR	8158442	Identifier	type34_predictor		8157453	1					
ANR	8158443	ExpressionStatement	type34_predictor = samples [ 0 ]	277:32:6097:6126	8157453	3	True				
ANR	8158444	AssignmentExpression	type34_predictor = samples [ 0 ]		8157453	0		=			
ANR	8158445	Identifier	type34_predictor		8157453	0					
ANR	8158446	ArrayIndexing	samples [ 0 ]		8157453	1					
ANR	8158447	Identifier	samples		8157453	0					
ANR	8158448	PrimaryExpression	0		8157453	1					
ANR	8158449	ElseStatement	else		8157453	0					
ANR	8158450	CompoundStatement		279:31:6079:6079	8157453	0					
ANR	8158451	ExpressionStatement	"samples [ 0 ] = SB_DITHERING_NOISE ( sb , q -> noise_idx )"	283:28:6222:6270	8157453	0	True				
ANR	8158452	AssignmentExpression	"samples [ 0 ] = SB_DITHERING_NOISE ( sb , q -> noise_idx )"		8157453	0		=			
ANR	8158453	ArrayIndexing	samples [ 0 ]		8157453	0					
ANR	8158454	Identifier	samples		8157453	0					
ANR	8158455	PrimaryExpression	0		8157453	1					
ANR	8158456	CallExpression	"SB_DITHERING_NOISE ( sb , q -> noise_idx )"		8157453	1					
ANR	8158457	Callee	SB_DITHERING_NOISE		8157453	0					
ANR	8158458	Identifier	SB_DITHERING_NOISE		8157453	0					
ANR	8158459	ArgumentList	sb		8157453	1					
ANR	8158460	Argument	sb		8157453	0					
ANR	8158461	Identifier	sb		8157453	0					
ANR	8158462	Argument	q -> noise_idx		8157453	1					
ANR	8158463	PtrMemberAccess	q -> noise_idx		8157453	0					
ANR	8158464	Identifier	q		8157453	0					
ANR	8158465	Identifier	noise_idx		8157453	1					
ANR	8158466	ExpressionStatement	run = 1	287:24:6324:6331	8157453	22	True				
ANR	8158467	AssignmentExpression	run = 1		8157453	0		=			
ANR	8158468	Identifier	run		8157453	0					
ANR	8158469	PrimaryExpression	1		8157453	1					
ANR	8158470	BreakStatement	break ;	289:24:6358:6363	8157453	23	True				
ANR	8158471	Label	default :	293:20:6388:6395	8157453	24	True				
ANR	8158472	Identifier	default		8157453	0					
ANR	8158473	ExpressionStatement	"samples [ 0 ] = SB_DITHERING_NOISE ( sb , q -> noise_idx )"	295:24:6422:6470	8157453	25	True				
ANR	8158474	AssignmentExpression	"samples [ 0 ] = SB_DITHERING_NOISE ( sb , q -> noise_idx )"		8157453	0		=			
ANR	8158475	ArrayIndexing	samples [ 0 ]		8157453	0					
ANR	8158476	Identifier	samples		8157453	0					
ANR	8158477	PrimaryExpression	0		8157453	1					
ANR	8158478	CallExpression	"SB_DITHERING_NOISE ( sb , q -> noise_idx )"		8157453	1					
ANR	8158479	Callee	SB_DITHERING_NOISE		8157453	0					
ANR	8158480	Identifier	SB_DITHERING_NOISE		8157453	0					
ANR	8158481	ArgumentList	sb		8157453	1					
ANR	8158482	Argument	sb		8157453	0					
ANR	8158483	Identifier	sb		8157453	0					
ANR	8158484	Argument	q -> noise_idx		8157453	1					
ANR	8158485	PtrMemberAccess	q -> noise_idx		8157453	0					
ANR	8158486	Identifier	q		8157453	0					
ANR	8158487	Identifier	noise_idx		8157453	1					
ANR	8158488	ExpressionStatement	run = 1	297:24:6497:6504	8157453	26	True				
ANR	8158489	AssignmentExpression	run = 1		8157453	0		=			
ANR	8158490	Identifier	run		8157453	0					
ANR	8158491	PrimaryExpression	1		8157453	1					
ANR	8158492	BreakStatement	break ;	299:24:6531:6536	8157453	27	True				
ANR	8158493	IfStatement	if ( joined_stereo )		8157453	1					
ANR	8158494	Condition	joined_stereo	305:20:6580:6592	8157453	0	True				
ANR	8158495	Identifier	joined_stereo		8157453	0					
ANR	8158496	CompoundStatement		303:35:6483:6483	8157453	1					
ANR	8158497	Statement	float	307:20:6618:6622	8157453	0	True				
ANR	8158498	ExpressionStatement	tmp [ 10 ] [ MPA_MAX_CHANNELS ]	307:26:6624:6649	8157453	1	True				
ANR	8158499	ArrayIndexing	tmp [ 10 ] [ MPA_MAX_CHANNELS ]		8157453	0					
ANR	8158500	ArrayIndexing	tmp [ 10 ]		8157453	0					
ANR	8158501	Identifier	tmp		8157453	0					
ANR	8158502	PrimaryExpression	10		8157453	1					
ANR	8158503	Identifier	MPA_MAX_CHANNELS		8157453	1					
ANR	8158504	ForStatement	for ( k = 0 ; k < run ; k ++ )		8157453	2					
ANR	8158505	ForInit	k = 0 ;	311:25:6679:6684	8157453	0	True				
ANR	8158506	AssignmentExpression	k = 0		8157453	0		=			
ANR	8158507	Identifier	k		8157453	0					
ANR	8158508	PrimaryExpression	0		8157453	1					
ANR	8158509	Condition	k < run	311:32:6686:6692	8157453	1	True				
ANR	8158510	RelationalExpression	k < run		8157453	0		<			
ANR	8158511	Identifier	k		8157453	0					
ANR	8158512	Identifier	run		8157453	1					
ANR	8158513	PostIncDecOperationExpression	k ++	311:41:6695:6697	8157453	2	True				
ANR	8158514	Identifier	k		8157453	0					
ANR	8158515	IncDec	++		8157453	1					
ANR	8158516	CompoundStatement		309:46:6588:6588	8157453	3					
ANR	8158517	ExpressionStatement	tmp [ k ] [ 0 ] = samples [ k ]	313:24:6727:6749	8157453	0	True				
ANR	8158518	AssignmentExpression	tmp [ k ] [ 0 ] = samples [ k ]		8157453	0		=			
ANR	8158519	ArrayIndexing	tmp [ k ] [ 0 ]		8157453	0					
ANR	8158520	ArrayIndexing	tmp [ k ]		8157453	0					
ANR	8158521	Identifier	tmp		8157453	0					
ANR	8158522	Identifier	k		8157453	1					
ANR	8158523	PrimaryExpression	0		8157453	1					
ANR	8158524	ArrayIndexing	samples [ k ]		8157453	1					
ANR	8158525	Identifier	samples		8157453	0					
ANR	8158526	Identifier	k		8157453	1					
ANR	8158527	ExpressionStatement	tmp [ k ] [ 1 ] = ( sign_bits [ ( j + k ) / 8 ] ) ? - samples [ k ] : samples [ k ]	315:24:6776:6839	8157453	1	True				
ANR	8158528	AssignmentExpression	tmp [ k ] [ 1 ] = ( sign_bits [ ( j + k ) / 8 ] ) ? - samples [ k ] : samples [ k ]		8157453	0		=			
ANR	8158529	ArrayIndexing	tmp [ k ] [ 1 ]		8157453	0					
ANR	8158530	ArrayIndexing	tmp [ k ]		8157453	0					
ANR	8158531	Identifier	tmp		8157453	0					
ANR	8158532	Identifier	k		8157453	1					
ANR	8158533	PrimaryExpression	1		8157453	1					
ANR	8158534	ConditionalExpression	( sign_bits [ ( j + k ) / 8 ] ) ? - samples [ k ] : samples [ k ]		8157453	1					
ANR	8158535	Condition	sign_bits [ ( j + k ) / 8 ]		8157453	0					
ANR	8158536	ArrayIndexing	sign_bits [ ( j + k ) / 8 ]		8157453	0					
ANR	8158537	Identifier	sign_bits		8157453	0					
ANR	8158538	MultiplicativeExpression	( j + k ) / 8		8157453	1		/			
ANR	8158539	AdditiveExpression	j + k		8157453	0		+			
ANR	8158540	Identifier	j		8157453	0					
ANR	8158541	Identifier	k		8157453	1					
ANR	8158542	PrimaryExpression	8		8157453	1					
ANR	8158543	UnaryOperationExpression	- samples [ k ]		8157453	1					
ANR	8158544	UnaryOperator	-		8157453	0					
ANR	8158545	ArrayIndexing	samples [ k ]		8157453	1					
ANR	8158546	Identifier	samples		8157453	0					
ANR	8158547	Identifier	k		8157453	1					
ANR	8158548	ArrayIndexing	samples [ k ]		8157453	2					
ANR	8158549	Identifier	samples		8157453	0					
ANR	8158550	Identifier	k		8157453	1					
ANR	8158551	ForStatement	for ( chs = 0 ; chs < q -> nb_channels ; chs ++ )		8157453	3					
ANR	8158552	ForInit	chs = 0 ;	319:25:6890:6897	8157453	0	True				
ANR	8158553	AssignmentExpression	chs = 0		8157453	0		=			
ANR	8158554	Identifier	chs		8157453	0					
ANR	8158555	PrimaryExpression	0		8157453	1					
ANR	8158556	Condition	chs < q -> nb_channels	319:34:6899:6918	8157453	1	True				
ANR	8158557	RelationalExpression	chs < q -> nb_channels		8157453	0		<			
ANR	8158558	Identifier	chs		8157453	0					
ANR	8158559	PtrMemberAccess	q -> nb_channels		8157453	1					
ANR	8158560	Identifier	q		8157453	0					
ANR	8158561	Identifier	nb_channels		8157453	1					
ANR	8158562	PostIncDecOperationExpression	chs ++	319:56:6921:6925	8157453	2	True				
ANR	8158563	Identifier	chs		8157453	0					
ANR	8158564	IncDec	++		8157453	1					
ANR	8158565	ForStatement	for ( k = 0 ; k < run ; k ++ )		8157453	3					
ANR	8158566	ForInit	k = 0 ;	321:29:6958:6963	8157453	0	True				
ANR	8158567	AssignmentExpression	k = 0		8157453	0		=			
ANR	8158568	Identifier	k		8157453	0					
ANR	8158569	PrimaryExpression	0		8157453	1					
ANR	8158570	Condition	k < run	321:36:6965:6971	8157453	1	True				
ANR	8158571	RelationalExpression	k < run		8157453	0		<			
ANR	8158572	Identifier	k		8157453	0					
ANR	8158573	Identifier	run		8157453	1					
ANR	8158574	PostIncDecOperationExpression	k ++	321:45:6974:6976	8157453	2	True				
ANR	8158575	Identifier	k		8157453	0					
ANR	8158576	IncDec	++		8157453	1					
ANR	8158577	IfStatement	if ( ( j + k ) < 128 )		8157453	3					
ANR	8158578	Condition	( j + k ) < 128	323:32:7012:7024	8157453	0	True				
ANR	8158579	RelationalExpression	( j + k ) < 128		8157453	0		<			
ANR	8158580	AdditiveExpression	j + k		8157453	0		+			
ANR	8158581	Identifier	j		8157453	0					
ANR	8158582	Identifier	k		8157453	1					
ANR	8158583	PrimaryExpression	128		8157453	1					
ANR	8158584	ExpressionStatement	q -> sb_samples [ chs ] [ j + k ] [ sb ] = q -> tone_level [ chs ] [ sb ] [ ( ( j + k ) / 2 ) ] * tmp [ k ] [ chs ]	325:32:7060:7141	8157453	1	True				
ANR	8158585	AssignmentExpression	q -> sb_samples [ chs ] [ j + k ] [ sb ] = q -> tone_level [ chs ] [ sb ] [ ( ( j + k ) / 2 ) ] * tmp [ k ] [ chs ]		8157453	0		=			
ANR	8158586	ArrayIndexing	q -> sb_samples [ chs ] [ j + k ] [ sb ]		8157453	0					
ANR	8158587	ArrayIndexing	q -> sb_samples [ chs ] [ j + k ]		8157453	0					
ANR	8158588	ArrayIndexing	q -> sb_samples [ chs ]		8157453	0					
ANR	8158589	PtrMemberAccess	q -> sb_samples		8157453	0					
ANR	8158590	Identifier	q		8157453	0					
ANR	8158591	Identifier	sb_samples		8157453	1					
ANR	8158592	Identifier	chs		8157453	1					
ANR	8158593	AdditiveExpression	j + k		8157453	1		+			
ANR	8158594	Identifier	j		8157453	0					
ANR	8158595	Identifier	k		8157453	1					
ANR	8158596	Identifier	sb		8157453	1					
ANR	8158597	MultiplicativeExpression	q -> tone_level [ chs ] [ sb ] [ ( ( j + k ) / 2 ) ] * tmp [ k ] [ chs ]		8157453	1		*			
ANR	8158598	ArrayIndexing	q -> tone_level [ chs ] [ sb ] [ ( ( j + k ) / 2 ) ]		8157453	0					
ANR	8158599	ArrayIndexing	q -> tone_level [ chs ] [ sb ]		8157453	0					
ANR	8158600	ArrayIndexing	q -> tone_level [ chs ]		8157453	0					
ANR	8158601	PtrMemberAccess	q -> tone_level		8157453	0					
ANR	8158602	Identifier	q		8157453	0					
ANR	8158603	Identifier	tone_level		8157453	1					
ANR	8158604	Identifier	chs		8157453	1					
ANR	8158605	Identifier	sb		8157453	1					
ANR	8158606	MultiplicativeExpression	( j + k ) / 2		8157453	1		/			
ANR	8158607	AdditiveExpression	j + k		8157453	0		+			
ANR	8158608	Identifier	j		8157453	0					
ANR	8158609	Identifier	k		8157453	1					
ANR	8158610	PrimaryExpression	2		8157453	1					
ANR	8158611	ArrayIndexing	tmp [ k ] [ chs ]		8157453	1					
ANR	8158612	ArrayIndexing	tmp [ k ]		8157453	0					
ANR	8158613	Identifier	tmp		8157453	0					
ANR	8158614	Identifier	k		8157453	1					
ANR	8158615	Identifier	chs		8157453	1					
ANR	8158616	ElseStatement	else		8157453	0					
ANR	8158617	CompoundStatement		325:23:7055:7055	8157453	0					
ANR	8158618	ForStatement	for ( k = 0 ; k < run ; k ++ )		8157453	0					
ANR	8158619	ForInit	k = 0 ;	329:25:7195:7200	8157453	0	True				
ANR	8158620	AssignmentExpression	k = 0		8157453	0		=			
ANR	8158621	Identifier	k		8157453	0					
ANR	8158622	PrimaryExpression	0		8157453	1					
ANR	8158623	Condition	k < run	329:32:7202:7208	8157453	1	True				
ANR	8158624	RelationalExpression	k < run		8157453	0		<			
ANR	8158625	Identifier	k		8157453	0					
ANR	8158626	Identifier	run		8157453	1					
ANR	8158627	PostIncDecOperationExpression	k ++	329:41:7211:7213	8157453	2	True				
ANR	8158628	Identifier	k		8157453	0					
ANR	8158629	IncDec	++		8157453	1					
ANR	8158630	IfStatement	if ( ( j + k ) < 128 )		8157453	3					
ANR	8158631	Condition	( j + k ) < 128	331:28:7245:7257	8157453	0	True				
ANR	8158632	RelationalExpression	( j + k ) < 128		8157453	0		<			
ANR	8158633	AdditiveExpression	j + k		8157453	0		+			
ANR	8158634	Identifier	j		8157453	0					
ANR	8158635	Identifier	k		8157453	1					
ANR	8158636	PrimaryExpression	128		8157453	1					
ANR	8158637	ExpressionStatement	q -> sb_samples [ ch ] [ j + k ] [ sb ] = q -> tone_level [ ch ] [ sb ] [ ( j + k ) / 2 ] * samples [ k ]	333:28:7289:7365	8157453	1	True				
ANR	8158638	AssignmentExpression	q -> sb_samples [ ch ] [ j + k ] [ sb ] = q -> tone_level [ ch ] [ sb ] [ ( j + k ) / 2 ] * samples [ k ]		8157453	0		=			
ANR	8158639	ArrayIndexing	q -> sb_samples [ ch ] [ j + k ] [ sb ]		8157453	0					
ANR	8158640	ArrayIndexing	q -> sb_samples [ ch ] [ j + k ]		8157453	0					
ANR	8158641	ArrayIndexing	q -> sb_samples [ ch ]		8157453	0					
ANR	8158642	PtrMemberAccess	q -> sb_samples		8157453	0					
ANR	8158643	Identifier	q		8157453	0					
ANR	8158644	Identifier	sb_samples		8157453	1					
ANR	8158645	Identifier	ch		8157453	1					
ANR	8158646	AdditiveExpression	j + k		8157453	1		+			
ANR	8158647	Identifier	j		8157453	0					
ANR	8158648	Identifier	k		8157453	1					
ANR	8158649	Identifier	sb		8157453	1					
ANR	8158650	MultiplicativeExpression	q -> tone_level [ ch ] [ sb ] [ ( j + k ) / 2 ] * samples [ k ]		8157453	1		*			
ANR	8158651	ArrayIndexing	q -> tone_level [ ch ] [ sb ] [ ( j + k ) / 2 ]		8157453	0					
ANR	8158652	ArrayIndexing	q -> tone_level [ ch ] [ sb ]		8157453	0					
ANR	8158653	ArrayIndexing	q -> tone_level [ ch ]		8157453	0					
ANR	8158654	PtrMemberAccess	q -> tone_level		8157453	0					
ANR	8158655	Identifier	q		8157453	0					
ANR	8158656	Identifier	tone_level		8157453	1					
ANR	8158657	Identifier	ch		8157453	1					
ANR	8158658	Identifier	sb		8157453	1					
ANR	8158659	MultiplicativeExpression	( j + k ) / 2		8157453	1		/			
ANR	8158660	AdditiveExpression	j + k		8157453	0		+			
ANR	8158661	Identifier	j		8157453	0					
ANR	8158662	Identifier	k		8157453	1					
ANR	8158663	PrimaryExpression	2		8157453	1					
ANR	8158664	ArrayIndexing	samples [ k ]		8157453	1					
ANR	8158665	Identifier	samples		8157453	0					
ANR	8158666	Identifier	k		8157453	1					
ANR	8158667	ExpressionStatement	j += run	339:16:7405:7413	8157453	2	True				
ANR	8158668	AssignmentExpression	j += run		8157453	0		+=			
ANR	8158669	Identifier	j		8157453	0					
ANR	8158670	Identifier	run		8157453	1					
ANR	8158671	ReturnStatement	return 0 ;	347:4:7495:7503	8157453	8	True				
ANR	8158672	PrimaryExpression	0		8157453	0					
ANR	8158673	ReturnType	static int		8157453	1					
ANR	8158674	Identifier	synthfilt_build_sb_samples		8157453	2					
ANR	8158675	ParameterList	"QDM2Context * q , GetBitContext * gb , int length , int sb_min , int sb_max"		8157453	3					
ANR	8158676	Parameter	QDM2Context * q	1:39:39:52	8157453	0	True				
ANR	8158677	ParameterType	QDM2Context *		8157453	0					
ANR	8158678	Identifier	q		8157453	1					
ANR	8158679	Parameter	GetBitContext * gb	1:55:55:71	8157453	1	True				
ANR	8158680	ParameterType	GetBitContext *		8157453	0					
ANR	8158681	Identifier	gb		8157453	1					
ANR	8158682	Parameter	int length	1:74:74:83	8157453	2	True				
ANR	8158683	ParameterType	int		8157453	0					
ANR	8158684	Identifier	length		8157453	1					
ANR	8158685	Parameter	int sb_min	1:86:86:95	8157453	3	True				
ANR	8158686	ParameterType	int		8157453	0					
ANR	8158687	Identifier	sb_min		8157453	1					
ANR	8158688	Parameter	int sb_max	1:98:98:107	8157453	4	True				
ANR	8158689	ParameterType	int		8157453	0					
ANR	8158690	Identifier	sb_max		8157453	1					
ANR	8158691	CFGEntryNode	ENTRY		8157453		True				
ANR	8158692	CFGExitNode	EXIT		8157453		True				
ANR	8158693	Symbol	qdm2_get_vlc		8157453						
ANR	8158694	Symbol	* v		8157453						
ANR	8158695	Symbol	& vlc_tab_type30		8157453						
ANR	8158696	Symbol	MPA_MAX_CHANNELS		8157453						
ANR	8158697	Symbol	* * chs		8157453						
ANR	8158698	Symbol	SB_DITHERING_NOISE		8157453						
ANR	8158699	Symbol	* * * * q		8157453						
ANR	8158700	Symbol	get_bits		8157453						
ANR	8158701	Symbol	* ch		8157453						
ANR	8158702	Symbol	q -> coding_method		8157453						
ANR	8158703	Symbol	* type30_dequant		8157453						
ANR	8158704	Symbol	run		8157453						
ANR	8158705	Symbol	* * q -> coding_method		8157453						
ANR	8158706	Symbol	* random_dequant_type24		8157453						
ANR	8158707	Symbol	zero_encoding		8157453						
ANR	8158708	Symbol	sign_bits		8157453						
ANR	8158709	Symbol	* * dequant_1bit		8157453						
ANR	8158710	Symbol	* samples		8157453						
ANR	8158711	Symbol	* sb		8157453						
ANR	8158712	Symbol	tmp		8157453						
ANR	8158713	Symbol	* * random_dequant_type24		8157453						
ANR	8158714	Symbol	& vlc_tab_type34		8157453						
ANR	8158715	Symbol	type34_predictor		8157453						
ANR	8158716	Symbol	* * k		8157453						
ANR	8158717	Symbol	* * q -> tone_level		8157453						
ANR	8158718	Symbol	* * j		8157453						
ANR	8158719	Symbol	* type34_delta		8157453						
ANR	8158720	Symbol	get_bits1		8157453						
ANR	8158721	Symbol	type30_dequant		8157453						
ANR	8158722	Symbol	* joined_stereo		8157453						
ANR	8158723	Symbol	q -> tone_level		8157453						
ANR	8158724	Symbol	* * * q -> sb_samples		8157453						
ANR	8158725	Symbol	* * random_dequant_index		8157453						
ANR	8158726	Symbol	sb_min		8157453						
ANR	8158727	Symbol	dequant_1bit		8157453						
ANR	8158728	Symbol	samples		8157453						
ANR	8158729	Symbol	chs		8157453						
ANR	8158730	Symbol	* * * q		8157453						
ANR	8158731	Symbol	noise_samples		8157453						
ANR	8158732	Symbol	type34_delta		8157453						
ANR	8158733	Symbol	* * * n		8157453						
ANR	8158734	Symbol	channels		8157453						
ANR	8158735	Symbol	FF_ARRAY_ELEMS		8157453						
ANR	8158736	Symbol	* dequant_1bit		8157453						
ANR	8158737	Symbol	* * sb		8157453						
ANR	8158738	Symbol	* q -> sb_samples		8157453						
ANR	8158739	Symbol	sb_max		8157453						
ANR	8158740	Symbol	q -> noise_idx		8157453						
ANR	8158741	Symbol	random_dequant_index		8157453						
ANR	8158742	Symbol	* * * ch		8157453						
ANR	8158743	Symbol	* tmp		8157453						
ANR	8158744	Symbol	* * * q -> coding_method		8157453						
ANR	8158745	Symbol	BITS_LEFT		8157453						
ANR	8158746	Symbol	sb		8157453						
ANR	8158747	Symbol	type34_first		8157453						
ANR	8158748	Symbol	* * ch		8157453						
ANR	8158749	Symbol	* get_bits1		8157453						
ANR	8158750	Symbol	* * q		8157453						
ANR	8158751	Symbol	gb		8157453						
ANR	8158752	Symbol	* * n		8157453						
ANR	8158753	Symbol	* sign_bits		8157453						
ANR	8158754	Symbol	* * * random_dequant_index		8157453						
ANR	8158755	Symbol	* noise_samples		8157453						
ANR	8158756	Symbol	type34_div		8157453						
ANR	8158757	Symbol	* * q -> sb_samples		8157453						
ANR	8158758	Symbol	ch		8157453						
ANR	8158759	Symbol	f		8157453						
ANR	8158760	Symbol	* chs		8157453						
ANR	8158761	Symbol	q -> sb_samples		8157453						
ANR	8158762	Symbol	length		8157453						
ANR	8158763	Symbol	* * * q -> tone_level		8157453						
ANR	8158764	Symbol	* * joined_stereo		8157453						
ANR	8158765	Symbol	j		8157453						
ANR	8158766	Symbol	k		8157453						
ANR	8158767	Symbol	* * tmp		8157453						
ANR	8158768	Symbol	* * * chs		8157453						
ANR	8158769	Symbol	random_dequant_type24		8157453						
ANR	8158770	Symbol	n		8157453						
ANR	8158771	Symbol	q		8157453						
ANR	8158772	Symbol	* qdm2_get_vlc		8157453						
ANR	8158773	Symbol	q -> nb_channels		8157453						
ANR	8158774	Symbol	* j		8157453						
ANR	8158775	Symbol	* q -> coding_method		8157453						
ANR	8158776	Symbol	* k		8157453						
ANR	8158777	Symbol	joined_stereo		8157453						
ANR	8158778	Symbol	v		8157453						
ANR	8158779	Symbol	* n		8157453						
ANR	8158780	Symbol	* q -> tone_level		8157453						
ANR	8158781	Symbol	* random_dequant_index		8157453						
ANR	8158782	Symbol	AVERROR_INVALIDDATA		8157453						
ANR	8158783	Symbol	* q		8157453						
