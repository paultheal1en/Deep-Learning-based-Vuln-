command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4823939	File	/home/p4ultr4n/workplace/ReVeal/raw_code/imdct_and_windowing_1.c								
ANR	4823940	Function	imdct_and_windowing	1:0:0:3842							
ANR	4823941	FunctionDef	"imdct_and_windowing (AACContext * ac , SingleChannelElement * sce , float bias)"		4823940	0					
ANR	4823942	CompoundStatement		3:0:88:3842	4823940	0					
ANR	4823943	IdentifierDeclStatement	IndividualChannelStream * ics = & sce -> ics ;	5:4:95:135	4823940	0	True				
ANR	4823944	IdentifierDecl	* ics = & sce -> ics		4823940	0					
ANR	4823945	IdentifierDeclType	IndividualChannelStream *		4823940	0					
ANR	4823946	Identifier	ics		4823940	1					
ANR	4823947	AssignmentExpression	* ics = & sce -> ics		4823940	2		=			
ANR	4823948	Identifier	ics		4823940	0					
ANR	4823949	UnaryOperationExpression	& sce -> ics		4823940	1					
ANR	4823950	UnaryOperator	&		4823940	0					
ANR	4823951	PtrMemberAccess	sce -> ics		4823940	1					
ANR	4823952	Identifier	sce		4823940	0					
ANR	4823953	Identifier	ics		4823940	1					
ANR	4823954	IdentifierDeclStatement	float * in = sce -> coeffs ;	7:4:142:168	4823940	1	True				
ANR	4823955	IdentifierDecl	* in = sce -> coeffs		4823940	0					
ANR	4823956	IdentifierDeclType	float *		4823940	0					
ANR	4823957	Identifier	in		4823940	1					
ANR	4823958	AssignmentExpression	* in = sce -> coeffs		4823940	2		=			
ANR	4823959	Identifier	in		4823940	0					
ANR	4823960	PtrMemberAccess	sce -> coeffs		4823940	1					
ANR	4823961	Identifier	sce		4823940	0					
ANR	4823962	Identifier	coeffs		4823940	1					
ANR	4823963	IdentifierDeclStatement	float * out = sce -> ret ;	9:4:175:198	4823940	2	True				
ANR	4823964	IdentifierDecl	* out = sce -> ret		4823940	0					
ANR	4823965	IdentifierDeclType	float *		4823940	0					
ANR	4823966	Identifier	out		4823940	1					
ANR	4823967	AssignmentExpression	* out = sce -> ret		4823940	2		=			
ANR	4823968	Identifier	out		4823940	0					
ANR	4823969	PtrMemberAccess	sce -> ret		4823940	1					
ANR	4823970	Identifier	sce		4823940	0					
ANR	4823971	Identifier	ret		4823940	1					
ANR	4823972	IdentifierDeclStatement	float * saved = sce -> saved ;	11:4:205:230	4823940	3	True				
ANR	4823973	IdentifierDecl	* saved = sce -> saved		4823940	0					
ANR	4823974	IdentifierDeclType	float *		4823940	0					
ANR	4823975	Identifier	saved		4823940	1					
ANR	4823976	AssignmentExpression	* saved = sce -> saved		4823940	2		=			
ANR	4823977	Identifier	saved		4823940	0					
ANR	4823978	PtrMemberAccess	sce -> saved		4823940	1					
ANR	4823979	Identifier	sce		4823940	0					
ANR	4823980	Identifier	saved		4823940	1					
ANR	4823981	IdentifierDeclStatement	const float * swindow = ics -> use_kb_window [ 0 ] ? ff_aac_kbd_short_128 : ff_sine_128 ;	13:4:237:323	4823940	4	True				
ANR	4823982	IdentifierDecl	* swindow = ics -> use_kb_window [ 0 ] ? ff_aac_kbd_short_128 : ff_sine_128		4823940	0					
ANR	4823983	IdentifierDeclType	const float *		4823940	0					
ANR	4823984	Identifier	swindow		4823940	1					
ANR	4823985	AssignmentExpression	* swindow = ics -> use_kb_window [ 0 ] ? ff_aac_kbd_short_128 : ff_sine_128		4823940	2		=			
ANR	4823986	Identifier	swindow		4823940	0					
ANR	4823987	ConditionalExpression	ics -> use_kb_window [ 0 ] ? ff_aac_kbd_short_128 : ff_sine_128		4823940	1					
ANR	4823988	Condition	ics -> use_kb_window [ 0 ]		4823940	0					
ANR	4823989	ArrayIndexing	ics -> use_kb_window [ 0 ]		4823940	0					
ANR	4823990	PtrMemberAccess	ics -> use_kb_window		4823940	0					
ANR	4823991	Identifier	ics		4823940	0					
ANR	4823992	Identifier	use_kb_window		4823940	1					
ANR	4823993	PrimaryExpression	0		4823940	1					
ANR	4823994	Identifier	ff_aac_kbd_short_128		4823940	1					
ANR	4823995	Identifier	ff_sine_128		4823940	2					
ANR	4823996	IdentifierDeclStatement	const float * lwindow_prev = ics -> use_kb_window [ 1 ] ? ff_aac_kbd_long_1024 : ff_sine_1024 ;	15:4:330:417	4823940	5	True				
ANR	4823997	IdentifierDecl	* lwindow_prev = ics -> use_kb_window [ 1 ] ? ff_aac_kbd_long_1024 : ff_sine_1024		4823940	0					
ANR	4823998	IdentifierDeclType	const float *		4823940	0					
ANR	4823999	Identifier	lwindow_prev		4823940	1					
ANR	4824000	AssignmentExpression	* lwindow_prev = ics -> use_kb_window [ 1 ] ? ff_aac_kbd_long_1024 : ff_sine_1024		4823940	2		=			
ANR	4824001	Identifier	lwindow_prev		4823940	0					
ANR	4824002	ConditionalExpression	ics -> use_kb_window [ 1 ] ? ff_aac_kbd_long_1024 : ff_sine_1024		4823940	1					
ANR	4824003	Condition	ics -> use_kb_window [ 1 ]		4823940	0					
ANR	4824004	ArrayIndexing	ics -> use_kb_window [ 1 ]		4823940	0					
ANR	4824005	PtrMemberAccess	ics -> use_kb_window		4823940	0					
ANR	4824006	Identifier	ics		4823940	0					
ANR	4824007	Identifier	use_kb_window		4823940	1					
ANR	4824008	PrimaryExpression	1		4823940	1					
ANR	4824009	Identifier	ff_aac_kbd_long_1024		4823940	1					
ANR	4824010	Identifier	ff_sine_1024		4823940	2					
ANR	4824011	IdentifierDeclStatement	const float * swindow_prev = ics -> use_kb_window [ 1 ] ? ff_aac_kbd_short_128 : ff_sine_128 ;	17:4:424:510	4823940	6	True				
ANR	4824012	IdentifierDecl	* swindow_prev = ics -> use_kb_window [ 1 ] ? ff_aac_kbd_short_128 : ff_sine_128		4823940	0					
ANR	4824013	IdentifierDeclType	const float *		4823940	0					
ANR	4824014	Identifier	swindow_prev		4823940	1					
ANR	4824015	AssignmentExpression	* swindow_prev = ics -> use_kb_window [ 1 ] ? ff_aac_kbd_short_128 : ff_sine_128		4823940	2		=			
ANR	4824016	Identifier	swindow_prev		4823940	0					
ANR	4824017	ConditionalExpression	ics -> use_kb_window [ 1 ] ? ff_aac_kbd_short_128 : ff_sine_128		4823940	1					
ANR	4824018	Condition	ics -> use_kb_window [ 1 ]		4823940	0					
ANR	4824019	ArrayIndexing	ics -> use_kb_window [ 1 ]		4823940	0					
ANR	4824020	PtrMemberAccess	ics -> use_kb_window		4823940	0					
ANR	4824021	Identifier	ics		4823940	0					
ANR	4824022	Identifier	use_kb_window		4823940	1					
ANR	4824023	PrimaryExpression	1		4823940	1					
ANR	4824024	Identifier	ff_aac_kbd_short_128		4823940	1					
ANR	4824025	Identifier	ff_sine_128		4823940	2					
ANR	4824026	IdentifierDeclStatement	float * buf = ac -> buf_mdct ;	19:4:517:543	4823940	7	True				
ANR	4824027	IdentifierDecl	* buf = ac -> buf_mdct		4823940	0					
ANR	4824028	IdentifierDeclType	float *		4823940	0					
ANR	4824029	Identifier	buf		4823940	1					
ANR	4824030	AssignmentExpression	* buf = ac -> buf_mdct		4823940	2		=			
ANR	4824031	Identifier	buf		4823940	0					
ANR	4824032	PtrMemberAccess	ac -> buf_mdct		4823940	1					
ANR	4824033	Identifier	ac		4823940	0					
ANR	4824034	Identifier	buf_mdct		4823940	1					
ANR	4824035	IdentifierDeclStatement	float * temp = ac -> temp ;	21:4:550:572	4823940	8	True				
ANR	4824036	IdentifierDecl	* temp = ac -> temp		4823940	0					
ANR	4824037	IdentifierDeclType	float *		4823940	0					
ANR	4824038	Identifier	temp		4823940	1					
ANR	4824039	AssignmentExpression	* temp = ac -> temp		4823940	2		=			
ANR	4824040	Identifier	temp		4823940	0					
ANR	4824041	PtrMemberAccess	ac -> temp		4823940	1					
ANR	4824042	Identifier	ac		4823940	0					
ANR	4824043	Identifier	temp		4823940	1					
ANR	4824044	IdentifierDeclStatement	int i ;	23:4:579:584	4823940	9	True				
ANR	4824045	IdentifierDecl	i		4823940	0					
ANR	4824046	IdentifierDeclType	int		4823940	0					
ANR	4824047	Identifier	i		4823940	1					
ANR	4824048	IfStatement	if ( ics -> window_sequence [ 0 ] == EIGHT_SHORT_SEQUENCE )		4823940	10					
ANR	4824049	Condition	ics -> window_sequence [ 0 ] == EIGHT_SHORT_SEQUENCE	29:8:611:657	4823940	0	True				
ANR	4824050	EqualityExpression	ics -> window_sequence [ 0 ] == EIGHT_SHORT_SEQUENCE		4823940	0		==			
ANR	4824051	ArrayIndexing	ics -> window_sequence [ 0 ]		4823940	0					
ANR	4824052	PtrMemberAccess	ics -> window_sequence		4823940	0					
ANR	4824053	Identifier	ics		4823940	0					
ANR	4824054	Identifier	window_sequence		4823940	1					
ANR	4824055	PrimaryExpression	0		4823940	1					
ANR	4824056	Identifier	EIGHT_SHORT_SEQUENCE		4823940	1					
ANR	4824057	CompoundStatement		27:57:571:571	4823940	1					
ANR	4824058	IfStatement	if ( ics -> window_sequence [ 1 ] == ONLY_LONG_SEQUENCE || ics -> window_sequence [ 1 ] == LONG_STOP_SEQUENCE )		4823940	0					
ANR	4824059	Condition	ics -> window_sequence [ 1 ] == ONLY_LONG_SEQUENCE || ics -> window_sequence [ 1 ] == LONG_STOP_SEQUENCE	31:12:675:768	4823940	0	True				
ANR	4824060	OrExpression	ics -> window_sequence [ 1 ] == ONLY_LONG_SEQUENCE || ics -> window_sequence [ 1 ] == LONG_STOP_SEQUENCE		4823940	0		||			
ANR	4824061	EqualityExpression	ics -> window_sequence [ 1 ] == ONLY_LONG_SEQUENCE		4823940	0		==			
ANR	4824062	ArrayIndexing	ics -> window_sequence [ 1 ]		4823940	0					
ANR	4824063	PtrMemberAccess	ics -> window_sequence		4823940	0					
ANR	4824064	Identifier	ics		4823940	0					
ANR	4824065	Identifier	window_sequence		4823940	1					
ANR	4824066	PrimaryExpression	1		4823940	1					
ANR	4824067	Identifier	ONLY_LONG_SEQUENCE		4823940	1					
ANR	4824068	EqualityExpression	ics -> window_sequence [ 1 ] == LONG_STOP_SEQUENCE		4823940	1		==			
ANR	4824069	ArrayIndexing	ics -> window_sequence [ 1 ]		4823940	0					
ANR	4824070	PtrMemberAccess	ics -> window_sequence		4823940	0					
ANR	4824071	Identifier	ics		4823940	0					
ANR	4824072	Identifier	window_sequence		4823940	1					
ANR	4824073	PrimaryExpression	1		4823940	1					
ANR	4824074	Identifier	LONG_STOP_SEQUENCE		4823940	1					
ANR	4824075	Statement	av_log	33:12:784:789	4823940	1	True				
ANR	4824076	Statement	(	33:18:790:790	4823940	1	True				
ANR	4824077	Statement	ac	33:19:791:792	4823940	2	True				
ANR	4824078	Statement	->	33:21:793:794	4823940	3	True				
ANR	4824079	Statement	avctx	33:23:795:799	4823940	4	True				
ANR	4824080	Statement	","	33:28:800:800	4823940	5	True				
ANR	4824081	Statement	AV_LOG_WARNING	33:30:802:815	4823940	6	True				
ANR	4824082	Statement	","	33:44:816:816	4823940	7	True				
ANR	4824083	Statement	"""Transition from an ONLY_LONG or LONG_STOP to an EIGHT_SHORT sequence detected. """	35:19:838:918	4823940	8	True				
ANR	4824084	Statement	"""If you heard an audible artifact, please submit the sample to the FFmpeg developers.\\n"""	37:19:940:1027	4823940	9	True				
ANR	4824085	Statement	)	37:107:1028:1028	4823940	10	True				
ANR	4824086	ExpressionStatement		37:108:1029:1029	4823940	11	True				
ANR	4824087	ForStatement	for ( i = 0 ; i < 1024 ; i += 128 )		4823940	12					
ANR	4824088	ForInit	i = 0 ;	39:13:1045:1050	4823940	0	True				
ANR	4824089	AssignmentExpression	i = 0		4823940	0		=			
ANR	4824090	Identifier	i		4823940	0					
ANR	4824091	PrimaryExpression	0		4823940	1					
ANR	4824092	Condition	i < 1024	39:20:1052:1059	4823940	1	True				
ANR	4824093	RelationalExpression	i < 1024		4823940	0		<			
ANR	4824094	Identifier	i		4823940	0					
ANR	4824095	PrimaryExpression	1024		4823940	1					
ANR	4824096	AssignmentExpression	i += 128	39:30:1062:1069	4823940	2	True	+=			
ANR	4824097	Identifier	i		4823940	0					
ANR	4824098	PrimaryExpression	128		4823940	1					
ANR	4824099	ExpressionStatement	"ff_imdct_half ( & ac -> mdct_small , buf + i , in + i )"	41:12:1085:1132	4823940	3	True				
ANR	4824100	CallExpression	"ff_imdct_half ( & ac -> mdct_small , buf + i , in + i )"		4823940	0					
ANR	4824101	Callee	ff_imdct_half		4823940	0					
ANR	4824102	Identifier	ff_imdct_half		4823940	0					
ANR	4824103	ArgumentList	& ac -> mdct_small		4823940	1					
ANR	4824104	Argument	& ac -> mdct_small		4823940	0					
ANR	4824105	UnaryOperationExpression	& ac -> mdct_small		4823940	0					
ANR	4824106	UnaryOperator	&		4823940	0					
ANR	4824107	PtrMemberAccess	ac -> mdct_small		4823940	1					
ANR	4824108	Identifier	ac		4823940	0					
ANR	4824109	Identifier	mdct_small		4823940	1					
ANR	4824110	Argument	buf + i		4823940	1					
ANR	4824111	AdditiveExpression	buf + i		4823940	0		+			
ANR	4824112	Identifier	buf		4823940	0					
ANR	4824113	Identifier	i		4823940	1					
ANR	4824114	Argument	in + i		4823940	2					
ANR	4824115	AdditiveExpression	in + i		4823940	0		+			
ANR	4824116	Identifier	in		4823940	0					
ANR	4824117	Identifier	i		4823940	1					
ANR	4824118	ElseStatement	else		4823940	0					
ANR	4824119	ExpressionStatement	"ff_imdct_half ( & ac -> mdct , buf , in )"	45:8:1155:1188	4823940	0	True				
ANR	4824120	CallExpression	"ff_imdct_half ( & ac -> mdct , buf , in )"		4823940	0					
ANR	4824121	Callee	ff_imdct_half		4823940	0					
ANR	4824122	Identifier	ff_imdct_half		4823940	0					
ANR	4824123	ArgumentList	& ac -> mdct		4823940	1					
ANR	4824124	Argument	& ac -> mdct		4823940	0					
ANR	4824125	UnaryOperationExpression	& ac -> mdct		4823940	0					
ANR	4824126	UnaryOperator	&		4823940	0					
ANR	4824127	PtrMemberAccess	ac -> mdct		4823940	1					
ANR	4824128	Identifier	ac		4823940	0					
ANR	4824129	Identifier	mdct		4823940	1					
ANR	4824130	Argument	buf		4823940	1					
ANR	4824131	Identifier	buf		4823940	0					
ANR	4824132	Argument	in		4823940	2					
ANR	4824133	Identifier	in		4823940	0					
ANR	4824134	IfStatement	if ( ( ics -> window_sequence [ 1 ] == ONLY_LONG_SEQUENCE || ics -> window_sequence [ 1 ] == LONG_STOP_SEQUENCE ) && ( ics -> window_sequence [ 0 ] == ONLY_LONG_SEQUENCE || ics -> window_sequence [ 0 ] == LONG_START_SEQUENCE ) )		4823940	11					
ANR	4824135	Condition	( ics -> window_sequence [ 1 ] == ONLY_LONG_SEQUENCE || ics -> window_sequence [ 1 ] == LONG_STOP_SEQUENCE ) && ( ics -> window_sequence [ 0 ] == ONLY_LONG_SEQUENCE || ics -> window_sequence [ 0 ] == LONG_START_SEQUENCE )	61:8:1535:1744	4823940	0	True				
ANR	4824136	AndExpression	( ics -> window_sequence [ 1 ] == ONLY_LONG_SEQUENCE || ics -> window_sequence [ 1 ] == LONG_STOP_SEQUENCE ) && ( ics -> window_sequence [ 0 ] == ONLY_LONG_SEQUENCE || ics -> window_sequence [ 0 ] == LONG_START_SEQUENCE )		4823940	0		&&			
ANR	4824137	OrExpression	ics -> window_sequence [ 1 ] == ONLY_LONG_SEQUENCE || ics -> window_sequence [ 1 ] == LONG_STOP_SEQUENCE		4823940	0		||			
ANR	4824138	EqualityExpression	ics -> window_sequence [ 1 ] == ONLY_LONG_SEQUENCE		4823940	0		==			
ANR	4824139	ArrayIndexing	ics -> window_sequence [ 1 ]		4823940	0					
ANR	4824140	PtrMemberAccess	ics -> window_sequence		4823940	0					
ANR	4824141	Identifier	ics		4823940	0					
ANR	4824142	Identifier	window_sequence		4823940	1					
ANR	4824143	PrimaryExpression	1		4823940	1					
ANR	4824144	Identifier	ONLY_LONG_SEQUENCE		4823940	1					
ANR	4824145	EqualityExpression	ics -> window_sequence [ 1 ] == LONG_STOP_SEQUENCE		4823940	1		==			
ANR	4824146	ArrayIndexing	ics -> window_sequence [ 1 ]		4823940	0					
ANR	4824147	PtrMemberAccess	ics -> window_sequence		4823940	0					
ANR	4824148	Identifier	ics		4823940	0					
ANR	4824149	Identifier	window_sequence		4823940	1					
ANR	4824150	PrimaryExpression	1		4823940	1					
ANR	4824151	Identifier	LONG_STOP_SEQUENCE		4823940	1					
ANR	4824152	OrExpression	ics -> window_sequence [ 0 ] == ONLY_LONG_SEQUENCE || ics -> window_sequence [ 0 ] == LONG_START_SEQUENCE		4823940	1		||			
ANR	4824153	EqualityExpression	ics -> window_sequence [ 0 ] == ONLY_LONG_SEQUENCE		4823940	0		==			
ANR	4824154	ArrayIndexing	ics -> window_sequence [ 0 ]		4823940	0					
ANR	4824155	PtrMemberAccess	ics -> window_sequence		4823940	0					
ANR	4824156	Identifier	ics		4823940	0					
ANR	4824157	Identifier	window_sequence		4823940	1					
ANR	4824158	PrimaryExpression	0		4823940	1					
ANR	4824159	Identifier	ONLY_LONG_SEQUENCE		4823940	1					
ANR	4824160	EqualityExpression	ics -> window_sequence [ 0 ] == LONG_START_SEQUENCE		4823940	1		==			
ANR	4824161	ArrayIndexing	ics -> window_sequence [ 0 ]		4823940	0					
ANR	4824162	PtrMemberAccess	ics -> window_sequence		4823940	0					
ANR	4824163	Identifier	ics		4823940	0					
ANR	4824164	Identifier	window_sequence		4823940	1					
ANR	4824165	PrimaryExpression	0		4823940	1					
ANR	4824166	Identifier	LONG_START_SEQUENCE		4823940	1					
ANR	4824167	CompoundStatement		61:111:1658:1658	4823940	1					
ANR	4824168	ExpressionStatement	"ac -> dsp . vector_fmul_window ( out , saved , buf , lwindow_prev , bias , 512 )"	65:8:1758:1863	4823940	0	True				
ANR	4824169	CallExpression	"ac -> dsp . vector_fmul_window ( out , saved , buf , lwindow_prev , bias , 512 )"		4823940	0					
ANR	4824170	Callee	ac -> dsp . vector_fmul_window		4823940	0					
ANR	4824171	MemberAccess	ac -> dsp . vector_fmul_window		4823940	0					
ANR	4824172	PtrMemberAccess	ac -> dsp		4823940	0					
ANR	4824173	Identifier	ac		4823940	0					
ANR	4824174	Identifier	dsp		4823940	1					
ANR	4824175	Identifier	vector_fmul_window		4823940	1					
ANR	4824176	ArgumentList	out		4823940	1					
ANR	4824177	Argument	out		4823940	0					
ANR	4824178	Identifier	out		4823940	0					
ANR	4824179	Argument	saved		4823940	1					
ANR	4824180	Identifier	saved		4823940	0					
ANR	4824181	Argument	buf		4823940	2					
ANR	4824182	Identifier	buf		4823940	0					
ANR	4824183	Argument	lwindow_prev		4823940	3					
ANR	4824184	Identifier	lwindow_prev		4823940	0					
ANR	4824185	Argument	bias		4823940	4					
ANR	4824186	Identifier	bias		4823940	0					
ANR	4824187	Argument	512		4823940	5					
ANR	4824188	PrimaryExpression	512		4823940	0					
ANR	4824189	ElseStatement	else		4823940	0					
ANR	4824190	CompoundStatement		65:11:1788:1788	4823940	0					
ANR	4824191	ForStatement	for ( i = 0 ; i < 448 ; i ++ )		4823940	0					
ANR	4824192	ForInit	i = 0 ;	69:13:1893:1898	4823940	0	True				
ANR	4824193	AssignmentExpression	i = 0		4823940	0		=			
ANR	4824194	Identifier	i		4823940	0					
ANR	4824195	PrimaryExpression	0		4823940	1					
ANR	4824196	Condition	i < 448	69:20:1900:1906	4823940	1	True				
ANR	4824197	RelationalExpression	i < 448		4823940	0		<			
ANR	4824198	Identifier	i		4823940	0					
ANR	4824199	PrimaryExpression	448		4823940	1					
ANR	4824200	PostIncDecOperationExpression	i ++	69:29:1909:1911	4823940	2	True				
ANR	4824201	Identifier	i		4823940	0					
ANR	4824202	IncDec	++		4823940	1					
ANR	4824203	ExpressionStatement	out [ i ] = saved [ i ] + bias	71:12:1927:1951	4823940	3	True				
ANR	4824204	AssignmentExpression	out [ i ] = saved [ i ] + bias		4823940	0		=			
ANR	4824205	ArrayIndexing	out [ i ]		4823940	0					
ANR	4824206	Identifier	out		4823940	0					
ANR	4824207	Identifier	i		4823940	1					
ANR	4824208	AdditiveExpression	saved [ i ] + bias		4823940	1		+			
ANR	4824209	ArrayIndexing	saved [ i ]		4823940	0					
ANR	4824210	Identifier	saved		4823940	0					
ANR	4824211	Identifier	i		4823940	1					
ANR	4824212	Identifier	bias		4823940	1					
ANR	4824213	IfStatement	if ( ics -> window_sequence [ 0 ] == EIGHT_SHORT_SEQUENCE )		4823940	1					
ANR	4824214	Condition	ics -> window_sequence [ 0 ] == EIGHT_SHORT_SEQUENCE	75:12:1968:2014	4823940	0	True				
ANR	4824215	EqualityExpression	ics -> window_sequence [ 0 ] == EIGHT_SHORT_SEQUENCE		4823940	0		==			
ANR	4824216	ArrayIndexing	ics -> window_sequence [ 0 ]		4823940	0					
ANR	4824217	PtrMemberAccess	ics -> window_sequence		4823940	0					
ANR	4824218	Identifier	ics		4823940	0					
ANR	4824219	Identifier	window_sequence		4823940	1					
ANR	4824220	PrimaryExpression	0		4823940	1					
ANR	4824221	Identifier	EIGHT_SHORT_SEQUENCE		4823940	1					
ANR	4824222	CompoundStatement		73:61:1928:1928	4823940	1					
ANR	4824223	ExpressionStatement	"ac -> dsp . vector_fmul_window ( out + 448 + 0 * 128 , saved + 448 , buf + 0 * 128 , swindow_prev , bias , 64 )"	77:12:2032:2132	4823940	0	True				
ANR	4824224	CallExpression	"ac -> dsp . vector_fmul_window ( out + 448 + 0 * 128 , saved + 448 , buf + 0 * 128 , swindow_prev , bias , 64 )"		4823940	0					
ANR	4824225	Callee	ac -> dsp . vector_fmul_window		4823940	0					
ANR	4824226	MemberAccess	ac -> dsp . vector_fmul_window		4823940	0					
ANR	4824227	PtrMemberAccess	ac -> dsp		4823940	0					
ANR	4824228	Identifier	ac		4823940	0					
ANR	4824229	Identifier	dsp		4823940	1					
ANR	4824230	Identifier	vector_fmul_window		4823940	1					
ANR	4824231	ArgumentList	out + 448 + 0 * 128		4823940	1					
ANR	4824232	Argument	out + 448 + 0 * 128		4823940	0					
ANR	4824233	AdditiveExpression	out + 448 + 0 * 128		4823940	0		+			
ANR	4824234	Identifier	out		4823940	0					
ANR	4824235	AdditiveExpression	448 + 0 * 128		4823940	1		+			
ANR	4824236	PrimaryExpression	448		4823940	0					
ANR	4824237	MultiplicativeExpression	0 * 128		4823940	1		*			
ANR	4824238	PrimaryExpression	0		4823940	0					
ANR	4824239	PrimaryExpression	128		4823940	1					
ANR	4824240	Argument	saved + 448		4823940	1					
ANR	4824241	AdditiveExpression	saved + 448		4823940	0		+			
ANR	4824242	Identifier	saved		4823940	0					
ANR	4824243	PrimaryExpression	448		4823940	1					
ANR	4824244	Argument	buf + 0 * 128		4823940	2					
ANR	4824245	AdditiveExpression	buf + 0 * 128		4823940	0		+			
ANR	4824246	Identifier	buf		4823940	0					
ANR	4824247	MultiplicativeExpression	0 * 128		4823940	1		*			
ANR	4824248	PrimaryExpression	0		4823940	0					
ANR	4824249	PrimaryExpression	128		4823940	1					
ANR	4824250	Argument	swindow_prev		4823940	3					
ANR	4824251	Identifier	swindow_prev		4823940	0					
ANR	4824252	Argument	bias		4823940	4					
ANR	4824253	Identifier	bias		4823940	0					
ANR	4824254	Argument	64		4823940	5					
ANR	4824255	PrimaryExpression	64		4823940	0					
ANR	4824256	ExpressionStatement	"ac -> dsp . vector_fmul_window ( out + 448 + 1 * 128 , buf + 0 * 128 + 64 , buf + 1 * 128 , swindow , bias , 64 )"	79:12:2147:2247	4823940	1	True				
ANR	4824257	CallExpression	"ac -> dsp . vector_fmul_window ( out + 448 + 1 * 128 , buf + 0 * 128 + 64 , buf + 1 * 128 , swindow , bias , 64 )"		4823940	0					
ANR	4824258	Callee	ac -> dsp . vector_fmul_window		4823940	0					
ANR	4824259	MemberAccess	ac -> dsp . vector_fmul_window		4823940	0					
ANR	4824260	PtrMemberAccess	ac -> dsp		4823940	0					
ANR	4824261	Identifier	ac		4823940	0					
ANR	4824262	Identifier	dsp		4823940	1					
ANR	4824263	Identifier	vector_fmul_window		4823940	1					
ANR	4824264	ArgumentList	out + 448 + 1 * 128		4823940	1					
ANR	4824265	Argument	out + 448 + 1 * 128		4823940	0					
ANR	4824266	AdditiveExpression	out + 448 + 1 * 128		4823940	0		+			
ANR	4824267	Identifier	out		4823940	0					
ANR	4824268	AdditiveExpression	448 + 1 * 128		4823940	1		+			
ANR	4824269	PrimaryExpression	448		4823940	0					
ANR	4824270	MultiplicativeExpression	1 * 128		4823940	1		*			
ANR	4824271	PrimaryExpression	1		4823940	0					
ANR	4824272	PrimaryExpression	128		4823940	1					
ANR	4824273	Argument	buf + 0 * 128 + 64		4823940	1					
ANR	4824274	AdditiveExpression	buf + 0 * 128 + 64		4823940	0		+			
ANR	4824275	Identifier	buf		4823940	0					
ANR	4824276	AdditiveExpression	0 * 128 + 64		4823940	1		+			
ANR	4824277	MultiplicativeExpression	0 * 128		4823940	0		*			
ANR	4824278	PrimaryExpression	0		4823940	0					
ANR	4824279	PrimaryExpression	128		4823940	1					
ANR	4824280	PrimaryExpression	64		4823940	1					
ANR	4824281	Argument	buf + 1 * 128		4823940	2					
ANR	4824282	AdditiveExpression	buf + 1 * 128		4823940	0		+			
ANR	4824283	Identifier	buf		4823940	0					
ANR	4824284	MultiplicativeExpression	1 * 128		4823940	1		*			
ANR	4824285	PrimaryExpression	1		4823940	0					
ANR	4824286	PrimaryExpression	128		4823940	1					
ANR	4824287	Argument	swindow		4823940	3					
ANR	4824288	Identifier	swindow		4823940	0					
ANR	4824289	Argument	bias		4823940	4					
ANR	4824290	Identifier	bias		4823940	0					
ANR	4824291	Argument	64		4823940	5					
ANR	4824292	PrimaryExpression	64		4823940	0					
ANR	4824293	ExpressionStatement	"ac -> dsp . vector_fmul_window ( out + 448 + 2 * 128 , buf + 1 * 128 + 64 , buf + 2 * 128 , swindow , bias , 64 )"	81:12:2262:2362	4823940	2	True				
ANR	4824294	CallExpression	"ac -> dsp . vector_fmul_window ( out + 448 + 2 * 128 , buf + 1 * 128 + 64 , buf + 2 * 128 , swindow , bias , 64 )"		4823940	0					
ANR	4824295	Callee	ac -> dsp . vector_fmul_window		4823940	0					
ANR	4824296	MemberAccess	ac -> dsp . vector_fmul_window		4823940	0					
ANR	4824297	PtrMemberAccess	ac -> dsp		4823940	0					
ANR	4824298	Identifier	ac		4823940	0					
ANR	4824299	Identifier	dsp		4823940	1					
ANR	4824300	Identifier	vector_fmul_window		4823940	1					
ANR	4824301	ArgumentList	out + 448 + 2 * 128		4823940	1					
ANR	4824302	Argument	out + 448 + 2 * 128		4823940	0					
ANR	4824303	AdditiveExpression	out + 448 + 2 * 128		4823940	0		+			
ANR	4824304	Identifier	out		4823940	0					
ANR	4824305	AdditiveExpression	448 + 2 * 128		4823940	1		+			
ANR	4824306	PrimaryExpression	448		4823940	0					
ANR	4824307	MultiplicativeExpression	2 * 128		4823940	1		*			
ANR	4824308	PrimaryExpression	2		4823940	0					
ANR	4824309	PrimaryExpression	128		4823940	1					
ANR	4824310	Argument	buf + 1 * 128 + 64		4823940	1					
ANR	4824311	AdditiveExpression	buf + 1 * 128 + 64		4823940	0		+			
ANR	4824312	Identifier	buf		4823940	0					
ANR	4824313	AdditiveExpression	1 * 128 + 64		4823940	1		+			
ANR	4824314	MultiplicativeExpression	1 * 128		4823940	0		*			
ANR	4824315	PrimaryExpression	1		4823940	0					
ANR	4824316	PrimaryExpression	128		4823940	1					
ANR	4824317	PrimaryExpression	64		4823940	1					
ANR	4824318	Argument	buf + 2 * 128		4823940	2					
ANR	4824319	AdditiveExpression	buf + 2 * 128		4823940	0		+			
ANR	4824320	Identifier	buf		4823940	0					
ANR	4824321	MultiplicativeExpression	2 * 128		4823940	1		*			
ANR	4824322	PrimaryExpression	2		4823940	0					
ANR	4824323	PrimaryExpression	128		4823940	1					
ANR	4824324	Argument	swindow		4823940	3					
ANR	4824325	Identifier	swindow		4823940	0					
ANR	4824326	Argument	bias		4823940	4					
ANR	4824327	Identifier	bias		4823940	0					
ANR	4824328	Argument	64		4823940	5					
ANR	4824329	PrimaryExpression	64		4823940	0					
ANR	4824330	ExpressionStatement	"ac -> dsp . vector_fmul_window ( out + 448 + 3 * 128 , buf + 2 * 128 + 64 , buf + 3 * 128 , swindow , bias , 64 )"	83:12:2377:2477	4823940	3	True				
ANR	4824331	CallExpression	"ac -> dsp . vector_fmul_window ( out + 448 + 3 * 128 , buf + 2 * 128 + 64 , buf + 3 * 128 , swindow , bias , 64 )"		4823940	0					
ANR	4824332	Callee	ac -> dsp . vector_fmul_window		4823940	0					
ANR	4824333	MemberAccess	ac -> dsp . vector_fmul_window		4823940	0					
ANR	4824334	PtrMemberAccess	ac -> dsp		4823940	0					
ANR	4824335	Identifier	ac		4823940	0					
ANR	4824336	Identifier	dsp		4823940	1					
ANR	4824337	Identifier	vector_fmul_window		4823940	1					
ANR	4824338	ArgumentList	out + 448 + 3 * 128		4823940	1					
ANR	4824339	Argument	out + 448 + 3 * 128		4823940	0					
ANR	4824340	AdditiveExpression	out + 448 + 3 * 128		4823940	0		+			
ANR	4824341	Identifier	out		4823940	0					
ANR	4824342	AdditiveExpression	448 + 3 * 128		4823940	1		+			
ANR	4824343	PrimaryExpression	448		4823940	0					
ANR	4824344	MultiplicativeExpression	3 * 128		4823940	1		*			
ANR	4824345	PrimaryExpression	3		4823940	0					
ANR	4824346	PrimaryExpression	128		4823940	1					
ANR	4824347	Argument	buf + 2 * 128 + 64		4823940	1					
ANR	4824348	AdditiveExpression	buf + 2 * 128 + 64		4823940	0		+			
ANR	4824349	Identifier	buf		4823940	0					
ANR	4824350	AdditiveExpression	2 * 128 + 64		4823940	1		+			
ANR	4824351	MultiplicativeExpression	2 * 128		4823940	0		*			
ANR	4824352	PrimaryExpression	2		4823940	0					
ANR	4824353	PrimaryExpression	128		4823940	1					
ANR	4824354	PrimaryExpression	64		4823940	1					
ANR	4824355	Argument	buf + 3 * 128		4823940	2					
ANR	4824356	AdditiveExpression	buf + 3 * 128		4823940	0		+			
ANR	4824357	Identifier	buf		4823940	0					
ANR	4824358	MultiplicativeExpression	3 * 128		4823940	1		*			
ANR	4824359	PrimaryExpression	3		4823940	0					
ANR	4824360	PrimaryExpression	128		4823940	1					
ANR	4824361	Argument	swindow		4823940	3					
ANR	4824362	Identifier	swindow		4823940	0					
ANR	4824363	Argument	bias		4823940	4					
ANR	4824364	Identifier	bias		4823940	0					
ANR	4824365	Argument	64		4823940	5					
ANR	4824366	PrimaryExpression	64		4823940	0					
ANR	4824367	ExpressionStatement	"ac -> dsp . vector_fmul_window ( temp , buf + 3 * 128 + 64 , buf + 4 * 128 , swindow , bias , 64 )"	85:12:2492:2592	4823940	4	True				
ANR	4824368	CallExpression	"ac -> dsp . vector_fmul_window ( temp , buf + 3 * 128 + 64 , buf + 4 * 128 , swindow , bias , 64 )"		4823940	0					
ANR	4824369	Callee	ac -> dsp . vector_fmul_window		4823940	0					
ANR	4824370	MemberAccess	ac -> dsp . vector_fmul_window		4823940	0					
ANR	4824371	PtrMemberAccess	ac -> dsp		4823940	0					
ANR	4824372	Identifier	ac		4823940	0					
ANR	4824373	Identifier	dsp		4823940	1					
ANR	4824374	Identifier	vector_fmul_window		4823940	1					
ANR	4824375	ArgumentList	temp		4823940	1					
ANR	4824376	Argument	temp		4823940	0					
ANR	4824377	Identifier	temp		4823940	0					
ANR	4824378	Argument	buf + 3 * 128 + 64		4823940	1					
ANR	4824379	AdditiveExpression	buf + 3 * 128 + 64		4823940	0		+			
ANR	4824380	Identifier	buf		4823940	0					
ANR	4824381	AdditiveExpression	3 * 128 + 64		4823940	1		+			
ANR	4824382	MultiplicativeExpression	3 * 128		4823940	0		*			
ANR	4824383	PrimaryExpression	3		4823940	0					
ANR	4824384	PrimaryExpression	128		4823940	1					
ANR	4824385	PrimaryExpression	64		4823940	1					
ANR	4824386	Argument	buf + 4 * 128		4823940	2					
ANR	4824387	AdditiveExpression	buf + 4 * 128		4823940	0		+			
ANR	4824388	Identifier	buf		4823940	0					
ANR	4824389	MultiplicativeExpression	4 * 128		4823940	1		*			
ANR	4824390	PrimaryExpression	4		4823940	0					
ANR	4824391	PrimaryExpression	128		4823940	1					
ANR	4824392	Argument	swindow		4823940	3					
ANR	4824393	Identifier	swindow		4823940	0					
ANR	4824394	Argument	bias		4823940	4					
ANR	4824395	Identifier	bias		4823940	0					
ANR	4824396	Argument	64		4823940	5					
ANR	4824397	PrimaryExpression	64		4823940	0					
ANR	4824398	ExpressionStatement	"memcpy ( out + 448 + 4 * 128 , temp , 64 * sizeof ( float ) )"	87:12:2607:2678	4823940	5	True				
ANR	4824399	CallExpression	"memcpy ( out + 448 + 4 * 128 , temp , 64 * sizeof ( float ) )"		4823940	0					
ANR	4824400	Callee	memcpy		4823940	0					
ANR	4824401	Identifier	memcpy		4823940	0					
ANR	4824402	ArgumentList	out + 448 + 4 * 128		4823940	1					
ANR	4824403	Argument	out + 448 + 4 * 128		4823940	0					
ANR	4824404	AdditiveExpression	out + 448 + 4 * 128		4823940	0		+			
ANR	4824405	Identifier	out		4823940	0					
ANR	4824406	AdditiveExpression	448 + 4 * 128		4823940	1		+			
ANR	4824407	PrimaryExpression	448		4823940	0					
ANR	4824408	MultiplicativeExpression	4 * 128		4823940	1		*			
ANR	4824409	PrimaryExpression	4		4823940	0					
ANR	4824410	PrimaryExpression	128		4823940	1					
ANR	4824411	Argument	temp		4823940	1					
ANR	4824412	Identifier	temp		4823940	0					
ANR	4824413	Argument	64 * sizeof ( float )		4823940	2					
ANR	4824414	MultiplicativeExpression	64 * sizeof ( float )		4823940	0		*			
ANR	4824415	PrimaryExpression	64		4823940	0					
ANR	4824416	SizeofExpression	sizeof ( float )		4823940	1					
ANR	4824417	Sizeof	sizeof		4823940	0					
ANR	4824418	SizeofOperand	float		4823940	1					
ANR	4824419	ElseStatement	else		4823940	0					
ANR	4824420	CompoundStatement		87:15:2607:2607	4823940	0					
ANR	4824421	ExpressionStatement	"ac -> dsp . vector_fmul_window ( out + 448 , saved + 448 , buf , swindow_prev , bias , 64 )"	91:12:2711:2811	4823940	0	True				
ANR	4824422	CallExpression	"ac -> dsp . vector_fmul_window ( out + 448 , saved + 448 , buf , swindow_prev , bias , 64 )"		4823940	0					
ANR	4824423	Callee	ac -> dsp . vector_fmul_window		4823940	0					
ANR	4824424	MemberAccess	ac -> dsp . vector_fmul_window		4823940	0					
ANR	4824425	PtrMemberAccess	ac -> dsp		4823940	0					
ANR	4824426	Identifier	ac		4823940	0					
ANR	4824427	Identifier	dsp		4823940	1					
ANR	4824428	Identifier	vector_fmul_window		4823940	1					
ANR	4824429	ArgumentList	out + 448		4823940	1					
ANR	4824430	Argument	out + 448		4823940	0					
ANR	4824431	AdditiveExpression	out + 448		4823940	0		+			
ANR	4824432	Identifier	out		4823940	0					
ANR	4824433	PrimaryExpression	448		4823940	1					
ANR	4824434	Argument	saved + 448		4823940	1					
ANR	4824435	AdditiveExpression	saved + 448		4823940	0		+			
ANR	4824436	Identifier	saved		4823940	0					
ANR	4824437	PrimaryExpression	448		4823940	1					
ANR	4824438	Argument	buf		4823940	2					
ANR	4824439	Identifier	buf		4823940	0					
ANR	4824440	Argument	swindow_prev		4823940	3					
ANR	4824441	Identifier	swindow_prev		4823940	0					
ANR	4824442	Argument	bias		4823940	4					
ANR	4824443	Identifier	bias		4823940	0					
ANR	4824444	Argument	64		4823940	5					
ANR	4824445	PrimaryExpression	64		4823940	0					
ANR	4824446	ForStatement	for ( i = 576 ; i < 1024 ; i ++ )		4823940	1					
ANR	4824447	ForInit	i = 576 ;	93:17:2831:2838	4823940	0	True				
ANR	4824448	AssignmentExpression	i = 576		4823940	0		=			
ANR	4824449	Identifier	i		4823940	0					
ANR	4824450	PrimaryExpression	576		4823940	1					
ANR	4824451	Condition	i < 1024	93:26:2840:2847	4823940	1	True				
ANR	4824452	RelationalExpression	i < 1024		4823940	0		<			
ANR	4824453	Identifier	i		4823940	0					
ANR	4824454	PrimaryExpression	1024		4823940	1					
ANR	4824455	PostIncDecOperationExpression	i ++	93:36:2850:2852	4823940	2	True				
ANR	4824456	Identifier	i		4823940	0					
ANR	4824457	IncDec	++		4823940	1					
ANR	4824458	ExpressionStatement	out [ i ] = buf [ i - 512 ] + bias	95:16:2872:2898	4823940	3	True				
ANR	4824459	AssignmentExpression	out [ i ] = buf [ i - 512 ] + bias		4823940	0		=			
ANR	4824460	ArrayIndexing	out [ i ]		4823940	0					
ANR	4824461	Identifier	out		4823940	0					
ANR	4824462	Identifier	i		4823940	1					
ANR	4824463	AdditiveExpression	buf [ i - 512 ] + bias		4823940	1		+			
ANR	4824464	ArrayIndexing	buf [ i - 512 ]		4823940	0					
ANR	4824465	Identifier	buf		4823940	0					
ANR	4824466	AdditiveExpression	i - 512		4823940	1		-			
ANR	4824467	Identifier	i		4823940	0					
ANR	4824468	PrimaryExpression	512		4823940	1					
ANR	4824469	Identifier	bias		4823940	1					
ANR	4824470	IfStatement	if ( ics -> window_sequence [ 0 ] == EIGHT_SHORT_SEQUENCE )		4823940	12					
ANR	4824471	Condition	ics -> window_sequence [ 0 ] == EIGHT_SHORT_SEQUENCE	105:8:2951:2997	4823940	0	True				
ANR	4824472	EqualityExpression	ics -> window_sequence [ 0 ] == EIGHT_SHORT_SEQUENCE		4823940	0		==			
ANR	4824473	ArrayIndexing	ics -> window_sequence [ 0 ]		4823940	0					
ANR	4824474	PtrMemberAccess	ics -> window_sequence		4823940	0					
ANR	4824475	Identifier	ics		4823940	0					
ANR	4824476	Identifier	window_sequence		4823940	1					
ANR	4824477	PrimaryExpression	0		4823940	1					
ANR	4824478	Identifier	EIGHT_SHORT_SEQUENCE		4823940	1					
ANR	4824479	CompoundStatement		103:57:2911:2911	4823940	1					
ANR	4824480	ForStatement	for ( i = 0 ; i < 64 ; i ++ )		4823940	0					
ANR	4824481	ForInit	i = 0 ;	107:13:3016:3021	4823940	0	True				
ANR	4824482	AssignmentExpression	i = 0		4823940	0		=			
ANR	4824483	Identifier	i		4823940	0					
ANR	4824484	PrimaryExpression	0		4823940	1					
ANR	4824485	Condition	i < 64	107:20:3023:3028	4823940	1	True				
ANR	4824486	RelationalExpression	i < 64		4823940	0		<			
ANR	4824487	Identifier	i		4823940	0					
ANR	4824488	PrimaryExpression	64		4823940	1					
ANR	4824489	PostIncDecOperationExpression	i ++	107:28:3031:3033	4823940	2	True				
ANR	4824490	Identifier	i		4823940	0					
ANR	4824491	IncDec	++		4823940	1					
ANR	4824492	ExpressionStatement	saved [ i ] = temp [ 64 + i ] - bias	109:12:3049:3079	4823940	3	True				
ANR	4824493	AssignmentExpression	saved [ i ] = temp [ 64 + i ] - bias		4823940	0		=			
ANR	4824494	ArrayIndexing	saved [ i ]		4823940	0					
ANR	4824495	Identifier	saved		4823940	0					
ANR	4824496	Identifier	i		4823940	1					
ANR	4824497	AdditiveExpression	temp [ 64 + i ] - bias		4823940	1		-			
ANR	4824498	ArrayIndexing	temp [ 64 + i ]		4823940	0					
ANR	4824499	Identifier	temp		4823940	0					
ANR	4824500	AdditiveExpression	64 + i		4823940	1		+			
ANR	4824501	PrimaryExpression	64		4823940	0					
ANR	4824502	Identifier	i		4823940	1					
ANR	4824503	Identifier	bias		4823940	1					
ANR	4824504	ExpressionStatement	"ac -> dsp . vector_fmul_window ( saved + 64 , buf + 4 * 128 + 64 , buf + 5 * 128 , swindow , 0 , 64 )"	111:8:3090:3176	4823940	1	True				
ANR	4824505	CallExpression	"ac -> dsp . vector_fmul_window ( saved + 64 , buf + 4 * 128 + 64 , buf + 5 * 128 , swindow , 0 , 64 )"		4823940	0					
ANR	4824506	Callee	ac -> dsp . vector_fmul_window		4823940	0					
ANR	4824507	MemberAccess	ac -> dsp . vector_fmul_window		4823940	0					
ANR	4824508	PtrMemberAccess	ac -> dsp		4823940	0					
ANR	4824509	Identifier	ac		4823940	0					
ANR	4824510	Identifier	dsp		4823940	1					
ANR	4824511	Identifier	vector_fmul_window		4823940	1					
ANR	4824512	ArgumentList	saved + 64		4823940	1					
ANR	4824513	Argument	saved + 64		4823940	0					
ANR	4824514	AdditiveExpression	saved + 64		4823940	0		+			
ANR	4824515	Identifier	saved		4823940	0					
ANR	4824516	PrimaryExpression	64		4823940	1					
ANR	4824517	Argument	buf + 4 * 128 + 64		4823940	1					
ANR	4824518	AdditiveExpression	buf + 4 * 128 + 64		4823940	0		+			
ANR	4824519	Identifier	buf		4823940	0					
ANR	4824520	AdditiveExpression	4 * 128 + 64		4823940	1		+			
ANR	4824521	MultiplicativeExpression	4 * 128		4823940	0		*			
ANR	4824522	PrimaryExpression	4		4823940	0					
ANR	4824523	PrimaryExpression	128		4823940	1					
ANR	4824524	PrimaryExpression	64		4823940	1					
ANR	4824525	Argument	buf + 5 * 128		4823940	2					
ANR	4824526	AdditiveExpression	buf + 5 * 128		4823940	0		+			
ANR	4824527	Identifier	buf		4823940	0					
ANR	4824528	MultiplicativeExpression	5 * 128		4823940	1		*			
ANR	4824529	PrimaryExpression	5		4823940	0					
ANR	4824530	PrimaryExpression	128		4823940	1					
ANR	4824531	Argument	swindow		4823940	3					
ANR	4824532	Identifier	swindow		4823940	0					
ANR	4824533	Argument	0		4823940	4					
ANR	4824534	PrimaryExpression	0		4823940	0					
ANR	4824535	Argument	64		4823940	5					
ANR	4824536	PrimaryExpression	64		4823940	0					
ANR	4824537	ExpressionStatement	"ac -> dsp . vector_fmul_window ( saved + 192 , buf + 5 * 128 + 64 , buf + 6 * 128 , swindow , 0 , 64 )"	113:8:3187:3273	4823940	2	True				
ANR	4824538	CallExpression	"ac -> dsp . vector_fmul_window ( saved + 192 , buf + 5 * 128 + 64 , buf + 6 * 128 , swindow , 0 , 64 )"		4823940	0					
ANR	4824539	Callee	ac -> dsp . vector_fmul_window		4823940	0					
ANR	4824540	MemberAccess	ac -> dsp . vector_fmul_window		4823940	0					
ANR	4824541	PtrMemberAccess	ac -> dsp		4823940	0					
ANR	4824542	Identifier	ac		4823940	0					
ANR	4824543	Identifier	dsp		4823940	1					
ANR	4824544	Identifier	vector_fmul_window		4823940	1					
ANR	4824545	ArgumentList	saved + 192		4823940	1					
ANR	4824546	Argument	saved + 192		4823940	0					
ANR	4824547	AdditiveExpression	saved + 192		4823940	0		+			
ANR	4824548	Identifier	saved		4823940	0					
ANR	4824549	PrimaryExpression	192		4823940	1					
ANR	4824550	Argument	buf + 5 * 128 + 64		4823940	1					
ANR	4824551	AdditiveExpression	buf + 5 * 128 + 64		4823940	0		+			
ANR	4824552	Identifier	buf		4823940	0					
ANR	4824553	AdditiveExpression	5 * 128 + 64		4823940	1		+			
ANR	4824554	MultiplicativeExpression	5 * 128		4823940	0		*			
ANR	4824555	PrimaryExpression	5		4823940	0					
ANR	4824556	PrimaryExpression	128		4823940	1					
ANR	4824557	PrimaryExpression	64		4823940	1					
ANR	4824558	Argument	buf + 6 * 128		4823940	2					
ANR	4824559	AdditiveExpression	buf + 6 * 128		4823940	0		+			
ANR	4824560	Identifier	buf		4823940	0					
ANR	4824561	MultiplicativeExpression	6 * 128		4823940	1		*			
ANR	4824562	PrimaryExpression	6		4823940	0					
ANR	4824563	PrimaryExpression	128		4823940	1					
ANR	4824564	Argument	swindow		4823940	3					
ANR	4824565	Identifier	swindow		4823940	0					
ANR	4824566	Argument	0		4823940	4					
ANR	4824567	PrimaryExpression	0		4823940	0					
ANR	4824568	Argument	64		4823940	5					
ANR	4824569	PrimaryExpression	64		4823940	0					
ANR	4824570	ExpressionStatement	"ac -> dsp . vector_fmul_window ( saved + 320 , buf + 6 * 128 + 64 , buf + 7 * 128 , swindow , 0 , 64 )"	115:8:3284:3370	4823940	3	True				
ANR	4824571	CallExpression	"ac -> dsp . vector_fmul_window ( saved + 320 , buf + 6 * 128 + 64 , buf + 7 * 128 , swindow , 0 , 64 )"		4823940	0					
ANR	4824572	Callee	ac -> dsp . vector_fmul_window		4823940	0					
ANR	4824573	MemberAccess	ac -> dsp . vector_fmul_window		4823940	0					
ANR	4824574	PtrMemberAccess	ac -> dsp		4823940	0					
ANR	4824575	Identifier	ac		4823940	0					
ANR	4824576	Identifier	dsp		4823940	1					
ANR	4824577	Identifier	vector_fmul_window		4823940	1					
ANR	4824578	ArgumentList	saved + 320		4823940	1					
ANR	4824579	Argument	saved + 320		4823940	0					
ANR	4824580	AdditiveExpression	saved + 320		4823940	0		+			
ANR	4824581	Identifier	saved		4823940	0					
ANR	4824582	PrimaryExpression	320		4823940	1					
ANR	4824583	Argument	buf + 6 * 128 + 64		4823940	1					
ANR	4824584	AdditiveExpression	buf + 6 * 128 + 64		4823940	0		+			
ANR	4824585	Identifier	buf		4823940	0					
ANR	4824586	AdditiveExpression	6 * 128 + 64		4823940	1		+			
ANR	4824587	MultiplicativeExpression	6 * 128		4823940	0		*			
ANR	4824588	PrimaryExpression	6		4823940	0					
ANR	4824589	PrimaryExpression	128		4823940	1					
ANR	4824590	PrimaryExpression	64		4823940	1					
ANR	4824591	Argument	buf + 7 * 128		4823940	2					
ANR	4824592	AdditiveExpression	buf + 7 * 128		4823940	0		+			
ANR	4824593	Identifier	buf		4823940	0					
ANR	4824594	MultiplicativeExpression	7 * 128		4823940	1		*			
ANR	4824595	PrimaryExpression	7		4823940	0					
ANR	4824596	PrimaryExpression	128		4823940	1					
ANR	4824597	Argument	swindow		4823940	3					
ANR	4824598	Identifier	swindow		4823940	0					
ANR	4824599	Argument	0		4823940	4					
ANR	4824600	PrimaryExpression	0		4823940	0					
ANR	4824601	Argument	64		4823940	5					
ANR	4824602	PrimaryExpression	64		4823940	0					
ANR	4824603	ExpressionStatement	"memcpy ( saved + 448 , buf + 7 * 128 + 64 , 64 * sizeof ( float ) )"	117:8:3381:3459	4823940	4	True				
ANR	4824604	CallExpression	"memcpy ( saved + 448 , buf + 7 * 128 + 64 , 64 * sizeof ( float ) )"		4823940	0					
ANR	4824605	Callee	memcpy		4823940	0					
ANR	4824606	Identifier	memcpy		4823940	0					
ANR	4824607	ArgumentList	saved + 448		4823940	1					
ANR	4824608	Argument	saved + 448		4823940	0					
ANR	4824609	AdditiveExpression	saved + 448		4823940	0		+			
ANR	4824610	Identifier	saved		4823940	0					
ANR	4824611	PrimaryExpression	448		4823940	1					
ANR	4824612	Argument	buf + 7 * 128 + 64		4823940	1					
ANR	4824613	AdditiveExpression	buf + 7 * 128 + 64		4823940	0		+			
ANR	4824614	Identifier	buf		4823940	0					
ANR	4824615	AdditiveExpression	7 * 128 + 64		4823940	1		+			
ANR	4824616	MultiplicativeExpression	7 * 128		4823940	0		*			
ANR	4824617	PrimaryExpression	7		4823940	0					
ANR	4824618	PrimaryExpression	128		4823940	1					
ANR	4824619	PrimaryExpression	64		4823940	1					
ANR	4824620	Argument	64 * sizeof ( float )		4823940	2					
ANR	4824621	MultiplicativeExpression	64 * sizeof ( float )		4823940	0		*			
ANR	4824622	PrimaryExpression	64		4823940	0					
ANR	4824623	SizeofExpression	sizeof ( float )		4823940	1					
ANR	4824624	Sizeof	sizeof		4823940	0					
ANR	4824625	SizeofOperand	float		4823940	1					
ANR	4824626	ElseStatement	else		4823940	0					
ANR	4824627	IfStatement	if ( ics -> window_sequence [ 0 ] == LONG_START_SEQUENCE )		4823940	0					
ANR	4824628	Condition	ics -> window_sequence [ 0 ] == LONG_START_SEQUENCE	119:15:3477:3522	4823940	0	True				
ANR	4824629	EqualityExpression	ics -> window_sequence [ 0 ] == LONG_START_SEQUENCE		4823940	0		==			
ANR	4824630	ArrayIndexing	ics -> window_sequence [ 0 ]		4823940	0					
ANR	4824631	PtrMemberAccess	ics -> window_sequence		4823940	0					
ANR	4824632	Identifier	ics		4823940	0					
ANR	4824633	Identifier	window_sequence		4823940	1					
ANR	4824634	PrimaryExpression	0		4823940	1					
ANR	4824635	Identifier	LONG_START_SEQUENCE		4823940	1					
ANR	4824636	CompoundStatement		117:63:3436:3436	4823940	1					
ANR	4824637	ExpressionStatement	"memcpy ( saved , buf + 512 , 448 * sizeof ( float ) )"	121:8:3536:3614	4823940	0	True				
ANR	4824638	CallExpression	"memcpy ( saved , buf + 512 , 448 * sizeof ( float ) )"		4823940	0					
ANR	4824639	Callee	memcpy		4823940	0					
ANR	4824640	Identifier	memcpy		4823940	0					
ANR	4824641	ArgumentList	saved		4823940	1					
ANR	4824642	Argument	saved		4823940	0					
ANR	4824643	Identifier	saved		4823940	0					
ANR	4824644	Argument	buf + 512		4823940	1					
ANR	4824645	AdditiveExpression	buf + 512		4823940	0		+			
ANR	4824646	Identifier	buf		4823940	0					
ANR	4824647	PrimaryExpression	512		4823940	1					
ANR	4824648	Argument	448 * sizeof ( float )		4823940	2					
ANR	4824649	MultiplicativeExpression	448 * sizeof ( float )		4823940	0		*			
ANR	4824650	PrimaryExpression	448		4823940	0					
ANR	4824651	SizeofExpression	sizeof ( float )		4823940	1					
ANR	4824652	Sizeof	sizeof		4823940	0					
ANR	4824653	SizeofOperand	float		4823940	1					
ANR	4824654	ExpressionStatement	"memcpy ( saved + 448 , buf + 7 * 128 + 64 , 64 * sizeof ( float ) )"	123:8:3625:3703	4823940	1	True				
ANR	4824655	CallExpression	"memcpy ( saved + 448 , buf + 7 * 128 + 64 , 64 * sizeof ( float ) )"		4823940	0					
ANR	4824656	Callee	memcpy		4823940	0					
ANR	4824657	Identifier	memcpy		4823940	0					
ANR	4824658	ArgumentList	saved + 448		4823940	1					
ANR	4824659	Argument	saved + 448		4823940	0					
ANR	4824660	AdditiveExpression	saved + 448		4823940	0		+			
ANR	4824661	Identifier	saved		4823940	0					
ANR	4824662	PrimaryExpression	448		4823940	1					
ANR	4824663	Argument	buf + 7 * 128 + 64		4823940	1					
ANR	4824664	AdditiveExpression	buf + 7 * 128 + 64		4823940	0		+			
ANR	4824665	Identifier	buf		4823940	0					
ANR	4824666	AdditiveExpression	7 * 128 + 64		4823940	1		+			
ANR	4824667	MultiplicativeExpression	7 * 128		4823940	0		*			
ANR	4824668	PrimaryExpression	7		4823940	0					
ANR	4824669	PrimaryExpression	128		4823940	1					
ANR	4824670	PrimaryExpression	64		4823940	1					
ANR	4824671	Argument	64 * sizeof ( float )		4823940	2					
ANR	4824672	MultiplicativeExpression	64 * sizeof ( float )		4823940	0		*			
ANR	4824673	PrimaryExpression	64		4823940	0					
ANR	4824674	SizeofExpression	sizeof ( float )		4823940	1					
ANR	4824675	Sizeof	sizeof		4823940	0					
ANR	4824676	SizeofOperand	float		4823940	1					
ANR	4824677	ElseStatement	else		4823940	0					
ANR	4824678	CompoundStatement		123:11:3628:3628	4823940	0					
ANR	4824679	ExpressionStatement	"memcpy ( saved , buf + 512 , 512 * sizeof ( float ) )"	127:8:3754:3832	4823940	0	True				
ANR	4824680	CallExpression	"memcpy ( saved , buf + 512 , 512 * sizeof ( float ) )"		4823940	0					
ANR	4824681	Callee	memcpy		4823940	0					
ANR	4824682	Identifier	memcpy		4823940	0					
ANR	4824683	ArgumentList	saved		4823940	1					
ANR	4824684	Argument	saved		4823940	0					
ANR	4824685	Identifier	saved		4823940	0					
ANR	4824686	Argument	buf + 512		4823940	1					
ANR	4824687	AdditiveExpression	buf + 512		4823940	0		+			
ANR	4824688	Identifier	buf		4823940	0					
ANR	4824689	PrimaryExpression	512		4823940	1					
ANR	4824690	Argument	512 * sizeof ( float )		4823940	2					
ANR	4824691	MultiplicativeExpression	512 * sizeof ( float )		4823940	0		*			
ANR	4824692	PrimaryExpression	512		4823940	0					
ANR	4824693	SizeofExpression	sizeof ( float )		4823940	1					
ANR	4824694	Sizeof	sizeof		4823940	0					
ANR	4824695	SizeofOperand	float		4823940	1					
ANR	4824696	ReturnType	static void		4823940	1					
ANR	4824697	Identifier	imdct_and_windowing		4823940	2					
ANR	4824698	ParameterList	"AACContext * ac , SingleChannelElement * sce , float bias"		4823940	3					
ANR	4824699	Parameter	AACContext * ac	1:32:32:45	4823940	0	True				
ANR	4824700	ParameterType	AACContext *		4823940	0					
ANR	4824701	Identifier	ac		4823940	1					
ANR	4824702	Parameter	SingleChannelElement * sce	1:48:48:72	4823940	1	True				
ANR	4824703	ParameterType	SingleChannelElement *		4823940	0					
ANR	4824704	Identifier	sce		4823940	1					
ANR	4824705	Parameter	float bias	1:75:75:84	4823940	2	True				
ANR	4824706	ParameterType	float		4823940	0					
ANR	4824707	Identifier	bias		4823940	1					
ANR	4824708	CFGEntryNode	ENTRY		4823940		True				
ANR	4824709	CFGExitNode	EXIT		4823940		True				
ANR	4824710	Symbol	* ics -> use_kb_window		4823940						
ANR	4824711	Symbol	& sce -> ics		4823940						
ANR	4824712	Symbol	saved		4823940						
ANR	4824713	Symbol	LONG_STOP_SEQUENCE		4823940						
ANR	4824714	Symbol	sce -> ret		4823940						
ANR	4824715	Symbol	* ac		4823940						
ANR	4824716	Symbol	ac -> temp		4823940						
ANR	4824717	Symbol	ff_sine_1024		4823940						
ANR	4824718	Symbol	out		4823940						
ANR	4824719	Symbol	LONG_START_SEQUENCE		4823940						
ANR	4824720	Symbol	sce		4823940						
ANR	4824721	Symbol	sce -> coeffs		4823940						
ANR	4824722	Symbol	bias		4823940						
ANR	4824723	Symbol	ics		4823940						
ANR	4824724	Symbol	swindow		4823940						
ANR	4824725	Symbol	ff_aac_kbd_long_1024		4823940						
ANR	4824726	Symbol	* ics -> window_sequence		4823940						
ANR	4824727	Symbol	ac -> dsp		4823940						
ANR	4824728	Symbol	ac		4823940						
ANR	4824729	Symbol	temp		4823940						
ANR	4824730	Symbol	* buf		4823940						
ANR	4824731	Symbol	swindow_prev		4823940						
ANR	4824732	Symbol	in		4823940						
ANR	4824733	Symbol	ics -> use_kb_window		4823940						
ANR	4824734	Symbol	ics -> window_sequence		4823940						
ANR	4824735	Symbol	lwindow_prev		4823940						
ANR	4824736	Symbol	ff_sine_128		4823940						
ANR	4824737	Symbol	i		4823940						
ANR	4824738	Symbol	* * ics		4823940						
ANR	4824739	Symbol	ff_aac_kbd_short_128		4823940						
ANR	4824740	Symbol	* temp		4823940						
ANR	4824741	Symbol	EIGHT_SHORT_SEQUENCE		4823940						
ANR	4824742	Symbol	& ac -> mdct_small		4823940						
ANR	4824743	Symbol	buf		4823940						
ANR	4824744	Symbol	* saved		4823940						
ANR	4824745	Symbol	& ac -> mdct		4823940						
ANR	4824746	Symbol	* i		4823940						
ANR	4824747	Symbol	* out		4823940						
ANR	4824748	Symbol	sce -> saved		4823940						
ANR	4824749	Symbol	ac -> buf_mdct		4823940						
ANR	4824750	Symbol	ONLY_LONG_SEQUENCE		4823940						
ANR	4824751	Symbol	* ics		4823940						
ANR	4824752	Symbol	* sce		4823940						
