command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2013593	File	/home/p4ultr4n/workplace/ReVeal/raw_code/decode_q_branch_01_1.c								
ANR	2013594	Function	decode_q_branch	1:0:0:2767							
ANR	2013595	FunctionDef	"decode_q_branch (SnowContext * s , int level , int x , int y)"		2013594	0					
ANR	2013596	CompoundStatement		1:67:67:2767	2013594	0					
ANR	2013597	IdentifierDeclStatement	const int w = s -> b_width << s -> block_max_depth ;	3:4:74:119	2013594	0	True				
ANR	2013598	IdentifierDecl	w = s -> b_width << s -> block_max_depth		2013594	0					
ANR	2013599	IdentifierDeclType	const int		2013594	0					
ANR	2013600	Identifier	w		2013594	1					
ANR	2013601	AssignmentExpression	w = s -> b_width << s -> block_max_depth		2013594	2		=			
ANR	2013602	Identifier	w		2013594	0					
ANR	2013603	ShiftExpression	s -> b_width << s -> block_max_depth		2013594	1		<<			
ANR	2013604	PtrMemberAccess	s -> b_width		2013594	0					
ANR	2013605	Identifier	s		2013594	0					
ANR	2013606	Identifier	b_width		2013594	1					
ANR	2013607	PtrMemberAccess	s -> block_max_depth		2013594	1					
ANR	2013608	Identifier	s		2013594	0					
ANR	2013609	Identifier	block_max_depth		2013594	1					
ANR	2013610	IdentifierDeclStatement	const int rem_depth = s -> block_max_depth - level ;	5:4:126:173	2013594	1	True				
ANR	2013611	IdentifierDecl	rem_depth = s -> block_max_depth - level		2013594	0					
ANR	2013612	IdentifierDeclType	const int		2013594	0					
ANR	2013613	Identifier	rem_depth		2013594	1					
ANR	2013614	AssignmentExpression	rem_depth = s -> block_max_depth - level		2013594	2		=			
ANR	2013615	Identifier	rem_depth		2013594	0					
ANR	2013616	AdditiveExpression	s -> block_max_depth - level		2013594	1		-			
ANR	2013617	PtrMemberAccess	s -> block_max_depth		2013594	0					
ANR	2013618	Identifier	s		2013594	0					
ANR	2013619	Identifier	block_max_depth		2013594	1					
ANR	2013620	Identifier	level		2013594	1					
ANR	2013621	IdentifierDeclStatement	const int index = ( x + y * w ) << rem_depth ;	7:4:180:219	2013594	2	True				
ANR	2013622	IdentifierDecl	index = ( x + y * w ) << rem_depth		2013594	0					
ANR	2013623	IdentifierDeclType	const int		2013594	0					
ANR	2013624	Identifier	index		2013594	1					
ANR	2013625	AssignmentExpression	index = ( x + y * w ) << rem_depth		2013594	2		=			
ANR	2013626	Identifier	index		2013594	0					
ANR	2013627	ShiftExpression	( x + y * w ) << rem_depth		2013594	1		<<			
ANR	2013628	AdditiveExpression	x + y * w		2013594	0		+			
ANR	2013629	Identifier	x		2013594	0					
ANR	2013630	MultiplicativeExpression	y * w		2013594	1		*			
ANR	2013631	Identifier	y		2013594	0					
ANR	2013632	Identifier	w		2013594	1					
ANR	2013633	Identifier	rem_depth		2013594	1					
ANR	2013634	IdentifierDeclStatement	int trx = ( x + 1 ) << rem_depth ;	9:4:226:251	2013594	3	True				
ANR	2013635	IdentifierDecl	trx = ( x + 1 ) << rem_depth		2013594	0					
ANR	2013636	IdentifierDeclType	int		2013594	0					
ANR	2013637	Identifier	trx		2013594	1					
ANR	2013638	AssignmentExpression	trx = ( x + 1 ) << rem_depth		2013594	2		=			
ANR	2013639	Identifier	trx		2013594	0					
ANR	2013640	ShiftExpression	( x + 1 ) << rem_depth		2013594	1		<<			
ANR	2013641	AdditiveExpression	x + 1		2013594	0		+			
ANR	2013642	Identifier	x		2013594	0					
ANR	2013643	PrimaryExpression	1		2013594	1					
ANR	2013644	Identifier	rem_depth		2013594	1					
ANR	2013645	IdentifierDeclStatement	const BlockNode * left = x ? & s -> block [ index - 1 ] : & null_block ;	11:4:258:319	2013594	4	True				
ANR	2013646	IdentifierDecl	* left = x ? & s -> block [ index - 1 ] : & null_block		2013594	0					
ANR	2013647	IdentifierDeclType	const BlockNode *		2013594	0					
ANR	2013648	Identifier	left		2013594	1					
ANR	2013649	AssignmentExpression	* left = x ? & s -> block [ index - 1 ] : & null_block		2013594	2		=			
ANR	2013650	Identifier	left		2013594	0					
ANR	2013651	ConditionalExpression	x ? & s -> block [ index - 1 ] : & null_block		2013594	1					
ANR	2013652	Condition	x		2013594	0					
ANR	2013653	Identifier	x		2013594	0					
ANR	2013654	UnaryOperationExpression	& s -> block [ index - 1 ]		2013594	1					
ANR	2013655	UnaryOperator	&		2013594	0					
ANR	2013656	ArrayIndexing	s -> block [ index - 1 ]		2013594	1					
ANR	2013657	PtrMemberAccess	s -> block		2013594	0					
ANR	2013658	Identifier	s		2013594	0					
ANR	2013659	Identifier	block		2013594	1					
ANR	2013660	AdditiveExpression	index - 1		2013594	1		-			
ANR	2013661	Identifier	index		2013594	0					
ANR	2013662	PrimaryExpression	1		2013594	1					
ANR	2013663	UnaryOperationExpression	& null_block		2013594	2					
ANR	2013664	UnaryOperator	&		2013594	0					
ANR	2013665	Identifier	null_block		2013594	1					
ANR	2013666	IdentifierDeclStatement	const BlockNode * top = y ? & s -> block [ index - w ] : & null_block ;	13:4:326:387	2013594	5	True				
ANR	2013667	IdentifierDecl	* top = y ? & s -> block [ index - w ] : & null_block		2013594	0					
ANR	2013668	IdentifierDeclType	const BlockNode *		2013594	0					
ANR	2013669	Identifier	top		2013594	1					
ANR	2013670	AssignmentExpression	* top = y ? & s -> block [ index - w ] : & null_block		2013594	2		=			
ANR	2013671	Identifier	top		2013594	0					
ANR	2013672	ConditionalExpression	y ? & s -> block [ index - w ] : & null_block		2013594	1					
ANR	2013673	Condition	y		2013594	0					
ANR	2013674	Identifier	y		2013594	0					
ANR	2013675	UnaryOperationExpression	& s -> block [ index - w ]		2013594	1					
ANR	2013676	UnaryOperator	&		2013594	0					
ANR	2013677	ArrayIndexing	s -> block [ index - w ]		2013594	1					
ANR	2013678	PtrMemberAccess	s -> block		2013594	0					
ANR	2013679	Identifier	s		2013594	0					
ANR	2013680	Identifier	block		2013594	1					
ANR	2013681	AdditiveExpression	index - w		2013594	1		-			
ANR	2013682	Identifier	index		2013594	0					
ANR	2013683	Identifier	w		2013594	1					
ANR	2013684	UnaryOperationExpression	& null_block		2013594	2					
ANR	2013685	UnaryOperator	&		2013594	0					
ANR	2013686	Identifier	null_block		2013594	1					
ANR	2013687	IdentifierDeclStatement	const BlockNode * tl = y && x ? & s -> block [ index - w - 1 ] : left ;	15:4:394:455	2013594	6	True				
ANR	2013688	IdentifierDecl	* tl = y && x ? & s -> block [ index - w - 1 ] : left		2013594	0					
ANR	2013689	IdentifierDeclType	const BlockNode *		2013594	0					
ANR	2013690	Identifier	tl		2013594	1					
ANR	2013691	AssignmentExpression	* tl = y && x ? & s -> block [ index - w - 1 ] : left		2013594	2		=			
ANR	2013692	Identifier	tl		2013594	0					
ANR	2013693	ConditionalExpression	y && x ? & s -> block [ index - w - 1 ] : left		2013594	1					
ANR	2013694	Condition	y && x		2013594	0					
ANR	2013695	AndExpression	y && x		2013594	0		&&			
ANR	2013696	Identifier	y		2013594	0					
ANR	2013697	Identifier	x		2013594	1					
ANR	2013698	UnaryOperationExpression	& s -> block [ index - w - 1 ]		2013594	1					
ANR	2013699	UnaryOperator	&		2013594	0					
ANR	2013700	ArrayIndexing	s -> block [ index - w - 1 ]		2013594	1					
ANR	2013701	PtrMemberAccess	s -> block		2013594	0					
ANR	2013702	Identifier	s		2013594	0					
ANR	2013703	Identifier	block		2013594	1					
ANR	2013704	AdditiveExpression	index - w - 1		2013594	1		-			
ANR	2013705	Identifier	index		2013594	0					
ANR	2013706	AdditiveExpression	w - 1		2013594	1		-			
ANR	2013707	Identifier	w		2013594	0					
ANR	2013708	PrimaryExpression	1		2013594	1					
ANR	2013709	Identifier	left		2013594	2					
ANR	2013710	IdentifierDeclStatement	const BlockNode * tr = y && trx < w && ( ( x & 1 ) == 0 || level == 0 ) ? & s -> block [ index - w + ( 1 << rem_depth ) ] : tl ;	17:4:462:564	2013594	7	True				
ANR	2013711	IdentifierDecl	* tr = y && trx < w && ( ( x & 1 ) == 0 || level == 0 ) ? & s -> block [ index - w + ( 1 << rem_depth ) ] : tl		2013594	0					
ANR	2013712	IdentifierDeclType	const BlockNode *		2013594	0					
ANR	2013713	Identifier	tr		2013594	1					
ANR	2013714	AssignmentExpression	* tr = y && trx < w && ( ( x & 1 ) == 0 || level == 0 ) ? & s -> block [ index - w + ( 1 << rem_depth ) ] : tl		2013594	2		=			
ANR	2013715	Identifier	tr		2013594	0					
ANR	2013716	ConditionalExpression	y && trx < w && ( ( x & 1 ) == 0 || level == 0 ) ? & s -> block [ index - w + ( 1 << rem_depth ) ] : tl		2013594	1					
ANR	2013717	Condition	y && trx < w && ( ( x & 1 ) == 0 || level == 0 )		2013594	0					
ANR	2013718	AndExpression	y && trx < w && ( ( x & 1 ) == 0 || level == 0 )		2013594	0		&&			
ANR	2013719	Identifier	y		2013594	0					
ANR	2013720	AndExpression	trx < w && ( ( x & 1 ) == 0 || level == 0 )		2013594	1		&&			
ANR	2013721	RelationalExpression	trx < w		2013594	0		<			
ANR	2013722	Identifier	trx		2013594	0					
ANR	2013723	Identifier	w		2013594	1					
ANR	2013724	OrExpression	( x & 1 ) == 0 || level == 0		2013594	1		||			
ANR	2013725	EqualityExpression	( x & 1 ) == 0		2013594	0		==			
ANR	2013726	BitAndExpression	x & 1		2013594	0		&			
ANR	2013727	Identifier	x		2013594	0					
ANR	2013728	PrimaryExpression	1		2013594	1					
ANR	2013729	PrimaryExpression	0		2013594	1					
ANR	2013730	EqualityExpression	level == 0		2013594	1		==			
ANR	2013731	Identifier	level		2013594	0					
ANR	2013732	PrimaryExpression	0		2013594	1					
ANR	2013733	UnaryOperationExpression	& s -> block [ index - w + ( 1 << rem_depth ) ]		2013594	1					
ANR	2013734	UnaryOperator	&		2013594	0					
ANR	2013735	ArrayIndexing	s -> block [ index - w + ( 1 << rem_depth ) ]		2013594	1					
ANR	2013736	PtrMemberAccess	s -> block		2013594	0					
ANR	2013737	Identifier	s		2013594	0					
ANR	2013738	Identifier	block		2013594	1					
ANR	2013739	AdditiveExpression	index - w + ( 1 << rem_depth )		2013594	1		-			
ANR	2013740	Identifier	index		2013594	0					
ANR	2013741	AdditiveExpression	w + ( 1 << rem_depth )		2013594	1		+			
ANR	2013742	Identifier	w		2013594	0					
ANR	2013743	ShiftExpression	1 << rem_depth		2013594	1		<<			
ANR	2013744	PrimaryExpression	1		2013594	0					
ANR	2013745	Identifier	rem_depth		2013594	1					
ANR	2013746	Identifier	tl		2013594	2					
ANR	2013747	IdentifierDeclStatement	int s_context = 2 * left -> level + 2 * top -> level + tl -> level + tr -> level ;	19:4:586:653	2013594	8	True				
ANR	2013748	IdentifierDecl	s_context = 2 * left -> level + 2 * top -> level + tl -> level + tr -> level		2013594	0					
ANR	2013749	IdentifierDeclType	int		2013594	0					
ANR	2013750	Identifier	s_context		2013594	1					
ANR	2013751	AssignmentExpression	s_context = 2 * left -> level + 2 * top -> level + tl -> level + tr -> level		2013594	2		=			
ANR	2013752	Identifier	s_context		2013594	0					
ANR	2013753	AdditiveExpression	2 * left -> level + 2 * top -> level + tl -> level + tr -> level		2013594	1		+			
ANR	2013754	MultiplicativeExpression	2 * left -> level		2013594	0		*			
ANR	2013755	PrimaryExpression	2		2013594	0					
ANR	2013756	PtrMemberAccess	left -> level		2013594	1					
ANR	2013757	Identifier	left		2013594	0					
ANR	2013758	Identifier	level		2013594	1					
ANR	2013759	AdditiveExpression	2 * top -> level + tl -> level + tr -> level		2013594	1		+			
ANR	2013760	MultiplicativeExpression	2 * top -> level		2013594	0		*			
ANR	2013761	PrimaryExpression	2		2013594	0					
ANR	2013762	PtrMemberAccess	top -> level		2013594	1					
ANR	2013763	Identifier	top		2013594	0					
ANR	2013764	Identifier	level		2013594	1					
ANR	2013765	AdditiveExpression	tl -> level + tr -> level		2013594	1		+			
ANR	2013766	PtrMemberAccess	tl -> level		2013594	0					
ANR	2013767	Identifier	tl		2013594	0					
ANR	2013768	Identifier	level		2013594	1					
ANR	2013769	PtrMemberAccess	tr -> level		2013594	1					
ANR	2013770	Identifier	tr		2013594	0					
ANR	2013771	Identifier	level		2013594	1					
ANR	2013772	IdentifierDeclStatement	int res ;	21:4:660:667	2013594	9	True				
ANR	2013773	IdentifierDecl	res		2013594	0					
ANR	2013774	IdentifierDeclType	int		2013594	0					
ANR	2013775	Identifier	res		2013594	1					
ANR	2013776	IfStatement	if ( s -> keyframe )		2013594	10					
ANR	2013777	Condition	s -> keyframe	25:7:679:689	2013594	0	True				
ANR	2013778	PtrMemberAccess	s -> keyframe		2013594	0					
ANR	2013779	Identifier	s		2013594	0					
ANR	2013780	Identifier	keyframe		2013594	1					
ANR	2013781	CompoundStatement		25:19:623:623	2013594	1					
ANR	2013782	ExpressionStatement	"set_blocks ( s , level , x , y , null_block . color [ 0 ] , null_block . color [ 1 ] , null_block . color [ 2 ] , null_block . mx , null_block . my , null_block . ref , BLOCK_INTRA )"	27:8:702:850	2013594	0	True				
ANR	2013783	CallExpression	"set_blocks ( s , level , x , y , null_block . color [ 0 ] , null_block . color [ 1 ] , null_block . color [ 2 ] , null_block . mx , null_block . my , null_block . ref , BLOCK_INTRA )"		2013594	0					
ANR	2013784	Callee	set_blocks		2013594	0					
ANR	2013785	Identifier	set_blocks		2013594	0					
ANR	2013786	ArgumentList	s		2013594	1					
ANR	2013787	Argument	s		2013594	0					
ANR	2013788	Identifier	s		2013594	0					
ANR	2013789	Argument	level		2013594	1					
ANR	2013790	Identifier	level		2013594	0					
ANR	2013791	Argument	x		2013594	2					
ANR	2013792	Identifier	x		2013594	0					
ANR	2013793	Argument	y		2013594	3					
ANR	2013794	Identifier	y		2013594	0					
ANR	2013795	Argument	null_block . color [ 0 ]		2013594	4					
ANR	2013796	ArrayIndexing	null_block . color [ 0 ]		2013594	0					
ANR	2013797	MemberAccess	null_block . color		2013594	0					
ANR	2013798	Identifier	null_block		2013594	0					
ANR	2013799	Identifier	color		2013594	1					
ANR	2013800	PrimaryExpression	0		2013594	1					
ANR	2013801	Argument	null_block . color [ 1 ]		2013594	5					
ANR	2013802	ArrayIndexing	null_block . color [ 1 ]		2013594	0					
ANR	2013803	MemberAccess	null_block . color		2013594	0					
ANR	2013804	Identifier	null_block		2013594	0					
ANR	2013805	Identifier	color		2013594	1					
ANR	2013806	PrimaryExpression	1		2013594	1					
ANR	2013807	Argument	null_block . color [ 2 ]		2013594	6					
ANR	2013808	ArrayIndexing	null_block . color [ 2 ]		2013594	0					
ANR	2013809	MemberAccess	null_block . color		2013594	0					
ANR	2013810	Identifier	null_block		2013594	0					
ANR	2013811	Identifier	color		2013594	1					
ANR	2013812	PrimaryExpression	2		2013594	1					
ANR	2013813	Argument	null_block . mx		2013594	7					
ANR	2013814	MemberAccess	null_block . mx		2013594	0					
ANR	2013815	Identifier	null_block		2013594	0					
ANR	2013816	Identifier	mx		2013594	1					
ANR	2013817	Argument	null_block . my		2013594	8					
ANR	2013818	MemberAccess	null_block . my		2013594	0					
ANR	2013819	Identifier	null_block		2013594	0					
ANR	2013820	Identifier	my		2013594	1					
ANR	2013821	Argument	null_block . ref		2013594	9					
ANR	2013822	MemberAccess	null_block . ref		2013594	0					
ANR	2013823	Identifier	null_block		2013594	0					
ANR	2013824	Identifier	ref		2013594	1					
ANR	2013825	Argument	BLOCK_INTRA		2013594	10					
ANR	2013826	Identifier	BLOCK_INTRA		2013594	0					
ANR	2013827	ReturnStatement	return 0 ;	29:8:861:869	2013594	1	True				
ANR	2013828	PrimaryExpression	0		2013594	0					
ANR	2013829	IfStatement	"if ( level == s -> block_max_depth || get_rac ( & s -> c , & s -> block_state [ 4 + s_context ] ) )"		2013594	11					
ANR	2013830	Condition	"level == s -> block_max_depth || get_rac ( & s -> c , & s -> block_state [ 4 + s_context ] )"	35:7:888:962	2013594	0	True				
ANR	2013831	OrExpression	"level == s -> block_max_depth || get_rac ( & s -> c , & s -> block_state [ 4 + s_context ] )"		2013594	0		||			
ANR	2013832	EqualityExpression	level == s -> block_max_depth		2013594	0		==			
ANR	2013833	Identifier	level		2013594	0					
ANR	2013834	PtrMemberAccess	s -> block_max_depth		2013594	1					
ANR	2013835	Identifier	s		2013594	0					
ANR	2013836	Identifier	block_max_depth		2013594	1					
ANR	2013837	CallExpression	"get_rac ( & s -> c , & s -> block_state [ 4 + s_context ] )"		2013594	1					
ANR	2013838	Callee	get_rac		2013594	0					
ANR	2013839	Identifier	get_rac		2013594	0					
ANR	2013840	ArgumentList	& s -> c		2013594	1					
ANR	2013841	Argument	& s -> c		2013594	0					
ANR	2013842	UnaryOperationExpression	& s -> c		2013594	0					
ANR	2013843	UnaryOperator	&		2013594	0					
ANR	2013844	PtrMemberAccess	s -> c		2013594	1					
ANR	2013845	Identifier	s		2013594	0					
ANR	2013846	Identifier	c		2013594	1					
ANR	2013847	Argument	& s -> block_state [ 4 + s_context ]		2013594	1					
ANR	2013848	UnaryOperationExpression	& s -> block_state [ 4 + s_context ]		2013594	0					
ANR	2013849	UnaryOperator	&		2013594	0					
ANR	2013850	ArrayIndexing	s -> block_state [ 4 + s_context ]		2013594	1					
ANR	2013851	PtrMemberAccess	s -> block_state		2013594	0					
ANR	2013852	Identifier	s		2013594	0					
ANR	2013853	Identifier	block_state		2013594	1					
ANR	2013854	AdditiveExpression	4 + s_context		2013594	1		+			
ANR	2013855	PrimaryExpression	4		2013594	0					
ANR	2013856	Identifier	s_context		2013594	1					
ANR	2013857	CompoundStatement		51:8:1232:1323	2013594	1					
ANR	2013858	IdentifierDeclStatement	"int type , mx , my ;"	37:8:975:991	2013594	0	True				
ANR	2013859	IdentifierDecl	type		2013594	0					
ANR	2013860	IdentifierDeclType	int		2013594	0					
ANR	2013861	Identifier	type		2013594	1					
ANR	2013862	IdentifierDecl	mx		2013594	1					
ANR	2013863	IdentifierDeclType	int		2013594	0					
ANR	2013864	Identifier	mx		2013594	1					
ANR	2013865	IdentifierDecl	my		2013594	2					
ANR	2013866	IdentifierDeclType	int		2013594	0					
ANR	2013867	Identifier	my		2013594	1					
ANR	2013868	IdentifierDeclStatement	int l = left -> color [ 0 ] ;	39:8:1002:1024	2013594	1	True				
ANR	2013869	IdentifierDecl	l = left -> color [ 0 ]		2013594	0					
ANR	2013870	IdentifierDeclType	int		2013594	0					
ANR	2013871	Identifier	l		2013594	1					
ANR	2013872	AssignmentExpression	l = left -> color [ 0 ]		2013594	2		=			
ANR	2013873	Identifier	l		2013594	0					
ANR	2013874	ArrayIndexing	left -> color [ 0 ]		2013594	1					
ANR	2013875	PtrMemberAccess	left -> color		2013594	0					
ANR	2013876	Identifier	left		2013594	0					
ANR	2013877	Identifier	color		2013594	1					
ANR	2013878	PrimaryExpression	0		2013594	1					
ANR	2013879	IdentifierDeclStatement	int cb = left -> color [ 1 ] ;	41:8:1035:1057	2013594	2	True				
ANR	2013880	IdentifierDecl	cb = left -> color [ 1 ]		2013594	0					
ANR	2013881	IdentifierDeclType	int		2013594	0					
ANR	2013882	Identifier	cb		2013594	1					
ANR	2013883	AssignmentExpression	cb = left -> color [ 1 ]		2013594	2		=			
ANR	2013884	Identifier	cb		2013594	0					
ANR	2013885	ArrayIndexing	left -> color [ 1 ]		2013594	1					
ANR	2013886	PtrMemberAccess	left -> color		2013594	0					
ANR	2013887	Identifier	left		2013594	0					
ANR	2013888	Identifier	color		2013594	1					
ANR	2013889	PrimaryExpression	1		2013594	1					
ANR	2013890	IdentifierDeclStatement	int cr = left -> color [ 2 ] ;	43:8:1068:1090	2013594	3	True				
ANR	2013891	IdentifierDecl	cr = left -> color [ 2 ]		2013594	0					
ANR	2013892	IdentifierDeclType	int		2013594	0					
ANR	2013893	Identifier	cr		2013594	1					
ANR	2013894	AssignmentExpression	cr = left -> color [ 2 ]		2013594	2		=			
ANR	2013895	Identifier	cr		2013594	0					
ANR	2013896	ArrayIndexing	left -> color [ 2 ]		2013594	1					
ANR	2013897	PtrMemberAccess	left -> color		2013594	0					
ANR	2013898	Identifier	left		2013594	0					
ANR	2013899	Identifier	color		2013594	1					
ANR	2013900	PrimaryExpression	2		2013594	1					
ANR	2013901	IdentifierDeclStatement	unsigned ref = 0 ;	45:8:1101:1117	2013594	4	True				
ANR	2013902	IdentifierDecl	ref = 0		2013594	0					
ANR	2013903	IdentifierDeclType	unsigned		2013594	0					
ANR	2013904	Identifier	ref		2013594	1					
ANR	2013905	AssignmentExpression	ref = 0		2013594	2		=			
ANR	2013906	Identifier	ref		2013594	0					
ANR	2013907	PrimaryExpression	0		2013594	1					
ANR	2013908	IdentifierDeclStatement	int ref_context = av_log2 ( 2 * left -> ref ) + av_log2 ( 2 * top -> ref ) ;	47:8:1128:1187	2013594	5	True				
ANR	2013909	IdentifierDecl	ref_context = av_log2 ( 2 * left -> ref ) + av_log2 ( 2 * top -> ref )		2013594	0					
ANR	2013910	IdentifierDeclType	int		2013594	0					
ANR	2013911	Identifier	ref_context		2013594	1					
ANR	2013912	AssignmentExpression	ref_context = av_log2 ( 2 * left -> ref ) + av_log2 ( 2 * top -> ref )		2013594	2		=			
ANR	2013913	Identifier	ref_context		2013594	0					
ANR	2013914	AdditiveExpression	av_log2 ( 2 * left -> ref ) + av_log2 ( 2 * top -> ref )		2013594	1		+			
ANR	2013915	CallExpression	av_log2 ( 2 * left -> ref )		2013594	0					
ANR	2013916	Callee	av_log2		2013594	0					
ANR	2013917	Identifier	av_log2		2013594	0					
ANR	2013918	ArgumentList	2 * left -> ref		2013594	1					
ANR	2013919	Argument	2 * left -> ref		2013594	0					
ANR	2013920	MultiplicativeExpression	2 * left -> ref		2013594	0		*			
ANR	2013921	PrimaryExpression	2		2013594	0					
ANR	2013922	PtrMemberAccess	left -> ref		2013594	1					
ANR	2013923	Identifier	left		2013594	0					
ANR	2013924	Identifier	ref		2013594	1					
ANR	2013925	CallExpression	av_log2 ( 2 * top -> ref )		2013594	1					
ANR	2013926	Callee	av_log2		2013594	0					
ANR	2013927	Identifier	av_log2		2013594	0					
ANR	2013928	ArgumentList	2 * top -> ref		2013594	1					
ANR	2013929	Argument	2 * top -> ref		2013594	0					
ANR	2013930	MultiplicativeExpression	2 * top -> ref		2013594	0		*			
ANR	2013931	PrimaryExpression	2		2013594	0					
ANR	2013932	PtrMemberAccess	top -> ref		2013594	1					
ANR	2013933	Identifier	top		2013594	0					
ANR	2013934	Identifier	ref		2013594	1					
ANR	2013935	IdentifierDeclStatement	int mx_context = av_log2 ( 2 * FFABS ( left -> mx - top -> mx ) ) + 0 * av_log2 ( 2 * FFABS ( tr -> mx - top -> mx ) ) ;	49:8:1198:1289	2013594	6	True				
ANR	2013936	IdentifierDecl	mx_context = av_log2 ( 2 * FFABS ( left -> mx - top -> mx ) ) + 0 * av_log2 ( 2 * FFABS ( tr -> mx - top -> mx ) )		2013594	0					
ANR	2013937	IdentifierDeclType	int		2013594	0					
ANR	2013938	Identifier	mx_context		2013594	1					
ANR	2013939	AssignmentExpression	mx_context = av_log2 ( 2 * FFABS ( left -> mx - top -> mx ) ) + 0 * av_log2 ( 2 * FFABS ( tr -> mx - top -> mx ) )		2013594	2		=			
ANR	2013940	Identifier	mx_context		2013594	0					
ANR	2013941	AdditiveExpression	av_log2 ( 2 * FFABS ( left -> mx - top -> mx ) ) + 0 * av_log2 ( 2 * FFABS ( tr -> mx - top -> mx ) )		2013594	1		+			
ANR	2013942	CallExpression	av_log2 ( 2 * FFABS ( left -> mx - top -> mx ) )		2013594	0					
ANR	2013943	Callee	av_log2		2013594	0					
ANR	2013944	Identifier	av_log2		2013594	0					
ANR	2013945	ArgumentList	2 * FFABS ( left -> mx - top -> mx )		2013594	1					
ANR	2013946	Argument	2 * FFABS ( left -> mx - top -> mx )		2013594	0					
ANR	2013947	MultiplicativeExpression	2 * FFABS ( left -> mx - top -> mx )		2013594	0		*			
ANR	2013948	PrimaryExpression	2		2013594	0					
ANR	2013949	CallExpression	FFABS ( left -> mx - top -> mx )		2013594	1					
ANR	2013950	Callee	FFABS		2013594	0					
ANR	2013951	Identifier	FFABS		2013594	0					
ANR	2013952	ArgumentList	left -> mx - top -> mx		2013594	1					
ANR	2013953	Argument	left -> mx - top -> mx		2013594	0					
ANR	2013954	AdditiveExpression	left -> mx - top -> mx		2013594	0		-			
ANR	2013955	PtrMemberAccess	left -> mx		2013594	0					
ANR	2013956	Identifier	left		2013594	0					
ANR	2013957	Identifier	mx		2013594	1					
ANR	2013958	PtrMemberAccess	top -> mx		2013594	1					
ANR	2013959	Identifier	top		2013594	0					
ANR	2013960	Identifier	mx		2013594	1					
ANR	2013961	MultiplicativeExpression	0 * av_log2 ( 2 * FFABS ( tr -> mx - top -> mx ) )		2013594	1		*			
ANR	2013962	PrimaryExpression	0		2013594	0					
ANR	2013963	CallExpression	av_log2 ( 2 * FFABS ( tr -> mx - top -> mx ) )		2013594	1					
ANR	2013964	Callee	av_log2		2013594	0					
ANR	2013965	Identifier	av_log2		2013594	0					
ANR	2013966	ArgumentList	2 * FFABS ( tr -> mx - top -> mx )		2013594	1					
ANR	2013967	Argument	2 * FFABS ( tr -> mx - top -> mx )		2013594	0					
ANR	2013968	MultiplicativeExpression	2 * FFABS ( tr -> mx - top -> mx )		2013594	0		*			
ANR	2013969	PrimaryExpression	2		2013594	0					
ANR	2013970	CallExpression	FFABS ( tr -> mx - top -> mx )		2013594	1					
ANR	2013971	Callee	FFABS		2013594	0					
ANR	2013972	Identifier	FFABS		2013594	0					
ANR	2013973	ArgumentList	tr -> mx - top -> mx		2013594	1					
ANR	2013974	Argument	tr -> mx - top -> mx		2013594	0					
ANR	2013975	AdditiveExpression	tr -> mx - top -> mx		2013594	0		-			
ANR	2013976	PtrMemberAccess	tr -> mx		2013594	0					
ANR	2013977	Identifier	tr		2013594	0					
ANR	2013978	Identifier	mx		2013594	1					
ANR	2013979	PtrMemberAccess	top -> mx		2013594	1					
ANR	2013980	Identifier	top		2013594	0					
ANR	2013981	Identifier	mx		2013594	1					
ANR	2013982	IdentifierDeclStatement	int my_context = av_log2 ( 2 * FFABS ( left -> my - top -> my ) ) + 0 * av_log2 ( 2 * FFABS ( tr -> my - top -> my ) ) ;	51:8:1300:1391	2013594	7	True				
ANR	2013983	IdentifierDecl	my_context = av_log2 ( 2 * FFABS ( left -> my - top -> my ) ) + 0 * av_log2 ( 2 * FFABS ( tr -> my - top -> my ) )		2013594	0					
ANR	2013984	IdentifierDeclType	int		2013594	0					
ANR	2013985	Identifier	my_context		2013594	1					
ANR	2013986	AssignmentExpression	my_context = av_log2 ( 2 * FFABS ( left -> my - top -> my ) ) + 0 * av_log2 ( 2 * FFABS ( tr -> my - top -> my ) )		2013594	2		=			
ANR	2013987	Identifier	my_context		2013594	0					
ANR	2013988	AdditiveExpression	av_log2 ( 2 * FFABS ( left -> my - top -> my ) ) + 0 * av_log2 ( 2 * FFABS ( tr -> my - top -> my ) )		2013594	1		+			
ANR	2013989	CallExpression	av_log2 ( 2 * FFABS ( left -> my - top -> my ) )		2013594	0					
ANR	2013990	Callee	av_log2		2013594	0					
ANR	2013991	Identifier	av_log2		2013594	0					
ANR	2013992	ArgumentList	2 * FFABS ( left -> my - top -> my )		2013594	1					
ANR	2013993	Argument	2 * FFABS ( left -> my - top -> my )		2013594	0					
ANR	2013994	MultiplicativeExpression	2 * FFABS ( left -> my - top -> my )		2013594	0		*			
ANR	2013995	PrimaryExpression	2		2013594	0					
ANR	2013996	CallExpression	FFABS ( left -> my - top -> my )		2013594	1					
ANR	2013997	Callee	FFABS		2013594	0					
ANR	2013998	Identifier	FFABS		2013594	0					
ANR	2013999	ArgumentList	left -> my - top -> my		2013594	1					
ANR	2014000	Argument	left -> my - top -> my		2013594	0					
ANR	2014001	AdditiveExpression	left -> my - top -> my		2013594	0		-			
ANR	2014002	PtrMemberAccess	left -> my		2013594	0					
ANR	2014003	Identifier	left		2013594	0					
ANR	2014004	Identifier	my		2013594	1					
ANR	2014005	PtrMemberAccess	top -> my		2013594	1					
ANR	2014006	Identifier	top		2013594	0					
ANR	2014007	Identifier	my		2013594	1					
ANR	2014008	MultiplicativeExpression	0 * av_log2 ( 2 * FFABS ( tr -> my - top -> my ) )		2013594	1		*			
ANR	2014009	PrimaryExpression	0		2013594	0					
ANR	2014010	CallExpression	av_log2 ( 2 * FFABS ( tr -> my - top -> my ) )		2013594	1					
ANR	2014011	Callee	av_log2		2013594	0					
ANR	2014012	Identifier	av_log2		2013594	0					
ANR	2014013	ArgumentList	2 * FFABS ( tr -> my - top -> my )		2013594	1					
ANR	2014014	Argument	2 * FFABS ( tr -> my - top -> my )		2013594	0					
ANR	2014015	MultiplicativeExpression	2 * FFABS ( tr -> my - top -> my )		2013594	0		*			
ANR	2014016	PrimaryExpression	2		2013594	0					
ANR	2014017	CallExpression	FFABS ( tr -> my - top -> my )		2013594	1					
ANR	2014018	Callee	FFABS		2013594	0					
ANR	2014019	Identifier	FFABS		2013594	0					
ANR	2014020	ArgumentList	tr -> my - top -> my		2013594	1					
ANR	2014021	Argument	tr -> my - top -> my		2013594	0					
ANR	2014022	AdditiveExpression	tr -> my - top -> my		2013594	0		-			
ANR	2014023	PtrMemberAccess	tr -> my		2013594	0					
ANR	2014024	Identifier	tr		2013594	0					
ANR	2014025	Identifier	my		2013594	1					
ANR	2014026	PtrMemberAccess	top -> my		2013594	1					
ANR	2014027	Identifier	top		2013594	0					
ANR	2014028	Identifier	my		2013594	1					
ANR	2014029	ExpressionStatement	"type = get_rac ( & s -> c , & s -> block_state [ 1 + left -> type + top -> type ] ) ? BLOCK_INTRA : 0"	55:8:1404:1487	2013594	8	True				
ANR	2014030	AssignmentExpression	"type = get_rac ( & s -> c , & s -> block_state [ 1 + left -> type + top -> type ] ) ? BLOCK_INTRA : 0"		2013594	0		=			
ANR	2014031	Identifier	type		2013594	0					
ANR	2014032	ConditionalExpression	"get_rac ( & s -> c , & s -> block_state [ 1 + left -> type + top -> type ] ) ? BLOCK_INTRA : 0"		2013594	1					
ANR	2014033	Condition	"get_rac ( & s -> c , & s -> block_state [ 1 + left -> type + top -> type ] )"		2013594	0					
ANR	2014034	CallExpression	"get_rac ( & s -> c , & s -> block_state [ 1 + left -> type + top -> type ] )"		2013594	0					
ANR	2014035	Callee	get_rac		2013594	0					
ANR	2014036	Identifier	get_rac		2013594	0					
ANR	2014037	ArgumentList	& s -> c		2013594	1					
ANR	2014038	Argument	& s -> c		2013594	0					
ANR	2014039	UnaryOperationExpression	& s -> c		2013594	0					
ANR	2014040	UnaryOperator	&		2013594	0					
ANR	2014041	PtrMemberAccess	s -> c		2013594	1					
ANR	2014042	Identifier	s		2013594	0					
ANR	2014043	Identifier	c		2013594	1					
ANR	2014044	Argument	& s -> block_state [ 1 + left -> type + top -> type ]		2013594	1					
ANR	2014045	UnaryOperationExpression	& s -> block_state [ 1 + left -> type + top -> type ]		2013594	0					
ANR	2014046	UnaryOperator	&		2013594	0					
ANR	2014047	ArrayIndexing	s -> block_state [ 1 + left -> type + top -> type ]		2013594	1					
ANR	2014048	PtrMemberAccess	s -> block_state		2013594	0					
ANR	2014049	Identifier	s		2013594	0					
ANR	2014050	Identifier	block_state		2013594	1					
ANR	2014051	AdditiveExpression	1 + left -> type + top -> type		2013594	1		+			
ANR	2014052	PrimaryExpression	1		2013594	0					
ANR	2014053	AdditiveExpression	left -> type + top -> type		2013594	1		+			
ANR	2014054	PtrMemberAccess	left -> type		2013594	0					
ANR	2014055	Identifier	left		2013594	0					
ANR	2014056	Identifier	type		2013594	1					
ANR	2014057	PtrMemberAccess	top -> type		2013594	1					
ANR	2014058	Identifier	top		2013594	0					
ANR	2014059	Identifier	type		2013594	1					
ANR	2014060	Identifier	BLOCK_INTRA		2013594	1					
ANR	2014061	PrimaryExpression	0		2013594	2					
ANR	2014062	IfStatement	if ( type )		2013594	9					
ANR	2014063	Condition	type	59:11:1503:1506	2013594	0	True				
ANR	2014064	Identifier	type		2013594	0					
ANR	2014065	CompoundStatement		59:16:1440:1440	2013594	1					
ANR	2014066	ExpressionStatement	"pred_mv ( s , & mx , & my , 0 , left , top , tr )"	61:12:1523:1561	2013594	0	True				
ANR	2014067	CallExpression	"pred_mv ( s , & mx , & my , 0 , left , top , tr )"		2013594	0					
ANR	2014068	Callee	pred_mv		2013594	0					
ANR	2014069	Identifier	pred_mv		2013594	0					
ANR	2014070	ArgumentList	s		2013594	1					
ANR	2014071	Argument	s		2013594	0					
ANR	2014072	Identifier	s		2013594	0					
ANR	2014073	Argument	& mx		2013594	1					
ANR	2014074	UnaryOperationExpression	& mx		2013594	0					
ANR	2014075	UnaryOperator	&		2013594	0					
ANR	2014076	Identifier	mx		2013594	1					
ANR	2014077	Argument	& my		2013594	2					
ANR	2014078	UnaryOperationExpression	& my		2013594	0					
ANR	2014079	UnaryOperator	&		2013594	0					
ANR	2014080	Identifier	my		2013594	1					
ANR	2014081	Argument	0		2013594	3					
ANR	2014082	PrimaryExpression	0		2013594	0					
ANR	2014083	Argument	left		2013594	4					
ANR	2014084	Identifier	left		2013594	0					
ANR	2014085	Argument	top		2013594	5					
ANR	2014086	Identifier	top		2013594	0					
ANR	2014087	Argument	tr		2013594	6					
ANR	2014088	Identifier	tr		2013594	0					
ANR	2014089	ExpressionStatement	"l += get_symbol ( & s -> c , & s -> block_state [ 32 ] , 1 )"	63:12:1576:1622	2013594	1	True				
ANR	2014090	AssignmentExpression	"l += get_symbol ( & s -> c , & s -> block_state [ 32 ] , 1 )"		2013594	0		+=			
ANR	2014091	Identifier	l		2013594	0					
ANR	2014092	CallExpression	"get_symbol ( & s -> c , & s -> block_state [ 32 ] , 1 )"		2013594	1					
ANR	2014093	Callee	get_symbol		2013594	0					
ANR	2014094	Identifier	get_symbol		2013594	0					
ANR	2014095	ArgumentList	& s -> c		2013594	1					
ANR	2014096	Argument	& s -> c		2013594	0					
ANR	2014097	UnaryOperationExpression	& s -> c		2013594	0					
ANR	2014098	UnaryOperator	&		2013594	0					
ANR	2014099	PtrMemberAccess	s -> c		2013594	1					
ANR	2014100	Identifier	s		2013594	0					
ANR	2014101	Identifier	c		2013594	1					
ANR	2014102	Argument	& s -> block_state [ 32 ]		2013594	1					
ANR	2014103	UnaryOperationExpression	& s -> block_state [ 32 ]		2013594	0					
ANR	2014104	UnaryOperator	&		2013594	0					
ANR	2014105	ArrayIndexing	s -> block_state [ 32 ]		2013594	1					
ANR	2014106	PtrMemberAccess	s -> block_state		2013594	0					
ANR	2014107	Identifier	s		2013594	0					
ANR	2014108	Identifier	block_state		2013594	1					
ANR	2014109	PrimaryExpression	32		2013594	1					
ANR	2014110	Argument	1		2013594	2					
ANR	2014111	PrimaryExpression	1		2013594	0					
ANR	2014112	IfStatement	if ( s -> nb_planes > 2 )		2013594	2					
ANR	2014113	Condition	s -> nb_planes > 2	65:16:1641:1656	2013594	0	True				
ANR	2014114	RelationalExpression	s -> nb_planes > 2		2013594	0		>			
ANR	2014115	PtrMemberAccess	s -> nb_planes		2013594	0					
ANR	2014116	Identifier	s		2013594	0					
ANR	2014117	Identifier	nb_planes		2013594	1					
ANR	2014118	PrimaryExpression	2		2013594	1					
ANR	2014119	CompoundStatement		65:34:1591:1591	2013594	1					
ANR	2014120	ExpressionStatement	"cb += get_symbol ( & s -> c , & s -> block_state [ 64 ] , 1 )"	67:16:1678:1724	2013594	0	True				
ANR	2014121	AssignmentExpression	"cb += get_symbol ( & s -> c , & s -> block_state [ 64 ] , 1 )"		2013594	0		+=			
ANR	2014122	Identifier	cb		2013594	0					
ANR	2014123	CallExpression	"get_symbol ( & s -> c , & s -> block_state [ 64 ] , 1 )"		2013594	1					
ANR	2014124	Callee	get_symbol		2013594	0					
ANR	2014125	Identifier	get_symbol		2013594	0					
ANR	2014126	ArgumentList	& s -> c		2013594	1					
ANR	2014127	Argument	& s -> c		2013594	0					
ANR	2014128	UnaryOperationExpression	& s -> c		2013594	0					
ANR	2014129	UnaryOperator	&		2013594	0					
ANR	2014130	PtrMemberAccess	s -> c		2013594	1					
ANR	2014131	Identifier	s		2013594	0					
ANR	2014132	Identifier	c		2013594	1					
ANR	2014133	Argument	& s -> block_state [ 64 ]		2013594	1					
ANR	2014134	UnaryOperationExpression	& s -> block_state [ 64 ]		2013594	0					
ANR	2014135	UnaryOperator	&		2013594	0					
ANR	2014136	ArrayIndexing	s -> block_state [ 64 ]		2013594	1					
ANR	2014137	PtrMemberAccess	s -> block_state		2013594	0					
ANR	2014138	Identifier	s		2013594	0					
ANR	2014139	Identifier	block_state		2013594	1					
ANR	2014140	PrimaryExpression	64		2013594	1					
ANR	2014141	Argument	1		2013594	2					
ANR	2014142	PrimaryExpression	1		2013594	0					
ANR	2014143	ExpressionStatement	"cr += get_symbol ( & s -> c , & s -> block_state [ 96 ] , 1 )"	69:16:1743:1789	2013594	1	True				
ANR	2014144	AssignmentExpression	"cr += get_symbol ( & s -> c , & s -> block_state [ 96 ] , 1 )"		2013594	0		+=			
ANR	2014145	Identifier	cr		2013594	0					
ANR	2014146	CallExpression	"get_symbol ( & s -> c , & s -> block_state [ 96 ] , 1 )"		2013594	1					
ANR	2014147	Callee	get_symbol		2013594	0					
ANR	2014148	Identifier	get_symbol		2013594	0					
ANR	2014149	ArgumentList	& s -> c		2013594	1					
ANR	2014150	Argument	& s -> c		2013594	0					
ANR	2014151	UnaryOperationExpression	& s -> c		2013594	0					
ANR	2014152	UnaryOperator	&		2013594	0					
ANR	2014153	PtrMemberAccess	s -> c		2013594	1					
ANR	2014154	Identifier	s		2013594	0					
ANR	2014155	Identifier	c		2013594	1					
ANR	2014156	Argument	& s -> block_state [ 96 ]		2013594	1					
ANR	2014157	UnaryOperationExpression	& s -> block_state [ 96 ]		2013594	0					
ANR	2014158	UnaryOperator	&		2013594	0					
ANR	2014159	ArrayIndexing	s -> block_state [ 96 ]		2013594	1					
ANR	2014160	PtrMemberAccess	s -> block_state		2013594	0					
ANR	2014161	Identifier	s		2013594	0					
ANR	2014162	Identifier	block_state		2013594	1					
ANR	2014163	PrimaryExpression	96		2013594	1					
ANR	2014164	Argument	1		2013594	2					
ANR	2014165	PrimaryExpression	1		2013594	0					
ANR	2014166	ElseStatement	else		2013594	0					
ANR	2014167	CompoundStatement		73:13:1752:1752	2013594	0					
ANR	2014168	IfStatement	if ( s -> ref_frames > 1 )		2013594	0					
ANR	2014169	Condition	s -> ref_frames > 1	75:15:1838:1854	2013594	0	True				
ANR	2014170	RelationalExpression	s -> ref_frames > 1		2013594	0		>			
ANR	2014171	PtrMemberAccess	s -> ref_frames		2013594	0					
ANR	2014172	Identifier	s		2013594	0					
ANR	2014173	Identifier	ref_frames		2013594	1					
ANR	2014174	PrimaryExpression	1		2013594	1					
ANR	2014175	ExpressionStatement	"ref = get_symbol ( & s -> c , & s -> block_state [ 128 + 1024 + 32 * ref_context ] , 0 )"	77:16:1874:1945	2013594	1	True				
ANR	2014176	AssignmentExpression	"ref = get_symbol ( & s -> c , & s -> block_state [ 128 + 1024 + 32 * ref_context ] , 0 )"		2013594	0		=			
ANR	2014177	Identifier	ref		2013594	0					
ANR	2014178	CallExpression	"get_symbol ( & s -> c , & s -> block_state [ 128 + 1024 + 32 * ref_context ] , 0 )"		2013594	1					
ANR	2014179	Callee	get_symbol		2013594	0					
ANR	2014180	Identifier	get_symbol		2013594	0					
ANR	2014181	ArgumentList	& s -> c		2013594	1					
ANR	2014182	Argument	& s -> c		2013594	0					
ANR	2014183	UnaryOperationExpression	& s -> c		2013594	0					
ANR	2014184	UnaryOperator	&		2013594	0					
ANR	2014185	PtrMemberAccess	s -> c		2013594	1					
ANR	2014186	Identifier	s		2013594	0					
ANR	2014187	Identifier	c		2013594	1					
ANR	2014188	Argument	& s -> block_state [ 128 + 1024 + 32 * ref_context ]		2013594	1					
ANR	2014189	UnaryOperationExpression	& s -> block_state [ 128 + 1024 + 32 * ref_context ]		2013594	0					
ANR	2014190	UnaryOperator	&		2013594	0					
ANR	2014191	ArrayIndexing	s -> block_state [ 128 + 1024 + 32 * ref_context ]		2013594	1					
ANR	2014192	PtrMemberAccess	s -> block_state		2013594	0					
ANR	2014193	Identifier	s		2013594	0					
ANR	2014194	Identifier	block_state		2013594	1					
ANR	2014195	AdditiveExpression	128 + 1024 + 32 * ref_context		2013594	1		+			
ANR	2014196	PrimaryExpression	128		2013594	0					
ANR	2014197	AdditiveExpression	1024 + 32 * ref_context		2013594	1		+			
ANR	2014198	PrimaryExpression	1024		2013594	0					
ANR	2014199	MultiplicativeExpression	32 * ref_context		2013594	1		*			
ANR	2014200	PrimaryExpression	32		2013594	0					
ANR	2014201	Identifier	ref_context		2013594	1					
ANR	2014202	Argument	0		2013594	2					
ANR	2014203	PrimaryExpression	0		2013594	0					
ANR	2014204	IfStatement	if ( ref >= s -> ref_frames )		2013594	1					
ANR	2014205	Condition	ref >= s -> ref_frames	79:16:1964:1983	2013594	0	True				
ANR	2014206	RelationalExpression	ref >= s -> ref_frames		2013594	0		>=			
ANR	2014207	Identifier	ref		2013594	0					
ANR	2014208	PtrMemberAccess	s -> ref_frames		2013594	1					
ANR	2014209	Identifier	s		2013594	0					
ANR	2014210	Identifier	ref_frames		2013594	1					
ANR	2014211	CompoundStatement		79:38:1918:1918	2013594	1					
ANR	2014212	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_ERROR , ""Invalid ref\\n"" )"	81:16:2005:2052	2013594	0	True				
ANR	2014213	CallExpression	"av_log ( s -> avctx , AV_LOG_ERROR , ""Invalid ref\\n"" )"		2013594	0					
ANR	2014214	Callee	av_log		2013594	0					
ANR	2014215	Identifier	av_log		2013594	0					
ANR	2014216	ArgumentList	s -> avctx		2013594	1					
ANR	2014217	Argument	s -> avctx		2013594	0					
ANR	2014218	PtrMemberAccess	s -> avctx		2013594	0					
ANR	2014219	Identifier	s		2013594	0					
ANR	2014220	Identifier	avctx		2013594	1					
ANR	2014221	Argument	AV_LOG_ERROR		2013594	1					
ANR	2014222	Identifier	AV_LOG_ERROR		2013594	0					
ANR	2014223	Argument	"""Invalid ref\\n"""		2013594	2					
ANR	2014224	PrimaryExpression	"""Invalid ref\\n"""		2013594	0					
ANR	2014225	ReturnStatement	return AVERROR_INVALIDDATA ;	83:16:2071:2097	2013594	1	True				
ANR	2014226	Identifier	AVERROR_INVALIDDATA		2013594	0					
ANR	2014227	ExpressionStatement	"pred_mv ( s , & mx , & my , ref , left , top , tr )"	87:12:2127:2167	2013594	2	True				
ANR	2014228	CallExpression	"pred_mv ( s , & mx , & my , ref , left , top , tr )"		2013594	0					
ANR	2014229	Callee	pred_mv		2013594	0					
ANR	2014230	Identifier	pred_mv		2013594	0					
ANR	2014231	ArgumentList	s		2013594	1					
ANR	2014232	Argument	s		2013594	0					
ANR	2014233	Identifier	s		2013594	0					
ANR	2014234	Argument	& mx		2013594	1					
ANR	2014235	UnaryOperationExpression	& mx		2013594	0					
ANR	2014236	UnaryOperator	&		2013594	0					
ANR	2014237	Identifier	mx		2013594	1					
ANR	2014238	Argument	& my		2013594	2					
ANR	2014239	UnaryOperationExpression	& my		2013594	0					
ANR	2014240	UnaryOperator	&		2013594	0					
ANR	2014241	Identifier	my		2013594	1					
ANR	2014242	Argument	ref		2013594	3					
ANR	2014243	Identifier	ref		2013594	0					
ANR	2014244	Argument	left		2013594	4					
ANR	2014245	Identifier	left		2013594	0					
ANR	2014246	Argument	top		2013594	5					
ANR	2014247	Identifier	top		2013594	0					
ANR	2014248	Argument	tr		2013594	6					
ANR	2014249	Identifier	tr		2013594	0					
ANR	2014250	ExpressionStatement	"mx += get_symbol ( & s -> c , & s -> block_state [ 128 + 32 * ( mx_context + 16 * ! ! ref ) ] , 1 )"	89:12:2182:2258	2013594	3	True				
ANR	2014251	AssignmentExpression	"mx += get_symbol ( & s -> c , & s -> block_state [ 128 + 32 * ( mx_context + 16 * ! ! ref ) ] , 1 )"		2013594	0		+=			
ANR	2014252	Identifier	mx		2013594	0					
ANR	2014253	CallExpression	"get_symbol ( & s -> c , & s -> block_state [ 128 + 32 * ( mx_context + 16 * ! ! ref ) ] , 1 )"		2013594	1					
ANR	2014254	Callee	get_symbol		2013594	0					
ANR	2014255	Identifier	get_symbol		2013594	0					
ANR	2014256	ArgumentList	& s -> c		2013594	1					
ANR	2014257	Argument	& s -> c		2013594	0					
ANR	2014258	UnaryOperationExpression	& s -> c		2013594	0					
ANR	2014259	UnaryOperator	&		2013594	0					
ANR	2014260	PtrMemberAccess	s -> c		2013594	1					
ANR	2014261	Identifier	s		2013594	0					
ANR	2014262	Identifier	c		2013594	1					
ANR	2014263	Argument	& s -> block_state [ 128 + 32 * ( mx_context + 16 * ! ! ref ) ]		2013594	1					
ANR	2014264	UnaryOperationExpression	& s -> block_state [ 128 + 32 * ( mx_context + 16 * ! ! ref ) ]		2013594	0					
ANR	2014265	UnaryOperator	&		2013594	0					
ANR	2014266	ArrayIndexing	s -> block_state [ 128 + 32 * ( mx_context + 16 * ! ! ref ) ]		2013594	1					
ANR	2014267	PtrMemberAccess	s -> block_state		2013594	0					
ANR	2014268	Identifier	s		2013594	0					
ANR	2014269	Identifier	block_state		2013594	1					
ANR	2014270	AdditiveExpression	128 + 32 * ( mx_context + 16 * ! ! ref )		2013594	1		+			
ANR	2014271	PrimaryExpression	128		2013594	0					
ANR	2014272	MultiplicativeExpression	32 * ( mx_context + 16 * ! ! ref )		2013594	1		*			
ANR	2014273	PrimaryExpression	32		2013594	0					
ANR	2014274	AdditiveExpression	mx_context + 16 * ! ! ref		2013594	1		+			
ANR	2014275	Identifier	mx_context		2013594	0					
ANR	2014276	MultiplicativeExpression	16 * ! ! ref		2013594	1		*			
ANR	2014277	PrimaryExpression	16		2013594	0					
ANR	2014278	UnaryOperationExpression	! ! ref		2013594	1					
ANR	2014279	UnaryOperator	!		2013594	0					
ANR	2014280	UnaryOperationExpression	! ref		2013594	1					
ANR	2014281	UnaryOperator	!		2013594	0					
ANR	2014282	Identifier	ref		2013594	1					
ANR	2014283	Argument	1		2013594	2					
ANR	2014284	PrimaryExpression	1		2013594	0					
ANR	2014285	ExpressionStatement	"my += get_symbol ( & s -> c , & s -> block_state [ 128 + 32 * ( my_context + 16 * ! ! ref ) ] , 1 )"	91:12:2273:2349	2013594	4	True				
ANR	2014286	AssignmentExpression	"my += get_symbol ( & s -> c , & s -> block_state [ 128 + 32 * ( my_context + 16 * ! ! ref ) ] , 1 )"		2013594	0		+=			
ANR	2014287	Identifier	my		2013594	0					
ANR	2014288	CallExpression	"get_symbol ( & s -> c , & s -> block_state [ 128 + 32 * ( my_context + 16 * ! ! ref ) ] , 1 )"		2013594	1					
ANR	2014289	Callee	get_symbol		2013594	0					
ANR	2014290	Identifier	get_symbol		2013594	0					
ANR	2014291	ArgumentList	& s -> c		2013594	1					
ANR	2014292	Argument	& s -> c		2013594	0					
ANR	2014293	UnaryOperationExpression	& s -> c		2013594	0					
ANR	2014294	UnaryOperator	&		2013594	0					
ANR	2014295	PtrMemberAccess	s -> c		2013594	1					
ANR	2014296	Identifier	s		2013594	0					
ANR	2014297	Identifier	c		2013594	1					
ANR	2014298	Argument	& s -> block_state [ 128 + 32 * ( my_context + 16 * ! ! ref ) ]		2013594	1					
ANR	2014299	UnaryOperationExpression	& s -> block_state [ 128 + 32 * ( my_context + 16 * ! ! ref ) ]		2013594	0					
ANR	2014300	UnaryOperator	&		2013594	0					
ANR	2014301	ArrayIndexing	s -> block_state [ 128 + 32 * ( my_context + 16 * ! ! ref ) ]		2013594	1					
ANR	2014302	PtrMemberAccess	s -> block_state		2013594	0					
ANR	2014303	Identifier	s		2013594	0					
ANR	2014304	Identifier	block_state		2013594	1					
ANR	2014305	AdditiveExpression	128 + 32 * ( my_context + 16 * ! ! ref )		2013594	1		+			
ANR	2014306	PrimaryExpression	128		2013594	0					
ANR	2014307	MultiplicativeExpression	32 * ( my_context + 16 * ! ! ref )		2013594	1		*			
ANR	2014308	PrimaryExpression	32		2013594	0					
ANR	2014309	AdditiveExpression	my_context + 16 * ! ! ref		2013594	1		+			
ANR	2014310	Identifier	my_context		2013594	0					
ANR	2014311	MultiplicativeExpression	16 * ! ! ref		2013594	1		*			
ANR	2014312	PrimaryExpression	16		2013594	0					
ANR	2014313	UnaryOperationExpression	! ! ref		2013594	1					
ANR	2014314	UnaryOperator	!		2013594	0					
ANR	2014315	UnaryOperationExpression	! ref		2013594	1					
ANR	2014316	UnaryOperator	!		2013594	0					
ANR	2014317	Identifier	ref		2013594	1					
ANR	2014318	Argument	1		2013594	2					
ANR	2014319	PrimaryExpression	1		2013594	0					
ANR	2014320	ExpressionStatement	"set_blocks ( s , level , x , y , l , cb , cr , mx , my , ref , type )"	95:8:2371:2427	2013594	10	True				
ANR	2014321	CallExpression	"set_blocks ( s , level , x , y , l , cb , cr , mx , my , ref , type )"		2013594	0					
ANR	2014322	Callee	set_blocks		2013594	0					
ANR	2014323	Identifier	set_blocks		2013594	0					
ANR	2014324	ArgumentList	s		2013594	1					
ANR	2014325	Argument	s		2013594	0					
ANR	2014326	Identifier	s		2013594	0					
ANR	2014327	Argument	level		2013594	1					
ANR	2014328	Identifier	level		2013594	0					
ANR	2014329	Argument	x		2013594	2					
ANR	2014330	Identifier	x		2013594	0					
ANR	2014331	Argument	y		2013594	3					
ANR	2014332	Identifier	y		2013594	0					
ANR	2014333	Argument	l		2013594	4					
ANR	2014334	Identifier	l		2013594	0					
ANR	2014335	Argument	cb		2013594	5					
ANR	2014336	Identifier	cb		2013594	0					
ANR	2014337	Argument	cr		2013594	6					
ANR	2014338	Identifier	cr		2013594	0					
ANR	2014339	Argument	mx		2013594	7					
ANR	2014340	Identifier	mx		2013594	0					
ANR	2014341	Argument	my		2013594	8					
ANR	2014342	Identifier	my		2013594	0					
ANR	2014343	Argument	ref		2013594	9					
ANR	2014344	Identifier	ref		2013594	0					
ANR	2014345	Argument	type		2013594	10					
ANR	2014346	Identifier	type		2013594	0					
ANR	2014347	ElseStatement	else		2013594	0					
ANR	2014348	CompoundStatement		97:9:2371:2371	2013594	0					
ANR	2014349	IfStatement	"if ( ( res = decode_q_branch ( s , level + 1 , 2 * x + 0 , 2 * y + 0 ) ) < 0 || ( res = decode_q_branch ( s , level + 1 , 2 * x + 1 , 2 * y + 0 ) ) < 0 || ( res = decode_q_branch ( s , level + 1 , 2 * x + 0 , 2 * y + 1 ) ) < 0 || ( res = decode_q_branch ( s , level + 1 , 2 * x + 1 , 2 * y + 1 ) ) < 0 )"		2013594	0					
ANR	2014350	Condition	"( res = decode_q_branch ( s , level + 1 , 2 * x + 0 , 2 * y + 0 ) ) < 0 || ( res = decode_q_branch ( s , level + 1 , 2 * x + 1 , 2 * y + 0 ) ) < 0 || ( res = decode_q_branch ( s , level + 1 , 2 * x + 0 , 2 * y + 1 ) ) < 0 || ( res = decode_q_branch ( s , level + 1 , 2 * x + 1 , 2 * y + 1 ) ) < 0"	99:12:2454:2716	2013594	0	True				
ANR	2014351	OrExpression	"( res = decode_q_branch ( s , level + 1 , 2 * x + 0 , 2 * y + 0 ) ) < 0 || ( res = decode_q_branch ( s , level + 1 , 2 * x + 1 , 2 * y + 0 ) ) < 0 || ( res = decode_q_branch ( s , level + 1 , 2 * x + 0 , 2 * y + 1 ) ) < 0 || ( res = decode_q_branch ( s , level + 1 , 2 * x + 1 , 2 * y + 1 ) ) < 0"		2013594	0		||			
ANR	2014352	RelationalExpression	"( res = decode_q_branch ( s , level + 1 , 2 * x + 0 , 2 * y + 0 ) ) < 0"		2013594	0		<			
ANR	2014353	AssignmentExpression	"res = decode_q_branch ( s , level + 1 , 2 * x + 0 , 2 * y + 0 )"		2013594	0		=			
ANR	2014354	Identifier	res		2013594	0					
ANR	2014355	CallExpression	"decode_q_branch ( s , level + 1 , 2 * x + 0 , 2 * y + 0 )"		2013594	1					
ANR	2014356	Callee	decode_q_branch		2013594	0					
ANR	2014357	Identifier	decode_q_branch		2013594	0					
ANR	2014358	ArgumentList	s		2013594	1					
ANR	2014359	Argument	s		2013594	0					
ANR	2014360	Identifier	s		2013594	0					
ANR	2014361	Argument	level + 1		2013594	1					
ANR	2014362	AdditiveExpression	level + 1		2013594	0		+			
ANR	2014363	Identifier	level		2013594	0					
ANR	2014364	PrimaryExpression	1		2013594	1					
ANR	2014365	Argument	2 * x + 0		2013594	2					
ANR	2014366	AdditiveExpression	2 * x + 0		2013594	0		+			
ANR	2014367	MultiplicativeExpression	2 * x		2013594	0		*			
ANR	2014368	PrimaryExpression	2		2013594	0					
ANR	2014369	Identifier	x		2013594	1					
ANR	2014370	PrimaryExpression	0		2013594	1					
ANR	2014371	Argument	2 * y + 0		2013594	3					
ANR	2014372	AdditiveExpression	2 * y + 0		2013594	0		+			
ANR	2014373	MultiplicativeExpression	2 * y		2013594	0		*			
ANR	2014374	PrimaryExpression	2		2013594	0					
ANR	2014375	Identifier	y		2013594	1					
ANR	2014376	PrimaryExpression	0		2013594	1					
ANR	2014377	PrimaryExpression	0		2013594	1					
ANR	2014378	OrExpression	"( res = decode_q_branch ( s , level + 1 , 2 * x + 1 , 2 * y + 0 ) ) < 0 || ( res = decode_q_branch ( s , level + 1 , 2 * x + 0 , 2 * y + 1 ) ) < 0 || ( res = decode_q_branch ( s , level + 1 , 2 * x + 1 , 2 * y + 1 ) ) < 0"		2013594	1		||			
ANR	2014379	RelationalExpression	"( res = decode_q_branch ( s , level + 1 , 2 * x + 1 , 2 * y + 0 ) ) < 0"		2013594	0		<			
ANR	2014380	AssignmentExpression	"res = decode_q_branch ( s , level + 1 , 2 * x + 1 , 2 * y + 0 )"		2013594	0		=			
ANR	2014381	Identifier	res		2013594	0					
ANR	2014382	CallExpression	"decode_q_branch ( s , level + 1 , 2 * x + 1 , 2 * y + 0 )"		2013594	1					
ANR	2014383	Callee	decode_q_branch		2013594	0					
ANR	2014384	Identifier	decode_q_branch		2013594	0					
ANR	2014385	ArgumentList	s		2013594	1					
ANR	2014386	Argument	s		2013594	0					
ANR	2014387	Identifier	s		2013594	0					
ANR	2014388	Argument	level + 1		2013594	1					
ANR	2014389	AdditiveExpression	level + 1		2013594	0		+			
ANR	2014390	Identifier	level		2013594	0					
ANR	2014391	PrimaryExpression	1		2013594	1					
ANR	2014392	Argument	2 * x + 1		2013594	2					
ANR	2014393	AdditiveExpression	2 * x + 1		2013594	0		+			
ANR	2014394	MultiplicativeExpression	2 * x		2013594	0		*			
ANR	2014395	PrimaryExpression	2		2013594	0					
ANR	2014396	Identifier	x		2013594	1					
ANR	2014397	PrimaryExpression	1		2013594	1					
ANR	2014398	Argument	2 * y + 0		2013594	3					
ANR	2014399	AdditiveExpression	2 * y + 0		2013594	0		+			
ANR	2014400	MultiplicativeExpression	2 * y		2013594	0		*			
ANR	2014401	PrimaryExpression	2		2013594	0					
ANR	2014402	Identifier	y		2013594	1					
ANR	2014403	PrimaryExpression	0		2013594	1					
ANR	2014404	PrimaryExpression	0		2013594	1					
ANR	2014405	OrExpression	"( res = decode_q_branch ( s , level + 1 , 2 * x + 0 , 2 * y + 1 ) ) < 0 || ( res = decode_q_branch ( s , level + 1 , 2 * x + 1 , 2 * y + 1 ) ) < 0"		2013594	1		||			
ANR	2014406	RelationalExpression	"( res = decode_q_branch ( s , level + 1 , 2 * x + 0 , 2 * y + 1 ) ) < 0"		2013594	0		<			
ANR	2014407	AssignmentExpression	"res = decode_q_branch ( s , level + 1 , 2 * x + 0 , 2 * y + 1 )"		2013594	0		=			
ANR	2014408	Identifier	res		2013594	0					
ANR	2014409	CallExpression	"decode_q_branch ( s , level + 1 , 2 * x + 0 , 2 * y + 1 )"		2013594	1					
ANR	2014410	Callee	decode_q_branch		2013594	0					
ANR	2014411	Identifier	decode_q_branch		2013594	0					
ANR	2014412	ArgumentList	s		2013594	1					
ANR	2014413	Argument	s		2013594	0					
ANR	2014414	Identifier	s		2013594	0					
ANR	2014415	Argument	level + 1		2013594	1					
ANR	2014416	AdditiveExpression	level + 1		2013594	0		+			
ANR	2014417	Identifier	level		2013594	0					
ANR	2014418	PrimaryExpression	1		2013594	1					
ANR	2014419	Argument	2 * x + 0		2013594	2					
ANR	2014420	AdditiveExpression	2 * x + 0		2013594	0		+			
ANR	2014421	MultiplicativeExpression	2 * x		2013594	0		*			
ANR	2014422	PrimaryExpression	2		2013594	0					
ANR	2014423	Identifier	x		2013594	1					
ANR	2014424	PrimaryExpression	0		2013594	1					
ANR	2014425	Argument	2 * y + 1		2013594	3					
ANR	2014426	AdditiveExpression	2 * y + 1		2013594	0		+			
ANR	2014427	MultiplicativeExpression	2 * y		2013594	0		*			
ANR	2014428	PrimaryExpression	2		2013594	0					
ANR	2014429	Identifier	y		2013594	1					
ANR	2014430	PrimaryExpression	1		2013594	1					
ANR	2014431	PrimaryExpression	0		2013594	1					
ANR	2014432	RelationalExpression	"( res = decode_q_branch ( s , level + 1 , 2 * x + 1 , 2 * y + 1 ) ) < 0"		2013594	1		<			
ANR	2014433	AssignmentExpression	"res = decode_q_branch ( s , level + 1 , 2 * x + 1 , 2 * y + 1 )"		2013594	0		=			
ANR	2014434	Identifier	res		2013594	0					
ANR	2014435	CallExpression	"decode_q_branch ( s , level + 1 , 2 * x + 1 , 2 * y + 1 )"		2013594	1					
ANR	2014436	Callee	decode_q_branch		2013594	0					
ANR	2014437	Identifier	decode_q_branch		2013594	0					
ANR	2014438	ArgumentList	s		2013594	1					
ANR	2014439	Argument	s		2013594	0					
ANR	2014440	Identifier	s		2013594	0					
ANR	2014441	Argument	level + 1		2013594	1					
ANR	2014442	AdditiveExpression	level + 1		2013594	0		+			
ANR	2014443	Identifier	level		2013594	0					
ANR	2014444	PrimaryExpression	1		2013594	1					
ANR	2014445	Argument	2 * x + 1		2013594	2					
ANR	2014446	AdditiveExpression	2 * x + 1		2013594	0		+			
ANR	2014447	MultiplicativeExpression	2 * x		2013594	0		*			
ANR	2014448	PrimaryExpression	2		2013594	0					
ANR	2014449	Identifier	x		2013594	1					
ANR	2014450	PrimaryExpression	1		2013594	1					
ANR	2014451	Argument	2 * y + 1		2013594	3					
ANR	2014452	AdditiveExpression	2 * y + 1		2013594	0		+			
ANR	2014453	MultiplicativeExpression	2 * y		2013594	0		*			
ANR	2014454	PrimaryExpression	2		2013594	0					
ANR	2014455	Identifier	y		2013594	1					
ANR	2014456	PrimaryExpression	1		2013594	1					
ANR	2014457	PrimaryExpression	0		2013594	1					
ANR	2014458	ReturnStatement	return res ;	107:12:2732:2742	2013594	1	True				
ANR	2014459	Identifier	res		2013594	0					
ANR	2014460	ReturnStatement	return 0 ;	111:4:2756:2764	2013594	12	True				
ANR	2014461	PrimaryExpression	0		2013594	0					
ANR	2014462	ReturnType	static int		2013594	1					
ANR	2014463	Identifier	decode_q_branch		2013594	2					
ANR	2014464	ParameterList	"SnowContext * s , int level , int x , int y"		2013594	3					
ANR	2014465	Parameter	SnowContext * s	1:27:27:40	2013594	0	True				
ANR	2014466	ParameterType	SnowContext *		2013594	0					
ANR	2014467	Identifier	s		2013594	1					
ANR	2014468	Parameter	int level	1:43:43:51	2013594	1	True				
ANR	2014469	ParameterType	int		2013594	0					
ANR	2014470	Identifier	level		2013594	1					
ANR	2014471	Parameter	int x	1:54:54:58	2013594	2	True				
ANR	2014472	ParameterType	int		2013594	0					
ANR	2014473	Identifier	x		2013594	1					
ANR	2014474	Parameter	int y	1:61:61:65	2013594	3	True				
ANR	2014475	ParameterType	int		2013594	0					
ANR	2014476	Identifier	y		2013594	1					
ANR	2014477	CFGEntryNode	ENTRY		2013594		True				
ANR	2014478	CFGExitNode	EXIT		2013594		True				
ANR	2014479	Symbol	s -> b_width		2013594						
ANR	2014480	Symbol	s -> keyframe		2013594						
ANR	2014481	Symbol	type		2013594						
ANR	2014482	Symbol	left -> ref		2013594						
ANR	2014483	Symbol	& null_block		2013594						
ANR	2014484	Symbol	ref		2013594						
ANR	2014485	Symbol	* left -> color		2013594						
ANR	2014486	Symbol	tr -> mx		2013594						
ANR	2014487	Symbol	left -> mx		2013594						
ANR	2014488	Symbol	tr -> my		2013594						
ANR	2014489	Symbol	null_block . mx		2013594						
ANR	2014490	Symbol	left -> my		2013594						
ANR	2014491	Symbol	null_block . my		2013594						
ANR	2014492	Symbol	* left		2013594						
ANR	2014493	Symbol	res		2013594						
ANR	2014494	Symbol	get_rac		2013594						
ANR	2014495	Symbol	level		2013594						
ANR	2014496	Symbol	* tr		2013594						
ANR	2014497	Symbol	index		2013594						
ANR	2014498	Symbol	* * left		2013594						
ANR	2014499	Symbol	top -> level		2013594						
ANR	2014500	Symbol	left -> level		2013594						
ANR	2014501	Symbol	mx		2013594						
ANR	2014502	Symbol	my		2013594						
ANR	2014503	Symbol	& s -> c		2013594						
ANR	2014504	Symbol	top -> type		2013594						
ANR	2014505	Symbol	left		2013594						
ANR	2014506	Symbol	s -> block_state		2013594						
ANR	2014507	Symbol	trx		2013594						
ANR	2014508	Symbol	mx_context		2013594						
ANR	2014509	Symbol	s -> avctx		2013594						
ANR	2014510	Symbol	* tl		2013594						
ANR	2014511	Symbol	av_log2		2013594						
ANR	2014512	Symbol	* top		2013594						
ANR	2014513	Symbol	get_symbol		2013594						
ANR	2014514	Symbol	tr -> level		2013594						
ANR	2014515	Symbol	decode_q_branch		2013594						
ANR	2014516	Symbol	* null_block . color		2013594						
ANR	2014517	Symbol	tl -> level		2013594						
ANR	2014518	Symbol	left -> color		2013594						
ANR	2014519	Symbol	s -> block_max_depth		2013594						
ANR	2014520	Symbol	top -> ref		2013594						
ANR	2014521	Symbol	top		2013594						
ANR	2014522	Symbol	cb		2013594						
ANR	2014523	Symbol	ref_context		2013594						
ANR	2014524	Symbol	top -> my		2013594						
ANR	2014525	Symbol	null_block . color		2013594						
ANR	2014526	Symbol	AV_LOG_ERROR		2013594						
ANR	2014527	Symbol	BLOCK_INTRA		2013594						
ANR	2014528	Symbol	left -> type		2013594						
ANR	2014529	Symbol	null_block . ref		2013594						
ANR	2014530	Symbol	s_context		2013594						
ANR	2014531	Symbol	FFABS		2013594						
ANR	2014532	Symbol	l		2013594						
ANR	2014533	Symbol	* null_block		2013594						
ANR	2014534	Symbol	cr		2013594						
ANR	2014535	Symbol	s		2013594						
ANR	2014536	Symbol	& mx		2013594						
ANR	2014537	Symbol	w		2013594						
ANR	2014538	Symbol	& my		2013594						
ANR	2014539	Symbol	s -> nb_planes		2013594						
ANR	2014540	Symbol	x		2013594						
ANR	2014541	Symbol	tl		2013594						
ANR	2014542	Symbol	my_context		2013594						
ANR	2014543	Symbol	y		2013594						
ANR	2014544	Symbol	s -> ref_frames		2013594						
ANR	2014545	Symbol	rem_depth		2013594						
ANR	2014546	Symbol	AVERROR_INVALIDDATA		2013594						
ANR	2014547	Symbol	null_block		2013594						
ANR	2014548	Symbol	* s		2013594						
ANR	2014549	Symbol	s -> block		2013594						
ANR	2014550	Symbol	tr		2013594						
ANR	2014551	Symbol	top -> mx		2013594						
