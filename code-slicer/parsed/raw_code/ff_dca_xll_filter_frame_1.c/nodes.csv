command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3220298	File	/home/p4ultr4n/workplace/ReVeal/raw_code/ff_dca_xll_filter_frame_1.c								
ANR	3220299	Function	ff_dca_xll_filter_frame	1:0:0:5341							
ANR	3220300	FunctionDef	"ff_dca_xll_filter_frame (DCAXllDecoder * s , AVFrame * frame)"		3220299	0					
ANR	3220301	CompoundStatement		3:0:63:5341	3220299	0					
ANR	3220302	IdentifierDeclStatement	AVCodecContext * avctx = s -> avctx ;	5:4:70:102	3220299	0	True				
ANR	3220303	IdentifierDecl	* avctx = s -> avctx		3220299	0					
ANR	3220304	IdentifierDeclType	AVCodecContext *		3220299	0					
ANR	3220305	Identifier	avctx		3220299	1					
ANR	3220306	AssignmentExpression	* avctx = s -> avctx		3220299	2		=			
ANR	3220307	Identifier	avctx		3220299	0					
ANR	3220308	PtrMemberAccess	s -> avctx		3220299	1					
ANR	3220309	Identifier	s		3220299	0					
ANR	3220310	Identifier	avctx		3220299	1					
ANR	3220311	IdentifierDeclStatement	DCAContext * dca = avctx -> priv_data ;	7:4:109:143	3220299	1	True				
ANR	3220312	IdentifierDecl	* dca = avctx -> priv_data		3220299	0					
ANR	3220313	IdentifierDeclType	DCAContext *		3220299	0					
ANR	3220314	Identifier	dca		3220299	1					
ANR	3220315	AssignmentExpression	* dca = avctx -> priv_data		3220299	2		=			
ANR	3220316	Identifier	dca		3220299	0					
ANR	3220317	PtrMemberAccess	avctx -> priv_data		3220299	1					
ANR	3220318	Identifier	avctx		3220299	0					
ANR	3220319	Identifier	priv_data		3220299	1					
ANR	3220320	IdentifierDeclStatement	DCAExssAsset * asset = & dca -> exss . assets [ 0 ] ;	9:4:150:192	3220299	2	True				
ANR	3220321	IdentifierDecl	* asset = & dca -> exss . assets [ 0 ]		3220299	0					
ANR	3220322	IdentifierDeclType	DCAExssAsset *		3220299	0					
ANR	3220323	Identifier	asset		3220299	1					
ANR	3220324	AssignmentExpression	* asset = & dca -> exss . assets [ 0 ]		3220299	2		=			
ANR	3220325	Identifier	asset		3220299	0					
ANR	3220326	UnaryOperationExpression	& dca -> exss . assets [ 0 ]		3220299	1					
ANR	3220327	UnaryOperator	&		3220299	0					
ANR	3220328	ArrayIndexing	dca -> exss . assets [ 0 ]		3220299	1					
ANR	3220329	MemberAccess	dca -> exss . assets		3220299	0					
ANR	3220330	PtrMemberAccess	dca -> exss		3220299	0					
ANR	3220331	Identifier	dca		3220299	0					
ANR	3220332	Identifier	exss		3220299	1					
ANR	3220333	Identifier	assets		3220299	1					
ANR	3220334	PrimaryExpression	0		3220299	1					
ANR	3220335	IdentifierDeclStatement	"DCAXllChSet * p = & s -> chset [ 0 ] , * c ;"	11:4:199:232	3220299	3	True				
ANR	3220336	IdentifierDecl	* p = & s -> chset [ 0 ]		3220299	0					
ANR	3220337	IdentifierDeclType	DCAXllChSet *		3220299	0					
ANR	3220338	Identifier	p		3220299	1					
ANR	3220339	AssignmentExpression	* p = & s -> chset [ 0 ]		3220299	2		=			
ANR	3220340	Identifier	p		3220299	0					
ANR	3220341	UnaryOperationExpression	& s -> chset [ 0 ]		3220299	1					
ANR	3220342	UnaryOperator	&		3220299	0					
ANR	3220343	ArrayIndexing	s -> chset [ 0 ]		3220299	1					
ANR	3220344	PtrMemberAccess	s -> chset		3220299	0					
ANR	3220345	Identifier	s		3220299	0					
ANR	3220346	Identifier	chset		3220299	1					
ANR	3220347	PrimaryExpression	0		3220299	1					
ANR	3220348	IdentifierDecl	* c		3220299	1					
ANR	3220349	IdentifierDeclType	DCAXllChSet *		3220299	0					
ANR	3220350	Identifier	c		3220299	1					
ANR	3220351	IdentifierDeclStatement	enum AVMatrixEncoding matrix_encoding = AV_MATRIX_ENCODING_NONE ;	13:4:239:302	3220299	4	True				
ANR	3220352	IdentifierDecl	matrix_encoding = AV_MATRIX_ENCODING_NONE		3220299	0					
ANR	3220353	IdentifierDeclType	enum AVMatrixEncoding		3220299	0					
ANR	3220354	Identifier	matrix_encoding		3220299	1					
ANR	3220355	AssignmentExpression	matrix_encoding = AV_MATRIX_ENCODING_NONE		3220299	2		=			
ANR	3220356	Identifier	AV_MATRIX_ENCODING_NONE		3220299	0					
ANR	3220357	Identifier	AV_MATRIX_ENCODING_NONE		3220299	1					
ANR	3220358	IdentifierDeclStatement	"int i , j , k , ret , shift , nsamples , request_mask ;"	15:4:309:356	3220299	5	True				
ANR	3220359	IdentifierDecl	i		3220299	0					
ANR	3220360	IdentifierDeclType	int		3220299	0					
ANR	3220361	Identifier	i		3220299	1					
ANR	3220362	IdentifierDecl	j		3220299	1					
ANR	3220363	IdentifierDeclType	int		3220299	0					
ANR	3220364	Identifier	j		3220299	1					
ANR	3220365	IdentifierDecl	k		3220299	2					
ANR	3220366	IdentifierDeclType	int		3220299	0					
ANR	3220367	Identifier	k		3220299	1					
ANR	3220368	IdentifierDecl	ret		3220299	3					
ANR	3220369	IdentifierDeclType	int		3220299	0					
ANR	3220370	Identifier	ret		3220299	1					
ANR	3220371	IdentifierDecl	shift		3220299	4					
ANR	3220372	IdentifierDeclType	int		3220299	0					
ANR	3220373	Identifier	shift		3220299	1					
ANR	3220374	IdentifierDecl	nsamples		3220299	5					
ANR	3220375	IdentifierDeclType	int		3220299	0					
ANR	3220376	Identifier	nsamples		3220299	1					
ANR	3220377	IdentifierDecl	request_mask		3220299	6					
ANR	3220378	IdentifierDeclType	int		3220299	0					
ANR	3220379	Identifier	request_mask		3220299	1					
ANR	3220380	IdentifierDeclStatement	int ch_remap [ DCA_SPEAKER_COUNT ] ;	17:4:363:394	3220299	6	True				
ANR	3220381	IdentifierDecl	ch_remap [ DCA_SPEAKER_COUNT ]		3220299	0					
ANR	3220382	IdentifierDeclType	int [ DCA_SPEAKER_COUNT ]		3220299	0					
ANR	3220383	Identifier	ch_remap		3220299	1					
ANR	3220384	Identifier	DCA_SPEAKER_COUNT		3220299	2					
ANR	3220385	IfStatement	if ( dca -> packet & DCA_PACKET_RECOVERY )		3220299	7					
ANR	3220386	Condition	dca -> packet & DCA_PACKET_RECOVERY	23:8:460:492	3220299	0	True				
ANR	3220387	BitAndExpression	dca -> packet & DCA_PACKET_RECOVERY		3220299	0		&			
ANR	3220388	PtrMemberAccess	dca -> packet		3220299	0					
ANR	3220389	Identifier	dca		3220299	0					
ANR	3220390	Identifier	packet		3220299	1					
ANR	3220391	Identifier	DCA_PACKET_RECOVERY		3220299	1					
ANR	3220392	CompoundStatement		21:43:431:431	3220299	1					
ANR	3220393	ForStatement	"for ( i = 0 , c = s -> chset ; i < s -> nchsets ; i ++ , c ++ )"		3220299	0					
ANR	3220394	ForInit	"i = 0 , c = s -> chset ;"	25:13:511:530	3220299	0	True				
ANR	3220395	Expression	"i = 0 , c = s -> chset"		3220299	0					
ANR	3220396	AssignmentExpression	i = 0		3220299	0		=			
ANR	3220397	Identifier	i		3220299	0					
ANR	3220398	PrimaryExpression	0		3220299	1					
ANR	3220399	AssignmentExpression	c = s -> chset		3220299	1		=			
ANR	3220400	Identifier	c		3220299	0					
ANR	3220401	PtrMemberAccess	s -> chset		3220299	1					
ANR	3220402	Identifier	s		3220299	0					
ANR	3220403	Identifier	chset		3220299	1					
ANR	3220404	Condition	i < s -> nchsets	25:34:532:545	3220299	1	True				
ANR	3220405	RelationalExpression	i < s -> nchsets		3220299	0		<			
ANR	3220406	Identifier	i		3220299	0					
ANR	3220407	PtrMemberAccess	s -> nchsets		3220299	1					
ANR	3220408	Identifier	s		3220299	0					
ANR	3220409	Identifier	nchsets		3220299	1					
ANR	3220410	Expression	"i ++ , c ++"	25:50:548:555	3220299	2	True				
ANR	3220411	PostIncDecOperationExpression	i ++		3220299	0					
ANR	3220412	Identifier	i		3220299	0					
ANR	3220413	IncDec	++		3220299	1					
ANR	3220414	PostIncDecOperationExpression	c ++		3220299	1					
ANR	3220415	Identifier	c		3220299	0					
ANR	3220416	IncDec	++		3220299	1					
ANR	3220417	CompoundStatement		23:60:494:494	3220299	3					
ANR	3220418	IfStatement	if ( i < s -> nactivechsets )		3220299	0					
ANR	3220419	Condition	i < s -> nactivechsets	27:16:577:596	3220299	0	True				
ANR	3220420	RelationalExpression	i < s -> nactivechsets		3220299	0		<			
ANR	3220421	Identifier	i		3220299	0					
ANR	3220422	PtrMemberAccess	s -> nactivechsets		3220299	1					
ANR	3220423	Identifier	s		3220299	0					
ANR	3220424	Identifier	nactivechsets		3220299	1					
ANR	3220425	ExpressionStatement	"force_lossy_output ( s , c )"	29:16:616:640	3220299	1	True				
ANR	3220426	CallExpression	"force_lossy_output ( s , c )"		3220299	0					
ANR	3220427	Callee	force_lossy_output		3220299	0					
ANR	3220428	Identifier	force_lossy_output		3220299	0					
ANR	3220429	ArgumentList	s		3220299	1					
ANR	3220430	Argument	s		3220299	0					
ANR	3220431	Identifier	s		3220299	0					
ANR	3220432	Argument	c		3220299	1					
ANR	3220433	Identifier	c		3220299	0					
ANR	3220434	IfStatement	if ( ! c -> primary_chset )		3220299	1					
ANR	3220435	Condition	! c -> primary_chset	33:16:661:677	3220299	0	True				
ANR	3220436	UnaryOperationExpression	! c -> primary_chset		3220299	0					
ANR	3220437	UnaryOperator	!		3220299	0					
ANR	3220438	PtrMemberAccess	c -> primary_chset		3220299	1					
ANR	3220439	Identifier	c		3220299	0					
ANR	3220440	Identifier	primary_chset		3220299	1					
ANR	3220441	ExpressionStatement	c -> dmix_embedded = 0	35:16:697:717	3220299	1	True				
ANR	3220442	AssignmentExpression	c -> dmix_embedded = 0		3220299	0		=			
ANR	3220443	PtrMemberAccess	c -> dmix_embedded		3220299	0					
ANR	3220444	Identifier	c		3220299	0					
ANR	3220445	Identifier	dmix_embedded		3220299	1					
ANR	3220446	PrimaryExpression	0		3220299	1					
ANR	3220447	ExpressionStatement	s -> scalable_lsbs = 0	41:8:741:761	3220299	1	True				
ANR	3220448	AssignmentExpression	s -> scalable_lsbs = 0		3220299	0		=			
ANR	3220449	PtrMemberAccess	s -> scalable_lsbs		3220299	0					
ANR	3220450	Identifier	s		3220299	0					
ANR	3220451	Identifier	scalable_lsbs		3220299	1					
ANR	3220452	PrimaryExpression	0		3220299	1					
ANR	3220453	ExpressionStatement	s -> fixed_lsb_width = 0	43:8:772:794	3220299	2	True				
ANR	3220454	AssignmentExpression	s -> fixed_lsb_width = 0		3220299	0		=			
ANR	3220455	PtrMemberAccess	s -> fixed_lsb_width		3220299	0					
ANR	3220456	Identifier	s		3220299	0					
ANR	3220457	Identifier	fixed_lsb_width		3220299	1					
ANR	3220458	PrimaryExpression	0		3220299	1					
ANR	3220459	ExpressionStatement	s -> output_mask = 0	51:4:865:883	3220299	8	True				
ANR	3220460	AssignmentExpression	s -> output_mask = 0		3220299	0		=			
ANR	3220461	PtrMemberAccess	s -> output_mask		3220299	0					
ANR	3220462	Identifier	s		3220299	0					
ANR	3220463	Identifier	output_mask		3220299	1					
ANR	3220464	PrimaryExpression	0		3220299	1					
ANR	3220465	ForStatement	"for ( i = 0 , c = s -> chset ; i < s -> nactivechsets ; i ++ , c ++ )"		3220299	9					
ANR	3220466	ForInit	"i = 0 , c = s -> chset ;"	53:9:895:914	3220299	0	True				
ANR	3220467	Expression	"i = 0 , c = s -> chset"		3220299	0					
ANR	3220468	AssignmentExpression	i = 0		3220299	0		=			
ANR	3220469	Identifier	i		3220299	0					
ANR	3220470	PrimaryExpression	0		3220299	1					
ANR	3220471	AssignmentExpression	c = s -> chset		3220299	1		=			
ANR	3220472	Identifier	c		3220299	0					
ANR	3220473	PtrMemberAccess	s -> chset		3220299	1					
ANR	3220474	Identifier	s		3220299	0					
ANR	3220475	Identifier	chset		3220299	1					
ANR	3220476	Condition	i < s -> nactivechsets	53:30:916:935	3220299	1	True				
ANR	3220477	RelationalExpression	i < s -> nactivechsets		3220299	0		<			
ANR	3220478	Identifier	i		3220299	0					
ANR	3220479	PtrMemberAccess	s -> nactivechsets		3220299	1					
ANR	3220480	Identifier	s		3220299	0					
ANR	3220481	Identifier	nactivechsets		3220299	1					
ANR	3220482	Expression	"i ++ , c ++"	53:52:938:945	3220299	2	True				
ANR	3220483	PostIncDecOperationExpression	i ++		3220299	0					
ANR	3220484	Identifier	i		3220299	0					
ANR	3220485	IncDec	++		3220299	1					
ANR	3220486	PostIncDecOperationExpression	c ++		3220299	1					
ANR	3220487	Identifier	c		3220299	0					
ANR	3220488	IncDec	++		3220299	1					
ANR	3220489	CompoundStatement		51:62:884:884	3220299	3					
ANR	3220490	ExpressionStatement	"chs_filter_band_data ( s , c , 0 )"	55:8:959:988	3220299	0	True				
ANR	3220491	CallExpression	"chs_filter_band_data ( s , c , 0 )"		3220299	0					
ANR	3220492	Callee	chs_filter_band_data		3220299	0					
ANR	3220493	Identifier	chs_filter_band_data		3220299	0					
ANR	3220494	ArgumentList	s		3220299	1					
ANR	3220495	Argument	s		3220299	0					
ANR	3220496	Identifier	s		3220299	0					
ANR	3220497	Argument	c		3220299	1					
ANR	3220498	Identifier	c		3220299	0					
ANR	3220499	Argument	0		3220299	2					
ANR	3220500	PrimaryExpression	0		3220299	0					
ANR	3220501	IfStatement	"if ( c -> residual_encode != ( 1 << c -> nchannels ) - 1 && ( ret = combine_residual_frame ( s , c ) ) < 0 )"		3220299	1					
ANR	3220502	Condition	"c -> residual_encode != ( 1 << c -> nchannels ) - 1 && ( ret = combine_residual_frame ( s , c ) ) < 0"	59:12:1005:1106	3220299	0	True				
ANR	3220503	AndExpression	"c -> residual_encode != ( 1 << c -> nchannels ) - 1 && ( ret = combine_residual_frame ( s , c ) ) < 0"		3220299	0		&&			
ANR	3220504	EqualityExpression	c -> residual_encode != ( 1 << c -> nchannels ) - 1		3220299	0		!=			
ANR	3220505	PtrMemberAccess	c -> residual_encode		3220299	0					
ANR	3220506	Identifier	c		3220299	0					
ANR	3220507	Identifier	residual_encode		3220299	1					
ANR	3220508	AdditiveExpression	( 1 << c -> nchannels ) - 1		3220299	1		-			
ANR	3220509	ShiftExpression	1 << c -> nchannels		3220299	0		<<			
ANR	3220510	PrimaryExpression	1		3220299	0					
ANR	3220511	PtrMemberAccess	c -> nchannels		3220299	1					
ANR	3220512	Identifier	c		3220299	0					
ANR	3220513	Identifier	nchannels		3220299	1					
ANR	3220514	PrimaryExpression	1		3220299	1					
ANR	3220515	RelationalExpression	"( ret = combine_residual_frame ( s , c ) ) < 0"		3220299	1		<			
ANR	3220516	AssignmentExpression	"ret = combine_residual_frame ( s , c )"		3220299	0		=			
ANR	3220517	Identifier	ret		3220299	0					
ANR	3220518	CallExpression	"combine_residual_frame ( s , c )"		3220299	1					
ANR	3220519	Callee	combine_residual_frame		3220299	0					
ANR	3220520	Identifier	combine_residual_frame		3220299	0					
ANR	3220521	ArgumentList	s		3220299	1					
ANR	3220522	Argument	s		3220299	0					
ANR	3220523	Identifier	s		3220299	0					
ANR	3220524	Argument	c		3220299	1					
ANR	3220525	Identifier	c		3220299	0					
ANR	3220526	PrimaryExpression	0		3220299	1					
ANR	3220527	ReturnStatement	return ret ;	63:12:1122:1132	3220299	1	True				
ANR	3220528	Identifier	ret		3220299	0					
ANR	3220529	IfStatement	if ( s -> scalable_lsbs )		3220299	2					
ANR	3220530	Condition	s -> scalable_lsbs	67:12:1149:1164	3220299	0	True				
ANR	3220531	PtrMemberAccess	s -> scalable_lsbs		3220299	0					
ANR	3220532	Identifier	s		3220299	0					
ANR	3220533	Identifier	scalable_lsbs		3220299	1					
ANR	3220534	ExpressionStatement	"chs_assemble_msbs_lsbs ( s , c , 0 )"	69:12:1180:1211	3220299	1	True				
ANR	3220535	CallExpression	"chs_assemble_msbs_lsbs ( s , c , 0 )"		3220299	0					
ANR	3220536	Callee	chs_assemble_msbs_lsbs		3220299	0					
ANR	3220537	Identifier	chs_assemble_msbs_lsbs		3220299	0					
ANR	3220538	ArgumentList	s		3220299	1					
ANR	3220539	Argument	s		3220299	0					
ANR	3220540	Identifier	s		3220299	0					
ANR	3220541	Argument	c		3220299	1					
ANR	3220542	Identifier	c		3220299	0					
ANR	3220543	Argument	0		3220299	2					
ANR	3220544	PrimaryExpression	0		3220299	0					
ANR	3220545	IfStatement	if ( c -> nfreqbands > 1 )		3220299	3					
ANR	3220546	Condition	c -> nfreqbands > 1	73:12:1228:1244	3220299	0	True				
ANR	3220547	RelationalExpression	c -> nfreqbands > 1		3220299	0		>			
ANR	3220548	PtrMemberAccess	c -> nfreqbands		3220299	0					
ANR	3220549	Identifier	c		3220299	0					
ANR	3220550	Identifier	nfreqbands		3220299	1					
ANR	3220551	PrimaryExpression	1		3220299	1					
ANR	3220552	CompoundStatement		71:31:1183:1183	3220299	1					
ANR	3220553	ExpressionStatement	"chs_filter_band_data ( s , c , 1 )"	75:12:1262:1291	3220299	0	True				
ANR	3220554	CallExpression	"chs_filter_band_data ( s , c , 1 )"		3220299	0					
ANR	3220555	Callee	chs_filter_band_data		3220299	0					
ANR	3220556	Identifier	chs_filter_band_data		3220299	0					
ANR	3220557	ArgumentList	s		3220299	1					
ANR	3220558	Argument	s		3220299	0					
ANR	3220559	Identifier	s		3220299	0					
ANR	3220560	Argument	c		3220299	1					
ANR	3220561	Identifier	c		3220299	0					
ANR	3220562	Argument	1		3220299	2					
ANR	3220563	PrimaryExpression	1		3220299	0					
ANR	3220564	ExpressionStatement	"chs_assemble_msbs_lsbs ( s , c , 1 )"	77:12:1306:1337	3220299	1	True				
ANR	3220565	CallExpression	"chs_assemble_msbs_lsbs ( s , c , 1 )"		3220299	0					
ANR	3220566	Callee	chs_assemble_msbs_lsbs		3220299	0					
ANR	3220567	Identifier	chs_assemble_msbs_lsbs		3220299	0					
ANR	3220568	ArgumentList	s		3220299	1					
ANR	3220569	Argument	s		3220299	0					
ANR	3220570	Identifier	s		3220299	0					
ANR	3220571	Argument	c		3220299	1					
ANR	3220572	Identifier	c		3220299	0					
ANR	3220573	Argument	1		3220299	2					
ANR	3220574	PrimaryExpression	1		3220299	0					
ANR	3220575	ExpressionStatement	s -> output_mask |= c -> ch_mask	83:8:1361:1389	3220299	4	True				
ANR	3220576	AssignmentExpression	s -> output_mask |= c -> ch_mask		3220299	0		|=			
ANR	3220577	PtrMemberAccess	s -> output_mask		3220299	0					
ANR	3220578	Identifier	s		3220299	0					
ANR	3220579	Identifier	output_mask		3220299	1					
ANR	3220580	PtrMemberAccess	c -> ch_mask		3220299	1					
ANR	3220581	Identifier	c		3220299	0					
ANR	3220582	Identifier	ch_mask		3220299	1					
ANR	3220583	ForStatement	"for ( i = 1 , c = & s -> chset [ 1 ] ; i < s -> nchsets ; i ++ , c ++ )"		3220299	10					
ANR	3220584	ForInit	"i = 1 , c = & s -> chset [ 1 ] ;"	91:9:1464:1487	3220299	0	True				
ANR	3220585	Expression	"i = 1 , c = & s -> chset [ 1 ]"		3220299	0					
ANR	3220586	AssignmentExpression	i = 1		3220299	0		=			
ANR	3220587	Identifier	i		3220299	0					
ANR	3220588	PrimaryExpression	1		3220299	1					
ANR	3220589	AssignmentExpression	c = & s -> chset [ 1 ]		3220299	1		=			
ANR	3220590	Identifier	c		3220299	0					
ANR	3220591	UnaryOperationExpression	& s -> chset [ 1 ]		3220299	1					
ANR	3220592	UnaryOperator	&		3220299	0					
ANR	3220593	ArrayIndexing	s -> chset [ 1 ]		3220299	1					
ANR	3220594	PtrMemberAccess	s -> chset		3220299	0					
ANR	3220595	Identifier	s		3220299	0					
ANR	3220596	Identifier	chset		3220299	1					
ANR	3220597	PrimaryExpression	1		3220299	1					
ANR	3220598	Condition	i < s -> nchsets	91:34:1489:1502	3220299	1	True				
ANR	3220599	RelationalExpression	i < s -> nchsets		3220299	0		<			
ANR	3220600	Identifier	i		3220299	0					
ANR	3220601	PtrMemberAccess	s -> nchsets		3220299	1					
ANR	3220602	Identifier	s		3220299	0					
ANR	3220603	Identifier	nchsets		3220299	1					
ANR	3220604	Expression	"i ++ , c ++"	91:50:1505:1512	3220299	2	True				
ANR	3220605	PostIncDecOperationExpression	i ++		3220299	0					
ANR	3220606	Identifier	i		3220299	0					
ANR	3220607	IncDec	++		3220299	1					
ANR	3220608	PostIncDecOperationExpression	c ++		3220299	1					
ANR	3220609	Identifier	c		3220299	0					
ANR	3220610	IncDec	++		3220299	1					
ANR	3220611	CompoundStatement		89:60:1451:1451	3220299	3					
ANR	3220612	IfStatement	if ( ! is_hier_dmix_chset ( c ) )		3220299	0					
ANR	3220613	Condition	! is_hier_dmix_chset ( c )	93:12:1530:1551	3220299	0	True				
ANR	3220614	UnaryOperationExpression	! is_hier_dmix_chset ( c )		3220299	0					
ANR	3220615	UnaryOperator	!		3220299	0					
ANR	3220616	CallExpression	is_hier_dmix_chset ( c )		3220299	1					
ANR	3220617	Callee	is_hier_dmix_chset		3220299	0					
ANR	3220618	Identifier	is_hier_dmix_chset		3220299	0					
ANR	3220619	ArgumentList	c		3220299	1					
ANR	3220620	Argument	c		3220299	0					
ANR	3220621	Identifier	c		3220299	0					
ANR	3220622	ContinueStatement	continue ;	95:12:1567:1575	3220299	1	True				
ANR	3220623	IfStatement	if ( i >= s -> nactivechsets )		3220299	1					
ANR	3220624	Condition	i >= s -> nactivechsets	99:12:1592:1612	3220299	0	True				
ANR	3220625	RelationalExpression	i >= s -> nactivechsets		3220299	0		>=			
ANR	3220626	Identifier	i		3220299	0					
ANR	3220627	PtrMemberAccess	s -> nactivechsets		3220299	1					
ANR	3220628	Identifier	s		3220299	0					
ANR	3220629	Identifier	nactivechsets		3220299	1					
ANR	3220630	CompoundStatement		97:35:1551:1551	3220299	1					
ANR	3220631	ForStatement	for ( j = 0 ; j < c -> nfreqbands ; j ++ )		3220299	0					
ANR	3220632	ForInit	j = 0 ;	101:17:1635:1640	3220299	0	True				
ANR	3220633	AssignmentExpression	j = 0		3220299	0		=			
ANR	3220634	Identifier	j		3220299	0					
ANR	3220635	PrimaryExpression	0		3220299	1					
ANR	3220636	Condition	j < c -> nfreqbands	101:24:1642:1658	3220299	1	True				
ANR	3220637	RelationalExpression	j < c -> nfreqbands		3220299	0		<			
ANR	3220638	Identifier	j		3220299	0					
ANR	3220639	PtrMemberAccess	c -> nfreqbands		3220299	1					
ANR	3220640	Identifier	c		3220299	0					
ANR	3220641	Identifier	nfreqbands		3220299	1					
ANR	3220642	PostIncDecOperationExpression	j ++	101:43:1661:1663	3220299	2	True				
ANR	3220643	Identifier	j		3220299	0					
ANR	3220644	IncDec	++		3220299	1					
ANR	3220645	IfStatement	if ( c -> bands [ j ] . dmix_embedded )		3220299	3					
ANR	3220646	Condition	c -> bands [ j ] . dmix_embedded	103:20:1687:1711	3220299	0	True				
ANR	3220647	MemberAccess	c -> bands [ j ] . dmix_embedded		3220299	0					
ANR	3220648	ArrayIndexing	c -> bands [ j ]		3220299	0					
ANR	3220649	PtrMemberAccess	c -> bands		3220299	0					
ANR	3220650	Identifier	c		3220299	0					
ANR	3220651	Identifier	bands		3220299	1					
ANR	3220652	Identifier	j		3220299	1					
ANR	3220653	Identifier	dmix_embedded		3220299	1					
ANR	3220654	ExpressionStatement	"scale_down_mix ( s , c , j )"	105:20:1735:1758	3220299	1	True				
ANR	3220655	CallExpression	"scale_down_mix ( s , c , j )"		3220299	0					
ANR	3220656	Callee	scale_down_mix		3220299	0					
ANR	3220657	Identifier	scale_down_mix		3220299	0					
ANR	3220658	ArgumentList	s		3220299	1					
ANR	3220659	Argument	s		3220299	0					
ANR	3220660	Identifier	s		3220299	0					
ANR	3220661	Argument	c		3220299	1					
ANR	3220662	Identifier	c		3220299	0					
ANR	3220663	Argument	j		3220299	2					
ANR	3220664	Identifier	j		3220299	0					
ANR	3220665	BreakStatement	break ;	107:12:1773:1778	3220299	1	True				
ANR	3220666	ForStatement	for ( j = 0 ; j < c -> nfreqbands ; j ++ )		3220299	2					
ANR	3220667	ForInit	j = 0 ;	113:13:1807:1812	3220299	0	True				
ANR	3220668	AssignmentExpression	j = 0		3220299	0		=			
ANR	3220669	Identifier	j		3220299	0					
ANR	3220670	PrimaryExpression	0		3220299	1					
ANR	3220671	Condition	j < c -> nfreqbands	113:20:1814:1830	3220299	1	True				
ANR	3220672	RelationalExpression	j < c -> nfreqbands		3220299	0		<			
ANR	3220673	Identifier	j		3220299	0					
ANR	3220674	PtrMemberAccess	c -> nfreqbands		3220299	1					
ANR	3220675	Identifier	c		3220299	0					
ANR	3220676	Identifier	nfreqbands		3220299	1					
ANR	3220677	PostIncDecOperationExpression	j ++	113:39:1833:1835	3220299	2	True				
ANR	3220678	Identifier	j		3220299	0					
ANR	3220679	IncDec	++		3220299	1					
ANR	3220680	IfStatement	if ( c -> bands [ j ] . dmix_embedded )		3220299	3					
ANR	3220681	Condition	c -> bands [ j ] . dmix_embedded	115:16:1855:1879	3220299	0	True				
ANR	3220682	MemberAccess	c -> bands [ j ] . dmix_embedded		3220299	0					
ANR	3220683	ArrayIndexing	c -> bands [ j ]		3220299	0					
ANR	3220684	PtrMemberAccess	c -> bands		3220299	0					
ANR	3220685	Identifier	c		3220299	0					
ANR	3220686	Identifier	bands		3220299	1					
ANR	3220687	Identifier	j		3220299	1					
ANR	3220688	Identifier	dmix_embedded		3220299	1					
ANR	3220689	ExpressionStatement	"undo_down_mix ( s , c , j )"	117:16:1899:1921	3220299	1	True				
ANR	3220690	CallExpression	"undo_down_mix ( s , c , j )"		3220299	0					
ANR	3220691	Callee	undo_down_mix		3220299	0					
ANR	3220692	Identifier	undo_down_mix		3220299	0					
ANR	3220693	ArgumentList	s		3220299	1					
ANR	3220694	Argument	s		3220299	0					
ANR	3220695	Identifier	s		3220299	0					
ANR	3220696	Argument	c		3220299	1					
ANR	3220697	Identifier	c		3220299	0					
ANR	3220698	Argument	j		3220299	2					
ANR	3220699	Identifier	j		3220299	0					
ANR	3220700	IfStatement	if ( s -> nfreqbands > 1 )		3220299	11					
ANR	3220701	Condition	s -> nfreqbands > 1	125:8:1998:2014	3220299	0	True				
ANR	3220702	RelationalExpression	s -> nfreqbands > 1		3220299	0		>			
ANR	3220703	PtrMemberAccess	s -> nfreqbands		3220299	0					
ANR	3220704	Identifier	s		3220299	0					
ANR	3220705	Identifier	nfreqbands		3220299	1					
ANR	3220706	PrimaryExpression	1		3220299	1					
ANR	3220707	CompoundStatement		123:27:1953:1953	3220299	1					
ANR	3220708	ForStatement	for ( i = 0 ; i < s -> nactivechsets ; i ++ )		3220299	0					
ANR	3220709	ForInit	i = 0 ;	127:13:2033:2038	3220299	0	True				
ANR	3220710	AssignmentExpression	i = 0		3220299	0		=			
ANR	3220711	Identifier	i		3220299	0					
ANR	3220712	PrimaryExpression	0		3220299	1					
ANR	3220713	Condition	i < s -> nactivechsets	127:20:2040:2059	3220299	1	True				
ANR	3220714	RelationalExpression	i < s -> nactivechsets		3220299	0		<			
ANR	3220715	Identifier	i		3220299	0					
ANR	3220716	PtrMemberAccess	s -> nactivechsets		3220299	1					
ANR	3220717	Identifier	s		3220299	0					
ANR	3220718	Identifier	nactivechsets		3220299	1					
ANR	3220719	PostIncDecOperationExpression	i ++	127:42:2062:2064	3220299	2	True				
ANR	3220720	Identifier	i		3220299	0					
ANR	3220721	IncDec	++		3220299	1					
ANR	3220722	IfStatement	"if ( ( ret = chs_assemble_freq_bands ( s , & s -> chset [ i ] ) ) < 0 )"		3220299	3					
ANR	3220723	Condition	"( ret = chs_assemble_freq_bands ( s , & s -> chset [ i ] ) ) < 0"	129:16:2084:2135	3220299	0	True				
ANR	3220724	RelationalExpression	"( ret = chs_assemble_freq_bands ( s , & s -> chset [ i ] ) ) < 0"		3220299	0		<			
ANR	3220725	AssignmentExpression	"ret = chs_assemble_freq_bands ( s , & s -> chset [ i ] )"		3220299	0		=			
ANR	3220726	Identifier	ret		3220299	0					
ANR	3220727	CallExpression	"chs_assemble_freq_bands ( s , & s -> chset [ i ] )"		3220299	1					
ANR	3220728	Callee	chs_assemble_freq_bands		3220299	0					
ANR	3220729	Identifier	chs_assemble_freq_bands		3220299	0					
ANR	3220730	ArgumentList	s		3220299	1					
ANR	3220731	Argument	s		3220299	0					
ANR	3220732	Identifier	s		3220299	0					
ANR	3220733	Argument	& s -> chset [ i ]		3220299	1					
ANR	3220734	UnaryOperationExpression	& s -> chset [ i ]		3220299	0					
ANR	3220735	UnaryOperator	&		3220299	0					
ANR	3220736	ArrayIndexing	s -> chset [ i ]		3220299	1					
ANR	3220737	PtrMemberAccess	s -> chset		3220299	0					
ANR	3220738	Identifier	s		3220299	0					
ANR	3220739	Identifier	chset		3220299	1					
ANR	3220740	Identifier	i		3220299	1					
ANR	3220741	PrimaryExpression	0		3220299	1					
ANR	3220742	ReturnStatement	return ret ;	131:16:2155:2165	3220299	1	True				
ANR	3220743	Identifier	ret		3220299	0					
ANR	3220744	IfStatement	if ( dca -> request_channel_layout )		3220299	12					
ANR	3220745	Condition	dca -> request_channel_layout	139:8:2239:2265	3220299	0	True				
ANR	3220746	PtrMemberAccess	dca -> request_channel_layout		3220299	0					
ANR	3220747	Identifier	dca		3220299	0					
ANR	3220748	Identifier	request_channel_layout		3220299	1					
ANR	3220749	CompoundStatement		137:37:2204:2204	3220299	1					
ANR	3220750	IfStatement	if ( s -> output_mask & DCA_SPEAKER_MASK_Lss )		3220299	0					
ANR	3220751	Condition	s -> output_mask & DCA_SPEAKER_MASK_Lss	141:12:2283:2319	3220299	0	True				
ANR	3220752	BitAndExpression	s -> output_mask & DCA_SPEAKER_MASK_Lss		3220299	0		&			
ANR	3220753	PtrMemberAccess	s -> output_mask		3220299	0					
ANR	3220754	Identifier	s		3220299	0					
ANR	3220755	Identifier	output_mask		3220299	1					
ANR	3220756	Identifier	DCA_SPEAKER_MASK_Lss		3220299	1					
ANR	3220757	CompoundStatement		139:51:2258:2258	3220299	1					
ANR	3220758	ExpressionStatement	s -> output_samples [ DCA_SPEAKER_Ls ] = s -> output_samples [ DCA_SPEAKER_Lss ]	143:12:2337:2407	3220299	0	True				
ANR	3220759	AssignmentExpression	s -> output_samples [ DCA_SPEAKER_Ls ] = s -> output_samples [ DCA_SPEAKER_Lss ]		3220299	0		=			
ANR	3220760	ArrayIndexing	s -> output_samples [ DCA_SPEAKER_Ls ]		3220299	0					
ANR	3220761	PtrMemberAccess	s -> output_samples		3220299	0					
ANR	3220762	Identifier	s		3220299	0					
ANR	3220763	Identifier	output_samples		3220299	1					
ANR	3220764	Identifier	DCA_SPEAKER_Ls		3220299	1					
ANR	3220765	ArrayIndexing	s -> output_samples [ DCA_SPEAKER_Lss ]		3220299	1					
ANR	3220766	PtrMemberAccess	s -> output_samples		3220299	0					
ANR	3220767	Identifier	s		3220299	0					
ANR	3220768	Identifier	output_samples		3220299	1					
ANR	3220769	Identifier	DCA_SPEAKER_Lss		3220299	1					
ANR	3220770	ExpressionStatement	s -> output_mask = ( s -> output_mask & ~DCA_SPEAKER_MASK_Lss ) | DCA_SPEAKER_MASK_Ls	145:12:2422:2501	3220299	1	True				
ANR	3220771	AssignmentExpression	s -> output_mask = ( s -> output_mask & ~DCA_SPEAKER_MASK_Lss ) | DCA_SPEAKER_MASK_Ls		3220299	0		=			
ANR	3220772	PtrMemberAccess	s -> output_mask		3220299	0					
ANR	3220773	Identifier	s		3220299	0					
ANR	3220774	Identifier	output_mask		3220299	1					
ANR	3220775	InclusiveOrExpression	( s -> output_mask & ~DCA_SPEAKER_MASK_Lss ) | DCA_SPEAKER_MASK_Ls		3220299	1		|			
ANR	3220776	BitAndExpression	s -> output_mask & ~DCA_SPEAKER_MASK_Lss		3220299	0		&			
ANR	3220777	PtrMemberAccess	s -> output_mask		3220299	0					
ANR	3220778	Identifier	s		3220299	0					
ANR	3220779	Identifier	output_mask		3220299	1					
ANR	3220780	Identifier	~DCA_SPEAKER_MASK_Lss		3220299	1					
ANR	3220781	Identifier	DCA_SPEAKER_MASK_Ls		3220299	1					
ANR	3220782	IfStatement	if ( s -> output_mask & DCA_SPEAKER_MASK_Rss )		3220299	1					
ANR	3220783	Condition	s -> output_mask & DCA_SPEAKER_MASK_Rss	149:12:2527:2563	3220299	0	True				
ANR	3220784	BitAndExpression	s -> output_mask & DCA_SPEAKER_MASK_Rss		3220299	0		&			
ANR	3220785	PtrMemberAccess	s -> output_mask		3220299	0					
ANR	3220786	Identifier	s		3220299	0					
ANR	3220787	Identifier	output_mask		3220299	1					
ANR	3220788	Identifier	DCA_SPEAKER_MASK_Rss		3220299	1					
ANR	3220789	CompoundStatement		147:51:2502:2502	3220299	1					
ANR	3220790	ExpressionStatement	s -> output_samples [ DCA_SPEAKER_Rs ] = s -> output_samples [ DCA_SPEAKER_Rss ]	151:12:2581:2651	3220299	0	True				
ANR	3220791	AssignmentExpression	s -> output_samples [ DCA_SPEAKER_Rs ] = s -> output_samples [ DCA_SPEAKER_Rss ]		3220299	0		=			
ANR	3220792	ArrayIndexing	s -> output_samples [ DCA_SPEAKER_Rs ]		3220299	0					
ANR	3220793	PtrMemberAccess	s -> output_samples		3220299	0					
ANR	3220794	Identifier	s		3220299	0					
ANR	3220795	Identifier	output_samples		3220299	1					
ANR	3220796	Identifier	DCA_SPEAKER_Rs		3220299	1					
ANR	3220797	ArrayIndexing	s -> output_samples [ DCA_SPEAKER_Rss ]		3220299	1					
ANR	3220798	PtrMemberAccess	s -> output_samples		3220299	0					
ANR	3220799	Identifier	s		3220299	0					
ANR	3220800	Identifier	output_samples		3220299	1					
ANR	3220801	Identifier	DCA_SPEAKER_Rss		3220299	1					
ANR	3220802	ExpressionStatement	s -> output_mask = ( s -> output_mask & ~DCA_SPEAKER_MASK_Rss ) | DCA_SPEAKER_MASK_Rs	153:12:2666:2745	3220299	1	True				
ANR	3220803	AssignmentExpression	s -> output_mask = ( s -> output_mask & ~DCA_SPEAKER_MASK_Rss ) | DCA_SPEAKER_MASK_Rs		3220299	0		=			
ANR	3220804	PtrMemberAccess	s -> output_mask		3220299	0					
ANR	3220805	Identifier	s		3220299	0					
ANR	3220806	Identifier	output_mask		3220299	1					
ANR	3220807	InclusiveOrExpression	( s -> output_mask & ~DCA_SPEAKER_MASK_Rss ) | DCA_SPEAKER_MASK_Rs		3220299	1		|			
ANR	3220808	BitAndExpression	s -> output_mask & ~DCA_SPEAKER_MASK_Rss		3220299	0		&			
ANR	3220809	PtrMemberAccess	s -> output_mask		3220299	0					
ANR	3220810	Identifier	s		3220299	0					
ANR	3220811	Identifier	output_mask		3220299	1					
ANR	3220812	Identifier	~DCA_SPEAKER_MASK_Rss		3220299	1					
ANR	3220813	Identifier	DCA_SPEAKER_MASK_Rs		3220299	1					
ANR	3220814	IfStatement	if ( dca -> request_channel_layout == DCA_SPEAKER_LAYOUT_STEREO && DCA_HAS_STEREO ( s -> output_mask ) && p -> dmix_embedded && ( p -> dmix_type == DCA_DMIX_TYPE_LoRo || p -> dmix_type == DCA_DMIX_TYPE_LtRt ) )		3220299	13					
ANR	3220815	Condition	dca -> request_channel_layout == DCA_SPEAKER_LAYOUT_STEREO && DCA_HAS_STEREO ( s -> output_mask ) && p -> dmix_embedded && ( p -> dmix_type == DCA_DMIX_TYPE_LoRo || p -> dmix_type == DCA_DMIX_TYPE_LtRt )	163:8:2820:3038	3220299	0	True				
ANR	3220816	AndExpression	dca -> request_channel_layout == DCA_SPEAKER_LAYOUT_STEREO && DCA_HAS_STEREO ( s -> output_mask ) && p -> dmix_embedded && ( p -> dmix_type == DCA_DMIX_TYPE_LoRo || p -> dmix_type == DCA_DMIX_TYPE_LtRt )		3220299	0		&&			
ANR	3220817	EqualityExpression	dca -> request_channel_layout == DCA_SPEAKER_LAYOUT_STEREO		3220299	0		==			
ANR	3220818	PtrMemberAccess	dca -> request_channel_layout		3220299	0					
ANR	3220819	Identifier	dca		3220299	0					
ANR	3220820	Identifier	request_channel_layout		3220299	1					
ANR	3220821	Identifier	DCA_SPEAKER_LAYOUT_STEREO		3220299	1					
ANR	3220822	AndExpression	DCA_HAS_STEREO ( s -> output_mask ) && p -> dmix_embedded && ( p -> dmix_type == DCA_DMIX_TYPE_LoRo || p -> dmix_type == DCA_DMIX_TYPE_LtRt )		3220299	1		&&			
ANR	3220823	CallExpression	DCA_HAS_STEREO ( s -> output_mask )		3220299	0					
ANR	3220824	Callee	DCA_HAS_STEREO		3220299	0					
ANR	3220825	Identifier	DCA_HAS_STEREO		3220299	0					
ANR	3220826	ArgumentList	s -> output_mask		3220299	1					
ANR	3220827	Argument	s -> output_mask		3220299	0					
ANR	3220828	PtrMemberAccess	s -> output_mask		3220299	0					
ANR	3220829	Identifier	s		3220299	0					
ANR	3220830	Identifier	output_mask		3220299	1					
ANR	3220831	AndExpression	p -> dmix_embedded && ( p -> dmix_type == DCA_DMIX_TYPE_LoRo || p -> dmix_type == DCA_DMIX_TYPE_LtRt )		3220299	1		&&			
ANR	3220832	PtrMemberAccess	p -> dmix_embedded		3220299	0					
ANR	3220833	Identifier	p		3220299	0					
ANR	3220834	Identifier	dmix_embedded		3220299	1					
ANR	3220835	OrExpression	p -> dmix_type == DCA_DMIX_TYPE_LoRo || p -> dmix_type == DCA_DMIX_TYPE_LtRt		3220299	1		||			
ANR	3220836	EqualityExpression	p -> dmix_type == DCA_DMIX_TYPE_LoRo		3220299	0		==			
ANR	3220837	PtrMemberAccess	p -> dmix_type		3220299	0					
ANR	3220838	Identifier	p		3220299	0					
ANR	3220839	Identifier	dmix_type		3220299	1					
ANR	3220840	Identifier	DCA_DMIX_TYPE_LoRo		3220299	1					
ANR	3220841	EqualityExpression	p -> dmix_type == DCA_DMIX_TYPE_LtRt		3220299	1		==			
ANR	3220842	PtrMemberAccess	p -> dmix_type		3220299	0					
ANR	3220843	Identifier	p		3220299	0					
ANR	3220844	Identifier	dmix_type		3220299	1					
ANR	3220845	Identifier	DCA_DMIX_TYPE_LtRt		3220299	1					
ANR	3220846	ExpressionStatement	request_mask = DCA_SPEAKER_LAYOUT_STEREO	171:8:3050:3090	3220299	1	True				
ANR	3220847	AssignmentExpression	request_mask = DCA_SPEAKER_LAYOUT_STEREO		3220299	0		=			
ANR	3220848	Identifier	request_mask		3220299	0					
ANR	3220849	Identifier	DCA_SPEAKER_LAYOUT_STEREO		3220299	1					
ANR	3220850	ElseStatement	else		3220299	0					
ANR	3220851	ExpressionStatement	request_mask = s -> output_mask	175:8:3111:3140	3220299	0	True				
ANR	3220852	AssignmentExpression	request_mask = s -> output_mask		3220299	0		=			
ANR	3220853	Identifier	request_mask		3220299	0					
ANR	3220854	PtrMemberAccess	s -> output_mask		3220299	1					
ANR	3220855	Identifier	s		3220299	0					
ANR	3220856	Identifier	output_mask		3220299	1					
ANR	3220857	IfStatement	"if ( ! ff_dca_set_channel_layout ( avctx , ch_remap , request_mask ) )"		3220299	14					
ANR	3220858	Condition	"! ff_dca_set_channel_layout ( avctx , ch_remap , request_mask )"	177:8:3151:3207	3220299	0	True				
ANR	3220859	UnaryOperationExpression	"! ff_dca_set_channel_layout ( avctx , ch_remap , request_mask )"		3220299	0					
ANR	3220860	UnaryOperator	!		3220299	0					
ANR	3220861	CallExpression	"ff_dca_set_channel_layout ( avctx , ch_remap , request_mask )"		3220299	1					
ANR	3220862	Callee	ff_dca_set_channel_layout		3220299	0					
ANR	3220863	Identifier	ff_dca_set_channel_layout		3220299	0					
ANR	3220864	ArgumentList	avctx		3220299	1					
ANR	3220865	Argument	avctx		3220299	0					
ANR	3220866	Identifier	avctx		3220299	0					
ANR	3220867	Argument	ch_remap		3220299	1					
ANR	3220868	Identifier	ch_remap		3220299	0					
ANR	3220869	Argument	request_mask		3220299	2					
ANR	3220870	Identifier	request_mask		3220299	0					
ANR	3220871	ReturnStatement	return AVERROR ( EINVAL ) ;	179:8:3219:3241	3220299	1	True				
ANR	3220872	CallExpression	AVERROR ( EINVAL )		3220299	0					
ANR	3220873	Callee	AVERROR		3220299	0					
ANR	3220874	Identifier	AVERROR		3220299	0					
ANR	3220875	ArgumentList	EINVAL		3220299	1					
ANR	3220876	Argument	EINVAL		3220299	0					
ANR	3220877	Identifier	EINVAL		3220299	0					
ANR	3220878	ExpressionStatement	avctx -> sample_rate = p -> freq << ( s -> nfreqbands - 1 )	183:4:3250:3301	3220299	15	True				
ANR	3220879	AssignmentExpression	avctx -> sample_rate = p -> freq << ( s -> nfreqbands - 1 )		3220299	0		=			
ANR	3220880	PtrMemberAccess	avctx -> sample_rate		3220299	0					
ANR	3220881	Identifier	avctx		3220299	0					
ANR	3220882	Identifier	sample_rate		3220299	1					
ANR	3220883	ShiftExpression	p -> freq << ( s -> nfreqbands - 1 )		3220299	1		<<			
ANR	3220884	PtrMemberAccess	p -> freq		3220299	0					
ANR	3220885	Identifier	p		3220299	0					
ANR	3220886	Identifier	freq		3220299	1					
ANR	3220887	AdditiveExpression	s -> nfreqbands - 1		3220299	1		-			
ANR	3220888	PtrMemberAccess	s -> nfreqbands		3220299	0					
ANR	3220889	Identifier	s		3220299	0					
ANR	3220890	Identifier	nfreqbands		3220299	1					
ANR	3220891	PrimaryExpression	1		3220299	1					
ANR	3220892	SwitchStatement	switch ( p -> storage_bit_res )		3220299	16					
ANR	3220893	Condition	p -> storage_bit_res	187:12:3318:3335	3220299	0	True				
ANR	3220894	PtrMemberAccess	p -> storage_bit_res		3220299	0					
ANR	3220895	Identifier	p		3220299	0					
ANR	3220896	Identifier	storage_bit_res		3220299	1					
ANR	3220897	CompoundStatement		185:32:3274:3274	3220299	1					
ANR	3220898	Label	case 16 :	189:4:3345:3352	3220299	0	True				
ANR	3220899	ExpressionStatement	avctx -> sample_fmt = AV_SAMPLE_FMT_S16P	191:8:3363:3401	3220299	1	True				
ANR	3220900	AssignmentExpression	avctx -> sample_fmt = AV_SAMPLE_FMT_S16P		3220299	0		=			
ANR	3220901	PtrMemberAccess	avctx -> sample_fmt		3220299	0					
ANR	3220902	Identifier	avctx		3220299	0					
ANR	3220903	Identifier	sample_fmt		3220299	1					
ANR	3220904	Identifier	AV_SAMPLE_FMT_S16P		3220299	1					
ANR	3220905	ExpressionStatement	shift = 16 - p -> pcm_bit_res	193:8:3412:3439	3220299	2	True				
ANR	3220906	AssignmentExpression	shift = 16 - p -> pcm_bit_res		3220299	0		=			
ANR	3220907	Identifier	shift		3220299	0					
ANR	3220908	AdditiveExpression	16 - p -> pcm_bit_res		3220299	1		-			
ANR	3220909	PrimaryExpression	16		3220299	0					
ANR	3220910	PtrMemberAccess	p -> pcm_bit_res		3220299	1					
ANR	3220911	Identifier	p		3220299	0					
ANR	3220912	Identifier	pcm_bit_res		3220299	1					
ANR	3220913	BreakStatement	break ;	195:8:3450:3455	3220299	3	True				
ANR	3220914	Label	case 20 :	197:4:3462:3469	3220299	4	True				
ANR	3220915	Label	case 24 :	199:4:3476:3483	3220299	5	True				
ANR	3220916	ExpressionStatement	avctx -> sample_fmt = AV_SAMPLE_FMT_S32P	201:8:3494:3532	3220299	6	True				
ANR	3220917	AssignmentExpression	avctx -> sample_fmt = AV_SAMPLE_FMT_S32P		3220299	0		=			
ANR	3220918	PtrMemberAccess	avctx -> sample_fmt		3220299	0					
ANR	3220919	Identifier	avctx		3220299	0					
ANR	3220920	Identifier	sample_fmt		3220299	1					
ANR	3220921	Identifier	AV_SAMPLE_FMT_S32P		3220299	1					
ANR	3220922	ExpressionStatement	shift = 24 - p -> pcm_bit_res	203:8:3543:3570	3220299	7	True				
ANR	3220923	AssignmentExpression	shift = 24 - p -> pcm_bit_res		3220299	0		=			
ANR	3220924	Identifier	shift		3220299	0					
ANR	3220925	AdditiveExpression	24 - p -> pcm_bit_res		3220299	1		-			
ANR	3220926	PrimaryExpression	24		3220299	0					
ANR	3220927	PtrMemberAccess	p -> pcm_bit_res		3220299	1					
ANR	3220928	Identifier	p		3220299	0					
ANR	3220929	Identifier	pcm_bit_res		3220299	1					
ANR	3220930	BreakStatement	break ;	205:8:3581:3586	3220299	8	True				
ANR	3220931	Label	default :	207:4:3593:3600	3220299	9	True				
ANR	3220932	Identifier	default		3220299	0					
ANR	3220933	ReturnStatement	return AVERROR ( EINVAL ) ;	209:8:3611:3633	3220299	10	True				
ANR	3220934	CallExpression	AVERROR ( EINVAL )		3220299	0					
ANR	3220935	Callee	AVERROR		3220299	0					
ANR	3220936	Identifier	AVERROR		3220299	0					
ANR	3220937	ArgumentList	EINVAL		3220299	1					
ANR	3220938	Argument	EINVAL		3220299	0					
ANR	3220939	Identifier	EINVAL		3220299	0					
ANR	3220940	ExpressionStatement	avctx -> bits_per_raw_sample = p -> storage_bit_res	215:4:3649:3696	3220299	17	True				
ANR	3220941	AssignmentExpression	avctx -> bits_per_raw_sample = p -> storage_bit_res		3220299	0		=			
ANR	3220942	PtrMemberAccess	avctx -> bits_per_raw_sample		3220299	0					
ANR	3220943	Identifier	avctx		3220299	0					
ANR	3220944	Identifier	bits_per_raw_sample		3220299	1					
ANR	3220945	PtrMemberAccess	p -> storage_bit_res		3220299	1					
ANR	3220946	Identifier	p		3220299	0					
ANR	3220947	Identifier	storage_bit_res		3220299	1					
ANR	3220948	ExpressionStatement	avctx -> profile = FF_PROFILE_DTS_HD_MA	217:4:3703:3740	3220299	18	True				
ANR	3220949	AssignmentExpression	avctx -> profile = FF_PROFILE_DTS_HD_MA		3220299	0		=			
ANR	3220950	PtrMemberAccess	avctx -> profile		3220299	0					
ANR	3220951	Identifier	avctx		3220299	0					
ANR	3220952	Identifier	profile		3220299	1					
ANR	3220953	Identifier	FF_PROFILE_DTS_HD_MA		3220299	1					
ANR	3220954	ExpressionStatement	avctx -> bit_rate = 0	219:4:3747:3766	3220299	19	True				
ANR	3220955	AssignmentExpression	avctx -> bit_rate = 0		3220299	0		=			
ANR	3220956	PtrMemberAccess	avctx -> bit_rate		3220299	0					
ANR	3220957	Identifier	avctx		3220299	0					
ANR	3220958	Identifier	bit_rate		3220299	1					
ANR	3220959	PrimaryExpression	0		3220299	1					
ANR	3220960	ExpressionStatement	frame -> nb_samples = nsamples = s -> nframesamples << ( s -> nfreqbands - 1 )	223:4:3775:3845	3220299	20	True				
ANR	3220961	AssignmentExpression	frame -> nb_samples = nsamples = s -> nframesamples << ( s -> nfreqbands - 1 )		3220299	0		=			
ANR	3220962	PtrMemberAccess	frame -> nb_samples		3220299	0					
ANR	3220963	Identifier	frame		3220299	0					
ANR	3220964	Identifier	nb_samples		3220299	1					
ANR	3220965	AssignmentExpression	nsamples = s -> nframesamples << ( s -> nfreqbands - 1 )		3220299	1		=			
ANR	3220966	Identifier	nsamples		3220299	0					
ANR	3220967	ShiftExpression	s -> nframesamples << ( s -> nfreqbands - 1 )		3220299	1		<<			
ANR	3220968	PtrMemberAccess	s -> nframesamples		3220299	0					
ANR	3220969	Identifier	s		3220299	0					
ANR	3220970	Identifier	nframesamples		3220299	1					
ANR	3220971	AdditiveExpression	s -> nfreqbands - 1		3220299	1		-			
ANR	3220972	PtrMemberAccess	s -> nfreqbands		3220299	0					
ANR	3220973	Identifier	s		3220299	0					
ANR	3220974	Identifier	nfreqbands		3220299	1					
ANR	3220975	PrimaryExpression	1		3220299	1					
ANR	3220976	IfStatement	"if ( ( ret = ff_get_buffer ( avctx , frame , 0 ) ) < 0 )"		3220299	21					
ANR	3220977	Condition	"( ret = ff_get_buffer ( avctx , frame , 0 ) ) < 0"	225:8:3856:3897	3220299	0	True				
ANR	3220978	RelationalExpression	"( ret = ff_get_buffer ( avctx , frame , 0 ) ) < 0"		3220299	0		<			
ANR	3220979	AssignmentExpression	"ret = ff_get_buffer ( avctx , frame , 0 )"		3220299	0		=			
ANR	3220980	Identifier	ret		3220299	0					
ANR	3220981	CallExpression	"ff_get_buffer ( avctx , frame , 0 )"		3220299	1					
ANR	3220982	Callee	ff_get_buffer		3220299	0					
ANR	3220983	Identifier	ff_get_buffer		3220299	0					
ANR	3220984	ArgumentList	avctx		3220299	1					
ANR	3220985	Argument	avctx		3220299	0					
ANR	3220986	Identifier	avctx		3220299	0					
ANR	3220987	Argument	frame		3220299	1					
ANR	3220988	Identifier	frame		3220299	0					
ANR	3220989	Argument	0		3220299	2					
ANR	3220990	PrimaryExpression	0		3220299	0					
ANR	3220991	PrimaryExpression	0		3220299	1					
ANR	3220992	ReturnStatement	return ret ;	227:8:3909:3919	3220299	1	True				
ANR	3220993	Identifier	ret		3220299	0					
ANR	3220994	IfStatement	if ( request_mask != s -> output_mask )		3220299	22					
ANR	3220995	Condition	request_mask != s -> output_mask	233:8:3978:4007	3220299	0	True				
ANR	3220996	EqualityExpression	request_mask != s -> output_mask		3220299	0		!=			
ANR	3220997	Identifier	request_mask		3220299	0					
ANR	3220998	PtrMemberAccess	s -> output_mask		3220299	1					
ANR	3220999	Identifier	s		3220299	0					
ANR	3221000	Identifier	output_mask		3220299	1					
ANR	3221001	CompoundStatement		231:40:3946:3946	3220299	1					
ANR	3221002	ExpressionStatement	"ff_dca_downmix_to_stereo_fixed ( s -> dcadsp , s -> output_samples , p -> dmix_coeff , nsamples , s -> output_mask )"	235:8:4021:4202	3220299	0	True				
ANR	3221003	CallExpression	"ff_dca_downmix_to_stereo_fixed ( s -> dcadsp , s -> output_samples , p -> dmix_coeff , nsamples , s -> output_mask )"		3220299	0					
ANR	3221004	Callee	ff_dca_downmix_to_stereo_fixed		3220299	0					
ANR	3221005	Identifier	ff_dca_downmix_to_stereo_fixed		3220299	0					
ANR	3221006	ArgumentList	s -> dcadsp		3220299	1					
ANR	3221007	Argument	s -> dcadsp		3220299	0					
ANR	3221008	PtrMemberAccess	s -> dcadsp		3220299	0					
ANR	3221009	Identifier	s		3220299	0					
ANR	3221010	Identifier	dcadsp		3220299	1					
ANR	3221011	Argument	s -> output_samples		3220299	1					
ANR	3221012	PtrMemberAccess	s -> output_samples		3220299	0					
ANR	3221013	Identifier	s		3220299	0					
ANR	3221014	Identifier	output_samples		3220299	1					
ANR	3221015	Argument	p -> dmix_coeff		3220299	2					
ANR	3221016	PtrMemberAccess	p -> dmix_coeff		3220299	0					
ANR	3221017	Identifier	p		3220299	0					
ANR	3221018	Identifier	dmix_coeff		3220299	1					
ANR	3221019	Argument	nsamples		3220299	3					
ANR	3221020	Identifier	nsamples		3220299	0					
ANR	3221021	Argument	s -> output_mask		3220299	4					
ANR	3221022	PtrMemberAccess	s -> output_mask		3220299	0					
ANR	3221023	Identifier	s		3220299	0					
ANR	3221024	Identifier	output_mask		3220299	1					
ANR	3221025	ForStatement	for ( i = 0 ; i < avctx -> channels ; i ++ )		3220299	23					
ANR	3221026	ForInit	i = 0 ;	245:9:4223:4228	3220299	0	True				
ANR	3221027	AssignmentExpression	i = 0		3220299	0		=			
ANR	3221028	Identifier	i		3220299	0					
ANR	3221029	PrimaryExpression	0		3220299	1					
ANR	3221030	Condition	i < avctx -> channels	245:16:4230:4248	3220299	1	True				
ANR	3221031	RelationalExpression	i < avctx -> channels		3220299	0		<			
ANR	3221032	Identifier	i		3220299	0					
ANR	3221033	PtrMemberAccess	avctx -> channels		3220299	1					
ANR	3221034	Identifier	avctx		3220299	0					
ANR	3221035	Identifier	channels		3220299	1					
ANR	3221036	PostIncDecOperationExpression	i ++	245:37:4251:4253	3220299	2	True				
ANR	3221037	Identifier	i		3220299	0					
ANR	3221038	IncDec	++		3220299	1					
ANR	3221039	CompoundStatement		245:8:4203:4252	3220299	3					
ANR	3221040	IdentifierDeclStatement	int32_t * samples = s -> output_samples [ ch_remap [ i ] ] ;	247:8:4267:4316	3220299	0	True				
ANR	3221041	IdentifierDecl	* samples = s -> output_samples [ ch_remap [ i ] ]		3220299	0					
ANR	3221042	IdentifierDeclType	int32_t *		3220299	0					
ANR	3221043	Identifier	samples		3220299	1					
ANR	3221044	AssignmentExpression	* samples = s -> output_samples [ ch_remap [ i ] ]		3220299	2		=			
ANR	3221045	Identifier	samples		3220299	0					
ANR	3221046	ArrayIndexing	s -> output_samples [ ch_remap [ i ] ]		3220299	1					
ANR	3221047	PtrMemberAccess	s -> output_samples		3220299	0					
ANR	3221048	Identifier	s		3220299	0					
ANR	3221049	Identifier	output_samples		3220299	1					
ANR	3221050	ArrayIndexing	ch_remap [ i ]		3220299	1					
ANR	3221051	Identifier	ch_remap		3220299	0					
ANR	3221052	Identifier	i		3220299	1					
ANR	3221053	IfStatement	if ( frame -> format == AV_SAMPLE_FMT_S16P )		3220299	1					
ANR	3221054	Condition	frame -> format == AV_SAMPLE_FMT_S16P	249:12:4331:4365	3220299	0	True				
ANR	3221055	EqualityExpression	frame -> format == AV_SAMPLE_FMT_S16P		3220299	0		==			
ANR	3221056	PtrMemberAccess	frame -> format		3220299	0					
ANR	3221057	Identifier	frame		3220299	0					
ANR	3221058	Identifier	format		3220299	1					
ANR	3221059	Identifier	AV_SAMPLE_FMT_S16P		3220299	1					
ANR	3221060	CompoundStatement		249:12:4319:4370	3220299	1					
ANR	3221061	IdentifierDeclStatement	int16_t * plane = ( int16_t * ) frame -> extended_data [ i ] ;	251:12:4383:4434	3220299	0	True				
ANR	3221062	IdentifierDecl	* plane = ( int16_t * ) frame -> extended_data [ i ]		3220299	0					
ANR	3221063	IdentifierDeclType	int16_t *		3220299	0					
ANR	3221064	Identifier	plane		3220299	1					
ANR	3221065	AssignmentExpression	* plane = ( int16_t * ) frame -> extended_data [ i ]		3220299	2		=			
ANR	3221066	Identifier	plane		3220299	0					
ANR	3221067	CastExpression	( int16_t * ) frame -> extended_data [ i ]		3220299	1					
ANR	3221068	CastTarget	int16_t *		3220299	0					
ANR	3221069	ArrayIndexing	frame -> extended_data [ i ]		3220299	1					
ANR	3221070	PtrMemberAccess	frame -> extended_data		3220299	0					
ANR	3221071	Identifier	frame		3220299	0					
ANR	3221072	Identifier	extended_data		3220299	1					
ANR	3221073	Identifier	i		3220299	1					
ANR	3221074	ForStatement	for ( k = 0 ; k < nsamples ; k ++ )		3220299	1					
ANR	3221075	ForInit	k = 0 ;	253:17:4454:4459	3220299	0	True				
ANR	3221076	AssignmentExpression	k = 0		3220299	0		=			
ANR	3221077	Identifier	k		3220299	0					
ANR	3221078	PrimaryExpression	0		3220299	1					
ANR	3221079	Condition	k < nsamples	253:24:4461:4472	3220299	1	True				
ANR	3221080	RelationalExpression	k < nsamples		3220299	0		<			
ANR	3221081	Identifier	k		3220299	0					
ANR	3221082	Identifier	nsamples		3220299	1					
ANR	3221083	PostIncDecOperationExpression	k ++	253:38:4475:4477	3220299	2	True				
ANR	3221084	Identifier	k		3220299	0					
ANR	3221085	IncDec	++		3220299	1					
ANR	3221086	ExpressionStatement	plane [ k ] = av_clip_int16 ( samples [ k ] * ( 1 << shift ) )	255:16:4497:4548	3220299	3	True				
ANR	3221087	AssignmentExpression	plane [ k ] = av_clip_int16 ( samples [ k ] * ( 1 << shift ) )		3220299	0		=			
ANR	3221088	ArrayIndexing	plane [ k ]		3220299	0					
ANR	3221089	Identifier	plane		3220299	0					
ANR	3221090	Identifier	k		3220299	1					
ANR	3221091	CallExpression	av_clip_int16 ( samples [ k ] * ( 1 << shift ) )		3220299	1					
ANR	3221092	Callee	av_clip_int16		3220299	0					
ANR	3221093	Identifier	av_clip_int16		3220299	0					
ANR	3221094	ArgumentList	samples [ k ] * ( 1 << shift )		3220299	1					
ANR	3221095	Argument	samples [ k ] * ( 1 << shift )		3220299	0					
ANR	3221096	MultiplicativeExpression	samples [ k ] * ( 1 << shift )		3220299	0		*			
ANR	3221097	ArrayIndexing	samples [ k ]		3220299	0					
ANR	3221098	Identifier	samples		3220299	0					
ANR	3221099	Identifier	k		3220299	1					
ANR	3221100	ShiftExpression	1 << shift		3220299	1		<<			
ANR	3221101	PrimaryExpression	1		3220299	0					
ANR	3221102	Identifier	shift		3220299	1					
ANR	3221103	ElseStatement	else		3220299	0					
ANR	3221104	CompoundStatement		257:12:4517:4568	3220299	0					
ANR	3221105	IdentifierDeclStatement	int32_t * plane = ( int32_t * ) frame -> extended_data [ i ] ;	259:12:4581:4632	3220299	0	True				
ANR	3221106	IdentifierDecl	* plane = ( int32_t * ) frame -> extended_data [ i ]		3220299	0					
ANR	3221107	IdentifierDeclType	int32_t *		3220299	0					
ANR	3221108	Identifier	plane		3220299	1					
ANR	3221109	AssignmentExpression	* plane = ( int32_t * ) frame -> extended_data [ i ]		3220299	2		=			
ANR	3221110	Identifier	plane		3220299	0					
ANR	3221111	CastExpression	( int32_t * ) frame -> extended_data [ i ]		3220299	1					
ANR	3221112	CastTarget	int32_t *		3220299	0					
ANR	3221113	ArrayIndexing	frame -> extended_data [ i ]		3220299	1					
ANR	3221114	PtrMemberAccess	frame -> extended_data		3220299	0					
ANR	3221115	Identifier	frame		3220299	0					
ANR	3221116	Identifier	extended_data		3220299	1					
ANR	3221117	Identifier	i		3220299	1					
ANR	3221118	ForStatement	for ( k = 0 ; k < nsamples ; k ++ )		3220299	1					
ANR	3221119	ForInit	k = 0 ;	261:17:4652:4657	3220299	0	True				
ANR	3221120	AssignmentExpression	k = 0		3220299	0		=			
ANR	3221121	Identifier	k		3220299	0					
ANR	3221122	PrimaryExpression	0		3220299	1					
ANR	3221123	Condition	k < nsamples	261:24:4659:4670	3220299	1	True				
ANR	3221124	RelationalExpression	k < nsamples		3220299	0		<			
ANR	3221125	Identifier	k		3220299	0					
ANR	3221126	Identifier	nsamples		3220299	1					
ANR	3221127	PostIncDecOperationExpression	k ++	261:38:4673:4675	3220299	2	True				
ANR	3221128	Identifier	k		3220299	0					
ANR	3221129	IncDec	++		3220299	1					
ANR	3221130	ExpressionStatement	plane [ k ] = clip23 ( samples [ k ] * ( 1 << shift ) ) * ( 1 << 8 )	263:16:4695:4750	3220299	3	True				
ANR	3221131	AssignmentExpression	plane [ k ] = clip23 ( samples [ k ] * ( 1 << shift ) ) * ( 1 << 8 )		3220299	0		=			
ANR	3221132	ArrayIndexing	plane [ k ]		3220299	0					
ANR	3221133	Identifier	plane		3220299	0					
ANR	3221134	Identifier	k		3220299	1					
ANR	3221135	MultiplicativeExpression	clip23 ( samples [ k ] * ( 1 << shift ) ) * ( 1 << 8 )		3220299	1		*			
ANR	3221136	CallExpression	clip23 ( samples [ k ] * ( 1 << shift ) )		3220299	0					
ANR	3221137	Callee	clip23		3220299	0					
ANR	3221138	Identifier	clip23		3220299	0					
ANR	3221139	ArgumentList	samples [ k ] * ( 1 << shift )		3220299	1					
ANR	3221140	Argument	samples [ k ] * ( 1 << shift )		3220299	0					
ANR	3221141	MultiplicativeExpression	samples [ k ] * ( 1 << shift )		3220299	0		*			
ANR	3221142	ArrayIndexing	samples [ k ]		3220299	0					
ANR	3221143	Identifier	samples		3220299	0					
ANR	3221144	Identifier	k		3220299	1					
ANR	3221145	ShiftExpression	1 << shift		3220299	1		<<			
ANR	3221146	PrimaryExpression	1		3220299	0					
ANR	3221147	Identifier	shift		3220299	1					
ANR	3221148	ShiftExpression	1 << 8		3220299	1		<<			
ANR	3221149	PrimaryExpression	1		3220299	0					
ANR	3221150	PrimaryExpression	8		3220299	1					
ANR	3221151	IfStatement	if ( ! asset -> one_to_one_map_ch_to_spkr )		3220299	24					
ANR	3221152	Condition	! asset -> one_to_one_map_ch_to_spkr	271:8:4781:4813	3220299	0	True				
ANR	3221153	UnaryOperationExpression	! asset -> one_to_one_map_ch_to_spkr		3220299	0					
ANR	3221154	UnaryOperator	!		3220299	0					
ANR	3221155	PtrMemberAccess	asset -> one_to_one_map_ch_to_spkr		3220299	1					
ANR	3221156	Identifier	asset		3220299	0					
ANR	3221157	Identifier	one_to_one_map_ch_to_spkr		3220299	1					
ANR	3221158	CompoundStatement		269:43:4752:4752	3220299	1					
ANR	3221159	IfStatement	if ( asset -> representation_type == DCA_REPR_TYPE_LtRt )		3220299	0					
ANR	3221160	Condition	asset -> representation_type == DCA_REPR_TYPE_LtRt	273:12:4831:4878	3220299	0	True				
ANR	3221161	EqualityExpression	asset -> representation_type == DCA_REPR_TYPE_LtRt		3220299	0		==			
ANR	3221162	PtrMemberAccess	asset -> representation_type		3220299	0					
ANR	3221163	Identifier	asset		3220299	0					
ANR	3221164	Identifier	representation_type		3220299	1					
ANR	3221165	Identifier	DCA_REPR_TYPE_LtRt		3220299	1					
ANR	3221166	ExpressionStatement	matrix_encoding = AV_MATRIX_ENCODING_DOLBY	275:12:4894:4936	3220299	1	True				
ANR	3221167	AssignmentExpression	matrix_encoding = AV_MATRIX_ENCODING_DOLBY		3220299	0		=			
ANR	3221168	Identifier	matrix_encoding		3220299	0					
ANR	3221169	Identifier	AV_MATRIX_ENCODING_DOLBY		3220299	1					
ANR	3221170	ElseStatement	else		3220299	0					
ANR	3221171	IfStatement	if ( asset -> representation_type == DCA_REPR_TYPE_LhRh )		3220299	0					
ANR	3221172	Condition	asset -> representation_type == DCA_REPR_TYPE_LhRh	277:17:4956:5003	3220299	0	True				
ANR	3221173	EqualityExpression	asset -> representation_type == DCA_REPR_TYPE_LhRh		3220299	0		==			
ANR	3221174	PtrMemberAccess	asset -> representation_type		3220299	0					
ANR	3221175	Identifier	asset		3220299	0					
ANR	3221176	Identifier	representation_type		3220299	1					
ANR	3221177	Identifier	DCA_REPR_TYPE_LhRh		3220299	1					
ANR	3221178	ExpressionStatement	matrix_encoding = AV_MATRIX_ENCODING_DOLBYHEADPHONE	279:12:5019:5070	3220299	1	True				
ANR	3221179	AssignmentExpression	matrix_encoding = AV_MATRIX_ENCODING_DOLBYHEADPHONE		3220299	0		=			
ANR	3221180	Identifier	matrix_encoding		3220299	0					
ANR	3221181	Identifier	AV_MATRIX_ENCODING_DOLBYHEADPHONE		3220299	1					
ANR	3221182	ElseStatement	else		3220299	0					
ANR	3221183	IfStatement	if ( request_mask != s -> output_mask && p -> dmix_type == DCA_DMIX_TYPE_LtRt )		3220299	0					
ANR	3221184	Condition	request_mask != s -> output_mask && p -> dmix_type == DCA_DMIX_TYPE_LtRt	281:15:5088:5155	3220299	0	True				
ANR	3221185	AndExpression	request_mask != s -> output_mask && p -> dmix_type == DCA_DMIX_TYPE_LtRt		3220299	0		&&			
ANR	3221186	EqualityExpression	request_mask != s -> output_mask		3220299	0		!=			
ANR	3221187	Identifier	request_mask		3220299	0					
ANR	3221188	PtrMemberAccess	s -> output_mask		3220299	1					
ANR	3221189	Identifier	s		3220299	0					
ANR	3221190	Identifier	output_mask		3220299	1					
ANR	3221191	EqualityExpression	p -> dmix_type == DCA_DMIX_TYPE_LtRt		3220299	1		==			
ANR	3221192	PtrMemberAccess	p -> dmix_type		3220299	0					
ANR	3221193	Identifier	p		3220299	0					
ANR	3221194	Identifier	dmix_type		3220299	1					
ANR	3221195	Identifier	DCA_DMIX_TYPE_LtRt		3220299	1					
ANR	3221196	CompoundStatement		279:85:5094:5094	3220299	1					
ANR	3221197	ExpressionStatement	matrix_encoding = AV_MATRIX_ENCODING_DOLBY	283:8:5169:5211	3220299	0	True				
ANR	3221198	AssignmentExpression	matrix_encoding = AV_MATRIX_ENCODING_DOLBY		3220299	0		=			
ANR	3221199	Identifier	matrix_encoding		3220299	0					
ANR	3221200	Identifier	AV_MATRIX_ENCODING_DOLBY		3220299	1					
ANR	3221201	IfStatement	"if ( ( ret = ff_side_data_update_matrix_encoding ( frame , matrix_encoding ) ) < 0 )"		3220299	25					
ANR	3221202	Condition	"( ret = ff_side_data_update_matrix_encoding ( frame , matrix_encoding ) ) < 0"	287:8:5229:5299	3220299	0	True				
ANR	3221203	RelationalExpression	"( ret = ff_side_data_update_matrix_encoding ( frame , matrix_encoding ) ) < 0"		3220299	0		<			
ANR	3221204	AssignmentExpression	"ret = ff_side_data_update_matrix_encoding ( frame , matrix_encoding )"		3220299	0		=			
ANR	3221205	Identifier	ret		3220299	0					
ANR	3221206	CallExpression	"ff_side_data_update_matrix_encoding ( frame , matrix_encoding )"		3220299	1					
ANR	3221207	Callee	ff_side_data_update_matrix_encoding		3220299	0					
ANR	3221208	Identifier	ff_side_data_update_matrix_encoding		3220299	0					
ANR	3221209	ArgumentList	frame		3220299	1					
ANR	3221210	Argument	frame		3220299	0					
ANR	3221211	Identifier	frame		3220299	0					
ANR	3221212	Argument	matrix_encoding		3220299	1					
ANR	3221213	Identifier	matrix_encoding		3220299	0					
ANR	3221214	PrimaryExpression	0		3220299	1					
ANR	3221215	ReturnStatement	return ret ;	289:8:5311:5321	3220299	1	True				
ANR	3221216	Identifier	ret		3220299	0					
ANR	3221217	ReturnStatement	return 0 ;	293:4:5330:5338	3220299	26	True				
ANR	3221218	PrimaryExpression	0		3220299	0					
ANR	3221219	ReturnType	int		3220299	1					
ANR	3221220	Identifier	ff_dca_xll_filter_frame		3220299	2					
ANR	3221221	ParameterList	"DCAXllDecoder * s , AVFrame * frame"		3220299	3					
ANR	3221222	Parameter	DCAXllDecoder * s	1:28:28:43	3220299	0	True				
ANR	3221223	ParameterType	DCAXllDecoder *		3220299	0					
ANR	3221224	Identifier	s		3220299	1					
ANR	3221225	Parameter	AVFrame * frame	1:46:46:59	3220299	1	True				
ANR	3221226	ParameterType	AVFrame *		3220299	0					
ANR	3221227	Identifier	frame		3220299	1					
ANR	3221228	CFGEntryNode	ENTRY		3220299		True				
ANR	3221229	CFGExitNode	EXIT		3220299		True				
ANR	3221230	Symbol	plane		3220299						
ANR	3221231	Symbol	* DCA_SPEAKER_Lss		3220299						
ANR	3221232	Symbol	AV_MATRIX_ENCODING_DOLBYHEADPHONE		3220299						
ANR	3221233	Symbol	dca -> exss		3220299						
ANR	3221234	Symbol	c -> nfreqbands		3220299						
ANR	3221235	Symbol	shift		3220299						
ANR	3221236	Symbol	dca -> request_channel_layout		3220299						
ANR	3221237	Symbol	DCA_SPEAKER_Rs		3220299						
ANR	3221238	Symbol	DCA_DMIX_TYPE_LoRo		3220299						
ANR	3221239	Symbol	avctx -> bits_per_raw_sample		3220299						
ANR	3221240	Symbol	DCA_REPR_TYPE_LhRh		3220299						
ANR	3221241	Symbol	combine_residual_frame		3220299						
ANR	3221242	Symbol	DCA_HAS_STEREO		3220299						
ANR	3221243	Symbol	s -> fixed_lsb_width		3220299						
ANR	3221244	Symbol	asset -> representation_type		3220299						
ANR	3221245	Symbol	* frame -> extended_data		3220299						
ANR	3221246	Symbol	c -> primary_chset		3220299						
ANR	3221247	Symbol	s -> scalable_lsbs		3220299						
ANR	3221248	Symbol	s -> nactivechsets		3220299						
ANR	3221249	Symbol	avctx -> sample_fmt		3220299						
ANR	3221250	Symbol	s -> dcadsp		3220299						
ANR	3221251	Symbol	~DCA_SPEAKER_MASK_Lss		3220299						
ANR	3221252	Symbol	AV_SAMPLE_FMT_S32P		3220299						
ANR	3221253	Symbol	AV_SAMPLE_FMT_S16P		3220299						
ANR	3221254	Symbol	p -> dmix_embedded		3220299						
ANR	3221255	Symbol	c -> ch_mask		3220299						
ANR	3221256	Symbol	* s -> output_samples		3220299						
ANR	3221257	Symbol	samples		3220299						
ANR	3221258	Symbol	DCA_SPEAKER_MASK_Rs		3220299						
ANR	3221259	Symbol	c -> dmix_embedded		3220299						
ANR	3221260	Symbol	DCA_SPEAKER_Lss		3220299						
ANR	3221261	Symbol	nsamples		3220299						
ANR	3221262	Symbol	avctx -> bit_rate		3220299						
ANR	3221263	Symbol	request_mask		3220299						
ANR	3221264	Symbol	av_clip_int16		3220299						
ANR	3221265	Symbol	DCA_REPR_TYPE_LtRt		3220299						
ANR	3221266	Symbol	dca -> packet		3220299						
ANR	3221267	Symbol	FF_PROFILE_DTS_HD_MA		3220299						
ANR	3221268	Symbol	s -> nchsets		3220299						
ANR	3221269	Symbol	is_hier_dmix_chset		3220299						
ANR	3221270	Symbol	p -> storage_bit_res		3220299						
ANR	3221271	Symbol	* * s		3220299						
ANR	3221272	Symbol	* plane		3220299						
ANR	3221273	Symbol	avctx		3220299						
ANR	3221274	Symbol	* * ch_remap		3220299						
ANR	3221275	Symbol	frame -> nb_samples		3220299						
ANR	3221276	Symbol	c		3220299						
ANR	3221277	Symbol	DCA_SPEAKER_MASK_Ls		3220299						
ANR	3221278	Symbol	i		3220299						
ANR	3221279	Symbol	j		3220299						
ANR	3221280	Symbol	k		3220299						
ANR	3221281	Symbol	avctx -> sample_rate		3220299						
ANR	3221282	Symbol	s -> nframesamples		3220299						
ANR	3221283	Symbol	p		3220299						
ANR	3221284	Symbol	EINVAL		3220299						
ANR	3221285	Symbol	s -> output_mask		3220299						
ANR	3221286	Symbol	s		3220299						
ANR	3221287	Symbol	DCA_DMIX_TYPE_LtRt		3220299						
ANR	3221288	Symbol	frame -> extended_data		3220299						
ANR	3221289	Symbol	chs_assemble_freq_bands		3220299						
ANR	3221290	Symbol	c -> bands [ j ] . dmix_embedded		3220299						
ANR	3221291	Symbol	asset		3220299						
ANR	3221292	Symbol	DCA_SPEAKER_MASK_Lss		3220299						
ANR	3221293	Symbol	clip23		3220299						
ANR	3221294	Symbol	* DCA_SPEAKER_Rss		3220299						
ANR	3221295	Symbol	c -> residual_encode		3220299						
ANR	3221296	Symbol	avctx -> channels		3220299						
ANR	3221297	Symbol	c -> nchannels		3220299						
ANR	3221298	Symbol	* * frame		3220299						
ANR	3221299	Symbol	* dca		3220299						
ANR	3221300	Symbol	ff_get_buffer		3220299						
ANR	3221301	Symbol	* samples		3220299						
ANR	3221302	Symbol	* asset		3220299						
ANR	3221303	Symbol	s -> chset		3220299						
ANR	3221304	Symbol	p -> freq		3220299						
ANR	3221305	Symbol	matrix_encoding		3220299						
ANR	3221306	Symbol	ret		3220299						
ANR	3221307	Symbol	* * i		3220299						
ANR	3221308	Symbol	AV_MATRIX_ENCODING_NONE		3220299						
ANR	3221309	Symbol	* * c		3220299						
ANR	3221310	Symbol	~DCA_SPEAKER_MASK_Rss		3220299						
ANR	3221311	Symbol	* DCA_SPEAKER_Ls		3220299						
ANR	3221312	Symbol	DCA_SPEAKER_Rss		3220299						
ANR	3221313	Symbol	p -> dmix_coeff		3220299						
ANR	3221314	Symbol	DCA_SPEAKER_LAYOUT_STEREO		3220299						
ANR	3221315	Symbol	AV_MATRIX_ENCODING_DOLBY		3220299						
ANR	3221316	Symbol	DCA_SPEAKER_Ls		3220299						
ANR	3221317	Symbol	* avctx		3220299						
ANR	3221318	Symbol	c -> bands		3220299						
ANR	3221319	Symbol	* c -> bands		3220299						
ANR	3221320	Symbol	s -> avctx		3220299						
ANR	3221321	Symbol	frame		3220299						
ANR	3221322	Symbol	ch_remap		3220299						
ANR	3221323	Symbol	dca		3220299						
ANR	3221324	Symbol	* frame		3220299						
ANR	3221325	Symbol	asset -> one_to_one_map_ch_to_spkr		3220299						
ANR	3221326	Symbol	frame -> format		3220299						
ANR	3221327	Symbol	ff_side_data_update_matrix_encoding		3220299						
ANR	3221328	Symbol	p -> dmix_type		3220299						
ANR	3221329	Symbol	s -> nfreqbands		3220299						
ANR	3221330	Symbol	DCA_PACKET_RECOVERY		3220299						
ANR	3221331	Symbol	avctx -> profile		3220299						
ANR	3221332	Symbol	* DCA_SPEAKER_Rs		3220299						
ANR	3221333	Symbol	s -> output_samples		3220299						
ANR	3221334	Symbol	ff_dca_set_channel_layout		3220299						
ANR	3221335	Symbol	avctx -> priv_data		3220299						
ANR	3221336	Symbol	* ch_remap		3220299						
ANR	3221337	Symbol	* c		3220299						
ANR	3221338	Symbol	* i		3220299						
ANR	3221339	Symbol	* j		3220299						
ANR	3221340	Symbol	* k		3220299						
ANR	3221341	Symbol	DCA_SPEAKER_MASK_Rss		3220299						
ANR	3221342	Symbol	dca -> exss . assets		3220299						
ANR	3221343	Symbol	* p		3220299						
ANR	3221344	Symbol	AVERROR		3220299						
ANR	3221345	Symbol	p -> pcm_bit_res		3220299						
ANR	3221346	Symbol	* s		3220299						
