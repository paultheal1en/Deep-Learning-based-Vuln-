command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8218862	File	/home/p4ultr4n/workplace/ReVeal/raw_code/tcg_optimize_0.c								
ANR	8218863	Function	tcg_optimize	1:0:0:27477							
ANR	8218864	FunctionDef	tcg_optimize (TCGContext * s)		8218863	0					
ANR	8218865	CompoundStatement		3:0:34:27477	8218863	0					
ANR	8218866	IdentifierDeclStatement	"int oi , oi_next , nb_temps , nb_globals ;"	5:4:41:78	8218863	0	True				
ANR	8218867	IdentifierDecl	oi		8218863	0					
ANR	8218868	IdentifierDeclType	int		8218863	0					
ANR	8218869	Identifier	oi		8218863	1					
ANR	8218870	IdentifierDecl	oi_next		8218863	1					
ANR	8218871	IdentifierDeclType	int		8218863	0					
ANR	8218872	Identifier	oi_next		8218863	1					
ANR	8218873	IdentifierDecl	nb_temps		8218863	2					
ANR	8218874	IdentifierDeclType	int		8218863	0					
ANR	8218875	Identifier	nb_temps		8218863	1					
ANR	8218876	IdentifierDecl	nb_globals		8218863	3					
ANR	8218877	IdentifierDeclType	int		8218863	0					
ANR	8218878	Identifier	nb_globals		8218863	1					
ANR	8218879	ExpressionStatement	nb_temps = s -> nb_temps	19:4:350:372	8218863	1	True				
ANR	8218880	AssignmentExpression	nb_temps = s -> nb_temps		8218863	0		=			
ANR	8218881	Identifier	nb_temps		8218863	0					
ANR	8218882	PtrMemberAccess	s -> nb_temps		8218863	1					
ANR	8218883	Identifier	s		8218863	0					
ANR	8218884	Identifier	nb_temps		8218863	1					
ANR	8218885	ExpressionStatement	nb_globals = s -> nb_globals	21:4:379:405	8218863	2	True				
ANR	8218886	AssignmentExpression	nb_globals = s -> nb_globals		8218863	0		=			
ANR	8218887	Identifier	nb_globals		8218863	0					
ANR	8218888	PtrMemberAccess	s -> nb_globals		8218863	1					
ANR	8218889	Identifier	s		8218863	0					
ANR	8218890	Identifier	nb_globals		8218863	1					
ANR	8218891	ExpressionStatement	reset_all_temps ( nb_temps )	23:4:412:437	8218863	3	True				
ANR	8218892	CallExpression	reset_all_temps ( nb_temps )		8218863	0					
ANR	8218893	Callee	reset_all_temps		8218863	0					
ANR	8218894	Identifier	reset_all_temps		8218863	0					
ANR	8218895	ArgumentList	nb_temps		8218863	1					
ANR	8218896	Argument	nb_temps		8218863	0					
ANR	8218897	Identifier	nb_temps		8218863	0					
ANR	8218898	ForStatement	for ( oi = s -> gen_first_op_idx ; oi >= 0 ; oi = oi_next )		8218863	4					
ANR	8218899	ForInit	oi = s -> gen_first_op_idx ;	27:9:451:475	8218863	0	True				
ANR	8218900	AssignmentExpression	oi = s -> gen_first_op_idx		8218863	0		=			
ANR	8218901	Identifier	oi		8218863	0					
ANR	8218902	PtrMemberAccess	s -> gen_first_op_idx		8218863	1					
ANR	8218903	Identifier	s		8218863	0					
ANR	8218904	Identifier	gen_first_op_idx		8218863	1					
ANR	8218905	Condition	oi >= 0	27:35:477:483	8218863	1	True				
ANR	8218906	RelationalExpression	oi >= 0		8218863	0		>=			
ANR	8218907	Identifier	oi		8218863	0					
ANR	8218908	PrimaryExpression	0		8218863	1					
ANR	8218909	AssignmentExpression	oi = oi_next	27:44:486:497	8218863	2	True	=			
ANR	8218910	Identifier	oi		8218863	0					
ANR	8218911	Identifier	oi_next		8218863	1					
ANR	8218912	CompoundStatement		41:8:731:770	8218863	3					
ANR	8218913	IdentifierDeclStatement	"tcg_target_ulong mask , partmask , affected ;"	29:8:511:552	8218863	0	True				
ANR	8218914	IdentifierDecl	mask		8218863	0					
ANR	8218915	IdentifierDeclType	tcg_target_ulong		8218863	0					
ANR	8218916	Identifier	mask		8218863	1					
ANR	8218917	IdentifierDecl	partmask		8218863	1					
ANR	8218918	IdentifierDeclType	tcg_target_ulong		8218863	0					
ANR	8218919	Identifier	partmask		8218863	1					
ANR	8218920	IdentifierDecl	affected		8218863	2					
ANR	8218921	IdentifierDeclType	tcg_target_ulong		8218863	0					
ANR	8218922	Identifier	affected		8218863	1					
ANR	8218923	IdentifierDeclStatement	"int nb_oargs , nb_iargs , i ;"	31:8:563:588	8218863	1	True				
ANR	8218924	IdentifierDecl	nb_oargs		8218863	0					
ANR	8218925	IdentifierDeclType	int		8218863	0					
ANR	8218926	Identifier	nb_oargs		8218863	1					
ANR	8218927	IdentifierDecl	nb_iargs		8218863	1					
ANR	8218928	IdentifierDeclType	int		8218863	0					
ANR	8218929	Identifier	nb_iargs		8218863	1					
ANR	8218930	IdentifierDecl	i		8218863	2					
ANR	8218931	IdentifierDeclType	int		8218863	0					
ANR	8218932	Identifier	i		8218863	1					
ANR	8218933	IdentifierDeclStatement	TCGArg tmp ;	33:8:599:609	8218863	2	True				
ANR	8218934	IdentifierDecl	tmp		8218863	0					
ANR	8218935	IdentifierDeclType	TCGArg		8218863	0					
ANR	8218936	Identifier	tmp		8218863	1					
ANR	8218937	Statement	TCGOp	37:8:622:626	8218863	3	True				
ANR	8218938	Statement	*	37:14:628:628	8218863	4	True				
ANR	8218939	Statement	const	37:16:630:634	8218863	5	True				
ANR	8218940	ExpressionStatement	op = & s -> gen_op_buf [ oi ]	37:22:636:659	8218863	6	True				
ANR	8218941	AssignmentExpression	op = & s -> gen_op_buf [ oi ]		8218863	0		=			
ANR	8218942	Identifier	op		8218863	0					
ANR	8218943	UnaryOperationExpression	& s -> gen_op_buf [ oi ]		8218863	1					
ANR	8218944	UnaryOperator	&		8218863	0					
ANR	8218945	ArrayIndexing	s -> gen_op_buf [ oi ]		8218863	1					
ANR	8218946	PtrMemberAccess	s -> gen_op_buf		8218863	0					
ANR	8218947	Identifier	s		8218863	0					
ANR	8218948	Identifier	gen_op_buf		8218863	1					
ANR	8218949	Identifier	oi		8218863	1					
ANR	8218950	Statement	TCGArg	39:8:670:675	8218863	7	True				
ANR	8218951	Statement	*	39:15:677:677	8218863	8	True				
ANR	8218952	Statement	const	39:17:679:683	8218863	9	True				
ANR	8218953	ExpressionStatement	args = & s -> gen_opparam_buf [ op -> args ]	39:23:685:721	8218863	10	True				
ANR	8218954	AssignmentExpression	args = & s -> gen_opparam_buf [ op -> args ]		8218863	0		=			
ANR	8218955	Identifier	args		8218863	0					
ANR	8218956	UnaryOperationExpression	& s -> gen_opparam_buf [ op -> args ]		8218863	1					
ANR	8218957	UnaryOperator	&		8218863	0					
ANR	8218958	ArrayIndexing	s -> gen_opparam_buf [ op -> args ]		8218863	1					
ANR	8218959	PtrMemberAccess	s -> gen_opparam_buf		8218863	0					
ANR	8218960	Identifier	s		8218863	0					
ANR	8218961	Identifier	gen_opparam_buf		8218863	1					
ANR	8218962	PtrMemberAccess	op -> args		8218863	1					
ANR	8218963	Identifier	op		8218863	0					
ANR	8218964	Identifier	args		8218863	1					
ANR	8218965	IdentifierDeclStatement	TCGOpcode opc = op -> opc ;	41:8:732:755	8218863	11	True				
ANR	8218966	IdentifierDecl	opc = op -> opc		8218863	0					
ANR	8218967	IdentifierDeclType	TCGOpcode		8218863	0					
ANR	8218968	Identifier	opc		8218863	1					
ANR	8218969	AssignmentExpression	opc = op -> opc		8218863	2		=			
ANR	8218970	Identifier	opc		8218863	0					
ANR	8218971	PtrMemberAccess	op -> opc		8218863	1					
ANR	8218972	Identifier	op		8218863	0					
ANR	8218973	Identifier	opc		8218863	1					
ANR	8218974	IdentifierDeclStatement	const TCGOpDef * def = & tcg_op_defs [ opc ] ;	43:8:766:805	8218863	12	True				
ANR	8218975	IdentifierDecl	* def = & tcg_op_defs [ opc ]		8218863	0					
ANR	8218976	IdentifierDeclType	const TCGOpDef *		8218863	0					
ANR	8218977	Identifier	def		8218863	1					
ANR	8218978	AssignmentExpression	* def = & tcg_op_defs [ opc ]		8218863	2		=			
ANR	8218979	Identifier	def		8218863	0					
ANR	8218980	UnaryOperationExpression	& tcg_op_defs [ opc ]		8218863	1					
ANR	8218981	UnaryOperator	&		8218863	0					
ANR	8218982	ArrayIndexing	tcg_op_defs [ opc ]		8218863	1					
ANR	8218983	Identifier	tcg_op_defs		8218863	0					
ANR	8218984	Identifier	opc		8218863	1					
ANR	8218985	ExpressionStatement	oi_next = op -> next	47:8:818:836	8218863	13	True				
ANR	8218986	AssignmentExpression	oi_next = op -> next		8218863	0		=			
ANR	8218987	Identifier	oi_next		8218863	0					
ANR	8218988	PtrMemberAccess	op -> next		8218863	1					
ANR	8218989	Identifier	op		8218863	0					
ANR	8218990	Identifier	next		8218863	1					
ANR	8218991	IfStatement	if ( opc == INDEX_op_call )		8218863	14					
ANR	8218992	Condition	opc == INDEX_op_call	49:12:851:870	8218863	0	True				
ANR	8218993	EqualityExpression	opc == INDEX_op_call		8218863	0		==			
ANR	8218994	Identifier	opc		8218863	0					
ANR	8218995	Identifier	INDEX_op_call		8218863	1					
ANR	8218996	CompoundStatement		47:34:838:838	8218863	1					
ANR	8218997	ExpressionStatement	nb_oargs = op -> callo	51:12:888:908	8218863	0	True				
ANR	8218998	AssignmentExpression	nb_oargs = op -> callo		8218863	0		=			
ANR	8218999	Identifier	nb_oargs		8218863	0					
ANR	8219000	PtrMemberAccess	op -> callo		8218863	1					
ANR	8219001	Identifier	op		8218863	0					
ANR	8219002	Identifier	callo		8218863	1					
ANR	8219003	ExpressionStatement	nb_iargs = op -> calli	53:12:923:943	8218863	1	True				
ANR	8219004	AssignmentExpression	nb_iargs = op -> calli		8218863	0		=			
ANR	8219005	Identifier	nb_iargs		8218863	0					
ANR	8219006	PtrMemberAccess	op -> calli		8218863	1					
ANR	8219007	Identifier	op		8218863	0					
ANR	8219008	Identifier	calli		8218863	1					
ANR	8219009	ElseStatement	else		8218863	0					
ANR	8219010	CompoundStatement		53:15:926:926	8218863	0					
ANR	8219011	ExpressionStatement	nb_oargs = def -> nb_oargs	57:12:976:1000	8218863	0	True				
ANR	8219012	AssignmentExpression	nb_oargs = def -> nb_oargs		8218863	0		=			
ANR	8219013	Identifier	nb_oargs		8218863	0					
ANR	8219014	PtrMemberAccess	def -> nb_oargs		8218863	1					
ANR	8219015	Identifier	def		8218863	0					
ANR	8219016	Identifier	nb_oargs		8218863	1					
ANR	8219017	ExpressionStatement	nb_iargs = def -> nb_iargs	59:12:1015:1039	8218863	1	True				
ANR	8219018	AssignmentExpression	nb_iargs = def -> nb_iargs		8218863	0		=			
ANR	8219019	Identifier	nb_iargs		8218863	0					
ANR	8219020	PtrMemberAccess	def -> nb_iargs		8218863	1					
ANR	8219021	Identifier	def		8218863	0					
ANR	8219022	Identifier	nb_iargs		8218863	1					
ANR	8219023	ForStatement	for ( i = nb_oargs ; i < nb_oargs + nb_iargs ; i ++ )		8218863	15					
ANR	8219024	ForInit	i = nb_oargs ;	67:13:1103:1115	8218863	0	True				
ANR	8219025	AssignmentExpression	i = nb_oargs		8218863	0		=			
ANR	8219026	Identifier	i		8218863	0					
ANR	8219027	Identifier	nb_oargs		8218863	1					
ANR	8219028	Condition	i < nb_oargs + nb_iargs	67:27:1117:1139	8218863	1	True				
ANR	8219029	RelationalExpression	i < nb_oargs + nb_iargs		8218863	0		<			
ANR	8219030	Identifier	i		8218863	0					
ANR	8219031	AdditiveExpression	nb_oargs + nb_iargs		8218863	1		+			
ANR	8219032	Identifier	nb_oargs		8218863	0					
ANR	8219033	Identifier	nb_iargs		8218863	1					
ANR	8219034	PostIncDecOperationExpression	i ++	67:52:1142:1144	8218863	2	True				
ANR	8219035	Identifier	i		8218863	0					
ANR	8219036	IncDec	++		8218863	1					
ANR	8219037	CompoundStatement		65:57:1112:1112	8218863	3					
ANR	8219038	IfStatement	if ( temps [ args [ i ] ] . state == TCG_TEMP_COPY )		8218863	0					
ANR	8219039	Condition	temps [ args [ i ] ] . state == TCG_TEMP_COPY	69:16:1166:1202	8218863	0	True				
ANR	8219040	EqualityExpression	temps [ args [ i ] ] . state == TCG_TEMP_COPY		8218863	0		==			
ANR	8219041	MemberAccess	temps [ args [ i ] ] . state		8218863	0					
ANR	8219042	ArrayIndexing	temps [ args [ i ] ]		8218863	0					
ANR	8219043	Identifier	temps		8218863	0					
ANR	8219044	ArrayIndexing	args [ i ]		8218863	1					
ANR	8219045	Identifier	args		8218863	0					
ANR	8219046	Identifier	i		8218863	1					
ANR	8219047	Identifier	state		8218863	1					
ANR	8219048	Identifier	TCG_TEMP_COPY		8218863	1					
ANR	8219049	CompoundStatement		67:55:1170:1170	8218863	1					
ANR	8219050	ExpressionStatement	"args [ i ] = find_better_copy ( s , args [ i ] )"	71:16:1224:1262	8218863	0	True				
ANR	8219051	AssignmentExpression	"args [ i ] = find_better_copy ( s , args [ i ] )"		8218863	0		=			
ANR	8219052	ArrayIndexing	args [ i ]		8218863	0					
ANR	8219053	Identifier	args		8218863	0					
ANR	8219054	Identifier	i		8218863	1					
ANR	8219055	CallExpression	"find_better_copy ( s , args [ i ] )"		8218863	1					
ANR	8219056	Callee	find_better_copy		8218863	0					
ANR	8219057	Identifier	find_better_copy		8218863	0					
ANR	8219058	ArgumentList	s		8218863	1					
ANR	8219059	Argument	s		8218863	0					
ANR	8219060	Identifier	s		8218863	0					
ANR	8219061	Argument	args [ i ]		8218863	1					
ANR	8219062	ArrayIndexing	args [ i ]		8218863	0					
ANR	8219063	Identifier	args		8218863	0					
ANR	8219064	Identifier	i		8218863	1					
ANR	8219065	SwitchStatement	switch ( opc )		8218863	16					
ANR	8219066	Condition	opc	81:16:1381:1383	8218863	0	True				
ANR	8219067	Identifier	opc		8218863	0					
ANR	8219068	CompoundStatement		79:21:1351:1351	8218863	1					
ANR	8219069	Statement	CASE_OP_32_64	83:8:1397:1409	8218863	0	True				
ANR	8219070	Statement	(	83:21:1410:1410	8218863	1	True				
ANR	8219071	Statement	add	83:22:1411:1413	8218863	2	True				
ANR	8219072	Statement	)	83:25:1414:1414	8218863	3	True				
ANR	8219073	Statement	:	83:26:1415:1415	8218863	4	True				
ANR	8219074	Statement	CASE_OP_32_64	85:8:1426:1438	8218863	5	True				
ANR	8219075	Statement	(	85:21:1439:1439	8218863	6	True				
ANR	8219076	Statement	mul	85:22:1440:1442	8218863	7	True				
ANR	8219077	Statement	)	85:25:1443:1443	8218863	8	True				
ANR	8219078	Statement	:	85:26:1444:1444	8218863	9	True				
ANR	8219079	Statement	CASE_OP_32_64	87:8:1455:1467	8218863	10	True				
ANR	8219080	Statement	(	87:21:1468:1468	8218863	11	True				
ANR	8219081	Statement	and	87:22:1469:1471	8218863	12	True				
ANR	8219082	Statement	)	87:25:1472:1472	8218863	13	True				
ANR	8219083	Statement	:	87:26:1473:1473	8218863	14	True				
ANR	8219084	Statement	CASE_OP_32_64	89:8:1484:1496	8218863	15	True				
ANR	8219085	Statement	(	89:21:1497:1497	8218863	16	True				
ANR	8219086	Statement	or	89:22:1498:1499	8218863	17	True				
ANR	8219087	Statement	)	89:24:1500:1500	8218863	18	True				
ANR	8219088	Statement	:	89:25:1501:1501	8218863	19	True				
ANR	8219089	Statement	CASE_OP_32_64	91:8:1512:1524	8218863	20	True				
ANR	8219090	Statement	(	91:21:1525:1525	8218863	21	True				
ANR	8219091	Statement	xor	91:22:1526:1528	8218863	22	True				
ANR	8219092	Statement	)	91:25:1529:1529	8218863	23	True				
ANR	8219093	Statement	:	91:26:1530:1530	8218863	24	True				
ANR	8219094	Statement	CASE_OP_32_64	93:8:1541:1553	8218863	25	True				
ANR	8219095	Statement	(	93:21:1554:1554	8218863	26	True				
ANR	8219096	Statement	eqv	93:22:1555:1557	8218863	27	True				
ANR	8219097	Statement	)	93:25:1558:1558	8218863	28	True				
ANR	8219098	Statement	:	93:26:1559:1559	8218863	29	True				
ANR	8219099	Statement	CASE_OP_32_64	95:8:1570:1582	8218863	30	True				
ANR	8219100	Statement	(	95:21:1583:1583	8218863	31	True				
ANR	8219101	Statement	nand	95:22:1584:1587	8218863	32	True				
ANR	8219102	Statement	)	95:26:1588:1588	8218863	33	True				
ANR	8219103	Statement	:	95:27:1589:1589	8218863	34	True				
ANR	8219104	Statement	CASE_OP_32_64	97:8:1600:1612	8218863	35	True				
ANR	8219105	Statement	(	97:21:1613:1613	8218863	36	True				
ANR	8219106	Statement	nor	97:22:1614:1616	8218863	37	True				
ANR	8219107	Statement	)	97:25:1617:1617	8218863	38	True				
ANR	8219108	Statement	:	97:26:1618:1618	8218863	39	True				
ANR	8219109	Statement	CASE_OP_32_64	99:8:1629:1641	8218863	40	True				
ANR	8219110	Statement	(	99:21:1642:1642	8218863	41	True				
ANR	8219111	Statement	muluh	99:22:1643:1647	8218863	42	True				
ANR	8219112	Statement	)	99:27:1648:1648	8218863	43	True				
ANR	8219113	Statement	:	99:28:1649:1649	8218863	44	True				
ANR	8219114	Statement	CASE_OP_32_64	101:8:1660:1672	8218863	45	True				
ANR	8219115	Statement	(	101:21:1673:1673	8218863	46	True				
ANR	8219116	Statement	mulsh	101:22:1674:1678	8218863	47	True				
ANR	8219117	Statement	)	101:27:1679:1679	8218863	48	True				
ANR	8219118	Statement	:	101:28:1680:1680	8218863	49	True				
ANR	8219119	ExpressionStatement	"swap_commutative ( args [ 0 ] , & args [ 1 ] , & args [ 2 ] )"	103:12:1695:1740	8218863	50	True				
ANR	8219120	CallExpression	"swap_commutative ( args [ 0 ] , & args [ 1 ] , & args [ 2 ] )"		8218863	0					
ANR	8219121	Callee	swap_commutative		8218863	0					
ANR	8219122	Identifier	swap_commutative		8218863	0					
ANR	8219123	ArgumentList	args [ 0 ]		8218863	1					
ANR	8219124	Argument	args [ 0 ]		8218863	0					
ANR	8219125	ArrayIndexing	args [ 0 ]		8218863	0					
ANR	8219126	Identifier	args		8218863	0					
ANR	8219127	PrimaryExpression	0		8218863	1					
ANR	8219128	Argument	& args [ 1 ]		8218863	1					
ANR	8219129	UnaryOperationExpression	& args [ 1 ]		8218863	0					
ANR	8219130	UnaryOperator	&		8218863	0					
ANR	8219131	ArrayIndexing	args [ 1 ]		8218863	1					
ANR	8219132	Identifier	args		8218863	0					
ANR	8219133	PrimaryExpression	1		8218863	1					
ANR	8219134	Argument	& args [ 2 ]		8218863	2					
ANR	8219135	UnaryOperationExpression	& args [ 2 ]		8218863	0					
ANR	8219136	UnaryOperator	&		8218863	0					
ANR	8219137	ArrayIndexing	args [ 2 ]		8218863	1					
ANR	8219138	Identifier	args		8218863	0					
ANR	8219139	PrimaryExpression	2		8218863	1					
ANR	8219140	BreakStatement	break ;	105:12:1755:1760	8218863	51	True				
ANR	8219141	Statement	CASE_OP_32_64	107:8:1771:1783	8218863	52	True				
ANR	8219142	Statement	(	107:21:1784:1784	8218863	53	True				
ANR	8219143	Statement	brcond	107:22:1785:1790	8218863	54	True				
ANR	8219144	Statement	)	107:28:1791:1791	8218863	55	True				
ANR	8219145	Statement	:	107:29:1792:1792	8218863	56	True				
ANR	8219146	IfStatement	"if ( swap_commutative ( - 1 , & args [ 0 ] , & args [ 1 ] ) )"		8218863	57					
ANR	8219147	Condition	"swap_commutative ( - 1 , & args [ 0 ] , & args [ 1 ] )"	109:16:1811:1850	8218863	0	True				
ANR	8219148	CallExpression	"swap_commutative ( - 1 , & args [ 0 ] , & args [ 1 ] )"		8218863	0					
ANR	8219149	Callee	swap_commutative		8218863	0					
ANR	8219150	Identifier	swap_commutative		8218863	0					
ANR	8219151	ArgumentList	- 1		8218863	1					
ANR	8219152	Argument	- 1		8218863	0					
ANR	8219153	UnaryOperationExpression	- 1		8218863	0					
ANR	8219154	UnaryOperator	-		8218863	0					
ANR	8219155	PrimaryExpression	1		8218863	1					
ANR	8219156	Argument	& args [ 0 ]		8218863	1					
ANR	8219157	UnaryOperationExpression	& args [ 0 ]		8218863	0					
ANR	8219158	UnaryOperator	&		8218863	0					
ANR	8219159	ArrayIndexing	args [ 0 ]		8218863	1					
ANR	8219160	Identifier	args		8218863	0					
ANR	8219161	PrimaryExpression	0		8218863	1					
ANR	8219162	Argument	& args [ 1 ]		8218863	2					
ANR	8219163	UnaryOperationExpression	& args [ 1 ]		8218863	0					
ANR	8219164	UnaryOperator	&		8218863	0					
ANR	8219165	ArrayIndexing	args [ 1 ]		8218863	1					
ANR	8219166	Identifier	args		8218863	0					
ANR	8219167	PrimaryExpression	1		8218863	1					
ANR	8219168	CompoundStatement		107:58:1818:1818	8218863	1					
ANR	8219169	ExpressionStatement	args [ 2 ] = tcg_swap_cond ( args [ 2 ] )	111:16:1872:1904	8218863	0	True				
ANR	8219170	AssignmentExpression	args [ 2 ] = tcg_swap_cond ( args [ 2 ] )		8218863	0		=			
ANR	8219171	ArrayIndexing	args [ 2 ]		8218863	0					
ANR	8219172	Identifier	args		8218863	0					
ANR	8219173	PrimaryExpression	2		8218863	1					
ANR	8219174	CallExpression	tcg_swap_cond ( args [ 2 ] )		8218863	1					
ANR	8219175	Callee	tcg_swap_cond		8218863	0					
ANR	8219176	Identifier	tcg_swap_cond		8218863	0					
ANR	8219177	ArgumentList	args [ 2 ]		8218863	1					
ANR	8219178	Argument	args [ 2 ]		8218863	0					
ANR	8219179	ArrayIndexing	args [ 2 ]		8218863	0					
ANR	8219180	Identifier	args		8218863	0					
ANR	8219181	PrimaryExpression	2		8218863	1					
ANR	8219182	BreakStatement	break ;	115:12:1934:1939	8218863	58	True				
ANR	8219183	Statement	CASE_OP_32_64	117:8:1950:1962	8218863	59	True				
ANR	8219184	Statement	(	117:21:1963:1963	8218863	60	True				
ANR	8219185	Statement	setcond	117:22:1964:1970	8218863	61	True				
ANR	8219186	Statement	)	117:29:1971:1971	8218863	62	True				
ANR	8219187	Statement	:	117:30:1972:1972	8218863	63	True				
ANR	8219188	IfStatement	"if ( swap_commutative ( args [ 0 ] , & args [ 1 ] , & args [ 2 ] ) )"		8218863	64					
ANR	8219189	Condition	"swap_commutative ( args [ 0 ] , & args [ 1 ] , & args [ 2 ] )"	119:16:1991:2035	8218863	0	True				
ANR	8219190	CallExpression	"swap_commutative ( args [ 0 ] , & args [ 1 ] , & args [ 2 ] )"		8218863	0					
ANR	8219191	Callee	swap_commutative		8218863	0					
ANR	8219192	Identifier	swap_commutative		8218863	0					
ANR	8219193	ArgumentList	args [ 0 ]		8218863	1					
ANR	8219194	Argument	args [ 0 ]		8218863	0					
ANR	8219195	ArrayIndexing	args [ 0 ]		8218863	0					
ANR	8219196	Identifier	args		8218863	0					
ANR	8219197	PrimaryExpression	0		8218863	1					
ANR	8219198	Argument	& args [ 1 ]		8218863	1					
ANR	8219199	UnaryOperationExpression	& args [ 1 ]		8218863	0					
ANR	8219200	UnaryOperator	&		8218863	0					
ANR	8219201	ArrayIndexing	args [ 1 ]		8218863	1					
ANR	8219202	Identifier	args		8218863	0					
ANR	8219203	PrimaryExpression	1		8218863	1					
ANR	8219204	Argument	& args [ 2 ]		8218863	2					
ANR	8219205	UnaryOperationExpression	& args [ 2 ]		8218863	0					
ANR	8219206	UnaryOperator	&		8218863	0					
ANR	8219207	ArrayIndexing	args [ 2 ]		8218863	1					
ANR	8219208	Identifier	args		8218863	0					
ANR	8219209	PrimaryExpression	2		8218863	1					
ANR	8219210	CompoundStatement		117:63:2003:2003	8218863	1					
ANR	8219211	ExpressionStatement	args [ 3 ] = tcg_swap_cond ( args [ 3 ] )	121:16:2057:2089	8218863	0	True				
ANR	8219212	AssignmentExpression	args [ 3 ] = tcg_swap_cond ( args [ 3 ] )		8218863	0		=			
ANR	8219213	ArrayIndexing	args [ 3 ]		8218863	0					
ANR	8219214	Identifier	args		8218863	0					
ANR	8219215	PrimaryExpression	3		8218863	1					
ANR	8219216	CallExpression	tcg_swap_cond ( args [ 3 ] )		8218863	1					
ANR	8219217	Callee	tcg_swap_cond		8218863	0					
ANR	8219218	Identifier	tcg_swap_cond		8218863	0					
ANR	8219219	ArgumentList	args [ 3 ]		8218863	1					
ANR	8219220	Argument	args [ 3 ]		8218863	0					
ANR	8219221	ArrayIndexing	args [ 3 ]		8218863	0					
ANR	8219222	Identifier	args		8218863	0					
ANR	8219223	PrimaryExpression	3		8218863	1					
ANR	8219224	BreakStatement	break ;	125:12:2119:2124	8218863	65	True				
ANR	8219225	Statement	CASE_OP_32_64	127:8:2135:2147	8218863	66	True				
ANR	8219226	Statement	(	127:21:2148:2148	8218863	67	True				
ANR	8219227	Statement	movcond	127:22:2149:2155	8218863	68	True				
ANR	8219228	Statement	)	127:29:2156:2156	8218863	69	True				
ANR	8219229	Statement	:	127:30:2157:2157	8218863	70	True				
ANR	8219230	IfStatement	"if ( swap_commutative ( - 1 , & args [ 1 ] , & args [ 2 ] ) )"		8218863	71					
ANR	8219231	Condition	"swap_commutative ( - 1 , & args [ 1 ] , & args [ 2 ] )"	129:16:2176:2215	8218863	0	True				
ANR	8219232	CallExpression	"swap_commutative ( - 1 , & args [ 1 ] , & args [ 2 ] )"		8218863	0					
ANR	8219233	Callee	swap_commutative		8218863	0					
ANR	8219234	Identifier	swap_commutative		8218863	0					
ANR	8219235	ArgumentList	- 1		8218863	1					
ANR	8219236	Argument	- 1		8218863	0					
ANR	8219237	UnaryOperationExpression	- 1		8218863	0					
ANR	8219238	UnaryOperator	-		8218863	0					
ANR	8219239	PrimaryExpression	1		8218863	1					
ANR	8219240	Argument	& args [ 1 ]		8218863	1					
ANR	8219241	UnaryOperationExpression	& args [ 1 ]		8218863	0					
ANR	8219242	UnaryOperator	&		8218863	0					
ANR	8219243	ArrayIndexing	args [ 1 ]		8218863	1					
ANR	8219244	Identifier	args		8218863	0					
ANR	8219245	PrimaryExpression	1		8218863	1					
ANR	8219246	Argument	& args [ 2 ]		8218863	2					
ANR	8219247	UnaryOperationExpression	& args [ 2 ]		8218863	0					
ANR	8219248	UnaryOperator	&		8218863	0					
ANR	8219249	ArrayIndexing	args [ 2 ]		8218863	1					
ANR	8219250	Identifier	args		8218863	0					
ANR	8219251	PrimaryExpression	2		8218863	1					
ANR	8219252	CompoundStatement		127:58:2183:2183	8218863	1					
ANR	8219253	ExpressionStatement	args [ 5 ] = tcg_swap_cond ( args [ 5 ] )	131:16:2237:2269	8218863	0	True				
ANR	8219254	AssignmentExpression	args [ 5 ] = tcg_swap_cond ( args [ 5 ] )		8218863	0		=			
ANR	8219255	ArrayIndexing	args [ 5 ]		8218863	0					
ANR	8219256	Identifier	args		8218863	0					
ANR	8219257	PrimaryExpression	5		8218863	1					
ANR	8219258	CallExpression	tcg_swap_cond ( args [ 5 ] )		8218863	1					
ANR	8219259	Callee	tcg_swap_cond		8218863	0					
ANR	8219260	Identifier	tcg_swap_cond		8218863	0					
ANR	8219261	ArgumentList	args [ 5 ]		8218863	1					
ANR	8219262	Argument	args [ 5 ]		8218863	0					
ANR	8219263	ArrayIndexing	args [ 5 ]		8218863	0					
ANR	8219264	Identifier	args		8218863	0					
ANR	8219265	PrimaryExpression	5		8218863	1					
ANR	8219266	IfStatement	"if ( swap_commutative ( args [ 0 ] , & args [ 4 ] , & args [ 3 ] ) )"		8218863	72					
ANR	8219267	Condition	"swap_commutative ( args [ 0 ] , & args [ 4 ] , & args [ 3 ] )"	141:16:2501:2545	8218863	0	True				
ANR	8219268	CallExpression	"swap_commutative ( args [ 0 ] , & args [ 4 ] , & args [ 3 ] )"		8218863	0					
ANR	8219269	Callee	swap_commutative		8218863	0					
ANR	8219270	Identifier	swap_commutative		8218863	0					
ANR	8219271	ArgumentList	args [ 0 ]		8218863	1					
ANR	8219272	Argument	args [ 0 ]		8218863	0					
ANR	8219273	ArrayIndexing	args [ 0 ]		8218863	0					
ANR	8219274	Identifier	args		8218863	0					
ANR	8219275	PrimaryExpression	0		8218863	1					
ANR	8219276	Argument	& args [ 4 ]		8218863	1					
ANR	8219277	UnaryOperationExpression	& args [ 4 ]		8218863	0					
ANR	8219278	UnaryOperator	&		8218863	0					
ANR	8219279	ArrayIndexing	args [ 4 ]		8218863	1					
ANR	8219280	Identifier	args		8218863	0					
ANR	8219281	PrimaryExpression	4		8218863	1					
ANR	8219282	Argument	& args [ 3 ]		8218863	2					
ANR	8219283	UnaryOperationExpression	& args [ 3 ]		8218863	0					
ANR	8219284	UnaryOperator	&		8218863	0					
ANR	8219285	ArrayIndexing	args [ 3 ]		8218863	1					
ANR	8219286	Identifier	args		8218863	0					
ANR	8219287	PrimaryExpression	3		8218863	1					
ANR	8219288	CompoundStatement		139:63:2513:2513	8218863	1					
ANR	8219289	ExpressionStatement	args [ 5 ] = tcg_invert_cond ( args [ 5 ] )	143:16:2567:2601	8218863	0	True				
ANR	8219290	AssignmentExpression	args [ 5 ] = tcg_invert_cond ( args [ 5 ] )		8218863	0		=			
ANR	8219291	ArrayIndexing	args [ 5 ]		8218863	0					
ANR	8219292	Identifier	args		8218863	0					
ANR	8219293	PrimaryExpression	5		8218863	1					
ANR	8219294	CallExpression	tcg_invert_cond ( args [ 5 ] )		8218863	1					
ANR	8219295	Callee	tcg_invert_cond		8218863	0					
ANR	8219296	Identifier	tcg_invert_cond		8218863	0					
ANR	8219297	ArgumentList	args [ 5 ]		8218863	1					
ANR	8219298	Argument	args [ 5 ]		8218863	0					
ANR	8219299	ArrayIndexing	args [ 5 ]		8218863	0					
ANR	8219300	Identifier	args		8218863	0					
ANR	8219301	PrimaryExpression	5		8218863	1					
ANR	8219302	BreakStatement	break ;	147:12:2631:2636	8218863	73	True				
ANR	8219303	Statement	CASE_OP_32_64	149:8:2647:2659	8218863	74	True				
ANR	8219304	Statement	(	149:21:2660:2660	8218863	75	True				
ANR	8219305	Statement	add2	149:22:2661:2664	8218863	76	True				
ANR	8219306	Statement	)	149:26:2665:2665	8218863	77	True				
ANR	8219307	Statement	:	149:27:2666:2666	8218863	78	True				
ANR	8219308	ExpressionStatement	"swap_commutative ( args [ 0 ] , & args [ 2 ] , & args [ 4 ] )"	151:12:2681:2726	8218863	79	True				
ANR	8219309	CallExpression	"swap_commutative ( args [ 0 ] , & args [ 2 ] , & args [ 4 ] )"		8218863	0					
ANR	8219310	Callee	swap_commutative		8218863	0					
ANR	8219311	Identifier	swap_commutative		8218863	0					
ANR	8219312	ArgumentList	args [ 0 ]		8218863	1					
ANR	8219313	Argument	args [ 0 ]		8218863	0					
ANR	8219314	ArrayIndexing	args [ 0 ]		8218863	0					
ANR	8219315	Identifier	args		8218863	0					
ANR	8219316	PrimaryExpression	0		8218863	1					
ANR	8219317	Argument	& args [ 2 ]		8218863	1					
ANR	8219318	UnaryOperationExpression	& args [ 2 ]		8218863	0					
ANR	8219319	UnaryOperator	&		8218863	0					
ANR	8219320	ArrayIndexing	args [ 2 ]		8218863	1					
ANR	8219321	Identifier	args		8218863	0					
ANR	8219322	PrimaryExpression	2		8218863	1					
ANR	8219323	Argument	& args [ 4 ]		8218863	2					
ANR	8219324	UnaryOperationExpression	& args [ 4 ]		8218863	0					
ANR	8219325	UnaryOperator	&		8218863	0					
ANR	8219326	ArrayIndexing	args [ 4 ]		8218863	1					
ANR	8219327	Identifier	args		8218863	0					
ANR	8219328	PrimaryExpression	4		8218863	1					
ANR	8219329	ExpressionStatement	"swap_commutative ( args [ 1 ] , & args [ 3 ] , & args [ 5 ] )"	153:12:2741:2786	8218863	80	True				
ANR	8219330	CallExpression	"swap_commutative ( args [ 1 ] , & args [ 3 ] , & args [ 5 ] )"		8218863	0					
ANR	8219331	Callee	swap_commutative		8218863	0					
ANR	8219332	Identifier	swap_commutative		8218863	0					
ANR	8219333	ArgumentList	args [ 1 ]		8218863	1					
ANR	8219334	Argument	args [ 1 ]		8218863	0					
ANR	8219335	ArrayIndexing	args [ 1 ]		8218863	0					
ANR	8219336	Identifier	args		8218863	0					
ANR	8219337	PrimaryExpression	1		8218863	1					
ANR	8219338	Argument	& args [ 3 ]		8218863	1					
ANR	8219339	UnaryOperationExpression	& args [ 3 ]		8218863	0					
ANR	8219340	UnaryOperator	&		8218863	0					
ANR	8219341	ArrayIndexing	args [ 3 ]		8218863	1					
ANR	8219342	Identifier	args		8218863	0					
ANR	8219343	PrimaryExpression	3		8218863	1					
ANR	8219344	Argument	& args [ 5 ]		8218863	2					
ANR	8219345	UnaryOperationExpression	& args [ 5 ]		8218863	0					
ANR	8219346	UnaryOperator	&		8218863	0					
ANR	8219347	ArrayIndexing	args [ 5 ]		8218863	1					
ANR	8219348	Identifier	args		8218863	0					
ANR	8219349	PrimaryExpression	5		8218863	1					
ANR	8219350	BreakStatement	break ;	155:12:2801:2806	8218863	81	True				
ANR	8219351	Statement	CASE_OP_32_64	157:8:2817:2829	8218863	82	True				
ANR	8219352	Statement	(	157:21:2830:2830	8218863	83	True				
ANR	8219353	Statement	mulu2	157:22:2831:2835	8218863	84	True				
ANR	8219354	Statement	)	157:27:2836:2836	8218863	85	True				
ANR	8219355	Statement	:	157:28:2837:2837	8218863	86	True				
ANR	8219356	Statement	CASE_OP_32_64	159:8:2848:2860	8218863	87	True				
ANR	8219357	Statement	(	159:21:2861:2861	8218863	88	True				
ANR	8219358	Statement	muls2	159:22:2862:2866	8218863	89	True				
ANR	8219359	Statement	)	159:27:2867:2867	8218863	90	True				
ANR	8219360	Statement	:	159:28:2868:2868	8218863	91	True				
ANR	8219361	ExpressionStatement	"swap_commutative ( args [ 0 ] , & args [ 2 ] , & args [ 3 ] )"	161:12:2883:2928	8218863	92	True				
ANR	8219362	CallExpression	"swap_commutative ( args [ 0 ] , & args [ 2 ] , & args [ 3 ] )"		8218863	0					
ANR	8219363	Callee	swap_commutative		8218863	0					
ANR	8219364	Identifier	swap_commutative		8218863	0					
ANR	8219365	ArgumentList	args [ 0 ]		8218863	1					
ANR	8219366	Argument	args [ 0 ]		8218863	0					
ANR	8219367	ArrayIndexing	args [ 0 ]		8218863	0					
ANR	8219368	Identifier	args		8218863	0					
ANR	8219369	PrimaryExpression	0		8218863	1					
ANR	8219370	Argument	& args [ 2 ]		8218863	1					
ANR	8219371	UnaryOperationExpression	& args [ 2 ]		8218863	0					
ANR	8219372	UnaryOperator	&		8218863	0					
ANR	8219373	ArrayIndexing	args [ 2 ]		8218863	1					
ANR	8219374	Identifier	args		8218863	0					
ANR	8219375	PrimaryExpression	2		8218863	1					
ANR	8219376	Argument	& args [ 3 ]		8218863	2					
ANR	8219377	UnaryOperationExpression	& args [ 3 ]		8218863	0					
ANR	8219378	UnaryOperator	&		8218863	0					
ANR	8219379	ArrayIndexing	args [ 3 ]		8218863	1					
ANR	8219380	Identifier	args		8218863	0					
ANR	8219381	PrimaryExpression	3		8218863	1					
ANR	8219382	BreakStatement	break ;	163:12:2943:2948	8218863	93	True				
ANR	8219383	Label	case INDEX_op_brcond2_i32 :	165:8:2959:2984	8218863	94	True				
ANR	8219384	Identifier	INDEX_op_brcond2_i32		8218863	0					
ANR	8219385	IfStatement	"if ( swap_commutative2 ( & args [ 0 ] , & args [ 2 ] ) )"		8218863	95					
ANR	8219386	Condition	"swap_commutative2 ( & args [ 0 ] , & args [ 2 ] )"	167:16:3003:3039	8218863	0	True				
ANR	8219387	CallExpression	"swap_commutative2 ( & args [ 0 ] , & args [ 2 ] )"		8218863	0					
ANR	8219388	Callee	swap_commutative2		8218863	0					
ANR	8219389	Identifier	swap_commutative2		8218863	0					
ANR	8219390	ArgumentList	& args [ 0 ]		8218863	1					
ANR	8219391	Argument	& args [ 0 ]		8218863	0					
ANR	8219392	UnaryOperationExpression	& args [ 0 ]		8218863	0					
ANR	8219393	UnaryOperator	&		8218863	0					
ANR	8219394	ArrayIndexing	args [ 0 ]		8218863	1					
ANR	8219395	Identifier	args		8218863	0					
ANR	8219396	PrimaryExpression	0		8218863	1					
ANR	8219397	Argument	& args [ 2 ]		8218863	1					
ANR	8219398	UnaryOperationExpression	& args [ 2 ]		8218863	0					
ANR	8219399	UnaryOperator	&		8218863	0					
ANR	8219400	ArrayIndexing	args [ 2 ]		8218863	1					
ANR	8219401	Identifier	args		8218863	0					
ANR	8219402	PrimaryExpression	2		8218863	1					
ANR	8219403	CompoundStatement		165:55:3007:3007	8218863	1					
ANR	8219404	ExpressionStatement	args [ 4 ] = tcg_swap_cond ( args [ 4 ] )	169:16:3061:3093	8218863	0	True				
ANR	8219405	AssignmentExpression	args [ 4 ] = tcg_swap_cond ( args [ 4 ] )		8218863	0		=			
ANR	8219406	ArrayIndexing	args [ 4 ]		8218863	0					
ANR	8219407	Identifier	args		8218863	0					
ANR	8219408	PrimaryExpression	4		8218863	1					
ANR	8219409	CallExpression	tcg_swap_cond ( args [ 4 ] )		8218863	1					
ANR	8219410	Callee	tcg_swap_cond		8218863	0					
ANR	8219411	Identifier	tcg_swap_cond		8218863	0					
ANR	8219412	ArgumentList	args [ 4 ]		8218863	1					
ANR	8219413	Argument	args [ 4 ]		8218863	0					
ANR	8219414	ArrayIndexing	args [ 4 ]		8218863	0					
ANR	8219415	Identifier	args		8218863	0					
ANR	8219416	PrimaryExpression	4		8218863	1					
ANR	8219417	BreakStatement	break ;	173:12:3123:3128	8218863	96	True				
ANR	8219418	Label	case INDEX_op_setcond2_i32 :	175:8:3139:3165	8218863	97	True				
ANR	8219419	Identifier	INDEX_op_setcond2_i32		8218863	0					
ANR	8219420	IfStatement	"if ( swap_commutative2 ( & args [ 1 ] , & args [ 3 ] ) )"		8218863	98					
ANR	8219421	Condition	"swap_commutative2 ( & args [ 1 ] , & args [ 3 ] )"	177:16:3184:3220	8218863	0	True				
ANR	8219422	CallExpression	"swap_commutative2 ( & args [ 1 ] , & args [ 3 ] )"		8218863	0					
ANR	8219423	Callee	swap_commutative2		8218863	0					
ANR	8219424	Identifier	swap_commutative2		8218863	0					
ANR	8219425	ArgumentList	& args [ 1 ]		8218863	1					
ANR	8219426	Argument	& args [ 1 ]		8218863	0					
ANR	8219427	UnaryOperationExpression	& args [ 1 ]		8218863	0					
ANR	8219428	UnaryOperator	&		8218863	0					
ANR	8219429	ArrayIndexing	args [ 1 ]		8218863	1					
ANR	8219430	Identifier	args		8218863	0					
ANR	8219431	PrimaryExpression	1		8218863	1					
ANR	8219432	Argument	& args [ 3 ]		8218863	1					
ANR	8219433	UnaryOperationExpression	& args [ 3 ]		8218863	0					
ANR	8219434	UnaryOperator	&		8218863	0					
ANR	8219435	ArrayIndexing	args [ 3 ]		8218863	1					
ANR	8219436	Identifier	args		8218863	0					
ANR	8219437	PrimaryExpression	3		8218863	1					
ANR	8219438	CompoundStatement		175:55:3188:3188	8218863	1					
ANR	8219439	ExpressionStatement	args [ 5 ] = tcg_swap_cond ( args [ 5 ] )	179:16:3242:3274	8218863	0	True				
ANR	8219440	AssignmentExpression	args [ 5 ] = tcg_swap_cond ( args [ 5 ] )		8218863	0		=			
ANR	8219441	ArrayIndexing	args [ 5 ]		8218863	0					
ANR	8219442	Identifier	args		8218863	0					
ANR	8219443	PrimaryExpression	5		8218863	1					
ANR	8219444	CallExpression	tcg_swap_cond ( args [ 5 ] )		8218863	1					
ANR	8219445	Callee	tcg_swap_cond		8218863	0					
ANR	8219446	Identifier	tcg_swap_cond		8218863	0					
ANR	8219447	ArgumentList	args [ 5 ]		8218863	1					
ANR	8219448	Argument	args [ 5 ]		8218863	0					
ANR	8219449	ArrayIndexing	args [ 5 ]		8218863	0					
ANR	8219450	Identifier	args		8218863	0					
ANR	8219451	PrimaryExpression	5		8218863	1					
ANR	8219452	BreakStatement	break ;	183:12:3304:3309	8218863	99	True				
ANR	8219453	Label	default :	185:8:3320:3327	8218863	100	True				
ANR	8219454	Identifier	default		8218863	0					
ANR	8219455	BreakStatement	break ;	187:12:3342:3347	8218863	101	True				
ANR	8219456	SwitchStatement	switch ( opc )		8218863	17					
ANR	8219457	Condition	opc	197:16:3502:3504	8218863	0	True				
ANR	8219458	Identifier	opc		8218863	0					
ANR	8219459	CompoundStatement		195:21:3472:3472	8218863	1					
ANR	8219460	Statement	CASE_OP_32_64	199:8:3518:3530	8218863	0	True				
ANR	8219461	Statement	(	199:21:3531:3531	8218863	1	True				
ANR	8219462	Statement	shl	199:22:3532:3534	8218863	2	True				
ANR	8219463	Statement	)	199:25:3535:3535	8218863	3	True				
ANR	8219464	Statement	:	199:26:3536:3536	8218863	4	True				
ANR	8219465	Statement	CASE_OP_32_64	201:8:3547:3559	8218863	5	True				
ANR	8219466	Statement	(	201:21:3560:3560	8218863	6	True				
ANR	8219467	Statement	shr	201:22:3561:3563	8218863	7	True				
ANR	8219468	Statement	)	201:25:3564:3564	8218863	8	True				
ANR	8219469	Statement	:	201:26:3565:3565	8218863	9	True				
ANR	8219470	Statement	CASE_OP_32_64	203:8:3576:3588	8218863	10	True				
ANR	8219471	Statement	(	203:21:3589:3589	8218863	11	True				
ANR	8219472	Statement	sar	203:22:3590:3592	8218863	12	True				
ANR	8219473	Statement	)	203:25:3593:3593	8218863	13	True				
ANR	8219474	Statement	:	203:26:3594:3594	8218863	14	True				
ANR	8219475	Statement	CASE_OP_32_64	205:8:3605:3617	8218863	15	True				
ANR	8219476	Statement	(	205:21:3618:3618	8218863	16	True				
ANR	8219477	Statement	rotl	205:22:3619:3622	8218863	17	True				
ANR	8219478	Statement	)	205:26:3623:3623	8218863	18	True				
ANR	8219479	Statement	:	205:27:3624:3624	8218863	19	True				
ANR	8219480	Statement	CASE_OP_32_64	207:8:3635:3647	8218863	20	True				
ANR	8219481	Statement	(	207:21:3648:3648	8218863	21	True				
ANR	8219482	Statement	rotr	207:22:3649:3652	8218863	22	True				
ANR	8219483	Statement	)	207:26:3653:3653	8218863	23	True				
ANR	8219484	Statement	:	207:27:3654:3654	8218863	24	True				
ANR	8219485	IfStatement	if ( temps [ args [ 1 ] ] . state == TCG_TEMP_CONST && temps [ args [ 1 ] ] . val == 0 )		8218863	25					
ANR	8219486	Condition	temps [ args [ 1 ] ] . state == TCG_TEMP_CONST && temps [ args [ 1 ] ] . val == 0	209:16:3673:3754	8218863	0	True				
ANR	8219487	AndExpression	temps [ args [ 1 ] ] . state == TCG_TEMP_CONST && temps [ args [ 1 ] ] . val == 0		8218863	0		&&			
ANR	8219488	EqualityExpression	temps [ args [ 1 ] ] . state == TCG_TEMP_CONST		8218863	0		==			
ANR	8219489	MemberAccess	temps [ args [ 1 ] ] . state		8218863	0					
ANR	8219490	ArrayIndexing	temps [ args [ 1 ] ]		8218863	0					
ANR	8219491	Identifier	temps		8218863	0					
ANR	8219492	ArrayIndexing	args [ 1 ]		8218863	1					
ANR	8219493	Identifier	args		8218863	0					
ANR	8219494	PrimaryExpression	1		8218863	1					
ANR	8219495	Identifier	state		8218863	1					
ANR	8219496	Identifier	TCG_TEMP_CONST		8218863	1					
ANR	8219497	EqualityExpression	temps [ args [ 1 ] ] . val == 0		8218863	1		==			
ANR	8219498	MemberAccess	temps [ args [ 1 ] ] . val		8218863	0					
ANR	8219499	ArrayIndexing	temps [ args [ 1 ] ]		8218863	0					
ANR	8219500	Identifier	temps		8218863	0					
ANR	8219501	ArrayIndexing	args [ 1 ]		8218863	1					
ANR	8219502	Identifier	args		8218863	0					
ANR	8219503	PrimaryExpression	1		8218863	1					
ANR	8219504	Identifier	val		8218863	1					
ANR	8219505	PrimaryExpression	0		8218863	1					
ANR	8219506	CompoundStatement		209:44:3722:3722	8218863	1					
ANR	8219507	ExpressionStatement	"tcg_opt_gen_movi ( s , op , args , args [ 0 ] , 0 )"	213:16:3776:3817	8218863	0	True				
ANR	8219508	CallExpression	"tcg_opt_gen_movi ( s , op , args , args [ 0 ] , 0 )"		8218863	0					
ANR	8219509	Callee	tcg_opt_gen_movi		8218863	0					
ANR	8219510	Identifier	tcg_opt_gen_movi		8218863	0					
ANR	8219511	ArgumentList	s		8218863	1					
ANR	8219512	Argument	s		8218863	0					
ANR	8219513	Identifier	s		8218863	0					
ANR	8219514	Argument	op		8218863	1					
ANR	8219515	Identifier	op		8218863	0					
ANR	8219516	Argument	args		8218863	2					
ANR	8219517	Identifier	args		8218863	0					
ANR	8219518	Argument	args [ 0 ]		8218863	3					
ANR	8219519	ArrayIndexing	args [ 0 ]		8218863	0					
ANR	8219520	Identifier	args		8218863	0					
ANR	8219521	PrimaryExpression	0		8218863	1					
ANR	8219522	Argument	0		8218863	4					
ANR	8219523	PrimaryExpression	0		8218863	0					
ANR	8219524	ContinueStatement	continue ;	215:16:3836:3844	8218863	1	True				
ANR	8219525	BreakStatement	break ;	219:12:3874:3879	8218863	26	True				
ANR	8219526	Statement	CASE_OP_32_64	221:8:3890:3902	8218863	27	True				
ANR	8219527	Statement	(	221:21:3903:3903	8218863	28	True				
ANR	8219528	Statement	sub	221:22:3904:3906	8218863	29	True				
ANR	8219529	Statement	)	221:25:3907:3907	8218863	30	True				
ANR	8219530	Statement	:	221:26:3908:3908	8218863	31	True				
ANR	8219531	CompoundStatement		225:16:3942:3955	8218863	32					
ANR	8219532	IdentifierDeclStatement	TCGOpcode neg_op ;	225:16:3942:3958	8218863	0	True				
ANR	8219533	IdentifierDecl	neg_op		8218863	0					
ANR	8219534	IdentifierDeclType	TCGOpcode		8218863	0					
ANR	8219535	Identifier	neg_op		8218863	1					
ANR	8219536	IdentifierDeclStatement	bool have_neg ;	227:16:3977:3990	8218863	1	True				
ANR	8219537	IdentifierDecl	have_neg		8218863	0					
ANR	8219538	IdentifierDeclType	bool		8218863	0					
ANR	8219539	Identifier	have_neg		8218863	1					
ANR	8219540	IfStatement	if ( temps [ args [ 2 ] ] . state == TCG_TEMP_CONST )		8218863	2					
ANR	8219541	Condition	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST	231:20:4015:4052	8218863	0	True				
ANR	8219542	EqualityExpression	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST		8218863	0		==			
ANR	8219543	MemberAccess	temps [ args [ 2 ] ] . state		8218863	0					
ANR	8219544	ArrayIndexing	temps [ args [ 2 ] ]		8218863	0					
ANR	8219545	Identifier	temps		8218863	0					
ANR	8219546	ArrayIndexing	args [ 2 ]		8218863	1					
ANR	8219547	Identifier	args		8218863	0					
ANR	8219548	PrimaryExpression	2		8218863	1					
ANR	8219549	Identifier	state		8218863	1					
ANR	8219550	Identifier	TCG_TEMP_CONST		8218863	1					
ANR	8219551	CompoundStatement		229:60:4020:4020	8218863	1					
ANR	8219552	BreakStatement	break ;	235:20:4145:4150	8218863	0	True				
ANR	8219553	IfStatement	if ( opc == INDEX_op_sub_i32 )		8218863	3					
ANR	8219554	Condition	opc == INDEX_op_sub_i32	239:20:4192:4214	8218863	0	True				
ANR	8219555	EqualityExpression	opc == INDEX_op_sub_i32		8218863	0		==			
ANR	8219556	Identifier	opc		8218863	0					
ANR	8219557	Identifier	INDEX_op_sub_i32		8218863	1					
ANR	8219558	CompoundStatement		237:45:4182:4182	8218863	1					
ANR	8219559	ExpressionStatement	neg_op = INDEX_op_neg_i32	241:20:4240:4265	8218863	0	True				
ANR	8219560	AssignmentExpression	neg_op = INDEX_op_neg_i32		8218863	0		=			
ANR	8219561	Identifier	neg_op		8218863	0					
ANR	8219562	Identifier	INDEX_op_neg_i32		8218863	1					
ANR	8219563	ExpressionStatement	have_neg = TCG_TARGET_HAS_neg_i32	243:20:4288:4321	8218863	1	True				
ANR	8219564	AssignmentExpression	have_neg = TCG_TARGET_HAS_neg_i32		8218863	0		=			
ANR	8219565	Identifier	have_neg		8218863	0					
ANR	8219566	Identifier	TCG_TARGET_HAS_neg_i32		8218863	1					
ANR	8219567	ElseStatement	else		8218863	0					
ANR	8219568	CompoundStatement		243:23:4312:4312	8218863	0					
ANR	8219569	ExpressionStatement	neg_op = INDEX_op_neg_i64	247:20:4370:4395	8218863	0	True				
ANR	8219570	AssignmentExpression	neg_op = INDEX_op_neg_i64		8218863	0		=			
ANR	8219571	Identifier	neg_op		8218863	0					
ANR	8219572	Identifier	INDEX_op_neg_i64		8218863	1					
ANR	8219573	ExpressionStatement	have_neg = TCG_TARGET_HAS_neg_i64	249:20:4418:4451	8218863	1	True				
ANR	8219574	AssignmentExpression	have_neg = TCG_TARGET_HAS_neg_i64		8218863	0		=			
ANR	8219575	Identifier	have_neg		8218863	0					
ANR	8219576	Identifier	TCG_TARGET_HAS_neg_i64		8218863	1					
ANR	8219577	IfStatement	if ( ! have_neg )		8218863	4					
ANR	8219578	Condition	! have_neg	253:20:4493:4501	8218863	0	True				
ANR	8219579	UnaryOperationExpression	! have_neg		8218863	0					
ANR	8219580	UnaryOperator	!		8218863	0					
ANR	8219581	Identifier	have_neg		8218863	1					
ANR	8219582	CompoundStatement		251:31:4469:4469	8218863	1					
ANR	8219583	BreakStatement	break ;	255:20:4527:4532	8218863	0	True				
ANR	8219584	IfStatement	if ( temps [ args [ 1 ] ] . state == TCG_TEMP_CONST && temps [ args [ 1 ] ] . val == 0 )		8218863	5					
ANR	8219585	Condition	temps [ args [ 1 ] ] . state == TCG_TEMP_CONST && temps [ args [ 1 ] ] . val == 0	259:20:4574:4659	8218863	0	True				
ANR	8219586	AndExpression	temps [ args [ 1 ] ] . state == TCG_TEMP_CONST && temps [ args [ 1 ] ] . val == 0		8218863	0		&&			
ANR	8219587	EqualityExpression	temps [ args [ 1 ] ] . state == TCG_TEMP_CONST		8218863	0		==			
ANR	8219588	MemberAccess	temps [ args [ 1 ] ] . state		8218863	0					
ANR	8219589	ArrayIndexing	temps [ args [ 1 ] ]		8218863	0					
ANR	8219590	Identifier	temps		8218863	0					
ANR	8219591	ArrayIndexing	args [ 1 ]		8218863	1					
ANR	8219592	Identifier	args		8218863	0					
ANR	8219593	PrimaryExpression	1		8218863	1					
ANR	8219594	Identifier	state		8218863	1					
ANR	8219595	Identifier	TCG_TEMP_CONST		8218863	1					
ANR	8219596	EqualityExpression	temps [ args [ 1 ] ] . val == 0		8218863	1		==			
ANR	8219597	MemberAccess	temps [ args [ 1 ] ] . val		8218863	0					
ANR	8219598	ArrayIndexing	temps [ args [ 1 ] ]		8218863	0					
ANR	8219599	Identifier	temps		8218863	0					
ANR	8219600	ArrayIndexing	args [ 1 ]		8218863	1					
ANR	8219601	Identifier	args		8218863	0					
ANR	8219602	PrimaryExpression	1		8218863	1					
ANR	8219603	Identifier	val		8218863	1					
ANR	8219604	PrimaryExpression	0		8218863	1					
ANR	8219605	CompoundStatement		259:48:4627:4627	8218863	1					
ANR	8219606	ExpressionStatement	op -> opc = neg_op	263:20:4685:4701	8218863	0	True				
ANR	8219607	AssignmentExpression	op -> opc = neg_op		8218863	0		=			
ANR	8219608	PtrMemberAccess	op -> opc		8218863	0					
ANR	8219609	Identifier	op		8218863	0					
ANR	8219610	Identifier	opc		8218863	1					
ANR	8219611	Identifier	neg_op		8218863	1					
ANR	8219612	ExpressionStatement	reset_temp ( args [ 0 ] )	265:20:4724:4743	8218863	1	True				
ANR	8219613	CallExpression	reset_temp ( args [ 0 ] )		8218863	0					
ANR	8219614	Callee	reset_temp		8218863	0					
ANR	8219615	Identifier	reset_temp		8218863	0					
ANR	8219616	ArgumentList	args [ 0 ]		8218863	1					
ANR	8219617	Argument	args [ 0 ]		8218863	0					
ANR	8219618	ArrayIndexing	args [ 0 ]		8218863	0					
ANR	8219619	Identifier	args		8218863	0					
ANR	8219620	PrimaryExpression	0		8218863	1					
ANR	8219621	ExpressionStatement	args [ 1 ] = args [ 2 ]	267:20:4766:4783	8218863	2	True				
ANR	8219622	AssignmentExpression	args [ 1 ] = args [ 2 ]		8218863	0		=			
ANR	8219623	ArrayIndexing	args [ 1 ]		8218863	0					
ANR	8219624	Identifier	args		8218863	0					
ANR	8219625	PrimaryExpression	1		8218863	1					
ANR	8219626	ArrayIndexing	args [ 2 ]		8218863	1					
ANR	8219627	Identifier	args		8218863	0					
ANR	8219628	PrimaryExpression	2		8218863	1					
ANR	8219629	ContinueStatement	continue ;	269:20:4806:4814	8218863	3	True				
ANR	8219630	BreakStatement	break ;	275:12:4863:4868	8218863	33	True				
ANR	8219631	Statement	CASE_OP_32_64	277:8:4879:4891	8218863	34	True				
ANR	8219632	Statement	(	277:21:4892:4892	8218863	35	True				
ANR	8219633	Statement	xor	277:22:4893:4895	8218863	36	True				
ANR	8219634	Statement	)	277:25:4896:4896	8218863	37	True				
ANR	8219635	Statement	:	277:26:4897:4897	8218863	38	True				
ANR	8219636	Statement	CASE_OP_32_64	279:8:4908:4920	8218863	39	True				
ANR	8219637	Statement	(	279:21:4921:4921	8218863	40	True				
ANR	8219638	Statement	nand	279:22:4922:4925	8218863	41	True				
ANR	8219639	Statement	)	279:26:4926:4926	8218863	42	True				
ANR	8219640	Statement	:	279:27:4927:4927	8218863	43	True				
ANR	8219641	IfStatement	if ( temps [ args [ 1 ] ] . state != TCG_TEMP_CONST && temps [ args [ 2 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . val == - 1 )		8218863	44					
ANR	8219642	Condition	temps [ args [ 1 ] ] . state != TCG_TEMP_CONST && temps [ args [ 2 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . val == - 1	281:16:4946:5087	8218863	0	True				
ANR	8219643	AndExpression	temps [ args [ 1 ] ] . state != TCG_TEMP_CONST && temps [ args [ 2 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . val == - 1		8218863	0		&&			
ANR	8219644	EqualityExpression	temps [ args [ 1 ] ] . state != TCG_TEMP_CONST		8218863	0		!=			
ANR	8219645	MemberAccess	temps [ args [ 1 ] ] . state		8218863	0					
ANR	8219646	ArrayIndexing	temps [ args [ 1 ] ]		8218863	0					
ANR	8219647	Identifier	temps		8218863	0					
ANR	8219648	ArrayIndexing	args [ 1 ]		8218863	1					
ANR	8219649	Identifier	args		8218863	0					
ANR	8219650	PrimaryExpression	1		8218863	1					
ANR	8219651	Identifier	state		8218863	1					
ANR	8219652	Identifier	TCG_TEMP_CONST		8218863	1					
ANR	8219653	AndExpression	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . val == - 1		8218863	1		&&			
ANR	8219654	EqualityExpression	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST		8218863	0		==			
ANR	8219655	MemberAccess	temps [ args [ 2 ] ] . state		8218863	0					
ANR	8219656	ArrayIndexing	temps [ args [ 2 ] ]		8218863	0					
ANR	8219657	Identifier	temps		8218863	0					
ANR	8219658	ArrayIndexing	args [ 2 ]		8218863	1					
ANR	8219659	Identifier	args		8218863	0					
ANR	8219660	PrimaryExpression	2		8218863	1					
ANR	8219661	Identifier	state		8218863	1					
ANR	8219662	Identifier	TCG_TEMP_CONST		8218863	1					
ANR	8219663	EqualityExpression	temps [ args [ 2 ] ] . val == - 1		8218863	1		==			
ANR	8219664	MemberAccess	temps [ args [ 2 ] ] . val		8218863	0					
ANR	8219665	ArrayIndexing	temps [ args [ 2 ] ]		8218863	0					
ANR	8219666	Identifier	temps		8218863	0					
ANR	8219667	ArrayIndexing	args [ 2 ]		8218863	1					
ANR	8219668	Identifier	args		8218863	0					
ANR	8219669	PrimaryExpression	2		8218863	1					
ANR	8219670	Identifier	val		8218863	1					
ANR	8219671	UnaryOperationExpression	- 1		8218863	1					
ANR	8219672	UnaryOperator	-		8218863	0					
ANR	8219673	PrimaryExpression	1		8218863	1					
ANR	8219674	CompoundStatement		283:45:5055:5055	8218863	1					
ANR	8219675	ExpressionStatement	i = 1	287:16:5109:5114	8218863	0	True				
ANR	8219676	AssignmentExpression	i = 1		8218863	0		=			
ANR	8219677	Identifier	i		8218863	0					
ANR	8219678	PrimaryExpression	1		8218863	1					
ANR	8219679	GotoStatement	goto try_not ;	289:16:5133:5145	8218863	1	True				
ANR	8219680	Identifier	try_not		8218863	0					
ANR	8219681	BreakStatement	break ;	293:12:5175:5180	8218863	45	True				
ANR	8219682	Statement	CASE_OP_32_64	295:8:5191:5203	8218863	46	True				
ANR	8219683	Statement	(	295:21:5204:5204	8218863	47	True				
ANR	8219684	Statement	nor	295:22:5205:5207	8218863	48	True				
ANR	8219685	Statement	)	295:25:5208:5208	8218863	49	True				
ANR	8219686	Statement	:	295:26:5209:5209	8218863	50	True				
ANR	8219687	IfStatement	if ( temps [ args [ 1 ] ] . state != TCG_TEMP_CONST && temps [ args [ 2 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . val == 0 )		8218863	51					
ANR	8219688	Condition	temps [ args [ 1 ] ] . state != TCG_TEMP_CONST && temps [ args [ 2 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . val == 0	297:16:5228:5368	8218863	0	True				
ANR	8219689	AndExpression	temps [ args [ 1 ] ] . state != TCG_TEMP_CONST && temps [ args [ 2 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . val == 0		8218863	0		&&			
ANR	8219690	EqualityExpression	temps [ args [ 1 ] ] . state != TCG_TEMP_CONST		8218863	0		!=			
ANR	8219691	MemberAccess	temps [ args [ 1 ] ] . state		8218863	0					
ANR	8219692	ArrayIndexing	temps [ args [ 1 ] ]		8218863	0					
ANR	8219693	Identifier	temps		8218863	0					
ANR	8219694	ArrayIndexing	args [ 1 ]		8218863	1					
ANR	8219695	Identifier	args		8218863	0					
ANR	8219696	PrimaryExpression	1		8218863	1					
ANR	8219697	Identifier	state		8218863	1					
ANR	8219698	Identifier	TCG_TEMP_CONST		8218863	1					
ANR	8219699	AndExpression	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . val == 0		8218863	1		&&			
ANR	8219700	EqualityExpression	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST		8218863	0		==			
ANR	8219701	MemberAccess	temps [ args [ 2 ] ] . state		8218863	0					
ANR	8219702	ArrayIndexing	temps [ args [ 2 ] ]		8218863	0					
ANR	8219703	Identifier	temps		8218863	0					
ANR	8219704	ArrayIndexing	args [ 2 ]		8218863	1					
ANR	8219705	Identifier	args		8218863	0					
ANR	8219706	PrimaryExpression	2		8218863	1					
ANR	8219707	Identifier	state		8218863	1					
ANR	8219708	Identifier	TCG_TEMP_CONST		8218863	1					
ANR	8219709	EqualityExpression	temps [ args [ 2 ] ] . val == 0		8218863	1		==			
ANR	8219710	MemberAccess	temps [ args [ 2 ] ] . val		8218863	0					
ANR	8219711	ArrayIndexing	temps [ args [ 2 ] ]		8218863	0					
ANR	8219712	Identifier	temps		8218863	0					
ANR	8219713	ArrayIndexing	args [ 2 ]		8218863	1					
ANR	8219714	Identifier	args		8218863	0					
ANR	8219715	PrimaryExpression	2		8218863	1					
ANR	8219716	Identifier	val		8218863	1					
ANR	8219717	PrimaryExpression	0		8218863	1					
ANR	8219718	CompoundStatement		299:44:5336:5336	8218863	1					
ANR	8219719	ExpressionStatement	i = 1	303:16:5390:5395	8218863	0	True				
ANR	8219720	AssignmentExpression	i = 1		8218863	0		=			
ANR	8219721	Identifier	i		8218863	0					
ANR	8219722	PrimaryExpression	1		8218863	1					
ANR	8219723	GotoStatement	goto try_not ;	305:16:5414:5426	8218863	1	True				
ANR	8219724	Identifier	try_not		8218863	0					
ANR	8219725	BreakStatement	break ;	309:12:5456:5461	8218863	52	True				
ANR	8219726	Statement	CASE_OP_32_64	311:8:5472:5484	8218863	53	True				
ANR	8219727	Statement	(	311:21:5485:5485	8218863	54	True				
ANR	8219728	Statement	andc	311:22:5486:5489	8218863	55	True				
ANR	8219729	Statement	)	311:26:5490:5490	8218863	56	True				
ANR	8219730	Statement	:	311:27:5491:5491	8218863	57	True				
ANR	8219731	IfStatement	if ( temps [ args [ 2 ] ] . state != TCG_TEMP_CONST && temps [ args [ 1 ] ] . state == TCG_TEMP_CONST && temps [ args [ 1 ] ] . val == - 1 )		8218863	58					
ANR	8219732	Condition	temps [ args [ 2 ] ] . state != TCG_TEMP_CONST && temps [ args [ 1 ] ] . state == TCG_TEMP_CONST && temps [ args [ 1 ] ] . val == - 1	313:16:5510:5651	8218863	0	True				
ANR	8219733	AndExpression	temps [ args [ 2 ] ] . state != TCG_TEMP_CONST && temps [ args [ 1 ] ] . state == TCG_TEMP_CONST && temps [ args [ 1 ] ] . val == - 1		8218863	0		&&			
ANR	8219734	EqualityExpression	temps [ args [ 2 ] ] . state != TCG_TEMP_CONST		8218863	0		!=			
ANR	8219735	MemberAccess	temps [ args [ 2 ] ] . state		8218863	0					
ANR	8219736	ArrayIndexing	temps [ args [ 2 ] ]		8218863	0					
ANR	8219737	Identifier	temps		8218863	0					
ANR	8219738	ArrayIndexing	args [ 2 ]		8218863	1					
ANR	8219739	Identifier	args		8218863	0					
ANR	8219740	PrimaryExpression	2		8218863	1					
ANR	8219741	Identifier	state		8218863	1					
ANR	8219742	Identifier	TCG_TEMP_CONST		8218863	1					
ANR	8219743	AndExpression	temps [ args [ 1 ] ] . state == TCG_TEMP_CONST && temps [ args [ 1 ] ] . val == - 1		8218863	1		&&			
ANR	8219744	EqualityExpression	temps [ args [ 1 ] ] . state == TCG_TEMP_CONST		8218863	0		==			
ANR	8219745	MemberAccess	temps [ args [ 1 ] ] . state		8218863	0					
ANR	8219746	ArrayIndexing	temps [ args [ 1 ] ]		8218863	0					
ANR	8219747	Identifier	temps		8218863	0					
ANR	8219748	ArrayIndexing	args [ 1 ]		8218863	1					
ANR	8219749	Identifier	args		8218863	0					
ANR	8219750	PrimaryExpression	1		8218863	1					
ANR	8219751	Identifier	state		8218863	1					
ANR	8219752	Identifier	TCG_TEMP_CONST		8218863	1					
ANR	8219753	EqualityExpression	temps [ args [ 1 ] ] . val == - 1		8218863	1		==			
ANR	8219754	MemberAccess	temps [ args [ 1 ] ] . val		8218863	0					
ANR	8219755	ArrayIndexing	temps [ args [ 1 ] ]		8218863	0					
ANR	8219756	Identifier	temps		8218863	0					
ANR	8219757	ArrayIndexing	args [ 1 ]		8218863	1					
ANR	8219758	Identifier	args		8218863	0					
ANR	8219759	PrimaryExpression	1		8218863	1					
ANR	8219760	Identifier	val		8218863	1					
ANR	8219761	UnaryOperationExpression	- 1		8218863	1					
ANR	8219762	UnaryOperator	-		8218863	0					
ANR	8219763	PrimaryExpression	1		8218863	1					
ANR	8219764	CompoundStatement		315:45:5619:5619	8218863	1					
ANR	8219765	ExpressionStatement	i = 2	319:16:5673:5678	8218863	0	True				
ANR	8219766	AssignmentExpression	i = 2		8218863	0		=			
ANR	8219767	Identifier	i		8218863	0					
ANR	8219768	PrimaryExpression	2		8218863	1					
ANR	8219769	GotoStatement	goto try_not ;	321:16:5697:5709	8218863	1	True				
ANR	8219770	Identifier	try_not		8218863	0					
ANR	8219771	BreakStatement	break ;	325:12:5739:5744	8218863	59	True				
ANR	8219772	Statement	CASE_OP_32_64	327:8:5755:5767	8218863	60	True				
ANR	8219773	Statement	(	327:21:5768:5768	8218863	61	True				
ANR	8219774	Statement	orc	327:22:5769:5771	8218863	62	True				
ANR	8219775	Statement	)	327:25:5772:5772	8218863	63	True				
ANR	8219776	Statement	:	327:26:5773:5773	8218863	64	True				
ANR	8219777	Statement	CASE_OP_32_64	329:8:5784:5796	8218863	65	True				
ANR	8219778	Statement	(	329:21:5797:5797	8218863	66	True				
ANR	8219779	Statement	eqv	329:22:5798:5800	8218863	67	True				
ANR	8219780	Statement	)	329:25:5801:5801	8218863	68	True				
ANR	8219781	Statement	:	329:26:5802:5802	8218863	69	True				
ANR	8219782	IfStatement	if ( temps [ args [ 2 ] ] . state != TCG_TEMP_CONST && temps [ args [ 1 ] ] . state == TCG_TEMP_CONST && temps [ args [ 1 ] ] . val == 0 )		8218863	70					
ANR	8219783	Condition	temps [ args [ 2 ] ] . state != TCG_TEMP_CONST && temps [ args [ 1 ] ] . state == TCG_TEMP_CONST && temps [ args [ 1 ] ] . val == 0	331:16:5821:5961	8218863	0	True				
ANR	8219784	AndExpression	temps [ args [ 2 ] ] . state != TCG_TEMP_CONST && temps [ args [ 1 ] ] . state == TCG_TEMP_CONST && temps [ args [ 1 ] ] . val == 0		8218863	0		&&			
ANR	8219785	EqualityExpression	temps [ args [ 2 ] ] . state != TCG_TEMP_CONST		8218863	0		!=			
ANR	8219786	MemberAccess	temps [ args [ 2 ] ] . state		8218863	0					
ANR	8219787	ArrayIndexing	temps [ args [ 2 ] ]		8218863	0					
ANR	8219788	Identifier	temps		8218863	0					
ANR	8219789	ArrayIndexing	args [ 2 ]		8218863	1					
ANR	8219790	Identifier	args		8218863	0					
ANR	8219791	PrimaryExpression	2		8218863	1					
ANR	8219792	Identifier	state		8218863	1					
ANR	8219793	Identifier	TCG_TEMP_CONST		8218863	1					
ANR	8219794	AndExpression	temps [ args [ 1 ] ] . state == TCG_TEMP_CONST && temps [ args [ 1 ] ] . val == 0		8218863	1		&&			
ANR	8219795	EqualityExpression	temps [ args [ 1 ] ] . state == TCG_TEMP_CONST		8218863	0		==			
ANR	8219796	MemberAccess	temps [ args [ 1 ] ] . state		8218863	0					
ANR	8219797	ArrayIndexing	temps [ args [ 1 ] ]		8218863	0					
ANR	8219798	Identifier	temps		8218863	0					
ANR	8219799	ArrayIndexing	args [ 1 ]		8218863	1					
ANR	8219800	Identifier	args		8218863	0					
ANR	8219801	PrimaryExpression	1		8218863	1					
ANR	8219802	Identifier	state		8218863	1					
ANR	8219803	Identifier	TCG_TEMP_CONST		8218863	1					
ANR	8219804	EqualityExpression	temps [ args [ 1 ] ] . val == 0		8218863	1		==			
ANR	8219805	MemberAccess	temps [ args [ 1 ] ] . val		8218863	0					
ANR	8219806	ArrayIndexing	temps [ args [ 1 ] ]		8218863	0					
ANR	8219807	Identifier	temps		8218863	0					
ANR	8219808	ArrayIndexing	args [ 1 ]		8218863	1					
ANR	8219809	Identifier	args		8218863	0					
ANR	8219810	PrimaryExpression	1		8218863	1					
ANR	8219811	Identifier	val		8218863	1					
ANR	8219812	PrimaryExpression	0		8218863	1					
ANR	8219813	CompoundStatement		333:44:5929:5929	8218863	1					
ANR	8219814	ExpressionStatement	i = 2	337:16:5983:5988	8218863	0	True				
ANR	8219815	AssignmentExpression	i = 2		8218863	0		=			
ANR	8219816	Identifier	i		8218863	0					
ANR	8219817	PrimaryExpression	2		8218863	1					
ANR	8219818	GotoStatement	goto try_not ;	339:16:6007:6019	8218863	1	True				
ANR	8219819	Identifier	try_not		8218863	0					
ANR	8219820	BreakStatement	break ;	343:12:6049:6054	8218863	71	True				
ANR	8219821	Label	try_not :	345:8:6065:6072	8218863	72	True				
ANR	8219822	Identifier	try_not		8218863	0					
ANR	8219823	CompoundStatement		349:16:6106:6119	8218863	73					
ANR	8219824	IdentifierDeclStatement	TCGOpcode not_op ;	349:16:6106:6122	8218863	0	True				
ANR	8219825	IdentifierDecl	not_op		8218863	0					
ANR	8219826	IdentifierDeclType	TCGOpcode		8218863	0					
ANR	8219827	Identifier	not_op		8218863	1					
ANR	8219828	IdentifierDeclStatement	bool have_not ;	351:16:6141:6154	8218863	1	True				
ANR	8219829	IdentifierDecl	have_not		8218863	0					
ANR	8219830	IdentifierDeclType	bool		8218863	0					
ANR	8219831	Identifier	have_not		8218863	1					
ANR	8219832	IfStatement	if ( def -> flags & TCG_OPF_64BIT )		8218863	2					
ANR	8219833	Condition	def -> flags & TCG_OPF_64BIT	355:20:6179:6204	8218863	0	True				
ANR	8219834	BitAndExpression	def -> flags & TCG_OPF_64BIT		8218863	0		&			
ANR	8219835	PtrMemberAccess	def -> flags		8218863	0					
ANR	8219836	Identifier	def		8218863	0					
ANR	8219837	Identifier	flags		8218863	1					
ANR	8219838	Identifier	TCG_OPF_64BIT		8218863	1					
ANR	8219839	CompoundStatement		353:48:6172:6172	8218863	1					
ANR	8219840	ExpressionStatement	not_op = INDEX_op_not_i64	357:20:6230:6255	8218863	0	True				
ANR	8219841	AssignmentExpression	not_op = INDEX_op_not_i64		8218863	0		=			
ANR	8219842	Identifier	not_op		8218863	0					
ANR	8219843	Identifier	INDEX_op_not_i64		8218863	1					
ANR	8219844	ExpressionStatement	have_not = TCG_TARGET_HAS_not_i64	359:20:6278:6311	8218863	1	True				
ANR	8219845	AssignmentExpression	have_not = TCG_TARGET_HAS_not_i64		8218863	0		=			
ANR	8219846	Identifier	have_not		8218863	0					
ANR	8219847	Identifier	TCG_TARGET_HAS_not_i64		8218863	1					
ANR	8219848	ElseStatement	else		8218863	0					
ANR	8219849	CompoundStatement		359:23:6302:6302	8218863	0					
ANR	8219850	ExpressionStatement	not_op = INDEX_op_not_i32	363:20:6360:6385	8218863	0	True				
ANR	8219851	AssignmentExpression	not_op = INDEX_op_not_i32		8218863	0		=			
ANR	8219852	Identifier	not_op		8218863	0					
ANR	8219853	Identifier	INDEX_op_not_i32		8218863	1					
ANR	8219854	ExpressionStatement	have_not = TCG_TARGET_HAS_not_i32	365:20:6408:6441	8218863	1	True				
ANR	8219855	AssignmentExpression	have_not = TCG_TARGET_HAS_not_i32		8218863	0		=			
ANR	8219856	Identifier	have_not		8218863	0					
ANR	8219857	Identifier	TCG_TARGET_HAS_not_i32		8218863	1					
ANR	8219858	IfStatement	if ( ! have_not )		8218863	3					
ANR	8219859	Condition	! have_not	369:20:6483:6491	8218863	0	True				
ANR	8219860	UnaryOperationExpression	! have_not		8218863	0					
ANR	8219861	UnaryOperator	!		8218863	0					
ANR	8219862	Identifier	have_not		8218863	1					
ANR	8219863	CompoundStatement		367:31:6459:6459	8218863	1					
ANR	8219864	BreakStatement	break ;	371:20:6517:6522	8218863	0	True				
ANR	8219865	ExpressionStatement	op -> opc = not_op	375:16:6560:6576	8218863	4	True				
ANR	8219866	AssignmentExpression	op -> opc = not_op		8218863	0		=			
ANR	8219867	PtrMemberAccess	op -> opc		8218863	0					
ANR	8219868	Identifier	op		8218863	0					
ANR	8219869	Identifier	opc		8218863	1					
ANR	8219870	Identifier	not_op		8218863	1					
ANR	8219871	ExpressionStatement	reset_temp ( args [ 0 ] )	377:16:6595:6614	8218863	5	True				
ANR	8219872	CallExpression	reset_temp ( args [ 0 ] )		8218863	0					
ANR	8219873	Callee	reset_temp		8218863	0					
ANR	8219874	Identifier	reset_temp		8218863	0					
ANR	8219875	ArgumentList	args [ 0 ]		8218863	1					
ANR	8219876	Argument	args [ 0 ]		8218863	0					
ANR	8219877	ArrayIndexing	args [ 0 ]		8218863	0					
ANR	8219878	Identifier	args		8218863	0					
ANR	8219879	PrimaryExpression	0		8218863	1					
ANR	8219880	ExpressionStatement	args [ 1 ] = args [ i ]	379:16:6633:6650	8218863	6	True				
ANR	8219881	AssignmentExpression	args [ 1 ] = args [ i ]		8218863	0		=			
ANR	8219882	ArrayIndexing	args [ 1 ]		8218863	0					
ANR	8219883	Identifier	args		8218863	0					
ANR	8219884	PrimaryExpression	1		8218863	1					
ANR	8219885	ArrayIndexing	args [ i ]		8218863	1					
ANR	8219886	Identifier	args		8218863	0					
ANR	8219887	Identifier	i		8218863	1					
ANR	8219888	ContinueStatement	continue ;	381:16:6669:6677	8218863	7	True				
ANR	8219889	Label	default :	385:8:6703:6710	8218863	74	True				
ANR	8219890	Identifier	default		8218863	0					
ANR	8219891	BreakStatement	break ;	387:12:6725:6730	8218863	75	True				
ANR	8219892	SwitchStatement	switch ( opc )		8218863	18					
ANR	8219893	Condition	opc	395:16:6836:6838	8218863	0	True				
ANR	8219894	Identifier	opc		8218863	0					
ANR	8219895	CompoundStatement		393:21:6806:6806	8218863	1					
ANR	8219896	Statement	CASE_OP_32_64	397:8:6852:6864	8218863	0	True				
ANR	8219897	Statement	(	397:21:6865:6865	8218863	1	True				
ANR	8219898	Statement	add	397:22:6866:6868	8218863	2	True				
ANR	8219899	Statement	)	397:25:6869:6869	8218863	3	True				
ANR	8219900	Statement	:	397:26:6870:6870	8218863	4	True				
ANR	8219901	Statement	CASE_OP_32_64	399:8:6881:6893	8218863	5	True				
ANR	8219902	Statement	(	399:21:6894:6894	8218863	6	True				
ANR	8219903	Statement	sub	399:22:6895:6897	8218863	7	True				
ANR	8219904	Statement	)	399:25:6898:6898	8218863	8	True				
ANR	8219905	Statement	:	399:26:6899:6899	8218863	9	True				
ANR	8219906	Statement	CASE_OP_32_64	401:8:6910:6922	8218863	10	True				
ANR	8219907	Statement	(	401:21:6923:6923	8218863	11	True				
ANR	8219908	Statement	shl	401:22:6924:6926	8218863	12	True				
ANR	8219909	Statement	)	401:25:6927:6927	8218863	13	True				
ANR	8219910	Statement	:	401:26:6928:6928	8218863	14	True				
ANR	8219911	Statement	CASE_OP_32_64	403:8:6939:6951	8218863	15	True				
ANR	8219912	Statement	(	403:21:6952:6952	8218863	16	True				
ANR	8219913	Statement	shr	403:22:6953:6955	8218863	17	True				
ANR	8219914	Statement	)	403:25:6956:6956	8218863	18	True				
ANR	8219915	Statement	:	403:26:6957:6957	8218863	19	True				
ANR	8219916	Statement	CASE_OP_32_64	405:8:6968:6980	8218863	20	True				
ANR	8219917	Statement	(	405:21:6981:6981	8218863	21	True				
ANR	8219918	Statement	sar	405:22:6982:6984	8218863	22	True				
ANR	8219919	Statement	)	405:25:6985:6985	8218863	23	True				
ANR	8219920	Statement	:	405:26:6986:6986	8218863	24	True				
ANR	8219921	Statement	CASE_OP_32_64	407:8:6997:7009	8218863	25	True				
ANR	8219922	Statement	(	407:21:7010:7010	8218863	26	True				
ANR	8219923	Statement	rotl	407:22:7011:7014	8218863	27	True				
ANR	8219924	Statement	)	407:26:7015:7015	8218863	28	True				
ANR	8219925	Statement	:	407:27:7016:7016	8218863	29	True				
ANR	8219926	Statement	CASE_OP_32_64	409:8:7027:7039	8218863	30	True				
ANR	8219927	Statement	(	409:21:7040:7040	8218863	31	True				
ANR	8219928	Statement	rotr	409:22:7041:7044	8218863	32	True				
ANR	8219929	Statement	)	409:26:7045:7045	8218863	33	True				
ANR	8219930	Statement	:	409:27:7046:7046	8218863	34	True				
ANR	8219931	Statement	CASE_OP_32_64	411:8:7057:7069	8218863	35	True				
ANR	8219932	Statement	(	411:21:7070:7070	8218863	36	True				
ANR	8219933	Statement	or	411:22:7071:7072	8218863	37	True				
ANR	8219934	Statement	)	411:24:7073:7073	8218863	38	True				
ANR	8219935	Statement	:	411:25:7074:7074	8218863	39	True				
ANR	8219936	Statement	CASE_OP_32_64	413:8:7085:7097	8218863	40	True				
ANR	8219937	Statement	(	413:21:7098:7098	8218863	41	True				
ANR	8219938	Statement	xor	413:22:7099:7101	8218863	42	True				
ANR	8219939	Statement	)	413:25:7102:7102	8218863	43	True				
ANR	8219940	Statement	:	413:26:7103:7103	8218863	44	True				
ANR	8219941	Statement	CASE_OP_32_64	415:8:7114:7126	8218863	45	True				
ANR	8219942	Statement	(	415:21:7127:7127	8218863	46	True				
ANR	8219943	Statement	andc	415:22:7128:7131	8218863	47	True				
ANR	8219944	Statement	)	415:26:7132:7132	8218863	48	True				
ANR	8219945	Statement	:	415:27:7133:7133	8218863	49	True				
ANR	8219946	IfStatement	if ( temps [ args [ 1 ] ] . state != TCG_TEMP_CONST && temps [ args [ 2 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . val == 0 )		8218863	50					
ANR	8219947	Condition	temps [ args [ 1 ] ] . state != TCG_TEMP_CONST && temps [ args [ 2 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . val == 0	417:16:7152:7292	8218863	0	True				
ANR	8219948	AndExpression	temps [ args [ 1 ] ] . state != TCG_TEMP_CONST && temps [ args [ 2 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . val == 0		8218863	0		&&			
ANR	8219949	EqualityExpression	temps [ args [ 1 ] ] . state != TCG_TEMP_CONST		8218863	0		!=			
ANR	8219950	MemberAccess	temps [ args [ 1 ] ] . state		8218863	0					
ANR	8219951	ArrayIndexing	temps [ args [ 1 ] ]		8218863	0					
ANR	8219952	Identifier	temps		8218863	0					
ANR	8219953	ArrayIndexing	args [ 1 ]		8218863	1					
ANR	8219954	Identifier	args		8218863	0					
ANR	8219955	PrimaryExpression	1		8218863	1					
ANR	8219956	Identifier	state		8218863	1					
ANR	8219957	Identifier	TCG_TEMP_CONST		8218863	1					
ANR	8219958	AndExpression	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . val == 0		8218863	1		&&			
ANR	8219959	EqualityExpression	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST		8218863	0		==			
ANR	8219960	MemberAccess	temps [ args [ 2 ] ] . state		8218863	0					
ANR	8219961	ArrayIndexing	temps [ args [ 2 ] ]		8218863	0					
ANR	8219962	Identifier	temps		8218863	0					
ANR	8219963	ArrayIndexing	args [ 2 ]		8218863	1					
ANR	8219964	Identifier	args		8218863	0					
ANR	8219965	PrimaryExpression	2		8218863	1					
ANR	8219966	Identifier	state		8218863	1					
ANR	8219967	Identifier	TCG_TEMP_CONST		8218863	1					
ANR	8219968	EqualityExpression	temps [ args [ 2 ] ] . val == 0		8218863	1		==			
ANR	8219969	MemberAccess	temps [ args [ 2 ] ] . val		8218863	0					
ANR	8219970	ArrayIndexing	temps [ args [ 2 ] ]		8218863	0					
ANR	8219971	Identifier	temps		8218863	0					
ANR	8219972	ArrayIndexing	args [ 2 ]		8218863	1					
ANR	8219973	Identifier	args		8218863	0					
ANR	8219974	PrimaryExpression	2		8218863	1					
ANR	8219975	Identifier	val		8218863	1					
ANR	8219976	PrimaryExpression	0		8218863	1					
ANR	8219977	CompoundStatement		419:44:7260:7260	8218863	1					
ANR	8219978	ExpressionStatement	"tcg_opt_gen_mov ( s , op , args , args [ 0 ] , args [ 1 ] )"	423:16:7314:7360	8218863	0	True				
ANR	8219979	CallExpression	"tcg_opt_gen_mov ( s , op , args , args [ 0 ] , args [ 1 ] )"		8218863	0					
ANR	8219980	Callee	tcg_opt_gen_mov		8218863	0					
ANR	8219981	Identifier	tcg_opt_gen_mov		8218863	0					
ANR	8219982	ArgumentList	s		8218863	1					
ANR	8219983	Argument	s		8218863	0					
ANR	8219984	Identifier	s		8218863	0					
ANR	8219985	Argument	op		8218863	1					
ANR	8219986	Identifier	op		8218863	0					
ANR	8219987	Argument	args		8218863	2					
ANR	8219988	Identifier	args		8218863	0					
ANR	8219989	Argument	args [ 0 ]		8218863	3					
ANR	8219990	ArrayIndexing	args [ 0 ]		8218863	0					
ANR	8219991	Identifier	args		8218863	0					
ANR	8219992	PrimaryExpression	0		8218863	1					
ANR	8219993	Argument	args [ 1 ]		8218863	4					
ANR	8219994	ArrayIndexing	args [ 1 ]		8218863	0					
ANR	8219995	Identifier	args		8218863	0					
ANR	8219996	PrimaryExpression	1		8218863	1					
ANR	8219997	ContinueStatement	continue ;	425:16:7379:7387	8218863	1	True				
ANR	8219998	BreakStatement	break ;	429:12:7417:7422	8218863	51	True				
ANR	8219999	Statement	CASE_OP_32_64	431:8:7433:7445	8218863	52	True				
ANR	8220000	Statement	(	431:21:7446:7446	8218863	53	True				
ANR	8220001	Statement	and	431:22:7447:7449	8218863	54	True				
ANR	8220002	Statement	)	431:25:7450:7450	8218863	55	True				
ANR	8220003	Statement	:	431:26:7451:7451	8218863	56	True				
ANR	8220004	Statement	CASE_OP_32_64	433:8:7462:7474	8218863	57	True				
ANR	8220005	Statement	(	433:21:7475:7475	8218863	58	True				
ANR	8220006	Statement	orc	433:22:7476:7478	8218863	59	True				
ANR	8220007	Statement	)	433:25:7479:7479	8218863	60	True				
ANR	8220008	Statement	:	433:26:7480:7480	8218863	61	True				
ANR	8220009	Statement	CASE_OP_32_64	435:8:7491:7503	8218863	62	True				
ANR	8220010	Statement	(	435:21:7504:7504	8218863	63	True				
ANR	8220011	Statement	eqv	435:22:7505:7507	8218863	64	True				
ANR	8220012	Statement	)	435:25:7508:7508	8218863	65	True				
ANR	8220013	Statement	:	435:26:7509:7509	8218863	66	True				
ANR	8220014	IfStatement	if ( temps [ args [ 1 ] ] . state != TCG_TEMP_CONST && temps [ args [ 2 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . val == - 1 )		8218863	67					
ANR	8220015	Condition	temps [ args [ 1 ] ] . state != TCG_TEMP_CONST && temps [ args [ 2 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . val == - 1	437:16:7528:7669	8218863	0	True				
ANR	8220016	AndExpression	temps [ args [ 1 ] ] . state != TCG_TEMP_CONST && temps [ args [ 2 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . val == - 1		8218863	0		&&			
ANR	8220017	EqualityExpression	temps [ args [ 1 ] ] . state != TCG_TEMP_CONST		8218863	0		!=			
ANR	8220018	MemberAccess	temps [ args [ 1 ] ] . state		8218863	0					
ANR	8220019	ArrayIndexing	temps [ args [ 1 ] ]		8218863	0					
ANR	8220020	Identifier	temps		8218863	0					
ANR	8220021	ArrayIndexing	args [ 1 ]		8218863	1					
ANR	8220022	Identifier	args		8218863	0					
ANR	8220023	PrimaryExpression	1		8218863	1					
ANR	8220024	Identifier	state		8218863	1					
ANR	8220025	Identifier	TCG_TEMP_CONST		8218863	1					
ANR	8220026	AndExpression	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . val == - 1		8218863	1		&&			
ANR	8220027	EqualityExpression	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST		8218863	0		==			
ANR	8220028	MemberAccess	temps [ args [ 2 ] ] . state		8218863	0					
ANR	8220029	ArrayIndexing	temps [ args [ 2 ] ]		8218863	0					
ANR	8220030	Identifier	temps		8218863	0					
ANR	8220031	ArrayIndexing	args [ 2 ]		8218863	1					
ANR	8220032	Identifier	args		8218863	0					
ANR	8220033	PrimaryExpression	2		8218863	1					
ANR	8220034	Identifier	state		8218863	1					
ANR	8220035	Identifier	TCG_TEMP_CONST		8218863	1					
ANR	8220036	EqualityExpression	temps [ args [ 2 ] ] . val == - 1		8218863	1		==			
ANR	8220037	MemberAccess	temps [ args [ 2 ] ] . val		8218863	0					
ANR	8220038	ArrayIndexing	temps [ args [ 2 ] ]		8218863	0					
ANR	8220039	Identifier	temps		8218863	0					
ANR	8220040	ArrayIndexing	args [ 2 ]		8218863	1					
ANR	8220041	Identifier	args		8218863	0					
ANR	8220042	PrimaryExpression	2		8218863	1					
ANR	8220043	Identifier	val		8218863	1					
ANR	8220044	UnaryOperationExpression	- 1		8218863	1					
ANR	8220045	UnaryOperator	-		8218863	0					
ANR	8220046	PrimaryExpression	1		8218863	1					
ANR	8220047	CompoundStatement		439:45:7637:7637	8218863	1					
ANR	8220048	ExpressionStatement	"tcg_opt_gen_mov ( s , op , args , args [ 0 ] , args [ 1 ] )"	443:16:7691:7737	8218863	0	True				
ANR	8220049	CallExpression	"tcg_opt_gen_mov ( s , op , args , args [ 0 ] , args [ 1 ] )"		8218863	0					
ANR	8220050	Callee	tcg_opt_gen_mov		8218863	0					
ANR	8220051	Identifier	tcg_opt_gen_mov		8218863	0					
ANR	8220052	ArgumentList	s		8218863	1					
ANR	8220053	Argument	s		8218863	0					
ANR	8220054	Identifier	s		8218863	0					
ANR	8220055	Argument	op		8218863	1					
ANR	8220056	Identifier	op		8218863	0					
ANR	8220057	Argument	args		8218863	2					
ANR	8220058	Identifier	args		8218863	0					
ANR	8220059	Argument	args [ 0 ]		8218863	3					
ANR	8220060	ArrayIndexing	args [ 0 ]		8218863	0					
ANR	8220061	Identifier	args		8218863	0					
ANR	8220062	PrimaryExpression	0		8218863	1					
ANR	8220063	Argument	args [ 1 ]		8218863	4					
ANR	8220064	ArrayIndexing	args [ 1 ]		8218863	0					
ANR	8220065	Identifier	args		8218863	0					
ANR	8220066	PrimaryExpression	1		8218863	1					
ANR	8220067	ContinueStatement	continue ;	445:16:7756:7764	8218863	1	True				
ANR	8220068	BreakStatement	break ;	449:12:7794:7799	8218863	68	True				
ANR	8220069	Label	default :	451:8:7810:7817	8218863	69	True				
ANR	8220070	Identifier	default		8218863	0					
ANR	8220071	BreakStatement	break ;	453:12:7832:7837	8218863	70	True				
ANR	8220072	ExpressionStatement	mask = - 1	463:8:7983:7992	8218863	19	True				
ANR	8220073	AssignmentExpression	mask = - 1		8218863	0		=			
ANR	8220074	Identifier	mask		8218863	0					
ANR	8220075	UnaryOperationExpression	- 1		8218863	1					
ANR	8220076	UnaryOperator	-		8218863	0					
ANR	8220077	PrimaryExpression	1		8218863	1					
ANR	8220078	ExpressionStatement	affected = - 1	465:8:8003:8016	8218863	20	True				
ANR	8220079	AssignmentExpression	affected = - 1		8218863	0		=			
ANR	8220080	Identifier	affected		8218863	0					
ANR	8220081	UnaryOperationExpression	- 1		8218863	1					
ANR	8220082	UnaryOperator	-		8218863	0					
ANR	8220083	PrimaryExpression	1		8218863	1					
ANR	8220084	SwitchStatement	switch ( opc )		8218863	21					
ANR	8220085	Condition	opc	467:16:8035:8037	8218863	0	True				
ANR	8220086	Identifier	opc		8218863	0					
ANR	8220087	CompoundStatement		465:21:8005:8005	8218863	1					
ANR	8220088	Statement	CASE_OP_32_64	469:8:8051:8063	8218863	0	True				
ANR	8220089	Statement	(	469:21:8064:8064	8218863	1	True				
ANR	8220090	Statement	ext8s	469:22:8065:8069	8218863	2	True				
ANR	8220091	Statement	)	469:27:8070:8070	8218863	3	True				
ANR	8220092	Statement	:	469:28:8071:8071	8218863	4	True				
ANR	8220093	IfStatement	if ( ( temps [ args [ 1 ] ] . mask & 0x80 ) != 0 )		8218863	5					
ANR	8220094	Condition	( temps [ args [ 1 ] ] . mask & 0x80 ) != 0	471:16:8090:8122	8218863	0	True				
ANR	8220095	EqualityExpression	( temps [ args [ 1 ] ] . mask & 0x80 ) != 0		8218863	0		!=			
ANR	8220096	BitAndExpression	temps [ args [ 1 ] ] . mask & 0x80		8218863	0		&			
ANR	8220097	MemberAccess	temps [ args [ 1 ] ] . mask		8218863	0					
ANR	8220098	ArrayIndexing	temps [ args [ 1 ] ]		8218863	0					
ANR	8220099	Identifier	temps		8218863	0					
ANR	8220100	ArrayIndexing	args [ 1 ]		8218863	1					
ANR	8220101	Identifier	args		8218863	0					
ANR	8220102	PrimaryExpression	1		8218863	1					
ANR	8220103	Identifier	mask		8218863	1					
ANR	8220104	PrimaryExpression	0x80		8218863	1					
ANR	8220105	PrimaryExpression	0		8218863	1					
ANR	8220106	CompoundStatement		469:51:8090:8090	8218863	1					
ANR	8220107	BreakStatement	break ;	473:16:8144:8149	8218863	0	True				
ANR	8220108	Statement	CASE_OP_32_64	477:8:8175:8187	8218863	6	True				
ANR	8220109	Statement	(	477:21:8188:8188	8218863	7	True				
ANR	8220110	Statement	ext8u	477:22:8189:8193	8218863	8	True				
ANR	8220111	Statement	)	477:27:8194:8194	8218863	9	True				
ANR	8220112	Statement	:	477:28:8195:8195	8218863	10	True				
ANR	8220113	ExpressionStatement	mask = 0xff	479:12:8210:8221	8218863	11	True				
ANR	8220114	AssignmentExpression	mask = 0xff		8218863	0		=			
ANR	8220115	Identifier	mask		8218863	0					
ANR	8220116	PrimaryExpression	0xff		8218863	1					
ANR	8220117	GotoStatement	goto and_const ;	481:12:8236:8250	8218863	12	True				
ANR	8220118	Identifier	and_const		8218863	0					
ANR	8220119	Statement	CASE_OP_32_64	483:8:8261:8273	8218863	13	True				
ANR	8220120	Statement	(	483:21:8274:8274	8218863	14	True				
ANR	8220121	Statement	ext16s	483:22:8275:8280	8218863	15	True				
ANR	8220122	Statement	)	483:28:8281:8281	8218863	16	True				
ANR	8220123	Statement	:	483:29:8282:8282	8218863	17	True				
ANR	8220124	IfStatement	if ( ( temps [ args [ 1 ] ] . mask & 0x8000 ) != 0 )		8218863	18					
ANR	8220125	Condition	( temps [ args [ 1 ] ] . mask & 0x8000 ) != 0	485:16:8301:8335	8218863	0	True				
ANR	8220126	EqualityExpression	( temps [ args [ 1 ] ] . mask & 0x8000 ) != 0		8218863	0		!=			
ANR	8220127	BitAndExpression	temps [ args [ 1 ] ] . mask & 0x8000		8218863	0		&			
ANR	8220128	MemberAccess	temps [ args [ 1 ] ] . mask		8218863	0					
ANR	8220129	ArrayIndexing	temps [ args [ 1 ] ]		8218863	0					
ANR	8220130	Identifier	temps		8218863	0					
ANR	8220131	ArrayIndexing	args [ 1 ]		8218863	1					
ANR	8220132	Identifier	args		8218863	0					
ANR	8220133	PrimaryExpression	1		8218863	1					
ANR	8220134	Identifier	mask		8218863	1					
ANR	8220135	PrimaryExpression	0x8000		8218863	1					
ANR	8220136	PrimaryExpression	0		8218863	1					
ANR	8220137	CompoundStatement		483:53:8303:8303	8218863	1					
ANR	8220138	BreakStatement	break ;	487:16:8357:8362	8218863	0	True				
ANR	8220139	Statement	CASE_OP_32_64	491:8:8388:8400	8218863	19	True				
ANR	8220140	Statement	(	491:21:8401:8401	8218863	20	True				
ANR	8220141	Statement	ext16u	491:22:8402:8407	8218863	21	True				
ANR	8220142	Statement	)	491:28:8408:8408	8218863	22	True				
ANR	8220143	Statement	:	491:29:8409:8409	8218863	23	True				
ANR	8220144	ExpressionStatement	mask = 0xffff	493:12:8424:8437	8218863	24	True				
ANR	8220145	AssignmentExpression	mask = 0xffff		8218863	0		=			
ANR	8220146	Identifier	mask		8218863	0					
ANR	8220147	PrimaryExpression	0xffff		8218863	1					
ANR	8220148	GotoStatement	goto and_const ;	495:12:8452:8466	8218863	25	True				
ANR	8220149	Identifier	and_const		8218863	0					
ANR	8220150	Label	case INDEX_op_ext32s_i64 :	497:8:8477:8501	8218863	26	True				
ANR	8220151	Identifier	INDEX_op_ext32s_i64		8218863	0					
ANR	8220152	IfStatement	if ( ( temps [ args [ 1 ] ] . mask & 0x80000000 ) != 0 )		8218863	27					
ANR	8220153	Condition	( temps [ args [ 1 ] ] . mask & 0x80000000 ) != 0	499:16:8520:8558	8218863	0	True				
ANR	8220154	EqualityExpression	( temps [ args [ 1 ] ] . mask & 0x80000000 ) != 0		8218863	0		!=			
ANR	8220155	BitAndExpression	temps [ args [ 1 ] ] . mask & 0x80000000		8218863	0		&			
ANR	8220156	MemberAccess	temps [ args [ 1 ] ] . mask		8218863	0					
ANR	8220157	ArrayIndexing	temps [ args [ 1 ] ]		8218863	0					
ANR	8220158	Identifier	temps		8218863	0					
ANR	8220159	ArrayIndexing	args [ 1 ]		8218863	1					
ANR	8220160	Identifier	args		8218863	0					
ANR	8220161	PrimaryExpression	1		8218863	1					
ANR	8220162	Identifier	mask		8218863	1					
ANR	8220163	PrimaryExpression	0x80000000		8218863	1					
ANR	8220164	PrimaryExpression	0		8218863	1					
ANR	8220165	CompoundStatement		497:57:8526:8526	8218863	1					
ANR	8220166	BreakStatement	break ;	501:16:8580:8585	8218863	0	True				
ANR	8220167	Label	case INDEX_op_ext32u_i64 :	505:8:8611:8635	8218863	28	True				
ANR	8220168	Identifier	INDEX_op_ext32u_i64		8218863	0					
ANR	8220169	ExpressionStatement	mask = 0xffffffffU	507:12:8650:8668	8218863	29	True				
ANR	8220170	AssignmentExpression	mask = 0xffffffffU		8218863	0		=			
ANR	8220171	Identifier	mask		8218863	0					
ANR	8220172	PrimaryExpression	0xffffffffU		8218863	1					
ANR	8220173	GotoStatement	goto and_const ;	509:12:8683:8697	8218863	30	True				
ANR	8220174	Identifier	and_const		8218863	0					
ANR	8220175	Statement	CASE_OP_32_64	513:8:8710:8722	8218863	31	True				
ANR	8220176	Statement	(	513:21:8723:8723	8218863	32	True				
ANR	8220177	Statement	and	513:22:8724:8726	8218863	33	True				
ANR	8220178	Statement	)	513:25:8727:8727	8218863	34	True				
ANR	8220179	Statement	:	513:26:8728:8728	8218863	35	True				
ANR	8220180	ExpressionStatement	mask = temps [ args [ 2 ] ] . mask	515:12:8743:8769	8218863	36	True				
ANR	8220181	AssignmentExpression	mask = temps [ args [ 2 ] ] . mask		8218863	0		=			
ANR	8220182	Identifier	mask		8218863	0					
ANR	8220183	MemberAccess	temps [ args [ 2 ] ] . mask		8218863	1					
ANR	8220184	ArrayIndexing	temps [ args [ 2 ] ]		8218863	0					
ANR	8220185	Identifier	temps		8218863	0					
ANR	8220186	ArrayIndexing	args [ 2 ]		8218863	1					
ANR	8220187	Identifier	args		8218863	0					
ANR	8220188	PrimaryExpression	2		8218863	1					
ANR	8220189	Identifier	mask		8218863	1					
ANR	8220190	IfStatement	if ( temps [ args [ 2 ] ] . state == TCG_TEMP_CONST )		8218863	37					
ANR	8220191	Condition	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST	517:16:8788:8825	8218863	0	True				
ANR	8220192	EqualityExpression	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST		8218863	0		==			
ANR	8220193	MemberAccess	temps [ args [ 2 ] ] . state		8218863	0					
ANR	8220194	ArrayIndexing	temps [ args [ 2 ] ]		8218863	0					
ANR	8220195	Identifier	temps		8218863	0					
ANR	8220196	ArrayIndexing	args [ 2 ]		8218863	1					
ANR	8220197	Identifier	args		8218863	0					
ANR	8220198	PrimaryExpression	2		8218863	1					
ANR	8220199	Identifier	state		8218863	1					
ANR	8220200	Identifier	TCG_TEMP_CONST		8218863	1					
ANR	8220201	CompoundStatement		515:56:8793:8793	8218863	1					
ANR	8220202	Label	and_const :	519:8:8839:8848	8218863	0	True				
ANR	8220203	Identifier	and_const		8218863	0					
ANR	8220204	ExpressionStatement	affected = temps [ args [ 1 ] ] . mask & ~mask	521:16:8867:8905	8218863	1	True				
ANR	8220205	AssignmentExpression	affected = temps [ args [ 1 ] ] . mask & ~mask		8218863	0		=			
ANR	8220206	Identifier	affected		8218863	0					
ANR	8220207	BitAndExpression	temps [ args [ 1 ] ] . mask & ~mask		8218863	1		&			
ANR	8220208	MemberAccess	temps [ args [ 1 ] ] . mask		8218863	0					
ANR	8220209	ArrayIndexing	temps [ args [ 1 ] ]		8218863	0					
ANR	8220210	Identifier	temps		8218863	0					
ANR	8220211	ArrayIndexing	args [ 1 ]		8218863	1					
ANR	8220212	Identifier	args		8218863	0					
ANR	8220213	PrimaryExpression	1		8218863	1					
ANR	8220214	Identifier	mask		8218863	1					
ANR	8220215	Identifier	~mask		8218863	1					
ANR	8220216	ExpressionStatement	mask = temps [ args [ 1 ] ] . mask & mask	525:12:8935:8968	8218863	38	True				
ANR	8220217	AssignmentExpression	mask = temps [ args [ 1 ] ] . mask & mask		8218863	0		=			
ANR	8220218	Identifier	mask		8218863	0					
ANR	8220219	BitAndExpression	temps [ args [ 1 ] ] . mask & mask		8218863	1		&			
ANR	8220220	MemberAccess	temps [ args [ 1 ] ] . mask		8218863	0					
ANR	8220221	ArrayIndexing	temps [ args [ 1 ] ]		8218863	0					
ANR	8220222	Identifier	temps		8218863	0					
ANR	8220223	ArrayIndexing	args [ 1 ]		8218863	1					
ANR	8220224	Identifier	args		8218863	0					
ANR	8220225	PrimaryExpression	1		8218863	1					
ANR	8220226	Identifier	mask		8218863	1					
ANR	8220227	Identifier	mask		8218863	1					
ANR	8220228	BreakStatement	break ;	527:12:8983:8988	8218863	39	True				
ANR	8220229	Statement	CASE_OP_32_64	531:8:9001:9013	8218863	40	True				
ANR	8220230	Statement	(	531:21:9014:9014	8218863	41	True				
ANR	8220231	Statement	andc	531:22:9015:9018	8218863	42	True				
ANR	8220232	Statement	)	531:26:9019:9019	8218863	43	True				
ANR	8220233	Statement	:	531:27:9020:9020	8218863	44	True				
ANR	8220234	IfStatement	if ( temps [ args [ 2 ] ] . state == TCG_TEMP_CONST )		8218863	45					
ANR	8220235	Condition	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST	537:16:9186:9223	8218863	0	True				
ANR	8220236	EqualityExpression	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST		8218863	0		==			
ANR	8220237	MemberAccess	temps [ args [ 2 ] ] . state		8218863	0					
ANR	8220238	ArrayIndexing	temps [ args [ 2 ] ]		8218863	0					
ANR	8220239	Identifier	temps		8218863	0					
ANR	8220240	ArrayIndexing	args [ 2 ]		8218863	1					
ANR	8220241	Identifier	args		8218863	0					
ANR	8220242	PrimaryExpression	2		8218863	1					
ANR	8220243	Identifier	state		8218863	1					
ANR	8220244	Identifier	TCG_TEMP_CONST		8218863	1					
ANR	8220245	CompoundStatement		535:56:9191:9191	8218863	1					
ANR	8220246	ExpressionStatement	mask = ~temps [ args [ 2 ] ] . mask	539:16:9245:9272	8218863	0	True				
ANR	8220247	AssignmentExpression	mask = ~temps [ args [ 2 ] ] . mask		8218863	0		=			
ANR	8220248	Identifier	mask		8218863	0					
ANR	8220249	MemberAccess	~temps [ args [ 2 ] ] . mask		8218863	1					
ANR	8220250	ArrayIndexing	~temps [ args [ 2 ] ]		8218863	0					
ANR	8220251	Identifier	~temps		8218863	0					
ANR	8220252	ArrayIndexing	args [ 2 ]		8218863	1					
ANR	8220253	Identifier	args		8218863	0					
ANR	8220254	PrimaryExpression	2		8218863	1					
ANR	8220255	Identifier	mask		8218863	1					
ANR	8220256	GotoStatement	goto and_const ;	541:16:9291:9305	8218863	1	True				
ANR	8220257	Identifier	and_const		8218863	0					
ANR	8220258	ExpressionStatement	mask = temps [ args [ 1 ] ] . mask	547:12:9412:9438	8218863	46	True				
ANR	8220259	AssignmentExpression	mask = temps [ args [ 1 ] ] . mask		8218863	0		=			
ANR	8220260	Identifier	mask		8218863	0					
ANR	8220261	MemberAccess	temps [ args [ 1 ] ] . mask		8218863	1					
ANR	8220262	ArrayIndexing	temps [ args [ 1 ] ]		8218863	0					
ANR	8220263	Identifier	temps		8218863	0					
ANR	8220264	ArrayIndexing	args [ 1 ]		8218863	1					
ANR	8220265	Identifier	args		8218863	0					
ANR	8220266	PrimaryExpression	1		8218863	1					
ANR	8220267	Identifier	mask		8218863	1					
ANR	8220268	BreakStatement	break ;	549:12:9453:9458	8218863	47	True				
ANR	8220269	Label	case INDEX_op_sar_i32 :	553:8:9471:9492	8218863	48	True				
ANR	8220270	Identifier	INDEX_op_sar_i32		8218863	0					
ANR	8220271	IfStatement	if ( temps [ args [ 2 ] ] . state == TCG_TEMP_CONST )		8218863	49					
ANR	8220272	Condition	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST	555:16:9511:9548	8218863	0	True				
ANR	8220273	EqualityExpression	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST		8218863	0		==			
ANR	8220274	MemberAccess	temps [ args [ 2 ] ] . state		8218863	0					
ANR	8220275	ArrayIndexing	temps [ args [ 2 ] ]		8218863	0					
ANR	8220276	Identifier	temps		8218863	0					
ANR	8220277	ArrayIndexing	args [ 2 ]		8218863	1					
ANR	8220278	Identifier	args		8218863	0					
ANR	8220279	PrimaryExpression	2		8218863	1					
ANR	8220280	Identifier	state		8218863	1					
ANR	8220281	Identifier	TCG_TEMP_CONST		8218863	1					
ANR	8220282	CompoundStatement		553:56:9516:9516	8218863	1					
ANR	8220283	ExpressionStatement	tmp = temps [ args [ 2 ] ] . val & 31	557:16:9570:9599	8218863	0	True				
ANR	8220284	AssignmentExpression	tmp = temps [ args [ 2 ] ] . val & 31		8218863	0		=			
ANR	8220285	Identifier	tmp		8218863	0					
ANR	8220286	BitAndExpression	temps [ args [ 2 ] ] . val & 31		8218863	1		&			
ANR	8220287	MemberAccess	temps [ args [ 2 ] ] . val		8218863	0					
ANR	8220288	ArrayIndexing	temps [ args [ 2 ] ]		8218863	0					
ANR	8220289	Identifier	temps		8218863	0					
ANR	8220290	ArrayIndexing	args [ 2 ]		8218863	1					
ANR	8220291	Identifier	args		8218863	0					
ANR	8220292	PrimaryExpression	2		8218863	1					
ANR	8220293	Identifier	val		8218863	1					
ANR	8220294	PrimaryExpression	31		8218863	1					
ANR	8220295	ExpressionStatement	mask = ( int32_t ) temps [ args [ 1 ] ] . mask >> tmp	559:16:9618:9660	8218863	1	True				
ANR	8220296	AssignmentExpression	mask = ( int32_t ) temps [ args [ 1 ] ] . mask >> tmp		8218863	0		=			
ANR	8220297	Identifier	mask		8218863	0					
ANR	8220298	ShiftExpression	( int32_t ) temps [ args [ 1 ] ] . mask >> tmp		8218863	1		>>			
ANR	8220299	CastExpression	( int32_t ) temps [ args [ 1 ] ] . mask		8218863	0					
ANR	8220300	CastTarget	int32_t		8218863	0					
ANR	8220301	MemberAccess	temps [ args [ 1 ] ] . mask		8218863	1					
ANR	8220302	ArrayIndexing	temps [ args [ 1 ] ]		8218863	0					
ANR	8220303	Identifier	temps		8218863	0					
ANR	8220304	ArrayIndexing	args [ 1 ]		8218863	1					
ANR	8220305	Identifier	args		8218863	0					
ANR	8220306	PrimaryExpression	1		8218863	1					
ANR	8220307	Identifier	mask		8218863	1					
ANR	8220308	Identifier	tmp		8218863	1					
ANR	8220309	BreakStatement	break ;	563:12:9690:9695	8218863	50	True				
ANR	8220310	Label	case INDEX_op_sar_i64 :	565:8:9706:9727	8218863	51	True				
ANR	8220311	Identifier	INDEX_op_sar_i64		8218863	0					
ANR	8220312	IfStatement	if ( temps [ args [ 2 ] ] . state == TCG_TEMP_CONST )		8218863	52					
ANR	8220313	Condition	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST	567:16:9746:9783	8218863	0	True				
ANR	8220314	EqualityExpression	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST		8218863	0		==			
ANR	8220315	MemberAccess	temps [ args [ 2 ] ] . state		8218863	0					
ANR	8220316	ArrayIndexing	temps [ args [ 2 ] ]		8218863	0					
ANR	8220317	Identifier	temps		8218863	0					
ANR	8220318	ArrayIndexing	args [ 2 ]		8218863	1					
ANR	8220319	Identifier	args		8218863	0					
ANR	8220320	PrimaryExpression	2		8218863	1					
ANR	8220321	Identifier	state		8218863	1					
ANR	8220322	Identifier	TCG_TEMP_CONST		8218863	1					
ANR	8220323	CompoundStatement		565:56:9751:9751	8218863	1					
ANR	8220324	ExpressionStatement	tmp = temps [ args [ 2 ] ] . val & 63	569:16:9805:9834	8218863	0	True				
ANR	8220325	AssignmentExpression	tmp = temps [ args [ 2 ] ] . val & 63		8218863	0		=			
ANR	8220326	Identifier	tmp		8218863	0					
ANR	8220327	BitAndExpression	temps [ args [ 2 ] ] . val & 63		8218863	1		&			
ANR	8220328	MemberAccess	temps [ args [ 2 ] ] . val		8218863	0					
ANR	8220329	ArrayIndexing	temps [ args [ 2 ] ]		8218863	0					
ANR	8220330	Identifier	temps		8218863	0					
ANR	8220331	ArrayIndexing	args [ 2 ]		8218863	1					
ANR	8220332	Identifier	args		8218863	0					
ANR	8220333	PrimaryExpression	2		8218863	1					
ANR	8220334	Identifier	val		8218863	1					
ANR	8220335	PrimaryExpression	63		8218863	1					
ANR	8220336	ExpressionStatement	mask = ( int64_t ) temps [ args [ 1 ] ] . mask >> tmp	571:16:9853:9895	8218863	1	True				
ANR	8220337	AssignmentExpression	mask = ( int64_t ) temps [ args [ 1 ] ] . mask >> tmp		8218863	0		=			
ANR	8220338	Identifier	mask		8218863	0					
ANR	8220339	ShiftExpression	( int64_t ) temps [ args [ 1 ] ] . mask >> tmp		8218863	1		>>			
ANR	8220340	CastExpression	( int64_t ) temps [ args [ 1 ] ] . mask		8218863	0					
ANR	8220341	CastTarget	int64_t		8218863	0					
ANR	8220342	MemberAccess	temps [ args [ 1 ] ] . mask		8218863	1					
ANR	8220343	ArrayIndexing	temps [ args [ 1 ] ]		8218863	0					
ANR	8220344	Identifier	temps		8218863	0					
ANR	8220345	ArrayIndexing	args [ 1 ]		8218863	1					
ANR	8220346	Identifier	args		8218863	0					
ANR	8220347	PrimaryExpression	1		8218863	1					
ANR	8220348	Identifier	mask		8218863	1					
ANR	8220349	Identifier	tmp		8218863	1					
ANR	8220350	BreakStatement	break ;	575:12:9925:9930	8218863	53	True				
ANR	8220351	Label	case INDEX_op_shr_i32 :	579:8:9943:9964	8218863	54	True				
ANR	8220352	Identifier	INDEX_op_shr_i32		8218863	0					
ANR	8220353	IfStatement	if ( temps [ args [ 2 ] ] . state == TCG_TEMP_CONST )		8218863	55					
ANR	8220354	Condition	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST	581:16:9983:10020	8218863	0	True				
ANR	8220355	EqualityExpression	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST		8218863	0		==			
ANR	8220356	MemberAccess	temps [ args [ 2 ] ] . state		8218863	0					
ANR	8220357	ArrayIndexing	temps [ args [ 2 ] ]		8218863	0					
ANR	8220358	Identifier	temps		8218863	0					
ANR	8220359	ArrayIndexing	args [ 2 ]		8218863	1					
ANR	8220360	Identifier	args		8218863	0					
ANR	8220361	PrimaryExpression	2		8218863	1					
ANR	8220362	Identifier	state		8218863	1					
ANR	8220363	Identifier	TCG_TEMP_CONST		8218863	1					
ANR	8220364	CompoundStatement		579:56:9988:9988	8218863	1					
ANR	8220365	ExpressionStatement	tmp = temps [ args [ 2 ] ] . val & 31	583:16:10042:10071	8218863	0	True				
ANR	8220366	AssignmentExpression	tmp = temps [ args [ 2 ] ] . val & 31		8218863	0		=			
ANR	8220367	Identifier	tmp		8218863	0					
ANR	8220368	BitAndExpression	temps [ args [ 2 ] ] . val & 31		8218863	1		&			
ANR	8220369	MemberAccess	temps [ args [ 2 ] ] . val		8218863	0					
ANR	8220370	ArrayIndexing	temps [ args [ 2 ] ]		8218863	0					
ANR	8220371	Identifier	temps		8218863	0					
ANR	8220372	ArrayIndexing	args [ 2 ]		8218863	1					
ANR	8220373	Identifier	args		8218863	0					
ANR	8220374	PrimaryExpression	2		8218863	1					
ANR	8220375	Identifier	val		8218863	1					
ANR	8220376	PrimaryExpression	31		8218863	1					
ANR	8220377	ExpressionStatement	mask = ( uint32_t ) temps [ args [ 1 ] ] . mask >> tmp	585:16:10090:10133	8218863	1	True				
ANR	8220378	AssignmentExpression	mask = ( uint32_t ) temps [ args [ 1 ] ] . mask >> tmp		8218863	0		=			
ANR	8220379	Identifier	mask		8218863	0					
ANR	8220380	ShiftExpression	( uint32_t ) temps [ args [ 1 ] ] . mask >> tmp		8218863	1		>>			
ANR	8220381	CastExpression	( uint32_t ) temps [ args [ 1 ] ] . mask		8218863	0					
ANR	8220382	CastTarget	uint32_t		8218863	0					
ANR	8220383	MemberAccess	temps [ args [ 1 ] ] . mask		8218863	1					
ANR	8220384	ArrayIndexing	temps [ args [ 1 ] ]		8218863	0					
ANR	8220385	Identifier	temps		8218863	0					
ANR	8220386	ArrayIndexing	args [ 1 ]		8218863	1					
ANR	8220387	Identifier	args		8218863	0					
ANR	8220388	PrimaryExpression	1		8218863	1					
ANR	8220389	Identifier	mask		8218863	1					
ANR	8220390	Identifier	tmp		8218863	1					
ANR	8220391	BreakStatement	break ;	589:12:10163:10168	8218863	56	True				
ANR	8220392	Label	case INDEX_op_shr_i64 :	591:8:10179:10200	8218863	57	True				
ANR	8220393	Identifier	INDEX_op_shr_i64		8218863	0					
ANR	8220394	IfStatement	if ( temps [ args [ 2 ] ] . state == TCG_TEMP_CONST )		8218863	58					
ANR	8220395	Condition	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST	593:16:10219:10256	8218863	0	True				
ANR	8220396	EqualityExpression	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST		8218863	0		==			
ANR	8220397	MemberAccess	temps [ args [ 2 ] ] . state		8218863	0					
ANR	8220398	ArrayIndexing	temps [ args [ 2 ] ]		8218863	0					
ANR	8220399	Identifier	temps		8218863	0					
ANR	8220400	ArrayIndexing	args [ 2 ]		8218863	1					
ANR	8220401	Identifier	args		8218863	0					
ANR	8220402	PrimaryExpression	2		8218863	1					
ANR	8220403	Identifier	state		8218863	1					
ANR	8220404	Identifier	TCG_TEMP_CONST		8218863	1					
ANR	8220405	CompoundStatement		591:56:10224:10224	8218863	1					
ANR	8220406	ExpressionStatement	tmp = temps [ args [ 2 ] ] . val & 63	595:16:10278:10307	8218863	0	True				
ANR	8220407	AssignmentExpression	tmp = temps [ args [ 2 ] ] . val & 63		8218863	0		=			
ANR	8220408	Identifier	tmp		8218863	0					
ANR	8220409	BitAndExpression	temps [ args [ 2 ] ] . val & 63		8218863	1		&			
ANR	8220410	MemberAccess	temps [ args [ 2 ] ] . val		8218863	0					
ANR	8220411	ArrayIndexing	temps [ args [ 2 ] ]		8218863	0					
ANR	8220412	Identifier	temps		8218863	0					
ANR	8220413	ArrayIndexing	args [ 2 ]		8218863	1					
ANR	8220414	Identifier	args		8218863	0					
ANR	8220415	PrimaryExpression	2		8218863	1					
ANR	8220416	Identifier	val		8218863	1					
ANR	8220417	PrimaryExpression	63		8218863	1					
ANR	8220418	ExpressionStatement	mask = ( uint64_t ) temps [ args [ 1 ] ] . mask >> tmp	597:16:10326:10369	8218863	1	True				
ANR	8220419	AssignmentExpression	mask = ( uint64_t ) temps [ args [ 1 ] ] . mask >> tmp		8218863	0		=			
ANR	8220420	Identifier	mask		8218863	0					
ANR	8220421	ShiftExpression	( uint64_t ) temps [ args [ 1 ] ] . mask >> tmp		8218863	1		>>			
ANR	8220422	CastExpression	( uint64_t ) temps [ args [ 1 ] ] . mask		8218863	0					
ANR	8220423	CastTarget	uint64_t		8218863	0					
ANR	8220424	MemberAccess	temps [ args [ 1 ] ] . mask		8218863	1					
ANR	8220425	ArrayIndexing	temps [ args [ 1 ] ]		8218863	0					
ANR	8220426	Identifier	temps		8218863	0					
ANR	8220427	ArrayIndexing	args [ 1 ]		8218863	1					
ANR	8220428	Identifier	args		8218863	0					
ANR	8220429	PrimaryExpression	1		8218863	1					
ANR	8220430	Identifier	mask		8218863	1					
ANR	8220431	Identifier	tmp		8218863	1					
ANR	8220432	BreakStatement	break ;	601:12:10399:10404	8218863	59	True				
ANR	8220433	Label	case INDEX_op_trunc_shr_i32 :	605:8:10417:10444	8218863	60	True				
ANR	8220434	Identifier	INDEX_op_trunc_shr_i32		8218863	0					
ANR	8220435	ExpressionStatement	mask = ( uint64_t ) temps [ args [ 1 ] ] . mask >> args [ 2 ]	607:12:10459:10506	8218863	61	True				
ANR	8220436	AssignmentExpression	mask = ( uint64_t ) temps [ args [ 1 ] ] . mask >> args [ 2 ]		8218863	0		=			
ANR	8220437	Identifier	mask		8218863	0					
ANR	8220438	ShiftExpression	( uint64_t ) temps [ args [ 1 ] ] . mask >> args [ 2 ]		8218863	1		>>			
ANR	8220439	CastExpression	( uint64_t ) temps [ args [ 1 ] ] . mask		8218863	0					
ANR	8220440	CastTarget	uint64_t		8218863	0					
ANR	8220441	MemberAccess	temps [ args [ 1 ] ] . mask		8218863	1					
ANR	8220442	ArrayIndexing	temps [ args [ 1 ] ]		8218863	0					
ANR	8220443	Identifier	temps		8218863	0					
ANR	8220444	ArrayIndexing	args [ 1 ]		8218863	1					
ANR	8220445	Identifier	args		8218863	0					
ANR	8220446	PrimaryExpression	1		8218863	1					
ANR	8220447	Identifier	mask		8218863	1					
ANR	8220448	ArrayIndexing	args [ 2 ]		8218863	1					
ANR	8220449	Identifier	args		8218863	0					
ANR	8220450	PrimaryExpression	2		8218863	1					
ANR	8220451	BreakStatement	break ;	609:12:10521:10526	8218863	62	True				
ANR	8220452	Statement	CASE_OP_32_64	613:8:10539:10551	8218863	63	True				
ANR	8220453	Statement	(	613:21:10552:10552	8218863	64	True				
ANR	8220454	Statement	shl	613:22:10553:10555	8218863	65	True				
ANR	8220455	Statement	)	613:25:10556:10556	8218863	66	True				
ANR	8220456	Statement	:	613:26:10557:10557	8218863	67	True				
ANR	8220457	IfStatement	if ( temps [ args [ 2 ] ] . state == TCG_TEMP_CONST )		8218863	68					
ANR	8220458	Condition	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST	615:16:10576:10613	8218863	0	True				
ANR	8220459	EqualityExpression	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST		8218863	0		==			
ANR	8220460	MemberAccess	temps [ args [ 2 ] ] . state		8218863	0					
ANR	8220461	ArrayIndexing	temps [ args [ 2 ] ]		8218863	0					
ANR	8220462	Identifier	temps		8218863	0					
ANR	8220463	ArrayIndexing	args [ 2 ]		8218863	1					
ANR	8220464	Identifier	args		8218863	0					
ANR	8220465	PrimaryExpression	2		8218863	1					
ANR	8220466	Identifier	state		8218863	1					
ANR	8220467	Identifier	TCG_TEMP_CONST		8218863	1					
ANR	8220468	CompoundStatement		613:56:10581:10581	8218863	1					
ANR	8220469	ExpressionStatement	tmp = temps [ args [ 2 ] ] . val & ( TCG_TARGET_REG_BITS - 1 )	617:16:10635:10687	8218863	0	True				
ANR	8220470	AssignmentExpression	tmp = temps [ args [ 2 ] ] . val & ( TCG_TARGET_REG_BITS - 1 )		8218863	0		=			
ANR	8220471	Identifier	tmp		8218863	0					
ANR	8220472	BitAndExpression	temps [ args [ 2 ] ] . val & ( TCG_TARGET_REG_BITS - 1 )		8218863	1		&			
ANR	8220473	MemberAccess	temps [ args [ 2 ] ] . val		8218863	0					
ANR	8220474	ArrayIndexing	temps [ args [ 2 ] ]		8218863	0					
ANR	8220475	Identifier	temps		8218863	0					
ANR	8220476	ArrayIndexing	args [ 2 ]		8218863	1					
ANR	8220477	Identifier	args		8218863	0					
ANR	8220478	PrimaryExpression	2		8218863	1					
ANR	8220479	Identifier	val		8218863	1					
ANR	8220480	AdditiveExpression	TCG_TARGET_REG_BITS - 1		8218863	1		-			
ANR	8220481	Identifier	TCG_TARGET_REG_BITS		8218863	0					
ANR	8220482	PrimaryExpression	1		8218863	1					
ANR	8220483	ExpressionStatement	mask = temps [ args [ 1 ] ] . mask << tmp	619:16:10706:10739	8218863	1	True				
ANR	8220484	AssignmentExpression	mask = temps [ args [ 1 ] ] . mask << tmp		8218863	0		=			
ANR	8220485	Identifier	mask		8218863	0					
ANR	8220486	ShiftExpression	temps [ args [ 1 ] ] . mask << tmp		8218863	1		<<			
ANR	8220487	MemberAccess	temps [ args [ 1 ] ] . mask		8218863	0					
ANR	8220488	ArrayIndexing	temps [ args [ 1 ] ]		8218863	0					
ANR	8220489	Identifier	temps		8218863	0					
ANR	8220490	ArrayIndexing	args [ 1 ]		8218863	1					
ANR	8220491	Identifier	args		8218863	0					
ANR	8220492	PrimaryExpression	1		8218863	1					
ANR	8220493	Identifier	mask		8218863	1					
ANR	8220494	Identifier	tmp		8218863	1					
ANR	8220495	BreakStatement	break ;	623:12:10769:10774	8218863	69	True				
ANR	8220496	Statement	CASE_OP_32_64	627:8:10787:10799	8218863	70	True				
ANR	8220497	Statement	(	627:21:10800:10800	8218863	71	True				
ANR	8220498	Statement	neg	627:22:10801:10803	8218863	72	True				
ANR	8220499	Statement	)	627:25:10804:10804	8218863	73	True				
ANR	8220500	Statement	:	627:26:10805:10805	8218863	74	True				
ANR	8220501	ExpressionStatement	mask = - ( temps [ args [ 1 ] ] . mask & - temps [ args [ 1 ] ] . mask )	631:12:10888:10940	8218863	75	True				
ANR	8220502	AssignmentExpression	mask = - ( temps [ args [ 1 ] ] . mask & - temps [ args [ 1 ] ] . mask )		8218863	0		=			
ANR	8220503	Identifier	mask		8218863	0					
ANR	8220504	UnaryOperationExpression	- ( temps [ args [ 1 ] ] . mask & - temps [ args [ 1 ] ] . mask )		8218863	1					
ANR	8220505	UnaryOperator	-		8218863	0					
ANR	8220506	BitAndExpression	temps [ args [ 1 ] ] . mask & - temps [ args [ 1 ] ] . mask		8218863	1		&			
ANR	8220507	MemberAccess	temps [ args [ 1 ] ] . mask		8218863	0					
ANR	8220508	ArrayIndexing	temps [ args [ 1 ] ]		8218863	0					
ANR	8220509	Identifier	temps		8218863	0					
ANR	8220510	ArrayIndexing	args [ 1 ]		8218863	1					
ANR	8220511	Identifier	args		8218863	0					
ANR	8220512	PrimaryExpression	1		8218863	1					
ANR	8220513	Identifier	mask		8218863	1					
ANR	8220514	UnaryOperationExpression	- temps [ args [ 1 ] ] . mask		8218863	1					
ANR	8220515	UnaryOperator	-		8218863	0					
ANR	8220516	MemberAccess	temps [ args [ 1 ] ] . mask		8218863	1					
ANR	8220517	ArrayIndexing	temps [ args [ 1 ] ]		8218863	0					
ANR	8220518	Identifier	temps		8218863	0					
ANR	8220519	ArrayIndexing	args [ 1 ]		8218863	1					
ANR	8220520	Identifier	args		8218863	0					
ANR	8220521	PrimaryExpression	1		8218863	1					
ANR	8220522	Identifier	mask		8218863	1					
ANR	8220523	BreakStatement	break ;	633:12:10955:10960	8218863	76	True				
ANR	8220524	Statement	CASE_OP_32_64	637:8:10973:10985	8218863	77	True				
ANR	8220525	Statement	(	637:21:10986:10986	8218863	78	True				
ANR	8220526	Statement	deposit	637:22:10987:10993	8218863	79	True				
ANR	8220527	Statement	)	637:29:10994:10994	8218863	80	True				
ANR	8220528	Statement	:	637:30:10995:10995	8218863	81	True				
ANR	8220529	ExpressionStatement	"mask = deposit64 ( temps [ args [ 1 ] ] . mask , args [ 3 ] , args [ 4 ] , temps [ args [ 2 ] ] . mask )"	639:12:11010:11116	8218863	82	True				
ANR	8220530	AssignmentExpression	"mask = deposit64 ( temps [ args [ 1 ] ] . mask , args [ 3 ] , args [ 4 ] , temps [ args [ 2 ] ] . mask )"		8218863	0		=			
ANR	8220531	Identifier	mask		8218863	0					
ANR	8220532	CallExpression	"deposit64 ( temps [ args [ 1 ] ] . mask , args [ 3 ] , args [ 4 ] , temps [ args [ 2 ] ] . mask )"		8218863	1					
ANR	8220533	Callee	deposit64		8218863	0					
ANR	8220534	Identifier	deposit64		8218863	0					
ANR	8220535	ArgumentList	temps [ args [ 1 ] ] . mask		8218863	1					
ANR	8220536	Argument	temps [ args [ 1 ] ] . mask		8218863	0					
ANR	8220537	MemberAccess	temps [ args [ 1 ] ] . mask		8218863	0					
ANR	8220538	ArrayIndexing	temps [ args [ 1 ] ]		8218863	0					
ANR	8220539	Identifier	temps		8218863	0					
ANR	8220540	ArrayIndexing	args [ 1 ]		8218863	1					
ANR	8220541	Identifier	args		8218863	0					
ANR	8220542	PrimaryExpression	1		8218863	1					
ANR	8220543	Identifier	mask		8218863	1					
ANR	8220544	Argument	args [ 3 ]		8218863	1					
ANR	8220545	ArrayIndexing	args [ 3 ]		8218863	0					
ANR	8220546	Identifier	args		8218863	0					
ANR	8220547	PrimaryExpression	3		8218863	1					
ANR	8220548	Argument	args [ 4 ]		8218863	2					
ANR	8220549	ArrayIndexing	args [ 4 ]		8218863	0					
ANR	8220550	Identifier	args		8218863	0					
ANR	8220551	PrimaryExpression	4		8218863	1					
ANR	8220552	Argument	temps [ args [ 2 ] ] . mask		8218863	3					
ANR	8220553	MemberAccess	temps [ args [ 2 ] ] . mask		8218863	0					
ANR	8220554	ArrayIndexing	temps [ args [ 2 ] ]		8218863	0					
ANR	8220555	Identifier	temps		8218863	0					
ANR	8220556	ArrayIndexing	args [ 2 ]		8218863	1					
ANR	8220557	Identifier	args		8218863	0					
ANR	8220558	PrimaryExpression	2		8218863	1					
ANR	8220559	Identifier	mask		8218863	1					
ANR	8220560	BreakStatement	break ;	643:12:11131:11136	8218863	83	True				
ANR	8220561	Statement	CASE_OP_32_64	647:8:11149:11161	8218863	84	True				
ANR	8220562	Statement	(	647:21:11162:11162	8218863	85	True				
ANR	8220563	Statement	or	647:22:11163:11164	8218863	86	True				
ANR	8220564	Statement	)	647:24:11165:11165	8218863	87	True				
ANR	8220565	Statement	:	647:25:11166:11166	8218863	88	True				
ANR	8220566	Statement	CASE_OP_32_64	649:8:11177:11189	8218863	89	True				
ANR	8220567	Statement	(	649:21:11190:11190	8218863	90	True				
ANR	8220568	Statement	xor	649:22:11191:11193	8218863	91	True				
ANR	8220569	Statement	)	649:25:11194:11194	8218863	92	True				
ANR	8220570	Statement	:	649:26:11195:11195	8218863	93	True				
ANR	8220571	ExpressionStatement	mask = temps [ args [ 1 ] ] . mask | temps [ args [ 2 ] ] . mask	651:12:11210:11258	8218863	94	True				
ANR	8220572	AssignmentExpression	mask = temps [ args [ 1 ] ] . mask | temps [ args [ 2 ] ] . mask		8218863	0		=			
ANR	8220573	Identifier	mask		8218863	0					
ANR	8220574	InclusiveOrExpression	temps [ args [ 1 ] ] . mask | temps [ args [ 2 ] ] . mask		8218863	1		|			
ANR	8220575	MemberAccess	temps [ args [ 1 ] ] . mask		8218863	0					
ANR	8220576	ArrayIndexing	temps [ args [ 1 ] ]		8218863	0					
ANR	8220577	Identifier	temps		8218863	0					
ANR	8220578	ArrayIndexing	args [ 1 ]		8218863	1					
ANR	8220579	Identifier	args		8218863	0					
ANR	8220580	PrimaryExpression	1		8218863	1					
ANR	8220581	Identifier	mask		8218863	1					
ANR	8220582	MemberAccess	temps [ args [ 2 ] ] . mask		8218863	1					
ANR	8220583	ArrayIndexing	temps [ args [ 2 ] ]		8218863	0					
ANR	8220584	Identifier	temps		8218863	0					
ANR	8220585	ArrayIndexing	args [ 2 ]		8218863	1					
ANR	8220586	Identifier	args		8218863	0					
ANR	8220587	PrimaryExpression	2		8218863	1					
ANR	8220588	Identifier	mask		8218863	1					
ANR	8220589	BreakStatement	break ;	653:12:11273:11278	8218863	95	True				
ANR	8220590	Statement	CASE_OP_32_64	657:8:11291:11303	8218863	96	True				
ANR	8220591	Statement	(	657:21:11304:11304	8218863	97	True				
ANR	8220592	Statement	setcond	657:22:11305:11311	8218863	98	True				
ANR	8220593	Statement	)	657:29:11312:11312	8218863	99	True				
ANR	8220594	Statement	:	657:30:11313:11313	8218863	100	True				
ANR	8220595	Label	case INDEX_op_setcond2_i32 :	659:8:11324:11350	8218863	101	True				
ANR	8220596	Identifier	INDEX_op_setcond2_i32		8218863	0					
ANR	8220597	ExpressionStatement	mask = 1	661:12:11365:11373	8218863	102	True				
ANR	8220598	AssignmentExpression	mask = 1		8218863	0		=			
ANR	8220599	Identifier	mask		8218863	0					
ANR	8220600	PrimaryExpression	1		8218863	1					
ANR	8220601	BreakStatement	break ;	663:12:11388:11393	8218863	103	True				
ANR	8220602	Statement	CASE_OP_32_64	667:8:11406:11418	8218863	104	True				
ANR	8220603	Statement	(	667:21:11419:11419	8218863	105	True				
ANR	8220604	Statement	movcond	667:22:11420:11426	8218863	106	True				
ANR	8220605	Statement	)	667:29:11427:11427	8218863	107	True				
ANR	8220606	Statement	:	667:30:11428:11428	8218863	108	True				
ANR	8220607	ExpressionStatement	mask = temps [ args [ 3 ] ] . mask | temps [ args [ 4 ] ] . mask	669:12:11443:11491	8218863	109	True				
ANR	8220608	AssignmentExpression	mask = temps [ args [ 3 ] ] . mask | temps [ args [ 4 ] ] . mask		8218863	0		=			
ANR	8220609	Identifier	mask		8218863	0					
ANR	8220610	InclusiveOrExpression	temps [ args [ 3 ] ] . mask | temps [ args [ 4 ] ] . mask		8218863	1		|			
ANR	8220611	MemberAccess	temps [ args [ 3 ] ] . mask		8218863	0					
ANR	8220612	ArrayIndexing	temps [ args [ 3 ] ]		8218863	0					
ANR	8220613	Identifier	temps		8218863	0					
ANR	8220614	ArrayIndexing	args [ 3 ]		8218863	1					
ANR	8220615	Identifier	args		8218863	0					
ANR	8220616	PrimaryExpression	3		8218863	1					
ANR	8220617	Identifier	mask		8218863	1					
ANR	8220618	MemberAccess	temps [ args [ 4 ] ] . mask		8218863	1					
ANR	8220619	ArrayIndexing	temps [ args [ 4 ] ]		8218863	0					
ANR	8220620	Identifier	temps		8218863	0					
ANR	8220621	ArrayIndexing	args [ 4 ]		8218863	1					
ANR	8220622	Identifier	args		8218863	0					
ANR	8220623	PrimaryExpression	4		8218863	1					
ANR	8220624	Identifier	mask		8218863	1					
ANR	8220625	BreakStatement	break ;	671:12:11506:11511	8218863	110	True				
ANR	8220626	Statement	CASE_OP_32_64	675:8:11524:11536	8218863	111	True				
ANR	8220627	Statement	(	675:21:11537:11537	8218863	112	True				
ANR	8220628	Statement	ld8u	675:22:11538:11541	8218863	113	True				
ANR	8220629	Statement	)	675:26:11542:11542	8218863	114	True				
ANR	8220630	Statement	:	675:27:11543:11543	8218863	115	True				
ANR	8220631	ExpressionStatement	mask = 0xff	677:12:11558:11569	8218863	116	True				
ANR	8220632	AssignmentExpression	mask = 0xff		8218863	0		=			
ANR	8220633	Identifier	mask		8218863	0					
ANR	8220634	PrimaryExpression	0xff		8218863	1					
ANR	8220635	BreakStatement	break ;	679:12:11584:11589	8218863	117	True				
ANR	8220636	Statement	CASE_OP_32_64	681:8:11600:11612	8218863	118	True				
ANR	8220637	Statement	(	681:21:11613:11613	8218863	119	True				
ANR	8220638	Statement	ld16u	681:22:11614:11618	8218863	120	True				
ANR	8220639	Statement	)	681:27:11619:11619	8218863	121	True				
ANR	8220640	Statement	:	681:28:11620:11620	8218863	122	True				
ANR	8220641	ExpressionStatement	mask = 0xffff	683:12:11635:11648	8218863	123	True				
ANR	8220642	AssignmentExpression	mask = 0xffff		8218863	0		=			
ANR	8220643	Identifier	mask		8218863	0					
ANR	8220644	PrimaryExpression	0xffff		8218863	1					
ANR	8220645	BreakStatement	break ;	685:12:11663:11668	8218863	124	True				
ANR	8220646	Label	case INDEX_op_ld32u_i64 :	687:8:11679:11702	8218863	125	True				
ANR	8220647	Identifier	INDEX_op_ld32u_i64		8218863	0					
ANR	8220648	ExpressionStatement	mask = 0xffffffffu	689:12:11717:11735	8218863	126	True				
ANR	8220649	AssignmentExpression	mask = 0xffffffffu		8218863	0		=			
ANR	8220650	Identifier	mask		8218863	0					
ANR	8220651	PrimaryExpression	0xffffffffu		8218863	1					
ANR	8220652	BreakStatement	break ;	691:12:11750:11755	8218863	127	True				
ANR	8220653	Statement	CASE_OP_32_64	695:8:11768:11780	8218863	128	True				
ANR	8220654	Statement	(	695:21:11781:11781	8218863	129	True				
ANR	8220655	Statement	qemu_ld	695:22:11782:11788	8218863	130	True				
ANR	8220656	Statement	)	695:29:11789:11789	8218863	131	True				
ANR	8220657	Statement	:	695:30:11790:11790	8218863	132	True				
ANR	8220658	CompoundStatement		699:16:11850:11878	8218863	133					
ANR	8220659	IdentifierDeclStatement	TCGMemOpIdx oi = args [ nb_oargs + nb_iargs ] ;	699:16:11824:11866	8218863	0	True				
ANR	8220660	IdentifierDecl	oi = args [ nb_oargs + nb_iargs ]		8218863	0					
ANR	8220661	IdentifierDeclType	TCGMemOpIdx		8218863	0					
ANR	8220662	Identifier	oi		8218863	1					
ANR	8220663	AssignmentExpression	oi = args [ nb_oargs + nb_iargs ]		8218863	2		=			
ANR	8220664	Identifier	oi		8218863	0					
ANR	8220665	ArrayIndexing	args [ nb_oargs + nb_iargs ]		8218863	1					
ANR	8220666	Identifier	args		8218863	0					
ANR	8220667	AdditiveExpression	nb_oargs + nb_iargs		8218863	1		+			
ANR	8220668	Identifier	nb_oargs		8218863	0					
ANR	8220669	Identifier	nb_iargs		8218863	1					
ANR	8220670	IdentifierDeclStatement	TCGMemOp mop = get_memop ( oi ) ;	701:16:11885:11913	8218863	1	True				
ANR	8220671	IdentifierDecl	mop = get_memop ( oi )		8218863	0					
ANR	8220672	IdentifierDeclType	TCGMemOp		8218863	0					
ANR	8220673	Identifier	mop		8218863	1					
ANR	8220674	AssignmentExpression	mop = get_memop ( oi )		8218863	2		=			
ANR	8220675	Identifier	mop		8218863	0					
ANR	8220676	CallExpression	get_memop ( oi )		8218863	1					
ANR	8220677	Callee	get_memop		8218863	0					
ANR	8220678	Identifier	get_memop		8218863	0					
ANR	8220679	ArgumentList	oi		8218863	1					
ANR	8220680	Argument	oi		8218863	0					
ANR	8220681	Identifier	oi		8218863	0					
ANR	8220682	IfStatement	if ( ! ( mop & MO_SIGN ) )		8218863	2					
ANR	8220683	Condition	! ( mop & MO_SIGN )	703:20:11936:11951	8218863	0	True				
ANR	8220684	UnaryOperationExpression	! ( mop & MO_SIGN )		8218863	0					
ANR	8220685	UnaryOperator	!		8218863	0					
ANR	8220686	BitAndExpression	mop & MO_SIGN		8218863	1		&			
ANR	8220687	Identifier	mop		8218863	0					
ANR	8220688	Identifier	MO_SIGN		8218863	1					
ANR	8220689	CompoundStatement		701:38:11919:11919	8218863	1					
ANR	8220690	Statement	mask	705:20:11977:11980	8218863	0	True				
ANR	8220691	Statement	=	705:25:11982:11982	8218863	1	True				
ANR	8220692	Statement	(	705:27:11984:11984	8218863	2	True				
ANR	8220693	Statement	2UL	705:28:11985:11987	8218863	3	True				
ANR	8220694	Statement	L	705:31:11988:11988	8218863	4	True				
ANR	8220695	Statement	<<	705:33:11990:11991	8218863	5	True				
ANR	8220696	Statement	(	705:36:11993:11993	8218863	6	True				
ANR	8220697	Statement	(	705:37:11994:11994	8218863	7	True				
ANR	8220698	Statement	8	705:38:11995:11995	8218863	8	True				
ANR	8220699	Statement	<<	705:40:11997:11998	8218863	9	True				
ANR	8220700	Statement	(	705:43:12000:12000	8218863	10	True				
ANR	8220701	Statement	mop	705:44:12001:12003	8218863	11	True				
ANR	8220702	Statement	&	705:48:12005:12005	8218863	12	True				
ANR	8220703	Statement	MO_SIZE	705:50:12007:12013	8218863	13	True				
ANR	8220704	Statement	)	705:57:12014:12014	8218863	14	True				
ANR	8220705	Statement	)	705:58:12015:12015	8218863	15	True				
ANR	8220706	Statement	-	705:60:12017:12017	8218863	16	True				
ANR	8220707	Statement	1	705:62:12019:12019	8218863	17	True				
ANR	8220708	Statement	)	705:63:12020:12020	8218863	18	True				
ANR	8220709	Statement	)	705:64:12021:12021	8218863	19	True				
ANR	8220710	ExpressionStatement	- 1	705:66:12023:12026	8218863	20	True				
ANR	8220711	UnaryOperationExpression	- 1		8218863	0					
ANR	8220712	UnaryOperator	-		8218863	0					
ANR	8220713	PrimaryExpression	1		8218863	1					
ANR	8220714	BreakStatement	break ;	711:12:12075:12080	8218863	134	True				
ANR	8220715	Label	default :	715:8:12093:12100	8218863	135	True				
ANR	8220716	Identifier	default		8218863	0					
ANR	8220717	BreakStatement	break ;	717:12:12115:12120	8218863	136	True				
ANR	8220718	ExpressionStatement	partmask = mask	729:8:12365:12380	8218863	22	True				
ANR	8220719	AssignmentExpression	partmask = mask		8218863	0		=			
ANR	8220720	Identifier	partmask		8218863	0					
ANR	8220721	Identifier	mask		8218863	1					
ANR	8220722	IfStatement	if ( ! ( def -> flags & TCG_OPF_64BIT ) )		8218863	23					
ANR	8220723	Condition	! ( def -> flags & TCG_OPF_64BIT )	731:12:12395:12423	8218863	0	True				
ANR	8220724	UnaryOperationExpression	! ( def -> flags & TCG_OPF_64BIT )		8218863	0					
ANR	8220725	UnaryOperator	!		8218863	0					
ANR	8220726	BitAndExpression	def -> flags & TCG_OPF_64BIT		8218863	1		&			
ANR	8220727	PtrMemberAccess	def -> flags		8218863	0					
ANR	8220728	Identifier	def		8218863	0					
ANR	8220729	Identifier	flags		8218863	1					
ANR	8220730	Identifier	TCG_OPF_64BIT		8218863	1					
ANR	8220731	CompoundStatement		729:43:12391:12391	8218863	1					
ANR	8220732	ExpressionStatement	mask |= ~ ( tcg_target_ulong ) 0xffffffffu	733:12:12441:12479	8218863	0	True				
ANR	8220733	AssignmentExpression	mask |= ~ ( tcg_target_ulong ) 0xffffffffu		8218863	0		|=			
ANR	8220734	Identifier	mask		8218863	0					
ANR	8220735	UnaryOperationExpression	~ ( tcg_target_ulong ) 0xffffffffu		8218863	1					
ANR	8220736	UnaryOperator	~		8218863	0					
ANR	8220737	CastExpression	( tcg_target_ulong ) 0xffffffffu		8218863	1					
ANR	8220738	CastTarget	tcg_target_ulong		8218863	0					
ANR	8220739	PrimaryExpression	0xffffffffu		8218863	1					
ANR	8220740	ExpressionStatement	partmask &= 0xffffffffu	735:12:12494:12517	8218863	1	True				
ANR	8220741	AssignmentExpression	partmask &= 0xffffffffu		8218863	0		&=			
ANR	8220742	Identifier	partmask		8218863	0					
ANR	8220743	PrimaryExpression	0xffffffffu		8218863	1					
ANR	8220744	ExpressionStatement	affected &= 0xffffffffu	737:12:12532:12555	8218863	2	True				
ANR	8220745	AssignmentExpression	affected &= 0xffffffffu		8218863	0		&=			
ANR	8220746	Identifier	affected		8218863	0					
ANR	8220747	PrimaryExpression	0xffffffffu		8218863	1					
ANR	8220748	IfStatement	if ( partmask == 0 )		8218863	24					
ANR	8220749	Condition	partmask == 0	743:12:12583:12595	8218863	0	True				
ANR	8220750	EqualityExpression	partmask == 0		8218863	0		==			
ANR	8220751	Identifier	partmask		8218863	0					
ANR	8220752	PrimaryExpression	0		8218863	1					
ANR	8220753	CompoundStatement		741:27:12563:12563	8218863	1					
ANR	8220754	ExpressionStatement	assert ( nb_oargs == 1 )	745:12:12613:12634	8218863	0	True				
ANR	8220755	CallExpression	assert ( nb_oargs == 1 )		8218863	0					
ANR	8220756	Callee	assert		8218863	0					
ANR	8220757	Identifier	assert		8218863	0					
ANR	8220758	ArgumentList	nb_oargs == 1		8218863	1					
ANR	8220759	Argument	nb_oargs == 1		8218863	0					
ANR	8220760	EqualityExpression	nb_oargs == 1		8218863	0		==			
ANR	8220761	Identifier	nb_oargs		8218863	0					
ANR	8220762	PrimaryExpression	1		8218863	1					
ANR	8220763	ExpressionStatement	"tcg_opt_gen_movi ( s , op , args , args [ 0 ] , 0 )"	747:12:12649:12690	8218863	1	True				
ANR	8220764	CallExpression	"tcg_opt_gen_movi ( s , op , args , args [ 0 ] , 0 )"		8218863	0					
ANR	8220765	Callee	tcg_opt_gen_movi		8218863	0					
ANR	8220766	Identifier	tcg_opt_gen_movi		8218863	0					
ANR	8220767	ArgumentList	s		8218863	1					
ANR	8220768	Argument	s		8218863	0					
ANR	8220769	Identifier	s		8218863	0					
ANR	8220770	Argument	op		8218863	1					
ANR	8220771	Identifier	op		8218863	0					
ANR	8220772	Argument	args		8218863	2					
ANR	8220773	Identifier	args		8218863	0					
ANR	8220774	Argument	args [ 0 ]		8218863	3					
ANR	8220775	ArrayIndexing	args [ 0 ]		8218863	0					
ANR	8220776	Identifier	args		8218863	0					
ANR	8220777	PrimaryExpression	0		8218863	1					
ANR	8220778	Argument	0		8218863	4					
ANR	8220779	PrimaryExpression	0		8218863	0					
ANR	8220780	ContinueStatement	continue ;	749:12:12705:12713	8218863	2	True				
ANR	8220781	IfStatement	if ( affected == 0 )		8218863	25					
ANR	8220782	Condition	affected == 0	753:12:12739:12751	8218863	0	True				
ANR	8220783	EqualityExpression	affected == 0		8218863	0		==			
ANR	8220784	Identifier	affected		8218863	0					
ANR	8220785	PrimaryExpression	0		8218863	1					
ANR	8220786	CompoundStatement		751:27:12719:12719	8218863	1					
ANR	8220787	ExpressionStatement	assert ( nb_oargs == 1 )	755:12:12769:12790	8218863	0	True				
ANR	8220788	CallExpression	assert ( nb_oargs == 1 )		8218863	0					
ANR	8220789	Callee	assert		8218863	0					
ANR	8220790	Identifier	assert		8218863	0					
ANR	8220791	ArgumentList	nb_oargs == 1		8218863	1					
ANR	8220792	Argument	nb_oargs == 1		8218863	0					
ANR	8220793	EqualityExpression	nb_oargs == 1		8218863	0		==			
ANR	8220794	Identifier	nb_oargs		8218863	0					
ANR	8220795	PrimaryExpression	1		8218863	1					
ANR	8220796	ExpressionStatement	"tcg_opt_gen_mov ( s , op , args , args [ 0 ] , args [ 1 ] )"	757:12:12805:12851	8218863	1	True				
ANR	8220797	CallExpression	"tcg_opt_gen_mov ( s , op , args , args [ 0 ] , args [ 1 ] )"		8218863	0					
ANR	8220798	Callee	tcg_opt_gen_mov		8218863	0					
ANR	8220799	Identifier	tcg_opt_gen_mov		8218863	0					
ANR	8220800	ArgumentList	s		8218863	1					
ANR	8220801	Argument	s		8218863	0					
ANR	8220802	Identifier	s		8218863	0					
ANR	8220803	Argument	op		8218863	1					
ANR	8220804	Identifier	op		8218863	0					
ANR	8220805	Argument	args		8218863	2					
ANR	8220806	Identifier	args		8218863	0					
ANR	8220807	Argument	args [ 0 ]		8218863	3					
ANR	8220808	ArrayIndexing	args [ 0 ]		8218863	0					
ANR	8220809	Identifier	args		8218863	0					
ANR	8220810	PrimaryExpression	0		8218863	1					
ANR	8220811	Argument	args [ 1 ]		8218863	4					
ANR	8220812	ArrayIndexing	args [ 1 ]		8218863	0					
ANR	8220813	Identifier	args		8218863	0					
ANR	8220814	PrimaryExpression	1		8218863	1					
ANR	8220815	ContinueStatement	continue ;	759:12:12866:12874	8218863	2	True				
ANR	8220816	SwitchStatement	switch ( opc )		8218863	26					
ANR	8220817	Condition	opc	767:16:12977:12979	8218863	0	True				
ANR	8220818	Identifier	opc		8218863	0					
ANR	8220819	CompoundStatement		765:21:12947:12947	8218863	1					
ANR	8220820	Statement	CASE_OP_32_64	769:8:12993:13005	8218863	0	True				
ANR	8220821	Statement	(	769:21:13006:13006	8218863	1	True				
ANR	8220822	Statement	and	769:22:13007:13009	8218863	2	True				
ANR	8220823	Statement	)	769:25:13010:13010	8218863	3	True				
ANR	8220824	Statement	:	769:26:13011:13011	8218863	4	True				
ANR	8220825	Statement	CASE_OP_32_64	771:8:13022:13034	8218863	5	True				
ANR	8220826	Statement	(	771:21:13035:13035	8218863	6	True				
ANR	8220827	Statement	mul	771:22:13036:13038	8218863	7	True				
ANR	8220828	Statement	)	771:25:13039:13039	8218863	8	True				
ANR	8220829	Statement	:	771:26:13040:13040	8218863	9	True				
ANR	8220830	Statement	CASE_OP_32_64	773:8:13051:13063	8218863	10	True				
ANR	8220831	Statement	(	773:21:13064:13064	8218863	11	True				
ANR	8220832	Statement	muluh	773:22:13065:13069	8218863	12	True				
ANR	8220833	Statement	)	773:27:13070:13070	8218863	13	True				
ANR	8220834	Statement	:	773:28:13071:13071	8218863	14	True				
ANR	8220835	Statement	CASE_OP_32_64	775:8:13082:13094	8218863	15	True				
ANR	8220836	Statement	(	775:21:13095:13095	8218863	16	True				
ANR	8220837	Statement	mulsh	775:22:13096:13100	8218863	17	True				
ANR	8220838	Statement	)	775:27:13101:13101	8218863	18	True				
ANR	8220839	Statement	:	775:28:13102:13102	8218863	19	True				
ANR	8220840	IfStatement	if ( ( temps [ args [ 2 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . val == 0 ) )		8218863	20					
ANR	8220841	Condition	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . val == 0	777:16:13121:13204	8218863	0	True				
ANR	8220842	AndExpression	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . val == 0		8218863	0		&&			
ANR	8220843	EqualityExpression	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST		8218863	0		==			
ANR	8220844	MemberAccess	temps [ args [ 2 ] ] . state		8218863	0					
ANR	8220845	ArrayIndexing	temps [ args [ 2 ] ]		8218863	0					
ANR	8220846	Identifier	temps		8218863	0					
ANR	8220847	ArrayIndexing	args [ 2 ]		8218863	1					
ANR	8220848	Identifier	args		8218863	0					
ANR	8220849	PrimaryExpression	2		8218863	1					
ANR	8220850	Identifier	state		8218863	1					
ANR	8220851	Identifier	TCG_TEMP_CONST		8218863	1					
ANR	8220852	EqualityExpression	temps [ args [ 2 ] ] . val == 0		8218863	1		==			
ANR	8220853	MemberAccess	temps [ args [ 2 ] ] . val		8218863	0					
ANR	8220854	ArrayIndexing	temps [ args [ 2 ] ]		8218863	0					
ANR	8220855	Identifier	temps		8218863	0					
ANR	8220856	ArrayIndexing	args [ 2 ]		8218863	1					
ANR	8220857	Identifier	args		8218863	0					
ANR	8220858	PrimaryExpression	2		8218863	1					
ANR	8220859	Identifier	val		8218863	1					
ANR	8220860	PrimaryExpression	0		8218863	1					
ANR	8220861	CompoundStatement		777:45:13172:13172	8218863	1					
ANR	8220862	ExpressionStatement	"tcg_opt_gen_movi ( s , op , args , args [ 0 ] , 0 )"	781:16:13226:13267	8218863	0	True				
ANR	8220863	CallExpression	"tcg_opt_gen_movi ( s , op , args , args [ 0 ] , 0 )"		8218863	0					
ANR	8220864	Callee	tcg_opt_gen_movi		8218863	0					
ANR	8220865	Identifier	tcg_opt_gen_movi		8218863	0					
ANR	8220866	ArgumentList	s		8218863	1					
ANR	8220867	Argument	s		8218863	0					
ANR	8220868	Identifier	s		8218863	0					
ANR	8220869	Argument	op		8218863	1					
ANR	8220870	Identifier	op		8218863	0					
ANR	8220871	Argument	args		8218863	2					
ANR	8220872	Identifier	args		8218863	0					
ANR	8220873	Argument	args [ 0 ]		8218863	3					
ANR	8220874	ArrayIndexing	args [ 0 ]		8218863	0					
ANR	8220875	Identifier	args		8218863	0					
ANR	8220876	PrimaryExpression	0		8218863	1					
ANR	8220877	Argument	0		8218863	4					
ANR	8220878	PrimaryExpression	0		8218863	0					
ANR	8220879	ContinueStatement	continue ;	783:16:13286:13294	8218863	1	True				
ANR	8220880	BreakStatement	break ;	787:12:13324:13329	8218863	21	True				
ANR	8220881	Label	default :	789:8:13340:13347	8218863	22	True				
ANR	8220882	Identifier	default		8218863	0					
ANR	8220883	BreakStatement	break ;	791:12:13362:13367	8218863	23	True				
ANR	8220884	SwitchStatement	switch ( opc )		8218863	27					
ANR	8220885	Condition	opc	799:16:13469:13471	8218863	0	True				
ANR	8220886	Identifier	opc		8218863	0					
ANR	8220887	CompoundStatement		797:21:13439:13439	8218863	1					
ANR	8220888	Statement	CASE_OP_32_64	801:8:13485:13497	8218863	0	True				
ANR	8220889	Statement	(	801:21:13498:13498	8218863	1	True				
ANR	8220890	Statement	or	801:22:13499:13500	8218863	2	True				
ANR	8220891	Statement	)	801:24:13501:13501	8218863	3	True				
ANR	8220892	Statement	:	801:25:13502:13502	8218863	4	True				
ANR	8220893	Statement	CASE_OP_32_64	803:8:13513:13525	8218863	5	True				
ANR	8220894	Statement	(	803:21:13526:13526	8218863	6	True				
ANR	8220895	Statement	and	803:22:13527:13529	8218863	7	True				
ANR	8220896	Statement	)	803:25:13530:13530	8218863	8	True				
ANR	8220897	Statement	:	803:26:13531:13531	8218863	9	True				
ANR	8220898	IfStatement	"if ( temps_are_copies ( args [ 1 ] , args [ 2 ] ) )"		8218863	10					
ANR	8220899	Condition	"temps_are_copies ( args [ 1 ] , args [ 2 ] )"	805:16:13550:13583	8218863	0	True				
ANR	8220900	CallExpression	"temps_are_copies ( args [ 1 ] , args [ 2 ] )"		8218863	0					
ANR	8220901	Callee	temps_are_copies		8218863	0					
ANR	8220902	Identifier	temps_are_copies		8218863	0					
ANR	8220903	ArgumentList	args [ 1 ]		8218863	1					
ANR	8220904	Argument	args [ 1 ]		8218863	0					
ANR	8220905	ArrayIndexing	args [ 1 ]		8218863	0					
ANR	8220906	Identifier	args		8218863	0					
ANR	8220907	PrimaryExpression	1		8218863	1					
ANR	8220908	Argument	args [ 2 ]		8218863	1					
ANR	8220909	ArrayIndexing	args [ 2 ]		8218863	0					
ANR	8220910	Identifier	args		8218863	0					
ANR	8220911	PrimaryExpression	2		8218863	1					
ANR	8220912	CompoundStatement		803:52:13551:13551	8218863	1					
ANR	8220913	ExpressionStatement	"tcg_opt_gen_mov ( s , op , args , args [ 0 ] , args [ 1 ] )"	807:16:13605:13651	8218863	0	True				
ANR	8220914	CallExpression	"tcg_opt_gen_mov ( s , op , args , args [ 0 ] , args [ 1 ] )"		8218863	0					
ANR	8220915	Callee	tcg_opt_gen_mov		8218863	0					
ANR	8220916	Identifier	tcg_opt_gen_mov		8218863	0					
ANR	8220917	ArgumentList	s		8218863	1					
ANR	8220918	Argument	s		8218863	0					
ANR	8220919	Identifier	s		8218863	0					
ANR	8220920	Argument	op		8218863	1					
ANR	8220921	Identifier	op		8218863	0					
ANR	8220922	Argument	args		8218863	2					
ANR	8220923	Identifier	args		8218863	0					
ANR	8220924	Argument	args [ 0 ]		8218863	3					
ANR	8220925	ArrayIndexing	args [ 0 ]		8218863	0					
ANR	8220926	Identifier	args		8218863	0					
ANR	8220927	PrimaryExpression	0		8218863	1					
ANR	8220928	Argument	args [ 1 ]		8218863	4					
ANR	8220929	ArrayIndexing	args [ 1 ]		8218863	0					
ANR	8220930	Identifier	args		8218863	0					
ANR	8220931	PrimaryExpression	1		8218863	1					
ANR	8220932	ContinueStatement	continue ;	809:16:13670:13678	8218863	1	True				
ANR	8220933	BreakStatement	break ;	813:12:13708:13713	8218863	11	True				
ANR	8220934	Label	default :	815:8:13724:13731	8218863	12	True				
ANR	8220935	Identifier	default		8218863	0					
ANR	8220936	BreakStatement	break ;	817:12:13746:13751	8218863	13	True				
ANR	8220937	SwitchStatement	switch ( opc )		8218863	28					
ANR	8220938	Condition	opc	825:16:13854:13856	8218863	0	True				
ANR	8220939	Identifier	opc		8218863	0					
ANR	8220940	CompoundStatement		823:21:13824:13824	8218863	1					
ANR	8220941	Statement	CASE_OP_32_64	827:8:13870:13882	8218863	0	True				
ANR	8220942	Statement	(	827:21:13883:13883	8218863	1	True				
ANR	8220943	Statement	andc	827:22:13884:13887	8218863	2	True				
ANR	8220944	Statement	)	827:26:13888:13888	8218863	3	True				
ANR	8220945	Statement	:	827:27:13889:13889	8218863	4	True				
ANR	8220946	Statement	CASE_OP_32_64	829:8:13900:13912	8218863	5	True				
ANR	8220947	Statement	(	829:21:13913:13913	8218863	6	True				
ANR	8220948	Statement	sub	829:22:13914:13916	8218863	7	True				
ANR	8220949	Statement	)	829:25:13917:13917	8218863	8	True				
ANR	8220950	Statement	:	829:26:13918:13918	8218863	9	True				
ANR	8220951	Statement	CASE_OP_32_64	831:8:13929:13941	8218863	10	True				
ANR	8220952	Statement	(	831:21:13942:13942	8218863	11	True				
ANR	8220953	Statement	xor	831:22:13943:13945	8218863	12	True				
ANR	8220954	Statement	)	831:25:13946:13946	8218863	13	True				
ANR	8220955	Statement	:	831:26:13947:13947	8218863	14	True				
ANR	8220956	IfStatement	"if ( temps_are_copies ( args [ 1 ] , args [ 2 ] ) )"		8218863	15					
ANR	8220957	Condition	"temps_are_copies ( args [ 1 ] , args [ 2 ] )"	833:16:13966:13999	8218863	0	True				
ANR	8220958	CallExpression	"temps_are_copies ( args [ 1 ] , args [ 2 ] )"		8218863	0					
ANR	8220959	Callee	temps_are_copies		8218863	0					
ANR	8220960	Identifier	temps_are_copies		8218863	0					
ANR	8220961	ArgumentList	args [ 1 ]		8218863	1					
ANR	8220962	Argument	args [ 1 ]		8218863	0					
ANR	8220963	ArrayIndexing	args [ 1 ]		8218863	0					
ANR	8220964	Identifier	args		8218863	0					
ANR	8220965	PrimaryExpression	1		8218863	1					
ANR	8220966	Argument	args [ 2 ]		8218863	1					
ANR	8220967	ArrayIndexing	args [ 2 ]		8218863	0					
ANR	8220968	Identifier	args		8218863	0					
ANR	8220969	PrimaryExpression	2		8218863	1					
ANR	8220970	CompoundStatement		831:52:13967:13967	8218863	1					
ANR	8220971	ExpressionStatement	"tcg_opt_gen_movi ( s , op , args , args [ 0 ] , 0 )"	835:16:14021:14062	8218863	0	True				
ANR	8220972	CallExpression	"tcg_opt_gen_movi ( s , op , args , args [ 0 ] , 0 )"		8218863	0					
ANR	8220973	Callee	tcg_opt_gen_movi		8218863	0					
ANR	8220974	Identifier	tcg_opt_gen_movi		8218863	0					
ANR	8220975	ArgumentList	s		8218863	1					
ANR	8220976	Argument	s		8218863	0					
ANR	8220977	Identifier	s		8218863	0					
ANR	8220978	Argument	op		8218863	1					
ANR	8220979	Identifier	op		8218863	0					
ANR	8220980	Argument	args		8218863	2					
ANR	8220981	Identifier	args		8218863	0					
ANR	8220982	Argument	args [ 0 ]		8218863	3					
ANR	8220983	ArrayIndexing	args [ 0 ]		8218863	0					
ANR	8220984	Identifier	args		8218863	0					
ANR	8220985	PrimaryExpression	0		8218863	1					
ANR	8220986	Argument	0		8218863	4					
ANR	8220987	PrimaryExpression	0		8218863	0					
ANR	8220988	ContinueStatement	continue ;	837:16:14081:14089	8218863	1	True				
ANR	8220989	BreakStatement	break ;	841:12:14119:14124	8218863	16	True				
ANR	8220990	Label	default :	843:8:14135:14142	8218863	17	True				
ANR	8220991	Identifier	default		8218863	0					
ANR	8220992	BreakStatement	break ;	845:12:14157:14162	8218863	18	True				
ANR	8220993	SwitchStatement	switch ( opc )		8218863	29					
ANR	8220994	Condition	opc	857:16:14416:14418	8218863	0	True				
ANR	8220995	Identifier	opc		8218863	0					
ANR	8220996	CompoundStatement		855:21:14386:14386	8218863	1					
ANR	8220997	Statement	CASE_OP_32_64	859:8:14432:14444	8218863	0	True				
ANR	8220998	Statement	(	859:21:14445:14445	8218863	1	True				
ANR	8220999	Statement	mov	859:22:14446:14448	8218863	2	True				
ANR	8221000	Statement	)	859:25:14449:14449	8218863	3	True				
ANR	8221001	Statement	:	859:26:14450:14450	8218863	4	True				
ANR	8221002	ExpressionStatement	"tcg_opt_gen_mov ( s , op , args , args [ 0 ] , args [ 1 ] )"	861:12:14465:14511	8218863	5	True				
ANR	8221003	CallExpression	"tcg_opt_gen_mov ( s , op , args , args [ 0 ] , args [ 1 ] )"		8218863	0					
ANR	8221004	Callee	tcg_opt_gen_mov		8218863	0					
ANR	8221005	Identifier	tcg_opt_gen_mov		8218863	0					
ANR	8221006	ArgumentList	s		8218863	1					
ANR	8221007	Argument	s		8218863	0					
ANR	8221008	Identifier	s		8218863	0					
ANR	8221009	Argument	op		8218863	1					
ANR	8221010	Identifier	op		8218863	0					
ANR	8221011	Argument	args		8218863	2					
ANR	8221012	Identifier	args		8218863	0					
ANR	8221013	Argument	args [ 0 ]		8218863	3					
ANR	8221014	ArrayIndexing	args [ 0 ]		8218863	0					
ANR	8221015	Identifier	args		8218863	0					
ANR	8221016	PrimaryExpression	0		8218863	1					
ANR	8221017	Argument	args [ 1 ]		8218863	4					
ANR	8221018	ArrayIndexing	args [ 1 ]		8218863	0					
ANR	8221019	Identifier	args		8218863	0					
ANR	8221020	PrimaryExpression	1		8218863	1					
ANR	8221021	BreakStatement	break ;	863:12:14526:14531	8218863	6	True				
ANR	8221022	Statement	CASE_OP_32_64	865:8:14542:14554	8218863	7	True				
ANR	8221023	Statement	(	865:21:14555:14555	8218863	8	True				
ANR	8221024	Statement	movi	865:22:14556:14559	8218863	9	True				
ANR	8221025	Statement	)	865:26:14560:14560	8218863	10	True				
ANR	8221026	Statement	:	865:27:14561:14561	8218863	11	True				
ANR	8221027	ExpressionStatement	"tcg_opt_gen_movi ( s , op , args , args [ 0 ] , args [ 1 ] )"	867:12:14576:14623	8218863	12	True				
ANR	8221028	CallExpression	"tcg_opt_gen_movi ( s , op , args , args [ 0 ] , args [ 1 ] )"		8218863	0					
ANR	8221029	Callee	tcg_opt_gen_movi		8218863	0					
ANR	8221030	Identifier	tcg_opt_gen_movi		8218863	0					
ANR	8221031	ArgumentList	s		8218863	1					
ANR	8221032	Argument	s		8218863	0					
ANR	8221033	Identifier	s		8218863	0					
ANR	8221034	Argument	op		8218863	1					
ANR	8221035	Identifier	op		8218863	0					
ANR	8221036	Argument	args		8218863	2					
ANR	8221037	Identifier	args		8218863	0					
ANR	8221038	Argument	args [ 0 ]		8218863	3					
ANR	8221039	ArrayIndexing	args [ 0 ]		8218863	0					
ANR	8221040	Identifier	args		8218863	0					
ANR	8221041	PrimaryExpression	0		8218863	1					
ANR	8221042	Argument	args [ 1 ]		8218863	4					
ANR	8221043	ArrayIndexing	args [ 1 ]		8218863	0					
ANR	8221044	Identifier	args		8218863	0					
ANR	8221045	PrimaryExpression	1		8218863	1					
ANR	8221046	BreakStatement	break ;	869:12:14638:14643	8218863	13	True				
ANR	8221047	Statement	CASE_OP_32_64	873:8:14656:14668	8218863	14	True				
ANR	8221048	Statement	(	873:21:14669:14669	8218863	15	True				
ANR	8221049	Statement	not	873:22:14670:14672	8218863	16	True				
ANR	8221050	Statement	)	873:25:14673:14673	8218863	17	True				
ANR	8221051	Statement	:	873:26:14674:14674	8218863	18	True				
ANR	8221052	Statement	CASE_OP_32_64	875:8:14685:14697	8218863	19	True				
ANR	8221053	Statement	(	875:21:14698:14698	8218863	20	True				
ANR	8221054	Statement	neg	875:22:14699:14701	8218863	21	True				
ANR	8221055	Statement	)	875:25:14702:14702	8218863	22	True				
ANR	8221056	Statement	:	875:26:14703:14703	8218863	23	True				
ANR	8221057	Statement	CASE_OP_32_64	877:8:14714:14726	8218863	24	True				
ANR	8221058	Statement	(	877:21:14727:14727	8218863	25	True				
ANR	8221059	Statement	ext8s	877:22:14728:14732	8218863	26	True				
ANR	8221060	Statement	)	877:27:14733:14733	8218863	27	True				
ANR	8221061	Statement	:	877:28:14734:14734	8218863	28	True				
ANR	8221062	Statement	CASE_OP_32_64	879:8:14745:14757	8218863	29	True				
ANR	8221063	Statement	(	879:21:14758:14758	8218863	30	True				
ANR	8221064	Statement	ext8u	879:22:14759:14763	8218863	31	True				
ANR	8221065	Statement	)	879:27:14764:14764	8218863	32	True				
ANR	8221066	Statement	:	879:28:14765:14765	8218863	33	True				
ANR	8221067	Statement	CASE_OP_32_64	881:8:14776:14788	8218863	34	True				
ANR	8221068	Statement	(	881:21:14789:14789	8218863	35	True				
ANR	8221069	Statement	ext16s	881:22:14790:14795	8218863	36	True				
ANR	8221070	Statement	)	881:28:14796:14796	8218863	37	True				
ANR	8221071	Statement	:	881:29:14797:14797	8218863	38	True				
ANR	8221072	Statement	CASE_OP_32_64	883:8:14808:14820	8218863	39	True				
ANR	8221073	Statement	(	883:21:14821:14821	8218863	40	True				
ANR	8221074	Statement	ext16u	883:22:14822:14827	8218863	41	True				
ANR	8221075	Statement	)	883:28:14828:14828	8218863	42	True				
ANR	8221076	Statement	:	883:29:14829:14829	8218863	43	True				
ANR	8221077	Label	case INDEX_op_ext32s_i64 :	885:8:14840:14864	8218863	44	True				
ANR	8221078	Identifier	INDEX_op_ext32s_i64		8218863	0					
ANR	8221079	Label	case INDEX_op_ext32u_i64 :	887:8:14875:14899	8218863	45	True				
ANR	8221080	Identifier	INDEX_op_ext32u_i64		8218863	0					
ANR	8221081	IfStatement	if ( temps [ args [ 1 ] ] . state == TCG_TEMP_CONST )		8218863	46					
ANR	8221082	Condition	temps [ args [ 1 ] ] . state == TCG_TEMP_CONST	889:16:14918:14955	8218863	0	True				
ANR	8221083	EqualityExpression	temps [ args [ 1 ] ] . state == TCG_TEMP_CONST		8218863	0		==			
ANR	8221084	MemberAccess	temps [ args [ 1 ] ] . state		8218863	0					
ANR	8221085	ArrayIndexing	temps [ args [ 1 ] ]		8218863	0					
ANR	8221086	Identifier	temps		8218863	0					
ANR	8221087	ArrayIndexing	args [ 1 ]		8218863	1					
ANR	8221088	Identifier	args		8218863	0					
ANR	8221089	PrimaryExpression	1		8218863	1					
ANR	8221090	Identifier	state		8218863	1					
ANR	8221091	Identifier	TCG_TEMP_CONST		8218863	1					
ANR	8221092	CompoundStatement		887:56:14923:14923	8218863	1					
ANR	8221093	ExpressionStatement	"tmp = do_constant_folding ( opc , temps [ args [ 1 ] ] . val , 0 )"	891:16:14977:15030	8218863	0	True				
ANR	8221094	AssignmentExpression	"tmp = do_constant_folding ( opc , temps [ args [ 1 ] ] . val , 0 )"		8218863	0		=			
ANR	8221095	Identifier	tmp		8218863	0					
ANR	8221096	CallExpression	"do_constant_folding ( opc , temps [ args [ 1 ] ] . val , 0 )"		8218863	1					
ANR	8221097	Callee	do_constant_folding		8218863	0					
ANR	8221098	Identifier	do_constant_folding		8218863	0					
ANR	8221099	ArgumentList	opc		8218863	1					
ANR	8221100	Argument	opc		8218863	0					
ANR	8221101	Identifier	opc		8218863	0					
ANR	8221102	Argument	temps [ args [ 1 ] ] . val		8218863	1					
ANR	8221103	MemberAccess	temps [ args [ 1 ] ] . val		8218863	0					
ANR	8221104	ArrayIndexing	temps [ args [ 1 ] ]		8218863	0					
ANR	8221105	Identifier	temps		8218863	0					
ANR	8221106	ArrayIndexing	args [ 1 ]		8218863	1					
ANR	8221107	Identifier	args		8218863	0					
ANR	8221108	PrimaryExpression	1		8218863	1					
ANR	8221109	Identifier	val		8218863	1					
ANR	8221110	Argument	0		8218863	2					
ANR	8221111	PrimaryExpression	0		8218863	0					
ANR	8221112	ExpressionStatement	"tcg_opt_gen_movi ( s , op , args , args [ 0 ] , tmp )"	893:16:15049:15092	8218863	1	True				
ANR	8221113	CallExpression	"tcg_opt_gen_movi ( s , op , args , args [ 0 ] , tmp )"		8218863	0					
ANR	8221114	Callee	tcg_opt_gen_movi		8218863	0					
ANR	8221115	Identifier	tcg_opt_gen_movi		8218863	0					
ANR	8221116	ArgumentList	s		8218863	1					
ANR	8221117	Argument	s		8218863	0					
ANR	8221118	Identifier	s		8218863	0					
ANR	8221119	Argument	op		8218863	1					
ANR	8221120	Identifier	op		8218863	0					
ANR	8221121	Argument	args		8218863	2					
ANR	8221122	Identifier	args		8218863	0					
ANR	8221123	Argument	args [ 0 ]		8218863	3					
ANR	8221124	ArrayIndexing	args [ 0 ]		8218863	0					
ANR	8221125	Identifier	args		8218863	0					
ANR	8221126	PrimaryExpression	0		8218863	1					
ANR	8221127	Argument	tmp		8218863	4					
ANR	8221128	Identifier	tmp		8218863	0					
ANR	8221129	BreakStatement	break ;	895:16:15111:15116	8218863	2	True				
ANR	8221130	GotoStatement	goto do_default ;	899:12:15146:15161	8218863	47	True				
ANR	8221131	Identifier	do_default		8218863	0					
ANR	8221132	Label	case INDEX_op_trunc_shr_i32 :	903:8:15174:15201	8218863	48	True				
ANR	8221133	Identifier	INDEX_op_trunc_shr_i32		8218863	0					
ANR	8221134	IfStatement	if ( temps [ args [ 1 ] ] . state == TCG_TEMP_CONST )		8218863	49					
ANR	8221135	Condition	temps [ args [ 1 ] ] . state == TCG_TEMP_CONST	905:16:15220:15257	8218863	0	True				
ANR	8221136	EqualityExpression	temps [ args [ 1 ] ] . state == TCG_TEMP_CONST		8218863	0		==			
ANR	8221137	MemberAccess	temps [ args [ 1 ] ] . state		8218863	0					
ANR	8221138	ArrayIndexing	temps [ args [ 1 ] ]		8218863	0					
ANR	8221139	Identifier	temps		8218863	0					
ANR	8221140	ArrayIndexing	args [ 1 ]		8218863	1					
ANR	8221141	Identifier	args		8218863	0					
ANR	8221142	PrimaryExpression	1		8218863	1					
ANR	8221143	Identifier	state		8218863	1					
ANR	8221144	Identifier	TCG_TEMP_CONST		8218863	1					
ANR	8221145	CompoundStatement		903:56:15225:15225	8218863	1					
ANR	8221146	ExpressionStatement	"tmp = do_constant_folding ( opc , temps [ args [ 1 ] ] . val , args [ 2 ] )"	907:16:15279:15338	8218863	0	True				
ANR	8221147	AssignmentExpression	"tmp = do_constant_folding ( opc , temps [ args [ 1 ] ] . val , args [ 2 ] )"		8218863	0		=			
ANR	8221148	Identifier	tmp		8218863	0					
ANR	8221149	CallExpression	"do_constant_folding ( opc , temps [ args [ 1 ] ] . val , args [ 2 ] )"		8218863	1					
ANR	8221150	Callee	do_constant_folding		8218863	0					
ANR	8221151	Identifier	do_constant_folding		8218863	0					
ANR	8221152	ArgumentList	opc		8218863	1					
ANR	8221153	Argument	opc		8218863	0					
ANR	8221154	Identifier	opc		8218863	0					
ANR	8221155	Argument	temps [ args [ 1 ] ] . val		8218863	1					
ANR	8221156	MemberAccess	temps [ args [ 1 ] ] . val		8218863	0					
ANR	8221157	ArrayIndexing	temps [ args [ 1 ] ]		8218863	0					
ANR	8221158	Identifier	temps		8218863	0					
ANR	8221159	ArrayIndexing	args [ 1 ]		8218863	1					
ANR	8221160	Identifier	args		8218863	0					
ANR	8221161	PrimaryExpression	1		8218863	1					
ANR	8221162	Identifier	val		8218863	1					
ANR	8221163	Argument	args [ 2 ]		8218863	2					
ANR	8221164	ArrayIndexing	args [ 2 ]		8218863	0					
ANR	8221165	Identifier	args		8218863	0					
ANR	8221166	PrimaryExpression	2		8218863	1					
ANR	8221167	ExpressionStatement	"tcg_opt_gen_movi ( s , op , args , args [ 0 ] , tmp )"	909:16:15357:15400	8218863	1	True				
ANR	8221168	CallExpression	"tcg_opt_gen_movi ( s , op , args , args [ 0 ] , tmp )"		8218863	0					
ANR	8221169	Callee	tcg_opt_gen_movi		8218863	0					
ANR	8221170	Identifier	tcg_opt_gen_movi		8218863	0					
ANR	8221171	ArgumentList	s		8218863	1					
ANR	8221172	Argument	s		8218863	0					
ANR	8221173	Identifier	s		8218863	0					
ANR	8221174	Argument	op		8218863	1					
ANR	8221175	Identifier	op		8218863	0					
ANR	8221176	Argument	args		8218863	2					
ANR	8221177	Identifier	args		8218863	0					
ANR	8221178	Argument	args [ 0 ]		8218863	3					
ANR	8221179	ArrayIndexing	args [ 0 ]		8218863	0					
ANR	8221180	Identifier	args		8218863	0					
ANR	8221181	PrimaryExpression	0		8218863	1					
ANR	8221182	Argument	tmp		8218863	4					
ANR	8221183	Identifier	tmp		8218863	0					
ANR	8221184	BreakStatement	break ;	911:16:15419:15424	8218863	2	True				
ANR	8221185	GotoStatement	goto do_default ;	915:12:15454:15469	8218863	50	True				
ANR	8221186	Identifier	do_default		8218863	0					
ANR	8221187	Statement	CASE_OP_32_64	919:8:15482:15494	8218863	51	True				
ANR	8221188	Statement	(	919:21:15495:15495	8218863	52	True				
ANR	8221189	Statement	add	919:22:15496:15498	8218863	53	True				
ANR	8221190	Statement	)	919:25:15499:15499	8218863	54	True				
ANR	8221191	Statement	:	919:26:15500:15500	8218863	55	True				
ANR	8221192	Statement	CASE_OP_32_64	921:8:15511:15523	8218863	56	True				
ANR	8221193	Statement	(	921:21:15524:15524	8218863	57	True				
ANR	8221194	Statement	sub	921:22:15525:15527	8218863	58	True				
ANR	8221195	Statement	)	921:25:15528:15528	8218863	59	True				
ANR	8221196	Statement	:	921:26:15529:15529	8218863	60	True				
ANR	8221197	Statement	CASE_OP_32_64	923:8:15540:15552	8218863	61	True				
ANR	8221198	Statement	(	923:21:15553:15553	8218863	62	True				
ANR	8221199	Statement	mul	923:22:15554:15556	8218863	63	True				
ANR	8221200	Statement	)	923:25:15557:15557	8218863	64	True				
ANR	8221201	Statement	:	923:26:15558:15558	8218863	65	True				
ANR	8221202	Statement	CASE_OP_32_64	925:8:15569:15581	8218863	66	True				
ANR	8221203	Statement	(	925:21:15582:15582	8218863	67	True				
ANR	8221204	Statement	or	925:22:15583:15584	8218863	68	True				
ANR	8221205	Statement	)	925:24:15585:15585	8218863	69	True				
ANR	8221206	Statement	:	925:25:15586:15586	8218863	70	True				
ANR	8221207	Statement	CASE_OP_32_64	927:8:15597:15609	8218863	71	True				
ANR	8221208	Statement	(	927:21:15610:15610	8218863	72	True				
ANR	8221209	Statement	and	927:22:15611:15613	8218863	73	True				
ANR	8221210	Statement	)	927:25:15614:15614	8218863	74	True				
ANR	8221211	Statement	:	927:26:15615:15615	8218863	75	True				
ANR	8221212	Statement	CASE_OP_32_64	929:8:15626:15638	8218863	76	True				
ANR	8221213	Statement	(	929:21:15639:15639	8218863	77	True				
ANR	8221214	Statement	xor	929:22:15640:15642	8218863	78	True				
ANR	8221215	Statement	)	929:25:15643:15643	8218863	79	True				
ANR	8221216	Statement	:	929:26:15644:15644	8218863	80	True				
ANR	8221217	Statement	CASE_OP_32_64	931:8:15655:15667	8218863	81	True				
ANR	8221218	Statement	(	931:21:15668:15668	8218863	82	True				
ANR	8221219	Statement	shl	931:22:15669:15671	8218863	83	True				
ANR	8221220	Statement	)	931:25:15672:15672	8218863	84	True				
ANR	8221221	Statement	:	931:26:15673:15673	8218863	85	True				
ANR	8221222	Statement	CASE_OP_32_64	933:8:15684:15696	8218863	86	True				
ANR	8221223	Statement	(	933:21:15697:15697	8218863	87	True				
ANR	8221224	Statement	shr	933:22:15698:15700	8218863	88	True				
ANR	8221225	Statement	)	933:25:15701:15701	8218863	89	True				
ANR	8221226	Statement	:	933:26:15702:15702	8218863	90	True				
ANR	8221227	Statement	CASE_OP_32_64	935:8:15713:15725	8218863	91	True				
ANR	8221228	Statement	(	935:21:15726:15726	8218863	92	True				
ANR	8221229	Statement	sar	935:22:15727:15729	8218863	93	True				
ANR	8221230	Statement	)	935:25:15730:15730	8218863	94	True				
ANR	8221231	Statement	:	935:26:15731:15731	8218863	95	True				
ANR	8221232	Statement	CASE_OP_32_64	937:8:15742:15754	8218863	96	True				
ANR	8221233	Statement	(	937:21:15755:15755	8218863	97	True				
ANR	8221234	Statement	rotl	937:22:15756:15759	8218863	98	True				
ANR	8221235	Statement	)	937:26:15760:15760	8218863	99	True				
ANR	8221236	Statement	:	937:27:15761:15761	8218863	100	True				
ANR	8221237	Statement	CASE_OP_32_64	939:8:15772:15784	8218863	101	True				
ANR	8221238	Statement	(	939:21:15785:15785	8218863	102	True				
ANR	8221239	Statement	rotr	939:22:15786:15789	8218863	103	True				
ANR	8221240	Statement	)	939:26:15790:15790	8218863	104	True				
ANR	8221241	Statement	:	939:27:15791:15791	8218863	105	True				
ANR	8221242	Statement	CASE_OP_32_64	941:8:15802:15814	8218863	106	True				
ANR	8221243	Statement	(	941:21:15815:15815	8218863	107	True				
ANR	8221244	Statement	andc	941:22:15816:15819	8218863	108	True				
ANR	8221245	Statement	)	941:26:15820:15820	8218863	109	True				
ANR	8221246	Statement	:	941:27:15821:15821	8218863	110	True				
ANR	8221247	Statement	CASE_OP_32_64	943:8:15832:15844	8218863	111	True				
ANR	8221248	Statement	(	943:21:15845:15845	8218863	112	True				
ANR	8221249	Statement	orc	943:22:15846:15848	8218863	113	True				
ANR	8221250	Statement	)	943:25:15849:15849	8218863	114	True				
ANR	8221251	Statement	:	943:26:15850:15850	8218863	115	True				
ANR	8221252	Statement	CASE_OP_32_64	945:8:15861:15873	8218863	116	True				
ANR	8221253	Statement	(	945:21:15874:15874	8218863	117	True				
ANR	8221254	Statement	eqv	945:22:15875:15877	8218863	118	True				
ANR	8221255	Statement	)	945:25:15878:15878	8218863	119	True				
ANR	8221256	Statement	:	945:26:15879:15879	8218863	120	True				
ANR	8221257	Statement	CASE_OP_32_64	947:8:15890:15902	8218863	121	True				
ANR	8221258	Statement	(	947:21:15903:15903	8218863	122	True				
ANR	8221259	Statement	nand	947:22:15904:15907	8218863	123	True				
ANR	8221260	Statement	)	947:26:15908:15908	8218863	124	True				
ANR	8221261	Statement	:	947:27:15909:15909	8218863	125	True				
ANR	8221262	Statement	CASE_OP_32_64	949:8:15920:15932	8218863	126	True				
ANR	8221263	Statement	(	949:21:15933:15933	8218863	127	True				
ANR	8221264	Statement	nor	949:22:15934:15936	8218863	128	True				
ANR	8221265	Statement	)	949:25:15937:15937	8218863	129	True				
ANR	8221266	Statement	:	949:26:15938:15938	8218863	130	True				
ANR	8221267	Statement	CASE_OP_32_64	951:8:15949:15961	8218863	131	True				
ANR	8221268	Statement	(	951:21:15962:15962	8218863	132	True				
ANR	8221269	Statement	muluh	951:22:15963:15967	8218863	133	True				
ANR	8221270	Statement	)	951:27:15968:15968	8218863	134	True				
ANR	8221271	Statement	:	951:28:15969:15969	8218863	135	True				
ANR	8221272	Statement	CASE_OP_32_64	953:8:15980:15992	8218863	136	True				
ANR	8221273	Statement	(	953:21:15993:15993	8218863	137	True				
ANR	8221274	Statement	mulsh	953:22:15994:15998	8218863	138	True				
ANR	8221275	Statement	)	953:27:15999:15999	8218863	139	True				
ANR	8221276	Statement	:	953:28:16000:16000	8218863	140	True				
ANR	8221277	Statement	CASE_OP_32_64	955:8:16011:16023	8218863	141	True				
ANR	8221278	Statement	(	955:21:16024:16024	8218863	142	True				
ANR	8221279	Statement	div	955:22:16025:16027	8218863	143	True				
ANR	8221280	Statement	)	955:25:16028:16028	8218863	144	True				
ANR	8221281	Statement	:	955:26:16029:16029	8218863	145	True				
ANR	8221282	Statement	CASE_OP_32_64	957:8:16040:16052	8218863	146	True				
ANR	8221283	Statement	(	957:21:16053:16053	8218863	147	True				
ANR	8221284	Statement	divu	957:22:16054:16057	8218863	148	True				
ANR	8221285	Statement	)	957:26:16058:16058	8218863	149	True				
ANR	8221286	Statement	:	957:27:16059:16059	8218863	150	True				
ANR	8221287	Statement	CASE_OP_32_64	959:8:16070:16082	8218863	151	True				
ANR	8221288	Statement	(	959:21:16083:16083	8218863	152	True				
ANR	8221289	Statement	rem	959:22:16084:16086	8218863	153	True				
ANR	8221290	Statement	)	959:25:16087:16087	8218863	154	True				
ANR	8221291	Statement	:	959:26:16088:16088	8218863	155	True				
ANR	8221292	Statement	CASE_OP_32_64	961:8:16099:16111	8218863	156	True				
ANR	8221293	Statement	(	961:21:16112:16112	8218863	157	True				
ANR	8221294	Statement	remu	961:22:16113:16116	8218863	158	True				
ANR	8221295	Statement	)	961:26:16117:16117	8218863	159	True				
ANR	8221296	Statement	:	961:27:16118:16118	8218863	160	True				
ANR	8221297	IfStatement	if ( temps [ args [ 1 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . state == TCG_TEMP_CONST )		8218863	161					
ANR	8221298	Condition	temps [ args [ 1 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . state == TCG_TEMP_CONST	963:16:16137:16233	8218863	0	True				
ANR	8221299	AndExpression	temps [ args [ 1 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . state == TCG_TEMP_CONST		8218863	0		&&			
ANR	8221300	EqualityExpression	temps [ args [ 1 ] ] . state == TCG_TEMP_CONST		8218863	0		==			
ANR	8221301	MemberAccess	temps [ args [ 1 ] ] . state		8218863	0					
ANR	8221302	ArrayIndexing	temps [ args [ 1 ] ]		8218863	0					
ANR	8221303	Identifier	temps		8218863	0					
ANR	8221304	ArrayIndexing	args [ 1 ]		8218863	1					
ANR	8221305	Identifier	args		8218863	0					
ANR	8221306	PrimaryExpression	1		8218863	1					
ANR	8221307	Identifier	state		8218863	1					
ANR	8221308	Identifier	TCG_TEMP_CONST		8218863	1					
ANR	8221309	EqualityExpression	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST		8218863	1		==			
ANR	8221310	MemberAccess	temps [ args [ 2 ] ] . state		8218863	0					
ANR	8221311	ArrayIndexing	temps [ args [ 2 ] ]		8218863	0					
ANR	8221312	Identifier	temps		8218863	0					
ANR	8221313	ArrayIndexing	args [ 2 ]		8218863	1					
ANR	8221314	Identifier	args		8218863	0					
ANR	8221315	PrimaryExpression	2		8218863	1					
ANR	8221316	Identifier	state		8218863	1					
ANR	8221317	Identifier	TCG_TEMP_CONST		8218863	1					
ANR	8221318	CompoundStatement		963:59:16201:16201	8218863	1					
ANR	8221319	ExpressionStatement	"tmp = do_constant_folding ( opc , temps [ args [ 1 ] ] . val , temps [ args [ 2 ] ] . val )"	967:16:16255:16368	8218863	0	True				
ANR	8221320	AssignmentExpression	"tmp = do_constant_folding ( opc , temps [ args [ 1 ] ] . val , temps [ args [ 2 ] ] . val )"		8218863	0		=			
ANR	8221321	Identifier	tmp		8218863	0					
ANR	8221322	CallExpression	"do_constant_folding ( opc , temps [ args [ 1 ] ] . val , temps [ args [ 2 ] ] . val )"		8218863	1					
ANR	8221323	Callee	do_constant_folding		8218863	0					
ANR	8221324	Identifier	do_constant_folding		8218863	0					
ANR	8221325	ArgumentList	opc		8218863	1					
ANR	8221326	Argument	opc		8218863	0					
ANR	8221327	Identifier	opc		8218863	0					
ANR	8221328	Argument	temps [ args [ 1 ] ] . val		8218863	1					
ANR	8221329	MemberAccess	temps [ args [ 1 ] ] . val		8218863	0					
ANR	8221330	ArrayIndexing	temps [ args [ 1 ] ]		8218863	0					
ANR	8221331	Identifier	temps		8218863	0					
ANR	8221332	ArrayIndexing	args [ 1 ]		8218863	1					
ANR	8221333	Identifier	args		8218863	0					
ANR	8221334	PrimaryExpression	1		8218863	1					
ANR	8221335	Identifier	val		8218863	1					
ANR	8221336	Argument	temps [ args [ 2 ] ] . val		8218863	2					
ANR	8221337	MemberAccess	temps [ args [ 2 ] ] . val		8218863	0					
ANR	8221338	ArrayIndexing	temps [ args [ 2 ] ]		8218863	0					
ANR	8221339	Identifier	temps		8218863	0					
ANR	8221340	ArrayIndexing	args [ 2 ]		8218863	1					
ANR	8221341	Identifier	args		8218863	0					
ANR	8221342	PrimaryExpression	2		8218863	1					
ANR	8221343	Identifier	val		8218863	1					
ANR	8221344	ExpressionStatement	"tcg_opt_gen_movi ( s , op , args , args [ 0 ] , tmp )"	971:16:16387:16430	8218863	1	True				
ANR	8221345	CallExpression	"tcg_opt_gen_movi ( s , op , args , args [ 0 ] , tmp )"		8218863	0					
ANR	8221346	Callee	tcg_opt_gen_movi		8218863	0					
ANR	8221347	Identifier	tcg_opt_gen_movi		8218863	0					
ANR	8221348	ArgumentList	s		8218863	1					
ANR	8221349	Argument	s		8218863	0					
ANR	8221350	Identifier	s		8218863	0					
ANR	8221351	Argument	op		8218863	1					
ANR	8221352	Identifier	op		8218863	0					
ANR	8221353	Argument	args		8218863	2					
ANR	8221354	Identifier	args		8218863	0					
ANR	8221355	Argument	args [ 0 ]		8218863	3					
ANR	8221356	ArrayIndexing	args [ 0 ]		8218863	0					
ANR	8221357	Identifier	args		8218863	0					
ANR	8221358	PrimaryExpression	0		8218863	1					
ANR	8221359	Argument	tmp		8218863	4					
ANR	8221360	Identifier	tmp		8218863	0					
ANR	8221361	BreakStatement	break ;	973:16:16449:16454	8218863	2	True				
ANR	8221362	GotoStatement	goto do_default ;	977:12:16484:16499	8218863	162	True				
ANR	8221363	Identifier	do_default		8218863	0					
ANR	8221364	Statement	CASE_OP_32_64	981:8:16512:16524	8218863	163	True				
ANR	8221365	Statement	(	981:21:16525:16525	8218863	164	True				
ANR	8221366	Statement	deposit	981:22:16526:16532	8218863	165	True				
ANR	8221367	Statement	)	981:29:16533:16533	8218863	166	True				
ANR	8221368	Statement	:	981:30:16534:16534	8218863	167	True				
ANR	8221369	IfStatement	if ( temps [ args [ 1 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . state == TCG_TEMP_CONST )		8218863	168					
ANR	8221370	Condition	temps [ args [ 1 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . state == TCG_TEMP_CONST	983:16:16553:16649	8218863	0	True				
ANR	8221371	AndExpression	temps [ args [ 1 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . state == TCG_TEMP_CONST		8218863	0		&&			
ANR	8221372	EqualityExpression	temps [ args [ 1 ] ] . state == TCG_TEMP_CONST		8218863	0		==			
ANR	8221373	MemberAccess	temps [ args [ 1 ] ] . state		8218863	0					
ANR	8221374	ArrayIndexing	temps [ args [ 1 ] ]		8218863	0					
ANR	8221375	Identifier	temps		8218863	0					
ANR	8221376	ArrayIndexing	args [ 1 ]		8218863	1					
ANR	8221377	Identifier	args		8218863	0					
ANR	8221378	PrimaryExpression	1		8218863	1					
ANR	8221379	Identifier	state		8218863	1					
ANR	8221380	Identifier	TCG_TEMP_CONST		8218863	1					
ANR	8221381	EqualityExpression	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST		8218863	1		==			
ANR	8221382	MemberAccess	temps [ args [ 2 ] ] . state		8218863	0					
ANR	8221383	ArrayIndexing	temps [ args [ 2 ] ]		8218863	0					
ANR	8221384	Identifier	temps		8218863	0					
ANR	8221385	ArrayIndexing	args [ 2 ]		8218863	1					
ANR	8221386	Identifier	args		8218863	0					
ANR	8221387	PrimaryExpression	2		8218863	1					
ANR	8221388	Identifier	state		8218863	1					
ANR	8221389	Identifier	TCG_TEMP_CONST		8218863	1					
ANR	8221390	CompoundStatement		983:59:16617:16617	8218863	1					
ANR	8221391	ExpressionStatement	"tmp = deposit64 ( temps [ args [ 1 ] ] . val , args [ 3 ] , args [ 4 ] , temps [ args [ 2 ] ] . val )"	987:16:16671:16777	8218863	0	True				
ANR	8221392	AssignmentExpression	"tmp = deposit64 ( temps [ args [ 1 ] ] . val , args [ 3 ] , args [ 4 ] , temps [ args [ 2 ] ] . val )"		8218863	0		=			
ANR	8221393	Identifier	tmp		8218863	0					
ANR	8221394	CallExpression	"deposit64 ( temps [ args [ 1 ] ] . val , args [ 3 ] , args [ 4 ] , temps [ args [ 2 ] ] . val )"		8218863	1					
ANR	8221395	Callee	deposit64		8218863	0					
ANR	8221396	Identifier	deposit64		8218863	0					
ANR	8221397	ArgumentList	temps [ args [ 1 ] ] . val		8218863	1					
ANR	8221398	Argument	temps [ args [ 1 ] ] . val		8218863	0					
ANR	8221399	MemberAccess	temps [ args [ 1 ] ] . val		8218863	0					
ANR	8221400	ArrayIndexing	temps [ args [ 1 ] ]		8218863	0					
ANR	8221401	Identifier	temps		8218863	0					
ANR	8221402	ArrayIndexing	args [ 1 ]		8218863	1					
ANR	8221403	Identifier	args		8218863	0					
ANR	8221404	PrimaryExpression	1		8218863	1					
ANR	8221405	Identifier	val		8218863	1					
ANR	8221406	Argument	args [ 3 ]		8218863	1					
ANR	8221407	ArrayIndexing	args [ 3 ]		8218863	0					
ANR	8221408	Identifier	args		8218863	0					
ANR	8221409	PrimaryExpression	3		8218863	1					
ANR	8221410	Argument	args [ 4 ]		8218863	2					
ANR	8221411	ArrayIndexing	args [ 4 ]		8218863	0					
ANR	8221412	Identifier	args		8218863	0					
ANR	8221413	PrimaryExpression	4		8218863	1					
ANR	8221414	Argument	temps [ args [ 2 ] ] . val		8218863	3					
ANR	8221415	MemberAccess	temps [ args [ 2 ] ] . val		8218863	0					
ANR	8221416	ArrayIndexing	temps [ args [ 2 ] ]		8218863	0					
ANR	8221417	Identifier	temps		8218863	0					
ANR	8221418	ArrayIndexing	args [ 2 ]		8218863	1					
ANR	8221419	Identifier	args		8218863	0					
ANR	8221420	PrimaryExpression	2		8218863	1					
ANR	8221421	Identifier	val		8218863	1					
ANR	8221422	ExpressionStatement	"tcg_opt_gen_movi ( s , op , args , args [ 0 ] , tmp )"	991:16:16796:16839	8218863	1	True				
ANR	8221423	CallExpression	"tcg_opt_gen_movi ( s , op , args , args [ 0 ] , tmp )"		8218863	0					
ANR	8221424	Callee	tcg_opt_gen_movi		8218863	0					
ANR	8221425	Identifier	tcg_opt_gen_movi		8218863	0					
ANR	8221426	ArgumentList	s		8218863	1					
ANR	8221427	Argument	s		8218863	0					
ANR	8221428	Identifier	s		8218863	0					
ANR	8221429	Argument	op		8218863	1					
ANR	8221430	Identifier	op		8218863	0					
ANR	8221431	Argument	args		8218863	2					
ANR	8221432	Identifier	args		8218863	0					
ANR	8221433	Argument	args [ 0 ]		8218863	3					
ANR	8221434	ArrayIndexing	args [ 0 ]		8218863	0					
ANR	8221435	Identifier	args		8218863	0					
ANR	8221436	PrimaryExpression	0		8218863	1					
ANR	8221437	Argument	tmp		8218863	4					
ANR	8221438	Identifier	tmp		8218863	0					
ANR	8221439	BreakStatement	break ;	993:16:16858:16863	8218863	2	True				
ANR	8221440	GotoStatement	goto do_default ;	997:12:16893:16908	8218863	169	True				
ANR	8221441	Identifier	do_default		8218863	0					
ANR	8221442	Statement	CASE_OP_32_64	1001:8:16921:16933	8218863	170	True				
ANR	8221443	Statement	(	1001:21:16934:16934	8218863	171	True				
ANR	8221444	Statement	setcond	1001:22:16935:16941	8218863	172	True				
ANR	8221445	Statement	)	1001:29:16942:16942	8218863	173	True				
ANR	8221446	Statement	:	1001:30:16943:16943	8218863	174	True				
ANR	8221447	ExpressionStatement	"tmp = do_constant_folding_cond ( opc , args [ 1 ] , args [ 2 ] , args [ 3 ] )"	1003:12:16958:17020	8218863	175	True				
ANR	8221448	AssignmentExpression	"tmp = do_constant_folding_cond ( opc , args [ 1 ] , args [ 2 ] , args [ 3 ] )"		8218863	0		=			
ANR	8221449	Identifier	tmp		8218863	0					
ANR	8221450	CallExpression	"do_constant_folding_cond ( opc , args [ 1 ] , args [ 2 ] , args [ 3 ] )"		8218863	1					
ANR	8221451	Callee	do_constant_folding_cond		8218863	0					
ANR	8221452	Identifier	do_constant_folding_cond		8218863	0					
ANR	8221453	ArgumentList	opc		8218863	1					
ANR	8221454	Argument	opc		8218863	0					
ANR	8221455	Identifier	opc		8218863	0					
ANR	8221456	Argument	args [ 1 ]		8218863	1					
ANR	8221457	ArrayIndexing	args [ 1 ]		8218863	0					
ANR	8221458	Identifier	args		8218863	0					
ANR	8221459	PrimaryExpression	1		8218863	1					
ANR	8221460	Argument	args [ 2 ]		8218863	2					
ANR	8221461	ArrayIndexing	args [ 2 ]		8218863	0					
ANR	8221462	Identifier	args		8218863	0					
ANR	8221463	PrimaryExpression	2		8218863	1					
ANR	8221464	Argument	args [ 3 ]		8218863	3					
ANR	8221465	ArrayIndexing	args [ 3 ]		8218863	0					
ANR	8221466	Identifier	args		8218863	0					
ANR	8221467	PrimaryExpression	3		8218863	1					
ANR	8221468	IfStatement	if ( tmp != 2 )		8218863	176					
ANR	8221469	Condition	tmp != 2	1005:16:17039:17046	8218863	0	True				
ANR	8221470	EqualityExpression	tmp != 2		8218863	0		!=			
ANR	8221471	Identifier	tmp		8218863	0					
ANR	8221472	PrimaryExpression	2		8218863	1					
ANR	8221473	CompoundStatement		1003:26:17014:17014	8218863	1					
ANR	8221474	ExpressionStatement	"tcg_opt_gen_movi ( s , op , args , args [ 0 ] , tmp )"	1007:16:17068:17111	8218863	0	True				
ANR	8221475	CallExpression	"tcg_opt_gen_movi ( s , op , args , args [ 0 ] , tmp )"		8218863	0					
ANR	8221476	Callee	tcg_opt_gen_movi		8218863	0					
ANR	8221477	Identifier	tcg_opt_gen_movi		8218863	0					
ANR	8221478	ArgumentList	s		8218863	1					
ANR	8221479	Argument	s		8218863	0					
ANR	8221480	Identifier	s		8218863	0					
ANR	8221481	Argument	op		8218863	1					
ANR	8221482	Identifier	op		8218863	0					
ANR	8221483	Argument	args		8218863	2					
ANR	8221484	Identifier	args		8218863	0					
ANR	8221485	Argument	args [ 0 ]		8218863	3					
ANR	8221486	ArrayIndexing	args [ 0 ]		8218863	0					
ANR	8221487	Identifier	args		8218863	0					
ANR	8221488	PrimaryExpression	0		8218863	1					
ANR	8221489	Argument	tmp		8218863	4					
ANR	8221490	Identifier	tmp		8218863	0					
ANR	8221491	BreakStatement	break ;	1009:16:17130:17135	8218863	1	True				
ANR	8221492	GotoStatement	goto do_default ;	1013:12:17165:17180	8218863	177	True				
ANR	8221493	Identifier	do_default		8218863	0					
ANR	8221494	Statement	CASE_OP_32_64	1017:8:17193:17205	8218863	178	True				
ANR	8221495	Statement	(	1017:21:17206:17206	8218863	179	True				
ANR	8221496	Statement	brcond	1017:22:17207:17212	8218863	180	True				
ANR	8221497	Statement	)	1017:28:17213:17213	8218863	181	True				
ANR	8221498	Statement	:	1017:29:17214:17214	8218863	182	True				
ANR	8221499	ExpressionStatement	"tmp = do_constant_folding_cond ( opc , args [ 0 ] , args [ 1 ] , args [ 2 ] )"	1019:12:17229:17291	8218863	183	True				
ANR	8221500	AssignmentExpression	"tmp = do_constant_folding_cond ( opc , args [ 0 ] , args [ 1 ] , args [ 2 ] )"		8218863	0		=			
ANR	8221501	Identifier	tmp		8218863	0					
ANR	8221502	CallExpression	"do_constant_folding_cond ( opc , args [ 0 ] , args [ 1 ] , args [ 2 ] )"		8218863	1					
ANR	8221503	Callee	do_constant_folding_cond		8218863	0					
ANR	8221504	Identifier	do_constant_folding_cond		8218863	0					
ANR	8221505	ArgumentList	opc		8218863	1					
ANR	8221506	Argument	opc		8218863	0					
ANR	8221507	Identifier	opc		8218863	0					
ANR	8221508	Argument	args [ 0 ]		8218863	1					
ANR	8221509	ArrayIndexing	args [ 0 ]		8218863	0					
ANR	8221510	Identifier	args		8218863	0					
ANR	8221511	PrimaryExpression	0		8218863	1					
ANR	8221512	Argument	args [ 1 ]		8218863	2					
ANR	8221513	ArrayIndexing	args [ 1 ]		8218863	0					
ANR	8221514	Identifier	args		8218863	0					
ANR	8221515	PrimaryExpression	1		8218863	1					
ANR	8221516	Argument	args [ 2 ]		8218863	3					
ANR	8221517	ArrayIndexing	args [ 2 ]		8218863	0					
ANR	8221518	Identifier	args		8218863	0					
ANR	8221519	PrimaryExpression	2		8218863	1					
ANR	8221520	IfStatement	if ( tmp != 2 )		8218863	184					
ANR	8221521	Condition	tmp != 2	1021:16:17310:17317	8218863	0	True				
ANR	8221522	EqualityExpression	tmp != 2		8218863	0		!=			
ANR	8221523	Identifier	tmp		8218863	0					
ANR	8221524	PrimaryExpression	2		8218863	1					
ANR	8221525	CompoundStatement		1019:26:17285:17285	8218863	1					
ANR	8221526	IfStatement	if ( tmp )		8218863	0					
ANR	8221527	Condition	tmp	1023:20:17343:17345	8218863	0	True				
ANR	8221528	Identifier	tmp		8218863	0					
ANR	8221529	CompoundStatement		1021:25:17313:17313	8218863	1					
ANR	8221530	ExpressionStatement	reset_all_temps ( nb_temps )	1025:20:17371:17396	8218863	0	True				
ANR	8221531	CallExpression	reset_all_temps ( nb_temps )		8218863	0					
ANR	8221532	Callee	reset_all_temps		8218863	0					
ANR	8221533	Identifier	reset_all_temps		8218863	0					
ANR	8221534	ArgumentList	nb_temps		8218863	1					
ANR	8221535	Argument	nb_temps		8218863	0					
ANR	8221536	Identifier	nb_temps		8218863	0					
ANR	8221537	ExpressionStatement	op -> opc = INDEX_op_br	1027:20:17419:17440	8218863	1	True				
ANR	8221538	AssignmentExpression	op -> opc = INDEX_op_br		8218863	0		=			
ANR	8221539	PtrMemberAccess	op -> opc		8218863	0					
ANR	8221540	Identifier	op		8218863	0					
ANR	8221541	Identifier	opc		8218863	1					
ANR	8221542	Identifier	INDEX_op_br		8218863	1					
ANR	8221543	ExpressionStatement	args [ 0 ] = args [ 3 ]	1029:20:17463:17480	8218863	2	True				
ANR	8221544	AssignmentExpression	args [ 0 ] = args [ 3 ]		8218863	0		=			
ANR	8221545	ArrayIndexing	args [ 0 ]		8218863	0					
ANR	8221546	Identifier	args		8218863	0					
ANR	8221547	PrimaryExpression	0		8218863	1					
ANR	8221548	ArrayIndexing	args [ 3 ]		8218863	1					
ANR	8221549	Identifier	args		8218863	0					
ANR	8221550	PrimaryExpression	3		8218863	1					
ANR	8221551	ElseStatement	else		8218863	0					
ANR	8221552	CompoundStatement		1029:23:17471:17471	8218863	0					
ANR	8221553	ExpressionStatement	"tcg_op_remove ( s , op )"	1033:20:17529:17549	8218863	0	True				
ANR	8221554	CallExpression	"tcg_op_remove ( s , op )"		8218863	0					
ANR	8221555	Callee	tcg_op_remove		8218863	0					
ANR	8221556	Identifier	tcg_op_remove		8218863	0					
ANR	8221557	ArgumentList	s		8218863	1					
ANR	8221558	Argument	s		8218863	0					
ANR	8221559	Identifier	s		8218863	0					
ANR	8221560	Argument	op		8218863	1					
ANR	8221561	Identifier	op		8218863	0					
ANR	8221562	BreakStatement	break ;	1037:16:17587:17592	8218863	1	True				
ANR	8221563	GotoStatement	goto do_default ;	1041:12:17622:17637	8218863	185	True				
ANR	8221564	Identifier	do_default		8218863	0					
ANR	8221565	Statement	CASE_OP_32_64	1045:8:17650:17662	8218863	186	True				
ANR	8221566	Statement	(	1045:21:17663:17663	8218863	187	True				
ANR	8221567	Statement	movcond	1045:22:17664:17670	8218863	188	True				
ANR	8221568	Statement	)	1045:29:17671:17671	8218863	189	True				
ANR	8221569	Statement	:	1045:30:17672:17672	8218863	190	True				
ANR	8221570	ExpressionStatement	"tmp = do_constant_folding_cond ( opc , args [ 1 ] , args [ 2 ] , args [ 5 ] )"	1047:12:17687:17749	8218863	191	True				
ANR	8221571	AssignmentExpression	"tmp = do_constant_folding_cond ( opc , args [ 1 ] , args [ 2 ] , args [ 5 ] )"		8218863	0		=			
ANR	8221572	Identifier	tmp		8218863	0					
ANR	8221573	CallExpression	"do_constant_folding_cond ( opc , args [ 1 ] , args [ 2 ] , args [ 5 ] )"		8218863	1					
ANR	8221574	Callee	do_constant_folding_cond		8218863	0					
ANR	8221575	Identifier	do_constant_folding_cond		8218863	0					
ANR	8221576	ArgumentList	opc		8218863	1					
ANR	8221577	Argument	opc		8218863	0					
ANR	8221578	Identifier	opc		8218863	0					
ANR	8221579	Argument	args [ 1 ]		8218863	1					
ANR	8221580	ArrayIndexing	args [ 1 ]		8218863	0					
ANR	8221581	Identifier	args		8218863	0					
ANR	8221582	PrimaryExpression	1		8218863	1					
ANR	8221583	Argument	args [ 2 ]		8218863	2					
ANR	8221584	ArrayIndexing	args [ 2 ]		8218863	0					
ANR	8221585	Identifier	args		8218863	0					
ANR	8221586	PrimaryExpression	2		8218863	1					
ANR	8221587	Argument	args [ 5 ]		8218863	3					
ANR	8221588	ArrayIndexing	args [ 5 ]		8218863	0					
ANR	8221589	Identifier	args		8218863	0					
ANR	8221590	PrimaryExpression	5		8218863	1					
ANR	8221591	IfStatement	if ( tmp != 2 )		8218863	192					
ANR	8221592	Condition	tmp != 2	1049:16:17768:17775	8218863	0	True				
ANR	8221593	EqualityExpression	tmp != 2		8218863	0		!=			
ANR	8221594	Identifier	tmp		8218863	0					
ANR	8221595	PrimaryExpression	2		8218863	1					
ANR	8221596	CompoundStatement		1047:26:17743:17743	8218863	1					
ANR	8221597	ExpressionStatement	"tcg_opt_gen_mov ( s , op , args , args [ 0 ] , args [ 4 - tmp ] )"	1051:16:17797:17847	8218863	0	True				
ANR	8221598	CallExpression	"tcg_opt_gen_mov ( s , op , args , args [ 0 ] , args [ 4 - tmp ] )"		8218863	0					
ANR	8221599	Callee	tcg_opt_gen_mov		8218863	0					
ANR	8221600	Identifier	tcg_opt_gen_mov		8218863	0					
ANR	8221601	ArgumentList	s		8218863	1					
ANR	8221602	Argument	s		8218863	0					
ANR	8221603	Identifier	s		8218863	0					
ANR	8221604	Argument	op		8218863	1					
ANR	8221605	Identifier	op		8218863	0					
ANR	8221606	Argument	args		8218863	2					
ANR	8221607	Identifier	args		8218863	0					
ANR	8221608	Argument	args [ 0 ]		8218863	3					
ANR	8221609	ArrayIndexing	args [ 0 ]		8218863	0					
ANR	8221610	Identifier	args		8218863	0					
ANR	8221611	PrimaryExpression	0		8218863	1					
ANR	8221612	Argument	args [ 4 - tmp ]		8218863	4					
ANR	8221613	ArrayIndexing	args [ 4 - tmp ]		8218863	0					
ANR	8221614	Identifier	args		8218863	0					
ANR	8221615	AdditiveExpression	4 - tmp		8218863	1		-			
ANR	8221616	PrimaryExpression	4		8218863	0					
ANR	8221617	Identifier	tmp		8218863	1					
ANR	8221618	BreakStatement	break ;	1053:16:17866:17871	8218863	1	True				
ANR	8221619	GotoStatement	goto do_default ;	1057:12:17901:17916	8218863	193	True				
ANR	8221620	Identifier	do_default		8218863	0					
ANR	8221621	Label	case INDEX_op_add2_i32 :	1061:8:17929:17951	8218863	194	True				
ANR	8221622	Identifier	INDEX_op_add2_i32		8218863	0					
ANR	8221623	Label	case INDEX_op_sub2_i32 :	1063:8:17962:17984	8218863	195	True				
ANR	8221624	Identifier	INDEX_op_sub2_i32		8218863	0					
ANR	8221625	IfStatement	if ( temps [ args [ 2 ] ] . state == TCG_TEMP_CONST && temps [ args [ 3 ] ] . state == TCG_TEMP_CONST && temps [ args [ 4 ] ] . state == TCG_TEMP_CONST && temps [ args [ 5 ] ] . state == TCG_TEMP_CONST )		8218863	196					
ANR	8221626	Condition	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST && temps [ args [ 3 ] ] . state == TCG_TEMP_CONST && temps [ args [ 4 ] ] . state == TCG_TEMP_CONST && temps [ args [ 5 ] ] . state == TCG_TEMP_CONST	1065:16:18003:18217	8218863	0	True				
ANR	8221627	AndExpression	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST && temps [ args [ 3 ] ] . state == TCG_TEMP_CONST && temps [ args [ 4 ] ] . state == TCG_TEMP_CONST && temps [ args [ 5 ] ] . state == TCG_TEMP_CONST		8218863	0		&&			
ANR	8221628	EqualityExpression	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST		8218863	0		==			
ANR	8221629	MemberAccess	temps [ args [ 2 ] ] . state		8218863	0					
ANR	8221630	ArrayIndexing	temps [ args [ 2 ] ]		8218863	0					
ANR	8221631	Identifier	temps		8218863	0					
ANR	8221632	ArrayIndexing	args [ 2 ]		8218863	1					
ANR	8221633	Identifier	args		8218863	0					
ANR	8221634	PrimaryExpression	2		8218863	1					
ANR	8221635	Identifier	state		8218863	1					
ANR	8221636	Identifier	TCG_TEMP_CONST		8218863	1					
ANR	8221637	AndExpression	temps [ args [ 3 ] ] . state == TCG_TEMP_CONST && temps [ args [ 4 ] ] . state == TCG_TEMP_CONST && temps [ args [ 5 ] ] . state == TCG_TEMP_CONST		8218863	1		&&			
ANR	8221638	EqualityExpression	temps [ args [ 3 ] ] . state == TCG_TEMP_CONST		8218863	0		==			
ANR	8221639	MemberAccess	temps [ args [ 3 ] ] . state		8218863	0					
ANR	8221640	ArrayIndexing	temps [ args [ 3 ] ]		8218863	0					
ANR	8221641	Identifier	temps		8218863	0					
ANR	8221642	ArrayIndexing	args [ 3 ]		8218863	1					
ANR	8221643	Identifier	args		8218863	0					
ANR	8221644	PrimaryExpression	3		8218863	1					
ANR	8221645	Identifier	state		8218863	1					
ANR	8221646	Identifier	TCG_TEMP_CONST		8218863	1					
ANR	8221647	AndExpression	temps [ args [ 4 ] ] . state == TCG_TEMP_CONST && temps [ args [ 5 ] ] . state == TCG_TEMP_CONST		8218863	1		&&			
ANR	8221648	EqualityExpression	temps [ args [ 4 ] ] . state == TCG_TEMP_CONST		8218863	0		==			
ANR	8221649	MemberAccess	temps [ args [ 4 ] ] . state		8218863	0					
ANR	8221650	ArrayIndexing	temps [ args [ 4 ] ]		8218863	0					
ANR	8221651	Identifier	temps		8218863	0					
ANR	8221652	ArrayIndexing	args [ 4 ]		8218863	1					
ANR	8221653	Identifier	args		8218863	0					
ANR	8221654	PrimaryExpression	4		8218863	1					
ANR	8221655	Identifier	state		8218863	1					
ANR	8221656	Identifier	TCG_TEMP_CONST		8218863	1					
ANR	8221657	EqualityExpression	temps [ args [ 5 ] ] . state == TCG_TEMP_CONST		8218863	1		==			
ANR	8221658	MemberAccess	temps [ args [ 5 ] ] . state		8218863	0					
ANR	8221659	ArrayIndexing	temps [ args [ 5 ] ]		8218863	0					
ANR	8221660	Identifier	temps		8218863	0					
ANR	8221661	ArrayIndexing	args [ 5 ]		8218863	1					
ANR	8221662	Identifier	args		8218863	0					
ANR	8221663	PrimaryExpression	5		8218863	1					
ANR	8221664	Identifier	state		8218863	1					
ANR	8221665	Identifier	TCG_TEMP_CONST		8218863	1					
ANR	8221666	CompoundStatement		1087:16:18631:18677	8218863	1					
ANR	8221667	IdentifierDeclStatement	uint32_t al = temps [ args [ 2 ] ] . val ;	1073:16:18239:18271	8218863	0	True				
ANR	8221668	IdentifierDecl	al = temps [ args [ 2 ] ] . val		8218863	0					
ANR	8221669	IdentifierDeclType	uint32_t		8218863	0					
ANR	8221670	Identifier	al		8218863	1					
ANR	8221671	AssignmentExpression	al = temps [ args [ 2 ] ] . val		8218863	2		=			
ANR	8221672	Identifier	al		8218863	0					
ANR	8221673	MemberAccess	temps [ args [ 2 ] ] . val		8218863	1					
ANR	8221674	ArrayIndexing	temps [ args [ 2 ] ]		8218863	0					
ANR	8221675	Identifier	temps		8218863	0					
ANR	8221676	ArrayIndexing	args [ 2 ]		8218863	1					
ANR	8221677	Identifier	args		8218863	0					
ANR	8221678	PrimaryExpression	2		8218863	1					
ANR	8221679	Identifier	val		8218863	1					
ANR	8221680	IdentifierDeclStatement	uint32_t ah = temps [ args [ 3 ] ] . val ;	1075:16:18290:18322	8218863	1	True				
ANR	8221681	IdentifierDecl	ah = temps [ args [ 3 ] ] . val		8218863	0					
ANR	8221682	IdentifierDeclType	uint32_t		8218863	0					
ANR	8221683	Identifier	ah		8218863	1					
ANR	8221684	AssignmentExpression	ah = temps [ args [ 3 ] ] . val		8218863	2		=			
ANR	8221685	Identifier	ah		8218863	0					
ANR	8221686	MemberAccess	temps [ args [ 3 ] ] . val		8218863	1					
ANR	8221687	ArrayIndexing	temps [ args [ 3 ] ]		8218863	0					
ANR	8221688	Identifier	temps		8218863	0					
ANR	8221689	ArrayIndexing	args [ 3 ]		8218863	1					
ANR	8221690	Identifier	args		8218863	0					
ANR	8221691	PrimaryExpression	3		8218863	1					
ANR	8221692	Identifier	val		8218863	1					
ANR	8221693	IdentifierDeclStatement	uint32_t bl = temps [ args [ 4 ] ] . val ;	1077:16:18341:18373	8218863	2	True				
ANR	8221694	IdentifierDecl	bl = temps [ args [ 4 ] ] . val		8218863	0					
ANR	8221695	IdentifierDeclType	uint32_t		8218863	0					
ANR	8221696	Identifier	bl		8218863	1					
ANR	8221697	AssignmentExpression	bl = temps [ args [ 4 ] ] . val		8218863	2		=			
ANR	8221698	Identifier	bl		8218863	0					
ANR	8221699	MemberAccess	temps [ args [ 4 ] ] . val		8218863	1					
ANR	8221700	ArrayIndexing	temps [ args [ 4 ] ]		8218863	0					
ANR	8221701	Identifier	temps		8218863	0					
ANR	8221702	ArrayIndexing	args [ 4 ]		8218863	1					
ANR	8221703	Identifier	args		8218863	0					
ANR	8221704	PrimaryExpression	4		8218863	1					
ANR	8221705	Identifier	val		8218863	1					
ANR	8221706	IdentifierDeclStatement	uint32_t bh = temps [ args [ 5 ] ] . val ;	1079:16:18392:18424	8218863	3	True				
ANR	8221707	IdentifierDecl	bh = temps [ args [ 5 ] ] . val		8218863	0					
ANR	8221708	IdentifierDeclType	uint32_t		8218863	0					
ANR	8221709	Identifier	bh		8218863	1					
ANR	8221710	AssignmentExpression	bh = temps [ args [ 5 ] ] . val		8218863	2		=			
ANR	8221711	Identifier	bh		8218863	0					
ANR	8221712	MemberAccess	temps [ args [ 5 ] ] . val		8218863	1					
ANR	8221713	ArrayIndexing	temps [ args [ 5 ] ]		8218863	0					
ANR	8221714	Identifier	temps		8218863	0					
ANR	8221715	ArrayIndexing	args [ 5 ]		8218863	1					
ANR	8221716	Identifier	args		8218863	0					
ANR	8221717	PrimaryExpression	5		8218863	1					
ANR	8221718	Identifier	val		8218863	1					
ANR	8221719	IdentifierDeclStatement	uint64_t a = ( ( uint64_t ) ah << 32 ) | al ;	1081:16:18443:18481	8218863	4	True				
ANR	8221720	IdentifierDecl	a = ( ( uint64_t ) ah << 32 ) | al		8218863	0					
ANR	8221721	IdentifierDeclType	uint64_t		8218863	0					
ANR	8221722	Identifier	a		8218863	1					
ANR	8221723	AssignmentExpression	a = ( ( uint64_t ) ah << 32 ) | al		8218863	2		=			
ANR	8221724	Identifier	a		8218863	0					
ANR	8221725	InclusiveOrExpression	( ( uint64_t ) ah << 32 ) | al		8218863	1		|			
ANR	8221726	ShiftExpression	( uint64_t ) ah << 32		8218863	0		<<			
ANR	8221727	CastExpression	( uint64_t ) ah		8218863	0					
ANR	8221728	CastTarget	uint64_t		8218863	0					
ANR	8221729	Identifier	ah		8218863	1					
ANR	8221730	PrimaryExpression	32		8218863	1					
ANR	8221731	Identifier	al		8218863	1					
ANR	8221732	IdentifierDeclStatement	uint64_t b = ( ( uint64_t ) bh << 32 ) | bl ;	1083:16:18500:18538	8218863	5	True				
ANR	8221733	IdentifierDecl	b = ( ( uint64_t ) bh << 32 ) | bl		8218863	0					
ANR	8221734	IdentifierDeclType	uint64_t		8218863	0					
ANR	8221735	Identifier	b		8218863	1					
ANR	8221736	AssignmentExpression	b = ( ( uint64_t ) bh << 32 ) | bl		8218863	2		=			
ANR	8221737	Identifier	b		8218863	0					
ANR	8221738	InclusiveOrExpression	( ( uint64_t ) bh << 32 ) | bl		8218863	1		|			
ANR	8221739	ShiftExpression	( uint64_t ) bh << 32		8218863	0		<<			
ANR	8221740	CastExpression	( uint64_t ) bh		8218863	0					
ANR	8221741	CastTarget	uint64_t		8218863	0					
ANR	8221742	Identifier	bh		8218863	1					
ANR	8221743	PrimaryExpression	32		8218863	1					
ANR	8221744	Identifier	bl		8218863	1					
ANR	8221745	IdentifierDeclStatement	"TCGArg rl , rh ;"	1085:16:18557:18570	8218863	6	True				
ANR	8221746	IdentifierDecl	rl		8218863	0					
ANR	8221747	IdentifierDeclType	TCGArg		8218863	0					
ANR	8221748	Identifier	rl		8218863	1					
ANR	8221749	IdentifierDecl	rh		8218863	1					
ANR	8221750	IdentifierDeclType	TCGArg		8218863	0					
ANR	8221751	Identifier	rh		8218863	1					
ANR	8221752	IdentifierDeclStatement	"TCGOp * op2 = insert_op_before ( s , op , INDEX_op_movi_i32 , 2 ) ;"	1087:16:18589:18647	8218863	7	True				
ANR	8221753	IdentifierDecl	"* op2 = insert_op_before ( s , op , INDEX_op_movi_i32 , 2 )"		8218863	0					
ANR	8221754	IdentifierDeclType	TCGOp *		8218863	0					
ANR	8221755	Identifier	op2		8218863	1					
ANR	8221756	AssignmentExpression	"* op2 = insert_op_before ( s , op , INDEX_op_movi_i32 , 2 )"		8218863	2		=			
ANR	8221757	Identifier	op2		8218863	0					
ANR	8221758	CallExpression	"insert_op_before ( s , op , INDEX_op_movi_i32 , 2 )"		8218863	1					
ANR	8221759	Callee	insert_op_before		8218863	0					
ANR	8221760	Identifier	insert_op_before		8218863	0					
ANR	8221761	ArgumentList	s		8218863	1					
ANR	8221762	Argument	s		8218863	0					
ANR	8221763	Identifier	s		8218863	0					
ANR	8221764	Argument	op		8218863	1					
ANR	8221765	Identifier	op		8218863	0					
ANR	8221766	Argument	INDEX_op_movi_i32		8218863	2					
ANR	8221767	Identifier	INDEX_op_movi_i32		8218863	0					
ANR	8221768	Argument	2		8218863	3					
ANR	8221769	PrimaryExpression	2		8218863	0					
ANR	8221770	IdentifierDeclStatement	TCGArg * args2 = & s -> gen_opparam_buf [ op2 -> args ] ;	1089:16:18666:18712	8218863	8	True				
ANR	8221771	IdentifierDecl	* args2 = & s -> gen_opparam_buf [ op2 -> args ]		8218863	0					
ANR	8221772	IdentifierDeclType	TCGArg *		8218863	0					
ANR	8221773	Identifier	args2		8218863	1					
ANR	8221774	AssignmentExpression	* args2 = & s -> gen_opparam_buf [ op2 -> args ]		8218863	2		=			
ANR	8221775	Identifier	args2		8218863	0					
ANR	8221776	UnaryOperationExpression	& s -> gen_opparam_buf [ op2 -> args ]		8218863	1					
ANR	8221777	UnaryOperator	&		8218863	0					
ANR	8221778	ArrayIndexing	s -> gen_opparam_buf [ op2 -> args ]		8218863	1					
ANR	8221779	PtrMemberAccess	s -> gen_opparam_buf		8218863	0					
ANR	8221780	Identifier	s		8218863	0					
ANR	8221781	Identifier	gen_opparam_buf		8218863	1					
ANR	8221782	PtrMemberAccess	op2 -> args		8218863	1					
ANR	8221783	Identifier	op2		8218863	0					
ANR	8221784	Identifier	args		8218863	1					
ANR	8221785	IfStatement	if ( opc == INDEX_op_add2_i32 )		8218863	9					
ANR	8221786	Condition	opc == INDEX_op_add2_i32	1093:20:18737:18760	8218863	0	True				
ANR	8221787	EqualityExpression	opc == INDEX_op_add2_i32		8218863	0		==			
ANR	8221788	Identifier	opc		8218863	0					
ANR	8221789	Identifier	INDEX_op_add2_i32		8218863	1					
ANR	8221790	CompoundStatement		1091:46:18728:18728	8218863	1					
ANR	8221791	ExpressionStatement	a += b	1095:20:18786:18792	8218863	0	True				
ANR	8221792	AssignmentExpression	a += b		8218863	0		+=			
ANR	8221793	Identifier	a		8218863	0					
ANR	8221794	Identifier	b		8218863	1					
ANR	8221795	ElseStatement	else		8218863	0					
ANR	8221796	CompoundStatement		1095:23:18783:18783	8218863	0					
ANR	8221797	ExpressionStatement	a -= b	1099:20:18841:18847	8218863	0	True				
ANR	8221798	AssignmentExpression	a -= b		8218863	0		-=			
ANR	8221799	Identifier	a		8218863	0					
ANR	8221800	Identifier	b		8218863	1					
ANR	8221801	ExpressionStatement	rl = args [ 0 ]	1105:16:18887:18899	8218863	10	True				
ANR	8221802	AssignmentExpression	rl = args [ 0 ]		8218863	0		=			
ANR	8221803	Identifier	rl		8218863	0					
ANR	8221804	ArrayIndexing	args [ 0 ]		8218863	1					
ANR	8221805	Identifier	args		8218863	0					
ANR	8221806	PrimaryExpression	0		8218863	1					
ANR	8221807	ExpressionStatement	rh = args [ 1 ]	1107:16:18918:18930	8218863	11	True				
ANR	8221808	AssignmentExpression	rh = args [ 1 ]		8218863	0		=			
ANR	8221809	Identifier	rh		8218863	0					
ANR	8221810	ArrayIndexing	args [ 1 ]		8218863	1					
ANR	8221811	Identifier	args		8218863	0					
ANR	8221812	PrimaryExpression	1		8218863	1					
ANR	8221813	ExpressionStatement	"tcg_opt_gen_movi ( s , op , args , rl , ( int32_t ) a )"	1109:16:18949:18994	8218863	12	True				
ANR	8221814	CallExpression	"tcg_opt_gen_movi ( s , op , args , rl , ( int32_t ) a )"		8218863	0					
ANR	8221815	Callee	tcg_opt_gen_movi		8218863	0					
ANR	8221816	Identifier	tcg_opt_gen_movi		8218863	0					
ANR	8221817	ArgumentList	s		8218863	1					
ANR	8221818	Argument	s		8218863	0					
ANR	8221819	Identifier	s		8218863	0					
ANR	8221820	Argument	op		8218863	1					
ANR	8221821	Identifier	op		8218863	0					
ANR	8221822	Argument	args		8218863	2					
ANR	8221823	Identifier	args		8218863	0					
ANR	8221824	Argument	rl		8218863	3					
ANR	8221825	Identifier	rl		8218863	0					
ANR	8221826	Argument	( int32_t ) a		8218863	4					
ANR	8221827	CastExpression	( int32_t ) a		8218863	0					
ANR	8221828	CastTarget	int32_t		8218863	0					
ANR	8221829	Identifier	a		8218863	1					
ANR	8221830	ExpressionStatement	"tcg_opt_gen_movi ( s , op2 , args2 , rh , ( int32_t ) ( a >> 32 ) )"	1111:16:19013:19068	8218863	13	True				
ANR	8221831	CallExpression	"tcg_opt_gen_movi ( s , op2 , args2 , rh , ( int32_t ) ( a >> 32 ) )"		8218863	0					
ANR	8221832	Callee	tcg_opt_gen_movi		8218863	0					
ANR	8221833	Identifier	tcg_opt_gen_movi		8218863	0					
ANR	8221834	ArgumentList	s		8218863	1					
ANR	8221835	Argument	s		8218863	0					
ANR	8221836	Identifier	s		8218863	0					
ANR	8221837	Argument	op2		8218863	1					
ANR	8221838	Identifier	op2		8218863	0					
ANR	8221839	Argument	args2		8218863	2					
ANR	8221840	Identifier	args2		8218863	0					
ANR	8221841	Argument	rh		8218863	3					
ANR	8221842	Identifier	rh		8218863	0					
ANR	8221843	Argument	( int32_t ) ( a >> 32 )		8218863	4					
ANR	8221844	CastExpression	( int32_t ) ( a >> 32 )		8218863	0					
ANR	8221845	CastTarget	int32_t		8218863	0					
ANR	8221846	ShiftExpression	a >> 32		8218863	1		>>			
ANR	8221847	Identifier	a		8218863	0					
ANR	8221848	PrimaryExpression	32		8218863	1					
ANR	8221849	ExpressionStatement	oi_next = op2 -> next	1117:16:19167:19186	8218863	14	True				
ANR	8221850	AssignmentExpression	oi_next = op2 -> next		8218863	0		=			
ANR	8221851	Identifier	oi_next		8218863	0					
ANR	8221852	PtrMemberAccess	op2 -> next		8218863	1					
ANR	8221853	Identifier	op2		8218863	0					
ANR	8221854	Identifier	next		8218863	1					
ANR	8221855	BreakStatement	break ;	1119:16:19205:19210	8218863	15	True				
ANR	8221856	GotoStatement	goto do_default ;	1123:12:19240:19255	8218863	197	True				
ANR	8221857	Identifier	do_default		8218863	0					
ANR	8221858	Label	case INDEX_op_mulu2_i32 :	1127:8:19268:19291	8218863	198	True				
ANR	8221859	Identifier	INDEX_op_mulu2_i32		8218863	0					
ANR	8221860	IfStatement	if ( temps [ args [ 2 ] ] . state == TCG_TEMP_CONST && temps [ args [ 3 ] ] . state == TCG_TEMP_CONST )		8218863	199					
ANR	8221861	Condition	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST && temps [ args [ 3 ] ] . state == TCG_TEMP_CONST	1129:16:19310:19406	8218863	0	True				
ANR	8221862	AndExpression	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST && temps [ args [ 3 ] ] . state == TCG_TEMP_CONST		8218863	0		&&			
ANR	8221863	EqualityExpression	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST		8218863	0		==			
ANR	8221864	MemberAccess	temps [ args [ 2 ] ] . state		8218863	0					
ANR	8221865	ArrayIndexing	temps [ args [ 2 ] ]		8218863	0					
ANR	8221866	Identifier	temps		8218863	0					
ANR	8221867	ArrayIndexing	args [ 2 ]		8218863	1					
ANR	8221868	Identifier	args		8218863	0					
ANR	8221869	PrimaryExpression	2		8218863	1					
ANR	8221870	Identifier	state		8218863	1					
ANR	8221871	Identifier	TCG_TEMP_CONST		8218863	1					
ANR	8221872	EqualityExpression	temps [ args [ 3 ] ] . state == TCG_TEMP_CONST		8218863	1		==			
ANR	8221873	MemberAccess	temps [ args [ 3 ] ] . state		8218863	0					
ANR	8221874	ArrayIndexing	temps [ args [ 3 ] ]		8218863	0					
ANR	8221875	Identifier	temps		8218863	0					
ANR	8221876	ArrayIndexing	args [ 3 ]		8218863	1					
ANR	8221877	Identifier	args		8218863	0					
ANR	8221878	PrimaryExpression	3		8218863	1					
ANR	8221879	Identifier	state		8218863	1					
ANR	8221880	Identifier	TCG_TEMP_CONST		8218863	1					
ANR	8221881	CompoundStatement		1141:16:19649:19695	8218863	1					
ANR	8221882	IdentifierDeclStatement	uint32_t a = temps [ args [ 2 ] ] . val ;	1133:16:19428:19459	8218863	0	True				
ANR	8221883	IdentifierDecl	a = temps [ args [ 2 ] ] . val		8218863	0					
ANR	8221884	IdentifierDeclType	uint32_t		8218863	0					
ANR	8221885	Identifier	a		8218863	1					
ANR	8221886	AssignmentExpression	a = temps [ args [ 2 ] ] . val		8218863	2		=			
ANR	8221887	Identifier	a		8218863	0					
ANR	8221888	MemberAccess	temps [ args [ 2 ] ] . val		8218863	1					
ANR	8221889	ArrayIndexing	temps [ args [ 2 ] ]		8218863	0					
ANR	8221890	Identifier	temps		8218863	0					
ANR	8221891	ArrayIndexing	args [ 2 ]		8218863	1					
ANR	8221892	Identifier	args		8218863	0					
ANR	8221893	PrimaryExpression	2		8218863	1					
ANR	8221894	Identifier	val		8218863	1					
ANR	8221895	IdentifierDeclStatement	uint32_t b = temps [ args [ 3 ] ] . val ;	1135:16:19478:19509	8218863	1	True				
ANR	8221896	IdentifierDecl	b = temps [ args [ 3 ] ] . val		8218863	0					
ANR	8221897	IdentifierDeclType	uint32_t		8218863	0					
ANR	8221898	Identifier	b		8218863	1					
ANR	8221899	AssignmentExpression	b = temps [ args [ 3 ] ] . val		8218863	2		=			
ANR	8221900	Identifier	b		8218863	0					
ANR	8221901	MemberAccess	temps [ args [ 3 ] ] . val		8218863	1					
ANR	8221902	ArrayIndexing	temps [ args [ 3 ] ]		8218863	0					
ANR	8221903	Identifier	temps		8218863	0					
ANR	8221904	ArrayIndexing	args [ 3 ]		8218863	1					
ANR	8221905	Identifier	args		8218863	0					
ANR	8221906	PrimaryExpression	3		8218863	1					
ANR	8221907	Identifier	val		8218863	1					
ANR	8221908	IdentifierDeclStatement	uint64_t r = ( uint64_t ) a * b ;	1137:16:19528:19556	8218863	2	True				
ANR	8221909	IdentifierDecl	r = ( uint64_t ) a * b		8218863	0					
ANR	8221910	IdentifierDeclType	uint64_t		8218863	0					
ANR	8221911	Identifier	r		8218863	1					
ANR	8221912	AssignmentExpression	r = ( uint64_t ) a * b		8218863	2		=			
ANR	8221913	Identifier	r		8218863	0					
ANR	8221914	MultiplicativeExpression	( uint64_t ) a * b		8218863	1		*			
ANR	8221915	CastExpression	( uint64_t ) a		8218863	0					
ANR	8221916	CastTarget	uint64_t		8218863	0					
ANR	8221917	Identifier	a		8218863	1					
ANR	8221918	Identifier	b		8218863	1					
ANR	8221919	IdentifierDeclStatement	"TCGArg rl , rh ;"	1139:16:19575:19588	8218863	3	True				
ANR	8221920	IdentifierDecl	rl		8218863	0					
ANR	8221921	IdentifierDeclType	TCGArg		8218863	0					
ANR	8221922	Identifier	rl		8218863	1					
ANR	8221923	IdentifierDecl	rh		8218863	1					
ANR	8221924	IdentifierDeclType	TCGArg		8218863	0					
ANR	8221925	Identifier	rh		8218863	1					
ANR	8221926	IdentifierDeclStatement	"TCGOp * op2 = insert_op_before ( s , op , INDEX_op_movi_i32 , 2 ) ;"	1141:16:19607:19665	8218863	4	True				
ANR	8221927	IdentifierDecl	"* op2 = insert_op_before ( s , op , INDEX_op_movi_i32 , 2 )"		8218863	0					
ANR	8221928	IdentifierDeclType	TCGOp *		8218863	0					
ANR	8221929	Identifier	op2		8218863	1					
ANR	8221930	AssignmentExpression	"* op2 = insert_op_before ( s , op , INDEX_op_movi_i32 , 2 )"		8218863	2		=			
ANR	8221931	Identifier	op2		8218863	0					
ANR	8221932	CallExpression	"insert_op_before ( s , op , INDEX_op_movi_i32 , 2 )"		8218863	1					
ANR	8221933	Callee	insert_op_before		8218863	0					
ANR	8221934	Identifier	insert_op_before		8218863	0					
ANR	8221935	ArgumentList	s		8218863	1					
ANR	8221936	Argument	s		8218863	0					
ANR	8221937	Identifier	s		8218863	0					
ANR	8221938	Argument	op		8218863	1					
ANR	8221939	Identifier	op		8218863	0					
ANR	8221940	Argument	INDEX_op_movi_i32		8218863	2					
ANR	8221941	Identifier	INDEX_op_movi_i32		8218863	0					
ANR	8221942	Argument	2		8218863	3					
ANR	8221943	PrimaryExpression	2		8218863	0					
ANR	8221944	IdentifierDeclStatement	TCGArg * args2 = & s -> gen_opparam_buf [ op2 -> args ] ;	1143:16:19684:19730	8218863	5	True				
ANR	8221945	IdentifierDecl	* args2 = & s -> gen_opparam_buf [ op2 -> args ]		8218863	0					
ANR	8221946	IdentifierDeclType	TCGArg *		8218863	0					
ANR	8221947	Identifier	args2		8218863	1					
ANR	8221948	AssignmentExpression	* args2 = & s -> gen_opparam_buf [ op2 -> args ]		8218863	2		=			
ANR	8221949	Identifier	args2		8218863	0					
ANR	8221950	UnaryOperationExpression	& s -> gen_opparam_buf [ op2 -> args ]		8218863	1					
ANR	8221951	UnaryOperator	&		8218863	0					
ANR	8221952	ArrayIndexing	s -> gen_opparam_buf [ op2 -> args ]		8218863	1					
ANR	8221953	PtrMemberAccess	s -> gen_opparam_buf		8218863	0					
ANR	8221954	Identifier	s		8218863	0					
ANR	8221955	Identifier	gen_opparam_buf		8218863	1					
ANR	8221956	PtrMemberAccess	op2 -> args		8218863	1					
ANR	8221957	Identifier	op2		8218863	0					
ANR	8221958	Identifier	args		8218863	1					
ANR	8221959	ExpressionStatement	rl = args [ 0 ]	1147:16:19751:19763	8218863	6	True				
ANR	8221960	AssignmentExpression	rl = args [ 0 ]		8218863	0		=			
ANR	8221961	Identifier	rl		8218863	0					
ANR	8221962	ArrayIndexing	args [ 0 ]		8218863	1					
ANR	8221963	Identifier	args		8218863	0					
ANR	8221964	PrimaryExpression	0		8218863	1					
ANR	8221965	ExpressionStatement	rh = args [ 1 ]	1149:16:19782:19794	8218863	7	True				
ANR	8221966	AssignmentExpression	rh = args [ 1 ]		8218863	0		=			
ANR	8221967	Identifier	rh		8218863	0					
ANR	8221968	ArrayIndexing	args [ 1 ]		8218863	1					
ANR	8221969	Identifier	args		8218863	0					
ANR	8221970	PrimaryExpression	1		8218863	1					
ANR	8221971	ExpressionStatement	"tcg_opt_gen_movi ( s , op , args , rl , ( int32_t ) r )"	1151:16:19813:19858	8218863	8	True				
ANR	8221972	CallExpression	"tcg_opt_gen_movi ( s , op , args , rl , ( int32_t ) r )"		8218863	0					
ANR	8221973	Callee	tcg_opt_gen_movi		8218863	0					
ANR	8221974	Identifier	tcg_opt_gen_movi		8218863	0					
ANR	8221975	ArgumentList	s		8218863	1					
ANR	8221976	Argument	s		8218863	0					
ANR	8221977	Identifier	s		8218863	0					
ANR	8221978	Argument	op		8218863	1					
ANR	8221979	Identifier	op		8218863	0					
ANR	8221980	Argument	args		8218863	2					
ANR	8221981	Identifier	args		8218863	0					
ANR	8221982	Argument	rl		8218863	3					
ANR	8221983	Identifier	rl		8218863	0					
ANR	8221984	Argument	( int32_t ) r		8218863	4					
ANR	8221985	CastExpression	( int32_t ) r		8218863	0					
ANR	8221986	CastTarget	int32_t		8218863	0					
ANR	8221987	Identifier	r		8218863	1					
ANR	8221988	ExpressionStatement	"tcg_opt_gen_movi ( s , op2 , args2 , rh , ( int32_t ) ( r >> 32 ) )"	1153:16:19877:19932	8218863	9	True				
ANR	8221989	CallExpression	"tcg_opt_gen_movi ( s , op2 , args2 , rh , ( int32_t ) ( r >> 32 ) )"		8218863	0					
ANR	8221990	Callee	tcg_opt_gen_movi		8218863	0					
ANR	8221991	Identifier	tcg_opt_gen_movi		8218863	0					
ANR	8221992	ArgumentList	s		8218863	1					
ANR	8221993	Argument	s		8218863	0					
ANR	8221994	Identifier	s		8218863	0					
ANR	8221995	Argument	op2		8218863	1					
ANR	8221996	Identifier	op2		8218863	0					
ANR	8221997	Argument	args2		8218863	2					
ANR	8221998	Identifier	args2		8218863	0					
ANR	8221999	Argument	rh		8218863	3					
ANR	8222000	Identifier	rh		8218863	0					
ANR	8222001	Argument	( int32_t ) ( r >> 32 )		8218863	4					
ANR	8222002	CastExpression	( int32_t ) ( r >> 32 )		8218863	0					
ANR	8222003	CastTarget	int32_t		8218863	0					
ANR	8222004	ShiftExpression	r >> 32		8218863	1		>>			
ANR	8222005	Identifier	r		8218863	0					
ANR	8222006	PrimaryExpression	32		8218863	1					
ANR	8222007	ExpressionStatement	oi_next = op2 -> next	1159:16:20031:20050	8218863	10	True				
ANR	8222008	AssignmentExpression	oi_next = op2 -> next		8218863	0		=			
ANR	8222009	Identifier	oi_next		8218863	0					
ANR	8222010	PtrMemberAccess	op2 -> next		8218863	1					
ANR	8222011	Identifier	op2		8218863	0					
ANR	8222012	Identifier	next		8218863	1					
ANR	8222013	BreakStatement	break ;	1161:16:20069:20074	8218863	11	True				
ANR	8222014	GotoStatement	goto do_default ;	1165:12:20104:20119	8218863	200	True				
ANR	8222015	Identifier	do_default		8218863	0					
ANR	8222016	Label	case INDEX_op_brcond2_i32 :	1169:8:20132:20157	8218863	201	True				
ANR	8222017	Identifier	INDEX_op_brcond2_i32		8218863	0					
ANR	8222018	ExpressionStatement	"tmp = do_constant_folding_cond2 ( & args [ 0 ] , & args [ 2 ] , args [ 4 ] )"	1171:12:20172:20232	8218863	202	True				
ANR	8222019	AssignmentExpression	"tmp = do_constant_folding_cond2 ( & args [ 0 ] , & args [ 2 ] , args [ 4 ] )"		8218863	0		=			
ANR	8222020	Identifier	tmp		8218863	0					
ANR	8222021	CallExpression	"do_constant_folding_cond2 ( & args [ 0 ] , & args [ 2 ] , args [ 4 ] )"		8218863	1					
ANR	8222022	Callee	do_constant_folding_cond2		8218863	0					
ANR	8222023	Identifier	do_constant_folding_cond2		8218863	0					
ANR	8222024	ArgumentList	& args [ 0 ]		8218863	1					
ANR	8222025	Argument	& args [ 0 ]		8218863	0					
ANR	8222026	UnaryOperationExpression	& args [ 0 ]		8218863	0					
ANR	8222027	UnaryOperator	&		8218863	0					
ANR	8222028	ArrayIndexing	args [ 0 ]		8218863	1					
ANR	8222029	Identifier	args		8218863	0					
ANR	8222030	PrimaryExpression	0		8218863	1					
ANR	8222031	Argument	& args [ 2 ]		8218863	1					
ANR	8222032	UnaryOperationExpression	& args [ 2 ]		8218863	0					
ANR	8222033	UnaryOperator	&		8218863	0					
ANR	8222034	ArrayIndexing	args [ 2 ]		8218863	1					
ANR	8222035	Identifier	args		8218863	0					
ANR	8222036	PrimaryExpression	2		8218863	1					
ANR	8222037	Argument	args [ 4 ]		8218863	2					
ANR	8222038	ArrayIndexing	args [ 4 ]		8218863	0					
ANR	8222039	Identifier	args		8218863	0					
ANR	8222040	PrimaryExpression	4		8218863	1					
ANR	8222041	IfStatement	if ( tmp != 2 )		8218863	203					
ANR	8222042	Condition	tmp != 2	1173:16:20251:20258	8218863	0	True				
ANR	8222043	EqualityExpression	tmp != 2		8218863	0		!=			
ANR	8222044	Identifier	tmp		8218863	0					
ANR	8222045	PrimaryExpression	2		8218863	1					
ANR	8222046	CompoundStatement		1171:26:20226:20226	8218863	1					
ANR	8222047	IfStatement	if ( tmp )		8218863	0					
ANR	8222048	Condition	tmp	1175:20:20284:20286	8218863	0	True				
ANR	8222049	Identifier	tmp		8218863	0					
ANR	8222050	CompoundStatement		1173:25:20254:20254	8218863	1					
ANR	8222051	Label	do_brcond_true :	1177:12:20304:20318	8218863	0	True				
ANR	8222052	Identifier	do_brcond_true		8218863	0					
ANR	8222053	ExpressionStatement	reset_all_temps ( nb_temps )	1179:20:20341:20366	8218863	1	True				
ANR	8222054	CallExpression	reset_all_temps ( nb_temps )		8218863	0					
ANR	8222055	Callee	reset_all_temps		8218863	0					
ANR	8222056	Identifier	reset_all_temps		8218863	0					
ANR	8222057	ArgumentList	nb_temps		8218863	1					
ANR	8222058	Argument	nb_temps		8218863	0					
ANR	8222059	Identifier	nb_temps		8218863	0					
ANR	8222060	ExpressionStatement	op -> opc = INDEX_op_br	1181:20:20389:20410	8218863	2	True				
ANR	8222061	AssignmentExpression	op -> opc = INDEX_op_br		8218863	0		=			
ANR	8222062	PtrMemberAccess	op -> opc		8218863	0					
ANR	8222063	Identifier	op		8218863	0					
ANR	8222064	Identifier	opc		8218863	1					
ANR	8222065	Identifier	INDEX_op_br		8218863	1					
ANR	8222066	ExpressionStatement	args [ 0 ] = args [ 5 ]	1183:20:20433:20450	8218863	3	True				
ANR	8222067	AssignmentExpression	args [ 0 ] = args [ 5 ]		8218863	0		=			
ANR	8222068	ArrayIndexing	args [ 0 ]		8218863	0					
ANR	8222069	Identifier	args		8218863	0					
ANR	8222070	PrimaryExpression	0		8218863	1					
ANR	8222071	ArrayIndexing	args [ 5 ]		8218863	1					
ANR	8222072	Identifier	args		8218863	0					
ANR	8222073	PrimaryExpression	5		8218863	1					
ANR	8222074	ElseStatement	else		8218863	0					
ANR	8222075	CompoundStatement		1183:23:20441:20441	8218863	0					
ANR	8222076	Label	do_brcond_false :	1187:12:20491:20506	8218863	0	True				
ANR	8222077	Identifier	do_brcond_false		8218863	0					
ANR	8222078	ExpressionStatement	"tcg_op_remove ( s , op )"	1189:20:20529:20549	8218863	1	True				
ANR	8222079	CallExpression	"tcg_op_remove ( s , op )"		8218863	0					
ANR	8222080	Callee	tcg_op_remove		8218863	0					
ANR	8222081	Identifier	tcg_op_remove		8218863	0					
ANR	8222082	ArgumentList	s		8218863	1					
ANR	8222083	Argument	s		8218863	0					
ANR	8222084	Identifier	s		8218863	0					
ANR	8222085	Argument	op		8218863	1					
ANR	8222086	Identifier	op		8218863	0					
ANR	8222087	ElseStatement	else		8218863	0					
ANR	8222088	IfStatement	if ( ( args [ 4 ] == TCG_COND_LT || args [ 4 ] == TCG_COND_GE ) && temps [ args [ 2 ] ] . state == TCG_TEMP_CONST && temps [ args [ 3 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . val == 0 && temps [ args [ 3 ] ] . val == 0 )		8218863	0					
ANR	8222089	Condition	( args [ 4 ] == TCG_COND_LT || args [ 4 ] == TCG_COND_GE ) && temps [ args [ 2 ] ] . state == TCG_TEMP_CONST && temps [ args [ 3 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . val == 0 && temps [ args [ 3 ] ] . val == 0	1193:23:20594:20877	8218863	0	True				
ANR	8222090	AndExpression	( args [ 4 ] == TCG_COND_LT || args [ 4 ] == TCG_COND_GE ) && temps [ args [ 2 ] ] . state == TCG_TEMP_CONST && temps [ args [ 3 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . val == 0 && temps [ args [ 3 ] ] . val == 0		8218863	0		&&			
ANR	8222091	OrExpression	args [ 4 ] == TCG_COND_LT || args [ 4 ] == TCG_COND_GE		8218863	0		||			
ANR	8222092	EqualityExpression	args [ 4 ] == TCG_COND_LT		8218863	0		==			
ANR	8222093	ArrayIndexing	args [ 4 ]		8218863	0					
ANR	8222094	Identifier	args		8218863	0					
ANR	8222095	PrimaryExpression	4		8218863	1					
ANR	8222096	Identifier	TCG_COND_LT		8218863	1					
ANR	8222097	EqualityExpression	args [ 4 ] == TCG_COND_GE		8218863	1		==			
ANR	8222098	ArrayIndexing	args [ 4 ]		8218863	0					
ANR	8222099	Identifier	args		8218863	0					
ANR	8222100	PrimaryExpression	4		8218863	1					
ANR	8222101	Identifier	TCG_COND_GE		8218863	1					
ANR	8222102	AndExpression	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST && temps [ args [ 3 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . val == 0 && temps [ args [ 3 ] ] . val == 0		8218863	1		&&			
ANR	8222103	EqualityExpression	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST		8218863	0		==			
ANR	8222104	MemberAccess	temps [ args [ 2 ] ] . state		8218863	0					
ANR	8222105	ArrayIndexing	temps [ args [ 2 ] ]		8218863	0					
ANR	8222106	Identifier	temps		8218863	0					
ANR	8222107	ArrayIndexing	args [ 2 ]		8218863	1					
ANR	8222108	Identifier	args		8218863	0					
ANR	8222109	PrimaryExpression	2		8218863	1					
ANR	8222110	Identifier	state		8218863	1					
ANR	8222111	Identifier	TCG_TEMP_CONST		8218863	1					
ANR	8222112	AndExpression	temps [ args [ 3 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . val == 0 && temps [ args [ 3 ] ] . val == 0		8218863	1		&&			
ANR	8222113	EqualityExpression	temps [ args [ 3 ] ] . state == TCG_TEMP_CONST		8218863	0		==			
ANR	8222114	MemberAccess	temps [ args [ 3 ] ] . state		8218863	0					
ANR	8222115	ArrayIndexing	temps [ args [ 3 ] ]		8218863	0					
ANR	8222116	Identifier	temps		8218863	0					
ANR	8222117	ArrayIndexing	args [ 3 ]		8218863	1					
ANR	8222118	Identifier	args		8218863	0					
ANR	8222119	PrimaryExpression	3		8218863	1					
ANR	8222120	Identifier	state		8218863	1					
ANR	8222121	Identifier	TCG_TEMP_CONST		8218863	1					
ANR	8222122	AndExpression	temps [ args [ 2 ] ] . val == 0 && temps [ args [ 3 ] ] . val == 0		8218863	1		&&			
ANR	8222123	EqualityExpression	temps [ args [ 2 ] ] . val == 0		8218863	0		==			
ANR	8222124	MemberAccess	temps [ args [ 2 ] ] . val		8218863	0					
ANR	8222125	ArrayIndexing	temps [ args [ 2 ] ]		8218863	0					
ANR	8222126	Identifier	temps		8218863	0					
ANR	8222127	ArrayIndexing	args [ 2 ]		8218863	1					
ANR	8222128	Identifier	args		8218863	0					
ANR	8222129	PrimaryExpression	2		8218863	1					
ANR	8222130	Identifier	val		8218863	1					
ANR	8222131	PrimaryExpression	0		8218863	1					
ANR	8222132	EqualityExpression	temps [ args [ 3 ] ] . val == 0		8218863	1		==			
ANR	8222133	MemberAccess	temps [ args [ 3 ] ] . val		8218863	0					
ANR	8222134	ArrayIndexing	temps [ args [ 3 ] ]		8218863	0					
ANR	8222135	Identifier	temps		8218863	0					
ANR	8222136	ArrayIndexing	args [ 3 ]		8218863	1					
ANR	8222137	Identifier	args		8218863	0					
ANR	8222138	PrimaryExpression	3		8218863	1					
ANR	8222139	Identifier	val		8218863	1					
ANR	8222140	PrimaryExpression	0		8218863	1					
ANR	8222141	CompoundStatement		1199:51:20845:20845	8218863	1					
ANR	8222142	Label	do_brcond_high :	1207:12:21025:21039	8218863	0	True				
ANR	8222143	Identifier	do_brcond_high		8218863	0					
ANR	8222144	ExpressionStatement	reset_all_temps ( nb_temps )	1209:16:21058:21083	8218863	1	True				
ANR	8222145	CallExpression	reset_all_temps ( nb_temps )		8218863	0					
ANR	8222146	Callee	reset_all_temps		8218863	0					
ANR	8222147	Identifier	reset_all_temps		8218863	0					
ANR	8222148	ArgumentList	nb_temps		8218863	1					
ANR	8222149	Argument	nb_temps		8218863	0					
ANR	8222150	Identifier	nb_temps		8218863	0					
ANR	8222151	ExpressionStatement	op -> opc = INDEX_op_brcond_i32	1211:16:21102:21131	8218863	2	True				
ANR	8222152	AssignmentExpression	op -> opc = INDEX_op_brcond_i32		8218863	0		=			
ANR	8222153	PtrMemberAccess	op -> opc		8218863	0					
ANR	8222154	Identifier	op		8218863	0					
ANR	8222155	Identifier	opc		8218863	1					
ANR	8222156	Identifier	INDEX_op_brcond_i32		8218863	1					
ANR	8222157	ExpressionStatement	args [ 0 ] = args [ 1 ]	1213:16:21150:21167	8218863	3	True				
ANR	8222158	AssignmentExpression	args [ 0 ] = args [ 1 ]		8218863	0		=			
ANR	8222159	ArrayIndexing	args [ 0 ]		8218863	0					
ANR	8222160	Identifier	args		8218863	0					
ANR	8222161	PrimaryExpression	0		8218863	1					
ANR	8222162	ArrayIndexing	args [ 1 ]		8218863	1					
ANR	8222163	Identifier	args		8218863	0					
ANR	8222164	PrimaryExpression	1		8218863	1					
ANR	8222165	ExpressionStatement	args [ 1 ] = args [ 3 ]	1215:16:21186:21203	8218863	4	True				
ANR	8222166	AssignmentExpression	args [ 1 ] = args [ 3 ]		8218863	0		=			
ANR	8222167	ArrayIndexing	args [ 1 ]		8218863	0					
ANR	8222168	Identifier	args		8218863	0					
ANR	8222169	PrimaryExpression	1		8218863	1					
ANR	8222170	ArrayIndexing	args [ 3 ]		8218863	1					
ANR	8222171	Identifier	args		8218863	0					
ANR	8222172	PrimaryExpression	3		8218863	1					
ANR	8222173	ExpressionStatement	args [ 2 ] = args [ 4 ]	1217:16:21222:21239	8218863	5	True				
ANR	8222174	AssignmentExpression	args [ 2 ] = args [ 4 ]		8218863	0		=			
ANR	8222175	ArrayIndexing	args [ 2 ]		8218863	0					
ANR	8222176	Identifier	args		8218863	0					
ANR	8222177	PrimaryExpression	2		8218863	1					
ANR	8222178	ArrayIndexing	args [ 4 ]		8218863	1					
ANR	8222179	Identifier	args		8218863	0					
ANR	8222180	PrimaryExpression	4		8218863	1					
ANR	8222181	ExpressionStatement	args [ 3 ] = args [ 5 ]	1219:16:21258:21275	8218863	6	True				
ANR	8222182	AssignmentExpression	args [ 3 ] = args [ 5 ]		8218863	0		=			
ANR	8222183	ArrayIndexing	args [ 3 ]		8218863	0					
ANR	8222184	Identifier	args		8218863	0					
ANR	8222185	PrimaryExpression	3		8218863	1					
ANR	8222186	ArrayIndexing	args [ 5 ]		8218863	1					
ANR	8222187	Identifier	args		8218863	0					
ANR	8222188	PrimaryExpression	5		8218863	1					
ANR	8222189	ElseStatement	else		8218863	0					
ANR	8222190	IfStatement	if ( args [ 4 ] == TCG_COND_EQ )		8218863	0					
ANR	8222191	Condition	args [ 4 ] == TCG_COND_EQ	1221:23:21301:21322	8218863	0	True				
ANR	8222192	EqualityExpression	args [ 4 ] == TCG_COND_EQ		8218863	0		==			
ANR	8222193	ArrayIndexing	args [ 4 ]		8218863	0					
ANR	8222194	Identifier	args		8218863	0					
ANR	8222195	PrimaryExpression	4		8218863	1					
ANR	8222196	Identifier	TCG_COND_EQ		8218863	1					
ANR	8222197	CompoundStatement		1219:47:21290:21290	8218863	1					
ANR	8222198	ExpressionStatement	"tmp = do_constant_folding_cond ( INDEX_op_brcond_i32 , args [ 0 ] , args [ 2 ] , TCG_COND_EQ )"	1227:16:21454:21584	8218863	0	True				
ANR	8222199	AssignmentExpression	"tmp = do_constant_folding_cond ( INDEX_op_brcond_i32 , args [ 0 ] , args [ 2 ] , TCG_COND_EQ )"		8218863	0		=			
ANR	8222200	Identifier	tmp		8218863	0					
ANR	8222201	CallExpression	"do_constant_folding_cond ( INDEX_op_brcond_i32 , args [ 0 ] , args [ 2 ] , TCG_COND_EQ )"		8218863	1					
ANR	8222202	Callee	do_constant_folding_cond		8218863	0					
ANR	8222203	Identifier	do_constant_folding_cond		8218863	0					
ANR	8222204	ArgumentList	INDEX_op_brcond_i32		8218863	1					
ANR	8222205	Argument	INDEX_op_brcond_i32		8218863	0					
ANR	8222206	Identifier	INDEX_op_brcond_i32		8218863	0					
ANR	8222207	Argument	args [ 0 ]		8218863	1					
ANR	8222208	ArrayIndexing	args [ 0 ]		8218863	0					
ANR	8222209	Identifier	args		8218863	0					
ANR	8222210	PrimaryExpression	0		8218863	1					
ANR	8222211	Argument	args [ 2 ]		8218863	2					
ANR	8222212	ArrayIndexing	args [ 2 ]		8218863	0					
ANR	8222213	Identifier	args		8218863	0					
ANR	8222214	PrimaryExpression	2		8218863	1					
ANR	8222215	Argument	TCG_COND_EQ		8218863	3					
ANR	8222216	Identifier	TCG_COND_EQ		8218863	0					
ANR	8222217	IfStatement	if ( tmp == 0 )		8218863	1					
ANR	8222218	Condition	tmp == 0	1231:20:21607:21614	8218863	0	True				
ANR	8222219	EqualityExpression	tmp == 0		8218863	0		==			
ANR	8222220	Identifier	tmp		8218863	0					
ANR	8222221	PrimaryExpression	0		8218863	1					
ANR	8222222	CompoundStatement		1229:30:21582:21582	8218863	1					
ANR	8222223	GotoStatement	goto do_brcond_false ;	1233:20:21640:21660	8218863	0	True				
ANR	8222224	Identifier	do_brcond_false		8218863	0					
ANR	8222225	ElseStatement	else		8218863	0					
ANR	8222226	IfStatement	if ( tmp == 1 )		8218863	0					
ANR	8222227	Condition	tmp == 1	1235:27:21690:21697	8218863	0	True				
ANR	8222228	EqualityExpression	tmp == 1		8218863	0		==			
ANR	8222229	Identifier	tmp		8218863	0					
ANR	8222230	PrimaryExpression	1		8218863	1					
ANR	8222231	CompoundStatement		1233:37:21665:21665	8218863	1					
ANR	8222232	GotoStatement	goto do_brcond_high ;	1237:20:21723:21742	8218863	0	True				
ANR	8222233	Identifier	do_brcond_high		8218863	0					
ANR	8222234	ExpressionStatement	"tmp = do_constant_folding_cond ( INDEX_op_brcond_i32 , args [ 1 ] , args [ 3 ] , TCG_COND_EQ )"	1241:16:21780:21910	8218863	2	True				
ANR	8222235	AssignmentExpression	"tmp = do_constant_folding_cond ( INDEX_op_brcond_i32 , args [ 1 ] , args [ 3 ] , TCG_COND_EQ )"		8218863	0		=			
ANR	8222236	Identifier	tmp		8218863	0					
ANR	8222237	CallExpression	"do_constant_folding_cond ( INDEX_op_brcond_i32 , args [ 1 ] , args [ 3 ] , TCG_COND_EQ )"		8218863	1					
ANR	8222238	Callee	do_constant_folding_cond		8218863	0					
ANR	8222239	Identifier	do_constant_folding_cond		8218863	0					
ANR	8222240	ArgumentList	INDEX_op_brcond_i32		8218863	1					
ANR	8222241	Argument	INDEX_op_brcond_i32		8218863	0					
ANR	8222242	Identifier	INDEX_op_brcond_i32		8218863	0					
ANR	8222243	Argument	args [ 1 ]		8218863	1					
ANR	8222244	ArrayIndexing	args [ 1 ]		8218863	0					
ANR	8222245	Identifier	args		8218863	0					
ANR	8222246	PrimaryExpression	1		8218863	1					
ANR	8222247	Argument	args [ 3 ]		8218863	2					
ANR	8222248	ArrayIndexing	args [ 3 ]		8218863	0					
ANR	8222249	Identifier	args		8218863	0					
ANR	8222250	PrimaryExpression	3		8218863	1					
ANR	8222251	Argument	TCG_COND_EQ		8218863	3					
ANR	8222252	Identifier	TCG_COND_EQ		8218863	0					
ANR	8222253	IfStatement	if ( tmp == 0 )		8218863	3					
ANR	8222254	Condition	tmp == 0	1245:20:21933:21940	8218863	0	True				
ANR	8222255	EqualityExpression	tmp == 0		8218863	0		==			
ANR	8222256	Identifier	tmp		8218863	0					
ANR	8222257	PrimaryExpression	0		8218863	1					
ANR	8222258	CompoundStatement		1243:30:21908:21908	8218863	1					
ANR	8222259	GotoStatement	goto do_brcond_false ;	1247:20:21966:21986	8218863	0	True				
ANR	8222260	Identifier	do_brcond_false		8218863	0					
ANR	8222261	ElseStatement	else		8218863	0					
ANR	8222262	IfStatement	if ( tmp != 1 )		8218863	0					
ANR	8222263	Condition	tmp != 1	1249:27:22016:22023	8218863	0	True				
ANR	8222264	EqualityExpression	tmp != 1		8218863	0		!=			
ANR	8222265	Identifier	tmp		8218863	0					
ANR	8222266	PrimaryExpression	1		8218863	1					
ANR	8222267	CompoundStatement		1247:37:21991:21991	8218863	1					
ANR	8222268	GotoStatement	goto do_default ;	1251:20:22049:22064	8218863	0	True				
ANR	8222269	Identifier	do_default		8218863	0					
ANR	8222270	Label	do_brcond_low :	1255:12:22098:22111	8218863	4	True				
ANR	8222271	Identifier	do_brcond_low		8218863	0					
ANR	8222272	ExpressionStatement	reset_all_temps ( nb_temps )	1257:16:22130:22155	8218863	5	True				
ANR	8222273	CallExpression	reset_all_temps ( nb_temps )		8218863	0					
ANR	8222274	Callee	reset_all_temps		8218863	0					
ANR	8222275	Identifier	reset_all_temps		8218863	0					
ANR	8222276	ArgumentList	nb_temps		8218863	1					
ANR	8222277	Argument	nb_temps		8218863	0					
ANR	8222278	Identifier	nb_temps		8218863	0					
ANR	8222279	ExpressionStatement	op -> opc = INDEX_op_brcond_i32	1259:16:22174:22203	8218863	6	True				
ANR	8222280	AssignmentExpression	op -> opc = INDEX_op_brcond_i32		8218863	0		=			
ANR	8222281	PtrMemberAccess	op -> opc		8218863	0					
ANR	8222282	Identifier	op		8218863	0					
ANR	8222283	Identifier	opc		8218863	1					
ANR	8222284	Identifier	INDEX_op_brcond_i32		8218863	1					
ANR	8222285	ExpressionStatement	args [ 1 ] = args [ 2 ]	1261:16:22222:22239	8218863	7	True				
ANR	8222286	AssignmentExpression	args [ 1 ] = args [ 2 ]		8218863	0		=			
ANR	8222287	ArrayIndexing	args [ 1 ]		8218863	0					
ANR	8222288	Identifier	args		8218863	0					
ANR	8222289	PrimaryExpression	1		8218863	1					
ANR	8222290	ArrayIndexing	args [ 2 ]		8218863	1					
ANR	8222291	Identifier	args		8218863	0					
ANR	8222292	PrimaryExpression	2		8218863	1					
ANR	8222293	ExpressionStatement	args [ 2 ] = args [ 4 ]	1263:16:22258:22275	8218863	8	True				
ANR	8222294	AssignmentExpression	args [ 2 ] = args [ 4 ]		8218863	0		=			
ANR	8222295	ArrayIndexing	args [ 2 ]		8218863	0					
ANR	8222296	Identifier	args		8218863	0					
ANR	8222297	PrimaryExpression	2		8218863	1					
ANR	8222298	ArrayIndexing	args [ 4 ]		8218863	1					
ANR	8222299	Identifier	args		8218863	0					
ANR	8222300	PrimaryExpression	4		8218863	1					
ANR	8222301	ExpressionStatement	args [ 3 ] = args [ 5 ]	1265:16:22294:22311	8218863	9	True				
ANR	8222302	AssignmentExpression	args [ 3 ] = args [ 5 ]		8218863	0		=			
ANR	8222303	ArrayIndexing	args [ 3 ]		8218863	0					
ANR	8222304	Identifier	args		8218863	0					
ANR	8222305	PrimaryExpression	3		8218863	1					
ANR	8222306	ArrayIndexing	args [ 5 ]		8218863	1					
ANR	8222307	Identifier	args		8218863	0					
ANR	8222308	PrimaryExpression	5		8218863	1					
ANR	8222309	ElseStatement	else		8218863	0					
ANR	8222310	IfStatement	if ( args [ 4 ] == TCG_COND_NE )		8218863	0					
ANR	8222311	Condition	args [ 4 ] == TCG_COND_NE	1267:23:22337:22358	8218863	0	True				
ANR	8222312	EqualityExpression	args [ 4 ] == TCG_COND_NE		8218863	0		==			
ANR	8222313	ArrayIndexing	args [ 4 ]		8218863	0					
ANR	8222314	Identifier	args		8218863	0					
ANR	8222315	PrimaryExpression	4		8218863	1					
ANR	8222316	Identifier	TCG_COND_NE		8218863	1					
ANR	8222317	CompoundStatement		1265:47:22326:22326	8218863	1					
ANR	8222318	ExpressionStatement	"tmp = do_constant_folding_cond ( INDEX_op_brcond_i32 , args [ 0 ] , args [ 2 ] , TCG_COND_NE )"	1273:16:22490:22620	8218863	0	True				
ANR	8222319	AssignmentExpression	"tmp = do_constant_folding_cond ( INDEX_op_brcond_i32 , args [ 0 ] , args [ 2 ] , TCG_COND_NE )"		8218863	0		=			
ANR	8222320	Identifier	tmp		8218863	0					
ANR	8222321	CallExpression	"do_constant_folding_cond ( INDEX_op_brcond_i32 , args [ 0 ] , args [ 2 ] , TCG_COND_NE )"		8218863	1					
ANR	8222322	Callee	do_constant_folding_cond		8218863	0					
ANR	8222323	Identifier	do_constant_folding_cond		8218863	0					
ANR	8222324	ArgumentList	INDEX_op_brcond_i32		8218863	1					
ANR	8222325	Argument	INDEX_op_brcond_i32		8218863	0					
ANR	8222326	Identifier	INDEX_op_brcond_i32		8218863	0					
ANR	8222327	Argument	args [ 0 ]		8218863	1					
ANR	8222328	ArrayIndexing	args [ 0 ]		8218863	0					
ANR	8222329	Identifier	args		8218863	0					
ANR	8222330	PrimaryExpression	0		8218863	1					
ANR	8222331	Argument	args [ 2 ]		8218863	2					
ANR	8222332	ArrayIndexing	args [ 2 ]		8218863	0					
ANR	8222333	Identifier	args		8218863	0					
ANR	8222334	PrimaryExpression	2		8218863	1					
ANR	8222335	Argument	TCG_COND_NE		8218863	3					
ANR	8222336	Identifier	TCG_COND_NE		8218863	0					
ANR	8222337	IfStatement	if ( tmp == 0 )		8218863	1					
ANR	8222338	Condition	tmp == 0	1277:20:22643:22650	8218863	0	True				
ANR	8222339	EqualityExpression	tmp == 0		8218863	0		==			
ANR	8222340	Identifier	tmp		8218863	0					
ANR	8222341	PrimaryExpression	0		8218863	1					
ANR	8222342	CompoundStatement		1275:30:22618:22618	8218863	1					
ANR	8222343	GotoStatement	goto do_brcond_high ;	1279:20:22676:22695	8218863	0	True				
ANR	8222344	Identifier	do_brcond_high		8218863	0					
ANR	8222345	ElseStatement	else		8218863	0					
ANR	8222346	IfStatement	if ( tmp == 1 )		8218863	0					
ANR	8222347	Condition	tmp == 1	1281:27:22725:22732	8218863	0	True				
ANR	8222348	EqualityExpression	tmp == 1		8218863	0		==			
ANR	8222349	Identifier	tmp		8218863	0					
ANR	8222350	PrimaryExpression	1		8218863	1					
ANR	8222351	CompoundStatement		1279:37:22700:22700	8218863	1					
ANR	8222352	GotoStatement	goto do_brcond_true ;	1283:20:22758:22777	8218863	0	True				
ANR	8222353	Identifier	do_brcond_true		8218863	0					
ANR	8222354	ExpressionStatement	"tmp = do_constant_folding_cond ( INDEX_op_brcond_i32 , args [ 1 ] , args [ 3 ] , TCG_COND_NE )"	1287:16:22815:22945	8218863	2	True				
ANR	8222355	AssignmentExpression	"tmp = do_constant_folding_cond ( INDEX_op_brcond_i32 , args [ 1 ] , args [ 3 ] , TCG_COND_NE )"		8218863	0		=			
ANR	8222356	Identifier	tmp		8218863	0					
ANR	8222357	CallExpression	"do_constant_folding_cond ( INDEX_op_brcond_i32 , args [ 1 ] , args [ 3 ] , TCG_COND_NE )"		8218863	1					
ANR	8222358	Callee	do_constant_folding_cond		8218863	0					
ANR	8222359	Identifier	do_constant_folding_cond		8218863	0					
ANR	8222360	ArgumentList	INDEX_op_brcond_i32		8218863	1					
ANR	8222361	Argument	INDEX_op_brcond_i32		8218863	0					
ANR	8222362	Identifier	INDEX_op_brcond_i32		8218863	0					
ANR	8222363	Argument	args [ 1 ]		8218863	1					
ANR	8222364	ArrayIndexing	args [ 1 ]		8218863	0					
ANR	8222365	Identifier	args		8218863	0					
ANR	8222366	PrimaryExpression	1		8218863	1					
ANR	8222367	Argument	args [ 3 ]		8218863	2					
ANR	8222368	ArrayIndexing	args [ 3 ]		8218863	0					
ANR	8222369	Identifier	args		8218863	0					
ANR	8222370	PrimaryExpression	3		8218863	1					
ANR	8222371	Argument	TCG_COND_NE		8218863	3					
ANR	8222372	Identifier	TCG_COND_NE		8218863	0					
ANR	8222373	IfStatement	if ( tmp == 0 )		8218863	3					
ANR	8222374	Condition	tmp == 0	1291:20:22968:22975	8218863	0	True				
ANR	8222375	EqualityExpression	tmp == 0		8218863	0		==			
ANR	8222376	Identifier	tmp		8218863	0					
ANR	8222377	PrimaryExpression	0		8218863	1					
ANR	8222378	CompoundStatement		1289:30:22943:22943	8218863	1					
ANR	8222379	GotoStatement	goto do_brcond_low ;	1293:20:23001:23019	8218863	0	True				
ANR	8222380	Identifier	do_brcond_low		8218863	0					
ANR	8222381	ElseStatement	else		8218863	0					
ANR	8222382	IfStatement	if ( tmp == 1 )		8218863	0					
ANR	8222383	Condition	tmp == 1	1295:27:23049:23056	8218863	0	True				
ANR	8222384	EqualityExpression	tmp == 1		8218863	0		==			
ANR	8222385	Identifier	tmp		8218863	0					
ANR	8222386	PrimaryExpression	1		8218863	1					
ANR	8222387	CompoundStatement		1293:37:23024:23024	8218863	1					
ANR	8222388	GotoStatement	goto do_brcond_true ;	1297:20:23082:23101	8218863	0	True				
ANR	8222389	Identifier	do_brcond_true		8218863	0					
ANR	8222390	GotoStatement	goto do_default ;	1301:16:23139:23154	8218863	4	True				
ANR	8222391	Identifier	do_default		8218863	0					
ANR	8222392	ElseStatement	else		8218863	0					
ANR	8222393	CompoundStatement		1301:19:23141:23141	8218863	0					
ANR	8222394	GotoStatement	goto do_default ;	1305:16:23195:23210	8218863	0	True				
ANR	8222395	Identifier	do_default		8218863	0					
ANR	8222396	BreakStatement	break ;	1309:12:23240:23245	8218863	204	True				
ANR	8222397	Label	case INDEX_op_setcond2_i32 :	1313:8:23258:23284	8218863	205	True				
ANR	8222398	Identifier	INDEX_op_setcond2_i32		8218863	0					
ANR	8222399	ExpressionStatement	"tmp = do_constant_folding_cond2 ( & args [ 1 ] , & args [ 3 ] , args [ 5 ] )"	1315:12:23299:23359	8218863	206	True				
ANR	8222400	AssignmentExpression	"tmp = do_constant_folding_cond2 ( & args [ 1 ] , & args [ 3 ] , args [ 5 ] )"		8218863	0		=			
ANR	8222401	Identifier	tmp		8218863	0					
ANR	8222402	CallExpression	"do_constant_folding_cond2 ( & args [ 1 ] , & args [ 3 ] , args [ 5 ] )"		8218863	1					
ANR	8222403	Callee	do_constant_folding_cond2		8218863	0					
ANR	8222404	Identifier	do_constant_folding_cond2		8218863	0					
ANR	8222405	ArgumentList	& args [ 1 ]		8218863	1					
ANR	8222406	Argument	& args [ 1 ]		8218863	0					
ANR	8222407	UnaryOperationExpression	& args [ 1 ]		8218863	0					
ANR	8222408	UnaryOperator	&		8218863	0					
ANR	8222409	ArrayIndexing	args [ 1 ]		8218863	1					
ANR	8222410	Identifier	args		8218863	0					
ANR	8222411	PrimaryExpression	1		8218863	1					
ANR	8222412	Argument	& args [ 3 ]		8218863	1					
ANR	8222413	UnaryOperationExpression	& args [ 3 ]		8218863	0					
ANR	8222414	UnaryOperator	&		8218863	0					
ANR	8222415	ArrayIndexing	args [ 3 ]		8218863	1					
ANR	8222416	Identifier	args		8218863	0					
ANR	8222417	PrimaryExpression	3		8218863	1					
ANR	8222418	Argument	args [ 5 ]		8218863	2					
ANR	8222419	ArrayIndexing	args [ 5 ]		8218863	0					
ANR	8222420	Identifier	args		8218863	0					
ANR	8222421	PrimaryExpression	5		8218863	1					
ANR	8222422	IfStatement	if ( tmp != 2 )		8218863	207					
ANR	8222423	Condition	tmp != 2	1317:16:23378:23385	8218863	0	True				
ANR	8222424	EqualityExpression	tmp != 2		8218863	0		!=			
ANR	8222425	Identifier	tmp		8218863	0					
ANR	8222426	PrimaryExpression	2		8218863	1					
ANR	8222427	CompoundStatement		1315:26:23353:23353	8218863	1					
ANR	8222428	Label	do_setcond_const :	1319:12:23403:23419	8218863	0	True				
ANR	8222429	Identifier	do_setcond_const		8218863	0					
ANR	8222430	ExpressionStatement	"tcg_opt_gen_movi ( s , op , args , args [ 0 ] , tmp )"	1321:16:23438:23481	8218863	1	True				
ANR	8222431	CallExpression	"tcg_opt_gen_movi ( s , op , args , args [ 0 ] , tmp )"		8218863	0					
ANR	8222432	Callee	tcg_opt_gen_movi		8218863	0					
ANR	8222433	Identifier	tcg_opt_gen_movi		8218863	0					
ANR	8222434	ArgumentList	s		8218863	1					
ANR	8222435	Argument	s		8218863	0					
ANR	8222436	Identifier	s		8218863	0					
ANR	8222437	Argument	op		8218863	1					
ANR	8222438	Identifier	op		8218863	0					
ANR	8222439	Argument	args		8218863	2					
ANR	8222440	Identifier	args		8218863	0					
ANR	8222441	Argument	args [ 0 ]		8218863	3					
ANR	8222442	ArrayIndexing	args [ 0 ]		8218863	0					
ANR	8222443	Identifier	args		8218863	0					
ANR	8222444	PrimaryExpression	0		8218863	1					
ANR	8222445	Argument	tmp		8218863	4					
ANR	8222446	Identifier	tmp		8218863	0					
ANR	8222447	ElseStatement	else		8218863	0					
ANR	8222448	IfStatement	if ( ( args [ 5 ] == TCG_COND_LT || args [ 5 ] == TCG_COND_GE ) && temps [ args [ 3 ] ] . state == TCG_TEMP_CONST && temps [ args [ 4 ] ] . state == TCG_TEMP_CONST && temps [ args [ 3 ] ] . val == 0 && temps [ args [ 4 ] ] . val == 0 )		8218863	0					
ANR	8222449	Condition	( args [ 5 ] == TCG_COND_LT || args [ 5 ] == TCG_COND_GE ) && temps [ args [ 3 ] ] . state == TCG_TEMP_CONST && temps [ args [ 4 ] ] . state == TCG_TEMP_CONST && temps [ args [ 3 ] ] . val == 0 && temps [ args [ 4 ] ] . val == 0	1323:23:23507:23790	8218863	0	True				
ANR	8222450	AndExpression	( args [ 5 ] == TCG_COND_LT || args [ 5 ] == TCG_COND_GE ) && temps [ args [ 3 ] ] . state == TCG_TEMP_CONST && temps [ args [ 4 ] ] . state == TCG_TEMP_CONST && temps [ args [ 3 ] ] . val == 0 && temps [ args [ 4 ] ] . val == 0		8218863	0		&&			
ANR	8222451	OrExpression	args [ 5 ] == TCG_COND_LT || args [ 5 ] == TCG_COND_GE		8218863	0		||			
ANR	8222452	EqualityExpression	args [ 5 ] == TCG_COND_LT		8218863	0		==			
ANR	8222453	ArrayIndexing	args [ 5 ]		8218863	0					
ANR	8222454	Identifier	args		8218863	0					
ANR	8222455	PrimaryExpression	5		8218863	1					
ANR	8222456	Identifier	TCG_COND_LT		8218863	1					
ANR	8222457	EqualityExpression	args [ 5 ] == TCG_COND_GE		8218863	1		==			
ANR	8222458	ArrayIndexing	args [ 5 ]		8218863	0					
ANR	8222459	Identifier	args		8218863	0					
ANR	8222460	PrimaryExpression	5		8218863	1					
ANR	8222461	Identifier	TCG_COND_GE		8218863	1					
ANR	8222462	AndExpression	temps [ args [ 3 ] ] . state == TCG_TEMP_CONST && temps [ args [ 4 ] ] . state == TCG_TEMP_CONST && temps [ args [ 3 ] ] . val == 0 && temps [ args [ 4 ] ] . val == 0		8218863	1		&&			
ANR	8222463	EqualityExpression	temps [ args [ 3 ] ] . state == TCG_TEMP_CONST		8218863	0		==			
ANR	8222464	MemberAccess	temps [ args [ 3 ] ] . state		8218863	0					
ANR	8222465	ArrayIndexing	temps [ args [ 3 ] ]		8218863	0					
ANR	8222466	Identifier	temps		8218863	0					
ANR	8222467	ArrayIndexing	args [ 3 ]		8218863	1					
ANR	8222468	Identifier	args		8218863	0					
ANR	8222469	PrimaryExpression	3		8218863	1					
ANR	8222470	Identifier	state		8218863	1					
ANR	8222471	Identifier	TCG_TEMP_CONST		8218863	1					
ANR	8222472	AndExpression	temps [ args [ 4 ] ] . state == TCG_TEMP_CONST && temps [ args [ 3 ] ] . val == 0 && temps [ args [ 4 ] ] . val == 0		8218863	1		&&			
ANR	8222473	EqualityExpression	temps [ args [ 4 ] ] . state == TCG_TEMP_CONST		8218863	0		==			
ANR	8222474	MemberAccess	temps [ args [ 4 ] ] . state		8218863	0					
ANR	8222475	ArrayIndexing	temps [ args [ 4 ] ]		8218863	0					
ANR	8222476	Identifier	temps		8218863	0					
ANR	8222477	ArrayIndexing	args [ 4 ]		8218863	1					
ANR	8222478	Identifier	args		8218863	0					
ANR	8222479	PrimaryExpression	4		8218863	1					
ANR	8222480	Identifier	state		8218863	1					
ANR	8222481	Identifier	TCG_TEMP_CONST		8218863	1					
ANR	8222482	AndExpression	temps [ args [ 3 ] ] . val == 0 && temps [ args [ 4 ] ] . val == 0		8218863	1		&&			
ANR	8222483	EqualityExpression	temps [ args [ 3 ] ] . val == 0		8218863	0		==			
ANR	8222484	MemberAccess	temps [ args [ 3 ] ] . val		8218863	0					
ANR	8222485	ArrayIndexing	temps [ args [ 3 ] ]		8218863	0					
ANR	8222486	Identifier	temps		8218863	0					
ANR	8222487	ArrayIndexing	args [ 3 ]		8218863	1					
ANR	8222488	Identifier	args		8218863	0					
ANR	8222489	PrimaryExpression	3		8218863	1					
ANR	8222490	Identifier	val		8218863	1					
ANR	8222491	PrimaryExpression	0		8218863	1					
ANR	8222492	EqualityExpression	temps [ args [ 4 ] ] . val == 0		8218863	1		==			
ANR	8222493	MemberAccess	temps [ args [ 4 ] ] . val		8218863	0					
ANR	8222494	ArrayIndexing	temps [ args [ 4 ] ]		8218863	0					
ANR	8222495	Identifier	temps		8218863	0					
ANR	8222496	ArrayIndexing	args [ 4 ]		8218863	1					
ANR	8222497	Identifier	args		8218863	0					
ANR	8222498	PrimaryExpression	4		8218863	1					
ANR	8222499	Identifier	val		8218863	1					
ANR	8222500	PrimaryExpression	0		8218863	1					
ANR	8222501	CompoundStatement		1329:51:23758:23758	8218863	1					
ANR	8222502	Label	do_setcond_high :	1337:12:23938:23953	8218863	0	True				
ANR	8222503	Identifier	do_setcond_high		8218863	0					
ANR	8222504	ExpressionStatement	reset_temp ( args [ 0 ] )	1339:16:23972:23991	8218863	1	True				
ANR	8222505	CallExpression	reset_temp ( args [ 0 ] )		8218863	0					
ANR	8222506	Callee	reset_temp		8218863	0					
ANR	8222507	Identifier	reset_temp		8218863	0					
ANR	8222508	ArgumentList	args [ 0 ]		8218863	1					
ANR	8222509	Argument	args [ 0 ]		8218863	0					
ANR	8222510	ArrayIndexing	args [ 0 ]		8218863	0					
ANR	8222511	Identifier	args		8218863	0					
ANR	8222512	PrimaryExpression	0		8218863	1					
ANR	8222513	ExpressionStatement	temps [ args [ 0 ] ] . mask = 1	1341:16:24010:24033	8218863	2	True				
ANR	8222514	AssignmentExpression	temps [ args [ 0 ] ] . mask = 1		8218863	0		=			
ANR	8222515	MemberAccess	temps [ args [ 0 ] ] . mask		8218863	0					
ANR	8222516	ArrayIndexing	temps [ args [ 0 ] ]		8218863	0					
ANR	8222517	Identifier	temps		8218863	0					
ANR	8222518	ArrayIndexing	args [ 0 ]		8218863	1					
ANR	8222519	Identifier	args		8218863	0					
ANR	8222520	PrimaryExpression	0		8218863	1					
ANR	8222521	Identifier	mask		8218863	1					
ANR	8222522	PrimaryExpression	1		8218863	1					
ANR	8222523	ExpressionStatement	op -> opc = INDEX_op_setcond_i32	1343:16:24052:24082	8218863	3	True				
ANR	8222524	AssignmentExpression	op -> opc = INDEX_op_setcond_i32		8218863	0		=			
ANR	8222525	PtrMemberAccess	op -> opc		8218863	0					
ANR	8222526	Identifier	op		8218863	0					
ANR	8222527	Identifier	opc		8218863	1					
ANR	8222528	Identifier	INDEX_op_setcond_i32		8218863	1					
ANR	8222529	ExpressionStatement	args [ 1 ] = args [ 2 ]	1345:16:24101:24118	8218863	4	True				
ANR	8222530	AssignmentExpression	args [ 1 ] = args [ 2 ]		8218863	0		=			
ANR	8222531	ArrayIndexing	args [ 1 ]		8218863	0					
ANR	8222532	Identifier	args		8218863	0					
ANR	8222533	PrimaryExpression	1		8218863	1					
ANR	8222534	ArrayIndexing	args [ 2 ]		8218863	1					
ANR	8222535	Identifier	args		8218863	0					
ANR	8222536	PrimaryExpression	2		8218863	1					
ANR	8222537	ExpressionStatement	args [ 2 ] = args [ 4 ]	1347:16:24137:24154	8218863	5	True				
ANR	8222538	AssignmentExpression	args [ 2 ] = args [ 4 ]		8218863	0		=			
ANR	8222539	ArrayIndexing	args [ 2 ]		8218863	0					
ANR	8222540	Identifier	args		8218863	0					
ANR	8222541	PrimaryExpression	2		8218863	1					
ANR	8222542	ArrayIndexing	args [ 4 ]		8218863	1					
ANR	8222543	Identifier	args		8218863	0					
ANR	8222544	PrimaryExpression	4		8218863	1					
ANR	8222545	ExpressionStatement	args [ 3 ] = args [ 5 ]	1349:16:24173:24190	8218863	6	True				
ANR	8222546	AssignmentExpression	args [ 3 ] = args [ 5 ]		8218863	0		=			
ANR	8222547	ArrayIndexing	args [ 3 ]		8218863	0					
ANR	8222548	Identifier	args		8218863	0					
ANR	8222549	PrimaryExpression	3		8218863	1					
ANR	8222550	ArrayIndexing	args [ 5 ]		8218863	1					
ANR	8222551	Identifier	args		8218863	0					
ANR	8222552	PrimaryExpression	5		8218863	1					
ANR	8222553	ElseStatement	else		8218863	0					
ANR	8222554	IfStatement	if ( args [ 5 ] == TCG_COND_EQ )		8218863	0					
ANR	8222555	Condition	args [ 5 ] == TCG_COND_EQ	1351:23:24216:24237	8218863	0	True				
ANR	8222556	EqualityExpression	args [ 5 ] == TCG_COND_EQ		8218863	0		==			
ANR	8222557	ArrayIndexing	args [ 5 ]		8218863	0					
ANR	8222558	Identifier	args		8218863	0					
ANR	8222559	PrimaryExpression	5		8218863	1					
ANR	8222560	Identifier	TCG_COND_EQ		8218863	1					
ANR	8222561	CompoundStatement		1349:47:24205:24205	8218863	1					
ANR	8222562	ExpressionStatement	"tmp = do_constant_folding_cond ( INDEX_op_setcond_i32 , args [ 1 ] , args [ 3 ] , TCG_COND_EQ )"	1357:16:24369:24500	8218863	0	True				
ANR	8222563	AssignmentExpression	"tmp = do_constant_folding_cond ( INDEX_op_setcond_i32 , args [ 1 ] , args [ 3 ] , TCG_COND_EQ )"		8218863	0		=			
ANR	8222564	Identifier	tmp		8218863	0					
ANR	8222565	CallExpression	"do_constant_folding_cond ( INDEX_op_setcond_i32 , args [ 1 ] , args [ 3 ] , TCG_COND_EQ )"		8218863	1					
ANR	8222566	Callee	do_constant_folding_cond		8218863	0					
ANR	8222567	Identifier	do_constant_folding_cond		8218863	0					
ANR	8222568	ArgumentList	INDEX_op_setcond_i32		8218863	1					
ANR	8222569	Argument	INDEX_op_setcond_i32		8218863	0					
ANR	8222570	Identifier	INDEX_op_setcond_i32		8218863	0					
ANR	8222571	Argument	args [ 1 ]		8218863	1					
ANR	8222572	ArrayIndexing	args [ 1 ]		8218863	0					
ANR	8222573	Identifier	args		8218863	0					
ANR	8222574	PrimaryExpression	1		8218863	1					
ANR	8222575	Argument	args [ 3 ]		8218863	2					
ANR	8222576	ArrayIndexing	args [ 3 ]		8218863	0					
ANR	8222577	Identifier	args		8218863	0					
ANR	8222578	PrimaryExpression	3		8218863	1					
ANR	8222579	Argument	TCG_COND_EQ		8218863	3					
ANR	8222580	Identifier	TCG_COND_EQ		8218863	0					
ANR	8222581	IfStatement	if ( tmp == 0 )		8218863	1					
ANR	8222582	Condition	tmp == 0	1361:20:24523:24530	8218863	0	True				
ANR	8222583	EqualityExpression	tmp == 0		8218863	0		==			
ANR	8222584	Identifier	tmp		8218863	0					
ANR	8222585	PrimaryExpression	0		8218863	1					
ANR	8222586	CompoundStatement		1359:30:24498:24498	8218863	1					
ANR	8222587	GotoStatement	goto do_setcond_const ;	1363:20:24556:24577	8218863	0	True				
ANR	8222588	Identifier	do_setcond_const		8218863	0					
ANR	8222589	ElseStatement	else		8218863	0					
ANR	8222590	IfStatement	if ( tmp == 1 )		8218863	0					
ANR	8222591	Condition	tmp == 1	1365:27:24607:24614	8218863	0	True				
ANR	8222592	EqualityExpression	tmp == 1		8218863	0		==			
ANR	8222593	Identifier	tmp		8218863	0					
ANR	8222594	PrimaryExpression	1		8218863	1					
ANR	8222595	CompoundStatement		1363:37:24582:24582	8218863	1					
ANR	8222596	GotoStatement	goto do_setcond_high ;	1367:20:24640:24660	8218863	0	True				
ANR	8222597	Identifier	do_setcond_high		8218863	0					
ANR	8222598	ExpressionStatement	"tmp = do_constant_folding_cond ( INDEX_op_setcond_i32 , args [ 2 ] , args [ 4 ] , TCG_COND_EQ )"	1371:16:24698:24829	8218863	2	True				
ANR	8222599	AssignmentExpression	"tmp = do_constant_folding_cond ( INDEX_op_setcond_i32 , args [ 2 ] , args [ 4 ] , TCG_COND_EQ )"		8218863	0		=			
ANR	8222600	Identifier	tmp		8218863	0					
ANR	8222601	CallExpression	"do_constant_folding_cond ( INDEX_op_setcond_i32 , args [ 2 ] , args [ 4 ] , TCG_COND_EQ )"		8218863	1					
ANR	8222602	Callee	do_constant_folding_cond		8218863	0					
ANR	8222603	Identifier	do_constant_folding_cond		8218863	0					
ANR	8222604	ArgumentList	INDEX_op_setcond_i32		8218863	1					
ANR	8222605	Argument	INDEX_op_setcond_i32		8218863	0					
ANR	8222606	Identifier	INDEX_op_setcond_i32		8218863	0					
ANR	8222607	Argument	args [ 2 ]		8218863	1					
ANR	8222608	ArrayIndexing	args [ 2 ]		8218863	0					
ANR	8222609	Identifier	args		8218863	0					
ANR	8222610	PrimaryExpression	2		8218863	1					
ANR	8222611	Argument	args [ 4 ]		8218863	2					
ANR	8222612	ArrayIndexing	args [ 4 ]		8218863	0					
ANR	8222613	Identifier	args		8218863	0					
ANR	8222614	PrimaryExpression	4		8218863	1					
ANR	8222615	Argument	TCG_COND_EQ		8218863	3					
ANR	8222616	Identifier	TCG_COND_EQ		8218863	0					
ANR	8222617	IfStatement	if ( tmp == 0 )		8218863	3					
ANR	8222618	Condition	tmp == 0	1375:20:24852:24859	8218863	0	True				
ANR	8222619	EqualityExpression	tmp == 0		8218863	0		==			
ANR	8222620	Identifier	tmp		8218863	0					
ANR	8222621	PrimaryExpression	0		8218863	1					
ANR	8222622	CompoundStatement		1373:30:24827:24827	8218863	1					
ANR	8222623	GotoStatement	goto do_setcond_high ;	1377:20:24885:24905	8218863	0	True				
ANR	8222624	Identifier	do_setcond_high		8218863	0					
ANR	8222625	ElseStatement	else		8218863	0					
ANR	8222626	IfStatement	if ( tmp != 1 )		8218863	0					
ANR	8222627	Condition	tmp != 1	1379:27:24935:24942	8218863	0	True				
ANR	8222628	EqualityExpression	tmp != 1		8218863	0		!=			
ANR	8222629	Identifier	tmp		8218863	0					
ANR	8222630	PrimaryExpression	1		8218863	1					
ANR	8222631	CompoundStatement		1377:37:24910:24910	8218863	1					
ANR	8222632	GotoStatement	goto do_default ;	1381:20:24968:24983	8218863	0	True				
ANR	8222633	Identifier	do_default		8218863	0					
ANR	8222634	Label	do_setcond_low :	1385:12:25017:25031	8218863	4	True				
ANR	8222635	Identifier	do_setcond_low		8218863	0					
ANR	8222636	ExpressionStatement	reset_temp ( args [ 0 ] )	1387:16:25050:25069	8218863	5	True				
ANR	8222637	CallExpression	reset_temp ( args [ 0 ] )		8218863	0					
ANR	8222638	Callee	reset_temp		8218863	0					
ANR	8222639	Identifier	reset_temp		8218863	0					
ANR	8222640	ArgumentList	args [ 0 ]		8218863	1					
ANR	8222641	Argument	args [ 0 ]		8218863	0					
ANR	8222642	ArrayIndexing	args [ 0 ]		8218863	0					
ANR	8222643	Identifier	args		8218863	0					
ANR	8222644	PrimaryExpression	0		8218863	1					
ANR	8222645	ExpressionStatement	temps [ args [ 0 ] ] . mask = 1	1389:16:25088:25111	8218863	6	True				
ANR	8222646	AssignmentExpression	temps [ args [ 0 ] ] . mask = 1		8218863	0		=			
ANR	8222647	MemberAccess	temps [ args [ 0 ] ] . mask		8218863	0					
ANR	8222648	ArrayIndexing	temps [ args [ 0 ] ]		8218863	0					
ANR	8222649	Identifier	temps		8218863	0					
ANR	8222650	ArrayIndexing	args [ 0 ]		8218863	1					
ANR	8222651	Identifier	args		8218863	0					
ANR	8222652	PrimaryExpression	0		8218863	1					
ANR	8222653	Identifier	mask		8218863	1					
ANR	8222654	PrimaryExpression	1		8218863	1					
ANR	8222655	ExpressionStatement	op -> opc = INDEX_op_setcond_i32	1391:16:25130:25160	8218863	7	True				
ANR	8222656	AssignmentExpression	op -> opc = INDEX_op_setcond_i32		8218863	0		=			
ANR	8222657	PtrMemberAccess	op -> opc		8218863	0					
ANR	8222658	Identifier	op		8218863	0					
ANR	8222659	Identifier	opc		8218863	1					
ANR	8222660	Identifier	INDEX_op_setcond_i32		8218863	1					
ANR	8222661	ExpressionStatement	args [ 2 ] = args [ 3 ]	1393:16:25179:25196	8218863	8	True				
ANR	8222662	AssignmentExpression	args [ 2 ] = args [ 3 ]		8218863	0		=			
ANR	8222663	ArrayIndexing	args [ 2 ]		8218863	0					
ANR	8222664	Identifier	args		8218863	0					
ANR	8222665	PrimaryExpression	2		8218863	1					
ANR	8222666	ArrayIndexing	args [ 3 ]		8218863	1					
ANR	8222667	Identifier	args		8218863	0					
ANR	8222668	PrimaryExpression	3		8218863	1					
ANR	8222669	ExpressionStatement	args [ 3 ] = args [ 5 ]	1395:16:25215:25232	8218863	9	True				
ANR	8222670	AssignmentExpression	args [ 3 ] = args [ 5 ]		8218863	0		=			
ANR	8222671	ArrayIndexing	args [ 3 ]		8218863	0					
ANR	8222672	Identifier	args		8218863	0					
ANR	8222673	PrimaryExpression	3		8218863	1					
ANR	8222674	ArrayIndexing	args [ 5 ]		8218863	1					
ANR	8222675	Identifier	args		8218863	0					
ANR	8222676	PrimaryExpression	5		8218863	1					
ANR	8222677	ElseStatement	else		8218863	0					
ANR	8222678	IfStatement	if ( args [ 5 ] == TCG_COND_NE )		8218863	0					
ANR	8222679	Condition	args [ 5 ] == TCG_COND_NE	1397:23:25258:25279	8218863	0	True				
ANR	8222680	EqualityExpression	args [ 5 ] == TCG_COND_NE		8218863	0		==			
ANR	8222681	ArrayIndexing	args [ 5 ]		8218863	0					
ANR	8222682	Identifier	args		8218863	0					
ANR	8222683	PrimaryExpression	5		8218863	1					
ANR	8222684	Identifier	TCG_COND_NE		8218863	1					
ANR	8222685	CompoundStatement		1395:47:25247:25247	8218863	1					
ANR	8222686	ExpressionStatement	"tmp = do_constant_folding_cond ( INDEX_op_setcond_i32 , args [ 1 ] , args [ 3 ] , TCG_COND_NE )"	1403:16:25411:25542	8218863	0	True				
ANR	8222687	AssignmentExpression	"tmp = do_constant_folding_cond ( INDEX_op_setcond_i32 , args [ 1 ] , args [ 3 ] , TCG_COND_NE )"		8218863	0		=			
ANR	8222688	Identifier	tmp		8218863	0					
ANR	8222689	CallExpression	"do_constant_folding_cond ( INDEX_op_setcond_i32 , args [ 1 ] , args [ 3 ] , TCG_COND_NE )"		8218863	1					
ANR	8222690	Callee	do_constant_folding_cond		8218863	0					
ANR	8222691	Identifier	do_constant_folding_cond		8218863	0					
ANR	8222692	ArgumentList	INDEX_op_setcond_i32		8218863	1					
ANR	8222693	Argument	INDEX_op_setcond_i32		8218863	0					
ANR	8222694	Identifier	INDEX_op_setcond_i32		8218863	0					
ANR	8222695	Argument	args [ 1 ]		8218863	1					
ANR	8222696	ArrayIndexing	args [ 1 ]		8218863	0					
ANR	8222697	Identifier	args		8218863	0					
ANR	8222698	PrimaryExpression	1		8218863	1					
ANR	8222699	Argument	args [ 3 ]		8218863	2					
ANR	8222700	ArrayIndexing	args [ 3 ]		8218863	0					
ANR	8222701	Identifier	args		8218863	0					
ANR	8222702	PrimaryExpression	3		8218863	1					
ANR	8222703	Argument	TCG_COND_NE		8218863	3					
ANR	8222704	Identifier	TCG_COND_NE		8218863	0					
ANR	8222705	IfStatement	if ( tmp == 0 )		8218863	1					
ANR	8222706	Condition	tmp == 0	1407:20:25565:25572	8218863	0	True				
ANR	8222707	EqualityExpression	tmp == 0		8218863	0		==			
ANR	8222708	Identifier	tmp		8218863	0					
ANR	8222709	PrimaryExpression	0		8218863	1					
ANR	8222710	CompoundStatement		1405:30:25540:25540	8218863	1					
ANR	8222711	GotoStatement	goto do_setcond_high ;	1409:20:25598:25618	8218863	0	True				
ANR	8222712	Identifier	do_setcond_high		8218863	0					
ANR	8222713	ElseStatement	else		8218863	0					
ANR	8222714	IfStatement	if ( tmp == 1 )		8218863	0					
ANR	8222715	Condition	tmp == 1	1411:27:25648:25655	8218863	0	True				
ANR	8222716	EqualityExpression	tmp == 1		8218863	0		==			
ANR	8222717	Identifier	tmp		8218863	0					
ANR	8222718	PrimaryExpression	1		8218863	1					
ANR	8222719	CompoundStatement		1409:37:25623:25623	8218863	1					
ANR	8222720	GotoStatement	goto do_setcond_const ;	1413:20:25681:25702	8218863	0	True				
ANR	8222721	Identifier	do_setcond_const		8218863	0					
ANR	8222722	ExpressionStatement	"tmp = do_constant_folding_cond ( INDEX_op_setcond_i32 , args [ 2 ] , args [ 4 ] , TCG_COND_NE )"	1417:16:25740:25871	8218863	2	True				
ANR	8222723	AssignmentExpression	"tmp = do_constant_folding_cond ( INDEX_op_setcond_i32 , args [ 2 ] , args [ 4 ] , TCG_COND_NE )"		8218863	0		=			
ANR	8222724	Identifier	tmp		8218863	0					
ANR	8222725	CallExpression	"do_constant_folding_cond ( INDEX_op_setcond_i32 , args [ 2 ] , args [ 4 ] , TCG_COND_NE )"		8218863	1					
ANR	8222726	Callee	do_constant_folding_cond		8218863	0					
ANR	8222727	Identifier	do_constant_folding_cond		8218863	0					
ANR	8222728	ArgumentList	INDEX_op_setcond_i32		8218863	1					
ANR	8222729	Argument	INDEX_op_setcond_i32		8218863	0					
ANR	8222730	Identifier	INDEX_op_setcond_i32		8218863	0					
ANR	8222731	Argument	args [ 2 ]		8218863	1					
ANR	8222732	ArrayIndexing	args [ 2 ]		8218863	0					
ANR	8222733	Identifier	args		8218863	0					
ANR	8222734	PrimaryExpression	2		8218863	1					
ANR	8222735	Argument	args [ 4 ]		8218863	2					
ANR	8222736	ArrayIndexing	args [ 4 ]		8218863	0					
ANR	8222737	Identifier	args		8218863	0					
ANR	8222738	PrimaryExpression	4		8218863	1					
ANR	8222739	Argument	TCG_COND_NE		8218863	3					
ANR	8222740	Identifier	TCG_COND_NE		8218863	0					
ANR	8222741	IfStatement	if ( tmp == 0 )		8218863	3					
ANR	8222742	Condition	tmp == 0	1421:20:25894:25901	8218863	0	True				
ANR	8222743	EqualityExpression	tmp == 0		8218863	0		==			
ANR	8222744	Identifier	tmp		8218863	0					
ANR	8222745	PrimaryExpression	0		8218863	1					
ANR	8222746	CompoundStatement		1419:30:25869:25869	8218863	1					
ANR	8222747	GotoStatement	goto do_setcond_low ;	1423:20:25927:25946	8218863	0	True				
ANR	8222748	Identifier	do_setcond_low		8218863	0					
ANR	8222749	ElseStatement	else		8218863	0					
ANR	8222750	IfStatement	if ( tmp == 1 )		8218863	0					
ANR	8222751	Condition	tmp == 1	1425:27:25976:25983	8218863	0	True				
ANR	8222752	EqualityExpression	tmp == 1		8218863	0		==			
ANR	8222753	Identifier	tmp		8218863	0					
ANR	8222754	PrimaryExpression	1		8218863	1					
ANR	8222755	CompoundStatement		1423:37:25951:25951	8218863	1					
ANR	8222756	GotoStatement	goto do_setcond_const ;	1427:20:26009:26030	8218863	0	True				
ANR	8222757	Identifier	do_setcond_const		8218863	0					
ANR	8222758	GotoStatement	goto do_default ;	1431:16:26068:26083	8218863	4	True				
ANR	8222759	Identifier	do_default		8218863	0					
ANR	8222760	ElseStatement	else		8218863	0					
ANR	8222761	CompoundStatement		1431:19:26070:26070	8218863	0					
ANR	8222762	GotoStatement	goto do_default ;	1435:16:26124:26139	8218863	0	True				
ANR	8222763	Identifier	do_default		8218863	0					
ANR	8222764	BreakStatement	break ;	1439:12:26169:26174	8218863	208	True				
ANR	8222765	Label	case INDEX_op_call :	1443:8:26187:26205	8218863	209	True				
ANR	8222766	Identifier	INDEX_op_call		8218863	0					
ANR	8222767	IfStatement	if ( ! ( args [ nb_oargs + nb_iargs + 1 ] & ( TCG_CALL_NO_READ_GLOBALS | TCG_CALL_NO_WRITE_GLOBALS ) ) )		8218863	210					
ANR	8222768	Condition	! ( args [ nb_oargs + nb_iargs + 1 ] & ( TCG_CALL_NO_READ_GLOBALS | TCG_CALL_NO_WRITE_GLOBALS ) )	1445:16:26224:26331	8218863	0	True				
ANR	8222769	UnaryOperationExpression	! ( args [ nb_oargs + nb_iargs + 1 ] & ( TCG_CALL_NO_READ_GLOBALS | TCG_CALL_NO_WRITE_GLOBALS ) )		8218863	0					
ANR	8222770	UnaryOperator	!		8218863	0					
ANR	8222771	BitAndExpression	args [ nb_oargs + nb_iargs + 1 ] & ( TCG_CALL_NO_READ_GLOBALS | TCG_CALL_NO_WRITE_GLOBALS )		8218863	1		&			
ANR	8222772	ArrayIndexing	args [ nb_oargs + nb_iargs + 1 ]		8218863	0					
ANR	8222773	Identifier	args		8218863	0					
ANR	8222774	AdditiveExpression	nb_oargs + nb_iargs + 1		8218863	1		+			
ANR	8222775	Identifier	nb_oargs		8218863	0					
ANR	8222776	AdditiveExpression	nb_iargs + 1		8218863	1		+			
ANR	8222777	Identifier	nb_iargs		8218863	0					
ANR	8222778	PrimaryExpression	1		8218863	1					
ANR	8222779	InclusiveOrExpression	TCG_CALL_NO_READ_GLOBALS | TCG_CALL_NO_WRITE_GLOBALS		8218863	1		|			
ANR	8222780	Identifier	TCG_CALL_NO_READ_GLOBALS		8218863	0					
ANR	8222781	Identifier	TCG_CALL_NO_WRITE_GLOBALS		8218863	1					
ANR	8222782	CompoundStatement		1445:77:26299:26299	8218863	1					
ANR	8222783	ForStatement	for ( i = 0 ; i < nb_globals ; i ++ )		8218863	0					
ANR	8222784	ForInit	i = 0 ;	1449:21:26358:26363	8218863	0	True				
ANR	8222785	AssignmentExpression	i = 0		8218863	0		=			
ANR	8222786	Identifier	i		8218863	0					
ANR	8222787	PrimaryExpression	0		8218863	1					
ANR	8222788	Condition	i < nb_globals	1449:28:26365:26378	8218863	1	True				
ANR	8222789	RelationalExpression	i < nb_globals		8218863	0		<			
ANR	8222790	Identifier	i		8218863	0					
ANR	8222791	Identifier	nb_globals		8218863	1					
ANR	8222792	PostIncDecOperationExpression	i ++	1449:44:26381:26383	8218863	2	True				
ANR	8222793	Identifier	i		8218863	0					
ANR	8222794	IncDec	++		8218863	1					
ANR	8222795	CompoundStatement		1447:49:26351:26351	8218863	3					
ANR	8222796	ExpressionStatement	reset_temp ( i )	1451:20:26409:26422	8218863	0	True				
ANR	8222797	CallExpression	reset_temp ( i )		8218863	0					
ANR	8222798	Callee	reset_temp		8218863	0					
ANR	8222799	Identifier	reset_temp		8218863	0					
ANR	8222800	ArgumentList	i		8218863	1					
ANR	8222801	Argument	i		8218863	0					
ANR	8222802	Identifier	i		8218863	0					
ANR	8222803	GotoStatement	goto do_reset_output ;	1457:12:26471:26491	8218863	211	True				
ANR	8222804	Identifier	do_reset_output		8218863	0					
ANR	8222805	Label	default :	1461:8:26504:26511	8218863	212	True				
ANR	8222806	Identifier	default		8218863	0					
ANR	8222807	Label	do_default :	1463:8:26522:26532	8218863	213	True				
ANR	8222808	Identifier	do_default		8218863	0					
ANR	8222809	IfStatement	if ( def -> flags & TCG_OPF_BB_END )		8218863	214					
ANR	8222810	Condition	def -> flags & TCG_OPF_BB_END	1475:16:26924:26950	8218863	0	True				
ANR	8222811	BitAndExpression	def -> flags & TCG_OPF_BB_END		8218863	0		&			
ANR	8222812	PtrMemberAccess	def -> flags		8218863	0					
ANR	8222813	Identifier	def		8218863	0					
ANR	8222814	Identifier	flags		8218863	1					
ANR	8222815	Identifier	TCG_OPF_BB_END		8218863	1					
ANR	8222816	CompoundStatement		1473:45:26918:26918	8218863	1					
ANR	8222817	ExpressionStatement	reset_all_temps ( nb_temps )	1477:16:26972:26997	8218863	0	True				
ANR	8222818	CallExpression	reset_all_temps ( nb_temps )		8218863	0					
ANR	8222819	Callee	reset_all_temps		8218863	0					
ANR	8222820	Identifier	reset_all_temps		8218863	0					
ANR	8222821	ArgumentList	nb_temps		8218863	1					
ANR	8222822	Argument	nb_temps		8218863	0					
ANR	8222823	Identifier	nb_temps		8218863	0					
ANR	8222824	ElseStatement	else		8218863	0					
ANR	8222825	CompoundStatement		1477:19:26984:26984	8218863	0					
ANR	8222826	Label	do_reset_output :	1481:8:27030:27045	8218863	0	True				
ANR	8222827	Identifier	do_reset_output		8218863	0					
ANR	8222828	ForStatement	for ( i = 0 ; i < nb_oargs ; i ++ )		8218863	1					
ANR	8222829	ForInit	i = 0 ;	1483:21:27069:27074	8218863	0	True				
ANR	8222830	AssignmentExpression	i = 0		8218863	0		=			
ANR	8222831	Identifier	i		8218863	0					
ANR	8222832	PrimaryExpression	0		8218863	1					
ANR	8222833	Condition	i < nb_oargs	1483:28:27076:27087	8218863	1	True				
ANR	8222834	RelationalExpression	i < nb_oargs		8218863	0		<			
ANR	8222835	Identifier	i		8218863	0					
ANR	8222836	Identifier	nb_oargs		8218863	1					
ANR	8222837	PostIncDecOperationExpression	i ++	1483:42:27090:27092	8218863	2	True				
ANR	8222838	Identifier	i		8218863	0					
ANR	8222839	IncDec	++		8218863	1					
ANR	8222840	CompoundStatement		1481:47:27060:27060	8218863	3					
ANR	8222841	ExpressionStatement	reset_temp ( args [ i ] )	1485:20:27118:27137	8218863	0	True				
ANR	8222842	CallExpression	reset_temp ( args [ i ] )		8218863	0					
ANR	8222843	Callee	reset_temp		8218863	0					
ANR	8222844	Identifier	reset_temp		8218863	0					
ANR	8222845	ArgumentList	args [ i ]		8218863	1					
ANR	8222846	Argument	args [ i ]		8218863	0					
ANR	8222847	ArrayIndexing	args [ i ]		8218863	0					
ANR	8222848	Identifier	args		8218863	0					
ANR	8222849	Identifier	i		8218863	1					
ANR	8222850	IfStatement	if ( i == 0 )		8218863	1					
ANR	8222851	Condition	i == 0	1491:24:27318:27323	8218863	0	True				
ANR	8222852	EqualityExpression	i == 0		8218863	0		==			
ANR	8222853	Identifier	i		8218863	0					
ANR	8222854	PrimaryExpression	0		8218863	1					
ANR	8222855	CompoundStatement		1489:32:27291:27291	8218863	1					
ANR	8222856	ExpressionStatement	temps [ args [ i ] ] . mask = mask	1493:24:27353:27379	8218863	0	True				
ANR	8222857	AssignmentExpression	temps [ args [ i ] ] . mask = mask		8218863	0		=			
ANR	8222858	MemberAccess	temps [ args [ i ] ] . mask		8218863	0					
ANR	8222859	ArrayIndexing	temps [ args [ i ] ]		8218863	0					
ANR	8222860	Identifier	temps		8218863	0					
ANR	8222861	ArrayIndexing	args [ i ]		8218863	1					
ANR	8222862	Identifier	args		8218863	0					
ANR	8222863	Identifier	i		8218863	1					
ANR	8222864	Identifier	mask		8218863	1					
ANR	8222865	Identifier	mask		8218863	1					
ANR	8222866	BreakStatement	break ;	1501:12:27451:27456	8218863	215	True				
ANR	8222867	ReturnType	void		8218863	1					
ANR	8222868	Identifier	tcg_optimize		8218863	2					
ANR	8222869	ParameterList	TCGContext * s		8218863	3					
ANR	8222870	Parameter	TCGContext * s	1:18:18:30	8218863	0	True				
ANR	8222871	ParameterType	TCGContext *		8218863	0					
ANR	8222872	Identifier	s		8218863	1					
ANR	8222873	CFGEntryNode	ENTRY		8218863		True				
ANR	8222874	CFGExitNode	EXIT		8218863		True				
ANR	8222875	Symbol	def -> nb_oargs		8218863						
ANR	8222876	Symbol	find_better_copy		8218863						
ANR	8222877	Symbol	temps [ args [ 1 ] ] . mask		8218863						
ANR	8222878	Symbol	def		8218863						
ANR	8222879	Symbol	TCG_TARGET_HAS_not_i64		8218863						
ANR	8222880	Symbol	TCG_TARGET_HAS_neg_i64		8218863						
ANR	8222881	Symbol	mop		8218863						
ANR	8222882	Symbol	INDEX_op_not_i64		8218863						
ANR	8222883	Symbol	INDEX_op_neg_i64		8218863						
ANR	8222884	Symbol	temps [ args [ 3 ] ] . val		8218863						
ANR	8222885	Symbol	tmp		8218863						
ANR	8222886	Symbol	INDEX_op_call		8218863						
ANR	8222887	Symbol	s -> nb_temps		8218863						
ANR	8222888	Symbol	* op2		8218863						
ANR	8222889	Symbol	temps [ args [ 4 ] ] . mask		8218863						
ANR	8222890	Symbol	def -> flags		8218863						
ANR	8222891	Symbol	* nb_iargs		8218863						
ANR	8222892	Symbol	tcg_swap_cond		8218863						
ANR	8222893	Symbol	s -> gen_opparam_buf		8218863						
ANR	8222894	Symbol	TCG_COND_NE		8218863						
ANR	8222895	Symbol	do_constant_folding_cond2		8218863						
ANR	8222896	Symbol	swap_commutative2		8218863						
ANR	8222897	Symbol	ah		8218863						
ANR	8222898	Symbol	al		8218863						
ANR	8222899	Symbol	TCG_COND_EQ		8218863						
ANR	8222900	Symbol	nb_globals		8218863						
ANR	8222901	Symbol	temps [ args [ 2 ] ] . val		8218863						
ANR	8222902	Symbol	INDEX_op_movi_i32		8218863						
ANR	8222903	Symbol	rh		8218863						
ANR	8222904	Symbol	tcg_op_defs		8218863						
ANR	8222905	Symbol	rl		8218863						
ANR	8222906	Symbol	op2 -> args		8218863						
ANR	8222907	Symbol	temps [ args [ 3 ] ] . state		8218863						
ANR	8222908	Symbol	* tmp		8218863						
ANR	8222909	Symbol	nb_temps		8218863						
ANR	8222910	Symbol	temps [ args [ 4 ] ] . state		8218863						
ANR	8222911	Symbol	bh		8218863						
ANR	8222912	Symbol	~mask		8218863						
ANR	8222913	Symbol	MO_SIGN		8218863						
ANR	8222914	Symbol	bl		8218863						
ANR	8222915	Symbol	temps [ args [ 1 ] ] . state		8218863						
ANR	8222916	Symbol	temps [ args [ 5 ] ] . val		8218863						
ANR	8222917	Symbol	temps [ args [ 2 ] ] . state		8218863						
ANR	8222918	Symbol	* def		8218863						
ANR	8222919	Symbol	temps [ args [ 0 ] ] . mask		8218863						
ANR	8222920	Symbol	* nb_oargs		8218863						
ANR	8222921	Symbol	oi_next		8218863						
ANR	8222922	Symbol	TCG_TEMP_COPY		8218863						
ANR	8222923	Symbol	* temps		8218863						
ANR	8222924	Symbol	* ~temps		8218863						
ANR	8222925	Symbol	op2 -> next		8218863						
ANR	8222926	Symbol	temps [ args [ 5 ] ] . state		8218863						
ANR	8222927	Symbol	s -> gen_first_op_idx		8218863						
ANR	8222928	Symbol	a		8218863						
ANR	8222929	Symbol	b		8218863						
ANR	8222930	Symbol	temps [ args [ 3 ] ] . mask		8218863						
ANR	8222931	Symbol	i		8218863						
ANR	8222932	Symbol	op -> callo		8218863						
ANR	8222933	Symbol	temps [ args [ i ] ] . state		8218863						
ANR	8222934	Symbol	def -> nb_iargs		8218863						
ANR	8222935	Symbol	tcg_invert_cond		8218863						
ANR	8222936	Symbol	op2		8218863						
ANR	8222937	Symbol	r		8218863						
ANR	8222938	Symbol	s		8218863						
ANR	8222939	Symbol	TCG_COND_LT		8218863						
ANR	8222940	Symbol	TCG_TARGET_HAS_not_i32		8218863						
ANR	8222941	Symbol	args2		8218863						
ANR	8222942	Symbol	temps [ args [ 2 ] ] . mask		8218863						
ANR	8222943	Symbol	partmask		8218863						
ANR	8222944	Symbol	* op		8218863						
ANR	8222945	Symbol	neg_op		8218863						
ANR	8222946	Symbol	INDEX_op_setcond_i32		8218863						
ANR	8222947	Symbol	temps		8218863						
ANR	8222948	Symbol	nb_iargs		8218863						
ANR	8222949	Symbol	op -> args		8218863						
ANR	8222950	Symbol	* args		8218863						
ANR	8222951	Symbol	insert_op_before		8218863						
ANR	8222952	Symbol	op -> calli		8218863						
ANR	8222953	Symbol	* * args		8218863						
ANR	8222954	Symbol	swap_commutative		8218863						
ANR	8222955	Symbol	~temps [ args [ 2 ] ] . mask		8218863						
ANR	8222956	Symbol	* * i		8218863						
ANR	8222957	Symbol	TCG_TEMP_CONST		8218863						
ANR	8222958	Symbol	opc		8218863						
ANR	8222959	Symbol	INDEX_op_br		8218863						
ANR	8222960	Symbol	TCG_OPF_64BIT		8218863						
ANR	8222961	Symbol	s -> gen_op_buf		8218863						
ANR	8222962	Symbol	TCG_OPF_BB_END		8218863						
ANR	8222963	Symbol	affected		8218863						
ANR	8222964	Symbol	INDEX_op_not_i32		8218863						
ANR	8222965	Symbol	have_not		8218863						
ANR	8222966	Symbol	get_memop		8218863						
ANR	8222967	Symbol	INDEX_op_neg_i32		8218863						
ANR	8222968	Symbol	do_constant_folding		8218863						
ANR	8222969	Symbol	INDEX_op_sub_i32		8218863						
ANR	8222970	Symbol	not_op		8218863						
ANR	8222971	Symbol	nb_oargs		8218863						
ANR	8222972	Symbol	temps_are_copies		8218863						
ANR	8222973	Symbol	oi		8218863						
ANR	8222974	Symbol	TCG_CALL_NO_READ_GLOBALS		8218863						
ANR	8222975	Symbol	temps [ args [ 1 ] ] . val		8218863						
ANR	8222976	Symbol	TCG_COND_GE		8218863						
ANR	8222977	Symbol	mask		8218863						
ANR	8222978	Symbol	INDEX_op_add2_i32		8218863						
ANR	8222979	Symbol	op		8218863						
ANR	8222980	Symbol	TCG_CALL_NO_WRITE_GLOBALS		8218863						
ANR	8222981	Symbol	deposit64		8218863						
ANR	8222982	Symbol	temps [ args [ 4 ] ] . val		8218863						
ANR	8222983	Symbol	op -> opc		8218863						
ANR	8222984	Symbol	temps [ args [ i ] ] . mask		8218863						
ANR	8222985	Symbol	op -> next		8218863						
ANR	8222986	Symbol	TCG_TARGET_REG_BITS		8218863						
ANR	8222987	Symbol	TCG_TARGET_HAS_neg_i32		8218863						
ANR	8222988	Symbol	args		8218863						
ANR	8222989	Symbol	s -> nb_globals		8218863						
ANR	8222990	Symbol	* i		8218863						
ANR	8222991	Symbol	~temps		8218863						
ANR	8222992	Symbol	have_neg		8218863						
ANR	8222993	Symbol	do_constant_folding_cond		8218863						
ANR	8222994	Symbol	INDEX_op_brcond_i32		8218863						
ANR	8222995	Symbol	* s		8218863						
