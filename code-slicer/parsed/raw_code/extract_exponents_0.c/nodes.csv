command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3115644	File	/home/p4ultr4n/workplace/ReVeal/raw_code/extract_exponents_0.c								
ANR	3115645	Function	extract_exponents	1:0:0:751							
ANR	3115646	FunctionDef	extract_exponents (AC3EncodeContext * s)		3115645	0					
ANR	3115647	CompoundStatement		3:0:52:751	3115645	0					
ANR	3115648	IdentifierDeclStatement	"int blk , ch , i ;"	5:4:59:73	3115645	0	True				
ANR	3115649	IdentifierDecl	blk		3115645	0					
ANR	3115650	IdentifierDeclType	int		3115645	0					
ANR	3115651	Identifier	blk		3115645	1					
ANR	3115652	IdentifierDecl	ch		3115645	1					
ANR	3115653	IdentifierDeclType	int		3115645	0					
ANR	3115654	Identifier	ch		3115645	1					
ANR	3115655	IdentifierDecl	i		3115645	2					
ANR	3115656	IdentifierDeclType	int		3115645	0					
ANR	3115657	Identifier	i		3115645	1					
ANR	3115658	ForStatement	for ( ch = 0 ; ch < s -> channels ; ch ++ )		3115645	1					
ANR	3115659	ForInit	ch = 0 ;	9:9:87:93	3115645	0	True				
ANR	3115660	AssignmentExpression	ch = 0		3115645	0		=			
ANR	3115661	Identifier	ch		3115645	0					
ANR	3115662	PrimaryExpression	0		3115645	1					
ANR	3115663	Condition	ch < s -> channels	9:17:95:110	3115645	1	True				
ANR	3115664	RelationalExpression	ch < s -> channels		3115645	0		<			
ANR	3115665	Identifier	ch		3115645	0					
ANR	3115666	PtrMemberAccess	s -> channels		3115645	1					
ANR	3115667	Identifier	s		3115645	0					
ANR	3115668	Identifier	channels		3115645	1					
ANR	3115669	PostIncDecOperationExpression	ch ++	9:35:113:116	3115645	2	True				
ANR	3115670	Identifier	ch		3115645	0					
ANR	3115671	IncDec	++		3115645	1					
ANR	3115672	CompoundStatement		7:41:66:66	3115645	3					
ANR	3115673	ForStatement	for ( blk = 0 ; blk < AC3_MAX_BLOCKS ; blk ++ )		3115645	0					
ANR	3115674	ForInit	blk = 0 ;	11:13:135:142	3115645	0	True				
ANR	3115675	AssignmentExpression	blk = 0		3115645	0		=			
ANR	3115676	Identifier	blk		3115645	0					
ANR	3115677	PrimaryExpression	0		3115645	1					
ANR	3115678	Condition	blk < AC3_MAX_BLOCKS	11:22:144:163	3115645	1	True				
ANR	3115679	RelationalExpression	blk < AC3_MAX_BLOCKS		3115645	0		<			
ANR	3115680	Identifier	blk		3115645	0					
ANR	3115681	Identifier	AC3_MAX_BLOCKS		3115645	1					
ANR	3115682	PostIncDecOperationExpression	blk ++	11:44:166:170	3115645	2	True				
ANR	3115683	Identifier	blk		3115645	0					
ANR	3115684	IncDec	++		3115645	1					
ANR	3115685	CompoundStatement		11:12:135:168	3115645	3					
ANR	3115686	IdentifierDeclStatement	AC3Block * block = & s -> blocks [ blk ] ;	13:12:188:221	3115645	0	True				
ANR	3115687	IdentifierDecl	* block = & s -> blocks [ blk ]		3115645	0					
ANR	3115688	IdentifierDeclType	AC3Block *		3115645	0					
ANR	3115689	Identifier	block		3115645	1					
ANR	3115690	AssignmentExpression	* block = & s -> blocks [ blk ]		3115645	2		=			
ANR	3115691	Identifier	block		3115645	0					
ANR	3115692	UnaryOperationExpression	& s -> blocks [ blk ]		3115645	1					
ANR	3115693	UnaryOperator	&		3115645	0					
ANR	3115694	ArrayIndexing	s -> blocks [ blk ]		3115645	1					
ANR	3115695	PtrMemberAccess	s -> blocks		3115645	0					
ANR	3115696	Identifier	s		3115645	0					
ANR	3115697	Identifier	blocks		3115645	1					
ANR	3115698	Identifier	blk		3115645	1					
ANR	3115699	ForStatement	for ( i = 0 ; i < AC3_MAX_COEFS ; i ++ )		3115645	1					
ANR	3115700	ForInit	i = 0 ;	15:17:241:246	3115645	0	True				
ANR	3115701	AssignmentExpression	i = 0		3115645	0		=			
ANR	3115702	Identifier	i		3115645	0					
ANR	3115703	PrimaryExpression	0		3115645	1					
ANR	3115704	Condition	i < AC3_MAX_COEFS	15:24:248:264	3115645	1	True				
ANR	3115705	RelationalExpression	i < AC3_MAX_COEFS		3115645	0		<			
ANR	3115706	Identifier	i		3115645	0					
ANR	3115707	Identifier	AC3_MAX_COEFS		3115645	1					
ANR	3115708	PostIncDecOperationExpression	i ++	15:43:267:269	3115645	2	True				
ANR	3115709	Identifier	i		3115645	0					
ANR	3115710	IncDec	++		3115645	1					
ANR	3115711	CompoundStatement		17:16:262:310	3115645	3					
ANR	3115712	IdentifierDeclStatement	int e ;	17:16:291:296	3115645	0	True				
ANR	3115713	IdentifierDecl	e		3115645	0					
ANR	3115714	IdentifierDeclType	int		3115645	0					
ANR	3115715	Identifier	e		3115645	1					
ANR	3115716	IdentifierDeclStatement	int v = abs ( SCALE_COEF ( block -> mdct_coef [ ch ] [ i ] ) ) ;	19:16:315:363	3115645	1	True				
ANR	3115717	IdentifierDecl	v = abs ( SCALE_COEF ( block -> mdct_coef [ ch ] [ i ] ) )		3115645	0					
ANR	3115718	IdentifierDeclType	int		3115645	0					
ANR	3115719	Identifier	v		3115645	1					
ANR	3115720	AssignmentExpression	v = abs ( SCALE_COEF ( block -> mdct_coef [ ch ] [ i ] ) )		3115645	2		=			
ANR	3115721	Identifier	v		3115645	0					
ANR	3115722	CallExpression	abs ( SCALE_COEF ( block -> mdct_coef [ ch ] [ i ] ) )		3115645	1					
ANR	3115723	Callee	abs		3115645	0					
ANR	3115724	Identifier	abs		3115645	0					
ANR	3115725	ArgumentList	SCALE_COEF ( block -> mdct_coef [ ch ] [ i ] )		3115645	1					
ANR	3115726	Argument	SCALE_COEF ( block -> mdct_coef [ ch ] [ i ] )		3115645	0					
ANR	3115727	CallExpression	SCALE_COEF ( block -> mdct_coef [ ch ] [ i ] )		3115645	0					
ANR	3115728	Callee	SCALE_COEF		3115645	0					
ANR	3115729	Identifier	SCALE_COEF		3115645	0					
ANR	3115730	ArgumentList	block -> mdct_coef [ ch ] [ i ]		3115645	1					
ANR	3115731	Argument	block -> mdct_coef [ ch ] [ i ]		3115645	0					
ANR	3115732	ArrayIndexing	block -> mdct_coef [ ch ] [ i ]		3115645	0					
ANR	3115733	ArrayIndexing	block -> mdct_coef [ ch ]		3115645	0					
ANR	3115734	PtrMemberAccess	block -> mdct_coef		3115645	0					
ANR	3115735	Identifier	block		3115645	0					
ANR	3115736	Identifier	mdct_coef		3115645	1					
ANR	3115737	Identifier	ch		3115645	1					
ANR	3115738	Identifier	i		3115645	1					
ANR	3115739	IfStatement	if ( v == 0 )		3115645	2					
ANR	3115740	Condition	v == 0	21:20:386:391	3115645	0	True				
ANR	3115741	EqualityExpression	v == 0		3115645	0		==			
ANR	3115742	Identifier	v		3115645	0					
ANR	3115743	PrimaryExpression	0		3115645	1					
ANR	3115744	ExpressionStatement	e = 24	23:20:415:421	3115645	1	True				
ANR	3115745	AssignmentExpression	e = 24		3115645	0		=			
ANR	3115746	Identifier	e		3115645	0					
ANR	3115747	PrimaryExpression	24		3115645	1					
ANR	3115748	ElseStatement	else		3115645	0					
ANR	3115749	CompoundStatement		23:21:392:392	3115645	0					
ANR	3115750	ExpressionStatement	e = 23 - av_log2 ( v ) + block -> exp_shift [ ch ]	27:20:468:510	3115645	0	True				
ANR	3115751	AssignmentExpression	e = 23 - av_log2 ( v ) + block -> exp_shift [ ch ]		3115645	0		=			
ANR	3115752	Identifier	e		3115645	0					
ANR	3115753	AdditiveExpression	23 - av_log2 ( v ) + block -> exp_shift [ ch ]		3115645	1		-			
ANR	3115754	PrimaryExpression	23		3115645	0					
ANR	3115755	AdditiveExpression	av_log2 ( v ) + block -> exp_shift [ ch ]		3115645	1		+			
ANR	3115756	CallExpression	av_log2 ( v )		3115645	0					
ANR	3115757	Callee	av_log2		3115645	0					
ANR	3115758	Identifier	av_log2		3115645	0					
ANR	3115759	ArgumentList	v		3115645	1					
ANR	3115760	Argument	v		3115645	0					
ANR	3115761	Identifier	v		3115645	0					
ANR	3115762	ArrayIndexing	block -> exp_shift [ ch ]		3115645	1					
ANR	3115763	PtrMemberAccess	block -> exp_shift		3115645	0					
ANR	3115764	Identifier	block		3115645	0					
ANR	3115765	Identifier	exp_shift		3115645	1					
ANR	3115766	Identifier	ch		3115645	1					
ANR	3115767	IfStatement	if ( e >= 24 )		3115645	1					
ANR	3115768	Condition	e >= 24	29:24:537:543	3115645	0	True				
ANR	3115769	RelationalExpression	e >= 24		3115645	0		>=			
ANR	3115770	Identifier	e		3115645	0					
ANR	3115771	PrimaryExpression	24		3115645	1					
ANR	3115772	CompoundStatement		27:33:493:493	3115645	1					
ANR	3115773	ExpressionStatement	e = 24	31:24:573:579	3115645	0	True				
ANR	3115774	AssignmentExpression	e = 24		3115645	0		=			
ANR	3115775	Identifier	e		3115645	0					
ANR	3115776	PrimaryExpression	24		3115645	1					
ANR	3115777	ExpressionStatement	block -> mdct_coef [ ch ] [ i ] = 0	33:24:606:633	3115645	1	True				
ANR	3115778	AssignmentExpression	block -> mdct_coef [ ch ] [ i ] = 0		3115645	0		=			
ANR	3115779	ArrayIndexing	block -> mdct_coef [ ch ] [ i ]		3115645	0					
ANR	3115780	ArrayIndexing	block -> mdct_coef [ ch ]		3115645	0					
ANR	3115781	PtrMemberAccess	block -> mdct_coef		3115645	0					
ANR	3115782	Identifier	block		3115645	0					
ANR	3115783	Identifier	mdct_coef		3115645	1					
ANR	3115784	Identifier	ch		3115645	1					
ANR	3115785	Identifier	i		3115645	1					
ANR	3115786	PrimaryExpression	0		3115645	1					
ANR	3115787	ExpressionStatement	block -> exp [ ch ] [ i ] = e	39:16:694:715	3115645	3	True				
ANR	3115788	AssignmentExpression	block -> exp [ ch ] [ i ] = e		3115645	0		=			
ANR	3115789	ArrayIndexing	block -> exp [ ch ] [ i ]		3115645	0					
ANR	3115790	ArrayIndexing	block -> exp [ ch ]		3115645	0					
ANR	3115791	PtrMemberAccess	block -> exp		3115645	0					
ANR	3115792	Identifier	block		3115645	0					
ANR	3115793	Identifier	exp		3115645	1					
ANR	3115794	Identifier	ch		3115645	1					
ANR	3115795	Identifier	i		3115645	1					
ANR	3115796	Identifier	e		3115645	1					
ANR	3115797	ReturnType	static void		3115645	1					
ANR	3115798	Identifier	extract_exponents		3115645	2					
ANR	3115799	ParameterList	AC3EncodeContext * s		3115645	3					
ANR	3115800	Parameter	AC3EncodeContext * s	1:30:30:48	3115645	0	True				
ANR	3115801	ParameterType	AC3EncodeContext *		3115645	0					
ANR	3115802	Identifier	s		3115645	1					
ANR	3115803	CFGEntryNode	ENTRY		3115645		True				
ANR	3115804	CFGExitNode	EXIT		3115645		True				
ANR	3115805	Symbol	block -> exp_shift		3115645						
ANR	3115806	Symbol	* ch		3115645						
ANR	3115807	Symbol	s -> blocks		3115645						
ANR	3115808	Symbol	s -> channels		3115645						
ANR	3115809	Symbol	* block -> mdct_coef		3115645						
ANR	3115810	Symbol	AC3_MAX_BLOCKS		3115645						
ANR	3115811	Symbol	block -> mdct_coef		3115645						
ANR	3115812	Symbol	* * ch		3115645						
ANR	3115813	Symbol	SCALE_COEF		3115645						
ANR	3115814	Symbol	block -> exp		3115645						
ANR	3115815	Symbol	AC3_MAX_COEFS		3115645						
ANR	3115816	Symbol	* * block -> exp		3115645						
ANR	3115817	Symbol	block		3115645						
ANR	3115818	Symbol	blk		3115645						
ANR	3115819	Symbol	* * * block		3115645						
ANR	3115820	Symbol	ch		3115645						
ANR	3115821	Symbol	e		3115645						
ANR	3115822	Symbol	* block -> exp_shift		3115645						
ANR	3115823	Symbol	i		3115645						
ANR	3115824	Symbol	* block		3115645						
ANR	3115825	Symbol	* block -> exp		3115645						
ANR	3115826	Symbol	s		3115645						
ANR	3115827	Symbol	abs		3115645						
ANR	3115828	Symbol	* i		3115645						
ANR	3115829	Symbol	* * block -> mdct_coef		3115645						
ANR	3115830	Symbol	v		3115645						
ANR	3115831	Symbol	* * block		3115645						
ANR	3115832	Symbol	* s		3115645						
ANR	3115833	Symbol	av_log2		3115645						
