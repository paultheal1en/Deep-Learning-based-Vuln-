command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4649159	File	/home/p4ultr4n/workplace/ReVeal/raw_code/hex_to_data_0.c								
ANR	4649160	Function	hex_to_data	1:0:0:583							
ANR	4649161	FunctionDef	"hex_to_data (uint8_t * data , const char * p)"		4649160	0					
ANR	4649162	CompoundStatement		3:0:54:583	4649160	0					
ANR	4649163	IdentifierDeclStatement	"int c , len , v ;"	5:4:61:74	4649160	0	True				
ANR	4649164	IdentifierDecl	c		4649160	0					
ANR	4649165	IdentifierDeclType	int		4649160	0					
ANR	4649166	Identifier	c		4649160	1					
ANR	4649167	IdentifierDecl	len		4649160	1					
ANR	4649168	IdentifierDeclType	int		4649160	0					
ANR	4649169	Identifier	len		4649160	1					
ANR	4649170	IdentifierDecl	v		4649160	2					
ANR	4649171	IdentifierDeclType	int		4649160	0					
ANR	4649172	Identifier	v		4649160	1					
ANR	4649173	ExpressionStatement	len = 0	9:4:83:90	4649160	1	True				
ANR	4649174	AssignmentExpression	len = 0		4649160	0		=			
ANR	4649175	Identifier	len		4649160	0					
ANR	4649176	PrimaryExpression	0		4649160	1					
ANR	4649177	ExpressionStatement	v = 1	11:4:97:102	4649160	2	True				
ANR	4649178	AssignmentExpression	v = 1		4649160	0		=			
ANR	4649179	Identifier	v		4649160	0					
ANR	4649180	PrimaryExpression	1		4649160	1					
ANR	4649181	ForStatement	for ( ; ; )		4649160	3					
ANR	4649182	CompoundStatement		11:12:62:62	4649160	0					
ANR	4649183	ExpressionStatement	skip_spaces ( & p )	15:8:128:143	4649160	0	True				
ANR	4649184	CallExpression	skip_spaces ( & p )		4649160	0					
ANR	4649185	Callee	skip_spaces		4649160	0					
ANR	4649186	Identifier	skip_spaces		4649160	0					
ANR	4649187	ArgumentList	& p		4649160	1					
ANR	4649188	Argument	& p		4649160	0					
ANR	4649189	UnaryOperationExpression	& p		4649160	0					
ANR	4649190	UnaryOperator	&		4649160	0					
ANR	4649191	Identifier	p		4649160	1					
ANR	4649192	IfStatement	if ( * p == '\\0' )		4649160	1					
ANR	4649193	Condition	* p == '\\0'	17:12:158:167	4649160	0	True				
ANR	4649194	EqualityExpression	* p == '\\0'		4649160	0		==			
ANR	4649195	UnaryOperationExpression	* p		4649160	0					
ANR	4649196	UnaryOperator	*		4649160	0					
ANR	4649197	Identifier	p		4649160	1					
ANR	4649198	PrimaryExpression	'\\0'		4649160	1					
ANR	4649199	BreakStatement	break ;	19:12:183:188	4649160	1	True				
ANR	4649200	ExpressionStatement	c = toupper ( ( unsigned char ) * p ++ )	21:8:199:231	4649160	2	True				
ANR	4649201	AssignmentExpression	c = toupper ( ( unsigned char ) * p ++ )		4649160	0		=			
ANR	4649202	Identifier	c		4649160	0					
ANR	4649203	CallExpression	toupper ( ( unsigned char ) * p ++ )		4649160	1					
ANR	4649204	Callee	toupper		4649160	0					
ANR	4649205	Identifier	toupper		4649160	0					
ANR	4649206	ArgumentList	( unsigned char ) * p ++		4649160	1					
ANR	4649207	Argument	( unsigned char ) * p ++		4649160	0					
ANR	4649208	CastExpression	( unsigned char ) * p ++		4649160	0					
ANR	4649209	CastTarget	unsigned char		4649160	0					
ANR	4649210	UnaryOperationExpression	* p ++		4649160	1					
ANR	4649211	UnaryOperator	*		4649160	0					
ANR	4649212	PostIncDecOperationExpression	p ++		4649160	1					
ANR	4649213	Identifier	p		4649160	0					
ANR	4649214	IncDec	++		4649160	1					
ANR	4649215	IfStatement	if ( c >= '0' && c <= '9' )		4649160	3					
ANR	4649216	Condition	c >= '0' && c <= '9'	23:12:246:265	4649160	0	True				
ANR	4649217	AndExpression	c >= '0' && c <= '9'		4649160	0		&&			
ANR	4649218	RelationalExpression	c >= '0'		4649160	0		>=			
ANR	4649219	Identifier	c		4649160	0					
ANR	4649220	PrimaryExpression	'0'		4649160	1					
ANR	4649221	RelationalExpression	c <= '9'		4649160	1		<=			
ANR	4649222	Identifier	c		4649160	0					
ANR	4649223	PrimaryExpression	'9'		4649160	1					
ANR	4649224	ExpressionStatement	c = c - '0'	25:12:281:292	4649160	1	True				
ANR	4649225	AssignmentExpression	c = c - '0'		4649160	0		=			
ANR	4649226	Identifier	c		4649160	0					
ANR	4649227	AdditiveExpression	c - '0'		4649160	1		-			
ANR	4649228	Identifier	c		4649160	0					
ANR	4649229	PrimaryExpression	'0'		4649160	1					
ANR	4649230	ElseStatement	else		4649160	0					
ANR	4649231	IfStatement	if ( c >= 'A' && c <= 'F' )		4649160	0					
ANR	4649232	Condition	c >= 'A' && c <= 'F'	27:17:312:331	4649160	0	True				
ANR	4649233	AndExpression	c >= 'A' && c <= 'F'		4649160	0		&&			
ANR	4649234	RelationalExpression	c >= 'A'		4649160	0		>=			
ANR	4649235	Identifier	c		4649160	0					
ANR	4649236	PrimaryExpression	'A'		4649160	1					
ANR	4649237	RelationalExpression	c <= 'F'		4649160	1		<=			
ANR	4649238	Identifier	c		4649160	0					
ANR	4649239	PrimaryExpression	'F'		4649160	1					
ANR	4649240	ExpressionStatement	c = c - 'A' + 10	29:12:347:363	4649160	1	True				
ANR	4649241	AssignmentExpression	c = c - 'A' + 10		4649160	0		=			
ANR	4649242	Identifier	c		4649160	0					
ANR	4649243	AdditiveExpression	c - 'A' + 10		4649160	1		-			
ANR	4649244	Identifier	c		4649160	0					
ANR	4649245	AdditiveExpression	'A' + 10		4649160	1		+			
ANR	4649246	PrimaryExpression	'A'		4649160	0					
ANR	4649247	PrimaryExpression	10		4649160	1					
ANR	4649248	ElseStatement	else		4649160	0					
ANR	4649249	BreakStatement	break ;	33:12:392:397	4649160	0	True				
ANR	4649250	ExpressionStatement	v = ( v << 4 ) | c	35:8:408:424	4649160	4	True				
ANR	4649251	AssignmentExpression	v = ( v << 4 ) | c		4649160	0		=			
ANR	4649252	Identifier	v		4649160	0					
ANR	4649253	InclusiveOrExpression	( v << 4 ) | c		4649160	1		|			
ANR	4649254	ShiftExpression	v << 4		4649160	0		<<			
ANR	4649255	Identifier	v		4649160	0					
ANR	4649256	PrimaryExpression	4		4649160	1					
ANR	4649257	Identifier	c		4649160	1					
ANR	4649258	IfStatement	if ( v & 0x100 )		4649160	5					
ANR	4649259	Condition	v & 0x100	37:12:439:447	4649160	0	True				
ANR	4649260	BitAndExpression	v & 0x100		4649160	0		&			
ANR	4649261	Identifier	v		4649160	0					
ANR	4649262	PrimaryExpression	0x100		4649160	1					
ANR	4649263	CompoundStatement		35:23:395:395	4649160	1					
ANR	4649264	IfStatement	if ( data )		4649160	0					
ANR	4649265	Condition	data	39:16:469:472	4649160	0	True				
ANR	4649266	Identifier	data		4649160	0					
ANR	4649267	ExpressionStatement	data [ len ] = v	41:16:492:505	4649160	1	True				
ANR	4649268	AssignmentExpression	data [ len ] = v		4649160	0		=			
ANR	4649269	ArrayIndexing	data [ len ]		4649160	0					
ANR	4649270	Identifier	data		4649160	0					
ANR	4649271	Identifier	len		4649160	1					
ANR	4649272	Identifier	v		4649160	1					
ANR	4649273	ExpressionStatement	len ++	43:12:520:525	4649160	1	True				
ANR	4649274	PostIncDecOperationExpression	len ++		4649160	0					
ANR	4649275	Identifier	len		4649160	0					
ANR	4649276	IncDec	++		4649160	1					
ANR	4649277	ExpressionStatement	v = 1	45:12:540:545	4649160	2	True				
ANR	4649278	AssignmentExpression	v = 1		4649160	0		=			
ANR	4649279	Identifier	v		4649160	0					
ANR	4649280	PrimaryExpression	1		4649160	1					
ANR	4649281	ReturnStatement	return len ;	51:4:570:580	4649160	4	True				
ANR	4649282	Identifier	len		4649160	0					
ANR	4649283	ReturnType	static int		4649160	1					
ANR	4649284	Identifier	hex_to_data		4649160	2					
ANR	4649285	ParameterList	"uint8_t * data , const char * p"		4649160	3					
ANR	4649286	Parameter	uint8_t * data	1:23:23:35	4649160	0	True				
ANR	4649287	ParameterType	uint8_t *		4649160	0					
ANR	4649288	Identifier	data		4649160	1					
ANR	4649289	Parameter	const char * p	1:38:38:50	4649160	1	True				
ANR	4649290	ParameterType	const char *		4649160	0					
ANR	4649291	Identifier	p		4649160	1					
ANR	4649292	CFGEntryNode	ENTRY		4649160		True				
ANR	4649293	CFGExitNode	EXIT		4649160		True				
ANR	4649294	InfiniteForNode	true		4649160		True				
ANR	4649295	Symbol	p		4649160						
ANR	4649296	Symbol	c		4649160						
ANR	4649297	Symbol	data		4649160						
ANR	4649298	Symbol	len		4649160						
ANR	4649299	Symbol	toupper		4649160						
ANR	4649300	Symbol	v		4649160						
ANR	4649301	Symbol	& p		4649160						
ANR	4649302	Symbol	* p ++		4649160						
ANR	4649303	Symbol	* p		4649160						
ANR	4649304	Symbol	* data		4649160						
ANR	4649305	Symbol	* len		4649160						
