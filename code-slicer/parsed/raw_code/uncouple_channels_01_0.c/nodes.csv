command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8620197	File	/home/p4ultr4n/workplace/ReVeal/raw_code/uncouple_channels_01_0.c								
ANR	8620198	Function	uncouple_channels	1:0:0:1177							
ANR	8620199	FunctionDef	uncouple_channels (AC3DecodeContext * ctx)		8620198	0					
ANR	8620200	CompoundStatement		3:0:54:1177	8620198	0					
ANR	8620201	IdentifierDeclStatement	ac3_audio_block * ab = & ctx -> audio_block ;	5:4:61:100	8620198	0	True				
ANR	8620202	IdentifierDecl	* ab = & ctx -> audio_block		8620198	0					
ANR	8620203	IdentifierDeclType	ac3_audio_block *		8620198	0					
ANR	8620204	Identifier	ab		8620198	1					
ANR	8620205	AssignmentExpression	* ab = & ctx -> audio_block		8620198	2		=			
ANR	8620206	Identifier	ab		8620198	0					
ANR	8620207	UnaryOperationExpression	& ctx -> audio_block		8620198	1					
ANR	8620208	UnaryOperator	&		8620198	0					
ANR	8620209	PtrMemberAccess	ctx -> audio_block		8620198	1					
ANR	8620210	Identifier	ctx		8620198	0					
ANR	8620211	Identifier	audio_block		8620198	1					
ANR	8620212	IdentifierDeclStatement	"int ch , sbnd , bin ;"	7:4:107:124	8620198	1	True				
ANR	8620213	IdentifierDecl	ch		8620198	0					
ANR	8620214	IdentifierDeclType	int		8620198	0					
ANR	8620215	Identifier	ch		8620198	1					
ANR	8620216	IdentifierDecl	sbnd		8620198	1					
ANR	8620217	IdentifierDeclType	int		8620198	0					
ANR	8620218	Identifier	sbnd		8620198	1					
ANR	8620219	IdentifierDecl	bin		8620198	2					
ANR	8620220	IdentifierDeclType	int		8620198	0					
ANR	8620221	Identifier	bin		8620198	1					
ANR	8620222	IdentifierDeclStatement	int index ;	9:4:131:140	8620198	2	True				
ANR	8620223	IdentifierDecl	index		8620198	0					
ANR	8620224	IdentifierDeclType	int		8620198	0					
ANR	8620225	Identifier	index		8620198	1					
ANR	8620226	IdentifierDeclStatement	float ( * samples ) [ 256 ] ;	11:4:147:168	8620198	3	True				
ANR	8620227	IdentifierDecl	( * samples ) [ 256 ]		8620198	0					
ANR	8620228	IdentifierDeclType	float ( * ) [ 256 ]		8620198	0					
ANR	8620229	Identifier	samples		8620198	1					
ANR	8620230	PrimaryExpression	256		8620198	2					
ANR	8620231	IdentifierDeclStatement	int16_t mantissa ;	13:4:175:191	8620198	4	True				
ANR	8620232	IdentifierDecl	mantissa		8620198	0					
ANR	8620233	IdentifierDeclType	int16_t		8620198	0					
ANR	8620234	Identifier	mantissa		8620198	1					
ANR	8620235	Statement	samples	17:4:200:206	8620198	5	True				
ANR	8620236	Statement	=	17:12:208:208	8620198	6	True				
ANR	8620237	Statement	(	17:14:210:210	8620198	7	True				
ANR	8620238	Statement	float	17:15:211:215	8620198	8	True				
ANR	8620239	Statement	(	17:21:217:217	8620198	9	True				
ANR	8620240	Statement	*	17:22:218:218	8620198	10	True				
ANR	8620241	Statement	)	17:23:219:219	8620198	11	True				
ANR	8620242	Statement	[	17:24:220:220	8620198	12	True				
ANR	8620243	Statement	256	17:25:221:223	8620198	13	True				
ANR	8620244	Statement	]	17:28:224:224	8620198	14	True				
ANR	8620245	Statement	)	17:29:225:225	8620198	15	True				
ANR	8620246	ExpressionStatement	( ctx -> bsi . flags & AC3_BSI_LFEON ) ? ( ctx -> samples + 256 ) : ( ctx -> samples )	17:30:226:300	8620198	16	True				
ANR	8620247	ConditionalExpression	( ctx -> bsi . flags & AC3_BSI_LFEON ) ? ( ctx -> samples + 256 ) : ( ctx -> samples )		8620198	0					
ANR	8620248	Condition	ctx -> bsi . flags & AC3_BSI_LFEON		8620198	0					
ANR	8620249	BitAndExpression	ctx -> bsi . flags & AC3_BSI_LFEON		8620198	0		&			
ANR	8620250	MemberAccess	ctx -> bsi . flags		8620198	0					
ANR	8620251	PtrMemberAccess	ctx -> bsi		8620198	0					
ANR	8620252	Identifier	ctx		8620198	0					
ANR	8620253	Identifier	bsi		8620198	1					
ANR	8620254	Identifier	flags		8620198	1					
ANR	8620255	Identifier	AC3_BSI_LFEON		8620198	1					
ANR	8620256	AdditiveExpression	ctx -> samples + 256		8620198	1		+			
ANR	8620257	PtrMemberAccess	ctx -> samples		8620198	0					
ANR	8620258	Identifier	ctx		8620198	0					
ANR	8620259	Identifier	samples		8620198	1					
ANR	8620260	PrimaryExpression	256		8620198	1					
ANR	8620261	PtrMemberAccess	ctx -> samples		8620198	2					
ANR	8620262	Identifier	ctx		8620198	0					
ANR	8620263	Identifier	samples		8620198	1					
ANR	8620264	ForStatement	for ( ch = 0 ; ch < ctx -> bsi . nfchans ; ch ++ )		8620198	17					
ANR	8620265	ForInit	ch = 0 ;	23:9:343:349	8620198	0	True				
ANR	8620266	AssignmentExpression	ch = 0		8620198	0		=			
ANR	8620267	Identifier	ch		8620198	0					
ANR	8620268	PrimaryExpression	0		8620198	1					
ANR	8620269	Condition	ch < ctx -> bsi . nfchans	23:17:351:371	8620198	1	True				
ANR	8620270	RelationalExpression	ch < ctx -> bsi . nfchans		8620198	0		<			
ANR	8620271	Identifier	ch		8620198	0					
ANR	8620272	MemberAccess	ctx -> bsi . nfchans		8620198	1					
ANR	8620273	PtrMemberAccess	ctx -> bsi		8620198	0					
ANR	8620274	Identifier	ctx		8620198	0					
ANR	8620275	Identifier	bsi		8620198	1					
ANR	8620276	Identifier	nfchans		8620198	1					
ANR	8620277	PostIncDecOperationExpression	ch ++	23:40:374:377	8620198	2	True				
ANR	8620278	Identifier	ch		8620198	0					
ANR	8620279	IncDec	++		8620198	1					
ANR	8620280	IfStatement	if ( ab -> chincpl & ( 1 << ch ) )		8620198	3					
ANR	8620281	Condition	ab -> chincpl & ( 1 << ch )	25:12:393:415	8620198	0	True				
ANR	8620282	BitAndExpression	ab -> chincpl & ( 1 << ch )		8620198	0		&			
ANR	8620283	PtrMemberAccess	ab -> chincpl		8620198	0					
ANR	8620284	Identifier	ab		8620198	0					
ANR	8620285	Identifier	chincpl		8620198	1					
ANR	8620286	ShiftExpression	1 << ch		8620198	1		<<			
ANR	8620287	PrimaryExpression	1		8620198	0					
ANR	8620288	Identifier	ch		8620198	1					
ANR	8620289	ForStatement	for ( sbnd = ab -> cplbegf ; sbnd < 3 + ab -> cplendf ; sbnd ++ )		8620198	1					
ANR	8620290	ForInit	sbnd = ab -> cplbegf ;	27:17:436:454	8620198	0	True				
ANR	8620291	AssignmentExpression	sbnd = ab -> cplbegf		8620198	0		=			
ANR	8620292	Identifier	sbnd		8620198	0					
ANR	8620293	PtrMemberAccess	ab -> cplbegf		8620198	1					
ANR	8620294	Identifier	ab		8620198	0					
ANR	8620295	Identifier	cplbegf		8620198	1					
ANR	8620296	Condition	sbnd < 3 + ab -> cplendf	27:37:456:477	8620198	1	True				
ANR	8620297	RelationalExpression	sbnd < 3 + ab -> cplendf		8620198	0		<			
ANR	8620298	Identifier	sbnd		8620198	0					
ANR	8620299	AdditiveExpression	3 + ab -> cplendf		8620198	1		+			
ANR	8620300	PrimaryExpression	3		8620198	0					
ANR	8620301	PtrMemberAccess	ab -> cplendf		8620198	1					
ANR	8620302	Identifier	ab		8620198	0					
ANR	8620303	Identifier	cplendf		8620198	1					
ANR	8620304	PostIncDecOperationExpression	sbnd ++	27:61:480:485	8620198	2	True				
ANR	8620305	Identifier	sbnd		8620198	0					
ANR	8620306	IncDec	++		8620198	1					
ANR	8620307	ForStatement	for ( bin = 0 ; bin < 12 ; bin ++ )		8620198	3					
ANR	8620308	ForInit	bin = 0 ;	29:21:510:517	8620198	0	True				
ANR	8620309	AssignmentExpression	bin = 0		8620198	0		=			
ANR	8620310	Identifier	bin		8620198	0					
ANR	8620311	PrimaryExpression	0		8620198	1					
ANR	8620312	Condition	bin < 12	29:30:519:526	8620198	1	True				
ANR	8620313	RelationalExpression	bin < 12		8620198	0		<			
ANR	8620314	Identifier	bin		8620198	0					
ANR	8620315	PrimaryExpression	12		8620198	1					
ANR	8620316	PostIncDecOperationExpression	bin ++	29:40:529:533	8620198	2	True				
ANR	8620317	Identifier	bin		8620198	0					
ANR	8620318	IncDec	++		8620198	1					
ANR	8620319	CompoundStatement		27:47:481:481	8620198	3					
ANR	8620320	ExpressionStatement	index = sbnd * 12 + bin + 37	31:20:559:587	8620198	0	True				
ANR	8620321	AssignmentExpression	index = sbnd * 12 + bin + 37		8620198	0		=			
ANR	8620322	Identifier	index		8620198	0					
ANR	8620323	AdditiveExpression	sbnd * 12 + bin + 37		8620198	1		+			
ANR	8620324	MultiplicativeExpression	sbnd * 12		8620198	0		*			
ANR	8620325	Identifier	sbnd		8620198	0					
ANR	8620326	PrimaryExpression	12		8620198	1					
ANR	8620327	AdditiveExpression	bin + 37		8620198	1		+			
ANR	8620328	Identifier	bin		8620198	0					
ANR	8620329	PrimaryExpression	37		8620198	1					
ANR	8620330	ExpressionStatement	samples [ ch ] [ index ] = ab -> cplcoeffs [ index ] * ab -> cplco [ ch ] [ sbnd ] * ab -> chcoeffs [ ch ]	33:20:610:692	8620198	1	True				
ANR	8620331	AssignmentExpression	samples [ ch ] [ index ] = ab -> cplcoeffs [ index ] * ab -> cplco [ ch ] [ sbnd ] * ab -> chcoeffs [ ch ]		8620198	0		=			
ANR	8620332	ArrayIndexing	samples [ ch ] [ index ]		8620198	0					
ANR	8620333	ArrayIndexing	samples [ ch ]		8620198	0					
ANR	8620334	Identifier	samples		8620198	0					
ANR	8620335	Identifier	ch		8620198	1					
ANR	8620336	Identifier	index		8620198	1					
ANR	8620337	MultiplicativeExpression	ab -> cplcoeffs [ index ] * ab -> cplco [ ch ] [ sbnd ] * ab -> chcoeffs [ ch ]		8620198	1		*			
ANR	8620338	ArrayIndexing	ab -> cplcoeffs [ index ]		8620198	0					
ANR	8620339	PtrMemberAccess	ab -> cplcoeffs		8620198	0					
ANR	8620340	Identifier	ab		8620198	0					
ANR	8620341	Identifier	cplcoeffs		8620198	1					
ANR	8620342	Identifier	index		8620198	1					
ANR	8620343	MultiplicativeExpression	ab -> cplco [ ch ] [ sbnd ] * ab -> chcoeffs [ ch ]		8620198	1		*			
ANR	8620344	ArrayIndexing	ab -> cplco [ ch ] [ sbnd ]		8620198	0					
ANR	8620345	ArrayIndexing	ab -> cplco [ ch ]		8620198	0					
ANR	8620346	PtrMemberAccess	ab -> cplco		8620198	0					
ANR	8620347	Identifier	ab		8620198	0					
ANR	8620348	Identifier	cplco		8620198	1					
ANR	8620349	Identifier	ch		8620198	1					
ANR	8620350	Identifier	sbnd		8620198	1					
ANR	8620351	ArrayIndexing	ab -> chcoeffs [ ch ]		8620198	1					
ANR	8620352	PtrMemberAccess	ab -> chcoeffs		8620198	0					
ANR	8620353	Identifier	ab		8620198	0					
ANR	8620354	Identifier	chcoeffs		8620198	1					
ANR	8620355	Identifier	ch		8620198	1					
ANR	8620356	ForStatement	for ( ch = 0 ; ch < ctx -> bsi . nfchans ; ch ++ )		8620198	18					
ANR	8620357	ForInit	ch = 0 ;	41:9:764:770	8620198	0	True				
ANR	8620358	AssignmentExpression	ch = 0		8620198	0		=			
ANR	8620359	Identifier	ch		8620198	0					
ANR	8620360	PrimaryExpression	0		8620198	1					
ANR	8620361	Condition	ch < ctx -> bsi . nfchans	41:17:772:792	8620198	1	True				
ANR	8620362	RelationalExpression	ch < ctx -> bsi . nfchans		8620198	0		<			
ANR	8620363	Identifier	ch		8620198	0					
ANR	8620364	MemberAccess	ctx -> bsi . nfchans		8620198	1					
ANR	8620365	PtrMemberAccess	ctx -> bsi		8620198	0					
ANR	8620366	Identifier	ctx		8620198	0					
ANR	8620367	Identifier	bsi		8620198	1					
ANR	8620368	Identifier	nfchans		8620198	1					
ANR	8620369	PostIncDecOperationExpression	ch ++	41:40:795:798	8620198	2	True				
ANR	8620370	Identifier	ch		8620198	0					
ANR	8620371	IncDec	++		8620198	1					
ANR	8620372	IfStatement	if ( ( ab -> chincpl & ( 1 << ch ) ) && ( ab -> dithflag & ( 1 << ch ) ) )		8620198	3					
ANR	8620373	Condition	( ab -> chincpl & ( 1 << ch ) ) && ( ab -> dithflag & ( 1 << ch ) )	43:12:814:868	8620198	0	True				
ANR	8620374	AndExpression	( ab -> chincpl & ( 1 << ch ) ) && ( ab -> dithflag & ( 1 << ch ) )		8620198	0		&&			
ANR	8620375	BitAndExpression	ab -> chincpl & ( 1 << ch )		8620198	0		&			
ANR	8620376	PtrMemberAccess	ab -> chincpl		8620198	0					
ANR	8620377	Identifier	ab		8620198	0					
ANR	8620378	Identifier	chincpl		8620198	1					
ANR	8620379	ShiftExpression	1 << ch		8620198	1		<<			
ANR	8620380	PrimaryExpression	1		8620198	0					
ANR	8620381	Identifier	ch		8620198	1					
ANR	8620382	BitAndExpression	ab -> dithflag & ( 1 << ch )		8620198	1		&			
ANR	8620383	PtrMemberAccess	ab -> dithflag		8620198	0					
ANR	8620384	Identifier	ab		8620198	0					
ANR	8620385	Identifier	dithflag		8620198	1					
ANR	8620386	ShiftExpression	1 << ch		8620198	1		<<			
ANR	8620387	PrimaryExpression	1		8620198	0					
ANR	8620388	Identifier	ch		8620198	1					
ANR	8620389	ForStatement	for ( index = 0 ; index < ab -> endmant [ ch ] ; index ++ )		8620198	1					
ANR	8620390	ForInit	index = 0 ;	45:17:889:898	8620198	0	True				
ANR	8620391	AssignmentExpression	index = 0		8620198	0		=			
ANR	8620392	Identifier	index		8620198	0					
ANR	8620393	PrimaryExpression	0		8620198	1					
ANR	8620394	Condition	index < ab -> endmant [ ch ]	45:28:900:922	8620198	1	True				
ANR	8620395	RelationalExpression	index < ab -> endmant [ ch ]		8620198	0		<			
ANR	8620396	Identifier	index		8620198	0					
ANR	8620397	ArrayIndexing	ab -> endmant [ ch ]		8620198	1					
ANR	8620398	PtrMemberAccess	ab -> endmant		8620198	0					
ANR	8620399	Identifier	ab		8620198	0					
ANR	8620400	Identifier	endmant		8620198	1					
ANR	8620401	Identifier	ch		8620198	1					
ANR	8620402	PostIncDecOperationExpression	index ++	45:53:925:931	8620198	2	True				
ANR	8620403	Identifier	index		8620198	0					
ANR	8620404	IncDec	++		8620198	1					
ANR	8620405	IfStatement	if ( ! ab -> bap [ ch ] [ index ] )		8620198	3					
ANR	8620406	Condition	! ab -> bap [ ch ] [ index ]	47:20:955:973	8620198	0	True				
ANR	8620407	UnaryOperationExpression	! ab -> bap [ ch ] [ index ]		8620198	0					
ANR	8620408	UnaryOperator	!		8620198	0					
ANR	8620409	ArrayIndexing	ab -> bap [ ch ] [ index ]		8620198	1					
ANR	8620410	ArrayIndexing	ab -> bap [ ch ]		8620198	0					
ANR	8620411	PtrMemberAccess	ab -> bap		8620198	0					
ANR	8620412	Identifier	ab		8620198	0					
ANR	8620413	Identifier	bap		8620198	1					
ANR	8620414	Identifier	ch		8620198	1					
ANR	8620415	Identifier	index		8620198	1					
ANR	8620416	CompoundStatement		45:41:921:921	8620198	1					
ANR	8620417	ExpressionStatement	mantissa = dither_int16 ( & ctx -> state )	49:20:999:1035	8620198	0	True				
ANR	8620418	AssignmentExpression	mantissa = dither_int16 ( & ctx -> state )		8620198	0		=			
ANR	8620419	Identifier	mantissa		8620198	0					
ANR	8620420	CallExpression	dither_int16 ( & ctx -> state )		8620198	1					
ANR	8620421	Callee	dither_int16		8620198	0					
ANR	8620422	Identifier	dither_int16		8620198	0					
ANR	8620423	ArgumentList	& ctx -> state		8620198	1					
ANR	8620424	Argument	& ctx -> state		8620198	0					
ANR	8620425	UnaryOperationExpression	& ctx -> state		8620198	0					
ANR	8620426	UnaryOperator	&		8620198	0					
ANR	8620427	PtrMemberAccess	ctx -> state		8620198	1					
ANR	8620428	Identifier	ctx		8620198	0					
ANR	8620429	Identifier	state		8620198	1					
ANR	8620430	ExpressionStatement	"samples [ ch ] [ index ] = to_float ( ab -> dexps [ ch ] [ index ] , mantissa ) * ab -> chcoeffs [ ch ]"	51:20:1058:1138	8620198	1	True				
ANR	8620431	AssignmentExpression	"samples [ ch ] [ index ] = to_float ( ab -> dexps [ ch ] [ index ] , mantissa ) * ab -> chcoeffs [ ch ]"		8620198	0		=			
ANR	8620432	ArrayIndexing	samples [ ch ] [ index ]		8620198	0					
ANR	8620433	ArrayIndexing	samples [ ch ]		8620198	0					
ANR	8620434	Identifier	samples		8620198	0					
ANR	8620435	Identifier	ch		8620198	1					
ANR	8620436	Identifier	index		8620198	1					
ANR	8620437	MultiplicativeExpression	"to_float ( ab -> dexps [ ch ] [ index ] , mantissa ) * ab -> chcoeffs [ ch ]"		8620198	1		*			
ANR	8620438	CallExpression	"to_float ( ab -> dexps [ ch ] [ index ] , mantissa )"		8620198	0					
ANR	8620439	Callee	to_float		8620198	0					
ANR	8620440	Identifier	to_float		8620198	0					
ANR	8620441	ArgumentList	ab -> dexps [ ch ] [ index ]		8620198	1					
ANR	8620442	Argument	ab -> dexps [ ch ] [ index ]		8620198	0					
ANR	8620443	ArrayIndexing	ab -> dexps [ ch ] [ index ]		8620198	0					
ANR	8620444	ArrayIndexing	ab -> dexps [ ch ]		8620198	0					
ANR	8620445	PtrMemberAccess	ab -> dexps		8620198	0					
ANR	8620446	Identifier	ab		8620198	0					
ANR	8620447	Identifier	dexps		8620198	1					
ANR	8620448	Identifier	ch		8620198	1					
ANR	8620449	Identifier	index		8620198	1					
ANR	8620450	Argument	mantissa		8620198	1					
ANR	8620451	Identifier	mantissa		8620198	0					
ANR	8620452	ArrayIndexing	ab -> chcoeffs [ ch ]		8620198	1					
ANR	8620453	PtrMemberAccess	ab -> chcoeffs		8620198	0					
ANR	8620454	Identifier	ab		8620198	0					
ANR	8620455	Identifier	chcoeffs		8620198	1					
ANR	8620456	Identifier	ch		8620198	1					
ANR	8620457	ReturnStatement	return 0 ;	57:4:1166:1174	8620198	19	True				
ANR	8620458	PrimaryExpression	0		8620198	0					
ANR	8620459	ReturnType	static int		8620198	1					
ANR	8620460	Identifier	uncouple_channels		8620198	2					
ANR	8620461	ParameterList	AC3DecodeContext * ctx		8620198	3					
ANR	8620462	Parameter	AC3DecodeContext * ctx	1:29:29:50	8620198	0	True				
ANR	8620463	ParameterType	AC3DecodeContext *		8620198	0					
ANR	8620464	Identifier	ctx		8620198	1					
ANR	8620465	CFGEntryNode	ENTRY		8620198		True				
ANR	8620466	CFGExitNode	EXIT		8620198		True				
ANR	8620467	Symbol	dither_int16		8620198						
ANR	8620468	Symbol	* ab		8620198						
ANR	8620469	Symbol	ab -> dithflag		8620198						
ANR	8620470	Symbol	bin		8620198						
ANR	8620471	Symbol	ab -> chcoeffs		8620198						
ANR	8620472	Symbol	* * ab -> bap		8620198						
ANR	8620473	Symbol	* index		8620198						
ANR	8620474	Symbol	* ch		8620198						
ANR	8620475	Symbol	& ctx -> audio_block		8620198						
ANR	8620476	Symbol	* * ab		8620198						
ANR	8620477	Symbol	to_float		8620198						
ANR	8620478	Symbol	ctx -> bsi . nfchans		8620198						
ANR	8620479	Symbol	* * ch		8620198						
ANR	8620480	Symbol	* ab -> cplcoeffs		8620198						
ANR	8620481	Symbol	* samples		8620198						
ANR	8620482	Symbol	* ab -> bap		8620198						
ANR	8620483	Symbol	* * ab -> cplco		8620198						
ANR	8620484	Symbol	ab -> cplbegf		8620198						
ANR	8620485	Symbol	ab -> cplco		8620198						
ANR	8620486	Symbol	AC3_BSI_LFEON		8620198						
ANR	8620487	Symbol	ab -> cplendf		8620198						
ANR	8620488	Symbol	ab -> chincpl		8620198						
ANR	8620489	Symbol	* sbnd		8620198						
ANR	8620490	Symbol	ab		8620198						
ANR	8620491	Symbol	* ab -> chcoeffs		8620198						
ANR	8620492	Symbol	ctx -> bsi		8620198						
ANR	8620493	Symbol	ab -> cplcoeffs		8620198						
ANR	8620494	Symbol	ch		8620198						
ANR	8620495	Symbol	* ab -> cplco		8620198						
ANR	8620496	Symbol	ctx		8620198						
ANR	8620497	Symbol	* * samples		8620198						
ANR	8620498	Symbol	index		8620198						
ANR	8620499	Symbol	ab -> bap		8620198						
ANR	8620500	Symbol	& ctx -> state		8620198						
ANR	8620501	Symbol	samples		8620198						
ANR	8620502	Symbol	* ctx		8620198						
ANR	8620503	Symbol	sbnd		8620198						
ANR	8620504	Symbol	mantissa		8620198						
ANR	8620505	Symbol	ab -> endmant		8620198						
ANR	8620506	Symbol	* * * ab		8620198						
ANR	8620507	Symbol	* ab -> endmant		8620198						
ANR	8620508	Symbol	* * ab -> dexps		8620198						
ANR	8620509	Symbol	ab -> dexps		8620198						
ANR	8620510	Symbol	* ab -> dexps		8620198						
ANR	8620511	Symbol	ctx -> bsi . flags		8620198						
