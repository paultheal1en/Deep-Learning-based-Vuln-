command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6365634	File	/home/p4ultr4n/workplace/ReVeal/raw_code/parse_short_name_0.c								
ANR	6365635	Function	parse_short_name	1:0:0:990							
ANR	6365636	FunctionDef	"parse_short_name (BDRVVVFATState * s , long_file_name * lfn , direntry_t * direntry)"		6365635	0					
ANR	6365637	CompoundStatement		5:0:93:990	6365635	0					
ANR	6365638	IdentifierDeclStatement	"int i , j ;"	7:4:100:108	6365635	0	True				
ANR	6365639	IdentifierDecl	i		6365635	0					
ANR	6365640	IdentifierDeclType	int		6365635	0					
ANR	6365641	Identifier	i		6365635	1					
ANR	6365642	IdentifierDecl	j		6365635	1					
ANR	6365643	IdentifierDeclType	int		6365635	0					
ANR	6365644	Identifier	j		6365635	1					
ANR	6365645	IfStatement	if ( ! is_short_name ( direntry ) )		6365635	1					
ANR	6365646	Condition	! is_short_name ( direntry )	11:8:121:144	6365635	0	True				
ANR	6365647	UnaryOperationExpression	! is_short_name ( direntry )		6365635	0					
ANR	6365648	UnaryOperator	!		6365635	0					
ANR	6365649	CallExpression	is_short_name ( direntry )		6365635	1					
ANR	6365650	Callee	is_short_name		6365635	0					
ANR	6365651	Identifier	is_short_name		6365635	0					
ANR	6365652	ArgumentList	direntry		6365635	1					
ANR	6365653	Argument	direntry		6365635	0					
ANR	6365654	Identifier	direntry		6365635	0					
ANR	6365655	ReturnStatement	return 1 ;	13:1:149:157	6365635	1	True				
ANR	6365656	PrimaryExpression	1		6365635	0					
ANR	6365657	ForStatement	for ( j = 7 ; j >= 0 && direntry -> name [ j ] == ' ' ; j -- )		6365635	2					
ANR	6365658	ForInit	j = 7 ;	17:9:171:176	6365635	0	True				
ANR	6365659	AssignmentExpression	j = 7		6365635	0		=			
ANR	6365660	Identifier	j		6365635	0					
ANR	6365661	PrimaryExpression	7		6365635	1					
ANR	6365662	Condition	j >= 0 && direntry -> name [ j ] == ' '	17:16:178:211	6365635	1	True				
ANR	6365663	AndExpression	j >= 0 && direntry -> name [ j ] == ' '		6365635	0		&&			
ANR	6365664	RelationalExpression	j >= 0		6365635	0		>=			
ANR	6365665	Identifier	j		6365635	0					
ANR	6365666	PrimaryExpression	0		6365635	1					
ANR	6365667	EqualityExpression	direntry -> name [ j ] == ' '		6365635	1		==			
ANR	6365668	ArrayIndexing	direntry -> name [ j ]		6365635	0					
ANR	6365669	PtrMemberAccess	direntry -> name		6365635	0					
ANR	6365670	Identifier	direntry		6365635	0					
ANR	6365671	Identifier	name		6365635	1					
ANR	6365672	Identifier	j		6365635	1					
ANR	6365673	PrimaryExpression	' '		6365635	1					
ANR	6365674	PostIncDecOperationExpression	j --	17:52:214:216	6365635	2	True				
ANR	6365675	Identifier	j		6365635	0					
ANR	6365676	IncDec	--		6365635	1					
ANR	6365677	ExpressionStatement		17:56:218:218	6365635	3	True				
ANR	6365678	ForStatement	for ( i = 0 ; i <= j ; i ++ )		6365635	3					
ANR	6365679	ForInit	i = 0 ;	19:9:230:235	6365635	0	True				
ANR	6365680	AssignmentExpression	i = 0		6365635	0		=			
ANR	6365681	Identifier	i		6365635	0					
ANR	6365682	PrimaryExpression	0		6365635	1					
ANR	6365683	Condition	i <= j	19:16:237:242	6365635	1	True				
ANR	6365684	RelationalExpression	i <= j		6365635	0		<=			
ANR	6365685	Identifier	i		6365635	0					
ANR	6365686	Identifier	j		6365635	1					
ANR	6365687	PostIncDecOperationExpression	i ++	19:24:245:247	6365635	2	True				
ANR	6365688	Identifier	i		6365635	0					
ANR	6365689	IncDec	++		6365635	1					
ANR	6365690	CompoundStatement		15:29:156:156	6365635	3					
ANR	6365691	IfStatement	if ( direntry -> name [ i ] <= ' ' || direntry -> name [ i ] > 0x7f )		6365635	0					
ANR	6365692	Condition	direntry -> name [ i ] <= ' ' || direntry -> name [ i ] > 0x7f	21:5:258:309	6365635	0	True				
ANR	6365693	OrExpression	direntry -> name [ i ] <= ' ' || direntry -> name [ i ] > 0x7f		6365635	0		||			
ANR	6365694	RelationalExpression	direntry -> name [ i ] <= ' '		6365635	0		<=			
ANR	6365695	ArrayIndexing	direntry -> name [ i ]		6365635	0					
ANR	6365696	PtrMemberAccess	direntry -> name		6365635	0					
ANR	6365697	Identifier	direntry		6365635	0					
ANR	6365698	Identifier	name		6365635	1					
ANR	6365699	Identifier	i		6365635	1					
ANR	6365700	PrimaryExpression	' '		6365635	1					
ANR	6365701	RelationalExpression	direntry -> name [ i ] > 0x7f		6365635	1		>			
ANR	6365702	ArrayIndexing	direntry -> name [ i ]		6365635	0					
ANR	6365703	PtrMemberAccess	direntry -> name		6365635	0					
ANR	6365704	Identifier	direntry		6365635	0					
ANR	6365705	Identifier	name		6365635	1					
ANR	6365706	Identifier	i		6365635	1					
ANR	6365707	PrimaryExpression	0x7f		6365635	1					
ANR	6365708	ReturnStatement	return - 1 ;	23:5:318:327	6365635	1	True				
ANR	6365709	UnaryOperationExpression	- 1		6365635	0					
ANR	6365710	UnaryOperator	-		6365635	0					
ANR	6365711	PrimaryExpression	1		6365635	1					
ANR	6365712	ElseStatement	else		6365635	0					
ANR	6365713	IfStatement	if ( s -> downcase_short_names )		6365635	0					
ANR	6365714	Condition	s -> downcase_short_names	25:10:340:362	6365635	0	True				
ANR	6365715	PtrMemberAccess	s -> downcase_short_names		6365635	0					
ANR	6365716	Identifier	s		6365635	0					
ANR	6365717	Identifier	downcase_short_names		6365635	1					
ANR	6365718	ExpressionStatement	lfn -> name [ i ] = qemu_tolower ( direntry -> name [ i ] )	27:5:371:417	6365635	1	True				
ANR	6365719	AssignmentExpression	lfn -> name [ i ] = qemu_tolower ( direntry -> name [ i ] )		6365635	0		=			
ANR	6365720	ArrayIndexing	lfn -> name [ i ]		6365635	0					
ANR	6365721	PtrMemberAccess	lfn -> name		6365635	0					
ANR	6365722	Identifier	lfn		6365635	0					
ANR	6365723	Identifier	name		6365635	1					
ANR	6365724	Identifier	i		6365635	1					
ANR	6365725	CallExpression	qemu_tolower ( direntry -> name [ i ] )		6365635	1					
ANR	6365726	Callee	qemu_tolower		6365635	0					
ANR	6365727	Identifier	qemu_tolower		6365635	0					
ANR	6365728	ArgumentList	direntry -> name [ i ]		6365635	1					
ANR	6365729	Argument	direntry -> name [ i ]		6365635	0					
ANR	6365730	ArrayIndexing	direntry -> name [ i ]		6365635	0					
ANR	6365731	PtrMemberAccess	direntry -> name		6365635	0					
ANR	6365732	Identifier	direntry		6365635	0					
ANR	6365733	Identifier	name		6365635	1					
ANR	6365734	Identifier	i		6365635	1					
ANR	6365735	ElseStatement	else		6365635	0					
ANR	6365736	ExpressionStatement	lfn -> name [ i ] = direntry -> name [ i ]	31:5:432:464	6365635	0	True				
ANR	6365737	AssignmentExpression	lfn -> name [ i ] = direntry -> name [ i ]		6365635	0		=			
ANR	6365738	ArrayIndexing	lfn -> name [ i ]		6365635	0					
ANR	6365739	PtrMemberAccess	lfn -> name		6365635	0					
ANR	6365740	Identifier	lfn		6365635	0					
ANR	6365741	Identifier	name		6365635	1					
ANR	6365742	Identifier	i		6365635	1					
ANR	6365743	ArrayIndexing	direntry -> name [ i ]		6365635	1					
ANR	6365744	PtrMemberAccess	direntry -> name		6365635	0					
ANR	6365745	Identifier	direntry		6365635	0					
ANR	6365746	Identifier	name		6365635	1					
ANR	6365747	Identifier	i		6365635	1					
ANR	6365748	ForStatement	for ( j = 2 ; j >= 0 && direntry -> extension [ j ] == ' ' ; j -- )		6365635	4					
ANR	6365749	ForInit	j = 2 ;	37:9:485:490	6365635	0	True				
ANR	6365750	AssignmentExpression	j = 2		6365635	0		=			
ANR	6365751	Identifier	j		6365635	0					
ANR	6365752	PrimaryExpression	2		6365635	1					
ANR	6365753	Condition	j >= 0 && direntry -> extension [ j ] == ' '	37:16:492:530	6365635	1	True				
ANR	6365754	AndExpression	j >= 0 && direntry -> extension [ j ] == ' '		6365635	0		&&			
ANR	6365755	RelationalExpression	j >= 0		6365635	0		>=			
ANR	6365756	Identifier	j		6365635	0					
ANR	6365757	PrimaryExpression	0		6365635	1					
ANR	6365758	EqualityExpression	direntry -> extension [ j ] == ' '		6365635	1		==			
ANR	6365759	ArrayIndexing	direntry -> extension [ j ]		6365635	0					
ANR	6365760	PtrMemberAccess	direntry -> extension		6365635	0					
ANR	6365761	Identifier	direntry		6365635	0					
ANR	6365762	Identifier	extension		6365635	1					
ANR	6365763	Identifier	j		6365635	1					
ANR	6365764	PrimaryExpression	' '		6365635	1					
ANR	6365765	PostIncDecOperationExpression	j --	37:57:533:535	6365635	2	True				
ANR	6365766	Identifier	j		6365635	0					
ANR	6365767	IncDec	--		6365635	1					
ANR	6365768	ExpressionStatement		37:61:537:537	6365635	3	True				
ANR	6365769	IfStatement	if ( j >= 0 )		6365635	5					
ANR	6365770	Condition	j >= 0	39:8:548:553	6365635	0	True				
ANR	6365771	RelationalExpression	j >= 0		6365635	0		>=			
ANR	6365772	Identifier	j		6365635	0					
ANR	6365773	PrimaryExpression	0		6365635	1					
ANR	6365774	CompoundStatement		35:16:462:462	6365635	1					
ANR	6365775	ExpressionStatement	lfn -> name [ i ++ ] = '.'	41:1:560:580	6365635	0	True				
ANR	6365776	AssignmentExpression	lfn -> name [ i ++ ] = '.'		6365635	0		=			
ANR	6365777	ArrayIndexing	lfn -> name [ i ++ ]		6365635	0					
ANR	6365778	PtrMemberAccess	lfn -> name		6365635	0					
ANR	6365779	Identifier	lfn		6365635	0					
ANR	6365780	Identifier	name		6365635	1					
ANR	6365781	PostIncDecOperationExpression	i ++		6365635	1					
ANR	6365782	Identifier	i		6365635	0					
ANR	6365783	IncDec	++		6365635	1					
ANR	6365784	PrimaryExpression	'.'		6365635	1					
ANR	6365785	ExpressionStatement	lfn -> name [ i + j + 1 ] = '\\0'	43:1:584:611	6365635	1	True				
ANR	6365786	AssignmentExpression	lfn -> name [ i + j + 1 ] = '\\0'		6365635	0		=			
ANR	6365787	ArrayIndexing	lfn -> name [ i + j + 1 ]		6365635	0					
ANR	6365788	PtrMemberAccess	lfn -> name		6365635	0					
ANR	6365789	Identifier	lfn		6365635	0					
ANR	6365790	Identifier	name		6365635	1					
ANR	6365791	AdditiveExpression	i + j + 1		6365635	1		+			
ANR	6365792	Identifier	i		6365635	0					
ANR	6365793	AdditiveExpression	j + 1		6365635	1		+			
ANR	6365794	Identifier	j		6365635	0					
ANR	6365795	PrimaryExpression	1		6365635	1					
ANR	6365796	PrimaryExpression	'\\0'		6365635	1					
ANR	6365797	ForStatement	for ( ; j >= 0 ; j -- )		6365635	2					
ANR	6365798	Condition	j >= 0	45:7:621:626	6365635	0	True				
ANR	6365799	RelationalExpression	j >= 0		6365635	0		>=			
ANR	6365800	Identifier	j		6365635	0					
ANR	6365801	PrimaryExpression	0		6365635	1					
ANR	6365802	PostIncDecOperationExpression	j --	45:15:629:631	6365635	1	True				
ANR	6365803	Identifier	j		6365635	0					
ANR	6365804	IncDec	--		6365635	1					
ANR	6365805	CompoundStatement		41:20:540:540	6365635	2					
ANR	6365806	IfStatement	if ( direntry -> extension [ j ] <= ' ' || direntry -> extension [ j ] > 0x7f )		6365635	0					
ANR	6365807	Condition	direntry -> extension [ j ] <= ' ' || direntry -> extension [ j ] > 0x7f	47:9:646:707	6365635	0	True				
ANR	6365808	OrExpression	direntry -> extension [ j ] <= ' ' || direntry -> extension [ j ] > 0x7f		6365635	0		||			
ANR	6365809	RelationalExpression	direntry -> extension [ j ] <= ' '		6365635	0		<=			
ANR	6365810	ArrayIndexing	direntry -> extension [ j ]		6365635	0					
ANR	6365811	PtrMemberAccess	direntry -> extension		6365635	0					
ANR	6365812	Identifier	direntry		6365635	0					
ANR	6365813	Identifier	extension		6365635	1					
ANR	6365814	Identifier	j		6365635	1					
ANR	6365815	PrimaryExpression	' '		6365635	1					
ANR	6365816	RelationalExpression	direntry -> extension [ j ] > 0x7f		6365635	1		>			
ANR	6365817	ArrayIndexing	direntry -> extension [ j ]		6365635	0					
ANR	6365818	PtrMemberAccess	direntry -> extension		6365635	0					
ANR	6365819	Identifier	direntry		6365635	0					
ANR	6365820	Identifier	extension		6365635	1					
ANR	6365821	Identifier	j		6365635	1					
ANR	6365822	PrimaryExpression	0x7f		6365635	1					
ANR	6365823	ReturnStatement	return - 2 ;	49:2:713:722	6365635	1	True				
ANR	6365824	UnaryOperationExpression	- 2		6365635	0					
ANR	6365825	UnaryOperator	-		6365635	0					
ANR	6365826	PrimaryExpression	2		6365635	1					
ANR	6365827	ElseStatement	else		6365635	0					
ANR	6365828	IfStatement	if ( s -> downcase_short_names )		6365635	0					
ANR	6365829	Condition	s -> downcase_short_names	51:14:739:761	6365635	0	True				
ANR	6365830	PtrMemberAccess	s -> downcase_short_names		6365635	0					
ANR	6365831	Identifier	s		6365635	0					
ANR	6365832	Identifier	downcase_short_names		6365635	1					
ANR	6365833	ExpressionStatement	lfn -> name [ i + j ] = qemu_tolower ( direntry -> extension [ j ] )	53:2:767:822	6365635	1	True				
ANR	6365834	AssignmentExpression	lfn -> name [ i + j ] = qemu_tolower ( direntry -> extension [ j ] )		6365635	0		=			
ANR	6365835	ArrayIndexing	lfn -> name [ i + j ]		6365635	0					
ANR	6365836	PtrMemberAccess	lfn -> name		6365635	0					
ANR	6365837	Identifier	lfn		6365635	0					
ANR	6365838	Identifier	name		6365635	1					
ANR	6365839	AdditiveExpression	i + j		6365635	1		+			
ANR	6365840	Identifier	i		6365635	0					
ANR	6365841	Identifier	j		6365635	1					
ANR	6365842	CallExpression	qemu_tolower ( direntry -> extension [ j ] )		6365635	1					
ANR	6365843	Callee	qemu_tolower		6365635	0					
ANR	6365844	Identifier	qemu_tolower		6365635	0					
ANR	6365845	ArgumentList	direntry -> extension [ j ]		6365635	1					
ANR	6365846	Argument	direntry -> extension [ j ]		6365635	0					
ANR	6365847	ArrayIndexing	direntry -> extension [ j ]		6365635	0					
ANR	6365848	PtrMemberAccess	direntry -> extension		6365635	0					
ANR	6365849	Identifier	direntry		6365635	0					
ANR	6365850	Identifier	extension		6365635	1					
ANR	6365851	Identifier	j		6365635	1					
ANR	6365852	ElseStatement	else		6365635	0					
ANR	6365853	ExpressionStatement	lfn -> name [ i + j ] = direntry -> extension [ j ]	57:2:838:879	6365635	0	True				
ANR	6365854	AssignmentExpression	lfn -> name [ i + j ] = direntry -> extension [ j ]		6365635	0		=			
ANR	6365855	ArrayIndexing	lfn -> name [ i + j ]		6365635	0					
ANR	6365856	PtrMemberAccess	lfn -> name		6365635	0					
ANR	6365857	Identifier	lfn		6365635	0					
ANR	6365858	Identifier	name		6365635	1					
ANR	6365859	AdditiveExpression	i + j		6365635	1		+			
ANR	6365860	Identifier	i		6365635	0					
ANR	6365861	Identifier	j		6365635	1					
ANR	6365862	ArrayIndexing	direntry -> extension [ j ]		6365635	1					
ANR	6365863	PtrMemberAccess	direntry -> extension		6365635	0					
ANR	6365864	Identifier	direntry		6365635	0					
ANR	6365865	Identifier	extension		6365635	1					
ANR	6365866	Identifier	j		6365635	1					
ANR	6365867	ElseStatement	else		6365635	0					
ANR	6365868	ExpressionStatement	lfn -> name [ i + j + 1 ] = '\\0'	63:1:899:926	6365635	0	True				
ANR	6365869	AssignmentExpression	lfn -> name [ i + j + 1 ] = '\\0'		6365635	0		=			
ANR	6365870	ArrayIndexing	lfn -> name [ i + j + 1 ]		6365635	0					
ANR	6365871	PtrMemberAccess	lfn -> name		6365635	0					
ANR	6365872	Identifier	lfn		6365635	0					
ANR	6365873	Identifier	name		6365635	1					
ANR	6365874	AdditiveExpression	i + j + 1		6365635	1		+			
ANR	6365875	Identifier	i		6365635	0					
ANR	6365876	AdditiveExpression	j + 1		6365635	1		+			
ANR	6365877	Identifier	j		6365635	0					
ANR	6365878	PrimaryExpression	1		6365635	1					
ANR	6365879	PrimaryExpression	'\\0'		6365635	1					
ANR	6365880	ExpressionStatement	lfn -> len = strlen ( ( char * ) lfn -> name )	67:4:935:970	6365635	6	True				
ANR	6365881	AssignmentExpression	lfn -> len = strlen ( ( char * ) lfn -> name )		6365635	0		=			
ANR	6365882	PtrMemberAccess	lfn -> len		6365635	0					
ANR	6365883	Identifier	lfn		6365635	0					
ANR	6365884	Identifier	len		6365635	1					
ANR	6365885	CallExpression	strlen ( ( char * ) lfn -> name )		6365635	1					
ANR	6365886	Callee	strlen		6365635	0					
ANR	6365887	Identifier	strlen		6365635	0					
ANR	6365888	ArgumentList	( char * ) lfn -> name		6365635	1					
ANR	6365889	Argument	( char * ) lfn -> name		6365635	0					
ANR	6365890	CastExpression	( char * ) lfn -> name		6365635	0					
ANR	6365891	CastTarget	char *		6365635	0					
ANR	6365892	PtrMemberAccess	lfn -> name		6365635	1					
ANR	6365893	Identifier	lfn		6365635	0					
ANR	6365894	Identifier	name		6365635	1					
ANR	6365895	ReturnStatement	return 0 ;	71:4:979:987	6365635	7	True				
ANR	6365896	PrimaryExpression	0		6365635	0					
ANR	6365897	ReturnType	static int		6365635	1					
ANR	6365898	Identifier	parse_short_name		6365635	2					
ANR	6365899	ParameterList	"BDRVVVFATState * s , long_file_name * lfn , direntry_t * direntry"		6365635	3					
ANR	6365900	Parameter	BDRVVVFATState * s	1:28:28:44	6365635	0	True				
ANR	6365901	ParameterType	BDRVVVFATState *		6365635	0					
ANR	6365902	Identifier	s		6365635	1					
ANR	6365903	Parameter	long_file_name * lfn	3:1:49:67	6365635	1	True				
ANR	6365904	ParameterType	long_file_name *		6365635	0					
ANR	6365905	Identifier	lfn		6365635	1					
ANR	6365906	Parameter	direntry_t * direntry	3:22:70:89	6365635	2	True				
ANR	6365907	ParameterType	direntry_t *		6365635	0					
ANR	6365908	Identifier	direntry		6365635	1					
ANR	6365909	CFGEntryNode	ENTRY		6365635		True				
ANR	6365910	CFGExitNode	EXIT		6365635		True				
ANR	6365911	Symbol	qemu_tolower		6365635						
ANR	6365912	Symbol	* lfn -> name		6365635						
ANR	6365913	Symbol	s -> downcase_short_names		6365635						
ANR	6365914	Symbol	* direntry -> extension		6365635						
ANR	6365915	Symbol	* direntry -> name		6365635						
ANR	6365916	Symbol	* * lfn		6365635						
ANR	6365917	Symbol	i		6365635						
ANR	6365918	Symbol	lfn -> name		6365635						
ANR	6365919	Symbol	direntry		6365635						
ANR	6365920	Symbol	j		6365635						
ANR	6365921	Symbol	direntry -> name		6365635						
ANR	6365922	Symbol	strlen		6365635						
ANR	6365923	Symbol	* direntry		6365635						
ANR	6365924	Symbol	s		6365635						
ANR	6365925	Symbol	* i		6365635						
ANR	6365926	Symbol	* j		6365635						
ANR	6365927	Symbol	* * direntry		6365635						
ANR	6365928	Symbol	lfn		6365635						
ANR	6365929	Symbol	direntry -> extension		6365635						
ANR	6365930	Symbol	* s		6365635						
ANR	6365931	Symbol	is_short_name		6365635						
ANR	6365932	Symbol	* lfn		6365635						
ANR	6365933	Symbol	lfn -> len		6365635						
