command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8456391	File	/home/p4ultr4n/workplace/ReVeal/raw_code/tlb_info_32_0.c								
ANR	8456392	Function	tlb_info_32	1:0:0:958							
ANR	8456393	FunctionDef	"tlb_info_32 (Monitor * mon , CPUState * env)"		8456392	0					
ANR	8456394	CompoundStatement		3:0:54:958	8456392	0					
ANR	8456395	IdentifierDeclStatement	"int l1 , l2 ;"	5:4:61:71	8456392	0	True				
ANR	8456396	IdentifierDecl	l1		8456392	0					
ANR	8456397	IdentifierDeclType	int		8456392	0					
ANR	8456398	Identifier	l1		8456392	1					
ANR	8456399	IdentifierDecl	l2		8456392	1					
ANR	8456400	IdentifierDeclType	int		8456392	0					
ANR	8456401	Identifier	l2		8456392	1					
ANR	8456402	IdentifierDeclStatement	"uint32_t pgd , pde , pte ;"	7:4:78:100	8456392	1	True				
ANR	8456403	IdentifierDecl	pgd		8456392	0					
ANR	8456404	IdentifierDeclType	uint32_t		8456392	0					
ANR	8456405	Identifier	pgd		8456392	1					
ANR	8456406	IdentifierDecl	pde		8456392	1					
ANR	8456407	IdentifierDeclType	uint32_t		8456392	0					
ANR	8456408	Identifier	pde		8456392	1					
ANR	8456409	IdentifierDecl	pte		8456392	2					
ANR	8456410	IdentifierDeclType	uint32_t		8456392	0					
ANR	8456411	Identifier	pte		8456392	1					
ANR	8456412	ExpressionStatement	pgd = env -> cr [ 3 ] & ~0xfff	11:4:109:134	8456392	2	True				
ANR	8456413	AssignmentExpression	pgd = env -> cr [ 3 ] & ~0xfff		8456392	0		=			
ANR	8456414	Identifier	pgd		8456392	0					
ANR	8456415	BitAndExpression	env -> cr [ 3 ] & ~0xfff		8456392	1		&			
ANR	8456416	ArrayIndexing	env -> cr [ 3 ]		8456392	0					
ANR	8456417	PtrMemberAccess	env -> cr		8456392	0					
ANR	8456418	Identifier	env		8456392	0					
ANR	8456419	Identifier	cr		8456392	1					
ANR	8456420	PrimaryExpression	3		8456392	1					
ANR	8456421	Identifier	~0xfff		8456392	1					
ANR	8456422	ForStatement	for ( l1 = 0 ; l1 < 1024 ; l1 ++ )		8456392	3					
ANR	8456423	ForInit	l1 = 0 ;	13:8:145:151	8456392	0	True				
ANR	8456424	AssignmentExpression	l1 = 0		8456392	0		=			
ANR	8456425	Identifier	l1		8456392	0					
ANR	8456426	PrimaryExpression	0		8456392	1					
ANR	8456427	Condition	l1 < 1024	13:16:153:161	8456392	1	True				
ANR	8456428	RelationalExpression	l1 < 1024		8456392	0		<			
ANR	8456429	Identifier	l1		8456392	0					
ANR	8456430	PrimaryExpression	1024		8456392	1					
ANR	8456431	PostIncDecOperationExpression	l1 ++	13:27:164:167	8456392	2	True				
ANR	8456432	Identifier	l1		8456392	0					
ANR	8456433	IncDec	++		8456392	1					
ANR	8456434	CompoundStatement		11:33:115:115	8456392	3					
ANR	8456435	ExpressionStatement	"cpu_physical_memory_read ( pgd + l1 * 4 , & pde , 4 )"	15:8:181:228	8456392	0	True				
ANR	8456436	CallExpression	"cpu_physical_memory_read ( pgd + l1 * 4 , & pde , 4 )"		8456392	0					
ANR	8456437	Callee	cpu_physical_memory_read		8456392	0					
ANR	8456438	Identifier	cpu_physical_memory_read		8456392	0					
ANR	8456439	ArgumentList	pgd + l1 * 4		8456392	1					
ANR	8456440	Argument	pgd + l1 * 4		8456392	0					
ANR	8456441	AdditiveExpression	pgd + l1 * 4		8456392	0		+			
ANR	8456442	Identifier	pgd		8456392	0					
ANR	8456443	MultiplicativeExpression	l1 * 4		8456392	1		*			
ANR	8456444	Identifier	l1		8456392	0					
ANR	8456445	PrimaryExpression	4		8456392	1					
ANR	8456446	Argument	& pde		8456392	1					
ANR	8456447	UnaryOperationExpression	& pde		8456392	0					
ANR	8456448	UnaryOperator	&		8456392	0					
ANR	8456449	Identifier	pde		8456392	1					
ANR	8456450	Argument	4		8456392	2					
ANR	8456451	PrimaryExpression	4		8456392	0					
ANR	8456452	ExpressionStatement	pde = le32_to_cpu ( pde )	17:8:239:261	8456392	1	True				
ANR	8456453	AssignmentExpression	pde = le32_to_cpu ( pde )		8456392	0		=			
ANR	8456454	Identifier	pde		8456392	0					
ANR	8456455	CallExpression	le32_to_cpu ( pde )		8456392	1					
ANR	8456456	Callee	le32_to_cpu		8456392	0					
ANR	8456457	Identifier	le32_to_cpu		8456392	0					
ANR	8456458	ArgumentList	pde		8456392	1					
ANR	8456459	Argument	pde		8456392	0					
ANR	8456460	Identifier	pde		8456392	0					
ANR	8456461	IfStatement	if ( pde & PG_PRESENT_MASK )		8456392	2					
ANR	8456462	Condition	pde & PG_PRESENT_MASK	19:12:276:296	8456392	0	True				
ANR	8456463	BitAndExpression	pde & PG_PRESENT_MASK		8456392	0		&			
ANR	8456464	Identifier	pde		8456392	0					
ANR	8456465	Identifier	PG_PRESENT_MASK		8456392	1					
ANR	8456466	CompoundStatement		17:35:244:244	8456392	1					
ANR	8456467	IfStatement	if ( ( pde & PG_PSE_MASK ) && ( env -> cr [ 4 ] & CR4_PSE_MASK ) )		8456392	0					
ANR	8456468	Condition	( pde & PG_PSE_MASK ) && ( env -> cr [ 4 ] & CR4_PSE_MASK )	21:16:318:367	8456392	0	True				
ANR	8456469	AndExpression	( pde & PG_PSE_MASK ) && ( env -> cr [ 4 ] & CR4_PSE_MASK )		8456392	0		&&			
ANR	8456470	BitAndExpression	pde & PG_PSE_MASK		8456392	0		&			
ANR	8456471	Identifier	pde		8456392	0					
ANR	8456472	Identifier	PG_PSE_MASK		8456392	1					
ANR	8456473	BitAndExpression	env -> cr [ 4 ] & CR4_PSE_MASK		8456392	1		&			
ANR	8456474	ArrayIndexing	env -> cr [ 4 ]		8456392	0					
ANR	8456475	PtrMemberAccess	env -> cr		8456392	0					
ANR	8456476	Identifier	env		8456392	0					
ANR	8456477	Identifier	cr		8456392	1					
ANR	8456478	PrimaryExpression	4		8456392	1					
ANR	8456479	Identifier	CR4_PSE_MASK		8456392	1					
ANR	8456480	CompoundStatement		19:68:315:315	8456392	1					
ANR	8456481	ExpressionStatement	"print_pte ( mon , ( l1 << 22 ) , pde , ~ ( ( 1 << 21 ) - 1 ) )"	25:16:421:470	8456392	0	True				
ANR	8456482	CallExpression	"print_pte ( mon , ( l1 << 22 ) , pde , ~ ( ( 1 << 21 ) - 1 ) )"		8456392	0					
ANR	8456483	Callee	print_pte		8456392	0					
ANR	8456484	Identifier	print_pte		8456392	0					
ANR	8456485	ArgumentList	mon		8456392	1					
ANR	8456486	Argument	mon		8456392	0					
ANR	8456487	Identifier	mon		8456392	0					
ANR	8456488	Argument	l1 << 22		8456392	1					
ANR	8456489	ShiftExpression	l1 << 22		8456392	0		<<			
ANR	8456490	Identifier	l1		8456392	0					
ANR	8456491	PrimaryExpression	22		8456392	1					
ANR	8456492	Argument	pde		8456392	2					
ANR	8456493	Identifier	pde		8456392	0					
ANR	8456494	Argument	~ ( ( 1 << 21 ) - 1 )		8456392	3					
ANR	8456495	UnaryOperationExpression	~ ( ( 1 << 21 ) - 1 )		8456392	0					
ANR	8456496	UnaryOperator	~		8456392	0					
ANR	8456497	AdditiveExpression	( 1 << 21 ) - 1		8456392	1		-			
ANR	8456498	ShiftExpression	1 << 21		8456392	0		<<			
ANR	8456499	PrimaryExpression	1		8456392	0					
ANR	8456500	PrimaryExpression	21		8456392	1					
ANR	8456501	PrimaryExpression	1		8456392	1					
ANR	8456502	ElseStatement	else		8456392	0					
ANR	8456503	CompoundStatement		25:19:437:437	8456392	0					
ANR	8456504	ForStatement	for ( l2 = 0 ; l2 < 1024 ; l2 ++ )		8456392	0					
ANR	8456505	ForInit	l2 = 0 ;	29:20:515:521	8456392	0	True				
ANR	8456506	AssignmentExpression	l2 = 0		8456392	0		=			
ANR	8456507	Identifier	l2		8456392	0					
ANR	8456508	PrimaryExpression	0		8456392	1					
ANR	8456509	Condition	l2 < 1024	29:28:523:531	8456392	1	True				
ANR	8456510	RelationalExpression	l2 < 1024		8456392	0		<			
ANR	8456511	Identifier	l2		8456392	0					
ANR	8456512	PrimaryExpression	1024		8456392	1					
ANR	8456513	PostIncDecOperationExpression	l2 ++	29:39:534:537	8456392	2	True				
ANR	8456514	Identifier	l2		8456392	0					
ANR	8456515	IncDec	++		8456392	1					
ANR	8456516	CompoundStatement		27:45:485:485	8456392	3					
ANR	8456517	ExpressionStatement	"cpu_physical_memory_read ( ( pde & ~0xfff ) + l2 * 4 , & pte , 4 )"	31:20:563:621	8456392	0	True				
ANR	8456518	CallExpression	"cpu_physical_memory_read ( ( pde & ~0xfff ) + l2 * 4 , & pte , 4 )"		8456392	0					
ANR	8456519	Callee	cpu_physical_memory_read		8456392	0					
ANR	8456520	Identifier	cpu_physical_memory_read		8456392	0					
ANR	8456521	ArgumentList	( pde & ~0xfff ) + l2 * 4		8456392	1					
ANR	8456522	Argument	( pde & ~0xfff ) + l2 * 4		8456392	0					
ANR	8456523	AdditiveExpression	( pde & ~0xfff ) + l2 * 4		8456392	0		+			
ANR	8456524	BitAndExpression	pde & ~0xfff		8456392	0		&			
ANR	8456525	Identifier	pde		8456392	0					
ANR	8456526	Identifier	~0xfff		8456392	1					
ANR	8456527	MultiplicativeExpression	l2 * 4		8456392	1		*			
ANR	8456528	Identifier	l2		8456392	0					
ANR	8456529	PrimaryExpression	4		8456392	1					
ANR	8456530	Argument	& pte		8456392	1					
ANR	8456531	UnaryOperationExpression	& pte		8456392	0					
ANR	8456532	UnaryOperator	&		8456392	0					
ANR	8456533	Identifier	pte		8456392	1					
ANR	8456534	Argument	4		8456392	2					
ANR	8456535	PrimaryExpression	4		8456392	0					
ANR	8456536	ExpressionStatement	pte = le32_to_cpu ( pte )	33:20:644:666	8456392	1	True				
ANR	8456537	AssignmentExpression	pte = le32_to_cpu ( pte )		8456392	0		=			
ANR	8456538	Identifier	pte		8456392	0					
ANR	8456539	CallExpression	le32_to_cpu ( pte )		8456392	1					
ANR	8456540	Callee	le32_to_cpu		8456392	0					
ANR	8456541	Identifier	le32_to_cpu		8456392	0					
ANR	8456542	ArgumentList	pte		8456392	1					
ANR	8456543	Argument	pte		8456392	0					
ANR	8456544	Identifier	pte		8456392	0					
ANR	8456545	IfStatement	if ( pte & PG_PRESENT_MASK )		8456392	2					
ANR	8456546	Condition	pte & PG_PRESENT_MASK	35:24:693:713	8456392	0	True				
ANR	8456547	BitAndExpression	pte & PG_PRESENT_MASK		8456392	0		&			
ANR	8456548	Identifier	pte		8456392	0					
ANR	8456549	Identifier	PG_PRESENT_MASK		8456392	1					
ANR	8456550	CompoundStatement		33:47:661:661	8456392	1					
ANR	8456551	ExpressionStatement	"print_pte ( mon , ( l1 << 22 ) + ( l2 << 12 ) , pte & ~PG_PSE_MASK , ~0xfff )"	37:24:743:880	8456392	0	True				
ANR	8456552	CallExpression	"print_pte ( mon , ( l1 << 22 ) + ( l2 << 12 ) , pte & ~PG_PSE_MASK , ~0xfff )"		8456392	0					
ANR	8456553	Callee	print_pte		8456392	0					
ANR	8456554	Identifier	print_pte		8456392	0					
ANR	8456555	ArgumentList	mon		8456392	1					
ANR	8456556	Argument	mon		8456392	0					
ANR	8456557	Identifier	mon		8456392	0					
ANR	8456558	Argument	( l1 << 22 ) + ( l2 << 12 )		8456392	1					
ANR	8456559	AdditiveExpression	( l1 << 22 ) + ( l2 << 12 )		8456392	0		+			
ANR	8456560	ShiftExpression	l1 << 22		8456392	0		<<			
ANR	8456561	Identifier	l1		8456392	0					
ANR	8456562	PrimaryExpression	22		8456392	1					
ANR	8456563	ShiftExpression	l2 << 12		8456392	1		<<			
ANR	8456564	Identifier	l2		8456392	0					
ANR	8456565	PrimaryExpression	12		8456392	1					
ANR	8456566	Argument	pte & ~PG_PSE_MASK		8456392	2					
ANR	8456567	BitAndExpression	pte & ~PG_PSE_MASK		8456392	0		&			
ANR	8456568	Identifier	pte		8456392	0					
ANR	8456569	Identifier	~PG_PSE_MASK		8456392	1					
ANR	8456570	Argument	~0xfff		8456392	3					
ANR	8456571	Identifier	~0xfff		8456392	0					
ANR	8456572	ReturnType	static void		8456392	1					
ANR	8456573	Identifier	tlb_info_32		8456392	2					
ANR	8456574	ParameterList	"Monitor * mon , CPUState * env"		8456392	3					
ANR	8456575	Parameter	Monitor * mon	1:24:24:35	8456392	0	True				
ANR	8456576	ParameterType	Monitor *		8456392	0					
ANR	8456577	Identifier	mon		8456392	1					
ANR	8456578	Parameter	CPUState * env	1:38:38:50	8456392	1	True				
ANR	8456579	ParameterType	CPUState *		8456392	0					
ANR	8456580	Identifier	env		8456392	1					
ANR	8456581	CFGEntryNode	ENTRY		8456392		True				
ANR	8456582	CFGExitNode	EXIT		8456392		True				
ANR	8456583	Symbol	pte		8456392						
ANR	8456584	Symbol	& pte		8456392						
ANR	8456585	Symbol	* * env		8456392						
ANR	8456586	Symbol	l1		8456392						
ANR	8456587	Symbol	l2		8456392						
ANR	8456588	Symbol	* env		8456392						
ANR	8456589	Symbol	PG_PSE_MASK		8456392						
ANR	8456590	Symbol	env		8456392						
ANR	8456591	Symbol	pgd		8456392						
ANR	8456592	Symbol	mon		8456392						
ANR	8456593	Symbol	pde		8456392						
ANR	8456594	Symbol	* env -> cr		8456392						
ANR	8456595	Symbol	& pde		8456392						
ANR	8456596	Symbol	CR4_PSE_MASK		8456392						
ANR	8456597	Symbol	le32_to_cpu		8456392						
ANR	8456598	Symbol	PG_PRESENT_MASK		8456392						
ANR	8456599	Symbol	~PG_PSE_MASK		8456392						
ANR	8456600	Symbol	env -> cr		8456392						
ANR	8456601	Symbol	~0xfff		8456392						
