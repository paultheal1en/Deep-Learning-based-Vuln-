command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	7249016	File	/home/p4ultr4n/workplace/ReVeal/raw_code/raw_probe_alignment_1.c								
ANR	7249017	Function	raw_probe_alignment	1:0:0:1931							
ANR	7249018	FunctionDef	"raw_probe_alignment (BlockDriverState * bs , int fd , Error * * errp)"		7249017	0					
ANR	7249019	CompoundStatement		3:0:77:1931	7249017	0					
ANR	7249020	IdentifierDeclStatement	BDRVRawState * s = bs -> opaque ;	5:4:84:112	7249017	0	True				
ANR	7249021	IdentifierDecl	* s = bs -> opaque		7249017	0					
ANR	7249022	IdentifierDeclType	BDRVRawState *		7249017	0					
ANR	7249023	Identifier	s		7249017	1					
ANR	7249024	AssignmentExpression	* s = bs -> opaque		7249017	2		=			
ANR	7249025	Identifier	s		7249017	0					
ANR	7249026	PtrMemberAccess	bs -> opaque		7249017	1					
ANR	7249027	Identifier	bs		7249017	0					
ANR	7249028	Identifier	opaque		7249017	1					
ANR	7249029	IdentifierDeclStatement	char * buf ;	7:4:119:128	7249017	1	True				
ANR	7249030	IdentifierDecl	* buf		7249017	0					
ANR	7249031	IdentifierDeclType	char *		7249017	0					
ANR	7249032	Identifier	buf		7249017	1					
ANR	7249033	IfStatement	if ( bs -> sg || ! s -> needs_alignment )		7249017	2					
ANR	7249034	Condition	bs -> sg || ! s -> needs_alignment	15:8:265:293	7249017	0	True				
ANR	7249035	OrExpression	bs -> sg || ! s -> needs_alignment		7249017	0		||			
ANR	7249036	PtrMemberAccess	bs -> sg		7249017	0					
ANR	7249037	Identifier	bs		7249017	0					
ANR	7249038	Identifier	sg		7249017	1					
ANR	7249039	UnaryOperationExpression	! s -> needs_alignment		7249017	1					
ANR	7249040	UnaryOperator	!		7249017	0					
ANR	7249041	PtrMemberAccess	s -> needs_alignment		7249017	1					
ANR	7249042	Identifier	s		7249017	0					
ANR	7249043	Identifier	needs_alignment		7249017	1					
ANR	7249044	CompoundStatement		13:39:218:218	7249017	1					
ANR	7249045	ExpressionStatement	bs -> request_alignment = 1	17:8:307:332	7249017	0	True				
ANR	7249046	AssignmentExpression	bs -> request_alignment = 1		7249017	0		=			
ANR	7249047	PtrMemberAccess	bs -> request_alignment		7249017	0					
ANR	7249048	Identifier	bs		7249017	0					
ANR	7249049	Identifier	request_alignment		7249017	1					
ANR	7249050	PrimaryExpression	1		7249017	1					
ANR	7249051	ExpressionStatement	s -> buf_align = 1	19:8:343:359	7249017	1	True				
ANR	7249052	AssignmentExpression	s -> buf_align = 1		7249017	0		=			
ANR	7249053	PtrMemberAccess	s -> buf_align		7249017	0					
ANR	7249054	Identifier	s		7249017	0					
ANR	7249055	Identifier	buf_align		7249017	1					
ANR	7249056	PrimaryExpression	1		7249017	1					
ANR	7249057	ReturnStatement	return ;	21:8:370:376	7249017	2	True				
ANR	7249058	ExpressionStatement	bs -> request_alignment = 0	27:4:392:417	7249017	3	True				
ANR	7249059	AssignmentExpression	bs -> request_alignment = 0		7249017	0		=			
ANR	7249060	PtrMemberAccess	bs -> request_alignment		7249017	0					
ANR	7249061	Identifier	bs		7249017	0					
ANR	7249062	Identifier	request_alignment		7249017	1					
ANR	7249063	PrimaryExpression	0		7249017	1					
ANR	7249064	ExpressionStatement	s -> buf_align = 0	29:4:424:440	7249017	4	True				
ANR	7249065	AssignmentExpression	s -> buf_align = 0		7249017	0		=			
ANR	7249066	PtrMemberAccess	s -> buf_align		7249017	0					
ANR	7249067	Identifier	s		7249017	0					
ANR	7249068	Identifier	buf_align		7249017	1					
ANR	7249069	PrimaryExpression	0		7249017	1					
ANR	7249070	IfStatement	"if ( probe_logical_blocksize ( fd , & bs -> request_alignment ) < 0 )"		7249017	5					
ANR	7249071	Condition	"probe_logical_blocksize ( fd , & bs -> request_alignment ) < 0"	33:8:520:574	7249017	0	True				
ANR	7249072	RelationalExpression	"probe_logical_blocksize ( fd , & bs -> request_alignment ) < 0"		7249017	0		<			
ANR	7249073	CallExpression	"probe_logical_blocksize ( fd , & bs -> request_alignment )"		7249017	0					
ANR	7249074	Callee	probe_logical_blocksize		7249017	0					
ANR	7249075	Identifier	probe_logical_blocksize		7249017	0					
ANR	7249076	ArgumentList	fd		7249017	1					
ANR	7249077	Argument	fd		7249017	0					
ANR	7249078	Identifier	fd		7249017	0					
ANR	7249079	Argument	& bs -> request_alignment		7249017	1					
ANR	7249080	UnaryOperationExpression	& bs -> request_alignment		7249017	0					
ANR	7249081	UnaryOperator	&		7249017	0					
ANR	7249082	PtrMemberAccess	bs -> request_alignment		7249017	1					
ANR	7249083	Identifier	bs		7249017	0					
ANR	7249084	Identifier	request_alignment		7249017	1					
ANR	7249085	PrimaryExpression	0		7249017	1					
ANR	7249086	CompoundStatement		31:65:499:499	7249017	1					
ANR	7249087	ExpressionStatement	bs -> request_alignment = 0	35:8:588:613	7249017	0	True				
ANR	7249088	AssignmentExpression	bs -> request_alignment = 0		7249017	0		=			
ANR	7249089	PtrMemberAccess	bs -> request_alignment		7249017	0					
ANR	7249090	Identifier	bs		7249017	0					
ANR	7249091	Identifier	request_alignment		7249017	1					
ANR	7249092	PrimaryExpression	0		7249017	1					
ANR	7249093	IfStatement	if ( s -> is_xfs )		7249017	6					
ANR	7249094	Condition	s -> is_xfs	41:8:650:658	7249017	0	True				
ANR	7249095	PtrMemberAccess	s -> is_xfs		7249017	0					
ANR	7249096	Identifier	s		7249017	0					
ANR	7249097	Identifier	is_xfs		7249017	1					
ANR	7249098	CompoundStatement		41:8:594:611	7249017	1					
ANR	7249099	IdentifierDeclStatement	struct dioattr da ;	43:8:672:689	7249017	0	True				
ANR	7249100	IdentifierDecl	da		7249017	0					
ANR	7249101	IdentifierDeclType	struct dioattr		7249017	0					
ANR	7249102	Identifier	da		7249017	1					
ANR	7249103	IfStatement	"if ( xfsctl ( NULL , fd , XFS_IOC_DIOINFO , & da ) >= 0 )"		7249017	1					
ANR	7249104	Condition	"xfsctl ( NULL , fd , XFS_IOC_DIOINFO , & da ) >= 0"	45:12:704:746	7249017	0	True				
ANR	7249105	RelationalExpression	"xfsctl ( NULL , fd , XFS_IOC_DIOINFO , & da ) >= 0"		7249017	0		>=			
ANR	7249106	CallExpression	"xfsctl ( NULL , fd , XFS_IOC_DIOINFO , & da )"		7249017	0					
ANR	7249107	Callee	xfsctl		7249017	0					
ANR	7249108	Identifier	xfsctl		7249017	0					
ANR	7249109	ArgumentList	NULL		7249017	1					
ANR	7249110	Argument	NULL		7249017	0					
ANR	7249111	Identifier	NULL		7249017	0					
ANR	7249112	Argument	fd		7249017	1					
ANR	7249113	Identifier	fd		7249017	0					
ANR	7249114	Argument	XFS_IOC_DIOINFO		7249017	2					
ANR	7249115	Identifier	XFS_IOC_DIOINFO		7249017	0					
ANR	7249116	Argument	& da		7249017	3					
ANR	7249117	UnaryOperationExpression	& da		7249017	0					
ANR	7249118	UnaryOperator	&		7249017	0					
ANR	7249119	Identifier	da		7249017	1					
ANR	7249120	PrimaryExpression	0		7249017	1					
ANR	7249121	CompoundStatement		43:57:671:671	7249017	1					
ANR	7249122	ExpressionStatement	bs -> request_alignment = da . d_miniosz	47:12:764:800	7249017	0	True				
ANR	7249123	AssignmentExpression	bs -> request_alignment = da . d_miniosz		7249017	0		=			
ANR	7249124	PtrMemberAccess	bs -> request_alignment		7249017	0					
ANR	7249125	Identifier	bs		7249017	0					
ANR	7249126	Identifier	request_alignment		7249017	1					
ANR	7249127	MemberAccess	da . d_miniosz		7249017	1					
ANR	7249128	Identifier	da		7249017	0					
ANR	7249129	Identifier	d_miniosz		7249017	1					
ANR	7249130	IfStatement	if ( ! s -> buf_align )		7249017	7					
ANR	7249131	Condition	! s -> buf_align	63:8:1021:1033	7249017	0	True				
ANR	7249132	UnaryOperationExpression	! s -> buf_align		7249017	0					
ANR	7249133	UnaryOperator	!		7249017	0					
ANR	7249134	PtrMemberAccess	s -> buf_align		7249017	1					
ANR	7249135	Identifier	s		7249017	0					
ANR	7249136	Identifier	buf_align		7249017	1					
ANR	7249137	CompoundStatement		63:8:969:981	7249017	1					
ANR	7249138	IdentifierDeclStatement	size_t align ;	65:8:1047:1059	7249017	0	True				
ANR	7249139	IdentifierDecl	align		7249017	0					
ANR	7249140	IdentifierDeclType	size_t		7249017	0					
ANR	7249141	Identifier	align		7249017	1					
ANR	7249142	ExpressionStatement	"buf = qemu_memalign ( MAX_BLOCKSIZE , 2 * MAX_BLOCKSIZE )"	67:8:1070:1123	7249017	1	True				
ANR	7249143	AssignmentExpression	"buf = qemu_memalign ( MAX_BLOCKSIZE , 2 * MAX_BLOCKSIZE )"		7249017	0		=			
ANR	7249144	Identifier	buf		7249017	0					
ANR	7249145	CallExpression	"qemu_memalign ( MAX_BLOCKSIZE , 2 * MAX_BLOCKSIZE )"		7249017	1					
ANR	7249146	Callee	qemu_memalign		7249017	0					
ANR	7249147	Identifier	qemu_memalign		7249017	0					
ANR	7249148	ArgumentList	MAX_BLOCKSIZE		7249017	1					
ANR	7249149	Argument	MAX_BLOCKSIZE		7249017	0					
ANR	7249150	Identifier	MAX_BLOCKSIZE		7249017	0					
ANR	7249151	Argument	2 * MAX_BLOCKSIZE		7249017	1					
ANR	7249152	MultiplicativeExpression	2 * MAX_BLOCKSIZE		7249017	0		*			
ANR	7249153	PrimaryExpression	2		7249017	0					
ANR	7249154	Identifier	MAX_BLOCKSIZE		7249017	1					
ANR	7249155	ForStatement	for ( align = 512 ; align <= MAX_BLOCKSIZE ; align <<= 1 )		7249017	2					
ANR	7249156	ForInit	align = 512 ;	69:13:1139:1150	7249017	0	True				
ANR	7249157	AssignmentExpression	align = 512		7249017	0		=			
ANR	7249158	Identifier	align		7249017	0					
ANR	7249159	PrimaryExpression	512		7249017	1					
ANR	7249160	Condition	align <= MAX_BLOCKSIZE	69:26:1152:1173	7249017	1	True				
ANR	7249161	RelationalExpression	align <= MAX_BLOCKSIZE		7249017	0		<=			
ANR	7249162	Identifier	align		7249017	0					
ANR	7249163	Identifier	MAX_BLOCKSIZE		7249017	1					
ANR	7249164	AssignmentExpression	align <<= 1	69:50:1176:1186	7249017	2	True	<<=			
ANR	7249165	Identifier	align		7249017	0					
ANR	7249166	PrimaryExpression	1		7249017	1					
ANR	7249167	CompoundStatement		67:63:1111:1111	7249017	3					
ANR	7249168	IfStatement	"if ( pread ( fd , buf + align , MAX_BLOCKSIZE , 0 ) >= 0 )"		7249017	0					
ANR	7249169	Condition	"pread ( fd , buf + align , MAX_BLOCKSIZE , 0 ) >= 0"	71:16:1208:1252	7249017	0	True				
ANR	7249170	RelationalExpression	"pread ( fd , buf + align , MAX_BLOCKSIZE , 0 ) >= 0"		7249017	0		>=			
ANR	7249171	CallExpression	"pread ( fd , buf + align , MAX_BLOCKSIZE , 0 )"		7249017	0					
ANR	7249172	Callee	pread		7249017	0					
ANR	7249173	Identifier	pread		7249017	0					
ANR	7249174	ArgumentList	fd		7249017	1					
ANR	7249175	Argument	fd		7249017	0					
ANR	7249176	Identifier	fd		7249017	0					
ANR	7249177	Argument	buf + align		7249017	1					
ANR	7249178	AdditiveExpression	buf + align		7249017	0		+			
ANR	7249179	Identifier	buf		7249017	0					
ANR	7249180	Identifier	align		7249017	1					
ANR	7249181	Argument	MAX_BLOCKSIZE		7249017	2					
ANR	7249182	Identifier	MAX_BLOCKSIZE		7249017	0					
ANR	7249183	Argument	0		7249017	3					
ANR	7249184	PrimaryExpression	0		7249017	0					
ANR	7249185	PrimaryExpression	0		7249017	1					
ANR	7249186	CompoundStatement		69:63:1177:1177	7249017	1					
ANR	7249187	ExpressionStatement	s -> buf_align = align	73:16:1274:1294	7249017	0	True				
ANR	7249188	AssignmentExpression	s -> buf_align = align		7249017	0		=			
ANR	7249189	PtrMemberAccess	s -> buf_align		7249017	0					
ANR	7249190	Identifier	s		7249017	0					
ANR	7249191	Identifier	buf_align		7249017	1					
ANR	7249192	Identifier	align		7249017	1					
ANR	7249193	BreakStatement	break ;	75:16:1313:1318	7249017	1	True				
ANR	7249194	ExpressionStatement	qemu_vfree ( buf )	81:8:1355:1370	7249017	3	True				
ANR	7249195	CallExpression	qemu_vfree ( buf )		7249017	0					
ANR	7249196	Callee	qemu_vfree		7249017	0					
ANR	7249197	Identifier	qemu_vfree		7249017	0					
ANR	7249198	ArgumentList	buf		7249017	1					
ANR	7249199	Argument	buf		7249017	0					
ANR	7249200	Identifier	buf		7249017	0					
ANR	7249201	IfStatement	if ( ! bs -> request_alignment )		7249017	8					
ANR	7249202	Condition	! bs -> request_alignment	87:8:1390:1411	7249017	0	True				
ANR	7249203	UnaryOperationExpression	! bs -> request_alignment		7249017	0					
ANR	7249204	UnaryOperator	!		7249017	0					
ANR	7249205	PtrMemberAccess	bs -> request_alignment		7249017	1					
ANR	7249206	Identifier	bs		7249017	0					
ANR	7249207	Identifier	request_alignment		7249017	1					
ANR	7249208	CompoundStatement		87:8:1347:1359	7249017	1					
ANR	7249209	IdentifierDeclStatement	size_t align ;	89:8:1425:1437	7249017	0	True				
ANR	7249210	IdentifierDecl	align		7249017	0					
ANR	7249211	IdentifierDeclType	size_t		7249017	0					
ANR	7249212	Identifier	align		7249017	1					
ANR	7249213	ExpressionStatement	"buf = qemu_memalign ( s -> buf_align , MAX_BLOCKSIZE )"	91:8:1448:1496	7249017	1	True				
ANR	7249214	AssignmentExpression	"buf = qemu_memalign ( s -> buf_align , MAX_BLOCKSIZE )"		7249017	0		=			
ANR	7249215	Identifier	buf		7249017	0					
ANR	7249216	CallExpression	"qemu_memalign ( s -> buf_align , MAX_BLOCKSIZE )"		7249017	1					
ANR	7249217	Callee	qemu_memalign		7249017	0					
ANR	7249218	Identifier	qemu_memalign		7249017	0					
ANR	7249219	ArgumentList	s -> buf_align		7249017	1					
ANR	7249220	Argument	s -> buf_align		7249017	0					
ANR	7249221	PtrMemberAccess	s -> buf_align		7249017	0					
ANR	7249222	Identifier	s		7249017	0					
ANR	7249223	Identifier	buf_align		7249017	1					
ANR	7249224	Argument	MAX_BLOCKSIZE		7249017	1					
ANR	7249225	Identifier	MAX_BLOCKSIZE		7249017	0					
ANR	7249226	ForStatement	for ( align = 512 ; align <= MAX_BLOCKSIZE ; align <<= 1 )		7249017	2					
ANR	7249227	ForInit	align = 512 ;	93:13:1512:1523	7249017	0	True				
ANR	7249228	AssignmentExpression	align = 512		7249017	0		=			
ANR	7249229	Identifier	align		7249017	0					
ANR	7249230	PrimaryExpression	512		7249017	1					
ANR	7249231	Condition	align <= MAX_BLOCKSIZE	93:26:1525:1546	7249017	1	True				
ANR	7249232	RelationalExpression	align <= MAX_BLOCKSIZE		7249017	0		<=			
ANR	7249233	Identifier	align		7249017	0					
ANR	7249234	Identifier	MAX_BLOCKSIZE		7249017	1					
ANR	7249235	AssignmentExpression	align <<= 1	93:50:1549:1559	7249017	2	True	<<=			
ANR	7249236	Identifier	align		7249017	0					
ANR	7249237	PrimaryExpression	1		7249017	1					
ANR	7249238	CompoundStatement		91:63:1484:1484	7249017	3					
ANR	7249239	IfStatement	"if ( pread ( fd , buf , align , 0 ) >= 0 )"		7249017	0					
ANR	7249240	Condition	"pread ( fd , buf , align , 0 ) >= 0"	95:16:1581:1609	7249017	0	True				
ANR	7249241	RelationalExpression	"pread ( fd , buf , align , 0 ) >= 0"		7249017	0		>=			
ANR	7249242	CallExpression	"pread ( fd , buf , align , 0 )"		7249017	0					
ANR	7249243	Callee	pread		7249017	0					
ANR	7249244	Identifier	pread		7249017	0					
ANR	7249245	ArgumentList	fd		7249017	1					
ANR	7249246	Argument	fd		7249017	0					
ANR	7249247	Identifier	fd		7249017	0					
ANR	7249248	Argument	buf		7249017	1					
ANR	7249249	Identifier	buf		7249017	0					
ANR	7249250	Argument	align		7249017	2					
ANR	7249251	Identifier	align		7249017	0					
ANR	7249252	Argument	0		7249017	3					
ANR	7249253	PrimaryExpression	0		7249017	0					
ANR	7249254	PrimaryExpression	0		7249017	1					
ANR	7249255	CompoundStatement		93:47:1534:1534	7249017	1					
ANR	7249256	ExpressionStatement	bs -> request_alignment = align	97:16:1631:1660	7249017	0	True				
ANR	7249257	AssignmentExpression	bs -> request_alignment = align		7249017	0		=			
ANR	7249258	PtrMemberAccess	bs -> request_alignment		7249017	0					
ANR	7249259	Identifier	bs		7249017	0					
ANR	7249260	Identifier	request_alignment		7249017	1					
ANR	7249261	Identifier	align		7249017	1					
ANR	7249262	BreakStatement	break ;	99:16:1679:1684	7249017	1	True				
ANR	7249263	ExpressionStatement	qemu_vfree ( buf )	105:8:1721:1736	7249017	3	True				
ANR	7249264	CallExpression	qemu_vfree ( buf )		7249017	0					
ANR	7249265	Callee	qemu_vfree		7249017	0					
ANR	7249266	Identifier	qemu_vfree		7249017	0					
ANR	7249267	ArgumentList	buf		7249017	1					
ANR	7249268	Argument	buf		7249017	0					
ANR	7249269	Identifier	buf		7249017	0					
ANR	7249270	IfStatement	if ( ! s -> buf_align || ! bs -> request_alignment )		7249017	9					
ANR	7249271	Condition	! s -> buf_align || ! bs -> request_alignment	111:8:1756:1794	7249017	0	True				
ANR	7249272	OrExpression	! s -> buf_align || ! bs -> request_alignment		7249017	0		||			
ANR	7249273	UnaryOperationExpression	! s -> buf_align		7249017	0					
ANR	7249274	UnaryOperator	!		7249017	0					
ANR	7249275	PtrMemberAccess	s -> buf_align		7249017	1					
ANR	7249276	Identifier	s		7249017	0					
ANR	7249277	Identifier	buf_align		7249017	1					
ANR	7249278	UnaryOperationExpression	! bs -> request_alignment		7249017	1					
ANR	7249279	UnaryOperator	!		7249017	0					
ANR	7249280	PtrMemberAccess	bs -> request_alignment		7249017	1					
ANR	7249281	Identifier	bs		7249017	0					
ANR	7249282	Identifier	request_alignment		7249017	1					
ANR	7249283	CompoundStatement		109:49:1719:1719	7249017	1					
ANR	7249284	Statement	error_setg	113:8:1808:1817	7249017	0	True				
ANR	7249285	Statement	(	113:18:1818:1818	7249017	1	True				
ANR	7249286	Statement	errp	113:19:1819:1822	7249017	2	True				
ANR	7249287	Statement	","	113:23:1823:1823	7249017	3	True				
ANR	7249288	Statement	"""Could not find working O_DIRECT alignment. """	113:25:1825:1869	7249017	4	True				
ANR	7249289	Statement	"""Try cache.direct=off."""	115:25:1897:1919	7249017	5	True				
ANR	7249290	Statement	)	115:48:1920:1920	7249017	6	True				
ANR	7249291	ExpressionStatement		115:49:1921:1921	7249017	7	True				
ANR	7249292	ReturnType	static void		7249017	1					
ANR	7249293	Identifier	raw_probe_alignment		7249017	2					
ANR	7249294	ParameterList	"BlockDriverState * bs , int fd , Error * * errp"		7249017	3					
ANR	7249295	Parameter	BlockDriverState * bs	1:32:32:51	7249017	0	True				
ANR	7249296	ParameterType	BlockDriverState *		7249017	0					
ANR	7249297	Identifier	bs		7249017	1					
ANR	7249298	Parameter	int fd	1:54:54:59	7249017	1	True				
ANR	7249299	ParameterType	int		7249017	0					
ANR	7249300	Identifier	fd		7249017	1					
ANR	7249301	Parameter	Error * * errp	1:62:62:73	7249017	2	True				
ANR	7249302	ParameterType	Error * *		7249017	0					
ANR	7249303	Identifier	errp		7249017	1					
ANR	7249304	CFGEntryNode	ENTRY		7249017		True				
ANR	7249305	CFGExitNode	EXIT		7249017		True				
ANR	7249306	Symbol	errp		7249017						
ANR	7249307	Symbol	bs -> sg		7249017						
ANR	7249308	Symbol	align		7249017						
ANR	7249309	Symbol	bs		7249017						
ANR	7249310	Symbol	* bs		7249017						
ANR	7249311	Symbol	probe_logical_blocksize		7249017						
ANR	7249312	Symbol	pread		7249017						
ANR	7249313	Symbol	XFS_IOC_DIOINFO		7249017						
ANR	7249314	Symbol	s -> buf_align		7249017						
ANR	7249315	Symbol	& bs -> request_alignment		7249017						
ANR	7249316	Symbol	s -> needs_alignment		7249017						
ANR	7249317	Symbol	s -> is_xfs		7249017						
ANR	7249318	Symbol	NULL		7249017						
ANR	7249319	Symbol	bs -> opaque		7249017						
ANR	7249320	Symbol	& da		7249017						
ANR	7249321	Symbol	xfsctl		7249017						
ANR	7249322	Symbol	da . d_miniosz		7249017						
ANR	7249323	Symbol	buf		7249017						
ANR	7249324	Symbol	qemu_memalign		7249017						
ANR	7249325	Symbol	s		7249017						
ANR	7249326	Symbol	bs -> request_alignment		7249017						
ANR	7249327	Symbol	MAX_BLOCKSIZE		7249017						
ANR	7249328	Symbol	* s		7249017						
ANR	7249329	Symbol	da		7249017						
ANR	7249330	Symbol	fd		7249017						
