command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5680026	File	/home/p4ultr4n/workplace/ReVeal/raw_code/mp3_header_compress_0.c								
ANR	5680027	Function	mp3_header_compress	1:0:0:1335							
ANR	5680028	FunctionDef	"mp3_header_compress (AVBitStreamFilterContext * bsfc , AVCodecContext * avctx , const char * args , uint8_t * * poutbuf , int * poutbuf_size , const uint8_t * buf , int buf_size , int keyframe)"		5680027	0					
ANR	5680029	CompoundStatement		5:68:233:1335	5680027	0					
ANR	5680030	IdentifierDeclStatement	uint32_t header ;	7:4:240:255	5680027	0	True				
ANR	5680031	IdentifierDecl	header		5680027	0					
ANR	5680032	IdentifierDeclType	uint32_t		5680027	0					
ANR	5680033	Identifier	header		5680027	1					
ANR	5680034	IdentifierDeclStatement	int mode_extension ;	9:4:262:280	5680027	1	True				
ANR	5680035	IdentifierDecl	mode_extension		5680027	0					
ANR	5680036	IdentifierDeclType	int		5680027	0					
ANR	5680037	Identifier	mode_extension		5680027	1					
ANR	5680038	IfStatement	if ( avctx -> strict_std_compliance > FF_COMPLIANCE_EXPERIMENTAL )		5680027	2					
ANR	5680039	Condition	avctx -> strict_std_compliance > FF_COMPLIANCE_EXPERIMENTAL	13:7:292:348	5680027	0	True				
ANR	5680040	RelationalExpression	avctx -> strict_std_compliance > FF_COMPLIANCE_EXPERIMENTAL		5680027	0		>			
ANR	5680041	PtrMemberAccess	avctx -> strict_std_compliance		5680027	0					
ANR	5680042	Identifier	avctx		5680027	0					
ANR	5680043	Identifier	strict_std_compliance		5680027	1					
ANR	5680044	Identifier	FF_COMPLIANCE_EXPERIMENTAL		5680027	1					
ANR	5680045	CompoundStatement		9:65:116:116	5680027	1					
ANR	5680046	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""not standards compliant\\n"" )"	15:8:361:417	5680027	0	True				
ANR	5680047	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""not standards compliant\\n"" )"		5680027	0					
ANR	5680048	Callee	av_log		5680027	0					
ANR	5680049	Identifier	av_log		5680027	0					
ANR	5680050	ArgumentList	avctx		5680027	1					
ANR	5680051	Argument	avctx		5680027	0					
ANR	5680052	Identifier	avctx		5680027	0					
ANR	5680053	Argument	AV_LOG_ERROR		5680027	1					
ANR	5680054	Identifier	AV_LOG_ERROR		5680027	0					
ANR	5680055	Argument	"""not standards compliant\\n"""		5680027	2					
ANR	5680056	PrimaryExpression	"""not standards compliant\\n"""		5680027	0					
ANR	5680057	ReturnStatement	return - 1 ;	17:8:428:437	5680027	1	True				
ANR	5680058	UnaryOperationExpression	- 1		5680027	0					
ANR	5680059	UnaryOperator	-		5680027	0					
ANR	5680060	PrimaryExpression	1		5680027	1					
ANR	5680061	ExpressionStatement	header = ( buf [ 0 ] << 24 ) | ( buf [ 1 ] << 16 ) | ( buf [ 2 ] << 8 ) | buf [ 3 ]	23:4:453:518	5680027	3	True				
ANR	5680062	AssignmentExpression	header = ( buf [ 0 ] << 24 ) | ( buf [ 1 ] << 16 ) | ( buf [ 2 ] << 8 ) | buf [ 3 ]		5680027	0		=			
ANR	5680063	Identifier	header		5680027	0					
ANR	5680064	InclusiveOrExpression	( buf [ 0 ] << 24 ) | ( buf [ 1 ] << 16 ) | ( buf [ 2 ] << 8 ) | buf [ 3 ]		5680027	1		|			
ANR	5680065	ShiftExpression	buf [ 0 ] << 24		5680027	0		<<			
ANR	5680066	ArrayIndexing	buf [ 0 ]		5680027	0					
ANR	5680067	Identifier	buf		5680027	0					
ANR	5680068	PrimaryExpression	0		5680027	1					
ANR	5680069	PrimaryExpression	24		5680027	1					
ANR	5680070	InclusiveOrExpression	( buf [ 1 ] << 16 ) | ( buf [ 2 ] << 8 ) | buf [ 3 ]		5680027	1		|			
ANR	5680071	ShiftExpression	buf [ 1 ] << 16		5680027	0		<<			
ANR	5680072	ArrayIndexing	buf [ 1 ]		5680027	0					
ANR	5680073	Identifier	buf		5680027	0					
ANR	5680074	PrimaryExpression	1		5680027	1					
ANR	5680075	PrimaryExpression	16		5680027	1					
ANR	5680076	InclusiveOrExpression	( buf [ 2 ] << 8 ) | buf [ 3 ]		5680027	1		|			
ANR	5680077	ShiftExpression	buf [ 2 ] << 8		5680027	0		<<			
ANR	5680078	ArrayIndexing	buf [ 2 ]		5680027	0					
ANR	5680079	Identifier	buf		5680027	0					
ANR	5680080	PrimaryExpression	2		5680027	1					
ANR	5680081	PrimaryExpression	8		5680027	1					
ANR	5680082	ArrayIndexing	buf [ 3 ]		5680027	1					
ANR	5680083	Identifier	buf		5680027	0					
ANR	5680084	PrimaryExpression	3		5680027	1					
ANR	5680085	ExpressionStatement	mode_extension = ( header >> 4 ) & 3	25:4:525:554	5680027	4	True				
ANR	5680086	AssignmentExpression	mode_extension = ( header >> 4 ) & 3		5680027	0		=			
ANR	5680087	Identifier	mode_extension		5680027	0					
ANR	5680088	BitAndExpression	( header >> 4 ) & 3		5680027	1		&			
ANR	5680089	ShiftExpression	header >> 4		5680027	0		>>			
ANR	5680090	Identifier	header		5680027	0					
ANR	5680091	PrimaryExpression	4		5680027	1					
ANR	5680092	PrimaryExpression	3		5680027	1					
ANR	5680093	IfStatement	if ( ff_mpa_check_header ( header ) < 0 || ( header & 0x70000 ) != 0x30000 )		5680027	5					
ANR	5680094	Condition	ff_mpa_check_header ( header ) < 0 || ( header & 0x70000 ) != 0x30000	29:7:566:627	5680027	0	True				
ANR	5680095	OrExpression	ff_mpa_check_header ( header ) < 0 || ( header & 0x70000 ) != 0x30000		5680027	0		||			
ANR	5680096	RelationalExpression	ff_mpa_check_header ( header ) < 0		5680027	0		<			
ANR	5680097	CallExpression	ff_mpa_check_header ( header )		5680027	0					
ANR	5680098	Callee	ff_mpa_check_header		5680027	0					
ANR	5680099	Identifier	ff_mpa_check_header		5680027	0					
ANR	5680100	ArgumentList	header		5680027	1					
ANR	5680101	Argument	header		5680027	0					
ANR	5680102	Identifier	header		5680027	0					
ANR	5680103	PrimaryExpression	0		5680027	1					
ANR	5680104	EqualityExpression	( header & 0x70000 ) != 0x30000		5680027	1		!=			
ANR	5680105	BitAndExpression	header & 0x70000		5680027	0		&			
ANR	5680106	Identifier	header		5680027	0					
ANR	5680107	PrimaryExpression	0x70000		5680027	1					
ANR	5680108	PrimaryExpression	0x30000		5680027	1					
ANR	5680109	CompoundStatement		25:70:395:395	5680027	1					
ANR	5680110	ExpressionStatement	* poutbuf = ( uint8_t * ) buf	31:8:640:665	5680027	0	True				
ANR	5680111	AssignmentExpression	* poutbuf = ( uint8_t * ) buf		5680027	0		=			
ANR	5680112	UnaryOperationExpression	* poutbuf		5680027	0					
ANR	5680113	UnaryOperator	*		5680027	0					
ANR	5680114	Identifier	poutbuf		5680027	1					
ANR	5680115	CastExpression	( uint8_t * ) buf		5680027	1					
ANR	5680116	CastTarget	uint8_t *		5680027	0					
ANR	5680117	Identifier	buf		5680027	1					
ANR	5680118	ExpressionStatement	* poutbuf_size = buf_size	33:8:676:699	5680027	1	True				
ANR	5680119	AssignmentExpression	* poutbuf_size = buf_size		5680027	0		=			
ANR	5680120	UnaryOperationExpression	* poutbuf_size		5680027	0					
ANR	5680121	UnaryOperator	*		5680027	0					
ANR	5680122	Identifier	poutbuf_size		5680027	1					
ANR	5680123	Identifier	buf_size		5680027	1					
ANR	5680124	ExpressionStatement	"av_log ( avctx , AV_LOG_INFO , ""cannot compress %08X\\n"" , header )"	37:8:712:772	5680027	2	True				
ANR	5680125	CallExpression	"av_log ( avctx , AV_LOG_INFO , ""cannot compress %08X\\n"" , header )"		5680027	0					
ANR	5680126	Callee	av_log		5680027	0					
ANR	5680127	Identifier	av_log		5680027	0					
ANR	5680128	ArgumentList	avctx		5680027	1					
ANR	5680129	Argument	avctx		5680027	0					
ANR	5680130	Identifier	avctx		5680027	0					
ANR	5680131	Argument	AV_LOG_INFO		5680027	1					
ANR	5680132	Identifier	AV_LOG_INFO		5680027	0					
ANR	5680133	Argument	"""cannot compress %08X\\n"""		5680027	2					
ANR	5680134	PrimaryExpression	"""cannot compress %08X\\n"""		5680027	0					
ANR	5680135	Argument	header		5680027	3					
ANR	5680136	Identifier	header		5680027	0					
ANR	5680137	ReturnStatement	return 0 ;	39:8:783:791	5680027	3	True				
ANR	5680138	PrimaryExpression	0		5680027	0					
ANR	5680139	ExpressionStatement	* poutbuf_size = buf_size - 4	45:4:807:834	5680027	6	True				
ANR	5680140	AssignmentExpression	* poutbuf_size = buf_size - 4		5680027	0		=			
ANR	5680141	UnaryOperationExpression	* poutbuf_size		5680027	0					
ANR	5680142	UnaryOperator	*		5680027	0					
ANR	5680143	Identifier	poutbuf_size		5680027	1					
ANR	5680144	AdditiveExpression	buf_size - 4		5680027	1		-			
ANR	5680145	Identifier	buf_size		5680027	0					
ANR	5680146	PrimaryExpression	4		5680027	1					
ANR	5680147	ExpressionStatement	* poutbuf = av_malloc ( buf_size - 4 + FF_INPUT_BUFFER_PADDING_SIZE )	47:4:841:905	5680027	7	True				
ANR	5680148	AssignmentExpression	* poutbuf = av_malloc ( buf_size - 4 + FF_INPUT_BUFFER_PADDING_SIZE )		5680027	0		=			
ANR	5680149	UnaryOperationExpression	* poutbuf		5680027	0					
ANR	5680150	UnaryOperator	*		5680027	0					
ANR	5680151	Identifier	poutbuf		5680027	1					
ANR	5680152	CallExpression	av_malloc ( buf_size - 4 + FF_INPUT_BUFFER_PADDING_SIZE )		5680027	1					
ANR	5680153	Callee	av_malloc		5680027	0					
ANR	5680154	Identifier	av_malloc		5680027	0					
ANR	5680155	ArgumentList	buf_size - 4 + FF_INPUT_BUFFER_PADDING_SIZE		5680027	1					
ANR	5680156	Argument	buf_size - 4 + FF_INPUT_BUFFER_PADDING_SIZE		5680027	0					
ANR	5680157	AdditiveExpression	buf_size - 4 + FF_INPUT_BUFFER_PADDING_SIZE		5680027	0		-			
ANR	5680158	Identifier	buf_size		5680027	0					
ANR	5680159	AdditiveExpression	4 + FF_INPUT_BUFFER_PADDING_SIZE		5680027	1		+			
ANR	5680160	PrimaryExpression	4		5680027	0					
ANR	5680161	Identifier	FF_INPUT_BUFFER_PADDING_SIZE		5680027	1					
ANR	5680162	ExpressionStatement	"memcpy ( * poutbuf , buf + 4 , buf_size - 4 + FF_INPUT_BUFFER_PADDING_SIZE )"	49:4:912:982	5680027	8	True				
ANR	5680163	CallExpression	"memcpy ( * poutbuf , buf + 4 , buf_size - 4 + FF_INPUT_BUFFER_PADDING_SIZE )"		5680027	0					
ANR	5680164	Callee	memcpy		5680027	0					
ANR	5680165	Identifier	memcpy		5680027	0					
ANR	5680166	ArgumentList	* poutbuf		5680027	1					
ANR	5680167	Argument	* poutbuf		5680027	0					
ANR	5680168	UnaryOperationExpression	* poutbuf		5680027	0					
ANR	5680169	UnaryOperator	*		5680027	0					
ANR	5680170	Identifier	poutbuf		5680027	1					
ANR	5680171	Argument	buf + 4		5680027	1					
ANR	5680172	AdditiveExpression	buf + 4		5680027	0		+			
ANR	5680173	Identifier	buf		5680027	0					
ANR	5680174	PrimaryExpression	4		5680027	1					
ANR	5680175	Argument	buf_size - 4 + FF_INPUT_BUFFER_PADDING_SIZE		5680027	2					
ANR	5680176	AdditiveExpression	buf_size - 4 + FF_INPUT_BUFFER_PADDING_SIZE		5680027	0		-			
ANR	5680177	Identifier	buf_size		5680027	0					
ANR	5680178	AdditiveExpression	4 + FF_INPUT_BUFFER_PADDING_SIZE		5680027	1		+			
ANR	5680179	PrimaryExpression	4		5680027	0					
ANR	5680180	Identifier	FF_INPUT_BUFFER_PADDING_SIZE		5680027	1					
ANR	5680181	IfStatement	if ( avctx -> channels == 2 )		5680027	9					
ANR	5680182	Condition	avctx -> channels == 2	53:7:994:1011	5680027	0	True				
ANR	5680183	EqualityExpression	avctx -> channels == 2		5680027	0		==			
ANR	5680184	PtrMemberAccess	avctx -> channels		5680027	0					
ANR	5680185	Identifier	avctx		5680027	0					
ANR	5680186	Identifier	channels		5680027	1					
ANR	5680187	PrimaryExpression	2		5680027	1					
ANR	5680188	CompoundStatement		49:26:779:779	5680027	1					
ANR	5680189	IfStatement	if ( ( header & ( 3 << 19 ) ) != 3 << 19 )		5680027	0					
ANR	5680190	Condition	( header & ( 3 << 19 ) ) != 3 << 19	55:11:1027:1053	5680027	0	True				
ANR	5680191	EqualityExpression	( header & ( 3 << 19 ) ) != 3 << 19		5680027	0		!=			
ANR	5680192	BitAndExpression	header & ( 3 << 19 )		5680027	0		&			
ANR	5680193	Identifier	header		5680027	0					
ANR	5680194	ShiftExpression	3 << 19		5680027	1		<<			
ANR	5680195	PrimaryExpression	3		5680027	0					
ANR	5680196	PrimaryExpression	19		5680027	1					
ANR	5680197	ShiftExpression	3 << 19		5680027	1		<<			
ANR	5680198	PrimaryExpression	3		5680027	0					
ANR	5680199	PrimaryExpression	19		5680027	1					
ANR	5680200	CompoundStatement		51:39:821:821	5680027	1					
ANR	5680201	ExpressionStatement	( * poutbuf ) [ 1 ] &= 0x3F	57:12:1070:1091	5680027	0	True				
ANR	5680202	AssignmentExpression	( * poutbuf ) [ 1 ] &= 0x3F		5680027	0		&=			
ANR	5680203	ArrayIndexing	( * poutbuf ) [ 1 ]		5680027	0					
ANR	5680204	UnaryOperationExpression	* poutbuf		5680027	0					
ANR	5680205	UnaryOperator	*		5680027	0					
ANR	5680206	Identifier	poutbuf		5680027	1					
ANR	5680207	PrimaryExpression	1		5680027	1					
ANR	5680208	PrimaryExpression	0x3F		5680027	1					
ANR	5680209	ExpressionStatement	( * poutbuf ) [ 1 ] |= mode_extension << 6	59:12:1106:1140	5680027	1	True				
ANR	5680210	AssignmentExpression	( * poutbuf ) [ 1 ] |= mode_extension << 6		5680027	0		|=			
ANR	5680211	ArrayIndexing	( * poutbuf ) [ 1 ]		5680027	0					
ANR	5680212	UnaryOperationExpression	* poutbuf		5680027	0					
ANR	5680213	UnaryOperator	*		5680027	0					
ANR	5680214	Identifier	poutbuf		5680027	1					
ANR	5680215	PrimaryExpression	1		5680027	1					
ANR	5680216	ShiftExpression	mode_extension << 6		5680027	1		<<			
ANR	5680217	Identifier	mode_extension		5680027	0					
ANR	5680218	PrimaryExpression	6		5680027	1					
ANR	5680219	ExpressionStatement	"FFSWAP ( int , ( * poutbuf ) [ 1 ] , ( * poutbuf ) [ 2 ] )"	61:12:1155:1196	5680027	2	True				
ANR	5680220	CallExpression	"FFSWAP ( int , ( * poutbuf ) [ 1 ] , ( * poutbuf ) [ 2 ] )"		5680027	0					
ANR	5680221	Callee	FFSWAP		5680027	0					
ANR	5680222	Identifier	FFSWAP		5680027	0					
ANR	5680223	ArgumentList	int		5680027	1					
ANR	5680224	Argument	int		5680027	0					
ANR	5680225	Identifier	int		5680027	0					
ANR	5680226	Argument	( * poutbuf ) [ 1 ]		5680027	1					
ANR	5680227	ArrayIndexing	( * poutbuf ) [ 1 ]		5680027	0					
ANR	5680228	UnaryOperationExpression	* poutbuf		5680027	0					
ANR	5680229	UnaryOperator	*		5680027	0					
ANR	5680230	Identifier	poutbuf		5680027	1					
ANR	5680231	PrimaryExpression	1		5680027	1					
ANR	5680232	Argument	( * poutbuf ) [ 2 ]		5680027	2					
ANR	5680233	ArrayIndexing	( * poutbuf ) [ 2 ]		5680027	0					
ANR	5680234	UnaryOperationExpression	* poutbuf		5680027	0					
ANR	5680235	UnaryOperator	*		5680027	0					
ANR	5680236	Identifier	poutbuf		5680027	1					
ANR	5680237	PrimaryExpression	2		5680027	1					
ANR	5680238	ElseStatement	else		5680027	0					
ANR	5680239	CompoundStatement		59:13:978:978	5680027	0					
ANR	5680240	ExpressionStatement	( * poutbuf ) [ 1 ] &= 0x8F	65:12:1227:1248	5680027	0	True				
ANR	5680241	AssignmentExpression	( * poutbuf ) [ 1 ] &= 0x8F		5680027	0		&=			
ANR	5680242	ArrayIndexing	( * poutbuf ) [ 1 ]		5680027	0					
ANR	5680243	UnaryOperationExpression	* poutbuf		5680027	0					
ANR	5680244	UnaryOperator	*		5680027	0					
ANR	5680245	Identifier	poutbuf		5680027	1					
ANR	5680246	PrimaryExpression	1		5680027	1					
ANR	5680247	PrimaryExpression	0x8F		5680027	1					
ANR	5680248	ExpressionStatement	( * poutbuf ) [ 1 ] |= mode_extension << 4	67:12:1263:1297	5680027	1	True				
ANR	5680249	AssignmentExpression	( * poutbuf ) [ 1 ] |= mode_extension << 4		5680027	0		|=			
ANR	5680250	ArrayIndexing	( * poutbuf ) [ 1 ]		5680027	0					
ANR	5680251	UnaryOperationExpression	* poutbuf		5680027	0					
ANR	5680252	UnaryOperator	*		5680027	0					
ANR	5680253	Identifier	poutbuf		5680027	1					
ANR	5680254	PrimaryExpression	1		5680027	1					
ANR	5680255	ShiftExpression	mode_extension << 4		5680027	1		<<			
ANR	5680256	Identifier	mode_extension		5680027	0					
ANR	5680257	PrimaryExpression	4		5680027	1					
ANR	5680258	ReturnStatement	return 1 ;	75:4:1324:1332	5680027	10	True				
ANR	5680259	PrimaryExpression	1		5680027	0					
ANR	5680260	ReturnType	static int		5680027	1					
ANR	5680261	Identifier	mp3_header_compress		5680027	2					
ANR	5680262	ParameterList	"AVBitStreamFilterContext * bsfc , AVCodecContext * avctx , const char * args , uint8_t * * poutbuf , int * poutbuf_size , const uint8_t * buf , int buf_size , int keyframe"		5680027	3					
ANR	5680263	Parameter	AVBitStreamFilterContext * bsfc	1:31:31:60	5680027	0	True				
ANR	5680264	ParameterType	AVBitStreamFilterContext *		5680027	0					
ANR	5680265	Identifier	bsfc		5680027	1					
ANR	5680266	Parameter	AVCodecContext * avctx	1:63:63:83	5680027	1	True				
ANR	5680267	ParameterType	AVCodecContext *		5680027	0					
ANR	5680268	Identifier	avctx		5680027	1					
ANR	5680269	Parameter	const char * args	1:86:86:101	5680027	2	True				
ANR	5680270	ParameterType	const char *		5680027	0					
ANR	5680271	Identifier	args		5680027	1					
ANR	5680272	Parameter	uint8_t * * poutbuf	3:21:126:142	5680027	3	True				
ANR	5680273	ParameterType	uint8_t * *		5680027	0					
ANR	5680274	Identifier	poutbuf		5680027	1					
ANR	5680275	Parameter	int * poutbuf_size	3:40:145:161	5680027	4	True				
ANR	5680276	ParameterType	int *		5680027	0					
ANR	5680277	Identifier	poutbuf_size		5680027	1					
ANR	5680278	Parameter	const uint8_t * buf	5:21:186:203	5680027	5	True				
ANR	5680279	ParameterType	const uint8_t *		5680027	0					
ANR	5680280	Identifier	buf		5680027	1					
ANR	5680281	Parameter	int buf_size	5:41:206:217	5680027	6	True				
ANR	5680282	ParameterType	int		5680027	0					
ANR	5680283	Identifier	buf_size		5680027	1					
ANR	5680284	Parameter	int keyframe	5:55:220:231	5680027	7	True				
ANR	5680285	ParameterType	int		5680027	0					
ANR	5680286	Identifier	keyframe		5680027	1					
ANR	5680287	CFGEntryNode	ENTRY		5680027		True				
ANR	5680288	CFGExitNode	EXIT		5680027		True				
ANR	5680289	Symbol	bsfc		5680027						
ANR	5680290	Symbol	av_malloc		5680027						
ANR	5680291	Symbol	* buf		5680027						
ANR	5680292	Symbol	* poutbuf_size		5680027						
ANR	5680293	Symbol	AV_LOG_ERROR		5680027						
ANR	5680294	Symbol	buf_size		5680027						
ANR	5680295	Symbol	poutbuf_size		5680027						
ANR	5680296	Symbol	FF_COMPLIANCE_EXPERIMENTAL		5680027						
ANR	5680297	Symbol	keyframe		5680027						
ANR	5680298	Symbol	avctx -> strict_std_compliance		5680027						
ANR	5680299	Symbol	int		5680027						
ANR	5680300	Symbol	args		5680027						
ANR	5680301	Symbol	avctx -> channels		5680027						
ANR	5680302	Symbol	buf		5680027						
ANR	5680303	Symbol	* avctx		5680027						
ANR	5680304	Symbol	FF_INPUT_BUFFER_PADDING_SIZE		5680027						
ANR	5680305	Symbol	* poutbuf		5680027						
ANR	5680306	Symbol	* * poutbuf		5680027						
ANR	5680307	Symbol	mode_extension		5680027						
ANR	5680308	Symbol	header		5680027						
ANR	5680309	Symbol	ff_mpa_check_header		5680027						
ANR	5680310	Symbol	avctx		5680027						
ANR	5680311	Symbol	AV_LOG_INFO		5680027						
ANR	5680312	Symbol	poutbuf		5680027						
