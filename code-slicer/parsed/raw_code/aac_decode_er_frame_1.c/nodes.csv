command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	324118	File	/home/p4ultr4n/workplace/ReVeal/raw_code/aac_decode_er_frame_1.c								
ANR	324119	Function	aac_decode_er_frame	1:0:0:2202							
ANR	324120	FunctionDef	"aac_decode_er_frame (AVCodecContext * avctx , void * data , int * got_frame_ptr , GetBitContext * gb)"		324119	0					
ANR	324121	CompoundStatement		5:0:138:2202	324119	0					
ANR	324122	IdentifierDeclStatement	AACContext * ac = avctx -> priv_data ;	7:4:145:178	324119	0	True				
ANR	324123	IdentifierDecl	* ac = avctx -> priv_data		324119	0					
ANR	324124	IdentifierDeclType	AACContext *		324119	0					
ANR	324125	Identifier	ac		324119	1					
ANR	324126	AssignmentExpression	* ac = avctx -> priv_data		324119	2		=			
ANR	324127	Identifier	ac		324119	0					
ANR	324128	PtrMemberAccess	avctx -> priv_data		324119	1					
ANR	324129	Identifier	avctx		324119	0					
ANR	324130	Identifier	priv_data		324119	1					
ANR	324131	Statement	const	9:4:185:189	324119	1	True				
ANR	324132	Statement	MPEG4AudioConfig	9:10:191:206	324119	2	True				
ANR	324133	Statement	*	9:27:208:208	324119	3	True				
ANR	324134	Statement	const	9:28:209:213	324119	4	True				
ANR	324135	ExpressionStatement	m4ac = & ac -> oc [ 1 ] . m4ac	9:34:215:237	324119	5	True				
ANR	324136	AssignmentExpression	m4ac = & ac -> oc [ 1 ] . m4ac		324119	0		=			
ANR	324137	Identifier	m4ac		324119	0					
ANR	324138	UnaryOperationExpression	& ac -> oc [ 1 ] . m4ac		324119	1					
ANR	324139	UnaryOperator	&		324119	0					
ANR	324140	MemberAccess	ac -> oc [ 1 ] . m4ac		324119	1					
ANR	324141	ArrayIndexing	ac -> oc [ 1 ]		324119	0					
ANR	324142	PtrMemberAccess	ac -> oc		324119	0					
ANR	324143	Identifier	ac		324119	0					
ANR	324144	Identifier	oc		324119	1					
ANR	324145	PrimaryExpression	1		324119	1					
ANR	324146	Identifier	m4ac		324119	1					
ANR	324147	IdentifierDeclStatement	ChannelElement * che ;	11:4:244:263	324119	6	True				
ANR	324148	IdentifierDecl	* che		324119	0					
ANR	324149	IdentifierDeclType	ChannelElement *		324119	0					
ANR	324150	Identifier	che		324119	1					
ANR	324151	IdentifierDeclStatement	"int err , i ;"	13:4:270:280	324119	7	True				
ANR	324152	IdentifierDecl	err		324119	0					
ANR	324153	IdentifierDeclType	int		324119	0					
ANR	324154	Identifier	err		324119	1					
ANR	324155	IdentifierDecl	i		324119	1					
ANR	324156	IdentifierDeclType	int		324119	0					
ANR	324157	Identifier	i		324119	1					
ANR	324158	IdentifierDeclStatement	int samples = m4ac -> frame_length_short ? 960 : 1024 ;	15:4:287:338	324119	8	True				
ANR	324159	IdentifierDecl	samples = m4ac -> frame_length_short ? 960 : 1024		324119	0					
ANR	324160	IdentifierDeclType	int		324119	0					
ANR	324161	Identifier	samples		324119	1					
ANR	324162	AssignmentExpression	samples = m4ac -> frame_length_short ? 960 : 1024		324119	2		=			
ANR	324163	Identifier	samples		324119	0					
ANR	324164	ConditionalExpression	m4ac -> frame_length_short ? 960 : 1024		324119	1					
ANR	324165	Condition	m4ac -> frame_length_short		324119	0					
ANR	324166	PtrMemberAccess	m4ac -> frame_length_short		324119	0					
ANR	324167	Identifier	m4ac		324119	0					
ANR	324168	Identifier	frame_length_short		324119	1					
ANR	324169	PrimaryExpression	960		324119	1					
ANR	324170	PrimaryExpression	1024		324119	2					
ANR	324171	IdentifierDeclStatement	int chan_config = m4ac -> chan_config ;	17:4:345:380	324119	9	True				
ANR	324172	IdentifierDecl	chan_config = m4ac -> chan_config		324119	0					
ANR	324173	IdentifierDeclType	int		324119	0					
ANR	324174	Identifier	chan_config		324119	1					
ANR	324175	AssignmentExpression	chan_config = m4ac -> chan_config		324119	2		=			
ANR	324176	Identifier	chan_config		324119	0					
ANR	324177	PtrMemberAccess	m4ac -> chan_config		324119	1					
ANR	324178	Identifier	m4ac		324119	0					
ANR	324179	Identifier	chan_config		324119	1					
ANR	324180	IdentifierDeclStatement	int aot = m4ac -> object_type ;	19:4:387:414	324119	10	True				
ANR	324181	IdentifierDecl	aot = m4ac -> object_type		324119	0					
ANR	324182	IdentifierDeclType	int		324119	0					
ANR	324183	Identifier	aot		324119	1					
ANR	324184	AssignmentExpression	aot = m4ac -> object_type		324119	2		=			
ANR	324185	Identifier	aot		324119	0					
ANR	324186	PtrMemberAccess	m4ac -> object_type		324119	1					
ANR	324187	Identifier	m4ac		324119	0					
ANR	324188	Identifier	object_type		324119	1					
ANR	324189	IfStatement	if ( aot == AOT_ER_AAC_LD || aot == AOT_ER_AAC_ELD )		324119	11					
ANR	324190	Condition	aot == AOT_ER_AAC_LD || aot == AOT_ER_AAC_ELD	23:8:427:471	324119	0	True				
ANR	324191	OrExpression	aot == AOT_ER_AAC_LD || aot == AOT_ER_AAC_ELD		324119	0		||			
ANR	324192	EqualityExpression	aot == AOT_ER_AAC_LD		324119	0		==			
ANR	324193	Identifier	aot		324119	0					
ANR	324194	Identifier	AOT_ER_AAC_LD		324119	1					
ANR	324195	EqualityExpression	aot == AOT_ER_AAC_ELD		324119	1		==			
ANR	324196	Identifier	aot		324119	0					
ANR	324197	Identifier	AOT_ER_AAC_ELD		324119	1					
ANR	324198	ExpressionStatement	samples >>= 1	25:8:483:496	324119	1	True				
ANR	324199	AssignmentExpression	samples >>= 1		324119	0		>>=			
ANR	324200	Identifier	samples		324119	0					
ANR	324201	PrimaryExpression	1		324119	1					
ANR	324202	ExpressionStatement	ac -> frame = data	29:4:505:521	324119	12	True				
ANR	324203	AssignmentExpression	ac -> frame = data		324119	0		=			
ANR	324204	PtrMemberAccess	ac -> frame		324119	0					
ANR	324205	Identifier	ac		324119	0					
ANR	324206	Identifier	frame		324119	1					
ANR	324207	Identifier	data		324119	1					
ANR	324208	IfStatement	if ( ( err = frame_configure_elements ( avctx ) ) < 0 )		324119	13					
ANR	324209	Condition	( err = frame_configure_elements ( avctx ) ) < 0	33:8:534:576	324119	0	True				
ANR	324210	RelationalExpression	( err = frame_configure_elements ( avctx ) ) < 0		324119	0		<			
ANR	324211	AssignmentExpression	err = frame_configure_elements ( avctx )		324119	0		=			
ANR	324212	Identifier	err		324119	0					
ANR	324213	CallExpression	frame_configure_elements ( avctx )		324119	1					
ANR	324214	Callee	frame_configure_elements		324119	0					
ANR	324215	Identifier	frame_configure_elements		324119	0					
ANR	324216	ArgumentList	avctx		324119	1					
ANR	324217	Argument	avctx		324119	0					
ANR	324218	Identifier	avctx		324119	0					
ANR	324219	PrimaryExpression	0		324119	1					
ANR	324220	ReturnStatement	return err ;	35:8:588:598	324119	1	True				
ANR	324221	Identifier	err		324119	0					
ANR	324222	ExpressionStatement	ac -> avctx -> profile = aot - 1	43:4:729:757	324119	14	True				
ANR	324223	AssignmentExpression	ac -> avctx -> profile = aot - 1		324119	0		=			
ANR	324224	PtrMemberAccess	ac -> avctx -> profile		324119	0					
ANR	324225	PtrMemberAccess	ac -> avctx		324119	0					
ANR	324226	Identifier	ac		324119	0					
ANR	324227	Identifier	avctx		324119	1					
ANR	324228	Identifier	profile		324119	1					
ANR	324229	AdditiveExpression	aot - 1		324119	1		-			
ANR	324230	Identifier	aot		324119	0					
ANR	324231	PrimaryExpression	1		324119	1					
ANR	324232	ExpressionStatement	ac -> tags_mapped = 0	47:4:766:785	324119	15	True				
ANR	324233	AssignmentExpression	ac -> tags_mapped = 0		324119	0		=			
ANR	324234	PtrMemberAccess	ac -> tags_mapped		324119	0					
ANR	324235	Identifier	ac		324119	0					
ANR	324236	Identifier	tags_mapped		324119	1					
ANR	324237	PrimaryExpression	0		324119	1					
ANR	324238	IfStatement	if ( chan_config < 0 || ( chan_config >= 8 && chan_config < 11 ) || chan_config >= 13 )		324119	16					
ANR	324239	Condition	chan_config < 0 || ( chan_config >= 8 && chan_config < 11 ) || chan_config >= 13	51:8:798:875	324119	0	True				
ANR	324240	OrExpression	chan_config < 0 || ( chan_config >= 8 && chan_config < 11 ) || chan_config >= 13		324119	0		||			
ANR	324241	RelationalExpression	chan_config < 0		324119	0		<			
ANR	324242	Identifier	chan_config		324119	0					
ANR	324243	PrimaryExpression	0		324119	1					
ANR	324244	OrExpression	( chan_config >= 8 && chan_config < 11 ) || chan_config >= 13		324119	1		||			
ANR	324245	AndExpression	chan_config >= 8 && chan_config < 11		324119	0		&&			
ANR	324246	RelationalExpression	chan_config >= 8		324119	0		>=			
ANR	324247	Identifier	chan_config		324119	0					
ANR	324248	PrimaryExpression	8		324119	1					
ANR	324249	RelationalExpression	chan_config < 11		324119	1		<			
ANR	324250	Identifier	chan_config		324119	0					
ANR	324251	PrimaryExpression	11		324119	1					
ANR	324252	RelationalExpression	chan_config >= 13		324119	1		>=			
ANR	324253	Identifier	chan_config		324119	0					
ANR	324254	PrimaryExpression	13		324119	1					
ANR	324255	CompoundStatement		47:88:739:739	324119	1					
ANR	324256	ExpressionStatement	"avpriv_request_sample ( avctx , ""Unknown ER channel configuration %d"" , chan_config )"	53:8:889:1000	324119	0	True				
ANR	324257	CallExpression	"avpriv_request_sample ( avctx , ""Unknown ER channel configuration %d"" , chan_config )"		324119	0					
ANR	324258	Callee	avpriv_request_sample		324119	0					
ANR	324259	Identifier	avpriv_request_sample		324119	0					
ANR	324260	ArgumentList	avctx		324119	1					
ANR	324261	Argument	avctx		324119	0					
ANR	324262	Identifier	avctx		324119	0					
ANR	324263	Argument	"""Unknown ER channel configuration %d"""		324119	1					
ANR	324264	PrimaryExpression	"""Unknown ER channel configuration %d"""		324119	0					
ANR	324265	Argument	chan_config		324119	2					
ANR	324266	Identifier	chan_config		324119	0					
ANR	324267	ReturnStatement	return AVERROR_INVALIDDATA ;	57:8:1011:1037	324119	1	True				
ANR	324268	Identifier	AVERROR_INVALIDDATA		324119	0					
ANR	324269	ForStatement	for ( i = 0 ; i < tags_per_config [ chan_config ] ; i ++ )		324119	17					
ANR	324270	ForInit	i = 0 ;	61:9:1056:1061	324119	0	True				
ANR	324271	AssignmentExpression	i = 0		324119	0		=			
ANR	324272	Identifier	i		324119	0					
ANR	324273	PrimaryExpression	0		324119	1					
ANR	324274	Condition	i < tags_per_config [ chan_config ]	61:16:1063:1094	324119	1	True				
ANR	324275	RelationalExpression	i < tags_per_config [ chan_config ]		324119	0		<			
ANR	324276	Identifier	i		324119	0					
ANR	324277	ArrayIndexing	tags_per_config [ chan_config ]		324119	1					
ANR	324278	Identifier	tags_per_config		324119	0					
ANR	324279	Identifier	chan_config		324119	1					
ANR	324280	PostIncDecOperationExpression	i ++	61:50:1097:1099	324119	2	True				
ANR	324281	Identifier	i		324119	0					
ANR	324282	IncDec	++		324119	1					
ANR	324283	CompoundStatement		61:8:1050:1115	324119	3					
ANR	324284	IdentifierDeclStatement	const int elem_type = aac_channel_layout_map [ chan_config - 1 ] [ i ] [ 0 ] ;	63:8:1113:1178	324119	0	True				
ANR	324285	IdentifierDecl	elem_type = aac_channel_layout_map [ chan_config - 1 ] [ i ] [ 0 ]		324119	0					
ANR	324286	IdentifierDeclType	const int		324119	0					
ANR	324287	Identifier	elem_type		324119	1					
ANR	324288	AssignmentExpression	elem_type = aac_channel_layout_map [ chan_config - 1 ] [ i ] [ 0 ]		324119	2		=			
ANR	324289	Identifier	elem_type		324119	0					
ANR	324290	ArrayIndexing	aac_channel_layout_map [ chan_config - 1 ] [ i ] [ 0 ]		324119	1					
ANR	324291	ArrayIndexing	aac_channel_layout_map [ chan_config - 1 ] [ i ]		324119	0					
ANR	324292	ArrayIndexing	aac_channel_layout_map [ chan_config - 1 ]		324119	0					
ANR	324293	Identifier	aac_channel_layout_map		324119	0					
ANR	324294	AdditiveExpression	chan_config - 1		324119	1		-			
ANR	324295	Identifier	chan_config		324119	0					
ANR	324296	PrimaryExpression	1		324119	1					
ANR	324297	Identifier	i		324119	1					
ANR	324298	PrimaryExpression	0		324119	1					
ANR	324299	IdentifierDeclStatement	const int elem_id = aac_channel_layout_map [ chan_config - 1 ] [ i ] [ 1 ] ;	65:8:1189:1254	324119	1	True				
ANR	324300	IdentifierDecl	elem_id = aac_channel_layout_map [ chan_config - 1 ] [ i ] [ 1 ]		324119	0					
ANR	324301	IdentifierDeclType	const int		324119	0					
ANR	324302	Identifier	elem_id		324119	1					
ANR	324303	AssignmentExpression	elem_id = aac_channel_layout_map [ chan_config - 1 ] [ i ] [ 1 ]		324119	2		=			
ANR	324304	Identifier	elem_id		324119	0					
ANR	324305	ArrayIndexing	aac_channel_layout_map [ chan_config - 1 ] [ i ] [ 1 ]		324119	1					
ANR	324306	ArrayIndexing	aac_channel_layout_map [ chan_config - 1 ] [ i ]		324119	0					
ANR	324307	ArrayIndexing	aac_channel_layout_map [ chan_config - 1 ]		324119	0					
ANR	324308	Identifier	aac_channel_layout_map		324119	0					
ANR	324309	AdditiveExpression	chan_config - 1		324119	1		-			
ANR	324310	Identifier	chan_config		324119	0					
ANR	324311	PrimaryExpression	1		324119	1					
ANR	324312	Identifier	i		324119	1					
ANR	324313	PrimaryExpression	1		324119	1					
ANR	324314	IfStatement	"if ( ! ( che = get_che ( ac , elem_type , elem_id ) ) )"		324119	2					
ANR	324315	Condition	"! ( che = get_che ( ac , elem_type , elem_id ) )"	67:12:1269:1306	324119	0	True				
ANR	324316	UnaryOperationExpression	"! ( che = get_che ( ac , elem_type , elem_id ) )"		324119	0					
ANR	324317	UnaryOperator	!		324119	0					
ANR	324318	AssignmentExpression	"che = get_che ( ac , elem_type , elem_id )"		324119	1		=			
ANR	324319	Identifier	che		324119	0					
ANR	324320	CallExpression	"get_che ( ac , elem_type , elem_id )"		324119	1					
ANR	324321	Callee	get_che		324119	0					
ANR	324322	Identifier	get_che		324119	0					
ANR	324323	ArgumentList	ac		324119	1					
ANR	324324	Argument	ac		324119	0					
ANR	324325	Identifier	ac		324119	0					
ANR	324326	Argument	elem_type		324119	1					
ANR	324327	Identifier	elem_type		324119	0					
ANR	324328	Argument	elem_id		324119	2					
ANR	324329	Identifier	elem_id		324119	0					
ANR	324330	CompoundStatement		63:52:1170:1170	324119	1					
ANR	324331	ExpressionStatement	"av_log ( ac -> avctx , AV_LOG_ERROR , ""channel element %d.%d is not allocated\\n"" , elem_type , elem_id )"	69:12:1324:1459	324119	0	True				
ANR	324332	CallExpression	"av_log ( ac -> avctx , AV_LOG_ERROR , ""channel element %d.%d is not allocated\\n"" , elem_type , elem_id )"		324119	0					
ANR	324333	Callee	av_log		324119	0					
ANR	324334	Identifier	av_log		324119	0					
ANR	324335	ArgumentList	ac -> avctx		324119	1					
ANR	324336	Argument	ac -> avctx		324119	0					
ANR	324337	PtrMemberAccess	ac -> avctx		324119	0					
ANR	324338	Identifier	ac		324119	0					
ANR	324339	Identifier	avctx		324119	1					
ANR	324340	Argument	AV_LOG_ERROR		324119	1					
ANR	324341	Identifier	AV_LOG_ERROR		324119	0					
ANR	324342	Argument	"""channel element %d.%d is not allocated\\n"""		324119	2					
ANR	324343	PrimaryExpression	"""channel element %d.%d is not allocated\\n"""		324119	0					
ANR	324344	Argument	elem_type		324119	3					
ANR	324345	Identifier	elem_type		324119	0					
ANR	324346	Argument	elem_id		324119	4					
ANR	324347	Identifier	elem_id		324119	0					
ANR	324348	ReturnStatement	return AVERROR_INVALIDDATA ;	75:12:1474:1500	324119	1	True				
ANR	324349	Identifier	AVERROR_INVALIDDATA		324119	0					
ANR	324350	ExpressionStatement	che -> present = 1	79:8:1522:1538	324119	3	True				
ANR	324351	AssignmentExpression	che -> present = 1		324119	0		=			
ANR	324352	PtrMemberAccess	che -> present		324119	0					
ANR	324353	Identifier	che		324119	0					
ANR	324354	Identifier	present		324119	1					
ANR	324355	PrimaryExpression	1		324119	1					
ANR	324356	IfStatement	if ( aot != AOT_ER_AAC_ELD )		324119	4					
ANR	324357	Condition	aot != AOT_ER_AAC_ELD	81:12:1553:1573	324119	0	True				
ANR	324358	EqualityExpression	aot != AOT_ER_AAC_ELD		324119	0		!=			
ANR	324359	Identifier	aot		324119	0					
ANR	324360	Identifier	AOT_ER_AAC_ELD		324119	1					
ANR	324361	ExpressionStatement	"skip_bits ( gb , 4 )"	83:12:1589:1605	324119	1	True				
ANR	324362	CallExpression	"skip_bits ( gb , 4 )"		324119	0					
ANR	324363	Callee	skip_bits		324119	0					
ANR	324364	Identifier	skip_bits		324119	0					
ANR	324365	ArgumentList	gb		324119	1					
ANR	324366	Argument	gb		324119	0					
ANR	324367	Identifier	gb		324119	0					
ANR	324368	Argument	4		324119	1					
ANR	324369	PrimaryExpression	4		324119	0					
ANR	324370	SwitchStatement	switch ( elem_type )		324119	5					
ANR	324371	Condition	elem_type	85:16:1624:1632	324119	0	True				
ANR	324372	Identifier	elem_type		324119	0					
ANR	324373	CompoundStatement		81:27:1496:1496	324119	1					
ANR	324374	Label	case TYPE_SCE :	87:8:1646:1659	324119	0	True				
ANR	324375	Identifier	TYPE_SCE		324119	0					
ANR	324376	ExpressionStatement	"err = decode_ics ( ac , & che -> ch [ 0 ] , gb , 0 , 0 )"	89:12:1674:1717	324119	1	True				
ANR	324377	AssignmentExpression	"err = decode_ics ( ac , & che -> ch [ 0 ] , gb , 0 , 0 )"		324119	0		=			
ANR	324378	Identifier	err		324119	0					
ANR	324379	CallExpression	"decode_ics ( ac , & che -> ch [ 0 ] , gb , 0 , 0 )"		324119	1					
ANR	324380	Callee	decode_ics		324119	0					
ANR	324381	Identifier	decode_ics		324119	0					
ANR	324382	ArgumentList	ac		324119	1					
ANR	324383	Argument	ac		324119	0					
ANR	324384	Identifier	ac		324119	0					
ANR	324385	Argument	& che -> ch [ 0 ]		324119	1					
ANR	324386	UnaryOperationExpression	& che -> ch [ 0 ]		324119	0					
ANR	324387	UnaryOperator	&		324119	0					
ANR	324388	ArrayIndexing	che -> ch [ 0 ]		324119	1					
ANR	324389	PtrMemberAccess	che -> ch		324119	0					
ANR	324390	Identifier	che		324119	0					
ANR	324391	Identifier	ch		324119	1					
ANR	324392	PrimaryExpression	0		324119	1					
ANR	324393	Argument	gb		324119	2					
ANR	324394	Identifier	gb		324119	0					
ANR	324395	Argument	0		324119	3					
ANR	324396	PrimaryExpression	0		324119	0					
ANR	324397	Argument	0		324119	4					
ANR	324398	PrimaryExpression	0		324119	0					
ANR	324399	BreakStatement	break ;	91:12:1732:1737	324119	2	True				
ANR	324400	Label	case TYPE_CPE :	93:8:1748:1761	324119	3	True				
ANR	324401	Identifier	TYPE_CPE		324119	0					
ANR	324402	ExpressionStatement	"err = decode_cpe ( ac , gb , che )"	95:12:1776:1805	324119	4	True				
ANR	324403	AssignmentExpression	"err = decode_cpe ( ac , gb , che )"		324119	0		=			
ANR	324404	Identifier	err		324119	0					
ANR	324405	CallExpression	"decode_cpe ( ac , gb , che )"		324119	1					
ANR	324406	Callee	decode_cpe		324119	0					
ANR	324407	Identifier	decode_cpe		324119	0					
ANR	324408	ArgumentList	ac		324119	1					
ANR	324409	Argument	ac		324119	0					
ANR	324410	Identifier	ac		324119	0					
ANR	324411	Argument	gb		324119	1					
ANR	324412	Identifier	gb		324119	0					
ANR	324413	Argument	che		324119	2					
ANR	324414	Identifier	che		324119	0					
ANR	324415	BreakStatement	break ;	97:12:1820:1825	324119	5	True				
ANR	324416	Label	case TYPE_LFE :	99:8:1836:1849	324119	6	True				
ANR	324417	Identifier	TYPE_LFE		324119	0					
ANR	324418	ExpressionStatement	"err = decode_ics ( ac , & che -> ch [ 0 ] , gb , 0 , 0 )"	101:12:1864:1907	324119	7	True				
ANR	324419	AssignmentExpression	"err = decode_ics ( ac , & che -> ch [ 0 ] , gb , 0 , 0 )"		324119	0		=			
ANR	324420	Identifier	err		324119	0					
ANR	324421	CallExpression	"decode_ics ( ac , & che -> ch [ 0 ] , gb , 0 , 0 )"		324119	1					
ANR	324422	Callee	decode_ics		324119	0					
ANR	324423	Identifier	decode_ics		324119	0					
ANR	324424	ArgumentList	ac		324119	1					
ANR	324425	Argument	ac		324119	0					
ANR	324426	Identifier	ac		324119	0					
ANR	324427	Argument	& che -> ch [ 0 ]		324119	1					
ANR	324428	UnaryOperationExpression	& che -> ch [ 0 ]		324119	0					
ANR	324429	UnaryOperator	&		324119	0					
ANR	324430	ArrayIndexing	che -> ch [ 0 ]		324119	1					
ANR	324431	PtrMemberAccess	che -> ch		324119	0					
ANR	324432	Identifier	che		324119	0					
ANR	324433	Identifier	ch		324119	1					
ANR	324434	PrimaryExpression	0		324119	1					
ANR	324435	Argument	gb		324119	2					
ANR	324436	Identifier	gb		324119	0					
ANR	324437	Argument	0		324119	3					
ANR	324438	PrimaryExpression	0		324119	0					
ANR	324439	Argument	0		324119	4					
ANR	324440	PrimaryExpression	0		324119	0					
ANR	324441	BreakStatement	break ;	103:12:1922:1927	324119	8	True				
ANR	324442	IfStatement	if ( err < 0 )		324119	6					
ANR	324443	Condition	err < 0	107:12:1953:1959	324119	0	True				
ANR	324444	RelationalExpression	err < 0		324119	0		<			
ANR	324445	Identifier	err		324119	0					
ANR	324446	PrimaryExpression	0		324119	1					
ANR	324447	ReturnStatement	return err ;	109:12:1975:1985	324119	1	True				
ANR	324448	Identifier	err		324119	0					
ANR	324449	ExpressionStatement	spectral_to_sample ( ac )	115:4:2001:2023	324119	18	True				
ANR	324450	CallExpression	spectral_to_sample ( ac )		324119	0					
ANR	324451	Callee	spectral_to_sample		324119	0					
ANR	324452	Identifier	spectral_to_sample		324119	0					
ANR	324453	ArgumentList	ac		324119	1					
ANR	324454	Argument	ac		324119	0					
ANR	324455	Identifier	ac		324119	0					
ANR	324456	ExpressionStatement	ac -> frame -> nb_samples = samples	119:4:2032:2063	324119	19	True				
ANR	324457	AssignmentExpression	ac -> frame -> nb_samples = samples		324119	0		=			
ANR	324458	PtrMemberAccess	ac -> frame -> nb_samples		324119	0					
ANR	324459	PtrMemberAccess	ac -> frame		324119	0					
ANR	324460	Identifier	ac		324119	0					
ANR	324461	Identifier	frame		324119	1					
ANR	324462	Identifier	nb_samples		324119	1					
ANR	324463	Identifier	samples		324119	1					
ANR	324464	ExpressionStatement	ac -> frame -> sample_rate = avctx -> sample_rate	121:4:2070:2113	324119	20	True				
ANR	324465	AssignmentExpression	ac -> frame -> sample_rate = avctx -> sample_rate		324119	0		=			
ANR	324466	PtrMemberAccess	ac -> frame -> sample_rate		324119	0					
ANR	324467	PtrMemberAccess	ac -> frame		324119	0					
ANR	324468	Identifier	ac		324119	0					
ANR	324469	Identifier	frame		324119	1					
ANR	324470	Identifier	sample_rate		324119	1					
ANR	324471	PtrMemberAccess	avctx -> sample_rate		324119	1					
ANR	324472	Identifier	avctx		324119	0					
ANR	324473	Identifier	sample_rate		324119	1					
ANR	324474	ExpressionStatement	* got_frame_ptr = 1	123:4:2120:2138	324119	21	True				
ANR	324475	AssignmentExpression	* got_frame_ptr = 1		324119	0		=			
ANR	324476	UnaryOperationExpression	* got_frame_ptr		324119	0					
ANR	324477	UnaryOperator	*		324119	0					
ANR	324478	Identifier	got_frame_ptr		324119	1					
ANR	324479	PrimaryExpression	1		324119	1					
ANR	324480	ExpressionStatement	"skip_bits_long ( gb , get_bits_left ( gb ) )"	127:4:2147:2184	324119	22	True				
ANR	324481	CallExpression	"skip_bits_long ( gb , get_bits_left ( gb ) )"		324119	0					
ANR	324482	Callee	skip_bits_long		324119	0					
ANR	324483	Identifier	skip_bits_long		324119	0					
ANR	324484	ArgumentList	gb		324119	1					
ANR	324485	Argument	gb		324119	0					
ANR	324486	Identifier	gb		324119	0					
ANR	324487	Argument	get_bits_left ( gb )		324119	1					
ANR	324488	CallExpression	get_bits_left ( gb )		324119	0					
ANR	324489	Callee	get_bits_left		324119	0					
ANR	324490	Identifier	get_bits_left		324119	0					
ANR	324491	ArgumentList	gb		324119	1					
ANR	324492	Argument	gb		324119	0					
ANR	324493	Identifier	gb		324119	0					
ANR	324494	ReturnStatement	return 0 ;	129:4:2191:2199	324119	23	True				
ANR	324495	PrimaryExpression	0		324119	0					
ANR	324496	ReturnType	static int		324119	1					
ANR	324497	Identifier	aac_decode_er_frame		324119	2					
ANR	324498	ParameterList	"AVCodecContext * avctx , void * data , int * got_frame_ptr , GetBitContext * gb"		324119	3					
ANR	324499	Parameter	AVCodecContext * avctx	1:31:31:51	324119	0	True				
ANR	324500	ParameterType	AVCodecContext *		324119	0					
ANR	324501	Identifier	avctx		324119	1					
ANR	324502	Parameter	void * data	1:54:54:63	324119	1	True				
ANR	324503	ParameterType	void *		324119	0					
ANR	324504	Identifier	data		324119	1					
ANR	324505	Parameter	int * got_frame_ptr	3:31:98:115	324119	2	True				
ANR	324506	ParameterType	int *		324119	0					
ANR	324507	Identifier	got_frame_ptr		324119	1					
ANR	324508	Parameter	GetBitContext * gb	3:51:118:134	324119	3	True				
ANR	324509	ParameterType	GetBitContext *		324119	0					
ANR	324510	Identifier	gb		324119	1					
ANR	324511	CFGEntryNode	ENTRY		324119		True				
ANR	324512	CFGExitNode	EXIT		324119		True				
ANR	324513	Symbol	* chan_config		324119						
ANR	324514	Symbol	data		324119						
ANR	324515	Symbol	aot		324119						
ANR	324516	Symbol	got_frame_ptr		324119						
ANR	324517	Symbol	* * ac		324119						
ANR	324518	Symbol	* * * aac_channel_layout_map		324119						
ANR	324519	Symbol	* ac -> frame		324119						
ANR	324520	Symbol	frame_configure_elements		324119						
ANR	324521	Symbol	che -> present		324119						
ANR	324522	Symbol	ac -> frame		324119						
ANR	324523	Symbol	* tags_per_config		324119						
ANR	324524	Symbol	che		324119						
ANR	324525	Symbol	ac		324119						
ANR	324526	Symbol	AOT_ER_AAC_ELD		324119						
ANR	324527	Symbol	* * i		324119						
ANR	324528	Symbol	ac -> tags_mapped		324119						
ANR	324529	Symbol	elem_id		324119						
ANR	324530	Symbol	ac -> oc		324119						
ANR	324531	Symbol	& ac -> oc [ 1 ] . m4ac		324119						
ANR	324532	Symbol	* * aac_channel_layout_map		324119						
ANR	324533	Symbol	samples		324119						
ANR	324534	Symbol	m4ac -> object_type		324119						
ANR	324535	Symbol	elem_type		324119						
ANR	324536	Symbol	decode_ics		324119						
ANR	324537	Symbol	* avctx		324119						
ANR	324538	Symbol	ac -> frame -> nb_samples		324119						
ANR	324539	Symbol	* aac_channel_layout_map		324119						
ANR	324540	Symbol	* ac -> avctx		324119						
ANR	324541	Symbol	get_che		324119						
ANR	324542	Symbol	decode_cpe		324119						
ANR	324543	Symbol	* * * chan_config		324119						
ANR	324544	Symbol	* ac		324119						
ANR	324545	Symbol	che -> ch		324119						
ANR	324546	Symbol	get_bits_left		324119						
ANR	324547	Symbol	AOT_ER_AAC_LD		324119						
ANR	324548	Symbol	gb		324119						
ANR	324549	Symbol	avctx		324119						
ANR	324550	Symbol	* m4ac		324119						
ANR	324551	Symbol	err		324119						
ANR	324552	Symbol	m4ac -> chan_config		324119						
ANR	324553	Symbol	AV_LOG_ERROR		324119						
ANR	324554	Symbol	tags_per_config		324119						
ANR	324555	Symbol	aac_channel_layout_map		324119						
ANR	324556	Symbol	ac -> frame -> sample_rate		324119						
ANR	324557	Symbol	* got_frame_ptr		324119						
ANR	324558	Symbol	i		324119						
ANR	324559	Symbol	chan_config		324119						
ANR	324560	Symbol	avctx -> priv_data		324119						
ANR	324561	Symbol	avctx -> sample_rate		324119						
ANR	324562	Symbol	m4ac -> frame_length_short		324119						
ANR	324563	Symbol	ac -> avctx -> profile		324119						
ANR	324564	Symbol	* * chan_config		324119						
ANR	324565	Symbol	* i		324119						
ANR	324566	Symbol	* che		324119						
ANR	324567	Symbol	AVERROR_INVALIDDATA		324119						
ANR	324568	Symbol	m4ac		324119						
ANR	324569	Symbol	* ac -> oc		324119						
ANR	324570	Symbol	ac -> avctx		324119						
