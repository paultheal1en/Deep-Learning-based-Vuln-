command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	7016703	File	/home/p4ultr4n/workplace/ReVeal/raw_code/qemu_rbd_next_tok_0.c								
ANR	7016704	Function	qemu_rbd_next_tok	1:0:0:838							
ANR	7016705	FunctionDef	"qemu_rbd_next_tok (int max_len , char * src , char delim , const char * name , char * * p , Error * * errp)"		7016704	0					
ANR	7016706	CompoundStatement		9:0:206:838	7016704	0					
ANR	7016707	IdentifierDeclStatement	int l ;	11:4:213:218	7016704	0	True				
ANR	7016708	IdentifierDecl	l		7016704	0					
ANR	7016709	IdentifierDeclType	int		7016704	0					
ANR	7016710	Identifier	l		7016704	1					
ANR	7016711	IdentifierDeclStatement	char * end ;	13:4:225:234	7016704	1	True				
ANR	7016712	IdentifierDecl	* end		7016704	0					
ANR	7016713	IdentifierDeclType	char *		7016704	0					
ANR	7016714	Identifier	end		7016704	1					
ANR	7016715	ExpressionStatement	* p = NULL	17:4:243:252	7016704	2	True				
ANR	7016716	AssignmentExpression	* p = NULL		7016704	0		=			
ANR	7016717	UnaryOperationExpression	* p		7016704	0					
ANR	7016718	UnaryOperator	*		7016704	0					
ANR	7016719	Identifier	p		7016704	1					
ANR	7016720	Identifier	NULL		7016704	1					
ANR	7016721	IfStatement	if ( delim != '\\0' )		7016704	3					
ANR	7016722	Condition	delim != '\\0'	21:8:265:277	7016704	0	True				
ANR	7016723	EqualityExpression	delim != '\\0'		7016704	0		!=			
ANR	7016724	Identifier	delim		7016704	0					
ANR	7016725	PrimaryExpression	'\\0'		7016704	1					
ANR	7016726	CompoundStatement		13:23:73:73	7016704	1					
ANR	7016727	ForStatement	for ( end = src ; * end ; ++ end )		7016704	0					
ANR	7016728	ForInit	end = src ;	23:13:296:305	7016704	0	True				
ANR	7016729	AssignmentExpression	end = src		7016704	0		=			
ANR	7016730	Identifier	end		7016704	0					
ANR	7016731	Identifier	src		7016704	1					
ANR	7016732	Condition	* end	23:24:307:310	7016704	1	True				
ANR	7016733	UnaryOperationExpression	* end		7016704	0					
ANR	7016734	UnaryOperator	*		7016704	0					
ANR	7016735	Identifier	end		7016704	1					
ANR	7016736	UnaryExpression	++ end	23:30:313:317	7016704	2	True				
ANR	7016737	IncDec	++		7016704	0					
ANR	7016738	Identifier	end		7016704	1					
ANR	7016739	CompoundStatement		15:37:113:113	7016704	3					
ANR	7016740	IfStatement	if ( * end == delim )		7016704	0					
ANR	7016741	Condition	* end == delim	25:16:339:351	7016704	0	True				
ANR	7016742	EqualityExpression	* end == delim		7016704	0		==			
ANR	7016743	UnaryOperationExpression	* end		7016704	0					
ANR	7016744	UnaryOperator	*		7016704	0					
ANR	7016745	Identifier	end		7016704	1					
ANR	7016746	Identifier	delim		7016704	1					
ANR	7016747	CompoundStatement		17:31:147:147	7016704	1					
ANR	7016748	BreakStatement	break ;	27:16:373:378	7016704	0	True				
ANR	7016749	IfStatement	if ( * end == '\\\\' && end [ 1 ] != '\\0' )		7016704	1					
ANR	7016750	Condition	* end == '\\\\' && end [ 1 ] != '\\0'	31:16:412:441	7016704	0	True				
ANR	7016751	AndExpression	* end == '\\\\' && end [ 1 ] != '\\0'		7016704	0		&&			
ANR	7016752	EqualityExpression	* end == '\\\\'		7016704	0		==			
ANR	7016753	UnaryOperationExpression	* end		7016704	0					
ANR	7016754	UnaryOperator	*		7016704	0					
ANR	7016755	Identifier	end		7016704	1					
ANR	7016756	PrimaryExpression	'\\\\'		7016704	1					
ANR	7016757	EqualityExpression	end [ 1 ] != '\\0'		7016704	1		!=			
ANR	7016758	ArrayIndexing	end [ 1 ]		7016704	0					
ANR	7016759	Identifier	end		7016704	0					
ANR	7016760	PrimaryExpression	1		7016704	1					
ANR	7016761	PrimaryExpression	'\\0'		7016704	1					
ANR	7016762	CompoundStatement		23:48:237:237	7016704	1					
ANR	7016763	ExpressionStatement	end ++	33:16:463:468	7016704	0	True				
ANR	7016764	PostIncDecOperationExpression	end ++		7016704	0					
ANR	7016765	Identifier	end		7016704	0					
ANR	7016766	IncDec	++		7016704	1					
ANR	7016767	IfStatement	if ( * end == delim )		7016704	1					
ANR	7016768	Condition	* end == delim	39:12:509:521	7016704	0	True				
ANR	7016769	EqualityExpression	* end == delim		7016704	0		==			
ANR	7016770	UnaryOperationExpression	* end		7016704	0					
ANR	7016771	UnaryOperator	*		7016704	0					
ANR	7016772	Identifier	end		7016704	1					
ANR	7016773	Identifier	delim		7016704	1					
ANR	7016774	CompoundStatement		31:27:317:317	7016704	1					
ANR	7016775	ExpressionStatement	* p = end + 1	41:12:539:551	7016704	0	True				
ANR	7016776	AssignmentExpression	* p = end + 1		7016704	0		=			
ANR	7016777	UnaryOperationExpression	* p		7016704	0					
ANR	7016778	UnaryOperator	*		7016704	0					
ANR	7016779	Identifier	p		7016704	1					
ANR	7016780	AdditiveExpression	end + 1		7016704	1		+			
ANR	7016781	Identifier	end		7016704	0					
ANR	7016782	PrimaryExpression	1		7016704	1					
ANR	7016783	ExpressionStatement	* end = '\\0'	43:12:566:577	7016704	1	True				
ANR	7016784	AssignmentExpression	* end = '\\0'		7016704	0		=			
ANR	7016785	UnaryOperationExpression	* end		7016704	0					
ANR	7016786	UnaryOperator	*		7016704	0					
ANR	7016787	Identifier	end		7016704	1					
ANR	7016788	PrimaryExpression	'\\0'		7016704	1					
ANR	7016789	ExpressionStatement	l = strlen ( src )	49:4:602:617	7016704	4	True				
ANR	7016790	AssignmentExpression	l = strlen ( src )		7016704	0		=			
ANR	7016791	Identifier	l		7016704	0					
ANR	7016792	CallExpression	strlen ( src )		7016704	1					
ANR	7016793	Callee	strlen		7016704	0					
ANR	7016794	Identifier	strlen		7016704	0					
ANR	7016795	ArgumentList	src		7016704	1					
ANR	7016796	Argument	src		7016704	0					
ANR	7016797	Identifier	src		7016704	0					
ANR	7016798	IfStatement	if ( l >= max_len )		7016704	5					
ANR	7016799	Condition	l >= max_len	51:8:628:639	7016704	0	True				
ANR	7016800	RelationalExpression	l >= max_len		7016704	0		>=			
ANR	7016801	Identifier	l		7016704	0					
ANR	7016802	Identifier	max_len		7016704	1					
ANR	7016803	CompoundStatement		43:22:435:435	7016704	1					
ANR	7016804	ExpressionStatement	"error_setg ( errp , ""%s too long"" , name )"	53:8:653:690	7016704	0	True				
ANR	7016805	CallExpression	"error_setg ( errp , ""%s too long"" , name )"		7016704	0					
ANR	7016806	Callee	error_setg		7016704	0					
ANR	7016807	Identifier	error_setg		7016704	0					
ANR	7016808	ArgumentList	errp		7016704	1					
ANR	7016809	Argument	errp		7016704	0					
ANR	7016810	Identifier	errp		7016704	0					
ANR	7016811	Argument	"""%s too long"""		7016704	1					
ANR	7016812	PrimaryExpression	"""%s too long"""		7016704	0					
ANR	7016813	Argument	name		7016704	2					
ANR	7016814	Identifier	name		7016704	0					
ANR	7016815	ReturnStatement	return NULL ;	55:8:701:712	7016704	1	True				
ANR	7016816	Identifier	NULL		7016704	0					
ANR	7016817	ElseStatement	else		7016704	0					
ANR	7016818	IfStatement	if ( l == 0 )		7016704	0					
ANR	7016819	Condition	l == 0	57:15:730:735	7016704	0	True				
ANR	7016820	EqualityExpression	l == 0		7016704	0		==			
ANR	7016821	Identifier	l		7016704	0					
ANR	7016822	PrimaryExpression	0		7016704	1					
ANR	7016823	CompoundStatement		49:23:531:531	7016704	1					
ANR	7016824	ExpressionStatement	"error_setg ( errp , ""%s too short"" , name )"	59:8:749:787	7016704	0	True				
ANR	7016825	CallExpression	"error_setg ( errp , ""%s too short"" , name )"		7016704	0					
ANR	7016826	Callee	error_setg		7016704	0					
ANR	7016827	Identifier	error_setg		7016704	0					
ANR	7016828	ArgumentList	errp		7016704	1					
ANR	7016829	Argument	errp		7016704	0					
ANR	7016830	Identifier	errp		7016704	0					
ANR	7016831	Argument	"""%s too short"""		7016704	1					
ANR	7016832	PrimaryExpression	"""%s too short"""		7016704	0					
ANR	7016833	Argument	name		7016704	2					
ANR	7016834	Identifier	name		7016704	0					
ANR	7016835	ReturnStatement	return NULL ;	61:8:798:809	7016704	1	True				
ANR	7016836	Identifier	NULL		7016704	0					
ANR	7016837	ReturnStatement	return src ;	67:4:825:835	7016704	6	True				
ANR	7016838	Identifier	src		7016704	0					
ANR	7016839	ReturnType	static char *		7016704	1					
ANR	7016840	Identifier	qemu_rbd_next_tok		7016704	2					
ANR	7016841	ParameterList	"int max_len , char * src , char delim , const char * name , char * * p , Error * * errp"		7016704	3					
ANR	7016842	Parameter	int max_len	1:31:31:41	7016704	0	True				
ANR	7016843	ParameterType	int		7016704	0					
ANR	7016844	Identifier	max_len		7016704	1					
ANR	7016845	Parameter	char * src	3:31:76:84	7016704	1	True				
ANR	7016846	ParameterType	char *		7016704	0					
ANR	7016847	Identifier	src		7016704	1					
ANR	7016848	Parameter	char delim	3:42:87:96	7016704	2	True				
ANR	7016849	ParameterType	char		7016704	0					
ANR	7016850	Identifier	delim		7016704	1					
ANR	7016851	Parameter	const char * name	5:31:131:146	7016704	3	True				
ANR	7016852	ParameterType	const char *		7016704	0					
ANR	7016853	Identifier	name		7016704	1					
ANR	7016854	Parameter	char * * p	7:31:181:188	7016704	4	True				
ANR	7016855	ParameterType	char * *		7016704	0					
ANR	7016856	Identifier	p		7016704	1					
ANR	7016857	Parameter	Error * * errp	7:41:191:202	7016704	5	True				
ANR	7016858	ParameterType	Error * *		7016704	0					
ANR	7016859	Identifier	errp		7016704	1					
ANR	7016860	CFGEntryNode	ENTRY		7016704		True				
ANR	7016861	CFGExitNode	EXIT		7016704		True				
ANR	7016862	Symbol	p		7016704						
ANR	7016863	Symbol	strlen		7016704						
ANR	7016864	Symbol	NULL		7016704						
ANR	7016865	Symbol	errp		7016704						
ANR	7016866	Symbol	src		7016704						
ANR	7016867	Symbol	name		7016704						
ANR	7016868	Symbol	end		7016704						
ANR	7016869	Symbol	* p		7016704						
ANR	7016870	Symbol	* end		7016704						
ANR	7016871	Symbol	l		7016704						
ANR	7016872	Symbol	max_len		7016704						
ANR	7016873	Symbol	delim		7016704						
