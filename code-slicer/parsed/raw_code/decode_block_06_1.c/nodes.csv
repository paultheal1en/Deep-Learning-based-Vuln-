command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1710700	File	/home/p4ultr4n/workplace/ReVeal/raw_code/decode_block_06_1.c								
ANR	1710701	Function	decode_block	1:0:0:3272							
ANR	1710702	FunctionDef	"decode_block (BinkAudioContext * s , float * * out , int use_dct)"		1710701	0					
ANR	1710703	CompoundStatement		3:0:72:3272	1710701	0					
ANR	1710704	IdentifierDeclStatement	"int ch , i , j , k ;"	5:4:79:94	1710701	0	True				
ANR	1710705	IdentifierDecl	ch		1710701	0					
ANR	1710706	IdentifierDeclType	int		1710701	0					
ANR	1710707	Identifier	ch		1710701	1					
ANR	1710708	IdentifierDecl	i		1710701	1					
ANR	1710709	IdentifierDeclType	int		1710701	0					
ANR	1710710	Identifier	i		1710701	1					
ANR	1710711	IdentifierDecl	j		1710701	2					
ANR	1710712	IdentifierDeclType	int		1710701	0					
ANR	1710713	Identifier	j		1710701	1					
ANR	1710714	IdentifierDecl	k		1710701	3					
ANR	1710715	IdentifierDeclType	int		1710701	0					
ANR	1710716	Identifier	k		1710701	1					
ANR	1710717	IdentifierDeclStatement	"float q , quant [ 25 ] ;"	7:4:101:119	1710701	1	True				
ANR	1710718	IdentifierDecl	q		1710701	0					
ANR	1710719	IdentifierDeclType	float		1710701	0					
ANR	1710720	Identifier	q		1710701	1					
ANR	1710721	IdentifierDecl	quant [ 25 ]		1710701	1					
ANR	1710722	IdentifierDeclType	float [ 25 ]		1710701	0					
ANR	1710723	Identifier	quant		1710701	1					
ANR	1710724	PrimaryExpression	25		1710701	2					
ANR	1710725	IdentifierDeclStatement	"int width , coeff ;"	9:4:126:142	1710701	2	True				
ANR	1710726	IdentifierDecl	width		1710701	0					
ANR	1710727	IdentifierDeclType	int		1710701	0					
ANR	1710728	Identifier	width		1710701	1					
ANR	1710729	IdentifierDecl	coeff		1710701	1					
ANR	1710730	IdentifierDeclType	int		1710701	0					
ANR	1710731	Identifier	coeff		1710701	1					
ANR	1710732	IdentifierDeclStatement	GetBitContext * gb = & s -> gb ;	11:4:149:175	1710701	3	True				
ANR	1710733	IdentifierDecl	* gb = & s -> gb		1710701	0					
ANR	1710734	IdentifierDeclType	GetBitContext *		1710701	0					
ANR	1710735	Identifier	gb		1710701	1					
ANR	1710736	AssignmentExpression	* gb = & s -> gb		1710701	2		=			
ANR	1710737	Identifier	gb		1710701	0					
ANR	1710738	UnaryOperationExpression	& s -> gb		1710701	1					
ANR	1710739	UnaryOperator	&		1710701	0					
ANR	1710740	PtrMemberAccess	s -> gb		1710701	1					
ANR	1710741	Identifier	s		1710701	0					
ANR	1710742	Identifier	gb		1710701	1					
ANR	1710743	IfStatement	if ( use_dct )		1710701	4					
ANR	1710744	Condition	use_dct	15:8:188:194	1710701	0	True				
ANR	1710745	Identifier	use_dct		1710701	0					
ANR	1710746	ExpressionStatement	"skip_bits ( gb , 2 )"	17:8:206:222	1710701	1	True				
ANR	1710747	CallExpression	"skip_bits ( gb , 2 )"		1710701	0					
ANR	1710748	Callee	skip_bits		1710701	0					
ANR	1710749	Identifier	skip_bits		1710701	0					
ANR	1710750	ArgumentList	gb		1710701	1					
ANR	1710751	Argument	gb		1710701	0					
ANR	1710752	Identifier	gb		1710701	0					
ANR	1710753	Argument	2		1710701	1					
ANR	1710754	PrimaryExpression	2		1710701	0					
ANR	1710755	ForStatement	for ( ch = 0 ; ch < s -> channels ; ch ++ )		1710701	5					
ANR	1710756	ForInit	ch = 0 ;	21:9:236:242	1710701	0	True				
ANR	1710757	AssignmentExpression	ch = 0		1710701	0		=			
ANR	1710758	Identifier	ch		1710701	0					
ANR	1710759	PrimaryExpression	0		1710701	1					
ANR	1710760	Condition	ch < s -> channels	21:17:244:259	1710701	1	True				
ANR	1710761	RelationalExpression	ch < s -> channels		1710701	0		<			
ANR	1710762	Identifier	ch		1710701	0					
ANR	1710763	PtrMemberAccess	s -> channels		1710701	1					
ANR	1710764	Identifier	s		1710701	0					
ANR	1710765	Identifier	channels		1710701	1					
ANR	1710766	PostIncDecOperationExpression	ch ++	21:35:262:265	1710701	2	True				
ANR	1710767	Identifier	ch		1710701	0					
ANR	1710768	IncDec	++		1710701	1					
ANR	1710769	CompoundStatement		21:8:206:233	1710701	3					
ANR	1710770	IdentifierDeclStatement	FFTSample * coeffs = out [ ch ] ;	23:8:279:306	1710701	0	True				
ANR	1710771	IdentifierDecl	* coeffs = out [ ch ]		1710701	0					
ANR	1710772	IdentifierDeclType	FFTSample *		1710701	0					
ANR	1710773	Identifier	coeffs		1710701	1					
ANR	1710774	AssignmentExpression	* coeffs = out [ ch ]		1710701	2		=			
ANR	1710775	Identifier	coeffs		1710701	0					
ANR	1710776	ArrayIndexing	out [ ch ]		1710701	1					
ANR	1710777	Identifier	out		1710701	0					
ANR	1710778	Identifier	ch		1710701	1					
ANR	1710779	IfStatement	if ( s -> version_b )		1710701	1					
ANR	1710780	Condition	s -> version_b	27:12:323:334	1710701	0	True				
ANR	1710781	PtrMemberAccess	s -> version_b		1710701	0					
ANR	1710782	Identifier	s		1710701	0					
ANR	1710783	Identifier	version_b		1710701	1					
ANR	1710784	CompoundStatement		25:26:264:264	1710701	1					
ANR	1710785	IfStatement	if ( get_bits_left ( gb ) < 64 )		1710701	0					
ANR	1710786	Condition	get_bits_left ( gb ) < 64	29:16:356:377	1710701	0	True				
ANR	1710787	RelationalExpression	get_bits_left ( gb ) < 64		1710701	0		<			
ANR	1710788	CallExpression	get_bits_left ( gb )		1710701	0					
ANR	1710789	Callee	get_bits_left		1710701	0					
ANR	1710790	Identifier	get_bits_left		1710701	0					
ANR	1710791	ArgumentList	gb		1710701	1					
ANR	1710792	Argument	gb		1710701	0					
ANR	1710793	Identifier	gb		1710701	0					
ANR	1710794	PrimaryExpression	64		1710701	1					
ANR	1710795	ReturnStatement	return AVERROR_INVALIDDATA ;	31:16:397:423	1710701	1	True				
ANR	1710796	Identifier	AVERROR_INVALIDDATA		1710701	0					
ANR	1710797	ExpressionStatement	"coeffs [ 0 ] = av_int2float ( get_bits_long ( gb , 32 ) ) * s -> root"	33:12:438:495	1710701	1	True				
ANR	1710798	AssignmentExpression	"coeffs [ 0 ] = av_int2float ( get_bits_long ( gb , 32 ) ) * s -> root"		1710701	0		=			
ANR	1710799	ArrayIndexing	coeffs [ 0 ]		1710701	0					
ANR	1710800	Identifier	coeffs		1710701	0					
ANR	1710801	PrimaryExpression	0		1710701	1					
ANR	1710802	MultiplicativeExpression	"av_int2float ( get_bits_long ( gb , 32 ) ) * s -> root"		1710701	1		*			
ANR	1710803	CallExpression	"av_int2float ( get_bits_long ( gb , 32 ) )"		1710701	0					
ANR	1710804	Callee	av_int2float		1710701	0					
ANR	1710805	Identifier	av_int2float		1710701	0					
ANR	1710806	ArgumentList	"get_bits_long ( gb , 32 )"		1710701	1					
ANR	1710807	Argument	"get_bits_long ( gb , 32 )"		1710701	0					
ANR	1710808	CallExpression	"get_bits_long ( gb , 32 )"		1710701	0					
ANR	1710809	Callee	get_bits_long		1710701	0					
ANR	1710810	Identifier	get_bits_long		1710701	0					
ANR	1710811	ArgumentList	gb		1710701	1					
ANR	1710812	Argument	gb		1710701	0					
ANR	1710813	Identifier	gb		1710701	0					
ANR	1710814	Argument	32		1710701	1					
ANR	1710815	PrimaryExpression	32		1710701	0					
ANR	1710816	PtrMemberAccess	s -> root		1710701	1					
ANR	1710817	Identifier	s		1710701	0					
ANR	1710818	Identifier	root		1710701	1					
ANR	1710819	ExpressionStatement	"coeffs [ 1 ] = av_int2float ( get_bits_long ( gb , 32 ) ) * s -> root"	35:12:510:567	1710701	2	True				
ANR	1710820	AssignmentExpression	"coeffs [ 1 ] = av_int2float ( get_bits_long ( gb , 32 ) ) * s -> root"		1710701	0		=			
ANR	1710821	ArrayIndexing	coeffs [ 1 ]		1710701	0					
ANR	1710822	Identifier	coeffs		1710701	0					
ANR	1710823	PrimaryExpression	1		1710701	1					
ANR	1710824	MultiplicativeExpression	"av_int2float ( get_bits_long ( gb , 32 ) ) * s -> root"		1710701	1		*			
ANR	1710825	CallExpression	"av_int2float ( get_bits_long ( gb , 32 ) )"		1710701	0					
ANR	1710826	Callee	av_int2float		1710701	0					
ANR	1710827	Identifier	av_int2float		1710701	0					
ANR	1710828	ArgumentList	"get_bits_long ( gb , 32 )"		1710701	1					
ANR	1710829	Argument	"get_bits_long ( gb , 32 )"		1710701	0					
ANR	1710830	CallExpression	"get_bits_long ( gb , 32 )"		1710701	0					
ANR	1710831	Callee	get_bits_long		1710701	0					
ANR	1710832	Identifier	get_bits_long		1710701	0					
ANR	1710833	ArgumentList	gb		1710701	1					
ANR	1710834	Argument	gb		1710701	0					
ANR	1710835	Identifier	gb		1710701	0					
ANR	1710836	Argument	32		1710701	1					
ANR	1710837	PrimaryExpression	32		1710701	0					
ANR	1710838	PtrMemberAccess	s -> root		1710701	1					
ANR	1710839	Identifier	s		1710701	0					
ANR	1710840	Identifier	root		1710701	1					
ANR	1710841	ElseStatement	else		1710701	0					
ANR	1710842	CompoundStatement		35:15:512:512	1710701	0					
ANR	1710843	IfStatement	if ( get_bits_left ( gb ) < 58 )		1710701	0					
ANR	1710844	Condition	get_bits_left ( gb ) < 58	39:16:604:625	1710701	0	True				
ANR	1710845	RelationalExpression	get_bits_left ( gb ) < 58		1710701	0		<			
ANR	1710846	CallExpression	get_bits_left ( gb )		1710701	0					
ANR	1710847	Callee	get_bits_left		1710701	0					
ANR	1710848	Identifier	get_bits_left		1710701	0					
ANR	1710849	ArgumentList	gb		1710701	1					
ANR	1710850	Argument	gb		1710701	0					
ANR	1710851	Identifier	gb		1710701	0					
ANR	1710852	PrimaryExpression	58		1710701	1					
ANR	1710853	ReturnStatement	return AVERROR_INVALIDDATA ;	41:16:645:671	1710701	1	True				
ANR	1710854	Identifier	AVERROR_INVALIDDATA		1710701	0					
ANR	1710855	ExpressionStatement	coeffs [ 0 ] = get_float ( gb ) * s -> root	43:12:686:721	1710701	1	True				
ANR	1710856	AssignmentExpression	coeffs [ 0 ] = get_float ( gb ) * s -> root		1710701	0		=			
ANR	1710857	ArrayIndexing	coeffs [ 0 ]		1710701	0					
ANR	1710858	Identifier	coeffs		1710701	0					
ANR	1710859	PrimaryExpression	0		1710701	1					
ANR	1710860	MultiplicativeExpression	get_float ( gb ) * s -> root		1710701	1		*			
ANR	1710861	CallExpression	get_float ( gb )		1710701	0					
ANR	1710862	Callee	get_float		1710701	0					
ANR	1710863	Identifier	get_float		1710701	0					
ANR	1710864	ArgumentList	gb		1710701	1					
ANR	1710865	Argument	gb		1710701	0					
ANR	1710866	Identifier	gb		1710701	0					
ANR	1710867	PtrMemberAccess	s -> root		1710701	1					
ANR	1710868	Identifier	s		1710701	0					
ANR	1710869	Identifier	root		1710701	1					
ANR	1710870	ExpressionStatement	coeffs [ 1 ] = get_float ( gb ) * s -> root	45:12:736:771	1710701	2	True				
ANR	1710871	AssignmentExpression	coeffs [ 1 ] = get_float ( gb ) * s -> root		1710701	0		=			
ANR	1710872	ArrayIndexing	coeffs [ 1 ]		1710701	0					
ANR	1710873	Identifier	coeffs		1710701	0					
ANR	1710874	PrimaryExpression	1		1710701	1					
ANR	1710875	MultiplicativeExpression	get_float ( gb ) * s -> root		1710701	1		*			
ANR	1710876	CallExpression	get_float ( gb )		1710701	0					
ANR	1710877	Callee	get_float		1710701	0					
ANR	1710878	Identifier	get_float		1710701	0					
ANR	1710879	ArgumentList	gb		1710701	1					
ANR	1710880	Argument	gb		1710701	0					
ANR	1710881	Identifier	gb		1710701	0					
ANR	1710882	PtrMemberAccess	s -> root		1710701	1					
ANR	1710883	Identifier	s		1710701	0					
ANR	1710884	Identifier	root		1710701	1					
ANR	1710885	IfStatement	if ( get_bits_left ( gb ) < s -> num_bands * 8 )		1710701	2					
ANR	1710886	Condition	get_bits_left ( gb ) < s -> num_bands * 8	51:12:799:834	1710701	0	True				
ANR	1710887	RelationalExpression	get_bits_left ( gb ) < s -> num_bands * 8		1710701	0		<			
ANR	1710888	CallExpression	get_bits_left ( gb )		1710701	0					
ANR	1710889	Callee	get_bits_left		1710701	0					
ANR	1710890	Identifier	get_bits_left		1710701	0					
ANR	1710891	ArgumentList	gb		1710701	1					
ANR	1710892	Argument	gb		1710701	0					
ANR	1710893	Identifier	gb		1710701	0					
ANR	1710894	MultiplicativeExpression	s -> num_bands * 8		1710701	1		*			
ANR	1710895	PtrMemberAccess	s -> num_bands		1710701	0					
ANR	1710896	Identifier	s		1710701	0					
ANR	1710897	Identifier	num_bands		1710701	1					
ANR	1710898	PrimaryExpression	8		1710701	1					
ANR	1710899	ReturnStatement	return AVERROR_INVALIDDATA ;	53:12:850:876	1710701	1	True				
ANR	1710900	Identifier	AVERROR_INVALIDDATA		1710701	0					
ANR	1710901	ForStatement	for ( i = 0 ; i < s -> num_bands ; i ++ )		1710701	3					
ANR	1710902	ForInit	i = 0 ;	55:13:892:897	1710701	0	True				
ANR	1710903	AssignmentExpression	i = 0		1710701	0		=			
ANR	1710904	Identifier	i		1710701	0					
ANR	1710905	PrimaryExpression	0		1710701	1					
ANR	1710906	Condition	i < s -> num_bands	55:20:899:914	1710701	1	True				
ANR	1710907	RelationalExpression	i < s -> num_bands		1710701	0		<			
ANR	1710908	Identifier	i		1710701	0					
ANR	1710909	PtrMemberAccess	s -> num_bands		1710701	1					
ANR	1710910	Identifier	s		1710701	0					
ANR	1710911	Identifier	num_bands		1710701	1					
ANR	1710912	PostIncDecOperationExpression	i ++	55:38:917:919	1710701	2	True				
ANR	1710913	Identifier	i		1710701	0					
ANR	1710914	IncDec	++		1710701	1					
ANR	1710915	CompoundStatement		55:12:864:891	1710701	3					
ANR	1710916	IdentifierDeclStatement	"int value = get_bits ( gb , 8 ) ;"	57:12:937:964	1710701	0	True				
ANR	1710917	IdentifierDecl	"value = get_bits ( gb , 8 )"		1710701	0					
ANR	1710918	IdentifierDeclType	int		1710701	0					
ANR	1710919	Identifier	value		1710701	1					
ANR	1710920	AssignmentExpression	"value = get_bits ( gb , 8 )"		1710701	2		=			
ANR	1710921	Identifier	value		1710701	0					
ANR	1710922	CallExpression	"get_bits ( gb , 8 )"		1710701	1					
ANR	1710923	Callee	get_bits		1710701	0					
ANR	1710924	Identifier	get_bits		1710701	0					
ANR	1710925	ArgumentList	gb		1710701	1					
ANR	1710926	Argument	gb		1710701	0					
ANR	1710927	Identifier	gb		1710701	0					
ANR	1710928	Argument	8		1710701	1					
ANR	1710929	PrimaryExpression	8		1710701	0					
ANR	1710930	ExpressionStatement	"quant [ i ] = quant_table [ FFMIN ( value , 95 ) ]"	59:12:979:1020	1710701	1	True				
ANR	1710931	AssignmentExpression	"quant [ i ] = quant_table [ FFMIN ( value , 95 ) ]"		1710701	0		=			
ANR	1710932	ArrayIndexing	quant [ i ]		1710701	0					
ANR	1710933	Identifier	quant		1710701	0					
ANR	1710934	Identifier	i		1710701	1					
ANR	1710935	ArrayIndexing	"quant_table [ FFMIN ( value , 95 ) ]"		1710701	1					
ANR	1710936	Identifier	quant_table		1710701	0					
ANR	1710937	CallExpression	"FFMIN ( value , 95 )"		1710701	1					
ANR	1710938	Callee	FFMIN		1710701	0					
ANR	1710939	Identifier	FFMIN		1710701	0					
ANR	1710940	ArgumentList	value		1710701	1					
ANR	1710941	Argument	value		1710701	0					
ANR	1710942	Identifier	value		1710701	0					
ANR	1710943	Argument	95		1710701	1					
ANR	1710944	PrimaryExpression	95		1710701	0					
ANR	1710945	ExpressionStatement	k = 0	65:8:1044:1049	1710701	4	True				
ANR	1710946	AssignmentExpression	k = 0		1710701	0		=			
ANR	1710947	Identifier	k		1710701	0					
ANR	1710948	PrimaryExpression	0		1710701	1					
ANR	1710949	ExpressionStatement	q = quant [ 0 ]	67:8:1060:1072	1710701	5	True				
ANR	1710950	AssignmentExpression	q = quant [ 0 ]		1710701	0		=			
ANR	1710951	Identifier	q		1710701	0					
ANR	1710952	ArrayIndexing	quant [ 0 ]		1710701	1					
ANR	1710953	Identifier	quant		1710701	0					
ANR	1710954	PrimaryExpression	0		1710701	1					
ANR	1710955	ExpressionStatement	i = 2	73:8:1116:1121	1710701	6	True				
ANR	1710956	AssignmentExpression	i = 2		1710701	0		=			
ANR	1710957	Identifier	i		1710701	0					
ANR	1710958	PrimaryExpression	2		1710701	1					
ANR	1710959	WhileStatement	while ( i < s -> frame_len )		1710701	7					
ANR	1710960	Condition	i < s -> frame_len	75:15:1139:1154	1710701	0	True				
ANR	1710961	RelationalExpression	i < s -> frame_len		1710701	0		<			
ANR	1710962	Identifier	i		1710701	0					
ANR	1710963	PtrMemberAccess	s -> frame_len		1710701	1					
ANR	1710964	Identifier	s		1710701	0					
ANR	1710965	Identifier	frame_len		1710701	1					
ANR	1710966	CompoundStatement		73:33:1084:1084	1710701	1					
ANR	1710967	IfStatement	if ( s -> version_b )		1710701	0					
ANR	1710968	Condition	s -> version_b	77:16:1176:1187	1710701	0	True				
ANR	1710969	PtrMemberAccess	s -> version_b		1710701	0					
ANR	1710970	Identifier	s		1710701	0					
ANR	1710971	Identifier	version_b		1710701	1					
ANR	1710972	CompoundStatement		75:30:1117:1117	1710701	1					
ANR	1710973	ExpressionStatement	j = i + 16	79:16:1209:1219	1710701	0	True				
ANR	1710974	AssignmentExpression	j = i + 16		1710701	0		=			
ANR	1710975	Identifier	j		1710701	0					
ANR	1710976	AdditiveExpression	i + 16		1710701	1		+			
ANR	1710977	Identifier	i		1710701	0					
ANR	1710978	PrimaryExpression	16		1710701	1					
ANR	1710979	ElseStatement	else		1710701	0					
ANR	1710980	CompoundStatement		81:16:1187:1192	1710701	0					
ANR	1710981	IdentifierDeclStatement	int v ;	83:16:1260:1265	1710701	0	True				
ANR	1710982	IdentifierDecl	v		1710701	0					
ANR	1710983	IdentifierDeclType	int		1710701	0					
ANR	1710984	Identifier	v		1710701	1					
ANR	1710985	ExpressionStatement	"GET_BITS_SAFE ( v , 1 )"	85:16:1284:1303	1710701	1	True				
ANR	1710986	CallExpression	"GET_BITS_SAFE ( v , 1 )"		1710701	0					
ANR	1710987	Callee	GET_BITS_SAFE		1710701	0					
ANR	1710988	Identifier	GET_BITS_SAFE		1710701	0					
ANR	1710989	ArgumentList	v		1710701	1					
ANR	1710990	Argument	v		1710701	0					
ANR	1710991	Identifier	v		1710701	0					
ANR	1710992	Argument	1		1710701	1					
ANR	1710993	PrimaryExpression	1		1710701	0					
ANR	1710994	IfStatement	if ( v )		1710701	2					
ANR	1710995	Condition	v	87:20:1326:1326	1710701	0	True				
ANR	1710996	Identifier	v		1710701	0					
ANR	1710997	CompoundStatement		85:23:1256:1256	1710701	1					
ANR	1710998	ExpressionStatement	"GET_BITS_SAFE ( v , 4 )"	89:20:1352:1371	1710701	0	True				
ANR	1710999	CallExpression	"GET_BITS_SAFE ( v , 4 )"		1710701	0					
ANR	1711000	Callee	GET_BITS_SAFE		1710701	0					
ANR	1711001	Identifier	GET_BITS_SAFE		1710701	0					
ANR	1711002	ArgumentList	v		1710701	1					
ANR	1711003	Argument	v		1710701	0					
ANR	1711004	Identifier	v		1710701	0					
ANR	1711005	Argument	4		1710701	1					
ANR	1711006	PrimaryExpression	4		1710701	0					
ANR	1711007	ExpressionStatement	j = i + rle_length_tab [ v ] * 8	91:20:1394:1423	1710701	1	True				
ANR	1711008	AssignmentExpression	j = i + rle_length_tab [ v ] * 8		1710701	0		=			
ANR	1711009	Identifier	j		1710701	0					
ANR	1711010	AdditiveExpression	i + rle_length_tab [ v ] * 8		1710701	1		+			
ANR	1711011	Identifier	i		1710701	0					
ANR	1711012	MultiplicativeExpression	rle_length_tab [ v ] * 8		1710701	1		*			
ANR	1711013	ArrayIndexing	rle_length_tab [ v ]		1710701	0					
ANR	1711014	Identifier	rle_length_tab		1710701	0					
ANR	1711015	Identifier	v		1710701	1					
ANR	1711016	PrimaryExpression	8		1710701	1					
ANR	1711017	ElseStatement	else		1710701	0					
ANR	1711018	CompoundStatement		91:23:1376:1376	1710701	0					
ANR	1711019	ExpressionStatement	j = i + 8	95:20:1472:1481	1710701	0	True				
ANR	1711020	AssignmentExpression	j = i + 8		1710701	0		=			
ANR	1711021	Identifier	j		1710701	0					
ANR	1711022	AdditiveExpression	i + 8		1710701	1		+			
ANR	1711023	Identifier	i		1710701	0					
ANR	1711024	PrimaryExpression	8		1710701	1					
ANR	1711025	ExpressionStatement	"j = FFMIN ( j , s -> frame_len )"	103:12:1532:1558	1710701	1	True				
ANR	1711026	AssignmentExpression	"j = FFMIN ( j , s -> frame_len )"		1710701	0		=			
ANR	1711027	Identifier	j		1710701	0					
ANR	1711028	CallExpression	"FFMIN ( j , s -> frame_len )"		1710701	1					
ANR	1711029	Callee	FFMIN		1710701	0					
ANR	1711030	Identifier	FFMIN		1710701	0					
ANR	1711031	ArgumentList	j		1710701	1					
ANR	1711032	Argument	j		1710701	0					
ANR	1711033	Identifier	j		1710701	0					
ANR	1711034	Argument	s -> frame_len		1710701	1					
ANR	1711035	PtrMemberAccess	s -> frame_len		1710701	0					
ANR	1711036	Identifier	s		1710701	0					
ANR	1711037	Identifier	frame_len		1710701	1					
ANR	1711038	ExpressionStatement	"GET_BITS_SAFE ( width , 4 )"	107:12:1575:1598	1710701	2	True				
ANR	1711039	CallExpression	"GET_BITS_SAFE ( width , 4 )"		1710701	0					
ANR	1711040	Callee	GET_BITS_SAFE		1710701	0					
ANR	1711041	Identifier	GET_BITS_SAFE		1710701	0					
ANR	1711042	ArgumentList	width		1710701	1					
ANR	1711043	Argument	width		1710701	0					
ANR	1711044	Identifier	width		1710701	0					
ANR	1711045	Argument	4		1710701	1					
ANR	1711046	PrimaryExpression	4		1710701	0					
ANR	1711047	IfStatement	if ( width == 0 )		1710701	3					
ANR	1711048	Condition	width == 0	109:16:1617:1626	1710701	0	True				
ANR	1711049	EqualityExpression	width == 0		1710701	0		==			
ANR	1711050	Identifier	width		1710701	0					
ANR	1711051	PrimaryExpression	0		1710701	1					
ANR	1711052	CompoundStatement		107:28:1556:1556	1710701	1					
ANR	1711053	ExpressionStatement	"memset ( coeffs + i , 0 , ( j - i ) * sizeof ( * coeffs ) )"	111:16:1648:1696	1710701	0	True				
ANR	1711054	CallExpression	"memset ( coeffs + i , 0 , ( j - i ) * sizeof ( * coeffs ) )"		1710701	0					
ANR	1711055	Callee	memset		1710701	0					
ANR	1711056	Identifier	memset		1710701	0					
ANR	1711057	ArgumentList	coeffs + i		1710701	1					
ANR	1711058	Argument	coeffs + i		1710701	0					
ANR	1711059	AdditiveExpression	coeffs + i		1710701	0		+			
ANR	1711060	Identifier	coeffs		1710701	0					
ANR	1711061	Identifier	i		1710701	1					
ANR	1711062	Argument	0		1710701	1					
ANR	1711063	PrimaryExpression	0		1710701	0					
ANR	1711064	Argument	( j - i ) * sizeof ( * coeffs )		1710701	2					
ANR	1711065	MultiplicativeExpression	( j - i ) * sizeof ( * coeffs )		1710701	0		*			
ANR	1711066	AdditiveExpression	j - i		1710701	0		-			
ANR	1711067	Identifier	j		1710701	0					
ANR	1711068	Identifier	i		1710701	1					
ANR	1711069	SizeofExpression	sizeof ( * coeffs )		1710701	1					
ANR	1711070	Sizeof	sizeof		1710701	0					
ANR	1711071	UnaryOperationExpression	* coeffs		1710701	1					
ANR	1711072	UnaryOperator	*		1710701	0					
ANR	1711073	Identifier	coeffs		1710701	1					
ANR	1711074	ExpressionStatement	i = j	113:16:1715:1720	1710701	1	True				
ANR	1711075	AssignmentExpression	i = j		1710701	0		=			
ANR	1711076	Identifier	i		1710701	0					
ANR	1711077	Identifier	j		1710701	1					
ANR	1711078	WhileStatement	while ( s -> bands [ k ] < i )		1710701	2					
ANR	1711079	Condition	s -> bands [ k ] < i	115:23:1746:1760	1710701	0	True				
ANR	1711080	RelationalExpression	s -> bands [ k ] < i		1710701	0		<			
ANR	1711081	ArrayIndexing	s -> bands [ k ]		1710701	0					
ANR	1711082	PtrMemberAccess	s -> bands		1710701	0					
ANR	1711083	Identifier	s		1710701	0					
ANR	1711084	Identifier	bands		1710701	1					
ANR	1711085	Identifier	k		1710701	1					
ANR	1711086	Identifier	i		1710701	1					
ANR	1711087	ExpressionStatement	q = quant [ k ++ ]	117:20:1784:1798	1710701	1	True				
ANR	1711088	AssignmentExpression	q = quant [ k ++ ]		1710701	0		=			
ANR	1711089	Identifier	q		1710701	0					
ANR	1711090	ArrayIndexing	quant [ k ++ ]		1710701	1					
ANR	1711091	Identifier	quant		1710701	0					
ANR	1711092	PostIncDecOperationExpression	k ++		1710701	1					
ANR	1711093	Identifier	k		1710701	0					
ANR	1711094	IncDec	++		1710701	1					
ANR	1711095	ElseStatement	else		1710701	0					
ANR	1711096	CompoundStatement		117:19:1747:1747	1710701	0					
ANR	1711097	WhileStatement	while ( i < j )		1710701	0					
ANR	1711098	Condition	i < j	121:23:1846:1850	1710701	0	True				
ANR	1711099	RelationalExpression	i < j		1710701	0		<			
ANR	1711100	Identifier	i		1710701	0					
ANR	1711101	Identifier	j		1710701	1					
ANR	1711102	CompoundStatement		119:30:1780:1780	1710701	1					
ANR	1711103	IfStatement	if ( s -> bands [ k ] == i )		1710701	0					
ANR	1711104	Condition	s -> bands [ k ] == i	123:24:1880:1895	1710701	0	True				
ANR	1711105	EqualityExpression	s -> bands [ k ] == i		1710701	0		==			
ANR	1711106	ArrayIndexing	s -> bands [ k ]		1710701	0					
ANR	1711107	PtrMemberAccess	s -> bands		1710701	0					
ANR	1711108	Identifier	s		1710701	0					
ANR	1711109	Identifier	bands		1710701	1					
ANR	1711110	Identifier	k		1710701	1					
ANR	1711111	Identifier	i		1710701	1					
ANR	1711112	ExpressionStatement	q = quant [ k ++ ]	125:24:1923:1937	1710701	1	True				
ANR	1711113	AssignmentExpression	q = quant [ k ++ ]		1710701	0		=			
ANR	1711114	Identifier	q		1710701	0					
ANR	1711115	ArrayIndexing	quant [ k ++ ]		1710701	1					
ANR	1711116	Identifier	quant		1710701	0					
ANR	1711117	PostIncDecOperationExpression	k ++		1710701	1					
ANR	1711118	Identifier	k		1710701	0					
ANR	1711119	IncDec	++		1710701	1					
ANR	1711120	ExpressionStatement	"GET_BITS_SAFE ( coeff , width )"	127:20:1960:1987	1710701	1	True				
ANR	1711121	CallExpression	"GET_BITS_SAFE ( coeff , width )"		1710701	0					
ANR	1711122	Callee	GET_BITS_SAFE		1710701	0					
ANR	1711123	Identifier	GET_BITS_SAFE		1710701	0					
ANR	1711124	ArgumentList	coeff		1710701	1					
ANR	1711125	Argument	coeff		1710701	0					
ANR	1711126	Identifier	coeff		1710701	0					
ANR	1711127	Argument	width		1710701	1					
ANR	1711128	Identifier	width		1710701	0					
ANR	1711129	IfStatement	if ( coeff )		1710701	2					
ANR	1711130	Condition	coeff	129:24:2014:2018	1710701	0	True				
ANR	1711131	Identifier	coeff		1710701	0					
ANR	1711132	CompoundStatement		129:24:1975:1980	1710701	1					
ANR	1711133	IdentifierDeclStatement	int v ;	131:24:2048:2053	1710701	0	True				
ANR	1711134	IdentifierDecl	v		1710701	0					
ANR	1711135	IdentifierDeclType	int		1710701	0					
ANR	1711136	Identifier	v		1710701	1					
ANR	1711137	ExpressionStatement	"GET_BITS_SAFE ( v , 1 )"	133:24:2080:2099	1710701	1	True				
ANR	1711138	CallExpression	"GET_BITS_SAFE ( v , 1 )"		1710701	0					
ANR	1711139	Callee	GET_BITS_SAFE		1710701	0					
ANR	1711140	Identifier	GET_BITS_SAFE		1710701	0					
ANR	1711141	ArgumentList	v		1710701	1					
ANR	1711142	Argument	v		1710701	0					
ANR	1711143	Identifier	v		1710701	0					
ANR	1711144	Argument	1		1710701	1					
ANR	1711145	PrimaryExpression	1		1710701	0					
ANR	1711146	IfStatement	if ( v )		1710701	2					
ANR	1711147	Condition	v	135:28:2130:2130	1710701	0	True				
ANR	1711148	Identifier	v		1710701	0					
ANR	1711149	ExpressionStatement	coeffs [ i ] = - q * coeff	137:28:2162:2184	1710701	1	True				
ANR	1711150	AssignmentExpression	coeffs [ i ] = - q * coeff		1710701	0		=			
ANR	1711151	ArrayIndexing	coeffs [ i ]		1710701	0					
ANR	1711152	Identifier	coeffs		1710701	0					
ANR	1711153	Identifier	i		1710701	1					
ANR	1711154	MultiplicativeExpression	- q * coeff		1710701	1		*			
ANR	1711155	UnaryOperationExpression	- q		1710701	0					
ANR	1711156	UnaryOperator	-		1710701	0					
ANR	1711157	Identifier	q		1710701	1					
ANR	1711158	Identifier	coeff		1710701	1					
ANR	1711159	ElseStatement	else		1710701	0					
ANR	1711160	ExpressionStatement	coeffs [ i ] = q * coeff	141:28:2245:2267	1710701	0	True				
ANR	1711161	AssignmentExpression	coeffs [ i ] = q * coeff		1710701	0		=			
ANR	1711162	ArrayIndexing	coeffs [ i ]		1710701	0					
ANR	1711163	Identifier	coeffs		1710701	0					
ANR	1711164	Identifier	i		1710701	1					
ANR	1711165	MultiplicativeExpression	q * coeff		1710701	1		*			
ANR	1711166	Identifier	q		1710701	0					
ANR	1711167	Identifier	coeff		1710701	1					
ANR	1711168	ElseStatement	else		1710701	0					
ANR	1711169	CompoundStatement		141:27:2224:2224	1710701	0					
ANR	1711170	ExpressionStatement	coeffs [ i ] = 0.0f	145:24:2324:2340	1710701	0	True				
ANR	1711171	AssignmentExpression	coeffs [ i ] = 0.0f		1710701	0		=			
ANR	1711172	ArrayIndexing	coeffs [ i ]		1710701	0					
ANR	1711173	Identifier	coeffs		1710701	0					
ANR	1711174	Identifier	i		1710701	1					
ANR	1711175	PrimaryExpression	0.0f		1710701	1					
ANR	1711176	ExpressionStatement	i ++	149:20:2386:2389	1710701	3	True				
ANR	1711177	PostIncDecOperationExpression	i ++		1710701	0					
ANR	1711178	Identifier	i		1710701	0					
ANR	1711179	IncDec	++		1710701	1					
ANR	1711180	IfStatement	if ( CONFIG_BINKAUDIO_DCT_DECODER && use_dct )		1710701	8					
ANR	1711181	Condition	CONFIG_BINKAUDIO_DCT_DECODER && use_dct	159:12:2451:2489	1710701	0	True				
ANR	1711182	AndExpression	CONFIG_BINKAUDIO_DCT_DECODER && use_dct		1710701	0		&&			
ANR	1711183	Identifier	CONFIG_BINKAUDIO_DCT_DECODER		1710701	0					
ANR	1711184	Identifier	use_dct		1710701	1					
ANR	1711185	CompoundStatement		157:53:2419:2419	1710701	1					
ANR	1711186	ExpressionStatement	coeffs [ 0 ] /= 0.5	161:12:2507:2523	1710701	0	True				
ANR	1711187	AssignmentExpression	coeffs [ 0 ] /= 0.5		1710701	0		/=			
ANR	1711188	ArrayIndexing	coeffs [ 0 ]		1710701	0					
ANR	1711189	Identifier	coeffs		1710701	0					
ANR	1711190	PrimaryExpression	0		1710701	1					
ANR	1711191	PrimaryExpression	0.5		1710701	1					
ANR	1711192	ExpressionStatement	"s -> trans . dct . dct_calc ( & s -> trans . dct , coeffs )"	163:12:2538:2583	1710701	1	True				
ANR	1711193	CallExpression	"s -> trans . dct . dct_calc ( & s -> trans . dct , coeffs )"		1710701	0					
ANR	1711194	Callee	s -> trans . dct . dct_calc		1710701	0					
ANR	1711195	MemberAccess	s -> trans . dct . dct_calc		1710701	0					
ANR	1711196	MemberAccess	s -> trans . dct		1710701	0					
ANR	1711197	PtrMemberAccess	s -> trans		1710701	0					
ANR	1711198	Identifier	s		1710701	0					
ANR	1711199	Identifier	trans		1710701	1					
ANR	1711200	Identifier	dct		1710701	1					
ANR	1711201	Identifier	dct_calc		1710701	1					
ANR	1711202	ArgumentList	& s -> trans . dct		1710701	1					
ANR	1711203	Argument	& s -> trans . dct		1710701	0					
ANR	1711204	UnaryOperationExpression	& s -> trans . dct		1710701	0					
ANR	1711205	UnaryOperator	&		1710701	0					
ANR	1711206	MemberAccess	s -> trans . dct		1710701	1					
ANR	1711207	PtrMemberAccess	s -> trans		1710701	0					
ANR	1711208	Identifier	s		1710701	0					
ANR	1711209	Identifier	trans		1710701	1					
ANR	1711210	Identifier	dct		1710701	1					
ANR	1711211	Argument	coeffs		1710701	1					
ANR	1711212	Identifier	coeffs		1710701	0					
ANR	1711213	ElseStatement	else		1710701	0					
ANR	1711214	IfStatement	if ( CONFIG_BINKAUDIO_RDFT_DECODER )		1710701	0					
ANR	1711215	Condition	CONFIG_BINKAUDIO_RDFT_DECODER	167:17:2614:2642	1710701	0	True				
ANR	1711216	Identifier	CONFIG_BINKAUDIO_RDFT_DECODER		1710701	0					
ANR	1711217	ExpressionStatement	"s -> trans . rdft . rdft_calc ( & s -> trans . rdft , coeffs )"	169:12:2658:2705	1710701	1	True				
ANR	1711218	CallExpression	"s -> trans . rdft . rdft_calc ( & s -> trans . rdft , coeffs )"		1710701	0					
ANR	1711219	Callee	s -> trans . rdft . rdft_calc		1710701	0					
ANR	1711220	MemberAccess	s -> trans . rdft . rdft_calc		1710701	0					
ANR	1711221	MemberAccess	s -> trans . rdft		1710701	0					
ANR	1711222	PtrMemberAccess	s -> trans		1710701	0					
ANR	1711223	Identifier	s		1710701	0					
ANR	1711224	Identifier	trans		1710701	1					
ANR	1711225	Identifier	rdft		1710701	1					
ANR	1711226	Identifier	rdft_calc		1710701	1					
ANR	1711227	ArgumentList	& s -> trans . rdft		1710701	1					
ANR	1711228	Argument	& s -> trans . rdft		1710701	0					
ANR	1711229	UnaryOperationExpression	& s -> trans . rdft		1710701	0					
ANR	1711230	UnaryOperator	&		1710701	0					
ANR	1711231	MemberAccess	s -> trans . rdft		1710701	1					
ANR	1711232	PtrMemberAccess	s -> trans		1710701	0					
ANR	1711233	Identifier	s		1710701	0					
ANR	1711234	Identifier	trans		1710701	1					
ANR	1711235	Identifier	rdft		1710701	1					
ANR	1711236	Argument	coeffs		1710701	1					
ANR	1711237	Identifier	coeffs		1710701	0					
ANR	1711238	ForStatement	for ( ch = 0 ; ch < s -> channels ; ch ++ )		1710701	6					
ANR	1711239	ForInit	ch = 0 ;	175:9:2726:2732	1710701	0	True				
ANR	1711240	AssignmentExpression	ch = 0		1710701	0		=			
ANR	1711241	Identifier	ch		1710701	0					
ANR	1711242	PrimaryExpression	0		1710701	1					
ANR	1711243	Condition	ch < s -> channels	175:17:2734:2749	1710701	1	True				
ANR	1711244	RelationalExpression	ch < s -> channels		1710701	0		<			
ANR	1711245	Identifier	ch		1710701	0					
ANR	1711246	PtrMemberAccess	s -> channels		1710701	1					
ANR	1711247	Identifier	s		1710701	0					
ANR	1711248	Identifier	channels		1710701	1					
ANR	1711249	PostIncDecOperationExpression	ch ++	175:35:2752:2755	1710701	2	True				
ANR	1711250	Identifier	ch		1710701	0					
ANR	1711251	IncDec	++		1710701	1					
ANR	1711252	CompoundStatement		177:8:2712:2752	1710701	3					
ANR	1711253	IdentifierDeclStatement	int j ;	177:8:2769:2774	1710701	0	True				
ANR	1711254	IdentifierDecl	j		1710701	0					
ANR	1711255	IdentifierDeclType	int		1710701	0					
ANR	1711256	Identifier	j		1710701	1					
ANR	1711257	IdentifierDeclStatement	int count = s -> overlap_len * s -> channels ;	179:8:2785:2825	1710701	1	True				
ANR	1711258	IdentifierDecl	count = s -> overlap_len * s -> channels		1710701	0					
ANR	1711259	IdentifierDeclType	int		1710701	0					
ANR	1711260	Identifier	count		1710701	1					
ANR	1711261	AssignmentExpression	count = s -> overlap_len * s -> channels		1710701	2		=			
ANR	1711262	Identifier	count		1710701	0					
ANR	1711263	MultiplicativeExpression	s -> overlap_len * s -> channels		1710701	1		*			
ANR	1711264	PtrMemberAccess	s -> overlap_len		1710701	0					
ANR	1711265	Identifier	s		1710701	0					
ANR	1711266	Identifier	overlap_len		1710701	1					
ANR	1711267	PtrMemberAccess	s -> channels		1710701	1					
ANR	1711268	Identifier	s		1710701	0					
ANR	1711269	Identifier	channels		1710701	1					
ANR	1711270	IfStatement	if ( ! s -> first )		1710701	2					
ANR	1711271	Condition	! s -> first	181:12:2840:2848	1710701	0	True				
ANR	1711272	UnaryOperationExpression	! s -> first		1710701	0					
ANR	1711273	UnaryOperator	!		1710701	0					
ANR	1711274	PtrMemberAccess	s -> first		1710701	1					
ANR	1711275	Identifier	s		1710701	0					
ANR	1711276	Identifier	first		1710701	1					
ANR	1711277	CompoundStatement		179:23:2778:2778	1710701	1					
ANR	1711278	ExpressionStatement	j = ch	183:12:2866:2872	1710701	0	True				
ANR	1711279	AssignmentExpression	j = ch		1710701	0		=			
ANR	1711280	Identifier	j		1710701	0					
ANR	1711281	Identifier	ch		1710701	1					
ANR	1711282	ForStatement	"for ( i = 0 ; i < s -> overlap_len ; i ++ , j += s -> channels )"		1710701	1					
ANR	1711283	ForInit	i = 0 ;	185:17:2892:2897	1710701	0	True				
ANR	1711284	AssignmentExpression	i = 0		1710701	0		=			
ANR	1711285	Identifier	i		1710701	0					
ANR	1711286	PrimaryExpression	0		1710701	1					
ANR	1711287	Condition	i < s -> overlap_len	185:24:2899:2916	1710701	1	True				
ANR	1711288	RelationalExpression	i < s -> overlap_len		1710701	0		<			
ANR	1711289	Identifier	i		1710701	0					
ANR	1711290	PtrMemberAccess	s -> overlap_len		1710701	1					
ANR	1711291	Identifier	s		1710701	0					
ANR	1711292	Identifier	overlap_len		1710701	1					
ANR	1711293	Expression	"i ++ , j += s -> channels"	185:44:2919:2939	1710701	2	True				
ANR	1711294	PostIncDecOperationExpression	i ++		1710701	0					
ANR	1711295	Identifier	i		1710701	0					
ANR	1711296	IncDec	++		1710701	1					
ANR	1711297	AssignmentExpression	j += s -> channels		1710701	1		+=			
ANR	1711298	Identifier	j		1710701	0					
ANR	1711299	PtrMemberAccess	s -> channels		1710701	1					
ANR	1711300	Identifier	s		1710701	0					
ANR	1711301	Identifier	channels		1710701	1					
ANR	1711302	ExpressionStatement	out [ ch ] [ i ] = ( s -> previous [ ch ] [ i ] * ( count - j ) + out [ ch ] [ i ] * j ) / count	187:16:2959:3079	1710701	3	True				
ANR	1711303	AssignmentExpression	out [ ch ] [ i ] = ( s -> previous [ ch ] [ i ] * ( count - j ) + out [ ch ] [ i ] * j ) / count		1710701	0		=			
ANR	1711304	ArrayIndexing	out [ ch ] [ i ]		1710701	0					
ANR	1711305	ArrayIndexing	out [ ch ]		1710701	0					
ANR	1711306	Identifier	out		1710701	0					
ANR	1711307	Identifier	ch		1710701	1					
ANR	1711308	Identifier	i		1710701	1					
ANR	1711309	MultiplicativeExpression	( s -> previous [ ch ] [ i ] * ( count - j ) + out [ ch ] [ i ] * j ) / count		1710701	1		/			
ANR	1711310	AdditiveExpression	s -> previous [ ch ] [ i ] * ( count - j ) + out [ ch ] [ i ] * j		1710701	0		+			
ANR	1711311	MultiplicativeExpression	s -> previous [ ch ] [ i ] * ( count - j )		1710701	0		*			
ANR	1711312	ArrayIndexing	s -> previous [ ch ] [ i ]		1710701	0					
ANR	1711313	ArrayIndexing	s -> previous [ ch ]		1710701	0					
ANR	1711314	PtrMemberAccess	s -> previous		1710701	0					
ANR	1711315	Identifier	s		1710701	0					
ANR	1711316	Identifier	previous		1710701	1					
ANR	1711317	Identifier	ch		1710701	1					
ANR	1711318	Identifier	i		1710701	1					
ANR	1711319	AdditiveExpression	count - j		1710701	1		-			
ANR	1711320	Identifier	count		1710701	0					
ANR	1711321	Identifier	j		1710701	1					
ANR	1711322	MultiplicativeExpression	out [ ch ] [ i ] * j		1710701	1		*			
ANR	1711323	ArrayIndexing	out [ ch ] [ i ]		1710701	0					
ANR	1711324	ArrayIndexing	out [ ch ]		1710701	0					
ANR	1711325	Identifier	out		1710701	0					
ANR	1711326	Identifier	ch		1710701	1					
ANR	1711327	Identifier	i		1710701	1					
ANR	1711328	Identifier	j		1710701	1					
ANR	1711329	Identifier	count		1710701	1					
ANR	1711330	ExpressionStatement	"memcpy ( s -> previous [ ch ] , & out [ ch ] [ s -> frame_len - s -> overlap_len ] , s -> overlap_len * sizeof ( * s -> previous [ ch ] ) )"	193:8:3101:3224	1710701	3	True				
ANR	1711331	CallExpression	"memcpy ( s -> previous [ ch ] , & out [ ch ] [ s -> frame_len - s -> overlap_len ] , s -> overlap_len * sizeof ( * s -> previous [ ch ] ) )"		1710701	0					
ANR	1711332	Callee	memcpy		1710701	0					
ANR	1711333	Identifier	memcpy		1710701	0					
ANR	1711334	ArgumentList	s -> previous [ ch ]		1710701	1					
ANR	1711335	Argument	s -> previous [ ch ]		1710701	0					
ANR	1711336	ArrayIndexing	s -> previous [ ch ]		1710701	0					
ANR	1711337	PtrMemberAccess	s -> previous		1710701	0					
ANR	1711338	Identifier	s		1710701	0					
ANR	1711339	Identifier	previous		1710701	1					
ANR	1711340	Identifier	ch		1710701	1					
ANR	1711341	Argument	& out [ ch ] [ s -> frame_len - s -> overlap_len ]		1710701	1					
ANR	1711342	UnaryOperationExpression	& out [ ch ] [ s -> frame_len - s -> overlap_len ]		1710701	0					
ANR	1711343	UnaryOperator	&		1710701	0					
ANR	1711344	ArrayIndexing	out [ ch ] [ s -> frame_len - s -> overlap_len ]		1710701	1					
ANR	1711345	ArrayIndexing	out [ ch ]		1710701	0					
ANR	1711346	Identifier	out		1710701	0					
ANR	1711347	Identifier	ch		1710701	1					
ANR	1711348	AdditiveExpression	s -> frame_len - s -> overlap_len		1710701	1		-			
ANR	1711349	PtrMemberAccess	s -> frame_len		1710701	0					
ANR	1711350	Identifier	s		1710701	0					
ANR	1711351	Identifier	frame_len		1710701	1					
ANR	1711352	PtrMemberAccess	s -> overlap_len		1710701	1					
ANR	1711353	Identifier	s		1710701	0					
ANR	1711354	Identifier	overlap_len		1710701	1					
ANR	1711355	Argument	s -> overlap_len * sizeof ( * s -> previous [ ch ] )		1710701	2					
ANR	1711356	MultiplicativeExpression	s -> overlap_len * sizeof ( * s -> previous [ ch ] )		1710701	0		*			
ANR	1711357	PtrMemberAccess	s -> overlap_len		1710701	0					
ANR	1711358	Identifier	s		1710701	0					
ANR	1711359	Identifier	overlap_len		1710701	1					
ANR	1711360	SizeofExpression	sizeof ( * s -> previous [ ch ] )		1710701	1					
ANR	1711361	Sizeof	sizeof		1710701	0					
ANR	1711362	UnaryOperationExpression	* s -> previous [ ch ]		1710701	1					
ANR	1711363	UnaryOperator	*		1710701	0					
ANR	1711364	ArrayIndexing	s -> previous [ ch ]		1710701	1					
ANR	1711365	PtrMemberAccess	s -> previous		1710701	0					
ANR	1711366	Identifier	s		1710701	0					
ANR	1711367	Identifier	previous		1710701	1					
ANR	1711368	Identifier	ch		1710701	1					
ANR	1711369	ExpressionStatement	s -> first = 0	201:4:3240:3252	1710701	7	True				
ANR	1711370	AssignmentExpression	s -> first = 0		1710701	0		=			
ANR	1711371	PtrMemberAccess	s -> first		1710701	0					
ANR	1711372	Identifier	s		1710701	0					
ANR	1711373	Identifier	first		1710701	1					
ANR	1711374	PrimaryExpression	0		1710701	1					
ANR	1711375	ReturnStatement	return 0 ;	205:4:3261:3269	1710701	8	True				
ANR	1711376	PrimaryExpression	0		1710701	0					
ANR	1711377	ReturnType	static int		1710701	1					
ANR	1711378	Identifier	decode_block		1710701	2					
ANR	1711379	ParameterList	"BinkAudioContext * s , float * * out , int use_dct"		1710701	3					
ANR	1711380	Parameter	BinkAudioContext * s	1:24:24:42	1710701	0	True				
ANR	1711381	ParameterType	BinkAudioContext *		1710701	0					
ANR	1711382	Identifier	s		1710701	1					
ANR	1711383	Parameter	float * * out	1:45:45:55	1710701	1	True				
ANR	1711384	ParameterType	float * *		1710701	0					
ANR	1711385	Identifier	out		1710701	1					
ANR	1711386	Parameter	int use_dct	1:58:58:68	1710701	2	True				
ANR	1711387	ParameterType	int		1710701	0					
ANR	1711388	Identifier	use_dct		1710701	1					
ANR	1711389	CFGEntryNode	ENTRY		1710701		True				
ANR	1711390	CFGExitNode	EXIT		1710701		True				
ANR	1711391	Symbol	* v		1710701						
ANR	1711392	Symbol	* quant		1710701						
ANR	1711393	Symbol	* s -> previous		1710701						
ANR	1711394	Symbol	get_bits		1710701						
ANR	1711395	Symbol	* ch		1710701						
ANR	1711396	Symbol	FFMIN		1710701						
ANR	1711397	Symbol	s -> trans		1710701						
ANR	1711398	Symbol	s -> num_bands		1710701						
ANR	1711399	Symbol	* s -> previous [ ch ]		1710701						
ANR	1711400	Symbol	* FFMIN		1710701						
ANR	1711401	Symbol	& s -> trans . rdft		1710701						
ANR	1711402	Symbol	coeffs		1710701						
ANR	1711403	Symbol	* * out		1710701						
ANR	1711404	Symbol	* coeffs		1710701						
ANR	1711405	Symbol	rle_length_tab		1710701						
ANR	1711406	Symbol	s -> trans . rdft		1710701						
ANR	1711407	Symbol	count		1710701						
ANR	1711408	Symbol	quant		1710701						
ANR	1711409	Symbol	s -> bands		1710701						
ANR	1711410	Symbol	get_float		1710701						
ANR	1711411	Symbol	* * * s		1710701						
ANR	1711412	Symbol	use_dct		1710701						
ANR	1711413	Symbol	& s -> gb		1710701						
ANR	1711414	Symbol	* out		1710701						
ANR	1711415	Symbol	* quant_table		1710701						
ANR	1711416	Symbol	* s -> bands		1710701						
ANR	1711417	Symbol	s -> first		1710701						
ANR	1711418	Symbol	& s -> trans		1710701						
ANR	1711419	Symbol	get_bits_left		1710701						
ANR	1711420	Symbol	av_int2float		1710701						
ANR	1711421	Symbol	s -> trans . dct		1710701						
ANR	1711422	Symbol	s -> channels		1710701						
ANR	1711423	Symbol	CONFIG_BINKAUDIO_DCT_DECODER		1710701						
ANR	1711424	Symbol	out		1710701						
ANR	1711425	Symbol	s -> overlap_len		1710701						
ANR	1711426	Symbol	* * ch		1710701						
ANR	1711427	Symbol	* rle_length_tab		1710701						
ANR	1711428	Symbol	get_bits_long		1710701						
ANR	1711429	Symbol	* * s		1710701						
ANR	1711430	Symbol	gb		1710701						
ANR	1711431	Symbol	value		1710701						
ANR	1711432	Symbol	coeff		1710701						
ANR	1711433	Symbol	quant_table		1710701						
ANR	1711434	Symbol	s -> root		1710701						
ANR	1711435	Symbol	ch		1710701						
ANR	1711436	Symbol	i		1710701						
ANR	1711437	Symbol	j		1710701						
ANR	1711438	Symbol	CONFIG_BINKAUDIO_RDFT_DECODER		1710701						
ANR	1711439	Symbol	k		1710701						
ANR	1711440	Symbol	& s -> trans . dct		1710701						
ANR	1711441	Symbol	* * s -> previous		1710701						
ANR	1711442	Symbol	q		1710701						
ANR	1711443	Symbol	s -> frame_len		1710701						
ANR	1711444	Symbol	s		1710701						
ANR	1711445	Symbol	* i		1710701						
ANR	1711446	Symbol	* k		1710701						
ANR	1711447	Symbol	s -> version_b		1710701						
ANR	1711448	Symbol	v		1710701						
ANR	1711449	Symbol	s -> previous		1710701						
ANR	1711450	Symbol	width		1710701						
ANR	1711451	Symbol	AVERROR_INVALIDDATA		1710701						
ANR	1711452	Symbol	* s		1710701						
