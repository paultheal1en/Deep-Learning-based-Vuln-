command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	587290	File	/home/p4ultr4n/workplace/ReVeal/raw_code/apply_window_and_mdct_0.c								
ANR	587291	Function	apply_window_and_mdct	1:0:0:2032							
ANR	587292	FunctionDef	"apply_window_and_mdct (vorbis_enc_context * venc , float * audio , int samples)"		587291	0					
ANR	587293	CompoundStatement		5:0:121:2032	587291	0					
ANR	587294	IdentifierDeclStatement	int channel ;	7:4:128:139	587291	0	True				
ANR	587295	IdentifierDecl	channel		587291	0					
ANR	587296	IdentifierDeclType	int		587291	0					
ANR	587297	Identifier	channel		587291	1					
ANR	587298	IdentifierDeclStatement	const float * win = venc -> win [ 0 ] ;	9:4:146:178	587291	1	True				
ANR	587299	IdentifierDecl	* win = venc -> win [ 0 ]		587291	0					
ANR	587300	IdentifierDeclType	const float *		587291	0					
ANR	587301	Identifier	win		587291	1					
ANR	587302	AssignmentExpression	* win = venc -> win [ 0 ]		587291	2		=			
ANR	587303	Identifier	win		587291	0					
ANR	587304	ArrayIndexing	venc -> win [ 0 ]		587291	1					
ANR	587305	PtrMemberAccess	venc -> win		587291	0					
ANR	587306	Identifier	venc		587291	0					
ANR	587307	Identifier	win		587291	1					
ANR	587308	PrimaryExpression	0		587291	1					
ANR	587309	IdentifierDeclStatement	int window_len = 1 << ( venc -> log2_blocksize [ 0 ] - 1 ) ;	11:4:185:236	587291	2	True				
ANR	587310	IdentifierDecl	window_len = 1 << ( venc -> log2_blocksize [ 0 ] - 1 )		587291	0					
ANR	587311	IdentifierDeclType	int		587291	0					
ANR	587312	Identifier	window_len		587291	1					
ANR	587313	AssignmentExpression	window_len = 1 << ( venc -> log2_blocksize [ 0 ] - 1 )		587291	2		=			
ANR	587314	Identifier	window_len		587291	0					
ANR	587315	ShiftExpression	1 << ( venc -> log2_blocksize [ 0 ] - 1 )		587291	1		<<			
ANR	587316	PrimaryExpression	1		587291	0					
ANR	587317	AdditiveExpression	venc -> log2_blocksize [ 0 ] - 1		587291	1		-			
ANR	587318	ArrayIndexing	venc -> log2_blocksize [ 0 ]		587291	0					
ANR	587319	PtrMemberAccess	venc -> log2_blocksize		587291	0					
ANR	587320	Identifier	venc		587291	0					
ANR	587321	Identifier	log2_blocksize		587291	1					
ANR	587322	PrimaryExpression	0		587291	1					
ANR	587323	PrimaryExpression	1		587291	1					
ANR	587324	IdentifierDeclStatement	float n = ( float ) ( 1 << venc -> log2_blocksize [ 0 ] ) / 4.0 ;	13:4:243:296	587291	3	True				
ANR	587325	IdentifierDecl	n = ( float ) ( 1 << venc -> log2_blocksize [ 0 ] ) / 4.0		587291	0					
ANR	587326	IdentifierDeclType	float		587291	0					
ANR	587327	Identifier	n		587291	1					
ANR	587328	AssignmentExpression	n = ( float ) ( 1 << venc -> log2_blocksize [ 0 ] ) / 4.0		587291	2		=			
ANR	587329	Identifier	n		587291	0					
ANR	587330	MultiplicativeExpression	( float ) ( 1 << venc -> log2_blocksize [ 0 ] ) / 4.0		587291	1		/			
ANR	587331	CastExpression	( float ) ( 1 << venc -> log2_blocksize [ 0 ] )		587291	0					
ANR	587332	CastTarget	float		587291	0					
ANR	587333	ShiftExpression	1 << venc -> log2_blocksize [ 0 ]		587291	1		<<			
ANR	587334	PrimaryExpression	1		587291	0					
ANR	587335	ArrayIndexing	venc -> log2_blocksize [ 0 ]		587291	1					
ANR	587336	PtrMemberAccess	venc -> log2_blocksize		587291	0					
ANR	587337	Identifier	venc		587291	0					
ANR	587338	Identifier	log2_blocksize		587291	1					
ANR	587339	PrimaryExpression	0		587291	1					
ANR	587340	PrimaryExpression	4.0		587291	1					
ANR	587341	IdentifierDeclStatement	AVFloatDSPContext * fdsp = venc -> fdsp ;	15:4:303:339	587291	4	True				
ANR	587342	IdentifierDecl	* fdsp = venc -> fdsp		587291	0					
ANR	587343	IdentifierDeclType	AVFloatDSPContext *		587291	0					
ANR	587344	Identifier	fdsp		587291	1					
ANR	587345	AssignmentExpression	* fdsp = venc -> fdsp		587291	2		=			
ANR	587346	Identifier	fdsp		587291	0					
ANR	587347	PtrMemberAccess	venc -> fdsp		587291	1					
ANR	587348	Identifier	venc		587291	0					
ANR	587349	Identifier	fdsp		587291	1					
ANR	587350	IfStatement	if ( ! venc -> have_saved && ! samples )		587291	5					
ANR	587351	Condition	! venc -> have_saved && ! samples	19:8:352:380	587291	0	True				
ANR	587352	AndExpression	! venc -> have_saved && ! samples		587291	0		&&			
ANR	587353	UnaryOperationExpression	! venc -> have_saved		587291	0					
ANR	587354	UnaryOperator	!		587291	0					
ANR	587355	PtrMemberAccess	venc -> have_saved		587291	1					
ANR	587356	Identifier	venc		587291	0					
ANR	587357	Identifier	have_saved		587291	1					
ANR	587358	UnaryOperationExpression	! samples		587291	1					
ANR	587359	UnaryOperator	!		587291	0					
ANR	587360	Identifier	samples		587291	1					
ANR	587361	ReturnStatement	return 0 ;	21:8:392:400	587291	1	True				
ANR	587362	PrimaryExpression	0		587291	0					
ANR	587363	IfStatement	if ( venc -> have_saved )		587291	6					
ANR	587364	Condition	venc -> have_saved	25:8:413:428	587291	0	True				
ANR	587365	PtrMemberAccess	venc -> have_saved		587291	0					
ANR	587366	Identifier	venc		587291	0					
ANR	587367	Identifier	have_saved		587291	1					
ANR	587368	CompoundStatement		21:26:309:309	587291	1					
ANR	587369	ForStatement	for ( channel = 0 ; channel < venc -> channels ; channel ++ )		587291	0					
ANR	587370	ForInit	channel = 0 ;	27:13:447:458	587291	0	True				
ANR	587371	AssignmentExpression	channel = 0		587291	0		=			
ANR	587372	Identifier	channel		587291	0					
ANR	587373	PrimaryExpression	0		587291	1					
ANR	587374	Condition	channel < venc -> channels	27:26:460:483	587291	1	True				
ANR	587375	RelationalExpression	channel < venc -> channels		587291	0		<			
ANR	587376	Identifier	channel		587291	0					
ANR	587377	PtrMemberAccess	venc -> channels		587291	1					
ANR	587378	Identifier	venc		587291	0					
ANR	587379	Identifier	channels		587291	1					
ANR	587380	PostIncDecOperationExpression	channel ++	27:52:486:494	587291	2	True				
ANR	587381	Identifier	channel		587291	0					
ANR	587382	IncDec	++		587291	1					
ANR	587383	ExpressionStatement	"memcpy ( venc -> samples + channel * window_len * 2 , venc -> saved + channel * window_len , sizeof ( float ) * window_len )"	29:12:510:642	587291	3	True				
ANR	587384	CallExpression	"memcpy ( venc -> samples + channel * window_len * 2 , venc -> saved + channel * window_len , sizeof ( float ) * window_len )"		587291	0					
ANR	587385	Callee	memcpy		587291	0					
ANR	587386	Identifier	memcpy		587291	0					
ANR	587387	ArgumentList	venc -> samples + channel * window_len * 2		587291	1					
ANR	587388	Argument	venc -> samples + channel * window_len * 2		587291	0					
ANR	587389	AdditiveExpression	venc -> samples + channel * window_len * 2		587291	0		+			
ANR	587390	PtrMemberAccess	venc -> samples		587291	0					
ANR	587391	Identifier	venc		587291	0					
ANR	587392	Identifier	samples		587291	1					
ANR	587393	MultiplicativeExpression	channel * window_len * 2		587291	1		*			
ANR	587394	Identifier	channel		587291	0					
ANR	587395	MultiplicativeExpression	window_len * 2		587291	1		*			
ANR	587396	Identifier	window_len		587291	0					
ANR	587397	PrimaryExpression	2		587291	1					
ANR	587398	Argument	venc -> saved + channel * window_len		587291	1					
ANR	587399	AdditiveExpression	venc -> saved + channel * window_len		587291	0		+			
ANR	587400	PtrMemberAccess	venc -> saved		587291	0					
ANR	587401	Identifier	venc		587291	0					
ANR	587402	Identifier	saved		587291	1					
ANR	587403	MultiplicativeExpression	channel * window_len		587291	1		*			
ANR	587404	Identifier	channel		587291	0					
ANR	587405	Identifier	window_len		587291	1					
ANR	587406	Argument	sizeof ( float ) * window_len		587291	2					
ANR	587407	MultiplicativeExpression	sizeof ( float ) * window_len		587291	0		*			
ANR	587408	SizeofExpression	sizeof ( float )		587291	0					
ANR	587409	Sizeof	sizeof		587291	0					
ANR	587410	SizeofOperand	float		587291	1					
ANR	587411	Identifier	window_len		587291	1					
ANR	587412	ElseStatement	else		587291	0					
ANR	587413	CompoundStatement		29:11:534:534	587291	0					
ANR	587414	ForStatement	for ( channel = 0 ; channel < venc -> channels ; channel ++ )		587291	0					
ANR	587415	ForInit	channel = 0 ;	35:13:672:683	587291	0	True				
ANR	587416	AssignmentExpression	channel = 0		587291	0		=			
ANR	587417	Identifier	channel		587291	0					
ANR	587418	PrimaryExpression	0		587291	1					
ANR	587419	Condition	channel < venc -> channels	35:26:685:708	587291	1	True				
ANR	587420	RelationalExpression	channel < venc -> channels		587291	0		<			
ANR	587421	Identifier	channel		587291	0					
ANR	587422	PtrMemberAccess	venc -> channels		587291	1					
ANR	587423	Identifier	venc		587291	0					
ANR	587424	Identifier	channels		587291	1					
ANR	587425	PostIncDecOperationExpression	channel ++	35:52:711:719	587291	2	True				
ANR	587426	Identifier	channel		587291	0					
ANR	587427	IncDec	++		587291	1					
ANR	587428	ExpressionStatement	"memset ( venc -> samples + channel * window_len * 2 , 0 , sizeof ( float ) * window_len )"	37:12:735:834	587291	3	True				
ANR	587429	CallExpression	"memset ( venc -> samples + channel * window_len * 2 , 0 , sizeof ( float ) * window_len )"		587291	0					
ANR	587430	Callee	memset		587291	0					
ANR	587431	Identifier	memset		587291	0					
ANR	587432	ArgumentList	venc -> samples + channel * window_len * 2		587291	1					
ANR	587433	Argument	venc -> samples + channel * window_len * 2		587291	0					
ANR	587434	AdditiveExpression	venc -> samples + channel * window_len * 2		587291	0		+			
ANR	587435	PtrMemberAccess	venc -> samples		587291	0					
ANR	587436	Identifier	venc		587291	0					
ANR	587437	Identifier	samples		587291	1					
ANR	587438	MultiplicativeExpression	channel * window_len * 2		587291	1		*			
ANR	587439	Identifier	channel		587291	0					
ANR	587440	MultiplicativeExpression	window_len * 2		587291	1		*			
ANR	587441	Identifier	window_len		587291	0					
ANR	587442	PrimaryExpression	2		587291	1					
ANR	587443	Argument	0		587291	1					
ANR	587444	PrimaryExpression	0		587291	0					
ANR	587445	Argument	sizeof ( float ) * window_len		587291	2					
ANR	587446	MultiplicativeExpression	sizeof ( float ) * window_len		587291	0		*			
ANR	587447	SizeofExpression	sizeof ( float )		587291	0					
ANR	587448	Sizeof	sizeof		587291	0					
ANR	587449	SizeofOperand	float		587291	1					
ANR	587450	Identifier	window_len		587291	1					
ANR	587451	IfStatement	if ( samples )		587291	7					
ANR	587452	Condition	samples	45:8:854:860	587291	0	True				
ANR	587453	Identifier	samples		587291	0					
ANR	587454	CompoundStatement		41:17:741:741	587291	1					
ANR	587455	ForStatement	for ( channel = 0 ; channel < venc -> channels ; channel ++ )		587291	0					
ANR	587456	ForInit	channel = 0 ;	47:13:879:890	587291	0	True				
ANR	587457	AssignmentExpression	channel = 0		587291	0		=			
ANR	587458	Identifier	channel		587291	0					
ANR	587459	PrimaryExpression	0		587291	1					
ANR	587460	Condition	channel < venc -> channels	47:26:892:915	587291	1	True				
ANR	587461	RelationalExpression	channel < venc -> channels		587291	0		<			
ANR	587462	Identifier	channel		587291	0					
ANR	587463	PtrMemberAccess	venc -> channels		587291	1					
ANR	587464	Identifier	venc		587291	0					
ANR	587465	Identifier	channels		587291	1					
ANR	587466	PostIncDecOperationExpression	channel ++	47:52:918:926	587291	2	True				
ANR	587467	Identifier	channel		587291	0					
ANR	587468	IncDec	++		587291	1					
ANR	587469	CompoundStatement		45:12:822:891	587291	3					
ANR	587470	IdentifierDeclStatement	float * offset = venc -> samples + channel * window_len * 2 + window_len ;	49:12:944:1013	587291	0	True				
ANR	587471	IdentifierDecl	* offset = venc -> samples + channel * window_len * 2 + window_len		587291	0					
ANR	587472	IdentifierDeclType	float *		587291	0					
ANR	587473	Identifier	offset		587291	1					
ANR	587474	AssignmentExpression	* offset = venc -> samples + channel * window_len * 2 + window_len		587291	2		=			
ANR	587475	Identifier	offset		587291	0					
ANR	587476	AdditiveExpression	venc -> samples + channel * window_len * 2 + window_len		587291	1		+			
ANR	587477	PtrMemberAccess	venc -> samples		587291	0					
ANR	587478	Identifier	venc		587291	0					
ANR	587479	Identifier	samples		587291	1					
ANR	587480	AdditiveExpression	channel * window_len * 2 + window_len		587291	1		+			
ANR	587481	MultiplicativeExpression	channel * window_len * 2		587291	0		*			
ANR	587482	Identifier	channel		587291	0					
ANR	587483	MultiplicativeExpression	window_len * 2		587291	1		*			
ANR	587484	Identifier	window_len		587291	0					
ANR	587485	PrimaryExpression	2		587291	1					
ANR	587486	Identifier	window_len		587291	1					
ANR	587487	ExpressionStatement	"fdsp -> vector_fmul_reverse ( offset , audio + channel * window_len , win , samples )"	53:12:1030:1107	587291	1	True				
ANR	587488	CallExpression	"fdsp -> vector_fmul_reverse ( offset , audio + channel * window_len , win , samples )"		587291	0					
ANR	587489	Callee	fdsp -> vector_fmul_reverse		587291	0					
ANR	587490	PtrMemberAccess	fdsp -> vector_fmul_reverse		587291	0					
ANR	587491	Identifier	fdsp		587291	0					
ANR	587492	Identifier	vector_fmul_reverse		587291	1					
ANR	587493	ArgumentList	offset		587291	1					
ANR	587494	Argument	offset		587291	0					
ANR	587495	Identifier	offset		587291	0					
ANR	587496	Argument	audio + channel * window_len		587291	1					
ANR	587497	AdditiveExpression	audio + channel * window_len		587291	0		+			
ANR	587498	Identifier	audio		587291	0					
ANR	587499	MultiplicativeExpression	channel * window_len		587291	1		*			
ANR	587500	Identifier	channel		587291	0					
ANR	587501	Identifier	window_len		587291	1					
ANR	587502	Argument	win		587291	2					
ANR	587503	Identifier	win		587291	0					
ANR	587504	Argument	samples		587291	3					
ANR	587505	Identifier	samples		587291	0					
ANR	587506	ExpressionStatement	"fdsp -> vector_fmul_scalar ( offset , offset , 1 / n , samples )"	55:12:1122:1176	587291	2	True				
ANR	587507	CallExpression	"fdsp -> vector_fmul_scalar ( offset , offset , 1 / n , samples )"		587291	0					
ANR	587508	Callee	fdsp -> vector_fmul_scalar		587291	0					
ANR	587509	PtrMemberAccess	fdsp -> vector_fmul_scalar		587291	0					
ANR	587510	Identifier	fdsp		587291	0					
ANR	587511	Identifier	vector_fmul_scalar		587291	1					
ANR	587512	ArgumentList	offset		587291	1					
ANR	587513	Argument	offset		587291	0					
ANR	587514	Identifier	offset		587291	0					
ANR	587515	Argument	offset		587291	1					
ANR	587516	Identifier	offset		587291	0					
ANR	587517	Argument	1 / n		587291	2					
ANR	587518	MultiplicativeExpression	1 / n		587291	0		/			
ANR	587519	PrimaryExpression	1		587291	0					
ANR	587520	Identifier	n		587291	1					
ANR	587521	Argument	samples		587291	3					
ANR	587522	Identifier	samples		587291	0					
ANR	587523	ElseStatement	else		587291	0					
ANR	587524	CompoundStatement		55:11:1079:1079	587291	0					
ANR	587525	ForStatement	for ( channel = 0 ; channel < venc -> channels ; channel ++ )		587291	0					
ANR	587526	ForInit	channel = 0 ;	61:13:1217:1228	587291	0	True				
ANR	587527	AssignmentExpression	channel = 0		587291	0		=			
ANR	587528	Identifier	channel		587291	0					
ANR	587529	PrimaryExpression	0		587291	1					
ANR	587530	Condition	channel < venc -> channels	61:26:1230:1253	587291	1	True				
ANR	587531	RelationalExpression	channel < venc -> channels		587291	0		<			
ANR	587532	Identifier	channel		587291	0					
ANR	587533	PtrMemberAccess	venc -> channels		587291	1					
ANR	587534	Identifier	venc		587291	0					
ANR	587535	Identifier	channels		587291	1					
ANR	587536	PostIncDecOperationExpression	channel ++	61:52:1256:1264	587291	2	True				
ANR	587537	Identifier	channel		587291	0					
ANR	587538	IncDec	++		587291	1					
ANR	587539	ExpressionStatement	"memset ( venc -> samples + channel * window_len * 2 + window_len , 0 , sizeof ( float ) * window_len )"	63:12:1280:1392	587291	3	True				
ANR	587540	CallExpression	"memset ( venc -> samples + channel * window_len * 2 + window_len , 0 , sizeof ( float ) * window_len )"		587291	0					
ANR	587541	Callee	memset		587291	0					
ANR	587542	Identifier	memset		587291	0					
ANR	587543	ArgumentList	venc -> samples + channel * window_len * 2 + window_len		587291	1					
ANR	587544	Argument	venc -> samples + channel * window_len * 2 + window_len		587291	0					
ANR	587545	AdditiveExpression	venc -> samples + channel * window_len * 2 + window_len		587291	0		+			
ANR	587546	PtrMemberAccess	venc -> samples		587291	0					
ANR	587547	Identifier	venc		587291	0					
ANR	587548	Identifier	samples		587291	1					
ANR	587549	AdditiveExpression	channel * window_len * 2 + window_len		587291	1		+			
ANR	587550	MultiplicativeExpression	channel * window_len * 2		587291	0		*			
ANR	587551	Identifier	channel		587291	0					
ANR	587552	MultiplicativeExpression	window_len * 2		587291	1		*			
ANR	587553	Identifier	window_len		587291	0					
ANR	587554	PrimaryExpression	2		587291	1					
ANR	587555	Identifier	window_len		587291	1					
ANR	587556	Argument	0		587291	1					
ANR	587557	PrimaryExpression	0		587291	0					
ANR	587558	Argument	sizeof ( float ) * window_len		587291	2					
ANR	587559	MultiplicativeExpression	sizeof ( float ) * window_len		587291	0		*			
ANR	587560	SizeofExpression	sizeof ( float )		587291	0					
ANR	587561	Sizeof	sizeof		587291	0					
ANR	587562	SizeofOperand	float		587291	1					
ANR	587563	Identifier	window_len		587291	1					
ANR	587564	ForStatement	for ( channel = 0 ; channel < venc -> channels ; channel ++ )		587291	8					
ANR	587565	ForInit	channel = 0 ;	71:9:1413:1424	587291	0	True				
ANR	587566	AssignmentExpression	channel = 0		587291	0		=			
ANR	587567	Identifier	channel		587291	0					
ANR	587568	PrimaryExpression	0		587291	1					
ANR	587569	Condition	channel < venc -> channels	71:22:1426:1449	587291	1	True				
ANR	587570	RelationalExpression	channel < venc -> channels		587291	0		<			
ANR	587571	Identifier	channel		587291	0					
ANR	587572	PtrMemberAccess	venc -> channels		587291	1					
ANR	587573	Identifier	venc		587291	0					
ANR	587574	Identifier	channels		587291	1					
ANR	587575	PostIncDecOperationExpression	channel ++	71:48:1452:1460	587291	2	True				
ANR	587576	Identifier	channel		587291	0					
ANR	587577	IncDec	++		587291	1					
ANR	587578	ExpressionStatement	"venc -> mdct [ 0 ] . mdct_calc ( & venc -> mdct [ 0 ] , venc -> coeffs + channel * window_len , venc -> samples + channel * window_len * 2 )"	73:8:1472:1612	587291	3	True				
ANR	587579	CallExpression	"venc -> mdct [ 0 ] . mdct_calc ( & venc -> mdct [ 0 ] , venc -> coeffs + channel * window_len , venc -> samples + channel * window_len * 2 )"		587291	0					
ANR	587580	Callee	venc -> mdct [ 0 ] . mdct_calc		587291	0					
ANR	587581	MemberAccess	venc -> mdct [ 0 ] . mdct_calc		587291	0					
ANR	587582	ArrayIndexing	venc -> mdct [ 0 ]		587291	0					
ANR	587583	PtrMemberAccess	venc -> mdct		587291	0					
ANR	587584	Identifier	venc		587291	0					
ANR	587585	Identifier	mdct		587291	1					
ANR	587586	PrimaryExpression	0		587291	1					
ANR	587587	Identifier	mdct_calc		587291	1					
ANR	587588	ArgumentList	& venc -> mdct [ 0 ]		587291	1					
ANR	587589	Argument	& venc -> mdct [ 0 ]		587291	0					
ANR	587590	UnaryOperationExpression	& venc -> mdct [ 0 ]		587291	0					
ANR	587591	UnaryOperator	&		587291	0					
ANR	587592	ArrayIndexing	venc -> mdct [ 0 ]		587291	1					
ANR	587593	PtrMemberAccess	venc -> mdct		587291	0					
ANR	587594	Identifier	venc		587291	0					
ANR	587595	Identifier	mdct		587291	1					
ANR	587596	PrimaryExpression	0		587291	1					
ANR	587597	Argument	venc -> coeffs + channel * window_len		587291	1					
ANR	587598	AdditiveExpression	venc -> coeffs + channel * window_len		587291	0		+			
ANR	587599	PtrMemberAccess	venc -> coeffs		587291	0					
ANR	587600	Identifier	venc		587291	0					
ANR	587601	Identifier	coeffs		587291	1					
ANR	587602	MultiplicativeExpression	channel * window_len		587291	1		*			
ANR	587603	Identifier	channel		587291	0					
ANR	587604	Identifier	window_len		587291	1					
ANR	587605	Argument	venc -> samples + channel * window_len * 2		587291	2					
ANR	587606	AdditiveExpression	venc -> samples + channel * window_len * 2		587291	0		+			
ANR	587607	PtrMemberAccess	venc -> samples		587291	0					
ANR	587608	Identifier	venc		587291	0					
ANR	587609	Identifier	samples		587291	1					
ANR	587610	MultiplicativeExpression	channel * window_len * 2		587291	1		*			
ANR	587611	Identifier	channel		587291	0					
ANR	587612	MultiplicativeExpression	window_len * 2		587291	1		*			
ANR	587613	Identifier	window_len		587291	0					
ANR	587614	PrimaryExpression	2		587291	1					
ANR	587615	IfStatement	if ( samples )		587291	9					
ANR	587616	Condition	samples	79:8:1625:1631	587291	0	True				
ANR	587617	Identifier	samples		587291	0					
ANR	587618	CompoundStatement		75:17:1512:1512	587291	1					
ANR	587619	ForStatement	for ( channel = 0 ; channel < venc -> channels ; channel ++ )		587291	0					
ANR	587620	ForInit	channel = 0 ;	81:13:1650:1661	587291	0	True				
ANR	587621	AssignmentExpression	channel = 0		587291	0		=			
ANR	587622	Identifier	channel		587291	0					
ANR	587623	PrimaryExpression	0		587291	1					
ANR	587624	Condition	channel < venc -> channels	81:26:1663:1686	587291	1	True				
ANR	587625	RelationalExpression	channel < venc -> channels		587291	0		<			
ANR	587626	Identifier	channel		587291	0					
ANR	587627	PtrMemberAccess	venc -> channels		587291	1					
ANR	587628	Identifier	venc		587291	0					
ANR	587629	Identifier	channels		587291	1					
ANR	587630	PostIncDecOperationExpression	channel ++	81:52:1689:1697	587291	2	True				
ANR	587631	Identifier	channel		587291	0					
ANR	587632	IncDec	++		587291	1					
ANR	587633	CompoundStatement		79:12:1593:1643	587291	3					
ANR	587634	IdentifierDeclStatement	float * offset = venc -> saved + channel * window_len ;	83:12:1715:1765	587291	0	True				
ANR	587635	IdentifierDecl	* offset = venc -> saved + channel * window_len		587291	0					
ANR	587636	IdentifierDeclType	float *		587291	0					
ANR	587637	Identifier	offset		587291	1					
ANR	587638	AssignmentExpression	* offset = venc -> saved + channel * window_len		587291	2		=			
ANR	587639	Identifier	offset		587291	0					
ANR	587640	AdditiveExpression	venc -> saved + channel * window_len		587291	1		+			
ANR	587641	PtrMemberAccess	venc -> saved		587291	0					
ANR	587642	Identifier	venc		587291	0					
ANR	587643	Identifier	saved		587291	1					
ANR	587644	MultiplicativeExpression	channel * window_len		587291	1		*			
ANR	587645	Identifier	channel		587291	0					
ANR	587646	Identifier	window_len		587291	1					
ANR	587647	ExpressionStatement	"fdsp -> vector_fmul ( offset , audio + channel * window_len , win , samples )"	87:12:1782:1851	587291	1	True				
ANR	587648	CallExpression	"fdsp -> vector_fmul ( offset , audio + channel * window_len , win , samples )"		587291	0					
ANR	587649	Callee	fdsp -> vector_fmul		587291	0					
ANR	587650	PtrMemberAccess	fdsp -> vector_fmul		587291	0					
ANR	587651	Identifier	fdsp		587291	0					
ANR	587652	Identifier	vector_fmul		587291	1					
ANR	587653	ArgumentList	offset		587291	1					
ANR	587654	Argument	offset		587291	0					
ANR	587655	Identifier	offset		587291	0					
ANR	587656	Argument	audio + channel * window_len		587291	1					
ANR	587657	AdditiveExpression	audio + channel * window_len		587291	0		+			
ANR	587658	Identifier	audio		587291	0					
ANR	587659	MultiplicativeExpression	channel * window_len		587291	1		*			
ANR	587660	Identifier	channel		587291	0					
ANR	587661	Identifier	window_len		587291	1					
ANR	587662	Argument	win		587291	2					
ANR	587663	Identifier	win		587291	0					
ANR	587664	Argument	samples		587291	3					
ANR	587665	Identifier	samples		587291	0					
ANR	587666	ExpressionStatement	"fdsp -> vector_fmul_scalar ( offset , offset , 1 / n , samples )"	89:12:1866:1920	587291	2	True				
ANR	587667	CallExpression	"fdsp -> vector_fmul_scalar ( offset , offset , 1 / n , samples )"		587291	0					
ANR	587668	Callee	fdsp -> vector_fmul_scalar		587291	0					
ANR	587669	PtrMemberAccess	fdsp -> vector_fmul_scalar		587291	0					
ANR	587670	Identifier	fdsp		587291	0					
ANR	587671	Identifier	vector_fmul_scalar		587291	1					
ANR	587672	ArgumentList	offset		587291	1					
ANR	587673	Argument	offset		587291	0					
ANR	587674	Identifier	offset		587291	0					
ANR	587675	Argument	offset		587291	1					
ANR	587676	Identifier	offset		587291	0					
ANR	587677	Argument	1 / n		587291	2					
ANR	587678	MultiplicativeExpression	1 / n		587291	0		/			
ANR	587679	PrimaryExpression	1		587291	0					
ANR	587680	Identifier	n		587291	1					
ANR	587681	Argument	samples		587291	3					
ANR	587682	Identifier	samples		587291	0					
ANR	587683	ExpressionStatement	venc -> have_saved = 1	93:8:1942:1962	587291	1	True				
ANR	587684	AssignmentExpression	venc -> have_saved = 1		587291	0		=			
ANR	587685	PtrMemberAccess	venc -> have_saved		587291	0					
ANR	587686	Identifier	venc		587291	0					
ANR	587687	Identifier	have_saved		587291	1					
ANR	587688	PrimaryExpression	1		587291	1					
ANR	587689	ElseStatement	else		587291	0					
ANR	587690	CompoundStatement		91:11:1854:1854	587291	0					
ANR	587691	ExpressionStatement	venc -> have_saved = 0	97:8:1987:2007	587291	0	True				
ANR	587692	AssignmentExpression	venc -> have_saved = 0		587291	0		=			
ANR	587693	PtrMemberAccess	venc -> have_saved		587291	0					
ANR	587694	Identifier	venc		587291	0					
ANR	587695	Identifier	have_saved		587291	1					
ANR	587696	PrimaryExpression	0		587291	1					
ANR	587697	ReturnStatement	return 1 ;	101:4:2021:2029	587291	10	True				
ANR	587698	PrimaryExpression	1		587291	0					
ANR	587699	ReturnType	static int		587291	1					
ANR	587700	Identifier	apply_window_and_mdct		587291	2					
ANR	587701	ParameterList	"vorbis_enc_context * venc , float * audio , int samples"		587291	3					
ANR	587702	Parameter	vorbis_enc_context * venc	1:33:33:56	587291	0	True				
ANR	587703	ParameterType	vorbis_enc_context *		587291	0					
ANR	587704	Identifier	venc		587291	1					
ANR	587705	Parameter	float * audio	3:33:93:104	587291	1	True				
ANR	587706	ParameterType	float *		587291	0					
ANR	587707	Identifier	audio		587291	1					
ANR	587708	Parameter	int samples	3:47:107:117	587291	2	True				
ANR	587709	ParameterType	int		587291	0					
ANR	587710	Identifier	samples		587291	1					
ANR	587711	CFGEntryNode	ENTRY		587291		True				
ANR	587712	CFGExitNode	EXIT		587291		True				
ANR	587713	Symbol	venc -> win		587291						
ANR	587714	Symbol	offset		587291						
ANR	587715	Symbol	channel		587291						
ANR	587716	Symbol	venc -> log2_blocksize		587291						
ANR	587717	Symbol	venc -> have_saved		587291						
ANR	587718	Symbol	* venc -> log2_blocksize		587291						
ANR	587719	Symbol	venc -> channels		587291						
ANR	587720	Symbol	* venc -> win		587291						
ANR	587721	Symbol	samples		587291						
ANR	587722	Symbol	* * venc		587291						
ANR	587723	Symbol	n		587291						
ANR	587724	Symbol	window_len		587291						
ANR	587725	Symbol	venc -> fdsp		587291						
ANR	587726	Symbol	venc		587291						
ANR	587727	Symbol	fdsp		587291						
ANR	587728	Symbol	venc -> samples		587291						
ANR	587729	Symbol	* venc -> mdct		587291						
ANR	587730	Symbol	venc -> mdct		587291						
ANR	587731	Symbol	venc -> coeffs		587291						
ANR	587732	Symbol	audio		587291						
ANR	587733	Symbol	win		587291						
ANR	587734	Symbol	venc -> saved		587291						
ANR	587735	Symbol	* venc		587291						
