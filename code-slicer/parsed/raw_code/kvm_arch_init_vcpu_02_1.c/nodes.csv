command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5096081	File	/home/p4ultr4n/workplace/ReVeal/raw_code/kvm_arch_init_vcpu_02_1.c								
ANR	5096082	Function	kvm_arch_init_vcpu	1:0:0:8698							
ANR	5096083	FunctionDef	kvm_arch_init_vcpu (CPUState * cs)		5096082	0					
ANR	5096084	CompoundStatement		3:0:38:8698	5096082	0					
ANR	5096085	ClassDefStatement	struct { struct kvm_cpuid2 cpuid ; struct kvm_cpuid_entry2 entries [ KVM_MAX_CPUID_ENTRIES ] ; }	5:4:45:158	5096082	0	True				
ANR	5096086	IdentifierDeclStatement	QEMU_PACKED cpuid_data ;	11:6:160:182	5096082	1	True				
ANR	5096087	IdentifierDecl	cpuid_data		5096082	0					
ANR	5096088	IdentifierDeclType	QEMU_PACKED		5096082	0					
ANR	5096089	Identifier	cpuid_data		5096082	1					
ANR	5096090	IdentifierDeclStatement	X86CPU * cpu = X86_CPU ( cs ) ;	13:4:189:214	5096082	2	True				
ANR	5096091	IdentifierDecl	* cpu = X86_CPU ( cs )		5096082	0					
ANR	5096092	IdentifierDeclType	X86CPU *		5096082	0					
ANR	5096093	Identifier	cpu		5096082	1					
ANR	5096094	AssignmentExpression	* cpu = X86_CPU ( cs )		5096082	2		=			
ANR	5096095	Identifier	cpu		5096082	0					
ANR	5096096	CallExpression	X86_CPU ( cs )		5096082	1					
ANR	5096097	Callee	X86_CPU		5096082	0					
ANR	5096098	Identifier	X86_CPU		5096082	0					
ANR	5096099	ArgumentList	cs		5096082	1					
ANR	5096100	Argument	cs		5096082	0					
ANR	5096101	Identifier	cs		5096082	0					
ANR	5096102	IdentifierDeclStatement	CPUX86State * env = & cpu -> env ;	15:4:221:249	5096082	3	True				
ANR	5096103	IdentifierDecl	* env = & cpu -> env		5096082	0					
ANR	5096104	IdentifierDeclType	CPUX86State *		5096082	0					
ANR	5096105	Identifier	env		5096082	1					
ANR	5096106	AssignmentExpression	* env = & cpu -> env		5096082	2		=			
ANR	5096107	Identifier	env		5096082	0					
ANR	5096108	UnaryOperationExpression	& cpu -> env		5096082	1					
ANR	5096109	UnaryOperator	&		5096082	0					
ANR	5096110	PtrMemberAccess	cpu -> env		5096082	1					
ANR	5096111	Identifier	cpu		5096082	0					
ANR	5096112	Identifier	env		5096082	1					
ANR	5096113	IdentifierDeclStatement	"uint32_t limit , i , j , cpuid_i ;"	17:4:256:285	5096082	4	True				
ANR	5096114	IdentifierDecl	limit		5096082	0					
ANR	5096115	IdentifierDeclType	uint32_t		5096082	0					
ANR	5096116	Identifier	limit		5096082	1					
ANR	5096117	IdentifierDecl	i		5096082	1					
ANR	5096118	IdentifierDeclType	uint32_t		5096082	0					
ANR	5096119	Identifier	i		5096082	1					
ANR	5096120	IdentifierDecl	j		5096082	2					
ANR	5096121	IdentifierDeclType	uint32_t		5096082	0					
ANR	5096122	Identifier	j		5096082	1					
ANR	5096123	IdentifierDecl	cpuid_i		5096082	3					
ANR	5096124	IdentifierDeclType	uint32_t		5096082	0					
ANR	5096125	Identifier	cpuid_i		5096082	1					
ANR	5096126	IdentifierDeclStatement	uint32_t unused ;	19:4:292:307	5096082	5	True				
ANR	5096127	IdentifierDecl	unused		5096082	0					
ANR	5096128	IdentifierDeclType	uint32_t		5096082	0					
ANR	5096129	Identifier	unused		5096082	1					
ANR	5096130	IdentifierDeclStatement	struct kvm_cpuid_entry2 * c ;	21:4:314:340	5096082	6	True				
ANR	5096131	IdentifierDecl	* c		5096082	0					
ANR	5096132	IdentifierDeclType	struct kvm_cpuid_entry2 *		5096082	0					
ANR	5096133	Identifier	c		5096082	1					
ANR	5096134	IdentifierDeclStatement	uint32_t signature [ 3 ] ;	23:4:347:368	5096082	7	True				
ANR	5096135	IdentifierDecl	signature [ 3 ]		5096082	0					
ANR	5096136	IdentifierDeclType	uint32_t [ 3 ]		5096082	0					
ANR	5096137	Identifier	signature		5096082	1					
ANR	5096138	PrimaryExpression	3		5096082	2					
ANR	5096139	IdentifierDeclStatement	int r ;	25:4:375:380	5096082	8	True				
ANR	5096140	IdentifierDecl	r		5096082	0					
ANR	5096141	IdentifierDeclType	int		5096082	0					
ANR	5096142	Identifier	r		5096082	1					
ANR	5096143	ExpressionStatement	cpuid_i = 0	29:4:389:400	5096082	9	True				
ANR	5096144	AssignmentExpression	cpuid_i = 0		5096082	0		=			
ANR	5096145	Identifier	cpuid_i		5096082	0					
ANR	5096146	PrimaryExpression	0		5096082	1					
ANR	5096147	ExpressionStatement	c = & cpuid_data . entries [ cpuid_i ++ ]	35:4:446:480	5096082	10	True				
ANR	5096148	AssignmentExpression	c = & cpuid_data . entries [ cpuid_i ++ ]		5096082	0		=			
ANR	5096149	Identifier	c		5096082	0					
ANR	5096150	UnaryOperationExpression	& cpuid_data . entries [ cpuid_i ++ ]		5096082	1					
ANR	5096151	UnaryOperator	&		5096082	0					
ANR	5096152	ArrayIndexing	cpuid_data . entries [ cpuid_i ++ ]		5096082	1					
ANR	5096153	MemberAccess	cpuid_data . entries		5096082	0					
ANR	5096154	Identifier	cpuid_data		5096082	0					
ANR	5096155	Identifier	entries		5096082	1					
ANR	5096156	PostIncDecOperationExpression	cpuid_i ++		5096082	1					
ANR	5096157	Identifier	cpuid_i		5096082	0					
ANR	5096158	IncDec	++		5096082	1					
ANR	5096159	ExpressionStatement	"memset ( c , 0 , sizeof ( * c ) )"	37:4:487:511	5096082	11	True				
ANR	5096160	CallExpression	"memset ( c , 0 , sizeof ( * c ) )"		5096082	0					
ANR	5096161	Callee	memset		5096082	0					
ANR	5096162	Identifier	memset		5096082	0					
ANR	5096163	ArgumentList	c		5096082	1					
ANR	5096164	Argument	c		5096082	0					
ANR	5096165	Identifier	c		5096082	0					
ANR	5096166	Argument	0		5096082	1					
ANR	5096167	PrimaryExpression	0		5096082	0					
ANR	5096168	Argument	sizeof ( * c )		5096082	2					
ANR	5096169	SizeofExpression	sizeof ( * c )		5096082	0					
ANR	5096170	Sizeof	sizeof		5096082	0					
ANR	5096171	UnaryOperationExpression	* c		5096082	1					
ANR	5096172	UnaryOperator	*		5096082	0					
ANR	5096173	Identifier	c		5096082	1					
ANR	5096174	ExpressionStatement	c -> function = KVM_CPUID_SIGNATURE	39:4:518:551	5096082	12	True				
ANR	5096175	AssignmentExpression	c -> function = KVM_CPUID_SIGNATURE		5096082	0		=			
ANR	5096176	PtrMemberAccess	c -> function		5096082	0					
ANR	5096177	Identifier	c		5096082	0					
ANR	5096178	Identifier	function		5096082	1					
ANR	5096179	Identifier	KVM_CPUID_SIGNATURE		5096082	1					
ANR	5096180	IfStatement	if ( ! hyperv_enabled ( cpu ) )		5096082	13					
ANR	5096181	Condition	! hyperv_enabled ( cpu )	41:8:562:581	5096082	0	True				
ANR	5096182	UnaryOperationExpression	! hyperv_enabled ( cpu )		5096082	0					
ANR	5096183	UnaryOperator	!		5096082	0					
ANR	5096184	CallExpression	hyperv_enabled ( cpu )		5096082	1					
ANR	5096185	Callee	hyperv_enabled		5096082	0					
ANR	5096186	Identifier	hyperv_enabled		5096082	0					
ANR	5096187	ArgumentList	cpu		5096082	1					
ANR	5096188	Argument	cpu		5096082	0					
ANR	5096189	Identifier	cpu		5096082	0					
ANR	5096190	CompoundStatement		39:30:545:545	5096082	1					
ANR	5096191	ExpressionStatement	"memcpy ( signature , ""KVMKVMKVM\\0\\0\\0"" , 12 )"	43:8:595:635	5096082	0	True				
ANR	5096192	CallExpression	"memcpy ( signature , ""KVMKVMKVM\\0\\0\\0"" , 12 )"		5096082	0					
ANR	5096193	Callee	memcpy		5096082	0					
ANR	5096194	Identifier	memcpy		5096082	0					
ANR	5096195	ArgumentList	signature		5096082	1					
ANR	5096196	Argument	signature		5096082	0					
ANR	5096197	Identifier	signature		5096082	0					
ANR	5096198	Argument	"""KVMKVMKVM\\0\\0\\0"""		5096082	1					
ANR	5096199	PrimaryExpression	"""KVMKVMKVM\\0\\0\\0"""		5096082	0					
ANR	5096200	Argument	12		5096082	2					
ANR	5096201	PrimaryExpression	12		5096082	0					
ANR	5096202	ExpressionStatement	c -> eax = 0	45:8:646:656	5096082	1	True				
ANR	5096203	AssignmentExpression	c -> eax = 0		5096082	0		=			
ANR	5096204	PtrMemberAccess	c -> eax		5096082	0					
ANR	5096205	Identifier	c		5096082	0					
ANR	5096206	Identifier	eax		5096082	1					
ANR	5096207	PrimaryExpression	0		5096082	1					
ANR	5096208	ElseStatement	else		5096082	0					
ANR	5096209	CompoundStatement		45:11:631:631	5096082	0					
ANR	5096210	ExpressionStatement	"memcpy ( signature , ""Microsoft Hv"" , 12 )"	49:8:681:718	5096082	0	True				
ANR	5096211	CallExpression	"memcpy ( signature , ""Microsoft Hv"" , 12 )"		5096082	0					
ANR	5096212	Callee	memcpy		5096082	0					
ANR	5096213	Identifier	memcpy		5096082	0					
ANR	5096214	ArgumentList	signature		5096082	1					
ANR	5096215	Argument	signature		5096082	0					
ANR	5096216	Identifier	signature		5096082	0					
ANR	5096217	Argument	"""Microsoft Hv"""		5096082	1					
ANR	5096218	PrimaryExpression	"""Microsoft Hv"""		5096082	0					
ANR	5096219	Argument	12		5096082	2					
ANR	5096220	PrimaryExpression	12		5096082	0					
ANR	5096221	ExpressionStatement	c -> eax = HYPERV_CPUID_MIN	51:8:729:754	5096082	1	True				
ANR	5096222	AssignmentExpression	c -> eax = HYPERV_CPUID_MIN		5096082	0		=			
ANR	5096223	PtrMemberAccess	c -> eax		5096082	0					
ANR	5096224	Identifier	c		5096082	0					
ANR	5096225	Identifier	eax		5096082	1					
ANR	5096226	Identifier	HYPERV_CPUID_MIN		5096082	1					
ANR	5096227	ExpressionStatement	c -> ebx = signature [ 0 ]	55:4:768:789	5096082	14	True				
ANR	5096228	AssignmentExpression	c -> ebx = signature [ 0 ]		5096082	0		=			
ANR	5096229	PtrMemberAccess	c -> ebx		5096082	0					
ANR	5096230	Identifier	c		5096082	0					
ANR	5096231	Identifier	ebx		5096082	1					
ANR	5096232	ArrayIndexing	signature [ 0 ]		5096082	1					
ANR	5096233	Identifier	signature		5096082	0					
ANR	5096234	PrimaryExpression	0		5096082	1					
ANR	5096235	ExpressionStatement	c -> ecx = signature [ 1 ]	57:4:796:817	5096082	15	True				
ANR	5096236	AssignmentExpression	c -> ecx = signature [ 1 ]		5096082	0		=			
ANR	5096237	PtrMemberAccess	c -> ecx		5096082	0					
ANR	5096238	Identifier	c		5096082	0					
ANR	5096239	Identifier	ecx		5096082	1					
ANR	5096240	ArrayIndexing	signature [ 1 ]		5096082	1					
ANR	5096241	Identifier	signature		5096082	0					
ANR	5096242	PrimaryExpression	1		5096082	1					
ANR	5096243	ExpressionStatement	c -> edx = signature [ 2 ]	59:4:824:845	5096082	16	True				
ANR	5096244	AssignmentExpression	c -> edx = signature [ 2 ]		5096082	0		=			
ANR	5096245	PtrMemberAccess	c -> edx		5096082	0					
ANR	5096246	Identifier	c		5096082	0					
ANR	5096247	Identifier	edx		5096082	1					
ANR	5096248	ArrayIndexing	signature [ 2 ]		5096082	1					
ANR	5096249	Identifier	signature		5096082	0					
ANR	5096250	PrimaryExpression	2		5096082	1					
ANR	5096251	ExpressionStatement	c = & cpuid_data . entries [ cpuid_i ++ ]	63:4:854:888	5096082	17	True				
ANR	5096252	AssignmentExpression	c = & cpuid_data . entries [ cpuid_i ++ ]		5096082	0		=			
ANR	5096253	Identifier	c		5096082	0					
ANR	5096254	UnaryOperationExpression	& cpuid_data . entries [ cpuid_i ++ ]		5096082	1					
ANR	5096255	UnaryOperator	&		5096082	0					
ANR	5096256	ArrayIndexing	cpuid_data . entries [ cpuid_i ++ ]		5096082	1					
ANR	5096257	MemberAccess	cpuid_data . entries		5096082	0					
ANR	5096258	Identifier	cpuid_data		5096082	0					
ANR	5096259	Identifier	entries		5096082	1					
ANR	5096260	PostIncDecOperationExpression	cpuid_i ++		5096082	1					
ANR	5096261	Identifier	cpuid_i		5096082	0					
ANR	5096262	IncDec	++		5096082	1					
ANR	5096263	ExpressionStatement	"memset ( c , 0 , sizeof ( * c ) )"	65:4:895:919	5096082	18	True				
ANR	5096264	CallExpression	"memset ( c , 0 , sizeof ( * c ) )"		5096082	0					
ANR	5096265	Callee	memset		5096082	0					
ANR	5096266	Identifier	memset		5096082	0					
ANR	5096267	ArgumentList	c		5096082	1					
ANR	5096268	Argument	c		5096082	0					
ANR	5096269	Identifier	c		5096082	0					
ANR	5096270	Argument	0		5096082	1					
ANR	5096271	PrimaryExpression	0		5096082	0					
ANR	5096272	Argument	sizeof ( * c )		5096082	2					
ANR	5096273	SizeofExpression	sizeof ( * c )		5096082	0					
ANR	5096274	Sizeof	sizeof		5096082	0					
ANR	5096275	UnaryOperationExpression	* c		5096082	1					
ANR	5096276	UnaryOperator	*		5096082	0					
ANR	5096277	Identifier	c		5096082	1					
ANR	5096278	ExpressionStatement	c -> function = KVM_CPUID_FEATURES	67:4:926:958	5096082	19	True				
ANR	5096279	AssignmentExpression	c -> function = KVM_CPUID_FEATURES		5096082	0		=			
ANR	5096280	PtrMemberAccess	c -> function		5096082	0					
ANR	5096281	Identifier	c		5096082	0					
ANR	5096282	Identifier	function		5096082	1					
ANR	5096283	Identifier	KVM_CPUID_FEATURES		5096082	1					
ANR	5096284	ExpressionStatement	c -> eax = env -> features [ FEAT_KVM ]	69:4:965:997	5096082	20	True				
ANR	5096285	AssignmentExpression	c -> eax = env -> features [ FEAT_KVM ]		5096082	0		=			
ANR	5096286	PtrMemberAccess	c -> eax		5096082	0					
ANR	5096287	Identifier	c		5096082	0					
ANR	5096288	Identifier	eax		5096082	1					
ANR	5096289	ArrayIndexing	env -> features [ FEAT_KVM ]		5096082	1					
ANR	5096290	PtrMemberAccess	env -> features		5096082	0					
ANR	5096291	Identifier	env		5096082	0					
ANR	5096292	Identifier	features		5096082	1					
ANR	5096293	Identifier	FEAT_KVM		5096082	1					
ANR	5096294	IfStatement	if ( hyperv_enabled ( cpu ) )		5096082	21					
ANR	5096295	Condition	hyperv_enabled ( cpu )	73:8:1010:1028	5096082	0	True				
ANR	5096296	CallExpression	hyperv_enabled ( cpu )		5096082	0					
ANR	5096297	Callee	hyperv_enabled		5096082	0					
ANR	5096298	Identifier	hyperv_enabled		5096082	0					
ANR	5096299	ArgumentList	cpu		5096082	1					
ANR	5096300	Argument	cpu		5096082	0					
ANR	5096301	Identifier	cpu		5096082	0					
ANR	5096302	CompoundStatement		71:29:992:992	5096082	1					
ANR	5096303	ExpressionStatement	"memcpy ( signature , ""Hv#1\\0\\0\\0\\0\\0\\0\\0\\0"" , 12 )"	75:8:1042:1087	5096082	0	True				
ANR	5096304	CallExpression	"memcpy ( signature , ""Hv#1\\0\\0\\0\\0\\0\\0\\0\\0"" , 12 )"		5096082	0					
ANR	5096305	Callee	memcpy		5096082	0					
ANR	5096306	Identifier	memcpy		5096082	0					
ANR	5096307	ArgumentList	signature		5096082	1					
ANR	5096308	Argument	signature		5096082	0					
ANR	5096309	Identifier	signature		5096082	0					
ANR	5096310	Argument	"""Hv#1\\0\\0\\0\\0\\0\\0\\0\\0"""		5096082	1					
ANR	5096311	PrimaryExpression	"""Hv#1\\0\\0\\0\\0\\0\\0\\0\\0"""		5096082	0					
ANR	5096312	Argument	12		5096082	2					
ANR	5096313	PrimaryExpression	12		5096082	0					
ANR	5096314	ExpressionStatement	c -> eax = signature [ 0 ]	77:8:1098:1119	5096082	1	True				
ANR	5096315	AssignmentExpression	c -> eax = signature [ 0 ]		5096082	0		=			
ANR	5096316	PtrMemberAccess	c -> eax		5096082	0					
ANR	5096317	Identifier	c		5096082	0					
ANR	5096318	Identifier	eax		5096082	1					
ANR	5096319	ArrayIndexing	signature [ 0 ]		5096082	1					
ANR	5096320	Identifier	signature		5096082	0					
ANR	5096321	PrimaryExpression	0		5096082	1					
ANR	5096322	ExpressionStatement	c = & cpuid_data . entries [ cpuid_i ++ ]	81:8:1132:1166	5096082	2	True				
ANR	5096323	AssignmentExpression	c = & cpuid_data . entries [ cpuid_i ++ ]		5096082	0		=			
ANR	5096324	Identifier	c		5096082	0					
ANR	5096325	UnaryOperationExpression	& cpuid_data . entries [ cpuid_i ++ ]		5096082	1					
ANR	5096326	UnaryOperator	&		5096082	0					
ANR	5096327	ArrayIndexing	cpuid_data . entries [ cpuid_i ++ ]		5096082	1					
ANR	5096328	MemberAccess	cpuid_data . entries		5096082	0					
ANR	5096329	Identifier	cpuid_data		5096082	0					
ANR	5096330	Identifier	entries		5096082	1					
ANR	5096331	PostIncDecOperationExpression	cpuid_i ++		5096082	1					
ANR	5096332	Identifier	cpuid_i		5096082	0					
ANR	5096333	IncDec	++		5096082	1					
ANR	5096334	ExpressionStatement	"memset ( c , 0 , sizeof ( * c ) )"	83:8:1177:1201	5096082	3	True				
ANR	5096335	CallExpression	"memset ( c , 0 , sizeof ( * c ) )"		5096082	0					
ANR	5096336	Callee	memset		5096082	0					
ANR	5096337	Identifier	memset		5096082	0					
ANR	5096338	ArgumentList	c		5096082	1					
ANR	5096339	Argument	c		5096082	0					
ANR	5096340	Identifier	c		5096082	0					
ANR	5096341	Argument	0		5096082	1					
ANR	5096342	PrimaryExpression	0		5096082	0					
ANR	5096343	Argument	sizeof ( * c )		5096082	2					
ANR	5096344	SizeofExpression	sizeof ( * c )		5096082	0					
ANR	5096345	Sizeof	sizeof		5096082	0					
ANR	5096346	UnaryOperationExpression	* c		5096082	1					
ANR	5096347	UnaryOperator	*		5096082	0					
ANR	5096348	Identifier	c		5096082	1					
ANR	5096349	ExpressionStatement	c -> function = HYPERV_CPUID_VERSION	85:8:1212:1246	5096082	4	True				
ANR	5096350	AssignmentExpression	c -> function = HYPERV_CPUID_VERSION		5096082	0		=			
ANR	5096351	PtrMemberAccess	c -> function		5096082	0					
ANR	5096352	Identifier	c		5096082	0					
ANR	5096353	Identifier	function		5096082	1					
ANR	5096354	Identifier	HYPERV_CPUID_VERSION		5096082	1					
ANR	5096355	ExpressionStatement	c -> eax = 0x00001bbc	87:8:1257:1276	5096082	5	True				
ANR	5096356	AssignmentExpression	c -> eax = 0x00001bbc		5096082	0		=			
ANR	5096357	PtrMemberAccess	c -> eax		5096082	0					
ANR	5096358	Identifier	c		5096082	0					
ANR	5096359	Identifier	eax		5096082	1					
ANR	5096360	PrimaryExpression	0x00001bbc		5096082	1					
ANR	5096361	ExpressionStatement	c -> ebx = 0x00060001	89:8:1287:1306	5096082	6	True				
ANR	5096362	AssignmentExpression	c -> ebx = 0x00060001		5096082	0		=			
ANR	5096363	PtrMemberAccess	c -> ebx		5096082	0					
ANR	5096364	Identifier	c		5096082	0					
ANR	5096365	Identifier	ebx		5096082	1					
ANR	5096366	PrimaryExpression	0x00060001		5096082	1					
ANR	5096367	ExpressionStatement	c = & cpuid_data . entries [ cpuid_i ++ ]	93:8:1319:1353	5096082	7	True				
ANR	5096368	AssignmentExpression	c = & cpuid_data . entries [ cpuid_i ++ ]		5096082	0		=			
ANR	5096369	Identifier	c		5096082	0					
ANR	5096370	UnaryOperationExpression	& cpuid_data . entries [ cpuid_i ++ ]		5096082	1					
ANR	5096371	UnaryOperator	&		5096082	0					
ANR	5096372	ArrayIndexing	cpuid_data . entries [ cpuid_i ++ ]		5096082	1					
ANR	5096373	MemberAccess	cpuid_data . entries		5096082	0					
ANR	5096374	Identifier	cpuid_data		5096082	0					
ANR	5096375	Identifier	entries		5096082	1					
ANR	5096376	PostIncDecOperationExpression	cpuid_i ++		5096082	1					
ANR	5096377	Identifier	cpuid_i		5096082	0					
ANR	5096378	IncDec	++		5096082	1					
ANR	5096379	ExpressionStatement	"memset ( c , 0 , sizeof ( * c ) )"	95:8:1364:1388	5096082	8	True				
ANR	5096380	CallExpression	"memset ( c , 0 , sizeof ( * c ) )"		5096082	0					
ANR	5096381	Callee	memset		5096082	0					
ANR	5096382	Identifier	memset		5096082	0					
ANR	5096383	ArgumentList	c		5096082	1					
ANR	5096384	Argument	c		5096082	0					
ANR	5096385	Identifier	c		5096082	0					
ANR	5096386	Argument	0		5096082	1					
ANR	5096387	PrimaryExpression	0		5096082	0					
ANR	5096388	Argument	sizeof ( * c )		5096082	2					
ANR	5096389	SizeofExpression	sizeof ( * c )		5096082	0					
ANR	5096390	Sizeof	sizeof		5096082	0					
ANR	5096391	UnaryOperationExpression	* c		5096082	1					
ANR	5096392	UnaryOperator	*		5096082	0					
ANR	5096393	Identifier	c		5096082	1					
ANR	5096394	ExpressionStatement	c -> function = HYPERV_CPUID_FEATURES	97:8:1399:1434	5096082	9	True				
ANR	5096395	AssignmentExpression	c -> function = HYPERV_CPUID_FEATURES		5096082	0		=			
ANR	5096396	PtrMemberAccess	c -> function		5096082	0					
ANR	5096397	Identifier	c		5096082	0					
ANR	5096398	Identifier	function		5096082	1					
ANR	5096399	Identifier	HYPERV_CPUID_FEATURES		5096082	1					
ANR	5096400	IfStatement	if ( cpu -> hyperv_relaxed_timing )		5096082	10					
ANR	5096401	Condition	cpu -> hyperv_relaxed_timing	99:12:1449:1474	5096082	0	True				
ANR	5096402	PtrMemberAccess	cpu -> hyperv_relaxed_timing		5096082	0					
ANR	5096403	Identifier	cpu		5096082	0					
ANR	5096404	Identifier	hyperv_relaxed_timing		5096082	1					
ANR	5096405	CompoundStatement		97:40:1438:1438	5096082	1					
ANR	5096406	ExpressionStatement	c -> eax |= HV_X64_MSR_HYPERCALL_AVAILABLE	101:12:1492:1532	5096082	0	True				
ANR	5096407	AssignmentExpression	c -> eax |= HV_X64_MSR_HYPERCALL_AVAILABLE		5096082	0		|=			
ANR	5096408	PtrMemberAccess	c -> eax		5096082	0					
ANR	5096409	Identifier	c		5096082	0					
ANR	5096410	Identifier	eax		5096082	1					
ANR	5096411	Identifier	HV_X64_MSR_HYPERCALL_AVAILABLE		5096082	1					
ANR	5096412	IfStatement	if ( cpu -> hyperv_vapic )		5096082	11					
ANR	5096413	Condition	cpu -> hyperv_vapic	105:12:1558:1574	5096082	0	True				
ANR	5096414	PtrMemberAccess	cpu -> hyperv_vapic		5096082	0					
ANR	5096415	Identifier	cpu		5096082	0					
ANR	5096416	Identifier	hyperv_vapic		5096082	1					
ANR	5096417	CompoundStatement		103:31:1538:1538	5096082	1					
ANR	5096418	ExpressionStatement	c -> eax |= HV_X64_MSR_HYPERCALL_AVAILABLE	107:12:1592:1632	5096082	0	True				
ANR	5096419	AssignmentExpression	c -> eax |= HV_X64_MSR_HYPERCALL_AVAILABLE		5096082	0		|=			
ANR	5096420	PtrMemberAccess	c -> eax		5096082	0					
ANR	5096421	Identifier	c		5096082	0					
ANR	5096422	Identifier	eax		5096082	1					
ANR	5096423	Identifier	HV_X64_MSR_HYPERCALL_AVAILABLE		5096082	1					
ANR	5096424	ExpressionStatement	c -> eax |= HV_X64_MSR_APIC_ACCESS_AVAILABLE	109:12:1647:1689	5096082	1	True				
ANR	5096425	AssignmentExpression	c -> eax |= HV_X64_MSR_APIC_ACCESS_AVAILABLE		5096082	0		|=			
ANR	5096426	PtrMemberAccess	c -> eax		5096082	0					
ANR	5096427	Identifier	c		5096082	0					
ANR	5096428	Identifier	eax		5096082	1					
ANR	5096429	Identifier	HV_X64_MSR_APIC_ACCESS_AVAILABLE		5096082	1					
ANR	5096430	ExpressionStatement	c = & cpuid_data . entries [ cpuid_i ++ ]	115:8:1713:1747	5096082	12	True				
ANR	5096431	AssignmentExpression	c = & cpuid_data . entries [ cpuid_i ++ ]		5096082	0		=			
ANR	5096432	Identifier	c		5096082	0					
ANR	5096433	UnaryOperationExpression	& cpuid_data . entries [ cpuid_i ++ ]		5096082	1					
ANR	5096434	UnaryOperator	&		5096082	0					
ANR	5096435	ArrayIndexing	cpuid_data . entries [ cpuid_i ++ ]		5096082	1					
ANR	5096436	MemberAccess	cpuid_data . entries		5096082	0					
ANR	5096437	Identifier	cpuid_data		5096082	0					
ANR	5096438	Identifier	entries		5096082	1					
ANR	5096439	PostIncDecOperationExpression	cpuid_i ++		5096082	1					
ANR	5096440	Identifier	cpuid_i		5096082	0					
ANR	5096441	IncDec	++		5096082	1					
ANR	5096442	ExpressionStatement	"memset ( c , 0 , sizeof ( * c ) )"	117:8:1758:1782	5096082	13	True				
ANR	5096443	CallExpression	"memset ( c , 0 , sizeof ( * c ) )"		5096082	0					
ANR	5096444	Callee	memset		5096082	0					
ANR	5096445	Identifier	memset		5096082	0					
ANR	5096446	ArgumentList	c		5096082	1					
ANR	5096447	Argument	c		5096082	0					
ANR	5096448	Identifier	c		5096082	0					
ANR	5096449	Argument	0		5096082	1					
ANR	5096450	PrimaryExpression	0		5096082	0					
ANR	5096451	Argument	sizeof ( * c )		5096082	2					
ANR	5096452	SizeofExpression	sizeof ( * c )		5096082	0					
ANR	5096453	Sizeof	sizeof		5096082	0					
ANR	5096454	UnaryOperationExpression	* c		5096082	1					
ANR	5096455	UnaryOperator	*		5096082	0					
ANR	5096456	Identifier	c		5096082	1					
ANR	5096457	ExpressionStatement	c -> function = HYPERV_CPUID_ENLIGHTMENT_INFO	119:8:1793:1836	5096082	14	True				
ANR	5096458	AssignmentExpression	c -> function = HYPERV_CPUID_ENLIGHTMENT_INFO		5096082	0		=			
ANR	5096459	PtrMemberAccess	c -> function		5096082	0					
ANR	5096460	Identifier	c		5096082	0					
ANR	5096461	Identifier	function		5096082	1					
ANR	5096462	Identifier	HYPERV_CPUID_ENLIGHTMENT_INFO		5096082	1					
ANR	5096463	IfStatement	if ( cpu -> hyperv_relaxed_timing )		5096082	15					
ANR	5096464	Condition	cpu -> hyperv_relaxed_timing	121:12:1851:1876	5096082	0	True				
ANR	5096465	PtrMemberAccess	cpu -> hyperv_relaxed_timing		5096082	0					
ANR	5096466	Identifier	cpu		5096082	0					
ANR	5096467	Identifier	hyperv_relaxed_timing		5096082	1					
ANR	5096468	CompoundStatement		119:40:1840:1840	5096082	1					
ANR	5096469	ExpressionStatement	c -> eax |= HV_X64_RELAXED_TIMING_RECOMMENDED	123:12:1894:1937	5096082	0	True				
ANR	5096470	AssignmentExpression	c -> eax |= HV_X64_RELAXED_TIMING_RECOMMENDED		5096082	0		|=			
ANR	5096471	PtrMemberAccess	c -> eax		5096082	0					
ANR	5096472	Identifier	c		5096082	0					
ANR	5096473	Identifier	eax		5096082	1					
ANR	5096474	Identifier	HV_X64_RELAXED_TIMING_RECOMMENDED		5096082	1					
ANR	5096475	IfStatement	if ( cpu -> hyperv_vapic )		5096082	16					
ANR	5096476	Condition	cpu -> hyperv_vapic	127:12:1963:1979	5096082	0	True				
ANR	5096477	PtrMemberAccess	cpu -> hyperv_vapic		5096082	0					
ANR	5096478	Identifier	cpu		5096082	0					
ANR	5096479	Identifier	hyperv_vapic		5096082	1					
ANR	5096480	CompoundStatement		125:31:1943:1943	5096082	1					
ANR	5096481	ExpressionStatement	c -> eax |= HV_X64_APIC_ACCESS_RECOMMENDED	129:12:1997:2037	5096082	0	True				
ANR	5096482	AssignmentExpression	c -> eax |= HV_X64_APIC_ACCESS_RECOMMENDED		5096082	0		|=			
ANR	5096483	PtrMemberAccess	c -> eax		5096082	0					
ANR	5096484	Identifier	c		5096082	0					
ANR	5096485	Identifier	eax		5096082	1					
ANR	5096486	Identifier	HV_X64_APIC_ACCESS_RECOMMENDED		5096082	1					
ANR	5096487	ExpressionStatement	c -> ebx = cpu -> hyperv_spinlock_attempts	133:8:2059:2097	5096082	17	True				
ANR	5096488	AssignmentExpression	c -> ebx = cpu -> hyperv_spinlock_attempts		5096082	0		=			
ANR	5096489	PtrMemberAccess	c -> ebx		5096082	0					
ANR	5096490	Identifier	c		5096082	0					
ANR	5096491	Identifier	ebx		5096082	1					
ANR	5096492	PtrMemberAccess	cpu -> hyperv_spinlock_attempts		5096082	1					
ANR	5096493	Identifier	cpu		5096082	0					
ANR	5096494	Identifier	hyperv_spinlock_attempts		5096082	1					
ANR	5096495	ExpressionStatement	c = & cpuid_data . entries [ cpuid_i ++ ]	137:8:2110:2144	5096082	18	True				
ANR	5096496	AssignmentExpression	c = & cpuid_data . entries [ cpuid_i ++ ]		5096082	0		=			
ANR	5096497	Identifier	c		5096082	0					
ANR	5096498	UnaryOperationExpression	& cpuid_data . entries [ cpuid_i ++ ]		5096082	1					
ANR	5096499	UnaryOperator	&		5096082	0					
ANR	5096500	ArrayIndexing	cpuid_data . entries [ cpuid_i ++ ]		5096082	1					
ANR	5096501	MemberAccess	cpuid_data . entries		5096082	0					
ANR	5096502	Identifier	cpuid_data		5096082	0					
ANR	5096503	Identifier	entries		5096082	1					
ANR	5096504	PostIncDecOperationExpression	cpuid_i ++		5096082	1					
ANR	5096505	Identifier	cpuid_i		5096082	0					
ANR	5096506	IncDec	++		5096082	1					
ANR	5096507	ExpressionStatement	"memset ( c , 0 , sizeof ( * c ) )"	139:8:2155:2179	5096082	19	True				
ANR	5096508	CallExpression	"memset ( c , 0 , sizeof ( * c ) )"		5096082	0					
ANR	5096509	Callee	memset		5096082	0					
ANR	5096510	Identifier	memset		5096082	0					
ANR	5096511	ArgumentList	c		5096082	1					
ANR	5096512	Argument	c		5096082	0					
ANR	5096513	Identifier	c		5096082	0					
ANR	5096514	Argument	0		5096082	1					
ANR	5096515	PrimaryExpression	0		5096082	0					
ANR	5096516	Argument	sizeof ( * c )		5096082	2					
ANR	5096517	SizeofExpression	sizeof ( * c )		5096082	0					
ANR	5096518	Sizeof	sizeof		5096082	0					
ANR	5096519	UnaryOperationExpression	* c		5096082	1					
ANR	5096520	UnaryOperator	*		5096082	0					
ANR	5096521	Identifier	c		5096082	1					
ANR	5096522	ExpressionStatement	c -> function = HYPERV_CPUID_IMPLEMENT_LIMITS	141:8:2190:2233	5096082	20	True				
ANR	5096523	AssignmentExpression	c -> function = HYPERV_CPUID_IMPLEMENT_LIMITS		5096082	0		=			
ANR	5096524	PtrMemberAccess	c -> function		5096082	0					
ANR	5096525	Identifier	c		5096082	0					
ANR	5096526	Identifier	function		5096082	1					
ANR	5096527	Identifier	HYPERV_CPUID_IMPLEMENT_LIMITS		5096082	1					
ANR	5096528	ExpressionStatement	c -> eax = 0x40	143:8:2244:2257	5096082	21	True				
ANR	5096529	AssignmentExpression	c -> eax = 0x40		5096082	0		=			
ANR	5096530	PtrMemberAccess	c -> eax		5096082	0					
ANR	5096531	Identifier	c		5096082	0					
ANR	5096532	Identifier	eax		5096082	1					
ANR	5096533	PrimaryExpression	0x40		5096082	1					
ANR	5096534	ExpressionStatement	c -> ebx = 0x40	145:8:2268:2281	5096082	22	True				
ANR	5096535	AssignmentExpression	c -> ebx = 0x40		5096082	0		=			
ANR	5096536	PtrMemberAccess	c -> ebx		5096082	0					
ANR	5096537	Identifier	c		5096082	0					
ANR	5096538	Identifier	ebx		5096082	1					
ANR	5096539	PrimaryExpression	0x40		5096082	1					
ANR	5096540	ExpressionStatement	c = & cpuid_data . entries [ cpuid_i ++ ]	149:8:2294:2328	5096082	23	True				
ANR	5096541	AssignmentExpression	c = & cpuid_data . entries [ cpuid_i ++ ]		5096082	0		=			
ANR	5096542	Identifier	c		5096082	0					
ANR	5096543	UnaryOperationExpression	& cpuid_data . entries [ cpuid_i ++ ]		5096082	1					
ANR	5096544	UnaryOperator	&		5096082	0					
ANR	5096545	ArrayIndexing	cpuid_data . entries [ cpuid_i ++ ]		5096082	1					
ANR	5096546	MemberAccess	cpuid_data . entries		5096082	0					
ANR	5096547	Identifier	cpuid_data		5096082	0					
ANR	5096548	Identifier	entries		5096082	1					
ANR	5096549	PostIncDecOperationExpression	cpuid_i ++		5096082	1					
ANR	5096550	Identifier	cpuid_i		5096082	0					
ANR	5096551	IncDec	++		5096082	1					
ANR	5096552	ExpressionStatement	"memset ( c , 0 , sizeof ( * c ) )"	151:8:2339:2363	5096082	24	True				
ANR	5096553	CallExpression	"memset ( c , 0 , sizeof ( * c ) )"		5096082	0					
ANR	5096554	Callee	memset		5096082	0					
ANR	5096555	Identifier	memset		5096082	0					
ANR	5096556	ArgumentList	c		5096082	1					
ANR	5096557	Argument	c		5096082	0					
ANR	5096558	Identifier	c		5096082	0					
ANR	5096559	Argument	0		5096082	1					
ANR	5096560	PrimaryExpression	0		5096082	0					
ANR	5096561	Argument	sizeof ( * c )		5096082	2					
ANR	5096562	SizeofExpression	sizeof ( * c )		5096082	0					
ANR	5096563	Sizeof	sizeof		5096082	0					
ANR	5096564	UnaryOperationExpression	* c		5096082	1					
ANR	5096565	UnaryOperator	*		5096082	0					
ANR	5096566	Identifier	c		5096082	1					
ANR	5096567	ExpressionStatement	c -> function = KVM_CPUID_SIGNATURE_NEXT	153:8:2374:2412	5096082	25	True				
ANR	5096568	AssignmentExpression	c -> function = KVM_CPUID_SIGNATURE_NEXT		5096082	0		=			
ANR	5096569	PtrMemberAccess	c -> function		5096082	0					
ANR	5096570	Identifier	c		5096082	0					
ANR	5096571	Identifier	function		5096082	1					
ANR	5096572	Identifier	KVM_CPUID_SIGNATURE_NEXT		5096082	1					
ANR	5096573	ExpressionStatement	"memcpy ( signature , ""KVMKVMKVM\\0\\0\\0"" , 12 )"	155:8:2423:2463	5096082	26	True				
ANR	5096574	CallExpression	"memcpy ( signature , ""KVMKVMKVM\\0\\0\\0"" , 12 )"		5096082	0					
ANR	5096575	Callee	memcpy		5096082	0					
ANR	5096576	Identifier	memcpy		5096082	0					
ANR	5096577	ArgumentList	signature		5096082	1					
ANR	5096578	Argument	signature		5096082	0					
ANR	5096579	Identifier	signature		5096082	0					
ANR	5096580	Argument	"""KVMKVMKVM\\0\\0\\0"""		5096082	1					
ANR	5096581	PrimaryExpression	"""KVMKVMKVM\\0\\0\\0"""		5096082	0					
ANR	5096582	Argument	12		5096082	2					
ANR	5096583	PrimaryExpression	12		5096082	0					
ANR	5096584	ExpressionStatement	c -> eax = 0	157:8:2474:2484	5096082	27	True				
ANR	5096585	AssignmentExpression	c -> eax = 0		5096082	0		=			
ANR	5096586	PtrMemberAccess	c -> eax		5096082	0					
ANR	5096587	Identifier	c		5096082	0					
ANR	5096588	Identifier	eax		5096082	1					
ANR	5096589	PrimaryExpression	0		5096082	1					
ANR	5096590	ExpressionStatement	c -> ebx = signature [ 0 ]	159:8:2495:2516	5096082	28	True				
ANR	5096591	AssignmentExpression	c -> ebx = signature [ 0 ]		5096082	0		=			
ANR	5096592	PtrMemberAccess	c -> ebx		5096082	0					
ANR	5096593	Identifier	c		5096082	0					
ANR	5096594	Identifier	ebx		5096082	1					
ANR	5096595	ArrayIndexing	signature [ 0 ]		5096082	1					
ANR	5096596	Identifier	signature		5096082	0					
ANR	5096597	PrimaryExpression	0		5096082	1					
ANR	5096598	ExpressionStatement	c -> ecx = signature [ 1 ]	161:8:2527:2548	5096082	29	True				
ANR	5096599	AssignmentExpression	c -> ecx = signature [ 1 ]		5096082	0		=			
ANR	5096600	PtrMemberAccess	c -> ecx		5096082	0					
ANR	5096601	Identifier	c		5096082	0					
ANR	5096602	Identifier	ecx		5096082	1					
ANR	5096603	ArrayIndexing	signature [ 1 ]		5096082	1					
ANR	5096604	Identifier	signature		5096082	0					
ANR	5096605	PrimaryExpression	1		5096082	1					
ANR	5096606	ExpressionStatement	c -> edx = signature [ 2 ]	163:8:2559:2580	5096082	30	True				
ANR	5096607	AssignmentExpression	c -> edx = signature [ 2 ]		5096082	0		=			
ANR	5096608	PtrMemberAccess	c -> edx		5096082	0					
ANR	5096609	Identifier	c		5096082	0					
ANR	5096610	Identifier	edx		5096082	1					
ANR	5096611	ArrayIndexing	signature [ 2 ]		5096082	1					
ANR	5096612	Identifier	signature		5096082	0					
ANR	5096613	PrimaryExpression	2		5096082	1					
ANR	5096614	ExpressionStatement	has_msr_async_pf_en = c -> eax & ( 1 << KVM_FEATURE_ASYNC_PF )	169:4:2596:2654	5096082	22	True				
ANR	5096615	AssignmentExpression	has_msr_async_pf_en = c -> eax & ( 1 << KVM_FEATURE_ASYNC_PF )		5096082	0		=			
ANR	5096616	Identifier	has_msr_async_pf_en		5096082	0					
ANR	5096617	BitAndExpression	c -> eax & ( 1 << KVM_FEATURE_ASYNC_PF )		5096082	1		&			
ANR	5096618	PtrMemberAccess	c -> eax		5096082	0					
ANR	5096619	Identifier	c		5096082	0					
ANR	5096620	Identifier	eax		5096082	1					
ANR	5096621	ShiftExpression	1 << KVM_FEATURE_ASYNC_PF		5096082	1		<<			
ANR	5096622	PrimaryExpression	1		5096082	0					
ANR	5096623	Identifier	KVM_FEATURE_ASYNC_PF		5096082	1					
ANR	5096624	ExpressionStatement	has_msr_pv_eoi_en = c -> eax & ( 1 << KVM_FEATURE_PV_EOI )	173:4:2663:2717	5096082	23	True				
ANR	5096625	AssignmentExpression	has_msr_pv_eoi_en = c -> eax & ( 1 << KVM_FEATURE_PV_EOI )		5096082	0		=			
ANR	5096626	Identifier	has_msr_pv_eoi_en		5096082	0					
ANR	5096627	BitAndExpression	c -> eax & ( 1 << KVM_FEATURE_PV_EOI )		5096082	1		&			
ANR	5096628	PtrMemberAccess	c -> eax		5096082	0					
ANR	5096629	Identifier	c		5096082	0					
ANR	5096630	Identifier	eax		5096082	1					
ANR	5096631	ShiftExpression	1 << KVM_FEATURE_PV_EOI		5096082	1		<<			
ANR	5096632	PrimaryExpression	1		5096082	0					
ANR	5096633	Identifier	KVM_FEATURE_PV_EOI		5096082	1					
ANR	5096634	ExpressionStatement	has_msr_kvm_steal_time = c -> eax & ( 1 << KVM_FEATURE_STEAL_TIME )	177:4:2726:2789	5096082	24	True				
ANR	5096635	AssignmentExpression	has_msr_kvm_steal_time = c -> eax & ( 1 << KVM_FEATURE_STEAL_TIME )		5096082	0		=			
ANR	5096636	Identifier	has_msr_kvm_steal_time		5096082	0					
ANR	5096637	BitAndExpression	c -> eax & ( 1 << KVM_FEATURE_STEAL_TIME )		5096082	1		&			
ANR	5096638	PtrMemberAccess	c -> eax		5096082	0					
ANR	5096639	Identifier	c		5096082	0					
ANR	5096640	Identifier	eax		5096082	1					
ANR	5096641	ShiftExpression	1 << KVM_FEATURE_STEAL_TIME		5096082	1		<<			
ANR	5096642	PrimaryExpression	1		5096082	0					
ANR	5096643	Identifier	KVM_FEATURE_STEAL_TIME		5096082	1					
ANR	5096644	ExpressionStatement	"cpu_x86_cpuid ( env , 0 , 0 , & limit , & unused , & unused , & unused )"	181:4:2798:2857	5096082	25	True				
ANR	5096645	CallExpression	"cpu_x86_cpuid ( env , 0 , 0 , & limit , & unused , & unused , & unused )"		5096082	0					
ANR	5096646	Callee	cpu_x86_cpuid		5096082	0					
ANR	5096647	Identifier	cpu_x86_cpuid		5096082	0					
ANR	5096648	ArgumentList	env		5096082	1					
ANR	5096649	Argument	env		5096082	0					
ANR	5096650	Identifier	env		5096082	0					
ANR	5096651	Argument	0		5096082	1					
ANR	5096652	PrimaryExpression	0		5096082	0					
ANR	5096653	Argument	0		5096082	2					
ANR	5096654	PrimaryExpression	0		5096082	0					
ANR	5096655	Argument	& limit		5096082	3					
ANR	5096656	UnaryOperationExpression	& limit		5096082	0					
ANR	5096657	UnaryOperator	&		5096082	0					
ANR	5096658	Identifier	limit		5096082	1					
ANR	5096659	Argument	& unused		5096082	4					
ANR	5096660	UnaryOperationExpression	& unused		5096082	0					
ANR	5096661	UnaryOperator	&		5096082	0					
ANR	5096662	Identifier	unused		5096082	1					
ANR	5096663	Argument	& unused		5096082	5					
ANR	5096664	UnaryOperationExpression	& unused		5096082	0					
ANR	5096665	UnaryOperator	&		5096082	0					
ANR	5096666	Identifier	unused		5096082	1					
ANR	5096667	Argument	& unused		5096082	6					
ANR	5096668	UnaryOperationExpression	& unused		5096082	0					
ANR	5096669	UnaryOperator	&		5096082	0					
ANR	5096670	Identifier	unused		5096082	1					
ANR	5096671	ForStatement	for ( i = 0 ; i <= limit ; i ++ )		5096082	26					
ANR	5096672	ForInit	i = 0 ;	185:9:2871:2876	5096082	0	True				
ANR	5096673	AssignmentExpression	i = 0		5096082	0		=			
ANR	5096674	Identifier	i		5096082	0					
ANR	5096675	PrimaryExpression	0		5096082	1					
ANR	5096676	Condition	i <= limit	185:16:2878:2887	5096082	1	True				
ANR	5096677	RelationalExpression	i <= limit		5096082	0		<=			
ANR	5096678	Identifier	i		5096082	0					
ANR	5096679	Identifier	limit		5096082	1					
ANR	5096680	PostIncDecOperationExpression	i ++	185:28:2890:2892	5096082	2	True				
ANR	5096681	Identifier	i		5096082	0					
ANR	5096682	IncDec	++		5096082	1					
ANR	5096683	CompoundStatement		183:33:2856:2856	5096082	3					
ANR	5096684	IfStatement	if ( cpuid_i == KVM_MAX_CPUID_ENTRIES )		5096082	0					
ANR	5096685	Condition	cpuid_i == KVM_MAX_CPUID_ENTRIES	187:12:2910:2941	5096082	0	True				
ANR	5096686	EqualityExpression	cpuid_i == KVM_MAX_CPUID_ENTRIES		5096082	0		==			
ANR	5096687	Identifier	cpuid_i		5096082	0					
ANR	5096688	Identifier	KVM_MAX_CPUID_ENTRIES		5096082	1					
ANR	5096689	CompoundStatement		185:46:2905:2905	5096082	1					
ANR	5096690	ExpressionStatement	"fprintf ( stderr , ""unsupported level value: 0x%x\\n"" , limit )"	189:12:2959:3016	5096082	0	True				
ANR	5096691	CallExpression	"fprintf ( stderr , ""unsupported level value: 0x%x\\n"" , limit )"		5096082	0					
ANR	5096692	Callee	fprintf		5096082	0					
ANR	5096693	Identifier	fprintf		5096082	0					
ANR	5096694	ArgumentList	stderr		5096082	1					
ANR	5096695	Argument	stderr		5096082	0					
ANR	5096696	Identifier	stderr		5096082	0					
ANR	5096697	Argument	"""unsupported level value: 0x%x\\n"""		5096082	1					
ANR	5096698	PrimaryExpression	"""unsupported level value: 0x%x\\n"""		5096082	0					
ANR	5096699	Argument	limit		5096082	2					
ANR	5096700	Identifier	limit		5096082	0					
ANR	5096701	ExpressionStatement	abort ( )	191:12:3031:3038	5096082	1	True				
ANR	5096702	CallExpression	abort ( )		5096082	0					
ANR	5096703	Callee	abort		5096082	0					
ANR	5096704	Identifier	abort		5096082	0					
ANR	5096705	ArgumentList			5096082	1					
ANR	5096706	ExpressionStatement	c = & cpuid_data . entries [ cpuid_i ++ ]	195:8:3060:3094	5096082	1	True				
ANR	5096707	AssignmentExpression	c = & cpuid_data . entries [ cpuid_i ++ ]		5096082	0		=			
ANR	5096708	Identifier	c		5096082	0					
ANR	5096709	UnaryOperationExpression	& cpuid_data . entries [ cpuid_i ++ ]		5096082	1					
ANR	5096710	UnaryOperator	&		5096082	0					
ANR	5096711	ArrayIndexing	cpuid_data . entries [ cpuid_i ++ ]		5096082	1					
ANR	5096712	MemberAccess	cpuid_data . entries		5096082	0					
ANR	5096713	Identifier	cpuid_data		5096082	0					
ANR	5096714	Identifier	entries		5096082	1					
ANR	5096715	PostIncDecOperationExpression	cpuid_i ++		5096082	1					
ANR	5096716	Identifier	cpuid_i		5096082	0					
ANR	5096717	IncDec	++		5096082	1					
ANR	5096718	SwitchStatement	switch ( i )		5096082	2					
ANR	5096719	Condition	i	199:16:3115:3115	5096082	0	True				
ANR	5096720	Identifier	i		5096082	0					
ANR	5096721	CompoundStatement		197:19:3079:3079	5096082	1					
ANR	5096722	Label	case 2 :	201:8:3129:3135	5096082	0	True				
ANR	5096723	CompoundStatement		203:12:3187:3196	5096082	1					
ANR	5096724	IdentifierDeclStatement	int times ;	205:12:3226:3235	5096082	0	True				
ANR	5096725	IdentifierDecl	times		5096082	0					
ANR	5096726	IdentifierDeclType	int		5096082	0					
ANR	5096727	Identifier	times		5096082	1					
ANR	5096728	ExpressionStatement	c -> function = i	209:12:3252:3267	5096082	1	True				
ANR	5096729	AssignmentExpression	c -> function = i		5096082	0		=			
ANR	5096730	PtrMemberAccess	c -> function		5096082	0					
ANR	5096731	Identifier	c		5096082	0					
ANR	5096732	Identifier	function		5096082	1					
ANR	5096733	Identifier	i		5096082	1					
ANR	5096734	ExpressionStatement	c -> flags = KVM_CPUID_FLAG_STATEFUL_FUNC | KVM_CPUID_FLAG_STATE_READ_NEXT	211:12:3282:3378	5096082	2	True				
ANR	5096735	AssignmentExpression	c -> flags = KVM_CPUID_FLAG_STATEFUL_FUNC | KVM_CPUID_FLAG_STATE_READ_NEXT		5096082	0		=			
ANR	5096736	PtrMemberAccess	c -> flags		5096082	0					
ANR	5096737	Identifier	c		5096082	0					
ANR	5096738	Identifier	flags		5096082	1					
ANR	5096739	InclusiveOrExpression	KVM_CPUID_FLAG_STATEFUL_FUNC | KVM_CPUID_FLAG_STATE_READ_NEXT		5096082	1		|			
ANR	5096740	Identifier	KVM_CPUID_FLAG_STATEFUL_FUNC		5096082	0					
ANR	5096741	Identifier	KVM_CPUID_FLAG_STATE_READ_NEXT		5096082	1					
ANR	5096742	ExpressionStatement	"cpu_x86_cpuid ( env , i , 0 , & c -> eax , & c -> ebx , & c -> ecx , & c -> edx )"	215:12:3393:3453	5096082	3	True				
ANR	5096743	CallExpression	"cpu_x86_cpuid ( env , i , 0 , & c -> eax , & c -> ebx , & c -> ecx , & c -> edx )"		5096082	0					
ANR	5096744	Callee	cpu_x86_cpuid		5096082	0					
ANR	5096745	Identifier	cpu_x86_cpuid		5096082	0					
ANR	5096746	ArgumentList	env		5096082	1					
ANR	5096747	Argument	env		5096082	0					
ANR	5096748	Identifier	env		5096082	0					
ANR	5096749	Argument	i		5096082	1					
ANR	5096750	Identifier	i		5096082	0					
ANR	5096751	Argument	0		5096082	2					
ANR	5096752	PrimaryExpression	0		5096082	0					
ANR	5096753	Argument	& c -> eax		5096082	3					
ANR	5096754	UnaryOperationExpression	& c -> eax		5096082	0					
ANR	5096755	UnaryOperator	&		5096082	0					
ANR	5096756	PtrMemberAccess	c -> eax		5096082	1					
ANR	5096757	Identifier	c		5096082	0					
ANR	5096758	Identifier	eax		5096082	1					
ANR	5096759	Argument	& c -> ebx		5096082	4					
ANR	5096760	UnaryOperationExpression	& c -> ebx		5096082	0					
ANR	5096761	UnaryOperator	&		5096082	0					
ANR	5096762	PtrMemberAccess	c -> ebx		5096082	1					
ANR	5096763	Identifier	c		5096082	0					
ANR	5096764	Identifier	ebx		5096082	1					
ANR	5096765	Argument	& c -> ecx		5096082	5					
ANR	5096766	UnaryOperationExpression	& c -> ecx		5096082	0					
ANR	5096767	UnaryOperator	&		5096082	0					
ANR	5096768	PtrMemberAccess	c -> ecx		5096082	1					
ANR	5096769	Identifier	c		5096082	0					
ANR	5096770	Identifier	ecx		5096082	1					
ANR	5096771	Argument	& c -> edx		5096082	6					
ANR	5096772	UnaryOperationExpression	& c -> edx		5096082	0					
ANR	5096773	UnaryOperator	&		5096082	0					
ANR	5096774	PtrMemberAccess	c -> edx		5096082	1					
ANR	5096775	Identifier	c		5096082	0					
ANR	5096776	Identifier	edx		5096082	1					
ANR	5096777	ExpressionStatement	times = c -> eax & 0xff	217:12:3468:3489	5096082	4	True				
ANR	5096778	AssignmentExpression	times = c -> eax & 0xff		5096082	0		=			
ANR	5096779	Identifier	times		5096082	0					
ANR	5096780	BitAndExpression	c -> eax & 0xff		5096082	1		&			
ANR	5096781	PtrMemberAccess	c -> eax		5096082	0					
ANR	5096782	Identifier	c		5096082	0					
ANR	5096783	Identifier	eax		5096082	1					
ANR	5096784	PrimaryExpression	0xff		5096082	1					
ANR	5096785	ForStatement	for ( j = 1 ; j < times ; ++ j )		5096082	5					
ANR	5096786	ForInit	j = 1 ;	221:17:3511:3516	5096082	0	True				
ANR	5096787	AssignmentExpression	j = 1		5096082	0		=			
ANR	5096788	Identifier	j		5096082	0					
ANR	5096789	PrimaryExpression	1		5096082	1					
ANR	5096790	Condition	j < times	221:24:3518:3526	5096082	1	True				
ANR	5096791	RelationalExpression	j < times		5096082	0		<			
ANR	5096792	Identifier	j		5096082	0					
ANR	5096793	Identifier	times		5096082	1					
ANR	5096794	UnaryExpression	++ j	221:35:3529:3531	5096082	2	True				
ANR	5096795	IncDec	++		5096082	0					
ANR	5096796	Identifier	j		5096082	1					
ANR	5096797	CompoundStatement		219:40:3495:3495	5096082	3					
ANR	5096798	IfStatement	if ( cpuid_i == KVM_MAX_CPUID_ENTRIES )		5096082	0					
ANR	5096799	Condition	cpuid_i == KVM_MAX_CPUID_ENTRIES	223:20:3557:3588	5096082	0	True				
ANR	5096800	EqualityExpression	cpuid_i == KVM_MAX_CPUID_ENTRIES		5096082	0		==			
ANR	5096801	Identifier	cpuid_i		5096082	0					
ANR	5096802	Identifier	KVM_MAX_CPUID_ENTRIES		5096082	1					
ANR	5096803	CompoundStatement		221:54:3552:3552	5096082	1					
ANR	5096804	Statement	fprintf	225:20:3614:3620	5096082	0	True				
ANR	5096805	Statement	(	225:27:3621:3621	5096082	1	True				
ANR	5096806	Statement	stderr	225:28:3622:3627	5096082	2	True				
ANR	5096807	Statement	","	225:34:3628:3628	5096082	3	True				
ANR	5096808	Statement	"""cpuid_data is full, no space for """	225:36:3630:3664	5096082	4	True				
ANR	5096809	Statement	"""cpuid(eax:2):eax & 0xf = 0x%x\\n"""	227:28:3695:3727	5096082	5	True				
ANR	5096810	Statement	","	227:61:3728:3728	5096082	6	True				
ANR	5096811	Statement	times	227:63:3730:3734	5096082	7	True				
ANR	5096812	Statement	)	227:68:3735:3735	5096082	8	True				
ANR	5096813	ExpressionStatement		227:69:3736:3736	5096082	9	True				
ANR	5096814	ExpressionStatement	abort ( )	229:20:3759:3766	5096082	10	True				
ANR	5096815	CallExpression	abort ( )		5096082	0					
ANR	5096816	Callee	abort		5096082	0					
ANR	5096817	Identifier	abort		5096082	0					
ANR	5096818	ArgumentList			5096082	1					
ANR	5096819	ExpressionStatement	c = & cpuid_data . entries [ cpuid_i ++ ]	233:16:3804:3838	5096082	1	True				
ANR	5096820	AssignmentExpression	c = & cpuid_data . entries [ cpuid_i ++ ]		5096082	0		=			
ANR	5096821	Identifier	c		5096082	0					
ANR	5096822	UnaryOperationExpression	& cpuid_data . entries [ cpuid_i ++ ]		5096082	1					
ANR	5096823	UnaryOperator	&		5096082	0					
ANR	5096824	ArrayIndexing	cpuid_data . entries [ cpuid_i ++ ]		5096082	1					
ANR	5096825	MemberAccess	cpuid_data . entries		5096082	0					
ANR	5096826	Identifier	cpuid_data		5096082	0					
ANR	5096827	Identifier	entries		5096082	1					
ANR	5096828	PostIncDecOperationExpression	cpuid_i ++		5096082	1					
ANR	5096829	Identifier	cpuid_i		5096082	0					
ANR	5096830	IncDec	++		5096082	1					
ANR	5096831	ExpressionStatement	c -> function = i	235:16:3857:3872	5096082	2	True				
ANR	5096832	AssignmentExpression	c -> function = i		5096082	0		=			
ANR	5096833	PtrMemberAccess	c -> function		5096082	0					
ANR	5096834	Identifier	c		5096082	0					
ANR	5096835	Identifier	function		5096082	1					
ANR	5096836	Identifier	i		5096082	1					
ANR	5096837	ExpressionStatement	c -> flags = KVM_CPUID_FLAG_STATEFUL_FUNC	237:16:3891:3930	5096082	3	True				
ANR	5096838	AssignmentExpression	c -> flags = KVM_CPUID_FLAG_STATEFUL_FUNC		5096082	0		=			
ANR	5096839	PtrMemberAccess	c -> flags		5096082	0					
ANR	5096840	Identifier	c		5096082	0					
ANR	5096841	Identifier	flags		5096082	1					
ANR	5096842	Identifier	KVM_CPUID_FLAG_STATEFUL_FUNC		5096082	1					
ANR	5096843	ExpressionStatement	"cpu_x86_cpuid ( env , i , 0 , & c -> eax , & c -> ebx , & c -> ecx , & c -> edx )"	239:16:3949:4009	5096082	4	True				
ANR	5096844	CallExpression	"cpu_x86_cpuid ( env , i , 0 , & c -> eax , & c -> ebx , & c -> ecx , & c -> edx )"		5096082	0					
ANR	5096845	Callee	cpu_x86_cpuid		5096082	0					
ANR	5096846	Identifier	cpu_x86_cpuid		5096082	0					
ANR	5096847	ArgumentList	env		5096082	1					
ANR	5096848	Argument	env		5096082	0					
ANR	5096849	Identifier	env		5096082	0					
ANR	5096850	Argument	i		5096082	1					
ANR	5096851	Identifier	i		5096082	0					
ANR	5096852	Argument	0		5096082	2					
ANR	5096853	PrimaryExpression	0		5096082	0					
ANR	5096854	Argument	& c -> eax		5096082	3					
ANR	5096855	UnaryOperationExpression	& c -> eax		5096082	0					
ANR	5096856	UnaryOperator	&		5096082	0					
ANR	5096857	PtrMemberAccess	c -> eax		5096082	1					
ANR	5096858	Identifier	c		5096082	0					
ANR	5096859	Identifier	eax		5096082	1					
ANR	5096860	Argument	& c -> ebx		5096082	4					
ANR	5096861	UnaryOperationExpression	& c -> ebx		5096082	0					
ANR	5096862	UnaryOperator	&		5096082	0					
ANR	5096863	PtrMemberAccess	c -> ebx		5096082	1					
ANR	5096864	Identifier	c		5096082	0					
ANR	5096865	Identifier	ebx		5096082	1					
ANR	5096866	Argument	& c -> ecx		5096082	5					
ANR	5096867	UnaryOperationExpression	& c -> ecx		5096082	0					
ANR	5096868	UnaryOperator	&		5096082	0					
ANR	5096869	PtrMemberAccess	c -> ecx		5096082	1					
ANR	5096870	Identifier	c		5096082	0					
ANR	5096871	Identifier	ecx		5096082	1					
ANR	5096872	Argument	& c -> edx		5096082	6					
ANR	5096873	UnaryOperationExpression	& c -> edx		5096082	0					
ANR	5096874	UnaryOperator	&		5096082	0					
ANR	5096875	PtrMemberAccess	c -> edx		5096082	1					
ANR	5096876	Identifier	c		5096082	0					
ANR	5096877	Identifier	edx		5096082	1					
ANR	5096878	BreakStatement	break ;	243:12:4039:4044	5096082	6	True				
ANR	5096879	Label	case 4 :	247:8:4066:4072	5096082	2	True				
ANR	5096880	Label	case 0xb :	249:8:4083:4091	5096082	3	True				
ANR	5096881	Label	case 0xd :	251:8:4102:4110	5096082	4	True				
ANR	5096882	ForStatement	for ( j = 0 ; ; j ++ )		5096082	5					
ANR	5096883	ForInit	j = 0 ;	253:17:4130:4135	5096082	0	True				
ANR	5096884	AssignmentExpression	j = 0		5096082	0		=			
ANR	5096885	Identifier	j		5096082	0					
ANR	5096886	PrimaryExpression	0		5096082	1					
ANR	5096887	PostIncDecOperationExpression	j ++	253:26:4139:4141	5096082	1	True				
ANR	5096888	Identifier	j		5096082	0					
ANR	5096889	IncDec	++		5096082	1					
ANR	5096890	CompoundStatement		251:31:4105:4105	5096082	2					
ANR	5096891	IfStatement	if ( i == 0xd && j == 64 )		5096082	0					
ANR	5096892	Condition	i == 0xd && j == 64	255:20:4167:4185	5096082	0	True				
ANR	5096893	AndExpression	i == 0xd && j == 64		5096082	0		&&			
ANR	5096894	EqualityExpression	i == 0xd		5096082	0		==			
ANR	5096895	Identifier	i		5096082	0					
ANR	5096896	PrimaryExpression	0xd		5096082	1					
ANR	5096897	EqualityExpression	j == 64		5096082	1		==			
ANR	5096898	Identifier	j		5096082	0					
ANR	5096899	PrimaryExpression	64		5096082	1					
ANR	5096900	CompoundStatement		253:41:4149:4149	5096082	1					
ANR	5096901	BreakStatement	break ;	257:20:4211:4216	5096082	0	True				
ANR	5096902	ExpressionStatement	c -> function = i	261:16:4254:4269	5096082	1	True				
ANR	5096903	AssignmentExpression	c -> function = i		5096082	0		=			
ANR	5096904	PtrMemberAccess	c -> function		5096082	0					
ANR	5096905	Identifier	c		5096082	0					
ANR	5096906	Identifier	function		5096082	1					
ANR	5096907	Identifier	i		5096082	1					
ANR	5096908	ExpressionStatement	c -> flags = KVM_CPUID_FLAG_SIGNIFCANT_INDEX	263:16:4288:4330	5096082	2	True				
ANR	5096909	AssignmentExpression	c -> flags = KVM_CPUID_FLAG_SIGNIFCANT_INDEX		5096082	0		=			
ANR	5096910	PtrMemberAccess	c -> flags		5096082	0					
ANR	5096911	Identifier	c		5096082	0					
ANR	5096912	Identifier	flags		5096082	1					
ANR	5096913	Identifier	KVM_CPUID_FLAG_SIGNIFCANT_INDEX		5096082	1					
ANR	5096914	ExpressionStatement	c -> index = j	265:16:4349:4361	5096082	3	True				
ANR	5096915	AssignmentExpression	c -> index = j		5096082	0		=			
ANR	5096916	PtrMemberAccess	c -> index		5096082	0					
ANR	5096917	Identifier	c		5096082	0					
ANR	5096918	Identifier	index		5096082	1					
ANR	5096919	Identifier	j		5096082	1					
ANR	5096920	ExpressionStatement	"cpu_x86_cpuid ( env , i , j , & c -> eax , & c -> ebx , & c -> ecx , & c -> edx )"	267:16:4380:4440	5096082	4	True				
ANR	5096921	CallExpression	"cpu_x86_cpuid ( env , i , j , & c -> eax , & c -> ebx , & c -> ecx , & c -> edx )"		5096082	0					
ANR	5096922	Callee	cpu_x86_cpuid		5096082	0					
ANR	5096923	Identifier	cpu_x86_cpuid		5096082	0					
ANR	5096924	ArgumentList	env		5096082	1					
ANR	5096925	Argument	env		5096082	0					
ANR	5096926	Identifier	env		5096082	0					
ANR	5096927	Argument	i		5096082	1					
ANR	5096928	Identifier	i		5096082	0					
ANR	5096929	Argument	j		5096082	2					
ANR	5096930	Identifier	j		5096082	0					
ANR	5096931	Argument	& c -> eax		5096082	3					
ANR	5096932	UnaryOperationExpression	& c -> eax		5096082	0					
ANR	5096933	UnaryOperator	&		5096082	0					
ANR	5096934	PtrMemberAccess	c -> eax		5096082	1					
ANR	5096935	Identifier	c		5096082	0					
ANR	5096936	Identifier	eax		5096082	1					
ANR	5096937	Argument	& c -> ebx		5096082	4					
ANR	5096938	UnaryOperationExpression	& c -> ebx		5096082	0					
ANR	5096939	UnaryOperator	&		5096082	0					
ANR	5096940	PtrMemberAccess	c -> ebx		5096082	1					
ANR	5096941	Identifier	c		5096082	0					
ANR	5096942	Identifier	ebx		5096082	1					
ANR	5096943	Argument	& c -> ecx		5096082	5					
ANR	5096944	UnaryOperationExpression	& c -> ecx		5096082	0					
ANR	5096945	UnaryOperator	&		5096082	0					
ANR	5096946	PtrMemberAccess	c -> ecx		5096082	1					
ANR	5096947	Identifier	c		5096082	0					
ANR	5096948	Identifier	ecx		5096082	1					
ANR	5096949	Argument	& c -> edx		5096082	6					
ANR	5096950	UnaryOperationExpression	& c -> edx		5096082	0					
ANR	5096951	UnaryOperator	&		5096082	0					
ANR	5096952	PtrMemberAccess	c -> edx		5096082	1					
ANR	5096953	Identifier	c		5096082	0					
ANR	5096954	Identifier	edx		5096082	1					
ANR	5096955	IfStatement	if ( i == 4 && c -> eax == 0 )		5096082	5					
ANR	5096956	Condition	i == 4 && c -> eax == 0	271:20:4465:4485	5096082	0	True				
ANR	5096957	AndExpression	i == 4 && c -> eax == 0		5096082	0		&&			
ANR	5096958	EqualityExpression	i == 4		5096082	0		==			
ANR	5096959	Identifier	i		5096082	0					
ANR	5096960	PrimaryExpression	4		5096082	1					
ANR	5096961	EqualityExpression	c -> eax == 0		5096082	1		==			
ANR	5096962	PtrMemberAccess	c -> eax		5096082	0					
ANR	5096963	Identifier	c		5096082	0					
ANR	5096964	Identifier	eax		5096082	1					
ANR	5096965	PrimaryExpression	0		5096082	1					
ANR	5096966	CompoundStatement		269:43:4449:4449	5096082	1					
ANR	5096967	BreakStatement	break ;	273:20:4511:4516	5096082	0	True				
ANR	5096968	IfStatement	if ( i == 0xb && ! ( c -> ecx & 0xff00 ) )		5096082	6					
ANR	5096969	Condition	i == 0xb && ! ( c -> ecx & 0xff00 )	277:20:4558:4587	5096082	0	True				
ANR	5096970	AndExpression	i == 0xb && ! ( c -> ecx & 0xff00 )		5096082	0		&&			
ANR	5096971	EqualityExpression	i == 0xb		5096082	0		==			
ANR	5096972	Identifier	i		5096082	0					
ANR	5096973	PrimaryExpression	0xb		5096082	1					
ANR	5096974	UnaryOperationExpression	! ( c -> ecx & 0xff00 )		5096082	1					
ANR	5096975	UnaryOperator	!		5096082	0					
ANR	5096976	BitAndExpression	c -> ecx & 0xff00		5096082	1		&			
ANR	5096977	PtrMemberAccess	c -> ecx		5096082	0					
ANR	5096978	Identifier	c		5096082	0					
ANR	5096979	Identifier	ecx		5096082	1					
ANR	5096980	PrimaryExpression	0xff00		5096082	1					
ANR	5096981	CompoundStatement		275:52:4551:4551	5096082	1					
ANR	5096982	BreakStatement	break ;	279:20:4613:4618	5096082	0	True				
ANR	5096983	IfStatement	if ( i == 0xd && c -> eax == 0 )		5096082	7					
ANR	5096984	Condition	i == 0xd && c -> eax == 0	283:20:4660:4682	5096082	0	True				
ANR	5096985	AndExpression	i == 0xd && c -> eax == 0		5096082	0		&&			
ANR	5096986	EqualityExpression	i == 0xd		5096082	0		==			
ANR	5096987	Identifier	i		5096082	0					
ANR	5096988	PrimaryExpression	0xd		5096082	1					
ANR	5096989	EqualityExpression	c -> eax == 0		5096082	1		==			
ANR	5096990	PtrMemberAccess	c -> eax		5096082	0					
ANR	5096991	Identifier	c		5096082	0					
ANR	5096992	Identifier	eax		5096082	1					
ANR	5096993	PrimaryExpression	0		5096082	1					
ANR	5096994	CompoundStatement		281:45:4646:4646	5096082	1					
ANR	5096995	ContinueStatement	continue ;	285:20:4708:4716	5096082	0	True				
ANR	5096996	IfStatement	if ( cpuid_i == KVM_MAX_CPUID_ENTRIES )		5096082	8					
ANR	5096997	Condition	cpuid_i == KVM_MAX_CPUID_ENTRIES	289:20:4758:4789	5096082	0	True				
ANR	5096998	EqualityExpression	cpuid_i == KVM_MAX_CPUID_ENTRIES		5096082	0		==			
ANR	5096999	Identifier	cpuid_i		5096082	0					
ANR	5097000	Identifier	KVM_MAX_CPUID_ENTRIES		5096082	1					
ANR	5097001	CompoundStatement		287:54:4753:4753	5096082	1					
ANR	5097002	Statement	fprintf	291:20:4815:4821	5096082	0	True				
ANR	5097003	Statement	(	291:27:4822:4822	5096082	1	True				
ANR	5097004	Statement	stderr	291:28:4823:4828	5096082	2	True				
ANR	5097005	Statement	","	291:34:4829:4829	5096082	3	True				
ANR	5097006	Statement	"""cpuid_data is full, no space for """	291:36:4831:4865	5096082	4	True				
ANR	5097007	Statement	"""cpuid(eax:0x%x,ecx:0x%x)\\n"""	293:28:4896:4923	5096082	5	True				
ANR	5097008	Statement	","	293:56:4924:4924	5096082	6	True				
ANR	5097009	Statement	i	293:58:4926:4926	5096082	7	True				
ANR	5097010	Statement	","	293:59:4927:4927	5096082	8	True				
ANR	5097011	Statement	j	293:61:4929:4929	5096082	9	True				
ANR	5097012	Statement	)	293:62:4930:4930	5096082	10	True				
ANR	5097013	ExpressionStatement		293:63:4931:4931	5096082	11	True				
ANR	5097014	ExpressionStatement	abort ( )	295:20:4954:4961	5096082	12	True				
ANR	5097015	CallExpression	abort ( )		5096082	0					
ANR	5097016	Callee	abort		5096082	0					
ANR	5097017	Identifier	abort		5096082	0					
ANR	5097018	ArgumentList			5096082	1					
ANR	5097019	ExpressionStatement	c = & cpuid_data . entries [ cpuid_i ++ ]	299:16:4999:5033	5096082	9	True				
ANR	5097020	AssignmentExpression	c = & cpuid_data . entries [ cpuid_i ++ ]		5096082	0		=			
ANR	5097021	Identifier	c		5096082	0					
ANR	5097022	UnaryOperationExpression	& cpuid_data . entries [ cpuid_i ++ ]		5096082	1					
ANR	5097023	UnaryOperator	&		5096082	0					
ANR	5097024	ArrayIndexing	cpuid_data . entries [ cpuid_i ++ ]		5096082	1					
ANR	5097025	MemberAccess	cpuid_data . entries		5096082	0					
ANR	5097026	Identifier	cpuid_data		5096082	0					
ANR	5097027	Identifier	entries		5096082	1					
ANR	5097028	PostIncDecOperationExpression	cpuid_i ++		5096082	1					
ANR	5097029	Identifier	cpuid_i		5096082	0					
ANR	5097030	IncDec	++		5096082	1					
ANR	5097031	BreakStatement	break ;	303:12:5063:5068	5096082	6	True				
ANR	5097032	Label	default :	305:8:5079:5086	5096082	7	True				
ANR	5097033	Identifier	default		5096082	0					
ANR	5097034	ExpressionStatement	c -> function = i	307:12:5101:5116	5096082	8	True				
ANR	5097035	AssignmentExpression	c -> function = i		5096082	0		=			
ANR	5097036	PtrMemberAccess	c -> function		5096082	0					
ANR	5097037	Identifier	c		5096082	0					
ANR	5097038	Identifier	function		5096082	1					
ANR	5097039	Identifier	i		5096082	1					
ANR	5097040	ExpressionStatement	c -> flags = 0	309:12:5131:5143	5096082	9	True				
ANR	5097041	AssignmentExpression	c -> flags = 0		5096082	0		=			
ANR	5097042	PtrMemberAccess	c -> flags		5096082	0					
ANR	5097043	Identifier	c		5096082	0					
ANR	5097044	Identifier	flags		5096082	1					
ANR	5097045	PrimaryExpression	0		5096082	1					
ANR	5097046	ExpressionStatement	"cpu_x86_cpuid ( env , i , 0 , & c -> eax , & c -> ebx , & c -> ecx , & c -> edx )"	311:12:5158:5218	5096082	10	True				
ANR	5097047	CallExpression	"cpu_x86_cpuid ( env , i , 0 , & c -> eax , & c -> ebx , & c -> ecx , & c -> edx )"		5096082	0					
ANR	5097048	Callee	cpu_x86_cpuid		5096082	0					
ANR	5097049	Identifier	cpu_x86_cpuid		5096082	0					
ANR	5097050	ArgumentList	env		5096082	1					
ANR	5097051	Argument	env		5096082	0					
ANR	5097052	Identifier	env		5096082	0					
ANR	5097053	Argument	i		5096082	1					
ANR	5097054	Identifier	i		5096082	0					
ANR	5097055	Argument	0		5096082	2					
ANR	5097056	PrimaryExpression	0		5096082	0					
ANR	5097057	Argument	& c -> eax		5096082	3					
ANR	5097058	UnaryOperationExpression	& c -> eax		5096082	0					
ANR	5097059	UnaryOperator	&		5096082	0					
ANR	5097060	PtrMemberAccess	c -> eax		5096082	1					
ANR	5097061	Identifier	c		5096082	0					
ANR	5097062	Identifier	eax		5096082	1					
ANR	5097063	Argument	& c -> ebx		5096082	4					
ANR	5097064	UnaryOperationExpression	& c -> ebx		5096082	0					
ANR	5097065	UnaryOperator	&		5096082	0					
ANR	5097066	PtrMemberAccess	c -> ebx		5096082	1					
ANR	5097067	Identifier	c		5096082	0					
ANR	5097068	Identifier	ebx		5096082	1					
ANR	5097069	Argument	& c -> ecx		5096082	5					
ANR	5097070	UnaryOperationExpression	& c -> ecx		5096082	0					
ANR	5097071	UnaryOperator	&		5096082	0					
ANR	5097072	PtrMemberAccess	c -> ecx		5096082	1					
ANR	5097073	Identifier	c		5096082	0					
ANR	5097074	Identifier	ecx		5096082	1					
ANR	5097075	Argument	& c -> edx		5096082	6					
ANR	5097076	UnaryOperationExpression	& c -> edx		5096082	0					
ANR	5097077	UnaryOperator	&		5096082	0					
ANR	5097078	PtrMemberAccess	c -> edx		5096082	1					
ANR	5097079	Identifier	c		5096082	0					
ANR	5097080	Identifier	edx		5096082	1					
ANR	5097081	BreakStatement	break ;	313:12:5233:5238	5096082	11	True				
ANR	5097082	IfStatement	if ( limit >= 0x0a )		5096082	27					
ANR	5097083	Condition	limit >= 0x0a	321:8:5269:5281	5096082	0	True				
ANR	5097084	RelationalExpression	limit >= 0x0a		5096082	0		>=			
ANR	5097085	Identifier	limit		5096082	0					
ANR	5097086	PrimaryExpression	0x0a		5096082	1					
ANR	5097087	CompoundStatement		321:8:5256:5268	5096082	1					
ANR	5097088	IdentifierDeclStatement	uint32_t ver ;	323:8:5295:5307	5096082	0	True				
ANR	5097089	IdentifierDecl	ver		5096082	0					
ANR	5097090	IdentifierDeclType	uint32_t		5096082	0					
ANR	5097091	Identifier	ver		5096082	1					
ANR	5097092	ExpressionStatement	"cpu_x86_cpuid ( env , 0x0a , 0 , & ver , & unused , & unused , & unused )"	327:8:5320:5380	5096082	1	True				
ANR	5097093	CallExpression	"cpu_x86_cpuid ( env , 0x0a , 0 , & ver , & unused , & unused , & unused )"		5096082	0					
ANR	5097094	Callee	cpu_x86_cpuid		5096082	0					
ANR	5097095	Identifier	cpu_x86_cpuid		5096082	0					
ANR	5097096	ArgumentList	env		5096082	1					
ANR	5097097	Argument	env		5096082	0					
ANR	5097098	Identifier	env		5096082	0					
ANR	5097099	Argument	0x0a		5096082	1					
ANR	5097100	PrimaryExpression	0x0a		5096082	0					
ANR	5097101	Argument	0		5096082	2					
ANR	5097102	PrimaryExpression	0		5096082	0					
ANR	5097103	Argument	& ver		5096082	3					
ANR	5097104	UnaryOperationExpression	& ver		5096082	0					
ANR	5097105	UnaryOperator	&		5096082	0					
ANR	5097106	Identifier	ver		5096082	1					
ANR	5097107	Argument	& unused		5096082	4					
ANR	5097108	UnaryOperationExpression	& unused		5096082	0					
ANR	5097109	UnaryOperator	&		5096082	0					
ANR	5097110	Identifier	unused		5096082	1					
ANR	5097111	Argument	& unused		5096082	5					
ANR	5097112	UnaryOperationExpression	& unused		5096082	0					
ANR	5097113	UnaryOperator	&		5096082	0					
ANR	5097114	Identifier	unused		5096082	1					
ANR	5097115	Argument	& unused		5096082	6					
ANR	5097116	UnaryOperationExpression	& unused		5096082	0					
ANR	5097117	UnaryOperator	&		5096082	0					
ANR	5097118	Identifier	unused		5096082	1					
ANR	5097119	IfStatement	if ( ( ver & 0xff ) > 0 )		5096082	2					
ANR	5097120	Condition	( ver & 0xff ) > 0	329:12:5395:5410	5096082	0	True				
ANR	5097121	RelationalExpression	( ver & 0xff ) > 0		5096082	0		>			
ANR	5097122	BitAndExpression	ver & 0xff		5096082	0		&			
ANR	5097123	Identifier	ver		5096082	0					
ANR	5097124	PrimaryExpression	0xff		5096082	1					
ANR	5097125	PrimaryExpression	0		5096082	1					
ANR	5097126	CompoundStatement		327:30:5374:5374	5096082	1					
ANR	5097127	ExpressionStatement	has_msr_architectural_pmu = true	331:12:5428:5460	5096082	0	True				
ANR	5097128	AssignmentExpression	has_msr_architectural_pmu = true		5096082	0		=			
ANR	5097129	Identifier	has_msr_architectural_pmu		5096082	0					
ANR	5097130	Identifier	true		5096082	1					
ANR	5097131	ExpressionStatement	num_architectural_pmu_counters = ( ver & 0xff00 ) >> 8	333:12:5475:5527	5096082	1	True				
ANR	5097132	AssignmentExpression	num_architectural_pmu_counters = ( ver & 0xff00 ) >> 8		5096082	0		=			
ANR	5097133	Identifier	num_architectural_pmu_counters		5096082	0					
ANR	5097134	ShiftExpression	( ver & 0xff00 ) >> 8		5096082	1		>>			
ANR	5097135	BitAndExpression	ver & 0xff00		5096082	0		&			
ANR	5097136	Identifier	ver		5096082	0					
ANR	5097137	PrimaryExpression	0xff00		5096082	1					
ANR	5097138	PrimaryExpression	8		5096082	1					
ANR	5097139	IfStatement	if ( num_architectural_pmu_counters > MAX_GP_COUNTERS )		5096082	2					
ANR	5097140	Condition	num_architectural_pmu_counters > MAX_GP_COUNTERS	345:16:5746:5793	5096082	0	True				
ANR	5097141	RelationalExpression	num_architectural_pmu_counters > MAX_GP_COUNTERS		5096082	0		>			
ANR	5097142	Identifier	num_architectural_pmu_counters		5096082	0					
ANR	5097143	Identifier	MAX_GP_COUNTERS		5096082	1					
ANR	5097144	CompoundStatement		343:66:5757:5757	5096082	1					
ANR	5097145	ExpressionStatement	num_architectural_pmu_counters = MAX_GP_COUNTERS	347:16:5815:5863	5096082	0	True				
ANR	5097146	AssignmentExpression	num_architectural_pmu_counters = MAX_GP_COUNTERS		5096082	0		=			
ANR	5097147	Identifier	num_architectural_pmu_counters		5096082	0					
ANR	5097148	Identifier	MAX_GP_COUNTERS		5096082	1					
ANR	5097149	ExpressionStatement	"cpu_x86_cpuid ( env , 0x80000000 , 0 , & limit , & unused , & unused , & unused )"	357:4:5905:5973	5096082	28	True				
ANR	5097150	CallExpression	"cpu_x86_cpuid ( env , 0x80000000 , 0 , & limit , & unused , & unused , & unused )"		5096082	0					
ANR	5097151	Callee	cpu_x86_cpuid		5096082	0					
ANR	5097152	Identifier	cpu_x86_cpuid		5096082	0					
ANR	5097153	ArgumentList	env		5096082	1					
ANR	5097154	Argument	env		5096082	0					
ANR	5097155	Identifier	env		5096082	0					
ANR	5097156	Argument	0x80000000		5096082	1					
ANR	5097157	PrimaryExpression	0x80000000		5096082	0					
ANR	5097158	Argument	0		5096082	2					
ANR	5097159	PrimaryExpression	0		5096082	0					
ANR	5097160	Argument	& limit		5096082	3					
ANR	5097161	UnaryOperationExpression	& limit		5096082	0					
ANR	5097162	UnaryOperator	&		5096082	0					
ANR	5097163	Identifier	limit		5096082	1					
ANR	5097164	Argument	& unused		5096082	4					
ANR	5097165	UnaryOperationExpression	& unused		5096082	0					
ANR	5097166	UnaryOperator	&		5096082	0					
ANR	5097167	Identifier	unused		5096082	1					
ANR	5097168	Argument	& unused		5096082	5					
ANR	5097169	UnaryOperationExpression	& unused		5096082	0					
ANR	5097170	UnaryOperator	&		5096082	0					
ANR	5097171	Identifier	unused		5096082	1					
ANR	5097172	Argument	& unused		5096082	6					
ANR	5097173	UnaryOperationExpression	& unused		5096082	0					
ANR	5097174	UnaryOperator	&		5096082	0					
ANR	5097175	Identifier	unused		5096082	1					
ANR	5097176	ForStatement	for ( i = 0x80000000 ; i <= limit ; i ++ )		5096082	29					
ANR	5097177	ForInit	i = 0x80000000 ;	361:9:5987:6001	5096082	0	True				
ANR	5097178	AssignmentExpression	i = 0x80000000		5096082	0		=			
ANR	5097179	Identifier	i		5096082	0					
ANR	5097180	PrimaryExpression	0x80000000		5096082	1					
ANR	5097181	Condition	i <= limit	361:25:6003:6012	5096082	1	True				
ANR	5097182	RelationalExpression	i <= limit		5096082	0		<=			
ANR	5097183	Identifier	i		5096082	0					
ANR	5097184	Identifier	limit		5096082	1					
ANR	5097185	PostIncDecOperationExpression	i ++	361:37:6015:6017	5096082	2	True				
ANR	5097186	Identifier	i		5096082	0					
ANR	5097187	IncDec	++		5096082	1					
ANR	5097188	CompoundStatement		359:42:5981:5981	5096082	3					
ANR	5097189	IfStatement	if ( cpuid_i == KVM_MAX_CPUID_ENTRIES )		5096082	0					
ANR	5097190	Condition	cpuid_i == KVM_MAX_CPUID_ENTRIES	363:12:6035:6066	5096082	0	True				
ANR	5097191	EqualityExpression	cpuid_i == KVM_MAX_CPUID_ENTRIES		5096082	0		==			
ANR	5097192	Identifier	cpuid_i		5096082	0					
ANR	5097193	Identifier	KVM_MAX_CPUID_ENTRIES		5096082	1					
ANR	5097194	CompoundStatement		361:46:6030:6030	5096082	1					
ANR	5097195	ExpressionStatement	"fprintf ( stderr , ""unsupported xlevel value: 0x%x\\n"" , limit )"	365:12:6084:6142	5096082	0	True				
ANR	5097196	CallExpression	"fprintf ( stderr , ""unsupported xlevel value: 0x%x\\n"" , limit )"		5096082	0					
ANR	5097197	Callee	fprintf		5096082	0					
ANR	5097198	Identifier	fprintf		5096082	0					
ANR	5097199	ArgumentList	stderr		5096082	1					
ANR	5097200	Argument	stderr		5096082	0					
ANR	5097201	Identifier	stderr		5096082	0					
ANR	5097202	Argument	"""unsupported xlevel value: 0x%x\\n"""		5096082	1					
ANR	5097203	PrimaryExpression	"""unsupported xlevel value: 0x%x\\n"""		5096082	0					
ANR	5097204	Argument	limit		5096082	2					
ANR	5097205	Identifier	limit		5096082	0					
ANR	5097206	ExpressionStatement	abort ( )	367:12:6157:6164	5096082	1	True				
ANR	5097207	CallExpression	abort ( )		5096082	0					
ANR	5097208	Callee	abort		5096082	0					
ANR	5097209	Identifier	abort		5096082	0					
ANR	5097210	ArgumentList			5096082	1					
ANR	5097211	ExpressionStatement	c = & cpuid_data . entries [ cpuid_i ++ ]	371:8:6186:6220	5096082	1	True				
ANR	5097212	AssignmentExpression	c = & cpuid_data . entries [ cpuid_i ++ ]		5096082	0		=			
ANR	5097213	Identifier	c		5096082	0					
ANR	5097214	UnaryOperationExpression	& cpuid_data . entries [ cpuid_i ++ ]		5096082	1					
ANR	5097215	UnaryOperator	&		5096082	0					
ANR	5097216	ArrayIndexing	cpuid_data . entries [ cpuid_i ++ ]		5096082	1					
ANR	5097217	MemberAccess	cpuid_data . entries		5096082	0					
ANR	5097218	Identifier	cpuid_data		5096082	0					
ANR	5097219	Identifier	entries		5096082	1					
ANR	5097220	PostIncDecOperationExpression	cpuid_i ++		5096082	1					
ANR	5097221	Identifier	cpuid_i		5096082	0					
ANR	5097222	IncDec	++		5096082	1					
ANR	5097223	ExpressionStatement	c -> function = i	375:8:6233:6248	5096082	2	True				
ANR	5097224	AssignmentExpression	c -> function = i		5096082	0		=			
ANR	5097225	PtrMemberAccess	c -> function		5096082	0					
ANR	5097226	Identifier	c		5096082	0					
ANR	5097227	Identifier	function		5096082	1					
ANR	5097228	Identifier	i		5096082	1					
ANR	5097229	ExpressionStatement	c -> flags = 0	377:8:6259:6271	5096082	3	True				
ANR	5097230	AssignmentExpression	c -> flags = 0		5096082	0		=			
ANR	5097231	PtrMemberAccess	c -> flags		5096082	0					
ANR	5097232	Identifier	c		5096082	0					
ANR	5097233	Identifier	flags		5096082	1					
ANR	5097234	PrimaryExpression	0		5096082	1					
ANR	5097235	ExpressionStatement	"cpu_x86_cpuid ( env , i , 0 , & c -> eax , & c -> ebx , & c -> ecx , & c -> edx )"	379:8:6282:6342	5096082	4	True				
ANR	5097236	CallExpression	"cpu_x86_cpuid ( env , i , 0 , & c -> eax , & c -> ebx , & c -> ecx , & c -> edx )"		5096082	0					
ANR	5097237	Callee	cpu_x86_cpuid		5096082	0					
ANR	5097238	Identifier	cpu_x86_cpuid		5096082	0					
ANR	5097239	ArgumentList	env		5096082	1					
ANR	5097240	Argument	env		5096082	0					
ANR	5097241	Identifier	env		5096082	0					
ANR	5097242	Argument	i		5096082	1					
ANR	5097243	Identifier	i		5096082	0					
ANR	5097244	Argument	0		5096082	2					
ANR	5097245	PrimaryExpression	0		5096082	0					
ANR	5097246	Argument	& c -> eax		5096082	3					
ANR	5097247	UnaryOperationExpression	& c -> eax		5096082	0					
ANR	5097248	UnaryOperator	&		5096082	0					
ANR	5097249	PtrMemberAccess	c -> eax		5096082	1					
ANR	5097250	Identifier	c		5096082	0					
ANR	5097251	Identifier	eax		5096082	1					
ANR	5097252	Argument	& c -> ebx		5096082	4					
ANR	5097253	UnaryOperationExpression	& c -> ebx		5096082	0					
ANR	5097254	UnaryOperator	&		5096082	0					
ANR	5097255	PtrMemberAccess	c -> ebx		5096082	1					
ANR	5097256	Identifier	c		5096082	0					
ANR	5097257	Identifier	ebx		5096082	1					
ANR	5097258	Argument	& c -> ecx		5096082	5					
ANR	5097259	UnaryOperationExpression	& c -> ecx		5096082	0					
ANR	5097260	UnaryOperator	&		5096082	0					
ANR	5097261	PtrMemberAccess	c -> ecx		5096082	1					
ANR	5097262	Identifier	c		5096082	0					
ANR	5097263	Identifier	ecx		5096082	1					
ANR	5097264	Argument	& c -> edx		5096082	6					
ANR	5097265	UnaryOperationExpression	& c -> edx		5096082	0					
ANR	5097266	UnaryOperator	&		5096082	0					
ANR	5097267	PtrMemberAccess	c -> edx		5096082	1					
ANR	5097268	Identifier	c		5096082	0					
ANR	5097269	Identifier	edx		5096082	1					
ANR	5097270	IfStatement	if ( env -> cpuid_xlevel2 > 0 )		5096082	30					
ANR	5097271	Condition	env -> cpuid_xlevel2 > 0	387:8:6427:6448	5096082	0	True				
ANR	5097272	RelationalExpression	env -> cpuid_xlevel2 > 0		5096082	0		>			
ANR	5097273	PtrMemberAccess	env -> cpuid_xlevel2		5096082	0					
ANR	5097274	Identifier	env		5096082	0					
ANR	5097275	Identifier	cpuid_xlevel2		5096082	1					
ANR	5097276	PrimaryExpression	0		5096082	1					
ANR	5097277	CompoundStatement		385:32:6412:6412	5096082	1					
ANR	5097278	ExpressionStatement	"cpu_x86_cpuid ( env , 0xC0000000 , 0 , & limit , & unused , & unused , & unused )"	389:8:6462:6530	5096082	0	True				
ANR	5097279	CallExpression	"cpu_x86_cpuid ( env , 0xC0000000 , 0 , & limit , & unused , & unused , & unused )"		5096082	0					
ANR	5097280	Callee	cpu_x86_cpuid		5096082	0					
ANR	5097281	Identifier	cpu_x86_cpuid		5096082	0					
ANR	5097282	ArgumentList	env		5096082	1					
ANR	5097283	Argument	env		5096082	0					
ANR	5097284	Identifier	env		5096082	0					
ANR	5097285	Argument	0xC0000000		5096082	1					
ANR	5097286	PrimaryExpression	0xC0000000		5096082	0					
ANR	5097287	Argument	0		5096082	2					
ANR	5097288	PrimaryExpression	0		5096082	0					
ANR	5097289	Argument	& limit		5096082	3					
ANR	5097290	UnaryOperationExpression	& limit		5096082	0					
ANR	5097291	UnaryOperator	&		5096082	0					
ANR	5097292	Identifier	limit		5096082	1					
ANR	5097293	Argument	& unused		5096082	4					
ANR	5097294	UnaryOperationExpression	& unused		5096082	0					
ANR	5097295	UnaryOperator	&		5096082	0					
ANR	5097296	Identifier	unused		5096082	1					
ANR	5097297	Argument	& unused		5096082	5					
ANR	5097298	UnaryOperationExpression	& unused		5096082	0					
ANR	5097299	UnaryOperator	&		5096082	0					
ANR	5097300	Identifier	unused		5096082	1					
ANR	5097301	Argument	& unused		5096082	6					
ANR	5097302	UnaryOperationExpression	& unused		5096082	0					
ANR	5097303	UnaryOperator	&		5096082	0					
ANR	5097304	Identifier	unused		5096082	1					
ANR	5097305	ForStatement	for ( i = 0xC0000000 ; i <= limit ; i ++ )		5096082	1					
ANR	5097306	ForInit	i = 0xC0000000 ;	393:13:6548:6562	5096082	0	True				
ANR	5097307	AssignmentExpression	i = 0xC0000000		5096082	0		=			
ANR	5097308	Identifier	i		5096082	0					
ANR	5097309	PrimaryExpression	0xC0000000		5096082	1					
ANR	5097310	Condition	i <= limit	393:29:6564:6573	5096082	1	True				
ANR	5097311	RelationalExpression	i <= limit		5096082	0		<=			
ANR	5097312	Identifier	i		5096082	0					
ANR	5097313	Identifier	limit		5096082	1					
ANR	5097314	PostIncDecOperationExpression	i ++	393:41:6576:6578	5096082	2	True				
ANR	5097315	Identifier	i		5096082	0					
ANR	5097316	IncDec	++		5096082	1					
ANR	5097317	CompoundStatement		391:46:6542:6542	5096082	3					
ANR	5097318	IfStatement	if ( cpuid_i == KVM_MAX_CPUID_ENTRIES )		5096082	0					
ANR	5097319	Condition	cpuid_i == KVM_MAX_CPUID_ENTRIES	395:16:6600:6631	5096082	0	True				
ANR	5097320	EqualityExpression	cpuid_i == KVM_MAX_CPUID_ENTRIES		5096082	0		==			
ANR	5097321	Identifier	cpuid_i		5096082	0					
ANR	5097322	Identifier	KVM_MAX_CPUID_ENTRIES		5096082	1					
ANR	5097323	CompoundStatement		393:50:6595:6595	5096082	1					
ANR	5097324	ExpressionStatement	"fprintf ( stderr , ""unsupported xlevel2 value: 0x%x\\n"" , limit )"	397:16:6653:6712	5096082	0	True				
ANR	5097325	CallExpression	"fprintf ( stderr , ""unsupported xlevel2 value: 0x%x\\n"" , limit )"		5096082	0					
ANR	5097326	Callee	fprintf		5096082	0					
ANR	5097327	Identifier	fprintf		5096082	0					
ANR	5097328	ArgumentList	stderr		5096082	1					
ANR	5097329	Argument	stderr		5096082	0					
ANR	5097330	Identifier	stderr		5096082	0					
ANR	5097331	Argument	"""unsupported xlevel2 value: 0x%x\\n"""		5096082	1					
ANR	5097332	PrimaryExpression	"""unsupported xlevel2 value: 0x%x\\n"""		5096082	0					
ANR	5097333	Argument	limit		5096082	2					
ANR	5097334	Identifier	limit		5096082	0					
ANR	5097335	ExpressionStatement	abort ( )	399:16:6731:6738	5096082	1	True				
ANR	5097336	CallExpression	abort ( )		5096082	0					
ANR	5097337	Callee	abort		5096082	0					
ANR	5097338	Identifier	abort		5096082	0					
ANR	5097339	ArgumentList			5096082	1					
ANR	5097340	ExpressionStatement	c = & cpuid_data . entries [ cpuid_i ++ ]	403:12:6768:6802	5096082	1	True				
ANR	5097341	AssignmentExpression	c = & cpuid_data . entries [ cpuid_i ++ ]		5096082	0		=			
ANR	5097342	Identifier	c		5096082	0					
ANR	5097343	UnaryOperationExpression	& cpuid_data . entries [ cpuid_i ++ ]		5096082	1					
ANR	5097344	UnaryOperator	&		5096082	0					
ANR	5097345	ArrayIndexing	cpuid_data . entries [ cpuid_i ++ ]		5096082	1					
ANR	5097346	MemberAccess	cpuid_data . entries		5096082	0					
ANR	5097347	Identifier	cpuid_data		5096082	0					
ANR	5097348	Identifier	entries		5096082	1					
ANR	5097349	PostIncDecOperationExpression	cpuid_i ++		5096082	1					
ANR	5097350	Identifier	cpuid_i		5096082	0					
ANR	5097351	IncDec	++		5096082	1					
ANR	5097352	ExpressionStatement	c -> function = i	407:12:6819:6834	5096082	2	True				
ANR	5097353	AssignmentExpression	c -> function = i		5096082	0		=			
ANR	5097354	PtrMemberAccess	c -> function		5096082	0					
ANR	5097355	Identifier	c		5096082	0					
ANR	5097356	Identifier	function		5096082	1					
ANR	5097357	Identifier	i		5096082	1					
ANR	5097358	ExpressionStatement	c -> flags = 0	409:12:6849:6861	5096082	3	True				
ANR	5097359	AssignmentExpression	c -> flags = 0		5096082	0		=			
ANR	5097360	PtrMemberAccess	c -> flags		5096082	0					
ANR	5097361	Identifier	c		5096082	0					
ANR	5097362	Identifier	flags		5096082	1					
ANR	5097363	PrimaryExpression	0		5096082	1					
ANR	5097364	ExpressionStatement	"cpu_x86_cpuid ( env , i , 0 , & c -> eax , & c -> ebx , & c -> ecx , & c -> edx )"	411:12:6876:6936	5096082	4	True				
ANR	5097365	CallExpression	"cpu_x86_cpuid ( env , i , 0 , & c -> eax , & c -> ebx , & c -> ecx , & c -> edx )"		5096082	0					
ANR	5097366	Callee	cpu_x86_cpuid		5096082	0					
ANR	5097367	Identifier	cpu_x86_cpuid		5096082	0					
ANR	5097368	ArgumentList	env		5096082	1					
ANR	5097369	Argument	env		5096082	0					
ANR	5097370	Identifier	env		5096082	0					
ANR	5097371	Argument	i		5096082	1					
ANR	5097372	Identifier	i		5096082	0					
ANR	5097373	Argument	0		5096082	2					
ANR	5097374	PrimaryExpression	0		5096082	0					
ANR	5097375	Argument	& c -> eax		5096082	3					
ANR	5097376	UnaryOperationExpression	& c -> eax		5096082	0					
ANR	5097377	UnaryOperator	&		5096082	0					
ANR	5097378	PtrMemberAccess	c -> eax		5096082	1					
ANR	5097379	Identifier	c		5096082	0					
ANR	5097380	Identifier	eax		5096082	1					
ANR	5097381	Argument	& c -> ebx		5096082	4					
ANR	5097382	UnaryOperationExpression	& c -> ebx		5096082	0					
ANR	5097383	UnaryOperator	&		5096082	0					
ANR	5097384	PtrMemberAccess	c -> ebx		5096082	1					
ANR	5097385	Identifier	c		5096082	0					
ANR	5097386	Identifier	ebx		5096082	1					
ANR	5097387	Argument	& c -> ecx		5096082	5					
ANR	5097388	UnaryOperationExpression	& c -> ecx		5096082	0					
ANR	5097389	UnaryOperator	&		5096082	0					
ANR	5097390	PtrMemberAccess	c -> ecx		5096082	1					
ANR	5097391	Identifier	c		5096082	0					
ANR	5097392	Identifier	ecx		5096082	1					
ANR	5097393	Argument	& c -> edx		5096082	6					
ANR	5097394	UnaryOperationExpression	& c -> edx		5096082	0					
ANR	5097395	UnaryOperator	&		5096082	0					
ANR	5097396	PtrMemberAccess	c -> edx		5096082	1					
ANR	5097397	Identifier	c		5096082	0					
ANR	5097398	Identifier	edx		5096082	1					
ANR	5097399	ExpressionStatement	cpuid_data . cpuid . nent = cpuid_i	419:4:6963:6994	5096082	31	True				
ANR	5097400	AssignmentExpression	cpuid_data . cpuid . nent = cpuid_i		5096082	0		=			
ANR	5097401	MemberAccess	cpuid_data . cpuid . nent		5096082	0					
ANR	5097402	MemberAccess	cpuid_data . cpuid		5096082	0					
ANR	5097403	Identifier	cpuid_data		5096082	0					
ANR	5097404	Identifier	cpuid		5096082	1					
ANR	5097405	Identifier	nent		5096082	1					
ANR	5097406	Identifier	cpuid_i		5096082	1					
ANR	5097407	IfStatement	"if ( ( ( env -> cpuid_version >> 8 ) & 0xF ) >= 6 && ( env -> features [ FEAT_1_EDX ] & ( CPUID_MCE | CPUID_MCA ) ) == ( CPUID_MCE | CPUID_MCA ) && kvm_check_extension ( cs -> kvm_state , KVM_CAP_MCE ) > 0 )"		5096082	32					
ANR	5097408	Condition	"( ( env -> cpuid_version >> 8 ) & 0xF ) >= 6 && ( env -> features [ FEAT_1_EDX ] & ( CPUID_MCE | CPUID_MCA ) ) == ( CPUID_MCE | CPUID_MCA ) && kvm_check_extension ( cs -> kvm_state , KVM_CAP_MCE ) > 0"	423:8:7007:7211	5096082	0	True				
ANR	5097409	AndExpression	"( ( env -> cpuid_version >> 8 ) & 0xF ) >= 6 && ( env -> features [ FEAT_1_EDX ] & ( CPUID_MCE | CPUID_MCA ) ) == ( CPUID_MCE | CPUID_MCA ) && kvm_check_extension ( cs -> kvm_state , KVM_CAP_MCE ) > 0"		5096082	0		&&			
ANR	5097410	RelationalExpression	( ( env -> cpuid_version >> 8 ) & 0xF ) >= 6		5096082	0		>=			
ANR	5097411	BitAndExpression	( env -> cpuid_version >> 8 ) & 0xF		5096082	0		&			
ANR	5097412	ShiftExpression	env -> cpuid_version >> 8		5096082	0		>>			
ANR	5097413	PtrMemberAccess	env -> cpuid_version		5096082	0					
ANR	5097414	Identifier	env		5096082	0					
ANR	5097415	Identifier	cpuid_version		5096082	1					
ANR	5097416	PrimaryExpression	8		5096082	1					
ANR	5097417	PrimaryExpression	0xF		5096082	1					
ANR	5097418	PrimaryExpression	6		5096082	1					
ANR	5097419	AndExpression	"( env -> features [ FEAT_1_EDX ] & ( CPUID_MCE | CPUID_MCA ) ) == ( CPUID_MCE | CPUID_MCA ) && kvm_check_extension ( cs -> kvm_state , KVM_CAP_MCE ) > 0"		5096082	1		&&			
ANR	5097420	EqualityExpression	( env -> features [ FEAT_1_EDX ] & ( CPUID_MCE | CPUID_MCA ) ) == ( CPUID_MCE | CPUID_MCA )		5096082	0		==			
ANR	5097421	BitAndExpression	env -> features [ FEAT_1_EDX ] & ( CPUID_MCE | CPUID_MCA )		5096082	0		&			
ANR	5097422	ArrayIndexing	env -> features [ FEAT_1_EDX ]		5096082	0					
ANR	5097423	PtrMemberAccess	env -> features		5096082	0					
ANR	5097424	Identifier	env		5096082	0					
ANR	5097425	Identifier	features		5096082	1					
ANR	5097426	Identifier	FEAT_1_EDX		5096082	1					
ANR	5097427	InclusiveOrExpression	CPUID_MCE | CPUID_MCA		5096082	1		|			
ANR	5097428	Identifier	CPUID_MCE		5096082	0					
ANR	5097429	Identifier	CPUID_MCA		5096082	1					
ANR	5097430	InclusiveOrExpression	CPUID_MCE | CPUID_MCA		5096082	1		|			
ANR	5097431	Identifier	CPUID_MCE		5096082	0					
ANR	5097432	Identifier	CPUID_MCA		5096082	1					
ANR	5097433	RelationalExpression	"kvm_check_extension ( cs -> kvm_state , KVM_CAP_MCE ) > 0"		5096082	1		>			
ANR	5097434	CallExpression	"kvm_check_extension ( cs -> kvm_state , KVM_CAP_MCE )"		5096082	0					
ANR	5097435	Callee	kvm_check_extension		5096082	0					
ANR	5097436	Identifier	kvm_check_extension		5096082	0					
ANR	5097437	ArgumentList	cs -> kvm_state		5096082	1					
ANR	5097438	Argument	cs -> kvm_state		5096082	0					
ANR	5097439	PtrMemberAccess	cs -> kvm_state		5096082	0					
ANR	5097440	Identifier	cs		5096082	0					
ANR	5097441	Identifier	kvm_state		5096082	1					
ANR	5097442	Argument	KVM_CAP_MCE		5096082	1					
ANR	5097443	Identifier	KVM_CAP_MCE		5096082	0					
ANR	5097444	PrimaryExpression	0		5096082	1					
ANR	5097445	CompoundStatement		433:8:7233:7240	5096082	1					
ANR	5097446	IdentifierDeclStatement	uint64_t mcg_cap ;	431:8:7225:7241	5096082	0	True				
ANR	5097447	IdentifierDecl	mcg_cap		5096082	0					
ANR	5097448	IdentifierDeclType	uint64_t		5096082	0					
ANR	5097449	Identifier	mcg_cap		5096082	1					
ANR	5097450	IdentifierDeclStatement	int banks ;	433:8:7252:7261	5096082	1	True				
ANR	5097451	IdentifierDecl	banks		5096082	0					
ANR	5097452	IdentifierDeclType	int		5096082	0					
ANR	5097453	Identifier	banks		5096082	1					
ANR	5097454	IdentifierDeclStatement	int ret ;	435:8:7272:7279	5096082	2	True				
ANR	5097455	IdentifierDecl	ret		5096082	0					
ANR	5097456	IdentifierDeclType	int		5096082	0					
ANR	5097457	Identifier	ret		5096082	1					
ANR	5097458	ExpressionStatement	"ret = kvm_get_mce_cap_supported ( cs -> kvm_state , & mcg_cap , & banks )"	439:8:7292:7356	5096082	3	True				
ANR	5097459	AssignmentExpression	"ret = kvm_get_mce_cap_supported ( cs -> kvm_state , & mcg_cap , & banks )"		5096082	0		=			
ANR	5097460	Identifier	ret		5096082	0					
ANR	5097461	CallExpression	"kvm_get_mce_cap_supported ( cs -> kvm_state , & mcg_cap , & banks )"		5096082	1					
ANR	5097462	Callee	kvm_get_mce_cap_supported		5096082	0					
ANR	5097463	Identifier	kvm_get_mce_cap_supported		5096082	0					
ANR	5097464	ArgumentList	cs -> kvm_state		5096082	1					
ANR	5097465	Argument	cs -> kvm_state		5096082	0					
ANR	5097466	PtrMemberAccess	cs -> kvm_state		5096082	0					
ANR	5097467	Identifier	cs		5096082	0					
ANR	5097468	Identifier	kvm_state		5096082	1					
ANR	5097469	Argument	& mcg_cap		5096082	1					
ANR	5097470	UnaryOperationExpression	& mcg_cap		5096082	0					
ANR	5097471	UnaryOperator	&		5096082	0					
ANR	5097472	Identifier	mcg_cap		5096082	1					
ANR	5097473	Argument	& banks		5096082	2					
ANR	5097474	UnaryOperationExpression	& banks		5096082	0					
ANR	5097475	UnaryOperator	&		5096082	0					
ANR	5097476	Identifier	banks		5096082	1					
ANR	5097477	IfStatement	if ( ret < 0 )		5096082	4					
ANR	5097478	Condition	ret < 0	441:12:7371:7377	5096082	0	True				
ANR	5097479	RelationalExpression	ret < 0		5096082	0		<			
ANR	5097480	Identifier	ret		5096082	0					
ANR	5097481	PrimaryExpression	0		5096082	1					
ANR	5097482	CompoundStatement		439:21:7341:7341	5096082	1					
ANR	5097483	ExpressionStatement	"fprintf ( stderr , ""kvm_get_mce_cap_supported: %s"" , strerror ( - ret ) )"	443:12:7395:7459	5096082	0	True				
ANR	5097484	CallExpression	"fprintf ( stderr , ""kvm_get_mce_cap_supported: %s"" , strerror ( - ret ) )"		5096082	0					
ANR	5097485	Callee	fprintf		5096082	0					
ANR	5097486	Identifier	fprintf		5096082	0					
ANR	5097487	ArgumentList	stderr		5096082	1					
ANR	5097488	Argument	stderr		5096082	0					
ANR	5097489	Identifier	stderr		5096082	0					
ANR	5097490	Argument	"""kvm_get_mce_cap_supported: %s"""		5096082	1					
ANR	5097491	PrimaryExpression	"""kvm_get_mce_cap_supported: %s"""		5096082	0					
ANR	5097492	Argument	strerror ( - ret )		5096082	2					
ANR	5097493	CallExpression	strerror ( - ret )		5096082	0					
ANR	5097494	Callee	strerror		5096082	0					
ANR	5097495	Identifier	strerror		5096082	0					
ANR	5097496	ArgumentList	- ret		5096082	1					
ANR	5097497	Argument	- ret		5096082	0					
ANR	5097498	UnaryOperationExpression	- ret		5096082	0					
ANR	5097499	UnaryOperator	-		5096082	0					
ANR	5097500	Identifier	ret		5096082	1					
ANR	5097501	ReturnStatement	return ret ;	445:12:7474:7484	5096082	1	True				
ANR	5097502	Identifier	ret		5096082	0					
ANR	5097503	IfStatement	if ( banks > MCE_BANKS_DEF )		5096082	5					
ANR	5097504	Condition	banks > MCE_BANKS_DEF	451:12:7512:7532	5096082	0	True				
ANR	5097505	RelationalExpression	banks > MCE_BANKS_DEF		5096082	0		>			
ANR	5097506	Identifier	banks		5096082	0					
ANR	5097507	Identifier	MCE_BANKS_DEF		5096082	1					
ANR	5097508	CompoundStatement		449:35:7496:7496	5096082	1					
ANR	5097509	ExpressionStatement	banks = MCE_BANKS_DEF	453:12:7550:7571	5096082	0	True				
ANR	5097510	AssignmentExpression	banks = MCE_BANKS_DEF		5096082	0		=			
ANR	5097511	Identifier	banks		5096082	0					
ANR	5097512	Identifier	MCE_BANKS_DEF		5096082	1					
ANR	5097513	ExpressionStatement	mcg_cap &= MCE_CAP_DEF	457:8:7593:7615	5096082	6	True				
ANR	5097514	AssignmentExpression	mcg_cap &= MCE_CAP_DEF		5096082	0		&=			
ANR	5097515	Identifier	mcg_cap		5096082	0					
ANR	5097516	Identifier	MCE_CAP_DEF		5096082	1					
ANR	5097517	ExpressionStatement	mcg_cap |= banks	459:8:7626:7642	5096082	7	True				
ANR	5097518	AssignmentExpression	mcg_cap |= banks		5096082	0		|=			
ANR	5097519	Identifier	mcg_cap		5096082	0					
ANR	5097520	Identifier	banks		5096082	1					
ANR	5097521	ExpressionStatement	"ret = kvm_vcpu_ioctl ( cs , KVM_X86_SETUP_MCE , & mcg_cap )"	461:8:7653:7706	5096082	8	True				
ANR	5097522	AssignmentExpression	"ret = kvm_vcpu_ioctl ( cs , KVM_X86_SETUP_MCE , & mcg_cap )"		5096082	0		=			
ANR	5097523	Identifier	ret		5096082	0					
ANR	5097524	CallExpression	"kvm_vcpu_ioctl ( cs , KVM_X86_SETUP_MCE , & mcg_cap )"		5096082	1					
ANR	5097525	Callee	kvm_vcpu_ioctl		5096082	0					
ANR	5097526	Identifier	kvm_vcpu_ioctl		5096082	0					
ANR	5097527	ArgumentList	cs		5096082	1					
ANR	5097528	Argument	cs		5096082	0					
ANR	5097529	Identifier	cs		5096082	0					
ANR	5097530	Argument	KVM_X86_SETUP_MCE		5096082	1					
ANR	5097531	Identifier	KVM_X86_SETUP_MCE		5096082	0					
ANR	5097532	Argument	& mcg_cap		5096082	2					
ANR	5097533	UnaryOperationExpression	& mcg_cap		5096082	0					
ANR	5097534	UnaryOperator	&		5096082	0					
ANR	5097535	Identifier	mcg_cap		5096082	1					
ANR	5097536	IfStatement	if ( ret < 0 )		5096082	9					
ANR	5097537	Condition	ret < 0	463:12:7721:7727	5096082	0	True				
ANR	5097538	RelationalExpression	ret < 0		5096082	0		<			
ANR	5097539	Identifier	ret		5096082	0					
ANR	5097540	PrimaryExpression	0		5096082	1					
ANR	5097541	CompoundStatement		461:21:7691:7691	5096082	1					
ANR	5097542	ExpressionStatement	"fprintf ( stderr , ""KVM_X86_SETUP_MCE: %s"" , strerror ( - ret ) )"	465:12:7745:7801	5096082	0	True				
ANR	5097543	CallExpression	"fprintf ( stderr , ""KVM_X86_SETUP_MCE: %s"" , strerror ( - ret ) )"		5096082	0					
ANR	5097544	Callee	fprintf		5096082	0					
ANR	5097545	Identifier	fprintf		5096082	0					
ANR	5097546	ArgumentList	stderr		5096082	1					
ANR	5097547	Argument	stderr		5096082	0					
ANR	5097548	Identifier	stderr		5096082	0					
ANR	5097549	Argument	"""KVM_X86_SETUP_MCE: %s"""		5096082	1					
ANR	5097550	PrimaryExpression	"""KVM_X86_SETUP_MCE: %s"""		5096082	0					
ANR	5097551	Argument	strerror ( - ret )		5096082	2					
ANR	5097552	CallExpression	strerror ( - ret )		5096082	0					
ANR	5097553	Callee	strerror		5096082	0					
ANR	5097554	Identifier	strerror		5096082	0					
ANR	5097555	ArgumentList	- ret		5096082	1					
ANR	5097556	Argument	- ret		5096082	0					
ANR	5097557	UnaryOperationExpression	- ret		5096082	0					
ANR	5097558	UnaryOperator	-		5096082	0					
ANR	5097559	Identifier	ret		5096082	1					
ANR	5097560	ReturnStatement	return ret ;	467:12:7816:7826	5096082	1	True				
ANR	5097561	Identifier	ret		5096082	0					
ANR	5097562	ExpressionStatement	env -> mcg_cap = mcg_cap	473:8:7850:7872	5096082	10	True				
ANR	5097563	AssignmentExpression	env -> mcg_cap = mcg_cap		5096082	0		=			
ANR	5097564	PtrMemberAccess	env -> mcg_cap		5096082	0					
ANR	5097565	Identifier	env		5096082	0					
ANR	5097566	Identifier	mcg_cap		5096082	1					
ANR	5097567	Identifier	mcg_cap		5096082	1					
ANR	5097568	ExpressionStatement	"qemu_add_vm_change_state_handler ( cpu_update_state , env )"	479:4:7888:7943	5096082	33	True				
ANR	5097569	CallExpression	"qemu_add_vm_change_state_handler ( cpu_update_state , env )"		5096082	0					
ANR	5097570	Callee	qemu_add_vm_change_state_handler		5096082	0					
ANR	5097571	Identifier	qemu_add_vm_change_state_handler		5096082	0					
ANR	5097572	ArgumentList	cpu_update_state		5096082	1					
ANR	5097573	Argument	cpu_update_state		5096082	0					
ANR	5097574	Identifier	cpu_update_state		5096082	0					
ANR	5097575	Argument	env		5096082	1					
ANR	5097576	Identifier	env		5096082	0					
ANR	5097577	ExpressionStatement	"c = cpuid_find_entry ( & cpuid_data . cpuid , 1 , 0 )"	483:4:7952:7997	5096082	34	True				
ANR	5097578	AssignmentExpression	"c = cpuid_find_entry ( & cpuid_data . cpuid , 1 , 0 )"		5096082	0		=			
ANR	5097579	Identifier	c		5096082	0					
ANR	5097580	CallExpression	"cpuid_find_entry ( & cpuid_data . cpuid , 1 , 0 )"		5096082	1					
ANR	5097581	Callee	cpuid_find_entry		5096082	0					
ANR	5097582	Identifier	cpuid_find_entry		5096082	0					
ANR	5097583	ArgumentList	& cpuid_data . cpuid		5096082	1					
ANR	5097584	Argument	& cpuid_data . cpuid		5096082	0					
ANR	5097585	UnaryOperationExpression	& cpuid_data . cpuid		5096082	0					
ANR	5097586	UnaryOperator	&		5096082	0					
ANR	5097587	MemberAccess	cpuid_data . cpuid		5096082	1					
ANR	5097588	Identifier	cpuid_data		5096082	0					
ANR	5097589	Identifier	cpuid		5096082	1					
ANR	5097590	Argument	1		5096082	1					
ANR	5097591	PrimaryExpression	1		5096082	0					
ANR	5097592	Argument	0		5096082	2					
ANR	5097593	PrimaryExpression	0		5096082	0					
ANR	5097594	IfStatement	if ( c )		5096082	35					
ANR	5097595	Condition	c	485:8:8008:8008	5096082	0	True				
ANR	5097596	Identifier	c		5096082	0					
ANR	5097597	CompoundStatement		483:11:7972:7972	5096082	1					
ANR	5097598	ExpressionStatement	has_msr_feature_control = ! ! ( c -> ecx & CPUID_EXT_VMX ) || ! ! ( c -> ecx & CPUID_EXT_SMX )	487:8:8022:8139	5096082	0	True				
ANR	5097599	AssignmentExpression	has_msr_feature_control = ! ! ( c -> ecx & CPUID_EXT_VMX ) || ! ! ( c -> ecx & CPUID_EXT_SMX )		5096082	0		=			
ANR	5097600	Identifier	has_msr_feature_control		5096082	0					
ANR	5097601	OrExpression	! ! ( c -> ecx & CPUID_EXT_VMX ) || ! ! ( c -> ecx & CPUID_EXT_SMX )		5096082	1		||			
ANR	5097602	UnaryOperationExpression	! ! ( c -> ecx & CPUID_EXT_VMX )		5096082	0					
ANR	5097603	UnaryOperator	!		5096082	0					
ANR	5097604	UnaryOperationExpression	! ( c -> ecx & CPUID_EXT_VMX )		5096082	1					
ANR	5097605	UnaryOperator	!		5096082	0					
ANR	5097606	BitAndExpression	c -> ecx & CPUID_EXT_VMX		5096082	1		&			
ANR	5097607	PtrMemberAccess	c -> ecx		5096082	0					
ANR	5097608	Identifier	c		5096082	0					
ANR	5097609	Identifier	ecx		5096082	1					
ANR	5097610	Identifier	CPUID_EXT_VMX		5096082	1					
ANR	5097611	UnaryOperationExpression	! ! ( c -> ecx & CPUID_EXT_SMX )		5096082	1					
ANR	5097612	UnaryOperator	!		5096082	0					
ANR	5097613	UnaryOperationExpression	! ( c -> ecx & CPUID_EXT_SMX )		5096082	1					
ANR	5097614	UnaryOperator	!		5096082	0					
ANR	5097615	BitAndExpression	c -> ecx & CPUID_EXT_SMX		5096082	1		&			
ANR	5097616	PtrMemberAccess	c -> ecx		5096082	0					
ANR	5097617	Identifier	c		5096082	0					
ANR	5097618	Identifier	ecx		5096082	1					
ANR	5097619	Identifier	CPUID_EXT_SMX		5096082	1					
ANR	5097620	ExpressionStatement	cpuid_data . cpuid . padding = 0	495:4:8155:8183	5096082	36	True				
ANR	5097621	AssignmentExpression	cpuid_data . cpuid . padding = 0		5096082	0		=			
ANR	5097622	MemberAccess	cpuid_data . cpuid . padding		5096082	0					
ANR	5097623	MemberAccess	cpuid_data . cpuid		5096082	0					
ANR	5097624	Identifier	cpuid_data		5096082	0					
ANR	5097625	Identifier	cpuid		5096082	1					
ANR	5097626	Identifier	padding		5096082	1					
ANR	5097627	PrimaryExpression	0		5096082	1					
ANR	5097628	ExpressionStatement	"r = kvm_vcpu_ioctl ( cs , KVM_SET_CPUID2 , & cpuid_data )"	497:4:8190:8241	5096082	37	True				
ANR	5097629	AssignmentExpression	"r = kvm_vcpu_ioctl ( cs , KVM_SET_CPUID2 , & cpuid_data )"		5096082	0		=			
ANR	5097630	Identifier	r		5096082	0					
ANR	5097631	CallExpression	"kvm_vcpu_ioctl ( cs , KVM_SET_CPUID2 , & cpuid_data )"		5096082	1					
ANR	5097632	Callee	kvm_vcpu_ioctl		5096082	0					
ANR	5097633	Identifier	kvm_vcpu_ioctl		5096082	0					
ANR	5097634	ArgumentList	cs		5096082	1					
ANR	5097635	Argument	cs		5096082	0					
ANR	5097636	Identifier	cs		5096082	0					
ANR	5097637	Argument	KVM_SET_CPUID2		5096082	1					
ANR	5097638	Identifier	KVM_SET_CPUID2		5096082	0					
ANR	5097639	Argument	& cpuid_data		5096082	2					
ANR	5097640	UnaryOperationExpression	& cpuid_data		5096082	0					
ANR	5097641	UnaryOperator	&		5096082	0					
ANR	5097642	Identifier	cpuid_data		5096082	1					
ANR	5097643	IfStatement	if ( r )		5096082	38					
ANR	5097644	Condition	r	499:8:8252:8252	5096082	0	True				
ANR	5097645	Identifier	r		5096082	0					
ANR	5097646	CompoundStatement		497:11:8216:8216	5096082	1					
ANR	5097647	ReturnStatement	return r ;	501:8:8266:8274	5096082	0	True				
ANR	5097648	Identifier	r		5096082	0					
ANR	5097649	ExpressionStatement	"r = kvm_check_extension ( cs -> kvm_state , KVM_CAP_TSC_CONTROL )"	507:4:8290:8349	5096082	39	True				
ANR	5097650	AssignmentExpression	"r = kvm_check_extension ( cs -> kvm_state , KVM_CAP_TSC_CONTROL )"		5096082	0		=			
ANR	5097651	Identifier	r		5096082	0					
ANR	5097652	CallExpression	"kvm_check_extension ( cs -> kvm_state , KVM_CAP_TSC_CONTROL )"		5096082	1					
ANR	5097653	Callee	kvm_check_extension		5096082	0					
ANR	5097654	Identifier	kvm_check_extension		5096082	0					
ANR	5097655	ArgumentList	cs -> kvm_state		5096082	1					
ANR	5097656	Argument	cs -> kvm_state		5096082	0					
ANR	5097657	PtrMemberAccess	cs -> kvm_state		5096082	0					
ANR	5097658	Identifier	cs		5096082	0					
ANR	5097659	Identifier	kvm_state		5096082	1					
ANR	5097660	Argument	KVM_CAP_TSC_CONTROL		5096082	1					
ANR	5097661	Identifier	KVM_CAP_TSC_CONTROL		5096082	0					
ANR	5097662	IfStatement	if ( r && env -> tsc_khz )		5096082	40					
ANR	5097663	Condition	r && env -> tsc_khz	509:8:8360:8376	5096082	0	True				
ANR	5097664	AndExpression	r && env -> tsc_khz		5096082	0		&&			
ANR	5097665	Identifier	r		5096082	0					
ANR	5097666	PtrMemberAccess	env -> tsc_khz		5096082	1					
ANR	5097667	Identifier	env		5096082	0					
ANR	5097668	Identifier	tsc_khz		5096082	1					
ANR	5097669	CompoundStatement		507:27:8340:8340	5096082	1					
ANR	5097670	ExpressionStatement	"r = kvm_vcpu_ioctl ( cs , KVM_SET_TSC_KHZ , env -> tsc_khz )"	511:8:8390:8443	5096082	0	True				
ANR	5097671	AssignmentExpression	"r = kvm_vcpu_ioctl ( cs , KVM_SET_TSC_KHZ , env -> tsc_khz )"		5096082	0		=			
ANR	5097672	Identifier	r		5096082	0					
ANR	5097673	CallExpression	"kvm_vcpu_ioctl ( cs , KVM_SET_TSC_KHZ , env -> tsc_khz )"		5096082	1					
ANR	5097674	Callee	kvm_vcpu_ioctl		5096082	0					
ANR	5097675	Identifier	kvm_vcpu_ioctl		5096082	0					
ANR	5097676	ArgumentList	cs		5096082	1					
ANR	5097677	Argument	cs		5096082	0					
ANR	5097678	Identifier	cs		5096082	0					
ANR	5097679	Argument	KVM_SET_TSC_KHZ		5096082	1					
ANR	5097680	Identifier	KVM_SET_TSC_KHZ		5096082	0					
ANR	5097681	Argument	env -> tsc_khz		5096082	2					
ANR	5097682	PtrMemberAccess	env -> tsc_khz		5096082	0					
ANR	5097683	Identifier	env		5096082	0					
ANR	5097684	Identifier	tsc_khz		5096082	1					
ANR	5097685	IfStatement	if ( r < 0 )		5096082	1					
ANR	5097686	Condition	r < 0	513:12:8458:8462	5096082	0	True				
ANR	5097687	RelationalExpression	r < 0		5096082	0		<			
ANR	5097688	Identifier	r		5096082	0					
ANR	5097689	PrimaryExpression	0		5096082	1					
ANR	5097690	CompoundStatement		511:19:8426:8426	5096082	1					
ANR	5097691	ExpressionStatement	"fprintf ( stderr , ""KVM_SET_TSC_KHZ failed\\n"" )"	515:12:8480:8523	5096082	0	True				
ANR	5097692	CallExpression	"fprintf ( stderr , ""KVM_SET_TSC_KHZ failed\\n"" )"		5096082	0					
ANR	5097693	Callee	fprintf		5096082	0					
ANR	5097694	Identifier	fprintf		5096082	0					
ANR	5097695	ArgumentList	stderr		5096082	1					
ANR	5097696	Argument	stderr		5096082	0					
ANR	5097697	Identifier	stderr		5096082	0					
ANR	5097698	Argument	"""KVM_SET_TSC_KHZ failed\\n"""		5096082	1					
ANR	5097699	PrimaryExpression	"""KVM_SET_TSC_KHZ failed\\n"""		5096082	0					
ANR	5097700	ReturnStatement	return r ;	517:12:8538:8546	5096082	1	True				
ANR	5097701	Identifier	r		5096082	0					
ANR	5097702	IfStatement	if ( kvm_has_xsave ( ) )		5096082	41					
ANR	5097703	Condition	kvm_has_xsave ( )	525:8:8577:8591	5096082	0	True				
ANR	5097704	CallExpression	kvm_has_xsave ( )		5096082	0					
ANR	5097705	Callee	kvm_has_xsave		5096082	0					
ANR	5097706	Identifier	kvm_has_xsave		5096082	0					
ANR	5097707	ArgumentList			5096082	1					
ANR	5097708	CompoundStatement		523:25:8555:8555	5096082	1					
ANR	5097709	ExpressionStatement	"env -> kvm_xsave_buf = qemu_memalign ( 4096 , sizeof ( struct kvm_xsave ) )"	527:8:8605:8671	5096082	0	True				
ANR	5097710	AssignmentExpression	"env -> kvm_xsave_buf = qemu_memalign ( 4096 , sizeof ( struct kvm_xsave ) )"		5096082	0		=			
ANR	5097711	PtrMemberAccess	env -> kvm_xsave_buf		5096082	0					
ANR	5097712	Identifier	env		5096082	0					
ANR	5097713	Identifier	kvm_xsave_buf		5096082	1					
ANR	5097714	CallExpression	"qemu_memalign ( 4096 , sizeof ( struct kvm_xsave ) )"		5096082	1					
ANR	5097715	Callee	qemu_memalign		5096082	0					
ANR	5097716	Identifier	qemu_memalign		5096082	0					
ANR	5097717	ArgumentList	4096		5096082	1					
ANR	5097718	Argument	4096		5096082	0					
ANR	5097719	PrimaryExpression	4096		5096082	0					
ANR	5097720	Argument	sizeof ( struct kvm_xsave )		5096082	1					
ANR	5097721	SizeofExpression	sizeof ( struct kvm_xsave )		5096082	0					
ANR	5097722	Sizeof	sizeof		5096082	0					
ANR	5097723	SizeofOperand	struct kvm_xsave		5096082	1					
ANR	5097724	ReturnStatement	return 0 ;	533:4:8687:8695	5096082	42	True				
ANR	5097725	PrimaryExpression	0		5096082	0					
ANR	5097726	ReturnType	int		5096082	1					
ANR	5097727	Identifier	kvm_arch_init_vcpu		5096082	2					
ANR	5097728	ParameterList	CPUState * cs		5096082	3					
ANR	5097729	Parameter	CPUState * cs	1:23:23:34	5096082	0	True				
ANR	5097730	ParameterType	CPUState *		5096082	0					
ANR	5097731	Identifier	cs		5096082	1					
ANR	5097732	CFGEntryNode	ENTRY		5096082		True				
ANR	5097733	CFGExitNode	EXIT		5096082		True				
ANR	5097734	InfiniteForNode	true		5096082		True				
ANR	5097735	Symbol	* FEAT_1_EDX		5096082						
ANR	5097736	Symbol	KVM_FEATURE_STEAL_TIME		5096082						
ANR	5097737	Symbol	FEAT_1_EDX		5096082						
ANR	5097738	Symbol	KVM_CAP_TSC_CONTROL		5096082						
ANR	5097739	Symbol	& c -> eax		5096082						
ANR	5097740	Symbol	& cpuid_data . cpuid		5096082						
ANR	5097741	Symbol	MCE_BANKS_DEF		5096082						
ANR	5097742	Symbol	kvm_get_mce_cap_supported		5096082						
ANR	5097743	Symbol	CPUID_EXT_SMX		5096082						
ANR	5097744	Symbol	KVM_SET_TSC_KHZ		5096082						
ANR	5097745	Symbol	c -> ecx		5096082						
ANR	5097746	Symbol	cpu_update_state		5096082						
ANR	5097747	Symbol	cpuid_data . cpuid . padding		5096082						
ANR	5097748	Symbol	* FEAT_KVM		5096082						
ANR	5097749	Symbol	cpuid_data		5096082						
ANR	5097750	Symbol	cpu -> hyperv_spinlock_attempts		5096082						
ANR	5097751	Symbol	c -> index		5096082						
ANR	5097752	Symbol	cpuid_i		5096082						
ANR	5097753	Symbol	banks		5096082						
ANR	5097754	Symbol	KVM_X86_SETUP_MCE		5096082						
ANR	5097755	Symbol	cpuid_data . cpuid . nent		5096082						
ANR	5097756	Symbol	HYPERV_CPUID_VERSION		5096082						
ANR	5097757	Symbol	KVM_FEATURE_ASYNC_PF		5096082						
ANR	5097758	Symbol	& unused		5096082						
ANR	5097759	Symbol	* cs		5096082						
ANR	5097760	Symbol	& c -> ebx		5096082						
ANR	5097761	Symbol	& mcg_cap		5096082						
ANR	5097762	Symbol	c -> edx		5096082						
ANR	5097763	Symbol	unused		5096082						
ANR	5097764	Symbol	HYPERV_CPUID_MIN		5096082						
ANR	5097765	Symbol	has_msr_feature_control		5096082						
ANR	5097766	Symbol	* * env		5096082						
ANR	5097767	Symbol	signature		5096082						
ANR	5097768	Symbol	& cpuid_data		5096082						
ANR	5097769	Symbol	env -> cpuid_version		5096082						
ANR	5097770	Symbol	hyperv_enabled		5096082						
ANR	5097771	Symbol	KVM_CPUID_FLAG_STATE_READ_NEXT		5096082						
ANR	5097772	Symbol	& c -> ecx		5096082						
ANR	5097773	Symbol	KVM_FEATURE_PV_EOI		5096082						
ANR	5097774	Symbol	KVM_CPUID_FLAG_STATEFUL_FUNC		5096082						
ANR	5097775	Symbol	c		5096082						
ANR	5097776	Symbol	HV_X64_MSR_HYPERCALL_AVAILABLE		5096082						
ANR	5097777	Symbol	& banks		5096082						
ANR	5097778	Symbol	i		5096082						
ANR	5097779	Symbol	j		5096082						
ANR	5097780	Symbol	KVM_SET_CPUID2		5096082						
ANR	5097781	Symbol	cs		5096082						
ANR	5097782	Symbol	cpu -> hyperv_vapic		5096082						
ANR	5097783	Symbol	env -> tsc_khz		5096082						
ANR	5097784	Symbol	r		5096082						
ANR	5097785	Symbol	KVM_CPUID_FEATURES		5096082						
ANR	5097786	Symbol	& c -> edx		5096082						
ANR	5097787	Symbol	cpuid_data . cpuid		5096082						
ANR	5097788	Symbol	cpu -> hyperv_relaxed_timing		5096082						
ANR	5097789	Symbol	kvm_check_extension		5096082						
ANR	5097790	Symbol	env -> mcg_cap		5096082						
ANR	5097791	Symbol	KVM_CPUID_SIGNATURE_NEXT		5096082						
ANR	5097792	Symbol	& ver		5096082						
ANR	5097793	Symbol	c -> function		5096082						
ANR	5097794	Symbol	KVM_CPUID_FLAG_SIGNIFCANT_INDEX		5096082						
ANR	5097795	Symbol	env -> cpuid_xlevel2		5096082						
ANR	5097796	Symbol	MAX_GP_COUNTERS		5096082						
ANR	5097797	Symbol	limit		5096082						
ANR	5097798	Symbol	HYPERV_CPUID_ENLIGHTMENT_INFO		5096082						
ANR	5097799	Symbol	KVM_MAX_CPUID_ENTRIES		5096082						
ANR	5097800	Symbol	kvm_vcpu_ioctl		5096082						
ANR	5097801	Symbol	ret		5096082						
ANR	5097802	Symbol	ver		5096082						
ANR	5097803	Symbol	* env		5096082						
ANR	5097804	Symbol	cpu		5096082						
ANR	5097805	Symbol	& limit		5096082						
ANR	5097806	Symbol	num_architectural_pmu_counters		5096082						
ANR	5097807	Symbol	HV_X64_RELAXED_TIMING_RECOMMENDED		5096082						
ANR	5097808	Symbol	stderr		5096082						
ANR	5097809	Symbol	strerror		5096082						
ANR	5097810	Symbol	HV_X64_APIC_ACCESS_RECOMMENDED		5096082						
ANR	5097811	Symbol	cpuid_data . entries		5096082						
ANR	5097812	Symbol	env -> features		5096082						
ANR	5097813	Symbol	HYPERV_CPUID_FEATURES		5096082						
ANR	5097814	Symbol	has_msr_async_pf_en		5096082						
ANR	5097815	Symbol	true		5096082						
ANR	5097816	Symbol	cpuid_find_entry		5096082						
ANR	5097817	Symbol	c -> flags		5096082						
ANR	5097818	Symbol	X86_CPU		5096082						
ANR	5097819	Symbol	MCE_CAP_DEF		5096082						
ANR	5097820	Symbol	kvm_has_xsave		5096082						
ANR	5097821	Symbol	has_msr_pv_eoi_en		5096082						
ANR	5097822	Symbol	cs -> kvm_state		5096082						
ANR	5097823	Symbol	env -> kvm_xsave_buf		5096082						
ANR	5097824	Symbol	has_msr_architectural_pmu		5096082						
ANR	5097825	Symbol	times		5096082						
ANR	5097826	Symbol	c -> eax		5096082						
ANR	5097827	Symbol	CPUID_EXT_VMX		5096082						
ANR	5097828	Symbol	KVM_CPUID_SIGNATURE		5096082						
ANR	5097829	Symbol	FEAT_KVM		5096082						
ANR	5097830	Symbol	HV_X64_MSR_APIC_ACCESS_AVAILABLE		5096082						
ANR	5097831	Symbol	HYPERV_CPUID_IMPLEMENT_LIMITS		5096082						
ANR	5097832	Symbol	CPUID_MCE		5096082						
ANR	5097833	Symbol	* env -> features		5096082						
ANR	5097834	Symbol	mcg_cap		5096082						
ANR	5097835	Symbol	env		5096082						
ANR	5097836	Symbol	* c		5096082						
ANR	5097837	Symbol	* cpu		5096082						
ANR	5097838	Symbol	& cpu -> env		5096082						
ANR	5097839	Symbol	qemu_memalign		5096082						
ANR	5097840	Symbol	* signature		5096082						
ANR	5097841	Symbol	KVM_CAP_MCE		5096082						
ANR	5097842	Symbol	c -> ebx		5096082						
ANR	5097843	Symbol	CPUID_MCA		5096082						
ANR	5097844	Symbol	has_msr_kvm_steal_time		5096082						
