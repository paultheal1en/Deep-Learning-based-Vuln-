command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	900003	File	/home/p4ultr4n/workplace/ReVeal/raw_code/avpriv_adx_decode_header_0.c								
ANR	900004	Function	avpriv_adx_decode_header	1:0:0:1452							
ANR	900005	FunctionDef	"avpriv_adx_decode_header (AVCodecContext * avctx , const uint8_t * buf , int bufsize , int * header_size , int * coeff)"		900004	0					
ANR	900006	CompoundStatement		5:0:146:1452	900004	0					
ANR	900007	IdentifierDeclStatement	"int offset , cutoff ;"	7:4:153:171	900004	0	True				
ANR	900008	IdentifierDecl	offset		900004	0					
ANR	900009	IdentifierDeclType	int		900004	0					
ANR	900010	Identifier	offset		900004	1					
ANR	900011	IdentifierDecl	cutoff		900004	1					
ANR	900012	IdentifierDeclType	int		900004	0					
ANR	900013	Identifier	cutoff		900004	1					
ANR	900014	IfStatement	if ( bufsize < 24 )		900004	1					
ANR	900015	Condition	bufsize < 24	11:8:184:195	900004	0	True				
ANR	900016	RelationalExpression	bufsize < 24		900004	0		<			
ANR	900017	Identifier	bufsize		900004	0					
ANR	900018	PrimaryExpression	24		900004	1					
ANR	900019	ReturnStatement	return AVERROR_INVALIDDATA ;	13:8:207:233	900004	1	True				
ANR	900020	Identifier	AVERROR_INVALIDDATA		900004	0					
ANR	900021	IfStatement	if ( AV_RB16 ( buf ) != 0x8000 )		900004	2					
ANR	900022	Condition	AV_RB16 ( buf ) != 0x8000	17:8:246:267	900004	0	True				
ANR	900023	EqualityExpression	AV_RB16 ( buf ) != 0x8000		900004	0		!=			
ANR	900024	CallExpression	AV_RB16 ( buf )		900004	0					
ANR	900025	Callee	AV_RB16		900004	0					
ANR	900026	Identifier	AV_RB16		900004	0					
ANR	900027	ArgumentList	buf		900004	1					
ANR	900028	Argument	buf		900004	0					
ANR	900029	Identifier	buf		900004	0					
ANR	900030	PrimaryExpression	0x8000		900004	1					
ANR	900031	ReturnStatement	return AVERROR_INVALIDDATA ;	19:8:279:305	900004	1	True				
ANR	900032	Identifier	AVERROR_INVALIDDATA		900004	0					
ANR	900033	ExpressionStatement	offset = AV_RB16 ( buf + 2 ) + 4	21:4:312:341	900004	3	True				
ANR	900034	AssignmentExpression	offset = AV_RB16 ( buf + 2 ) + 4		900004	0		=			
ANR	900035	Identifier	offset		900004	0					
ANR	900036	AdditiveExpression	AV_RB16 ( buf + 2 ) + 4		900004	1		+			
ANR	900037	CallExpression	AV_RB16 ( buf + 2 )		900004	0					
ANR	900038	Callee	AV_RB16		900004	0					
ANR	900039	Identifier	AV_RB16		900004	0					
ANR	900040	ArgumentList	buf + 2		900004	1					
ANR	900041	Argument	buf + 2		900004	0					
ANR	900042	AdditiveExpression	buf + 2		900004	0		+			
ANR	900043	Identifier	buf		900004	0					
ANR	900044	PrimaryExpression	2		900004	1					
ANR	900045	PrimaryExpression	4		900004	1					
ANR	900046	IfStatement	"if ( bufsize >= offset && memcmp ( buf + offset - 6 , ""(c)CRI"" , 6 ) )"		900004	4					
ANR	900047	Condition	"bufsize >= offset && memcmp ( buf + offset - 6 , ""(c)CRI"" , 6 )"	27:8:426:483	900004	0	True				
ANR	900048	AndExpression	"bufsize >= offset && memcmp ( buf + offset - 6 , ""(c)CRI"" , 6 )"		900004	0		&&			
ANR	900049	RelationalExpression	bufsize >= offset		900004	0		>=			
ANR	900050	Identifier	bufsize		900004	0					
ANR	900051	Identifier	offset		900004	1					
ANR	900052	CallExpression	"memcmp ( buf + offset - 6 , ""(c)CRI"" , 6 )"		900004	1					
ANR	900053	Callee	memcmp		900004	0					
ANR	900054	Identifier	memcmp		900004	0					
ANR	900055	ArgumentList	buf + offset - 6		900004	1					
ANR	900056	Argument	buf + offset - 6		900004	0					
ANR	900057	AdditiveExpression	buf + offset - 6		900004	0		+			
ANR	900058	Identifier	buf		900004	0					
ANR	900059	AdditiveExpression	offset - 6		900004	1		-			
ANR	900060	Identifier	offset		900004	0					
ANR	900061	PrimaryExpression	6		900004	1					
ANR	900062	Argument	"""(c)CRI"""		900004	1					
ANR	900063	PrimaryExpression	"""(c)CRI"""		900004	0					
ANR	900064	Argument	6		900004	2					
ANR	900065	PrimaryExpression	6		900004	0					
ANR	900066	ReturnStatement	return AVERROR_INVALIDDATA ;	29:8:495:521	900004	1	True				
ANR	900067	Identifier	AVERROR_INVALIDDATA		900004	0					
ANR	900068	IfStatement	if ( buf [ 4 ] != 3 || buf [ 5 ] != 18 || buf [ 6 ] != 4 )		900004	5					
ANR	900069	Condition	buf [ 4 ] != 3 || buf [ 5 ] != 18 || buf [ 6 ] != 4	35:8:595:636	900004	0	True				
ANR	900070	OrExpression	buf [ 4 ] != 3 || buf [ 5 ] != 18 || buf [ 6 ] != 4		900004	0		||			
ANR	900071	EqualityExpression	buf [ 4 ] != 3		900004	0		!=			
ANR	900072	ArrayIndexing	buf [ 4 ]		900004	0					
ANR	900073	Identifier	buf		900004	0					
ANR	900074	PrimaryExpression	4		900004	1					
ANR	900075	PrimaryExpression	3		900004	1					
ANR	900076	OrExpression	buf [ 5 ] != 18 || buf [ 6 ] != 4		900004	1		||			
ANR	900077	EqualityExpression	buf [ 5 ] != 18		900004	0		!=			
ANR	900078	ArrayIndexing	buf [ 5 ]		900004	0					
ANR	900079	Identifier	buf		900004	0					
ANR	900080	PrimaryExpression	5		900004	1					
ANR	900081	PrimaryExpression	18		900004	1					
ANR	900082	EqualityExpression	buf [ 6 ] != 4		900004	1		!=			
ANR	900083	ArrayIndexing	buf [ 6 ]		900004	0					
ANR	900084	Identifier	buf		900004	0					
ANR	900085	PrimaryExpression	6		900004	1					
ANR	900086	PrimaryExpression	4		900004	1					
ANR	900087	CompoundStatement		31:52:492:492	900004	1					
ANR	900088	ExpressionStatement	"avpriv_request_sample ( avctx , ""Support for this ADX format"" )"	37:8:650:709	900004	0	True				
ANR	900089	CallExpression	"avpriv_request_sample ( avctx , ""Support for this ADX format"" )"		900004	0					
ANR	900090	Callee	avpriv_request_sample		900004	0					
ANR	900091	Identifier	avpriv_request_sample		900004	0					
ANR	900092	ArgumentList	avctx		900004	1					
ANR	900093	Argument	avctx		900004	0					
ANR	900094	Identifier	avctx		900004	0					
ANR	900095	Argument	"""Support for this ADX format"""		900004	1					
ANR	900096	PrimaryExpression	"""Support for this ADX format"""		900004	0					
ANR	900097	ReturnStatement	return AVERROR_PATCHWELCOME ;	39:8:720:747	900004	1	True				
ANR	900098	Identifier	AVERROR_PATCHWELCOME		900004	0					
ANR	900099	ExpressionStatement	avctx -> channels = buf [ 7 ]	47:4:783:807	900004	6	True				
ANR	900100	AssignmentExpression	avctx -> channels = buf [ 7 ]		900004	0		=			
ANR	900101	PtrMemberAccess	avctx -> channels		900004	0					
ANR	900102	Identifier	avctx		900004	0					
ANR	900103	Identifier	channels		900004	1					
ANR	900104	ArrayIndexing	buf [ 7 ]		900004	1					
ANR	900105	Identifier	buf		900004	0					
ANR	900106	PrimaryExpression	7		900004	1					
ANR	900107	IfStatement	if ( avctx -> channels <= 0 || avctx -> channels > 2 )		900004	7					
ANR	900108	Condition	avctx -> channels <= 0 || avctx -> channels > 2	49:8:818:860	900004	0	True				
ANR	900109	OrExpression	avctx -> channels <= 0 || avctx -> channels > 2		900004	0		||			
ANR	900110	RelationalExpression	avctx -> channels <= 0		900004	0		<=			
ANR	900111	PtrMemberAccess	avctx -> channels		900004	0					
ANR	900112	Identifier	avctx		900004	0					
ANR	900113	Identifier	channels		900004	1					
ANR	900114	PrimaryExpression	0		900004	1					
ANR	900115	RelationalExpression	avctx -> channels > 2		900004	1		>			
ANR	900116	PtrMemberAccess	avctx -> channels		900004	0					
ANR	900117	Identifier	avctx		900004	0					
ANR	900118	Identifier	channels		900004	1					
ANR	900119	PrimaryExpression	2		900004	1					
ANR	900120	ReturnStatement	return AVERROR_INVALIDDATA ;	51:8:872:898	900004	1	True				
ANR	900121	Identifier	AVERROR_INVALIDDATA		900004	0					
ANR	900122	ExpressionStatement	avctx -> sample_rate = AV_RB32 ( buf + 8 )	57:4:930:967	900004	8	True				
ANR	900123	AssignmentExpression	avctx -> sample_rate = AV_RB32 ( buf + 8 )		900004	0		=			
ANR	900124	PtrMemberAccess	avctx -> sample_rate		900004	0					
ANR	900125	Identifier	avctx		900004	0					
ANR	900126	Identifier	sample_rate		900004	1					
ANR	900127	CallExpression	AV_RB32 ( buf + 8 )		900004	1					
ANR	900128	Callee	AV_RB32		900004	0					
ANR	900129	Identifier	AV_RB32		900004	0					
ANR	900130	ArgumentList	buf + 8		900004	1					
ANR	900131	Argument	buf + 8		900004	0					
ANR	900132	AdditiveExpression	buf + 8		900004	0		+			
ANR	900133	Identifier	buf		900004	0					
ANR	900134	PrimaryExpression	8		900004	1					
ANR	900135	IfStatement	if ( avctx -> sample_rate < 1 || avctx -> sample_rate > INT_MAX / ( avctx -> channels * BLOCK_SIZE * 8 ) )		900004	9					
ANR	900136	Condition	avctx -> sample_rate < 1 || avctx -> sample_rate > INT_MAX / ( avctx -> channels * BLOCK_SIZE * 8 )	59:8:978:1077	900004	0	True				
ANR	900137	OrExpression	avctx -> sample_rate < 1 || avctx -> sample_rate > INT_MAX / ( avctx -> channels * BLOCK_SIZE * 8 )		900004	0		||			
ANR	900138	RelationalExpression	avctx -> sample_rate < 1		900004	0		<			
ANR	900139	PtrMemberAccess	avctx -> sample_rate		900004	0					
ANR	900140	Identifier	avctx		900004	0					
ANR	900141	Identifier	sample_rate		900004	1					
ANR	900142	PrimaryExpression	1		900004	1					
ANR	900143	RelationalExpression	avctx -> sample_rate > INT_MAX / ( avctx -> channels * BLOCK_SIZE * 8 )		900004	1		>			
ANR	900144	PtrMemberAccess	avctx -> sample_rate		900004	0					
ANR	900145	Identifier	avctx		900004	0					
ANR	900146	Identifier	sample_rate		900004	1					
ANR	900147	MultiplicativeExpression	INT_MAX / ( avctx -> channels * BLOCK_SIZE * 8 )		900004	1		/			
ANR	900148	Identifier	INT_MAX		900004	0					
ANR	900149	MultiplicativeExpression	avctx -> channels * BLOCK_SIZE * 8		900004	1		*			
ANR	900150	PtrMemberAccess	avctx -> channels		900004	0					
ANR	900151	Identifier	avctx		900004	0					
ANR	900152	Identifier	channels		900004	1					
ANR	900153	MultiplicativeExpression	BLOCK_SIZE * 8		900004	1		*			
ANR	900154	Identifier	BLOCK_SIZE		900004	0					
ANR	900155	PrimaryExpression	8		900004	1					
ANR	900156	ReturnStatement	return AVERROR_INVALIDDATA ;	63:8:1089:1115	900004	1	True				
ANR	900157	Identifier	AVERROR_INVALIDDATA		900004	0					
ANR	900158	ExpressionStatement	avctx -> bit_rate = avctx -> sample_rate * avctx -> channels * BLOCK_SIZE * 8 / BLOCK_SAMPLES	69:4:1144:1231	900004	10	True				
ANR	900159	AssignmentExpression	avctx -> bit_rate = avctx -> sample_rate * avctx -> channels * BLOCK_SIZE * 8 / BLOCK_SAMPLES		900004	0		=			
ANR	900160	PtrMemberAccess	avctx -> bit_rate		900004	0					
ANR	900161	Identifier	avctx		900004	0					
ANR	900162	Identifier	bit_rate		900004	1					
ANR	900163	MultiplicativeExpression	avctx -> sample_rate * avctx -> channels * BLOCK_SIZE * 8 / BLOCK_SAMPLES		900004	1		*			
ANR	900164	PtrMemberAccess	avctx -> sample_rate		900004	0					
ANR	900165	Identifier	avctx		900004	0					
ANR	900166	Identifier	sample_rate		900004	1					
ANR	900167	MultiplicativeExpression	avctx -> channels * BLOCK_SIZE * 8 / BLOCK_SAMPLES		900004	1		*			
ANR	900168	PtrMemberAccess	avctx -> channels		900004	0					
ANR	900169	Identifier	avctx		900004	0					
ANR	900170	Identifier	channels		900004	1					
ANR	900171	MultiplicativeExpression	BLOCK_SIZE * 8 / BLOCK_SAMPLES		900004	1		*			
ANR	900172	Identifier	BLOCK_SIZE		900004	0					
ANR	900173	MultiplicativeExpression	8 / BLOCK_SAMPLES		900004	1		/			
ANR	900174	PrimaryExpression	8		900004	0					
ANR	900175	Identifier	BLOCK_SAMPLES		900004	1					
ANR	900176	IfStatement	if ( coeff )		900004	11					
ANR	900177	Condition	coeff	75:8:1272:1276	900004	0	True				
ANR	900178	Identifier	coeff		900004	0					
ANR	900179	CompoundStatement		71:15:1132:1132	900004	1					
ANR	900180	ExpressionStatement	cutoff = AV_RB16 ( buf + 16 )	77:8:1290:1316	900004	0	True				
ANR	900181	AssignmentExpression	cutoff = AV_RB16 ( buf + 16 )		900004	0		=			
ANR	900182	Identifier	cutoff		900004	0					
ANR	900183	CallExpression	AV_RB16 ( buf + 16 )		900004	1					
ANR	900184	Callee	AV_RB16		900004	0					
ANR	900185	Identifier	AV_RB16		900004	0					
ANR	900186	ArgumentList	buf + 16		900004	1					
ANR	900187	Argument	buf + 16		900004	0					
ANR	900188	AdditiveExpression	buf + 16		900004	0		+			
ANR	900189	Identifier	buf		900004	0					
ANR	900190	PrimaryExpression	16		900004	1					
ANR	900191	ExpressionStatement	"ff_adx_calculate_coeffs ( cutoff , avctx -> sample_rate , COEFF_BITS , coeff )"	79:8:1327:1397	900004	1	True				
ANR	900192	CallExpression	"ff_adx_calculate_coeffs ( cutoff , avctx -> sample_rate , COEFF_BITS , coeff )"		900004	0					
ANR	900193	Callee	ff_adx_calculate_coeffs		900004	0					
ANR	900194	Identifier	ff_adx_calculate_coeffs		900004	0					
ANR	900195	ArgumentList	cutoff		900004	1					
ANR	900196	Argument	cutoff		900004	0					
ANR	900197	Identifier	cutoff		900004	0					
ANR	900198	Argument	avctx -> sample_rate		900004	1					
ANR	900199	PtrMemberAccess	avctx -> sample_rate		900004	0					
ANR	900200	Identifier	avctx		900004	0					
ANR	900201	Identifier	sample_rate		900004	1					
ANR	900202	Argument	COEFF_BITS		900004	2					
ANR	900203	Identifier	COEFF_BITS		900004	0					
ANR	900204	Argument	coeff		900004	3					
ANR	900205	Identifier	coeff		900004	0					
ANR	900206	ExpressionStatement	* header_size = offset	85:4:1413:1434	900004	12	True				
ANR	900207	AssignmentExpression	* header_size = offset		900004	0		=			
ANR	900208	UnaryOperationExpression	* header_size		900004	0					
ANR	900209	UnaryOperator	*		900004	0					
ANR	900210	Identifier	header_size		900004	1					
ANR	900211	Identifier	offset		900004	1					
ANR	900212	ReturnStatement	return 0 ;	87:4:1441:1449	900004	13	True				
ANR	900213	PrimaryExpression	0		900004	0					
ANR	900214	ReturnType	int		900004	1					
ANR	900215	Identifier	avpriv_adx_decode_header		900004	2					
ANR	900216	ParameterList	"AVCodecContext * avctx , const uint8_t * buf , int bufsize , int * header_size , int * coeff"		900004	3					
ANR	900217	Parameter	AVCodecContext * avctx	1:29:29:49	900004	0	True				
ANR	900218	ParameterType	AVCodecContext *		900004	0					
ANR	900219	Identifier	avctx		900004	1					
ANR	900220	Parameter	const uint8_t * buf	1:52:52:69	900004	1	True				
ANR	900221	ParameterType	const uint8_t *		900004	0					
ANR	900222	Identifier	buf		900004	1					
ANR	900223	Parameter	int bufsize	3:29:102:112	900004	2	True				
ANR	900224	ParameterType	int		900004	0					
ANR	900225	Identifier	bufsize		900004	1					
ANR	900226	Parameter	int * header_size	3:42:115:130	900004	3	True				
ANR	900227	ParameterType	int *		900004	0					
ANR	900228	Identifier	header_size		900004	1					
ANR	900229	Parameter	int * coeff	3:60:133:142	900004	4	True				
ANR	900230	ParameterType	int *		900004	0					
ANR	900231	Identifier	coeff		900004	1					
ANR	900232	CFGEntryNode	ENTRY		900004		True				
ANR	900233	CFGExitNode	EXIT		900004		True				
ANR	900234	Symbol	* buf		900004						
ANR	900235	Symbol	offset		900004						
ANR	900236	Symbol	COEFF_BITS		900004						
ANR	900237	Symbol	header_size		900004						
ANR	900238	Symbol	bufsize		900004						
ANR	900239	Symbol	BLOCK_SIZE		900004						
ANR	900240	Symbol	BLOCK_SAMPLES		900004						
ANR	900241	Symbol	AV_RB16		900004						
ANR	900242	Symbol	avctx -> sample_rate		900004						
ANR	900243	Symbol	AV_RB32		900004						
ANR	900244	Symbol	avctx -> channels		900004						
ANR	900245	Symbol	buf		900004						
ANR	900246	Symbol	* avctx		900004						
ANR	900247	Symbol	memcmp		900004						
ANR	900248	Symbol	avctx -> bit_rate		900004						
ANR	900249	Symbol	* header_size		900004						
ANR	900250	Symbol	INT_MAX		900004						
ANR	900251	Symbol	AVERROR_PATCHWELCOME		900004						
ANR	900252	Symbol	AVERROR_INVALIDDATA		900004						
ANR	900253	Symbol	cutoff		900004						
ANR	900254	Symbol	avctx		900004						
ANR	900255	Symbol	coeff		900004						
