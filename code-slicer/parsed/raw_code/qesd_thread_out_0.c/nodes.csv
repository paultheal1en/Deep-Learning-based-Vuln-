command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	7062831	File	/home/p4ultr4n/workplace/ReVeal/raw_code/qesd_thread_out_0.c								
ANR	7062832	Function	qesd_thread_out	1:0:0:2247							
ANR	7062833	FunctionDef	qesd_thread_out (void * arg)		7062832	0					
ANR	7062834	CompoundStatement		3:0:42:2247	7062832	0					
ANR	7062835	IdentifierDeclStatement	ESDVoiceOut * esd = arg ;	5:4:49:71	7062832	0	True				
ANR	7062836	IdentifierDecl	* esd = arg		7062832	0					
ANR	7062837	IdentifierDeclType	ESDVoiceOut *		7062832	0					
ANR	7062838	Identifier	esd		7062832	1					
ANR	7062839	AssignmentExpression	* esd = arg		7062832	2		=			
ANR	7062840	Identifier	arg		7062832	0					
ANR	7062841	Identifier	arg		7062832	1					
ANR	7062842	IdentifierDeclStatement	HWVoiceOut * hw = & esd -> hw ;	7:4:78:103	7062832	1	True				
ANR	7062843	IdentifierDecl	* hw = & esd -> hw		7062832	0					
ANR	7062844	IdentifierDeclType	HWVoiceOut *		7062832	0					
ANR	7062845	Identifier	hw		7062832	1					
ANR	7062846	AssignmentExpression	* hw = & esd -> hw		7062832	2		=			
ANR	7062847	Identifier	hw		7062832	0					
ANR	7062848	UnaryOperationExpression	& esd -> hw		7062832	1					
ANR	7062849	UnaryOperator	&		7062832	0					
ANR	7062850	PtrMemberAccess	esd -> hw		7062832	1					
ANR	7062851	Identifier	esd		7062832	0					
ANR	7062852	Identifier	hw		7062832	1					
ANR	7062853	IdentifierDeclStatement	int threshold ;	9:4:110:123	7062832	2	True				
ANR	7062854	IdentifierDecl	threshold		7062832	0					
ANR	7062855	IdentifierDeclType	int		7062832	0					
ANR	7062856	Identifier	threshold		7062832	1					
ANR	7062857	ExpressionStatement	threshold = conf . divisor ? hw -> samples / conf . divisor : 0	13:4:132:189	7062832	3	True				
ANR	7062858	AssignmentExpression	threshold = conf . divisor ? hw -> samples / conf . divisor : 0		7062832	0		=			
ANR	7062859	Identifier	threshold		7062832	0					
ANR	7062860	ConditionalExpression	conf . divisor ? hw -> samples / conf . divisor : 0		7062832	1					
ANR	7062861	Condition	conf . divisor		7062832	0					
ANR	7062862	MemberAccess	conf . divisor		7062832	0					
ANR	7062863	Identifier	conf		7062832	0					
ANR	7062864	Identifier	divisor		7062832	1					
ANR	7062865	MultiplicativeExpression	hw -> samples / conf . divisor		7062832	1		/			
ANR	7062866	PtrMemberAccess	hw -> samples		7062832	0					
ANR	7062867	Identifier	hw		7062832	0					
ANR	7062868	Identifier	samples		7062832	1					
ANR	7062869	MemberAccess	conf . divisor		7062832	1					
ANR	7062870	Identifier	conf		7062832	0					
ANR	7062871	Identifier	divisor		7062832	1					
ANR	7062872	PrimaryExpression	0		7062832	2					
ANR	7062873	IfStatement	"if ( audio_pt_lock ( & esd -> pt , AUDIO_FUNC ) )"		7062832	4					
ANR	7062874	Condition	"audio_pt_lock ( & esd -> pt , AUDIO_FUNC )"	17:8:202:237	7062832	0	True				
ANR	7062875	CallExpression	"audio_pt_lock ( & esd -> pt , AUDIO_FUNC )"		7062832	0					
ANR	7062876	Callee	audio_pt_lock		7062832	0					
ANR	7062877	Identifier	audio_pt_lock		7062832	0					
ANR	7062878	ArgumentList	& esd -> pt		7062832	1					
ANR	7062879	Argument	& esd -> pt		7062832	0					
ANR	7062880	UnaryOperationExpression	& esd -> pt		7062832	0					
ANR	7062881	UnaryOperator	&		7062832	0					
ANR	7062882	PtrMemberAccess	esd -> pt		7062832	1					
ANR	7062883	Identifier	esd		7062832	0					
ANR	7062884	Identifier	pt		7062832	1					
ANR	7062885	Argument	AUDIO_FUNC		7062832	1					
ANR	7062886	Identifier	AUDIO_FUNC		7062832	0					
ANR	7062887	CompoundStatement		15:46:197:197	7062832	1					
ANR	7062888	ReturnStatement	return NULL ;	19:8:251:262	7062832	0	True				
ANR	7062889	Identifier	NULL		7062832	0					
ANR	7062890	ForStatement	for ( ; ; )		7062832	5					
ANR	7062891	CompoundStatement		25:8:255:277	7062832	0					
ANR	7062892	IdentifierDeclStatement	"int decr , to_mix , rpos ;"	27:8:298:320	7062832	0	True				
ANR	7062893	IdentifierDecl	decr		7062832	0					
ANR	7062894	IdentifierDeclType	int		7062832	0					
ANR	7062895	Identifier	decr		7062832	1					
ANR	7062896	IdentifierDecl	to_mix		7062832	1					
ANR	7062897	IdentifierDeclType	int		7062832	0					
ANR	7062898	Identifier	to_mix		7062832	1					
ANR	7062899	IdentifierDecl	rpos		7062832	2					
ANR	7062900	IdentifierDeclType	int		7062832	0					
ANR	7062901	Identifier	rpos		7062832	1					
ANR	7062902	ForStatement	for ( ; ; )		7062832	1					
ANR	7062903	CompoundStatement		29:17:299:299	7062832	0					
ANR	7062904	IfStatement	if ( esd -> done )		7062832	0					
ANR	7062905	Condition	esd -> done	33:16:361:369	7062832	0	True				
ANR	7062906	PtrMemberAccess	esd -> done		7062832	0					
ANR	7062907	Identifier	esd		7062832	0					
ANR	7062908	Identifier	done		7062832	1					
ANR	7062909	CompoundStatement		31:27:329:329	7062832	1					
ANR	7062910	GotoStatement	goto exit ;	35:16:391:400	7062832	0	True				
ANR	7062911	Identifier	exit		7062832	0					
ANR	7062912	IfStatement	if ( esd -> live > threshold )		7062832	1					
ANR	7062913	Condition	esd -> live > threshold	41:16:436:456	7062832	0	True				
ANR	7062914	RelationalExpression	esd -> live > threshold		7062832	0		>			
ANR	7062915	PtrMemberAccess	esd -> live		7062832	0					
ANR	7062916	Identifier	esd		7062832	0					
ANR	7062917	Identifier	live		7062832	1					
ANR	7062918	Identifier	threshold		7062832	1					
ANR	7062919	CompoundStatement		39:39:416:416	7062832	1					
ANR	7062920	BreakStatement	break ;	43:16:478:483	7062832	0	True				
ANR	7062921	IfStatement	"if ( audio_pt_wait ( & esd -> pt , AUDIO_FUNC ) )"		7062832	2					
ANR	7062922	Condition	"audio_pt_wait ( & esd -> pt , AUDIO_FUNC )"	49:16:519:554	7062832	0	True				
ANR	7062923	CallExpression	"audio_pt_wait ( & esd -> pt , AUDIO_FUNC )"		7062832	0					
ANR	7062924	Callee	audio_pt_wait		7062832	0					
ANR	7062925	Identifier	audio_pt_wait		7062832	0					
ANR	7062926	ArgumentList	& esd -> pt		7062832	1					
ANR	7062927	Argument	& esd -> pt		7062832	0					
ANR	7062928	UnaryOperationExpression	& esd -> pt		7062832	0					
ANR	7062929	UnaryOperator	&		7062832	0					
ANR	7062930	PtrMemberAccess	esd -> pt		7062832	1					
ANR	7062931	Identifier	esd		7062832	0					
ANR	7062932	Identifier	pt		7062832	1					
ANR	7062933	Argument	AUDIO_FUNC		7062832	1					
ANR	7062934	Identifier	AUDIO_FUNC		7062832	0					
ANR	7062935	CompoundStatement		47:54:514:514	7062832	1					
ANR	7062936	GotoStatement	goto exit ;	51:16:576:585	7062832	0	True				
ANR	7062937	Identifier	exit		7062832	0					
ANR	7062938	ExpressionStatement	decr = to_mix = esd -> live	59:8:624:649	7062832	2	True				
ANR	7062939	AssignmentExpression	decr = to_mix = esd -> live		7062832	0		=			
ANR	7062940	Identifier	decr		7062832	0					
ANR	7062941	AssignmentExpression	to_mix = esd -> live		7062832	1		=			
ANR	7062942	Identifier	to_mix		7062832	0					
ANR	7062943	PtrMemberAccess	esd -> live		7062832	1					
ANR	7062944	Identifier	esd		7062832	0					
ANR	7062945	Identifier	live		7062832	1					
ANR	7062946	ExpressionStatement	rpos = hw -> rpos	61:8:660:675	7062832	3	True				
ANR	7062947	AssignmentExpression	rpos = hw -> rpos		7062832	0		=			
ANR	7062948	Identifier	rpos		7062832	0					
ANR	7062949	PtrMemberAccess	hw -> rpos		7062832	1					
ANR	7062950	Identifier	hw		7062832	0					
ANR	7062951	Identifier	rpos		7062832	1					
ANR	7062952	IfStatement	"if ( audio_pt_unlock ( & esd -> pt , AUDIO_FUNC ) )"		7062832	4					
ANR	7062953	Condition	"audio_pt_unlock ( & esd -> pt , AUDIO_FUNC )"	65:12:692:729	7062832	0	True				
ANR	7062954	CallExpression	"audio_pt_unlock ( & esd -> pt , AUDIO_FUNC )"		7062832	0					
ANR	7062955	Callee	audio_pt_unlock		7062832	0					
ANR	7062956	Identifier	audio_pt_unlock		7062832	0					
ANR	7062957	ArgumentList	& esd -> pt		7062832	1					
ANR	7062958	Argument	& esd -> pt		7062832	0					
ANR	7062959	UnaryOperationExpression	& esd -> pt		7062832	0					
ANR	7062960	UnaryOperator	&		7062832	0					
ANR	7062961	PtrMemberAccess	esd -> pt		7062832	1					
ANR	7062962	Identifier	esd		7062832	0					
ANR	7062963	Identifier	pt		7062832	1					
ANR	7062964	Argument	AUDIO_FUNC		7062832	1					
ANR	7062965	Identifier	AUDIO_FUNC		7062832	0					
ANR	7062966	CompoundStatement		63:52:689:689	7062832	1					
ANR	7062967	ReturnStatement	return NULL ;	67:12:747:758	7062832	0	True				
ANR	7062968	Identifier	NULL		7062832	0					
ANR	7062969	WhileStatement	while ( to_mix )		7062832	5					
ANR	7062970	Condition	to_mix	73:15:789:794	7062832	0	True				
ANR	7062971	Identifier	to_mix		7062832	0					
ANR	7062972	CompoundStatement		77:12:864:901	7062832	1					
ANR	7062973	IdentifierDeclStatement	ssize_t written ;	75:12:812:827	7062832	0	True				
ANR	7062974	IdentifierDecl	written		7062832	0					
ANR	7062975	IdentifierDeclType	ssize_t		7062832	0					
ANR	7062976	Identifier	written		7062832	1					
ANR	7062977	IdentifierDeclStatement	"int chunk = audio_MIN ( to_mix , hw -> samples - rpos ) ;"	77:12:842:892	7062832	1	True				
ANR	7062978	IdentifierDecl	"chunk = audio_MIN ( to_mix , hw -> samples - rpos )"		7062832	0					
ANR	7062979	IdentifierDeclType	int		7062832	0					
ANR	7062980	Identifier	chunk		7062832	1					
ANR	7062981	AssignmentExpression	"chunk = audio_MIN ( to_mix , hw -> samples - rpos )"		7062832	2		=			
ANR	7062982	Identifier	chunk		7062832	0					
ANR	7062983	CallExpression	"audio_MIN ( to_mix , hw -> samples - rpos )"		7062832	1					
ANR	7062984	Callee	audio_MIN		7062832	0					
ANR	7062985	Identifier	audio_MIN		7062832	0					
ANR	7062986	ArgumentList	to_mix		7062832	1					
ANR	7062987	Argument	to_mix		7062832	0					
ANR	7062988	Identifier	to_mix		7062832	0					
ANR	7062989	Argument	hw -> samples - rpos		7062832	1					
ANR	7062990	AdditiveExpression	hw -> samples - rpos		7062832	0		-			
ANR	7062991	PtrMemberAccess	hw -> samples		7062832	0					
ANR	7062992	Identifier	hw		7062832	0					
ANR	7062993	Identifier	samples		7062832	1					
ANR	7062994	Identifier	rpos		7062832	1					
ANR	7062995	IdentifierDeclStatement	st_sample_t * src = hw -> mix_buf + rpos ;	79:12:907:944	7062832	2	True				
ANR	7062996	IdentifierDecl	* src = hw -> mix_buf + rpos		7062832	0					
ANR	7062997	IdentifierDeclType	st_sample_t *		7062832	0					
ANR	7062998	Identifier	src		7062832	1					
ANR	7062999	AssignmentExpression	* src = hw -> mix_buf + rpos		7062832	2		=			
ANR	7063000	Identifier	src		7062832	0					
ANR	7063001	AdditiveExpression	hw -> mix_buf + rpos		7062832	1		+			
ANR	7063002	PtrMemberAccess	hw -> mix_buf		7062832	0					
ANR	7063003	Identifier	hw		7062832	0					
ANR	7063004	Identifier	mix_buf		7062832	1					
ANR	7063005	Identifier	rpos		7062832	1					
ANR	7063006	ExpressionStatement	"hw -> clip ( esd -> pcm_buf , src , chunk )"	83:12:961:996	7062832	3	True				
ANR	7063007	CallExpression	"hw -> clip ( esd -> pcm_buf , src , chunk )"		7062832	0					
ANR	7063008	Callee	hw -> clip		7062832	0					
ANR	7063009	PtrMemberAccess	hw -> clip		7062832	0					
ANR	7063010	Identifier	hw		7062832	0					
ANR	7063011	Identifier	clip		7062832	1					
ANR	7063012	ArgumentList	esd -> pcm_buf		7062832	1					
ANR	7063013	Argument	esd -> pcm_buf		7062832	0					
ANR	7063014	PtrMemberAccess	esd -> pcm_buf		7062832	0					
ANR	7063015	Identifier	esd		7062832	0					
ANR	7063016	Identifier	pcm_buf		7062832	1					
ANR	7063017	Argument	src		7062832	1					
ANR	7063018	Identifier	src		7062832	0					
ANR	7063019	Argument	chunk		7062832	2					
ANR	7063020	Identifier	chunk		7062832	0					
ANR	7063021	Label	again :	87:8:1009:1014	7062832	4	True				
ANR	7063022	Identifier	again		7062832	0					
ANR	7063023	ExpressionStatement	"written = write ( esd -> fd , esd -> pcm_buf , chunk << hw -> info . shift )"	89:12:1029:1093	7062832	5	True				
ANR	7063024	AssignmentExpression	"written = write ( esd -> fd , esd -> pcm_buf , chunk << hw -> info . shift )"		7062832	0		=			
ANR	7063025	Identifier	written		7062832	0					
ANR	7063026	CallExpression	"write ( esd -> fd , esd -> pcm_buf , chunk << hw -> info . shift )"		7062832	1					
ANR	7063027	Callee	write		7062832	0					
ANR	7063028	Identifier	write		7062832	0					
ANR	7063029	ArgumentList	esd -> fd		7062832	1					
ANR	7063030	Argument	esd -> fd		7062832	0					
ANR	7063031	PtrMemberAccess	esd -> fd		7062832	0					
ANR	7063032	Identifier	esd		7062832	0					
ANR	7063033	Identifier	fd		7062832	1					
ANR	7063034	Argument	esd -> pcm_buf		7062832	1					
ANR	7063035	PtrMemberAccess	esd -> pcm_buf		7062832	0					
ANR	7063036	Identifier	esd		7062832	0					
ANR	7063037	Identifier	pcm_buf		7062832	1					
ANR	7063038	Argument	chunk << hw -> info . shift		7062832	2					
ANR	7063039	ShiftExpression	chunk << hw -> info . shift		7062832	0		<<			
ANR	7063040	Identifier	chunk		7062832	0					
ANR	7063041	MemberAccess	hw -> info . shift		7062832	1					
ANR	7063042	PtrMemberAccess	hw -> info		7062832	0					
ANR	7063043	Identifier	hw		7062832	0					
ANR	7063044	Identifier	info		7062832	1					
ANR	7063045	Identifier	shift		7062832	1					
ANR	7063046	IfStatement	if ( written == - 1 )		7062832	6					
ANR	7063047	Condition	written == - 1	91:16:1112:1124	7062832	0	True				
ANR	7063048	EqualityExpression	written == - 1		7062832	0		==			
ANR	7063049	Identifier	written		7062832	0					
ANR	7063050	UnaryOperationExpression	- 1		7062832	1					
ANR	7063051	UnaryOperator	-		7062832	0					
ANR	7063052	PrimaryExpression	1		7062832	1					
ANR	7063053	CompoundStatement		89:31:1084:1084	7062832	1					
ANR	7063054	IfStatement	if ( errno == EINTR || errno == EAGAIN )		7062832	0					
ANR	7063055	Condition	errno == EINTR || errno == EAGAIN	93:20:1150:1182	7062832	0	True				
ANR	7063056	OrExpression	errno == EINTR || errno == EAGAIN		7062832	0		||			
ANR	7063057	EqualityExpression	errno == EINTR		7062832	0		==			
ANR	7063058	Identifier	errno		7062832	0					
ANR	7063059	Identifier	EINTR		7062832	1					
ANR	7063060	EqualityExpression	errno == EAGAIN		7062832	1		==			
ANR	7063061	Identifier	errno		7062832	0					
ANR	7063062	Identifier	EAGAIN		7062832	1					
ANR	7063063	CompoundStatement		91:55:1142:1142	7062832	1					
ANR	7063064	GotoStatement	goto again ;	95:20:1208:1218	7062832	0	True				
ANR	7063065	Identifier	again		7062832	0					
ANR	7063066	ExpressionStatement	"qesd_logerr ( errno , ""write failed\\n"" )"	99:16:1256:1293	7062832	1	True				
ANR	7063067	CallExpression	"qesd_logerr ( errno , ""write failed\\n"" )"		7062832	0					
ANR	7063068	Callee	qesd_logerr		7062832	0					
ANR	7063069	Identifier	qesd_logerr		7062832	0					
ANR	7063070	ArgumentList	errno		7062832	1					
ANR	7063071	Argument	errno		7062832	0					
ANR	7063072	Identifier	errno		7062832	0					
ANR	7063073	Argument	"""write failed\\n"""		7062832	1					
ANR	7063074	PrimaryExpression	"""write failed\\n"""		7062832	0					
ANR	7063075	ReturnStatement	return NULL ;	101:16:1312:1323	7062832	2	True				
ANR	7063076	Identifier	NULL		7062832	0					
ANR	7063077	IfStatement	if ( written != chunk << hw -> info . shift )		7062832	7					
ANR	7063078	Condition	written != chunk << hw -> info . shift	107:16:1359:1392	7062832	0	True				
ANR	7063079	EqualityExpression	written != chunk << hw -> info . shift		7062832	0		!=			
ANR	7063080	Identifier	written		7062832	0					
ANR	7063081	ShiftExpression	chunk << hw -> info . shift		7062832	1		<<			
ANR	7063082	Identifier	chunk		7062832	0					
ANR	7063083	MemberAccess	hw -> info . shift		7062832	1					
ANR	7063084	PtrMemberAccess	hw -> info		7062832	0					
ANR	7063085	Identifier	hw		7062832	0					
ANR	7063086	Identifier	info		7062832	1					
ANR	7063087	Identifier	shift		7062832	1					
ANR	7063088	CompoundStatement		109:16:1430:1469	7062832	1					
ANR	7063089	IdentifierDeclStatement	int wsamples = written >> hw -> info . shift ;	109:16:1414:1454	7062832	0	True				
ANR	7063090	IdentifierDecl	wsamples = written >> hw -> info . shift		7062832	0					
ANR	7063091	IdentifierDeclType	int		7062832	0					
ANR	7063092	Identifier	wsamples		7062832	1					
ANR	7063093	AssignmentExpression	wsamples = written >> hw -> info . shift		7062832	2		=			
ANR	7063094	Identifier	wsamples		7062832	0					
ANR	7063095	ShiftExpression	written >> hw -> info . shift		7062832	1		>>			
ANR	7063096	Identifier	written		7062832	0					
ANR	7063097	MemberAccess	hw -> info . shift		7062832	1					
ANR	7063098	PtrMemberAccess	hw -> info		7062832	0					
ANR	7063099	Identifier	hw		7062832	0					
ANR	7063100	Identifier	info		7062832	1					
ANR	7063101	Identifier	shift		7062832	1					
ANR	7063102	IdentifierDeclStatement	int wbytes = wsamples << hw -> info . shift ;	111:16:1473:1512	7062832	1	True				
ANR	7063103	IdentifierDecl	wbytes = wsamples << hw -> info . shift		7062832	0					
ANR	7063104	IdentifierDeclType	int		7062832	0					
ANR	7063105	Identifier	wbytes		7062832	1					
ANR	7063106	AssignmentExpression	wbytes = wsamples << hw -> info . shift		7062832	2		=			
ANR	7063107	Identifier	wbytes		7062832	0					
ANR	7063108	ShiftExpression	wsamples << hw -> info . shift		7062832	1		<<			
ANR	7063109	Identifier	wsamples		7062832	0					
ANR	7063110	MemberAccess	hw -> info . shift		7062832	1					
ANR	7063111	PtrMemberAccess	hw -> info		7062832	0					
ANR	7063112	Identifier	hw		7062832	0					
ANR	7063113	Identifier	info		7062832	1					
ANR	7063114	Identifier	shift		7062832	1					
ANR	7063115	IfStatement	if ( wbytes != written )		7062832	2					
ANR	7063116	Condition	wbytes != written	113:20:1535:1551	7062832	0	True				
ANR	7063117	EqualityExpression	wbytes != written		7062832	0		!=			
ANR	7063118	Identifier	wbytes		7062832	0					
ANR	7063119	Identifier	written		7062832	1					
ANR	7063120	CompoundStatement		111:39:1511:1511	7062832	1					
ANR	7063121	Statement	dolog	115:20:1577:1581	7062832	0	True				
ANR	7063122	Statement	(	115:26:1583:1583	7062832	1	True				
ANR	7063123	Statement	"""warning: Misaligned write %d (requested %d), """	115:27:1584:1630	7062832	2	True				
ANR	7063124	Statement	"""alignment %d\\n"""	117:27:1660:1675	7062832	3	True				
ANR	7063125	Statement	","	117:43:1676:1676	7062832	4	True				
ANR	7063126	Statement	wbytes	119:27:1706:1711	7062832	5	True				
ANR	7063127	Statement	","	119:33:1712:1712	7062832	6	True				
ANR	7063128	Statement	written	119:35:1714:1720	7062832	7	True				
ANR	7063129	Statement	","	119:42:1721:1721	7062832	8	True				
ANR	7063130	Statement	hw	119:44:1723:1724	7062832	9	True				
ANR	7063131	Statement	->	119:46:1725:1726	7062832	10	True				
ANR	7063132	Statement	info	119:48:1727:1730	7062832	11	True				
ANR	7063133	Statement	.	119:52:1731:1731	7062832	12	True				
ANR	7063134	Statement	align	119:53:1732:1736	7062832	13	True				
ANR	7063135	Statement	+	119:59:1738:1738	7062832	14	True				
ANR	7063136	Statement	1	119:61:1740:1740	7062832	15	True				
ANR	7063137	Statement	)	119:62:1741:1741	7062832	16	True				
ANR	7063138	ExpressionStatement		119:63:1742:1742	7062832	17	True				
ANR	7063139	ExpressionStatement	to_mix -= wsamples	123:16:1780:1798	7062832	3	True				
ANR	7063140	AssignmentExpression	to_mix -= wsamples		7062832	0		-=			
ANR	7063141	Identifier	to_mix		7062832	0					
ANR	7063142	Identifier	wsamples		7062832	1					
ANR	7063143	ExpressionStatement	rpos = ( rpos + wsamples ) % hw -> samples	125:16:1817:1855	7062832	4	True				
ANR	7063144	AssignmentExpression	rpos = ( rpos + wsamples ) % hw -> samples		7062832	0		=			
ANR	7063145	Identifier	rpos		7062832	0					
ANR	7063146	MultiplicativeExpression	( rpos + wsamples ) % hw -> samples		7062832	1		%			
ANR	7063147	AdditiveExpression	rpos + wsamples		7062832	0		+			
ANR	7063148	Identifier	rpos		7062832	0					
ANR	7063149	Identifier	wsamples		7062832	1					
ANR	7063150	PtrMemberAccess	hw -> samples		7062832	1					
ANR	7063151	Identifier	hw		7062832	0					
ANR	7063152	Identifier	samples		7062832	1					
ANR	7063153	BreakStatement	break ;	127:16:1874:1879	7062832	5	True				
ANR	7063154	ExpressionStatement	rpos = ( rpos + chunk ) % hw -> samples	133:12:1911:1946	7062832	8	True				
ANR	7063155	AssignmentExpression	rpos = ( rpos + chunk ) % hw -> samples		7062832	0		=			
ANR	7063156	Identifier	rpos		7062832	0					
ANR	7063157	MultiplicativeExpression	( rpos + chunk ) % hw -> samples		7062832	1		%			
ANR	7063158	AdditiveExpression	rpos + chunk		7062832	0		+			
ANR	7063159	Identifier	rpos		7062832	0					
ANR	7063160	Identifier	chunk		7062832	1					
ANR	7063161	PtrMemberAccess	hw -> samples		7062832	1					
ANR	7063162	Identifier	hw		7062832	0					
ANR	7063163	Identifier	samples		7062832	1					
ANR	7063164	ExpressionStatement	to_mix -= chunk	135:12:1961:1976	7062832	9	True				
ANR	7063165	AssignmentExpression	to_mix -= chunk		7062832	0		-=			
ANR	7063166	Identifier	to_mix		7062832	0					
ANR	7063167	Identifier	chunk		7062832	1					
ANR	7063168	IfStatement	"if ( audio_pt_lock ( & esd -> pt , AUDIO_FUNC ) )"		7062832	6					
ANR	7063169	Condition	"audio_pt_lock ( & esd -> pt , AUDIO_FUNC )"	141:12:2004:2039	7062832	0	True				
ANR	7063170	CallExpression	"audio_pt_lock ( & esd -> pt , AUDIO_FUNC )"		7062832	0					
ANR	7063171	Callee	audio_pt_lock		7062832	0					
ANR	7063172	Identifier	audio_pt_lock		7062832	0					
ANR	7063173	ArgumentList	& esd -> pt		7062832	1					
ANR	7063174	Argument	& esd -> pt		7062832	0					
ANR	7063175	UnaryOperationExpression	& esd -> pt		7062832	0					
ANR	7063176	UnaryOperator	&		7062832	0					
ANR	7063177	PtrMemberAccess	esd -> pt		7062832	1					
ANR	7063178	Identifier	esd		7062832	0					
ANR	7063179	Identifier	pt		7062832	1					
ANR	7063180	Argument	AUDIO_FUNC		7062832	1					
ANR	7063181	Identifier	AUDIO_FUNC		7062832	0					
ANR	7063182	CompoundStatement		139:50:1999:1999	7062832	1					
ANR	7063183	ReturnStatement	return NULL ;	143:12:2057:2068	7062832	0	True				
ANR	7063184	Identifier	NULL		7062832	0					
ANR	7063185	ExpressionStatement	esd -> rpos = rpos	149:8:2092:2108	7062832	7	True				
ANR	7063186	AssignmentExpression	esd -> rpos = rpos		7062832	0		=			
ANR	7063187	PtrMemberAccess	esd -> rpos		7062832	0					
ANR	7063188	Identifier	esd		7062832	0					
ANR	7063189	Identifier	rpos		7062832	1					
ANR	7063190	Identifier	rpos		7062832	1					
ANR	7063191	ExpressionStatement	esd -> live -= decr	151:8:2119:2136	7062832	8	True				
ANR	7063192	AssignmentExpression	esd -> live -= decr		7062832	0		-=			
ANR	7063193	PtrMemberAccess	esd -> live		7062832	0					
ANR	7063194	Identifier	esd		7062832	0					
ANR	7063195	Identifier	live		7062832	1					
ANR	7063196	Identifier	decr		7062832	1					
ANR	7063197	ExpressionStatement	esd -> decr += decr	153:8:2147:2164	7062832	9	True				
ANR	7063198	AssignmentExpression	esd -> decr += decr		7062832	0		+=			
ANR	7063199	PtrMemberAccess	esd -> decr		7062832	0					
ANR	7063200	Identifier	esd		7062832	0					
ANR	7063201	Identifier	decr		7062832	1					
ANR	7063202	Identifier	decr		7062832	1					
ANR	7063203	Label	exit :	159:1:2177:2181	7062832	6	True				
ANR	7063204	Identifier	exit		7062832	0					
ANR	7063205	ExpressionStatement	"audio_pt_unlock ( & esd -> pt , AUDIO_FUNC )"	161:4:2188:2226	7062832	7	True				
ANR	7063206	CallExpression	"audio_pt_unlock ( & esd -> pt , AUDIO_FUNC )"		7062832	0					
ANR	7063207	Callee	audio_pt_unlock		7062832	0					
ANR	7063208	Identifier	audio_pt_unlock		7062832	0					
ANR	7063209	ArgumentList	& esd -> pt		7062832	1					
ANR	7063210	Argument	& esd -> pt		7062832	0					
ANR	7063211	UnaryOperationExpression	& esd -> pt		7062832	0					
ANR	7063212	UnaryOperator	&		7062832	0					
ANR	7063213	PtrMemberAccess	esd -> pt		7062832	1					
ANR	7063214	Identifier	esd		7062832	0					
ANR	7063215	Identifier	pt		7062832	1					
ANR	7063216	Argument	AUDIO_FUNC		7062832	1					
ANR	7063217	Identifier	AUDIO_FUNC		7062832	0					
ANR	7063218	ReturnStatement	return NULL ;	163:4:2233:2244	7062832	8	True				
ANR	7063219	Identifier	NULL		7062832	0					
ANR	7063220	ReturnType	static void *		7062832	1					
ANR	7063221	Identifier	qesd_thread_out		7062832	2					
ANR	7063222	ParameterList	void * arg		7062832	3					
ANR	7063223	Parameter	void * arg	1:30:30:38	7062832	0	True				
ANR	7063224	ParameterType	void *		7062832	0					
ANR	7063225	Identifier	arg		7062832	1					
ANR	7063226	CFGEntryNode	ENTRY		7062832		True				
ANR	7063227	CFGExitNode	EXIT		7062832		True				
ANR	7063228	InfiniteForNode	true		7062832		True				
ANR	7063229	InfiniteForNode	true		7062832		True				
ANR	7063230	Symbol	esd -> live		7062832						
ANR	7063231	Symbol	audio_pt_wait		7062832						
ANR	7063232	Symbol	conf . divisor		7062832						
ANR	7063233	Symbol	esd -> decr		7062832						
ANR	7063234	Symbol	esd -> pcm_buf		7062832						
ANR	7063235	Symbol	EINTR		7062832						
ANR	7063236	Symbol	& esd -> pt		7062832						
ANR	7063237	Symbol	hw -> info . shift		7062832						
ANR	7063238	Symbol	chunk		7062832						
ANR	7063239	Symbol	threshold		7062832						
ANR	7063240	Symbol	conf		7062832						
ANR	7063241	Symbol	hw		7062832						
ANR	7063242	Symbol	hw -> mix_buf		7062832						
ANR	7063243	Symbol	esd -> rpos		7062832						
ANR	7063244	Symbol	& esd -> hw		7062832						
ANR	7063245	Symbol	* hw		7062832						
ANR	7063246	Symbol	arg		7062832						
ANR	7063247	Symbol	rpos		7062832						
ANR	7063248	Symbol	written		7062832						
ANR	7063249	Symbol	write		7062832						
ANR	7063250	Symbol	decr		7062832						
ANR	7063251	Symbol	* esd		7062832						
ANR	7063252	Symbol	wsamples		7062832						
ANR	7063253	Symbol	errno		7062832						
ANR	7063254	Symbol	NULL		7062832						
ANR	7063255	Symbol	to_mix		7062832						
ANR	7063256	Symbol	src		7062832						
ANR	7063257	Symbol	hw -> samples		7062832						
ANR	7063258	Symbol	hw -> rpos		7062832						
ANR	7063259	Symbol	hw -> info		7062832						
ANR	7063260	Symbol	EAGAIN		7062832						
ANR	7063261	Symbol	esd -> fd		7062832						
ANR	7063262	Symbol	AUDIO_FUNC		7062832						
ANR	7063263	Symbol	audio_pt_unlock		7062832						
ANR	7063264	Symbol	audio_MIN		7062832						
ANR	7063265	Symbol	esd		7062832						
ANR	7063266	Symbol	esd -> done		7062832						
ANR	7063267	Symbol	wbytes		7062832						
ANR	7063268	Symbol	audio_pt_lock		7062832						
