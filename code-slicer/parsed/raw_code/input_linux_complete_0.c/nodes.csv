command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4945596	File	/home/p4ultr4n/workplace/ReVeal/raw_code/input_linux_complete_0.c								
ANR	4945597	Function	input_linux_complete	1:0:0:1958							
ANR	4945598	FunctionDef	"input_linux_complete (UserCreatable * uc , Error * * errp)"		4945597	0					
ANR	4945599	CompoundStatement		3:0:67:1958	4945597	0					
ANR	4945600	IdentifierDeclStatement	InputLinux * il = INPUT_LINUX ( uc ) ;	5:4:74:106	4945597	0	True				
ANR	4945601	IdentifierDecl	* il = INPUT_LINUX ( uc )		4945597	0					
ANR	4945602	IdentifierDeclType	InputLinux *		4945597	0					
ANR	4945603	Identifier	il		4945597	1					
ANR	4945604	AssignmentExpression	* il = INPUT_LINUX ( uc )		4945597	2		=			
ANR	4945605	Identifier	il		4945597	0					
ANR	4945606	CallExpression	INPUT_LINUX ( uc )		4945597	1					
ANR	4945607	Callee	INPUT_LINUX		4945597	0					
ANR	4945608	Identifier	INPUT_LINUX		4945597	0					
ANR	4945609	ArgumentList	uc		4945597	1					
ANR	4945610	Argument	uc		4945597	0					
ANR	4945611	Identifier	uc		4945597	0					
ANR	4945612	IdentifierDeclStatement	"uint8_t evtmap , relmap , absmap , keymap [ KEY_CNT / 8 ] ;"	7:4:113:164	4945597	1	True				
ANR	4945613	IdentifierDecl	evtmap		4945597	0					
ANR	4945614	IdentifierDeclType	uint8_t		4945597	0					
ANR	4945615	Identifier	evtmap		4945597	1					
ANR	4945616	IdentifierDecl	relmap		4945597	1					
ANR	4945617	IdentifierDeclType	uint8_t		4945597	0					
ANR	4945618	Identifier	relmap		4945597	1					
ANR	4945619	IdentifierDecl	absmap		4945597	2					
ANR	4945620	IdentifierDeclType	uint8_t		4945597	0					
ANR	4945621	Identifier	absmap		4945597	1					
ANR	4945622	IdentifierDecl	keymap [ KEY_CNT / 8 ]		4945597	3					
ANR	4945623	IdentifierDeclType	uint8_t [ KEY_CNT / 8 ]		4945597	0					
ANR	4945624	Identifier	keymap		4945597	1					
ANR	4945625	MultiplicativeExpression	KEY_CNT / 8		4945597	2		/			
ANR	4945626	Identifier	KEY_CNT		4945597	0					
ANR	4945627	PrimaryExpression	8		4945597	1					
ANR	4945628	IdentifierDeclStatement	unsigned int i ;	9:4:171:185	4945597	2	True				
ANR	4945629	IdentifierDecl	i		4945597	0					
ANR	4945630	IdentifierDeclType	unsigned int		4945597	0					
ANR	4945631	Identifier	i		4945597	1					
ANR	4945632	IdentifierDeclStatement	"int rc , ver ;"	11:4:192:203	4945597	3	True				
ANR	4945633	IdentifierDecl	rc		4945597	0					
ANR	4945634	IdentifierDeclType	int		4945597	0					
ANR	4945635	Identifier	rc		4945597	1					
ANR	4945636	IdentifierDecl	ver		4945597	1					
ANR	4945637	IdentifierDeclType	int		4945597	0					
ANR	4945638	Identifier	ver		4945597	1					
ANR	4945639	IfStatement	if ( ! il -> evdev )		4945597	4					
ANR	4945640	Condition	! il -> evdev	15:8:216:225	4945597	0	True				
ANR	4945641	UnaryOperationExpression	! il -> evdev		4945597	0					
ANR	4945642	UnaryOperator	!		4945597	0					
ANR	4945643	PtrMemberAccess	il -> evdev		4945597	1					
ANR	4945644	Identifier	il		4945597	0					
ANR	4945645	Identifier	evdev		4945597	1					
ANR	4945646	CompoundStatement		13:20:160:160	4945597	1					
ANR	4945647	ExpressionStatement	"error_setg ( errp , ""no input device specified"" )"	17:8:239:284	4945597	0	True				
ANR	4945648	CallExpression	"error_setg ( errp , ""no input device specified"" )"		4945597	0					
ANR	4945649	Callee	error_setg		4945597	0					
ANR	4945650	Identifier	error_setg		4945597	0					
ANR	4945651	ArgumentList	errp		4945597	1					
ANR	4945652	Argument	errp		4945597	0					
ANR	4945653	Identifier	errp		4945597	0					
ANR	4945654	Argument	"""no input device specified"""		4945597	1					
ANR	4945655	PrimaryExpression	"""no input device specified"""		4945597	0					
ANR	4945656	ReturnStatement	return ;	19:8:295:301	4945597	1	True				
ANR	4945657	ExpressionStatement	"il -> fd = open ( il -> evdev , O_RDWR )"	25:4:317:349	4945597	5	True				
ANR	4945658	AssignmentExpression	"il -> fd = open ( il -> evdev , O_RDWR )"		4945597	0		=			
ANR	4945659	PtrMemberAccess	il -> fd		4945597	0					
ANR	4945660	Identifier	il		4945597	0					
ANR	4945661	Identifier	fd		4945597	1					
ANR	4945662	CallExpression	"open ( il -> evdev , O_RDWR )"		4945597	1					
ANR	4945663	Callee	open		4945597	0					
ANR	4945664	Identifier	open		4945597	0					
ANR	4945665	ArgumentList	il -> evdev		4945597	1					
ANR	4945666	Argument	il -> evdev		4945597	0					
ANR	4945667	PtrMemberAccess	il -> evdev		4945597	0					
ANR	4945668	Identifier	il		4945597	0					
ANR	4945669	Identifier	evdev		4945597	1					
ANR	4945670	Argument	O_RDWR		4945597	1					
ANR	4945671	Identifier	O_RDWR		4945597	0					
ANR	4945672	IfStatement	if ( il -> fd < 0 )		4945597	6					
ANR	4945673	Condition	il -> fd < 0	27:8:360:369	4945597	0	True				
ANR	4945674	RelationalExpression	il -> fd < 0		4945597	0		<			
ANR	4945675	PtrMemberAccess	il -> fd		4945597	0					
ANR	4945676	Identifier	il		4945597	0					
ANR	4945677	Identifier	fd		4945597	1					
ANR	4945678	PrimaryExpression	0		4945597	1					
ANR	4945679	CompoundStatement		25:21:305:305	4945597	1					
ANR	4945680	ExpressionStatement	"error_setg_file_open ( errp , errno , il -> evdev )"	29:8:384:428	4945597	0	True				
ANR	4945681	CallExpression	"error_setg_file_open ( errp , errno , il -> evdev )"		4945597	0					
ANR	4945682	Callee	error_setg_file_open		4945597	0					
ANR	4945683	Identifier	error_setg_file_open		4945597	0					
ANR	4945684	ArgumentList	errp		4945597	1					
ANR	4945685	Argument	errp		4945597	0					
ANR	4945686	Identifier	errp		4945597	0					
ANR	4945687	Argument	errno		4945597	1					
ANR	4945688	Identifier	errno		4945597	0					
ANR	4945689	Argument	il -> evdev		4945597	2					
ANR	4945690	PtrMemberAccess	il -> evdev		4945597	0					
ANR	4945691	Identifier	il		4945597	0					
ANR	4945692	Identifier	evdev		4945597	1					
ANR	4945693	ReturnStatement	return ;	31:8:439:445	4945597	1	True				
ANR	4945694	ExpressionStatement	qemu_set_nonblock ( il -> fd )	35:4:459:484	4945597	7	True				
ANR	4945695	CallExpression	qemu_set_nonblock ( il -> fd )		4945597	0					
ANR	4945696	Callee	qemu_set_nonblock		4945597	0					
ANR	4945697	Identifier	qemu_set_nonblock		4945597	0					
ANR	4945698	ArgumentList	il -> fd		4945597	1					
ANR	4945699	Argument	il -> fd		4945597	0					
ANR	4945700	PtrMemberAccess	il -> fd		4945597	0					
ANR	4945701	Identifier	il		4945597	0					
ANR	4945702	Identifier	fd		4945597	1					
ANR	4945703	ExpressionStatement	"rc = ioctl ( il -> fd , EVIOCGVERSION , & ver )"	39:4:493:532	4945597	8	True				
ANR	4945704	AssignmentExpression	"rc = ioctl ( il -> fd , EVIOCGVERSION , & ver )"		4945597	0		=			
ANR	4945705	Identifier	rc		4945597	0					
ANR	4945706	CallExpression	"ioctl ( il -> fd , EVIOCGVERSION , & ver )"		4945597	1					
ANR	4945707	Callee	ioctl		4945597	0					
ANR	4945708	Identifier	ioctl		4945597	0					
ANR	4945709	ArgumentList	il -> fd		4945597	1					
ANR	4945710	Argument	il -> fd		4945597	0					
ANR	4945711	PtrMemberAccess	il -> fd		4945597	0					
ANR	4945712	Identifier	il		4945597	0					
ANR	4945713	Identifier	fd		4945597	1					
ANR	4945714	Argument	EVIOCGVERSION		4945597	1					
ANR	4945715	Identifier	EVIOCGVERSION		4945597	0					
ANR	4945716	Argument	& ver		4945597	2					
ANR	4945717	UnaryOperationExpression	& ver		4945597	0					
ANR	4945718	UnaryOperator	&		4945597	0					
ANR	4945719	Identifier	ver		4945597	1					
ANR	4945720	IfStatement	if ( rc < 0 )		4945597	9					
ANR	4945721	Condition	rc < 0	41:8:543:548	4945597	0	True				
ANR	4945722	RelationalExpression	rc < 0		4945597	0		<			
ANR	4945723	Identifier	rc		4945597	0					
ANR	4945724	PrimaryExpression	0		4945597	1					
ANR	4945725	CompoundStatement		39:16:483:483	4945597	1					
ANR	4945726	ExpressionStatement	"error_setg ( errp , ""%s: is not an evdev device"" , il -> evdev )"	43:8:562:619	4945597	0	True				
ANR	4945727	CallExpression	"error_setg ( errp , ""%s: is not an evdev device"" , il -> evdev )"		4945597	0					
ANR	4945728	Callee	error_setg		4945597	0					
ANR	4945729	Identifier	error_setg		4945597	0					
ANR	4945730	ArgumentList	errp		4945597	1					
ANR	4945731	Argument	errp		4945597	0					
ANR	4945732	Identifier	errp		4945597	0					
ANR	4945733	Argument	"""%s: is not an evdev device"""		4945597	1					
ANR	4945734	PrimaryExpression	"""%s: is not an evdev device"""		4945597	0					
ANR	4945735	Argument	il -> evdev		4945597	2					
ANR	4945736	PtrMemberAccess	il -> evdev		4945597	0					
ANR	4945737	Identifier	il		4945597	0					
ANR	4945738	Identifier	evdev		4945597	1					
ANR	4945739	GotoStatement	goto err_close ;	45:8:630:644	4945597	1	True				
ANR	4945740	Identifier	err_close		4945597	0					
ANR	4945741	ExpressionStatement	"rc = ioctl ( il -> fd , EVIOCGBIT ( 0 , sizeof ( evtmap ) ) , & evtmap )"	51:4:660:717	4945597	10	True				
ANR	4945742	AssignmentExpression	"rc = ioctl ( il -> fd , EVIOCGBIT ( 0 , sizeof ( evtmap ) ) , & evtmap )"		4945597	0		=			
ANR	4945743	Identifier	rc		4945597	0					
ANR	4945744	CallExpression	"ioctl ( il -> fd , EVIOCGBIT ( 0 , sizeof ( evtmap ) ) , & evtmap )"		4945597	1					
ANR	4945745	Callee	ioctl		4945597	0					
ANR	4945746	Identifier	ioctl		4945597	0					
ANR	4945747	ArgumentList	il -> fd		4945597	1					
ANR	4945748	Argument	il -> fd		4945597	0					
ANR	4945749	PtrMemberAccess	il -> fd		4945597	0					
ANR	4945750	Identifier	il		4945597	0					
ANR	4945751	Identifier	fd		4945597	1					
ANR	4945752	Argument	"EVIOCGBIT ( 0 , sizeof ( evtmap ) )"		4945597	1					
ANR	4945753	CallExpression	"EVIOCGBIT ( 0 , sizeof ( evtmap ) )"		4945597	0					
ANR	4945754	Callee	EVIOCGBIT		4945597	0					
ANR	4945755	Identifier	EVIOCGBIT		4945597	0					
ANR	4945756	ArgumentList	0		4945597	1					
ANR	4945757	Argument	0		4945597	0					
ANR	4945758	PrimaryExpression	0		4945597	0					
ANR	4945759	Argument	sizeof ( evtmap )		4945597	1					
ANR	4945760	SizeofExpression	sizeof ( evtmap )		4945597	0					
ANR	4945761	Sizeof	sizeof		4945597	0					
ANR	4945762	SizeofOperand	evtmap		4945597	1					
ANR	4945763	Argument	& evtmap		4945597	2					
ANR	4945764	UnaryOperationExpression	& evtmap		4945597	0					
ANR	4945765	UnaryOperator	&		4945597	0					
ANR	4945766	Identifier	evtmap		4945597	1					
ANR	4945767	IfStatement	if ( rc < 0 )		4945597	11					
ANR	4945768	Condition	rc < 0	53:8:728:733	4945597	0	True				
ANR	4945769	RelationalExpression	rc < 0		4945597	0		<			
ANR	4945770	Identifier	rc		4945597	0					
ANR	4945771	PrimaryExpression	0		4945597	1					
ANR	4945772	CompoundStatement		51:16:668:668	4945597	1					
ANR	4945773	ExpressionStatement	"error_setg ( errp , ""%s: failed to read event bits"" , il -> evdev )"	55:8:747:807	4945597	0	True				
ANR	4945774	CallExpression	"error_setg ( errp , ""%s: failed to read event bits"" , il -> evdev )"		4945597	0					
ANR	4945775	Callee	error_setg		4945597	0					
ANR	4945776	Identifier	error_setg		4945597	0					
ANR	4945777	ArgumentList	errp		4945597	1					
ANR	4945778	Argument	errp		4945597	0					
ANR	4945779	Identifier	errp		4945597	0					
ANR	4945780	Argument	"""%s: failed to read event bits"""		4945597	1					
ANR	4945781	PrimaryExpression	"""%s: failed to read event bits"""		4945597	0					
ANR	4945782	Argument	il -> evdev		4945597	2					
ANR	4945783	PtrMemberAccess	il -> evdev		4945597	0					
ANR	4945784	Identifier	il		4945597	0					
ANR	4945785	Identifier	evdev		4945597	1					
ANR	4945786	GotoStatement	goto err_close ;	57:8:818:832	4945597	1	True				
ANR	4945787	Identifier	err_close		4945597	0					
ANR	4945788	IfStatement	if ( evtmap & ( 1 << EV_REL ) )		4945597	12					
ANR	4945789	Condition	evtmap & ( 1 << EV_REL )	63:8:852:873	4945597	0	True				
ANR	4945790	BitAndExpression	evtmap & ( 1 << EV_REL )		4945597	0		&			
ANR	4945791	Identifier	evtmap		4945597	0					
ANR	4945792	ShiftExpression	1 << EV_REL		4945597	1		<<			
ANR	4945793	PrimaryExpression	1		4945597	0					
ANR	4945794	Identifier	EV_REL		4945597	1					
ANR	4945795	CompoundStatement		61:32:808:808	4945597	1					
ANR	4945796	ExpressionStatement	relmap = 0	65:8:887:897	4945597	0	True				
ANR	4945797	AssignmentExpression	relmap = 0		4945597	0		=			
ANR	4945798	Identifier	relmap		4945597	0					
ANR	4945799	PrimaryExpression	0		4945597	1					
ANR	4945800	ExpressionStatement	"rc = ioctl ( il -> fd , EVIOCGBIT ( EV_REL , sizeof ( relmap ) ) , & relmap )"	67:8:908:970	4945597	1	True				
ANR	4945801	AssignmentExpression	"rc = ioctl ( il -> fd , EVIOCGBIT ( EV_REL , sizeof ( relmap ) ) , & relmap )"		4945597	0		=			
ANR	4945802	Identifier	rc		4945597	0					
ANR	4945803	CallExpression	"ioctl ( il -> fd , EVIOCGBIT ( EV_REL , sizeof ( relmap ) ) , & relmap )"		4945597	1					
ANR	4945804	Callee	ioctl		4945597	0					
ANR	4945805	Identifier	ioctl		4945597	0					
ANR	4945806	ArgumentList	il -> fd		4945597	1					
ANR	4945807	Argument	il -> fd		4945597	0					
ANR	4945808	PtrMemberAccess	il -> fd		4945597	0					
ANR	4945809	Identifier	il		4945597	0					
ANR	4945810	Identifier	fd		4945597	1					
ANR	4945811	Argument	"EVIOCGBIT ( EV_REL , sizeof ( relmap ) )"		4945597	1					
ANR	4945812	CallExpression	"EVIOCGBIT ( EV_REL , sizeof ( relmap ) )"		4945597	0					
ANR	4945813	Callee	EVIOCGBIT		4945597	0					
ANR	4945814	Identifier	EVIOCGBIT		4945597	0					
ANR	4945815	ArgumentList	EV_REL		4945597	1					
ANR	4945816	Argument	EV_REL		4945597	0					
ANR	4945817	Identifier	EV_REL		4945597	0					
ANR	4945818	Argument	sizeof ( relmap )		4945597	1					
ANR	4945819	SizeofExpression	sizeof ( relmap )		4945597	0					
ANR	4945820	Sizeof	sizeof		4945597	0					
ANR	4945821	SizeofOperand	relmap		4945597	1					
ANR	4945822	Argument	& relmap		4945597	2					
ANR	4945823	UnaryOperationExpression	& relmap		4945597	0					
ANR	4945824	UnaryOperator	&		4945597	0					
ANR	4945825	Identifier	relmap		4945597	1					
ANR	4945826	IfStatement	if ( relmap & ( 1 << REL_X ) )		4945597	2					
ANR	4945827	Condition	relmap & ( 1 << REL_X )	69:12:985:1005	4945597	0	True				
ANR	4945828	BitAndExpression	relmap & ( 1 << REL_X )		4945597	0		&			
ANR	4945829	Identifier	relmap		4945597	0					
ANR	4945830	ShiftExpression	1 << REL_X		4945597	1		<<			
ANR	4945831	PrimaryExpression	1		4945597	0					
ANR	4945832	Identifier	REL_X		4945597	1					
ANR	4945833	CompoundStatement		67:35:940:940	4945597	1					
ANR	4945834	ExpressionStatement	il -> has_rel_x = true	71:12:1023:1043	4945597	0	True				
ANR	4945835	AssignmentExpression	il -> has_rel_x = true		4945597	0		=			
ANR	4945836	PtrMemberAccess	il -> has_rel_x		4945597	0					
ANR	4945837	Identifier	il		4945597	0					
ANR	4945838	Identifier	has_rel_x		4945597	1					
ANR	4945839	Identifier	true		4945597	1					
ANR	4945840	IfStatement	if ( evtmap & ( 1 << EV_ABS ) )		4945597	13					
ANR	4945841	Condition	evtmap & ( 1 << EV_ABS )	79:8:1074:1095	4945597	0	True				
ANR	4945842	BitAndExpression	evtmap & ( 1 << EV_ABS )		4945597	0		&			
ANR	4945843	Identifier	evtmap		4945597	0					
ANR	4945844	ShiftExpression	1 << EV_ABS		4945597	1		<<			
ANR	4945845	PrimaryExpression	1		4945597	0					
ANR	4945846	Identifier	EV_ABS		4945597	1					
ANR	4945847	CompoundStatement		77:32:1030:1030	4945597	1					
ANR	4945848	ExpressionStatement	absmap = 0	81:8:1109:1119	4945597	0	True				
ANR	4945849	AssignmentExpression	absmap = 0		4945597	0		=			
ANR	4945850	Identifier	absmap		4945597	0					
ANR	4945851	PrimaryExpression	0		4945597	1					
ANR	4945852	ExpressionStatement	"rc = ioctl ( il -> fd , EVIOCGBIT ( EV_ABS , sizeof ( absmap ) ) , & absmap )"	83:8:1130:1192	4945597	1	True				
ANR	4945853	AssignmentExpression	"rc = ioctl ( il -> fd , EVIOCGBIT ( EV_ABS , sizeof ( absmap ) ) , & absmap )"		4945597	0		=			
ANR	4945854	Identifier	rc		4945597	0					
ANR	4945855	CallExpression	"ioctl ( il -> fd , EVIOCGBIT ( EV_ABS , sizeof ( absmap ) ) , & absmap )"		4945597	1					
ANR	4945856	Callee	ioctl		4945597	0					
ANR	4945857	Identifier	ioctl		4945597	0					
ANR	4945858	ArgumentList	il -> fd		4945597	1					
ANR	4945859	Argument	il -> fd		4945597	0					
ANR	4945860	PtrMemberAccess	il -> fd		4945597	0					
ANR	4945861	Identifier	il		4945597	0					
ANR	4945862	Identifier	fd		4945597	1					
ANR	4945863	Argument	"EVIOCGBIT ( EV_ABS , sizeof ( absmap ) )"		4945597	1					
ANR	4945864	CallExpression	"EVIOCGBIT ( EV_ABS , sizeof ( absmap ) )"		4945597	0					
ANR	4945865	Callee	EVIOCGBIT		4945597	0					
ANR	4945866	Identifier	EVIOCGBIT		4945597	0					
ANR	4945867	ArgumentList	EV_ABS		4945597	1					
ANR	4945868	Argument	EV_ABS		4945597	0					
ANR	4945869	Identifier	EV_ABS		4945597	0					
ANR	4945870	Argument	sizeof ( absmap )		4945597	1					
ANR	4945871	SizeofExpression	sizeof ( absmap )		4945597	0					
ANR	4945872	Sizeof	sizeof		4945597	0					
ANR	4945873	SizeofOperand	absmap		4945597	1					
ANR	4945874	Argument	& absmap		4945597	2					
ANR	4945875	UnaryOperationExpression	& absmap		4945597	0					
ANR	4945876	UnaryOperator	&		4945597	0					
ANR	4945877	Identifier	absmap		4945597	1					
ANR	4945878	IfStatement	if ( absmap & ( 1 << ABS_X ) )		4945597	2					
ANR	4945879	Condition	absmap & ( 1 << ABS_X )	85:12:1207:1227	4945597	0	True				
ANR	4945880	BitAndExpression	absmap & ( 1 << ABS_X )		4945597	0		&			
ANR	4945881	Identifier	absmap		4945597	0					
ANR	4945882	ShiftExpression	1 << ABS_X		4945597	1		<<			
ANR	4945883	PrimaryExpression	1		4945597	0					
ANR	4945884	Identifier	ABS_X		4945597	1					
ANR	4945885	CompoundStatement		83:35:1162:1162	4945597	1					
ANR	4945886	ExpressionStatement	il -> has_abs_x = true	87:12:1245:1265	4945597	0	True				
ANR	4945887	AssignmentExpression	il -> has_abs_x = true		4945597	0		=			
ANR	4945888	PtrMemberAccess	il -> has_abs_x		4945597	0					
ANR	4945889	Identifier	il		4945597	0					
ANR	4945890	Identifier	has_abs_x		4945597	1					
ANR	4945891	Identifier	true		4945597	1					
ANR	4945892	IfStatement	if ( evtmap & ( 1 << EV_KEY ) )		4945597	14					
ANR	4945893	Condition	evtmap & ( 1 << EV_KEY )	95:8:1296:1317	4945597	0	True				
ANR	4945894	BitAndExpression	evtmap & ( 1 << EV_KEY )		4945597	0		&			
ANR	4945895	Identifier	evtmap		4945597	0					
ANR	4945896	ShiftExpression	1 << EV_KEY		4945597	1		<<			
ANR	4945897	PrimaryExpression	1		4945597	0					
ANR	4945898	Identifier	EV_KEY		4945597	1					
ANR	4945899	CompoundStatement		93:32:1252:1252	4945597	1					
ANR	4945900	ExpressionStatement	"memset ( keymap , 0 , sizeof ( keymap ) )"	97:8:1331:1364	4945597	0	True				
ANR	4945901	CallExpression	"memset ( keymap , 0 , sizeof ( keymap ) )"		4945597	0					
ANR	4945902	Callee	memset		4945597	0					
ANR	4945903	Identifier	memset		4945597	0					
ANR	4945904	ArgumentList	keymap		4945597	1					
ANR	4945905	Argument	keymap		4945597	0					
ANR	4945906	Identifier	keymap		4945597	0					
ANR	4945907	Argument	0		4945597	1					
ANR	4945908	PrimaryExpression	0		4945597	0					
ANR	4945909	Argument	sizeof ( keymap )		4945597	2					
ANR	4945910	SizeofExpression	sizeof ( keymap )		4945597	0					
ANR	4945911	Sizeof	sizeof		4945597	0					
ANR	4945912	SizeofOperand	keymap		4945597	1					
ANR	4945913	ExpressionStatement	"rc = ioctl ( il -> fd , EVIOCGBIT ( EV_KEY , sizeof ( keymap ) ) , keymap )"	99:8:1375:1436	4945597	1	True				
ANR	4945914	AssignmentExpression	"rc = ioctl ( il -> fd , EVIOCGBIT ( EV_KEY , sizeof ( keymap ) ) , keymap )"		4945597	0		=			
ANR	4945915	Identifier	rc		4945597	0					
ANR	4945916	CallExpression	"ioctl ( il -> fd , EVIOCGBIT ( EV_KEY , sizeof ( keymap ) ) , keymap )"		4945597	1					
ANR	4945917	Callee	ioctl		4945597	0					
ANR	4945918	Identifier	ioctl		4945597	0					
ANR	4945919	ArgumentList	il -> fd		4945597	1					
ANR	4945920	Argument	il -> fd		4945597	0					
ANR	4945921	PtrMemberAccess	il -> fd		4945597	0					
ANR	4945922	Identifier	il		4945597	0					
ANR	4945923	Identifier	fd		4945597	1					
ANR	4945924	Argument	"EVIOCGBIT ( EV_KEY , sizeof ( keymap ) )"		4945597	1					
ANR	4945925	CallExpression	"EVIOCGBIT ( EV_KEY , sizeof ( keymap ) )"		4945597	0					
ANR	4945926	Callee	EVIOCGBIT		4945597	0					
ANR	4945927	Identifier	EVIOCGBIT		4945597	0					
ANR	4945928	ArgumentList	EV_KEY		4945597	1					
ANR	4945929	Argument	EV_KEY		4945597	0					
ANR	4945930	Identifier	EV_KEY		4945597	0					
ANR	4945931	Argument	sizeof ( keymap )		4945597	1					
ANR	4945932	SizeofExpression	sizeof ( keymap )		4945597	0					
ANR	4945933	Sizeof	sizeof		4945597	0					
ANR	4945934	SizeofOperand	keymap		4945597	1					
ANR	4945935	Argument	keymap		4945597	2					
ANR	4945936	Identifier	keymap		4945597	0					
ANR	4945937	ForStatement	for ( i = 0 ; i < KEY_CNT ; i ++ )		4945597	2					
ANR	4945938	ForInit	i = 0 ;	101:13:1452:1457	4945597	0	True				
ANR	4945939	AssignmentExpression	i = 0		4945597	0		=			
ANR	4945940	Identifier	i		4945597	0					
ANR	4945941	PrimaryExpression	0		4945597	1					
ANR	4945942	Condition	i < KEY_CNT	101:20:1459:1469	4945597	1	True				
ANR	4945943	RelationalExpression	i < KEY_CNT		4945597	0		<			
ANR	4945944	Identifier	i		4945597	0					
ANR	4945945	Identifier	KEY_CNT		4945597	1					
ANR	4945946	PostIncDecOperationExpression	i ++	101:33:1472:1474	4945597	2	True				
ANR	4945947	Identifier	i		4945597	0					
ANR	4945948	IncDec	++		4945597	1					
ANR	4945949	CompoundStatement		99:38:1409:1409	4945597	3					
ANR	4945950	IfStatement	if ( keymap [ i / 8 ] & ( 1 << ( i % 8 ) ) )		4945597	0					
ANR	4945951	Condition	keymap [ i / 8 ] & ( 1 << ( i % 8 ) )	103:16:1496:1525	4945597	0	True				
ANR	4945952	BitAndExpression	keymap [ i / 8 ] & ( 1 << ( i % 8 ) )		4945597	0		&			
ANR	4945953	ArrayIndexing	keymap [ i / 8 ]		4945597	0					
ANR	4945954	Identifier	keymap		4945597	0					
ANR	4945955	MultiplicativeExpression	i / 8		4945597	1		/			
ANR	4945956	Identifier	i		4945597	0					
ANR	4945957	PrimaryExpression	8		4945597	1					
ANR	4945958	ShiftExpression	1 << ( i % 8 )		4945597	1		<<			
ANR	4945959	PrimaryExpression	1		4945597	0					
ANR	4945960	MultiplicativeExpression	i % 8		4945597	1		%			
ANR	4945961	Identifier	i		4945597	0					
ANR	4945962	PrimaryExpression	8		4945597	1					
ANR	4945963	CompoundStatement		101:48:1460:1460	4945597	1					
ANR	4945964	IfStatement	if ( linux_is_button ( i ) )		4945597	0					
ANR	4945965	Condition	linux_is_button ( i )	105:20:1551:1568	4945597	0	True				
ANR	4945966	CallExpression	linux_is_button ( i )		4945597	0					
ANR	4945967	Callee	linux_is_button		4945597	0					
ANR	4945968	Identifier	linux_is_button		4945597	0					
ANR	4945969	ArgumentList	i		4945597	1					
ANR	4945970	Argument	i		4945597	0					
ANR	4945971	Identifier	i		4945597	0					
ANR	4945972	CompoundStatement		103:40:1503:1503	4945597	1					
ANR	4945973	ExpressionStatement	il -> num_btns ++	107:20:1594:1608	4945597	0	True				
ANR	4945974	PostIncDecOperationExpression	il -> num_btns ++		4945597	0					
ANR	4945975	PtrMemberAccess	il -> num_btns		4945597	0					
ANR	4945976	Identifier	il		4945597	0					
ANR	4945977	Identifier	num_btns		4945597	1					
ANR	4945978	IncDec	++		4945597	1					
ANR	4945979	ElseStatement	else		4945597	0					
ANR	4945980	CompoundStatement		107:23:1566:1566	4945597	0					
ANR	4945981	ExpressionStatement	il -> num_keys ++	111:20:1657:1671	4945597	0	True				
ANR	4945982	PostIncDecOperationExpression	il -> num_keys ++		4945597	0					
ANR	4945983	PtrMemberAccess	il -> num_keys		4945597	0					
ANR	4945984	Identifier	il		4945597	0					
ANR	4945985	Identifier	num_keys		4945597	1					
ANR	4945986	IncDec	++		4945597	1					
ANR	4945987	ExpressionStatement	"qemu_set_fd_handler ( il -> fd , input_linux_event , NULL , il )"	123:4:1732:1788	4945597	15	True				
ANR	4945988	CallExpression	"qemu_set_fd_handler ( il -> fd , input_linux_event , NULL , il )"		4945597	0					
ANR	4945989	Callee	qemu_set_fd_handler		4945597	0					
ANR	4945990	Identifier	qemu_set_fd_handler		4945597	0					
ANR	4945991	ArgumentList	il -> fd		4945597	1					
ANR	4945992	Argument	il -> fd		4945597	0					
ANR	4945993	PtrMemberAccess	il -> fd		4945597	0					
ANR	4945994	Identifier	il		4945597	0					
ANR	4945995	Identifier	fd		4945597	1					
ANR	4945996	Argument	input_linux_event		4945597	1					
ANR	4945997	Identifier	input_linux_event		4945597	0					
ANR	4945998	Argument	NULL		4945597	2					
ANR	4945999	Identifier	NULL		4945597	0					
ANR	4946000	Argument	il		4945597	3					
ANR	4946001	Identifier	il		4945597	0					
ANR	4946002	ExpressionStatement	input_linux_toggle_grab ( il )	125:4:1795:1822	4945597	16	True				
ANR	4946003	CallExpression	input_linux_toggle_grab ( il )		4945597	0					
ANR	4946004	Callee	input_linux_toggle_grab		4945597	0					
ANR	4946005	Identifier	input_linux_toggle_grab		4945597	0					
ANR	4946006	ArgumentList	il		4945597	1					
ANR	4946007	Argument	il		4945597	0					
ANR	4946008	Identifier	il		4945597	0					
ANR	4946009	ExpressionStatement	"QTAILQ_INSERT_TAIL ( & inputs , il , next )"	127:4:1829:1866	4945597	17	True				
ANR	4946010	CallExpression	"QTAILQ_INSERT_TAIL ( & inputs , il , next )"		4945597	0					
ANR	4946011	Callee	QTAILQ_INSERT_TAIL		4945597	0					
ANR	4946012	Identifier	QTAILQ_INSERT_TAIL		4945597	0					
ANR	4946013	ArgumentList	& inputs		4945597	1					
ANR	4946014	Argument	& inputs		4945597	0					
ANR	4946015	UnaryOperationExpression	& inputs		4945597	0					
ANR	4946016	UnaryOperator	&		4945597	0					
ANR	4946017	Identifier	inputs		4945597	1					
ANR	4946018	Argument	il		4945597	1					
ANR	4946019	Identifier	il		4945597	0					
ANR	4946020	Argument	next		4945597	2					
ANR	4946021	Identifier	next		4945597	0					
ANR	4946022	ExpressionStatement	il -> initialized = true	129:4:1873:1895	4945597	18	True				
ANR	4946023	AssignmentExpression	il -> initialized = true		4945597	0		=			
ANR	4946024	PtrMemberAccess	il -> initialized		4945597	0					
ANR	4946025	Identifier	il		4945597	0					
ANR	4946026	Identifier	initialized		4945597	1					
ANR	4946027	Identifier	true		4945597	1					
ANR	4946028	ReturnStatement	return ;	131:4:1902:1908	4945597	19	True				
ANR	4946029	Label	err_close :	135:0:1913:1922	4945597	20	True				
ANR	4946030	Identifier	err_close		4945597	0					
ANR	4946031	ExpressionStatement	close ( il -> fd )	137:4:1929:1942	4945597	21	True				
ANR	4946032	CallExpression	close ( il -> fd )		4945597	0					
ANR	4946033	Callee	close		4945597	0					
ANR	4946034	Identifier	close		4945597	0					
ANR	4946035	ArgumentList	il -> fd		4945597	1					
ANR	4946036	Argument	il -> fd		4945597	0					
ANR	4946037	PtrMemberAccess	il -> fd		4945597	0					
ANR	4946038	Identifier	il		4945597	0					
ANR	4946039	Identifier	fd		4945597	1					
ANR	4946040	ReturnStatement	return ;	139:4:1949:1955	4945597	22	True				
ANR	4946041	ReturnType	static void		4945597	1					
ANR	4946042	Identifier	input_linux_complete		4945597	2					
ANR	4946043	ParameterList	"UserCreatable * uc , Error * * errp"		4945597	3					
ANR	4946044	Parameter	UserCreatable * uc	1:33:33:49	4945597	0	True				
ANR	4946045	ParameterType	UserCreatable *		4945597	0					
ANR	4946046	Identifier	uc		4945597	1					
ANR	4946047	Parameter	Error * * errp	1:52:52:63	4945597	1	True				
ANR	4946048	ParameterType	Error * *		4945597	0					
ANR	4946049	Identifier	errp		4945597	1					
ANR	4946050	CFGEntryNode	ENTRY		4945597		True				
ANR	4946051	CFGExitNode	EXIT		4945597		True				
ANR	4946052	Symbol	next		4945597						
ANR	4946053	Symbol	& inputs		4945597						
ANR	4946054	Symbol	il -> has_rel_x		4945597						
ANR	4946055	Symbol	keymap		4945597						
ANR	4946056	Symbol	errp		4945597						
ANR	4946057	Symbol	* keymap		4945597						
ANR	4946058	Symbol	INPUT_LINUX		4945597						
ANR	4946059	Symbol	absmap		4945597						
ANR	4946060	Symbol	* il		4945597						
ANR	4946061	Symbol	EVIOCGBIT		4945597						
ANR	4946062	Symbol	EV_REL		4945597						
ANR	4946063	Symbol	KEY_CNT		4945597						
ANR	4946064	Symbol	uc		4945597						
ANR	4946065	Symbol	& ver		4945597						
ANR	4946066	Symbol	ioctl		4945597						
ANR	4946067	Symbol	& evtmap		4945597						
ANR	4946068	Symbol	O_RDWR		4945597						
ANR	4946069	Symbol	evtmap		4945597						
ANR	4946070	Symbol	EV_KEY		4945597						
ANR	4946071	Symbol	ABS_X		4945597						
ANR	4946072	Symbol	linux_is_button		4945597						
ANR	4946073	Symbol	il -> has_abs_x		4945597						
ANR	4946074	Symbol	il -> initialized		4945597						
ANR	4946075	Symbol	input_linux_event		4945597						
ANR	4946076	Symbol	EVIOCGVERSION		4945597						
ANR	4946077	Symbol	ver		4945597						
ANR	4946078	Symbol	errno		4945597						
ANR	4946079	Symbol	EV_ABS		4945597						
ANR	4946080	Symbol	il		4945597						
ANR	4946081	Symbol	& relmap		4945597						
ANR	4946082	Symbol	il -> num_btns		4945597						
ANR	4946083	Symbol	NULL		4945597						
ANR	4946084	Symbol	relmap		4945597						
ANR	4946085	Symbol	i		4945597						
ANR	4946086	Symbol	rc		4945597						
ANR	4946087	Symbol	& absmap		4945597						
ANR	4946088	Symbol	* i		4945597						
ANR	4946089	Symbol	REL_X		4945597						
ANR	4946090	Symbol	true		4945597						
ANR	4946091	Symbol	il -> num_keys		4945597						
ANR	4946092	Symbol	il -> evdev		4945597						
ANR	4946093	Symbol	il -> fd		4945597						
ANR	4946094	Symbol	open		4945597						
