command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1036681	File	/home/p4ultr4n/workplace/ReVeal/raw_code/bink_decode_plane_1.c								
ANR	1036682	Function	bink_decode_plane	1:0:0:9668							
ANR	1036683	FunctionDef	"bink_decode_plane (BinkContext * c , GetBitContext * gb , int plane_idx , int is_chroma)"		1036682	0					
ANR	1036684	CompoundStatement		5:0:125:9668	1036682	0					
ANR	1036685	IdentifierDeclStatement	int blk ;	7:4:132:139	1036682	0	True				
ANR	1036686	IdentifierDecl	blk		1036682	0					
ANR	1036687	IdentifierDeclType	int		1036682	0					
ANR	1036688	Identifier	blk		1036682	1					
ANR	1036689	IdentifierDeclStatement	"int i , j , bx , by ;"	9:4:146:162	1036682	1	True				
ANR	1036690	IdentifierDecl	i		1036682	0					
ANR	1036691	IdentifierDeclType	int		1036682	0					
ANR	1036692	Identifier	i		1036682	1					
ANR	1036693	IdentifierDecl	j		1036682	1					
ANR	1036694	IdentifierDeclType	int		1036682	0					
ANR	1036695	Identifier	j		1036682	1					
ANR	1036696	IdentifierDecl	bx		1036682	2					
ANR	1036697	IdentifierDeclType	int		1036682	0					
ANR	1036698	Identifier	bx		1036682	1					
ANR	1036699	IdentifierDecl	by		1036682	3					
ANR	1036700	IdentifierDeclType	int		1036682	0					
ANR	1036701	Identifier	by		1036682	1					
ANR	1036702	IdentifierDeclStatement	"uint8_t * dst , * prev , * ref , * ref_start , * ref_end ;"	11:4:169:216	1036682	2	True				
ANR	1036703	IdentifierDecl	* dst		1036682	0					
ANR	1036704	IdentifierDeclType	uint8_t *		1036682	0					
ANR	1036705	Identifier	dst		1036682	1					
ANR	1036706	IdentifierDecl	* prev		1036682	1					
ANR	1036707	IdentifierDeclType	uint8_t *		1036682	0					
ANR	1036708	Identifier	prev		1036682	1					
ANR	1036709	IdentifierDecl	* ref		1036682	2					
ANR	1036710	IdentifierDeclType	uint8_t *		1036682	0					
ANR	1036711	Identifier	ref		1036682	1					
ANR	1036712	IdentifierDecl	* ref_start		1036682	3					
ANR	1036713	IdentifierDeclType	uint8_t *		1036682	0					
ANR	1036714	Identifier	ref_start		1036682	1					
ANR	1036715	IdentifierDecl	* ref_end		1036682	4					
ANR	1036716	IdentifierDeclType	uint8_t *		1036682	0					
ANR	1036717	Identifier	ref_end		1036682	1					
ANR	1036718	IdentifierDeclStatement	"int v , col [ 2 ] ;"	13:4:223:236	1036682	3	True				
ANR	1036719	IdentifierDecl	v		1036682	0					
ANR	1036720	IdentifierDeclType	int		1036682	0					
ANR	1036721	Identifier	v		1036682	1					
ANR	1036722	IdentifierDecl	col [ 2 ]		1036682	1					
ANR	1036723	IdentifierDeclType	int [ 2 ]		1036682	0					
ANR	1036724	Identifier	col		1036682	1					
ANR	1036725	PrimaryExpression	2		1036682	2					
ANR	1036726	IdentifierDeclStatement	const uint8_t * scan ;	15:4:243:262	1036682	4	True				
ANR	1036727	IdentifierDecl	* scan		1036682	0					
ANR	1036728	IdentifierDeclType	const uint8_t *		1036682	0					
ANR	1036729	Identifier	scan		1036682	1					
ANR	1036730	IdentifierDeclStatement	"int xoff , yoff ;"	17:4:269:283	1036682	5	True				
ANR	1036731	IdentifierDecl	xoff		1036682	0					
ANR	1036732	IdentifierDeclType	int		1036682	0					
ANR	1036733	Identifier	xoff		1036682	1					
ANR	1036734	IdentifierDecl	yoff		1036682	1					
ANR	1036735	IdentifierDeclType	int		1036682	0					
ANR	1036736	Identifier	yoff		1036682	1					
ANR	1036737	Statement	LOCAL_ALIGNED_16	19:4:290:305	1036682	6	True				
ANR	1036738	Statement	(	19:20:306:306	1036682	7	True				
ANR	1036739	Statement	DCTELEM	19:21:307:313	1036682	8	True				
ANR	1036740	Statement	","	19:28:314:314	1036682	9	True				
ANR	1036741	Statement	block	19:30:316:320	1036682	10	True				
ANR	1036742	Statement	","	19:35:321:321	1036682	11	True				
ANR	1036743	Statement	[	19:37:323:323	1036682	12	True				
ANR	1036744	Statement	64	19:38:324:325	1036682	13	True				
ANR	1036745	Statement	]	19:40:326:326	1036682	14	True				
ANR	1036746	Statement	)	19:41:327:327	1036682	15	True				
ANR	1036747	ExpressionStatement		19:42:328:328	1036682	16	True				
ANR	1036748	Statement	LOCAL_ALIGNED_16	21:4:335:350	1036682	17	True				
ANR	1036749	Statement	(	21:20:351:351	1036682	18	True				
ANR	1036750	Statement	uint8_t	21:21:352:358	1036682	19	True				
ANR	1036751	Statement	","	21:28:359:359	1036682	20	True				
ANR	1036752	Statement	ublock	21:30:361:366	1036682	21	True				
ANR	1036753	Statement	","	21:36:367:367	1036682	22	True				
ANR	1036754	Statement	[	21:38:369:369	1036682	23	True				
ANR	1036755	Statement	64	21:39:370:371	1036682	24	True				
ANR	1036756	Statement	]	21:41:372:372	1036682	25	True				
ANR	1036757	Statement	)	21:42:373:373	1036682	26	True				
ANR	1036758	ExpressionStatement		21:43:374:374	1036682	27	True				
ANR	1036759	Statement	LOCAL_ALIGNED_16	23:4:381:396	1036682	28	True				
ANR	1036760	Statement	(	23:20:397:397	1036682	29	True				
ANR	1036761	Statement	int32_t	23:21:398:404	1036682	30	True				
ANR	1036762	Statement	","	23:28:405:405	1036682	31	True				
ANR	1036763	Statement	dctblock	23:30:407:414	1036682	32	True				
ANR	1036764	Statement	","	23:38:415:415	1036682	33	True				
ANR	1036765	Statement	[	23:40:417:417	1036682	34	True				
ANR	1036766	Statement	64	23:41:418:419	1036682	35	True				
ANR	1036767	Statement	]	23:43:420:420	1036682	36	True				
ANR	1036768	Statement	)	23:44:421:421	1036682	37	True				
ANR	1036769	ExpressionStatement		23:45:422:422	1036682	38	True				
ANR	1036770	IdentifierDeclStatement	int coordmap [ 64 ] ;	25:4:429:445	1036682	39	True				
ANR	1036771	IdentifierDecl	coordmap [ 64 ]		1036682	0					
ANR	1036772	IdentifierDeclType	int [ 64 ]		1036682	0					
ANR	1036773	Identifier	coordmap		1036682	1					
ANR	1036774	PrimaryExpression	64		1036682	2					
ANR	1036775	IdentifierDeclStatement	const int stride = c -> pic . linesize [ plane_idx ] ;	29:4:454:499	1036682	40	True				
ANR	1036776	IdentifierDecl	stride = c -> pic . linesize [ plane_idx ]		1036682	0					
ANR	1036777	IdentifierDeclType	const int		1036682	0					
ANR	1036778	Identifier	stride		1036682	1					
ANR	1036779	AssignmentExpression	stride = c -> pic . linesize [ plane_idx ]		1036682	2		=			
ANR	1036780	Identifier	stride		1036682	0					
ANR	1036781	ArrayIndexing	c -> pic . linesize [ plane_idx ]		1036682	1					
ANR	1036782	MemberAccess	c -> pic . linesize		1036682	0					
ANR	1036783	PtrMemberAccess	c -> pic		1036682	0					
ANR	1036784	Identifier	c		1036682	0					
ANR	1036785	Identifier	pic		1036682	1					
ANR	1036786	Identifier	linesize		1036682	1					
ANR	1036787	Identifier	plane_idx		1036682	1					
ANR	1036788	IdentifierDeclStatement	int bw = is_chroma ? ( c -> avctx -> width + 15 ) >> 4 : ( c -> avctx -> width + 7 ) >> 3 ;	31:4:506:585	1036682	41	True				
ANR	1036789	IdentifierDecl	bw = is_chroma ? ( c -> avctx -> width + 15 ) >> 4 : ( c -> avctx -> width + 7 ) >> 3		1036682	0					
ANR	1036790	IdentifierDeclType	int		1036682	0					
ANR	1036791	Identifier	bw		1036682	1					
ANR	1036792	AssignmentExpression	bw = is_chroma ? ( c -> avctx -> width + 15 ) >> 4 : ( c -> avctx -> width + 7 ) >> 3		1036682	2		=			
ANR	1036793	Identifier	bw		1036682	0					
ANR	1036794	ConditionalExpression	is_chroma ? ( c -> avctx -> width + 15 ) >> 4 : ( c -> avctx -> width + 7 ) >> 3		1036682	1					
ANR	1036795	Condition	is_chroma		1036682	0					
ANR	1036796	Identifier	is_chroma		1036682	0					
ANR	1036797	ShiftExpression	( c -> avctx -> width + 15 ) >> 4		1036682	1		>>			
ANR	1036798	AdditiveExpression	c -> avctx -> width + 15		1036682	0		+			
ANR	1036799	PtrMemberAccess	c -> avctx -> width		1036682	0					
ANR	1036800	PtrMemberAccess	c -> avctx		1036682	0					
ANR	1036801	Identifier	c		1036682	0					
ANR	1036802	Identifier	avctx		1036682	1					
ANR	1036803	Identifier	width		1036682	1					
ANR	1036804	PrimaryExpression	15		1036682	1					
ANR	1036805	PrimaryExpression	4		1036682	1					
ANR	1036806	ShiftExpression	( c -> avctx -> width + 7 ) >> 3		1036682	2		>>			
ANR	1036807	AdditiveExpression	c -> avctx -> width + 7		1036682	0		+			
ANR	1036808	PtrMemberAccess	c -> avctx -> width		1036682	0					
ANR	1036809	PtrMemberAccess	c -> avctx		1036682	0					
ANR	1036810	Identifier	c		1036682	0					
ANR	1036811	Identifier	avctx		1036682	1					
ANR	1036812	Identifier	width		1036682	1					
ANR	1036813	PrimaryExpression	7		1036682	1					
ANR	1036814	PrimaryExpression	3		1036682	1					
ANR	1036815	IdentifierDeclStatement	int bh = is_chroma ? ( c -> avctx -> height + 15 ) >> 4 : ( c -> avctx -> height + 7 ) >> 3 ;	33:4:592:671	1036682	42	True				
ANR	1036816	IdentifierDecl	bh = is_chroma ? ( c -> avctx -> height + 15 ) >> 4 : ( c -> avctx -> height + 7 ) >> 3		1036682	0					
ANR	1036817	IdentifierDeclType	int		1036682	0					
ANR	1036818	Identifier	bh		1036682	1					
ANR	1036819	AssignmentExpression	bh = is_chroma ? ( c -> avctx -> height + 15 ) >> 4 : ( c -> avctx -> height + 7 ) >> 3		1036682	2		=			
ANR	1036820	Identifier	bh		1036682	0					
ANR	1036821	ConditionalExpression	is_chroma ? ( c -> avctx -> height + 15 ) >> 4 : ( c -> avctx -> height + 7 ) >> 3		1036682	1					
ANR	1036822	Condition	is_chroma		1036682	0					
ANR	1036823	Identifier	is_chroma		1036682	0					
ANR	1036824	ShiftExpression	( c -> avctx -> height + 15 ) >> 4		1036682	1		>>			
ANR	1036825	AdditiveExpression	c -> avctx -> height + 15		1036682	0		+			
ANR	1036826	PtrMemberAccess	c -> avctx -> height		1036682	0					
ANR	1036827	PtrMemberAccess	c -> avctx		1036682	0					
ANR	1036828	Identifier	c		1036682	0					
ANR	1036829	Identifier	avctx		1036682	1					
ANR	1036830	Identifier	height		1036682	1					
ANR	1036831	PrimaryExpression	15		1036682	1					
ANR	1036832	PrimaryExpression	4		1036682	1					
ANR	1036833	ShiftExpression	( c -> avctx -> height + 7 ) >> 3		1036682	2		>>			
ANR	1036834	AdditiveExpression	c -> avctx -> height + 7		1036682	0		+			
ANR	1036835	PtrMemberAccess	c -> avctx -> height		1036682	0					
ANR	1036836	PtrMemberAccess	c -> avctx		1036682	0					
ANR	1036837	Identifier	c		1036682	0					
ANR	1036838	Identifier	avctx		1036682	1					
ANR	1036839	Identifier	height		1036682	1					
ANR	1036840	PrimaryExpression	7		1036682	1					
ANR	1036841	PrimaryExpression	3		1036682	1					
ANR	1036842	IdentifierDeclStatement	int width = c -> avctx -> width >> is_chroma ;	35:4:678:718	1036682	43	True				
ANR	1036843	IdentifierDecl	width = c -> avctx -> width >> is_chroma		1036682	0					
ANR	1036844	IdentifierDeclType	int		1036682	0					
ANR	1036845	Identifier	width		1036682	1					
ANR	1036846	AssignmentExpression	width = c -> avctx -> width >> is_chroma		1036682	2		=			
ANR	1036847	Identifier	width		1036682	0					
ANR	1036848	ShiftExpression	c -> avctx -> width >> is_chroma		1036682	1		>>			
ANR	1036849	PtrMemberAccess	c -> avctx -> width		1036682	0					
ANR	1036850	PtrMemberAccess	c -> avctx		1036682	0					
ANR	1036851	Identifier	c		1036682	0					
ANR	1036852	Identifier	avctx		1036682	1					
ANR	1036853	Identifier	width		1036682	1					
ANR	1036854	Identifier	is_chroma		1036682	1					
ANR	1036855	ExpressionStatement	"init_lengths ( c , FFMAX ( width , 8 ) , bw )"	39:4:727:763	1036682	44	True				
ANR	1036856	CallExpression	"init_lengths ( c , FFMAX ( width , 8 ) , bw )"		1036682	0					
ANR	1036857	Callee	init_lengths		1036682	0					
ANR	1036858	Identifier	init_lengths		1036682	0					
ANR	1036859	ArgumentList	c		1036682	1					
ANR	1036860	Argument	c		1036682	0					
ANR	1036861	Identifier	c		1036682	0					
ANR	1036862	Argument	"FFMAX ( width , 8 )"		1036682	1					
ANR	1036863	CallExpression	"FFMAX ( width , 8 )"		1036682	0					
ANR	1036864	Callee	FFMAX		1036682	0					
ANR	1036865	Identifier	FFMAX		1036682	0					
ANR	1036866	ArgumentList	width		1036682	1					
ANR	1036867	Argument	width		1036682	0					
ANR	1036868	Identifier	width		1036682	0					
ANR	1036869	Argument	8		1036682	1					
ANR	1036870	PrimaryExpression	8		1036682	0					
ANR	1036871	Argument	bw		1036682	2					
ANR	1036872	Identifier	bw		1036682	0					
ANR	1036873	ForStatement	for ( i = 0 ; i < BINK_NB_SRC ; i ++ )		1036682	45					
ANR	1036874	ForInit	i = 0 ;	41:9:775:780	1036682	0	True				
ANR	1036875	AssignmentExpression	i = 0		1036682	0		=			
ANR	1036876	Identifier	i		1036682	0					
ANR	1036877	PrimaryExpression	0		1036682	1					
ANR	1036878	Condition	i < BINK_NB_SRC	41:16:782:796	1036682	1	True				
ANR	1036879	RelationalExpression	i < BINK_NB_SRC		1036682	0		<			
ANR	1036880	Identifier	i		1036682	0					
ANR	1036881	Identifier	BINK_NB_SRC		1036682	1					
ANR	1036882	PostIncDecOperationExpression	i ++	41:33:799:801	1036682	2	True				
ANR	1036883	Identifier	i		1036682	0					
ANR	1036884	IncDec	++		1036682	1					
ANR	1036885	ExpressionStatement	"read_bundle ( gb , c , i )"	43:8:813:834	1036682	3	True				
ANR	1036886	CallExpression	"read_bundle ( gb , c , i )"		1036682	0					
ANR	1036887	Callee	read_bundle		1036682	0					
ANR	1036888	Identifier	read_bundle		1036682	0					
ANR	1036889	ArgumentList	gb		1036682	1					
ANR	1036890	Argument	gb		1036682	0					
ANR	1036891	Identifier	gb		1036682	0					
ANR	1036892	Argument	c		1036682	1					
ANR	1036893	Identifier	c		1036682	0					
ANR	1036894	Argument	i		1036682	2					
ANR	1036895	Identifier	i		1036682	0					
ANR	1036896	ExpressionStatement	ref_start = c -> last . data [ plane_idx ]	47:4:843:878	1036682	46	True				
ANR	1036897	AssignmentExpression	ref_start = c -> last . data [ plane_idx ]		1036682	0		=			
ANR	1036898	Identifier	ref_start		1036682	0					
ANR	1036899	ArrayIndexing	c -> last . data [ plane_idx ]		1036682	1					
ANR	1036900	MemberAccess	c -> last . data		1036682	0					
ANR	1036901	PtrMemberAccess	c -> last		1036682	0					
ANR	1036902	Identifier	c		1036682	0					
ANR	1036903	Identifier	last		1036682	1					
ANR	1036904	Identifier	data		1036682	1					
ANR	1036905	Identifier	plane_idx		1036682	1					
ANR	1036906	ExpressionStatement	ref_end = c -> last . data [ plane_idx ] + ( bw - 1 + c -> last . linesize [ plane_idx ] * ( bh - 1 ) ) * 8	49:4:885:993	1036682	47	True				
ANR	1036907	AssignmentExpression	ref_end = c -> last . data [ plane_idx ] + ( bw - 1 + c -> last . linesize [ plane_idx ] * ( bh - 1 ) ) * 8		1036682	0		=			
ANR	1036908	Identifier	ref_end		1036682	0					
ANR	1036909	AdditiveExpression	c -> last . data [ plane_idx ] + ( bw - 1 + c -> last . linesize [ plane_idx ] * ( bh - 1 ) ) * 8		1036682	1		+			
ANR	1036910	ArrayIndexing	c -> last . data [ plane_idx ]		1036682	0					
ANR	1036911	MemberAccess	c -> last . data		1036682	0					
ANR	1036912	PtrMemberAccess	c -> last		1036682	0					
ANR	1036913	Identifier	c		1036682	0					
ANR	1036914	Identifier	last		1036682	1					
ANR	1036915	Identifier	data		1036682	1					
ANR	1036916	Identifier	plane_idx		1036682	1					
ANR	1036917	MultiplicativeExpression	( bw - 1 + c -> last . linesize [ plane_idx ] * ( bh - 1 ) ) * 8		1036682	1		*			
ANR	1036918	AdditiveExpression	bw - 1 + c -> last . linesize [ plane_idx ] * ( bh - 1 )		1036682	0		-			
ANR	1036919	Identifier	bw		1036682	0					
ANR	1036920	AdditiveExpression	1 + c -> last . linesize [ plane_idx ] * ( bh - 1 )		1036682	1		+			
ANR	1036921	PrimaryExpression	1		1036682	0					
ANR	1036922	MultiplicativeExpression	c -> last . linesize [ plane_idx ] * ( bh - 1 )		1036682	1		*			
ANR	1036923	ArrayIndexing	c -> last . linesize [ plane_idx ]		1036682	0					
ANR	1036924	MemberAccess	c -> last . linesize		1036682	0					
ANR	1036925	PtrMemberAccess	c -> last		1036682	0					
ANR	1036926	Identifier	c		1036682	0					
ANR	1036927	Identifier	last		1036682	1					
ANR	1036928	Identifier	linesize		1036682	1					
ANR	1036929	Identifier	plane_idx		1036682	1					
ANR	1036930	AdditiveExpression	bh - 1		1036682	1		-			
ANR	1036931	Identifier	bh		1036682	0					
ANR	1036932	PrimaryExpression	1		1036682	1					
ANR	1036933	PrimaryExpression	8		1036682	1					
ANR	1036934	ForStatement	for ( i = 0 ; i < 64 ; i ++ )		1036682	48					
ANR	1036935	ForInit	i = 0 ;	55:9:1007:1012	1036682	0	True				
ANR	1036936	AssignmentExpression	i = 0		1036682	0		=			
ANR	1036937	Identifier	i		1036682	0					
ANR	1036938	PrimaryExpression	0		1036682	1					
ANR	1036939	Condition	i < 64	55:16:1014:1019	1036682	1	True				
ANR	1036940	RelationalExpression	i < 64		1036682	0		<			
ANR	1036941	Identifier	i		1036682	0					
ANR	1036942	PrimaryExpression	64		1036682	1					
ANR	1036943	PostIncDecOperationExpression	i ++	55:24:1022:1024	1036682	2	True				
ANR	1036944	Identifier	i		1036682	0					
ANR	1036945	IncDec	++		1036682	1					
ANR	1036946	ExpressionStatement	coordmap [ i ] = ( i & 7 ) + ( i >> 3 ) * stride	57:8:1036:1077	1036682	3	True				
ANR	1036947	AssignmentExpression	coordmap [ i ] = ( i & 7 ) + ( i >> 3 ) * stride		1036682	0		=			
ANR	1036948	ArrayIndexing	coordmap [ i ]		1036682	0					
ANR	1036949	Identifier	coordmap		1036682	0					
ANR	1036950	Identifier	i		1036682	1					
ANR	1036951	AdditiveExpression	( i & 7 ) + ( i >> 3 ) * stride		1036682	1		+			
ANR	1036952	BitAndExpression	i & 7		1036682	0		&			
ANR	1036953	Identifier	i		1036682	0					
ANR	1036954	PrimaryExpression	7		1036682	1					
ANR	1036955	MultiplicativeExpression	( i >> 3 ) * stride		1036682	1		*			
ANR	1036956	ShiftExpression	i >> 3		1036682	0		>>			
ANR	1036957	Identifier	i		1036682	0					
ANR	1036958	PrimaryExpression	3		1036682	1					
ANR	1036959	Identifier	stride		1036682	1					
ANR	1036960	ForStatement	for ( by = 0 ; by < bh ; by ++ )		1036682	49					
ANR	1036961	ForInit	by = 0 ;	61:9:1091:1097	1036682	0	True				
ANR	1036962	AssignmentExpression	by = 0		1036682	0		=			
ANR	1036963	Identifier	by		1036682	0					
ANR	1036964	PrimaryExpression	0		1036682	1					
ANR	1036965	Condition	by < bh	61:17:1099:1105	1036682	1	True				
ANR	1036966	RelationalExpression	by < bh		1036682	0		<			
ANR	1036967	Identifier	by		1036682	0					
ANR	1036968	Identifier	bh		1036682	1					
ANR	1036969	PostIncDecOperationExpression	by ++	61:26:1108:1111	1036682	2	True				
ANR	1036970	Identifier	by		1036682	0					
ANR	1036971	IncDec	++		1036682	1					
ANR	1036972	CompoundStatement		57:32:988:988	1036682	3					
ANR	1036973	IfStatement	"if ( read_block_types ( c -> avctx , gb , & c -> bundle [ BINK_SRC_BLOCK_TYPES ] ) < 0 )"		1036682	0					
ANR	1036974	Condition	"read_block_types ( c -> avctx , gb , & c -> bundle [ BINK_SRC_BLOCK_TYPES ] ) < 0"	63:12:1129:1196	1036682	0	True				
ANR	1036975	RelationalExpression	"read_block_types ( c -> avctx , gb , & c -> bundle [ BINK_SRC_BLOCK_TYPES ] ) < 0"		1036682	0		<			
ANR	1036976	CallExpression	"read_block_types ( c -> avctx , gb , & c -> bundle [ BINK_SRC_BLOCK_TYPES ] )"		1036682	0					
ANR	1036977	Callee	read_block_types		1036682	0					
ANR	1036978	Identifier	read_block_types		1036682	0					
ANR	1036979	ArgumentList	c -> avctx		1036682	1					
ANR	1036980	Argument	c -> avctx		1036682	0					
ANR	1036981	PtrMemberAccess	c -> avctx		1036682	0					
ANR	1036982	Identifier	c		1036682	0					
ANR	1036983	Identifier	avctx		1036682	1					
ANR	1036984	Argument	gb		1036682	1					
ANR	1036985	Identifier	gb		1036682	0					
ANR	1036986	Argument	& c -> bundle [ BINK_SRC_BLOCK_TYPES ]		1036682	2					
ANR	1036987	UnaryOperationExpression	& c -> bundle [ BINK_SRC_BLOCK_TYPES ]		1036682	0					
ANR	1036988	UnaryOperator	&		1036682	0					
ANR	1036989	ArrayIndexing	c -> bundle [ BINK_SRC_BLOCK_TYPES ]		1036682	1					
ANR	1036990	PtrMemberAccess	c -> bundle		1036682	0					
ANR	1036991	Identifier	c		1036682	0					
ANR	1036992	Identifier	bundle		1036682	1					
ANR	1036993	Identifier	BINK_SRC_BLOCK_TYPES		1036682	1					
ANR	1036994	PrimaryExpression	0		1036682	1					
ANR	1036995	ReturnStatement	return - 1 ;	65:12:1212:1221	1036682	1	True				
ANR	1036996	UnaryOperationExpression	- 1		1036682	0					
ANR	1036997	UnaryOperator	-		1036682	0					
ANR	1036998	PrimaryExpression	1		1036682	1					
ANR	1036999	IfStatement	"if ( read_block_types ( c -> avctx , gb , & c -> bundle [ BINK_SRC_SUB_BLOCK_TYPES ] ) < 0 )"		1036682	1					
ANR	1037000	Condition	"read_block_types ( c -> avctx , gb , & c -> bundle [ BINK_SRC_SUB_BLOCK_TYPES ] ) < 0"	67:12:1236:1307	1036682	0	True				
ANR	1037001	RelationalExpression	"read_block_types ( c -> avctx , gb , & c -> bundle [ BINK_SRC_SUB_BLOCK_TYPES ] ) < 0"		1036682	0		<			
ANR	1037002	CallExpression	"read_block_types ( c -> avctx , gb , & c -> bundle [ BINK_SRC_SUB_BLOCK_TYPES ] )"		1036682	0					
ANR	1037003	Callee	read_block_types		1036682	0					
ANR	1037004	Identifier	read_block_types		1036682	0					
ANR	1037005	ArgumentList	c -> avctx		1036682	1					
ANR	1037006	Argument	c -> avctx		1036682	0					
ANR	1037007	PtrMemberAccess	c -> avctx		1036682	0					
ANR	1037008	Identifier	c		1036682	0					
ANR	1037009	Identifier	avctx		1036682	1					
ANR	1037010	Argument	gb		1036682	1					
ANR	1037011	Identifier	gb		1036682	0					
ANR	1037012	Argument	& c -> bundle [ BINK_SRC_SUB_BLOCK_TYPES ]		1036682	2					
ANR	1037013	UnaryOperationExpression	& c -> bundle [ BINK_SRC_SUB_BLOCK_TYPES ]		1036682	0					
ANR	1037014	UnaryOperator	&		1036682	0					
ANR	1037015	ArrayIndexing	c -> bundle [ BINK_SRC_SUB_BLOCK_TYPES ]		1036682	1					
ANR	1037016	PtrMemberAccess	c -> bundle		1036682	0					
ANR	1037017	Identifier	c		1036682	0					
ANR	1037018	Identifier	bundle		1036682	1					
ANR	1037019	Identifier	BINK_SRC_SUB_BLOCK_TYPES		1036682	1					
ANR	1037020	PrimaryExpression	0		1036682	1					
ANR	1037021	ReturnStatement	return - 1 ;	69:12:1323:1332	1036682	1	True				
ANR	1037022	UnaryOperationExpression	- 1		1036682	0					
ANR	1037023	UnaryOperator	-		1036682	0					
ANR	1037024	PrimaryExpression	1		1036682	1					
ANR	1037025	IfStatement	"if ( read_colors ( gb , & c -> bundle [ BINK_SRC_COLORS ] , c ) < 0 )"		1036682	2					
ANR	1037026	Condition	"read_colors ( gb , & c -> bundle [ BINK_SRC_COLORS ] , c ) < 0"	71:12:1347:1397	1036682	0	True				
ANR	1037027	RelationalExpression	"read_colors ( gb , & c -> bundle [ BINK_SRC_COLORS ] , c ) < 0"		1036682	0		<			
ANR	1037028	CallExpression	"read_colors ( gb , & c -> bundle [ BINK_SRC_COLORS ] , c )"		1036682	0					
ANR	1037029	Callee	read_colors		1036682	0					
ANR	1037030	Identifier	read_colors		1036682	0					
ANR	1037031	ArgumentList	gb		1036682	1					
ANR	1037032	Argument	gb		1036682	0					
ANR	1037033	Identifier	gb		1036682	0					
ANR	1037034	Argument	& c -> bundle [ BINK_SRC_COLORS ]		1036682	1					
ANR	1037035	UnaryOperationExpression	& c -> bundle [ BINK_SRC_COLORS ]		1036682	0					
ANR	1037036	UnaryOperator	&		1036682	0					
ANR	1037037	ArrayIndexing	c -> bundle [ BINK_SRC_COLORS ]		1036682	1					
ANR	1037038	PtrMemberAccess	c -> bundle		1036682	0					
ANR	1037039	Identifier	c		1036682	0					
ANR	1037040	Identifier	bundle		1036682	1					
ANR	1037041	Identifier	BINK_SRC_COLORS		1036682	1					
ANR	1037042	Argument	c		1036682	2					
ANR	1037043	Identifier	c		1036682	0					
ANR	1037044	PrimaryExpression	0		1036682	1					
ANR	1037045	ReturnStatement	return - 1 ;	73:12:1413:1422	1036682	1	True				
ANR	1037046	UnaryOperationExpression	- 1		1036682	0					
ANR	1037047	UnaryOperator	-		1036682	0					
ANR	1037048	PrimaryExpression	1		1036682	1					
ANR	1037049	IfStatement	"if ( read_patterns ( c -> avctx , gb , & c -> bundle [ BINK_SRC_PATTERN ] ) < 0 )"		1036682	3					
ANR	1037050	Condition	"read_patterns ( c -> avctx , gb , & c -> bundle [ BINK_SRC_PATTERN ] ) < 0"	75:12:1437:1497	1036682	0	True				
ANR	1037051	RelationalExpression	"read_patterns ( c -> avctx , gb , & c -> bundle [ BINK_SRC_PATTERN ] ) < 0"		1036682	0		<			
ANR	1037052	CallExpression	"read_patterns ( c -> avctx , gb , & c -> bundle [ BINK_SRC_PATTERN ] )"		1036682	0					
ANR	1037053	Callee	read_patterns		1036682	0					
ANR	1037054	Identifier	read_patterns		1036682	0					
ANR	1037055	ArgumentList	c -> avctx		1036682	1					
ANR	1037056	Argument	c -> avctx		1036682	0					
ANR	1037057	PtrMemberAccess	c -> avctx		1036682	0					
ANR	1037058	Identifier	c		1036682	0					
ANR	1037059	Identifier	avctx		1036682	1					
ANR	1037060	Argument	gb		1036682	1					
ANR	1037061	Identifier	gb		1036682	0					
ANR	1037062	Argument	& c -> bundle [ BINK_SRC_PATTERN ]		1036682	2					
ANR	1037063	UnaryOperationExpression	& c -> bundle [ BINK_SRC_PATTERN ]		1036682	0					
ANR	1037064	UnaryOperator	&		1036682	0					
ANR	1037065	ArrayIndexing	c -> bundle [ BINK_SRC_PATTERN ]		1036682	1					
ANR	1037066	PtrMemberAccess	c -> bundle		1036682	0					
ANR	1037067	Identifier	c		1036682	0					
ANR	1037068	Identifier	bundle		1036682	1					
ANR	1037069	Identifier	BINK_SRC_PATTERN		1036682	1					
ANR	1037070	PrimaryExpression	0		1036682	1					
ANR	1037071	ReturnStatement	return - 1 ;	77:12:1513:1522	1036682	1	True				
ANR	1037072	UnaryOperationExpression	- 1		1036682	0					
ANR	1037073	UnaryOperator	-		1036682	0					
ANR	1037074	PrimaryExpression	1		1036682	1					
ANR	1037075	IfStatement	"if ( read_motion_values ( c -> avctx , gb , & c -> bundle [ BINK_SRC_X_OFF ] ) < 0 )"		1036682	4					
ANR	1037076	Condition	"read_motion_values ( c -> avctx , gb , & c -> bundle [ BINK_SRC_X_OFF ] ) < 0"	79:12:1537:1600	1036682	0	True				
ANR	1037077	RelationalExpression	"read_motion_values ( c -> avctx , gb , & c -> bundle [ BINK_SRC_X_OFF ] ) < 0"		1036682	0		<			
ANR	1037078	CallExpression	"read_motion_values ( c -> avctx , gb , & c -> bundle [ BINK_SRC_X_OFF ] )"		1036682	0					
ANR	1037079	Callee	read_motion_values		1036682	0					
ANR	1037080	Identifier	read_motion_values		1036682	0					
ANR	1037081	ArgumentList	c -> avctx		1036682	1					
ANR	1037082	Argument	c -> avctx		1036682	0					
ANR	1037083	PtrMemberAccess	c -> avctx		1036682	0					
ANR	1037084	Identifier	c		1036682	0					
ANR	1037085	Identifier	avctx		1036682	1					
ANR	1037086	Argument	gb		1036682	1					
ANR	1037087	Identifier	gb		1036682	0					
ANR	1037088	Argument	& c -> bundle [ BINK_SRC_X_OFF ]		1036682	2					
ANR	1037089	UnaryOperationExpression	& c -> bundle [ BINK_SRC_X_OFF ]		1036682	0					
ANR	1037090	UnaryOperator	&		1036682	0					
ANR	1037091	ArrayIndexing	c -> bundle [ BINK_SRC_X_OFF ]		1036682	1					
ANR	1037092	PtrMemberAccess	c -> bundle		1036682	0					
ANR	1037093	Identifier	c		1036682	0					
ANR	1037094	Identifier	bundle		1036682	1					
ANR	1037095	Identifier	BINK_SRC_X_OFF		1036682	1					
ANR	1037096	PrimaryExpression	0		1036682	1					
ANR	1037097	ReturnStatement	return - 1 ;	81:12:1616:1625	1036682	1	True				
ANR	1037098	UnaryOperationExpression	- 1		1036682	0					
ANR	1037099	UnaryOperator	-		1036682	0					
ANR	1037100	PrimaryExpression	1		1036682	1					
ANR	1037101	IfStatement	"if ( read_motion_values ( c -> avctx , gb , & c -> bundle [ BINK_SRC_Y_OFF ] ) < 0 )"		1036682	5					
ANR	1037102	Condition	"read_motion_values ( c -> avctx , gb , & c -> bundle [ BINK_SRC_Y_OFF ] ) < 0"	83:12:1640:1703	1036682	0	True				
ANR	1037103	RelationalExpression	"read_motion_values ( c -> avctx , gb , & c -> bundle [ BINK_SRC_Y_OFF ] ) < 0"		1036682	0		<			
ANR	1037104	CallExpression	"read_motion_values ( c -> avctx , gb , & c -> bundle [ BINK_SRC_Y_OFF ] )"		1036682	0					
ANR	1037105	Callee	read_motion_values		1036682	0					
ANR	1037106	Identifier	read_motion_values		1036682	0					
ANR	1037107	ArgumentList	c -> avctx		1036682	1					
ANR	1037108	Argument	c -> avctx		1036682	0					
ANR	1037109	PtrMemberAccess	c -> avctx		1036682	0					
ANR	1037110	Identifier	c		1036682	0					
ANR	1037111	Identifier	avctx		1036682	1					
ANR	1037112	Argument	gb		1036682	1					
ANR	1037113	Identifier	gb		1036682	0					
ANR	1037114	Argument	& c -> bundle [ BINK_SRC_Y_OFF ]		1036682	2					
ANR	1037115	UnaryOperationExpression	& c -> bundle [ BINK_SRC_Y_OFF ]		1036682	0					
ANR	1037116	UnaryOperator	&		1036682	0					
ANR	1037117	ArrayIndexing	c -> bundle [ BINK_SRC_Y_OFF ]		1036682	1					
ANR	1037118	PtrMemberAccess	c -> bundle		1036682	0					
ANR	1037119	Identifier	c		1036682	0					
ANR	1037120	Identifier	bundle		1036682	1					
ANR	1037121	Identifier	BINK_SRC_Y_OFF		1036682	1					
ANR	1037122	PrimaryExpression	0		1036682	1					
ANR	1037123	ReturnStatement	return - 1 ;	85:12:1719:1728	1036682	1	True				
ANR	1037124	UnaryOperationExpression	- 1		1036682	0					
ANR	1037125	UnaryOperator	-		1036682	0					
ANR	1037126	PrimaryExpression	1		1036682	1					
ANR	1037127	IfStatement	"if ( read_dcs ( c -> avctx , gb , & c -> bundle [ BINK_SRC_INTRA_DC ] , DC_START_BITS , 0 ) < 0 )"		1036682	6					
ANR	1037128	Condition	"read_dcs ( c -> avctx , gb , & c -> bundle [ BINK_SRC_INTRA_DC ] , DC_START_BITS , 0 ) < 0"	87:12:1743:1817	1036682	0	True				
ANR	1037129	RelationalExpression	"read_dcs ( c -> avctx , gb , & c -> bundle [ BINK_SRC_INTRA_DC ] , DC_START_BITS , 0 ) < 0"		1036682	0		<			
ANR	1037130	CallExpression	"read_dcs ( c -> avctx , gb , & c -> bundle [ BINK_SRC_INTRA_DC ] , DC_START_BITS , 0 )"		1036682	0					
ANR	1037131	Callee	read_dcs		1036682	0					
ANR	1037132	Identifier	read_dcs		1036682	0					
ANR	1037133	ArgumentList	c -> avctx		1036682	1					
ANR	1037134	Argument	c -> avctx		1036682	0					
ANR	1037135	PtrMemberAccess	c -> avctx		1036682	0					
ANR	1037136	Identifier	c		1036682	0					
ANR	1037137	Identifier	avctx		1036682	1					
ANR	1037138	Argument	gb		1036682	1					
ANR	1037139	Identifier	gb		1036682	0					
ANR	1037140	Argument	& c -> bundle [ BINK_SRC_INTRA_DC ]		1036682	2					
ANR	1037141	UnaryOperationExpression	& c -> bundle [ BINK_SRC_INTRA_DC ]		1036682	0					
ANR	1037142	UnaryOperator	&		1036682	0					
ANR	1037143	ArrayIndexing	c -> bundle [ BINK_SRC_INTRA_DC ]		1036682	1					
ANR	1037144	PtrMemberAccess	c -> bundle		1036682	0					
ANR	1037145	Identifier	c		1036682	0					
ANR	1037146	Identifier	bundle		1036682	1					
ANR	1037147	Identifier	BINK_SRC_INTRA_DC		1036682	1					
ANR	1037148	Argument	DC_START_BITS		1036682	3					
ANR	1037149	Identifier	DC_START_BITS		1036682	0					
ANR	1037150	Argument	0		1036682	4					
ANR	1037151	PrimaryExpression	0		1036682	0					
ANR	1037152	PrimaryExpression	0		1036682	1					
ANR	1037153	ReturnStatement	return - 1 ;	89:12:1833:1842	1036682	1	True				
ANR	1037154	UnaryOperationExpression	- 1		1036682	0					
ANR	1037155	UnaryOperator	-		1036682	0					
ANR	1037156	PrimaryExpression	1		1036682	1					
ANR	1037157	IfStatement	"if ( read_dcs ( c -> avctx , gb , & c -> bundle [ BINK_SRC_INTER_DC ] , DC_START_BITS , 1 ) < 0 )"		1036682	7					
ANR	1037158	Condition	"read_dcs ( c -> avctx , gb , & c -> bundle [ BINK_SRC_INTER_DC ] , DC_START_BITS , 1 ) < 0"	91:12:1857:1931	1036682	0	True				
ANR	1037159	RelationalExpression	"read_dcs ( c -> avctx , gb , & c -> bundle [ BINK_SRC_INTER_DC ] , DC_START_BITS , 1 ) < 0"		1036682	0		<			
ANR	1037160	CallExpression	"read_dcs ( c -> avctx , gb , & c -> bundle [ BINK_SRC_INTER_DC ] , DC_START_BITS , 1 )"		1036682	0					
ANR	1037161	Callee	read_dcs		1036682	0					
ANR	1037162	Identifier	read_dcs		1036682	0					
ANR	1037163	ArgumentList	c -> avctx		1036682	1					
ANR	1037164	Argument	c -> avctx		1036682	0					
ANR	1037165	PtrMemberAccess	c -> avctx		1036682	0					
ANR	1037166	Identifier	c		1036682	0					
ANR	1037167	Identifier	avctx		1036682	1					
ANR	1037168	Argument	gb		1036682	1					
ANR	1037169	Identifier	gb		1036682	0					
ANR	1037170	Argument	& c -> bundle [ BINK_SRC_INTER_DC ]		1036682	2					
ANR	1037171	UnaryOperationExpression	& c -> bundle [ BINK_SRC_INTER_DC ]		1036682	0					
ANR	1037172	UnaryOperator	&		1036682	0					
ANR	1037173	ArrayIndexing	c -> bundle [ BINK_SRC_INTER_DC ]		1036682	1					
ANR	1037174	PtrMemberAccess	c -> bundle		1036682	0					
ANR	1037175	Identifier	c		1036682	0					
ANR	1037176	Identifier	bundle		1036682	1					
ANR	1037177	Identifier	BINK_SRC_INTER_DC		1036682	1					
ANR	1037178	Argument	DC_START_BITS		1036682	3					
ANR	1037179	Identifier	DC_START_BITS		1036682	0					
ANR	1037180	Argument	1		1036682	4					
ANR	1037181	PrimaryExpression	1		1036682	0					
ANR	1037182	PrimaryExpression	0		1036682	1					
ANR	1037183	ReturnStatement	return - 1 ;	93:12:1947:1956	1036682	1	True				
ANR	1037184	UnaryOperationExpression	- 1		1036682	0					
ANR	1037185	UnaryOperator	-		1036682	0					
ANR	1037186	PrimaryExpression	1		1036682	1					
ANR	1037187	IfStatement	"if ( read_runs ( c -> avctx , gb , & c -> bundle [ BINK_SRC_RUN ] ) < 0 )"		1036682	8					
ANR	1037188	Condition	"read_runs ( c -> avctx , gb , & c -> bundle [ BINK_SRC_RUN ] ) < 0"	95:12:1971:2023	1036682	0	True				
ANR	1037189	RelationalExpression	"read_runs ( c -> avctx , gb , & c -> bundle [ BINK_SRC_RUN ] ) < 0"		1036682	0		<			
ANR	1037190	CallExpression	"read_runs ( c -> avctx , gb , & c -> bundle [ BINK_SRC_RUN ] )"		1036682	0					
ANR	1037191	Callee	read_runs		1036682	0					
ANR	1037192	Identifier	read_runs		1036682	0					
ANR	1037193	ArgumentList	c -> avctx		1036682	1					
ANR	1037194	Argument	c -> avctx		1036682	0					
ANR	1037195	PtrMemberAccess	c -> avctx		1036682	0					
ANR	1037196	Identifier	c		1036682	0					
ANR	1037197	Identifier	avctx		1036682	1					
ANR	1037198	Argument	gb		1036682	1					
ANR	1037199	Identifier	gb		1036682	0					
ANR	1037200	Argument	& c -> bundle [ BINK_SRC_RUN ]		1036682	2					
ANR	1037201	UnaryOperationExpression	& c -> bundle [ BINK_SRC_RUN ]		1036682	0					
ANR	1037202	UnaryOperator	&		1036682	0					
ANR	1037203	ArrayIndexing	c -> bundle [ BINK_SRC_RUN ]		1036682	1					
ANR	1037204	PtrMemberAccess	c -> bundle		1036682	0					
ANR	1037205	Identifier	c		1036682	0					
ANR	1037206	Identifier	bundle		1036682	1					
ANR	1037207	Identifier	BINK_SRC_RUN		1036682	1					
ANR	1037208	PrimaryExpression	0		1036682	1					
ANR	1037209	ReturnStatement	return - 1 ;	97:12:2039:2048	1036682	1	True				
ANR	1037210	UnaryOperationExpression	- 1		1036682	0					
ANR	1037211	UnaryOperator	-		1036682	0					
ANR	1037212	PrimaryExpression	1		1036682	1					
ANR	1037213	IfStatement	if ( by == bh )		1036682	9					
ANR	1037214	Condition	by == bh	101:12:2065:2072	1036682	0	True				
ANR	1037215	EqualityExpression	by == bh		1036682	0		==			
ANR	1037216	Identifier	by		1036682	0					
ANR	1037217	Identifier	bh		1036682	1					
ANR	1037218	BreakStatement	break ;	103:12:2088:2093	1036682	1	True				
ANR	1037219	ExpressionStatement	dst = c -> pic . data [ plane_idx ] + 8 * by * stride	105:8:2104:2148	1036682	10	True				
ANR	1037220	AssignmentExpression	dst = c -> pic . data [ plane_idx ] + 8 * by * stride		1036682	0		=			
ANR	1037221	Identifier	dst		1036682	0					
ANR	1037222	AdditiveExpression	c -> pic . data [ plane_idx ] + 8 * by * stride		1036682	1		+			
ANR	1037223	ArrayIndexing	c -> pic . data [ plane_idx ]		1036682	0					
ANR	1037224	MemberAccess	c -> pic . data		1036682	0					
ANR	1037225	PtrMemberAccess	c -> pic		1036682	0					
ANR	1037226	Identifier	c		1036682	0					
ANR	1037227	Identifier	pic		1036682	1					
ANR	1037228	Identifier	data		1036682	1					
ANR	1037229	Identifier	plane_idx		1036682	1					
ANR	1037230	MultiplicativeExpression	8 * by * stride		1036682	1		*			
ANR	1037231	PrimaryExpression	8		1036682	0					
ANR	1037232	MultiplicativeExpression	by * stride		1036682	1		*			
ANR	1037233	Identifier	by		1036682	0					
ANR	1037234	Identifier	stride		1036682	1					
ANR	1037235	ExpressionStatement	prev = c -> last . data [ plane_idx ] + 8 * by * stride	107:8:2159:2203	1036682	11	True				
ANR	1037236	AssignmentExpression	prev = c -> last . data [ plane_idx ] + 8 * by * stride		1036682	0		=			
ANR	1037237	Identifier	prev		1036682	0					
ANR	1037238	AdditiveExpression	c -> last . data [ plane_idx ] + 8 * by * stride		1036682	1		+			
ANR	1037239	ArrayIndexing	c -> last . data [ plane_idx ]		1036682	0					
ANR	1037240	MemberAccess	c -> last . data		1036682	0					
ANR	1037241	PtrMemberAccess	c -> last		1036682	0					
ANR	1037242	Identifier	c		1036682	0					
ANR	1037243	Identifier	last		1036682	1					
ANR	1037244	Identifier	data		1036682	1					
ANR	1037245	Identifier	plane_idx		1036682	1					
ANR	1037246	MultiplicativeExpression	8 * by * stride		1036682	1		*			
ANR	1037247	PrimaryExpression	8		1036682	0					
ANR	1037248	MultiplicativeExpression	by * stride		1036682	1		*			
ANR	1037249	Identifier	by		1036682	0					
ANR	1037250	Identifier	stride		1036682	1					
ANR	1037251	ForStatement	"for ( bx = 0 ; bx < bw ; bx ++ , dst += 8 , prev += 8 )"		1036682	12					
ANR	1037252	ForInit	bx = 0 ;	109:13:2219:2225	1036682	0	True				
ANR	1037253	AssignmentExpression	bx = 0		1036682	0		=			
ANR	1037254	Identifier	bx		1036682	0					
ANR	1037255	PrimaryExpression	0		1036682	1					
ANR	1037256	Condition	bx < bw	109:21:2227:2233	1036682	1	True				
ANR	1037257	RelationalExpression	bx < bw		1036682	0		<			
ANR	1037258	Identifier	bx		1036682	0					
ANR	1037259	Identifier	bw		1036682	1					
ANR	1037260	Expression	"bx ++ , dst += 8 , prev += 8"	109:30:2236:2260	1036682	2	True				
ANR	1037261	PostIncDecOperationExpression	bx ++		1036682	0					
ANR	1037262	Identifier	bx		1036682	0					
ANR	1037263	IncDec	++		1036682	1					
ANR	1037264	Expression	"dst += 8 , prev += 8"		1036682	1					
ANR	1037265	AssignmentExpression	dst += 8		1036682	0		+=			
ANR	1037266	Identifier	dst		1036682	0					
ANR	1037267	PrimaryExpression	8		1036682	1					
ANR	1037268	AssignmentExpression	prev += 8		1036682	1		+=			
ANR	1037269	Identifier	prev		1036682	0					
ANR	1037270	PrimaryExpression	8		1036682	1					
ANR	1037271	CompoundStatement		105:57:2137:2137	1036682	3					
ANR	1037272	ExpressionStatement	"blk = get_value ( c , BINK_SRC_BLOCK_TYPES )"	111:12:2278:2318	1036682	0	True				
ANR	1037273	AssignmentExpression	"blk = get_value ( c , BINK_SRC_BLOCK_TYPES )"		1036682	0		=			
ANR	1037274	Identifier	blk		1036682	0					
ANR	1037275	CallExpression	"get_value ( c , BINK_SRC_BLOCK_TYPES )"		1036682	1					
ANR	1037276	Callee	get_value		1036682	0					
ANR	1037277	Identifier	get_value		1036682	0					
ANR	1037278	ArgumentList	c		1036682	1					
ANR	1037279	Argument	c		1036682	0					
ANR	1037280	Identifier	c		1036682	0					
ANR	1037281	Argument	BINK_SRC_BLOCK_TYPES		1036682	1					
ANR	1037282	Identifier	BINK_SRC_BLOCK_TYPES		1036682	0					
ANR	1037283	IfStatement	if ( ( by & 1 ) && blk == SCALED_BLOCK )		1036682	1					
ANR	1037284	Condition	( by & 1 ) && blk == SCALED_BLOCK	115:16:2434:2464	1036682	0	True				
ANR	1037285	AndExpression	( by & 1 ) && blk == SCALED_BLOCK		1036682	0		&&			
ANR	1037286	BitAndExpression	by & 1		1036682	0		&			
ANR	1037287	Identifier	by		1036682	0					
ANR	1037288	PrimaryExpression	1		1036682	1					
ANR	1037289	EqualityExpression	blk == SCALED_BLOCK		1036682	1		==			
ANR	1037290	Identifier	blk		1036682	0					
ANR	1037291	Identifier	SCALED_BLOCK		1036682	1					
ANR	1037292	CompoundStatement		111:49:2341:2341	1036682	1					
ANR	1037293	ExpressionStatement	bx ++	117:16:2486:2490	1036682	0	True				
ANR	1037294	PostIncDecOperationExpression	bx ++		1036682	0					
ANR	1037295	Identifier	bx		1036682	0					
ANR	1037296	IncDec	++		1036682	1					
ANR	1037297	ExpressionStatement	dst += 8	119:16:2509:2518	1036682	1	True				
ANR	1037298	AssignmentExpression	dst += 8		1036682	0		+=			
ANR	1037299	Identifier	dst		1036682	0					
ANR	1037300	PrimaryExpression	8		1036682	1					
ANR	1037301	ExpressionStatement	prev += 8	121:16:2537:2546	1036682	2	True				
ANR	1037302	AssignmentExpression	prev += 8		1036682	0		+=			
ANR	1037303	Identifier	prev		1036682	0					
ANR	1037304	PrimaryExpression	8		1036682	1					
ANR	1037305	ContinueStatement	continue ;	123:16:2565:2573	1036682	3	True				
ANR	1037306	SwitchStatement	switch ( blk )		1036682	2					
ANR	1037307	Condition	blk	127:20:2611:2613	1036682	0	True				
ANR	1037308	Identifier	blk		1036682	0					
ANR	1037309	CompoundStatement		123:25:2490:2490	1036682	1					
ANR	1037310	Label	case SKIP_BLOCK :	129:12:2631:2646	1036682	0	True				
ANR	1037311	Identifier	SKIP_BLOCK		1036682	0					
ANR	1037312	ExpressionStatement	"c -> dsp . put_pixels_tab [ 1 ] [ 0 ] ( dst , prev , stride , 8 )"	131:16:2665:2714	1036682	1	True				
ANR	1037313	CallExpression	"c -> dsp . put_pixels_tab [ 1 ] [ 0 ] ( dst , prev , stride , 8 )"		1036682	0					
ANR	1037314	Callee	c -> dsp . put_pixels_tab [ 1 ] [ 0 ]		1036682	0					
ANR	1037315	ArrayIndexing	c -> dsp . put_pixels_tab [ 1 ] [ 0 ]		1036682	0					
ANR	1037316	ArrayIndexing	c -> dsp . put_pixels_tab [ 1 ]		1036682	0					
ANR	1037317	MemberAccess	c -> dsp . put_pixels_tab		1036682	0					
ANR	1037318	PtrMemberAccess	c -> dsp		1036682	0					
ANR	1037319	Identifier	c		1036682	0					
ANR	1037320	Identifier	dsp		1036682	1					
ANR	1037321	Identifier	put_pixels_tab		1036682	1					
ANR	1037322	PrimaryExpression	1		1036682	1					
ANR	1037323	PrimaryExpression	0		1036682	1					
ANR	1037324	ArgumentList	dst		1036682	1					
ANR	1037325	Argument	dst		1036682	0					
ANR	1037326	Identifier	dst		1036682	0					
ANR	1037327	Argument	prev		1036682	1					
ANR	1037328	Identifier	prev		1036682	0					
ANR	1037329	Argument	stride		1036682	2					
ANR	1037330	Identifier	stride		1036682	0					
ANR	1037331	Argument	8		1036682	3					
ANR	1037332	PrimaryExpression	8		1036682	0					
ANR	1037333	BreakStatement	break ;	133:16:2733:2738	1036682	2	True				
ANR	1037334	Label	case SCALED_BLOCK :	135:12:2753:2770	1036682	3	True				
ANR	1037335	Identifier	SCALED_BLOCK		1036682	0					
ANR	1037336	ExpressionStatement	"blk = get_value ( c , BINK_SRC_SUB_BLOCK_TYPES )"	137:16:2789:2833	1036682	4	True				
ANR	1037337	AssignmentExpression	"blk = get_value ( c , BINK_SRC_SUB_BLOCK_TYPES )"		1036682	0		=			
ANR	1037338	Identifier	blk		1036682	0					
ANR	1037339	CallExpression	"get_value ( c , BINK_SRC_SUB_BLOCK_TYPES )"		1036682	1					
ANR	1037340	Callee	get_value		1036682	0					
ANR	1037341	Identifier	get_value		1036682	0					
ANR	1037342	ArgumentList	c		1036682	1					
ANR	1037343	Argument	c		1036682	0					
ANR	1037344	Identifier	c		1036682	0					
ANR	1037345	Argument	BINK_SRC_SUB_BLOCK_TYPES		1036682	1					
ANR	1037346	Identifier	BINK_SRC_SUB_BLOCK_TYPES		1036682	0					
ANR	1037347	SwitchStatement	switch ( blk )		1036682	5					
ANR	1037348	Condition	blk	139:24:2860:2862	1036682	0	True				
ANR	1037349	Identifier	blk		1036682	0					
ANR	1037350	CompoundStatement		135:29:2739:2739	1036682	1					
ANR	1037351	Label	case RUN_BLOCK :	141:16:2884:2898	1036682	0	True				
ANR	1037352	Identifier	RUN_BLOCK		1036682	0					
ANR	1037353	ExpressionStatement	"scan = bink_patterns [ get_bits ( gb , 4 ) ]"	143:20:2921:2958	1036682	1	True				
ANR	1037354	AssignmentExpression	"scan = bink_patterns [ get_bits ( gb , 4 ) ]"		1036682	0		=			
ANR	1037355	Identifier	scan		1036682	0					
ANR	1037356	ArrayIndexing	"bink_patterns [ get_bits ( gb , 4 ) ]"		1036682	1					
ANR	1037357	Identifier	bink_patterns		1036682	0					
ANR	1037358	CallExpression	"get_bits ( gb , 4 )"		1036682	1					
ANR	1037359	Callee	get_bits		1036682	0					
ANR	1037360	Identifier	get_bits		1036682	0					
ANR	1037361	ArgumentList	gb		1036682	1					
ANR	1037362	Argument	gb		1036682	0					
ANR	1037363	Identifier	gb		1036682	0					
ANR	1037364	Argument	4		1036682	1					
ANR	1037365	PrimaryExpression	4		1036682	0					
ANR	1037366	ExpressionStatement	i = 0	145:20:2981:2986	1036682	2	True				
ANR	1037367	AssignmentExpression	i = 0		1036682	0		=			
ANR	1037368	Identifier	i		1036682	0					
ANR	1037369	PrimaryExpression	0		1036682	1					
ANR	1037370	DoStatement	do		1036682	3					
ANR	1037371	CompoundStatement		145:24:2913:2953	1036682	0					
ANR	1037372	IdentifierDeclStatement	"int run = get_value ( c , BINK_SRC_RUN ) + 1 ;"	149:24:3039:3079	1036682	0	True				
ANR	1037373	IdentifierDecl	"run = get_value ( c , BINK_SRC_RUN ) + 1"		1036682	0					
ANR	1037374	IdentifierDeclType	int		1036682	0					
ANR	1037375	Identifier	run		1036682	1					
ANR	1037376	AssignmentExpression	"run = get_value ( c , BINK_SRC_RUN ) + 1"		1036682	2		=			
ANR	1037377	Identifier	run		1036682	0					
ANR	1037378	AdditiveExpression	"get_value ( c , BINK_SRC_RUN ) + 1"		1036682	1		+			
ANR	1037379	CallExpression	"get_value ( c , BINK_SRC_RUN )"		1036682	0					
ANR	1037380	Callee	get_value		1036682	0					
ANR	1037381	Identifier	get_value		1036682	0					
ANR	1037382	ArgumentList	c		1036682	1					
ANR	1037383	Argument	c		1036682	0					
ANR	1037384	Identifier	c		1036682	0					
ANR	1037385	Argument	BINK_SRC_RUN		1036682	1					
ANR	1037386	Identifier	BINK_SRC_RUN		1036682	0					
ANR	1037387	PrimaryExpression	1		1036682	1					
ANR	1037388	ExpressionStatement	i += run	153:24:3108:3116	1036682	1	True				
ANR	1037389	AssignmentExpression	i += run		1036682	0		+=			
ANR	1037390	Identifier	i		1036682	0					
ANR	1037391	Identifier	run		1036682	1					
ANR	1037392	IfStatement	if ( i > 64 )		1036682	2					
ANR	1037393	Condition	i > 64	155:28:3147:3152	1036682	0	True				
ANR	1037394	RelationalExpression	i > 64		1036682	0		>			
ANR	1037395	Identifier	i		1036682	0					
ANR	1037396	PrimaryExpression	64		1036682	1					
ANR	1037397	CompoundStatement		151:36:3029:3029	1036682	1					
ANR	1037398	ExpressionStatement	"av_log ( c -> avctx , AV_LOG_ERROR , ""Run went out of bounds\\n"" )"	157:28:3186:3244	1036682	0	True				
ANR	1037399	CallExpression	"av_log ( c -> avctx , AV_LOG_ERROR , ""Run went out of bounds\\n"" )"		1036682	0					
ANR	1037400	Callee	av_log		1036682	0					
ANR	1037401	Identifier	av_log		1036682	0					
ANR	1037402	ArgumentList	c -> avctx		1036682	1					
ANR	1037403	Argument	c -> avctx		1036682	0					
ANR	1037404	PtrMemberAccess	c -> avctx		1036682	0					
ANR	1037405	Identifier	c		1036682	0					
ANR	1037406	Identifier	avctx		1036682	1					
ANR	1037407	Argument	AV_LOG_ERROR		1036682	1					
ANR	1037408	Identifier	AV_LOG_ERROR		1036682	0					
ANR	1037409	Argument	"""Run went out of bounds\\n"""		1036682	2					
ANR	1037410	PrimaryExpression	"""Run went out of bounds\\n"""		1036682	0					
ANR	1037411	ReturnStatement	return - 1 ;	159:28:3275:3284	1036682	1	True				
ANR	1037412	UnaryOperationExpression	- 1		1036682	0					
ANR	1037413	UnaryOperator	-		1036682	0					
ANR	1037414	PrimaryExpression	1		1036682	1					
ANR	1037415	IfStatement	if ( get_bits1 ( gb ) )		1036682	3					
ANR	1037416	Condition	get_bits1 ( gb )	163:28:3342:3354	1036682	0	True				
ANR	1037417	CallExpression	get_bits1 ( gb )		1036682	0					
ANR	1037418	Callee	get_bits1		1036682	0					
ANR	1037419	Identifier	get_bits1		1036682	0					
ANR	1037420	ArgumentList	gb		1036682	1					
ANR	1037421	Argument	gb		1036682	0					
ANR	1037422	Identifier	gb		1036682	0					
ANR	1037423	CompoundStatement		159:43:3231:3231	1036682	1					
ANR	1037424	ExpressionStatement	"v = get_value ( c , BINK_SRC_COLORS )"	165:28:3388:3421	1036682	0	True				
ANR	1037425	AssignmentExpression	"v = get_value ( c , BINK_SRC_COLORS )"		1036682	0		=			
ANR	1037426	Identifier	v		1036682	0					
ANR	1037427	CallExpression	"get_value ( c , BINK_SRC_COLORS )"		1036682	1					
ANR	1037428	Callee	get_value		1036682	0					
ANR	1037429	Identifier	get_value		1036682	0					
ANR	1037430	ArgumentList	c		1036682	1					
ANR	1037431	Argument	c		1036682	0					
ANR	1037432	Identifier	c		1036682	0					
ANR	1037433	Argument	BINK_SRC_COLORS		1036682	1					
ANR	1037434	Identifier	BINK_SRC_COLORS		1036682	0					
ANR	1037435	ForStatement	for ( j = 0 ; j < run ; j ++ )		1036682	1					
ANR	1037436	ForInit	j = 0 ;	167:33:3457:3462	1036682	0	True				
ANR	1037437	AssignmentExpression	j = 0		1036682	0		=			
ANR	1037438	Identifier	j		1036682	0					
ANR	1037439	PrimaryExpression	0		1036682	1					
ANR	1037440	Condition	j < run	167:40:3464:3470	1036682	1	True				
ANR	1037441	RelationalExpression	j < run		1036682	0		<			
ANR	1037442	Identifier	j		1036682	0					
ANR	1037443	Identifier	run		1036682	1					
ANR	1037444	PostIncDecOperationExpression	j ++	167:49:3473:3475	1036682	2	True				
ANR	1037445	Identifier	j		1036682	0					
ANR	1037446	IncDec	++		1036682	1					
ANR	1037447	ExpressionStatement	ublock [ * scan ++ ] = v	169:32:3511:3530	1036682	3	True				
ANR	1037448	AssignmentExpression	ublock [ * scan ++ ] = v		1036682	0		=			
ANR	1037449	ArrayIndexing	ublock [ * scan ++ ]		1036682	0					
ANR	1037450	Identifier	ublock		1036682	0					
ANR	1037451	UnaryOperationExpression	* scan ++		1036682	1					
ANR	1037452	UnaryOperator	*		1036682	0					
ANR	1037453	PostIncDecOperationExpression	scan ++		1036682	1					
ANR	1037454	Identifier	scan		1036682	0					
ANR	1037455	IncDec	++		1036682	1					
ANR	1037456	Identifier	v		1036682	1					
ANR	1037457	ElseStatement	else		1036682	0					
ANR	1037458	CompoundStatement		167:31:3438:3438	1036682	0					
ANR	1037459	ForStatement	for ( j = 0 ; j < run ; j ++ )		1036682	0					
ANR	1037460	ForInit	j = 0 ;	173:33:3600:3605	1036682	0	True				
ANR	1037461	AssignmentExpression	j = 0		1036682	0		=			
ANR	1037462	Identifier	j		1036682	0					
ANR	1037463	PrimaryExpression	0		1036682	1					
ANR	1037464	Condition	j < run	173:40:3607:3613	1036682	1	True				
ANR	1037465	RelationalExpression	j < run		1036682	0		<			
ANR	1037466	Identifier	j		1036682	0					
ANR	1037467	Identifier	run		1036682	1					
ANR	1037468	PostIncDecOperationExpression	j ++	173:49:3616:3618	1036682	2	True				
ANR	1037469	Identifier	j		1036682	0					
ANR	1037470	IncDec	++		1036682	1					
ANR	1037471	ExpressionStatement	"ublock [ * scan ++ ] = get_value ( c , BINK_SRC_COLORS )"	175:32:3654:3701	1036682	3	True				
ANR	1037472	AssignmentExpression	"ublock [ * scan ++ ] = get_value ( c , BINK_SRC_COLORS )"		1036682	0		=			
ANR	1037473	ArrayIndexing	ublock [ * scan ++ ]		1036682	0					
ANR	1037474	Identifier	ublock		1036682	0					
ANR	1037475	UnaryOperationExpression	* scan ++		1036682	1					
ANR	1037476	UnaryOperator	*		1036682	0					
ANR	1037477	PostIncDecOperationExpression	scan ++		1036682	1					
ANR	1037478	Identifier	scan		1036682	0					
ANR	1037479	IncDec	++		1036682	1					
ANR	1037480	CallExpression	"get_value ( c , BINK_SRC_COLORS )"		1036682	1					
ANR	1037481	Callee	get_value		1036682	0					
ANR	1037482	Identifier	get_value		1036682	0					
ANR	1037483	ArgumentList	c		1036682	1					
ANR	1037484	Argument	c		1036682	0					
ANR	1037485	Identifier	c		1036682	0					
ANR	1037486	Argument	BINK_SRC_COLORS		1036682	1					
ANR	1037487	Identifier	BINK_SRC_COLORS		1036682	0					
ANR	1037488	Condition	i < 63	179:29:3760:3765	1036682	1	True				
ANR	1037489	RelationalExpression	i < 63		1036682	0		<			
ANR	1037490	Identifier	i		1036682	0					
ANR	1037491	PrimaryExpression	63		1036682	1					
ANR	1037492	IfStatement	if ( i == 63 )		1036682	4					
ANR	1037493	Condition	i == 63	181:24:3794:3800	1036682	0	True				
ANR	1037494	EqualityExpression	i == 63		1036682	0		==			
ANR	1037495	Identifier	i		1036682	0					
ANR	1037496	PrimaryExpression	63		1036682	1					
ANR	1037497	ExpressionStatement	"ublock [ * scan ++ ] = get_value ( c , BINK_SRC_COLORS )"	183:24:3828:3875	1036682	1	True				
ANR	1037498	AssignmentExpression	"ublock [ * scan ++ ] = get_value ( c , BINK_SRC_COLORS )"		1036682	0		=			
ANR	1037499	ArrayIndexing	ublock [ * scan ++ ]		1036682	0					
ANR	1037500	Identifier	ublock		1036682	0					
ANR	1037501	UnaryOperationExpression	* scan ++		1036682	1					
ANR	1037502	UnaryOperator	*		1036682	0					
ANR	1037503	PostIncDecOperationExpression	scan ++		1036682	1					
ANR	1037504	Identifier	scan		1036682	0					
ANR	1037505	IncDec	++		1036682	1					
ANR	1037506	CallExpression	"get_value ( c , BINK_SRC_COLORS )"		1036682	1					
ANR	1037507	Callee	get_value		1036682	0					
ANR	1037508	Identifier	get_value		1036682	0					
ANR	1037509	ArgumentList	c		1036682	1					
ANR	1037510	Argument	c		1036682	0					
ANR	1037511	Identifier	c		1036682	0					
ANR	1037512	Argument	BINK_SRC_COLORS		1036682	1					
ANR	1037513	Identifier	BINK_SRC_COLORS		1036682	0					
ANR	1037514	BreakStatement	break ;	185:20:3898:3903	1036682	5	True				
ANR	1037515	Label	case INTRA_BLOCK :	187:16:3922:3938	1036682	6	True				
ANR	1037516	Identifier	INTRA_BLOCK		1036682	0					
ANR	1037517	ExpressionStatement	"memset ( dctblock , 0 , sizeof ( * dctblock ) * 64 )"	189:20:3961:4004	1036682	7	True				
ANR	1037518	CallExpression	"memset ( dctblock , 0 , sizeof ( * dctblock ) * 64 )"		1036682	0					
ANR	1037519	Callee	memset		1036682	0					
ANR	1037520	Identifier	memset		1036682	0					
ANR	1037521	ArgumentList	dctblock		1036682	1					
ANR	1037522	Argument	dctblock		1036682	0					
ANR	1037523	Identifier	dctblock		1036682	0					
ANR	1037524	Argument	0		1036682	1					
ANR	1037525	PrimaryExpression	0		1036682	0					
ANR	1037526	Argument	sizeof ( * dctblock ) * 64		1036682	2					
ANR	1037527	MultiplicativeExpression	sizeof ( * dctblock ) * 64		1036682	0		*			
ANR	1037528	SizeofExpression	sizeof ( * dctblock )		1036682	0					
ANR	1037529	Sizeof	sizeof		1036682	0					
ANR	1037530	UnaryOperationExpression	* dctblock		1036682	1					
ANR	1037531	UnaryOperator	*		1036682	0					
ANR	1037532	Identifier	dctblock		1036682	1					
ANR	1037533	PrimaryExpression	64		1036682	1					
ANR	1037534	ExpressionStatement	"dctblock [ 0 ] = get_value ( c , BINK_SRC_INTRA_DC )"	191:20:4027:4072	1036682	8	True				
ANR	1037535	AssignmentExpression	"dctblock [ 0 ] = get_value ( c , BINK_SRC_INTRA_DC )"		1036682	0		=			
ANR	1037536	ArrayIndexing	dctblock [ 0 ]		1036682	0					
ANR	1037537	Identifier	dctblock		1036682	0					
ANR	1037538	PrimaryExpression	0		1036682	1					
ANR	1037539	CallExpression	"get_value ( c , BINK_SRC_INTRA_DC )"		1036682	1					
ANR	1037540	Callee	get_value		1036682	0					
ANR	1037541	Identifier	get_value		1036682	0					
ANR	1037542	ArgumentList	c		1036682	1					
ANR	1037543	Argument	c		1036682	0					
ANR	1037544	Identifier	c		1036682	0					
ANR	1037545	Argument	BINK_SRC_INTRA_DC		1036682	1					
ANR	1037546	Identifier	BINK_SRC_INTRA_DC		1036682	0					
ANR	1037547	ExpressionStatement	"read_dct_coeffs ( gb , dctblock , bink_scan , bink_intra_quant , - 1 )"	193:20:4095:4157	1036682	9	True				
ANR	1037548	CallExpression	"read_dct_coeffs ( gb , dctblock , bink_scan , bink_intra_quant , - 1 )"		1036682	0					
ANR	1037549	Callee	read_dct_coeffs		1036682	0					
ANR	1037550	Identifier	read_dct_coeffs		1036682	0					
ANR	1037551	ArgumentList	gb		1036682	1					
ANR	1037552	Argument	gb		1036682	0					
ANR	1037553	Identifier	gb		1036682	0					
ANR	1037554	Argument	dctblock		1036682	1					
ANR	1037555	Identifier	dctblock		1036682	0					
ANR	1037556	Argument	bink_scan		1036682	2					
ANR	1037557	Identifier	bink_scan		1036682	0					
ANR	1037558	Argument	bink_intra_quant		1036682	3					
ANR	1037559	Identifier	bink_intra_quant		1036682	0					
ANR	1037560	Argument	- 1		1036682	4					
ANR	1037561	UnaryOperationExpression	- 1		1036682	0					
ANR	1037562	UnaryOperator	-		1036682	0					
ANR	1037563	PrimaryExpression	1		1036682	1					
ANR	1037564	ExpressionStatement	"c -> bdsp . idct_put ( ublock , 8 , dctblock )"	195:20:4180:4217	1036682	10	True				
ANR	1037565	CallExpression	"c -> bdsp . idct_put ( ublock , 8 , dctblock )"		1036682	0					
ANR	1037566	Callee	c -> bdsp . idct_put		1036682	0					
ANR	1037567	MemberAccess	c -> bdsp . idct_put		1036682	0					
ANR	1037568	PtrMemberAccess	c -> bdsp		1036682	0					
ANR	1037569	Identifier	c		1036682	0					
ANR	1037570	Identifier	bdsp		1036682	1					
ANR	1037571	Identifier	idct_put		1036682	1					
ANR	1037572	ArgumentList	ublock		1036682	1					
ANR	1037573	Argument	ublock		1036682	0					
ANR	1037574	Identifier	ublock		1036682	0					
ANR	1037575	Argument	8		1036682	1					
ANR	1037576	PrimaryExpression	8		1036682	0					
ANR	1037577	Argument	dctblock		1036682	2					
ANR	1037578	Identifier	dctblock		1036682	0					
ANR	1037579	BreakStatement	break ;	197:20:4240:4245	1036682	11	True				
ANR	1037580	Label	case FILL_BLOCK :	199:16:4264:4279	1036682	12	True				
ANR	1037581	Identifier	FILL_BLOCK		1036682	0					
ANR	1037582	ExpressionStatement	"v = get_value ( c , BINK_SRC_COLORS )"	201:20:4302:4335	1036682	13	True				
ANR	1037583	AssignmentExpression	"v = get_value ( c , BINK_SRC_COLORS )"		1036682	0		=			
ANR	1037584	Identifier	v		1036682	0					
ANR	1037585	CallExpression	"get_value ( c , BINK_SRC_COLORS )"		1036682	1					
ANR	1037586	Callee	get_value		1036682	0					
ANR	1037587	Identifier	get_value		1036682	0					
ANR	1037588	ArgumentList	c		1036682	1					
ANR	1037589	Argument	c		1036682	0					
ANR	1037590	Identifier	c		1036682	0					
ANR	1037591	Argument	BINK_SRC_COLORS		1036682	1					
ANR	1037592	Identifier	BINK_SRC_COLORS		1036682	0					
ANR	1037593	ExpressionStatement	"c -> dsp . fill_block_tab [ 0 ] ( dst , v , stride , 16 )"	203:20:4358:4402	1036682	14	True				
ANR	1037594	CallExpression	"c -> dsp . fill_block_tab [ 0 ] ( dst , v , stride , 16 )"		1036682	0					
ANR	1037595	Callee	c -> dsp . fill_block_tab [ 0 ]		1036682	0					
ANR	1037596	ArrayIndexing	c -> dsp . fill_block_tab [ 0 ]		1036682	0					
ANR	1037597	MemberAccess	c -> dsp . fill_block_tab		1036682	0					
ANR	1037598	PtrMemberAccess	c -> dsp		1036682	0					
ANR	1037599	Identifier	c		1036682	0					
ANR	1037600	Identifier	dsp		1036682	1					
ANR	1037601	Identifier	fill_block_tab		1036682	1					
ANR	1037602	PrimaryExpression	0		1036682	1					
ANR	1037603	ArgumentList	dst		1036682	1					
ANR	1037604	Argument	dst		1036682	0					
ANR	1037605	Identifier	dst		1036682	0					
ANR	1037606	Argument	v		1036682	1					
ANR	1037607	Identifier	v		1036682	0					
ANR	1037608	Argument	stride		1036682	2					
ANR	1037609	Identifier	stride		1036682	0					
ANR	1037610	Argument	16		1036682	3					
ANR	1037611	PrimaryExpression	16		1036682	0					
ANR	1037612	BreakStatement	break ;	205:20:4425:4430	1036682	15	True				
ANR	1037613	Label	case PATTERN_BLOCK :	207:16:4449:4467	1036682	16	True				
ANR	1037614	Identifier	PATTERN_BLOCK		1036682	0					
ANR	1037615	ForStatement	for ( i = 0 ; i < 2 ; i ++ )		1036682	17					
ANR	1037616	ForInit	i = 0 ;	209:25:4495:4500	1036682	0	True				
ANR	1037617	AssignmentExpression	i = 0		1036682	0		=			
ANR	1037618	Identifier	i		1036682	0					
ANR	1037619	PrimaryExpression	0		1036682	1					
ANR	1037620	Condition	i < 2	209:32:4502:4506	1036682	1	True				
ANR	1037621	RelationalExpression	i < 2		1036682	0		<			
ANR	1037622	Identifier	i		1036682	0					
ANR	1037623	PrimaryExpression	2		1036682	1					
ANR	1037624	PostIncDecOperationExpression	i ++	209:39:4509:4511	1036682	2	True				
ANR	1037625	Identifier	i		1036682	0					
ANR	1037626	IncDec	++		1036682	1					
ANR	1037627	ExpressionStatement	"col [ i ] = get_value ( c , BINK_SRC_COLORS )"	211:24:4539:4577	1036682	3	True				
ANR	1037628	AssignmentExpression	"col [ i ] = get_value ( c , BINK_SRC_COLORS )"		1036682	0		=			
ANR	1037629	ArrayIndexing	col [ i ]		1036682	0					
ANR	1037630	Identifier	col		1036682	0					
ANR	1037631	Identifier	i		1036682	1					
ANR	1037632	CallExpression	"get_value ( c , BINK_SRC_COLORS )"		1036682	1					
ANR	1037633	Callee	get_value		1036682	0					
ANR	1037634	Identifier	get_value		1036682	0					
ANR	1037635	ArgumentList	c		1036682	1					
ANR	1037636	Argument	c		1036682	0					
ANR	1037637	Identifier	c		1036682	0					
ANR	1037638	Argument	BINK_SRC_COLORS		1036682	1					
ANR	1037639	Identifier	BINK_SRC_COLORS		1036682	0					
ANR	1037640	ForStatement	for ( j = 0 ; j < 8 ; j ++ )		1036682	18					
ANR	1037641	ForInit	j = 0 ;	213:25:4605:4610	1036682	0	True				
ANR	1037642	AssignmentExpression	j = 0		1036682	0		=			
ANR	1037643	Identifier	j		1036682	0					
ANR	1037644	PrimaryExpression	0		1036682	1					
ANR	1037645	Condition	j < 8	213:32:4612:4616	1036682	1	True				
ANR	1037646	RelationalExpression	j < 8		1036682	0		<			
ANR	1037647	Identifier	j		1036682	0					
ANR	1037648	PrimaryExpression	8		1036682	1					
ANR	1037649	PostIncDecOperationExpression	j ++	213:39:4619:4621	1036682	2	True				
ANR	1037650	Identifier	j		1036682	0					
ANR	1037651	IncDec	++		1036682	1					
ANR	1037652	CompoundStatement		209:44:4498:4498	1036682	3					
ANR	1037653	ExpressionStatement	"v = get_value ( c , BINK_SRC_PATTERN )"	215:24:4651:4685	1036682	0	True				
ANR	1037654	AssignmentExpression	"v = get_value ( c , BINK_SRC_PATTERN )"		1036682	0		=			
ANR	1037655	Identifier	v		1036682	0					
ANR	1037656	CallExpression	"get_value ( c , BINK_SRC_PATTERN )"		1036682	1					
ANR	1037657	Callee	get_value		1036682	0					
ANR	1037658	Identifier	get_value		1036682	0					
ANR	1037659	ArgumentList	c		1036682	1					
ANR	1037660	Argument	c		1036682	0					
ANR	1037661	Identifier	c		1036682	0					
ANR	1037662	Argument	BINK_SRC_PATTERN		1036682	1					
ANR	1037663	Identifier	BINK_SRC_PATTERN		1036682	0					
ANR	1037664	ForStatement	"for ( i = 0 ; i < 8 ; i ++ , v >>= 1 )"		1036682	1					
ANR	1037665	ForInit	i = 0 ;	217:29:4717:4722	1036682	0	True				
ANR	1037666	AssignmentExpression	i = 0		1036682	0		=			
ANR	1037667	Identifier	i		1036682	0					
ANR	1037668	PrimaryExpression	0		1036682	1					
ANR	1037669	Condition	i < 8	217:36:4724:4728	1036682	1	True				
ANR	1037670	RelationalExpression	i < 8		1036682	0		<			
ANR	1037671	Identifier	i		1036682	0					
ANR	1037672	PrimaryExpression	8		1036682	1					
ANR	1037673	Expression	"i ++ , v >>= 1"	217:43:4731:4742	1036682	2	True				
ANR	1037674	PostIncDecOperationExpression	i ++		1036682	0					
ANR	1037675	Identifier	i		1036682	0					
ANR	1037676	IncDec	++		1036682	1					
ANR	1037677	AssignmentExpression	v >>= 1		1036682	1		>>=			
ANR	1037678	Identifier	v		1036682	0					
ANR	1037679	PrimaryExpression	1		1036682	1					
ANR	1037680	ExpressionStatement	ublock [ i + j * 8 ] = col [ v & 1 ]	219:28:4774:4802	1036682	3	True				
ANR	1037681	AssignmentExpression	ublock [ i + j * 8 ] = col [ v & 1 ]		1036682	0		=			
ANR	1037682	ArrayIndexing	ublock [ i + j * 8 ]		1036682	0					
ANR	1037683	Identifier	ublock		1036682	0					
ANR	1037684	AdditiveExpression	i + j * 8		1036682	1		+			
ANR	1037685	Identifier	i		1036682	0					
ANR	1037686	MultiplicativeExpression	j * 8		1036682	1		*			
ANR	1037687	Identifier	j		1036682	0					
ANR	1037688	PrimaryExpression	8		1036682	1					
ANR	1037689	ArrayIndexing	col [ v & 1 ]		1036682	1					
ANR	1037690	Identifier	col		1036682	0					
ANR	1037691	BitAndExpression	v & 1		1036682	1		&			
ANR	1037692	Identifier	v		1036682	0					
ANR	1037693	PrimaryExpression	1		1036682	1					
ANR	1037694	BreakStatement	break ;	223:20:4848:4853	1036682	19	True				
ANR	1037695	Label	case RAW_BLOCK :	225:16:4872:4886	1036682	20	True				
ANR	1037696	Identifier	RAW_BLOCK		1036682	0					
ANR	1037697	ForStatement	for ( j = 0 ; j < 8 ; j ++ )		1036682	21					
ANR	1037698	ForInit	j = 0 ;	227:25:4914:4919	1036682	0	True				
ANR	1037699	AssignmentExpression	j = 0		1036682	0		=			
ANR	1037700	Identifier	j		1036682	0					
ANR	1037701	PrimaryExpression	0		1036682	1					
ANR	1037702	Condition	j < 8	227:32:4921:4925	1036682	1	True				
ANR	1037703	RelationalExpression	j < 8		1036682	0		<			
ANR	1037704	Identifier	j		1036682	0					
ANR	1037705	PrimaryExpression	8		1036682	1					
ANR	1037706	PostIncDecOperationExpression	j ++	227:39:4928:4930	1036682	2	True				
ANR	1037707	Identifier	j		1036682	0					
ANR	1037708	IncDec	++		1036682	1					
ANR	1037709	ForStatement	for ( i = 0 ; i < 8 ; i ++ )		1036682	3					
ANR	1037710	ForInit	i = 0 ;	229:29:4963:4968	1036682	0	True				
ANR	1037711	AssignmentExpression	i = 0		1036682	0		=			
ANR	1037712	Identifier	i		1036682	0					
ANR	1037713	PrimaryExpression	0		1036682	1					
ANR	1037714	Condition	i < 8	229:36:4970:4974	1036682	1	True				
ANR	1037715	RelationalExpression	i < 8		1036682	0		<			
ANR	1037716	Identifier	i		1036682	0					
ANR	1037717	PrimaryExpression	8		1036682	1					
ANR	1037718	PostIncDecOperationExpression	i ++	229:43:4977:4979	1036682	2	True				
ANR	1037719	Identifier	i		1036682	0					
ANR	1037720	IncDec	++		1036682	1					
ANR	1037721	ExpressionStatement	"ublock [ i + j * 8 ] = get_value ( c , BINK_SRC_COLORS )"	231:28:5011:5058	1036682	3	True				
ANR	1037722	AssignmentExpression	"ublock [ i + j * 8 ] = get_value ( c , BINK_SRC_COLORS )"		1036682	0		=			
ANR	1037723	ArrayIndexing	ublock [ i + j * 8 ]		1036682	0					
ANR	1037724	Identifier	ublock		1036682	0					
ANR	1037725	AdditiveExpression	i + j * 8		1036682	1		+			
ANR	1037726	Identifier	i		1036682	0					
ANR	1037727	MultiplicativeExpression	j * 8		1036682	1		*			
ANR	1037728	Identifier	j		1036682	0					
ANR	1037729	PrimaryExpression	8		1036682	1					
ANR	1037730	CallExpression	"get_value ( c , BINK_SRC_COLORS )"		1036682	1					
ANR	1037731	Callee	get_value		1036682	0					
ANR	1037732	Identifier	get_value		1036682	0					
ANR	1037733	ArgumentList	c		1036682	1					
ANR	1037734	Argument	c		1036682	0					
ANR	1037735	Identifier	c		1036682	0					
ANR	1037736	Argument	BINK_SRC_COLORS		1036682	1					
ANR	1037737	Identifier	BINK_SRC_COLORS		1036682	0					
ANR	1037738	BreakStatement	break ;	233:20:5081:5086	1036682	22	True				
ANR	1037739	Label	default :	235:16:5105:5112	1036682	23	True				
ANR	1037740	Identifier	default		1036682	0					
ANR	1037741	ExpressionStatement	"av_log ( c -> avctx , AV_LOG_ERROR , ""Incorrect 16x16 block type %d\\n"" , blk )"	237:20:5135:5205	1036682	24	True				
ANR	1037742	CallExpression	"av_log ( c -> avctx , AV_LOG_ERROR , ""Incorrect 16x16 block type %d\\n"" , blk )"		1036682	0					
ANR	1037743	Callee	av_log		1036682	0					
ANR	1037744	Identifier	av_log		1036682	0					
ANR	1037745	ArgumentList	c -> avctx		1036682	1					
ANR	1037746	Argument	c -> avctx		1036682	0					
ANR	1037747	PtrMemberAccess	c -> avctx		1036682	0					
ANR	1037748	Identifier	c		1036682	0					
ANR	1037749	Identifier	avctx		1036682	1					
ANR	1037750	Argument	AV_LOG_ERROR		1036682	1					
ANR	1037751	Identifier	AV_LOG_ERROR		1036682	0					
ANR	1037752	Argument	"""Incorrect 16x16 block type %d\\n"""		1036682	2					
ANR	1037753	PrimaryExpression	"""Incorrect 16x16 block type %d\\n"""		1036682	0					
ANR	1037754	Argument	blk		1036682	3					
ANR	1037755	Identifier	blk		1036682	0					
ANR	1037756	ReturnStatement	return - 1 ;	239:20:5228:5237	1036682	25	True				
ANR	1037757	UnaryOperationExpression	- 1		1036682	0					
ANR	1037758	UnaryOperator	-		1036682	0					
ANR	1037759	PrimaryExpression	1		1036682	1					
ANR	1037760	IfStatement	if ( blk != FILL_BLOCK )		1036682	6					
ANR	1037761	Condition	blk != FILL_BLOCK	243:20:5279:5295	1036682	0	True				
ANR	1037762	EqualityExpression	blk != FILL_BLOCK		1036682	0		!=			
ANR	1037763	Identifier	blk		1036682	0					
ANR	1037764	Identifier	FILL_BLOCK		1036682	1					
ANR	1037765	ExpressionStatement	"c -> bdsp . scale_block ( ublock , dst , stride )"	245:16:5315:5355	1036682	1	True				
ANR	1037766	CallExpression	"c -> bdsp . scale_block ( ublock , dst , stride )"		1036682	0					
ANR	1037767	Callee	c -> bdsp . scale_block		1036682	0					
ANR	1037768	MemberAccess	c -> bdsp . scale_block		1036682	0					
ANR	1037769	PtrMemberAccess	c -> bdsp		1036682	0					
ANR	1037770	Identifier	c		1036682	0					
ANR	1037771	Identifier	bdsp		1036682	1					
ANR	1037772	Identifier	scale_block		1036682	1					
ANR	1037773	ArgumentList	ublock		1036682	1					
ANR	1037774	Argument	ublock		1036682	0					
ANR	1037775	Identifier	ublock		1036682	0					
ANR	1037776	Argument	dst		1036682	1					
ANR	1037777	Identifier	dst		1036682	0					
ANR	1037778	Argument	stride		1036682	2					
ANR	1037779	Identifier	stride		1036682	0					
ANR	1037780	ExpressionStatement	bx ++	247:16:5374:5378	1036682	7	True				
ANR	1037781	PostIncDecOperationExpression	bx ++		1036682	0					
ANR	1037782	Identifier	bx		1036682	0					
ANR	1037783	IncDec	++		1036682	1					
ANR	1037784	ExpressionStatement	dst += 8	249:16:5397:5406	1036682	8	True				
ANR	1037785	AssignmentExpression	dst += 8		1036682	0		+=			
ANR	1037786	Identifier	dst		1036682	0					
ANR	1037787	PrimaryExpression	8		1036682	1					
ANR	1037788	ExpressionStatement	prev += 8	251:16:5425:5434	1036682	9	True				
ANR	1037789	AssignmentExpression	prev += 8		1036682	0		+=			
ANR	1037790	Identifier	prev		1036682	0					
ANR	1037791	PrimaryExpression	8		1036682	1					
ANR	1037792	BreakStatement	break ;	253:16:5453:5458	1036682	10	True				
ANR	1037793	Label	case MOTION_BLOCK :	255:12:5473:5490	1036682	11	True				
ANR	1037794	Identifier	MOTION_BLOCK		1036682	0					
ANR	1037795	ExpressionStatement	"xoff = get_value ( c , BINK_SRC_X_OFF )"	257:16:5509:5544	1036682	12	True				
ANR	1037796	AssignmentExpression	"xoff = get_value ( c , BINK_SRC_X_OFF )"		1036682	0		=			
ANR	1037797	Identifier	xoff		1036682	0					
ANR	1037798	CallExpression	"get_value ( c , BINK_SRC_X_OFF )"		1036682	1					
ANR	1037799	Callee	get_value		1036682	0					
ANR	1037800	Identifier	get_value		1036682	0					
ANR	1037801	ArgumentList	c		1036682	1					
ANR	1037802	Argument	c		1036682	0					
ANR	1037803	Identifier	c		1036682	0					
ANR	1037804	Argument	BINK_SRC_X_OFF		1036682	1					
ANR	1037805	Identifier	BINK_SRC_X_OFF		1036682	0					
ANR	1037806	ExpressionStatement	"yoff = get_value ( c , BINK_SRC_Y_OFF )"	259:16:5563:5598	1036682	13	True				
ANR	1037807	AssignmentExpression	"yoff = get_value ( c , BINK_SRC_Y_OFF )"		1036682	0		=			
ANR	1037808	Identifier	yoff		1036682	0					
ANR	1037809	CallExpression	"get_value ( c , BINK_SRC_Y_OFF )"		1036682	1					
ANR	1037810	Callee	get_value		1036682	0					
ANR	1037811	Identifier	get_value		1036682	0					
ANR	1037812	ArgumentList	c		1036682	1					
ANR	1037813	Argument	c		1036682	0					
ANR	1037814	Identifier	c		1036682	0					
ANR	1037815	Argument	BINK_SRC_Y_OFF		1036682	1					
ANR	1037816	Identifier	BINK_SRC_Y_OFF		1036682	0					
ANR	1037817	ExpressionStatement	ref = prev + xoff + yoff * stride	261:16:5617:5650	1036682	14	True				
ANR	1037818	AssignmentExpression	ref = prev + xoff + yoff * stride		1036682	0		=			
ANR	1037819	Identifier	ref		1036682	0					
ANR	1037820	AdditiveExpression	prev + xoff + yoff * stride		1036682	1		+			
ANR	1037821	Identifier	prev		1036682	0					
ANR	1037822	AdditiveExpression	xoff + yoff * stride		1036682	1		+			
ANR	1037823	Identifier	xoff		1036682	0					
ANR	1037824	MultiplicativeExpression	yoff * stride		1036682	1		*			
ANR	1037825	Identifier	yoff		1036682	0					
ANR	1037826	Identifier	stride		1036682	1					
ANR	1037827	IfStatement	if ( ref < ref_start || ref > ref_end )		1036682	15					
ANR	1037828	Condition	ref < ref_start || ref > ref_end	263:20:5673:5704	1036682	0	True				
ANR	1037829	OrExpression	ref < ref_start || ref > ref_end		1036682	0		||			
ANR	1037830	RelationalExpression	ref < ref_start		1036682	0		<			
ANR	1037831	Identifier	ref		1036682	0					
ANR	1037832	Identifier	ref_start		1036682	1					
ANR	1037833	RelationalExpression	ref > ref_end		1036682	1		>			
ANR	1037834	Identifier	ref		1036682	0					
ANR	1037835	Identifier	ref_end		1036682	1					
ANR	1037836	CompoundStatement		259:54:5581:5581	1036682	1					
ANR	1037837	ExpressionStatement	"av_log ( c -> avctx , AV_LOG_ERROR , ""Copy out of bounds @%d, %d\\n"" , bx * 8 + xoff , by * 8 + yoff )"	265:20:5730:5846	1036682	0	True				
ANR	1037838	CallExpression	"av_log ( c -> avctx , AV_LOG_ERROR , ""Copy out of bounds @%d, %d\\n"" , bx * 8 + xoff , by * 8 + yoff )"		1036682	0					
ANR	1037839	Callee	av_log		1036682	0					
ANR	1037840	Identifier	av_log		1036682	0					
ANR	1037841	ArgumentList	c -> avctx		1036682	1					
ANR	1037842	Argument	c -> avctx		1036682	0					
ANR	1037843	PtrMemberAccess	c -> avctx		1036682	0					
ANR	1037844	Identifier	c		1036682	0					
ANR	1037845	Identifier	avctx		1036682	1					
ANR	1037846	Argument	AV_LOG_ERROR		1036682	1					
ANR	1037847	Identifier	AV_LOG_ERROR		1036682	0					
ANR	1037848	Argument	"""Copy out of bounds @%d, %d\\n"""		1036682	2					
ANR	1037849	PrimaryExpression	"""Copy out of bounds @%d, %d\\n"""		1036682	0					
ANR	1037850	Argument	bx * 8 + xoff		1036682	3					
ANR	1037851	AdditiveExpression	bx * 8 + xoff		1036682	0		+			
ANR	1037852	MultiplicativeExpression	bx * 8		1036682	0		*			
ANR	1037853	Identifier	bx		1036682	0					
ANR	1037854	PrimaryExpression	8		1036682	1					
ANR	1037855	Identifier	xoff		1036682	1					
ANR	1037856	Argument	by * 8 + yoff		1036682	4					
ANR	1037857	AdditiveExpression	by * 8 + yoff		1036682	0		+			
ANR	1037858	MultiplicativeExpression	by * 8		1036682	0		*			
ANR	1037859	Identifier	by		1036682	0					
ANR	1037860	PrimaryExpression	8		1036682	1					
ANR	1037861	Identifier	yoff		1036682	1					
ANR	1037862	ReturnStatement	return - 1 ;	269:20:5869:5878	1036682	1	True				
ANR	1037863	UnaryOperationExpression	- 1		1036682	0					
ANR	1037864	UnaryOperator	-		1036682	0					
ANR	1037865	PrimaryExpression	1		1036682	1					
ANR	1037866	ExpressionStatement	"c -> dsp . put_pixels_tab [ 1 ] [ 0 ] ( dst , ref , stride , 8 )"	273:16:5916:5964	1036682	16	True				
ANR	1037867	CallExpression	"c -> dsp . put_pixels_tab [ 1 ] [ 0 ] ( dst , ref , stride , 8 )"		1036682	0					
ANR	1037868	Callee	c -> dsp . put_pixels_tab [ 1 ] [ 0 ]		1036682	0					
ANR	1037869	ArrayIndexing	c -> dsp . put_pixels_tab [ 1 ] [ 0 ]		1036682	0					
ANR	1037870	ArrayIndexing	c -> dsp . put_pixels_tab [ 1 ]		1036682	0					
ANR	1037871	MemberAccess	c -> dsp . put_pixels_tab		1036682	0					
ANR	1037872	PtrMemberAccess	c -> dsp		1036682	0					
ANR	1037873	Identifier	c		1036682	0					
ANR	1037874	Identifier	dsp		1036682	1					
ANR	1037875	Identifier	put_pixels_tab		1036682	1					
ANR	1037876	PrimaryExpression	1		1036682	1					
ANR	1037877	PrimaryExpression	0		1036682	1					
ANR	1037878	ArgumentList	dst		1036682	1					
ANR	1037879	Argument	dst		1036682	0					
ANR	1037880	Identifier	dst		1036682	0					
ANR	1037881	Argument	ref		1036682	1					
ANR	1037882	Identifier	ref		1036682	0					
ANR	1037883	Argument	stride		1036682	2					
ANR	1037884	Identifier	stride		1036682	0					
ANR	1037885	Argument	8		1036682	3					
ANR	1037886	PrimaryExpression	8		1036682	0					
ANR	1037887	BreakStatement	break ;	275:16:5983:5988	1036682	17	True				
ANR	1037888	Label	case RUN_BLOCK :	277:12:6003:6017	1036682	18	True				
ANR	1037889	Identifier	RUN_BLOCK		1036682	0					
ANR	1037890	ExpressionStatement	"scan = bink_patterns [ get_bits ( gb , 4 ) ]"	279:16:6036:6073	1036682	19	True				
ANR	1037891	AssignmentExpression	"scan = bink_patterns [ get_bits ( gb , 4 ) ]"		1036682	0		=			
ANR	1037892	Identifier	scan		1036682	0					
ANR	1037893	ArrayIndexing	"bink_patterns [ get_bits ( gb , 4 ) ]"		1036682	1					
ANR	1037894	Identifier	bink_patterns		1036682	0					
ANR	1037895	CallExpression	"get_bits ( gb , 4 )"		1036682	1					
ANR	1037896	Callee	get_bits		1036682	0					
ANR	1037897	Identifier	get_bits		1036682	0					
ANR	1037898	ArgumentList	gb		1036682	1					
ANR	1037899	Argument	gb		1036682	0					
ANR	1037900	Identifier	gb		1036682	0					
ANR	1037901	Argument	4		1036682	1					
ANR	1037902	PrimaryExpression	4		1036682	0					
ANR	1037903	ExpressionStatement	i = 0	281:16:6092:6097	1036682	20	True				
ANR	1037904	AssignmentExpression	i = 0		1036682	0		=			
ANR	1037905	Identifier	i		1036682	0					
ANR	1037906	PrimaryExpression	0		1036682	1					
ANR	1037907	DoStatement	do		1036682	21					
ANR	1037908	CompoundStatement		281:20:6016:6056	1036682	0					
ANR	1037909	IdentifierDeclStatement	"int run = get_value ( c , BINK_SRC_RUN ) + 1 ;"	285:20:6142:6182	1036682	0	True				
ANR	1037910	IdentifierDecl	"run = get_value ( c , BINK_SRC_RUN ) + 1"		1036682	0					
ANR	1037911	IdentifierDeclType	int		1036682	0					
ANR	1037912	Identifier	run		1036682	1					
ANR	1037913	AssignmentExpression	"run = get_value ( c , BINK_SRC_RUN ) + 1"		1036682	2		=			
ANR	1037914	Identifier	run		1036682	0					
ANR	1037915	AdditiveExpression	"get_value ( c , BINK_SRC_RUN ) + 1"		1036682	1		+			
ANR	1037916	CallExpression	"get_value ( c , BINK_SRC_RUN )"		1036682	0					
ANR	1037917	Callee	get_value		1036682	0					
ANR	1037918	Identifier	get_value		1036682	0					
ANR	1037919	ArgumentList	c		1036682	1					
ANR	1037920	Argument	c		1036682	0					
ANR	1037921	Identifier	c		1036682	0					
ANR	1037922	Argument	BINK_SRC_RUN		1036682	1					
ANR	1037923	Identifier	BINK_SRC_RUN		1036682	0					
ANR	1037924	PrimaryExpression	1		1036682	1					
ANR	1037925	ExpressionStatement	i += run	289:20:6207:6215	1036682	1	True				
ANR	1037926	AssignmentExpression	i += run		1036682	0		+=			
ANR	1037927	Identifier	i		1036682	0					
ANR	1037928	Identifier	run		1036682	1					
ANR	1037929	IfStatement	if ( i > 64 )		1036682	2					
ANR	1037930	Condition	i > 64	291:24:6242:6247	1036682	0	True				
ANR	1037931	RelationalExpression	i > 64		1036682	0		>			
ANR	1037932	Identifier	i		1036682	0					
ANR	1037933	PrimaryExpression	64		1036682	1					
ANR	1037934	CompoundStatement		287:32:6124:6124	1036682	1					
ANR	1037935	ExpressionStatement	"av_log ( c -> avctx , AV_LOG_ERROR , ""Run went out of bounds\\n"" )"	293:24:6277:6335	1036682	0	True				
ANR	1037936	CallExpression	"av_log ( c -> avctx , AV_LOG_ERROR , ""Run went out of bounds\\n"" )"		1036682	0					
ANR	1037937	Callee	av_log		1036682	0					
ANR	1037938	Identifier	av_log		1036682	0					
ANR	1037939	ArgumentList	c -> avctx		1036682	1					
ANR	1037940	Argument	c -> avctx		1036682	0					
ANR	1037941	PtrMemberAccess	c -> avctx		1036682	0					
ANR	1037942	Identifier	c		1036682	0					
ANR	1037943	Identifier	avctx		1036682	1					
ANR	1037944	Argument	AV_LOG_ERROR		1036682	1					
ANR	1037945	Identifier	AV_LOG_ERROR		1036682	0					
ANR	1037946	Argument	"""Run went out of bounds\\n"""		1036682	2					
ANR	1037947	PrimaryExpression	"""Run went out of bounds\\n"""		1036682	0					
ANR	1037948	ReturnStatement	return - 1 ;	295:24:6362:6371	1036682	1	True				
ANR	1037949	UnaryOperationExpression	- 1		1036682	0					
ANR	1037950	UnaryOperator	-		1036682	0					
ANR	1037951	PrimaryExpression	1		1036682	1					
ANR	1037952	IfStatement	if ( get_bits1 ( gb ) )		1036682	3					
ANR	1037953	Condition	get_bits1 ( gb )	299:24:6421:6433	1036682	0	True				
ANR	1037954	CallExpression	get_bits1 ( gb )		1036682	0					
ANR	1037955	Callee	get_bits1		1036682	0					
ANR	1037956	Identifier	get_bits1		1036682	0					
ANR	1037957	ArgumentList	gb		1036682	1					
ANR	1037958	Argument	gb		1036682	0					
ANR	1037959	Identifier	gb		1036682	0					
ANR	1037960	CompoundStatement		295:39:6310:6310	1036682	1					
ANR	1037961	ExpressionStatement	"v = get_value ( c , BINK_SRC_COLORS )"	301:24:6463:6496	1036682	0	True				
ANR	1037962	AssignmentExpression	"v = get_value ( c , BINK_SRC_COLORS )"		1036682	0		=			
ANR	1037963	Identifier	v		1036682	0					
ANR	1037964	CallExpression	"get_value ( c , BINK_SRC_COLORS )"		1036682	1					
ANR	1037965	Callee	get_value		1036682	0					
ANR	1037966	Identifier	get_value		1036682	0					
ANR	1037967	ArgumentList	c		1036682	1					
ANR	1037968	Argument	c		1036682	0					
ANR	1037969	Identifier	c		1036682	0					
ANR	1037970	Argument	BINK_SRC_COLORS		1036682	1					
ANR	1037971	Identifier	BINK_SRC_COLORS		1036682	0					
ANR	1037972	ForStatement	for ( j = 0 ; j < run ; j ++ )		1036682	1					
ANR	1037973	ForInit	j = 0 ;	303:29:6528:6533	1036682	0	True				
ANR	1037974	AssignmentExpression	j = 0		1036682	0		=			
ANR	1037975	Identifier	j		1036682	0					
ANR	1037976	PrimaryExpression	0		1036682	1					
ANR	1037977	Condition	j < run	303:36:6535:6541	1036682	1	True				
ANR	1037978	RelationalExpression	j < run		1036682	0		<			
ANR	1037979	Identifier	j		1036682	0					
ANR	1037980	Identifier	run		1036682	1					
ANR	1037981	PostIncDecOperationExpression	j ++	303:45:6544:6546	1036682	2	True				
ANR	1037982	Identifier	j		1036682	0					
ANR	1037983	IncDec	++		1036682	1					
ANR	1037984	ExpressionStatement	dst [ coordmap [ * scan ++ ] ] = v	305:28:6578:6604	1036682	3	True				
ANR	1037985	AssignmentExpression	dst [ coordmap [ * scan ++ ] ] = v		1036682	0		=			
ANR	1037986	ArrayIndexing	dst [ coordmap [ * scan ++ ] ]		1036682	0					
ANR	1037987	Identifier	dst		1036682	0					
ANR	1037988	ArrayIndexing	coordmap [ * scan ++ ]		1036682	1					
ANR	1037989	Identifier	coordmap		1036682	0					
ANR	1037990	UnaryOperationExpression	* scan ++		1036682	1					
ANR	1037991	UnaryOperator	*		1036682	0					
ANR	1037992	PostIncDecOperationExpression	scan ++		1036682	1					
ANR	1037993	Identifier	scan		1036682	0					
ANR	1037994	IncDec	++		1036682	1					
ANR	1037995	Identifier	v		1036682	1					
ANR	1037996	ElseStatement	else		1036682	0					
ANR	1037997	CompoundStatement		303:27:6508:6508	1036682	0					
ANR	1037998	ForStatement	for ( j = 0 ; j < run ; j ++ )		1036682	0					
ANR	1037999	ForInit	j = 0 ;	309:29:6666:6671	1036682	0	True				
ANR	1038000	AssignmentExpression	j = 0		1036682	0		=			
ANR	1038001	Identifier	j		1036682	0					
ANR	1038002	PrimaryExpression	0		1036682	1					
ANR	1038003	Condition	j < run	309:36:6673:6679	1036682	1	True				
ANR	1038004	RelationalExpression	j < run		1036682	0		<			
ANR	1038005	Identifier	j		1036682	0					
ANR	1038006	Identifier	run		1036682	1					
ANR	1038007	PostIncDecOperationExpression	j ++	309:45:6682:6684	1036682	2	True				
ANR	1038008	Identifier	j		1036682	0					
ANR	1038009	IncDec	++		1036682	1					
ANR	1038010	ExpressionStatement	"dst [ coordmap [ * scan ++ ] ] = get_value ( c , BINK_SRC_COLORS )"	311:28:6716:6770	1036682	3	True				
ANR	1038011	AssignmentExpression	"dst [ coordmap [ * scan ++ ] ] = get_value ( c , BINK_SRC_COLORS )"		1036682	0		=			
ANR	1038012	ArrayIndexing	dst [ coordmap [ * scan ++ ] ]		1036682	0					
ANR	1038013	Identifier	dst		1036682	0					
ANR	1038014	ArrayIndexing	coordmap [ * scan ++ ]		1036682	1					
ANR	1038015	Identifier	coordmap		1036682	0					
ANR	1038016	UnaryOperationExpression	* scan ++		1036682	1					
ANR	1038017	UnaryOperator	*		1036682	0					
ANR	1038018	PostIncDecOperationExpression	scan ++		1036682	1					
ANR	1038019	Identifier	scan		1036682	0					
ANR	1038020	IncDec	++		1036682	1					
ANR	1038021	CallExpression	"get_value ( c , BINK_SRC_COLORS )"		1036682	1					
ANR	1038022	Callee	get_value		1036682	0					
ANR	1038023	Identifier	get_value		1036682	0					
ANR	1038024	ArgumentList	c		1036682	1					
ANR	1038025	Argument	c		1036682	0					
ANR	1038026	Identifier	c		1036682	0					
ANR	1038027	Argument	BINK_SRC_COLORS		1036682	1					
ANR	1038028	Identifier	BINK_SRC_COLORS		1036682	0					
ANR	1038029	Condition	i < 63	315:25:6821:6826	1036682	1	True				
ANR	1038030	RelationalExpression	i < 63		1036682	0		<			
ANR	1038031	Identifier	i		1036682	0					
ANR	1038032	PrimaryExpression	63		1036682	1					
ANR	1038033	IfStatement	if ( i == 63 )		1036682	22					
ANR	1038034	Condition	i == 63	317:20:6851:6857	1036682	0	True				
ANR	1038035	EqualityExpression	i == 63		1036682	0		==			
ANR	1038036	Identifier	i		1036682	0					
ANR	1038037	PrimaryExpression	63		1036682	1					
ANR	1038038	ExpressionStatement	"dst [ coordmap [ * scan ++ ] ] = get_value ( c , BINK_SRC_COLORS )"	319:20:6881:6935	1036682	1	True				
ANR	1038039	AssignmentExpression	"dst [ coordmap [ * scan ++ ] ] = get_value ( c , BINK_SRC_COLORS )"		1036682	0		=			
ANR	1038040	ArrayIndexing	dst [ coordmap [ * scan ++ ] ]		1036682	0					
ANR	1038041	Identifier	dst		1036682	0					
ANR	1038042	ArrayIndexing	coordmap [ * scan ++ ]		1036682	1					
ANR	1038043	Identifier	coordmap		1036682	0					
ANR	1038044	UnaryOperationExpression	* scan ++		1036682	1					
ANR	1038045	UnaryOperator	*		1036682	0					
ANR	1038046	PostIncDecOperationExpression	scan ++		1036682	1					
ANR	1038047	Identifier	scan		1036682	0					
ANR	1038048	IncDec	++		1036682	1					
ANR	1038049	CallExpression	"get_value ( c , BINK_SRC_COLORS )"		1036682	1					
ANR	1038050	Callee	get_value		1036682	0					
ANR	1038051	Identifier	get_value		1036682	0					
ANR	1038052	ArgumentList	c		1036682	1					
ANR	1038053	Argument	c		1036682	0					
ANR	1038054	Identifier	c		1036682	0					
ANR	1038055	Argument	BINK_SRC_COLORS		1036682	1					
ANR	1038056	Identifier	BINK_SRC_COLORS		1036682	0					
ANR	1038057	BreakStatement	break ;	321:16:6954:6959	1036682	23	True				
ANR	1038058	Label	case RESIDUE_BLOCK :	323:12:6974:6992	1036682	24	True				
ANR	1038059	Identifier	RESIDUE_BLOCK		1036682	0					
ANR	1038060	ExpressionStatement	"xoff = get_value ( c , BINK_SRC_X_OFF )"	325:16:7011:7046	1036682	25	True				
ANR	1038061	AssignmentExpression	"xoff = get_value ( c , BINK_SRC_X_OFF )"		1036682	0		=			
ANR	1038062	Identifier	xoff		1036682	0					
ANR	1038063	CallExpression	"get_value ( c , BINK_SRC_X_OFF )"		1036682	1					
ANR	1038064	Callee	get_value		1036682	0					
ANR	1038065	Identifier	get_value		1036682	0					
ANR	1038066	ArgumentList	c		1036682	1					
ANR	1038067	Argument	c		1036682	0					
ANR	1038068	Identifier	c		1036682	0					
ANR	1038069	Argument	BINK_SRC_X_OFF		1036682	1					
ANR	1038070	Identifier	BINK_SRC_X_OFF		1036682	0					
ANR	1038071	ExpressionStatement	"yoff = get_value ( c , BINK_SRC_Y_OFF )"	327:16:7065:7100	1036682	26	True				
ANR	1038072	AssignmentExpression	"yoff = get_value ( c , BINK_SRC_Y_OFF )"		1036682	0		=			
ANR	1038073	Identifier	yoff		1036682	0					
ANR	1038074	CallExpression	"get_value ( c , BINK_SRC_Y_OFF )"		1036682	1					
ANR	1038075	Callee	get_value		1036682	0					
ANR	1038076	Identifier	get_value		1036682	0					
ANR	1038077	ArgumentList	c		1036682	1					
ANR	1038078	Argument	c		1036682	0					
ANR	1038079	Identifier	c		1036682	0					
ANR	1038080	Argument	BINK_SRC_Y_OFF		1036682	1					
ANR	1038081	Identifier	BINK_SRC_Y_OFF		1036682	0					
ANR	1038082	ExpressionStatement	ref = prev + xoff + yoff * stride	329:16:7119:7152	1036682	27	True				
ANR	1038083	AssignmentExpression	ref = prev + xoff + yoff * stride		1036682	0		=			
ANR	1038084	Identifier	ref		1036682	0					
ANR	1038085	AdditiveExpression	prev + xoff + yoff * stride		1036682	1		+			
ANR	1038086	Identifier	prev		1036682	0					
ANR	1038087	AdditiveExpression	xoff + yoff * stride		1036682	1		+			
ANR	1038088	Identifier	xoff		1036682	0					
ANR	1038089	MultiplicativeExpression	yoff * stride		1036682	1		*			
ANR	1038090	Identifier	yoff		1036682	0					
ANR	1038091	Identifier	stride		1036682	1					
ANR	1038092	IfStatement	if ( ref < ref_start || ref > ref_end )		1036682	28					
ANR	1038093	Condition	ref < ref_start || ref > ref_end	331:20:7175:7206	1036682	0	True				
ANR	1038094	OrExpression	ref < ref_start || ref > ref_end		1036682	0		||			
ANR	1038095	RelationalExpression	ref < ref_start		1036682	0		<			
ANR	1038096	Identifier	ref		1036682	0					
ANR	1038097	Identifier	ref_start		1036682	1					
ANR	1038098	RelationalExpression	ref > ref_end		1036682	1		>			
ANR	1038099	Identifier	ref		1036682	0					
ANR	1038100	Identifier	ref_end		1036682	1					
ANR	1038101	CompoundStatement		327:54:7083:7083	1036682	1					
ANR	1038102	ExpressionStatement	"av_log ( c -> avctx , AV_LOG_ERROR , ""Copy out of bounds @%d, %d\\n"" , bx * 8 + xoff , by * 8 + yoff )"	333:20:7232:7348	1036682	0	True				
ANR	1038103	CallExpression	"av_log ( c -> avctx , AV_LOG_ERROR , ""Copy out of bounds @%d, %d\\n"" , bx * 8 + xoff , by * 8 + yoff )"		1036682	0					
ANR	1038104	Callee	av_log		1036682	0					
ANR	1038105	Identifier	av_log		1036682	0					
ANR	1038106	ArgumentList	c -> avctx		1036682	1					
ANR	1038107	Argument	c -> avctx		1036682	0					
ANR	1038108	PtrMemberAccess	c -> avctx		1036682	0					
ANR	1038109	Identifier	c		1036682	0					
ANR	1038110	Identifier	avctx		1036682	1					
ANR	1038111	Argument	AV_LOG_ERROR		1036682	1					
ANR	1038112	Identifier	AV_LOG_ERROR		1036682	0					
ANR	1038113	Argument	"""Copy out of bounds @%d, %d\\n"""		1036682	2					
ANR	1038114	PrimaryExpression	"""Copy out of bounds @%d, %d\\n"""		1036682	0					
ANR	1038115	Argument	bx * 8 + xoff		1036682	3					
ANR	1038116	AdditiveExpression	bx * 8 + xoff		1036682	0		+			
ANR	1038117	MultiplicativeExpression	bx * 8		1036682	0		*			
ANR	1038118	Identifier	bx		1036682	0					
ANR	1038119	PrimaryExpression	8		1036682	1					
ANR	1038120	Identifier	xoff		1036682	1					
ANR	1038121	Argument	by * 8 + yoff		1036682	4					
ANR	1038122	AdditiveExpression	by * 8 + yoff		1036682	0		+			
ANR	1038123	MultiplicativeExpression	by * 8		1036682	0		*			
ANR	1038124	Identifier	by		1036682	0					
ANR	1038125	PrimaryExpression	8		1036682	1					
ANR	1038126	Identifier	yoff		1036682	1					
ANR	1038127	ReturnStatement	return - 1 ;	337:20:7371:7380	1036682	1	True				
ANR	1038128	UnaryOperationExpression	- 1		1036682	0					
ANR	1038129	UnaryOperator	-		1036682	0					
ANR	1038130	PrimaryExpression	1		1036682	1					
ANR	1038131	ExpressionStatement	"c -> dsp . put_pixels_tab [ 1 ] [ 0 ] ( dst , ref , stride , 8 )"	341:16:7418:7466	1036682	29	True				
ANR	1038132	CallExpression	"c -> dsp . put_pixels_tab [ 1 ] [ 0 ] ( dst , ref , stride , 8 )"		1036682	0					
ANR	1038133	Callee	c -> dsp . put_pixels_tab [ 1 ] [ 0 ]		1036682	0					
ANR	1038134	ArrayIndexing	c -> dsp . put_pixels_tab [ 1 ] [ 0 ]		1036682	0					
ANR	1038135	ArrayIndexing	c -> dsp . put_pixels_tab [ 1 ]		1036682	0					
ANR	1038136	MemberAccess	c -> dsp . put_pixels_tab		1036682	0					
ANR	1038137	PtrMemberAccess	c -> dsp		1036682	0					
ANR	1038138	Identifier	c		1036682	0					
ANR	1038139	Identifier	dsp		1036682	1					
ANR	1038140	Identifier	put_pixels_tab		1036682	1					
ANR	1038141	PrimaryExpression	1		1036682	1					
ANR	1038142	PrimaryExpression	0		1036682	1					
ANR	1038143	ArgumentList	dst		1036682	1					
ANR	1038144	Argument	dst		1036682	0					
ANR	1038145	Identifier	dst		1036682	0					
ANR	1038146	Argument	ref		1036682	1					
ANR	1038147	Identifier	ref		1036682	0					
ANR	1038148	Argument	stride		1036682	2					
ANR	1038149	Identifier	stride		1036682	0					
ANR	1038150	Argument	8		1036682	3					
ANR	1038151	PrimaryExpression	8		1036682	0					
ANR	1038152	ExpressionStatement	c -> dsp . clear_block ( block )	343:16:7485:7510	1036682	30	True				
ANR	1038153	CallExpression	c -> dsp . clear_block ( block )		1036682	0					
ANR	1038154	Callee	c -> dsp . clear_block		1036682	0					
ANR	1038155	MemberAccess	c -> dsp . clear_block		1036682	0					
ANR	1038156	PtrMemberAccess	c -> dsp		1036682	0					
ANR	1038157	Identifier	c		1036682	0					
ANR	1038158	Identifier	dsp		1036682	1					
ANR	1038159	Identifier	clear_block		1036682	1					
ANR	1038160	ArgumentList	block		1036682	1					
ANR	1038161	Argument	block		1036682	0					
ANR	1038162	Identifier	block		1036682	0					
ANR	1038163	ExpressionStatement	"v = get_bits ( gb , 7 )"	345:16:7529:7548	1036682	31	True				
ANR	1038164	AssignmentExpression	"v = get_bits ( gb , 7 )"		1036682	0		=			
ANR	1038165	Identifier	v		1036682	0					
ANR	1038166	CallExpression	"get_bits ( gb , 7 )"		1036682	1					
ANR	1038167	Callee	get_bits		1036682	0					
ANR	1038168	Identifier	get_bits		1036682	0					
ANR	1038169	ArgumentList	gb		1036682	1					
ANR	1038170	Argument	gb		1036682	0					
ANR	1038171	Identifier	gb		1036682	0					
ANR	1038172	Argument	7		1036682	1					
ANR	1038173	PrimaryExpression	7		1036682	0					
ANR	1038174	ExpressionStatement	"read_residue ( gb , block , v )"	347:16:7567:7593	1036682	32	True				
ANR	1038175	CallExpression	"read_residue ( gb , block , v )"		1036682	0					
ANR	1038176	Callee	read_residue		1036682	0					
ANR	1038177	Identifier	read_residue		1036682	0					
ANR	1038178	ArgumentList	gb		1036682	1					
ANR	1038179	Argument	gb		1036682	0					
ANR	1038180	Identifier	gb		1036682	0					
ANR	1038181	Argument	block		1036682	1					
ANR	1038182	Identifier	block		1036682	0					
ANR	1038183	Argument	v		1036682	2					
ANR	1038184	Identifier	v		1036682	0					
ANR	1038185	ExpressionStatement	"c -> dsp . add_pixels8 ( dst , block , stride )"	349:16:7612:7650	1036682	33	True				
ANR	1038186	CallExpression	"c -> dsp . add_pixels8 ( dst , block , stride )"		1036682	0					
ANR	1038187	Callee	c -> dsp . add_pixels8		1036682	0					
ANR	1038188	MemberAccess	c -> dsp . add_pixels8		1036682	0					
ANR	1038189	PtrMemberAccess	c -> dsp		1036682	0					
ANR	1038190	Identifier	c		1036682	0					
ANR	1038191	Identifier	dsp		1036682	1					
ANR	1038192	Identifier	add_pixels8		1036682	1					
ANR	1038193	ArgumentList	dst		1036682	1					
ANR	1038194	Argument	dst		1036682	0					
ANR	1038195	Identifier	dst		1036682	0					
ANR	1038196	Argument	block		1036682	1					
ANR	1038197	Identifier	block		1036682	0					
ANR	1038198	Argument	stride		1036682	2					
ANR	1038199	Identifier	stride		1036682	0					
ANR	1038200	BreakStatement	break ;	351:16:7669:7674	1036682	34	True				
ANR	1038201	Label	case INTRA_BLOCK :	353:12:7689:7705	1036682	35	True				
ANR	1038202	Identifier	INTRA_BLOCK		1036682	0					
ANR	1038203	ExpressionStatement	"memset ( dctblock , 0 , sizeof ( * dctblock ) * 64 )"	355:16:7724:7767	1036682	36	True				
ANR	1038204	CallExpression	"memset ( dctblock , 0 , sizeof ( * dctblock ) * 64 )"		1036682	0					
ANR	1038205	Callee	memset		1036682	0					
ANR	1038206	Identifier	memset		1036682	0					
ANR	1038207	ArgumentList	dctblock		1036682	1					
ANR	1038208	Argument	dctblock		1036682	0					
ANR	1038209	Identifier	dctblock		1036682	0					
ANR	1038210	Argument	0		1036682	1					
ANR	1038211	PrimaryExpression	0		1036682	0					
ANR	1038212	Argument	sizeof ( * dctblock ) * 64		1036682	2					
ANR	1038213	MultiplicativeExpression	sizeof ( * dctblock ) * 64		1036682	0		*			
ANR	1038214	SizeofExpression	sizeof ( * dctblock )		1036682	0					
ANR	1038215	Sizeof	sizeof		1036682	0					
ANR	1038216	UnaryOperationExpression	* dctblock		1036682	1					
ANR	1038217	UnaryOperator	*		1036682	0					
ANR	1038218	Identifier	dctblock		1036682	1					
ANR	1038219	PrimaryExpression	64		1036682	1					
ANR	1038220	ExpressionStatement	"dctblock [ 0 ] = get_value ( c , BINK_SRC_INTRA_DC )"	357:16:7786:7831	1036682	37	True				
ANR	1038221	AssignmentExpression	"dctblock [ 0 ] = get_value ( c , BINK_SRC_INTRA_DC )"		1036682	0		=			
ANR	1038222	ArrayIndexing	dctblock [ 0 ]		1036682	0					
ANR	1038223	Identifier	dctblock		1036682	0					
ANR	1038224	PrimaryExpression	0		1036682	1					
ANR	1038225	CallExpression	"get_value ( c , BINK_SRC_INTRA_DC )"		1036682	1					
ANR	1038226	Callee	get_value		1036682	0					
ANR	1038227	Identifier	get_value		1036682	0					
ANR	1038228	ArgumentList	c		1036682	1					
ANR	1038229	Argument	c		1036682	0					
ANR	1038230	Identifier	c		1036682	0					
ANR	1038231	Argument	BINK_SRC_INTRA_DC		1036682	1					
ANR	1038232	Identifier	BINK_SRC_INTRA_DC		1036682	0					
ANR	1038233	ExpressionStatement	"read_dct_coeffs ( gb , dctblock , bink_scan , bink_intra_quant , - 1 )"	359:16:7850:7912	1036682	38	True				
ANR	1038234	CallExpression	"read_dct_coeffs ( gb , dctblock , bink_scan , bink_intra_quant , - 1 )"		1036682	0					
ANR	1038235	Callee	read_dct_coeffs		1036682	0					
ANR	1038236	Identifier	read_dct_coeffs		1036682	0					
ANR	1038237	ArgumentList	gb		1036682	1					
ANR	1038238	Argument	gb		1036682	0					
ANR	1038239	Identifier	gb		1036682	0					
ANR	1038240	Argument	dctblock		1036682	1					
ANR	1038241	Identifier	dctblock		1036682	0					
ANR	1038242	Argument	bink_scan		1036682	2					
ANR	1038243	Identifier	bink_scan		1036682	0					
ANR	1038244	Argument	bink_intra_quant		1036682	3					
ANR	1038245	Identifier	bink_intra_quant		1036682	0					
ANR	1038246	Argument	- 1		1036682	4					
ANR	1038247	UnaryOperationExpression	- 1		1036682	0					
ANR	1038248	UnaryOperator	-		1036682	0					
ANR	1038249	PrimaryExpression	1		1036682	1					
ANR	1038250	ExpressionStatement	"c -> bdsp . idct_put ( dst , stride , dctblock )"	361:16:7931:7970	1036682	39	True				
ANR	1038251	CallExpression	"c -> bdsp . idct_put ( dst , stride , dctblock )"		1036682	0					
ANR	1038252	Callee	c -> bdsp . idct_put		1036682	0					
ANR	1038253	MemberAccess	c -> bdsp . idct_put		1036682	0					
ANR	1038254	PtrMemberAccess	c -> bdsp		1036682	0					
ANR	1038255	Identifier	c		1036682	0					
ANR	1038256	Identifier	bdsp		1036682	1					
ANR	1038257	Identifier	idct_put		1036682	1					
ANR	1038258	ArgumentList	dst		1036682	1					
ANR	1038259	Argument	dst		1036682	0					
ANR	1038260	Identifier	dst		1036682	0					
ANR	1038261	Argument	stride		1036682	1					
ANR	1038262	Identifier	stride		1036682	0					
ANR	1038263	Argument	dctblock		1036682	2					
ANR	1038264	Identifier	dctblock		1036682	0					
ANR	1038265	BreakStatement	break ;	363:16:7989:7994	1036682	40	True				
ANR	1038266	Label	case FILL_BLOCK :	365:12:8009:8024	1036682	41	True				
ANR	1038267	Identifier	FILL_BLOCK		1036682	0					
ANR	1038268	ExpressionStatement	"v = get_value ( c , BINK_SRC_COLORS )"	367:16:8043:8076	1036682	42	True				
ANR	1038269	AssignmentExpression	"v = get_value ( c , BINK_SRC_COLORS )"		1036682	0		=			
ANR	1038270	Identifier	v		1036682	0					
ANR	1038271	CallExpression	"get_value ( c , BINK_SRC_COLORS )"		1036682	1					
ANR	1038272	Callee	get_value		1036682	0					
ANR	1038273	Identifier	get_value		1036682	0					
ANR	1038274	ArgumentList	c		1036682	1					
ANR	1038275	Argument	c		1036682	0					
ANR	1038276	Identifier	c		1036682	0					
ANR	1038277	Argument	BINK_SRC_COLORS		1036682	1					
ANR	1038278	Identifier	BINK_SRC_COLORS		1036682	0					
ANR	1038279	ExpressionStatement	"c -> dsp . fill_block_tab [ 1 ] ( dst , v , stride , 8 )"	369:16:8095:8138	1036682	43	True				
ANR	1038280	CallExpression	"c -> dsp . fill_block_tab [ 1 ] ( dst , v , stride , 8 )"		1036682	0					
ANR	1038281	Callee	c -> dsp . fill_block_tab [ 1 ]		1036682	0					
ANR	1038282	ArrayIndexing	c -> dsp . fill_block_tab [ 1 ]		1036682	0					
ANR	1038283	MemberAccess	c -> dsp . fill_block_tab		1036682	0					
ANR	1038284	PtrMemberAccess	c -> dsp		1036682	0					
ANR	1038285	Identifier	c		1036682	0					
ANR	1038286	Identifier	dsp		1036682	1					
ANR	1038287	Identifier	fill_block_tab		1036682	1					
ANR	1038288	PrimaryExpression	1		1036682	1					
ANR	1038289	ArgumentList	dst		1036682	1					
ANR	1038290	Argument	dst		1036682	0					
ANR	1038291	Identifier	dst		1036682	0					
ANR	1038292	Argument	v		1036682	1					
ANR	1038293	Identifier	v		1036682	0					
ANR	1038294	Argument	stride		1036682	2					
ANR	1038295	Identifier	stride		1036682	0					
ANR	1038296	Argument	8		1036682	3					
ANR	1038297	PrimaryExpression	8		1036682	0					
ANR	1038298	BreakStatement	break ;	371:16:8157:8162	1036682	44	True				
ANR	1038299	Label	case INTER_BLOCK :	373:12:8177:8193	1036682	45	True				
ANR	1038300	Identifier	INTER_BLOCK		1036682	0					
ANR	1038301	ExpressionStatement	"xoff = get_value ( c , BINK_SRC_X_OFF )"	375:16:8212:8247	1036682	46	True				
ANR	1038302	AssignmentExpression	"xoff = get_value ( c , BINK_SRC_X_OFF )"		1036682	0		=			
ANR	1038303	Identifier	xoff		1036682	0					
ANR	1038304	CallExpression	"get_value ( c , BINK_SRC_X_OFF )"		1036682	1					
ANR	1038305	Callee	get_value		1036682	0					
ANR	1038306	Identifier	get_value		1036682	0					
ANR	1038307	ArgumentList	c		1036682	1					
ANR	1038308	Argument	c		1036682	0					
ANR	1038309	Identifier	c		1036682	0					
ANR	1038310	Argument	BINK_SRC_X_OFF		1036682	1					
ANR	1038311	Identifier	BINK_SRC_X_OFF		1036682	0					
ANR	1038312	ExpressionStatement	"yoff = get_value ( c , BINK_SRC_Y_OFF )"	377:16:8266:8301	1036682	47	True				
ANR	1038313	AssignmentExpression	"yoff = get_value ( c , BINK_SRC_Y_OFF )"		1036682	0		=			
ANR	1038314	Identifier	yoff		1036682	0					
ANR	1038315	CallExpression	"get_value ( c , BINK_SRC_Y_OFF )"		1036682	1					
ANR	1038316	Callee	get_value		1036682	0					
ANR	1038317	Identifier	get_value		1036682	0					
ANR	1038318	ArgumentList	c		1036682	1					
ANR	1038319	Argument	c		1036682	0					
ANR	1038320	Identifier	c		1036682	0					
ANR	1038321	Argument	BINK_SRC_Y_OFF		1036682	1					
ANR	1038322	Identifier	BINK_SRC_Y_OFF		1036682	0					
ANR	1038323	ExpressionStatement	ref = prev + xoff + yoff * stride	379:16:8320:8353	1036682	48	True				
ANR	1038324	AssignmentExpression	ref = prev + xoff + yoff * stride		1036682	0		=			
ANR	1038325	Identifier	ref		1036682	0					
ANR	1038326	AdditiveExpression	prev + xoff + yoff * stride		1036682	1		+			
ANR	1038327	Identifier	prev		1036682	0					
ANR	1038328	AdditiveExpression	xoff + yoff * stride		1036682	1		+			
ANR	1038329	Identifier	xoff		1036682	0					
ANR	1038330	MultiplicativeExpression	yoff * stride		1036682	1		*			
ANR	1038331	Identifier	yoff		1036682	0					
ANR	1038332	Identifier	stride		1036682	1					
ANR	1038333	ExpressionStatement	"c -> dsp . put_pixels_tab [ 1 ] [ 0 ] ( dst , ref , stride , 8 )"	381:16:8372:8420	1036682	49	True				
ANR	1038334	CallExpression	"c -> dsp . put_pixels_tab [ 1 ] [ 0 ] ( dst , ref , stride , 8 )"		1036682	0					
ANR	1038335	Callee	c -> dsp . put_pixels_tab [ 1 ] [ 0 ]		1036682	0					
ANR	1038336	ArrayIndexing	c -> dsp . put_pixels_tab [ 1 ] [ 0 ]		1036682	0					
ANR	1038337	ArrayIndexing	c -> dsp . put_pixels_tab [ 1 ]		1036682	0					
ANR	1038338	MemberAccess	c -> dsp . put_pixels_tab		1036682	0					
ANR	1038339	PtrMemberAccess	c -> dsp		1036682	0					
ANR	1038340	Identifier	c		1036682	0					
ANR	1038341	Identifier	dsp		1036682	1					
ANR	1038342	Identifier	put_pixels_tab		1036682	1					
ANR	1038343	PrimaryExpression	1		1036682	1					
ANR	1038344	PrimaryExpression	0		1036682	1					
ANR	1038345	ArgumentList	dst		1036682	1					
ANR	1038346	Argument	dst		1036682	0					
ANR	1038347	Identifier	dst		1036682	0					
ANR	1038348	Argument	ref		1036682	1					
ANR	1038349	Identifier	ref		1036682	0					
ANR	1038350	Argument	stride		1036682	2					
ANR	1038351	Identifier	stride		1036682	0					
ANR	1038352	Argument	8		1036682	3					
ANR	1038353	PrimaryExpression	8		1036682	0					
ANR	1038354	ExpressionStatement	"memset ( dctblock , 0 , sizeof ( * dctblock ) * 64 )"	383:16:8439:8482	1036682	50	True				
ANR	1038355	CallExpression	"memset ( dctblock , 0 , sizeof ( * dctblock ) * 64 )"		1036682	0					
ANR	1038356	Callee	memset		1036682	0					
ANR	1038357	Identifier	memset		1036682	0					
ANR	1038358	ArgumentList	dctblock		1036682	1					
ANR	1038359	Argument	dctblock		1036682	0					
ANR	1038360	Identifier	dctblock		1036682	0					
ANR	1038361	Argument	0		1036682	1					
ANR	1038362	PrimaryExpression	0		1036682	0					
ANR	1038363	Argument	sizeof ( * dctblock ) * 64		1036682	2					
ANR	1038364	MultiplicativeExpression	sizeof ( * dctblock ) * 64		1036682	0		*			
ANR	1038365	SizeofExpression	sizeof ( * dctblock )		1036682	0					
ANR	1038366	Sizeof	sizeof		1036682	0					
ANR	1038367	UnaryOperationExpression	* dctblock		1036682	1					
ANR	1038368	UnaryOperator	*		1036682	0					
ANR	1038369	Identifier	dctblock		1036682	1					
ANR	1038370	PrimaryExpression	64		1036682	1					
ANR	1038371	ExpressionStatement	"dctblock [ 0 ] = get_value ( c , BINK_SRC_INTER_DC )"	385:16:8501:8546	1036682	51	True				
ANR	1038372	AssignmentExpression	"dctblock [ 0 ] = get_value ( c , BINK_SRC_INTER_DC )"		1036682	0		=			
ANR	1038373	ArrayIndexing	dctblock [ 0 ]		1036682	0					
ANR	1038374	Identifier	dctblock		1036682	0					
ANR	1038375	PrimaryExpression	0		1036682	1					
ANR	1038376	CallExpression	"get_value ( c , BINK_SRC_INTER_DC )"		1036682	1					
ANR	1038377	Callee	get_value		1036682	0					
ANR	1038378	Identifier	get_value		1036682	0					
ANR	1038379	ArgumentList	c		1036682	1					
ANR	1038380	Argument	c		1036682	0					
ANR	1038381	Identifier	c		1036682	0					
ANR	1038382	Argument	BINK_SRC_INTER_DC		1036682	1					
ANR	1038383	Identifier	BINK_SRC_INTER_DC		1036682	0					
ANR	1038384	ExpressionStatement	"read_dct_coeffs ( gb , dctblock , bink_scan , bink_inter_quant , - 1 )"	387:16:8565:8627	1036682	52	True				
ANR	1038385	CallExpression	"read_dct_coeffs ( gb , dctblock , bink_scan , bink_inter_quant , - 1 )"		1036682	0					
ANR	1038386	Callee	read_dct_coeffs		1036682	0					
ANR	1038387	Identifier	read_dct_coeffs		1036682	0					
ANR	1038388	ArgumentList	gb		1036682	1					
ANR	1038389	Argument	gb		1036682	0					
ANR	1038390	Identifier	gb		1036682	0					
ANR	1038391	Argument	dctblock		1036682	1					
ANR	1038392	Identifier	dctblock		1036682	0					
ANR	1038393	Argument	bink_scan		1036682	2					
ANR	1038394	Identifier	bink_scan		1036682	0					
ANR	1038395	Argument	bink_inter_quant		1036682	3					
ANR	1038396	Identifier	bink_inter_quant		1036682	0					
ANR	1038397	Argument	- 1		1036682	4					
ANR	1038398	UnaryOperationExpression	- 1		1036682	0					
ANR	1038399	UnaryOperator	-		1036682	0					
ANR	1038400	PrimaryExpression	1		1036682	1					
ANR	1038401	ExpressionStatement	"c -> bdsp . idct_add ( dst , stride , dctblock )"	389:16:8646:8685	1036682	53	True				
ANR	1038402	CallExpression	"c -> bdsp . idct_add ( dst , stride , dctblock )"		1036682	0					
ANR	1038403	Callee	c -> bdsp . idct_add		1036682	0					
ANR	1038404	MemberAccess	c -> bdsp . idct_add		1036682	0					
ANR	1038405	PtrMemberAccess	c -> bdsp		1036682	0					
ANR	1038406	Identifier	c		1036682	0					
ANR	1038407	Identifier	bdsp		1036682	1					
ANR	1038408	Identifier	idct_add		1036682	1					
ANR	1038409	ArgumentList	dst		1036682	1					
ANR	1038410	Argument	dst		1036682	0					
ANR	1038411	Identifier	dst		1036682	0					
ANR	1038412	Argument	stride		1036682	1					
ANR	1038413	Identifier	stride		1036682	0					
ANR	1038414	Argument	dctblock		1036682	2					
ANR	1038415	Identifier	dctblock		1036682	0					
ANR	1038416	BreakStatement	break ;	391:16:8704:8709	1036682	54	True				
ANR	1038417	Label	case PATTERN_BLOCK :	393:12:8724:8742	1036682	55	True				
ANR	1038418	Identifier	PATTERN_BLOCK		1036682	0					
ANR	1038419	ForStatement	for ( i = 0 ; i < 2 ; i ++ )		1036682	56					
ANR	1038420	ForInit	i = 0 ;	395:21:8766:8771	1036682	0	True				
ANR	1038421	AssignmentExpression	i = 0		1036682	0		=			
ANR	1038422	Identifier	i		1036682	0					
ANR	1038423	PrimaryExpression	0		1036682	1					
ANR	1038424	Condition	i < 2	395:28:8773:8777	1036682	1	True				
ANR	1038425	RelationalExpression	i < 2		1036682	0		<			
ANR	1038426	Identifier	i		1036682	0					
ANR	1038427	PrimaryExpression	2		1036682	1					
ANR	1038428	PostIncDecOperationExpression	i ++	395:35:8780:8782	1036682	2	True				
ANR	1038429	Identifier	i		1036682	0					
ANR	1038430	IncDec	++		1036682	1					
ANR	1038431	ExpressionStatement	"col [ i ] = get_value ( c , BINK_SRC_COLORS )"	397:20:8806:8844	1036682	3	True				
ANR	1038432	AssignmentExpression	"col [ i ] = get_value ( c , BINK_SRC_COLORS )"		1036682	0		=			
ANR	1038433	ArrayIndexing	col [ i ]		1036682	0					
ANR	1038434	Identifier	col		1036682	0					
ANR	1038435	Identifier	i		1036682	1					
ANR	1038436	CallExpression	"get_value ( c , BINK_SRC_COLORS )"		1036682	1					
ANR	1038437	Callee	get_value		1036682	0					
ANR	1038438	Identifier	get_value		1036682	0					
ANR	1038439	ArgumentList	c		1036682	1					
ANR	1038440	Argument	c		1036682	0					
ANR	1038441	Identifier	c		1036682	0					
ANR	1038442	Argument	BINK_SRC_COLORS		1036682	1					
ANR	1038443	Identifier	BINK_SRC_COLORS		1036682	0					
ANR	1038444	ForStatement	for ( i = 0 ; i < 8 ; i ++ )		1036682	57					
ANR	1038445	ForInit	i = 0 ;	399:21:8868:8873	1036682	0	True				
ANR	1038446	AssignmentExpression	i = 0		1036682	0		=			
ANR	1038447	Identifier	i		1036682	0					
ANR	1038448	PrimaryExpression	0		1036682	1					
ANR	1038449	Condition	i < 8	399:28:8875:8879	1036682	1	True				
ANR	1038450	RelationalExpression	i < 8		1036682	0		<			
ANR	1038451	Identifier	i		1036682	0					
ANR	1038452	PrimaryExpression	8		1036682	1					
ANR	1038453	PostIncDecOperationExpression	i ++	399:35:8882:8884	1036682	2	True				
ANR	1038454	Identifier	i		1036682	0					
ANR	1038455	IncDec	++		1036682	1					
ANR	1038456	CompoundStatement		395:40:8761:8761	1036682	3					
ANR	1038457	ExpressionStatement	"v = get_value ( c , BINK_SRC_PATTERN )"	401:20:8910:8944	1036682	0	True				
ANR	1038458	AssignmentExpression	"v = get_value ( c , BINK_SRC_PATTERN )"		1036682	0		=			
ANR	1038459	Identifier	v		1036682	0					
ANR	1038460	CallExpression	"get_value ( c , BINK_SRC_PATTERN )"		1036682	1					
ANR	1038461	Callee	get_value		1036682	0					
ANR	1038462	Identifier	get_value		1036682	0					
ANR	1038463	ArgumentList	c		1036682	1					
ANR	1038464	Argument	c		1036682	0					
ANR	1038465	Identifier	c		1036682	0					
ANR	1038466	Argument	BINK_SRC_PATTERN		1036682	1					
ANR	1038467	Identifier	BINK_SRC_PATTERN		1036682	0					
ANR	1038468	ForStatement	"for ( j = 0 ; j < 8 ; j ++ , v >>= 1 )"		1036682	1					
ANR	1038469	ForInit	j = 0 ;	403:25:8972:8977	1036682	0	True				
ANR	1038470	AssignmentExpression	j = 0		1036682	0		=			
ANR	1038471	Identifier	j		1036682	0					
ANR	1038472	PrimaryExpression	0		1036682	1					
ANR	1038473	Condition	j < 8	403:32:8979:8983	1036682	1	True				
ANR	1038474	RelationalExpression	j < 8		1036682	0		<			
ANR	1038475	Identifier	j		1036682	0					
ANR	1038476	PrimaryExpression	8		1036682	1					
ANR	1038477	Expression	"j ++ , v >>= 1"	403:39:8986:8997	1036682	2	True				
ANR	1038478	PostIncDecOperationExpression	j ++		1036682	0					
ANR	1038479	Identifier	j		1036682	0					
ANR	1038480	IncDec	++		1036682	1					
ANR	1038481	AssignmentExpression	v >>= 1		1036682	1		>>=			
ANR	1038482	Identifier	v		1036682	0					
ANR	1038483	PrimaryExpression	1		1036682	1					
ANR	1038484	ExpressionStatement	dst [ i * stride + j ] = col [ v & 1 ]	405:24:9025:9055	1036682	3	True				
ANR	1038485	AssignmentExpression	dst [ i * stride + j ] = col [ v & 1 ]		1036682	0		=			
ANR	1038486	ArrayIndexing	dst [ i * stride + j ]		1036682	0					
ANR	1038487	Identifier	dst		1036682	0					
ANR	1038488	AdditiveExpression	i * stride + j		1036682	1		+			
ANR	1038489	MultiplicativeExpression	i * stride		1036682	0		*			
ANR	1038490	Identifier	i		1036682	0					
ANR	1038491	Identifier	stride		1036682	1					
ANR	1038492	Identifier	j		1036682	1					
ANR	1038493	ArrayIndexing	col [ v & 1 ]		1036682	1					
ANR	1038494	Identifier	col		1036682	0					
ANR	1038495	BitAndExpression	v & 1		1036682	1		&			
ANR	1038496	Identifier	v		1036682	0					
ANR	1038497	PrimaryExpression	1		1036682	1					
ANR	1038498	BreakStatement	break ;	409:16:9093:9098	1036682	58	True				
ANR	1038499	Label	case RAW_BLOCK :	411:12:9113:9127	1036682	59	True				
ANR	1038500	Identifier	RAW_BLOCK		1036682	0					
ANR	1038501	ForStatement	for ( i = 0 ; i < 8 ; i ++ )		1036682	60					
ANR	1038502	ForInit	i = 0 ;	413:21:9151:9156	1036682	0	True				
ANR	1038503	AssignmentExpression	i = 0		1036682	0		=			
ANR	1038504	Identifier	i		1036682	0					
ANR	1038505	PrimaryExpression	0		1036682	1					
ANR	1038506	Condition	i < 8	413:28:9158:9162	1036682	1	True				
ANR	1038507	RelationalExpression	i < 8		1036682	0		<			
ANR	1038508	Identifier	i		1036682	0					
ANR	1038509	PrimaryExpression	8		1036682	1					
ANR	1038510	PostIncDecOperationExpression	i ++	413:35:9165:9167	1036682	2	True				
ANR	1038511	Identifier	i		1036682	0					
ANR	1038512	IncDec	++		1036682	1					
ANR	1038513	ExpressionStatement	"memcpy ( dst + i * stride , c -> bundle [ BINK_SRC_COLORS ] . cur_ptr + i * 8 , 8 )"	415:20:9191:9258	1036682	3	True				
ANR	1038514	CallExpression	"memcpy ( dst + i * stride , c -> bundle [ BINK_SRC_COLORS ] . cur_ptr + i * 8 , 8 )"		1036682	0					
ANR	1038515	Callee	memcpy		1036682	0					
ANR	1038516	Identifier	memcpy		1036682	0					
ANR	1038517	ArgumentList	dst + i * stride		1036682	1					
ANR	1038518	Argument	dst + i * stride		1036682	0					
ANR	1038519	AdditiveExpression	dst + i * stride		1036682	0		+			
ANR	1038520	Identifier	dst		1036682	0					
ANR	1038521	MultiplicativeExpression	i * stride		1036682	1		*			
ANR	1038522	Identifier	i		1036682	0					
ANR	1038523	Identifier	stride		1036682	1					
ANR	1038524	Argument	c -> bundle [ BINK_SRC_COLORS ] . cur_ptr + i * 8		1036682	1					
ANR	1038525	AdditiveExpression	c -> bundle [ BINK_SRC_COLORS ] . cur_ptr + i * 8		1036682	0		+			
ANR	1038526	MemberAccess	c -> bundle [ BINK_SRC_COLORS ] . cur_ptr		1036682	0					
ANR	1038527	ArrayIndexing	c -> bundle [ BINK_SRC_COLORS ]		1036682	0					
ANR	1038528	PtrMemberAccess	c -> bundle		1036682	0					
ANR	1038529	Identifier	c		1036682	0					
ANR	1038530	Identifier	bundle		1036682	1					
ANR	1038531	Identifier	BINK_SRC_COLORS		1036682	1					
ANR	1038532	Identifier	cur_ptr		1036682	1					
ANR	1038533	MultiplicativeExpression	i * 8		1036682	1		*			
ANR	1038534	Identifier	i		1036682	0					
ANR	1038535	PrimaryExpression	8		1036682	1					
ANR	1038536	Argument	8		1036682	2					
ANR	1038537	PrimaryExpression	8		1036682	0					
ANR	1038538	ExpressionStatement	c -> bundle [ BINK_SRC_COLORS ] . cur_ptr += 64	417:16:9277:9317	1036682	61	True				
ANR	1038539	AssignmentExpression	c -> bundle [ BINK_SRC_COLORS ] . cur_ptr += 64		1036682	0		+=			
ANR	1038540	MemberAccess	c -> bundle [ BINK_SRC_COLORS ] . cur_ptr		1036682	0					
ANR	1038541	ArrayIndexing	c -> bundle [ BINK_SRC_COLORS ]		1036682	0					
ANR	1038542	PtrMemberAccess	c -> bundle		1036682	0					
ANR	1038543	Identifier	c		1036682	0					
ANR	1038544	Identifier	bundle		1036682	1					
ANR	1038545	Identifier	BINK_SRC_COLORS		1036682	1					
ANR	1038546	Identifier	cur_ptr		1036682	1					
ANR	1038547	PrimaryExpression	64		1036682	1					
ANR	1038548	BreakStatement	break ;	419:16:9336:9341	1036682	62	True				
ANR	1038549	Label	default :	421:12:9356:9363	1036682	63	True				
ANR	1038550	Identifier	default		1036682	0					
ANR	1038551	ExpressionStatement	"av_log ( c -> avctx , AV_LOG_ERROR , ""Unknown block type %d\\n"" , blk )"	423:16:9382:9444	1036682	64	True				
ANR	1038552	CallExpression	"av_log ( c -> avctx , AV_LOG_ERROR , ""Unknown block type %d\\n"" , blk )"		1036682	0					
ANR	1038553	Callee	av_log		1036682	0					
ANR	1038554	Identifier	av_log		1036682	0					
ANR	1038555	ArgumentList	c -> avctx		1036682	1					
ANR	1038556	Argument	c -> avctx		1036682	0					
ANR	1038557	PtrMemberAccess	c -> avctx		1036682	0					
ANR	1038558	Identifier	c		1036682	0					
ANR	1038559	Identifier	avctx		1036682	1					
ANR	1038560	Argument	AV_LOG_ERROR		1036682	1					
ANR	1038561	Identifier	AV_LOG_ERROR		1036682	0					
ANR	1038562	Argument	"""Unknown block type %d\\n"""		1036682	2					
ANR	1038563	PrimaryExpression	"""Unknown block type %d\\n"""		1036682	0					
ANR	1038564	Argument	blk		1036682	3					
ANR	1038565	Identifier	blk		1036682	0					
ANR	1038566	ReturnStatement	return - 1 ;	425:16:9463:9472	1036682	65	True				
ANR	1038567	UnaryOperationExpression	- 1		1036682	0					
ANR	1038568	UnaryOperator	-		1036682	0					
ANR	1038569	PrimaryExpression	1		1036682	1					
ANR	1038570	IfStatement	if ( get_bits_count ( gb ) & 0x1F )		1036682	50					
ANR	1038571	Condition	get_bits_count ( gb ) & 0x1F	433:8:9516:9540	1036682	0	True				
ANR	1038572	BitAndExpression	get_bits_count ( gb ) & 0x1F		1036682	0		&			
ANR	1038573	CallExpression	get_bits_count ( gb )		1036682	0					
ANR	1038574	Callee	get_bits_count		1036682	0					
ANR	1038575	Identifier	get_bits_count		1036682	0					
ANR	1038576	ArgumentList	gb		1036682	1					
ANR	1038577	Argument	gb		1036682	0					
ANR	1038578	Identifier	gb		1036682	0					
ANR	1038579	PrimaryExpression	0x1F		1036682	1					
ANR	1038580	ExpressionStatement	"skip_bits_long ( gb , 32 - ( get_bits_count ( gb ) & 0x1F ) )"	435:8:9596:9648	1036682	1	True				
ANR	1038581	CallExpression	"skip_bits_long ( gb , 32 - ( get_bits_count ( gb ) & 0x1F ) )"		1036682	0					
ANR	1038582	Callee	skip_bits_long		1036682	0					
ANR	1038583	Identifier	skip_bits_long		1036682	0					
ANR	1038584	ArgumentList	gb		1036682	1					
ANR	1038585	Argument	gb		1036682	0					
ANR	1038586	Identifier	gb		1036682	0					
ANR	1038587	Argument	32 - ( get_bits_count ( gb ) & 0x1F )		1036682	1					
ANR	1038588	AdditiveExpression	32 - ( get_bits_count ( gb ) & 0x1F )		1036682	0		-			
ANR	1038589	PrimaryExpression	32		1036682	0					
ANR	1038590	BitAndExpression	get_bits_count ( gb ) & 0x1F		1036682	1		&			
ANR	1038591	CallExpression	get_bits_count ( gb )		1036682	0					
ANR	1038592	Callee	get_bits_count		1036682	0					
ANR	1038593	Identifier	get_bits_count		1036682	0					
ANR	1038594	ArgumentList	gb		1036682	1					
ANR	1038595	Argument	gb		1036682	0					
ANR	1038596	Identifier	gb		1036682	0					
ANR	1038597	PrimaryExpression	0x1F		1036682	1					
ANR	1038598	ReturnStatement	return 0 ;	439:4:9657:9665	1036682	51	True				
ANR	1038599	PrimaryExpression	0		1036682	0					
ANR	1038600	ReturnType	static int		1036682	1					
ANR	1038601	Identifier	bink_decode_plane		1036682	2					
ANR	1038602	ParameterList	"BinkContext * c , GetBitContext * gb , int plane_idx , int is_chroma"		1036682	3					
ANR	1038603	Parameter	BinkContext * c	1:29:29:42	1036682	0	True				
ANR	1038604	ParameterType	BinkContext *		1036682	0					
ANR	1038605	Identifier	c		1036682	1					
ANR	1038606	Parameter	GetBitContext * gb	1:45:45:61	1036682	1	True				
ANR	1038607	ParameterType	GetBitContext *		1036682	0					
ANR	1038608	Identifier	gb		1036682	1					
ANR	1038609	Parameter	int plane_idx	1:64:64:76	1036682	2	True				
ANR	1038610	ParameterType	int		1036682	0					
ANR	1038611	Identifier	plane_idx		1036682	1					
ANR	1038612	Parameter	int is_chroma	3:29:109:121	1036682	3	True				
ANR	1038613	ParameterType	int		1036682	0					
ANR	1038614	Identifier	is_chroma		1036682	1					
ANR	1038615	CFGEntryNode	ENTRY		1036682		True				
ANR	1038616	CFGExitNode	EXIT		1036682		True				
ANR	1038617	Symbol	c -> dsp . put_pixels_tab		1036682						
ANR	1038618	Symbol	* v		1036682						
ANR	1038619	Symbol	* stride		1036682						
ANR	1038620	Symbol	ref_start		1036682						
ANR	1038621	Symbol	BINK_NB_SRC		1036682						
ANR	1038622	Symbol	ublock		1036682						
ANR	1038623	Symbol	prev		1036682						
ANR	1038624	Symbol	stride		1036682						
ANR	1038625	Symbol	* ublock		1036682						
ANR	1038626	Symbol	BINK_SRC_RUN		1036682						
ANR	1038627	Symbol	bink_scan		1036682						
ANR	1038628	Symbol	block		1036682						
ANR	1038629	Symbol	* coordmap		1036682						
ANR	1038630	Symbol	read_patterns		1036682						
ANR	1038631	Symbol	FILL_BLOCK		1036682						
ANR	1038632	Symbol	* c -> pic . linesize		1036682						
ANR	1038633	Symbol	BINK_SRC_BLOCK_TYPES		1036682						
ANR	1038634	Symbol	* dctblock		1036682						
ANR	1038635	Symbol	* * * scan ++		1036682						
ANR	1038636	Symbol	BINK_SRC_SUB_BLOCK_TYPES		1036682						
ANR	1038637	Symbol	* * coordmap		1036682						
ANR	1038638	Symbol	c -> dsp		1036682						
ANR	1038639	Symbol	c -> pic . data		1036682						
ANR	1038640	Symbol	get_value		1036682						
ANR	1038641	Symbol	* c -> last . linesize		1036682						
ANR	1038642	Symbol	c -> last		1036682						
ANR	1038643	Symbol	* c -> avctx		1036682						
ANR	1038644	Symbol	bh		1036682						
ANR	1038645	Symbol	scan		1036682						
ANR	1038646	Symbol	dctblock		1036682						
ANR	1038647	Symbol	bw		1036682						
ANR	1038648	Symbol	bx		1036682						
ANR	1038649	Symbol	* bink_patterns		1036682						
ANR	1038650	Symbol	by		1036682						
ANR	1038651	Symbol	read_colors		1036682						
ANR	1038652	Symbol	BINK_SRC_Y_OFF		1036682						
ANR	1038653	Symbol	* c -> pic . data		1036682						
ANR	1038654	Symbol	blk		1036682						
ANR	1038655	Symbol	c		1036682						
ANR	1038656	Symbol	AV_LOG_ERROR		1036682						
ANR	1038657	Symbol	i		1036682						
ANR	1038658	Symbol	j		1036682						
ANR	1038659	Symbol	SCALED_BLOCK		1036682						
ANR	1038660	Symbol	* c -> dsp . put_pixels_tab		1036682						
ANR	1038661	Symbol	yoff		1036682						
ANR	1038662	Symbol	read_motion_values		1036682						
ANR	1038663	Symbol	v		1036682						
ANR	1038664	Symbol	c -> dsp . fill_block_tab		1036682						
ANR	1038665	Symbol	c -> avctx -> height		1036682						
ANR	1038666	Symbol	width		1036682						
ANR	1038667	Symbol	FFMAX		1036682						
ANR	1038668	Symbol	coordmap		1036682						
ANR	1038669	Symbol	col		1036682						
ANR	1038670	Symbol	c -> bundle		1036682						
ANR	1038671	Symbol	c -> last . data		1036682						
ANR	1038672	Symbol	ref_end		1036682						
ANR	1038673	Symbol	get_bits		1036682						
ANR	1038674	Symbol	c -> bundle [ BINK_SRC_COLORS ] . cur_ptr		1036682						
ANR	1038675	Symbol	run		1036682						
ANR	1038676	Symbol	* * scan ++		1036682						
ANR	1038677	Symbol	* dst		1036682						
ANR	1038678	Symbol	ref		1036682						
ANR	1038679	Symbol	* c -> pic		1036682						
ANR	1038680	Symbol	bink_intra_quant		1036682						
ANR	1038681	Symbol	* BINK_SRC_COLORS		1036682						
ANR	1038682	Symbol	BINK_SRC_PATTERN		1036682						
ANR	1038683	Symbol	c -> bdsp		1036682						
ANR	1038684	Symbol	get_bits1		1036682						
ANR	1038685	Symbol	* * c		1036682						
ANR	1038686	Symbol	* scan ++		1036682						
ANR	1038687	Symbol	DC_START_BITS		1036682						
ANR	1038688	Symbol	is_chroma		1036682						
ANR	1038689	Symbol	get_bits_count		1036682						
ANR	1038690	Symbol	* plane_idx		1036682						
ANR	1038691	Symbol	c -> avctx		1036682						
ANR	1038692	Symbol	BINK_SRC_COLORS		1036682						
ANR	1038693	Symbol	c -> pic . linesize		1036682						
ANR	1038694	Symbol	bink_inter_quant		1036682						
ANR	1038695	Symbol	dst		1036682						
ANR	1038696	Symbol	c -> last . linesize		1036682						
ANR	1038697	Symbol	plane_idx		1036682						
ANR	1038698	Symbol	xoff		1036682						
ANR	1038699	Symbol	* col		1036682						
ANR	1038700	Symbol	* c -> bundle		1036682						
ANR	1038701	Symbol	bink_patterns		1036682						
ANR	1038702	Symbol	gb		1036682						
ANR	1038703	Symbol	c -> avctx -> width		1036682						
ANR	1038704	Symbol	* c -> dsp		1036682						
ANR	1038705	Symbol	read_dcs		1036682						
ANR	1038706	Symbol	* get_bits		1036682						
ANR	1038707	Symbol	c -> pic		1036682						
ANR	1038708	Symbol	BINK_SRC_INTER_DC		1036682						
ANR	1038709	Symbol	* c		1036682						
ANR	1038710	Symbol	BINK_SRC_X_OFF		1036682						
ANR	1038711	Symbol	read_runs		1036682						
ANR	1038712	Symbol	* c -> last . data		1036682						
ANR	1038713	Symbol	BINK_SRC_INTRA_DC		1036682						
ANR	1038714	Symbol	* i		1036682						
ANR	1038715	Symbol	* j		1036682						
ANR	1038716	Symbol	* c -> last		1036682						
ANR	1038717	Symbol	read_block_types		1036682						
