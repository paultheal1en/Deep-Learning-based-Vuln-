command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5161888	File	/home/p4ultr4n/workplace/ReVeal/raw_code/lag_decode_arith_plane_0.c								
ANR	5161889	Function	lag_decode_arith_plane	1:0:0:3110							
ANR	5161890	FunctionDef	"lag_decode_arith_plane (LagarithContext * l , uint8_t * dst , int width , int height , int stride , const uint8_t * src , int src_size)"		5161889	0					
ANR	5161891	CompoundStatement		7:0:208:3110	5161889	0					
ANR	5161892	IdentifierDeclStatement	int i = 0 ;	9:4:215:224	5161889	0	True				
ANR	5161893	IdentifierDecl	i = 0		5161889	0					
ANR	5161894	IdentifierDeclType	int		5161889	0					
ANR	5161895	Identifier	i		5161889	1					
ANR	5161896	AssignmentExpression	i = 0		5161889	2		=			
ANR	5161897	Identifier	i		5161889	0					
ANR	5161898	PrimaryExpression	0		5161889	1					
ANR	5161899	IdentifierDeclStatement	int read = 0 ;	11:4:231:243	5161889	1	True				
ANR	5161900	IdentifierDecl	read = 0		5161889	0					
ANR	5161901	IdentifierDeclType	int		5161889	0					
ANR	5161902	Identifier	read		5161889	1					
ANR	5161903	AssignmentExpression	read = 0		5161889	2		=			
ANR	5161904	Identifier	read		5161889	0					
ANR	5161905	PrimaryExpression	0		5161889	1					
ANR	5161906	IdentifierDeclStatement	uint32_t length ;	13:4:250:265	5161889	2	True				
ANR	5161907	IdentifierDecl	length		5161889	0					
ANR	5161908	IdentifierDeclType	uint32_t		5161889	0					
ANR	5161909	Identifier	length		5161889	1					
ANR	5161910	IdentifierDeclStatement	uint32_t offset = 1 ;	15:4:272:291	5161889	3	True				
ANR	5161911	IdentifierDecl	offset = 1		5161889	0					
ANR	5161912	IdentifierDeclType	uint32_t		5161889	0					
ANR	5161913	Identifier	offset		5161889	1					
ANR	5161914	AssignmentExpression	offset = 1		5161889	2		=			
ANR	5161915	Identifier	offset		5161889	0					
ANR	5161916	PrimaryExpression	1		5161889	1					
ANR	5161917	IdentifierDeclStatement	int esc_count ;	17:4:298:311	5161889	4	True				
ANR	5161918	IdentifierDecl	esc_count		5161889	0					
ANR	5161919	IdentifierDeclType	int		5161889	0					
ANR	5161920	Identifier	esc_count		5161889	1					
ANR	5161921	IdentifierDeclStatement	GetBitContext gb ;	19:4:318:334	5161889	5	True				
ANR	5161922	IdentifierDecl	gb		5161889	0					
ANR	5161923	IdentifierDeclType	GetBitContext		5161889	0					
ANR	5161924	Identifier	gb		5161889	1					
ANR	5161925	IdentifierDeclStatement	lag_rac rac ;	21:4:341:352	5161889	6	True				
ANR	5161926	IdentifierDecl	rac		5161889	0					
ANR	5161927	IdentifierDeclType	lag_rac		5161889	0					
ANR	5161928	Identifier	rac		5161889	1					
ANR	5161929	IdentifierDeclStatement	const uint8_t * src_end = src + src_size ;	23:4:359:398	5161889	7	True				
ANR	5161930	IdentifierDecl	* src_end = src + src_size		5161889	0					
ANR	5161931	IdentifierDeclType	const uint8_t *		5161889	0					
ANR	5161932	Identifier	src_end		5161889	1					
ANR	5161933	AssignmentExpression	* src_end = src + src_size		5161889	2		=			
ANR	5161934	Identifier	src_end		5161889	0					
ANR	5161935	AdditiveExpression	src + src_size		5161889	1		+			
ANR	5161936	Identifier	src		5161889	0					
ANR	5161937	Identifier	src_size		5161889	1					
ANR	5161938	ExpressionStatement	rac . avctx = l -> avctx	27:4:407:427	5161889	8	True				
ANR	5161939	AssignmentExpression	rac . avctx = l -> avctx		5161889	0		=			
ANR	5161940	MemberAccess	rac . avctx		5161889	0					
ANR	5161941	Identifier	rac		5161889	0					
ANR	5161942	Identifier	avctx		5161889	1					
ANR	5161943	PtrMemberAccess	l -> avctx		5161889	1					
ANR	5161944	Identifier	l		5161889	0					
ANR	5161945	Identifier	avctx		5161889	1					
ANR	5161946	ExpressionStatement	l -> zeros = 0	29:4:434:446	5161889	9	True				
ANR	5161947	AssignmentExpression	l -> zeros = 0		5161889	0		=			
ANR	5161948	PtrMemberAccess	l -> zeros		5161889	0					
ANR	5161949	Identifier	l		5161889	0					
ANR	5161950	Identifier	zeros		5161889	1					
ANR	5161951	PrimaryExpression	0		5161889	1					
ANR	5161952	IfStatement	if ( src_size < 2 )		5161889	10					
ANR	5161953	Condition	src_size < 2	33:7:458:469	5161889	0	True				
ANR	5161954	RelationalExpression	src_size < 2		5161889	0		<			
ANR	5161955	Identifier	src_size		5161889	0					
ANR	5161956	PrimaryExpression	2		5161889	1					
ANR	5161957	ReturnStatement	return AVERROR_INVALIDDATA ;	35:8:481:507	5161889	1	True				
ANR	5161958	Identifier	AVERROR_INVALIDDATA		5161889	0					
ANR	5161959	ExpressionStatement	esc_count = src [ 0 ]	39:4:516:534	5161889	11	True				
ANR	5161960	AssignmentExpression	esc_count = src [ 0 ]		5161889	0		=			
ANR	5161961	Identifier	esc_count		5161889	0					
ANR	5161962	ArrayIndexing	src [ 0 ]		5161889	1					
ANR	5161963	Identifier	src		5161889	0					
ANR	5161964	PrimaryExpression	0		5161889	1					
ANR	5161965	IfStatement	if ( esc_count < 4 )		5161889	12					
ANR	5161966	Condition	esc_count < 4	41:8:545:557	5161889	0	True				
ANR	5161967	RelationalExpression	esc_count < 4		5161889	0		<			
ANR	5161968	Identifier	esc_count		5161889	0					
ANR	5161969	PrimaryExpression	4		5161889	1					
ANR	5161970	CompoundStatement		35:23:351:351	5161889	1					
ANR	5161971	ExpressionStatement	length = width * height	43:8:571:594	5161889	0	True				
ANR	5161972	AssignmentExpression	length = width * height		5161889	0		=			
ANR	5161973	Identifier	length		5161889	0					
ANR	5161974	MultiplicativeExpression	width * height		5161889	1		*			
ANR	5161975	Identifier	width		5161889	0					
ANR	5161976	Identifier	height		5161889	1					
ANR	5161977	IfStatement	if ( src_size < 5 )		5161889	1					
ANR	5161978	Condition	src_size < 5	45:11:608:619	5161889	0	True				
ANR	5161979	RelationalExpression	src_size < 5		5161889	0		<			
ANR	5161980	Identifier	src_size		5161889	0					
ANR	5161981	PrimaryExpression	5		5161889	1					
ANR	5161982	ReturnStatement	return AVERROR_INVALIDDATA ;	47:12:635:661	5161889	1	True				
ANR	5161983	Identifier	AVERROR_INVALIDDATA		5161889	0					
ANR	5161984	IfStatement	if ( esc_count && AV_RL32 ( src + 1 ) < length )		5161889	2					
ANR	5161985	Condition	esc_count && AV_RL32 ( src + 1 ) < length	49:12:676:713	5161889	0	True				
ANR	5161986	AndExpression	esc_count && AV_RL32 ( src + 1 ) < length		5161889	0		&&			
ANR	5161987	Identifier	esc_count		5161889	0					
ANR	5161988	RelationalExpression	AV_RL32 ( src + 1 ) < length		5161889	1		<			
ANR	5161989	CallExpression	AV_RL32 ( src + 1 )		5161889	0					
ANR	5161990	Callee	AV_RL32		5161889	0					
ANR	5161991	Identifier	AV_RL32		5161889	0					
ANR	5161992	ArgumentList	src + 1		5161889	1					
ANR	5161993	Argument	src + 1		5161889	0					
ANR	5161994	AdditiveExpression	src + 1		5161889	0		+			
ANR	5161995	Identifier	src		5161889	0					
ANR	5161996	PrimaryExpression	1		5161889	1					
ANR	5161997	Identifier	length		5161889	1					
ANR	5161998	CompoundStatement		43:52:507:507	5161889	1					
ANR	5161999	ExpressionStatement	length = AV_RL32 ( src + 1 )	51:12:731:756	5161889	0	True				
ANR	5162000	AssignmentExpression	length = AV_RL32 ( src + 1 )		5161889	0		=			
ANR	5162001	Identifier	length		5161889	0					
ANR	5162002	CallExpression	AV_RL32 ( src + 1 )		5161889	1					
ANR	5162003	Callee	AV_RL32		5161889	0					
ANR	5162004	Identifier	AV_RL32		5161889	0					
ANR	5162005	ArgumentList	src + 1		5161889	1					
ANR	5162006	Argument	src + 1		5161889	0					
ANR	5162007	AdditiveExpression	src + 1		5161889	0		+			
ANR	5162008	Identifier	src		5161889	0					
ANR	5162009	PrimaryExpression	1		5161889	1					
ANR	5162010	ExpressionStatement	offset += 4	53:12:771:782	5161889	1	True				
ANR	5162011	AssignmentExpression	offset += 4		5161889	0		+=			
ANR	5162012	Identifier	offset		5161889	0					
ANR	5162013	PrimaryExpression	4		5161889	1					
ANR	5162014	ExpressionStatement	"init_get_bits8 ( & gb , src + offset , src_size - offset )"	59:8:806:858	5161889	3	True				
ANR	5162015	CallExpression	"init_get_bits8 ( & gb , src + offset , src_size - offset )"		5161889	0					
ANR	5162016	Callee	init_get_bits8		5161889	0					
ANR	5162017	Identifier	init_get_bits8		5161889	0					
ANR	5162018	ArgumentList	& gb		5161889	1					
ANR	5162019	Argument	& gb		5161889	0					
ANR	5162020	UnaryOperationExpression	& gb		5161889	0					
ANR	5162021	UnaryOperator	&		5161889	0					
ANR	5162022	Identifier	gb		5161889	1					
ANR	5162023	Argument	src + offset		5161889	1					
ANR	5162024	AdditiveExpression	src + offset		5161889	0		+			
ANR	5162025	Identifier	src		5161889	0					
ANR	5162026	Identifier	offset		5161889	1					
ANR	5162027	Argument	src_size - offset		5161889	2					
ANR	5162028	AdditiveExpression	src_size - offset		5161889	0		-			
ANR	5162029	Identifier	src_size		5161889	0					
ANR	5162030	Identifier	offset		5161889	1					
ANR	5162031	IfStatement	"if ( lag_read_prob_header ( & rac , & gb ) < 0 )"		5161889	4					
ANR	5162032	Condition	"lag_read_prob_header ( & rac , & gb ) < 0"	63:12:875:909	5161889	0	True				
ANR	5162033	RelationalExpression	"lag_read_prob_header ( & rac , & gb ) < 0"		5161889	0		<			
ANR	5162034	CallExpression	"lag_read_prob_header ( & rac , & gb )"		5161889	0					
ANR	5162035	Callee	lag_read_prob_header		5161889	0					
ANR	5162036	Identifier	lag_read_prob_header		5161889	0					
ANR	5162037	ArgumentList	& rac		5161889	1					
ANR	5162038	Argument	& rac		5161889	0					
ANR	5162039	UnaryOperationExpression	& rac		5161889	0					
ANR	5162040	UnaryOperator	&		5161889	0					
ANR	5162041	Identifier	rac		5161889	1					
ANR	5162042	Argument	& gb		5161889	1					
ANR	5162043	UnaryOperationExpression	& gb		5161889	0					
ANR	5162044	UnaryOperator	&		5161889	0					
ANR	5162045	Identifier	gb		5161889	1					
ANR	5162046	PrimaryExpression	0		5161889	1					
ANR	5162047	ReturnStatement	return - 1 ;	65:12:925:934	5161889	1	True				
ANR	5162048	UnaryOperationExpression	- 1		5161889	0					
ANR	5162049	UnaryOperator	-		5161889	0					
ANR	5162050	PrimaryExpression	1		5161889	1					
ANR	5162051	ExpressionStatement	"ff_lag_rac_init ( & rac , & gb , length - stride )"	69:8:947:990	5161889	5	True				
ANR	5162052	CallExpression	"ff_lag_rac_init ( & rac , & gb , length - stride )"		5161889	0					
ANR	5162053	Callee	ff_lag_rac_init		5161889	0					
ANR	5162054	Identifier	ff_lag_rac_init		5161889	0					
ANR	5162055	ArgumentList	& rac		5161889	1					
ANR	5162056	Argument	& rac		5161889	0					
ANR	5162057	UnaryOperationExpression	& rac		5161889	0					
ANR	5162058	UnaryOperator	&		5161889	0					
ANR	5162059	Identifier	rac		5161889	1					
ANR	5162060	Argument	& gb		5161889	1					
ANR	5162061	UnaryOperationExpression	& gb		5161889	0					
ANR	5162062	UnaryOperator	&		5161889	0					
ANR	5162063	Identifier	gb		5161889	1					
ANR	5162064	Argument	length - stride		5161889	2					
ANR	5162065	AdditiveExpression	length - stride		5161889	0		-			
ANR	5162066	Identifier	length		5161889	0					
ANR	5162067	Identifier	stride		5161889	1					
ANR	5162068	ForStatement	for ( i = 0 ; i < height ; i ++ )		5161889	6					
ANR	5162069	ForInit	i = 0 ;	73:13:1008:1013	5161889	0	True				
ANR	5162070	AssignmentExpression	i = 0		5161889	0		=			
ANR	5162071	Identifier	i		5161889	0					
ANR	5162072	PrimaryExpression	0		5161889	1					
ANR	5162073	Condition	i < height	73:20:1015:1024	5161889	1	True				
ANR	5162074	RelationalExpression	i < height		5161889	0		<			
ANR	5162075	Identifier	i		5161889	0					
ANR	5162076	Identifier	height		5161889	1					
ANR	5162077	PostIncDecOperationExpression	i ++	73:32:1027:1029	5161889	2	True				
ANR	5162078	Identifier	i		5161889	0					
ANR	5162079	IncDec	++		5161889	1					
ANR	5162080	ExpressionStatement	"read += lag_decode_line ( l , & rac , dst + ( i * stride ) , width , stride , esc_count )"	75:12:1045:1160	5161889	3	True				
ANR	5162081	AssignmentExpression	"read += lag_decode_line ( l , & rac , dst + ( i * stride ) , width , stride , esc_count )"		5161889	0		+=			
ANR	5162082	Identifier	read		5161889	0					
ANR	5162083	CallExpression	"lag_decode_line ( l , & rac , dst + ( i * stride ) , width , stride , esc_count )"		5161889	1					
ANR	5162084	Callee	lag_decode_line		5161889	0					
ANR	5162085	Identifier	lag_decode_line		5161889	0					
ANR	5162086	ArgumentList	l		5161889	1					
ANR	5162087	Argument	l		5161889	0					
ANR	5162088	Identifier	l		5161889	0					
ANR	5162089	Argument	& rac		5161889	1					
ANR	5162090	UnaryOperationExpression	& rac		5161889	0					
ANR	5162091	UnaryOperator	&		5161889	0					
ANR	5162092	Identifier	rac		5161889	1					
ANR	5162093	Argument	dst + ( i * stride )		5161889	2					
ANR	5162094	AdditiveExpression	dst + ( i * stride )		5161889	0		+			
ANR	5162095	Identifier	dst		5161889	0					
ANR	5162096	MultiplicativeExpression	i * stride		5161889	1		*			
ANR	5162097	Identifier	i		5161889	0					
ANR	5162098	Identifier	stride		5161889	1					
ANR	5162099	Argument	width		5161889	3					
ANR	5162100	Identifier	width		5161889	0					
ANR	5162101	Argument	stride		5161889	4					
ANR	5162102	Identifier	stride		5161889	0					
ANR	5162103	Argument	esc_count		5161889	5					
ANR	5162104	Identifier	esc_count		5161889	0					
ANR	5162105	IfStatement	if ( read > length )		5161889	7					
ANR	5162106	Condition	read > length	81:12:1177:1189	5161889	0	True				
ANR	5162107	RelationalExpression	read > length		5161889	0		>			
ANR	5162108	Identifier	read		5161889	0					
ANR	5162109	Identifier	length		5161889	1					
ANR	5162110	ExpressionStatement	"av_log ( l -> avctx , AV_LOG_WARNING , ""Output more bytes than length (%d of %d)\\n"" , read , length )"	83:12:1205:1337	5161889	1	True				
ANR	5162111	CallExpression	"av_log ( l -> avctx , AV_LOG_WARNING , ""Output more bytes than length (%d of %d)\\n"" , read , length )"		5161889	0					
ANR	5162112	Callee	av_log		5161889	0					
ANR	5162113	Identifier	av_log		5161889	0					
ANR	5162114	ArgumentList	l -> avctx		5161889	1					
ANR	5162115	Argument	l -> avctx		5161889	0					
ANR	5162116	PtrMemberAccess	l -> avctx		5161889	0					
ANR	5162117	Identifier	l		5161889	0					
ANR	5162118	Identifier	avctx		5161889	1					
ANR	5162119	Argument	AV_LOG_WARNING		5161889	1					
ANR	5162120	Identifier	AV_LOG_WARNING		5161889	0					
ANR	5162121	Argument	"""Output more bytes than length (%d of %d)\\n"""		5161889	2					
ANR	5162122	PrimaryExpression	"""Output more bytes than length (%d of %d)\\n"""		5161889	0					
ANR	5162123	Argument	read		5161889	3					
ANR	5162124	Identifier	read		5161889	0					
ANR	5162125	Argument	length		5161889	4					
ANR	5162126	Identifier	length		5161889	0					
ANR	5162127	ElseStatement	else		5161889	0					
ANR	5162128	IfStatement	if ( esc_count < 8 )		5161889	0					
ANR	5162129	Condition	esc_count < 8	89:15:1355:1367	5161889	0	True				
ANR	5162130	RelationalExpression	esc_count < 8		5161889	0		<			
ANR	5162131	Identifier	esc_count		5161889	0					
ANR	5162132	PrimaryExpression	8		5161889	1					
ANR	5162133	CompoundStatement		83:30:1161:1161	5161889	1					
ANR	5162134	ExpressionStatement	esc_count -= 4	91:8:1381:1395	5161889	0	True				
ANR	5162135	AssignmentExpression	esc_count -= 4		5161889	0		-=			
ANR	5162136	Identifier	esc_count		5161889	0					
ANR	5162137	PrimaryExpression	4		5161889	1					
ANR	5162138	ExpressionStatement	src ++	93:8:1406:1412	5161889	1	True				
ANR	5162139	PostIncDecOperationExpression	src ++		5161889	0					
ANR	5162140	Identifier	src		5161889	0					
ANR	5162141	IncDec	++		5161889	1					
ANR	5162142	ExpressionStatement	src_size --	95:8:1423:1434	5161889	2	True				
ANR	5162143	PostIncDecOperationExpression	src_size --		5161889	0					
ANR	5162144	Identifier	src_size		5161889	0					
ANR	5162145	IncDec	--		5161889	1					
ANR	5162146	IfStatement	if ( esc_count > 0 )		5161889	3					
ANR	5162147	Condition	esc_count > 0	97:12:1449:1461	5161889	0	True				
ANR	5162148	RelationalExpression	esc_count > 0		5161889	0		>			
ANR	5162149	Identifier	esc_count		5161889	0					
ANR	5162150	PrimaryExpression	0		5161889	1					
ANR	5162151	CompoundStatement		91:27:1255:1255	5161889	1					
ANR	5162152	ForStatement	for ( i = 0 ; i < height ; i ++ )		5161889	0					
ANR	5162153	ForInit	i = 0 ;	101:17:1542:1547	5161889	0	True				
ANR	5162154	AssignmentExpression	i = 0		5161889	0		=			
ANR	5162155	Identifier	i		5161889	0					
ANR	5162156	PrimaryExpression	0		5161889	1					
ANR	5162157	Condition	i < height	101:24:1549:1558	5161889	1	True				
ANR	5162158	RelationalExpression	i < height		5161889	0		<			
ANR	5162159	Identifier	i		5161889	0					
ANR	5162160	Identifier	height		5161889	1					
ANR	5162161	PostIncDecOperationExpression	i ++	101:36:1561:1563	5161889	2	True				
ANR	5162162	Identifier	i		5161889	0					
ANR	5162163	IncDec	++		5161889	1					
ANR	5162164	CompoundStatement		97:16:1376:1517	5161889	3					
ANR	5162165	IdentifierDeclStatement	"int res = lag_decode_zero_run_line ( l , dst + ( i * stride ) , src , src_end , width , esc_count ) ;"	103:16:1585:1726	5161889	0	True				
ANR	5162166	IdentifierDecl	"res = lag_decode_zero_run_line ( l , dst + ( i * stride ) , src , src_end , width , esc_count )"		5161889	0					
ANR	5162167	IdentifierDeclType	int		5161889	0					
ANR	5162168	Identifier	res		5161889	1					
ANR	5162169	AssignmentExpression	"res = lag_decode_zero_run_line ( l , dst + ( i * stride ) , src , src_end , width , esc_count )"		5161889	2		=			
ANR	5162170	Identifier	res		5161889	0					
ANR	5162171	CallExpression	"lag_decode_zero_run_line ( l , dst + ( i * stride ) , src , src_end , width , esc_count )"		5161889	1					
ANR	5162172	Callee	lag_decode_zero_run_line		5161889	0					
ANR	5162173	Identifier	lag_decode_zero_run_line		5161889	0					
ANR	5162174	ArgumentList	l		5161889	1					
ANR	5162175	Argument	l		5161889	0					
ANR	5162176	Identifier	l		5161889	0					
ANR	5162177	Argument	dst + ( i * stride )		5161889	1					
ANR	5162178	AdditiveExpression	dst + ( i * stride )		5161889	0		+			
ANR	5162179	Identifier	dst		5161889	0					
ANR	5162180	MultiplicativeExpression	i * stride		5161889	1		*			
ANR	5162181	Identifier	i		5161889	0					
ANR	5162182	Identifier	stride		5161889	1					
ANR	5162183	Argument	src		5161889	2					
ANR	5162184	Identifier	src		5161889	0					
ANR	5162185	Argument	src_end		5161889	3					
ANR	5162186	Identifier	src_end		5161889	0					
ANR	5162187	Argument	width		5161889	4					
ANR	5162188	Identifier	width		5161889	0					
ANR	5162189	Argument	esc_count		5161889	5					
ANR	5162190	Identifier	esc_count		5161889	0					
ANR	5162191	IfStatement	if ( res < 0 )		5161889	1					
ANR	5162192	Condition	res < 0	107:20:1749:1755	5161889	0	True				
ANR	5162193	RelationalExpression	res < 0		5161889	0		<			
ANR	5162194	Identifier	res		5161889	0					
ANR	5162195	PrimaryExpression	0		5161889	1					
ANR	5162196	ReturnStatement	return res ;	109:20:1779:1789	5161889	1	True				
ANR	5162197	Identifier	res		5161889	0					
ANR	5162198	ExpressionStatement	src += res	111:16:1808:1818	5161889	2	True				
ANR	5162199	AssignmentExpression	src += res		5161889	0		+=			
ANR	5162200	Identifier	src		5161889	0					
ANR	5162201	Identifier	res		5161889	1					
ANR	5162202	ElseStatement	else		5161889	0					
ANR	5162203	CompoundStatement		109:15:1642:1642	5161889	0					
ANR	5162204	IfStatement	if ( src_size < width * height )		5161889	0					
ANR	5162205	Condition	src_size < width * height	117:16:1870:1894	5161889	0	True				
ANR	5162206	RelationalExpression	src_size < width * height		5161889	0		<			
ANR	5162207	Identifier	src_size		5161889	0					
ANR	5162208	MultiplicativeExpression	width * height		5161889	1		*			
ANR	5162209	Identifier	width		5161889	0					
ANR	5162210	Identifier	height		5161889	1					
ANR	5162211	ReturnStatement	return AVERROR_INVALIDDATA ;	119:16:1914:1940	5161889	1	True				
ANR	5162212	Identifier	AVERROR_INVALIDDATA		5161889	0					
ANR	5162213	ForStatement	for ( i = 0 ; i < height ; i ++ )		5161889	1					
ANR	5162214	ForInit	i = 0 ;	123:17:2033:2038	5161889	0	True				
ANR	5162215	AssignmentExpression	i = 0		5161889	0		=			
ANR	5162216	Identifier	i		5161889	0					
ANR	5162217	PrimaryExpression	0		5161889	1					
ANR	5162218	Condition	i < height	123:24:2040:2049	5161889	1	True				
ANR	5162219	RelationalExpression	i < height		5161889	0		<			
ANR	5162220	Identifier	i		5161889	0					
ANR	5162221	Identifier	height		5161889	1					
ANR	5162222	PostIncDecOperationExpression	i ++	123:36:2052:2054	5161889	2	True				
ANR	5162223	Identifier	i		5161889	0					
ANR	5162224	IncDec	++		5161889	1					
ANR	5162225	CompoundStatement		117:41:1848:1848	5161889	3					
ANR	5162226	ExpressionStatement	"memcpy ( dst + ( i * stride ) , src , width )"	125:16:2076:2114	5161889	0	True				
ANR	5162227	CallExpression	"memcpy ( dst + ( i * stride ) , src , width )"		5161889	0					
ANR	5162228	Callee	memcpy		5161889	0					
ANR	5162229	Identifier	memcpy		5161889	0					
ANR	5162230	ArgumentList	dst + ( i * stride )		5161889	1					
ANR	5162231	Argument	dst + ( i * stride )		5161889	0					
ANR	5162232	AdditiveExpression	dst + ( i * stride )		5161889	0		+			
ANR	5162233	Identifier	dst		5161889	0					
ANR	5162234	MultiplicativeExpression	i * stride		5161889	1		*			
ANR	5162235	Identifier	i		5161889	0					
ANR	5162236	Identifier	stride		5161889	1					
ANR	5162237	Argument	src		5161889	1					
ANR	5162238	Identifier	src		5161889	0					
ANR	5162239	Argument	width		5161889	2					
ANR	5162240	Identifier	width		5161889	0					
ANR	5162241	ExpressionStatement	src += width	127:16:2133:2145	5161889	1	True				
ANR	5162242	AssignmentExpression	src += width		5161889	0		+=			
ANR	5162243	Identifier	src		5161889	0					
ANR	5162244	Identifier	width		5161889	1					
ANR	5162245	ElseStatement	else		5161889	0					
ANR	5162246	IfStatement	if ( esc_count == 0xff )		5161889	0					
ANR	5162247	Condition	esc_count == 0xff	133:15:2189:2205	5161889	0	True				
ANR	5162248	EqualityExpression	esc_count == 0xff		5161889	0		==			
ANR	5162249	Identifier	esc_count		5161889	0					
ANR	5162250	PrimaryExpression	0xff		5161889	1					
ANR	5162251	CompoundStatement		127:34:1999:1999	5161889	1					
ANR	5162252	ForStatement	for ( i = 0 ; i < height ; i ++ )		5161889	0					
ANR	5162253	ForInit	i = 0 ;	137:13:2275:2280	5161889	0	True				
ANR	5162254	AssignmentExpression	i = 0		5161889	0		=			
ANR	5162255	Identifier	i		5161889	0					
ANR	5162256	PrimaryExpression	0		5161889	1					
ANR	5162257	Condition	i < height	137:20:2282:2291	5161889	1	True				
ANR	5162258	RelationalExpression	i < height		5161889	0		<			
ANR	5162259	Identifier	i		5161889	0					
ANR	5162260	Identifier	height		5161889	1					
ANR	5162261	PostIncDecOperationExpression	i ++	137:32:2294:2296	5161889	2	True				
ANR	5162262	Identifier	i		5161889	0					
ANR	5162263	IncDec	++		5161889	1					
ANR	5162264	ExpressionStatement	"memset ( dst + i * stride , src [ 1 ] , width )"	139:12:2312:2351	5161889	3	True				
ANR	5162265	CallExpression	"memset ( dst + i * stride , src [ 1 ] , width )"		5161889	0					
ANR	5162266	Callee	memset		5161889	0					
ANR	5162267	Identifier	memset		5161889	0					
ANR	5162268	ArgumentList	dst + i * stride		5161889	1					
ANR	5162269	Argument	dst + i * stride		5161889	0					
ANR	5162270	AdditiveExpression	dst + i * stride		5161889	0		+			
ANR	5162271	Identifier	dst		5161889	0					
ANR	5162272	MultiplicativeExpression	i * stride		5161889	1		*			
ANR	5162273	Identifier	i		5161889	0					
ANR	5162274	Identifier	stride		5161889	1					
ANR	5162275	Argument	src [ 1 ]		5161889	1					
ANR	5162276	ArrayIndexing	src [ 1 ]		5161889	0					
ANR	5162277	Identifier	src		5161889	0					
ANR	5162278	PrimaryExpression	1		5161889	1					
ANR	5162279	Argument	width		5161889	2					
ANR	5162280	Identifier	width		5161889	0					
ANR	5162281	ReturnStatement	return 0 ;	147:8:2528:2536	5161889	1	True				
ANR	5162282	PrimaryExpression	0		5161889	0					
ANR	5162283	ElseStatement	else		5161889	0					
ANR	5162284	CompoundStatement		143:11:2341:2341	5161889	0					
ANR	5162285	ExpressionStatement	"av_log ( l -> avctx , AV_LOG_ERROR , ""Invalid zero run escape code! (%#x)\\n"" , esc_count )"	151:8:2561:2659	5161889	0	True				
ANR	5162286	CallExpression	"av_log ( l -> avctx , AV_LOG_ERROR , ""Invalid zero run escape code! (%#x)\\n"" , esc_count )"		5161889	0					
ANR	5162287	Callee	av_log		5161889	0					
ANR	5162288	Identifier	av_log		5161889	0					
ANR	5162289	ArgumentList	l -> avctx		5161889	1					
ANR	5162290	Argument	l -> avctx		5161889	0					
ANR	5162291	PtrMemberAccess	l -> avctx		5161889	0					
ANR	5162292	Identifier	l		5161889	0					
ANR	5162293	Identifier	avctx		5161889	1					
ANR	5162294	Argument	AV_LOG_ERROR		5161889	1					
ANR	5162295	Identifier	AV_LOG_ERROR		5161889	0					
ANR	5162296	Argument	"""Invalid zero run escape code! (%#x)\\n"""		5161889	2					
ANR	5162297	PrimaryExpression	"""Invalid zero run escape code! (%#x)\\n"""		5161889	0					
ANR	5162298	Argument	esc_count		5161889	3					
ANR	5162299	Identifier	esc_count		5161889	0					
ANR	5162300	ReturnStatement	return - 1 ;	155:8:2670:2679	5161889	1	True				
ANR	5162301	UnaryOperationExpression	- 1		5161889	0					
ANR	5162302	UnaryOperator	-		5161889	0					
ANR	5162303	PrimaryExpression	1		5161889	1					
ANR	5162304	IfStatement	if ( l -> avctx -> pix_fmt != AV_PIX_FMT_YUV422P )		5161889	13					
ANR	5162305	Condition	l -> avctx -> pix_fmt != AV_PIX_FMT_YUV422P	161:8:2699:2737	5161889	0	True				
ANR	5162306	EqualityExpression	l -> avctx -> pix_fmt != AV_PIX_FMT_YUV422P		5161889	0		!=			
ANR	5162307	PtrMemberAccess	l -> avctx -> pix_fmt		5161889	0					
ANR	5162308	PtrMemberAccess	l -> avctx		5161889	0					
ANR	5162309	Identifier	l		5161889	0					
ANR	5162310	Identifier	avctx		5161889	1					
ANR	5162311	Identifier	pix_fmt		5161889	1					
ANR	5162312	Identifier	AV_PIX_FMT_YUV422P		5161889	1					
ANR	5162313	CompoundStatement		155:49:2531:2531	5161889	1					
ANR	5162314	ForStatement	for ( i = 0 ; i < height ; i ++ )		5161889	0					
ANR	5162315	ForInit	i = 0 ;	163:13:2756:2761	5161889	0	True				
ANR	5162316	AssignmentExpression	i = 0		5161889	0		=			
ANR	5162317	Identifier	i		5161889	0					
ANR	5162318	PrimaryExpression	0		5161889	1					
ANR	5162319	Condition	i < height	163:20:2763:2772	5161889	1	True				
ANR	5162320	RelationalExpression	i < height		5161889	0		<			
ANR	5162321	Identifier	i		5161889	0					
ANR	5162322	Identifier	height		5161889	1					
ANR	5162323	PostIncDecOperationExpression	i ++	163:32:2775:2777	5161889	2	True				
ANR	5162324	Identifier	i		5161889	0					
ANR	5162325	IncDec	++		5161889	1					
ANR	5162326	CompoundStatement		157:37:2571:2571	5161889	3					
ANR	5162327	ExpressionStatement	"lag_pred_line ( l , dst , width , stride , i )"	165:12:2795:2834	5161889	0	True				
ANR	5162328	CallExpression	"lag_pred_line ( l , dst , width , stride , i )"		5161889	0					
ANR	5162329	Callee	lag_pred_line		5161889	0					
ANR	5162330	Identifier	lag_pred_line		5161889	0					
ANR	5162331	ArgumentList	l		5161889	1					
ANR	5162332	Argument	l		5161889	0					
ANR	5162333	Identifier	l		5161889	0					
ANR	5162334	Argument	dst		5161889	1					
ANR	5162335	Identifier	dst		5161889	0					
ANR	5162336	Argument	width		5161889	2					
ANR	5162337	Identifier	width		5161889	0					
ANR	5162338	Argument	stride		5161889	3					
ANR	5162339	Identifier	stride		5161889	0					
ANR	5162340	Argument	i		5161889	4					
ANR	5162341	Identifier	i		5161889	0					
ANR	5162342	ExpressionStatement	dst += stride	167:12:2849:2862	5161889	1	True				
ANR	5162343	AssignmentExpression	dst += stride		5161889	0		+=			
ANR	5162344	Identifier	dst		5161889	0					
ANR	5162345	Identifier	stride		5161889	1					
ANR	5162346	ElseStatement	else		5161889	0					
ANR	5162347	CompoundStatement		165:11:2678:2678	5161889	0					
ANR	5162348	ForStatement	for ( i = 0 ; i < height ; i ++ )		5161889	0					
ANR	5162349	ForInit	i = 0 ;	173:13:2903:2908	5161889	0	True				
ANR	5162350	AssignmentExpression	i = 0		5161889	0		=			
ANR	5162351	Identifier	i		5161889	0					
ANR	5162352	PrimaryExpression	0		5161889	1					
ANR	5162353	Condition	i < height	173:20:2910:2919	5161889	1	True				
ANR	5162354	RelationalExpression	i < height		5161889	0		<			
ANR	5162355	Identifier	i		5161889	0					
ANR	5162356	Identifier	height		5161889	1					
ANR	5162357	PostIncDecOperationExpression	i ++	173:32:2922:2924	5161889	2	True				
ANR	5162358	Identifier	i		5161889	0					
ANR	5162359	IncDec	++		5161889	1					
ANR	5162360	CompoundStatement		167:37:2718:2718	5161889	3					
ANR	5162361	ExpressionStatement	"lag_pred_line_yuy2 ( l , dst , width , stride , i , width == l -> avctx -> width )"	175:12:2942:3044	5161889	0	True				
ANR	5162362	CallExpression	"lag_pred_line_yuy2 ( l , dst , width , stride , i , width == l -> avctx -> width )"		5161889	0					
ANR	5162363	Callee	lag_pred_line_yuy2		5161889	0					
ANR	5162364	Identifier	lag_pred_line_yuy2		5161889	0					
ANR	5162365	ArgumentList	l		5161889	1					
ANR	5162366	Argument	l		5161889	0					
ANR	5162367	Identifier	l		5161889	0					
ANR	5162368	Argument	dst		5161889	1					
ANR	5162369	Identifier	dst		5161889	0					
ANR	5162370	Argument	width		5161889	2					
ANR	5162371	Identifier	width		5161889	0					
ANR	5162372	Argument	stride		5161889	3					
ANR	5162373	Identifier	stride		5161889	0					
ANR	5162374	Argument	i		5161889	4					
ANR	5162375	Identifier	i		5161889	0					
ANR	5162376	Argument	width == l -> avctx -> width		5161889	5					
ANR	5162377	EqualityExpression	width == l -> avctx -> width		5161889	0		==			
ANR	5162378	Identifier	width		5161889	0					
ANR	5162379	PtrMemberAccess	l -> avctx -> width		5161889	1					
ANR	5162380	PtrMemberAccess	l -> avctx		5161889	0					
ANR	5162381	Identifier	l		5161889	0					
ANR	5162382	Identifier	avctx		5161889	1					
ANR	5162383	Identifier	width		5161889	1					
ANR	5162384	ExpressionStatement	dst += stride	179:12:3059:3072	5161889	1	True				
ANR	5162385	AssignmentExpression	dst += stride		5161889	0		+=			
ANR	5162386	Identifier	dst		5161889	0					
ANR	5162387	Identifier	stride		5161889	1					
ANR	5162388	ReturnStatement	return 0 ;	187:4:3099:3107	5161889	14	True				
ANR	5162389	PrimaryExpression	0		5161889	0					
ANR	5162390	ReturnType	static int		5161889	1					
ANR	5162391	Identifier	lag_decode_arith_plane		5161889	2					
ANR	5162392	ParameterList	"LagarithContext * l , uint8_t * dst , int width , int height , int stride , const uint8_t * src , int src_size"		5161889	3					
ANR	5162393	Parameter	LagarithContext * l	1:34:34:51	5161889	0	True				
ANR	5162394	ParameterType	LagarithContext *		5161889	0					
ANR	5162395	Identifier	l		5161889	1					
ANR	5162396	Parameter	uint8_t * dst	1:54:54:65	5161889	1	True				
ANR	5162397	ParameterType	uint8_t *		5161889	0					
ANR	5162398	Identifier	dst		5161889	1					
ANR	5162399	Parameter	int width	3:34:103:111	5161889	2	True				
ANR	5162400	ParameterType	int		5161889	0					
ANR	5162401	Identifier	width		5161889	1					
ANR	5162402	Parameter	int height	3:45:114:123	5161889	3	True				
ANR	5162403	ParameterType	int		5161889	0					
ANR	5162404	Identifier	height		5161889	1					
ANR	5162405	Parameter	int stride	3:57:126:135	5161889	4	True				
ANR	5162406	ParameterType	int		5161889	0					
ANR	5162407	Identifier	stride		5161889	1					
ANR	5162408	Parameter	const uint8_t * src	5:34:173:190	5161889	5	True				
ANR	5162409	ParameterType	const uint8_t *		5161889	0					
ANR	5162410	Identifier	src		5161889	1					
ANR	5162411	Parameter	int src_size	5:54:193:204	5161889	6	True				
ANR	5162412	ParameterType	int		5161889	0					
ANR	5162413	Identifier	src_size		5161889	1					
ANR	5162414	CFGEntryNode	ENTRY		5161889		True				
ANR	5162415	CFGExitNode	EXIT		5161889		True				
ANR	5162416	Symbol	dst		5161889						
ANR	5162417	Symbol	& gb		5161889						
ANR	5162418	Symbol	lag_decode_zero_run_line		5161889						
ANR	5162419	Symbol	* l -> avctx		5161889						
ANR	5162420	Symbol	stride		5161889						
ANR	5162421	Symbol	* src		5161889						
ANR	5162422	Symbol	src_end		5161889						
ANR	5162423	Symbol	rac		5161889						
ANR	5162424	Symbol	lag_read_prob_header		5161889						
ANR	5162425	Symbol	l -> avctx -> pix_fmt		5161889						
ANR	5162426	Symbol	gb		5161889						
ANR	5162427	Symbol	rac . avctx		5161889						
ANR	5162428	Symbol	l -> avctx		5161889						
ANR	5162429	Symbol	height		5161889						
ANR	5162430	Symbol	* * l		5161889						
ANR	5162431	Symbol	res		5161889						
ANR	5162432	Symbol	read		5161889						
ANR	5162433	Symbol	offset		5161889						
ANR	5162434	Symbol	AV_LOG_ERROR		5161889						
ANR	5162435	Symbol	src		5161889						
ANR	5162436	Symbol	lag_decode_line		5161889						
ANR	5162437	Symbol	length		5161889						
ANR	5162438	Symbol	l -> avctx -> width		5161889						
ANR	5162439	Symbol	i		5161889						
ANR	5162440	Symbol	AV_PIX_FMT_YUV422P		5161889						
ANR	5162441	Symbol	l		5161889						
ANR	5162442	Symbol	src_size		5161889						
ANR	5162443	Symbol	l -> zeros		5161889						
ANR	5162444	Symbol	AV_RL32		5161889						
ANR	5162445	Symbol	esc_count		5161889						
ANR	5162446	Symbol	* l		5161889						
ANR	5162447	Symbol	width		5161889						
ANR	5162448	Symbol	AVERROR_INVALIDDATA		5161889						
ANR	5162449	Symbol	AV_LOG_WARNING		5161889						
ANR	5162450	Symbol	& rac		5161889						
