command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6305460	File	/home/p4ultr4n/workplace/ReVeal/raw_code/parse_bintree_0.c								
ANR	6305461	Function	parse_bintree	1:0:0:3325							
ANR	6305462	FunctionDef	"parse_bintree (Indeo3DecodeContext * ctx , AVCodecContext * avctx , Plane * plane , int code , Cell * ref_cell , const int depth , const int strip_width)"		6305461	0					
ANR	6305463	CompoundStatement		7:0:207:3325	6305461	0					
ANR	6305464	IdentifierDeclStatement	Cell curr_cell ;	9:4:214:231	6305461	0	True				
ANR	6305465	IdentifierDecl	curr_cell		6305461	0					
ANR	6305466	IdentifierDeclType	Cell		6305461	0					
ANR	6305467	Identifier	curr_cell		6305461	1					
ANR	6305468	IdentifierDeclStatement	int bytes_used ;	11:4:238:256	6305461	1	True				
ANR	6305469	IdentifierDecl	bytes_used		6305461	0					
ANR	6305470	IdentifierDeclType	int		6305461	0					
ANR	6305471	Identifier	bytes_used		6305461	1					
ANR	6305472	IfStatement	if ( depth <= 0 )		6305461	2					
ANR	6305473	Condition	depth <= 0	15:8:269:278	6305461	0	True				
ANR	6305474	RelationalExpression	depth <= 0		6305461	0		<=			
ANR	6305475	Identifier	depth		6305461	0					
ANR	6305476	PrimaryExpression	0		6305461	1					
ANR	6305477	CompoundStatement		9:20:73:73	6305461	1					
ANR	6305478	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Stack overflow (corrupted binary tree)!\\n"" )"	17:8:292:364	6305461	0	True				
ANR	6305479	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Stack overflow (corrupted binary tree)!\\n"" )"		6305461	0					
ANR	6305480	Callee	av_log		6305461	0					
ANR	6305481	Identifier	av_log		6305461	0					
ANR	6305482	ArgumentList	avctx		6305461	1					
ANR	6305483	Argument	avctx		6305461	0					
ANR	6305484	Identifier	avctx		6305461	0					
ANR	6305485	Argument	AV_LOG_ERROR		6305461	1					
ANR	6305486	Identifier	AV_LOG_ERROR		6305461	0					
ANR	6305487	Argument	"""Stack overflow (corrupted binary tree)!\\n"""		6305461	2					
ANR	6305488	PrimaryExpression	"""Stack overflow (corrupted binary tree)!\\n"""		6305461	0					
ANR	6305489	ReturnStatement	return AVERROR_INVALIDDATA ;	19:8:375:401	6305461	1	True				
ANR	6305490	Identifier	AVERROR_INVALIDDATA		6305461	0					
ANR	6305491	ExpressionStatement	curr_cell = * ref_cell	25:4:437:458	6305461	3	True				
ANR	6305492	AssignmentExpression	curr_cell = * ref_cell		6305461	0		=			
ANR	6305493	Identifier	curr_cell		6305461	0					
ANR	6305494	UnaryOperationExpression	* ref_cell		6305461	1					
ANR	6305495	UnaryOperator	*		6305461	0					
ANR	6305496	Identifier	ref_cell		6305461	1					
ANR	6305497	IfStatement	if ( code == H_SPLIT )		6305461	4					
ANR	6305498	Condition	code == H_SPLIT	27:8:490:504	6305461	0	True				
ANR	6305499	EqualityExpression	code == H_SPLIT		6305461	0		==			
ANR	6305500	Identifier	code		6305461	0					
ANR	6305501	Identifier	H_SPLIT		6305461	1					
ANR	6305502	CompoundStatement		21:25:299:299	6305461	1					
ANR	6305503	ExpressionStatement	"SPLIT_CELL ( ref_cell -> height , curr_cell . height )"	29:8:518:564	6305461	0	True				
ANR	6305504	CallExpression	"SPLIT_CELL ( ref_cell -> height , curr_cell . height )"		6305461	0					
ANR	6305505	Callee	SPLIT_CELL		6305461	0					
ANR	6305506	Identifier	SPLIT_CELL		6305461	0					
ANR	6305507	ArgumentList	ref_cell -> height		6305461	1					
ANR	6305508	Argument	ref_cell -> height		6305461	0					
ANR	6305509	PtrMemberAccess	ref_cell -> height		6305461	0					
ANR	6305510	Identifier	ref_cell		6305461	0					
ANR	6305511	Identifier	height		6305461	1					
ANR	6305512	Argument	curr_cell . height		6305461	1					
ANR	6305513	MemberAccess	curr_cell . height		6305461	0					
ANR	6305514	Identifier	curr_cell		6305461	0					
ANR	6305515	Identifier	height		6305461	1					
ANR	6305516	ExpressionStatement	ref_cell -> ypos += curr_cell . height	31:8:575:611	6305461	1	True				
ANR	6305517	AssignmentExpression	ref_cell -> ypos += curr_cell . height		6305461	0		+=			
ANR	6305518	PtrMemberAccess	ref_cell -> ypos		6305461	0					
ANR	6305519	Identifier	ref_cell		6305461	0					
ANR	6305520	Identifier	ypos		6305461	1					
ANR	6305521	MemberAccess	curr_cell . height		6305461	1					
ANR	6305522	Identifier	curr_cell		6305461	0					
ANR	6305523	Identifier	height		6305461	1					
ANR	6305524	ExpressionStatement	ref_cell -> height -= curr_cell . height	33:8:622:658	6305461	2	True				
ANR	6305525	AssignmentExpression	ref_cell -> height -= curr_cell . height		6305461	0		-=			
ANR	6305526	PtrMemberAccess	ref_cell -> height		6305461	0					
ANR	6305527	Identifier	ref_cell		6305461	0					
ANR	6305528	Identifier	height		6305461	1					
ANR	6305529	MemberAccess	curr_cell . height		6305461	1					
ANR	6305530	Identifier	curr_cell		6305461	0					
ANR	6305531	Identifier	height		6305461	1					
ANR	6305532	ElseStatement	else		6305461	0					
ANR	6305533	IfStatement	if ( code == V_SPLIT )		6305461	0					
ANR	6305534	Condition	code == V_SPLIT	35:15:676:690	6305461	0	True				
ANR	6305535	EqualityExpression	code == V_SPLIT		6305461	0		==			
ANR	6305536	Identifier	code		6305461	0					
ANR	6305537	Identifier	V_SPLIT		6305461	1					
ANR	6305538	CompoundStatement		29:32:485:485	6305461	1					
ANR	6305539	IfStatement	if ( curr_cell . width > strip_width )		6305461	0					
ANR	6305540	Condition	curr_cell . width > strip_width	37:12:708:736	6305461	0	True				
ANR	6305541	RelationalExpression	curr_cell . width > strip_width		6305461	0		>			
ANR	6305542	MemberAccess	curr_cell . width		6305461	0					
ANR	6305543	Identifier	curr_cell		6305461	0					
ANR	6305544	Identifier	width		6305461	1					
ANR	6305545	Identifier	strip_width		6305461	1					
ANR	6305546	CompoundStatement		31:43:531:531	6305461	1					
ANR	6305547	ExpressionStatement	curr_cell . width = ( curr_cell . width <= ( strip_width << 1 ) ? 1 : 2 ) * strip_width	41:12:785:864	6305461	0	True				
ANR	6305548	AssignmentExpression	curr_cell . width = ( curr_cell . width <= ( strip_width << 1 ) ? 1 : 2 ) * strip_width		6305461	0		=			
ANR	6305549	MemberAccess	curr_cell . width		6305461	0					
ANR	6305550	Identifier	curr_cell		6305461	0					
ANR	6305551	Identifier	width		6305461	1					
ANR	6305552	MultiplicativeExpression	( curr_cell . width <= ( strip_width << 1 ) ? 1 : 2 ) * strip_width		6305461	1		*			
ANR	6305553	ConditionalExpression	curr_cell . width <= ( strip_width << 1 ) ? 1 : 2		6305461	0					
ANR	6305554	Condition	curr_cell . width <= ( strip_width << 1 )		6305461	0					
ANR	6305555	RelationalExpression	curr_cell . width <= ( strip_width << 1 )		6305461	0		<=			
ANR	6305556	MemberAccess	curr_cell . width		6305461	0					
ANR	6305557	Identifier	curr_cell		6305461	0					
ANR	6305558	Identifier	width		6305461	1					
ANR	6305559	ShiftExpression	strip_width << 1		6305461	1		<<			
ANR	6305560	Identifier	strip_width		6305461	0					
ANR	6305561	PrimaryExpression	1		6305461	1					
ANR	6305562	PrimaryExpression	1		6305461	1					
ANR	6305563	PrimaryExpression	2		6305461	2					
ANR	6305564	Identifier	strip_width		6305461	1					
ANR	6305565	ElseStatement	else		6305461	0					
ANR	6305566	ExpressionStatement	"SPLIT_CELL ( ref_cell -> width , curr_cell . width )"	45:12:895:939	6305461	0	True				
ANR	6305567	CallExpression	"SPLIT_CELL ( ref_cell -> width , curr_cell . width )"		6305461	0					
ANR	6305568	Callee	SPLIT_CELL		6305461	0					
ANR	6305569	Identifier	SPLIT_CELL		6305461	0					
ANR	6305570	ArgumentList	ref_cell -> width		6305461	1					
ANR	6305571	Argument	ref_cell -> width		6305461	0					
ANR	6305572	PtrMemberAccess	ref_cell -> width		6305461	0					
ANR	6305573	Identifier	ref_cell		6305461	0					
ANR	6305574	Identifier	width		6305461	1					
ANR	6305575	Argument	curr_cell . width		6305461	1					
ANR	6305576	MemberAccess	curr_cell . width		6305461	0					
ANR	6305577	Identifier	curr_cell		6305461	0					
ANR	6305578	Identifier	width		6305461	1					
ANR	6305579	ExpressionStatement	ref_cell -> xpos += curr_cell . width	47:8:950:984	6305461	1	True				
ANR	6305580	AssignmentExpression	ref_cell -> xpos += curr_cell . width		6305461	0		+=			
ANR	6305581	PtrMemberAccess	ref_cell -> xpos		6305461	0					
ANR	6305582	Identifier	ref_cell		6305461	0					
ANR	6305583	Identifier	xpos		6305461	1					
ANR	6305584	MemberAccess	curr_cell . width		6305461	1					
ANR	6305585	Identifier	curr_cell		6305461	0					
ANR	6305586	Identifier	width		6305461	1					
ANR	6305587	ExpressionStatement	ref_cell -> width -= curr_cell . width	49:8:995:1029	6305461	2	True				
ANR	6305588	AssignmentExpression	ref_cell -> width -= curr_cell . width		6305461	0		-=			
ANR	6305589	PtrMemberAccess	ref_cell -> width		6305461	0					
ANR	6305590	Identifier	ref_cell		6305461	0					
ANR	6305591	Identifier	width		6305461	1					
ANR	6305592	MemberAccess	curr_cell . width		6305461	1					
ANR	6305593	Identifier	curr_cell		6305461	0					
ANR	6305594	Identifier	width		6305461	1					
ANR	6305595	WhileStatement	while ( 1 )		6305461	5					
ANR	6305596	Condition	1	55:11:1052:1052	6305461	0	True				
ANR	6305597	PrimaryExpression	1		6305461	0					
ANR	6305598	CompoundStatement		49:14:847:847	6305461	1					
ANR	6305599	ExpressionStatement	RESYNC_BITSTREAM	57:8:1090:1106	6305461	0	True				
ANR	6305600	Identifier	RESYNC_BITSTREAM		6305461	0					
ANR	6305601	SwitchStatement	"switch ( code = get_bits ( & ctx -> gb , 2 ) )"		6305461	1					
ANR	6305602	Condition	"code = get_bits ( & ctx -> gb , 2 )"	59:16:1125:1152	6305461	0	True				
ANR	6305603	AssignmentExpression	"code = get_bits ( & ctx -> gb , 2 )"		6305461	0		=			
ANR	6305604	Identifier	code		6305461	0					
ANR	6305605	CallExpression	"get_bits ( & ctx -> gb , 2 )"		6305461	1					
ANR	6305606	Callee	get_bits		6305461	0					
ANR	6305607	Identifier	get_bits		6305461	0					
ANR	6305608	ArgumentList	& ctx -> gb		6305461	1					
ANR	6305609	Argument	& ctx -> gb		6305461	0					
ANR	6305610	UnaryOperationExpression	& ctx -> gb		6305461	0					
ANR	6305611	UnaryOperator	&		6305461	0					
ANR	6305612	PtrMemberAccess	ctx -> gb		6305461	1					
ANR	6305613	Identifier	ctx		6305461	0					
ANR	6305614	Identifier	gb		6305461	1					
ANR	6305615	Argument	2		6305461	1					
ANR	6305616	PrimaryExpression	2		6305461	0					
ANR	6305617	CompoundStatement		53:46:947:947	6305461	1					
ANR	6305618	Label	case H_SPLIT :	61:8:1166:1178	6305461	0	True				
ANR	6305619	Identifier	H_SPLIT		6305461	0					
ANR	6305620	Label	case V_SPLIT :	63:8:1189:1201	6305461	1	True				
ANR	6305621	Identifier	V_SPLIT		6305461	0					
ANR	6305622	IfStatement	"if ( parse_bintree ( ctx , avctx , plane , code , & curr_cell , depth - 1 , strip_width ) )"		6305461	2					
ANR	6305623	Condition	"parse_bintree ( ctx , avctx , plane , code , & curr_cell , depth - 1 , strip_width )"	65:16:1220:1293	6305461	0	True				
ANR	6305624	CallExpression	"parse_bintree ( ctx , avctx , plane , code , & curr_cell , depth - 1 , strip_width )"		6305461	0					
ANR	6305625	Callee	parse_bintree		6305461	0					
ANR	6305626	Identifier	parse_bintree		6305461	0					
ANR	6305627	ArgumentList	ctx		6305461	1					
ANR	6305628	Argument	ctx		6305461	0					
ANR	6305629	Identifier	ctx		6305461	0					
ANR	6305630	Argument	avctx		6305461	1					
ANR	6305631	Identifier	avctx		6305461	0					
ANR	6305632	Argument	plane		6305461	2					
ANR	6305633	Identifier	plane		6305461	0					
ANR	6305634	Argument	code		6305461	3					
ANR	6305635	Identifier	code		6305461	0					
ANR	6305636	Argument	& curr_cell		6305461	4					
ANR	6305637	UnaryOperationExpression	& curr_cell		6305461	0					
ANR	6305638	UnaryOperator	&		6305461	0					
ANR	6305639	Identifier	curr_cell		6305461	1					
ANR	6305640	Argument	depth - 1		6305461	5					
ANR	6305641	AdditiveExpression	depth - 1		6305461	0		-			
ANR	6305642	Identifier	depth		6305461	0					
ANR	6305643	PrimaryExpression	1		6305461	1					
ANR	6305644	Argument	strip_width		6305461	6					
ANR	6305645	Identifier	strip_width		6305461	0					
ANR	6305646	ReturnStatement	return AVERROR_INVALIDDATA ;	67:16:1313:1339	6305461	1	True				
ANR	6305647	Identifier	AVERROR_INVALIDDATA		6305461	0					
ANR	6305648	BreakStatement	break ;	69:12:1354:1359	6305461	3	True				
ANR	6305649	Label	case INTRA_NULL :	71:8:1370:1385	6305461	4	True				
ANR	6305650	Identifier	INTRA_NULL		6305461	0					
ANR	6305651	IfStatement	if ( ! curr_cell . tree )		6305461	5					
ANR	6305652	Condition	! curr_cell . tree	73:16:1404:1418	6305461	0	True				
ANR	6305653	UnaryOperationExpression	! curr_cell . tree		6305461	0					
ANR	6305654	UnaryOperator	!		6305461	0					
ANR	6305655	MemberAccess	curr_cell . tree		6305461	1					
ANR	6305656	Identifier	curr_cell		6305461	0					
ANR	6305657	Identifier	tree		6305461	1					
ANR	6305658	CompoundStatement		67:33:1213:1213	6305461	1					
ANR	6305659	ExpressionStatement	curr_cell . mv_ptr = 0	75:16:1465:1485	6305461	0	True				
ANR	6305660	AssignmentExpression	curr_cell . mv_ptr = 0		6305461	0		=			
ANR	6305661	MemberAccess	curr_cell . mv_ptr		6305461	0					
ANR	6305662	Identifier	curr_cell		6305461	0					
ANR	6305663	Identifier	mv_ptr		6305461	1					
ANR	6305664	PrimaryExpression	0		6305461	1					
ANR	6305665	ExpressionStatement	curr_cell . tree = 1	77:16:1542:1562	6305461	1	True				
ANR	6305666	AssignmentExpression	curr_cell . tree = 1		6305461	0		=			
ANR	6305667	MemberAccess	curr_cell . tree		6305461	0					
ANR	6305668	Identifier	curr_cell		6305461	0					
ANR	6305669	Identifier	tree		6305461	1					
ANR	6305670	PrimaryExpression	1		6305461	1					
ANR	6305671	ElseStatement	else		6305461	0					
ANR	6305672	CompoundStatement		93:16:1842:1903	6305461	0					
ANR	6305673	ExpressionStatement	RESYNC_BITSTREAM	81:16:1651:1667	6305461	0	True				
ANR	6305674	Identifier	RESYNC_BITSTREAM		6305461	0					
ANR	6305675	ExpressionStatement	"code = get_bits ( & ctx -> gb , 2 )"	83:16:1686:1714	6305461	1	True				
ANR	6305676	AssignmentExpression	"code = get_bits ( & ctx -> gb , 2 )"		6305461	0		=			
ANR	6305677	Identifier	code		6305461	0					
ANR	6305678	CallExpression	"get_bits ( & ctx -> gb , 2 )"		6305461	1					
ANR	6305679	Callee	get_bits		6305461	0					
ANR	6305680	Identifier	get_bits		6305461	0					
ANR	6305681	ArgumentList	& ctx -> gb		6305461	1					
ANR	6305682	Argument	& ctx -> gb		6305461	0					
ANR	6305683	UnaryOperationExpression	& ctx -> gb		6305461	0					
ANR	6305684	UnaryOperator	&		6305461	0					
ANR	6305685	PtrMemberAccess	ctx -> gb		6305461	1					
ANR	6305686	Identifier	ctx		6305461	0					
ANR	6305687	Identifier	gb		6305461	1					
ANR	6305688	Argument	2		6305461	1					
ANR	6305689	PrimaryExpression	2		6305461	0					
ANR	6305690	IfStatement	if ( code >= 2 )		6305461	2					
ANR	6305691	Condition	code >= 2	85:20:1737:1745	6305461	0	True				
ANR	6305692	RelationalExpression	code >= 2		6305461	0		>=			
ANR	6305693	Identifier	code		6305461	0					
ANR	6305694	PrimaryExpression	2		6305461	1					
ANR	6305695	CompoundStatement		79:31:1540:1540	6305461	1					
ANR	6305696	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Invalid VQ_NULL code: %d\\n"" , code )"	87:20:1771:1834	6305461	0	True				
ANR	6305697	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Invalid VQ_NULL code: %d\\n"" , code )"		6305461	0					
ANR	6305698	Callee	av_log		6305461	0					
ANR	6305699	Identifier	av_log		6305461	0					
ANR	6305700	ArgumentList	avctx		6305461	1					
ANR	6305701	Argument	avctx		6305461	0					
ANR	6305702	Identifier	avctx		6305461	0					
ANR	6305703	Argument	AV_LOG_ERROR		6305461	1					
ANR	6305704	Identifier	AV_LOG_ERROR		6305461	0					
ANR	6305705	Argument	"""Invalid VQ_NULL code: %d\\n"""		6305461	2					
ANR	6305706	PrimaryExpression	"""Invalid VQ_NULL code: %d\\n"""		6305461	0					
ANR	6305707	Argument	code		6305461	3					
ANR	6305708	Identifier	code		6305461	0					
ANR	6305709	ReturnStatement	return AVERROR_INVALIDDATA ;	89:20:1857:1883	6305461	1	True				
ANR	6305710	Identifier	AVERROR_INVALIDDATA		6305461	0					
ANR	6305711	IfStatement	if ( code == 1 )		6305461	3					
ANR	6305712	Condition	code == 1	93:20:1925:1933	6305461	0	True				
ANR	6305713	EqualityExpression	code == 1		6305461	0		==			
ANR	6305714	Identifier	code		6305461	0					
ANR	6305715	PrimaryExpression	1		6305461	1					
ANR	6305716	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""SkipCell procedure not implemented yet!\\n"" )"	95:20:1957:2029	6305461	1	True				
ANR	6305717	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""SkipCell procedure not implemented yet!\\n"" )"		6305461	0					
ANR	6305718	Callee	av_log		6305461	0					
ANR	6305719	Identifier	av_log		6305461	0					
ANR	6305720	ArgumentList	avctx		6305461	1					
ANR	6305721	Argument	avctx		6305461	0					
ANR	6305722	Identifier	avctx		6305461	0					
ANR	6305723	Argument	AV_LOG_ERROR		6305461	1					
ANR	6305724	Identifier	AV_LOG_ERROR		6305461	0					
ANR	6305725	Argument	"""SkipCell procedure not implemented yet!\\n"""		6305461	2					
ANR	6305726	PrimaryExpression	"""SkipCell procedure not implemented yet!\\n"""		6305461	0					
ANR	6305727	IdentifierDeclStatement	"CHECK_CELL copy_cell ( ctx , plane , & curr_cell ) ;"	99:16:2050:2111	6305461	4	True				
ANR	6305728	IdentifierDecl	"copy_cell ( ctx , plane , & curr_cell )"		6305461	0					
ANR	6305729	IdentifierDeclType	CHECK_CELL		6305461	0					
ANR	6305730	Identifier	copy_cell		6305461	1					
ANR	6305731	Expression	"ctx , plane , & curr_cell"		6305461	2					
ANR	6305732	Identifier	ctx		6305461	0					
ANR	6305733	Expression	"plane , & curr_cell"		6305461	1					
ANR	6305734	Identifier	plane		6305461	0					
ANR	6305735	UnaryOperationExpression	& curr_cell		6305461	1					
ANR	6305736	UnaryOperator	&		6305461	0					
ANR	6305737	Identifier	curr_cell		6305461	1					
ANR	6305738	ReturnStatement	return 0 ;	103:16:2130:2138	6305461	5	True				
ANR	6305739	PrimaryExpression	0		6305461	0					
ANR	6305740	BreakStatement	break ;	107:12:2168:2173	6305461	6	True				
ANR	6305741	Label	case INTER_DATA :	109:8:2184:2199	6305461	7	True				
ANR	6305742	Identifier	INTER_DATA		6305461	0					
ANR	6305743	IfStatement	if ( ! curr_cell . tree )		6305461	8					
ANR	6305744	Condition	! curr_cell . tree	111:16:2218:2232	6305461	0	True				
ANR	6305745	UnaryOperationExpression	! curr_cell . tree		6305461	0					
ANR	6305746	UnaryOperator	!		6305461	0					
ANR	6305747	MemberAccess	curr_cell . tree		6305461	1					
ANR	6305748	Identifier	curr_cell		6305461	0					
ANR	6305749	Identifier	tree		6305461	1					
ANR	6305750	CompoundStatement		105:33:2027:2027	6305461	1					
ANR	6305751	IfStatement	if ( ! ctx -> need_resync )		6305461	0					
ANR	6305752	Condition	! ctx -> need_resync	115:20:2366:2382	6305461	0	True				
ANR	6305753	UnaryOperationExpression	! ctx -> need_resync		6305461	0					
ANR	6305754	UnaryOperator	!		6305461	0					
ANR	6305755	PtrMemberAccess	ctx -> need_resync		6305461	1					
ANR	6305756	Identifier	ctx		6305461	0					
ANR	6305757	Identifier	need_resync		6305461	1					
ANR	6305758	ExpressionStatement	ctx -> next_cell_data = & ctx -> gb . buffer [ ( get_bits_count ( & ctx -> gb ) + 7 ) >> 3 ]	117:20:2406:2480	6305461	1	True				
ANR	6305759	AssignmentExpression	ctx -> next_cell_data = & ctx -> gb . buffer [ ( get_bits_count ( & ctx -> gb ) + 7 ) >> 3 ]		6305461	0		=			
ANR	6305760	PtrMemberAccess	ctx -> next_cell_data		6305461	0					
ANR	6305761	Identifier	ctx		6305461	0					
ANR	6305762	Identifier	next_cell_data		6305461	1					
ANR	6305763	UnaryOperationExpression	& ctx -> gb . buffer [ ( get_bits_count ( & ctx -> gb ) + 7 ) >> 3 ]		6305461	1					
ANR	6305764	UnaryOperator	&		6305461	0					
ANR	6305765	ArrayIndexing	ctx -> gb . buffer [ ( get_bits_count ( & ctx -> gb ) + 7 ) >> 3 ]		6305461	1					
ANR	6305766	MemberAccess	ctx -> gb . buffer		6305461	0					
ANR	6305767	PtrMemberAccess	ctx -> gb		6305461	0					
ANR	6305768	Identifier	ctx		6305461	0					
ANR	6305769	Identifier	gb		6305461	1					
ANR	6305770	Identifier	buffer		6305461	1					
ANR	6305771	ShiftExpression	( get_bits_count ( & ctx -> gb ) + 7 ) >> 3		6305461	1		>>			
ANR	6305772	AdditiveExpression	get_bits_count ( & ctx -> gb ) + 7		6305461	0		+			
ANR	6305773	CallExpression	get_bits_count ( & ctx -> gb )		6305461	0					
ANR	6305774	Callee	get_bits_count		6305461	0					
ANR	6305775	Identifier	get_bits_count		6305461	0					
ANR	6305776	ArgumentList	& ctx -> gb		6305461	1					
ANR	6305777	Argument	& ctx -> gb		6305461	0					
ANR	6305778	UnaryOperationExpression	& ctx -> gb		6305461	0					
ANR	6305779	UnaryOperator	&		6305461	0					
ANR	6305780	PtrMemberAccess	ctx -> gb		6305461	1					
ANR	6305781	Identifier	ctx		6305461	0					
ANR	6305782	Identifier	gb		6305461	1					
ANR	6305783	PrimaryExpression	7		6305461	1					
ANR	6305784	PrimaryExpression	3		6305461	1					
ANR	6305785	ExpressionStatement	curr_cell . mv_ptr = & ctx -> mc_vectors [ * ( ctx -> next_cell_data ++ ) << 1 ]	119:16:2499:2565	6305461	1	True				
ANR	6305786	AssignmentExpression	curr_cell . mv_ptr = & ctx -> mc_vectors [ * ( ctx -> next_cell_data ++ ) << 1 ]		6305461	0		=			
ANR	6305787	MemberAccess	curr_cell . mv_ptr		6305461	0					
ANR	6305788	Identifier	curr_cell		6305461	0					
ANR	6305789	Identifier	mv_ptr		6305461	1					
ANR	6305790	UnaryOperationExpression	& ctx -> mc_vectors [ * ( ctx -> next_cell_data ++ ) << 1 ]		6305461	1					
ANR	6305791	UnaryOperator	&		6305461	0					
ANR	6305792	ArrayIndexing	ctx -> mc_vectors [ * ( ctx -> next_cell_data ++ ) << 1 ]		6305461	1					
ANR	6305793	PtrMemberAccess	ctx -> mc_vectors		6305461	0					
ANR	6305794	Identifier	ctx		6305461	0					
ANR	6305795	Identifier	mc_vectors		6305461	1					
ANR	6305796	ShiftExpression	* ( ctx -> next_cell_data ++ ) << 1		6305461	1		<<			
ANR	6305797	UnaryOperationExpression	* ( ctx -> next_cell_data ++ )		6305461	0					
ANR	6305798	UnaryOperator	*		6305461	0					
ANR	6305799	PostIncDecOperationExpression	ctx -> next_cell_data ++		6305461	1					
ANR	6305800	PtrMemberAccess	ctx -> next_cell_data		6305461	0					
ANR	6305801	Identifier	ctx		6305461	0					
ANR	6305802	Identifier	next_cell_data		6305461	1					
ANR	6305803	IncDec	++		6305461	1					
ANR	6305804	PrimaryExpression	1		6305461	1					
ANR	6305805	ExpressionStatement	curr_cell . tree = 1	121:16:2584:2604	6305461	2	True				
ANR	6305806	AssignmentExpression	curr_cell . tree = 1		6305461	0		=			
ANR	6305807	MemberAccess	curr_cell . tree		6305461	0					
ANR	6305808	Identifier	curr_cell		6305461	0					
ANR	6305809	Identifier	tree		6305461	1					
ANR	6305810	PrimaryExpression	1		6305461	1					
ANR	6305811	ExpressionStatement	UPDATE_BITPOS ( 8 )	123:16:2647:2663	6305461	3	True				
ANR	6305812	CallExpression	UPDATE_BITPOS ( 8 )		6305461	0					
ANR	6305813	Callee	UPDATE_BITPOS		6305461	0					
ANR	6305814	Identifier	UPDATE_BITPOS		6305461	0					
ANR	6305815	ArgumentList	8		6305461	1					
ANR	6305816	Argument	8		6305461	0					
ANR	6305817	PrimaryExpression	8		6305461	0					
ANR	6305818	ElseStatement	else		6305461	0					
ANR	6305819	CompoundStatement		127:16:2659:2821	6305461	0					
ANR	6305820	IfStatement	if ( ! ctx -> need_resync )		6305461	0					
ANR	6305821	Condition	! ctx -> need_resync	127:20:2732:2748	6305461	0	True				
ANR	6305822	UnaryOperationExpression	! ctx -> need_resync		6305461	0					
ANR	6305823	UnaryOperator	!		6305461	0					
ANR	6305824	PtrMemberAccess	ctx -> need_resync		6305461	1					
ANR	6305825	Identifier	ctx		6305461	0					
ANR	6305826	Identifier	need_resync		6305461	1					
ANR	6305827	ExpressionStatement	ctx -> next_cell_data = & ctx -> gb . buffer [ ( get_bits_count ( & ctx -> gb ) + 7 ) >> 3 ]	129:20:2772:2846	6305461	1	True				
ANR	6305828	AssignmentExpression	ctx -> next_cell_data = & ctx -> gb . buffer [ ( get_bits_count ( & ctx -> gb ) + 7 ) >> 3 ]		6305461	0		=			
ANR	6305829	PtrMemberAccess	ctx -> next_cell_data		6305461	0					
ANR	6305830	Identifier	ctx		6305461	0					
ANR	6305831	Identifier	next_cell_data		6305461	1					
ANR	6305832	UnaryOperationExpression	& ctx -> gb . buffer [ ( get_bits_count ( & ctx -> gb ) + 7 ) >> 3 ]		6305461	1					
ANR	6305833	UnaryOperator	&		6305461	0					
ANR	6305834	ArrayIndexing	ctx -> gb . buffer [ ( get_bits_count ( & ctx -> gb ) + 7 ) >> 3 ]		6305461	1					
ANR	6305835	MemberAccess	ctx -> gb . buffer		6305461	0					
ANR	6305836	PtrMemberAccess	ctx -> gb		6305461	0					
ANR	6305837	Identifier	ctx		6305461	0					
ANR	6305838	Identifier	gb		6305461	1					
ANR	6305839	Identifier	buffer		6305461	1					
ANR	6305840	ShiftExpression	( get_bits_count ( & ctx -> gb ) + 7 ) >> 3		6305461	1		>>			
ANR	6305841	AdditiveExpression	get_bits_count ( & ctx -> gb ) + 7		6305461	0		+			
ANR	6305842	CallExpression	get_bits_count ( & ctx -> gb )		6305461	0					
ANR	6305843	Callee	get_bits_count		6305461	0					
ANR	6305844	Identifier	get_bits_count		6305461	0					
ANR	6305845	ArgumentList	& ctx -> gb		6305461	1					
ANR	6305846	Argument	& ctx -> gb		6305461	0					
ANR	6305847	UnaryOperationExpression	& ctx -> gb		6305461	0					
ANR	6305848	UnaryOperator	&		6305461	0					
ANR	6305849	PtrMemberAccess	ctx -> gb		6305461	1					
ANR	6305850	Identifier	ctx		6305461	0					
ANR	6305851	Identifier	gb		6305461	1					
ANR	6305852	PrimaryExpression	7		6305461	1					
ANR	6305853	PrimaryExpression	3		6305461	1					
ANR	6305854	IdentifierDeclStatement	"CHECK_CELL bytes_used = decode_cell ( ctx , avctx , plane , & curr_cell , ctx -> next_cell_data , ctx -> last_byte ) ;"	133:16:2867:3029	6305461	1	True				
ANR	6305855	IdentifierDecl	"bytes_used = decode_cell ( ctx , avctx , plane , & curr_cell , ctx -> next_cell_data , ctx -> last_byte )"		6305461	0					
ANR	6305856	IdentifierDeclType	CHECK_CELL		6305461	0					
ANR	6305857	Identifier	bytes_used		6305461	1					
ANR	6305858	AssignmentExpression	"bytes_used = decode_cell ( ctx , avctx , plane , & curr_cell , ctx -> next_cell_data , ctx -> last_byte )"		6305461	2		=			
ANR	6305859	Identifier	bytes_used		6305461	0					
ANR	6305860	CallExpression	"decode_cell ( ctx , avctx , plane , & curr_cell , ctx -> next_cell_data , ctx -> last_byte )"		6305461	1					
ANR	6305861	Callee	decode_cell		6305461	0					
ANR	6305862	Identifier	decode_cell		6305461	0					
ANR	6305863	ArgumentList	ctx		6305461	1					
ANR	6305864	Argument	ctx		6305461	0					
ANR	6305865	Identifier	ctx		6305461	0					
ANR	6305866	Argument	avctx		6305461	1					
ANR	6305867	Identifier	avctx		6305461	0					
ANR	6305868	Argument	plane		6305461	2					
ANR	6305869	Identifier	plane		6305461	0					
ANR	6305870	Argument	& curr_cell		6305461	3					
ANR	6305871	UnaryOperationExpression	& curr_cell		6305461	0					
ANR	6305872	UnaryOperator	&		6305461	0					
ANR	6305873	Identifier	curr_cell		6305461	1					
ANR	6305874	Argument	ctx -> next_cell_data		6305461	4					
ANR	6305875	PtrMemberAccess	ctx -> next_cell_data		6305461	0					
ANR	6305876	Identifier	ctx		6305461	0					
ANR	6305877	Identifier	next_cell_data		6305461	1					
ANR	6305878	Argument	ctx -> last_byte		6305461	5					
ANR	6305879	PtrMemberAccess	ctx -> last_byte		6305461	0					
ANR	6305880	Identifier	ctx		6305461	0					
ANR	6305881	Identifier	last_byte		6305461	1					
ANR	6305882	IfStatement	if ( bytes_used < 0 )		6305461	2					
ANR	6305883	Condition	bytes_used < 0	139:20:3052:3065	6305461	0	True				
ANR	6305884	RelationalExpression	bytes_used < 0		6305461	0		<			
ANR	6305885	Identifier	bytes_used		6305461	0					
ANR	6305886	PrimaryExpression	0		6305461	1					
ANR	6305887	ReturnStatement	return AVERROR_INVALIDDATA ;	141:20:3089:3115	6305461	1	True				
ANR	6305888	Identifier	AVERROR_INVALIDDATA		6305461	0					
ANR	6305889	ExpressionStatement	UPDATE_BITPOS ( bytes_used << 3 )	145:16:3136:3166	6305461	3	True				
ANR	6305890	CallExpression	UPDATE_BITPOS ( bytes_used << 3 )		6305461	0					
ANR	6305891	Callee	UPDATE_BITPOS		6305461	0					
ANR	6305892	Identifier	UPDATE_BITPOS		6305461	0					
ANR	6305893	ArgumentList	bytes_used << 3		6305461	1					
ANR	6305894	Argument	bytes_used << 3		6305461	0					
ANR	6305895	ShiftExpression	bytes_used << 3		6305461	0		<<			
ANR	6305896	Identifier	bytes_used		6305461	0					
ANR	6305897	PrimaryExpression	3		6305461	1					
ANR	6305898	ExpressionStatement	ctx -> next_cell_data += bytes_used	147:16:3185:3218	6305461	4	True				
ANR	6305899	AssignmentExpression	ctx -> next_cell_data += bytes_used		6305461	0		+=			
ANR	6305900	PtrMemberAccess	ctx -> next_cell_data		6305461	0					
ANR	6305901	Identifier	ctx		6305461	0					
ANR	6305902	Identifier	next_cell_data		6305461	1					
ANR	6305903	Identifier	bytes_used		6305461	1					
ANR	6305904	ReturnStatement	return 0 ;	149:16:3237:3245	6305461	5	True				
ANR	6305905	PrimaryExpression	0		6305461	0					
ANR	6305906	BreakStatement	break ;	153:12:3275:3280	6305461	9	True				
ANR	6305907	ReturnStatement	return 0 ;	161:4:3314:3322	6305461	6	True				
ANR	6305908	PrimaryExpression	0		6305461	0					
ANR	6305909	ReturnType	static int		6305461	1					
ANR	6305910	Identifier	parse_bintree		6305461	2					
ANR	6305911	ParameterList	"Indeo3DecodeContext * ctx , AVCodecContext * avctx , Plane * plane , int code , Cell * ref_cell , const int depth , const int strip_width"		6305461	3					
ANR	6305912	Parameter	Indeo3DecodeContext * ctx	1:25:25:48	6305461	0	True				
ANR	6305913	ParameterType	Indeo3DecodeContext *		6305461	0					
ANR	6305914	Identifier	ctx		6305461	1					
ANR	6305915	Parameter	AVCodecContext * avctx	1:51:51:71	6305461	1	True				
ANR	6305916	ParameterType	AVCodecContext *		6305461	0					
ANR	6305917	Identifier	avctx		6305461	1					
ANR	6305918	Parameter	Plane * plane	3:25:100:111	6305461	2	True				
ANR	6305919	ParameterType	Plane *		6305461	0					
ANR	6305920	Identifier	plane		6305461	1					
ANR	6305921	Parameter	int code	3:39:114:121	6305461	3	True				
ANR	6305922	ParameterType	int		6305461	0					
ANR	6305923	Identifier	code		6305461	1					
ANR	6305924	Parameter	Cell * ref_cell	3:49:124:137	6305461	4	True				
ANR	6305925	ParameterType	Cell *		6305461	0					
ANR	6305926	Identifier	ref_cell		6305461	1					
ANR	6305927	Parameter	const int depth	5:25:166:180	6305461	5	True				
ANR	6305928	ParameterType	const int		6305461	0					
ANR	6305929	Identifier	depth		6305461	1					
ANR	6305930	Parameter	const int strip_width	5:42:183:203	6305461	6	True				
ANR	6305931	ParameterType	const int		6305461	0					
ANR	6305932	Identifier	strip_width		6305461	1					
ANR	6305933	CFGEntryNode	ENTRY		6305461		True				
ANR	6305934	CFGExitNode	EXIT		6305461		True				
ANR	6305935	Symbol	plane		6305461						
ANR	6305936	Symbol	curr_cell . tree		6305461						
ANR	6305937	Symbol	parse_bintree		6305461						
ANR	6305938	Symbol	code		6305461						
ANR	6305939	Symbol	get_bits		6305461						
ANR	6305940	Symbol	ref_cell -> ypos		6305461						
ANR	6305941	Symbol	decode_cell		6305461						
ANR	6305942	Symbol	& ctx -> gb		6305461						
ANR	6305943	Symbol	curr_cell . height		6305461						
ANR	6305944	Symbol	ref_cell -> width		6305461						
ANR	6305945	Symbol	ctx -> last_byte		6305461						
ANR	6305946	Symbol	ref_cell -> height		6305461						
ANR	6305947	Symbol	ctx -> next_cell_data		6305461						
ANR	6305948	Symbol	curr_cell . mv_ptr		6305461						
ANR	6305949	Symbol	ctx -> need_resync		6305461						
ANR	6305950	Symbol	bytes_used		6305461						
ANR	6305951	Symbol	ctx -> mc_vectors		6305461						
ANR	6305952	Symbol	curr_cell		6305461						
ANR	6305953	Symbol	H_SPLIT		6305461						
ANR	6305954	Symbol	curr_cell . width		6305461						
ANR	6305955	Symbol	copy_cell		6305461						
ANR	6305956	Symbol	avctx		6305461						
ANR	6305957	Symbol	ref_cell		6305461						
ANR	6305958	Symbol	AV_LOG_ERROR		6305461						
ANR	6305959	Symbol	ctx -> gb . buffer		6305461						
ANR	6305960	Symbol	ctx		6305461						
ANR	6305961	Symbol	ref_cell -> xpos		6305461						
ANR	6305962	Symbol	* ref_cell		6305461						
ANR	6305963	Symbol	& curr_cell		6305461						
ANR	6305964	Symbol	get_bits_count		6305461						
ANR	6305965	Symbol	ctx -> gb		6305461						
ANR	6305966	Symbol	* ( ctx -> next_cell_data ++ )		6305461						
ANR	6305967	Symbol	* ctx		6305461						
ANR	6305968	Symbol	depth		6305461						
ANR	6305969	Symbol	strip_width		6305461						
ANR	6305970	Symbol	AVERROR_INVALIDDATA		6305461						
ANR	6305971	Symbol	V_SPLIT		6305461						
