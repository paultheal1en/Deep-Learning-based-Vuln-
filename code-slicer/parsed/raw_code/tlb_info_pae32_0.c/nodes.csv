command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8456602	File	/home/p4ultr4n/workplace/ReVeal/raw_code/tlb_info_pae32_0.c								
ANR	8456603	Function	tlb_info_pae32	1:0:0:1612							
ANR	8456604	FunctionDef	"tlb_info_pae32 (Monitor * mon , CPUState * env)"		8456603	0					
ANR	8456605	CompoundStatement		3:0:57:1612	8456603	0					
ANR	8456606	IdentifierDeclStatement	"int l1 , l2 , l3 ;"	5:4:64:78	8456603	0	True				
ANR	8456607	IdentifierDecl	l1		8456603	0					
ANR	8456608	IdentifierDeclType	int		8456603	0					
ANR	8456609	Identifier	l1		8456603	1					
ANR	8456610	IdentifierDecl	l2		8456603	1					
ANR	8456611	IdentifierDeclType	int		8456603	0					
ANR	8456612	Identifier	l2		8456603	1					
ANR	8456613	IdentifierDecl	l3		8456603	2					
ANR	8456614	IdentifierDeclType	int		8456603	0					
ANR	8456615	Identifier	l3		8456603	1					
ANR	8456616	IdentifierDeclStatement	"uint64_t pdpe , pde , pte ;"	7:4:85:108	8456603	1	True				
ANR	8456617	IdentifierDecl	pdpe		8456603	0					
ANR	8456618	IdentifierDeclType	uint64_t		8456603	0					
ANR	8456619	Identifier	pdpe		8456603	1					
ANR	8456620	IdentifierDecl	pde		8456603	1					
ANR	8456621	IdentifierDeclType	uint64_t		8456603	0					
ANR	8456622	Identifier	pde		8456603	1					
ANR	8456623	IdentifierDecl	pte		8456603	2					
ANR	8456624	IdentifierDeclType	uint64_t		8456603	0					
ANR	8456625	Identifier	pte		8456603	1					
ANR	8456626	IdentifierDeclStatement	"uint64_t pdp_addr , pd_addr , pt_addr ;"	9:4:115:150	8456603	2	True				
ANR	8456627	IdentifierDecl	pdp_addr		8456603	0					
ANR	8456628	IdentifierDeclType	uint64_t		8456603	0					
ANR	8456629	Identifier	pdp_addr		8456603	1					
ANR	8456630	IdentifierDecl	pd_addr		8456603	1					
ANR	8456631	IdentifierDeclType	uint64_t		8456603	0					
ANR	8456632	Identifier	pd_addr		8456603	1					
ANR	8456633	IdentifierDecl	pt_addr		8456603	2					
ANR	8456634	IdentifierDeclType	uint64_t		8456603	0					
ANR	8456635	Identifier	pt_addr		8456603	1					
ANR	8456636	ExpressionStatement	pdp_addr = env -> cr [ 3 ] & ~0x1f	13:4:159:188	8456603	3	True				
ANR	8456637	AssignmentExpression	pdp_addr = env -> cr [ 3 ] & ~0x1f		8456603	0		=			
ANR	8456638	Identifier	pdp_addr		8456603	0					
ANR	8456639	BitAndExpression	env -> cr [ 3 ] & ~0x1f		8456603	1		&			
ANR	8456640	ArrayIndexing	env -> cr [ 3 ]		8456603	0					
ANR	8456641	PtrMemberAccess	env -> cr		8456603	0					
ANR	8456642	Identifier	env		8456603	0					
ANR	8456643	Identifier	cr		8456603	1					
ANR	8456644	PrimaryExpression	3		8456603	1					
ANR	8456645	Identifier	~0x1f		8456603	1					
ANR	8456646	ForStatement	for ( l1 = 0 ; l1 < 4 ; l1 ++ )		8456603	4					
ANR	8456647	ForInit	l1 = 0 ;	15:9:200:206	8456603	0	True				
ANR	8456648	AssignmentExpression	l1 = 0		8456603	0		=			
ANR	8456649	Identifier	l1		8456603	0					
ANR	8456650	PrimaryExpression	0		8456603	1					
ANR	8456651	Condition	l1 < 4	15:17:208:213	8456603	1	True				
ANR	8456652	RelationalExpression	l1 < 4		8456603	0		<			
ANR	8456653	Identifier	l1		8456603	0					
ANR	8456654	PrimaryExpression	4		8456603	1					
ANR	8456655	PostIncDecOperationExpression	l1 ++	15:25:216:219	8456603	2	True				
ANR	8456656	Identifier	l1		8456603	0					
ANR	8456657	IncDec	++		8456603	1					
ANR	8456658	CompoundStatement		13:31:164:164	8456603	3					
ANR	8456659	ExpressionStatement	"cpu_physical_memory_read ( pdp_addr + l1 * 8 , & pdpe , 8 )"	17:8:233:286	8456603	0	True				
ANR	8456660	CallExpression	"cpu_physical_memory_read ( pdp_addr + l1 * 8 , & pdpe , 8 )"		8456603	0					
ANR	8456661	Callee	cpu_physical_memory_read		8456603	0					
ANR	8456662	Identifier	cpu_physical_memory_read		8456603	0					
ANR	8456663	ArgumentList	pdp_addr + l1 * 8		8456603	1					
ANR	8456664	Argument	pdp_addr + l1 * 8		8456603	0					
ANR	8456665	AdditiveExpression	pdp_addr + l1 * 8		8456603	0		+			
ANR	8456666	Identifier	pdp_addr		8456603	0					
ANR	8456667	MultiplicativeExpression	l1 * 8		8456603	1		*			
ANR	8456668	Identifier	l1		8456603	0					
ANR	8456669	PrimaryExpression	8		8456603	1					
ANR	8456670	Argument	& pdpe		8456603	1					
ANR	8456671	UnaryOperationExpression	& pdpe		8456603	0					
ANR	8456672	UnaryOperator	&		8456603	0					
ANR	8456673	Identifier	pdpe		8456603	1					
ANR	8456674	Argument	8		8456603	2					
ANR	8456675	PrimaryExpression	8		8456603	0					
ANR	8456676	ExpressionStatement	pdpe = le64_to_cpu ( pdpe )	19:8:297:321	8456603	1	True				
ANR	8456677	AssignmentExpression	pdpe = le64_to_cpu ( pdpe )		8456603	0		=			
ANR	8456678	Identifier	pdpe		8456603	0					
ANR	8456679	CallExpression	le64_to_cpu ( pdpe )		8456603	1					
ANR	8456680	Callee	le64_to_cpu		8456603	0					
ANR	8456681	Identifier	le64_to_cpu		8456603	0					
ANR	8456682	ArgumentList	pdpe		8456603	1					
ANR	8456683	Argument	pdpe		8456603	0					
ANR	8456684	Identifier	pdpe		8456603	0					
ANR	8456685	IfStatement	if ( pdpe & PG_PRESENT_MASK )		8456603	2					
ANR	8456686	Condition	pdpe & PG_PRESENT_MASK	21:12:336:357	8456603	0	True				
ANR	8456687	BitAndExpression	pdpe & PG_PRESENT_MASK		8456603	0		&			
ANR	8456688	Identifier	pdpe		8456603	0					
ANR	8456689	Identifier	PG_PRESENT_MASK		8456603	1					
ANR	8456690	CompoundStatement		19:36:302:302	8456603	1					
ANR	8456691	Statement	pd_addr	23:12:375:381	8456603	0	True				
ANR	8456692	Statement	=	23:20:383:383	8456603	1	True				
ANR	8456693	Statement	pdpe	23:22:385:388	8456603	2	True				
ANR	8456694	Statement	&	23:27:390:390	8456603	3	True				
ANR	8456695	Statement	0x3fffffffff000UL	23:29:392:408	8456603	4	True				
ANR	8456696	ExpressionStatement	L	23:46:409:410	8456603	5	True				
ANR	8456697	Identifier	L		8456603	0					
ANR	8456698	ForStatement	for ( l2 = 0 ; l2 < 512 ; l2 ++ )		8456603	6					
ANR	8456699	ForInit	l2 = 0 ;	25:17:430:436	8456603	0	True				
ANR	8456700	AssignmentExpression	l2 = 0		8456603	0		=			
ANR	8456701	Identifier	l2		8456603	0					
ANR	8456702	PrimaryExpression	0		8456603	1					
ANR	8456703	Condition	l2 < 512	25:25:438:445	8456603	1	True				
ANR	8456704	RelationalExpression	l2 < 512		8456603	0		<			
ANR	8456705	Identifier	l2		8456603	0					
ANR	8456706	PrimaryExpression	512		8456603	1					
ANR	8456707	PostIncDecOperationExpression	l2 ++	25:35:448:451	8456603	2	True				
ANR	8456708	Identifier	l2		8456603	0					
ANR	8456709	IncDec	++		8456603	1					
ANR	8456710	CompoundStatement		23:41:396:396	8456603	3					
ANR	8456711	ExpressionStatement	"cpu_physical_memory_read ( pd_addr + l2 * 8 , & pde , 8 )"	27:16:473:524	8456603	0	True				
ANR	8456712	CallExpression	"cpu_physical_memory_read ( pd_addr + l2 * 8 , & pde , 8 )"		8456603	0					
ANR	8456713	Callee	cpu_physical_memory_read		8456603	0					
ANR	8456714	Identifier	cpu_physical_memory_read		8456603	0					
ANR	8456715	ArgumentList	pd_addr + l2 * 8		8456603	1					
ANR	8456716	Argument	pd_addr + l2 * 8		8456603	0					
ANR	8456717	AdditiveExpression	pd_addr + l2 * 8		8456603	0		+			
ANR	8456718	Identifier	pd_addr		8456603	0					
ANR	8456719	MultiplicativeExpression	l2 * 8		8456603	1		*			
ANR	8456720	Identifier	l2		8456603	0					
ANR	8456721	PrimaryExpression	8		8456603	1					
ANR	8456722	Argument	& pde		8456603	1					
ANR	8456723	UnaryOperationExpression	& pde		8456603	0					
ANR	8456724	UnaryOperator	&		8456603	0					
ANR	8456725	Identifier	pde		8456603	1					
ANR	8456726	Argument	8		8456603	2					
ANR	8456727	PrimaryExpression	8		8456603	0					
ANR	8456728	ExpressionStatement	pde = le64_to_cpu ( pde )	29:16:543:565	8456603	1	True				
ANR	8456729	AssignmentExpression	pde = le64_to_cpu ( pde )		8456603	0		=			
ANR	8456730	Identifier	pde		8456603	0					
ANR	8456731	CallExpression	le64_to_cpu ( pde )		8456603	1					
ANR	8456732	Callee	le64_to_cpu		8456603	0					
ANR	8456733	Identifier	le64_to_cpu		8456603	0					
ANR	8456734	ArgumentList	pde		8456603	1					
ANR	8456735	Argument	pde		8456603	0					
ANR	8456736	Identifier	pde		8456603	0					
ANR	8456737	IfStatement	if ( pde & PG_PRESENT_MASK )		8456603	2					
ANR	8456738	Condition	pde & PG_PRESENT_MASK	31:20:588:608	8456603	0	True				
ANR	8456739	BitAndExpression	pde & PG_PRESENT_MASK		8456603	0		&			
ANR	8456740	Identifier	pde		8456603	0					
ANR	8456741	Identifier	PG_PRESENT_MASK		8456603	1					
ANR	8456742	CompoundStatement		29:43:553:553	8456603	1					
ANR	8456743	IfStatement	if ( pde & PG_PSE_MASK )		8456603	0					
ANR	8456744	Condition	pde & PG_PSE_MASK	33:24:638:654	8456603	0	True				
ANR	8456745	BitAndExpression	pde & PG_PSE_MASK		8456603	0		&			
ANR	8456746	Identifier	pde		8456603	0					
ANR	8456747	Identifier	PG_PSE_MASK		8456603	1					
ANR	8456748	CompoundStatement		31:43:599:599	8456603	1					
ANR	8456749	ExpressionStatement	"print_pte ( mon , ( l1 << 30 ) + ( l2 << 21 ) , pde , ~ ( ( target_phys_addr_t ) ( 1 << 20 ) - 1 ) )"	37:24:753:871	8456603	0	True				
ANR	8456750	CallExpression	"print_pte ( mon , ( l1 << 30 ) + ( l2 << 21 ) , pde , ~ ( ( target_phys_addr_t ) ( 1 << 20 ) - 1 ) )"		8456603	0					
ANR	8456751	Callee	print_pte		8456603	0					
ANR	8456752	Identifier	print_pte		8456603	0					
ANR	8456753	ArgumentList	mon		8456603	1					
ANR	8456754	Argument	mon		8456603	0					
ANR	8456755	Identifier	mon		8456603	0					
ANR	8456756	Argument	( l1 << 30 ) + ( l2 << 21 )		8456603	1					
ANR	8456757	AdditiveExpression	( l1 << 30 ) + ( l2 << 21 )		8456603	0		+			
ANR	8456758	ShiftExpression	l1 << 30		8456603	0		<<			
ANR	8456759	Identifier	l1		8456603	0					
ANR	8456760	PrimaryExpression	30		8456603	1					
ANR	8456761	ShiftExpression	l2 << 21		8456603	1		<<			
ANR	8456762	Identifier	l2		8456603	0					
ANR	8456763	PrimaryExpression	21		8456603	1					
ANR	8456764	Argument	pde		8456603	2					
ANR	8456765	Identifier	pde		8456603	0					
ANR	8456766	Argument	~ ( ( target_phys_addr_t ) ( 1 << 20 ) - 1 )		8456603	3					
ANR	8456767	UnaryOperationExpression	~ ( ( target_phys_addr_t ) ( 1 << 20 ) - 1 )		8456603	0					
ANR	8456768	UnaryOperator	~		8456603	0					
ANR	8456769	AdditiveExpression	( target_phys_addr_t ) ( 1 << 20 ) - 1		8456603	1		-			
ANR	8456770	CastExpression	( target_phys_addr_t ) ( 1 << 20 )		8456603	0					
ANR	8456771	CastTarget	target_phys_addr_t		8456603	0					
ANR	8456772	ShiftExpression	1 << 20		8456603	1		<<			
ANR	8456773	PrimaryExpression	1		8456603	0					
ANR	8456774	PrimaryExpression	20		8456603	1					
ANR	8456775	PrimaryExpression	1		8456603	1					
ANR	8456776	ElseStatement	else		8456603	0					
ANR	8456777	CompoundStatement		39:27:843:843	8456603	0					
ANR	8456778	Statement	pt_addr	43:24:928:934	8456603	0	True				
ANR	8456779	Statement	=	43:32:936:936	8456603	1	True				
ANR	8456780	Statement	pde	43:34:938:940	8456603	2	True				
ANR	8456781	Statement	&	43:38:942:942	8456603	3	True				
ANR	8456782	Statement	0x3fffffffff000UL	43:40:944:960	8456603	4	True				
ANR	8456783	ExpressionStatement	L	43:57:961:962	8456603	5	True				
ANR	8456784	Identifier	L		8456603	0					
ANR	8456785	ForStatement	for ( l3 = 0 ; l3 < 512 ; l3 ++ )		8456603	6					
ANR	8456786	ForInit	l3 = 0 ;	45:29:994:1000	8456603	0	True				
ANR	8456787	AssignmentExpression	l3 = 0		8456603	0		=			
ANR	8456788	Identifier	l3		8456603	0					
ANR	8456789	PrimaryExpression	0		8456603	1					
ANR	8456790	Condition	l3 < 512	45:37:1002:1009	8456603	1	True				
ANR	8456791	RelationalExpression	l3 < 512		8456603	0		<			
ANR	8456792	Identifier	l3		8456603	0					
ANR	8456793	PrimaryExpression	512		8456603	1					
ANR	8456794	PostIncDecOperationExpression	l3 ++	45:47:1012:1015	8456603	2	True				
ANR	8456795	Identifier	l3		8456603	0					
ANR	8456796	IncDec	++		8456603	1					
ANR	8456797	CompoundStatement		43:53:960:960	8456603	3					
ANR	8456798	ExpressionStatement	"cpu_physical_memory_read ( pt_addr + l3 * 8 , & pte , 8 )"	47:28:1049:1100	8456603	0	True				
ANR	8456799	CallExpression	"cpu_physical_memory_read ( pt_addr + l3 * 8 , & pte , 8 )"		8456603	0					
ANR	8456800	Callee	cpu_physical_memory_read		8456603	0					
ANR	8456801	Identifier	cpu_physical_memory_read		8456603	0					
ANR	8456802	ArgumentList	pt_addr + l3 * 8		8456603	1					
ANR	8456803	Argument	pt_addr + l3 * 8		8456603	0					
ANR	8456804	AdditiveExpression	pt_addr + l3 * 8		8456603	0		+			
ANR	8456805	Identifier	pt_addr		8456603	0					
ANR	8456806	MultiplicativeExpression	l3 * 8		8456603	1		*			
ANR	8456807	Identifier	l3		8456603	0					
ANR	8456808	PrimaryExpression	8		8456603	1					
ANR	8456809	Argument	& pte		8456603	1					
ANR	8456810	UnaryOperationExpression	& pte		8456603	0					
ANR	8456811	UnaryOperator	&		8456603	0					
ANR	8456812	Identifier	pte		8456603	1					
ANR	8456813	Argument	8		8456603	2					
ANR	8456814	PrimaryExpression	8		8456603	0					
ANR	8456815	ExpressionStatement	pte = le64_to_cpu ( pte )	49:28:1131:1153	8456603	1	True				
ANR	8456816	AssignmentExpression	pte = le64_to_cpu ( pte )		8456603	0		=			
ANR	8456817	Identifier	pte		8456603	0					
ANR	8456818	CallExpression	le64_to_cpu ( pte )		8456603	1					
ANR	8456819	Callee	le64_to_cpu		8456603	0					
ANR	8456820	Identifier	le64_to_cpu		8456603	0					
ANR	8456821	ArgumentList	pte		8456603	1					
ANR	8456822	Argument	pte		8456603	0					
ANR	8456823	Identifier	pte		8456603	0					
ANR	8456824	IfStatement	if ( pte & PG_PRESENT_MASK )		8456603	2					
ANR	8456825	Condition	pte & PG_PRESENT_MASK	51:32:1188:1208	8456603	0	True				
ANR	8456826	BitAndExpression	pte & PG_PRESENT_MASK		8456603	0		&			
ANR	8456827	Identifier	pte		8456603	0					
ANR	8456828	Identifier	PG_PRESENT_MASK		8456603	1					
ANR	8456829	CompoundStatement		49:55:1153:1153	8456603	1					
ANR	8456830	ExpressionStatement	"print_pte ( mon , ( l1 << 30 ) + ( l2 << 21 ) + ( l3 << 12 ) , pte & ~PG_PSE_MASK , ~ ( target_phys_addr_t ) 0xfff )"	53:32:1246:1476	8456603	0	True				
ANR	8456831	CallExpression	"print_pte ( mon , ( l1 << 30 ) + ( l2 << 21 ) + ( l3 << 12 ) , pte & ~PG_PSE_MASK , ~ ( target_phys_addr_t ) 0xfff )"		8456603	0					
ANR	8456832	Callee	print_pte		8456603	0					
ANR	8456833	Identifier	print_pte		8456603	0					
ANR	8456834	ArgumentList	mon		8456603	1					
ANR	8456835	Argument	mon		8456603	0					
ANR	8456836	Identifier	mon		8456603	0					
ANR	8456837	Argument	( l1 << 30 ) + ( l2 << 21 ) + ( l3 << 12 )		8456603	1					
ANR	8456838	AdditiveExpression	( l1 << 30 ) + ( l2 << 21 ) + ( l3 << 12 )		8456603	0		+			
ANR	8456839	ShiftExpression	l1 << 30		8456603	0		<<			
ANR	8456840	Identifier	l1		8456603	0					
ANR	8456841	PrimaryExpression	30		8456603	1					
ANR	8456842	AdditiveExpression	( l2 << 21 ) + ( l3 << 12 )		8456603	1		+			
ANR	8456843	ShiftExpression	l2 << 21		8456603	0		<<			
ANR	8456844	Identifier	l2		8456603	0					
ANR	8456845	PrimaryExpression	21		8456603	1					
ANR	8456846	ShiftExpression	l3 << 12		8456603	1		<<			
ANR	8456847	Identifier	l3		8456603	0					
ANR	8456848	PrimaryExpression	12		8456603	1					
ANR	8456849	Argument	pte & ~PG_PSE_MASK		8456603	2					
ANR	8456850	BitAndExpression	pte & ~PG_PSE_MASK		8456603	0		&			
ANR	8456851	Identifier	pte		8456603	0					
ANR	8456852	Identifier	~PG_PSE_MASK		8456603	1					
ANR	8456853	Argument	~ ( target_phys_addr_t ) 0xfff		8456603	3					
ANR	8456854	UnaryOperationExpression	~ ( target_phys_addr_t ) 0xfff		8456603	0					
ANR	8456855	UnaryOperator	~		8456603	0					
ANR	8456856	CastExpression	( target_phys_addr_t ) 0xfff		8456603	1					
ANR	8456857	CastTarget	target_phys_addr_t		8456603	0					
ANR	8456858	PrimaryExpression	0xfff		8456603	1					
ANR	8456859	ReturnType	static void		8456603	1					
ANR	8456860	Identifier	tlb_info_pae32		8456603	2					
ANR	8456861	ParameterList	"Monitor * mon , CPUState * env"		8456603	3					
ANR	8456862	Parameter	Monitor * mon	1:27:27:38	8456603	0	True				
ANR	8456863	ParameterType	Monitor *		8456603	0					
ANR	8456864	Identifier	mon		8456603	1					
ANR	8456865	Parameter	CPUState * env	1:41:41:53	8456603	1	True				
ANR	8456866	ParameterType	CPUState *		8456603	0					
ANR	8456867	Identifier	env		8456603	1					
ANR	8456868	CFGEntryNode	ENTRY		8456603		True				
ANR	8456869	CFGExitNode	EXIT		8456603		True				
ANR	8456870	Symbol	pte		8456603						
ANR	8456871	Symbol	le64_to_cpu		8456603						
ANR	8456872	Symbol	& pte		8456603						
ANR	8456873	Symbol	* * env		8456603						
ANR	8456874	Symbol	l1		8456603						
ANR	8456875	Symbol	l2		8456603						
ANR	8456876	Symbol	l3		8456603						
ANR	8456877	Symbol	* env		8456603						
ANR	8456878	Symbol	PG_PSE_MASK		8456603						
ANR	8456879	Symbol	env		8456603						
ANR	8456880	Symbol	& pdpe		8456603						
ANR	8456881	Symbol	mon		8456603						
ANR	8456882	Symbol	pdp_addr		8456603						
ANR	8456883	Symbol	pde		8456603						
ANR	8456884	Symbol	* env -> cr		8456603						
ANR	8456885	Symbol	& pde		8456603						
ANR	8456886	Symbol	pt_addr		8456603						
ANR	8456887	Symbol	PG_PRESENT_MASK		8456603						
ANR	8456888	Symbol	~PG_PSE_MASK		8456603						
ANR	8456889	Symbol	env -> cr		8456603						
ANR	8456890	Symbol	pd_addr		8456603						
ANR	8456891	Symbol	~0x1f		8456603						
ANR	8456892	Symbol	pdpe		8456603						
