command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3866135	File	/home/p4ultr4n/workplace/ReVeal/raw_code/filter_frame_14_1.c								
ANR	3866136	Function	filter_frame	1:0:0:8498							
ANR	3866137	FunctionDef	"filter_frame (AVFilterLink * inlink , AVFrame * picref)"		3866136	0					
ANR	3866138	CompoundStatement		3:0:64:8498	3866136	0					
ANR	3866139	IdentifierDeclStatement	AVFilterContext * ctx = inlink -> dst ;	5:4:71:105	3866136	0	True				
ANR	3866140	IdentifierDecl	* ctx = inlink -> dst		3866136	0					
ANR	3866141	IdentifierDeclType	AVFilterContext *		3866136	0					
ANR	3866142	Identifier	ctx		3866136	1					
ANR	3866143	AssignmentExpression	* ctx = inlink -> dst		3866136	2		=			
ANR	3866144	Identifier	ctx		3866136	0					
ANR	3866145	PtrMemberAccess	inlink -> dst		3866136	1					
ANR	3866146	Identifier	inlink		3866136	0					
ANR	3866147	Identifier	dst		3866136	1					
ANR	3866148	IdentifierDeclStatement	SignatureContext * sic = ctx -> priv ;	7:4:112:145	3866136	1	True				
ANR	3866149	IdentifierDecl	* sic = ctx -> priv		3866136	0					
ANR	3866150	IdentifierDeclType	SignatureContext *		3866136	0					
ANR	3866151	Identifier	sic		3866136	1					
ANR	3866152	AssignmentExpression	* sic = ctx -> priv		3866136	2		=			
ANR	3866153	Identifier	sic		3866136	0					
ANR	3866154	PtrMemberAccess	ctx -> priv		3866136	1					
ANR	3866155	Identifier	ctx		3866136	0					
ANR	3866156	Identifier	priv		3866136	1					
ANR	3866157	IdentifierDeclStatement	StreamContext * sc = & ( sic -> streamcontexts [ FF_INLINK_IDX ( inlink ) ] ) ;	9:4:152:217	3866136	2	True				
ANR	3866158	IdentifierDecl	* sc = & ( sic -> streamcontexts [ FF_INLINK_IDX ( inlink ) ] )		3866136	0					
ANR	3866159	IdentifierDeclType	StreamContext *		3866136	0					
ANR	3866160	Identifier	sc		3866136	1					
ANR	3866161	AssignmentExpression	* sc = & ( sic -> streamcontexts [ FF_INLINK_IDX ( inlink ) ] )		3866136	2		=			
ANR	3866162	Identifier	sc		3866136	0					
ANR	3866163	UnaryOperationExpression	& ( sic -> streamcontexts [ FF_INLINK_IDX ( inlink ) ] )		3866136	1					
ANR	3866164	UnaryOperator	&		3866136	0					
ANR	3866165	ArrayIndexing	sic -> streamcontexts [ FF_INLINK_IDX ( inlink ) ]		3866136	1					
ANR	3866166	PtrMemberAccess	sic -> streamcontexts		3866136	0					
ANR	3866167	Identifier	sic		3866136	0					
ANR	3866168	Identifier	streamcontexts		3866136	1					
ANR	3866169	CallExpression	FF_INLINK_IDX ( inlink )		3866136	1					
ANR	3866170	Callee	FF_INLINK_IDX		3866136	0					
ANR	3866171	Identifier	FF_INLINK_IDX		3866136	0					
ANR	3866172	ArgumentList	inlink		3866136	1					
ANR	3866173	Argument	inlink		3866136	0					
ANR	3866174	Identifier	inlink		3866136	0					
ANR	3866175	IdentifierDeclStatement	FineSignature * fs ;	11:4:224:241	3866136	3	True				
ANR	3866176	IdentifierDecl	* fs		3866136	0					
ANR	3866177	IdentifierDeclType	FineSignature *		3866136	0					
ANR	3866178	Identifier	fs		3866136	1					
ANR	3866179	Statement	static	15:4:250:255	3866136	4	True				
ANR	3866180	IdentifierDeclStatement	"const uint8_t pot3 [ 5 ] = { 3 * 3 * 3 * 3 , 3 * 3 * 3 , 3 * 3 , 3 , 1 } ;"	15:11:257:310	3866136	5	True				
ANR	3866181	IdentifierDecl	"pot3 [ 5 ] = { 3 * 3 * 3 * 3 , 3 * 3 * 3 , 3 * 3 , 3 , 1 }"		3866136	0					
ANR	3866182	IdentifierDeclType	const uint8_t [ 5 ]		3866136	0					
ANR	3866183	Identifier	pot3		3866136	1					
ANR	3866184	PrimaryExpression	5		3866136	2					
ANR	3866185	AssignmentExpression	"pot3 [ 5 ] = { 3 * 3 * 3 * 3 , 3 * 3 * 3 , 3 * 3 , 3 , 1 }"		3866136	3		=			
ANR	3866186	Identifier	pot3		3866136	0					
ANR	3866187	InitializerList	3 * 3 * 3 * 3		3866136	1					
ANR	3866188	MultiplicativeExpression	3 * 3 * 3 * 3		3866136	0		*			
ANR	3866189	PrimaryExpression	3		3866136	0					
ANR	3866190	MultiplicativeExpression	3 * 3 * 3		3866136	1		*			
ANR	3866191	PrimaryExpression	3		3866136	0					
ANR	3866192	MultiplicativeExpression	3 * 3		3866136	1		*			
ANR	3866193	PrimaryExpression	3		3866136	0					
ANR	3866194	PrimaryExpression	3		3866136	1					
ANR	3866195	MultiplicativeExpression	3 * 3 * 3		3866136	1		*			
ANR	3866196	PrimaryExpression	3		3866136	0					
ANR	3866197	MultiplicativeExpression	3 * 3		3866136	1		*			
ANR	3866198	PrimaryExpression	3		3866136	0					
ANR	3866199	PrimaryExpression	3		3866136	1					
ANR	3866200	MultiplicativeExpression	3 * 3		3866136	2		*			
ANR	3866201	PrimaryExpression	3		3866136	0					
ANR	3866202	PrimaryExpression	3		3866136	1					
ANR	3866203	PrimaryExpression	3		3866136	3					
ANR	3866204	PrimaryExpression	1		3866136	4					
ANR	3866205	Statement	static	23:4:530:535	3866136	6	True				
ANR	3866206	IdentifierDeclStatement	"const unsigned int wordvec [ 25 ] = { 44 , 57 , 70 , 100 , 101 , 102 , 103 , 111 , 175 , 210 , 217 , 219 , 233 , 237 , 269 , 270 , 273 , 274 , 275 , 285 , 295 , 296 , 334 , 337 , 354 } ;"	23:11:537:668	3866136	7	True				
ANR	3866207	IdentifierDecl	"wordvec [ 25 ] = { 44 , 57 , 70 , 100 , 101 , 102 , 103 , 111 , 175 , 210 , 217 , 219 , 233 , 237 , 269 , 270 , 273 , 274 , 275 , 285 , 295 , 296 , 334 , 337 , 354 }"		3866136	0					
ANR	3866208	IdentifierDeclType	const unsigned int [ 25 ]		3866136	0					
ANR	3866209	Identifier	wordvec		3866136	1					
ANR	3866210	PrimaryExpression	25		3866136	2					
ANR	3866211	AssignmentExpression	"wordvec [ 25 ] = { 44 , 57 , 70 , 100 , 101 , 102 , 103 , 111 , 175 , 210 , 217 , 219 , 233 , 237 , 269 , 270 , 273 , 274 , 275 , 285 , 295 , 296 , 334 , 337 , 354 }"		3866136	3		=			
ANR	3866212	Identifier	wordvec		3866136	0					
ANR	3866213	InitializerList	44		3866136	1					
ANR	3866214	PrimaryExpression	44		3866136	0					
ANR	3866215	PrimaryExpression	57		3866136	1					
ANR	3866216	PrimaryExpression	70		3866136	2					
ANR	3866217	PrimaryExpression	100		3866136	3					
ANR	3866218	PrimaryExpression	101		3866136	4					
ANR	3866219	PrimaryExpression	102		3866136	5					
ANR	3866220	PrimaryExpression	103		3866136	6					
ANR	3866221	PrimaryExpression	111		3866136	7					
ANR	3866222	PrimaryExpression	175		3866136	8					
ANR	3866223	PrimaryExpression	210		3866136	9					
ANR	3866224	PrimaryExpression	217		3866136	10					
ANR	3866225	PrimaryExpression	219		3866136	11					
ANR	3866226	PrimaryExpression	233		3866136	12					
ANR	3866227	PrimaryExpression	237		3866136	13					
ANR	3866228	PrimaryExpression	269		3866136	14					
ANR	3866229	PrimaryExpression	270		3866136	15					
ANR	3866230	PrimaryExpression	273		3866136	16					
ANR	3866231	PrimaryExpression	274		3866136	17					
ANR	3866232	PrimaryExpression	275		3866136	18					
ANR	3866233	PrimaryExpression	285		3866136	19					
ANR	3866234	PrimaryExpression	295		3866136	20					
ANR	3866235	PrimaryExpression	296		3866136	21					
ANR	3866236	PrimaryExpression	334		3866136	22					
ANR	3866237	PrimaryExpression	337		3866136	23					
ANR	3866238	PrimaryExpression	354		3866136	24					
ANR	3866239	Statement	static	25:4:675:680	3866136	8	True				
ANR	3866240	IdentifierDeclStatement	"const uint8_t s2usw [ 25 ] = { 5 , 10 , 11 , 15 , 20 , 21 , 12 , 22 , 6 , 0 , 1 , 2 , 7 , 13 , 14 , 8 , 9 , 3 , 23 , 16 , 17 , 24 , 4 , 18 , 19 } ;"	25:11:682:813	3866136	9	True				
ANR	3866241	IdentifierDecl	"s2usw [ 25 ] = { 5 , 10 , 11 , 15 , 20 , 21 , 12 , 22 , 6 , 0 , 1 , 2 , 7 , 13 , 14 , 8 , 9 , 3 , 23 , 16 , 17 , 24 , 4 , 18 , 19 }"		3866136	0					
ANR	3866242	IdentifierDeclType	const uint8_t [ 25 ]		3866136	0					
ANR	3866243	Identifier	s2usw		3866136	1					
ANR	3866244	PrimaryExpression	25		3866136	2					
ANR	3866245	AssignmentExpression	"s2usw [ 25 ] = { 5 , 10 , 11 , 15 , 20 , 21 , 12 , 22 , 6 , 0 , 1 , 2 , 7 , 13 , 14 , 8 , 9 , 3 , 23 , 16 , 17 , 24 , 4 , 18 , 19 }"		3866136	3		=			
ANR	3866246	Identifier	s2usw		3866136	0					
ANR	3866247	InitializerList	5		3866136	1					
ANR	3866248	PrimaryExpression	5		3866136	0					
ANR	3866249	PrimaryExpression	10		3866136	1					
ANR	3866250	PrimaryExpression	11		3866136	2					
ANR	3866251	PrimaryExpression	15		3866136	3					
ANR	3866252	PrimaryExpression	20		3866136	4					
ANR	3866253	PrimaryExpression	21		3866136	5					
ANR	3866254	PrimaryExpression	12		3866136	6					
ANR	3866255	PrimaryExpression	22		3866136	7					
ANR	3866256	PrimaryExpression	6		3866136	8					
ANR	3866257	PrimaryExpression	0		3866136	9					
ANR	3866258	PrimaryExpression	1		3866136	10					
ANR	3866259	PrimaryExpression	2		3866136	11					
ANR	3866260	PrimaryExpression	7		3866136	12					
ANR	3866261	PrimaryExpression	13		3866136	13					
ANR	3866262	PrimaryExpression	14		3866136	14					
ANR	3866263	PrimaryExpression	8		3866136	15					
ANR	3866264	PrimaryExpression	9		3866136	16					
ANR	3866265	PrimaryExpression	3		3866136	17					
ANR	3866266	PrimaryExpression	23		3866136	18					
ANR	3866267	PrimaryExpression	16		3866136	19					
ANR	3866268	PrimaryExpression	17		3866136	20					
ANR	3866269	PrimaryExpression	24		3866136	21					
ANR	3866270	PrimaryExpression	4		3866136	22					
ANR	3866271	PrimaryExpression	18		3866136	23					
ANR	3866272	PrimaryExpression	19		3866136	24					
ANR	3866273	IdentifierDeclStatement	"uint8_t wordt2b [ 5 ] = { 0 , 0 , 0 , 0 , 0 } ;"	29:4:822:860	3866136	10	True				
ANR	3866274	IdentifierDecl	"wordt2b [ 5 ] = { 0 , 0 , 0 , 0 , 0 }"		3866136	0					
ANR	3866275	IdentifierDeclType	uint8_t [ 5 ]		3866136	0					
ANR	3866276	Identifier	wordt2b		3866136	1					
ANR	3866277	PrimaryExpression	5		3866136	2					
ANR	3866278	AssignmentExpression	"wordt2b [ 5 ] = { 0 , 0 , 0 , 0 , 0 }"		3866136	3		=			
ANR	3866279	Identifier	wordt2b		3866136	0					
ANR	3866280	InitializerList	0		3866136	1					
ANR	3866281	PrimaryExpression	0		3866136	0					
ANR	3866282	PrimaryExpression	0		3866136	1					
ANR	3866283	PrimaryExpression	0		3866136	2					
ANR	3866284	PrimaryExpression	0		3866136	3					
ANR	3866285	PrimaryExpression	0		3866136	4					
ANR	3866286	Statement	uint64_t	31:4:896:903	3866136	11	True				
ANR	3866287	ExpressionStatement	intpic [ 32 ] [ 32 ]	31:13:905:919	3866136	12	True				
ANR	3866288	ArrayIndexing	intpic [ 32 ] [ 32 ]		3866136	0					
ANR	3866289	ArrayIndexing	intpic [ 32 ]		3866136	0					
ANR	3866290	Identifier	intpic		3866136	0					
ANR	3866291	PrimaryExpression	32		3866136	1					
ANR	3866292	PrimaryExpression	32		3866136	1					
ANR	3866293	IdentifierDeclStatement	uint64_t rowcount ;	33:4:926:943	3866136	13	True				
ANR	3866294	IdentifierDecl	rowcount		3866136	0					
ANR	3866295	IdentifierDeclType	uint64_t		3866136	0					
ANR	3866296	Identifier	rowcount		3866136	1					
ANR	3866297	IdentifierDeclStatement	uint8_t * p = picref -> data [ 0 ] ;	35:4:950:978	3866136	14	True				
ANR	3866298	IdentifierDecl	* p = picref -> data [ 0 ]		3866136	0					
ANR	3866299	IdentifierDeclType	uint8_t *		3866136	0					
ANR	3866300	Identifier	p		3866136	1					
ANR	3866301	AssignmentExpression	* p = picref -> data [ 0 ]		3866136	2		=			
ANR	3866302	Identifier	p		3866136	0					
ANR	3866303	ArrayIndexing	picref -> data [ 0 ]		3866136	1					
ANR	3866304	PtrMemberAccess	picref -> data		3866136	0					
ANR	3866305	Identifier	picref		3866136	0					
ANR	3866306	Identifier	data		3866136	1					
ANR	3866307	PrimaryExpression	0		3866136	1					
ANR	3866308	IdentifierDeclStatement	"int inti , intj ;"	37:4:985:999	3866136	15	True				
ANR	3866309	IdentifierDecl	inti		3866136	0					
ANR	3866310	IdentifierDeclType	int		3866136	0					
ANR	3866311	Identifier	inti		3866136	1					
ANR	3866312	IdentifierDecl	intj		3866136	1					
ANR	3866313	IdentifierDeclType	int		3866136	0					
ANR	3866314	Identifier	intj		3866136	1					
ANR	3866315	IdentifierDeclStatement	int * intjlut ;	39:4:1006:1018	3866136	16	True				
ANR	3866316	IdentifierDecl	* intjlut		3866136	0					
ANR	3866317	IdentifierDeclType	int *		3866136	0					
ANR	3866318	Identifier	intjlut		3866136	1					
ANR	3866319	IdentifierDeclStatement	uint64_t conflist [ DIFFELEM_SIZE ] ;	43:4:1027:1059	3866136	17	True				
ANR	3866320	IdentifierDecl	conflist [ DIFFELEM_SIZE ]		3866136	0					
ANR	3866321	IdentifierDeclType	uint64_t [ DIFFELEM_SIZE ]		3866136	0					
ANR	3866322	Identifier	conflist		3866136	1					
ANR	3866323	Identifier	DIFFELEM_SIZE		3866136	2					
ANR	3866324	IdentifierDeclStatement	"int f = 0 , g = 0 , w = 0 ;"	45:4:1066:1089	3866136	18	True				
ANR	3866325	IdentifierDecl	f = 0		3866136	0					
ANR	3866326	IdentifierDeclType	int		3866136	0					
ANR	3866327	Identifier	f		3866136	1					
ANR	3866328	AssignmentExpression	f = 0		3866136	2		=			
ANR	3866329	Identifier	f		3866136	0					
ANR	3866330	PrimaryExpression	0		3866136	1					
ANR	3866331	IdentifierDecl	g = 0		3866136	1					
ANR	3866332	IdentifierDeclType	int		3866136	0					
ANR	3866333	Identifier	g		3866136	1					
ANR	3866334	AssignmentExpression	g = 0		3866136	2		=			
ANR	3866335	Identifier	g		3866136	0					
ANR	3866336	PrimaryExpression	0		3866136	1					
ANR	3866337	IdentifierDecl	w = 0		3866136	2					
ANR	3866338	IdentifierDeclType	int		3866136	0					
ANR	3866339	Identifier	w		3866136	1					
ANR	3866340	AssignmentExpression	w = 0		3866136	2		=			
ANR	3866341	Identifier	w		3866136	0					
ANR	3866342	PrimaryExpression	0		3866136	1					
ANR	3866343	IdentifierDeclStatement	"int32_t dh1 = 1 , dh2 = 1 , dw1 = 1 , dw2 = 1 , a , b ;"	47:4:1096:1144	3866136	19	True				
ANR	3866344	IdentifierDecl	dh1 = 1		3866136	0					
ANR	3866345	IdentifierDeclType	int32_t		3866136	0					
ANR	3866346	Identifier	dh1		3866136	1					
ANR	3866347	AssignmentExpression	dh1 = 1		3866136	2		=			
ANR	3866348	Identifier	dh1		3866136	0					
ANR	3866349	PrimaryExpression	1		3866136	1					
ANR	3866350	IdentifierDecl	dh2 = 1		3866136	1					
ANR	3866351	IdentifierDeclType	int32_t		3866136	0					
ANR	3866352	Identifier	dh2		3866136	1					
ANR	3866353	AssignmentExpression	dh2 = 1		3866136	2		=			
ANR	3866354	Identifier	dh2		3866136	0					
ANR	3866355	PrimaryExpression	1		3866136	1					
ANR	3866356	IdentifierDecl	dw1 = 1		3866136	2					
ANR	3866357	IdentifierDeclType	int32_t		3866136	0					
ANR	3866358	Identifier	dw1		3866136	1					
ANR	3866359	AssignmentExpression	dw1 = 1		3866136	2		=			
ANR	3866360	Identifier	dw1		3866136	0					
ANR	3866361	PrimaryExpression	1		3866136	1					
ANR	3866362	IdentifierDecl	dw2 = 1		3866136	3					
ANR	3866363	IdentifierDeclType	int32_t		3866136	0					
ANR	3866364	Identifier	dw2		3866136	1					
ANR	3866365	AssignmentExpression	dw2 = 1		3866136	2		=			
ANR	3866366	Identifier	dw2		3866136	0					
ANR	3866367	PrimaryExpression	1		3866136	1					
ANR	3866368	IdentifierDecl	a		3866136	4					
ANR	3866369	IdentifierDeclType	int32_t		3866136	0					
ANR	3866370	Identifier	a		3866136	1					
ANR	3866371	IdentifierDecl	b		3866136	5					
ANR	3866372	IdentifierDeclType	int32_t		3866136	0					
ANR	3866373	Identifier	b		3866136	1					
ANR	3866374	IdentifierDeclStatement	int64_t denom ;	49:4:1151:1164	3866136	20	True				
ANR	3866375	IdentifierDecl	denom		3866136	0					
ANR	3866376	IdentifierDeclType	int64_t		3866136	0					
ANR	3866377	Identifier	denom		3866136	1					
ANR	3866378	IdentifierDeclStatement	"int i , j , k , ternary ;"	51:4:1171:1191	3866136	21	True				
ANR	3866379	IdentifierDecl	i		3866136	0					
ANR	3866380	IdentifierDeclType	int		3866136	0					
ANR	3866381	Identifier	i		3866136	1					
ANR	3866382	IdentifierDecl	j		3866136	1					
ANR	3866383	IdentifierDeclType	int		3866136	0					
ANR	3866384	Identifier	j		3866136	1					
ANR	3866385	IdentifierDecl	k		3866136	2					
ANR	3866386	IdentifierDeclType	int		3866136	0					
ANR	3866387	Identifier	k		3866136	1					
ANR	3866388	IdentifierDecl	ternary		3866136	3					
ANR	3866389	IdentifierDeclType	int		3866136	0					
ANR	3866390	Identifier	ternary		3866136	1					
ANR	3866391	IdentifierDeclStatement	uint64_t blocksum ;	53:4:1198:1215	3866136	22	True				
ANR	3866392	IdentifierDecl	blocksum		3866136	0					
ANR	3866393	IdentifierDeclType	uint64_t		3866136	0					
ANR	3866394	Identifier	blocksum		3866136	1					
ANR	3866395	IdentifierDeclStatement	int blocksize ;	55:4:1222:1235	3866136	23	True				
ANR	3866396	IdentifierDecl	blocksize		3866136	0					
ANR	3866397	IdentifierDeclType	int		3866136	0					
ANR	3866398	Identifier	blocksize		3866136	1					
ANR	3866399	IdentifierDeclStatement	int64_t th ;	57:4:1242:1252	3866136	24	True				
ANR	3866400	IdentifierDecl	th		3866136	0					
ANR	3866401	IdentifierDeclType	int64_t		3866136	0					
ANR	3866402	Identifier	th		3866136	1					
ANR	3866403	IdentifierDeclStatement	int64_t sum ;	59:4:1275:1286	3866136	25	True				
ANR	3866404	IdentifierDecl	sum		3866136	0					
ANR	3866405	IdentifierDeclType	int64_t		3866136	0					
ANR	3866406	Identifier	sum		3866136	1					
ANR	3866407	IdentifierDeclStatement	int64_t precfactor = ( sc -> divide ) ? 65536 : BLOCK_LCM ;	63:4:1295:1348	3866136	26	True				
ANR	3866408	IdentifierDecl	precfactor = ( sc -> divide ) ? 65536 : BLOCK_LCM		3866136	0					
ANR	3866409	IdentifierDeclType	int64_t		3866136	0					
ANR	3866410	Identifier	precfactor		3866136	1					
ANR	3866411	AssignmentExpression	precfactor = ( sc -> divide ) ? 65536 : BLOCK_LCM		3866136	2		=			
ANR	3866412	Identifier	precfactor		3866136	0					
ANR	3866413	ConditionalExpression	( sc -> divide ) ? 65536 : BLOCK_LCM		3866136	1					
ANR	3866414	Condition	sc -> divide		3866136	0					
ANR	3866415	PtrMemberAccess	sc -> divide		3866136	0					
ANR	3866416	Identifier	sc		3866136	0					
ANR	3866417	Identifier	divide		3866136	1					
ANR	3866418	PrimaryExpression	65536		3866136	1					
ANR	3866419	Identifier	BLOCK_LCM		3866136	2					
ANR	3866420	IfStatement	if ( sc -> curfinesig )		3866136	27					
ANR	3866421	Condition	sc -> curfinesig	69:8:1386:1399	3866136	0	True				
ANR	3866422	PtrMemberAccess	sc -> curfinesig		3866136	0					
ANR	3866423	Identifier	sc		3866136	0					
ANR	3866424	Identifier	curfinesig		3866136	1					
ANR	3866425	CompoundStatement		67:24:1337:1337	3866136	1					
ANR	3866426	ExpressionStatement	fs = av_mallocz ( sizeof ( FineSignature ) )	71:8:1413:1451	3866136	0	True				
ANR	3866427	AssignmentExpression	fs = av_mallocz ( sizeof ( FineSignature ) )		3866136	0		=			
ANR	3866428	Identifier	fs		3866136	0					
ANR	3866429	CallExpression	av_mallocz ( sizeof ( FineSignature ) )		3866136	1					
ANR	3866430	Callee	av_mallocz		3866136	0					
ANR	3866431	Identifier	av_mallocz		3866136	0					
ANR	3866432	ArgumentList	sizeof ( FineSignature )		3866136	1					
ANR	3866433	Argument	sizeof ( FineSignature )		3866136	0					
ANR	3866434	SizeofExpression	sizeof ( FineSignature )		3866136	0					
ANR	3866435	Sizeof	sizeof		3866136	0					
ANR	3866436	SizeofOperand	FineSignature		3866136	1					
ANR	3866437	IfStatement	if ( ! fs )		3866136	1					
ANR	3866438	Condition	! fs	73:12:1466:1468	3866136	0	True				
ANR	3866439	UnaryOperationExpression	! fs		3866136	0					
ANR	3866440	UnaryOperator	!		3866136	0					
ANR	3866441	Identifier	fs		3866136	1					
ANR	3866442	ReturnStatement	return AVERROR ( ENOMEM ) ;	75:12:1484:1506	3866136	1	True				
ANR	3866443	CallExpression	AVERROR ( ENOMEM )		3866136	0					
ANR	3866444	Callee	AVERROR		3866136	0					
ANR	3866445	Identifier	AVERROR		3866136	0					
ANR	3866446	ArgumentList	ENOMEM		3866136	1					
ANR	3866447	Argument	ENOMEM		3866136	0					
ANR	3866448	Identifier	ENOMEM		3866136	0					
ANR	3866449	ExpressionStatement	sc -> curfinesig -> next = fs	77:8:1517:1542	3866136	2	True				
ANR	3866450	AssignmentExpression	sc -> curfinesig -> next = fs		3866136	0		=			
ANR	3866451	PtrMemberAccess	sc -> curfinesig -> next		3866136	0					
ANR	3866452	PtrMemberAccess	sc -> curfinesig		3866136	0					
ANR	3866453	Identifier	sc		3866136	0					
ANR	3866454	Identifier	curfinesig		3866136	1					
ANR	3866455	Identifier	next		3866136	1					
ANR	3866456	Identifier	fs		3866136	1					
ANR	3866457	ExpressionStatement	fs -> prev = sc -> curfinesig	79:8:1553:1578	3866136	3	True				
ANR	3866458	AssignmentExpression	fs -> prev = sc -> curfinesig		3866136	0		=			
ANR	3866459	PtrMemberAccess	fs -> prev		3866136	0					
ANR	3866460	Identifier	fs		3866136	0					
ANR	3866461	Identifier	prev		3866136	1					
ANR	3866462	PtrMemberAccess	sc -> curfinesig		3866136	1					
ANR	3866463	Identifier	sc		3866136	0					
ANR	3866464	Identifier	curfinesig		3866136	1					
ANR	3866465	ExpressionStatement	sc -> curfinesig = fs	81:8:1589:1608	3866136	4	True				
ANR	3866466	AssignmentExpression	sc -> curfinesig = fs		3866136	0		=			
ANR	3866467	PtrMemberAccess	sc -> curfinesig		3866136	0					
ANR	3866468	Identifier	sc		3866136	0					
ANR	3866469	Identifier	curfinesig		3866136	1					
ANR	3866470	Identifier	fs		3866136	1					
ANR	3866471	ElseStatement	else		3866136	0					
ANR	3866472	CompoundStatement		81:11:1557:1557	3866136	0					
ANR	3866473	ExpressionStatement	fs = sc -> curfinesig = sc -> finesiglist	85:8:1633:1670	3866136	0	True				
ANR	3866474	AssignmentExpression	fs = sc -> curfinesig = sc -> finesiglist		3866136	0		=			
ANR	3866475	Identifier	fs		3866136	0					
ANR	3866476	AssignmentExpression	sc -> curfinesig = sc -> finesiglist		3866136	1		=			
ANR	3866477	PtrMemberAccess	sc -> curfinesig		3866136	0					
ANR	3866478	Identifier	sc		3866136	0					
ANR	3866479	Identifier	curfinesig		3866136	1					
ANR	3866480	PtrMemberAccess	sc -> finesiglist		3866136	1					
ANR	3866481	Identifier	sc		3866136	0					
ANR	3866482	Identifier	finesiglist		3866136	1					
ANR	3866483	ExpressionStatement	sc -> curcoarsesig1 -> first = fs	87:8:1681:1710	3866136	1	True				
ANR	3866484	AssignmentExpression	sc -> curcoarsesig1 -> first = fs		3866136	0		=			
ANR	3866485	PtrMemberAccess	sc -> curcoarsesig1 -> first		3866136	0					
ANR	3866486	PtrMemberAccess	sc -> curcoarsesig1		3866136	0					
ANR	3866487	Identifier	sc		3866136	0					
ANR	3866488	Identifier	curcoarsesig1		3866136	1					
ANR	3866489	Identifier	first		3866136	1					
ANR	3866490	Identifier	fs		3866136	1					
ANR	3866491	ExpressionStatement	fs -> pts = picref -> pts	93:4:1726:1747	3866136	28	True				
ANR	3866492	AssignmentExpression	fs -> pts = picref -> pts		3866136	0		=			
ANR	3866493	PtrMemberAccess	fs -> pts		3866136	0					
ANR	3866494	Identifier	fs		3866136	0					
ANR	3866495	Identifier	pts		3866136	1					
ANR	3866496	PtrMemberAccess	picref -> pts		3866136	1					
ANR	3866497	Identifier	picref		3866136	0					
ANR	3866498	Identifier	pts		3866136	1					
ANR	3866499	ExpressionStatement	fs -> index = sc -> lastindex ++	95:4:1754:1781	3866136	29	True				
ANR	3866500	AssignmentExpression	fs -> index = sc -> lastindex ++		3866136	0		=			
ANR	3866501	PtrMemberAccess	fs -> index		3866136	0					
ANR	3866502	Identifier	fs		3866136	0					
ANR	3866503	Identifier	index		3866136	1					
ANR	3866504	PostIncDecOperationExpression	sc -> lastindex ++		3866136	1					
ANR	3866505	PtrMemberAccess	sc -> lastindex		3866136	0					
ANR	3866506	Identifier	sc		3866136	0					
ANR	3866507	Identifier	lastindex		3866136	1					
ANR	3866508	IncDec	++		3866136	1					
ANR	3866509	ExpressionStatement	"memset ( intpic , 0 , sizeof ( uint64_t ) * 32 * 32 )"	99:4:1790:1831	3866136	30	True				
ANR	3866510	CallExpression	"memset ( intpic , 0 , sizeof ( uint64_t ) * 32 * 32 )"		3866136	0					
ANR	3866511	Callee	memset		3866136	0					
ANR	3866512	Identifier	memset		3866136	0					
ANR	3866513	ArgumentList	intpic		3866136	1					
ANR	3866514	Argument	intpic		3866136	0					
ANR	3866515	Identifier	intpic		3866136	0					
ANR	3866516	Argument	0		3866136	1					
ANR	3866517	PrimaryExpression	0		3866136	0					
ANR	3866518	Argument	sizeof ( uint64_t ) * 32 * 32		3866136	2					
ANR	3866519	MultiplicativeExpression	sizeof ( uint64_t ) * 32 * 32		3866136	0		*			
ANR	3866520	SizeofExpression	sizeof ( uint64_t )		3866136	0					
ANR	3866521	Sizeof	sizeof		3866136	0					
ANR	3866522	SizeofOperand	uint64_t		3866136	1					
ANR	3866523	MultiplicativeExpression	32 * 32		3866136	1		*			
ANR	3866524	PrimaryExpression	32		3866136	0					
ANR	3866525	PrimaryExpression	32		3866136	1					
ANR	3866526	ExpressionStatement	"intjlut = av_malloc_array ( inlink -> w , sizeof ( int ) )"	101:4:1838:1887	3866136	31	True				
ANR	3866527	AssignmentExpression	"intjlut = av_malloc_array ( inlink -> w , sizeof ( int ) )"		3866136	0		=			
ANR	3866528	Identifier	intjlut		3866136	0					
ANR	3866529	CallExpression	"av_malloc_array ( inlink -> w , sizeof ( int ) )"		3866136	1					
ANR	3866530	Callee	av_malloc_array		3866136	0					
ANR	3866531	Identifier	av_malloc_array		3866136	0					
ANR	3866532	ArgumentList	inlink -> w		3866136	1					
ANR	3866533	Argument	inlink -> w		3866136	0					
ANR	3866534	PtrMemberAccess	inlink -> w		3866136	0					
ANR	3866535	Identifier	inlink		3866136	0					
ANR	3866536	Identifier	w		3866136	1					
ANR	3866537	Argument	sizeof ( int )		3866136	1					
ANR	3866538	SizeofExpression	sizeof ( int )		3866136	0					
ANR	3866539	Sizeof	sizeof		3866136	0					
ANR	3866540	SizeofOperand	int		3866136	1					
ANR	3866541	IfStatement	if ( ! intjlut )		3866136	32					
ANR	3866542	Condition	! intjlut	103:8:1898:1905	3866136	0	True				
ANR	3866543	UnaryOperationExpression	! intjlut		3866136	0					
ANR	3866544	UnaryOperator	!		3866136	0					
ANR	3866545	Identifier	intjlut		3866136	1					
ANR	3866546	ReturnStatement	return AVERROR ( ENOMEM ) ;	105:8:1917:1939	3866136	1	True				
ANR	3866547	CallExpression	AVERROR ( ENOMEM )		3866136	0					
ANR	3866548	Callee	AVERROR		3866136	0					
ANR	3866549	Identifier	AVERROR		3866136	0					
ANR	3866550	ArgumentList	ENOMEM		3866136	1					
ANR	3866551	Argument	ENOMEM		3866136	0					
ANR	3866552	Identifier	ENOMEM		3866136	0					
ANR	3866553	ForStatement	for ( i = 0 ; i < inlink -> w ; i ++ )		3866136	33					
ANR	3866554	ForInit	i = 0 ;	107:9:1951:1956	3866136	0	True				
ANR	3866555	AssignmentExpression	i = 0		3866136	0		=			
ANR	3866556	Identifier	i		3866136	0					
ANR	3866557	PrimaryExpression	0		3866136	1					
ANR	3866558	Condition	i < inlink -> w	107:16:1958:1970	3866136	1	True				
ANR	3866559	RelationalExpression	i < inlink -> w		3866136	0		<			
ANR	3866560	Identifier	i		3866136	0					
ANR	3866561	PtrMemberAccess	inlink -> w		3866136	1					
ANR	3866562	Identifier	inlink		3866136	0					
ANR	3866563	Identifier	w		3866136	1					
ANR	3866564	PostIncDecOperationExpression	i ++	107:31:1973:1975	3866136	2	True				
ANR	3866565	Identifier	i		3866136	0					
ANR	3866566	IncDec	++		3866136	1					
ANR	3866567	CompoundStatement		105:36:1913:1913	3866136	3					
ANR	3866568	ExpressionStatement	intjlut [ i ] = ( i * 32 ) / inlink -> w	109:8:1989:2018	3866136	0	True				
ANR	3866569	AssignmentExpression	intjlut [ i ] = ( i * 32 ) / inlink -> w		3866136	0		=			
ANR	3866570	ArrayIndexing	intjlut [ i ]		3866136	0					
ANR	3866571	Identifier	intjlut		3866136	0					
ANR	3866572	Identifier	i		3866136	1					
ANR	3866573	MultiplicativeExpression	( i * 32 ) / inlink -> w		3866136	1		/			
ANR	3866574	MultiplicativeExpression	i * 32		3866136	0		*			
ANR	3866575	Identifier	i		3866136	0					
ANR	3866576	PrimaryExpression	32		3866136	1					
ANR	3866577	PtrMemberAccess	inlink -> w		3866136	1					
ANR	3866578	Identifier	inlink		3866136	0					
ANR	3866579	Identifier	w		3866136	1					
ANR	3866580	ForStatement	for ( i = 0 ; i < inlink -> h ; i ++ )		3866136	34					
ANR	3866581	ForInit	i = 0 ;	115:9:2039:2044	3866136	0	True				
ANR	3866582	AssignmentExpression	i = 0		3866136	0		=			
ANR	3866583	Identifier	i		3866136	0					
ANR	3866584	PrimaryExpression	0		3866136	1					
ANR	3866585	Condition	i < inlink -> h	115:16:2046:2058	3866136	1	True				
ANR	3866586	RelationalExpression	i < inlink -> h		3866136	0		<			
ANR	3866587	Identifier	i		3866136	0					
ANR	3866588	PtrMemberAccess	inlink -> h		3866136	1					
ANR	3866589	Identifier	inlink		3866136	0					
ANR	3866590	Identifier	h		3866136	1					
ANR	3866591	PostIncDecOperationExpression	i ++	115:31:2061:2063	3866136	2	True				
ANR	3866592	Identifier	i		3866136	0					
ANR	3866593	IncDec	++		3866136	1					
ANR	3866594	CompoundStatement		113:36:2001:2001	3866136	3					
ANR	3866595	ExpressionStatement	inti = ( i * 32 ) / inlink -> h	117:8:2077:2100	3866136	0	True				
ANR	3866596	AssignmentExpression	inti = ( i * 32 ) / inlink -> h		3866136	0		=			
ANR	3866597	Identifier	inti		3866136	0					
ANR	3866598	MultiplicativeExpression	( i * 32 ) / inlink -> h		3866136	1		/			
ANR	3866599	MultiplicativeExpression	i * 32		3866136	0		*			
ANR	3866600	Identifier	i		3866136	0					
ANR	3866601	PrimaryExpression	32		3866136	1					
ANR	3866602	PtrMemberAccess	inlink -> h		3866136	1					
ANR	3866603	Identifier	inlink		3866136	0					
ANR	3866604	Identifier	h		3866136	1					
ANR	3866605	ForStatement	for ( j = 0 ; j < inlink -> w ; j ++ )		3866136	1					
ANR	3866606	ForInit	j = 0 ;	119:13:2116:2121	3866136	0	True				
ANR	3866607	AssignmentExpression	j = 0		3866136	0		=			
ANR	3866608	Identifier	j		3866136	0					
ANR	3866609	PrimaryExpression	0		3866136	1					
ANR	3866610	Condition	j < inlink -> w	119:20:2123:2135	3866136	1	True				
ANR	3866611	RelationalExpression	j < inlink -> w		3866136	0		<			
ANR	3866612	Identifier	j		3866136	0					
ANR	3866613	PtrMemberAccess	inlink -> w		3866136	1					
ANR	3866614	Identifier	inlink		3866136	0					
ANR	3866615	Identifier	w		3866136	1					
ANR	3866616	PostIncDecOperationExpression	j ++	119:35:2138:2140	3866136	2	True				
ANR	3866617	Identifier	j		3866136	0					
ANR	3866618	IncDec	++		3866136	1					
ANR	3866619	CompoundStatement		117:40:2078:2078	3866136	3					
ANR	3866620	ExpressionStatement	intj = intjlut [ j ]	121:12:2158:2175	3866136	0	True				
ANR	3866621	AssignmentExpression	intj = intjlut [ j ]		3866136	0		=			
ANR	3866622	Identifier	intj		3866136	0					
ANR	3866623	ArrayIndexing	intjlut [ j ]		3866136	1					
ANR	3866624	Identifier	intjlut		3866136	0					
ANR	3866625	Identifier	j		3866136	1					
ANR	3866626	ExpressionStatement	intpic [ inti ] [ intj ] += p [ j ]	123:12:2190:2216	3866136	1	True				
ANR	3866627	AssignmentExpression	intpic [ inti ] [ intj ] += p [ j ]		3866136	0		+=			
ANR	3866628	ArrayIndexing	intpic [ inti ] [ intj ]		3866136	0					
ANR	3866629	ArrayIndexing	intpic [ inti ]		3866136	0					
ANR	3866630	Identifier	intpic		3866136	0					
ANR	3866631	Identifier	inti		3866136	1					
ANR	3866632	Identifier	intj		3866136	1					
ANR	3866633	ArrayIndexing	p [ j ]		3866136	1					
ANR	3866634	Identifier	p		3866136	0					
ANR	3866635	Identifier	j		3866136	1					
ANR	3866636	ExpressionStatement	p += picref -> linesize [ 0 ]	127:8:2238:2262	3866136	2	True				
ANR	3866637	AssignmentExpression	p += picref -> linesize [ 0 ]		3866136	0		+=			
ANR	3866638	Identifier	p		3866136	0					
ANR	3866639	ArrayIndexing	picref -> linesize [ 0 ]		3866136	1					
ANR	3866640	PtrMemberAccess	picref -> linesize		3866136	0					
ANR	3866641	Identifier	picref		3866136	0					
ANR	3866642	Identifier	linesize		3866136	1					
ANR	3866643	PrimaryExpression	0		3866136	1					
ANR	3866644	ExpressionStatement	av_freep ( & intjlut )	131:4:2276:2294	3866136	35	True				
ANR	3866645	CallExpression	av_freep ( & intjlut )		3866136	0					
ANR	3866646	Callee	av_freep		3866136	0					
ANR	3866647	Identifier	av_freep		3866136	0					
ANR	3866648	ArgumentList	& intjlut		3866136	1					
ANR	3866649	Argument	& intjlut		3866136	0					
ANR	3866650	UnaryOperationExpression	& intjlut		3866136	0					
ANR	3866651	UnaryOperator	&		3866136	0					
ANR	3866652	Identifier	intjlut		3866136	1					
ANR	3866653	ExpressionStatement	dh1 = inlink -> h / 32	143:4:2516:2536	3866136	36	True				
ANR	3866654	AssignmentExpression	dh1 = inlink -> h / 32		3866136	0		=			
ANR	3866655	Identifier	dh1		3866136	0					
ANR	3866656	MultiplicativeExpression	inlink -> h / 32		3866136	1		/			
ANR	3866657	PtrMemberAccess	inlink -> h		3866136	0					
ANR	3866658	Identifier	inlink		3866136	0					
ANR	3866659	Identifier	h		3866136	1					
ANR	3866660	PrimaryExpression	32		3866136	1					
ANR	3866661	IfStatement	if ( inlink -> h % 32 )		3866136	37					
ANR	3866662	Condition	inlink -> h % 32	145:8:2547:2560	3866136	0	True				
ANR	3866663	MultiplicativeExpression	inlink -> h % 32		3866136	0		%			
ANR	3866664	PtrMemberAccess	inlink -> h		3866136	0					
ANR	3866665	Identifier	inlink		3866136	0					
ANR	3866666	Identifier	h		3866136	1					
ANR	3866667	PrimaryExpression	32		3866136	1					
ANR	3866668	ExpressionStatement	dh2 = dh1 + 1	147:8:2572:2585	3866136	1	True				
ANR	3866669	AssignmentExpression	dh2 = dh1 + 1		3866136	0		=			
ANR	3866670	Identifier	dh2		3866136	0					
ANR	3866671	AdditiveExpression	dh1 + 1		3866136	1		+			
ANR	3866672	Identifier	dh1		3866136	0					
ANR	3866673	PrimaryExpression	1		3866136	1					
ANR	3866674	ExpressionStatement	dw1 = inlink -> w / 32	149:4:2592:2612	3866136	38	True				
ANR	3866675	AssignmentExpression	dw1 = inlink -> w / 32		3866136	0		=			
ANR	3866676	Identifier	dw1		3866136	0					
ANR	3866677	MultiplicativeExpression	inlink -> w / 32		3866136	1		/			
ANR	3866678	PtrMemberAccess	inlink -> w		3866136	0					
ANR	3866679	Identifier	inlink		3866136	0					
ANR	3866680	Identifier	w		3866136	1					
ANR	3866681	PrimaryExpression	32		3866136	1					
ANR	3866682	IfStatement	if ( inlink -> w % 32 )		3866136	39					
ANR	3866683	Condition	inlink -> w % 32	151:8:2623:2636	3866136	0	True				
ANR	3866684	MultiplicativeExpression	inlink -> w % 32		3866136	0		%			
ANR	3866685	PtrMemberAccess	inlink -> w		3866136	0					
ANR	3866686	Identifier	inlink		3866136	0					
ANR	3866687	Identifier	w		3866136	1					
ANR	3866688	PrimaryExpression	32		3866136	1					
ANR	3866689	ExpressionStatement	dw2 = dw1 + 1	153:8:2648:2661	3866136	1	True				
ANR	3866690	AssignmentExpression	dw2 = dw1 + 1		3866136	0		=			
ANR	3866691	Identifier	dw2		3866136	0					
ANR	3866692	AdditiveExpression	dw1 + 1		3866136	1		+			
ANR	3866693	Identifier	dw1		3866136	0					
ANR	3866694	PrimaryExpression	1		3866136	1					
ANR	3866695	ExpressionStatement	denom = ( sc -> divide ) ? dh1 * dh2 * dw1 * dw2 : 1	155:4:2668:2716	3866136	40	True				
ANR	3866696	AssignmentExpression	denom = ( sc -> divide ) ? dh1 * dh2 * dw1 * dw2 : 1		3866136	0		=			
ANR	3866697	Identifier	denom		3866136	0					
ANR	3866698	ConditionalExpression	( sc -> divide ) ? dh1 * dh2 * dw1 * dw2 : 1		3866136	1					
ANR	3866699	Condition	sc -> divide		3866136	0					
ANR	3866700	PtrMemberAccess	sc -> divide		3866136	0					
ANR	3866701	Identifier	sc		3866136	0					
ANR	3866702	Identifier	divide		3866136	1					
ANR	3866703	MultiplicativeExpression	dh1 * dh2 * dw1 * dw2		3866136	1		*			
ANR	3866704	Identifier	dh1		3866136	0					
ANR	3866705	MultiplicativeExpression	dh2 * dw1 * dw2		3866136	1		*			
ANR	3866706	Identifier	dh2		3866136	0					
ANR	3866707	MultiplicativeExpression	dw1 * dw2		3866136	1		*			
ANR	3866708	Identifier	dw1		3866136	0					
ANR	3866709	Identifier	dw2		3866136	1					
ANR	3866710	PrimaryExpression	1		3866136	2					
ANR	3866711	ForStatement	for ( i = 0 ; i < 32 ; i ++ )		3866136	41					
ANR	3866712	ForInit	i = 0 ;	159:9:2730:2735	3866136	0	True				
ANR	3866713	AssignmentExpression	i = 0		3866136	0		=			
ANR	3866714	Identifier	i		3866136	0					
ANR	3866715	PrimaryExpression	0		3866136	1					
ANR	3866716	Condition	i < 32	159:16:2737:2742	3866136	1	True				
ANR	3866717	RelationalExpression	i < 32		3866136	0		<			
ANR	3866718	Identifier	i		3866136	0					
ANR	3866719	PrimaryExpression	32		3866136	1					
ANR	3866720	PostIncDecOperationExpression	i ++	159:24:2745:2747	3866136	2	True				
ANR	3866721	Identifier	i		3866136	0					
ANR	3866722	IncDec	++		3866136	1					
ANR	3866723	CompoundStatement		157:29:2685:2685	3866136	3					
ANR	3866724	ExpressionStatement	rowcount = 0	161:8:2761:2773	3866136	0	True				
ANR	3866725	AssignmentExpression	rowcount = 0		3866136	0		=			
ANR	3866726	Identifier	rowcount		3866136	0					
ANR	3866727	PrimaryExpression	0		3866136	1					
ANR	3866728	ExpressionStatement	a = 1	163:8:2784:2789	3866136	1	True				
ANR	3866729	AssignmentExpression	a = 1		3866136	0		=			
ANR	3866730	Identifier	a		3866136	0					
ANR	3866731	PrimaryExpression	1		3866136	1					
ANR	3866732	IfStatement	if ( dh2 > 1 )		3866136	2					
ANR	3866733	Condition	dh2 > 1	165:12:2804:2810	3866136	0	True				
ANR	3866734	RelationalExpression	dh2 > 1		3866136	0		>			
ANR	3866735	Identifier	dh2		3866136	0					
ANR	3866736	PrimaryExpression	1		3866136	1					
ANR	3866737	CompoundStatement		163:21:2748:2748	3866136	1					
ANR	3866738	ExpressionStatement	a = ( ( inlink -> h * ( i + 1 ) ) % 32 == 0 ) ? ( inlink -> h * ( i + 1 ) ) / 32 - 1 : ( inlink -> h * ( i + 1 ) ) / 32	167:12:2828:2909	3866136	0	True				
ANR	3866739	AssignmentExpression	a = ( ( inlink -> h * ( i + 1 ) ) % 32 == 0 ) ? ( inlink -> h * ( i + 1 ) ) / 32 - 1 : ( inlink -> h * ( i + 1 ) ) / 32		3866136	0		=			
ANR	3866740	Identifier	a		3866136	0					
ANR	3866741	ConditionalExpression	( ( inlink -> h * ( i + 1 ) ) % 32 == 0 ) ? ( inlink -> h * ( i + 1 ) ) / 32 - 1 : ( inlink -> h * ( i + 1 ) ) / 32		3866136	1					
ANR	3866742	Condition	( inlink -> h * ( i + 1 ) ) % 32 == 0		3866136	0					
ANR	3866743	EqualityExpression	( inlink -> h * ( i + 1 ) ) % 32 == 0		3866136	0		==			
ANR	3866744	MultiplicativeExpression	( inlink -> h * ( i + 1 ) ) % 32		3866136	0		%			
ANR	3866745	MultiplicativeExpression	inlink -> h * ( i + 1 )		3866136	0		*			
ANR	3866746	PtrMemberAccess	inlink -> h		3866136	0					
ANR	3866747	Identifier	inlink		3866136	0					
ANR	3866748	Identifier	h		3866136	1					
ANR	3866749	AdditiveExpression	i + 1		3866136	1		+			
ANR	3866750	Identifier	i		3866136	0					
ANR	3866751	PrimaryExpression	1		3866136	1					
ANR	3866752	PrimaryExpression	32		3866136	1					
ANR	3866753	PrimaryExpression	0		3866136	1					
ANR	3866754	AdditiveExpression	( inlink -> h * ( i + 1 ) ) / 32 - 1		3866136	1		-			
ANR	3866755	MultiplicativeExpression	( inlink -> h * ( i + 1 ) ) / 32		3866136	0		/			
ANR	3866756	MultiplicativeExpression	inlink -> h * ( i + 1 )		3866136	0		*			
ANR	3866757	PtrMemberAccess	inlink -> h		3866136	0					
ANR	3866758	Identifier	inlink		3866136	0					
ANR	3866759	Identifier	h		3866136	1					
ANR	3866760	AdditiveExpression	i + 1		3866136	1		+			
ANR	3866761	Identifier	i		3866136	0					
ANR	3866762	PrimaryExpression	1		3866136	1					
ANR	3866763	PrimaryExpression	32		3866136	1					
ANR	3866764	PrimaryExpression	1		3866136	1					
ANR	3866765	MultiplicativeExpression	( inlink -> h * ( i + 1 ) ) / 32		3866136	2		/			
ANR	3866766	MultiplicativeExpression	inlink -> h * ( i + 1 )		3866136	0		*			
ANR	3866767	PtrMemberAccess	inlink -> h		3866136	0					
ANR	3866768	Identifier	inlink		3866136	0					
ANR	3866769	Identifier	h		3866136	1					
ANR	3866770	AdditiveExpression	i + 1		3866136	1		+			
ANR	3866771	Identifier	i		3866136	0					
ANR	3866772	PrimaryExpression	1		3866136	1					
ANR	3866773	PrimaryExpression	32		3866136	1					
ANR	3866774	ExpressionStatement	a -= ( ( inlink -> h * i ) % 32 == 0 ) ? ( inlink -> h * i ) / 32 - 1 : ( inlink -> h * i ) / 32	169:12:2924:2994	3866136	1	True				
ANR	3866775	AssignmentExpression	a -= ( ( inlink -> h * i ) % 32 == 0 ) ? ( inlink -> h * i ) / 32 - 1 : ( inlink -> h * i ) / 32		3866136	0		-=			
ANR	3866776	Identifier	a		3866136	0					
ANR	3866777	ConditionalExpression	( ( inlink -> h * i ) % 32 == 0 ) ? ( inlink -> h * i ) / 32 - 1 : ( inlink -> h * i ) / 32		3866136	1					
ANR	3866778	Condition	( inlink -> h * i ) % 32 == 0		3866136	0					
ANR	3866779	EqualityExpression	( inlink -> h * i ) % 32 == 0		3866136	0		==			
ANR	3866780	MultiplicativeExpression	( inlink -> h * i ) % 32		3866136	0		%			
ANR	3866781	MultiplicativeExpression	inlink -> h * i		3866136	0		*			
ANR	3866782	PtrMemberAccess	inlink -> h		3866136	0					
ANR	3866783	Identifier	inlink		3866136	0					
ANR	3866784	Identifier	h		3866136	1					
ANR	3866785	Identifier	i		3866136	1					
ANR	3866786	PrimaryExpression	32		3866136	1					
ANR	3866787	PrimaryExpression	0		3866136	1					
ANR	3866788	AdditiveExpression	( inlink -> h * i ) / 32 - 1		3866136	1		-			
ANR	3866789	MultiplicativeExpression	( inlink -> h * i ) / 32		3866136	0		/			
ANR	3866790	MultiplicativeExpression	inlink -> h * i		3866136	0		*			
ANR	3866791	PtrMemberAccess	inlink -> h		3866136	0					
ANR	3866792	Identifier	inlink		3866136	0					
ANR	3866793	Identifier	h		3866136	1					
ANR	3866794	Identifier	i		3866136	1					
ANR	3866795	PrimaryExpression	32		3866136	1					
ANR	3866796	PrimaryExpression	1		3866136	1					
ANR	3866797	MultiplicativeExpression	( inlink -> h * i ) / 32		3866136	2		/			
ANR	3866798	MultiplicativeExpression	inlink -> h * i		3866136	0		*			
ANR	3866799	PtrMemberAccess	inlink -> h		3866136	0					
ANR	3866800	Identifier	inlink		3866136	0					
ANR	3866801	Identifier	h		3866136	1					
ANR	3866802	Identifier	i		3866136	1					
ANR	3866803	PrimaryExpression	32		3866136	1					
ANR	3866804	ExpressionStatement	a = ( a == dh1 ) ? dh2 : dh1	171:12:3009:3034	3866136	2	True				
ANR	3866805	AssignmentExpression	a = ( a == dh1 ) ? dh2 : dh1		3866136	0		=			
ANR	3866806	Identifier	a		3866136	0					
ANR	3866807	ConditionalExpression	( a == dh1 ) ? dh2 : dh1		3866136	1					
ANR	3866808	Condition	a == dh1		3866136	0					
ANR	3866809	EqualityExpression	a == dh1		3866136	0		==			
ANR	3866810	Identifier	a		3866136	0					
ANR	3866811	Identifier	dh1		3866136	1					
ANR	3866812	Identifier	dh2		3866136	1					
ANR	3866813	Identifier	dh1		3866136	2					
ANR	3866814	ForStatement	for ( j = 0 ; j < 32 ; j ++ )		3866136	3					
ANR	3866815	ForInit	j = 0 ;	175:13:3061:3066	3866136	0	True				
ANR	3866816	AssignmentExpression	j = 0		3866136	0		=			
ANR	3866817	Identifier	j		3866136	0					
ANR	3866818	PrimaryExpression	0		3866136	1					
ANR	3866819	Condition	j < 32	175:20:3068:3073	3866136	1	True				
ANR	3866820	RelationalExpression	j < 32		3866136	0		<			
ANR	3866821	Identifier	j		3866136	0					
ANR	3866822	PrimaryExpression	32		3866136	1					
ANR	3866823	PostIncDecOperationExpression	j ++	175:28:3076:3078	3866136	2	True				
ANR	3866824	Identifier	j		3866136	0					
ANR	3866825	IncDec	++		3866136	1					
ANR	3866826	CompoundStatement		173:33:3016:3016	3866136	3					
ANR	3866827	ExpressionStatement	b = 1	177:12:3096:3101	3866136	0	True				
ANR	3866828	AssignmentExpression	b = 1		3866136	0		=			
ANR	3866829	Identifier	b		3866136	0					
ANR	3866830	PrimaryExpression	1		3866136	1					
ANR	3866831	IfStatement	if ( dw2 > 1 )		3866136	1					
ANR	3866832	Condition	dw2 > 1	179:16:3120:3126	3866136	0	True				
ANR	3866833	RelationalExpression	dw2 > 1		3866136	0		>			
ANR	3866834	Identifier	dw2		3866136	0					
ANR	3866835	PrimaryExpression	1		3866136	1					
ANR	3866836	CompoundStatement		177:25:3064:3064	3866136	1					
ANR	3866837	ExpressionStatement	b = ( ( inlink -> w * ( j + 1 ) ) % 32 == 0 ) ? ( inlink -> w * ( j + 1 ) ) / 32 - 1 : ( inlink -> w * ( j + 1 ) ) / 32	181:16:3148:3229	3866136	0	True				
ANR	3866838	AssignmentExpression	b = ( ( inlink -> w * ( j + 1 ) ) % 32 == 0 ) ? ( inlink -> w * ( j + 1 ) ) / 32 - 1 : ( inlink -> w * ( j + 1 ) ) / 32		3866136	0		=			
ANR	3866839	Identifier	b		3866136	0					
ANR	3866840	ConditionalExpression	( ( inlink -> w * ( j + 1 ) ) % 32 == 0 ) ? ( inlink -> w * ( j + 1 ) ) / 32 - 1 : ( inlink -> w * ( j + 1 ) ) / 32		3866136	1					
ANR	3866841	Condition	( inlink -> w * ( j + 1 ) ) % 32 == 0		3866136	0					
ANR	3866842	EqualityExpression	( inlink -> w * ( j + 1 ) ) % 32 == 0		3866136	0		==			
ANR	3866843	MultiplicativeExpression	( inlink -> w * ( j + 1 ) ) % 32		3866136	0		%			
ANR	3866844	MultiplicativeExpression	inlink -> w * ( j + 1 )		3866136	0		*			
ANR	3866845	PtrMemberAccess	inlink -> w		3866136	0					
ANR	3866846	Identifier	inlink		3866136	0					
ANR	3866847	Identifier	w		3866136	1					
ANR	3866848	AdditiveExpression	j + 1		3866136	1		+			
ANR	3866849	Identifier	j		3866136	0					
ANR	3866850	PrimaryExpression	1		3866136	1					
ANR	3866851	PrimaryExpression	32		3866136	1					
ANR	3866852	PrimaryExpression	0		3866136	1					
ANR	3866853	AdditiveExpression	( inlink -> w * ( j + 1 ) ) / 32 - 1		3866136	1		-			
ANR	3866854	MultiplicativeExpression	( inlink -> w * ( j + 1 ) ) / 32		3866136	0		/			
ANR	3866855	MultiplicativeExpression	inlink -> w * ( j + 1 )		3866136	0		*			
ANR	3866856	PtrMemberAccess	inlink -> w		3866136	0					
ANR	3866857	Identifier	inlink		3866136	0					
ANR	3866858	Identifier	w		3866136	1					
ANR	3866859	AdditiveExpression	j + 1		3866136	1		+			
ANR	3866860	Identifier	j		3866136	0					
ANR	3866861	PrimaryExpression	1		3866136	1					
ANR	3866862	PrimaryExpression	32		3866136	1					
ANR	3866863	PrimaryExpression	1		3866136	1					
ANR	3866864	MultiplicativeExpression	( inlink -> w * ( j + 1 ) ) / 32		3866136	2		/			
ANR	3866865	MultiplicativeExpression	inlink -> w * ( j + 1 )		3866136	0		*			
ANR	3866866	PtrMemberAccess	inlink -> w		3866136	0					
ANR	3866867	Identifier	inlink		3866136	0					
ANR	3866868	Identifier	w		3866136	1					
ANR	3866869	AdditiveExpression	j + 1		3866136	1		+			
ANR	3866870	Identifier	j		3866136	0					
ANR	3866871	PrimaryExpression	1		3866136	1					
ANR	3866872	PrimaryExpression	32		3866136	1					
ANR	3866873	ExpressionStatement	b -= ( ( inlink -> w * j ) % 32 == 0 ) ? ( inlink -> w * j ) / 32 - 1 : ( inlink -> w * j ) / 32	183:16:3248:3318	3866136	1	True				
ANR	3866874	AssignmentExpression	b -= ( ( inlink -> w * j ) % 32 == 0 ) ? ( inlink -> w * j ) / 32 - 1 : ( inlink -> w * j ) / 32		3866136	0		-=			
ANR	3866875	Identifier	b		3866136	0					
ANR	3866876	ConditionalExpression	( ( inlink -> w * j ) % 32 == 0 ) ? ( inlink -> w * j ) / 32 - 1 : ( inlink -> w * j ) / 32		3866136	1					
ANR	3866877	Condition	( inlink -> w * j ) % 32 == 0		3866136	0					
ANR	3866878	EqualityExpression	( inlink -> w * j ) % 32 == 0		3866136	0		==			
ANR	3866879	MultiplicativeExpression	( inlink -> w * j ) % 32		3866136	0		%			
ANR	3866880	MultiplicativeExpression	inlink -> w * j		3866136	0		*			
ANR	3866881	PtrMemberAccess	inlink -> w		3866136	0					
ANR	3866882	Identifier	inlink		3866136	0					
ANR	3866883	Identifier	w		3866136	1					
ANR	3866884	Identifier	j		3866136	1					
ANR	3866885	PrimaryExpression	32		3866136	1					
ANR	3866886	PrimaryExpression	0		3866136	1					
ANR	3866887	AdditiveExpression	( inlink -> w * j ) / 32 - 1		3866136	1		-			
ANR	3866888	MultiplicativeExpression	( inlink -> w * j ) / 32		3866136	0		/			
ANR	3866889	MultiplicativeExpression	inlink -> w * j		3866136	0		*			
ANR	3866890	PtrMemberAccess	inlink -> w		3866136	0					
ANR	3866891	Identifier	inlink		3866136	0					
ANR	3866892	Identifier	w		3866136	1					
ANR	3866893	Identifier	j		3866136	1					
ANR	3866894	PrimaryExpression	32		3866136	1					
ANR	3866895	PrimaryExpression	1		3866136	1					
ANR	3866896	MultiplicativeExpression	( inlink -> w * j ) / 32		3866136	2		/			
ANR	3866897	MultiplicativeExpression	inlink -> w * j		3866136	0		*			
ANR	3866898	PtrMemberAccess	inlink -> w		3866136	0					
ANR	3866899	Identifier	inlink		3866136	0					
ANR	3866900	Identifier	w		3866136	1					
ANR	3866901	Identifier	j		3866136	1					
ANR	3866902	PrimaryExpression	32		3866136	1					
ANR	3866903	ExpressionStatement	b = ( b == dw1 ) ? dw2 : dw1	185:16:3337:3362	3866136	2	True				
ANR	3866904	AssignmentExpression	b = ( b == dw1 ) ? dw2 : dw1		3866136	0		=			
ANR	3866905	Identifier	b		3866136	0					
ANR	3866906	ConditionalExpression	( b == dw1 ) ? dw2 : dw1		3866136	1					
ANR	3866907	Condition	b == dw1		3866136	0					
ANR	3866908	EqualityExpression	b == dw1		3866136	0		==			
ANR	3866909	Identifier	b		3866136	0					
ANR	3866910	Identifier	dw1		3866136	1					
ANR	3866911	Identifier	dw2		3866136	1					
ANR	3866912	Identifier	dw1		3866136	2					
ANR	3866913	ExpressionStatement	rowcount += intpic [ i ] [ j ] * a * b * precfactor / denom	189:12:3392:3445	3866136	2	True				
ANR	3866914	AssignmentExpression	rowcount += intpic [ i ] [ j ] * a * b * precfactor / denom		3866136	0		+=			
ANR	3866915	Identifier	rowcount		3866136	0					
ANR	3866916	MultiplicativeExpression	intpic [ i ] [ j ] * a * b * precfactor / denom		3866136	1		*			
ANR	3866917	ArrayIndexing	intpic [ i ] [ j ]		3866136	0					
ANR	3866918	ArrayIndexing	intpic [ i ]		3866136	0					
ANR	3866919	Identifier	intpic		3866136	0					
ANR	3866920	Identifier	i		3866136	1					
ANR	3866921	Identifier	j		3866136	1					
ANR	3866922	MultiplicativeExpression	a * b * precfactor / denom		3866136	1		*			
ANR	3866923	Identifier	a		3866136	0					
ANR	3866924	MultiplicativeExpression	b * precfactor / denom		3866136	1		*			
ANR	3866925	Identifier	b		3866136	0					
ANR	3866926	MultiplicativeExpression	precfactor / denom		3866136	1		/			
ANR	3866927	Identifier	precfactor		3866136	0					
ANR	3866928	Identifier	denom		3866136	1					
ANR	3866929	IfStatement	if ( i > 0 )		3866136	3					
ANR	3866930	Condition	i > 0	191:16:3464:3468	3866136	0	True				
ANR	3866931	RelationalExpression	i > 0		3866136	0		>			
ANR	3866932	Identifier	i		3866136	0					
ANR	3866933	PrimaryExpression	0		3866136	1					
ANR	3866934	CompoundStatement		189:23:3406:3406	3866136	1					
ANR	3866935	ExpressionStatement	intpic [ i ] [ j ] = intpic [ i - 1 ] [ j ] + rowcount	193:16:3490:3530	3866136	0	True				
ANR	3866936	AssignmentExpression	intpic [ i ] [ j ] = intpic [ i - 1 ] [ j ] + rowcount		3866136	0		=			
ANR	3866937	ArrayIndexing	intpic [ i ] [ j ]		3866136	0					
ANR	3866938	ArrayIndexing	intpic [ i ]		3866136	0					
ANR	3866939	Identifier	intpic		3866136	0					
ANR	3866940	Identifier	i		3866136	1					
ANR	3866941	Identifier	j		3866136	1					
ANR	3866942	AdditiveExpression	intpic [ i - 1 ] [ j ] + rowcount		3866136	1		+			
ANR	3866943	ArrayIndexing	intpic [ i - 1 ] [ j ]		3866136	0					
ANR	3866944	ArrayIndexing	intpic [ i - 1 ]		3866136	0					
ANR	3866945	Identifier	intpic		3866136	0					
ANR	3866946	AdditiveExpression	i - 1		3866136	1		-			
ANR	3866947	Identifier	i		3866136	0					
ANR	3866948	PrimaryExpression	1		3866136	1					
ANR	3866949	Identifier	j		3866136	1					
ANR	3866950	Identifier	rowcount		3866136	1					
ANR	3866951	ElseStatement	else		3866136	0					
ANR	3866952	CompoundStatement		193:19:3487:3487	3866136	0					
ANR	3866953	ExpressionStatement	intpic [ i ] [ j ] = rowcount	197:16:3571:3594	3866136	0	True				
ANR	3866954	AssignmentExpression	intpic [ i ] [ j ] = rowcount		3866136	0		=			
ANR	3866955	ArrayIndexing	intpic [ i ] [ j ]		3866136	0					
ANR	3866956	ArrayIndexing	intpic [ i ]		3866136	0					
ANR	3866957	Identifier	intpic		3866136	0					
ANR	3866958	Identifier	i		3866136	1					
ANR	3866959	Identifier	j		3866136	1					
ANR	3866960	Identifier	rowcount		3866136	1					
ANR	3866961	ExpressionStatement	denom = ( sc -> divide ) ? 1 : dh1 * dh2 * dw1 * dw2	207:4:3636:3684	3866136	42	True				
ANR	3866962	AssignmentExpression	denom = ( sc -> divide ) ? 1 : dh1 * dh2 * dw1 * dw2		3866136	0		=			
ANR	3866963	Identifier	denom		3866136	0					
ANR	3866964	ConditionalExpression	( sc -> divide ) ? 1 : dh1 * dh2 * dw1 * dw2		3866136	1					
ANR	3866965	Condition	sc -> divide		3866136	0					
ANR	3866966	PtrMemberAccess	sc -> divide		3866136	0					
ANR	3866967	Identifier	sc		3866136	0					
ANR	3866968	Identifier	divide		3866136	1					
ANR	3866969	PrimaryExpression	1		3866136	1					
ANR	3866970	MultiplicativeExpression	dh1 * dh2 * dw1 * dw2		3866136	2		*			
ANR	3866971	Identifier	dh1		3866136	0					
ANR	3866972	MultiplicativeExpression	dh2 * dw1 * dw2		3866136	1		*			
ANR	3866973	Identifier	dh2		3866136	0					
ANR	3866974	MultiplicativeExpression	dw1 * dw2		3866136	1		*			
ANR	3866975	Identifier	dw1		3866136	0					
ANR	3866976	Identifier	dw2		3866136	1					
ANR	3866977	ForStatement	for ( i = 0 ; i < ELEMENT_COUNT ; i ++ )		3866136	43					
ANR	3866978	ForInit	i = 0 ;	211:9:3698:3703	3866136	0	True				
ANR	3866979	AssignmentExpression	i = 0		3866136	0		=			
ANR	3866980	Identifier	i		3866136	0					
ANR	3866981	PrimaryExpression	0		3866136	1					
ANR	3866982	Condition	i < ELEMENT_COUNT	211:16:3705:3721	3866136	1	True				
ANR	3866983	RelationalExpression	i < ELEMENT_COUNT		3866136	0		<			
ANR	3866984	Identifier	i		3866136	0					
ANR	3866985	Identifier	ELEMENT_COUNT		3866136	1					
ANR	3866986	PostIncDecOperationExpression	i ++	211:35:3724:3726	3866136	2	True				
ANR	3866987	Identifier	i		3866136	0					
ANR	3866988	IncDec	++		3866136	1					
ANR	3866989	CompoundStatement		215:8:3755:3778	3866136	3					
ANR	3866990	IdentifierDeclStatement	const ElemCat * elemcat = elements [ i ] ;	213:8:3740:3776	3866136	0	True				
ANR	3866991	IdentifierDecl	* elemcat = elements [ i ]		3866136	0					
ANR	3866992	IdentifierDeclType	const ElemCat *		3866136	0					
ANR	3866993	Identifier	elemcat		3866136	1					
ANR	3866994	AssignmentExpression	* elemcat = elements [ i ]		3866136	2		=			
ANR	3866995	Identifier	elemcat		3866136	0					
ANR	3866996	ArrayIndexing	elements [ i ]		3866136	1					
ANR	3866997	Identifier	elements		3866136	0					
ANR	3866998	Identifier	i		3866136	1					
ANR	3866999	IdentifierDeclStatement	int64_t * elemsignature ;	215:8:3787:3809	3866136	1	True				
ANR	3867000	IdentifierDecl	* elemsignature		3866136	0					
ANR	3867001	IdentifierDeclType	int64_t *		3866136	0					
ANR	3867002	Identifier	elemsignature		3866136	1					
ANR	3867003	IdentifierDeclStatement	uint64_t * sortsignature ;	217:8:3820:3843	3866136	2	True				
ANR	3867004	IdentifierDecl	* sortsignature		3866136	0					
ANR	3867005	IdentifierDeclType	uint64_t *		3866136	0					
ANR	3867006	Identifier	sortsignature		3866136	1					
ANR	3867007	ExpressionStatement	"elemsignature = av_malloc_array ( elemcat -> elem_count , sizeof ( int64_t ) )"	221:8:3856:3925	3866136	3	True				
ANR	3867008	AssignmentExpression	"elemsignature = av_malloc_array ( elemcat -> elem_count , sizeof ( int64_t ) )"		3866136	0		=			
ANR	3867009	Identifier	elemsignature		3866136	0					
ANR	3867010	CallExpression	"av_malloc_array ( elemcat -> elem_count , sizeof ( int64_t ) )"		3866136	1					
ANR	3867011	Callee	av_malloc_array		3866136	0					
ANR	3867012	Identifier	av_malloc_array		3866136	0					
ANR	3867013	ArgumentList	elemcat -> elem_count		3866136	1					
ANR	3867014	Argument	elemcat -> elem_count		3866136	0					
ANR	3867015	PtrMemberAccess	elemcat -> elem_count		3866136	0					
ANR	3867016	Identifier	elemcat		3866136	0					
ANR	3867017	Identifier	elem_count		3866136	1					
ANR	3867018	Argument	sizeof ( int64_t )		3866136	1					
ANR	3867019	SizeofExpression	sizeof ( int64_t )		3866136	0					
ANR	3867020	Sizeof	sizeof		3866136	0					
ANR	3867021	SizeofOperand	int64_t		3866136	1					
ANR	3867022	IfStatement	if ( ! elemsignature )		3866136	4					
ANR	3867023	Condition	! elemsignature	223:12:3940:3953	3866136	0	True				
ANR	3867024	UnaryOperationExpression	! elemsignature		3866136	0					
ANR	3867025	UnaryOperator	!		3866136	0					
ANR	3867026	Identifier	elemsignature		3866136	1					
ANR	3867027	ReturnStatement	return AVERROR ( ENOMEM ) ;	225:12:3969:3991	3866136	1	True				
ANR	3867028	CallExpression	AVERROR ( ENOMEM )		3866136	0					
ANR	3867029	Callee	AVERROR		3866136	0					
ANR	3867030	Identifier	AVERROR		3866136	0					
ANR	3867031	ArgumentList	ENOMEM		3866136	1					
ANR	3867032	Argument	ENOMEM		3866136	0					
ANR	3867033	Identifier	ENOMEM		3866136	0					
ANR	3867034	ExpressionStatement	"sortsignature = av_malloc_array ( elemcat -> elem_count , sizeof ( int64_t ) )"	227:8:4002:4071	3866136	5	True				
ANR	3867035	AssignmentExpression	"sortsignature = av_malloc_array ( elemcat -> elem_count , sizeof ( int64_t ) )"		3866136	0		=			
ANR	3867036	Identifier	sortsignature		3866136	0					
ANR	3867037	CallExpression	"av_malloc_array ( elemcat -> elem_count , sizeof ( int64_t ) )"		3866136	1					
ANR	3867038	Callee	av_malloc_array		3866136	0					
ANR	3867039	Identifier	av_malloc_array		3866136	0					
ANR	3867040	ArgumentList	elemcat -> elem_count		3866136	1					
ANR	3867041	Argument	elemcat -> elem_count		3866136	0					
ANR	3867042	PtrMemberAccess	elemcat -> elem_count		3866136	0					
ANR	3867043	Identifier	elemcat		3866136	0					
ANR	3867044	Identifier	elem_count		3866136	1					
ANR	3867045	Argument	sizeof ( int64_t )		3866136	1					
ANR	3867046	SizeofExpression	sizeof ( int64_t )		3866136	0					
ANR	3867047	Sizeof	sizeof		3866136	0					
ANR	3867048	SizeofOperand	int64_t		3866136	1					
ANR	3867049	IfStatement	if ( ! sortsignature )		3866136	6					
ANR	3867050	Condition	! sortsignature	229:12:4086:4099	3866136	0	True				
ANR	3867051	UnaryOperationExpression	! sortsignature		3866136	0					
ANR	3867052	UnaryOperator	!		3866136	0					
ANR	3867053	Identifier	sortsignature		3866136	1					
ANR	3867054	ReturnStatement	return AVERROR ( ENOMEM ) ;	231:12:4115:4137	3866136	1	True				
ANR	3867055	CallExpression	AVERROR ( ENOMEM )		3866136	0					
ANR	3867056	Callee	AVERROR		3866136	0					
ANR	3867057	Identifier	AVERROR		3866136	0					
ANR	3867058	ArgumentList	ENOMEM		3866136	1					
ANR	3867059	Argument	ENOMEM		3866136	0					
ANR	3867060	Identifier	ENOMEM		3866136	0					
ANR	3867061	ForStatement	for ( j = 0 ; j < elemcat -> elem_count ; j ++ )		3866136	7					
ANR	3867062	ForInit	j = 0 ;	235:13:4155:4160	3866136	0	True				
ANR	3867063	AssignmentExpression	j = 0		3866136	0		=			
ANR	3867064	Identifier	j		3866136	0					
ANR	3867065	PrimaryExpression	0		3866136	1					
ANR	3867066	Condition	j < elemcat -> elem_count	235:20:4162:4184	3866136	1	True				
ANR	3867067	RelationalExpression	j < elemcat -> elem_count		3866136	0		<			
ANR	3867068	Identifier	j		3866136	0					
ANR	3867069	PtrMemberAccess	elemcat -> elem_count		3866136	1					
ANR	3867070	Identifier	elemcat		3866136	0					
ANR	3867071	Identifier	elem_count		3866136	1					
ANR	3867072	PostIncDecOperationExpression	j ++	235:45:4187:4189	3866136	2	True				
ANR	3867073	Identifier	j		3866136	0					
ANR	3867074	IncDec	++		3866136	1					
ANR	3867075	CompoundStatement		233:50:4127:4127	3866136	3					
ANR	3867076	ExpressionStatement	blocksum = 0	237:12:4207:4219	3866136	0	True				
ANR	3867077	AssignmentExpression	blocksum = 0		3866136	0		=			
ANR	3867078	Identifier	blocksum		3866136	0					
ANR	3867079	PrimaryExpression	0		3866136	1					
ANR	3867080	ExpressionStatement	blocksize = 0	239:12:4234:4247	3866136	1	True				
ANR	3867081	AssignmentExpression	blocksize = 0		3866136	0		=			
ANR	3867082	Identifier	blocksize		3866136	0					
ANR	3867083	PrimaryExpression	0		3866136	1					
ANR	3867084	ForStatement	for ( k = 0 ; k < elemcat -> left_count ; k ++ )		3866136	2					
ANR	3867085	ForInit	k = 0 ;	241:17:4267:4272	3866136	0	True				
ANR	3867086	AssignmentExpression	k = 0		3866136	0		=			
ANR	3867087	Identifier	k		3866136	0					
ANR	3867088	PrimaryExpression	0		3866136	1					
ANR	3867089	Condition	k < elemcat -> left_count	241:24:4274:4296	3866136	1	True				
ANR	3867090	RelationalExpression	k < elemcat -> left_count		3866136	0		<			
ANR	3867091	Identifier	k		3866136	0					
ANR	3867092	PtrMemberAccess	elemcat -> left_count		3866136	1					
ANR	3867093	Identifier	elemcat		3866136	0					
ANR	3867094	Identifier	left_count		3866136	1					
ANR	3867095	PostIncDecOperationExpression	k ++	241:49:4299:4301	3866136	2	True				
ANR	3867096	Identifier	k		3866136	0					
ANR	3867097	IncDec	++		3866136	1					
ANR	3867098	CompoundStatement		239:54:4239:4239	3866136	3					
ANR	3867099	ExpressionStatement	"blocksum += get_block_sum ( sc , intpic , & elemcat -> blocks [ j * elemcat -> block_count + k ] )"	243:16:4323:4404	3866136	0	True				
ANR	3867100	AssignmentExpression	"blocksum += get_block_sum ( sc , intpic , & elemcat -> blocks [ j * elemcat -> block_count + k ] )"		3866136	0		+=			
ANR	3867101	Identifier	blocksum		3866136	0					
ANR	3867102	CallExpression	"get_block_sum ( sc , intpic , & elemcat -> blocks [ j * elemcat -> block_count + k ] )"		3866136	1					
ANR	3867103	Callee	get_block_sum		3866136	0					
ANR	3867104	Identifier	get_block_sum		3866136	0					
ANR	3867105	ArgumentList	sc		3866136	1					
ANR	3867106	Argument	sc		3866136	0					
ANR	3867107	Identifier	sc		3866136	0					
ANR	3867108	Argument	intpic		3866136	1					
ANR	3867109	Identifier	intpic		3866136	0					
ANR	3867110	Argument	& elemcat -> blocks [ j * elemcat -> block_count + k ]		3866136	2					
ANR	3867111	UnaryOperationExpression	& elemcat -> blocks [ j * elemcat -> block_count + k ]		3866136	0					
ANR	3867112	UnaryOperator	&		3866136	0					
ANR	3867113	ArrayIndexing	elemcat -> blocks [ j * elemcat -> block_count + k ]		3866136	1					
ANR	3867114	PtrMemberAccess	elemcat -> blocks		3866136	0					
ANR	3867115	Identifier	elemcat		3866136	0					
ANR	3867116	Identifier	blocks		3866136	1					
ANR	3867117	AdditiveExpression	j * elemcat -> block_count + k		3866136	1		+			
ANR	3867118	MultiplicativeExpression	j * elemcat -> block_count		3866136	0		*			
ANR	3867119	Identifier	j		3866136	0					
ANR	3867120	PtrMemberAccess	elemcat -> block_count		3866136	1					
ANR	3867121	Identifier	elemcat		3866136	0					
ANR	3867122	Identifier	block_count		3866136	1					
ANR	3867123	Identifier	k		3866136	1					
ANR	3867124	ExpressionStatement	blocksize += get_block_size ( & elemcat -> blocks [ j * elemcat -> block_count + k ] )	245:16:4423:4494	3866136	1	True				
ANR	3867125	AssignmentExpression	blocksize += get_block_size ( & elemcat -> blocks [ j * elemcat -> block_count + k ] )		3866136	0		+=			
ANR	3867126	Identifier	blocksize		3866136	0					
ANR	3867127	CallExpression	get_block_size ( & elemcat -> blocks [ j * elemcat -> block_count + k ] )		3866136	1					
ANR	3867128	Callee	get_block_size		3866136	0					
ANR	3867129	Identifier	get_block_size		3866136	0					
ANR	3867130	ArgumentList	& elemcat -> blocks [ j * elemcat -> block_count + k ]		3866136	1					
ANR	3867131	Argument	& elemcat -> blocks [ j * elemcat -> block_count + k ]		3866136	0					
ANR	3867132	UnaryOperationExpression	& elemcat -> blocks [ j * elemcat -> block_count + k ]		3866136	0					
ANR	3867133	UnaryOperator	&		3866136	0					
ANR	3867134	ArrayIndexing	elemcat -> blocks [ j * elemcat -> block_count + k ]		3866136	1					
ANR	3867135	PtrMemberAccess	elemcat -> blocks		3866136	0					
ANR	3867136	Identifier	elemcat		3866136	0					
ANR	3867137	Identifier	blocks		3866136	1					
ANR	3867138	AdditiveExpression	j * elemcat -> block_count + k		3866136	1		+			
ANR	3867139	MultiplicativeExpression	j * elemcat -> block_count		3866136	0		*			
ANR	3867140	Identifier	j		3866136	0					
ANR	3867141	PtrMemberAccess	elemcat -> block_count		3866136	1					
ANR	3867142	Identifier	elemcat		3866136	0					
ANR	3867143	Identifier	block_count		3866136	1					
ANR	3867144	Identifier	k		3866136	1					
ANR	3867145	ExpressionStatement	sum = blocksum / blocksize	249:12:4524:4550	3866136	3	True				
ANR	3867146	AssignmentExpression	sum = blocksum / blocksize		3866136	0		=			
ANR	3867147	Identifier	sum		3866136	0					
ANR	3867148	MultiplicativeExpression	blocksum / blocksize		3866136	1		/			
ANR	3867149	Identifier	blocksum		3866136	0					
ANR	3867150	Identifier	blocksize		3866136	1					
ANR	3867151	IfStatement	if ( elemcat -> av_elem )		3866136	4					
ANR	3867152	Condition	elemcat -> av_elem	251:16:4569:4584	3866136	0	True				
ANR	3867153	PtrMemberAccess	elemcat -> av_elem		3866136	0					
ANR	3867154	Identifier	elemcat		3866136	0					
ANR	3867155	Identifier	av_elem		3866136	1					
ANR	3867156	CompoundStatement		249:34:4522:4522	3866136	1					
ANR	3867157	ExpressionStatement	sum -= 128 * precfactor * denom	253:16:4606:4637	3866136	0	True				
ANR	3867158	AssignmentExpression	sum -= 128 * precfactor * denom		3866136	0		-=			
ANR	3867159	Identifier	sum		3866136	0					
ANR	3867160	MultiplicativeExpression	128 * precfactor * denom		3866136	1		*			
ANR	3867161	PrimaryExpression	128		3866136	0					
ANR	3867162	MultiplicativeExpression	precfactor * denom		3866136	1		*			
ANR	3867163	Identifier	precfactor		3866136	0					
ANR	3867164	Identifier	denom		3866136	1					
ANR	3867165	ElseStatement	else		3866136	0					
ANR	3867166	CompoundStatement		253:19:4594:4594	3866136	0					
ANR	3867167	ExpressionStatement	blocksum = 0	257:16:4678:4690	3866136	0	True				
ANR	3867168	AssignmentExpression	blocksum = 0		3866136	0		=			
ANR	3867169	Identifier	blocksum		3866136	0					
ANR	3867170	PrimaryExpression	0		3866136	1					
ANR	3867171	ExpressionStatement	blocksize = 0	259:16:4709:4722	3866136	1	True				
ANR	3867172	AssignmentExpression	blocksize = 0		3866136	0		=			
ANR	3867173	Identifier	blocksize		3866136	0					
ANR	3867174	PrimaryExpression	0		3866136	1					
ANR	3867175	ForStatement	for ( ; k < elemcat -> block_count ; k ++ )		3866136	2					
ANR	3867176	Condition	k < elemcat -> block_count	261:23:4748:4771	3866136	0	True				
ANR	3867177	RelationalExpression	k < elemcat -> block_count		3866136	0		<			
ANR	3867178	Identifier	k		3866136	0					
ANR	3867179	PtrMemberAccess	elemcat -> block_count		3866136	1					
ANR	3867180	Identifier	elemcat		3866136	0					
ANR	3867181	Identifier	block_count		3866136	1					
ANR	3867182	PostIncDecOperationExpression	k ++	261:49:4774:4776	3866136	1	True				
ANR	3867183	Identifier	k		3866136	0					
ANR	3867184	IncDec	++		3866136	1					
ANR	3867185	CompoundStatement		259:54:4714:4714	3866136	2					
ANR	3867186	ExpressionStatement	"blocksum += get_block_sum ( sc , intpic , & elemcat -> blocks [ j * elemcat -> block_count + k ] )"	263:20:4802:4883	3866136	0	True				
ANR	3867187	AssignmentExpression	"blocksum += get_block_sum ( sc , intpic , & elemcat -> blocks [ j * elemcat -> block_count + k ] )"		3866136	0		+=			
ANR	3867188	Identifier	blocksum		3866136	0					
ANR	3867189	CallExpression	"get_block_sum ( sc , intpic , & elemcat -> blocks [ j * elemcat -> block_count + k ] )"		3866136	1					
ANR	3867190	Callee	get_block_sum		3866136	0					
ANR	3867191	Identifier	get_block_sum		3866136	0					
ANR	3867192	ArgumentList	sc		3866136	1					
ANR	3867193	Argument	sc		3866136	0					
ANR	3867194	Identifier	sc		3866136	0					
ANR	3867195	Argument	intpic		3866136	1					
ANR	3867196	Identifier	intpic		3866136	0					
ANR	3867197	Argument	& elemcat -> blocks [ j * elemcat -> block_count + k ]		3866136	2					
ANR	3867198	UnaryOperationExpression	& elemcat -> blocks [ j * elemcat -> block_count + k ]		3866136	0					
ANR	3867199	UnaryOperator	&		3866136	0					
ANR	3867200	ArrayIndexing	elemcat -> blocks [ j * elemcat -> block_count + k ]		3866136	1					
ANR	3867201	PtrMemberAccess	elemcat -> blocks		3866136	0					
ANR	3867202	Identifier	elemcat		3866136	0					
ANR	3867203	Identifier	blocks		3866136	1					
ANR	3867204	AdditiveExpression	j * elemcat -> block_count + k		3866136	1		+			
ANR	3867205	MultiplicativeExpression	j * elemcat -> block_count		3866136	0		*			
ANR	3867206	Identifier	j		3866136	0					
ANR	3867207	PtrMemberAccess	elemcat -> block_count		3866136	1					
ANR	3867208	Identifier	elemcat		3866136	0					
ANR	3867209	Identifier	block_count		3866136	1					
ANR	3867210	Identifier	k		3866136	1					
ANR	3867211	ExpressionStatement	blocksize += get_block_size ( & elemcat -> blocks [ j * elemcat -> block_count + k ] )	265:20:4906:4977	3866136	1	True				
ANR	3867212	AssignmentExpression	blocksize += get_block_size ( & elemcat -> blocks [ j * elemcat -> block_count + k ] )		3866136	0		+=			
ANR	3867213	Identifier	blocksize		3866136	0					
ANR	3867214	CallExpression	get_block_size ( & elemcat -> blocks [ j * elemcat -> block_count + k ] )		3866136	1					
ANR	3867215	Callee	get_block_size		3866136	0					
ANR	3867216	Identifier	get_block_size		3866136	0					
ANR	3867217	ArgumentList	& elemcat -> blocks [ j * elemcat -> block_count + k ]		3866136	1					
ANR	3867218	Argument	& elemcat -> blocks [ j * elemcat -> block_count + k ]		3866136	0					
ANR	3867219	UnaryOperationExpression	& elemcat -> blocks [ j * elemcat -> block_count + k ]		3866136	0					
ANR	3867220	UnaryOperator	&		3866136	0					
ANR	3867221	ArrayIndexing	elemcat -> blocks [ j * elemcat -> block_count + k ]		3866136	1					
ANR	3867222	PtrMemberAccess	elemcat -> blocks		3866136	0					
ANR	3867223	Identifier	elemcat		3866136	0					
ANR	3867224	Identifier	blocks		3866136	1					
ANR	3867225	AdditiveExpression	j * elemcat -> block_count + k		3866136	1		+			
ANR	3867226	MultiplicativeExpression	j * elemcat -> block_count		3866136	0		*			
ANR	3867227	Identifier	j		3866136	0					
ANR	3867228	PtrMemberAccess	elemcat -> block_count		3866136	1					
ANR	3867229	Identifier	elemcat		3866136	0					
ANR	3867230	Identifier	block_count		3866136	1					
ANR	3867231	Identifier	k		3866136	1					
ANR	3867232	ExpressionStatement	sum -= blocksum / blocksize	269:16:5015:5042	3866136	3	True				
ANR	3867233	AssignmentExpression	sum -= blocksum / blocksize		3866136	0		-=			
ANR	3867234	Identifier	sum		3866136	0					
ANR	3867235	MultiplicativeExpression	blocksum / blocksize		3866136	1		/			
ANR	3867236	Identifier	blocksum		3866136	0					
ANR	3867237	Identifier	blocksize		3866136	1					
ANR	3867238	ExpressionStatement	conflist [ g ++ ] = FFABS ( sum * 8 / ( precfactor * denom ) )	271:16:5061:5114	3866136	4	True				
ANR	3867239	AssignmentExpression	conflist [ g ++ ] = FFABS ( sum * 8 / ( precfactor * denom ) )		3866136	0		=			
ANR	3867240	ArrayIndexing	conflist [ g ++ ]		3866136	0					
ANR	3867241	Identifier	conflist		3866136	0					
ANR	3867242	PostIncDecOperationExpression	g ++		3866136	1					
ANR	3867243	Identifier	g		3866136	0					
ANR	3867244	IncDec	++		3866136	1					
ANR	3867245	CallExpression	FFABS ( sum * 8 / ( precfactor * denom ) )		3866136	1					
ANR	3867246	Callee	FFABS		3866136	0					
ANR	3867247	Identifier	FFABS		3866136	0					
ANR	3867248	ArgumentList	sum * 8 / ( precfactor * denom )		3866136	1					
ANR	3867249	Argument	sum * 8 / ( precfactor * denom )		3866136	0					
ANR	3867250	MultiplicativeExpression	sum * 8 / ( precfactor * denom )		3866136	0		*			
ANR	3867251	Identifier	sum		3866136	0					
ANR	3867252	MultiplicativeExpression	8 / ( precfactor * denom )		3866136	1		/			
ANR	3867253	PrimaryExpression	8		3866136	0					
ANR	3867254	MultiplicativeExpression	precfactor * denom		3866136	1		*			
ANR	3867255	Identifier	precfactor		3866136	0					
ANR	3867256	Identifier	denom		3866136	1					
ANR	3867257	ExpressionStatement	elemsignature [ j ] = sum	277:12:5146:5168	3866136	5	True				
ANR	3867258	AssignmentExpression	elemsignature [ j ] = sum		3866136	0		=			
ANR	3867259	ArrayIndexing	elemsignature [ j ]		3866136	0					
ANR	3867260	Identifier	elemsignature		3866136	0					
ANR	3867261	Identifier	j		3866136	1					
ANR	3867262	Identifier	sum		3866136	1					
ANR	3867263	ExpressionStatement	sortsignature [ j ] = FFABS ( sum )	279:12:5183:5212	3866136	6	True				
ANR	3867264	AssignmentExpression	sortsignature [ j ] = FFABS ( sum )		3866136	0		=			
ANR	3867265	ArrayIndexing	sortsignature [ j ]		3866136	0					
ANR	3867266	Identifier	sortsignature		3866136	0					
ANR	3867267	Identifier	j		3866136	1					
ANR	3867268	CallExpression	FFABS ( sum )		3866136	1					
ANR	3867269	Callee	FFABS		3866136	0					
ANR	3867270	Identifier	FFABS		3866136	0					
ANR	3867271	ArgumentList	sum		3866136	1					
ANR	3867272	Argument	sum		3866136	0					
ANR	3867273	Identifier	sum		3866136	0					
ANR	3867274	ExpressionStatement	"qsort ( sortsignature , elemcat -> elem_count , sizeof ( uint64_t ) , ( void * ) cmp )"	287:8:5265:5337	3866136	8	True				
ANR	3867275	CallExpression	"qsort ( sortsignature , elemcat -> elem_count , sizeof ( uint64_t ) , ( void * ) cmp )"		3866136	0					
ANR	3867276	Callee	qsort		3866136	0					
ANR	3867277	Identifier	qsort		3866136	0					
ANR	3867278	ArgumentList	sortsignature		3866136	1					
ANR	3867279	Argument	sortsignature		3866136	0					
ANR	3867280	Identifier	sortsignature		3866136	0					
ANR	3867281	Argument	elemcat -> elem_count		3866136	1					
ANR	3867282	PtrMemberAccess	elemcat -> elem_count		3866136	0					
ANR	3867283	Identifier	elemcat		3866136	0					
ANR	3867284	Identifier	elem_count		3866136	1					
ANR	3867285	Argument	sizeof ( uint64_t )		3866136	2					
ANR	3867286	SizeofExpression	sizeof ( uint64_t )		3866136	0					
ANR	3867287	Sizeof	sizeof		3866136	0					
ANR	3867288	SizeofOperand	uint64_t		3866136	1					
ANR	3867289	Argument	( void * ) cmp		3866136	3					
ANR	3867290	CastExpression	( void * ) cmp		3866136	0					
ANR	3867291	CastTarget	void *		3866136	0					
ANR	3867292	Identifier	cmp		3866136	1					
ANR	3867293	ExpressionStatement	th = sortsignature [ ( int ) ( elemcat -> elem_count * 0.333 ) ]	289:8:5348:5401	3866136	9	True				
ANR	3867294	AssignmentExpression	th = sortsignature [ ( int ) ( elemcat -> elem_count * 0.333 ) ]		3866136	0		=			
ANR	3867295	Identifier	th		3866136	0					
ANR	3867296	ArrayIndexing	sortsignature [ ( int ) ( elemcat -> elem_count * 0.333 ) ]		3866136	1					
ANR	3867297	Identifier	sortsignature		3866136	0					
ANR	3867298	CastExpression	( int ) ( elemcat -> elem_count * 0.333 )		3866136	1					
ANR	3867299	CastTarget	int		3866136	0					
ANR	3867300	MultiplicativeExpression	elemcat -> elem_count * 0.333		3866136	1		*			
ANR	3867301	PtrMemberAccess	elemcat -> elem_count		3866136	0					
ANR	3867302	Identifier	elemcat		3866136	0					
ANR	3867303	Identifier	elem_count		3866136	1					
ANR	3867304	PrimaryExpression	0.333		3866136	1					
ANR	3867305	ForStatement	for ( j = 0 ; j < elemcat -> elem_count ; j ++ )		3866136	10					
ANR	3867306	ForInit	j = 0 ;	295:13:5444:5449	3866136	0	True				
ANR	3867307	AssignmentExpression	j = 0		3866136	0		=			
ANR	3867308	Identifier	j		3866136	0					
ANR	3867309	PrimaryExpression	0		3866136	1					
ANR	3867310	Condition	j < elemcat -> elem_count	295:20:5451:5473	3866136	1	True				
ANR	3867311	RelationalExpression	j < elemcat -> elem_count		3866136	0		<			
ANR	3867312	Identifier	j		3866136	0					
ANR	3867313	PtrMemberAccess	elemcat -> elem_count		3866136	1					
ANR	3867314	Identifier	elemcat		3866136	0					
ANR	3867315	Identifier	elem_count		3866136	1					
ANR	3867316	PostIncDecOperationExpression	j ++	295:45:5476:5478	3866136	2	True				
ANR	3867317	Identifier	j		3866136	0					
ANR	3867318	IncDec	++		3866136	1					
ANR	3867319	CompoundStatement		293:50:5416:5416	3866136	3					
ANR	3867320	IfStatement	if ( elemsignature [ j ] < - th )		3866136	0					
ANR	3867321	Condition	elemsignature [ j ] < - th	297:16:5500:5521	3866136	0	True				
ANR	3867322	RelationalExpression	elemsignature [ j ] < - th		3866136	0		<			
ANR	3867323	ArrayIndexing	elemsignature [ j ]		3866136	0					
ANR	3867324	Identifier	elemsignature		3866136	0					
ANR	3867325	Identifier	j		3866136	1					
ANR	3867326	UnaryOperationExpression	- th		3866136	1					
ANR	3867327	UnaryOperator	-		3866136	0					
ANR	3867328	Identifier	th		3866136	1					
ANR	3867329	CompoundStatement		295:40:5459:5459	3866136	1					
ANR	3867330	ExpressionStatement	ternary = 0	299:16:5543:5554	3866136	0	True				
ANR	3867331	AssignmentExpression	ternary = 0		3866136	0		=			
ANR	3867332	Identifier	ternary		3866136	0					
ANR	3867333	PrimaryExpression	0		3866136	1					
ANR	3867334	ElseStatement	else		3866136	0					
ANR	3867335	IfStatement	if ( elemsignature [ j ] <= th )		3866136	0					
ANR	3867336	Condition	elemsignature [ j ] <= th	301:23:5580:5601	3866136	0	True				
ANR	3867337	RelationalExpression	elemsignature [ j ] <= th		3866136	0		<=			
ANR	3867338	ArrayIndexing	elemsignature [ j ]		3866136	0					
ANR	3867339	Identifier	elemsignature		3866136	0					
ANR	3867340	Identifier	j		3866136	1					
ANR	3867341	Identifier	th		3866136	1					
ANR	3867342	CompoundStatement		299:47:5539:5539	3866136	1					
ANR	3867343	ExpressionStatement	ternary = 1	303:16:5623:5634	3866136	0	True				
ANR	3867344	AssignmentExpression	ternary = 1		3866136	0		=			
ANR	3867345	Identifier	ternary		3866136	0					
ANR	3867346	PrimaryExpression	1		3866136	1					
ANR	3867347	ElseStatement	else		3866136	0					
ANR	3867348	CompoundStatement		303:19:5591:5591	3866136	0					
ANR	3867349	ExpressionStatement	ternary = 2	307:16:5675:5686	3866136	0	True				
ANR	3867350	AssignmentExpression	ternary = 2		3866136	0		=			
ANR	3867351	Identifier	ternary		3866136	0					
ANR	3867352	PrimaryExpression	2		3866136	1					
ANR	3867353	ExpressionStatement	fs -> framesig [ f / 5 ] += ternary * pot3 [ f % 5 ]	311:12:5716:5756	3866136	1	True				
ANR	3867354	AssignmentExpression	fs -> framesig [ f / 5 ] += ternary * pot3 [ f % 5 ]		3866136	0		+=			
ANR	3867355	ArrayIndexing	fs -> framesig [ f / 5 ]		3866136	0					
ANR	3867356	PtrMemberAccess	fs -> framesig		3866136	0					
ANR	3867357	Identifier	fs		3866136	0					
ANR	3867358	Identifier	framesig		3866136	1					
ANR	3867359	MultiplicativeExpression	f / 5		3866136	1		/			
ANR	3867360	Identifier	f		3866136	0					
ANR	3867361	PrimaryExpression	5		3866136	1					
ANR	3867362	MultiplicativeExpression	ternary * pot3 [ f % 5 ]		3866136	1		*			
ANR	3867363	Identifier	ternary		3866136	0					
ANR	3867364	ArrayIndexing	pot3 [ f % 5 ]		3866136	1					
ANR	3867365	Identifier	pot3		3866136	0					
ANR	3867366	MultiplicativeExpression	f % 5		3866136	1		%			
ANR	3867367	Identifier	f		3866136	0					
ANR	3867368	PrimaryExpression	5		3866136	1					
ANR	3867369	IfStatement	if ( f == wordvec [ w ] )		3866136	2					
ANR	3867370	Condition	f == wordvec [ w ]	315:16:5777:5791	3866136	0	True				
ANR	3867371	EqualityExpression	f == wordvec [ w ]		3866136	0		==			
ANR	3867372	Identifier	f		3866136	0					
ANR	3867373	ArrayIndexing	wordvec [ w ]		3866136	1					
ANR	3867374	Identifier	wordvec		3866136	0					
ANR	3867375	Identifier	w		3866136	1					
ANR	3867376	CompoundStatement		313:33:5729:5729	3866136	1					
ANR	3867377	ExpressionStatement	fs -> words [ s2usw [ w ] / 5 ] += ternary * pot3 [ wordt2b [ s2usw [ w ] / 5 ] ++ ]	317:16:5813:5875	3866136	0	True				
ANR	3867378	AssignmentExpression	fs -> words [ s2usw [ w ] / 5 ] += ternary * pot3 [ wordt2b [ s2usw [ w ] / 5 ] ++ ]		3866136	0		+=			
ANR	3867379	ArrayIndexing	fs -> words [ s2usw [ w ] / 5 ]		3866136	0					
ANR	3867380	PtrMemberAccess	fs -> words		3866136	0					
ANR	3867381	Identifier	fs		3866136	0					
ANR	3867382	Identifier	words		3866136	1					
ANR	3867383	MultiplicativeExpression	s2usw [ w ] / 5		3866136	1		/			
ANR	3867384	ArrayIndexing	s2usw [ w ]		3866136	0					
ANR	3867385	Identifier	s2usw		3866136	0					
ANR	3867386	Identifier	w		3866136	1					
ANR	3867387	PrimaryExpression	5		3866136	1					
ANR	3867388	MultiplicativeExpression	ternary * pot3 [ wordt2b [ s2usw [ w ] / 5 ] ++ ]		3866136	1		*			
ANR	3867389	Identifier	ternary		3866136	0					
ANR	3867390	ArrayIndexing	pot3 [ wordt2b [ s2usw [ w ] / 5 ] ++ ]		3866136	1					
ANR	3867391	Identifier	pot3		3866136	0					
ANR	3867392	PostIncDecOperationExpression	wordt2b [ s2usw [ w ] / 5 ] ++		3866136	1					
ANR	3867393	ArrayIndexing	wordt2b [ s2usw [ w ] / 5 ]		3866136	0					
ANR	3867394	Identifier	wordt2b		3866136	0					
ANR	3867395	MultiplicativeExpression	s2usw [ w ] / 5		3866136	1		/			
ANR	3867396	ArrayIndexing	s2usw [ w ]		3866136	0					
ANR	3867397	Identifier	s2usw		3866136	0					
ANR	3867398	Identifier	w		3866136	1					
ANR	3867399	PrimaryExpression	5		3866136	1					
ANR	3867400	IncDec	++		3866136	1					
ANR	3867401	IfStatement	if ( w < 24 )		3866136	1					
ANR	3867402	Condition	w < 24	319:20:5898:5903	3866136	0	True				
ANR	3867403	RelationalExpression	w < 24		3866136	0		<			
ANR	3867404	Identifier	w		3866136	0					
ANR	3867405	PrimaryExpression	24		3866136	1					
ANR	3867406	ExpressionStatement	w ++	321:20:5927:5930	3866136	1	True				
ANR	3867407	PostIncDecOperationExpression	w ++		3866136	0					
ANR	3867408	Identifier	w		3866136	0					
ANR	3867409	IncDec	++		3866136	1					
ANR	3867410	ExpressionStatement	f ++	325:12:5960:5963	3866136	3	True				
ANR	3867411	PostIncDecOperationExpression	f ++		3866136	0					
ANR	3867412	Identifier	f		3866136	0					
ANR	3867413	IncDec	++		3866136	1					
ANR	3867414	ExpressionStatement	av_freep ( & elemsignature )	329:8:5985:6009	3866136	11	True				
ANR	3867415	CallExpression	av_freep ( & elemsignature )		3866136	0					
ANR	3867416	Callee	av_freep		3866136	0					
ANR	3867417	Identifier	av_freep		3866136	0					
ANR	3867418	ArgumentList	& elemsignature		3866136	1					
ANR	3867419	Argument	& elemsignature		3866136	0					
ANR	3867420	UnaryOperationExpression	& elemsignature		3866136	0					
ANR	3867421	UnaryOperator	&		3866136	0					
ANR	3867422	Identifier	elemsignature		3866136	1					
ANR	3867423	ExpressionStatement	av_freep ( & sortsignature )	331:8:6020:6044	3866136	12	True				
ANR	3867424	CallExpression	av_freep ( & sortsignature )		3866136	0					
ANR	3867425	Callee	av_freep		3866136	0					
ANR	3867426	Identifier	av_freep		3866136	0					
ANR	3867427	ArgumentList	& sortsignature		3866136	1					
ANR	3867428	Argument	& sortsignature		3866136	0					
ANR	3867429	UnaryOperationExpression	& sortsignature		3866136	0					
ANR	3867430	UnaryOperator	&		3866136	0					
ANR	3867431	Identifier	sortsignature		3866136	1					
ANR	3867432	ExpressionStatement	"qsort ( conflist , DIFFELEM_SIZE , sizeof ( uint64_t ) , ( void * ) cmp )"	339:4:6082:6143	3866136	44	True				
ANR	3867433	CallExpression	"qsort ( conflist , DIFFELEM_SIZE , sizeof ( uint64_t ) , ( void * ) cmp )"		3866136	0					
ANR	3867434	Callee	qsort		3866136	0					
ANR	3867435	Identifier	qsort		3866136	0					
ANR	3867436	ArgumentList	conflist		3866136	1					
ANR	3867437	Argument	conflist		3866136	0					
ANR	3867438	Identifier	conflist		3866136	0					
ANR	3867439	Argument	DIFFELEM_SIZE		3866136	1					
ANR	3867440	Identifier	DIFFELEM_SIZE		3866136	0					
ANR	3867441	Argument	sizeof ( uint64_t )		3866136	2					
ANR	3867442	SizeofExpression	sizeof ( uint64_t )		3866136	0					
ANR	3867443	Sizeof	sizeof		3866136	0					
ANR	3867444	SizeofOperand	uint64_t		3866136	1					
ANR	3867445	Argument	( void * ) cmp		3866136	3					
ANR	3867446	CastExpression	( void * ) cmp		3866136	0					
ANR	3867447	CastTarget	void *		3866136	0					
ANR	3867448	Identifier	cmp		3866136	1					
ANR	3867449	ExpressionStatement	"fs -> confidence = FFMIN ( conflist [ DIFFELEM_SIZE / 2 ] , 255 )"	341:4:6150:6204	3866136	45	True				
ANR	3867450	AssignmentExpression	"fs -> confidence = FFMIN ( conflist [ DIFFELEM_SIZE / 2 ] , 255 )"		3866136	0		=			
ANR	3867451	PtrMemberAccess	fs -> confidence		3866136	0					
ANR	3867452	Identifier	fs		3866136	0					
ANR	3867453	Identifier	confidence		3866136	1					
ANR	3867454	CallExpression	"FFMIN ( conflist [ DIFFELEM_SIZE / 2 ] , 255 )"		3866136	1					
ANR	3867455	Callee	FFMIN		3866136	0					
ANR	3867456	Identifier	FFMIN		3866136	0					
ANR	3867457	ArgumentList	conflist [ DIFFELEM_SIZE / 2 ]		3866136	1					
ANR	3867458	Argument	conflist [ DIFFELEM_SIZE / 2 ]		3866136	0					
ANR	3867459	ArrayIndexing	conflist [ DIFFELEM_SIZE / 2 ]		3866136	0					
ANR	3867460	Identifier	conflist		3866136	0					
ANR	3867461	MultiplicativeExpression	DIFFELEM_SIZE / 2		3866136	1		/			
ANR	3867462	Identifier	DIFFELEM_SIZE		3866136	0					
ANR	3867463	PrimaryExpression	2		3866136	1					
ANR	3867464	Argument	255		3866136	1					
ANR	3867465	PrimaryExpression	255		3866136	0					
ANR	3867466	IfStatement	if ( sc -> coarsecount == 0 )		3866136	46					
ANR	3867467	Condition	sc -> coarsecount == 0	347:8:6244:6263	3866136	0	True				
ANR	3867468	EqualityExpression	sc -> coarsecount == 0		3866136	0		==			
ANR	3867469	PtrMemberAccess	sc -> coarsecount		3866136	0					
ANR	3867470	Identifier	sc		3866136	0					
ANR	3867471	Identifier	coarsecount		3866136	1					
ANR	3867472	PrimaryExpression	0		3866136	1					
ANR	3867473	CompoundStatement		345:30:6201:6201	3866136	1					
ANR	3867474	IfStatement	if ( sc -> curcoarsesig2 )		3866136	0					
ANR	3867475	Condition	sc -> curcoarsesig2	349:12:6281:6297	3866136	0	True				
ANR	3867476	PtrMemberAccess	sc -> curcoarsesig2		3866136	0					
ANR	3867477	Identifier	sc		3866136	0					
ANR	3867478	Identifier	curcoarsesig2		3866136	1					
ANR	3867479	CompoundStatement		347:31:6235:6235	3866136	1					
ANR	3867480	ExpressionStatement	sc -> curcoarsesig1 = av_mallocz ( sizeof ( CoarseSignature ) )	351:12:6315:6370	3866136	0	True				
ANR	3867481	AssignmentExpression	sc -> curcoarsesig1 = av_mallocz ( sizeof ( CoarseSignature ) )		3866136	0		=			
ANR	3867482	PtrMemberAccess	sc -> curcoarsesig1		3866136	0					
ANR	3867483	Identifier	sc		3866136	0					
ANR	3867484	Identifier	curcoarsesig1		3866136	1					
ANR	3867485	CallExpression	av_mallocz ( sizeof ( CoarseSignature ) )		3866136	1					
ANR	3867486	Callee	av_mallocz		3866136	0					
ANR	3867487	Identifier	av_mallocz		3866136	0					
ANR	3867488	ArgumentList	sizeof ( CoarseSignature )		3866136	1					
ANR	3867489	Argument	sizeof ( CoarseSignature )		3866136	0					
ANR	3867490	SizeofExpression	sizeof ( CoarseSignature )		3866136	0					
ANR	3867491	Sizeof	sizeof		3866136	0					
ANR	3867492	SizeofOperand	CoarseSignature		3866136	1					
ANR	3867493	IfStatement	if ( ! sc -> curcoarsesig1 )		3866136	1					
ANR	3867494	Condition	! sc -> curcoarsesig1	353:16:6389:6406	3866136	0	True				
ANR	3867495	UnaryOperationExpression	! sc -> curcoarsesig1		3866136	0					
ANR	3867496	UnaryOperator	!		3866136	0					
ANR	3867497	PtrMemberAccess	sc -> curcoarsesig1		3866136	1					
ANR	3867498	Identifier	sc		3866136	0					
ANR	3867499	Identifier	curcoarsesig1		3866136	1					
ANR	3867500	ReturnStatement	return AVERROR ( ENOMEM ) ;	355:16:6426:6448	3866136	1	True				
ANR	3867501	CallExpression	AVERROR ( ENOMEM )		3866136	0					
ANR	3867502	Callee	AVERROR		3866136	0					
ANR	3867503	Identifier	AVERROR		3866136	0					
ANR	3867504	ArgumentList	ENOMEM		3866136	1					
ANR	3867505	Argument	ENOMEM		3866136	0					
ANR	3867506	Identifier	ENOMEM		3866136	0					
ANR	3867507	ExpressionStatement	sc -> curcoarsesig1 -> first = fs	357:12:6463:6492	3866136	2	True				
ANR	3867508	AssignmentExpression	sc -> curcoarsesig1 -> first = fs		3866136	0		=			
ANR	3867509	PtrMemberAccess	sc -> curcoarsesig1 -> first		3866136	0					
ANR	3867510	PtrMemberAccess	sc -> curcoarsesig1		3866136	0					
ANR	3867511	Identifier	sc		3866136	0					
ANR	3867512	Identifier	curcoarsesig1		3866136	1					
ANR	3867513	Identifier	first		3866136	1					
ANR	3867514	Identifier	fs		3866136	1					
ANR	3867515	ExpressionStatement	sc -> curcoarsesig2 -> next = sc -> curcoarsesig1	359:12:6507:6550	3866136	3	True				
ANR	3867516	AssignmentExpression	sc -> curcoarsesig2 -> next = sc -> curcoarsesig1		3866136	0		=			
ANR	3867517	PtrMemberAccess	sc -> curcoarsesig2 -> next		3866136	0					
ANR	3867518	PtrMemberAccess	sc -> curcoarsesig2		3866136	0					
ANR	3867519	Identifier	sc		3866136	0					
ANR	3867520	Identifier	curcoarsesig2		3866136	1					
ANR	3867521	Identifier	next		3866136	1					
ANR	3867522	PtrMemberAccess	sc -> curcoarsesig1		3866136	1					
ANR	3867523	Identifier	sc		3866136	0					
ANR	3867524	Identifier	curcoarsesig1		3866136	1					
ANR	3867525	ExpressionStatement	sc -> coarseend = sc -> curcoarsesig1	361:12:6565:6598	3866136	4	True				
ANR	3867526	AssignmentExpression	sc -> coarseend = sc -> curcoarsesig1		3866136	0		=			
ANR	3867527	PtrMemberAccess	sc -> coarseend		3866136	0					
ANR	3867528	Identifier	sc		3866136	0					
ANR	3867529	Identifier	coarseend		3866136	1					
ANR	3867530	PtrMemberAccess	sc -> curcoarsesig1		3866136	1					
ANR	3867531	Identifier	sc		3866136	0					
ANR	3867532	Identifier	curcoarsesig1		3866136	1					
ANR	3867533	IfStatement	if ( sc -> coarsecount == 45 )		3866136	47					
ANR	3867534	Condition	sc -> coarsecount == 45	367:8:6627:6647	3866136	0	True				
ANR	3867535	EqualityExpression	sc -> coarsecount == 45		3866136	0		==			
ANR	3867536	PtrMemberAccess	sc -> coarsecount		3866136	0					
ANR	3867537	Identifier	sc		3866136	0					
ANR	3867538	Identifier	coarsecount		3866136	1					
ANR	3867539	PrimaryExpression	45		3866136	1					
ANR	3867540	CompoundStatement		365:31:6585:6585	3866136	1					
ANR	3867541	ExpressionStatement	sc -> midcoarse = 1	369:8:6661:6678	3866136	0	True				
ANR	3867542	AssignmentExpression	sc -> midcoarse = 1		3866136	0		=			
ANR	3867543	PtrMemberAccess	sc -> midcoarse		3866136	0					
ANR	3867544	Identifier	sc		3866136	0					
ANR	3867545	Identifier	midcoarse		3866136	1					
ANR	3867546	PrimaryExpression	1		3866136	1					
ANR	3867547	ExpressionStatement	sc -> curcoarsesig2 = av_mallocz ( sizeof ( CoarseSignature ) )	371:8:6689:6744	3866136	1	True				
ANR	3867548	AssignmentExpression	sc -> curcoarsesig2 = av_mallocz ( sizeof ( CoarseSignature ) )		3866136	0		=			
ANR	3867549	PtrMemberAccess	sc -> curcoarsesig2		3866136	0					
ANR	3867550	Identifier	sc		3866136	0					
ANR	3867551	Identifier	curcoarsesig2		3866136	1					
ANR	3867552	CallExpression	av_mallocz ( sizeof ( CoarseSignature ) )		3866136	1					
ANR	3867553	Callee	av_mallocz		3866136	0					
ANR	3867554	Identifier	av_mallocz		3866136	0					
ANR	3867555	ArgumentList	sizeof ( CoarseSignature )		3866136	1					
ANR	3867556	Argument	sizeof ( CoarseSignature )		3866136	0					
ANR	3867557	SizeofExpression	sizeof ( CoarseSignature )		3866136	0					
ANR	3867558	Sizeof	sizeof		3866136	0					
ANR	3867559	SizeofOperand	CoarseSignature		3866136	1					
ANR	3867560	IfStatement	if ( ! sc -> curcoarsesig2 )		3866136	2					
ANR	3867561	Condition	! sc -> curcoarsesig2	373:12:6759:6776	3866136	0	True				
ANR	3867562	UnaryOperationExpression	! sc -> curcoarsesig2		3866136	0					
ANR	3867563	UnaryOperator	!		3866136	0					
ANR	3867564	PtrMemberAccess	sc -> curcoarsesig2		3866136	1					
ANR	3867565	Identifier	sc		3866136	0					
ANR	3867566	Identifier	curcoarsesig2		3866136	1					
ANR	3867567	ReturnStatement	return AVERROR ( ENOMEM ) ;	375:12:6792:6814	3866136	1	True				
ANR	3867568	CallExpression	AVERROR ( ENOMEM )		3866136	0					
ANR	3867569	Callee	AVERROR		3866136	0					
ANR	3867570	Identifier	AVERROR		3866136	0					
ANR	3867571	ArgumentList	ENOMEM		3866136	1					
ANR	3867572	Argument	ENOMEM		3866136	0					
ANR	3867573	Identifier	ENOMEM		3866136	0					
ANR	3867574	ExpressionStatement	sc -> curcoarsesig2 -> first = fs	377:8:6825:6854	3866136	3	True				
ANR	3867575	AssignmentExpression	sc -> curcoarsesig2 -> first = fs		3866136	0		=			
ANR	3867576	PtrMemberAccess	sc -> curcoarsesig2 -> first		3866136	0					
ANR	3867577	PtrMemberAccess	sc -> curcoarsesig2		3866136	0					
ANR	3867578	Identifier	sc		3866136	0					
ANR	3867579	Identifier	curcoarsesig2		3866136	1					
ANR	3867580	Identifier	first		3866136	1					
ANR	3867581	Identifier	fs		3866136	1					
ANR	3867582	ExpressionStatement	sc -> curcoarsesig1 -> next = sc -> curcoarsesig2	379:8:6865:6908	3866136	4	True				
ANR	3867583	AssignmentExpression	sc -> curcoarsesig1 -> next = sc -> curcoarsesig2		3866136	0		=			
ANR	3867584	PtrMemberAccess	sc -> curcoarsesig1 -> next		3866136	0					
ANR	3867585	PtrMemberAccess	sc -> curcoarsesig1		3866136	0					
ANR	3867586	Identifier	sc		3866136	0					
ANR	3867587	Identifier	curcoarsesig1		3866136	1					
ANR	3867588	Identifier	next		3866136	1					
ANR	3867589	PtrMemberAccess	sc -> curcoarsesig2		3866136	1					
ANR	3867590	Identifier	sc		3866136	0					
ANR	3867591	Identifier	curcoarsesig2		3866136	1					
ANR	3867592	ExpressionStatement	sc -> coarseend = sc -> curcoarsesig2	381:8:6919:6952	3866136	5	True				
ANR	3867593	AssignmentExpression	sc -> coarseend = sc -> curcoarsesig2		3866136	0		=			
ANR	3867594	PtrMemberAccess	sc -> coarseend		3866136	0					
ANR	3867595	Identifier	sc		3866136	0					
ANR	3867596	Identifier	coarseend		3866136	1					
ANR	3867597	PtrMemberAccess	sc -> curcoarsesig2		3866136	1					
ANR	3867598	Identifier	sc		3866136	0					
ANR	3867599	Identifier	curcoarsesig2		3866136	1					
ANR	3867600	ForStatement	for ( i = 0 ; i < 5 ; i ++ )		3866136	48					
ANR	3867601	ForInit	i = 0 ;	385:9:6971:6976	3866136	0	True				
ANR	3867602	AssignmentExpression	i = 0		3866136	0		=			
ANR	3867603	Identifier	i		3866136	0					
ANR	3867604	PrimaryExpression	0		3866136	1					
ANR	3867605	Condition	i < 5	385:16:6978:6982	3866136	1	True				
ANR	3867606	RelationalExpression	i < 5		3866136	0		<			
ANR	3867607	Identifier	i		3866136	0					
ANR	3867608	PrimaryExpression	5		3866136	1					
ANR	3867609	PostIncDecOperationExpression	i ++	385:23:6985:6987	3866136	2	True				
ANR	3867610	Identifier	i		3866136	0					
ANR	3867611	IncDec	++		3866136	1					
ANR	3867612	CompoundStatement		383:28:6925:6925	3866136	3					
ANR	3867613	ExpressionStatement	"set_bit ( sc -> curcoarsesig1 -> data [ i ] , fs -> words [ i ] )"	387:8:7001:7050	3866136	0	True				
ANR	3867614	CallExpression	"set_bit ( sc -> curcoarsesig1 -> data [ i ] , fs -> words [ i ] )"		3866136	0					
ANR	3867615	Callee	set_bit		3866136	0					
ANR	3867616	Identifier	set_bit		3866136	0					
ANR	3867617	ArgumentList	sc -> curcoarsesig1 -> data [ i ]		3866136	1					
ANR	3867618	Argument	sc -> curcoarsesig1 -> data [ i ]		3866136	0					
ANR	3867619	ArrayIndexing	sc -> curcoarsesig1 -> data [ i ]		3866136	0					
ANR	3867620	PtrMemberAccess	sc -> curcoarsesig1 -> data		3866136	0					
ANR	3867621	PtrMemberAccess	sc -> curcoarsesig1		3866136	0					
ANR	3867622	Identifier	sc		3866136	0					
ANR	3867623	Identifier	curcoarsesig1		3866136	1					
ANR	3867624	Identifier	data		3866136	1					
ANR	3867625	Identifier	i		3866136	1					
ANR	3867626	Argument	fs -> words [ i ]		3866136	1					
ANR	3867627	ArrayIndexing	fs -> words [ i ]		3866136	0					
ANR	3867628	PtrMemberAccess	fs -> words		3866136	0					
ANR	3867629	Identifier	fs		3866136	0					
ANR	3867630	Identifier	words		3866136	1					
ANR	3867631	Identifier	i		3866136	1					
ANR	3867632	ExpressionStatement	sc -> curcoarsesig1 -> last = fs	393:4:7113:7141	3866136	49	True				
ANR	3867633	AssignmentExpression	sc -> curcoarsesig1 -> last = fs		3866136	0		=			
ANR	3867634	PtrMemberAccess	sc -> curcoarsesig1 -> last		3866136	0					
ANR	3867635	PtrMemberAccess	sc -> curcoarsesig1		3866136	0					
ANR	3867636	Identifier	sc		3866136	0					
ANR	3867637	Identifier	curcoarsesig1		3866136	1					
ANR	3867638	Identifier	last		3866136	1					
ANR	3867639	Identifier	fs		3866136	1					
ANR	3867640	IfStatement	if ( sc -> midcoarse )		3866136	50					
ANR	3867641	Condition	sc -> midcoarse	395:8:7152:7164	3866136	0	True				
ANR	3867642	PtrMemberAccess	sc -> midcoarse		3866136	0					
ANR	3867643	Identifier	sc		3866136	0					
ANR	3867644	Identifier	midcoarse		3866136	1					
ANR	3867645	CompoundStatement		393:23:7102:7102	3866136	1					
ANR	3867646	ForStatement	for ( i = 0 ; i < 5 ; i ++ )		3866136	0					
ANR	3867647	ForInit	i = 0 ;	397:13:7183:7188	3866136	0	True				
ANR	3867648	AssignmentExpression	i = 0		3866136	0		=			
ANR	3867649	Identifier	i		3866136	0					
ANR	3867650	PrimaryExpression	0		3866136	1					
ANR	3867651	Condition	i < 5	397:20:7190:7194	3866136	1	True				
ANR	3867652	RelationalExpression	i < 5		3866136	0		<			
ANR	3867653	Identifier	i		3866136	0					
ANR	3867654	PrimaryExpression	5		3866136	1					
ANR	3867655	PostIncDecOperationExpression	i ++	397:27:7197:7199	3866136	2	True				
ANR	3867656	Identifier	i		3866136	0					
ANR	3867657	IncDec	++		3866136	1					
ANR	3867658	CompoundStatement		395:32:7137:7137	3866136	3					
ANR	3867659	ExpressionStatement	"set_bit ( sc -> curcoarsesig2 -> data [ i ] , fs -> words [ i ] )"	399:12:7217:7266	3866136	0	True				
ANR	3867660	CallExpression	"set_bit ( sc -> curcoarsesig2 -> data [ i ] , fs -> words [ i ] )"		3866136	0					
ANR	3867661	Callee	set_bit		3866136	0					
ANR	3867662	Identifier	set_bit		3866136	0					
ANR	3867663	ArgumentList	sc -> curcoarsesig2 -> data [ i ]		3866136	1					
ANR	3867664	Argument	sc -> curcoarsesig2 -> data [ i ]		3866136	0					
ANR	3867665	ArrayIndexing	sc -> curcoarsesig2 -> data [ i ]		3866136	0					
ANR	3867666	PtrMemberAccess	sc -> curcoarsesig2 -> data		3866136	0					
ANR	3867667	PtrMemberAccess	sc -> curcoarsesig2		3866136	0					
ANR	3867668	Identifier	sc		3866136	0					
ANR	3867669	Identifier	curcoarsesig2		3866136	1					
ANR	3867670	Identifier	data		3866136	1					
ANR	3867671	Identifier	i		3866136	1					
ANR	3867672	Argument	fs -> words [ i ]		3866136	1					
ANR	3867673	ArrayIndexing	fs -> words [ i ]		3866136	0					
ANR	3867674	PtrMemberAccess	fs -> words		3866136	0					
ANR	3867675	Identifier	fs		3866136	0					
ANR	3867676	Identifier	words		3866136	1					
ANR	3867677	Identifier	i		3866136	1					
ANR	3867678	ExpressionStatement	sc -> curcoarsesig2 -> last = fs	403:8:7288:7316	3866136	1	True				
ANR	3867679	AssignmentExpression	sc -> curcoarsesig2 -> last = fs		3866136	0		=			
ANR	3867680	PtrMemberAccess	sc -> curcoarsesig2 -> last		3866136	0					
ANR	3867681	PtrMemberAccess	sc -> curcoarsesig2		3866136	0					
ANR	3867682	Identifier	sc		3866136	0					
ANR	3867683	Identifier	curcoarsesig2		3866136	1					
ANR	3867684	Identifier	last		3866136	1					
ANR	3867685	Identifier	fs		3866136	1					
ANR	3867686	ExpressionStatement	sc -> coarsecount = ( sc -> coarsecount + 1 ) % 90	409:4:7332:7372	3866136	51	True				
ANR	3867687	AssignmentExpression	sc -> coarsecount = ( sc -> coarsecount + 1 ) % 90		3866136	0		=			
ANR	3867688	PtrMemberAccess	sc -> coarsecount		3866136	0					
ANR	3867689	Identifier	sc		3866136	0					
ANR	3867690	Identifier	coarsecount		3866136	1					
ANR	3867691	MultiplicativeExpression	( sc -> coarsecount + 1 ) % 90		3866136	1		%			
ANR	3867692	AdditiveExpression	sc -> coarsecount + 1		3866136	0		+			
ANR	3867693	PtrMemberAccess	sc -> coarsecount		3866136	0					
ANR	3867694	Identifier	sc		3866136	0					
ANR	3867695	Identifier	coarsecount		3866136	1					
ANR	3867696	PrimaryExpression	1		3866136	1					
ANR	3867697	PrimaryExpression	90		3866136	1					
ANR	3867698	IfStatement	if ( av_log_get_level ( ) == AV_LOG_DEBUG )		3866136	52					
ANR	3867699	Condition	av_log_get_level ( ) == AV_LOG_DEBUG	415:8:7425:7458	3866136	0	True				
ANR	3867700	EqualityExpression	av_log_get_level ( ) == AV_LOG_DEBUG		3866136	0		==			
ANR	3867701	CallExpression	av_log_get_level ( )		3866136	0					
ANR	3867702	Callee	av_log_get_level		3866136	0					
ANR	3867703	Identifier	av_log_get_level		3866136	0					
ANR	3867704	ArgumentList			3866136	1					
ANR	3867705	Identifier	AV_LOG_DEBUG		3866136	1					
ANR	3867706	CompoundStatement		413:44:7396:7396	3866136	1					
ANR	3867707	ExpressionStatement	"av_log ( ctx , AV_LOG_DEBUG , ""input %d, confidence: %d\\n"" , FF_INLINK_IDX ( inlink ) , fs -> confidence )"	417:8:7472:7566	3866136	0	True				
ANR	3867708	CallExpression	"av_log ( ctx , AV_LOG_DEBUG , ""input %d, confidence: %d\\n"" , FF_INLINK_IDX ( inlink ) , fs -> confidence )"		3866136	0					
ANR	3867709	Callee	av_log		3866136	0					
ANR	3867710	Identifier	av_log		3866136	0					
ANR	3867711	ArgumentList	ctx		3866136	1					
ANR	3867712	Argument	ctx		3866136	0					
ANR	3867713	Identifier	ctx		3866136	0					
ANR	3867714	Argument	AV_LOG_DEBUG		3866136	1					
ANR	3867715	Identifier	AV_LOG_DEBUG		3866136	0					
ANR	3867716	Argument	"""input %d, confidence: %d\\n"""		3866136	2					
ANR	3867717	PrimaryExpression	"""input %d, confidence: %d\\n"""		3866136	0					
ANR	3867718	Argument	FF_INLINK_IDX ( inlink )		3866136	3					
ANR	3867719	CallExpression	FF_INLINK_IDX ( inlink )		3866136	0					
ANR	3867720	Callee	FF_INLINK_IDX		3866136	0					
ANR	3867721	Identifier	FF_INLINK_IDX		3866136	0					
ANR	3867722	ArgumentList	inlink		3866136	1					
ANR	3867723	Argument	inlink		3866136	0					
ANR	3867724	Identifier	inlink		3866136	0					
ANR	3867725	Argument	fs -> confidence		3866136	4					
ANR	3867726	PtrMemberAccess	fs -> confidence		3866136	0					
ANR	3867727	Identifier	fs		3866136	0					
ANR	3867728	Identifier	confidence		3866136	1					
ANR	3867729	ExpressionStatement	"av_log ( ctx , AV_LOG_DEBUG , ""words:"" )"	421:8:7579:7614	3866136	1	True				
ANR	3867730	CallExpression	"av_log ( ctx , AV_LOG_DEBUG , ""words:"" )"		3866136	0					
ANR	3867731	Callee	av_log		3866136	0					
ANR	3867732	Identifier	av_log		3866136	0					
ANR	3867733	ArgumentList	ctx		3866136	1					
ANR	3867734	Argument	ctx		3866136	0					
ANR	3867735	Identifier	ctx		3866136	0					
ANR	3867736	Argument	AV_LOG_DEBUG		3866136	1					
ANR	3867737	Identifier	AV_LOG_DEBUG		3866136	0					
ANR	3867738	Argument	"""words:"""		3866136	2					
ANR	3867739	PrimaryExpression	"""words:"""		3866136	0					
ANR	3867740	ForStatement	for ( i = 0 ; i < 5 ; i ++ )		3866136	2					
ANR	3867741	ForInit	i = 0 ;	423:13:7630:7635	3866136	0	True				
ANR	3867742	AssignmentExpression	i = 0		3866136	0		=			
ANR	3867743	Identifier	i		3866136	0					
ANR	3867744	PrimaryExpression	0		3866136	1					
ANR	3867745	Condition	i < 5	423:20:7637:7641	3866136	1	True				
ANR	3867746	RelationalExpression	i < 5		3866136	0		<			
ANR	3867747	Identifier	i		3866136	0					
ANR	3867748	PrimaryExpression	5		3866136	1					
ANR	3867749	PostIncDecOperationExpression	i ++	423:27:7644:7646	3866136	2	True				
ANR	3867750	Identifier	i		3866136	0					
ANR	3867751	IncDec	++		3866136	1					
ANR	3867752	CompoundStatement		421:32:7584:7584	3866136	3					
ANR	3867753	ExpressionStatement	"av_log ( ctx , AV_LOG_DEBUG , "" %d:"" , fs -> words [ i ] )"	425:12:7664:7712	3866136	0	True				
ANR	3867754	CallExpression	"av_log ( ctx , AV_LOG_DEBUG , "" %d:"" , fs -> words [ i ] )"		3866136	0					
ANR	3867755	Callee	av_log		3866136	0					
ANR	3867756	Identifier	av_log		3866136	0					
ANR	3867757	ArgumentList	ctx		3866136	1					
ANR	3867758	Argument	ctx		3866136	0					
ANR	3867759	Identifier	ctx		3866136	0					
ANR	3867760	Argument	AV_LOG_DEBUG		3866136	1					
ANR	3867761	Identifier	AV_LOG_DEBUG		3866136	0					
ANR	3867762	Argument	""" %d:"""		3866136	2					
ANR	3867763	PrimaryExpression	""" %d:"""		3866136	0					
ANR	3867764	Argument	fs -> words [ i ]		3866136	3					
ANR	3867765	ArrayIndexing	fs -> words [ i ]		3866136	0					
ANR	3867766	PtrMemberAccess	fs -> words		3866136	0					
ANR	3867767	Identifier	fs		3866136	0					
ANR	3867768	Identifier	words		3866136	1					
ANR	3867769	Identifier	i		3866136	1					
ANR	3867770	ExpressionStatement	"av_log ( ctx , AV_LOG_DEBUG , "" %d"" , fs -> words [ i ] / pot3 [ 0 ] )"	427:12:7727:7784	3866136	1	True				
ANR	3867771	CallExpression	"av_log ( ctx , AV_LOG_DEBUG , "" %d"" , fs -> words [ i ] / pot3 [ 0 ] )"		3866136	0					
ANR	3867772	Callee	av_log		3866136	0					
ANR	3867773	Identifier	av_log		3866136	0					
ANR	3867774	ArgumentList	ctx		3866136	1					
ANR	3867775	Argument	ctx		3866136	0					
ANR	3867776	Identifier	ctx		3866136	0					
ANR	3867777	Argument	AV_LOG_DEBUG		3866136	1					
ANR	3867778	Identifier	AV_LOG_DEBUG		3866136	0					
ANR	3867779	Argument	""" %d"""		3866136	2					
ANR	3867780	PrimaryExpression	""" %d"""		3866136	0					
ANR	3867781	Argument	fs -> words [ i ] / pot3 [ 0 ]		3866136	3					
ANR	3867782	MultiplicativeExpression	fs -> words [ i ] / pot3 [ 0 ]		3866136	0		/			
ANR	3867783	ArrayIndexing	fs -> words [ i ]		3866136	0					
ANR	3867784	PtrMemberAccess	fs -> words		3866136	0					
ANR	3867785	Identifier	fs		3866136	0					
ANR	3867786	Identifier	words		3866136	1					
ANR	3867787	Identifier	i		3866136	1					
ANR	3867788	ArrayIndexing	pot3 [ 0 ]		3866136	1					
ANR	3867789	Identifier	pot3		3866136	0					
ANR	3867790	PrimaryExpression	0		3866136	1					
ANR	3867791	ForStatement	for ( j = 1 ; j < 5 ; j ++ )		3866136	2					
ANR	3867792	ForInit	j = 1 ;	429:17:7804:7809	3866136	0	True				
ANR	3867793	AssignmentExpression	j = 1		3866136	0		=			
ANR	3867794	Identifier	j		3866136	0					
ANR	3867795	PrimaryExpression	1		3866136	1					
ANR	3867796	Condition	j < 5	429:24:7811:7815	3866136	1	True				
ANR	3867797	RelationalExpression	j < 5		3866136	0		<			
ANR	3867798	Identifier	j		3866136	0					
ANR	3867799	PrimaryExpression	5		3866136	1					
ANR	3867800	PostIncDecOperationExpression	j ++	429:31:7818:7820	3866136	2	True				
ANR	3867801	Identifier	j		3866136	0					
ANR	3867802	IncDec	++		3866136	1					
ANR	3867803	ExpressionStatement	"av_log ( ctx , AV_LOG_DEBUG , "",%d"" , fs -> words [ i ] % pot3 [ j - 1 ] / pot3 [ j ] )"	431:16:7840:7909	3866136	3	True				
ANR	3867804	CallExpression	"av_log ( ctx , AV_LOG_DEBUG , "",%d"" , fs -> words [ i ] % pot3 [ j - 1 ] / pot3 [ j ] )"		3866136	0					
ANR	3867805	Callee	av_log		3866136	0					
ANR	3867806	Identifier	av_log		3866136	0					
ANR	3867807	ArgumentList	ctx		3866136	1					
ANR	3867808	Argument	ctx		3866136	0					
ANR	3867809	Identifier	ctx		3866136	0					
ANR	3867810	Argument	AV_LOG_DEBUG		3866136	1					
ANR	3867811	Identifier	AV_LOG_DEBUG		3866136	0					
ANR	3867812	Argument	""",%d"""		3866136	2					
ANR	3867813	PrimaryExpression	""",%d"""		3866136	0					
ANR	3867814	Argument	fs -> words [ i ] % pot3 [ j - 1 ] / pot3 [ j ]		3866136	3					
ANR	3867815	MultiplicativeExpression	fs -> words [ i ] % pot3 [ j - 1 ] / pot3 [ j ]		3866136	0		%			
ANR	3867816	ArrayIndexing	fs -> words [ i ]		3866136	0					
ANR	3867817	PtrMemberAccess	fs -> words		3866136	0					
ANR	3867818	Identifier	fs		3866136	0					
ANR	3867819	Identifier	words		3866136	1					
ANR	3867820	Identifier	i		3866136	1					
ANR	3867821	MultiplicativeExpression	pot3 [ j - 1 ] / pot3 [ j ]		3866136	1		/			
ANR	3867822	ArrayIndexing	pot3 [ j - 1 ]		3866136	0					
ANR	3867823	Identifier	pot3		3866136	0					
ANR	3867824	AdditiveExpression	j - 1		3866136	1		-			
ANR	3867825	Identifier	j		3866136	0					
ANR	3867826	PrimaryExpression	1		3866136	1					
ANR	3867827	ArrayIndexing	pot3 [ j ]		3866136	1					
ANR	3867828	Identifier	pot3		3866136	0					
ANR	3867829	Identifier	j		3866136	1					
ANR	3867830	ExpressionStatement	"av_log ( ctx , AV_LOG_DEBUG , "";"" )"	433:12:7924:7954	3866136	3	True				
ANR	3867831	CallExpression	"av_log ( ctx , AV_LOG_DEBUG , "";"" )"		3866136	0					
ANR	3867832	Callee	av_log		3866136	0					
ANR	3867833	Identifier	av_log		3866136	0					
ANR	3867834	ArgumentList	ctx		3866136	1					
ANR	3867835	Argument	ctx		3866136	0					
ANR	3867836	Identifier	ctx		3866136	0					
ANR	3867837	Argument	AV_LOG_DEBUG		3866136	1					
ANR	3867838	Identifier	AV_LOG_DEBUG		3866136	0					
ANR	3867839	Argument	""";"""		3866136	2					
ANR	3867840	PrimaryExpression	""";"""		3866136	0					
ANR	3867841	ExpressionStatement	"av_log ( ctx , AV_LOG_DEBUG , ""\\n"" )"	437:8:7976:8007	3866136	3	True				
ANR	3867842	CallExpression	"av_log ( ctx , AV_LOG_DEBUG , ""\\n"" )"		3866136	0					
ANR	3867843	Callee	av_log		3866136	0					
ANR	3867844	Identifier	av_log		3866136	0					
ANR	3867845	ArgumentList	ctx		3866136	1					
ANR	3867846	Argument	ctx		3866136	0					
ANR	3867847	Identifier	ctx		3866136	0					
ANR	3867848	Argument	AV_LOG_DEBUG		3866136	1					
ANR	3867849	Identifier	AV_LOG_DEBUG		3866136	0					
ANR	3867850	Argument	"""\\n"""		3866136	2					
ANR	3867851	PrimaryExpression	"""\\n"""		3866136	0					
ANR	3867852	ExpressionStatement	"av_log ( ctx , AV_LOG_DEBUG , ""framesignature:"" )"	441:8:8020:8064	3866136	4	True				
ANR	3867853	CallExpression	"av_log ( ctx , AV_LOG_DEBUG , ""framesignature:"" )"		3866136	0					
ANR	3867854	Callee	av_log		3866136	0					
ANR	3867855	Identifier	av_log		3866136	0					
ANR	3867856	ArgumentList	ctx		3866136	1					
ANR	3867857	Argument	ctx		3866136	0					
ANR	3867858	Identifier	ctx		3866136	0					
ANR	3867859	Argument	AV_LOG_DEBUG		3866136	1					
ANR	3867860	Identifier	AV_LOG_DEBUG		3866136	0					
ANR	3867861	Argument	"""framesignature:"""		3866136	2					
ANR	3867862	PrimaryExpression	"""framesignature:"""		3866136	0					
ANR	3867863	ForStatement	for ( i = 0 ; i < SIGELEM_SIZE / 5 ; i ++ )		3866136	5					
ANR	3867864	ForInit	i = 0 ;	443:13:8080:8085	3866136	0	True				
ANR	3867865	AssignmentExpression	i = 0		3866136	0		=			
ANR	3867866	Identifier	i		3866136	0					
ANR	3867867	PrimaryExpression	0		3866136	1					
ANR	3867868	Condition	i < SIGELEM_SIZE / 5	443:20:8087:8104	3866136	1	True				
ANR	3867869	RelationalExpression	i < SIGELEM_SIZE / 5		3866136	0		<			
ANR	3867870	Identifier	i		3866136	0					
ANR	3867871	MultiplicativeExpression	SIGELEM_SIZE / 5		3866136	1		/			
ANR	3867872	Identifier	SIGELEM_SIZE		3866136	0					
ANR	3867873	PrimaryExpression	5		3866136	1					
ANR	3867874	PostIncDecOperationExpression	i ++	443:40:8107:8109	3866136	2	True				
ANR	3867875	Identifier	i		3866136	0					
ANR	3867876	IncDec	++		3866136	1					
ANR	3867877	CompoundStatement		441:45:8047:8047	3866136	3					
ANR	3867878	ExpressionStatement	"av_log ( ctx , AV_LOG_DEBUG , "" %d"" , fs -> framesig [ i ] / pot3 [ 0 ] )"	445:12:8127:8187	3866136	0	True				
ANR	3867879	CallExpression	"av_log ( ctx , AV_LOG_DEBUG , "" %d"" , fs -> framesig [ i ] / pot3 [ 0 ] )"		3866136	0					
ANR	3867880	Callee	av_log		3866136	0					
ANR	3867881	Identifier	av_log		3866136	0					
ANR	3867882	ArgumentList	ctx		3866136	1					
ANR	3867883	Argument	ctx		3866136	0					
ANR	3867884	Identifier	ctx		3866136	0					
ANR	3867885	Argument	AV_LOG_DEBUG		3866136	1					
ANR	3867886	Identifier	AV_LOG_DEBUG		3866136	0					
ANR	3867887	Argument	""" %d"""		3866136	2					
ANR	3867888	PrimaryExpression	""" %d"""		3866136	0					
ANR	3867889	Argument	fs -> framesig [ i ] / pot3 [ 0 ]		3866136	3					
ANR	3867890	MultiplicativeExpression	fs -> framesig [ i ] / pot3 [ 0 ]		3866136	0		/			
ANR	3867891	ArrayIndexing	fs -> framesig [ i ]		3866136	0					
ANR	3867892	PtrMemberAccess	fs -> framesig		3866136	0					
ANR	3867893	Identifier	fs		3866136	0					
ANR	3867894	Identifier	framesig		3866136	1					
ANR	3867895	Identifier	i		3866136	1					
ANR	3867896	ArrayIndexing	pot3 [ 0 ]		3866136	1					
ANR	3867897	Identifier	pot3		3866136	0					
ANR	3867898	PrimaryExpression	0		3866136	1					
ANR	3867899	ForStatement	for ( j = 1 ; j < 5 ; j ++ )		3866136	1					
ANR	3867900	ForInit	j = 1 ;	447:17:8207:8212	3866136	0	True				
ANR	3867901	AssignmentExpression	j = 1		3866136	0		=			
ANR	3867902	Identifier	j		3866136	0					
ANR	3867903	PrimaryExpression	1		3866136	1					
ANR	3867904	Condition	j < 5	447:24:8214:8218	3866136	1	True				
ANR	3867905	RelationalExpression	j < 5		3866136	0		<			
ANR	3867906	Identifier	j		3866136	0					
ANR	3867907	PrimaryExpression	5		3866136	1					
ANR	3867908	PostIncDecOperationExpression	j ++	447:31:8221:8223	3866136	2	True				
ANR	3867909	Identifier	j		3866136	0					
ANR	3867910	IncDec	++		3866136	1					
ANR	3867911	ExpressionStatement	"av_log ( ctx , AV_LOG_DEBUG , "",%d"" , fs -> framesig [ i ] % pot3 [ j - 1 ] / pot3 [ j ] )"	449:16:8243:8315	3866136	3	True				
ANR	3867912	CallExpression	"av_log ( ctx , AV_LOG_DEBUG , "",%d"" , fs -> framesig [ i ] % pot3 [ j - 1 ] / pot3 [ j ] )"		3866136	0					
ANR	3867913	Callee	av_log		3866136	0					
ANR	3867914	Identifier	av_log		3866136	0					
ANR	3867915	ArgumentList	ctx		3866136	1					
ANR	3867916	Argument	ctx		3866136	0					
ANR	3867917	Identifier	ctx		3866136	0					
ANR	3867918	Argument	AV_LOG_DEBUG		3866136	1					
ANR	3867919	Identifier	AV_LOG_DEBUG		3866136	0					
ANR	3867920	Argument	""",%d"""		3866136	2					
ANR	3867921	PrimaryExpression	""",%d"""		3866136	0					
ANR	3867922	Argument	fs -> framesig [ i ] % pot3 [ j - 1 ] / pot3 [ j ]		3866136	3					
ANR	3867923	MultiplicativeExpression	fs -> framesig [ i ] % pot3 [ j - 1 ] / pot3 [ j ]		3866136	0		%			
ANR	3867924	ArrayIndexing	fs -> framesig [ i ]		3866136	0					
ANR	3867925	PtrMemberAccess	fs -> framesig		3866136	0					
ANR	3867926	Identifier	fs		3866136	0					
ANR	3867927	Identifier	framesig		3866136	1					
ANR	3867928	Identifier	i		3866136	1					
ANR	3867929	MultiplicativeExpression	pot3 [ j - 1 ] / pot3 [ j ]		3866136	1		/			
ANR	3867930	ArrayIndexing	pot3 [ j - 1 ]		3866136	0					
ANR	3867931	Identifier	pot3		3866136	0					
ANR	3867932	AdditiveExpression	j - 1		3866136	1		-			
ANR	3867933	Identifier	j		3866136	0					
ANR	3867934	PrimaryExpression	1		3866136	1					
ANR	3867935	ArrayIndexing	pot3 [ j ]		3866136	1					
ANR	3867936	Identifier	pot3		3866136	0					
ANR	3867937	Identifier	j		3866136	1					
ANR	3867938	ExpressionStatement	"av_log ( ctx , AV_LOG_DEBUG , ""\\n"" )"	453:8:8337:8368	3866136	6	True				
ANR	3867939	CallExpression	"av_log ( ctx , AV_LOG_DEBUG , ""\\n"" )"		3866136	0					
ANR	3867940	Callee	av_log		3866136	0					
ANR	3867941	Identifier	av_log		3866136	0					
ANR	3867942	ArgumentList	ctx		3866136	1					
ANR	3867943	Argument	ctx		3866136	0					
ANR	3867944	Identifier	ctx		3866136	0					
ANR	3867945	Argument	AV_LOG_DEBUG		3866136	1					
ANR	3867946	Identifier	AV_LOG_DEBUG		3866136	0					
ANR	3867947	Argument	"""\\n"""		3866136	2					
ANR	3867948	PrimaryExpression	"""\\n"""		3866136	0					
ANR	3867949	IfStatement	if ( FF_INLINK_IDX ( inlink ) == 0 )		3866136	53					
ANR	3867950	Condition	FF_INLINK_IDX ( inlink ) == 0	459:8:8388:8413	3866136	0	True				
ANR	3867951	EqualityExpression	FF_INLINK_IDX ( inlink ) == 0		3866136	0		==			
ANR	3867952	CallExpression	FF_INLINK_IDX ( inlink )		3866136	0					
ANR	3867953	Callee	FF_INLINK_IDX		3866136	0					
ANR	3867954	Identifier	FF_INLINK_IDX		3866136	0					
ANR	3867955	ArgumentList	inlink		3866136	1					
ANR	3867956	Argument	inlink		3866136	0					
ANR	3867957	Identifier	inlink		3866136	0					
ANR	3867958	PrimaryExpression	0		3866136	1					
ANR	3867959	ReturnStatement	"return ff_filter_frame ( inlink -> dst -> outputs [ 0 ] , picref ) ;"	461:8:8425:8480	3866136	1	True				
ANR	3867960	CallExpression	"ff_filter_frame ( inlink -> dst -> outputs [ 0 ] , picref )"		3866136	0					
ANR	3867961	Callee	ff_filter_frame		3866136	0					
ANR	3867962	Identifier	ff_filter_frame		3866136	0					
ANR	3867963	ArgumentList	inlink -> dst -> outputs [ 0 ]		3866136	1					
ANR	3867964	Argument	inlink -> dst -> outputs [ 0 ]		3866136	0					
ANR	3867965	ArrayIndexing	inlink -> dst -> outputs [ 0 ]		3866136	0					
ANR	3867966	PtrMemberAccess	inlink -> dst -> outputs		3866136	0					
ANR	3867967	PtrMemberAccess	inlink -> dst		3866136	0					
ANR	3867968	Identifier	inlink		3866136	0					
ANR	3867969	Identifier	dst		3866136	1					
ANR	3867970	Identifier	outputs		3866136	1					
ANR	3867971	PrimaryExpression	0		3866136	1					
ANR	3867972	Argument	picref		3866136	1					
ANR	3867973	Identifier	picref		3866136	0					
ANR	3867974	ReturnStatement	return 1 ;	463:4:8487:8495	3866136	54	True				
ANR	3867975	PrimaryExpression	1		3866136	0					
ANR	3867976	ReturnType	static int		3866136	1					
ANR	3867977	Identifier	filter_frame		3866136	2					
ANR	3867978	ParameterList	"AVFilterLink * inlink , AVFrame * picref"		3866136	3					
ANR	3867979	Parameter	AVFilterLink * inlink	1:24:24:43	3866136	0	True				
ANR	3867980	ParameterType	AVFilterLink *		3866136	0					
ANR	3867981	Identifier	inlink		3866136	1					
ANR	3867982	Parameter	AVFrame * picref	1:46:46:60	3866136	1	True				
ANR	3867983	ParameterType	AVFrame *		3866136	0					
ANR	3867984	Identifier	picref		3866136	1					
ANR	3867985	CFGEntryNode	ENTRY		3866136		True				
ANR	3867986	CFGExitNode	EXIT		3866136		True				
ANR	3867987	Symbol	blocksize		3866136						
ANR	3867988	Symbol	ENOMEM		3866136						
ANR	3867989	Symbol	* w		3866136						
ANR	3867990	Symbol	elemcat		3866136						
ANR	3867991	Symbol	get_block_size		3866136						
ANR	3867992	Symbol	sc -> coarseend		3866136						
ANR	3867993	Symbol	fs -> index		3866136						
ANR	3867994	Symbol	* intj		3866136						
ANR	3867995	Symbol	* inti		3866136						
ANR	3867996	Symbol	sc -> curcoarsesig1 -> next		3866136						
ANR	3867997	Symbol	* inlink -> dst -> outputs		3866136						
ANR	3867998	Symbol	* wordvec		3866136						
ANR	3867999	Symbol	sc -> lastindex		3866136						
ANR	3868000	Symbol	* sc		3866136						
ANR	3868001	Symbol	* pot3		3866136						
ANR	3868002	Symbol	* * inlink -> dst		3866136						
ANR	3868003	Symbol	denom		3866136						
ANR	3868004	Symbol	AV_LOG_DEBUG		3866136						
ANR	3868005	Symbol	* * inti		3866136						
ANR	3868006	Symbol	sortsignature		3866136						
ANR	3868007	Symbol	ctx		3866136						
ANR	3868008	Symbol	av_mallocz		3866136						
ANR	3868009	Symbol	sc -> curcoarsesig2 -> first		3866136						
ANR	3868010	Symbol	elemsignature		3866136						
ANR	3868011	Symbol	& sortsignature		3866136						
ANR	3868012	Symbol	FF_INLINK_IDX		3866136						
ANR	3868013	Symbol	dh1		3866136						
ANR	3868014	Symbol	dh2		3866136						
ANR	3868015	Symbol	picref -> pts		3866136						
ANR	3868016	Symbol	sc -> midcoarse		3866136						
ANR	3868017	Symbol	fs -> words		3866136						
ANR	3868018	Symbol	* elements		3866136						
ANR	3868019	Symbol	* elemcat -> elem_count		3866136						
ANR	3868020	Symbol	* DIFFELEM_SIZE		3866136						
ANR	3868021	Symbol	* * fs		3866136						
ANR	3868022	Symbol	fs -> confidence		3866136						
ANR	3868023	Symbol	* * * inlink		3866136						
ANR	3868024	Symbol	* sc -> curcoarsesig2		3866136						
ANR	3868025	Symbol	* sc -> curcoarsesig1		3866136						
ANR	3868026	Symbol	get_block_sum		3866136						
ANR	3868027	Symbol	cmp		3866136						
ANR	3868028	Symbol	inlink -> dst		3866136						
ANR	3868029	Symbol	pot3		3866136						
ANR	3868030	Symbol	intpic		3866136						
ANR	3868031	Symbol	sum		3866136						
ANR	3868032	Symbol	* elemsignature		3866136						
ANR	3868033	Symbol	* * inlink		3866136						
ANR	3868034	Symbol	ff_filter_frame		3866136						
ANR	3868035	Symbol	sc -> curfinesig		3866136						
ANR	3868036	Symbol	sc		3866136						
ANR	3868037	Symbol	sc -> curcoarsesig1 -> data		3866136						
ANR	3868038	Symbol	elemcat -> left_count		3866136						
ANR	3868039	Symbol	picref -> linesize		3866136						
ANR	3868040	Symbol	* * w		3866136						
ANR	3868041	Symbol	inlink -> w		3866136						
ANR	3868042	Symbol	sc -> coarsecount		3866136						
ANR	3868043	Symbol	* picref -> data		3866136						
ANR	3868044	Symbol	a		3866136						
ANR	3868045	Symbol	precfactor		3866136						
ANR	3868046	Symbol	b		3866136						
ANR	3868047	Symbol	* fs -> words		3866136						
ANR	3868048	Symbol	f		3866136						
ANR	3868049	Symbol	intjlut		3866136						
ANR	3868050	Symbol	g		3866136						
ANR	3868051	Symbol	inlink -> h		3866136						
ANR	3868052	Symbol	i		3866136						
ANR	3868053	Symbol	FFABS		3866136						
ANR	3868054	Symbol	* s2usw		3866136						
ANR	3868055	Symbol	sc -> curcoarsesig1 -> last		3866136						
ANR	3868056	Symbol	intj		3866136						
ANR	3868057	Symbol	j		3866136						
ANR	3868058	Symbol	inti		3866136						
ANR	3868059	Symbol	k		3866136						
ANR	3868060	Symbol	SIGELEM_SIZE		3866136						
ANR	3868061	Symbol	* ctx		3866136						
ANR	3868062	Symbol	p		3866136						
ANR	3868063	Symbol	* inlink		3866136						
ANR	3868064	Symbol	th		3866136						
ANR	3868065	Symbol	s2usw		3866136						
ANR	3868066	Symbol	w		3866136						
ANR	3868067	Symbol	elements		3866136						
ANR	3868068	Symbol	elemcat -> block_count		3866136						
ANR	3868069	Symbol	av_malloc_array		3866136						
ANR	3868070	Symbol	wordt2b		3866136						
ANR	3868071	Symbol	DIFFELEM_SIZE		3866136						
ANR	3868072	Symbol	* * s2usw		3866136						
ANR	3868073	Symbol	* sc -> curcoarsesig1 -> data		3866136						
ANR	3868074	Symbol	picref -> data		3866136						
ANR	3868075	Symbol	FFMIN		3866136						
ANR	3868076	Symbol	fs -> prev		3866136						
ANR	3868077	Symbol	* * elemcat		3866136						
ANR	3868078	Symbol	* fs		3866136						
ANR	3868079	Symbol	inlink -> dst -> outputs		3866136						
ANR	3868080	Symbol	elemcat -> av_elem		3866136						
ANR	3868081	Symbol	sc -> curcoarsesig2 -> data		3866136						
ANR	3868082	Symbol	elemcat -> elem_count		3866136						
ANR	3868083	Symbol	sc -> divide		3866136						
ANR	3868084	Symbol	ELEMENT_COUNT		3866136						
ANR	3868085	Symbol	* * i		3866136						
ANR	3868086	Symbol	rowcount		3866136						
ANR	3868087	Symbol	* * sc -> curcoarsesig1		3866136						
ANR	3868088	Symbol	* * sc -> curcoarsesig2		3866136						
ANR	3868089	Symbol	av_log_get_level		3866136						
ANR	3868090	Symbol	wordvec		3866136						
ANR	3868091	Symbol	conflist		3866136						
ANR	3868092	Symbol	sic -> streamcontexts		3866136						
ANR	3868093	Symbol	* picref -> linesize		3866136						
ANR	3868094	Symbol	sc -> curcoarsesig2 -> next		3866136						
ANR	3868095	Symbol	* picref		3866136						
ANR	3868096	Symbol	* elemcat		3866136						
ANR	3868097	Symbol	* sic		3866136						
ANR	3868098	Symbol	* * sc		3866136						
ANR	3868099	Symbol	sc -> curcoarsesig1		3866136						
ANR	3868100	Symbol	sc -> curcoarsesig2		3866136						
ANR	3868101	Symbol	fs -> pts		3866136						
ANR	3868102	Symbol	BLOCK_LCM		3866136						
ANR	3868103	Symbol	* * * sc		3866136						
ANR	3868104	Symbol	sic		3866136						
ANR	3868105	Symbol	elemcat -> blocks		3866136						
ANR	3868106	Symbol	fs		3866136						
ANR	3868107	Symbol	* intjlut		3866136						
ANR	3868108	Symbol	* sc -> curcoarsesig2 -> data		3866136						
ANR	3868109	Symbol	* sc -> curfinesig		3866136						
ANR	3868110	Symbol	sc -> finesiglist		3866136						
ANR	3868111	Symbol	& intjlut		3866136						
ANR	3868112	Symbol	* sortsignature		3866136						
ANR	3868113	Symbol	sc -> curcoarsesig2 -> last		3866136						
ANR	3868114	Symbol	* intpic		3866136						
ANR	3868115	Symbol	picref		3866136						
ANR	3868116	Symbol	* * picref		3866136						
ANR	3868117	Symbol	sc -> curcoarsesig1 -> first		3866136						
ANR	3868118	Symbol	* wordt2b		3866136						
ANR	3868119	Symbol	* * intpic		3866136						
ANR	3868120	Symbol	& elemsignature		3866136						
ANR	3868121	Symbol	ctx -> priv		3866136						
ANR	3868122	Symbol	fs -> framesig		3866136						
ANR	3868123	Symbol	sc -> curfinesig -> next		3866136						
ANR	3868124	Symbol	* f		3866136						
ANR	3868125	Symbol	inlink		3866136						
ANR	3868126	Symbol	* i		3866136						
ANR	3868127	Symbol	* j		3866136						
ANR	3868128	Symbol	* inlink -> dst		3866136						
ANR	3868129	Symbol	* p		3866136						
ANR	3868130	Symbol	AVERROR		3866136						
ANR	3868131	Symbol	ternary		3866136						
ANR	3868132	Symbol	blocksum		3866136						
ANR	3868133	Symbol	dw2		3866136						
ANR	3868134	Symbol	dw1		3866136						
ANR	3868135	Symbol	* conflist		3866136						
ANR	3868136	Symbol	* fs -> framesig		3866136						
