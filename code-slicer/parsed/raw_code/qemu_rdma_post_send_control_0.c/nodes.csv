command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	7030534	File	/home/p4ultr4n/workplace/ReVeal/raw_code/qemu_rdma_post_send_control_0.c								
ANR	7030535	Function	qemu_rdma_post_send_control	1:0:0:1957							
ANR	7030536	FunctionDef	"qemu_rdma_post_send_control (RDMAContext * rdma , uint8_t * buf , RDMAControlHeader * head)"		7030535	0					
ANR	7030537	CompoundStatement		5:0:138:1957	7030535	0					
ANR	7030538	IdentifierDeclStatement	int ret = 0 ;	7:4:145:156	7030535	0	True				
ANR	7030539	IdentifierDecl	ret = 0		7030535	0					
ANR	7030540	IdentifierDeclType	int		7030535	0					
ANR	7030541	Identifier	ret		7030535	1					
ANR	7030542	AssignmentExpression	ret = 0		7030535	2		=			
ANR	7030543	Identifier	ret		7030535	0					
ANR	7030544	PrimaryExpression	0		7030535	1					
ANR	7030545	IdentifierDeclStatement	RDMAWorkRequestData * wr = & rdma -> wr_data [ RDMA_WRID_CONTROL ] ;	9:4:163:222	7030535	1	True				
ANR	7030546	IdentifierDecl	* wr = & rdma -> wr_data [ RDMA_WRID_CONTROL ]		7030535	0					
ANR	7030547	IdentifierDeclType	RDMAWorkRequestData *		7030535	0					
ANR	7030548	Identifier	wr		7030535	1					
ANR	7030549	AssignmentExpression	* wr = & rdma -> wr_data [ RDMA_WRID_CONTROL ]		7030535	2		=			
ANR	7030550	Identifier	wr		7030535	0					
ANR	7030551	UnaryOperationExpression	& rdma -> wr_data [ RDMA_WRID_CONTROL ]		7030535	1					
ANR	7030552	UnaryOperator	&		7030535	0					
ANR	7030553	ArrayIndexing	rdma -> wr_data [ RDMA_WRID_CONTROL ]		7030535	1					
ANR	7030554	PtrMemberAccess	rdma -> wr_data		7030535	0					
ANR	7030555	Identifier	rdma		7030535	0					
ANR	7030556	Identifier	wr_data		7030535	1					
ANR	7030557	Identifier	RDMA_WRID_CONTROL		7030535	1					
ANR	7030558	IdentifierDeclStatement	struct ibv_send_wr * bad_wr ;	11:4:229:255	7030535	2	True				
ANR	7030559	IdentifierDecl	* bad_wr		7030535	0					
ANR	7030560	IdentifierDeclType	struct ibv_send_wr *		7030535	0					
ANR	7030561	Identifier	bad_wr		7030535	1					
ANR	7030562	Statement	struct	13:4:262:267	7030535	3	True				
ANR	7030563	Statement	ibv_sge	13:11:269:275	7030535	4	True				
ANR	7030564	Statement	sge	13:19:277:279	7030535	5	True				
ANR	7030565	Statement	=	13:23:281:281	7030535	6	True				
ANR	7030566	CompoundStatement		9:25:144:144	7030535	7					
ANR	7030567	Statement	.	15:27:313:313	7030535	0	True				
ANR	7030568	Statement	addr	15:28:314:317	7030535	1	True				
ANR	7030569	Statement	=	15:33:319:319	7030535	2	True				
ANR	7030570	Statement	(	15:35:321:321	7030535	3	True				
ANR	7030571	Statement	uint64_t	15:36:322:329	7030535	4	True				
ANR	7030572	Statement	)	15:44:330:330	7030535	5	True				
ANR	7030573	Statement	(	15:45:331:331	7030535	6	True				
ANR	7030574	Statement	wr	15:46:332:333	7030535	7	True				
ANR	7030575	Statement	->	15:48:334:335	7030535	8	True				
ANR	7030576	Statement	control	15:50:336:342	7030535	9	True				
ANR	7030577	Statement	)	15:57:343:343	7030535	10	True				
ANR	7030578	Statement	","	15:58:344:344	7030535	11	True				
ANR	7030579	Statement	.	17:27:374:374	7030535	12	True				
ANR	7030580	Statement	length	17:28:375:380	7030535	13	True				
ANR	7030581	Statement	=	17:35:382:382	7030535	14	True				
ANR	7030582	Statement	head	17:37:384:387	7030535	15	True				
ANR	7030583	Statement	->	17:41:388:389	7030535	16	True				
ANR	7030584	Statement	len	17:43:390:392	7030535	17	True				
ANR	7030585	Statement	+	17:47:394:394	7030535	18	True				
ANR	7030586	Statement	sizeof	17:49:396:401	7030535	19	True				
ANR	7030587	Statement	(	17:55:402:402	7030535	20	True				
ANR	7030588	Statement	RDMAControlHeader	17:56:403:419	7030535	21	True				
ANR	7030589	Statement	)	17:73:420:420	7030535	22	True				
ANR	7030590	Statement	","	17:74:421:421	7030535	23	True				
ANR	7030591	Statement	.	19:27:451:451	7030535	24	True				
ANR	7030592	Statement	lkey	19:28:452:455	7030535	25	True				
ANR	7030593	Statement	=	19:33:457:457	7030535	26	True				
ANR	7030594	Statement	wr	19:35:459:460	7030535	27	True				
ANR	7030595	Statement	->	19:37:461:462	7030535	28	True				
ANR	7030596	Statement	control_mr	19:39:463:472	7030535	29	True				
ANR	7030597	Statement	->	19:49:473:474	7030535	30	True				
ANR	7030598	Statement	lkey	19:51:475:478	7030535	31	True				
ANR	7030599	Statement	","	19:55:479:479	7030535	32	True				
ANR	7030600	ExpressionStatement		21:26:508:508	7030535	8	True				
ANR	7030601	Statement	struct	23:4:515:520	7030535	9	True				
ANR	7030602	Statement	ibv_send_wr	23:11:522:532	7030535	10	True				
ANR	7030603	Statement	send_wr	23:23:534:540	7030535	11	True				
ANR	7030604	Statement	=	23:31:542:542	7030535	12	True				
ANR	7030605	CompoundStatement		19:33:405:405	7030535	13					
ANR	7030606	Statement	.	25:35:582:582	7030535	0	True				
ANR	7030607	Statement	wr_id	25:36:583:587	7030535	1	True				
ANR	7030608	Statement	=	25:42:589:589	7030535	2	True				
ANR	7030609	Statement	RDMA_WRID_SEND_CONTROL	25:44:591:612	7030535	3	True				
ANR	7030610	Statement	","	25:66:613:613	7030535	4	True				
ANR	7030611	Statement	.	27:35:651:651	7030535	5	True				
ANR	7030612	Statement	opcode	27:36:652:657	7030535	6	True				
ANR	7030613	Statement	=	27:43:659:659	7030535	7	True				
ANR	7030614	Statement	IBV_WR_SEND	27:45:661:671	7030535	8	True				
ANR	7030615	Statement	","	27:56:672:672	7030535	9	True				
ANR	7030616	Statement	.	29:35:710:710	7030535	10	True				
ANR	7030617	Statement	send_flags	29:36:711:720	7030535	11	True				
ANR	7030618	Statement	=	29:47:722:722	7030535	12	True				
ANR	7030619	Statement	IBV_SEND_SIGNALED	29:49:724:740	7030535	13	True				
ANR	7030620	Statement	","	29:66:741:741	7030535	14	True				
ANR	7030621	Statement	.	31:35:779:779	7030535	15	True				
ANR	7030622	Statement	sg_list	31:36:780:786	7030535	16	True				
ANR	7030623	Statement	=	31:44:788:788	7030535	17	True				
ANR	7030624	Statement	&	31:46:790:790	7030535	18	True				
ANR	7030625	Statement	sge	31:47:791:793	7030535	19	True				
ANR	7030626	Statement	","	31:50:794:794	7030535	20	True				
ANR	7030627	Statement	.	33:35:832:832	7030535	21	True				
ANR	7030628	Statement	num_sge	33:36:833:839	7030535	22	True				
ANR	7030629	Statement	=	33:44:841:841	7030535	23	True				
ANR	7030630	Statement	1	33:46:843:843	7030535	24	True				
ANR	7030631	Statement	","	33:47:844:844	7030535	25	True				
ANR	7030632	ExpressionStatement		35:33:880:880	7030535	14	True				
ANR	7030633	ExpressionStatement	"DDDPRINTF ( ""CONTROL: sending %s..\\n"" , control_desc [ head -> type ] )"	39:4:889:951	7030535	15	True				
ANR	7030634	CallExpression	"DDDPRINTF ( ""CONTROL: sending %s..\\n"" , control_desc [ head -> type ] )"		7030535	0					
ANR	7030635	Callee	DDDPRINTF		7030535	0					
ANR	7030636	Identifier	DDDPRINTF		7030535	0					
ANR	7030637	ArgumentList	"""CONTROL: sending %s..\\n"""		7030535	1					
ANR	7030638	Argument	"""CONTROL: sending %s..\\n"""		7030535	0					
ANR	7030639	PrimaryExpression	"""CONTROL: sending %s..\\n"""		7030535	0					
ANR	7030640	Argument	control_desc [ head -> type ]		7030535	1					
ANR	7030641	ArrayIndexing	control_desc [ head -> type ]		7030535	0					
ANR	7030642	Identifier	control_desc		7030535	0					
ANR	7030643	PtrMemberAccess	head -> type		7030535	1					
ANR	7030644	Identifier	head		7030535	0					
ANR	7030645	Identifier	type		7030535	1					
ANR	7030646	ExpressionStatement	assert ( head -> len <= RDMA_CONTROL_MAX_BUFFER - sizeof ( * head ) )	59:4:1292:1352	7030535	16	True				
ANR	7030647	CallExpression	assert ( head -> len <= RDMA_CONTROL_MAX_BUFFER - sizeof ( * head ) )		7030535	0					
ANR	7030648	Callee	assert		7030535	0					
ANR	7030649	Identifier	assert		7030535	0					
ANR	7030650	ArgumentList	head -> len <= RDMA_CONTROL_MAX_BUFFER - sizeof ( * head )		7030535	1					
ANR	7030651	Argument	head -> len <= RDMA_CONTROL_MAX_BUFFER - sizeof ( * head )		7030535	0					
ANR	7030652	RelationalExpression	head -> len <= RDMA_CONTROL_MAX_BUFFER - sizeof ( * head )		7030535	0		<=			
ANR	7030653	PtrMemberAccess	head -> len		7030535	0					
ANR	7030654	Identifier	head		7030535	0					
ANR	7030655	Identifier	len		7030535	1					
ANR	7030656	AdditiveExpression	RDMA_CONTROL_MAX_BUFFER - sizeof ( * head )		7030535	1		-			
ANR	7030657	Identifier	RDMA_CONTROL_MAX_BUFFER		7030535	0					
ANR	7030658	SizeofExpression	sizeof ( * head )		7030535	1					
ANR	7030659	Sizeof	sizeof		7030535	0					
ANR	7030660	UnaryOperationExpression	* head		7030535	1					
ANR	7030661	UnaryOperator	*		7030535	0					
ANR	7030662	Identifier	head		7030535	1					
ANR	7030663	ExpressionStatement	"memcpy ( wr -> control , head , sizeof ( RDMAControlHeader ) )"	61:4:1359:1411	7030535	17	True				
ANR	7030664	CallExpression	"memcpy ( wr -> control , head , sizeof ( RDMAControlHeader ) )"		7030535	0					
ANR	7030665	Callee	memcpy		7030535	0					
ANR	7030666	Identifier	memcpy		7030535	0					
ANR	7030667	ArgumentList	wr -> control		7030535	1					
ANR	7030668	Argument	wr -> control		7030535	0					
ANR	7030669	PtrMemberAccess	wr -> control		7030535	0					
ANR	7030670	Identifier	wr		7030535	0					
ANR	7030671	Identifier	control		7030535	1					
ANR	7030672	Argument	head		7030535	1					
ANR	7030673	Identifier	head		7030535	0					
ANR	7030674	Argument	sizeof ( RDMAControlHeader )		7030535	2					
ANR	7030675	SizeofExpression	sizeof ( RDMAControlHeader )		7030535	0					
ANR	7030676	Sizeof	sizeof		7030535	0					
ANR	7030677	SizeofOperand	RDMAControlHeader		7030535	1					
ANR	7030678	ExpressionStatement	control_to_network ( ( void * ) wr -> control )	63:4:1418:1458	7030535	18	True				
ANR	7030679	CallExpression	control_to_network ( ( void * ) wr -> control )		7030535	0					
ANR	7030680	Callee	control_to_network		7030535	0					
ANR	7030681	Identifier	control_to_network		7030535	0					
ANR	7030682	ArgumentList	( void * ) wr -> control		7030535	1					
ANR	7030683	Argument	( void * ) wr -> control		7030535	0					
ANR	7030684	CastExpression	( void * ) wr -> control		7030535	0					
ANR	7030685	CastTarget	void *		7030535	0					
ANR	7030686	PtrMemberAccess	wr -> control		7030535	1					
ANR	7030687	Identifier	wr		7030535	0					
ANR	7030688	Identifier	control		7030535	1					
ANR	7030689	IfStatement	if ( buf )		7030535	19					
ANR	7030690	Condition	buf	67:8:1471:1473	7030535	0	True				
ANR	7030691	Identifier	buf		7030535	0					
ANR	7030692	CompoundStatement		63:13:1337:1337	7030535	1					
ANR	7030693	ExpressionStatement	"memcpy ( wr -> control + sizeof ( RDMAControlHeader ) , buf , head -> len )"	69:8:1487:1550	7030535	0	True				
ANR	7030694	CallExpression	"memcpy ( wr -> control + sizeof ( RDMAControlHeader ) , buf , head -> len )"		7030535	0					
ANR	7030695	Callee	memcpy		7030535	0					
ANR	7030696	Identifier	memcpy		7030535	0					
ANR	7030697	ArgumentList	wr -> control + sizeof ( RDMAControlHeader )		7030535	1					
ANR	7030698	Argument	wr -> control + sizeof ( RDMAControlHeader )		7030535	0					
ANR	7030699	AdditiveExpression	wr -> control + sizeof ( RDMAControlHeader )		7030535	0		+			
ANR	7030700	PtrMemberAccess	wr -> control		7030535	0					
ANR	7030701	Identifier	wr		7030535	0					
ANR	7030702	Identifier	control		7030535	1					
ANR	7030703	SizeofExpression	sizeof ( RDMAControlHeader )		7030535	1					
ANR	7030704	Sizeof	sizeof		7030535	0					
ANR	7030705	SizeofOperand	RDMAControlHeader		7030535	1					
ANR	7030706	Argument	buf		7030535	1					
ANR	7030707	Identifier	buf		7030535	0					
ANR	7030708	Argument	head -> len		7030535	2					
ANR	7030709	PtrMemberAccess	head -> len		7030535	0					
ANR	7030710	Identifier	head		7030535	0					
ANR	7030711	Identifier	len		7030535	1					
ANR	7030712	IfStatement	"if ( ibv_post_send ( rdma -> qp , & send_wr , & bad_wr ) )"		7030535	20					
ANR	7030713	Condition	"ibv_post_send ( rdma -> qp , & send_wr , & bad_wr )"	77:8:1572:1613	7030535	0	True				
ANR	7030714	CallExpression	"ibv_post_send ( rdma -> qp , & send_wr , & bad_wr )"		7030535	0					
ANR	7030715	Callee	ibv_post_send		7030535	0					
ANR	7030716	Identifier	ibv_post_send		7030535	0					
ANR	7030717	ArgumentList	rdma -> qp		7030535	1					
ANR	7030718	Argument	rdma -> qp		7030535	0					
ANR	7030719	PtrMemberAccess	rdma -> qp		7030535	0					
ANR	7030720	Identifier	rdma		7030535	0					
ANR	7030721	Identifier	qp		7030535	1					
ANR	7030722	Argument	& send_wr		7030535	1					
ANR	7030723	UnaryOperationExpression	& send_wr		7030535	0					
ANR	7030724	UnaryOperator	&		7030535	0					
ANR	7030725	Identifier	send_wr		7030535	1					
ANR	7030726	Argument	& bad_wr		7030535	2					
ANR	7030727	UnaryOperationExpression	& bad_wr		7030535	0					
ANR	7030728	UnaryOperator	&		7030535	0					
ANR	7030729	Identifier	bad_wr		7030535	1					
ANR	7030730	CompoundStatement		73:52:1477:1477	7030535	1					
ANR	7030731	ReturnStatement	return - 1 ;	79:8:1627:1636	7030535	0	True				
ANR	7030732	UnaryOperationExpression	- 1		7030535	0					
ANR	7030733	UnaryOperator	-		7030535	0					
ANR	7030734	PrimaryExpression	1		7030535	1					
ANR	7030735	IfStatement	if ( ret < 0 )		7030535	21					
ANR	7030736	Condition	ret < 0	85:8:1656:1662	7030535	0	True				
ANR	7030737	RelationalExpression	ret < 0		7030535	0		<			
ANR	7030738	Identifier	ret		7030535	0					
ANR	7030739	PrimaryExpression	0		7030535	1					
ANR	7030740	CompoundStatement		81:17:1526:1526	7030535	1					
ANR	7030741	ExpressionStatement	"fprintf ( stderr , ""Failed to use post IB SEND for control!\\n"" )"	87:8:1676:1736	7030535	0	True				
ANR	7030742	CallExpression	"fprintf ( stderr , ""Failed to use post IB SEND for control!\\n"" )"		7030535	0					
ANR	7030743	Callee	fprintf		7030535	0					
ANR	7030744	Identifier	fprintf		7030535	0					
ANR	7030745	ArgumentList	stderr		7030535	1					
ANR	7030746	Argument	stderr		7030535	0					
ANR	7030747	Identifier	stderr		7030535	0					
ANR	7030748	Argument	"""Failed to use post IB SEND for control!\\n"""		7030535	1					
ANR	7030749	PrimaryExpression	"""Failed to use post IB SEND for control!\\n"""		7030535	0					
ANR	7030750	ReturnStatement	return ret ;	89:8:1747:1757	7030535	1	True				
ANR	7030751	Identifier	ret		7030535	0					
ANR	7030752	ExpressionStatement	"ret = qemu_rdma_block_for_wrid ( rdma , RDMA_WRID_SEND_CONTROL )"	95:4:1773:1833	7030535	22	True				
ANR	7030753	AssignmentExpression	"ret = qemu_rdma_block_for_wrid ( rdma , RDMA_WRID_SEND_CONTROL )"		7030535	0		=			
ANR	7030754	Identifier	ret		7030535	0					
ANR	7030755	CallExpression	"qemu_rdma_block_for_wrid ( rdma , RDMA_WRID_SEND_CONTROL )"		7030535	1					
ANR	7030756	Callee	qemu_rdma_block_for_wrid		7030535	0					
ANR	7030757	Identifier	qemu_rdma_block_for_wrid		7030535	0					
ANR	7030758	ArgumentList	rdma		7030535	1					
ANR	7030759	Argument	rdma		7030535	0					
ANR	7030760	Identifier	rdma		7030535	0					
ANR	7030761	Argument	RDMA_WRID_SEND_CONTROL		7030535	1					
ANR	7030762	Identifier	RDMA_WRID_SEND_CONTROL		7030535	0					
ANR	7030763	IfStatement	if ( ret < 0 )		7030535	23					
ANR	7030764	Condition	ret < 0	97:8:1844:1850	7030535	0	True				
ANR	7030765	RelationalExpression	ret < 0		7030535	0		<			
ANR	7030766	Identifier	ret		7030535	0					
ANR	7030767	PrimaryExpression	0		7030535	1					
ANR	7030768	CompoundStatement		93:17:1714:1714	7030535	1					
ANR	7030769	ExpressionStatement	"fprintf ( stderr , ""rdma migration: send polling control error!\\n"" )"	99:8:1864:1928	7030535	0	True				
ANR	7030770	CallExpression	"fprintf ( stderr , ""rdma migration: send polling control error!\\n"" )"		7030535	0					
ANR	7030771	Callee	fprintf		7030535	0					
ANR	7030772	Identifier	fprintf		7030535	0					
ANR	7030773	ArgumentList	stderr		7030535	1					
ANR	7030774	Argument	stderr		7030535	0					
ANR	7030775	Identifier	stderr		7030535	0					
ANR	7030776	Argument	"""rdma migration: send polling control error!\\n"""		7030535	1					
ANR	7030777	PrimaryExpression	"""rdma migration: send polling control error!\\n"""		7030535	0					
ANR	7030778	ReturnStatement	return ret ;	105:4:1944:1954	7030535	24	True				
ANR	7030779	Identifier	ret		7030535	0					
ANR	7030780	ReturnType	static int		7030535	1					
ANR	7030781	Identifier	qemu_rdma_post_send_control		7030535	2					
ANR	7030782	ParameterList	"RDMAContext * rdma , uint8_t * buf , RDMAControlHeader * head"		7030535	3					
ANR	7030783	Parameter	RDMAContext * rdma	1:39:39:55	7030535	0	True				
ANR	7030784	ParameterType	RDMAContext *		7030535	0					
ANR	7030785	Identifier	rdma		7030535	1					
ANR	7030786	Parameter	uint8_t * buf	1:58:58:69	7030535	1	True				
ANR	7030787	ParameterType	uint8_t *		7030535	0					
ANR	7030788	Identifier	buf		7030535	1					
ANR	7030789	Parameter	RDMAControlHeader * head	3:39:112:134	7030535	2	True				
ANR	7030790	ParameterType	RDMAControlHeader *		7030535	0					
ANR	7030791	Identifier	head		7030535	1					
ANR	7030792	CFGEntryNode	ENTRY		7030535		True				
ANR	7030793	CFGExitNode	EXIT		7030535		True				
ANR	7030794	Symbol	* wr		7030535						
ANR	7030795	Symbol	RDMA_WRID_SEND_CONTROL		7030535						
ANR	7030796	Symbol	* head		7030535						
ANR	7030797	Symbol	ibv_post_send		7030535						
ANR	7030798	Symbol	control_desc		7030535						
ANR	7030799	Symbol	head		7030535						
ANR	7030800	Symbol	head -> type		7030535						
ANR	7030801	Symbol	* * head		7030535						
ANR	7030802	Symbol	bad_wr		7030535						
ANR	7030803	Symbol	rdma -> wr_data		7030535						
ANR	7030804	Symbol	wr		7030535						
ANR	7030805	Symbol	* rdma		7030535						
ANR	7030806	Symbol	ret		7030535						
ANR	7030807	Symbol	wr -> control		7030535						
ANR	7030808	Symbol	* head -> type		7030535						
ANR	7030809	Symbol	RDMA_WRID_CONTROL		7030535						
ANR	7030810	Symbol	* control_desc		7030535						
ANR	7030811	Symbol	& send_wr		7030535						
ANR	7030812	Symbol	rdma -> qp		7030535						
ANR	7030813	Symbol	stderr		7030535						
ANR	7030814	Symbol	RDMA_CONTROL_MAX_BUFFER		7030535						
ANR	7030815	Symbol	buf		7030535						
ANR	7030816	Symbol	rdma		7030535						
ANR	7030817	Symbol	head -> len		7030535						
ANR	7030818	Symbol	qemu_rdma_block_for_wrid		7030535						
ANR	7030819	Symbol	& bad_wr		7030535						
