command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1289119	File	/home/p4ultr4n/workplace/ReVeal/raw_code/checkasm_report_0.c								
ANR	1289120	Function	checkasm_report	1:0:0:1327							
ANR	1289121	FunctionDef	checkasm_report (const char * name)		1289120	0					
ANR	1289122	CompoundStatement		3:0:45:1327	1289120	0					
ANR	1289123	Statement	static	5:4:52:57	1289120	0	True				
ANR	1289124	IdentifierDeclStatement	"int prev_checked , prev_failed , max_length ;"	5:11:59:100	1289120	1	True				
ANR	1289125	IdentifierDecl	prev_checked		1289120	0					
ANR	1289126	IdentifierDeclType	int		1289120	0					
ANR	1289127	Identifier	prev_checked		1289120	1					
ANR	1289128	IdentifierDecl	prev_failed		1289120	1					
ANR	1289129	IdentifierDeclType	int		1289120	0					
ANR	1289130	Identifier	prev_failed		1289120	1					
ANR	1289131	IdentifierDecl	max_length		1289120	2					
ANR	1289132	IdentifierDeclType	int		1289120	0					
ANR	1289133	Identifier	max_length		1289120	1					
ANR	1289134	IfStatement	if ( state . num_checked > prev_checked )		1289120	2					
ANR	1289135	Condition	state . num_checked > prev_checked	9:8:113:144	1289120	0	True				
ANR	1289136	RelationalExpression	state . num_checked > prev_checked		1289120	0		>			
ANR	1289137	MemberAccess	state . num_checked		1289120	0					
ANR	1289138	Identifier	state		1289120	0					
ANR	1289139	Identifier	num_checked		1289120	1					
ANR	1289140	Identifier	prev_checked		1289120	1					
ANR	1289141	CompoundStatement		7:42:101:101	1289120	1					
ANR	1289142	ExpressionStatement	print_cpu_name ( )	11:8:158:174	1289120	0	True				
ANR	1289143	CallExpression	print_cpu_name ( )		1289120	0					
ANR	1289144	Callee	print_cpu_name		1289120	0					
ANR	1289145	Identifier	print_cpu_name		1289120	0					
ANR	1289146	ArgumentList			1289120	1					
ANR	1289147	IfStatement	if ( * name )		1289120	1					
ANR	1289148	Condition	* name	15:12:191:195	1289120	0	True				
ANR	1289149	UnaryOperationExpression	* name		1289120	0					
ANR	1289150	UnaryOperator	*		1289120	0					
ANR	1289151	Identifier	name		1289120	1					
ANR	1289152	CompoundStatement		17:12:209:220	1289120	1					
ANR	1289153	IdentifierDeclStatement	int pad_length = max_length ;	17:12:213:240	1289120	0	True				
ANR	1289154	IdentifierDecl	pad_length = max_length		1289120	0					
ANR	1289155	IdentifierDeclType	int		1289120	0					
ANR	1289156	Identifier	pad_length		1289120	1					
ANR	1289157	AssignmentExpression	pad_length = max_length		1289120	2		=			
ANR	1289158	Identifier	max_length		1289120	0					
ANR	1289159	Identifier	max_length		1289120	1					
ANR	1289160	IdentifierDeclStatement	va_list arg ;	19:12:255:266	1289120	1	True				
ANR	1289161	IdentifierDecl	arg		1289120	0					
ANR	1289162	IdentifierDeclType	va_list		1289120	0					
ANR	1289163	Identifier	arg		1289120	1					
ANR	1289164	ExpressionStatement	"fprintf ( stderr , "" - "" )"	23:12:283:305	1289120	2	True				
ANR	1289165	CallExpression	"fprintf ( stderr , "" - "" )"		1289120	0					
ANR	1289166	Callee	fprintf		1289120	0					
ANR	1289167	Identifier	fprintf		1289120	0					
ANR	1289168	ArgumentList	stderr		1289120	1					
ANR	1289169	Argument	stderr		1289120	0					
ANR	1289170	Identifier	stderr		1289120	0					
ANR	1289171	Argument	""" - """		1289120	1					
ANR	1289172	PrimaryExpression	""" - """		1289120	0					
ANR	1289173	ExpressionStatement	"va_start ( arg , name )"	25:12:320:339	1289120	3	True				
ANR	1289174	CallExpression	"va_start ( arg , name )"		1289120	0					
ANR	1289175	Callee	va_start		1289120	0					
ANR	1289176	Identifier	va_start		1289120	0					
ANR	1289177	ArgumentList	arg		1289120	1					
ANR	1289178	Argument	arg		1289120	0					
ANR	1289179	Identifier	arg		1289120	0					
ANR	1289180	Argument	name		1289120	1					
ANR	1289181	Identifier	name		1289120	0					
ANR	1289182	ExpressionStatement	"pad_length -= vfprintf ( stderr , name , arg )"	27:12:354:395	1289120	4	True				
ANR	1289183	AssignmentExpression	"pad_length -= vfprintf ( stderr , name , arg )"		1289120	0		-=			
ANR	1289184	Identifier	pad_length		1289120	0					
ANR	1289185	CallExpression	"vfprintf ( stderr , name , arg )"		1289120	1					
ANR	1289186	Callee	vfprintf		1289120	0					
ANR	1289187	Identifier	vfprintf		1289120	0					
ANR	1289188	ArgumentList	stderr		1289120	1					
ANR	1289189	Argument	stderr		1289120	0					
ANR	1289190	Identifier	stderr		1289120	0					
ANR	1289191	Argument	name		1289120	1					
ANR	1289192	Identifier	name		1289120	0					
ANR	1289193	Argument	arg		1289120	2					
ANR	1289194	Identifier	arg		1289120	0					
ANR	1289195	ExpressionStatement	va_end ( arg )	29:12:410:421	1289120	5	True				
ANR	1289196	CallExpression	va_end ( arg )		1289120	0					
ANR	1289197	Callee	va_end		1289120	0					
ANR	1289198	Identifier	va_end		1289120	0					
ANR	1289199	ArgumentList	arg		1289120	1					
ANR	1289200	Argument	arg		1289120	0					
ANR	1289201	Identifier	arg		1289120	0					
ANR	1289202	ExpressionStatement	"fprintf ( stderr , ""%*c"" , FFMAX ( pad_length , 0 ) + 2 , '[' )"	31:12:436:489	1289120	6	True				
ANR	1289203	CallExpression	"fprintf ( stderr , ""%*c"" , FFMAX ( pad_length , 0 ) + 2 , '[' )"		1289120	0					
ANR	1289204	Callee	fprintf		1289120	0					
ANR	1289205	Identifier	fprintf		1289120	0					
ANR	1289206	ArgumentList	stderr		1289120	1					
ANR	1289207	Argument	stderr		1289120	0					
ANR	1289208	Identifier	stderr		1289120	0					
ANR	1289209	Argument	"""%*c"""		1289120	1					
ANR	1289210	PrimaryExpression	"""%*c"""		1289120	0					
ANR	1289211	Argument	"FFMAX ( pad_length , 0 ) + 2"		1289120	2					
ANR	1289212	AdditiveExpression	"FFMAX ( pad_length , 0 ) + 2"		1289120	0		+			
ANR	1289213	CallExpression	"FFMAX ( pad_length , 0 )"		1289120	0					
ANR	1289214	Callee	FFMAX		1289120	0					
ANR	1289215	Identifier	FFMAX		1289120	0					
ANR	1289216	ArgumentList	pad_length		1289120	1					
ANR	1289217	Argument	pad_length		1289120	0					
ANR	1289218	Identifier	pad_length		1289120	0					
ANR	1289219	Argument	0		1289120	1					
ANR	1289220	PrimaryExpression	0		1289120	0					
ANR	1289221	PrimaryExpression	2		1289120	1					
ANR	1289222	Argument	'['		1289120	3					
ANR	1289223	PrimaryExpression	'['		1289120	0					
ANR	1289224	ElseStatement	else		1289120	0					
ANR	1289225	ExpressionStatement	"fprintf ( stderr , "" - %-*s ["" , max_length , state . current_func -> name )"	35:12:520:586	1289120	0	True				
ANR	1289226	CallExpression	"fprintf ( stderr , "" - %-*s ["" , max_length , state . current_func -> name )"		1289120	0					
ANR	1289227	Callee	fprintf		1289120	0					
ANR	1289228	Identifier	fprintf		1289120	0					
ANR	1289229	ArgumentList	stderr		1289120	1					
ANR	1289230	Argument	stderr		1289120	0					
ANR	1289231	Identifier	stderr		1289120	0					
ANR	1289232	Argument	""" - %-*s ["""		1289120	1					
ANR	1289233	PrimaryExpression	""" - %-*s ["""		1289120	0					
ANR	1289234	Argument	max_length		1289120	2					
ANR	1289235	Identifier	max_length		1289120	0					
ANR	1289236	Argument	state . current_func -> name		1289120	3					
ANR	1289237	PtrMemberAccess	state . current_func -> name		1289120	0					
ANR	1289238	MemberAccess	state . current_func		1289120	0					
ANR	1289239	Identifier	state		1289120	0					
ANR	1289240	Identifier	current_func		1289120	1					
ANR	1289241	Identifier	name		1289120	1					
ANR	1289242	IfStatement	if ( state . num_failed == prev_failed )		1289120	2					
ANR	1289243	Condition	state . num_failed == prev_failed	39:12:603:633	1289120	0	True				
ANR	1289244	EqualityExpression	state . num_failed == prev_failed		1289120	0		==			
ANR	1289245	MemberAccess	state . num_failed		1289120	0					
ANR	1289246	Identifier	state		1289120	0					
ANR	1289247	Identifier	num_failed		1289120	1					
ANR	1289248	Identifier	prev_failed		1289120	1					
ANR	1289249	ExpressionStatement	"color_printf ( COLOR_GREEN , ""OK"" )"	41:12:649:680	1289120	1	True				
ANR	1289250	CallExpression	"color_printf ( COLOR_GREEN , ""OK"" )"		1289120	0					
ANR	1289251	Callee	color_printf		1289120	0					
ANR	1289252	Identifier	color_printf		1289120	0					
ANR	1289253	ArgumentList	COLOR_GREEN		1289120	1					
ANR	1289254	Argument	COLOR_GREEN		1289120	0					
ANR	1289255	Identifier	COLOR_GREEN		1289120	0					
ANR	1289256	Argument	"""OK"""		1289120	1					
ANR	1289257	PrimaryExpression	"""OK"""		1289120	0					
ANR	1289258	ElseStatement	else		1289120	0					
ANR	1289259	ExpressionStatement	"color_printf ( COLOR_RED , ""FAILED"" )"	45:12:709:742	1289120	0	True				
ANR	1289260	CallExpression	"color_printf ( COLOR_RED , ""FAILED"" )"		1289120	0					
ANR	1289261	Callee	color_printf		1289120	0					
ANR	1289262	Identifier	color_printf		1289120	0					
ANR	1289263	ArgumentList	COLOR_RED		1289120	1					
ANR	1289264	Argument	COLOR_RED		1289120	0					
ANR	1289265	Identifier	COLOR_RED		1289120	0					
ANR	1289266	Argument	"""FAILED"""		1289120	1					
ANR	1289267	PrimaryExpression	"""FAILED"""		1289120	0					
ANR	1289268	ExpressionStatement	"fprintf ( stderr , ""]\\n"" )"	47:8:753:775	1289120	3	True				
ANR	1289269	CallExpression	"fprintf ( stderr , ""]\\n"" )"		1289120	0					
ANR	1289270	Callee	fprintf		1289120	0					
ANR	1289271	Identifier	fprintf		1289120	0					
ANR	1289272	ArgumentList	stderr		1289120	1					
ANR	1289273	Argument	stderr		1289120	0					
ANR	1289274	Identifier	stderr		1289120	0					
ANR	1289275	Argument	"""]\\n"""		1289120	1					
ANR	1289276	PrimaryExpression	"""]\\n"""		1289120	0					
ANR	1289277	ExpressionStatement	prev_checked = state . num_checked	51:8:788:820	1289120	4	True				
ANR	1289278	AssignmentExpression	prev_checked = state . num_checked		1289120	0		=			
ANR	1289279	Identifier	prev_checked		1289120	0					
ANR	1289280	MemberAccess	state . num_checked		1289120	1					
ANR	1289281	Identifier	state		1289120	0					
ANR	1289282	Identifier	num_checked		1289120	1					
ANR	1289283	ExpressionStatement	prev_failed = state . num_failed	53:8:831:862	1289120	5	True				
ANR	1289284	AssignmentExpression	prev_failed = state . num_failed		1289120	0		=			
ANR	1289285	Identifier	prev_failed		1289120	0					
ANR	1289286	MemberAccess	state . num_failed		1289120	1					
ANR	1289287	Identifier	state		1289120	0					
ANR	1289288	Identifier	num_failed		1289120	1					
ANR	1289289	ElseStatement	else		1289120	0					
ANR	1289290	IfStatement	if ( ! state . cpu_flag )		1289120	0					
ANR	1289291	Condition	! state . cpu_flag	55:15:880:894	1289120	0	True				
ANR	1289292	UnaryOperationExpression	! state . cpu_flag		1289120	0					
ANR	1289293	UnaryOperator	!		1289120	0					
ANR	1289294	MemberAccess	state . cpu_flag		1289120	1					
ANR	1289295	Identifier	state		1289120	0					
ANR	1289296	Identifier	cpu_flag		1289120	1					
ANR	1289297	CompoundStatement		55:8:862:872	1289120	1					
ANR	1289298	IdentifierDeclStatement	int length ;	57:8:908:918	1289120	0	True				
ANR	1289299	IdentifierDecl	length		1289120	0					
ANR	1289300	IdentifierDeclType	int		1289120	0					
ANR	1289301	Identifier	length		1289120	1					
ANR	1289302	IfStatement	if ( * name )		1289120	1					
ANR	1289303	Condition	* name	63:12:1029:1033	1289120	0	True				
ANR	1289304	UnaryOperationExpression	* name		1289120	0					
ANR	1289305	UnaryOperator	*		1289120	0					
ANR	1289306	Identifier	name		1289120	1					
ANR	1289307	CompoundStatement		63:12:1005:1016	1289120	1					
ANR	1289308	IdentifierDeclStatement	va_list arg ;	65:12:1051:1062	1289120	0	True				
ANR	1289309	IdentifierDecl	arg		1289120	0					
ANR	1289310	IdentifierDeclType	va_list		1289120	0					
ANR	1289311	Identifier	arg		1289120	1					
ANR	1289312	ExpressionStatement	"va_start ( arg , name )"	67:12:1077:1096	1289120	1	True				
ANR	1289313	CallExpression	"va_start ( arg , name )"		1289120	0					
ANR	1289314	Callee	va_start		1289120	0					
ANR	1289315	Identifier	va_start		1289120	0					
ANR	1289316	ArgumentList	arg		1289120	1					
ANR	1289317	Argument	arg		1289120	0					
ANR	1289318	Identifier	arg		1289120	0					
ANR	1289319	Argument	name		1289120	1					
ANR	1289320	Identifier	name		1289120	0					
ANR	1289321	ExpressionStatement	"length = vsnprintf ( NULL , 0 , name , arg )"	69:12:1111:1149	1289120	2	True				
ANR	1289322	AssignmentExpression	"length = vsnprintf ( NULL , 0 , name , arg )"		1289120	0		=			
ANR	1289323	Identifier	length		1289120	0					
ANR	1289324	CallExpression	"vsnprintf ( NULL , 0 , name , arg )"		1289120	1					
ANR	1289325	Callee	vsnprintf		1289120	0					
ANR	1289326	Identifier	vsnprintf		1289120	0					
ANR	1289327	ArgumentList	NULL		1289120	1					
ANR	1289328	Argument	NULL		1289120	0					
ANR	1289329	Identifier	NULL		1289120	0					
ANR	1289330	Argument	0		1289120	1					
ANR	1289331	PrimaryExpression	0		1289120	0					
ANR	1289332	Argument	name		1289120	2					
ANR	1289333	Identifier	name		1289120	0					
ANR	1289334	Argument	arg		1289120	3					
ANR	1289335	Identifier	arg		1289120	0					
ANR	1289336	ExpressionStatement	va_end ( arg )	71:12:1164:1175	1289120	3	True				
ANR	1289337	CallExpression	va_end ( arg )		1289120	0					
ANR	1289338	Callee	va_end		1289120	0					
ANR	1289339	Identifier	va_end		1289120	0					
ANR	1289340	ArgumentList	arg		1289120	1					
ANR	1289341	Argument	arg		1289120	0					
ANR	1289342	Identifier	arg		1289120	0					
ANR	1289343	ElseStatement	else		1289120	0					
ANR	1289344	ExpressionStatement	length = strlen ( state . current_func -> name )	75:12:1206:1247	1289120	0	True				
ANR	1289345	AssignmentExpression	length = strlen ( state . current_func -> name )		1289120	0		=			
ANR	1289346	Identifier	length		1289120	0					
ANR	1289347	CallExpression	strlen ( state . current_func -> name )		1289120	1					
ANR	1289348	Callee	strlen		1289120	0					
ANR	1289349	Identifier	strlen		1289120	0					
ANR	1289350	ArgumentList	state . current_func -> name		1289120	1					
ANR	1289351	Argument	state . current_func -> name		1289120	0					
ANR	1289352	PtrMemberAccess	state . current_func -> name		1289120	0					
ANR	1289353	MemberAccess	state . current_func		1289120	0					
ANR	1289354	Identifier	state		1289120	0					
ANR	1289355	Identifier	current_func		1289120	1					
ANR	1289356	Identifier	name		1289120	1					
ANR	1289357	IfStatement	if ( length > max_length )		1289120	2					
ANR	1289358	Condition	length > max_length	79:12:1264:1282	1289120	0	True				
ANR	1289359	RelationalExpression	length > max_length		1289120	0		>			
ANR	1289360	Identifier	length		1289120	0					
ANR	1289361	Identifier	max_length		1289120	1					
ANR	1289362	ExpressionStatement	max_length = length	81:12:1298:1317	1289120	1	True				
ANR	1289363	AssignmentExpression	max_length = length		1289120	0		=			
ANR	1289364	Identifier	max_length		1289120	0					
ANR	1289365	Identifier	length		1289120	1					
ANR	1289366	ReturnType	void		1289120	1					
ANR	1289367	Identifier	checkasm_report		1289120	2					
ANR	1289368	ParameterList	const char * name		1289120	3					
ANR	1289369	Parameter	const char * name	1:21:21:36	1289120	0	True				
ANR	1289370	ParameterType	const char *		1289120	0					
ANR	1289371	Identifier	name		1289120	1					
ANR	1289372	CFGEntryNode	ENTRY		1289120		True				
ANR	1289373	CFGExitNode	EXIT		1289120		True				
ANR	1289374	Symbol	* name		1289120						
ANR	1289375	Symbol	state . cpu_flag		1289120						
ANR	1289376	Symbol	NULL		1289120						
ANR	1289377	Symbol	state . num_checked		1289120						
ANR	1289378	Symbol	state . num_failed		1289120						
ANR	1289379	Symbol	state . current_func		1289120						
ANR	1289380	Symbol	length		1289120						
ANR	1289381	Symbol	COLOR_RED		1289120						
ANR	1289382	Symbol	stderr		1289120						
ANR	1289383	Symbol	state . current_func -> name		1289120						
ANR	1289384	Symbol	* state		1289120						
ANR	1289385	Symbol	pad_length		1289120						
ANR	1289386	Symbol	strlen		1289120						
ANR	1289387	Symbol	* state . current_func		1289120						
ANR	1289388	Symbol	vfprintf		1289120						
ANR	1289389	Symbol	arg		1289120						
ANR	1289390	Symbol	name		1289120						
ANR	1289391	Symbol	prev_checked		1289120						
ANR	1289392	Symbol	prev_failed		1289120						
ANR	1289393	Symbol	state		1289120						
ANR	1289394	Symbol	COLOR_GREEN		1289120						
ANR	1289395	Symbol	vsnprintf		1289120						
ANR	1289396	Symbol	max_length		1289120						
ANR	1289397	Symbol	FFMAX		1289120						
