command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	7004440	File	/home/p4ultr4n/workplace/ReVeal/raw_code/qemu_opts_print_01_0.c								
ANR	7004441	Function	qemu_opts_print	1:0:0:1192							
ANR	7004442	FunctionDef	"qemu_opts_print (QemuOpts * opts , const char * separator)"		7004441	0					
ANR	7004443	CompoundStatement		3:0:61:1192	7004441	0					
ANR	7004444	IdentifierDeclStatement	QemuOpt * opt ;	5:4:68:80	7004441	0	True				
ANR	7004445	IdentifierDecl	* opt		7004441	0					
ANR	7004446	IdentifierDeclType	QemuOpt *		7004441	0					
ANR	7004447	Identifier	opt		7004441	1					
ANR	7004448	IdentifierDeclStatement	QemuOptDesc * desc = opts -> list -> desc ;	7:4:87:123	7004441	1	True				
ANR	7004449	IdentifierDecl	* desc = opts -> list -> desc		7004441	0					
ANR	7004450	IdentifierDeclType	QemuOptDesc *		7004441	0					
ANR	7004451	Identifier	desc		7004441	1					
ANR	7004452	AssignmentExpression	* desc = opts -> list -> desc		7004441	2		=			
ANR	7004453	Identifier	desc		7004441	0					
ANR	7004454	PtrMemberAccess	opts -> list -> desc		7004441	1					
ANR	7004455	PtrMemberAccess	opts -> list		7004441	0					
ANR	7004456	Identifier	opts		7004441	0					
ANR	7004457	Identifier	list		7004441	1					
ANR	7004458	Identifier	desc		7004441	1					
ANR	7004459	IdentifierDeclStatement	"const char * sep = """" ;"	9:4:130:150	7004441	2	True				
ANR	7004460	IdentifierDecl	"* sep = """""		7004441	0					
ANR	7004461	IdentifierDeclType	const char *		7004441	0					
ANR	7004462	Identifier	sep		7004441	1					
ANR	7004463	AssignmentExpression	"* sep = """""		7004441	2		=			
ANR	7004464	Identifier	sep		7004441	0					
ANR	7004465	PrimaryExpression	""""""		7004441	1					
ANR	7004466	IfStatement	if ( opts -> id )		7004441	3					
ANR	7004467	Condition	opts -> id	13:8:163:170	7004441	0	True				
ANR	7004468	PtrMemberAccess	opts -> id		7004441	0					
ANR	7004469	Identifier	opts		7004441	0					
ANR	7004470	Identifier	id		7004441	1					
ANR	7004471	CompoundStatement		11:18:111:111	7004441	1					
ANR	7004472	ExpressionStatement	"printf ( ""id=%s"" , opts -> id )"	15:8:184:209	7004441	0	True				
ANR	7004473	CallExpression	"printf ( ""id=%s"" , opts -> id )"		7004441	0					
ANR	7004474	Callee	printf		7004441	0					
ANR	7004475	Identifier	printf		7004441	0					
ANR	7004476	ArgumentList	"""id=%s"""		7004441	1					
ANR	7004477	Argument	"""id=%s"""		7004441	0					
ANR	7004478	PrimaryExpression	"""id=%s"""		7004441	0					
ANR	7004479	Argument	opts -> id		7004441	1					
ANR	7004480	PtrMemberAccess	opts -> id		7004441	0					
ANR	7004481	Identifier	opts		7004441	0					
ANR	7004482	Identifier	id		7004441	1					
ANR	7004483	ExpressionStatement	sep = separator	17:8:260:275	7004441	1	True				
ANR	7004484	AssignmentExpression	sep = separator		7004441	0		=			
ANR	7004485	Identifier	sep		7004441	0					
ANR	7004486	Identifier	separator		7004441	1					
ANR	7004487	IfStatement	if ( desc [ 0 ] . name == NULL )		7004441	4					
ANR	7004488	Condition	desc [ 0 ] . name == NULL	23:8:295:314	7004441	0	True				
ANR	7004489	EqualityExpression	desc [ 0 ] . name == NULL		7004441	0		==			
ANR	7004490	MemberAccess	desc [ 0 ] . name		7004441	0					
ANR	7004491	ArrayIndexing	desc [ 0 ]		7004441	0					
ANR	7004492	Identifier	desc		7004441	0					
ANR	7004493	PrimaryExpression	0		7004441	1					
ANR	7004494	Identifier	name		7004441	1					
ANR	7004495	Identifier	NULL		7004441	1					
ANR	7004496	CompoundStatement		21:30:255:255	7004441	1					
ANR	7004497	Statement	QTAILQ_FOREACH	25:8:328:341	7004441	0	True				
ANR	7004498	Statement	(	25:22:342:342	7004441	1	True				
ANR	7004499	Statement	opt	25:23:343:345	7004441	2	True				
ANR	7004500	Statement	","	25:26:346:346	7004441	3	True				
ANR	7004501	Statement	&	25:28:348:348	7004441	4	True				
ANR	7004502	Statement	opts	25:29:349:352	7004441	5	True				
ANR	7004503	Statement	->	25:33:353:354	7004441	6	True				
ANR	7004504	Statement	head	25:35:355:358	7004441	7	True				
ANR	7004505	Statement	","	25:39:359:359	7004441	8	True				
ANR	7004506	Statement	next	25:41:361:364	7004441	9	True				
ANR	7004507	Statement	)	25:45:365:365	7004441	10	True				
ANR	7004508	CompoundStatement		23:47:305:305	7004441	11					
ANR	7004509	ExpressionStatement	"printf ( ""%s%s="" , sep , opt -> name )"	27:12:382:413	7004441	0	True				
ANR	7004510	CallExpression	"printf ( ""%s%s="" , sep , opt -> name )"		7004441	0					
ANR	7004511	Callee	printf		7004441	0					
ANR	7004512	Identifier	printf		7004441	0					
ANR	7004513	ArgumentList	"""%s%s="""		7004441	1					
ANR	7004514	Argument	"""%s%s="""		7004441	0					
ANR	7004515	PrimaryExpression	"""%s%s="""		7004441	0					
ANR	7004516	Argument	sep		7004441	1					
ANR	7004517	Identifier	sep		7004441	0					
ANR	7004518	Argument	opt -> name		7004441	2					
ANR	7004519	PtrMemberAccess	opt -> name		7004441	0					
ANR	7004520	Identifier	opt		7004441	0					
ANR	7004521	Identifier	name		7004441	1					
ANR	7004522	ExpressionStatement	escaped_print ( opt -> str )	29:12:428:451	7004441	1	True				
ANR	7004523	CallExpression	escaped_print ( opt -> str )		7004441	0					
ANR	7004524	Callee	escaped_print		7004441	0					
ANR	7004525	Identifier	escaped_print		7004441	0					
ANR	7004526	ArgumentList	opt -> str		7004441	1					
ANR	7004527	Argument	opt -> str		7004441	0					
ANR	7004528	PtrMemberAccess	opt -> str		7004441	0					
ANR	7004529	Identifier	opt		7004441	0					
ANR	7004530	Identifier	str		7004441	1					
ANR	7004531	ExpressionStatement	sep = separator	31:12:466:481	7004441	2	True				
ANR	7004532	AssignmentExpression	sep = separator		7004441	0		=			
ANR	7004533	Identifier	sep		7004441	0					
ANR	7004534	Identifier	separator		7004441	1					
ANR	7004535	ReturnStatement	return ;	35:8:503:509	7004441	12	True				
ANR	7004536	ForStatement	for ( ; desc && desc -> name ; desc ++ )		7004441	5					
ANR	7004537	Condition	desc && desc -> name	39:11:530:547	7004441	0	True				
ANR	7004538	AndExpression	desc && desc -> name		7004441	0		&&			
ANR	7004539	Identifier	desc		7004441	0					
ANR	7004540	PtrMemberAccess	desc -> name		7004441	1					
ANR	7004541	Identifier	desc		7004441	0					
ANR	7004542	Identifier	name		7004441	1					
ANR	7004543	PostIncDecOperationExpression	desc ++	39:31:550:555	7004441	1	True				
ANR	7004544	Identifier	desc		7004441	0					
ANR	7004545	IncDec	++		7004441	1					
ANR	7004546	CompoundStatement		41:8:535:581	7004441	2					
ANR	7004547	IdentifierDeclStatement	const char * value ;	41:8:569:586	7004441	0	True				
ANR	7004548	IdentifierDecl	* value		7004441	0					
ANR	7004549	IdentifierDeclType	const char *		7004441	0					
ANR	7004550	Identifier	value		7004441	1					
ANR	7004551	IdentifierDeclStatement	"QemuOpt * opt = qemu_opt_find ( opts , desc -> name ) ;"	43:8:597:643	7004441	1	True				
ANR	7004552	IdentifierDecl	"* opt = qemu_opt_find ( opts , desc -> name )"		7004441	0					
ANR	7004553	IdentifierDeclType	QemuOpt *		7004441	0					
ANR	7004554	Identifier	opt		7004441	1					
ANR	7004555	AssignmentExpression	"* opt = qemu_opt_find ( opts , desc -> name )"		7004441	2		=			
ANR	7004556	Identifier	opt		7004441	0					
ANR	7004557	CallExpression	"qemu_opt_find ( opts , desc -> name )"		7004441	1					
ANR	7004558	Callee	qemu_opt_find		7004441	0					
ANR	7004559	Identifier	qemu_opt_find		7004441	0					
ANR	7004560	ArgumentList	opts		7004441	1					
ANR	7004561	Argument	opts		7004441	0					
ANR	7004562	Identifier	opts		7004441	0					
ANR	7004563	Argument	desc -> name		7004441	1					
ANR	7004564	PtrMemberAccess	desc -> name		7004441	0					
ANR	7004565	Identifier	desc		7004441	0					
ANR	7004566	Identifier	name		7004441	1					
ANR	7004567	ExpressionStatement	value = opt ? opt -> str : desc -> def_value_str	47:8:656:700	7004441	2	True				
ANR	7004568	AssignmentExpression	value = opt ? opt -> str : desc -> def_value_str		7004441	0		=			
ANR	7004569	Identifier	value		7004441	0					
ANR	7004570	ConditionalExpression	opt ? opt -> str : desc -> def_value_str		7004441	1					
ANR	7004571	Condition	opt		7004441	0					
ANR	7004572	Identifier	opt		7004441	0					
ANR	7004573	PtrMemberAccess	opt -> str		7004441	1					
ANR	7004574	Identifier	opt		7004441	0					
ANR	7004575	Identifier	str		7004441	1					
ANR	7004576	PtrMemberAccess	desc -> def_value_str		7004441	2					
ANR	7004577	Identifier	desc		7004441	0					
ANR	7004578	Identifier	def_value_str		7004441	1					
ANR	7004579	IfStatement	if ( ! value )		7004441	3					
ANR	7004580	Condition	! value	49:12:715:720	7004441	0	True				
ANR	7004581	UnaryOperationExpression	! value		7004441	0					
ANR	7004582	UnaryOperator	!		7004441	0					
ANR	7004583	Identifier	value		7004441	1					
ANR	7004584	CompoundStatement		47:20:661:661	7004441	1					
ANR	7004585	ContinueStatement	continue ;	51:12:738:746	7004441	0	True				
ANR	7004586	IfStatement	if ( desc -> type == QEMU_OPT_STRING )		7004441	4					
ANR	7004587	Condition	desc -> type == QEMU_OPT_STRING	55:12:772:800	7004441	0	True				
ANR	7004588	EqualityExpression	desc -> type == QEMU_OPT_STRING		7004441	0		==			
ANR	7004589	PtrMemberAccess	desc -> type		7004441	0					
ANR	7004590	Identifier	desc		7004441	0					
ANR	7004591	Identifier	type		7004441	1					
ANR	7004592	Identifier	QEMU_OPT_STRING		7004441	1					
ANR	7004593	CompoundStatement		53:43:741:741	7004441	1					
ANR	7004594	ExpressionStatement	"printf ( ""%s%s="" , sep , desc -> name )"	57:12:818:850	7004441	0	True				
ANR	7004595	CallExpression	"printf ( ""%s%s="" , sep , desc -> name )"		7004441	0					
ANR	7004596	Callee	printf		7004441	0					
ANR	7004597	Identifier	printf		7004441	0					
ANR	7004598	ArgumentList	"""%s%s="""		7004441	1					
ANR	7004599	Argument	"""%s%s="""		7004441	0					
ANR	7004600	PrimaryExpression	"""%s%s="""		7004441	0					
ANR	7004601	Argument	sep		7004441	1					
ANR	7004602	Identifier	sep		7004441	0					
ANR	7004603	Argument	desc -> name		7004441	2					
ANR	7004604	PtrMemberAccess	desc -> name		7004441	0					
ANR	7004605	Identifier	desc		7004441	0					
ANR	7004606	Identifier	name		7004441	1					
ANR	7004607	ExpressionStatement	escaped_print ( value )	59:12:865:885	7004441	1	True				
ANR	7004608	CallExpression	escaped_print ( value )		7004441	0					
ANR	7004609	Callee	escaped_print		7004441	0					
ANR	7004610	Identifier	escaped_print		7004441	0					
ANR	7004611	ArgumentList	value		7004441	1					
ANR	7004612	Argument	value		7004441	0					
ANR	7004613	Identifier	value		7004441	0					
ANR	7004614	ElseStatement	else		7004441	0					
ANR	7004615	IfStatement	if ( ( desc -> type == QEMU_OPT_SIZE || desc -> type == QEMU_OPT_NUMBER ) && opt )		7004441	0					
ANR	7004616	Condition	( desc -> type == QEMU_OPT_SIZE || desc -> type == QEMU_OPT_NUMBER ) && opt	61:19:907:996	7004441	0	True				
ANR	7004617	AndExpression	( desc -> type == QEMU_OPT_SIZE || desc -> type == QEMU_OPT_NUMBER ) && opt		7004441	0		&&			
ANR	7004618	OrExpression	desc -> type == QEMU_OPT_SIZE || desc -> type == QEMU_OPT_NUMBER		7004441	0		||			
ANR	7004619	EqualityExpression	desc -> type == QEMU_OPT_SIZE		7004441	0		==			
ANR	7004620	PtrMemberAccess	desc -> type		7004441	0					
ANR	7004621	Identifier	desc		7004441	0					
ANR	7004622	Identifier	type		7004441	1					
ANR	7004623	Identifier	QEMU_OPT_SIZE		7004441	1					
ANR	7004624	EqualityExpression	desc -> type == QEMU_OPT_NUMBER		7004441	1		==			
ANR	7004625	PtrMemberAccess	desc -> type		7004441	0					
ANR	7004626	Identifier	desc		7004441	0					
ANR	7004627	Identifier	type		7004441	1					
ANR	7004628	Identifier	QEMU_OPT_NUMBER		7004441	1					
ANR	7004629	Identifier	opt		7004441	1					
ANR	7004630	CompoundStatement		61:59:937:937	7004441	1					
ANR	7004631	Statement	printf	65:12:1014:1019	7004441	0	True				
ANR	7004632	Statement	(	65:18:1020:1020	7004441	1	True				
ANR	7004633	Statement	"""%s%s=%"""	65:19:1021:1028	7004441	2	True				
ANR	7004634	Statement	PRId64	65:28:1030:1035	7004441	3	True				
ANR	7004635	Statement	","	65:34:1036:1036	7004441	4	True				
ANR	7004636	Statement	sep	65:36:1038:1040	7004441	5	True				
ANR	7004637	Statement	","	65:39:1041:1041	7004441	6	True				
ANR	7004638	Statement	desc	65:41:1043:1046	7004441	7	True				
ANR	7004639	Statement	->	65:45:1047:1048	7004441	8	True				
ANR	7004640	Statement	name	65:47:1049:1052	7004441	9	True				
ANR	7004641	Statement	","	65:51:1053:1053	7004441	10	True				
ANR	7004642	Statement	opt	65:53:1055:1057	7004441	11	True				
ANR	7004643	Statement	->	65:56:1058:1059	7004441	12	True				
ANR	7004644	Statement	value	65:58:1060:1064	7004441	13	True				
ANR	7004645	Statement	.	65:63:1065:1065	7004441	14	True				
ANR	7004646	Statement	uint	65:64:1066:1069	7004441	15	True				
ANR	7004647	Statement	)	65:68:1070:1070	7004441	16	True				
ANR	7004648	ExpressionStatement		65:69:1071:1071	7004441	17	True				
ANR	7004649	ElseStatement	else		7004441	0					
ANR	7004650	CompoundStatement		65:15:1027:1027	7004441	0					
ANR	7004651	ExpressionStatement	"printf ( ""%s%s=%s"" , sep , desc -> name , value )"	69:12:1104:1145	7004441	0	True				
ANR	7004652	CallExpression	"printf ( ""%s%s=%s"" , sep , desc -> name , value )"		7004441	0					
ANR	7004653	Callee	printf		7004441	0					
ANR	7004654	Identifier	printf		7004441	0					
ANR	7004655	ArgumentList	"""%s%s=%s"""		7004441	1					
ANR	7004656	Argument	"""%s%s=%s"""		7004441	0					
ANR	7004657	PrimaryExpression	"""%s%s=%s"""		7004441	0					
ANR	7004658	Argument	sep		7004441	1					
ANR	7004659	Identifier	sep		7004441	0					
ANR	7004660	Argument	desc -> name		7004441	2					
ANR	7004661	PtrMemberAccess	desc -> name		7004441	0					
ANR	7004662	Identifier	desc		7004441	0					
ANR	7004663	Identifier	name		7004441	1					
ANR	7004664	Argument	value		7004441	3					
ANR	7004665	Identifier	value		7004441	0					
ANR	7004666	ExpressionStatement	sep = separator	73:8:1167:1182	7004441	5	True				
ANR	7004667	AssignmentExpression	sep = separator		7004441	0		=			
ANR	7004668	Identifier	sep		7004441	0					
ANR	7004669	Identifier	separator		7004441	1					
ANR	7004670	ReturnType	void		7004441	1					
ANR	7004671	Identifier	qemu_opts_print		7004441	2					
ANR	7004672	ParameterList	"QemuOpts * opts , const char * separator"		7004441	3					
ANR	7004673	Parameter	QemuOpts * opts	1:21:21:34	7004441	0	True				
ANR	7004674	ParameterType	QemuOpts *		7004441	0					
ANR	7004675	Identifier	opts		7004441	1					
ANR	7004676	Parameter	const char * separator	1:37:37:57	7004441	1	True				
ANR	7004677	ParameterType	const char *		7004441	0					
ANR	7004678	Identifier	separator		7004441	1					
ANR	7004679	CFGEntryNode	ENTRY		7004441		True				
ANR	7004680	CFGExitNode	EXIT		7004441		True				
ANR	7004681	Symbol	QEMU_OPT_SIZE		7004441						
ANR	7004682	Symbol	opt -> name		7004441						
ANR	7004683	Symbol	opts -> id		7004441						
ANR	7004684	Symbol	opts -> list -> desc		7004441						
ANR	7004685	Symbol	desc -> type		7004441						
ANR	7004686	Symbol	desc [ 0 ] . name		7004441						
ANR	7004687	Symbol	opt -> str		7004441						
ANR	7004688	Symbol	qemu_opt_find		7004441						
ANR	7004689	Symbol	opts		7004441						
ANR	7004690	Symbol	opts -> list		7004441						
ANR	7004691	Symbol	* * opts		7004441						
ANR	7004692	Symbol	* desc		7004441						
ANR	7004693	Symbol	QEMU_OPT_NUMBER		7004441						
ANR	7004694	Symbol	* opts -> list		7004441						
ANR	7004695	Symbol	* opt		7004441						
ANR	7004696	Symbol	value		7004441						
ANR	7004697	Symbol	QEMU_OPT_STRING		7004441						
ANR	7004698	Symbol	sep		7004441						
ANR	7004699	Symbol	NULL		7004441						
ANR	7004700	Symbol	separator		7004441						
ANR	7004701	Symbol	opt		7004441						
ANR	7004702	Symbol	* opts		7004441						
ANR	7004703	Symbol	desc -> def_value_str		7004441						
ANR	7004704	Symbol	desc		7004441						
ANR	7004705	Symbol	desc -> name		7004441						
