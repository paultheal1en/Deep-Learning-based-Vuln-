command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	501135	File	/home/p4ultr4n/workplace/ReVeal/raw_code/aio_write_f_01_1.c								
ANR	501136	Function	aio_write_f	1:0:0:1433							
ANR	501137	FunctionDef	"aio_write_f (int argc , char * * argv)"		501136	0					
ANR	501138	CompoundStatement		3:0:47:1433	501136	0					
ANR	501139	IdentifierDeclStatement	"int nr_iov , c ;"	5:4:54:67	501136	0	True				
ANR	501140	IdentifierDecl	nr_iov		501136	0					
ANR	501141	IdentifierDeclType	int		501136	0					
ANR	501142	Identifier	nr_iov		501136	1					
ANR	501143	IdentifierDecl	c		501136	1					
ANR	501144	IdentifierDeclType	int		501136	0					
ANR	501145	Identifier	c		501136	1					
ANR	501146	IdentifierDeclStatement	int pattern = 0xcd ;	7:4:74:92	501136	1	True				
ANR	501147	IdentifierDecl	pattern = 0xcd		501136	0					
ANR	501148	IdentifierDeclType	int		501136	0					
ANR	501149	Identifier	pattern		501136	1					
ANR	501150	AssignmentExpression	pattern = 0xcd		501136	2		=			
ANR	501151	Identifier	pattern		501136	0					
ANR	501152	PrimaryExpression	0xcd		501136	1					
ANR	501153	IdentifierDeclStatement	"struct aio_ctx * ctx = calloc ( 1 , sizeof ( struct aio_ctx ) ) ;"	9:4:99:154	501136	2	True				
ANR	501154	IdentifierDecl	"* ctx = calloc ( 1 , sizeof ( struct aio_ctx ) )"		501136	0					
ANR	501155	IdentifierDeclType	struct aio_ctx *		501136	0					
ANR	501156	Identifier	ctx		501136	1					
ANR	501157	AssignmentExpression	"* ctx = calloc ( 1 , sizeof ( struct aio_ctx ) )"		501136	2		=			
ANR	501158	Identifier	ctx		501136	0					
ANR	501159	CallExpression	"calloc ( 1 , sizeof ( struct aio_ctx ) )"		501136	1					
ANR	501160	Callee	calloc		501136	0					
ANR	501161	Identifier	calloc		501136	0					
ANR	501162	ArgumentList	1		501136	1					
ANR	501163	Argument	1		501136	0					
ANR	501164	PrimaryExpression	1		501136	0					
ANR	501165	Argument	sizeof ( struct aio_ctx )		501136	1					
ANR	501166	SizeofExpression	sizeof ( struct aio_ctx )		501136	0					
ANR	501167	Sizeof	sizeof		501136	0					
ANR	501168	SizeofOperand	struct aio_ctx		501136	1					
ANR	501169	IdentifierDeclStatement	BlockDriverAIOCB * acb ;	11:4:161:182	501136	3	True				
ANR	501170	IdentifierDecl	* acb		501136	0					
ANR	501171	IdentifierDeclType	BlockDriverAIOCB *		501136	0					
ANR	501172	Identifier	acb		501136	1					
ANR	501173	WhileStatement	"while ( ( c = getopt ( argc , argv , ""CqP:"" ) ) != EOF )"		501136	4					
ANR	501174	Condition	"( c = getopt ( argc , argv , ""CqP:"" ) ) != EOF"	15:11:198:236	501136	0	True				
ANR	501175	EqualityExpression	"( c = getopt ( argc , argv , ""CqP:"" ) ) != EOF"		501136	0		!=			
ANR	501176	AssignmentExpression	"c = getopt ( argc , argv , ""CqP:"" )"		501136	0		=			
ANR	501177	Identifier	c		501136	0					
ANR	501178	CallExpression	"getopt ( argc , argv , ""CqP:"" )"		501136	1					
ANR	501179	Callee	getopt		501136	0					
ANR	501180	Identifier	getopt		501136	0					
ANR	501181	ArgumentList	argc		501136	1					
ANR	501182	Argument	argc		501136	0					
ANR	501183	Identifier	argc		501136	0					
ANR	501184	Argument	argv		501136	1					
ANR	501185	Identifier	argv		501136	0					
ANR	501186	Argument	"""CqP:"""		501136	2					
ANR	501187	PrimaryExpression	"""CqP:"""		501136	0					
ANR	501188	Identifier	EOF		501136	1					
ANR	501189	CompoundStatement		13:52:191:191	501136	1					
ANR	501190	SwitchStatement	switch ( c )		501136	0					
ANR	501191	Condition	c	17:16:258:258	501136	0	True				
ANR	501192	Identifier	c		501136	0					
ANR	501193	CompoundStatement		15:19:213:213	501136	1					
ANR	501194	Label	case 'C' :	19:8:272:280	501136	0	True				
ANR	501195	ExpressionStatement	ctx -> Cflag = 1	21:12:295:309	501136	1	True				
ANR	501196	AssignmentExpression	ctx -> Cflag = 1		501136	0		=			
ANR	501197	PtrMemberAccess	ctx -> Cflag		501136	0					
ANR	501198	Identifier	ctx		501136	0					
ANR	501199	Identifier	Cflag		501136	1					
ANR	501200	PrimaryExpression	1		501136	1					
ANR	501201	BreakStatement	break ;	23:12:324:329	501136	2	True				
ANR	501202	Label	case 'q' :	25:8:340:348	501136	3	True				
ANR	501203	ExpressionStatement	ctx -> qflag = 1	27:12:363:377	501136	4	True				
ANR	501204	AssignmentExpression	ctx -> qflag = 1		501136	0		=			
ANR	501205	PtrMemberAccess	ctx -> qflag		501136	0					
ANR	501206	Identifier	ctx		501136	0					
ANR	501207	Identifier	qflag		501136	1					
ANR	501208	PrimaryExpression	1		501136	1					
ANR	501209	BreakStatement	break ;	29:12:392:397	501136	5	True				
ANR	501210	Label	case 'P' :	31:8:408:416	501136	6	True				
ANR	501211	ExpressionStatement	pattern = parse_pattern ( optarg )	33:12:431:462	501136	7	True				
ANR	501212	AssignmentExpression	pattern = parse_pattern ( optarg )		501136	0		=			
ANR	501213	Identifier	pattern		501136	0					
ANR	501214	CallExpression	parse_pattern ( optarg )		501136	1					
ANR	501215	Callee	parse_pattern		501136	0					
ANR	501216	Identifier	parse_pattern		501136	0					
ANR	501217	ArgumentList	optarg		501136	1					
ANR	501218	Argument	optarg		501136	0					
ANR	501219	Identifier	optarg		501136	0					
ANR	501220	IfStatement	if ( pattern < 0 )		501136	8					
ANR	501221	Condition	pattern < 0	35:16:481:491	501136	0	True				
ANR	501222	RelationalExpression	pattern < 0		501136	0		<			
ANR	501223	Identifier	pattern		501136	0					
ANR	501224	PrimaryExpression	0		501136	1					
ANR	501225	CompoundStatement		33:29:446:446	501136	1					
ANR	501226	ReturnStatement	return 0 ;	38:16:514:522	501136	0	True				
ANR	501227	PrimaryExpression	0		501136	0					
ANR	501228	BreakStatement	break ;	42:12:552:557	501136	9	True				
ANR	501229	Label	default :	44:8:568:575	501136	10	True				
ANR	501230	Identifier	default		501136	0					
ANR	501231	ReturnStatement	return command_usage ( & aio_write_cmd ) ;	47:12:591:627	501136	11	True				
ANR	501232	CallExpression	command_usage ( & aio_write_cmd )		501136	0					
ANR	501233	Callee	command_usage		501136	0					
ANR	501234	Identifier	command_usage		501136	0					
ANR	501235	ArgumentList	& aio_write_cmd		501136	1					
ANR	501236	Argument	& aio_write_cmd		501136	0					
ANR	501237	UnaryOperationExpression	& aio_write_cmd		501136	0					
ANR	501238	UnaryOperator	&		501136	0					
ANR	501239	Identifier	aio_write_cmd		501136	1					
ANR	501240	IfStatement	if ( optind > argc - 2 )		501136	5					
ANR	501241	Condition	optind > argc - 2	55:8:658:674	501136	0	True				
ANR	501242	RelationalExpression	optind > argc - 2		501136	0		>			
ANR	501243	Identifier	optind		501136	0					
ANR	501244	AdditiveExpression	argc - 2		501136	1		-			
ANR	501245	Identifier	argc		501136	0					
ANR	501246	PrimaryExpression	2		501136	1					
ANR	501247	CompoundStatement		53:27:629:629	501136	1					
ANR	501248	ReturnStatement	return command_usage ( & aio_write_cmd ) ;	58:8:689:725	501136	0	True				
ANR	501249	CallExpression	command_usage ( & aio_write_cmd )		501136	0					
ANR	501250	Callee	command_usage		501136	0					
ANR	501251	Identifier	command_usage		501136	0					
ANR	501252	ArgumentList	& aio_write_cmd		501136	1					
ANR	501253	Argument	& aio_write_cmd		501136	0					
ANR	501254	UnaryOperationExpression	& aio_write_cmd		501136	0					
ANR	501255	UnaryOperator	&		501136	0					
ANR	501256	Identifier	aio_write_cmd		501136	1					
ANR	501257	ExpressionStatement	ctx -> offset = cvtnum ( argv [ optind ] )	64:4:741:775	501136	6	True				
ANR	501258	AssignmentExpression	ctx -> offset = cvtnum ( argv [ optind ] )		501136	0		=			
ANR	501259	PtrMemberAccess	ctx -> offset		501136	0					
ANR	501260	Identifier	ctx		501136	0					
ANR	501261	Identifier	offset		501136	1					
ANR	501262	CallExpression	cvtnum ( argv [ optind ] )		501136	1					
ANR	501263	Callee	cvtnum		501136	0					
ANR	501264	Identifier	cvtnum		501136	0					
ANR	501265	ArgumentList	argv [ optind ]		501136	1					
ANR	501266	Argument	argv [ optind ]		501136	0					
ANR	501267	ArrayIndexing	argv [ optind ]		501136	0					
ANR	501268	Identifier	argv		501136	0					
ANR	501269	Identifier	optind		501136	1					
ANR	501270	IfStatement	if ( ctx -> offset < 0 )		501136	7					
ANR	501271	Condition	ctx -> offset < 0	66:8:786:800	501136	0	True				
ANR	501272	RelationalExpression	ctx -> offset < 0		501136	0		<			
ANR	501273	PtrMemberAccess	ctx -> offset		501136	0					
ANR	501274	Identifier	ctx		501136	0					
ANR	501275	Identifier	offset		501136	1					
ANR	501276	PrimaryExpression	0		501136	1					
ANR	501277	CompoundStatement		64:25:755:755	501136	1					
ANR	501278	ExpressionStatement	"printf ( ""non-numeric length argument -- %s\\n"" , argv [ optind ] )"	68:8:814:873	501136	0	True				
ANR	501279	CallExpression	"printf ( ""non-numeric length argument -- %s\\n"" , argv [ optind ] )"		501136	0					
ANR	501280	Callee	printf		501136	0					
ANR	501281	Identifier	printf		501136	0					
ANR	501282	ArgumentList	"""non-numeric length argument -- %s\\n"""		501136	1					
ANR	501283	Argument	"""non-numeric length argument -- %s\\n"""		501136	0					
ANR	501284	PrimaryExpression	"""non-numeric length argument -- %s\\n"""		501136	0					
ANR	501285	Argument	argv [ optind ]		501136	1					
ANR	501286	ArrayIndexing	argv [ optind ]		501136	0					
ANR	501287	Identifier	argv		501136	0					
ANR	501288	Identifier	optind		501136	1					
ANR	501289	ReturnStatement	return 0 ;	71:8:885:893	501136	1	True				
ANR	501290	PrimaryExpression	0		501136	0					
ANR	501291	ExpressionStatement	optind ++	75:4:907:915	501136	8	True				
ANR	501292	PostIncDecOperationExpression	optind ++		501136	0					
ANR	501293	Identifier	optind		501136	0					
ANR	501294	IncDec	++		501136	1					
ANR	501295	IfStatement	if ( ctx -> offset & 0x1ff )		501136	9					
ANR	501296	Condition	ctx -> offset & 0x1ff	79:8:928:946	501136	0	True				
ANR	501297	BitAndExpression	ctx -> offset & 0x1ff		501136	0		&			
ANR	501298	PtrMemberAccess	ctx -> offset		501136	0					
ANR	501299	Identifier	ctx		501136	0					
ANR	501300	Identifier	offset		501136	1					
ANR	501301	PrimaryExpression	0x1ff		501136	1					
ANR	501302	CompoundStatement		77:29:901:901	501136	1					
ANR	501303	Statement	printf	81:8:960:965	501136	0	True				
ANR	501304	Statement	(	81:14:966:966	501136	1	True				
ANR	501305	Statement	"""offset %"""	81:15:967:976	501136	2	True				
ANR	501306	Statement	PRId64	81:26:978:983	501136	3	True				
ANR	501307	Statement	""" is not sector aligned\\n"""	81:33:985:1010	501136	4	True				
ANR	501308	Statement	","	81:59:1011:1011	501136	5	True				
ANR	501309	Statement	ctx	83:15:1029:1031	501136	6	True				
ANR	501310	Statement	->	83:18:1032:1033	501136	7	True				
ANR	501311	Statement	offset	83:20:1034:1039	501136	8	True				
ANR	501312	Statement	)	83:26:1040:1040	501136	9	True				
ANR	501313	ExpressionStatement		83:27:1041:1041	501136	10	True				
ANR	501314	ReturnStatement	return 0 ;	86:8:1053:1061	501136	11	True				
ANR	501315	PrimaryExpression	0		501136	0					
ANR	501316	ExpressionStatement	nr_iov = argc - optind	92:4:1077:1099	501136	10	True				
ANR	501317	AssignmentExpression	nr_iov = argc - optind		501136	0		=			
ANR	501318	Identifier	nr_iov		501136	0					
ANR	501319	AdditiveExpression	argc - optind		501136	1		-			
ANR	501320	Identifier	argc		501136	0					
ANR	501321	Identifier	optind		501136	1					
ANR	501322	ExpressionStatement	"ctx -> buf = create_iovec ( & ctx -> qiov , & argv [ optind ] , nr_iov , pattern )"	94:4:1106:1173	501136	11	True				
ANR	501323	AssignmentExpression	"ctx -> buf = create_iovec ( & ctx -> qiov , & argv [ optind ] , nr_iov , pattern )"		501136	0		=			
ANR	501324	PtrMemberAccess	ctx -> buf		501136	0					
ANR	501325	Identifier	ctx		501136	0					
ANR	501326	Identifier	buf		501136	1					
ANR	501327	CallExpression	"create_iovec ( & ctx -> qiov , & argv [ optind ] , nr_iov , pattern )"		501136	1					
ANR	501328	Callee	create_iovec		501136	0					
ANR	501329	Identifier	create_iovec		501136	0					
ANR	501330	ArgumentList	& ctx -> qiov		501136	1					
ANR	501331	Argument	& ctx -> qiov		501136	0					
ANR	501332	UnaryOperationExpression	& ctx -> qiov		501136	0					
ANR	501333	UnaryOperator	&		501136	0					
ANR	501334	PtrMemberAccess	ctx -> qiov		501136	1					
ANR	501335	Identifier	ctx		501136	0					
ANR	501336	Identifier	qiov		501136	1					
ANR	501337	Argument	& argv [ optind ]		501136	1					
ANR	501338	UnaryOperationExpression	& argv [ optind ]		501136	0					
ANR	501339	UnaryOperator	&		501136	0					
ANR	501340	ArrayIndexing	argv [ optind ]		501136	1					
ANR	501341	Identifier	argv		501136	0					
ANR	501342	Identifier	optind		501136	1					
ANR	501343	Argument	nr_iov		501136	2					
ANR	501344	Identifier	nr_iov		501136	0					
ANR	501345	Argument	pattern		501136	3					
ANR	501346	Identifier	pattern		501136	0					
ANR	501347	ExpressionStatement	"gettimeofday ( & ctx -> t1 , NULL )"	98:4:1182:1210	501136	12	True				
ANR	501348	CallExpression	"gettimeofday ( & ctx -> t1 , NULL )"		501136	0					
ANR	501349	Callee	gettimeofday		501136	0					
ANR	501350	Identifier	gettimeofday		501136	0					
ANR	501351	ArgumentList	& ctx -> t1		501136	1					
ANR	501352	Argument	& ctx -> t1		501136	0					
ANR	501353	UnaryOperationExpression	& ctx -> t1		501136	0					
ANR	501354	UnaryOperator	&		501136	0					
ANR	501355	PtrMemberAccess	ctx -> t1		501136	1					
ANR	501356	Identifier	ctx		501136	0					
ANR	501357	Identifier	t1		501136	1					
ANR	501358	Argument	NULL		501136	1					
ANR	501359	Identifier	NULL		501136	0					
ANR	501360	ExpressionStatement	"acb = bdrv_aio_writev ( bs , ctx -> offset >> 9 , & ctx -> qiov , ctx -> qiov . size >> 9 , aio_write_done , ctx )"	100:4:1217:1341	501136	13	True				
ANR	501361	AssignmentExpression	"acb = bdrv_aio_writev ( bs , ctx -> offset >> 9 , & ctx -> qiov , ctx -> qiov . size >> 9 , aio_write_done , ctx )"		501136	0		=			
ANR	501362	Identifier	acb		501136	0					
ANR	501363	CallExpression	"bdrv_aio_writev ( bs , ctx -> offset >> 9 , & ctx -> qiov , ctx -> qiov . size >> 9 , aio_write_done , ctx )"		501136	1					
ANR	501364	Callee	bdrv_aio_writev		501136	0					
ANR	501365	Identifier	bdrv_aio_writev		501136	0					
ANR	501366	ArgumentList	bs		501136	1					
ANR	501367	Argument	bs		501136	0					
ANR	501368	Identifier	bs		501136	0					
ANR	501369	Argument	ctx -> offset >> 9		501136	1					
ANR	501370	ShiftExpression	ctx -> offset >> 9		501136	0		>>			
ANR	501371	PtrMemberAccess	ctx -> offset		501136	0					
ANR	501372	Identifier	ctx		501136	0					
ANR	501373	Identifier	offset		501136	1					
ANR	501374	PrimaryExpression	9		501136	1					
ANR	501375	Argument	& ctx -> qiov		501136	2					
ANR	501376	UnaryOperationExpression	& ctx -> qiov		501136	0					
ANR	501377	UnaryOperator	&		501136	0					
ANR	501378	PtrMemberAccess	ctx -> qiov		501136	1					
ANR	501379	Identifier	ctx		501136	0					
ANR	501380	Identifier	qiov		501136	1					
ANR	501381	Argument	ctx -> qiov . size >> 9		501136	3					
ANR	501382	ShiftExpression	ctx -> qiov . size >> 9		501136	0		>>			
ANR	501383	MemberAccess	ctx -> qiov . size		501136	0					
ANR	501384	PtrMemberAccess	ctx -> qiov		501136	0					
ANR	501385	Identifier	ctx		501136	0					
ANR	501386	Identifier	qiov		501136	1					
ANR	501387	Identifier	size		501136	1					
ANR	501388	PrimaryExpression	9		501136	1					
ANR	501389	Argument	aio_write_done		501136	4					
ANR	501390	Identifier	aio_write_done		501136	0					
ANR	501391	Argument	ctx		501136	5					
ANR	501392	Identifier	ctx		501136	0					
ANR	501393	IfStatement	if ( ! acb )		501136	14					
ANR	501394	Condition	! acb	104:8:1352:1355	501136	0	True				
ANR	501395	UnaryOperationExpression	! acb		501136	0					
ANR	501396	UnaryOperator	!		501136	0					
ANR	501397	Identifier	acb		501136	1					
ANR	501398	CompoundStatement		102:14:1310:1310	501136	1					
ANR	501399	ExpressionStatement	free ( ctx -> buf )	106:8:1369:1383	501136	0	True				
ANR	501400	CallExpression	free ( ctx -> buf )		501136	0					
ANR	501401	Callee	free		501136	0					
ANR	501402	Identifier	free		501136	0					
ANR	501403	ArgumentList	ctx -> buf		501136	1					
ANR	501404	Argument	ctx -> buf		501136	0					
ANR	501405	PtrMemberAccess	ctx -> buf		501136	0					
ANR	501406	Identifier	ctx		501136	0					
ANR	501407	Identifier	buf		501136	1					
ANR	501408	ReturnStatement	return - EIO ;	109:8:1395:1406	501136	1	True				
ANR	501409	UnaryOperationExpression	- EIO		501136	0					
ANR	501410	UnaryOperator	-		501136	0					
ANR	501411	Identifier	EIO		501136	1					
ANR	501412	ReturnStatement	return 0 ;	115:4:1422:1430	501136	15	True				
ANR	501413	PrimaryExpression	0		501136	0					
ANR	501414	ReturnType	static int		501136	1					
ANR	501415	Identifier	aio_write_f		501136	2					
ANR	501416	ParameterList	"int argc , char * * argv"		501136	3					
ANR	501417	Parameter	int argc	1:23:23:30	501136	0	True				
ANR	501418	ParameterType	int		501136	0					
ANR	501419	Identifier	argc		501136	1					
ANR	501420	Parameter	char * * argv	1:33:33:43	501136	1	True				
ANR	501421	ParameterType	char * *		501136	0					
ANR	501422	Identifier	argv		501136	1					
ANR	501423	CFGEntryNode	ENTRY		501136		True				
ANR	501424	CFGExitNode	EXIT		501136		True				
ANR	501425	Symbol	acb		501136						
ANR	501426	Symbol	& aio_write_cmd		501136						
ANR	501427	Symbol	* optind		501136						
ANR	501428	Symbol	create_iovec		501136						
ANR	501429	Symbol	optind		501136						
ANR	501430	Symbol	pattern		501136						
ANR	501431	Symbol	optarg		501136						
ANR	501432	Symbol	* argv		501136						
ANR	501433	Symbol	calloc		501136						
ANR	501434	Symbol	argv		501136						
ANR	501435	Symbol	& ctx -> qiov		501136						
ANR	501436	Symbol	bs		501136						
ANR	501437	Symbol	getopt		501136						
ANR	501438	Symbol	command_usage		501136						
ANR	501439	Symbol	ctx -> buf		501136						
ANR	501440	Symbol	EOF		501136						
ANR	501441	Symbol	argc		501136						
ANR	501442	Symbol	cvtnum		501136						
ANR	501443	Symbol	aio_write_done		501136						
ANR	501444	Symbol	c		501136						
ANR	501445	Symbol	NULL		501136						
ANR	501446	Symbol	parse_pattern		501136						
ANR	501447	Symbol	& ctx -> t1		501136						
ANR	501448	Symbol	ctx		501136						
ANR	501449	Symbol	EIO		501136						
ANR	501450	Symbol	* ctx		501136						
ANR	501451	Symbol	ctx -> qflag		501136						
ANR	501452	Symbol	ctx -> offset		501136						
ANR	501453	Symbol	bdrv_aio_writev		501136						
ANR	501454	Symbol	ctx -> Cflag		501136						
ANR	501455	Symbol	ctx -> qiov		501136						
ANR	501456	Symbol	ctx -> qiov . size		501136						
ANR	501457	Symbol	nr_iov		501136						
