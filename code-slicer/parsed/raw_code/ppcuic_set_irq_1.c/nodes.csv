command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6666619	File	/home/p4ultr4n/workplace/ReVeal/raw_code/ppcuic_set_irq_1.c								
ANR	6666620	Function	ppcuic_set_irq	1:0:0:1094							
ANR	6666621	FunctionDef	"ppcuic_set_irq (void * opaque , int irq_num , int level)"		6666620	0					
ANR	6666622	CompoundStatement		3:0:67:1094	6666620	0					
ANR	6666623	IdentifierDeclStatement	ppcuic_t * uic ;	5:4:74:87	6666620	0	True				
ANR	6666624	IdentifierDecl	* uic		6666620	0					
ANR	6666625	IdentifierDeclType	ppcuic_t *		6666620	0					
ANR	6666626	Identifier	uic		6666620	1					
ANR	6666627	IdentifierDeclStatement	"uint32_t mask , sr ;"	7:4:94:111	6666620	1	True				
ANR	6666628	IdentifierDecl	mask		6666620	0					
ANR	6666629	IdentifierDeclType	uint32_t		6666620	0					
ANR	6666630	Identifier	mask		6666620	1					
ANR	6666631	IdentifierDecl	sr		6666620	1					
ANR	6666632	IdentifierDeclType	uint32_t		6666620	0					
ANR	6666633	Identifier	sr		6666620	1					
ANR	6666634	ExpressionStatement	uic = opaque	11:4:120:132	6666620	2	True				
ANR	6666635	AssignmentExpression	uic = opaque		6666620	0		=			
ANR	6666636	Identifier	uic		6666620	0					
ANR	6666637	Identifier	opaque		6666620	1					
ANR	6666638	ExpressionStatement	mask = 1 << ( 31 - irq_num )	13:4:139:163	6666620	3	True				
ANR	6666639	AssignmentExpression	mask = 1 << ( 31 - irq_num )		6666620	0		=			
ANR	6666640	Identifier	mask		6666620	0					
ANR	6666641	ShiftExpression	1 << ( 31 - irq_num )		6666620	1		<<			
ANR	6666642	PrimaryExpression	1		6666620	0					
ANR	6666643	AdditiveExpression	31 - irq_num		6666620	1		-			
ANR	6666644	PrimaryExpression	31		6666620	0					
ANR	6666645	Identifier	irq_num		6666620	1					
ANR	6666646	Statement	LOG_UIC	15:4:170:176	6666620	4	True				
ANR	6666647	Statement	(	15:11:177:177	6666620	5	True				
ANR	6666648	Statement	"""%s: irq %d level %d uicsr %08"""	15:12:178:208	6666620	6	True				
ANR	6666649	Statement	PRIx32	15:44:210:215	6666620	7	True				
ANR	6666650	Statement	""" mask %08"""	17:16:234:244	6666620	8	True				
ANR	6666651	Statement	PRIx32	17:28:246:251	6666620	9	True				
ANR	6666652	Statement	""" => %08"""	17:35:253:261	6666620	10	True				
ANR	6666653	Statement	PRIx32	17:45:263:268	6666620	11	True				
ANR	6666654	Statement	""" %08"""	17:52:270:275	6666620	12	True				
ANR	6666655	Statement	PRIx32	17:59:277:282	6666620	13	True				
ANR	6666656	Statement	"""\\n"""	17:66:284:287	6666620	14	True				
ANR	6666657	Statement	","	17:70:288:288	6666620	15	True				
ANR	6666658	Statement	__func__	19:16:307:314	6666620	16	True				
ANR	6666659	Statement	","	19:24:315:315	6666620	17	True				
ANR	6666660	Statement	irq_num	19:26:317:323	6666620	18	True				
ANR	6666661	Statement	","	19:33:324:324	6666620	19	True				
ANR	6666662	Statement	level	19:35:326:330	6666620	20	True				
ANR	6666663	Statement	","	19:40:331:331	6666620	21	True				
ANR	6666664	Statement	uic	21:16:350:352	6666620	22	True				
ANR	6666665	Statement	->	21:19:353:354	6666620	23	True				
ANR	6666666	Statement	uicsr	21:21:355:359	6666620	24	True				
ANR	6666667	Statement	","	21:26:360:360	6666620	25	True				
ANR	6666668	Statement	mask	21:28:362:365	6666620	26	True				
ANR	6666669	Statement	","	21:32:366:366	6666620	27	True				
ANR	6666670	Statement	uic	21:34:368:370	6666620	28	True				
ANR	6666671	Statement	->	21:37:371:372	6666620	29	True				
ANR	6666672	Statement	uicsr	21:39:373:377	6666620	30	True				
ANR	6666673	Statement	&	21:45:379:379	6666620	31	True				
ANR	6666674	Statement	mask	21:47:381:384	6666620	32	True				
ANR	6666675	Statement	","	21:51:385:385	6666620	33	True				
ANR	6666676	Statement	level	21:53:387:391	6666620	34	True				
ANR	6666677	Statement	<<	21:59:393:394	6666620	35	True				
ANR	6666678	Statement	irq_num	21:62:396:402	6666620	36	True				
ANR	6666679	Statement	)	21:69:403:403	6666620	37	True				
ANR	6666680	ExpressionStatement		21:70:404:404	6666620	38	True				
ANR	6666681	IfStatement	if ( irq_num < 0 || irq_num > 31 )		6666620	39					
ANR	6666682	Condition	irq_num < 0 || irq_num > 31	23:8:415:441	6666620	0	True				
ANR	6666683	OrExpression	irq_num < 0 || irq_num > 31		6666620	0		||			
ANR	6666684	RelationalExpression	irq_num < 0		6666620	0		<			
ANR	6666685	Identifier	irq_num		6666620	0					
ANR	6666686	PrimaryExpression	0		6666620	1					
ANR	6666687	RelationalExpression	irq_num > 31		6666620	1		>			
ANR	6666688	Identifier	irq_num		6666620	0					
ANR	6666689	PrimaryExpression	31		6666620	1					
ANR	6666690	ReturnStatement	return ;	25:8:453:459	6666620	1	True				
ANR	6666691	ExpressionStatement	sr = uic -> uicsr	27:4:466:481	6666620	40	True				
ANR	6666692	AssignmentExpression	sr = uic -> uicsr		6666620	0		=			
ANR	6666693	Identifier	sr		6666620	0					
ANR	6666694	PtrMemberAccess	uic -> uicsr		6666620	1					
ANR	6666695	Identifier	uic		6666620	0					
ANR	6666696	Identifier	uicsr		6666620	1					
ANR	6666697	IfStatement	if ( uic -> uictr & mask )		6666620	41					
ANR	6666698	Condition	uic -> uictr & mask	33:8:528:544	6666620	0	True				
ANR	6666699	BitAndExpression	uic -> uictr & mask		6666620	0		&			
ANR	6666700	PtrMemberAccess	uic -> uictr		6666620	0					
ANR	6666701	Identifier	uic		6666620	0					
ANR	6666702	Identifier	uictr		6666620	1					
ANR	6666703	Identifier	mask		6666620	1					
ANR	6666704	CompoundStatement		31:27:479:479	6666620	1					
ANR	6666705	IfStatement	if ( level == 1 )		6666620	0					
ANR	6666706	Condition	level == 1	37:12:602:611	6666620	0	True				
ANR	6666707	EqualityExpression	level == 1		6666620	0		==			
ANR	6666708	Identifier	level		6666620	0					
ANR	6666709	PrimaryExpression	1		6666620	1					
ANR	6666710	ExpressionStatement	uic -> uicsr |= mask	39:12:627:645	6666620	1	True				
ANR	6666711	AssignmentExpression	uic -> uicsr |= mask		6666620	0		|=			
ANR	6666712	PtrMemberAccess	uic -> uicsr		6666620	0					
ANR	6666713	Identifier	uic		6666620	0					
ANR	6666714	Identifier	uicsr		6666620	1					
ANR	6666715	Identifier	mask		6666620	1					
ANR	6666716	ElseStatement	else		6666620	0					
ANR	6666717	CompoundStatement		39:11:591:591	6666620	0					
ANR	6666718	IfStatement	if ( level == 1 )		6666620	0					
ANR	6666719	Condition	level == 1	45:12:715:724	6666620	0	True				
ANR	6666720	EqualityExpression	level == 1		6666620	0		==			
ANR	6666721	Identifier	level		6666620	0					
ANR	6666722	PrimaryExpression	1		6666620	1					
ANR	6666723	CompoundStatement		43:24:659:659	6666620	1					
ANR	6666724	ExpressionStatement	uic -> uicsr |= mask	47:12:742:760	6666620	0	True				
ANR	6666725	AssignmentExpression	uic -> uicsr |= mask		6666620	0		|=			
ANR	6666726	PtrMemberAccess	uic -> uicsr		6666620	0					
ANR	6666727	Identifier	uic		6666620	0					
ANR	6666728	Identifier	uicsr		6666620	1					
ANR	6666729	Identifier	mask		6666620	1					
ANR	6666730	ExpressionStatement	uic -> level |= mask	49:12:775:793	6666620	1	True				
ANR	6666731	AssignmentExpression	uic -> level |= mask		6666620	0		|=			
ANR	6666732	PtrMemberAccess	uic -> level		6666620	0					
ANR	6666733	Identifier	uic		6666620	0					
ANR	6666734	Identifier	level		6666620	1					
ANR	6666735	Identifier	mask		6666620	1					
ANR	6666736	ElseStatement	else		6666620	0					
ANR	6666737	CompoundStatement		49:15:743:743	6666620	0					
ANR	6666738	ExpressionStatement	uic -> uicsr &= ~mask	53:12:826:845	6666620	0	True				
ANR	6666739	AssignmentExpression	uic -> uicsr &= ~mask		6666620	0		&=			
ANR	6666740	PtrMemberAccess	uic -> uicsr		6666620	0					
ANR	6666741	Identifier	uic		6666620	0					
ANR	6666742	Identifier	uicsr		6666620	1					
ANR	6666743	Identifier	~mask		6666620	1					
ANR	6666744	ExpressionStatement	uic -> level &= ~mask	55:12:860:879	6666620	1	True				
ANR	6666745	AssignmentExpression	uic -> level &= ~mask		6666620	0		&=			
ANR	6666746	PtrMemberAccess	uic -> level		6666620	0					
ANR	6666747	Identifier	uic		6666620	0					
ANR	6666748	Identifier	level		6666620	1					
ANR	6666749	Identifier	~mask		6666620	1					
ANR	6666750	Statement	LOG_UIC	61:4:904:910	6666620	42	True				
ANR	6666751	Statement	(	61:11:911:911	6666620	43	True				
ANR	6666752	Statement	"""%s: irq %d level %d sr %"""	61:12:912:937	6666620	44	True				
ANR	6666753	Statement	PRIx32	61:39:939:944	6666620	45	True				
ANR	6666754	Statement	""" => """	61:46:946:951	6666620	46	True				
ANR	6666755	Statement	"""%08"""	63:16:970:974	6666620	47	True				
ANR	6666756	Statement	PRIx32	63:22:976:981	6666620	48	True				
ANR	6666757	Statement	"""\\n"""	63:29:983:986	6666620	49	True				
ANR	6666758	Statement	","	63:33:987:987	6666620	50	True				
ANR	6666759	Statement	__func__	63:35:989:996	6666620	51	True				
ANR	6666760	Statement	","	63:43:997:997	6666620	52	True				
ANR	6666761	Statement	irq_num	63:45:999:1005	6666620	53	True				
ANR	6666762	Statement	","	63:52:1006:1006	6666620	54	True				
ANR	6666763	Statement	level	63:54:1008:1012	6666620	55	True				
ANR	6666764	Statement	","	63:59:1013:1013	6666620	56	True				
ANR	6666765	Statement	uic	63:61:1015:1017	6666620	57	True				
ANR	6666766	Statement	->	63:64:1018:1019	6666620	58	True				
ANR	6666767	Statement	uicsr	63:66:1020:1024	6666620	59	True				
ANR	6666768	Statement	","	63:71:1025:1025	6666620	60	True				
ANR	6666769	Statement	sr	63:73:1027:1028	6666620	61	True				
ANR	6666770	Statement	)	63:75:1029:1029	6666620	62	True				
ANR	6666771	ExpressionStatement		63:76:1030:1030	6666620	63	True				
ANR	6666772	IfStatement	if ( sr != uic -> uicsr )		6666620	64					
ANR	6666773	Condition	sr != uic -> uicsr	65:8:1041:1056	6666620	0	True				
ANR	6666774	EqualityExpression	sr != uic -> uicsr		6666620	0		!=			
ANR	6666775	Identifier	sr		6666620	0					
ANR	6666776	PtrMemberAccess	uic -> uicsr		6666620	1					
ANR	6666777	Identifier	uic		6666620	0					
ANR	6666778	Identifier	uicsr		6666620	1					
ANR	6666779	ExpressionStatement	ppcuic_trigger_irq ( uic )	67:8:1068:1091	6666620	1	True				
ANR	6666780	CallExpression	ppcuic_trigger_irq ( uic )		6666620	0					
ANR	6666781	Callee	ppcuic_trigger_irq		6666620	0					
ANR	6666782	Identifier	ppcuic_trigger_irq		6666620	0					
ANR	6666783	ArgumentList	uic		6666620	1					
ANR	6666784	Argument	uic		6666620	0					
ANR	6666785	Identifier	uic		6666620	0					
ANR	6666786	ReturnType	static void		6666620	1					
ANR	6666787	Identifier	ppcuic_set_irq		6666620	2					
ANR	6666788	ParameterList	"void * opaque , int irq_num , int level"		6666620	3					
ANR	6666789	Parameter	void * opaque	1:28:28:39	6666620	0	True				
ANR	6666790	ParameterType	void *		6666620	0					
ANR	6666791	Identifier	opaque		6666620	1					
ANR	6666792	Parameter	int irq_num	1:42:42:52	6666620	1	True				
ANR	6666793	ParameterType	int		6666620	0					
ANR	6666794	Identifier	irq_num		6666620	1					
ANR	6666795	Parameter	int level	1:55:55:63	6666620	2	True				
ANR	6666796	ParameterType	int		6666620	0					
ANR	6666797	Identifier	level		6666620	1					
ANR	6666798	CFGEntryNode	ENTRY		6666620		True				
ANR	6666799	CFGExitNode	EXIT		6666620		True				
ANR	6666800	Symbol	uic -> level		6666620						
ANR	6666801	Symbol	opaque		6666620						
ANR	6666802	Symbol	irq_num		6666620						
ANR	6666803	Symbol	level		6666620						
ANR	6666804	Symbol	uic -> uicsr		6666620						
ANR	6666805	Symbol	~mask		6666620						
ANR	6666806	Symbol	* uic		6666620						
ANR	6666807	Symbol	uic -> uictr		6666620						
ANR	6666808	Symbol	uic		6666620						
ANR	6666809	Symbol	mask		6666620						
ANR	6666810	Symbol	sr		6666620						
