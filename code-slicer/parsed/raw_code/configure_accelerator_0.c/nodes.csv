command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1395851	File	/home/p4ultr4n/workplace/ReVeal/raw_code/configure_accelerator_0.c								
ANR	1395852	Function	configure_accelerator	1:0:0:1805							
ANR	1395853	FunctionDef	configure_accelerator ()		1395852	0					
ANR	1395854	CompoundStatement		3:0:40:1805	1395852	0					
ANR	1395855	IdentifierDeclStatement	const char * p = NULL ;	5:4:47:67	1395852	0	True				
ANR	1395856	IdentifierDecl	* p = NULL		1395852	0					
ANR	1395857	IdentifierDeclType	const char *		1395852	0					
ANR	1395858	Identifier	p		1395852	1					
ANR	1395859	AssignmentExpression	* p = NULL		1395852	2		=			
ANR	1395860	Identifier	NULL		1395852	0					
ANR	1395861	Identifier	NULL		1395852	1					
ANR	1395862	IdentifierDeclStatement	char buf [ 10 ] ;	7:4:74:86	1395852	1	True				
ANR	1395863	IdentifierDecl	buf [ 10 ]		1395852	0					
ANR	1395864	IdentifierDeclType	char [ 10 ]		1395852	0					
ANR	1395865	Identifier	buf		1395852	1					
ANR	1395866	PrimaryExpression	10		1395852	2					
ANR	1395867	IdentifierDeclStatement	"int i , ret ;"	9:4:93:103	1395852	2	True				
ANR	1395868	IdentifierDecl	i		1395852	0					
ANR	1395869	IdentifierDeclType	int		1395852	0					
ANR	1395870	Identifier	i		1395852	1					
ANR	1395871	IdentifierDecl	ret		1395852	1					
ANR	1395872	IdentifierDeclType	int		1395852	0					
ANR	1395873	Identifier	ret		1395852	1					
ANR	1395874	IdentifierDeclStatement	bool accel_initalised = 0 ;	11:4:110:135	1395852	3	True				
ANR	1395875	IdentifierDecl	accel_initalised = 0		1395852	0					
ANR	1395876	IdentifierDeclType	bool		1395852	0					
ANR	1395877	Identifier	accel_initalised		1395852	1					
ANR	1395878	AssignmentExpression	accel_initalised = 0		1395852	2		=			
ANR	1395879	Identifier	accel_initalised		1395852	0					
ANR	1395880	PrimaryExpression	0		1395852	1					
ANR	1395881	IdentifierDeclStatement	bool init_failed = 0 ;	13:4:142:162	1395852	4	True				
ANR	1395882	IdentifierDecl	init_failed = 0		1395852	0					
ANR	1395883	IdentifierDeclType	bool		1395852	0					
ANR	1395884	Identifier	init_failed		1395852	1					
ANR	1395885	AssignmentExpression	init_failed = 0		1395852	2		=			
ANR	1395886	Identifier	init_failed		1395852	0					
ANR	1395887	PrimaryExpression	0		1395852	1					
ANR	1395888	IdentifierDeclStatement	"QemuOptsList * list = qemu_find_opts ( ""machine"" ) ;"	17:4:171:217	1395852	5	True				
ANR	1395889	IdentifierDecl	"* list = qemu_find_opts ( ""machine"" )"		1395852	0					
ANR	1395890	IdentifierDeclType	QemuOptsList *		1395852	0					
ANR	1395891	Identifier	list		1395852	1					
ANR	1395892	AssignmentExpression	"* list = qemu_find_opts ( ""machine"" )"		1395852	2		=			
ANR	1395893	Identifier	list		1395852	0					
ANR	1395894	CallExpression	"qemu_find_opts ( ""machine"" )"		1395852	1					
ANR	1395895	Callee	qemu_find_opts		1395852	0					
ANR	1395896	Identifier	qemu_find_opts		1395852	0					
ANR	1395897	ArgumentList	"""machine"""		1395852	1					
ANR	1395898	Argument	"""machine"""		1395852	0					
ANR	1395899	PrimaryExpression	"""machine"""		1395852	0					
ANR	1395900	IfStatement	if ( ! QTAILQ_EMPTY ( & list -> head ) )		1395852	6					
ANR	1395901	Condition	! QTAILQ_EMPTY ( & list -> head )	19:8:228:253	1395852	0	True				
ANR	1395902	UnaryOperationExpression	! QTAILQ_EMPTY ( & list -> head )		1395852	0					
ANR	1395903	UnaryOperator	!		1395852	0					
ANR	1395904	CallExpression	QTAILQ_EMPTY ( & list -> head )		1395852	1					
ANR	1395905	Callee	QTAILQ_EMPTY		1395852	0					
ANR	1395906	Identifier	QTAILQ_EMPTY		1395852	0					
ANR	1395907	ArgumentList	& list -> head		1395852	1					
ANR	1395908	Argument	& list -> head		1395852	0					
ANR	1395909	UnaryOperationExpression	& list -> head		1395852	0					
ANR	1395910	UnaryOperator	&		1395852	0					
ANR	1395911	PtrMemberAccess	list -> head		1395852	1					
ANR	1395912	Identifier	list		1395852	0					
ANR	1395913	Identifier	head		1395852	1					
ANR	1395914	CompoundStatement		17:36:215:215	1395852	1					
ANR	1395915	ExpressionStatement	"p = qemu_opt_get ( QTAILQ_FIRST ( & list -> head ) , ""accel"" )"	21:8:267:319	1395852	0	True				
ANR	1395916	AssignmentExpression	"p = qemu_opt_get ( QTAILQ_FIRST ( & list -> head ) , ""accel"" )"		1395852	0		=			
ANR	1395917	Identifier	p		1395852	0					
ANR	1395918	CallExpression	"qemu_opt_get ( QTAILQ_FIRST ( & list -> head ) , ""accel"" )"		1395852	1					
ANR	1395919	Callee	qemu_opt_get		1395852	0					
ANR	1395920	Identifier	qemu_opt_get		1395852	0					
ANR	1395921	ArgumentList	QTAILQ_FIRST ( & list -> head )		1395852	1					
ANR	1395922	Argument	QTAILQ_FIRST ( & list -> head )		1395852	0					
ANR	1395923	CallExpression	QTAILQ_FIRST ( & list -> head )		1395852	0					
ANR	1395924	Callee	QTAILQ_FIRST		1395852	0					
ANR	1395925	Identifier	QTAILQ_FIRST		1395852	0					
ANR	1395926	ArgumentList	& list -> head		1395852	1					
ANR	1395927	Argument	& list -> head		1395852	0					
ANR	1395928	UnaryOperationExpression	& list -> head		1395852	0					
ANR	1395929	UnaryOperator	&		1395852	0					
ANR	1395930	PtrMemberAccess	list -> head		1395852	1					
ANR	1395931	Identifier	list		1395852	0					
ANR	1395932	Identifier	head		1395852	1					
ANR	1395933	Argument	"""accel"""		1395852	1					
ANR	1395934	PrimaryExpression	"""accel"""		1395852	0					
ANR	1395935	IfStatement	if ( p == NULL )		1395852	7					
ANR	1395936	Condition	p == NULL	27:8:339:347	1395852	0	True				
ANR	1395937	EqualityExpression	p == NULL		1395852	0		==			
ANR	1395938	Identifier	p		1395852	0					
ANR	1395939	Identifier	NULL		1395852	1					
ANR	1395940	CompoundStatement		25:19:309:309	1395852	1					
ANR	1395941	ExpressionStatement	"p = ""tcg"""	31:8:411:420	1395852	0	True				
ANR	1395942	AssignmentExpression	"p = ""tcg"""		1395852	0		=			
ANR	1395943	Identifier	p		1395852	0					
ANR	1395944	PrimaryExpression	"""tcg"""		1395852	1					
ANR	1395945	WhileStatement	while ( ! accel_initalised && * p != '\\0' )		1395852	8					
ANR	1395946	Condition	! accel_initalised && * p != '\\0'	37:11:443:473	1395852	0	True				
ANR	1395947	AndExpression	! accel_initalised && * p != '\\0'		1395852	0		&&			
ANR	1395948	UnaryOperationExpression	! accel_initalised		1395852	0					
ANR	1395949	UnaryOperator	!		1395852	0					
ANR	1395950	Identifier	accel_initalised		1395852	1					
ANR	1395951	EqualityExpression	* p != '\\0'		1395852	1		!=			
ANR	1395952	UnaryOperationExpression	* p		1395852	0					
ANR	1395953	UnaryOperator	*		1395852	0					
ANR	1395954	Identifier	p		1395852	1					
ANR	1395955	PrimaryExpression	'\\0'		1395852	1					
ANR	1395956	CompoundStatement		35:44:435:435	1395852	1					
ANR	1395957	IfStatement	if ( * p == ':' )		1395852	0					
ANR	1395958	Condition	* p == ':'	39:12:491:499	1395852	0	True				
ANR	1395959	EqualityExpression	* p == ':'		1395852	0		==			
ANR	1395960	UnaryOperationExpression	* p		1395852	0					
ANR	1395961	UnaryOperator	*		1395852	0					
ANR	1395962	Identifier	p		1395852	1					
ANR	1395963	PrimaryExpression	':'		1395852	1					
ANR	1395964	CompoundStatement		37:23:461:461	1395852	1					
ANR	1395965	ExpressionStatement	p ++	41:12:517:520	1395852	0	True				
ANR	1395966	PostIncDecOperationExpression	p ++		1395852	0					
ANR	1395967	Identifier	p		1395852	0					
ANR	1395968	IncDec	++		1395852	1					
ANR	1395969	ExpressionStatement	"p = get_opt_name ( buf , sizeof ( buf ) , p , ':' )"	45:8:542:585	1395852	1	True				
ANR	1395970	AssignmentExpression	"p = get_opt_name ( buf , sizeof ( buf ) , p , ':' )"		1395852	0		=			
ANR	1395971	Identifier	p		1395852	0					
ANR	1395972	CallExpression	"get_opt_name ( buf , sizeof ( buf ) , p , ':' )"		1395852	1					
ANR	1395973	Callee	get_opt_name		1395852	0					
ANR	1395974	Identifier	get_opt_name		1395852	0					
ANR	1395975	ArgumentList	buf		1395852	1					
ANR	1395976	Argument	buf		1395852	0					
ANR	1395977	Identifier	buf		1395852	0					
ANR	1395978	Argument	sizeof ( buf )		1395852	1					
ANR	1395979	SizeofExpression	sizeof ( buf )		1395852	0					
ANR	1395980	Sizeof	sizeof		1395852	0					
ANR	1395981	SizeofOperand	buf		1395852	1					
ANR	1395982	Argument	p		1395852	2					
ANR	1395983	Identifier	p		1395852	0					
ANR	1395984	Argument	':'		1395852	3					
ANR	1395985	PrimaryExpression	':'		1395852	0					
ANR	1395986	ForStatement	for ( i = 0 ; i < ARRAY_SIZE ( accel_list ) ; i ++ )		1395852	2					
ANR	1395987	ForInit	i = 0 ;	47:13:601:606	1395852	0	True				
ANR	1395988	AssignmentExpression	i = 0		1395852	0		=			
ANR	1395989	Identifier	i		1395852	0					
ANR	1395990	PrimaryExpression	0		1395852	1					
ANR	1395991	Condition	i < ARRAY_SIZE ( accel_list )	47:20:608:633	1395852	1	True				
ANR	1395992	RelationalExpression	i < ARRAY_SIZE ( accel_list )		1395852	0		<			
ANR	1395993	Identifier	i		1395852	0					
ANR	1395994	CallExpression	ARRAY_SIZE ( accel_list )		1395852	1					
ANR	1395995	Callee	ARRAY_SIZE		1395852	0					
ANR	1395996	Identifier	ARRAY_SIZE		1395852	0					
ANR	1395997	ArgumentList	accel_list		1395852	1					
ANR	1395998	Argument	accel_list		1395852	0					
ANR	1395999	Identifier	accel_list		1395852	0					
ANR	1396000	PostIncDecOperationExpression	i ++	47:48:636:638	1395852	2	True				
ANR	1396001	Identifier	i		1395852	0					
ANR	1396002	IncDec	++		1395852	1					
ANR	1396003	CompoundStatement		45:53:600:600	1395852	3					
ANR	1396004	IfStatement	"if ( strcmp ( accel_list [ i ] . opt_name , buf ) == 0 )"		1395852	0					
ANR	1396005	Condition	"strcmp ( accel_list [ i ] . opt_name , buf ) == 0"	49:16:660:699	1395852	0	True				
ANR	1396006	EqualityExpression	"strcmp ( accel_list [ i ] . opt_name , buf ) == 0"		1395852	0		==			
ANR	1396007	CallExpression	"strcmp ( accel_list [ i ] . opt_name , buf )"		1395852	0					
ANR	1396008	Callee	strcmp		1395852	0					
ANR	1396009	Identifier	strcmp		1395852	0					
ANR	1396010	ArgumentList	accel_list [ i ] . opt_name		1395852	1					
ANR	1396011	Argument	accel_list [ i ] . opt_name		1395852	0					
ANR	1396012	MemberAccess	accel_list [ i ] . opt_name		1395852	0					
ANR	1396013	ArrayIndexing	accel_list [ i ]		1395852	0					
ANR	1396014	Identifier	accel_list		1395852	0					
ANR	1396015	Identifier	i		1395852	1					
ANR	1396016	Identifier	opt_name		1395852	1					
ANR	1396017	Argument	buf		1395852	1					
ANR	1396018	Identifier	buf		1395852	0					
ANR	1396019	PrimaryExpression	0		1395852	1					
ANR	1396020	CompoundStatement		47:58:661:661	1395852	1					
ANR	1396021	ExpressionStatement	ret = accel_list [ i ] . init ( )	51:16:721:747	1395852	0	True				
ANR	1396022	AssignmentExpression	ret = accel_list [ i ] . init ( )		1395852	0		=			
ANR	1396023	Identifier	ret		1395852	0					
ANR	1396024	CallExpression	accel_list [ i ] . init ( )		1395852	1					
ANR	1396025	Callee	accel_list [ i ] . init		1395852	0					
ANR	1396026	MemberAccess	accel_list [ i ] . init		1395852	0					
ANR	1396027	ArrayIndexing	accel_list [ i ]		1395852	0					
ANR	1396028	Identifier	accel_list		1395852	0					
ANR	1396029	Identifier	i		1395852	1					
ANR	1396030	Identifier	init		1395852	1					
ANR	1396031	ArgumentList			1395852	1					
ANR	1396032	IfStatement	if ( ret < 0 )		1395852	1					
ANR	1396033	Condition	ret < 0	53:20:770:776	1395852	0	True				
ANR	1396034	RelationalExpression	ret < 0		1395852	0		<			
ANR	1396035	Identifier	ret		1395852	0					
ANR	1396036	PrimaryExpression	0		1395852	1					
ANR	1396037	CompoundStatement		51:29:738:738	1395852	1					
ANR	1396038	ExpressionStatement	init_failed = 1	55:20:802:817	1395852	0	True				
ANR	1396039	AssignmentExpression	init_failed = 1		1395852	0		=			
ANR	1396040	Identifier	init_failed		1395852	0					
ANR	1396041	PrimaryExpression	1		1395852	1					
ANR	1396042	IfStatement	if ( ! accel_list [ i ] . available ( ) )		1395852	1					
ANR	1396043	Condition	! accel_list [ i ] . available ( )	57:24:844:869	1395852	0	True				
ANR	1396044	UnaryOperationExpression	! accel_list [ i ] . available ( )		1395852	0					
ANR	1396045	UnaryOperator	!		1395852	0					
ANR	1396046	CallExpression	accel_list [ i ] . available ( )		1395852	1					
ANR	1396047	Callee	accel_list [ i ] . available		1395852	0					
ANR	1396048	MemberAccess	accel_list [ i ] . available		1395852	0					
ANR	1396049	ArrayIndexing	accel_list [ i ]		1395852	0					
ANR	1396050	Identifier	accel_list		1395852	0					
ANR	1396051	Identifier	i		1395852	1					
ANR	1396052	Identifier	available		1395852	1					
ANR	1396053	ArgumentList			1395852	1					
ANR	1396054	CompoundStatement		55:52:831:831	1395852	1					
ANR	1396055	ExpressionStatement	"printf ( ""%s not supported for this target\\n"" , accel_list [ i ] . name )"	59:24:899:995	1395852	0	True				
ANR	1396056	CallExpression	"printf ( ""%s not supported for this target\\n"" , accel_list [ i ] . name )"		1395852	0					
ANR	1396057	Callee	printf		1395852	0					
ANR	1396058	Identifier	printf		1395852	0					
ANR	1396059	ArgumentList	"""%s not supported for this target\\n"""		1395852	1					
ANR	1396060	Argument	"""%s not supported for this target\\n"""		1395852	0					
ANR	1396061	PrimaryExpression	"""%s not supported for this target\\n"""		1395852	0					
ANR	1396062	Argument	accel_list [ i ] . name		1395852	1					
ANR	1396063	MemberAccess	accel_list [ i ] . name		1395852	0					
ANR	1396064	ArrayIndexing	accel_list [ i ]		1395852	0					
ANR	1396065	Identifier	accel_list		1395852	0					
ANR	1396066	Identifier	i		1395852	1					
ANR	1396067	Identifier	name		1395852	1					
ANR	1396068	ElseStatement	else		1395852	0					
ANR	1396069	CompoundStatement		61:27:984:984	1395852	0					
ANR	1396070	ExpressionStatement	"fprintf ( stderr , ""failed to initialize %s: %s\\n"" , accel_list [ i ] . name , strerror ( - ret ) )"	65:24:1052:1202	1395852	0	True				
ANR	1396071	CallExpression	"fprintf ( stderr , ""failed to initialize %s: %s\\n"" , accel_list [ i ] . name , strerror ( - ret ) )"		1395852	0					
ANR	1396072	Callee	fprintf		1395852	0					
ANR	1396073	Identifier	fprintf		1395852	0					
ANR	1396074	ArgumentList	stderr		1395852	1					
ANR	1396075	Argument	stderr		1395852	0					
ANR	1396076	Identifier	stderr		1395852	0					
ANR	1396077	Argument	"""failed to initialize %s: %s\\n"""		1395852	1					
ANR	1396078	PrimaryExpression	"""failed to initialize %s: %s\\n"""		1395852	0					
ANR	1396079	Argument	accel_list [ i ] . name		1395852	2					
ANR	1396080	MemberAccess	accel_list [ i ] . name		1395852	0					
ANR	1396081	ArrayIndexing	accel_list [ i ]		1395852	0					
ANR	1396082	Identifier	accel_list		1395852	0					
ANR	1396083	Identifier	i		1395852	1					
ANR	1396084	Identifier	name		1395852	1					
ANR	1396085	Argument	strerror ( - ret )		1395852	3					
ANR	1396086	CallExpression	strerror ( - ret )		1395852	0					
ANR	1396087	Callee	strerror		1395852	0					
ANR	1396088	Identifier	strerror		1395852	0					
ANR	1396089	ArgumentList	- ret		1395852	1					
ANR	1396090	Argument	- ret		1395852	0					
ANR	1396091	UnaryOperationExpression	- ret		1395852	0					
ANR	1396092	UnaryOperator	-		1395852	0					
ANR	1396093	Identifier	ret		1395852	1					
ANR	1396094	ElseStatement	else		1395852	0					
ANR	1396095	CompoundStatement		71:23:1210:1210	1395852	0					
ANR	1396096	ExpressionStatement	accel_initalised = 1	75:20:1274:1294	1395852	0	True				
ANR	1396097	AssignmentExpression	accel_initalised = 1		1395852	0		=			
ANR	1396098	Identifier	accel_initalised		1395852	0					
ANR	1396099	PrimaryExpression	1		1395852	1					
ANR	1396100	ExpressionStatement	* ( accel_list [ i ] . allowed ) = 1	77:20:1317:1345	1395852	1	True				
ANR	1396101	AssignmentExpression	* ( accel_list [ i ] . allowed ) = 1		1395852	0		=			
ANR	1396102	UnaryOperationExpression	* ( accel_list [ i ] . allowed )		1395852	0					
ANR	1396103	UnaryOperator	*		1395852	0					
ANR	1396104	MemberAccess	accel_list [ i ] . allowed		1395852	1					
ANR	1396105	ArrayIndexing	accel_list [ i ]		1395852	0					
ANR	1396106	Identifier	accel_list		1395852	0					
ANR	1396107	Identifier	i		1395852	1					
ANR	1396108	Identifier	allowed		1395852	1					
ANR	1396109	PrimaryExpression	1		1395852	1					
ANR	1396110	BreakStatement	break ;	81:16:1383:1388	1395852	2	True				
ANR	1396111	IfStatement	if ( i == ARRAY_SIZE ( accel_list ) )		1395852	3					
ANR	1396112	Condition	i == ARRAY_SIZE ( accel_list )	87:12:1429:1455	1395852	0	True				
ANR	1396113	EqualityExpression	i == ARRAY_SIZE ( accel_list )		1395852	0		==			
ANR	1396114	Identifier	i		1395852	0					
ANR	1396115	CallExpression	ARRAY_SIZE ( accel_list )		1395852	1					
ANR	1396116	Callee	ARRAY_SIZE		1395852	0					
ANR	1396117	Identifier	ARRAY_SIZE		1395852	0					
ANR	1396118	ArgumentList	accel_list		1395852	1					
ANR	1396119	Argument	accel_list		1395852	0					
ANR	1396120	Identifier	accel_list		1395852	0					
ANR	1396121	CompoundStatement		85:41:1417:1417	1395852	1					
ANR	1396122	ExpressionStatement	"fprintf ( stderr , ""\\""%s\\"" accelerator does not exist.\\n"" , buf )"	89:12:1473:1533	1395852	0	True				
ANR	1396123	CallExpression	"fprintf ( stderr , ""\\""%s\\"" accelerator does not exist.\\n"" , buf )"		1395852	0					
ANR	1396124	Callee	fprintf		1395852	0					
ANR	1396125	Identifier	fprintf		1395852	0					
ANR	1396126	ArgumentList	stderr		1395852	1					
ANR	1396127	Argument	stderr		1395852	0					
ANR	1396128	Identifier	stderr		1395852	0					
ANR	1396129	Argument	"""\\""%s\\"" accelerator does not exist.\\n"""		1395852	1					
ANR	1396130	PrimaryExpression	"""\\""%s\\"" accelerator does not exist.\\n"""		1395852	0					
ANR	1396131	Argument	buf		1395852	2					
ANR	1396132	Identifier	buf		1395852	0					
ANR	1396133	IfStatement	if ( ! accel_initalised )		1395852	9					
ANR	1396134	Condition	! accel_initalised	97:8:1564:1580	1395852	0	True				
ANR	1396135	UnaryOperationExpression	! accel_initalised		1395852	0					
ANR	1396136	UnaryOperator	!		1395852	0					
ANR	1396137	Identifier	accel_initalised		1395852	1					
ANR	1396138	CompoundStatement		95:27:1542:1542	1395852	1					
ANR	1396139	ExpressionStatement	"fprintf ( stderr , ""No accelerator found!\\n"" )"	99:8:1594:1636	1395852	0	True				
ANR	1396140	CallExpression	"fprintf ( stderr , ""No accelerator found!\\n"" )"		1395852	0					
ANR	1396141	Callee	fprintf		1395852	0					
ANR	1396142	Identifier	fprintf		1395852	0					
ANR	1396143	ArgumentList	stderr		1395852	1					
ANR	1396144	Argument	stderr		1395852	0					
ANR	1396145	Identifier	stderr		1395852	0					
ANR	1396146	Argument	"""No accelerator found!\\n"""		1395852	1					
ANR	1396147	PrimaryExpression	"""No accelerator found!\\n"""		1395852	0					
ANR	1396148	ExpressionStatement	exit ( 1 )	101:8:1647:1654	1395852	1	True				
ANR	1396149	CallExpression	exit ( 1 )		1395852	0					
ANR	1396150	Callee	exit		1395852	0					
ANR	1396151	Identifier	exit		1395852	0					
ANR	1396152	ArgumentList	1		1395852	1					
ANR	1396153	Argument	1		1395852	0					
ANR	1396154	PrimaryExpression	1		1395852	0					
ANR	1396155	IfStatement	if ( init_failed )		1395852	10					
ANR	1396156	Condition	init_failed	107:8:1674:1684	1395852	0	True				
ANR	1396157	Identifier	init_failed		1395852	0					
ANR	1396158	CompoundStatement		105:21:1646:1646	1395852	1					
ANR	1396159	ExpressionStatement	"fprintf ( stderr , ""Back to %s accelerator.\\n"" , accel_list [ i ] . name )"	109:8:1698:1762	1395852	0	True				
ANR	1396160	CallExpression	"fprintf ( stderr , ""Back to %s accelerator.\\n"" , accel_list [ i ] . name )"		1395852	0					
ANR	1396161	Callee	fprintf		1395852	0					
ANR	1396162	Identifier	fprintf		1395852	0					
ANR	1396163	ArgumentList	stderr		1395852	1					
ANR	1396164	Argument	stderr		1395852	0					
ANR	1396165	Identifier	stderr		1395852	0					
ANR	1396166	Argument	"""Back to %s accelerator.\\n"""		1395852	1					
ANR	1396167	PrimaryExpression	"""Back to %s accelerator.\\n"""		1395852	0					
ANR	1396168	Argument	accel_list [ i ] . name		1395852	2					
ANR	1396169	MemberAccess	accel_list [ i ] . name		1395852	0					
ANR	1396170	ArrayIndexing	accel_list [ i ]		1395852	0					
ANR	1396171	Identifier	accel_list		1395852	0					
ANR	1396172	Identifier	i		1395852	1					
ANR	1396173	Identifier	name		1395852	1					
ANR	1396174	ReturnStatement	return ! accel_initalised ;	115:4:1778:1802	1395852	11	True				
ANR	1396175	UnaryOperationExpression	! accel_initalised		1395852	0					
ANR	1396176	UnaryOperator	!		1395852	0					
ANR	1396177	Identifier	accel_initalised		1395852	1					
ANR	1396178	ReturnType	static int		1395852	1					
ANR	1396179	Identifier	configure_accelerator		1395852	2					
ANR	1396180	ParameterList			1395852	3					
ANR	1396181	CFGEntryNode	ENTRY		1395852		True				
ANR	1396182	CFGExitNode	EXIT		1395852		True				
ANR	1396183	Symbol	qemu_find_opts		1395852						
ANR	1396184	Symbol	qemu_opt_get		1395852						
ANR	1396185	Symbol	accel_list [ i ] . opt_name		1395852						
ANR	1396186	Symbol	& list -> head		1395852						
ANR	1396187	Symbol	QTAILQ_FIRST		1395852						
ANR	1396188	Symbol	QTAILQ_EMPTY		1395852						
ANR	1396189	Symbol	* accel_list [ i ] . allowed		1395852						
ANR	1396190	Symbol	ret		1395852						
ANR	1396191	Symbol	ARRAY_SIZE		1395852						
ANR	1396192	Symbol	strcmp		1395852						
ANR	1396193	Symbol	accel_list [ i ] . available		1395852						
ANR	1396194	Symbol	* * i		1395852						
ANR	1396195	Symbol	NULL		1395852						
ANR	1396196	Symbol	* accel_list		1395852						
ANR	1396197	Symbol	i		1395852						
ANR	1396198	Symbol	accel_list [ i ] . init		1395852						
ANR	1396199	Symbol	list		1395852						
ANR	1396200	Symbol	stderr		1395852						
ANR	1396201	Symbol	* * accel_list		1395852						
ANR	1396202	Symbol	accel_list [ i ] . name		1395852						
ANR	1396203	Symbol	p		1395852						
ANR	1396204	Symbol	init_failed		1395852						
ANR	1396205	Symbol	strerror		1395852						
ANR	1396206	Symbol	buf		1395852						
ANR	1396207	Symbol	* i		1395852						
ANR	1396208	Symbol	accel_list		1395852						
ANR	1396209	Symbol	* ( accel_list [ i ] . allowed )		1395852						
ANR	1396210	Symbol	* p		1395852						
ANR	1396211	Symbol	get_opt_name		1395852						
ANR	1396212	Symbol	accel_list [ i ] . allowed		1395852						
ANR	1396213	Symbol	accel_initalised		1395852						
