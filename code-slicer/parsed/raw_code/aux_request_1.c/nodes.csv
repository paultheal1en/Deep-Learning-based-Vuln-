command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	685762	File	/home/p4ultr4n/workplace/ReVeal/raw_code/aux_request_1.c								
ANR	685763	Function	aux_request	1:0:0:2990							
ANR	685764	FunctionDef	"aux_request (AUXBus * bus , AUXCommand cmd , uint32_t address , uint8_t len , uint8_t * data)"		685763	0					
ANR	685765	CompoundStatement		5:0:120:2990	685763	0					
ANR	685766	IdentifierDeclStatement	AUXReply ret = AUX_NACK ;	7:4:127:150	685763	0	True				
ANR	685767	IdentifierDecl	ret = AUX_NACK		685763	0					
ANR	685768	IdentifierDeclType	AUXReply		685763	0					
ANR	685769	Identifier	ret		685763	1					
ANR	685770	AssignmentExpression	ret = AUX_NACK		685763	2		=			
ANR	685771	Identifier	AUX_NACK		685763	0					
ANR	685772	Identifier	AUX_NACK		685763	1					
ANR	685773	IdentifierDeclStatement	I2CBus * i2c_bus = aux_get_i2c_bus ( bus ) ;	9:4:157:195	685763	1	True				
ANR	685774	IdentifierDecl	* i2c_bus = aux_get_i2c_bus ( bus )		685763	0					
ANR	685775	IdentifierDeclType	I2CBus *		685763	0					
ANR	685776	Identifier	i2c_bus		685763	1					
ANR	685777	AssignmentExpression	* i2c_bus = aux_get_i2c_bus ( bus )		685763	2		=			
ANR	685778	Identifier	i2c_bus		685763	0					
ANR	685779	CallExpression	aux_get_i2c_bus ( bus )		685763	1					
ANR	685780	Callee	aux_get_i2c_bus		685763	0					
ANR	685781	Identifier	aux_get_i2c_bus		685763	0					
ANR	685782	ArgumentList	bus		685763	1					
ANR	685783	Argument	bus		685763	0					
ANR	685784	Identifier	bus		685763	0					
ANR	685785	IdentifierDeclStatement	size_t i ;	11:4:202:210	685763	2	True				
ANR	685786	IdentifierDecl	i		685763	0					
ANR	685787	IdentifierDeclType	size_t		685763	0					
ANR	685788	Identifier	i		685763	1					
ANR	685789	IdentifierDeclStatement	bool is_write = false ;	13:4:217:238	685763	3	True				
ANR	685790	IdentifierDecl	is_write = false		685763	0					
ANR	685791	IdentifierDeclType	bool		685763	0					
ANR	685792	Identifier	is_write		685763	1					
ANR	685793	AssignmentExpression	is_write = false		685763	2		=			
ANR	685794	Identifier	false		685763	0					
ANR	685795	Identifier	false		685763	1					
ANR	685796	Statement	DPRINTF	17:4:247:253	685763	4	True				
ANR	685797	Statement	(	17:11:254:254	685763	5	True				
ANR	685798	Statement	"""request at address 0x%"""	17:12:255:278	685763	6	True				
ANR	685799	Statement	PRIX32	17:37:280:285	685763	7	True				
ANR	685800	Statement	""", command %u, len %u\\n"""	17:44:287:310	685763	8	True				
ANR	685801	Statement	","	17:68:311:311	685763	9	True				
ANR	685802	Statement	address	17:70:313:319	685763	10	True				
ANR	685803	Statement	","	17:77:320:320	685763	11	True				
ANR	685804	Statement	cmd	19:12:335:337	685763	12	True				
ANR	685805	Statement	","	19:15:338:338	685763	13	True				
ANR	685806	Statement	len	19:17:340:342	685763	14	True				
ANR	685807	Statement	)	19:20:343:343	685763	15	True				
ANR	685808	ExpressionStatement		19:21:344:344	685763	16	True				
ANR	685809	SwitchStatement	switch ( cmd )		685763	17					
ANR	685810	Condition	cmd	23:12:361:363	685763	0	True				
ANR	685811	Identifier	cmd		685763	0					
ANR	685812	CompoundStatement		19:17:245:245	685763	1					
ANR	685813	Label	case WRITE_AUX :	31:4:435:449	685763	0	True				
ANR	685814	Identifier	WRITE_AUX		685763	0					
ANR	685815	Label	case READ_AUX :	33:4:456:469	685763	1	True				
ANR	685816	Identifier	READ_AUX		685763	0					
ANR	685817	ExpressionStatement	is_write = cmd == READ_AUX ? false : true	35:8:480:521	685763	2	True				
ANR	685818	AssignmentExpression	is_write = cmd == READ_AUX ? false : true		685763	0		=			
ANR	685819	Identifier	is_write		685763	0					
ANR	685820	ConditionalExpression	cmd == READ_AUX ? false : true		685763	1					
ANR	685821	Condition	cmd == READ_AUX		685763	0					
ANR	685822	EqualityExpression	cmd == READ_AUX		685763	0		==			
ANR	685823	Identifier	cmd		685763	0					
ANR	685824	Identifier	READ_AUX		685763	1					
ANR	685825	Identifier	false		685763	1					
ANR	685826	Identifier	true		685763	2					
ANR	685827	ForStatement	for ( i = 0 ; i < len ; i ++ )		685763	3					
ANR	685828	ForInit	i = 0 ;	37:13:537:542	685763	0	True				
ANR	685829	AssignmentExpression	i = 0		685763	0		=			
ANR	685830	Identifier	i		685763	0					
ANR	685831	PrimaryExpression	0		685763	1					
ANR	685832	Condition	i < len	37:20:544:550	685763	1	True				
ANR	685833	RelationalExpression	i < len		685763	0		<			
ANR	685834	Identifier	i		685763	0					
ANR	685835	Identifier	len		685763	1					
ANR	685836	PostIncDecOperationExpression	i ++	37:29:553:555	685763	2	True				
ANR	685837	Identifier	i		685763	0					
ANR	685838	IncDec	++		685763	1					
ANR	685839	CompoundStatement		33:34:437:437	685763	3					
ANR	685840	IfStatement	"if ( ! address_space_rw ( & bus -> aux_addr_space , address ++ , MEMTXATTRS_UNSPECIFIED , data ++ , 1 , is_write ) )"		685763	0					
ANR	685841	Condition	"! address_space_rw ( & bus -> aux_addr_space , address ++ , MEMTXATTRS_UNSPECIFIED , data ++ , 1 , is_write )"	39:16:577:741	685763	0	True				
ANR	685842	UnaryOperationExpression	"! address_space_rw ( & bus -> aux_addr_space , address ++ , MEMTXATTRS_UNSPECIFIED , data ++ , 1 , is_write )"		685763	0					
ANR	685843	UnaryOperator	!		685763	0					
ANR	685844	CallExpression	"address_space_rw ( & bus -> aux_addr_space , address ++ , MEMTXATTRS_UNSPECIFIED , data ++ , 1 , is_write )"		685763	1					
ANR	685845	Callee	address_space_rw		685763	0					
ANR	685846	Identifier	address_space_rw		685763	0					
ANR	685847	ArgumentList	& bus -> aux_addr_space		685763	1					
ANR	685848	Argument	& bus -> aux_addr_space		685763	0					
ANR	685849	UnaryOperationExpression	& bus -> aux_addr_space		685763	0					
ANR	685850	UnaryOperator	&		685763	0					
ANR	685851	PtrMemberAccess	bus -> aux_addr_space		685763	1					
ANR	685852	Identifier	bus		685763	0					
ANR	685853	Identifier	aux_addr_space		685763	1					
ANR	685854	Argument	address ++		685763	1					
ANR	685855	PostIncDecOperationExpression	address ++		685763	0					
ANR	685856	Identifier	address		685763	0					
ANR	685857	IncDec	++		685763	1					
ANR	685858	Argument	MEMTXATTRS_UNSPECIFIED		685763	2					
ANR	685859	Identifier	MEMTXATTRS_UNSPECIFIED		685763	0					
ANR	685860	Argument	data ++		685763	3					
ANR	685861	PostIncDecOperationExpression	data ++		685763	0					
ANR	685862	Identifier	data		685763	0					
ANR	685863	IncDec	++		685763	1					
ANR	685864	Argument	1		685763	4					
ANR	685865	PrimaryExpression	1		685763	0					
ANR	685866	Argument	is_write		685763	5					
ANR	685867	Identifier	is_write		685763	0					
ANR	685868	CompoundStatement		39:45:623:623	685763	1					
ANR	685869	ExpressionStatement	ret = AUX_I2C_ACK	45:16:763:780	685763	0	True				
ANR	685870	AssignmentExpression	ret = AUX_I2C_ACK		685763	0		=			
ANR	685871	Identifier	ret		685763	0					
ANR	685872	Identifier	AUX_I2C_ACK		685763	1					
ANR	685873	ElseStatement	else		685763	0					
ANR	685874	CompoundStatement		43:19:681:681	685763	0					
ANR	685875	ExpressionStatement	ret = AUX_NACK	49:16:821:835	685763	0	True				
ANR	685876	AssignmentExpression	ret = AUX_NACK		685763	0		=			
ANR	685877	Identifier	ret		685763	0					
ANR	685878	Identifier	AUX_NACK		685763	1					
ANR	685879	BreakStatement	break ;	51:16:854:859	685763	1	True				
ANR	685880	BreakStatement	break ;	57:8:896:901	685763	4	True				
ANR	685881	Label	case READ_I2C :	65:4:960:973	685763	5	True				
ANR	685882	Identifier	READ_I2C		685763	0					
ANR	685883	Label	case WRITE_I2C :	67:4:980:994	685763	6	True				
ANR	685884	Identifier	WRITE_I2C		685763	0					
ANR	685885	ExpressionStatement	is_write = cmd == READ_I2C ? false : true	69:8:1005:1046	685763	7	True				
ANR	685886	AssignmentExpression	is_write = cmd == READ_I2C ? false : true		685763	0		=			
ANR	685887	Identifier	is_write		685763	0					
ANR	685888	ConditionalExpression	cmd == READ_I2C ? false : true		685763	1					
ANR	685889	Condition	cmd == READ_I2C		685763	0					
ANR	685890	EqualityExpression	cmd == READ_I2C		685763	0		==			
ANR	685891	Identifier	cmd		685763	0					
ANR	685892	Identifier	READ_I2C		685763	1					
ANR	685893	Identifier	false		685763	1					
ANR	685894	Identifier	true		685763	2					
ANR	685895	IfStatement	if ( i2c_bus_busy ( i2c_bus ) )		685763	8					
ANR	685896	Condition	i2c_bus_busy ( i2c_bus )	71:12:1061:1081	685763	0	True				
ANR	685897	CallExpression	i2c_bus_busy ( i2c_bus )		685763	0					
ANR	685898	Callee	i2c_bus_busy		685763	0					
ANR	685899	Identifier	i2c_bus_busy		685763	0					
ANR	685900	ArgumentList	i2c_bus		685763	1					
ANR	685901	Argument	i2c_bus		685763	0					
ANR	685902	Identifier	i2c_bus		685763	0					
ANR	685903	CompoundStatement		67:35:963:963	685763	1					
ANR	685904	ExpressionStatement	i2c_end_transfer ( i2c_bus )	73:12:1099:1124	685763	0	True				
ANR	685905	CallExpression	i2c_end_transfer ( i2c_bus )		685763	0					
ANR	685906	Callee	i2c_end_transfer		685763	0					
ANR	685907	Identifier	i2c_end_transfer		685763	0					
ANR	685908	ArgumentList	i2c_bus		685763	1					
ANR	685909	Argument	i2c_bus		685763	0					
ANR	685910	Identifier	i2c_bus		685763	0					
ANR	685911	IfStatement	"if ( i2c_start_transfer ( i2c_bus , address , is_write ) )"		685763	9					
ANR	685912	Condition	"i2c_start_transfer ( i2c_bus , address , is_write )"	79:12:1152:1197	685763	0	True				
ANR	685913	CallExpression	"i2c_start_transfer ( i2c_bus , address , is_write )"		685763	0					
ANR	685914	Callee	i2c_start_transfer		685763	0					
ANR	685915	Identifier	i2c_start_transfer		685763	0					
ANR	685916	ArgumentList	i2c_bus		685763	1					
ANR	685917	Argument	i2c_bus		685763	0					
ANR	685918	Identifier	i2c_bus		685763	0					
ANR	685919	Argument	address		685763	1					
ANR	685920	Identifier	address		685763	0					
ANR	685921	Argument	is_write		685763	2					
ANR	685922	Identifier	is_write		685763	0					
ANR	685923	CompoundStatement		75:60:1079:1079	685763	1					
ANR	685924	ExpressionStatement	ret = AUX_I2C_NACK	81:12:1215:1233	685763	0	True				
ANR	685925	AssignmentExpression	ret = AUX_I2C_NACK		685763	0		=			
ANR	685926	Identifier	ret		685763	0					
ANR	685927	Identifier	AUX_I2C_NACK		685763	1					
ANR	685928	BreakStatement	break ;	83:12:1248:1253	685763	1	True				
ANR	685929	ExpressionStatement	ret = AUX_I2C_ACK	89:8:1277:1294	685763	10	True				
ANR	685930	AssignmentExpression	ret = AUX_I2C_ACK		685763	0		=			
ANR	685931	Identifier	ret		685763	0					
ANR	685932	Identifier	AUX_I2C_ACK		685763	1					
ANR	685933	WhileStatement	while ( len > 0 )		685763	11					
ANR	685934	Condition	len > 0	91:15:1312:1318	685763	0	True				
ANR	685935	RelationalExpression	len > 0		685763	0		>			
ANR	685936	Identifier	len		685763	0					
ANR	685937	PrimaryExpression	0		685763	1					
ANR	685938	CompoundStatement		87:24:1200:1200	685763	1					
ANR	685939	IfStatement	"if ( i2c_send_recv ( i2c_bus , data ++ , is_write ) < 0 )"		685763	0					
ANR	685940	Condition	"i2c_send_recv ( i2c_bus , data ++ , is_write ) < 0"	93:16:1340:1383	685763	0	True				
ANR	685941	RelationalExpression	"i2c_send_recv ( i2c_bus , data ++ , is_write ) < 0"		685763	0		<			
ANR	685942	CallExpression	"i2c_send_recv ( i2c_bus , data ++ , is_write )"		685763	0					
ANR	685943	Callee	i2c_send_recv		685763	0					
ANR	685944	Identifier	i2c_send_recv		685763	0					
ANR	685945	ArgumentList	i2c_bus		685763	1					
ANR	685946	Argument	i2c_bus		685763	0					
ANR	685947	Identifier	i2c_bus		685763	0					
ANR	685948	Argument	data ++		685763	1					
ANR	685949	PostIncDecOperationExpression	data ++		685763	0					
ANR	685950	Identifier	data		685763	0					
ANR	685951	IncDec	++		685763	1					
ANR	685952	Argument	is_write		685763	2					
ANR	685953	Identifier	is_write		685763	0					
ANR	685954	PrimaryExpression	0		685763	1					
ANR	685955	CompoundStatement		89:62:1265:1265	685763	1					
ANR	685956	ExpressionStatement	ret = AUX_I2C_NACK	95:16:1405:1423	685763	0	True				
ANR	685957	AssignmentExpression	ret = AUX_I2C_NACK		685763	0		=			
ANR	685958	Identifier	ret		685763	0					
ANR	685959	Identifier	AUX_I2C_NACK		685763	1					
ANR	685960	BreakStatement	break ;	97:16:1442:1447	685763	1	True				
ANR	685961	ExpressionStatement	len --	101:12:1477:1482	685763	1	True				
ANR	685962	PostIncDecOperationExpression	len --		685763	0					
ANR	685963	Identifier	len		685763	0					
ANR	685964	IncDec	--		685763	1					
ANR	685965	ExpressionStatement	i2c_end_transfer ( i2c_bus )	105:8:1504:1529	685763	12	True				
ANR	685966	CallExpression	i2c_end_transfer ( i2c_bus )		685763	0					
ANR	685967	Callee	i2c_end_transfer		685763	0					
ANR	685968	Identifier	i2c_end_transfer		685763	0					
ANR	685969	ArgumentList	i2c_bus		685763	1					
ANR	685970	Argument	i2c_bus		685763	0					
ANR	685971	Identifier	i2c_bus		685763	0					
ANR	685972	BreakStatement	break ;	107:8:1540:1545	685763	13	True				
ANR	685973	Label	case WRITE_I2C_MOT :	125:4:1765:1783	685763	14	True				
ANR	685974	Identifier	WRITE_I2C_MOT		685763	0					
ANR	685975	Label	case READ_I2C_MOT :	127:4:1790:1807	685763	15	True				
ANR	685976	Identifier	READ_I2C_MOT		685763	0					
ANR	685977	ExpressionStatement	is_write = cmd == READ_I2C_MOT ? false : true	129:8:1818:1863	685763	16	True				
ANR	685978	AssignmentExpression	is_write = cmd == READ_I2C_MOT ? false : true		685763	0		=			
ANR	685979	Identifier	is_write		685763	0					
ANR	685980	ConditionalExpression	cmd == READ_I2C_MOT ? false : true		685763	1					
ANR	685981	Condition	cmd == READ_I2C_MOT		685763	0					
ANR	685982	EqualityExpression	cmd == READ_I2C_MOT		685763	0		==			
ANR	685983	Identifier	cmd		685763	0					
ANR	685984	Identifier	READ_I2C_MOT		685763	1					
ANR	685985	Identifier	false		685763	1					
ANR	685986	Identifier	true		685763	2					
ANR	685987	ExpressionStatement	ret = AUX_I2C_NACK	131:8:1874:1892	685763	17	True				
ANR	685988	AssignmentExpression	ret = AUX_I2C_NACK		685763	0		=			
ANR	685989	Identifier	ret		685763	0					
ANR	685990	Identifier	AUX_I2C_NACK		685763	1					
ANR	685991	IfStatement	if ( ! i2c_bus_busy ( i2c_bus ) )		685763	18					
ANR	685992	Condition	! i2c_bus_busy ( i2c_bus )	133:12:1907:1928	685763	0	True				
ANR	685993	UnaryOperationExpression	! i2c_bus_busy ( i2c_bus )		685763	0					
ANR	685994	UnaryOperator	!		685763	0					
ANR	685995	CallExpression	i2c_bus_busy ( i2c_bus )		685763	1					
ANR	685996	Callee	i2c_bus_busy		685763	0					
ANR	685997	Identifier	i2c_bus_busy		685763	0					
ANR	685998	ArgumentList	i2c_bus		685763	1					
ANR	685999	Argument	i2c_bus		685763	0					
ANR	686000	Identifier	i2c_bus		685763	0					
ANR	686001	CompoundStatement		129:36:1810:1810	685763	1					
ANR	686002	IfStatement	"if ( i2c_start_transfer ( i2c_bus , address , is_write ) )"		685763	0					
ANR	686003	Condition	"i2c_start_transfer ( i2c_bus , address , is_write )"	141:16:2025:2070	685763	0	True				
ANR	686004	CallExpression	"i2c_start_transfer ( i2c_bus , address , is_write )"		685763	0					
ANR	686005	Callee	i2c_start_transfer		685763	0					
ANR	686006	Identifier	i2c_start_transfer		685763	0					
ANR	686007	ArgumentList	i2c_bus		685763	1					
ANR	686008	Argument	i2c_bus		685763	0					
ANR	686009	Identifier	i2c_bus		685763	0					
ANR	686010	Argument	address		685763	1					
ANR	686011	Identifier	address		685763	0					
ANR	686012	Argument	is_write		685763	2					
ANR	686013	Identifier	is_write		685763	0					
ANR	686014	CompoundStatement		137:64:1952:1952	685763	1					
ANR	686015	BreakStatement	break ;	143:16:2092:2097	685763	0	True				
ANR	686016	ElseStatement	else		685763	0					
ANR	686017	IfStatement	if ( ( address != bus -> last_i2c_address ) || ( bus -> last_transaction != cmd ) )		685763	0					
ANR	686018	Condition	( address != bus -> last_i2c_address ) || ( bus -> last_transaction != cmd )	147:19:2134:2221	685763	0	True				
ANR	686019	OrExpression	( address != bus -> last_i2c_address ) || ( bus -> last_transaction != cmd )		685763	0		||			
ANR	686020	EqualityExpression	address != bus -> last_i2c_address		685763	0		!=			
ANR	686021	Identifier	address		685763	0					
ANR	686022	PtrMemberAccess	bus -> last_i2c_address		685763	1					
ANR	686023	Identifier	bus		685763	0					
ANR	686024	Identifier	last_i2c_address		685763	1					
ANR	686025	EqualityExpression	bus -> last_transaction != cmd		685763	1		!=			
ANR	686026	PtrMemberAccess	bus -> last_transaction		685763	0					
ANR	686027	Identifier	bus		685763	0					
ANR	686028	Identifier	last_transaction		685763	1					
ANR	686029	Identifier	cmd		685763	1					
ANR	686030	CompoundStatement		145:51:2103:2103	685763	1					
ANR	686031	ExpressionStatement	i2c_end_transfer ( i2c_bus )	157:12:2333:2358	685763	0	True				
ANR	686032	CallExpression	i2c_end_transfer ( i2c_bus )		685763	0					
ANR	686033	Callee	i2c_end_transfer		685763	0					
ANR	686034	Identifier	i2c_end_transfer		685763	0					
ANR	686035	ArgumentList	i2c_bus		685763	1					
ANR	686036	Argument	i2c_bus		685763	0					
ANR	686037	Identifier	i2c_bus		685763	0					
ANR	686038	IfStatement	"if ( i2c_start_transfer ( i2c_bus , address , is_write ) )"		685763	1					
ANR	686039	Condition	"i2c_start_transfer ( i2c_bus , address , is_write )"	159:16:2377:2422	685763	0	True				
ANR	686040	CallExpression	"i2c_start_transfer ( i2c_bus , address , is_write )"		685763	0					
ANR	686041	Callee	i2c_start_transfer		685763	0					
ANR	686042	Identifier	i2c_start_transfer		685763	0					
ANR	686043	ArgumentList	i2c_bus		685763	1					
ANR	686044	Argument	i2c_bus		685763	0					
ANR	686045	Identifier	i2c_bus		685763	0					
ANR	686046	Argument	address		685763	1					
ANR	686047	Identifier	address		685763	0					
ANR	686048	Argument	is_write		685763	2					
ANR	686049	Identifier	is_write		685763	0					
ANR	686050	CompoundStatement		155:64:2304:2304	685763	1					
ANR	686051	BreakStatement	break ;	161:16:2444:2449	685763	0	True				
ANR	686052	ExpressionStatement	bus -> last_transaction = cmd	169:8:2488:2515	685763	19	True				
ANR	686053	AssignmentExpression	bus -> last_transaction = cmd		685763	0		=			
ANR	686054	PtrMemberAccess	bus -> last_transaction		685763	0					
ANR	686055	Identifier	bus		685763	0					
ANR	686056	Identifier	last_transaction		685763	1					
ANR	686057	Identifier	cmd		685763	1					
ANR	686058	ExpressionStatement	bus -> last_i2c_address = address	171:8:2526:2557	685763	20	True				
ANR	686059	AssignmentExpression	bus -> last_i2c_address = address		685763	0		=			
ANR	686060	PtrMemberAccess	bus -> last_i2c_address		685763	0					
ANR	686061	Identifier	bus		685763	0					
ANR	686062	Identifier	last_i2c_address		685763	1					
ANR	686063	Identifier	address		685763	1					
ANR	686064	WhileStatement	while ( len > 0 )		685763	21					
ANR	686065	Condition	len > 0	173:15:2575:2581	685763	0	True				
ANR	686066	RelationalExpression	len > 0		685763	0		>			
ANR	686067	Identifier	len		685763	0					
ANR	686068	PrimaryExpression	0		685763	1					
ANR	686069	CompoundStatement		169:24:2463:2463	685763	1					
ANR	686070	IfStatement	"if ( i2c_send_recv ( i2c_bus , data ++ , is_write ) < 0 )"		685763	0					
ANR	686071	Condition	"i2c_send_recv ( i2c_bus , data ++ , is_write ) < 0"	175:16:2603:2646	685763	0	True				
ANR	686072	RelationalExpression	"i2c_send_recv ( i2c_bus , data ++ , is_write ) < 0"		685763	0		<			
ANR	686073	CallExpression	"i2c_send_recv ( i2c_bus , data ++ , is_write )"		685763	0					
ANR	686074	Callee	i2c_send_recv		685763	0					
ANR	686075	Identifier	i2c_send_recv		685763	0					
ANR	686076	ArgumentList	i2c_bus		685763	1					
ANR	686077	Argument	i2c_bus		685763	0					
ANR	686078	Identifier	i2c_bus		685763	0					
ANR	686079	Argument	data ++		685763	1					
ANR	686080	PostIncDecOperationExpression	data ++		685763	0					
ANR	686081	Identifier	data		685763	0					
ANR	686082	IncDec	++		685763	1					
ANR	686083	Argument	is_write		685763	2					
ANR	686084	Identifier	is_write		685763	0					
ANR	686085	PrimaryExpression	0		685763	1					
ANR	686086	CompoundStatement		171:62:2528:2528	685763	1					
ANR	686087	ExpressionStatement	i2c_end_transfer ( i2c_bus )	177:16:2668:2693	685763	0	True				
ANR	686088	CallExpression	i2c_end_transfer ( i2c_bus )		685763	0					
ANR	686089	Callee	i2c_end_transfer		685763	0					
ANR	686090	Identifier	i2c_end_transfer		685763	0					
ANR	686091	ArgumentList	i2c_bus		685763	1					
ANR	686092	Argument	i2c_bus		685763	0					
ANR	686093	Identifier	i2c_bus		685763	0					
ANR	686094	BreakStatement	break ;	179:16:2712:2717	685763	1	True				
ANR	686095	ExpressionStatement	len --	183:12:2747:2752	685763	1	True				
ANR	686096	PostIncDecOperationExpression	len --		685763	0					
ANR	686097	Identifier	len		685763	0					
ANR	686098	IncDec	--		685763	1					
ANR	686099	IfStatement	if ( len == 0 )		685763	22					
ANR	686100	Condition	len == 0	187:12:2778:2785	685763	0	True				
ANR	686101	EqualityExpression	len == 0		685763	0		==			
ANR	686102	Identifier	len		685763	0					
ANR	686103	PrimaryExpression	0		685763	1					
ANR	686104	CompoundStatement		183:22:2667:2667	685763	1					
ANR	686105	ExpressionStatement	ret = AUX_I2C_ACK	189:12:2803:2820	685763	0	True				
ANR	686106	AssignmentExpression	ret = AUX_I2C_ACK		685763	0		=			
ANR	686107	Identifier	ret		685763	0					
ANR	686108	Identifier	AUX_I2C_ACK		685763	1					
ANR	686109	BreakStatement	break ;	193:8:2842:2847	685763	23	True				
ANR	686110	Label	default :	195:4:2854:2861	685763	24	True				
ANR	686111	Identifier	default		685763	0					
ANR	686112	ExpressionStatement	"DPRINTF ( ""Not implemented!\\n"" )"	197:8:2872:2901	685763	25	True				
ANR	686113	CallExpression	"DPRINTF ( ""Not implemented!\\n"" )"		685763	0					
ANR	686114	Callee	DPRINTF		685763	0					
ANR	686115	Identifier	DPRINTF		685763	0					
ANR	686116	ArgumentList	"""Not implemented!\\n"""		685763	1					
ANR	686117	Argument	"""Not implemented!\\n"""		685763	0					
ANR	686118	PrimaryExpression	"""Not implemented!\\n"""		685763	0					
ANR	686119	ReturnStatement	return AUX_NACK ;	199:8:2912:2927	685763	26	True				
ANR	686120	Identifier	AUX_NACK		685763	0					
ANR	686121	ExpressionStatement	"DPRINTF ( ""reply: %u\\n"" , ret )"	205:4:2943:2970	685763	18	True				
ANR	686122	CallExpression	"DPRINTF ( ""reply: %u\\n"" , ret )"		685763	0					
ANR	686123	Callee	DPRINTF		685763	0					
ANR	686124	Identifier	DPRINTF		685763	0					
ANR	686125	ArgumentList	"""reply: %u\\n"""		685763	1					
ANR	686126	Argument	"""reply: %u\\n"""		685763	0					
ANR	686127	PrimaryExpression	"""reply: %u\\n"""		685763	0					
ANR	686128	Argument	ret		685763	1					
ANR	686129	Identifier	ret		685763	0					
ANR	686130	ReturnStatement	return ret ;	207:4:2977:2987	685763	19	True				
ANR	686131	Identifier	ret		685763	0					
ANR	686132	ReturnType	AUXReply		685763	1					
ANR	686133	Identifier	aux_request		685763	2					
ANR	686134	ParameterList	"AUXBus * bus , AUXCommand cmd , uint32_t address , uint8_t len , uint8_t * data"		685763	3					
ANR	686135	Parameter	AUXBus * bus	1:21:21:31	685763	0	True				
ANR	686136	ParameterType	AUXBus *		685763	0					
ANR	686137	Identifier	bus		685763	1					
ANR	686138	Parameter	AUXCommand cmd	1:34:34:47	685763	1	True				
ANR	686139	ParameterType	AUXCommand		685763	0					
ANR	686140	Identifier	cmd		685763	1					
ANR	686141	Parameter	uint32_t address	1:50:50:65	685763	2	True				
ANR	686142	ParameterType	uint32_t		685763	0					
ANR	686143	Identifier	address		685763	1					
ANR	686144	Parameter	uint8_t len	3:22:91:101	685763	3	True				
ANR	686145	ParameterType	uint8_t		685763	0					
ANR	686146	Identifier	len		685763	1					
ANR	686147	Parameter	uint8_t * data	3:35:104:116	685763	4	True				
ANR	686148	ParameterType	uint8_t *		685763	0					
ANR	686149	Identifier	data		685763	1					
ANR	686150	CFGEntryNode	ENTRY		685763		True				
ANR	686151	CFGExitNode	EXIT		685763		True				
ANR	686152	Symbol	bus		685763						
ANR	686153	Symbol	MEMTXATTRS_UNSPECIFIED		685763						
ANR	686154	Symbol	data		685763						
ANR	686155	Symbol	len		685763						
ANR	686156	Symbol	AUX_I2C_NACK		685763						
ANR	686157	Symbol	* bus		685763						
ANR	686158	Symbol	ret		685763						
ANR	686159	Symbol	i2c_send_recv		685763						
ANR	686160	Symbol	address		685763						
ANR	686161	Symbol	READ_I2C_MOT		685763						
ANR	686162	Symbol	false		685763						
ANR	686163	Symbol	i2c_start_transfer		685763						
ANR	686164	Symbol	i		685763						
ANR	686165	Symbol	is_write		685763						
ANR	686166	Symbol	bus -> last_transaction		685763						
ANR	686167	Symbol	aux_get_i2c_bus		685763						
ANR	686168	Symbol	AUX_NACK		685763						
ANR	686169	Symbol	READ_I2C		685763						
ANR	686170	Symbol	& bus -> aux_addr_space		685763						
ANR	686171	Symbol	AUX_I2C_ACK		685763						
ANR	686172	Symbol	READ_AUX		685763						
ANR	686173	Symbol	true		685763						
ANR	686174	Symbol	bus -> last_i2c_address		685763						
ANR	686175	Symbol	cmd		685763						
ANR	686176	Symbol	i2c_bus		685763						
ANR	686177	Symbol	i2c_bus_busy		685763						
ANR	686178	Symbol	address_space_rw		685763						
