command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1251777	File	/home/p4ultr4n/workplace/ReVeal/raw_code/check_directory_consistency_0.c								
ANR	1251778	Function	check_directory_consistency	1:0:0:3751							
ANR	1251779	FunctionDef	"check_directory_consistency (BDRVVVFATState * s , int cluster_num , const char * path)"		1251778	0					
ANR	1251780	CompoundStatement		5:0:96:3751	1251778	0					
ANR	1251781	IdentifierDeclStatement	int ret = 0 ;	7:4:103:114	1251778	0	True				
ANR	1251782	IdentifierDecl	ret = 0		1251778	0					
ANR	1251783	IdentifierDeclType	int		1251778	0					
ANR	1251784	Identifier	ret		1251778	1					
ANR	1251785	AssignmentExpression	ret = 0		1251778	2		=			
ANR	1251786	Identifier	ret		1251778	0					
ANR	1251787	PrimaryExpression	0		1251778	1					
ANR	1251788	IdentifierDeclStatement	unsigned char * cluster = g_malloc ( s -> cluster_size ) ;	9:4:121:171	1251778	1	True				
ANR	1251789	IdentifierDecl	* cluster = g_malloc ( s -> cluster_size )		1251778	0					
ANR	1251790	IdentifierDeclType	unsigned char *		1251778	0					
ANR	1251791	Identifier	cluster		1251778	1					
ANR	1251792	AssignmentExpression	* cluster = g_malloc ( s -> cluster_size )		1251778	2		=			
ANR	1251793	Identifier	cluster		1251778	0					
ANR	1251794	CallExpression	g_malloc ( s -> cluster_size )		1251778	1					
ANR	1251795	Callee	g_malloc		1251778	0					
ANR	1251796	Identifier	g_malloc		1251778	0					
ANR	1251797	ArgumentList	s -> cluster_size		1251778	1					
ANR	1251798	Argument	s -> cluster_size		1251778	0					
ANR	1251799	PtrMemberAccess	s -> cluster_size		1251778	0					
ANR	1251800	Identifier	s		1251778	0					
ANR	1251801	Identifier	cluster_size		1251778	1					
ANR	1251802	IdentifierDeclStatement	direntry_t * direntries = ( direntry_t * ) cluster ;	11:4:178:223	1251778	2	True				
ANR	1251803	IdentifierDecl	* direntries = ( direntry_t * ) cluster		1251778	0					
ANR	1251804	IdentifierDeclType	direntry_t *		1251778	0					
ANR	1251805	Identifier	direntries		1251778	1					
ANR	1251806	AssignmentExpression	* direntries = ( direntry_t * ) cluster		1251778	2		=			
ANR	1251807	Identifier	direntries		1251778	0					
ANR	1251808	CastExpression	( direntry_t * ) cluster		1251778	1					
ANR	1251809	CastTarget	direntry_t *		1251778	0					
ANR	1251810	Identifier	cluster		1251778	1					
ANR	1251811	IdentifierDeclStatement	"mapping_t * mapping = find_mapping_for_cluster ( s , cluster_num ) ;"	13:4:230:291	1251778	3	True				
ANR	1251812	IdentifierDecl	"* mapping = find_mapping_for_cluster ( s , cluster_num )"		1251778	0					
ANR	1251813	IdentifierDeclType	mapping_t *		1251778	0					
ANR	1251814	Identifier	mapping		1251778	1					
ANR	1251815	AssignmentExpression	"* mapping = find_mapping_for_cluster ( s , cluster_num )"		1251778	2		=			
ANR	1251816	Identifier	mapping		1251778	0					
ANR	1251817	CallExpression	"find_mapping_for_cluster ( s , cluster_num )"		1251778	1					
ANR	1251818	Callee	find_mapping_for_cluster		1251778	0					
ANR	1251819	Identifier	find_mapping_for_cluster		1251778	0					
ANR	1251820	ArgumentList	s		1251778	1					
ANR	1251821	Argument	s		1251778	0					
ANR	1251822	Identifier	s		1251778	0					
ANR	1251823	Argument	cluster_num		1251778	1					
ANR	1251824	Identifier	cluster_num		1251778	0					
ANR	1251825	IdentifierDeclStatement	long_file_name lfn ;	17:4:300:318	1251778	4	True				
ANR	1251826	IdentifierDecl	lfn		1251778	0					
ANR	1251827	IdentifierDeclType	long_file_name		1251778	0					
ANR	1251828	Identifier	lfn		1251778	1					
ANR	1251829	IdentifierDeclStatement	int path_len = strlen ( path ) ;	19:4:325:352	1251778	5	True				
ANR	1251830	IdentifierDecl	path_len = strlen ( path )		1251778	0					
ANR	1251831	IdentifierDeclType	int		1251778	0					
ANR	1251832	Identifier	path_len		1251778	1					
ANR	1251833	AssignmentExpression	path_len = strlen ( path )		1251778	2		=			
ANR	1251834	Identifier	path_len		1251778	0					
ANR	1251835	CallExpression	strlen ( path )		1251778	1					
ANR	1251836	Callee	strlen		1251778	0					
ANR	1251837	Identifier	strlen		1251778	0					
ANR	1251838	ArgumentList	path		1251778	1					
ANR	1251839	Argument	path		1251778	0					
ANR	1251840	Identifier	path		1251778	0					
ANR	1251841	IdentifierDeclStatement	char path2 [ PATH_MAX ] ;	21:4:359:379	1251778	6	True				
ANR	1251842	IdentifierDecl	path2 [ PATH_MAX ]		1251778	0					
ANR	1251843	IdentifierDeclType	char [ PATH_MAX ]		1251778	0					
ANR	1251844	Identifier	path2		1251778	1					
ANR	1251845	Identifier	PATH_MAX		1251778	2					
ANR	1251846	ExpressionStatement	assert ( path_len < PATH_MAX )	25:4:388:415	1251778	7	True				
ANR	1251847	CallExpression	assert ( path_len < PATH_MAX )		1251778	0					
ANR	1251848	Callee	assert		1251778	0					
ANR	1251849	Identifier	assert		1251778	0					
ANR	1251850	ArgumentList	path_len < PATH_MAX		1251778	1					
ANR	1251851	Argument	path_len < PATH_MAX		1251778	0					
ANR	1251852	RelationalExpression	path_len < PATH_MAX		1251778	0		<			
ANR	1251853	Identifier	path_len		1251778	0					
ANR	1251854	Identifier	PATH_MAX		1251778	1					
ANR	1251855	ExpressionStatement	"pstrcpy ( path2 , sizeof ( path2 ) , path )"	27:4:451:486	1251778	8	True				
ANR	1251856	CallExpression	"pstrcpy ( path2 , sizeof ( path2 ) , path )"		1251778	0					
ANR	1251857	Callee	pstrcpy		1251778	0					
ANR	1251858	Identifier	pstrcpy		1251778	0					
ANR	1251859	ArgumentList	path2		1251778	1					
ANR	1251860	Argument	path2		1251778	0					
ANR	1251861	Identifier	path2		1251778	0					
ANR	1251862	Argument	sizeof ( path2 )		1251778	1					
ANR	1251863	SizeofExpression	sizeof ( path2 )		1251778	0					
ANR	1251864	Sizeof	sizeof		1251778	0					
ANR	1251865	SizeofOperand	path2		1251778	1					
ANR	1251866	Argument	path		1251778	2					
ANR	1251867	Identifier	path		1251778	0					
ANR	1251868	ExpressionStatement	path2 [ path_len ] = '/'	29:4:493:514	1251778	9	True				
ANR	1251869	AssignmentExpression	path2 [ path_len ] = '/'		1251778	0		=			
ANR	1251870	ArrayIndexing	path2 [ path_len ]		1251778	0					
ANR	1251871	Identifier	path2		1251778	0					
ANR	1251872	Identifier	path_len		1251778	1					
ANR	1251873	PrimaryExpression	'/'		1251778	1					
ANR	1251874	ExpressionStatement	path2 [ path_len + 1 ] = '\\0'	31:4:521:547	1251778	10	True				
ANR	1251875	AssignmentExpression	path2 [ path_len + 1 ] = '\\0'		1251778	0		=			
ANR	1251876	ArrayIndexing	path2 [ path_len + 1 ]		1251778	0					
ANR	1251877	Identifier	path2		1251778	0					
ANR	1251878	AdditiveExpression	path_len + 1		1251778	1		+			
ANR	1251879	Identifier	path_len		1251778	0					
ANR	1251880	PrimaryExpression	1		1251778	1					
ANR	1251881	PrimaryExpression	'\\0'		1251778	1					
ANR	1251882	IfStatement	if ( mapping )		1251778	11					
ANR	1251883	Condition	mapping	35:8:560:566	1251778	0	True				
ANR	1251884	Identifier	mapping		1251778	0					
ANR	1251885	CompoundStatement		35:1:530:572	1251778	1					
ANR	1251886	IdentifierDeclStatement	const char * basename = get_basename ( mapping -> path ) ;	37:1:573:623	1251778	0	True				
ANR	1251887	IdentifierDecl	* basename = get_basename ( mapping -> path )		1251778	0					
ANR	1251888	IdentifierDeclType	const char *		1251778	0					
ANR	1251889	Identifier	basename		1251778	1					
ANR	1251890	AssignmentExpression	* basename = get_basename ( mapping -> path )		1251778	2		=			
ANR	1251891	Identifier	basename		1251778	0					
ANR	1251892	CallExpression	get_basename ( mapping -> path )		1251778	1					
ANR	1251893	Callee	get_basename		1251778	0					
ANR	1251894	Identifier	get_basename		1251778	0					
ANR	1251895	ArgumentList	mapping -> path		1251778	1					
ANR	1251896	Argument	mapping -> path		1251778	0					
ANR	1251897	PtrMemberAccess	mapping -> path		1251778	0					
ANR	1251898	Identifier	mapping		1251778	0					
ANR	1251899	Identifier	path		1251778	1					
ANR	1251900	IdentifierDeclStatement	const char * basename2 = get_basename ( path ) ;	39:1:627:669	1251778	1	True				
ANR	1251901	IdentifierDecl	* basename2 = get_basename ( path )		1251778	0					
ANR	1251902	IdentifierDeclType	const char *		1251778	0					
ANR	1251903	Identifier	basename2		1251778	1					
ANR	1251904	AssignmentExpression	* basename2 = get_basename ( path )		1251778	2		=			
ANR	1251905	Identifier	basename2		1251778	0					
ANR	1251906	CallExpression	get_basename ( path )		1251778	1					
ANR	1251907	Callee	get_basename		1251778	0					
ANR	1251908	Identifier	get_basename		1251778	0					
ANR	1251909	ArgumentList	path		1251778	1					
ANR	1251910	Argument	path		1251778	0					
ANR	1251911	Identifier	path		1251778	0					
ANR	1251912	ExpressionStatement	assert ( mapping -> mode & MODE_DIRECTORY )	43:1:675:713	1251778	2	True				
ANR	1251913	CallExpression	assert ( mapping -> mode & MODE_DIRECTORY )		1251778	0					
ANR	1251914	Callee	assert		1251778	0					
ANR	1251915	Identifier	assert		1251778	0					
ANR	1251916	ArgumentList	mapping -> mode & MODE_DIRECTORY		1251778	1					
ANR	1251917	Argument	mapping -> mode & MODE_DIRECTORY		1251778	0					
ANR	1251918	BitAndExpression	mapping -> mode & MODE_DIRECTORY		1251778	0		&			
ANR	1251919	PtrMemberAccess	mapping -> mode		1251778	0					
ANR	1251920	Identifier	mapping		1251778	0					
ANR	1251921	Identifier	mode		1251778	1					
ANR	1251922	Identifier	MODE_DIRECTORY		1251778	1					
ANR	1251923	ExpressionStatement	assert ( mapping -> mode & MODE_DELETED )	47:1:719:755	1251778	3	True				
ANR	1251924	CallExpression	assert ( mapping -> mode & MODE_DELETED )		1251778	0					
ANR	1251925	Callee	assert		1251778	0					
ANR	1251926	Identifier	assert		1251778	0					
ANR	1251927	ArgumentList	mapping -> mode & MODE_DELETED		1251778	1					
ANR	1251928	Argument	mapping -> mode & MODE_DELETED		1251778	0					
ANR	1251929	BitAndExpression	mapping -> mode & MODE_DELETED		1251778	0		&			
ANR	1251930	PtrMemberAccess	mapping -> mode		1251778	0					
ANR	1251931	Identifier	mapping		1251778	0					
ANR	1251932	Identifier	mode		1251778	1					
ANR	1251933	Identifier	MODE_DELETED		1251778	1					
ANR	1251934	ExpressionStatement	mapping -> mode &= ~MODE_DELETED	49:1:759:789	1251778	4	True				
ANR	1251935	AssignmentExpression	mapping -> mode &= ~MODE_DELETED		1251778	0		&=			
ANR	1251936	PtrMemberAccess	mapping -> mode		1251778	0					
ANR	1251937	Identifier	mapping		1251778	0					
ANR	1251938	Identifier	mode		1251778	1					
ANR	1251939	Identifier	~MODE_DELETED		1251778	1					
ANR	1251940	IfStatement	"if ( strcmp ( basename , basename2 ) )"		1251778	5					
ANR	1251941	Condition	"strcmp ( basename , basename2 )"	53:5:799:825	1251778	0	True				
ANR	1251942	CallExpression	"strcmp ( basename , basename2 )"		1251778	0					
ANR	1251943	Callee	strcmp		1251778	0					
ANR	1251944	Identifier	strcmp		1251778	0					
ANR	1251945	ArgumentList	basename		1251778	1					
ANR	1251946	Argument	basename		1251778	0					
ANR	1251947	Identifier	basename		1251778	0					
ANR	1251948	Argument	basename2		1251778	1					
ANR	1251949	Identifier	basename2		1251778	0					
ANR	1251950	ExpressionStatement	"schedule_rename ( s , cluster_num , g_strdup ( path ) )"	55:5:834:881	1251778	1	True				
ANR	1251951	CallExpression	"schedule_rename ( s , cluster_num , g_strdup ( path ) )"		1251778	0					
ANR	1251952	Callee	schedule_rename		1251778	0					
ANR	1251953	Identifier	schedule_rename		1251778	0					
ANR	1251954	ArgumentList	s		1251778	1					
ANR	1251955	Argument	s		1251778	0					
ANR	1251956	Identifier	s		1251778	0					
ANR	1251957	Argument	cluster_num		1251778	1					
ANR	1251958	Identifier	cluster_num		1251778	0					
ANR	1251959	Argument	g_strdup ( path )		1251778	2					
ANR	1251960	CallExpression	g_strdup ( path )		1251778	0					
ANR	1251961	Callee	g_strdup		1251778	0					
ANR	1251962	Identifier	g_strdup		1251778	0					
ANR	1251963	ArgumentList	path		1251778	1					
ANR	1251964	Argument	path		1251778	0					
ANR	1251965	Identifier	path		1251778	0					
ANR	1251966	ElseStatement	else		1251778	0					
ANR	1251967	ExpressionStatement	"schedule_mkdir ( s , cluster_num , g_strdup ( path ) )"	61:1:919:965	1251778	0	True				
ANR	1251968	CallExpression	"schedule_mkdir ( s , cluster_num , g_strdup ( path ) )"		1251778	0					
ANR	1251969	Callee	schedule_mkdir		1251778	0					
ANR	1251970	Identifier	schedule_mkdir		1251778	0					
ANR	1251971	ArgumentList	s		1251778	1					
ANR	1251972	Argument	s		1251778	0					
ANR	1251973	Identifier	s		1251778	0					
ANR	1251974	Argument	cluster_num		1251778	1					
ANR	1251975	Identifier	cluster_num		1251778	0					
ANR	1251976	Argument	g_strdup ( path )		1251778	2					
ANR	1251977	CallExpression	g_strdup ( path )		1251778	0					
ANR	1251978	Callee	g_strdup		1251778	0					
ANR	1251979	Identifier	g_strdup		1251778	0					
ANR	1251980	ArgumentList	path		1251778	1					
ANR	1251981	Argument	path		1251778	0					
ANR	1251982	Identifier	path		1251778	0					
ANR	1251983	ExpressionStatement	lfn_init ( & lfn )	65:4:974:988	1251778	12	True				
ANR	1251984	CallExpression	lfn_init ( & lfn )		1251778	0					
ANR	1251985	Callee	lfn_init		1251778	0					
ANR	1251986	Identifier	lfn_init		1251778	0					
ANR	1251987	ArgumentList	& lfn		1251778	1					
ANR	1251988	Argument	& lfn		1251778	0					
ANR	1251989	UnaryOperationExpression	& lfn		1251778	0					
ANR	1251990	UnaryOperator	&		1251778	0					
ANR	1251991	Identifier	lfn		1251778	1					
ANR	1251992	DoStatement	do		1251778	13					
ANR	1251993	CompoundStatement		67:1:914:928	1251778	0					
ANR	1251994	IdentifierDeclStatement	int i ;	69:1:1002:1007	1251778	0	True				
ANR	1251995	IdentifierDecl	i		1251778	0					
ANR	1251996	IdentifierDeclType	int		1251778	0					
ANR	1251997	Identifier	i		1251778	1					
ANR	1251998	IdentifierDeclStatement	int subret = 0 ;	71:1:1011:1025	1251778	1	True				
ANR	1251999	IdentifierDecl	subret = 0		1251778	0					
ANR	1252000	IdentifierDeclType	int		1251778	0					
ANR	1252001	Identifier	subret		1251778	1					
ANR	1252002	AssignmentExpression	subret = 0		1251778	2		=			
ANR	1252003	Identifier	subret		1251778	0					
ANR	1252004	PrimaryExpression	0		1251778	1					
ANR	1252005	ExpressionStatement	ret ++	75:1:1031:1036	1251778	2	True				
ANR	1252006	PostIncDecOperationExpression	ret ++		1251778	0					
ANR	1252007	Identifier	ret		1251778	0					
ANR	1252008	IncDec	++		1251778	1					
ANR	1252009	IfStatement	if ( s -> used_clusters [ cluster_num ] & USED_ANY )		1251778	3					
ANR	1252010	Condition	s -> used_clusters [ cluster_num ] & USED_ANY	79:5:1046:1085	1251778	0	True				
ANR	1252011	BitAndExpression	s -> used_clusters [ cluster_num ] & USED_ANY		1251778	0		&			
ANR	1252012	ArrayIndexing	s -> used_clusters [ cluster_num ]		1251778	0					
ANR	1252013	PtrMemberAccess	s -> used_clusters		1251778	0					
ANR	1252014	Identifier	s		1251778	0					
ANR	1252015	Identifier	used_clusters		1251778	1					
ANR	1252016	Identifier	cluster_num		1251778	1					
ANR	1252017	Identifier	USED_ANY		1251778	1					
ANR	1252018	CompoundStatement		75:47:991:991	1251778	1					
ANR	1252019	ExpressionStatement	"fprintf ( stderr , ""cluster %d used more than once\\n"" , ( int ) cluster_num )"	81:5:1096:1165	1251778	0	True				
ANR	1252020	CallExpression	"fprintf ( stderr , ""cluster %d used more than once\\n"" , ( int ) cluster_num )"		1251778	0					
ANR	1252021	Callee	fprintf		1251778	0					
ANR	1252022	Identifier	fprintf		1251778	0					
ANR	1252023	ArgumentList	stderr		1251778	1					
ANR	1252024	Argument	stderr		1251778	0					
ANR	1252025	Identifier	stderr		1251778	0					
ANR	1252026	Argument	"""cluster %d used more than once\\n"""		1251778	1					
ANR	1252027	PrimaryExpression	"""cluster %d used more than once\\n"""		1251778	0					
ANR	1252028	Argument	( int ) cluster_num		1251778	2					
ANR	1252029	CastExpression	( int ) cluster_num		1251778	0					
ANR	1252030	CastTarget	int		1251778	0					
ANR	1252031	Identifier	cluster_num		1251778	1					
ANR	1252032	ReturnStatement	return 0 ;	83:5:1173:1181	1251778	1	True				
ANR	1252033	PrimaryExpression	0		1251778	0					
ANR	1252034	ExpressionStatement	s -> used_clusters [ cluster_num ] = USED_DIRECTORY	87:1:1189:1235	1251778	4	True				
ANR	1252035	AssignmentExpression	s -> used_clusters [ cluster_num ] = USED_DIRECTORY		1251778	0		=			
ANR	1252036	ArrayIndexing	s -> used_clusters [ cluster_num ]		1251778	0					
ANR	1252037	PtrMemberAccess	s -> used_clusters		1251778	0					
ANR	1252038	Identifier	s		1251778	0					
ANR	1252039	Identifier	used_clusters		1251778	1					
ANR	1252040	Identifier	cluster_num		1251778	1					
ANR	1252041	Identifier	USED_DIRECTORY		1251778	1					
ANR	1252042	ExpressionStatement	"DLOG ( fprintf ( stderr , ""read cluster %d (sector %d)\\n"" , ( int ) cluster_num , ( int ) cluster2sector ( s , cluster_num ) ) )"	91:0:1240:1349	1251778	5	True				
ANR	1252043	CallExpression	"DLOG ( fprintf ( stderr , ""read cluster %d (sector %d)\\n"" , ( int ) cluster_num , ( int ) cluster2sector ( s , cluster_num ) ) )"		1251778	0					
ANR	1252044	Callee	DLOG		1251778	0					
ANR	1252045	Identifier	DLOG		1251778	0					
ANR	1252046	ArgumentList	"fprintf ( stderr , ""read cluster %d (sector %d)\\n"" , ( int ) cluster_num , ( int ) cluster2sector ( s , cluster_num ) )"		1251778	1					
ANR	1252047	Argument	"fprintf ( stderr , ""read cluster %d (sector %d)\\n"" , ( int ) cluster_num , ( int ) cluster2sector ( s , cluster_num ) )"		1251778	0					
ANR	1252048	CallExpression	"fprintf ( stderr , ""read cluster %d (sector %d)\\n"" , ( int ) cluster_num , ( int ) cluster2sector ( s , cluster_num ) )"		1251778	0					
ANR	1252049	Callee	fprintf		1251778	0					
ANR	1252050	Identifier	fprintf		1251778	0					
ANR	1252051	ArgumentList	stderr		1251778	1					
ANR	1252052	Argument	stderr		1251778	0					
ANR	1252053	Identifier	stderr		1251778	0					
ANR	1252054	Argument	"""read cluster %d (sector %d)\\n"""		1251778	1					
ANR	1252055	PrimaryExpression	"""read cluster %d (sector %d)\\n"""		1251778	0					
ANR	1252056	Argument	( int ) cluster_num		1251778	2					
ANR	1252057	CastExpression	( int ) cluster_num		1251778	0					
ANR	1252058	CastTarget	int		1251778	0					
ANR	1252059	Identifier	cluster_num		1251778	1					
ANR	1252060	Argument	"( int ) cluster2sector ( s , cluster_num )"		1251778	3					
ANR	1252061	CastExpression	"( int ) cluster2sector ( s , cluster_num )"		1251778	0					
ANR	1252062	CastTarget	int		1251778	0					
ANR	1252063	CallExpression	"cluster2sector ( s , cluster_num )"		1251778	1					
ANR	1252064	Callee	cluster2sector		1251778	0					
ANR	1252065	Identifier	cluster2sector		1251778	0					
ANR	1252066	ArgumentList	s		1251778	1					
ANR	1252067	Argument	s		1251778	0					
ANR	1252068	Identifier	s		1251778	0					
ANR	1252069	Argument	cluster_num		1251778	1					
ANR	1252070	Identifier	cluster_num		1251778	0					
ANR	1252071	ExpressionStatement	"subret = vvfat_read ( s -> bs , cluster2sector ( s , cluster_num ) , cluster , s -> sectors_per_cluster )"	93:1:1353:1447	1251778	6	True				
ANR	1252072	AssignmentExpression	"subret = vvfat_read ( s -> bs , cluster2sector ( s , cluster_num ) , cluster , s -> sectors_per_cluster )"		1251778	0		=			
ANR	1252073	Identifier	subret		1251778	0					
ANR	1252074	CallExpression	"vvfat_read ( s -> bs , cluster2sector ( s , cluster_num ) , cluster , s -> sectors_per_cluster )"		1251778	1					
ANR	1252075	Callee	vvfat_read		1251778	0					
ANR	1252076	Identifier	vvfat_read		1251778	0					
ANR	1252077	ArgumentList	s -> bs		1251778	1					
ANR	1252078	Argument	s -> bs		1251778	0					
ANR	1252079	PtrMemberAccess	s -> bs		1251778	0					
ANR	1252080	Identifier	s		1251778	0					
ANR	1252081	Identifier	bs		1251778	1					
ANR	1252082	Argument	"cluster2sector ( s , cluster_num )"		1251778	1					
ANR	1252083	CallExpression	"cluster2sector ( s , cluster_num )"		1251778	0					
ANR	1252084	Callee	cluster2sector		1251778	0					
ANR	1252085	Identifier	cluster2sector		1251778	0					
ANR	1252086	ArgumentList	s		1251778	1					
ANR	1252087	Argument	s		1251778	0					
ANR	1252088	Identifier	s		1251778	0					
ANR	1252089	Argument	cluster_num		1251778	1					
ANR	1252090	Identifier	cluster_num		1251778	0					
ANR	1252091	Argument	cluster		1251778	2					
ANR	1252092	Identifier	cluster		1251778	0					
ANR	1252093	Argument	s -> sectors_per_cluster		1251778	3					
ANR	1252094	PtrMemberAccess	s -> sectors_per_cluster		1251778	0					
ANR	1252095	Identifier	s		1251778	0					
ANR	1252096	Identifier	sectors_per_cluster		1251778	1					
ANR	1252097	IfStatement	if ( subret )		1251778	7					
ANR	1252098	Condition	subret	97:5:1455:1460	1251778	0	True				
ANR	1252099	Identifier	subret		1251778	0					
ANR	1252100	CompoundStatement		93:13:1366:1366	1251778	1					
ANR	1252101	ExpressionStatement	"fprintf ( stderr , ""Error fetching direntries\\n"" )"	99:5:1471:1517	1251778	0	True				
ANR	1252102	CallExpression	"fprintf ( stderr , ""Error fetching direntries\\n"" )"		1251778	0					
ANR	1252103	Callee	fprintf		1251778	0					
ANR	1252104	Identifier	fprintf		1251778	0					
ANR	1252105	ArgumentList	stderr		1251778	1					
ANR	1252106	Argument	stderr		1251778	0					
ANR	1252107	Identifier	stderr		1251778	0					
ANR	1252108	Argument	"""Error fetching direntries\\n"""		1251778	1					
ANR	1252109	PrimaryExpression	"""Error fetching direntries\\n"""		1251778	0					
ANR	1252110	Label	fail :	101:1:1521:1525	1251778	1	True				
ANR	1252111	Identifier	fail		1251778	0					
ANR	1252112	ExpressionStatement	free ( cluster )	103:5:1533:1546	1251778	2	True				
ANR	1252113	CallExpression	free ( cluster )		1251778	0					
ANR	1252114	Callee	free		1251778	0					
ANR	1252115	Identifier	free		1251778	0					
ANR	1252116	ArgumentList	cluster		1251778	1					
ANR	1252117	Argument	cluster		1251778	0					
ANR	1252118	Identifier	cluster		1251778	0					
ANR	1252119	ReturnStatement	return 0 ;	105:5:1554:1562	1251778	3	True				
ANR	1252120	PrimaryExpression	0		1251778	0					
ANR	1252121	ForStatement	for ( i = 0 ; i < 0x10 * s -> sectors_per_cluster ; i ++ )		1251778	8					
ANR	1252122	ForInit	i = 0 ;	111:6:1577:1582	1251778	0	True				
ANR	1252123	AssignmentExpression	i = 0		1251778	0		=			
ANR	1252124	Identifier	i		1251778	0					
ANR	1252125	PrimaryExpression	0		1251778	1					
ANR	1252126	Condition	i < 0x10 * s -> sectors_per_cluster	111:13:1584:1616	1251778	1	True				
ANR	1252127	RelationalExpression	i < 0x10 * s -> sectors_per_cluster		1251778	0		<			
ANR	1252128	Identifier	i		1251778	0					
ANR	1252129	MultiplicativeExpression	0x10 * s -> sectors_per_cluster		1251778	1		*			
ANR	1252130	PrimaryExpression	0x10		1251778	0					
ANR	1252131	PtrMemberAccess	s -> sectors_per_cluster		1251778	1					
ANR	1252132	Identifier	s		1251778	0					
ANR	1252133	Identifier	sectors_per_cluster		1251778	1					
ANR	1252134	PostIncDecOperationExpression	i ++	111:48:1619:1621	1251778	2	True				
ANR	1252135	Identifier	i		1251778	0					
ANR	1252136	IncDec	++		1251778	1					
ANR	1252137	CompoundStatement		109:5:1535:1556	1251778	3					
ANR	1252138	IdentifierDeclStatement	int cluster_count = 0 ;	113:5:1632:1653	1251778	0	True				
ANR	1252139	IdentifierDecl	cluster_count = 0		1251778	0					
ANR	1252140	IdentifierDeclType	int		1251778	0					
ANR	1252141	Identifier	cluster_count		1251778	1					
ANR	1252142	AssignmentExpression	cluster_count = 0		1251778	2		=			
ANR	1252143	Identifier	cluster_count		1251778	0					
ANR	1252144	PrimaryExpression	0		1251778	1					
ANR	1252145	Statement	DLOG	117:0:1658:1661	1251778	1	True				
ANR	1252146	Statement	(	117:4:1662:1662	1251778	2	True				
ANR	1252147	ExpressionStatement	"fprintf ( stderr , ""check direntry %d: \\n"" , i )"	117:5:1663:1706	1251778	3	True				
ANR	1252148	CallExpression	"fprintf ( stderr , ""check direntry %d: \\n"" , i )"		1251778	0					
ANR	1252149	Callee	fprintf		1251778	0					
ANR	1252150	Identifier	fprintf		1251778	0					
ANR	1252151	ArgumentList	stderr		1251778	1					
ANR	1252152	Argument	stderr		1251778	0					
ANR	1252153	Identifier	stderr		1251778	0					
ANR	1252154	Argument	"""check direntry %d: \\n"""		1251778	1					
ANR	1252155	PrimaryExpression	"""check direntry %d: \\n"""		1251778	0					
ANR	1252156	Argument	i		1251778	2					
ANR	1252157	Identifier	i		1251778	0					
ANR	1252158	Statement	print_direntry	117:50:1708:1721	1251778	4	True				
ANR	1252159	Statement	(	117:64:1722:1722	1251778	5	True				
ANR	1252160	Statement	direntries	117:65:1723:1732	1251778	6	True				
ANR	1252161	Statement	+	117:76:1734:1734	1251778	7	True				
ANR	1252162	Statement	i	117:78:1736:1736	1251778	8	True				
ANR	1252163	Statement	)	117:79:1737:1737	1251778	9	True				
ANR	1252164	Statement	)	117:80:1738:1738	1251778	10	True				
ANR	1252165	ExpressionStatement		117:81:1739:1739	1251778	11	True				
ANR	1252166	IfStatement	if ( is_volume_label ( direntries + i ) || is_dot ( direntries + i ) || is_free ( direntries + i ) )		1251778	12					
ANR	1252167	Condition	is_volume_label ( direntries + i ) || is_dot ( direntries + i ) || is_free ( direntries + i )	119:9:1751:1841	1251778	0	True				
ANR	1252168	OrExpression	is_volume_label ( direntries + i ) || is_dot ( direntries + i ) || is_free ( direntries + i )		1251778	0		||			
ANR	1252169	CallExpression	is_volume_label ( direntries + i )		1251778	0					
ANR	1252170	Callee	is_volume_label		1251778	0					
ANR	1252171	Identifier	is_volume_label		1251778	0					
ANR	1252172	ArgumentList	direntries + i		1251778	1					
ANR	1252173	Argument	direntries + i		1251778	0					
ANR	1252174	AdditiveExpression	direntries + i		1251778	0		+			
ANR	1252175	Identifier	direntries		1251778	0					
ANR	1252176	Identifier	i		1251778	1					
ANR	1252177	OrExpression	is_dot ( direntries + i ) || is_free ( direntries + i )		1251778	1		||			
ANR	1252178	CallExpression	is_dot ( direntries + i )		1251778	0					
ANR	1252179	Callee	is_dot		1251778	0					
ANR	1252180	Identifier	is_dot		1251778	0					
ANR	1252181	ArgumentList	direntries + i		1251778	1					
ANR	1252182	Argument	direntries + i		1251778	0					
ANR	1252183	AdditiveExpression	direntries + i		1251778	0		+			
ANR	1252184	Identifier	direntries		1251778	0					
ANR	1252185	Identifier	i		1251778	1					
ANR	1252186	CallExpression	is_free ( direntries + i )		1251778	1					
ANR	1252187	Callee	is_free		1251778	0					
ANR	1252188	Identifier	is_free		1251778	0					
ANR	1252189	ArgumentList	direntries + i		1251778	1					
ANR	1252190	Argument	direntries + i		1251778	0					
ANR	1252191	AdditiveExpression	direntries + i		1251778	0		+			
ANR	1252192	Identifier	direntries		1251778	0					
ANR	1252193	Identifier	i		1251778	1					
ANR	1252194	ContinueStatement	continue ;	123:2:1847:1855	1251778	1	True				
ANR	1252195	ExpressionStatement	"subret = parse_long_name ( & lfn , direntries + i )"	127:5:1865:1911	1251778	13	True				
ANR	1252196	AssignmentExpression	"subret = parse_long_name ( & lfn , direntries + i )"		1251778	0		=			
ANR	1252197	Identifier	subret		1251778	0					
ANR	1252198	CallExpression	"parse_long_name ( & lfn , direntries + i )"		1251778	1					
ANR	1252199	Callee	parse_long_name		1251778	0					
ANR	1252200	Identifier	parse_long_name		1251778	0					
ANR	1252201	ArgumentList	& lfn		1251778	1					
ANR	1252202	Argument	& lfn		1251778	0					
ANR	1252203	UnaryOperationExpression	& lfn		1251778	0					
ANR	1252204	UnaryOperator	&		1251778	0					
ANR	1252205	Identifier	lfn		1251778	1					
ANR	1252206	Argument	direntries + i		1251778	1					
ANR	1252207	AdditiveExpression	direntries + i		1251778	0		+			
ANR	1252208	Identifier	direntries		1251778	0					
ANR	1252209	Identifier	i		1251778	1					
ANR	1252210	IfStatement	if ( subret < 0 )		1251778	14					
ANR	1252211	Condition	subret < 0	129:9:1923:1932	1251778	0	True				
ANR	1252212	RelationalExpression	subret < 0		1251778	0		<			
ANR	1252213	Identifier	subret		1251778	0					
ANR	1252214	PrimaryExpression	0		1251778	1					
ANR	1252215	CompoundStatement		125:21:1838:1838	1251778	1					
ANR	1252216	ExpressionStatement	"fprintf ( stderr , ""Error in long name\\n"" )"	131:2:1940:1979	1251778	0	True				
ANR	1252217	CallExpression	"fprintf ( stderr , ""Error in long name\\n"" )"		1251778	0					
ANR	1252218	Callee	fprintf		1251778	0					
ANR	1252219	Identifier	fprintf		1251778	0					
ANR	1252220	ArgumentList	stderr		1251778	1					
ANR	1252221	Argument	stderr		1251778	0					
ANR	1252222	Identifier	stderr		1251778	0					
ANR	1252223	Argument	"""Error in long name\\n"""		1251778	1					
ANR	1252224	PrimaryExpression	"""Error in long name\\n"""		1251778	0					
ANR	1252225	GotoStatement	goto fail ;	133:2:1984:1993	1251778	1	True				
ANR	1252226	Identifier	fail		1251778	0					
ANR	1252227	IfStatement	if ( subret == 0 || is_free ( direntries + i ) )		1251778	15					
ANR	1252228	Condition	subret == 0 || is_free ( direntries + i )	137:9:2013:2050	1251778	0	True				
ANR	1252229	OrExpression	subret == 0 || is_free ( direntries + i )		1251778	0		||			
ANR	1252230	EqualityExpression	subret == 0		1251778	0		==			
ANR	1252231	Identifier	subret		1251778	0					
ANR	1252232	PrimaryExpression	0		1251778	1					
ANR	1252233	CallExpression	is_free ( direntries + i )		1251778	1					
ANR	1252234	Callee	is_free		1251778	0					
ANR	1252235	Identifier	is_free		1251778	0					
ANR	1252236	ArgumentList	direntries + i		1251778	1					
ANR	1252237	Argument	direntries + i		1251778	0					
ANR	1252238	AdditiveExpression	direntries + i		1251778	0		+			
ANR	1252239	Identifier	direntries		1251778	0					
ANR	1252240	Identifier	i		1251778	1					
ANR	1252241	ContinueStatement	continue ;	139:2:2056:2064	1251778	1	True				
ANR	1252242	IfStatement	if ( fat_chksum ( direntries + i ) != lfn . checksum )		1251778	16					
ANR	1252243	Condition	fat_chksum ( direntries + i ) != lfn . checksum	143:9:2078:2117	1251778	0	True				
ANR	1252244	EqualityExpression	fat_chksum ( direntries + i ) != lfn . checksum		1251778	0		!=			
ANR	1252245	CallExpression	fat_chksum ( direntries + i )		1251778	0					
ANR	1252246	Callee	fat_chksum		1251778	0					
ANR	1252247	Identifier	fat_chksum		1251778	0					
ANR	1252248	ArgumentList	direntries + i		1251778	1					
ANR	1252249	Argument	direntries + i		1251778	0					
ANR	1252250	AdditiveExpression	direntries + i		1251778	0		+			
ANR	1252251	Identifier	direntries		1251778	0					
ANR	1252252	Identifier	i		1251778	1					
ANR	1252253	MemberAccess	lfn . checksum		1251778	1					
ANR	1252254	Identifier	lfn		1251778	0					
ANR	1252255	Identifier	checksum		1251778	1					
ANR	1252256	CompoundStatement		139:51:2023:2023	1251778	1					
ANR	1252257	ExpressionStatement	"subret = parse_short_name ( s , & lfn , direntries + i )"	145:2:2125:2175	1251778	0	True				
ANR	1252258	AssignmentExpression	"subret = parse_short_name ( s , & lfn , direntries + i )"		1251778	0		=			
ANR	1252259	Identifier	subret		1251778	0					
ANR	1252260	CallExpression	"parse_short_name ( s , & lfn , direntries + i )"		1251778	1					
ANR	1252261	Callee	parse_short_name		1251778	0					
ANR	1252262	Identifier	parse_short_name		1251778	0					
ANR	1252263	ArgumentList	s		1251778	1					
ANR	1252264	Argument	s		1251778	0					
ANR	1252265	Identifier	s		1251778	0					
ANR	1252266	Argument	& lfn		1251778	1					
ANR	1252267	UnaryOperationExpression	& lfn		1251778	0					
ANR	1252268	UnaryOperator	&		1251778	0					
ANR	1252269	Identifier	lfn		1251778	1					
ANR	1252270	Argument	direntries + i		1251778	2					
ANR	1252271	AdditiveExpression	direntries + i		1251778	0		+			
ANR	1252272	Identifier	direntries		1251778	0					
ANR	1252273	Identifier	i		1251778	1					
ANR	1252274	IfStatement	if ( subret < 0 )		1251778	1					
ANR	1252275	Condition	subret < 0	147:6:2184:2193	1251778	0	True				
ANR	1252276	RelationalExpression	subret < 0		1251778	0		<			
ANR	1252277	Identifier	subret		1251778	0					
ANR	1252278	PrimaryExpression	0		1251778	1					
ANR	1252279	CompoundStatement		143:18:2099:2099	1251778	1					
ANR	1252280	ExpressionStatement	"fprintf ( stderr , ""Error in short name (%d)\\n"" , subret )"	149:6:2205:2258	1251778	0	True				
ANR	1252281	CallExpression	"fprintf ( stderr , ""Error in short name (%d)\\n"" , subret )"		1251778	0					
ANR	1252282	Callee	fprintf		1251778	0					
ANR	1252283	Identifier	fprintf		1251778	0					
ANR	1252284	ArgumentList	stderr		1251778	1					
ANR	1252285	Argument	stderr		1251778	0					
ANR	1252286	Identifier	stderr		1251778	0					
ANR	1252287	Argument	"""Error in short name (%d)\\n"""		1251778	1					
ANR	1252288	PrimaryExpression	"""Error in short name (%d)\\n"""		1251778	0					
ANR	1252289	Argument	subret		1251778	2					
ANR	1252290	Identifier	subret		1251778	0					
ANR	1252291	GotoStatement	goto fail ;	151:6:2267:2276	1251778	1	True				
ANR	1252292	Identifier	fail		1251778	0					
ANR	1252293	IfStatement	"if ( subret > 0 || ! strcmp ( ( char * ) lfn . name , ""."" ) || ! strcmp ( ( char * ) lfn . name , "".."" ) )"		1251778	2					
ANR	1252294	Condition	"subret > 0 || ! strcmp ( ( char * ) lfn . name , ""."" ) || ! strcmp ( ( char * ) lfn . name , "".."" )"	155:6:2290:2370	1251778	0	True				
ANR	1252295	OrExpression	"subret > 0 || ! strcmp ( ( char * ) lfn . name , ""."" ) || ! strcmp ( ( char * ) lfn . name , "".."" )"		1251778	0		||			
ANR	1252296	RelationalExpression	subret > 0		1251778	0		>			
ANR	1252297	Identifier	subret		1251778	0					
ANR	1252298	PrimaryExpression	0		1251778	1					
ANR	1252299	OrExpression	"! strcmp ( ( char * ) lfn . name , ""."" ) || ! strcmp ( ( char * ) lfn . name , "".."" )"		1251778	1		||			
ANR	1252300	UnaryOperationExpression	"! strcmp ( ( char * ) lfn . name , ""."" )"		1251778	0					
ANR	1252301	UnaryOperator	!		1251778	0					
ANR	1252302	CallExpression	"strcmp ( ( char * ) lfn . name , ""."" )"		1251778	1					
ANR	1252303	Callee	strcmp		1251778	0					
ANR	1252304	Identifier	strcmp		1251778	0					
ANR	1252305	ArgumentList	( char * ) lfn . name		1251778	1					
ANR	1252306	Argument	( char * ) lfn . name		1251778	0					
ANR	1252307	CastExpression	( char * ) lfn . name		1251778	0					
ANR	1252308	CastTarget	char *		1251778	0					
ANR	1252309	MemberAccess	lfn . name		1251778	1					
ANR	1252310	Identifier	lfn		1251778	0					
ANR	1252311	Identifier	name		1251778	1					
ANR	1252312	Argument	"""."""		1251778	1					
ANR	1252313	PrimaryExpression	"""."""		1251778	0					
ANR	1252314	UnaryOperationExpression	"! strcmp ( ( char * ) lfn . name , "".."" )"		1251778	1					
ANR	1252315	UnaryOperator	!		1251778	0					
ANR	1252316	CallExpression	"strcmp ( ( char * ) lfn . name , "".."" )"		1251778	1					
ANR	1252317	Callee	strcmp		1251778	0					
ANR	1252318	Identifier	strcmp		1251778	0					
ANR	1252319	ArgumentList	( char * ) lfn . name		1251778	1					
ANR	1252320	Argument	( char * ) lfn . name		1251778	0					
ANR	1252321	CastExpression	( char * ) lfn . name		1251778	0					
ANR	1252322	CastTarget	char *		1251778	0					
ANR	1252323	MemberAccess	lfn . name		1251778	1					
ANR	1252324	Identifier	lfn		1251778	0					
ANR	1252325	Identifier	name		1251778	1					
ANR	1252326	Argument	""".."""		1251778	1					
ANR	1252327	PrimaryExpression	""".."""		1251778	0					
ANR	1252328	ContinueStatement	continue ;	159:6:2380:2388	1251778	1	True				
ANR	1252329	ExpressionStatement	lfn . checksum = 0x100	163:5:2404:2424	1251778	17	True				
ANR	1252330	AssignmentExpression	lfn . checksum = 0x100		1251778	0		=			
ANR	1252331	MemberAccess	lfn . checksum		1251778	0					
ANR	1252332	Identifier	lfn		1251778	0					
ANR	1252333	Identifier	checksum		1251778	1					
ANR	1252334	PrimaryExpression	0x100		1251778	1					
ANR	1252335	IfStatement	if ( path_len + 1 + lfn . len >= PATH_MAX )		1251778	18					
ANR	1252336	Condition	path_len + 1 + lfn . len >= PATH_MAX	167:9:2471:2504	1251778	0	True				
ANR	1252337	RelationalExpression	path_len + 1 + lfn . len >= PATH_MAX		1251778	0		>=			
ANR	1252338	AdditiveExpression	path_len + 1 + lfn . len		1251778	0		+			
ANR	1252339	Identifier	path_len		1251778	0					
ANR	1252340	AdditiveExpression	1 + lfn . len		1251778	1		+			
ANR	1252341	PrimaryExpression	1		1251778	0					
ANR	1252342	MemberAccess	lfn . len		1251778	1					
ANR	1252343	Identifier	lfn		1251778	0					
ANR	1252344	Identifier	len		1251778	1					
ANR	1252345	Identifier	PATH_MAX		1251778	1					
ANR	1252346	CompoundStatement		163:45:2410:2410	1251778	1					
ANR	1252347	ExpressionStatement	"fprintf ( stderr , ""Name too long: %s/%s\\n"" , path , lfn . name )"	169:2:2512:2569	1251778	0	True				
ANR	1252348	CallExpression	"fprintf ( stderr , ""Name too long: %s/%s\\n"" , path , lfn . name )"		1251778	0					
ANR	1252349	Callee	fprintf		1251778	0					
ANR	1252350	Identifier	fprintf		1251778	0					
ANR	1252351	ArgumentList	stderr		1251778	1					
ANR	1252352	Argument	stderr		1251778	0					
ANR	1252353	Identifier	stderr		1251778	0					
ANR	1252354	Argument	"""Name too long: %s/%s\\n"""		1251778	1					
ANR	1252355	PrimaryExpression	"""Name too long: %s/%s\\n"""		1251778	0					
ANR	1252356	Argument	path		1251778	2					
ANR	1252357	Identifier	path		1251778	0					
ANR	1252358	Argument	lfn . name		1251778	3					
ANR	1252359	MemberAccess	lfn . name		1251778	0					
ANR	1252360	Identifier	lfn		1251778	0					
ANR	1252361	Identifier	name		1251778	1					
ANR	1252362	GotoStatement	goto fail ;	171:2:2574:2583	1251778	1	True				
ANR	1252363	Identifier	fail		1251778	0					
ANR	1252364	ExpressionStatement	"pstrcpy ( path2 + path_len + 1 , sizeof ( path2 ) - path_len - 1 , ( char * ) lfn . name )"	175:12:2606:2703	1251778	19	True				
ANR	1252365	CallExpression	"pstrcpy ( path2 + path_len + 1 , sizeof ( path2 ) - path_len - 1 , ( char * ) lfn . name )"		1251778	0					
ANR	1252366	Callee	pstrcpy		1251778	0					
ANR	1252367	Identifier	pstrcpy		1251778	0					
ANR	1252368	ArgumentList	path2 + path_len + 1		1251778	1					
ANR	1252369	Argument	path2 + path_len + 1		1251778	0					
ANR	1252370	AdditiveExpression	path2 + path_len + 1		1251778	0		+			
ANR	1252371	Identifier	path2		1251778	0					
ANR	1252372	AdditiveExpression	path_len + 1		1251778	1		+			
ANR	1252373	Identifier	path_len		1251778	0					
ANR	1252374	PrimaryExpression	1		1251778	1					
ANR	1252375	Argument	sizeof ( path2 ) - path_len - 1		1251778	1					
ANR	1252376	AdditiveExpression	sizeof ( path2 ) - path_len - 1		1251778	0		-			
ANR	1252377	SizeofExpression	sizeof ( path2 )		1251778	0					
ANR	1252378	Sizeof	sizeof		1251778	0					
ANR	1252379	SizeofOperand	path2		1251778	1					
ANR	1252380	AdditiveExpression	path_len - 1		1251778	1		-			
ANR	1252381	Identifier	path_len		1251778	0					
ANR	1252382	PrimaryExpression	1		1251778	1					
ANR	1252383	Argument	( char * ) lfn . name		1251778	2					
ANR	1252384	CastExpression	( char * ) lfn . name		1251778	0					
ANR	1252385	CastTarget	char *		1251778	0					
ANR	1252386	MemberAccess	lfn . name		1251778	1					
ANR	1252387	Identifier	lfn		1251778	0					
ANR	1252388	Identifier	name		1251778	1					
ANR	1252389	IfStatement	if ( is_directory ( direntries + i ) )		1251778	20					
ANR	1252390	Condition	is_directory ( direntries + i )	181:9:2717:2744	1251778	0	True				
ANR	1252391	CallExpression	is_directory ( direntries + i )		1251778	0					
ANR	1252392	Callee	is_directory		1251778	0					
ANR	1252393	Identifier	is_directory		1251778	0					
ANR	1252394	ArgumentList	direntries + i		1251778	1					
ANR	1252395	Argument	direntries + i		1251778	0					
ANR	1252396	AdditiveExpression	direntries + i		1251778	0		+			
ANR	1252397	Identifier	direntries		1251778	0					
ANR	1252398	Identifier	i		1251778	1					
ANR	1252399	CompoundStatement		177:39:2650:2650	1251778	1					
ANR	1252400	IfStatement	if ( begin_of_direntry ( direntries + i ) == 0 )		1251778	0					
ANR	1252401	Condition	begin_of_direntry ( direntries + i ) == 0	183:6:2756:2793	1251778	0	True				
ANR	1252402	EqualityExpression	begin_of_direntry ( direntries + i ) == 0		1251778	0		==			
ANR	1252403	CallExpression	begin_of_direntry ( direntries + i )		1251778	0					
ANR	1252404	Callee	begin_of_direntry		1251778	0					
ANR	1252405	Identifier	begin_of_direntry		1251778	0					
ANR	1252406	ArgumentList	direntries + i		1251778	1					
ANR	1252407	Argument	direntries + i		1251778	0					
ANR	1252408	AdditiveExpression	direntries + i		1251778	0		+			
ANR	1252409	Identifier	direntries		1251778	0					
ANR	1252410	Identifier	i		1251778	1					
ANR	1252411	PrimaryExpression	0		1251778	1					
ANR	1252412	CompoundStatement		179:46:2699:2699	1251778	1					
ANR	1252413	Statement	DLOG	185:6:2805:2808	1251778	0	True				
ANR	1252414	Statement	(	185:10:2809:2809	1251778	1	True				
ANR	1252415	ExpressionStatement	"fprintf ( stderr , ""invalid begin for directory: %s\\n"" , path2 )"	185:11:2810:2869	1251778	2	True				
ANR	1252416	CallExpression	"fprintf ( stderr , ""invalid begin for directory: %s\\n"" , path2 )"		1251778	0					
ANR	1252417	Callee	fprintf		1251778	0					
ANR	1252418	Identifier	fprintf		1251778	0					
ANR	1252419	ArgumentList	stderr		1251778	1					
ANR	1252420	Argument	stderr		1251778	0					
ANR	1252421	Identifier	stderr		1251778	0					
ANR	1252422	Argument	"""invalid begin for directory: %s\\n"""		1251778	1					
ANR	1252423	PrimaryExpression	"""invalid begin for directory: %s\\n"""		1251778	0					
ANR	1252424	Argument	path2		1251778	2					
ANR	1252425	Identifier	path2		1251778	0					
ANR	1252426	Statement	print_direntry	185:72:2871:2884	1251778	3	True				
ANR	1252427	Statement	(	185:86:2885:2885	1251778	4	True				
ANR	1252428	Statement	direntries	185:87:2886:2895	1251778	5	True				
ANR	1252429	Statement	+	185:98:2897:2897	1251778	6	True				
ANR	1252430	Statement	i	185:100:2899:2899	1251778	7	True				
ANR	1252431	Statement	)	185:101:2900:2900	1251778	8	True				
ANR	1252432	Statement	)	185:102:2901:2901	1251778	9	True				
ANR	1252433	ExpressionStatement		185:103:2902:2902	1251778	10	True				
ANR	1252434	GotoStatement	goto fail ;	187:6:2911:2920	1251778	11	True				
ANR	1252435	Identifier	fail		1251778	0					
ANR	1252436	ExpressionStatement	"cluster_count = check_directory_consistency ( s , begin_of_direntry ( direntries + i ) , path2 )"	191:2:2930:3022	1251778	1	True				
ANR	1252437	AssignmentExpression	"cluster_count = check_directory_consistency ( s , begin_of_direntry ( direntries + i ) , path2 )"		1251778	0		=			
ANR	1252438	Identifier	cluster_count		1251778	0					
ANR	1252439	CallExpression	"check_directory_consistency ( s , begin_of_direntry ( direntries + i ) , path2 )"		1251778	1					
ANR	1252440	Callee	check_directory_consistency		1251778	0					
ANR	1252441	Identifier	check_directory_consistency		1251778	0					
ANR	1252442	ArgumentList	s		1251778	1					
ANR	1252443	Argument	s		1251778	0					
ANR	1252444	Identifier	s		1251778	0					
ANR	1252445	Argument	begin_of_direntry ( direntries + i )		1251778	1					
ANR	1252446	CallExpression	begin_of_direntry ( direntries + i )		1251778	0					
ANR	1252447	Callee	begin_of_direntry		1251778	0					
ANR	1252448	Identifier	begin_of_direntry		1251778	0					
ANR	1252449	ArgumentList	direntries + i		1251778	1					
ANR	1252450	Argument	direntries + i		1251778	0					
ANR	1252451	AdditiveExpression	direntries + i		1251778	0		+			
ANR	1252452	Identifier	direntries		1251778	0					
ANR	1252453	Identifier	i		1251778	1					
ANR	1252454	Argument	path2		1251778	2					
ANR	1252455	Identifier	path2		1251778	0					
ANR	1252456	IfStatement	if ( cluster_count == 0 )		1251778	2					
ANR	1252457	Condition	cluster_count == 0	195:6:3031:3048	1251778	0	True				
ANR	1252458	EqualityExpression	cluster_count == 0		1251778	0		==			
ANR	1252459	Identifier	cluster_count		1251778	0					
ANR	1252460	PrimaryExpression	0		1251778	1					
ANR	1252461	CompoundStatement		191:26:2954:2954	1251778	1					
ANR	1252462	Statement	DLOG	197:6:3060:3063	1251778	0	True				
ANR	1252463	Statement	(	197:10:3064:3064	1251778	1	True				
ANR	1252464	ExpressionStatement	"fprintf ( stderr , ""problem in directory %s:\\n"" , path2 )"	197:11:3065:3117	1251778	2	True				
ANR	1252465	CallExpression	"fprintf ( stderr , ""problem in directory %s:\\n"" , path2 )"		1251778	0					
ANR	1252466	Callee	fprintf		1251778	0					
ANR	1252467	Identifier	fprintf		1251778	0					
ANR	1252468	ArgumentList	stderr		1251778	1					
ANR	1252469	Argument	stderr		1251778	0					
ANR	1252470	Identifier	stderr		1251778	0					
ANR	1252471	Argument	"""problem in directory %s:\\n"""		1251778	1					
ANR	1252472	PrimaryExpression	"""problem in directory %s:\\n"""		1251778	0					
ANR	1252473	Argument	path2		1251778	2					
ANR	1252474	Identifier	path2		1251778	0					
ANR	1252475	Statement	print_direntry	197:65:3119:3132	1251778	3	True				
ANR	1252476	Statement	(	197:79:3133:3133	1251778	4	True				
ANR	1252477	Statement	direntries	197:80:3134:3143	1251778	5	True				
ANR	1252478	Statement	+	197:91:3145:3145	1251778	6	True				
ANR	1252479	Statement	i	197:93:3147:3147	1251778	7	True				
ANR	1252480	Statement	)	197:94:3148:3148	1251778	8	True				
ANR	1252481	Statement	)	197:95:3149:3149	1251778	9	True				
ANR	1252482	ExpressionStatement		197:96:3150:3150	1251778	10	True				
ANR	1252483	GotoStatement	goto fail ;	199:6:3159:3168	1251778	11	True				
ANR	1252484	Identifier	fail		1251778	0					
ANR	1252485	ElseStatement	else		1251778	0					
ANR	1252486	IfStatement	if ( is_file ( direntries + i ) )		1251778	0					
ANR	1252487	Condition	is_file ( direntries + i )	203:16:3192:3214	1251778	0	True				
ANR	1252488	CallExpression	is_file ( direntries + i )		1251778	0					
ANR	1252489	Callee	is_file		1251778	0					
ANR	1252490	Identifier	is_file		1251778	0					
ANR	1252491	ArgumentList	direntries + i		1251778	1					
ANR	1252492	Argument	direntries + i		1251778	0					
ANR	1252493	AdditiveExpression	direntries + i		1251778	0		+			
ANR	1252494	Identifier	direntries		1251778	0					
ANR	1252495	Identifier	i		1251778	1					
ANR	1252496	CompoundStatement		199:41:3120:3120	1251778	1					
ANR	1252497	ExpressionStatement	"cluster_count = get_cluster_count_for_direntry ( s , direntries + i , path2 )"	207:2:3256:3328	1251778	0	True				
ANR	1252498	AssignmentExpression	"cluster_count = get_cluster_count_for_direntry ( s , direntries + i , path2 )"		1251778	0		=			
ANR	1252499	Identifier	cluster_count		1251778	0					
ANR	1252500	CallExpression	"get_cluster_count_for_direntry ( s , direntries + i , path2 )"		1251778	1					
ANR	1252501	Callee	get_cluster_count_for_direntry		1251778	0					
ANR	1252502	Identifier	get_cluster_count_for_direntry		1251778	0					
ANR	1252503	ArgumentList	s		1251778	1					
ANR	1252504	Argument	s		1251778	0					
ANR	1252505	Identifier	s		1251778	0					
ANR	1252506	Argument	direntries + i		1251778	1					
ANR	1252507	AdditiveExpression	direntries + i		1251778	0		+			
ANR	1252508	Identifier	direntries		1251778	0					
ANR	1252509	Identifier	i		1251778	1					
ANR	1252510	Argument	path2		1251778	2					
ANR	1252511	Identifier	path2		1251778	0					
ANR	1252512	IfStatement	if ( cluster_count != ( le32_to_cpu ( direntries [ i ] . size ) + s -> cluster_size - 1 ) / s -> cluster_size )		1251778	1					
ANR	1252513	Condition	cluster_count != ( le32_to_cpu ( direntries [ i ] . size ) + s -> cluster_size - 1 ) / s -> cluster_size	209:6:3337:3435	1251778	0	True				
ANR	1252514	EqualityExpression	cluster_count != ( le32_to_cpu ( direntries [ i ] . size ) + s -> cluster_size - 1 ) / s -> cluster_size		1251778	0		!=			
ANR	1252515	Identifier	cluster_count		1251778	0					
ANR	1252516	MultiplicativeExpression	( le32_to_cpu ( direntries [ i ] . size ) + s -> cluster_size - 1 ) / s -> cluster_size		1251778	1		/			
ANR	1252517	AdditiveExpression	le32_to_cpu ( direntries [ i ] . size ) + s -> cluster_size - 1		1251778	0		+			
ANR	1252518	CallExpression	le32_to_cpu ( direntries [ i ] . size )		1251778	0					
ANR	1252519	Callee	le32_to_cpu		1251778	0					
ANR	1252520	Identifier	le32_to_cpu		1251778	0					
ANR	1252521	ArgumentList	direntries [ i ] . size		1251778	1					
ANR	1252522	Argument	direntries [ i ] . size		1251778	0					
ANR	1252523	MemberAccess	direntries [ i ] . size		1251778	0					
ANR	1252524	ArrayIndexing	direntries [ i ]		1251778	0					
ANR	1252525	Identifier	direntries		1251778	0					
ANR	1252526	Identifier	i		1251778	1					
ANR	1252527	Identifier	size		1251778	1					
ANR	1252528	AdditiveExpression	s -> cluster_size - 1		1251778	1		-			
ANR	1252529	PtrMemberAccess	s -> cluster_size		1251778	0					
ANR	1252530	Identifier	s		1251778	0					
ANR	1252531	Identifier	cluster_size		1251778	1					
ANR	1252532	PrimaryExpression	1		1251778	1					
ANR	1252533	PtrMemberAccess	s -> cluster_size		1251778	1					
ANR	1252534	Identifier	s		1251778	0					
ANR	1252535	Identifier	cluster_size		1251778	1					
ANR	1252536	CompoundStatement		209:28:3341:3341	1251778	1					
ANR	1252537	ExpressionStatement	"DLOG ( fprintf ( stderr , ""Cluster count mismatch\\n"" ) )"	215:6:3447:3496	1251778	0	True				
ANR	1252538	CallExpression	"DLOG ( fprintf ( stderr , ""Cluster count mismatch\\n"" ) )"		1251778	0					
ANR	1252539	Callee	DLOG		1251778	0					
ANR	1252540	Identifier	DLOG		1251778	0					
ANR	1252541	ArgumentList	"fprintf ( stderr , ""Cluster count mismatch\\n"" )"		1251778	1					
ANR	1252542	Argument	"fprintf ( stderr , ""Cluster count mismatch\\n"" )"		1251778	0					
ANR	1252543	CallExpression	"fprintf ( stderr , ""Cluster count mismatch\\n"" )"		1251778	0					
ANR	1252544	Callee	fprintf		1251778	0					
ANR	1252545	Identifier	fprintf		1251778	0					
ANR	1252546	ArgumentList	stderr		1251778	1					
ANR	1252547	Argument	stderr		1251778	0					
ANR	1252548	Identifier	stderr		1251778	0					
ANR	1252549	Argument	"""Cluster count mismatch\\n"""		1251778	1					
ANR	1252550	PrimaryExpression	"""Cluster count mismatch\\n"""		1251778	0					
ANR	1252551	GotoStatement	goto fail ;	217:6:3505:3514	1251778	1	True				
ANR	1252552	Identifier	fail		1251778	0					
ANR	1252553	ElseStatement	else		1251778	0					
ANR	1252554	ExpressionStatement	abort ( )	223:16:3551:3558	1251778	0	True				
ANR	1252555	CallExpression	abort ( )		1251778	0					
ANR	1252556	Callee	abort		1251778	0					
ANR	1252557	Identifier	abort		1251778	0					
ANR	1252558	ArgumentList			1251778	1					
ANR	1252559	ExpressionStatement	ret += cluster_count	227:5:3593:3613	1251778	21	True				
ANR	1252560	AssignmentExpression	ret += cluster_count		1251778	0		+=			
ANR	1252561	Identifier	ret		1251778	0					
ANR	1252562	Identifier	cluster_count		1251778	1					
ANR	1252563	ExpressionStatement	"cluster_num = modified_fat_get ( s , cluster_num )"	233:1:3623:3669	1251778	9	True				
ANR	1252564	AssignmentExpression	"cluster_num = modified_fat_get ( s , cluster_num )"		1251778	0		=			
ANR	1252565	Identifier	cluster_num		1251778	0					
ANR	1252566	CallExpression	"modified_fat_get ( s , cluster_num )"		1251778	1					
ANR	1252567	Callee	modified_fat_get		1251778	0					
ANR	1252568	Identifier	modified_fat_get		1251778	0					
ANR	1252569	ArgumentList	s		1251778	1					
ANR	1252570	Argument	s		1251778	0					
ANR	1252571	Identifier	s		1251778	0					
ANR	1252572	Argument	cluster_num		1251778	1					
ANR	1252573	Identifier	cluster_num		1251778	0					
ANR	1252574	Condition	"! fat_eof ( s , cluster_num )"	235:12:3684:3707	1251778	1	True				
ANR	1252575	UnaryOperationExpression	"! fat_eof ( s , cluster_num )"		1251778	0					
ANR	1252576	UnaryOperator	!		1251778	0					
ANR	1252577	CallExpression	"fat_eof ( s , cluster_num )"		1251778	1					
ANR	1252578	Callee	fat_eof		1251778	0					
ANR	1252579	Identifier	fat_eof		1251778	0					
ANR	1252580	ArgumentList	s		1251778	1					
ANR	1252581	Argument	s		1251778	0					
ANR	1252582	Identifier	s		1251778	0					
ANR	1252583	Argument	cluster_num		1251778	1					
ANR	1252584	Identifier	cluster_num		1251778	0					
ANR	1252585	ExpressionStatement	free ( cluster )	239:4:3718:3731	1251778	14	True				
ANR	1252586	CallExpression	free ( cluster )		1251778	0					
ANR	1252587	Callee	free		1251778	0					
ANR	1252588	Identifier	free		1251778	0					
ANR	1252589	ArgumentList	cluster		1251778	1					
ANR	1252590	Argument	cluster		1251778	0					
ANR	1252591	Identifier	cluster		1251778	0					
ANR	1252592	ReturnStatement	return ret ;	241:4:3738:3748	1251778	15	True				
ANR	1252593	Identifier	ret		1251778	0					
ANR	1252594	ReturnType	static int		1251778	1					
ANR	1252595	Identifier	check_directory_consistency		1251778	2					
ANR	1252596	ParameterList	"BDRVVVFATState * s , int cluster_num , const char * path"		1251778	3					
ANR	1252597	Parameter	BDRVVVFATState * s	1:39:39:55	1251778	0	True				
ANR	1252598	ParameterType	BDRVVVFATState *		1251778	0					
ANR	1252599	Identifier	s		1251778	1					
ANR	1252600	Parameter	int cluster_num	3:1:60:74	1251778	1	True				
ANR	1252601	ParameterType	int		1251778	0					
ANR	1252602	Identifier	cluster_num		1251778	1					
ANR	1252603	Parameter	const char * path	3:18:77:92	1251778	2	True				
ANR	1252604	ParameterType	const char *		1251778	0					
ANR	1252605	Identifier	path		1251778	1					
ANR	1252606	CFGEntryNode	ENTRY		1251778		True				
ANR	1252607	CFGExitNode	EXIT		1251778		True				
ANR	1252608	Symbol	lfn . len		1251778						
ANR	1252609	Symbol	cluster		1251778						
ANR	1252610	Symbol	* path_len		1251778						
ANR	1252611	Symbol	fat_eof		1251778						
ANR	1252612	Symbol	vvfat_read		1251778						
ANR	1252613	Symbol	* s -> used_clusters		1251778						
ANR	1252614	Symbol	s -> cluster_size		1251778						
ANR	1252615	Symbol	* path2		1251778						
ANR	1252616	Symbol	s -> sectors_per_cluster		1251778						
ANR	1252617	Symbol	path		1251778						
ANR	1252618	Symbol	strlen		1251778						
ANR	1252619	Symbol	* mapping		1251778						
ANR	1252620	Symbol	lfn . name		1251778						
ANR	1252621	Symbol	find_mapping_for_cluster		1251778						
ANR	1252622	Symbol	get_cluster_count_for_direntry		1251778						
ANR	1252623	Symbol	check_directory_consistency		1251778						
ANR	1252624	Symbol	is_dot		1251778						
ANR	1252625	Symbol	& lfn		1251778						
ANR	1252626	Symbol	ret		1251778						
ANR	1252627	Symbol	strcmp		1251778						
ANR	1252628	Symbol	mapping		1251778						
ANR	1252629	Symbol	mapping -> path		1251778						
ANR	1252630	Symbol	mapping -> mode		1251778						
ANR	1252631	Symbol	cluster2sector		1251778						
ANR	1252632	Symbol	parse_short_name		1251778						
ANR	1252633	Symbol	parse_long_name		1251778						
ANR	1252634	Symbol	stderr		1251778						
ANR	1252635	Symbol	s -> bs		1251778						
ANR	1252636	Symbol	direntries [ i ] . size		1251778						
ANR	1252637	Symbol	basename		1251778						
ANR	1252638	Symbol	lfn		1251778						
ANR	1252639	Symbol	cluster_num		1251778						
ANR	1252640	Symbol	subret		1251778						
ANR	1252641	Symbol	MODE_DIRECTORY		1251778						
ANR	1252642	Symbol	direntries		1251778						
ANR	1252643	Symbol	cluster_count		1251778						
ANR	1252644	Symbol	fat_chksum		1251778						
ANR	1252645	Symbol	basename2		1251778						
ANR	1252646	Symbol	g_malloc		1251778						
ANR	1252647	Symbol	le32_to_cpu		1251778						
ANR	1252648	Symbol	g_strdup		1251778						
ANR	1252649	Symbol	* * s		1251778						
ANR	1252650	Symbol	begin_of_direntry		1251778						
ANR	1252651	Symbol	USED_ANY		1251778						
ANR	1252652	Symbol	is_directory		1251778						
ANR	1252653	Symbol	path_len		1251778						
ANR	1252654	Symbol	~MODE_DELETED		1251778						
ANR	1252655	Symbol	* cluster_num		1251778						
ANR	1252656	Symbol	MODE_DELETED		1251778						
ANR	1252657	Symbol	PATH_MAX		1251778						
ANR	1252658	Symbol	is_file		1251778						
ANR	1252659	Symbol	i		1251778						
ANR	1252660	Symbol	fprintf		1251778						
ANR	1252661	Symbol	lfn . checksum		1251778						
ANR	1252662	Symbol	s -> used_clusters		1251778						
ANR	1252663	Symbol	USED_DIRECTORY		1251778						
ANR	1252664	Symbol	s		1251778						
ANR	1252665	Symbol	* i		1251778						
ANR	1252666	Symbol	modified_fat_get		1251778						
ANR	1252667	Symbol	path2		1251778						
ANR	1252668	Symbol	get_basename		1251778						
ANR	1252669	Symbol	is_free		1251778						
ANR	1252670	Symbol	is_volume_label		1251778						
ANR	1252671	Symbol	* direntries		1251778						
ANR	1252672	Symbol	* s		1251778						
