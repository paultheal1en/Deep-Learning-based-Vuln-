command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	612580	File	/home/p4ultr4n/workplace/ReVeal/raw_code/arp_table_add_1.c								
ANR	612581	Function	arp_table_add	1:0:0:1262							
ANR	612582	FunctionDef	"arp_table_add (Slirp * slirp , uint32_t ip_addr , uint8_t ethaddr [ ETH_ALEN ])"		612581	0					
ANR	612583	CompoundStatement		3:0:79:1262	612581	0					
ANR	612584	IdentifierDeclStatement	const uint32_t broadcast_addr = ~slirp -> vnetwork_mask . s_addr | slirp -> vnetwork_addr . s_addr ;	5:4:86:185	612581	0	True				
ANR	612585	IdentifierDecl	broadcast_addr = ~slirp -> vnetwork_mask . s_addr | slirp -> vnetwork_addr . s_addr		612581	0					
ANR	612586	IdentifierDeclType	const uint32_t		612581	0					
ANR	612587	Identifier	broadcast_addr		612581	1					
ANR	612588	AssignmentExpression	broadcast_addr = ~slirp -> vnetwork_mask . s_addr | slirp -> vnetwork_addr . s_addr		612581	2		=			
ANR	612589	Identifier	broadcast_addr		612581	0					
ANR	612590	InclusiveOrExpression	~slirp -> vnetwork_mask . s_addr | slirp -> vnetwork_addr . s_addr		612581	1		|			
ANR	612591	MemberAccess	~slirp -> vnetwork_mask . s_addr		612581	0					
ANR	612592	PtrMemberAccess	~slirp -> vnetwork_mask		612581	0					
ANR	612593	Identifier	~slirp		612581	0					
ANR	612594	Identifier	vnetwork_mask		612581	1					
ANR	612595	Identifier	s_addr		612581	1					
ANR	612596	MemberAccess	slirp -> vnetwork_addr . s_addr		612581	1					
ANR	612597	PtrMemberAccess	slirp -> vnetwork_addr		612581	0					
ANR	612598	Identifier	slirp		612581	0					
ANR	612599	Identifier	vnetwork_addr		612581	1					
ANR	612600	Identifier	s_addr		612581	1					
ANR	612601	IdentifierDeclStatement	ArpTable * arptbl = & slirp -> arp_table ;	9:4:192:228	612581	1	True				
ANR	612602	IdentifierDecl	* arptbl = & slirp -> arp_table		612581	0					
ANR	612603	IdentifierDeclType	ArpTable *		612581	0					
ANR	612604	Identifier	arptbl		612581	1					
ANR	612605	AssignmentExpression	* arptbl = & slirp -> arp_table		612581	2		=			
ANR	612606	Identifier	arptbl		612581	0					
ANR	612607	UnaryOperationExpression	& slirp -> arp_table		612581	1					
ANR	612608	UnaryOperator	&		612581	0					
ANR	612609	PtrMemberAccess	slirp -> arp_table		612581	1					
ANR	612610	Identifier	slirp		612581	0					
ANR	612611	Identifier	arp_table		612581	1					
ANR	612612	IdentifierDeclStatement	int i ;	11:4:235:240	612581	2	True				
ANR	612613	IdentifierDecl	i		612581	0					
ANR	612614	IdentifierDeclType	int		612581	0					
ANR	612615	Identifier	i		612581	1					
ANR	612616	ExpressionStatement	"DEBUG_CALL ( ""arp_table_add"" )"	15:4:249:276	612581	3	True				
ANR	612617	CallExpression	"DEBUG_CALL ( ""arp_table_add"" )"		612581	0					
ANR	612618	Callee	DEBUG_CALL		612581	0					
ANR	612619	Identifier	DEBUG_CALL		612581	0					
ANR	612620	ArgumentList	"""arp_table_add"""		612581	1					
ANR	612621	Argument	"""arp_table_add"""		612581	0					
ANR	612622	PrimaryExpression	"""arp_table_add"""		612581	0					
ANR	612623	ExpressionStatement	"DEBUG_ARG ( ""ip = 0x%x"" , ip_addr )"	17:4:283:314	612581	4	True				
ANR	612624	CallExpression	"DEBUG_ARG ( ""ip = 0x%x"" , ip_addr )"		612581	0					
ANR	612625	Callee	DEBUG_ARG		612581	0					
ANR	612626	Identifier	DEBUG_ARG		612581	0					
ANR	612627	ArgumentList	"""ip = 0x%x"""		612581	1					
ANR	612628	Argument	"""ip = 0x%x"""		612581	0					
ANR	612629	PrimaryExpression	"""ip = 0x%x"""		612581	0					
ANR	612630	Argument	ip_addr		612581	1					
ANR	612631	Identifier	ip_addr		612581	0					
ANR	612632	ExpressionStatement	"DEBUG_ARGS ( ( dfd , "" hw addr = %02x:%02x:%02x:%02x:%02x:%02x\\n"" , ethaddr [ 0 ] , ethaddr [ 1 ] , ethaddr [ 2 ] , ethaddr [ 3 ] , ethaddr [ 4 ] , ethaddr [ 5 ] ) )"	19:4:321:490	612581	5	True				
ANR	612633	CallExpression	"DEBUG_ARGS ( ( dfd , "" hw addr = %02x:%02x:%02x:%02x:%02x:%02x\\n"" , ethaddr [ 0 ] , ethaddr [ 1 ] , ethaddr [ 2 ] , ethaddr [ 3 ] , ethaddr [ 4 ] , ethaddr [ 5 ] ) )"		612581	0					
ANR	612634	Callee	DEBUG_ARGS		612581	0					
ANR	612635	Identifier	DEBUG_ARGS		612581	0					
ANR	612636	ArgumentList	"dfd , "" hw addr = %02x:%02x:%02x:%02x:%02x:%02x\\n"" , ethaddr [ 0 ] , ethaddr [ 1 ] , ethaddr [ 2 ] , ethaddr [ 3 ] , ethaddr [ 4 ] , ethaddr [ 5 ]"		612581	1					
ANR	612637	Argument	"dfd , "" hw addr = %02x:%02x:%02x:%02x:%02x:%02x\\n"" , ethaddr [ 0 ] , ethaddr [ 1 ] , ethaddr [ 2 ] , ethaddr [ 3 ] , ethaddr [ 4 ] , ethaddr [ 5 ]"		612581	0					
ANR	612638	Expression	"dfd , "" hw addr = %02x:%02x:%02x:%02x:%02x:%02x\\n"" , ethaddr [ 0 ] , ethaddr [ 1 ] , ethaddr [ 2 ] , ethaddr [ 3 ] , ethaddr [ 4 ] , ethaddr [ 5 ]"		612581	0					
ANR	612639	Identifier	dfd		612581	0					
ANR	612640	Expression	""" hw addr = %02x:%02x:%02x:%02x:%02x:%02x\\n"" , ethaddr [ 0 ] , ethaddr [ 1 ] , ethaddr [ 2 ] , ethaddr [ 3 ] , ethaddr [ 4 ] , ethaddr [ 5 ]"		612581	1					
ANR	612641	PrimaryExpression	""" hw addr = %02x:%02x:%02x:%02x:%02x:%02x\\n"""		612581	0					
ANR	612642	Expression	"ethaddr [ 0 ] , ethaddr [ 1 ] , ethaddr [ 2 ] , ethaddr [ 3 ] , ethaddr [ 4 ] , ethaddr [ 5 ]"		612581	1					
ANR	612643	ArrayIndexing	ethaddr [ 0 ]		612581	0					
ANR	612644	Identifier	ethaddr		612581	0					
ANR	612645	PrimaryExpression	0		612581	1					
ANR	612646	Expression	"ethaddr [ 1 ] , ethaddr [ 2 ] , ethaddr [ 3 ] , ethaddr [ 4 ] , ethaddr [ 5 ]"		612581	1					
ANR	612647	ArrayIndexing	ethaddr [ 1 ]		612581	0					
ANR	612648	Identifier	ethaddr		612581	0					
ANR	612649	PrimaryExpression	1		612581	1					
ANR	612650	Expression	"ethaddr [ 2 ] , ethaddr [ 3 ] , ethaddr [ 4 ] , ethaddr [ 5 ]"		612581	1					
ANR	612651	ArrayIndexing	ethaddr [ 2 ]		612581	0					
ANR	612652	Identifier	ethaddr		612581	0					
ANR	612653	PrimaryExpression	2		612581	1					
ANR	612654	Expression	"ethaddr [ 3 ] , ethaddr [ 4 ] , ethaddr [ 5 ]"		612581	1					
ANR	612655	ArrayIndexing	ethaddr [ 3 ]		612581	0					
ANR	612656	Identifier	ethaddr		612581	0					
ANR	612657	PrimaryExpression	3		612581	1					
ANR	612658	Expression	"ethaddr [ 4 ] , ethaddr [ 5 ]"		612581	1					
ANR	612659	ArrayIndexing	ethaddr [ 4 ]		612581	0					
ANR	612660	Identifier	ethaddr		612581	0					
ANR	612661	PrimaryExpression	4		612581	1					
ANR	612662	ArrayIndexing	ethaddr [ 5 ]		612581	1					
ANR	612663	Identifier	ethaddr		612581	0					
ANR	612664	PrimaryExpression	5		612581	1					
ANR	612665	ExpressionStatement	assert ( ( ip_addr & htonl ( ~ ( 0xf << 28 ) ) ) != 0 )	29:4:556:600	612581	6	True				
ANR	612666	CallExpression	assert ( ( ip_addr & htonl ( ~ ( 0xf << 28 ) ) ) != 0 )		612581	0					
ANR	612667	Callee	assert		612581	0					
ANR	612668	Identifier	assert		612581	0					
ANR	612669	ArgumentList	( ip_addr & htonl ( ~ ( 0xf << 28 ) ) ) != 0		612581	1					
ANR	612670	Argument	( ip_addr & htonl ( ~ ( 0xf << 28 ) ) ) != 0		612581	0					
ANR	612671	EqualityExpression	( ip_addr & htonl ( ~ ( 0xf << 28 ) ) ) != 0		612581	0		!=			
ANR	612672	BitAndExpression	ip_addr & htonl ( ~ ( 0xf << 28 ) )		612581	0		&			
ANR	612673	Identifier	ip_addr		612581	0					
ANR	612674	CallExpression	htonl ( ~ ( 0xf << 28 ) )		612581	1					
ANR	612675	Callee	htonl		612581	0					
ANR	612676	Identifier	htonl		612581	0					
ANR	612677	ArgumentList	~ ( 0xf << 28 )		612581	1					
ANR	612678	Argument	~ ( 0xf << 28 )		612581	0					
ANR	612679	UnaryOperationExpression	~ ( 0xf << 28 )		612581	0					
ANR	612680	UnaryOperator	~		612581	0					
ANR	612681	ShiftExpression	0xf << 28		612581	1		<<			
ANR	612682	PrimaryExpression	0xf		612581	0					
ANR	612683	PrimaryExpression	28		612581	1					
ANR	612684	PrimaryExpression	0		612581	1					
ANR	612685	IfStatement	if ( ip_addr == 0xffffffff || ip_addr == broadcast_addr )		612581	7					
ANR	612686	Condition	ip_addr == 0xffffffff || ip_addr == broadcast_addr	33:8:613:662	612581	0	True				
ANR	612687	OrExpression	ip_addr == 0xffffffff || ip_addr == broadcast_addr		612581	0		||			
ANR	612688	EqualityExpression	ip_addr == 0xffffffff		612581	0		==			
ANR	612689	Identifier	ip_addr		612581	0					
ANR	612690	PrimaryExpression	0xffffffff		612581	1					
ANR	612691	EqualityExpression	ip_addr == broadcast_addr		612581	1		==			
ANR	612692	Identifier	ip_addr		612581	0					
ANR	612693	Identifier	broadcast_addr		612581	1					
ANR	612694	CompoundStatement		31:60:585:585	612581	1					
ANR	612695	ReturnStatement	return ;	37:8:727:733	612581	0	True				
ANR	612696	ForStatement	for ( i = 0 ; i < ARP_TABLE_SIZE ; i ++ )		612581	8					
ANR	612697	ForInit	i = 0 ;	45:9:785:790	612581	0	True				
ANR	612698	AssignmentExpression	i = 0		612581	0		=			
ANR	612699	Identifier	i		612581	0					
ANR	612700	PrimaryExpression	0		612581	1					
ANR	612701	Condition	i < ARP_TABLE_SIZE	45:16:792:809	612581	1	True				
ANR	612702	RelationalExpression	i < ARP_TABLE_SIZE		612581	0		<			
ANR	612703	Identifier	i		612581	0					
ANR	612704	Identifier	ARP_TABLE_SIZE		612581	1					
ANR	612705	PostIncDecOperationExpression	i ++	45:36:812:814	612581	2	True				
ANR	612706	Identifier	i		612581	0					
ANR	612707	IncDec	++		612581	1					
ANR	612708	CompoundStatement		43:41:737:737	612581	3					
ANR	612709	IfStatement	if ( arptbl -> table [ i ] . ar_sip == ip_addr )		612581	0					
ANR	612710	Condition	arptbl -> table [ i ] . ar_sip == ip_addr	47:12:832:865	612581	0	True				
ANR	612711	EqualityExpression	arptbl -> table [ i ] . ar_sip == ip_addr		612581	0		==			
ANR	612712	MemberAccess	arptbl -> table [ i ] . ar_sip		612581	0					
ANR	612713	ArrayIndexing	arptbl -> table [ i ]		612581	0					
ANR	612714	PtrMemberAccess	arptbl -> table		612581	0					
ANR	612715	Identifier	arptbl		612581	0					
ANR	612716	Identifier	table		612581	1					
ANR	612717	Identifier	i		612581	1					
ANR	612718	Identifier	ar_sip		612581	1					
ANR	612719	Identifier	ip_addr		612581	1					
ANR	612720	CompoundStatement		45:48:788:788	612581	1					
ANR	612721	ExpressionStatement	"memcpy ( arptbl -> table [ i ] . ar_sha , ethaddr , ETH_ALEN )"	51:12:919:969	612581	0	True				
ANR	612722	CallExpression	"memcpy ( arptbl -> table [ i ] . ar_sha , ethaddr , ETH_ALEN )"		612581	0					
ANR	612723	Callee	memcpy		612581	0					
ANR	612724	Identifier	memcpy		612581	0					
ANR	612725	ArgumentList	arptbl -> table [ i ] . ar_sha		612581	1					
ANR	612726	Argument	arptbl -> table [ i ] . ar_sha		612581	0					
ANR	612727	MemberAccess	arptbl -> table [ i ] . ar_sha		612581	0					
ANR	612728	ArrayIndexing	arptbl -> table [ i ]		612581	0					
ANR	612729	PtrMemberAccess	arptbl -> table		612581	0					
ANR	612730	Identifier	arptbl		612581	0					
ANR	612731	Identifier	table		612581	1					
ANR	612732	Identifier	i		612581	1					
ANR	612733	Identifier	ar_sha		612581	1					
ANR	612734	Argument	ethaddr		612581	1					
ANR	612735	Identifier	ethaddr		612581	0					
ANR	612736	Argument	ETH_ALEN		612581	2					
ANR	612737	Identifier	ETH_ALEN		612581	0					
ANR	612738	ReturnStatement	return ;	53:12:984:990	612581	1	True				
ANR	612739	ExpressionStatement	arptbl -> table [ arptbl -> next_victim ] . ar_sip = ip_addr	63:4:1061:1112	612581	9	True				
ANR	612740	AssignmentExpression	arptbl -> table [ arptbl -> next_victim ] . ar_sip = ip_addr		612581	0		=			
ANR	612741	MemberAccess	arptbl -> table [ arptbl -> next_victim ] . ar_sip		612581	0					
ANR	612742	ArrayIndexing	arptbl -> table [ arptbl -> next_victim ]		612581	0					
ANR	612743	PtrMemberAccess	arptbl -> table		612581	0					
ANR	612744	Identifier	arptbl		612581	0					
ANR	612745	Identifier	table		612581	1					
ANR	612746	PtrMemberAccess	arptbl -> next_victim		612581	1					
ANR	612747	Identifier	arptbl		612581	0					
ANR	612748	Identifier	next_victim		612581	1					
ANR	612749	Identifier	ar_sip		612581	1					
ANR	612750	Identifier	ip_addr		612581	1					
ANR	612751	ExpressionStatement	"memcpy ( arptbl -> table [ arptbl -> next_victim ] . ar_sha , ethaddr , ETH_ALEN )"	65:4:1119:1188	612581	10	True				
ANR	612752	CallExpression	"memcpy ( arptbl -> table [ arptbl -> next_victim ] . ar_sha , ethaddr , ETH_ALEN )"		612581	0					
ANR	612753	Callee	memcpy		612581	0					
ANR	612754	Identifier	memcpy		612581	0					
ANR	612755	ArgumentList	arptbl -> table [ arptbl -> next_victim ] . ar_sha		612581	1					
ANR	612756	Argument	arptbl -> table [ arptbl -> next_victim ] . ar_sha		612581	0					
ANR	612757	MemberAccess	arptbl -> table [ arptbl -> next_victim ] . ar_sha		612581	0					
ANR	612758	ArrayIndexing	arptbl -> table [ arptbl -> next_victim ]		612581	0					
ANR	612759	PtrMemberAccess	arptbl -> table		612581	0					
ANR	612760	Identifier	arptbl		612581	0					
ANR	612761	Identifier	table		612581	1					
ANR	612762	PtrMemberAccess	arptbl -> next_victim		612581	1					
ANR	612763	Identifier	arptbl		612581	0					
ANR	612764	Identifier	next_victim		612581	1					
ANR	612765	Identifier	ar_sha		612581	1					
ANR	612766	Argument	ethaddr		612581	1					
ANR	612767	Identifier	ethaddr		612581	0					
ANR	612768	Argument	ETH_ALEN		612581	2					
ANR	612769	Identifier	ETH_ALEN		612581	0					
ANR	612770	ExpressionStatement	arptbl -> next_victim = ( arptbl -> next_victim + 1 ) % ARP_TABLE_SIZE	67:4:1195:1259	612581	11	True				
ANR	612771	AssignmentExpression	arptbl -> next_victim = ( arptbl -> next_victim + 1 ) % ARP_TABLE_SIZE		612581	0		=			
ANR	612772	PtrMemberAccess	arptbl -> next_victim		612581	0					
ANR	612773	Identifier	arptbl		612581	0					
ANR	612774	Identifier	next_victim		612581	1					
ANR	612775	MultiplicativeExpression	( arptbl -> next_victim + 1 ) % ARP_TABLE_SIZE		612581	1		%			
ANR	612776	AdditiveExpression	arptbl -> next_victim + 1		612581	0		+			
ANR	612777	PtrMemberAccess	arptbl -> next_victim		612581	0					
ANR	612778	Identifier	arptbl		612581	0					
ANR	612779	Identifier	next_victim		612581	1					
ANR	612780	PrimaryExpression	1		612581	1					
ANR	612781	Identifier	ARP_TABLE_SIZE		612581	1					
ANR	612782	ReturnType	void		612581	1					
ANR	612783	Identifier	arp_table_add		612581	2					
ANR	612784	ParameterList	"Slirp * slirp , uint32_t ip_addr , uint8_t ethaddr [ ETH_ALEN ]"		612581	3					
ANR	612785	Parameter	Slirp * slirp	1:19:19:30	612581	0	True				
ANR	612786	ParameterType	Slirp *		612581	0					
ANR	612787	Identifier	slirp		612581	1					
ANR	612788	Parameter	uint32_t ip_addr	1:33:33:48	612581	1	True				
ANR	612789	ParameterType	uint32_t		612581	0					
ANR	612790	Identifier	ip_addr		612581	1					
ANR	612791	Parameter	uint8_t ethaddr [ ETH_ALEN ]	1:51:51:75	612581	2	True				
ANR	612792	ParameterType	uint8_t [ ETH_ALEN ]		612581	0					
ANR	612793	Identifier	ethaddr		612581	1					
ANR	612794	CFGEntryNode	ENTRY		612581		True				
ANR	612795	CFGExitNode	EXIT		612581		True				
ANR	612796	Symbol	broadcast_addr		612581						
ANR	612797	Symbol	* arptbl -> table		612581						
ANR	612798	Symbol	slirp -> vnetwork_addr . s_addr		612581						
ANR	612799	Symbol	arptbl -> table [ i ] . ar_sha		612581						
ANR	612800	Symbol	slirp -> vnetwork_addr		612581						
ANR	612801	Symbol	* arptbl		612581						
ANR	612802	Symbol	htonl		612581						
ANR	612803	Symbol	* slirp		612581						
ANR	612804	Symbol	arptbl -> next_victim		612581						
ANR	612805	Symbol	~slirp -> vnetwork_mask		612581						
ANR	612806	Symbol	ARP_TABLE_SIZE		612581						
ANR	612807	Symbol	* ethaddr		612581						
ANR	612808	Symbol	dfd		612581						
ANR	612809	Symbol	ethaddr		612581						
ANR	612810	Symbol	* ~slirp		612581						
ANR	612811	Symbol	ETH_ALEN		612581						
ANR	612812	Symbol	slirp		612581						
ANR	612813	Symbol	i		612581						
ANR	612814	Symbol	arptbl -> table [ arptbl -> next_victim ] . ar_sip		612581						
ANR	612815	Symbol	~slirp -> vnetwork_mask . s_addr		612581						
ANR	612816	Symbol	arptbl -> table		612581						
ANR	612817	Symbol	* i		612581						
ANR	612818	Symbol	arptbl -> table [ i ] . ar_sip		612581						
ANR	612819	Symbol	& slirp -> arp_table		612581						
ANR	612820	Symbol	~slirp		612581						
ANR	612821	Symbol	ip_addr		612581						
ANR	612822	Symbol	* arptbl -> next_victim		612581						
ANR	612823	Symbol	arptbl		612581						
ANR	612824	Symbol	arptbl -> table [ arptbl -> next_victim ] . ar_sha		612581						
ANR	612825	Symbol	* * arptbl		612581						
