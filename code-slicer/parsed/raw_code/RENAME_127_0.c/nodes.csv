command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	165697	File	/home/p4ultr4n/workplace/ReVeal/raw_code/RENAME_127_0.c								
ANR	165698	Function	rgb15to16	1:0:0:1448							
ANR	165699	FunctionDef	"rgb15to16 (const uint8_t * src , uint8_t * dst , long src_size)"		165698	0					
ANR	165700	CompoundStatement		3:0:87:1448	165698	0					
ANR	165701	Statement	register	5:4:94:101	165698	0	True				
ANR	165702	IdentifierDeclStatement	const uint8_t * s = src ;	5:13:103:123	165698	1	True				
ANR	165703	IdentifierDecl	* s = src		165698	0					
ANR	165704	IdentifierDeclType	const uint8_t *		165698	0					
ANR	165705	Identifier	s		165698	1					
ANR	165706	AssignmentExpression	* s = src		165698	2		=			
ANR	165707	Identifier	src		165698	0					
ANR	165708	Identifier	src		165698	1					
ANR	165709	Statement	register	7:4:130:137	165698	2	True				
ANR	165710	IdentifierDeclStatement	uint8_t * d = dst ;	7:13:139:153	165698	3	True				
ANR	165711	IdentifierDecl	* d = dst		165698	0					
ANR	165712	IdentifierDeclType	uint8_t *		165698	0					
ANR	165713	Identifier	d		165698	1					
ANR	165714	AssignmentExpression	* d = dst		165698	2		=			
ANR	165715	Identifier	dst		165698	0					
ANR	165716	Identifier	dst		165698	1					
ANR	165717	Statement	register	9:4:160:167	165698	4	True				
ANR	165718	IdentifierDeclStatement	const uint8_t * end ;	9:13:169:187	165698	5	True				
ANR	165719	IdentifierDecl	* end		165698	0					
ANR	165720	IdentifierDeclType	const uint8_t *		165698	0					
ANR	165721	Identifier	end		165698	1					
ANR	165722	IdentifierDeclStatement	const uint8_t * mm_end ;	11:4:194:215	165698	6	True				
ANR	165723	IdentifierDecl	* mm_end		165698	0					
ANR	165724	IdentifierDeclType	const uint8_t *		165698	0					
ANR	165725	Identifier	mm_end		165698	1					
ANR	165726	ExpressionStatement	end = s + src_size	13:4:222:240	165698	7	True				
ANR	165727	AssignmentExpression	end = s + src_size		165698	0		=			
ANR	165728	Identifier	end		165698	0					
ANR	165729	AdditiveExpression	s + src_size		165698	1		+			
ANR	165730	Identifier	s		165698	0					
ANR	165731	Identifier	src_size		165698	1					
ANR	165732	Statement	__asm__	17:4:273:279	165698	8	True				
ANR	165733	Statement	volatile	17:12:281:288	165698	9	True				
ANR	165734	Statement	(	17:20:289:289	165698	10	True				
ANR	165735	Statement	PREFETCH	17:21:290:297	165698	11	True				
ANR	165736	Statement	"""    %0"""	17:29:298:305	165698	12	True				
ANR	165737	Statement	::	17:37:306:307	165698	13	True				
ANR	165738	Statement	"""m"""	17:39:308:310	165698	14	True				
ANR	165739	Statement	(	17:42:311:311	165698	15	True				
ANR	165740	Statement	*	17:43:312:312	165698	16	True				
ANR	165741	Statement	s	17:44:313:313	165698	17	True				
ANR	165742	Statement	)	17:45:314:314	165698	18	True				
ANR	165743	Statement	)	17:46:315:315	165698	19	True				
ANR	165744	ExpressionStatement		17:47:316:316	165698	20	True				
ANR	165745	Statement	__asm__	19:4:323:329	165698	21	True				
ANR	165746	Statement	volatile	19:12:331:338	165698	22	True				
ANR	165747	Statement	(	19:20:339:339	165698	23	True				
ANR	165748	Statement	"""movq        %0, %%mm4"""	19:21:340:362	165698	24	True				
ANR	165749	Statement	::	19:44:363:364	165698	25	True				
ANR	165750	Statement	"""m"""	19:46:365:367	165698	26	True				
ANR	165751	Statement	(	19:49:368:368	165698	27	True				
ANR	165752	Statement	mask15s	19:50:369:375	165698	28	True				
ANR	165753	Statement	)	19:57:376:376	165698	29	True				
ANR	165754	Statement	)	19:58:377:377	165698	30	True				
ANR	165755	ExpressionStatement		19:59:378:378	165698	31	True				
ANR	165756	ExpressionStatement	mm_end = end - 15	21:4:385:402	165698	32	True				
ANR	165757	AssignmentExpression	mm_end = end - 15		165698	0		=			
ANR	165758	Identifier	mm_end		165698	0					
ANR	165759	AdditiveExpression	end - 15		165698	1		-			
ANR	165760	Identifier	end		165698	0					
ANR	165761	PrimaryExpression	15		165698	1					
ANR	165762	WhileStatement	while ( s < mm_end )		165698	33					
ANR	165763	Condition	s < mm_end	23:11:416:423	165698	0	True				
ANR	165764	RelationalExpression	s < mm_end		165698	0		<			
ANR	165765	Identifier	s		165698	0					
ANR	165766	Identifier	mm_end		165698	1					
ANR	165767	CompoundStatement		21:21:338:338	165698	1					
ANR	165768	Statement	__asm__	25:8:437:443	165698	0	True				
ANR	165769	Statement	volatile	25:16:445:452	165698	1	True				
ANR	165770	Statement	(	25:24:453:453	165698	2	True				
ANR	165771	Statement	PREFETCH	27:12:468:475	165698	3	True				
ANR	165772	Statement	"""  32%1         \\n\\t"""	27:20:476:496	165698	4	True				
ANR	165773	Statement	"""movq        %1, %%mm0  \\n\\t"""	29:12:511:539	165698	5	True				
ANR	165774	Statement	"""movq       8%1, %%mm2  \\n\\t"""	31:12:554:582	165698	6	True				
ANR	165775	Statement	"""movq     %%mm0, %%mm1  \\n\\t"""	33:12:597:625	165698	7	True				
ANR	165776	Statement	"""movq     %%mm2, %%mm3  \\n\\t"""	35:12:640:668	165698	8	True				
ANR	165777	Statement	"""pand     %%mm4, %%mm0  \\n\\t"""	37:12:683:711	165698	9	True				
ANR	165778	Statement	"""pand     %%mm4, %%mm2  \\n\\t"""	39:12:726:754	165698	10	True				
ANR	165779	Statement	"""paddw    %%mm1, %%mm0  \\n\\t"""	41:12:769:797	165698	11	True				
ANR	165780	Statement	"""paddw    %%mm3, %%mm2  \\n\\t"""	43:12:812:840	165698	12	True				
ANR	165781	Statement	MOVNTQ	45:12:855:860	165698	13	True				
ANR	165782	Statement	"""   %%mm0,  %0    \\n\\t"""	45:18:861:883	165698	14	True				
ANR	165783	Statement	MOVNTQ	47:12:898:903	165698	15	True				
ANR	165784	Statement	"""   %%mm2, 8%0"""	47:18:904:918	165698	16	True				
ANR	165785	Statement	:	49:12:933:933	165698	17	True				
ANR	165786	Statement	"""=m"""	49:13:934:937	165698	18	True				
ANR	165787	Statement	(	49:17:938:938	165698	19	True				
ANR	165788	Statement	*	49:18:939:939	165698	20	True				
ANR	165789	Statement	d	49:19:940:940	165698	21	True				
ANR	165790	Statement	)	49:20:941:941	165698	22	True				
ANR	165791	Statement	:	51:12:956:956	165698	23	True				
ANR	165792	Statement	"""m"""	51:13:957:959	165698	24	True				
ANR	165793	Statement	(	51:16:960:960	165698	25	True				
ANR	165794	Statement	*	51:17:961:961	165698	26	True				
ANR	165795	Statement	s	51:18:962:962	165698	27	True				
ANR	165796	Statement	)	51:19:963:963	165698	28	True				
ANR	165797	Statement	)	53:8:974:974	165698	29	True				
ANR	165798	ExpressionStatement		53:9:975:975	165698	30	True				
ANR	165799	ExpressionStatement	d += 16	55:8:986:991	165698	31	True				
ANR	165800	AssignmentExpression	d += 16		165698	0		+=			
ANR	165801	Identifier	d		165698	0					
ANR	165802	PrimaryExpression	16		165698	1					
ANR	165803	ExpressionStatement	s += 16	57:8:1002:1007	165698	32	True				
ANR	165804	AssignmentExpression	s += 16		165698	0		+=			
ANR	165805	Identifier	s		165698	0					
ANR	165806	PrimaryExpression	16		165698	1					
ANR	165807	Statement	__asm__	61:4:1021:1027	165698	34	True				
ANR	165808	Statement	volatile	61:12:1029:1036	165698	35	True				
ANR	165809	Statement	(	61:20:1037:1037	165698	36	True				
ANR	165810	Statement	SFENCE	61:21:1038:1043	165698	37	True				
ANR	165811	Statement	::	61:27:1044:1045	165698	38	True				
ANR	165812	Statement	:	61:29:1046:1046	165698	39	True				
ANR	165813	Statement	"""memory"""	61:30:1047:1054	165698	40	True				
ANR	165814	Statement	)	61:38:1055:1055	165698	41	True				
ANR	165815	ExpressionStatement		61:39:1056:1056	165698	42	True				
ANR	165816	Statement	__asm__	63:4:1063:1069	165698	43	True				
ANR	165817	Statement	volatile	63:12:1071:1078	165698	44	True				
ANR	165818	Statement	(	63:20:1079:1079	165698	45	True				
ANR	165819	Statement	EMMS	63:21:1080:1083	165698	46	True				
ANR	165820	Statement	::	63:25:1084:1085	165698	47	True				
ANR	165821	Statement	:	63:27:1086:1086	165698	48	True				
ANR	165822	Statement	"""memory"""	63:28:1087:1094	165698	49	True				
ANR	165823	Statement	)	63:36:1095:1095	165698	50	True				
ANR	165824	ExpressionStatement		63:37:1096:1096	165698	51	True				
ANR	165825	ExpressionStatement	mm_end = end - 3	67:4:1111:1127	165698	52	True				
ANR	165826	AssignmentExpression	mm_end = end - 3		165698	0		=			
ANR	165827	Identifier	mm_end		165698	0					
ANR	165828	AdditiveExpression	end - 3		165698	1		-			
ANR	165829	Identifier	end		165698	0					
ANR	165830	PrimaryExpression	3		165698	1					
ANR	165831	WhileStatement	while ( s < mm_end )		165698	53					
ANR	165832	Condition	s < mm_end	69:11:1141:1150	165698	0	True				
ANR	165833	RelationalExpression	s < mm_end		165698	0		<			
ANR	165834	Identifier	s		165698	0					
ANR	165835	Identifier	mm_end		165698	1					
ANR	165836	CompoundStatement		69:17:1085:1119	165698	1					
ANR	165837	Statement	register	71:8:1164:1171	165698	0	True				
ANR	165838	IdentifierDeclStatement	unsigned x = * ( ( const uint32_t * ) s ) ;	71:17:1173:1207	165698	1	True				
ANR	165839	IdentifierDecl	x = * ( ( const uint32_t * ) s )		165698	0					
ANR	165840	IdentifierDeclType	unsigned		165698	0					
ANR	165841	Identifier	x		165698	1					
ANR	165842	AssignmentExpression	x = * ( ( const uint32_t * ) s )		165698	2		=			
ANR	165843	Identifier	x		165698	0					
ANR	165844	UnaryOperationExpression	* ( ( const uint32_t * ) s )		165698	1					
ANR	165845	UnaryOperator	*		165698	0					
ANR	165846	CastExpression	( const uint32_t * ) s		165698	1					
ANR	165847	CastTarget	const uint32_t *		165698	0					
ANR	165848	Identifier	s		165698	1					
ANR	165849	ExpressionStatement	* ( ( uint32_t * ) d ) = ( x & 0x7FFF7FFF ) + ( x & 0x7FE07FE0 )	73:8:1218:1268	165698	2	True				
ANR	165850	AssignmentExpression	* ( ( uint32_t * ) d ) = ( x & 0x7FFF7FFF ) + ( x & 0x7FE07FE0 )		165698	0		=			
ANR	165851	UnaryOperationExpression	* ( ( uint32_t * ) d )		165698	0					
ANR	165852	UnaryOperator	*		165698	0					
ANR	165853	CastExpression	( uint32_t * ) d		165698	1					
ANR	165854	CastTarget	uint32_t *		165698	0					
ANR	165855	Identifier	d		165698	1					
ANR	165856	AdditiveExpression	( x & 0x7FFF7FFF ) + ( x & 0x7FE07FE0 )		165698	1		+			
ANR	165857	BitAndExpression	x & 0x7FFF7FFF		165698	0		&			
ANR	165858	Identifier	x		165698	0					
ANR	165859	PrimaryExpression	0x7FFF7FFF		165698	1					
ANR	165860	BitAndExpression	x & 0x7FE07FE0		165698	1		&			
ANR	165861	Identifier	x		165698	0					
ANR	165862	PrimaryExpression	0x7FE07FE0		165698	1					
ANR	165863	ExpressionStatement	d += 4	75:8:1279:1283	165698	3	True				
ANR	165864	AssignmentExpression	d += 4		165698	0		+=			
ANR	165865	Identifier	d		165698	0					
ANR	165866	PrimaryExpression	4		165698	1					
ANR	165867	ExpressionStatement	s += 4	77:8:1294:1298	165698	4	True				
ANR	165868	AssignmentExpression	s += 4		165698	0		+=			
ANR	165869	Identifier	s		165698	0					
ANR	165870	PrimaryExpression	4		165698	1					
ANR	165871	IfStatement	if ( s < end )		165698	54					
ANR	165872	Condition	s < end	81:8:1316:1322	165698	0	True				
ANR	165873	RelationalExpression	s < end		165698	0		<			
ANR	165874	Identifier	s		165698	0					
ANR	165875	Identifier	end		165698	1					
ANR	165876	CompoundStatement		81:17:1257:1297	165698	1					
ANR	165877	Statement	register	83:8:1336:1343	165698	0	True				
ANR	165878	IdentifierDeclStatement	unsigned short x = * ( ( const uint16_t * ) s ) ;	83:17:1345:1385	165698	1	True				
ANR	165879	IdentifierDecl	x = * ( ( const uint16_t * ) s )		165698	0					
ANR	165880	IdentifierDeclType	unsigned short		165698	0					
ANR	165881	Identifier	x		165698	1					
ANR	165882	AssignmentExpression	x = * ( ( const uint16_t * ) s )		165698	2		=			
ANR	165883	Identifier	x		165698	0					
ANR	165884	UnaryOperationExpression	* ( ( const uint16_t * ) s )		165698	1					
ANR	165885	UnaryOperator	*		165698	0					
ANR	165886	CastExpression	( const uint16_t * ) s		165698	1					
ANR	165887	CastTarget	const uint16_t *		165698	0					
ANR	165888	Identifier	s		165698	1					
ANR	165889	ExpressionStatement	* ( ( uint16_t * ) d ) = ( x & 0x7FFF ) + ( x & 0x7FE0 )	85:8:1396:1438	165698	2	True				
ANR	165890	AssignmentExpression	* ( ( uint16_t * ) d ) = ( x & 0x7FFF ) + ( x & 0x7FE0 )		165698	0		=			
ANR	165891	UnaryOperationExpression	* ( ( uint16_t * ) d )		165698	0					
ANR	165892	UnaryOperator	*		165698	0					
ANR	165893	CastExpression	( uint16_t * ) d		165698	1					
ANR	165894	CastTarget	uint16_t *		165698	0					
ANR	165895	Identifier	d		165698	1					
ANR	165896	AdditiveExpression	( x & 0x7FFF ) + ( x & 0x7FE0 )		165698	1		+			
ANR	165897	BitAndExpression	x & 0x7FFF		165698	0		&			
ANR	165898	Identifier	x		165698	0					
ANR	165899	PrimaryExpression	0x7FFF		165698	1					
ANR	165900	BitAndExpression	x & 0x7FE0		165698	1		&			
ANR	165901	Identifier	x		165698	0					
ANR	165902	PrimaryExpression	0x7FE0		165698	1					
ANR	165903	ReturnType	static inline void RENAME		165698	1					
ANR	165904	Identifier	( rgb15to16 )		165698	2					
ANR	165905	Identifier	rgb15to16		165698	3					
ANR	165906	ParameterList	"const uint8_t * src , uint8_t * dst , long src_size"		165698	4					
ANR	165907	Parameter	const uint8_t * src	1:37:37:54	165698	0	True				
ANR	165908	ParameterType	const uint8_t *		165698	0					
ANR	165909	Identifier	src		165698	1					
ANR	165910	Parameter	uint8_t * dst	1:57:57:68	165698	1	True				
ANR	165911	ParameterType	uint8_t *		165698	0					
ANR	165912	Identifier	dst		165698	1					
ANR	165913	Parameter	long src_size	1:71:71:83	165698	2	True				
ANR	165914	ParameterType	long		165698	0					
ANR	165915	Identifier	src_size		165698	1					
ANR	165916	CFGEntryNode	ENTRY		165698		True				
ANR	165917	CFGExitNode	EXIT		165698		True				
ANR	165918	Symbol	* ( ( uint16_t * ) d )		165698						
ANR	165919	Symbol	dst		165698						
ANR	165920	Symbol	d		165698						
ANR	165921	Symbol	src		165698						
ANR	165922	Symbol	* d		165698						
ANR	165923	Symbol	mm_end		165698						
ANR	165924	Symbol	* ( ( const uint32_t * ) s )		165698						
ANR	165925	Symbol	src_size		165698						
ANR	165926	Symbol	s		165698						
ANR	165927	Symbol	x		165698						
ANR	165928	Symbol	* ( ( const uint16_t * ) s )		165698						
ANR	165929	Symbol	end		165698						
ANR	165930	Symbol	* s		165698						
ANR	165931	Symbol	* ( ( uint32_t * ) d )		165698						
