command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	9316599	File	/home/p4ultr4n/workplace/ReVeal/raw_code/vp8_decode_mb_row_sliced_1.c								
ANR	9316600	Function	vp8_decode_mb_row_sliced	1:0:0:971							
ANR	9316601	FunctionDef	"vp8_decode_mb_row_sliced (AVCodecContext * avctx , void * tdata , int jobnr , int threadnr)"		9316600	0					
ANR	9316602	CompoundStatement		5:0:135:971	9316600	0					
ANR	9316603	IdentifierDeclStatement	VP8Context * s = avctx -> priv_data ;	7:4:142:174	9316600	0	True				
ANR	9316604	IdentifierDecl	* s = avctx -> priv_data		9316600	0					
ANR	9316605	IdentifierDeclType	VP8Context *		9316600	0					
ANR	9316606	Identifier	s		9316600	1					
ANR	9316607	AssignmentExpression	* s = avctx -> priv_data		9316600	2		=			
ANR	9316608	Identifier	s		9316600	0					
ANR	9316609	PtrMemberAccess	avctx -> priv_data		9316600	1					
ANR	9316610	Identifier	avctx		9316600	0					
ANR	9316611	Identifier	priv_data		9316600	1					
ANR	9316612	IdentifierDeclStatement	VP8ThreadData * td = & s -> thread_data [ jobnr ] ;	9:4:181:223	9316600	1	True				
ANR	9316613	IdentifierDecl	* td = & s -> thread_data [ jobnr ]		9316600	0					
ANR	9316614	IdentifierDeclType	VP8ThreadData *		9316600	0					
ANR	9316615	Identifier	td		9316600	1					
ANR	9316616	AssignmentExpression	* td = & s -> thread_data [ jobnr ]		9316600	2		=			
ANR	9316617	Identifier	td		9316600	0					
ANR	9316618	UnaryOperationExpression	& s -> thread_data [ jobnr ]		9316600	1					
ANR	9316619	UnaryOperator	&		9316600	0					
ANR	9316620	ArrayIndexing	s -> thread_data [ jobnr ]		9316600	1					
ANR	9316621	PtrMemberAccess	s -> thread_data		9316600	0					
ANR	9316622	Identifier	s		9316600	0					
ANR	9316623	Identifier	thread_data		9316600	1					
ANR	9316624	Identifier	jobnr		9316600	1					
ANR	9316625	IdentifierDeclStatement	"VP8ThreadData * next_td = NULL , * prev_td = NULL ;"	11:4:230:276	9316600	2	True				
ANR	9316626	IdentifierDecl	* next_td = NULL		9316600	0					
ANR	9316627	IdentifierDeclType	VP8ThreadData *		9316600	0					
ANR	9316628	Identifier	next_td		9316600	1					
ANR	9316629	AssignmentExpression	* next_td = NULL		9316600	2		=			
ANR	9316630	Identifier	NULL		9316600	0					
ANR	9316631	Identifier	NULL		9316600	1					
ANR	9316632	IdentifierDecl	* prev_td = NULL		9316600	1					
ANR	9316633	IdentifierDeclType	VP8ThreadData *		9316600	0					
ANR	9316634	Identifier	prev_td		9316600	1					
ANR	9316635	AssignmentExpression	* prev_td = NULL		9316600	2		=			
ANR	9316636	Identifier	NULL		9316600	0					
ANR	9316637	Identifier	NULL		9316600	1					
ANR	9316638	IdentifierDeclStatement	VP8Frame * curframe = s -> curframe ;	13:4:283:315	9316600	3	True				
ANR	9316639	IdentifierDecl	* curframe = s -> curframe		9316600	0					
ANR	9316640	IdentifierDeclType	VP8Frame *		9316600	0					
ANR	9316641	Identifier	curframe		9316600	1					
ANR	9316642	AssignmentExpression	* curframe = s -> curframe		9316600	2		=			
ANR	9316643	Identifier	curframe		9316600	0					
ANR	9316644	PtrMemberAccess	s -> curframe		9316600	1					
ANR	9316645	Identifier	s		9316600	0					
ANR	9316646	Identifier	curframe		9316600	1					
ANR	9316647	IdentifierDeclStatement	"int mb_y , num_jobs = s -> num_jobs ;"	15:4:322:354	9316600	4	True				
ANR	9316648	IdentifierDecl	mb_y		9316600	0					
ANR	9316649	IdentifierDeclType	int		9316600	0					
ANR	9316650	Identifier	mb_y		9316600	1					
ANR	9316651	IdentifierDecl	num_jobs = s -> num_jobs		9316600	1					
ANR	9316652	IdentifierDeclType	int		9316600	0					
ANR	9316653	Identifier	num_jobs		9316600	1					
ANR	9316654	AssignmentExpression	num_jobs = s -> num_jobs		9316600	2		=			
ANR	9316655	Identifier	num_jobs		9316600	0					
ANR	9316656	PtrMemberAccess	s -> num_jobs		9316600	1					
ANR	9316657	Identifier	s		9316600	0					
ANR	9316658	Identifier	num_jobs		9316600	1					
ANR	9316659	ExpressionStatement	td -> thread_nr = threadnr	19:4:363:387	9316600	5	True				
ANR	9316660	AssignmentExpression	td -> thread_nr = threadnr		9316600	0		=			
ANR	9316661	PtrMemberAccess	td -> thread_nr		9316600	0					
ANR	9316662	Identifier	td		9316600	0					
ANR	9316663	Identifier	thread_nr		9316600	1					
ANR	9316664	Identifier	threadnr		9316600	1					
ANR	9316665	ForStatement	for ( mb_y = jobnr ; mb_y < s -> mb_height ; mb_y += num_jobs )		9316600	6					
ANR	9316666	ForInit	mb_y = jobnr ;	21:9:399:411	9316600	0	True				
ANR	9316667	AssignmentExpression	mb_y = jobnr		9316600	0		=			
ANR	9316668	Identifier	mb_y		9316600	0					
ANR	9316669	Identifier	jobnr		9316600	1					
ANR	9316670	Condition	mb_y < s -> mb_height	21:23:413:431	9316600	1	True				
ANR	9316671	RelationalExpression	mb_y < s -> mb_height		9316600	0		<			
ANR	9316672	Identifier	mb_y		9316600	0					
ANR	9316673	PtrMemberAccess	s -> mb_height		9316600	1					
ANR	9316674	Identifier	s		9316600	0					
ANR	9316675	Identifier	mb_height		9316600	1					
ANR	9316676	AssignmentExpression	mb_y += num_jobs	21:44:434:449	9316600	2	True	+=			
ANR	9316677	Identifier	mb_y		9316600	0					
ANR	9316678	Identifier	num_jobs		9316600	1					
ANR	9316679	CompoundStatement		17:62:316:316	9316600	3					
ANR	9316680	IfStatement	if ( mb_y >= s -> mb_height )		9316600	0					
ANR	9316681	Condition	mb_y >= s -> mb_height	23:12:467:486	9316600	0	True				
ANR	9316682	RelationalExpression	mb_y >= s -> mb_height		9316600	0		>=			
ANR	9316683	Identifier	mb_y		9316600	0					
ANR	9316684	PtrMemberAccess	s -> mb_height		9316600	1					
ANR	9316685	Identifier	s		9316600	0					
ANR	9316686	Identifier	mb_height		9316600	1					
ANR	9316687	BreakStatement	break ;	25:12:502:507	9316600	1	True				
ANR	9316688	ExpressionStatement	td -> thread_mb_pos = mb_y << 16	27:8:518:548	9316600	1	True				
ANR	9316689	AssignmentExpression	td -> thread_mb_pos = mb_y << 16		9316600	0		=			
ANR	9316690	PtrMemberAccess	td -> thread_mb_pos		9316600	0					
ANR	9316691	Identifier	td		9316600	0					
ANR	9316692	Identifier	thread_mb_pos		9316600	1					
ANR	9316693	ShiftExpression	mb_y << 16		9316600	1		<<			
ANR	9316694	Identifier	mb_y		9316600	0					
ANR	9316695	PrimaryExpression	16		9316600	1					
ANR	9316696	ExpressionStatement	"vp8_decode_mb_row_no_filter ( avctx , tdata , jobnr , threadnr )"	29:8:559:617	9316600	2	True				
ANR	9316697	CallExpression	"vp8_decode_mb_row_no_filter ( avctx , tdata , jobnr , threadnr )"		9316600	0					
ANR	9316698	Callee	vp8_decode_mb_row_no_filter		9316600	0					
ANR	9316699	Identifier	vp8_decode_mb_row_no_filter		9316600	0					
ANR	9316700	ArgumentList	avctx		9316600	1					
ANR	9316701	Argument	avctx		9316600	0					
ANR	9316702	Identifier	avctx		9316600	0					
ANR	9316703	Argument	tdata		9316600	1					
ANR	9316704	Identifier	tdata		9316600	0					
ANR	9316705	Argument	jobnr		9316600	2					
ANR	9316706	Identifier	jobnr		9316600	0					
ANR	9316707	Argument	threadnr		9316600	3					
ANR	9316708	Identifier	threadnr		9316600	0					
ANR	9316709	IfStatement	if ( s -> deblock_filter )		9316600	3					
ANR	9316710	Condition	s -> deblock_filter	31:12:632:648	9316600	0	True				
ANR	9316711	PtrMemberAccess	s -> deblock_filter		9316600	0					
ANR	9316712	Identifier	s		9316600	0					
ANR	9316713	Identifier	deblock_filter		9316600	1					
ANR	9316714	ExpressionStatement	"vp8_filter_mb_row ( avctx , tdata , jobnr , threadnr )"	33:12:664:712	9316600	1	True				
ANR	9316715	CallExpression	"vp8_filter_mb_row ( avctx , tdata , jobnr , threadnr )"		9316600	0					
ANR	9316716	Callee	vp8_filter_mb_row		9316600	0					
ANR	9316717	Identifier	vp8_filter_mb_row		9316600	0					
ANR	9316718	ArgumentList	avctx		9316600	1					
ANR	9316719	Argument	avctx		9316600	0					
ANR	9316720	Identifier	avctx		9316600	0					
ANR	9316721	Argument	tdata		9316600	1					
ANR	9316722	Identifier	tdata		9316600	0					
ANR	9316723	Argument	jobnr		9316600	2					
ANR	9316724	Identifier	jobnr		9316600	0					
ANR	9316725	Argument	threadnr		9316600	3					
ANR	9316726	Identifier	threadnr		9316600	0					
ANR	9316727	ExpressionStatement	"update_pos ( td , mb_y , INT_MAX & 0xFFFF )"	35:8:723:761	9316600	4	True				
ANR	9316728	CallExpression	"update_pos ( td , mb_y , INT_MAX & 0xFFFF )"		9316600	0					
ANR	9316729	Callee	update_pos		9316600	0					
ANR	9316730	Identifier	update_pos		9316600	0					
ANR	9316731	ArgumentList	td		9316600	1					
ANR	9316732	Argument	td		9316600	0					
ANR	9316733	Identifier	td		9316600	0					
ANR	9316734	Argument	mb_y		9316600	1					
ANR	9316735	Identifier	mb_y		9316600	0					
ANR	9316736	Argument	INT_MAX & 0xFFFF		9316600	2					
ANR	9316737	BitAndExpression	INT_MAX & 0xFFFF		9316600	0		&			
ANR	9316738	Identifier	INT_MAX		9316600	0					
ANR	9316739	PrimaryExpression	0xFFFF		9316600	1					
ANR	9316740	ExpressionStatement	s -> mv_min . y -= 64	39:8:774:791	9316600	5	True				
ANR	9316741	AssignmentExpression	s -> mv_min . y -= 64		9316600	0		-=			
ANR	9316742	MemberAccess	s -> mv_min . y		9316600	0					
ANR	9316743	PtrMemberAccess	s -> mv_min		9316600	0					
ANR	9316744	Identifier	s		9316600	0					
ANR	9316745	Identifier	mv_min		9316600	1					
ANR	9316746	Identifier	y		9316600	1					
ANR	9316747	PrimaryExpression	64		9316600	1					
ANR	9316748	ExpressionStatement	s -> mv_max . y -= 64	41:8:802:819	9316600	6	True				
ANR	9316749	AssignmentExpression	s -> mv_max . y -= 64		9316600	0		-=			
ANR	9316750	MemberAccess	s -> mv_max . y		9316600	0					
ANR	9316751	PtrMemberAccess	s -> mv_max		9316600	0					
ANR	9316752	Identifier	s		9316600	0					
ANR	9316753	Identifier	mv_max		9316600	1					
ANR	9316754	Identifier	y		9316600	1					
ANR	9316755	PrimaryExpression	64		9316600	1					
ANR	9316756	IfStatement	if ( avctx -> active_thread_type == FF_THREAD_FRAME )		9316600	7					
ANR	9316757	Condition	avctx -> active_thread_type == FF_THREAD_FRAME	45:12:836:879	9316600	0	True				
ANR	9316758	EqualityExpression	avctx -> active_thread_type == FF_THREAD_FRAME		9316600	0		==			
ANR	9316759	PtrMemberAccess	avctx -> active_thread_type		9316600	0					
ANR	9316760	Identifier	avctx		9316600	0					
ANR	9316761	Identifier	active_thread_type		9316600	1					
ANR	9316762	Identifier	FF_THREAD_FRAME		9316600	1					
ANR	9316763	ExpressionStatement	"ff_thread_report_progress ( & curframe -> tf , mb_y , 0 )"	47:12:895:944	9316600	1	True				
ANR	9316764	CallExpression	"ff_thread_report_progress ( & curframe -> tf , mb_y , 0 )"		9316600	0					
ANR	9316765	Callee	ff_thread_report_progress		9316600	0					
ANR	9316766	Identifier	ff_thread_report_progress		9316600	0					
ANR	9316767	ArgumentList	& curframe -> tf		9316600	1					
ANR	9316768	Argument	& curframe -> tf		9316600	0					
ANR	9316769	UnaryOperationExpression	& curframe -> tf		9316600	0					
ANR	9316770	UnaryOperator	&		9316600	0					
ANR	9316771	PtrMemberAccess	curframe -> tf		9316600	1					
ANR	9316772	Identifier	curframe		9316600	0					
ANR	9316773	Identifier	tf		9316600	1					
ANR	9316774	Argument	mb_y		9316600	1					
ANR	9316775	Identifier	mb_y		9316600	0					
ANR	9316776	Argument	0		9316600	2					
ANR	9316777	PrimaryExpression	0		9316600	0					
ANR	9316778	ReturnStatement	return 0 ;	53:4:960:968	9316600	7	True				
ANR	9316779	PrimaryExpression	0		9316600	0					
ANR	9316780	ReturnType	static int		9316600	1					
ANR	9316781	Identifier	vp8_decode_mb_row_sliced		9316600	2					
ANR	9316782	ParameterList	"AVCodecContext * avctx , void * tdata , int jobnr , int threadnr"		9316600	3					
ANR	9316783	Parameter	AVCodecContext * avctx	1:36:36:56	9316600	0	True				
ANR	9316784	ParameterType	AVCodecContext *		9316600	0					
ANR	9316785	Identifier	avctx		9316600	1					
ANR	9316786	Parameter	void * tdata	1:59:59:69	9316600	1	True				
ANR	9316787	ParameterType	void *		9316600	0					
ANR	9316788	Identifier	tdata		9316600	1					
ANR	9316789	Parameter	int jobnr	3:36:109:117	9316600	2	True				
ANR	9316790	ParameterType	int		9316600	0					
ANR	9316791	Identifier	jobnr		9316600	1					
ANR	9316792	Parameter	int threadnr	3:47:120:131	9316600	3	True				
ANR	9316793	ParameterType	int		9316600	0					
ANR	9316794	Identifier	threadnr		9316600	1					
ANR	9316795	CFGEntryNode	ENTRY		9316600		True				
ANR	9316796	CFGExitNode	EXIT		9316600		True				
ANR	9316797	Symbol	curframe		9316600						
ANR	9316798	Symbol	td -> thread_nr		9316600						
ANR	9316799	Symbol	jobnr		9316600						
ANR	9316800	Symbol	num_jobs		9316600						
ANR	9316801	Symbol	avctx -> active_thread_type		9316600						
ANR	9316802	Symbol	s -> curframe		9316600						
ANR	9316803	Symbol	tdata		9316600						
ANR	9316804	Symbol	s -> mv_max . y		9316600						
ANR	9316805	Symbol	s -> num_jobs		9316600						
ANR	9316806	Symbol	s -> deblock_filter		9316600						
ANR	9316807	Symbol	INT_MAX		9316600						
ANR	9316808	Symbol	s -> mv_min . y		9316600						
ANR	9316809	Symbol	threadnr		9316600						
ANR	9316810	Symbol	avctx		9316600						
ANR	9316811	Symbol	s -> mv_max		9316600						
ANR	9316812	Symbol	NULL		9316600						
ANR	9316813	Symbol	s -> mb_height		9316600						
ANR	9316814	Symbol	next_td		9316600						
ANR	9316815	Symbol	avctx -> priv_data		9316600						
ANR	9316816	Symbol	td -> thread_mb_pos		9316600						
ANR	9316817	Symbol	s -> thread_data		9316600						
ANR	9316818	Symbol	td		9316600						
ANR	9316819	Symbol	s -> mv_min		9316600						
ANR	9316820	Symbol	* avctx		9316600						
ANR	9316821	Symbol	s		9316600						
ANR	9316822	Symbol	prev_td		9316600						
ANR	9316823	Symbol	* td		9316600						
ANR	9316824	Symbol	& curframe -> tf		9316600						
ANR	9316825	Symbol	mb_y		9316600						
ANR	9316826	Symbol	* s		9316600						
ANR	9316827	Symbol	FF_THREAD_FRAME		9316600						
