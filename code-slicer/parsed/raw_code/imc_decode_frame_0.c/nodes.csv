command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4818033	File	/home/p4ultr4n/workplace/ReVeal/raw_code/imc_decode_frame_0.c								
ANR	4818034	Function	imc_decode_frame	1:0:0:5549							
ANR	4818035	FunctionDef	"imc_decode_frame (AVCodecContext * avctx , void * data , int * data_size , AVPacket * avpkt)"		4818034	0					
ANR	4818036	CompoundStatement		7:0:156:5549	4818034	0					
ANR	4818037	IdentifierDeclStatement	const uint8_t * buf = avpkt -> data ;	9:4:163:195	4818034	0	True				
ANR	4818038	IdentifierDecl	* buf = avpkt -> data		4818034	0					
ANR	4818039	IdentifierDeclType	const uint8_t *		4818034	0					
ANR	4818040	Identifier	buf		4818034	1					
ANR	4818041	AssignmentExpression	* buf = avpkt -> data		4818034	2		=			
ANR	4818042	Identifier	buf		4818034	0					
ANR	4818043	PtrMemberAccess	avpkt -> data		4818034	1					
ANR	4818044	Identifier	avpkt		4818034	0					
ANR	4818045	Identifier	data		4818034	1					
ANR	4818046	IdentifierDeclStatement	int buf_size = avpkt -> size ;	11:4:202:228	4818034	1	True				
ANR	4818047	IdentifierDecl	buf_size = avpkt -> size		4818034	0					
ANR	4818048	IdentifierDeclType	int		4818034	0					
ANR	4818049	Identifier	buf_size		4818034	1					
ANR	4818050	AssignmentExpression	buf_size = avpkt -> size		4818034	2		=			
ANR	4818051	Identifier	buf_size		4818034	0					
ANR	4818052	PtrMemberAccess	avpkt -> size		4818034	1					
ANR	4818053	Identifier	avpkt		4818034	0					
ANR	4818054	Identifier	size		4818034	1					
ANR	4818055	IdentifierDeclStatement	IMCContext * q = avctx -> priv_data ;	15:4:237:269	4818034	2	True				
ANR	4818056	IdentifierDecl	* q = avctx -> priv_data		4818034	0					
ANR	4818057	IdentifierDeclType	IMCContext *		4818034	0					
ANR	4818058	Identifier	q		4818034	1					
ANR	4818059	AssignmentExpression	* q = avctx -> priv_data		4818034	2		=			
ANR	4818060	Identifier	q		4818034	0					
ANR	4818061	PtrMemberAccess	avctx -> priv_data		4818034	1					
ANR	4818062	Identifier	avctx		4818034	0					
ANR	4818063	Identifier	priv_data		4818034	1					
ANR	4818064	IdentifierDeclStatement	int stream_format_code ;	19:4:278:300	4818034	3	True				
ANR	4818065	IdentifierDecl	stream_format_code		4818034	0					
ANR	4818066	IdentifierDeclType	int		4818034	0					
ANR	4818067	Identifier	stream_format_code		4818034	1					
ANR	4818068	IdentifierDeclStatement	"int imc_hdr , i , j ;"	21:4:307:324	4818034	4	True				
ANR	4818069	IdentifierDecl	imc_hdr		4818034	0					
ANR	4818070	IdentifierDeclType	int		4818034	0					
ANR	4818071	Identifier	imc_hdr		4818034	1					
ANR	4818072	IdentifierDecl	i		4818034	1					
ANR	4818073	IdentifierDeclType	int		4818034	0					
ANR	4818074	Identifier	i		4818034	1					
ANR	4818075	IdentifierDecl	j		4818034	2					
ANR	4818076	IdentifierDeclType	int		4818034	0					
ANR	4818077	Identifier	j		4818034	1					
ANR	4818078	IdentifierDeclStatement	int flag ;	23:4:331:339	4818034	5	True				
ANR	4818079	IdentifierDecl	flag		4818034	0					
ANR	4818080	IdentifierDeclType	int		4818034	0					
ANR	4818081	Identifier	flag		4818034	1					
ANR	4818082	IdentifierDeclStatement	"int bits , summer ;"	25:4:346:362	4818034	6	True				
ANR	4818083	IdentifierDecl	bits		4818034	0					
ANR	4818084	IdentifierDeclType	int		4818034	0					
ANR	4818085	Identifier	bits		4818034	1					
ANR	4818086	IdentifierDecl	summer		4818034	1					
ANR	4818087	IdentifierDeclType	int		4818034	0					
ANR	4818088	Identifier	summer		4818034	1					
ANR	4818089	IdentifierDeclStatement	"int counter , bitscount ;"	27:4:369:391	4818034	7	True				
ANR	4818090	IdentifierDecl	counter		4818034	0					
ANR	4818091	IdentifierDeclType	int		4818034	0					
ANR	4818092	Identifier	counter		4818034	1					
ANR	4818093	IdentifierDecl	bitscount		4818034	1					
ANR	4818094	IdentifierDeclType	int		4818034	0					
ANR	4818095	Identifier	bitscount		4818034	1					
ANR	4818096	Statement	LOCAL_ALIGNED_16	29:4:398:413	4818034	8	True				
ANR	4818097	Statement	(	29:20:414:414	4818034	9	True				
ANR	4818098	Statement	uint16_t	29:21:415:422	4818034	10	True				
ANR	4818099	Statement	","	29:29:423:423	4818034	11	True				
ANR	4818100	Statement	buf16	29:31:425:429	4818034	12	True				
ANR	4818101	Statement	","	29:36:430:430	4818034	13	True				
ANR	4818102	Statement	[	29:38:432:432	4818034	14	True				
ANR	4818103	Statement	IMC_BLOCK_SIZE	29:39:433:446	4818034	15	True				
ANR	4818104	Statement	/	29:54:448:448	4818034	16	True				
ANR	4818105	Statement	2	29:56:450:450	4818034	17	True				
ANR	4818106	Statement	]	29:57:451:451	4818034	18	True				
ANR	4818107	Statement	)	29:58:452:452	4818034	19	True				
ANR	4818108	ExpressionStatement		29:59:453:453	4818034	20	True				
ANR	4818109	IfStatement	if ( buf_size < IMC_BLOCK_SIZE )		4818034	21					
ANR	4818110	Condition	buf_size < IMC_BLOCK_SIZE	33:8:466:490	4818034	0	True				
ANR	4818111	RelationalExpression	buf_size < IMC_BLOCK_SIZE		4818034	0		<			
ANR	4818112	Identifier	buf_size		4818034	0					
ANR	4818113	Identifier	IMC_BLOCK_SIZE		4818034	1					
ANR	4818114	CompoundStatement		27:35:336:336	4818034	1					
ANR	4818115	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""imc frame too small!\\n"" )"	35:8:504:557	4818034	0	True				
ANR	4818116	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""imc frame too small!\\n"" )"		4818034	0					
ANR	4818117	Callee	av_log		4818034	0					
ANR	4818118	Identifier	av_log		4818034	0					
ANR	4818119	ArgumentList	avctx		4818034	1					
ANR	4818120	Argument	avctx		4818034	0					
ANR	4818121	Identifier	avctx		4818034	0					
ANR	4818122	Argument	AV_LOG_ERROR		4818034	1					
ANR	4818123	Identifier	AV_LOG_ERROR		4818034	0					
ANR	4818124	Argument	"""imc frame too small!\\n"""		4818034	2					
ANR	4818125	PrimaryExpression	"""imc frame too small!\\n"""		4818034	0					
ANR	4818126	ReturnStatement	return - 1 ;	37:8:568:577	4818034	1	True				
ANR	4818127	UnaryOperationExpression	- 1		4818034	0					
ANR	4818128	UnaryOperator	-		4818034	0					
ANR	4818129	PrimaryExpression	1		4818034	1					
ANR	4818130	ExpressionStatement	"q -> dsp . bswap16_buf ( buf16 , ( const uint16_t * ) buf , IMC_BLOCK_SIZE / 2 )"	43:4:593:660	4818034	22	True				
ANR	4818131	CallExpression	"q -> dsp . bswap16_buf ( buf16 , ( const uint16_t * ) buf , IMC_BLOCK_SIZE / 2 )"		4818034	0					
ANR	4818132	Callee	q -> dsp . bswap16_buf		4818034	0					
ANR	4818133	MemberAccess	q -> dsp . bswap16_buf		4818034	0					
ANR	4818134	PtrMemberAccess	q -> dsp		4818034	0					
ANR	4818135	Identifier	q		4818034	0					
ANR	4818136	Identifier	dsp		4818034	1					
ANR	4818137	Identifier	bswap16_buf		4818034	1					
ANR	4818138	ArgumentList	buf16		4818034	1					
ANR	4818139	Argument	buf16		4818034	0					
ANR	4818140	Identifier	buf16		4818034	0					
ANR	4818141	Argument	( const uint16_t * ) buf		4818034	1					
ANR	4818142	CastExpression	( const uint16_t * ) buf		4818034	0					
ANR	4818143	CastTarget	const uint16_t *		4818034	0					
ANR	4818144	Identifier	buf		4818034	1					
ANR	4818145	Argument	IMC_BLOCK_SIZE / 2		4818034	2					
ANR	4818146	MultiplicativeExpression	IMC_BLOCK_SIZE / 2		4818034	0		/			
ANR	4818147	Identifier	IMC_BLOCK_SIZE		4818034	0					
ANR	4818148	PrimaryExpression	2		4818034	1					
ANR	4818149	ExpressionStatement	q -> out_samples = data	47:4:669:690	4818034	23	True				
ANR	4818150	AssignmentExpression	q -> out_samples = data		4818034	0		=			
ANR	4818151	PtrMemberAccess	q -> out_samples		4818034	0					
ANR	4818152	Identifier	q		4818034	0					
ANR	4818153	Identifier	out_samples		4818034	1					
ANR	4818154	Identifier	data		4818034	1					
ANR	4818155	ExpressionStatement	"init_get_bits ( & q -> gb , ( const uint8_t * ) buf16 , IMC_BLOCK_SIZE * 8 )"	49:4:697:761	4818034	24	True				
ANR	4818156	CallExpression	"init_get_bits ( & q -> gb , ( const uint8_t * ) buf16 , IMC_BLOCK_SIZE * 8 )"		4818034	0					
ANR	4818157	Callee	init_get_bits		4818034	0					
ANR	4818158	Identifier	init_get_bits		4818034	0					
ANR	4818159	ArgumentList	& q -> gb		4818034	1					
ANR	4818160	Argument	& q -> gb		4818034	0					
ANR	4818161	UnaryOperationExpression	& q -> gb		4818034	0					
ANR	4818162	UnaryOperator	&		4818034	0					
ANR	4818163	PtrMemberAccess	q -> gb		4818034	1					
ANR	4818164	Identifier	q		4818034	0					
ANR	4818165	Identifier	gb		4818034	1					
ANR	4818166	Argument	( const uint8_t * ) buf16		4818034	1					
ANR	4818167	CastExpression	( const uint8_t * ) buf16		4818034	0					
ANR	4818168	CastTarget	const uint8_t *		4818034	0					
ANR	4818169	Identifier	buf16		4818034	1					
ANR	4818170	Argument	IMC_BLOCK_SIZE * 8		4818034	2					
ANR	4818171	MultiplicativeExpression	IMC_BLOCK_SIZE * 8		4818034	0		*			
ANR	4818172	Identifier	IMC_BLOCK_SIZE		4818034	0					
ANR	4818173	PrimaryExpression	8		4818034	1					
ANR	4818174	ExpressionStatement	"imc_hdr = get_bits ( & q -> gb , 9 )"	55:4:804:833	4818034	25	True				
ANR	4818175	AssignmentExpression	"imc_hdr = get_bits ( & q -> gb , 9 )"		4818034	0		=			
ANR	4818176	Identifier	imc_hdr		4818034	0					
ANR	4818177	CallExpression	"get_bits ( & q -> gb , 9 )"		4818034	1					
ANR	4818178	Callee	get_bits		4818034	0					
ANR	4818179	Identifier	get_bits		4818034	0					
ANR	4818180	ArgumentList	& q -> gb		4818034	1					
ANR	4818181	Argument	& q -> gb		4818034	0					
ANR	4818182	UnaryOperationExpression	& q -> gb		4818034	0					
ANR	4818183	UnaryOperator	&		4818034	0					
ANR	4818184	PtrMemberAccess	q -> gb		4818034	1					
ANR	4818185	Identifier	q		4818034	0					
ANR	4818186	Identifier	gb		4818034	1					
ANR	4818187	Argument	9		4818034	1					
ANR	4818188	PrimaryExpression	9		4818034	0					
ANR	4818189	IfStatement	if ( imc_hdr != IMC_FRAME_ID )		4818034	26					
ANR	4818190	Condition	imc_hdr != IMC_FRAME_ID	57:8:844:866	4818034	0	True				
ANR	4818191	EqualityExpression	imc_hdr != IMC_FRAME_ID		4818034	0		!=			
ANR	4818192	Identifier	imc_hdr		4818034	0					
ANR	4818193	Identifier	IMC_FRAME_ID		4818034	1					
ANR	4818194	CompoundStatement		51:33:712:712	4818034	1					
ANR	4818195	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""imc frame header check failed!\\n"" )"	59:8:880:943	4818034	0	True				
ANR	4818196	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""imc frame header check failed!\\n"" )"		4818034	0					
ANR	4818197	Callee	av_log		4818034	0					
ANR	4818198	Identifier	av_log		4818034	0					
ANR	4818199	ArgumentList	avctx		4818034	1					
ANR	4818200	Argument	avctx		4818034	0					
ANR	4818201	Identifier	avctx		4818034	0					
ANR	4818202	Argument	AV_LOG_ERROR		4818034	1					
ANR	4818203	Identifier	AV_LOG_ERROR		4818034	0					
ANR	4818204	Argument	"""imc frame header check failed!\\n"""		4818034	2					
ANR	4818205	PrimaryExpression	"""imc frame header check failed!\\n"""		4818034	0					
ANR	4818206	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""got %x instead of 0x21.\\n"" , imc_hdr )"	61:8:954:1019	4818034	1	True				
ANR	4818207	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""got %x instead of 0x21.\\n"" , imc_hdr )"		4818034	0					
ANR	4818208	Callee	av_log		4818034	0					
ANR	4818209	Identifier	av_log		4818034	0					
ANR	4818210	ArgumentList	avctx		4818034	1					
ANR	4818211	Argument	avctx		4818034	0					
ANR	4818212	Identifier	avctx		4818034	0					
ANR	4818213	Argument	AV_LOG_ERROR		4818034	1					
ANR	4818214	Identifier	AV_LOG_ERROR		4818034	0					
ANR	4818215	Argument	"""got %x instead of 0x21.\\n"""		4818034	2					
ANR	4818216	PrimaryExpression	"""got %x instead of 0x21.\\n"""		4818034	0					
ANR	4818217	Argument	imc_hdr		4818034	3					
ANR	4818218	Identifier	imc_hdr		4818034	0					
ANR	4818219	ReturnStatement	return - 1 ;	63:8:1030:1039	4818034	2	True				
ANR	4818220	UnaryOperationExpression	- 1		4818034	0					
ANR	4818221	UnaryOperator	-		4818034	0					
ANR	4818222	PrimaryExpression	1		4818034	1					
ANR	4818223	ExpressionStatement	"stream_format_code = get_bits ( & q -> gb , 3 )"	67:4:1053:1093	4818034	27	True				
ANR	4818224	AssignmentExpression	"stream_format_code = get_bits ( & q -> gb , 3 )"		4818034	0		=			
ANR	4818225	Identifier	stream_format_code		4818034	0					
ANR	4818226	CallExpression	"get_bits ( & q -> gb , 3 )"		4818034	1					
ANR	4818227	Callee	get_bits		4818034	0					
ANR	4818228	Identifier	get_bits		4818034	0					
ANR	4818229	ArgumentList	& q -> gb		4818034	1					
ANR	4818230	Argument	& q -> gb		4818034	0					
ANR	4818231	UnaryOperationExpression	& q -> gb		4818034	0					
ANR	4818232	UnaryOperator	&		4818034	0					
ANR	4818233	PtrMemberAccess	q -> gb		4818034	1					
ANR	4818234	Identifier	q		4818034	0					
ANR	4818235	Identifier	gb		4818034	1					
ANR	4818236	Argument	3		4818034	1					
ANR	4818237	PrimaryExpression	3		4818034	0					
ANR	4818238	IfStatement	if ( stream_format_code & 1 )		4818034	28					
ANR	4818239	Condition	stream_format_code & 1	71:7:1105:1126	4818034	0	True				
ANR	4818240	BitAndExpression	stream_format_code & 1		4818034	0		&			
ANR	4818241	Identifier	stream_format_code		4818034	0					
ANR	4818242	PrimaryExpression	1		4818034	1					
ANR	4818243	CompoundStatement		65:30:971:971	4818034	1					
ANR	4818244	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Stream code format %X is not supported\\n"" , stream_format_code )"	73:8:1139:1230	4818034	0	True				
ANR	4818245	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Stream code format %X is not supported\\n"" , stream_format_code )"		4818034	0					
ANR	4818246	Callee	av_log		4818034	0					
ANR	4818247	Identifier	av_log		4818034	0					
ANR	4818248	ArgumentList	avctx		4818034	1					
ANR	4818249	Argument	avctx		4818034	0					
ANR	4818250	Identifier	avctx		4818034	0					
ANR	4818251	Argument	AV_LOG_ERROR		4818034	1					
ANR	4818252	Identifier	AV_LOG_ERROR		4818034	0					
ANR	4818253	Argument	"""Stream code format %X is not supported\\n"""		4818034	2					
ANR	4818254	PrimaryExpression	"""Stream code format %X is not supported\\n"""		4818034	0					
ANR	4818255	Argument	stream_format_code		4818034	3					
ANR	4818256	Identifier	stream_format_code		4818034	0					
ANR	4818257	ReturnStatement	return - 1 ;	75:8:1241:1250	4818034	1	True				
ANR	4818258	UnaryOperationExpression	- 1		4818034	0					
ANR	4818259	UnaryOperator	-		4818034	0					
ANR	4818260	PrimaryExpression	1		4818034	1					
ANR	4818261	IfStatement	if ( stream_format_code & 0x04 )		4818034	29					
ANR	4818262	Condition	stream_format_code & 0x04	85:8:1357:1381	4818034	0	True				
ANR	4818263	BitAndExpression	stream_format_code & 0x04		4818034	0		&			
ANR	4818264	Identifier	stream_format_code		4818034	0					
ANR	4818265	PrimaryExpression	0x04		4818034	1					
ANR	4818266	ExpressionStatement	q -> decoder_reset = 1	87:8:1393:1413	4818034	1	True				
ANR	4818267	AssignmentExpression	q -> decoder_reset = 1		4818034	0		=			
ANR	4818268	PtrMemberAccess	q -> decoder_reset		4818034	0					
ANR	4818269	Identifier	q		4818034	0					
ANR	4818270	Identifier	decoder_reset		4818034	1					
ANR	4818271	PrimaryExpression	1		4818034	1					
ANR	4818272	IfStatement	if ( q -> decoder_reset )		4818034	30					
ANR	4818273	Condition	q -> decoder_reset	91:7:1425:1440	4818034	0	True				
ANR	4818274	PtrMemberAccess	q -> decoder_reset		4818034	0					
ANR	4818275	Identifier	q		4818034	0					
ANR	4818276	Identifier	decoder_reset		4818034	1					
ANR	4818277	CompoundStatement		85:25:1286:1286	4818034	1					
ANR	4818278	ExpressionStatement	"memset ( q -> out_samples , 0 , sizeof ( q -> out_samples ) )"	93:8:1454:1503	4818034	0	True				
ANR	4818279	CallExpression	"memset ( q -> out_samples , 0 , sizeof ( q -> out_samples ) )"		4818034	0					
ANR	4818280	Callee	memset		4818034	0					
ANR	4818281	Identifier	memset		4818034	0					
ANR	4818282	ArgumentList	q -> out_samples		4818034	1					
ANR	4818283	Argument	q -> out_samples		4818034	0					
ANR	4818284	PtrMemberAccess	q -> out_samples		4818034	0					
ANR	4818285	Identifier	q		4818034	0					
ANR	4818286	Identifier	out_samples		4818034	1					
ANR	4818287	Argument	0		4818034	1					
ANR	4818288	PrimaryExpression	0		4818034	0					
ANR	4818289	Argument	sizeof ( q -> out_samples )		4818034	2					
ANR	4818290	SizeofExpression	sizeof ( q -> out_samples )		4818034	0					
ANR	4818291	Sizeof	sizeof		4818034	0					
ANR	4818292	PtrMemberAccess	q -> out_samples		4818034	1					
ANR	4818293	Identifier	q		4818034	0					
ANR	4818294	Identifier	out_samples		4818034	1					
ANR	4818295	ForStatement	for ( i = 0 ; i < BANDS ; i ++ )		4818034	1					
ANR	4818296	ForInit	i = 0 ;	95:12:1518:1523	4818034	0	True				
ANR	4818297	AssignmentExpression	i = 0		4818034	0		=			
ANR	4818298	Identifier	i		4818034	0					
ANR	4818299	PrimaryExpression	0		4818034	1					
ANR	4818300	Condition	i < BANDS	95:19:1525:1533	4818034	1	True				
ANR	4818301	RelationalExpression	i < BANDS		4818034	0		<			
ANR	4818302	Identifier	i		4818034	0					
ANR	4818303	Identifier	BANDS		4818034	1					
ANR	4818304	PostIncDecOperationExpression	i ++	95:30:1536:1538	4818034	2	True				
ANR	4818305	Identifier	i		4818034	0					
ANR	4818306	IncDec	++		4818034	1					
ANR	4818307	ExpressionStatement	q -> old_floor [ i ] = 1.0	95:34:1540:1561	4818034	3	True				
ANR	4818308	AssignmentExpression	q -> old_floor [ i ] = 1.0		4818034	0		=			
ANR	4818309	ArrayIndexing	q -> old_floor [ i ]		4818034	0					
ANR	4818310	PtrMemberAccess	q -> old_floor		4818034	0					
ANR	4818311	Identifier	q		4818034	0					
ANR	4818312	Identifier	old_floor		4818034	1					
ANR	4818313	Identifier	i		4818034	1					
ANR	4818314	PrimaryExpression	1.0		4818034	1					
ANR	4818315	ForStatement	for ( i = 0 ; i < COEFFS ; i ++ )		4818034	2					
ANR	4818316	ForInit	i = 0 ;	97:12:1576:1581	4818034	0	True				
ANR	4818317	AssignmentExpression	i = 0		4818034	0		=			
ANR	4818318	Identifier	i		4818034	0					
ANR	4818319	PrimaryExpression	0		4818034	1					
ANR	4818320	Condition	i < COEFFS	97:19:1583:1592	4818034	1	True				
ANR	4818321	RelationalExpression	i < COEFFS		4818034	0		<			
ANR	4818322	Identifier	i		4818034	0					
ANR	4818323	Identifier	COEFFS		4818034	1					
ANR	4818324	PostIncDecOperationExpression	i ++	97:31:1595:1597	4818034	2	True				
ANR	4818325	Identifier	i		4818034	0					
ANR	4818326	IncDec	++		4818034	1					
ANR	4818327	ExpressionStatement	q -> CWdecoded [ i ] = 0	97:35:1599:1618	4818034	3	True				
ANR	4818328	AssignmentExpression	q -> CWdecoded [ i ] = 0		4818034	0		=			
ANR	4818329	ArrayIndexing	q -> CWdecoded [ i ]		4818034	0					
ANR	4818330	PtrMemberAccess	q -> CWdecoded		4818034	0					
ANR	4818331	Identifier	q		4818034	0					
ANR	4818332	Identifier	CWdecoded		4818034	1					
ANR	4818333	Identifier	i		4818034	1					
ANR	4818334	PrimaryExpression	0		4818034	1					
ANR	4818335	ExpressionStatement	q -> decoder_reset = 0	99:8:1629:1649	4818034	3	True				
ANR	4818336	AssignmentExpression	q -> decoder_reset = 0		4818034	0		=			
ANR	4818337	PtrMemberAccess	q -> decoder_reset		4818034	0					
ANR	4818338	Identifier	q		4818034	0					
ANR	4818339	Identifier	decoder_reset		4818034	1					
ANR	4818340	PrimaryExpression	0		4818034	1					
ANR	4818341	ExpressionStatement	flag = get_bits1 ( & q -> gb )	105:4:1665:1689	4818034	31	True				
ANR	4818342	AssignmentExpression	flag = get_bits1 ( & q -> gb )		4818034	0		=			
ANR	4818343	Identifier	flag		4818034	0					
ANR	4818344	CallExpression	get_bits1 ( & q -> gb )		4818034	1					
ANR	4818345	Callee	get_bits1		4818034	0					
ANR	4818346	Identifier	get_bits1		4818034	0					
ANR	4818347	ArgumentList	& q -> gb		4818034	1					
ANR	4818348	Argument	& q -> gb		4818034	0					
ANR	4818349	UnaryOperationExpression	& q -> gb		4818034	0					
ANR	4818350	UnaryOperator	&		4818034	0					
ANR	4818351	PtrMemberAccess	q -> gb		4818034	1					
ANR	4818352	Identifier	q		4818034	0					
ANR	4818353	Identifier	gb		4818034	1					
ANR	4818354	ExpressionStatement	"imc_read_level_coeffs ( q , stream_format_code , q -> levlCoeffBuf )"	107:4:1696:1757	4818034	32	True				
ANR	4818355	CallExpression	"imc_read_level_coeffs ( q , stream_format_code , q -> levlCoeffBuf )"		4818034	0					
ANR	4818356	Callee	imc_read_level_coeffs		4818034	0					
ANR	4818357	Identifier	imc_read_level_coeffs		4818034	0					
ANR	4818358	ArgumentList	q		4818034	1					
ANR	4818359	Argument	q		4818034	0					
ANR	4818360	Identifier	q		4818034	0					
ANR	4818361	Argument	stream_format_code		4818034	1					
ANR	4818362	Identifier	stream_format_code		4818034	0					
ANR	4818363	Argument	q -> levlCoeffBuf		4818034	2					
ANR	4818364	PtrMemberAccess	q -> levlCoeffBuf		4818034	0					
ANR	4818365	Identifier	q		4818034	0					
ANR	4818366	Identifier	levlCoeffBuf		4818034	1					
ANR	4818367	IfStatement	if ( stream_format_code & 0x4 )		4818034	33					
ANR	4818368	Condition	stream_format_code & 0x4	111:8:1770:1793	4818034	0	True				
ANR	4818369	BitAndExpression	stream_format_code & 0x4		4818034	0		&			
ANR	4818370	Identifier	stream_format_code		4818034	0					
ANR	4818371	PrimaryExpression	0x4		4818034	1					
ANR	4818372	ExpressionStatement	"imc_decode_level_coefficients ( q , q -> levlCoeffBuf , q -> flcoeffs1 , q -> flcoeffs2 )"	113:8:1805:1882	4818034	1	True				
ANR	4818373	CallExpression	"imc_decode_level_coefficients ( q , q -> levlCoeffBuf , q -> flcoeffs1 , q -> flcoeffs2 )"		4818034	0					
ANR	4818374	Callee	imc_decode_level_coefficients		4818034	0					
ANR	4818375	Identifier	imc_decode_level_coefficients		4818034	0					
ANR	4818376	ArgumentList	q		4818034	1					
ANR	4818377	Argument	q		4818034	0					
ANR	4818378	Identifier	q		4818034	0					
ANR	4818379	Argument	q -> levlCoeffBuf		4818034	1					
ANR	4818380	PtrMemberAccess	q -> levlCoeffBuf		4818034	0					
ANR	4818381	Identifier	q		4818034	0					
ANR	4818382	Identifier	levlCoeffBuf		4818034	1					
ANR	4818383	Argument	q -> flcoeffs1		4818034	2					
ANR	4818384	PtrMemberAccess	q -> flcoeffs1		4818034	0					
ANR	4818385	Identifier	q		4818034	0					
ANR	4818386	Identifier	flcoeffs1		4818034	1					
ANR	4818387	Argument	q -> flcoeffs2		4818034	3					
ANR	4818388	PtrMemberAccess	q -> flcoeffs2		4818034	0					
ANR	4818389	Identifier	q		4818034	0					
ANR	4818390	Identifier	flcoeffs2		4818034	1					
ANR	4818391	ElseStatement	else		4818034	0					
ANR	4818392	ExpressionStatement	"imc_decode_level_coefficients2 ( q , q -> levlCoeffBuf , q -> old_floor , q -> flcoeffs1 , q -> flcoeffs2 )"	117:8:1903:1995	4818034	0	True				
ANR	4818393	CallExpression	"imc_decode_level_coefficients2 ( q , q -> levlCoeffBuf , q -> old_floor , q -> flcoeffs1 , q -> flcoeffs2 )"		4818034	0					
ANR	4818394	Callee	imc_decode_level_coefficients2		4818034	0					
ANR	4818395	Identifier	imc_decode_level_coefficients2		4818034	0					
ANR	4818396	ArgumentList	q		4818034	1					
ANR	4818397	Argument	q		4818034	0					
ANR	4818398	Identifier	q		4818034	0					
ANR	4818399	Argument	q -> levlCoeffBuf		4818034	1					
ANR	4818400	PtrMemberAccess	q -> levlCoeffBuf		4818034	0					
ANR	4818401	Identifier	q		4818034	0					
ANR	4818402	Identifier	levlCoeffBuf		4818034	1					
ANR	4818403	Argument	q -> old_floor		4818034	2					
ANR	4818404	PtrMemberAccess	q -> old_floor		4818034	0					
ANR	4818405	Identifier	q		4818034	0					
ANR	4818406	Identifier	old_floor		4818034	1					
ANR	4818407	Argument	q -> flcoeffs1		4818034	3					
ANR	4818408	PtrMemberAccess	q -> flcoeffs1		4818034	0					
ANR	4818409	Identifier	q		4818034	0					
ANR	4818410	Identifier	flcoeffs1		4818034	1					
ANR	4818411	Argument	q -> flcoeffs2		4818034	4					
ANR	4818412	PtrMemberAccess	q -> flcoeffs2		4818034	0					
ANR	4818413	Identifier	q		4818034	0					
ANR	4818414	Identifier	flcoeffs2		4818034	1					
ANR	4818415	ExpressionStatement	"memcpy ( q -> old_floor , q -> flcoeffs1 , 32 * sizeof ( float ) )"	121:4:2004:2058	4818034	34	True				
ANR	4818416	CallExpression	"memcpy ( q -> old_floor , q -> flcoeffs1 , 32 * sizeof ( float ) )"		4818034	0					
ANR	4818417	Callee	memcpy		4818034	0					
ANR	4818418	Identifier	memcpy		4818034	0					
ANR	4818419	ArgumentList	q -> old_floor		4818034	1					
ANR	4818420	Argument	q -> old_floor		4818034	0					
ANR	4818421	PtrMemberAccess	q -> old_floor		4818034	0					
ANR	4818422	Identifier	q		4818034	0					
ANR	4818423	Identifier	old_floor		4818034	1					
ANR	4818424	Argument	q -> flcoeffs1		4818034	1					
ANR	4818425	PtrMemberAccess	q -> flcoeffs1		4818034	0					
ANR	4818426	Identifier	q		4818034	0					
ANR	4818427	Identifier	flcoeffs1		4818034	1					
ANR	4818428	Argument	32 * sizeof ( float )		4818034	2					
ANR	4818429	MultiplicativeExpression	32 * sizeof ( float )		4818034	0		*			
ANR	4818430	PrimaryExpression	32		4818034	0					
ANR	4818431	SizeofExpression	sizeof ( float )		4818034	1					
ANR	4818432	Sizeof	sizeof		4818034	0					
ANR	4818433	SizeofOperand	float		4818034	1					
ANR	4818434	ExpressionStatement	counter = 0	125:4:2067:2078	4818034	35	True				
ANR	4818435	AssignmentExpression	counter = 0		4818034	0		=			
ANR	4818436	Identifier	counter		4818034	0					
ANR	4818437	PrimaryExpression	0		4818034	1					
ANR	4818438	ForStatement	for ( i = 0 ; i < BANDS ; i ++ )		4818034	36					
ANR	4818439	ForInit	i = 0 ;	127:9:2090:2094	4818034	0	True				
ANR	4818440	AssignmentExpression	i = 0		4818034	0		=			
ANR	4818441	Identifier	i		4818034	0					
ANR	4818442	PrimaryExpression	0		4818034	1					
ANR	4818443	Condition	i < BANDS	127:15:2096:2102	4818034	1	True				
ANR	4818444	RelationalExpression	i < BANDS		4818034	0		<			
ANR	4818445	Identifier	i		4818034	0					
ANR	4818446	Identifier	BANDS		4818034	1					
ANR	4818447	PostIncDecOperationExpression	i ++	127:25:2106:2108	4818034	2	True				
ANR	4818448	Identifier	i		4818034	0					
ANR	4818449	IncDec	++		4818034	1					
ANR	4818450	CompoundStatement		121:30:1954:1954	4818034	3					
ANR	4818451	IfStatement	if ( q -> levlCoeffBuf [ i ] == 16 )		4818034	0					
ANR	4818452	Condition	q -> levlCoeffBuf [ i ] == 16	129:12:2126:2149	4818034	0	True				
ANR	4818453	EqualityExpression	q -> levlCoeffBuf [ i ] == 16		4818034	0		==			
ANR	4818454	ArrayIndexing	q -> levlCoeffBuf [ i ]		4818034	0					
ANR	4818455	PtrMemberAccess	q -> levlCoeffBuf		4818034	0					
ANR	4818456	Identifier	q		4818034	0					
ANR	4818457	Identifier	levlCoeffBuf		4818034	1					
ANR	4818458	Identifier	i		4818034	1					
ANR	4818459	PrimaryExpression	16		4818034	1					
ANR	4818460	CompoundStatement		123:38:1995:1995	4818034	1					
ANR	4818461	ExpressionStatement	q -> bandWidthT [ i ] = 0	131:12:2167:2187	4818034	0	True				
ANR	4818462	AssignmentExpression	q -> bandWidthT [ i ] = 0		4818034	0		=			
ANR	4818463	ArrayIndexing	q -> bandWidthT [ i ]		4818034	0					
ANR	4818464	PtrMemberAccess	q -> bandWidthT		4818034	0					
ANR	4818465	Identifier	q		4818034	0					
ANR	4818466	Identifier	bandWidthT		4818034	1					
ANR	4818467	Identifier	i		4818034	1					
ANR	4818468	PrimaryExpression	0		4818034	1					
ANR	4818469	ExpressionStatement	counter ++	133:12:2202:2211	4818034	1	True				
ANR	4818470	PostIncDecOperationExpression	counter ++		4818034	0					
ANR	4818471	Identifier	counter		4818034	0					
ANR	4818472	IncDec	++		4818034	1					
ANR	4818473	ElseStatement	else		4818034	0					
ANR	4818474	ExpressionStatement	q -> bandWidthT [ i ] = band_tab [ i + 1 ] - band_tab [ i ]	137:12:2242:2288	4818034	0	True				
ANR	4818475	AssignmentExpression	q -> bandWidthT [ i ] = band_tab [ i + 1 ] - band_tab [ i ]		4818034	0		=			
ANR	4818476	ArrayIndexing	q -> bandWidthT [ i ]		4818034	0					
ANR	4818477	PtrMemberAccess	q -> bandWidthT		4818034	0					
ANR	4818478	Identifier	q		4818034	0					
ANR	4818479	Identifier	bandWidthT		4818034	1					
ANR	4818480	Identifier	i		4818034	1					
ANR	4818481	AdditiveExpression	band_tab [ i + 1 ] - band_tab [ i ]		4818034	1		-			
ANR	4818482	ArrayIndexing	band_tab [ i + 1 ]		4818034	0					
ANR	4818483	Identifier	band_tab		4818034	0					
ANR	4818484	AdditiveExpression	i + 1		4818034	1		+			
ANR	4818485	Identifier	i		4818034	0					
ANR	4818486	PrimaryExpression	1		4818034	1					
ANR	4818487	ArrayIndexing	band_tab [ i ]		4818034	1					
ANR	4818488	Identifier	band_tab		4818034	0					
ANR	4818489	Identifier	i		4818034	1					
ANR	4818490	ExpressionStatement	"memset ( q -> bandFlagsBuf , 0 , BANDS * sizeof ( int ) )"	141:4:2302:2349	4818034	37	True				
ANR	4818491	CallExpression	"memset ( q -> bandFlagsBuf , 0 , BANDS * sizeof ( int ) )"		4818034	0					
ANR	4818492	Callee	memset		4818034	0					
ANR	4818493	Identifier	memset		4818034	0					
ANR	4818494	ArgumentList	q -> bandFlagsBuf		4818034	1					
ANR	4818495	Argument	q -> bandFlagsBuf		4818034	0					
ANR	4818496	PtrMemberAccess	q -> bandFlagsBuf		4818034	0					
ANR	4818497	Identifier	q		4818034	0					
ANR	4818498	Identifier	bandFlagsBuf		4818034	1					
ANR	4818499	Argument	0		4818034	1					
ANR	4818500	PrimaryExpression	0		4818034	0					
ANR	4818501	Argument	BANDS * sizeof ( int )		4818034	2					
ANR	4818502	MultiplicativeExpression	BANDS * sizeof ( int )		4818034	0		*			
ANR	4818503	Identifier	BANDS		4818034	0					
ANR	4818504	SizeofExpression	sizeof ( int )		4818034	1					
ANR	4818505	Sizeof	sizeof		4818034	0					
ANR	4818506	SizeofOperand	int		4818034	1					
ANR	4818507	ForStatement	for ( i = 0 ; i < BANDS - 1 ; i ++ )		4818034	38					
ANR	4818508	ForInit	i = 0 ;	143:8:2360:2365	4818034	0	True				
ANR	4818509	AssignmentExpression	i = 0		4818034	0		=			
ANR	4818510	Identifier	i		4818034	0					
ANR	4818511	PrimaryExpression	0		4818034	1					
ANR	4818512	Condition	i < BANDS - 1	143:15:2367:2377	4818034	1	True				
ANR	4818513	RelationalExpression	i < BANDS - 1		4818034	0		<			
ANR	4818514	Identifier	i		4818034	0					
ANR	4818515	AdditiveExpression	BANDS - 1		4818034	1		-			
ANR	4818516	Identifier	BANDS		4818034	0					
ANR	4818517	PrimaryExpression	1		4818034	1					
ANR	4818518	PostIncDecOperationExpression	i ++	143:28:2380:2382	4818034	2	True				
ANR	4818519	Identifier	i		4818034	0					
ANR	4818520	IncDec	++		4818034	1					
ANR	4818521	CompoundStatement		137:33:2228:2228	4818034	3					
ANR	4818522	IfStatement	if ( q -> bandWidthT [ i ] )		4818034	0					
ANR	4818523	Condition	q -> bandWidthT [ i ]	145:12:2400:2415	4818034	0	True				
ANR	4818524	ArrayIndexing	q -> bandWidthT [ i ]		4818034	0					
ANR	4818525	PtrMemberAccess	q -> bandWidthT		4818034	0					
ANR	4818526	Identifier	q		4818034	0					
ANR	4818527	Identifier	bandWidthT		4818034	1					
ANR	4818528	Identifier	i		4818034	1					
ANR	4818529	ExpressionStatement	q -> bandFlagsBuf [ i ] = get_bits1 ( & q -> gb )	147:12:2431:2469	4818034	1	True				
ANR	4818530	AssignmentExpression	q -> bandFlagsBuf [ i ] = get_bits1 ( & q -> gb )		4818034	0		=			
ANR	4818531	ArrayIndexing	q -> bandFlagsBuf [ i ]		4818034	0					
ANR	4818532	PtrMemberAccess	q -> bandFlagsBuf		4818034	0					
ANR	4818533	Identifier	q		4818034	0					
ANR	4818534	Identifier	bandFlagsBuf		4818034	1					
ANR	4818535	Identifier	i		4818034	1					
ANR	4818536	CallExpression	get_bits1 ( & q -> gb )		4818034	1					
ANR	4818537	Callee	get_bits1		4818034	0					
ANR	4818538	Identifier	get_bits1		4818034	0					
ANR	4818539	ArgumentList	& q -> gb		4818034	1					
ANR	4818540	Argument	& q -> gb		4818034	0					
ANR	4818541	UnaryOperationExpression	& q -> gb		4818034	0					
ANR	4818542	UnaryOperator	&		4818034	0					
ANR	4818543	PtrMemberAccess	q -> gb		4818034	1					
ANR	4818544	Identifier	q		4818034	0					
ANR	4818545	Identifier	gb		4818034	1					
ANR	4818546	ExpressionStatement	"imc_calculate_coeffs ( q , q -> flcoeffs1 , q -> flcoeffs2 , q -> bandWidthT , q -> flcoeffs3 , q -> flcoeffs5 )"	153:4:2485:2579	4818034	39	True				
ANR	4818547	CallExpression	"imc_calculate_coeffs ( q , q -> flcoeffs1 , q -> flcoeffs2 , q -> bandWidthT , q -> flcoeffs3 , q -> flcoeffs5 )"		4818034	0					
ANR	4818548	Callee	imc_calculate_coeffs		4818034	0					
ANR	4818549	Identifier	imc_calculate_coeffs		4818034	0					
ANR	4818550	ArgumentList	q		4818034	1					
ANR	4818551	Argument	q		4818034	0					
ANR	4818552	Identifier	q		4818034	0					
ANR	4818553	Argument	q -> flcoeffs1		4818034	1					
ANR	4818554	PtrMemberAccess	q -> flcoeffs1		4818034	0					
ANR	4818555	Identifier	q		4818034	0					
ANR	4818556	Identifier	flcoeffs1		4818034	1					
ANR	4818557	Argument	q -> flcoeffs2		4818034	2					
ANR	4818558	PtrMemberAccess	q -> flcoeffs2		4818034	0					
ANR	4818559	Identifier	q		4818034	0					
ANR	4818560	Identifier	flcoeffs2		4818034	1					
ANR	4818561	Argument	q -> bandWidthT		4818034	3					
ANR	4818562	PtrMemberAccess	q -> bandWidthT		4818034	0					
ANR	4818563	Identifier	q		4818034	0					
ANR	4818564	Identifier	bandWidthT		4818034	1					
ANR	4818565	Argument	q -> flcoeffs3		4818034	4					
ANR	4818566	PtrMemberAccess	q -> flcoeffs3		4818034	0					
ANR	4818567	Identifier	q		4818034	0					
ANR	4818568	Identifier	flcoeffs3		4818034	1					
ANR	4818569	Argument	q -> flcoeffs5		4818034	5					
ANR	4818570	PtrMemberAccess	q -> flcoeffs5		4818034	0					
ANR	4818571	Identifier	q		4818034	0					
ANR	4818572	Identifier	flcoeffs5		4818034	1					
ANR	4818573	ExpressionStatement	bitscount = 0	157:4:2588:2601	4818034	40	True				
ANR	4818574	AssignmentExpression	bitscount = 0		4818034	0		=			
ANR	4818575	Identifier	bitscount		4818034	0					
ANR	4818576	PrimaryExpression	0		4818034	1					
ANR	4818577	IfStatement	if ( stream_format_code & 0x2 )		4818034	41					
ANR	4818578	Condition	stream_format_code & 0x2	161:8:2677:2700	4818034	0	True				
ANR	4818579	BitAndExpression	stream_format_code & 0x2		4818034	0		&			
ANR	4818580	Identifier	stream_format_code		4818034	0					
ANR	4818581	PrimaryExpression	0x2		4818034	1					
ANR	4818582	CompoundStatement		155:34:2546:2546	4818034	1					
ANR	4818583	ExpressionStatement	bitscount += 15	163:8:2714:2729	4818034	0	True				
ANR	4818584	AssignmentExpression	bitscount += 15		4818034	0		+=			
ANR	4818585	Identifier	bitscount		4818034	0					
ANR	4818586	PrimaryExpression	15		4818034	1					
ANR	4818587	ExpressionStatement	q -> bitsBandT [ 0 ] = 5	167:8:2742:2761	4818034	1	True				
ANR	4818588	AssignmentExpression	q -> bitsBandT [ 0 ] = 5		4818034	0		=			
ANR	4818589	ArrayIndexing	q -> bitsBandT [ 0 ]		4818034	0					
ANR	4818590	PtrMemberAccess	q -> bitsBandT		4818034	0					
ANR	4818591	Identifier	q		4818034	0					
ANR	4818592	Identifier	bitsBandT		4818034	1					
ANR	4818593	PrimaryExpression	0		4818034	1					
ANR	4818594	PrimaryExpression	5		4818034	1					
ANR	4818595	ExpressionStatement	q -> CWlengthT [ 0 ] = 5	169:8:2772:2791	4818034	2	True				
ANR	4818596	AssignmentExpression	q -> CWlengthT [ 0 ] = 5		4818034	0		=			
ANR	4818597	ArrayIndexing	q -> CWlengthT [ 0 ]		4818034	0					
ANR	4818598	PtrMemberAccess	q -> CWlengthT		4818034	0					
ANR	4818599	Identifier	q		4818034	0					
ANR	4818600	Identifier	CWlengthT		4818034	1					
ANR	4818601	PrimaryExpression	0		4818034	1					
ANR	4818602	PrimaryExpression	5		4818034	1					
ANR	4818603	ExpressionStatement	q -> CWlengthT [ 1 ] = 5	171:8:2802:2821	4818034	3	True				
ANR	4818604	AssignmentExpression	q -> CWlengthT [ 1 ] = 5		4818034	0		=			
ANR	4818605	ArrayIndexing	q -> CWlengthT [ 1 ]		4818034	0					
ANR	4818606	PtrMemberAccess	q -> CWlengthT		4818034	0					
ANR	4818607	Identifier	q		4818034	0					
ANR	4818608	Identifier	CWlengthT		4818034	1					
ANR	4818609	PrimaryExpression	1		4818034	1					
ANR	4818610	PrimaryExpression	5		4818034	1					
ANR	4818611	ExpressionStatement	q -> CWlengthT [ 2 ] = 5	173:8:2832:2851	4818034	4	True				
ANR	4818612	AssignmentExpression	q -> CWlengthT [ 2 ] = 5		4818034	0		=			
ANR	4818613	ArrayIndexing	q -> CWlengthT [ 2 ]		4818034	0					
ANR	4818614	PtrMemberAccess	q -> CWlengthT		4818034	0					
ANR	4818615	Identifier	q		4818034	0					
ANR	4818616	Identifier	CWlengthT		4818034	1					
ANR	4818617	PrimaryExpression	2		4818034	1					
ANR	4818618	PrimaryExpression	5		4818034	1					
ANR	4818619	ForStatement	for ( i = 1 ; i < 4 ; i ++ )		4818034	5					
ANR	4818620	ForInit	i = 1 ;	175:12:2866:2871	4818034	0	True				
ANR	4818621	AssignmentExpression	i = 1		4818034	0		=			
ANR	4818622	Identifier	i		4818034	0					
ANR	4818623	PrimaryExpression	1		4818034	1					
ANR	4818624	Condition	i < 4	175:19:2873:2877	4818034	1	True				
ANR	4818625	RelationalExpression	i < 4		4818034	0		<			
ANR	4818626	Identifier	i		4818034	0					
ANR	4818627	PrimaryExpression	4		4818034	1					
ANR	4818628	PostIncDecOperationExpression	i ++	175:26:2880:2882	4818034	2	True				
ANR	4818629	Identifier	i		4818034	0					
ANR	4818630	IncDec	++		4818034	1					
ANR	4818631	CompoundStatement		169:30:2727:2727	4818034	3					
ANR	4818632	ExpressionStatement	bits = ( q -> levlCoeffBuf [ i ] == 16 ) ? 0 : 5	177:12:2899:2940	4818034	0	True				
ANR	4818633	AssignmentExpression	bits = ( q -> levlCoeffBuf [ i ] == 16 ) ? 0 : 5		4818034	0		=			
ANR	4818634	Identifier	bits		4818034	0					
ANR	4818635	ConditionalExpression	( q -> levlCoeffBuf [ i ] == 16 ) ? 0 : 5		4818034	1					
ANR	4818636	Condition	q -> levlCoeffBuf [ i ] == 16		4818034	0					
ANR	4818637	EqualityExpression	q -> levlCoeffBuf [ i ] == 16		4818034	0		==			
ANR	4818638	ArrayIndexing	q -> levlCoeffBuf [ i ]		4818034	0					
ANR	4818639	PtrMemberAccess	q -> levlCoeffBuf		4818034	0					
ANR	4818640	Identifier	q		4818034	0					
ANR	4818641	Identifier	levlCoeffBuf		4818034	1					
ANR	4818642	Identifier	i		4818034	1					
ANR	4818643	PrimaryExpression	16		4818034	1					
ANR	4818644	PrimaryExpression	0		4818034	1					
ANR	4818645	PrimaryExpression	5		4818034	2					
ANR	4818646	ExpressionStatement	q -> bitsBandT [ i ] = bits	179:12:2955:2977	4818034	1	True				
ANR	4818647	AssignmentExpression	q -> bitsBandT [ i ] = bits		4818034	0		=			
ANR	4818648	ArrayIndexing	q -> bitsBandT [ i ]		4818034	0					
ANR	4818649	PtrMemberAccess	q -> bitsBandT		4818034	0					
ANR	4818650	Identifier	q		4818034	0					
ANR	4818651	Identifier	bitsBandT		4818034	1					
ANR	4818652	Identifier	i		4818034	1					
ANR	4818653	Identifier	bits		4818034	1					
ANR	4818654	ForStatement	for ( j = band_tab [ i ] ; j < band_tab [ i + 1 ] ; j ++ )		4818034	2					
ANR	4818655	ForInit	j = band_tab [ i ] ;	181:16:2996:3011	4818034	0	True				
ANR	4818656	AssignmentExpression	j = band_tab [ i ]		4818034	0		=			
ANR	4818657	Identifier	j		4818034	0					
ANR	4818658	ArrayIndexing	band_tab [ i ]		4818034	1					
ANR	4818659	Identifier	band_tab		4818034	0					
ANR	4818660	Identifier	i		4818034	1					
ANR	4818661	Condition	j < band_tab [ i + 1 ]	181:33:3013:3029	4818034	1	True				
ANR	4818662	RelationalExpression	j < band_tab [ i + 1 ]		4818034	0		<			
ANR	4818663	Identifier	j		4818034	0					
ANR	4818664	ArrayIndexing	band_tab [ i + 1 ]		4818034	1					
ANR	4818665	Identifier	band_tab		4818034	0					
ANR	4818666	AdditiveExpression	i + 1		4818034	1		+			
ANR	4818667	Identifier	i		4818034	0					
ANR	4818668	PrimaryExpression	1		4818034	1					
ANR	4818669	PostIncDecOperationExpression	j ++	181:52:3032:3034	4818034	2	True				
ANR	4818670	Identifier	j		4818034	0					
ANR	4818671	IncDec	++		4818034	1					
ANR	4818672	CompoundStatement		175:57:2880:2880	4818034	3					
ANR	4818673	ExpressionStatement	q -> CWlengthT [ j ] = bits	183:16:3056:3078	4818034	0	True				
ANR	4818674	AssignmentExpression	q -> CWlengthT [ j ] = bits		4818034	0		=			
ANR	4818675	ArrayIndexing	q -> CWlengthT [ j ]		4818034	0					
ANR	4818676	PtrMemberAccess	q -> CWlengthT		4818034	0					
ANR	4818677	Identifier	q		4818034	0					
ANR	4818678	Identifier	CWlengthT		4818034	1					
ANR	4818679	Identifier	j		4818034	1					
ANR	4818680	Identifier	bits		4818034	1					
ANR	4818681	ExpressionStatement	bitscount += bits	185:16:3097:3114	4818034	1	True				
ANR	4818682	AssignmentExpression	bitscount += bits		4818034	0		+=			
ANR	4818683	Identifier	bitscount		4818034	0					
ANR	4818684	Identifier	bits		4818034	1					
ANR	4818685	IfStatement	"if ( bit_allocation ( q , stream_format_code , 512 - bitscount - get_bits_count ( & q -> gb ) , flag ) < 0 )"		4818034	42					
ANR	4818686	Condition	"bit_allocation ( q , stream_format_code , 512 - bitscount - get_bits_count ( & q -> gb ) , flag ) < 0"	195:7:3159:3248	4818034	0	True				
ANR	4818687	RelationalExpression	"bit_allocation ( q , stream_format_code , 512 - bitscount - get_bits_count ( & q -> gb ) , flag ) < 0"		4818034	0		<			
ANR	4818688	CallExpression	"bit_allocation ( q , stream_format_code , 512 - bitscount - get_bits_count ( & q -> gb ) , flag )"		4818034	0					
ANR	4818689	Callee	bit_allocation		4818034	0					
ANR	4818690	Identifier	bit_allocation		4818034	0					
ANR	4818691	ArgumentList	q		4818034	1					
ANR	4818692	Argument	q		4818034	0					
ANR	4818693	Identifier	q		4818034	0					
ANR	4818694	Argument	stream_format_code		4818034	1					
ANR	4818695	Identifier	stream_format_code		4818034	0					
ANR	4818696	Argument	512 - bitscount - get_bits_count ( & q -> gb )		4818034	2					
ANR	4818697	AdditiveExpression	512 - bitscount - get_bits_count ( & q -> gb )		4818034	0		-			
ANR	4818698	PrimaryExpression	512		4818034	0					
ANR	4818699	AdditiveExpression	bitscount - get_bits_count ( & q -> gb )		4818034	1		-			
ANR	4818700	Identifier	bitscount		4818034	0					
ANR	4818701	CallExpression	get_bits_count ( & q -> gb )		4818034	1					
ANR	4818702	Callee	get_bits_count		4818034	0					
ANR	4818703	Identifier	get_bits_count		4818034	0					
ANR	4818704	ArgumentList	& q -> gb		4818034	1					
ANR	4818705	Argument	& q -> gb		4818034	0					
ANR	4818706	UnaryOperationExpression	& q -> gb		4818034	0					
ANR	4818707	UnaryOperator	&		4818034	0					
ANR	4818708	PtrMemberAccess	q -> gb		4818034	1					
ANR	4818709	Identifier	q		4818034	0					
ANR	4818710	Identifier	gb		4818034	1					
ANR	4818711	Argument	flag		4818034	3					
ANR	4818712	Identifier	flag		4818034	0					
ANR	4818713	PrimaryExpression	0		4818034	1					
ANR	4818714	CompoundStatement		189:99:3094:3094	4818034	1					
ANR	4818715	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Bit allocations failed\\n"" )"	197:8:3262:3317	4818034	0	True				
ANR	4818716	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Bit allocations failed\\n"" )"		4818034	0					
ANR	4818717	Callee	av_log		4818034	0					
ANR	4818718	Identifier	av_log		4818034	0					
ANR	4818719	ArgumentList	avctx		4818034	1					
ANR	4818720	Argument	avctx		4818034	0					
ANR	4818721	Identifier	avctx		4818034	0					
ANR	4818722	Argument	AV_LOG_ERROR		4818034	1					
ANR	4818723	Identifier	AV_LOG_ERROR		4818034	0					
ANR	4818724	Argument	"""Bit allocations failed\\n"""		4818034	2					
ANR	4818725	PrimaryExpression	"""Bit allocations failed\\n"""		4818034	0					
ANR	4818726	ExpressionStatement	q -> decoder_reset = 1	199:8:3328:3348	4818034	1	True				
ANR	4818727	AssignmentExpression	q -> decoder_reset = 1		4818034	0		=			
ANR	4818728	PtrMemberAccess	q -> decoder_reset		4818034	0					
ANR	4818729	Identifier	q		4818034	0					
ANR	4818730	Identifier	decoder_reset		4818034	1					
ANR	4818731	PrimaryExpression	1		4818034	1					
ANR	4818732	ReturnStatement	return - 1 ;	201:8:3359:3368	4818034	2	True				
ANR	4818733	UnaryOperationExpression	- 1		4818034	0					
ANR	4818734	UnaryOperator	-		4818034	0					
ANR	4818735	PrimaryExpression	1		4818034	1					
ANR	4818736	ForStatement	for ( i = 0 ; i < BANDS ; i ++ )		4818034	43					
ANR	4818737	ForInit	i = 0 ;	207:8:3388:3393	4818034	0	True				
ANR	4818738	AssignmentExpression	i = 0		4818034	0		=			
ANR	4818739	Identifier	i		4818034	0					
ANR	4818740	PrimaryExpression	0		4818034	1					
ANR	4818741	Condition	i < BANDS	207:15:3395:3403	4818034	1	True				
ANR	4818742	RelationalExpression	i < BANDS		4818034	0		<			
ANR	4818743	Identifier	i		4818034	0					
ANR	4818744	Identifier	BANDS		4818034	1					
ANR	4818745	PostIncDecOperationExpression	i ++	207:26:3406:3408	4818034	2	True				
ANR	4818746	Identifier	i		4818034	0					
ANR	4818747	IncDec	++		4818034	1					
ANR	4818748	CompoundStatement		201:31:3254:3254	4818034	3					
ANR	4818749	ExpressionStatement	q -> sumLenArr [ i ] = 0	209:8:3422:3441	4818034	0	True				
ANR	4818750	AssignmentExpression	q -> sumLenArr [ i ] = 0		4818034	0		=			
ANR	4818751	ArrayIndexing	q -> sumLenArr [ i ]		4818034	0					
ANR	4818752	PtrMemberAccess	q -> sumLenArr		4818034	0					
ANR	4818753	Identifier	q		4818034	0					
ANR	4818754	Identifier	sumLenArr		4818034	1					
ANR	4818755	Identifier	i		4818034	1					
ANR	4818756	PrimaryExpression	0		4818034	1					
ANR	4818757	ExpressionStatement	q -> skipFlagRaw [ i ] = 0	211:8:3452:3473	4818034	1	True				
ANR	4818758	AssignmentExpression	q -> skipFlagRaw [ i ] = 0		4818034	0		=			
ANR	4818759	ArrayIndexing	q -> skipFlagRaw [ i ]		4818034	0					
ANR	4818760	PtrMemberAccess	q -> skipFlagRaw		4818034	0					
ANR	4818761	Identifier	q		4818034	0					
ANR	4818762	Identifier	skipFlagRaw		4818034	1					
ANR	4818763	Identifier	i		4818034	1					
ANR	4818764	PrimaryExpression	0		4818034	1					
ANR	4818765	ForStatement	for ( j = band_tab [ i ] ; j < band_tab [ i + 1 ] ; j ++ )		4818034	2					
ANR	4818766	ForInit	j = band_tab [ i ] ;	213:12:3488:3503	4818034	0	True				
ANR	4818767	AssignmentExpression	j = band_tab [ i ]		4818034	0		=			
ANR	4818768	Identifier	j		4818034	0					
ANR	4818769	ArrayIndexing	band_tab [ i ]		4818034	1					
ANR	4818770	Identifier	band_tab		4818034	0					
ANR	4818771	Identifier	i		4818034	1					
ANR	4818772	Condition	j < band_tab [ i + 1 ]	213:29:3505:3521	4818034	1	True				
ANR	4818773	RelationalExpression	j < band_tab [ i + 1 ]		4818034	0		<			
ANR	4818774	Identifier	j		4818034	0					
ANR	4818775	ArrayIndexing	band_tab [ i + 1 ]		4818034	1					
ANR	4818776	Identifier	band_tab		4818034	0					
ANR	4818777	AdditiveExpression	i + 1		4818034	1		+			
ANR	4818778	Identifier	i		4818034	0					
ANR	4818779	PrimaryExpression	1		4818034	1					
ANR	4818780	PostIncDecOperationExpression	j ++	213:48:3524:3526	4818034	2	True				
ANR	4818781	Identifier	j		4818034	0					
ANR	4818782	IncDec	++		4818034	1					
ANR	4818783	ExpressionStatement	q -> sumLenArr [ i ] += q -> CWlengthT [ j ]	215:12:3542:3576	4818034	3	True				
ANR	4818784	AssignmentExpression	q -> sumLenArr [ i ] += q -> CWlengthT [ j ]		4818034	0		+=			
ANR	4818785	ArrayIndexing	q -> sumLenArr [ i ]		4818034	0					
ANR	4818786	PtrMemberAccess	q -> sumLenArr		4818034	0					
ANR	4818787	Identifier	q		4818034	0					
ANR	4818788	Identifier	sumLenArr		4818034	1					
ANR	4818789	Identifier	i		4818034	1					
ANR	4818790	ArrayIndexing	q -> CWlengthT [ j ]		4818034	1					
ANR	4818791	PtrMemberAccess	q -> CWlengthT		4818034	0					
ANR	4818792	Identifier	q		4818034	0					
ANR	4818793	Identifier	CWlengthT		4818034	1					
ANR	4818794	Identifier	j		4818034	1					
ANR	4818795	IfStatement	if ( q -> bandFlagsBuf [ i ] )		4818034	3					
ANR	4818796	Condition	q -> bandFlagsBuf [ i ]	217:12:3591:3608	4818034	0	True				
ANR	4818797	ArrayIndexing	q -> bandFlagsBuf [ i ]		4818034	0					
ANR	4818798	PtrMemberAccess	q -> bandFlagsBuf		4818034	0					
ANR	4818799	Identifier	q		4818034	0					
ANR	4818800	Identifier	bandFlagsBuf		4818034	1					
ANR	4818801	Identifier	i		4818034	1					
ANR	4818802	IfStatement	if ( ( ( ( band_tab [ i + 1 ] - band_tab [ i ] ) * 1.5 ) > q -> sumLenArr [ i ] ) && ( q -> sumLenArr [ i ] > 0 ) )		4818034	1					
ANR	4818803	Condition	( ( ( band_tab [ i + 1 ] - band_tab [ i ] ) * 1.5 ) > q -> sumLenArr [ i ] ) && ( q -> sumLenArr [ i ] > 0 )	219:16:3628:3709	4818034	0	True				
ANR	4818804	AndExpression	( ( ( band_tab [ i + 1 ] - band_tab [ i ] ) * 1.5 ) > q -> sumLenArr [ i ] ) && ( q -> sumLenArr [ i ] > 0 )		4818034	0		&&			
ANR	4818805	RelationalExpression	( ( band_tab [ i + 1 ] - band_tab [ i ] ) * 1.5 ) > q -> sumLenArr [ i ]		4818034	0		>			
ANR	4818806	MultiplicativeExpression	( band_tab [ i + 1 ] - band_tab [ i ] ) * 1.5		4818034	0		*			
ANR	4818807	AdditiveExpression	band_tab [ i + 1 ] - band_tab [ i ]		4818034	0		-			
ANR	4818808	ArrayIndexing	band_tab [ i + 1 ]		4818034	0					
ANR	4818809	Identifier	band_tab		4818034	0					
ANR	4818810	AdditiveExpression	i + 1		4818034	1		+			
ANR	4818811	Identifier	i		4818034	0					
ANR	4818812	PrimaryExpression	1		4818034	1					
ANR	4818813	ArrayIndexing	band_tab [ i ]		4818034	1					
ANR	4818814	Identifier	band_tab		4818034	0					
ANR	4818815	Identifier	i		4818034	1					
ANR	4818816	PrimaryExpression	1.5		4818034	1					
ANR	4818817	ArrayIndexing	q -> sumLenArr [ i ]		4818034	1					
ANR	4818818	PtrMemberAccess	q -> sumLenArr		4818034	0					
ANR	4818819	Identifier	q		4818034	0					
ANR	4818820	Identifier	sumLenArr		4818034	1					
ANR	4818821	Identifier	i		4818034	1					
ANR	4818822	RelationalExpression	q -> sumLenArr [ i ] > 0		4818034	1		>			
ANR	4818823	ArrayIndexing	q -> sumLenArr [ i ]		4818034	0					
ANR	4818824	PtrMemberAccess	q -> sumLenArr		4818034	0					
ANR	4818825	Identifier	q		4818034	0					
ANR	4818826	Identifier	sumLenArr		4818034	1					
ANR	4818827	Identifier	i		4818034	1					
ANR	4818828	PrimaryExpression	0		4818034	1					
ANR	4818829	ExpressionStatement	q -> skipFlagRaw [ i ] = 1	221:16:3729:3750	4818034	1	True				
ANR	4818830	AssignmentExpression	q -> skipFlagRaw [ i ] = 1		4818034	0		=			
ANR	4818831	ArrayIndexing	q -> skipFlagRaw [ i ]		4818034	0					
ANR	4818832	PtrMemberAccess	q -> skipFlagRaw		4818034	0					
ANR	4818833	Identifier	q		4818034	0					
ANR	4818834	Identifier	skipFlagRaw		4818034	1					
ANR	4818835	Identifier	i		4818034	1					
ANR	4818836	PrimaryExpression	1		4818034	1					
ANR	4818837	ExpressionStatement	imc_get_skip_coeff ( q )	227:4:3766:3787	4818034	44	True				
ANR	4818838	CallExpression	imc_get_skip_coeff ( q )		4818034	0					
ANR	4818839	Callee	imc_get_skip_coeff		4818034	0					
ANR	4818840	Identifier	imc_get_skip_coeff		4818034	0					
ANR	4818841	ArgumentList	q		4818034	1					
ANR	4818842	Argument	q		4818034	0					
ANR	4818843	Identifier	q		4818034	0					
ANR	4818844	ForStatement	for ( i = 0 ; i < BANDS ; i ++ )		4818034	45					
ANR	4818845	ForInit	i = 0 ;	231:8:3800:3805	4818034	0	True				
ANR	4818846	AssignmentExpression	i = 0		4818034	0		=			
ANR	4818847	Identifier	i		4818034	0					
ANR	4818848	PrimaryExpression	0		4818034	1					
ANR	4818849	Condition	i < BANDS	231:15:3807:3815	4818034	1	True				
ANR	4818850	RelationalExpression	i < BANDS		4818034	0		<			
ANR	4818851	Identifier	i		4818034	0					
ANR	4818852	Identifier	BANDS		4818034	1					
ANR	4818853	PostIncDecOperationExpression	i ++	231:26:3818:3820	4818034	2	True				
ANR	4818854	Identifier	i		4818034	0					
ANR	4818855	IncDec	++		4818034	1					
ANR	4818856	CompoundStatement		225:31:3666:3666	4818034	3					
ANR	4818857	ExpressionStatement	q -> flcoeffs6 [ i ] = q -> flcoeffs1 [ i ]	233:8:3834:3867	4818034	0	True				
ANR	4818858	AssignmentExpression	q -> flcoeffs6 [ i ] = q -> flcoeffs1 [ i ]		4818034	0		=			
ANR	4818859	ArrayIndexing	q -> flcoeffs6 [ i ]		4818034	0					
ANR	4818860	PtrMemberAccess	q -> flcoeffs6		4818034	0					
ANR	4818861	Identifier	q		4818034	0					
ANR	4818862	Identifier	flcoeffs6		4818034	1					
ANR	4818863	Identifier	i		4818034	1					
ANR	4818864	ArrayIndexing	q -> flcoeffs1 [ i ]		4818034	1					
ANR	4818865	PtrMemberAccess	q -> flcoeffs1		4818034	0					
ANR	4818866	Identifier	q		4818034	0					
ANR	4818867	Identifier	flcoeffs1		4818034	1					
ANR	4818868	Identifier	i		4818034	1					
ANR	4818869	IfStatement	if ( q -> bandFlagsBuf [ i ] && ( band_tab [ i + 1 ] - band_tab [ i ] ) != q -> skipFlagCount [ i ] )		4818034	1					
ANR	4818870	Condition	q -> bandFlagsBuf [ i ] && ( band_tab [ i + 1 ] - band_tab [ i ] ) != q -> skipFlagCount [ i ]	237:12:3950:4023	4818034	0	True				
ANR	4818871	AndExpression	q -> bandFlagsBuf [ i ] && ( band_tab [ i + 1 ] - band_tab [ i ] ) != q -> skipFlagCount [ i ]		4818034	0		&&			
ANR	4818872	ArrayIndexing	q -> bandFlagsBuf [ i ]		4818034	0					
ANR	4818873	PtrMemberAccess	q -> bandFlagsBuf		4818034	0					
ANR	4818874	Identifier	q		4818034	0					
ANR	4818875	Identifier	bandFlagsBuf		4818034	1					
ANR	4818876	Identifier	i		4818034	1					
ANR	4818877	EqualityExpression	( band_tab [ i + 1 ] - band_tab [ i ] ) != q -> skipFlagCount [ i ]		4818034	1		!=			
ANR	4818878	AdditiveExpression	band_tab [ i + 1 ] - band_tab [ i ]		4818034	0		-			
ANR	4818879	ArrayIndexing	band_tab [ i + 1 ]		4818034	0					
ANR	4818880	Identifier	band_tab		4818034	0					
ANR	4818881	AdditiveExpression	i + 1		4818034	1		+			
ANR	4818882	Identifier	i		4818034	0					
ANR	4818883	PrimaryExpression	1		4818034	1					
ANR	4818884	ArrayIndexing	band_tab [ i ]		4818034	1					
ANR	4818885	Identifier	band_tab		4818034	0					
ANR	4818886	Identifier	i		4818034	1					
ANR	4818887	ArrayIndexing	q -> skipFlagCount [ i ]		4818034	1					
ANR	4818888	PtrMemberAccess	q -> skipFlagCount		4818034	0					
ANR	4818889	Identifier	q		4818034	0					
ANR	4818890	Identifier	skipFlagCount		4818034	1					
ANR	4818891	Identifier	i		4818034	1					
ANR	4818892	CompoundStatement		231:87:3868:3868	4818034	1					
ANR	4818893	ExpressionStatement	q -> flcoeffs6 [ i ] *= q -> sqrt_tab [ band_tab [ i + 1 ] - band_tab [ i ] ] / q -> sqrt_tab [ ( band_tab [ i + 1 ] - band_tab [ i ] - q -> skipFlagCount [ i ] ) ]	239:16:4044:4206	4818034	0	True				
ANR	4818894	AssignmentExpression	q -> flcoeffs6 [ i ] *= q -> sqrt_tab [ band_tab [ i + 1 ] - band_tab [ i ] ] / q -> sqrt_tab [ ( band_tab [ i + 1 ] - band_tab [ i ] - q -> skipFlagCount [ i ] ) ]		4818034	0		*=			
ANR	4818895	ArrayIndexing	q -> flcoeffs6 [ i ]		4818034	0					
ANR	4818896	PtrMemberAccess	q -> flcoeffs6		4818034	0					
ANR	4818897	Identifier	q		4818034	0					
ANR	4818898	Identifier	flcoeffs6		4818034	1					
ANR	4818899	Identifier	i		4818034	1					
ANR	4818900	MultiplicativeExpression	q -> sqrt_tab [ band_tab [ i + 1 ] - band_tab [ i ] ] / q -> sqrt_tab [ ( band_tab [ i + 1 ] - band_tab [ i ] - q -> skipFlagCount [ i ] ) ]		4818034	1		/			
ANR	4818901	ArrayIndexing	q -> sqrt_tab [ band_tab [ i + 1 ] - band_tab [ i ] ]		4818034	0					
ANR	4818902	PtrMemberAccess	q -> sqrt_tab		4818034	0					
ANR	4818903	Identifier	q		4818034	0					
ANR	4818904	Identifier	sqrt_tab		4818034	1					
ANR	4818905	AdditiveExpression	band_tab [ i + 1 ] - band_tab [ i ]		4818034	1		-			
ANR	4818906	ArrayIndexing	band_tab [ i + 1 ]		4818034	0					
ANR	4818907	Identifier	band_tab		4818034	0					
ANR	4818908	AdditiveExpression	i + 1		4818034	1		+			
ANR	4818909	Identifier	i		4818034	0					
ANR	4818910	PrimaryExpression	1		4818034	1					
ANR	4818911	ArrayIndexing	band_tab [ i ]		4818034	1					
ANR	4818912	Identifier	band_tab		4818034	0					
ANR	4818913	Identifier	i		4818034	1					
ANR	4818914	ArrayIndexing	q -> sqrt_tab [ ( band_tab [ i + 1 ] - band_tab [ i ] - q -> skipFlagCount [ i ] ) ]		4818034	1					
ANR	4818915	PtrMemberAccess	q -> sqrt_tab		4818034	0					
ANR	4818916	Identifier	q		4818034	0					
ANR	4818917	Identifier	sqrt_tab		4818034	1					
ANR	4818918	AdditiveExpression	band_tab [ i + 1 ] - band_tab [ i ] - q -> skipFlagCount [ i ]		4818034	1		-			
ANR	4818919	ArrayIndexing	band_tab [ i + 1 ]		4818034	0					
ANR	4818920	Identifier	band_tab		4818034	0					
ANR	4818921	AdditiveExpression	i + 1		4818034	1		+			
ANR	4818922	Identifier	i		4818034	0					
ANR	4818923	PrimaryExpression	1		4818034	1					
ANR	4818924	AdditiveExpression	band_tab [ i ] - q -> skipFlagCount [ i ]		4818034	1		-			
ANR	4818925	ArrayIndexing	band_tab [ i ]		4818034	0					
ANR	4818926	Identifier	band_tab		4818034	0					
ANR	4818927	Identifier	i		4818034	1					
ANR	4818928	ArrayIndexing	q -> skipFlagCount [ i ]		4818034	1					
ANR	4818929	PtrMemberAccess	q -> skipFlagCount		4818034	0					
ANR	4818930	Identifier	q		4818034	0					
ANR	4818931	Identifier	skipFlagCount		4818034	1					
ANR	4818932	Identifier	i		4818034	1					
ANR	4818933	ExpressionStatement	bits = summer = 0	251:4:4303:4320	4818034	46	True				
ANR	4818934	AssignmentExpression	bits = summer = 0		4818034	0		=			
ANR	4818935	Identifier	bits		4818034	0					
ANR	4818936	AssignmentExpression	summer = 0		4818034	1		=			
ANR	4818937	Identifier	summer		4818034	0					
ANR	4818938	PrimaryExpression	0		4818034	1					
ANR	4818939	ForStatement	for ( i = 0 ; i < BANDS ; i ++ )		4818034	47					
ANR	4818940	ForInit	i = 0 ;	255:8:4333:4338	4818034	0	True				
ANR	4818941	AssignmentExpression	i = 0		4818034	0		=			
ANR	4818942	Identifier	i		4818034	0					
ANR	4818943	PrimaryExpression	0		4818034	1					
ANR	4818944	Condition	i < BANDS	255:15:4340:4348	4818034	1	True				
ANR	4818945	RelationalExpression	i < BANDS		4818034	0		<			
ANR	4818946	Identifier	i		4818034	0					
ANR	4818947	Identifier	BANDS		4818034	1					
ANR	4818948	PostIncDecOperationExpression	i ++	255:26:4351:4353	4818034	2	True				
ANR	4818949	Identifier	i		4818034	0					
ANR	4818950	IncDec	++		4818034	1					
ANR	4818951	CompoundStatement		249:31:4199:4199	4818034	3					
ANR	4818952	IfStatement	if ( q -> bandFlagsBuf [ i ] )		4818034	0					
ANR	4818953	Condition	q -> bandFlagsBuf [ i ]	257:12:4371:4388	4818034	0	True				
ANR	4818954	ArrayIndexing	q -> bandFlagsBuf [ i ]		4818034	0					
ANR	4818955	PtrMemberAccess	q -> bandFlagsBuf		4818034	0					
ANR	4818956	Identifier	q		4818034	0					
ANR	4818957	Identifier	bandFlagsBuf		4818034	1					
ANR	4818958	Identifier	i		4818034	1					
ANR	4818959	CompoundStatement		251:32:4234:4234	4818034	1					
ANR	4818960	ForStatement	for ( j = band_tab [ i ] ; j < band_tab [ i + 1 ] ; j ++ )		4818034	0					
ANR	4818961	ForInit	j = band_tab [ i ] ;	259:16:4410:4425	4818034	0	True				
ANR	4818962	AssignmentExpression	j = band_tab [ i ]		4818034	0		=			
ANR	4818963	Identifier	j		4818034	0					
ANR	4818964	ArrayIndexing	band_tab [ i ]		4818034	1					
ANR	4818965	Identifier	band_tab		4818034	0					
ANR	4818966	Identifier	i		4818034	1					
ANR	4818967	Condition	j < band_tab [ i + 1 ]	259:33:4427:4443	4818034	1	True				
ANR	4818968	RelationalExpression	j < band_tab [ i + 1 ]		4818034	0		<			
ANR	4818969	Identifier	j		4818034	0					
ANR	4818970	ArrayIndexing	band_tab [ i + 1 ]		4818034	1					
ANR	4818971	Identifier	band_tab		4818034	0					
ANR	4818972	AdditiveExpression	i + 1		4818034	1		+			
ANR	4818973	Identifier	i		4818034	0					
ANR	4818974	PrimaryExpression	1		4818034	1					
ANR	4818975	PostIncDecOperationExpression	j ++	259:52:4446:4448	4818034	2	True				
ANR	4818976	Identifier	j		4818034	0					
ANR	4818977	IncDec	++		4818034	1					
ANR	4818978	CompoundStatement		253:57:4294:4294	4818034	3					
ANR	4818979	IfStatement	if ( q -> skipFlags [ j ] )		4818034	0					
ANR	4818980	Condition	q -> skipFlags [ j ]	261:19:4473:4487	4818034	0	True				
ANR	4818981	ArrayIndexing	q -> skipFlags [ j ]		4818034	0					
ANR	4818982	PtrMemberAccess	q -> skipFlags		4818034	0					
ANR	4818983	Identifier	q		4818034	0					
ANR	4818984	Identifier	skipFlags		4818034	1					
ANR	4818985	Identifier	j		4818034	1					
ANR	4818986	CompoundStatement		255:36:4333:4333	4818034	1					
ANR	4818987	ExpressionStatement	summer += q -> CWlengthT [ j ]	263:20:4513:4538	4818034	0	True				
ANR	4818988	AssignmentExpression	summer += q -> CWlengthT [ j ]		4818034	0		+=			
ANR	4818989	Identifier	summer		4818034	0					
ANR	4818990	ArrayIndexing	q -> CWlengthT [ j ]		4818034	1					
ANR	4818991	PtrMemberAccess	q -> CWlengthT		4818034	0					
ANR	4818992	Identifier	q		4818034	0					
ANR	4818993	Identifier	CWlengthT		4818034	1					
ANR	4818994	Identifier	j		4818034	1					
ANR	4818995	ExpressionStatement	q -> CWlengthT [ j ] = 0	265:20:4561:4580	4818034	1	True				
ANR	4818996	AssignmentExpression	q -> CWlengthT [ j ] = 0		4818034	0		=			
ANR	4818997	ArrayIndexing	q -> CWlengthT [ j ]		4818034	0					
ANR	4818998	PtrMemberAccess	q -> CWlengthT		4818034	0					
ANR	4818999	Identifier	q		4818034	0					
ANR	4819000	Identifier	CWlengthT		4818034	1					
ANR	4819001	Identifier	j		4818034	1					
ANR	4819002	PrimaryExpression	0		4818034	1					
ANR	4819003	ExpressionStatement	bits += q -> skipFlagBits [ i ]	271:12:4629:4655	4818034	1	True				
ANR	4819004	AssignmentExpression	bits += q -> skipFlagBits [ i ]		4818034	0		+=			
ANR	4819005	Identifier	bits		4818034	0					
ANR	4819006	ArrayIndexing	q -> skipFlagBits [ i ]		4818034	1					
ANR	4819007	PtrMemberAccess	q -> skipFlagBits		4818034	0					
ANR	4819008	Identifier	q		4818034	0					
ANR	4819009	Identifier	skipFlagBits		4818034	1					
ANR	4819010	Identifier	i		4818034	1					
ANR	4819011	ExpressionStatement	summer -= q -> skipFlagBits [ i ]	273:12:4670:4698	4818034	2	True				
ANR	4819012	AssignmentExpression	summer -= q -> skipFlagBits [ i ]		4818034	0		-=			
ANR	4819013	Identifier	summer		4818034	0					
ANR	4819014	ArrayIndexing	q -> skipFlagBits [ i ]		4818034	1					
ANR	4819015	PtrMemberAccess	q -> skipFlagBits		4818034	0					
ANR	4819016	Identifier	q		4818034	0					
ANR	4819017	Identifier	skipFlagBits		4818034	1					
ANR	4819018	Identifier	i		4818034	1					
ANR	4819019	ExpressionStatement	"imc_adjust_bit_allocation ( q , summer )"	279:4:4723:4759	4818034	48	True				
ANR	4819020	CallExpression	"imc_adjust_bit_allocation ( q , summer )"		4818034	0					
ANR	4819021	Callee	imc_adjust_bit_allocation		4818034	0					
ANR	4819022	Identifier	imc_adjust_bit_allocation		4818034	0					
ANR	4819023	ArgumentList	q		4818034	1					
ANR	4819024	Argument	q		4818034	0					
ANR	4819025	Identifier	q		4818034	0					
ANR	4819026	Argument	summer		4818034	1					
ANR	4819027	Identifier	summer		4818034	0					
ANR	4819028	ForStatement	for ( i = 0 ; i < BANDS ; i ++ )		4818034	49					
ANR	4819029	ForInit	i = 0 ;	283:8:4772:4777	4818034	0	True				
ANR	4819030	AssignmentExpression	i = 0		4818034	0		=			
ANR	4819031	Identifier	i		4818034	0					
ANR	4819032	PrimaryExpression	0		4818034	1					
ANR	4819033	Condition	i < BANDS	283:15:4779:4787	4818034	1	True				
ANR	4819034	RelationalExpression	i < BANDS		4818034	0		<			
ANR	4819035	Identifier	i		4818034	0					
ANR	4819036	Identifier	BANDS		4818034	1					
ANR	4819037	PostIncDecOperationExpression	i ++	283:26:4790:4792	4818034	2	True				
ANR	4819038	Identifier	i		4818034	0					
ANR	4819039	IncDec	++		4818034	1					
ANR	4819040	CompoundStatement		277:31:4638:4638	4818034	3					
ANR	4819041	ExpressionStatement	q -> sumLenArr [ i ] = 0	285:8:4806:4825	4818034	0	True				
ANR	4819042	AssignmentExpression	q -> sumLenArr [ i ] = 0		4818034	0		=			
ANR	4819043	ArrayIndexing	q -> sumLenArr [ i ]		4818034	0					
ANR	4819044	PtrMemberAccess	q -> sumLenArr		4818034	0					
ANR	4819045	Identifier	q		4818034	0					
ANR	4819046	Identifier	sumLenArr		4818034	1					
ANR	4819047	Identifier	i		4818034	1					
ANR	4819048	PrimaryExpression	0		4818034	1					
ANR	4819049	ForStatement	for ( j = band_tab [ i ] ; j < band_tab [ i + 1 ] ; j ++ )		4818034	1					
ANR	4819050	ForInit	j = band_tab [ i ] ;	289:12:4842:4857	4818034	0	True				
ANR	4819051	AssignmentExpression	j = band_tab [ i ]		4818034	0		=			
ANR	4819052	Identifier	j		4818034	0					
ANR	4819053	ArrayIndexing	band_tab [ i ]		4818034	1					
ANR	4819054	Identifier	band_tab		4818034	0					
ANR	4819055	Identifier	i		4818034	1					
ANR	4819056	Condition	j < band_tab [ i + 1 ]	289:29:4859:4875	4818034	1	True				
ANR	4819057	RelationalExpression	j < band_tab [ i + 1 ]		4818034	0		<			
ANR	4819058	Identifier	j		4818034	0					
ANR	4819059	ArrayIndexing	band_tab [ i + 1 ]		4818034	1					
ANR	4819060	Identifier	band_tab		4818034	0					
ANR	4819061	AdditiveExpression	i + 1		4818034	1		+			
ANR	4819062	Identifier	i		4818034	0					
ANR	4819063	PrimaryExpression	1		4818034	1					
ANR	4819064	PostIncDecOperationExpression	j ++	289:48:4878:4880	4818034	2	True				
ANR	4819065	Identifier	j		4818034	0					
ANR	4819066	IncDec	++		4818034	1					
ANR	4819067	IfStatement	if ( ! q -> skipFlags [ j ] )		4818034	3					
ANR	4819068	Condition	! q -> skipFlags [ j ]	291:16:4900:4915	4818034	0	True				
ANR	4819069	UnaryOperationExpression	! q -> skipFlags [ j ]		4818034	0					
ANR	4819070	UnaryOperator	!		4818034	0					
ANR	4819071	ArrayIndexing	q -> skipFlags [ j ]		4818034	1					
ANR	4819072	PtrMemberAccess	q -> skipFlags		4818034	0					
ANR	4819073	Identifier	q		4818034	0					
ANR	4819074	Identifier	skipFlags		4818034	1					
ANR	4819075	Identifier	j		4818034	1					
ANR	4819076	ExpressionStatement	q -> sumLenArr [ i ] += q -> CWlengthT [ j ]	293:16:4935:4969	4818034	1	True				
ANR	4819077	AssignmentExpression	q -> sumLenArr [ i ] += q -> CWlengthT [ j ]		4818034	0		+=			
ANR	4819078	ArrayIndexing	q -> sumLenArr [ i ]		4818034	0					
ANR	4819079	PtrMemberAccess	q -> sumLenArr		4818034	0					
ANR	4819080	Identifier	q		4818034	0					
ANR	4819081	Identifier	sumLenArr		4818034	1					
ANR	4819082	Identifier	i		4818034	1					
ANR	4819083	ArrayIndexing	q -> CWlengthT [ j ]		4818034	1					
ANR	4819084	PtrMemberAccess	q -> CWlengthT		4818034	0					
ANR	4819085	Identifier	q		4818034	0					
ANR	4819086	Identifier	CWlengthT		4818034	1					
ANR	4819087	Identifier	j		4818034	1					
ANR	4819088	ExpressionStatement	"memset ( q -> codewords , 0 , sizeof ( q -> codewords ) )"	299:4:4985:5030	4818034	50	True				
ANR	4819089	CallExpression	"memset ( q -> codewords , 0 , sizeof ( q -> codewords ) )"		4818034	0					
ANR	4819090	Callee	memset		4818034	0					
ANR	4819091	Identifier	memset		4818034	0					
ANR	4819092	ArgumentList	q -> codewords		4818034	1					
ANR	4819093	Argument	q -> codewords		4818034	0					
ANR	4819094	PtrMemberAccess	q -> codewords		4818034	0					
ANR	4819095	Identifier	q		4818034	0					
ANR	4819096	Identifier	codewords		4818034	1					
ANR	4819097	Argument	0		4818034	1					
ANR	4819098	PrimaryExpression	0		4818034	0					
ANR	4819099	Argument	sizeof ( q -> codewords )		4818034	2					
ANR	4819100	SizeofExpression	sizeof ( q -> codewords )		4818034	0					
ANR	4819101	Sizeof	sizeof		4818034	0					
ANR	4819102	PtrMemberAccess	q -> codewords		4818034	1					
ANR	4819103	Identifier	q		4818034	0					
ANR	4819104	Identifier	codewords		4818034	1					
ANR	4819105	IfStatement	if ( imc_get_coeffs ( q ) < 0 )		4818034	51					
ANR	4819106	Condition	imc_get_coeffs ( q ) < 0	303:7:5042:5062	4818034	0	True				
ANR	4819107	RelationalExpression	imc_get_coeffs ( q ) < 0		4818034	0		<			
ANR	4819108	CallExpression	imc_get_coeffs ( q )		4818034	0					
ANR	4819109	Callee	imc_get_coeffs		4818034	0					
ANR	4819110	Identifier	imc_get_coeffs		4818034	0					
ANR	4819111	ArgumentList	q		4818034	1					
ANR	4819112	Argument	q		4818034	0					
ANR	4819113	Identifier	q		4818034	0					
ANR	4819114	PrimaryExpression	0		4818034	1					
ANR	4819115	CompoundStatement		297:30:4908:4908	4818034	1					
ANR	4819116	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Read coefficients failed\\n"" )"	305:8:5076:5133	4818034	0	True				
ANR	4819117	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Read coefficients failed\\n"" )"		4818034	0					
ANR	4819118	Callee	av_log		4818034	0					
ANR	4819119	Identifier	av_log		4818034	0					
ANR	4819120	ArgumentList	avctx		4818034	1					
ANR	4819121	Argument	avctx		4818034	0					
ANR	4819122	Identifier	avctx		4818034	0					
ANR	4819123	Argument	AV_LOG_ERROR		4818034	1					
ANR	4819124	Identifier	AV_LOG_ERROR		4818034	0					
ANR	4819125	Argument	"""Read coefficients failed\\n"""		4818034	2					
ANR	4819126	PrimaryExpression	"""Read coefficients failed\\n"""		4818034	0					
ANR	4819127	ExpressionStatement	q -> decoder_reset = 1	307:8:5144:5164	4818034	1	True				
ANR	4819128	AssignmentExpression	q -> decoder_reset = 1		4818034	0		=			
ANR	4819129	PtrMemberAccess	q -> decoder_reset		4818034	0					
ANR	4819130	Identifier	q		4818034	0					
ANR	4819131	Identifier	decoder_reset		4818034	1					
ANR	4819132	PrimaryExpression	1		4818034	1					
ANR	4819133	ReturnStatement	return 0 ;	309:8:5175:5183	4818034	2	True				
ANR	4819134	PrimaryExpression	0		4818034	0					
ANR	4819135	IfStatement	"if ( inverse_quant_coeff ( q , stream_format_code ) < 0 )"		4818034	52					
ANR	4819136	Condition	"inverse_quant_coeff ( q , stream_format_code ) < 0"	315:7:5202:5247	4818034	0	True				
ANR	4819137	RelationalExpression	"inverse_quant_coeff ( q , stream_format_code ) < 0"		4818034	0		<			
ANR	4819138	CallExpression	"inverse_quant_coeff ( q , stream_format_code )"		4818034	0					
ANR	4819139	Callee	inverse_quant_coeff		4818034	0					
ANR	4819140	Identifier	inverse_quant_coeff		4818034	0					
ANR	4819141	ArgumentList	q		4818034	1					
ANR	4819142	Argument	q		4818034	0					
ANR	4819143	Identifier	q		4818034	0					
ANR	4819144	Argument	stream_format_code		4818034	1					
ANR	4819145	Identifier	stream_format_code		4818034	0					
ANR	4819146	PrimaryExpression	0		4818034	1					
ANR	4819147	CompoundStatement		309:55:5093:5093	4818034	1					
ANR	4819148	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Inverse quantization of coefficients failed\\n"" )"	317:8:5261:5337	4818034	0	True				
ANR	4819149	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Inverse quantization of coefficients failed\\n"" )"		4818034	0					
ANR	4819150	Callee	av_log		4818034	0					
ANR	4819151	Identifier	av_log		4818034	0					
ANR	4819152	ArgumentList	avctx		4818034	1					
ANR	4819153	Argument	avctx		4818034	0					
ANR	4819154	Identifier	avctx		4818034	0					
ANR	4819155	Argument	AV_LOG_ERROR		4818034	1					
ANR	4819156	Identifier	AV_LOG_ERROR		4818034	0					
ANR	4819157	Argument	"""Inverse quantization of coefficients failed\\n"""		4818034	2					
ANR	4819158	PrimaryExpression	"""Inverse quantization of coefficients failed\\n"""		4818034	0					
ANR	4819159	ExpressionStatement	q -> decoder_reset = 1	319:8:5348:5368	4818034	1	True				
ANR	4819160	AssignmentExpression	q -> decoder_reset = 1		4818034	0		=			
ANR	4819161	PtrMemberAccess	q -> decoder_reset		4818034	0					
ANR	4819162	Identifier	q		4818034	0					
ANR	4819163	Identifier	decoder_reset		4818034	1					
ANR	4819164	PrimaryExpression	1		4818034	1					
ANR	4819165	ReturnStatement	return 0 ;	321:8:5379:5387	4818034	2	True				
ANR	4819166	PrimaryExpression	0		4818034	0					
ANR	4819167	ExpressionStatement	"memset ( q -> skipFlags , 0 , sizeof ( q -> skipFlags ) )"	327:4:5403:5448	4818034	53	True				
ANR	4819168	CallExpression	"memset ( q -> skipFlags , 0 , sizeof ( q -> skipFlags ) )"		4818034	0					
ANR	4819169	Callee	memset		4818034	0					
ANR	4819170	Identifier	memset		4818034	0					
ANR	4819171	ArgumentList	q -> skipFlags		4818034	1					
ANR	4819172	Argument	q -> skipFlags		4818034	0					
ANR	4819173	PtrMemberAccess	q -> skipFlags		4818034	0					
ANR	4819174	Identifier	q		4818034	0					
ANR	4819175	Identifier	skipFlags		4818034	1					
ANR	4819176	Argument	0		4818034	1					
ANR	4819177	PrimaryExpression	0		4818034	0					
ANR	4819178	Argument	sizeof ( q -> skipFlags )		4818034	2					
ANR	4819179	SizeofExpression	sizeof ( q -> skipFlags )		4818034	0					
ANR	4819180	Sizeof	sizeof		4818034	0					
ANR	4819181	PtrMemberAccess	q -> skipFlags		4818034	1					
ANR	4819182	Identifier	q		4818034	0					
ANR	4819183	Identifier	skipFlags		4818034	1					
ANR	4819184	ExpressionStatement	imc_imdct256 ( q )	331:4:5457:5472	4818034	54	True				
ANR	4819185	CallExpression	imc_imdct256 ( q )		4818034	0					
ANR	4819186	Callee	imc_imdct256		4818034	0					
ANR	4819187	Identifier	imc_imdct256		4818034	0					
ANR	4819188	ArgumentList	q		4818034	1					
ANR	4819189	Argument	q		4818034	0					
ANR	4819190	Identifier	q		4818034	0					
ANR	4819191	ExpressionStatement	* data_size = COEFFS * sizeof ( float )	335:4:5481:5516	4818034	55	True				
ANR	4819192	AssignmentExpression	* data_size = COEFFS * sizeof ( float )		4818034	0		=			
ANR	4819193	UnaryOperationExpression	* data_size		4818034	0					
ANR	4819194	UnaryOperator	*		4818034	0					
ANR	4819195	Identifier	data_size		4818034	1					
ANR	4819196	MultiplicativeExpression	COEFFS * sizeof ( float )		4818034	1		*			
ANR	4819197	Identifier	COEFFS		4818034	0					
ANR	4819198	SizeofExpression	sizeof ( float )		4818034	1					
ANR	4819199	Sizeof	sizeof		4818034	0					
ANR	4819200	SizeofOperand	float		4818034	1					
ANR	4819201	ReturnStatement	return IMC_BLOCK_SIZE ;	339:4:5525:5546	4818034	56	True				
ANR	4819202	Identifier	IMC_BLOCK_SIZE		4818034	0					
ANR	4819203	ReturnType	static int		4818034	1					
ANR	4819204	Identifier	imc_decode_frame		4818034	2					
ANR	4819205	ParameterList	"AVCodecContext * avctx , void * data , int * data_size , AVPacket * avpkt"		4818034	3					
ANR	4819206	Parameter	AVCodecContext * avctx	1:28:28:49	4818034	0	True				
ANR	4819207	ParameterType	AVCodecContext *		4818034	0					
ANR	4819208	Identifier	avctx		4818034	1					
ANR	4819209	Parameter	void * data	3:28:81:90	4818034	1	True				
ANR	4819210	ParameterType	void *		4818034	0					
ANR	4819211	Identifier	data		4818034	1					
ANR	4819212	Parameter	int * data_size	3:40:93:106	4818034	2	True				
ANR	4819213	ParameterType	int *		4818034	0					
ANR	4819214	Identifier	data_size		4818034	1					
ANR	4819215	Parameter	AVPacket * avpkt	5:28:138:152	4818034	3	True				
ANR	4819216	ParameterType	AVPacket *		4818034	0					
ANR	4819217	Identifier	avpkt		4818034	1					
ANR	4819218	CFGEntryNode	ENTRY		4818034		True				
ANR	4819219	CFGExitNode	EXIT		4818034		True				
ANR	4819220	Symbol	* q -> sumLenArr		4818034						
ANR	4819221	Symbol	data		4818034						
ANR	4819222	Symbol	q -> levlCoeffBuf		4818034						
ANR	4819223	Symbol	* q -> skipFlagCount		4818034						
ANR	4819224	Symbol	get_bits		4818034						
ANR	4819225	Symbol	* q -> CWlengthT		4818034						
ANR	4819226	Symbol	q -> out_samples		4818034						
ANR	4819227	Symbol	avpkt		4818034						
ANR	4819228	Symbol	* data_size		4818034						
ANR	4819229	Symbol	bitscount		4818034						
ANR	4819230	Symbol	q -> old_floor		4818034						
ANR	4819231	Symbol	q -> dsp		4818034						
ANR	4819232	Symbol	q -> CWdecoded		4818034						
ANR	4819233	Symbol	* q -> skipFlagBits		4818034						
ANR	4819234	Symbol	q -> bandWidthT		4818034						
ANR	4819235	Symbol	data_size		4818034						
ANR	4819236	Symbol	q -> skipFlagCount		4818034						
ANR	4819237	Symbol	q -> sqrt_tab		4818034						
ANR	4819238	Symbol	* * i		4818034						
ANR	4819239	Symbol	buf_size		4818034						
ANR	4819240	Symbol	get_bits1		4818034						
ANR	4819241	Symbol	bits		4818034						
ANR	4819242	Symbol	* band_tab		4818034						
ANR	4819243	Symbol	get_bits_count		4818034						
ANR	4819244	Symbol	* * * q		4818034						
ANR	4819245	Symbol	imc_get_coeffs		4818034						
ANR	4819246	Symbol	* avctx		4818034						
ANR	4819247	Symbol	* q -> bandFlagsBuf		4818034						
ANR	4819248	Symbol	* q -> bandWidthT		4818034						
ANR	4819249	Symbol	q -> skipFlagRaw		4818034						
ANR	4819250	Symbol	avpkt -> data		4818034						
ANR	4819251	Symbol	* q -> old_floor		4818034						
ANR	4819252	Symbol	* q -> skipFlagRaw		4818034						
ANR	4819253	Symbol	flag		4818034						
ANR	4819254	Symbol	buf16		4818034						
ANR	4819255	Symbol	IMC_FRAME_ID		4818034						
ANR	4819256	Symbol	* q -> flcoeffs1		4818034						
ANR	4819257	Symbol	inverse_quant_coeff		4818034						
ANR	4819258	Symbol	q -> skipFlagBits		4818034						
ANR	4819259	Symbol	q -> codewords		4818034						
ANR	4819260	Symbol	q -> bandFlagsBuf		4818034						
ANR	4819261	Symbol	* q -> sqrt_tab		4818034						
ANR	4819262	Symbol	summer		4818034						
ANR	4819263	Symbol	* q -> flcoeffs6		4818034						
ANR	4819264	Symbol	COEFFS		4818034						
ANR	4819265	Symbol	* q -> CWdecoded		4818034						
ANR	4819266	Symbol	bit_allocation		4818034						
ANR	4819267	Symbol	avpkt -> size		4818034						
ANR	4819268	Symbol	stream_format_code		4818034						
ANR	4819269	Symbol	band_tab		4818034						
ANR	4819270	Symbol	* * q		4818034						
ANR	4819271	Symbol	avctx		4818034						
ANR	4819272	Symbol	* * band_tab		4818034						
ANR	4819273	Symbol	q -> CWlengthT		4818034						
ANR	4819274	Symbol	* avpkt		4818034						
ANR	4819275	Symbol	& q -> gb		4818034						
ANR	4819276	Symbol	AV_LOG_ERROR		4818034						
ANR	4819277	Symbol	q -> sumLenArr		4818034						
ANR	4819278	Symbol	i		4818034						
ANR	4819279	Symbol	j		4818034						
ANR	4819280	Symbol	counter		4818034						
ANR	4819281	Symbol	avctx -> priv_data		4818034						
ANR	4819282	Symbol	IMC_BLOCK_SIZE		4818034						
ANR	4819283	Symbol	* q -> levlCoeffBuf		4818034						
ANR	4819284	Symbol	q -> decoder_reset		4818034						
ANR	4819285	Symbol	q -> skipFlags		4818034						
ANR	4819286	Symbol	q		4818034						
ANR	4819287	Symbol	q -> flcoeffs6		4818034						
ANR	4819288	Symbol	buf		4818034						
ANR	4819289	Symbol	q -> flcoeffs5		4818034						
ANR	4819290	Symbol	* i		4818034						
ANR	4819291	Symbol	q -> flcoeffs3		4818034						
ANR	4819292	Symbol	* q -> bitsBandT		4818034						
ANR	4819293	Symbol	* j		4818034						
ANR	4819294	Symbol	q -> flcoeffs2		4818034						
ANR	4819295	Symbol	q -> flcoeffs1		4818034						
ANR	4819296	Symbol	imc_hdr		4818034						
ANR	4819297	Symbol	q -> bitsBandT		4818034						
ANR	4819298	Symbol	* q		4818034						
ANR	4819299	Symbol	* q -> skipFlags		4818034						
ANR	4819300	Symbol	BANDS		4818034						
ANR	4819301	Symbol	* * q -> skipFlagCount		4818034						
