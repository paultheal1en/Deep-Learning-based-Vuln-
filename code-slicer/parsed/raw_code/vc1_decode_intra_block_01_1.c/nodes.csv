command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8844038	File	/home/p4ultr4n/workplace/ReVeal/raw_code/vc1_decode_intra_block_01_1.c								
ANR	8844039	Function	vc1_decode_intra_block	1:0:0:6446							
ANR	8844040	FunctionDef	"vc1_decode_intra_block (VC1Context * v , DCTELEM block [ 64 ] , int n , int coded , int mquant , int codingset)"		8844039	0					
ANR	8844041	CompoundStatement		3:0:114:6446	8844039	0					
ANR	8844042	IdentifierDeclStatement	GetBitContext * gb = & v -> s . gb ;	5:4:121:149	8844039	0	True				
ANR	8844043	IdentifierDecl	* gb = & v -> s . gb		8844039	0					
ANR	8844044	IdentifierDeclType	GetBitContext *		8844039	0					
ANR	8844045	Identifier	gb		8844039	1					
ANR	8844046	AssignmentExpression	* gb = & v -> s . gb		8844039	2		=			
ANR	8844047	Identifier	gb		8844039	0					
ANR	8844048	UnaryOperationExpression	& v -> s . gb		8844039	1					
ANR	8844049	UnaryOperator	&		8844039	0					
ANR	8844050	MemberAccess	v -> s . gb		8844039	1					
ANR	8844051	PtrMemberAccess	v -> s		8844039	0					
ANR	8844052	Identifier	v		8844039	0					
ANR	8844053	Identifier	s		8844039	1					
ANR	8844054	Identifier	gb		8844039	1					
ANR	8844055	IdentifierDeclStatement	MpegEncContext * s = & v -> s ;	7:4:156:181	8844039	1	True				
ANR	8844056	IdentifierDecl	* s = & v -> s		8844039	0					
ANR	8844057	IdentifierDeclType	MpegEncContext *		8844039	0					
ANR	8844058	Identifier	s		8844039	1					
ANR	8844059	AssignmentExpression	* s = & v -> s		8844039	2		=			
ANR	8844060	Identifier	s		8844039	0					
ANR	8844061	UnaryOperationExpression	& v -> s		8844039	1					
ANR	8844062	UnaryOperator	&		8844039	0					
ANR	8844063	PtrMemberAccess	v -> s		8844039	1					
ANR	8844064	Identifier	v		8844039	0					
ANR	8844065	Identifier	s		8844039	1					
ANR	8844066	IdentifierDeclStatement	int dc_pred_dir = 0 ;	9:4:188:207	8844039	2	True				
ANR	8844067	IdentifierDecl	dc_pred_dir = 0		8844039	0					
ANR	8844068	IdentifierDeclType	int		8844039	0					
ANR	8844069	Identifier	dc_pred_dir		8844039	1					
ANR	8844070	AssignmentExpression	dc_pred_dir = 0		8844039	2		=			
ANR	8844071	Identifier	dc_pred_dir		8844039	0					
ANR	8844072	PrimaryExpression	0		8844039	1					
ANR	8844073	IdentifierDeclStatement	"int run_diff , i ;"	11:4:256:271	8844039	3	True				
ANR	8844074	IdentifierDecl	run_diff		8844039	0					
ANR	8844075	IdentifierDeclType	int		8844039	0					
ANR	8844076	Identifier	run_diff		8844039	1					
ANR	8844077	IdentifierDecl	i		8844039	1					
ANR	8844078	IdentifierDeclType	int		8844039	0					
ANR	8844079	Identifier	i		8844039	1					
ANR	8844080	IdentifierDeclStatement	int16_t * dc_val ;	13:4:278:293	8844039	4	True				
ANR	8844081	IdentifierDecl	* dc_val		8844039	0					
ANR	8844082	IdentifierDeclType	int16_t *		8844039	0					
ANR	8844083	Identifier	dc_val		8844039	1					
ANR	8844084	IdentifierDeclStatement	"int16_t * ac_val , * ac_val2 ;"	15:4:300:325	8844039	5	True				
ANR	8844085	IdentifierDecl	* ac_val		8844039	0					
ANR	8844086	IdentifierDeclType	int16_t *		8844039	0					
ANR	8844087	Identifier	ac_val		8844039	1					
ANR	8844088	IdentifierDecl	* ac_val2		8844039	1					
ANR	8844089	IdentifierDeclType	int16_t *		8844039	0					
ANR	8844090	Identifier	ac_val2		8844039	1					
ANR	8844091	IdentifierDeclStatement	int dcdiff ;	17:4:332:342	8844039	6	True				
ANR	8844092	IdentifierDecl	dcdiff		8844039	0					
ANR	8844093	IdentifierDeclType	int		8844039	0					
ANR	8844094	Identifier	dcdiff		8844039	1					
ANR	8844095	IdentifierDeclStatement	int mb_pos = s -> mb_x + s -> mb_y * s -> mb_stride ;	19:4:349:394	8844039	7	True				
ANR	8844096	IdentifierDecl	mb_pos = s -> mb_x + s -> mb_y * s -> mb_stride		8844039	0					
ANR	8844097	IdentifierDeclType	int		8844039	0					
ANR	8844098	Identifier	mb_pos		8844039	1					
ANR	8844099	AssignmentExpression	mb_pos = s -> mb_x + s -> mb_y * s -> mb_stride		8844039	2		=			
ANR	8844100	Identifier	mb_pos		8844039	0					
ANR	8844101	AdditiveExpression	s -> mb_x + s -> mb_y * s -> mb_stride		8844039	1		+			
ANR	8844102	PtrMemberAccess	s -> mb_x		8844039	0					
ANR	8844103	Identifier	s		8844039	0					
ANR	8844104	Identifier	mb_x		8844039	1					
ANR	8844105	MultiplicativeExpression	s -> mb_y * s -> mb_stride		8844039	1		*			
ANR	8844106	PtrMemberAccess	s -> mb_y		8844039	0					
ANR	8844107	Identifier	s		8844039	0					
ANR	8844108	Identifier	mb_y		8844039	1					
ANR	8844109	PtrMemberAccess	s -> mb_stride		8844039	1					
ANR	8844110	Identifier	s		8844039	0					
ANR	8844111	Identifier	mb_stride		8844039	1					
ANR	8844112	IdentifierDeclStatement	"int a_avail = v -> a_avail , c_avail = v -> c_avail ;"	21:4:401:447	8844039	8	True				
ANR	8844113	IdentifierDecl	a_avail = v -> a_avail		8844039	0					
ANR	8844114	IdentifierDeclType	int		8844039	0					
ANR	8844115	Identifier	a_avail		8844039	1					
ANR	8844116	AssignmentExpression	a_avail = v -> a_avail		8844039	2		=			
ANR	8844117	Identifier	a_avail		8844039	0					
ANR	8844118	PtrMemberAccess	v -> a_avail		8844039	1					
ANR	8844119	Identifier	v		8844039	0					
ANR	8844120	Identifier	a_avail		8844039	1					
ANR	8844121	IdentifierDecl	c_avail = v -> c_avail		8844039	1					
ANR	8844122	IdentifierDeclType	int		8844039	0					
ANR	8844123	Identifier	c_avail		8844039	1					
ANR	8844124	AssignmentExpression	c_avail = v -> c_avail		8844039	2		=			
ANR	8844125	Identifier	c_avail		8844039	0					
ANR	8844126	PtrMemberAccess	v -> c_avail		8844039	1					
ANR	8844127	Identifier	v		8844039	0					
ANR	8844128	Identifier	c_avail		8844039	1					
ANR	8844129	IdentifierDeclStatement	int use_pred = s -> ac_pred ;	23:4:454:479	8844039	9	True				
ANR	8844130	IdentifierDecl	use_pred = s -> ac_pred		8844039	0					
ANR	8844131	IdentifierDeclType	int		8844039	0					
ANR	8844132	Identifier	use_pred		8844039	1					
ANR	8844133	AssignmentExpression	use_pred = s -> ac_pred		8844039	2		=			
ANR	8844134	Identifier	use_pred		8844039	0					
ANR	8844135	PtrMemberAccess	s -> ac_pred		8844039	1					
ANR	8844136	Identifier	s		8844039	0					
ANR	8844137	Identifier	ac_pred		8844039	1					
ANR	8844138	IdentifierDeclStatement	int scale ;	25:4:486:495	8844039	10	True				
ANR	8844139	IdentifierDecl	scale		8844039	0					
ANR	8844140	IdentifierDeclType	int		8844039	0					
ANR	8844141	Identifier	scale		8844039	1					
ANR	8844142	IdentifierDeclStatement	"int q1 , q2 = 0 ;"	27:4:502:516	8844039	11	True				
ANR	8844143	IdentifierDecl	q1		8844039	0					
ANR	8844144	IdentifierDeclType	int		8844039	0					
ANR	8844145	Identifier	q1		8844039	1					
ANR	8844146	IdentifierDecl	q2 = 0		8844039	1					
ANR	8844147	IdentifierDeclType	int		8844039	0					
ANR	8844148	Identifier	q2		8844039	1					
ANR	8844149	AssignmentExpression	q2 = 0		8844039	2		=			
ANR	8844150	Identifier	q2		8844039	0					
ANR	8844151	PrimaryExpression	0		8844039	1					
ANR	8844152	ExpressionStatement	mquant = ( mquant < 1 ) ? 0 : ( ( mquant > 31 ) ? 31 : mquant )	33:4:577:634	8844039	12	True				
ANR	8844153	AssignmentExpression	mquant = ( mquant < 1 ) ? 0 : ( ( mquant > 31 ) ? 31 : mquant )		8844039	0		=			
ANR	8844154	Identifier	mquant		8844039	0					
ANR	8844155	ConditionalExpression	( mquant < 1 ) ? 0 : ( ( mquant > 31 ) ? 31 : mquant )		8844039	1					
ANR	8844156	Condition	mquant < 1		8844039	0					
ANR	8844157	RelationalExpression	mquant < 1		8844039	0		<			
ANR	8844158	Identifier	mquant		8844039	0					
ANR	8844159	PrimaryExpression	1		8844039	1					
ANR	8844160	PrimaryExpression	0		8844039	1					
ANR	8844161	ConditionalExpression	( mquant > 31 ) ? 31 : mquant		8844039	2					
ANR	8844162	Condition	mquant > 31		8844039	0					
ANR	8844163	RelationalExpression	mquant > 31		8844039	0		>			
ANR	8844164	Identifier	mquant		8844039	0					
ANR	8844165	PrimaryExpression	31		8844039	1					
ANR	8844166	PrimaryExpression	31		8844039	1					
ANR	8844167	Identifier	mquant		8844039	2					
ANR	8844168	ExpressionStatement	s -> y_dc_scale = s -> y_dc_scale_table [ mquant ]	39:4:690:733	8844039	13	True				
ANR	8844169	AssignmentExpression	s -> y_dc_scale = s -> y_dc_scale_table [ mquant ]		8844039	0		=			
ANR	8844170	PtrMemberAccess	s -> y_dc_scale		8844039	0					
ANR	8844171	Identifier	s		8844039	0					
ANR	8844172	Identifier	y_dc_scale		8844039	1					
ANR	8844173	ArrayIndexing	s -> y_dc_scale_table [ mquant ]		8844039	1					
ANR	8844174	PtrMemberAccess	s -> y_dc_scale_table		8844039	0					
ANR	8844175	Identifier	s		8844039	0					
ANR	8844176	Identifier	y_dc_scale_table		8844039	1					
ANR	8844177	Identifier	mquant		8844039	1					
ANR	8844178	ExpressionStatement	s -> c_dc_scale = s -> c_dc_scale_table [ mquant ]	41:4:740:783	8844039	14	True				
ANR	8844179	AssignmentExpression	s -> c_dc_scale = s -> c_dc_scale_table [ mquant ]		8844039	0		=			
ANR	8844180	PtrMemberAccess	s -> c_dc_scale		8844039	0					
ANR	8844181	Identifier	s		8844039	0					
ANR	8844182	Identifier	c_dc_scale		8844039	1					
ANR	8844183	ArrayIndexing	s -> c_dc_scale_table [ mquant ]		8844039	1					
ANR	8844184	PtrMemberAccess	s -> c_dc_scale_table		8844039	0					
ANR	8844185	Identifier	s		8844039	0					
ANR	8844186	Identifier	c_dc_scale_table		8844039	1					
ANR	8844187	Identifier	mquant		8844039	1					
ANR	8844188	IfStatement	if ( n < 4 )		8844039	15					
ANR	8844189	Condition	n < 4	47:8:827:831	8844039	0	True				
ANR	8844190	RelationalExpression	n < 4		8844039	0		<			
ANR	8844191	Identifier	n		8844039	0					
ANR	8844192	PrimaryExpression	4		8844039	1					
ANR	8844193	CompoundStatement		45:15:719:719	8844039	1					
ANR	8844194	ExpressionStatement	"dcdiff = get_vlc2 ( & s -> gb , ff_msmp4_dc_luma_vlc [ s -> dc_table_index ] . table , DC_VLC_BITS , 3 )"	49:8:845:933	8844039	0	True				
ANR	8844195	AssignmentExpression	"dcdiff = get_vlc2 ( & s -> gb , ff_msmp4_dc_luma_vlc [ s -> dc_table_index ] . table , DC_VLC_BITS , 3 )"		8844039	0		=			
ANR	8844196	Identifier	dcdiff		8844039	0					
ANR	8844197	CallExpression	"get_vlc2 ( & s -> gb , ff_msmp4_dc_luma_vlc [ s -> dc_table_index ] . table , DC_VLC_BITS , 3 )"		8844039	1					
ANR	8844198	Callee	get_vlc2		8844039	0					
ANR	8844199	Identifier	get_vlc2		8844039	0					
ANR	8844200	ArgumentList	& s -> gb		8844039	1					
ANR	8844201	Argument	& s -> gb		8844039	0					
ANR	8844202	UnaryOperationExpression	& s -> gb		8844039	0					
ANR	8844203	UnaryOperator	&		8844039	0					
ANR	8844204	PtrMemberAccess	s -> gb		8844039	1					
ANR	8844205	Identifier	s		8844039	0					
ANR	8844206	Identifier	gb		8844039	1					
ANR	8844207	Argument	ff_msmp4_dc_luma_vlc [ s -> dc_table_index ] . table		8844039	1					
ANR	8844208	MemberAccess	ff_msmp4_dc_luma_vlc [ s -> dc_table_index ] . table		8844039	0					
ANR	8844209	ArrayIndexing	ff_msmp4_dc_luma_vlc [ s -> dc_table_index ]		8844039	0					
ANR	8844210	Identifier	ff_msmp4_dc_luma_vlc		8844039	0					
ANR	8844211	PtrMemberAccess	s -> dc_table_index		8844039	1					
ANR	8844212	Identifier	s		8844039	0					
ANR	8844213	Identifier	dc_table_index		8844039	1					
ANR	8844214	Identifier	table		8844039	1					
ANR	8844215	Argument	DC_VLC_BITS		8844039	2					
ANR	8844216	Identifier	DC_VLC_BITS		8844039	0					
ANR	8844217	Argument	3		8844039	3					
ANR	8844218	PrimaryExpression	3		8844039	0					
ANR	8844219	ElseStatement	else		8844039	0					
ANR	8844220	CompoundStatement		49:11:832:832	8844039	0					
ANR	8844221	ExpressionStatement	"dcdiff = get_vlc2 ( & s -> gb , ff_msmp4_dc_chroma_vlc [ s -> dc_table_index ] . table , DC_VLC_BITS , 3 )"	53:8:958:1048	8844039	0	True				
ANR	8844222	AssignmentExpression	"dcdiff = get_vlc2 ( & s -> gb , ff_msmp4_dc_chroma_vlc [ s -> dc_table_index ] . table , DC_VLC_BITS , 3 )"		8844039	0		=			
ANR	8844223	Identifier	dcdiff		8844039	0					
ANR	8844224	CallExpression	"get_vlc2 ( & s -> gb , ff_msmp4_dc_chroma_vlc [ s -> dc_table_index ] . table , DC_VLC_BITS , 3 )"		8844039	1					
ANR	8844225	Callee	get_vlc2		8844039	0					
ANR	8844226	Identifier	get_vlc2		8844039	0					
ANR	8844227	ArgumentList	& s -> gb		8844039	1					
ANR	8844228	Argument	& s -> gb		8844039	0					
ANR	8844229	UnaryOperationExpression	& s -> gb		8844039	0					
ANR	8844230	UnaryOperator	&		8844039	0					
ANR	8844231	PtrMemberAccess	s -> gb		8844039	1					
ANR	8844232	Identifier	s		8844039	0					
ANR	8844233	Identifier	gb		8844039	1					
ANR	8844234	Argument	ff_msmp4_dc_chroma_vlc [ s -> dc_table_index ] . table		8844039	1					
ANR	8844235	MemberAccess	ff_msmp4_dc_chroma_vlc [ s -> dc_table_index ] . table		8844039	0					
ANR	8844236	ArrayIndexing	ff_msmp4_dc_chroma_vlc [ s -> dc_table_index ]		8844039	0					
ANR	8844237	Identifier	ff_msmp4_dc_chroma_vlc		8844039	0					
ANR	8844238	PtrMemberAccess	s -> dc_table_index		8844039	1					
ANR	8844239	Identifier	s		8844039	0					
ANR	8844240	Identifier	dc_table_index		8844039	1					
ANR	8844241	Identifier	table		8844039	1					
ANR	8844242	Argument	DC_VLC_BITS		8844039	2					
ANR	8844243	Identifier	DC_VLC_BITS		8844039	0					
ANR	8844244	Argument	3		8844039	3					
ANR	8844245	PrimaryExpression	3		8844039	0					
ANR	8844246	IfStatement	if ( dcdiff < 0 )		8844039	16					
ANR	8844247	Condition	dcdiff < 0	57:8:1066:1075	8844039	0	True				
ANR	8844248	RelationalExpression	dcdiff < 0		8844039	0		<			
ANR	8844249	Identifier	dcdiff		8844039	0					
ANR	8844250	PrimaryExpression	0		8844039	1					
ANR	8844251	CompoundStatement		55:19:962:962	8844039	1					
ANR	8844252	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_ERROR , ""Illegal DC VLC\\n"" )"	59:8:1088:1138	8844039	0	True				
ANR	8844253	CallExpression	"av_log ( s -> avctx , AV_LOG_ERROR , ""Illegal DC VLC\\n"" )"		8844039	0					
ANR	8844254	Callee	av_log		8844039	0					
ANR	8844255	Identifier	av_log		8844039	0					
ANR	8844256	ArgumentList	s -> avctx		8844039	1					
ANR	8844257	Argument	s -> avctx		8844039	0					
ANR	8844258	PtrMemberAccess	s -> avctx		8844039	0					
ANR	8844259	Identifier	s		8844039	0					
ANR	8844260	Identifier	avctx		8844039	1					
ANR	8844261	Argument	AV_LOG_ERROR		8844039	1					
ANR	8844262	Identifier	AV_LOG_ERROR		8844039	0					
ANR	8844263	Argument	"""Illegal DC VLC\\n"""		8844039	2					
ANR	8844264	PrimaryExpression	"""Illegal DC VLC\\n"""		8844039	0					
ANR	8844265	ReturnStatement	return - 1 ;	61:8:1149:1158	8844039	1	True				
ANR	8844266	UnaryOperationExpression	- 1		8844039	0					
ANR	8844267	UnaryOperator	-		8844039	0					
ANR	8844268	PrimaryExpression	1		8844039	1					
ANR	8844269	IfStatement	if ( dcdiff )		8844039	17					
ANR	8844270	Condition	dcdiff	65:8:1176:1181	8844039	0	True				
ANR	8844271	Identifier	dcdiff		8844039	0					
ANR	8844272	CompoundStatement		65:4:1074:1074	8844039	1					
ANR	8844273	IfStatement	if ( dcdiff == 119 )		8844039	0					
ANR	8844274	Condition	dcdiff == 119	69:12:1204:1216	8844039	0	True				
ANR	8844275	EqualityExpression	dcdiff == 119		8844039	0		==			
ANR	8844276	Identifier	dcdiff		8844039	0					
ANR	8844277	PrimaryExpression	119		8844039	1					
ANR	8844278	CompoundStatement		69:8:1135:1135	8844039	1					
ANR	8844279	IfStatement	if ( mquant == 1 )		8844039	0					
ANR	8844280	Condition	mquant == 1	75:16:1303:1313	8844039	0	True				
ANR	8844281	EqualityExpression	mquant == 1		8844039	0		==			
ANR	8844282	Identifier	mquant		8844039	0					
ANR	8844283	PrimaryExpression	1		8844039	1					
ANR	8844284	ExpressionStatement	"dcdiff = get_bits ( gb , 10 )"	75:29:1316:1341	8844039	1	True				
ANR	8844285	AssignmentExpression	"dcdiff = get_bits ( gb , 10 )"		8844039	0		=			
ANR	8844286	Identifier	dcdiff		8844039	0					
ANR	8844287	CallExpression	"get_bits ( gb , 10 )"		8844039	1					
ANR	8844288	Callee	get_bits		8844039	0					
ANR	8844289	Identifier	get_bits		8844039	0					
ANR	8844290	ArgumentList	gb		8844039	1					
ANR	8844291	Argument	gb		8844039	0					
ANR	8844292	Identifier	gb		8844039	0					
ANR	8844293	Argument	10		8844039	1					
ANR	8844294	PrimaryExpression	10		8844039	0					
ANR	8844295	ElseStatement	else		8844039	0					
ANR	8844296	IfStatement	if ( mquant == 2 )		8844039	0					
ANR	8844297	Condition	mquant == 2	77:21:1365:1375	8844039	0	True				
ANR	8844298	EqualityExpression	mquant == 2		8844039	0		==			
ANR	8844299	Identifier	mquant		8844039	0					
ANR	8844300	PrimaryExpression	2		8844039	1					
ANR	8844301	ExpressionStatement	"dcdiff = get_bits ( gb , 9 )"	77:34:1378:1402	8844039	1	True				
ANR	8844302	AssignmentExpression	"dcdiff = get_bits ( gb , 9 )"		8844039	0		=			
ANR	8844303	Identifier	dcdiff		8844039	0					
ANR	8844304	CallExpression	"get_bits ( gb , 9 )"		8844039	1					
ANR	8844305	Callee	get_bits		8844039	0					
ANR	8844306	Identifier	get_bits		8844039	0					
ANR	8844307	ArgumentList	gb		8844039	1					
ANR	8844308	Argument	gb		8844039	0					
ANR	8844309	Identifier	gb		8844039	0					
ANR	8844310	Argument	9		8844039	1					
ANR	8844311	PrimaryExpression	9		8844039	0					
ANR	8844312	ElseStatement	else		8844039	0					
ANR	8844313	ExpressionStatement	"dcdiff = get_bits ( gb , 8 )"	79:17:1422:1446	8844039	0	True				
ANR	8844314	AssignmentExpression	"dcdiff = get_bits ( gb , 8 )"		8844039	0		=			
ANR	8844315	Identifier	dcdiff		8844039	0					
ANR	8844316	CallExpression	"get_bits ( gb , 8 )"		8844039	1					
ANR	8844317	Callee	get_bits		8844039	0					
ANR	8844318	Identifier	get_bits		8844039	0					
ANR	8844319	ArgumentList	gb		8844039	1					
ANR	8844320	Argument	gb		8844039	0					
ANR	8844321	Identifier	gb		8844039	0					
ANR	8844322	Argument	8		8844039	1					
ANR	8844323	PrimaryExpression	8		8844039	0					
ANR	8844324	ElseStatement	else		8844039	0					
ANR	8844325	CompoundStatement		83:8:1367:1367	8844039	0					
ANR	8844326	IfStatement	if ( mquant == 1 )		8844039	0					
ANR	8844327	Condition	mquant == 1	87:16:1501:1511	8844039	0	True				
ANR	8844328	EqualityExpression	mquant == 1		8844039	0		==			
ANR	8844329	Identifier	mquant		8844039	0					
ANR	8844330	PrimaryExpression	1		8844039	1					
ANR	8844331	ExpressionStatement	"dcdiff = ( dcdiff << 2 ) + get_bits ( gb , 2 ) - 3"	89:16:1531:1573	8844039	1	True				
ANR	8844332	AssignmentExpression	"dcdiff = ( dcdiff << 2 ) + get_bits ( gb , 2 ) - 3"		8844039	0		=			
ANR	8844333	Identifier	dcdiff		8844039	0					
ANR	8844334	AdditiveExpression	"( dcdiff << 2 ) + get_bits ( gb , 2 ) - 3"		8844039	1		+			
ANR	8844335	ShiftExpression	dcdiff << 2		8844039	0		<<			
ANR	8844336	Identifier	dcdiff		8844039	0					
ANR	8844337	PrimaryExpression	2		8844039	1					
ANR	8844338	AdditiveExpression	"get_bits ( gb , 2 ) - 3"		8844039	1		-			
ANR	8844339	CallExpression	"get_bits ( gb , 2 )"		8844039	0					
ANR	8844340	Callee	get_bits		8844039	0					
ANR	8844341	Identifier	get_bits		8844039	0					
ANR	8844342	ArgumentList	gb		8844039	1					
ANR	8844343	Argument	gb		8844039	0					
ANR	8844344	Identifier	gb		8844039	0					
ANR	8844345	Argument	2		8844039	1					
ANR	8844346	PrimaryExpression	2		8844039	0					
ANR	8844347	PrimaryExpression	3		8844039	1					
ANR	8844348	ElseStatement	else		8844039	0					
ANR	8844349	IfStatement	if ( mquant == 2 )		8844039	0					
ANR	8844350	Condition	mquant == 2	91:21:1597:1607	8844039	0	True				
ANR	8844351	EqualityExpression	mquant == 2		8844039	0		==			
ANR	8844352	Identifier	mquant		8844039	0					
ANR	8844353	PrimaryExpression	2		8844039	1					
ANR	8844354	ExpressionStatement	"dcdiff = ( dcdiff << 1 ) + get_bits ( gb , 1 ) - 1"	93:16:1627:1669	8844039	1	True				
ANR	8844355	AssignmentExpression	"dcdiff = ( dcdiff << 1 ) + get_bits ( gb , 1 ) - 1"		8844039	0		=			
ANR	8844356	Identifier	dcdiff		8844039	0					
ANR	8844357	AdditiveExpression	"( dcdiff << 1 ) + get_bits ( gb , 1 ) - 1"		8844039	1		+			
ANR	8844358	ShiftExpression	dcdiff << 1		8844039	0		<<			
ANR	8844359	Identifier	dcdiff		8844039	0					
ANR	8844360	PrimaryExpression	1		8844039	1					
ANR	8844361	AdditiveExpression	"get_bits ( gb , 1 ) - 1"		8844039	1		-			
ANR	8844362	CallExpression	"get_bits ( gb , 1 )"		8844039	0					
ANR	8844363	Callee	get_bits		8844039	0					
ANR	8844364	Identifier	get_bits		8844039	0					
ANR	8844365	ArgumentList	gb		8844039	1					
ANR	8844366	Argument	gb		8844039	0					
ANR	8844367	Identifier	gb		8844039	0					
ANR	8844368	Argument	1		8844039	1					
ANR	8844369	PrimaryExpression	1		8844039	0					
ANR	8844370	PrimaryExpression	1		8844039	1					
ANR	8844371	IfStatement	"if ( get_bits ( gb , 1 ) )"		8844039	1					
ANR	8844372	Condition	"get_bits ( gb , 1 )"	97:12:1695:1709	8844039	0	True				
ANR	8844373	CallExpression	"get_bits ( gb , 1 )"		8844039	0					
ANR	8844374	Callee	get_bits		8844039	0					
ANR	8844375	Identifier	get_bits		8844039	0					
ANR	8844376	ArgumentList	gb		8844039	1					
ANR	8844377	Argument	gb		8844039	0					
ANR	8844378	Identifier	gb		8844039	0					
ANR	8844379	Argument	1		8844039	1					
ANR	8844380	PrimaryExpression	1		8844039	0					
ANR	8844381	ExpressionStatement	dcdiff = - dcdiff	99:12:1725:1741	8844039	1	True				
ANR	8844382	AssignmentExpression	dcdiff = - dcdiff		8844039	0		=			
ANR	8844383	Identifier	dcdiff		8844039	0					
ANR	8844384	UnaryOperationExpression	- dcdiff		8844039	1					
ANR	8844385	UnaryOperator	-		8844039	0					
ANR	8844386	Identifier	dcdiff		8844039	1					
ANR	8844387	ExpressionStatement	"dcdiff += vc1_pred_dc ( & v -> s , v -> overlap , mquant , n , a_avail , c_avail , & dc_val , & dc_pred_dir )"	107:4:1779:1871	8844039	18	True				
ANR	8844388	AssignmentExpression	"dcdiff += vc1_pred_dc ( & v -> s , v -> overlap , mquant , n , a_avail , c_avail , & dc_val , & dc_pred_dir )"		8844039	0		+=			
ANR	8844389	Identifier	dcdiff		8844039	0					
ANR	8844390	CallExpression	"vc1_pred_dc ( & v -> s , v -> overlap , mquant , n , a_avail , c_avail , & dc_val , & dc_pred_dir )"		8844039	1					
ANR	8844391	Callee	vc1_pred_dc		8844039	0					
ANR	8844392	Identifier	vc1_pred_dc		8844039	0					
ANR	8844393	ArgumentList	& v -> s		8844039	1					
ANR	8844394	Argument	& v -> s		8844039	0					
ANR	8844395	UnaryOperationExpression	& v -> s		8844039	0					
ANR	8844396	UnaryOperator	&		8844039	0					
ANR	8844397	PtrMemberAccess	v -> s		8844039	1					
ANR	8844398	Identifier	v		8844039	0					
ANR	8844399	Identifier	s		8844039	1					
ANR	8844400	Argument	v -> overlap		8844039	1					
ANR	8844401	PtrMemberAccess	v -> overlap		8844039	0					
ANR	8844402	Identifier	v		8844039	0					
ANR	8844403	Identifier	overlap		8844039	1					
ANR	8844404	Argument	mquant		8844039	2					
ANR	8844405	Identifier	mquant		8844039	0					
ANR	8844406	Argument	n		8844039	3					
ANR	8844407	Identifier	n		8844039	0					
ANR	8844408	Argument	a_avail		8844039	4					
ANR	8844409	Identifier	a_avail		8844039	0					
ANR	8844410	Argument	c_avail		8844039	5					
ANR	8844411	Identifier	c_avail		8844039	0					
ANR	8844412	Argument	& dc_val		8844039	6					
ANR	8844413	UnaryOperationExpression	& dc_val		8844039	0					
ANR	8844414	UnaryOperator	&		8844039	0					
ANR	8844415	Identifier	dc_val		8844039	1					
ANR	8844416	Argument	& dc_pred_dir		8844039	7					
ANR	8844417	UnaryOperationExpression	& dc_pred_dir		8844039	0					
ANR	8844418	UnaryOperator	&		8844039	0					
ANR	8844419	Identifier	dc_pred_dir		8844039	1					
ANR	8844420	ExpressionStatement	* dc_val = dcdiff	109:4:1878:1894	8844039	19	True				
ANR	8844421	AssignmentExpression	* dc_val = dcdiff		8844039	0		=			
ANR	8844422	UnaryOperationExpression	* dc_val		8844039	0					
ANR	8844423	UnaryOperator	*		8844039	0					
ANR	8844424	Identifier	dc_val		8844039	1					
ANR	8844425	Identifier	dcdiff		8844039	1					
ANR	8844426	IfStatement	if ( n < 4 )		8844039	20					
ANR	8844427	Condition	n < 4	117:8:1970:1974	8844039	0	True				
ANR	8844428	RelationalExpression	n < 4		8844039	0		<			
ANR	8844429	Identifier	n		8844039	0					
ANR	8844430	PrimaryExpression	4		8844039	1					
ANR	8844431	CompoundStatement		115:15:1862:1862	8844039	1					
ANR	8844432	ExpressionStatement	block [ 0 ] = dcdiff * s -> y_dc_scale	119:8:1988:2021	8844039	0	True				
ANR	8844433	AssignmentExpression	block [ 0 ] = dcdiff * s -> y_dc_scale		8844039	0		=			
ANR	8844434	ArrayIndexing	block [ 0 ]		8844039	0					
ANR	8844435	Identifier	block		8844039	0					
ANR	8844436	PrimaryExpression	0		8844039	1					
ANR	8844437	MultiplicativeExpression	dcdiff * s -> y_dc_scale		8844039	1		*			
ANR	8844438	Identifier	dcdiff		8844039	0					
ANR	8844439	PtrMemberAccess	s -> y_dc_scale		8844039	1					
ANR	8844440	Identifier	s		8844039	0					
ANR	8844441	Identifier	y_dc_scale		8844039	1					
ANR	8844442	ElseStatement	else		8844039	0					
ANR	8844443	CompoundStatement		119:11:1920:1920	8844039	0					
ANR	8844444	ExpressionStatement	block [ 0 ] = dcdiff * s -> c_dc_scale	123:8:2046:2079	8844039	0	True				
ANR	8844445	AssignmentExpression	block [ 0 ] = dcdiff * s -> c_dc_scale		8844039	0		=			
ANR	8844446	ArrayIndexing	block [ 0 ]		8844039	0					
ANR	8844447	Identifier	block		8844039	0					
ANR	8844448	PrimaryExpression	0		8844039	1					
ANR	8844449	MultiplicativeExpression	dcdiff * s -> c_dc_scale		8844039	1		*			
ANR	8844450	Identifier	dcdiff		8844039	0					
ANR	8844451	PtrMemberAccess	s -> c_dc_scale		8844039	1					
ANR	8844452	Identifier	s		8844039	0					
ANR	8844453	Identifier	c_dc_scale		8844039	1					
ANR	8844454	ExpressionStatement	run_diff = 0	129:4:2111:2123	8844039	21	True				
ANR	8844455	AssignmentExpression	run_diff = 0		8844039	0		=			
ANR	8844456	Identifier	run_diff		8844039	0					
ANR	8844457	PrimaryExpression	0		8844039	1					
ANR	8844458	ExpressionStatement	i = 0	131:4:2130:2135	8844039	22	True				
ANR	8844459	AssignmentExpression	i = 0		8844039	0		=			
ANR	8844460	Identifier	i		8844039	0					
ANR	8844461	PrimaryExpression	0		8844039	1					
ANR	8844462	ExpressionStatement	i = 1	137:4:2163:2168	8844039	23	True				
ANR	8844463	AssignmentExpression	i = 1		8844039	0		=			
ANR	8844464	Identifier	i		8844039	0					
ANR	8844465	PrimaryExpression	1		8844039	1					
ANR	8844466	IfStatement	if ( ! a_avail )		8844039	24					
ANR	8844467	Condition	! a_avail	143:7:2251:2258	8844039	0	True				
ANR	8844468	UnaryOperationExpression	! a_avail		8844039	0					
ANR	8844469	UnaryOperator	!		8844039	0					
ANR	8844470	Identifier	a_avail		8844039	1					
ANR	8844471	ExpressionStatement	dc_pred_dir = 1	143:17:2261:2276	8844039	1	True				
ANR	8844472	AssignmentExpression	dc_pred_dir = 1		8844039	0		=			
ANR	8844473	Identifier	dc_pred_dir		8844039	0					
ANR	8844474	PrimaryExpression	1		8844039	1					
ANR	8844475	IfStatement	if ( ! c_avail )		8844039	25					
ANR	8844476	Condition	! c_avail	145:7:2286:2293	8844039	0	True				
ANR	8844477	UnaryOperationExpression	! c_avail		8844039	0					
ANR	8844478	UnaryOperator	!		8844039	0					
ANR	8844479	Identifier	c_avail		8844039	1					
ANR	8844480	ExpressionStatement	dc_pred_dir = 0	145:17:2296:2311	8844039	1	True				
ANR	8844481	AssignmentExpression	dc_pred_dir = 0		8844039	0		=			
ANR	8844482	Identifier	dc_pred_dir		8844039	0					
ANR	8844483	PrimaryExpression	0		8844039	1					
ANR	8844484	IfStatement	if ( ! a_avail && ! c_avail )		8844039	26					
ANR	8844485	Condition	! a_avail && ! c_avail	147:7:2321:2340	8844039	0	True				
ANR	8844486	AndExpression	! a_avail && ! c_avail		8844039	0		&&			
ANR	8844487	UnaryOperationExpression	! a_avail		8844039	0					
ANR	8844488	UnaryOperator	!		8844039	0					
ANR	8844489	Identifier	a_avail		8844039	1					
ANR	8844490	UnaryOperationExpression	! c_avail		8844039	1					
ANR	8844491	UnaryOperator	!		8844039	0					
ANR	8844492	Identifier	c_avail		8844039	1					
ANR	8844493	ExpressionStatement	use_pred = 0	147:29:2343:2355	8844039	1	True				
ANR	8844494	AssignmentExpression	use_pred = 0		8844039	0		=			
ANR	8844495	Identifier	use_pred		8844039	0					
ANR	8844496	PrimaryExpression	0		8844039	1					
ANR	8844497	ExpressionStatement	ac_val = s -> ac_val [ 0 ] [ 0 ] + s -> block_index [ n ] * 16	149:4:2362:2411	8844039	27	True				
ANR	8844498	AssignmentExpression	ac_val = s -> ac_val [ 0 ] [ 0 ] + s -> block_index [ n ] * 16		8844039	0		=			
ANR	8844499	Identifier	ac_val		8844039	0					
ANR	8844500	AdditiveExpression	s -> ac_val [ 0 ] [ 0 ] + s -> block_index [ n ] * 16		8844039	1		+			
ANR	8844501	ArrayIndexing	s -> ac_val [ 0 ] [ 0 ]		8844039	0					
ANR	8844502	ArrayIndexing	s -> ac_val [ 0 ]		8844039	0					
ANR	8844503	PtrMemberAccess	s -> ac_val		8844039	0					
ANR	8844504	Identifier	s		8844039	0					
ANR	8844505	Identifier	ac_val		8844039	1					
ANR	8844506	PrimaryExpression	0		8844039	1					
ANR	8844507	PrimaryExpression	0		8844039	1					
ANR	8844508	MultiplicativeExpression	s -> block_index [ n ] * 16		8844039	1		*			
ANR	8844509	ArrayIndexing	s -> block_index [ n ]		8844039	0					
ANR	8844510	PtrMemberAccess	s -> block_index		8844039	0					
ANR	8844511	Identifier	s		8844039	0					
ANR	8844512	Identifier	block_index		8844039	1					
ANR	8844513	Identifier	n		8844039	1					
ANR	8844514	PrimaryExpression	16		8844039	1					
ANR	8844515	ExpressionStatement	ac_val2 = ac_val	151:4:2418:2434	8844039	28	True				
ANR	8844516	AssignmentExpression	ac_val2 = ac_val		8844039	0		=			
ANR	8844517	Identifier	ac_val2		8844039	0					
ANR	8844518	Identifier	ac_val		8844039	1					
ANR	8844519	ExpressionStatement	scale = mquant * 2 + v -> halfpq	155:4:2443:2473	8844039	29	True				
ANR	8844520	AssignmentExpression	scale = mquant * 2 + v -> halfpq		8844039	0		=			
ANR	8844521	Identifier	scale		8844039	0					
ANR	8844522	AdditiveExpression	mquant * 2 + v -> halfpq		8844039	1		+			
ANR	8844523	MultiplicativeExpression	mquant * 2		8844039	0		*			
ANR	8844524	Identifier	mquant		8844039	0					
ANR	8844525	PrimaryExpression	2		8844039	1					
ANR	8844526	PtrMemberAccess	v -> halfpq		8844039	1					
ANR	8844527	Identifier	v		8844039	0					
ANR	8844528	Identifier	halfpq		8844039	1					
ANR	8844529	IfStatement	if ( dc_pred_dir )		8844039	30					
ANR	8844530	Condition	dc_pred_dir	159:7:2485:2495	8844039	0	True				
ANR	8844531	Identifier	dc_pred_dir		8844039	0					
ANR	8844532	ExpressionStatement	ac_val -= 16	161:8:2514:2526	8844039	1	True				
ANR	8844533	AssignmentExpression	ac_val -= 16		8844039	0		-=			
ANR	8844534	Identifier	ac_val		8844039	0					
ANR	8844535	PrimaryExpression	16		8844039	1					
ANR	8844536	ElseStatement	else		8844039	0					
ANR	8844537	ExpressionStatement	ac_val -= 16 * s -> block_wrap [ n ]	165:8:2553:2584	8844039	0	True				
ANR	8844538	AssignmentExpression	ac_val -= 16 * s -> block_wrap [ n ]		8844039	0		-=			
ANR	8844539	Identifier	ac_val		8844039	0					
ANR	8844540	MultiplicativeExpression	16 * s -> block_wrap [ n ]		8844039	1		*			
ANR	8844541	PrimaryExpression	16		8844039	0					
ANR	8844542	ArrayIndexing	s -> block_wrap [ n ]		8844039	1					
ANR	8844543	PtrMemberAccess	s -> block_wrap		8844039	0					
ANR	8844544	Identifier	s		8844039	0					
ANR	8844545	Identifier	block_wrap		8844039	1					
ANR	8844546	Identifier	n		8844039	1					
ANR	8844547	ExpressionStatement	q1 = s -> current_picture . qscale_table [ mb_pos ]	169:4:2593:2637	8844039	31	True				
ANR	8844548	AssignmentExpression	q1 = s -> current_picture . qscale_table [ mb_pos ]		8844039	0		=			
ANR	8844549	Identifier	q1		8844039	0					
ANR	8844550	ArrayIndexing	s -> current_picture . qscale_table [ mb_pos ]		8844039	1					
ANR	8844551	MemberAccess	s -> current_picture . qscale_table		8844039	0					
ANR	8844552	PtrMemberAccess	s -> current_picture		8844039	0					
ANR	8844553	Identifier	s		8844039	0					
ANR	8844554	Identifier	current_picture		8844039	1					
ANR	8844555	Identifier	qscale_table		8844039	1					
ANR	8844556	Identifier	mb_pos		8844039	1					
ANR	8844557	IfStatement	if ( dc_pred_dir && c_avail )		8844039	32					
ANR	8844558	Condition	dc_pred_dir && c_avail	171:7:2647:2668	8844039	0	True				
ANR	8844559	AndExpression	dc_pred_dir && c_avail		8844039	0		&&			
ANR	8844560	Identifier	dc_pred_dir		8844039	0					
ANR	8844561	Identifier	c_avail		8844039	1					
ANR	8844562	ExpressionStatement	q2 = s -> current_picture . qscale_table [ mb_pos - 1 ]	171:31:2671:2719	8844039	1	True				
ANR	8844563	AssignmentExpression	q2 = s -> current_picture . qscale_table [ mb_pos - 1 ]		8844039	0		=			
ANR	8844564	Identifier	q2		8844039	0					
ANR	8844565	ArrayIndexing	s -> current_picture . qscale_table [ mb_pos - 1 ]		8844039	1					
ANR	8844566	MemberAccess	s -> current_picture . qscale_table		8844039	0					
ANR	8844567	PtrMemberAccess	s -> current_picture		8844039	0					
ANR	8844568	Identifier	s		8844039	0					
ANR	8844569	Identifier	current_picture		8844039	1					
ANR	8844570	Identifier	qscale_table		8844039	1					
ANR	8844571	AdditiveExpression	mb_pos - 1		8844039	1		-			
ANR	8844572	Identifier	mb_pos		8844039	0					
ANR	8844573	PrimaryExpression	1		8844039	1					
ANR	8844574	IfStatement	if ( ! dc_pred_dir && a_avail )		8844039	33					
ANR	8844575	Condition	! dc_pred_dir && a_avail	173:7:2729:2751	8844039	0	True				
ANR	8844576	AndExpression	! dc_pred_dir && a_avail		8844039	0		&&			
ANR	8844577	UnaryOperationExpression	! dc_pred_dir		8844039	0					
ANR	8844578	UnaryOperator	!		8844039	0					
ANR	8844579	Identifier	dc_pred_dir		8844039	1					
ANR	8844580	Identifier	a_avail		8844039	1					
ANR	8844581	ExpressionStatement	q2 = s -> current_picture . qscale_table [ mb_pos - s -> mb_stride ]	173:32:2754:2813	8844039	1	True				
ANR	8844582	AssignmentExpression	q2 = s -> current_picture . qscale_table [ mb_pos - s -> mb_stride ]		8844039	0		=			
ANR	8844583	Identifier	q2		8844039	0					
ANR	8844584	ArrayIndexing	s -> current_picture . qscale_table [ mb_pos - s -> mb_stride ]		8844039	1					
ANR	8844585	MemberAccess	s -> current_picture . qscale_table		8844039	0					
ANR	8844586	PtrMemberAccess	s -> current_picture		8844039	0					
ANR	8844587	Identifier	s		8844039	0					
ANR	8844588	Identifier	current_picture		8844039	1					
ANR	8844589	Identifier	qscale_table		8844039	1					
ANR	8844590	AdditiveExpression	mb_pos - s -> mb_stride		8844039	1		-			
ANR	8844591	Identifier	mb_pos		8844039	0					
ANR	8844592	PtrMemberAccess	s -> mb_stride		8844039	1					
ANR	8844593	Identifier	s		8844039	0					
ANR	8844594	Identifier	mb_stride		8844039	1					
ANR	8844595	IfStatement	if ( n && n < 4 )		8844039	34					
ANR	8844596	Condition	n && n < 4	175:7:2823:2830	8844039	0	True				
ANR	8844597	AndExpression	n && n < 4		8844039	0		&&			
ANR	8844598	Identifier	n		8844039	0					
ANR	8844599	RelationalExpression	n < 4		8844039	1		<			
ANR	8844600	Identifier	n		8844039	0					
ANR	8844601	PrimaryExpression	4		8844039	1					
ANR	8844602	ExpressionStatement	q2 = q1	175:17:2833:2840	8844039	1	True				
ANR	8844603	AssignmentExpression	q2 = q1		8844039	0		=			
ANR	8844604	Identifier	q2		8844039	0					
ANR	8844605	Identifier	q1		8844039	1					
ANR	8844606	IfStatement	if ( coded )		8844039	35					
ANR	8844607	Condition	coded	179:7:2852:2856	8844039	0	True				
ANR	8844608	Identifier	coded		8844039	0					
ANR	8844609	CompoundStatement		183:8:2824:2829	8844039	1					
ANR	8844610	IdentifierDeclStatement	"int last = 0 , skip , value ;"	181:8:2870:2895	8844039	0	True				
ANR	8844611	IdentifierDecl	last = 0		8844039	0					
ANR	8844612	IdentifierDeclType	int		8844039	0					
ANR	8844613	Identifier	last		8844039	1					
ANR	8844614	AssignmentExpression	last = 0		8844039	2		=			
ANR	8844615	Identifier	last		8844039	0					
ANR	8844616	PrimaryExpression	0		8844039	1					
ANR	8844617	IdentifierDecl	skip		8844039	1					
ANR	8844618	IdentifierDeclType	int		8844039	0					
ANR	8844619	Identifier	skip		8844039	1					
ANR	8844620	IdentifierDecl	value		8844039	2					
ANR	8844621	IdentifierDeclType	int		8844039	0					
ANR	8844622	Identifier	value		8844039	1					
ANR	8844623	IdentifierDeclStatement	const int8_t * zz_table ;	183:8:2906:2928	8844039	1	True				
ANR	8844624	IdentifierDecl	* zz_table		8844039	0					
ANR	8844625	IdentifierDeclType	const int8_t *		8844039	0					
ANR	8844626	Identifier	zz_table		8844039	1					
ANR	8844627	IdentifierDeclStatement	int k ;	185:8:2939:2944	8844039	2	True				
ANR	8844628	IdentifierDecl	k		8844039	0					
ANR	8844629	IdentifierDeclType	int		8844039	0					
ANR	8844630	Identifier	k		8844039	1					
ANR	8844631	ExpressionStatement	zz_table = vc1_simple_progressive_8x8_zz	189:8:2957:2997	8844039	3	True				
ANR	8844632	AssignmentExpression	zz_table = vc1_simple_progressive_8x8_zz		8844039	0		=			
ANR	8844633	Identifier	zz_table		8844039	0					
ANR	8844634	Identifier	vc1_simple_progressive_8x8_zz		8844039	1					
ANR	8844635	WhileStatement	while ( ! last )		8844039	4					
ANR	8844636	Condition	! last	193:15:3017:3021	8844039	0	True				
ANR	8844637	UnaryOperationExpression	! last		8844039	0					
ANR	8844638	UnaryOperator	!		8844039	0					
ANR	8844639	Identifier	last		8844039	1					
ANR	8844640	CompoundStatement		191:22:2909:2909	8844039	1					
ANR	8844641	ExpressionStatement	"vc1_decode_ac_coeff ( v , & last , & skip , & value , codingset )"	195:12:3039:3094	8844039	0	True				
ANR	8844642	CallExpression	"vc1_decode_ac_coeff ( v , & last , & skip , & value , codingset )"		8844039	0					
ANR	8844643	Callee	vc1_decode_ac_coeff		8844039	0					
ANR	8844644	Identifier	vc1_decode_ac_coeff		8844039	0					
ANR	8844645	ArgumentList	v		8844039	1					
ANR	8844646	Argument	v		8844039	0					
ANR	8844647	Identifier	v		8844039	0					
ANR	8844648	Argument	& last		8844039	1					
ANR	8844649	UnaryOperationExpression	& last		8844039	0					
ANR	8844650	UnaryOperator	&		8844039	0					
ANR	8844651	Identifier	last		8844039	1					
ANR	8844652	Argument	& skip		8844039	2					
ANR	8844653	UnaryOperationExpression	& skip		8844039	0					
ANR	8844654	UnaryOperator	&		8844039	0					
ANR	8844655	Identifier	skip		8844039	1					
ANR	8844656	Argument	& value		8844039	3					
ANR	8844657	UnaryOperationExpression	& value		8844039	0					
ANR	8844658	UnaryOperator	&		8844039	0					
ANR	8844659	Identifier	value		8844039	1					
ANR	8844660	Argument	codingset		8844039	4					
ANR	8844661	Identifier	codingset		8844039	0					
ANR	8844662	ExpressionStatement	i += skip	197:12:3109:3118	8844039	1	True				
ANR	8844663	AssignmentExpression	i += skip		8844039	0		+=			
ANR	8844664	Identifier	i		8844039	0					
ANR	8844665	Identifier	skip		8844039	1					
ANR	8844666	IfStatement	if ( i > 63 )		8844039	2					
ANR	8844667	Condition	i > 63	199:15:3136:3141	8844039	0	True				
ANR	8844668	RelationalExpression	i > 63		8844039	0		>			
ANR	8844669	Identifier	i		8844039	0					
ANR	8844670	PrimaryExpression	63		8844039	1					
ANR	8844671	BreakStatement	break ;	201:16:3161:3166	8844039	1	True				
ANR	8844672	ExpressionStatement	block [ zz_table [ i ++ ] ] = value	203:12:3181:3209	8844039	3	True				
ANR	8844673	AssignmentExpression	block [ zz_table [ i ++ ] ] = value		8844039	0		=			
ANR	8844674	ArrayIndexing	block [ zz_table [ i ++ ] ]		8844039	0					
ANR	8844675	Identifier	block		8844039	0					
ANR	8844676	ArrayIndexing	zz_table [ i ++ ]		8844039	1					
ANR	8844677	Identifier	zz_table		8844039	0					
ANR	8844678	PostIncDecOperationExpression	i ++		8844039	1					
ANR	8844679	Identifier	i		8844039	0					
ANR	8844680	IncDec	++		8844039	1					
ANR	8844681	Identifier	value		8844039	1					
ANR	8844682	IfStatement	if ( use_pred )		8844039	5					
ANR	8844683	Condition	use_pred	211:11:3281:3288	8844039	0	True				
ANR	8844684	Identifier	use_pred		8844039	0					
ANR	8844685	CompoundStatement		209:21:3176:3176	8844039	1					
ANR	8844686	IfStatement	if ( q2 && q1 != q2 )		8844039	0					
ANR	8844687	Condition	q2 && q1 != q2	215:15:3354:3365	8844039	0	True				
ANR	8844688	AndExpression	q2 && q1 != q2		8844039	0		&&			
ANR	8844689	Identifier	q2		8844039	0					
ANR	8844690	EqualityExpression	q1 != q2		8844039	1		!=			
ANR	8844691	Identifier	q1		8844039	0					
ANR	8844692	Identifier	q2		8844039	1					
ANR	8844693	CompoundStatement		213:29:3253:3253	8844039	1					
ANR	8844694	ExpressionStatement	q1 = q1 * 2 + ( ( q1 == v -> pq ) ? v -> halfpq : 0 ) - 1	217:16:3387:3436	8844039	0	True				
ANR	8844695	AssignmentExpression	q1 = q1 * 2 + ( ( q1 == v -> pq ) ? v -> halfpq : 0 ) - 1		8844039	0		=			
ANR	8844696	Identifier	q1		8844039	0					
ANR	8844697	AdditiveExpression	q1 * 2 + ( ( q1 == v -> pq ) ? v -> halfpq : 0 ) - 1		8844039	1		+			
ANR	8844698	MultiplicativeExpression	q1 * 2		8844039	0		*			
ANR	8844699	Identifier	q1		8844039	0					
ANR	8844700	PrimaryExpression	2		8844039	1					
ANR	8844701	AdditiveExpression	( ( q1 == v -> pq ) ? v -> halfpq : 0 ) - 1		8844039	1		-			
ANR	8844702	ConditionalExpression	( q1 == v -> pq ) ? v -> halfpq : 0		8844039	0					
ANR	8844703	Condition	q1 == v -> pq		8844039	0					
ANR	8844704	EqualityExpression	q1 == v -> pq		8844039	0		==			
ANR	8844705	Identifier	q1		8844039	0					
ANR	8844706	PtrMemberAccess	v -> pq		8844039	1					
ANR	8844707	Identifier	v		8844039	0					
ANR	8844708	Identifier	pq		8844039	1					
ANR	8844709	PtrMemberAccess	v -> halfpq		8844039	1					
ANR	8844710	Identifier	v		8844039	0					
ANR	8844711	Identifier	halfpq		8844039	1					
ANR	8844712	PrimaryExpression	0		8844039	2					
ANR	8844713	PrimaryExpression	1		8844039	1					
ANR	8844714	ExpressionStatement	q2 = q2 * 2 + ( ( q2 == v -> pq ) ? v -> halfpq : 0 ) - 1	219:16:3455:3504	8844039	1	True				
ANR	8844715	AssignmentExpression	q2 = q2 * 2 + ( ( q2 == v -> pq ) ? v -> halfpq : 0 ) - 1		8844039	0		=			
ANR	8844716	Identifier	q2		8844039	0					
ANR	8844717	AdditiveExpression	q2 * 2 + ( ( q2 == v -> pq ) ? v -> halfpq : 0 ) - 1		8844039	1		+			
ANR	8844718	MultiplicativeExpression	q2 * 2		8844039	0		*			
ANR	8844719	Identifier	q2		8844039	0					
ANR	8844720	PrimaryExpression	2		8844039	1					
ANR	8844721	AdditiveExpression	( ( q2 == v -> pq ) ? v -> halfpq : 0 ) - 1		8844039	1		-			
ANR	8844722	ConditionalExpression	( q2 == v -> pq ) ? v -> halfpq : 0		8844039	0					
ANR	8844723	Condition	q2 == v -> pq		8844039	0					
ANR	8844724	EqualityExpression	q2 == v -> pq		8844039	0		==			
ANR	8844725	Identifier	q2		8844039	0					
ANR	8844726	PtrMemberAccess	v -> pq		8844039	1					
ANR	8844727	Identifier	v		8844039	0					
ANR	8844728	Identifier	pq		8844039	1					
ANR	8844729	PtrMemberAccess	v -> halfpq		8844039	1					
ANR	8844730	Identifier	v		8844039	0					
ANR	8844731	Identifier	halfpq		8844039	1					
ANR	8844732	PrimaryExpression	0		8844039	2					
ANR	8844733	PrimaryExpression	1		8844039	1					
ANR	8844734	IfStatement	if ( dc_pred_dir )		8844039	2					
ANR	8844735	Condition	dc_pred_dir	223:19:3528:3538	8844039	0	True				
ANR	8844736	Identifier	dc_pred_dir		8844039	0					
ANR	8844737	CompoundStatement		221:32:3426:3426	8844039	1					
ANR	8844738	ForStatement	for ( k = 1 ; k < 8 ; k ++ )		8844039	0					
ANR	8844739	ForInit	k = 1 ;	225:24:3575:3580	8844039	0	True				
ANR	8844740	AssignmentExpression	k = 1		8844039	0		=			
ANR	8844741	Identifier	k		8844039	0					
ANR	8844742	PrimaryExpression	1		8844039	1					
ANR	8844743	Condition	k < 8	225:31:3582:3586	8844039	1	True				
ANR	8844744	RelationalExpression	k < 8		8844039	0		<			
ANR	8844745	Identifier	k		8844039	0					
ANR	8844746	PrimaryExpression	8		8844039	1					
ANR	8844747	PostIncDecOperationExpression	k ++	225:38:3589:3591	8844039	2	True				
ANR	8844748	Identifier	k		8844039	0					
ANR	8844749	IncDec	++		8844039	1					
ANR	8844750	ExpressionStatement	block [ k << 3 ] += ( ac_val [ k ] * q2 * vc1_dqscale [ q1 - 1 ] + 0x20000 ) >> 18	227:24:3619:3690	8844039	3	True				
ANR	8844751	AssignmentExpression	block [ k << 3 ] += ( ac_val [ k ] * q2 * vc1_dqscale [ q1 - 1 ] + 0x20000 ) >> 18		8844039	0		+=			
ANR	8844752	ArrayIndexing	block [ k << 3 ]		8844039	0					
ANR	8844753	Identifier	block		8844039	0					
ANR	8844754	ShiftExpression	k << 3		8844039	1		<<			
ANR	8844755	Identifier	k		8844039	0					
ANR	8844756	PrimaryExpression	3		8844039	1					
ANR	8844757	ShiftExpression	( ac_val [ k ] * q2 * vc1_dqscale [ q1 - 1 ] + 0x20000 ) >> 18		8844039	1		>>			
ANR	8844758	AdditiveExpression	ac_val [ k ] * q2 * vc1_dqscale [ q1 - 1 ] + 0x20000		8844039	0		+			
ANR	8844759	MultiplicativeExpression	ac_val [ k ] * q2 * vc1_dqscale [ q1 - 1 ]		8844039	0		*			
ANR	8844760	ArrayIndexing	ac_val [ k ]		8844039	0					
ANR	8844761	Identifier	ac_val		8844039	0					
ANR	8844762	Identifier	k		8844039	1					
ANR	8844763	MultiplicativeExpression	q2 * vc1_dqscale [ q1 - 1 ]		8844039	1		*			
ANR	8844764	Identifier	q2		8844039	0					
ANR	8844765	ArrayIndexing	vc1_dqscale [ q1 - 1 ]		8844039	1					
ANR	8844766	Identifier	vc1_dqscale		8844039	0					
ANR	8844767	AdditiveExpression	q1 - 1		8844039	1		-			
ANR	8844768	Identifier	q1		8844039	0					
ANR	8844769	PrimaryExpression	1		8844039	1					
ANR	8844770	PrimaryExpression	0x20000		8844039	1					
ANR	8844771	PrimaryExpression	18		8844039	1					
ANR	8844772	ElseStatement	else		8844039	0					
ANR	8844773	CompoundStatement		227:23:3601:3601	8844039	0					
ANR	8844774	ForStatement	for ( k = 1 ; k < 8 ; k ++ )		8844039	0					
ANR	8844775	ForInit	k = 1 ;	231:24:3749:3754	8844039	0	True				
ANR	8844776	AssignmentExpression	k = 1		8844039	0		=			
ANR	8844777	Identifier	k		8844039	0					
ANR	8844778	PrimaryExpression	1		8844039	1					
ANR	8844779	Condition	k < 8	231:31:3756:3760	8844039	1	True				
ANR	8844780	RelationalExpression	k < 8		8844039	0		<			
ANR	8844781	Identifier	k		8844039	0					
ANR	8844782	PrimaryExpression	8		8844039	1					
ANR	8844783	PostIncDecOperationExpression	k ++	231:38:3763:3765	8844039	2	True				
ANR	8844784	Identifier	k		8844039	0					
ANR	8844785	IncDec	++		8844039	1					
ANR	8844786	ExpressionStatement	block [ k ] += ( ac_val [ k + 8 ] * q2 * vc1_dqscale [ q1 - 1 ] + 0x20000 ) >> 18	233:24:3793:3863	8844039	3	True				
ANR	8844787	AssignmentExpression	block [ k ] += ( ac_val [ k + 8 ] * q2 * vc1_dqscale [ q1 - 1 ] + 0x20000 ) >> 18		8844039	0		+=			
ANR	8844788	ArrayIndexing	block [ k ]		8844039	0					
ANR	8844789	Identifier	block		8844039	0					
ANR	8844790	Identifier	k		8844039	1					
ANR	8844791	ShiftExpression	( ac_val [ k + 8 ] * q2 * vc1_dqscale [ q1 - 1 ] + 0x20000 ) >> 18		8844039	1		>>			
ANR	8844792	AdditiveExpression	ac_val [ k + 8 ] * q2 * vc1_dqscale [ q1 - 1 ] + 0x20000		8844039	0		+			
ANR	8844793	MultiplicativeExpression	ac_val [ k + 8 ] * q2 * vc1_dqscale [ q1 - 1 ]		8844039	0		*			
ANR	8844794	ArrayIndexing	ac_val [ k + 8 ]		8844039	0					
ANR	8844795	Identifier	ac_val		8844039	0					
ANR	8844796	AdditiveExpression	k + 8		8844039	1		+			
ANR	8844797	Identifier	k		8844039	0					
ANR	8844798	PrimaryExpression	8		8844039	1					
ANR	8844799	MultiplicativeExpression	q2 * vc1_dqscale [ q1 - 1 ]		8844039	1		*			
ANR	8844800	Identifier	q2		8844039	0					
ANR	8844801	ArrayIndexing	vc1_dqscale [ q1 - 1 ]		8844039	1					
ANR	8844802	Identifier	vc1_dqscale		8844039	0					
ANR	8844803	AdditiveExpression	q1 - 1		8844039	1		-			
ANR	8844804	Identifier	q1		8844039	0					
ANR	8844805	PrimaryExpression	1		8844039	1					
ANR	8844806	PrimaryExpression	0x20000		8844039	1					
ANR	8844807	PrimaryExpression	18		8844039	1					
ANR	8844808	ElseStatement	else		8844039	0					
ANR	8844809	CompoundStatement		235:19:3789:3789	8844039	0					
ANR	8844810	IfStatement	if ( dc_pred_dir )		8844039	0					
ANR	8844811	Condition	dc_pred_dir	239:19:3926:3936	8844039	0	True				
ANR	8844812	Identifier	dc_pred_dir		8844039	0					
ANR	8844813	CompoundStatement		237:32:3824:3824	8844039	1					
ANR	8844814	ForStatement	for ( k = 1 ; k < 8 ; k ++ )		8844039	0					
ANR	8844815	ForInit	k = 1 ;	241:24:3973:3978	8844039	0	True				
ANR	8844816	AssignmentExpression	k = 1		8844039	0		=			
ANR	8844817	Identifier	k		8844039	0					
ANR	8844818	PrimaryExpression	1		8844039	1					
ANR	8844819	Condition	k < 8	241:31:3980:3984	8844039	1	True				
ANR	8844820	RelationalExpression	k < 8		8844039	0		<			
ANR	8844821	Identifier	k		8844039	0					
ANR	8844822	PrimaryExpression	8		8844039	1					
ANR	8844823	PostIncDecOperationExpression	k ++	241:38:3987:3989	8844039	2	True				
ANR	8844824	Identifier	k		8844039	0					
ANR	8844825	IncDec	++		8844039	1					
ANR	8844826	ExpressionStatement	block [ k << 3 ] += ac_val [ k ]	243:24:4017:4043	8844039	3	True				
ANR	8844827	AssignmentExpression	block [ k << 3 ] += ac_val [ k ]		8844039	0		+=			
ANR	8844828	ArrayIndexing	block [ k << 3 ]		8844039	0					
ANR	8844829	Identifier	block		8844039	0					
ANR	8844830	ShiftExpression	k << 3		8844039	1		<<			
ANR	8844831	Identifier	k		8844039	0					
ANR	8844832	PrimaryExpression	3		8844039	1					
ANR	8844833	ArrayIndexing	ac_val [ k ]		8844039	1					
ANR	8844834	Identifier	ac_val		8844039	0					
ANR	8844835	Identifier	k		8844039	1					
ANR	8844836	ElseStatement	else		8844039	0					
ANR	8844837	CompoundStatement		243:23:3954:3954	8844039	0					
ANR	8844838	ForStatement	for ( k = 1 ; k < 8 ; k ++ )		8844039	0					
ANR	8844839	ForInit	k = 1 ;	247:24:4102:4107	8844039	0	True				
ANR	8844840	AssignmentExpression	k = 1		8844039	0		=			
ANR	8844841	Identifier	k		8844039	0					
ANR	8844842	PrimaryExpression	1		8844039	1					
ANR	8844843	Condition	k < 8	247:31:4109:4113	8844039	1	True				
ANR	8844844	RelationalExpression	k < 8		8844039	0		<			
ANR	8844845	Identifier	k		8844039	0					
ANR	8844846	PrimaryExpression	8		8844039	1					
ANR	8844847	PostIncDecOperationExpression	k ++	247:38:4116:4118	8844039	2	True				
ANR	8844848	Identifier	k		8844039	0					
ANR	8844849	IncDec	++		8844039	1					
ANR	8844850	ExpressionStatement	block [ k ] += ac_val [ k + 8 ]	249:24:4146:4171	8844039	3	True				
ANR	8844851	AssignmentExpression	block [ k ] += ac_val [ k + 8 ]		8844039	0		+=			
ANR	8844852	ArrayIndexing	block [ k ]		8844039	0					
ANR	8844853	Identifier	block		8844039	0					
ANR	8844854	Identifier	k		8844039	1					
ANR	8844855	ArrayIndexing	ac_val [ k + 8 ]		8844039	1					
ANR	8844856	Identifier	ac_val		8844039	0					
ANR	8844857	AdditiveExpression	k + 8		8844039	1		+			
ANR	8844858	Identifier	k		8844039	0					
ANR	8844859	PrimaryExpression	8		8844039	1					
ANR	8844860	ForStatement	for ( k = 1 ; k < 8 ; k ++ )		8844039	6					
ANR	8844861	ForInit	k = 1 ;	259:12:4284:4289	8844039	0	True				
ANR	8844862	AssignmentExpression	k = 1		8844039	0		=			
ANR	8844863	Identifier	k		8844039	0					
ANR	8844864	PrimaryExpression	1		8844039	1					
ANR	8844865	Condition	k < 8	259:19:4291:4295	8844039	1	True				
ANR	8844866	RelationalExpression	k < 8		8844039	0		<			
ANR	8844867	Identifier	k		8844039	0					
ANR	8844868	PrimaryExpression	8		8844039	1					
ANR	8844869	PostIncDecOperationExpression	k ++	259:26:4298:4300	8844039	2	True				
ANR	8844870	Identifier	k		8844039	0					
ANR	8844871	IncDec	++		8844039	1					
ANR	8844872	CompoundStatement		257:31:4188:4188	8844039	3					
ANR	8844873	ExpressionStatement	ac_val2 [ k ] = block [ k << 3 ]	261:12:4318:4344	8844039	0	True				
ANR	8844874	AssignmentExpression	ac_val2 [ k ] = block [ k << 3 ]		8844039	0		=			
ANR	8844875	ArrayIndexing	ac_val2 [ k ]		8844039	0					
ANR	8844876	Identifier	ac_val2		8844039	0					
ANR	8844877	Identifier	k		8844039	1					
ANR	8844878	ArrayIndexing	block [ k << 3 ]		8844039	1					
ANR	8844879	Identifier	block		8844039	0					
ANR	8844880	ShiftExpression	k << 3		8844039	1		<<			
ANR	8844881	Identifier	k		8844039	0					
ANR	8844882	PrimaryExpression	3		8844039	1					
ANR	8844883	ExpressionStatement	ac_val2 [ k + 8 ] = block [ k ]	263:12:4359:4384	8844039	1	True				
ANR	8844884	AssignmentExpression	ac_val2 [ k + 8 ] = block [ k ]		8844039	0		=			
ANR	8844885	ArrayIndexing	ac_val2 [ k + 8 ]		8844039	0					
ANR	8844886	Identifier	ac_val2		8844039	0					
ANR	8844887	AdditiveExpression	k + 8		8844039	1		+			
ANR	8844888	Identifier	k		8844039	0					
ANR	8844889	PrimaryExpression	8		8844039	1					
ANR	8844890	ArrayIndexing	block [ k ]		8844039	1					
ANR	8844891	Identifier	block		8844039	0					
ANR	8844892	Identifier	k		8844039	1					
ANR	8844893	ForStatement	for ( k = 1 ; k < 64 ; k ++ )		8844039	7					
ANR	8844894	ForInit	k = 1 ;	271:12:4443:4448	8844039	0	True				
ANR	8844895	AssignmentExpression	k = 1		8844039	0		=			
ANR	8844896	Identifier	k		8844039	0					
ANR	8844897	PrimaryExpression	1		8844039	1					
ANR	8844898	Condition	k < 64	271:19:4450:4455	8844039	1	True				
ANR	8844899	RelationalExpression	k < 64		8844039	0		<			
ANR	8844900	Identifier	k		8844039	0					
ANR	8844901	PrimaryExpression	64		8844039	1					
ANR	8844902	PostIncDecOperationExpression	k ++	271:27:4458:4460	8844039	2	True				
ANR	8844903	Identifier	k		8844039	0					
ANR	8844904	IncDec	++		8844039	1					
ANR	8844905	IfStatement	if ( block [ k ] )		8844039	3					
ANR	8844906	Condition	block [ k ]	273:15:4479:4486	8844039	0	True				
ANR	8844907	ArrayIndexing	block [ k ]		8844039	0					
ANR	8844908	Identifier	block		8844039	0					
ANR	8844909	Identifier	k		8844039	1					
ANR	8844910	CompoundStatement		271:25:4374:4374	8844039	1					
ANR	8844911	ExpressionStatement	block [ k ] *= scale	275:16:4508:4525	8844039	0	True				
ANR	8844912	AssignmentExpression	block [ k ] *= scale		8844039	0		*=			
ANR	8844913	ArrayIndexing	block [ k ]		8844039	0					
ANR	8844914	Identifier	block		8844039	0					
ANR	8844915	Identifier	k		8844039	1					
ANR	8844916	Identifier	scale		8844039	1					
ANR	8844917	IfStatement	if ( ! v -> pquantizer )		8844039	1					
ANR	8844918	Condition	! v -> pquantizer	277:19:4547:4560	8844039	0	True				
ANR	8844919	UnaryOperationExpression	! v -> pquantizer		8844039	0					
ANR	8844920	UnaryOperator	!		8844039	0					
ANR	8844921	PtrMemberAccess	v -> pquantizer		8844039	1					
ANR	8844922	Identifier	v		8844039	0					
ANR	8844923	Identifier	pquantizer		8844039	1					
ANR	8844924	ExpressionStatement	block [ k ] += ( block [ k ] < 0 ) ? - mquant : mquant	279:20:4584:4629	8844039	1	True				
ANR	8844925	AssignmentExpression	block [ k ] += ( block [ k ] < 0 ) ? - mquant : mquant		8844039	0		+=			
ANR	8844926	ArrayIndexing	block [ k ]		8844039	0					
ANR	8844927	Identifier	block		8844039	0					
ANR	8844928	Identifier	k		8844039	1					
ANR	8844929	ConditionalExpression	( block [ k ] < 0 ) ? - mquant : mquant		8844039	1					
ANR	8844930	Condition	block [ k ] < 0		8844039	0					
ANR	8844931	RelationalExpression	block [ k ] < 0		8844039	0		<			
ANR	8844932	ArrayIndexing	block [ k ]		8844039	0					
ANR	8844933	Identifier	block		8844039	0					
ANR	8844934	Identifier	k		8844039	1					
ANR	8844935	PrimaryExpression	0		8844039	1					
ANR	8844936	UnaryOperationExpression	- mquant		8844039	1					
ANR	8844937	UnaryOperator	-		8844039	0					
ANR	8844938	Identifier	mquant		8844039	1					
ANR	8844939	Identifier	mquant		8844039	2					
ANR	8844940	IfStatement	if ( use_pred )		8844039	8					
ANR	8844941	Condition	use_pred	285:11:4660:4667	8844039	0	True				
ANR	8844942	Identifier	use_pred		8844039	0					
ANR	8844943	ExpressionStatement	i = 63	285:21:4670:4676	8844039	1	True				
ANR	8844944	AssignmentExpression	i = 63		8844039	0		=			
ANR	8844945	Identifier	i		8844039	0					
ANR	8844946	PrimaryExpression	63		8844039	1					
ANR	8844947	ElseStatement	else		8844039	0					
ANR	8844948	CompoundStatement		287:8:4602:4607	8844039	0					
ANR	8844949	IdentifierDeclStatement	int k ;	289:8:4717:4722	8844039	0	True				
ANR	8844950	IdentifierDecl	k		8844039	0					
ANR	8844951	IdentifierDeclType	int		8844039	0					
ANR	8844952	Identifier	k		8844039	1					
ANR	8844953	ExpressionStatement	"memset ( ac_val2 , 0 , 16 * 2 )"	293:8:4735:4761	8844039	1	True				
ANR	8844954	CallExpression	"memset ( ac_val2 , 0 , 16 * 2 )"		8844039	0					
ANR	8844955	Callee	memset		8844039	0					
ANR	8844956	Identifier	memset		8844039	0					
ANR	8844957	ArgumentList	ac_val2		8844039	1					
ANR	8844958	Argument	ac_val2		8844039	0					
ANR	8844959	Identifier	ac_val2		8844039	0					
ANR	8844960	Argument	0		8844039	1					
ANR	8844961	PrimaryExpression	0		8844039	0					
ANR	8844962	Argument	16 * 2		8844039	2					
ANR	8844963	MultiplicativeExpression	16 * 2		8844039	0		*			
ANR	8844964	PrimaryExpression	16		8844039	0					
ANR	8844965	PrimaryExpression	2		8844039	1					
ANR	8844966	IfStatement	if ( dc_pred_dir )		8844039	2					
ANR	8844967	Condition	dc_pred_dir	295:11:4775:4785	8844039	0	True				
ANR	8844968	Identifier	dc_pred_dir		8844039	0					
ANR	8844969	CompoundStatement		293:24:4673:4673	8844039	1					
ANR	8844970	IfStatement	if ( use_pred )		8844039	0					
ANR	8844971	Condition	use_pred	297:15:4812:4819	8844039	0	True				
ANR	8844972	Identifier	use_pred		8844039	0					
ANR	8844973	CompoundStatement		295:25:4707:4707	8844039	1					
ANR	8844974	ExpressionStatement	"memcpy ( ac_val2 , ac_val , 8 * 2 )"	299:16:4841:4871	8844039	0	True				
ANR	8844975	CallExpression	"memcpy ( ac_val2 , ac_val , 8 * 2 )"		8844039	0					
ANR	8844976	Callee	memcpy		8844039	0					
ANR	8844977	Identifier	memcpy		8844039	0					
ANR	8844978	ArgumentList	ac_val2		8844039	1					
ANR	8844979	Argument	ac_val2		8844039	0					
ANR	8844980	Identifier	ac_val2		8844039	0					
ANR	8844981	Argument	ac_val		8844039	1					
ANR	8844982	Identifier	ac_val		8844039	0					
ANR	8844983	Argument	8 * 2		8844039	2					
ANR	8844984	MultiplicativeExpression	8 * 2		8844039	0		*			
ANR	8844985	PrimaryExpression	8		8844039	0					
ANR	8844986	PrimaryExpression	2		8844039	1					
ANR	8844987	IfStatement	if ( q2 && q1 != q2 )		8844039	1					
ANR	8844988	Condition	q2 && q1 != q2	301:19:4893:4904	8844039	0	True				
ANR	8844989	AndExpression	q2 && q1 != q2		8844039	0		&&			
ANR	8844990	Identifier	q2		8844039	0					
ANR	8844991	EqualityExpression	q1 != q2		8844039	1		!=			
ANR	8844992	Identifier	q1		8844039	0					
ANR	8844993	Identifier	q2		8844039	1					
ANR	8844994	CompoundStatement		299:33:4792:4792	8844039	1					
ANR	8844995	ExpressionStatement	q1 = q1 * 2 + ( ( q1 == v -> pq ) ? v -> halfpq : 0 ) - 1	303:20:4930:4979	8844039	0	True				
ANR	8844996	AssignmentExpression	q1 = q1 * 2 + ( ( q1 == v -> pq ) ? v -> halfpq : 0 ) - 1		8844039	0		=			
ANR	8844997	Identifier	q1		8844039	0					
ANR	8844998	AdditiveExpression	q1 * 2 + ( ( q1 == v -> pq ) ? v -> halfpq : 0 ) - 1		8844039	1		+			
ANR	8844999	MultiplicativeExpression	q1 * 2		8844039	0		*			
ANR	8845000	Identifier	q1		8844039	0					
ANR	8845001	PrimaryExpression	2		8844039	1					
ANR	8845002	AdditiveExpression	( ( q1 == v -> pq ) ? v -> halfpq : 0 ) - 1		8844039	1		-			
ANR	8845003	ConditionalExpression	( q1 == v -> pq ) ? v -> halfpq : 0		8844039	0					
ANR	8845004	Condition	q1 == v -> pq		8844039	0					
ANR	8845005	EqualityExpression	q1 == v -> pq		8844039	0		==			
ANR	8845006	Identifier	q1		8844039	0					
ANR	8845007	PtrMemberAccess	v -> pq		8844039	1					
ANR	8845008	Identifier	v		8844039	0					
ANR	8845009	Identifier	pq		8844039	1					
ANR	8845010	PtrMemberAccess	v -> halfpq		8844039	1					
ANR	8845011	Identifier	v		8844039	0					
ANR	8845012	Identifier	halfpq		8844039	1					
ANR	8845013	PrimaryExpression	0		8844039	2					
ANR	8845014	PrimaryExpression	1		8844039	1					
ANR	8845015	ExpressionStatement	q2 = q2 * 2 + ( ( q2 == v -> pq ) ? v -> halfpq : 0 ) - 1	305:20:5002:5051	8844039	1	True				
ANR	8845016	AssignmentExpression	q2 = q2 * 2 + ( ( q2 == v -> pq ) ? v -> halfpq : 0 ) - 1		8844039	0		=			
ANR	8845017	Identifier	q2		8844039	0					
ANR	8845018	AdditiveExpression	q2 * 2 + ( ( q2 == v -> pq ) ? v -> halfpq : 0 ) - 1		8844039	1		+			
ANR	8845019	MultiplicativeExpression	q2 * 2		8844039	0		*			
ANR	8845020	Identifier	q2		8844039	0					
ANR	8845021	PrimaryExpression	2		8844039	1					
ANR	8845022	AdditiveExpression	( ( q2 == v -> pq ) ? v -> halfpq : 0 ) - 1		8844039	1		-			
ANR	8845023	ConditionalExpression	( q2 == v -> pq ) ? v -> halfpq : 0		8844039	0					
ANR	8845024	Condition	q2 == v -> pq		8844039	0					
ANR	8845025	EqualityExpression	q2 == v -> pq		8844039	0		==			
ANR	8845026	Identifier	q2		8844039	0					
ANR	8845027	PtrMemberAccess	v -> pq		8844039	1					
ANR	8845028	Identifier	v		8844039	0					
ANR	8845029	Identifier	pq		8844039	1					
ANR	8845030	PtrMemberAccess	v -> halfpq		8844039	1					
ANR	8845031	Identifier	v		8844039	0					
ANR	8845032	Identifier	halfpq		8844039	1					
ANR	8845033	PrimaryExpression	0		8844039	2					
ANR	8845034	PrimaryExpression	1		8844039	1					
ANR	8845035	ForStatement	for ( k = 1 ; k < 8 ; k ++ )		8844039	2					
ANR	8845036	ForInit	k = 1 ;	307:24:5078:5083	8844039	0	True				
ANR	8845037	AssignmentExpression	k = 1		8844039	0		=			
ANR	8845038	Identifier	k		8844039	0					
ANR	8845039	PrimaryExpression	1		8844039	1					
ANR	8845040	Condition	k < 8	307:31:5085:5089	8844039	1	True				
ANR	8845041	RelationalExpression	k < 8		8844039	0		<			
ANR	8845042	Identifier	k		8844039	0					
ANR	8845043	PrimaryExpression	8		8844039	1					
ANR	8845044	PostIncDecOperationExpression	k ++	307:38:5092:5094	8844039	2	True				
ANR	8845045	Identifier	k		8844039	0					
ANR	8845046	IncDec	++		8844039	1					
ANR	8845047	ExpressionStatement	ac_val2 [ k ] = ( ac_val2 [ k ] * q2 * vc1_dqscale [ q1 - 1 ] + 0x20000 ) >> 18	309:24:5122:5190	8844039	3	True				
ANR	8845048	AssignmentExpression	ac_val2 [ k ] = ( ac_val2 [ k ] * q2 * vc1_dqscale [ q1 - 1 ] + 0x20000 ) >> 18		8844039	0		=			
ANR	8845049	ArrayIndexing	ac_val2 [ k ]		8844039	0					
ANR	8845050	Identifier	ac_val2		8844039	0					
ANR	8845051	Identifier	k		8844039	1					
ANR	8845052	ShiftExpression	( ac_val2 [ k ] * q2 * vc1_dqscale [ q1 - 1 ] + 0x20000 ) >> 18		8844039	1		>>			
ANR	8845053	AdditiveExpression	ac_val2 [ k ] * q2 * vc1_dqscale [ q1 - 1 ] + 0x20000		8844039	0		+			
ANR	8845054	MultiplicativeExpression	ac_val2 [ k ] * q2 * vc1_dqscale [ q1 - 1 ]		8844039	0		*			
ANR	8845055	ArrayIndexing	ac_val2 [ k ]		8844039	0					
ANR	8845056	Identifier	ac_val2		8844039	0					
ANR	8845057	Identifier	k		8844039	1					
ANR	8845058	MultiplicativeExpression	q2 * vc1_dqscale [ q1 - 1 ]		8844039	1		*			
ANR	8845059	Identifier	q2		8844039	0					
ANR	8845060	ArrayIndexing	vc1_dqscale [ q1 - 1 ]		8844039	1					
ANR	8845061	Identifier	vc1_dqscale		8844039	0					
ANR	8845062	AdditiveExpression	q1 - 1		8844039	1		-			
ANR	8845063	Identifier	q1		8844039	0					
ANR	8845064	PrimaryExpression	1		8844039	1					
ANR	8845065	PrimaryExpression	0x20000		8844039	1					
ANR	8845066	PrimaryExpression	18		8844039	1					
ANR	8845067	ElseStatement	else		8844039	0					
ANR	8845068	CompoundStatement		313:15:5127:5127	8844039	0					
ANR	8845069	IfStatement	if ( use_pred )		8844039	0					
ANR	8845070	Condition	use_pred	317:15:5265:5272	8844039	0	True				
ANR	8845071	Identifier	use_pred		8844039	0					
ANR	8845072	CompoundStatement		315:25:5160:5160	8844039	1					
ANR	8845073	ExpressionStatement	"memcpy ( ac_val2 + 8 , ac_val + 8 , 8 * 2 )"	319:16:5294:5332	8844039	0	True				
ANR	8845074	CallExpression	"memcpy ( ac_val2 + 8 , ac_val + 8 , 8 * 2 )"		8844039	0					
ANR	8845075	Callee	memcpy		8844039	0					
ANR	8845076	Identifier	memcpy		8844039	0					
ANR	8845077	ArgumentList	ac_val2 + 8		8844039	1					
ANR	8845078	Argument	ac_val2 + 8		8844039	0					
ANR	8845079	AdditiveExpression	ac_val2 + 8		8844039	0		+			
ANR	8845080	Identifier	ac_val2		8844039	0					
ANR	8845081	PrimaryExpression	8		8844039	1					
ANR	8845082	Argument	ac_val + 8		8844039	1					
ANR	8845083	AdditiveExpression	ac_val + 8		8844039	0		+			
ANR	8845084	Identifier	ac_val		8844039	0					
ANR	8845085	PrimaryExpression	8		8844039	1					
ANR	8845086	Argument	8 * 2		8844039	2					
ANR	8845087	MultiplicativeExpression	8 * 2		8844039	0		*			
ANR	8845088	PrimaryExpression	8		8844039	0					
ANR	8845089	PrimaryExpression	2		8844039	1					
ANR	8845090	IfStatement	if ( q2 && q1 != q2 )		8844039	1					
ANR	8845091	Condition	q2 && q1 != q2	321:19:5354:5365	8844039	0	True				
ANR	8845092	AndExpression	q2 && q1 != q2		8844039	0		&&			
ANR	8845093	Identifier	q2		8844039	0					
ANR	8845094	EqualityExpression	q1 != q2		8844039	1		!=			
ANR	8845095	Identifier	q1		8844039	0					
ANR	8845096	Identifier	q2		8844039	1					
ANR	8845097	CompoundStatement		319:33:5253:5253	8844039	1					
ANR	8845098	ExpressionStatement	q1 = q1 * 2 + ( ( q1 == v -> pq ) ? v -> halfpq : 0 ) - 1	323:20:5391:5440	8844039	0	True				
ANR	8845099	AssignmentExpression	q1 = q1 * 2 + ( ( q1 == v -> pq ) ? v -> halfpq : 0 ) - 1		8844039	0		=			
ANR	8845100	Identifier	q1		8844039	0					
ANR	8845101	AdditiveExpression	q1 * 2 + ( ( q1 == v -> pq ) ? v -> halfpq : 0 ) - 1		8844039	1		+			
ANR	8845102	MultiplicativeExpression	q1 * 2		8844039	0		*			
ANR	8845103	Identifier	q1		8844039	0					
ANR	8845104	PrimaryExpression	2		8844039	1					
ANR	8845105	AdditiveExpression	( ( q1 == v -> pq ) ? v -> halfpq : 0 ) - 1		8844039	1		-			
ANR	8845106	ConditionalExpression	( q1 == v -> pq ) ? v -> halfpq : 0		8844039	0					
ANR	8845107	Condition	q1 == v -> pq		8844039	0					
ANR	8845108	EqualityExpression	q1 == v -> pq		8844039	0		==			
ANR	8845109	Identifier	q1		8844039	0					
ANR	8845110	PtrMemberAccess	v -> pq		8844039	1					
ANR	8845111	Identifier	v		8844039	0					
ANR	8845112	Identifier	pq		8844039	1					
ANR	8845113	PtrMemberAccess	v -> halfpq		8844039	1					
ANR	8845114	Identifier	v		8844039	0					
ANR	8845115	Identifier	halfpq		8844039	1					
ANR	8845116	PrimaryExpression	0		8844039	2					
ANR	8845117	PrimaryExpression	1		8844039	1					
ANR	8845118	ExpressionStatement	q2 = q2 * 2 + ( ( q2 == v -> pq ) ? v -> halfpq : 0 ) - 1	325:20:5463:5512	8844039	1	True				
ANR	8845119	AssignmentExpression	q2 = q2 * 2 + ( ( q2 == v -> pq ) ? v -> halfpq : 0 ) - 1		8844039	0		=			
ANR	8845120	Identifier	q2		8844039	0					
ANR	8845121	AdditiveExpression	q2 * 2 + ( ( q2 == v -> pq ) ? v -> halfpq : 0 ) - 1		8844039	1		+			
ANR	8845122	MultiplicativeExpression	q2 * 2		8844039	0		*			
ANR	8845123	Identifier	q2		8844039	0					
ANR	8845124	PrimaryExpression	2		8844039	1					
ANR	8845125	AdditiveExpression	( ( q2 == v -> pq ) ? v -> halfpq : 0 ) - 1		8844039	1		-			
ANR	8845126	ConditionalExpression	( q2 == v -> pq ) ? v -> halfpq : 0		8844039	0					
ANR	8845127	Condition	q2 == v -> pq		8844039	0					
ANR	8845128	EqualityExpression	q2 == v -> pq		8844039	0		==			
ANR	8845129	Identifier	q2		8844039	0					
ANR	8845130	PtrMemberAccess	v -> pq		8844039	1					
ANR	8845131	Identifier	v		8844039	0					
ANR	8845132	Identifier	pq		8844039	1					
ANR	8845133	PtrMemberAccess	v -> halfpq		8844039	1					
ANR	8845134	Identifier	v		8844039	0					
ANR	8845135	Identifier	halfpq		8844039	1					
ANR	8845136	PrimaryExpression	0		8844039	2					
ANR	8845137	PrimaryExpression	1		8844039	1					
ANR	8845138	ForStatement	for ( k = 1 ; k < 8 ; k ++ )		8844039	2					
ANR	8845139	ForInit	k = 1 ;	327:24:5539:5544	8844039	0	True				
ANR	8845140	AssignmentExpression	k = 1		8844039	0		=			
ANR	8845141	Identifier	k		8844039	0					
ANR	8845142	PrimaryExpression	1		8844039	1					
ANR	8845143	Condition	k < 8	327:31:5546:5550	8844039	1	True				
ANR	8845144	RelationalExpression	k < 8		8844039	0		<			
ANR	8845145	Identifier	k		8844039	0					
ANR	8845146	PrimaryExpression	8		8844039	1					
ANR	8845147	PostIncDecOperationExpression	k ++	327:38:5553:5555	8844039	2	True				
ANR	8845148	Identifier	k		8844039	0					
ANR	8845149	IncDec	++		8844039	1					
ANR	8845150	ExpressionStatement	ac_val2 [ k + 8 ] = ( ac_val2 [ k + 8 ] * q2 * vc1_dqscale [ q1 - 1 ] + 0x20000 ) >> 18	329:24:5583:5659	8844039	3	True				
ANR	8845151	AssignmentExpression	ac_val2 [ k + 8 ] = ( ac_val2 [ k + 8 ] * q2 * vc1_dqscale [ q1 - 1 ] + 0x20000 ) >> 18		8844039	0		=			
ANR	8845152	ArrayIndexing	ac_val2 [ k + 8 ]		8844039	0					
ANR	8845153	Identifier	ac_val2		8844039	0					
ANR	8845154	AdditiveExpression	k + 8		8844039	1		+			
ANR	8845155	Identifier	k		8844039	0					
ANR	8845156	PrimaryExpression	8		8844039	1					
ANR	8845157	ShiftExpression	( ac_val2 [ k + 8 ] * q2 * vc1_dqscale [ q1 - 1 ] + 0x20000 ) >> 18		8844039	1		>>			
ANR	8845158	AdditiveExpression	ac_val2 [ k + 8 ] * q2 * vc1_dqscale [ q1 - 1 ] + 0x20000		8844039	0		+			
ANR	8845159	MultiplicativeExpression	ac_val2 [ k + 8 ] * q2 * vc1_dqscale [ q1 - 1 ]		8844039	0		*			
ANR	8845160	ArrayIndexing	ac_val2 [ k + 8 ]		8844039	0					
ANR	8845161	Identifier	ac_val2		8844039	0					
ANR	8845162	AdditiveExpression	k + 8		8844039	1		+			
ANR	8845163	Identifier	k		8844039	0					
ANR	8845164	PrimaryExpression	8		8844039	1					
ANR	8845165	MultiplicativeExpression	q2 * vc1_dqscale [ q1 - 1 ]		8844039	1		*			
ANR	8845166	Identifier	q2		8844039	0					
ANR	8845167	ArrayIndexing	vc1_dqscale [ q1 - 1 ]		8844039	1					
ANR	8845168	Identifier	vc1_dqscale		8844039	0					
ANR	8845169	AdditiveExpression	q1 - 1		8844039	1		-			
ANR	8845170	Identifier	q1		8844039	0					
ANR	8845171	PrimaryExpression	1		8844039	1					
ANR	8845172	PrimaryExpression	0x20000		8844039	1					
ANR	8845173	PrimaryExpression	18		8844039	1					
ANR	8845174	IfStatement	if ( use_pred )		8844039	3					
ANR	8845175	Condition	use_pred	341:11:5765:5772	8844039	0	True				
ANR	8845176	Identifier	use_pred		8844039	0					
ANR	8845177	CompoundStatement		339:21:5660:5660	8844039	1					
ANR	8845178	IfStatement	if ( dc_pred_dir )		8844039	0					
ANR	8845179	Condition	dc_pred_dir	343:15:5793:5803	8844039	0	True				
ANR	8845180	Identifier	dc_pred_dir		8844039	0					
ANR	8845181	CompoundStatement		341:28:5691:5691	8844039	1					
ANR	8845182	ForStatement	for ( k = 1 ; k < 8 ; k ++ )		8844039	0					
ANR	8845183	ForInit	k = 1 ;	345:20:5836:5841	8844039	0	True				
ANR	8845184	AssignmentExpression	k = 1		8844039	0		=			
ANR	8845185	Identifier	k		8844039	0					
ANR	8845186	PrimaryExpression	1		8844039	1					
ANR	8845187	Condition	k < 8	345:27:5843:5847	8844039	1	True				
ANR	8845188	RelationalExpression	k < 8		8844039	0		<			
ANR	8845189	Identifier	k		8844039	0					
ANR	8845190	PrimaryExpression	8		8844039	1					
ANR	8845191	PostIncDecOperationExpression	k ++	345:34:5850:5852	8844039	2	True				
ANR	8845192	Identifier	k		8844039	0					
ANR	8845193	IncDec	++		8844039	1					
ANR	8845194	CompoundStatement		343:39:5740:5740	8844039	3					
ANR	8845195	ExpressionStatement	block [ k << 3 ] = ac_val2 [ k ] * scale	347:20:5878:5912	8844039	0	True				
ANR	8845196	AssignmentExpression	block [ k << 3 ] = ac_val2 [ k ] * scale		8844039	0		=			
ANR	8845197	ArrayIndexing	block [ k << 3 ]		8844039	0					
ANR	8845198	Identifier	block		8844039	0					
ANR	8845199	ShiftExpression	k << 3		8844039	1		<<			
ANR	8845200	Identifier	k		8844039	0					
ANR	8845201	PrimaryExpression	3		8844039	1					
ANR	8845202	MultiplicativeExpression	ac_val2 [ k ] * scale		8844039	1		*			
ANR	8845203	ArrayIndexing	ac_val2 [ k ]		8844039	0					
ANR	8845204	Identifier	ac_val2		8844039	0					
ANR	8845205	Identifier	k		8844039	1					
ANR	8845206	Identifier	scale		8844039	1					
ANR	8845207	IfStatement	if ( ! v -> pquantizer && block [ k << 3 ] )		8844039	1					
ANR	8845208	Condition	! v -> pquantizer && block [ k << 3 ]	349:23:5938:5968	8844039	0	True				
ANR	8845209	AndExpression	! v -> pquantizer && block [ k << 3 ]		8844039	0		&&			
ANR	8845210	UnaryOperationExpression	! v -> pquantizer		8844039	0					
ANR	8845211	UnaryOperator	!		8844039	0					
ANR	8845212	PtrMemberAccess	v -> pquantizer		8844039	1					
ANR	8845213	Identifier	v		8844039	0					
ANR	8845214	Identifier	pquantizer		8844039	1					
ANR	8845215	ArrayIndexing	block [ k << 3 ]		8844039	1					
ANR	8845216	Identifier	block		8844039	0					
ANR	8845217	ShiftExpression	k << 3		8844039	1		<<			
ANR	8845218	Identifier	k		8844039	0					
ANR	8845219	PrimaryExpression	3		8844039	1					
ANR	8845220	ExpressionStatement	block [ k << 3 ] += ( block [ k << 3 ] < 0 ) ? - mquant : mquant	351:24:5996:6051	8844039	1	True				
ANR	8845221	AssignmentExpression	block [ k << 3 ] += ( block [ k << 3 ] < 0 ) ? - mquant : mquant		8844039	0		+=			
ANR	8845222	ArrayIndexing	block [ k << 3 ]		8844039	0					
ANR	8845223	Identifier	block		8844039	0					
ANR	8845224	ShiftExpression	k << 3		8844039	1		<<			
ANR	8845225	Identifier	k		8844039	0					
ANR	8845226	PrimaryExpression	3		8844039	1					
ANR	8845227	ConditionalExpression	( block [ k << 3 ] < 0 ) ? - mquant : mquant		8844039	1					
ANR	8845228	Condition	block [ k << 3 ] < 0		8844039	0					
ANR	8845229	RelationalExpression	block [ k << 3 ] < 0		8844039	0		<			
ANR	8845230	ArrayIndexing	block [ k << 3 ]		8844039	0					
ANR	8845231	Identifier	block		8844039	0					
ANR	8845232	ShiftExpression	k << 3		8844039	1		<<			
ANR	8845233	Identifier	k		8844039	0					
ANR	8845234	PrimaryExpression	3		8844039	1					
ANR	8845235	PrimaryExpression	0		8844039	1					
ANR	8845236	UnaryOperationExpression	- mquant		8844039	1					
ANR	8845237	UnaryOperator	-		8844039	0					
ANR	8845238	Identifier	mquant		8844039	1					
ANR	8845239	Identifier	mquant		8844039	2					
ANR	8845240	ElseStatement	else		8844039	0					
ANR	8845241	CompoundStatement		353:19:5977:5977	8844039	0					
ANR	8845242	ForStatement	for ( k = 1 ; k < 8 ; k ++ )		8844039	0					
ANR	8845243	ForInit	k = 1 ;	357:20:6121:6126	8844039	0	True				
ANR	8845244	AssignmentExpression	k = 1		8844039	0		=			
ANR	8845245	Identifier	k		8844039	0					
ANR	8845246	PrimaryExpression	1		8844039	1					
ANR	8845247	Condition	k < 8	357:27:6128:6132	8844039	1	True				
ANR	8845248	RelationalExpression	k < 8		8844039	0		<			
ANR	8845249	Identifier	k		8844039	0					
ANR	8845250	PrimaryExpression	8		8844039	1					
ANR	8845251	PostIncDecOperationExpression	k ++	357:34:6135:6137	8844039	2	True				
ANR	8845252	Identifier	k		8844039	0					
ANR	8845253	IncDec	++		8844039	1					
ANR	8845254	CompoundStatement		355:39:6025:6025	8844039	3					
ANR	8845255	ExpressionStatement	block [ k ] = ac_val2 [ k + 8 ] * scale	359:20:6163:6196	8844039	0	True				
ANR	8845256	AssignmentExpression	block [ k ] = ac_val2 [ k + 8 ] * scale		8844039	0		=			
ANR	8845257	ArrayIndexing	block [ k ]		8844039	0					
ANR	8845258	Identifier	block		8844039	0					
ANR	8845259	Identifier	k		8844039	1					
ANR	8845260	MultiplicativeExpression	ac_val2 [ k + 8 ] * scale		8844039	1		*			
ANR	8845261	ArrayIndexing	ac_val2 [ k + 8 ]		8844039	0					
ANR	8845262	Identifier	ac_val2		8844039	0					
ANR	8845263	AdditiveExpression	k + 8		8844039	1		+			
ANR	8845264	Identifier	k		8844039	0					
ANR	8845265	PrimaryExpression	8		8844039	1					
ANR	8845266	Identifier	scale		8844039	1					
ANR	8845267	IfStatement	if ( ! v -> pquantizer && block [ k ] )		8844039	1					
ANR	8845268	Condition	! v -> pquantizer && block [ k ]	361:23:6222:6247	8844039	0	True				
ANR	8845269	AndExpression	! v -> pquantizer && block [ k ]		8844039	0		&&			
ANR	8845270	UnaryOperationExpression	! v -> pquantizer		8844039	0					
ANR	8845271	UnaryOperator	!		8844039	0					
ANR	8845272	PtrMemberAccess	v -> pquantizer		8844039	1					
ANR	8845273	Identifier	v		8844039	0					
ANR	8845274	Identifier	pquantizer		8844039	1					
ANR	8845275	ArrayIndexing	block [ k ]		8844039	1					
ANR	8845276	Identifier	block		8844039	0					
ANR	8845277	Identifier	k		8844039	1					
ANR	8845278	ExpressionStatement	block [ k ] += ( block [ k ] < 0 ) ? - mquant : mquant	363:24:6275:6320	8844039	1	True				
ANR	8845279	AssignmentExpression	block [ k ] += ( block [ k ] < 0 ) ? - mquant : mquant		8844039	0		+=			
ANR	8845280	ArrayIndexing	block [ k ]		8844039	0					
ANR	8845281	Identifier	block		8844039	0					
ANR	8845282	Identifier	k		8844039	1					
ANR	8845283	ConditionalExpression	( block [ k ] < 0 ) ? - mquant : mquant		8844039	1					
ANR	8845284	Condition	block [ k ] < 0		8844039	0					
ANR	8845285	RelationalExpression	block [ k ] < 0		8844039	0		<			
ANR	8845286	ArrayIndexing	block [ k ]		8844039	0					
ANR	8845287	Identifier	block		8844039	0					
ANR	8845288	Identifier	k		8844039	1					
ANR	8845289	PrimaryExpression	0		8844039	1					
ANR	8845290	UnaryOperationExpression	- mquant		8844039	1					
ANR	8845291	UnaryOperator	-		8844039	0					
ANR	8845292	Identifier	mquant		8844039	1					
ANR	8845293	Identifier	mquant		8844039	2					
ANR	8845294	ExpressionStatement	i = 63	369:12:6369:6375	8844039	1	True				
ANR	8845295	AssignmentExpression	i = 63		8844039	0		=			
ANR	8845296	Identifier	i		8844039	0					
ANR	8845297	PrimaryExpression	63		8844039	1					
ANR	8845298	ExpressionStatement	s -> block_last_index [ n ] = i	375:4:6400:6426	8844039	36	True				
ANR	8845299	AssignmentExpression	s -> block_last_index [ n ] = i		8844039	0		=			
ANR	8845300	ArrayIndexing	s -> block_last_index [ n ]		8844039	0					
ANR	8845301	PtrMemberAccess	s -> block_last_index		8844039	0					
ANR	8845302	Identifier	s		8844039	0					
ANR	8845303	Identifier	block_last_index		8844039	1					
ANR	8845304	Identifier	n		8844039	1					
ANR	8845305	Identifier	i		8844039	1					
ANR	8845306	ReturnStatement	return 0 ;	379:4:6435:6443	8844039	37	True				
ANR	8845307	PrimaryExpression	0		8844039	0					
ANR	8845308	ReturnType	static int		8844039	1					
ANR	8845309	Identifier	vc1_decode_intra_block		8844039	2					
ANR	8845310	ParameterList	"VC1Context * v , DCTELEM block [ 64 ] , int n , int coded , int mquant , int codingset"		8844039	3					
ANR	8845311	Parameter	VC1Context * v	1:34:34:46	8844039	0	True				
ANR	8845312	ParameterType	VC1Context *		8844039	0					
ANR	8845313	Identifier	v		8844039	1					
ANR	8845314	Parameter	DCTELEM block [ 64 ]	1:49:49:65	8844039	1	True				
ANR	8845315	ParameterType	DCTELEM [ 64 ]		8844039	0					
ANR	8845316	Identifier	block		8844039	1					
ANR	8845317	Parameter	int n	1:68:68:72	8844039	2	True				
ANR	8845318	ParameterType	int		8844039	0					
ANR	8845319	Identifier	n		8844039	1					
ANR	8845320	Parameter	int coded	1:75:75:83	8844039	3	True				
ANR	8845321	ParameterType	int		8844039	0					
ANR	8845322	Identifier	coded		8844039	1					
ANR	8845323	Parameter	int mquant	1:86:86:95	8844039	4	True				
ANR	8845324	ParameterType	int		8844039	0					
ANR	8845325	Identifier	mquant		8844039	1					
ANR	8845326	Parameter	int codingset	1:98:98:110	8844039	5	True				
ANR	8845327	ParameterType	int		8844039	0					
ANR	8845328	Identifier	codingset		8844039	1					
ANR	8845329	CFGEntryNode	ENTRY		8844039		True				
ANR	8845330	CFGExitNode	EXIT		8844039		True				
ANR	8845331	Symbol	* v		8844039						
ANR	8845332	Symbol	& v -> s		8844039						
ANR	8845333	Symbol	s -> block_wrap		8844039						
ANR	8845334	Symbol	* zz_table		8844039						
ANR	8845335	Symbol	v -> a_avail		8844039						
ANR	8845336	Symbol	s -> current_picture		8844039						
ANR	8845337	Symbol	s -> ac_val		8844039						
ANR	8845338	Symbol	* s -> block_wrap		8844039						
ANR	8845339	Symbol	* s -> current_picture . qscale_table		8844039						
ANR	8845340	Symbol	block		8844039						
ANR	8845341	Symbol	v -> s		8844039						
ANR	8845342	Symbol	dc_pred_dir		8844039						
ANR	8845343	Symbol	dc_val		8844039						
ANR	8845344	Symbol	* mb_pos		8844039						
ANR	8845345	Symbol	* * s -> ac_val		8844039						
ANR	8845346	Symbol	* * * s		8844039						
ANR	8845347	Symbol	& s -> gb		8844039						
ANR	8845348	Symbol	* s -> y_dc_scale_table		8844039						
ANR	8845349	Symbol	mb_pos		8844039						
ANR	8845350	Symbol	vc1_pred_dc		8844039						
ANR	8845351	Symbol	dcdiff		8844039						
ANR	8845352	Symbol	v -> c_avail		8844039						
ANR	8845353	Symbol	skip		8844039						
ANR	8845354	Symbol	* * s		8844039						
ANR	8845355	Symbol	s -> y_dc_scale_table		8844039						
ANR	8845356	Symbol	AV_LOG_ERROR		8844039						
ANR	8845357	Symbol	* s -> current_picture		8844039						
ANR	8845358	Symbol	& v -> s . gb		8844039						
ANR	8845359	Symbol	v -> halfpq		8844039						
ANR	8845360	Symbol	i		8844039						
ANR	8845361	Symbol	k		8844039						
ANR	8845362	Symbol	* s -> ac_val		8844039						
ANR	8845363	Symbol	n		8844039						
ANR	8845364	Symbol	ff_msmp4_dc_luma_vlc		8844039						
ANR	8845365	Symbol	s -> block_last_index		8844039						
ANR	8845366	Symbol	DC_VLC_BITS		8844039						
ANR	8845367	Symbol	s -> dc_table_index		8844039						
ANR	8845368	Symbol	s		8844039						
ANR	8845369	Symbol	v		8844039						
ANR	8845370	Symbol	a_avail		8844039						
ANR	8845371	Symbol	get_vlc2		8844039						
ANR	8845372	Symbol	vc1_dqscale		8844039						
ANR	8845373	Symbol	s -> c_dc_scale_table		8844039						
ANR	8845374	Symbol	* ff_msmp4_dc_chroma_vlc		8844039						
ANR	8845375	Symbol	& value		8844039						
ANR	8845376	Symbol	* mquant		8844039						
ANR	8845377	Symbol	s -> block_index		8844039						
ANR	8845378	Symbol	* q1		8844039						
ANR	8845379	Symbol	get_bits		8844039						
ANR	8845380	Symbol	s -> c_dc_scale		8844039						
ANR	8845381	Symbol	* s -> block_index		8844039						
ANR	8845382	Symbol	* s -> mb_stride		8844039						
ANR	8845383	Symbol	mquant		8844039						
ANR	8845384	Symbol	& last		8844039						
ANR	8845385	Symbol	c_avail		8844039						
ANR	8845386	Symbol	ac_val		8844039						
ANR	8845387	Symbol	run_diff		8844039						
ANR	8845388	Symbol	last		8844039						
ANR	8845389	Symbol	s -> current_picture . qscale_table		8844039						
ANR	8845390	Symbol	s -> mb_x		8844039						
ANR	8845391	Symbol	s -> mb_y		8844039						
ANR	8845392	Symbol	coded		8844039						
ANR	8845393	Symbol	ac_val2		8844039						
ANR	8845394	Symbol	zz_table		8844039						
ANR	8845395	Symbol	s -> avctx		8844039						
ANR	8845396	Symbol	* vc1_dqscale		8844039						
ANR	8845397	Symbol	ff_msmp4_dc_luma_vlc [ s -> dc_table_index ] . table		8844039						
ANR	8845398	Symbol	ff_msmp4_dc_chroma_vlc		8844039						
ANR	8845399	Symbol	* ac_val2		8844039						
ANR	8845400	Symbol	use_pred		8844039						
ANR	8845401	Symbol	s -> mb_stride		8844039						
ANR	8845402	Symbol	* ff_msmp4_dc_luma_vlc		8844039						
ANR	8845403	Symbol	scale		8844039						
ANR	8845404	Symbol	* s -> dc_table_index		8844039						
ANR	8845405	Symbol	ff_msmp4_dc_chroma_vlc [ s -> dc_table_index ] . table		8844039						
ANR	8845406	Symbol	codingset		8844039						
ANR	8845407	Symbol	v -> overlap		8844039						
ANR	8845408	Symbol	* s -> c_dc_scale_table		8844039						
ANR	8845409	Symbol	v -> pquantizer		8844039						
ANR	8845410	Symbol	s -> y_dc_scale		8844039						
ANR	8845411	Symbol	gb		8844039						
ANR	8845412	Symbol	s -> ac_pred		8844039						
ANR	8845413	Symbol	value		8844039						
ANR	8845414	Symbol	q1		8844039						
ANR	8845415	Symbol	q2		8844039						
ANR	8845416	Symbol	* s -> block_last_index		8844039						
ANR	8845417	Symbol	& dc_val		8844039						
ANR	8845418	Symbol	* ac_val		8844039						
ANR	8845419	Symbol	& skip		8844039						
ANR	8845420	Symbol	* dc_val		8844039						
ANR	8845421	Symbol	& dc_pred_dir		8844039						
ANR	8845422	Symbol	* block		8844039						
ANR	8845423	Symbol	* * zz_table		8844039						
ANR	8845424	Symbol	vc1_simple_progressive_8x8_zz		8844039						
ANR	8845425	Symbol	* k		8844039						
ANR	8845426	Symbol	v -> pq		8844039						
ANR	8845427	Symbol	* n		8844039						
ANR	8845428	Symbol	* s		8844039						
