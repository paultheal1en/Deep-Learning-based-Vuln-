command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	14723	File	/home/p4ultr4n/workplace/ReVeal/raw_code/FUNCC_03_1.c								
ANR	14724	Function	ff_h264_idct8_add	1:0:0:2930							
ANR	14725	FunctionDef	"ff_h264_idct8_add (uint8_t * _dst , DCTELEM * _block , int stride)"		14724	0					
ANR	14726	CompoundStatement		1:73:73:2930	14724	0					
ANR	14727	IdentifierDeclStatement	int i ;	3:4:80:85	14724	0	True				
ANR	14728	IdentifierDecl	i		14724	0					
ANR	14729	IdentifierDeclType	int		14724	0					
ANR	14730	Identifier	i		14724	1					
ANR	14731	IdentifierDeclStatement	INIT_CLIP pixel * dst = ( pixel * ) _dst ;	5:4:92:132	14724	1	True				
ANR	14732	IdentifierDecl	* dst = ( pixel * ) _dst		14724	0					
ANR	14733	IdentifierDeclType	INIT_CLIP pixel *		14724	0					
ANR	14734	Identifier	dst		14724	1					
ANR	14735	AssignmentExpression	* dst = ( pixel * ) _dst		14724	2		=			
ANR	14736	Identifier	dst		14724	0					
ANR	14737	CastExpression	( pixel * ) _dst		14724	1					
ANR	14738	CastTarget	pixel *		14724	0					
ANR	14739	Identifier	_dst		14724	1					
ANR	14740	IdentifierDeclStatement	dctcoef * block = ( dctcoef * ) _block ;	9:4:139:172	14724	2	True				
ANR	14741	IdentifierDecl	* block = ( dctcoef * ) _block		14724	0					
ANR	14742	IdentifierDeclType	dctcoef *		14724	0					
ANR	14743	Identifier	block		14724	1					
ANR	14744	AssignmentExpression	* block = ( dctcoef * ) _block		14724	2		=			
ANR	14745	Identifier	block		14724	0					
ANR	14746	CastExpression	( dctcoef * ) _block		14724	1					
ANR	14747	CastTarget	dctcoef *		14724	0					
ANR	14748	Identifier	_block		14724	1					
ANR	14749	ExpressionStatement	stride /= sizeof ( pixel )	11:4:179:202	14724	3	True				
ANR	14750	AssignmentExpression	stride /= sizeof ( pixel )		14724	0		/=			
ANR	14751	Identifier	stride		14724	0					
ANR	14752	SizeofExpression	sizeof ( pixel )		14724	1					
ANR	14753	Sizeof	sizeof		14724	0					
ANR	14754	SizeofOperand	pixel		14724	1					
ANR	14755	ExpressionStatement	block [ 0 ] += 32	15:4:211:225	14724	4	True				
ANR	14756	AssignmentExpression	block [ 0 ] += 32		14724	0		+=			
ANR	14757	ArrayIndexing	block [ 0 ]		14724	0					
ANR	14758	Identifier	block		14724	0					
ANR	14759	PrimaryExpression	0		14724	1					
ANR	14760	PrimaryExpression	32		14724	1					
ANR	14761	ForStatement	for ( i = 0 ; i < 8 ; i ++ )		14724	5					
ANR	14762	ForInit	i = 0 ;	19:9:239:244	14724	0	True				
ANR	14763	AssignmentExpression	i = 0		14724	0		=			
ANR	14764	Identifier	i		14724	0					
ANR	14765	PrimaryExpression	0		14724	1					
ANR	14766	Condition	i < 8	19:16:246:250	14724	1	True				
ANR	14767	RelationalExpression	i < 8		14724	0		<			
ANR	14768	Identifier	i		14724	0					
ANR	14769	PrimaryExpression	8		14724	1					
ANR	14770	PostIncDecOperationExpression	i ++	19:23:253:255	14724	2	True				
ANR	14771	Identifier	i		14724	0					
ANR	14772	IncDec	++		14724	1					
ANR	14773	CompoundStatement		59:8:1034:1062	14724	3					
ANR	14774	IdentifierDeclStatement	const int a0 = block [ i + 0 * 8 ] + block [ i + 4 * 8 ] ;	23:8:275:318	14724	0	True				
ANR	14775	IdentifierDecl	a0 = block [ i + 0 * 8 ] + block [ i + 4 * 8 ]		14724	0					
ANR	14776	IdentifierDeclType	const int		14724	0					
ANR	14777	Identifier	a0		14724	1					
ANR	14778	AssignmentExpression	a0 = block [ i + 0 * 8 ] + block [ i + 4 * 8 ]		14724	2		=			
ANR	14779	Identifier	a0		14724	0					
ANR	14780	AdditiveExpression	block [ i + 0 * 8 ] + block [ i + 4 * 8 ]		14724	1		+			
ANR	14781	ArrayIndexing	block [ i + 0 * 8 ]		14724	0					
ANR	14782	Identifier	block		14724	0					
ANR	14783	AdditiveExpression	i + 0 * 8		14724	1		+			
ANR	14784	Identifier	i		14724	0					
ANR	14785	MultiplicativeExpression	0 * 8		14724	1		*			
ANR	14786	PrimaryExpression	0		14724	0					
ANR	14787	PrimaryExpression	8		14724	1					
ANR	14788	ArrayIndexing	block [ i + 4 * 8 ]		14724	1					
ANR	14789	Identifier	block		14724	0					
ANR	14790	AdditiveExpression	i + 4 * 8		14724	1		+			
ANR	14791	Identifier	i		14724	0					
ANR	14792	MultiplicativeExpression	4 * 8		14724	1		*			
ANR	14793	PrimaryExpression	4		14724	0					
ANR	14794	PrimaryExpression	8		14724	1					
ANR	14795	IdentifierDeclStatement	const int a2 = block [ i + 0 * 8 ] - block [ i + 4 * 8 ] ;	25:8:329:372	14724	1	True				
ANR	14796	IdentifierDecl	a2 = block [ i + 0 * 8 ] - block [ i + 4 * 8 ]		14724	0					
ANR	14797	IdentifierDeclType	const int		14724	0					
ANR	14798	Identifier	a2		14724	1					
ANR	14799	AssignmentExpression	a2 = block [ i + 0 * 8 ] - block [ i + 4 * 8 ]		14724	2		=			
ANR	14800	Identifier	a2		14724	0					
ANR	14801	AdditiveExpression	block [ i + 0 * 8 ] - block [ i + 4 * 8 ]		14724	1		-			
ANR	14802	ArrayIndexing	block [ i + 0 * 8 ]		14724	0					
ANR	14803	Identifier	block		14724	0					
ANR	14804	AdditiveExpression	i + 0 * 8		14724	1		+			
ANR	14805	Identifier	i		14724	0					
ANR	14806	MultiplicativeExpression	0 * 8		14724	1		*			
ANR	14807	PrimaryExpression	0		14724	0					
ANR	14808	PrimaryExpression	8		14724	1					
ANR	14809	ArrayIndexing	block [ i + 4 * 8 ]		14724	1					
ANR	14810	Identifier	block		14724	0					
ANR	14811	AdditiveExpression	i + 4 * 8		14724	1		+			
ANR	14812	Identifier	i		14724	0					
ANR	14813	MultiplicativeExpression	4 * 8		14724	1		*			
ANR	14814	PrimaryExpression	4		14724	0					
ANR	14815	PrimaryExpression	8		14724	1					
ANR	14816	IdentifierDeclStatement	const int a4 = ( block [ i + 2 * 8 ] >> 1 ) - block [ i + 6 * 8 ] ;	27:8:383:430	14724	2	True				
ANR	14817	IdentifierDecl	a4 = ( block [ i + 2 * 8 ] >> 1 ) - block [ i + 6 * 8 ]		14724	0					
ANR	14818	IdentifierDeclType	const int		14724	0					
ANR	14819	Identifier	a4		14724	1					
ANR	14820	AssignmentExpression	a4 = ( block [ i + 2 * 8 ] >> 1 ) - block [ i + 6 * 8 ]		14724	2		=			
ANR	14821	Identifier	a4		14724	0					
ANR	14822	AdditiveExpression	( block [ i + 2 * 8 ] >> 1 ) - block [ i + 6 * 8 ]		14724	1		-			
ANR	14823	ShiftExpression	block [ i + 2 * 8 ] >> 1		14724	0		>>			
ANR	14824	ArrayIndexing	block [ i + 2 * 8 ]		14724	0					
ANR	14825	Identifier	block		14724	0					
ANR	14826	AdditiveExpression	i + 2 * 8		14724	1		+			
ANR	14827	Identifier	i		14724	0					
ANR	14828	MultiplicativeExpression	2 * 8		14724	1		*			
ANR	14829	PrimaryExpression	2		14724	0					
ANR	14830	PrimaryExpression	8		14724	1					
ANR	14831	PrimaryExpression	1		14724	1					
ANR	14832	ArrayIndexing	block [ i + 6 * 8 ]		14724	1					
ANR	14833	Identifier	block		14724	0					
ANR	14834	AdditiveExpression	i + 6 * 8		14724	1		+			
ANR	14835	Identifier	i		14724	0					
ANR	14836	MultiplicativeExpression	6 * 8		14724	1		*			
ANR	14837	PrimaryExpression	6		14724	0					
ANR	14838	PrimaryExpression	8		14724	1					
ANR	14839	IdentifierDeclStatement	const int a6 = ( block [ i + 6 * 8 ] >> 1 ) + block [ i + 2 * 8 ] ;	29:8:441:488	14724	3	True				
ANR	14840	IdentifierDecl	a6 = ( block [ i + 6 * 8 ] >> 1 ) + block [ i + 2 * 8 ]		14724	0					
ANR	14841	IdentifierDeclType	const int		14724	0					
ANR	14842	Identifier	a6		14724	1					
ANR	14843	AssignmentExpression	a6 = ( block [ i + 6 * 8 ] >> 1 ) + block [ i + 2 * 8 ]		14724	2		=			
ANR	14844	Identifier	a6		14724	0					
ANR	14845	AdditiveExpression	( block [ i + 6 * 8 ] >> 1 ) + block [ i + 2 * 8 ]		14724	1		+			
ANR	14846	ShiftExpression	block [ i + 6 * 8 ] >> 1		14724	0		>>			
ANR	14847	ArrayIndexing	block [ i + 6 * 8 ]		14724	0					
ANR	14848	Identifier	block		14724	0					
ANR	14849	AdditiveExpression	i + 6 * 8		14724	1		+			
ANR	14850	Identifier	i		14724	0					
ANR	14851	MultiplicativeExpression	6 * 8		14724	1		*			
ANR	14852	PrimaryExpression	6		14724	0					
ANR	14853	PrimaryExpression	8		14724	1					
ANR	14854	PrimaryExpression	1		14724	1					
ANR	14855	ArrayIndexing	block [ i + 2 * 8 ]		14724	1					
ANR	14856	Identifier	block		14724	0					
ANR	14857	AdditiveExpression	i + 2 * 8		14724	1		+			
ANR	14858	Identifier	i		14724	0					
ANR	14859	MultiplicativeExpression	2 * 8		14724	1		*			
ANR	14860	PrimaryExpression	2		14724	0					
ANR	14861	PrimaryExpression	8		14724	1					
ANR	14862	IdentifierDeclStatement	const int b0 = a0 + a6 ;	33:8:501:523	14724	4	True				
ANR	14863	IdentifierDecl	b0 = a0 + a6		14724	0					
ANR	14864	IdentifierDeclType	const int		14724	0					
ANR	14865	Identifier	b0		14724	1					
ANR	14866	AssignmentExpression	b0 = a0 + a6		14724	2		=			
ANR	14867	Identifier	b0		14724	0					
ANR	14868	AdditiveExpression	a0 + a6		14724	1		+			
ANR	14869	Identifier	a0		14724	0					
ANR	14870	Identifier	a6		14724	1					
ANR	14871	IdentifierDeclStatement	const int b2 = a2 + a4 ;	35:8:534:556	14724	5	True				
ANR	14872	IdentifierDecl	b2 = a2 + a4		14724	0					
ANR	14873	IdentifierDeclType	const int		14724	0					
ANR	14874	Identifier	b2		14724	1					
ANR	14875	AssignmentExpression	b2 = a2 + a4		14724	2		=			
ANR	14876	Identifier	b2		14724	0					
ANR	14877	AdditiveExpression	a2 + a4		14724	1		+			
ANR	14878	Identifier	a2		14724	0					
ANR	14879	Identifier	a4		14724	1					
ANR	14880	IdentifierDeclStatement	const int b4 = a2 - a4 ;	37:8:567:589	14724	6	True				
ANR	14881	IdentifierDecl	b4 = a2 - a4		14724	0					
ANR	14882	IdentifierDeclType	const int		14724	0					
ANR	14883	Identifier	b4		14724	1					
ANR	14884	AssignmentExpression	b4 = a2 - a4		14724	2		=			
ANR	14885	Identifier	b4		14724	0					
ANR	14886	AdditiveExpression	a2 - a4		14724	1		-			
ANR	14887	Identifier	a2		14724	0					
ANR	14888	Identifier	a4		14724	1					
ANR	14889	IdentifierDeclStatement	const int b6 = a0 - a6 ;	39:8:600:622	14724	7	True				
ANR	14890	IdentifierDecl	b6 = a0 - a6		14724	0					
ANR	14891	IdentifierDeclType	const int		14724	0					
ANR	14892	Identifier	b6		14724	1					
ANR	14893	AssignmentExpression	b6 = a0 - a6		14724	2		=			
ANR	14894	Identifier	b6		14724	0					
ANR	14895	AdditiveExpression	a0 - a6		14724	1		-			
ANR	14896	Identifier	a0		14724	0					
ANR	14897	Identifier	a6		14724	1					
ANR	14898	IdentifierDeclStatement	const int a1 = - block [ i + 3 * 8 ] + block [ i + 5 * 8 ] - block [ i + 7 * 8 ] - ( block [ i + 7 * 8 ] >> 1 ) ;	43:8:635:713	14724	8	True				
ANR	14899	IdentifierDecl	a1 = - block [ i + 3 * 8 ] + block [ i + 5 * 8 ] - block [ i + 7 * 8 ] - ( block [ i + 7 * 8 ] >> 1 )		14724	0					
ANR	14900	IdentifierDeclType	const int		14724	0					
ANR	14901	Identifier	a1		14724	1					
ANR	14902	AssignmentExpression	a1 = - block [ i + 3 * 8 ] + block [ i + 5 * 8 ] - block [ i + 7 * 8 ] - ( block [ i + 7 * 8 ] >> 1 )		14724	2		=			
ANR	14903	Identifier	a1		14724	0					
ANR	14904	AdditiveExpression	- block [ i + 3 * 8 ] + block [ i + 5 * 8 ] - block [ i + 7 * 8 ] - ( block [ i + 7 * 8 ] >> 1 )		14724	1		+			
ANR	14905	UnaryOperationExpression	- block [ i + 3 * 8 ]		14724	0					
ANR	14906	UnaryOperator	-		14724	0					
ANR	14907	ArrayIndexing	block [ i + 3 * 8 ]		14724	1					
ANR	14908	Identifier	block		14724	0					
ANR	14909	AdditiveExpression	i + 3 * 8		14724	1		+			
ANR	14910	Identifier	i		14724	0					
ANR	14911	MultiplicativeExpression	3 * 8		14724	1		*			
ANR	14912	PrimaryExpression	3		14724	0					
ANR	14913	PrimaryExpression	8		14724	1					
ANR	14914	AdditiveExpression	block [ i + 5 * 8 ] - block [ i + 7 * 8 ] - ( block [ i + 7 * 8 ] >> 1 )		14724	1		-			
ANR	14915	ArrayIndexing	block [ i + 5 * 8 ]		14724	0					
ANR	14916	Identifier	block		14724	0					
ANR	14917	AdditiveExpression	i + 5 * 8		14724	1		+			
ANR	14918	Identifier	i		14724	0					
ANR	14919	MultiplicativeExpression	5 * 8		14724	1		*			
ANR	14920	PrimaryExpression	5		14724	0					
ANR	14921	PrimaryExpression	8		14724	1					
ANR	14922	AdditiveExpression	block [ i + 7 * 8 ] - ( block [ i + 7 * 8 ] >> 1 )		14724	1		-			
ANR	14923	ArrayIndexing	block [ i + 7 * 8 ]		14724	0					
ANR	14924	Identifier	block		14724	0					
ANR	14925	AdditiveExpression	i + 7 * 8		14724	1		+			
ANR	14926	Identifier	i		14724	0					
ANR	14927	MultiplicativeExpression	7 * 8		14724	1		*			
ANR	14928	PrimaryExpression	7		14724	0					
ANR	14929	PrimaryExpression	8		14724	1					
ANR	14930	ShiftExpression	block [ i + 7 * 8 ] >> 1		14724	1		>>			
ANR	14931	ArrayIndexing	block [ i + 7 * 8 ]		14724	0					
ANR	14932	Identifier	block		14724	0					
ANR	14933	AdditiveExpression	i + 7 * 8		14724	1		+			
ANR	14934	Identifier	i		14724	0					
ANR	14935	MultiplicativeExpression	7 * 8		14724	1		*			
ANR	14936	PrimaryExpression	7		14724	0					
ANR	14937	PrimaryExpression	8		14724	1					
ANR	14938	PrimaryExpression	1		14724	1					
ANR	14939	IdentifierDeclStatement	const int a3 = block [ i + 1 * 8 ] + block [ i + 7 * 8 ] - block [ i + 3 * 8 ] - ( block [ i + 3 * 8 ] >> 1 ) ;	45:8:724:802	14724	9	True				
ANR	14940	IdentifierDecl	a3 = block [ i + 1 * 8 ] + block [ i + 7 * 8 ] - block [ i + 3 * 8 ] - ( block [ i + 3 * 8 ] >> 1 )		14724	0					
ANR	14941	IdentifierDeclType	const int		14724	0					
ANR	14942	Identifier	a3		14724	1					
ANR	14943	AssignmentExpression	a3 = block [ i + 1 * 8 ] + block [ i + 7 * 8 ] - block [ i + 3 * 8 ] - ( block [ i + 3 * 8 ] >> 1 )		14724	2		=			
ANR	14944	Identifier	a3		14724	0					
ANR	14945	AdditiveExpression	block [ i + 1 * 8 ] + block [ i + 7 * 8 ] - block [ i + 3 * 8 ] - ( block [ i + 3 * 8 ] >> 1 )		14724	1		+			
ANR	14946	ArrayIndexing	block [ i + 1 * 8 ]		14724	0					
ANR	14947	Identifier	block		14724	0					
ANR	14948	AdditiveExpression	i + 1 * 8		14724	1		+			
ANR	14949	Identifier	i		14724	0					
ANR	14950	MultiplicativeExpression	1 * 8		14724	1		*			
ANR	14951	PrimaryExpression	1		14724	0					
ANR	14952	PrimaryExpression	8		14724	1					
ANR	14953	AdditiveExpression	block [ i + 7 * 8 ] - block [ i + 3 * 8 ] - ( block [ i + 3 * 8 ] >> 1 )		14724	1		-			
ANR	14954	ArrayIndexing	block [ i + 7 * 8 ]		14724	0					
ANR	14955	Identifier	block		14724	0					
ANR	14956	AdditiveExpression	i + 7 * 8		14724	1		+			
ANR	14957	Identifier	i		14724	0					
ANR	14958	MultiplicativeExpression	7 * 8		14724	1		*			
ANR	14959	PrimaryExpression	7		14724	0					
ANR	14960	PrimaryExpression	8		14724	1					
ANR	14961	AdditiveExpression	block [ i + 3 * 8 ] - ( block [ i + 3 * 8 ] >> 1 )		14724	1		-			
ANR	14962	ArrayIndexing	block [ i + 3 * 8 ]		14724	0					
ANR	14963	Identifier	block		14724	0					
ANR	14964	AdditiveExpression	i + 3 * 8		14724	1		+			
ANR	14965	Identifier	i		14724	0					
ANR	14966	MultiplicativeExpression	3 * 8		14724	1		*			
ANR	14967	PrimaryExpression	3		14724	0					
ANR	14968	PrimaryExpression	8		14724	1					
ANR	14969	ShiftExpression	block [ i + 3 * 8 ] >> 1		14724	1		>>			
ANR	14970	ArrayIndexing	block [ i + 3 * 8 ]		14724	0					
ANR	14971	Identifier	block		14724	0					
ANR	14972	AdditiveExpression	i + 3 * 8		14724	1		+			
ANR	14973	Identifier	i		14724	0					
ANR	14974	MultiplicativeExpression	3 * 8		14724	1		*			
ANR	14975	PrimaryExpression	3		14724	0					
ANR	14976	PrimaryExpression	8		14724	1					
ANR	14977	PrimaryExpression	1		14724	1					
ANR	14978	IdentifierDeclStatement	const int a5 = - block [ i + 1 * 8 ] + block [ i + 7 * 8 ] + block [ i + 5 * 8 ] + ( block [ i + 5 * 8 ] >> 1 ) ;	47:8:813:891	14724	10	True				
ANR	14979	IdentifierDecl	a5 = - block [ i + 1 * 8 ] + block [ i + 7 * 8 ] + block [ i + 5 * 8 ] + ( block [ i + 5 * 8 ] >> 1 )		14724	0					
ANR	14980	IdentifierDeclType	const int		14724	0					
ANR	14981	Identifier	a5		14724	1					
ANR	14982	AssignmentExpression	a5 = - block [ i + 1 * 8 ] + block [ i + 7 * 8 ] + block [ i + 5 * 8 ] + ( block [ i + 5 * 8 ] >> 1 )		14724	2		=			
ANR	14983	Identifier	a5		14724	0					
ANR	14984	AdditiveExpression	- block [ i + 1 * 8 ] + block [ i + 7 * 8 ] + block [ i + 5 * 8 ] + ( block [ i + 5 * 8 ] >> 1 )		14724	1		+			
ANR	14985	UnaryOperationExpression	- block [ i + 1 * 8 ]		14724	0					
ANR	14986	UnaryOperator	-		14724	0					
ANR	14987	ArrayIndexing	block [ i + 1 * 8 ]		14724	1					
ANR	14988	Identifier	block		14724	0					
ANR	14989	AdditiveExpression	i + 1 * 8		14724	1		+			
ANR	14990	Identifier	i		14724	0					
ANR	14991	MultiplicativeExpression	1 * 8		14724	1		*			
ANR	14992	PrimaryExpression	1		14724	0					
ANR	14993	PrimaryExpression	8		14724	1					
ANR	14994	AdditiveExpression	block [ i + 7 * 8 ] + block [ i + 5 * 8 ] + ( block [ i + 5 * 8 ] >> 1 )		14724	1		+			
ANR	14995	ArrayIndexing	block [ i + 7 * 8 ]		14724	0					
ANR	14996	Identifier	block		14724	0					
ANR	14997	AdditiveExpression	i + 7 * 8		14724	1		+			
ANR	14998	Identifier	i		14724	0					
ANR	14999	MultiplicativeExpression	7 * 8		14724	1		*			
ANR	15000	PrimaryExpression	7		14724	0					
ANR	15001	PrimaryExpression	8		14724	1					
ANR	15002	AdditiveExpression	block [ i + 5 * 8 ] + ( block [ i + 5 * 8 ] >> 1 )		14724	1		+			
ANR	15003	ArrayIndexing	block [ i + 5 * 8 ]		14724	0					
ANR	15004	Identifier	block		14724	0					
ANR	15005	AdditiveExpression	i + 5 * 8		14724	1		+			
ANR	15006	Identifier	i		14724	0					
ANR	15007	MultiplicativeExpression	5 * 8		14724	1		*			
ANR	15008	PrimaryExpression	5		14724	0					
ANR	15009	PrimaryExpression	8		14724	1					
ANR	15010	ShiftExpression	block [ i + 5 * 8 ] >> 1		14724	1		>>			
ANR	15011	ArrayIndexing	block [ i + 5 * 8 ]		14724	0					
ANR	15012	Identifier	block		14724	0					
ANR	15013	AdditiveExpression	i + 5 * 8		14724	1		+			
ANR	15014	Identifier	i		14724	0					
ANR	15015	MultiplicativeExpression	5 * 8		14724	1		*			
ANR	15016	PrimaryExpression	5		14724	0					
ANR	15017	PrimaryExpression	8		14724	1					
ANR	15018	PrimaryExpression	1		14724	1					
ANR	15019	IdentifierDeclStatement	const int a7 = block [ i + 3 * 8 ] + block [ i + 5 * 8 ] + block [ i + 1 * 8 ] + ( block [ i + 1 * 8 ] >> 1 ) ;	49:8:902:980	14724	11	True				
ANR	15020	IdentifierDecl	a7 = block [ i + 3 * 8 ] + block [ i + 5 * 8 ] + block [ i + 1 * 8 ] + ( block [ i + 1 * 8 ] >> 1 )		14724	0					
ANR	15021	IdentifierDeclType	const int		14724	0					
ANR	15022	Identifier	a7		14724	1					
ANR	15023	AssignmentExpression	a7 = block [ i + 3 * 8 ] + block [ i + 5 * 8 ] + block [ i + 1 * 8 ] + ( block [ i + 1 * 8 ] >> 1 )		14724	2		=			
ANR	15024	Identifier	a7		14724	0					
ANR	15025	AdditiveExpression	block [ i + 3 * 8 ] + block [ i + 5 * 8 ] + block [ i + 1 * 8 ] + ( block [ i + 1 * 8 ] >> 1 )		14724	1		+			
ANR	15026	ArrayIndexing	block [ i + 3 * 8 ]		14724	0					
ANR	15027	Identifier	block		14724	0					
ANR	15028	AdditiveExpression	i + 3 * 8		14724	1		+			
ANR	15029	Identifier	i		14724	0					
ANR	15030	MultiplicativeExpression	3 * 8		14724	1		*			
ANR	15031	PrimaryExpression	3		14724	0					
ANR	15032	PrimaryExpression	8		14724	1					
ANR	15033	AdditiveExpression	block [ i + 5 * 8 ] + block [ i + 1 * 8 ] + ( block [ i + 1 * 8 ] >> 1 )		14724	1		+			
ANR	15034	ArrayIndexing	block [ i + 5 * 8 ]		14724	0					
ANR	15035	Identifier	block		14724	0					
ANR	15036	AdditiveExpression	i + 5 * 8		14724	1		+			
ANR	15037	Identifier	i		14724	0					
ANR	15038	MultiplicativeExpression	5 * 8		14724	1		*			
ANR	15039	PrimaryExpression	5		14724	0					
ANR	15040	PrimaryExpression	8		14724	1					
ANR	15041	AdditiveExpression	block [ i + 1 * 8 ] + ( block [ i + 1 * 8 ] >> 1 )		14724	1		+			
ANR	15042	ArrayIndexing	block [ i + 1 * 8 ]		14724	0					
ANR	15043	Identifier	block		14724	0					
ANR	15044	AdditiveExpression	i + 1 * 8		14724	1		+			
ANR	15045	Identifier	i		14724	0					
ANR	15046	MultiplicativeExpression	1 * 8		14724	1		*			
ANR	15047	PrimaryExpression	1		14724	0					
ANR	15048	PrimaryExpression	8		14724	1					
ANR	15049	ShiftExpression	block [ i + 1 * 8 ] >> 1		14724	1		>>			
ANR	15050	ArrayIndexing	block [ i + 1 * 8 ]		14724	0					
ANR	15051	Identifier	block		14724	0					
ANR	15052	AdditiveExpression	i + 1 * 8		14724	1		+			
ANR	15053	Identifier	i		14724	0					
ANR	15054	MultiplicativeExpression	1 * 8		14724	1		*			
ANR	15055	PrimaryExpression	1		14724	0					
ANR	15056	PrimaryExpression	8		14724	1					
ANR	15057	PrimaryExpression	1		14724	1					
ANR	15058	IdentifierDeclStatement	const int b1 = ( a7 >> 2 ) + a1 ;	53:8:993:1020	14724	12	True				
ANR	15059	IdentifierDecl	b1 = ( a7 >> 2 ) + a1		14724	0					
ANR	15060	IdentifierDeclType	const int		14724	0					
ANR	15061	Identifier	b1		14724	1					
ANR	15062	AssignmentExpression	b1 = ( a7 >> 2 ) + a1		14724	2		=			
ANR	15063	Identifier	b1		14724	0					
ANR	15064	AdditiveExpression	( a7 >> 2 ) + a1		14724	1		+			
ANR	15065	ShiftExpression	a7 >> 2		14724	0		>>			
ANR	15066	Identifier	a7		14724	0					
ANR	15067	PrimaryExpression	2		14724	1					
ANR	15068	Identifier	a1		14724	1					
ANR	15069	IdentifierDeclStatement	const int b3 = a3 + ( a5 >> 2 ) ;	55:8:1031:1059	14724	13	True				
ANR	15070	IdentifierDecl	b3 = a3 + ( a5 >> 2 )		14724	0					
ANR	15071	IdentifierDeclType	const int		14724	0					
ANR	15072	Identifier	b3		14724	1					
ANR	15073	AssignmentExpression	b3 = a3 + ( a5 >> 2 )		14724	2		=			
ANR	15074	Identifier	b3		14724	0					
ANR	15075	AdditiveExpression	a3 + ( a5 >> 2 )		14724	1		+			
ANR	15076	Identifier	a3		14724	0					
ANR	15077	ShiftExpression	a5 >> 2		14724	1		>>			
ANR	15078	Identifier	a5		14724	0					
ANR	15079	PrimaryExpression	2		14724	1					
ANR	15080	IdentifierDeclStatement	const int b5 = ( a3 >> 2 ) - a5 ;	57:8:1070:1097	14724	14	True				
ANR	15081	IdentifierDecl	b5 = ( a3 >> 2 ) - a5		14724	0					
ANR	15082	IdentifierDeclType	const int		14724	0					
ANR	15083	Identifier	b5		14724	1					
ANR	15084	AssignmentExpression	b5 = ( a3 >> 2 ) - a5		14724	2		=			
ANR	15085	Identifier	b5		14724	0					
ANR	15086	AdditiveExpression	( a3 >> 2 ) - a5		14724	1		-			
ANR	15087	ShiftExpression	a3 >> 2		14724	0		>>			
ANR	15088	Identifier	a3		14724	0					
ANR	15089	PrimaryExpression	2		14724	1					
ANR	15090	Identifier	a5		14724	1					
ANR	15091	IdentifierDeclStatement	const int b7 = a7 - ( a1 >> 2 ) ;	59:8:1108:1136	14724	15	True				
ANR	15092	IdentifierDecl	b7 = a7 - ( a1 >> 2 )		14724	0					
ANR	15093	IdentifierDeclType	const int		14724	0					
ANR	15094	Identifier	b7		14724	1					
ANR	15095	AssignmentExpression	b7 = a7 - ( a1 >> 2 )		14724	2		=			
ANR	15096	Identifier	b7		14724	0					
ANR	15097	AdditiveExpression	a7 - ( a1 >> 2 )		14724	1		-			
ANR	15098	Identifier	a7		14724	0					
ANR	15099	ShiftExpression	a1 >> 2		14724	1		>>			
ANR	15100	Identifier	a1		14724	0					
ANR	15101	PrimaryExpression	2		14724	1					
ANR	15102	ExpressionStatement	block [ i + 0 * 8 ] = b0 + b7	63:8:1149:1171	14724	16	True				
ANR	15103	AssignmentExpression	block [ i + 0 * 8 ] = b0 + b7		14724	0		=			
ANR	15104	ArrayIndexing	block [ i + 0 * 8 ]		14724	0					
ANR	15105	Identifier	block		14724	0					
ANR	15106	AdditiveExpression	i + 0 * 8		14724	1		+			
ANR	15107	Identifier	i		14724	0					
ANR	15108	MultiplicativeExpression	0 * 8		14724	1		*			
ANR	15109	PrimaryExpression	0		14724	0					
ANR	15110	PrimaryExpression	8		14724	1					
ANR	15111	AdditiveExpression	b0 + b7		14724	1		+			
ANR	15112	Identifier	b0		14724	0					
ANR	15113	Identifier	b7		14724	1					
ANR	15114	ExpressionStatement	block [ i + 7 * 8 ] = b0 - b7	65:8:1182:1204	14724	17	True				
ANR	15115	AssignmentExpression	block [ i + 7 * 8 ] = b0 - b7		14724	0		=			
ANR	15116	ArrayIndexing	block [ i + 7 * 8 ]		14724	0					
ANR	15117	Identifier	block		14724	0					
ANR	15118	AdditiveExpression	i + 7 * 8		14724	1		+			
ANR	15119	Identifier	i		14724	0					
ANR	15120	MultiplicativeExpression	7 * 8		14724	1		*			
ANR	15121	PrimaryExpression	7		14724	0					
ANR	15122	PrimaryExpression	8		14724	1					
ANR	15123	AdditiveExpression	b0 - b7		14724	1		-			
ANR	15124	Identifier	b0		14724	0					
ANR	15125	Identifier	b7		14724	1					
ANR	15126	ExpressionStatement	block [ i + 1 * 8 ] = b2 + b5	67:8:1215:1237	14724	18	True				
ANR	15127	AssignmentExpression	block [ i + 1 * 8 ] = b2 + b5		14724	0		=			
ANR	15128	ArrayIndexing	block [ i + 1 * 8 ]		14724	0					
ANR	15129	Identifier	block		14724	0					
ANR	15130	AdditiveExpression	i + 1 * 8		14724	1		+			
ANR	15131	Identifier	i		14724	0					
ANR	15132	MultiplicativeExpression	1 * 8		14724	1		*			
ANR	15133	PrimaryExpression	1		14724	0					
ANR	15134	PrimaryExpression	8		14724	1					
ANR	15135	AdditiveExpression	b2 + b5		14724	1		+			
ANR	15136	Identifier	b2		14724	0					
ANR	15137	Identifier	b5		14724	1					
ANR	15138	ExpressionStatement	block [ i + 6 * 8 ] = b2 - b5	69:8:1248:1270	14724	19	True				
ANR	15139	AssignmentExpression	block [ i + 6 * 8 ] = b2 - b5		14724	0		=			
ANR	15140	ArrayIndexing	block [ i + 6 * 8 ]		14724	0					
ANR	15141	Identifier	block		14724	0					
ANR	15142	AdditiveExpression	i + 6 * 8		14724	1		+			
ANR	15143	Identifier	i		14724	0					
ANR	15144	MultiplicativeExpression	6 * 8		14724	1		*			
ANR	15145	PrimaryExpression	6		14724	0					
ANR	15146	PrimaryExpression	8		14724	1					
ANR	15147	AdditiveExpression	b2 - b5		14724	1		-			
ANR	15148	Identifier	b2		14724	0					
ANR	15149	Identifier	b5		14724	1					
ANR	15150	ExpressionStatement	block [ i + 2 * 8 ] = b4 + b3	71:8:1281:1303	14724	20	True				
ANR	15151	AssignmentExpression	block [ i + 2 * 8 ] = b4 + b3		14724	0		=			
ANR	15152	ArrayIndexing	block [ i + 2 * 8 ]		14724	0					
ANR	15153	Identifier	block		14724	0					
ANR	15154	AdditiveExpression	i + 2 * 8		14724	1		+			
ANR	15155	Identifier	i		14724	0					
ANR	15156	MultiplicativeExpression	2 * 8		14724	1		*			
ANR	15157	PrimaryExpression	2		14724	0					
ANR	15158	PrimaryExpression	8		14724	1					
ANR	15159	AdditiveExpression	b4 + b3		14724	1		+			
ANR	15160	Identifier	b4		14724	0					
ANR	15161	Identifier	b3		14724	1					
ANR	15162	ExpressionStatement	block [ i + 5 * 8 ] = b4 - b3	73:8:1314:1336	14724	21	True				
ANR	15163	AssignmentExpression	block [ i + 5 * 8 ] = b4 - b3		14724	0		=			
ANR	15164	ArrayIndexing	block [ i + 5 * 8 ]		14724	0					
ANR	15165	Identifier	block		14724	0					
ANR	15166	AdditiveExpression	i + 5 * 8		14724	1		+			
ANR	15167	Identifier	i		14724	0					
ANR	15168	MultiplicativeExpression	5 * 8		14724	1		*			
ANR	15169	PrimaryExpression	5		14724	0					
ANR	15170	PrimaryExpression	8		14724	1					
ANR	15171	AdditiveExpression	b4 - b3		14724	1		-			
ANR	15172	Identifier	b4		14724	0					
ANR	15173	Identifier	b3		14724	1					
ANR	15174	ExpressionStatement	block [ i + 3 * 8 ] = b6 + b1	75:8:1347:1369	14724	22	True				
ANR	15175	AssignmentExpression	block [ i + 3 * 8 ] = b6 + b1		14724	0		=			
ANR	15176	ArrayIndexing	block [ i + 3 * 8 ]		14724	0					
ANR	15177	Identifier	block		14724	0					
ANR	15178	AdditiveExpression	i + 3 * 8		14724	1		+			
ANR	15179	Identifier	i		14724	0					
ANR	15180	MultiplicativeExpression	3 * 8		14724	1		*			
ANR	15181	PrimaryExpression	3		14724	0					
ANR	15182	PrimaryExpression	8		14724	1					
ANR	15183	AdditiveExpression	b6 + b1		14724	1		+			
ANR	15184	Identifier	b6		14724	0					
ANR	15185	Identifier	b1		14724	1					
ANR	15186	ExpressionStatement	block [ i + 4 * 8 ] = b6 - b1	77:8:1380:1402	14724	23	True				
ANR	15187	AssignmentExpression	block [ i + 4 * 8 ] = b6 - b1		14724	0		=			
ANR	15188	ArrayIndexing	block [ i + 4 * 8 ]		14724	0					
ANR	15189	Identifier	block		14724	0					
ANR	15190	AdditiveExpression	i + 4 * 8		14724	1		+			
ANR	15191	Identifier	i		14724	0					
ANR	15192	MultiplicativeExpression	4 * 8		14724	1		*			
ANR	15193	PrimaryExpression	4		14724	0					
ANR	15194	PrimaryExpression	8		14724	1					
ANR	15195	AdditiveExpression	b6 - b1		14724	1		-			
ANR	15196	Identifier	b6		14724	0					
ANR	15197	Identifier	b1		14724	1					
ANR	15198	ForStatement	for ( i = 0 ; i < 8 ; i ++ )		14724	6					
ANR	15199	ForInit	i = 0 ;	81:9:1421:1426	14724	0	True				
ANR	15200	AssignmentExpression	i = 0		14724	0		=			
ANR	15201	Identifier	i		14724	0					
ANR	15202	PrimaryExpression	0		14724	1					
ANR	15203	Condition	i < 8	81:16:1428:1432	14724	1	True				
ANR	15204	RelationalExpression	i < 8		14724	0		<			
ANR	15205	Identifier	i		14724	0					
ANR	15206	PrimaryExpression	8		14724	1					
ANR	15207	PostIncDecOperationExpression	i ++	81:23:1435:1437	14724	2	True				
ANR	15208	Identifier	i		14724	0					
ANR	15209	IncDec	++		14724	1					
ANR	15210	CompoundStatement		121:8:2216:2244	14724	3					
ANR	15211	IdentifierDeclStatement	const int a0 = block [ 0 + i * 8 ] + block [ 4 + i * 8 ] ;	85:8:1457:1500	14724	0	True				
ANR	15212	IdentifierDecl	a0 = block [ 0 + i * 8 ] + block [ 4 + i * 8 ]		14724	0					
ANR	15213	IdentifierDeclType	const int		14724	0					
ANR	15214	Identifier	a0		14724	1					
ANR	15215	AssignmentExpression	a0 = block [ 0 + i * 8 ] + block [ 4 + i * 8 ]		14724	2		=			
ANR	15216	Identifier	a0		14724	0					
ANR	15217	AdditiveExpression	block [ 0 + i * 8 ] + block [ 4 + i * 8 ]		14724	1		+			
ANR	15218	ArrayIndexing	block [ 0 + i * 8 ]		14724	0					
ANR	15219	Identifier	block		14724	0					
ANR	15220	AdditiveExpression	0 + i * 8		14724	1		+			
ANR	15221	PrimaryExpression	0		14724	0					
ANR	15222	MultiplicativeExpression	i * 8		14724	1		*			
ANR	15223	Identifier	i		14724	0					
ANR	15224	PrimaryExpression	8		14724	1					
ANR	15225	ArrayIndexing	block [ 4 + i * 8 ]		14724	1					
ANR	15226	Identifier	block		14724	0					
ANR	15227	AdditiveExpression	4 + i * 8		14724	1		+			
ANR	15228	PrimaryExpression	4		14724	0					
ANR	15229	MultiplicativeExpression	i * 8		14724	1		*			
ANR	15230	Identifier	i		14724	0					
ANR	15231	PrimaryExpression	8		14724	1					
ANR	15232	IdentifierDeclStatement	const int a2 = block [ 0 + i * 8 ] - block [ 4 + i * 8 ] ;	87:8:1511:1554	14724	1	True				
ANR	15233	IdentifierDecl	a2 = block [ 0 + i * 8 ] - block [ 4 + i * 8 ]		14724	0					
ANR	15234	IdentifierDeclType	const int		14724	0					
ANR	15235	Identifier	a2		14724	1					
ANR	15236	AssignmentExpression	a2 = block [ 0 + i * 8 ] - block [ 4 + i * 8 ]		14724	2		=			
ANR	15237	Identifier	a2		14724	0					
ANR	15238	AdditiveExpression	block [ 0 + i * 8 ] - block [ 4 + i * 8 ]		14724	1		-			
ANR	15239	ArrayIndexing	block [ 0 + i * 8 ]		14724	0					
ANR	15240	Identifier	block		14724	0					
ANR	15241	AdditiveExpression	0 + i * 8		14724	1		+			
ANR	15242	PrimaryExpression	0		14724	0					
ANR	15243	MultiplicativeExpression	i * 8		14724	1		*			
ANR	15244	Identifier	i		14724	0					
ANR	15245	PrimaryExpression	8		14724	1					
ANR	15246	ArrayIndexing	block [ 4 + i * 8 ]		14724	1					
ANR	15247	Identifier	block		14724	0					
ANR	15248	AdditiveExpression	4 + i * 8		14724	1		+			
ANR	15249	PrimaryExpression	4		14724	0					
ANR	15250	MultiplicativeExpression	i * 8		14724	1		*			
ANR	15251	Identifier	i		14724	0					
ANR	15252	PrimaryExpression	8		14724	1					
ANR	15253	IdentifierDeclStatement	const int a4 = ( block [ 2 + i * 8 ] >> 1 ) - block [ 6 + i * 8 ] ;	89:8:1565:1612	14724	2	True				
ANR	15254	IdentifierDecl	a4 = ( block [ 2 + i * 8 ] >> 1 ) - block [ 6 + i * 8 ]		14724	0					
ANR	15255	IdentifierDeclType	const int		14724	0					
ANR	15256	Identifier	a4		14724	1					
ANR	15257	AssignmentExpression	a4 = ( block [ 2 + i * 8 ] >> 1 ) - block [ 6 + i * 8 ]		14724	2		=			
ANR	15258	Identifier	a4		14724	0					
ANR	15259	AdditiveExpression	( block [ 2 + i * 8 ] >> 1 ) - block [ 6 + i * 8 ]		14724	1		-			
ANR	15260	ShiftExpression	block [ 2 + i * 8 ] >> 1		14724	0		>>			
ANR	15261	ArrayIndexing	block [ 2 + i * 8 ]		14724	0					
ANR	15262	Identifier	block		14724	0					
ANR	15263	AdditiveExpression	2 + i * 8		14724	1		+			
ANR	15264	PrimaryExpression	2		14724	0					
ANR	15265	MultiplicativeExpression	i * 8		14724	1		*			
ANR	15266	Identifier	i		14724	0					
ANR	15267	PrimaryExpression	8		14724	1					
ANR	15268	PrimaryExpression	1		14724	1					
ANR	15269	ArrayIndexing	block [ 6 + i * 8 ]		14724	1					
ANR	15270	Identifier	block		14724	0					
ANR	15271	AdditiveExpression	6 + i * 8		14724	1		+			
ANR	15272	PrimaryExpression	6		14724	0					
ANR	15273	MultiplicativeExpression	i * 8		14724	1		*			
ANR	15274	Identifier	i		14724	0					
ANR	15275	PrimaryExpression	8		14724	1					
ANR	15276	IdentifierDeclStatement	const int a6 = ( block [ 6 + i * 8 ] >> 1 ) + block [ 2 + i * 8 ] ;	91:8:1623:1670	14724	3	True				
ANR	15277	IdentifierDecl	a6 = ( block [ 6 + i * 8 ] >> 1 ) + block [ 2 + i * 8 ]		14724	0					
ANR	15278	IdentifierDeclType	const int		14724	0					
ANR	15279	Identifier	a6		14724	1					
ANR	15280	AssignmentExpression	a6 = ( block [ 6 + i * 8 ] >> 1 ) + block [ 2 + i * 8 ]		14724	2		=			
ANR	15281	Identifier	a6		14724	0					
ANR	15282	AdditiveExpression	( block [ 6 + i * 8 ] >> 1 ) + block [ 2 + i * 8 ]		14724	1		+			
ANR	15283	ShiftExpression	block [ 6 + i * 8 ] >> 1		14724	0		>>			
ANR	15284	ArrayIndexing	block [ 6 + i * 8 ]		14724	0					
ANR	15285	Identifier	block		14724	0					
ANR	15286	AdditiveExpression	6 + i * 8		14724	1		+			
ANR	15287	PrimaryExpression	6		14724	0					
ANR	15288	MultiplicativeExpression	i * 8		14724	1		*			
ANR	15289	Identifier	i		14724	0					
ANR	15290	PrimaryExpression	8		14724	1					
ANR	15291	PrimaryExpression	1		14724	1					
ANR	15292	ArrayIndexing	block [ 2 + i * 8 ]		14724	1					
ANR	15293	Identifier	block		14724	0					
ANR	15294	AdditiveExpression	2 + i * 8		14724	1		+			
ANR	15295	PrimaryExpression	2		14724	0					
ANR	15296	MultiplicativeExpression	i * 8		14724	1		*			
ANR	15297	Identifier	i		14724	0					
ANR	15298	PrimaryExpression	8		14724	1					
ANR	15299	IdentifierDeclStatement	const int b0 = a0 + a6 ;	95:8:1683:1705	14724	4	True				
ANR	15300	IdentifierDecl	b0 = a0 + a6		14724	0					
ANR	15301	IdentifierDeclType	const int		14724	0					
ANR	15302	Identifier	b0		14724	1					
ANR	15303	AssignmentExpression	b0 = a0 + a6		14724	2		=			
ANR	15304	Identifier	b0		14724	0					
ANR	15305	AdditiveExpression	a0 + a6		14724	1		+			
ANR	15306	Identifier	a0		14724	0					
ANR	15307	Identifier	a6		14724	1					
ANR	15308	IdentifierDeclStatement	const int b2 = a2 + a4 ;	97:8:1716:1738	14724	5	True				
ANR	15309	IdentifierDecl	b2 = a2 + a4		14724	0					
ANR	15310	IdentifierDeclType	const int		14724	0					
ANR	15311	Identifier	b2		14724	1					
ANR	15312	AssignmentExpression	b2 = a2 + a4		14724	2		=			
ANR	15313	Identifier	b2		14724	0					
ANR	15314	AdditiveExpression	a2 + a4		14724	1		+			
ANR	15315	Identifier	a2		14724	0					
ANR	15316	Identifier	a4		14724	1					
ANR	15317	IdentifierDeclStatement	const int b4 = a2 - a4 ;	99:8:1749:1771	14724	6	True				
ANR	15318	IdentifierDecl	b4 = a2 - a4		14724	0					
ANR	15319	IdentifierDeclType	const int		14724	0					
ANR	15320	Identifier	b4		14724	1					
ANR	15321	AssignmentExpression	b4 = a2 - a4		14724	2		=			
ANR	15322	Identifier	b4		14724	0					
ANR	15323	AdditiveExpression	a2 - a4		14724	1		-			
ANR	15324	Identifier	a2		14724	0					
ANR	15325	Identifier	a4		14724	1					
ANR	15326	IdentifierDeclStatement	const int b6 = a0 - a6 ;	101:8:1782:1804	14724	7	True				
ANR	15327	IdentifierDecl	b6 = a0 - a6		14724	0					
ANR	15328	IdentifierDeclType	const int		14724	0					
ANR	15329	Identifier	b6		14724	1					
ANR	15330	AssignmentExpression	b6 = a0 - a6		14724	2		=			
ANR	15331	Identifier	b6		14724	0					
ANR	15332	AdditiveExpression	a0 - a6		14724	1		-			
ANR	15333	Identifier	a0		14724	0					
ANR	15334	Identifier	a6		14724	1					
ANR	15335	IdentifierDeclStatement	const int a1 = - block [ 3 + i * 8 ] + block [ 5 + i * 8 ] - block [ 7 + i * 8 ] - ( block [ 7 + i * 8 ] >> 1 ) ;	105:8:1817:1895	14724	8	True				
ANR	15336	IdentifierDecl	a1 = - block [ 3 + i * 8 ] + block [ 5 + i * 8 ] - block [ 7 + i * 8 ] - ( block [ 7 + i * 8 ] >> 1 )		14724	0					
ANR	15337	IdentifierDeclType	const int		14724	0					
ANR	15338	Identifier	a1		14724	1					
ANR	15339	AssignmentExpression	a1 = - block [ 3 + i * 8 ] + block [ 5 + i * 8 ] - block [ 7 + i * 8 ] - ( block [ 7 + i * 8 ] >> 1 )		14724	2		=			
ANR	15340	Identifier	a1		14724	0					
ANR	15341	AdditiveExpression	- block [ 3 + i * 8 ] + block [ 5 + i * 8 ] - block [ 7 + i * 8 ] - ( block [ 7 + i * 8 ] >> 1 )		14724	1		+			
ANR	15342	UnaryOperationExpression	- block [ 3 + i * 8 ]		14724	0					
ANR	15343	UnaryOperator	-		14724	0					
ANR	15344	ArrayIndexing	block [ 3 + i * 8 ]		14724	1					
ANR	15345	Identifier	block		14724	0					
ANR	15346	AdditiveExpression	3 + i * 8		14724	1		+			
ANR	15347	PrimaryExpression	3		14724	0					
ANR	15348	MultiplicativeExpression	i * 8		14724	1		*			
ANR	15349	Identifier	i		14724	0					
ANR	15350	PrimaryExpression	8		14724	1					
ANR	15351	AdditiveExpression	block [ 5 + i * 8 ] - block [ 7 + i * 8 ] - ( block [ 7 + i * 8 ] >> 1 )		14724	1		-			
ANR	15352	ArrayIndexing	block [ 5 + i * 8 ]		14724	0					
ANR	15353	Identifier	block		14724	0					
ANR	15354	AdditiveExpression	5 + i * 8		14724	1		+			
ANR	15355	PrimaryExpression	5		14724	0					
ANR	15356	MultiplicativeExpression	i * 8		14724	1		*			
ANR	15357	Identifier	i		14724	0					
ANR	15358	PrimaryExpression	8		14724	1					
ANR	15359	AdditiveExpression	block [ 7 + i * 8 ] - ( block [ 7 + i * 8 ] >> 1 )		14724	1		-			
ANR	15360	ArrayIndexing	block [ 7 + i * 8 ]		14724	0					
ANR	15361	Identifier	block		14724	0					
ANR	15362	AdditiveExpression	7 + i * 8		14724	1		+			
ANR	15363	PrimaryExpression	7		14724	0					
ANR	15364	MultiplicativeExpression	i * 8		14724	1		*			
ANR	15365	Identifier	i		14724	0					
ANR	15366	PrimaryExpression	8		14724	1					
ANR	15367	ShiftExpression	block [ 7 + i * 8 ] >> 1		14724	1		>>			
ANR	15368	ArrayIndexing	block [ 7 + i * 8 ]		14724	0					
ANR	15369	Identifier	block		14724	0					
ANR	15370	AdditiveExpression	7 + i * 8		14724	1		+			
ANR	15371	PrimaryExpression	7		14724	0					
ANR	15372	MultiplicativeExpression	i * 8		14724	1		*			
ANR	15373	Identifier	i		14724	0					
ANR	15374	PrimaryExpression	8		14724	1					
ANR	15375	PrimaryExpression	1		14724	1					
ANR	15376	IdentifierDeclStatement	const int a3 = block [ 1 + i * 8 ] + block [ 7 + i * 8 ] - block [ 3 + i * 8 ] - ( block [ 3 + i * 8 ] >> 1 ) ;	107:8:1906:1984	14724	9	True				
ANR	15377	IdentifierDecl	a3 = block [ 1 + i * 8 ] + block [ 7 + i * 8 ] - block [ 3 + i * 8 ] - ( block [ 3 + i * 8 ] >> 1 )		14724	0					
ANR	15378	IdentifierDeclType	const int		14724	0					
ANR	15379	Identifier	a3		14724	1					
ANR	15380	AssignmentExpression	a3 = block [ 1 + i * 8 ] + block [ 7 + i * 8 ] - block [ 3 + i * 8 ] - ( block [ 3 + i * 8 ] >> 1 )		14724	2		=			
ANR	15381	Identifier	a3		14724	0					
ANR	15382	AdditiveExpression	block [ 1 + i * 8 ] + block [ 7 + i * 8 ] - block [ 3 + i * 8 ] - ( block [ 3 + i * 8 ] >> 1 )		14724	1		+			
ANR	15383	ArrayIndexing	block [ 1 + i * 8 ]		14724	0					
ANR	15384	Identifier	block		14724	0					
ANR	15385	AdditiveExpression	1 + i * 8		14724	1		+			
ANR	15386	PrimaryExpression	1		14724	0					
ANR	15387	MultiplicativeExpression	i * 8		14724	1		*			
ANR	15388	Identifier	i		14724	0					
ANR	15389	PrimaryExpression	8		14724	1					
ANR	15390	AdditiveExpression	block [ 7 + i * 8 ] - block [ 3 + i * 8 ] - ( block [ 3 + i * 8 ] >> 1 )		14724	1		-			
ANR	15391	ArrayIndexing	block [ 7 + i * 8 ]		14724	0					
ANR	15392	Identifier	block		14724	0					
ANR	15393	AdditiveExpression	7 + i * 8		14724	1		+			
ANR	15394	PrimaryExpression	7		14724	0					
ANR	15395	MultiplicativeExpression	i * 8		14724	1		*			
ANR	15396	Identifier	i		14724	0					
ANR	15397	PrimaryExpression	8		14724	1					
ANR	15398	AdditiveExpression	block [ 3 + i * 8 ] - ( block [ 3 + i * 8 ] >> 1 )		14724	1		-			
ANR	15399	ArrayIndexing	block [ 3 + i * 8 ]		14724	0					
ANR	15400	Identifier	block		14724	0					
ANR	15401	AdditiveExpression	3 + i * 8		14724	1		+			
ANR	15402	PrimaryExpression	3		14724	0					
ANR	15403	MultiplicativeExpression	i * 8		14724	1		*			
ANR	15404	Identifier	i		14724	0					
ANR	15405	PrimaryExpression	8		14724	1					
ANR	15406	ShiftExpression	block [ 3 + i * 8 ] >> 1		14724	1		>>			
ANR	15407	ArrayIndexing	block [ 3 + i * 8 ]		14724	0					
ANR	15408	Identifier	block		14724	0					
ANR	15409	AdditiveExpression	3 + i * 8		14724	1		+			
ANR	15410	PrimaryExpression	3		14724	0					
ANR	15411	MultiplicativeExpression	i * 8		14724	1		*			
ANR	15412	Identifier	i		14724	0					
ANR	15413	PrimaryExpression	8		14724	1					
ANR	15414	PrimaryExpression	1		14724	1					
ANR	15415	IdentifierDeclStatement	const int a5 = - block [ 1 + i * 8 ] + block [ 7 + i * 8 ] + block [ 5 + i * 8 ] + ( block [ 5 + i * 8 ] >> 1 ) ;	109:8:1995:2073	14724	10	True				
ANR	15416	IdentifierDecl	a5 = - block [ 1 + i * 8 ] + block [ 7 + i * 8 ] + block [ 5 + i * 8 ] + ( block [ 5 + i * 8 ] >> 1 )		14724	0					
ANR	15417	IdentifierDeclType	const int		14724	0					
ANR	15418	Identifier	a5		14724	1					
ANR	15419	AssignmentExpression	a5 = - block [ 1 + i * 8 ] + block [ 7 + i * 8 ] + block [ 5 + i * 8 ] + ( block [ 5 + i * 8 ] >> 1 )		14724	2		=			
ANR	15420	Identifier	a5		14724	0					
ANR	15421	AdditiveExpression	- block [ 1 + i * 8 ] + block [ 7 + i * 8 ] + block [ 5 + i * 8 ] + ( block [ 5 + i * 8 ] >> 1 )		14724	1		+			
ANR	15422	UnaryOperationExpression	- block [ 1 + i * 8 ]		14724	0					
ANR	15423	UnaryOperator	-		14724	0					
ANR	15424	ArrayIndexing	block [ 1 + i * 8 ]		14724	1					
ANR	15425	Identifier	block		14724	0					
ANR	15426	AdditiveExpression	1 + i * 8		14724	1		+			
ANR	15427	PrimaryExpression	1		14724	0					
ANR	15428	MultiplicativeExpression	i * 8		14724	1		*			
ANR	15429	Identifier	i		14724	0					
ANR	15430	PrimaryExpression	8		14724	1					
ANR	15431	AdditiveExpression	block [ 7 + i * 8 ] + block [ 5 + i * 8 ] + ( block [ 5 + i * 8 ] >> 1 )		14724	1		+			
ANR	15432	ArrayIndexing	block [ 7 + i * 8 ]		14724	0					
ANR	15433	Identifier	block		14724	0					
ANR	15434	AdditiveExpression	7 + i * 8		14724	1		+			
ANR	15435	PrimaryExpression	7		14724	0					
ANR	15436	MultiplicativeExpression	i * 8		14724	1		*			
ANR	15437	Identifier	i		14724	0					
ANR	15438	PrimaryExpression	8		14724	1					
ANR	15439	AdditiveExpression	block [ 5 + i * 8 ] + ( block [ 5 + i * 8 ] >> 1 )		14724	1		+			
ANR	15440	ArrayIndexing	block [ 5 + i * 8 ]		14724	0					
ANR	15441	Identifier	block		14724	0					
ANR	15442	AdditiveExpression	5 + i * 8		14724	1		+			
ANR	15443	PrimaryExpression	5		14724	0					
ANR	15444	MultiplicativeExpression	i * 8		14724	1		*			
ANR	15445	Identifier	i		14724	0					
ANR	15446	PrimaryExpression	8		14724	1					
ANR	15447	ShiftExpression	block [ 5 + i * 8 ] >> 1		14724	1		>>			
ANR	15448	ArrayIndexing	block [ 5 + i * 8 ]		14724	0					
ANR	15449	Identifier	block		14724	0					
ANR	15450	AdditiveExpression	5 + i * 8		14724	1		+			
ANR	15451	PrimaryExpression	5		14724	0					
ANR	15452	MultiplicativeExpression	i * 8		14724	1		*			
ANR	15453	Identifier	i		14724	0					
ANR	15454	PrimaryExpression	8		14724	1					
ANR	15455	PrimaryExpression	1		14724	1					
ANR	15456	IdentifierDeclStatement	const int a7 = block [ 3 + i * 8 ] + block [ 5 + i * 8 ] + block [ 1 + i * 8 ] + ( block [ 1 + i * 8 ] >> 1 ) ;	111:8:2084:2162	14724	11	True				
ANR	15457	IdentifierDecl	a7 = block [ 3 + i * 8 ] + block [ 5 + i * 8 ] + block [ 1 + i * 8 ] + ( block [ 1 + i * 8 ] >> 1 )		14724	0					
ANR	15458	IdentifierDeclType	const int		14724	0					
ANR	15459	Identifier	a7		14724	1					
ANR	15460	AssignmentExpression	a7 = block [ 3 + i * 8 ] + block [ 5 + i * 8 ] + block [ 1 + i * 8 ] + ( block [ 1 + i * 8 ] >> 1 )		14724	2		=			
ANR	15461	Identifier	a7		14724	0					
ANR	15462	AdditiveExpression	block [ 3 + i * 8 ] + block [ 5 + i * 8 ] + block [ 1 + i * 8 ] + ( block [ 1 + i * 8 ] >> 1 )		14724	1		+			
ANR	15463	ArrayIndexing	block [ 3 + i * 8 ]		14724	0					
ANR	15464	Identifier	block		14724	0					
ANR	15465	AdditiveExpression	3 + i * 8		14724	1		+			
ANR	15466	PrimaryExpression	3		14724	0					
ANR	15467	MultiplicativeExpression	i * 8		14724	1		*			
ANR	15468	Identifier	i		14724	0					
ANR	15469	PrimaryExpression	8		14724	1					
ANR	15470	AdditiveExpression	block [ 5 + i * 8 ] + block [ 1 + i * 8 ] + ( block [ 1 + i * 8 ] >> 1 )		14724	1		+			
ANR	15471	ArrayIndexing	block [ 5 + i * 8 ]		14724	0					
ANR	15472	Identifier	block		14724	0					
ANR	15473	AdditiveExpression	5 + i * 8		14724	1		+			
ANR	15474	PrimaryExpression	5		14724	0					
ANR	15475	MultiplicativeExpression	i * 8		14724	1		*			
ANR	15476	Identifier	i		14724	0					
ANR	15477	PrimaryExpression	8		14724	1					
ANR	15478	AdditiveExpression	block [ 1 + i * 8 ] + ( block [ 1 + i * 8 ] >> 1 )		14724	1		+			
ANR	15479	ArrayIndexing	block [ 1 + i * 8 ]		14724	0					
ANR	15480	Identifier	block		14724	0					
ANR	15481	AdditiveExpression	1 + i * 8		14724	1		+			
ANR	15482	PrimaryExpression	1		14724	0					
ANR	15483	MultiplicativeExpression	i * 8		14724	1		*			
ANR	15484	Identifier	i		14724	0					
ANR	15485	PrimaryExpression	8		14724	1					
ANR	15486	ShiftExpression	block [ 1 + i * 8 ] >> 1		14724	1		>>			
ANR	15487	ArrayIndexing	block [ 1 + i * 8 ]		14724	0					
ANR	15488	Identifier	block		14724	0					
ANR	15489	AdditiveExpression	1 + i * 8		14724	1		+			
ANR	15490	PrimaryExpression	1		14724	0					
ANR	15491	MultiplicativeExpression	i * 8		14724	1		*			
ANR	15492	Identifier	i		14724	0					
ANR	15493	PrimaryExpression	8		14724	1					
ANR	15494	PrimaryExpression	1		14724	1					
ANR	15495	IdentifierDeclStatement	const int b1 = ( a7 >> 2 ) + a1 ;	115:8:2175:2202	14724	12	True				
ANR	15496	IdentifierDecl	b1 = ( a7 >> 2 ) + a1		14724	0					
ANR	15497	IdentifierDeclType	const int		14724	0					
ANR	15498	Identifier	b1		14724	1					
ANR	15499	AssignmentExpression	b1 = ( a7 >> 2 ) + a1		14724	2		=			
ANR	15500	Identifier	b1		14724	0					
ANR	15501	AdditiveExpression	( a7 >> 2 ) + a1		14724	1		+			
ANR	15502	ShiftExpression	a7 >> 2		14724	0		>>			
ANR	15503	Identifier	a7		14724	0					
ANR	15504	PrimaryExpression	2		14724	1					
ANR	15505	Identifier	a1		14724	1					
ANR	15506	IdentifierDeclStatement	const int b3 = a3 + ( a5 >> 2 ) ;	117:8:2213:2241	14724	13	True				
ANR	15507	IdentifierDecl	b3 = a3 + ( a5 >> 2 )		14724	0					
ANR	15508	IdentifierDeclType	const int		14724	0					
ANR	15509	Identifier	b3		14724	1					
ANR	15510	AssignmentExpression	b3 = a3 + ( a5 >> 2 )		14724	2		=			
ANR	15511	Identifier	b3		14724	0					
ANR	15512	AdditiveExpression	a3 + ( a5 >> 2 )		14724	1		+			
ANR	15513	Identifier	a3		14724	0					
ANR	15514	ShiftExpression	a5 >> 2		14724	1		>>			
ANR	15515	Identifier	a5		14724	0					
ANR	15516	PrimaryExpression	2		14724	1					
ANR	15517	IdentifierDeclStatement	const int b5 = ( a3 >> 2 ) - a5 ;	119:8:2252:2279	14724	14	True				
ANR	15518	IdentifierDecl	b5 = ( a3 >> 2 ) - a5		14724	0					
ANR	15519	IdentifierDeclType	const int		14724	0					
ANR	15520	Identifier	b5		14724	1					
ANR	15521	AssignmentExpression	b5 = ( a3 >> 2 ) - a5		14724	2		=			
ANR	15522	Identifier	b5		14724	0					
ANR	15523	AdditiveExpression	( a3 >> 2 ) - a5		14724	1		-			
ANR	15524	ShiftExpression	a3 >> 2		14724	0		>>			
ANR	15525	Identifier	a3		14724	0					
ANR	15526	PrimaryExpression	2		14724	1					
ANR	15527	Identifier	a5		14724	1					
ANR	15528	IdentifierDeclStatement	const int b7 = a7 - ( a1 >> 2 ) ;	121:8:2290:2318	14724	15	True				
ANR	15529	IdentifierDecl	b7 = a7 - ( a1 >> 2 )		14724	0					
ANR	15530	IdentifierDeclType	const int		14724	0					
ANR	15531	Identifier	b7		14724	1					
ANR	15532	AssignmentExpression	b7 = a7 - ( a1 >> 2 )		14724	2		=			
ANR	15533	Identifier	b7		14724	0					
ANR	15534	AdditiveExpression	a7 - ( a1 >> 2 )		14724	1		-			
ANR	15535	Identifier	a7		14724	0					
ANR	15536	ShiftExpression	a1 >> 2		14724	1		>>			
ANR	15537	Identifier	a1		14724	0					
ANR	15538	PrimaryExpression	2		14724	1					
ANR	15539	ExpressionStatement	dst [ i + 0 * stride ] = CLIP ( dst [ i + 0 * stride ] + ( ( b0 + b7 ) >> 6 ) )	125:8:2331:2395	14724	16	True				
ANR	15540	AssignmentExpression	dst [ i + 0 * stride ] = CLIP ( dst [ i + 0 * stride ] + ( ( b0 + b7 ) >> 6 ) )		14724	0		=			
ANR	15541	ArrayIndexing	dst [ i + 0 * stride ]		14724	0					
ANR	15542	Identifier	dst		14724	0					
ANR	15543	AdditiveExpression	i + 0 * stride		14724	1		+			
ANR	15544	Identifier	i		14724	0					
ANR	15545	MultiplicativeExpression	0 * stride		14724	1		*			
ANR	15546	PrimaryExpression	0		14724	0					
ANR	15547	Identifier	stride		14724	1					
ANR	15548	CallExpression	CLIP ( dst [ i + 0 * stride ] + ( ( b0 + b7 ) >> 6 ) )		14724	1					
ANR	15549	Callee	CLIP		14724	0					
ANR	15550	Identifier	CLIP		14724	0					
ANR	15551	ArgumentList	dst [ i + 0 * stride ] + ( ( b0 + b7 ) >> 6 )		14724	1					
ANR	15552	Argument	dst [ i + 0 * stride ] + ( ( b0 + b7 ) >> 6 )		14724	0					
ANR	15553	AdditiveExpression	dst [ i + 0 * stride ] + ( ( b0 + b7 ) >> 6 )		14724	0		+			
ANR	15554	ArrayIndexing	dst [ i + 0 * stride ]		14724	0					
ANR	15555	Identifier	dst		14724	0					
ANR	15556	AdditiveExpression	i + 0 * stride		14724	1		+			
ANR	15557	Identifier	i		14724	0					
ANR	15558	MultiplicativeExpression	0 * stride		14724	1		*			
ANR	15559	PrimaryExpression	0		14724	0					
ANR	15560	Identifier	stride		14724	1					
ANR	15561	ShiftExpression	( b0 + b7 ) >> 6		14724	1		>>			
ANR	15562	AdditiveExpression	b0 + b7		14724	0		+			
ANR	15563	Identifier	b0		14724	0					
ANR	15564	Identifier	b7		14724	1					
ANR	15565	PrimaryExpression	6		14724	1					
ANR	15566	ExpressionStatement	dst [ i + 1 * stride ] = CLIP ( dst [ i + 1 * stride ] + ( ( b2 + b5 ) >> 6 ) )	127:8:2406:2470	14724	17	True				
ANR	15567	AssignmentExpression	dst [ i + 1 * stride ] = CLIP ( dst [ i + 1 * stride ] + ( ( b2 + b5 ) >> 6 ) )		14724	0		=			
ANR	15568	ArrayIndexing	dst [ i + 1 * stride ]		14724	0					
ANR	15569	Identifier	dst		14724	0					
ANR	15570	AdditiveExpression	i + 1 * stride		14724	1		+			
ANR	15571	Identifier	i		14724	0					
ANR	15572	MultiplicativeExpression	1 * stride		14724	1		*			
ANR	15573	PrimaryExpression	1		14724	0					
ANR	15574	Identifier	stride		14724	1					
ANR	15575	CallExpression	CLIP ( dst [ i + 1 * stride ] + ( ( b2 + b5 ) >> 6 ) )		14724	1					
ANR	15576	Callee	CLIP		14724	0					
ANR	15577	Identifier	CLIP		14724	0					
ANR	15578	ArgumentList	dst [ i + 1 * stride ] + ( ( b2 + b5 ) >> 6 )		14724	1					
ANR	15579	Argument	dst [ i + 1 * stride ] + ( ( b2 + b5 ) >> 6 )		14724	0					
ANR	15580	AdditiveExpression	dst [ i + 1 * stride ] + ( ( b2 + b5 ) >> 6 )		14724	0		+			
ANR	15581	ArrayIndexing	dst [ i + 1 * stride ]		14724	0					
ANR	15582	Identifier	dst		14724	0					
ANR	15583	AdditiveExpression	i + 1 * stride		14724	1		+			
ANR	15584	Identifier	i		14724	0					
ANR	15585	MultiplicativeExpression	1 * stride		14724	1		*			
ANR	15586	PrimaryExpression	1		14724	0					
ANR	15587	Identifier	stride		14724	1					
ANR	15588	ShiftExpression	( b2 + b5 ) >> 6		14724	1		>>			
ANR	15589	AdditiveExpression	b2 + b5		14724	0		+			
ANR	15590	Identifier	b2		14724	0					
ANR	15591	Identifier	b5		14724	1					
ANR	15592	PrimaryExpression	6		14724	1					
ANR	15593	ExpressionStatement	dst [ i + 2 * stride ] = CLIP ( dst [ i + 2 * stride ] + ( ( b4 + b3 ) >> 6 ) )	129:8:2481:2545	14724	18	True				
ANR	15594	AssignmentExpression	dst [ i + 2 * stride ] = CLIP ( dst [ i + 2 * stride ] + ( ( b4 + b3 ) >> 6 ) )		14724	0		=			
ANR	15595	ArrayIndexing	dst [ i + 2 * stride ]		14724	0					
ANR	15596	Identifier	dst		14724	0					
ANR	15597	AdditiveExpression	i + 2 * stride		14724	1		+			
ANR	15598	Identifier	i		14724	0					
ANR	15599	MultiplicativeExpression	2 * stride		14724	1		*			
ANR	15600	PrimaryExpression	2		14724	0					
ANR	15601	Identifier	stride		14724	1					
ANR	15602	CallExpression	CLIP ( dst [ i + 2 * stride ] + ( ( b4 + b3 ) >> 6 ) )		14724	1					
ANR	15603	Callee	CLIP		14724	0					
ANR	15604	Identifier	CLIP		14724	0					
ANR	15605	ArgumentList	dst [ i + 2 * stride ] + ( ( b4 + b3 ) >> 6 )		14724	1					
ANR	15606	Argument	dst [ i + 2 * stride ] + ( ( b4 + b3 ) >> 6 )		14724	0					
ANR	15607	AdditiveExpression	dst [ i + 2 * stride ] + ( ( b4 + b3 ) >> 6 )		14724	0		+			
ANR	15608	ArrayIndexing	dst [ i + 2 * stride ]		14724	0					
ANR	15609	Identifier	dst		14724	0					
ANR	15610	AdditiveExpression	i + 2 * stride		14724	1		+			
ANR	15611	Identifier	i		14724	0					
ANR	15612	MultiplicativeExpression	2 * stride		14724	1		*			
ANR	15613	PrimaryExpression	2		14724	0					
ANR	15614	Identifier	stride		14724	1					
ANR	15615	ShiftExpression	( b4 + b3 ) >> 6		14724	1		>>			
ANR	15616	AdditiveExpression	b4 + b3		14724	0		+			
ANR	15617	Identifier	b4		14724	0					
ANR	15618	Identifier	b3		14724	1					
ANR	15619	PrimaryExpression	6		14724	1					
ANR	15620	ExpressionStatement	dst [ i + 3 * stride ] = CLIP ( dst [ i + 3 * stride ] + ( ( b6 + b1 ) >> 6 ) )	131:8:2556:2620	14724	19	True				
ANR	15621	AssignmentExpression	dst [ i + 3 * stride ] = CLIP ( dst [ i + 3 * stride ] + ( ( b6 + b1 ) >> 6 ) )		14724	0		=			
ANR	15622	ArrayIndexing	dst [ i + 3 * stride ]		14724	0					
ANR	15623	Identifier	dst		14724	0					
ANR	15624	AdditiveExpression	i + 3 * stride		14724	1		+			
ANR	15625	Identifier	i		14724	0					
ANR	15626	MultiplicativeExpression	3 * stride		14724	1		*			
ANR	15627	PrimaryExpression	3		14724	0					
ANR	15628	Identifier	stride		14724	1					
ANR	15629	CallExpression	CLIP ( dst [ i + 3 * stride ] + ( ( b6 + b1 ) >> 6 ) )		14724	1					
ANR	15630	Callee	CLIP		14724	0					
ANR	15631	Identifier	CLIP		14724	0					
ANR	15632	ArgumentList	dst [ i + 3 * stride ] + ( ( b6 + b1 ) >> 6 )		14724	1					
ANR	15633	Argument	dst [ i + 3 * stride ] + ( ( b6 + b1 ) >> 6 )		14724	0					
ANR	15634	AdditiveExpression	dst [ i + 3 * stride ] + ( ( b6 + b1 ) >> 6 )		14724	0		+			
ANR	15635	ArrayIndexing	dst [ i + 3 * stride ]		14724	0					
ANR	15636	Identifier	dst		14724	0					
ANR	15637	AdditiveExpression	i + 3 * stride		14724	1		+			
ANR	15638	Identifier	i		14724	0					
ANR	15639	MultiplicativeExpression	3 * stride		14724	1		*			
ANR	15640	PrimaryExpression	3		14724	0					
ANR	15641	Identifier	stride		14724	1					
ANR	15642	ShiftExpression	( b6 + b1 ) >> 6		14724	1		>>			
ANR	15643	AdditiveExpression	b6 + b1		14724	0		+			
ANR	15644	Identifier	b6		14724	0					
ANR	15645	Identifier	b1		14724	1					
ANR	15646	PrimaryExpression	6		14724	1					
ANR	15647	ExpressionStatement	dst [ i + 4 * stride ] = CLIP ( dst [ i + 4 * stride ] + ( ( b6 - b1 ) >> 6 ) )	133:8:2631:2695	14724	20	True				
ANR	15648	AssignmentExpression	dst [ i + 4 * stride ] = CLIP ( dst [ i + 4 * stride ] + ( ( b6 - b1 ) >> 6 ) )		14724	0		=			
ANR	15649	ArrayIndexing	dst [ i + 4 * stride ]		14724	0					
ANR	15650	Identifier	dst		14724	0					
ANR	15651	AdditiveExpression	i + 4 * stride		14724	1		+			
ANR	15652	Identifier	i		14724	0					
ANR	15653	MultiplicativeExpression	4 * stride		14724	1		*			
ANR	15654	PrimaryExpression	4		14724	0					
ANR	15655	Identifier	stride		14724	1					
ANR	15656	CallExpression	CLIP ( dst [ i + 4 * stride ] + ( ( b6 - b1 ) >> 6 ) )		14724	1					
ANR	15657	Callee	CLIP		14724	0					
ANR	15658	Identifier	CLIP		14724	0					
ANR	15659	ArgumentList	dst [ i + 4 * stride ] + ( ( b6 - b1 ) >> 6 )		14724	1					
ANR	15660	Argument	dst [ i + 4 * stride ] + ( ( b6 - b1 ) >> 6 )		14724	0					
ANR	15661	AdditiveExpression	dst [ i + 4 * stride ] + ( ( b6 - b1 ) >> 6 )		14724	0		+			
ANR	15662	ArrayIndexing	dst [ i + 4 * stride ]		14724	0					
ANR	15663	Identifier	dst		14724	0					
ANR	15664	AdditiveExpression	i + 4 * stride		14724	1		+			
ANR	15665	Identifier	i		14724	0					
ANR	15666	MultiplicativeExpression	4 * stride		14724	1		*			
ANR	15667	PrimaryExpression	4		14724	0					
ANR	15668	Identifier	stride		14724	1					
ANR	15669	ShiftExpression	( b6 - b1 ) >> 6		14724	1		>>			
ANR	15670	AdditiveExpression	b6 - b1		14724	0		-			
ANR	15671	Identifier	b6		14724	0					
ANR	15672	Identifier	b1		14724	1					
ANR	15673	PrimaryExpression	6		14724	1					
ANR	15674	ExpressionStatement	dst [ i + 5 * stride ] = CLIP ( dst [ i + 5 * stride ] + ( ( b4 - b3 ) >> 6 ) )	135:8:2706:2770	14724	21	True				
ANR	15675	AssignmentExpression	dst [ i + 5 * stride ] = CLIP ( dst [ i + 5 * stride ] + ( ( b4 - b3 ) >> 6 ) )		14724	0		=			
ANR	15676	ArrayIndexing	dst [ i + 5 * stride ]		14724	0					
ANR	15677	Identifier	dst		14724	0					
ANR	15678	AdditiveExpression	i + 5 * stride		14724	1		+			
ANR	15679	Identifier	i		14724	0					
ANR	15680	MultiplicativeExpression	5 * stride		14724	1		*			
ANR	15681	PrimaryExpression	5		14724	0					
ANR	15682	Identifier	stride		14724	1					
ANR	15683	CallExpression	CLIP ( dst [ i + 5 * stride ] + ( ( b4 - b3 ) >> 6 ) )		14724	1					
ANR	15684	Callee	CLIP		14724	0					
ANR	15685	Identifier	CLIP		14724	0					
ANR	15686	ArgumentList	dst [ i + 5 * stride ] + ( ( b4 - b3 ) >> 6 )		14724	1					
ANR	15687	Argument	dst [ i + 5 * stride ] + ( ( b4 - b3 ) >> 6 )		14724	0					
ANR	15688	AdditiveExpression	dst [ i + 5 * stride ] + ( ( b4 - b3 ) >> 6 )		14724	0		+			
ANR	15689	ArrayIndexing	dst [ i + 5 * stride ]		14724	0					
ANR	15690	Identifier	dst		14724	0					
ANR	15691	AdditiveExpression	i + 5 * stride		14724	1		+			
ANR	15692	Identifier	i		14724	0					
ANR	15693	MultiplicativeExpression	5 * stride		14724	1		*			
ANR	15694	PrimaryExpression	5		14724	0					
ANR	15695	Identifier	stride		14724	1					
ANR	15696	ShiftExpression	( b4 - b3 ) >> 6		14724	1		>>			
ANR	15697	AdditiveExpression	b4 - b3		14724	0		-			
ANR	15698	Identifier	b4		14724	0					
ANR	15699	Identifier	b3		14724	1					
ANR	15700	PrimaryExpression	6		14724	1					
ANR	15701	ExpressionStatement	dst [ i + 6 * stride ] = CLIP ( dst [ i + 6 * stride ] + ( ( b2 - b5 ) >> 6 ) )	137:8:2781:2845	14724	22	True				
ANR	15702	AssignmentExpression	dst [ i + 6 * stride ] = CLIP ( dst [ i + 6 * stride ] + ( ( b2 - b5 ) >> 6 ) )		14724	0		=			
ANR	15703	ArrayIndexing	dst [ i + 6 * stride ]		14724	0					
ANR	15704	Identifier	dst		14724	0					
ANR	15705	AdditiveExpression	i + 6 * stride		14724	1		+			
ANR	15706	Identifier	i		14724	0					
ANR	15707	MultiplicativeExpression	6 * stride		14724	1		*			
ANR	15708	PrimaryExpression	6		14724	0					
ANR	15709	Identifier	stride		14724	1					
ANR	15710	CallExpression	CLIP ( dst [ i + 6 * stride ] + ( ( b2 - b5 ) >> 6 ) )		14724	1					
ANR	15711	Callee	CLIP		14724	0					
ANR	15712	Identifier	CLIP		14724	0					
ANR	15713	ArgumentList	dst [ i + 6 * stride ] + ( ( b2 - b5 ) >> 6 )		14724	1					
ANR	15714	Argument	dst [ i + 6 * stride ] + ( ( b2 - b5 ) >> 6 )		14724	0					
ANR	15715	AdditiveExpression	dst [ i + 6 * stride ] + ( ( b2 - b5 ) >> 6 )		14724	0		+			
ANR	15716	ArrayIndexing	dst [ i + 6 * stride ]		14724	0					
ANR	15717	Identifier	dst		14724	0					
ANR	15718	AdditiveExpression	i + 6 * stride		14724	1		+			
ANR	15719	Identifier	i		14724	0					
ANR	15720	MultiplicativeExpression	6 * stride		14724	1		*			
ANR	15721	PrimaryExpression	6		14724	0					
ANR	15722	Identifier	stride		14724	1					
ANR	15723	ShiftExpression	( b2 - b5 ) >> 6		14724	1		>>			
ANR	15724	AdditiveExpression	b2 - b5		14724	0		-			
ANR	15725	Identifier	b2		14724	0					
ANR	15726	Identifier	b5		14724	1					
ANR	15727	PrimaryExpression	6		14724	1					
ANR	15728	ExpressionStatement	dst [ i + 7 * stride ] = CLIP ( dst [ i + 7 * stride ] + ( ( b0 - b7 ) >> 6 ) )	139:8:2856:2920	14724	23	True				
ANR	15729	AssignmentExpression	dst [ i + 7 * stride ] = CLIP ( dst [ i + 7 * stride ] + ( ( b0 - b7 ) >> 6 ) )		14724	0		=			
ANR	15730	ArrayIndexing	dst [ i + 7 * stride ]		14724	0					
ANR	15731	Identifier	dst		14724	0					
ANR	15732	AdditiveExpression	i + 7 * stride		14724	1		+			
ANR	15733	Identifier	i		14724	0					
ANR	15734	MultiplicativeExpression	7 * stride		14724	1		*			
ANR	15735	PrimaryExpression	7		14724	0					
ANR	15736	Identifier	stride		14724	1					
ANR	15737	CallExpression	CLIP ( dst [ i + 7 * stride ] + ( ( b0 - b7 ) >> 6 ) )		14724	1					
ANR	15738	Callee	CLIP		14724	0					
ANR	15739	Identifier	CLIP		14724	0					
ANR	15740	ArgumentList	dst [ i + 7 * stride ] + ( ( b0 - b7 ) >> 6 )		14724	1					
ANR	15741	Argument	dst [ i + 7 * stride ] + ( ( b0 - b7 ) >> 6 )		14724	0					
ANR	15742	AdditiveExpression	dst [ i + 7 * stride ] + ( ( b0 - b7 ) >> 6 )		14724	0		+			
ANR	15743	ArrayIndexing	dst [ i + 7 * stride ]		14724	0					
ANR	15744	Identifier	dst		14724	0					
ANR	15745	AdditiveExpression	i + 7 * stride		14724	1		+			
ANR	15746	Identifier	i		14724	0					
ANR	15747	MultiplicativeExpression	7 * stride		14724	1		*			
ANR	15748	PrimaryExpression	7		14724	0					
ANR	15749	Identifier	stride		14724	1					
ANR	15750	ShiftExpression	( b0 - b7 ) >> 6		14724	1		>>			
ANR	15751	AdditiveExpression	b0 - b7		14724	0		-			
ANR	15752	Identifier	b0		14724	0					
ANR	15753	Identifier	b7		14724	1					
ANR	15754	PrimaryExpression	6		14724	1					
ANR	15755	ReturnType	void FUNCC		14724	1					
ANR	15756	Identifier	( ff_h264_idct8_add )		14724	2					
ANR	15757	Identifier	ff_h264_idct8_add		14724	3					
ANR	15758	ParameterList	"uint8_t * _dst , DCTELEM * _block , int stride"		14724	4					
ANR	15759	Parameter	uint8_t * _dst	1:30:30:42	14724	0	True				
ANR	15760	ParameterType	uint8_t *		14724	0					
ANR	15761	Identifier	_dst		14724	1					
ANR	15762	Parameter	DCTELEM * _block	1:45:45:59	14724	1	True				
ANR	15763	ParameterType	DCTELEM *		14724	0					
ANR	15764	Identifier	_block		14724	1					
ANR	15765	Parameter	int stride	1:62:62:71	14724	2	True				
ANR	15766	ParameterType	int		14724	0					
ANR	15767	Identifier	stride		14724	1					
ANR	15768	CFGEntryNode	ENTRY		14724		True				
ANR	15769	CFGExitNode	EXIT		14724		True				
ANR	15770	Symbol	* stride		14724						
ANR	15771	Symbol	dst		14724						
ANR	15772	Symbol	stride		14724						
ANR	15773	Symbol	b0		14724						
ANR	15774	Symbol	b1		14724						
ANR	15775	Symbol	CLIP		14724						
ANR	15776	Symbol	b2		14724						
ANR	15777	Symbol	* dst		14724						
ANR	15778	Symbol	b3		14724						
ANR	15779	Symbol	b4		14724						
ANR	15780	Symbol	b5		14724						
ANR	15781	Symbol	b6		14724						
ANR	15782	Symbol	b7		14724						
ANR	15783	Symbol	block		14724						
ANR	15784	Symbol	i		14724						
ANR	15785	Symbol	_dst		14724						
ANR	15786	Symbol	* block		14724						
ANR	15787	Symbol	a0		14724						
ANR	15788	Symbol	a1		14724						
ANR	15789	Symbol	a2		14724						
ANR	15790	Symbol	a3		14724						
ANR	15791	Symbol	* i		14724						
ANR	15792	Symbol	a4		14724						
ANR	15793	Symbol	a5		14724						
ANR	15794	Symbol	a6		14724						
ANR	15795	Symbol	a7		14724						
ANR	15796	Symbol	_block		14724						
