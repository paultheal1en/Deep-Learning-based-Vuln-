command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8867079	File	/home/p4ultr4n/workplace/ReVeal/raw_code/vc1_i_pred_dc_0.c								
ANR	8867080	Function	vc1_i_pred_dc	1:0:0:1420							
ANR	8867081	FunctionDef	"vc1_i_pred_dc (MpegEncContext * s , int overlap , int pq , int n , int16_t * * dc_val_ptr , int * dir_ptr)"		8867080	0					
ANR	8867082	CompoundStatement		5:0:147:1420	8867080	0					
ANR	8867083	IdentifierDeclStatement	"int a , b , c , wrap , pred , scale ;"	7:4:154:184	8867080	0	True				
ANR	8867084	IdentifierDecl	a		8867080	0					
ANR	8867085	IdentifierDeclType	int		8867080	0					
ANR	8867086	Identifier	a		8867080	1					
ANR	8867087	IdentifierDecl	b		8867080	1					
ANR	8867088	IdentifierDeclType	int		8867080	0					
ANR	8867089	Identifier	b		8867080	1					
ANR	8867090	IdentifierDecl	c		8867080	2					
ANR	8867091	IdentifierDeclType	int		8867080	0					
ANR	8867092	Identifier	c		8867080	1					
ANR	8867093	IdentifierDecl	wrap		8867080	3					
ANR	8867094	IdentifierDeclType	int		8867080	0					
ANR	8867095	Identifier	wrap		8867080	1					
ANR	8867096	IdentifierDecl	pred		8867080	4					
ANR	8867097	IdentifierDeclType	int		8867080	0					
ANR	8867098	Identifier	pred		8867080	1					
ANR	8867099	IdentifierDecl	scale		8867080	5					
ANR	8867100	IdentifierDeclType	int		8867080	0					
ANR	8867101	Identifier	scale		8867080	1					
ANR	8867102	IdentifierDeclStatement	int16_t * dc_val ;	9:4:191:206	8867080	1	True				
ANR	8867103	IdentifierDecl	* dc_val		8867080	0					
ANR	8867104	IdentifierDeclType	int16_t *		8867080	0					
ANR	8867105	Identifier	dc_val		8867080	1					
ANR	8867106	Statement	static	11:4:213:218	8867080	2	True				
ANR	8867107	IdentifierDeclStatement	"const uint16_t dcpred [ 32 ] = { - 1 , 1024 , 512 , 341 , 256 , 205 , 171 , 146 , 128 , 114 , 102 , 93 , 85 , 79 , 73 , 68 , 64 , 60 , 57 , 54 , 51 , 49 , 47 , 45 , 43 , 41 , 39 , 38 , 37 , 35 , 34 , 33 } ;"	11:11:220:477	8867080	3	True				
ANR	8867108	IdentifierDecl	"dcpred [ 32 ] = { - 1 , 1024 , 512 , 341 , 256 , 205 , 171 , 146 , 128 , 114 , 102 , 93 , 85 , 79 , 73 , 68 , 64 , 60 , 57 , 54 , 51 , 49 , 47 , 45 , 43 , 41 , 39 , 38 , 37 , 35 , 34 , 33 }"		8867080	0					
ANR	8867109	IdentifierDeclType	const uint16_t [ 32 ]		8867080	0					
ANR	8867110	Identifier	dcpred		8867080	1					
ANR	8867111	PrimaryExpression	32		8867080	2					
ANR	8867112	AssignmentExpression	"dcpred [ 32 ] = { - 1 , 1024 , 512 , 341 , 256 , 205 , 171 , 146 , 128 , 114 , 102 , 93 , 85 , 79 , 73 , 68 , 64 , 60 , 57 , 54 , 51 , 49 , 47 , 45 , 43 , 41 , 39 , 38 , 37 , 35 , 34 , 33 }"		8867080	3		=			
ANR	8867113	Identifier	dcpred		8867080	0					
ANR	8867114	InitializerList	- 1		8867080	1					
ANR	8867115	UnaryOperationExpression	- 1		8867080	0					
ANR	8867116	UnaryOperator	-		8867080	0					
ANR	8867117	PrimaryExpression	1		8867080	1					
ANR	8867118	PrimaryExpression	1024		8867080	1					
ANR	8867119	PrimaryExpression	512		8867080	2					
ANR	8867120	PrimaryExpression	341		8867080	3					
ANR	8867121	PrimaryExpression	256		8867080	4					
ANR	8867122	PrimaryExpression	205		8867080	5					
ANR	8867123	PrimaryExpression	171		8867080	6					
ANR	8867124	PrimaryExpression	146		8867080	7					
ANR	8867125	PrimaryExpression	128		8867080	8					
ANR	8867126	PrimaryExpression	114		8867080	9					
ANR	8867127	PrimaryExpression	102		8867080	10					
ANR	8867128	PrimaryExpression	93		8867080	11					
ANR	8867129	PrimaryExpression	85		8867080	12					
ANR	8867130	PrimaryExpression	79		8867080	13					
ANR	8867131	PrimaryExpression	73		8867080	14					
ANR	8867132	PrimaryExpression	68		8867080	15					
ANR	8867133	PrimaryExpression	64		8867080	16					
ANR	8867134	PrimaryExpression	60		8867080	17					
ANR	8867135	PrimaryExpression	57		8867080	18					
ANR	8867136	PrimaryExpression	54		8867080	19					
ANR	8867137	PrimaryExpression	51		8867080	20					
ANR	8867138	PrimaryExpression	49		8867080	21					
ANR	8867139	PrimaryExpression	47		8867080	22					
ANR	8867140	PrimaryExpression	45		8867080	23					
ANR	8867141	PrimaryExpression	43		8867080	24					
ANR	8867142	PrimaryExpression	41		8867080	25					
ANR	8867143	PrimaryExpression	39		8867080	26					
ANR	8867144	PrimaryExpression	38		8867080	27					
ANR	8867145	PrimaryExpression	37		8867080	28					
ANR	8867146	PrimaryExpression	35		8867080	29					
ANR	8867147	PrimaryExpression	34		8867080	30					
ANR	8867148	PrimaryExpression	33		8867080	31					
ANR	8867149	IfStatement	if ( n < 4 )		8867080	4					
ANR	8867150	Condition	n < 4	27:8:558:562	8867080	0	True				
ANR	8867151	RelationalExpression	n < 4		8867080	0		<			
ANR	8867152	Identifier	n		8867080	0					
ANR	8867153	PrimaryExpression	4		8867080	1					
ANR	8867154	ExpressionStatement	scale = s -> y_dc_scale	27:19:569:590	8867080	1	True				
ANR	8867155	AssignmentExpression	scale = s -> y_dc_scale		8867080	0		=			
ANR	8867156	Identifier	scale		8867080	0					
ANR	8867157	PtrMemberAccess	s -> y_dc_scale		8867080	1					
ANR	8867158	Identifier	s		8867080	0					
ANR	8867159	Identifier	y_dc_scale		8867080	1					
ANR	8867160	ElseStatement	else		8867080	0					
ANR	8867161	ExpressionStatement	scale = s -> c_dc_scale	29:19:612:633	8867080	0	True				
ANR	8867162	AssignmentExpression	scale = s -> c_dc_scale		8867080	0		=			
ANR	8867163	Identifier	scale		8867080	0					
ANR	8867164	PtrMemberAccess	s -> c_dc_scale		8867080	1					
ANR	8867165	Identifier	s		8867080	0					
ANR	8867166	Identifier	c_dc_scale		8867080	1					
ANR	8867167	ExpressionStatement	wrap = s -> block_wrap [ n ]	33:4:642:665	8867080	5	True				
ANR	8867168	AssignmentExpression	wrap = s -> block_wrap [ n ]		8867080	0		=			
ANR	8867169	Identifier	wrap		8867080	0					
ANR	8867170	ArrayIndexing	s -> block_wrap [ n ]		8867080	1					
ANR	8867171	PtrMemberAccess	s -> block_wrap		8867080	0					
ANR	8867172	Identifier	s		8867080	0					
ANR	8867173	Identifier	block_wrap		8867080	1					
ANR	8867174	Identifier	n		8867080	1					
ANR	8867175	ExpressionStatement	dc_val = s -> dc_val [ 0 ] + s -> block_index [ n ]	35:4:672:712	8867080	6	True				
ANR	8867176	AssignmentExpression	dc_val = s -> dc_val [ 0 ] + s -> block_index [ n ]		8867080	0		=			
ANR	8867177	Identifier	dc_val		8867080	0					
ANR	8867178	AdditiveExpression	s -> dc_val [ 0 ] + s -> block_index [ n ]		8867080	1		+			
ANR	8867179	ArrayIndexing	s -> dc_val [ 0 ]		8867080	0					
ANR	8867180	PtrMemberAccess	s -> dc_val		8867080	0					
ANR	8867181	Identifier	s		8867080	0					
ANR	8867182	Identifier	dc_val		8867080	1					
ANR	8867183	PrimaryExpression	0		8867080	1					
ANR	8867184	ArrayIndexing	s -> block_index [ n ]		8867080	1					
ANR	8867185	PtrMemberAccess	s -> block_index		8867080	0					
ANR	8867186	Identifier	s		8867080	0					
ANR	8867187	Identifier	block_index		8867080	1					
ANR	8867188	Identifier	n		8867080	1					
ANR	8867189	ExpressionStatement	c = dc_val [ - 1 ]	45:4:754:770	8867080	7	True				
ANR	8867190	AssignmentExpression	c = dc_val [ - 1 ]		8867080	0		=			
ANR	8867191	Identifier	c		8867080	0					
ANR	8867192	ArrayIndexing	dc_val [ - 1 ]		8867080	1					
ANR	8867193	Identifier	dc_val		8867080	0					
ANR	8867194	UnaryOperationExpression	- 1		8867080	1					
ANR	8867195	UnaryOperator	-		8867080	0					
ANR	8867196	PrimaryExpression	1		8867080	1					
ANR	8867197	ExpressionStatement	b = dc_val [ - 1 - wrap ]	47:4:777:800	8867080	8	True				
ANR	8867198	AssignmentExpression	b = dc_val [ - 1 - wrap ]		8867080	0		=			
ANR	8867199	Identifier	b		8867080	0					
ANR	8867200	ArrayIndexing	dc_val [ - 1 - wrap ]		8867080	1					
ANR	8867201	Identifier	dc_val		8867080	0					
ANR	8867202	AdditiveExpression	- 1 - wrap		8867080	1		-			
ANR	8867203	UnaryOperationExpression	- 1		8867080	0					
ANR	8867204	UnaryOperator	-		8867080	0					
ANR	8867205	PrimaryExpression	1		8867080	1					
ANR	8867206	Identifier	wrap		8867080	1					
ANR	8867207	ExpressionStatement	a = dc_val [ - wrap ]	49:4:807:826	8867080	9	True				
ANR	8867208	AssignmentExpression	a = dc_val [ - wrap ]		8867080	0		=			
ANR	8867209	Identifier	a		8867080	0					
ANR	8867210	ArrayIndexing	dc_val [ - wrap ]		8867080	1					
ANR	8867211	Identifier	dc_val		8867080	0					
ANR	8867212	UnaryOperationExpression	- wrap		8867080	1					
ANR	8867213	UnaryOperator	-		8867080	0					
ANR	8867214	Identifier	wrap		8867080	1					
ANR	8867215	IfStatement	if ( pq < 9 || ! overlap )		8867080	10					
ANR	8867216	Condition	pq < 9 || ! overlap	53:8:839:856	8867080	0	True				
ANR	8867217	OrExpression	pq < 9 || ! overlap		8867080	0		||			
ANR	8867218	RelationalExpression	pq < 9		8867080	0		<			
ANR	8867219	Identifier	pq		8867080	0					
ANR	8867220	PrimaryExpression	9		8867080	1					
ANR	8867221	UnaryOperationExpression	! overlap		8867080	1					
ANR	8867222	UnaryOperator	!		8867080	0					
ANR	8867223	Identifier	overlap		8867080	1					
ANR	8867224	CompoundStatement		51:4:716:716	8867080	1					
ANR	8867225	IfStatement	if ( ! s -> mb_y && ( n != 2 && n != 3 ) )		8867080	0					
ANR	8867226	Condition	! s -> mb_y && ( n != 2 && n != 3 )	59:12:911:936	8867080	0	True				
ANR	8867227	AndExpression	! s -> mb_y && ( n != 2 && n != 3 )		8867080	0		&&			
ANR	8867228	UnaryOperationExpression	! s -> mb_y		8867080	0					
ANR	8867229	UnaryOperator	!		8867080	0					
ANR	8867230	PtrMemberAccess	s -> mb_y		8867080	1					
ANR	8867231	Identifier	s		8867080	0					
ANR	8867232	Identifier	mb_y		8867080	1					
ANR	8867233	AndExpression	n != 2 && n != 3		8867080	1		&&			
ANR	8867234	EqualityExpression	n != 2		8867080	0		!=			
ANR	8867235	Identifier	n		8867080	0					
ANR	8867236	PrimaryExpression	2		8867080	1					
ANR	8867237	EqualityExpression	n != 3		8867080	1		!=			
ANR	8867238	Identifier	n		8867080	0					
ANR	8867239	PrimaryExpression	3		8867080	1					
ANR	8867240	ExpressionStatement	b = a = dcpred [ scale ]	59:40:939:956	8867080	1	True				
ANR	8867241	AssignmentExpression	b = a = dcpred [ scale ]		8867080	0		=			
ANR	8867242	Identifier	b		8867080	0					
ANR	8867243	AssignmentExpression	a = dcpred [ scale ]		8867080	1		=			
ANR	8867244	Identifier	a		8867080	0					
ANR	8867245	ArrayIndexing	dcpred [ scale ]		8867080	1					
ANR	8867246	Identifier	dcpred		8867080	0					
ANR	8867247	Identifier	scale		8867080	1					
ANR	8867248	IfStatement	if ( s -> mb_x == 0 && ( n != 1 && n != 3 ) )		8867080	1					
ANR	8867249	Condition	s -> mb_x == 0 && ( n != 1 && n != 3 )	61:12:971:1000	8867080	0	True				
ANR	8867250	AndExpression	s -> mb_x == 0 && ( n != 1 && n != 3 )		8867080	0		&&			
ANR	8867251	EqualityExpression	s -> mb_x == 0		8867080	0		==			
ANR	8867252	PtrMemberAccess	s -> mb_x		8867080	0					
ANR	8867253	Identifier	s		8867080	0					
ANR	8867254	Identifier	mb_x		8867080	1					
ANR	8867255	PrimaryExpression	0		8867080	1					
ANR	8867256	AndExpression	n != 1 && n != 3		8867080	1		&&			
ANR	8867257	EqualityExpression	n != 1		8867080	0		!=			
ANR	8867258	Identifier	n		8867080	0					
ANR	8867259	PrimaryExpression	1		8867080	1					
ANR	8867260	EqualityExpression	n != 3		8867080	1		!=			
ANR	8867261	Identifier	n		8867080	0					
ANR	8867262	PrimaryExpression	3		8867080	1					
ANR	8867263	ExpressionStatement	b = c = dcpred [ scale ]	61:44:1003:1020	8867080	1	True				
ANR	8867264	AssignmentExpression	b = c = dcpred [ scale ]		8867080	0		=			
ANR	8867265	Identifier	b		8867080	0					
ANR	8867266	AssignmentExpression	c = dcpred [ scale ]		8867080	1		=			
ANR	8867267	Identifier	c		8867080	0					
ANR	8867268	ArrayIndexing	dcpred [ scale ]		8867080	1					
ANR	8867269	Identifier	dcpred		8867080	0					
ANR	8867270	Identifier	scale		8867080	1					
ANR	8867271	ElseStatement	else		8867080	0					
ANR	8867272	CompoundStatement		63:4:896:896	8867080	0					
ANR	8867273	IfStatement	if ( ! s -> mb_y && ( n != 2 && n != 3 ) )		8867080	0					
ANR	8867274	Condition	! s -> mb_y && ( n != 2 && n != 3 )	71:12:1091:1116	8867080	0	True				
ANR	8867275	AndExpression	! s -> mb_y && ( n != 2 && n != 3 )		8867080	0		&&			
ANR	8867276	UnaryOperationExpression	! s -> mb_y		8867080	0					
ANR	8867277	UnaryOperator	!		8867080	0					
ANR	8867278	PtrMemberAccess	s -> mb_y		8867080	1					
ANR	8867279	Identifier	s		8867080	0					
ANR	8867280	Identifier	mb_y		8867080	1					
ANR	8867281	AndExpression	n != 2 && n != 3		8867080	1		&&			
ANR	8867282	EqualityExpression	n != 2		8867080	0		!=			
ANR	8867283	Identifier	n		8867080	0					
ANR	8867284	PrimaryExpression	2		8867080	1					
ANR	8867285	EqualityExpression	n != 3		8867080	1		!=			
ANR	8867286	Identifier	n		8867080	0					
ANR	8867287	PrimaryExpression	3		8867080	1					
ANR	8867288	ExpressionStatement	b = a = 0	71:40:1119:1124	8867080	1	True				
ANR	8867289	AssignmentExpression	b = a = 0		8867080	0		=			
ANR	8867290	Identifier	b		8867080	0					
ANR	8867291	AssignmentExpression	a = 0		8867080	1		=			
ANR	8867292	Identifier	a		8867080	0					
ANR	8867293	PrimaryExpression	0		8867080	1					
ANR	8867294	IfStatement	if ( s -> mb_x == 0 && ( n != 1 && n != 3 ) )		8867080	1					
ANR	8867295	Condition	s -> mb_x == 0 && ( n != 1 && n != 3 )	73:12:1139:1168	8867080	0	True				
ANR	8867296	AndExpression	s -> mb_x == 0 && ( n != 1 && n != 3 )		8867080	0		&&			
ANR	8867297	EqualityExpression	s -> mb_x == 0		8867080	0		==			
ANR	8867298	PtrMemberAccess	s -> mb_x		8867080	0					
ANR	8867299	Identifier	s		8867080	0					
ANR	8867300	Identifier	mb_x		8867080	1					
ANR	8867301	PrimaryExpression	0		8867080	1					
ANR	8867302	AndExpression	n != 1 && n != 3		8867080	1		&&			
ANR	8867303	EqualityExpression	n != 1		8867080	0		!=			
ANR	8867304	Identifier	n		8867080	0					
ANR	8867305	PrimaryExpression	1		8867080	1					
ANR	8867306	EqualityExpression	n != 3		8867080	1		!=			
ANR	8867307	Identifier	n		8867080	0					
ANR	8867308	PrimaryExpression	3		8867080	1					
ANR	8867309	ExpressionStatement	b = c = 0	73:44:1171:1176	8867080	1	True				
ANR	8867310	AssignmentExpression	b = c = 0		8867080	0		=			
ANR	8867311	Identifier	b		8867080	0					
ANR	8867312	AssignmentExpression	c = 0		8867080	1		=			
ANR	8867313	Identifier	c		8867080	0					
ANR	8867314	PrimaryExpression	0		8867080	1					
ANR	8867315	IfStatement	if ( abs ( a - b ) <= abs ( b - c ) )		8867080	11					
ANR	8867316	Condition	abs ( a - b ) <= abs ( b - c )	79:8:1196:1219	8867080	0	True				
ANR	8867317	RelationalExpression	abs ( a - b ) <= abs ( b - c )		8867080	0		<=			
ANR	8867318	CallExpression	abs ( a - b )		8867080	0					
ANR	8867319	Callee	abs		8867080	0					
ANR	8867320	Identifier	abs		8867080	0					
ANR	8867321	ArgumentList	a - b		8867080	1					
ANR	8867322	Argument	a - b		8867080	0					
ANR	8867323	AdditiveExpression	a - b		8867080	0		-			
ANR	8867324	Identifier	a		8867080	0					
ANR	8867325	Identifier	b		8867080	1					
ANR	8867326	CallExpression	abs ( b - c )		8867080	1					
ANR	8867327	Callee	abs		8867080	0					
ANR	8867328	Identifier	abs		8867080	0					
ANR	8867329	ArgumentList	b - c		8867080	1					
ANR	8867330	Argument	b - c		8867080	0					
ANR	8867331	AdditiveExpression	b - c		8867080	0		-			
ANR	8867332	Identifier	b		8867080	0					
ANR	8867333	Identifier	c		8867080	1					
ANR	8867334	CompoundStatement		75:34:1074:1074	8867080	1					
ANR	8867335	ExpressionStatement	pred = c	81:8:1233:1241	8867080	0	True				
ANR	8867336	AssignmentExpression	pred = c		8867080	0		=			
ANR	8867337	Identifier	pred		8867080	0					
ANR	8867338	Identifier	c		8867080	1					
ANR	8867339	ExpressionStatement	* dir_ptr = 1	83:8:1252:1264	8867080	1	True				
ANR	8867340	AssignmentExpression	* dir_ptr = 1		8867080	0		=			
ANR	8867341	UnaryOperationExpression	* dir_ptr		8867080	0					
ANR	8867342	UnaryOperator	*		8867080	0					
ANR	8867343	Identifier	dir_ptr		8867080	1					
ANR	8867344	PrimaryExpression	1		8867080	1					
ANR	8867345	ElseStatement	else		8867080	0					
ANR	8867346	CompoundStatement		81:11:1136:1136	8867080	0					
ANR	8867347	ExpressionStatement	pred = a	87:8:1295:1303	8867080	0	True				
ANR	8867348	AssignmentExpression	pred = a		8867080	0		=			
ANR	8867349	Identifier	pred		8867080	0					
ANR	8867350	Identifier	a		8867080	1					
ANR	8867351	ExpressionStatement	* dir_ptr = 0	89:8:1314:1326	8867080	1	True				
ANR	8867352	AssignmentExpression	* dir_ptr = 0		8867080	0		=			
ANR	8867353	UnaryOperationExpression	* dir_ptr		8867080	0					
ANR	8867354	UnaryOperator	*		8867080	0					
ANR	8867355	Identifier	dir_ptr		8867080	1					
ANR	8867356	PrimaryExpression	0		8867080	1					
ANR	8867357	ExpressionStatement	* dc_val_ptr = & dc_val [ 0 ]	97:4:1375:1399	8867080	12	True				
ANR	8867358	AssignmentExpression	* dc_val_ptr = & dc_val [ 0 ]		8867080	0		=			
ANR	8867359	UnaryOperationExpression	* dc_val_ptr		8867080	0					
ANR	8867360	UnaryOperator	*		8867080	0					
ANR	8867361	Identifier	dc_val_ptr		8867080	1					
ANR	8867362	UnaryOperationExpression	& dc_val [ 0 ]		8867080	1					
ANR	8867363	UnaryOperator	&		8867080	0					
ANR	8867364	ArrayIndexing	dc_val [ 0 ]		8867080	1					
ANR	8867365	Identifier	dc_val		8867080	0					
ANR	8867366	PrimaryExpression	0		8867080	1					
ANR	8867367	ReturnStatement	return pred ;	99:4:1406:1417	8867080	13	True				
ANR	8867368	Identifier	pred		8867080	0					
ANR	8867369	ReturnType	static inline int		8867080	1					
ANR	8867370	Identifier	vc1_i_pred_dc		8867080	2					
ANR	8867371	ParameterList	"MpegEncContext * s , int overlap , int pq , int n , int16_t * * dc_val_ptr , int * dir_ptr"		8867080	3					
ANR	8867372	Parameter	MpegEncContext * s	1:32:32:48	8867080	0	True				
ANR	8867373	ParameterType	MpegEncContext *		8867080	0					
ANR	8867374	Identifier	s		8867080	1					
ANR	8867375	Parameter	int overlap	1:51:51:61	8867080	1	True				
ANR	8867376	ParameterType	int		8867080	0					
ANR	8867377	Identifier	overlap		8867080	1					
ANR	8867378	Parameter	int pq	1:64:64:69	8867080	2	True				
ANR	8867379	ParameterType	int		8867080	0					
ANR	8867380	Identifier	pq		8867080	1					
ANR	8867381	Parameter	int n	1:72:72:76	8867080	3	True				
ANR	8867382	ParameterType	int		8867080	0					
ANR	8867383	Identifier	n		8867080	1					
ANR	8867384	Parameter	int16_t * * dc_val_ptr	3:30:110:129	8867080	4	True				
ANR	8867385	ParameterType	int16_t * *		8867080	0					
ANR	8867386	Identifier	dc_val_ptr		8867080	1					
ANR	8867387	Parameter	int * dir_ptr	3:52:132:143	8867080	5	True				
ANR	8867388	ParameterType	int *		8867080	0					
ANR	8867389	Identifier	dir_ptr		8867080	1					
ANR	8867390	CFGEntryNode	ENTRY		8867080		True				
ANR	8867391	CFGExitNode	EXIT		8867080		True				
ANR	8867392	Symbol	pq		8867080						
ANR	8867393	Symbol	s -> block_wrap		8867080						
ANR	8867394	Symbol	s -> block_index		8867080						
ANR	8867395	Symbol	s -> dc_val		8867080						
ANR	8867396	Symbol	scale		8867080						
ANR	8867397	Symbol	s -> c_dc_scale		8867080						
ANR	8867398	Symbol	* s -> block_wrap		8867080						
ANR	8867399	Symbol	* s -> block_index		8867080						
ANR	8867400	Symbol	* dcpred		8867080						
ANR	8867401	Symbol	pred		8867080						
ANR	8867402	Symbol	s -> y_dc_scale		8867080						
ANR	8867403	Symbol	* * s		8867080						
ANR	8867404	Symbol	a		8867080						
ANR	8867405	Symbol	b		8867080						
ANR	8867406	Symbol	c		8867080						
ANR	8867407	Symbol	dc_val		8867080						
ANR	8867408	Symbol	* wrap		8867080						
ANR	8867409	Symbol	* dir_ptr		8867080						
ANR	8867410	Symbol	dc_val_ptr		8867080						
ANR	8867411	Symbol	* dc_val		8867080						
ANR	8867412	Symbol	dcpred		8867080						
ANR	8867413	Symbol	n		8867080						
ANR	8867414	Symbol	s -> mb_x		8867080						
ANR	8867415	Symbol	s -> mb_y		8867080						
ANR	8867416	Symbol	* dc_val_ptr		8867080						
ANR	8867417	Symbol	s		8867080						
ANR	8867418	Symbol	overlap		8867080						
ANR	8867419	Symbol	dir_ptr		8867080						
ANR	8867420	Symbol	abs		8867080						
ANR	8867421	Symbol	* s -> dc_val		8867080						
ANR	8867422	Symbol	* scale		8867080						
ANR	8867423	Symbol	* n		8867080						
ANR	8867424	Symbol	wrap		8867080						
ANR	8867425	Symbol	* s		8867080						
