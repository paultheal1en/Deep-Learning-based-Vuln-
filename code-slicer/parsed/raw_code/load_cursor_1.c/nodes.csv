command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5229695	File	/home/p4ultr4n/workplace/ReVeal/raw_code/load_cursor_1.c								
ANR	5229696	Function	load_cursor	1:0:0:1071							
ANR	5229697	FunctionDef	"load_cursor (VmncContext * c , const uint8_t * src)"		5229696	0					
ANR	5229698	CompoundStatement		3:0:61:1071	5229696	0					
ANR	5229699	IdentifierDeclStatement	"int i , j , p ;"	5:4:68:79	5229696	0	True				
ANR	5229700	IdentifierDecl	i		5229696	0					
ANR	5229701	IdentifierDeclType	int		5229696	0					
ANR	5229702	Identifier	i		5229696	1					
ANR	5229703	IdentifierDecl	j		5229696	1					
ANR	5229704	IdentifierDeclType	int		5229696	0					
ANR	5229705	Identifier	j		5229696	1					
ANR	5229706	IdentifierDecl	p		5229696	2					
ANR	5229707	IdentifierDeclType	int		5229696	0					
ANR	5229708	Identifier	p		5229696	1					
ANR	5229709	IdentifierDeclStatement	const int bpp = c -> bpp2 ;	7:4:86:111	5229696	1	True				
ANR	5229710	IdentifierDecl	bpp = c -> bpp2		5229696	0					
ANR	5229711	IdentifierDeclType	const int		5229696	0					
ANR	5229712	Identifier	bpp		5229696	1					
ANR	5229713	AssignmentExpression	bpp = c -> bpp2		5229696	2		=			
ANR	5229714	Identifier	bpp		5229696	0					
ANR	5229715	PtrMemberAccess	c -> bpp2		5229696	1					
ANR	5229716	Identifier	c		5229696	0					
ANR	5229717	Identifier	bpp2		5229696	1					
ANR	5229718	IdentifierDeclStatement	uint8_t * dst8 = c -> curbits ;	9:4:118:158	5229696	2	True				
ANR	5229719	IdentifierDecl	* dst8 = c -> curbits		5229696	0					
ANR	5229720	IdentifierDeclType	uint8_t *		5229696	0					
ANR	5229721	Identifier	dst8		5229696	1					
ANR	5229722	AssignmentExpression	* dst8 = c -> curbits		5229696	2		=			
ANR	5229723	Identifier	dst8		5229696	0					
ANR	5229724	PtrMemberAccess	c -> curbits		5229696	1					
ANR	5229725	Identifier	c		5229696	0					
ANR	5229726	Identifier	curbits		5229696	1					
ANR	5229727	IdentifierDeclStatement	uint16_t * dst16 = ( uint16_t * ) c -> curbits ;	11:4:165:205	5229696	3	True				
ANR	5229728	IdentifierDecl	* dst16 = ( uint16_t * ) c -> curbits		5229696	0					
ANR	5229729	IdentifierDeclType	uint16_t *		5229696	0					
ANR	5229730	Identifier	dst16		5229696	1					
ANR	5229731	AssignmentExpression	* dst16 = ( uint16_t * ) c -> curbits		5229696	2		=			
ANR	5229732	Identifier	dst16		5229696	0					
ANR	5229733	CastExpression	( uint16_t * ) c -> curbits		5229696	1					
ANR	5229734	CastTarget	uint16_t *		5229696	0					
ANR	5229735	PtrMemberAccess	c -> curbits		5229696	1					
ANR	5229736	Identifier	c		5229696	0					
ANR	5229737	Identifier	curbits		5229696	1					
ANR	5229738	IdentifierDeclStatement	uint32_t * dst32 = ( uint32_t * ) c -> curbits ;	13:4:212:252	5229696	4	True				
ANR	5229739	IdentifierDecl	* dst32 = ( uint32_t * ) c -> curbits		5229696	0					
ANR	5229740	IdentifierDeclType	uint32_t *		5229696	0					
ANR	5229741	Identifier	dst32		5229696	1					
ANR	5229742	AssignmentExpression	* dst32 = ( uint32_t * ) c -> curbits		5229696	2		=			
ANR	5229743	Identifier	dst32		5229696	0					
ANR	5229744	CastExpression	( uint32_t * ) c -> curbits		5229696	1					
ANR	5229745	CastTarget	uint32_t *		5229696	0					
ANR	5229746	PtrMemberAccess	c -> curbits		5229696	1					
ANR	5229747	Identifier	c		5229696	0					
ANR	5229748	Identifier	curbits		5229696	1					
ANR	5229749	ForStatement	for ( j = 0 ; j < c -> cur_h ; j ++ )		5229696	5					
ANR	5229750	ForInit	j = 0 ;	17:9:266:271	5229696	0	True				
ANR	5229751	AssignmentExpression	j = 0		5229696	0		=			
ANR	5229752	Identifier	j		5229696	0					
ANR	5229753	PrimaryExpression	0		5229696	1					
ANR	5229754	Condition	j < c -> cur_h	17:16:273:284	5229696	1	True				
ANR	5229755	RelationalExpression	j < c -> cur_h		5229696	0		<			
ANR	5229756	Identifier	j		5229696	0					
ANR	5229757	PtrMemberAccess	c -> cur_h		5229696	1					
ANR	5229758	Identifier	c		5229696	0					
ANR	5229759	Identifier	cur_h		5229696	1					
ANR	5229760	PostIncDecOperationExpression	j ++	17:30:287:289	5229696	2	True				
ANR	5229761	Identifier	j		5229696	0					
ANR	5229762	IncDec	++		5229696	1					
ANR	5229763	CompoundStatement		15:35:230:230	5229696	3					
ANR	5229764	ForStatement	for ( i = 0 ; i < c -> cur_w ; i ++ )		5229696	0					
ANR	5229765	ForInit	i = 0 ;	19:13:308:313	5229696	0	True				
ANR	5229766	AssignmentExpression	i = 0		5229696	0		=			
ANR	5229767	Identifier	i		5229696	0					
ANR	5229768	PrimaryExpression	0		5229696	1					
ANR	5229769	Condition	i < c -> cur_w	19:20:315:326	5229696	1	True				
ANR	5229770	RelationalExpression	i < c -> cur_w		5229696	0		<			
ANR	5229771	Identifier	i		5229696	0					
ANR	5229772	PtrMemberAccess	c -> cur_w		5229696	1					
ANR	5229773	Identifier	c		5229696	0					
ANR	5229774	Identifier	cur_w		5229696	1					
ANR	5229775	PostIncDecOperationExpression	i ++	19:34:329:331	5229696	2	True				
ANR	5229776	Identifier	i		5229696	0					
ANR	5229777	IncDec	++		5229696	1					
ANR	5229778	CompoundStatement		17:39:272:272	5229696	3					
ANR	5229779	ExpressionStatement	"p = vmnc_get_pixel ( src , bpp , c -> bigendian )"	21:12:349:391	5229696	0	True				
ANR	5229780	AssignmentExpression	"p = vmnc_get_pixel ( src , bpp , c -> bigendian )"		5229696	0		=			
ANR	5229781	Identifier	p		5229696	0					
ANR	5229782	CallExpression	"vmnc_get_pixel ( src , bpp , c -> bigendian )"		5229696	1					
ANR	5229783	Callee	vmnc_get_pixel		5229696	0					
ANR	5229784	Identifier	vmnc_get_pixel		5229696	0					
ANR	5229785	ArgumentList	src		5229696	1					
ANR	5229786	Argument	src		5229696	0					
ANR	5229787	Identifier	src		5229696	0					
ANR	5229788	Argument	bpp		5229696	1					
ANR	5229789	Identifier	bpp		5229696	0					
ANR	5229790	Argument	c -> bigendian		5229696	2					
ANR	5229791	PtrMemberAccess	c -> bigendian		5229696	0					
ANR	5229792	Identifier	c		5229696	0					
ANR	5229793	Identifier	bigendian		5229696	1					
ANR	5229794	ExpressionStatement	src += bpp	23:12:406:416	5229696	1	True				
ANR	5229795	AssignmentExpression	src += bpp		5229696	0		+=			
ANR	5229796	Identifier	src		5229696	0					
ANR	5229797	Identifier	bpp		5229696	1					
ANR	5229798	IfStatement	if ( bpp == 1 )		5229696	2					
ANR	5229799	Condition	bpp == 1	25:16:435:442	5229696	0	True				
ANR	5229800	EqualityExpression	bpp == 1		5229696	0		==			
ANR	5229801	Identifier	bpp		5229696	0					
ANR	5229802	PrimaryExpression	1		5229696	1					
ANR	5229803	ExpressionStatement	* dst8 ++ = p	27:16:462:473	5229696	1	True				
ANR	5229804	AssignmentExpression	* dst8 ++ = p		5229696	0		=			
ANR	5229805	UnaryOperationExpression	* dst8 ++		5229696	0					
ANR	5229806	UnaryOperator	*		5229696	0					
ANR	5229807	PostIncDecOperationExpression	dst8 ++		5229696	1					
ANR	5229808	Identifier	dst8		5229696	0					
ANR	5229809	IncDec	++		5229696	1					
ANR	5229810	Identifier	p		5229696	1					
ANR	5229811	IfStatement	if ( bpp == 2 )		5229696	3					
ANR	5229812	Condition	bpp == 2	29:16:492:499	5229696	0	True				
ANR	5229813	EqualityExpression	bpp == 2		5229696	0		==			
ANR	5229814	Identifier	bpp		5229696	0					
ANR	5229815	PrimaryExpression	2		5229696	1					
ANR	5229816	ExpressionStatement	* dst16 ++ = p	31:16:519:531	5229696	1	True				
ANR	5229817	AssignmentExpression	* dst16 ++ = p		5229696	0		=			
ANR	5229818	UnaryOperationExpression	* dst16 ++		5229696	0					
ANR	5229819	UnaryOperator	*		5229696	0					
ANR	5229820	PostIncDecOperationExpression	dst16 ++		5229696	1					
ANR	5229821	Identifier	dst16		5229696	0					
ANR	5229822	IncDec	++		5229696	1					
ANR	5229823	Identifier	p		5229696	1					
ANR	5229824	IfStatement	if ( bpp == 4 )		5229696	4					
ANR	5229825	Condition	bpp == 4	33:16:550:557	5229696	0	True				
ANR	5229826	EqualityExpression	bpp == 4		5229696	0		==			
ANR	5229827	Identifier	bpp		5229696	0					
ANR	5229828	PrimaryExpression	4		5229696	1					
ANR	5229829	ExpressionStatement	* dst32 ++ = p	35:16:577:589	5229696	1	True				
ANR	5229830	AssignmentExpression	* dst32 ++ = p		5229696	0		=			
ANR	5229831	UnaryOperationExpression	* dst32 ++		5229696	0					
ANR	5229832	UnaryOperator	*		5229696	0					
ANR	5229833	PostIncDecOperationExpression	dst32 ++		5229696	1					
ANR	5229834	Identifier	dst32		5229696	0					
ANR	5229835	IncDec	++		5229696	1					
ANR	5229836	Identifier	p		5229696	1					
ANR	5229837	ExpressionStatement	dst8 = c -> curmask	41:4:614:643	5229696	6	True				
ANR	5229838	AssignmentExpression	dst8 = c -> curmask		5229696	0		=			
ANR	5229839	Identifier	dst8		5229696	0					
ANR	5229840	PtrMemberAccess	c -> curmask		5229696	1					
ANR	5229841	Identifier	c		5229696	0					
ANR	5229842	Identifier	curmask		5229696	1					
ANR	5229843	ExpressionStatement	dst16 = ( uint16_t * ) c -> curmask	43:4:650:679	5229696	7	True				
ANR	5229844	AssignmentExpression	dst16 = ( uint16_t * ) c -> curmask		5229696	0		=			
ANR	5229845	Identifier	dst16		5229696	0					
ANR	5229846	CastExpression	( uint16_t * ) c -> curmask		5229696	1					
ANR	5229847	CastTarget	uint16_t *		5229696	0					
ANR	5229848	PtrMemberAccess	c -> curmask		5229696	1					
ANR	5229849	Identifier	c		5229696	0					
ANR	5229850	Identifier	curmask		5229696	1					
ANR	5229851	ExpressionStatement	dst32 = ( uint32_t * ) c -> curmask	45:4:686:715	5229696	8	True				
ANR	5229852	AssignmentExpression	dst32 = ( uint32_t * ) c -> curmask		5229696	0		=			
ANR	5229853	Identifier	dst32		5229696	0					
ANR	5229854	CastExpression	( uint32_t * ) c -> curmask		5229696	1					
ANR	5229855	CastTarget	uint32_t *		5229696	0					
ANR	5229856	PtrMemberAccess	c -> curmask		5229696	1					
ANR	5229857	Identifier	c		5229696	0					
ANR	5229858	Identifier	curmask		5229696	1					
ANR	5229859	ForStatement	for ( j = 0 ; j < c -> cur_h ; j ++ )		5229696	9					
ANR	5229860	ForInit	j = 0 ;	47:9:727:732	5229696	0	True				
ANR	5229861	AssignmentExpression	j = 0		5229696	0		=			
ANR	5229862	Identifier	j		5229696	0					
ANR	5229863	PrimaryExpression	0		5229696	1					
ANR	5229864	Condition	j < c -> cur_h	47:16:734:745	5229696	1	True				
ANR	5229865	RelationalExpression	j < c -> cur_h		5229696	0		<			
ANR	5229866	Identifier	j		5229696	0					
ANR	5229867	PtrMemberAccess	c -> cur_h		5229696	1					
ANR	5229868	Identifier	c		5229696	0					
ANR	5229869	Identifier	cur_h		5229696	1					
ANR	5229870	PostIncDecOperationExpression	j ++	47:30:748:750	5229696	2	True				
ANR	5229871	Identifier	j		5229696	0					
ANR	5229872	IncDec	++		5229696	1					
ANR	5229873	CompoundStatement		45:35:691:691	5229696	3					
ANR	5229874	ForStatement	for ( i = 0 ; i < c -> cur_w ; i ++ )		5229696	0					
ANR	5229875	ForInit	i = 0 ;	49:13:769:774	5229696	0	True				
ANR	5229876	AssignmentExpression	i = 0		5229696	0		=			
ANR	5229877	Identifier	i		5229696	0					
ANR	5229878	PrimaryExpression	0		5229696	1					
ANR	5229879	Condition	i < c -> cur_w	49:20:776:787	5229696	1	True				
ANR	5229880	RelationalExpression	i < c -> cur_w		5229696	0		<			
ANR	5229881	Identifier	i		5229696	0					
ANR	5229882	PtrMemberAccess	c -> cur_w		5229696	1					
ANR	5229883	Identifier	c		5229696	0					
ANR	5229884	Identifier	cur_w		5229696	1					
ANR	5229885	PostIncDecOperationExpression	i ++	49:34:790:792	5229696	2	True				
ANR	5229886	Identifier	i		5229696	0					
ANR	5229887	IncDec	++		5229696	1					
ANR	5229888	CompoundStatement		47:39:733:733	5229696	3					
ANR	5229889	ExpressionStatement	"p = vmnc_get_pixel ( src , bpp , c -> bigendian )"	51:12:810:852	5229696	0	True				
ANR	5229890	AssignmentExpression	"p = vmnc_get_pixel ( src , bpp , c -> bigendian )"		5229696	0		=			
ANR	5229891	Identifier	p		5229696	0					
ANR	5229892	CallExpression	"vmnc_get_pixel ( src , bpp , c -> bigendian )"		5229696	1					
ANR	5229893	Callee	vmnc_get_pixel		5229696	0					
ANR	5229894	Identifier	vmnc_get_pixel		5229696	0					
ANR	5229895	ArgumentList	src		5229696	1					
ANR	5229896	Argument	src		5229696	0					
ANR	5229897	Identifier	src		5229696	0					
ANR	5229898	Argument	bpp		5229696	1					
ANR	5229899	Identifier	bpp		5229696	0					
ANR	5229900	Argument	c -> bigendian		5229696	2					
ANR	5229901	PtrMemberAccess	c -> bigendian		5229696	0					
ANR	5229902	Identifier	c		5229696	0					
ANR	5229903	Identifier	bigendian		5229696	1					
ANR	5229904	ExpressionStatement	src += bpp	53:12:867:877	5229696	1	True				
ANR	5229905	AssignmentExpression	src += bpp		5229696	0		+=			
ANR	5229906	Identifier	src		5229696	0					
ANR	5229907	Identifier	bpp		5229696	1					
ANR	5229908	IfStatement	if ( bpp == 1 )		5229696	2					
ANR	5229909	Condition	bpp == 1	55:16:896:903	5229696	0	True				
ANR	5229910	EqualityExpression	bpp == 1		5229696	0		==			
ANR	5229911	Identifier	bpp		5229696	0					
ANR	5229912	PrimaryExpression	1		5229696	1					
ANR	5229913	ExpressionStatement	* dst8 ++ = p	57:16:923:934	5229696	1	True				
ANR	5229914	AssignmentExpression	* dst8 ++ = p		5229696	0		=			
ANR	5229915	UnaryOperationExpression	* dst8 ++		5229696	0					
ANR	5229916	UnaryOperator	*		5229696	0					
ANR	5229917	PostIncDecOperationExpression	dst8 ++		5229696	1					
ANR	5229918	Identifier	dst8		5229696	0					
ANR	5229919	IncDec	++		5229696	1					
ANR	5229920	Identifier	p		5229696	1					
ANR	5229921	IfStatement	if ( bpp == 2 )		5229696	3					
ANR	5229922	Condition	bpp == 2	59:16:953:960	5229696	0	True				
ANR	5229923	EqualityExpression	bpp == 2		5229696	0		==			
ANR	5229924	Identifier	bpp		5229696	0					
ANR	5229925	PrimaryExpression	2		5229696	1					
ANR	5229926	ExpressionStatement	* dst16 ++ = p	61:16:980:992	5229696	1	True				
ANR	5229927	AssignmentExpression	* dst16 ++ = p		5229696	0		=			
ANR	5229928	UnaryOperationExpression	* dst16 ++		5229696	0					
ANR	5229929	UnaryOperator	*		5229696	0					
ANR	5229930	PostIncDecOperationExpression	dst16 ++		5229696	1					
ANR	5229931	Identifier	dst16		5229696	0					
ANR	5229932	IncDec	++		5229696	1					
ANR	5229933	Identifier	p		5229696	1					
ANR	5229934	IfStatement	if ( bpp == 4 )		5229696	4					
ANR	5229935	Condition	bpp == 4	63:16:1011:1018	5229696	0	True				
ANR	5229936	EqualityExpression	bpp == 4		5229696	0		==			
ANR	5229937	Identifier	bpp		5229696	0					
ANR	5229938	PrimaryExpression	4		5229696	1					
ANR	5229939	ExpressionStatement	* dst32 ++ = p	65:16:1038:1050	5229696	1	True				
ANR	5229940	AssignmentExpression	* dst32 ++ = p		5229696	0		=			
ANR	5229941	UnaryOperationExpression	* dst32 ++		5229696	0					
ANR	5229942	UnaryOperator	*		5229696	0					
ANR	5229943	PostIncDecOperationExpression	dst32 ++		5229696	1					
ANR	5229944	Identifier	dst32		5229696	0					
ANR	5229945	IncDec	++		5229696	1					
ANR	5229946	Identifier	p		5229696	1					
ANR	5229947	ReturnType	static void		5229696	1					
ANR	5229948	Identifier	load_cursor		5229696	2					
ANR	5229949	ParameterList	"VmncContext * c , const uint8_t * src"		5229696	3					
ANR	5229950	Parameter	VmncContext * c	1:24:24:37	5229696	0	True				
ANR	5229951	ParameterType	VmncContext *		5229696	0					
ANR	5229952	Identifier	c		5229696	1					
ANR	5229953	Parameter	const uint8_t * src	1:40:40:57	5229696	1	True				
ANR	5229954	ParameterType	const uint8_t *		5229696	0					
ANR	5229955	Identifier	src		5229696	1					
ANR	5229956	CFGEntryNode	ENTRY		5229696		True				
ANR	5229957	CFGExitNode	EXIT		5229696		True				
ANR	5229958	Symbol	c		5229696						
ANR	5229959	Symbol	bpp		5229696						
ANR	5229960	Symbol	src		5229696						
ANR	5229961	Symbol	* dst32 ++		5229696						
ANR	5229962	Symbol	c -> cur_h		5229696						
ANR	5229963	Symbol	i		5229696						
ANR	5229964	Symbol	j		5229696						
ANR	5229965	Symbol	* c		5229696						
ANR	5229966	Symbol	c -> curmask		5229696						
ANR	5229967	Symbol	p		5229696						
ANR	5229968	Symbol	c -> bpp2		5229696						
ANR	5229969	Symbol	dst32		5229696						
ANR	5229970	Symbol	c -> cur_w		5229696						
ANR	5229971	Symbol	* dst16 ++		5229696						
ANR	5229972	Symbol	c -> curbits		5229696						
ANR	5229973	Symbol	dst8		5229696						
ANR	5229974	Symbol	vmnc_get_pixel		5229696						
ANR	5229975	Symbol	dst16		5229696						
ANR	5229976	Symbol	c -> bigendian		5229696						
ANR	5229977	Symbol	* dst8 ++		5229696						
