command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	7564595	File	/home/p4ultr4n/workplace/ReVeal/raw_code/s390_init_02_1.c								
ANR	7564596	Function	s390_init	1:0:0:3863							
ANR	7564597	FunctionDef	"s390_init (ram_addr_t ram_size , const char * boot_device , const char * kernel_filename , const char * kernel_cmdline , const char * initrd_filename , const char * cpu_model)"		7564596	0					
ANR	7564598	CompoundStatement		13:0:293:3863	7564596	0					
ANR	7564599	IdentifierDeclStatement	CPUState * env = NULL ;	15:4:300:320	7564596	0	True				
ANR	7564600	IdentifierDecl	* env = NULL		7564596	0					
ANR	7564601	IdentifierDeclType	CPUState *		7564596	0					
ANR	7564602	Identifier	env		7564596	1					
ANR	7564603	AssignmentExpression	* env = NULL		7564596	2		=			
ANR	7564604	Identifier	NULL		7564596	0					
ANR	7564605	Identifier	NULL		7564596	1					
ANR	7564606	IdentifierDeclStatement	ram_addr_t ram_addr ;	17:4:327:346	7564596	1	True				
ANR	7564607	IdentifierDecl	ram_addr		7564596	0					
ANR	7564608	IdentifierDeclType	ram_addr_t		7564596	0					
ANR	7564609	Identifier	ram_addr		7564596	1					
ANR	7564610	IdentifierDeclStatement	ram_addr_t kernel_size = 0 ;	19:4:353:379	7564596	2	True				
ANR	7564611	IdentifierDecl	kernel_size = 0		7564596	0					
ANR	7564612	IdentifierDeclType	ram_addr_t		7564596	0					
ANR	7564613	Identifier	kernel_size		7564596	1					
ANR	7564614	AssignmentExpression	kernel_size = 0		7564596	2		=			
ANR	7564615	Identifier	kernel_size		7564596	0					
ANR	7564616	PrimaryExpression	0		7564596	1					
ANR	7564617	IdentifierDeclStatement	ram_addr_t initrd_offset ;	21:4:386:410	7564596	3	True				
ANR	7564618	IdentifierDecl	initrd_offset		7564596	0					
ANR	7564619	IdentifierDeclType	ram_addr_t		7564596	0					
ANR	7564620	Identifier	initrd_offset		7564596	1					
ANR	7564621	IdentifierDeclStatement	ram_addr_t initrd_size = 0 ;	23:4:417:443	7564596	4	True				
ANR	7564622	IdentifierDecl	initrd_size = 0		7564596	0					
ANR	7564623	IdentifierDeclType	ram_addr_t		7564596	0					
ANR	7564624	Identifier	initrd_size		7564596	1					
ANR	7564625	AssignmentExpression	initrd_size = 0		7564596	2		=			
ANR	7564626	Identifier	initrd_size		7564596	0					
ANR	7564627	PrimaryExpression	0		7564596	1					
ANR	7564628	IdentifierDeclStatement	int i ;	25:4:450:455	7564596	5	True				
ANR	7564629	IdentifierDecl	i		7564596	0					
ANR	7564630	IdentifierDeclType	int		7564596	0					
ANR	7564631	Identifier	i		7564596	1					
ANR	7564632	IfStatement	if ( ! kvm_enabled ( ) )		7564596	6					
ANR	7564633	Condition	! kvm_enabled ( )	33:8:513:526	7564596	0	True				
ANR	7564634	UnaryOperationExpression	! kvm_enabled ( )		7564596	0					
ANR	7564635	UnaryOperator	!		7564596	0					
ANR	7564636	CallExpression	kvm_enabled ( )		7564596	1					
ANR	7564637	Callee	kvm_enabled		7564596	0					
ANR	7564638	Identifier	kvm_enabled		7564596	0					
ANR	7564639	ArgumentList			7564596	1					
ANR	7564640	CompoundStatement		21:24:235:235	7564596	1					
ANR	7564641	ExpressionStatement	"fprintf ( stderr , ""The S390 target only works with KVM enabled\\n"" )"	35:8:540:604	7564596	0	True				
ANR	7564642	CallExpression	"fprintf ( stderr , ""The S390 target only works with KVM enabled\\n"" )"		7564596	0					
ANR	7564643	Callee	fprintf		7564596	0					
ANR	7564644	Identifier	fprintf		7564596	0					
ANR	7564645	ArgumentList	stderr		7564596	1					
ANR	7564646	Argument	stderr		7564596	0					
ANR	7564647	Identifier	stderr		7564596	0					
ANR	7564648	Argument	"""The S390 target only works with KVM enabled\\n"""		7564596	1					
ANR	7564649	PrimaryExpression	"""The S390 target only works with KVM enabled\\n"""		7564596	0					
ANR	7564650	ExpressionStatement	exit ( 1 )	37:8:615:622	7564596	1	True				
ANR	7564651	CallExpression	exit ( 1 )		7564596	0					
ANR	7564652	Callee	exit		7564596	0					
ANR	7564653	Identifier	exit		7564596	0					
ANR	7564654	ArgumentList	1		7564596	1					
ANR	7564655	Argument	1		7564596	0					
ANR	7564656	PrimaryExpression	1		7564596	0					
ANR	7564657	ExpressionStatement	s390_bus = s390_virtio_bus_init ( & ram_size )	45:4:659:701	7564596	7	True				
ANR	7564658	AssignmentExpression	s390_bus = s390_virtio_bus_init ( & ram_size )		7564596	0		=			
ANR	7564659	Identifier	s390_bus		7564596	0					
ANR	7564660	CallExpression	s390_virtio_bus_init ( & ram_size )		7564596	1					
ANR	7564661	Callee	s390_virtio_bus_init		7564596	0					
ANR	7564662	Identifier	s390_virtio_bus_init		7564596	0					
ANR	7564663	ArgumentList	& ram_size		7564596	1					
ANR	7564664	Argument	& ram_size		7564596	0					
ANR	7564665	UnaryOperationExpression	& ram_size		7564596	0					
ANR	7564666	UnaryOperator	&		7564596	0					
ANR	7564667	Identifier	ram_size		7564596	1					
ANR	7564668	ExpressionStatement	"ram_addr = qemu_ram_alloc ( NULL , ""s390.ram"" , ram_size )"	51:4:734:787	7564596	8	True				
ANR	7564669	AssignmentExpression	"ram_addr = qemu_ram_alloc ( NULL , ""s390.ram"" , ram_size )"		7564596	0		=			
ANR	7564670	Identifier	ram_addr		7564596	0					
ANR	7564671	CallExpression	"qemu_ram_alloc ( NULL , ""s390.ram"" , ram_size )"		7564596	1					
ANR	7564672	Callee	qemu_ram_alloc		7564596	0					
ANR	7564673	Identifier	qemu_ram_alloc		7564596	0					
ANR	7564674	ArgumentList	NULL		7564596	1					
ANR	7564675	Argument	NULL		7564596	0					
ANR	7564676	Identifier	NULL		7564596	0					
ANR	7564677	Argument	"""s390.ram"""		7564596	1					
ANR	7564678	PrimaryExpression	"""s390.ram"""		7564596	0					
ANR	7564679	Argument	ram_size		7564596	2					
ANR	7564680	Identifier	ram_size		7564596	0					
ANR	7564681	ExpressionStatement	"cpu_register_physical_memory ( 0 , ram_size , ram_addr )"	53:4:794:845	7564596	9	True				
ANR	7564682	CallExpression	"cpu_register_physical_memory ( 0 , ram_size , ram_addr )"		7564596	0					
ANR	7564683	Callee	cpu_register_physical_memory		7564596	0					
ANR	7564684	Identifier	cpu_register_physical_memory		7564596	0					
ANR	7564685	ArgumentList	0		7564596	1					
ANR	7564686	Argument	0		7564596	0					
ANR	7564687	PrimaryExpression	0		7564596	0					
ANR	7564688	Argument	ram_size		7564596	1					
ANR	7564689	Identifier	ram_size		7564596	0					
ANR	7564690	Argument	ram_addr		7564596	2					
ANR	7564691	Identifier	ram_addr		7564596	0					
ANR	7564692	IfStatement	if ( cpu_model == NULL )		7564596	10					
ANR	7564693	Condition	cpu_model == NULL	59:8:879:895	7564596	0	True				
ANR	7564694	EqualityExpression	cpu_model == NULL		7564596	0		==			
ANR	7564695	Identifier	cpu_model		7564596	0					
ANR	7564696	Identifier	NULL		7564596	1					
ANR	7564697	CompoundStatement		47:27:604:604	7564596	1					
ANR	7564698	ExpressionStatement	"cpu_model = ""host"""	61:8:909:927	7564596	0	True				
ANR	7564699	AssignmentExpression	"cpu_model = ""host"""		7564596	0		=			
ANR	7564700	Identifier	cpu_model		7564596	0					
ANR	7564701	PrimaryExpression	"""host"""		7564596	1					
ANR	7564702	ExpressionStatement	ipi_states = qemu_malloc ( sizeof ( CPUState * ) * smp_cpus )	67:4:943:998	7564596	11	True				
ANR	7564703	AssignmentExpression	ipi_states = qemu_malloc ( sizeof ( CPUState * ) * smp_cpus )		7564596	0		=			
ANR	7564704	Identifier	ipi_states		7564596	0					
ANR	7564705	CallExpression	qemu_malloc ( sizeof ( CPUState * ) * smp_cpus )		7564596	1					
ANR	7564706	Callee	qemu_malloc		7564596	0					
ANR	7564707	Identifier	qemu_malloc		7564596	0					
ANR	7564708	ArgumentList	sizeof ( CPUState * ) * smp_cpus		7564596	1					
ANR	7564709	Argument	sizeof ( CPUState * ) * smp_cpus		7564596	0					
ANR	7564710	MultiplicativeExpression	sizeof ( CPUState * ) * smp_cpus		7564596	0		*			
ANR	7564711	SizeofExpression	sizeof ( CPUState * )		7564596	0					
ANR	7564712	Sizeof	sizeof		7564596	0					
ANR	7564713	SizeofOperand	CPUState *		7564596	1					
ANR	7564714	Identifier	smp_cpus		7564596	1					
ANR	7564715	ForStatement	for ( i = 0 ; i < smp_cpus ; i ++ )		7564596	12					
ANR	7564716	ForInit	i = 0 ;	71:9:1012:1017	7564596	0	True				
ANR	7564717	AssignmentExpression	i = 0		7564596	0		=			
ANR	7564718	Identifier	i		7564596	0					
ANR	7564719	PrimaryExpression	0		7564596	1					
ANR	7564720	Condition	i < smp_cpus	71:16:1019:1030	7564596	1	True				
ANR	7564721	RelationalExpression	i < smp_cpus		7564596	0		<			
ANR	7564722	Identifier	i		7564596	0					
ANR	7564723	Identifier	smp_cpus		7564596	1					
ANR	7564724	PostIncDecOperationExpression	i ++	71:30:1033:1035	7564596	2	True				
ANR	7564725	Identifier	i		7564596	0					
ANR	7564726	IncDec	++		7564596	1					
ANR	7564727	CompoundStatement		61:8:755:772	7564596	3					
ANR	7564728	IdentifierDeclStatement	CPUState * tmp_env ;	73:8:1049:1066	7564596	0	True				
ANR	7564729	IdentifierDecl	* tmp_env		7564596	0					
ANR	7564730	IdentifierDeclType	CPUState *		7564596	0					
ANR	7564731	Identifier	tmp_env		7564596	1					
ANR	7564732	ExpressionStatement	tmp_env = cpu_init ( cpu_model )	77:8:1079:1108	7564596	1	True				
ANR	7564733	AssignmentExpression	tmp_env = cpu_init ( cpu_model )		7564596	0		=			
ANR	7564734	Identifier	tmp_env		7564596	0					
ANR	7564735	CallExpression	cpu_init ( cpu_model )		7564596	1					
ANR	7564736	Callee	cpu_init		7564596	0					
ANR	7564737	Identifier	cpu_init		7564596	0					
ANR	7564738	ArgumentList	cpu_model		7564596	1					
ANR	7564739	Argument	cpu_model		7564596	0					
ANR	7564740	Identifier	cpu_model		7564596	0					
ANR	7564741	IfStatement	if ( ! env )		7564596	2					
ANR	7564742	Condition	! env	79:12:1123:1126	7564596	0	True				
ANR	7564743	UnaryOperationExpression	! env		7564596	0					
ANR	7564744	UnaryOperator	!		7564596	0					
ANR	7564745	Identifier	env		7564596	1					
ANR	7564746	CompoundStatement		67:18:835:835	7564596	1					
ANR	7564747	ExpressionStatement	env = tmp_env	81:12:1144:1157	7564596	0	True				
ANR	7564748	AssignmentExpression	env = tmp_env		7564596	0		=			
ANR	7564749	Identifier	env		7564596	0					
ANR	7564750	Identifier	tmp_env		7564596	1					
ANR	7564751	ExpressionStatement	ipi_states [ i ] = tmp_env	85:8:1179:1202	7564596	3	True				
ANR	7564752	AssignmentExpression	ipi_states [ i ] = tmp_env		7564596	0		=			
ANR	7564753	ArrayIndexing	ipi_states [ i ]		7564596	0					
ANR	7564754	Identifier	ipi_states		7564596	0					
ANR	7564755	Identifier	i		7564596	1					
ANR	7564756	Identifier	tmp_env		7564596	1					
ANR	7564757	ExpressionStatement	tmp_env -> halted = 1	87:8:1213:1232	7564596	4	True				
ANR	7564758	AssignmentExpression	tmp_env -> halted = 1		7564596	0		=			
ANR	7564759	PtrMemberAccess	tmp_env -> halted		7564596	0					
ANR	7564760	Identifier	tmp_env		7564596	0					
ANR	7564761	Identifier	halted		7564596	1					
ANR	7564762	PrimaryExpression	1		7564596	1					
ANR	7564763	ExpressionStatement	tmp_env -> exception_index = EXCP_HLT	89:8:1243:1278	7564596	5	True				
ANR	7564764	AssignmentExpression	tmp_env -> exception_index = EXCP_HLT		7564596	0		=			
ANR	7564765	PtrMemberAccess	tmp_env -> exception_index		7564596	0					
ANR	7564766	Identifier	tmp_env		7564596	0					
ANR	7564767	Identifier	exception_index		7564596	1					
ANR	7564768	Identifier	EXCP_HLT		7564596	1					
ANR	7564769	ExpressionStatement	env -> halted = 0	95:4:1294:1309	7564596	13	True				
ANR	7564770	AssignmentExpression	env -> halted = 0		7564596	0		=			
ANR	7564771	PtrMemberAccess	env -> halted		7564596	0					
ANR	7564772	Identifier	env		7564596	0					
ANR	7564773	Identifier	halted		7564596	1					
ANR	7564774	PrimaryExpression	0		7564596	1					
ANR	7564775	ExpressionStatement	env -> exception_index = 0	97:4:1316:1340	7564596	14	True				
ANR	7564776	AssignmentExpression	env -> exception_index = 0		7564596	0		=			
ANR	7564777	PtrMemberAccess	env -> exception_index		7564596	0					
ANR	7564778	Identifier	env		7564596	0					
ANR	7564779	Identifier	exception_index		7564596	1					
ANR	7564780	PrimaryExpression	0		7564596	1					
ANR	7564781	IfStatement	if ( kernel_filename )		7564596	15					
ANR	7564782	Condition	kernel_filename	101:8:1353:1367	7564596	0	True				
ANR	7564783	Identifier	kernel_filename		7564596	0					
ANR	7564784	CompoundStatement		89:25:1076:1076	7564596	1					
ANR	7564785	ExpressionStatement	"kernel_size = load_image ( kernel_filename , qemu_get_ram_ptr ( 0 ) )"	103:8:1381:1443	7564596	0	True				
ANR	7564786	AssignmentExpression	"kernel_size = load_image ( kernel_filename , qemu_get_ram_ptr ( 0 ) )"		7564596	0		=			
ANR	7564787	Identifier	kernel_size		7564596	0					
ANR	7564788	CallExpression	"load_image ( kernel_filename , qemu_get_ram_ptr ( 0 ) )"		7564596	1					
ANR	7564789	Callee	load_image		7564596	0					
ANR	7564790	Identifier	load_image		7564596	0					
ANR	7564791	ArgumentList	kernel_filename		7564596	1					
ANR	7564792	Argument	kernel_filename		7564596	0					
ANR	7564793	Identifier	kernel_filename		7564596	0					
ANR	7564794	Argument	qemu_get_ram_ptr ( 0 )		7564596	1					
ANR	7564795	CallExpression	qemu_get_ram_ptr ( 0 )		7564596	0					
ANR	7564796	Callee	qemu_get_ram_ptr		7564596	0					
ANR	7564797	Identifier	qemu_get_ram_ptr		7564596	0					
ANR	7564798	ArgumentList	0		7564596	1					
ANR	7564799	Argument	0		7564596	0					
ANR	7564800	PrimaryExpression	0		7564596	0					
ANR	7564801	IfStatement	if ( lduw_phys ( KERN_IMAGE_START ) != 0x0dd0 )		7564596	1					
ANR	7564802	Condition	lduw_phys ( KERN_IMAGE_START ) != 0x0dd0	107:12:1460:1496	7564596	0	True				
ANR	7564803	EqualityExpression	lduw_phys ( KERN_IMAGE_START ) != 0x0dd0		7564596	0		!=			
ANR	7564804	CallExpression	lduw_phys ( KERN_IMAGE_START )		7564596	0					
ANR	7564805	Callee	lduw_phys		7564596	0					
ANR	7564806	Identifier	lduw_phys		7564596	0					
ANR	7564807	ArgumentList	KERN_IMAGE_START		7564596	1					
ANR	7564808	Argument	KERN_IMAGE_START		7564596	0					
ANR	7564809	Identifier	KERN_IMAGE_START		7564596	0					
ANR	7564810	PrimaryExpression	0x0dd0		7564596	1					
ANR	7564811	CompoundStatement		95:51:1205:1205	7564596	1					
ANR	7564812	ExpressionStatement	"fprintf ( stderr , ""Specified image is not an s390 boot image\\n"" )"	109:12:1514:1576	7564596	0	True				
ANR	7564813	CallExpression	"fprintf ( stderr , ""Specified image is not an s390 boot image\\n"" )"		7564596	0					
ANR	7564814	Callee	fprintf		7564596	0					
ANR	7564815	Identifier	fprintf		7564596	0					
ANR	7564816	ArgumentList	stderr		7564596	1					
ANR	7564817	Argument	stderr		7564596	0					
ANR	7564818	Identifier	stderr		7564596	0					
ANR	7564819	Argument	"""Specified image is not an s390 boot image\\n"""		7564596	1					
ANR	7564820	PrimaryExpression	"""Specified image is not an s390 boot image\\n"""		7564596	0					
ANR	7564821	ExpressionStatement	exit ( 1 )	111:12:1591:1598	7564596	1	True				
ANR	7564822	CallExpression	exit ( 1 )		7564596	0					
ANR	7564823	Callee	exit		7564596	0					
ANR	7564824	Identifier	exit		7564596	0					
ANR	7564825	ArgumentList	1		7564596	1					
ANR	7564826	Argument	1		7564596	0					
ANR	7564827	PrimaryExpression	1		7564596	0					
ANR	7564828	ExpressionStatement	env -> psw . addr = KERN_IMAGE_START	117:8:1622:1654	7564596	2	True				
ANR	7564829	AssignmentExpression	env -> psw . addr = KERN_IMAGE_START		7564596	0		=			
ANR	7564830	MemberAccess	env -> psw . addr		7564596	0					
ANR	7564831	PtrMemberAccess	env -> psw		7564596	0					
ANR	7564832	Identifier	env		7564596	0					
ANR	7564833	Identifier	psw		7564596	1					
ANR	7564834	Identifier	addr		7564596	1					
ANR	7564835	Identifier	KERN_IMAGE_START		7564596	1					
ANR	7564836	Statement	env	119:8:1665:1667	7564596	3	True				
ANR	7564837	Statement	->	119:11:1668:1669	7564596	4	True				
ANR	7564838	Statement	psw	119:13:1670:1672	7564596	5	True				
ANR	7564839	Statement	.	119:16:1673:1673	7564596	6	True				
ANR	7564840	Statement	mask	119:17:1674:1677	7564596	7	True				
ANR	7564841	Statement	=	119:22:1679:1679	7564596	8	True				
ANR	7564842	Statement	0x0000000180000000UL	119:24:1681:1700	7564596	9	True				
ANR	7564843	ExpressionStatement	L	119:44:1701:1702	7564596	10	True				
ANR	7564844	Identifier	L		7564596	0					
ANR	7564845	ElseStatement	else		7564596	0					
ANR	7564846	CompoundStatement		113:8:1468:1487	7564596	0					
ANR	7564847	IdentifierDeclStatement	ram_addr_t bios_size = 0 ;	123:8:1727:1751	7564596	0	True				
ANR	7564848	IdentifierDecl	bios_size = 0		7564596	0					
ANR	7564849	IdentifierDeclType	ram_addr_t		7564596	0					
ANR	7564850	Identifier	bios_size		7564596	1					
ANR	7564851	AssignmentExpression	bios_size = 0		7564596	2		=			
ANR	7564852	Identifier	bios_size		7564596	0					
ANR	7564853	PrimaryExpression	0		7564596	1					
ANR	7564854	IdentifierDeclStatement	char * bios_filename ;	125:8:1762:1781	7564596	1	True				
ANR	7564855	IdentifierDecl	* bios_filename		7564596	0					
ANR	7564856	IdentifierDeclType	char *		7564596	0					
ANR	7564857	Identifier	bios_filename		7564596	1					
ANR	7564858	IfStatement	if ( bios_name == NULL )		7564596	2					
ANR	7564859	Condition	bios_name == NULL	131:12:1834:1850	7564596	0	True				
ANR	7564860	EqualityExpression	bios_name == NULL		7564596	0		==			
ANR	7564861	Identifier	bios_name		7564596	0					
ANR	7564862	Identifier	NULL		7564596	1					
ANR	7564863	CompoundStatement		119:31:1559:1559	7564596	1					
ANR	7564864	ExpressionStatement	bios_name = ZIPL_FILENAME	133:12:1868:1893	7564596	0	True				
ANR	7564865	AssignmentExpression	bios_name = ZIPL_FILENAME		7564596	0		=			
ANR	7564866	Identifier	bios_name		7564596	0					
ANR	7564867	Identifier	ZIPL_FILENAME		7564596	1					
ANR	7564868	ExpressionStatement	"bios_filename = qemu_find_file ( QEMU_FILE_TYPE_BIOS , bios_name )"	139:8:1917:1979	7564596	3	True				
ANR	7564869	AssignmentExpression	"bios_filename = qemu_find_file ( QEMU_FILE_TYPE_BIOS , bios_name )"		7564596	0		=			
ANR	7564870	Identifier	bios_filename		7564596	0					
ANR	7564871	CallExpression	"qemu_find_file ( QEMU_FILE_TYPE_BIOS , bios_name )"		7564596	1					
ANR	7564872	Callee	qemu_find_file		7564596	0					
ANR	7564873	Identifier	qemu_find_file		7564596	0					
ANR	7564874	ArgumentList	QEMU_FILE_TYPE_BIOS		7564596	1					
ANR	7564875	Argument	QEMU_FILE_TYPE_BIOS		7564596	0					
ANR	7564876	Identifier	QEMU_FILE_TYPE_BIOS		7564596	0					
ANR	7564877	Argument	bios_name		7564596	1					
ANR	7564878	Identifier	bios_name		7564596	0					
ANR	7564879	ExpressionStatement	"bios_size = load_image ( bios_filename , qemu_get_ram_ptr ( ZIPL_LOAD_ADDR ) )"	141:8:1990:2061	7564596	4	True				
ANR	7564880	AssignmentExpression	"bios_size = load_image ( bios_filename , qemu_get_ram_ptr ( ZIPL_LOAD_ADDR ) )"		7564596	0		=			
ANR	7564881	Identifier	bios_size		7564596	0					
ANR	7564882	CallExpression	"load_image ( bios_filename , qemu_get_ram_ptr ( ZIPL_LOAD_ADDR ) )"		7564596	1					
ANR	7564883	Callee	load_image		7564596	0					
ANR	7564884	Identifier	load_image		7564596	0					
ANR	7564885	ArgumentList	bios_filename		7564596	1					
ANR	7564886	Argument	bios_filename		7564596	0					
ANR	7564887	Identifier	bios_filename		7564596	0					
ANR	7564888	Argument	qemu_get_ram_ptr ( ZIPL_LOAD_ADDR )		7564596	1					
ANR	7564889	CallExpression	qemu_get_ram_ptr ( ZIPL_LOAD_ADDR )		7564596	0					
ANR	7564890	Callee	qemu_get_ram_ptr		7564596	0					
ANR	7564891	Identifier	qemu_get_ram_ptr		7564596	0					
ANR	7564892	ArgumentList	ZIPL_LOAD_ADDR		7564596	1					
ANR	7564893	Argument	ZIPL_LOAD_ADDR		7564596	0					
ANR	7564894	Identifier	ZIPL_LOAD_ADDR		7564596	0					
ANR	7564895	IfStatement	if ( ( long ) bios_size < 0 )		7564596	5					
ANR	7564896	Condition	( long ) bios_size < 0	146:12:2079:2097	7564596	0	True				
ANR	7564897	RelationalExpression	( long ) bios_size < 0		7564596	0		<			
ANR	7564898	CastExpression	( long ) bios_size		7564596	0					
ANR	7564899	CastTarget	long		7564596	0					
ANR	7564900	Identifier	bios_size		7564596	1					
ANR	7564901	PrimaryExpression	0		7564596	1					
ANR	7564902	CompoundStatement		134:33:1806:1806	7564596	1					
ANR	7564903	ExpressionStatement	"hw_error ( ""could not load bootloader '%s'\\n"" , bios_name )"	148:12:2115:2170	7564596	0	True				
ANR	7564904	CallExpression	"hw_error ( ""could not load bootloader '%s'\\n"" , bios_name )"		7564596	0					
ANR	7564905	Callee	hw_error		7564596	0					
ANR	7564906	Identifier	hw_error		7564596	0					
ANR	7564907	ArgumentList	"""could not load bootloader '%s'\\n"""		7564596	1					
ANR	7564908	Argument	"""could not load bootloader '%s'\\n"""		7564596	0					
ANR	7564909	PrimaryExpression	"""could not load bootloader '%s'\\n"""		7564596	0					
ANR	7564910	Argument	bios_name		7564596	1					
ANR	7564911	Identifier	bios_name		7564596	0					
ANR	7564912	IfStatement	if ( bios_size > 4096 )		7564596	6					
ANR	7564913	Condition	bios_size > 4096	154:12:2198:2213	7564596	0	True				
ANR	7564914	RelationalExpression	bios_size > 4096		7564596	0		>			
ANR	7564915	Identifier	bios_size		7564596	0					
ANR	7564916	PrimaryExpression	4096		7564596	1					
ANR	7564917	CompoundStatement		142:30:1922:1922	7564596	1					
ANR	7564918	ExpressionStatement	"hw_error ( ""stage1 bootloader is > 4k\\n"" )"	156:12:2231:2270	7564596	0	True				
ANR	7564919	CallExpression	"hw_error ( ""stage1 bootloader is > 4k\\n"" )"		7564596	0					
ANR	7564920	Callee	hw_error		7564596	0					
ANR	7564921	Identifier	hw_error		7564596	0					
ANR	7564922	ArgumentList	"""stage1 bootloader is > 4k\\n"""		7564596	1					
ANR	7564923	Argument	"""stage1 bootloader is > 4k\\n"""		7564596	0					
ANR	7564924	PrimaryExpression	"""stage1 bootloader is > 4k\\n"""		7564596	0					
ANR	7564925	ExpressionStatement	env -> psw . addr = ZIPL_START	162:8:2294:2320	7564596	7	True				
ANR	7564926	AssignmentExpression	env -> psw . addr = ZIPL_START		7564596	0		=			
ANR	7564927	MemberAccess	env -> psw . addr		7564596	0					
ANR	7564928	PtrMemberAccess	env -> psw		7564596	0					
ANR	7564929	Identifier	env		7564596	0					
ANR	7564930	Identifier	psw		7564596	1					
ANR	7564931	Identifier	addr		7564596	1					
ANR	7564932	Identifier	ZIPL_START		7564596	1					
ANR	7564933	Statement	env	164:8:2331:2333	7564596	8	True				
ANR	7564934	Statement	->	164:11:2334:2335	7564596	9	True				
ANR	7564935	Statement	psw	164:13:2336:2338	7564596	10	True				
ANR	7564936	Statement	.	164:16:2339:2339	7564596	11	True				
ANR	7564937	Statement	mask	164:17:2340:2343	7564596	12	True				
ANR	7564938	Statement	=	164:22:2345:2345	7564596	13	True				
ANR	7564939	Statement	0x0000000180000000UL	164:24:2347:2366	7564596	14	True				
ANR	7564940	ExpressionStatement	L	164:44:2367:2368	7564596	15	True				
ANR	7564941	Identifier	L		7564596	0					
ANR	7564942	IfStatement	if ( initrd_filename )		7564596	16					
ANR	7564943	Condition	initrd_filename	170:8:2388:2402	7564596	0	True				
ANR	7564944	Identifier	initrd_filename		7564596	0					
ANR	7564945	CompoundStatement		158:25:2111:2111	7564596	1					
ANR	7564946	ExpressionStatement	initrd_offset = INITRD_START	172:8:2416:2444	7564596	0	True				
ANR	7564947	AssignmentExpression	initrd_offset = INITRD_START		7564596	0		=			
ANR	7564948	Identifier	initrd_offset		7564596	0					
ANR	7564949	Identifier	INITRD_START		7564596	1					
ANR	7564950	WhileStatement	while ( kernel_size + 0x100000 > initrd_offset )		7564596	1					
ANR	7564951	Condition	kernel_size + 0x100000 > initrd_offset	174:15:2462:2499	7564596	0	True				
ANR	7564952	RelationalExpression	kernel_size + 0x100000 > initrd_offset		7564596	0		>			
ANR	7564953	AdditiveExpression	kernel_size + 0x100000		7564596	0		+			
ANR	7564954	Identifier	kernel_size		7564596	0					
ANR	7564955	PrimaryExpression	0x100000		7564596	1					
ANR	7564956	Identifier	initrd_offset		7564596	1					
ANR	7564957	CompoundStatement		162:55:2208:2208	7564596	1					
ANR	7564958	ExpressionStatement	initrd_offset += 0x100000	176:12:2517:2542	7564596	0	True				
ANR	7564959	AssignmentExpression	initrd_offset += 0x100000		7564596	0		+=			
ANR	7564960	Identifier	initrd_offset		7564596	0					
ANR	7564961	PrimaryExpression	0x100000		7564596	1					
ANR	7564962	ExpressionStatement	"initrd_size = load_image ( initrd_filename , qemu_get_ram_ptr ( initrd_offset ) )"	180:8:2564:2638	7564596	2	True				
ANR	7564963	AssignmentExpression	"initrd_size = load_image ( initrd_filename , qemu_get_ram_ptr ( initrd_offset ) )"		7564596	0		=			
ANR	7564964	Identifier	initrd_size		7564596	0					
ANR	7564965	CallExpression	"load_image ( initrd_filename , qemu_get_ram_ptr ( initrd_offset ) )"		7564596	1					
ANR	7564966	Callee	load_image		7564596	0					
ANR	7564967	Identifier	load_image		7564596	0					
ANR	7564968	ArgumentList	initrd_filename		7564596	1					
ANR	7564969	Argument	initrd_filename		7564596	0					
ANR	7564970	Identifier	initrd_filename		7564596	0					
ANR	7564971	Argument	qemu_get_ram_ptr ( initrd_offset )		7564596	1					
ANR	7564972	CallExpression	qemu_get_ram_ptr ( initrd_offset )		7564596	0					
ANR	7564973	Callee	qemu_get_ram_ptr		7564596	0					
ANR	7564974	Identifier	qemu_get_ram_ptr		7564596	0					
ANR	7564975	ArgumentList	initrd_offset		7564596	1					
ANR	7564976	Argument	initrd_offset		7564596	0					
ANR	7564977	Identifier	initrd_offset		7564596	0					
ANR	7564978	ExpressionStatement	"stq_phys ( INITRD_PARM_START , initrd_offset )"	184:8:2651:2693	7564596	3	True				
ANR	7564979	CallExpression	"stq_phys ( INITRD_PARM_START , initrd_offset )"		7564596	0					
ANR	7564980	Callee	stq_phys		7564596	0					
ANR	7564981	Identifier	stq_phys		7564596	0					
ANR	7564982	ArgumentList	INITRD_PARM_START		7564596	1					
ANR	7564983	Argument	INITRD_PARM_START		7564596	0					
ANR	7564984	Identifier	INITRD_PARM_START		7564596	0					
ANR	7564985	Argument	initrd_offset		7564596	1					
ANR	7564986	Identifier	initrd_offset		7564596	0					
ANR	7564987	ExpressionStatement	"stq_phys ( INITRD_PARM_SIZE , initrd_size )"	186:8:2704:2743	7564596	4	True				
ANR	7564988	CallExpression	"stq_phys ( INITRD_PARM_SIZE , initrd_size )"		7564596	0					
ANR	7564989	Callee	stq_phys		7564596	0					
ANR	7564990	Identifier	stq_phys		7564596	0					
ANR	7564991	ArgumentList	INITRD_PARM_SIZE		7564596	1					
ANR	7564992	Argument	INITRD_PARM_SIZE		7564596	0					
ANR	7564993	Identifier	INITRD_PARM_SIZE		7564596	0					
ANR	7564994	Argument	initrd_size		7564596	1					
ANR	7564995	Identifier	initrd_size		7564596	0					
ANR	7564996	IfStatement	if ( kernel_cmdline )		7564596	17					
ANR	7564997	Condition	kernel_cmdline	192:8:2763:2776	7564596	0	True				
ANR	7564998	Identifier	kernel_cmdline		7564596	0					
ANR	7564999	CompoundStatement		180:24:2485:2485	7564596	1					
ANR	7565000	ExpressionStatement	"cpu_physical_memory_rw ( KERN_PARM_AREA , ( uint8_t * ) kernel_cmdline , strlen ( kernel_cmdline ) , 1 )"	194:8:2790:2914	7564596	0	True				
ANR	7565001	CallExpression	"cpu_physical_memory_rw ( KERN_PARM_AREA , ( uint8_t * ) kernel_cmdline , strlen ( kernel_cmdline ) , 1 )"		7564596	0					
ANR	7565002	Callee	cpu_physical_memory_rw		7564596	0					
ANR	7565003	Identifier	cpu_physical_memory_rw		7564596	0					
ANR	7565004	ArgumentList	KERN_PARM_AREA		7564596	1					
ANR	7565005	Argument	KERN_PARM_AREA		7564596	0					
ANR	7565006	Identifier	KERN_PARM_AREA		7564596	0					
ANR	7565007	Argument	( uint8_t * ) kernel_cmdline		7564596	1					
ANR	7565008	CastExpression	( uint8_t * ) kernel_cmdline		7564596	0					
ANR	7565009	CastTarget	uint8_t *		7564596	0					
ANR	7565010	Identifier	kernel_cmdline		7564596	1					
ANR	7565011	Argument	strlen ( kernel_cmdline )		7564596	2					
ANR	7565012	CallExpression	strlen ( kernel_cmdline )		7564596	0					
ANR	7565013	Callee	strlen		7564596	0					
ANR	7565014	Identifier	strlen		7564596	0					
ANR	7565015	ArgumentList	kernel_cmdline		7564596	1					
ANR	7565016	Argument	kernel_cmdline		7564596	0					
ANR	7565017	Identifier	kernel_cmdline		7564596	0					
ANR	7565018	Argument	1		7564596	3					
ANR	7565019	PrimaryExpression	1		7564596	0					
ANR	7565020	ForStatement	for ( i = 0 ; i < nb_nics ; i ++ )		7564596	18					
ANR	7565021	ForInit	i = 0 ;	204:8:2976:2981	7564596	0	True				
ANR	7565022	AssignmentExpression	i = 0		7564596	0		=			
ANR	7565023	Identifier	i		7564596	0					
ANR	7565024	PrimaryExpression	0		7564596	1					
ANR	7565025	Condition	i < nb_nics	204:15:2983:2993	7564596	1	True				
ANR	7565026	RelationalExpression	i < nb_nics		7564596	0		<			
ANR	7565027	Identifier	i		7564596	0					
ANR	7565028	Identifier	nb_nics		7564596	1					
ANR	7565029	PostIncDecOperationExpression	i ++	204:28:2996:2998	7564596	2	True				
ANR	7565030	Identifier	i		7564596	0					
ANR	7565031	IncDec	++		7564596	1					
ANR	7565032	CompoundStatement		196:8:2755:2771	7564596	3					
ANR	7565033	IdentifierDeclStatement	NICInfo * nd = & nd_table [ i ] ;	206:8:3012:3038	7564596	0	True				
ANR	7565034	IdentifierDecl	* nd = & nd_table [ i ]		7564596	0					
ANR	7565035	IdentifierDeclType	NICInfo *		7564596	0					
ANR	7565036	Identifier	nd		7564596	1					
ANR	7565037	AssignmentExpression	* nd = & nd_table [ i ]		7564596	2		=			
ANR	7565038	Identifier	nd		7564596	0					
ANR	7565039	UnaryOperationExpression	& nd_table [ i ]		7564596	1					
ANR	7565040	UnaryOperator	&		7564596	0					
ANR	7565041	ArrayIndexing	nd_table [ i ]		7564596	1					
ANR	7565042	Identifier	nd_table		7564596	0					
ANR	7565043	Identifier	i		7564596	1					
ANR	7565044	IdentifierDeclStatement	DeviceState * dev ;	208:8:3049:3065	7564596	1	True				
ANR	7565045	IdentifierDecl	* dev		7564596	0					
ANR	7565046	IdentifierDeclType	DeviceState *		7564596	0					
ANR	7565047	Identifier	dev		7564596	1					
ANR	7565048	IfStatement	if ( ! nd -> model )		7564596	2					
ANR	7565049	Condition	! nd -> model	212:12:3082:3091	7564596	0	True				
ANR	7565050	UnaryOperationExpression	! nd -> model		7564596	0					
ANR	7565051	UnaryOperator	!		7564596	0					
ANR	7565052	PtrMemberAccess	nd -> model		7564596	1					
ANR	7565053	Identifier	nd		7564596	0					
ANR	7565054	Identifier	model		7564596	1					
ANR	7565055	CompoundStatement		200:24:2800:2800	7564596	1					
ANR	7565056	ExpressionStatement	"nd -> model = qemu_strdup ( ""virtio"" )"	214:12:3109:3142	7564596	0	True				
ANR	7565057	AssignmentExpression	"nd -> model = qemu_strdup ( ""virtio"" )"		7564596	0		=			
ANR	7565058	PtrMemberAccess	nd -> model		7564596	0					
ANR	7565059	Identifier	nd		7564596	0					
ANR	7565060	Identifier	model		7564596	1					
ANR	7565061	CallExpression	"qemu_strdup ( ""virtio"" )"		7564596	1					
ANR	7565062	Callee	qemu_strdup		7564596	0					
ANR	7565063	Identifier	qemu_strdup		7564596	0					
ANR	7565064	ArgumentList	"""virtio"""		7564596	1					
ANR	7565065	Argument	"""virtio"""		7564596	0					
ANR	7565066	PrimaryExpression	"""virtio"""		7564596	0					
ANR	7565067	IfStatement	"if ( strcmp ( nd -> model , ""virtio"" ) )"		7564596	3					
ANR	7565068	Condition	"strcmp ( nd -> model , ""virtio"" )"	220:12:3170:3196	7564596	0	True				
ANR	7565069	CallExpression	"strcmp ( nd -> model , ""virtio"" )"		7564596	0					
ANR	7565070	Callee	strcmp		7564596	0					
ANR	7565071	Identifier	strcmp		7564596	0					
ANR	7565072	ArgumentList	nd -> model		7564596	1					
ANR	7565073	Argument	nd -> model		7564596	0					
ANR	7565074	PtrMemberAccess	nd -> model		7564596	0					
ANR	7565075	Identifier	nd		7564596	0					
ANR	7565076	Identifier	model		7564596	1					
ANR	7565077	Argument	"""virtio"""		7564596	1					
ANR	7565078	PrimaryExpression	"""virtio"""		7564596	0					
ANR	7565079	CompoundStatement		208:41:2905:2905	7564596	1					
ANR	7565080	ExpressionStatement	"fprintf ( stderr , ""S390 only supports VirtIO nics\\n"" )"	222:12:3214:3265	7564596	0	True				
ANR	7565081	CallExpression	"fprintf ( stderr , ""S390 only supports VirtIO nics\\n"" )"		7564596	0					
ANR	7565082	Callee	fprintf		7564596	0					
ANR	7565083	Identifier	fprintf		7564596	0					
ANR	7565084	ArgumentList	stderr		7564596	1					
ANR	7565085	Argument	stderr		7564596	0					
ANR	7565086	Identifier	stderr		7564596	0					
ANR	7565087	Argument	"""S390 only supports VirtIO nics\\n"""		7564596	1					
ANR	7565088	PrimaryExpression	"""S390 only supports VirtIO nics\\n"""		7564596	0					
ANR	7565089	ExpressionStatement	exit ( 1 )	224:12:3280:3287	7564596	1	True				
ANR	7565090	CallExpression	exit ( 1 )		7564596	0					
ANR	7565091	Callee	exit		7564596	0					
ANR	7565092	Identifier	exit		7564596	0					
ANR	7565093	ArgumentList	1		7564596	1					
ANR	7565094	Argument	1		7564596	0					
ANR	7565095	PrimaryExpression	1		7564596	0					
ANR	7565096	ExpressionStatement	"dev = qdev_create ( ( BusState * ) s390_bus , ""virtio-net-s390"" )"	230:8:3311:3369	7564596	4	True				
ANR	7565097	AssignmentExpression	"dev = qdev_create ( ( BusState * ) s390_bus , ""virtio-net-s390"" )"		7564596	0		=			
ANR	7565098	Identifier	dev		7564596	0					
ANR	7565099	CallExpression	"qdev_create ( ( BusState * ) s390_bus , ""virtio-net-s390"" )"		7564596	1					
ANR	7565100	Callee	qdev_create		7564596	0					
ANR	7565101	Identifier	qdev_create		7564596	0					
ANR	7565102	ArgumentList	( BusState * ) s390_bus		7564596	1					
ANR	7565103	Argument	( BusState * ) s390_bus		7564596	0					
ANR	7565104	CastExpression	( BusState * ) s390_bus		7564596	0					
ANR	7565105	CastTarget	BusState *		7564596	0					
ANR	7565106	Identifier	s390_bus		7564596	1					
ANR	7565107	Argument	"""virtio-net-s390"""		7564596	1					
ANR	7565108	PrimaryExpression	"""virtio-net-s390"""		7564596	0					
ANR	7565109	ExpressionStatement	"qdev_set_nic_properties ( dev , nd )"	232:8:3380:3412	7564596	5	True				
ANR	7565110	CallExpression	"qdev_set_nic_properties ( dev , nd )"		7564596	0					
ANR	7565111	Callee	qdev_set_nic_properties		7564596	0					
ANR	7565112	Identifier	qdev_set_nic_properties		7564596	0					
ANR	7565113	ArgumentList	dev		7564596	1					
ANR	7565114	Argument	dev		7564596	0					
ANR	7565115	Identifier	dev		7564596	0					
ANR	7565116	Argument	nd		7564596	1					
ANR	7565117	Identifier	nd		7564596	0					
ANR	7565118	ExpressionStatement	qdev_init_nofail ( dev )	234:8:3423:3444	7564596	6	True				
ANR	7565119	CallExpression	qdev_init_nofail ( dev )		7564596	0					
ANR	7565120	Callee	qdev_init_nofail		7564596	0					
ANR	7565121	Identifier	qdev_init_nofail		7564596	0					
ANR	7565122	ArgumentList	dev		7564596	1					
ANR	7565123	Argument	dev		7564596	0					
ANR	7565124	Identifier	dev		7564596	0					
ANR	7565125	ForStatement	for ( i = 0 ; i < MAX_BLK_DEVS ; i ++ )		7564596	19					
ANR	7565126	ForInit	i = 0 ;	242:8:3501:3506	7564596	0	True				
ANR	7565127	AssignmentExpression	i = 0		7564596	0		=			
ANR	7565128	Identifier	i		7564596	0					
ANR	7565129	PrimaryExpression	0		7564596	1					
ANR	7565130	Condition	i < MAX_BLK_DEVS	242:15:3508:3523	7564596	1	True				
ANR	7565131	RelationalExpression	i < MAX_BLK_DEVS		7564596	0		<			
ANR	7565132	Identifier	i		7564596	0					
ANR	7565133	Identifier	MAX_BLK_DEVS		7564596	1					
ANR	7565134	PostIncDecOperationExpression	i ++	242:33:3526:3528	7564596	2	True				
ANR	7565135	Identifier	i		7564596	0					
ANR	7565136	IncDec	++		7564596	1					
ANR	7565137	CompoundStatement		234:8:3275:3291	7564596	3					
ANR	7565138	IdentifierDeclStatement	DriveInfo * dinfo ;	244:8:3542:3558	7564596	0	True				
ANR	7565139	IdentifierDecl	* dinfo		7564596	0					
ANR	7565140	IdentifierDeclType	DriveInfo *		7564596	0					
ANR	7565141	Identifier	dinfo		7564596	1					
ANR	7565142	IdentifierDeclStatement	DeviceState * dev ;	246:8:3569:3585	7564596	1	True				
ANR	7565143	IdentifierDecl	* dev		7564596	0					
ANR	7565144	IdentifierDeclType	DeviceState *		7564596	0					
ANR	7565145	Identifier	dev		7564596	1					
ANR	7565146	ExpressionStatement	"dinfo = drive_get ( IF_IDE , 0 , i )"	250:8:3598:3629	7564596	2	True				
ANR	7565147	AssignmentExpression	"dinfo = drive_get ( IF_IDE , 0 , i )"		7564596	0		=			
ANR	7565148	Identifier	dinfo		7564596	0					
ANR	7565149	CallExpression	"drive_get ( IF_IDE , 0 , i )"		7564596	1					
ANR	7565150	Callee	drive_get		7564596	0					
ANR	7565151	Identifier	drive_get		7564596	0					
ANR	7565152	ArgumentList	IF_IDE		7564596	1					
ANR	7565153	Argument	IF_IDE		7564596	0					
ANR	7565154	Identifier	IF_IDE		7564596	0					
ANR	7565155	Argument	0		7564596	1					
ANR	7565156	PrimaryExpression	0		7564596	0					
ANR	7565157	Argument	i		7564596	2					
ANR	7565158	Identifier	i		7564596	0					
ANR	7565159	IfStatement	if ( ! dinfo )		7564596	3					
ANR	7565160	Condition	! dinfo	252:12:3644:3649	7564596	0	True				
ANR	7565161	UnaryOperationExpression	! dinfo		7564596	0					
ANR	7565162	UnaryOperator	!		7564596	0					
ANR	7565163	Identifier	dinfo		7564596	1					
ANR	7565164	CompoundStatement		240:20:3358:3358	7564596	1					
ANR	7565165	ContinueStatement	continue ;	254:12:3667:3675	7564596	0	True				
ANR	7565166	ExpressionStatement	"dev = qdev_create ( ( BusState * ) s390_bus , ""virtio-blk-s390"" )"	260:8:3699:3757	7564596	4	True				
ANR	7565167	AssignmentExpression	"dev = qdev_create ( ( BusState * ) s390_bus , ""virtio-blk-s390"" )"		7564596	0		=			
ANR	7565168	Identifier	dev		7564596	0					
ANR	7565169	CallExpression	"qdev_create ( ( BusState * ) s390_bus , ""virtio-blk-s390"" )"		7564596	1					
ANR	7565170	Callee	qdev_create		7564596	0					
ANR	7565171	Identifier	qdev_create		7564596	0					
ANR	7565172	ArgumentList	( BusState * ) s390_bus		7564596	1					
ANR	7565173	Argument	( BusState * ) s390_bus		7564596	0					
ANR	7565174	CastExpression	( BusState * ) s390_bus		7564596	0					
ANR	7565175	CastTarget	BusState *		7564596	0					
ANR	7565176	Identifier	s390_bus		7564596	1					
ANR	7565177	Argument	"""virtio-blk-s390"""		7564596	1					
ANR	7565178	PrimaryExpression	"""virtio-blk-s390"""		7564596	0					
ANR	7565179	ExpressionStatement	"qdev_prop_set_drive_nofail ( dev , ""drive"" , dinfo -> bdrv )"	262:8:3768:3821	7564596	5	True				
ANR	7565180	CallExpression	"qdev_prop_set_drive_nofail ( dev , ""drive"" , dinfo -> bdrv )"		7564596	0					
ANR	7565181	Callee	qdev_prop_set_drive_nofail		7564596	0					
ANR	7565182	Identifier	qdev_prop_set_drive_nofail		7564596	0					
ANR	7565183	ArgumentList	dev		7564596	1					
ANR	7565184	Argument	dev		7564596	0					
ANR	7565185	Identifier	dev		7564596	0					
ANR	7565186	Argument	"""drive"""		7564596	1					
ANR	7565187	PrimaryExpression	"""drive"""		7564596	0					
ANR	7565188	Argument	dinfo -> bdrv		7564596	2					
ANR	7565189	PtrMemberAccess	dinfo -> bdrv		7564596	0					
ANR	7565190	Identifier	dinfo		7564596	0					
ANR	7565191	Identifier	bdrv		7564596	1					
ANR	7565192	ExpressionStatement	qdev_init_nofail ( dev )	264:8:3832:3853	7564596	6	True				
ANR	7565193	CallExpression	qdev_init_nofail ( dev )		7564596	0					
ANR	7565194	Callee	qdev_init_nofail		7564596	0					
ANR	7565195	Identifier	qdev_init_nofail		7564596	0					
ANR	7565196	ArgumentList	dev		7564596	1					
ANR	7565197	Argument	dev		7564596	0					
ANR	7565198	Identifier	dev		7564596	0					
ANR	7565199	ReturnType	static void		7564596	1					
ANR	7565200	Identifier	s390_init		7564596	2					
ANR	7565201	ParameterList	"ram_addr_t ram_size , const char * boot_device , const char * kernel_filename , const char * kernel_cmdline , const char * initrd_filename , const char * cpu_model"		7564596	3					
ANR	7565202	Parameter	ram_addr_t ram_size	1:22:22:40	7564596	0	True				
ANR	7565203	ParameterType	ram_addr_t		7564596	0					
ANR	7565204	Identifier	ram_size		7564596	1					
ANR	7565205	Parameter	const char * boot_device	3:22:66:88	7564596	1	True				
ANR	7565206	ParameterType	const char *		7564596	0					
ANR	7565207	Identifier	boot_device		7564596	1					
ANR	7565208	Parameter	const char * kernel_filename	5:22:114:140	7564596	2	True				
ANR	7565209	ParameterType	const char *		7564596	0					
ANR	7565210	Identifier	kernel_filename		7564596	1					
ANR	7565211	Parameter	const char * kernel_cmdline	7:22:166:191	7564596	3	True				
ANR	7565212	ParameterType	const char *		7564596	0					
ANR	7565213	Identifier	kernel_cmdline		7564596	1					
ANR	7565214	Parameter	const char * initrd_filename	9:22:217:243	7564596	4	True				
ANR	7565215	ParameterType	const char *		7564596	0					
ANR	7565216	Identifier	initrd_filename		7564596	1					
ANR	7565217	Parameter	const char * cpu_model	11:22:269:289	7564596	5	True				
ANR	7565218	ParameterType	const char *		7564596	0					
ANR	7565219	Identifier	cpu_model		7564596	1					
ANR	7565220	CFGEntryNode	ENTRY		7564596		True				
ANR	7565221	CFGExitNode	EXIT		7564596		True				
ANR	7565222	Symbol	nb_nics		7564596						
ANR	7565223	Symbol	env -> halted		7564596						
ANR	7565224	Symbol	INITRD_PARM_START		7564596						
ANR	7565225	Symbol	ZIPL_START		7564596						
ANR	7565226	Symbol	initrd_offset		7564596						
ANR	7565227	Symbol	tmp_env -> halted		7564596						
ANR	7565228	Symbol	nd -> model		7564596						
ANR	7565229	Symbol	* dinfo		7564596						
ANR	7565230	Symbol	* ipi_states		7564596						
ANR	7565231	Symbol	strlen		7564596						
ANR	7565232	Symbol	dev		7564596						
ANR	7565233	Symbol	ipi_states		7564596						
ANR	7565234	Symbol	ram_addr		7564596						
ANR	7565235	Symbol	qemu_get_ram_ptr		7564596						
ANR	7565236	Symbol	lduw_phys		7564596						
ANR	7565237	Symbol	INITRD_PARM_SIZE		7564596						
ANR	7565238	Symbol	bios_filename		7564596						
ANR	7565239	Symbol	dinfo -> bdrv		7564596						
ANR	7565240	Symbol	kernel_size		7564596						
ANR	7565241	Symbol	strcmp		7564596						
ANR	7565242	Symbol	dinfo		7564596						
ANR	7565243	Symbol	smp_cpus		7564596						
ANR	7565244	Symbol	NULL		7564596						
ANR	7565245	Symbol	s390_virtio_bus_init		7564596						
ANR	7565246	Symbol	cpu_init		7564596						
ANR	7565247	Symbol	drive_get		7564596						
ANR	7565248	Symbol	* env		7564596						
ANR	7565249	Symbol	QEMU_FILE_TYPE_BIOS		7564596						
ANR	7565250	Symbol	stderr		7564596						
ANR	7565251	Symbol	qemu_strdup		7564596						
ANR	7565252	Symbol	nd		7564596						
ANR	7565253	Symbol	MAX_BLK_DEVS		7564596						
ANR	7565254	Symbol	boot_device		7564596						
ANR	7565255	Symbol	qemu_malloc		7564596						
ANR	7565256	Symbol	KERN_PARM_AREA		7564596						
ANR	7565257	Symbol	env -> exception_index		7564596						
ANR	7565258	Symbol	env -> psw . addr		7564596						
ANR	7565259	Symbol	load_image		7564596						
ANR	7565260	Symbol	kernel_cmdline		7564596						
ANR	7565261	Symbol	* tmp_env		7564596						
ANR	7565262	Symbol	EXCP_HLT		7564596						
ANR	7565263	Symbol	initrd_filename		7564596						
ANR	7565264	Symbol	initrd_size		7564596						
ANR	7565265	Symbol	env -> psw		7564596						
ANR	7565266	Symbol	KERN_IMAGE_START		7564596						
ANR	7565267	Symbol	bios_name		7564596						
ANR	7565268	Symbol	qdev_create		7564596						
ANR	7565269	Symbol	cpu_model		7564596						
ANR	7565270	Symbol	kvm_enabled		7564596						
ANR	7565271	Symbol	nd_table		7564596						
ANR	7565272	Symbol	bios_size		7564596						
ANR	7565273	Symbol	& ram_size		7564596						
ANR	7565274	Symbol	INITRD_START		7564596						
ANR	7565275	Symbol	qemu_find_file		7564596						
ANR	7565276	Symbol	s390_bus		7564596						
ANR	7565277	Symbol	ZIPL_FILENAME		7564596						
ANR	7565278	Symbol	i		7564596						
ANR	7565279	Symbol	qemu_ram_alloc		7564596						
ANR	7565280	Symbol	env		7564596						
ANR	7565281	Symbol	tmp_env		7564596						
ANR	7565282	Symbol	IF_IDE		7564596						
ANR	7565283	Symbol	ram_size		7564596						
ANR	7565284	Symbol	* i		7564596						
ANR	7565285	Symbol	tmp_env -> exception_index		7564596						
ANR	7565286	Symbol	ZIPL_LOAD_ADDR		7564596						
ANR	7565287	Symbol	kernel_filename		7564596						
ANR	7565288	Symbol	* nd		7564596						
