command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8176005	File	/home/p4ultr4n/workplace/ReVeal/raw_code/tap_alloc_1.c								
ANR	8176006	Function	tap_alloc	1:0:0:3484							
ANR	8176007	FunctionDef	"tap_alloc (char * dev , size_t dev_size)"		8176006	0					
ANR	8176008	CompoundStatement		3:0:50:3484	8176006	0					
ANR	8176009	IdentifierDeclStatement	"int tap_fd , if_fd , ppa = - 1 ;"	5:4:57:84	8176006	0	True				
ANR	8176010	IdentifierDecl	tap_fd		8176006	0					
ANR	8176011	IdentifierDeclType	int		8176006	0					
ANR	8176012	Identifier	tap_fd		8176006	1					
ANR	8176013	IdentifierDecl	if_fd		8176006	1					
ANR	8176014	IdentifierDeclType	int		8176006	0					
ANR	8176015	Identifier	if_fd		8176006	1					
ANR	8176016	IdentifierDecl	ppa = - 1		8176006	2					
ANR	8176017	IdentifierDeclType	int		8176006	0					
ANR	8176018	Identifier	ppa		8176006	1					
ANR	8176019	AssignmentExpression	ppa = - 1		8176006	2		=			
ANR	8176020	Identifier	ppa		8176006	0					
ANR	8176021	UnaryOperationExpression	- 1		8176006	1					
ANR	8176022	UnaryOperator	-		8176006	0					
ANR	8176023	PrimaryExpression	1		8176006	1					
ANR	8176024	Statement	static	7:4:91:96	8176006	1	True				
ANR	8176025	IdentifierDeclStatement	int ip_fd = 0 ;	7:11:98:111	8176006	2	True				
ANR	8176026	IdentifierDecl	ip_fd = 0		8176006	0					
ANR	8176027	IdentifierDeclType	int		8176006	0					
ANR	8176028	Identifier	ip_fd		8176006	1					
ANR	8176029	AssignmentExpression	ip_fd = 0		8176006	2		=			
ANR	8176030	Identifier	ip_fd		8176006	0					
ANR	8176031	PrimaryExpression	0		8176006	1					
ANR	8176032	IdentifierDeclStatement	char * ptr ;	9:4:118:127	8176006	3	True				
ANR	8176033	IdentifierDecl	* ptr		8176006	0					
ANR	8176034	IdentifierDeclType	char *		8176006	0					
ANR	8176035	Identifier	ptr		8176006	1					
ANR	8176036	Statement	static	13:4:136:141	8176006	4	True				
ANR	8176037	IdentifierDeclStatement	int arp_fd = 0 ;	13:11:143:157	8176006	5	True				
ANR	8176038	IdentifierDecl	arp_fd = 0		8176006	0					
ANR	8176039	IdentifierDeclType	int		8176006	0					
ANR	8176040	Identifier	arp_fd		8176006	1					
ANR	8176041	AssignmentExpression	arp_fd = 0		8176006	2		=			
ANR	8176042	Identifier	arp_fd		8176006	0					
ANR	8176043	PrimaryExpression	0		8176006	1					
ANR	8176044	IdentifierDeclStatement	"int ip_muxid , arp_muxid ;"	15:4:164:187	8176006	6	True				
ANR	8176045	IdentifierDecl	ip_muxid		8176006	0					
ANR	8176046	IdentifierDeclType	int		8176006	0					
ANR	8176047	Identifier	ip_muxid		8176006	1					
ANR	8176048	IdentifierDecl	arp_muxid		8176006	1					
ANR	8176049	IdentifierDeclType	int		8176006	0					
ANR	8176050	Identifier	arp_muxid		8176006	1					
ANR	8176051	IdentifierDeclStatement	"struct strioctl strioc_if , strioc_ppa ;"	17:4:194:232	8176006	7	True				
ANR	8176052	IdentifierDecl	strioc_if		8176006	0					
ANR	8176053	IdentifierDeclType	struct strioctl		8176006	0					
ANR	8176054	Identifier	strioc_if		8176006	1					
ANR	8176055	IdentifierDecl	strioc_ppa		8176006	1					
ANR	8176056	IdentifierDeclType	struct strioctl		8176006	0					
ANR	8176057	Identifier	strioc_ppa		8176006	1					
ANR	8176058	IdentifierDeclStatement	int link_type = I_PLINK ;	19:4:239:262	8176006	8	True				
ANR	8176059	IdentifierDecl	link_type = I_PLINK		8176006	0					
ANR	8176060	IdentifierDeclType	int		8176006	0					
ANR	8176061	Identifier	link_type		8176006	1					
ANR	8176062	AssignmentExpression	link_type = I_PLINK		8176006	2		=			
ANR	8176063	Identifier	I_PLINK		8176006	0					
ANR	8176064	Identifier	I_PLINK		8176006	1					
ANR	8176065	IdentifierDeclStatement	struct lifreq ifr ;	21:4:269:286	8176006	9	True				
ANR	8176066	IdentifierDecl	ifr		8176006	0					
ANR	8176067	IdentifierDeclType	struct lifreq		8176006	0					
ANR	8176068	Identifier	ifr		8176006	1					
ANR	8176069	IdentifierDeclStatement	"char actual_name [ 32 ] = """" ;"	23:4:293:318	8176006	10	True				
ANR	8176070	IdentifierDecl	"actual_name [ 32 ] = """""		8176006	0					
ANR	8176071	IdentifierDeclType	char [ 32 ]		8176006	0					
ANR	8176072	Identifier	actual_name		8176006	1					
ANR	8176073	PrimaryExpression	32		8176006	2					
ANR	8176074	AssignmentExpression	"actual_name [ 32 ] = """""		8176006	3		=			
ANR	8176075	Identifier	actual_name		8176006	0					
ANR	8176076	PrimaryExpression	""""""		8176006	1					
ANR	8176077	ExpressionStatement	"memset ( & ifr , 0x0 , sizeof ( ifr ) )"	27:4:327:357	8176006	11	True				
ANR	8176078	CallExpression	"memset ( & ifr , 0x0 , sizeof ( ifr ) )"		8176006	0					
ANR	8176079	Callee	memset		8176006	0					
ANR	8176080	Identifier	memset		8176006	0					
ANR	8176081	ArgumentList	& ifr		8176006	1					
ANR	8176082	Argument	& ifr		8176006	0					
ANR	8176083	UnaryOperationExpression	& ifr		8176006	0					
ANR	8176084	UnaryOperator	&		8176006	0					
ANR	8176085	Identifier	ifr		8176006	1					
ANR	8176086	Argument	0x0		8176006	1					
ANR	8176087	PrimaryExpression	0x0		8176006	0					
ANR	8176088	Argument	sizeof ( ifr )		8176006	2					
ANR	8176089	SizeofExpression	sizeof ( ifr )		8176006	0					
ANR	8176090	Sizeof	sizeof		8176006	0					
ANR	8176091	SizeofOperand	ifr		8176006	1					
ANR	8176092	IfStatement	if ( * dev )		8176006	12					
ANR	8176093	Condition	* dev	31:8:370:373	8176006	0	True				
ANR	8176094	UnaryOperationExpression	* dev		8176006	0					
ANR	8176095	UnaryOperator	*		8176006	0					
ANR	8176096	Identifier	dev		8176006	1					
ANR	8176097	CompoundStatement		29:14:325:325	8176006	1					
ANR	8176098	ExpressionStatement	ptr = dev	33:7:386:395	8176006	0	True				
ANR	8176099	AssignmentExpression	ptr = dev		8176006	0		=			
ANR	8176100	Identifier	ptr		8176006	0					
ANR	8176101	Identifier	dev		8176006	1					
ANR	8176102	WhileStatement	while ( * ptr && ! qemu_isdigit ( ( int ) * ptr ) )		8176006	1					
ANR	8176103	Condition	* ptr && ! qemu_isdigit ( ( int ) * ptr )	35:14:412:443	8176006	0	True				
ANR	8176104	AndExpression	* ptr && ! qemu_isdigit ( ( int ) * ptr )		8176006	0		&&			
ANR	8176105	UnaryOperationExpression	* ptr		8176006	0					
ANR	8176106	UnaryOperator	*		8176006	0					
ANR	8176107	Identifier	ptr		8176006	1					
ANR	8176108	UnaryOperationExpression	! qemu_isdigit ( ( int ) * ptr )		8176006	1					
ANR	8176109	UnaryOperator	!		8176006	0					
ANR	8176110	CallExpression	qemu_isdigit ( ( int ) * ptr )		8176006	1					
ANR	8176111	Callee	qemu_isdigit		8176006	0					
ANR	8176112	Identifier	qemu_isdigit		8176006	0					
ANR	8176113	ArgumentList	( int ) * ptr		8176006	1					
ANR	8176114	Argument	( int ) * ptr		8176006	0					
ANR	8176115	CastExpression	( int ) * ptr		8176006	0					
ANR	8176116	CastTarget	int		8176006	0					
ANR	8176117	UnaryOperationExpression	* ptr		8176006	1					
ANR	8176118	UnaryOperator	*		8176006	0					
ANR	8176119	Identifier	ptr		8176006	1					
ANR	8176120	ExpressionStatement	ptr ++	35:49:447:452	8176006	1	True				
ANR	8176121	PostIncDecOperationExpression	ptr ++		8176006	0					
ANR	8176122	Identifier	ptr		8176006	0					
ANR	8176123	IncDec	++		8176006	1					
ANR	8176124	ExpressionStatement	ppa = atoi ( ptr )	37:7:462:477	8176006	2	True				
ANR	8176125	AssignmentExpression	ppa = atoi ( ptr )		8176006	0		=			
ANR	8176126	Identifier	ppa		8176006	0					
ANR	8176127	CallExpression	atoi ( ptr )		8176006	1					
ANR	8176128	Callee	atoi		8176006	0					
ANR	8176129	Identifier	atoi		8176006	0					
ANR	8176130	ArgumentList	ptr		8176006	1					
ANR	8176131	Argument	ptr		8176006	0					
ANR	8176132	Identifier	ptr		8176006	0					
ANR	8176133	IfStatement	if ( ip_fd )		8176006	13					
ANR	8176134	Condition	ip_fd	45:8:538:542	8176006	0	True				
ANR	8176135	Identifier	ip_fd		8176006	0					
ANR	8176136	ExpressionStatement	close ( ip_fd )	47:7:554:566	8176006	1	True				
ANR	8176137	CallExpression	close ( ip_fd )		8176006	0					
ANR	8176138	Callee	close		8176006	0					
ANR	8176139	Identifier	close		8176006	0					
ANR	8176140	ArgumentList	ip_fd		8176006	1					
ANR	8176141	Argument	ip_fd		8176006	0					
ANR	8176142	Identifier	ip_fd		8176006	0					
ANR	8176143	ExpressionStatement	"TFR ( ip_fd = open ( ""/dev/udp"" , O_RDWR , 0 ) )"	51:4:575:615	8176006	14	True				
ANR	8176144	CallExpression	"TFR ( ip_fd = open ( ""/dev/udp"" , O_RDWR , 0 ) )"		8176006	0					
ANR	8176145	Callee	TFR		8176006	0					
ANR	8176146	Identifier	TFR		8176006	0					
ANR	8176147	ArgumentList	"ip_fd = open ( ""/dev/udp"" , O_RDWR , 0 )"		8176006	1					
ANR	8176148	Argument	"ip_fd = open ( ""/dev/udp"" , O_RDWR , 0 )"		8176006	0					
ANR	8176149	AssignmentExpression	"ip_fd = open ( ""/dev/udp"" , O_RDWR , 0 )"		8176006	0		=			
ANR	8176150	Identifier	ip_fd		8176006	0					
ANR	8176151	CallExpression	"open ( ""/dev/udp"" , O_RDWR , 0 )"		8176006	1					
ANR	8176152	Callee	open		8176006	0					
ANR	8176153	Identifier	open		8176006	0					
ANR	8176154	ArgumentList	"""/dev/udp"""		8176006	1					
ANR	8176155	Argument	"""/dev/udp"""		8176006	0					
ANR	8176156	PrimaryExpression	"""/dev/udp"""		8176006	0					
ANR	8176157	Argument	O_RDWR		8176006	1					
ANR	8176158	Identifier	O_RDWR		8176006	0					
ANR	8176159	Argument	0		8176006	2					
ANR	8176160	PrimaryExpression	0		8176006	0					
ANR	8176161	IfStatement	if ( ip_fd < 0 )		8176006	15					
ANR	8176162	Condition	ip_fd < 0	53:8:626:634	8176006	0	True				
ANR	8176163	RelationalExpression	ip_fd < 0		8176006	0		<			
ANR	8176164	Identifier	ip_fd		8176006	0					
ANR	8176165	PrimaryExpression	0		8176006	1					
ANR	8176166	CompoundStatement		51:19:586:586	8176006	1					
ANR	8176167	ExpressionStatement	"syslog ( LOG_ERR , ""Can't open /dev/ip (actually /dev/udp)"" )"	55:7:647:704	8176006	0	True				
ANR	8176168	CallExpression	"syslog ( LOG_ERR , ""Can't open /dev/ip (actually /dev/udp)"" )"		8176006	0					
ANR	8176169	Callee	syslog		8176006	0					
ANR	8176170	Identifier	syslog		8176006	0					
ANR	8176171	ArgumentList	LOG_ERR		8176006	1					
ANR	8176172	Argument	LOG_ERR		8176006	0					
ANR	8176173	Identifier	LOG_ERR		8176006	0					
ANR	8176174	Argument	"""Can't open /dev/ip (actually /dev/udp)"""		8176006	1					
ANR	8176175	PrimaryExpression	"""Can't open /dev/ip (actually /dev/udp)"""		8176006	0					
ANR	8176176	ReturnStatement	return - 1 ;	57:7:714:723	8176006	1	True				
ANR	8176177	UnaryOperationExpression	- 1		8176006	0					
ANR	8176178	UnaryOperator	-		8176006	0					
ANR	8176179	PrimaryExpression	1		8176006	1					
ANR	8176180	ExpressionStatement	"TFR ( tap_fd = open ( ""/dev/tap"" , O_RDWR , 0 ) )"	63:4:739:780	8176006	16	True				
ANR	8176181	CallExpression	"TFR ( tap_fd = open ( ""/dev/tap"" , O_RDWR , 0 ) )"		8176006	0					
ANR	8176182	Callee	TFR		8176006	0					
ANR	8176183	Identifier	TFR		8176006	0					
ANR	8176184	ArgumentList	"tap_fd = open ( ""/dev/tap"" , O_RDWR , 0 )"		8176006	1					
ANR	8176185	Argument	"tap_fd = open ( ""/dev/tap"" , O_RDWR , 0 )"		8176006	0					
ANR	8176186	AssignmentExpression	"tap_fd = open ( ""/dev/tap"" , O_RDWR , 0 )"		8176006	0		=			
ANR	8176187	Identifier	tap_fd		8176006	0					
ANR	8176188	CallExpression	"open ( ""/dev/tap"" , O_RDWR , 0 )"		8176006	1					
ANR	8176189	Callee	open		8176006	0					
ANR	8176190	Identifier	open		8176006	0					
ANR	8176191	ArgumentList	"""/dev/tap"""		8176006	1					
ANR	8176192	Argument	"""/dev/tap"""		8176006	0					
ANR	8176193	PrimaryExpression	"""/dev/tap"""		8176006	0					
ANR	8176194	Argument	O_RDWR		8176006	1					
ANR	8176195	Identifier	O_RDWR		8176006	0					
ANR	8176196	Argument	0		8176006	2					
ANR	8176197	PrimaryExpression	0		8176006	0					
ANR	8176198	IfStatement	if ( tap_fd < 0 )		8176006	17					
ANR	8176199	Condition	tap_fd < 0	65:8:791:800	8176006	0	True				
ANR	8176200	RelationalExpression	tap_fd < 0		8176006	0		<			
ANR	8176201	Identifier	tap_fd		8176006	0					
ANR	8176202	PrimaryExpression	0		8176006	1					
ANR	8176203	CompoundStatement		63:20:752:752	8176006	1					
ANR	8176204	ExpressionStatement	"syslog ( LOG_ERR , ""Can't open /dev/tap"" )"	67:7:813:851	8176006	0	True				
ANR	8176205	CallExpression	"syslog ( LOG_ERR , ""Can't open /dev/tap"" )"		8176006	0					
ANR	8176206	Callee	syslog		8176006	0					
ANR	8176207	Identifier	syslog		8176006	0					
ANR	8176208	ArgumentList	LOG_ERR		8176006	1					
ANR	8176209	Argument	LOG_ERR		8176006	0					
ANR	8176210	Identifier	LOG_ERR		8176006	0					
ANR	8176211	Argument	"""Can't open /dev/tap"""		8176006	1					
ANR	8176212	PrimaryExpression	"""Can't open /dev/tap"""		8176006	0					
ANR	8176213	ReturnStatement	return - 1 ;	69:7:861:870	8176006	1	True				
ANR	8176214	UnaryOperationExpression	- 1		8176006	0					
ANR	8176215	UnaryOperator	-		8176006	0					
ANR	8176216	PrimaryExpression	1		8176006	1					
ANR	8176217	ExpressionStatement	strioc_ppa . ic_cmd = TUNNEWPPA	77:4:939:968	8176006	18	True				
ANR	8176218	AssignmentExpression	strioc_ppa . ic_cmd = TUNNEWPPA		8176006	0		=			
ANR	8176219	MemberAccess	strioc_ppa . ic_cmd		8176006	0					
ANR	8176220	Identifier	strioc_ppa		8176006	0					
ANR	8176221	Identifier	ic_cmd		8176006	1					
ANR	8176222	Identifier	TUNNEWPPA		8176006	1					
ANR	8176223	ExpressionStatement	strioc_ppa . ic_timout = 0	79:4:975:999	8176006	19	True				
ANR	8176224	AssignmentExpression	strioc_ppa . ic_timout = 0		8176006	0		=			
ANR	8176225	MemberAccess	strioc_ppa . ic_timout		8176006	0					
ANR	8176226	Identifier	strioc_ppa		8176006	0					
ANR	8176227	Identifier	ic_timout		8176006	1					
ANR	8176228	PrimaryExpression	0		8176006	1					
ANR	8176229	ExpressionStatement	strioc_ppa . ic_len = sizeof ( ppa )	81:4:1006:1037	8176006	20	True				
ANR	8176230	AssignmentExpression	strioc_ppa . ic_len = sizeof ( ppa )		8176006	0		=			
ANR	8176231	MemberAccess	strioc_ppa . ic_len		8176006	0					
ANR	8176232	Identifier	strioc_ppa		8176006	0					
ANR	8176233	Identifier	ic_len		8176006	1					
ANR	8176234	SizeofExpression	sizeof ( ppa )		8176006	1					
ANR	8176235	Sizeof	sizeof		8176006	0					
ANR	8176236	SizeofOperand	ppa		8176006	1					
ANR	8176237	ExpressionStatement	strioc_ppa . ic_dp = ( char * ) & ppa	83:4:1044:1075	8176006	21	True				
ANR	8176238	AssignmentExpression	strioc_ppa . ic_dp = ( char * ) & ppa		8176006	0		=			
ANR	8176239	MemberAccess	strioc_ppa . ic_dp		8176006	0					
ANR	8176240	Identifier	strioc_ppa		8176006	0					
ANR	8176241	Identifier	ic_dp		8176006	1					
ANR	8176242	CastExpression	( char * ) & ppa		8176006	1					
ANR	8176243	CastTarget	char *		8176006	0					
ANR	8176244	UnaryOperationExpression	& ppa		8176006	1					
ANR	8176245	UnaryOperator	&		8176006	0					
ANR	8176246	Identifier	ppa		8176006	1					
ANR	8176247	IfStatement	"if ( ( ppa = ioctl ( tap_fd , I_STR , & strioc_ppa ) ) < 0 )"		8176006	22					
ANR	8176248	Condition	"( ppa = ioctl ( tap_fd , I_STR , & strioc_ppa ) ) < 0"	85:8:1086:1131	8176006	0	True				
ANR	8176249	RelationalExpression	"( ppa = ioctl ( tap_fd , I_STR , & strioc_ppa ) ) < 0"		8176006	0		<			
ANR	8176250	AssignmentExpression	"ppa = ioctl ( tap_fd , I_STR , & strioc_ppa )"		8176006	0		=			
ANR	8176251	Identifier	ppa		8176006	0					
ANR	8176252	CallExpression	"ioctl ( tap_fd , I_STR , & strioc_ppa )"		8176006	1					
ANR	8176253	Callee	ioctl		8176006	0					
ANR	8176254	Identifier	ioctl		8176006	0					
ANR	8176255	ArgumentList	tap_fd		8176006	1					
ANR	8176256	Argument	tap_fd		8176006	0					
ANR	8176257	Identifier	tap_fd		8176006	0					
ANR	8176258	Argument	I_STR		8176006	1					
ANR	8176259	Identifier	I_STR		8176006	0					
ANR	8176260	Argument	& strioc_ppa		8176006	2					
ANR	8176261	UnaryOperationExpression	& strioc_ppa		8176006	0					
ANR	8176262	UnaryOperator	&		8176006	0					
ANR	8176263	Identifier	strioc_ppa		8176006	1					
ANR	8176264	PrimaryExpression	0		8176006	1					
ANR	8176265	ExpressionStatement	"syslog ( LOG_ERR , ""Can't assign new interface"" )"	87:7:1142:1188	8176006	1	True				
ANR	8176266	CallExpression	"syslog ( LOG_ERR , ""Can't assign new interface"" )"		8176006	0					
ANR	8176267	Callee	syslog		8176006	0					
ANR	8176268	Identifier	syslog		8176006	0					
ANR	8176269	ArgumentList	LOG_ERR		8176006	1					
ANR	8176270	Argument	LOG_ERR		8176006	0					
ANR	8176271	Identifier	LOG_ERR		8176006	0					
ANR	8176272	Argument	"""Can't assign new interface"""		8176006	1					
ANR	8176273	PrimaryExpression	"""Can't assign new interface"""		8176006	0					
ANR	8176274	ExpressionStatement	"TFR ( if_fd = open ( ""/dev/tap"" , O_RDWR , 0 ) )"	91:4:1197:1237	8176006	23	True				
ANR	8176275	CallExpression	"TFR ( if_fd = open ( ""/dev/tap"" , O_RDWR , 0 ) )"		8176006	0					
ANR	8176276	Callee	TFR		8176006	0					
ANR	8176277	Identifier	TFR		8176006	0					
ANR	8176278	ArgumentList	"if_fd = open ( ""/dev/tap"" , O_RDWR , 0 )"		8176006	1					
ANR	8176279	Argument	"if_fd = open ( ""/dev/tap"" , O_RDWR , 0 )"		8176006	0					
ANR	8176280	AssignmentExpression	"if_fd = open ( ""/dev/tap"" , O_RDWR , 0 )"		8176006	0		=			
ANR	8176281	Identifier	if_fd		8176006	0					
ANR	8176282	CallExpression	"open ( ""/dev/tap"" , O_RDWR , 0 )"		8176006	1					
ANR	8176283	Callee	open		8176006	0					
ANR	8176284	Identifier	open		8176006	0					
ANR	8176285	ArgumentList	"""/dev/tap"""		8176006	1					
ANR	8176286	Argument	"""/dev/tap"""		8176006	0					
ANR	8176287	PrimaryExpression	"""/dev/tap"""		8176006	0					
ANR	8176288	Argument	O_RDWR		8176006	1					
ANR	8176289	Identifier	O_RDWR		8176006	0					
ANR	8176290	Argument	0		8176006	2					
ANR	8176291	PrimaryExpression	0		8176006	0					
ANR	8176292	IfStatement	if ( if_fd < 0 )		8176006	24					
ANR	8176293	Condition	if_fd < 0	93:8:1248:1256	8176006	0	True				
ANR	8176294	RelationalExpression	if_fd < 0		8176006	0		<			
ANR	8176295	Identifier	if_fd		8176006	0					
ANR	8176296	PrimaryExpression	0		8176006	1					
ANR	8176297	CompoundStatement		91:19:1208:1208	8176006	1					
ANR	8176298	ExpressionStatement	"syslog ( LOG_ERR , ""Can't open /dev/tap (2)"" )"	95:7:1269:1311	8176006	0	True				
ANR	8176299	CallExpression	"syslog ( LOG_ERR , ""Can't open /dev/tap (2)"" )"		8176006	0					
ANR	8176300	Callee	syslog		8176006	0					
ANR	8176301	Identifier	syslog		8176006	0					
ANR	8176302	ArgumentList	LOG_ERR		8176006	1					
ANR	8176303	Argument	LOG_ERR		8176006	0					
ANR	8176304	Identifier	LOG_ERR		8176006	0					
ANR	8176305	Argument	"""Can't open /dev/tap (2)"""		8176006	1					
ANR	8176306	PrimaryExpression	"""Can't open /dev/tap (2)"""		8176006	0					
ANR	8176307	ReturnStatement	return - 1 ;	97:7:1321:1330	8176006	1	True				
ANR	8176308	UnaryOperationExpression	- 1		8176006	0					
ANR	8176309	UnaryOperator	-		8176006	0					
ANR	8176310	PrimaryExpression	1		8176006	1					
ANR	8176311	IfStatement	"if ( ioctl ( if_fd , I_PUSH , ""ip"" ) < 0 )"		8176006	25					
ANR	8176312	Condition	"ioctl ( if_fd , I_PUSH , ""ip"" ) < 0"	101:7:1347:1376	8176006	0	True				
ANR	8176313	RelationalExpression	"ioctl ( if_fd , I_PUSH , ""ip"" ) < 0"		8176006	0		<			
ANR	8176314	CallExpression	"ioctl ( if_fd , I_PUSH , ""ip"" )"		8176006	0					
ANR	8176315	Callee	ioctl		8176006	0					
ANR	8176316	Identifier	ioctl		8176006	0					
ANR	8176317	ArgumentList	if_fd		8176006	1					
ANR	8176318	Argument	if_fd		8176006	0					
ANR	8176319	Identifier	if_fd		8176006	0					
ANR	8176320	Argument	I_PUSH		8176006	1					
ANR	8176321	Identifier	I_PUSH		8176006	0					
ANR	8176322	Argument	"""ip"""		8176006	2					
ANR	8176323	PrimaryExpression	"""ip"""		8176006	0					
ANR	8176324	PrimaryExpression	0		8176006	1					
ANR	8176325	CompoundStatement		99:38:1327:1327	8176006	1					
ANR	8176326	ExpressionStatement	"syslog ( LOG_ERR , ""Can't push IP module"" )"	103:7:1388:1427	8176006	0	True				
ANR	8176327	CallExpression	"syslog ( LOG_ERR , ""Can't push IP module"" )"		8176006	0					
ANR	8176328	Callee	syslog		8176006	0					
ANR	8176329	Identifier	syslog		8176006	0					
ANR	8176330	ArgumentList	LOG_ERR		8176006	1					
ANR	8176331	Argument	LOG_ERR		8176006	0					
ANR	8176332	Identifier	LOG_ERR		8176006	0					
ANR	8176333	Argument	"""Can't push IP module"""		8176006	1					
ANR	8176334	PrimaryExpression	"""Can't push IP module"""		8176006	0					
ANR	8176335	ReturnStatement	return - 1 ;	105:7:1437:1446	8176006	1	True				
ANR	8176336	UnaryOperationExpression	- 1		8176006	0					
ANR	8176337	UnaryOperator	-		8176006	0					
ANR	8176338	PrimaryExpression	1		8176006	1					
ANR	8176339	IfStatement	"if ( ioctl ( if_fd , SIOCGLIFFLAGS , & ifr ) < 0 )"		8176006	26					
ANR	8176340	Condition	"ioctl ( if_fd , SIOCGLIFFLAGS , & ifr ) < 0"	111:8:1466:1502	8176006	0	True				
ANR	8176341	RelationalExpression	"ioctl ( if_fd , SIOCGLIFFLAGS , & ifr ) < 0"		8176006	0		<			
ANR	8176342	CallExpression	"ioctl ( if_fd , SIOCGLIFFLAGS , & ifr )"		8176006	0					
ANR	8176343	Callee	ioctl		8176006	0					
ANR	8176344	Identifier	ioctl		8176006	0					
ANR	8176345	ArgumentList	if_fd		8176006	1					
ANR	8176346	Argument	if_fd		8176006	0					
ANR	8176347	Identifier	if_fd		8176006	0					
ANR	8176348	Argument	SIOCGLIFFLAGS		8176006	1					
ANR	8176349	Identifier	SIOCGLIFFLAGS		8176006	0					
ANR	8176350	Argument	& ifr		8176006	2					
ANR	8176351	UnaryOperationExpression	& ifr		8176006	0					
ANR	8176352	UnaryOperator	&		8176006	0					
ANR	8176353	Identifier	ifr		8176006	1					
ANR	8176354	PrimaryExpression	0		8176006	1					
ANR	8176355	ExpressionStatement	"syslog ( LOG_ERR , ""Can't get flags\\n"" )"	113:1:1507:1543	8176006	1	True				
ANR	8176356	CallExpression	"syslog ( LOG_ERR , ""Can't get flags\\n"" )"		8176006	0					
ANR	8176357	Callee	syslog		8176006	0					
ANR	8176358	Identifier	syslog		8176006	0					
ANR	8176359	ArgumentList	LOG_ERR		8176006	1					
ANR	8176360	Argument	LOG_ERR		8176006	0					
ANR	8176361	Identifier	LOG_ERR		8176006	0					
ANR	8176362	Argument	"""Can't get flags\\n"""		8176006	1					
ANR	8176363	PrimaryExpression	"""Can't get flags\\n"""		8176006	0					
ANR	8176364	ExpressionStatement	"snprintf ( actual_name , 32 , ""tap%d"" , ppa )"	117:4:1552:1592	8176006	27	True				
ANR	8176365	CallExpression	"snprintf ( actual_name , 32 , ""tap%d"" , ppa )"		8176006	0					
ANR	8176366	Callee	snprintf		8176006	0					
ANR	8176367	Identifier	snprintf		8176006	0					
ANR	8176368	ArgumentList	actual_name		8176006	1					
ANR	8176369	Argument	actual_name		8176006	0					
ANR	8176370	Identifier	actual_name		8176006	0					
ANR	8176371	Argument	32		8176006	1					
ANR	8176372	PrimaryExpression	32		8176006	0					
ANR	8176373	Argument	"""tap%d"""		8176006	2					
ANR	8176374	PrimaryExpression	"""tap%d"""		8176006	0					
ANR	8176375	Argument	ppa		8176006	3					
ANR	8176376	Identifier	ppa		8176006	0					
ANR	8176377	ExpressionStatement	"pstrcpy ( ifr . lifr_name , sizeof ( ifr . lifr_name ) , actual_name )"	119:4:1599:1657	8176006	28	True				
ANR	8176378	CallExpression	"pstrcpy ( ifr . lifr_name , sizeof ( ifr . lifr_name ) , actual_name )"		8176006	0					
ANR	8176379	Callee	pstrcpy		8176006	0					
ANR	8176380	Identifier	pstrcpy		8176006	0					
ANR	8176381	ArgumentList	ifr . lifr_name		8176006	1					
ANR	8176382	Argument	ifr . lifr_name		8176006	0					
ANR	8176383	MemberAccess	ifr . lifr_name		8176006	0					
ANR	8176384	Identifier	ifr		8176006	0					
ANR	8176385	Identifier	lifr_name		8176006	1					
ANR	8176386	Argument	sizeof ( ifr . lifr_name )		8176006	1					
ANR	8176387	SizeofExpression	sizeof ( ifr . lifr_name )		8176006	0					
ANR	8176388	Sizeof	sizeof		8176006	0					
ANR	8176389	MemberAccess	ifr . lifr_name		8176006	1					
ANR	8176390	Identifier	ifr		8176006	0					
ANR	8176391	Identifier	lifr_name		8176006	1					
ANR	8176392	Argument	actual_name		8176006	2					
ANR	8176393	Identifier	actual_name		8176006	0					
ANR	8176394	ExpressionStatement	ifr . lifr_ppa = ppa	123:4:1666:1684	8176006	29	True				
ANR	8176395	AssignmentExpression	ifr . lifr_ppa = ppa		8176006	0		=			
ANR	8176396	MemberAccess	ifr . lifr_ppa		8176006	0					
ANR	8176397	Identifier	ifr		8176006	0					
ANR	8176398	Identifier	lifr_ppa		8176006	1					
ANR	8176399	Identifier	ppa		8176006	1					
ANR	8176400	IfStatement	"if ( ioctl ( if_fd , SIOCSLIFNAME , & ifr ) < 0 )"		8176006	30					
ANR	8176401	Condition	"ioctl ( if_fd , SIOCSLIFNAME , & ifr ) < 0"	129:8:1771:1807	8176006	0	True				
ANR	8176402	RelationalExpression	"ioctl ( if_fd , SIOCSLIFNAME , & ifr ) < 0"		8176006	0		<			
ANR	8176403	CallExpression	"ioctl ( if_fd , SIOCSLIFNAME , & ifr )"		8176006	0					
ANR	8176404	Callee	ioctl		8176006	0					
ANR	8176405	Identifier	ioctl		8176006	0					
ANR	8176406	ArgumentList	if_fd		8176006	1					
ANR	8176407	Argument	if_fd		8176006	0					
ANR	8176408	Identifier	if_fd		8176006	0					
ANR	8176409	Argument	SIOCSLIFNAME		8176006	1					
ANR	8176410	Identifier	SIOCSLIFNAME		8176006	0					
ANR	8176411	Argument	& ifr		8176006	2					
ANR	8176412	UnaryOperationExpression	& ifr		8176006	0					
ANR	8176413	UnaryOperator	&		8176006	0					
ANR	8176414	Identifier	ifr		8176006	1					
ANR	8176415	PrimaryExpression	0		8176006	1					
ANR	8176416	ExpressionStatement	"syslog ( LOG_ERR , ""Can't set PPA %d"" , ppa )"	131:8:1819:1860	8176006	1	True				
ANR	8176417	CallExpression	"syslog ( LOG_ERR , ""Can't set PPA %d"" , ppa )"		8176006	0					
ANR	8176418	Callee	syslog		8176006	0					
ANR	8176419	Identifier	syslog		8176006	0					
ANR	8176420	ArgumentList	LOG_ERR		8176006	1					
ANR	8176421	Argument	LOG_ERR		8176006	0					
ANR	8176422	Identifier	LOG_ERR		8176006	0					
ANR	8176423	Argument	"""Can't set PPA %d"""		8176006	1					
ANR	8176424	PrimaryExpression	"""Can't set PPA %d"""		8176006	0					
ANR	8176425	Argument	ppa		8176006	2					
ANR	8176426	Identifier	ppa		8176006	0					
ANR	8176427	IfStatement	"if ( ioctl ( if_fd , SIOCGLIFFLAGS , & ifr ) < 0 )"		8176006	31					
ANR	8176428	Condition	"ioctl ( if_fd , SIOCGLIFFLAGS , & ifr ) < 0"	133:8:1871:1906	8176006	0	True				
ANR	8176429	RelationalExpression	"ioctl ( if_fd , SIOCGLIFFLAGS , & ifr ) < 0"		8176006	0		<			
ANR	8176430	CallExpression	"ioctl ( if_fd , SIOCGLIFFLAGS , & ifr )"		8176006	0					
ANR	8176431	Callee	ioctl		8176006	0					
ANR	8176432	Identifier	ioctl		8176006	0					
ANR	8176433	ArgumentList	if_fd		8176006	1					
ANR	8176434	Argument	if_fd		8176006	0					
ANR	8176435	Identifier	if_fd		8176006	0					
ANR	8176436	Argument	SIOCGLIFFLAGS		8176006	1					
ANR	8176437	Identifier	SIOCGLIFFLAGS		8176006	0					
ANR	8176438	Argument	& ifr		8176006	2					
ANR	8176439	UnaryOperationExpression	& ifr		8176006	0					
ANR	8176440	UnaryOperator	&		8176006	0					
ANR	8176441	Identifier	ifr		8176006	1					
ANR	8176442	PrimaryExpression	0		8176006	1					
ANR	8176443	ExpressionStatement	"syslog ( LOG_ERR , ""Can't get flags\\n"" )"	135:8:1918:1955	8176006	1	True				
ANR	8176444	CallExpression	"syslog ( LOG_ERR , ""Can't get flags\\n"" )"		8176006	0					
ANR	8176445	Callee	syslog		8176006	0					
ANR	8176446	Identifier	syslog		8176006	0					
ANR	8176447	ArgumentList	LOG_ERR		8176006	1					
ANR	8176448	Argument	LOG_ERR		8176006	0					
ANR	8176449	Identifier	LOG_ERR		8176006	0					
ANR	8176450	Argument	"""Can't get flags\\n"""		8176006	1					
ANR	8176451	PrimaryExpression	"""Can't get flags\\n"""		8176006	0					
ANR	8176452	IfStatement	"if ( ioctl ( if_fd , I_PUSH , ""arp"" ) < 0 )"		8176006	32					
ANR	8176453	Condition	"ioctl ( if_fd , I_PUSH , ""arp"" ) < 0"	139:8:2002:2033	8176006	0	True				
ANR	8176454	RelationalExpression	"ioctl ( if_fd , I_PUSH , ""arp"" ) < 0"		8176006	0		<			
ANR	8176455	CallExpression	"ioctl ( if_fd , I_PUSH , ""arp"" )"		8176006	0					
ANR	8176456	Callee	ioctl		8176006	0					
ANR	8176457	Identifier	ioctl		8176006	0					
ANR	8176458	ArgumentList	if_fd		8176006	1					
ANR	8176459	Argument	if_fd		8176006	0					
ANR	8176460	Identifier	if_fd		8176006	0					
ANR	8176461	Argument	I_PUSH		8176006	1					
ANR	8176462	Identifier	I_PUSH		8176006	0					
ANR	8176463	Argument	"""arp"""		8176006	2					
ANR	8176464	PrimaryExpression	"""arp"""		8176006	0					
ANR	8176465	PrimaryExpression	0		8176006	1					
ANR	8176466	ExpressionStatement	"syslog ( LOG_ERR , ""Can't push ARP module (2)"" )"	141:8:2045:2090	8176006	1	True				
ANR	8176467	CallExpression	"syslog ( LOG_ERR , ""Can't push ARP module (2)"" )"		8176006	0					
ANR	8176468	Callee	syslog		8176006	0					
ANR	8176469	Identifier	syslog		8176006	0					
ANR	8176470	ArgumentList	LOG_ERR		8176006	1					
ANR	8176471	Argument	LOG_ERR		8176006	0					
ANR	8176472	Identifier	LOG_ERR		8176006	0					
ANR	8176473	Argument	"""Can't push ARP module (2)"""		8176006	1					
ANR	8176474	PrimaryExpression	"""Can't push ARP module (2)"""		8176006	0					
ANR	8176475	IfStatement	"if ( ioctl ( ip_fd , I_POP , NULL ) < 0 )"		8176006	33					
ANR	8176476	Condition	"ioctl ( ip_fd , I_POP , NULL ) < 0"	147:8:2139:2168	8176006	0	True				
ANR	8176477	RelationalExpression	"ioctl ( ip_fd , I_POP , NULL ) < 0"		8176006	0		<			
ANR	8176478	CallExpression	"ioctl ( ip_fd , I_POP , NULL )"		8176006	0					
ANR	8176479	Callee	ioctl		8176006	0					
ANR	8176480	Identifier	ioctl		8176006	0					
ANR	8176481	ArgumentList	ip_fd		8176006	1					
ANR	8176482	Argument	ip_fd		8176006	0					
ANR	8176483	Identifier	ip_fd		8176006	0					
ANR	8176484	Argument	I_POP		8176006	1					
ANR	8176485	Identifier	I_POP		8176006	0					
ANR	8176486	Argument	NULL		8176006	2					
ANR	8176487	Identifier	NULL		8176006	0					
ANR	8176488	PrimaryExpression	0		8176006	1					
ANR	8176489	ExpressionStatement	"syslog ( LOG_ERR , ""I_POP failed\\n"" )"	149:8:2180:2214	8176006	1	True				
ANR	8176490	CallExpression	"syslog ( LOG_ERR , ""I_POP failed\\n"" )"		8176006	0					
ANR	8176491	Callee	syslog		8176006	0					
ANR	8176492	Identifier	syslog		8176006	0					
ANR	8176493	ArgumentList	LOG_ERR		8176006	1					
ANR	8176494	Argument	LOG_ERR		8176006	0					
ANR	8176495	Identifier	LOG_ERR		8176006	0					
ANR	8176496	Argument	"""I_POP failed\\n"""		8176006	1					
ANR	8176497	PrimaryExpression	"""I_POP failed\\n"""		8176006	0					
ANR	8176498	IfStatement	"if ( ioctl ( ip_fd , I_PUSH , ""arp"" ) < 0 )"		8176006	34					
ANR	8176499	Condition	"ioctl ( ip_fd , I_PUSH , ""arp"" ) < 0"	151:8:2225:2256	8176006	0	True				
ANR	8176500	RelationalExpression	"ioctl ( ip_fd , I_PUSH , ""arp"" ) < 0"		8176006	0		<			
ANR	8176501	CallExpression	"ioctl ( ip_fd , I_PUSH , ""arp"" )"		8176006	0					
ANR	8176502	Callee	ioctl		8176006	0					
ANR	8176503	Identifier	ioctl		8176006	0					
ANR	8176504	ArgumentList	ip_fd		8176006	1					
ANR	8176505	Argument	ip_fd		8176006	0					
ANR	8176506	Identifier	ip_fd		8176006	0					
ANR	8176507	Argument	I_PUSH		8176006	1					
ANR	8176508	Identifier	I_PUSH		8176006	0					
ANR	8176509	Argument	"""arp"""		8176006	2					
ANR	8176510	PrimaryExpression	"""arp"""		8176006	0					
ANR	8176511	PrimaryExpression	0		8176006	1					
ANR	8176512	ExpressionStatement	"syslog ( LOG_ERR , ""Can't push ARP module (3)\\n"" )"	153:8:2268:2315	8176006	1	True				
ANR	8176513	CallExpression	"syslog ( LOG_ERR , ""Can't push ARP module (3)\\n"" )"		8176006	0					
ANR	8176514	Callee	syslog		8176006	0					
ANR	8176515	Identifier	syslog		8176006	0					
ANR	8176516	ArgumentList	LOG_ERR		8176006	1					
ANR	8176517	Argument	LOG_ERR		8176006	0					
ANR	8176518	Identifier	LOG_ERR		8176006	0					
ANR	8176519	Argument	"""Can't push ARP module (3)\\n"""		8176006	1					
ANR	8176520	PrimaryExpression	"""Can't push ARP module (3)\\n"""		8176006	0					
ANR	8176521	ExpressionStatement	"TFR ( arp_fd = open ( ""/dev/tap"" , O_RDWR , 0 ) )"	157:4:2345:2387	8176006	35	True				
ANR	8176522	CallExpression	"TFR ( arp_fd = open ( ""/dev/tap"" , O_RDWR , 0 ) )"		8176006	0					
ANR	8176523	Callee	TFR		8176006	0					
ANR	8176524	Identifier	TFR		8176006	0					
ANR	8176525	ArgumentList	"arp_fd = open ( ""/dev/tap"" , O_RDWR , 0 )"		8176006	1					
ANR	8176526	Argument	"arp_fd = open ( ""/dev/tap"" , O_RDWR , 0 )"		8176006	0					
ANR	8176527	AssignmentExpression	"arp_fd = open ( ""/dev/tap"" , O_RDWR , 0 )"		8176006	0		=			
ANR	8176528	Identifier	arp_fd		8176006	0					
ANR	8176529	CallExpression	"open ( ""/dev/tap"" , O_RDWR , 0 )"		8176006	1					
ANR	8176530	Callee	open		8176006	0					
ANR	8176531	Identifier	open		8176006	0					
ANR	8176532	ArgumentList	"""/dev/tap"""		8176006	1					
ANR	8176533	Argument	"""/dev/tap"""		8176006	0					
ANR	8176534	PrimaryExpression	"""/dev/tap"""		8176006	0					
ANR	8176535	Argument	O_RDWR		8176006	1					
ANR	8176536	Identifier	O_RDWR		8176006	0					
ANR	8176537	Argument	0		8176006	2					
ANR	8176538	PrimaryExpression	0		8176006	0					
ANR	8176539	IfStatement	if ( arp_fd < 0 )		8176006	36					
ANR	8176540	Condition	arp_fd < 0	159:8:2398:2407	8176006	0	True				
ANR	8176541	RelationalExpression	arp_fd < 0		8176006	0		<			
ANR	8176542	Identifier	arp_fd		8176006	0					
ANR	8176543	PrimaryExpression	0		8176006	1					
ANR	8176544	ExpressionStatement	"syslog ( LOG_ERR , ""Can't open %s\\n"" , ""/dev/tap"" )"	161:7:2418:2465	8176006	1	True				
ANR	8176545	CallExpression	"syslog ( LOG_ERR , ""Can't open %s\\n"" , ""/dev/tap"" )"		8176006	0					
ANR	8176546	Callee	syslog		8176006	0					
ANR	8176547	Identifier	syslog		8176006	0					
ANR	8176548	ArgumentList	LOG_ERR		8176006	1					
ANR	8176549	Argument	LOG_ERR		8176006	0					
ANR	8176550	Identifier	LOG_ERR		8176006	0					
ANR	8176551	Argument	"""Can't open %s\\n"""		8176006	1					
ANR	8176552	PrimaryExpression	"""Can't open %s\\n"""		8176006	0					
ANR	8176553	Argument	"""/dev/tap"""		8176006	2					
ANR	8176554	PrimaryExpression	"""/dev/tap"""		8176006	0					
ANR	8176555	ExpressionStatement	strioc_if . ic_cmd = SIOCSLIFNAME	167:4:2503:2534	8176006	37	True				
ANR	8176556	AssignmentExpression	strioc_if . ic_cmd = SIOCSLIFNAME		8176006	0		=			
ANR	8176557	MemberAccess	strioc_if . ic_cmd		8176006	0					
ANR	8176558	Identifier	strioc_if		8176006	0					
ANR	8176559	Identifier	ic_cmd		8176006	1					
ANR	8176560	Identifier	SIOCSLIFNAME		8176006	1					
ANR	8176561	ExpressionStatement	strioc_if . ic_timout = 0	169:4:2541:2564	8176006	38	True				
ANR	8176562	AssignmentExpression	strioc_if . ic_timout = 0		8176006	0		=			
ANR	8176563	MemberAccess	strioc_if . ic_timout		8176006	0					
ANR	8176564	Identifier	strioc_if		8176006	0					
ANR	8176565	Identifier	ic_timout		8176006	1					
ANR	8176566	PrimaryExpression	0		8176006	1					
ANR	8176567	ExpressionStatement	strioc_if . ic_len = sizeof ( ifr )	171:4:2571:2601	8176006	39	True				
ANR	8176568	AssignmentExpression	strioc_if . ic_len = sizeof ( ifr )		8176006	0		=			
ANR	8176569	MemberAccess	strioc_if . ic_len		8176006	0					
ANR	8176570	Identifier	strioc_if		8176006	0					
ANR	8176571	Identifier	ic_len		8176006	1					
ANR	8176572	SizeofExpression	sizeof ( ifr )		8176006	1					
ANR	8176573	Sizeof	sizeof		8176006	0					
ANR	8176574	SizeofOperand	ifr		8176006	1					
ANR	8176575	ExpressionStatement	strioc_if . ic_dp = ( char * ) & ifr	173:4:2608:2638	8176006	40	True				
ANR	8176576	AssignmentExpression	strioc_if . ic_dp = ( char * ) & ifr		8176006	0		=			
ANR	8176577	MemberAccess	strioc_if . ic_dp		8176006	0					
ANR	8176578	Identifier	strioc_if		8176006	0					
ANR	8176579	Identifier	ic_dp		8176006	1					
ANR	8176580	CastExpression	( char * ) & ifr		8176006	1					
ANR	8176581	CastTarget	char *		8176006	0					
ANR	8176582	UnaryOperationExpression	& ifr		8176006	1					
ANR	8176583	UnaryOperator	&		8176006	0					
ANR	8176584	Identifier	ifr		8176006	1					
ANR	8176585	IfStatement	"if ( ioctl ( arp_fd , I_STR , & strioc_if ) < 0 )"		8176006	41					
ANR	8176586	Condition	"ioctl ( arp_fd , I_STR , & strioc_if ) < 0"	175:8:2649:2684	8176006	0	True				
ANR	8176587	RelationalExpression	"ioctl ( arp_fd , I_STR , & strioc_if ) < 0"		8176006	0		<			
ANR	8176588	CallExpression	"ioctl ( arp_fd , I_STR , & strioc_if )"		8176006	0					
ANR	8176589	Callee	ioctl		8176006	0					
ANR	8176590	Identifier	ioctl		8176006	0					
ANR	8176591	ArgumentList	arp_fd		8176006	1					
ANR	8176592	Argument	arp_fd		8176006	0					
ANR	8176593	Identifier	arp_fd		8176006	0					
ANR	8176594	Argument	I_STR		8176006	1					
ANR	8176595	Identifier	I_STR		8176006	0					
ANR	8176596	Argument	& strioc_if		8176006	2					
ANR	8176597	UnaryOperationExpression	& strioc_if		8176006	0					
ANR	8176598	UnaryOperator	&		8176006	0					
ANR	8176599	Identifier	strioc_if		8176006	1					
ANR	8176600	PrimaryExpression	0		8176006	1					
ANR	8176601	CompoundStatement		173:45:2635:2635	8176006	1					
ANR	8176602	ExpressionStatement	"syslog ( LOG_ERR , ""Can't set ifname to arp\\n"" )"	177:8:2697:2742	8176006	0	True				
ANR	8176603	CallExpression	"syslog ( LOG_ERR , ""Can't set ifname to arp\\n"" )"		8176006	0					
ANR	8176604	Callee	syslog		8176006	0					
ANR	8176605	Identifier	syslog		8176006	0					
ANR	8176606	ArgumentList	LOG_ERR		8176006	1					
ANR	8176607	Argument	LOG_ERR		8176006	0					
ANR	8176608	Identifier	LOG_ERR		8176006	0					
ANR	8176609	Argument	"""Can't set ifname to arp\\n"""		8176006	1					
ANR	8176610	PrimaryExpression	"""Can't set ifname to arp\\n"""		8176006	0					
ANR	8176611	IfStatement	"if ( ( ip_muxid = ioctl ( ip_fd , I_LINK , if_fd ) ) < 0 )"		8176006	42					
ANR	8176612	Condition	"( ip_muxid = ioctl ( ip_fd , I_LINK , if_fd ) ) < 0"	183:7:2761:2804	8176006	0	True				
ANR	8176613	RelationalExpression	"( ip_muxid = ioctl ( ip_fd , I_LINK , if_fd ) ) < 0"		8176006	0		<			
ANR	8176614	AssignmentExpression	"ip_muxid = ioctl ( ip_fd , I_LINK , if_fd )"		8176006	0		=			
ANR	8176615	Identifier	ip_muxid		8176006	0					
ANR	8176616	CallExpression	"ioctl ( ip_fd , I_LINK , if_fd )"		8176006	1					
ANR	8176617	Callee	ioctl		8176006	0					
ANR	8176618	Identifier	ioctl		8176006	0					
ANR	8176619	ArgumentList	ip_fd		8176006	1					
ANR	8176620	Argument	ip_fd		8176006	0					
ANR	8176621	Identifier	ip_fd		8176006	0					
ANR	8176622	Argument	I_LINK		8176006	1					
ANR	8176623	Identifier	I_LINK		8176006	0					
ANR	8176624	Argument	if_fd		8176006	2					
ANR	8176625	Identifier	if_fd		8176006	0					
ANR	8176626	PrimaryExpression	0		8176006	1					
ANR	8176627	CompoundStatement		181:52:2755:2755	8176006	1					
ANR	8176628	ExpressionStatement	"syslog ( LOG_ERR , ""Can't link TAP device to IP"" )"	185:7:2816:2862	8176006	0	True				
ANR	8176629	CallExpression	"syslog ( LOG_ERR , ""Can't link TAP device to IP"" )"		8176006	0					
ANR	8176630	Callee	syslog		8176006	0					
ANR	8176631	Identifier	syslog		8176006	0					
ANR	8176632	ArgumentList	LOG_ERR		8176006	1					
ANR	8176633	Argument	LOG_ERR		8176006	0					
ANR	8176634	Identifier	LOG_ERR		8176006	0					
ANR	8176635	Argument	"""Can't link TAP device to IP"""		8176006	1					
ANR	8176636	PrimaryExpression	"""Can't link TAP device to IP"""		8176006	0					
ANR	8176637	ReturnStatement	return - 1 ;	187:7:2872:2881	8176006	1	True				
ANR	8176638	UnaryOperationExpression	- 1		8176006	0					
ANR	8176639	UnaryOperator	-		8176006	0					
ANR	8176640	PrimaryExpression	1		8176006	1					
ANR	8176641	IfStatement	"if ( ( arp_muxid = ioctl ( ip_fd , link_type , arp_fd ) ) < 0 )"		8176006	43					
ANR	8176642	Condition	"( arp_muxid = ioctl ( ip_fd , link_type , arp_fd ) ) < 0"	193:8:2901:2950	8176006	0	True				
ANR	8176643	RelationalExpression	"( arp_muxid = ioctl ( ip_fd , link_type , arp_fd ) ) < 0"		8176006	0		<			
ANR	8176644	AssignmentExpression	"arp_muxid = ioctl ( ip_fd , link_type , arp_fd )"		8176006	0		=			
ANR	8176645	Identifier	arp_muxid		8176006	0					
ANR	8176646	CallExpression	"ioctl ( ip_fd , link_type , arp_fd )"		8176006	1					
ANR	8176647	Callee	ioctl		8176006	0					
ANR	8176648	Identifier	ioctl		8176006	0					
ANR	8176649	ArgumentList	ip_fd		8176006	1					
ANR	8176650	Argument	ip_fd		8176006	0					
ANR	8176651	Identifier	ip_fd		8176006	0					
ANR	8176652	Argument	link_type		8176006	1					
ANR	8176653	Identifier	link_type		8176006	0					
ANR	8176654	Argument	arp_fd		8176006	2					
ANR	8176655	Identifier	arp_fd		8176006	0					
ANR	8176656	PrimaryExpression	0		8176006	1					
ANR	8176657	ExpressionStatement	"syslog ( LOG_ERR , ""Can't link TAP device to ARP"" )"	195:8:2962:3010	8176006	1	True				
ANR	8176658	CallExpression	"syslog ( LOG_ERR , ""Can't link TAP device to ARP"" )"		8176006	0					
ANR	8176659	Callee	syslog		8176006	0					
ANR	8176660	Identifier	syslog		8176006	0					
ANR	8176661	ArgumentList	LOG_ERR		8176006	1					
ANR	8176662	Argument	LOG_ERR		8176006	0					
ANR	8176663	Identifier	LOG_ERR		8176006	0					
ANR	8176664	Argument	"""Can't link TAP device to ARP"""		8176006	1					
ANR	8176665	PrimaryExpression	"""Can't link TAP device to ARP"""		8176006	0					
ANR	8176666	ExpressionStatement	close ( if_fd )	199:4:3019:3032	8176006	44	True				
ANR	8176667	CallExpression	close ( if_fd )		8176006	0					
ANR	8176668	Callee	close		8176006	0					
ANR	8176669	Identifier	close		8176006	0					
ANR	8176670	ArgumentList	if_fd		8176006	1					
ANR	8176671	Argument	if_fd		8176006	0					
ANR	8176672	Identifier	if_fd		8176006	0					
ANR	8176673	ExpressionStatement	"memset ( & ifr , 0x0 , sizeof ( ifr ) )"	203:4:3041:3071	8176006	45	True				
ANR	8176674	CallExpression	"memset ( & ifr , 0x0 , sizeof ( ifr ) )"		8176006	0					
ANR	8176675	Callee	memset		8176006	0					
ANR	8176676	Identifier	memset		8176006	0					
ANR	8176677	ArgumentList	& ifr		8176006	1					
ANR	8176678	Argument	& ifr		8176006	0					
ANR	8176679	UnaryOperationExpression	& ifr		8176006	0					
ANR	8176680	UnaryOperator	&		8176006	0					
ANR	8176681	Identifier	ifr		8176006	1					
ANR	8176682	Argument	0x0		8176006	1					
ANR	8176683	PrimaryExpression	0x0		8176006	0					
ANR	8176684	Argument	sizeof ( ifr )		8176006	2					
ANR	8176685	SizeofExpression	sizeof ( ifr )		8176006	0					
ANR	8176686	Sizeof	sizeof		8176006	0					
ANR	8176687	SizeofOperand	ifr		8176006	1					
ANR	8176688	ExpressionStatement	"pstrcpy ( ifr . lifr_name , sizeof ( ifr . lifr_name ) , actual_name )"	205:4:3078:3136	8176006	46	True				
ANR	8176689	CallExpression	"pstrcpy ( ifr . lifr_name , sizeof ( ifr . lifr_name ) , actual_name )"		8176006	0					
ANR	8176690	Callee	pstrcpy		8176006	0					
ANR	8176691	Identifier	pstrcpy		8176006	0					
ANR	8176692	ArgumentList	ifr . lifr_name		8176006	1					
ANR	8176693	Argument	ifr . lifr_name		8176006	0					
ANR	8176694	MemberAccess	ifr . lifr_name		8176006	0					
ANR	8176695	Identifier	ifr		8176006	0					
ANR	8176696	Identifier	lifr_name		8176006	1					
ANR	8176697	Argument	sizeof ( ifr . lifr_name )		8176006	1					
ANR	8176698	SizeofExpression	sizeof ( ifr . lifr_name )		8176006	0					
ANR	8176699	Sizeof	sizeof		8176006	0					
ANR	8176700	MemberAccess	ifr . lifr_name		8176006	1					
ANR	8176701	Identifier	ifr		8176006	0					
ANR	8176702	Identifier	lifr_name		8176006	1					
ANR	8176703	Argument	actual_name		8176006	2					
ANR	8176704	Identifier	actual_name		8176006	0					
ANR	8176705	ExpressionStatement	ifr . lifr_ip_muxid = ip_muxid	207:4:3143:3172	8176006	47	True				
ANR	8176706	AssignmentExpression	ifr . lifr_ip_muxid = ip_muxid		8176006	0		=			
ANR	8176707	MemberAccess	ifr . lifr_ip_muxid		8176006	0					
ANR	8176708	Identifier	ifr		8176006	0					
ANR	8176709	Identifier	lifr_ip_muxid		8176006	1					
ANR	8176710	Identifier	ip_muxid		8176006	1					
ANR	8176711	ExpressionStatement	ifr . lifr_arp_muxid = arp_muxid	209:4:3179:3209	8176006	48	True				
ANR	8176712	AssignmentExpression	ifr . lifr_arp_muxid = arp_muxid		8176006	0		=			
ANR	8176713	MemberAccess	ifr . lifr_arp_muxid		8176006	0					
ANR	8176714	Identifier	ifr		8176006	0					
ANR	8176715	Identifier	lifr_arp_muxid		8176006	1					
ANR	8176716	Identifier	arp_muxid		8176006	1					
ANR	8176717	IfStatement	"if ( ioctl ( ip_fd , SIOCSLIFMUXID , & ifr ) < 0 )"		8176006	49					
ANR	8176718	Condition	"ioctl ( ip_fd , SIOCSLIFMUXID , & ifr ) < 0"	213:8:3222:3259	8176006	0	True				
ANR	8176719	RelationalExpression	"ioctl ( ip_fd , SIOCSLIFMUXID , & ifr ) < 0"		8176006	0		<			
ANR	8176720	CallExpression	"ioctl ( ip_fd , SIOCSLIFMUXID , & ifr )"		8176006	0					
ANR	8176721	Callee	ioctl		8176006	0					
ANR	8176722	Identifier	ioctl		8176006	0					
ANR	8176723	ArgumentList	ip_fd		8176006	1					
ANR	8176724	Argument	ip_fd		8176006	0					
ANR	8176725	Identifier	ip_fd		8176006	0					
ANR	8176726	Argument	SIOCSLIFMUXID		8176006	1					
ANR	8176727	Identifier	SIOCSLIFMUXID		8176006	0					
ANR	8176728	Argument	& ifr		8176006	2					
ANR	8176729	UnaryOperationExpression	& ifr		8176006	0					
ANR	8176730	UnaryOperator	&		8176006	0					
ANR	8176731	Identifier	ifr		8176006	1					
ANR	8176732	PrimaryExpression	0		8176006	1					
ANR	8176733	CompoundStatement		213:4:3216:3216	8176006	1					
ANR	8176734	ExpressionStatement	"ioctl ( ip_fd , I_PUNLINK , arp_muxid )"	217:6:3276:3312	8176006	0	True				
ANR	8176735	CallExpression	"ioctl ( ip_fd , I_PUNLINK , arp_muxid )"		8176006	0					
ANR	8176736	Callee	ioctl		8176006	0					
ANR	8176737	Identifier	ioctl		8176006	0					
ANR	8176738	ArgumentList	ip_fd		8176006	1					
ANR	8176739	Argument	ip_fd		8176006	0					
ANR	8176740	Identifier	ip_fd		8176006	0					
ANR	8176741	Argument	I_PUNLINK		8176006	1					
ANR	8176742	Identifier	I_PUNLINK		8176006	0					
ANR	8176743	Argument	arp_muxid		8176006	2					
ANR	8176744	Identifier	arp_muxid		8176006	0					
ANR	8176745	ExpressionStatement	"ioctl ( ip_fd , I_PUNLINK , ip_muxid )"	219:6:3321:3355	8176006	1	True				
ANR	8176746	CallExpression	"ioctl ( ip_fd , I_PUNLINK , ip_muxid )"		8176006	0					
ANR	8176747	Callee	ioctl		8176006	0					
ANR	8176748	Identifier	ioctl		8176006	0					
ANR	8176749	ArgumentList	ip_fd		8176006	1					
ANR	8176750	Argument	ip_fd		8176006	0					
ANR	8176751	Identifier	ip_fd		8176006	0					
ANR	8176752	Argument	I_PUNLINK		8176006	1					
ANR	8176753	Identifier	I_PUNLINK		8176006	0					
ANR	8176754	Argument	ip_muxid		8176006	2					
ANR	8176755	Identifier	ip_muxid		8176006	0					
ANR	8176756	ExpressionStatement	"syslog ( LOG_ERR , ""Can't set multiplexor id"" )"	221:6:3364:3408	8176006	2	True				
ANR	8176757	CallExpression	"syslog ( LOG_ERR , ""Can't set multiplexor id"" )"		8176006	0					
ANR	8176758	Callee	syslog		8176006	0					
ANR	8176759	Identifier	syslog		8176006	0					
ANR	8176760	ArgumentList	LOG_ERR		8176006	1					
ANR	8176761	Argument	LOG_ERR		8176006	0					
ANR	8176762	Identifier	LOG_ERR		8176006	0					
ANR	8176763	Argument	"""Can't set multiplexor id"""		8176006	1					
ANR	8176764	PrimaryExpression	"""Can't set multiplexor id"""		8176006	0					
ANR	8176765	ExpressionStatement	"snprintf ( dev , dev_size , ""tap%d"" , ppa )"	227:4:3424:3461	8176006	50	True				
ANR	8176766	CallExpression	"snprintf ( dev , dev_size , ""tap%d"" , ppa )"		8176006	0					
ANR	8176767	Callee	snprintf		8176006	0					
ANR	8176768	Identifier	snprintf		8176006	0					
ANR	8176769	ArgumentList	dev		8176006	1					
ANR	8176770	Argument	dev		8176006	0					
ANR	8176771	Identifier	dev		8176006	0					
ANR	8176772	Argument	dev_size		8176006	1					
ANR	8176773	Identifier	dev_size		8176006	0					
ANR	8176774	Argument	"""tap%d"""		8176006	2					
ANR	8176775	PrimaryExpression	"""tap%d"""		8176006	0					
ANR	8176776	Argument	ppa		8176006	3					
ANR	8176777	Identifier	ppa		8176006	0					
ANR	8176778	ReturnStatement	return tap_fd ;	229:4:3468:3481	8176006	51	True				
ANR	8176779	Identifier	tap_fd		8176006	0					
ANR	8176780	ReturnType	static int		8176006	1					
ANR	8176781	Identifier	tap_alloc		8176006	2					
ANR	8176782	ParameterList	"char * dev , size_t dev_size"		8176006	3					
ANR	8176783	Parameter	char * dev	1:21:21:29	8176006	0	True				
ANR	8176784	ParameterType	char *		8176006	0					
ANR	8176785	Identifier	dev		8176006	1					
ANR	8176786	Parameter	size_t dev_size	1:32:32:46	8176006	1	True				
ANR	8176787	ParameterType	size_t		8176006	0					
ANR	8176788	Identifier	dev_size		8176006	1					
ANR	8176789	CFGEntryNode	ENTRY		8176006		True				
ANR	8176790	CFGExitNode	EXIT		8176006		True				
ANR	8176791	Symbol	TUNNEWPPA		8176006						
ANR	8176792	Symbol	strioc_if . ic_cmd		8176006						
ANR	8176793	Symbol	I_POP		8176006						
ANR	8176794	Symbol	strioc_ppa . ic_cmd		8176006						
ANR	8176795	Symbol	dev		8176006						
ANR	8176796	Symbol	LOG_ERR		8176006						
ANR	8176797	Symbol	* ptr		8176006						
ANR	8176798	Symbol	I_PLINK		8176006						
ANR	8176799	Symbol	SIOCSLIFMUXID		8176006						
ANR	8176800	Symbol	arp_fd		8176006						
ANR	8176801	Symbol	strioc_if . ic_timout		8176006						
ANR	8176802	Symbol	SIOCGLIFFLAGS		8176006						
ANR	8176803	Symbol	strioc_if . ic_dp		8176006						
ANR	8176804	Symbol	I_PUSH		8176006						
ANR	8176805	Symbol	NULL		8176006						
ANR	8176806	Symbol	strioc_ppa . ic_timout		8176006						
ANR	8176807	Symbol	SIOCSLIFNAME		8176006						
ANR	8176808	Symbol	tap_fd		8176006						
ANR	8176809	Symbol	I_STR		8176006						
ANR	8176810	Symbol	ip_fd		8176006						
ANR	8176811	Symbol	ip_muxid		8176006						
ANR	8176812	Symbol	& strioc_ppa		8176006						
ANR	8176813	Symbol	* dev		8176006						
ANR	8176814	Symbol	& ppa		8176006						
ANR	8176815	Symbol	I_LINK		8176006						
ANR	8176816	Symbol	arp_muxid		8176006						
ANR	8176817	Symbol	ioctl		8176006						
ANR	8176818	Symbol	O_RDWR		8176006						
ANR	8176819	Symbol	strioc_if		8176006						
ANR	8176820	Symbol	if_fd		8176006						
ANR	8176821	Symbol	ifr . lifr_arp_muxid		8176006						
ANR	8176822	Symbol	& ifr		8176006						
ANR	8176823	Symbol	qemu_isdigit		8176006						
ANR	8176824	Symbol	ppa		8176006						
ANR	8176825	Symbol	atoi		8176006						
ANR	8176826	Symbol	ifr . lifr_ip_muxid		8176006						
ANR	8176827	Symbol	strioc_ppa . ic_len		8176006						
ANR	8176828	Symbol	ifr . lifr_ppa		8176006						
ANR	8176829	Symbol	strioc_ppa . ic_dp		8176006						
ANR	8176830	Symbol	actual_name		8176006						
ANR	8176831	Symbol	strioc_if . ic_len		8176006						
ANR	8176832	Symbol	I_PUNLINK		8176006						
ANR	8176833	Symbol	ptr		8176006						
ANR	8176834	Symbol	strioc_ppa		8176006						
ANR	8176835	Symbol	link_type		8176006						
ANR	8176836	Symbol	& strioc_if		8176006						
ANR	8176837	Symbol	ifr		8176006						
ANR	8176838	Symbol	ifr . lifr_name		8176006						
ANR	8176839	Symbol	dev_size		8176006						
ANR	8176840	Symbol	open		8176006						
