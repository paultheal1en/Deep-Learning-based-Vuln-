command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1735475	File	/home/p4ultr4n/workplace/ReVeal/raw_code/decode_channel_sound_unit_0.c								
ANR	1735476	Function	decode_channel_sound_unit	1:0:0:2499							
ANR	1735477	FunctionDef	"decode_channel_sound_unit (ATRAC3Context * q , GetBitContext * gb , ChannelUnit * snd , float * output , int channel_num , int coding_mode)"		1735476	0					
ANR	1735478	CompoundStatement		7:0:218:2499	1735476	0					
ANR	1735479	IdentifierDeclStatement	"int band , ret , num_subbands , last_tonal , num_bands ;"	9:4:225:275	1735476	0	True				
ANR	1735480	IdentifierDecl	band		1735476	0					
ANR	1735481	IdentifierDeclType	int		1735476	0					
ANR	1735482	Identifier	band		1735476	1					
ANR	1735483	IdentifierDecl	ret		1735476	1					
ANR	1735484	IdentifierDeclType	int		1735476	0					
ANR	1735485	Identifier	ret		1735476	1					
ANR	1735486	IdentifierDecl	num_subbands		1735476	2					
ANR	1735487	IdentifierDeclType	int		1735476	0					
ANR	1735488	Identifier	num_subbands		1735476	1					
ANR	1735489	IdentifierDecl	last_tonal		1735476	3					
ANR	1735490	IdentifierDeclType	int		1735476	0					
ANR	1735491	Identifier	last_tonal		1735476	1					
ANR	1735492	IdentifierDecl	num_bands		1735476	4					
ANR	1735493	IdentifierDeclType	int		1735476	0					
ANR	1735494	Identifier	num_bands		1735476	1					
ANR	1735495	IdentifierDeclStatement	GainBlock * gain1 = & snd -> gain_block [ snd -> gc_blk_switch ] ;	11:4:282:341	1735476	1	True				
ANR	1735496	IdentifierDecl	* gain1 = & snd -> gain_block [ snd -> gc_blk_switch ]		1735476	0					
ANR	1735497	IdentifierDeclType	GainBlock *		1735476	0					
ANR	1735498	Identifier	gain1		1735476	1					
ANR	1735499	AssignmentExpression	* gain1 = & snd -> gain_block [ snd -> gc_blk_switch ]		1735476	2		=			
ANR	1735500	Identifier	gain1		1735476	0					
ANR	1735501	UnaryOperationExpression	& snd -> gain_block [ snd -> gc_blk_switch ]		1735476	1					
ANR	1735502	UnaryOperator	&		1735476	0					
ANR	1735503	ArrayIndexing	snd -> gain_block [ snd -> gc_blk_switch ]		1735476	1					
ANR	1735504	PtrMemberAccess	snd -> gain_block		1735476	0					
ANR	1735505	Identifier	snd		1735476	0					
ANR	1735506	Identifier	gain_block		1735476	1					
ANR	1735507	PtrMemberAccess	snd -> gc_blk_switch		1735476	1					
ANR	1735508	Identifier	snd		1735476	0					
ANR	1735509	Identifier	gc_blk_switch		1735476	1					
ANR	1735510	IdentifierDeclStatement	GainBlock * gain2 = & snd -> gain_block [ 1 - snd -> gc_blk_switch ] ;	13:4:348:407	1735476	2	True				
ANR	1735511	IdentifierDecl	* gain2 = & snd -> gain_block [ 1 - snd -> gc_blk_switch ]		1735476	0					
ANR	1735512	IdentifierDeclType	GainBlock *		1735476	0					
ANR	1735513	Identifier	gain2		1735476	1					
ANR	1735514	AssignmentExpression	* gain2 = & snd -> gain_block [ 1 - snd -> gc_blk_switch ]		1735476	2		=			
ANR	1735515	Identifier	gain2		1735476	0					
ANR	1735516	UnaryOperationExpression	& snd -> gain_block [ 1 - snd -> gc_blk_switch ]		1735476	1					
ANR	1735517	UnaryOperator	&		1735476	0					
ANR	1735518	ArrayIndexing	snd -> gain_block [ 1 - snd -> gc_blk_switch ]		1735476	1					
ANR	1735519	PtrMemberAccess	snd -> gain_block		1735476	0					
ANR	1735520	Identifier	snd		1735476	0					
ANR	1735521	Identifier	gain_block		1735476	1					
ANR	1735522	AdditiveExpression	1 - snd -> gc_blk_switch		1735476	1		-			
ANR	1735523	PrimaryExpression	1		1735476	0					
ANR	1735524	PtrMemberAccess	snd -> gc_blk_switch		1735476	1					
ANR	1735525	Identifier	snd		1735476	0					
ANR	1735526	Identifier	gc_blk_switch		1735476	1					
ANR	1735527	IfStatement	if ( coding_mode == JOINT_STEREO && channel_num == 1 )		1735476	3					
ANR	1735528	Condition	coding_mode == JOINT_STEREO && channel_num == 1	17:8:420:466	1735476	0	True				
ANR	1735529	AndExpression	coding_mode == JOINT_STEREO && channel_num == 1		1735476	0		&&			
ANR	1735530	EqualityExpression	coding_mode == JOINT_STEREO		1735476	0		==			
ANR	1735531	Identifier	coding_mode		1735476	0					
ANR	1735532	Identifier	JOINT_STEREO		1735476	1					
ANR	1735533	EqualityExpression	channel_num == 1		1735476	1		==			
ANR	1735534	Identifier	channel_num		1735476	0					
ANR	1735535	PrimaryExpression	1		1735476	1					
ANR	1735536	CompoundStatement		11:57:250:250	1735476	1					
ANR	1735537	IfStatement	"if ( get_bits ( gb , 2 ) != 3 )"		1735476	0					
ANR	1735538	Condition	"get_bits ( gb , 2 ) != 3"	19:12:484:503	1735476	0	True				
ANR	1735539	EqualityExpression	"get_bits ( gb , 2 ) != 3"		1735476	0		!=			
ANR	1735540	CallExpression	"get_bits ( gb , 2 )"		1735476	0					
ANR	1735541	Callee	get_bits		1735476	0					
ANR	1735542	Identifier	get_bits		1735476	0					
ANR	1735543	ArgumentList	gb		1735476	1					
ANR	1735544	Argument	gb		1735476	0					
ANR	1735545	Identifier	gb		1735476	0					
ANR	1735546	Argument	2		1735476	1					
ANR	1735547	PrimaryExpression	2		1735476	0					
ANR	1735548	PrimaryExpression	3		1735476	1					
ANR	1735549	CompoundStatement		13:34:287:287	1735476	1					
ANR	1735550	ExpressionStatement	"av_log ( NULL , AV_LOG_ERROR , ""JS mono Sound Unit id != 3.\\n"" )"	21:12:521:578	1735476	0	True				
ANR	1735551	CallExpression	"av_log ( NULL , AV_LOG_ERROR , ""JS mono Sound Unit id != 3.\\n"" )"		1735476	0					
ANR	1735552	Callee	av_log		1735476	0					
ANR	1735553	Identifier	av_log		1735476	0					
ANR	1735554	ArgumentList	NULL		1735476	1					
ANR	1735555	Argument	NULL		1735476	0					
ANR	1735556	Identifier	NULL		1735476	0					
ANR	1735557	Argument	AV_LOG_ERROR		1735476	1					
ANR	1735558	Identifier	AV_LOG_ERROR		1735476	0					
ANR	1735559	Argument	"""JS mono Sound Unit id != 3.\\n"""		1735476	2					
ANR	1735560	PrimaryExpression	"""JS mono Sound Unit id != 3.\\n"""		1735476	0					
ANR	1735561	ReturnStatement	return AVERROR_INVALIDDATA ;	23:12:593:619	1735476	1	True				
ANR	1735562	Identifier	AVERROR_INVALIDDATA		1735476	0					
ANR	1735563	ElseStatement	else		1735476	0					
ANR	1735564	CompoundStatement		21:11:425:425	1735476	0					
ANR	1735565	IfStatement	"if ( get_bits ( gb , 6 ) != 0x28 )"		1735476	0					
ANR	1735566	Condition	"get_bits ( gb , 6 ) != 0x28"	29:12:659:681	1735476	0	True				
ANR	1735567	EqualityExpression	"get_bits ( gb , 6 ) != 0x28"		1735476	0		!=			
ANR	1735568	CallExpression	"get_bits ( gb , 6 )"		1735476	0					
ANR	1735569	Callee	get_bits		1735476	0					
ANR	1735570	Identifier	get_bits		1735476	0					
ANR	1735571	ArgumentList	gb		1735476	1					
ANR	1735572	Argument	gb		1735476	0					
ANR	1735573	Identifier	gb		1735476	0					
ANR	1735574	Argument	6		1735476	1					
ANR	1735575	PrimaryExpression	6		1735476	0					
ANR	1735576	PrimaryExpression	0x28		1735476	1					
ANR	1735577	CompoundStatement		23:37:465:465	1735476	1					
ANR	1735578	ExpressionStatement	"av_log ( NULL , AV_LOG_ERROR , ""Sound Unit id != 0x28.\\n"" )"	31:12:699:751	1735476	0	True				
ANR	1735579	CallExpression	"av_log ( NULL , AV_LOG_ERROR , ""Sound Unit id != 0x28.\\n"" )"		1735476	0					
ANR	1735580	Callee	av_log		1735476	0					
ANR	1735581	Identifier	av_log		1735476	0					
ANR	1735582	ArgumentList	NULL		1735476	1					
ANR	1735583	Argument	NULL		1735476	0					
ANR	1735584	Identifier	NULL		1735476	0					
ANR	1735585	Argument	AV_LOG_ERROR		1735476	1					
ANR	1735586	Identifier	AV_LOG_ERROR		1735476	0					
ANR	1735587	Argument	"""Sound Unit id != 0x28.\\n"""		1735476	2					
ANR	1735588	PrimaryExpression	"""Sound Unit id != 0x28.\\n"""		1735476	0					
ANR	1735589	ReturnStatement	return AVERROR_INVALIDDATA ;	33:12:766:792	1735476	1	True				
ANR	1735590	Identifier	AVERROR_INVALIDDATA		1735476	0					
ANR	1735591	ExpressionStatement	"snd -> bands_coded = get_bits ( gb , 2 )"	43:4:856:890	1735476	4	True				
ANR	1735592	AssignmentExpression	"snd -> bands_coded = get_bits ( gb , 2 )"		1735476	0		=			
ANR	1735593	PtrMemberAccess	snd -> bands_coded		1735476	0					
ANR	1735594	Identifier	snd		1735476	0					
ANR	1735595	Identifier	bands_coded		1735476	1					
ANR	1735596	CallExpression	"get_bits ( gb , 2 )"		1735476	1					
ANR	1735597	Callee	get_bits		1735476	0					
ANR	1735598	Identifier	get_bits		1735476	0					
ANR	1735599	ArgumentList	gb		1735476	1					
ANR	1735600	Argument	gb		1735476	0					
ANR	1735601	Identifier	gb		1735476	0					
ANR	1735602	Argument	2		1735476	1					
ANR	1735603	PrimaryExpression	2		1735476	0					
ANR	1735604	ExpressionStatement	"ret = decode_gain_control ( gb , gain2 , snd -> bands_coded )"	47:4:899:953	1735476	5	True				
ANR	1735605	AssignmentExpression	"ret = decode_gain_control ( gb , gain2 , snd -> bands_coded )"		1735476	0		=			
ANR	1735606	Identifier	ret		1735476	0					
ANR	1735607	CallExpression	"decode_gain_control ( gb , gain2 , snd -> bands_coded )"		1735476	1					
ANR	1735608	Callee	decode_gain_control		1735476	0					
ANR	1735609	Identifier	decode_gain_control		1735476	0					
ANR	1735610	ArgumentList	gb		1735476	1					
ANR	1735611	Argument	gb		1735476	0					
ANR	1735612	Identifier	gb		1735476	0					
ANR	1735613	Argument	gain2		1735476	1					
ANR	1735614	Identifier	gain2		1735476	0					
ANR	1735615	Argument	snd -> bands_coded		1735476	2					
ANR	1735616	PtrMemberAccess	snd -> bands_coded		1735476	0					
ANR	1735617	Identifier	snd		1735476	0					
ANR	1735618	Identifier	bands_coded		1735476	1					
ANR	1735619	IfStatement	if ( ret )		1735476	6					
ANR	1735620	Condition	ret	49:8:964:966	1735476	0	True				
ANR	1735621	Identifier	ret		1735476	0					
ANR	1735622	ReturnStatement	return ret ;	51:8:978:988	1735476	1	True				
ANR	1735623	Identifier	ret		1735476	0					
ANR	1735624	ExpressionStatement	"snd -> num_components = decode_tonal_components ( gb , snd -> components , snd -> bands_coded )"	55:4:997:1132	1735476	7	True				
ANR	1735625	AssignmentExpression	"snd -> num_components = decode_tonal_components ( gb , snd -> components , snd -> bands_coded )"		1735476	0		=			
ANR	1735626	PtrMemberAccess	snd -> num_components		1735476	0					
ANR	1735627	Identifier	snd		1735476	0					
ANR	1735628	Identifier	num_components		1735476	1					
ANR	1735629	CallExpression	"decode_tonal_components ( gb , snd -> components , snd -> bands_coded )"		1735476	1					
ANR	1735630	Callee	decode_tonal_components		1735476	0					
ANR	1735631	Identifier	decode_tonal_components		1735476	0					
ANR	1735632	ArgumentList	gb		1735476	1					
ANR	1735633	Argument	gb		1735476	0					
ANR	1735634	Identifier	gb		1735476	0					
ANR	1735635	Argument	snd -> components		1735476	1					
ANR	1735636	PtrMemberAccess	snd -> components		1735476	0					
ANR	1735637	Identifier	snd		1735476	0					
ANR	1735638	Identifier	components		1735476	1					
ANR	1735639	Argument	snd -> bands_coded		1735476	2					
ANR	1735640	PtrMemberAccess	snd -> bands_coded		1735476	0					
ANR	1735641	Identifier	snd		1735476	0					
ANR	1735642	Identifier	bands_coded		1735476	1					
ANR	1735643	IfStatement	if ( snd -> num_components < 0 )		1735476	8					
ANR	1735644	Condition	snd -> num_components < 0	59:8:1143:1165	1735476	0	True				
ANR	1735645	RelationalExpression	snd -> num_components < 0		1735476	0		<			
ANR	1735646	PtrMemberAccess	snd -> num_components		1735476	0					
ANR	1735647	Identifier	snd		1735476	0					
ANR	1735648	Identifier	num_components		1735476	1					
ANR	1735649	PrimaryExpression	0		1735476	1					
ANR	1735650	ReturnStatement	return snd -> num_components ;	61:8:1177:1203	1735476	1	True				
ANR	1735651	PtrMemberAccess	snd -> num_components		1735476	0					
ANR	1735652	Identifier	snd		1735476	0					
ANR	1735653	Identifier	num_components		1735476	1					
ANR	1735654	ExpressionStatement	"num_subbands = decode_spectrum ( gb , snd -> spectrum )"	65:4:1212:1261	1735476	9	True				
ANR	1735655	AssignmentExpression	"num_subbands = decode_spectrum ( gb , snd -> spectrum )"		1735476	0		=			
ANR	1735656	Identifier	num_subbands		1735476	0					
ANR	1735657	CallExpression	"decode_spectrum ( gb , snd -> spectrum )"		1735476	1					
ANR	1735658	Callee	decode_spectrum		1735476	0					
ANR	1735659	Identifier	decode_spectrum		1735476	0					
ANR	1735660	ArgumentList	gb		1735476	1					
ANR	1735661	Argument	gb		1735476	0					
ANR	1735662	Identifier	gb		1735476	0					
ANR	1735663	Argument	snd -> spectrum		1735476	1					
ANR	1735664	PtrMemberAccess	snd -> spectrum		1735476	0					
ANR	1735665	Identifier	snd		1735476	0					
ANR	1735666	Identifier	spectrum		1735476	1					
ANR	1735667	ExpressionStatement	"last_tonal = add_tonal_components ( snd -> spectrum , snd -> num_components , snd -> components )"	71:4:1330:1455	1735476	10	True				
ANR	1735668	AssignmentExpression	"last_tonal = add_tonal_components ( snd -> spectrum , snd -> num_components , snd -> components )"		1735476	0		=			
ANR	1735669	Identifier	last_tonal		1735476	0					
ANR	1735670	CallExpression	"add_tonal_components ( snd -> spectrum , snd -> num_components , snd -> components )"		1735476	1					
ANR	1735671	Callee	add_tonal_components		1735476	0					
ANR	1735672	Identifier	add_tonal_components		1735476	0					
ANR	1735673	ArgumentList	snd -> spectrum		1735476	1					
ANR	1735674	Argument	snd -> spectrum		1735476	0					
ANR	1735675	PtrMemberAccess	snd -> spectrum		1735476	0					
ANR	1735676	Identifier	snd		1735476	0					
ANR	1735677	Identifier	spectrum		1735476	1					
ANR	1735678	Argument	snd -> num_components		1735476	1					
ANR	1735679	PtrMemberAccess	snd -> num_components		1735476	0					
ANR	1735680	Identifier	snd		1735476	0					
ANR	1735681	Identifier	num_components		1735476	1					
ANR	1735682	Argument	snd -> components		1735476	2					
ANR	1735683	PtrMemberAccess	snd -> components		1735476	0					
ANR	1735684	Identifier	snd		1735476	0					
ANR	1735685	Identifier	components		1735476	1					
ANR	1735686	ExpressionStatement	num_bands = ( subband_tab [ num_subbands ] - 1 ) >> 8	83:4:1572:1620	1735476	11	True				
ANR	1735687	AssignmentExpression	num_bands = ( subband_tab [ num_subbands ] - 1 ) >> 8		1735476	0		=			
ANR	1735688	Identifier	num_bands		1735476	0					
ANR	1735689	ShiftExpression	( subband_tab [ num_subbands ] - 1 ) >> 8		1735476	1		>>			
ANR	1735690	AdditiveExpression	subband_tab [ num_subbands ] - 1		1735476	0		-			
ANR	1735691	ArrayIndexing	subband_tab [ num_subbands ]		1735476	0					
ANR	1735692	Identifier	subband_tab		1735476	0					
ANR	1735693	Identifier	num_subbands		1735476	1					
ANR	1735694	PrimaryExpression	1		1735476	1					
ANR	1735695	PrimaryExpression	8		1735476	1					
ANR	1735696	IfStatement	if ( last_tonal >= 0 )		1735476	12					
ANR	1735697	Condition	last_tonal >= 0	85:8:1631:1645	1735476	0	True				
ANR	1735698	RelationalExpression	last_tonal >= 0		1735476	0		>=			
ANR	1735699	Identifier	last_tonal		1735476	0					
ANR	1735700	PrimaryExpression	0		1735476	1					
ANR	1735701	ExpressionStatement	"num_bands = FFMAX ( ( last_tonal + 256 ) >> 8 , num_bands )"	87:8:1657:1710	1735476	1	True				
ANR	1735702	AssignmentExpression	"num_bands = FFMAX ( ( last_tonal + 256 ) >> 8 , num_bands )"		1735476	0		=			
ANR	1735703	Identifier	num_bands		1735476	0					
ANR	1735704	CallExpression	"FFMAX ( ( last_tonal + 256 ) >> 8 , num_bands )"		1735476	1					
ANR	1735705	Callee	FFMAX		1735476	0					
ANR	1735706	Identifier	FFMAX		1735476	0					
ANR	1735707	ArgumentList	( last_tonal + 256 ) >> 8		1735476	1					
ANR	1735708	Argument	( last_tonal + 256 ) >> 8		1735476	0					
ANR	1735709	ShiftExpression	( last_tonal + 256 ) >> 8		1735476	0		>>			
ANR	1735710	AdditiveExpression	last_tonal + 256		1735476	0		+			
ANR	1735711	Identifier	last_tonal		1735476	0					
ANR	1735712	PrimaryExpression	256		1735476	1					
ANR	1735713	PrimaryExpression	8		1735476	1					
ANR	1735714	Argument	num_bands		1735476	1					
ANR	1735715	Identifier	num_bands		1735476	0					
ANR	1735716	ForStatement	for ( band = 0 ; band < 4 ; band ++ )		1735476	13					
ANR	1735717	ForInit	band = 0 ;	95:9:1770:1778	1735476	0	True				
ANR	1735718	AssignmentExpression	band = 0		1735476	0		=			
ANR	1735719	Identifier	band		1735476	0					
ANR	1735720	PrimaryExpression	0		1735476	1					
ANR	1735721	Condition	band < 4	95:19:1780:1787	1735476	1	True				
ANR	1735722	RelationalExpression	band < 4		1735476	0		<			
ANR	1735723	Identifier	band		1735476	0					
ANR	1735724	PrimaryExpression	4		1735476	1					
ANR	1735725	PostIncDecOperationExpression	band ++	95:29:1790:1795	1735476	2	True				
ANR	1735726	Identifier	band		1735476	0					
ANR	1735727	IncDec	++		1735476	1					
ANR	1735728	CompoundStatement		89:37:1579:1579	1735476	3					
ANR	1735729	IfStatement	if ( band <= num_bands )		1735476	0					
ANR	1735730	Condition	band <= num_bands	99:12:1872:1888	1735476	0	True				
ANR	1735731	RelationalExpression	band <= num_bands		1735476	0		<=			
ANR	1735732	Identifier	band		1735476	0					
ANR	1735733	Identifier	num_bands		1735476	1					
ANR	1735734	ExpressionStatement	"imlt ( q , & snd -> spectrum [ band * 256 ] , snd -> imdct_buf , band & 1 )"	101:12:1904:1965	1735476	1	True				
ANR	1735735	CallExpression	"imlt ( q , & snd -> spectrum [ band * 256 ] , snd -> imdct_buf , band & 1 )"		1735476	0					
ANR	1735736	Callee	imlt		1735476	0					
ANR	1735737	Identifier	imlt		1735476	0					
ANR	1735738	ArgumentList	q		1735476	1					
ANR	1735739	Argument	q		1735476	0					
ANR	1735740	Identifier	q		1735476	0					
ANR	1735741	Argument	& snd -> spectrum [ band * 256 ]		1735476	1					
ANR	1735742	UnaryOperationExpression	& snd -> spectrum [ band * 256 ]		1735476	0					
ANR	1735743	UnaryOperator	&		1735476	0					
ANR	1735744	ArrayIndexing	snd -> spectrum [ band * 256 ]		1735476	1					
ANR	1735745	PtrMemberAccess	snd -> spectrum		1735476	0					
ANR	1735746	Identifier	snd		1735476	0					
ANR	1735747	Identifier	spectrum		1735476	1					
ANR	1735748	MultiplicativeExpression	band * 256		1735476	1		*			
ANR	1735749	Identifier	band		1735476	0					
ANR	1735750	PrimaryExpression	256		1735476	1					
ANR	1735751	Argument	snd -> imdct_buf		1735476	2					
ANR	1735752	PtrMemberAccess	snd -> imdct_buf		1735476	0					
ANR	1735753	Identifier	snd		1735476	0					
ANR	1735754	Identifier	imdct_buf		1735476	1					
ANR	1735755	Argument	band & 1		1735476	3					
ANR	1735756	BitAndExpression	band & 1		1735476	0		&			
ANR	1735757	Identifier	band		1735476	0					
ANR	1735758	PrimaryExpression	1		1735476	1					
ANR	1735759	ElseStatement	else		1735476	0					
ANR	1735760	ExpressionStatement	"memset ( snd -> imdct_buf , 0 , 512 * sizeof ( * snd -> imdct_buf ) )"	105:12:1994:2050	1735476	0	True				
ANR	1735761	CallExpression	"memset ( snd -> imdct_buf , 0 , 512 * sizeof ( * snd -> imdct_buf ) )"		1735476	0					
ANR	1735762	Callee	memset		1735476	0					
ANR	1735763	Identifier	memset		1735476	0					
ANR	1735764	ArgumentList	snd -> imdct_buf		1735476	1					
ANR	1735765	Argument	snd -> imdct_buf		1735476	0					
ANR	1735766	PtrMemberAccess	snd -> imdct_buf		1735476	0					
ANR	1735767	Identifier	snd		1735476	0					
ANR	1735768	Identifier	imdct_buf		1735476	1					
ANR	1735769	Argument	0		1735476	1					
ANR	1735770	PrimaryExpression	0		1735476	0					
ANR	1735771	Argument	512 * sizeof ( * snd -> imdct_buf )		1735476	2					
ANR	1735772	MultiplicativeExpression	512 * sizeof ( * snd -> imdct_buf )		1735476	0		*			
ANR	1735773	PrimaryExpression	512		1735476	0					
ANR	1735774	SizeofExpression	sizeof ( * snd -> imdct_buf )		1735476	1					
ANR	1735775	Sizeof	sizeof		1735476	0					
ANR	1735776	UnaryOperationExpression	* snd -> imdct_buf		1735476	1					
ANR	1735777	UnaryOperator	*		1735476	0					
ANR	1735778	PtrMemberAccess	snd -> imdct_buf		1735476	1					
ANR	1735779	Identifier	snd		1735476	0					
ANR	1735780	Identifier	imdct_buf		1735476	1					
ANR	1735781	ExpressionStatement	"ff_atrac_gain_compensation ( & q -> gainc_ctx , snd -> imdct_buf , & snd -> prev_frame [ band * 256 ] , & gain1 -> g_block [ band ] , & gain2 -> g_block [ band ] , 256 , & output [ band * 256 ] )"	111:8:2112:2379	1735476	1	True				
ANR	1735782	CallExpression	"ff_atrac_gain_compensation ( & q -> gainc_ctx , snd -> imdct_buf , & snd -> prev_frame [ band * 256 ] , & gain1 -> g_block [ band ] , & gain2 -> g_block [ band ] , 256 , & output [ band * 256 ] )"		1735476	0					
ANR	1735783	Callee	ff_atrac_gain_compensation		1735476	0					
ANR	1735784	Identifier	ff_atrac_gain_compensation		1735476	0					
ANR	1735785	ArgumentList	& q -> gainc_ctx		1735476	1					
ANR	1735786	Argument	& q -> gainc_ctx		1735476	0					
ANR	1735787	UnaryOperationExpression	& q -> gainc_ctx		1735476	0					
ANR	1735788	UnaryOperator	&		1735476	0					
ANR	1735789	PtrMemberAccess	q -> gainc_ctx		1735476	1					
ANR	1735790	Identifier	q		1735476	0					
ANR	1735791	Identifier	gainc_ctx		1735476	1					
ANR	1735792	Argument	snd -> imdct_buf		1735476	1					
ANR	1735793	PtrMemberAccess	snd -> imdct_buf		1735476	0					
ANR	1735794	Identifier	snd		1735476	0					
ANR	1735795	Identifier	imdct_buf		1735476	1					
ANR	1735796	Argument	& snd -> prev_frame [ band * 256 ]		1735476	2					
ANR	1735797	UnaryOperationExpression	& snd -> prev_frame [ band * 256 ]		1735476	0					
ANR	1735798	UnaryOperator	&		1735476	0					
ANR	1735799	ArrayIndexing	snd -> prev_frame [ band * 256 ]		1735476	1					
ANR	1735800	PtrMemberAccess	snd -> prev_frame		1735476	0					
ANR	1735801	Identifier	snd		1735476	0					
ANR	1735802	Identifier	prev_frame		1735476	1					
ANR	1735803	MultiplicativeExpression	band * 256		1735476	1		*			
ANR	1735804	Identifier	band		1735476	0					
ANR	1735805	PrimaryExpression	256		1735476	1					
ANR	1735806	Argument	& gain1 -> g_block [ band ]		1735476	3					
ANR	1735807	UnaryOperationExpression	& gain1 -> g_block [ band ]		1735476	0					
ANR	1735808	UnaryOperator	&		1735476	0					
ANR	1735809	ArrayIndexing	gain1 -> g_block [ band ]		1735476	1					
ANR	1735810	PtrMemberAccess	gain1 -> g_block		1735476	0					
ANR	1735811	Identifier	gain1		1735476	0					
ANR	1735812	Identifier	g_block		1735476	1					
ANR	1735813	Identifier	band		1735476	1					
ANR	1735814	Argument	& gain2 -> g_block [ band ]		1735476	4					
ANR	1735815	UnaryOperationExpression	& gain2 -> g_block [ band ]		1735476	0					
ANR	1735816	UnaryOperator	&		1735476	0					
ANR	1735817	ArrayIndexing	gain2 -> g_block [ band ]		1735476	1					
ANR	1735818	PtrMemberAccess	gain2 -> g_block		1735476	0					
ANR	1735819	Identifier	gain2		1735476	0					
ANR	1735820	Identifier	g_block		1735476	1					
ANR	1735821	Identifier	band		1735476	1					
ANR	1735822	Argument	256		1735476	5					
ANR	1735823	PrimaryExpression	256		1735476	0					
ANR	1735824	Argument	& output [ band * 256 ]		1735476	6					
ANR	1735825	UnaryOperationExpression	& output [ band * 256 ]		1735476	0					
ANR	1735826	UnaryOperator	&		1735476	0					
ANR	1735827	ArrayIndexing	output [ band * 256 ]		1735476	1					
ANR	1735828	Identifier	output		1735476	0					
ANR	1735829	MultiplicativeExpression	band * 256		1735476	1		*			
ANR	1735830	Identifier	band		1735476	0					
ANR	1735831	PrimaryExpression	256		1735476	1					
ANR	1735832	ExpressionStatement	snd -> gc_blk_switch ^= 1	125:4:2456:2479	1735476	14	True				
ANR	1735833	AssignmentExpression	snd -> gc_blk_switch ^= 1		1735476	0		^=			
ANR	1735834	PtrMemberAccess	snd -> gc_blk_switch		1735476	0					
ANR	1735835	Identifier	snd		1735476	0					
ANR	1735836	Identifier	gc_blk_switch		1735476	1					
ANR	1735837	PrimaryExpression	1		1735476	1					
ANR	1735838	ReturnStatement	return 0 ;	129:4:2488:2496	1735476	15	True				
ANR	1735839	PrimaryExpression	0		1735476	0					
ANR	1735840	ReturnType	static int		1735476	1					
ANR	1735841	Identifier	decode_channel_sound_unit		1735476	2					
ANR	1735842	ParameterList	"ATRAC3Context * q , GetBitContext * gb , ChannelUnit * snd , float * output , int channel_num , int coding_mode"		1735476	3					
ANR	1735843	Parameter	ATRAC3Context * q	1:37:37:52	1735476	0	True				
ANR	1735844	ParameterType	ATRAC3Context *		1735476	0					
ANR	1735845	Identifier	q		1735476	1					
ANR	1735846	Parameter	GetBitContext * gb	1:55:55:71	1735476	1	True				
ANR	1735847	ParameterType	GetBitContext *		1735476	0					
ANR	1735848	Identifier	gb		1735476	1					
ANR	1735849	Parameter	ChannelUnit * snd	3:37:112:127	1735476	2	True				
ANR	1735850	ParameterType	ChannelUnit *		1735476	0					
ANR	1735851	Identifier	snd		1735476	1					
ANR	1735852	Parameter	float * output	3:55:130:142	1735476	3	True				
ANR	1735853	ParameterType	float *		1735476	0					
ANR	1735854	Identifier	output		1735476	1					
ANR	1735855	Parameter	int channel_num	5:37:183:197	1735476	4	True				
ANR	1735856	ParameterType	int		1735476	0					
ANR	1735857	Identifier	channel_num		1735476	1					
ANR	1735858	Parameter	int coding_mode	5:54:200:214	1735476	5	True				
ANR	1735859	ParameterType	int		1735476	0					
ANR	1735860	Identifier	coding_mode		1735476	1					
ANR	1735861	CFGEntryNode	ENTRY		1735476		True				
ANR	1735862	CFGExitNode	EXIT		1735476		True				
ANR	1735863	Symbol	JOINT_STEREO		1735476						
ANR	1735864	Symbol	& q -> gainc_ctx		1735476						
ANR	1735865	Symbol	last_tonal		1735476						
ANR	1735866	Symbol	decode_spectrum		1735476						
ANR	1735867	Symbol	num_subbands		1735476						
ANR	1735868	Symbol	decode_tonal_components		1735476						
ANR	1735869	Symbol	get_bits		1735476						
ANR	1735870	Symbol	snd -> spectrum		1735476						
ANR	1735871	Symbol	gain2		1735476						
ANR	1735872	Symbol	gain1		1735476						
ANR	1735873	Symbol	snd -> gc_blk_switch		1735476						
ANR	1735874	Symbol	snd -> components		1735476						
ANR	1735875	Symbol	output		1735476						
ANR	1735876	Symbol	* snd		1735476						
ANR	1735877	Symbol	* subband_tab		1735476						
ANR	1735878	Symbol	channel_num		1735476						
ANR	1735879	Symbol	snd -> bands_coded		1735476						
ANR	1735880	Symbol	subband_tab		1735476						
ANR	1735881	Symbol	gb		1735476						
ANR	1735882	Symbol	band		1735476						
ANR	1735883	Symbol	* num_subbands		1735476						
ANR	1735884	Symbol	decode_gain_control		1735476						
ANR	1735885	Symbol	ret		1735476						
ANR	1735886	Symbol	num_bands		1735476						
ANR	1735887	Symbol	snd -> gain_block		1735476						
ANR	1735888	Symbol	NULL		1735476						
ANR	1735889	Symbol	AV_LOG_ERROR		1735476						
ANR	1735890	Symbol	* gain2		1735476						
ANR	1735891	Symbol	* gain1		1735476						
ANR	1735892	Symbol	coding_mode		1735476						
ANR	1735893	Symbol	snd		1735476						
ANR	1735894	Symbol	snd -> num_components		1735476						
ANR	1735895	Symbol	* snd -> imdct_buf		1735476						
ANR	1735896	Symbol	gain2 -> g_block		1735476						
ANR	1735897	Symbol	add_tonal_components		1735476						
ANR	1735898	Symbol	snd -> imdct_buf		1735476						
ANR	1735899	Symbol	q		1735476						
ANR	1735900	Symbol	gain1 -> g_block		1735476						
ANR	1735901	Symbol	snd -> prev_frame		1735476						
ANR	1735902	Symbol	AVERROR_INVALIDDATA		1735476						
ANR	1735903	Symbol	* * snd		1735476						
ANR	1735904	Symbol	FFMAX		1735476						
