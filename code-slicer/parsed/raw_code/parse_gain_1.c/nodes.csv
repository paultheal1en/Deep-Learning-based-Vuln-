command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6326926	File	/home/p4ultr4n/workplace/ReVeal/raw_code/parse_gain_1.c								
ANR	6326927	Function	parse_gain	1:0:0:625							
ANR	6326928	FunctionDef	parse_gain (const char * gain)		6326927	0					
ANR	6326929	CompoundStatement		3:0:45:625	6326927	0					
ANR	6326930	IdentifierDeclStatement	char * fraction ;	5:4:52:66	6326927	0	True				
ANR	6326931	IdentifierDecl	* fraction		6326927	0					
ANR	6326932	IdentifierDeclType	char *		6326927	0					
ANR	6326933	Identifier	fraction		6326927	1					
ANR	6326934	IdentifierDeclStatement	int scale = 10000 ;	7:4:73:91	6326927	1	True				
ANR	6326935	IdentifierDecl	scale = 10000		6326927	0					
ANR	6326936	IdentifierDeclType	int		6326927	0					
ANR	6326937	Identifier	scale		6326927	1					
ANR	6326938	AssignmentExpression	scale = 10000		6326927	2		=			
ANR	6326939	Identifier	scale		6326927	0					
ANR	6326940	PrimaryExpression	10000		6326927	1					
ANR	6326941	IdentifierDeclStatement	int32_t mb = 0 ;	9:4:98:112	6326927	2	True				
ANR	6326942	IdentifierDecl	mb = 0		6326927	0					
ANR	6326943	IdentifierDeclType	int32_t		6326927	0					
ANR	6326944	Identifier	mb		6326927	1					
ANR	6326945	AssignmentExpression	mb = 0		6326927	2		=			
ANR	6326946	Identifier	mb		6326927	0					
ANR	6326947	PrimaryExpression	0		6326927	1					
ANR	6326948	IdentifierDeclStatement	int sign = 1 ;	11:4:119:133	6326927	3	True				
ANR	6326949	IdentifierDecl	sign = 1		6326927	0					
ANR	6326950	IdentifierDeclType	int		6326927	0					
ANR	6326951	Identifier	sign		6326927	1					
ANR	6326952	AssignmentExpression	sign = 1		6326927	2		=			
ANR	6326953	Identifier	sign		6326927	0					
ANR	6326954	PrimaryExpression	1		6326927	1					
ANR	6326955	IdentifierDeclStatement	int db ;	13:4:140:146	6326927	4	True				
ANR	6326956	IdentifierDecl	db		6326927	0					
ANR	6326957	IdentifierDeclType	int		6326927	0					
ANR	6326958	Identifier	db		6326927	1					
ANR	6326959	IfStatement	if ( ! gain )		6326927	5					
ANR	6326960	Condition	! gain	17:8:159:163	6326927	0	True				
ANR	6326961	UnaryOperationExpression	! gain		6326927	0					
ANR	6326962	UnaryOperator	!		6326927	0					
ANR	6326963	Identifier	gain		6326927	1					
ANR	6326964	ReturnStatement	return INT32_MIN ;	19:8:175:191	6326927	1	True				
ANR	6326965	Identifier	INT32_MIN		6326927	0					
ANR	6326966	ExpressionStatement	"gain += strspn ( gain , "" \\t"" )"	23:4:200:227	6326927	6	True				
ANR	6326967	AssignmentExpression	"gain += strspn ( gain , "" \\t"" )"		6326927	0		+=			
ANR	6326968	Identifier	gain		6326927	0					
ANR	6326969	CallExpression	"strspn ( gain , "" \\t"" )"		6326927	1					
ANR	6326970	Callee	strspn		6326927	0					
ANR	6326971	Identifier	strspn		6326927	0					
ANR	6326972	ArgumentList	gain		6326927	1					
ANR	6326973	Argument	gain		6326927	0					
ANR	6326974	Identifier	gain		6326927	0					
ANR	6326975	Argument	""" \\t"""		6326927	1					
ANR	6326976	PrimaryExpression	""" \\t"""		6326927	0					
ANR	6326977	IfStatement	if ( * gain == '-' )		6326927	7					
ANR	6326978	Condition	* gain == '-'	27:8:240:251	6326927	0	True				
ANR	6326979	EqualityExpression	* gain == '-'		6326927	0		==			
ANR	6326980	UnaryOperationExpression	* gain		6326927	0					
ANR	6326981	UnaryOperator	*		6326927	0					
ANR	6326982	Identifier	gain		6326927	1					
ANR	6326983	PrimaryExpression	'-'		6326927	1					
ANR	6326984	ExpressionStatement	sign = - 1	29:8:263:272	6326927	1	True				
ANR	6326985	AssignmentExpression	sign = - 1		6326927	0		=			
ANR	6326986	Identifier	sign		6326927	0					
ANR	6326987	UnaryOperationExpression	- 1		6326927	1					
ANR	6326988	UnaryOperator	-		6326927	0					
ANR	6326989	PrimaryExpression	1		6326927	1					
ANR	6326990	ExpressionStatement	"db = strtol ( gain , & fraction , 0 )"	33:4:281:312	6326927	8	True				
ANR	6326991	AssignmentExpression	"db = strtol ( gain , & fraction , 0 )"		6326927	0		=			
ANR	6326992	Identifier	db		6326927	0					
ANR	6326993	CallExpression	"strtol ( gain , & fraction , 0 )"		6326927	1					
ANR	6326994	Callee	strtol		6326927	0					
ANR	6326995	Identifier	strtol		6326927	0					
ANR	6326996	ArgumentList	gain		6326927	1					
ANR	6326997	Argument	gain		6326927	0					
ANR	6326998	Identifier	gain		6326927	0					
ANR	6326999	Argument	& fraction		6326927	1					
ANR	6327000	UnaryOperationExpression	& fraction		6326927	0					
ANR	6327001	UnaryOperator	&		6326927	0					
ANR	6327002	Identifier	fraction		6326927	1					
ANR	6327003	Argument	0		6326927	2					
ANR	6327004	PrimaryExpression	0		6326927	0					
ANR	6327005	IfStatement	if ( * fraction ++ == '.' )		6326927	9					
ANR	6327006	Condition	* fraction ++ == '.'	35:8:323:340	6326927	0	True				
ANR	6327007	EqualityExpression	* fraction ++ == '.'		6326927	0		==			
ANR	6327008	UnaryOperationExpression	* fraction ++		6326927	0					
ANR	6327009	UnaryOperator	*		6326927	0					
ANR	6327010	PostIncDecOperationExpression	fraction ++		6326927	1					
ANR	6327011	Identifier	fraction		6326927	0					
ANR	6327012	IncDec	++		6326927	1					
ANR	6327013	PrimaryExpression	'.'		6326927	1					
ANR	6327014	CompoundStatement		33:28:297:297	6326927	1					
ANR	6327015	WhileStatement	while ( av_isdigit ( * fraction ) && scale )		6326927	0					
ANR	6327016	Condition	av_isdigit ( * fraction ) && scale	37:15:361:390	6326927	0	True				
ANR	6327017	AndExpression	av_isdigit ( * fraction ) && scale		6326927	0		&&			
ANR	6327018	CallExpression	av_isdigit ( * fraction )		6326927	0					
ANR	6327019	Callee	av_isdigit		6326927	0					
ANR	6327020	Identifier	av_isdigit		6326927	0					
ANR	6327021	ArgumentList	* fraction		6326927	1					
ANR	6327022	Argument	* fraction		6326927	0					
ANR	6327023	UnaryOperationExpression	* fraction		6326927	0					
ANR	6327024	UnaryOperator	*		6326927	0					
ANR	6327025	Identifier	fraction		6326927	1					
ANR	6327026	Identifier	scale		6326927	1					
ANR	6327027	CompoundStatement		35:47:347:347	6326927	1					
ANR	6327028	ExpressionStatement	mb += scale * ( * fraction - '0' )	39:12:408:439	6326927	0	True				
ANR	6327029	AssignmentExpression	mb += scale * ( * fraction - '0' )		6326927	0		+=			
ANR	6327030	Identifier	mb		6326927	0					
ANR	6327031	MultiplicativeExpression	scale * ( * fraction - '0' )		6326927	1		*			
ANR	6327032	Identifier	scale		6326927	0					
ANR	6327033	AdditiveExpression	* fraction - '0'		6326927	1		-			
ANR	6327034	UnaryOperationExpression	* fraction		6326927	0					
ANR	6327035	UnaryOperator	*		6326927	0					
ANR	6327036	Identifier	fraction		6326927	1					
ANR	6327037	PrimaryExpression	'0'		6326927	1					
ANR	6327038	ExpressionStatement	scale /= 10	41:12:454:465	6326927	1	True				
ANR	6327039	AssignmentExpression	scale /= 10		6326927	0		/=			
ANR	6327040	Identifier	scale		6326927	0					
ANR	6327041	PrimaryExpression	10		6326927	1					
ANR	6327042	ExpressionStatement	fraction ++	43:12:480:490	6326927	2	True				
ANR	6327043	PostIncDecOperationExpression	fraction ++		6326927	0					
ANR	6327044	Identifier	fraction		6326927	0					
ANR	6327045	IncDec	++		6326927	1					
ANR	6327046	IfStatement	if ( abs ( db ) > ( INT32_MAX - mb ) / 100000 )		6326927	10					
ANR	6327047	Condition	abs ( db ) > ( INT32_MAX - mb ) / 100000	51:8:521:555	6326927	0	True				
ANR	6327048	RelationalExpression	abs ( db ) > ( INT32_MAX - mb ) / 100000		6326927	0		>			
ANR	6327049	CallExpression	abs ( db )		6326927	0					
ANR	6327050	Callee	abs		6326927	0					
ANR	6327051	Identifier	abs		6326927	0					
ANR	6327052	ArgumentList	db		6326927	1					
ANR	6327053	Argument	db		6326927	0					
ANR	6327054	Identifier	db		6326927	0					
ANR	6327055	MultiplicativeExpression	( INT32_MAX - mb ) / 100000		6326927	1		/			
ANR	6327056	AdditiveExpression	INT32_MAX - mb		6326927	0		-			
ANR	6327057	Identifier	INT32_MAX		6326927	0					
ANR	6327058	Identifier	mb		6326927	1					
ANR	6327059	PrimaryExpression	100000		6326927	1					
ANR	6327060	ReturnStatement	return INT32_MIN ;	53:8:567:583	6326927	1	True				
ANR	6327061	Identifier	INT32_MIN		6326927	0					
ANR	6327062	ReturnStatement	return db * 100000 + sign * mb ;	57:4:592:622	6326927	11	True				
ANR	6327063	AdditiveExpression	db * 100000 + sign * mb		6326927	0		+			
ANR	6327064	MultiplicativeExpression	db * 100000		6326927	0		*			
ANR	6327065	Identifier	db		6326927	0					
ANR	6327066	PrimaryExpression	100000		6326927	1					
ANR	6327067	MultiplicativeExpression	sign * mb		6326927	1		*			
ANR	6327068	Identifier	sign		6326927	0					
ANR	6327069	Identifier	mb		6326927	1					
ANR	6327070	ReturnType	static int32_t		6326927	1					
ANR	6327071	Identifier	parse_gain		6326927	2					
ANR	6327072	ParameterList	const char * gain		6326927	3					
ANR	6327073	Parameter	const char * gain	1:26:26:41	6326927	0	True				
ANR	6327074	ParameterType	const char *		6326927	0					
ANR	6327075	Identifier	gain		6326927	1					
ANR	6327076	CFGEntryNode	ENTRY		6326927		True				
ANR	6327077	CFGExitNode	EXIT		6326927		True				
ANR	6327078	Symbol	sign		6326927						
ANR	6327079	Symbol	scale		6326927						
ANR	6327080	Symbol	* gain		6326927						
ANR	6327081	Symbol	INT32_MAX		6326927						
ANR	6327082	Symbol	gain		6326927						
ANR	6327083	Symbol	fraction		6326927						
ANR	6327084	Symbol	* fraction ++		6326927						
ANR	6327085	Symbol	* fraction		6326927						
ANR	6327086	Symbol	abs		6326927						
ANR	6327087	Symbol	mb		6326927						
ANR	6327088	Symbol	strspn		6326927						
ANR	6327089	Symbol	strtol		6326927						
ANR	6327090	Symbol	av_isdigit		6326927						
ANR	6327091	Symbol	db		6326927						
ANR	6327092	Symbol	& fraction		6326927						
ANR	6327093	Symbol	INT32_MIN		6326927						
