command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8798788	File	/home/p4ultr4n/workplace/ReVeal/raw_code/validate_thread_parameters_0.c								
ANR	8798789	Function	validate_thread_parameters	1:0:0:676							
ANR	8798790	FunctionDef	validate_thread_parameters (AVCodecContext * avctx)		8798789	0					
ANR	8798791	CompoundStatement		3:0:63:676	8798789	0					
ANR	8798792	IdentifierDeclStatement	int frame_threading_supported = ( avctx -> codec -> capabilities & CODEC_CAP_FRAME_THREADS ) && ! ( avctx -> flags & CODEC_FLAG_TRUNCATED ) && ! ( avctx -> flags & CODEC_FLAG_LOW_DELAY ) && ! ( avctx -> flags2 & CODEC_FLAG2_CHUNKS ) ;	5:4:70:380	8798789	0	True				
ANR	8798793	IdentifierDecl	frame_threading_supported = ( avctx -> codec -> capabilities & CODEC_CAP_FRAME_THREADS ) && ! ( avctx -> flags & CODEC_FLAG_TRUNCATED ) && ! ( avctx -> flags & CODEC_FLAG_LOW_DELAY ) && ! ( avctx -> flags2 & CODEC_FLAG2_CHUNKS )		8798789	0					
ANR	8798794	IdentifierDeclType	int		8798789	0					
ANR	8798795	Identifier	frame_threading_supported		8798789	1					
ANR	8798796	AssignmentExpression	frame_threading_supported = ( avctx -> codec -> capabilities & CODEC_CAP_FRAME_THREADS ) && ! ( avctx -> flags & CODEC_FLAG_TRUNCATED ) && ! ( avctx -> flags & CODEC_FLAG_LOW_DELAY ) && ! ( avctx -> flags2 & CODEC_FLAG2_CHUNKS )		8798789	2		=			
ANR	8798797	Identifier	frame_threading_supported		8798789	0					
ANR	8798798	AndExpression	( avctx -> codec -> capabilities & CODEC_CAP_FRAME_THREADS ) && ! ( avctx -> flags & CODEC_FLAG_TRUNCATED ) && ! ( avctx -> flags & CODEC_FLAG_LOW_DELAY ) && ! ( avctx -> flags2 & CODEC_FLAG2_CHUNKS )		8798789	1		&&			
ANR	8798799	BitAndExpression	avctx -> codec -> capabilities & CODEC_CAP_FRAME_THREADS		8798789	0		&			
ANR	8798800	PtrMemberAccess	avctx -> codec -> capabilities		8798789	0					
ANR	8798801	PtrMemberAccess	avctx -> codec		8798789	0					
ANR	8798802	Identifier	avctx		8798789	0					
ANR	8798803	Identifier	codec		8798789	1					
ANR	8798804	Identifier	capabilities		8798789	1					
ANR	8798805	Identifier	CODEC_CAP_FRAME_THREADS		8798789	1					
ANR	8798806	AndExpression	! ( avctx -> flags & CODEC_FLAG_TRUNCATED ) && ! ( avctx -> flags & CODEC_FLAG_LOW_DELAY ) && ! ( avctx -> flags2 & CODEC_FLAG2_CHUNKS )		8798789	1		&&			
ANR	8798807	UnaryOperationExpression	! ( avctx -> flags & CODEC_FLAG_TRUNCATED )		8798789	0					
ANR	8798808	UnaryOperator	!		8798789	0					
ANR	8798809	BitAndExpression	avctx -> flags & CODEC_FLAG_TRUNCATED		8798789	1		&			
ANR	8798810	PtrMemberAccess	avctx -> flags		8798789	0					
ANR	8798811	Identifier	avctx		8798789	0					
ANR	8798812	Identifier	flags		8798789	1					
ANR	8798813	Identifier	CODEC_FLAG_TRUNCATED		8798789	1					
ANR	8798814	AndExpression	! ( avctx -> flags & CODEC_FLAG_LOW_DELAY ) && ! ( avctx -> flags2 & CODEC_FLAG2_CHUNKS )		8798789	1		&&			
ANR	8798815	UnaryOperationExpression	! ( avctx -> flags & CODEC_FLAG_LOW_DELAY )		8798789	0					
ANR	8798816	UnaryOperator	!		8798789	0					
ANR	8798817	BitAndExpression	avctx -> flags & CODEC_FLAG_LOW_DELAY		8798789	1		&			
ANR	8798818	PtrMemberAccess	avctx -> flags		8798789	0					
ANR	8798819	Identifier	avctx		8798789	0					
ANR	8798820	Identifier	flags		8798789	1					
ANR	8798821	Identifier	CODEC_FLAG_LOW_DELAY		8798789	1					
ANR	8798822	UnaryOperationExpression	! ( avctx -> flags2 & CODEC_FLAG2_CHUNKS )		8798789	1					
ANR	8798823	UnaryOperator	!		8798789	0					
ANR	8798824	BitAndExpression	avctx -> flags2 & CODEC_FLAG2_CHUNKS		8798789	1		&			
ANR	8798825	PtrMemberAccess	avctx -> flags2		8798789	0					
ANR	8798826	Identifier	avctx		8798789	0					
ANR	8798827	Identifier	flags2		8798789	1					
ANR	8798828	Identifier	CODEC_FLAG2_CHUNKS		8798789	1					
ANR	8798829	IfStatement	if ( avctx -> thread_count == 1 )		8798789	1					
ANR	8798830	Condition	avctx -> thread_count == 1	13:8:391:414	8798789	0	True				
ANR	8798831	EqualityExpression	avctx -> thread_count == 1		8798789	0		==			
ANR	8798832	PtrMemberAccess	avctx -> thread_count		8798789	0					
ANR	8798833	Identifier	avctx		8798789	0					
ANR	8798834	Identifier	thread_count		8798789	1					
ANR	8798835	PrimaryExpression	1		8798789	1					
ANR	8798836	CompoundStatement		11:34:353:353	8798789	1					
ANR	8798837	ExpressionStatement	avctx -> active_thread_type = 0	15:8:428:457	8798789	0	True				
ANR	8798838	AssignmentExpression	avctx -> active_thread_type = 0		8798789	0		=			
ANR	8798839	PtrMemberAccess	avctx -> active_thread_type		8798789	0					
ANR	8798840	Identifier	avctx		8798789	0					
ANR	8798841	Identifier	active_thread_type		8798789	1					
ANR	8798842	PrimaryExpression	0		8798789	1					
ANR	8798843	ElseStatement	else		8798789	0					
ANR	8798844	IfStatement	if ( frame_threading_supported && ( avctx -> thread_type & FF_THREAD_FRAME ) )		8798789	0					
ANR	8798845	Condition	frame_threading_supported && ( avctx -> thread_type & FF_THREAD_FRAME )	17:15:475:541	8798789	0	True				
ANR	8798846	AndExpression	frame_threading_supported && ( avctx -> thread_type & FF_THREAD_FRAME )		8798789	0		&&			
ANR	8798847	Identifier	frame_threading_supported		8798789	0					
ANR	8798848	BitAndExpression	avctx -> thread_type & FF_THREAD_FRAME		8798789	1		&			
ANR	8798849	PtrMemberAccess	avctx -> thread_type		8798789	0					
ANR	8798850	Identifier	avctx		8798789	0					
ANR	8798851	Identifier	thread_type		8798789	1					
ANR	8798852	Identifier	FF_THREAD_FRAME		8798789	1					
ANR	8798853	CompoundStatement		15:84:480:480	8798789	1					
ANR	8798854	ExpressionStatement	avctx -> active_thread_type = FF_THREAD_FRAME	19:8:555:598	8798789	0	True				
ANR	8798855	AssignmentExpression	avctx -> active_thread_type = FF_THREAD_FRAME		8798789	0		=			
ANR	8798856	PtrMemberAccess	avctx -> active_thread_type		8798789	0					
ANR	8798857	Identifier	avctx		8798789	0					
ANR	8798858	Identifier	active_thread_type		8798789	1					
ANR	8798859	Identifier	FF_THREAD_FRAME		8798789	1					
ANR	8798860	ElseStatement	else		8798789	0					
ANR	8798861	CompoundStatement		19:11:548:548	8798789	0					
ANR	8798862	ExpressionStatement	avctx -> active_thread_type = FF_THREAD_SLICE	23:8:623:666	8798789	0	True				
ANR	8798863	AssignmentExpression	avctx -> active_thread_type = FF_THREAD_SLICE		8798789	0		=			
ANR	8798864	PtrMemberAccess	avctx -> active_thread_type		8798789	0					
ANR	8798865	Identifier	avctx		8798789	0					
ANR	8798866	Identifier	active_thread_type		8798789	1					
ANR	8798867	Identifier	FF_THREAD_SLICE		8798789	1					
ANR	8798868	ReturnType	static void		8798789	1					
ANR	8798869	Identifier	validate_thread_parameters		8798789	2					
ANR	8798870	ParameterList	AVCodecContext * avctx		8798789	3					
ANR	8798871	Parameter	AVCodecContext * avctx	1:39:39:59	8798789	0	True				
ANR	8798872	ParameterType	AVCodecContext *		8798789	0					
ANR	8798873	Identifier	avctx		8798789	1					
ANR	8798874	CFGEntryNode	ENTRY		8798789		True				
ANR	8798875	CFGExitNode	EXIT		8798789		True				
ANR	8798876	Symbol	CODEC_FLAG_TRUNCATED		8798789						
ANR	8798877	Symbol	FF_THREAD_SLICE		8798789						
ANR	8798878	Symbol	avctx -> codec		8798789						
ANR	8798879	Symbol	CODEC_FLAG_LOW_DELAY		8798789						
ANR	8798880	Symbol	* * avctx		8798789						
ANR	8798881	Symbol	avctx -> active_thread_type		8798789						
ANR	8798882	Symbol	CODEC_CAP_FRAME_THREADS		8798789						
ANR	8798883	Symbol	avctx -> thread_count		8798789						
ANR	8798884	Symbol	avctx -> codec -> capabilities		8798789						
ANR	8798885	Symbol	* avctx		8798789						
ANR	8798886	Symbol	CODEC_FLAG2_CHUNKS		8798789						
ANR	8798887	Symbol	frame_threading_supported		8798789						
ANR	8798888	Symbol	* avctx -> codec		8798789						
ANR	8798889	Symbol	avctx -> flags		8798789						
ANR	8798890	Symbol	avctx		8798789						
ANR	8798891	Symbol	avctx -> flags2		8798789						
ANR	8798892	Symbol	FF_THREAD_FRAME		8798789						
ANR	8798893	Symbol	avctx -> thread_type		8798789						
