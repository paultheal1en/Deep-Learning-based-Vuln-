command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	168631	File	/home/p4ultr4n/workplace/ReVeal/raw_code/RENAME_132_0.c								
ANR	168632	Function	postProcess	1:0:0:19351							
ANR	168633	FunctionDef	"postProcess (const uint8_t src [ ] , int srcStride , uint8_t dst [ ] , int dstStride , int width , int height , const QP_STORE_T QPs [ ] , int QPStride , int isColor , PPContext * c2)"		168632	0					
ANR	168634	CompoundStatement		5:0:221:19351	168632	0					
ANR	168635	ExpressionStatement	"DECLARE_ALIGNED ( 8 , PPContext , c ) = * c2"	7:4:228:265	168632	0	True				
ANR	168636	AssignmentExpression	"DECLARE_ALIGNED ( 8 , PPContext , c ) = * c2"		168632	0		=			
ANR	168637	CallExpression	"DECLARE_ALIGNED ( 8 , PPContext , c )"		168632	0					
ANR	168638	Callee	DECLARE_ALIGNED		168632	0					
ANR	168639	Identifier	DECLARE_ALIGNED		168632	0					
ANR	168640	ArgumentList	8		168632	1					
ANR	168641	Argument	8		168632	0					
ANR	168642	PrimaryExpression	8		168632	0					
ANR	168643	Argument	PPContext		168632	1					
ANR	168644	Identifier	PPContext		168632	0					
ANR	168645	Argument	c		168632	2					
ANR	168646	Identifier	c		168632	0					
ANR	168647	UnaryOperationExpression	* c2		168632	1					
ANR	168648	UnaryOperator	*		168632	0					
ANR	168649	Identifier	c2		168632	1					
ANR	168650	IdentifierDeclStatement	"int x , y ;"	9:4:306:313	168632	1	True				
ANR	168651	IdentifierDecl	x		168632	0					
ANR	168652	IdentifierDeclType	int		168632	0					
ANR	168653	Identifier	x		168632	1					
ANR	168654	IdentifierDecl	y		168632	1					
ANR	168655	IdentifierDeclType	int		168632	0					
ANR	168656	Identifier	y		168632	1					
ANR	168657	IdentifierDeclStatement	const int mode = TEMPLATE_PP_TIME_MODE ;	13:4:350:387	168632	2	True				
ANR	168658	IdentifierDecl	mode = TEMPLATE_PP_TIME_MODE		168632	0					
ANR	168659	IdentifierDeclType	const int		168632	0					
ANR	168660	Identifier	mode		168632	1					
ANR	168661	AssignmentExpression	mode = TEMPLATE_PP_TIME_MODE		168632	2		=			
ANR	168662	Identifier	TEMPLATE_PP_TIME_MODE		168632	0					
ANR	168663	Identifier	TEMPLATE_PP_TIME_MODE		168632	1					
ANR	168664	IdentifierDeclStatement	"int black = 0 , white = 255 ;"	21:4:479:501	168632	3	True				
ANR	168665	IdentifierDecl	black = 0		168632	0					
ANR	168666	IdentifierDeclType	int		168632	0					
ANR	168667	Identifier	black		168632	1					
ANR	168668	AssignmentExpression	black = 0		168632	2		=			
ANR	168669	Identifier	black		168632	0					
ANR	168670	PrimaryExpression	0		168632	1					
ANR	168671	IdentifierDecl	white = 255		168632	1					
ANR	168672	IdentifierDeclType	int		168632	0					
ANR	168673	Identifier	white		168632	1					
ANR	168674	AssignmentExpression	white = 255		168632	2		=			
ANR	168675	Identifier	white		168632	0					
ANR	168676	PrimaryExpression	255		168632	1					
ANR	168677	IdentifierDeclStatement	int QPCorrecture = 256 * 256 ;	23:4:559:584	168632	4	True				
ANR	168678	IdentifierDecl	QPCorrecture = 256 * 256		168632	0					
ANR	168679	IdentifierDeclType	int		168632	0					
ANR	168680	Identifier	QPCorrecture		168632	1					
ANR	168681	AssignmentExpression	QPCorrecture = 256 * 256		168632	2		=			
ANR	168682	Identifier	QPCorrecture		168632	0					
ANR	168683	MultiplicativeExpression	256 * 256		168632	1		*			
ANR	168684	PrimaryExpression	256		168632	0					
ANR	168685	PrimaryExpression	256		168632	1					
ANR	168686	IdentifierDeclStatement	int copyAhead ;	27:4:593:606	168632	5	True				
ANR	168687	IdentifierDecl	copyAhead		168632	0					
ANR	168688	IdentifierDeclType	int		168632	0					
ANR	168689	Identifier	copyAhead		168632	1					
ANR	168690	IdentifierDeclStatement	int i ;	31:4:634:639	168632	6	True				
ANR	168691	IdentifierDecl	i		168632	0					
ANR	168692	IdentifierDeclType	int		168632	0					
ANR	168693	Identifier	i		168632	1					
ANR	168694	IdentifierDeclStatement	const int qpHShift = isColor ? 4 - c . hChromaSubSample : 4 ;	37:4:656:710	168632	7	True				
ANR	168695	IdentifierDecl	qpHShift = isColor ? 4 - c . hChromaSubSample : 4		168632	0					
ANR	168696	IdentifierDeclType	const int		168632	0					
ANR	168697	Identifier	qpHShift		168632	1					
ANR	168698	AssignmentExpression	qpHShift = isColor ? 4 - c . hChromaSubSample : 4		168632	2		=			
ANR	168699	Identifier	qpHShift		168632	0					
ANR	168700	ConditionalExpression	isColor ? 4 - c . hChromaSubSample : 4		168632	1					
ANR	168701	Condition	isColor		168632	0					
ANR	168702	Identifier	isColor		168632	0					
ANR	168703	AdditiveExpression	4 - c . hChromaSubSample		168632	1		-			
ANR	168704	PrimaryExpression	4		168632	0					
ANR	168705	MemberAccess	c . hChromaSubSample		168632	1					
ANR	168706	Identifier	c		168632	0					
ANR	168707	Identifier	hChromaSubSample		168632	1					
ANR	168708	PrimaryExpression	4		168632	2					
ANR	168709	IdentifierDeclStatement	const int qpVShift = isColor ? 4 - c . vChromaSubSample : 4 ;	39:4:717:771	168632	8	True				
ANR	168710	IdentifierDecl	qpVShift = isColor ? 4 - c . vChromaSubSample : 4		168632	0					
ANR	168711	IdentifierDeclType	const int		168632	0					
ANR	168712	Identifier	qpVShift		168632	1					
ANR	168713	AssignmentExpression	qpVShift = isColor ? 4 - c . vChromaSubSample : 4		168632	2		=			
ANR	168714	Identifier	qpVShift		168632	0					
ANR	168715	ConditionalExpression	isColor ? 4 - c . vChromaSubSample : 4		168632	1					
ANR	168716	Condition	isColor		168632	0					
ANR	168717	Identifier	isColor		168632	0					
ANR	168718	AdditiveExpression	4 - c . vChromaSubSample		168632	1		-			
ANR	168719	PrimaryExpression	4		168632	0					
ANR	168720	MemberAccess	c . vChromaSubSample		168632	1					
ANR	168721	Identifier	c		168632	0					
ANR	168722	Identifier	vChromaSubSample		168632	1					
ANR	168723	PrimaryExpression	4		168632	2					
ANR	168724	Statement	uint64_t	45:4:800:807	168632	9	True				
ANR	168725	Statement	*	45:13:809:809	168632	10	True				
ANR	168726	Statement	const	45:15:811:815	168632	11	True				
ANR	168727	ExpressionStatement	yHistogram = c . yHistogram	45:21:817:841	168632	12	True				
ANR	168728	AssignmentExpression	yHistogram = c . yHistogram		168632	0		=			
ANR	168729	Identifier	yHistogram		168632	0					
ANR	168730	MemberAccess	c . yHistogram		168632	1					
ANR	168731	Identifier	c		168632	0					
ANR	168732	Identifier	yHistogram		168632	1					
ANR	168733	Statement	uint8_t	47:4:848:854	168632	13	True				
ANR	168734	Statement	*	47:12:856:856	168632	14	True				
ANR	168735	Statement	const	47:14:858:862	168632	15	True				
ANR	168736	ExpressionStatement	tempSrc = srcStride > 0 ? c . tempSrc : c . tempSrc - 23 * srcStride	47:20:864:925	168632	16	True				
ANR	168737	AssignmentExpression	tempSrc = srcStride > 0 ? c . tempSrc : c . tempSrc - 23 * srcStride		168632	0		=			
ANR	168738	Identifier	tempSrc		168632	0					
ANR	168739	ConditionalExpression	srcStride > 0 ? c . tempSrc : c . tempSrc - 23 * srcStride		168632	1					
ANR	168740	Condition	srcStride > 0		168632	0					
ANR	168741	RelationalExpression	srcStride > 0		168632	0		>			
ANR	168742	Identifier	srcStride		168632	0					
ANR	168743	PrimaryExpression	0		168632	1					
ANR	168744	MemberAccess	c . tempSrc		168632	1					
ANR	168745	Identifier	c		168632	0					
ANR	168746	Identifier	tempSrc		168632	1					
ANR	168747	AdditiveExpression	c . tempSrc - 23 * srcStride		168632	2		-			
ANR	168748	MemberAccess	c . tempSrc		168632	0					
ANR	168749	Identifier	c		168632	0					
ANR	168750	Identifier	tempSrc		168632	1					
ANR	168751	MultiplicativeExpression	23 * srcStride		168632	1		*			
ANR	168752	PrimaryExpression	23		168632	0					
ANR	168753	Identifier	srcStride		168632	1					
ANR	168754	Statement	uint8_t	49:4:932:938	168632	17	True				
ANR	168755	Statement	*	49:12:940:940	168632	18	True				
ANR	168756	Statement	const	49:14:942:946	168632	19	True				
ANR	168757	ExpressionStatement	tempDst = ( dstStride > 0 ? c . tempDst : c . tempDst - 23 * dstStride ) + 32	49:20:948:1016	168632	20	True				
ANR	168758	AssignmentExpression	tempDst = ( dstStride > 0 ? c . tempDst : c . tempDst - 23 * dstStride ) + 32		168632	0		=			
ANR	168759	Identifier	tempDst		168632	0					
ANR	168760	AdditiveExpression	( dstStride > 0 ? c . tempDst : c . tempDst - 23 * dstStride ) + 32		168632	1		+			
ANR	168761	ConditionalExpression	dstStride > 0 ? c . tempDst : c . tempDst - 23 * dstStride		168632	0					
ANR	168762	Condition	dstStride > 0		168632	0					
ANR	168763	RelationalExpression	dstStride > 0		168632	0		>			
ANR	168764	Identifier	dstStride		168632	0					
ANR	168765	PrimaryExpression	0		168632	1					
ANR	168766	MemberAccess	c . tempDst		168632	1					
ANR	168767	Identifier	c		168632	0					
ANR	168768	Identifier	tempDst		168632	1					
ANR	168769	AdditiveExpression	c . tempDst - 23 * dstStride		168632	2		-			
ANR	168770	MemberAccess	c . tempDst		168632	0					
ANR	168771	Identifier	c		168632	0					
ANR	168772	Identifier	tempDst		168632	1					
ANR	168773	MultiplicativeExpression	23 * dstStride		168632	1		*			
ANR	168774	PrimaryExpression	23		168632	0					
ANR	168775	Identifier	dstStride		168632	1					
ANR	168776	PrimaryExpression	32		168632	1					
ANR	168777	IfStatement	if ( mode & VISUALIZE )		168632	21					
ANR	168778	Condition	mode & VISUALIZE	55:8:1095:1110	168632	0	True				
ANR	168779	BitAndExpression	mode & VISUALIZE		168632	0		&			
ANR	168780	Identifier	mode		168632	0					
ANR	168781	Identifier	VISUALIZE		168632	1					
ANR	168782	CompoundStatement		51:25:890:890	168632	1					
ANR	168783	IfStatement	if ( ! ( mode & ( V_A_DEBLOCK | H_A_DEBLOCK ) ) || TEMPLATE_PP_MMX )		168632	0					
ANR	168784	Condition	! ( mode & ( V_A_DEBLOCK | H_A_DEBLOCK ) ) || TEMPLATE_PP_MMX	57:11:1126:1181	168632	0	True				
ANR	168785	OrExpression	! ( mode & ( V_A_DEBLOCK | H_A_DEBLOCK ) ) || TEMPLATE_PP_MMX		168632	0		||			
ANR	168786	UnaryOperationExpression	! ( mode & ( V_A_DEBLOCK | H_A_DEBLOCK ) )		168632	0					
ANR	168787	UnaryOperator	!		168632	0					
ANR	168788	BitAndExpression	mode & ( V_A_DEBLOCK | H_A_DEBLOCK )		168632	1		&			
ANR	168789	Identifier	mode		168632	0					
ANR	168790	InclusiveOrExpression	V_A_DEBLOCK | H_A_DEBLOCK		168632	1		|			
ANR	168791	Identifier	V_A_DEBLOCK		168632	0					
ANR	168792	Identifier	H_A_DEBLOCK		168632	1					
ANR	168793	Identifier	TEMPLATE_PP_MMX		168632	1					
ANR	168794	CompoundStatement		53:69:962:962	168632	1					
ANR	168795	ExpressionStatement	"av_log ( c2 , AV_LOG_WARNING , ""Visualization is currently only supported with the accurate deblock filter without SIMD\\n"" )"	59:12:1199:1318	168632	0	True				
ANR	168796	CallExpression	"av_log ( c2 , AV_LOG_WARNING , ""Visualization is currently only supported with the accurate deblock filter without SIMD\\n"" )"		168632	0					
ANR	168797	Callee	av_log		168632	0					
ANR	168798	Identifier	av_log		168632	0					
ANR	168799	ArgumentList	c2		168632	1					
ANR	168800	Argument	c2		168632	0					
ANR	168801	Identifier	c2		168632	0					
ANR	168802	Argument	AV_LOG_WARNING		168632	1					
ANR	168803	Identifier	AV_LOG_WARNING		168632	0					
ANR	168804	Argument	"""Visualization is currently only supported with the accurate deblock filter without SIMD\\n"""		168632	2					
ANR	168805	PrimaryExpression	"""Visualization is currently only supported with the accurate deblock filter without SIMD\\n"""		168632	0					
ANR	168806	ForStatement	for ( i = 0 ; i < 57 ; i ++ )		168632	22					
ANR	168807	ForInit	i = 0 ;	69:8:1370:1373	168632	0	True				
ANR	168808	AssignmentExpression	i = 0		168632	0		=			
ANR	168809	Identifier	i		168632	0					
ANR	168810	PrimaryExpression	0		168632	1					
ANR	168811	Condition	i < 57	69:13:1375:1378	168632	1	True				
ANR	168812	RelationalExpression	i < 57		168632	0		<			
ANR	168813	Identifier	i		168632	0					
ANR	168814	PrimaryExpression	57		168632	1					
ANR	168815	PostIncDecOperationExpression	i ++	69:19:1381:1383	168632	2	True				
ANR	168816	Identifier	i		168632	0					
ANR	168817	IncDec	++		168632	1					
ANR	168818	CompoundStatement		69:8:1229:1256	168632	3					
ANR	168819	IdentifierDeclStatement	int offset = ( ( i * c . ppMode . baseDcDiff ) >> 8 ) + 1 ;	71:8:1396:1440	168632	0	True				
ANR	168820	IdentifierDecl	offset = ( ( i * c . ppMode . baseDcDiff ) >> 8 ) + 1		168632	0					
ANR	168821	IdentifierDeclType	int		168632	0					
ANR	168822	Identifier	offset		168632	1					
ANR	168823	AssignmentExpression	offset = ( ( i * c . ppMode . baseDcDiff ) >> 8 ) + 1		168632	2		=			
ANR	168824	Identifier	offset		168632	0					
ANR	168825	AdditiveExpression	( ( i * c . ppMode . baseDcDiff ) >> 8 ) + 1		168632	1		+			
ANR	168826	ShiftExpression	( i * c . ppMode . baseDcDiff ) >> 8		168632	0		>>			
ANR	168827	MultiplicativeExpression	i * c . ppMode . baseDcDiff		168632	0		*			
ANR	168828	Identifier	i		168632	0					
ANR	168829	MemberAccess	c . ppMode . baseDcDiff		168632	1					
ANR	168830	MemberAccess	c . ppMode		168632	0					
ANR	168831	Identifier	c		168632	0					
ANR	168832	Identifier	ppMode		168632	1					
ANR	168833	Identifier	baseDcDiff		168632	1					
ANR	168834	PrimaryExpression	8		168632	1					
ANR	168835	PrimaryExpression	1		168632	1					
ANR	168836	IdentifierDeclStatement	int threshold = offset * 2 + 1 ;	73:8:1451:1478	168632	1	True				
ANR	168837	IdentifierDecl	threshold = offset * 2 + 1		168632	0					
ANR	168838	IdentifierDeclType	int		168632	0					
ANR	168839	Identifier	threshold		168632	1					
ANR	168840	AssignmentExpression	threshold = offset * 2 + 1		168632	2		=			
ANR	168841	Identifier	threshold		168632	0					
ANR	168842	AdditiveExpression	offset * 2 + 1		168632	1		+			
ANR	168843	MultiplicativeExpression	offset * 2		168632	0		*			
ANR	168844	Identifier	offset		168632	0					
ANR	168845	PrimaryExpression	2		168632	1					
ANR	168846	PrimaryExpression	1		168632	1					
ANR	168847	ExpressionStatement	c . mmxDcOffset [ i ] = 0x7F - offset	75:8:1489:1520	168632	2	True				
ANR	168848	AssignmentExpression	c . mmxDcOffset [ i ] = 0x7F - offset		168632	0		=			
ANR	168849	ArrayIndexing	c . mmxDcOffset [ i ]		168632	0					
ANR	168850	MemberAccess	c . mmxDcOffset		168632	0					
ANR	168851	Identifier	c		168632	0					
ANR	168852	Identifier	mmxDcOffset		168632	1					
ANR	168853	Identifier	i		168632	1					
ANR	168854	AdditiveExpression	0x7F - offset		168632	1		-			
ANR	168855	PrimaryExpression	0x7F		168632	0					
ANR	168856	Identifier	offset		168632	1					
ANR	168857	ExpressionStatement	c . mmxDcThreshold [ i ] = 0x7F - threshold	77:8:1531:1568	168632	3	True				
ANR	168858	AssignmentExpression	c . mmxDcThreshold [ i ] = 0x7F - threshold		168632	0		=			
ANR	168859	ArrayIndexing	c . mmxDcThreshold [ i ]		168632	0					
ANR	168860	MemberAccess	c . mmxDcThreshold		168632	0					
ANR	168861	Identifier	c		168632	0					
ANR	168862	Identifier	mmxDcThreshold		168632	1					
ANR	168863	Identifier	i		168632	1					
ANR	168864	AdditiveExpression	0x7F - threshold		168632	1		-			
ANR	168865	PrimaryExpression	0x7F		168632	0					
ANR	168866	Identifier	threshold		168632	1					
ANR	168867	Statement	c	79:8:1579:1579	168632	4	True				
ANR	168868	Statement	.	79:9:1580:1580	168632	5	True				
ANR	168869	Statement	mmxDcOffset	79:10:1581:1591	168632	6	True				
ANR	168870	Statement	[	79:21:1592:1592	168632	7	True				
ANR	168871	Statement	i	79:22:1593:1593	168632	8	True				
ANR	168872	Statement	]	79:23:1594:1594	168632	9	True				
ANR	168873	Statement	*=	79:24:1595:1596	168632	10	True				
ANR	168874	Statement	0x0101010101010101L	79:27:1598:1616	168632	11	True				
ANR	168875	ExpressionStatement	L	79:46:1617:1618	168632	12	True				
ANR	168876	Identifier	L		168632	0					
ANR	168877	Statement	c	81:8:1629:1629	168632	13	True				
ANR	168878	Statement	.	81:9:1630:1630	168632	14	True				
ANR	168879	Statement	mmxDcThreshold	81:10:1631:1644	168632	15	True				
ANR	168880	Statement	[	81:24:1645:1645	168632	16	True				
ANR	168881	Statement	i	81:25:1646:1646	168632	17	True				
ANR	168882	Statement	]	81:26:1647:1647	168632	18	True				
ANR	168883	Statement	*=	81:27:1648:1649	168632	19	True				
ANR	168884	Statement	0x0101010101010101L	81:30:1651:1669	168632	20	True				
ANR	168885	ExpressionStatement	L	81:49:1670:1671	168632	21	True				
ANR	168886	Identifier	L		168632	0					
ANR	168887	IfStatement	if ( mode & CUBIC_IPOL_DEINT_FILTER )		168632	23					
ANR	168888	Condition	mode & CUBIC_IPOL_DEINT_FILTER	89:7:1698:1727	168632	0	True				
ANR	168889	BitAndExpression	mode & CUBIC_IPOL_DEINT_FILTER		168632	0		&			
ANR	168890	Identifier	mode		168632	0					
ANR	168891	Identifier	CUBIC_IPOL_DEINT_FILTER		168632	1					
ANR	168892	ExpressionStatement	copyAhead = 16	89:39:1730:1742	168632	1	True				
ANR	168893	AssignmentExpression	copyAhead = 16		168632	0		=			
ANR	168894	Identifier	copyAhead		168632	0					
ANR	168895	PrimaryExpression	16		168632	1					
ANR	168896	ElseStatement	else		168632	0					
ANR	168897	IfStatement	if ( ( mode & LINEAR_BLEND_DEINT_FILTER ) || ( mode & FFMPEG_DEINT_FILTER ) || ( mode & LOWPASS5_DEINT_FILTER ) )		168632	0					
ANR	168898	Condition	( mode & LINEAR_BLEND_DEINT_FILTER ) || ( mode & FFMPEG_DEINT_FILTER ) || ( mode & LOWPASS5_DEINT_FILTER )	91:15:1760:1885	168632	0	True				
ANR	168899	OrExpression	( mode & LINEAR_BLEND_DEINT_FILTER ) || ( mode & FFMPEG_DEINT_FILTER ) || ( mode & LOWPASS5_DEINT_FILTER )		168632	0		||			
ANR	168900	BitAndExpression	mode & LINEAR_BLEND_DEINT_FILTER		168632	0		&			
ANR	168901	Identifier	mode		168632	0					
ANR	168902	Identifier	LINEAR_BLEND_DEINT_FILTER		168632	1					
ANR	168903	OrExpression	( mode & FFMPEG_DEINT_FILTER ) || ( mode & LOWPASS5_DEINT_FILTER )		168632	1		||			
ANR	168904	BitAndExpression	mode & FFMPEG_DEINT_FILTER		168632	0		&			
ANR	168905	Identifier	mode		168632	0					
ANR	168906	Identifier	FFMPEG_DEINT_FILTER		168632	1					
ANR	168907	BitAndExpression	mode & LOWPASS5_DEINT_FILTER		168632	1		&			
ANR	168908	Identifier	mode		168632	0					
ANR	168909	Identifier	LOWPASS5_DEINT_FILTER		168632	1					
ANR	168910	ExpressionStatement	copyAhead = 14	95:47:1888:1900	168632	1	True				
ANR	168911	AssignmentExpression	copyAhead = 14		168632	0		=			
ANR	168912	Identifier	copyAhead		168632	0					
ANR	168913	PrimaryExpression	14		168632	1					
ANR	168914	ElseStatement	else		168632	0					
ANR	168915	IfStatement	if ( ( mode & V_DEBLOCK ) || ( mode & LINEAR_IPOL_DEINT_FILTER ) || ( mode & MEDIAN_DEINT_FILTER ) || ( mode & V_A_DEBLOCK ) )		168632	0					
ANR	168916	Condition	( mode & V_DEBLOCK ) || ( mode & LINEAR_IPOL_DEINT_FILTER ) || ( mode & MEDIAN_DEINT_FILTER ) || ( mode & V_A_DEBLOCK )	97:15:1918:2067	168632	0	True				
ANR	168917	OrExpression	( mode & V_DEBLOCK ) || ( mode & LINEAR_IPOL_DEINT_FILTER ) || ( mode & MEDIAN_DEINT_FILTER ) || ( mode & V_A_DEBLOCK )		168632	0		||			
ANR	168918	BitAndExpression	mode & V_DEBLOCK		168632	0		&			
ANR	168919	Identifier	mode		168632	0					
ANR	168920	Identifier	V_DEBLOCK		168632	1					
ANR	168921	OrExpression	( mode & LINEAR_IPOL_DEINT_FILTER ) || ( mode & MEDIAN_DEINT_FILTER ) || ( mode & V_A_DEBLOCK )		168632	1		||			
ANR	168922	BitAndExpression	mode & LINEAR_IPOL_DEINT_FILTER		168632	0		&			
ANR	168923	Identifier	mode		168632	0					
ANR	168924	Identifier	LINEAR_IPOL_DEINT_FILTER		168632	1					
ANR	168925	OrExpression	( mode & MEDIAN_DEINT_FILTER ) || ( mode & V_A_DEBLOCK )		168632	1		||			
ANR	168926	BitAndExpression	mode & MEDIAN_DEINT_FILTER		168632	0		&			
ANR	168927	Identifier	mode		168632	0					
ANR	168928	Identifier	MEDIAN_DEINT_FILTER		168632	1					
ANR	168929	BitAndExpression	mode & V_A_DEBLOCK		168632	1		&			
ANR	168930	Identifier	mode		168632	0					
ANR	168931	Identifier	V_A_DEBLOCK		168632	1					
ANR	168932	ExpressionStatement	copyAhead = 13	103:37:2070:2082	168632	1	True				
ANR	168933	AssignmentExpression	copyAhead = 13		168632	0		=			
ANR	168934	Identifier	copyAhead		168632	0					
ANR	168935	PrimaryExpression	13		168632	1					
ANR	168936	ElseStatement	else		168632	0					
ANR	168937	IfStatement	if ( mode & V_X1_FILTER )		168632	0					
ANR	168938	Condition	mode & V_X1_FILTER	105:12:2097:2114	168632	0	True				
ANR	168939	BitAndExpression	mode & V_X1_FILTER		168632	0		&			
ANR	168940	Identifier	mode		168632	0					
ANR	168941	Identifier	V_X1_FILTER		168632	1					
ANR	168942	ExpressionStatement	copyAhead = 11	105:32:2117:2129	168632	1	True				
ANR	168943	AssignmentExpression	copyAhead = 11		168632	0		=			
ANR	168944	Identifier	copyAhead		168632	0					
ANR	168945	PrimaryExpression	11		168632	1					
ANR	168946	ElseStatement	else		168632	0					
ANR	168947	IfStatement	if ( mode & DERING )		168632	0					
ANR	168948	Condition	mode & DERING	109:12:2194:2206	168632	0	True				
ANR	168949	BitAndExpression	mode & DERING		168632	0		&			
ANR	168950	Identifier	mode		168632	0					
ANR	168951	Identifier	DERING		168632	1					
ANR	168952	ExpressionStatement	copyAhead = 9	109:27:2209:2220	168632	1	True				
ANR	168953	AssignmentExpression	copyAhead = 9		168632	0		=			
ANR	168954	Identifier	copyAhead		168632	0					
ANR	168955	PrimaryExpression	9		168632	1					
ANR	168956	ElseStatement	else		168632	0					
ANR	168957	ExpressionStatement	copyAhead = 8	111:9:2232:2243	168632	0	True				
ANR	168958	AssignmentExpression	copyAhead = 8		168632	0		=			
ANR	168959	Identifier	copyAhead		168632	0					
ANR	168960	PrimaryExpression	8		168632	1					
ANR	168961	ExpressionStatement	copyAhead -= 8	115:4:2252:2265	168632	24	True				
ANR	168962	AssignmentExpression	copyAhead -= 8		168632	0		-=			
ANR	168963	Identifier	copyAhead		168632	0					
ANR	168964	PrimaryExpression	8		168632	1					
ANR	168965	IfStatement	if ( ! isColor )		168632	25					
ANR	168966	Condition	! isColor	119:7:2277:2284	168632	0	True				
ANR	168967	UnaryOperationExpression	! isColor		168632	0					
ANR	168968	UnaryOperator	!		168632	0					
ANR	168969	Identifier	isColor		168632	1					
ANR	168970	CompoundStatement		125:8:2174:2186	168632	1					
ANR	168971	IdentifierDeclStatement	uint64_t sum = 0 ;	121:8:2297:2312	168632	0	True				
ANR	168972	IdentifierDecl	sum = 0		168632	0					
ANR	168973	IdentifierDeclType	uint64_t		168632	0					
ANR	168974	Identifier	sum		168632	1					
ANR	168975	AssignmentExpression	sum = 0		168632	2		=			
ANR	168976	Identifier	sum		168632	0					
ANR	168977	PrimaryExpression	0		168632	1					
ANR	168978	IdentifierDeclStatement	int i ;	123:8:2323:2328	168632	1	True				
ANR	168979	IdentifierDecl	i		168632	0					
ANR	168980	IdentifierDeclType	int		168632	0					
ANR	168981	Identifier	i		168632	1					
ANR	168982	IdentifierDeclStatement	uint64_t maxClipped ;	125:8:2339:2358	168632	2	True				
ANR	168983	IdentifierDecl	maxClipped		168632	0					
ANR	168984	IdentifierDeclType	uint64_t		168632	0					
ANR	168985	Identifier	maxClipped		168632	1					
ANR	168986	IdentifierDeclStatement	uint64_t clipped ;	127:8:2369:2385	168632	3	True				
ANR	168987	IdentifierDecl	clipped		168632	0					
ANR	168988	IdentifierDeclType	uint64_t		168632	0					
ANR	168989	Identifier	clipped		168632	1					
ANR	168990	IdentifierDeclStatement	double scale ;	129:8:2396:2408	168632	4	True				
ANR	168991	IdentifierDecl	scale		168632	0					
ANR	168992	IdentifierDeclType	double		168632	0					
ANR	168993	Identifier	scale		168632	1					
ANR	168994	ExpressionStatement	c . frameNum ++	133:8:2421:2433	168632	5	True				
ANR	168995	PostIncDecOperationExpression	c . frameNum ++		168632	0					
ANR	168996	MemberAccess	c . frameNum		168632	0					
ANR	168997	Identifier	c		168632	0					
ANR	168998	Identifier	frameNum		168632	1					
ANR	168999	IncDec	++		168632	1					
ANR	169000	IfStatement	if ( c . frameNum == 1 )		168632	6					
ANR	169001	Condition	c . frameNum == 1	137:11:2497:2511	168632	0	True				
ANR	169002	EqualityExpression	c . frameNum == 1		168632	0		==			
ANR	169003	MemberAccess	c . frameNum		168632	0					
ANR	169004	Identifier	c		168632	0					
ANR	169005	Identifier	frameNum		168632	1					
ANR	169006	PrimaryExpression	1		168632	1					
ANR	169007	ExpressionStatement	yHistogram [ 0 ] = width * ( uint64_t ) height / 64 * 15 / 256	137:28:2514:2561	168632	1	True				
ANR	169008	AssignmentExpression	yHistogram [ 0 ] = width * ( uint64_t ) height / 64 * 15 / 256		168632	0		=			
ANR	169009	ArrayIndexing	yHistogram [ 0 ]		168632	0					
ANR	169010	Identifier	yHistogram		168632	0					
ANR	169011	PrimaryExpression	0		168632	1					
ANR	169012	MultiplicativeExpression	width * ( uint64_t ) height / 64 * 15 / 256		168632	1		*			
ANR	169013	Identifier	width		168632	0					
ANR	169014	MultiplicativeExpression	( uint64_t ) height / 64 * 15 / 256		168632	1		/			
ANR	169015	CastExpression	( uint64_t ) height		168632	0					
ANR	169016	CastTarget	uint64_t		168632	0					
ANR	169017	Identifier	height		168632	1					
ANR	169018	MultiplicativeExpression	64 * 15 / 256		168632	1		*			
ANR	169019	PrimaryExpression	64		168632	0					
ANR	169020	MultiplicativeExpression	15 / 256		168632	1		/			
ANR	169021	PrimaryExpression	15		168632	0					
ANR	169022	PrimaryExpression	256		168632	1					
ANR	169023	ForStatement	for ( i = 0 ; i < 256 ; i ++ )		168632	7					
ANR	169024	ForInit	i = 0 ;	141:12:2578:2581	168632	0	True				
ANR	169025	AssignmentExpression	i = 0		168632	0		=			
ANR	169026	Identifier	i		168632	0					
ANR	169027	PrimaryExpression	0		168632	1					
ANR	169028	Condition	i < 256	141:17:2583:2587	168632	1	True				
ANR	169029	RelationalExpression	i < 256		168632	0		<			
ANR	169030	Identifier	i		168632	0					
ANR	169031	PrimaryExpression	256		168632	1					
ANR	169032	PostIncDecOperationExpression	i ++	141:24:2590:2592	168632	2	True				
ANR	169033	Identifier	i		168632	0					
ANR	169034	IncDec	++		168632	1					
ANR	169035	CompoundStatement		137:28:2372:2372	168632	3					
ANR	169036	ExpressionStatement	sum += yHistogram [ i ]	143:12:2609:2628	168632	0	True				
ANR	169037	AssignmentExpression	sum += yHistogram [ i ]		168632	0		+=			
ANR	169038	Identifier	sum		168632	0					
ANR	169039	ArrayIndexing	yHistogram [ i ]		168632	1					
ANR	169040	Identifier	yHistogram		168632	0					
ANR	169041	Identifier	i		168632	1					
ANR	169042	ExpressionStatement	maxClipped = ( uint64_t ) ( sum * c . ppMode . maxClippedThreshold )	151:8:2715:2773	168632	8	True				
ANR	169043	AssignmentExpression	maxClipped = ( uint64_t ) ( sum * c . ppMode . maxClippedThreshold )		168632	0		=			
ANR	169044	Identifier	maxClipped		168632	0					
ANR	169045	CastExpression	( uint64_t ) ( sum * c . ppMode . maxClippedThreshold )		168632	1					
ANR	169046	CastTarget	uint64_t		168632	0					
ANR	169047	MultiplicativeExpression	sum * c . ppMode . maxClippedThreshold		168632	1		*			
ANR	169048	Identifier	sum		168632	0					
ANR	169049	MemberAccess	c . ppMode . maxClippedThreshold		168632	1					
ANR	169050	MemberAccess	c . ppMode		168632	0					
ANR	169051	Identifier	c		168632	0					
ANR	169052	Identifier	ppMode		168632	1					
ANR	169053	Identifier	maxClippedThreshold		168632	1					
ANR	169054	ExpressionStatement	clipped = sum	155:8:2786:2798	168632	9	True				
ANR	169055	AssignmentExpression	clipped = sum		168632	0		=			
ANR	169056	Identifier	clipped		168632	0					
ANR	169057	Identifier	sum		168632	1					
ANR	169058	ForStatement	for ( black = 255 ; black > 0 ; black -- )		168632	10					
ANR	169059	ForInit	black = 255 ;	157:12:2813:2822	168632	0	True				
ANR	169060	AssignmentExpression	black = 255		168632	0		=			
ANR	169061	Identifier	black		168632	0					
ANR	169062	PrimaryExpression	255		168632	1					
ANR	169063	Condition	black > 0	157:23:2824:2830	168632	1	True				
ANR	169064	RelationalExpression	black > 0		168632	0		>			
ANR	169065	Identifier	black		168632	0					
ANR	169066	PrimaryExpression	0		168632	1					
ANR	169067	PostIncDecOperationExpression	black --	157:32:2833:2839	168632	2	True				
ANR	169068	Identifier	black		168632	0					
ANR	169069	IncDec	--		168632	1					
ANR	169070	CompoundStatement		153:40:2619:2619	168632	3					
ANR	169071	IfStatement	if ( clipped < maxClipped )		168632	0					
ANR	169072	Condition	clipped < maxClipped	159:15:2859:2878	168632	0	True				
ANR	169073	RelationalExpression	clipped < maxClipped		168632	0		<			
ANR	169074	Identifier	clipped		168632	0					
ANR	169075	Identifier	maxClipped		168632	1					
ANR	169076	BreakStatement	break ;	159:37:2881:2886	168632	1	True				
ANR	169077	ExpressionStatement	clipped -= yHistogram [ black ]	161:12:2901:2928	168632	1	True				
ANR	169078	AssignmentExpression	clipped -= yHistogram [ black ]		168632	0		-=			
ANR	169079	Identifier	clipped		168632	0					
ANR	169080	ArrayIndexing	yHistogram [ black ]		168632	1					
ANR	169081	Identifier	yHistogram		168632	0					
ANR	169082	Identifier	black		168632	1					
ANR	169083	ExpressionStatement	clipped = sum	167:8:2952:2964	168632	11	True				
ANR	169084	AssignmentExpression	clipped = sum		168632	0		=			
ANR	169085	Identifier	clipped		168632	0					
ANR	169086	Identifier	sum		168632	1					
ANR	169087	ForStatement	for ( white = 0 ; white < 256 ; white ++ )		168632	12					
ANR	169088	ForInit	white = 0 ;	169:12:2979:2986	168632	0	True				
ANR	169089	AssignmentExpression	white = 0		168632	0		=			
ANR	169090	Identifier	white		168632	0					
ANR	169091	PrimaryExpression	0		168632	1					
ANR	169092	Condition	white < 256	169:21:2988:2996	168632	1	True				
ANR	169093	RelationalExpression	white < 256		168632	0		<			
ANR	169094	Identifier	white		168632	0					
ANR	169095	PrimaryExpression	256		168632	1					
ANR	169096	PostIncDecOperationExpression	white ++	169:32:2999:3005	168632	2	True				
ANR	169097	Identifier	white		168632	0					
ANR	169098	IncDec	++		168632	1					
ANR	169099	CompoundStatement		165:40:2785:2785	168632	3					
ANR	169100	IfStatement	if ( clipped < maxClipped )		168632	0					
ANR	169101	Condition	clipped < maxClipped	171:15:3025:3044	168632	0	True				
ANR	169102	RelationalExpression	clipped < maxClipped		168632	0		<			
ANR	169103	Identifier	clipped		168632	0					
ANR	169104	Identifier	maxClipped		168632	1					
ANR	169105	BreakStatement	break ;	171:37:3047:3052	168632	1	True				
ANR	169106	ExpressionStatement	clipped -= yHistogram [ white ]	173:12:3067:3094	168632	1	True				
ANR	169107	AssignmentExpression	clipped -= yHistogram [ white ]		168632	0		-=			
ANR	169108	Identifier	clipped		168632	0					
ANR	169109	ArrayIndexing	yHistogram [ white ]		168632	1					
ANR	169110	Identifier	yHistogram		168632	0					
ANR	169111	Identifier	white		168632	1					
ANR	169112	ExpressionStatement	scale = ( double ) ( c . ppMode . maxAllowedY - c . ppMode . minAllowedY ) / ( double ) ( white - black )	179:8:3118:3202	168632	13	True				
ANR	169113	AssignmentExpression	scale = ( double ) ( c . ppMode . maxAllowedY - c . ppMode . minAllowedY ) / ( double ) ( white - black )		168632	0		=			
ANR	169114	Identifier	scale		168632	0					
ANR	169115	MultiplicativeExpression	( double ) ( c . ppMode . maxAllowedY - c . ppMode . minAllowedY ) / ( double ) ( white - black )		168632	1		/			
ANR	169116	CastExpression	( double ) ( c . ppMode . maxAllowedY - c . ppMode . minAllowedY )		168632	0					
ANR	169117	CastTarget	double		168632	0					
ANR	169118	AdditiveExpression	c . ppMode . maxAllowedY - c . ppMode . minAllowedY		168632	1		-			
ANR	169119	MemberAccess	c . ppMode . maxAllowedY		168632	0					
ANR	169120	MemberAccess	c . ppMode		168632	0					
ANR	169121	Identifier	c		168632	0					
ANR	169122	Identifier	ppMode		168632	1					
ANR	169123	Identifier	maxAllowedY		168632	1					
ANR	169124	MemberAccess	c . ppMode . minAllowedY		168632	1					
ANR	169125	MemberAccess	c . ppMode		168632	0					
ANR	169126	Identifier	c		168632	0					
ANR	169127	Identifier	ppMode		168632	1					
ANR	169128	Identifier	minAllowedY		168632	1					
ANR	169129	CastExpression	( double ) ( white - black )		168632	1					
ANR	169130	CastTarget	double		168632	0					
ANR	169131	AdditiveExpression	white - black		168632	1		-			
ANR	169132	Identifier	white		168632	0					
ANR	169133	Identifier	black		168632	1					
ANR	169134	ExpressionStatement	c . packedYScale = ( uint16_t ) ( scale * 256.0 + 0.5 )	185:8:3239:3284	168632	14	True				
ANR	169135	AssignmentExpression	c . packedYScale = ( uint16_t ) ( scale * 256.0 + 0.5 )		168632	0		=			
ANR	169136	MemberAccess	c . packedYScale		168632	0					
ANR	169137	Identifier	c		168632	0					
ANR	169138	Identifier	packedYScale		168632	1					
ANR	169139	CastExpression	( uint16_t ) ( scale * 256.0 + 0.5 )		168632	1					
ANR	169140	CastTarget	uint16_t		168632	0					
ANR	169141	AdditiveExpression	scale * 256.0 + 0.5		168632	1		+			
ANR	169142	MultiplicativeExpression	scale * 256.0		168632	0		*			
ANR	169143	Identifier	scale		168632	0					
ANR	169144	PrimaryExpression	256.0		168632	1					
ANR	169145	PrimaryExpression	0.5		168632	1					
ANR	169146	ExpressionStatement	c . packedYOffset = ( ( ( black * c . packedYScale ) >> 8 ) - c . ppMode . minAllowedY ) & 0xFFFF	187:8:3295:3373	168632	15	True				
ANR	169147	AssignmentExpression	c . packedYOffset = ( ( ( black * c . packedYScale ) >> 8 ) - c . ppMode . minAllowedY ) & 0xFFFF		168632	0		=			
ANR	169148	MemberAccess	c . packedYOffset		168632	0					
ANR	169149	Identifier	c		168632	0					
ANR	169150	Identifier	packedYOffset		168632	1					
ANR	169151	BitAndExpression	( ( ( black * c . packedYScale ) >> 8 ) - c . ppMode . minAllowedY ) & 0xFFFF		168632	1		&			
ANR	169152	AdditiveExpression	( ( black * c . packedYScale ) >> 8 ) - c . ppMode . minAllowedY		168632	0		-			
ANR	169153	ShiftExpression	( black * c . packedYScale ) >> 8		168632	0		>>			
ANR	169154	MultiplicativeExpression	black * c . packedYScale		168632	0		*			
ANR	169155	Identifier	black		168632	0					
ANR	169156	MemberAccess	c . packedYScale		168632	1					
ANR	169157	Identifier	c		168632	0					
ANR	169158	Identifier	packedYScale		168632	1					
ANR	169159	PrimaryExpression	8		168632	1					
ANR	169160	MemberAccess	c . ppMode . minAllowedY		168632	1					
ANR	169161	MemberAccess	c . ppMode		168632	0					
ANR	169162	Identifier	c		168632	0					
ANR	169163	Identifier	ppMode		168632	1					
ANR	169164	Identifier	minAllowedY		168632	1					
ANR	169165	PrimaryExpression	0xFFFF		168632	1					
ANR	169166	ExpressionStatement	c . packedYOffset |= c . packedYOffset << 32	199:8:3525:3562	168632	16	True				
ANR	169167	AssignmentExpression	c . packedYOffset |= c . packedYOffset << 32		168632	0		|=			
ANR	169168	MemberAccess	c . packedYOffset		168632	0					
ANR	169169	Identifier	c		168632	0					
ANR	169170	Identifier	packedYOffset		168632	1					
ANR	169171	ShiftExpression	c . packedYOffset << 32		168632	1		<<			
ANR	169172	MemberAccess	c . packedYOffset		168632	0					
ANR	169173	Identifier	c		168632	0					
ANR	169174	Identifier	packedYOffset		168632	1					
ANR	169175	PrimaryExpression	32		168632	1					
ANR	169176	ExpressionStatement	c . packedYOffset |= c . packedYOffset << 16	201:8:3573:3610	168632	17	True				
ANR	169177	AssignmentExpression	c . packedYOffset |= c . packedYOffset << 16		168632	0		|=			
ANR	169178	MemberAccess	c . packedYOffset		168632	0					
ANR	169179	Identifier	c		168632	0					
ANR	169180	Identifier	packedYOffset		168632	1					
ANR	169181	ShiftExpression	c . packedYOffset << 16		168632	1		<<			
ANR	169182	MemberAccess	c . packedYOffset		168632	0					
ANR	169183	Identifier	c		168632	0					
ANR	169184	Identifier	packedYOffset		168632	1					
ANR	169185	PrimaryExpression	16		168632	1					
ANR	169186	ExpressionStatement	c . packedYScale |= c . packedYScale << 32	205:8:3623:3658	168632	18	True				
ANR	169187	AssignmentExpression	c . packedYScale |= c . packedYScale << 32		168632	0		|=			
ANR	169188	MemberAccess	c . packedYScale		168632	0					
ANR	169189	Identifier	c		168632	0					
ANR	169190	Identifier	packedYScale		168632	1					
ANR	169191	ShiftExpression	c . packedYScale << 32		168632	1		<<			
ANR	169192	MemberAccess	c . packedYScale		168632	0					
ANR	169193	Identifier	c		168632	0					
ANR	169194	Identifier	packedYScale		168632	1					
ANR	169195	PrimaryExpression	32		168632	1					
ANR	169196	ExpressionStatement	c . packedYScale |= c . packedYScale << 16	207:8:3669:3704	168632	19	True				
ANR	169197	AssignmentExpression	c . packedYScale |= c . packedYScale << 16		168632	0		|=			
ANR	169198	MemberAccess	c . packedYScale		168632	0					
ANR	169199	Identifier	c		168632	0					
ANR	169200	Identifier	packedYScale		168632	1					
ANR	169201	ShiftExpression	c . packedYScale << 16		168632	1		<<			
ANR	169202	MemberAccess	c . packedYScale		168632	0					
ANR	169203	Identifier	c		168632	0					
ANR	169204	Identifier	packedYScale		168632	1					
ANR	169205	PrimaryExpression	16		168632	1					
ANR	169206	IfStatement	if ( mode & LEVEL_FIX )		168632	20					
ANR	169207	Condition	mode & LEVEL_FIX	211:11:3720:3735	168632	0	True				
ANR	169208	BitAndExpression	mode & LEVEL_FIX		168632	0		&			
ANR	169209	Identifier	mode		168632	0					
ANR	169210	Identifier	LEVEL_FIX		168632	1					
ANR	169211	ExpressionStatement	QPCorrecture = ( int ) ( scale * 256 * 256 + 0.5 )	211:36:3745:3785	168632	1	True				
ANR	169212	AssignmentExpression	QPCorrecture = ( int ) ( scale * 256 * 256 + 0.5 )		168632	0		=			
ANR	169213	Identifier	QPCorrecture		168632	0					
ANR	169214	CastExpression	( int ) ( scale * 256 * 256 + 0.5 )		168632	1					
ANR	169215	CastTarget	int		168632	0					
ANR	169216	AdditiveExpression	scale * 256 * 256 + 0.5		168632	1		+			
ANR	169217	MultiplicativeExpression	scale * 256 * 256		168632	0		*			
ANR	169218	Identifier	scale		168632	0					
ANR	169219	MultiplicativeExpression	256 * 256		168632	1		*			
ANR	169220	PrimaryExpression	256		168632	0					
ANR	169221	PrimaryExpression	256		168632	1					
ANR	169222	PrimaryExpression	0.5		168632	1					
ANR	169223	ElseStatement	else		168632	0					
ANR	169224	ExpressionStatement	QPCorrecture = 256 * 256	213:36:3824:3845	168632	0	True				
ANR	169225	AssignmentExpression	QPCorrecture = 256 * 256		168632	0		=			
ANR	169226	Identifier	QPCorrecture		168632	0					
ANR	169227	MultiplicativeExpression	256 * 256		168632	1		*			
ANR	169228	PrimaryExpression	256		168632	0					
ANR	169229	PrimaryExpression	256		168632	1					
ANR	169230	ElseStatement	else		168632	0					
ANR	169231	CompoundStatement		211:9:3635:3635	168632	0					
ANR	169232	Statement	c	217:8:3868:3868	168632	0	True				
ANR	169233	Statement	.	217:9:3869:3869	168632	1	True				
ANR	169234	Statement	packedYScale	217:10:3870:3881	168632	2	True				
ANR	169235	Statement	=	217:22:3882:3882	168632	3	True				
ANR	169236	Statement	0x0100010001000100L	217:24:3884:3902	168632	4	True				
ANR	169237	ExpressionStatement	L	217:43:3903:3904	168632	5	True				
ANR	169238	Identifier	L		168632	0					
ANR	169239	ExpressionStatement	c . packedYOffset = 0	219:8:3915:3933	168632	6	True				
ANR	169240	AssignmentExpression	c . packedYOffset = 0		168632	0		=			
ANR	169241	MemberAccess	c . packedYOffset		168632	0					
ANR	169242	Identifier	c		168632	0					
ANR	169243	Identifier	packedYOffset		168632	1					
ANR	169244	PrimaryExpression	0		168632	1					
ANR	169245	ExpressionStatement	QPCorrecture = 256 * 256	221:8:3944:3965	168632	7	True				
ANR	169246	AssignmentExpression	QPCorrecture = 256 * 256		168632	0		=			
ANR	169247	Identifier	QPCorrecture		168632	0					
ANR	169248	MultiplicativeExpression	256 * 256		168632	1		*			
ANR	169249	PrimaryExpression	256		168632	0					
ANR	169250	PrimaryExpression	256		168632	1					
ANR	169251	ExpressionStatement	y = - BLOCK_SIZE	229:4:4031:4044	168632	26	True				
ANR	169252	AssignmentExpression	y = - BLOCK_SIZE		168632	0		=			
ANR	169253	Identifier	y		168632	0					
ANR	169254	UnaryOperationExpression	- BLOCK_SIZE		168632	1					
ANR	169255	UnaryOperator	-		168632	0					
ANR	169256	Identifier	BLOCK_SIZE		168632	1					
ANR	169257	CompoundStatement		231:8:3895:3933	168632	27					
ANR	169258	IdentifierDeclStatement	const uint8_t * srcBlock = & ( src [ y * srcStride ] ) ;	233:8:4062:4106	168632	0	True				
ANR	169259	IdentifierDecl	* srcBlock = & ( src [ y * srcStride ] )		168632	0					
ANR	169260	IdentifierDeclType	const uint8_t *		168632	0					
ANR	169261	Identifier	srcBlock		168632	1					
ANR	169262	AssignmentExpression	* srcBlock = & ( src [ y * srcStride ] )		168632	2		=			
ANR	169263	Identifier	srcBlock		168632	0					
ANR	169264	UnaryOperationExpression	& ( src [ y * srcStride ] )		168632	1					
ANR	169265	UnaryOperator	&		168632	0					
ANR	169266	ArrayIndexing	src [ y * srcStride ]		168632	1					
ANR	169267	Identifier	src		168632	0					
ANR	169268	MultiplicativeExpression	y * srcStride		168632	1		*			
ANR	169269	Identifier	y		168632	0					
ANR	169270	Identifier	srcStride		168632	1					
ANR	169271	IdentifierDeclStatement	uint8_t * dstBlock = tempDst + dstStride ;	235:8:4117:4155	168632	1	True				
ANR	169272	IdentifierDecl	* dstBlock = tempDst + dstStride		168632	0					
ANR	169273	IdentifierDeclType	uint8_t *		168632	0					
ANR	169274	Identifier	dstBlock		168632	1					
ANR	169275	AssignmentExpression	* dstBlock = tempDst + dstStride		168632	2		=			
ANR	169276	Identifier	dstBlock		168632	0					
ANR	169277	AdditiveExpression	tempDst + dstStride		168632	1		+			
ANR	169278	Identifier	tempDst		168632	0					
ANR	169279	Identifier	dstStride		168632	1					
ANR	169280	ForStatement	for ( x = 0 ; x < width ; x += BLOCK_SIZE )		168632	2					
ANR	169281	ForInit	x = 0 ;	245:12:4430:4433	168632	0	True				
ANR	169282	AssignmentExpression	x = 0		168632	0		=			
ANR	169283	Identifier	x		168632	0					
ANR	169284	PrimaryExpression	0		168632	1					
ANR	169285	Condition	x < width	245:17:4435:4441	168632	1	True				
ANR	169286	RelationalExpression	x < width		168632	0		<			
ANR	169287	Identifier	x		168632	0					
ANR	169288	Identifier	width		168632	1					
ANR	169289	AssignmentExpression	x += BLOCK_SIZE	245:26:4444:4456	168632	2	True	+=			
ANR	169290	Identifier	x		168632	0					
ANR	169291	Identifier	BLOCK_SIZE		168632	1					
ANR	169292	CompoundStatement		241:40:4236:4236	168632	3					
ANR	169293	Statement	__asm__	265:12:4801:4807	168632	0	True				
ANR	169294	Statement	(	265:19:4808:4808	168632	1	True				
ANR	169295	Statement	"""mov %4, %%"""	267:16:4827:4838	168632	2	True				
ANR	169296	Statement	REG_a	267:28:4839:4843	168632	3	True				
ANR	169297	Statement	"""              \\n\\t"""	267:33:4844:4863	168632	4	True				
ANR	169298	Statement	"""shr $2, %%"""	269:16:4882:4893	168632	5	True				
ANR	169299	Statement	REG_a	269:28:4894:4898	168632	6	True				
ANR	169300	Statement	"""              \\n\\t"""	269:33:4899:4918	168632	7	True				
ANR	169301	Statement	"""and $6, %%"""	271:16:4937:4948	168632	8	True				
ANR	169302	Statement	REG_a	271:28:4949:4953	168632	9	True				
ANR	169303	Statement	"""              \\n\\t"""	271:33:4954:4973	168632	10	True				
ANR	169304	Statement	"""add %5, %%"""	273:16:4992:5003	168632	11	True				
ANR	169305	Statement	REG_a	273:28:5004:5008	168632	12	True				
ANR	169306	Statement	"""              \\n\\t"""	273:33:5009:5028	168632	13	True				
ANR	169307	Statement	"""mov %%"""	275:16:5047:5054	168632	14	True				
ANR	169308	Statement	REG_a	275:24:5055:5059	168632	15	True				
ANR	169309	Statement	""", %%"""	275:29:5060:5065	168632	16	True				
ANR	169310	Statement	REG_d	275:35:5066:5070	168632	17	True				
ANR	169311	Statement	"""       \\n\\t"""	275:40:5071:5083	168632	18	True				
ANR	169312	Statement	"""imul %1, %%"""	277:16:5102:5114	168632	19	True				
ANR	169313	Statement	REG_a	277:29:5115:5119	168632	20	True				
ANR	169314	Statement	"""             \\n\\t"""	277:34:5120:5138	168632	21	True				
ANR	169315	Statement	"""imul %3, %%"""	279:16:5157:5169	168632	22	True				
ANR	169316	Statement	REG_d	279:29:5170:5174	168632	23	True				
ANR	169317	Statement	"""             \\n\\t"""	279:34:5175:5193	168632	24	True				
ANR	169318	Statement	"""prefetchnta 32(%%"""	281:16:5212:5230	168632	25	True				
ANR	169319	Statement	REG_a	281:35:5231:5235	168632	26	True				
ANR	169320	Statement	""", %0)  \\n\\t"""	281:40:5236:5248	168632	27	True				
ANR	169321	Statement	"""prefetcht0 32(%%"""	283:16:5267:5284	168632	28	True				
ANR	169322	Statement	REG_d	283:34:5285:5289	168632	29	True				
ANR	169323	Statement	""", %2)   \\n\\t"""	283:39:5290:5303	168632	30	True				
ANR	169324	Statement	"""add %1, %%"""	285:16:5322:5333	168632	31	True				
ANR	169325	Statement	REG_a	285:28:5334:5338	168632	32	True				
ANR	169326	Statement	"""              \\n\\t"""	285:33:5339:5358	168632	33	True				
ANR	169327	Statement	"""add %3, %%"""	287:16:5377:5388	168632	34	True				
ANR	169328	Statement	REG_d	287:28:5389:5393	168632	35	True				
ANR	169329	Statement	"""              \\n\\t"""	287:33:5394:5413	168632	36	True				
ANR	169330	Statement	"""prefetchnta 32(%%"""	289:16:5432:5450	168632	37	True				
ANR	169331	Statement	REG_a	289:35:5451:5455	168632	38	True				
ANR	169332	Statement	""", %0)  \\n\\t"""	289:40:5456:5468	168632	39	True				
ANR	169333	Statement	"""prefetcht0 32(%%"""	291:16:5487:5504	168632	40	True				
ANR	169334	Statement	REG_d	291:34:5505:5509	168632	41	True				
ANR	169335	Statement	""", %2)   \\n\\t"""	291:39:5510:5523	168632	42	True				
ANR	169336	Statement	::	293:16:5542:5543	168632	43	True				
ANR	169337	Statement	"""r"""	293:19:5545:5547	168632	44	True				
ANR	169338	Statement	(	293:23:5549:5549	168632	45	True				
ANR	169339	Statement	srcBlock	293:24:5550:5557	168632	46	True				
ANR	169340	Statement	)	293:32:5558:5558	168632	47	True				
ANR	169341	Statement	","	293:33:5559:5559	168632	48	True				
ANR	169342	Statement	"""r"""	293:35:5561:5563	168632	49	True				
ANR	169343	Statement	(	293:39:5565:5565	168632	50	True				
ANR	169344	Statement	(	293:40:5566:5566	168632	51	True				
ANR	169345	Statement	x86_reg	293:41:5567:5573	168632	52	True				
ANR	169346	Statement	)	293:48:5574:5574	168632	53	True				
ANR	169347	Statement	srcStride	293:49:5575:5583	168632	54	True				
ANR	169348	Statement	)	293:58:5584:5584	168632	55	True				
ANR	169349	Statement	","	293:59:5585:5585	168632	56	True				
ANR	169350	Statement	"""r"""	293:61:5587:5589	168632	57	True				
ANR	169351	Statement	(	293:65:5591:5591	168632	58	True				
ANR	169352	Statement	dstBlock	293:66:5592:5599	168632	59	True				
ANR	169353	Statement	)	293:74:5600:5600	168632	60	True				
ANR	169354	Statement	","	293:75:5601:5601	168632	61	True				
ANR	169355	Statement	"""r"""	293:77:5603:5605	168632	62	True				
ANR	169356	Statement	(	293:81:5607:5607	168632	63	True				
ANR	169357	Statement	(	293:82:5608:5608	168632	64	True				
ANR	169358	Statement	x86_reg	293:83:5609:5615	168632	65	True				
ANR	169359	Statement	)	293:90:5616:5616	168632	66	True				
ANR	169360	Statement	dstStride	293:91:5617:5625	168632	67	True				
ANR	169361	Statement	)	293:100:5626:5626	168632	68	True				
ANR	169362	Statement	","	293:101:5627:5627	168632	69	True				
ANR	169363	Statement	"""g"""	295:16:5646:5648	168632	70	True				
ANR	169364	Statement	(	295:20:5650:5650	168632	71	True				
ANR	169365	Statement	(	295:21:5651:5651	168632	72	True				
ANR	169366	Statement	x86_reg	295:22:5652:5658	168632	73	True				
ANR	169367	Statement	)	295:29:5659:5659	168632	74	True				
ANR	169368	Statement	x	295:30:5660:5660	168632	75	True				
ANR	169369	Statement	)	295:31:5661:5661	168632	76	True				
ANR	169370	Statement	","	295:32:5662:5662	168632	77	True				
ANR	169371	Statement	"""g"""	295:34:5664:5666	168632	78	True				
ANR	169372	Statement	(	295:38:5668:5668	168632	79	True				
ANR	169373	Statement	(	295:39:5669:5669	168632	80	True				
ANR	169374	Statement	x86_reg	295:40:5670:5676	168632	81	True				
ANR	169375	Statement	)	295:47:5677:5677	168632	82	True				
ANR	169376	Statement	copyAhead	295:48:5678:5686	168632	83	True				
ANR	169377	Statement	)	295:57:5687:5687	168632	84	True				
ANR	169378	Statement	:	297:16:5706:5706	168632	85	True				
ANR	169379	Statement	"""%"""	297:18:5708:5710	168632	86	True				
ANR	169380	Statement	REG_a	297:21:5711:5715	168632	87	True				
ANR	169381	Statement	","	297:26:5716:5716	168632	88	True				
ANR	169382	Statement	"""%"""	297:28:5718:5720	168632	89	True				
ANR	169383	Statement	REG_d	297:31:5721:5725	168632	90	True				
ANR	169384	Statement	)	299:12:5740:5740	168632	91	True				
ANR	169385	ExpressionStatement		299:13:5741:5741	168632	92	True				
ANR	169386	ExpressionStatement	"RENAME ( blockCopy ) ( dstBlock + dstStride * 8 , dstStride , srcBlock + srcStride * 8 , srcStride , mode & LEVEL_FIX , & c . packedYOffset )"	321:12:6164:6318	168632	93	True				
ANR	169387	CallExpression	"RENAME ( blockCopy ) ( dstBlock + dstStride * 8 , dstStride , srcBlock + srcStride * 8 , srcStride , mode & LEVEL_FIX , & c . packedYOffset )"		168632	0					
ANR	169388	Callee	RENAME ( blockCopy )		168632	0					
ANR	169389	CallExpression	RENAME ( blockCopy )		168632	0					
ANR	169390	Callee	RENAME		168632	0					
ANR	169391	Identifier	RENAME		168632	0					
ANR	169392	ArgumentList	blockCopy		168632	1					
ANR	169393	Argument	blockCopy		168632	0					
ANR	169394	Identifier	blockCopy		168632	0					
ANR	169395	ArgumentList	dstBlock + dstStride * 8		168632	1					
ANR	169396	Argument	dstBlock + dstStride * 8		168632	0					
ANR	169397	AdditiveExpression	dstBlock + dstStride * 8		168632	0		+			
ANR	169398	Identifier	dstBlock		168632	0					
ANR	169399	MultiplicativeExpression	dstStride * 8		168632	1		*			
ANR	169400	Identifier	dstStride		168632	0					
ANR	169401	PrimaryExpression	8		168632	1					
ANR	169402	Argument	dstStride		168632	1					
ANR	169403	Identifier	dstStride		168632	0					
ANR	169404	Argument	srcBlock + srcStride * 8		168632	2					
ANR	169405	AdditiveExpression	srcBlock + srcStride * 8		168632	0		+			
ANR	169406	Identifier	srcBlock		168632	0					
ANR	169407	MultiplicativeExpression	srcStride * 8		168632	1		*			
ANR	169408	Identifier	srcStride		168632	0					
ANR	169409	PrimaryExpression	8		168632	1					
ANR	169410	Argument	srcStride		168632	3					
ANR	169411	Identifier	srcStride		168632	0					
ANR	169412	Argument	mode & LEVEL_FIX		168632	4					
ANR	169413	BitAndExpression	mode & LEVEL_FIX		168632	0		&			
ANR	169414	Identifier	mode		168632	0					
ANR	169415	Identifier	LEVEL_FIX		168632	1					
ANR	169416	Argument	& c . packedYOffset		168632	5					
ANR	169417	UnaryOperationExpression	& c . packedYOffset		168632	0					
ANR	169418	UnaryOperator	&		168632	0					
ANR	169419	MemberAccess	c . packedYOffset		168632	1					
ANR	169420	Identifier	c		168632	0					
ANR	169421	Identifier	packedYOffset		168632	1					
ANR	169422	ExpressionStatement	"RENAME ( duplicate ) ( dstBlock + dstStride * 8 , dstStride )"	327:12:6335:6387	168632	94	True				
ANR	169423	CallExpression	"RENAME ( duplicate ) ( dstBlock + dstStride * 8 , dstStride )"		168632	0					
ANR	169424	Callee	RENAME ( duplicate )		168632	0					
ANR	169425	CallExpression	RENAME ( duplicate )		168632	0					
ANR	169426	Callee	RENAME		168632	0					
ANR	169427	Identifier	RENAME		168632	0					
ANR	169428	ArgumentList	duplicate		168632	1					
ANR	169429	Argument	duplicate		168632	0					
ANR	169430	Identifier	duplicate		168632	0					
ANR	169431	ArgumentList	dstBlock + dstStride * 8		168632	1					
ANR	169432	Argument	dstBlock + dstStride * 8		168632	0					
ANR	169433	AdditiveExpression	dstBlock + dstStride * 8		168632	0		+			
ANR	169434	Identifier	dstBlock		168632	0					
ANR	169435	MultiplicativeExpression	dstStride * 8		168632	1		*			
ANR	169436	Identifier	dstStride		168632	0					
ANR	169437	PrimaryExpression	8		168632	1					
ANR	169438	Argument	dstStride		168632	1					
ANR	169439	Identifier	dstStride		168632	0					
ANR	169440	IfStatement	if ( mode & LINEAR_IPOL_DEINT_FILTER )		168632	95					
ANR	169441	Condition	mode & LINEAR_IPOL_DEINT_FILTER	331:15:6407:6437	168632	0	True				
ANR	169442	BitAndExpression	mode & LINEAR_IPOL_DEINT_FILTER		168632	0		&			
ANR	169443	Identifier	mode		168632	0					
ANR	169444	Identifier	LINEAR_IPOL_DEINT_FILTER		168632	1					
ANR	169445	ExpressionStatement	"RENAME ( deInterlaceInterpolateLinear ) ( dstBlock , dstStride )"	333:16:6457:6514	168632	1	True				
ANR	169446	CallExpression	"RENAME ( deInterlaceInterpolateLinear ) ( dstBlock , dstStride )"		168632	0					
ANR	169447	Callee	RENAME ( deInterlaceInterpolateLinear )		168632	0					
ANR	169448	CallExpression	RENAME ( deInterlaceInterpolateLinear )		168632	0					
ANR	169449	Callee	RENAME		168632	0					
ANR	169450	Identifier	RENAME		168632	0					
ANR	169451	ArgumentList	deInterlaceInterpolateLinear		168632	1					
ANR	169452	Argument	deInterlaceInterpolateLinear		168632	0					
ANR	169453	Identifier	deInterlaceInterpolateLinear		168632	0					
ANR	169454	ArgumentList	dstBlock		168632	1					
ANR	169455	Argument	dstBlock		168632	0					
ANR	169456	Identifier	dstBlock		168632	0					
ANR	169457	Argument	dstStride		168632	1					
ANR	169458	Identifier	dstStride		168632	0					
ANR	169459	ElseStatement	else		168632	0					
ANR	169460	IfStatement	if ( mode & LINEAR_BLEND_DEINT_FILTER )		168632	0					
ANR	169461	Condition	mode & LINEAR_BLEND_DEINT_FILTER	335:20:6537:6568	168632	0	True				
ANR	169462	BitAndExpression	mode & LINEAR_BLEND_DEINT_FILTER		168632	0		&			
ANR	169463	Identifier	mode		168632	0					
ANR	169464	Identifier	LINEAR_BLEND_DEINT_FILTER		168632	1					
ANR	169465	ExpressionStatement	"RENAME ( deInterlaceBlendLinear ) ( dstBlock , dstStride , c . deintTemp + x )"	337:16:6588:6656	168632	1	True				
ANR	169466	CallExpression	"RENAME ( deInterlaceBlendLinear ) ( dstBlock , dstStride , c . deintTemp + x )"		168632	0					
ANR	169467	Callee	RENAME ( deInterlaceBlendLinear )		168632	0					
ANR	169468	CallExpression	RENAME ( deInterlaceBlendLinear )		168632	0					
ANR	169469	Callee	RENAME		168632	0					
ANR	169470	Identifier	RENAME		168632	0					
ANR	169471	ArgumentList	deInterlaceBlendLinear		168632	1					
ANR	169472	Argument	deInterlaceBlendLinear		168632	0					
ANR	169473	Identifier	deInterlaceBlendLinear		168632	0					
ANR	169474	ArgumentList	dstBlock		168632	1					
ANR	169475	Argument	dstBlock		168632	0					
ANR	169476	Identifier	dstBlock		168632	0					
ANR	169477	Argument	dstStride		168632	1					
ANR	169478	Identifier	dstStride		168632	0					
ANR	169479	Argument	c . deintTemp + x		168632	2					
ANR	169480	AdditiveExpression	c . deintTemp + x		168632	0		+			
ANR	169481	MemberAccess	c . deintTemp		168632	0					
ANR	169482	Identifier	c		168632	0					
ANR	169483	Identifier	deintTemp		168632	1					
ANR	169484	Identifier	x		168632	1					
ANR	169485	ElseStatement	else		168632	0					
ANR	169486	IfStatement	if ( mode & MEDIAN_DEINT_FILTER )		168632	0					
ANR	169487	Condition	mode & MEDIAN_DEINT_FILTER	339:20:6679:6704	168632	0	True				
ANR	169488	BitAndExpression	mode & MEDIAN_DEINT_FILTER		168632	0		&			
ANR	169489	Identifier	mode		168632	0					
ANR	169490	Identifier	MEDIAN_DEINT_FILTER		168632	1					
ANR	169491	ExpressionStatement	"RENAME ( deInterlaceMedian ) ( dstBlock , dstStride )"	341:16:6724:6770	168632	1	True				
ANR	169492	CallExpression	"RENAME ( deInterlaceMedian ) ( dstBlock , dstStride )"		168632	0					
ANR	169493	Callee	RENAME ( deInterlaceMedian )		168632	0					
ANR	169494	CallExpression	RENAME ( deInterlaceMedian )		168632	0					
ANR	169495	Callee	RENAME		168632	0					
ANR	169496	Identifier	RENAME		168632	0					
ANR	169497	ArgumentList	deInterlaceMedian		168632	1					
ANR	169498	Argument	deInterlaceMedian		168632	0					
ANR	169499	Identifier	deInterlaceMedian		168632	0					
ANR	169500	ArgumentList	dstBlock		168632	1					
ANR	169501	Argument	dstBlock		168632	0					
ANR	169502	Identifier	dstBlock		168632	0					
ANR	169503	Argument	dstStride		168632	1					
ANR	169504	Identifier	dstStride		168632	0					
ANR	169505	ElseStatement	else		168632	0					
ANR	169506	IfStatement	if ( mode & CUBIC_IPOL_DEINT_FILTER )		168632	0					
ANR	169507	Condition	mode & CUBIC_IPOL_DEINT_FILTER	343:20:6793:6822	168632	0	True				
ANR	169508	BitAndExpression	mode & CUBIC_IPOL_DEINT_FILTER		168632	0		&			
ANR	169509	Identifier	mode		168632	0					
ANR	169510	Identifier	CUBIC_IPOL_DEINT_FILTER		168632	1					
ANR	169511	ExpressionStatement	"RENAME ( deInterlaceInterpolateCubic ) ( dstBlock , dstStride )"	345:16:6842:6898	168632	1	True				
ANR	169512	CallExpression	"RENAME ( deInterlaceInterpolateCubic ) ( dstBlock , dstStride )"		168632	0					
ANR	169513	Callee	RENAME ( deInterlaceInterpolateCubic )		168632	0					
ANR	169514	CallExpression	RENAME ( deInterlaceInterpolateCubic )		168632	0					
ANR	169515	Callee	RENAME		168632	0					
ANR	169516	Identifier	RENAME		168632	0					
ANR	169517	ArgumentList	deInterlaceInterpolateCubic		168632	1					
ANR	169518	Argument	deInterlaceInterpolateCubic		168632	0					
ANR	169519	Identifier	deInterlaceInterpolateCubic		168632	0					
ANR	169520	ArgumentList	dstBlock		168632	1					
ANR	169521	Argument	dstBlock		168632	0					
ANR	169522	Identifier	dstBlock		168632	0					
ANR	169523	Argument	dstStride		168632	1					
ANR	169524	Identifier	dstStride		168632	0					
ANR	169525	ElseStatement	else		168632	0					
ANR	169526	IfStatement	if ( mode & FFMPEG_DEINT_FILTER )		168632	0					
ANR	169527	Condition	mode & FFMPEG_DEINT_FILTER	347:20:6921:6946	168632	0	True				
ANR	169528	BitAndExpression	mode & FFMPEG_DEINT_FILTER		168632	0		&			
ANR	169529	Identifier	mode		168632	0					
ANR	169530	Identifier	FFMPEG_DEINT_FILTER		168632	1					
ANR	169531	ExpressionStatement	"RENAME ( deInterlaceFF ) ( dstBlock , dstStride , c . deintTemp + x )"	349:16:6966:7025	168632	1	True				
ANR	169532	CallExpression	"RENAME ( deInterlaceFF ) ( dstBlock , dstStride , c . deintTemp + x )"		168632	0					
ANR	169533	Callee	RENAME ( deInterlaceFF )		168632	0					
ANR	169534	CallExpression	RENAME ( deInterlaceFF )		168632	0					
ANR	169535	Callee	RENAME		168632	0					
ANR	169536	Identifier	RENAME		168632	0					
ANR	169537	ArgumentList	deInterlaceFF		168632	1					
ANR	169538	Argument	deInterlaceFF		168632	0					
ANR	169539	Identifier	deInterlaceFF		168632	0					
ANR	169540	ArgumentList	dstBlock		168632	1					
ANR	169541	Argument	dstBlock		168632	0					
ANR	169542	Identifier	dstBlock		168632	0					
ANR	169543	Argument	dstStride		168632	1					
ANR	169544	Identifier	dstStride		168632	0					
ANR	169545	Argument	c . deintTemp + x		168632	2					
ANR	169546	AdditiveExpression	c . deintTemp + x		168632	0		+			
ANR	169547	MemberAccess	c . deintTemp		168632	0					
ANR	169548	Identifier	c		168632	0					
ANR	169549	Identifier	deintTemp		168632	1					
ANR	169550	Identifier	x		168632	1					
ANR	169551	ElseStatement	else		168632	0					
ANR	169552	IfStatement	if ( mode & LOWPASS5_DEINT_FILTER )		168632	0					
ANR	169553	Condition	mode & LOWPASS5_DEINT_FILTER	351:20:7048:7075	168632	0	True				
ANR	169554	BitAndExpression	mode & LOWPASS5_DEINT_FILTER		168632	0		&			
ANR	169555	Identifier	mode		168632	0					
ANR	169556	Identifier	LOWPASS5_DEINT_FILTER		168632	1					
ANR	169557	ExpressionStatement	"RENAME ( deInterlaceL5 ) ( dstBlock , dstStride , c . deintTemp + x , c . deintTemp + width + x )"	353:16:7095:7179	168632	1	True				
ANR	169558	CallExpression	"RENAME ( deInterlaceL5 ) ( dstBlock , dstStride , c . deintTemp + x , c . deintTemp + width + x )"		168632	0					
ANR	169559	Callee	RENAME ( deInterlaceL5 )		168632	0					
ANR	169560	CallExpression	RENAME ( deInterlaceL5 )		168632	0					
ANR	169561	Callee	RENAME		168632	0					
ANR	169562	Identifier	RENAME		168632	0					
ANR	169563	ArgumentList	deInterlaceL5		168632	1					
ANR	169564	Argument	deInterlaceL5		168632	0					
ANR	169565	Identifier	deInterlaceL5		168632	0					
ANR	169566	ArgumentList	dstBlock		168632	1					
ANR	169567	Argument	dstBlock		168632	0					
ANR	169568	Identifier	dstBlock		168632	0					
ANR	169569	Argument	dstStride		168632	1					
ANR	169570	Identifier	dstStride		168632	0					
ANR	169571	Argument	c . deintTemp + x		168632	2					
ANR	169572	AdditiveExpression	c . deintTemp + x		168632	0		+			
ANR	169573	MemberAccess	c . deintTemp		168632	0					
ANR	169574	Identifier	c		168632	0					
ANR	169575	Identifier	deintTemp		168632	1					
ANR	169576	Identifier	x		168632	1					
ANR	169577	Argument	c . deintTemp + width + x		168632	3					
ANR	169578	AdditiveExpression	c . deintTemp + width + x		168632	0		+			
ANR	169579	MemberAccess	c . deintTemp		168632	0					
ANR	169580	Identifier	c		168632	0					
ANR	169581	Identifier	deintTemp		168632	1					
ANR	169582	AdditiveExpression	width + x		168632	1		+			
ANR	169583	Identifier	width		168632	0					
ANR	169584	Identifier	x		168632	1					
ANR	169585	ExpressionStatement	dstBlock += 8	361:12:7321:7332	168632	96	True				
ANR	169586	AssignmentExpression	dstBlock += 8		168632	0		+=			
ANR	169587	Identifier	dstBlock		168632	0					
ANR	169588	PrimaryExpression	8		168632	1					
ANR	169589	ExpressionStatement	srcBlock += 8	363:12:7347:7358	168632	97	True				
ANR	169590	AssignmentExpression	srcBlock += 8		168632	0		+=			
ANR	169591	Identifier	srcBlock		168632	0					
ANR	169592	PrimaryExpression	8		168632	1					
ANR	169593	IfStatement	if ( width == FFABS ( dstStride ) )		168632	3					
ANR	169594	Condition	width == FFABS ( dstStride )	367:11:7383:7405	168632	0	True				
ANR	169595	EqualityExpression	width == FFABS ( dstStride )		168632	0		==			
ANR	169596	Identifier	width		168632	0					
ANR	169597	CallExpression	FFABS ( dstStride )		168632	1					
ANR	169598	Callee	FFABS		168632	0					
ANR	169599	Identifier	FFABS		168632	0					
ANR	169600	ArgumentList	dstStride		168632	1					
ANR	169601	Argument	dstStride		168632	0					
ANR	169602	Identifier	dstStride		168632	0					
ANR	169603	ExpressionStatement	"linecpy ( dst , tempDst + 9 * dstStride , copyAhead , dstStride )"	369:12:7421:7478	168632	1	True				
ANR	169604	CallExpression	"linecpy ( dst , tempDst + 9 * dstStride , copyAhead , dstStride )"		168632	0					
ANR	169605	Callee	linecpy		168632	0					
ANR	169606	Identifier	linecpy		168632	0					
ANR	169607	ArgumentList	dst		168632	1					
ANR	169608	Argument	dst		168632	0					
ANR	169609	Identifier	dst		168632	0					
ANR	169610	Argument	tempDst + 9 * dstStride		168632	1					
ANR	169611	AdditiveExpression	tempDst + 9 * dstStride		168632	0		+			
ANR	169612	Identifier	tempDst		168632	0					
ANR	169613	MultiplicativeExpression	9 * dstStride		168632	1		*			
ANR	169614	PrimaryExpression	9		168632	0					
ANR	169615	Identifier	dstStride		168632	1					
ANR	169616	Argument	copyAhead		168632	2					
ANR	169617	Identifier	copyAhead		168632	0					
ANR	169618	Argument	dstStride		168632	3					
ANR	169619	Identifier	dstStride		168632	0					
ANR	169620	ElseStatement	else		168632	0					
ANR	169621	CompoundStatement		369:12:7286:7291	168632	0					
ANR	169622	IdentifierDeclStatement	int i ;	373:12:7508:7513	168632	0	True				
ANR	169623	IdentifierDecl	i		168632	0					
ANR	169624	IdentifierDeclType	int		168632	0					
ANR	169625	Identifier	i		168632	1					
ANR	169626	ForStatement	for ( i = 0 ; i < copyAhead ; i ++ )		168632	1					
ANR	169627	ForInit	i = 0 ;	375:16:7532:7535	168632	0	True				
ANR	169628	AssignmentExpression	i = 0		168632	0		=			
ANR	169629	Identifier	i		168632	0					
ANR	169630	PrimaryExpression	0		168632	1					
ANR	169631	Condition	i < copyAhead	375:21:7537:7547	168632	1	True				
ANR	169632	RelationalExpression	i < copyAhead		168632	0		<			
ANR	169633	Identifier	i		168632	0					
ANR	169634	Identifier	copyAhead		168632	1					
ANR	169635	PostIncDecOperationExpression	i ++	375:34:7550:7552	168632	2	True				
ANR	169636	Identifier	i		168632	0					
ANR	169637	IncDec	++		168632	1					
ANR	169638	CompoundStatement		371:38:7332:7332	168632	3					
ANR	169639	ExpressionStatement	"memcpy ( dst + i * dstStride , tempDst + ( 9 + i ) * dstStride , width )"	377:16:7573:7632	168632	0	True				
ANR	169640	CallExpression	"memcpy ( dst + i * dstStride , tempDst + ( 9 + i ) * dstStride , width )"		168632	0					
ANR	169641	Callee	memcpy		168632	0					
ANR	169642	Identifier	memcpy		168632	0					
ANR	169643	ArgumentList	dst + i * dstStride		168632	1					
ANR	169644	Argument	dst + i * dstStride		168632	0					
ANR	169645	AdditiveExpression	dst + i * dstStride		168632	0		+			
ANR	169646	Identifier	dst		168632	0					
ANR	169647	MultiplicativeExpression	i * dstStride		168632	1		*			
ANR	169648	Identifier	i		168632	0					
ANR	169649	Identifier	dstStride		168632	1					
ANR	169650	Argument	tempDst + ( 9 + i ) * dstStride		168632	1					
ANR	169651	AdditiveExpression	tempDst + ( 9 + i ) * dstStride		168632	0		+			
ANR	169652	Identifier	tempDst		168632	0					
ANR	169653	MultiplicativeExpression	( 9 + i ) * dstStride		168632	1		*			
ANR	169654	AdditiveExpression	9 + i		168632	0		+			
ANR	169655	PrimaryExpression	9		168632	0					
ANR	169656	Identifier	i		168632	1					
ANR	169657	Identifier	dstStride		168632	1					
ANR	169658	Argument	width		168632	2					
ANR	169659	Identifier	width		168632	0					
ANR	169660	ForStatement	for ( y = 0 ; y < height ; y += BLOCK_SIZE )		168632	28					
ANR	169661	ForInit	y = 0 ;	387:8:7678:7681	168632	0	True				
ANR	169662	AssignmentExpression	y = 0		168632	0		=			
ANR	169663	Identifier	y		168632	0					
ANR	169664	PrimaryExpression	0		168632	1					
ANR	169665	Condition	y < height	387:13:7683:7690	168632	1	True				
ANR	169666	RelationalExpression	y < height		168632	0		<			
ANR	169667	Identifier	y		168632	0					
ANR	169668	Identifier	height		168632	1					
ANR	169669	AssignmentExpression	y += BLOCK_SIZE	387:23:7693:7705	168632	2	True	+=			
ANR	169670	Identifier	y		168632	0					
ANR	169671	Identifier	BLOCK_SIZE		168632	1					
ANR	169672	CompoundStatement		403:8:7922:7930	168632	3					
ANR	169673	IdentifierDeclStatement	const uint8_t * srcBlock = & ( src [ y * srcStride ] ) ;	391:8:7784:7828	168632	0	True				
ANR	169674	IdentifierDecl	* srcBlock = & ( src [ y * srcStride ] )		168632	0					
ANR	169675	IdentifierDeclType	const uint8_t *		168632	0					
ANR	169676	Identifier	srcBlock		168632	1					
ANR	169677	AssignmentExpression	* srcBlock = & ( src [ y * srcStride ] )		168632	2		=			
ANR	169678	Identifier	srcBlock		168632	0					
ANR	169679	UnaryOperationExpression	& ( src [ y * srcStride ] )		168632	1					
ANR	169680	UnaryOperator	&		168632	0					
ANR	169681	ArrayIndexing	src [ y * srcStride ]		168632	1					
ANR	169682	Identifier	src		168632	0					
ANR	169683	MultiplicativeExpression	y * srcStride		168632	1		*			
ANR	169684	Identifier	y		168632	0					
ANR	169685	Identifier	srcStride		168632	1					
ANR	169686	IdentifierDeclStatement	uint8_t * dstBlock = & ( dst [ y * dstStride ] ) ;	393:8:7839:7877	168632	1	True				
ANR	169687	IdentifierDecl	* dstBlock = & ( dst [ y * dstStride ] )		168632	0					
ANR	169688	IdentifierDeclType	uint8_t *		168632	0					
ANR	169689	Identifier	dstBlock		168632	1					
ANR	169690	AssignmentExpression	* dstBlock = & ( dst [ y * dstStride ] )		168632	2		=			
ANR	169691	Identifier	dstBlock		168632	0					
ANR	169692	UnaryOperationExpression	& ( dst [ y * dstStride ] )		168632	1					
ANR	169693	UnaryOperator	&		168632	0					
ANR	169694	ArrayIndexing	dst [ y * dstStride ]		168632	1					
ANR	169695	Identifier	dst		168632	0					
ANR	169696	MultiplicativeExpression	y * dstStride		168632	1		*			
ANR	169697	Identifier	y		168632	0					
ANR	169698	Identifier	dstStride		168632	1					
ANR	169699	IdentifierDeclStatement	uint8_t * tempBlock1 = c . tempBlocks ;	397:8:7909:7942	168632	2	True				
ANR	169700	IdentifierDecl	* tempBlock1 = c . tempBlocks		168632	0					
ANR	169701	IdentifierDeclType	uint8_t *		168632	0					
ANR	169702	Identifier	tempBlock1		168632	1					
ANR	169703	AssignmentExpression	* tempBlock1 = c . tempBlocks		168632	2		=			
ANR	169704	Identifier	tempBlock1		168632	0					
ANR	169705	MemberAccess	c . tempBlocks		168632	1					
ANR	169706	Identifier	c		168632	0					
ANR	169707	Identifier	tempBlocks		168632	1					
ANR	169708	IdentifierDeclStatement	uint8_t * tempBlock2 = c . tempBlocks + 8 ;	399:8:7953:7990	168632	3	True				
ANR	169709	IdentifierDecl	* tempBlock2 = c . tempBlocks + 8		168632	0					
ANR	169710	IdentifierDeclType	uint8_t *		168632	0					
ANR	169711	Identifier	tempBlock2		168632	1					
ANR	169712	AssignmentExpression	* tempBlock2 = c . tempBlocks + 8		168632	2		=			
ANR	169713	Identifier	tempBlock2		168632	0					
ANR	169714	AdditiveExpression	c . tempBlocks + 8		168632	1		+			
ANR	169715	MemberAccess	c . tempBlocks		168632	0					
ANR	169716	Identifier	c		168632	0					
ANR	169717	Identifier	tempBlocks		168632	1					
ANR	169718	PrimaryExpression	8		168632	1					
ANR	169719	IdentifierDeclStatement	const int8_t * QPptr = & QPs [ ( y >> qpVShift ) * QPStride ] ;	403:8:8009:8058	168632	4	True				
ANR	169720	IdentifierDecl	* QPptr = & QPs [ ( y >> qpVShift ) * QPStride ]		168632	0					
ANR	169721	IdentifierDeclType	const int8_t *		168632	0					
ANR	169722	Identifier	QPptr		168632	1					
ANR	169723	AssignmentExpression	* QPptr = & QPs [ ( y >> qpVShift ) * QPStride ]		168632	2		=			
ANR	169724	Identifier	QPptr		168632	0					
ANR	169725	UnaryOperationExpression	& QPs [ ( y >> qpVShift ) * QPStride ]		168632	1					
ANR	169726	UnaryOperator	&		168632	0					
ANR	169727	ArrayIndexing	QPs [ ( y >> qpVShift ) * QPStride ]		168632	1					
ANR	169728	Identifier	QPs		168632	0					
ANR	169729	MultiplicativeExpression	( y >> qpVShift ) * QPStride		168632	1		*			
ANR	169730	ShiftExpression	y >> qpVShift		168632	0		>>			
ANR	169731	Identifier	y		168632	0					
ANR	169732	Identifier	qpVShift		168632	1					
ANR	169733	Identifier	QPStride		168632	1					
ANR	169734	IdentifierDeclStatement	int8_t * nonBQPptr = & c . nonBQPTable [ ( y >> qpVShift ) * FFABS ( QPStride ) ] ;	405:8:8069:8133	168632	5	True				
ANR	169735	IdentifierDecl	* nonBQPptr = & c . nonBQPTable [ ( y >> qpVShift ) * FFABS ( QPStride ) ]		168632	0					
ANR	169736	IdentifierDeclType	int8_t *		168632	0					
ANR	169737	Identifier	nonBQPptr		168632	1					
ANR	169738	AssignmentExpression	* nonBQPptr = & c . nonBQPTable [ ( y >> qpVShift ) * FFABS ( QPStride ) ]		168632	2		=			
ANR	169739	Identifier	nonBQPptr		168632	0					
ANR	169740	UnaryOperationExpression	& c . nonBQPTable [ ( y >> qpVShift ) * FFABS ( QPStride ) ]		168632	1					
ANR	169741	UnaryOperator	&		168632	0					
ANR	169742	ArrayIndexing	c . nonBQPTable [ ( y >> qpVShift ) * FFABS ( QPStride ) ]		168632	1					
ANR	169743	MemberAccess	c . nonBQPTable		168632	0					
ANR	169744	Identifier	c		168632	0					
ANR	169745	Identifier	nonBQPTable		168632	1					
ANR	169746	MultiplicativeExpression	( y >> qpVShift ) * FFABS ( QPStride )		168632	1		*			
ANR	169747	ShiftExpression	y >> qpVShift		168632	0		>>			
ANR	169748	Identifier	y		168632	0					
ANR	169749	Identifier	qpVShift		168632	1					
ANR	169750	CallExpression	FFABS ( QPStride )		168632	1					
ANR	169751	Callee	FFABS		168632	0					
ANR	169752	Identifier	FFABS		168632	0					
ANR	169753	ArgumentList	QPStride		168632	1					
ANR	169754	Argument	QPStride		168632	0					
ANR	169755	Identifier	QPStride		168632	0					
ANR	169756	IdentifierDeclStatement	int QP = 0 ;	407:8:8144:8152	168632	6	True				
ANR	169757	IdentifierDecl	QP = 0		168632	0					
ANR	169758	IdentifierDeclType	int		168632	0					
ANR	169759	Identifier	QP		168632	1					
ANR	169760	AssignmentExpression	QP = 0		168632	2		=			
ANR	169761	Identifier	QP		168632	0					
ANR	169762	PrimaryExpression	0		168632	1					
ANR	169763	IfStatement	if ( y + 15 >= height )		168632	7					
ANR	169764	Condition	y + 15 >= height	413:11:8310:8323	168632	0	True				
ANR	169765	RelationalExpression	y + 15 >= height		168632	0		>=			
ANR	169766	AdditiveExpression	y + 15		168632	0		+			
ANR	169767	Identifier	y		168632	0					
ANR	169768	PrimaryExpression	15		168632	1					
ANR	169769	Identifier	height		168632	1					
ANR	169770	CompoundStatement		411:12:8118:8123	168632	1					
ANR	169771	IdentifierDeclStatement	int i ;	415:12:8340:8345	168632	0	True				
ANR	169772	IdentifierDecl	i		168632	0					
ANR	169773	IdentifierDeclType	int		168632	0					
ANR	169774	Identifier	i		168632	1					
ANR	169775	ExpressionStatement	"linecpy ( tempSrc + srcStride * copyAhead , srcBlock + srcStride * copyAhead , FFMAX ( height - y - copyAhead , 0 ) , srcStride )"	421:12:8496:8628	168632	1	True				
ANR	169776	CallExpression	"linecpy ( tempSrc + srcStride * copyAhead , srcBlock + srcStride * copyAhead , FFMAX ( height - y - copyAhead , 0 ) , srcStride )"		168632	0					
ANR	169777	Callee	linecpy		168632	0					
ANR	169778	Identifier	linecpy		168632	0					
ANR	169779	ArgumentList	tempSrc + srcStride * copyAhead		168632	1					
ANR	169780	Argument	tempSrc + srcStride * copyAhead		168632	0					
ANR	169781	AdditiveExpression	tempSrc + srcStride * copyAhead		168632	0		+			
ANR	169782	Identifier	tempSrc		168632	0					
ANR	169783	MultiplicativeExpression	srcStride * copyAhead		168632	1		*			
ANR	169784	Identifier	srcStride		168632	0					
ANR	169785	Identifier	copyAhead		168632	1					
ANR	169786	Argument	srcBlock + srcStride * copyAhead		168632	1					
ANR	169787	AdditiveExpression	srcBlock + srcStride * copyAhead		168632	0		+			
ANR	169788	Identifier	srcBlock		168632	0					
ANR	169789	MultiplicativeExpression	srcStride * copyAhead		168632	1		*			
ANR	169790	Identifier	srcStride		168632	0					
ANR	169791	Identifier	copyAhead		168632	1					
ANR	169792	Argument	"FFMAX ( height - y - copyAhead , 0 )"		168632	2					
ANR	169793	CallExpression	"FFMAX ( height - y - copyAhead , 0 )"		168632	0					
ANR	169794	Callee	FFMAX		168632	0					
ANR	169795	Identifier	FFMAX		168632	0					
ANR	169796	ArgumentList	height - y - copyAhead		168632	1					
ANR	169797	Argument	height - y - copyAhead		168632	0					
ANR	169798	AdditiveExpression	height - y - copyAhead		168632	0		-			
ANR	169799	Identifier	height		168632	0					
ANR	169800	AdditiveExpression	y - copyAhead		168632	1		-			
ANR	169801	Identifier	y		168632	0					
ANR	169802	Identifier	copyAhead		168632	1					
ANR	169803	Argument	0		168632	1					
ANR	169804	PrimaryExpression	0		168632	0					
ANR	169805	Argument	srcStride		168632	3					
ANR	169806	Identifier	srcStride		168632	0					
ANR	169807	ForStatement	"for ( i = FFMAX ( height - y , 8 ) ; i < copyAhead + 8 ; i ++ )"		168632	2					
ANR	169808	ForInit	"i = FFMAX ( height - y , 8 ) ;"	429:16:8737:8757	168632	0	True				
ANR	169809	AssignmentExpression	"i = FFMAX ( height - y , 8 )"		168632	0		=			
ANR	169810	Identifier	i		168632	0					
ANR	169811	CallExpression	"FFMAX ( height - y , 8 )"		168632	1					
ANR	169812	Callee	FFMAX		168632	0					
ANR	169813	Identifier	FFMAX		168632	0					
ANR	169814	ArgumentList	height - y		168632	1					
ANR	169815	Argument	height - y		168632	0					
ANR	169816	AdditiveExpression	height - y		168632	0		-			
ANR	169817	Identifier	height		168632	0					
ANR	169818	Identifier	y		168632	1					
ANR	169819	Argument	8		168632	1					
ANR	169820	PrimaryExpression	8		168632	0					
ANR	169821	Condition	i < copyAhead + 8	429:38:8759:8771	168632	1	True				
ANR	169822	RelationalExpression	i < copyAhead + 8		168632	0		<			
ANR	169823	Identifier	i		168632	0					
ANR	169824	AdditiveExpression	copyAhead + 8		168632	1		+			
ANR	169825	Identifier	copyAhead		168632	0					
ANR	169826	PrimaryExpression	8		168632	1					
ANR	169827	PostIncDecOperationExpression	i ++	429:53:8774:8776	168632	2	True				
ANR	169828	Identifier	i		168632	0					
ANR	169829	IncDec	++		168632	1					
ANR	169830	ExpressionStatement	"memcpy ( tempSrc + srcStride * i , src + srcStride * ( height - 1 ) , FFABS ( srcStride ) )"	431:20:8800:8875	168632	3	True				
ANR	169831	CallExpression	"memcpy ( tempSrc + srcStride * i , src + srcStride * ( height - 1 ) , FFABS ( srcStride ) )"		168632	0					
ANR	169832	Callee	memcpy		168632	0					
ANR	169833	Identifier	memcpy		168632	0					
ANR	169834	ArgumentList	tempSrc + srcStride * i		168632	1					
ANR	169835	Argument	tempSrc + srcStride * i		168632	0					
ANR	169836	AdditiveExpression	tempSrc + srcStride * i		168632	0		+			
ANR	169837	Identifier	tempSrc		168632	0					
ANR	169838	MultiplicativeExpression	srcStride * i		168632	1		*			
ANR	169839	Identifier	srcStride		168632	0					
ANR	169840	Identifier	i		168632	1					
ANR	169841	Argument	src + srcStride * ( height - 1 )		168632	1					
ANR	169842	AdditiveExpression	src + srcStride * ( height - 1 )		168632	0		+			
ANR	169843	Identifier	src		168632	0					
ANR	169844	MultiplicativeExpression	srcStride * ( height - 1 )		168632	1		*			
ANR	169845	Identifier	srcStride		168632	0					
ANR	169846	AdditiveExpression	height - 1		168632	1		-			
ANR	169847	Identifier	height		168632	0					
ANR	169848	PrimaryExpression	1		168632	1					
ANR	169849	Argument	FFABS ( srcStride )		168632	2					
ANR	169850	CallExpression	FFABS ( srcStride )		168632	0					
ANR	169851	Callee	FFABS		168632	0					
ANR	169852	Identifier	FFABS		168632	0					
ANR	169853	ArgumentList	srcStride		168632	1					
ANR	169854	Argument	srcStride		168632	0					
ANR	169855	Identifier	srcStride		168632	0					
ANR	169856	ExpressionStatement	"linecpy ( tempDst , dstBlock - dstStride , FFMIN ( height - y + 1 , copyAhead + 1 ) , dstStride )"	437:12:8975:9056	168632	3	True				
ANR	169857	CallExpression	"linecpy ( tempDst , dstBlock - dstStride , FFMIN ( height - y + 1 , copyAhead + 1 ) , dstStride )"		168632	0					
ANR	169858	Callee	linecpy		168632	0					
ANR	169859	Identifier	linecpy		168632	0					
ANR	169860	ArgumentList	tempDst		168632	1					
ANR	169861	Argument	tempDst		168632	0					
ANR	169862	Identifier	tempDst		168632	0					
ANR	169863	Argument	dstBlock - dstStride		168632	1					
ANR	169864	AdditiveExpression	dstBlock - dstStride		168632	0		-			
ANR	169865	Identifier	dstBlock		168632	0					
ANR	169866	Identifier	dstStride		168632	1					
ANR	169867	Argument	"FFMIN ( height - y + 1 , copyAhead + 1 )"		168632	2					
ANR	169868	CallExpression	"FFMIN ( height - y + 1 , copyAhead + 1 )"		168632	0					
ANR	169869	Callee	FFMIN		168632	0					
ANR	169870	Identifier	FFMIN		168632	0					
ANR	169871	ArgumentList	height - y + 1		168632	1					
ANR	169872	Argument	height - y + 1		168632	0					
ANR	169873	AdditiveExpression	height - y + 1		168632	0		-			
ANR	169874	Identifier	height		168632	0					
ANR	169875	AdditiveExpression	y + 1		168632	1		+			
ANR	169876	Identifier	y		168632	0					
ANR	169877	PrimaryExpression	1		168632	1					
ANR	169878	Argument	copyAhead + 1		168632	1					
ANR	169879	AdditiveExpression	copyAhead + 1		168632	0		+			
ANR	169880	Identifier	copyAhead		168632	0					
ANR	169881	PrimaryExpression	1		168632	1					
ANR	169882	Argument	dstStride		168632	3					
ANR	169883	Identifier	dstStride		168632	0					
ANR	169884	ForStatement	for ( i = height - y + 1 ; i <= copyAhead ; i ++ )		168632	4					
ANR	169885	ForInit	i = height - y + 1 ;	443:16:9163:9175	168632	0	True				
ANR	169886	AssignmentExpression	i = height - y + 1		168632	0		=			
ANR	169887	Identifier	i		168632	0					
ANR	169888	AdditiveExpression	height - y + 1		168632	1		-			
ANR	169889	Identifier	height		168632	0					
ANR	169890	AdditiveExpression	y + 1		168632	1		+			
ANR	169891	Identifier	y		168632	0					
ANR	169892	PrimaryExpression	1		168632	1					
ANR	169893	Condition	i <= copyAhead	443:30:9177:9188	168632	1	True				
ANR	169894	RelationalExpression	i <= copyAhead		168632	0		<=			
ANR	169895	Identifier	i		168632	0					
ANR	169896	Identifier	copyAhead		168632	1					
ANR	169897	PostIncDecOperationExpression	i ++	443:44:9191:9193	168632	2	True				
ANR	169898	Identifier	i		168632	0					
ANR	169899	IncDec	++		168632	1					
ANR	169900	ExpressionStatement	"memcpy ( tempDst + dstStride * i , dst + dstStride * ( height - 1 ) , FFABS ( dstStride ) )"	445:20:9217:9292	168632	3	True				
ANR	169901	CallExpression	"memcpy ( tempDst + dstStride * i , dst + dstStride * ( height - 1 ) , FFABS ( dstStride ) )"		168632	0					
ANR	169902	Callee	memcpy		168632	0					
ANR	169903	Identifier	memcpy		168632	0					
ANR	169904	ArgumentList	tempDst + dstStride * i		168632	1					
ANR	169905	Argument	tempDst + dstStride * i		168632	0					
ANR	169906	AdditiveExpression	tempDst + dstStride * i		168632	0		+			
ANR	169907	Identifier	tempDst		168632	0					
ANR	169908	MultiplicativeExpression	dstStride * i		168632	1		*			
ANR	169909	Identifier	dstStride		168632	0					
ANR	169910	Identifier	i		168632	1					
ANR	169911	Argument	dst + dstStride * ( height - 1 )		168632	1					
ANR	169912	AdditiveExpression	dst + dstStride * ( height - 1 )		168632	0		+			
ANR	169913	Identifier	dst		168632	0					
ANR	169914	MultiplicativeExpression	dstStride * ( height - 1 )		168632	1		*			
ANR	169915	Identifier	dstStride		168632	0					
ANR	169916	AdditiveExpression	height - 1		168632	1		-			
ANR	169917	Identifier	height		168632	0					
ANR	169918	PrimaryExpression	1		168632	1					
ANR	169919	Argument	FFABS ( dstStride )		168632	2					
ANR	169920	CallExpression	FFABS ( dstStride )		168632	0					
ANR	169921	Callee	FFABS		168632	0					
ANR	169922	Identifier	FFABS		168632	0					
ANR	169923	ArgumentList	dstStride		168632	1					
ANR	169924	Argument	dstStride		168632	0					
ANR	169925	Identifier	dstStride		168632	0					
ANR	169926	ExpressionStatement	dstBlock = tempDst + dstStride	449:12:9309:9338	168632	5	True				
ANR	169927	AssignmentExpression	dstBlock = tempDst + dstStride		168632	0		=			
ANR	169928	Identifier	dstBlock		168632	0					
ANR	169929	AdditiveExpression	tempDst + dstStride		168632	1		+			
ANR	169930	Identifier	tempDst		168632	0					
ANR	169931	Identifier	dstStride		168632	1					
ANR	169932	ExpressionStatement	srcBlock = tempSrc	451:12:9353:9370	168632	6	True				
ANR	169933	AssignmentExpression	srcBlock = tempSrc		168632	0		=			
ANR	169934	Identifier	srcBlock		168632	0					
ANR	169935	Identifier	tempSrc		168632	1					
ANR	169936	ForStatement	for ( x = 0 ; x < width ; x += BLOCK_SIZE )		168632	8					
ANR	169937	ForInit	x = 0 ;	463:12:9656:9659	168632	0	True				
ANR	169938	AssignmentExpression	x = 0		168632	0		=			
ANR	169939	Identifier	x		168632	0					
ANR	169940	PrimaryExpression	0		168632	1					
ANR	169941	Condition	x < width	463:17:9661:9667	168632	1	True				
ANR	169942	RelationalExpression	x < width		168632	0		<			
ANR	169943	Identifier	x		168632	0					
ANR	169944	Identifier	width		168632	1					
ANR	169945	AssignmentExpression	x += BLOCK_SIZE	463:26:9670:9682	168632	2	True	+=			
ANR	169946	Identifier	x		168632	0					
ANR	169947	Identifier	BLOCK_SIZE		168632	1					
ANR	169948	CompoundStatement		465:12:9540:9556	168632	3					
ANR	169949	IdentifierDeclStatement	const int stride = dstStride ;	465:12:9699:9726	168632	0	True				
ANR	169950	IdentifierDecl	stride = dstStride		168632	0					
ANR	169951	IdentifierDeclType	const int		168632	0					
ANR	169952	Identifier	stride		168632	1					
ANR	169953	AssignmentExpression	stride = dstStride		168632	2		=			
ANR	169954	Identifier	dstStride		168632	0					
ANR	169955	Identifier	dstStride		168632	1					
ANR	169956	IdentifierDeclStatement	uint8_t * tmpXchg ;	469:12:9762:9778	168632	1	True				
ANR	169957	IdentifierDecl	* tmpXchg		168632	0					
ANR	169958	IdentifierDeclType	uint8_t *		168632	0					
ANR	169959	Identifier	tmpXchg		168632	1					
ANR	169960	IfStatement	if ( isColor )		168632	2					
ANR	169961	Condition	isColor	473:15:9804:9810	168632	0	True				
ANR	169962	Identifier	isColor		168632	0					
ANR	169963	CompoundStatement		469:23:9590:9590	168632	1					
ANR	169964	ExpressionStatement	QP = QPptr [ x >> qpHShift ]	475:16:9831:9853	168632	0	True				
ANR	169965	AssignmentExpression	QP = QPptr [ x >> qpHShift ]		168632	0		=			
ANR	169966	Identifier	QP		168632	0					
ANR	169967	ArrayIndexing	QPptr [ x >> qpHShift ]		168632	1					
ANR	169968	Identifier	QPptr		168632	0					
ANR	169969	ShiftExpression	x >> qpHShift		168632	1		>>			
ANR	169970	Identifier	x		168632	0					
ANR	169971	Identifier	qpHShift		168632	1					
ANR	169972	ExpressionStatement	c . nonBQP = nonBQPptr [ x >> qpHShift ]	477:16:9872:9904	168632	1	True				
ANR	169973	AssignmentExpression	c . nonBQP = nonBQPptr [ x >> qpHShift ]		168632	0		=			
ANR	169974	MemberAccess	c . nonBQP		168632	0					
ANR	169975	Identifier	c		168632	0					
ANR	169976	Identifier	nonBQP		168632	1					
ANR	169977	ArrayIndexing	nonBQPptr [ x >> qpHShift ]		168632	1					
ANR	169978	Identifier	nonBQPptr		168632	0					
ANR	169979	ShiftExpression	x >> qpHShift		168632	1		>>			
ANR	169980	Identifier	x		168632	0					
ANR	169981	Identifier	qpHShift		168632	1					
ANR	169982	ElseStatement	else		168632	0					
ANR	169983	CompoundStatement		475:17:9702:9702	168632	0					
ANR	169984	ExpressionStatement	QP = QPptr [ x >> 4 ]	481:16:9943:9958	168632	0	True				
ANR	169985	AssignmentExpression	QP = QPptr [ x >> 4 ]		168632	0		=			
ANR	169986	Identifier	QP		168632	0					
ANR	169987	ArrayIndexing	QPptr [ x >> 4 ]		168632	1					
ANR	169988	Identifier	QPptr		168632	0					
ANR	169989	ShiftExpression	x >> 4		168632	1		>>			
ANR	169990	Identifier	x		168632	0					
ANR	169991	PrimaryExpression	4		168632	1					
ANR	169992	ExpressionStatement	QP = ( QP * QPCorrecture + 256 * 128 ) >> 16	483:16:9977:10013	168632	1	True				
ANR	169993	AssignmentExpression	QP = ( QP * QPCorrecture + 256 * 128 ) >> 16		168632	0		=			
ANR	169994	Identifier	QP		168632	0					
ANR	169995	ShiftExpression	( QP * QPCorrecture + 256 * 128 ) >> 16		168632	1		>>			
ANR	169996	AdditiveExpression	QP * QPCorrecture + 256 * 128		168632	0		+			
ANR	169997	MultiplicativeExpression	QP * QPCorrecture		168632	0		*			
ANR	169998	Identifier	QP		168632	0					
ANR	169999	Identifier	QPCorrecture		168632	1					
ANR	170000	MultiplicativeExpression	256 * 128		168632	1		*			
ANR	170001	PrimaryExpression	256		168632	0					
ANR	170002	PrimaryExpression	128		168632	1					
ANR	170003	PrimaryExpression	16		168632	1					
ANR	170004	ExpressionStatement	c . nonBQP = nonBQPptr [ x >> 4 ]	485:16:10032:10057	168632	2	True				
ANR	170005	AssignmentExpression	c . nonBQP = nonBQPptr [ x >> 4 ]		168632	0		=			
ANR	170006	MemberAccess	c . nonBQP		168632	0					
ANR	170007	Identifier	c		168632	0					
ANR	170008	Identifier	nonBQP		168632	1					
ANR	170009	ArrayIndexing	nonBQPptr [ x >> 4 ]		168632	1					
ANR	170010	Identifier	nonBQPptr		168632	0					
ANR	170011	ShiftExpression	x >> 4		168632	1		>>			
ANR	170012	Identifier	x		168632	0					
ANR	170013	PrimaryExpression	4		168632	1					
ANR	170014	ExpressionStatement	c . nonBQP = ( c . nonBQP * QPCorrecture + 256 * 128 ) >> 16	487:16:10076:10124	168632	3	True				
ANR	170015	AssignmentExpression	c . nonBQP = ( c . nonBQP * QPCorrecture + 256 * 128 ) >> 16		168632	0		=			
ANR	170016	MemberAccess	c . nonBQP		168632	0					
ANR	170017	Identifier	c		168632	0					
ANR	170018	Identifier	nonBQP		168632	1					
ANR	170019	ShiftExpression	( c . nonBQP * QPCorrecture + 256 * 128 ) >> 16		168632	1		>>			
ANR	170020	AdditiveExpression	c . nonBQP * QPCorrecture + 256 * 128		168632	0		+			
ANR	170021	MultiplicativeExpression	c . nonBQP * QPCorrecture		168632	0		*			
ANR	170022	MemberAccess	c . nonBQP		168632	0					
ANR	170023	Identifier	c		168632	0					
ANR	170024	Identifier	nonBQP		168632	1					
ANR	170025	Identifier	QPCorrecture		168632	1					
ANR	170026	MultiplicativeExpression	256 * 128		168632	1		*			
ANR	170027	PrimaryExpression	256		168632	0					
ANR	170028	PrimaryExpression	128		168632	1					
ANR	170029	PrimaryExpression	16		168632	1					
ANR	170030	ExpressionStatement	yHistogram [ srcBlock [ srcStride * 12 + 4 ] ] ++	489:16:10143:10185	168632	4	True				
ANR	170031	PostIncDecOperationExpression	yHistogram [ srcBlock [ srcStride * 12 + 4 ] ] ++		168632	0					
ANR	170032	ArrayIndexing	yHistogram [ srcBlock [ srcStride * 12 + 4 ] ]		168632	0					
ANR	170033	Identifier	yHistogram		168632	0					
ANR	170034	ArrayIndexing	srcBlock [ srcStride * 12 + 4 ]		168632	1					
ANR	170035	Identifier	srcBlock		168632	0					
ANR	170036	AdditiveExpression	srcStride * 12 + 4		168632	1		+			
ANR	170037	MultiplicativeExpression	srcStride * 12		168632	0		*			
ANR	170038	Identifier	srcStride		168632	0					
ANR	170039	PrimaryExpression	12		168632	1					
ANR	170040	PrimaryExpression	4		168632	1					
ANR	170041	IncDec	++		168632	1					
ANR	170042	ExpressionStatement	c . QP = QP	493:12:10215:10223	168632	3	True				
ANR	170043	AssignmentExpression	c . QP = QP		168632	0		=			
ANR	170044	MemberAccess	c . QP		168632	0					
ANR	170045	Identifier	c		168632	0					
ANR	170046	Identifier	QP		168632	1					
ANR	170047	Identifier	QP		168632	1					
ANR	170048	Statement	__asm__	497:12:10259:10265	168632	4	True				
ANR	170049	Statement	volatile	497:20:10267:10274	168632	5	True				
ANR	170050	Statement	(	497:28:10275:10275	168632	6	True				
ANR	170051	Statement	"""movd %1, %%mm7         \\n\\t"""	499:16:10294:10322	168632	7	True				
ANR	170052	Statement	"""packuswb %%mm7, %%mm7  \\n\\t"""	501:16:10341:10369	168632	8	True				
ANR	170053	Statement	"""packuswb %%mm7, %%mm7  \\n\\t"""	503:16:10416:10444	168632	9	True				
ANR	170054	Statement	"""packuswb %%mm7, %%mm7  \\n\\t"""	505:16:10491:10519	168632	10	True				
ANR	170055	Statement	"""movq %%mm7, %0         \\n\\t"""	507:16:10552:10580	168632	11	True				
ANR	170056	Statement	:	509:16:10599:10599	168632	12	True				
ANR	170057	Statement	"""=m"""	509:18:10601:10604	168632	13	True				
ANR	170058	Statement	(	509:23:10606:10606	168632	14	True				
ANR	170059	Statement	c	509:24:10607:10607	168632	15	True				
ANR	170060	Statement	.	509:25:10608:10608	168632	16	True				
ANR	170061	Statement	pQPb	509:26:10609:10612	168632	17	True				
ANR	170062	Statement	)	509:30:10613:10613	168632	18	True				
ANR	170063	Statement	:	511:16:10632:10632	168632	19	True				
ANR	170064	Statement	"""r"""	511:18:10634:10636	168632	20	True				
ANR	170065	Statement	(	511:22:10638:10638	168632	21	True				
ANR	170066	Statement	QP	511:23:10639:10640	168632	22	True				
ANR	170067	Statement	)	511:25:10641:10641	168632	23	True				
ANR	170068	Statement	)	513:12:10656:10656	168632	24	True				
ANR	170069	ExpressionStatement		513:13:10657:10657	168632	25	True				
ANR	170070	Statement	__asm__	537:12:11010:11016	168632	26	True				
ANR	170071	Statement	(	537:19:11017:11017	168632	27	True				
ANR	170072	Statement	"""mov %4, %%"""	539:16:11036:11047	168632	28	True				
ANR	170073	Statement	REG_a	539:28:11048:11052	168632	29	True				
ANR	170074	Statement	"""              \\n\\t"""	539:33:11053:11072	168632	30	True				
ANR	170075	Statement	"""shr $2, %%"""	541:16:11091:11102	168632	31	True				
ANR	170076	Statement	REG_a	541:28:11103:11107	168632	32	True				
ANR	170077	Statement	"""              \\n\\t"""	541:33:11108:11127	168632	33	True				
ANR	170078	Statement	"""and $6, %%"""	543:16:11146:11157	168632	34	True				
ANR	170079	Statement	REG_a	543:28:11158:11162	168632	35	True				
ANR	170080	Statement	"""              \\n\\t"""	543:33:11163:11182	168632	36	True				
ANR	170081	Statement	"""add %5, %%"""	545:16:11201:11212	168632	37	True				
ANR	170082	Statement	REG_a	545:28:11213:11217	168632	38	True				
ANR	170083	Statement	"""              \\n\\t"""	545:33:11218:11237	168632	39	True				
ANR	170084	Statement	"""mov %%"""	547:16:11256:11263	168632	40	True				
ANR	170085	Statement	REG_a	547:24:11264:11268	168632	41	True				
ANR	170086	Statement	""", %%"""	547:29:11269:11274	168632	42	True				
ANR	170087	Statement	REG_d	547:35:11275:11279	168632	43	True				
ANR	170088	Statement	"""       \\n\\t"""	547:40:11280:11292	168632	44	True				
ANR	170089	Statement	"""imul %1, %%"""	549:16:11311:11323	168632	45	True				
ANR	170090	Statement	REG_a	549:29:11324:11328	168632	46	True				
ANR	170091	Statement	"""             \\n\\t"""	549:34:11329:11347	168632	47	True				
ANR	170092	Statement	"""imul %3, %%"""	551:16:11366:11378	168632	48	True				
ANR	170093	Statement	REG_d	551:29:11379:11383	168632	49	True				
ANR	170094	Statement	"""             \\n\\t"""	551:34:11384:11402	168632	50	True				
ANR	170095	Statement	"""prefetchnta 32(%%"""	553:16:11421:11439	168632	51	True				
ANR	170096	Statement	REG_a	553:35:11440:11444	168632	52	True				
ANR	170097	Statement	""", %0)  \\n\\t"""	553:40:11445:11457	168632	53	True				
ANR	170098	Statement	"""prefetcht0 32(%%"""	555:16:11476:11493	168632	54	True				
ANR	170099	Statement	REG_d	555:34:11494:11498	168632	55	True				
ANR	170100	Statement	""", %2)   \\n\\t"""	555:39:11499:11512	168632	56	True				
ANR	170101	Statement	"""add %1, %%"""	557:16:11531:11542	168632	57	True				
ANR	170102	Statement	REG_a	557:28:11543:11547	168632	58	True				
ANR	170103	Statement	"""              \\n\\t"""	557:33:11548:11567	168632	59	True				
ANR	170104	Statement	"""add %3, %%"""	559:16:11586:11597	168632	60	True				
ANR	170105	Statement	REG_d	559:28:11598:11602	168632	61	True				
ANR	170106	Statement	"""              \\n\\t"""	559:33:11603:11622	168632	62	True				
ANR	170107	Statement	"""prefetchnta 32(%%"""	561:16:11641:11659	168632	63	True				
ANR	170108	Statement	REG_a	561:35:11660:11664	168632	64	True				
ANR	170109	Statement	""", %0)  \\n\\t"""	561:40:11665:11677	168632	65	True				
ANR	170110	Statement	"""prefetcht0 32(%%"""	563:16:11696:11713	168632	66	True				
ANR	170111	Statement	REG_d	563:34:11714:11718	168632	67	True				
ANR	170112	Statement	""", %2)   \\n\\t"""	563:39:11719:11732	168632	68	True				
ANR	170113	Statement	::	565:16:11751:11752	168632	69	True				
ANR	170114	Statement	"""r"""	565:19:11754:11756	168632	70	True				
ANR	170115	Statement	(	565:23:11758:11758	168632	71	True				
ANR	170116	Statement	srcBlock	565:24:11759:11766	168632	72	True				
ANR	170117	Statement	)	565:32:11767:11767	168632	73	True				
ANR	170118	Statement	","	565:33:11768:11768	168632	74	True				
ANR	170119	Statement	"""r"""	565:35:11770:11772	168632	75	True				
ANR	170120	Statement	(	565:39:11774:11774	168632	76	True				
ANR	170121	Statement	(	565:40:11775:11775	168632	77	True				
ANR	170122	Statement	x86_reg	565:41:11776:11782	168632	78	True				
ANR	170123	Statement	)	565:48:11783:11783	168632	79	True				
ANR	170124	Statement	srcStride	565:49:11784:11792	168632	80	True				
ANR	170125	Statement	)	565:58:11793:11793	168632	81	True				
ANR	170126	Statement	","	565:59:11794:11794	168632	82	True				
ANR	170127	Statement	"""r"""	565:61:11796:11798	168632	83	True				
ANR	170128	Statement	(	565:65:11800:11800	168632	84	True				
ANR	170129	Statement	dstBlock	565:66:11801:11808	168632	85	True				
ANR	170130	Statement	)	565:74:11809:11809	168632	86	True				
ANR	170131	Statement	","	565:75:11810:11810	168632	87	True				
ANR	170132	Statement	"""r"""	565:77:11812:11814	168632	88	True				
ANR	170133	Statement	(	565:81:11816:11816	168632	89	True				
ANR	170134	Statement	(	565:82:11817:11817	168632	90	True				
ANR	170135	Statement	x86_reg	565:83:11818:11824	168632	91	True				
ANR	170136	Statement	)	565:90:11825:11825	168632	92	True				
ANR	170137	Statement	dstStride	565:91:11826:11834	168632	93	True				
ANR	170138	Statement	)	565:100:11835:11835	168632	94	True				
ANR	170139	Statement	","	565:101:11836:11836	168632	95	True				
ANR	170140	Statement	"""g"""	567:16:11855:11857	168632	96	True				
ANR	170141	Statement	(	567:20:11859:11859	168632	97	True				
ANR	170142	Statement	(	567:21:11860:11860	168632	98	True				
ANR	170143	Statement	x86_reg	567:22:11861:11867	168632	99	True				
ANR	170144	Statement	)	567:29:11868:11868	168632	100	True				
ANR	170145	Statement	x	567:30:11869:11869	168632	101	True				
ANR	170146	Statement	)	567:31:11870:11870	168632	102	True				
ANR	170147	Statement	","	567:32:11871:11871	168632	103	True				
ANR	170148	Statement	"""g"""	567:34:11873:11875	168632	104	True				
ANR	170149	Statement	(	567:38:11877:11877	168632	105	True				
ANR	170150	Statement	(	567:39:11878:11878	168632	106	True				
ANR	170151	Statement	x86_reg	567:40:11879:11885	168632	107	True				
ANR	170152	Statement	)	567:47:11886:11886	168632	108	True				
ANR	170153	Statement	copyAhead	567:48:11887:11895	168632	109	True				
ANR	170154	Statement	)	567:57:11896:11896	168632	110	True				
ANR	170155	Statement	:	569:16:11915:11915	168632	111	True				
ANR	170156	Statement	"""%"""	569:18:11917:11919	168632	112	True				
ANR	170157	Statement	REG_a	569:21:11920:11924	168632	113	True				
ANR	170158	Statement	","	569:26:11925:11925	168632	114	True				
ANR	170159	Statement	"""%"""	569:28:11927:11929	168632	115	True				
ANR	170160	Statement	REG_d	569:31:11930:11934	168632	116	True				
ANR	170161	Statement	)	571:12:11949:11949	168632	117	True				
ANR	170162	ExpressionStatement		571:13:11950:11950	168632	118	True				
ANR	170163	ExpressionStatement	"RENAME ( blockCopy ) ( dstBlock + dstStride * copyAhead , dstStride , srcBlock + srcStride * copyAhead , srcStride , mode & LEVEL_FIX , & c . packedYOffset )"	593:12:12373:12543	168632	119	True				
ANR	170164	CallExpression	"RENAME ( blockCopy ) ( dstBlock + dstStride * copyAhead , dstStride , srcBlock + srcStride * copyAhead , srcStride , mode & LEVEL_FIX , & c . packedYOffset )"		168632	0					
ANR	170165	Callee	RENAME ( blockCopy )		168632	0					
ANR	170166	CallExpression	RENAME ( blockCopy )		168632	0					
ANR	170167	Callee	RENAME		168632	0					
ANR	170168	Identifier	RENAME		168632	0					
ANR	170169	ArgumentList	blockCopy		168632	1					
ANR	170170	Argument	blockCopy		168632	0					
ANR	170171	Identifier	blockCopy		168632	0					
ANR	170172	ArgumentList	dstBlock + dstStride * copyAhead		168632	1					
ANR	170173	Argument	dstBlock + dstStride * copyAhead		168632	0					
ANR	170174	AdditiveExpression	dstBlock + dstStride * copyAhead		168632	0		+			
ANR	170175	Identifier	dstBlock		168632	0					
ANR	170176	MultiplicativeExpression	dstStride * copyAhead		168632	1		*			
ANR	170177	Identifier	dstStride		168632	0					
ANR	170178	Identifier	copyAhead		168632	1					
ANR	170179	Argument	dstStride		168632	1					
ANR	170180	Identifier	dstStride		168632	0					
ANR	170181	Argument	srcBlock + srcStride * copyAhead		168632	2					
ANR	170182	AdditiveExpression	srcBlock + srcStride * copyAhead		168632	0		+			
ANR	170183	Identifier	srcBlock		168632	0					
ANR	170184	MultiplicativeExpression	srcStride * copyAhead		168632	1		*			
ANR	170185	Identifier	srcStride		168632	0					
ANR	170186	Identifier	copyAhead		168632	1					
ANR	170187	Argument	srcStride		168632	3					
ANR	170188	Identifier	srcStride		168632	0					
ANR	170189	Argument	mode & LEVEL_FIX		168632	4					
ANR	170190	BitAndExpression	mode & LEVEL_FIX		168632	0		&			
ANR	170191	Identifier	mode		168632	0					
ANR	170192	Identifier	LEVEL_FIX		168632	1					
ANR	170193	Argument	& c . packedYOffset		168632	5					
ANR	170194	UnaryOperationExpression	& c . packedYOffset		168632	0					
ANR	170195	UnaryOperator	&		168632	0					
ANR	170196	MemberAccess	c . packedYOffset		168632	1					
ANR	170197	Identifier	c		168632	0					
ANR	170198	Identifier	packedYOffset		168632	1					
ANR	170199	IfStatement	if ( mode & LINEAR_IPOL_DEINT_FILTER )		168632	120					
ANR	170200	Condition	mode & LINEAR_IPOL_DEINT_FILTER	599:15:12563:12593	168632	0	True				
ANR	170201	BitAndExpression	mode & LINEAR_IPOL_DEINT_FILTER		168632	0		&			
ANR	170202	Identifier	mode		168632	0					
ANR	170203	Identifier	LINEAR_IPOL_DEINT_FILTER		168632	1					
ANR	170204	ExpressionStatement	"RENAME ( deInterlaceInterpolateLinear ) ( dstBlock , dstStride )"	601:16:12613:12670	168632	1	True				
ANR	170205	CallExpression	"RENAME ( deInterlaceInterpolateLinear ) ( dstBlock , dstStride )"		168632	0					
ANR	170206	Callee	RENAME ( deInterlaceInterpolateLinear )		168632	0					
ANR	170207	CallExpression	RENAME ( deInterlaceInterpolateLinear )		168632	0					
ANR	170208	Callee	RENAME		168632	0					
ANR	170209	Identifier	RENAME		168632	0					
ANR	170210	ArgumentList	deInterlaceInterpolateLinear		168632	1					
ANR	170211	Argument	deInterlaceInterpolateLinear		168632	0					
ANR	170212	Identifier	deInterlaceInterpolateLinear		168632	0					
ANR	170213	ArgumentList	dstBlock		168632	1					
ANR	170214	Argument	dstBlock		168632	0					
ANR	170215	Identifier	dstBlock		168632	0					
ANR	170216	Argument	dstStride		168632	1					
ANR	170217	Identifier	dstStride		168632	0					
ANR	170218	ElseStatement	else		168632	0					
ANR	170219	IfStatement	if ( mode & LINEAR_BLEND_DEINT_FILTER )		168632	0					
ANR	170220	Condition	mode & LINEAR_BLEND_DEINT_FILTER	603:20:12693:12724	168632	0	True				
ANR	170221	BitAndExpression	mode & LINEAR_BLEND_DEINT_FILTER		168632	0		&			
ANR	170222	Identifier	mode		168632	0					
ANR	170223	Identifier	LINEAR_BLEND_DEINT_FILTER		168632	1					
ANR	170224	ExpressionStatement	"RENAME ( deInterlaceBlendLinear ) ( dstBlock , dstStride , c . deintTemp + x )"	605:16:12744:12812	168632	1	True				
ANR	170225	CallExpression	"RENAME ( deInterlaceBlendLinear ) ( dstBlock , dstStride , c . deintTemp + x )"		168632	0					
ANR	170226	Callee	RENAME ( deInterlaceBlendLinear )		168632	0					
ANR	170227	CallExpression	RENAME ( deInterlaceBlendLinear )		168632	0					
ANR	170228	Callee	RENAME		168632	0					
ANR	170229	Identifier	RENAME		168632	0					
ANR	170230	ArgumentList	deInterlaceBlendLinear		168632	1					
ANR	170231	Argument	deInterlaceBlendLinear		168632	0					
ANR	170232	Identifier	deInterlaceBlendLinear		168632	0					
ANR	170233	ArgumentList	dstBlock		168632	1					
ANR	170234	Argument	dstBlock		168632	0					
ANR	170235	Identifier	dstBlock		168632	0					
ANR	170236	Argument	dstStride		168632	1					
ANR	170237	Identifier	dstStride		168632	0					
ANR	170238	Argument	c . deintTemp + x		168632	2					
ANR	170239	AdditiveExpression	c . deintTemp + x		168632	0		+			
ANR	170240	MemberAccess	c . deintTemp		168632	0					
ANR	170241	Identifier	c		168632	0					
ANR	170242	Identifier	deintTemp		168632	1					
ANR	170243	Identifier	x		168632	1					
ANR	170244	ElseStatement	else		168632	0					
ANR	170245	IfStatement	if ( mode & MEDIAN_DEINT_FILTER )		168632	0					
ANR	170246	Condition	mode & MEDIAN_DEINT_FILTER	607:20:12835:12860	168632	0	True				
ANR	170247	BitAndExpression	mode & MEDIAN_DEINT_FILTER		168632	0		&			
ANR	170248	Identifier	mode		168632	0					
ANR	170249	Identifier	MEDIAN_DEINT_FILTER		168632	1					
ANR	170250	ExpressionStatement	"RENAME ( deInterlaceMedian ) ( dstBlock , dstStride )"	609:16:12880:12926	168632	1	True				
ANR	170251	CallExpression	"RENAME ( deInterlaceMedian ) ( dstBlock , dstStride )"		168632	0					
ANR	170252	Callee	RENAME ( deInterlaceMedian )		168632	0					
ANR	170253	CallExpression	RENAME ( deInterlaceMedian )		168632	0					
ANR	170254	Callee	RENAME		168632	0					
ANR	170255	Identifier	RENAME		168632	0					
ANR	170256	ArgumentList	deInterlaceMedian		168632	1					
ANR	170257	Argument	deInterlaceMedian		168632	0					
ANR	170258	Identifier	deInterlaceMedian		168632	0					
ANR	170259	ArgumentList	dstBlock		168632	1					
ANR	170260	Argument	dstBlock		168632	0					
ANR	170261	Identifier	dstBlock		168632	0					
ANR	170262	Argument	dstStride		168632	1					
ANR	170263	Identifier	dstStride		168632	0					
ANR	170264	ElseStatement	else		168632	0					
ANR	170265	IfStatement	if ( mode & CUBIC_IPOL_DEINT_FILTER )		168632	0					
ANR	170266	Condition	mode & CUBIC_IPOL_DEINT_FILTER	611:20:12949:12978	168632	0	True				
ANR	170267	BitAndExpression	mode & CUBIC_IPOL_DEINT_FILTER		168632	0		&			
ANR	170268	Identifier	mode		168632	0					
ANR	170269	Identifier	CUBIC_IPOL_DEINT_FILTER		168632	1					
ANR	170270	ExpressionStatement	"RENAME ( deInterlaceInterpolateCubic ) ( dstBlock , dstStride )"	613:16:12998:13054	168632	1	True				
ANR	170271	CallExpression	"RENAME ( deInterlaceInterpolateCubic ) ( dstBlock , dstStride )"		168632	0					
ANR	170272	Callee	RENAME ( deInterlaceInterpolateCubic )		168632	0					
ANR	170273	CallExpression	RENAME ( deInterlaceInterpolateCubic )		168632	0					
ANR	170274	Callee	RENAME		168632	0					
ANR	170275	Identifier	RENAME		168632	0					
ANR	170276	ArgumentList	deInterlaceInterpolateCubic		168632	1					
ANR	170277	Argument	deInterlaceInterpolateCubic		168632	0					
ANR	170278	Identifier	deInterlaceInterpolateCubic		168632	0					
ANR	170279	ArgumentList	dstBlock		168632	1					
ANR	170280	Argument	dstBlock		168632	0					
ANR	170281	Identifier	dstBlock		168632	0					
ANR	170282	Argument	dstStride		168632	1					
ANR	170283	Identifier	dstStride		168632	0					
ANR	170284	ElseStatement	else		168632	0					
ANR	170285	IfStatement	if ( mode & FFMPEG_DEINT_FILTER )		168632	0					
ANR	170286	Condition	mode & FFMPEG_DEINT_FILTER	615:20:13077:13102	168632	0	True				
ANR	170287	BitAndExpression	mode & FFMPEG_DEINT_FILTER		168632	0		&			
ANR	170288	Identifier	mode		168632	0					
ANR	170289	Identifier	FFMPEG_DEINT_FILTER		168632	1					
ANR	170290	ExpressionStatement	"RENAME ( deInterlaceFF ) ( dstBlock , dstStride , c . deintTemp + x )"	617:16:13122:13181	168632	1	True				
ANR	170291	CallExpression	"RENAME ( deInterlaceFF ) ( dstBlock , dstStride , c . deintTemp + x )"		168632	0					
ANR	170292	Callee	RENAME ( deInterlaceFF )		168632	0					
ANR	170293	CallExpression	RENAME ( deInterlaceFF )		168632	0					
ANR	170294	Callee	RENAME		168632	0					
ANR	170295	Identifier	RENAME		168632	0					
ANR	170296	ArgumentList	deInterlaceFF		168632	1					
ANR	170297	Argument	deInterlaceFF		168632	0					
ANR	170298	Identifier	deInterlaceFF		168632	0					
ANR	170299	ArgumentList	dstBlock		168632	1					
ANR	170300	Argument	dstBlock		168632	0					
ANR	170301	Identifier	dstBlock		168632	0					
ANR	170302	Argument	dstStride		168632	1					
ANR	170303	Identifier	dstStride		168632	0					
ANR	170304	Argument	c . deintTemp + x		168632	2					
ANR	170305	AdditiveExpression	c . deintTemp + x		168632	0		+			
ANR	170306	MemberAccess	c . deintTemp		168632	0					
ANR	170307	Identifier	c		168632	0					
ANR	170308	Identifier	deintTemp		168632	1					
ANR	170309	Identifier	x		168632	1					
ANR	170310	ElseStatement	else		168632	0					
ANR	170311	IfStatement	if ( mode & LOWPASS5_DEINT_FILTER )		168632	0					
ANR	170312	Condition	mode & LOWPASS5_DEINT_FILTER	619:20:13204:13231	168632	0	True				
ANR	170313	BitAndExpression	mode & LOWPASS5_DEINT_FILTER		168632	0		&			
ANR	170314	Identifier	mode		168632	0					
ANR	170315	Identifier	LOWPASS5_DEINT_FILTER		168632	1					
ANR	170316	ExpressionStatement	"RENAME ( deInterlaceL5 ) ( dstBlock , dstStride , c . deintTemp + x , c . deintTemp + width + x )"	621:16:13251:13335	168632	1	True				
ANR	170317	CallExpression	"RENAME ( deInterlaceL5 ) ( dstBlock , dstStride , c . deintTemp + x , c . deintTemp + width + x )"		168632	0					
ANR	170318	Callee	RENAME ( deInterlaceL5 )		168632	0					
ANR	170319	CallExpression	RENAME ( deInterlaceL5 )		168632	0					
ANR	170320	Callee	RENAME		168632	0					
ANR	170321	Identifier	RENAME		168632	0					
ANR	170322	ArgumentList	deInterlaceL5		168632	1					
ANR	170323	Argument	deInterlaceL5		168632	0					
ANR	170324	Identifier	deInterlaceL5		168632	0					
ANR	170325	ArgumentList	dstBlock		168632	1					
ANR	170326	Argument	dstBlock		168632	0					
ANR	170327	Identifier	dstBlock		168632	0					
ANR	170328	Argument	dstStride		168632	1					
ANR	170329	Identifier	dstStride		168632	0					
ANR	170330	Argument	c . deintTemp + x		168632	2					
ANR	170331	AdditiveExpression	c . deintTemp + x		168632	0		+			
ANR	170332	MemberAccess	c . deintTemp		168632	0					
ANR	170333	Identifier	c		168632	0					
ANR	170334	Identifier	deintTemp		168632	1					
ANR	170335	Identifier	x		168632	1					
ANR	170336	Argument	c . deintTemp + width + x		168632	3					
ANR	170337	AdditiveExpression	c . deintTemp + width + x		168632	0		+			
ANR	170338	MemberAccess	c . deintTemp		168632	0					
ANR	170339	Identifier	c		168632	0					
ANR	170340	Identifier	deintTemp		168632	1					
ANR	170341	AdditiveExpression	width + x		168632	1		+			
ANR	170342	Identifier	width		168632	0					
ANR	170343	Identifier	x		168632	1					
ANR	170344	IfStatement	if ( y + 8 < height )		168632	121					
ANR	170345	Condition	y + 8 < height	633:15:13534:13547	168632	0	True				
ANR	170346	RelationalExpression	y + 8 < height		168632	0		<			
ANR	170347	AdditiveExpression	y + 8		168632	0		+			
ANR	170348	Identifier	y		168632	0					
ANR	170349	PrimaryExpression	8		168632	1					
ANR	170350	Identifier	height		168632	1					
ANR	170351	CompoundStatement		629:30:13327:13327	168632	1					
ANR	170352	IfStatement	if ( mode & V_X1_FILTER )		168632	0					
ANR	170353	Condition	mode & V_X1_FILTER	635:19:13571:13588	168632	0	True				
ANR	170354	BitAndExpression	mode & V_X1_FILTER		168632	0		&			
ANR	170355	Identifier	mode		168632	0					
ANR	170356	Identifier	V_X1_FILTER		168632	1					
ANR	170357	ExpressionStatement	"RENAME ( vertX1Filter ) ( dstBlock , stride , & c )"	637:20:13612:13654	168632	1	True				
ANR	170358	CallExpression	"RENAME ( vertX1Filter ) ( dstBlock , stride , & c )"		168632	0					
ANR	170359	Callee	RENAME ( vertX1Filter )		168632	0					
ANR	170360	CallExpression	RENAME ( vertX1Filter )		168632	0					
ANR	170361	Callee	RENAME		168632	0					
ANR	170362	Identifier	RENAME		168632	0					
ANR	170363	ArgumentList	vertX1Filter		168632	1					
ANR	170364	Argument	vertX1Filter		168632	0					
ANR	170365	Identifier	vertX1Filter		168632	0					
ANR	170366	ArgumentList	dstBlock		168632	1					
ANR	170367	Argument	dstBlock		168632	0					
ANR	170368	Identifier	dstBlock		168632	0					
ANR	170369	Argument	stride		168632	1					
ANR	170370	Identifier	stride		168632	0					
ANR	170371	Argument	& c		168632	2					
ANR	170372	UnaryOperationExpression	& c		168632	0					
ANR	170373	UnaryOperator	&		168632	0					
ANR	170374	Identifier	c		168632	1					
ANR	170375	ElseStatement	else		168632	0					
ANR	170376	IfStatement	if ( mode & V_DEBLOCK )		168632	0					
ANR	170377	Condition	mode & V_DEBLOCK	639:24:13681:13696	168632	0	True				
ANR	170378	BitAndExpression	mode & V_DEBLOCK		168632	0		&			
ANR	170379	Identifier	mode		168632	0					
ANR	170380	Identifier	V_DEBLOCK		168632	1					
ANR	170381	CompoundStatement		637:20:13499:13554	168632	1					
ANR	170382	IdentifierDeclStatement	"const int t = RENAME ( vertClassify ) ( dstBlock , stride , & c ) ;"	641:20:13721:13776	168632	0	True				
ANR	170383	IdentifierDecl	"t = RENAME ( vertClassify ) ( dstBlock , stride , & c )"		168632	0					
ANR	170384	IdentifierDeclType	const int		168632	0					
ANR	170385	Identifier	t		168632	1					
ANR	170386	AssignmentExpression	"t = RENAME ( vertClassify ) ( dstBlock , stride , & c )"		168632	2		=			
ANR	170387	Identifier	t		168632	0					
ANR	170388	CallExpression	"RENAME ( vertClassify ) ( dstBlock , stride , & c )"		168632	1					
ANR	170389	Callee	RENAME ( vertClassify )		168632	0					
ANR	170390	CallExpression	RENAME ( vertClassify )		168632	0					
ANR	170391	Callee	RENAME		168632	0					
ANR	170392	Identifier	RENAME		168632	0					
ANR	170393	ArgumentList	vertClassify		168632	1					
ANR	170394	Argument	vertClassify		168632	0					
ANR	170395	Identifier	vertClassify		168632	0					
ANR	170396	ArgumentList	dstBlock		168632	1					
ANR	170397	Argument	dstBlock		168632	0					
ANR	170398	Identifier	dstBlock		168632	0					
ANR	170399	Argument	stride		168632	1					
ANR	170400	Identifier	stride		168632	0					
ANR	170401	Argument	& c		168632	2					
ANR	170402	UnaryOperationExpression	& c		168632	0					
ANR	170403	UnaryOperator	&		168632	0					
ANR	170404	Identifier	c		168632	1					
ANR	170405	IfStatement	if ( t == 1 )		168632	1					
ANR	170406	Condition	t == 1	645:23:13804:13807	168632	0	True				
ANR	170407	EqualityExpression	t == 1		168632	0		==			
ANR	170408	Identifier	t		168632	0					
ANR	170409	PrimaryExpression	1		168632	1					
ANR	170410	ExpressionStatement	"RENAME ( doVertLowPass ) ( dstBlock , stride , & c )"	647:24:13835:13878	168632	1	True				
ANR	170411	CallExpression	"RENAME ( doVertLowPass ) ( dstBlock , stride , & c )"		168632	0					
ANR	170412	Callee	RENAME ( doVertLowPass )		168632	0					
ANR	170413	CallExpression	RENAME ( doVertLowPass )		168632	0					
ANR	170414	Callee	RENAME		168632	0					
ANR	170415	Identifier	RENAME		168632	0					
ANR	170416	ArgumentList	doVertLowPass		168632	1					
ANR	170417	Argument	doVertLowPass		168632	0					
ANR	170418	Identifier	doVertLowPass		168632	0					
ANR	170419	ArgumentList	dstBlock		168632	1					
ANR	170420	Argument	dstBlock		168632	0					
ANR	170421	Identifier	dstBlock		168632	0					
ANR	170422	Argument	stride		168632	1					
ANR	170423	Identifier	stride		168632	0					
ANR	170424	Argument	& c		168632	2					
ANR	170425	UnaryOperationExpression	& c		168632	0					
ANR	170426	UnaryOperator	&		168632	0					
ANR	170427	Identifier	c		168632	1					
ANR	170428	ElseStatement	else		168632	0					
ANR	170429	IfStatement	if ( t == 2 )		168632	0					
ANR	170430	Condition	t == 2	649:28:13909:13912	168632	0	True				
ANR	170431	EqualityExpression	t == 2		168632	0		==			
ANR	170432	Identifier	t		168632	0					
ANR	170433	PrimaryExpression	2		168632	1					
ANR	170434	ExpressionStatement	"RENAME ( doVertDefFilter ) ( dstBlock , stride , & c )"	651:24:13940:13985	168632	1	True				
ANR	170435	CallExpression	"RENAME ( doVertDefFilter ) ( dstBlock , stride , & c )"		168632	0					
ANR	170436	Callee	RENAME ( doVertDefFilter )		168632	0					
ANR	170437	CallExpression	RENAME ( doVertDefFilter )		168632	0					
ANR	170438	Callee	RENAME		168632	0					
ANR	170439	Identifier	RENAME		168632	0					
ANR	170440	ArgumentList	doVertDefFilter		168632	1					
ANR	170441	Argument	doVertDefFilter		168632	0					
ANR	170442	Identifier	doVertDefFilter		168632	0					
ANR	170443	ArgumentList	dstBlock		168632	1					
ANR	170444	Argument	dstBlock		168632	0					
ANR	170445	Identifier	dstBlock		168632	0					
ANR	170446	Argument	stride		168632	1					
ANR	170447	Identifier	stride		168632	0					
ANR	170448	Argument	& c		168632	2					
ANR	170449	UnaryOperationExpression	& c		168632	0					
ANR	170450	UnaryOperator	&		168632	0					
ANR	170451	Identifier	c		168632	1					
ANR	170452	ElseStatement	else		168632	0					
ANR	170453	IfStatement	if ( mode & V_A_DEBLOCK )		168632	0					
ANR	170454	Condition	mode & V_A_DEBLOCK	653:25:14013:14030	168632	0	True				
ANR	170455	BitAndExpression	mode & V_A_DEBLOCK		168632	0		&			
ANR	170456	Identifier	mode		168632	0					
ANR	170457	Identifier	V_A_DEBLOCK		168632	1					
ANR	170458	CompoundStatement		649:44:13810:13810	168632	1					
ANR	170459	ExpressionStatement	"RENAME ( do_a_deblock ) ( dstBlock , stride , 1 , & c , mode )"	655:20:14055:14106	168632	0	True				
ANR	170460	CallExpression	"RENAME ( do_a_deblock ) ( dstBlock , stride , 1 , & c , mode )"		168632	0					
ANR	170461	Callee	RENAME ( do_a_deblock )		168632	0					
ANR	170462	CallExpression	RENAME ( do_a_deblock )		168632	0					
ANR	170463	Callee	RENAME		168632	0					
ANR	170464	Identifier	RENAME		168632	0					
ANR	170465	ArgumentList	do_a_deblock		168632	1					
ANR	170466	Argument	do_a_deblock		168632	0					
ANR	170467	Identifier	do_a_deblock		168632	0					
ANR	170468	ArgumentList	dstBlock		168632	1					
ANR	170469	Argument	dstBlock		168632	0					
ANR	170470	Identifier	dstBlock		168632	0					
ANR	170471	Argument	stride		168632	1					
ANR	170472	Identifier	stride		168632	0					
ANR	170473	Argument	1		168632	2					
ANR	170474	PrimaryExpression	1		168632	0					
ANR	170475	Argument	& c		168632	3					
ANR	170476	UnaryOperationExpression	& c		168632	0					
ANR	170477	UnaryOperator	&		168632	0					
ANR	170478	Identifier	c		168632	1					
ANR	170479	Argument	mode		168632	4					
ANR	170480	Identifier	mode		168632	0					
ANR	170481	ExpressionStatement	"RENAME ( transpose1 ) ( tempBlock1 , tempBlock2 , dstBlock , dstStride )"	665:12:14178:14241	168632	122	True				
ANR	170482	CallExpression	"RENAME ( transpose1 ) ( tempBlock1 , tempBlock2 , dstBlock , dstStride )"		168632	0					
ANR	170483	Callee	RENAME ( transpose1 )		168632	0					
ANR	170484	CallExpression	RENAME ( transpose1 )		168632	0					
ANR	170485	Callee	RENAME		168632	0					
ANR	170486	Identifier	RENAME		168632	0					
ANR	170487	ArgumentList	transpose1		168632	1					
ANR	170488	Argument	transpose1		168632	0					
ANR	170489	Identifier	transpose1		168632	0					
ANR	170490	ArgumentList	tempBlock1		168632	1					
ANR	170491	Argument	tempBlock1		168632	0					
ANR	170492	Identifier	tempBlock1		168632	0					
ANR	170493	Argument	tempBlock2		168632	1					
ANR	170494	Identifier	tempBlock2		168632	0					
ANR	170495	Argument	dstBlock		168632	2					
ANR	170496	Identifier	dstBlock		168632	0					
ANR	170497	Argument	dstStride		168632	3					
ANR	170498	Identifier	dstStride		168632	0					
ANR	170499	IfStatement	if ( x - 8 >= 0 )		168632	123					
ANR	170500	Condition	x - 8 >= 0	671:15:14348:14357	168632	0	True				
ANR	170501	RelationalExpression	x - 8 >= 0		168632	0		>=			
ANR	170502	AdditiveExpression	x - 8		168632	0		-			
ANR	170503	Identifier	x		168632	0					
ANR	170504	PrimaryExpression	8		168632	1					
ANR	170505	PrimaryExpression	0		168632	1					
ANR	170506	CompoundStatement		667:26:14137:14137	168632	1					
ANR	170507	IfStatement	if ( mode & H_X1_FILTER )		168632	0					
ANR	170508	Condition	mode & H_X1_FILTER	675:19:14402:14419	168632	0	True				
ANR	170509	BitAndExpression	mode & H_X1_FILTER		168632	0		&			
ANR	170510	Identifier	mode		168632	0					
ANR	170511	Identifier	H_X1_FILTER		168632	1					
ANR	170512	ExpressionStatement	"RENAME ( vertX1Filter ) ( tempBlock1 , 16 , & c )"	677:24:14447:14487	168632	1	True				
ANR	170513	CallExpression	"RENAME ( vertX1Filter ) ( tempBlock1 , 16 , & c )"		168632	0					
ANR	170514	Callee	RENAME ( vertX1Filter )		168632	0					
ANR	170515	CallExpression	RENAME ( vertX1Filter )		168632	0					
ANR	170516	Callee	RENAME		168632	0					
ANR	170517	Identifier	RENAME		168632	0					
ANR	170518	ArgumentList	vertX1Filter		168632	1					
ANR	170519	Argument	vertX1Filter		168632	0					
ANR	170520	Identifier	vertX1Filter		168632	0					
ANR	170521	ArgumentList	tempBlock1		168632	1					
ANR	170522	Argument	tempBlock1		168632	0					
ANR	170523	Identifier	tempBlock1		168632	0					
ANR	170524	Argument	16		168632	1					
ANR	170525	PrimaryExpression	16		168632	0					
ANR	170526	Argument	& c		168632	2					
ANR	170527	UnaryOperationExpression	& c		168632	0					
ANR	170528	UnaryOperator	&		168632	0					
ANR	170529	Identifier	c		168632	1					
ANR	170530	ElseStatement	else		168632	0					
ANR	170531	IfStatement	if ( mode & H_DEBLOCK )		168632	0					
ANR	170532	Condition	mode & H_DEBLOCK	679:24:14514:14529	168632	0	True				
ANR	170533	BitAndExpression	mode & H_DEBLOCK		168632	0		&			
ANR	170534	Identifier	mode		168632	0					
ANR	170535	Identifier	H_DEBLOCK		168632	1					
ANR	170536	CompoundStatement		679:20:14347:14400	168632	1					
ANR	170537	IdentifierDeclStatement	"const int t = RENAME ( vertClassify ) ( tempBlock1 , 16 , & c ) ;"	683:20:14569:14622	168632	0	True				
ANR	170538	IdentifierDecl	"t = RENAME ( vertClassify ) ( tempBlock1 , 16 , & c )"		168632	0					
ANR	170539	IdentifierDeclType	const int		168632	0					
ANR	170540	Identifier	t		168632	1					
ANR	170541	AssignmentExpression	"t = RENAME ( vertClassify ) ( tempBlock1 , 16 , & c )"		168632	2		=			
ANR	170542	Identifier	t		168632	0					
ANR	170543	CallExpression	"RENAME ( vertClassify ) ( tempBlock1 , 16 , & c )"		168632	1					
ANR	170544	Callee	RENAME ( vertClassify )		168632	0					
ANR	170545	CallExpression	RENAME ( vertClassify )		168632	0					
ANR	170546	Callee	RENAME		168632	0					
ANR	170547	Identifier	RENAME		168632	0					
ANR	170548	ArgumentList	vertClassify		168632	1					
ANR	170549	Argument	vertClassify		168632	0					
ANR	170550	Identifier	vertClassify		168632	0					
ANR	170551	ArgumentList	tempBlock1		168632	1					
ANR	170552	Argument	tempBlock1		168632	0					
ANR	170553	Identifier	tempBlock1		168632	0					
ANR	170554	Argument	16		168632	1					
ANR	170555	PrimaryExpression	16		168632	0					
ANR	170556	Argument	& c		168632	2					
ANR	170557	UnaryOperationExpression	& c		168632	0					
ANR	170558	UnaryOperator	&		168632	0					
ANR	170559	Identifier	c		168632	1					
ANR	170560	IfStatement	if ( t == 1 )		168632	1					
ANR	170561	Condition	t == 1	687:23:14677:14680	168632	0	True				
ANR	170562	EqualityExpression	t == 1		168632	0		==			
ANR	170563	Identifier	t		168632	0					
ANR	170564	PrimaryExpression	1		168632	1					
ANR	170565	ExpressionStatement	"RENAME ( doVertLowPass ) ( tempBlock1 , 16 , & c )"	689:24:14708:14749	168632	1	True				
ANR	170566	CallExpression	"RENAME ( doVertLowPass ) ( tempBlock1 , 16 , & c )"		168632	0					
ANR	170567	Callee	RENAME ( doVertLowPass )		168632	0					
ANR	170568	CallExpression	RENAME ( doVertLowPass )		168632	0					
ANR	170569	Callee	RENAME		168632	0					
ANR	170570	Identifier	RENAME		168632	0					
ANR	170571	ArgumentList	doVertLowPass		168632	1					
ANR	170572	Argument	doVertLowPass		168632	0					
ANR	170573	Identifier	doVertLowPass		168632	0					
ANR	170574	ArgumentList	tempBlock1		168632	1					
ANR	170575	Argument	tempBlock1		168632	0					
ANR	170576	Identifier	tempBlock1		168632	0					
ANR	170577	Argument	16		168632	1					
ANR	170578	PrimaryExpression	16		168632	0					
ANR	170579	Argument	& c		168632	2					
ANR	170580	UnaryOperationExpression	& c		168632	0					
ANR	170581	UnaryOperator	&		168632	0					
ANR	170582	Identifier	c		168632	1					
ANR	170583	ElseStatement	else		168632	0					
ANR	170584	IfStatement	if ( t == 2 )		168632	0					
ANR	170585	Condition	t == 2	691:28:14780:14783	168632	0	True				
ANR	170586	EqualityExpression	t == 2		168632	0		==			
ANR	170587	Identifier	t		168632	0					
ANR	170588	PrimaryExpression	2		168632	1					
ANR	170589	ExpressionStatement	"RENAME ( doVertDefFilter ) ( tempBlock1 , 16 , & c )"	693:24:14811:14854	168632	1	True				
ANR	170590	CallExpression	"RENAME ( doVertDefFilter ) ( tempBlock1 , 16 , & c )"		168632	0					
ANR	170591	Callee	RENAME ( doVertDefFilter )		168632	0					
ANR	170592	CallExpression	RENAME ( doVertDefFilter )		168632	0					
ANR	170593	Callee	RENAME		168632	0					
ANR	170594	Identifier	RENAME		168632	0					
ANR	170595	ArgumentList	doVertDefFilter		168632	1					
ANR	170596	Argument	doVertDefFilter		168632	0					
ANR	170597	Identifier	doVertDefFilter		168632	0					
ANR	170598	ArgumentList	tempBlock1		168632	1					
ANR	170599	Argument	tempBlock1		168632	0					
ANR	170600	Identifier	tempBlock1		168632	0					
ANR	170601	Argument	16		168632	1					
ANR	170602	PrimaryExpression	16		168632	0					
ANR	170603	Argument	& c		168632	2					
ANR	170604	UnaryOperationExpression	& c		168632	0					
ANR	170605	UnaryOperator	&		168632	0					
ANR	170606	Identifier	c		168632	1					
ANR	170607	ElseStatement	else		168632	0					
ANR	170608	IfStatement	if ( mode & H_A_DEBLOCK )		168632	0					
ANR	170609	Condition	mode & H_A_DEBLOCK	695:25:14882:14899	168632	0	True				
ANR	170610	BitAndExpression	mode & H_A_DEBLOCK		168632	0		&			
ANR	170611	Identifier	mode		168632	0					
ANR	170612	Identifier	H_A_DEBLOCK		168632	1					
ANR	170613	CompoundStatement		691:44:14679:14679	168632	1					
ANR	170614	ExpressionStatement	"RENAME ( do_a_deblock ) ( tempBlock1 , 16 , 1 , & c , mode )"	697:24:14928:14977	168632	0	True				
ANR	170615	CallExpression	"RENAME ( do_a_deblock ) ( tempBlock1 , 16 , 1 , & c , mode )"		168632	0					
ANR	170616	Callee	RENAME ( do_a_deblock )		168632	0					
ANR	170617	CallExpression	RENAME ( do_a_deblock )		168632	0					
ANR	170618	Callee	RENAME		168632	0					
ANR	170619	Identifier	RENAME		168632	0					
ANR	170620	ArgumentList	do_a_deblock		168632	1					
ANR	170621	Argument	do_a_deblock		168632	0					
ANR	170622	Identifier	do_a_deblock		168632	0					
ANR	170623	ArgumentList	tempBlock1		168632	1					
ANR	170624	Argument	tempBlock1		168632	0					
ANR	170625	Identifier	tempBlock1		168632	0					
ANR	170626	Argument	16		168632	1					
ANR	170627	PrimaryExpression	16		168632	0					
ANR	170628	Argument	1		168632	2					
ANR	170629	PrimaryExpression	1		168632	0					
ANR	170630	Argument	& c		168632	3					
ANR	170631	UnaryOperationExpression	& c		168632	0					
ANR	170632	UnaryOperator	&		168632	0					
ANR	170633	Identifier	c		168632	1					
ANR	170634	Argument	mode		168632	4					
ANR	170635	Identifier	mode		168632	0					
ANR	170636	ExpressionStatement	"RENAME ( transpose2 ) ( dstBlock - 4 , dstStride , tempBlock1 + 4 * 16 )"	703:16:15017:15077	168632	1	True				
ANR	170637	CallExpression	"RENAME ( transpose2 ) ( dstBlock - 4 , dstStride , tempBlock1 + 4 * 16 )"		168632	0					
ANR	170638	Callee	RENAME ( transpose2 )		168632	0					
ANR	170639	CallExpression	RENAME ( transpose2 )		168632	0					
ANR	170640	Callee	RENAME		168632	0					
ANR	170641	Identifier	RENAME		168632	0					
ANR	170642	ArgumentList	transpose2		168632	1					
ANR	170643	Argument	transpose2		168632	0					
ANR	170644	Identifier	transpose2		168632	0					
ANR	170645	ArgumentList	dstBlock - 4		168632	1					
ANR	170646	Argument	dstBlock - 4		168632	0					
ANR	170647	AdditiveExpression	dstBlock - 4		168632	0		-			
ANR	170648	Identifier	dstBlock		168632	0					
ANR	170649	PrimaryExpression	4		168632	1					
ANR	170650	Argument	dstStride		168632	1					
ANR	170651	Identifier	dstStride		168632	0					
ANR	170652	Argument	tempBlock1 + 4 * 16		168632	2					
ANR	170653	AdditiveExpression	tempBlock1 + 4 * 16		168632	0		+			
ANR	170654	Identifier	tempBlock1		168632	0					
ANR	170655	MultiplicativeExpression	4 * 16		168632	1		*			
ANR	170656	PrimaryExpression	4		168632	0					
ANR	170657	PrimaryExpression	16		168632	1					
ANR	170658	IfStatement	if ( mode & DERING )		168632	2					
ANR	170659	Condition	mode & DERING	767:19:16506:16518	168632	0	True				
ANR	170660	BitAndExpression	mode & DERING		168632	0		&			
ANR	170661	Identifier	mode		168632	0					
ANR	170662	Identifier	DERING		168632	1					
ANR	170663	CompoundStatement		763:33:16298:16298	168632	1					
ANR	170664	IfStatement	if ( y > 0 )		168632	0					
ANR	170665	Condition	y > 0	771:23:16589:16591	168632	0	True				
ANR	170666	RelationalExpression	y > 0		168632	0		>			
ANR	170667	Identifier	y		168632	0					
ANR	170668	PrimaryExpression	0		168632	1					
ANR	170669	ExpressionStatement	"RENAME ( dering ) ( dstBlock - stride - 8 , stride , & c )"	771:28:16594:16643	168632	1	True				
ANR	170670	CallExpression	"RENAME ( dering ) ( dstBlock - stride - 8 , stride , & c )"		168632	0					
ANR	170671	Callee	RENAME ( dering )		168632	0					
ANR	170672	CallExpression	RENAME ( dering )		168632	0					
ANR	170673	Callee	RENAME		168632	0					
ANR	170674	Identifier	RENAME		168632	0					
ANR	170675	ArgumentList	dering		168632	1					
ANR	170676	Argument	dering		168632	0					
ANR	170677	Identifier	dering		168632	0					
ANR	170678	ArgumentList	dstBlock - stride - 8		168632	1					
ANR	170679	Argument	dstBlock - stride - 8		168632	0					
ANR	170680	AdditiveExpression	dstBlock - stride - 8		168632	0		-			
ANR	170681	Identifier	dstBlock		168632	0					
ANR	170682	AdditiveExpression	stride - 8		168632	1		-			
ANR	170683	Identifier	stride		168632	0					
ANR	170684	PrimaryExpression	8		168632	1					
ANR	170685	Argument	stride		168632	1					
ANR	170686	Identifier	stride		168632	0					
ANR	170687	Argument	& c		168632	2					
ANR	170688	UnaryOperationExpression	& c		168632	0					
ANR	170689	UnaryOperator	&		168632	0					
ANR	170690	Identifier	c		168632	1					
ANR	170691	IfStatement	if ( mode & TEMP_NOISE_FILTER )		168632	3					
ANR	170692	Condition	mode & TEMP_NOISE_FILTER	777:19:16686:16709	168632	0	True				
ANR	170693	BitAndExpression	mode & TEMP_NOISE_FILTER		168632	0		&			
ANR	170694	Identifier	mode		168632	0					
ANR	170695	Identifier	TEMP_NOISE_FILTER		168632	1					
ANR	170696	CompoundStatement		775:16:16507:16507	168632	1					
ANR	170697	ExpressionStatement	"RENAME ( tempNoiseReducer ) ( dstBlock - 8 , stride , c . tempBlurred [ isColor ] + y * dstStride + x , c . tempBlurredPast [ isColor ] + ( y >> 3 ) * 256 + ( x >> 3 ) + 256 , c . ppMode . maxTmpNoise )"	781:20:16752:17003	168632	0	True				
ANR	170698	CallExpression	"RENAME ( tempNoiseReducer ) ( dstBlock - 8 , stride , c . tempBlurred [ isColor ] + y * dstStride + x , c . tempBlurredPast [ isColor ] + ( y >> 3 ) * 256 + ( x >> 3 ) + 256 , c . ppMode . maxTmpNoise )"		168632	0					
ANR	170699	Callee	RENAME ( tempNoiseReducer )		168632	0					
ANR	170700	CallExpression	RENAME ( tempNoiseReducer )		168632	0					
ANR	170701	Callee	RENAME		168632	0					
ANR	170702	Identifier	RENAME		168632	0					
ANR	170703	ArgumentList	tempNoiseReducer		168632	1					
ANR	170704	Argument	tempNoiseReducer		168632	0					
ANR	170705	Identifier	tempNoiseReducer		168632	0					
ANR	170706	ArgumentList	dstBlock - 8		168632	1					
ANR	170707	Argument	dstBlock - 8		168632	0					
ANR	170708	AdditiveExpression	dstBlock - 8		168632	0		-			
ANR	170709	Identifier	dstBlock		168632	0					
ANR	170710	PrimaryExpression	8		168632	1					
ANR	170711	Argument	stride		168632	1					
ANR	170712	Identifier	stride		168632	0					
ANR	170713	Argument	c . tempBlurred [ isColor ] + y * dstStride + x		168632	2					
ANR	170714	AdditiveExpression	c . tempBlurred [ isColor ] + y * dstStride + x		168632	0		+			
ANR	170715	ArrayIndexing	c . tempBlurred [ isColor ]		168632	0					
ANR	170716	MemberAccess	c . tempBlurred		168632	0					
ANR	170717	Identifier	c		168632	0					
ANR	170718	Identifier	tempBlurred		168632	1					
ANR	170719	Identifier	isColor		168632	1					
ANR	170720	AdditiveExpression	y * dstStride + x		168632	1		+			
ANR	170721	MultiplicativeExpression	y * dstStride		168632	0		*			
ANR	170722	Identifier	y		168632	0					
ANR	170723	Identifier	dstStride		168632	1					
ANR	170724	Identifier	x		168632	1					
ANR	170725	Argument	c . tempBlurredPast [ isColor ] + ( y >> 3 ) * 256 + ( x >> 3 ) + 256		168632	3					
ANR	170726	AdditiveExpression	c . tempBlurredPast [ isColor ] + ( y >> 3 ) * 256 + ( x >> 3 ) + 256		168632	0		+			
ANR	170727	ArrayIndexing	c . tempBlurredPast [ isColor ]		168632	0					
ANR	170728	MemberAccess	c . tempBlurredPast		168632	0					
ANR	170729	Identifier	c		168632	0					
ANR	170730	Identifier	tempBlurredPast		168632	1					
ANR	170731	Identifier	isColor		168632	1					
ANR	170732	AdditiveExpression	( y >> 3 ) * 256 + ( x >> 3 ) + 256		168632	1		+			
ANR	170733	MultiplicativeExpression	( y >> 3 ) * 256		168632	0		*			
ANR	170734	ShiftExpression	y >> 3		168632	0		>>			
ANR	170735	Identifier	y		168632	0					
ANR	170736	PrimaryExpression	3		168632	1					
ANR	170737	PrimaryExpression	256		168632	1					
ANR	170738	AdditiveExpression	( x >> 3 ) + 256		168632	1		+			
ANR	170739	ShiftExpression	x >> 3		168632	0		>>			
ANR	170740	Identifier	x		168632	0					
ANR	170741	PrimaryExpression	3		168632	1					
ANR	170742	PrimaryExpression	256		168632	1					
ANR	170743	Argument	c . ppMode . maxTmpNoise		168632	4					
ANR	170744	MemberAccess	c . ppMode . maxTmpNoise		168632	0					
ANR	170745	MemberAccess	c . ppMode		168632	0					
ANR	170746	Identifier	c		168632	0					
ANR	170747	Identifier	ppMode		168632	1					
ANR	170748	Identifier	maxTmpNoise		168632	1					
ANR	170749	ExpressionStatement	dstBlock += 8	795:12:17054:17065	168632	124	True				
ANR	170750	AssignmentExpression	dstBlock += 8		168632	0		+=			
ANR	170751	Identifier	dstBlock		168632	0					
ANR	170752	PrimaryExpression	8		168632	1					
ANR	170753	ExpressionStatement	srcBlock += 8	797:12:17080:17091	168632	125	True				
ANR	170754	AssignmentExpression	srcBlock += 8		168632	0		+=			
ANR	170755	Identifier	srcBlock		168632	0					
ANR	170756	PrimaryExpression	8		168632	1					
ANR	170757	ExpressionStatement	tmpXchg = tempBlock1	803:12:17129:17148	168632	126	True				
ANR	170758	AssignmentExpression	tmpXchg = tempBlock1		168632	0		=			
ANR	170759	Identifier	tmpXchg		168632	0					
ANR	170760	Identifier	tempBlock1		168632	1					
ANR	170761	ExpressionStatement	tempBlock1 = tempBlock2	805:12:17163:17185	168632	127	True				
ANR	170762	AssignmentExpression	tempBlock1 = tempBlock2		168632	0		=			
ANR	170763	Identifier	tempBlock1		168632	0					
ANR	170764	Identifier	tempBlock2		168632	1					
ANR	170765	ExpressionStatement	tempBlock2 = tmpXchg	807:12:17200:17220	168632	128	True				
ANR	170766	AssignmentExpression	tempBlock2 = tmpXchg		168632	0		=			
ANR	170767	Identifier	tempBlock2		168632	0					
ANR	170768	Identifier	tmpXchg		168632	1					
ANR	170769	IfStatement	if ( mode & DERING )		168632	9					
ANR	170770	Condition	mode & DERING	815:11:17255:17267	168632	0	True				
ANR	170771	BitAndExpression	mode & DERING		168632	0		&			
ANR	170772	Identifier	mode		168632	0					
ANR	170773	Identifier	DERING		168632	1					
ANR	170774	CompoundStatement		811:25:17047:17047	168632	1					
ANR	170775	IfStatement	if ( y > 0 )		168632	0					
ANR	170776	Condition	y > 0	817:15:17287:17291	168632	0	True				
ANR	170777	RelationalExpression	y > 0		168632	0		>			
ANR	170778	Identifier	y		168632	0					
ANR	170779	PrimaryExpression	0		168632	1					
ANR	170780	ExpressionStatement	"RENAME ( dering ) ( dstBlock - dstStride - 8 , dstStride , & c )"	817:22:17294:17349	168632	1	True				
ANR	170781	CallExpression	"RENAME ( dering ) ( dstBlock - dstStride - 8 , dstStride , & c )"		168632	0					
ANR	170782	Callee	RENAME ( dering )		168632	0					
ANR	170783	CallExpression	RENAME ( dering )		168632	0					
ANR	170784	Callee	RENAME		168632	0					
ANR	170785	Identifier	RENAME		168632	0					
ANR	170786	ArgumentList	dering		168632	1					
ANR	170787	Argument	dering		168632	0					
ANR	170788	Identifier	dering		168632	0					
ANR	170789	ArgumentList	dstBlock - dstStride - 8		168632	1					
ANR	170790	Argument	dstBlock - dstStride - 8		168632	0					
ANR	170791	AdditiveExpression	dstBlock - dstStride - 8		168632	0		-			
ANR	170792	Identifier	dstBlock		168632	0					
ANR	170793	AdditiveExpression	dstStride - 8		168632	1		-			
ANR	170794	Identifier	dstStride		168632	0					
ANR	170795	PrimaryExpression	8		168632	1					
ANR	170796	Argument	dstStride		168632	1					
ANR	170797	Identifier	dstStride		168632	0					
ANR	170798	Argument	& c		168632	2					
ANR	170799	UnaryOperationExpression	& c		168632	0					
ANR	170800	UnaryOperator	&		168632	0					
ANR	170801	Identifier	c		168632	1					
ANR	170802	IfStatement	if ( ( mode & TEMP_NOISE_FILTER ) )		168632	10					
ANR	170803	Condition	mode & TEMP_NOISE_FILTER	823:11:17376:17401	168632	0	True				
ANR	170804	BitAndExpression	mode & TEMP_NOISE_FILTER		168632	0		&			
ANR	170805	Identifier	mode		168632	0					
ANR	170806	Identifier	TEMP_NOISE_FILTER		168632	1					
ANR	170807	CompoundStatement		819:38:17181:17181	168632	1					
ANR	170808	ExpressionStatement	"RENAME ( tempNoiseReducer ) ( dstBlock - 8 , dstStride , c . tempBlurred [ isColor ] + y * dstStride + x , c . tempBlurredPast [ isColor ] + ( y >> 3 ) * 256 + ( x >> 3 ) + 256 , c . ppMode . maxTmpNoise )"	825:12:17418:17648	168632	0	True				
ANR	170809	CallExpression	"RENAME ( tempNoiseReducer ) ( dstBlock - 8 , dstStride , c . tempBlurred [ isColor ] + y * dstStride + x , c . tempBlurredPast [ isColor ] + ( y >> 3 ) * 256 + ( x >> 3 ) + 256 , c . ppMode . maxTmpNoise )"		168632	0					
ANR	170810	Callee	RENAME ( tempNoiseReducer )		168632	0					
ANR	170811	CallExpression	RENAME ( tempNoiseReducer )		168632	0					
ANR	170812	Callee	RENAME		168632	0					
ANR	170813	Identifier	RENAME		168632	0					
ANR	170814	ArgumentList	tempNoiseReducer		168632	1					
ANR	170815	Argument	tempNoiseReducer		168632	0					
ANR	170816	Identifier	tempNoiseReducer		168632	0					
ANR	170817	ArgumentList	dstBlock - 8		168632	1					
ANR	170818	Argument	dstBlock - 8		168632	0					
ANR	170819	AdditiveExpression	dstBlock - 8		168632	0		-			
ANR	170820	Identifier	dstBlock		168632	0					
ANR	170821	PrimaryExpression	8		168632	1					
ANR	170822	Argument	dstStride		168632	1					
ANR	170823	Identifier	dstStride		168632	0					
ANR	170824	Argument	c . tempBlurred [ isColor ] + y * dstStride + x		168632	2					
ANR	170825	AdditiveExpression	c . tempBlurred [ isColor ] + y * dstStride + x		168632	0		+			
ANR	170826	ArrayIndexing	c . tempBlurred [ isColor ]		168632	0					
ANR	170827	MemberAccess	c . tempBlurred		168632	0					
ANR	170828	Identifier	c		168632	0					
ANR	170829	Identifier	tempBlurred		168632	1					
ANR	170830	Identifier	isColor		168632	1					
ANR	170831	AdditiveExpression	y * dstStride + x		168632	1		+			
ANR	170832	MultiplicativeExpression	y * dstStride		168632	0		*			
ANR	170833	Identifier	y		168632	0					
ANR	170834	Identifier	dstStride		168632	1					
ANR	170835	Identifier	x		168632	1					
ANR	170836	Argument	c . tempBlurredPast [ isColor ] + ( y >> 3 ) * 256 + ( x >> 3 ) + 256		168632	3					
ANR	170837	AdditiveExpression	c . tempBlurredPast [ isColor ] + ( y >> 3 ) * 256 + ( x >> 3 ) + 256		168632	0		+			
ANR	170838	ArrayIndexing	c . tempBlurredPast [ isColor ]		168632	0					
ANR	170839	MemberAccess	c . tempBlurredPast		168632	0					
ANR	170840	Identifier	c		168632	0					
ANR	170841	Identifier	tempBlurredPast		168632	1					
ANR	170842	Identifier	isColor		168632	1					
ANR	170843	AdditiveExpression	( y >> 3 ) * 256 + ( x >> 3 ) + 256		168632	1		+			
ANR	170844	MultiplicativeExpression	( y >> 3 ) * 256		168632	0		*			
ANR	170845	ShiftExpression	y >> 3		168632	0		>>			
ANR	170846	Identifier	y		168632	0					
ANR	170847	PrimaryExpression	3		168632	1					
ANR	170848	PrimaryExpression	256		168632	1					
ANR	170849	AdditiveExpression	( x >> 3 ) + 256		168632	1		+			
ANR	170850	ShiftExpression	x >> 3		168632	0		>>			
ANR	170851	Identifier	x		168632	0					
ANR	170852	PrimaryExpression	3		168632	1					
ANR	170853	PrimaryExpression	256		168632	1					
ANR	170854	Argument	c . ppMode . maxTmpNoise		168632	4					
ANR	170855	MemberAccess	c . ppMode . maxTmpNoise		168632	0					
ANR	170856	MemberAccess	c . ppMode		168632	0					
ANR	170857	Identifier	c		168632	0					
ANR	170858	Identifier	ppMode		168632	1					
ANR	170859	Identifier	maxTmpNoise		168632	1					
ANR	170860	IfStatement	if ( y + 15 >= height )		168632	11					
ANR	170861	Condition	y + 15 >= height	839:11:17732:17745	168632	0	True				
ANR	170862	RelationalExpression	y + 15 >= height		168632	0		>=			
ANR	170863	AdditiveExpression	y + 15		168632	0		+			
ANR	170864	Identifier	y		168632	0					
ANR	170865	PrimaryExpression	15		168632	1					
ANR	170866	Identifier	height		168632	1					
ANR	170867	CompoundStatement		837:12:17540:17578	168632	1					
ANR	170868	IdentifierDeclStatement	uint8_t * dstBlock = & ( dst [ y * dstStride ] ) ;	841:12:17762:17800	168632	0	True				
ANR	170869	IdentifierDecl	* dstBlock = & ( dst [ y * dstStride ] )		168632	0					
ANR	170870	IdentifierDeclType	uint8_t *		168632	0					
ANR	170871	Identifier	dstBlock		168632	1					
ANR	170872	AssignmentExpression	* dstBlock = & ( dst [ y * dstStride ] )		168632	2		=			
ANR	170873	Identifier	dstBlock		168632	0					
ANR	170874	UnaryOperationExpression	& ( dst [ y * dstStride ] )		168632	1					
ANR	170875	UnaryOperator	&		168632	0					
ANR	170876	ArrayIndexing	dst [ y * dstStride ]		168632	1					
ANR	170877	Identifier	dst		168632	0					
ANR	170878	MultiplicativeExpression	y * dstStride		168632	1		*			
ANR	170879	Identifier	y		168632	0					
ANR	170880	Identifier	dstStride		168632	1					
ANR	170881	IfStatement	if ( width == FFABS ( dstStride ) )		168632	1					
ANR	170882	Condition	width == FFABS ( dstStride )	843:15:17818:17840	168632	0	True				
ANR	170883	EqualityExpression	width == FFABS ( dstStride )		168632	0		==			
ANR	170884	Identifier	width		168632	0					
ANR	170885	CallExpression	FFABS ( dstStride )		168632	1					
ANR	170886	Callee	FFABS		168632	0					
ANR	170887	Identifier	FFABS		168632	0					
ANR	170888	ArgumentList	dstStride		168632	1					
ANR	170889	Argument	dstStride		168632	0					
ANR	170890	Identifier	dstStride		168632	0					
ANR	170891	ExpressionStatement	"linecpy ( dstBlock , tempDst + dstStride , height - y , dstStride )"	845:16:17860:17919	168632	1	True				
ANR	170892	CallExpression	"linecpy ( dstBlock , tempDst + dstStride , height - y , dstStride )"		168632	0					
ANR	170893	Callee	linecpy		168632	0					
ANR	170894	Identifier	linecpy		168632	0					
ANR	170895	ArgumentList	dstBlock		168632	1					
ANR	170896	Argument	dstBlock		168632	0					
ANR	170897	Identifier	dstBlock		168632	0					
ANR	170898	Argument	tempDst + dstStride		168632	1					
ANR	170899	AdditiveExpression	tempDst + dstStride		168632	0		+			
ANR	170900	Identifier	tempDst		168632	0					
ANR	170901	Identifier	dstStride		168632	1					
ANR	170902	Argument	height - y		168632	2					
ANR	170903	AdditiveExpression	height - y		168632	0		-			
ANR	170904	Identifier	height		168632	0					
ANR	170905	Identifier	y		168632	1					
ANR	170906	Argument	dstStride		168632	3					
ANR	170907	Identifier	dstStride		168632	0					
ANR	170908	ElseStatement	else		168632	0					
ANR	170909	CompoundStatement		845:16:17735:17740	168632	0					
ANR	170910	IdentifierDeclStatement	int i ;	849:16:17957:17962	168632	0	True				
ANR	170911	IdentifierDecl	i		168632	0					
ANR	170912	IdentifierDeclType	int		168632	0					
ANR	170913	Identifier	i		168632	1					
ANR	170914	ForStatement	for ( i = 0 ; i < height - y ; i ++ )		168632	1					
ANR	170915	ForInit	i = 0 ;	851:20:17985:17988	168632	0	True				
ANR	170916	AssignmentExpression	i = 0		168632	0		=			
ANR	170917	Identifier	i		168632	0					
ANR	170918	PrimaryExpression	0		168632	1					
ANR	170919	Condition	i < height - y	851:25:17990:17999	168632	1	True				
ANR	170920	RelationalExpression	i < height - y		168632	0		<			
ANR	170921	Identifier	i		168632	0					
ANR	170922	AdditiveExpression	height - y		168632	1		-			
ANR	170923	Identifier	height		168632	0					
ANR	170924	Identifier	y		168632	1					
ANR	170925	PostIncDecOperationExpression	i ++	851:37:18002:18004	168632	2	True				
ANR	170926	Identifier	i		168632	0					
ANR	170927	IncDec	++		168632	1					
ANR	170928	CompoundStatement		847:41:17784:17784	168632	3					
ANR	170929	ExpressionStatement	"memcpy ( dstBlock + i * dstStride , tempDst + ( i + 1 ) * dstStride , width )"	853:20:18029:18093	168632	0	True				
ANR	170930	CallExpression	"memcpy ( dstBlock + i * dstStride , tempDst + ( i + 1 ) * dstStride , width )"		168632	0					
ANR	170931	Callee	memcpy		168632	0					
ANR	170932	Identifier	memcpy		168632	0					
ANR	170933	ArgumentList	dstBlock + i * dstStride		168632	1					
ANR	170934	Argument	dstBlock + i * dstStride		168632	0					
ANR	170935	AdditiveExpression	dstBlock + i * dstStride		168632	0		+			
ANR	170936	Identifier	dstBlock		168632	0					
ANR	170937	MultiplicativeExpression	i * dstStride		168632	1		*			
ANR	170938	Identifier	i		168632	0					
ANR	170939	Identifier	dstStride		168632	1					
ANR	170940	Argument	tempDst + ( i + 1 ) * dstStride		168632	1					
ANR	170941	AdditiveExpression	tempDst + ( i + 1 ) * dstStride		168632	0		+			
ANR	170942	Identifier	tempDst		168632	0					
ANR	170943	MultiplicativeExpression	( i + 1 ) * dstStride		168632	1		*			
ANR	170944	AdditiveExpression	i + 1		168632	0		+			
ANR	170945	Identifier	i		168632	0					
ANR	170946	PrimaryExpression	1		168632	1					
ANR	170947	Identifier	dstStride		168632	1					
ANR	170948	Argument	width		168632	2					
ANR	170949	Identifier	width		168632	0					
ANR	170950	Statement	__asm__	883:4:18597:18603	168632	29	True				
ANR	170951	Statement	volatile	883:12:18605:18612	168632	30	True				
ANR	170952	ExpressionStatement	"""femms"""	883:20:18613:18622	168632	31	True				
ANR	170953	PrimaryExpression	"""femms"""		168632	0					
ANR	170954	IfStatement	if ( ! isColor )		168632	32					
ANR	170955	Condition	! isColor	895:7:18721:18728	168632	0	True				
ANR	170956	UnaryOperationExpression	! isColor		168632	0					
ANR	170957	UnaryOperator	!		168632	0					
ANR	170958	Identifier	isColor		168632	1					
ANR	170959	CompoundStatement		895:8:18539:18544	168632	1					
ANR	170960	IdentifierDeclStatement	int max = 1 ;	897:8:18741:18750	168632	0	True				
ANR	170961	IdentifierDecl	max = 1		168632	0					
ANR	170962	IdentifierDeclType	int		168632	0					
ANR	170963	Identifier	max		168632	1					
ANR	170964	AssignmentExpression	max = 1		168632	2		=			
ANR	170965	Identifier	max		168632	0					
ANR	170966	PrimaryExpression	1		168632	1					
ANR	170967	IdentifierDeclStatement	int i ;	899:8:18761:18766	168632	1	True				
ANR	170968	IdentifierDecl	i		168632	0					
ANR	170969	IdentifierDeclType	int		168632	0					
ANR	170970	Identifier	i		168632	1					
ANR	170971	ForStatement	for ( i = 0 ; i < 256 ; i ++ )		168632	2					
ANR	170972	ForInit	i = 0 ;	901:12:18781:18784	168632	0	True				
ANR	170973	AssignmentExpression	i = 0		168632	0		=			
ANR	170974	Identifier	i		168632	0					
ANR	170975	PrimaryExpression	0		168632	1					
ANR	170976	Condition	i < 256	901:17:18786:18790	168632	1	True				
ANR	170977	RelationalExpression	i < 256		168632	0		<			
ANR	170978	Identifier	i		168632	0					
ANR	170979	PrimaryExpression	256		168632	1					
ANR	170980	PostIncDecOperationExpression	i ++	901:24:18793:18795	168632	2	True				
ANR	170981	Identifier	i		168632	0					
ANR	170982	IncDec	++		168632	1					
ANR	170983	IfStatement	if ( yHistogram [ i ] > max )		168632	3					
ANR	170984	Condition	yHistogram [ i ] > max	903:15:18814:18832	168632	0	True				
ANR	170985	RelationalExpression	yHistogram [ i ] > max		168632	0		>			
ANR	170986	ArrayIndexing	yHistogram [ i ]		168632	0					
ANR	170987	Identifier	yHistogram		168632	0					
ANR	170988	Identifier	i		168632	1					
ANR	170989	Identifier	max		168632	1					
ANR	170990	ExpressionStatement	max = yHistogram [ i ]	903:36:18835:18852	168632	1	True				
ANR	170991	AssignmentExpression	max = yHistogram [ i ]		168632	0		=			
ANR	170992	Identifier	max		168632	0					
ANR	170993	ArrayIndexing	yHistogram [ i ]		168632	1					
ANR	170994	Identifier	yHistogram		168632	0					
ANR	170995	Identifier	i		168632	1					
ANR	170996	ForStatement	for ( i = 1 ; i < 256 ; i ++ )		168632	3					
ANR	170997	ForInit	i = 1 ;	907:12:18869:18872	168632	0	True				
ANR	170998	AssignmentExpression	i = 1		168632	0		=			
ANR	170999	Identifier	i		168632	0					
ANR	171000	PrimaryExpression	1		168632	1					
ANR	171001	Condition	i < 256	907:17:18874:18878	168632	1	True				
ANR	171002	RelationalExpression	i < 256		168632	0		<			
ANR	171003	Identifier	i		168632	0					
ANR	171004	PrimaryExpression	256		168632	1					
ANR	171005	PostIncDecOperationExpression	i ++	907:24:18881:18883	168632	2	True				
ANR	171006	Identifier	i		168632	0					
ANR	171007	IncDec	++		168632	1					
ANR	171008	CompoundStatement		911:12:18798:18827	168632	3					
ANR	171009	IdentifierDeclStatement	int x ;	909:12:18900:18905	168632	0	True				
ANR	171010	IdentifierDecl	x		168632	0					
ANR	171011	IdentifierDeclType	int		168632	0					
ANR	171012	Identifier	x		168632	1					
ANR	171013	IdentifierDeclStatement	int start = yHistogram [ i - 1 ] / ( max / 256 + 1 ) ;	911:12:18920:18957	168632	1	True				
ANR	171014	IdentifierDecl	start = yHistogram [ i - 1 ] / ( max / 256 + 1 )		168632	0					
ANR	171015	IdentifierDeclType	int		168632	0					
ANR	171016	Identifier	start		168632	1					
ANR	171017	AssignmentExpression	start = yHistogram [ i - 1 ] / ( max / 256 + 1 )		168632	2		=			
ANR	171018	Identifier	start		168632	0					
ANR	171019	MultiplicativeExpression	yHistogram [ i - 1 ] / ( max / 256 + 1 )		168632	1		/			
ANR	171020	ArrayIndexing	yHistogram [ i - 1 ]		168632	0					
ANR	171021	Identifier	yHistogram		168632	0					
ANR	171022	AdditiveExpression	i - 1		168632	1		-			
ANR	171023	Identifier	i		168632	0					
ANR	171024	PrimaryExpression	1		168632	1					
ANR	171025	AdditiveExpression	max / 256 + 1		168632	1		+			
ANR	171026	MultiplicativeExpression	max / 256		168632	0		/			
ANR	171027	Identifier	max		168632	0					
ANR	171028	PrimaryExpression	256		168632	1					
ANR	171029	PrimaryExpression	1		168632	1					
ANR	171030	IdentifierDeclStatement	int end = yHistogram [ i ] / ( max / 256 + 1 ) ;	913:12:18972:19005	168632	2	True				
ANR	171031	IdentifierDecl	end = yHistogram [ i ] / ( max / 256 + 1 )		168632	0					
ANR	171032	IdentifierDeclType	int		168632	0					
ANR	171033	Identifier	end		168632	1					
ANR	171034	AssignmentExpression	end = yHistogram [ i ] / ( max / 256 + 1 )		168632	2		=			
ANR	171035	Identifier	end		168632	0					
ANR	171036	MultiplicativeExpression	yHistogram [ i ] / ( max / 256 + 1 )		168632	1		/			
ANR	171037	ArrayIndexing	yHistogram [ i ]		168632	0					
ANR	171038	Identifier	yHistogram		168632	0					
ANR	171039	Identifier	i		168632	1					
ANR	171040	AdditiveExpression	max / 256 + 1		168632	1		+			
ANR	171041	MultiplicativeExpression	max / 256		168632	0		/			
ANR	171042	Identifier	max		168632	0					
ANR	171043	PrimaryExpression	256		168632	1					
ANR	171044	PrimaryExpression	1		168632	1					
ANR	171045	IdentifierDeclStatement	int inc = end > start ? 1 : - 1 ;	915:12:19020:19049	168632	3	True				
ANR	171046	IdentifierDecl	inc = end > start ? 1 : - 1		168632	0					
ANR	171047	IdentifierDeclType	int		168632	0					
ANR	171048	Identifier	inc		168632	1					
ANR	171049	AssignmentExpression	inc = end > start ? 1 : - 1		168632	2		=			
ANR	171050	Identifier	inc		168632	0					
ANR	171051	ConditionalExpression	end > start ? 1 : - 1		168632	1					
ANR	171052	Condition	end > start		168632	0					
ANR	171053	RelationalExpression	end > start		168632	0		>			
ANR	171054	Identifier	end		168632	0					
ANR	171055	Identifier	start		168632	1					
ANR	171056	PrimaryExpression	1		168632	1					
ANR	171057	UnaryOperationExpression	- 1		168632	2					
ANR	171058	UnaryOperator	-		168632	0					
ANR	171059	PrimaryExpression	1		168632	1					
ANR	171060	ForStatement	for ( x = start ; x != end + inc ; x += inc )		168632	4					
ANR	171061	ForInit	x = start ;	917:16:19068:19075	168632	0	True				
ANR	171062	AssignmentExpression	x = start		168632	0		=			
ANR	171063	Identifier	x		168632	0					
ANR	171064	Identifier	start		168632	1					
ANR	171065	Condition	x != end + inc	917:25:19077:19086	168632	1	True				
ANR	171066	EqualityExpression	x != end + inc		168632	0		!=			
ANR	171067	Identifier	x		168632	0					
ANR	171068	AdditiveExpression	end + inc		168632	1		+			
ANR	171069	Identifier	end		168632	0					
ANR	171070	Identifier	inc		168632	1					
ANR	171071	AssignmentExpression	x += inc	917:37:19089:19094	168632	2	True	+=			
ANR	171072	Identifier	x		168632	0					
ANR	171073	Identifier	inc		168632	1					
ANR	171074	ExpressionStatement	dst [ i * dstStride + x ] += 128	919:16:19114:19140	168632	3	True				
ANR	171075	AssignmentExpression	dst [ i * dstStride + x ] += 128		168632	0		+=			
ANR	171076	ArrayIndexing	dst [ i * dstStride + x ]		168632	0					
ANR	171077	Identifier	dst		168632	0					
ANR	171078	AdditiveExpression	i * dstStride + x		168632	1		+			
ANR	171079	MultiplicativeExpression	i * dstStride		168632	0		*			
ANR	171080	Identifier	i		168632	0					
ANR	171081	Identifier	dstStride		168632	1					
ANR	171082	Identifier	x		168632	1					
ANR	171083	PrimaryExpression	128		168632	1					
ANR	171084	ForStatement	for ( i = 0 ; i < 100 ; i += 2 )		168632	4					
ANR	171085	ForInit	i = 0 ;	925:12:19168:19171	168632	0	True				
ANR	171086	AssignmentExpression	i = 0		168632	0		=			
ANR	171087	Identifier	i		168632	0					
ANR	171088	PrimaryExpression	0		168632	1					
ANR	171089	Condition	i < 100	925:17:19173:19177	168632	1	True				
ANR	171090	RelationalExpression	i < 100		168632	0		<			
ANR	171091	Identifier	i		168632	0					
ANR	171092	PrimaryExpression	100		168632	1					
ANR	171093	AssignmentExpression	i += 2	925:24:19180:19183	168632	2	True	+=			
ANR	171094	Identifier	i		168632	0					
ANR	171095	PrimaryExpression	2		168632	1					
ANR	171096	CompoundStatement		921:29:18963:18963	168632	3					
ANR	171097	ExpressionStatement	dst [ ( white ) * dstStride + i ] += 128	927:12:19200:19232	168632	0	True				
ANR	171098	AssignmentExpression	dst [ ( white ) * dstStride + i ] += 128		168632	0		+=			
ANR	171099	ArrayIndexing	dst [ ( white ) * dstStride + i ]		168632	0					
ANR	171100	Identifier	dst		168632	0					
ANR	171101	AdditiveExpression	( white ) * dstStride + i		168632	1		+			
ANR	171102	CastExpression	( white ) * dstStride		168632	0					
ANR	171103	CastTarget	white		168632	0					
ANR	171104	UnaryOperationExpression	* dstStride		168632	1					
ANR	171105	UnaryOperator	*		168632	0					
ANR	171106	Identifier	dstStride		168632	1					
ANR	171107	Identifier	i		168632	1					
ANR	171108	PrimaryExpression	128		168632	1					
ANR	171109	ExpressionStatement	dst [ ( black ) * dstStride + i ] += 128	929:12:19247:19279	168632	1	True				
ANR	171110	AssignmentExpression	dst [ ( black ) * dstStride + i ] += 128		168632	0		+=			
ANR	171111	ArrayIndexing	dst [ ( black ) * dstStride + i ]		168632	0					
ANR	171112	Identifier	dst		168632	0					
ANR	171113	AdditiveExpression	( black ) * dstStride + i		168632	1		+			
ANR	171114	CastExpression	( black ) * dstStride		168632	0					
ANR	171115	CastTarget	black		168632	0					
ANR	171116	UnaryOperationExpression	* dstStride		168632	1					
ANR	171117	UnaryOperator	*		168632	0					
ANR	171118	Identifier	dstStride		168632	1					
ANR	171119	Identifier	i		168632	1					
ANR	171120	PrimaryExpression	128		168632	1					
ANR	171121	ExpressionStatement	* c2 = c	939:4:19314:19320	168632	33	True				
ANR	171122	AssignmentExpression	* c2 = c		168632	0		=			
ANR	171123	UnaryOperationExpression	* c2		168632	0					
ANR	171124	UnaryOperator	*		168632	0					
ANR	171125	Identifier	c2		168632	1					
ANR	171126	Identifier	c		168632	1					
ANR	171127	ReturnType	static void RENAME		168632	1					
ANR	171128	Identifier	( postProcess )		168632	2					
ANR	171129	Identifier	postProcess		168632	3					
ANR	171130	ParameterList	"const uint8_t src [ ] , int srcStride , uint8_t dst [ ] , int dstStride , int width , int height , const QP_STORE_T QPs [ ] , int QPStride , int isColor , PPContext * c2"		168632	4					
ANR	171131	Parameter	const uint8_t src [ ]	1:32:32:50	168632	0	True				
ANR	171132	ParameterType	const uint8_t [ ]		168632	0					
ANR	171133	Identifier	src		168632	1					
ANR	171134	Parameter	int srcStride	1:53:53:65	168632	1	True				
ANR	171135	ParameterType	int		168632	0					
ANR	171136	Identifier	srcStride		168632	1					
ANR	171137	Parameter	uint8_t dst [ ]	1:68:68:80	168632	2	True				
ANR	171138	ParameterType	uint8_t [ ]		168632	0					
ANR	171139	Identifier	dst		168632	1					
ANR	171140	Parameter	int dstStride	1:83:83:95	168632	3	True				
ANR	171141	ParameterType	int		168632	0					
ANR	171142	Identifier	dstStride		168632	1					
ANR	171143	Parameter	int width	1:98:98:106	168632	4	True				
ANR	171144	ParameterType	int		168632	0					
ANR	171145	Identifier	width		168632	1					
ANR	171146	Parameter	int height	1:109:109:118	168632	5	True				
ANR	171147	ParameterType	int		168632	0					
ANR	171148	Identifier	height		168632	1					
ANR	171149	Parameter	const QP_STORE_T QPs [ ]	3:32:154:175	168632	6	True				
ANR	171150	ParameterType	const QP_STORE_T [ ]		168632	0					
ANR	171151	Identifier	QPs		168632	1					
ANR	171152	Parameter	int QPStride	3:56:178:189	168632	7	True				
ANR	171153	ParameterType	int		168632	0					
ANR	171154	Identifier	QPStride		168632	1					
ANR	171155	Parameter	int isColor	3:70:192:202	168632	8	True				
ANR	171156	ParameterType	int		168632	0					
ANR	171157	Identifier	isColor		168632	1					
ANR	171158	Parameter	PPContext * c2	3:83:205:217	168632	9	True				
ANR	171159	ParameterType	PPContext *		168632	0					
ANR	171160	Identifier	c2		168632	1					
ANR	171161	CFGEntryNode	ENTRY		168632		True				
ANR	171162	CFGExitNode	EXIT		168632		True				
ANR	171163	Symbol	* x		168632						
ANR	171164	Symbol	* QPptr		168632						
ANR	171165	Symbol	LOWPASS5_DEINT_FILTER		168632						
ANR	171166	Symbol	c . tempBlocks		168632						
ANR	171167	Symbol	deInterlaceFF		168632						
ANR	171168	Symbol	qpVShift		168632						
ANR	171169	Symbol	stride		168632						
ANR	171170	Symbol	c . ppMode . minAllowedY		168632						
ANR	171171	Symbol	c . tempDst		168632						
ANR	171172	Symbol	yHistogram		168632						
ANR	171173	Symbol	FFMPEG_DEINT_FILTER		168632						
ANR	171174	Symbol	* yHistogram		168632						
ANR	171175	Symbol	CUBIC_IPOL_DEINT_FILTER		168632						
ANR	171176	Symbol	c . yHistogram		168632						
ANR	171177	Symbol	height		168632						
ANR	171178	Symbol	QP		168632						
ANR	171179	Symbol	c . hChromaSubSample		168632						
ANR	171180	Symbol	c . QP		168632						
ANR	171181	Symbol	vertClassify		168632						
ANR	171182	Symbol	deInterlaceBlendLinear		168632						
ANR	171183	Symbol	c2		168632						
ANR	171184	Symbol	c . packedYScale		168632						
ANR	171185	Symbol	* srcBlock		168632						
ANR	171186	Symbol	QPs		168632						
ANR	171187	Symbol	V_X1_FILTER		168632						
ANR	171188	Symbol	do_a_deblock		168632						
ANR	171189	Symbol	TEMPLATE_PP_TIME_MODE		168632						
ANR	171190	Symbol	* * srcBlock		168632						
ANR	171191	Symbol	PPContext		168632						
ANR	171192	Symbol	c . mmxDcThreshold		168632						
ANR	171193	Symbol	* * dstStride		168632						
ANR	171194	Symbol	c . nonBQPTable		168632						
ANR	171195	Symbol	qpHShift		168632						
ANR	171196	Symbol	tmpXchg		168632						
ANR	171197	Symbol	nonBQPptr		168632						
ANR	171198	Symbol	sum		168632						
ANR	171199	Symbol	c . tempBlurredPast		168632						
ANR	171200	Symbol	V_A_DEBLOCK		168632						
ANR	171201	Symbol	dering		168632						
ANR	171202	Symbol	H_X1_FILTER		168632						
ANR	171203	Symbol	blockCopy		168632						
ANR	171204	Symbol	vertX1Filter		168632						
ANR	171205	Symbol	QPCorrecture		168632						
ANR	171206	Symbol	copyAhead		168632						
ANR	171207	Symbol	c		168632						
ANR	171208	Symbol	TEMP_NOISE_FILTER		168632						
ANR	171209	Symbol	max		168632						
ANR	171210	Symbol	black		168632						
ANR	171211	Symbol	i		168632						
ANR	171212	Symbol	FFABS		168632						
ANR	171213	Symbol	VISUALIZE		168632						
ANR	171214	Symbol	* black		168632						
ANR	171215	Symbol	doVertLowPass		168632						
ANR	171216	Symbol	t		168632						
ANR	171217	Symbol	c . deintTemp		168632						
ANR	171218	Symbol	c . nonBQP		168632						
ANR	171219	Symbol	* qpHShift		168632						
ANR	171220	Symbol	width		168632						
ANR	171221	Symbol	x		168632						
ANR	171222	Symbol	H_A_DEBLOCK		168632						
ANR	171223	Symbol	y		168632						
ANR	171224	Symbol	c . mmxDcOffset		168632						
ANR	171225	Symbol	srcBlock		168632						
ANR	171226	Symbol	AV_LOG_WARNING		168632						
ANR	171227	Symbol	c . ppMode . maxClippedThreshold		168632						
ANR	171228	Symbol	c . vChromaSubSample		168632						
ANR	171229	Symbol	FFMAX		168632						
ANR	171230	Symbol	tempNoiseReducer		168632						
ANR	171231	Symbol	MEDIAN_DEINT_FILTER		168632						
ANR	171232	Symbol	transpose2		168632						
ANR	171233	Symbol	transpose1		168632						
ANR	171234	Symbol	c . tempBlurred		168632						
ANR	171235	Symbol	deInterlaceInterpolateLinear		168632						
ANR	171236	Symbol	LINEAR_IPOL_DEINT_FILTER		168632						
ANR	171237	Symbol	FFMIN		168632						
ANR	171238	Symbol	threshold		168632						
ANR	171239	Symbol	* c . tempBlurred		168632						
ANR	171240	Symbol	* c . tempBlurredPast		168632						
ANR	171241	Symbol	* isColor		168632						
ANR	171242	Symbol	c . ppMode		168632						
ANR	171243	Symbol	mode		168632						
ANR	171244	Symbol	tempSrc		168632						
ANR	171245	Symbol	* dst		168632						
ANR	171246	Symbol	dstStride		168632						
ANR	171247	Symbol	white		168632						
ANR	171248	Symbol	c . frameNum		168632						
ANR	171249	Symbol	deInterlaceMedian		168632						
ANR	171250	Symbol	deInterlaceInterpolateCubic		168632						
ANR	171251	Symbol	srcStride		168632						
ANR	171252	Symbol	V_DEBLOCK		168632						
ANR	171253	Symbol	* srcStride		168632						
ANR	171254	Symbol	* c . mmxDcOffset		168632						
ANR	171255	Symbol	tempBlock1		168632						
ANR	171256	Symbol	tempBlock2		168632						
ANR	171257	Symbol	* c . mmxDcThreshold		168632						
ANR	171258	Symbol	offset		168632						
ANR	171259	Symbol	doVertDefFilter		168632						
ANR	171260	Symbol	duplicate		168632						
ANR	171261	Symbol	* dstStride		168632						
ANR	171262	Symbol	* white		168632						
ANR	171263	Symbol	tempDst		168632						
ANR	171264	Symbol	DECLARE_ALIGNED		168632						
ANR	171265	Symbol	QPStride		168632						
ANR	171266	Symbol	TEMPLATE_PP_MMX		168632						
ANR	171267	Symbol	c . ppMode . maxAllowedY		168632						
ANR	171268	Symbol	dst		168632						
ANR	171269	Symbol	BLOCK_SIZE		168632						
ANR	171270	Symbol	scale		168632						
ANR	171271	Symbol	DERING		168632						
ANR	171272	Symbol	c . packedYOffset		168632						
ANR	171273	Symbol	& c . packedYOffset		168632						
ANR	171274	Symbol	isColor		168632						
ANR	171275	Symbol	c . ppMode . baseDcDiff		168632						
ANR	171276	Symbol	end		168632						
ANR	171277	Symbol	* * srcStride		168632						
ANR	171278	Symbol	inc		168632						
ANR	171279	Symbol	RENAME		168632						
ANR	171280	Symbol	dstBlock		168632						
ANR	171281	Symbol	deInterlaceL5		168632						
ANR	171282	Symbol	* nonBQPptr		168632						
ANR	171283	Symbol	src		168632						
ANR	171284	Symbol	start		168632						
ANR	171285	Symbol	LEVEL_FIX		168632						
ANR	171286	Symbol	& c		168632						
ANR	171287	Symbol	* c		168632						
ANR	171288	Symbol	c . ppMode . maxTmpNoise		168632						
ANR	171289	Symbol	clipped		168632						
ANR	171290	Symbol	H_DEBLOCK		168632						
ANR	171291	Symbol	c . tempSrc		168632						
ANR	171292	Symbol	LINEAR_BLEND_DEINT_FILTER		168632						
ANR	171293	Symbol	maxClipped		168632						
ANR	171294	Symbol	* i		168632						
ANR	171295	Symbol	QPptr		168632						
ANR	171296	Symbol	* c2		168632						
