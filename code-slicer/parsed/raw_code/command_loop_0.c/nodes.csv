command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1348474	File	/home/p4ultr4n/workplace/ReVeal/raw_code/command_loop_0.c								
ANR	1348475	Function	command_loop	1:0:0:1028							
ANR	1348476	FunctionDef	command_loop ()		1348475	0					
ANR	1348477	CompoundStatement		3:0:20:1028	1348475	0					
ANR	1348478	IdentifierDeclStatement	"int c , i , j = 0 , done = 0 ;"	5:1:24:50	1348475	0	True				
ANR	1348479	IdentifierDecl	c		1348475	0					
ANR	1348480	IdentifierDeclType	int		1348475	0					
ANR	1348481	Identifier	c		1348475	1					
ANR	1348482	IdentifierDecl	i		1348475	1					
ANR	1348483	IdentifierDeclType	int		1348475	0					
ANR	1348484	Identifier	i		1348475	1					
ANR	1348485	IdentifierDecl	j = 0		1348475	2					
ANR	1348486	IdentifierDeclType	int		1348475	0					
ANR	1348487	Identifier	j		1348475	1					
ANR	1348488	AssignmentExpression	j = 0		1348475	2		=			
ANR	1348489	Identifier	j		1348475	0					
ANR	1348490	PrimaryExpression	0		1348475	1					
ANR	1348491	IdentifierDecl	done = 0		1348475	3					
ANR	1348492	IdentifierDeclType	int		1348475	0					
ANR	1348493	Identifier	done		1348475	1					
ANR	1348494	AssignmentExpression	done = 0		1348475	2		=			
ANR	1348495	Identifier	done		1348475	0					
ANR	1348496	PrimaryExpression	0		1348475	1					
ANR	1348497	IdentifierDeclStatement	char * input ;	7:1:54:66	1348475	1	True				
ANR	1348498	IdentifierDecl	* input		1348475	0					
ANR	1348499	IdentifierDeclType	char *		1348475	0					
ANR	1348500	Identifier	input		1348475	1					
ANR	1348501	IdentifierDeclStatement	char * * v ;	9:1:70:79	1348475	2	True				
ANR	1348502	IdentifierDecl	* * v		1348475	0					
ANR	1348503	IdentifierDeclType	char * *		1348475	0					
ANR	1348504	Identifier	v		1348475	1					
ANR	1348505	IdentifierDeclStatement	const cmdinfo_t * ct ;	11:1:83:102	1348475	3	True				
ANR	1348506	IdentifierDecl	* ct		1348475	0					
ANR	1348507	IdentifierDeclType	const cmdinfo_t *		1348475	0					
ANR	1348508	Identifier	ct		1348475	1					
ANR	1348509	ForStatement	for ( i = 0 ; ! done && i < ncmdline ; i ++ )		1348475	4					
ANR	1348510	ForInit	i = 0 ;	15:6:113:118	1348475	0	True				
ANR	1348511	AssignmentExpression	i = 0		1348475	0		=			
ANR	1348512	Identifier	i		1348475	0					
ANR	1348513	PrimaryExpression	0		1348475	1					
ANR	1348514	Condition	! done && i < ncmdline	15:13:120:140	1348475	1	True				
ANR	1348515	AndExpression	! done && i < ncmdline		1348475	0		&&			
ANR	1348516	UnaryOperationExpression	! done		1348475	0					
ANR	1348517	UnaryOperator	!		1348475	0					
ANR	1348518	Identifier	done		1348475	1					
ANR	1348519	RelationalExpression	i < ncmdline		1348475	1		<			
ANR	1348520	Identifier	i		1348475	0					
ANR	1348521	Identifier	ncmdline		1348475	1					
ANR	1348522	PostIncDecOperationExpression	i ++	15:36:143:145	1348475	2	True				
ANR	1348523	Identifier	i		1348475	0					
ANR	1348524	IncDec	++		1348475	1					
ANR	1348525	CompoundStatement		13:41:127:127	1348475	3					
ANR	1348526	ExpressionStatement	input = strdup ( cmdline [ i ] )	17:2:153:179	1348475	0	True				
ANR	1348527	AssignmentExpression	input = strdup ( cmdline [ i ] )		1348475	0		=			
ANR	1348528	Identifier	input		1348475	0					
ANR	1348529	CallExpression	strdup ( cmdline [ i ] )		1348475	1					
ANR	1348530	Callee	strdup		1348475	0					
ANR	1348531	Identifier	strdup		1348475	0					
ANR	1348532	ArgumentList	cmdline [ i ]		1348475	1					
ANR	1348533	Argument	cmdline [ i ]		1348475	0					
ANR	1348534	ArrayIndexing	cmdline [ i ]		1348475	0					
ANR	1348535	Identifier	cmdline		1348475	0					
ANR	1348536	Identifier	i		1348475	1					
ANR	1348537	IfStatement	if ( ! input )		1348475	1					
ANR	1348538	Condition	! input	19:6:188:193	1348475	0	True				
ANR	1348539	UnaryOperationExpression	! input		1348475	0					
ANR	1348540	UnaryOperator	!		1348475	0					
ANR	1348541	Identifier	input		1348475	1					
ANR	1348542	CompoundStatement		17:14:175:175	1348475	1					
ANR	1348543	ExpressionStatement	"fprintf ( stderr , _ ( ""cannot strdup command '%s': %s\\n"" ) , cmdline [ i ] , strerror ( errno ) )"	21:3:202:295	1348475	0	True				
ANR	1348544	CallExpression	"fprintf ( stderr , _ ( ""cannot strdup command '%s': %s\\n"" ) , cmdline [ i ] , strerror ( errno ) )"		1348475	0					
ANR	1348545	Callee	fprintf		1348475	0					
ANR	1348546	Identifier	fprintf		1348475	0					
ANR	1348547	ArgumentList	stderr		1348475	1					
ANR	1348548	Argument	stderr		1348475	0					
ANR	1348549	Identifier	stderr		1348475	0					
ANR	1348550	Argument	"_ ( ""cannot strdup command '%s': %s\\n"" )"		1348475	1					
ANR	1348551	CallExpression	"_ ( ""cannot strdup command '%s': %s\\n"" )"		1348475	0					
ANR	1348552	Callee	_		1348475	0					
ANR	1348553	Identifier	_		1348475	0					
ANR	1348554	ArgumentList	"""cannot strdup command '%s': %s\\n"""		1348475	1					
ANR	1348555	Argument	"""cannot strdup command '%s': %s\\n"""		1348475	0					
ANR	1348556	PrimaryExpression	"""cannot strdup command '%s': %s\\n"""		1348475	0					
ANR	1348557	Argument	cmdline [ i ]		1348475	2					
ANR	1348558	ArrayIndexing	cmdline [ i ]		1348475	0					
ANR	1348559	Identifier	cmdline		1348475	0					
ANR	1348560	Identifier	i		1348475	1					
ANR	1348561	Argument	strerror ( errno )		1348475	3					
ANR	1348562	CallExpression	strerror ( errno )		1348475	0					
ANR	1348563	Callee	strerror		1348475	0					
ANR	1348564	Identifier	strerror		1348475	0					
ANR	1348565	ArgumentList	errno		1348475	1					
ANR	1348566	Argument	errno		1348475	0					
ANR	1348567	Identifier	errno		1348475	0					
ANR	1348568	ExpressionStatement	exit ( 1 )	27:3:301:308	1348475	1	True				
ANR	1348569	CallExpression	exit ( 1 )		1348475	0					
ANR	1348570	Callee	exit		1348475	0					
ANR	1348571	Identifier	exit		1348475	0					
ANR	1348572	ArgumentList	1		1348475	1					
ANR	1348573	Argument	1		1348475	0					
ANR	1348574	PrimaryExpression	1		1348475	0					
ANR	1348575	ExpressionStatement	"v = breakline ( input , & c )"	31:2:318:342	1348475	2	True				
ANR	1348576	AssignmentExpression	"v = breakline ( input , & c )"		1348475	0		=			
ANR	1348577	Identifier	v		1348475	0					
ANR	1348578	CallExpression	"breakline ( input , & c )"		1348475	1					
ANR	1348579	Callee	breakline		1348475	0					
ANR	1348580	Identifier	breakline		1348475	0					
ANR	1348581	ArgumentList	input		1348475	1					
ANR	1348582	Argument	input		1348475	0					
ANR	1348583	Identifier	input		1348475	0					
ANR	1348584	Argument	& c		1348475	1					
ANR	1348585	UnaryOperationExpression	& c		1348475	0					
ANR	1348586	UnaryOperator	&		1348475	0					
ANR	1348587	Identifier	c		1348475	1					
ANR	1348588	IfStatement	if ( c )		1348475	3					
ANR	1348589	Condition	c	33:6:351:351	1348475	0	True				
ANR	1348590	Identifier	c		1348475	0					
ANR	1348591	CompoundStatement		31:9:333:333	1348475	1					
ANR	1348592	ExpressionStatement	ct = find_command ( v [ 0 ] )	35:3:360:383	1348475	0	True				
ANR	1348593	AssignmentExpression	ct = find_command ( v [ 0 ] )		1348475	0		=			
ANR	1348594	Identifier	ct		1348475	0					
ANR	1348595	CallExpression	find_command ( v [ 0 ] )		1348475	1					
ANR	1348596	Callee	find_command		1348475	0					
ANR	1348597	Identifier	find_command		1348475	0					
ANR	1348598	ArgumentList	v [ 0 ]		1348475	1					
ANR	1348599	Argument	v [ 0 ]		1348475	0					
ANR	1348600	ArrayIndexing	v [ 0 ]		1348475	0					
ANR	1348601	Identifier	v		1348475	0					
ANR	1348602	PrimaryExpression	0		1348475	1					
ANR	1348603	IfStatement	if ( ct )		1348475	1					
ANR	1348604	Condition	ct	37:7:393:394	1348475	0	True				
ANR	1348605	Identifier	ct		1348475	0					
ANR	1348606	CompoundStatement		35:11:376:376	1348475	1					
ANR	1348607	IfStatement	if ( ct -> flags & CMD_FLAG_GLOBAL )		1348475	0					
ANR	1348608	Condition	ct -> flags & CMD_FLAG_GLOBAL	39:8:408:434	1348475	0	True				
ANR	1348609	BitAndExpression	ct -> flags & CMD_FLAG_GLOBAL		1348475	0		&			
ANR	1348610	PtrMemberAccess	ct -> flags		1348475	0					
ANR	1348611	Identifier	ct		1348475	0					
ANR	1348612	Identifier	flags		1348475	1					
ANR	1348613	Identifier	CMD_FLAG_GLOBAL		1348475	1					
ANR	1348614	ExpressionStatement	"done = command ( ct , c , v )"	41:5:443:467	1348475	1	True				
ANR	1348615	AssignmentExpression	"done = command ( ct , c , v )"		1348475	0		=			
ANR	1348616	Identifier	done		1348475	0					
ANR	1348617	CallExpression	"command ( ct , c , v )"		1348475	1					
ANR	1348618	Callee	command		1348475	0					
ANR	1348619	Identifier	command		1348475	0					
ANR	1348620	ArgumentList	ct		1348475	1					
ANR	1348621	Argument	ct		1348475	0					
ANR	1348622	Identifier	ct		1348475	0					
ANR	1348623	Argument	c		1348475	1					
ANR	1348624	Identifier	c		1348475	0					
ANR	1348625	Argument	v		1348475	2					
ANR	1348626	Identifier	v		1348475	0					
ANR	1348627	ElseStatement	else		1348475	0					
ANR	1348628	CompoundStatement		41:9:458:458	1348475	0					
ANR	1348629	ExpressionStatement	j = 0	45:5:487:492	1348475	0	True				
ANR	1348630	AssignmentExpression	j = 0		1348475	0		=			
ANR	1348631	Identifier	j		1348475	0					
ANR	1348632	PrimaryExpression	0		1348475	1					
ANR	1348633	WhileStatement	while ( ! done && ( j = args_command ( j ) ) )		1348475	1					
ANR	1348634	Condition	! done && ( j = args_command ( j ) )	47:12:507:536	1348475	0	True				
ANR	1348635	AndExpression	! done && ( j = args_command ( j ) )		1348475	0		&&			
ANR	1348636	UnaryOperationExpression	! done		1348475	0					
ANR	1348637	UnaryOperator	!		1348475	0					
ANR	1348638	Identifier	done		1348475	1					
ANR	1348639	AssignmentExpression	j = args_command ( j )		1348475	1		=			
ANR	1348640	Identifier	j		1348475	0					
ANR	1348641	CallExpression	args_command ( j )		1348475	1					
ANR	1348642	Callee	args_command		1348475	0					
ANR	1348643	Identifier	args_command		1348475	0					
ANR	1348644	ArgumentList	j		1348475	1					
ANR	1348645	Argument	j		1348475	0					
ANR	1348646	Identifier	j		1348475	0					
ANR	1348647	ExpressionStatement	"done = command ( ct , c , v )"	49:6:546:570	1348475	1	True				
ANR	1348648	AssignmentExpression	"done = command ( ct , c , v )"		1348475	0		=			
ANR	1348649	Identifier	done		1348475	0					
ANR	1348650	CallExpression	"command ( ct , c , v )"		1348475	1					
ANR	1348651	Callee	command		1348475	0					
ANR	1348652	Identifier	command		1348475	0					
ANR	1348653	ArgumentList	ct		1348475	1					
ANR	1348654	Argument	ct		1348475	0					
ANR	1348655	Identifier	ct		1348475	0					
ANR	1348656	Argument	c		1348475	1					
ANR	1348657	Identifier	c		1348475	0					
ANR	1348658	Argument	v		1348475	2					
ANR	1348659	Identifier	v		1348475	0					
ANR	1348660	ElseStatement	else		1348475	0					
ANR	1348661	ExpressionStatement	"fprintf ( stderr , _ ( ""command \\""%s\\"" not found\\n"" ) , v [ 0 ] )"	55:4:595:655	1348475	0	True				
ANR	1348662	CallExpression	"fprintf ( stderr , _ ( ""command \\""%s\\"" not found\\n"" ) , v [ 0 ] )"		1348475	0					
ANR	1348663	Callee	fprintf		1348475	0					
ANR	1348664	Identifier	fprintf		1348475	0					
ANR	1348665	ArgumentList	stderr		1348475	1					
ANR	1348666	Argument	stderr		1348475	0					
ANR	1348667	Identifier	stderr		1348475	0					
ANR	1348668	Argument	"_ ( ""command \\""%s\\"" not found\\n"" )"		1348475	1					
ANR	1348669	CallExpression	"_ ( ""command \\""%s\\"" not found\\n"" )"		1348475	0					
ANR	1348670	Callee	_		1348475	0					
ANR	1348671	Identifier	_		1348475	0					
ANR	1348672	ArgumentList	"""command \\""%s\\"" not found\\n"""		1348475	1					
ANR	1348673	Argument	"""command \\""%s\\"" not found\\n"""		1348475	0					
ANR	1348674	PrimaryExpression	"""command \\""%s\\"" not found\\n"""		1348475	0					
ANR	1348675	Argument	v [ 0 ]		1348475	2					
ANR	1348676	ArrayIndexing	v [ 0 ]		1348475	0					
ANR	1348677	Identifier	v		1348475	0					
ANR	1348678	PrimaryExpression	0		1348475	1					
ANR	1348679	ExpressionStatement	"doneline ( input , v )"	61:2:665:683	1348475	4	True				
ANR	1348680	CallExpression	"doneline ( input , v )"		1348475	0					
ANR	1348681	Callee	doneline		1348475	0					
ANR	1348682	Identifier	doneline		1348475	0					
ANR	1348683	ArgumentList	input		1348475	1					
ANR	1348684	Argument	input		1348475	0					
ANR	1348685	Identifier	input		1348475	0					
ANR	1348686	Argument	v		1348475	1					
ANR	1348687	Identifier	v		1348475	0					
ANR	1348688	IfStatement	if ( cmdline )		1348475	5					
ANR	1348689	Condition	cmdline	65:5:695:701	1348475	0	True				
ANR	1348690	Identifier	cmdline		1348475	0					
ANR	1348691	CompoundStatement		63:14:683:683	1348475	1					
ANR	1348692	ExpressionStatement	free ( cmdline )	67:2:709:722	1348475	0	True				
ANR	1348693	CallExpression	free ( cmdline )		1348475	0					
ANR	1348694	Callee	free		1348475	0					
ANR	1348695	Identifier	free		1348475	0					
ANR	1348696	ArgumentList	cmdline		1348475	1					
ANR	1348697	Argument	cmdline		1348475	0					
ANR	1348698	Identifier	cmdline		1348475	0					
ANR	1348699	ReturnStatement	return ;	69:2:727:733	1348475	1	True				
ANR	1348700	WhileStatement	while ( ! done )		1348475	6					
ANR	1348701	Condition	! done	73:8:748:752	1348475	0	True				
ANR	1348702	UnaryOperationExpression	! done		1348475	0					
ANR	1348703	UnaryOperator	!		1348475	0					
ANR	1348704	Identifier	done		1348475	1					
ANR	1348705	CompoundStatement		71:15:734:734	1348475	1					
ANR	1348706	IfStatement	if ( ( input = fetchline ( ) ) == NULL )		1348475	0					
ANR	1348707	Condition	( input = fetchline ( ) ) == NULL	75:6:764:792	1348475	0	True				
ANR	1348708	EqualityExpression	( input = fetchline ( ) ) == NULL		1348475	0		==			
ANR	1348709	AssignmentExpression	input = fetchline ( )		1348475	0		=			
ANR	1348710	Identifier	input		1348475	0					
ANR	1348711	CallExpression	fetchline ( )		1348475	1					
ANR	1348712	Callee	fetchline		1348475	0					
ANR	1348713	Identifier	fetchline		1348475	0					
ANR	1348714	ArgumentList			1348475	1					
ANR	1348715	Identifier	NULL		1348475	1					
ANR	1348716	BreakStatement	break ;	77:3:799:804	1348475	1	True				
ANR	1348717	ExpressionStatement	"v = breakline ( input , & c )"	79:2:809:833	1348475	1	True				
ANR	1348718	AssignmentExpression	"v = breakline ( input , & c )"		1348475	0		=			
ANR	1348719	Identifier	v		1348475	0					
ANR	1348720	CallExpression	"breakline ( input , & c )"		1348475	1					
ANR	1348721	Callee	breakline		1348475	0					
ANR	1348722	Identifier	breakline		1348475	0					
ANR	1348723	ArgumentList	input		1348475	1					
ANR	1348724	Argument	input		1348475	0					
ANR	1348725	Identifier	input		1348475	0					
ANR	1348726	Argument	& c		1348475	1					
ANR	1348727	UnaryOperationExpression	& c		1348475	0					
ANR	1348728	UnaryOperator	&		1348475	0					
ANR	1348729	Identifier	c		1348475	1					
ANR	1348730	IfStatement	if ( c )		1348475	2					
ANR	1348731	Condition	c	81:6:842:842	1348475	0	True				
ANR	1348732	Identifier	c		1348475	0					
ANR	1348733	CompoundStatement		79:9:824:824	1348475	1					
ANR	1348734	ExpressionStatement	ct = find_command ( v [ 0 ] )	83:3:851:874	1348475	0	True				
ANR	1348735	AssignmentExpression	ct = find_command ( v [ 0 ] )		1348475	0		=			
ANR	1348736	Identifier	ct		1348475	0					
ANR	1348737	CallExpression	find_command ( v [ 0 ] )		1348475	1					
ANR	1348738	Callee	find_command		1348475	0					
ANR	1348739	Identifier	find_command		1348475	0					
ANR	1348740	ArgumentList	v [ 0 ]		1348475	1					
ANR	1348741	Argument	v [ 0 ]		1348475	0					
ANR	1348742	ArrayIndexing	v [ 0 ]		1348475	0					
ANR	1348743	Identifier	v		1348475	0					
ANR	1348744	PrimaryExpression	0		1348475	1					
ANR	1348745	IfStatement	if ( ct )		1348475	1					
ANR	1348746	Condition	ct	85:7:884:885	1348475	0	True				
ANR	1348747	Identifier	ct		1348475	0					
ANR	1348748	ExpressionStatement	"done = command ( ct , c , v )"	87:4:893:917	1348475	1	True				
ANR	1348749	AssignmentExpression	"done = command ( ct , c , v )"		1348475	0		=			
ANR	1348750	Identifier	done		1348475	0					
ANR	1348751	CallExpression	"command ( ct , c , v )"		1348475	1					
ANR	1348752	Callee	command		1348475	0					
ANR	1348753	Identifier	command		1348475	0					
ANR	1348754	ArgumentList	ct		1348475	1					
ANR	1348755	Argument	ct		1348475	0					
ANR	1348756	Identifier	ct		1348475	0					
ANR	1348757	Argument	c		1348475	1					
ANR	1348758	Identifier	c		1348475	0					
ANR	1348759	Argument	v		1348475	2					
ANR	1348760	Identifier	v		1348475	0					
ANR	1348761	ElseStatement	else		1348475	0					
ANR	1348762	ExpressionStatement	"fprintf ( stderr , _ ( ""command \\""%s\\"" not found\\n"" ) , v [ 0 ] )"	91:4:933:993	1348475	0	True				
ANR	1348763	CallExpression	"fprintf ( stderr , _ ( ""command \\""%s\\"" not found\\n"" ) , v [ 0 ] )"		1348475	0					
ANR	1348764	Callee	fprintf		1348475	0					
ANR	1348765	Identifier	fprintf		1348475	0					
ANR	1348766	ArgumentList	stderr		1348475	1					
ANR	1348767	Argument	stderr		1348475	0					
ANR	1348768	Identifier	stderr		1348475	0					
ANR	1348769	Argument	"_ ( ""command \\""%s\\"" not found\\n"" )"		1348475	1					
ANR	1348770	CallExpression	"_ ( ""command \\""%s\\"" not found\\n"" )"		1348475	0					
ANR	1348771	Callee	_		1348475	0					
ANR	1348772	Identifier	_		1348475	0					
ANR	1348773	ArgumentList	"""command \\""%s\\"" not found\\n"""		1348475	1					
ANR	1348774	Argument	"""command \\""%s\\"" not found\\n"""		1348475	0					
ANR	1348775	PrimaryExpression	"""command \\""%s\\"" not found\\n"""		1348475	0					
ANR	1348776	Argument	v [ 0 ]		1348475	2					
ANR	1348777	ArrayIndexing	v [ 0 ]		1348475	0					
ANR	1348778	Identifier	v		1348475	0					
ANR	1348779	PrimaryExpression	0		1348475	1					
ANR	1348780	ExpressionStatement	"doneline ( input , v )"	97:2:1003:1021	1348475	3	True				
ANR	1348781	CallExpression	"doneline ( input , v )"		1348475	0					
ANR	1348782	Callee	doneline		1348475	0					
ANR	1348783	Identifier	doneline		1348475	0					
ANR	1348784	ArgumentList	input		1348475	1					
ANR	1348785	Argument	input		1348475	0					
ANR	1348786	Identifier	input		1348475	0					
ANR	1348787	Argument	v		1348475	1					
ANR	1348788	Identifier	v		1348475	0					
ANR	1348789	Identifier	command_loop		1348475	1					
ANR	1348790	ParameterList			1348475	2					
ANR	1348791	CFGEntryNode	ENTRY		1348475		True				
ANR	1348792	CFGExitNode	EXIT		1348475		True				
ANR	1348793	Symbol	* v		1348475						
ANR	1348794	Symbol	CMD_FLAG_GLOBAL		1348475						
ANR	1348795	Symbol	args_command		1348475						
ANR	1348796	Symbol	find_command		1348475						
ANR	1348797	Symbol	cmdline		1348475						
ANR	1348798	Symbol	breakline		1348475						
ANR	1348799	Symbol	_		1348475						
ANR	1348800	Symbol	errno		1348475						
ANR	1348801	Symbol	c		1348475						
ANR	1348802	Symbol	NULL		1348475						
ANR	1348803	Symbol	* cmdline		1348475						
ANR	1348804	Symbol	fetchline		1348475						
ANR	1348805	Symbol	i		1348475						
ANR	1348806	Symbol	& c		1348475						
ANR	1348807	Symbol	j		1348475						
ANR	1348808	Symbol	stderr		1348475						
ANR	1348809	Symbol	done		1348475						
ANR	1348810	Symbol	command		1348475						
ANR	1348811	Symbol	ct -> flags		1348475						
ANR	1348812	Symbol	strerror		1348475						
ANR	1348813	Symbol	input		1348475						
ANR	1348814	Symbol	ct		1348475						
ANR	1348815	Symbol	* i		1348475						
ANR	1348816	Symbol	* ct		1348475						
ANR	1348817	Symbol	v		1348475						
ANR	1348818	Symbol	strdup		1348475						
ANR	1348819	Symbol	ncmdline		1348475						
