command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3173475	File	/home/p4ultr4n/workplace/ReVeal/raw_code/ff_aac_search_for_is_0.c								
ANR	3173476	Function	ff_aac_search_for_is	1:0:0:2981							
ANR	3173477	FunctionDef	"ff_aac_search_for_is (AACEncContext * s , AVCodecContext * avctx , ChannelElement * cpe)"		3173476	0					
ANR	3173478	CompoundStatement		3:0:89:2981	3173476	0					
ANR	3173479	IdentifierDeclStatement	SingleChannelElement * sce0 = & cpe -> ch [ 0 ] ;	5:4:96:136	3173476	0	True				
ANR	3173480	IdentifierDecl	* sce0 = & cpe -> ch [ 0 ]		3173476	0					
ANR	3173481	IdentifierDeclType	SingleChannelElement *		3173476	0					
ANR	3173482	Identifier	sce0		3173476	1					
ANR	3173483	AssignmentExpression	* sce0 = & cpe -> ch [ 0 ]		3173476	2		=			
ANR	3173484	Identifier	sce0		3173476	0					
ANR	3173485	UnaryOperationExpression	& cpe -> ch [ 0 ]		3173476	1					
ANR	3173486	UnaryOperator	&		3173476	0					
ANR	3173487	ArrayIndexing	cpe -> ch [ 0 ]		3173476	1					
ANR	3173488	PtrMemberAccess	cpe -> ch		3173476	0					
ANR	3173489	Identifier	cpe		3173476	0					
ANR	3173490	Identifier	ch		3173476	1					
ANR	3173491	PrimaryExpression	0		3173476	1					
ANR	3173492	IdentifierDeclStatement	SingleChannelElement * sce1 = & cpe -> ch [ 1 ] ;	7:4:143:183	3173476	1	True				
ANR	3173493	IdentifierDecl	* sce1 = & cpe -> ch [ 1 ]		3173476	0					
ANR	3173494	IdentifierDeclType	SingleChannelElement *		3173476	0					
ANR	3173495	Identifier	sce1		3173476	1					
ANR	3173496	AssignmentExpression	* sce1 = & cpe -> ch [ 1 ]		3173476	2		=			
ANR	3173497	Identifier	sce1		3173476	0					
ANR	3173498	UnaryOperationExpression	& cpe -> ch [ 1 ]		3173476	1					
ANR	3173499	UnaryOperator	&		3173476	0					
ANR	3173500	ArrayIndexing	cpe -> ch [ 1 ]		3173476	1					
ANR	3173501	PtrMemberAccess	cpe -> ch		3173476	0					
ANR	3173502	Identifier	cpe		3173476	0					
ANR	3173503	Identifier	ch		3173476	1					
ANR	3173504	PrimaryExpression	1		3173476	1					
ANR	3173505	IdentifierDeclStatement	"int start = 0 , count = 0 , w , w2 , g , i , prev_sf1 = - 1 ;"	9:4:190:242	3173476	2	True				
ANR	3173506	IdentifierDecl	start = 0		3173476	0					
ANR	3173507	IdentifierDeclType	int		3173476	0					
ANR	3173508	Identifier	start		3173476	1					
ANR	3173509	AssignmentExpression	start = 0		3173476	2		=			
ANR	3173510	Identifier	start		3173476	0					
ANR	3173511	PrimaryExpression	0		3173476	1					
ANR	3173512	IdentifierDecl	count = 0		3173476	1					
ANR	3173513	IdentifierDeclType	int		3173476	0					
ANR	3173514	Identifier	count		3173476	1					
ANR	3173515	AssignmentExpression	count = 0		3173476	2		=			
ANR	3173516	Identifier	count		3173476	0					
ANR	3173517	PrimaryExpression	0		3173476	1					
ANR	3173518	IdentifierDecl	w		3173476	2					
ANR	3173519	IdentifierDeclType	int		3173476	0					
ANR	3173520	Identifier	w		3173476	1					
ANR	3173521	IdentifierDecl	w2		3173476	3					
ANR	3173522	IdentifierDeclType	int		3173476	0					
ANR	3173523	Identifier	w2		3173476	1					
ANR	3173524	IdentifierDecl	g		3173476	4					
ANR	3173525	IdentifierDeclType	int		3173476	0					
ANR	3173526	Identifier	g		3173476	1					
ANR	3173527	IdentifierDecl	i		3173476	5					
ANR	3173528	IdentifierDeclType	int		3173476	0					
ANR	3173529	Identifier	i		3173476	1					
ANR	3173530	IdentifierDecl	prev_sf1 = - 1		3173476	6					
ANR	3173531	IdentifierDeclType	int		3173476	0					
ANR	3173532	Identifier	prev_sf1		3173476	1					
ANR	3173533	AssignmentExpression	prev_sf1 = - 1		3173476	2		=			
ANR	3173534	Identifier	prev_sf1		3173476	0					
ANR	3173535	UnaryOperationExpression	- 1		3173476	1					
ANR	3173536	UnaryOperator	-		3173476	0					
ANR	3173537	PrimaryExpression	1		3173476	1					
ANR	3173538	IdentifierDeclStatement	const float freq_mult = avctx -> sample_rate / ( 1024.0f / sce0 -> ics . num_windows ) / 2.0f ;	11:4:249:328	3173476	3	True				
ANR	3173539	IdentifierDecl	freq_mult = avctx -> sample_rate / ( 1024.0f / sce0 -> ics . num_windows ) / 2.0f		3173476	0					
ANR	3173540	IdentifierDeclType	const float		3173476	0					
ANR	3173541	Identifier	freq_mult		3173476	1					
ANR	3173542	AssignmentExpression	freq_mult = avctx -> sample_rate / ( 1024.0f / sce0 -> ics . num_windows ) / 2.0f		3173476	2		=			
ANR	3173543	Identifier	freq_mult		3173476	0					
ANR	3173544	MultiplicativeExpression	avctx -> sample_rate / ( 1024.0f / sce0 -> ics . num_windows ) / 2.0f		3173476	1		/			
ANR	3173545	PtrMemberAccess	avctx -> sample_rate		3173476	0					
ANR	3173546	Identifier	avctx		3173476	0					
ANR	3173547	Identifier	sample_rate		3173476	1					
ANR	3173548	MultiplicativeExpression	( 1024.0f / sce0 -> ics . num_windows ) / 2.0f		3173476	1		/			
ANR	3173549	MultiplicativeExpression	1024.0f / sce0 -> ics . num_windows		3173476	0		/			
ANR	3173550	PrimaryExpression	1024.0f		3173476	0					
ANR	3173551	MemberAccess	sce0 -> ics . num_windows		3173476	1					
ANR	3173552	PtrMemberAccess	sce0 -> ics		3173476	0					
ANR	3173553	Identifier	sce0		3173476	0					
ANR	3173554	Identifier	ics		3173476	1					
ANR	3173555	Identifier	num_windows		3173476	1					
ANR	3173556	PrimaryExpression	2.0f		3173476	1					
ANR	3173557	IdentifierDeclStatement	uint8_t nextband1 [ 128 ] ;	13:4:335:357	3173476	4	True				
ANR	3173558	IdentifierDecl	nextband1 [ 128 ]		3173476	0					
ANR	3173559	IdentifierDeclType	uint8_t [ 128 ]		3173476	0					
ANR	3173560	Identifier	nextband1		3173476	1					
ANR	3173561	PrimaryExpression	128		3173476	2					
ANR	3173562	IfStatement	if ( ! cpe -> common_window )		3173476	5					
ANR	3173563	Condition	! cpe -> common_window	17:8:370:388	3173476	0	True				
ANR	3173564	UnaryOperationExpression	! cpe -> common_window		3173476	0					
ANR	3173565	UnaryOperator	!		3173476	0					
ANR	3173566	PtrMemberAccess	cpe -> common_window		3173476	1					
ANR	3173567	Identifier	cpe		3173476	0					
ANR	3173568	Identifier	common_window		3173476	1					
ANR	3173569	ReturnStatement	return ;	19:8:400:406	3173476	1	True				
ANR	3173570	ExpressionStatement	"ff_init_nextband_map ( sce1 , nextband1 )"	25:4:456:493	3173476	6	True				
ANR	3173571	CallExpression	"ff_init_nextband_map ( sce1 , nextband1 )"		3173476	0					
ANR	3173572	Callee	ff_init_nextband_map		3173476	0					
ANR	3173573	Identifier	ff_init_nextband_map		3173476	0					
ANR	3173574	ArgumentList	sce1		3173476	1					
ANR	3173575	Argument	sce1		3173476	0					
ANR	3173576	Identifier	sce1		3173476	0					
ANR	3173577	Argument	nextband1		3173476	1					
ANR	3173578	Identifier	nextband1		3173476	0					
ANR	3173579	ForStatement	for ( w = 0 ; w < sce0 -> ics . num_windows ; w += sce0 -> ics . group_len [ w ] )		3173476	7					
ANR	3173580	ForInit	w = 0 ;	29:9:507:512	3173476	0	True				
ANR	3173581	AssignmentExpression	w = 0		3173476	0		=			
ANR	3173582	Identifier	w		3173476	0					
ANR	3173583	PrimaryExpression	0		3173476	1					
ANR	3173584	Condition	w < sce0 -> ics . num_windows	29:16:514:538	3173476	1	True				
ANR	3173585	RelationalExpression	w < sce0 -> ics . num_windows		3173476	0		<			
ANR	3173586	Identifier	w		3173476	0					
ANR	3173587	MemberAccess	sce0 -> ics . num_windows		3173476	1					
ANR	3173588	PtrMemberAccess	sce0 -> ics		3173476	0					
ANR	3173589	Identifier	sce0		3173476	0					
ANR	3173590	Identifier	ics		3173476	1					
ANR	3173591	Identifier	num_windows		3173476	1					
ANR	3173592	AssignmentExpression	w += sce0 -> ics . group_len [ w ]	29:43:541:567	3173476	2	True	+=			
ANR	3173593	Identifier	w		3173476	0					
ANR	3173594	ArrayIndexing	sce0 -> ics . group_len [ w ]		3173476	1					
ANR	3173595	MemberAccess	sce0 -> ics . group_len		3173476	0					
ANR	3173596	PtrMemberAccess	sce0 -> ics		3173476	0					
ANR	3173597	Identifier	sce0		3173476	0					
ANR	3173598	Identifier	ics		3173476	1					
ANR	3173599	Identifier	group_len		3173476	1					
ANR	3173600	Identifier	w		3173476	1					
ANR	3173601	CompoundStatement		27:72:480:480	3173476	3					
ANR	3173602	ExpressionStatement	start = 0	31:8:581:590	3173476	0	True				
ANR	3173603	AssignmentExpression	start = 0		3173476	0		=			
ANR	3173604	Identifier	start		3173476	0					
ANR	3173605	PrimaryExpression	0		3173476	1					
ANR	3173606	ForStatement	for ( g = 0 ; g < sce0 -> ics . num_swb ; g ++ )		3173476	1					
ANR	3173607	ForInit	g = 0 ;	33:13:606:611	3173476	0	True				
ANR	3173608	AssignmentExpression	g = 0		3173476	0		=			
ANR	3173609	Identifier	g		3173476	0					
ANR	3173610	PrimaryExpression	0		3173476	1					
ANR	3173611	Condition	g < sce0 -> ics . num_swb	33:21:614:634	3173476	1	True				
ANR	3173612	RelationalExpression	g < sce0 -> ics . num_swb		3173476	0		<			
ANR	3173613	Identifier	g		3173476	0					
ANR	3173614	MemberAccess	sce0 -> ics . num_swb		3173476	1					
ANR	3173615	PtrMemberAccess	sce0 -> ics		3173476	0					
ANR	3173616	Identifier	sce0		3173476	0					
ANR	3173617	Identifier	ics		3173476	1					
ANR	3173618	Identifier	num_swb		3173476	1					
ANR	3173619	PostIncDecOperationExpression	g ++	33:44:637:639	3173476	2	True				
ANR	3173620	Identifier	g		3173476	0					
ANR	3173621	IncDec	++		3173476	1					
ANR	3173622	CompoundStatement		31:49:552:552	3173476	3					
ANR	3173623	IfStatement	"if ( start * freq_mult > INT_STEREO_LOW_LIMIT * ( s -> lambda / 170.0f ) && cpe -> ch [ 0 ] . band_type [ w * 16 + g ] != NOISE_BT && ! cpe -> ch [ 0 ] . zeroes [ w * 16 + g ] && cpe -> ch [ 1 ] . band_type [ w * 16 + g ] != NOISE_BT && ! cpe -> ch [ 1 ] . zeroes [ w * 16 + g ] && ff_sfdelta_can_remove_band ( sce1 , nextband1 , prev_sf1 , w * 16 + g ) )"		3173476	0					
ANR	3173624	Condition	"start * freq_mult > INT_STEREO_LOW_LIMIT * ( s -> lambda / 170.0f ) && cpe -> ch [ 0 ] . band_type [ w * 16 + g ] != NOISE_BT && ! cpe -> ch [ 0 ] . zeroes [ w * 16 + g ] && cpe -> ch [ 1 ] . band_type [ w * 16 + g ] != NOISE_BT && ! cpe -> ch [ 1 ] . zeroes [ w * 16 + g ] && ff_sfdelta_can_remove_band ( sce1 , nextband1 , prev_sf1 , w * 16 + g )"	35:16:661:981	3173476	0	True				
ANR	3173625	AndExpression	"start * freq_mult > INT_STEREO_LOW_LIMIT * ( s -> lambda / 170.0f ) && cpe -> ch [ 0 ] . band_type [ w * 16 + g ] != NOISE_BT && ! cpe -> ch [ 0 ] . zeroes [ w * 16 + g ] && cpe -> ch [ 1 ] . band_type [ w * 16 + g ] != NOISE_BT && ! cpe -> ch [ 1 ] . zeroes [ w * 16 + g ] && ff_sfdelta_can_remove_band ( sce1 , nextband1 , prev_sf1 , w * 16 + g )"		3173476	0		&&			
ANR	3173626	RelationalExpression	start * freq_mult > INT_STEREO_LOW_LIMIT * ( s -> lambda / 170.0f )		3173476	0		>			
ANR	3173627	MultiplicativeExpression	start * freq_mult		3173476	0		*			
ANR	3173628	Identifier	start		3173476	0					
ANR	3173629	Identifier	freq_mult		3173476	1					
ANR	3173630	MultiplicativeExpression	INT_STEREO_LOW_LIMIT * ( s -> lambda / 170.0f )		3173476	1		*			
ANR	3173631	Identifier	INT_STEREO_LOW_LIMIT		3173476	0					
ANR	3173632	MultiplicativeExpression	s -> lambda / 170.0f		3173476	1		/			
ANR	3173633	PtrMemberAccess	s -> lambda		3173476	0					
ANR	3173634	Identifier	s		3173476	0					
ANR	3173635	Identifier	lambda		3173476	1					
ANR	3173636	PrimaryExpression	170.0f		3173476	1					
ANR	3173637	AndExpression	"cpe -> ch [ 0 ] . band_type [ w * 16 + g ] != NOISE_BT && ! cpe -> ch [ 0 ] . zeroes [ w * 16 + g ] && cpe -> ch [ 1 ] . band_type [ w * 16 + g ] != NOISE_BT && ! cpe -> ch [ 1 ] . zeroes [ w * 16 + g ] && ff_sfdelta_can_remove_band ( sce1 , nextband1 , prev_sf1 , w * 16 + g )"		3173476	1		&&			
ANR	3173638	EqualityExpression	cpe -> ch [ 0 ] . band_type [ w * 16 + g ] != NOISE_BT		3173476	0		!=			
ANR	3173639	ArrayIndexing	cpe -> ch [ 0 ] . band_type [ w * 16 + g ]		3173476	0					
ANR	3173640	MemberAccess	cpe -> ch [ 0 ] . band_type		3173476	0					
ANR	3173641	ArrayIndexing	cpe -> ch [ 0 ]		3173476	0					
ANR	3173642	PtrMemberAccess	cpe -> ch		3173476	0					
ANR	3173643	Identifier	cpe		3173476	0					
ANR	3173644	Identifier	ch		3173476	1					
ANR	3173645	PrimaryExpression	0		3173476	1					
ANR	3173646	Identifier	band_type		3173476	1					
ANR	3173647	AdditiveExpression	w * 16 + g		3173476	1		+			
ANR	3173648	MultiplicativeExpression	w * 16		3173476	0		*			
ANR	3173649	Identifier	w		3173476	0					
ANR	3173650	PrimaryExpression	16		3173476	1					
ANR	3173651	Identifier	g		3173476	1					
ANR	3173652	Identifier	NOISE_BT		3173476	1					
ANR	3173653	AndExpression	"! cpe -> ch [ 0 ] . zeroes [ w * 16 + g ] && cpe -> ch [ 1 ] . band_type [ w * 16 + g ] != NOISE_BT && ! cpe -> ch [ 1 ] . zeroes [ w * 16 + g ] && ff_sfdelta_can_remove_band ( sce1 , nextband1 , prev_sf1 , w * 16 + g )"		3173476	1		&&			
ANR	3173654	UnaryOperationExpression	! cpe -> ch [ 0 ] . zeroes [ w * 16 + g ]		3173476	0					
ANR	3173655	UnaryOperator	!		3173476	0					
ANR	3173656	ArrayIndexing	cpe -> ch [ 0 ] . zeroes [ w * 16 + g ]		3173476	1					
ANR	3173657	MemberAccess	cpe -> ch [ 0 ] . zeroes		3173476	0					
ANR	3173658	ArrayIndexing	cpe -> ch [ 0 ]		3173476	0					
ANR	3173659	PtrMemberAccess	cpe -> ch		3173476	0					
ANR	3173660	Identifier	cpe		3173476	0					
ANR	3173661	Identifier	ch		3173476	1					
ANR	3173662	PrimaryExpression	0		3173476	1					
ANR	3173663	Identifier	zeroes		3173476	1					
ANR	3173664	AdditiveExpression	w * 16 + g		3173476	1		+			
ANR	3173665	MultiplicativeExpression	w * 16		3173476	0		*			
ANR	3173666	Identifier	w		3173476	0					
ANR	3173667	PrimaryExpression	16		3173476	1					
ANR	3173668	Identifier	g		3173476	1					
ANR	3173669	AndExpression	"cpe -> ch [ 1 ] . band_type [ w * 16 + g ] != NOISE_BT && ! cpe -> ch [ 1 ] . zeroes [ w * 16 + g ] && ff_sfdelta_can_remove_band ( sce1 , nextband1 , prev_sf1 , w * 16 + g )"		3173476	1		&&			
ANR	3173670	EqualityExpression	cpe -> ch [ 1 ] . band_type [ w * 16 + g ] != NOISE_BT		3173476	0		!=			
ANR	3173671	ArrayIndexing	cpe -> ch [ 1 ] . band_type [ w * 16 + g ]		3173476	0					
ANR	3173672	MemberAccess	cpe -> ch [ 1 ] . band_type		3173476	0					
ANR	3173673	ArrayIndexing	cpe -> ch [ 1 ]		3173476	0					
ANR	3173674	PtrMemberAccess	cpe -> ch		3173476	0					
ANR	3173675	Identifier	cpe		3173476	0					
ANR	3173676	Identifier	ch		3173476	1					
ANR	3173677	PrimaryExpression	1		3173476	1					
ANR	3173678	Identifier	band_type		3173476	1					
ANR	3173679	AdditiveExpression	w * 16 + g		3173476	1		+			
ANR	3173680	MultiplicativeExpression	w * 16		3173476	0		*			
ANR	3173681	Identifier	w		3173476	0					
ANR	3173682	PrimaryExpression	16		3173476	1					
ANR	3173683	Identifier	g		3173476	1					
ANR	3173684	Identifier	NOISE_BT		3173476	1					
ANR	3173685	AndExpression	"! cpe -> ch [ 1 ] . zeroes [ w * 16 + g ] && ff_sfdelta_can_remove_band ( sce1 , nextband1 , prev_sf1 , w * 16 + g )"		3173476	1		&&			
ANR	3173686	UnaryOperationExpression	! cpe -> ch [ 1 ] . zeroes [ w * 16 + g ]		3173476	0					
ANR	3173687	UnaryOperator	!		3173476	0					
ANR	3173688	ArrayIndexing	cpe -> ch [ 1 ] . zeroes [ w * 16 + g ]		3173476	1					
ANR	3173689	MemberAccess	cpe -> ch [ 1 ] . zeroes		3173476	0					
ANR	3173690	ArrayIndexing	cpe -> ch [ 1 ]		3173476	0					
ANR	3173691	PtrMemberAccess	cpe -> ch		3173476	0					
ANR	3173692	Identifier	cpe		3173476	0					
ANR	3173693	Identifier	ch		3173476	1					
ANR	3173694	PrimaryExpression	1		3173476	1					
ANR	3173695	Identifier	zeroes		3173476	1					
ANR	3173696	AdditiveExpression	w * 16 + g		3173476	1		+			
ANR	3173697	MultiplicativeExpression	w * 16		3173476	0		*			
ANR	3173698	Identifier	w		3173476	0					
ANR	3173699	PrimaryExpression	16		3173476	1					
ANR	3173700	Identifier	g		3173476	1					
ANR	3173701	CallExpression	"ff_sfdelta_can_remove_band ( sce1 , nextband1 , prev_sf1 , w * 16 + g )"		3173476	1					
ANR	3173702	Callee	ff_sfdelta_can_remove_band		3173476	0					
ANR	3173703	Identifier	ff_sfdelta_can_remove_band		3173476	0					
ANR	3173704	ArgumentList	sce1		3173476	1					
ANR	3173705	Argument	sce1		3173476	0					
ANR	3173706	Identifier	sce1		3173476	0					
ANR	3173707	Argument	nextband1		3173476	1					
ANR	3173708	Identifier	nextband1		3173476	0					
ANR	3173709	Argument	prev_sf1		3173476	2					
ANR	3173710	Identifier	prev_sf1		3173476	0					
ANR	3173711	Argument	w * 16 + g		3173476	3					
ANR	3173712	AdditiveExpression	w * 16 + g		3173476	0		+			
ANR	3173713	MultiplicativeExpression	w * 16		3173476	0		*			
ANR	3173714	Identifier	w		3173476	0					
ANR	3173715	PrimaryExpression	16		3173476	1					
ANR	3173716	Identifier	g		3173476	1					
ANR	3173717	CompoundStatement		43:16:995:1036	3173476	1					
ANR	3173718	IdentifierDeclStatement	"float ener0 = 0.0f , ener1 = 0.0f , ener01 = 0.0f , ener01p = 0.0f ;"	43:16:1003:1066	3173476	0	True				
ANR	3173719	IdentifierDecl	ener0 = 0.0f		3173476	0					
ANR	3173720	IdentifierDeclType	float		3173476	0					
ANR	3173721	Identifier	ener0		3173476	1					
ANR	3173722	AssignmentExpression	ener0 = 0.0f		3173476	2		=			
ANR	3173723	Identifier	ener0		3173476	0					
ANR	3173724	PrimaryExpression	0.0f		3173476	1					
ANR	3173725	IdentifierDecl	ener1 = 0.0f		3173476	1					
ANR	3173726	IdentifierDeclType	float		3173476	0					
ANR	3173727	Identifier	ener1		3173476	1					
ANR	3173728	AssignmentExpression	ener1 = 0.0f		3173476	2		=			
ANR	3173729	Identifier	ener1		3173476	0					
ANR	3173730	PrimaryExpression	0.0f		3173476	1					
ANR	3173731	IdentifierDecl	ener01 = 0.0f		3173476	2					
ANR	3173732	IdentifierDeclType	float		3173476	0					
ANR	3173733	Identifier	ener01		3173476	1					
ANR	3173734	AssignmentExpression	ener01 = 0.0f		3173476	2		=			
ANR	3173735	Identifier	ener01		3173476	0					
ANR	3173736	PrimaryExpression	0.0f		3173476	1					
ANR	3173737	IdentifierDecl	ener01p = 0.0f		3173476	3					
ANR	3173738	IdentifierDeclType	float		3173476	0					
ANR	3173739	Identifier	ener01p		3173476	1					
ANR	3173740	AssignmentExpression	ener01p = 0.0f		3173476	2		=			
ANR	3173741	Identifier	ener01p		3173476	0					
ANR	3173742	PrimaryExpression	0.0f		3173476	1					
ANR	3173743	IdentifierDeclStatement	"struct AACISError ph_err1 , ph_err2 , * best ;"	45:16:1085:1126	3173476	1	True				
ANR	3173744	IdentifierDecl	ph_err1		3173476	0					
ANR	3173745	IdentifierDeclType	struct AACISError		3173476	0					
ANR	3173746	Identifier	ph_err1		3173476	1					
ANR	3173747	IdentifierDecl	ph_err2		3173476	1					
ANR	3173748	IdentifierDeclType	struct AACISError		3173476	0					
ANR	3173749	Identifier	ph_err2		3173476	1					
ANR	3173750	IdentifierDecl	* best		3173476	2					
ANR	3173751	IdentifierDeclType	struct AACISError *		3173476	0					
ANR	3173752	Identifier	best		3173476	1					
ANR	3173753	IfStatement	if ( sce0 -> band_type [ w * 16 + g ] == NOISE_BT || sce1 -> band_type [ w * 16 + g ] == NOISE_BT )		3173476	2					
ANR	3173754	Condition	sce0 -> band_type [ w * 16 + g ] == NOISE_BT || sce1 -> band_type [ w * 16 + g ] == NOISE_BT	47:20:1149:1243	3173476	0	True				
ANR	3173755	OrExpression	sce0 -> band_type [ w * 16 + g ] == NOISE_BT || sce1 -> band_type [ w * 16 + g ] == NOISE_BT		3173476	0		||			
ANR	3173756	EqualityExpression	sce0 -> band_type [ w * 16 + g ] == NOISE_BT		3173476	0		==			
ANR	3173757	ArrayIndexing	sce0 -> band_type [ w * 16 + g ]		3173476	0					
ANR	3173758	PtrMemberAccess	sce0 -> band_type		3173476	0					
ANR	3173759	Identifier	sce0		3173476	0					
ANR	3173760	Identifier	band_type		3173476	1					
ANR	3173761	AdditiveExpression	w * 16 + g		3173476	1		+			
ANR	3173762	MultiplicativeExpression	w * 16		3173476	0		*			
ANR	3173763	Identifier	w		3173476	0					
ANR	3173764	PrimaryExpression	16		3173476	1					
ANR	3173765	Identifier	g		3173476	1					
ANR	3173766	Identifier	NOISE_BT		3173476	1					
ANR	3173767	EqualityExpression	sce1 -> band_type [ w * 16 + g ] == NOISE_BT		3173476	1		==			
ANR	3173768	ArrayIndexing	sce1 -> band_type [ w * 16 + g ]		3173476	0					
ANR	3173769	PtrMemberAccess	sce1 -> band_type		3173476	0					
ANR	3173770	Identifier	sce1		3173476	0					
ANR	3173771	Identifier	band_type		3173476	1					
ANR	3173772	AdditiveExpression	w * 16 + g		3173476	1		+			
ANR	3173773	MultiplicativeExpression	w * 16		3173476	0		*			
ANR	3173774	Identifier	w		3173476	0					
ANR	3173775	PrimaryExpression	16		3173476	1					
ANR	3173776	Identifier	g		3173476	1					
ANR	3173777	Identifier	NOISE_BT		3173476	1					
ANR	3173778	CompoundStatement		47:57:1156:1156	3173476	1					
ANR	3173779	ExpressionStatement	start += sce0 -> ics . swb_sizes [ g ]	51:20:1269:1300	3173476	0	True				
ANR	3173780	AssignmentExpression	start += sce0 -> ics . swb_sizes [ g ]		3173476	0		+=			
ANR	3173781	Identifier	start		3173476	0					
ANR	3173782	ArrayIndexing	sce0 -> ics . swb_sizes [ g ]		3173476	1					
ANR	3173783	MemberAccess	sce0 -> ics . swb_sizes		3173476	0					
ANR	3173784	PtrMemberAccess	sce0 -> ics		3173476	0					
ANR	3173785	Identifier	sce0		3173476	0					
ANR	3173786	Identifier	ics		3173476	1					
ANR	3173787	Identifier	swb_sizes		3173476	1					
ANR	3173788	Identifier	g		3173476	1					
ANR	3173789	ContinueStatement	continue ;	53:20:1323:1331	3173476	1	True				
ANR	3173790	ForStatement	for ( w2 = 0 ; w2 < sce0 -> ics . group_len [ w ] ; w2 ++ )		3173476	3					
ANR	3173791	ForInit	w2 = 0 ;	57:21:1374:1380	3173476	0	True				
ANR	3173792	AssignmentExpression	w2 = 0		3173476	0		=			
ANR	3173793	Identifier	w2		3173476	0					
ANR	3173794	PrimaryExpression	0		3173476	1					
ANR	3173795	Condition	w2 < sce0 -> ics . group_len [ w ]	57:29:1382:1408	3173476	1	True				
ANR	3173796	RelationalExpression	w2 < sce0 -> ics . group_len [ w ]		3173476	0		<			
ANR	3173797	Identifier	w2		3173476	0					
ANR	3173798	ArrayIndexing	sce0 -> ics . group_len [ w ]		3173476	1					
ANR	3173799	MemberAccess	sce0 -> ics . group_len		3173476	0					
ANR	3173800	PtrMemberAccess	sce0 -> ics		3173476	0					
ANR	3173801	Identifier	sce0		3173476	0					
ANR	3173802	Identifier	ics		3173476	1					
ANR	3173803	Identifier	group_len		3173476	1					
ANR	3173804	Identifier	w		3173476	1					
ANR	3173805	PostIncDecOperationExpression	w2 ++	57:58:1411:1414	3173476	2	True				
ANR	3173806	Identifier	w2		3173476	0					
ANR	3173807	IncDec	++		3173476	1					
ANR	3173808	CompoundStatement		55:64:1327:1327	3173476	3					
ANR	3173809	ForStatement	for ( i = 0 ; i < sce0 -> ics . swb_sizes [ g ] ; i ++ )		3173476	0					
ANR	3173810	ForInit	i = 0 ;	59:25:1445:1450	3173476	0	True				
ANR	3173811	AssignmentExpression	i = 0		3173476	0		=			
ANR	3173812	Identifier	i		3173476	0					
ANR	3173813	PrimaryExpression	0		3173476	1					
ANR	3173814	Condition	i < sce0 -> ics . swb_sizes [ g ]	59:32:1452:1477	3173476	1	True				
ANR	3173815	RelationalExpression	i < sce0 -> ics . swb_sizes [ g ]		3173476	0		<			
ANR	3173816	Identifier	i		3173476	0					
ANR	3173817	ArrayIndexing	sce0 -> ics . swb_sizes [ g ]		3173476	1					
ANR	3173818	MemberAccess	sce0 -> ics . swb_sizes		3173476	0					
ANR	3173819	PtrMemberAccess	sce0 -> ics		3173476	0					
ANR	3173820	Identifier	sce0		3173476	0					
ANR	3173821	Identifier	ics		3173476	1					
ANR	3173822	Identifier	swb_sizes		3173476	1					
ANR	3173823	Identifier	g		3173476	1					
ANR	3173824	PostIncDecOperationExpression	i ++	59:60:1480:1482	3173476	2	True				
ANR	3173825	Identifier	i		3173476	0					
ANR	3173826	IncDec	++		3173476	1					
ANR	3173827	CompoundStatement		61:24:1502:1555	3173476	3					
ANR	3173828	IdentifierDeclStatement	float coef0 = fabsf ( sce0 -> coeffs [ start + ( w + w2 ) * 128 + i ] ) ;	61:24:1512:1565	3173476	0	True				
ANR	3173829	IdentifierDecl	coef0 = fabsf ( sce0 -> coeffs [ start + ( w + w2 ) * 128 + i ] )		3173476	0					
ANR	3173830	IdentifierDeclType	float		3173476	0					
ANR	3173831	Identifier	coef0		3173476	1					
ANR	3173832	AssignmentExpression	coef0 = fabsf ( sce0 -> coeffs [ start + ( w + w2 ) * 128 + i ] )		3173476	2		=			
ANR	3173833	Identifier	coef0		3173476	0					
ANR	3173834	CallExpression	fabsf ( sce0 -> coeffs [ start + ( w + w2 ) * 128 + i ] )		3173476	1					
ANR	3173835	Callee	fabsf		3173476	0					
ANR	3173836	Identifier	fabsf		3173476	0					
ANR	3173837	ArgumentList	sce0 -> coeffs [ start + ( w + w2 ) * 128 + i ]		3173476	1					
ANR	3173838	Argument	sce0 -> coeffs [ start + ( w + w2 ) * 128 + i ]		3173476	0					
ANR	3173839	ArrayIndexing	sce0 -> coeffs [ start + ( w + w2 ) * 128 + i ]		3173476	0					
ANR	3173840	PtrMemberAccess	sce0 -> coeffs		3173476	0					
ANR	3173841	Identifier	sce0		3173476	0					
ANR	3173842	Identifier	coeffs		3173476	1					
ANR	3173843	AdditiveExpression	start + ( w + w2 ) * 128 + i		3173476	1		+			
ANR	3173844	Identifier	start		3173476	0					
ANR	3173845	AdditiveExpression	( w + w2 ) * 128 + i		3173476	1		+			
ANR	3173846	MultiplicativeExpression	( w + w2 ) * 128		3173476	0		*			
ANR	3173847	AdditiveExpression	w + w2		3173476	0		+			
ANR	3173848	Identifier	w		3173476	0					
ANR	3173849	Identifier	w2		3173476	1					
ANR	3173850	PrimaryExpression	128		3173476	1					
ANR	3173851	Identifier	i		3173476	1					
ANR	3173852	IdentifierDeclStatement	float coef1 = fabsf ( sce1 -> coeffs [ start + ( w + w2 ) * 128 + i ] ) ;	63:24:1592:1645	3173476	1	True				
ANR	3173853	IdentifierDecl	coef1 = fabsf ( sce1 -> coeffs [ start + ( w + w2 ) * 128 + i ] )		3173476	0					
ANR	3173854	IdentifierDeclType	float		3173476	0					
ANR	3173855	Identifier	coef1		3173476	1					
ANR	3173856	AssignmentExpression	coef1 = fabsf ( sce1 -> coeffs [ start + ( w + w2 ) * 128 + i ] )		3173476	2		=			
ANR	3173857	Identifier	coef1		3173476	0					
ANR	3173858	CallExpression	fabsf ( sce1 -> coeffs [ start + ( w + w2 ) * 128 + i ] )		3173476	1					
ANR	3173859	Callee	fabsf		3173476	0					
ANR	3173860	Identifier	fabsf		3173476	0					
ANR	3173861	ArgumentList	sce1 -> coeffs [ start + ( w + w2 ) * 128 + i ]		3173476	1					
ANR	3173862	Argument	sce1 -> coeffs [ start + ( w + w2 ) * 128 + i ]		3173476	0					
ANR	3173863	ArrayIndexing	sce1 -> coeffs [ start + ( w + w2 ) * 128 + i ]		3173476	0					
ANR	3173864	PtrMemberAccess	sce1 -> coeffs		3173476	0					
ANR	3173865	Identifier	sce1		3173476	0					
ANR	3173866	Identifier	coeffs		3173476	1					
ANR	3173867	AdditiveExpression	start + ( w + w2 ) * 128 + i		3173476	1		+			
ANR	3173868	Identifier	start		3173476	0					
ANR	3173869	AdditiveExpression	( w + w2 ) * 128 + i		3173476	1		+			
ANR	3173870	MultiplicativeExpression	( w + w2 ) * 128		3173476	0		*			
ANR	3173871	AdditiveExpression	w + w2		3173476	0		+			
ANR	3173872	Identifier	w		3173476	0					
ANR	3173873	Identifier	w2		3173476	1					
ANR	3173874	PrimaryExpression	128		3173476	1					
ANR	3173875	Identifier	i		3173476	1					
ANR	3173876	ExpressionStatement	ener0 += coef0 * coef0	65:24:1672:1693	3173476	2	True				
ANR	3173877	AssignmentExpression	ener0 += coef0 * coef0		3173476	0		+=			
ANR	3173878	Identifier	ener0		3173476	0					
ANR	3173879	MultiplicativeExpression	coef0 * coef0		3173476	1		*			
ANR	3173880	Identifier	coef0		3173476	0					
ANR	3173881	Identifier	coef0		3173476	1					
ANR	3173882	ExpressionStatement	ener1 += coef1 * coef1	67:24:1720:1741	3173476	3	True				
ANR	3173883	AssignmentExpression	ener1 += coef1 * coef1		3173476	0		+=			
ANR	3173884	Identifier	ener1		3173476	0					
ANR	3173885	MultiplicativeExpression	coef1 * coef1		3173476	1		*			
ANR	3173886	Identifier	coef1		3173476	0					
ANR	3173887	Identifier	coef1		3173476	1					
ANR	3173888	ExpressionStatement	ener01 += ( coef0 + coef1 ) * ( coef0 + coef1 )	69:24:1768:1809	3173476	4	True				
ANR	3173889	AssignmentExpression	ener01 += ( coef0 + coef1 ) * ( coef0 + coef1 )		3173476	0		+=			
ANR	3173890	Identifier	ener01		3173476	0					
ANR	3173891	MultiplicativeExpression	( coef0 + coef1 ) * ( coef0 + coef1 )		3173476	1		*			
ANR	3173892	AdditiveExpression	coef0 + coef1		3173476	0		+			
ANR	3173893	Identifier	coef0		3173476	0					
ANR	3173894	Identifier	coef1		3173476	1					
ANR	3173895	AdditiveExpression	coef0 + coef1		3173476	1		+			
ANR	3173896	Identifier	coef0		3173476	0					
ANR	3173897	Identifier	coef1		3173476	1					
ANR	3173898	ExpressionStatement	ener01p += ( coef0 - coef1 ) * ( coef0 - coef1 )	71:24:1836:1878	3173476	5	True				
ANR	3173899	AssignmentExpression	ener01p += ( coef0 - coef1 ) * ( coef0 - coef1 )		3173476	0		+=			
ANR	3173900	Identifier	ener01p		3173476	0					
ANR	3173901	MultiplicativeExpression	( coef0 - coef1 ) * ( coef0 - coef1 )		3173476	1		*			
ANR	3173902	AdditiveExpression	coef0 - coef1		3173476	0		-			
ANR	3173903	Identifier	coef0		3173476	0					
ANR	3173904	Identifier	coef1		3173476	1					
ANR	3173905	AdditiveExpression	coef0 - coef1		3173476	1		-			
ANR	3173906	Identifier	coef0		3173476	0					
ANR	3173907	Identifier	coef1		3173476	1					
ANR	3173908	ExpressionStatement	"ph_err1 = ff_aac_is_encoding_err ( s , cpe , start , w , g , ener0 , ener1 , ener01p , 0 , - 1 )"	77:16:1939:2072	3173476	4	True				
ANR	3173909	AssignmentExpression	"ph_err1 = ff_aac_is_encoding_err ( s , cpe , start , w , g , ener0 , ener1 , ener01p , 0 , - 1 )"		3173476	0		=			
ANR	3173910	Identifier	ph_err1		3173476	0					
ANR	3173911	CallExpression	"ff_aac_is_encoding_err ( s , cpe , start , w , g , ener0 , ener1 , ener01p , 0 , - 1 )"		3173476	1					
ANR	3173912	Callee	ff_aac_is_encoding_err		3173476	0					
ANR	3173913	Identifier	ff_aac_is_encoding_err		3173476	0					
ANR	3173914	ArgumentList	s		3173476	1					
ANR	3173915	Argument	s		3173476	0					
ANR	3173916	Identifier	s		3173476	0					
ANR	3173917	Argument	cpe		3173476	1					
ANR	3173918	Identifier	cpe		3173476	0					
ANR	3173919	Argument	start		3173476	2					
ANR	3173920	Identifier	start		3173476	0					
ANR	3173921	Argument	w		3173476	3					
ANR	3173922	Identifier	w		3173476	0					
ANR	3173923	Argument	g		3173476	4					
ANR	3173924	Identifier	g		3173476	0					
ANR	3173925	Argument	ener0		3173476	5					
ANR	3173926	Identifier	ener0		3173476	0					
ANR	3173927	Argument	ener1		3173476	6					
ANR	3173928	Identifier	ener1		3173476	0					
ANR	3173929	Argument	ener01p		3173476	7					
ANR	3173930	Identifier	ener01p		3173476	0					
ANR	3173931	Argument	0		3173476	8					
ANR	3173932	PrimaryExpression	0		3173476	0					
ANR	3173933	Argument	- 1		3173476	9					
ANR	3173934	UnaryOperationExpression	- 1		3173476	0					
ANR	3173935	UnaryOperator	-		3173476	0					
ANR	3173936	PrimaryExpression	1		3173476	1					
ANR	3173937	ExpressionStatement	"ph_err2 = ff_aac_is_encoding_err ( s , cpe , start , w , g , ener0 , ener1 , ener01 , 0 , + 1 )"	81:16:2091:2223	3173476	5	True				
ANR	3173938	AssignmentExpression	"ph_err2 = ff_aac_is_encoding_err ( s , cpe , start , w , g , ener0 , ener1 , ener01 , 0 , + 1 )"		3173476	0		=			
ANR	3173939	Identifier	ph_err2		3173476	0					
ANR	3173940	CallExpression	"ff_aac_is_encoding_err ( s , cpe , start , w , g , ener0 , ener1 , ener01 , 0 , + 1 )"		3173476	1					
ANR	3173941	Callee	ff_aac_is_encoding_err		3173476	0					
ANR	3173942	Identifier	ff_aac_is_encoding_err		3173476	0					
ANR	3173943	ArgumentList	s		3173476	1					
ANR	3173944	Argument	s		3173476	0					
ANR	3173945	Identifier	s		3173476	0					
ANR	3173946	Argument	cpe		3173476	1					
ANR	3173947	Identifier	cpe		3173476	0					
ANR	3173948	Argument	start		3173476	2					
ANR	3173949	Identifier	start		3173476	0					
ANR	3173950	Argument	w		3173476	3					
ANR	3173951	Identifier	w		3173476	0					
ANR	3173952	Argument	g		3173476	4					
ANR	3173953	Identifier	g		3173476	0					
ANR	3173954	Argument	ener0		3173476	5					
ANR	3173955	Identifier	ener0		3173476	0					
ANR	3173956	Argument	ener1		3173476	6					
ANR	3173957	Identifier	ener1		3173476	0					
ANR	3173958	Argument	ener01		3173476	7					
ANR	3173959	Identifier	ener01		3173476	0					
ANR	3173960	Argument	0		3173476	8					
ANR	3173961	PrimaryExpression	0		3173476	0					
ANR	3173962	Argument	+ 1		3173476	9					
ANR	3173963	UnaryOperationExpression	+ 1		3173476	0					
ANR	3173964	UnaryOperator	+		3173476	0					
ANR	3173965	PrimaryExpression	1		3173476	1					
ANR	3173966	ExpressionStatement	best = ( ph_err1 . pass && ph_err1 . error < ph_err2 . error ) ? & ph_err1 : & ph_err2	85:16:2242:2318	3173476	6	True				
ANR	3173967	AssignmentExpression	best = ( ph_err1 . pass && ph_err1 . error < ph_err2 . error ) ? & ph_err1 : & ph_err2		3173476	0		=			
ANR	3173968	Identifier	best		3173476	0					
ANR	3173969	ConditionalExpression	( ph_err1 . pass && ph_err1 . error < ph_err2 . error ) ? & ph_err1 : & ph_err2		3173476	1					
ANR	3173970	Condition	ph_err1 . pass && ph_err1 . error < ph_err2 . error		3173476	0					
ANR	3173971	AndExpression	ph_err1 . pass && ph_err1 . error < ph_err2 . error		3173476	0		&&			
ANR	3173972	MemberAccess	ph_err1 . pass		3173476	0					
ANR	3173973	Identifier	ph_err1		3173476	0					
ANR	3173974	Identifier	pass		3173476	1					
ANR	3173975	RelationalExpression	ph_err1 . error < ph_err2 . error		3173476	1		<			
ANR	3173976	MemberAccess	ph_err1 . error		3173476	0					
ANR	3173977	Identifier	ph_err1		3173476	0					
ANR	3173978	Identifier	error		3173476	1					
ANR	3173979	MemberAccess	ph_err2 . error		3173476	1					
ANR	3173980	Identifier	ph_err2		3173476	0					
ANR	3173981	Identifier	error		3173476	1					
ANR	3173982	UnaryOperationExpression	& ph_err1		3173476	1					
ANR	3173983	UnaryOperator	&		3173476	0					
ANR	3173984	Identifier	ph_err1		3173476	1					
ANR	3173985	UnaryOperationExpression	& ph_err2		3173476	2					
ANR	3173986	UnaryOperator	&		3173476	0					
ANR	3173987	Identifier	ph_err2		3173476	1					
ANR	3173988	IfStatement	if ( best -> pass )		3173476	7					
ANR	3173989	Condition	best -> pass	87:20:2341:2350	3173476	0	True				
ANR	3173990	PtrMemberAccess	best -> pass		3173476	0					
ANR	3173991	Identifier	best		3173476	0					
ANR	3173992	Identifier	pass		3173476	1					
ANR	3173993	CompoundStatement		85:32:2263:2263	3173476	1					
ANR	3173994	ExpressionStatement	cpe -> is_mask [ w * 16 + g ] = 1	89:20:2376:2400	3173476	0	True				
ANR	3173995	AssignmentExpression	cpe -> is_mask [ w * 16 + g ] = 1		3173476	0		=			
ANR	3173996	ArrayIndexing	cpe -> is_mask [ w * 16 + g ]		3173476	0					
ANR	3173997	PtrMemberAccess	cpe -> is_mask		3173476	0					
ANR	3173998	Identifier	cpe		3173476	0					
ANR	3173999	Identifier	is_mask		3173476	1					
ANR	3174000	AdditiveExpression	w * 16 + g		3173476	1		+			
ANR	3174001	MultiplicativeExpression	w * 16		3173476	0		*			
ANR	3174002	Identifier	w		3173476	0					
ANR	3174003	PrimaryExpression	16		3173476	1					
ANR	3174004	Identifier	g		3173476	1					
ANR	3174005	PrimaryExpression	1		3173476	1					
ANR	3174006	ExpressionStatement	cpe -> ms_mask [ w * 16 + g ] = 0	91:20:2423:2447	3173476	1	True				
ANR	3174007	AssignmentExpression	cpe -> ms_mask [ w * 16 + g ] = 0		3173476	0		=			
ANR	3174008	ArrayIndexing	cpe -> ms_mask [ w * 16 + g ]		3173476	0					
ANR	3174009	PtrMemberAccess	cpe -> ms_mask		3173476	0					
ANR	3174010	Identifier	cpe		3173476	0					
ANR	3174011	Identifier	ms_mask		3173476	1					
ANR	3174012	AdditiveExpression	w * 16 + g		3173476	1		+			
ANR	3174013	MultiplicativeExpression	w * 16		3173476	0		*			
ANR	3174014	Identifier	w		3173476	0					
ANR	3174015	PrimaryExpression	16		3173476	1					
ANR	3174016	Identifier	g		3173476	1					
ANR	3174017	PrimaryExpression	0		3173476	1					
ANR	3174018	ExpressionStatement	cpe -> ch [ 0 ] . is_ener [ w * 16 + g ] = sqrt ( ener0 / best -> ener01 )	93:20:2470:2525	3173476	2	True				
ANR	3174019	AssignmentExpression	cpe -> ch [ 0 ] . is_ener [ w * 16 + g ] = sqrt ( ener0 / best -> ener01 )		3173476	0		=			
ANR	3174020	ArrayIndexing	cpe -> ch [ 0 ] . is_ener [ w * 16 + g ]		3173476	0					
ANR	3174021	MemberAccess	cpe -> ch [ 0 ] . is_ener		3173476	0					
ANR	3174022	ArrayIndexing	cpe -> ch [ 0 ]		3173476	0					
ANR	3174023	PtrMemberAccess	cpe -> ch		3173476	0					
ANR	3174024	Identifier	cpe		3173476	0					
ANR	3174025	Identifier	ch		3173476	1					
ANR	3174026	PrimaryExpression	0		3173476	1					
ANR	3174027	Identifier	is_ener		3173476	1					
ANR	3174028	AdditiveExpression	w * 16 + g		3173476	1		+			
ANR	3174029	MultiplicativeExpression	w * 16		3173476	0		*			
ANR	3174030	Identifier	w		3173476	0					
ANR	3174031	PrimaryExpression	16		3173476	1					
ANR	3174032	Identifier	g		3173476	1					
ANR	3174033	CallExpression	sqrt ( ener0 / best -> ener01 )		3173476	1					
ANR	3174034	Callee	sqrt		3173476	0					
ANR	3174035	Identifier	sqrt		3173476	0					
ANR	3174036	ArgumentList	ener0 / best -> ener01		3173476	1					
ANR	3174037	Argument	ener0 / best -> ener01		3173476	0					
ANR	3174038	MultiplicativeExpression	ener0 / best -> ener01		3173476	0		/			
ANR	3174039	Identifier	ener0		3173476	0					
ANR	3174040	PtrMemberAccess	best -> ener01		3173476	1					
ANR	3174041	Identifier	best		3173476	0					
ANR	3174042	Identifier	ener01		3173476	1					
ANR	3174043	ExpressionStatement	cpe -> ch [ 1 ] . is_ener [ w * 16 + g ] = ener0 / ener1	95:20:2548:2588	3173476	3	True				
ANR	3174044	AssignmentExpression	cpe -> ch [ 1 ] . is_ener [ w * 16 + g ] = ener0 / ener1		3173476	0		=			
ANR	3174045	ArrayIndexing	cpe -> ch [ 1 ] . is_ener [ w * 16 + g ]		3173476	0					
ANR	3174046	MemberAccess	cpe -> ch [ 1 ] . is_ener		3173476	0					
ANR	3174047	ArrayIndexing	cpe -> ch [ 1 ]		3173476	0					
ANR	3174048	PtrMemberAccess	cpe -> ch		3173476	0					
ANR	3174049	Identifier	cpe		3173476	0					
ANR	3174050	Identifier	ch		3173476	1					
ANR	3174051	PrimaryExpression	1		3173476	1					
ANR	3174052	Identifier	is_ener		3173476	1					
ANR	3174053	AdditiveExpression	w * 16 + g		3173476	1		+			
ANR	3174054	MultiplicativeExpression	w * 16		3173476	0		*			
ANR	3174055	Identifier	w		3173476	0					
ANR	3174056	PrimaryExpression	16		3173476	1					
ANR	3174057	Identifier	g		3173476	1					
ANR	3174058	MultiplicativeExpression	ener0 / ener1		3173476	1		/			
ANR	3174059	Identifier	ener0		3173476	0					
ANR	3174060	Identifier	ener1		3173476	1					
ANR	3174061	ExpressionStatement	cpe -> ch [ 1 ] . band_type [ w * 16 + g ] = ( best -> phase > 0 ) ? INTENSITY_BT : INTENSITY_BT2	97:20:2611:2690	3173476	4	True				
ANR	3174062	AssignmentExpression	cpe -> ch [ 1 ] . band_type [ w * 16 + g ] = ( best -> phase > 0 ) ? INTENSITY_BT : INTENSITY_BT2		3173476	0		=			
ANR	3174063	ArrayIndexing	cpe -> ch [ 1 ] . band_type [ w * 16 + g ]		3173476	0					
ANR	3174064	MemberAccess	cpe -> ch [ 1 ] . band_type		3173476	0					
ANR	3174065	ArrayIndexing	cpe -> ch [ 1 ]		3173476	0					
ANR	3174066	PtrMemberAccess	cpe -> ch		3173476	0					
ANR	3174067	Identifier	cpe		3173476	0					
ANR	3174068	Identifier	ch		3173476	1					
ANR	3174069	PrimaryExpression	1		3173476	1					
ANR	3174070	Identifier	band_type		3173476	1					
ANR	3174071	AdditiveExpression	w * 16 + g		3173476	1		+			
ANR	3174072	MultiplicativeExpression	w * 16		3173476	0		*			
ANR	3174073	Identifier	w		3173476	0					
ANR	3174074	PrimaryExpression	16		3173476	1					
ANR	3174075	Identifier	g		3173476	1					
ANR	3174076	ConditionalExpression	( best -> phase > 0 ) ? INTENSITY_BT : INTENSITY_BT2		3173476	1					
ANR	3174077	Condition	best -> phase > 0		3173476	0					
ANR	3174078	RelationalExpression	best -> phase > 0		3173476	0		>			
ANR	3174079	PtrMemberAccess	best -> phase		3173476	0					
ANR	3174080	Identifier	best		3173476	0					
ANR	3174081	Identifier	phase		3173476	1					
ANR	3174082	PrimaryExpression	0		3173476	1					
ANR	3174083	Identifier	INTENSITY_BT		3173476	1					
ANR	3174084	Identifier	INTENSITY_BT2		3173476	2					
ANR	3174085	ExpressionStatement	count ++	99:20:2713:2720	3173476	5	True				
ANR	3174086	PostIncDecOperationExpression	count ++		3173476	0					
ANR	3174087	Identifier	count		3173476	0					
ANR	3174088	IncDec	++		3173476	1					
ANR	3174089	IfStatement	if ( ! sce1 -> zeroes [ w * 16 + g ] && sce1 -> band_type [ w * 16 + g ] < RESERVED_BT )		3173476	1					
ANR	3174090	Condition	! sce1 -> zeroes [ w * 16 + g ] && sce1 -> band_type [ w * 16 + g ] < RESERVED_BT	105:16:2773:2834	3173476	0	True				
ANR	3174091	AndExpression	! sce1 -> zeroes [ w * 16 + g ] && sce1 -> band_type [ w * 16 + g ] < RESERVED_BT		3173476	0		&&			
ANR	3174092	UnaryOperationExpression	! sce1 -> zeroes [ w * 16 + g ]		3173476	0					
ANR	3174093	UnaryOperator	!		3173476	0					
ANR	3174094	ArrayIndexing	sce1 -> zeroes [ w * 16 + g ]		3173476	1					
ANR	3174095	PtrMemberAccess	sce1 -> zeroes		3173476	0					
ANR	3174096	Identifier	sce1		3173476	0					
ANR	3174097	Identifier	zeroes		3173476	1					
ANR	3174098	AdditiveExpression	w * 16 + g		3173476	1		+			
ANR	3174099	MultiplicativeExpression	w * 16		3173476	0		*			
ANR	3174100	Identifier	w		3173476	0					
ANR	3174101	PrimaryExpression	16		3173476	1					
ANR	3174102	Identifier	g		3173476	1					
ANR	3174103	RelationalExpression	sce1 -> band_type [ w * 16 + g ] < RESERVED_BT		3173476	1		<			
ANR	3174104	ArrayIndexing	sce1 -> band_type [ w * 16 + g ]		3173476	0					
ANR	3174105	PtrMemberAccess	sce1 -> band_type		3173476	0					
ANR	3174106	Identifier	sce1		3173476	0					
ANR	3174107	Identifier	band_type		3173476	1					
ANR	3174108	AdditiveExpression	w * 16 + g		3173476	1		+			
ANR	3174109	MultiplicativeExpression	w * 16		3173476	0		*			
ANR	3174110	Identifier	w		3173476	0					
ANR	3174111	PrimaryExpression	16		3173476	1					
ANR	3174112	Identifier	g		3173476	1					
ANR	3174113	Identifier	RESERVED_BT		3173476	1					
ANR	3174114	ExpressionStatement	prev_sf1 = sce1 -> sf_idx [ w * 16 + g ]	107:16:2854:2885	3173476	1	True				
ANR	3174115	AssignmentExpression	prev_sf1 = sce1 -> sf_idx [ w * 16 + g ]		3173476	0		=			
ANR	3174116	Identifier	prev_sf1		3173476	0					
ANR	3174117	ArrayIndexing	sce1 -> sf_idx [ w * 16 + g ]		3173476	1					
ANR	3174118	PtrMemberAccess	sce1 -> sf_idx		3173476	0					
ANR	3174119	Identifier	sce1		3173476	0					
ANR	3174120	Identifier	sf_idx		3173476	1					
ANR	3174121	AdditiveExpression	w * 16 + g		3173476	1		+			
ANR	3174122	MultiplicativeExpression	w * 16		3173476	0		*			
ANR	3174123	Identifier	w		3173476	0					
ANR	3174124	PrimaryExpression	16		3173476	1					
ANR	3174125	Identifier	g		3173476	1					
ANR	3174126	ExpressionStatement	start += sce0 -> ics . swb_sizes [ g ]	109:12:2900:2931	3173476	2	True				
ANR	3174127	AssignmentExpression	start += sce0 -> ics . swb_sizes [ g ]		3173476	0		+=			
ANR	3174128	Identifier	start		3173476	0					
ANR	3174129	ArrayIndexing	sce0 -> ics . swb_sizes [ g ]		3173476	1					
ANR	3174130	MemberAccess	sce0 -> ics . swb_sizes		3173476	0					
ANR	3174131	PtrMemberAccess	sce0 -> ics		3173476	0					
ANR	3174132	Identifier	sce0		3173476	0					
ANR	3174133	Identifier	ics		3173476	1					
ANR	3174134	Identifier	swb_sizes		3173476	1					
ANR	3174135	Identifier	g		3173476	1					
ANR	3174136	ExpressionStatement	cpe -> is_mode = ! ! count	115:4:2956:2978	3173476	8	True				
ANR	3174137	AssignmentExpression	cpe -> is_mode = ! ! count		3173476	0		=			
ANR	3174138	PtrMemberAccess	cpe -> is_mode		3173476	0					
ANR	3174139	Identifier	cpe		3173476	0					
ANR	3174140	Identifier	is_mode		3173476	1					
ANR	3174141	UnaryOperationExpression	! ! count		3173476	1					
ANR	3174142	UnaryOperator	!		3173476	0					
ANR	3174143	UnaryOperationExpression	! count		3173476	1					
ANR	3174144	UnaryOperator	!		3173476	0					
ANR	3174145	Identifier	count		3173476	1					
ANR	3174146	ReturnType	void		3173476	1					
ANR	3174147	Identifier	ff_aac_search_for_is		3173476	2					
ANR	3174148	ParameterList	"AACEncContext * s , AVCodecContext * avctx , ChannelElement * cpe"		3173476	3					
ANR	3174149	Parameter	AACEncContext * s	1:26:26:41	3173476	0	True				
ANR	3174150	ParameterType	AACEncContext *		3173476	0					
ANR	3174151	Identifier	s		3173476	1					
ANR	3174152	Parameter	AVCodecContext * avctx	1:44:44:64	3173476	1	True				
ANR	3174153	ParameterType	AVCodecContext *		3173476	0					
ANR	3174154	Identifier	avctx		3173476	1					
ANR	3174155	Parameter	ChannelElement * cpe	1:67:67:85	3173476	2	True				
ANR	3174156	ParameterType	ChannelElement *		3173476	0					
ANR	3174157	Identifier	cpe		3173476	1					
ANR	3174158	CFGEntryNode	ENTRY		3173476		True				
ANR	3174159	CFGExitNode	EXIT		3173476		True				
ANR	3174160	Symbol	ener01		3173476						
ANR	3174161	Symbol	* w		3173476						
ANR	3174162	Symbol	* start		3173476						
ANR	3174163	Symbol	sce0 -> band_type		3173476						
ANR	3174164	Symbol	* sce1 -> zeroes		3173476						
ANR	3174165	Symbol	ff_sfdelta_can_remove_band		3173476						
ANR	3174166	Symbol	sce1 -> sf_idx		3173476						
ANR	3174167	Symbol	sce0 -> ics . num_swb		3173476						
ANR	3174168	Symbol	sqrt		3173476						
ANR	3174169	Symbol	best -> phase		3173476						
ANR	3174170	Symbol	* * * cpe		3173476						
ANR	3174171	Symbol	* cpe -> ch [ 0 ] . zeroes		3173476						
ANR	3174172	Symbol	ener0		3173476						
ANR	3174173	Symbol	ener1		3173476						
ANR	3174174	Symbol	* sce0 -> coeffs		3173476						
ANR	3174175	Symbol	* sce0 -> ics . group_len		3173476						
ANR	3174176	Symbol	nextband1		3173476						
ANR	3174177	Symbol	* * cpe -> ch		3173476						
ANR	3174178	Symbol	cpe -> ch [ 0 ] . band_type		3173476						
ANR	3174179	Symbol	freq_mult		3173476						
ANR	3174180	Symbol	prev_sf1		3173476						
ANR	3174181	Symbol	sce0 -> ics . num_windows		3173476						
ANR	3174182	Symbol	* w2		3173476						
ANR	3174183	Symbol	sce0 -> ics . group_len		3173476						
ANR	3174184	Symbol	sce1 -> band_type		3173476						
ANR	3174185	Symbol	* cpe -> ch [ 1 ] . is_ener		3173476						
ANR	3174186	Symbol	* sce0 -> ics . swb_sizes		3173476						
ANR	3174187	Symbol	fabsf		3173476						
ANR	3174188	Symbol	* cpe -> ch [ 1 ] . band_type		3173476						
ANR	3174189	Symbol	ph_err2 . error		3173476						
ANR	3174190	Symbol	cpe -> ch [ 1 ] . is_ener		3173476						
ANR	3174191	Symbol	* sce0		3173476						
ANR	3174192	Symbol	* sce1		3173476						
ANR	3174193	Symbol	* cpe -> ch [ 0 ] . is_ener		3173476						
ANR	3174194	Symbol	cpe -> ch [ 0 ] . is_ener		3173476						
ANR	3174195	Symbol	NOISE_BT		3173476						
ANR	3174196	Symbol	avctx		3173476						
ANR	3174197	Symbol	* sce1 -> sf_idx		3173476						
ANR	3174198	Symbol	* sce1 -> band_type		3173476						
ANR	3174199	Symbol	coef1		3173476						
ANR	3174200	Symbol	coef0		3173476						
ANR	3174201	Symbol	g		3173476						
ANR	3174202	Symbol	* cpe -> ch [ 1 ] . zeroes		3173476						
ANR	3174203	Symbol	sce0 -> ics . swb_sizes		3173476						
ANR	3174204	Symbol	i		3173476						
ANR	3174205	Symbol	* cpe -> is_mask		3173476						
ANR	3174206	Symbol	avctx -> sample_rate		3173476						
ANR	3174207	Symbol	cpe -> ch [ 1 ] . zeroes		3173476						
ANR	3174208	Symbol	sce1 -> coeffs		3173476						
ANR	3174209	Symbol	s		3173476						
ANR	3174210	Symbol	* cpe -> ch [ 0 ] . band_type		3173476						
ANR	3174211	Symbol	w		3173476						
ANR	3174212	Symbol	best -> pass		3173476						
ANR	3174213	Symbol	* sce1 -> coeffs		3173476						
ANR	3174214	Symbol	cpe -> ch [ 0 ] . zeroes		3173476						
ANR	3174215	Symbol	* cpe -> ch		3173476						
ANR	3174216	Symbol	cpe -> ch [ 1 ] . band_type		3173476						
ANR	3174217	Symbol	INTENSITY_BT		3173476						
ANR	3174218	Symbol	cpe -> is_mask		3173476						
ANR	3174219	Symbol	* best		3173476						
ANR	3174220	Symbol	sce1		3173476						
ANR	3174221	Symbol	INT_STEREO_LOW_LIMIT		3173476						
ANR	3174222	Symbol	sce0		3173476						
ANR	3174223	Symbol	best -> ener01		3173476						
ANR	3174224	Symbol	RESERVED_BT		3173476						
ANR	3174225	Symbol	cpe		3173476						
ANR	3174226	Symbol	w2		3173476						
ANR	3174227	Symbol	ph_err1 . error		3173476						
ANR	3174228	Symbol	* sce0 -> ics		3173476						
ANR	3174229	Symbol	count		3173476						
ANR	3174230	Symbol	cpe -> ch		3173476						
ANR	3174231	Symbol	& ph_err2		3173476						
ANR	3174232	Symbol	cpe -> common_window		3173476						
ANR	3174233	Symbol	* avctx		3173476						
ANR	3174234	Symbol	& ph_err1		3173476						
ANR	3174235	Symbol	s -> lambda		3173476						
ANR	3174236	Symbol	sce0 -> coeffs		3173476						
ANR	3174237	Symbol	* cpe -> ms_mask		3173476						
ANR	3174238	Symbol	ph_err2		3173476						
ANR	3174239	Symbol	sce0 -> ics		3173476						
ANR	3174240	Symbol	best		3173476						
ANR	3174241	Symbol	INTENSITY_BT2		3173476						
ANR	3174242	Symbol	cpe -> is_mode		3173476						
ANR	3174243	Symbol	ph_err1		3173476						
ANR	3174244	Symbol	ph_err1 . pass		3173476						
ANR	3174245	Symbol	sce1 -> zeroes		3173476						
ANR	3174246	Symbol	* sce0 -> band_type		3173476						
ANR	3174247	Symbol	cpe -> ms_mask		3173476						
ANR	3174248	Symbol	start		3173476						
ANR	3174249	Symbol	* * cpe		3173476						
ANR	3174250	Symbol	* g		3173476						
ANR	3174251	Symbol	* i		3173476						
ANR	3174252	Symbol	* * sce1		3173476						
ANR	3174253	Symbol	ener01p		3173476						
ANR	3174254	Symbol	* * sce0		3173476						
ANR	3174255	Symbol	ff_aac_is_encoding_err		3173476						
ANR	3174256	Symbol	* cpe		3173476						
ANR	3174257	Symbol	* s		3173476						
