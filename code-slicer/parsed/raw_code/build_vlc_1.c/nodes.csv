command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1194801	File	/home/p4ultr4n/workplace/ReVeal/raw_code/build_vlc_1.c								
ANR	1194802	Function	build_vlc	1:0:0:1884							
ANR	1194803	FunctionDef	"build_vlc (AVCodecContext * avctx , VLC * vlc , const uint32_t * table)"		1194802	0					
ANR	1194804	CompoundStatement		3:0:78:1884	1194802	0					
ANR	1194805	IdentifierDeclStatement	Node nodes [ 512 ] ;	5:4:85:100	1194802	0	True				
ANR	1194806	IdentifierDecl	nodes [ 512 ]		1194802	0					
ANR	1194807	IdentifierDeclType	Node [ 512 ]		1194802	0					
ANR	1194808	Identifier	nodes		1194802	1					
ANR	1194809	PrimaryExpression	512		1194802	2					
ANR	1194810	IdentifierDeclStatement	uint32_t bits [ 256 ] ;	7:4:107:125	1194802	1	True				
ANR	1194811	IdentifierDecl	bits [ 256 ]		1194802	0					
ANR	1194812	IdentifierDeclType	uint32_t [ 256 ]		1194802	0					
ANR	1194813	Identifier	bits		1194802	1					
ANR	1194814	PrimaryExpression	256		1194802	2					
ANR	1194815	IdentifierDeclStatement	int16_t lens [ 256 ] ;	9:4:132:149	1194802	2	True				
ANR	1194816	IdentifierDecl	lens [ 256 ]		1194802	0					
ANR	1194817	IdentifierDeclType	int16_t [ 256 ]		1194802	0					
ANR	1194818	Identifier	lens		1194802	1					
ANR	1194819	PrimaryExpression	256		1194802	2					
ANR	1194820	IdentifierDeclStatement	uint8_t xlat [ 256 ] ;	11:4:156:173	1194802	3	True				
ANR	1194821	IdentifierDecl	xlat [ 256 ]		1194802	0					
ANR	1194822	IdentifierDeclType	uint8_t [ 256 ]		1194802	0					
ANR	1194823	Identifier	xlat		1194802	1					
ANR	1194824	PrimaryExpression	256		1194802	2					
ANR	1194825	IdentifierDeclStatement	"int cur_node , i , j , pos = 0 ;"	13:4:180:207	1194802	4	True				
ANR	1194826	IdentifierDecl	cur_node		1194802	0					
ANR	1194827	IdentifierDeclType	int		1194802	0					
ANR	1194828	Identifier	cur_node		1194802	1					
ANR	1194829	IdentifierDecl	i		1194802	1					
ANR	1194830	IdentifierDeclType	int		1194802	0					
ANR	1194831	Identifier	i		1194802	1					
ANR	1194832	IdentifierDecl	j		1194802	2					
ANR	1194833	IdentifierDeclType	int		1194802	0					
ANR	1194834	Identifier	j		1194802	1					
ANR	1194835	IdentifierDecl	pos = 0		1194802	3					
ANR	1194836	IdentifierDeclType	int		1194802	0					
ANR	1194837	Identifier	pos		1194802	1					
ANR	1194838	AssignmentExpression	pos = 0		1194802	2		=			
ANR	1194839	Identifier	pos		1194802	0					
ANR	1194840	PrimaryExpression	0		1194802	1					
ANR	1194841	ExpressionStatement	ff_free_vlc ( vlc )	17:4:216:232	1194802	5	True				
ANR	1194842	CallExpression	ff_free_vlc ( vlc )		1194802	0					
ANR	1194843	Callee	ff_free_vlc		1194802	0					
ANR	1194844	Identifier	ff_free_vlc		1194802	0					
ANR	1194845	ArgumentList	vlc		1194802	1					
ANR	1194846	Argument	vlc		1194802	0					
ANR	1194847	Identifier	vlc		1194802	0					
ANR	1194848	ForStatement	for ( i = 0 ; i < 256 ; i ++ )		1194802	6					
ANR	1194849	ForInit	i = 0 ;	21:9:246:251	1194802	0	True				
ANR	1194850	AssignmentExpression	i = 0		1194802	0		=			
ANR	1194851	Identifier	i		1194802	0					
ANR	1194852	PrimaryExpression	0		1194802	1					
ANR	1194853	Condition	i < 256	21:16:253:259	1194802	1	True				
ANR	1194854	RelationalExpression	i < 256		1194802	0		<			
ANR	1194855	Identifier	i		1194802	0					
ANR	1194856	PrimaryExpression	256		1194802	1					
ANR	1194857	PostIncDecOperationExpression	i ++	21:25:262:264	1194802	2	True				
ANR	1194858	Identifier	i		1194802	0					
ANR	1194859	IncDec	++		1194802	1					
ANR	1194860	CompoundStatement		19:30:188:188	1194802	3					
ANR	1194861	ExpressionStatement	nodes [ i ] . count = table [ i ]	23:8:278:303	1194802	0	True				
ANR	1194862	AssignmentExpression	nodes [ i ] . count = table [ i ]		1194802	0		=			
ANR	1194863	MemberAccess	nodes [ i ] . count		1194802	0					
ANR	1194864	ArrayIndexing	nodes [ i ]		1194802	0					
ANR	1194865	Identifier	nodes		1194802	0					
ANR	1194866	Identifier	i		1194802	1					
ANR	1194867	Identifier	count		1194802	1					
ANR	1194868	ArrayIndexing	table [ i ]		1194802	1					
ANR	1194869	Identifier	table		1194802	0					
ANR	1194870	Identifier	i		1194802	1					
ANR	1194871	ExpressionStatement	nodes [ i ] . sym = i	25:8:314:332	1194802	1	True				
ANR	1194872	AssignmentExpression	nodes [ i ] . sym = i		1194802	0		=			
ANR	1194873	MemberAccess	nodes [ i ] . sym		1194802	0					
ANR	1194874	ArrayIndexing	nodes [ i ]		1194802	0					
ANR	1194875	Identifier	nodes		1194802	0					
ANR	1194876	Identifier	i		1194802	1					
ANR	1194877	Identifier	sym		1194802	1					
ANR	1194878	Identifier	i		1194802	1					
ANR	1194879	ExpressionStatement	nodes [ i ] . n0 = - 2	27:8:343:362	1194802	2	True				
ANR	1194880	AssignmentExpression	nodes [ i ] . n0 = - 2		1194802	0		=			
ANR	1194881	MemberAccess	nodes [ i ] . n0		1194802	0					
ANR	1194882	ArrayIndexing	nodes [ i ]		1194802	0					
ANR	1194883	Identifier	nodes		1194802	0					
ANR	1194884	Identifier	i		1194802	1					
ANR	1194885	Identifier	n0		1194802	1					
ANR	1194886	UnaryOperationExpression	- 2		1194802	1					
ANR	1194887	UnaryOperator	-		1194802	0					
ANR	1194888	PrimaryExpression	2		1194802	1					
ANR	1194889	ExpressionStatement	nodes [ i ] . l = i	29:8:373:391	1194802	3	True				
ANR	1194890	AssignmentExpression	nodes [ i ] . l = i		1194802	0		=			
ANR	1194891	MemberAccess	nodes [ i ] . l		1194802	0					
ANR	1194892	ArrayIndexing	nodes [ i ]		1194802	0					
ANR	1194893	Identifier	nodes		1194802	0					
ANR	1194894	Identifier	i		1194802	1					
ANR	1194895	Identifier	l		1194802	1					
ANR	1194896	Identifier	i		1194802	1					
ANR	1194897	ExpressionStatement	nodes [ i ] . r = i	31:8:402:420	1194802	4	True				
ANR	1194898	AssignmentExpression	nodes [ i ] . r = i		1194802	0		=			
ANR	1194899	MemberAccess	nodes [ i ] . r		1194802	0					
ANR	1194900	ArrayIndexing	nodes [ i ]		1194802	0					
ANR	1194901	Identifier	nodes		1194802	0					
ANR	1194902	Identifier	i		1194802	1					
ANR	1194903	Identifier	r		1194802	1					
ANR	1194904	Identifier	i		1194802	1					
ANR	1194905	ExpressionStatement	cur_node = 256	37:4:436:450	1194802	7	True				
ANR	1194906	AssignmentExpression	cur_node = 256		1194802	0		=			
ANR	1194907	Identifier	cur_node		1194802	0					
ANR	1194908	PrimaryExpression	256		1194802	1					
ANR	1194909	ExpressionStatement	j = 0	39:4:457:462	1194802	8	True				
ANR	1194910	AssignmentExpression	j = 0		1194802	0		=			
ANR	1194911	Identifier	j		1194802	0					
ANR	1194912	PrimaryExpression	0		1194802	1					
ANR	1194913	DoStatement	do		1194802	9					
ANR	1194914	CompoundStatement		39:7:393:393	1194802	0					
ANR	1194915	ForStatement	for ( i = 0 ; ; i ++ )		1194802	0					
ANR	1194916	ForInit	i = 0 ;	43:13:488:493	1194802	0	True				
ANR	1194917	AssignmentExpression	i = 0		1194802	0		=			
ANR	1194918	Identifier	i		1194802	0					
ANR	1194919	PrimaryExpression	0		1194802	1					
ANR	1194920	PostIncDecOperationExpression	i ++	43:22:497:499	1194802	1	True				
ANR	1194921	Identifier	i		1194802	0					
ANR	1194922	IncDec	++		1194802	1					
ANR	1194923	CompoundStatement		49:12:550:560	1194802	2					
ANR	1194924	IdentifierDeclStatement	int new_node = j ;	45:12:517:533	1194802	0	True				
ANR	1194925	IdentifierDecl	new_node = j		1194802	0					
ANR	1194926	IdentifierDeclType	int		1194802	0					
ANR	1194927	Identifier	new_node		1194802	1					
ANR	1194928	AssignmentExpression	new_node = j		1194802	2		=			
ANR	1194929	Identifier	j		1194802	0					
ANR	1194930	Identifier	j		1194802	1					
ANR	1194931	IdentifierDeclStatement	int first_node = cur_node ;	47:12:548:573	1194802	1	True				
ANR	1194932	IdentifierDecl	first_node = cur_node		1194802	0					
ANR	1194933	IdentifierDeclType	int		1194802	0					
ANR	1194934	Identifier	first_node		1194802	1					
ANR	1194935	AssignmentExpression	first_node = cur_node		1194802	2		=			
ANR	1194936	Identifier	cur_node		1194802	0					
ANR	1194937	Identifier	cur_node		1194802	1					
ANR	1194938	IdentifierDeclStatement	int second_node = cur_node ;	49:12:588:614	1194802	2	True				
ANR	1194939	IdentifierDecl	second_node = cur_node		1194802	0					
ANR	1194940	IdentifierDeclType	int		1194802	0					
ANR	1194941	Identifier	second_node		1194802	1					
ANR	1194942	AssignmentExpression	second_node = cur_node		1194802	2		=			
ANR	1194943	Identifier	cur_node		1194802	0					
ANR	1194944	Identifier	cur_node		1194802	1					
ANR	1194945	IdentifierDeclStatement	"int nd , st ;"	51:12:629:639	1194802	3	True				
ANR	1194946	IdentifierDecl	nd		1194802	0					
ANR	1194947	IdentifierDeclType	int		1194802	0					
ANR	1194948	Identifier	nd		1194802	1					
ANR	1194949	IdentifierDecl	st		1194802	1					
ANR	1194950	IdentifierDeclType	int		1194802	0					
ANR	1194951	Identifier	st		1194802	1					
ANR	1194952	ExpressionStatement	nodes [ cur_node ] . count = - 1	55:12:656:682	1194802	4	True				
ANR	1194953	AssignmentExpression	nodes [ cur_node ] . count = - 1		1194802	0		=			
ANR	1194954	MemberAccess	nodes [ cur_node ] . count		1194802	0					
ANR	1194955	ArrayIndexing	nodes [ cur_node ]		1194802	0					
ANR	1194956	Identifier	nodes		1194802	0					
ANR	1194957	Identifier	cur_node		1194802	1					
ANR	1194958	Identifier	count		1194802	1					
ANR	1194959	UnaryOperationExpression	- 1		1194802	1					
ANR	1194960	UnaryOperator	-		1194802	0					
ANR	1194961	PrimaryExpression	1		1194802	1					
ANR	1194962	DoStatement	do		1194802	5					
ANR	1194963	CompoundStatement		59:16:642:673	1194802	0					
ANR	1194964	IdentifierDeclStatement	int val = nodes [ new_node ] . count ;	61:16:721:752	1194802	0	True				
ANR	1194965	IdentifierDecl	val = nodes [ new_node ] . count		1194802	0					
ANR	1194966	IdentifierDeclType	int		1194802	0					
ANR	1194967	Identifier	val		1194802	1					
ANR	1194968	AssignmentExpression	val = nodes [ new_node ] . count		1194802	2		=			
ANR	1194969	Identifier	val		1194802	0					
ANR	1194970	MemberAccess	nodes [ new_node ] . count		1194802	1					
ANR	1194971	ArrayIndexing	nodes [ new_node ]		1194802	0					
ANR	1194972	Identifier	nodes		1194802	0					
ANR	1194973	Identifier	new_node		1194802	1					
ANR	1194974	Identifier	count		1194802	1					
ANR	1194975	IfStatement	if ( val && ( val < nodes [ first_node ] . count ) )		1194802	1					
ANR	1194976	Condition	val && ( val < nodes [ first_node ] . count )	63:20:775:812	1194802	0	True				
ANR	1194977	AndExpression	val && ( val < nodes [ first_node ] . count )		1194802	0		&&			
ANR	1194978	Identifier	val		1194802	0					
ANR	1194979	RelationalExpression	val < nodes [ first_node ] . count		1194802	1		<			
ANR	1194980	Identifier	val		1194802	0					
ANR	1194981	MemberAccess	nodes [ first_node ] . count		1194802	1					
ANR	1194982	ArrayIndexing	nodes [ first_node ]		1194802	0					
ANR	1194983	Identifier	nodes		1194802	0					
ANR	1194984	Identifier	first_node		1194802	1					
ANR	1194985	Identifier	count		1194802	1					
ANR	1194986	CompoundStatement		61:60:736:736	1194802	1					
ANR	1194987	IfStatement	if ( val >= nodes [ second_node ] . count )		1194802	0					
ANR	1194988	Condition	val >= nodes [ second_node ] . count	65:24:842:872	1194802	0	True				
ANR	1194989	RelationalExpression	val >= nodes [ second_node ] . count		1194802	0		>=			
ANR	1194990	Identifier	val		1194802	0					
ANR	1194991	MemberAccess	nodes [ second_node ] . count		1194802	1					
ANR	1194992	ArrayIndexing	nodes [ second_node ]		1194802	0					
ANR	1194993	Identifier	nodes		1194802	0					
ANR	1194994	Identifier	second_node		1194802	1					
ANR	1194995	Identifier	count		1194802	1					
ANR	1194996	CompoundStatement		63:57:796:796	1194802	1					
ANR	1194997	ExpressionStatement	first_node = new_node	67:24:902:923	1194802	0	True				
ANR	1194998	AssignmentExpression	first_node = new_node		1194802	0		=			
ANR	1194999	Identifier	first_node		1194802	0					
ANR	1195000	Identifier	new_node		1194802	1					
ANR	1195001	ElseStatement	else		1194802	0					
ANR	1195002	CompoundStatement		67:27:874:874	1194802	0					
ANR	1195003	ExpressionStatement	first_node = second_node	71:24:980:1004	1194802	0	True				
ANR	1195004	AssignmentExpression	first_node = second_node		1194802	0		=			
ANR	1195005	Identifier	first_node		1194802	0					
ANR	1195006	Identifier	second_node		1194802	1					
ANR	1195007	ExpressionStatement	second_node = new_node	73:24:1031:1053	1194802	1	True				
ANR	1195008	AssignmentExpression	second_node = new_node		1194802	0		=			
ANR	1195009	Identifier	second_node		1194802	0					
ANR	1195010	Identifier	new_node		1194802	1					
ANR	1195011	ExpressionStatement	new_node += 1	79:16:1114:1127	1194802	2	True				
ANR	1195012	AssignmentExpression	new_node += 1		1194802	0		+=			
ANR	1195013	Identifier	new_node		1194802	0					
ANR	1195014	PrimaryExpression	1		1194802	1					
ANR	1195015	Condition	new_node != cur_node	81:21:1151:1170	1194802	1	True				
ANR	1195016	EqualityExpression	new_node != cur_node		1194802	0		!=			
ANR	1195017	Identifier	new_node		1194802	0					
ANR	1195018	Identifier	cur_node		1194802	1					
ANR	1195019	IfStatement	if ( first_node == cur_node )		1194802	6					
ANR	1195020	Condition	first_node == cur_node	85:16:1193:1214	1194802	0	True				
ANR	1195021	EqualityExpression	first_node == cur_node		1194802	0		==			
ANR	1195022	Identifier	first_node		1194802	0					
ANR	1195023	Identifier	cur_node		1194802	1					
ANR	1195024	BreakStatement	break ;	87:16:1234:1239	1194802	1	True				
ANR	1195025	ExpressionStatement	nd = nodes [ second_node ] . count	91:12:1256:1285	1194802	7	True				
ANR	1195026	AssignmentExpression	nd = nodes [ second_node ] . count		1194802	0		=			
ANR	1195027	Identifier	nd		1194802	0					
ANR	1195028	MemberAccess	nodes [ second_node ] . count		1194802	1					
ANR	1195029	ArrayIndexing	nodes [ second_node ]		1194802	0					
ANR	1195030	Identifier	nodes		1194802	0					
ANR	1195031	Identifier	second_node		1194802	1					
ANR	1195032	Identifier	count		1194802	1					
ANR	1195033	ExpressionStatement	st = nodes [ first_node ] . count	93:12:1300:1328	1194802	8	True				
ANR	1195034	AssignmentExpression	st = nodes [ first_node ] . count		1194802	0		=			
ANR	1195035	Identifier	st		1194802	0					
ANR	1195036	MemberAccess	nodes [ first_node ] . count		1194802	1					
ANR	1195037	ArrayIndexing	nodes [ first_node ]		1194802	0					
ANR	1195038	Identifier	nodes		1194802	0					
ANR	1195039	Identifier	first_node		1194802	1					
ANR	1195040	Identifier	count		1194802	1					
ANR	1195041	ExpressionStatement	nodes [ second_node ] . count = 0	95:12:1343:1371	1194802	9	True				
ANR	1195042	AssignmentExpression	nodes [ second_node ] . count = 0		1194802	0		=			
ANR	1195043	MemberAccess	nodes [ second_node ] . count		1194802	0					
ANR	1195044	ArrayIndexing	nodes [ second_node ]		1194802	0					
ANR	1195045	Identifier	nodes		1194802	0					
ANR	1195046	Identifier	second_node		1194802	1					
ANR	1195047	Identifier	count		1194802	1					
ANR	1195048	PrimaryExpression	0		1194802	1					
ANR	1195049	ExpressionStatement	nodes [ first_node ] . count = 0	97:12:1386:1414	1194802	10	True				
ANR	1195050	AssignmentExpression	nodes [ first_node ] . count = 0		1194802	0		=			
ANR	1195051	MemberAccess	nodes [ first_node ] . count		1194802	0					
ANR	1195052	ArrayIndexing	nodes [ first_node ]		1194802	0					
ANR	1195053	Identifier	nodes		1194802	0					
ANR	1195054	Identifier	first_node		1194802	1					
ANR	1195055	Identifier	count		1194802	1					
ANR	1195056	PrimaryExpression	0		1194802	1					
ANR	1195057	ExpressionStatement	nodes [ cur_node ] . count = nd + st	99:12:1429:1460	1194802	11	True				
ANR	1195058	AssignmentExpression	nodes [ cur_node ] . count = nd + st		1194802	0		=			
ANR	1195059	MemberAccess	nodes [ cur_node ] . count		1194802	0					
ANR	1195060	ArrayIndexing	nodes [ cur_node ]		1194802	0					
ANR	1195061	Identifier	nodes		1194802	0					
ANR	1195062	Identifier	cur_node		1194802	1					
ANR	1195063	Identifier	count		1194802	1					
ANR	1195064	AdditiveExpression	nd + st		1194802	1		+			
ANR	1195065	Identifier	nd		1194802	0					
ANR	1195066	Identifier	st		1194802	1					
ANR	1195067	ExpressionStatement	nodes [ cur_node ] . sym = - 1	101:12:1475:1499	1194802	12	True				
ANR	1195068	AssignmentExpression	nodes [ cur_node ] . sym = - 1		1194802	0		=			
ANR	1195069	MemberAccess	nodes [ cur_node ] . sym		1194802	0					
ANR	1195070	ArrayIndexing	nodes [ cur_node ]		1194802	0					
ANR	1195071	Identifier	nodes		1194802	0					
ANR	1195072	Identifier	cur_node		1194802	1					
ANR	1195073	Identifier	sym		1194802	1					
ANR	1195074	UnaryOperationExpression	- 1		1194802	1					
ANR	1195075	UnaryOperator	-		1194802	0					
ANR	1195076	PrimaryExpression	1		1194802	1					
ANR	1195077	ExpressionStatement	nodes [ cur_node ] . n0 = cur_node	103:12:1514:1543	1194802	13	True				
ANR	1195078	AssignmentExpression	nodes [ cur_node ] . n0 = cur_node		1194802	0		=			
ANR	1195079	MemberAccess	nodes [ cur_node ] . n0		1194802	0					
ANR	1195080	ArrayIndexing	nodes [ cur_node ]		1194802	0					
ANR	1195081	Identifier	nodes		1194802	0					
ANR	1195082	Identifier	cur_node		1194802	1					
ANR	1195083	Identifier	n0		1194802	1					
ANR	1195084	Identifier	cur_node		1194802	1					
ANR	1195085	ExpressionStatement	nodes [ cur_node ] . l = first_node	105:12:1558:1588	1194802	14	True				
ANR	1195086	AssignmentExpression	nodes [ cur_node ] . l = first_node		1194802	0		=			
ANR	1195087	MemberAccess	nodes [ cur_node ] . l		1194802	0					
ANR	1195088	ArrayIndexing	nodes [ cur_node ]		1194802	0					
ANR	1195089	Identifier	nodes		1194802	0					
ANR	1195090	Identifier	cur_node		1194802	1					
ANR	1195091	Identifier	l		1194802	1					
ANR	1195092	Identifier	first_node		1194802	1					
ANR	1195093	ExpressionStatement	nodes [ cur_node ] . r = second_node	107:12:1603:1634	1194802	15	True				
ANR	1195094	AssignmentExpression	nodes [ cur_node ] . r = second_node		1194802	0		=			
ANR	1195095	MemberAccess	nodes [ cur_node ] . r		1194802	0					
ANR	1195096	ArrayIndexing	nodes [ cur_node ]		1194802	0					
ANR	1195097	Identifier	nodes		1194802	0					
ANR	1195098	Identifier	cur_node		1194802	1					
ANR	1195099	Identifier	r		1194802	1					
ANR	1195100	Identifier	second_node		1194802	1					
ANR	1195101	ExpressionStatement	cur_node ++	109:12:1649:1659	1194802	16	True				
ANR	1195102	PostIncDecOperationExpression	cur_node ++		1194802	0					
ANR	1195103	Identifier	cur_node		1194802	0					
ANR	1195104	IncDec	++		1194802	1					
ANR	1195105	ExpressionStatement	j ++	113:8:1681:1684	1194802	1	True				
ANR	1195106	PostIncDecOperationExpression	j ++		1194802	0					
ANR	1195107	Identifier	j		1194802	0					
ANR	1195108	IncDec	++		1194802	1					
ANR	1195109	Condition	cur_node - 256 == j	115:13:1700:1718	1194802	1	True				
ANR	1195110	EqualityExpression	cur_node - 256 == j		1194802	0		==			
ANR	1195111	AdditiveExpression	cur_node - 256		1194802	0		-			
ANR	1195112	Identifier	cur_node		1194802	0					
ANR	1195113	PrimaryExpression	256		1194802	1					
ANR	1195114	Identifier	j		1194802	1					
ANR	1195115	ExpressionStatement	"get_tree_codes ( bits , lens , xlat , nodes , cur_node - 1 , 0 , 0 , & pos )"	119:4:1729:1794	1194802	10	True				
ANR	1195116	CallExpression	"get_tree_codes ( bits , lens , xlat , nodes , cur_node - 1 , 0 , 0 , & pos )"		1194802	0					
ANR	1195117	Callee	get_tree_codes		1194802	0					
ANR	1195118	Identifier	get_tree_codes		1194802	0					
ANR	1195119	ArgumentList	bits		1194802	1					
ANR	1195120	Argument	bits		1194802	0					
ANR	1195121	Identifier	bits		1194802	0					
ANR	1195122	Argument	lens		1194802	1					
ANR	1195123	Identifier	lens		1194802	0					
ANR	1195124	Argument	xlat		1194802	2					
ANR	1195125	Identifier	xlat		1194802	0					
ANR	1195126	Argument	nodes		1194802	3					
ANR	1195127	Identifier	nodes		1194802	0					
ANR	1195128	Argument	cur_node - 1		1194802	4					
ANR	1195129	AdditiveExpression	cur_node - 1		1194802	0		-			
ANR	1195130	Identifier	cur_node		1194802	0					
ANR	1195131	PrimaryExpression	1		1194802	1					
ANR	1195132	Argument	0		1194802	5					
ANR	1195133	PrimaryExpression	0		1194802	0					
ANR	1195134	Argument	0		1194802	6					
ANR	1195135	PrimaryExpression	0		1194802	0					
ANR	1195136	Argument	& pos		1194802	7					
ANR	1195137	UnaryOperationExpression	& pos		1194802	0					
ANR	1195138	UnaryOperator	&		1194802	0					
ANR	1195139	Identifier	pos		1194802	1					
ANR	1195140	ReturnStatement	"return ff_init_vlc_sparse ( vlc , 10 , pos , lens , 2 , 2 , bits , 4 , 4 , xlat , 1 , 1 , 0 ) ;"	123:4:1803:1881	1194802	11	True				
ANR	1195141	CallExpression	"ff_init_vlc_sparse ( vlc , 10 , pos , lens , 2 , 2 , bits , 4 , 4 , xlat , 1 , 1 , 0 )"		1194802	0					
ANR	1195142	Callee	ff_init_vlc_sparse		1194802	0					
ANR	1195143	Identifier	ff_init_vlc_sparse		1194802	0					
ANR	1195144	ArgumentList	vlc		1194802	1					
ANR	1195145	Argument	vlc		1194802	0					
ANR	1195146	Identifier	vlc		1194802	0					
ANR	1195147	Argument	10		1194802	1					
ANR	1195148	PrimaryExpression	10		1194802	0					
ANR	1195149	Argument	pos		1194802	2					
ANR	1195150	Identifier	pos		1194802	0					
ANR	1195151	Argument	lens		1194802	3					
ANR	1195152	Identifier	lens		1194802	0					
ANR	1195153	Argument	2		1194802	4					
ANR	1195154	PrimaryExpression	2		1194802	0					
ANR	1195155	Argument	2		1194802	5					
ANR	1195156	PrimaryExpression	2		1194802	0					
ANR	1195157	Argument	bits		1194802	6					
ANR	1195158	Identifier	bits		1194802	0					
ANR	1195159	Argument	4		1194802	7					
ANR	1195160	PrimaryExpression	4		1194802	0					
ANR	1195161	Argument	4		1194802	8					
ANR	1195162	PrimaryExpression	4		1194802	0					
ANR	1195163	Argument	xlat		1194802	9					
ANR	1195164	Identifier	xlat		1194802	0					
ANR	1195165	Argument	1		1194802	10					
ANR	1195166	PrimaryExpression	1		1194802	0					
ANR	1195167	Argument	1		1194802	11					
ANR	1195168	PrimaryExpression	1		1194802	0					
ANR	1195169	Argument	0		1194802	12					
ANR	1195170	PrimaryExpression	0		1194802	0					
ANR	1195171	ReturnType	static int		1194802	1					
ANR	1195172	Identifier	build_vlc		1194802	2					
ANR	1195173	ParameterList	"AVCodecContext * avctx , VLC * vlc , const uint32_t * table"		1194802	3					
ANR	1195174	Parameter	AVCodecContext * avctx	1:21:21:41	1194802	0	True				
ANR	1195175	ParameterType	AVCodecContext *		1194802	0					
ANR	1195176	Identifier	avctx		1194802	1					
ANR	1195177	Parameter	VLC * vlc	1:44:44:51	1194802	1	True				
ANR	1195178	ParameterType	VLC *		1194802	0					
ANR	1195179	Identifier	vlc		1194802	1					
ANR	1195180	Parameter	const uint32_t * table	1:54:54:74	1194802	2	True				
ANR	1195181	ParameterType	const uint32_t *		1194802	0					
ANR	1195182	Identifier	table		1194802	1					
ANR	1195183	CFGEntryNode	ENTRY		1194802		True				
ANR	1195184	CFGExitNode	EXIT		1194802		True				
ANR	1195185	InfiniteForNode	true		1194802		True				
ANR	1195186	Symbol	nodes [ cur_node ] . r		1194802						
ANR	1195187	Symbol	nodes [ i ] . r		1194802						
ANR	1195188	Symbol	* first_node		1194802						
ANR	1195189	Symbol	nodes [ cur_node ] . n0		1194802						
ANR	1195190	Symbol	* new_node		1194802						
ANR	1195191	Symbol	* cur_node		1194802						
ANR	1195192	Symbol	lens		1194802						
ANR	1195193	Symbol	nodes [ cur_node ] . count		1194802						
ANR	1195194	Symbol	new_node		1194802						
ANR	1195195	Symbol	pos		1194802						
ANR	1195196	Symbol	first_node		1194802						
ANR	1195197	Symbol	* nodes		1194802						
ANR	1195198	Symbol	avctx		1194802						
ANR	1195199	Symbol	nodes [ i ] . l		1194802						
ANR	1195200	Symbol	table		1194802						
ANR	1195201	Symbol	xlat		1194802						
ANR	1195202	Symbol	nodes [ cur_node ] . sym		1194802						
ANR	1195203	Symbol	nodes [ cur_node ] . l		1194802						
ANR	1195204	Symbol	val		1194802						
ANR	1195205	Symbol	nodes [ i ] . count		1194802						
ANR	1195206	Symbol	st		1194802						
ANR	1195207	Symbol	second_node		1194802						
ANR	1195208	Symbol	cur_node		1194802						
ANR	1195209	Symbol	bits		1194802						
ANR	1195210	Symbol	i		1194802						
ANR	1195211	Symbol	* table		1194802						
ANR	1195212	Symbol	j		1194802						
ANR	1195213	Symbol	ff_init_vlc_sparse		1194802						
ANR	1195214	Symbol	vlc		1194802						
ANR	1195215	Symbol	nodes [ i ] . sym		1194802						
ANR	1195216	Symbol	nodes [ new_node ] . count		1194802						
ANR	1195217	Symbol	nodes [ first_node ] . count		1194802						
ANR	1195218	Symbol	nodes [ second_node ] . count		1194802						
ANR	1195219	Symbol	nodes		1194802						
ANR	1195220	Symbol	* i		1194802						
ANR	1195221	Symbol	* second_node		1194802						
ANR	1195222	Symbol	nd		1194802						
ANR	1195223	Symbol	nodes [ i ] . n0		1194802						
ANR	1195224	Symbol	& pos		1194802						
