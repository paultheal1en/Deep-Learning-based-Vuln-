command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8593849	File	/home/p4ultr4n/workplace/ReVeal/raw_code/uart_write_01_1.c								
ANR	8593850	Function	uart_write	1:0:0:1019							
ANR	8593851	FunctionDef	"uart_write (void * opaque , hwaddr addr , uint64_t val64 , unsigned int size)"		8593850	0					
ANR	8593852	CompoundStatement		5:0:86:1019	8593850	0					
ANR	8593853	IdentifierDeclStatement	XilinxUARTLite * s = opaque ;	7:4:93:119	8593850	0	True				
ANR	8593854	IdentifierDecl	* s = opaque		8593850	0					
ANR	8593855	IdentifierDeclType	XilinxUARTLite *		8593850	0					
ANR	8593856	Identifier	s		8593850	1					
ANR	8593857	AssignmentExpression	* s = opaque		8593850	2		=			
ANR	8593858	Identifier	opaque		8593850	0					
ANR	8593859	Identifier	opaque		8593850	1					
ANR	8593860	IdentifierDeclStatement	uint32_t value = val64 ;	9:4:126:148	8593850	1	True				
ANR	8593861	IdentifierDecl	value = val64		8593850	0					
ANR	8593862	IdentifierDeclType	uint32_t		8593850	0					
ANR	8593863	Identifier	value		8593850	1					
ANR	8593864	AssignmentExpression	value = val64		8593850	2		=			
ANR	8593865	Identifier	val64		8593850	0					
ANR	8593866	Identifier	val64		8593850	1					
ANR	8593867	IdentifierDeclStatement	unsigned char ch = value ;	11:4:155:179	8593850	2	True				
ANR	8593868	IdentifierDecl	ch = value		8593850	0					
ANR	8593869	IdentifierDeclType	unsigned char		8593850	0					
ANR	8593870	Identifier	ch		8593850	1					
ANR	8593871	AssignmentExpression	ch = value		8593850	2		=			
ANR	8593872	Identifier	value		8593850	0					
ANR	8593873	Identifier	value		8593850	1					
ANR	8593874	ExpressionStatement	addr >>= 2	15:4:188:198	8593850	3	True				
ANR	8593875	AssignmentExpression	addr >>= 2		8593850	0		>>=			
ANR	8593876	Identifier	addr		8593850	0					
ANR	8593877	PrimaryExpression	2		8593850	1					
ANR	8593878	SwitchStatement	switch ( addr )		8593850	4					
ANR	8593879	Condition	addr	17:12:213:216	8593850	0	True				
ANR	8593880	Identifier	addr		8593850	0					
ANR	8593881	CompoundStatement		15:4:137:137	8593850	1					
ANR	8593882	Label	case R_STATUS :	21:8:235:248	8593850	0	True				
ANR	8593883	Identifier	R_STATUS		8593850	0					
ANR	8593884	ExpressionStatement	"hw_error ( ""write to UART STATUS?\\n"" )"	23:12:263:298	8593850	1	True				
ANR	8593885	CallExpression	"hw_error ( ""write to UART STATUS?\\n"" )"		8593850	0					
ANR	8593886	Callee	hw_error		8593850	0					
ANR	8593887	Identifier	hw_error		8593850	0					
ANR	8593888	ArgumentList	"""write to UART STATUS?\\n"""		8593850	1					
ANR	8593889	Argument	"""write to UART STATUS?\\n"""		8593850	0					
ANR	8593890	PrimaryExpression	"""write to UART STATUS?\\n"""		8593850	0					
ANR	8593891	BreakStatement	break ;	25:12:313:318	8593850	2	True				
ANR	8593892	Label	case R_CTRL :	29:8:331:342	8593850	3	True				
ANR	8593893	Identifier	R_CTRL		8593850	0					
ANR	8593894	IfStatement	if ( value & CONTROL_RST_RX )		8593850	4					
ANR	8593895	Condition	value & CONTROL_RST_RX	31:16:361:382	8593850	0	True				
ANR	8593896	BitAndExpression	value & CONTROL_RST_RX		8593850	0		&			
ANR	8593897	Identifier	value		8593850	0					
ANR	8593898	Identifier	CONTROL_RST_RX		8593850	1					
ANR	8593899	CompoundStatement		27:40:298:298	8593850	1					
ANR	8593900	ExpressionStatement	s -> rx_fifo_pos = 0	33:16:404:422	8593850	0	True				
ANR	8593901	AssignmentExpression	s -> rx_fifo_pos = 0		8593850	0		=			
ANR	8593902	PtrMemberAccess	s -> rx_fifo_pos		8593850	0					
ANR	8593903	Identifier	s		8593850	0					
ANR	8593904	Identifier	rx_fifo_pos		8593850	1					
ANR	8593905	PrimaryExpression	0		8593850	1					
ANR	8593906	ExpressionStatement	s -> rx_fifo_len = 0	35:16:441:459	8593850	1	True				
ANR	8593907	AssignmentExpression	s -> rx_fifo_len = 0		8593850	0		=			
ANR	8593908	PtrMemberAccess	s -> rx_fifo_len		8593850	0					
ANR	8593909	Identifier	s		8593850	0					
ANR	8593910	Identifier	rx_fifo_len		8593850	1					
ANR	8593911	PrimaryExpression	0		8593850	1					
ANR	8593912	ExpressionStatement	s -> regs [ addr ] = value	39:12:489:510	8593850	5	True				
ANR	8593913	AssignmentExpression	s -> regs [ addr ] = value		8593850	0		=			
ANR	8593914	ArrayIndexing	s -> regs [ addr ]		8593850	0					
ANR	8593915	PtrMemberAccess	s -> regs		8593850	0					
ANR	8593916	Identifier	s		8593850	0					
ANR	8593917	Identifier	regs		8593850	1					
ANR	8593918	Identifier	addr		8593850	1					
ANR	8593919	Identifier	value		8593850	1					
ANR	8593920	BreakStatement	break ;	41:12:525:530	8593850	6	True				
ANR	8593921	Label	case R_TX :	45:8:543:552	8593850	7	True				
ANR	8593922	Identifier	R_TX		8593850	0					
ANR	8593923	IfStatement	if ( s -> chr )		8593850	8					
ANR	8593924	Condition	s -> chr	47:16:571:576	8593850	0	True				
ANR	8593925	PtrMemberAccess	s -> chr		8593850	0					
ANR	8593926	Identifier	s		8593850	0					
ANR	8593927	Identifier	chr		8593850	1					
ANR	8593928	ExpressionStatement	"qemu_chr_fe_write ( s -> chr , & ch , 1 )"	49:16:596:629	8593850	1	True				
ANR	8593929	CallExpression	"qemu_chr_fe_write ( s -> chr , & ch , 1 )"		8593850	0					
ANR	8593930	Callee	qemu_chr_fe_write		8593850	0					
ANR	8593931	Identifier	qemu_chr_fe_write		8593850	0					
ANR	8593932	ArgumentList	s -> chr		8593850	1					
ANR	8593933	Argument	s -> chr		8593850	0					
ANR	8593934	PtrMemberAccess	s -> chr		8593850	0					
ANR	8593935	Identifier	s		8593850	0					
ANR	8593936	Identifier	chr		8593850	1					
ANR	8593937	Argument	& ch		8593850	1					
ANR	8593938	UnaryOperationExpression	& ch		8593850	0					
ANR	8593939	UnaryOperator	&		8593850	0					
ANR	8593940	Identifier	ch		8593850	1					
ANR	8593941	Argument	1		8593850	2					
ANR	8593942	PrimaryExpression	1		8593850	0					
ANR	8593943	ExpressionStatement	s -> regs [ addr ] = value	53:12:646:667	8593850	9	True				
ANR	8593944	AssignmentExpression	s -> regs [ addr ] = value		8593850	0		=			
ANR	8593945	ArrayIndexing	s -> regs [ addr ]		8593850	0					
ANR	8593946	PtrMemberAccess	s -> regs		8593850	0					
ANR	8593947	Identifier	s		8593850	0					
ANR	8593948	Identifier	regs		8593850	1					
ANR	8593949	Identifier	addr		8593850	1					
ANR	8593950	Identifier	value		8593850	1					
ANR	8593951	ExpressionStatement	s -> regs [ R_STATUS ] |= STATUS_IE	59:12:709:739	8593850	10	True				
ANR	8593952	AssignmentExpression	s -> regs [ R_STATUS ] |= STATUS_IE		8593850	0		|=			
ANR	8593953	ArrayIndexing	s -> regs [ R_STATUS ]		8593850	0					
ANR	8593954	PtrMemberAccess	s -> regs		8593850	0					
ANR	8593955	Identifier	s		8593850	0					
ANR	8593956	Identifier	regs		8593850	1					
ANR	8593957	Identifier	R_STATUS		8593850	1					
ANR	8593958	Identifier	STATUS_IE		8593850	1					
ANR	8593959	BreakStatement	break ;	61:12:754:759	8593850	11	True				
ANR	8593960	Label	default :	65:8:772:779	8593850	12	True				
ANR	8593961	Identifier	default		8593850	0					
ANR	8593962	ExpressionStatement	"DUART ( printf ( ""%s addr=%x v=%x\\n"" , __func__ , addr , value ) )"	67:12:794:851	8593850	13	True				
ANR	8593963	CallExpression	"DUART ( printf ( ""%s addr=%x v=%x\\n"" , __func__ , addr , value ) )"		8593850	0					
ANR	8593964	Callee	DUART		8593850	0					
ANR	8593965	Identifier	DUART		8593850	0					
ANR	8593966	ArgumentList	"printf ( ""%s addr=%x v=%x\\n"" , __func__ , addr , value )"		8593850	1					
ANR	8593967	Argument	"printf ( ""%s addr=%x v=%x\\n"" , __func__ , addr , value )"		8593850	0					
ANR	8593968	CallExpression	"printf ( ""%s addr=%x v=%x\\n"" , __func__ , addr , value )"		8593850	0					
ANR	8593969	Callee	printf		8593850	0					
ANR	8593970	Identifier	printf		8593850	0					
ANR	8593971	ArgumentList	"""%s addr=%x v=%x\\n"""		8593850	1					
ANR	8593972	Argument	"""%s addr=%x v=%x\\n"""		8593850	0					
ANR	8593973	PrimaryExpression	"""%s addr=%x v=%x\\n"""		8593850	0					
ANR	8593974	Argument	__func__		8593850	1					
ANR	8593975	Identifier	__func__		8593850	0					
ANR	8593976	Argument	addr		8593850	2					
ANR	8593977	Identifier	addr		8593850	0					
ANR	8593978	Argument	value		8593850	3					
ANR	8593979	Identifier	value		8593850	0					
ANR	8593980	IfStatement	if ( addr < ARRAY_SIZE ( s -> regs ) )		8593850	14					
ANR	8593981	Condition	addr < ARRAY_SIZE ( s -> regs )	69:16:870:895	8593850	0	True				
ANR	8593982	RelationalExpression	addr < ARRAY_SIZE ( s -> regs )		8593850	0		<			
ANR	8593983	Identifier	addr		8593850	0					
ANR	8593984	CallExpression	ARRAY_SIZE ( s -> regs )		8593850	1					
ANR	8593985	Callee	ARRAY_SIZE		8593850	0					
ANR	8593986	Identifier	ARRAY_SIZE		8593850	0					
ANR	8593987	ArgumentList	s -> regs		8593850	1					
ANR	8593988	Argument	s -> regs		8593850	0					
ANR	8593989	PtrMemberAccess	s -> regs		8593850	0					
ANR	8593990	Identifier	s		8593850	0					
ANR	8593991	Identifier	regs		8593850	1					
ANR	8593992	ExpressionStatement	s -> regs [ addr ] = value	71:16:915:936	8593850	1	True				
ANR	8593993	AssignmentExpression	s -> regs [ addr ] = value		8593850	0		=			
ANR	8593994	ArrayIndexing	s -> regs [ addr ]		8593850	0					
ANR	8593995	PtrMemberAccess	s -> regs		8593850	0					
ANR	8593996	Identifier	s		8593850	0					
ANR	8593997	Identifier	regs		8593850	1					
ANR	8593998	Identifier	addr		8593850	1					
ANR	8593999	Identifier	value		8593850	1					
ANR	8594000	BreakStatement	break ;	73:12:951:956	8593850	15	True				
ANR	8594001	ExpressionStatement	uart_update_status ( s )	77:4:970:991	8593850	5	True				
ANR	8594002	CallExpression	uart_update_status ( s )		8593850	0					
ANR	8594003	Callee	uart_update_status		8593850	0					
ANR	8594004	Identifier	uart_update_status		8593850	0					
ANR	8594005	ArgumentList	s		8593850	1					
ANR	8594006	Argument	s		8593850	0					
ANR	8594007	Identifier	s		8593850	0					
ANR	8594008	ExpressionStatement	uart_update_irq ( s )	79:4:998:1016	8593850	6	True				
ANR	8594009	CallExpression	uart_update_irq ( s )		8593850	0					
ANR	8594010	Callee	uart_update_irq		8593850	0					
ANR	8594011	Identifier	uart_update_irq		8593850	0					
ANR	8594012	ArgumentList	s		8593850	1					
ANR	8594013	Argument	s		8593850	0					
ANR	8594014	Identifier	s		8593850	0					
ANR	8594015	Identifier	uart_write		8593850	1					
ANR	8594016	ParameterList	"void * opaque , hwaddr addr , uint64_t val64 , unsigned int size"		8593850	2					
ANR	8594017	Parameter	void * opaque	1:11:11:22	8593850	0	True				
ANR	8594018	ParameterType	void *		8593850	0					
ANR	8594019	Identifier	opaque		8593850	1					
ANR	8594020	Parameter	hwaddr addr	1:25:25:35	8593850	1	True				
ANR	8594021	ParameterType	hwaddr		8593850	0					
ANR	8594022	Identifier	addr		8593850	1					
ANR	8594023	Parameter	uint64_t val64	3:11:50:63	8593850	2	True				
ANR	8594024	ParameterType	uint64_t		8593850	0					
ANR	8594025	Identifier	val64		8593850	1					
ANR	8594026	Parameter	unsigned int size	3:27:66:82	8593850	3	True				
ANR	8594027	ParameterType	unsigned int		8593850	0					
ANR	8594028	Identifier	size		8593850	1					
ANR	8594029	CFGEntryNode	ENTRY		8593850		True				
ANR	8594030	CFGExitNode	EXIT		8593850		True				
ANR	8594031	Symbol	ARRAY_SIZE		8593850						
ANR	8594032	Symbol	s -> regs		8593850						
ANR	8594033	Symbol	opaque		8593850						
ANR	8594034	Symbol	ch		8593850						
ANR	8594035	Symbol	CONTROL_RST_RX		8593850						
ANR	8594036	Symbol	& ch		8593850						
ANR	8594037	Symbol	R_STATUS		8593850						
ANR	8594038	Symbol	printf		8593850						
ANR	8594039	Symbol	s -> rx_fifo_pos		8593850						
ANR	8594040	Symbol	val64		8593850						
ANR	8594041	Symbol	s		8593850						
ANR	8594042	Symbol	size		8593850						
ANR	8594043	Symbol	__func__		8593850						
ANR	8594044	Symbol	* * s		8593850						
ANR	8594045	Symbol	s -> chr		8593850						
ANR	8594046	Symbol	STATUS_IE		8593850						
ANR	8594047	Symbol	* addr		8593850						
ANR	8594048	Symbol	addr		8593850						
ANR	8594049	Symbol	value		8593850						
ANR	8594050	Symbol	* s		8593850						
ANR	8594051	Symbol	s -> rx_fifo_len		8593850						
ANR	8594052	Symbol	* R_STATUS		8593850						
ANR	8594053	Symbol	* s -> regs		8593850						
