command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1019725	File	/home/p4ultr4n/workplace/ReVeal/raw_code/bdrv_replace_child_01_0.c								
ANR	1019726	Function	bdrv_replace_child	1:0:0:568							
ANR	1019727	FunctionDef	"bdrv_replace_child (BdrvChild * child , BlockDriverState * new_bs)"		1019726	0					
ANR	1019728	CompoundStatement		3:0:76:568	1019726	0					
ANR	1019729	IdentifierDeclStatement	BlockDriverState * old_bs = child -> bs ;	5:4:83:119	1019726	0	True				
ANR	1019730	IdentifierDecl	* old_bs = child -> bs		1019726	0					
ANR	1019731	IdentifierDeclType	BlockDriverState *		1019726	0					
ANR	1019732	Identifier	old_bs		1019726	1					
ANR	1019733	AssignmentExpression	* old_bs = child -> bs		1019726	2		=			
ANR	1019734	Identifier	old_bs		1019726	0					
ANR	1019735	PtrMemberAccess	child -> bs		1019726	1					
ANR	1019736	Identifier	child		1019726	0					
ANR	1019737	Identifier	bs		1019726	1					
ANR	1019738	IfStatement	if ( old_bs )		1019726	1					
ANR	1019739	Condition	old_bs	9:8:132:137	1019726	0	True				
ANR	1019740	Identifier	old_bs		1019726	0					
ANR	1019741	CompoundStatement		7:16:63:63	1019726	1					
ANR	1019742	IfStatement	if ( old_bs -> quiesce_counter && child -> role -> drained_end )		1019726	0					
ANR	1019743	Condition	old_bs -> quiesce_counter && child -> role -> drained_end	11:12:155:205	1019726	0	True				
ANR	1019744	AndExpression	old_bs -> quiesce_counter && child -> role -> drained_end		1019726	0		&&			
ANR	1019745	PtrMemberAccess	old_bs -> quiesce_counter		1019726	0					
ANR	1019746	Identifier	old_bs		1019726	0					
ANR	1019747	Identifier	quiesce_counter		1019726	1					
ANR	1019748	PtrMemberAccess	child -> role -> drained_end		1019726	1					
ANR	1019749	PtrMemberAccess	child -> role		1019726	0					
ANR	1019750	Identifier	child		1019726	0					
ANR	1019751	Identifier	role		1019726	1					
ANR	1019752	Identifier	drained_end		1019726	1					
ANR	1019753	CompoundStatement		9:65:131:131	1019726	1					
ANR	1019754	ExpressionStatement	child -> role -> drained_end ( child )	13:12:223:254	1019726	0	True				
ANR	1019755	CallExpression	child -> role -> drained_end ( child )		1019726	0					
ANR	1019756	Callee	child -> role -> drained_end		1019726	0					
ANR	1019757	PtrMemberAccess	child -> role -> drained_end		1019726	0					
ANR	1019758	PtrMemberAccess	child -> role		1019726	0					
ANR	1019759	Identifier	child		1019726	0					
ANR	1019760	Identifier	role		1019726	1					
ANR	1019761	Identifier	drained_end		1019726	1					
ANR	1019762	ArgumentList	child		1019726	1					
ANR	1019763	Argument	child		1019726	0					
ANR	1019764	Identifier	child		1019726	0					
ANR	1019765	ExpressionStatement	"QLIST_REMOVE ( child , next_parent )"	17:8:276:308	1019726	1	True				
ANR	1019766	CallExpression	"QLIST_REMOVE ( child , next_parent )"		1019726	0					
ANR	1019767	Callee	QLIST_REMOVE		1019726	0					
ANR	1019768	Identifier	QLIST_REMOVE		1019726	0					
ANR	1019769	ArgumentList	child		1019726	1					
ANR	1019770	Argument	child		1019726	0					
ANR	1019771	Identifier	child		1019726	0					
ANR	1019772	Argument	next_parent		1019726	1					
ANR	1019773	Identifier	next_parent		1019726	0					
ANR	1019774	ExpressionStatement	child -> bs = new_bs	23:4:324:342	1019726	2	True				
ANR	1019775	AssignmentExpression	child -> bs = new_bs		1019726	0		=			
ANR	1019776	PtrMemberAccess	child -> bs		1019726	0					
ANR	1019777	Identifier	child		1019726	0					
ANR	1019778	Identifier	bs		1019726	1					
ANR	1019779	Identifier	new_bs		1019726	1					
ANR	1019780	IfStatement	if ( new_bs )		1019726	3					
ANR	1019781	Condition	new_bs	27:8:355:360	1019726	0	True				
ANR	1019782	Identifier	new_bs		1019726	0					
ANR	1019783	CompoundStatement		25:16:286:286	1019726	1					
ANR	1019784	ExpressionStatement	"QLIST_INSERT_HEAD ( & new_bs -> parents , child , next_parent )"	29:8:374:429	1019726	0	True				
ANR	1019785	CallExpression	"QLIST_INSERT_HEAD ( & new_bs -> parents , child , next_parent )"		1019726	0					
ANR	1019786	Callee	QLIST_INSERT_HEAD		1019726	0					
ANR	1019787	Identifier	QLIST_INSERT_HEAD		1019726	0					
ANR	1019788	ArgumentList	& new_bs -> parents		1019726	1					
ANR	1019789	Argument	& new_bs -> parents		1019726	0					
ANR	1019790	UnaryOperationExpression	& new_bs -> parents		1019726	0					
ANR	1019791	UnaryOperator	&		1019726	0					
ANR	1019792	PtrMemberAccess	new_bs -> parents		1019726	1					
ANR	1019793	Identifier	new_bs		1019726	0					
ANR	1019794	Identifier	parents		1019726	1					
ANR	1019795	Argument	child		1019726	1					
ANR	1019796	Identifier	child		1019726	0					
ANR	1019797	Argument	next_parent		1019726	2					
ANR	1019798	Identifier	next_parent		1019726	0					
ANR	1019799	IfStatement	if ( new_bs -> quiesce_counter && child -> role -> drained_begin )		1019726	1					
ANR	1019800	Condition	new_bs -> quiesce_counter && child -> role -> drained_begin	31:12:444:496	1019726	0	True				
ANR	1019801	AndExpression	new_bs -> quiesce_counter && child -> role -> drained_begin		1019726	0		&&			
ANR	1019802	PtrMemberAccess	new_bs -> quiesce_counter		1019726	0					
ANR	1019803	Identifier	new_bs		1019726	0					
ANR	1019804	Identifier	quiesce_counter		1019726	1					
ANR	1019805	PtrMemberAccess	child -> role -> drained_begin		1019726	1					
ANR	1019806	PtrMemberAccess	child -> role		1019726	0					
ANR	1019807	Identifier	child		1019726	0					
ANR	1019808	Identifier	role		1019726	1					
ANR	1019809	Identifier	drained_begin		1019726	1					
ANR	1019810	CompoundStatement		29:67:422:422	1019726	1					
ANR	1019811	ExpressionStatement	child -> role -> drained_begin ( child )	33:12:514:547	1019726	0	True				
ANR	1019812	CallExpression	child -> role -> drained_begin ( child )		1019726	0					
ANR	1019813	Callee	child -> role -> drained_begin		1019726	0					
ANR	1019814	PtrMemberAccess	child -> role -> drained_begin		1019726	0					
ANR	1019815	PtrMemberAccess	child -> role		1019726	0					
ANR	1019816	Identifier	child		1019726	0					
ANR	1019817	Identifier	role		1019726	1					
ANR	1019818	Identifier	drained_begin		1019726	1					
ANR	1019819	ArgumentList	child		1019726	1					
ANR	1019820	Argument	child		1019726	0					
ANR	1019821	Identifier	child		1019726	0					
ANR	1019822	ReturnType	static void		1019726	1					
ANR	1019823	Identifier	bdrv_replace_child		1019726	2					
ANR	1019824	ParameterList	"BdrvChild * child , BlockDriverState * new_bs"		1019726	3					
ANR	1019825	Parameter	BdrvChild * child	1:31:31:46	1019726	0	True				
ANR	1019826	ParameterType	BdrvChild *		1019726	0					
ANR	1019827	Identifier	child		1019726	1					
ANR	1019828	Parameter	BlockDriverState * new_bs	1:49:49:72	1019726	1	True				
ANR	1019829	ParameterType	BlockDriverState *		1019726	0					
ANR	1019830	Identifier	new_bs		1019726	1					
ANR	1019831	CFGEntryNode	ENTRY		1019726		True				
ANR	1019832	CFGExitNode	EXIT		1019726		True				
ANR	1019833	Symbol	new_bs -> quiesce_counter		1019726						
ANR	1019834	Symbol	* child		1019726						
ANR	1019835	Symbol	old_bs		1019726						
ANR	1019836	Symbol	next_parent		1019726						
ANR	1019837	Symbol	child -> bs		1019726						
ANR	1019838	Symbol	new_bs		1019726						
ANR	1019839	Symbol	child -> role -> drained_begin		1019726						
ANR	1019840	Symbol	& new_bs -> parents		1019726						
ANR	1019841	Symbol	* new_bs		1019726						
ANR	1019842	Symbol	* * child		1019726						
ANR	1019843	Symbol	old_bs -> quiesce_counter		1019726						
ANR	1019844	Symbol	child -> role -> drained_end		1019726						
ANR	1019845	Symbol	* old_bs		1019726						
ANR	1019846	Symbol	* child -> role		1019726						
ANR	1019847	Symbol	child		1019726						
ANR	1019848	Symbol	child -> role		1019726						
