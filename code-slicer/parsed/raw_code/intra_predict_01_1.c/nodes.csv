command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4962696	File	/home/p4ultr4n/workplace/ReVeal/raw_code/intra_predict_01_1.c								
ANR	4962697	Function	intra_predict	1:0:0:5241							
ANR	4962698	FunctionDef	"intra_predict (VP8Context * s , uint8_t * dst [ 3 ] , VP8Macroblock * mb , int mb_x , int mb_y)"		4962697	0					
ANR	4962699	CompoundStatement		5:0:111:5241	4962697	0					
ANR	4962700	IdentifierDeclStatement	AVCodecContext * avctx = s -> avctx ;	7:4:118:150	4962697	0	True				
ANR	4962701	IdentifierDecl	* avctx = s -> avctx		4962697	0					
ANR	4962702	IdentifierDeclType	AVCodecContext *		4962697	0					
ANR	4962703	Identifier	avctx		4962697	1					
ANR	4962704	AssignmentExpression	* avctx = s -> avctx		4962697	2		=			
ANR	4962705	Identifier	avctx		4962697	0					
ANR	4962706	PtrMemberAccess	s -> avctx		4962697	1					
ANR	4962707	Identifier	s		4962697	0					
ANR	4962708	Identifier	avctx		4962697	1					
ANR	4962709	IdentifierDeclStatement	"int x , y , mode , nnz , tr ;"	9:4:157:180	4962697	1	True				
ANR	4962710	IdentifierDecl	x		4962697	0					
ANR	4962711	IdentifierDeclType	int		4962697	0					
ANR	4962712	Identifier	x		4962697	1					
ANR	4962713	IdentifierDecl	y		4962697	1					
ANR	4962714	IdentifierDeclType	int		4962697	0					
ANR	4962715	Identifier	y		4962697	1					
ANR	4962716	IdentifierDecl	mode		4962697	2					
ANR	4962717	IdentifierDeclType	int		4962697	0					
ANR	4962718	Identifier	mode		4962697	1					
ANR	4962719	IdentifierDecl	nnz		4962697	3					
ANR	4962720	IdentifierDeclType	int		4962697	0					
ANR	4962721	Identifier	nnz		4962697	1					
ANR	4962722	IdentifierDecl	tr		4962697	4					
ANR	4962723	IdentifierDeclType	int		4962697	0					
ANR	4962724	Identifier	tr		4962697	1					
ANR	4962725	IfStatement	if ( ! ( avctx -> flags & CODEC_FLAG_EMU_EDGE && ! mb_y ) && ( s -> deblock_filter || ! mb_y ) )		4962697	2					
ANR	4962726	Condition	! ( avctx -> flags & CODEC_FLAG_EMU_EDGE && ! mb_y ) && ( s -> deblock_filter || ! mb_y )	17:8:335:412	4962697	0	True				
ANR	4962727	AndExpression	! ( avctx -> flags & CODEC_FLAG_EMU_EDGE && ! mb_y ) && ( s -> deblock_filter || ! mb_y )		4962697	0		&&			
ANR	4962728	UnaryOperationExpression	! ( avctx -> flags & CODEC_FLAG_EMU_EDGE && ! mb_y )		4962697	0					
ANR	4962729	UnaryOperator	!		4962697	0					
ANR	4962730	AndExpression	avctx -> flags & CODEC_FLAG_EMU_EDGE && ! mb_y		4962697	1		&&			
ANR	4962731	BitAndExpression	avctx -> flags & CODEC_FLAG_EMU_EDGE		4962697	0		&			
ANR	4962732	PtrMemberAccess	avctx -> flags		4962697	0					
ANR	4962733	Identifier	avctx		4962697	0					
ANR	4962734	Identifier	flags		4962697	1					
ANR	4962735	Identifier	CODEC_FLAG_EMU_EDGE		4962697	1					
ANR	4962736	UnaryOperationExpression	! mb_y		4962697	1					
ANR	4962737	UnaryOperator	!		4962697	0					
ANR	4962738	Identifier	mb_y		4962697	1					
ANR	4962739	OrExpression	s -> deblock_filter || ! mb_y		4962697	1		||			
ANR	4962740	PtrMemberAccess	s -> deblock_filter		4962697	0					
ANR	4962741	Identifier	s		4962697	0					
ANR	4962742	Identifier	deblock_filter		4962697	1					
ANR	4962743	UnaryOperationExpression	! mb_y		4962697	1					
ANR	4962744	UnaryOperator	!		4962697	0					
ANR	4962745	Identifier	mb_y		4962697	1					
ANR	4962746	ExpressionStatement	"xchg_mb_border ( s -> top_border [ mb_x + 1 ] , dst [ 0 ] , dst [ 1 ] , dst [ 2 ] , s -> linesize , s -> uvlinesize , mb_x , mb_y , s -> mb_width , s -> filter . simple , 1 )"	19:8:424:607	4962697	1	True				
ANR	4962747	CallExpression	"xchg_mb_border ( s -> top_border [ mb_x + 1 ] , dst [ 0 ] , dst [ 1 ] , dst [ 2 ] , s -> linesize , s -> uvlinesize , mb_x , mb_y , s -> mb_width , s -> filter . simple , 1 )"		4962697	0					
ANR	4962748	Callee	xchg_mb_border		4962697	0					
ANR	4962749	Identifier	xchg_mb_border		4962697	0					
ANR	4962750	ArgumentList	s -> top_border [ mb_x + 1 ]		4962697	1					
ANR	4962751	Argument	s -> top_border [ mb_x + 1 ]		4962697	0					
ANR	4962752	ArrayIndexing	s -> top_border [ mb_x + 1 ]		4962697	0					
ANR	4962753	PtrMemberAccess	s -> top_border		4962697	0					
ANR	4962754	Identifier	s		4962697	0					
ANR	4962755	Identifier	top_border		4962697	1					
ANR	4962756	AdditiveExpression	mb_x + 1		4962697	1		+			
ANR	4962757	Identifier	mb_x		4962697	0					
ANR	4962758	PrimaryExpression	1		4962697	1					
ANR	4962759	Argument	dst [ 0 ]		4962697	1					
ANR	4962760	ArrayIndexing	dst [ 0 ]		4962697	0					
ANR	4962761	Identifier	dst		4962697	0					
ANR	4962762	PrimaryExpression	0		4962697	1					
ANR	4962763	Argument	dst [ 1 ]		4962697	2					
ANR	4962764	ArrayIndexing	dst [ 1 ]		4962697	0					
ANR	4962765	Identifier	dst		4962697	0					
ANR	4962766	PrimaryExpression	1		4962697	1					
ANR	4962767	Argument	dst [ 2 ]		4962697	3					
ANR	4962768	ArrayIndexing	dst [ 2 ]		4962697	0					
ANR	4962769	Identifier	dst		4962697	0					
ANR	4962770	PrimaryExpression	2		4962697	1					
ANR	4962771	Argument	s -> linesize		4962697	4					
ANR	4962772	PtrMemberAccess	s -> linesize		4962697	0					
ANR	4962773	Identifier	s		4962697	0					
ANR	4962774	Identifier	linesize		4962697	1					
ANR	4962775	Argument	s -> uvlinesize		4962697	5					
ANR	4962776	PtrMemberAccess	s -> uvlinesize		4962697	0					
ANR	4962777	Identifier	s		4962697	0					
ANR	4962778	Identifier	uvlinesize		4962697	1					
ANR	4962779	Argument	mb_x		4962697	6					
ANR	4962780	Identifier	mb_x		4962697	0					
ANR	4962781	Argument	mb_y		4962697	7					
ANR	4962782	Identifier	mb_y		4962697	0					
ANR	4962783	Argument	s -> mb_width		4962697	8					
ANR	4962784	PtrMemberAccess	s -> mb_width		4962697	0					
ANR	4962785	Identifier	s		4962697	0					
ANR	4962786	Identifier	mb_width		4962697	1					
ANR	4962787	Argument	s -> filter . simple		4962697	9					
ANR	4962788	MemberAccess	s -> filter . simple		4962697	0					
ANR	4962789	PtrMemberAccess	s -> filter		4962697	0					
ANR	4962790	Identifier	s		4962697	0					
ANR	4962791	Identifier	filter		4962697	1					
ANR	4962792	Identifier	simple		4962697	1					
ANR	4962793	Argument	1		4962697	10					
ANR	4962794	PrimaryExpression	1		4962697	0					
ANR	4962795	IfStatement	if ( mb -> mode < MODE_I4x4 )		4962697	3					
ANR	4962796	Condition	mb -> mode < MODE_I4x4	27:8:620:639	4962697	0	True				
ANR	4962797	RelationalExpression	mb -> mode < MODE_I4x4		4962697	0		<			
ANR	4962798	PtrMemberAccess	mb -> mode		4962697	0					
ANR	4962799	Identifier	mb		4962697	0					
ANR	4962800	Identifier	mode		4962697	1					
ANR	4962801	Identifier	MODE_I4x4		4962697	1					
ANR	4962802	CompoundStatement		23:30:530:530	4962697	1					
ANR	4962803	IfStatement	if ( avctx -> flags & CODEC_FLAG_EMU_EDGE )		4962697	0					
ANR	4962804	Condition	avctx -> flags & CODEC_FLAG_EMU_EDGE	29:12:657:690	4962697	0	True				
ANR	4962805	BitAndExpression	avctx -> flags & CODEC_FLAG_EMU_EDGE		4962697	0		&			
ANR	4962806	PtrMemberAccess	avctx -> flags		4962697	0					
ANR	4962807	Identifier	avctx		4962697	0					
ANR	4962808	Identifier	flags		4962697	1					
ANR	4962809	Identifier	CODEC_FLAG_EMU_EDGE		4962697	1					
ANR	4962810	CompoundStatement		25:48:581:581	4962697	1					
ANR	4962811	ExpressionStatement	"mode = check_intra_pred8x8_mode_emuedge ( mb -> mode , mb_x , mb_y )"	31:12:718:779	4962697	0	True				
ANR	4962812	AssignmentExpression	"mode = check_intra_pred8x8_mode_emuedge ( mb -> mode , mb_x , mb_y )"		4962697	0		=			
ANR	4962813	Identifier	mode		4962697	0					
ANR	4962814	CallExpression	"check_intra_pred8x8_mode_emuedge ( mb -> mode , mb_x , mb_y )"		4962697	1					
ANR	4962815	Callee	check_intra_pred8x8_mode_emuedge		4962697	0					
ANR	4962816	Identifier	check_intra_pred8x8_mode_emuedge		4962697	0					
ANR	4962817	ArgumentList	mb -> mode		4962697	1					
ANR	4962818	Argument	mb -> mode		4962697	0					
ANR	4962819	PtrMemberAccess	mb -> mode		4962697	0					
ANR	4962820	Identifier	mb		4962697	0					
ANR	4962821	Identifier	mode		4962697	1					
ANR	4962822	Argument	mb_x		4962697	1					
ANR	4962823	Identifier	mb_x		4962697	0					
ANR	4962824	Argument	mb_y		4962697	2					
ANR	4962825	Identifier	mb_y		4962697	0					
ANR	4962826	ElseStatement	else		4962697	0					
ANR	4962827	CompoundStatement		29:15:685:685	4962697	0					
ANR	4962828	ExpressionStatement	"mode = check_intra_pred8x8_mode ( mb -> mode , mb_x , mb_y )"	35:12:812:865	4962697	0	True				
ANR	4962829	AssignmentExpression	"mode = check_intra_pred8x8_mode ( mb -> mode , mb_x , mb_y )"		4962697	0		=			
ANR	4962830	Identifier	mode		4962697	0					
ANR	4962831	CallExpression	"check_intra_pred8x8_mode ( mb -> mode , mb_x , mb_y )"		4962697	1					
ANR	4962832	Callee	check_intra_pred8x8_mode		4962697	0					
ANR	4962833	Identifier	check_intra_pred8x8_mode		4962697	0					
ANR	4962834	ArgumentList	mb -> mode		4962697	1					
ANR	4962835	Argument	mb -> mode		4962697	0					
ANR	4962836	PtrMemberAccess	mb -> mode		4962697	0					
ANR	4962837	Identifier	mb		4962697	0					
ANR	4962838	Identifier	mode		4962697	1					
ANR	4962839	Argument	mb_x		4962697	1					
ANR	4962840	Identifier	mb_x		4962697	0					
ANR	4962841	Argument	mb_y		4962697	2					
ANR	4962842	Identifier	mb_y		4962697	0					
ANR	4962843	ExpressionStatement	"s -> hpc . pred16x16 [ mode ] ( dst [ 0 ] , s -> linesize )"	39:8:887:930	4962697	1	True				
ANR	4962844	CallExpression	"s -> hpc . pred16x16 [ mode ] ( dst [ 0 ] , s -> linesize )"		4962697	0					
ANR	4962845	Callee	s -> hpc . pred16x16 [ mode ]		4962697	0					
ANR	4962846	ArrayIndexing	s -> hpc . pred16x16 [ mode ]		4962697	0					
ANR	4962847	MemberAccess	s -> hpc . pred16x16		4962697	0					
ANR	4962848	PtrMemberAccess	s -> hpc		4962697	0					
ANR	4962849	Identifier	s		4962697	0					
ANR	4962850	Identifier	hpc		4962697	1					
ANR	4962851	Identifier	pred16x16		4962697	1					
ANR	4962852	Identifier	mode		4962697	1					
ANR	4962853	ArgumentList	dst [ 0 ]		4962697	1					
ANR	4962854	Argument	dst [ 0 ]		4962697	0					
ANR	4962855	ArrayIndexing	dst [ 0 ]		4962697	0					
ANR	4962856	Identifier	dst		4962697	0					
ANR	4962857	PrimaryExpression	0		4962697	1					
ANR	4962858	Argument	s -> linesize		4962697	1					
ANR	4962859	PtrMemberAccess	s -> linesize		4962697	0					
ANR	4962860	Identifier	s		4962697	0					
ANR	4962861	Identifier	linesize		4962697	1					
ANR	4962862	ElseStatement	else		4962697	0					
ANR	4962863	CompoundStatement		51:8:1115:1157	4962697	0					
ANR	4962864	IdentifierDeclStatement	uint8_t * ptr = dst [ 0 ] ;	43:8:955:976	4962697	0	True				
ANR	4962865	IdentifierDecl	* ptr = dst [ 0 ]		4962697	0					
ANR	4962866	IdentifierDeclType	uint8_t *		4962697	0					
ANR	4962867	Identifier	ptr		4962697	1					
ANR	4962868	AssignmentExpression	* ptr = dst [ 0 ]		4962697	2		=			
ANR	4962869	Identifier	ptr		4962697	0					
ANR	4962870	ArrayIndexing	dst [ 0 ]		4962697	1					
ANR	4962871	Identifier	dst		4962697	0					
ANR	4962872	PrimaryExpression	0		4962697	1					
ANR	4962873	IdentifierDeclStatement	uint8_t * intra4x4 = s -> intra4x4_pred_mode_mb ;	45:8:987:1031	4962697	1	True				
ANR	4962874	IdentifierDecl	* intra4x4 = s -> intra4x4_pred_mode_mb		4962697	0					
ANR	4962875	IdentifierDeclType	uint8_t *		4962697	0					
ANR	4962876	Identifier	intra4x4		4962697	1					
ANR	4962877	AssignmentExpression	* intra4x4 = s -> intra4x4_pred_mode_mb		4962697	2		=			
ANR	4962878	Identifier	intra4x4		4962697	0					
ANR	4962879	PtrMemberAccess	s -> intra4x4_pred_mode_mb		4962697	1					
ANR	4962880	Identifier	s		4962697	0					
ANR	4962881	Identifier	intra4x4_pred_mode_mb		4962697	1					
ANR	4962882	IdentifierDeclStatement	"uint8_t tr_top [ 4 ] = { 127 , 127 , 127 , 127 } ;"	47:8:1042:1084	4962697	2	True				
ANR	4962883	IdentifierDecl	"tr_top [ 4 ] = { 127 , 127 , 127 , 127 }"		4962697	0					
ANR	4962884	IdentifierDeclType	uint8_t [ 4 ]		4962697	0					
ANR	4962885	Identifier	tr_top		4962697	1					
ANR	4962886	PrimaryExpression	4		4962697	2					
ANR	4962887	AssignmentExpression	"tr_top [ 4 ] = { 127 , 127 , 127 , 127 }"		4962697	3		=			
ANR	4962888	Identifier	tr_top		4962697	0					
ANR	4962889	InitializerList	127		4962697	1					
ANR	4962890	PrimaryExpression	127		4962697	0					
ANR	4962891	PrimaryExpression	127		4962697	1					
ANR	4962892	PrimaryExpression	127		4962697	2					
ANR	4962893	PrimaryExpression	127		4962697	3					
ANR	4962894	IdentifierDeclStatement	uint8_t * tr_right = ptr - s -> linesize + 16 ;	55:8:1227:1269	4962697	3	True				
ANR	4962895	IdentifierDecl	* tr_right = ptr - s -> linesize + 16		4962697	0					
ANR	4962896	IdentifierDeclType	uint8_t *		4962697	0					
ANR	4962897	Identifier	tr_right		4962697	1					
ANR	4962898	AssignmentExpression	* tr_right = ptr - s -> linesize + 16		4962697	2		=			
ANR	4962899	Identifier	tr_right		4962697	0					
ANR	4962900	AdditiveExpression	ptr - s -> linesize + 16		4962697	1		-			
ANR	4962901	Identifier	ptr		4962697	0					
ANR	4962902	AdditiveExpression	s -> linesize + 16		4962697	1		+			
ANR	4962903	PtrMemberAccess	s -> linesize		4962697	0					
ANR	4962904	Identifier	s		4962697	0					
ANR	4962905	Identifier	linesize		4962697	1					
ANR	4962906	PrimaryExpression	16		4962697	1					
ANR	4962907	IfStatement	if ( mb_x == s -> mb_width - 1 )		4962697	4					
ANR	4962908	Condition	mb_x == s -> mb_width - 1	63:12:1397:1417	4962697	0	True				
ANR	4962909	EqualityExpression	mb_x == s -> mb_width - 1		4962697	0		==			
ANR	4962910	Identifier	mb_x		4962697	0					
ANR	4962911	AdditiveExpression	s -> mb_width - 1		4962697	1		-			
ANR	4962912	PtrMemberAccess	s -> mb_width		4962697	0					
ANR	4962913	Identifier	s		4962697	0					
ANR	4962914	Identifier	mb_width		4962697	1					
ANR	4962915	PrimaryExpression	1		4962697	1					
ANR	4962916	CompoundStatement		59:35:1308:1308	4962697	1					
ANR	4962917	ExpressionStatement	tr = tr_right [ - 1 ] * 0x01010101	65:12:1435:1463	4962697	0	True				
ANR	4962918	AssignmentExpression	tr = tr_right [ - 1 ] * 0x01010101		4962697	0		=			
ANR	4962919	Identifier	tr		4962697	0					
ANR	4962920	MultiplicativeExpression	tr_right [ - 1 ] * 0x01010101		4962697	1		*			
ANR	4962921	ArrayIndexing	tr_right [ - 1 ]		4962697	0					
ANR	4962922	Identifier	tr_right		4962697	0					
ANR	4962923	UnaryOperationExpression	- 1		4962697	1					
ANR	4962924	UnaryOperator	-		4962697	0					
ANR	4962925	PrimaryExpression	1		4962697	1					
ANR	4962926	PrimaryExpression	0x01010101		4962697	1					
ANR	4962927	ExpressionStatement	tr_right = ( uint8_t * ) & tr	67:12:1478:1503	4962697	1	True				
ANR	4962928	AssignmentExpression	tr_right = ( uint8_t * ) & tr		4962697	0		=			
ANR	4962929	Identifier	tr_right		4962697	0					
ANR	4962930	CastExpression	( uint8_t * ) & tr		4962697	1					
ANR	4962931	CastTarget	uint8_t *		4962697	0					
ANR	4962932	UnaryOperationExpression	& tr		4962697	1					
ANR	4962933	UnaryOperator	&		4962697	0					
ANR	4962934	Identifier	tr		4962697	1					
ANR	4962935	IfStatement	if ( mb -> skip )		4962697	5					
ANR	4962936	Condition	mb -> skip	73:12:1531:1538	4962697	0	True				
ANR	4962937	PtrMemberAccess	mb -> skip		4962697	0					
ANR	4962938	Identifier	mb		4962697	0					
ANR	4962939	Identifier	skip		4962697	1					
ANR	4962940	ExpressionStatement	AV_ZERO128 ( s -> non_zero_count_cache )	75:12:1554:1589	4962697	1	True				
ANR	4962941	CallExpression	AV_ZERO128 ( s -> non_zero_count_cache )		4962697	0					
ANR	4962942	Callee	AV_ZERO128		4962697	0					
ANR	4962943	Identifier	AV_ZERO128		4962697	0					
ANR	4962944	ArgumentList	s -> non_zero_count_cache		4962697	1					
ANR	4962945	Argument	s -> non_zero_count_cache		4962697	0					
ANR	4962946	PtrMemberAccess	s -> non_zero_count_cache		4962697	0					
ANR	4962947	Identifier	s		4962697	0					
ANR	4962948	Identifier	non_zero_count_cache		4962697	1					
ANR	4962949	ForStatement	for ( y = 0 ; y < 4 ; y ++ )		4962697	6					
ANR	4962950	ForInit	y = 0 ;	79:13:1607:1612	4962697	0	True				
ANR	4962951	AssignmentExpression	y = 0		4962697	0		=			
ANR	4962952	Identifier	y		4962697	0					
ANR	4962953	PrimaryExpression	0		4962697	1					
ANR	4962954	Condition	y < 4	79:20:1614:1618	4962697	1	True				
ANR	4962955	RelationalExpression	y < 4		4962697	0		<			
ANR	4962956	Identifier	y		4962697	0					
ANR	4962957	PrimaryExpression	4		4962697	1					
ANR	4962958	PostIncDecOperationExpression	y ++	79:27:1621:1623	4962697	2	True				
ANR	4962959	Identifier	y		4962697	0					
ANR	4962960	IncDec	++		4962697	1					
ANR	4962961	CompoundStatement		77:12:1529:1570	4962697	3					
ANR	4962962	IdentifierDeclStatement	uint8_t * topright = ptr + 4 - s -> linesize ;	81:12:1641:1682	4962697	0	True				
ANR	4962963	IdentifierDecl	* topright = ptr + 4 - s -> linesize		4962697	0					
ANR	4962964	IdentifierDeclType	uint8_t *		4962697	0					
ANR	4962965	Identifier	topright		4962697	1					
ANR	4962966	AssignmentExpression	* topright = ptr + 4 - s -> linesize		4962697	2		=			
ANR	4962967	Identifier	topright		4962697	0					
ANR	4962968	AdditiveExpression	ptr + 4 - s -> linesize		4962697	1		+			
ANR	4962969	Identifier	ptr		4962697	0					
ANR	4962970	AdditiveExpression	4 - s -> linesize		4962697	1		-			
ANR	4962971	PrimaryExpression	4		4962697	0					
ANR	4962972	PtrMemberAccess	s -> linesize		4962697	1					
ANR	4962973	Identifier	s		4962697	0					
ANR	4962974	Identifier	linesize		4962697	1					
ANR	4962975	ForStatement	for ( x = 0 ; x < 4 ; x ++ )		4962697	1					
ANR	4962976	ForInit	x = 0 ;	83:17:1702:1707	4962697	0	True				
ANR	4962977	AssignmentExpression	x = 0		4962697	0		=			
ANR	4962978	Identifier	x		4962697	0					
ANR	4962979	PrimaryExpression	0		4962697	1					
ANR	4962980	Condition	x < 4	83:24:1709:1713	4962697	1	True				
ANR	4962981	RelationalExpression	x < 4		4962697	0		<			
ANR	4962982	Identifier	x		4962697	0					
ANR	4962983	PrimaryExpression	4		4962697	1					
ANR	4962984	PostIncDecOperationExpression	x ++	83:31:1716:1718	4962697	2	True				
ANR	4962985	Identifier	x		4962697	0					
ANR	4962986	IncDec	++		4962697	1					
ANR	4962987	CompoundStatement		83:16:1683:1705	4962697	3					
ANR	4962988	IdentifierDeclStatement	"int copy = 0 , linesize = s -> linesize ;"	85:16:1740:1776	4962697	0	True				
ANR	4962989	IdentifierDecl	copy = 0		4962697	0					
ANR	4962990	IdentifierDeclType	int		4962697	0					
ANR	4962991	Identifier	copy		4962697	1					
ANR	4962992	AssignmentExpression	copy = 0		4962697	2		=			
ANR	4962993	Identifier	copy		4962697	0					
ANR	4962994	PrimaryExpression	0		4962697	1					
ANR	4962995	IdentifierDecl	linesize = s -> linesize		4962697	1					
ANR	4962996	IdentifierDeclType	int		4962697	0					
ANR	4962997	Identifier	linesize		4962697	1					
ANR	4962998	AssignmentExpression	linesize = s -> linesize		4962697	2		=			
ANR	4962999	Identifier	linesize		4962697	0					
ANR	4963000	PtrMemberAccess	s -> linesize		4962697	1					
ANR	4963001	Identifier	s		4962697	0					
ANR	4963002	Identifier	linesize		4962697	1					
ANR	4963003	IdentifierDeclStatement	uint8_t * dst = ptr + 4 * x ;	87:16:1795:1817	4962697	1	True				
ANR	4963004	IdentifierDecl	* dst = ptr + 4 * x		4962697	0					
ANR	4963005	IdentifierDeclType	uint8_t *		4962697	0					
ANR	4963006	Identifier	dst		4962697	1					
ANR	4963007	AssignmentExpression	* dst = ptr + 4 * x		4962697	2		=			
ANR	4963008	Identifier	dst		4962697	0					
ANR	4963009	AdditiveExpression	ptr + 4 * x		4962697	1		+			
ANR	4963010	Identifier	ptr		4962697	0					
ANR	4963011	MultiplicativeExpression	4 * x		4962697	1		*			
ANR	4963012	PrimaryExpression	4		4962697	0					
ANR	4963013	Identifier	x		4962697	1					
ANR	4963014	ExpressionStatement	"DECLARE_ALIGNED ( 4 , uint8_t , copy_dst ) [ 5 * 8 ]"	89:16:1836:1878	4962697	2	True				
ANR	4963015	ArrayIndexing	"DECLARE_ALIGNED ( 4 , uint8_t , copy_dst ) [ 5 * 8 ]"		4962697	0					
ANR	4963016	CallExpression	"DECLARE_ALIGNED ( 4 , uint8_t , copy_dst )"		4962697	0					
ANR	4963017	Callee	DECLARE_ALIGNED		4962697	0					
ANR	4963018	Identifier	DECLARE_ALIGNED		4962697	0					
ANR	4963019	ArgumentList	4		4962697	1					
ANR	4963020	Argument	4		4962697	0					
ANR	4963021	PrimaryExpression	4		4962697	0					
ANR	4963022	Argument	uint8_t		4962697	1					
ANR	4963023	Identifier	uint8_t		4962697	0					
ANR	4963024	Argument	copy_dst		4962697	2					
ANR	4963025	Identifier	copy_dst		4962697	0					
ANR	4963026	MultiplicativeExpression	5 * 8		4962697	1		*			
ANR	4963027	PrimaryExpression	5		4962697	0					
ANR	4963028	PrimaryExpression	8		4962697	1					
ANR	4963029	IfStatement	if ( ( y == 0 || x == 3 ) && mb_y == 0 && avctx -> flags & CODEC_FLAG_EMU_EDGE )		4962697	3					
ANR	4963030	Condition	( y == 0 || x == 3 ) && mb_y == 0 && avctx -> flags & CODEC_FLAG_EMU_EDGE	93:20:1903:1971	4962697	0	True				
ANR	4963031	AndExpression	( y == 0 || x == 3 ) && mb_y == 0 && avctx -> flags & CODEC_FLAG_EMU_EDGE		4962697	0		&&			
ANR	4963032	OrExpression	y == 0 || x == 3		4962697	0		||			
ANR	4963033	EqualityExpression	y == 0		4962697	0		==			
ANR	4963034	Identifier	y		4962697	0					
ANR	4963035	PrimaryExpression	0		4962697	1					
ANR	4963036	EqualityExpression	x == 3		4962697	1		==			
ANR	4963037	Identifier	x		4962697	0					
ANR	4963038	PrimaryExpression	3		4962697	1					
ANR	4963039	AndExpression	mb_y == 0 && avctx -> flags & CODEC_FLAG_EMU_EDGE		4962697	1		&&			
ANR	4963040	EqualityExpression	mb_y == 0		4962697	0		==			
ANR	4963041	Identifier	mb_y		4962697	0					
ANR	4963042	PrimaryExpression	0		4962697	1					
ANR	4963043	BitAndExpression	avctx -> flags & CODEC_FLAG_EMU_EDGE		4962697	1		&			
ANR	4963044	PtrMemberAccess	avctx -> flags		4962697	0					
ANR	4963045	Identifier	avctx		4962697	0					
ANR	4963046	Identifier	flags		4962697	1					
ANR	4963047	Identifier	CODEC_FLAG_EMU_EDGE		4962697	1					
ANR	4963048	CompoundStatement		89:91:1862:1862	4962697	1					
ANR	4963049	ExpressionStatement	topright = tr_top	95:20:1997:2014	4962697	0	True				
ANR	4963050	AssignmentExpression	topright = tr_top		4962697	0		=			
ANR	4963051	Identifier	topright		4962697	0					
ANR	4963052	Identifier	tr_top		4962697	1					
ANR	4963053	ElseStatement	else		4962697	0					
ANR	4963054	IfStatement	if ( x == 3 )		4962697	0					
ANR	4963055	Condition	x == 3	97:27:2044:2049	4962697	0	True				
ANR	4963056	EqualityExpression	x == 3		4962697	0		==			
ANR	4963057	Identifier	x		4962697	0					
ANR	4963058	PrimaryExpression	3		4962697	1					
ANR	4963059	ExpressionStatement	topright = tr_right	99:20:2073:2092	4962697	1	True				
ANR	4963060	AssignmentExpression	topright = tr_right		4962697	0		=			
ANR	4963061	Identifier	topright		4962697	0					
ANR	4963062	Identifier	tr_right		4962697	1					
ANR	4963063	IfStatement	if ( avctx -> flags & CODEC_FLAG_EMU_EDGE )		4962697	4					
ANR	4963064	Condition	avctx -> flags & CODEC_FLAG_EMU_EDGE	103:20:2117:2150	4962697	0	True				
ANR	4963065	BitAndExpression	avctx -> flags & CODEC_FLAG_EMU_EDGE		4962697	0		&			
ANR	4963066	PtrMemberAccess	avctx -> flags		4962697	0					
ANR	4963067	Identifier	avctx		4962697	0					
ANR	4963068	Identifier	flags		4962697	1					
ANR	4963069	Identifier	CODEC_FLAG_EMU_EDGE		4962697	1					
ANR	4963070	CompoundStatement		99:56:2041:2041	4962697	1					
ANR	4963071	ExpressionStatement	"mode = check_intra_pred4x4_mode_emuedge ( intra4x4 [ x ] , mb_x + x , mb_y + y , & copy )"	105:20:2216:2295	4962697	0	True				
ANR	4963072	AssignmentExpression	"mode = check_intra_pred4x4_mode_emuedge ( intra4x4 [ x ] , mb_x + x , mb_y + y , & copy )"		4962697	0		=			
ANR	4963073	Identifier	mode		4962697	0					
ANR	4963074	CallExpression	"check_intra_pred4x4_mode_emuedge ( intra4x4 [ x ] , mb_x + x , mb_y + y , & copy )"		4962697	1					
ANR	4963075	Callee	check_intra_pred4x4_mode_emuedge		4962697	0					
ANR	4963076	Identifier	check_intra_pred4x4_mode_emuedge		4962697	0					
ANR	4963077	ArgumentList	intra4x4 [ x ]		4962697	1					
ANR	4963078	Argument	intra4x4 [ x ]		4962697	0					
ANR	4963079	ArrayIndexing	intra4x4 [ x ]		4962697	0					
ANR	4963080	Identifier	intra4x4		4962697	0					
ANR	4963081	Identifier	x		4962697	1					
ANR	4963082	Argument	mb_x + x		4962697	1					
ANR	4963083	AdditiveExpression	mb_x + x		4962697	0		+			
ANR	4963084	Identifier	mb_x		4962697	0					
ANR	4963085	Identifier	x		4962697	1					
ANR	4963086	Argument	mb_y + y		4962697	2					
ANR	4963087	AdditiveExpression	mb_y + y		4962697	0		+			
ANR	4963088	Identifier	mb_y		4962697	0					
ANR	4963089	Identifier	y		4962697	1					
ANR	4963090	Argument	& copy		4962697	3					
ANR	4963091	UnaryOperationExpression	& copy		4962697	0					
ANR	4963092	UnaryOperator	&		4962697	0					
ANR	4963093	Identifier	copy		4962697	1					
ANR	4963094	IfStatement	if ( copy )		4962697	1					
ANR	4963095	Condition	copy	107:24:2322:2325	4962697	0	True				
ANR	4963096	Identifier	copy		4962697	0					
ANR	4963097	CompoundStatement		103:30:2216:2216	4962697	1					
ANR	4963098	ExpressionStatement	dst = copy_dst + 12	109:24:2355:2374	4962697	0	True				
ANR	4963099	AssignmentExpression	dst = copy_dst + 12		4962697	0		=			
ANR	4963100	Identifier	dst		4962697	0					
ANR	4963101	AdditiveExpression	copy_dst + 12		4962697	1		+			
ANR	4963102	Identifier	copy_dst		4962697	0					
ANR	4963103	PrimaryExpression	12		4962697	1					
ANR	4963104	ExpressionStatement	linesize = 8	111:24:2401:2413	4962697	1	True				
ANR	4963105	AssignmentExpression	linesize = 8		4962697	0		=			
ANR	4963106	Identifier	linesize		4962697	0					
ANR	4963107	PrimaryExpression	8		4962697	1					
ANR	4963108	IfStatement	if ( ! ( mb_y + y ) )		4962697	2					
ANR	4963109	Condition	! ( mb_y + y )	113:28:2444:2454	4962697	0	True				
ANR	4963110	UnaryOperationExpression	! ( mb_y + y )		4962697	0					
ANR	4963111	UnaryOperator	!		4962697	0					
ANR	4963112	AdditiveExpression	mb_y + y		4962697	1		+			
ANR	4963113	Identifier	mb_y		4962697	0					
ANR	4963114	Identifier	y		4962697	1					
ANR	4963115	CompoundStatement		109:41:2345:2345	4962697	1					
ANR	4963116	ExpressionStatement	copy_dst [ 3 ] = 127U	115:28:2488:2506	4962697	0	True				
ANR	4963117	AssignmentExpression	copy_dst [ 3 ] = 127U		4962697	0		=			
ANR	4963118	ArrayIndexing	copy_dst [ 3 ]		4962697	0					
ANR	4963119	Identifier	copy_dst		4962697	0					
ANR	4963120	PrimaryExpression	3		4962697	1					
ANR	4963121	PrimaryExpression	127U		4962697	1					
ANR	4963122	ExpressionStatement	* ( uint32_t * ) ( copy_dst + 4 ) = 127U * 0x01010101U	117:28:2537:2587	4962697	1	True				
ANR	4963123	AssignmentExpression	* ( uint32_t * ) ( copy_dst + 4 ) = 127U * 0x01010101U		4962697	0		=			
ANR	4963124	UnaryOperationExpression	* ( uint32_t * ) ( copy_dst + 4 )		4962697	0					
ANR	4963125	UnaryOperator	*		4962697	0					
ANR	4963126	CastExpression	( uint32_t * ) ( copy_dst + 4 )		4962697	1					
ANR	4963127	CastTarget	uint32_t *		4962697	0					
ANR	4963128	AdditiveExpression	copy_dst + 4		4962697	1		+			
ANR	4963129	Identifier	copy_dst		4962697	0					
ANR	4963130	PrimaryExpression	4		4962697	1					
ANR	4963131	MultiplicativeExpression	127U * 0x01010101U		4962697	1		*			
ANR	4963132	PrimaryExpression	127U		4962697	0					
ANR	4963133	PrimaryExpression	0x01010101U		4962697	1					
ANR	4963134	ElseStatement	else		4962697	0					
ANR	4963135	CompoundStatement		115:31:2509:2509	4962697	0					
ANR	4963136	ExpressionStatement	* ( uint32_t * ) ( copy_dst + 4 ) = * ( uint32_t * ) ( ptr + 4 * x - s -> linesize )	121:28:2652:2720	4962697	0	True				
ANR	4963137	AssignmentExpression	* ( uint32_t * ) ( copy_dst + 4 ) = * ( uint32_t * ) ( ptr + 4 * x - s -> linesize )		4962697	0		=			
ANR	4963138	UnaryOperationExpression	* ( uint32_t * ) ( copy_dst + 4 )		4962697	0					
ANR	4963139	UnaryOperator	*		4962697	0					
ANR	4963140	CastExpression	( uint32_t * ) ( copy_dst + 4 )		4962697	1					
ANR	4963141	CastTarget	uint32_t *		4962697	0					
ANR	4963142	AdditiveExpression	copy_dst + 4		4962697	1		+			
ANR	4963143	Identifier	copy_dst		4962697	0					
ANR	4963144	PrimaryExpression	4		4962697	1					
ANR	4963145	UnaryOperationExpression	* ( uint32_t * ) ( ptr + 4 * x - s -> linesize )		4962697	1					
ANR	4963146	UnaryOperator	*		4962697	0					
ANR	4963147	CastExpression	( uint32_t * ) ( ptr + 4 * x - s -> linesize )		4962697	1					
ANR	4963148	CastTarget	uint32_t *		4962697	0					
ANR	4963149	AdditiveExpression	ptr + 4 * x - s -> linesize		4962697	1		+			
ANR	4963150	Identifier	ptr		4962697	0					
ANR	4963151	AdditiveExpression	4 * x - s -> linesize		4962697	1		-			
ANR	4963152	MultiplicativeExpression	4 * x		4962697	0		*			
ANR	4963153	PrimaryExpression	4		4962697	0					
ANR	4963154	Identifier	x		4962697	1					
ANR	4963155	PtrMemberAccess	s -> linesize		4962697	1					
ANR	4963156	Identifier	s		4962697	0					
ANR	4963157	Identifier	linesize		4962697	1					
ANR	4963158	IfStatement	if ( ! ( mb_x + x ) )		4962697	1					
ANR	4963159	Condition	! ( mb_x + x )	123:32:2755:2765	4962697	0	True				
ANR	4963160	UnaryOperationExpression	! ( mb_x + x )		4962697	0					
ANR	4963161	UnaryOperator	!		4962697	0					
ANR	4963162	AdditiveExpression	mb_x + x		4962697	1		+			
ANR	4963163	Identifier	mb_x		4962697	0					
ANR	4963164	Identifier	x		4962697	1					
ANR	4963165	CompoundStatement		119:45:2656:2656	4962697	1					
ANR	4963166	ExpressionStatement	copy_dst [ 3 ] = 129U	125:32:2803:2821	4962697	0	True				
ANR	4963167	AssignmentExpression	copy_dst [ 3 ] = 129U		4962697	0		=			
ANR	4963168	ArrayIndexing	copy_dst [ 3 ]		4962697	0					
ANR	4963169	Identifier	copy_dst		4962697	0					
ANR	4963170	PrimaryExpression	3		4962697	1					
ANR	4963171	PrimaryExpression	129U		4962697	1					
ANR	4963172	ElseStatement	else		4962697	0					
ANR	4963173	CompoundStatement		123:35:2747:2747	4962697	0					
ANR	4963174	ExpressionStatement	copy_dst [ 3 ] = ptr [ 4 * x - s -> linesize - 1 ]	129:32:2894:2930	4962697	0	True				
ANR	4963175	AssignmentExpression	copy_dst [ 3 ] = ptr [ 4 * x - s -> linesize - 1 ]		4962697	0		=			
ANR	4963176	ArrayIndexing	copy_dst [ 3 ]		4962697	0					
ANR	4963177	Identifier	copy_dst		4962697	0					
ANR	4963178	PrimaryExpression	3		4962697	1					
ANR	4963179	ArrayIndexing	ptr [ 4 * x - s -> linesize - 1 ]		4962697	1					
ANR	4963180	Identifier	ptr		4962697	0					
ANR	4963181	AdditiveExpression	4 * x - s -> linesize - 1		4962697	1		-			
ANR	4963182	MultiplicativeExpression	4 * x		4962697	0		*			
ANR	4963183	PrimaryExpression	4		4962697	0					
ANR	4963184	Identifier	x		4962697	1					
ANR	4963185	AdditiveExpression	s -> linesize - 1		4962697	1		-			
ANR	4963186	PtrMemberAccess	s -> linesize		4962697	0					
ANR	4963187	Identifier	s		4962697	0					
ANR	4963188	Identifier	linesize		4962697	1					
ANR	4963189	PrimaryExpression	1		4962697	1					
ANR	4963190	IfStatement	if ( ! ( mb_x + x ) )		4962697	3					
ANR	4963191	Condition	! ( mb_x + x )	135:28:3019:3029	4962697	0	True				
ANR	4963192	UnaryOperationExpression	! ( mb_x + x )		4962697	0					
ANR	4963193	UnaryOperator	!		4962697	0					
ANR	4963194	AdditiveExpression	mb_x + x		4962697	1		+			
ANR	4963195	Identifier	mb_x		4962697	0					
ANR	4963196	Identifier	x		4962697	1					
ANR	4963197	CompoundStatement		131:41:2920:2920	4962697	1					
ANR	4963198	ExpressionStatement	copy_dst [ 11 ] = copy_dst [ 19 ] = copy_dst [ 27 ] = copy_dst [ 35 ] = 129U	137:28:3063:3214	4962697	0	True				
ANR	4963199	AssignmentExpression	copy_dst [ 11 ] = copy_dst [ 19 ] = copy_dst [ 27 ] = copy_dst [ 35 ] = 129U		4962697	0		=			
ANR	4963200	ArrayIndexing	copy_dst [ 11 ]		4962697	0					
ANR	4963201	Identifier	copy_dst		4962697	0					
ANR	4963202	PrimaryExpression	11		4962697	1					
ANR	4963203	AssignmentExpression	copy_dst [ 19 ] = copy_dst [ 27 ] = copy_dst [ 35 ] = 129U		4962697	1		=			
ANR	4963204	ArrayIndexing	copy_dst [ 19 ]		4962697	0					
ANR	4963205	Identifier	copy_dst		4962697	0					
ANR	4963206	PrimaryExpression	19		4962697	1					
ANR	4963207	AssignmentExpression	copy_dst [ 27 ] = copy_dst [ 35 ] = 129U		4962697	1		=			
ANR	4963208	ArrayIndexing	copy_dst [ 27 ]		4962697	0					
ANR	4963209	Identifier	copy_dst		4962697	0					
ANR	4963210	PrimaryExpression	27		4962697	1					
ANR	4963211	AssignmentExpression	copy_dst [ 35 ] = 129U		4962697	1		=			
ANR	4963212	ArrayIndexing	copy_dst [ 35 ]		4962697	0					
ANR	4963213	Identifier	copy_dst		4962697	0					
ANR	4963214	PrimaryExpression	35		4962697	1					
ANR	4963215	PrimaryExpression	129U		4962697	1					
ANR	4963216	ElseStatement	else		4962697	0					
ANR	4963217	CompoundStatement		141:31:3136:3136	4962697	0					
ANR	4963218	ExpressionStatement	copy_dst [ 11 ] = ptr [ 4 * x - 1 ]	147:28:3279:3318	4962697	0	True				
ANR	4963219	AssignmentExpression	copy_dst [ 11 ] = ptr [ 4 * x - 1 ]		4962697	0		=			
ANR	4963220	ArrayIndexing	copy_dst [ 11 ]		4962697	0					
ANR	4963221	Identifier	copy_dst		4962697	0					
ANR	4963222	PrimaryExpression	11		4962697	1					
ANR	4963223	ArrayIndexing	ptr [ 4 * x - 1 ]		4962697	1					
ANR	4963224	Identifier	ptr		4962697	0					
ANR	4963225	AdditiveExpression	4 * x - 1		4962697	1		-			
ANR	4963226	MultiplicativeExpression	4 * x		4962697	0		*			
ANR	4963227	PrimaryExpression	4		4962697	0					
ANR	4963228	Identifier	x		4962697	1					
ANR	4963229	PrimaryExpression	1		4962697	1					
ANR	4963230	ExpressionStatement	copy_dst [ 19 ] = ptr [ 4 * x + s -> linesize - 1 ]	149:28:3349:3388	4962697	1	True				
ANR	4963231	AssignmentExpression	copy_dst [ 19 ] = ptr [ 4 * x + s -> linesize - 1 ]		4962697	0		=			
ANR	4963232	ArrayIndexing	copy_dst [ 19 ]		4962697	0					
ANR	4963233	Identifier	copy_dst		4962697	0					
ANR	4963234	PrimaryExpression	19		4962697	1					
ANR	4963235	ArrayIndexing	ptr [ 4 * x + s -> linesize - 1 ]		4962697	1					
ANR	4963236	Identifier	ptr		4962697	0					
ANR	4963237	AdditiveExpression	4 * x + s -> linesize - 1		4962697	1		+			
ANR	4963238	MultiplicativeExpression	4 * x		4962697	0		*			
ANR	4963239	PrimaryExpression	4		4962697	0					
ANR	4963240	Identifier	x		4962697	1					
ANR	4963241	AdditiveExpression	s -> linesize - 1		4962697	1		-			
ANR	4963242	PtrMemberAccess	s -> linesize		4962697	0					
ANR	4963243	Identifier	s		4962697	0					
ANR	4963244	Identifier	linesize		4962697	1					
ANR	4963245	PrimaryExpression	1		4962697	1					
ANR	4963246	ExpressionStatement	copy_dst [ 27 ] = ptr [ 4 * x + s -> linesize * 2 - 1 ]	151:28:3419:3458	4962697	2	True				
ANR	4963247	AssignmentExpression	copy_dst [ 27 ] = ptr [ 4 * x + s -> linesize * 2 - 1 ]		4962697	0		=			
ANR	4963248	ArrayIndexing	copy_dst [ 27 ]		4962697	0					
ANR	4963249	Identifier	copy_dst		4962697	0					
ANR	4963250	PrimaryExpression	27		4962697	1					
ANR	4963251	ArrayIndexing	ptr [ 4 * x + s -> linesize * 2 - 1 ]		4962697	1					
ANR	4963252	Identifier	ptr		4962697	0					
ANR	4963253	AdditiveExpression	4 * x + s -> linesize * 2 - 1		4962697	1		+			
ANR	4963254	MultiplicativeExpression	4 * x		4962697	0		*			
ANR	4963255	PrimaryExpression	4		4962697	0					
ANR	4963256	Identifier	x		4962697	1					
ANR	4963257	AdditiveExpression	s -> linesize * 2 - 1		4962697	1		-			
ANR	4963258	MultiplicativeExpression	s -> linesize * 2		4962697	0		*			
ANR	4963259	PtrMemberAccess	s -> linesize		4962697	0					
ANR	4963260	Identifier	s		4962697	0					
ANR	4963261	Identifier	linesize		4962697	1					
ANR	4963262	PrimaryExpression	2		4962697	1					
ANR	4963263	PrimaryExpression	1		4962697	1					
ANR	4963264	ExpressionStatement	copy_dst [ 35 ] = ptr [ 4 * x + s -> linesize * 3 - 1 ]	153:28:3489:3528	4962697	3	True				
ANR	4963265	AssignmentExpression	copy_dst [ 35 ] = ptr [ 4 * x + s -> linesize * 3 - 1 ]		4962697	0		=			
ANR	4963266	ArrayIndexing	copy_dst [ 35 ]		4962697	0					
ANR	4963267	Identifier	copy_dst		4962697	0					
ANR	4963268	PrimaryExpression	35		4962697	1					
ANR	4963269	ArrayIndexing	ptr [ 4 * x + s -> linesize * 3 - 1 ]		4962697	1					
ANR	4963270	Identifier	ptr		4962697	0					
ANR	4963271	AdditiveExpression	4 * x + s -> linesize * 3 - 1		4962697	1		+			
ANR	4963272	MultiplicativeExpression	4 * x		4962697	0		*			
ANR	4963273	PrimaryExpression	4		4962697	0					
ANR	4963274	Identifier	x		4962697	1					
ANR	4963275	AdditiveExpression	s -> linesize * 3 - 1		4962697	1		-			
ANR	4963276	MultiplicativeExpression	s -> linesize * 3		4962697	0		*			
ANR	4963277	PtrMemberAccess	s -> linesize		4962697	0					
ANR	4963278	Identifier	s		4962697	0					
ANR	4963279	Identifier	linesize		4962697	1					
ANR	4963280	PrimaryExpression	3		4962697	1					
ANR	4963281	PrimaryExpression	1		4962697	1					
ANR	4963282	ElseStatement	else		4962697	0					
ANR	4963283	CompoundStatement		155:23:3492:3492	4962697	0					
ANR	4963284	ExpressionStatement	mode = intra4x4 [ x ]	161:20:3627:3645	4962697	0	True				
ANR	4963285	AssignmentExpression	mode = intra4x4 [ x ]		4962697	0		=			
ANR	4963286	Identifier	mode		4962697	0					
ANR	4963287	ArrayIndexing	intra4x4 [ x ]		4962697	1					
ANR	4963288	Identifier	intra4x4		4962697	0					
ANR	4963289	Identifier	x		4962697	1					
ANR	4963290	ExpressionStatement	"s -> hpc . pred4x4 [ mode ] ( dst , topright , linesize )"	165:16:3683:3728	4962697	5	True				
ANR	4963291	CallExpression	"s -> hpc . pred4x4 [ mode ] ( dst , topright , linesize )"		4962697	0					
ANR	4963292	Callee	s -> hpc . pred4x4 [ mode ]		4962697	0					
ANR	4963293	ArrayIndexing	s -> hpc . pred4x4 [ mode ]		4962697	0					
ANR	4963294	MemberAccess	s -> hpc . pred4x4		4962697	0					
ANR	4963295	PtrMemberAccess	s -> hpc		4962697	0					
ANR	4963296	Identifier	s		4962697	0					
ANR	4963297	Identifier	hpc		4962697	1					
ANR	4963298	Identifier	pred4x4		4962697	1					
ANR	4963299	Identifier	mode		4962697	1					
ANR	4963300	ArgumentList	dst		4962697	1					
ANR	4963301	Argument	dst		4962697	0					
ANR	4963302	Identifier	dst		4962697	0					
ANR	4963303	Argument	topright		4962697	1					
ANR	4963304	Identifier	topright		4962697	0					
ANR	4963305	Argument	linesize		4962697	2					
ANR	4963306	Identifier	linesize		4962697	0					
ANR	4963307	IfStatement	if ( copy )		4962697	6					
ANR	4963308	Condition	copy	167:20:3751:3754	4962697	0	True				
ANR	4963309	Identifier	copy		4962697	0					
ANR	4963310	CompoundStatement		163:26:3645:3645	4962697	1					
ANR	4963311	ExpressionStatement	* ( uint32_t * ) ( ptr + 4 * x ) = * ( uint32_t * ) ( copy_dst + 12 )	169:20:3780:3851	4962697	0	True				
ANR	4963312	AssignmentExpression	* ( uint32_t * ) ( ptr + 4 * x ) = * ( uint32_t * ) ( copy_dst + 12 )		4962697	0		=			
ANR	4963313	UnaryOperationExpression	* ( uint32_t * ) ( ptr + 4 * x )		4962697	0					
ANR	4963314	UnaryOperator	*		4962697	0					
ANR	4963315	CastExpression	( uint32_t * ) ( ptr + 4 * x )		4962697	1					
ANR	4963316	CastTarget	uint32_t *		4962697	0					
ANR	4963317	AdditiveExpression	ptr + 4 * x		4962697	1		+			
ANR	4963318	Identifier	ptr		4962697	0					
ANR	4963319	MultiplicativeExpression	4 * x		4962697	1		*			
ANR	4963320	PrimaryExpression	4		4962697	0					
ANR	4963321	Identifier	x		4962697	1					
ANR	4963322	UnaryOperationExpression	* ( uint32_t * ) ( copy_dst + 12 )		4962697	1					
ANR	4963323	UnaryOperator	*		4962697	0					
ANR	4963324	CastExpression	( uint32_t * ) ( copy_dst + 12 )		4962697	1					
ANR	4963325	CastTarget	uint32_t *		4962697	0					
ANR	4963326	AdditiveExpression	copy_dst + 12		4962697	1		+			
ANR	4963327	Identifier	copy_dst		4962697	0					
ANR	4963328	PrimaryExpression	12		4962697	1					
ANR	4963329	ExpressionStatement	* ( uint32_t * ) ( ptr + 4 * x + s -> linesize ) = * ( uint32_t * ) ( copy_dst + 20 )	171:20:3874:3945	4962697	1	True				
ANR	4963330	AssignmentExpression	* ( uint32_t * ) ( ptr + 4 * x + s -> linesize ) = * ( uint32_t * ) ( copy_dst + 20 )		4962697	0		=			
ANR	4963331	UnaryOperationExpression	* ( uint32_t * ) ( ptr + 4 * x + s -> linesize )		4962697	0					
ANR	4963332	UnaryOperator	*		4962697	0					
ANR	4963333	CastExpression	( uint32_t * ) ( ptr + 4 * x + s -> linesize )		4962697	1					
ANR	4963334	CastTarget	uint32_t *		4962697	0					
ANR	4963335	AdditiveExpression	ptr + 4 * x + s -> linesize		4962697	1		+			
ANR	4963336	Identifier	ptr		4962697	0					
ANR	4963337	AdditiveExpression	4 * x + s -> linesize		4962697	1		+			
ANR	4963338	MultiplicativeExpression	4 * x		4962697	0		*			
ANR	4963339	PrimaryExpression	4		4962697	0					
ANR	4963340	Identifier	x		4962697	1					
ANR	4963341	PtrMemberAccess	s -> linesize		4962697	1					
ANR	4963342	Identifier	s		4962697	0					
ANR	4963343	Identifier	linesize		4962697	1					
ANR	4963344	UnaryOperationExpression	* ( uint32_t * ) ( copy_dst + 20 )		4962697	1					
ANR	4963345	UnaryOperator	*		4962697	0					
ANR	4963346	CastExpression	( uint32_t * ) ( copy_dst + 20 )		4962697	1					
ANR	4963347	CastTarget	uint32_t *		4962697	0					
ANR	4963348	AdditiveExpression	copy_dst + 20		4962697	1		+			
ANR	4963349	Identifier	copy_dst		4962697	0					
ANR	4963350	PrimaryExpression	20		4962697	1					
ANR	4963351	ExpressionStatement	* ( uint32_t * ) ( ptr + 4 * x + s -> linesize * 2 ) = * ( uint32_t * ) ( copy_dst + 28 )	173:20:3968:4039	4962697	2	True				
ANR	4963352	AssignmentExpression	* ( uint32_t * ) ( ptr + 4 * x + s -> linesize * 2 ) = * ( uint32_t * ) ( copy_dst + 28 )		4962697	0		=			
ANR	4963353	UnaryOperationExpression	* ( uint32_t * ) ( ptr + 4 * x + s -> linesize * 2 )		4962697	0					
ANR	4963354	UnaryOperator	*		4962697	0					
ANR	4963355	CastExpression	( uint32_t * ) ( ptr + 4 * x + s -> linesize * 2 )		4962697	1					
ANR	4963356	CastTarget	uint32_t *		4962697	0					
ANR	4963357	AdditiveExpression	ptr + 4 * x + s -> linesize * 2		4962697	1		+			
ANR	4963358	Identifier	ptr		4962697	0					
ANR	4963359	AdditiveExpression	4 * x + s -> linesize * 2		4962697	1		+			
ANR	4963360	MultiplicativeExpression	4 * x		4962697	0		*			
ANR	4963361	PrimaryExpression	4		4962697	0					
ANR	4963362	Identifier	x		4962697	1					
ANR	4963363	MultiplicativeExpression	s -> linesize * 2		4962697	1		*			
ANR	4963364	PtrMemberAccess	s -> linesize		4962697	0					
ANR	4963365	Identifier	s		4962697	0					
ANR	4963366	Identifier	linesize		4962697	1					
ANR	4963367	PrimaryExpression	2		4962697	1					
ANR	4963368	UnaryOperationExpression	* ( uint32_t * ) ( copy_dst + 28 )		4962697	1					
ANR	4963369	UnaryOperator	*		4962697	0					
ANR	4963370	CastExpression	( uint32_t * ) ( copy_dst + 28 )		4962697	1					
ANR	4963371	CastTarget	uint32_t *		4962697	0					
ANR	4963372	AdditiveExpression	copy_dst + 28		4962697	1		+			
ANR	4963373	Identifier	copy_dst		4962697	0					
ANR	4963374	PrimaryExpression	28		4962697	1					
ANR	4963375	ExpressionStatement	* ( uint32_t * ) ( ptr + 4 * x + s -> linesize * 3 ) = * ( uint32_t * ) ( copy_dst + 36 )	175:20:4062:4133	4962697	3	True				
ANR	4963376	AssignmentExpression	* ( uint32_t * ) ( ptr + 4 * x + s -> linesize * 3 ) = * ( uint32_t * ) ( copy_dst + 36 )		4962697	0		=			
ANR	4963377	UnaryOperationExpression	* ( uint32_t * ) ( ptr + 4 * x + s -> linesize * 3 )		4962697	0					
ANR	4963378	UnaryOperator	*		4962697	0					
ANR	4963379	CastExpression	( uint32_t * ) ( ptr + 4 * x + s -> linesize * 3 )		4962697	1					
ANR	4963380	CastTarget	uint32_t *		4962697	0					
ANR	4963381	AdditiveExpression	ptr + 4 * x + s -> linesize * 3		4962697	1		+			
ANR	4963382	Identifier	ptr		4962697	0					
ANR	4963383	AdditiveExpression	4 * x + s -> linesize * 3		4962697	1		+			
ANR	4963384	MultiplicativeExpression	4 * x		4962697	0		*			
ANR	4963385	PrimaryExpression	4		4962697	0					
ANR	4963386	Identifier	x		4962697	1					
ANR	4963387	MultiplicativeExpression	s -> linesize * 3		4962697	1		*			
ANR	4963388	PtrMemberAccess	s -> linesize		4962697	0					
ANR	4963389	Identifier	s		4962697	0					
ANR	4963390	Identifier	linesize		4962697	1					
ANR	4963391	PrimaryExpression	3		4962697	1					
ANR	4963392	UnaryOperationExpression	* ( uint32_t * ) ( copy_dst + 36 )		4962697	1					
ANR	4963393	UnaryOperator	*		4962697	0					
ANR	4963394	CastExpression	( uint32_t * ) ( copy_dst + 36 )		4962697	1					
ANR	4963395	CastTarget	uint32_t *		4962697	0					
ANR	4963396	AdditiveExpression	copy_dst + 36		4962697	1		+			
ANR	4963397	Identifier	copy_dst		4962697	0					
ANR	4963398	PrimaryExpression	36		4962697	1					
ANR	4963399	ExpressionStatement	nnz = s -> non_zero_count_cache [ y ] [ x ]	181:16:4173:4208	4962697	7	True				
ANR	4963400	AssignmentExpression	nnz = s -> non_zero_count_cache [ y ] [ x ]		4962697	0		=			
ANR	4963401	Identifier	nnz		4962697	0					
ANR	4963402	ArrayIndexing	s -> non_zero_count_cache [ y ] [ x ]		4962697	1					
ANR	4963403	ArrayIndexing	s -> non_zero_count_cache [ y ]		4962697	0					
ANR	4963404	PtrMemberAccess	s -> non_zero_count_cache		4962697	0					
ANR	4963405	Identifier	s		4962697	0					
ANR	4963406	Identifier	non_zero_count_cache		4962697	1					
ANR	4963407	Identifier	y		4962697	1					
ANR	4963408	Identifier	x		4962697	1					
ANR	4963409	IfStatement	if ( nnz )		4962697	8					
ANR	4963410	Condition	nnz	183:20:4231:4233	4962697	0	True				
ANR	4963411	Identifier	nnz		4962697	0					
ANR	4963412	CompoundStatement		179:25:4124:4124	4962697	1					
ANR	4963413	IfStatement	if ( nnz == 1 )		4962697	0					
ANR	4963414	Condition	nnz == 1	185:24:4263:4270	4962697	0	True				
ANR	4963415	EqualityExpression	nnz == 1		4962697	0		==			
ANR	4963416	Identifier	nnz		4962697	0					
ANR	4963417	PrimaryExpression	1		4962697	1					
ANR	4963418	ExpressionStatement	"s -> vp8dsp . vp8_idct_dc_add ( ptr + 4 * x , s -> block [ y ] [ x ] , s -> linesize )"	187:24:4298:4361	4962697	1	True				
ANR	4963419	CallExpression	"s -> vp8dsp . vp8_idct_dc_add ( ptr + 4 * x , s -> block [ y ] [ x ] , s -> linesize )"		4962697	0					
ANR	4963420	Callee	s -> vp8dsp . vp8_idct_dc_add		4962697	0					
ANR	4963421	MemberAccess	s -> vp8dsp . vp8_idct_dc_add		4962697	0					
ANR	4963422	PtrMemberAccess	s -> vp8dsp		4962697	0					
ANR	4963423	Identifier	s		4962697	0					
ANR	4963424	Identifier	vp8dsp		4962697	1					
ANR	4963425	Identifier	vp8_idct_dc_add		4962697	1					
ANR	4963426	ArgumentList	ptr + 4 * x		4962697	1					
ANR	4963427	Argument	ptr + 4 * x		4962697	0					
ANR	4963428	AdditiveExpression	ptr + 4 * x		4962697	0		+			
ANR	4963429	Identifier	ptr		4962697	0					
ANR	4963430	MultiplicativeExpression	4 * x		4962697	1		*			
ANR	4963431	PrimaryExpression	4		4962697	0					
ANR	4963432	Identifier	x		4962697	1					
ANR	4963433	Argument	s -> block [ y ] [ x ]		4962697	1					
ANR	4963434	ArrayIndexing	s -> block [ y ] [ x ]		4962697	0					
ANR	4963435	ArrayIndexing	s -> block [ y ]		4962697	0					
ANR	4963436	PtrMemberAccess	s -> block		4962697	0					
ANR	4963437	Identifier	s		4962697	0					
ANR	4963438	Identifier	block		4962697	1					
ANR	4963439	Identifier	y		4962697	1					
ANR	4963440	Identifier	x		4962697	1					
ANR	4963441	Argument	s -> linesize		4962697	2					
ANR	4963442	PtrMemberAccess	s -> linesize		4962697	0					
ANR	4963443	Identifier	s		4962697	0					
ANR	4963444	Identifier	linesize		4962697	1					
ANR	4963445	ElseStatement	else		4962697	0					
ANR	4963446	ExpressionStatement	"s -> vp8dsp . vp8_idct_add ( ptr + 4 * x , s -> block [ y ] [ x ] , s -> linesize )"	191:24:4414:4474	4962697	0	True				
ANR	4963447	CallExpression	"s -> vp8dsp . vp8_idct_add ( ptr + 4 * x , s -> block [ y ] [ x ] , s -> linesize )"		4962697	0					
ANR	4963448	Callee	s -> vp8dsp . vp8_idct_add		4962697	0					
ANR	4963449	MemberAccess	s -> vp8dsp . vp8_idct_add		4962697	0					
ANR	4963450	PtrMemberAccess	s -> vp8dsp		4962697	0					
ANR	4963451	Identifier	s		4962697	0					
ANR	4963452	Identifier	vp8dsp		4962697	1					
ANR	4963453	Identifier	vp8_idct_add		4962697	1					
ANR	4963454	ArgumentList	ptr + 4 * x		4962697	1					
ANR	4963455	Argument	ptr + 4 * x		4962697	0					
ANR	4963456	AdditiveExpression	ptr + 4 * x		4962697	0		+			
ANR	4963457	Identifier	ptr		4962697	0					
ANR	4963458	MultiplicativeExpression	4 * x		4962697	1		*			
ANR	4963459	PrimaryExpression	4		4962697	0					
ANR	4963460	Identifier	x		4962697	1					
ANR	4963461	Argument	s -> block [ y ] [ x ]		4962697	1					
ANR	4963462	ArrayIndexing	s -> block [ y ] [ x ]		4962697	0					
ANR	4963463	ArrayIndexing	s -> block [ y ]		4962697	0					
ANR	4963464	PtrMemberAccess	s -> block		4962697	0					
ANR	4963465	Identifier	s		4962697	0					
ANR	4963466	Identifier	block		4962697	1					
ANR	4963467	Identifier	y		4962697	1					
ANR	4963468	Identifier	x		4962697	1					
ANR	4963469	Argument	s -> linesize		4962697	2					
ANR	4963470	PtrMemberAccess	s -> linesize		4962697	0					
ANR	4963471	Identifier	s		4962697	0					
ANR	4963472	Identifier	linesize		4962697	1					
ANR	4963473	ExpressionStatement	topright += 4	195:16:4512:4525	4962697	9	True				
ANR	4963474	AssignmentExpression	topright += 4		4962697	0		+=			
ANR	4963475	Identifier	topright		4962697	0					
ANR	4963476	PrimaryExpression	4		4962697	1					
ANR	4963477	ExpressionStatement	ptr += 4 * s -> linesize	201:12:4557:4579	4962697	2	True				
ANR	4963478	AssignmentExpression	ptr += 4 * s -> linesize		4962697	0		+=			
ANR	4963479	Identifier	ptr		4962697	0					
ANR	4963480	MultiplicativeExpression	4 * s -> linesize		4962697	1		*			
ANR	4963481	PrimaryExpression	4		4962697	0					
ANR	4963482	PtrMemberAccess	s -> linesize		4962697	1					
ANR	4963483	Identifier	s		4962697	0					
ANR	4963484	Identifier	linesize		4962697	1					
ANR	4963485	ExpressionStatement	intra4x4 += 4	203:12:4594:4607	4962697	3	True				
ANR	4963486	AssignmentExpression	intra4x4 += 4		4962697	0		+=			
ANR	4963487	Identifier	intra4x4		4962697	0					
ANR	4963488	PrimaryExpression	4		4962697	1					
ANR	4963489	IfStatement	if ( avctx -> flags & CODEC_FLAG_EMU_EDGE )		4962697	4					
ANR	4963490	Condition	avctx -> flags & CODEC_FLAG_EMU_EDGE	211:8:4638:4671	4962697	0	True				
ANR	4963491	BitAndExpression	avctx -> flags & CODEC_FLAG_EMU_EDGE		4962697	0		&			
ANR	4963492	PtrMemberAccess	avctx -> flags		4962697	0					
ANR	4963493	Identifier	avctx		4962697	0					
ANR	4963494	Identifier	flags		4962697	1					
ANR	4963495	Identifier	CODEC_FLAG_EMU_EDGE		4962697	1					
ANR	4963496	CompoundStatement		207:44:4562:4562	4962697	1					
ANR	4963497	ExpressionStatement	"mode = check_intra_pred8x8_mode_emuedge ( s -> chroma_pred_mode , mb_x , mb_y )"	213:8:4685:4757	4962697	0	True				
ANR	4963498	AssignmentExpression	"mode = check_intra_pred8x8_mode_emuedge ( s -> chroma_pred_mode , mb_x , mb_y )"		4962697	0		=			
ANR	4963499	Identifier	mode		4962697	0					
ANR	4963500	CallExpression	"check_intra_pred8x8_mode_emuedge ( s -> chroma_pred_mode , mb_x , mb_y )"		4962697	1					
ANR	4963501	Callee	check_intra_pred8x8_mode_emuedge		4962697	0					
ANR	4963502	Identifier	check_intra_pred8x8_mode_emuedge		4962697	0					
ANR	4963503	ArgumentList	s -> chroma_pred_mode		4962697	1					
ANR	4963504	Argument	s -> chroma_pred_mode		4962697	0					
ANR	4963505	PtrMemberAccess	s -> chroma_pred_mode		4962697	0					
ANR	4963506	Identifier	s		4962697	0					
ANR	4963507	Identifier	chroma_pred_mode		4962697	1					
ANR	4963508	Argument	mb_x		4962697	1					
ANR	4963509	Identifier	mb_x		4962697	0					
ANR	4963510	Argument	mb_y		4962697	2					
ANR	4963511	Identifier	mb_y		4962697	0					
ANR	4963512	ElseStatement	else		4962697	0					
ANR	4963513	CompoundStatement		211:11:4659:4659	4962697	0					
ANR	4963514	ExpressionStatement	"mode = check_intra_pred8x8_mode ( s -> chroma_pred_mode , mb_x , mb_y )"	217:8:4782:4846	4962697	0	True				
ANR	4963515	AssignmentExpression	"mode = check_intra_pred8x8_mode ( s -> chroma_pred_mode , mb_x , mb_y )"		4962697	0		=			
ANR	4963516	Identifier	mode		4962697	0					
ANR	4963517	CallExpression	"check_intra_pred8x8_mode ( s -> chroma_pred_mode , mb_x , mb_y )"		4962697	1					
ANR	4963518	Callee	check_intra_pred8x8_mode		4962697	0					
ANR	4963519	Identifier	check_intra_pred8x8_mode		4962697	0					
ANR	4963520	ArgumentList	s -> chroma_pred_mode		4962697	1					
ANR	4963521	Argument	s -> chroma_pred_mode		4962697	0					
ANR	4963522	PtrMemberAccess	s -> chroma_pred_mode		4962697	0					
ANR	4963523	Identifier	s		4962697	0					
ANR	4963524	Identifier	chroma_pred_mode		4962697	1					
ANR	4963525	Argument	mb_x		4962697	1					
ANR	4963526	Identifier	mb_x		4962697	0					
ANR	4963527	Argument	mb_y		4962697	2					
ANR	4963528	Identifier	mb_y		4962697	0					
ANR	4963529	ExpressionStatement	"s -> hpc . pred8x8 [ mode ] ( dst [ 1 ] , s -> uvlinesize )"	221:4:4860:4903	4962697	5	True				
ANR	4963530	CallExpression	"s -> hpc . pred8x8 [ mode ] ( dst [ 1 ] , s -> uvlinesize )"		4962697	0					
ANR	4963531	Callee	s -> hpc . pred8x8 [ mode ]		4962697	0					
ANR	4963532	ArrayIndexing	s -> hpc . pred8x8 [ mode ]		4962697	0					
ANR	4963533	MemberAccess	s -> hpc . pred8x8		4962697	0					
ANR	4963534	PtrMemberAccess	s -> hpc		4962697	0					
ANR	4963535	Identifier	s		4962697	0					
ANR	4963536	Identifier	hpc		4962697	1					
ANR	4963537	Identifier	pred8x8		4962697	1					
ANR	4963538	Identifier	mode		4962697	1					
ANR	4963539	ArgumentList	dst [ 1 ]		4962697	1					
ANR	4963540	Argument	dst [ 1 ]		4962697	0					
ANR	4963541	ArrayIndexing	dst [ 1 ]		4962697	0					
ANR	4963542	Identifier	dst		4962697	0					
ANR	4963543	PrimaryExpression	1		4962697	1					
ANR	4963544	Argument	s -> uvlinesize		4962697	1					
ANR	4963545	PtrMemberAccess	s -> uvlinesize		4962697	0					
ANR	4963546	Identifier	s		4962697	0					
ANR	4963547	Identifier	uvlinesize		4962697	1					
ANR	4963548	ExpressionStatement	"s -> hpc . pred8x8 [ mode ] ( dst [ 2 ] , s -> uvlinesize )"	223:4:4910:4953	4962697	6	True				
ANR	4963549	CallExpression	"s -> hpc . pred8x8 [ mode ] ( dst [ 2 ] , s -> uvlinesize )"		4962697	0					
ANR	4963550	Callee	s -> hpc . pred8x8 [ mode ]		4962697	0					
ANR	4963551	ArrayIndexing	s -> hpc . pred8x8 [ mode ]		4962697	0					
ANR	4963552	MemberAccess	s -> hpc . pred8x8		4962697	0					
ANR	4963553	PtrMemberAccess	s -> hpc		4962697	0					
ANR	4963554	Identifier	s		4962697	0					
ANR	4963555	Identifier	hpc		4962697	1					
ANR	4963556	Identifier	pred8x8		4962697	1					
ANR	4963557	Identifier	mode		4962697	1					
ANR	4963558	ArgumentList	dst [ 2 ]		4962697	1					
ANR	4963559	Argument	dst [ 2 ]		4962697	0					
ANR	4963560	ArrayIndexing	dst [ 2 ]		4962697	0					
ANR	4963561	Identifier	dst		4962697	0					
ANR	4963562	PrimaryExpression	2		4962697	1					
ANR	4963563	Argument	s -> uvlinesize		4962697	1					
ANR	4963564	PtrMemberAccess	s -> uvlinesize		4962697	0					
ANR	4963565	Identifier	s		4962697	0					
ANR	4963566	Identifier	uvlinesize		4962697	1					
ANR	4963567	IfStatement	if ( ! ( avctx -> flags & CODEC_FLAG_EMU_EDGE && ! mb_y ) && ( s -> deblock_filter || ! mb_y ) )		4962697	7					
ANR	4963568	Condition	! ( avctx -> flags & CODEC_FLAG_EMU_EDGE && ! mb_y ) && ( s -> deblock_filter || ! mb_y )	227:8:4966:5043	4962697	0	True				
ANR	4963569	AndExpression	! ( avctx -> flags & CODEC_FLAG_EMU_EDGE && ! mb_y ) && ( s -> deblock_filter || ! mb_y )		4962697	0		&&			
ANR	4963570	UnaryOperationExpression	! ( avctx -> flags & CODEC_FLAG_EMU_EDGE && ! mb_y )		4962697	0					
ANR	4963571	UnaryOperator	!		4962697	0					
ANR	4963572	AndExpression	avctx -> flags & CODEC_FLAG_EMU_EDGE && ! mb_y		4962697	1		&&			
ANR	4963573	BitAndExpression	avctx -> flags & CODEC_FLAG_EMU_EDGE		4962697	0		&			
ANR	4963574	PtrMemberAccess	avctx -> flags		4962697	0					
ANR	4963575	Identifier	avctx		4962697	0					
ANR	4963576	Identifier	flags		4962697	1					
ANR	4963577	Identifier	CODEC_FLAG_EMU_EDGE		4962697	1					
ANR	4963578	UnaryOperationExpression	! mb_y		4962697	1					
ANR	4963579	UnaryOperator	!		4962697	0					
ANR	4963580	Identifier	mb_y		4962697	1					
ANR	4963581	OrExpression	s -> deblock_filter || ! mb_y		4962697	1		||			
ANR	4963582	PtrMemberAccess	s -> deblock_filter		4962697	0					
ANR	4963583	Identifier	s		4962697	0					
ANR	4963584	Identifier	deblock_filter		4962697	1					
ANR	4963585	UnaryOperationExpression	! mb_y		4962697	1					
ANR	4963586	UnaryOperator	!		4962697	0					
ANR	4963587	Identifier	mb_y		4962697	1					
ANR	4963588	ExpressionStatement	"xchg_mb_border ( s -> top_border [ mb_x + 1 ] , dst [ 0 ] , dst [ 1 ] , dst [ 2 ] , s -> linesize , s -> uvlinesize , mb_x , mb_y , s -> mb_width , s -> filter . simple , 0 )"	229:8:5055:5238	4962697	1	True				
ANR	4963589	CallExpression	"xchg_mb_border ( s -> top_border [ mb_x + 1 ] , dst [ 0 ] , dst [ 1 ] , dst [ 2 ] , s -> linesize , s -> uvlinesize , mb_x , mb_y , s -> mb_width , s -> filter . simple , 0 )"		4962697	0					
ANR	4963590	Callee	xchg_mb_border		4962697	0					
ANR	4963591	Identifier	xchg_mb_border		4962697	0					
ANR	4963592	ArgumentList	s -> top_border [ mb_x + 1 ]		4962697	1					
ANR	4963593	Argument	s -> top_border [ mb_x + 1 ]		4962697	0					
ANR	4963594	ArrayIndexing	s -> top_border [ mb_x + 1 ]		4962697	0					
ANR	4963595	PtrMemberAccess	s -> top_border		4962697	0					
ANR	4963596	Identifier	s		4962697	0					
ANR	4963597	Identifier	top_border		4962697	1					
ANR	4963598	AdditiveExpression	mb_x + 1		4962697	1		+			
ANR	4963599	Identifier	mb_x		4962697	0					
ANR	4963600	PrimaryExpression	1		4962697	1					
ANR	4963601	Argument	dst [ 0 ]		4962697	1					
ANR	4963602	ArrayIndexing	dst [ 0 ]		4962697	0					
ANR	4963603	Identifier	dst		4962697	0					
ANR	4963604	PrimaryExpression	0		4962697	1					
ANR	4963605	Argument	dst [ 1 ]		4962697	2					
ANR	4963606	ArrayIndexing	dst [ 1 ]		4962697	0					
ANR	4963607	Identifier	dst		4962697	0					
ANR	4963608	PrimaryExpression	1		4962697	1					
ANR	4963609	Argument	dst [ 2 ]		4962697	3					
ANR	4963610	ArrayIndexing	dst [ 2 ]		4962697	0					
ANR	4963611	Identifier	dst		4962697	0					
ANR	4963612	PrimaryExpression	2		4962697	1					
ANR	4963613	Argument	s -> linesize		4962697	4					
ANR	4963614	PtrMemberAccess	s -> linesize		4962697	0					
ANR	4963615	Identifier	s		4962697	0					
ANR	4963616	Identifier	linesize		4962697	1					
ANR	4963617	Argument	s -> uvlinesize		4962697	5					
ANR	4963618	PtrMemberAccess	s -> uvlinesize		4962697	0					
ANR	4963619	Identifier	s		4962697	0					
ANR	4963620	Identifier	uvlinesize		4962697	1					
ANR	4963621	Argument	mb_x		4962697	6					
ANR	4963622	Identifier	mb_x		4962697	0					
ANR	4963623	Argument	mb_y		4962697	7					
ANR	4963624	Identifier	mb_y		4962697	0					
ANR	4963625	Argument	s -> mb_width		4962697	8					
ANR	4963626	PtrMemberAccess	s -> mb_width		4962697	0					
ANR	4963627	Identifier	s		4962697	0					
ANR	4963628	Identifier	mb_width		4962697	1					
ANR	4963629	Argument	s -> filter . simple		4962697	9					
ANR	4963630	MemberAccess	s -> filter . simple		4962697	0					
ANR	4963631	PtrMemberAccess	s -> filter		4962697	0					
ANR	4963632	Identifier	s		4962697	0					
ANR	4963633	Identifier	filter		4962697	1					
ANR	4963634	Identifier	simple		4962697	1					
ANR	4963635	Argument	0		4962697	10					
ANR	4963636	PrimaryExpression	0		4962697	0					
ANR	4963637	ReturnType	void		4962697	1					
ANR	4963638	Identifier	intra_predict		4962697	2					
ANR	4963639	ParameterList	"VP8Context * s , uint8_t * dst [ 3 ] , VP8Macroblock * mb , int mb_x , int mb_y"		4962697	3					
ANR	4963640	Parameter	VP8Context * s	1:19:19:31	4962697	0	True				
ANR	4963641	ParameterType	VP8Context *		4962697	0					
ANR	4963642	Identifier	s		4962697	1					
ANR	4963643	Parameter	uint8_t * dst [ 3 ]	1:34:34:48	4962697	1	True				
ANR	4963644	ParameterType	uint8_t * [ 3 ]		4962697	0					
ANR	4963645	Identifier	dst		4962697	1					
ANR	4963646	Parameter	VP8Macroblock * mb	1:51:51:67	4962697	2	True				
ANR	4963647	ParameterType	VP8Macroblock *		4962697	0					
ANR	4963648	Identifier	mb		4962697	1					
ANR	4963649	Parameter	int mb_x	3:19:90:97	4962697	3	True				
ANR	4963650	ParameterType	int		4962697	0					
ANR	4963651	Identifier	mb_x		4962697	1					
ANR	4963652	Parameter	int mb_y	3:29:100:107	4962697	4	True				
ANR	4963653	ParameterType	int		4962697	0					
ANR	4963654	Identifier	mb_y		4962697	1					
ANR	4963655	CFGEntryNode	ENTRY		4962697		True				
ANR	4963656	CFGExitNode	EXIT		4962697		True				
ANR	4963657	Symbol	check_intra_pred8x8_mode_emuedge		4962697						
ANR	4963658	Symbol	* ( uint32_t * ) ( ptr + 4 * x )		4962697						
ANR	4963659	Symbol	* x		4962697						
ANR	4963660	Symbol	* y		4962697						
ANR	4963661	Symbol	s -> mb_width		4962697						
ANR	4963662	Symbol	s -> uvlinesize		4962697						
ANR	4963663	Symbol	* * s -> non_zero_count_cache		4962697						
ANR	4963664	Symbol	s -> hpc		4962697						
ANR	4963665	Symbol	* ( uint32_t * ) ( copy_dst + 12 )		4962697						
ANR	4963666	Symbol	* ( uint32_t * ) ( ptr + 4 * x + s -> linesize )		4962697						
ANR	4963667	Symbol	mode		4962697						
ANR	4963668	Symbol	* dst		4962697						
ANR	4963669	Symbol	* ( uint32_t * ) ( copy_dst + 28 )		4962697						
ANR	4963670	Symbol	s -> filter		4962697						
ANR	4963671	Symbol	linesize		4962697						
ANR	4963672	Symbol	mb		4962697						
ANR	4963673	Symbol	topright		4962697						
ANR	4963674	Symbol	* ptr		4962697						
ANR	4963675	Symbol	avctx -> flags		4962697						
ANR	4963676	Symbol	* mb_x		4962697						
ANR	4963677	Symbol	* ( uint32_t * ) ( copy_dst + 4 )		4962697						
ANR	4963678	Symbol	copy_dst		4962697						
ANR	4963679	Symbol	s -> intra4x4_pred_mode_mb		4962697						
ANR	4963680	Symbol	& tr		4962697						
ANR	4963681	Symbol	* ( uint32_t * ) ( ptr + 4 * x + s -> linesize * 2 )		4962697						
ANR	4963682	Symbol	s -> hpc . pred16x16		4962697						
ANR	4963683	Symbol	* * * s		4962697						
ANR	4963684	Symbol	* avctx		4962697						
ANR	4963685	Symbol	DECLARE_ALIGNED		4962697						
ANR	4963686	Symbol	tr_right		4962697						
ANR	4963687	Symbol	uint8_t		4962697						
ANR	4963688	Symbol	nnz		4962697						
ANR	4963689	Symbol	s -> avctx		4962697						
ANR	4963690	Symbol	* s -> top_border		4962697						
ANR	4963691	Symbol	* intra4x4		4962697						
ANR	4963692	Symbol	check_intra_pred8x8_mode		4962697						
ANR	4963693	Symbol	* * s -> block		4962697						
ANR	4963694	Symbol	dst		4962697						
ANR	4963695	Symbol	check_intra_pred4x4_mode_emuedge		4962697						
ANR	4963696	Symbol	* copy_dst		4962697						
ANR	4963697	Symbol	s -> vp8dsp		4962697						
ANR	4963698	Symbol	* ( uint32_t * ) ( copy_dst + 36 )		4962697						
ANR	4963699	Symbol	* * y		4962697						
ANR	4963700	Symbol	s -> deblock_filter		4962697						
ANR	4963701	Symbol	s -> linesize		4962697						
ANR	4963702	Symbol	s -> hpc . pred8x8		4962697						
ANR	4963703	Symbol	* * s		4962697						
ANR	4963704	Symbol	* mb		4962697						
ANR	4963705	Symbol	s -> top_border		4962697						
ANR	4963706	Symbol	mb -> skip		4962697						
ANR	4963707	Symbol	* s -> linesize		4962697						
ANR	4963708	Symbol	copy		4962697						
ANR	4963709	Symbol	avctx		4962697						
ANR	4963710	Symbol	s -> hpc . pred4x4		4962697						
ANR	4963711	Symbol	s -> chroma_pred_mode		4962697						
ANR	4963712	Symbol	& copy		4962697						
ANR	4963713	Symbol	* ( uint32_t * ) ( copy_dst + 20 )		4962697						
ANR	4963714	Symbol	* ( uint32_t * ) ( ptr + 4 * x + s -> linesize * 3 )		4962697						
ANR	4963715	Symbol	* tr_right		4962697						
ANR	4963716	Symbol	ptr		4962697						
ANR	4963717	Symbol	* s -> block		4962697						
ANR	4963718	Symbol	tr_top		4962697						
ANR	4963719	Symbol	s		4962697						
ANR	4963720	Symbol	s -> filter . simple		4962697						
ANR	4963721	Symbol	MODE_I4x4		4962697						
ANR	4963722	Symbol	* s -> non_zero_count_cache		4962697						
ANR	4963723	Symbol	x		4962697						
ANR	4963724	Symbol	s -> non_zero_count_cache		4962697						
ANR	4963725	Symbol	y		4962697						
ANR	4963726	Symbol	mb_y		4962697						
ANR	4963727	Symbol	intra4x4		4962697						
ANR	4963728	Symbol	mb_x		4962697						
ANR	4963729	Symbol	* s		4962697						
ANR	4963730	Symbol	CODEC_FLAG_EMU_EDGE		4962697						
ANR	4963731	Symbol	* ( uint32_t * ) ( ptr + 4 * x - s -> linesize )		4962697						
ANR	4963732	Symbol	tr		4962697						
ANR	4963733	Symbol	s -> block		4962697						
ANR	4963734	Symbol	mb -> mode		4962697						
