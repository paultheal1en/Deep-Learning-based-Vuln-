command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2149047	File	/home/p4ultr4n/workplace/ReVeal/raw_code/dfa_decode_frame_1.c								
ANR	2149048	Function	dfa_decode_frame	1:0:0:2221							
ANR	2149049	FunctionDef	"dfa_decode_frame (AVCodecContext * avctx , void * data , int * data_size , AVPacket * avpkt)"		2149048	0					
ANR	2149050	CompoundStatement		7:0:155:2221	2149048	0					
ANR	2149051	IdentifierDeclStatement	DfaContext * s = avctx -> priv_data ;	9:4:162:194	2149048	0	True				
ANR	2149052	IdentifierDecl	* s = avctx -> priv_data		2149048	0					
ANR	2149053	IdentifierDeclType	DfaContext *		2149048	0					
ANR	2149054	Identifier	s		2149048	1					
ANR	2149055	AssignmentExpression	* s = avctx -> priv_data		2149048	2		=			
ANR	2149056	Identifier	s		2149048	0					
ANR	2149057	PtrMemberAccess	avctx -> priv_data		2149048	1					
ANR	2149058	Identifier	avctx		2149048	0					
ANR	2149059	Identifier	priv_data		2149048	1					
ANR	2149060	IdentifierDeclStatement	const uint8_t * buf = avpkt -> data ;	11:4:201:233	2149048	1	True				
ANR	2149061	IdentifierDecl	* buf = avpkt -> data		2149048	0					
ANR	2149062	IdentifierDeclType	const uint8_t *		2149048	0					
ANR	2149063	Identifier	buf		2149048	1					
ANR	2149064	AssignmentExpression	* buf = avpkt -> data		2149048	2		=			
ANR	2149065	Identifier	buf		2149048	0					
ANR	2149066	PtrMemberAccess	avpkt -> data		2149048	1					
ANR	2149067	Identifier	avpkt		2149048	0					
ANR	2149068	Identifier	data		2149048	1					
ANR	2149069	IdentifierDeclStatement	const uint8_t * buf_end = avpkt -> data + avpkt -> size ;	13:4:240:290	2149048	2	True				
ANR	2149070	IdentifierDecl	* buf_end = avpkt -> data + avpkt -> size		2149048	0					
ANR	2149071	IdentifierDeclType	const uint8_t *		2149048	0					
ANR	2149072	Identifier	buf_end		2149048	1					
ANR	2149073	AssignmentExpression	* buf_end = avpkt -> data + avpkt -> size		2149048	2		=			
ANR	2149074	Identifier	buf_end		2149048	0					
ANR	2149075	AdditiveExpression	avpkt -> data + avpkt -> size		2149048	1		+			
ANR	2149076	PtrMemberAccess	avpkt -> data		2149048	0					
ANR	2149077	Identifier	avpkt		2149048	0					
ANR	2149078	Identifier	data		2149048	1					
ANR	2149079	PtrMemberAccess	avpkt -> size		2149048	1					
ANR	2149080	Identifier	avpkt		2149048	0					
ANR	2149081	Identifier	size		2149048	1					
ANR	2149082	IdentifierDeclStatement	const uint8_t * tmp_buf ;	15:4:297:319	2149048	3	True				
ANR	2149083	IdentifierDecl	* tmp_buf		2149048	0					
ANR	2149084	IdentifierDeclType	const uint8_t *		2149048	0					
ANR	2149085	Identifier	tmp_buf		2149048	1					
ANR	2149086	IdentifierDeclStatement	"uint32_t chunk_type , chunk_size ;"	17:4:326:357	2149048	4	True				
ANR	2149087	IdentifierDecl	chunk_type		2149048	0					
ANR	2149088	IdentifierDeclType	uint32_t		2149048	0					
ANR	2149089	Identifier	chunk_type		2149048	1					
ANR	2149090	IdentifierDecl	chunk_size		2149048	1					
ANR	2149091	IdentifierDeclType	uint32_t		2149048	0					
ANR	2149092	Identifier	chunk_size		2149048	1					
ANR	2149093	IdentifierDeclStatement	uint8_t * dst ;	19:4:364:376	2149048	5	True				
ANR	2149094	IdentifierDecl	* dst		2149048	0					
ANR	2149095	IdentifierDeclType	uint8_t *		2149048	0					
ANR	2149096	Identifier	dst		2149048	1					
ANR	2149097	IdentifierDeclStatement	int ret ;	21:4:383:390	2149048	6	True				
ANR	2149098	IdentifierDecl	ret		2149048	0					
ANR	2149099	IdentifierDeclType	int		2149048	0					
ANR	2149100	Identifier	ret		2149048	1					
ANR	2149101	IdentifierDeclStatement	"int i , pal_elems ;"	23:4:397:413	2149048	7	True				
ANR	2149102	IdentifierDecl	i		2149048	0					
ANR	2149103	IdentifierDeclType	int		2149048	0					
ANR	2149104	Identifier	i		2149048	1					
ANR	2149105	IdentifierDecl	pal_elems		2149048	1					
ANR	2149106	IdentifierDeclType	int		2149048	0					
ANR	2149107	Identifier	pal_elems		2149048	1					
ANR	2149108	IfStatement	if ( s -> pic . data [ 0 ] )		2149048	8					
ANR	2149109	Condition	s -> pic . data [ 0 ]	27:8:426:439	2149048	0	True				
ANR	2149110	ArrayIndexing	s -> pic . data [ 0 ]		2149048	0					
ANR	2149111	MemberAccess	s -> pic . data		2149048	0					
ANR	2149112	PtrMemberAccess	s -> pic		2149048	0					
ANR	2149113	Identifier	s		2149048	0					
ANR	2149114	Identifier	pic		2149048	1					
ANR	2149115	Identifier	data		2149048	1					
ANR	2149116	PrimaryExpression	0		2149048	1					
ANR	2149117	ExpressionStatement	"avctx -> release_buffer ( avctx , & s -> pic )"	29:8:451:488	2149048	1	True				
ANR	2149118	CallExpression	"avctx -> release_buffer ( avctx , & s -> pic )"		2149048	0					
ANR	2149119	Callee	avctx -> release_buffer		2149048	0					
ANR	2149120	PtrMemberAccess	avctx -> release_buffer		2149048	0					
ANR	2149121	Identifier	avctx		2149048	0					
ANR	2149122	Identifier	release_buffer		2149048	1					
ANR	2149123	ArgumentList	avctx		2149048	1					
ANR	2149124	Argument	avctx		2149048	0					
ANR	2149125	Identifier	avctx		2149048	0					
ANR	2149126	Argument	& s -> pic		2149048	1					
ANR	2149127	UnaryOperationExpression	& s -> pic		2149048	0					
ANR	2149128	UnaryOperator	&		2149048	0					
ANR	2149129	PtrMemberAccess	s -> pic		2149048	1					
ANR	2149130	Identifier	s		2149048	0					
ANR	2149131	Identifier	pic		2149048	1					
ANR	2149132	IfStatement	"if ( ( ret = avctx -> get_buffer ( avctx , & s -> pic ) ) )"		2149048	9					
ANR	2149133	Condition	"ret = avctx -> get_buffer ( avctx , & s -> pic )"	33:8:501:541	2149048	0	True				
ANR	2149134	AssignmentExpression	"ret = avctx -> get_buffer ( avctx , & s -> pic )"		2149048	0		=			
ANR	2149135	Identifier	ret		2149048	0					
ANR	2149136	CallExpression	"avctx -> get_buffer ( avctx , & s -> pic )"		2149048	1					
ANR	2149137	Callee	avctx -> get_buffer		2149048	0					
ANR	2149138	PtrMemberAccess	avctx -> get_buffer		2149048	0					
ANR	2149139	Identifier	avctx		2149048	0					
ANR	2149140	Identifier	get_buffer		2149048	1					
ANR	2149141	ArgumentList	avctx		2149048	1					
ANR	2149142	Argument	avctx		2149048	0					
ANR	2149143	Identifier	avctx		2149048	0					
ANR	2149144	Argument	& s -> pic		2149048	1					
ANR	2149145	UnaryOperationExpression	& s -> pic		2149048	0					
ANR	2149146	UnaryOperator	&		2149048	0					
ANR	2149147	PtrMemberAccess	s -> pic		2149048	1					
ANR	2149148	Identifier	s		2149048	0					
ANR	2149149	Identifier	pic		2149048	1					
ANR	2149150	CompoundStatement		27:51:388:388	2149048	1					
ANR	2149151	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""get_buffer() failed\\n"" )"	35:8:555:607	2149048	0	True				
ANR	2149152	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""get_buffer() failed\\n"" )"		2149048	0					
ANR	2149153	Callee	av_log		2149048	0					
ANR	2149154	Identifier	av_log		2149048	0					
ANR	2149155	ArgumentList	avctx		2149048	1					
ANR	2149156	Argument	avctx		2149048	0					
ANR	2149157	Identifier	avctx		2149048	0					
ANR	2149158	Argument	AV_LOG_ERROR		2149048	1					
ANR	2149159	Identifier	AV_LOG_ERROR		2149048	0					
ANR	2149160	Argument	"""get_buffer() failed\\n"""		2149048	2					
ANR	2149161	PrimaryExpression	"""get_buffer() failed\\n"""		2149048	0					
ANR	2149162	ReturnStatement	return ret ;	37:8:618:628	2149048	1	True				
ANR	2149163	Identifier	ret		2149048	0					
ANR	2149164	WhileStatement	while ( buf < buf_end )		2149048	10					
ANR	2149165	Condition	buf < buf_end	43:11:651:663	2149048	0	True				
ANR	2149166	RelationalExpression	buf < buf_end		2149048	0		<			
ANR	2149167	Identifier	buf		2149048	0					
ANR	2149168	Identifier	buf_end		2149048	1					
ANR	2149169	CompoundStatement		37:26:510:510	2149048	1					
ANR	2149170	ExpressionStatement	chunk_size = AV_RL32 ( buf + 4 )	45:8:677:706	2149048	0	True				
ANR	2149171	AssignmentExpression	chunk_size = AV_RL32 ( buf + 4 )		2149048	0		=			
ANR	2149172	Identifier	chunk_size		2149048	0					
ANR	2149173	CallExpression	AV_RL32 ( buf + 4 )		2149048	1					
ANR	2149174	Callee	AV_RL32		2149048	0					
ANR	2149175	Identifier	AV_RL32		2149048	0					
ANR	2149176	ArgumentList	buf + 4		2149048	1					
ANR	2149177	Argument	buf + 4		2149048	0					
ANR	2149178	AdditiveExpression	buf + 4		2149048	0		+			
ANR	2149179	Identifier	buf		2149048	0					
ANR	2149180	PrimaryExpression	4		2149048	1					
ANR	2149181	ExpressionStatement	chunk_type = AV_RL32 ( buf + 8 )	47:8:717:746	2149048	1	True				
ANR	2149182	AssignmentExpression	chunk_type = AV_RL32 ( buf + 8 )		2149048	0		=			
ANR	2149183	Identifier	chunk_type		2149048	0					
ANR	2149184	CallExpression	AV_RL32 ( buf + 8 )		2149048	1					
ANR	2149185	Callee	AV_RL32		2149048	0					
ANR	2149186	Identifier	AV_RL32		2149048	0					
ANR	2149187	ArgumentList	buf + 8		2149048	1					
ANR	2149188	Argument	buf + 8		2149048	0					
ANR	2149189	AdditiveExpression	buf + 8		2149048	0		+			
ANR	2149190	Identifier	buf		2149048	0					
ANR	2149191	PrimaryExpression	8		2149048	1					
ANR	2149192	ExpressionStatement	buf += 12	49:8:757:766	2149048	2	True				
ANR	2149193	AssignmentExpression	buf += 12		2149048	0		+=			
ANR	2149194	Identifier	buf		2149048	0					
ANR	2149195	PrimaryExpression	12		2149048	1					
ANR	2149196	IfStatement	if ( buf_end - buf < chunk_size )		2149048	3					
ANR	2149197	Condition	buf_end - buf < chunk_size	51:12:781:806	2149048	0	True				
ANR	2149198	RelationalExpression	buf_end - buf < chunk_size		2149048	0		<			
ANR	2149199	AdditiveExpression	buf_end - buf		2149048	0		-			
ANR	2149200	Identifier	buf_end		2149048	0					
ANR	2149201	Identifier	buf		2149048	1					
ANR	2149202	Identifier	chunk_size		2149048	1					
ANR	2149203	CompoundStatement		45:40:653:653	2149048	1					
ANR	2149204	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Chunk size is too big (%d bytes)\\n"" , chunk_size )"	53:12:824:901	2149048	0	True				
ANR	2149205	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Chunk size is too big (%d bytes)\\n"" , chunk_size )"		2149048	0					
ANR	2149206	Callee	av_log		2149048	0					
ANR	2149207	Identifier	av_log		2149048	0					
ANR	2149208	ArgumentList	avctx		2149048	1					
ANR	2149209	Argument	avctx		2149048	0					
ANR	2149210	Identifier	avctx		2149048	0					
ANR	2149211	Argument	AV_LOG_ERROR		2149048	1					
ANR	2149212	Identifier	AV_LOG_ERROR		2149048	0					
ANR	2149213	Argument	"""Chunk size is too big (%d bytes)\\n"""		2149048	2					
ANR	2149214	PrimaryExpression	"""Chunk size is too big (%d bytes)\\n"""		2149048	0					
ANR	2149215	Argument	chunk_size		2149048	3					
ANR	2149216	Identifier	chunk_size		2149048	0					
ANR	2149217	ReturnStatement	return - 1 ;	55:12:916:925	2149048	1	True				
ANR	2149218	UnaryOperationExpression	- 1		2149048	0					
ANR	2149219	UnaryOperator	-		2149048	0					
ANR	2149220	PrimaryExpression	1		2149048	1					
ANR	2149221	IfStatement	if ( ! chunk_type )		2149048	4					
ANR	2149222	Condition	! chunk_type	59:12:951:961	2149048	0	True				
ANR	2149223	UnaryOperationExpression	! chunk_type		2149048	0					
ANR	2149224	UnaryOperator	!		2149048	0					
ANR	2149225	Identifier	chunk_type		2149048	1					
ANR	2149226	BreakStatement	break ;	61:12:977:982	2149048	1	True				
ANR	2149227	IfStatement	if ( chunk_type == 1 )		2149048	5					
ANR	2149228	Condition	chunk_type == 1	63:12:997:1011	2149048	0	True				
ANR	2149229	EqualityExpression	chunk_type == 1		2149048	0		==			
ANR	2149230	Identifier	chunk_type		2149048	0					
ANR	2149231	PrimaryExpression	1		2149048	1					
ANR	2149232	CompoundStatement		57:29:858:858	2149048	1					
ANR	2149233	ExpressionStatement	"pal_elems = FFMIN ( chunk_size / 3 , 256 )"	65:12:1029:1067	2149048	0	True				
ANR	2149234	AssignmentExpression	"pal_elems = FFMIN ( chunk_size / 3 , 256 )"		2149048	0		=			
ANR	2149235	Identifier	pal_elems		2149048	0					
ANR	2149236	CallExpression	"FFMIN ( chunk_size / 3 , 256 )"		2149048	1					
ANR	2149237	Callee	FFMIN		2149048	0					
ANR	2149238	Identifier	FFMIN		2149048	0					
ANR	2149239	ArgumentList	chunk_size / 3		2149048	1					
ANR	2149240	Argument	chunk_size / 3		2149048	0					
ANR	2149241	MultiplicativeExpression	chunk_size / 3		2149048	0		/			
ANR	2149242	Identifier	chunk_size		2149048	0					
ANR	2149243	PrimaryExpression	3		2149048	1					
ANR	2149244	Argument	256		2149048	1					
ANR	2149245	PrimaryExpression	256		2149048	0					
ANR	2149246	ExpressionStatement	tmp_buf = buf	67:12:1082:1095	2149048	1	True				
ANR	2149247	AssignmentExpression	tmp_buf = buf		2149048	0		=			
ANR	2149248	Identifier	tmp_buf		2149048	0					
ANR	2149249	Identifier	buf		2149048	1					
ANR	2149250	ForStatement	for ( i = 0 ; i < pal_elems ; i ++ )		2149048	2					
ANR	2149251	ForInit	i = 0 ;	69:17:1115:1120	2149048	0	True				
ANR	2149252	AssignmentExpression	i = 0		2149048	0		=			
ANR	2149253	Identifier	i		2149048	0					
ANR	2149254	PrimaryExpression	0		2149048	1					
ANR	2149255	Condition	i < pal_elems	69:24:1122:1134	2149048	1	True				
ANR	2149256	RelationalExpression	i < pal_elems		2149048	0		<			
ANR	2149257	Identifier	i		2149048	0					
ANR	2149258	Identifier	pal_elems		2149048	1					
ANR	2149259	PostIncDecOperationExpression	i ++	69:39:1137:1139	2149048	2	True				
ANR	2149260	Identifier	i		2149048	0					
ANR	2149261	IncDec	++		2149048	1					
ANR	2149262	CompoundStatement		63:44:986:986	2149048	3					
ANR	2149263	ExpressionStatement	s -> pal [ i ] = bytestream_get_be24 ( & tmp_buf ) << 2	71:16:1161:1207	2149048	0	True				
ANR	2149264	AssignmentExpression	s -> pal [ i ] = bytestream_get_be24 ( & tmp_buf ) << 2		2149048	0		=			
ANR	2149265	ArrayIndexing	s -> pal [ i ]		2149048	0					
ANR	2149266	PtrMemberAccess	s -> pal		2149048	0					
ANR	2149267	Identifier	s		2149048	0					
ANR	2149268	Identifier	pal		2149048	1					
ANR	2149269	Identifier	i		2149048	1					
ANR	2149270	ShiftExpression	bytestream_get_be24 ( & tmp_buf ) << 2		2149048	1		<<			
ANR	2149271	CallExpression	bytestream_get_be24 ( & tmp_buf )		2149048	0					
ANR	2149272	Callee	bytestream_get_be24		2149048	0					
ANR	2149273	Identifier	bytestream_get_be24		2149048	0					
ANR	2149274	ArgumentList	& tmp_buf		2149048	1					
ANR	2149275	Argument	& tmp_buf		2149048	0					
ANR	2149276	UnaryOperationExpression	& tmp_buf		2149048	0					
ANR	2149277	UnaryOperator	&		2149048	0					
ANR	2149278	Identifier	tmp_buf		2149048	1					
ANR	2149279	PrimaryExpression	2		2149048	1					
ANR	2149280	ExpressionStatement	s -> pal [ i ] |= ( s -> pal [ i ] >> 6 ) & 0x333	73:16:1226:1263	2149048	1	True				
ANR	2149281	AssignmentExpression	s -> pal [ i ] |= ( s -> pal [ i ] >> 6 ) & 0x333		2149048	0		|=			
ANR	2149282	ArrayIndexing	s -> pal [ i ]		2149048	0					
ANR	2149283	PtrMemberAccess	s -> pal		2149048	0					
ANR	2149284	Identifier	s		2149048	0					
ANR	2149285	Identifier	pal		2149048	1					
ANR	2149286	Identifier	i		2149048	1					
ANR	2149287	BitAndExpression	( s -> pal [ i ] >> 6 ) & 0x333		2149048	1		&			
ANR	2149288	ShiftExpression	s -> pal [ i ] >> 6		2149048	0		>>			
ANR	2149289	ArrayIndexing	s -> pal [ i ]		2149048	0					
ANR	2149290	PtrMemberAccess	s -> pal		2149048	0					
ANR	2149291	Identifier	s		2149048	0					
ANR	2149292	Identifier	pal		2149048	1					
ANR	2149293	Identifier	i		2149048	1					
ANR	2149294	PrimaryExpression	6		2149048	1					
ANR	2149295	PrimaryExpression	0x333		2149048	1					
ANR	2149296	ExpressionStatement	s -> pic . palette_has_changed = 1	77:12:1293:1323	2149048	3	True				
ANR	2149297	AssignmentExpression	s -> pic . palette_has_changed = 1		2149048	0		=			
ANR	2149298	MemberAccess	s -> pic . palette_has_changed		2149048	0					
ANR	2149299	PtrMemberAccess	s -> pic		2149048	0					
ANR	2149300	Identifier	s		2149048	0					
ANR	2149301	Identifier	pic		2149048	1					
ANR	2149302	Identifier	palette_has_changed		2149048	1					
ANR	2149303	PrimaryExpression	1		2149048	1					
ANR	2149304	ElseStatement	else		2149048	0					
ANR	2149305	IfStatement	if ( chunk_type <= 9 )		2149048	0					
ANR	2149306	Condition	chunk_type <= 9	79:19:1345:1359	2149048	0	True				
ANR	2149307	RelationalExpression	chunk_type <= 9		2149048	0		<=			
ANR	2149308	Identifier	chunk_type		2149048	0					
ANR	2149309	PrimaryExpression	9		2149048	1					
ANR	2149310	CompoundStatement		73:36:1206:1206	2149048	1					
ANR	2149311	IfStatement	"if ( decoder [ chunk_type - 2 ] ( s -> frame_buf , avctx -> width , avctx -> height , buf , buf + chunk_size ) )"		2149048	0					
ANR	2149312	Condition	"decoder [ chunk_type - 2 ] ( s -> frame_buf , avctx -> width , avctx -> height , buf , buf + chunk_size )"	81:16:1381:1510	2149048	0	True				
ANR	2149313	CallExpression	"decoder [ chunk_type - 2 ] ( s -> frame_buf , avctx -> width , avctx -> height , buf , buf + chunk_size )"		2149048	0					
ANR	2149314	Callee	decoder [ chunk_type - 2 ]		2149048	0					
ANR	2149315	ArrayIndexing	decoder [ chunk_type - 2 ]		2149048	0					
ANR	2149316	Identifier	decoder		2149048	0					
ANR	2149317	AdditiveExpression	chunk_type - 2		2149048	1		-			
ANR	2149318	Identifier	chunk_type		2149048	0					
ANR	2149319	PrimaryExpression	2		2149048	1					
ANR	2149320	ArgumentList	s -> frame_buf		2149048	1					
ANR	2149321	Argument	s -> frame_buf		2149048	0					
ANR	2149322	PtrMemberAccess	s -> frame_buf		2149048	0					
ANR	2149323	Identifier	s		2149048	0					
ANR	2149324	Identifier	frame_buf		2149048	1					
ANR	2149325	Argument	avctx -> width		2149048	1					
ANR	2149326	PtrMemberAccess	avctx -> width		2149048	0					
ANR	2149327	Identifier	avctx		2149048	0					
ANR	2149328	Identifier	width		2149048	1					
ANR	2149329	Argument	avctx -> height		2149048	2					
ANR	2149330	PtrMemberAccess	avctx -> height		2149048	0					
ANR	2149331	Identifier	avctx		2149048	0					
ANR	2149332	Identifier	height		2149048	1					
ANR	2149333	Argument	buf		2149048	3					
ANR	2149334	Identifier	buf		2149048	0					
ANR	2149335	Argument	buf + chunk_size		2149048	4					
ANR	2149336	AdditiveExpression	buf + chunk_size		2149048	0		+			
ANR	2149337	Identifier	buf		2149048	0					
ANR	2149338	Identifier	chunk_size		2149048	1					
ANR	2149339	CompoundStatement		77:64:1357:1357	2149048	1					
ANR	2149340	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Error decoding %s chunk\\n"" , chunk_name [ chunk_type - 2 ] )"	85:16:1532:1640	2149048	0	True				
ANR	2149341	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Error decoding %s chunk\\n"" , chunk_name [ chunk_type - 2 ] )"		2149048	0					
ANR	2149342	Callee	av_log		2149048	0					
ANR	2149343	Identifier	av_log		2149048	0					
ANR	2149344	ArgumentList	avctx		2149048	1					
ANR	2149345	Argument	avctx		2149048	0					
ANR	2149346	Identifier	avctx		2149048	0					
ANR	2149347	Argument	AV_LOG_ERROR		2149048	1					
ANR	2149348	Identifier	AV_LOG_ERROR		2149048	0					
ANR	2149349	Argument	"""Error decoding %s chunk\\n"""		2149048	2					
ANR	2149350	PrimaryExpression	"""Error decoding %s chunk\\n"""		2149048	0					
ANR	2149351	Argument	chunk_name [ chunk_type - 2 ]		2149048	3					
ANR	2149352	ArrayIndexing	chunk_name [ chunk_type - 2 ]		2149048	0					
ANR	2149353	Identifier	chunk_name		2149048	0					
ANR	2149354	AdditiveExpression	chunk_type - 2		2149048	1		-			
ANR	2149355	Identifier	chunk_type		2149048	0					
ANR	2149356	PrimaryExpression	2		2149048	1					
ANR	2149357	ReturnStatement	return - 1 ;	89:16:1659:1668	2149048	1	True				
ANR	2149358	UnaryOperationExpression	- 1		2149048	0					
ANR	2149359	UnaryOperator	-		2149048	0					
ANR	2149360	PrimaryExpression	1		2149048	1					
ANR	2149361	ElseStatement	else		2149048	0					
ANR	2149362	CompoundStatement		87:15:1545:1545	2149048	0					
ANR	2149363	ExpressionStatement	"av_log ( avctx , AV_LOG_WARNING , ""Ignoring unknown chunk type %d\\n"" , chunk_type )"	95:12:1716:1813	2149048	0	True				
ANR	2149364	CallExpression	"av_log ( avctx , AV_LOG_WARNING , ""Ignoring unknown chunk type %d\\n"" , chunk_type )"		2149048	0					
ANR	2149365	Callee	av_log		2149048	0					
ANR	2149366	Identifier	av_log		2149048	0					
ANR	2149367	ArgumentList	avctx		2149048	1					
ANR	2149368	Argument	avctx		2149048	0					
ANR	2149369	Identifier	avctx		2149048	0					
ANR	2149370	Argument	AV_LOG_WARNING		2149048	1					
ANR	2149371	Identifier	AV_LOG_WARNING		2149048	0					
ANR	2149372	Argument	"""Ignoring unknown chunk type %d\\n"""		2149048	2					
ANR	2149373	PrimaryExpression	"""Ignoring unknown chunk type %d\\n"""		2149048	0					
ANR	2149374	Argument	chunk_type		2149048	3					
ANR	2149375	Identifier	chunk_type		2149048	0					
ANR	2149376	ExpressionStatement	buf += chunk_size	101:8:1835:1852	2149048	6	True				
ANR	2149377	AssignmentExpression	buf += chunk_size		2149048	0		+=			
ANR	2149378	Identifier	buf		2149048	0					
ANR	2149379	Identifier	chunk_size		2149048	1					
ANR	2149380	ExpressionStatement	buf = s -> frame_buf	107:4:1868:1886	2149048	11	True				
ANR	2149381	AssignmentExpression	buf = s -> frame_buf		2149048	0		=			
ANR	2149382	Identifier	buf		2149048	0					
ANR	2149383	PtrMemberAccess	s -> frame_buf		2149048	1					
ANR	2149384	Identifier	s		2149048	0					
ANR	2149385	Identifier	frame_buf		2149048	1					
ANR	2149386	ExpressionStatement	dst = s -> pic . data [ 0 ]	109:4:1893:1913	2149048	12	True				
ANR	2149387	AssignmentExpression	dst = s -> pic . data [ 0 ]		2149048	0		=			
ANR	2149388	Identifier	dst		2149048	0					
ANR	2149389	ArrayIndexing	s -> pic . data [ 0 ]		2149048	1					
ANR	2149390	MemberAccess	s -> pic . data		2149048	0					
ANR	2149391	PtrMemberAccess	s -> pic		2149048	0					
ANR	2149392	Identifier	s		2149048	0					
ANR	2149393	Identifier	pic		2149048	1					
ANR	2149394	Identifier	data		2149048	1					
ANR	2149395	PrimaryExpression	0		2149048	1					
ANR	2149396	ForStatement	for ( i = 0 ; i < avctx -> height ; i ++ )		2149048	13					
ANR	2149397	ForInit	i = 0 ;	111:9:1925:1930	2149048	0	True				
ANR	2149398	AssignmentExpression	i = 0		2149048	0		=			
ANR	2149399	Identifier	i		2149048	0					
ANR	2149400	PrimaryExpression	0		2149048	1					
ANR	2149401	Condition	i < avctx -> height	111:16:1932:1948	2149048	1	True				
ANR	2149402	RelationalExpression	i < avctx -> height		2149048	0		<			
ANR	2149403	Identifier	i		2149048	0					
ANR	2149404	PtrMemberAccess	avctx -> height		2149048	1					
ANR	2149405	Identifier	avctx		2149048	0					
ANR	2149406	Identifier	height		2149048	1					
ANR	2149407	PostIncDecOperationExpression	i ++	111:35:1951:1953	2149048	2	True				
ANR	2149408	Identifier	i		2149048	0					
ANR	2149409	IncDec	++		2149048	1					
ANR	2149410	CompoundStatement		105:40:1800:1800	2149048	3					
ANR	2149411	ExpressionStatement	"memcpy ( dst , buf , avctx -> width )"	113:8:1967:1997	2149048	0	True				
ANR	2149412	CallExpression	"memcpy ( dst , buf , avctx -> width )"		2149048	0					
ANR	2149413	Callee	memcpy		2149048	0					
ANR	2149414	Identifier	memcpy		2149048	0					
ANR	2149415	ArgumentList	dst		2149048	1					
ANR	2149416	Argument	dst		2149048	0					
ANR	2149417	Identifier	dst		2149048	0					
ANR	2149418	Argument	buf		2149048	1					
ANR	2149419	Identifier	buf		2149048	0					
ANR	2149420	Argument	avctx -> width		2149048	2					
ANR	2149421	PtrMemberAccess	avctx -> width		2149048	0					
ANR	2149422	Identifier	avctx		2149048	0					
ANR	2149423	Identifier	width		2149048	1					
ANR	2149424	ExpressionStatement	dst += s -> pic . linesize [ 0 ]	115:8:2008:2033	2149048	1	True				
ANR	2149425	AssignmentExpression	dst += s -> pic . linesize [ 0 ]		2149048	0		+=			
ANR	2149426	Identifier	dst		2149048	0					
ANR	2149427	ArrayIndexing	s -> pic . linesize [ 0 ]		2149048	1					
ANR	2149428	MemberAccess	s -> pic . linesize		2149048	0					
ANR	2149429	PtrMemberAccess	s -> pic		2149048	0					
ANR	2149430	Identifier	s		2149048	0					
ANR	2149431	Identifier	pic		2149048	1					
ANR	2149432	Identifier	linesize		2149048	1					
ANR	2149433	PrimaryExpression	0		2149048	1					
ANR	2149434	ExpressionStatement	buf += avctx -> width	117:8:2044:2063	2149048	2	True				
ANR	2149435	AssignmentExpression	buf += avctx -> width		2149048	0		+=			
ANR	2149436	Identifier	buf		2149048	0					
ANR	2149437	PtrMemberAccess	avctx -> width		2149048	1					
ANR	2149438	Identifier	avctx		2149048	0					
ANR	2149439	Identifier	width		2149048	1					
ANR	2149440	ExpressionStatement	"memcpy ( s -> pic . data [ 1 ] , s -> pal , sizeof ( s -> pal ) )"	121:4:2077:2123	2149048	14	True				
ANR	2149441	CallExpression	"memcpy ( s -> pic . data [ 1 ] , s -> pal , sizeof ( s -> pal ) )"		2149048	0					
ANR	2149442	Callee	memcpy		2149048	0					
ANR	2149443	Identifier	memcpy		2149048	0					
ANR	2149444	ArgumentList	s -> pic . data [ 1 ]		2149048	1					
ANR	2149445	Argument	s -> pic . data [ 1 ]		2149048	0					
ANR	2149446	ArrayIndexing	s -> pic . data [ 1 ]		2149048	0					
ANR	2149447	MemberAccess	s -> pic . data		2149048	0					
ANR	2149448	PtrMemberAccess	s -> pic		2149048	0					
ANR	2149449	Identifier	s		2149048	0					
ANR	2149450	Identifier	pic		2149048	1					
ANR	2149451	Identifier	data		2149048	1					
ANR	2149452	PrimaryExpression	1		2149048	1					
ANR	2149453	Argument	s -> pal		2149048	1					
ANR	2149454	PtrMemberAccess	s -> pal		2149048	0					
ANR	2149455	Identifier	s		2149048	0					
ANR	2149456	Identifier	pal		2149048	1					
ANR	2149457	Argument	sizeof ( s -> pal )		2149048	2					
ANR	2149458	SizeofExpression	sizeof ( s -> pal )		2149048	0					
ANR	2149459	Sizeof	sizeof		2149048	0					
ANR	2149460	PtrMemberAccess	s -> pal		2149048	1					
ANR	2149461	Identifier	s		2149048	0					
ANR	2149462	Identifier	pal		2149048	1					
ANR	2149463	ExpressionStatement	* data_size = sizeof ( AVFrame )	125:4:2132:2160	2149048	15	True				
ANR	2149464	AssignmentExpression	* data_size = sizeof ( AVFrame )		2149048	0		=			
ANR	2149465	UnaryOperationExpression	* data_size		2149048	0					
ANR	2149466	UnaryOperator	*		2149048	0					
ANR	2149467	Identifier	data_size		2149048	1					
ANR	2149468	SizeofExpression	sizeof ( AVFrame )		2149048	1					
ANR	2149469	Sizeof	sizeof		2149048	0					
ANR	2149470	SizeofOperand	AVFrame		2149048	1					
ANR	2149471	ExpressionStatement	* ( AVFrame * ) data = s -> pic	127:4:2167:2191	2149048	16	True				
ANR	2149472	AssignmentExpression	* ( AVFrame * ) data = s -> pic		2149048	0		=			
ANR	2149473	UnaryOperationExpression	* ( AVFrame * ) data		2149048	0					
ANR	2149474	UnaryOperator	*		2149048	0					
ANR	2149475	CastExpression	( AVFrame * ) data		2149048	1					
ANR	2149476	CastTarget	AVFrame *		2149048	0					
ANR	2149477	Identifier	data		2149048	1					
ANR	2149478	PtrMemberAccess	s -> pic		2149048	1					
ANR	2149479	Identifier	s		2149048	0					
ANR	2149480	Identifier	pic		2149048	1					
ANR	2149481	ReturnStatement	return avpkt -> size ;	131:4:2200:2218	2149048	17	True				
ANR	2149482	PtrMemberAccess	avpkt -> size		2149048	0					
ANR	2149483	Identifier	avpkt		2149048	0					
ANR	2149484	Identifier	size		2149048	1					
ANR	2149485	ReturnType	static int		2149048	1					
ANR	2149486	Identifier	dfa_decode_frame		2149048	2					
ANR	2149487	ParameterList	"AVCodecContext * avctx , void * data , int * data_size , AVPacket * avpkt"		2149048	3					
ANR	2149488	Parameter	AVCodecContext * avctx	1:28:28:48	2149048	0	True				
ANR	2149489	ParameterType	AVCodecContext *		2149048	0					
ANR	2149490	Identifier	avctx		2149048	1					
ANR	2149491	Parameter	void * data	3:28:80:89	2149048	1	True				
ANR	2149492	ParameterType	void *		2149048	0					
ANR	2149493	Identifier	data		2149048	1					
ANR	2149494	Parameter	int * data_size	3:40:92:105	2149048	2	True				
ANR	2149495	ParameterType	int *		2149048	0					
ANR	2149496	Identifier	data_size		2149048	1					
ANR	2149497	Parameter	AVPacket * avpkt	5:28:137:151	2149048	3	True				
ANR	2149498	ParameterType	AVPacket *		2149048	0					
ANR	2149499	Identifier	avpkt		2149048	1					
ANR	2149500	CFGEntryNode	ENTRY		2149048		True				
ANR	2149501	CFGExitNode	EXIT		2149048		True				
ANR	2149502	Symbol	s -> pic . palette_has_changed		2149048						
ANR	2149503	Symbol	* decoder		2149048						
ANR	2149504	Symbol	chunk_size		2149048						
ANR	2149505	Symbol	data		2149048						
ANR	2149506	Symbol	* s -> pic . linesize		2149048						
ANR	2149507	Symbol	& s -> pic		2149048						
ANR	2149508	Symbol	FFMIN		2149048						
ANR	2149509	Symbol	avpkt		2149048						
ANR	2149510	Symbol	* data_size		2149048						
ANR	2149511	Symbol	chunk_name		2149048						
ANR	2149512	Symbol	* s -> pic . data		2149048						
ANR	2149513	Symbol	* chunk_name		2149048						
ANR	2149514	Symbol	buf_end		2149048						
ANR	2149515	Symbol	data_size		2149048						
ANR	2149516	Symbol	ret		2149048						
ANR	2149517	Symbol	bytestream_get_be24		2149048						
ANR	2149518	Symbol	& tmp_buf		2149048						
ANR	2149519	Symbol	decoder		2149048						
ANR	2149520	Symbol	s -> frame_buf		2149048						
ANR	2149521	Symbol	* avctx		2149048						
ANR	2149522	Symbol	avpkt -> data		2149048						
ANR	2149523	Symbol	dst		2149048						
ANR	2149524	Symbol	s -> pic . linesize		2149048						
ANR	2149525	Symbol	avctx -> width		2149048						
ANR	2149526	Symbol	s -> pal		2149048						
ANR	2149527	Symbol	* chunk_type		2149048						
ANR	2149528	Symbol	avctx -> height		2149048						
ANR	2149529	Symbol	* s -> pic		2149048						
ANR	2149530	Symbol	* * s		2149048						
ANR	2149531	Symbol	avpkt -> size		2149048						
ANR	2149532	Symbol	s -> pic		2149048						
ANR	2149533	Symbol	avctx		2149048						
ANR	2149534	Symbol	chunk_type		2149048						
ANR	2149535	Symbol	* avpkt		2149048						
ANR	2149536	Symbol	tmp_buf		2149048						
ANR	2149537	Symbol	pal_elems		2149048						
ANR	2149538	Symbol	* s -> pal		2149048						
ANR	2149539	Symbol	avctx -> get_buffer		2149048						
ANR	2149540	Symbol	AV_LOG_ERROR		2149048						
ANR	2149541	Symbol	i		2149048						
ANR	2149542	Symbol	avctx -> priv_data		2149048						
ANR	2149543	Symbol	buf		2149048						
ANR	2149544	Symbol	s		2149048						
ANR	2149545	Symbol	* i		2149048						
ANR	2149546	Symbol	AV_RL32		2149048						
ANR	2149547	Symbol	s -> pic . data		2149048						
ANR	2149548	Symbol	* ( AVFrame * ) data		2149048						
ANR	2149549	Symbol	AV_LOG_WARNING		2149048						
ANR	2149550	Symbol	* s		2149048						
ANR	2149551	Symbol	* data		2149048						
