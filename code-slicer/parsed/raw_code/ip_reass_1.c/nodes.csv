command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4985544	File	/home/p4ultr4n/workplace/ReVeal/raw_code/ip_reass_1.c								
ANR	4985545	Function	ip_reass	1:0:0:3762							
ANR	4985546	FunctionDef	"ip_reass (register struct ip * ip , register struct ipq * fp)"		4985545	0					
ANR	4985547	CompoundStatement		3:0:59:3762	4985545	0					
ANR	4985548	Statement	register	5:1:63:70	4985545	0	True				
ANR	4985549	IdentifierDeclStatement	struct mbuf * m = dtom ( ip ) ;	5:10:72:97	4985545	1	True				
ANR	4985550	IdentifierDecl	* m = dtom ( ip )		4985545	0					
ANR	4985551	IdentifierDeclType	struct mbuf *		4985545	0					
ANR	4985552	Identifier	m		4985545	1					
ANR	4985553	AssignmentExpression	* m = dtom ( ip )		4985545	2		=			
ANR	4985554	Identifier	m		4985545	0					
ANR	4985555	CallExpression	dtom ( ip )		4985545	1					
ANR	4985556	Callee	dtom		4985545	0					
ANR	4985557	Identifier	dtom		4985545	0					
ANR	4985558	ArgumentList	ip		4985545	1					
ANR	4985559	Argument	ip		4985545	0					
ANR	4985560	Identifier	ip		4985545	0					
ANR	4985561	Statement	register	7:1:101:108	4985545	2	True				
ANR	4985562	IdentifierDeclStatement	struct ipasfrag * q ;	7:10:110:128	4985545	3	True				
ANR	4985563	IdentifierDecl	* q		4985545	0					
ANR	4985564	IdentifierDeclType	struct ipasfrag *		4985545	0					
ANR	4985565	Identifier	q		4985545	1					
ANR	4985566	IdentifierDeclStatement	int hlen = ip -> ip_hl << 2 ;	9:1:132:157	4985545	4	True				
ANR	4985567	IdentifierDecl	hlen = ip -> ip_hl << 2		4985545	0					
ANR	4985568	IdentifierDeclType	int		4985545	0					
ANR	4985569	Identifier	hlen		4985545	1					
ANR	4985570	AssignmentExpression	hlen = ip -> ip_hl << 2		4985545	2		=			
ANR	4985571	Identifier	hlen		4985545	0					
ANR	4985572	ShiftExpression	ip -> ip_hl << 2		4985545	1		<<			
ANR	4985573	PtrMemberAccess	ip -> ip_hl		4985545	0					
ANR	4985574	Identifier	ip		4985545	0					
ANR	4985575	Identifier	ip_hl		4985545	1					
ANR	4985576	PrimaryExpression	2		4985545	1					
ANR	4985577	IdentifierDeclStatement	"int i , next ;"	11:1:161:172	4985545	5	True				
ANR	4985578	IdentifierDecl	i		4985545	0					
ANR	4985579	IdentifierDeclType	int		4985545	0					
ANR	4985580	Identifier	i		4985545	1					
ANR	4985581	IdentifierDecl	next		4985545	1					
ANR	4985582	IdentifierDeclType	int		4985545	0					
ANR	4985583	Identifier	next		4985545	1					
ANR	4985584	ExpressionStatement	"DEBUG_CALL ( ""ip_reass"" )"	15:1:178:200	4985545	6	True				
ANR	4985585	CallExpression	"DEBUG_CALL ( ""ip_reass"" )"		4985545	0					
ANR	4985586	Callee	DEBUG_CALL		4985545	0					
ANR	4985587	Identifier	DEBUG_CALL		4985545	0					
ANR	4985588	ArgumentList	"""ip_reass"""		4985545	1					
ANR	4985589	Argument	"""ip_reass"""		4985545	0					
ANR	4985590	PrimaryExpression	"""ip_reass"""		4985545	0					
ANR	4985591	ExpressionStatement	"DEBUG_ARG ( ""ip = %lx"" , ( long ) ip )"	17:1:204:235	4985545	7	True				
ANR	4985592	CallExpression	"DEBUG_ARG ( ""ip = %lx"" , ( long ) ip )"		4985545	0					
ANR	4985593	Callee	DEBUG_ARG		4985545	0					
ANR	4985594	Identifier	DEBUG_ARG		4985545	0					
ANR	4985595	ArgumentList	"""ip = %lx"""		4985545	1					
ANR	4985596	Argument	"""ip = %lx"""		4985545	0					
ANR	4985597	PrimaryExpression	"""ip = %lx"""		4985545	0					
ANR	4985598	Argument	( long ) ip		4985545	1					
ANR	4985599	CastExpression	( long ) ip		4985545	0					
ANR	4985600	CastTarget	long		4985545	0					
ANR	4985601	Identifier	ip		4985545	1					
ANR	4985602	ExpressionStatement	"DEBUG_ARG ( ""fp = %lx"" , ( long ) fp )"	19:1:239:270	4985545	8	True				
ANR	4985603	CallExpression	"DEBUG_ARG ( ""fp = %lx"" , ( long ) fp )"		4985545	0					
ANR	4985604	Callee	DEBUG_ARG		4985545	0					
ANR	4985605	Identifier	DEBUG_ARG		4985545	0					
ANR	4985606	ArgumentList	"""fp = %lx"""		4985545	1					
ANR	4985607	Argument	"""fp = %lx"""		4985545	0					
ANR	4985608	PrimaryExpression	"""fp = %lx"""		4985545	0					
ANR	4985609	Argument	( long ) fp		4985545	1					
ANR	4985610	CastExpression	( long ) fp		4985545	0					
ANR	4985611	CastTarget	long		4985545	0					
ANR	4985612	Identifier	fp		4985545	1					
ANR	4985613	ExpressionStatement	"DEBUG_ARG ( ""m = %lx"" , ( long ) m )"	21:1:274:303	4985545	9	True				
ANR	4985614	CallExpression	"DEBUG_ARG ( ""m = %lx"" , ( long ) m )"		4985545	0					
ANR	4985615	Callee	DEBUG_ARG		4985545	0					
ANR	4985616	Identifier	DEBUG_ARG		4985545	0					
ANR	4985617	ArgumentList	"""m = %lx"""		4985545	1					
ANR	4985618	Argument	"""m = %lx"""		4985545	0					
ANR	4985619	PrimaryExpression	"""m = %lx"""		4985545	0					
ANR	4985620	Argument	( long ) m		4985545	1					
ANR	4985621	CastExpression	( long ) m		4985545	0					
ANR	4985622	CastTarget	long		4985545	0					
ANR	4985623	Identifier	m		4985545	1					
ANR	4985624	ExpressionStatement	m -> m_data += hlen	35:1:435:452	4985545	10	True				
ANR	4985625	AssignmentExpression	m -> m_data += hlen		4985545	0		+=			
ANR	4985626	PtrMemberAccess	m -> m_data		4985545	0					
ANR	4985627	Identifier	m		4985545	0					
ANR	4985628	Identifier	m_data		4985545	1					
ANR	4985629	Identifier	hlen		4985545	1					
ANR	4985630	ExpressionStatement	m -> m_len -= hlen	37:1:456:472	4985545	11	True				
ANR	4985631	AssignmentExpression	m -> m_len -= hlen		4985545	0		-=			
ANR	4985632	PtrMemberAccess	m -> m_len		4985545	0					
ANR	4985633	Identifier	m		4985545	0					
ANR	4985634	Identifier	m_len		4985545	1					
ANR	4985635	Identifier	hlen		4985545	1					
ANR	4985636	IfStatement	if ( fp == 0 )		4985545	12					
ANR	4985637	Condition	fp == 0	47:5:554:560	4985545	0	True				
ANR	4985638	EqualityExpression	fp == 0		4985545	0		==			
ANR	4985639	Identifier	fp		4985545	0					
ANR	4985640	PrimaryExpression	0		4985545	1					
ANR	4985641	CompoundStatement		47:3:509:523	4985545	1					
ANR	4985642	IdentifierDeclStatement	struct mbuf * t ;	49:3:569:583	4985545	0	True				
ANR	4985643	IdentifierDecl	* t		4985545	0					
ANR	4985644	IdentifierDeclType	struct mbuf *		4985545	0					
ANR	4985645	Identifier	t		4985545	1					
ANR	4985646	IfStatement	if ( ( t = m_get ( ) ) == NULL )		4985545	1					
ANR	4985647	Condition	( t = m_get ( ) ) == NULL	51:7:593:613	4985545	0	True				
ANR	4985648	EqualityExpression	( t = m_get ( ) ) == NULL		4985545	0		==			
ANR	4985649	AssignmentExpression	t = m_get ( )		4985545	0		=			
ANR	4985650	Identifier	t		4985545	0					
ANR	4985651	CallExpression	m_get ( )		4985545	1					
ANR	4985652	Callee	m_get		4985545	0					
ANR	4985653	Identifier	m_get		4985545	0					
ANR	4985654	ArgumentList			4985545	1					
ANR	4985655	Identifier	NULL		4985545	1					
ANR	4985656	GotoStatement	goto dropfrag ;	51:30:616:629	4985545	1	True				
ANR	4985657	Identifier	dropfrag		4985545	0					
ANR	4985658	Statement	fp	53:3:635:636	4985545	2	True				
ANR	4985659	Statement	=	53:6:638:638	4985545	3	True				
ANR	4985660	Statement	mtod	53:8:640:643	4985545	4	True				
ANR	4985661	Statement	(	53:12:644:644	4985545	5	True				
ANR	4985662	Statement	t	53:13:645:645	4985545	6	True				
ANR	4985663	Statement	","	53:14:646:646	4985545	7	True				
ANR	4985664	Statement	struct	53:16:648:653	4985545	8	True				
ANR	4985665	Statement	ipq	53:23:655:657	4985545	9	True				
ANR	4985666	Statement	*	53:27:659:659	4985545	10	True				
ANR	4985667	Statement	)	53:28:660:660	4985545	11	True				
ANR	4985668	ExpressionStatement		53:29:661:661	4985545	12	True				
ANR	4985669	ExpressionStatement	"insque ( & fp -> ip_link , & ipq . ip_link )"	55:3:667:701	4985545	13	True				
ANR	4985670	CallExpression	"insque ( & fp -> ip_link , & ipq . ip_link )"		4985545	0					
ANR	4985671	Callee	insque		4985545	0					
ANR	4985672	Identifier	insque		4985545	0					
ANR	4985673	ArgumentList	& fp -> ip_link		4985545	1					
ANR	4985674	Argument	& fp -> ip_link		4985545	0					
ANR	4985675	UnaryOperationExpression	& fp -> ip_link		4985545	0					
ANR	4985676	UnaryOperator	&		4985545	0					
ANR	4985677	PtrMemberAccess	fp -> ip_link		4985545	1					
ANR	4985678	Identifier	fp		4985545	0					
ANR	4985679	Identifier	ip_link		4985545	1					
ANR	4985680	Argument	& ipq . ip_link		4985545	1					
ANR	4985681	UnaryOperationExpression	& ipq . ip_link		4985545	0					
ANR	4985682	UnaryOperator	&		4985545	0					
ANR	4985683	MemberAccess	ipq . ip_link		4985545	1					
ANR	4985684	Identifier	ipq		4985545	0					
ANR	4985685	Identifier	ip_link		4985545	1					
ANR	4985686	ExpressionStatement	fp -> ipq_ttl = IPFRAGTTL	57:3:707:730	4985545	14	True				
ANR	4985687	AssignmentExpression	fp -> ipq_ttl = IPFRAGTTL		4985545	0		=			
ANR	4985688	PtrMemberAccess	fp -> ipq_ttl		4985545	0					
ANR	4985689	Identifier	fp		4985545	0					
ANR	4985690	Identifier	ipq_ttl		4985545	1					
ANR	4985691	Identifier	IPFRAGTTL		4985545	1					
ANR	4985692	ExpressionStatement	fp -> ipq_p = ip -> ip_p	59:3:736:756	4985545	15	True				
ANR	4985693	AssignmentExpression	fp -> ipq_p = ip -> ip_p		4985545	0		=			
ANR	4985694	PtrMemberAccess	fp -> ipq_p		4985545	0					
ANR	4985695	Identifier	fp		4985545	0					
ANR	4985696	Identifier	ipq_p		4985545	1					
ANR	4985697	PtrMemberAccess	ip -> ip_p		4985545	1					
ANR	4985698	Identifier	ip		4985545	0					
ANR	4985699	Identifier	ip_p		4985545	1					
ANR	4985700	ExpressionStatement	fp -> ipq_id = ip -> ip_id	61:3:762:784	4985545	16	True				
ANR	4985701	AssignmentExpression	fp -> ipq_id = ip -> ip_id		4985545	0		=			
ANR	4985702	PtrMemberAccess	fp -> ipq_id		4985545	0					
ANR	4985703	Identifier	fp		4985545	0					
ANR	4985704	Identifier	ipq_id		4985545	1					
ANR	4985705	PtrMemberAccess	ip -> ip_id		4985545	1					
ANR	4985706	Identifier	ip		4985545	0					
ANR	4985707	Identifier	ip_id		4985545	1					
ANR	4985708	ExpressionStatement	fp -> frag_link . next = fp -> frag_link . prev = & fp -> frag_link	63:3:790:846	4985545	17	True				
ANR	4985709	AssignmentExpression	fp -> frag_link . next = fp -> frag_link . prev = & fp -> frag_link		4985545	0		=			
ANR	4985710	MemberAccess	fp -> frag_link . next		4985545	0					
ANR	4985711	PtrMemberAccess	fp -> frag_link		4985545	0					
ANR	4985712	Identifier	fp		4985545	0					
ANR	4985713	Identifier	frag_link		4985545	1					
ANR	4985714	Identifier	next		4985545	1					
ANR	4985715	AssignmentExpression	fp -> frag_link . prev = & fp -> frag_link		4985545	1		=			
ANR	4985716	MemberAccess	fp -> frag_link . prev		4985545	0					
ANR	4985717	PtrMemberAccess	fp -> frag_link		4985545	0					
ANR	4985718	Identifier	fp		4985545	0					
ANR	4985719	Identifier	frag_link		4985545	1					
ANR	4985720	Identifier	prev		4985545	1					
ANR	4985721	UnaryOperationExpression	& fp -> frag_link		4985545	1					
ANR	4985722	UnaryOperator	&		4985545	0					
ANR	4985723	PtrMemberAccess	fp -> frag_link		4985545	1					
ANR	4985724	Identifier	fp		4985545	0					
ANR	4985725	Identifier	frag_link		4985545	1					
ANR	4985726	ExpressionStatement	fp -> ipq_src = ip -> ip_src	65:3:852:876	4985545	18	True				
ANR	4985727	AssignmentExpression	fp -> ipq_src = ip -> ip_src		4985545	0		=			
ANR	4985728	PtrMemberAccess	fp -> ipq_src		4985545	0					
ANR	4985729	Identifier	fp		4985545	0					
ANR	4985730	Identifier	ipq_src		4985545	1					
ANR	4985731	PtrMemberAccess	ip -> ip_src		4985545	1					
ANR	4985732	Identifier	ip		4985545	0					
ANR	4985733	Identifier	ip_src		4985545	1					
ANR	4985734	ExpressionStatement	fp -> ipq_dst = ip -> ip_dst	67:3:882:906	4985545	19	True				
ANR	4985735	AssignmentExpression	fp -> ipq_dst = ip -> ip_dst		4985545	0		=			
ANR	4985736	PtrMemberAccess	fp -> ipq_dst		4985545	0					
ANR	4985737	Identifier	fp		4985545	0					
ANR	4985738	Identifier	ipq_dst		4985545	1					
ANR	4985739	PtrMemberAccess	ip -> ip_dst		4985545	1					
ANR	4985740	Identifier	ip		4985545	0					
ANR	4985741	Identifier	ip_dst		4985545	1					
ANR	4985742	ExpressionStatement	q = ( struct ipasfrag * ) fp	69:3:912:937	4985545	20	True				
ANR	4985743	AssignmentExpression	q = ( struct ipasfrag * ) fp		4985545	0		=			
ANR	4985744	Identifier	q		4985545	0					
ANR	4985745	CastExpression	( struct ipasfrag * ) fp		4985545	1					
ANR	4985746	CastTarget	struct ipasfrag *		4985545	0					
ANR	4985747	Identifier	fp		4985545	1					
ANR	4985748	GotoStatement	goto insert ;	71:3:943:954	4985545	21	True				
ANR	4985749	Identifier	insert		4985545	0					
ANR	4985750	ForStatement	for ( q = fp -> frag_link . next ; q != ( struct ipasfrag * ) & fp -> frag_link ; q = q -> ipf_next )		4985545	13					
ANR	4985751	ForInit	q = fp -> frag_link . next ;	83:6:1034:1056	4985545	0	True				
ANR	4985752	AssignmentExpression	q = fp -> frag_link . next		4985545	0		=			
ANR	4985753	Identifier	q		4985545	0					
ANR	4985754	MemberAccess	fp -> frag_link . next		4985545	1					
ANR	4985755	PtrMemberAccess	fp -> frag_link		4985545	0					
ANR	4985756	Identifier	fp		4985545	0					
ANR	4985757	Identifier	frag_link		4985545	1					
ANR	4985758	Identifier	next		4985545	1					
ANR	4985759	Condition	q != ( struct ipasfrag * ) & fp -> frag_link	83:30:1058:1095	4985545	1	True				
ANR	4985760	EqualityExpression	q != ( struct ipasfrag * ) & fp -> frag_link		4985545	0		!=			
ANR	4985761	Identifier	q		4985545	0					
ANR	4985762	CastExpression	( struct ipasfrag * ) & fp -> frag_link		4985545	1					
ANR	4985763	CastTarget	struct ipasfrag *		4985545	0					
ANR	4985764	UnaryOperationExpression	& fp -> frag_link		4985545	1					
ANR	4985765	UnaryOperator	&		4985545	0					
ANR	4985766	PtrMemberAccess	fp -> frag_link		4985545	1					
ANR	4985767	Identifier	fp		4985545	0					
ANR	4985768	Identifier	frag_link		4985545	1					
ANR	4985769	AssignmentExpression	q = q -> ipf_next	85:12:1111:1125	4985545	2	True	=			
ANR	4985770	Identifier	q		4985545	0					
ANR	4985771	PtrMemberAccess	q -> ipf_next		4985545	1					
ANR	4985772	Identifier	q		4985545	0					
ANR	4985773	Identifier	ipf_next		4985545	1					
ANR	4985774	IfStatement	if ( q -> ipf_off > ip -> ip_off )		4985545	3					
ANR	4985775	Condition	q -> ipf_off > ip -> ip_off	87:6:1135:1157	4985545	0	True				
ANR	4985776	RelationalExpression	q -> ipf_off > ip -> ip_off		4985545	0		>			
ANR	4985777	PtrMemberAccess	q -> ipf_off		4985545	0					
ANR	4985778	Identifier	q		4985545	0					
ANR	4985779	Identifier	ipf_off		4985545	1					
ANR	4985780	PtrMemberAccess	ip -> ip_off		4985545	1					
ANR	4985781	Identifier	ip		4985545	0					
ANR	4985782	Identifier	ip_off		4985545	1					
ANR	4985783	BreakStatement	break ;	89:3:1164:1169	4985545	1	True				
ANR	4985784	IfStatement	if ( q -> ipf_prev != & fp -> frag_link )		4985545	14					
ANR	4985785	Condition	q -> ipf_prev != & fp -> frag_link	103:5:1370:1398	4985545	0	True				
ANR	4985786	EqualityExpression	q -> ipf_prev != & fp -> frag_link		4985545	0		!=			
ANR	4985787	PtrMemberAccess	q -> ipf_prev		4985545	0					
ANR	4985788	Identifier	q		4985545	0					
ANR	4985789	Identifier	ipf_prev		4985545	1					
ANR	4985790	UnaryOperationExpression	& fp -> frag_link		4985545	1					
ANR	4985791	UnaryOperator	&		4985545	0					
ANR	4985792	PtrMemberAccess	fp -> frag_link		4985545	1					
ANR	4985793	Identifier	fp		4985545	0					
ANR	4985794	Identifier	frag_link		4985545	1					
ANR	4985795	CompoundStatement		103:8:1352:1385	4985545	1					
ANR	4985796	IdentifierDeclStatement	struct ipasfrag * pq = q -> ipf_prev ;	105:8:1412:1445	4985545	0	True				
ANR	4985797	IdentifierDecl	* pq = q -> ipf_prev		4985545	0					
ANR	4985798	IdentifierDeclType	struct ipasfrag *		4985545	0					
ANR	4985799	Identifier	pq		4985545	1					
ANR	4985800	AssignmentExpression	* pq = q -> ipf_prev		4985545	2		=			
ANR	4985801	Identifier	pq		4985545	0					
ANR	4985802	PtrMemberAccess	q -> ipf_prev		4985545	1					
ANR	4985803	Identifier	q		4985545	0					
ANR	4985804	Identifier	ipf_prev		4985545	1					
ANR	4985805	ExpressionStatement	i = pq -> ipf_off + pq -> ipf_len - ip -> ip_off	107:2:1450:1492	4985545	1	True				
ANR	4985806	AssignmentExpression	i = pq -> ipf_off + pq -> ipf_len - ip -> ip_off		4985545	0		=			
ANR	4985807	Identifier	i		4985545	0					
ANR	4985808	AdditiveExpression	pq -> ipf_off + pq -> ipf_len - ip -> ip_off		4985545	1		+			
ANR	4985809	PtrMemberAccess	pq -> ipf_off		4985545	0					
ANR	4985810	Identifier	pq		4985545	0					
ANR	4985811	Identifier	ipf_off		4985545	1					
ANR	4985812	AdditiveExpression	pq -> ipf_len - ip -> ip_off		4985545	1		-			
ANR	4985813	PtrMemberAccess	pq -> ipf_len		4985545	0					
ANR	4985814	Identifier	pq		4985545	0					
ANR	4985815	Identifier	ipf_len		4985545	1					
ANR	4985816	PtrMemberAccess	ip -> ip_off		4985545	1					
ANR	4985817	Identifier	ip		4985545	0					
ANR	4985818	Identifier	ip_off		4985545	1					
ANR	4985819	IfStatement	if ( i > 0 )		4985545	2					
ANR	4985820	Condition	i > 0	109:6:1501:1505	4985545	0	True				
ANR	4985821	RelationalExpression	i > 0		4985545	0		>			
ANR	4985822	Identifier	i		4985545	0					
ANR	4985823	PrimaryExpression	0		4985545	1					
ANR	4985824	CompoundStatement		107:13:1448:1448	4985545	1					
ANR	4985825	IfStatement	if ( i >= ip -> ip_len )		4985545	0					
ANR	4985826	Condition	i >= ip -> ip_len	111:7:1518:1532	4985545	0	True				
ANR	4985827	RelationalExpression	i >= ip -> ip_len		4985545	0		>=			
ANR	4985828	Identifier	i		4985545	0					
ANR	4985829	PtrMemberAccess	ip -> ip_len		4985545	1					
ANR	4985830	Identifier	ip		4985545	0					
ANR	4985831	Identifier	ip_len		4985545	1					
ANR	4985832	GotoStatement	goto dropfrag ;	113:4:1540:1553	4985545	1	True				
ANR	4985833	Identifier	dropfrag		4985545	0					
ANR	4985834	ExpressionStatement	"m_adj ( dtom ( ip ) , i )"	115:3:1559:1577	4985545	1	True				
ANR	4985835	CallExpression	"m_adj ( dtom ( ip ) , i )"		4985545	0					
ANR	4985836	Callee	m_adj		4985545	0					
ANR	4985837	Identifier	m_adj		4985545	0					
ANR	4985838	ArgumentList	dtom ( ip )		4985545	1					
ANR	4985839	Argument	dtom ( ip )		4985545	0					
ANR	4985840	CallExpression	dtom ( ip )		4985545	0					
ANR	4985841	Callee	dtom		4985545	0					
ANR	4985842	Identifier	dtom		4985545	0					
ANR	4985843	ArgumentList	ip		4985545	1					
ANR	4985844	Argument	ip		4985545	0					
ANR	4985845	Identifier	ip		4985545	0					
ANR	4985846	Argument	i		4985545	1					
ANR	4985847	Identifier	i		4985545	0					
ANR	4985848	ExpressionStatement	ip -> ip_off += i	117:3:1583:1598	4985545	2	True				
ANR	4985849	AssignmentExpression	ip -> ip_off += i		4985545	0		+=			
ANR	4985850	PtrMemberAccess	ip -> ip_off		4985545	0					
ANR	4985851	Identifier	ip		4985545	0					
ANR	4985852	Identifier	ip_off		4985545	1					
ANR	4985853	Identifier	i		4985545	1					
ANR	4985854	ExpressionStatement	ip -> ip_len -= i	119:3:1604:1619	4985545	3	True				
ANR	4985855	AssignmentExpression	ip -> ip_len -= i		4985545	0		-=			
ANR	4985856	PtrMemberAccess	ip -> ip_len		4985545	0					
ANR	4985857	Identifier	ip		4985545	0					
ANR	4985858	Identifier	ip_len		4985545	1					
ANR	4985859	Identifier	i		4985545	1					
ANR	4985860	WhileStatement	while ( q != ( struct ipasfrag * ) & fp -> frag_link && ip -> ip_off + ip -> ip_len > q -> ipf_off )		4985545	15					
ANR	4985861	Condition	q != ( struct ipasfrag * ) & fp -> frag_link && ip -> ip_off + ip -> ip_len > q -> ipf_off	135:8:1759:1848	4985545	0	True				
ANR	4985862	AndExpression	q != ( struct ipasfrag * ) & fp -> frag_link && ip -> ip_off + ip -> ip_len > q -> ipf_off		4985545	0		&&			
ANR	4985863	EqualityExpression	q != ( struct ipasfrag * ) & fp -> frag_link		4985545	0		!=			
ANR	4985864	Identifier	q		4985545	0					
ANR	4985865	CastExpression	( struct ipasfrag * ) & fp -> frag_link		4985545	1					
ANR	4985866	CastTarget	struct ipasfrag *		4985545	0					
ANR	4985867	UnaryOperationExpression	& fp -> frag_link		4985545	1					
ANR	4985868	UnaryOperator	&		4985545	0					
ANR	4985869	PtrMemberAccess	fp -> frag_link		4985545	1					
ANR	4985870	Identifier	fp		4985545	0					
ANR	4985871	Identifier	frag_link		4985545	1					
ANR	4985872	RelationalExpression	ip -> ip_off + ip -> ip_len > q -> ipf_off		4985545	1		>			
ANR	4985873	AdditiveExpression	ip -> ip_off + ip -> ip_len		4985545	0		+			
ANR	4985874	PtrMemberAccess	ip -> ip_off		4985545	0					
ANR	4985875	Identifier	ip		4985545	0					
ANR	4985876	Identifier	ip_off		4985545	1					
ANR	4985877	PtrMemberAccess	ip -> ip_len		4985545	1					
ANR	4985878	Identifier	ip		4985545	0					
ANR	4985879	Identifier	ip_len		4985545	1					
ANR	4985880	PtrMemberAccess	q -> ipf_off		4985545	1					
ANR	4985881	Identifier	q		4985545	0					
ANR	4985882	Identifier	ipf_off		4985545	1					
ANR	4985883	CompoundStatement		135:50:1791:1791	4985545	1					
ANR	4985884	ExpressionStatement	i = ( ip -> ip_off + ip -> ip_len ) - q -> ipf_off	139:2:1856:1898	4985545	0	True				
ANR	4985885	AssignmentExpression	i = ( ip -> ip_off + ip -> ip_len ) - q -> ipf_off		4985545	0		=			
ANR	4985886	Identifier	i		4985545	0					
ANR	4985887	AdditiveExpression	( ip -> ip_off + ip -> ip_len ) - q -> ipf_off		4985545	1		-			
ANR	4985888	AdditiveExpression	ip -> ip_off + ip -> ip_len		4985545	0		+			
ANR	4985889	PtrMemberAccess	ip -> ip_off		4985545	0					
ANR	4985890	Identifier	ip		4985545	0					
ANR	4985891	Identifier	ip_off		4985545	1					
ANR	4985892	PtrMemberAccess	ip -> ip_len		4985545	1					
ANR	4985893	Identifier	ip		4985545	0					
ANR	4985894	Identifier	ip_len		4985545	1					
ANR	4985895	PtrMemberAccess	q -> ipf_off		4985545	1					
ANR	4985896	Identifier	q		4985545	0					
ANR	4985897	Identifier	ipf_off		4985545	1					
ANR	4985898	IfStatement	if ( i < q -> ipf_len )		4985545	1					
ANR	4985899	Condition	i < q -> ipf_len	141:6:1907:1920	4985545	0	True				
ANR	4985900	RelationalExpression	i < q -> ipf_len		4985545	0		<			
ANR	4985901	Identifier	i		4985545	0					
ANR	4985902	PtrMemberAccess	q -> ipf_len		4985545	1					
ANR	4985903	Identifier	q		4985545	0					
ANR	4985904	Identifier	ipf_len		4985545	1					
ANR	4985905	CompoundStatement		139:22:1863:1863	4985545	1					
ANR	4985906	ExpressionStatement	q -> ipf_len -= i	143:3:1929:1944	4985545	0	True				
ANR	4985907	AssignmentExpression	q -> ipf_len -= i		4985545	0		-=			
ANR	4985908	PtrMemberAccess	q -> ipf_len		4985545	0					
ANR	4985909	Identifier	q		4985545	0					
ANR	4985910	Identifier	ipf_len		4985545	1					
ANR	4985911	Identifier	i		4985545	1					
ANR	4985912	ExpressionStatement	q -> ipf_off += i	145:3:1950:1965	4985545	1	True				
ANR	4985913	AssignmentExpression	q -> ipf_off += i		4985545	0		+=			
ANR	4985914	PtrMemberAccess	q -> ipf_off		4985545	0					
ANR	4985915	Identifier	q		4985545	0					
ANR	4985916	Identifier	ipf_off		4985545	1					
ANR	4985917	Identifier	i		4985545	1					
ANR	4985918	ExpressionStatement	"m_adj ( dtom ( q ) , i )"	147:3:1971:1988	4985545	2	True				
ANR	4985919	CallExpression	"m_adj ( dtom ( q ) , i )"		4985545	0					
ANR	4985920	Callee	m_adj		4985545	0					
ANR	4985921	Identifier	m_adj		4985545	0					
ANR	4985922	ArgumentList	dtom ( q )		4985545	1					
ANR	4985923	Argument	dtom ( q )		4985545	0					
ANR	4985924	CallExpression	dtom ( q )		4985545	0					
ANR	4985925	Callee	dtom		4985545	0					
ANR	4985926	Identifier	dtom		4985545	0					
ANR	4985927	ArgumentList	q		4985545	1					
ANR	4985928	Argument	q		4985545	0					
ANR	4985929	Identifier	q		4985545	0					
ANR	4985930	Argument	i		4985545	1					
ANR	4985931	Identifier	i		4985545	0					
ANR	4985932	BreakStatement	break ;	149:3:1994:1999	4985545	3	True				
ANR	4985933	ExpressionStatement	q = q -> ipf_next	153:2:2009:2024	4985545	2	True				
ANR	4985934	AssignmentExpression	q = q -> ipf_next		4985545	0		=			
ANR	4985935	Identifier	q		4985545	0					
ANR	4985936	PtrMemberAccess	q -> ipf_next		4985545	1					
ANR	4985937	Identifier	q		4985545	0					
ANR	4985938	Identifier	ipf_next		4985545	1					
ANR	4985939	ExpressionStatement	m_freem ( dtom ( q -> ipf_prev ) )	155:2:2029:2055	4985545	3	True				
ANR	4985940	CallExpression	m_freem ( dtom ( q -> ipf_prev ) )		4985545	0					
ANR	4985941	Callee	m_freem		4985545	0					
ANR	4985942	Identifier	m_freem		4985545	0					
ANR	4985943	ArgumentList	dtom ( q -> ipf_prev )		4985545	1					
ANR	4985944	Argument	dtom ( q -> ipf_prev )		4985545	0					
ANR	4985945	CallExpression	dtom ( q -> ipf_prev )		4985545	0					
ANR	4985946	Callee	dtom		4985545	0					
ANR	4985947	Identifier	dtom		4985545	0					
ANR	4985948	ArgumentList	q -> ipf_prev		4985545	1					
ANR	4985949	Argument	q -> ipf_prev		4985545	0					
ANR	4985950	PtrMemberAccess	q -> ipf_prev		4985545	0					
ANR	4985951	Identifier	q		4985545	0					
ANR	4985952	Identifier	ipf_prev		4985545	1					
ANR	4985953	ExpressionStatement	ip_deq ( q -> ipf_prev )	157:2:2060:2079	4985545	4	True				
ANR	4985954	CallExpression	ip_deq ( q -> ipf_prev )		4985545	0					
ANR	4985955	Callee	ip_deq		4985545	0					
ANR	4985956	Identifier	ip_deq		4985545	0					
ANR	4985957	ArgumentList	q -> ipf_prev		4985545	1					
ANR	4985958	Argument	q -> ipf_prev		4985545	0					
ANR	4985959	PtrMemberAccess	q -> ipf_prev		4985545	0					
ANR	4985960	Identifier	q		4985545	0					
ANR	4985961	Identifier	ipf_prev		4985545	1					
ANR	4985962	Label	insert :	163:0:2088:2094	4985545	16	True				
ANR	4985963	Identifier	insert		4985545	0					
ANR	4985964	ExpressionStatement	"ip_enq ( iptofrag ( ip ) , q -> ipf_prev )"	173:1:2182:2215	4985545	17	True				
ANR	4985965	CallExpression	"ip_enq ( iptofrag ( ip ) , q -> ipf_prev )"		4985545	0					
ANR	4985966	Callee	ip_enq		4985545	0					
ANR	4985967	Identifier	ip_enq		4985545	0					
ANR	4985968	ArgumentList	iptofrag ( ip )		4985545	1					
ANR	4985969	Argument	iptofrag ( ip )		4985545	0					
ANR	4985970	CallExpression	iptofrag ( ip )		4985545	0					
ANR	4985971	Callee	iptofrag		4985545	0					
ANR	4985972	Identifier	iptofrag		4985545	0					
ANR	4985973	ArgumentList	ip		4985545	1					
ANR	4985974	Argument	ip		4985545	0					
ANR	4985975	Identifier	ip		4985545	0					
ANR	4985976	Argument	q -> ipf_prev		4985545	1					
ANR	4985977	PtrMemberAccess	q -> ipf_prev		4985545	0					
ANR	4985978	Identifier	q		4985545	0					
ANR	4985979	Identifier	ipf_prev		4985545	1					
ANR	4985980	ExpressionStatement	next = 0	175:1:2219:2227	4985545	18	True				
ANR	4985981	AssignmentExpression	next = 0		4985545	0		=			
ANR	4985982	Identifier	next		4985545	0					
ANR	4985983	PrimaryExpression	0		4985545	1					
ANR	4985984	ForStatement	for ( q = fp -> frag_link . next ; q != ( struct ipasfrag * ) & fp -> frag_link ; q = q -> ipf_next )		4985545	19					
ANR	4985985	ForInit	q = fp -> frag_link . next ;	177:6:2236:2258	4985545	0	True				
ANR	4985986	AssignmentExpression	q = fp -> frag_link . next		4985545	0		=			
ANR	4985987	Identifier	q		4985545	0					
ANR	4985988	MemberAccess	fp -> frag_link . next		4985545	1					
ANR	4985989	PtrMemberAccess	fp -> frag_link		4985545	0					
ANR	4985990	Identifier	fp		4985545	0					
ANR	4985991	Identifier	frag_link		4985545	1					
ANR	4985992	Identifier	next		4985545	1					
ANR	4985993	Condition	q != ( struct ipasfrag * ) & fp -> frag_link	177:30:2260:2296	4985545	1	True				
ANR	4985994	EqualityExpression	q != ( struct ipasfrag * ) & fp -> frag_link		4985545	0		!=			
ANR	4985995	Identifier	q		4985545	0					
ANR	4985996	CastExpression	( struct ipasfrag * ) & fp -> frag_link		4985545	1					
ANR	4985997	CastTarget	struct ipasfrag *		4985545	0					
ANR	4985998	UnaryOperationExpression	& fp -> frag_link		4985545	1					
ANR	4985999	UnaryOperator	&		4985545	0					
ANR	4986000	PtrMemberAccess	fp -> frag_link		4985545	1					
ANR	4986001	Identifier	fp		4985545	0					
ANR	4986002	Identifier	frag_link		4985545	1					
ANR	4986003	AssignmentExpression	q = q -> ipf_next	179:12:2312:2326	4985545	2	True	=			
ANR	4986004	Identifier	q		4985545	0					
ANR	4986005	PtrMemberAccess	q -> ipf_next		4985545	1					
ANR	4986006	Identifier	q		4985545	0					
ANR	4986007	Identifier	ipf_next		4985545	1					
ANR	4986008	CompoundStatement		177:29:2269:2269	4985545	3					
ANR	4986009	IfStatement	if ( q -> ipf_off != next )		4985545	0					
ANR	4986010	Condition	q -> ipf_off != next	181:6:2338:2355	4985545	0	True				
ANR	4986011	EqualityExpression	q -> ipf_off != next		4985545	0		!=			
ANR	4986012	PtrMemberAccess	q -> ipf_off		4985545	0					
ANR	4986013	Identifier	q		4985545	0					
ANR	4986014	Identifier	ipf_off		4985545	1					
ANR	4986015	Identifier	next		4985545	1					
ANR	4986016	ReturnStatement	return ( 0 ) ;	183:3:2362:2372	4985545	1	True				
ANR	4986017	PrimaryExpression	0		4985545	0					
ANR	4986018	ExpressionStatement	next += q -> ipf_len	185:2:2377:2395	4985545	1	True				
ANR	4986019	AssignmentExpression	next += q -> ipf_len		4985545	0		+=			
ANR	4986020	Identifier	next		4985545	0					
ANR	4986021	PtrMemberAccess	q -> ipf_len		4985545	1					
ANR	4986022	Identifier	q		4985545	0					
ANR	4986023	Identifier	ipf_len		4985545	1					
ANR	4986024	IfStatement	if ( ( ( struct ipasfrag * ) ( q -> ipf_prev ) ) -> ipf_tos & 1 )		4985545	20					
ANR	4986025	Condition	( ( struct ipasfrag * ) ( q -> ipf_prev ) ) -> ipf_tos & 1	189:5:2407:2453	4985545	0	True				
ANR	4986026	BitAndExpression	( ( struct ipasfrag * ) ( q -> ipf_prev ) ) -> ipf_tos & 1		4985545	0		&			
ANR	4986027	PtrMemberAccess	( ( struct ipasfrag * ) ( q -> ipf_prev ) ) -> ipf_tos		4985545	0					
ANR	4986028	CastExpression	( struct ipasfrag * ) ( q -> ipf_prev )		4985545	0					
ANR	4986029	CastTarget	struct ipasfrag *		4985545	0					
ANR	4986030	PtrMemberAccess	q -> ipf_prev		4985545	1					
ANR	4986031	Identifier	q		4985545	0					
ANR	4986032	Identifier	ipf_prev		4985545	1					
ANR	4986033	Identifier	ipf_tos		4985545	1					
ANR	4986034	PrimaryExpression	1		4985545	1					
ANR	4986035	ReturnStatement	return ( 0 ) ;	191:2:2459:2469	4985545	1	True				
ANR	4986036	PrimaryExpression	0		4985545	0					
ANR	4986037	ExpressionStatement	q = fp -> frag_link . next	201:4:2541:2563	4985545	21	True				
ANR	4986038	AssignmentExpression	q = fp -> frag_link . next		4985545	0		=			
ANR	4986039	Identifier	q		4985545	0					
ANR	4986040	MemberAccess	fp -> frag_link . next		4985545	1					
ANR	4986041	PtrMemberAccess	fp -> frag_link		4985545	0					
ANR	4986042	Identifier	fp		4985545	0					
ANR	4986043	Identifier	frag_link		4985545	1					
ANR	4986044	Identifier	next		4985545	1					
ANR	4986045	ExpressionStatement	m = dtom ( q )	203:1:2567:2578	4985545	22	True				
ANR	4986046	AssignmentExpression	m = dtom ( q )		4985545	0		=			
ANR	4986047	Identifier	m		4985545	0					
ANR	4986048	CallExpression	dtom ( q )		4985545	1					
ANR	4986049	Callee	dtom		4985545	0					
ANR	4986050	Identifier	dtom		4985545	0					
ANR	4986051	ArgumentList	q		4985545	1					
ANR	4986052	Argument	q		4985545	0					
ANR	4986053	Identifier	q		4985545	0					
ANR	4986054	ExpressionStatement	q = ( struct ipasfrag * ) q -> ipf_next	207:1:2584:2619	4985545	23	True				
ANR	4986055	AssignmentExpression	q = ( struct ipasfrag * ) q -> ipf_next		4985545	0		=			
ANR	4986056	Identifier	q		4985545	0					
ANR	4986057	CastExpression	( struct ipasfrag * ) q -> ipf_next		4985545	1					
ANR	4986058	CastTarget	struct ipasfrag *		4985545	0					
ANR	4986059	PtrMemberAccess	q -> ipf_next		4985545	1					
ANR	4986060	Identifier	q		4985545	0					
ANR	4986061	Identifier	ipf_next		4985545	1					
ANR	4986062	WhileStatement	while ( q != ( struct ipasfrag * ) & fp -> frag_link )		4985545	24					
ANR	4986063	Condition	q != ( struct ipasfrag * ) & fp -> frag_link	209:8:2630:2666	4985545	0	True				
ANR	4986064	EqualityExpression	q != ( struct ipasfrag * ) & fp -> frag_link		4985545	0		!=			
ANR	4986065	Identifier	q		4985545	0					
ANR	4986066	CastExpression	( struct ipasfrag * ) & fp -> frag_link		4985545	1					
ANR	4986067	CastTarget	struct ipasfrag *		4985545	0					
ANR	4986068	UnaryOperationExpression	& fp -> frag_link		4985545	1					
ANR	4986069	UnaryOperator	&		4985545	0					
ANR	4986070	PtrMemberAccess	fp -> frag_link		4985545	1					
ANR	4986071	Identifier	fp		4985545	0					
ANR	4986072	Identifier	frag_link		4985545	1					
ANR	4986073	CompoundStatement		209:3:2615:2639	4985545	1					
ANR	4986074	IdentifierDeclStatement	struct mbuf * t = dtom ( q ) ;	211:3:2675:2699	4985545	0	True				
ANR	4986075	IdentifierDecl	* t = dtom ( q )		4985545	0					
ANR	4986076	IdentifierDeclType	struct mbuf *		4985545	0					
ANR	4986077	Identifier	t		4985545	1					
ANR	4986078	AssignmentExpression	* t = dtom ( q )		4985545	2		=			
ANR	4986079	Identifier	t		4985545	0					
ANR	4986080	CallExpression	dtom ( q )		4985545	1					
ANR	4986081	Callee	dtom		4985545	0					
ANR	4986082	Identifier	dtom		4985545	0					
ANR	4986083	ArgumentList	q		4985545	1					
ANR	4986084	Argument	q		4985545	0					
ANR	4986085	Identifier	q		4985545	0					
ANR	4986086	ExpressionStatement	q = ( struct ipasfrag * ) q -> ipf_next	213:3:2705:2740	4985545	1	True				
ANR	4986087	AssignmentExpression	q = ( struct ipasfrag * ) q -> ipf_next		4985545	0		=			
ANR	4986088	Identifier	q		4985545	0					
ANR	4986089	CastExpression	( struct ipasfrag * ) q -> ipf_next		4985545	1					
ANR	4986090	CastTarget	struct ipasfrag *		4985545	0					
ANR	4986091	PtrMemberAccess	q -> ipf_next		4985545	1					
ANR	4986092	Identifier	q		4985545	0					
ANR	4986093	Identifier	ipf_next		4985545	1					
ANR	4986094	ExpressionStatement	"m_cat ( m , t )"	215:3:2746:2757	4985545	2	True				
ANR	4986095	CallExpression	"m_cat ( m , t )"		4985545	0					
ANR	4986096	Callee	m_cat		4985545	0					
ANR	4986097	Identifier	m_cat		4985545	0					
ANR	4986098	ArgumentList	m		4985545	1					
ANR	4986099	Argument	m		4985545	0					
ANR	4986100	Identifier	m		4985545	0					
ANR	4986101	Argument	t		4985545	1					
ANR	4986102	Identifier	t		4985545	0					
ANR	4986103	ExpressionStatement	q = fp -> frag_link . next	233:1:2936:2958	4985545	25	True				
ANR	4986104	AssignmentExpression	q = fp -> frag_link . next		4985545	0		=			
ANR	4986105	Identifier	q		4985545	0					
ANR	4986106	MemberAccess	fp -> frag_link . next		4985545	1					
ANR	4986107	PtrMemberAccess	fp -> frag_link		4985545	0					
ANR	4986108	Identifier	fp		4985545	0					
ANR	4986109	Identifier	frag_link		4985545	1					
ANR	4986110	Identifier	next		4985545	1					
ANR	4986111	IfStatement	if ( m -> m_flags & M_EXT )		4985545	26					
ANR	4986112	Condition	m -> m_flags & M_EXT	251:5:3229:3246	4985545	0	True				
ANR	4986113	BitAndExpression	m -> m_flags & M_EXT		4985545	0		&			
ANR	4986114	PtrMemberAccess	m -> m_flags		4985545	0					
ANR	4986115	Identifier	m		4985545	0					
ANR	4986116	Identifier	m_flags		4985545	1					
ANR	4986117	Identifier	M_EXT		4985545	1					
ANR	4986118	CompoundStatement		251:3:3195:3204	4985545	1					
ANR	4986119	IdentifierDeclStatement	int delta ;	253:3:3255:3264	4985545	0	True				
ANR	4986120	IdentifierDecl	delta		4985545	0					
ANR	4986121	IdentifierDeclType	int		4985545	0					
ANR	4986122	Identifier	delta		4985545	1					
ANR	4986123	ExpressionStatement	delta = ( char * ) ip - m -> m_dat	255:3:3270:3299	4985545	1	True				
ANR	4986124	AssignmentExpression	delta = ( char * ) ip - m -> m_dat		4985545	0		=			
ANR	4986125	Identifier	delta		4985545	0					
ANR	4986126	AdditiveExpression	( char * ) ip - m -> m_dat		4985545	1		-			
ANR	4986127	CastExpression	( char * ) ip		4985545	0					
ANR	4986128	CastTarget	char *		4985545	0					
ANR	4986129	Identifier	ip		4985545	1					
ANR	4986130	PtrMemberAccess	m -> m_dat		4985545	1					
ANR	4986131	Identifier	m		4985545	0					
ANR	4986132	Identifier	m_dat		4985545	1					
ANR	4986133	ExpressionStatement	q = ( struct ipasfrag * ) ( m -> m_ext + delta )	257:3:3305:3346	4985545	2	True				
ANR	4986134	AssignmentExpression	q = ( struct ipasfrag * ) ( m -> m_ext + delta )		4985545	0		=			
ANR	4986135	Identifier	q		4985545	0					
ANR	4986136	CastExpression	( struct ipasfrag * ) ( m -> m_ext + delta )		4985545	1					
ANR	4986137	CastTarget	struct ipasfrag *		4985545	0					
ANR	4986138	AdditiveExpression	m -> m_ext + delta		4985545	1		+			
ANR	4986139	PtrMemberAccess	m -> m_ext		4985545	0					
ANR	4986140	Identifier	m		4985545	0					
ANR	4986141	Identifier	m_ext		4985545	1					
ANR	4986142	Identifier	delta		4985545	1					
ANR	4986143	ExpressionStatement	ip = fragtoip ( q )	269:4:3440:3456	4985545	27	True				
ANR	4986144	AssignmentExpression	ip = fragtoip ( q )		4985545	0		=			
ANR	4986145	Identifier	ip		4985545	0					
ANR	4986146	CallExpression	fragtoip ( q )		4985545	1					
ANR	4986147	Callee	fragtoip		4985545	0					
ANR	4986148	Identifier	fragtoip		4985545	0					
ANR	4986149	ArgumentList	q		4985545	1					
ANR	4986150	Argument	q		4985545	0					
ANR	4986151	Identifier	q		4985545	0					
ANR	4986152	ExpressionStatement	ip -> ip_len = next	271:1:3460:3477	4985545	28	True				
ANR	4986153	AssignmentExpression	ip -> ip_len = next		4985545	0		=			
ANR	4986154	PtrMemberAccess	ip -> ip_len		4985545	0					
ANR	4986155	Identifier	ip		4985545	0					
ANR	4986156	Identifier	ip_len		4985545	1					
ANR	4986157	Identifier	next		4985545	1					
ANR	4986158	ExpressionStatement	ip -> ip_tos &= ~1	273:1:3481:3497	4985545	29	True				
ANR	4986159	AssignmentExpression	ip -> ip_tos &= ~1		4985545	0		&=			
ANR	4986160	PtrMemberAccess	ip -> ip_tos		4985545	0					
ANR	4986161	Identifier	ip		4985545	0					
ANR	4986162	Identifier	ip_tos		4985545	1					
ANR	4986163	Identifier	~1		4985545	1					
ANR	4986164	ExpressionStatement	ip -> ip_src = fp -> ipq_src	275:1:3501:3525	4985545	30	True				
ANR	4986165	AssignmentExpression	ip -> ip_src = fp -> ipq_src		4985545	0		=			
ANR	4986166	PtrMemberAccess	ip -> ip_src		4985545	0					
ANR	4986167	Identifier	ip		4985545	0					
ANR	4986168	Identifier	ip_src		4985545	1					
ANR	4986169	PtrMemberAccess	fp -> ipq_src		4985545	1					
ANR	4986170	Identifier	fp		4985545	0					
ANR	4986171	Identifier	ipq_src		4985545	1					
ANR	4986172	ExpressionStatement	ip -> ip_dst = fp -> ipq_dst	277:1:3529:3553	4985545	31	True				
ANR	4986173	AssignmentExpression	ip -> ip_dst = fp -> ipq_dst		4985545	0		=			
ANR	4986174	PtrMemberAccess	ip -> ip_dst		4985545	0					
ANR	4986175	Identifier	ip		4985545	0					
ANR	4986176	Identifier	ip_dst		4985545	1					
ANR	4986177	PtrMemberAccess	fp -> ipq_dst		4985545	1					
ANR	4986178	Identifier	fp		4985545	0					
ANR	4986179	Identifier	ipq_dst		4985545	1					
ANR	4986180	ExpressionStatement	remque ( & fp -> ip_link )	279:1:3557:3577	4985545	32	True				
ANR	4986181	CallExpression	remque ( & fp -> ip_link )		4985545	0					
ANR	4986182	Callee	remque		4985545	0					
ANR	4986183	Identifier	remque		4985545	0					
ANR	4986184	ArgumentList	& fp -> ip_link		4985545	1					
ANR	4986185	Argument	& fp -> ip_link		4985545	0					
ANR	4986186	UnaryOperationExpression	& fp -> ip_link		4985545	0					
ANR	4986187	UnaryOperator	&		4985545	0					
ANR	4986188	PtrMemberAccess	fp -> ip_link		4985545	1					
ANR	4986189	Identifier	fp		4985545	0					
ANR	4986190	Identifier	ip_link		4985545	1					
ANR	4986191	ExpressionStatement	( void ) m_free ( dtom ( fp ) )	281:1:3581:3604	4985545	33	True				
ANR	4986192	CastExpression	( void ) m_free ( dtom ( fp ) )		4985545	0					
ANR	4986193	CastTarget	void		4985545	0					
ANR	4986194	CallExpression	m_free ( dtom ( fp ) )		4985545	1					
ANR	4986195	Callee	m_free		4985545	0					
ANR	4986196	Identifier	m_free		4985545	0					
ANR	4986197	ArgumentList	dtom ( fp )		4985545	1					
ANR	4986198	Argument	dtom ( fp )		4985545	0					
ANR	4986199	CallExpression	dtom ( fp )		4985545	0					
ANR	4986200	Callee	dtom		4985545	0					
ANR	4986201	Identifier	dtom		4985545	0					
ANR	4986202	ArgumentList	fp		4985545	1					
ANR	4986203	Argument	fp		4985545	0					
ANR	4986204	Identifier	fp		4985545	0					
ANR	4986205	ExpressionStatement	m -> m_len += ( ip -> ip_hl << 2 )	283:1:3608:3636	4985545	34	True				
ANR	4986206	AssignmentExpression	m -> m_len += ( ip -> ip_hl << 2 )		4985545	0		+=			
ANR	4986207	PtrMemberAccess	m -> m_len		4985545	0					
ANR	4986208	Identifier	m		4985545	0					
ANR	4986209	Identifier	m_len		4985545	1					
ANR	4986210	ShiftExpression	ip -> ip_hl << 2		4985545	1		<<			
ANR	4986211	PtrMemberAccess	ip -> ip_hl		4985545	0					
ANR	4986212	Identifier	ip		4985545	0					
ANR	4986213	Identifier	ip_hl		4985545	1					
ANR	4986214	PrimaryExpression	2		4985545	1					
ANR	4986215	ExpressionStatement	m -> m_data -= ( ip -> ip_hl << 2 )	285:1:3640:3669	4985545	35	True				
ANR	4986216	AssignmentExpression	m -> m_data -= ( ip -> ip_hl << 2 )		4985545	0		-=			
ANR	4986217	PtrMemberAccess	m -> m_data		4985545	0					
ANR	4986218	Identifier	m		4985545	0					
ANR	4986219	Identifier	m_data		4985545	1					
ANR	4986220	ShiftExpression	ip -> ip_hl << 2		4985545	1		<<			
ANR	4986221	PtrMemberAccess	ip -> ip_hl		4985545	0					
ANR	4986222	Identifier	ip		4985545	0					
ANR	4986223	Identifier	ip_hl		4985545	1					
ANR	4986224	PrimaryExpression	2		4985545	1					
ANR	4986225	ReturnStatement	return ip ;	289:1:3675:3684	4985545	36	True				
ANR	4986226	Identifier	ip		4985545	0					
ANR	4986227	Label	dropfrag :	293:0:3689:3697	4985545	37	True				
ANR	4986228	Identifier	dropfrag		4985545	0					
ANR	4986229	ExpressionStatement	STAT ( ipstat . ips_fragdropped ++ )	295:1:3701:3731	4985545	38	True				
ANR	4986230	CallExpression	STAT ( ipstat . ips_fragdropped ++ )		4985545	0					
ANR	4986231	Callee	STAT		4985545	0					
ANR	4986232	Identifier	STAT		4985545	0					
ANR	4986233	ArgumentList	ipstat . ips_fragdropped ++		4985545	1					
ANR	4986234	Argument	ipstat . ips_fragdropped ++		4985545	0					
ANR	4986235	PostIncDecOperationExpression	ipstat . ips_fragdropped ++		4985545	0					
ANR	4986236	MemberAccess	ipstat . ips_fragdropped		4985545	0					
ANR	4986237	Identifier	ipstat		4985545	0					
ANR	4986238	Identifier	ips_fragdropped		4985545	1					
ANR	4986239	IncDec	++		4985545	1					
ANR	4986240	ExpressionStatement	m_freem ( m )	297:1:3735:3745	4985545	39	True				
ANR	4986241	CallExpression	m_freem ( m )		4985545	0					
ANR	4986242	Callee	m_freem		4985545	0					
ANR	4986243	Identifier	m_freem		4985545	0					
ANR	4986244	ArgumentList	m		4985545	1					
ANR	4986245	Argument	m		4985545	0					
ANR	4986246	Identifier	m		4985545	0					
ANR	4986247	ReturnStatement	return ( 0 ) ;	299:1:3749:3759	4985545	40	True				
ANR	4986248	PrimaryExpression	0		4985545	0					
ANR	4986249	Identifier	ip_reass		4985545	1					
ANR	4986250	ParameterList	"register struct ip * ip , register struct ipq * fp"		4985545	2					
ANR	4986251	Parameter	register struct ip * ip	1:9:9:30	4985545	0	True				
ANR	4986252	ParameterType	register struct ip *		4985545	0					
ANR	4986253	Identifier	ip		4985545	1					
ANR	4986254	Parameter	register struct ipq * fp	1:33:33:55	4985545	1	True				
ANR	4986255	ParameterType	register struct ipq *		4985545	0					
ANR	4986256	Identifier	fp		4985545	1					
ANR	4986257	CFGEntryNode	ENTRY		4985545		True				
ANR	4986258	CFGExitNode	EXIT		4985545		True				
ANR	4986259	Symbol	ip -> ip_p		4985545						
ANR	4986260	Symbol	pq		4985545						
ANR	4986261	Symbol	m -> m_ext		4985545						
ANR	4986262	Symbol	iptofrag		4985545						
ANR	4986263	Symbol	delta		4985545						
ANR	4986264	Symbol	ipstat . ips_fragdropped		4985545						
ANR	4986265	Symbol	* fp		4985545						
ANR	4986266	Symbol	pq -> ipf_off		4985545						
ANR	4986267	Symbol	m -> m_len		4985545						
ANR	4986268	Symbol	fp -> frag_link		4985545						
ANR	4986269	Symbol	q -> ipf_off		4985545						
ANR	4986270	Symbol	& ipq		4985545						
ANR	4986271	Symbol	ip -> ip_src		4985545						
ANR	4986272	Symbol	m -> m_flags		4985545						
ANR	4986273	Symbol	ip -> ip_off		4985545						
ANR	4986274	Symbol	q -> ipf_prev		4985545						
ANR	4986275	Symbol	m -> m_dat		4985545						
ANR	4986276	Symbol	hlen		4985545						
ANR	4986277	Symbol	& fp -> frag_link		4985545						
ANR	4986278	Symbol	NULL		4985545						
ANR	4986279	Symbol	ip -> ip_tos		4985545						
ANR	4986280	Symbol	* pq		4985545						
ANR	4986281	Symbol	ip		4985545						
ANR	4986282	Symbol	fp -> frag_link . next		4985545						
ANR	4986283	Symbol	m_get		4985545						
ANR	4986284	Symbol	ipq		4985545						
ANR	4986285	Symbol	ip -> ip_hl		4985545						
ANR	4986286	Symbol	fp -> ipq_id		4985545						
ANR	4986287	Symbol	( ( struct ipasfrag * ) ( q -> ipf_prev ) ) -> ipf_tos		4985545						
ANR	4986288	Symbol	ip -> ip_id		4985545						
ANR	4986289	Symbol	ip -> ip_dst		4985545						
ANR	4986290	Symbol	fp -> ipq_p		4985545						
ANR	4986291	Symbol	next		4985545						
ANR	4986292	Symbol	dtom		4985545						
ANR	4986293	Symbol	fp -> ipq_dst		4985545						
ANR	4986294	Symbol	fp		4985545						
ANR	4986295	Symbol	* ip		4985545						
ANR	4986296	Symbol	pq -> ipf_len		4985545						
ANR	4986297	Symbol	q -> ipf_next		4985545						
ANR	4986298	Symbol	& fp -> ip_link		4985545						
ANR	4986299	Symbol	m -> m_data		4985545						
ANR	4986300	Symbol	* * q		4985545						
ANR	4986301	Symbol	* q -> ipf_prev		4985545						
ANR	4986302	Symbol	fp -> ipq_src		4985545						
ANR	4986303	Symbol	fp -> frag_link . prev		4985545						
ANR	4986304	Symbol	M_EXT		4985545						
ANR	4986305	Symbol	ip -> ip_len		4985545						
ANR	4986306	Symbol	i		4985545						
ANR	4986307	Symbol	fp -> ipq_ttl		4985545						
ANR	4986308	Symbol	IPFRAGTTL		4985545						
ANR	4986309	Symbol	m		4985545						
ANR	4986310	Symbol	q -> ipf_len		4985545						
ANR	4986311	Symbol	q		4985545						
ANR	4986312	Symbol	fragtoip		4985545						
ANR	4986313	Symbol	~1		4985545						
ANR	4986314	Symbol	t		4985545						
ANR	4986315	Symbol	ipstat		4985545						
ANR	4986316	Symbol	* m		4985545						
ANR	4986317	Symbol	* q		4985545						
ANR	4986318	Symbol	& ipq . ip_link		4985545						
