command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	102246	File	/home/p4ultr4n/workplace/ReVeal/raw_code/MPV_encode_init_01_1.c								
ANR	102247	Function	MPV_encode_init	1:0:0:19949							
ANR	102248	FunctionDef	MPV_encode_init (AVCodecContext * avctx)		102247	0					
ANR	102249	CompoundStatement		3:0:52:19949	102247	0					
ANR	102250	IdentifierDeclStatement	MpegEncContext * s = avctx -> priv_data ;	5:4:59:95	102247	0	True				
ANR	102251	IdentifierDecl	* s = avctx -> priv_data		102247	0					
ANR	102252	IdentifierDeclType	MpegEncContext *		102247	0					
ANR	102253	Identifier	s		102247	1					
ANR	102254	AssignmentExpression	* s = avctx -> priv_data		102247	2		=			
ANR	102255	Identifier	s		102247	0					
ANR	102256	PtrMemberAccess	avctx -> priv_data		102247	1					
ANR	102257	Identifier	avctx		102247	0					
ANR	102258	Identifier	priv_data		102247	1					
ANR	102259	IdentifierDeclStatement	int i ;	7:4:102:107	102247	1	True				
ANR	102260	IdentifierDecl	i		102247	0					
ANR	102261	IdentifierDeclType	int		102247	0					
ANR	102262	Identifier	i		102247	1					
ANR	102263	IdentifierDeclStatement	"int chroma_h_shift , chroma_v_shift ;"	9:4:114:148	102247	2	True				
ANR	102264	IdentifierDecl	chroma_h_shift		102247	0					
ANR	102265	IdentifierDeclType	int		102247	0					
ANR	102266	Identifier	chroma_h_shift		102247	1					
ANR	102267	IdentifierDecl	chroma_v_shift		102247	1					
ANR	102268	IdentifierDeclType	int		102247	0					
ANR	102269	Identifier	chroma_v_shift		102247	1					
ANR	102270	ExpressionStatement	MPV_encode_defaults ( s )	13:4:157:179	102247	3	True				
ANR	102271	CallExpression	MPV_encode_defaults ( s )		102247	0					
ANR	102272	Callee	MPV_encode_defaults		102247	0					
ANR	102273	Identifier	MPV_encode_defaults		102247	0					
ANR	102274	ArgumentList	s		102247	1					
ANR	102275	Argument	s		102247	0					
ANR	102276	Identifier	s		102247	0					
ANR	102277	SwitchStatement	switch ( avctx -> codec_id )		102247	4					
ANR	102278	Condition	avctx -> codec_id	17:12:196:210	102247	0	True				
ANR	102279	PtrMemberAccess	avctx -> codec_id		102247	0					
ANR	102280	Identifier	avctx		102247	0					
ANR	102281	Identifier	codec_id		102247	1					
ANR	102282	CompoundStatement		15:29:160:160	102247	1					
ANR	102283	Label	case CODEC_ID_MPEG2VIDEO :	19:4:220:244	102247	0	True				
ANR	102284	Identifier	CODEC_ID_MPEG2VIDEO		102247	0					
ANR	102285	IfStatement	if ( avctx -> pix_fmt != PIX_FMT_YUV420P && avctx -> pix_fmt != PIX_FMT_YUV422P )		102247	1					
ANR	102286	Condition	avctx -> pix_fmt != PIX_FMT_YUV420P && avctx -> pix_fmt != PIX_FMT_YUV422P	21:11:258:327	102247	0	True				
ANR	102287	AndExpression	avctx -> pix_fmt != PIX_FMT_YUV420P && avctx -> pix_fmt != PIX_FMT_YUV422P		102247	0		&&			
ANR	102288	EqualityExpression	avctx -> pix_fmt != PIX_FMT_YUV420P		102247	0		!=			
ANR	102289	PtrMemberAccess	avctx -> pix_fmt		102247	0					
ANR	102290	Identifier	avctx		102247	0					
ANR	102291	Identifier	pix_fmt		102247	1					
ANR	102292	Identifier	PIX_FMT_YUV420P		102247	1					
ANR	102293	EqualityExpression	avctx -> pix_fmt != PIX_FMT_YUV422P		102247	1		!=			
ANR	102294	PtrMemberAccess	avctx -> pix_fmt		102247	0					
ANR	102295	Identifier	avctx		102247	0					
ANR	102296	Identifier	pix_fmt		102247	1					
ANR	102297	Identifier	PIX_FMT_YUV422P		102247	1					
ANR	102298	CompoundStatement		19:82:276:276	102247	1					
ANR	102299	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""only YUV420 and YUV422 are supported\\n"" )"	23:12:344:413	102247	0	True				
ANR	102300	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""only YUV420 and YUV422 are supported\\n"" )"		102247	0					
ANR	102301	Callee	av_log		102247	0					
ANR	102302	Identifier	av_log		102247	0					
ANR	102303	ArgumentList	avctx		102247	1					
ANR	102304	Argument	avctx		102247	0					
ANR	102305	Identifier	avctx		102247	0					
ANR	102306	Argument	AV_LOG_ERROR		102247	1					
ANR	102307	Identifier	AV_LOG_ERROR		102247	0					
ANR	102308	Argument	"""only YUV420 and YUV422 are supported\\n"""		102247	2					
ANR	102309	PrimaryExpression	"""only YUV420 and YUV422 are supported\\n"""		102247	0					
ANR	102310	ReturnStatement	return - 1 ;	25:12:428:437	102247	1	True				
ANR	102311	UnaryOperationExpression	- 1		102247	0					
ANR	102312	UnaryOperator	-		102247	0					
ANR	102313	PrimaryExpression	1		102247	1					
ANR	102314	BreakStatement	break ;	29:8:459:464	102247	2	True				
ANR	102315	Label	case CODEC_ID_LJPEG :	31:4:471:490	102247	3	True				
ANR	102316	Identifier	CODEC_ID_LJPEG		102247	0					
ANR	102317	IfStatement	if ( avctx -> pix_fmt != PIX_FMT_YUVJ420P && avctx -> pix_fmt != PIX_FMT_YUVJ422P && avctx -> pix_fmt != PIX_FMT_YUVJ444P && avctx -> pix_fmt != PIX_FMT_RGB32 && ( ( avctx -> pix_fmt != PIX_FMT_YUV420P && avctx -> pix_fmt != PIX_FMT_YUV422P && avctx -> pix_fmt != PIX_FMT_YUV444P ) || avctx -> strict_std_compliance > FF_COMPLIANCE_UNOFFICIAL ) )		102247	4					
ANR	102318	Condition	avctx -> pix_fmt != PIX_FMT_YUVJ420P && avctx -> pix_fmt != PIX_FMT_YUVJ422P && avctx -> pix_fmt != PIX_FMT_YUVJ444P && avctx -> pix_fmt != PIX_FMT_RGB32 && ( ( avctx -> pix_fmt != PIX_FMT_YUV420P && avctx -> pix_fmt != PIX_FMT_YUV422P && avctx -> pix_fmt != PIX_FMT_YUV444P ) || avctx -> strict_std_compliance > FF_COMPLIANCE_UNOFFICIAL )	33:11:504:832	102247	0	True				
ANR	102319	AndExpression	avctx -> pix_fmt != PIX_FMT_YUVJ420P && avctx -> pix_fmt != PIX_FMT_YUVJ422P && avctx -> pix_fmt != PIX_FMT_YUVJ444P && avctx -> pix_fmt != PIX_FMT_RGB32 && ( ( avctx -> pix_fmt != PIX_FMT_YUV420P && avctx -> pix_fmt != PIX_FMT_YUV422P && avctx -> pix_fmt != PIX_FMT_YUV444P ) || avctx -> strict_std_compliance > FF_COMPLIANCE_UNOFFICIAL )		102247	0		&&			
ANR	102320	EqualityExpression	avctx -> pix_fmt != PIX_FMT_YUVJ420P		102247	0		!=			
ANR	102321	PtrMemberAccess	avctx -> pix_fmt		102247	0					
ANR	102322	Identifier	avctx		102247	0					
ANR	102323	Identifier	pix_fmt		102247	1					
ANR	102324	Identifier	PIX_FMT_YUVJ420P		102247	1					
ANR	102325	AndExpression	avctx -> pix_fmt != PIX_FMT_YUVJ422P && avctx -> pix_fmt != PIX_FMT_YUVJ444P && avctx -> pix_fmt != PIX_FMT_RGB32 && ( ( avctx -> pix_fmt != PIX_FMT_YUV420P && avctx -> pix_fmt != PIX_FMT_YUV422P && avctx -> pix_fmt != PIX_FMT_YUV444P ) || avctx -> strict_std_compliance > FF_COMPLIANCE_UNOFFICIAL )		102247	1		&&			
ANR	102326	EqualityExpression	avctx -> pix_fmt != PIX_FMT_YUVJ422P		102247	0		!=			
ANR	102327	PtrMemberAccess	avctx -> pix_fmt		102247	0					
ANR	102328	Identifier	avctx		102247	0					
ANR	102329	Identifier	pix_fmt		102247	1					
ANR	102330	Identifier	PIX_FMT_YUVJ422P		102247	1					
ANR	102331	AndExpression	avctx -> pix_fmt != PIX_FMT_YUVJ444P && avctx -> pix_fmt != PIX_FMT_RGB32 && ( ( avctx -> pix_fmt != PIX_FMT_YUV420P && avctx -> pix_fmt != PIX_FMT_YUV422P && avctx -> pix_fmt != PIX_FMT_YUV444P ) || avctx -> strict_std_compliance > FF_COMPLIANCE_UNOFFICIAL )		102247	1		&&			
ANR	102332	EqualityExpression	avctx -> pix_fmt != PIX_FMT_YUVJ444P		102247	0		!=			
ANR	102333	PtrMemberAccess	avctx -> pix_fmt		102247	0					
ANR	102334	Identifier	avctx		102247	0					
ANR	102335	Identifier	pix_fmt		102247	1					
ANR	102336	Identifier	PIX_FMT_YUVJ444P		102247	1					
ANR	102337	AndExpression	avctx -> pix_fmt != PIX_FMT_RGB32 && ( ( avctx -> pix_fmt != PIX_FMT_YUV420P && avctx -> pix_fmt != PIX_FMT_YUV422P && avctx -> pix_fmt != PIX_FMT_YUV444P ) || avctx -> strict_std_compliance > FF_COMPLIANCE_UNOFFICIAL )		102247	1		&&			
ANR	102338	EqualityExpression	avctx -> pix_fmt != PIX_FMT_RGB32		102247	0		!=			
ANR	102339	PtrMemberAccess	avctx -> pix_fmt		102247	0					
ANR	102340	Identifier	avctx		102247	0					
ANR	102341	Identifier	pix_fmt		102247	1					
ANR	102342	Identifier	PIX_FMT_RGB32		102247	1					
ANR	102343	OrExpression	( avctx -> pix_fmt != PIX_FMT_YUV420P && avctx -> pix_fmt != PIX_FMT_YUV422P && avctx -> pix_fmt != PIX_FMT_YUV444P ) || avctx -> strict_std_compliance > FF_COMPLIANCE_UNOFFICIAL		102247	1		||			
ANR	102344	AndExpression	avctx -> pix_fmt != PIX_FMT_YUV420P && avctx -> pix_fmt != PIX_FMT_YUV422P && avctx -> pix_fmt != PIX_FMT_YUV444P		102247	0		&&			
ANR	102345	EqualityExpression	avctx -> pix_fmt != PIX_FMT_YUV420P		102247	0		!=			
ANR	102346	PtrMemberAccess	avctx -> pix_fmt		102247	0					
ANR	102347	Identifier	avctx		102247	0					
ANR	102348	Identifier	pix_fmt		102247	1					
ANR	102349	Identifier	PIX_FMT_YUV420P		102247	1					
ANR	102350	AndExpression	avctx -> pix_fmt != PIX_FMT_YUV422P && avctx -> pix_fmt != PIX_FMT_YUV444P		102247	1		&&			
ANR	102351	EqualityExpression	avctx -> pix_fmt != PIX_FMT_YUV422P		102247	0		!=			
ANR	102352	PtrMemberAccess	avctx -> pix_fmt		102247	0					
ANR	102353	Identifier	avctx		102247	0					
ANR	102354	Identifier	pix_fmt		102247	1					
ANR	102355	Identifier	PIX_FMT_YUV422P		102247	1					
ANR	102356	EqualityExpression	avctx -> pix_fmt != PIX_FMT_YUV444P		102247	1		!=			
ANR	102357	PtrMemberAccess	avctx -> pix_fmt		102247	0					
ANR	102358	Identifier	avctx		102247	0					
ANR	102359	Identifier	pix_fmt		102247	1					
ANR	102360	Identifier	PIX_FMT_YUV444P		102247	1					
ANR	102361	RelationalExpression	avctx -> strict_std_compliance > FF_COMPLIANCE_UNOFFICIAL		102247	1		>			
ANR	102362	PtrMemberAccess	avctx -> strict_std_compliance		102247	0					
ANR	102363	Identifier	avctx		102247	0					
ANR	102364	Identifier	strict_std_compliance		102247	1					
ANR	102365	Identifier	FF_COMPLIANCE_UNOFFICIAL		102247	1					
ANR	102366	CompoundStatement		33:180:781:781	102247	1					
ANR	102367	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""colorspace not supported in LJPEG\\n"" )"	37:12:849:915	102247	0	True				
ANR	102368	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""colorspace not supported in LJPEG\\n"" )"		102247	0					
ANR	102369	Callee	av_log		102247	0					
ANR	102370	Identifier	av_log		102247	0					
ANR	102371	ArgumentList	avctx		102247	1					
ANR	102372	Argument	avctx		102247	0					
ANR	102373	Identifier	avctx		102247	0					
ANR	102374	Argument	AV_LOG_ERROR		102247	1					
ANR	102375	Identifier	AV_LOG_ERROR		102247	0					
ANR	102376	Argument	"""colorspace not supported in LJPEG\\n"""		102247	2					
ANR	102377	PrimaryExpression	"""colorspace not supported in LJPEG\\n"""		102247	0					
ANR	102378	ReturnStatement	return - 1 ;	39:12:930:939	102247	1	True				
ANR	102379	UnaryOperationExpression	- 1		102247	0					
ANR	102380	UnaryOperator	-		102247	0					
ANR	102381	PrimaryExpression	1		102247	1					
ANR	102382	BreakStatement	break ;	43:8:961:966	102247	5	True				
ANR	102383	Label	case CODEC_ID_MJPEG :	45:4:973:992	102247	6	True				
ANR	102384	Identifier	CODEC_ID_MJPEG		102247	0					
ANR	102385	IfStatement	if ( avctx -> pix_fmt != PIX_FMT_YUVJ420P && avctx -> pix_fmt != PIX_FMT_YUVJ422P && ( ( avctx -> pix_fmt != PIX_FMT_YUV420P && avctx -> pix_fmt != PIX_FMT_YUV422P ) || avctx -> strict_std_compliance > FF_COMPLIANCE_UNOFFICIAL ) )		102247	7					
ANR	102386	Condition	avctx -> pix_fmt != PIX_FMT_YUVJ420P && avctx -> pix_fmt != PIX_FMT_YUVJ422P && ( ( avctx -> pix_fmt != PIX_FMT_YUV420P && avctx -> pix_fmt != PIX_FMT_YUV422P ) || avctx -> strict_std_compliance > FF_COMPLIANCE_UNOFFICIAL )	47:11:1006:1224	102247	0	True				
ANR	102387	AndExpression	avctx -> pix_fmt != PIX_FMT_YUVJ420P && avctx -> pix_fmt != PIX_FMT_YUVJ422P && ( ( avctx -> pix_fmt != PIX_FMT_YUV420P && avctx -> pix_fmt != PIX_FMT_YUV422P ) || avctx -> strict_std_compliance > FF_COMPLIANCE_UNOFFICIAL )		102247	0		&&			
ANR	102388	EqualityExpression	avctx -> pix_fmt != PIX_FMT_YUVJ420P		102247	0		!=			
ANR	102389	PtrMemberAccess	avctx -> pix_fmt		102247	0					
ANR	102390	Identifier	avctx		102247	0					
ANR	102391	Identifier	pix_fmt		102247	1					
ANR	102392	Identifier	PIX_FMT_YUVJ420P		102247	1					
ANR	102393	AndExpression	avctx -> pix_fmt != PIX_FMT_YUVJ422P && ( ( avctx -> pix_fmt != PIX_FMT_YUV420P && avctx -> pix_fmt != PIX_FMT_YUV422P ) || avctx -> strict_std_compliance > FF_COMPLIANCE_UNOFFICIAL )		102247	1		&&			
ANR	102394	EqualityExpression	avctx -> pix_fmt != PIX_FMT_YUVJ422P		102247	0		!=			
ANR	102395	PtrMemberAccess	avctx -> pix_fmt		102247	0					
ANR	102396	Identifier	avctx		102247	0					
ANR	102397	Identifier	pix_fmt		102247	1					
ANR	102398	Identifier	PIX_FMT_YUVJ422P		102247	1					
ANR	102399	OrExpression	( avctx -> pix_fmt != PIX_FMT_YUV420P && avctx -> pix_fmt != PIX_FMT_YUV422P ) || avctx -> strict_std_compliance > FF_COMPLIANCE_UNOFFICIAL		102247	1		||			
ANR	102400	AndExpression	avctx -> pix_fmt != PIX_FMT_YUV420P && avctx -> pix_fmt != PIX_FMT_YUV422P		102247	0		&&			
ANR	102401	EqualityExpression	avctx -> pix_fmt != PIX_FMT_YUV420P		102247	0		!=			
ANR	102402	PtrMemberAccess	avctx -> pix_fmt		102247	0					
ANR	102403	Identifier	avctx		102247	0					
ANR	102404	Identifier	pix_fmt		102247	1					
ANR	102405	Identifier	PIX_FMT_YUV420P		102247	1					
ANR	102406	EqualityExpression	avctx -> pix_fmt != PIX_FMT_YUV422P		102247	1		!=			
ANR	102407	PtrMemberAccess	avctx -> pix_fmt		102247	0					
ANR	102408	Identifier	avctx		102247	0					
ANR	102409	Identifier	pix_fmt		102247	1					
ANR	102410	Identifier	PIX_FMT_YUV422P		102247	1					
ANR	102411	RelationalExpression	avctx -> strict_std_compliance > FF_COMPLIANCE_UNOFFICIAL		102247	1		>			
ANR	102412	PtrMemberAccess	avctx -> strict_std_compliance		102247	0					
ANR	102413	Identifier	avctx		102247	0					
ANR	102414	Identifier	strict_std_compliance		102247	1					
ANR	102415	Identifier	FF_COMPLIANCE_UNOFFICIAL		102247	1					
ANR	102416	CompoundStatement		47:143:1173:1173	102247	1					
ANR	102417	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""colorspace not supported in jpeg\\n"" )"	51:12:1241:1306	102247	0	True				
ANR	102418	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""colorspace not supported in jpeg\\n"" )"		102247	0					
ANR	102419	Callee	av_log		102247	0					
ANR	102420	Identifier	av_log		102247	0					
ANR	102421	ArgumentList	avctx		102247	1					
ANR	102422	Argument	avctx		102247	0					
ANR	102423	Identifier	avctx		102247	0					
ANR	102424	Argument	AV_LOG_ERROR		102247	1					
ANR	102425	Identifier	AV_LOG_ERROR		102247	0					
ANR	102426	Argument	"""colorspace not supported in jpeg\\n"""		102247	2					
ANR	102427	PrimaryExpression	"""colorspace not supported in jpeg\\n"""		102247	0					
ANR	102428	ReturnStatement	return - 1 ;	53:12:1321:1330	102247	1	True				
ANR	102429	UnaryOperationExpression	- 1		102247	0					
ANR	102430	UnaryOperator	-		102247	0					
ANR	102431	PrimaryExpression	1		102247	1					
ANR	102432	BreakStatement	break ;	57:8:1352:1357	102247	8	True				
ANR	102433	Label	default :	59:4:1364:1371	102247	9	True				
ANR	102434	Identifier	default		102247	0					
ANR	102435	IfStatement	if ( avctx -> pix_fmt != PIX_FMT_YUV420P )		102247	10					
ANR	102436	Condition	avctx -> pix_fmt != PIX_FMT_YUV420P	61:11:1385:1417	102247	0	True				
ANR	102437	EqualityExpression	avctx -> pix_fmt != PIX_FMT_YUV420P		102247	0		!=			
ANR	102438	PtrMemberAccess	avctx -> pix_fmt		102247	0					
ANR	102439	Identifier	avctx		102247	0					
ANR	102440	Identifier	pix_fmt		102247	1					
ANR	102441	Identifier	PIX_FMT_YUV420P		102247	1					
ANR	102442	CompoundStatement		59:45:1366:1366	102247	1					
ANR	102443	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""only YUV420 is supported\\n"" )"	63:12:1434:1491	102247	0	True				
ANR	102444	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""only YUV420 is supported\\n"" )"		102247	0					
ANR	102445	Callee	av_log		102247	0					
ANR	102446	Identifier	av_log		102247	0					
ANR	102447	ArgumentList	avctx		102247	1					
ANR	102448	Argument	avctx		102247	0					
ANR	102449	Identifier	avctx		102247	0					
ANR	102450	Argument	AV_LOG_ERROR		102247	1					
ANR	102451	Identifier	AV_LOG_ERROR		102247	0					
ANR	102452	Argument	"""only YUV420 is supported\\n"""		102247	2					
ANR	102453	PrimaryExpression	"""only YUV420 is supported\\n"""		102247	0					
ANR	102454	ReturnStatement	return - 1 ;	65:12:1506:1515	102247	1	True				
ANR	102455	UnaryOperationExpression	- 1		102247	0					
ANR	102456	UnaryOperator	-		102247	0					
ANR	102457	PrimaryExpression	1		102247	1					
ANR	102458	SwitchStatement	switch ( avctx -> pix_fmt )		102247	5					
ANR	102459	Condition	avctx -> pix_fmt	73:12:1550:1563	102247	0	True				
ANR	102460	PtrMemberAccess	avctx -> pix_fmt		102247	0					
ANR	102461	Identifier	avctx		102247	0					
ANR	102462	Identifier	pix_fmt		102247	1					
ANR	102463	CompoundStatement		71:28:1513:1513	102247	1					
ANR	102464	Label	case PIX_FMT_YUVJ422P :	75:4:1573:1594	102247	0	True				
ANR	102465	Identifier	PIX_FMT_YUVJ422P		102247	0					
ANR	102466	Label	case PIX_FMT_YUV422P :	77:4:1601:1621	102247	1	True				
ANR	102467	Identifier	PIX_FMT_YUV422P		102247	0					
ANR	102468	ExpressionStatement	s -> chroma_format = CHROMA_422	79:8:1632:1661	102247	2	True				
ANR	102469	AssignmentExpression	s -> chroma_format = CHROMA_422		102247	0		=			
ANR	102470	PtrMemberAccess	s -> chroma_format		102247	0					
ANR	102471	Identifier	s		102247	0					
ANR	102472	Identifier	chroma_format		102247	1					
ANR	102473	Identifier	CHROMA_422		102247	1					
ANR	102474	BreakStatement	break ;	81:8:1672:1677	102247	3	True				
ANR	102475	Label	case PIX_FMT_YUVJ420P :	83:4:1684:1705	102247	4	True				
ANR	102476	Identifier	PIX_FMT_YUVJ420P		102247	0					
ANR	102477	Label	case PIX_FMT_YUV420P :	85:4:1712:1732	102247	5	True				
ANR	102478	Identifier	PIX_FMT_YUV420P		102247	0					
ANR	102479	Label	default :	87:4:1739:1746	102247	6	True				
ANR	102480	Identifier	default		102247	0					
ANR	102481	ExpressionStatement	s -> chroma_format = CHROMA_420	89:8:1757:1786	102247	7	True				
ANR	102482	AssignmentExpression	s -> chroma_format = CHROMA_420		102247	0		=			
ANR	102483	PtrMemberAccess	s -> chroma_format		102247	0					
ANR	102484	Identifier	s		102247	0					
ANR	102485	Identifier	chroma_format		102247	1					
ANR	102486	Identifier	CHROMA_420		102247	1					
ANR	102487	BreakStatement	break ;	91:8:1797:1802	102247	8	True				
ANR	102488	ExpressionStatement	s -> bit_rate = avctx -> bit_rate	97:4:1818:1847	102247	6	True				
ANR	102489	AssignmentExpression	s -> bit_rate = avctx -> bit_rate		102247	0		=			
ANR	102490	PtrMemberAccess	s -> bit_rate		102247	0					
ANR	102491	Identifier	s		102247	0					
ANR	102492	Identifier	bit_rate		102247	1					
ANR	102493	PtrMemberAccess	avctx -> bit_rate		102247	1					
ANR	102494	Identifier	avctx		102247	0					
ANR	102495	Identifier	bit_rate		102247	1					
ANR	102496	ExpressionStatement	s -> width = avctx -> width	99:4:1854:1877	102247	7	True				
ANR	102497	AssignmentExpression	s -> width = avctx -> width		102247	0		=			
ANR	102498	PtrMemberAccess	s -> width		102247	0					
ANR	102499	Identifier	s		102247	0					
ANR	102500	Identifier	width		102247	1					
ANR	102501	PtrMemberAccess	avctx -> width		102247	1					
ANR	102502	Identifier	avctx		102247	0					
ANR	102503	Identifier	width		102247	1					
ANR	102504	ExpressionStatement	s -> height = avctx -> height	101:4:1884:1909	102247	8	True				
ANR	102505	AssignmentExpression	s -> height = avctx -> height		102247	0		=			
ANR	102506	PtrMemberAccess	s -> height		102247	0					
ANR	102507	Identifier	s		102247	0					
ANR	102508	Identifier	height		102247	1					
ANR	102509	PtrMemberAccess	avctx -> height		102247	1					
ANR	102510	Identifier	avctx		102247	0					
ANR	102511	Identifier	height		102247	1					
ANR	102512	IfStatement	if ( avctx -> gop_size > 600 && avctx -> strict_std_compliance > FF_COMPLIANCE_EXPERIMENTAL )		102247	9					
ANR	102513	Condition	avctx -> gop_size > 600 && avctx -> strict_std_compliance > FF_COMPLIANCE_EXPERIMENTAL	103:7:1919:1998	102247	0	True				
ANR	102514	AndExpression	avctx -> gop_size > 600 && avctx -> strict_std_compliance > FF_COMPLIANCE_EXPERIMENTAL		102247	0		&&			
ANR	102515	RelationalExpression	avctx -> gop_size > 600		102247	0		>			
ANR	102516	PtrMemberAccess	avctx -> gop_size		102247	0					
ANR	102517	Identifier	avctx		102247	0					
ANR	102518	Identifier	gop_size		102247	1					
ANR	102519	PrimaryExpression	600		102247	1					
ANR	102520	RelationalExpression	avctx -> strict_std_compliance > FF_COMPLIANCE_EXPERIMENTAL		102247	1		>			
ANR	102521	PtrMemberAccess	avctx -> strict_std_compliance		102247	0					
ANR	102522	Identifier	avctx		102247	0					
ANR	102523	Identifier	strict_std_compliance		102247	1					
ANR	102524	Identifier	FF_COMPLIANCE_EXPERIMENTAL		102247	1					
ANR	102525	CompoundStatement		101:88:1947:1947	102247	1					
ANR	102526	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Warning keyframe interval too large! reducing it ...\\n"" )"	105:8:2011:2096	102247	0	True				
ANR	102527	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Warning keyframe interval too large! reducing it ...\\n"" )"		102247	0					
ANR	102528	Callee	av_log		102247	0					
ANR	102529	Identifier	av_log		102247	0					
ANR	102530	ArgumentList	avctx		102247	1					
ANR	102531	Argument	avctx		102247	0					
ANR	102532	Identifier	avctx		102247	0					
ANR	102533	Argument	AV_LOG_ERROR		102247	1					
ANR	102534	Identifier	AV_LOG_ERROR		102247	0					
ANR	102535	Argument	"""Warning keyframe interval too large! reducing it ...\\n"""		102247	2					
ANR	102536	PrimaryExpression	"""Warning keyframe interval too large! reducing it ...\\n"""		102247	0					
ANR	102537	ExpressionStatement	avctx -> gop_size = 600	107:8:2107:2126	102247	1	True				
ANR	102538	AssignmentExpression	avctx -> gop_size = 600		102247	0		=			
ANR	102539	PtrMemberAccess	avctx -> gop_size		102247	0					
ANR	102540	Identifier	avctx		102247	0					
ANR	102541	Identifier	gop_size		102247	1					
ANR	102542	PrimaryExpression	600		102247	1					
ANR	102543	ExpressionStatement	s -> gop_size = avctx -> gop_size	111:4:2140:2169	102247	10	True				
ANR	102544	AssignmentExpression	s -> gop_size = avctx -> gop_size		102247	0		=			
ANR	102545	PtrMemberAccess	s -> gop_size		102247	0					
ANR	102546	Identifier	s		102247	0					
ANR	102547	Identifier	gop_size		102247	1					
ANR	102548	PtrMemberAccess	avctx -> gop_size		102247	1					
ANR	102549	Identifier	avctx		102247	0					
ANR	102550	Identifier	gop_size		102247	1					
ANR	102551	ExpressionStatement	s -> avctx = avctx	113:4:2176:2192	102247	11	True				
ANR	102552	AssignmentExpression	s -> avctx = avctx		102247	0		=			
ANR	102553	PtrMemberAccess	s -> avctx		102247	0					
ANR	102554	Identifier	s		102247	0					
ANR	102555	Identifier	avctx		102247	1					
ANR	102556	Identifier	avctx		102247	1					
ANR	102557	ExpressionStatement	s -> flags = avctx -> flags	115:4:2199:2221	102247	12	True				
ANR	102558	AssignmentExpression	s -> flags = avctx -> flags		102247	0		=			
ANR	102559	PtrMemberAccess	s -> flags		102247	0					
ANR	102560	Identifier	s		102247	0					
ANR	102561	Identifier	flags		102247	1					
ANR	102562	PtrMemberAccess	avctx -> flags		102247	1					
ANR	102563	Identifier	avctx		102247	0					
ANR	102564	Identifier	flags		102247	1					
ANR	102565	ExpressionStatement	s -> flags2 = avctx -> flags2	117:4:2228:2252	102247	13	True				
ANR	102566	AssignmentExpression	s -> flags2 = avctx -> flags2		102247	0		=			
ANR	102567	PtrMemberAccess	s -> flags2		102247	0					
ANR	102568	Identifier	s		102247	0					
ANR	102569	Identifier	flags2		102247	1					
ANR	102570	PtrMemberAccess	avctx -> flags2		102247	1					
ANR	102571	Identifier	avctx		102247	0					
ANR	102572	Identifier	flags2		102247	1					
ANR	102573	ExpressionStatement	s -> max_b_frames = avctx -> max_b_frames	119:4:2259:2295	102247	14	True				
ANR	102574	AssignmentExpression	s -> max_b_frames = avctx -> max_b_frames		102247	0		=			
ANR	102575	PtrMemberAccess	s -> max_b_frames		102247	0					
ANR	102576	Identifier	s		102247	0					
ANR	102577	Identifier	max_b_frames		102247	1					
ANR	102578	PtrMemberAccess	avctx -> max_b_frames		102247	1					
ANR	102579	Identifier	avctx		102247	0					
ANR	102580	Identifier	max_b_frames		102247	1					
ANR	102581	ExpressionStatement	s -> codec_id = avctx -> codec -> id	121:4:2302:2331	102247	15	True				
ANR	102582	AssignmentExpression	s -> codec_id = avctx -> codec -> id		102247	0		=			
ANR	102583	PtrMemberAccess	s -> codec_id		102247	0					
ANR	102584	Identifier	s		102247	0					
ANR	102585	Identifier	codec_id		102247	1					
ANR	102586	PtrMemberAccess	avctx -> codec -> id		102247	1					
ANR	102587	PtrMemberAccess	avctx -> codec		102247	0					
ANR	102588	Identifier	avctx		102247	0					
ANR	102589	Identifier	codec		102247	1					
ANR	102590	Identifier	id		102247	1					
ANR	102591	ExpressionStatement	s -> luma_elim_threshold = avctx -> luma_elim_threshold	123:4:2338:2390	102247	16	True				
ANR	102592	AssignmentExpression	s -> luma_elim_threshold = avctx -> luma_elim_threshold		102247	0		=			
ANR	102593	PtrMemberAccess	s -> luma_elim_threshold		102247	0					
ANR	102594	Identifier	s		102247	0					
ANR	102595	Identifier	luma_elim_threshold		102247	1					
ANR	102596	PtrMemberAccess	avctx -> luma_elim_threshold		102247	1					
ANR	102597	Identifier	avctx		102247	0					
ANR	102598	Identifier	luma_elim_threshold		102247	1					
ANR	102599	ExpressionStatement	s -> chroma_elim_threshold = avctx -> chroma_elim_threshold	125:4:2397:2451	102247	17	True				
ANR	102600	AssignmentExpression	s -> chroma_elim_threshold = avctx -> chroma_elim_threshold		102247	0		=			
ANR	102601	PtrMemberAccess	s -> chroma_elim_threshold		102247	0					
ANR	102602	Identifier	s		102247	0					
ANR	102603	Identifier	chroma_elim_threshold		102247	1					
ANR	102604	PtrMemberAccess	avctx -> chroma_elim_threshold		102247	1					
ANR	102605	Identifier	avctx		102247	0					
ANR	102606	Identifier	chroma_elim_threshold		102247	1					
ANR	102607	ExpressionStatement	s -> strict_std_compliance = avctx -> strict_std_compliance	127:4:2458:2512	102247	18	True				
ANR	102608	AssignmentExpression	s -> strict_std_compliance = avctx -> strict_std_compliance		102247	0		=			
ANR	102609	PtrMemberAccess	s -> strict_std_compliance		102247	0					
ANR	102610	Identifier	s		102247	0					
ANR	102611	Identifier	strict_std_compliance		102247	1					
ANR	102612	PtrMemberAccess	avctx -> strict_std_compliance		102247	1					
ANR	102613	Identifier	avctx		102247	0					
ANR	102614	Identifier	strict_std_compliance		102247	1					
ANR	102615	ExpressionStatement	s -> data_partitioning = avctx -> flags & CODEC_FLAG_PART	129:4:2519:2571	102247	19	True				
ANR	102616	AssignmentExpression	s -> data_partitioning = avctx -> flags & CODEC_FLAG_PART		102247	0		=			
ANR	102617	PtrMemberAccess	s -> data_partitioning		102247	0					
ANR	102618	Identifier	s		102247	0					
ANR	102619	Identifier	data_partitioning		102247	1					
ANR	102620	BitAndExpression	avctx -> flags & CODEC_FLAG_PART		102247	1		&			
ANR	102621	PtrMemberAccess	avctx -> flags		102247	0					
ANR	102622	Identifier	avctx		102247	0					
ANR	102623	Identifier	flags		102247	1					
ANR	102624	Identifier	CODEC_FLAG_PART		102247	1					
ANR	102625	ExpressionStatement	s -> quarter_sample = ( avctx -> flags & CODEC_FLAG_QPEL ) != 0	131:4:2578:2632	102247	20	True				
ANR	102626	AssignmentExpression	s -> quarter_sample = ( avctx -> flags & CODEC_FLAG_QPEL ) != 0		102247	0		=			
ANR	102627	PtrMemberAccess	s -> quarter_sample		102247	0					
ANR	102628	Identifier	s		102247	0					
ANR	102629	Identifier	quarter_sample		102247	1					
ANR	102630	EqualityExpression	( avctx -> flags & CODEC_FLAG_QPEL ) != 0		102247	1		!=			
ANR	102631	BitAndExpression	avctx -> flags & CODEC_FLAG_QPEL		102247	0		&			
ANR	102632	PtrMemberAccess	avctx -> flags		102247	0					
ANR	102633	Identifier	avctx		102247	0					
ANR	102634	Identifier	flags		102247	1					
ANR	102635	Identifier	CODEC_FLAG_QPEL		102247	1					
ANR	102636	PrimaryExpression	0		102247	1					
ANR	102637	ExpressionStatement	s -> mpeg_quant = avctx -> mpeg_quant	133:4:2639:2671	102247	21	True				
ANR	102638	AssignmentExpression	s -> mpeg_quant = avctx -> mpeg_quant		102247	0		=			
ANR	102639	PtrMemberAccess	s -> mpeg_quant		102247	0					
ANR	102640	Identifier	s		102247	0					
ANR	102641	Identifier	mpeg_quant		102247	1					
ANR	102642	PtrMemberAccess	avctx -> mpeg_quant		102247	1					
ANR	102643	Identifier	avctx		102247	0					
ANR	102644	Identifier	mpeg_quant		102247	1					
ANR	102645	ExpressionStatement	s -> rtp_mode = ! ! avctx -> rtp_payload_size	135:4:2678:2716	102247	22	True				
ANR	102646	AssignmentExpression	s -> rtp_mode = ! ! avctx -> rtp_payload_size		102247	0		=			
ANR	102647	PtrMemberAccess	s -> rtp_mode		102247	0					
ANR	102648	Identifier	s		102247	0					
ANR	102649	Identifier	rtp_mode		102247	1					
ANR	102650	UnaryOperationExpression	! ! avctx -> rtp_payload_size		102247	1					
ANR	102651	UnaryOperator	!		102247	0					
ANR	102652	UnaryOperationExpression	! avctx -> rtp_payload_size		102247	1					
ANR	102653	UnaryOperator	!		102247	0					
ANR	102654	PtrMemberAccess	avctx -> rtp_payload_size		102247	1					
ANR	102655	Identifier	avctx		102247	0					
ANR	102656	Identifier	rtp_payload_size		102247	1					
ANR	102657	ExpressionStatement	s -> intra_dc_precision = avctx -> intra_dc_precision	137:4:2723:2771	102247	23	True				
ANR	102658	AssignmentExpression	s -> intra_dc_precision = avctx -> intra_dc_precision		102247	0		=			
ANR	102659	PtrMemberAccess	s -> intra_dc_precision		102247	0					
ANR	102660	Identifier	s		102247	0					
ANR	102661	Identifier	intra_dc_precision		102247	1					
ANR	102662	PtrMemberAccess	avctx -> intra_dc_precision		102247	1					
ANR	102663	Identifier	avctx		102247	0					
ANR	102664	Identifier	intra_dc_precision		102247	1					
ANR	102665	ExpressionStatement	s -> user_specified_pts = AV_NOPTS_VALUE	139:4:2778:2816	102247	24	True				
ANR	102666	AssignmentExpression	s -> user_specified_pts = AV_NOPTS_VALUE		102247	0		=			
ANR	102667	PtrMemberAccess	s -> user_specified_pts		102247	0					
ANR	102668	Identifier	s		102247	0					
ANR	102669	Identifier	user_specified_pts		102247	1					
ANR	102670	Identifier	AV_NOPTS_VALUE		102247	1					
ANR	102671	IfStatement	if ( s -> gop_size <= 1 )		102247	25					
ANR	102672	Condition	s -> gop_size <= 1	143:8:2829:2844	102247	0	True				
ANR	102673	RelationalExpression	s -> gop_size <= 1		102247	0		<=			
ANR	102674	PtrMemberAccess	s -> gop_size		102247	0					
ANR	102675	Identifier	s		102247	0					
ANR	102676	Identifier	gop_size		102247	1					
ANR	102677	PrimaryExpression	1		102247	1					
ANR	102678	CompoundStatement		141:26:2794:2794	102247	1					
ANR	102679	ExpressionStatement	s -> intra_only = 1	145:8:2858:2875	102247	0	True				
ANR	102680	AssignmentExpression	s -> intra_only = 1		102247	0		=			
ANR	102681	PtrMemberAccess	s -> intra_only		102247	0					
ANR	102682	Identifier	s		102247	0					
ANR	102683	Identifier	intra_only		102247	1					
ANR	102684	PrimaryExpression	1		102247	1					
ANR	102685	ExpressionStatement	s -> gop_size = 12	147:8:2886:2902	102247	1	True				
ANR	102686	AssignmentExpression	s -> gop_size = 12		102247	0		=			
ANR	102687	PtrMemberAccess	s -> gop_size		102247	0					
ANR	102688	Identifier	s		102247	0					
ANR	102689	Identifier	gop_size		102247	1					
ANR	102690	PrimaryExpression	12		102247	1					
ANR	102691	ElseStatement	else		102247	0					
ANR	102692	CompoundStatement		147:11:2863:2863	102247	0					
ANR	102693	ExpressionStatement	s -> intra_only = 0	151:8:2927:2944	102247	0	True				
ANR	102694	AssignmentExpression	s -> intra_only = 0		102247	0		=			
ANR	102695	PtrMemberAccess	s -> intra_only		102247	0					
ANR	102696	Identifier	s		102247	0					
ANR	102697	Identifier	intra_only		102247	1					
ANR	102698	PrimaryExpression	0		102247	1					
ANR	102699	ExpressionStatement	s -> me_method = avctx -> me_method	157:4:2960:2991	102247	26	True				
ANR	102700	AssignmentExpression	s -> me_method = avctx -> me_method		102247	0		=			
ANR	102701	PtrMemberAccess	s -> me_method		102247	0					
ANR	102702	Identifier	s		102247	0					
ANR	102703	Identifier	me_method		102247	1					
ANR	102704	PtrMemberAccess	avctx -> me_method		102247	1					
ANR	102705	Identifier	avctx		102247	0					
ANR	102706	Identifier	me_method		102247	1					
ANR	102707	ExpressionStatement	s -> fixed_qscale = ! ! ( avctx -> flags & CODEC_FLAG_QSCALE )	163:4:3024:3078	102247	27	True				
ANR	102708	AssignmentExpression	s -> fixed_qscale = ! ! ( avctx -> flags & CODEC_FLAG_QSCALE )		102247	0		=			
ANR	102709	PtrMemberAccess	s -> fixed_qscale		102247	0					
ANR	102710	Identifier	s		102247	0					
ANR	102711	Identifier	fixed_qscale		102247	1					
ANR	102712	UnaryOperationExpression	! ! ( avctx -> flags & CODEC_FLAG_QSCALE )		102247	1					
ANR	102713	UnaryOperator	!		102247	0					
ANR	102714	UnaryOperationExpression	! ( avctx -> flags & CODEC_FLAG_QSCALE )		102247	1					
ANR	102715	UnaryOperator	!		102247	0					
ANR	102716	BitAndExpression	avctx -> flags & CODEC_FLAG_QSCALE		102247	1		&			
ANR	102717	PtrMemberAccess	avctx -> flags		102247	0					
ANR	102718	Identifier	avctx		102247	0					
ANR	102719	Identifier	flags		102247	1					
ANR	102720	Identifier	CODEC_FLAG_QSCALE		102247	1					
ANR	102721	ExpressionStatement	s -> adaptive_quant = ( s -> avctx -> lumi_masking || s -> avctx -> dark_masking || s -> avctx -> temporal_cplx_masking || s -> avctx -> spatial_cplx_masking || s -> avctx -> p_masking || s -> avctx -> border_masking || ( s -> flags & CODEC_FLAG_QP_RD ) ) && ! s -> fixed_qscale	167:4:3087:3504	102247	28	True				
ANR	102722	AssignmentExpression	s -> adaptive_quant = ( s -> avctx -> lumi_masking || s -> avctx -> dark_masking || s -> avctx -> temporal_cplx_masking || s -> avctx -> spatial_cplx_masking || s -> avctx -> p_masking || s -> avctx -> border_masking || ( s -> flags & CODEC_FLAG_QP_RD ) ) && ! s -> fixed_qscale		102247	0		=			
ANR	102723	PtrMemberAccess	s -> adaptive_quant		102247	0					
ANR	102724	Identifier	s		102247	0					
ANR	102725	Identifier	adaptive_quant		102247	1					
ANR	102726	AndExpression	( s -> avctx -> lumi_masking || s -> avctx -> dark_masking || s -> avctx -> temporal_cplx_masking || s -> avctx -> spatial_cplx_masking || s -> avctx -> p_masking || s -> avctx -> border_masking || ( s -> flags & CODEC_FLAG_QP_RD ) ) && ! s -> fixed_qscale		102247	1		&&			
ANR	102727	OrExpression	s -> avctx -> lumi_masking || s -> avctx -> dark_masking || s -> avctx -> temporal_cplx_masking || s -> avctx -> spatial_cplx_masking || s -> avctx -> p_masking || s -> avctx -> border_masking || ( s -> flags & CODEC_FLAG_QP_RD )		102247	0		||			
ANR	102728	PtrMemberAccess	s -> avctx -> lumi_masking		102247	0					
ANR	102729	PtrMemberAccess	s -> avctx		102247	0					
ANR	102730	Identifier	s		102247	0					
ANR	102731	Identifier	avctx		102247	1					
ANR	102732	Identifier	lumi_masking		102247	1					
ANR	102733	OrExpression	s -> avctx -> dark_masking || s -> avctx -> temporal_cplx_masking || s -> avctx -> spatial_cplx_masking || s -> avctx -> p_masking || s -> avctx -> border_masking || ( s -> flags & CODEC_FLAG_QP_RD )		102247	1		||			
ANR	102734	PtrMemberAccess	s -> avctx -> dark_masking		102247	0					
ANR	102735	PtrMemberAccess	s -> avctx		102247	0					
ANR	102736	Identifier	s		102247	0					
ANR	102737	Identifier	avctx		102247	1					
ANR	102738	Identifier	dark_masking		102247	1					
ANR	102739	OrExpression	s -> avctx -> temporal_cplx_masking || s -> avctx -> spatial_cplx_masking || s -> avctx -> p_masking || s -> avctx -> border_masking || ( s -> flags & CODEC_FLAG_QP_RD )		102247	1		||			
ANR	102740	PtrMemberAccess	s -> avctx -> temporal_cplx_masking		102247	0					
ANR	102741	PtrMemberAccess	s -> avctx		102247	0					
ANR	102742	Identifier	s		102247	0					
ANR	102743	Identifier	avctx		102247	1					
ANR	102744	Identifier	temporal_cplx_masking		102247	1					
ANR	102745	OrExpression	s -> avctx -> spatial_cplx_masking || s -> avctx -> p_masking || s -> avctx -> border_masking || ( s -> flags & CODEC_FLAG_QP_RD )		102247	1		||			
ANR	102746	PtrMemberAccess	s -> avctx -> spatial_cplx_masking		102247	0					
ANR	102747	PtrMemberAccess	s -> avctx		102247	0					
ANR	102748	Identifier	s		102247	0					
ANR	102749	Identifier	avctx		102247	1					
ANR	102750	Identifier	spatial_cplx_masking		102247	1					
ANR	102751	OrExpression	s -> avctx -> p_masking || s -> avctx -> border_masking || ( s -> flags & CODEC_FLAG_QP_RD )		102247	1		||			
ANR	102752	PtrMemberAccess	s -> avctx -> p_masking		102247	0					
ANR	102753	PtrMemberAccess	s -> avctx		102247	0					
ANR	102754	Identifier	s		102247	0					
ANR	102755	Identifier	avctx		102247	1					
ANR	102756	Identifier	p_masking		102247	1					
ANR	102757	OrExpression	s -> avctx -> border_masking || ( s -> flags & CODEC_FLAG_QP_RD )		102247	1		||			
ANR	102758	PtrMemberAccess	s -> avctx -> border_masking		102247	0					
ANR	102759	PtrMemberAccess	s -> avctx		102247	0					
ANR	102760	Identifier	s		102247	0					
ANR	102761	Identifier	avctx		102247	1					
ANR	102762	Identifier	border_masking		102247	1					
ANR	102763	BitAndExpression	s -> flags & CODEC_FLAG_QP_RD		102247	1		&			
ANR	102764	PtrMemberAccess	s -> flags		102247	0					
ANR	102765	Identifier	s		102247	0					
ANR	102766	Identifier	flags		102247	1					
ANR	102767	Identifier	CODEC_FLAG_QP_RD		102247	1					
ANR	102768	UnaryOperationExpression	! s -> fixed_qscale		102247	1					
ANR	102769	UnaryOperator	!		102247	0					
ANR	102770	PtrMemberAccess	s -> fixed_qscale		102247	1					
ANR	102771	Identifier	s		102247	0					
ANR	102772	Identifier	fixed_qscale		102247	1					
ANR	102773	ExpressionStatement	s -> obmc = ! ! ( s -> flags & CODEC_FLAG_OBMC )	185:4:3513:3552	102247	29	True				
ANR	102774	AssignmentExpression	s -> obmc = ! ! ( s -> flags & CODEC_FLAG_OBMC )		102247	0		=			
ANR	102775	PtrMemberAccess	s -> obmc		102247	0					
ANR	102776	Identifier	s		102247	0					
ANR	102777	Identifier	obmc		102247	1					
ANR	102778	UnaryOperationExpression	! ! ( s -> flags & CODEC_FLAG_OBMC )		102247	1					
ANR	102779	UnaryOperator	!		102247	0					
ANR	102780	UnaryOperationExpression	! ( s -> flags & CODEC_FLAG_OBMC )		102247	1					
ANR	102781	UnaryOperator	!		102247	0					
ANR	102782	BitAndExpression	s -> flags & CODEC_FLAG_OBMC		102247	1		&			
ANR	102783	PtrMemberAccess	s -> flags		102247	0					
ANR	102784	Identifier	s		102247	0					
ANR	102785	Identifier	flags		102247	1					
ANR	102786	Identifier	CODEC_FLAG_OBMC		102247	1					
ANR	102787	ExpressionStatement	s -> loop_filter = ! ! ( s -> flags & CODEC_FLAG_LOOP_FILTER )	187:4:3559:3612	102247	30	True				
ANR	102788	AssignmentExpression	s -> loop_filter = ! ! ( s -> flags & CODEC_FLAG_LOOP_FILTER )		102247	0		=			
ANR	102789	PtrMemberAccess	s -> loop_filter		102247	0					
ANR	102790	Identifier	s		102247	0					
ANR	102791	Identifier	loop_filter		102247	1					
ANR	102792	UnaryOperationExpression	! ! ( s -> flags & CODEC_FLAG_LOOP_FILTER )		102247	1					
ANR	102793	UnaryOperator	!		102247	0					
ANR	102794	UnaryOperationExpression	! ( s -> flags & CODEC_FLAG_LOOP_FILTER )		102247	1					
ANR	102795	UnaryOperator	!		102247	0					
ANR	102796	BitAndExpression	s -> flags & CODEC_FLAG_LOOP_FILTER		102247	1		&			
ANR	102797	PtrMemberAccess	s -> flags		102247	0					
ANR	102798	Identifier	s		102247	0					
ANR	102799	Identifier	flags		102247	1					
ANR	102800	Identifier	CODEC_FLAG_LOOP_FILTER		102247	1					
ANR	102801	ExpressionStatement	s -> alternate_scan = ! ! ( s -> flags & CODEC_FLAG_ALT_SCAN )	189:4:3619:3672	102247	31	True				
ANR	102802	AssignmentExpression	s -> alternate_scan = ! ! ( s -> flags & CODEC_FLAG_ALT_SCAN )		102247	0		=			
ANR	102803	PtrMemberAccess	s -> alternate_scan		102247	0					
ANR	102804	Identifier	s		102247	0					
ANR	102805	Identifier	alternate_scan		102247	1					
ANR	102806	UnaryOperationExpression	! ! ( s -> flags & CODEC_FLAG_ALT_SCAN )		102247	1					
ANR	102807	UnaryOperator	!		102247	0					
ANR	102808	UnaryOperationExpression	! ( s -> flags & CODEC_FLAG_ALT_SCAN )		102247	1					
ANR	102809	UnaryOperator	!		102247	0					
ANR	102810	BitAndExpression	s -> flags & CODEC_FLAG_ALT_SCAN		102247	1		&			
ANR	102811	PtrMemberAccess	s -> flags		102247	0					
ANR	102812	Identifier	s		102247	0					
ANR	102813	Identifier	flags		102247	1					
ANR	102814	Identifier	CODEC_FLAG_ALT_SCAN		102247	1					
ANR	102815	ExpressionStatement	s -> intra_vlc_format = ! ! ( s -> flags2 & CODEC_FLAG2_INTRA_VLC )	191:4:3679:3737	102247	32	True				
ANR	102816	AssignmentExpression	s -> intra_vlc_format = ! ! ( s -> flags2 & CODEC_FLAG2_INTRA_VLC )		102247	0		=			
ANR	102817	PtrMemberAccess	s -> intra_vlc_format		102247	0					
ANR	102818	Identifier	s		102247	0					
ANR	102819	Identifier	intra_vlc_format		102247	1					
ANR	102820	UnaryOperationExpression	! ! ( s -> flags2 & CODEC_FLAG2_INTRA_VLC )		102247	1					
ANR	102821	UnaryOperator	!		102247	0					
ANR	102822	UnaryOperationExpression	! ( s -> flags2 & CODEC_FLAG2_INTRA_VLC )		102247	1					
ANR	102823	UnaryOperator	!		102247	0					
ANR	102824	BitAndExpression	s -> flags2 & CODEC_FLAG2_INTRA_VLC		102247	1		&			
ANR	102825	PtrMemberAccess	s -> flags2		102247	0					
ANR	102826	Identifier	s		102247	0					
ANR	102827	Identifier	flags2		102247	1					
ANR	102828	Identifier	CODEC_FLAG2_INTRA_VLC		102247	1					
ANR	102829	ExpressionStatement	s -> q_scale_type = ! ! ( s -> flags2 & CODEC_FLAG2_NON_LINEAR_QUANT )	193:4:3744:3805	102247	33	True				
ANR	102830	AssignmentExpression	s -> q_scale_type = ! ! ( s -> flags2 & CODEC_FLAG2_NON_LINEAR_QUANT )		102247	0		=			
ANR	102831	PtrMemberAccess	s -> q_scale_type		102247	0					
ANR	102832	Identifier	s		102247	0					
ANR	102833	Identifier	q_scale_type		102247	1					
ANR	102834	UnaryOperationExpression	! ! ( s -> flags2 & CODEC_FLAG2_NON_LINEAR_QUANT )		102247	1					
ANR	102835	UnaryOperator	!		102247	0					
ANR	102836	UnaryOperationExpression	! ( s -> flags2 & CODEC_FLAG2_NON_LINEAR_QUANT )		102247	1					
ANR	102837	UnaryOperator	!		102247	0					
ANR	102838	BitAndExpression	s -> flags2 & CODEC_FLAG2_NON_LINEAR_QUANT		102247	1		&			
ANR	102839	PtrMemberAccess	s -> flags2		102247	0					
ANR	102840	Identifier	s		102247	0					
ANR	102841	Identifier	flags2		102247	1					
ANR	102842	Identifier	CODEC_FLAG2_NON_LINEAR_QUANT		102247	1					
ANR	102843	IfStatement	if ( avctx -> rc_max_rate && ! avctx -> rc_buffer_size )		102247	34					
ANR	102844	Condition	avctx -> rc_max_rate && ! avctx -> rc_buffer_size	197:7:3817:3860	102247	0	True				
ANR	102845	AndExpression	avctx -> rc_max_rate && ! avctx -> rc_buffer_size		102247	0		&&			
ANR	102846	PtrMemberAccess	avctx -> rc_max_rate		102247	0					
ANR	102847	Identifier	avctx		102247	0					
ANR	102848	Identifier	rc_max_rate		102247	1					
ANR	102849	UnaryOperationExpression	! avctx -> rc_buffer_size		102247	1					
ANR	102850	UnaryOperator	!		102247	0					
ANR	102851	PtrMemberAccess	avctx -> rc_buffer_size		102247	1					
ANR	102852	Identifier	avctx		102247	0					
ANR	102853	Identifier	rc_buffer_size		102247	1					
ANR	102854	CompoundStatement		195:52:3809:3809	102247	1					
ANR	102855	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""a vbv buffer size is needed, for encoding with a maximum bitrate\\n"" )"	199:8:3873:3970	102247	0	True				
ANR	102856	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""a vbv buffer size is needed, for encoding with a maximum bitrate\\n"" )"		102247	0					
ANR	102857	Callee	av_log		102247	0					
ANR	102858	Identifier	av_log		102247	0					
ANR	102859	ArgumentList	avctx		102247	1					
ANR	102860	Argument	avctx		102247	0					
ANR	102861	Identifier	avctx		102247	0					
ANR	102862	Argument	AV_LOG_ERROR		102247	1					
ANR	102863	Identifier	AV_LOG_ERROR		102247	0					
ANR	102864	Argument	"""a vbv buffer size is needed, for encoding with a maximum bitrate\\n"""		102247	2					
ANR	102865	PrimaryExpression	"""a vbv buffer size is needed, for encoding with a maximum bitrate\\n"""		102247	0					
ANR	102866	ReturnStatement	return - 1 ;	201:8:3981:3990	102247	1	True				
ANR	102867	UnaryOperationExpression	- 1		102247	0					
ANR	102868	UnaryOperator	-		102247	0					
ANR	102869	PrimaryExpression	1		102247	1					
ANR	102870	IfStatement	if ( avctx -> rc_min_rate && avctx -> rc_max_rate != avctx -> rc_min_rate )		102247	35					
ANR	102871	Condition	avctx -> rc_min_rate && avctx -> rc_max_rate != avctx -> rc_min_rate	207:7:4009:4070	102247	0	True				
ANR	102872	AndExpression	avctx -> rc_min_rate && avctx -> rc_max_rate != avctx -> rc_min_rate		102247	0		&&			
ANR	102873	PtrMemberAccess	avctx -> rc_min_rate		102247	0					
ANR	102874	Identifier	avctx		102247	0					
ANR	102875	Identifier	rc_min_rate		102247	1					
ANR	102876	EqualityExpression	avctx -> rc_max_rate != avctx -> rc_min_rate		102247	1		!=			
ANR	102877	PtrMemberAccess	avctx -> rc_max_rate		102247	0					
ANR	102878	Identifier	avctx		102247	0					
ANR	102879	Identifier	rc_max_rate		102247	1					
ANR	102880	PtrMemberAccess	avctx -> rc_min_rate		102247	1					
ANR	102881	Identifier	avctx		102247	0					
ANR	102882	Identifier	rc_min_rate		102247	1					
ANR	102883	CompoundStatement		205:70:4019:4019	102247	1					
ANR	102884	ExpressionStatement	"av_log ( avctx , AV_LOG_INFO , ""Warning min_rate > 0 but min_rate != max_rate isn't recommended!\\n"" )"	209:8:4083:4179	102247	0	True				
ANR	102885	CallExpression	"av_log ( avctx , AV_LOG_INFO , ""Warning min_rate > 0 but min_rate != max_rate isn't recommended!\\n"" )"		102247	0					
ANR	102886	Callee	av_log		102247	0					
ANR	102887	Identifier	av_log		102247	0					
ANR	102888	ArgumentList	avctx		102247	1					
ANR	102889	Argument	avctx		102247	0					
ANR	102890	Identifier	avctx		102247	0					
ANR	102891	Argument	AV_LOG_INFO		102247	1					
ANR	102892	Identifier	AV_LOG_INFO		102247	0					
ANR	102893	Argument	"""Warning min_rate > 0 but min_rate != max_rate isn't recommended!\\n"""		102247	2					
ANR	102894	PrimaryExpression	"""Warning min_rate > 0 but min_rate != max_rate isn't recommended!\\n"""		102247	0					
ANR	102895	IfStatement	if ( avctx -> rc_min_rate && avctx -> rc_min_rate > avctx -> bit_rate )		102247	36					
ANR	102896	Condition	avctx -> rc_min_rate && avctx -> rc_min_rate > avctx -> bit_rate	215:7:4198:4255	102247	0	True				
ANR	102897	AndExpression	avctx -> rc_min_rate && avctx -> rc_min_rate > avctx -> bit_rate		102247	0		&&			
ANR	102898	PtrMemberAccess	avctx -> rc_min_rate		102247	0					
ANR	102899	Identifier	avctx		102247	0					
ANR	102900	Identifier	rc_min_rate		102247	1					
ANR	102901	RelationalExpression	avctx -> rc_min_rate > avctx -> bit_rate		102247	1		>			
ANR	102902	PtrMemberAccess	avctx -> rc_min_rate		102247	0					
ANR	102903	Identifier	avctx		102247	0					
ANR	102904	Identifier	rc_min_rate		102247	1					
ANR	102905	PtrMemberAccess	avctx -> bit_rate		102247	1					
ANR	102906	Identifier	avctx		102247	0					
ANR	102907	Identifier	bit_rate		102247	1					
ANR	102908	CompoundStatement		213:66:4204:4204	102247	1					
ANR	102909	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""bitrate below min bitrate\\n"" )"	217:8:4268:4326	102247	0	True				
ANR	102910	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""bitrate below min bitrate\\n"" )"		102247	0					
ANR	102911	Callee	av_log		102247	0					
ANR	102912	Identifier	av_log		102247	0					
ANR	102913	ArgumentList	avctx		102247	1					
ANR	102914	Argument	avctx		102247	0					
ANR	102915	Identifier	avctx		102247	0					
ANR	102916	Argument	AV_LOG_ERROR		102247	1					
ANR	102917	Identifier	AV_LOG_ERROR		102247	0					
ANR	102918	Argument	"""bitrate below min bitrate\\n"""		102247	2					
ANR	102919	PrimaryExpression	"""bitrate below min bitrate\\n"""		102247	0					
ANR	102920	ReturnStatement	return - 1 ;	219:8:4337:4346	102247	1	True				
ANR	102921	UnaryOperationExpression	- 1		102247	0					
ANR	102922	UnaryOperator	-		102247	0					
ANR	102923	PrimaryExpression	1		102247	1					
ANR	102924	IfStatement	if ( avctx -> rc_max_rate && avctx -> rc_max_rate < avctx -> bit_rate )		102247	37					
ANR	102925	Condition	avctx -> rc_max_rate && avctx -> rc_max_rate < avctx -> bit_rate	225:7:4365:4422	102247	0	True				
ANR	102926	AndExpression	avctx -> rc_max_rate && avctx -> rc_max_rate < avctx -> bit_rate		102247	0		&&			
ANR	102927	PtrMemberAccess	avctx -> rc_max_rate		102247	0					
ANR	102928	Identifier	avctx		102247	0					
ANR	102929	Identifier	rc_max_rate		102247	1					
ANR	102930	RelationalExpression	avctx -> rc_max_rate < avctx -> bit_rate		102247	1		<			
ANR	102931	PtrMemberAccess	avctx -> rc_max_rate		102247	0					
ANR	102932	Identifier	avctx		102247	0					
ANR	102933	Identifier	rc_max_rate		102247	1					
ANR	102934	PtrMemberAccess	avctx -> bit_rate		102247	1					
ANR	102935	Identifier	avctx		102247	0					
ANR	102936	Identifier	bit_rate		102247	1					
ANR	102937	CompoundStatement		223:66:4371:4371	102247	1					
ANR	102938	ExpressionStatement	"av_log ( avctx , AV_LOG_INFO , ""bitrate above max bitrate\\n"" )"	227:8:4435:4492	102247	0	True				
ANR	102939	CallExpression	"av_log ( avctx , AV_LOG_INFO , ""bitrate above max bitrate\\n"" )"		102247	0					
ANR	102940	Callee	av_log		102247	0					
ANR	102941	Identifier	av_log		102247	0					
ANR	102942	ArgumentList	avctx		102247	1					
ANR	102943	Argument	avctx		102247	0					
ANR	102944	Identifier	avctx		102247	0					
ANR	102945	Argument	AV_LOG_INFO		102247	1					
ANR	102946	Identifier	AV_LOG_INFO		102247	0					
ANR	102947	Argument	"""bitrate above max bitrate\\n"""		102247	2					
ANR	102948	PrimaryExpression	"""bitrate above max bitrate\\n"""		102247	0					
ANR	102949	ReturnStatement	return - 1 ;	229:8:4503:4512	102247	1	True				
ANR	102950	UnaryOperationExpression	- 1		102247	0					
ANR	102951	UnaryOperator	-		102247	0					
ANR	102952	PrimaryExpression	1		102247	1					
ANR	102953	IfStatement	if ( avctx -> rc_max_rate && avctx -> rc_max_rate == avctx -> bit_rate && avctx -> rc_max_rate != avctx -> rc_min_rate )		102247	38					
ANR	102954	Condition	avctx -> rc_max_rate && avctx -> rc_max_rate == avctx -> bit_rate && avctx -> rc_max_rate != avctx -> rc_min_rate	235:7:4531:4633	102247	0	True				
ANR	102955	AndExpression	avctx -> rc_max_rate && avctx -> rc_max_rate == avctx -> bit_rate && avctx -> rc_max_rate != avctx -> rc_min_rate		102247	0		&&			
ANR	102956	PtrMemberAccess	avctx -> rc_max_rate		102247	0					
ANR	102957	Identifier	avctx		102247	0					
ANR	102958	Identifier	rc_max_rate		102247	1					
ANR	102959	AndExpression	avctx -> rc_max_rate == avctx -> bit_rate && avctx -> rc_max_rate != avctx -> rc_min_rate		102247	1		&&			
ANR	102960	EqualityExpression	avctx -> rc_max_rate == avctx -> bit_rate		102247	0		==			
ANR	102961	PtrMemberAccess	avctx -> rc_max_rate		102247	0					
ANR	102962	Identifier	avctx		102247	0					
ANR	102963	Identifier	rc_max_rate		102247	1					
ANR	102964	PtrMemberAccess	avctx -> bit_rate		102247	1					
ANR	102965	Identifier	avctx		102247	0					
ANR	102966	Identifier	bit_rate		102247	1					
ANR	102967	EqualityExpression	avctx -> rc_max_rate != avctx -> rc_min_rate		102247	1		!=			
ANR	102968	PtrMemberAccess	avctx -> rc_max_rate		102247	0					
ANR	102969	Identifier	avctx		102247	0					
ANR	102970	Identifier	rc_max_rate		102247	1					
ANR	102971	PtrMemberAccess	avctx -> rc_min_rate		102247	1					
ANR	102972	Identifier	avctx		102247	0					
ANR	102973	Identifier	rc_min_rate		102247	1					
ANR	102974	CompoundStatement		233:111:4582:4582	102247	1					
ANR	102975	ExpressionStatement	"av_log ( avctx , AV_LOG_INFO , ""impossible bitrate constraints, this will fail\\n"" )"	237:8:4646:4724	102247	0	True				
ANR	102976	CallExpression	"av_log ( avctx , AV_LOG_INFO , ""impossible bitrate constraints, this will fail\\n"" )"		102247	0					
ANR	102977	Callee	av_log		102247	0					
ANR	102978	Identifier	av_log		102247	0					
ANR	102979	ArgumentList	avctx		102247	1					
ANR	102980	Argument	avctx		102247	0					
ANR	102981	Identifier	avctx		102247	0					
ANR	102982	Argument	AV_LOG_INFO		102247	1					
ANR	102983	Identifier	AV_LOG_INFO		102247	0					
ANR	102984	Argument	"""impossible bitrate constraints, this will fail\\n"""		102247	2					
ANR	102985	PrimaryExpression	"""impossible bitrate constraints, this will fail\\n"""		102247	0					
ANR	102986	IfStatement	if ( avctx -> rc_buffer_size && avctx -> bit_rate * ( int64_t ) avctx -> time_base . num > avctx -> rc_buffer_size * ( int64_t ) avctx -> time_base . den )		102247	39					
ANR	102987	Condition	avctx -> rc_buffer_size && avctx -> bit_rate * ( int64_t ) avctx -> time_base . num > avctx -> rc_buffer_size * ( int64_t ) avctx -> time_base . den	243:7:4743:4868	102247	0	True				
ANR	102988	AndExpression	avctx -> rc_buffer_size && avctx -> bit_rate * ( int64_t ) avctx -> time_base . num > avctx -> rc_buffer_size * ( int64_t ) avctx -> time_base . den		102247	0		&&			
ANR	102989	PtrMemberAccess	avctx -> rc_buffer_size		102247	0					
ANR	102990	Identifier	avctx		102247	0					
ANR	102991	Identifier	rc_buffer_size		102247	1					
ANR	102992	RelationalExpression	avctx -> bit_rate * ( int64_t ) avctx -> time_base . num > avctx -> rc_buffer_size * ( int64_t ) avctx -> time_base . den		102247	1		>			
ANR	102993	MultiplicativeExpression	avctx -> bit_rate * ( int64_t ) avctx -> time_base . num		102247	0		*			
ANR	102994	PtrMemberAccess	avctx -> bit_rate		102247	0					
ANR	102995	Identifier	avctx		102247	0					
ANR	102996	Identifier	bit_rate		102247	1					
ANR	102997	CastExpression	( int64_t ) avctx -> time_base . num		102247	1					
ANR	102998	CastTarget	int64_t		102247	0					
ANR	102999	MemberAccess	avctx -> time_base . num		102247	1					
ANR	103000	PtrMemberAccess	avctx -> time_base		102247	0					
ANR	103001	Identifier	avctx		102247	0					
ANR	103002	Identifier	time_base		102247	1					
ANR	103003	Identifier	num		102247	1					
ANR	103004	MultiplicativeExpression	avctx -> rc_buffer_size * ( int64_t ) avctx -> time_base . den		102247	1		*			
ANR	103005	PtrMemberAccess	avctx -> rc_buffer_size		102247	0					
ANR	103006	Identifier	avctx		102247	0					
ANR	103007	Identifier	rc_buffer_size		102247	1					
ANR	103008	CastExpression	( int64_t ) avctx -> time_base . den		102247	1					
ANR	103009	CastTarget	int64_t		102247	0					
ANR	103010	MemberAccess	avctx -> time_base . den		102247	1					
ANR	103011	PtrMemberAccess	avctx -> time_base		102247	0					
ANR	103012	Identifier	avctx		102247	0					
ANR	103013	Identifier	time_base		102247	1					
ANR	103014	Identifier	den		102247	1					
ANR	103015	CompoundStatement		241:134:4817:4817	102247	1					
ANR	103016	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""VBV buffer too small for bitrate\\n"" )"	245:8:4881:4946	102247	0	True				
ANR	103017	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""VBV buffer too small for bitrate\\n"" )"		102247	0					
ANR	103018	Callee	av_log		102247	0					
ANR	103019	Identifier	av_log		102247	0					
ANR	103020	ArgumentList	avctx		102247	1					
ANR	103021	Argument	avctx		102247	0					
ANR	103022	Identifier	avctx		102247	0					
ANR	103023	Argument	AV_LOG_ERROR		102247	1					
ANR	103024	Identifier	AV_LOG_ERROR		102247	0					
ANR	103025	Argument	"""VBV buffer too small for bitrate\\n"""		102247	2					
ANR	103026	PrimaryExpression	"""VBV buffer too small for bitrate\\n"""		102247	0					
ANR	103027	ReturnStatement	return - 1 ;	247:8:4957:4966	102247	1	True				
ANR	103028	UnaryOperationExpression	- 1		102247	0					
ANR	103029	UnaryOperator	-		102247	0					
ANR	103030	PrimaryExpression	1		102247	1					
ANR	103031	IfStatement	if ( ! s -> fixed_qscale && avctx -> bit_rate * av_q2d ( avctx -> time_base ) > avctx -> bit_rate_tolerance )		102247	40					
ANR	103032	Condition	! s -> fixed_qscale && avctx -> bit_rate * av_q2d ( avctx -> time_base ) > avctx -> bit_rate_tolerance	253:7:4985:5072	102247	0	True				
ANR	103033	AndExpression	! s -> fixed_qscale && avctx -> bit_rate * av_q2d ( avctx -> time_base ) > avctx -> bit_rate_tolerance		102247	0		&&			
ANR	103034	UnaryOperationExpression	! s -> fixed_qscale		102247	0					
ANR	103035	UnaryOperator	!		102247	0					
ANR	103036	PtrMemberAccess	s -> fixed_qscale		102247	1					
ANR	103037	Identifier	s		102247	0					
ANR	103038	Identifier	fixed_qscale		102247	1					
ANR	103039	RelationalExpression	avctx -> bit_rate * av_q2d ( avctx -> time_base ) > avctx -> bit_rate_tolerance		102247	1		>			
ANR	103040	MultiplicativeExpression	avctx -> bit_rate * av_q2d ( avctx -> time_base )		102247	0		*			
ANR	103041	PtrMemberAccess	avctx -> bit_rate		102247	0					
ANR	103042	Identifier	avctx		102247	0					
ANR	103043	Identifier	bit_rate		102247	1					
ANR	103044	CallExpression	av_q2d ( avctx -> time_base )		102247	1					
ANR	103045	Callee	av_q2d		102247	0					
ANR	103046	Identifier	av_q2d		102247	0					
ANR	103047	ArgumentList	avctx -> time_base		102247	1					
ANR	103048	Argument	avctx -> time_base		102247	0					
ANR	103049	PtrMemberAccess	avctx -> time_base		102247	0					
ANR	103050	Identifier	avctx		102247	0					
ANR	103051	Identifier	time_base		102247	1					
ANR	103052	PtrMemberAccess	avctx -> bit_rate_tolerance		102247	1					
ANR	103053	Identifier	avctx		102247	0					
ANR	103054	Identifier	bit_rate_tolerance		102247	1					
ANR	103055	CompoundStatement		251:96:5021:5021	102247	1					
ANR	103056	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""bitrate tolerance too small for bitrate\\n"" )"	255:8:5085:5157	102247	0	True				
ANR	103057	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""bitrate tolerance too small for bitrate\\n"" )"		102247	0					
ANR	103058	Callee	av_log		102247	0					
ANR	103059	Identifier	av_log		102247	0					
ANR	103060	ArgumentList	avctx		102247	1					
ANR	103061	Argument	avctx		102247	0					
ANR	103062	Identifier	avctx		102247	0					
ANR	103063	Argument	AV_LOG_ERROR		102247	1					
ANR	103064	Identifier	AV_LOG_ERROR		102247	0					
ANR	103065	Argument	"""bitrate tolerance too small for bitrate\\n"""		102247	2					
ANR	103066	PrimaryExpression	"""bitrate tolerance too small for bitrate\\n"""		102247	0					
ANR	103067	ReturnStatement	return - 1 ;	257:8:5168:5177	102247	1	True				
ANR	103068	UnaryOperationExpression	- 1		102247	0					
ANR	103069	UnaryOperator	-		102247	0					
ANR	103070	PrimaryExpression	1		102247	1					
ANR	103071	Statement	if	263:4:5193:5194	102247	41	True				
ANR	103072	Statement	(	263:6:5195:5195	102247	42	True				
ANR	103073	Statement	s	263:10:5199:5199	102247	43	True				
ANR	103074	Statement	->	263:11:5200:5201	102247	44	True				
ANR	103075	Statement	avctx	263:13:5202:5206	102247	45	True				
ANR	103076	Statement	->	263:18:5207:5208	102247	46	True				
ANR	103077	Statement	rc_max_rate	263:20:5209:5219	102247	47	True				
ANR	103078	Statement	&&	263:32:5221:5222	102247	48	True				
ANR	103079	Statement	s	263:35:5224:5224	102247	49	True				
ANR	103080	Statement	->	263:36:5225:5226	102247	50	True				
ANR	103081	Statement	avctx	263:38:5227:5231	102247	51	True				
ANR	103082	Statement	->	263:43:5232:5233	102247	52	True				
ANR	103083	Statement	rc_min_rate	263:45:5234:5244	102247	53	True				
ANR	103084	Statement	==	263:57:5246:5247	102247	54	True				
ANR	103085	Statement	s	263:60:5249:5249	102247	55	True				
ANR	103086	Statement	->	263:61:5250:5251	102247	56	True				
ANR	103087	Statement	avctx	263:63:5252:5256	102247	57	True				
ANR	103088	Statement	->	263:68:5257:5258	102247	58	True				
ANR	103089	Statement	rc_max_rate	263:70:5259:5269	102247	59	True				
ANR	103090	Statement	&&	265:7:5279:5280	102247	60	True				
ANR	103091	Statement	(	265:10:5282:5282	102247	61	True				
ANR	103092	Statement	s	265:11:5283:5283	102247	62	True				
ANR	103093	Statement	->	265:12:5284:5285	102247	63	True				
ANR	103094	Statement	codec_id	265:14:5286:5293	102247	64	True				
ANR	103095	Statement	==	265:23:5295:5296	102247	65	True				
ANR	103096	Statement	CODEC_ID_MPEG1VIDEO	265:26:5298:5316	102247	66	True				
ANR	103097	Statement	||	265:46:5318:5319	102247	67	True				
ANR	103098	Statement	s	265:49:5321:5321	102247	68	True				
ANR	103099	Statement	->	265:50:5322:5323	102247	69	True				
ANR	103100	Statement	codec_id	265:52:5324:5331	102247	70	True				
ANR	103101	Statement	==	265:61:5333:5334	102247	71	True				
ANR	103102	Statement	CODEC_ID_MPEG2VIDEO	265:64:5336:5354	102247	72	True				
ANR	103103	Statement	)	265:83:5355:5355	102247	73	True				
ANR	103104	Statement	&&	267:7:5365:5366	102247	74	True				
ANR	103105	Statement	90000L	267:10:5368:5373	102247	75	True				
ANR	103106	Statement	L	267:16:5374:5374	102247	76	True				
ANR	103107	Statement	*	267:18:5376:5376	102247	77	True				
ANR	103108	Statement	(	267:20:5378:5378	102247	78	True				
ANR	103109	Statement	avctx	267:21:5379:5383	102247	79	True				
ANR	103110	Statement	->	267:26:5384:5385	102247	80	True				
ANR	103111	Statement	rc_buffer_size	267:28:5386:5399	102247	81	True				
ANR	103112	Statement	-	267:42:5400:5400	102247	82	True				
ANR	103113	Statement	1	267:43:5401:5401	102247	83	True				
ANR	103114	Statement	)	267:44:5402:5402	102247	84	True				
ANR	103115	Statement	>	267:46:5404:5404	102247	85	True				
ANR	103116	Statement	s	267:48:5406:5406	102247	86	True				
ANR	103117	Statement	->	267:49:5407:5408	102247	87	True				
ANR	103118	Statement	avctx	267:51:5409:5413	102247	88	True				
ANR	103119	Statement	->	267:56:5414:5415	102247	89	True				
ANR	103120	Statement	rc_max_rate	267:58:5416:5426	102247	90	True				
ANR	103121	Statement	*	267:69:5427:5427	102247	91	True				
ANR	103122	Statement	0xFFFFL	267:70:5428:5434	102247	92	True				
ANR	103123	Statement	L	267:77:5435:5435	102247	93	True				
ANR	103124	Statement	)	267:78:5436:5436	102247	94	True				
ANR	103125	CompoundStatement		265:79:5384:5384	102247	95					
ANR	103126	ExpressionStatement	"av_log ( avctx , AV_LOG_INFO , ""Warning vbv_delay will be set to 0xFFFF (=VBR) as the specified vbv buffer is too large for the given bitrate!\\n"" )"	271:8:5450:5592	102247	0	True				
ANR	103127	CallExpression	"av_log ( avctx , AV_LOG_INFO , ""Warning vbv_delay will be set to 0xFFFF (=VBR) as the specified vbv buffer is too large for the given bitrate!\\n"" )"		102247	0					
ANR	103128	Callee	av_log		102247	0					
ANR	103129	Identifier	av_log		102247	0					
ANR	103130	ArgumentList	avctx		102247	1					
ANR	103131	Argument	avctx		102247	0					
ANR	103132	Identifier	avctx		102247	0					
ANR	103133	Argument	AV_LOG_INFO		102247	1					
ANR	103134	Identifier	AV_LOG_INFO		102247	0					
ANR	103135	Argument	"""Warning vbv_delay will be set to 0xFFFF (=VBR) as the specified vbv buffer is too large for the given bitrate!\\n"""		102247	2					
ANR	103136	PrimaryExpression	"""Warning vbv_delay will be set to 0xFFFF (=VBR) as the specified vbv buffer is too large for the given bitrate!\\n"""		102247	0					
ANR	103137	IfStatement	if ( ( s -> flags & CODEC_FLAG_4MV ) && s -> codec_id != CODEC_ID_MPEG4 && s -> codec_id != CODEC_ID_H263 && s -> codec_id != CODEC_ID_H263P && s -> codec_id != CODEC_ID_FLV1 )		102247	96					
ANR	103138	Condition	( s -> flags & CODEC_FLAG_4MV ) && s -> codec_id != CODEC_ID_MPEG4 && s -> codec_id != CODEC_ID_H263 && s -> codec_id != CODEC_ID_H263P && s -> codec_id != CODEC_ID_FLV1	277:7:5611:5775	102247	0	True				
ANR	103139	AndExpression	( s -> flags & CODEC_FLAG_4MV ) && s -> codec_id != CODEC_ID_MPEG4 && s -> codec_id != CODEC_ID_H263 && s -> codec_id != CODEC_ID_H263P && s -> codec_id != CODEC_ID_FLV1		102247	0		&&			
ANR	103140	BitAndExpression	s -> flags & CODEC_FLAG_4MV		102247	0		&			
ANR	103141	PtrMemberAccess	s -> flags		102247	0					
ANR	103142	Identifier	s		102247	0					
ANR	103143	Identifier	flags		102247	1					
ANR	103144	Identifier	CODEC_FLAG_4MV		102247	1					
ANR	103145	AndExpression	s -> codec_id != CODEC_ID_MPEG4 && s -> codec_id != CODEC_ID_H263 && s -> codec_id != CODEC_ID_H263P && s -> codec_id != CODEC_ID_FLV1		102247	1		&&			
ANR	103146	EqualityExpression	s -> codec_id != CODEC_ID_MPEG4		102247	0		!=			
ANR	103147	PtrMemberAccess	s -> codec_id		102247	0					
ANR	103148	Identifier	s		102247	0					
ANR	103149	Identifier	codec_id		102247	1					
ANR	103150	Identifier	CODEC_ID_MPEG4		102247	1					
ANR	103151	AndExpression	s -> codec_id != CODEC_ID_H263 && s -> codec_id != CODEC_ID_H263P && s -> codec_id != CODEC_ID_FLV1		102247	1		&&			
ANR	103152	EqualityExpression	s -> codec_id != CODEC_ID_H263		102247	0		!=			
ANR	103153	PtrMemberAccess	s -> codec_id		102247	0					
ANR	103154	Identifier	s		102247	0					
ANR	103155	Identifier	codec_id		102247	1					
ANR	103156	Identifier	CODEC_ID_H263		102247	1					
ANR	103157	AndExpression	s -> codec_id != CODEC_ID_H263P && s -> codec_id != CODEC_ID_FLV1		102247	1		&&			
ANR	103158	EqualityExpression	s -> codec_id != CODEC_ID_H263P		102247	0		!=			
ANR	103159	PtrMemberAccess	s -> codec_id		102247	0					
ANR	103160	Identifier	s		102247	0					
ANR	103161	Identifier	codec_id		102247	1					
ANR	103162	Identifier	CODEC_ID_H263P		102247	1					
ANR	103163	EqualityExpression	s -> codec_id != CODEC_ID_FLV1		102247	1		!=			
ANR	103164	PtrMemberAccess	s -> codec_id		102247	0					
ANR	103165	Identifier	s		102247	0					
ANR	103166	Identifier	codec_id		102247	1					
ANR	103167	Identifier	CODEC_ID_FLV1		102247	1					
ANR	103168	CompoundStatement		277:104:5724:5724	102247	1					
ANR	103169	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""4MV not supported by codec\\n"" )"	281:8:5788:5847	102247	0	True				
ANR	103170	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""4MV not supported by codec\\n"" )"		102247	0					
ANR	103171	Callee	av_log		102247	0					
ANR	103172	Identifier	av_log		102247	0					
ANR	103173	ArgumentList	avctx		102247	1					
ANR	103174	Argument	avctx		102247	0					
ANR	103175	Identifier	avctx		102247	0					
ANR	103176	Argument	AV_LOG_ERROR		102247	1					
ANR	103177	Identifier	AV_LOG_ERROR		102247	0					
ANR	103178	Argument	"""4MV not supported by codec\\n"""		102247	2					
ANR	103179	PrimaryExpression	"""4MV not supported by codec\\n"""		102247	0					
ANR	103180	ReturnStatement	return - 1 ;	283:8:5858:5867	102247	1	True				
ANR	103181	UnaryOperationExpression	- 1		102247	0					
ANR	103182	UnaryOperator	-		102247	0					
ANR	103183	PrimaryExpression	1		102247	1					
ANR	103184	IfStatement	if ( s -> obmc && s -> avctx -> mb_decision != FF_MB_DECISION_SIMPLE )		102247	97					
ANR	103185	Condition	s -> obmc && s -> avctx -> mb_decision != FF_MB_DECISION_SIMPLE	289:7:5886:5942	102247	0	True				
ANR	103186	AndExpression	s -> obmc && s -> avctx -> mb_decision != FF_MB_DECISION_SIMPLE		102247	0		&&			
ANR	103187	PtrMemberAccess	s -> obmc		102247	0					
ANR	103188	Identifier	s		102247	0					
ANR	103189	Identifier	obmc		102247	1					
ANR	103190	EqualityExpression	s -> avctx -> mb_decision != FF_MB_DECISION_SIMPLE		102247	1		!=			
ANR	103191	PtrMemberAccess	s -> avctx -> mb_decision		102247	0					
ANR	103192	PtrMemberAccess	s -> avctx		102247	0					
ANR	103193	Identifier	s		102247	0					
ANR	103194	Identifier	avctx		102247	1					
ANR	103195	Identifier	mb_decision		102247	1					
ANR	103196	Identifier	FF_MB_DECISION_SIMPLE		102247	1					
ANR	103197	CompoundStatement		287:65:5891:5891	102247	1					
ANR	103198	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""OBMC is only supported with simple mb decision\\n"" )"	291:8:5955:6034	102247	0	True				
ANR	103199	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""OBMC is only supported with simple mb decision\\n"" )"		102247	0					
ANR	103200	Callee	av_log		102247	0					
ANR	103201	Identifier	av_log		102247	0					
ANR	103202	ArgumentList	avctx		102247	1					
ANR	103203	Argument	avctx		102247	0					
ANR	103204	Identifier	avctx		102247	0					
ANR	103205	Argument	AV_LOG_ERROR		102247	1					
ANR	103206	Identifier	AV_LOG_ERROR		102247	0					
ANR	103207	Argument	"""OBMC is only supported with simple mb decision\\n"""		102247	2					
ANR	103208	PrimaryExpression	"""OBMC is only supported with simple mb decision\\n"""		102247	0					
ANR	103209	ReturnStatement	return - 1 ;	293:8:6045:6054	102247	1	True				
ANR	103210	UnaryOperationExpression	- 1		102247	0					
ANR	103211	UnaryOperator	-		102247	0					
ANR	103212	PrimaryExpression	1		102247	1					
ANR	103213	IfStatement	if ( s -> obmc && s -> codec_id != CODEC_ID_H263 && s -> codec_id != CODEC_ID_H263P )		102247	98					
ANR	103214	Condition	s -> obmc && s -> codec_id != CODEC_ID_H263 && s -> codec_id != CODEC_ID_H263P	299:7:6073:6144	102247	0	True				
ANR	103215	AndExpression	s -> obmc && s -> codec_id != CODEC_ID_H263 && s -> codec_id != CODEC_ID_H263P		102247	0		&&			
ANR	103216	PtrMemberAccess	s -> obmc		102247	0					
ANR	103217	Identifier	s		102247	0					
ANR	103218	Identifier	obmc		102247	1					
ANR	103219	AndExpression	s -> codec_id != CODEC_ID_H263 && s -> codec_id != CODEC_ID_H263P		102247	1		&&			
ANR	103220	EqualityExpression	s -> codec_id != CODEC_ID_H263		102247	0		!=			
ANR	103221	PtrMemberAccess	s -> codec_id		102247	0					
ANR	103222	Identifier	s		102247	0					
ANR	103223	Identifier	codec_id		102247	1					
ANR	103224	Identifier	CODEC_ID_H263		102247	1					
ANR	103225	EqualityExpression	s -> codec_id != CODEC_ID_H263P		102247	1		!=			
ANR	103226	PtrMemberAccess	s -> codec_id		102247	0					
ANR	103227	Identifier	s		102247	0					
ANR	103228	Identifier	codec_id		102247	1					
ANR	103229	Identifier	CODEC_ID_H263P		102247	1					
ANR	103230	CompoundStatement		297:80:6093:6093	102247	1					
ANR	103231	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""OBMC is only supported with H263(+)\\n"" )"	301:8:6157:6225	102247	0	True				
ANR	103232	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""OBMC is only supported with H263(+)\\n"" )"		102247	0					
ANR	103233	Callee	av_log		102247	0					
ANR	103234	Identifier	av_log		102247	0					
ANR	103235	ArgumentList	avctx		102247	1					
ANR	103236	Argument	avctx		102247	0					
ANR	103237	Identifier	avctx		102247	0					
ANR	103238	Argument	AV_LOG_ERROR		102247	1					
ANR	103239	Identifier	AV_LOG_ERROR		102247	0					
ANR	103240	Argument	"""OBMC is only supported with H263(+)\\n"""		102247	2					
ANR	103241	PrimaryExpression	"""OBMC is only supported with H263(+)\\n"""		102247	0					
ANR	103242	ReturnStatement	return - 1 ;	303:8:6236:6245	102247	1	True				
ANR	103243	UnaryOperationExpression	- 1		102247	0					
ANR	103244	UnaryOperator	-		102247	0					
ANR	103245	PrimaryExpression	1		102247	1					
ANR	103246	IfStatement	if ( s -> quarter_sample && s -> codec_id != CODEC_ID_MPEG4 )		102247	99					
ANR	103247	Condition	s -> quarter_sample && s -> codec_id != CODEC_ID_MPEG4	309:7:6264:6313	102247	0	True				
ANR	103248	AndExpression	s -> quarter_sample && s -> codec_id != CODEC_ID_MPEG4		102247	0		&&			
ANR	103249	PtrMemberAccess	s -> quarter_sample		102247	0					
ANR	103250	Identifier	s		102247	0					
ANR	103251	Identifier	quarter_sample		102247	1					
ANR	103252	EqualityExpression	s -> codec_id != CODEC_ID_MPEG4		102247	1		!=			
ANR	103253	PtrMemberAccess	s -> codec_id		102247	0					
ANR	103254	Identifier	s		102247	0					
ANR	103255	Identifier	codec_id		102247	1					
ANR	103256	Identifier	CODEC_ID_MPEG4		102247	1					
ANR	103257	CompoundStatement		307:58:6262:6262	102247	1					
ANR	103258	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""qpel not supported by codec\\n"" )"	311:8:6326:6386	102247	0	True				
ANR	103259	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""qpel not supported by codec\\n"" )"		102247	0					
ANR	103260	Callee	av_log		102247	0					
ANR	103261	Identifier	av_log		102247	0					
ANR	103262	ArgumentList	avctx		102247	1					
ANR	103263	Argument	avctx		102247	0					
ANR	103264	Identifier	avctx		102247	0					
ANR	103265	Argument	AV_LOG_ERROR		102247	1					
ANR	103266	Identifier	AV_LOG_ERROR		102247	0					
ANR	103267	Argument	"""qpel not supported by codec\\n"""		102247	2					
ANR	103268	PrimaryExpression	"""qpel not supported by codec\\n"""		102247	0					
ANR	103269	ReturnStatement	return - 1 ;	313:8:6397:6406	102247	1	True				
ANR	103270	UnaryOperationExpression	- 1		102247	0					
ANR	103271	UnaryOperator	-		102247	0					
ANR	103272	PrimaryExpression	1		102247	1					
ANR	103273	IfStatement	if ( s -> data_partitioning && s -> codec_id != CODEC_ID_MPEG4 )		102247	100					
ANR	103274	Condition	s -> data_partitioning && s -> codec_id != CODEC_ID_MPEG4	319:7:6425:6477	102247	0	True				
ANR	103275	AndExpression	s -> data_partitioning && s -> codec_id != CODEC_ID_MPEG4		102247	0		&&			
ANR	103276	PtrMemberAccess	s -> data_partitioning		102247	0					
ANR	103277	Identifier	s		102247	0					
ANR	103278	Identifier	data_partitioning		102247	1					
ANR	103279	EqualityExpression	s -> codec_id != CODEC_ID_MPEG4		102247	1		!=			
ANR	103280	PtrMemberAccess	s -> codec_id		102247	0					
ANR	103281	Identifier	s		102247	0					
ANR	103282	Identifier	codec_id		102247	1					
ANR	103283	Identifier	CODEC_ID_MPEG4		102247	1					
ANR	103284	CompoundStatement		317:61:6426:6426	102247	1					
ANR	103285	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""data partitioning not supported by codec\\n"" )"	321:8:6490:6563	102247	0	True				
ANR	103286	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""data partitioning not supported by codec\\n"" )"		102247	0					
ANR	103287	Callee	av_log		102247	0					
ANR	103288	Identifier	av_log		102247	0					
ANR	103289	ArgumentList	avctx		102247	1					
ANR	103290	Argument	avctx		102247	0					
ANR	103291	Identifier	avctx		102247	0					
ANR	103292	Argument	AV_LOG_ERROR		102247	1					
ANR	103293	Identifier	AV_LOG_ERROR		102247	0					
ANR	103294	Argument	"""data partitioning not supported by codec\\n"""		102247	2					
ANR	103295	PrimaryExpression	"""data partitioning not supported by codec\\n"""		102247	0					
ANR	103296	ReturnStatement	return - 1 ;	323:8:6574:6583	102247	1	True				
ANR	103297	UnaryOperationExpression	- 1		102247	0					
ANR	103298	UnaryOperator	-		102247	0					
ANR	103299	PrimaryExpression	1		102247	1					
ANR	103300	IfStatement	if ( s -> max_b_frames && s -> codec_id != CODEC_ID_MPEG4 && s -> codec_id != CODEC_ID_MPEG1VIDEO && s -> codec_id != CODEC_ID_MPEG2VIDEO )		102247	101					
ANR	103301	Condition	s -> max_b_frames && s -> codec_id != CODEC_ID_MPEG4 && s -> codec_id != CODEC_ID_MPEG1VIDEO && s -> codec_id != CODEC_ID_MPEG2VIDEO	329:7:6602:6725	102247	0	True				
ANR	103302	AndExpression	s -> max_b_frames && s -> codec_id != CODEC_ID_MPEG4 && s -> codec_id != CODEC_ID_MPEG1VIDEO && s -> codec_id != CODEC_ID_MPEG2VIDEO		102247	0		&&			
ANR	103303	PtrMemberAccess	s -> max_b_frames		102247	0					
ANR	103304	Identifier	s		102247	0					
ANR	103305	Identifier	max_b_frames		102247	1					
ANR	103306	AndExpression	s -> codec_id != CODEC_ID_MPEG4 && s -> codec_id != CODEC_ID_MPEG1VIDEO && s -> codec_id != CODEC_ID_MPEG2VIDEO		102247	1		&&			
ANR	103307	EqualityExpression	s -> codec_id != CODEC_ID_MPEG4		102247	0		!=			
ANR	103308	PtrMemberAccess	s -> codec_id		102247	0					
ANR	103309	Identifier	s		102247	0					
ANR	103310	Identifier	codec_id		102247	1					
ANR	103311	Identifier	CODEC_ID_MPEG4		102247	1					
ANR	103312	AndExpression	s -> codec_id != CODEC_ID_MPEG1VIDEO && s -> codec_id != CODEC_ID_MPEG2VIDEO		102247	1		&&			
ANR	103313	EqualityExpression	s -> codec_id != CODEC_ID_MPEG1VIDEO		102247	0		!=			
ANR	103314	PtrMemberAccess	s -> codec_id		102247	0					
ANR	103315	Identifier	s		102247	0					
ANR	103316	Identifier	codec_id		102247	1					
ANR	103317	Identifier	CODEC_ID_MPEG1VIDEO		102247	1					
ANR	103318	EqualityExpression	s -> codec_id != CODEC_ID_MPEG2VIDEO		102247	1		!=			
ANR	103319	PtrMemberAccess	s -> codec_id		102247	0					
ANR	103320	Identifier	s		102247	0					
ANR	103321	Identifier	codec_id		102247	1					
ANR	103322	Identifier	CODEC_ID_MPEG2VIDEO		102247	1					
ANR	103323	CompoundStatement		327:132:6674:6674	102247	1					
ANR	103324	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""b frames not supported by codec\\n"" )"	331:8:6738:6802	102247	0	True				
ANR	103325	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""b frames not supported by codec\\n"" )"		102247	0					
ANR	103326	Callee	av_log		102247	0					
ANR	103327	Identifier	av_log		102247	0					
ANR	103328	ArgumentList	avctx		102247	1					
ANR	103329	Argument	avctx		102247	0					
ANR	103330	Identifier	avctx		102247	0					
ANR	103331	Argument	AV_LOG_ERROR		102247	1					
ANR	103332	Identifier	AV_LOG_ERROR		102247	0					
ANR	103333	Argument	"""b frames not supported by codec\\n"""		102247	2					
ANR	103334	PrimaryExpression	"""b frames not supported by codec\\n"""		102247	0					
ANR	103335	ReturnStatement	return - 1 ;	333:8:6813:6822	102247	1	True				
ANR	103336	UnaryOperationExpression	- 1		102247	0					
ANR	103337	UnaryOperator	-		102247	0					
ANR	103338	PrimaryExpression	1		102247	1					
ANR	103339	IfStatement	if ( ( s -> codec_id == CODEC_ID_MPEG4 || s -> codec_id == CODEC_ID_H263 || s -> codec_id == CODEC_ID_H263P ) && ( avctx -> sample_aspect_ratio . num > 255 || avctx -> sample_aspect_ratio . den > 255 ) )		102247	102					
ANR	103340	Condition	( s -> codec_id == CODEC_ID_MPEG4 || s -> codec_id == CODEC_ID_H263 || s -> codec_id == CODEC_ID_H263P ) && ( avctx -> sample_aspect_ratio . num > 255 || avctx -> sample_aspect_ratio . den > 255 )	339:8:6842:7038	102247	0	True				
ANR	103341	AndExpression	( s -> codec_id == CODEC_ID_MPEG4 || s -> codec_id == CODEC_ID_H263 || s -> codec_id == CODEC_ID_H263P ) && ( avctx -> sample_aspect_ratio . num > 255 || avctx -> sample_aspect_ratio . den > 255 )		102247	0		&&			
ANR	103342	OrExpression	s -> codec_id == CODEC_ID_MPEG4 || s -> codec_id == CODEC_ID_H263 || s -> codec_id == CODEC_ID_H263P		102247	0		||			
ANR	103343	EqualityExpression	s -> codec_id == CODEC_ID_MPEG4		102247	0		==			
ANR	103344	PtrMemberAccess	s -> codec_id		102247	0					
ANR	103345	Identifier	s		102247	0					
ANR	103346	Identifier	codec_id		102247	1					
ANR	103347	Identifier	CODEC_ID_MPEG4		102247	1					
ANR	103348	OrExpression	s -> codec_id == CODEC_ID_H263 || s -> codec_id == CODEC_ID_H263P		102247	1		||			
ANR	103349	EqualityExpression	s -> codec_id == CODEC_ID_H263		102247	0		==			
ANR	103350	PtrMemberAccess	s -> codec_id		102247	0					
ANR	103351	Identifier	s		102247	0					
ANR	103352	Identifier	codec_id		102247	1					
ANR	103353	Identifier	CODEC_ID_H263		102247	1					
ANR	103354	EqualityExpression	s -> codec_id == CODEC_ID_H263P		102247	1		==			
ANR	103355	PtrMemberAccess	s -> codec_id		102247	0					
ANR	103356	Identifier	s		102247	0					
ANR	103357	Identifier	codec_id		102247	1					
ANR	103358	Identifier	CODEC_ID_H263P		102247	1					
ANR	103359	OrExpression	avctx -> sample_aspect_ratio . num > 255 || avctx -> sample_aspect_ratio . den > 255		102247	1		||			
ANR	103360	RelationalExpression	avctx -> sample_aspect_ratio . num > 255		102247	0		>			
ANR	103361	MemberAccess	avctx -> sample_aspect_ratio . num		102247	0					
ANR	103362	PtrMemberAccess	avctx -> sample_aspect_ratio		102247	0					
ANR	103363	Identifier	avctx		102247	0					
ANR	103364	Identifier	sample_aspect_ratio		102247	1					
ANR	103365	Identifier	num		102247	1					
ANR	103366	PrimaryExpression	255		102247	1					
ANR	103367	RelationalExpression	avctx -> sample_aspect_ratio . den > 255		102247	1		>			
ANR	103368	MemberAccess	avctx -> sample_aspect_ratio . den		102247	0					
ANR	103369	PtrMemberAccess	avctx -> sample_aspect_ratio		102247	0					
ANR	103370	Identifier	avctx		102247	0					
ANR	103371	Identifier	sample_aspect_ratio		102247	1					
ANR	103372	Identifier	den		102247	1					
ANR	103373	PrimaryExpression	255		102247	1					
ANR	103374	CompoundStatement		341:88:6988:6988	102247	1					
ANR	103375	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Invalid pixel aspect ratio %i/%i, limit is 255/255\\n"" , avctx -> sample_aspect_ratio . num , avctx -> sample_aspect_ratio . den )"	345:8:7052:7215	102247	0	True				
ANR	103376	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Invalid pixel aspect ratio %i/%i, limit is 255/255\\n"" , avctx -> sample_aspect_ratio . num , avctx -> sample_aspect_ratio . den )"		102247	0					
ANR	103377	Callee	av_log		102247	0					
ANR	103378	Identifier	av_log		102247	0					
ANR	103379	ArgumentList	avctx		102247	1					
ANR	103380	Argument	avctx		102247	0					
ANR	103381	Identifier	avctx		102247	0					
ANR	103382	Argument	AV_LOG_ERROR		102247	1					
ANR	103383	Identifier	AV_LOG_ERROR		102247	0					
ANR	103384	Argument	"""Invalid pixel aspect ratio %i/%i, limit is 255/255\\n"""		102247	2					
ANR	103385	PrimaryExpression	"""Invalid pixel aspect ratio %i/%i, limit is 255/255\\n"""		102247	0					
ANR	103386	Argument	avctx -> sample_aspect_ratio . num		102247	3					
ANR	103387	MemberAccess	avctx -> sample_aspect_ratio . num		102247	0					
ANR	103388	PtrMemberAccess	avctx -> sample_aspect_ratio		102247	0					
ANR	103389	Identifier	avctx		102247	0					
ANR	103390	Identifier	sample_aspect_ratio		102247	1					
ANR	103391	Identifier	num		102247	1					
ANR	103392	Argument	avctx -> sample_aspect_ratio . den		102247	4					
ANR	103393	MemberAccess	avctx -> sample_aspect_ratio . den		102247	0					
ANR	103394	PtrMemberAccess	avctx -> sample_aspect_ratio		102247	0					
ANR	103395	Identifier	avctx		102247	0					
ANR	103396	Identifier	sample_aspect_ratio		102247	1					
ANR	103397	Identifier	den		102247	1					
ANR	103398	ReturnStatement	return - 1 ;	349:8:7226:7235	102247	1	True				
ANR	103399	UnaryOperationExpression	- 1		102247	0					
ANR	103400	UnaryOperator	-		102247	0					
ANR	103401	PrimaryExpression	1		102247	1					
ANR	103402	IfStatement	if ( ( s -> flags & ( CODEC_FLAG_INTERLACED_DCT | CODEC_FLAG_INTERLACED_ME | CODEC_FLAG_ALT_SCAN ) ) && s -> codec_id != CODEC_ID_MPEG4 && s -> codec_id != CODEC_ID_MPEG2VIDEO )		102247	103					
ANR	103403	Condition	( s -> flags & ( CODEC_FLAG_INTERLACED_DCT | CODEC_FLAG_INTERLACED_ME | CODEC_FLAG_ALT_SCAN ) ) && s -> codec_id != CODEC_ID_MPEG4 && s -> codec_id != CODEC_ID_MPEG2VIDEO	355:7:7254:7417	102247	0	True				
ANR	103404	AndExpression	( s -> flags & ( CODEC_FLAG_INTERLACED_DCT | CODEC_FLAG_INTERLACED_ME | CODEC_FLAG_ALT_SCAN ) ) && s -> codec_id != CODEC_ID_MPEG4 && s -> codec_id != CODEC_ID_MPEG2VIDEO		102247	0		&&			
ANR	103405	BitAndExpression	s -> flags & ( CODEC_FLAG_INTERLACED_DCT | CODEC_FLAG_INTERLACED_ME | CODEC_FLAG_ALT_SCAN )		102247	0		&			
ANR	103406	PtrMemberAccess	s -> flags		102247	0					
ANR	103407	Identifier	s		102247	0					
ANR	103408	Identifier	flags		102247	1					
ANR	103409	InclusiveOrExpression	CODEC_FLAG_INTERLACED_DCT | CODEC_FLAG_INTERLACED_ME | CODEC_FLAG_ALT_SCAN		102247	1		|			
ANR	103410	Identifier	CODEC_FLAG_INTERLACED_DCT		102247	0					
ANR	103411	InclusiveOrExpression	CODEC_FLAG_INTERLACED_ME | CODEC_FLAG_ALT_SCAN		102247	1		|			
ANR	103412	Identifier	CODEC_FLAG_INTERLACED_ME		102247	0					
ANR	103413	Identifier	CODEC_FLAG_ALT_SCAN		102247	1					
ANR	103414	AndExpression	s -> codec_id != CODEC_ID_MPEG4 && s -> codec_id != CODEC_ID_MPEG2VIDEO		102247	1		&&			
ANR	103415	EqualityExpression	s -> codec_id != CODEC_ID_MPEG4		102247	0		!=			
ANR	103416	PtrMemberAccess	s -> codec_id		102247	0					
ANR	103417	Identifier	s		102247	0					
ANR	103418	Identifier	codec_id		102247	1					
ANR	103419	Identifier	CODEC_ID_MPEG4		102247	1					
ANR	103420	EqualityExpression	s -> codec_id != CODEC_ID_MPEG2VIDEO		102247	1		!=			
ANR	103421	PtrMemberAccess	s -> codec_id		102247	0					
ANR	103422	Identifier	s		102247	0					
ANR	103423	Identifier	codec_id		102247	1					
ANR	103424	Identifier	CODEC_ID_MPEG2VIDEO		102247	1					
ANR	103425	CompoundStatement		355:78:7366:7366	102247	1					
ANR	103426	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""interlacing not supported by codec\\n"" )"	359:8:7430:7497	102247	0	True				
ANR	103427	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""interlacing not supported by codec\\n"" )"		102247	0					
ANR	103428	Callee	av_log		102247	0					
ANR	103429	Identifier	av_log		102247	0					
ANR	103430	ArgumentList	avctx		102247	1					
ANR	103431	Argument	avctx		102247	0					
ANR	103432	Identifier	avctx		102247	0					
ANR	103433	Argument	AV_LOG_ERROR		102247	1					
ANR	103434	Identifier	AV_LOG_ERROR		102247	0					
ANR	103435	Argument	"""interlacing not supported by codec\\n"""		102247	2					
ANR	103436	PrimaryExpression	"""interlacing not supported by codec\\n"""		102247	0					
ANR	103437	ReturnStatement	return - 1 ;	361:8:7508:7517	102247	1	True				
ANR	103438	UnaryOperationExpression	- 1		102247	0					
ANR	103439	UnaryOperator	-		102247	0					
ANR	103440	PrimaryExpression	1		102247	1					
ANR	103441	IfStatement	if ( s -> mpeg_quant && s -> codec_id != CODEC_ID_MPEG4 )		102247	104					
ANR	103442	Condition	s -> mpeg_quant && s -> codec_id != CODEC_ID_MPEG4	367:7:7536:7581	102247	0	True				
ANR	103443	AndExpression	s -> mpeg_quant && s -> codec_id != CODEC_ID_MPEG4		102247	0		&&			
ANR	103444	PtrMemberAccess	s -> mpeg_quant		102247	0					
ANR	103445	Identifier	s		102247	0					
ANR	103446	Identifier	mpeg_quant		102247	1					
ANR	103447	EqualityExpression	s -> codec_id != CODEC_ID_MPEG4		102247	1		!=			
ANR	103448	PtrMemberAccess	s -> codec_id		102247	0					
ANR	103449	Identifier	s		102247	0					
ANR	103450	Identifier	codec_id		102247	1					
ANR	103451	Identifier	CODEC_ID_MPEG4		102247	1					
ANR	103452	CompoundStatement		365:54:7530:7530	102247	1					
ANR	103453	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""mpeg2 style quantization not supported by codec\\n"" )"	369:8:7622:7702	102247	0	True				
ANR	103454	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""mpeg2 style quantization not supported by codec\\n"" )"		102247	0					
ANR	103455	Callee	av_log		102247	0					
ANR	103456	Identifier	av_log		102247	0					
ANR	103457	ArgumentList	avctx		102247	1					
ANR	103458	Argument	avctx		102247	0					
ANR	103459	Identifier	avctx		102247	0					
ANR	103460	Argument	AV_LOG_ERROR		102247	1					
ANR	103461	Identifier	AV_LOG_ERROR		102247	0					
ANR	103462	Argument	"""mpeg2 style quantization not supported by codec\\n"""		102247	2					
ANR	103463	PrimaryExpression	"""mpeg2 style quantization not supported by codec\\n"""		102247	0					
ANR	103464	ReturnStatement	return - 1 ;	371:8:7713:7722	102247	1	True				
ANR	103465	UnaryOperationExpression	- 1		102247	0					
ANR	103466	UnaryOperator	-		102247	0					
ANR	103467	PrimaryExpression	1		102247	1					
ANR	103468	IfStatement	if ( ( s -> flags & CODEC_FLAG_CBP_RD ) && ! avctx -> trellis )		102247	105					
ANR	103469	Condition	( s -> flags & CODEC_FLAG_CBP_RD ) && ! avctx -> trellis	377:7:7741:7789	102247	0	True				
ANR	103470	AndExpression	( s -> flags & CODEC_FLAG_CBP_RD ) && ! avctx -> trellis		102247	0		&&			
ANR	103471	BitAndExpression	s -> flags & CODEC_FLAG_CBP_RD		102247	0		&			
ANR	103472	PtrMemberAccess	s -> flags		102247	0					
ANR	103473	Identifier	s		102247	0					
ANR	103474	Identifier	flags		102247	1					
ANR	103475	Identifier	CODEC_FLAG_CBP_RD		102247	1					
ANR	103476	UnaryOperationExpression	! avctx -> trellis		102247	1					
ANR	103477	UnaryOperator	!		102247	0					
ANR	103478	PtrMemberAccess	avctx -> trellis		102247	1					
ANR	103479	Identifier	avctx		102247	0					
ANR	103480	Identifier	trellis		102247	1					
ANR	103481	CompoundStatement		375:57:7738:7738	102247	1					
ANR	103482	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""CBP RD needs trellis quant\\n"" )"	379:8:7802:7861	102247	0	True				
ANR	103483	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""CBP RD needs trellis quant\\n"" )"		102247	0					
ANR	103484	Callee	av_log		102247	0					
ANR	103485	Identifier	av_log		102247	0					
ANR	103486	ArgumentList	avctx		102247	1					
ANR	103487	Argument	avctx		102247	0					
ANR	103488	Identifier	avctx		102247	0					
ANR	103489	Argument	AV_LOG_ERROR		102247	1					
ANR	103490	Identifier	AV_LOG_ERROR		102247	0					
ANR	103491	Argument	"""CBP RD needs trellis quant\\n"""		102247	2					
ANR	103492	PrimaryExpression	"""CBP RD needs trellis quant\\n"""		102247	0					
ANR	103493	ReturnStatement	return - 1 ;	381:8:7872:7881	102247	1	True				
ANR	103494	UnaryOperationExpression	- 1		102247	0					
ANR	103495	UnaryOperator	-		102247	0					
ANR	103496	PrimaryExpression	1		102247	1					
ANR	103497	IfStatement	if ( ( s -> flags & CODEC_FLAG_QP_RD ) && s -> avctx -> mb_decision != FF_MB_DECISION_RD )		102247	106					
ANR	103498	Condition	( s -> flags & CODEC_FLAG_QP_RD ) && s -> avctx -> mb_decision != FF_MB_DECISION_RD	387:7:7900:7974	102247	0	True				
ANR	103499	AndExpression	( s -> flags & CODEC_FLAG_QP_RD ) && s -> avctx -> mb_decision != FF_MB_DECISION_RD		102247	0		&&			
ANR	103500	BitAndExpression	s -> flags & CODEC_FLAG_QP_RD		102247	0		&			
ANR	103501	PtrMemberAccess	s -> flags		102247	0					
ANR	103502	Identifier	s		102247	0					
ANR	103503	Identifier	flags		102247	1					
ANR	103504	Identifier	CODEC_FLAG_QP_RD		102247	1					
ANR	103505	EqualityExpression	s -> avctx -> mb_decision != FF_MB_DECISION_RD		102247	1		!=			
ANR	103506	PtrMemberAccess	s -> avctx -> mb_decision		102247	0					
ANR	103507	PtrMemberAccess	s -> avctx		102247	0					
ANR	103508	Identifier	s		102247	0					
ANR	103509	Identifier	avctx		102247	1					
ANR	103510	Identifier	mb_decision		102247	1					
ANR	103511	Identifier	FF_MB_DECISION_RD		102247	1					
ANR	103512	CompoundStatement		385:83:7923:7923	102247	1					
ANR	103513	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""QP RD needs mbd=2\\n"" )"	389:8:7987:8037	102247	0	True				
ANR	103514	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""QP RD needs mbd=2\\n"" )"		102247	0					
ANR	103515	Callee	av_log		102247	0					
ANR	103516	Identifier	av_log		102247	0					
ANR	103517	ArgumentList	avctx		102247	1					
ANR	103518	Argument	avctx		102247	0					
ANR	103519	Identifier	avctx		102247	0					
ANR	103520	Argument	AV_LOG_ERROR		102247	1					
ANR	103521	Identifier	AV_LOG_ERROR		102247	0					
ANR	103522	Argument	"""QP RD needs mbd=2\\n"""		102247	2					
ANR	103523	PrimaryExpression	"""QP RD needs mbd=2\\n"""		102247	0					
ANR	103524	ReturnStatement	return - 1 ;	391:8:8048:8057	102247	1	True				
ANR	103525	UnaryOperationExpression	- 1		102247	0					
ANR	103526	UnaryOperator	-		102247	0					
ANR	103527	PrimaryExpression	1		102247	1					
ANR	103528	IfStatement	if ( s -> avctx -> scenechange_threshold < 1000000000 && ( s -> flags & CODEC_FLAG_CLOSED_GOP ) )		102247	107					
ANR	103529	Condition	s -> avctx -> scenechange_threshold < 1000000000 && ( s -> flags & CODEC_FLAG_CLOSED_GOP )	397:7:8076:8157	102247	0	True				
ANR	103530	AndExpression	s -> avctx -> scenechange_threshold < 1000000000 && ( s -> flags & CODEC_FLAG_CLOSED_GOP )		102247	0		&&			
ANR	103531	RelationalExpression	s -> avctx -> scenechange_threshold < 1000000000		102247	0		<			
ANR	103532	PtrMemberAccess	s -> avctx -> scenechange_threshold		102247	0					
ANR	103533	PtrMemberAccess	s -> avctx		102247	0					
ANR	103534	Identifier	s		102247	0					
ANR	103535	Identifier	avctx		102247	1					
ANR	103536	Identifier	scenechange_threshold		102247	1					
ANR	103537	PrimaryExpression	1000000000		102247	1					
ANR	103538	BitAndExpression	s -> flags & CODEC_FLAG_CLOSED_GOP		102247	1		&			
ANR	103539	PtrMemberAccess	s -> flags		102247	0					
ANR	103540	Identifier	s		102247	0					
ANR	103541	Identifier	flags		102247	1					
ANR	103542	Identifier	CODEC_FLAG_CLOSED_GOP		102247	1					
ANR	103543	CompoundStatement		395:90:8106:8106	102247	1					
ANR	103544	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""closed gop with scene change detection are not supported yet, set threshold to 1000000000\\n"" )"	399:8:8170:8292	102247	0	True				
ANR	103545	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""closed gop with scene change detection are not supported yet, set threshold to 1000000000\\n"" )"		102247	0					
ANR	103546	Callee	av_log		102247	0					
ANR	103547	Identifier	av_log		102247	0					
ANR	103548	ArgumentList	avctx		102247	1					
ANR	103549	Argument	avctx		102247	0					
ANR	103550	Identifier	avctx		102247	0					
ANR	103551	Argument	AV_LOG_ERROR		102247	1					
ANR	103552	Identifier	AV_LOG_ERROR		102247	0					
ANR	103553	Argument	"""closed gop with scene change detection are not supported yet, set threshold to 1000000000\\n"""		102247	2					
ANR	103554	PrimaryExpression	"""closed gop with scene change detection are not supported yet, set threshold to 1000000000\\n"""		102247	0					
ANR	103555	ReturnStatement	return - 1 ;	401:8:8303:8312	102247	1	True				
ANR	103556	UnaryOperationExpression	- 1		102247	0					
ANR	103557	UnaryOperator	-		102247	0					
ANR	103558	PrimaryExpression	1		102247	1					
ANR	103559	IfStatement	if ( ( s -> flags2 & CODEC_FLAG2_INTRA_VLC ) && s -> codec_id != CODEC_ID_MPEG2VIDEO )		102247	108					
ANR	103560	Condition	( s -> flags2 & CODEC_FLAG2_INTRA_VLC ) && s -> codec_id != CODEC_ID_MPEG2VIDEO	407:7:8331:8403	102247	0	True				
ANR	103561	AndExpression	( s -> flags2 & CODEC_FLAG2_INTRA_VLC ) && s -> codec_id != CODEC_ID_MPEG2VIDEO		102247	0		&&			
ANR	103562	BitAndExpression	s -> flags2 & CODEC_FLAG2_INTRA_VLC		102247	0		&			
ANR	103563	PtrMemberAccess	s -> flags2		102247	0					
ANR	103564	Identifier	s		102247	0					
ANR	103565	Identifier	flags2		102247	1					
ANR	103566	Identifier	CODEC_FLAG2_INTRA_VLC		102247	1					
ANR	103567	EqualityExpression	s -> codec_id != CODEC_ID_MPEG2VIDEO		102247	1		!=			
ANR	103568	PtrMemberAccess	s -> codec_id		102247	0					
ANR	103569	Identifier	s		102247	0					
ANR	103570	Identifier	codec_id		102247	1					
ANR	103571	Identifier	CODEC_ID_MPEG2VIDEO		102247	1					
ANR	103572	CompoundStatement		405:81:8352:8352	102247	1					
ANR	103573	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""intra vlc table not supported by codec\\n"" )"	409:8:8416:8487	102247	0	True				
ANR	103574	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""intra vlc table not supported by codec\\n"" )"		102247	0					
ANR	103575	Callee	av_log		102247	0					
ANR	103576	Identifier	av_log		102247	0					
ANR	103577	ArgumentList	avctx		102247	1					
ANR	103578	Argument	avctx		102247	0					
ANR	103579	Identifier	avctx		102247	0					
ANR	103580	Argument	AV_LOG_ERROR		102247	1					
ANR	103581	Identifier	AV_LOG_ERROR		102247	0					
ANR	103582	Argument	"""intra vlc table not supported by codec\\n"""		102247	2					
ANR	103583	PrimaryExpression	"""intra vlc table not supported by codec\\n"""		102247	0					
ANR	103584	ReturnStatement	return - 1 ;	411:8:8498:8507	102247	1	True				
ANR	103585	UnaryOperationExpression	- 1		102247	0					
ANR	103586	UnaryOperator	-		102247	0					
ANR	103587	PrimaryExpression	1		102247	1					
ANR	103588	IfStatement	if ( s -> flags & CODEC_FLAG_LOW_DELAY )		102247	109					
ANR	103589	Condition	s -> flags & CODEC_FLAG_LOW_DELAY	417:7:8526:8556	102247	0	True				
ANR	103590	BitAndExpression	s -> flags & CODEC_FLAG_LOW_DELAY		102247	0		&			
ANR	103591	PtrMemberAccess	s -> flags		102247	0					
ANR	103592	Identifier	s		102247	0					
ANR	103593	Identifier	flags		102247	1					
ANR	103594	Identifier	CODEC_FLAG_LOW_DELAY		102247	1					
ANR	103595	CompoundStatement		415:39:8505:8505	102247	1					
ANR	103596	IfStatement	if ( s -> codec_id != CODEC_ID_MPEG2VIDEO )		102247	0					
ANR	103597	Condition	s -> codec_id != CODEC_ID_MPEG2VIDEO	419:12:8573:8606	102247	0	True				
ANR	103598	EqualityExpression	s -> codec_id != CODEC_ID_MPEG2VIDEO		102247	0		!=			
ANR	103599	PtrMemberAccess	s -> codec_id		102247	0					
ANR	103600	Identifier	s		102247	0					
ANR	103601	Identifier	codec_id		102247	1					
ANR	103602	Identifier	CODEC_ID_MPEG2VIDEO		102247	1					
ANR	103603	CompoundStatement		417:47:8555:8555	102247	1					
ANR	103604	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""low delay forcing is only available for mpeg2\\n"" )"	421:12:8623:8701	102247	0	True				
ANR	103605	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""low delay forcing is only available for mpeg2\\n"" )"		102247	0					
ANR	103606	Callee	av_log		102247	0					
ANR	103607	Identifier	av_log		102247	0					
ANR	103608	ArgumentList	avctx		102247	1					
ANR	103609	Argument	avctx		102247	0					
ANR	103610	Identifier	avctx		102247	0					
ANR	103611	Argument	AV_LOG_ERROR		102247	1					
ANR	103612	Identifier	AV_LOG_ERROR		102247	0					
ANR	103613	Argument	"""low delay forcing is only available for mpeg2\\n"""		102247	2					
ANR	103614	PrimaryExpression	"""low delay forcing is only available for mpeg2\\n"""		102247	0					
ANR	103615	ReturnStatement	return - 1 ;	423:12:8716:8725	102247	1	True				
ANR	103616	UnaryOperationExpression	- 1		102247	0					
ANR	103617	UnaryOperator	-		102247	0					
ANR	103618	PrimaryExpression	1		102247	1					
ANR	103619	IfStatement	if ( s -> max_b_frames != 0 )		102247	1					
ANR	103620	Condition	s -> max_b_frames != 0	427:12:8751:8770	102247	0	True				
ANR	103621	EqualityExpression	s -> max_b_frames != 0		102247	0		!=			
ANR	103622	PtrMemberAccess	s -> max_b_frames		102247	0					
ANR	103623	Identifier	s		102247	0					
ANR	103624	Identifier	max_b_frames		102247	1					
ANR	103625	PrimaryExpression	0		102247	1					
ANR	103626	CompoundStatement		425:33:8719:8719	102247	1					
ANR	103627	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""b frames cannot be used with low delay\\n"" )"	429:12:8787:8858	102247	0	True				
ANR	103628	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""b frames cannot be used with low delay\\n"" )"		102247	0					
ANR	103629	Callee	av_log		102247	0					
ANR	103630	Identifier	av_log		102247	0					
ANR	103631	ArgumentList	avctx		102247	1					
ANR	103632	Argument	avctx		102247	0					
ANR	103633	Identifier	avctx		102247	0					
ANR	103634	Argument	AV_LOG_ERROR		102247	1					
ANR	103635	Identifier	AV_LOG_ERROR		102247	0					
ANR	103636	Argument	"""b frames cannot be used with low delay\\n"""		102247	2					
ANR	103637	PrimaryExpression	"""b frames cannot be used with low delay\\n"""		102247	0					
ANR	103638	ReturnStatement	return - 1 ;	431:12:8873:8882	102247	1	True				
ANR	103639	UnaryOperationExpression	- 1		102247	0					
ANR	103640	UnaryOperator	-		102247	0					
ANR	103641	PrimaryExpression	1		102247	1					
ANR	103642	IfStatement	if ( s -> q_scale_type == 1 )		102247	110					
ANR	103643	Condition	s -> q_scale_type == 1	439:7:8912:8931	102247	0	True				
ANR	103644	EqualityExpression	s -> q_scale_type == 1		102247	0		==			
ANR	103645	PtrMemberAccess	s -> q_scale_type		102247	0					
ANR	103646	Identifier	s		102247	0					
ANR	103647	Identifier	q_scale_type		102247	1					
ANR	103648	PrimaryExpression	1		102247	1					
ANR	103649	CompoundStatement		437:28:8880:8880	102247	1					
ANR	103650	IfStatement	if ( s -> codec_id != CODEC_ID_MPEG2VIDEO )		102247	0					
ANR	103651	Condition	s -> codec_id != CODEC_ID_MPEG2VIDEO	441:11:8947:8980	102247	0	True				
ANR	103652	EqualityExpression	s -> codec_id != CODEC_ID_MPEG2VIDEO		102247	0		!=			
ANR	103653	PtrMemberAccess	s -> codec_id		102247	0					
ANR	103654	Identifier	s		102247	0					
ANR	103655	Identifier	codec_id		102247	1					
ANR	103656	Identifier	CODEC_ID_MPEG2VIDEO		102247	1					
ANR	103657	CompoundStatement		439:46:8929:8929	102247	1					
ANR	103658	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""non linear quant is only available for mpeg2\\n"" )"	443:12:8997:9074	102247	0	True				
ANR	103659	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""non linear quant is only available for mpeg2\\n"" )"		102247	0					
ANR	103660	Callee	av_log		102247	0					
ANR	103661	Identifier	av_log		102247	0					
ANR	103662	ArgumentList	avctx		102247	1					
ANR	103663	Argument	avctx		102247	0					
ANR	103664	Identifier	avctx		102247	0					
ANR	103665	Argument	AV_LOG_ERROR		102247	1					
ANR	103666	Identifier	AV_LOG_ERROR		102247	0					
ANR	103667	Argument	"""non linear quant is only available for mpeg2\\n"""		102247	2					
ANR	103668	PrimaryExpression	"""non linear quant is only available for mpeg2\\n"""		102247	0					
ANR	103669	ReturnStatement	return - 1 ;	445:12:9089:9098	102247	1	True				
ANR	103670	UnaryOperationExpression	- 1		102247	0					
ANR	103671	UnaryOperator	-		102247	0					
ANR	103672	PrimaryExpression	1		102247	1					
ANR	103673	IfStatement	if ( avctx -> qmax > 12 )		102247	1					
ANR	103674	Condition	avctx -> qmax > 12	449:11:9123:9138	102247	0	True				
ANR	103675	RelationalExpression	avctx -> qmax > 12		102247	0		>			
ANR	103676	PtrMemberAccess	avctx -> qmax		102247	0					
ANR	103677	Identifier	avctx		102247	0					
ANR	103678	Identifier	qmax		102247	1					
ANR	103679	PrimaryExpression	12		102247	1					
ANR	103680	CompoundStatement		447:28:9087:9087	102247	1					
ANR	103681	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""non linear quant only supports qmax <= 12 currently\\n"" )"	451:12:9155:9239	102247	0	True				
ANR	103682	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""non linear quant only supports qmax <= 12 currently\\n"" )"		102247	0					
ANR	103683	Callee	av_log		102247	0					
ANR	103684	Identifier	av_log		102247	0					
ANR	103685	ArgumentList	avctx		102247	1					
ANR	103686	Argument	avctx		102247	0					
ANR	103687	Identifier	avctx		102247	0					
ANR	103688	Argument	AV_LOG_ERROR		102247	1					
ANR	103689	Identifier	AV_LOG_ERROR		102247	0					
ANR	103690	Argument	"""non linear quant only supports qmax <= 12 currently\\n"""		102247	2					
ANR	103691	PrimaryExpression	"""non linear quant only supports qmax <= 12 currently\\n"""		102247	0					
ANR	103692	ReturnStatement	return - 1 ;	453:12:9254:9263	102247	1	True				
ANR	103693	UnaryOperationExpression	- 1		102247	0					
ANR	103694	UnaryOperator	-		102247	0					
ANR	103695	PrimaryExpression	1		102247	1					
ANR	103696	IfStatement	if ( s -> avctx -> thread_count > 1 && s -> codec_id != CODEC_ID_MPEG4 && s -> codec_id != CODEC_ID_MPEG1VIDEO && s -> codec_id != CODEC_ID_MPEG2VIDEO && ( s -> codec_id != CODEC_ID_H263P || ! ( s -> flags & CODEC_FLAG_H263P_SLICE_STRUCT ) ) )		102247	111					
ANR	103697	Condition	s -> avctx -> thread_count > 1 && s -> codec_id != CODEC_ID_MPEG4 && s -> codec_id != CODEC_ID_MPEG1VIDEO && s -> codec_id != CODEC_ID_MPEG2VIDEO && ( s -> codec_id != CODEC_ID_H263P || ! ( s -> flags & CODEC_FLAG_H263P_SLICE_STRUCT ) )	461:7:9293:9525	102247	0	True				
ANR	103698	AndExpression	s -> avctx -> thread_count > 1 && s -> codec_id != CODEC_ID_MPEG4 && s -> codec_id != CODEC_ID_MPEG1VIDEO && s -> codec_id != CODEC_ID_MPEG2VIDEO && ( s -> codec_id != CODEC_ID_H263P || ! ( s -> flags & CODEC_FLAG_H263P_SLICE_STRUCT ) )		102247	0		&&			
ANR	103699	RelationalExpression	s -> avctx -> thread_count > 1		102247	0		>			
ANR	103700	PtrMemberAccess	s -> avctx -> thread_count		102247	0					
ANR	103701	PtrMemberAccess	s -> avctx		102247	0					
ANR	103702	Identifier	s		102247	0					
ANR	103703	Identifier	avctx		102247	1					
ANR	103704	Identifier	thread_count		102247	1					
ANR	103705	PrimaryExpression	1		102247	1					
ANR	103706	AndExpression	s -> codec_id != CODEC_ID_MPEG4 && s -> codec_id != CODEC_ID_MPEG1VIDEO && s -> codec_id != CODEC_ID_MPEG2VIDEO && ( s -> codec_id != CODEC_ID_H263P || ! ( s -> flags & CODEC_FLAG_H263P_SLICE_STRUCT ) )		102247	1		&&			
ANR	103707	EqualityExpression	s -> codec_id != CODEC_ID_MPEG4		102247	0		!=			
ANR	103708	PtrMemberAccess	s -> codec_id		102247	0					
ANR	103709	Identifier	s		102247	0					
ANR	103710	Identifier	codec_id		102247	1					
ANR	103711	Identifier	CODEC_ID_MPEG4		102247	1					
ANR	103712	AndExpression	s -> codec_id != CODEC_ID_MPEG1VIDEO && s -> codec_id != CODEC_ID_MPEG2VIDEO && ( s -> codec_id != CODEC_ID_H263P || ! ( s -> flags & CODEC_FLAG_H263P_SLICE_STRUCT ) )		102247	1		&&			
ANR	103713	EqualityExpression	s -> codec_id != CODEC_ID_MPEG1VIDEO		102247	0		!=			
ANR	103714	PtrMemberAccess	s -> codec_id		102247	0					
ANR	103715	Identifier	s		102247	0					
ANR	103716	Identifier	codec_id		102247	1					
ANR	103717	Identifier	CODEC_ID_MPEG1VIDEO		102247	1					
ANR	103718	AndExpression	s -> codec_id != CODEC_ID_MPEG2VIDEO && ( s -> codec_id != CODEC_ID_H263P || ! ( s -> flags & CODEC_FLAG_H263P_SLICE_STRUCT ) )		102247	1		&&			
ANR	103719	EqualityExpression	s -> codec_id != CODEC_ID_MPEG2VIDEO		102247	0		!=			
ANR	103720	PtrMemberAccess	s -> codec_id		102247	0					
ANR	103721	Identifier	s		102247	0					
ANR	103722	Identifier	codec_id		102247	1					
ANR	103723	Identifier	CODEC_ID_MPEG2VIDEO		102247	1					
ANR	103724	OrExpression	s -> codec_id != CODEC_ID_H263P || ! ( s -> flags & CODEC_FLAG_H263P_SLICE_STRUCT )		102247	1		||			
ANR	103725	EqualityExpression	s -> codec_id != CODEC_ID_H263P		102247	0		!=			
ANR	103726	PtrMemberAccess	s -> codec_id		102247	0					
ANR	103727	Identifier	s		102247	0					
ANR	103728	Identifier	codec_id		102247	1					
ANR	103729	Identifier	CODEC_ID_H263P		102247	1					
ANR	103730	UnaryOperationExpression	! ( s -> flags & CODEC_FLAG_H263P_SLICE_STRUCT )		102247	1					
ANR	103731	UnaryOperator	!		102247	0					
ANR	103732	BitAndExpression	s -> flags & CODEC_FLAG_H263P_SLICE_STRUCT		102247	1		&			
ANR	103733	PtrMemberAccess	s -> flags		102247	0					
ANR	103734	Identifier	s		102247	0					
ANR	103735	Identifier	flags		102247	1					
ANR	103736	Identifier	CODEC_FLAG_H263P_SLICE_STRUCT		102247	1					
ANR	103737	CompoundStatement		463:89:9474:9474	102247	1					
ANR	103738	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""multi threaded encoding not supported by codec\\n"" )"	467:8:9538:9617	102247	0	True				
ANR	103739	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""multi threaded encoding not supported by codec\\n"" )"		102247	0					
ANR	103740	Callee	av_log		102247	0					
ANR	103741	Identifier	av_log		102247	0					
ANR	103742	ArgumentList	avctx		102247	1					
ANR	103743	Argument	avctx		102247	0					
ANR	103744	Identifier	avctx		102247	0					
ANR	103745	Argument	AV_LOG_ERROR		102247	1					
ANR	103746	Identifier	AV_LOG_ERROR		102247	0					
ANR	103747	Argument	"""multi threaded encoding not supported by codec\\n"""		102247	2					
ANR	103748	PrimaryExpression	"""multi threaded encoding not supported by codec\\n"""		102247	0					
ANR	103749	ReturnStatement	return - 1 ;	469:8:9628:9637	102247	1	True				
ANR	103750	UnaryOperationExpression	- 1		102247	0					
ANR	103751	UnaryOperator	-		102247	0					
ANR	103752	PrimaryExpression	1		102247	1					
ANR	103753	IfStatement	if ( s -> avctx -> thread_count < 1 )		102247	112					
ANR	103754	Condition	s -> avctx -> thread_count < 1	475:7:9656:9681	102247	0	True				
ANR	103755	RelationalExpression	s -> avctx -> thread_count < 1		102247	0		<			
ANR	103756	PtrMemberAccess	s -> avctx -> thread_count		102247	0					
ANR	103757	PtrMemberAccess	s -> avctx		102247	0					
ANR	103758	Identifier	s		102247	0					
ANR	103759	Identifier	avctx		102247	1					
ANR	103760	Identifier	thread_count		102247	1					
ANR	103761	PrimaryExpression	1		102247	1					
ANR	103762	CompoundStatement		473:34:9630:9630	102247	1					
ANR	103763	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""automatic thread number detection not supported by codec, patch welcome\\n"" )"	477:8:9694:9798	102247	0	True				
ANR	103764	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""automatic thread number detection not supported by codec, patch welcome\\n"" )"		102247	0					
ANR	103765	Callee	av_log		102247	0					
ANR	103766	Identifier	av_log		102247	0					
ANR	103767	ArgumentList	avctx		102247	1					
ANR	103768	Argument	avctx		102247	0					
ANR	103769	Identifier	avctx		102247	0					
ANR	103770	Argument	AV_LOG_ERROR		102247	1					
ANR	103771	Identifier	AV_LOG_ERROR		102247	0					
ANR	103772	Argument	"""automatic thread number detection not supported by codec, patch welcome\\n"""		102247	2					
ANR	103773	PrimaryExpression	"""automatic thread number detection not supported by codec, patch welcome\\n"""		102247	0					
ANR	103774	ReturnStatement	return - 1 ;	479:8:9809:9818	102247	1	True				
ANR	103775	UnaryOperationExpression	- 1		102247	0					
ANR	103776	UnaryOperator	-		102247	0					
ANR	103777	PrimaryExpression	1		102247	1					
ANR	103778	IfStatement	if ( s -> avctx -> thread_count > 1 )		102247	113					
ANR	103779	Condition	s -> avctx -> thread_count > 1	485:7:9837:9862	102247	0	True				
ANR	103780	RelationalExpression	s -> avctx -> thread_count > 1		102247	0		>			
ANR	103781	PtrMemberAccess	s -> avctx -> thread_count		102247	0					
ANR	103782	PtrMemberAccess	s -> avctx		102247	0					
ANR	103783	Identifier	s		102247	0					
ANR	103784	Identifier	avctx		102247	1					
ANR	103785	Identifier	thread_count		102247	1					
ANR	103786	PrimaryExpression	1		102247	1					
ANR	103787	ExpressionStatement	s -> rtp_mode = 1	487:8:9874:9888	102247	1	True				
ANR	103788	AssignmentExpression	s -> rtp_mode = 1		102247	0		=			
ANR	103789	PtrMemberAccess	s -> rtp_mode		102247	0					
ANR	103790	Identifier	s		102247	0					
ANR	103791	Identifier	rtp_mode		102247	1					
ANR	103792	PrimaryExpression	1		102247	1					
ANR	103793	IfStatement	if ( ! avctx -> time_base . den || ! avctx -> time_base . num )		102247	114					
ANR	103794	Condition	! avctx -> time_base . den || ! avctx -> time_base . num	491:7:9900:9945	102247	0	True				
ANR	103795	OrExpression	! avctx -> time_base . den || ! avctx -> time_base . num		102247	0		||			
ANR	103796	UnaryOperationExpression	! avctx -> time_base . den		102247	0					
ANR	103797	UnaryOperator	!		102247	0					
ANR	103798	MemberAccess	avctx -> time_base . den		102247	1					
ANR	103799	PtrMemberAccess	avctx -> time_base		102247	0					
ANR	103800	Identifier	avctx		102247	0					
ANR	103801	Identifier	time_base		102247	1					
ANR	103802	Identifier	den		102247	1					
ANR	103803	UnaryOperationExpression	! avctx -> time_base . num		102247	1					
ANR	103804	UnaryOperator	!		102247	0					
ANR	103805	MemberAccess	avctx -> time_base . num		102247	1					
ANR	103806	PtrMemberAccess	avctx -> time_base		102247	0					
ANR	103807	Identifier	avctx		102247	0					
ANR	103808	Identifier	time_base		102247	1					
ANR	103809	Identifier	num		102247	1					
ANR	103810	CompoundStatement		489:54:9894:9894	102247	1					
ANR	103811	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""framerate not set\\n"" )"	493:8:9958:10008	102247	0	True				
ANR	103812	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""framerate not set\\n"" )"		102247	0					
ANR	103813	Callee	av_log		102247	0					
ANR	103814	Identifier	av_log		102247	0					
ANR	103815	ArgumentList	avctx		102247	1					
ANR	103816	Argument	avctx		102247	0					
ANR	103817	Identifier	avctx		102247	0					
ANR	103818	Argument	AV_LOG_ERROR		102247	1					
ANR	103819	Identifier	AV_LOG_ERROR		102247	0					
ANR	103820	Argument	"""framerate not set\\n"""		102247	2					
ANR	103821	PrimaryExpression	"""framerate not set\\n"""		102247	0					
ANR	103822	ReturnStatement	return - 1 ;	495:8:10019:10028	102247	1	True				
ANR	103823	UnaryOperationExpression	- 1		102247	0					
ANR	103824	UnaryOperator	-		102247	0					
ANR	103825	PrimaryExpression	1		102247	1					
ANR	103826	ExpressionStatement	i = ( INT_MAX / 2 + 128 ) >> 8	501:4:10044:10065	102247	115	True				
ANR	103827	AssignmentExpression	i = ( INT_MAX / 2 + 128 ) >> 8		102247	0		=			
ANR	103828	Identifier	i		102247	0					
ANR	103829	ShiftExpression	( INT_MAX / 2 + 128 ) >> 8		102247	1		>>			
ANR	103830	AdditiveExpression	INT_MAX / 2 + 128		102247	0		+			
ANR	103831	MultiplicativeExpression	INT_MAX / 2		102247	0		/			
ANR	103832	Identifier	INT_MAX		102247	0					
ANR	103833	PrimaryExpression	2		102247	1					
ANR	103834	PrimaryExpression	128		102247	1					
ANR	103835	PrimaryExpression	8		102247	1					
ANR	103836	IfStatement	if ( avctx -> me_threshold >= i )		102247	116					
ANR	103837	Condition	avctx -> me_threshold >= i	503:7:10075:10098	102247	0	True				
ANR	103838	RelationalExpression	avctx -> me_threshold >= i		102247	0		>=			
ANR	103839	PtrMemberAccess	avctx -> me_threshold		102247	0					
ANR	103840	Identifier	avctx		102247	0					
ANR	103841	Identifier	me_threshold		102247	1					
ANR	103842	Identifier	i		102247	1					
ANR	103843	CompoundStatement		501:32:10047:10047	102247	1					
ANR	103844	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""me_threshold too large, max is %d\\n"" , i - 1 )"	505:8:10111:10184	102247	0	True				
ANR	103845	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""me_threshold too large, max is %d\\n"" , i - 1 )"		102247	0					
ANR	103846	Callee	av_log		102247	0					
ANR	103847	Identifier	av_log		102247	0					
ANR	103848	ArgumentList	avctx		102247	1					
ANR	103849	Argument	avctx		102247	0					
ANR	103850	Identifier	avctx		102247	0					
ANR	103851	Argument	AV_LOG_ERROR		102247	1					
ANR	103852	Identifier	AV_LOG_ERROR		102247	0					
ANR	103853	Argument	"""me_threshold too large, max is %d\\n"""		102247	2					
ANR	103854	PrimaryExpression	"""me_threshold too large, max is %d\\n"""		102247	0					
ANR	103855	Argument	i - 1		102247	3					
ANR	103856	AdditiveExpression	i - 1		102247	0		-			
ANR	103857	Identifier	i		102247	0					
ANR	103858	PrimaryExpression	1		102247	1					
ANR	103859	ReturnStatement	return - 1 ;	507:8:10195:10204	102247	1	True				
ANR	103860	UnaryOperationExpression	- 1		102247	0					
ANR	103861	UnaryOperator	-		102247	0					
ANR	103862	PrimaryExpression	1		102247	1					
ANR	103863	IfStatement	if ( avctx -> mb_threshold >= i )		102247	117					
ANR	103864	Condition	avctx -> mb_threshold >= i	511:7:10221:10244	102247	0	True				
ANR	103865	RelationalExpression	avctx -> mb_threshold >= i		102247	0		>=			
ANR	103866	PtrMemberAccess	avctx -> mb_threshold		102247	0					
ANR	103867	Identifier	avctx		102247	0					
ANR	103868	Identifier	mb_threshold		102247	1					
ANR	103869	Identifier	i		102247	1					
ANR	103870	CompoundStatement		509:32:10193:10193	102247	1					
ANR	103871	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""mb_threshold too large, max is %d\\n"" , i - 1 )"	513:8:10257:10330	102247	0	True				
ANR	103872	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""mb_threshold too large, max is %d\\n"" , i - 1 )"		102247	0					
ANR	103873	Callee	av_log		102247	0					
ANR	103874	Identifier	av_log		102247	0					
ANR	103875	ArgumentList	avctx		102247	1					
ANR	103876	Argument	avctx		102247	0					
ANR	103877	Identifier	avctx		102247	0					
ANR	103878	Argument	AV_LOG_ERROR		102247	1					
ANR	103879	Identifier	AV_LOG_ERROR		102247	0					
ANR	103880	Argument	"""mb_threshold too large, max is %d\\n"""		102247	2					
ANR	103881	PrimaryExpression	"""mb_threshold too large, max is %d\\n"""		102247	0					
ANR	103882	Argument	i - 1		102247	3					
ANR	103883	AdditiveExpression	i - 1		102247	0		-			
ANR	103884	Identifier	i		102247	0					
ANR	103885	PrimaryExpression	1		102247	1					
ANR	103886	ReturnStatement	return - 1 ;	515:8:10341:10350	102247	1	True				
ANR	103887	UnaryOperationExpression	- 1		102247	0					
ANR	103888	UnaryOperator	-		102247	0					
ANR	103889	PrimaryExpression	1		102247	1					
ANR	103890	IfStatement	if ( avctx -> b_frame_strategy && ( avctx -> flags & CODEC_FLAG_PASS2 ) )		102247	118					
ANR	103891	Condition	avctx -> b_frame_strategy && ( avctx -> flags & CODEC_FLAG_PASS2 )	521:7:10369:10426	102247	0	True				
ANR	103892	AndExpression	avctx -> b_frame_strategy && ( avctx -> flags & CODEC_FLAG_PASS2 )		102247	0		&&			
ANR	103893	PtrMemberAccess	avctx -> b_frame_strategy		102247	0					
ANR	103894	Identifier	avctx		102247	0					
ANR	103895	Identifier	b_frame_strategy		102247	1					
ANR	103896	BitAndExpression	avctx -> flags & CODEC_FLAG_PASS2		102247	1		&			
ANR	103897	PtrMemberAccess	avctx -> flags		102247	0					
ANR	103898	Identifier	avctx		102247	0					
ANR	103899	Identifier	flags		102247	1					
ANR	103900	Identifier	CODEC_FLAG_PASS2		102247	1					
ANR	103901	CompoundStatement		519:66:10375:10375	102247	1					
ANR	103902	ExpressionStatement	"av_log ( avctx , AV_LOG_INFO , ""notice: b_frame_strategy only affects the first pass\\n"" )"	523:8:10439:10523	102247	0	True				
ANR	103903	CallExpression	"av_log ( avctx , AV_LOG_INFO , ""notice: b_frame_strategy only affects the first pass\\n"" )"		102247	0					
ANR	103904	Callee	av_log		102247	0					
ANR	103905	Identifier	av_log		102247	0					
ANR	103906	ArgumentList	avctx		102247	1					
ANR	103907	Argument	avctx		102247	0					
ANR	103908	Identifier	avctx		102247	0					
ANR	103909	Argument	AV_LOG_INFO		102247	1					
ANR	103910	Identifier	AV_LOG_INFO		102247	0					
ANR	103911	Argument	"""notice: b_frame_strategy only affects the first pass\\n"""		102247	2					
ANR	103912	PrimaryExpression	"""notice: b_frame_strategy only affects the first pass\\n"""		102247	0					
ANR	103913	ExpressionStatement	avctx -> b_frame_strategy = 0	525:8:10534:10561	102247	1	True				
ANR	103914	AssignmentExpression	avctx -> b_frame_strategy = 0		102247	0		=			
ANR	103915	PtrMemberAccess	avctx -> b_frame_strategy		102247	0					
ANR	103916	Identifier	avctx		102247	0					
ANR	103917	Identifier	b_frame_strategy		102247	1					
ANR	103918	PrimaryExpression	0		102247	1					
ANR	103919	ExpressionStatement	"i = av_gcd ( avctx -> time_base . den , avctx -> time_base . num )"	531:4:10577:10630	102247	119	True				
ANR	103920	AssignmentExpression	"i = av_gcd ( avctx -> time_base . den , avctx -> time_base . num )"		102247	0		=			
ANR	103921	Identifier	i		102247	0					
ANR	103922	CallExpression	"av_gcd ( avctx -> time_base . den , avctx -> time_base . num )"		102247	1					
ANR	103923	Callee	av_gcd		102247	0					
ANR	103924	Identifier	av_gcd		102247	0					
ANR	103925	ArgumentList	avctx -> time_base . den		102247	1					
ANR	103926	Argument	avctx -> time_base . den		102247	0					
ANR	103927	MemberAccess	avctx -> time_base . den		102247	0					
ANR	103928	PtrMemberAccess	avctx -> time_base		102247	0					
ANR	103929	Identifier	avctx		102247	0					
ANR	103930	Identifier	time_base		102247	1					
ANR	103931	Identifier	den		102247	1					
ANR	103932	Argument	avctx -> time_base . num		102247	1					
ANR	103933	MemberAccess	avctx -> time_base . num		102247	0					
ANR	103934	PtrMemberAccess	avctx -> time_base		102247	0					
ANR	103935	Identifier	avctx		102247	0					
ANR	103936	Identifier	time_base		102247	1					
ANR	103937	Identifier	num		102247	1					
ANR	103938	IfStatement	if ( i > 1 )		102247	120					
ANR	103939	Condition	i > 1	533:7:10640:10644	102247	0	True				
ANR	103940	RelationalExpression	i > 1		102247	0		>			
ANR	103941	Identifier	i		102247	0					
ANR	103942	PrimaryExpression	1		102247	1					
ANR	103943	CompoundStatement		531:13:10593:10593	102247	1					
ANR	103944	ExpressionStatement	"av_log ( avctx , AV_LOG_INFO , ""removing common factors from framerate\\n"" )"	535:8:10657:10727	102247	0	True				
ANR	103945	CallExpression	"av_log ( avctx , AV_LOG_INFO , ""removing common factors from framerate\\n"" )"		102247	0					
ANR	103946	Callee	av_log		102247	0					
ANR	103947	Identifier	av_log		102247	0					
ANR	103948	ArgumentList	avctx		102247	1					
ANR	103949	Argument	avctx		102247	0					
ANR	103950	Identifier	avctx		102247	0					
ANR	103951	Argument	AV_LOG_INFO		102247	1					
ANR	103952	Identifier	AV_LOG_INFO		102247	0					
ANR	103953	Argument	"""removing common factors from framerate\\n"""		102247	2					
ANR	103954	PrimaryExpression	"""removing common factors from framerate\\n"""		102247	0					
ANR	103955	ExpressionStatement	avctx -> time_base . den /= i	537:8:10738:10763	102247	1	True				
ANR	103956	AssignmentExpression	avctx -> time_base . den /= i		102247	0		/=			
ANR	103957	MemberAccess	avctx -> time_base . den		102247	0					
ANR	103958	PtrMemberAccess	avctx -> time_base		102247	0					
ANR	103959	Identifier	avctx		102247	0					
ANR	103960	Identifier	time_base		102247	1					
ANR	103961	Identifier	den		102247	1					
ANR	103962	Identifier	i		102247	1					
ANR	103963	ExpressionStatement	avctx -> time_base . num /= i	539:8:10774:10799	102247	2	True				
ANR	103964	AssignmentExpression	avctx -> time_base . num /= i		102247	0		/=			
ANR	103965	MemberAccess	avctx -> time_base . num		102247	0					
ANR	103966	PtrMemberAccess	avctx -> time_base		102247	0					
ANR	103967	Identifier	avctx		102247	0					
ANR	103968	Identifier	time_base		102247	1					
ANR	103969	Identifier	num		102247	1					
ANR	103970	Identifier	i		102247	1					
ANR	103971	IfStatement	if ( s -> mpeg_quant || s -> codec_id == CODEC_ID_MPEG1VIDEO || s -> codec_id == CODEC_ID_MPEG2VIDEO || s -> codec_id == CODEC_ID_MJPEG )		102247	121					
ANR	103972	Condition	s -> mpeg_quant || s -> codec_id == CODEC_ID_MPEG1VIDEO || s -> codec_id == CODEC_ID_MPEG2VIDEO || s -> codec_id == CODEC_ID_MJPEG	547:7:10840:10955	102247	0	True				
ANR	103973	OrExpression	s -> mpeg_quant || s -> codec_id == CODEC_ID_MPEG1VIDEO || s -> codec_id == CODEC_ID_MPEG2VIDEO || s -> codec_id == CODEC_ID_MJPEG		102247	0		||			
ANR	103974	PtrMemberAccess	s -> mpeg_quant		102247	0					
ANR	103975	Identifier	s		102247	0					
ANR	103976	Identifier	mpeg_quant		102247	1					
ANR	103977	OrExpression	s -> codec_id == CODEC_ID_MPEG1VIDEO || s -> codec_id == CODEC_ID_MPEG2VIDEO || s -> codec_id == CODEC_ID_MJPEG		102247	1		||			
ANR	103978	EqualityExpression	s -> codec_id == CODEC_ID_MPEG1VIDEO		102247	0		==			
ANR	103979	PtrMemberAccess	s -> codec_id		102247	0					
ANR	103980	Identifier	s		102247	0					
ANR	103981	Identifier	codec_id		102247	1					
ANR	103982	Identifier	CODEC_ID_MPEG1VIDEO		102247	1					
ANR	103983	OrExpression	s -> codec_id == CODEC_ID_MPEG2VIDEO || s -> codec_id == CODEC_ID_MJPEG		102247	1		||			
ANR	103984	EqualityExpression	s -> codec_id == CODEC_ID_MPEG2VIDEO		102247	0		==			
ANR	103985	PtrMemberAccess	s -> codec_id		102247	0					
ANR	103986	Identifier	s		102247	0					
ANR	103987	Identifier	codec_id		102247	1					
ANR	103988	Identifier	CODEC_ID_MPEG2VIDEO		102247	1					
ANR	103989	EqualityExpression	s -> codec_id == CODEC_ID_MJPEG		102247	1		==			
ANR	103990	PtrMemberAccess	s -> codec_id		102247	0					
ANR	103991	Identifier	s		102247	0					
ANR	103992	Identifier	codec_id		102247	1					
ANR	103993	Identifier	CODEC_ID_MJPEG		102247	1					
ANR	103994	CompoundStatement		545:124:10904:10904	102247	1					
ANR	103995	ExpressionStatement	s -> intra_quant_bias = 3 << ( QUANT_BIAS_SHIFT - 3 )	549:8:10968:11012	102247	0	True				
ANR	103996	AssignmentExpression	s -> intra_quant_bias = 3 << ( QUANT_BIAS_SHIFT - 3 )		102247	0		=			
ANR	103997	PtrMemberAccess	s -> intra_quant_bias		102247	0					
ANR	103998	Identifier	s		102247	0					
ANR	103999	Identifier	intra_quant_bias		102247	1					
ANR	104000	ShiftExpression	3 << ( QUANT_BIAS_SHIFT - 3 )		102247	1		<<			
ANR	104001	PrimaryExpression	3		102247	0					
ANR	104002	AdditiveExpression	QUANT_BIAS_SHIFT - 3		102247	1		-			
ANR	104003	Identifier	QUANT_BIAS_SHIFT		102247	0					
ANR	104004	PrimaryExpression	3		102247	1					
ANR	104005	ExpressionStatement	s -> inter_quant_bias = 0	551:8:11039:11061	102247	1	True				
ANR	104006	AssignmentExpression	s -> inter_quant_bias = 0		102247	0		=			
ANR	104007	PtrMemberAccess	s -> inter_quant_bias		102247	0					
ANR	104008	Identifier	s		102247	0					
ANR	104009	Identifier	inter_quant_bias		102247	1					
ANR	104010	PrimaryExpression	0		102247	1					
ANR	104011	ElseStatement	else		102247	0					
ANR	104012	CompoundStatement		551:9:11020:11020	102247	0					
ANR	104013	ExpressionStatement	s -> intra_quant_bias = 0	555:8:11084:11105	102247	0	True				
ANR	104014	AssignmentExpression	s -> intra_quant_bias = 0		102247	0		=			
ANR	104015	PtrMemberAccess	s -> intra_quant_bias		102247	0					
ANR	104016	Identifier	s		102247	0					
ANR	104017	Identifier	intra_quant_bias		102247	1					
ANR	104018	PrimaryExpression	0		102247	1					
ANR	104019	ExpressionStatement	s -> inter_quant_bias = - ( 1 << ( QUANT_BIAS_SHIFT - 2 ) )	557:8:11116:11162	102247	1	True				
ANR	104020	AssignmentExpression	s -> inter_quant_bias = - ( 1 << ( QUANT_BIAS_SHIFT - 2 ) )		102247	0		=			
ANR	104021	PtrMemberAccess	s -> inter_quant_bias		102247	0					
ANR	104022	Identifier	s		102247	0					
ANR	104023	Identifier	inter_quant_bias		102247	1					
ANR	104024	UnaryOperationExpression	- ( 1 << ( QUANT_BIAS_SHIFT - 2 ) )		102247	1					
ANR	104025	UnaryOperator	-		102247	0					
ANR	104026	ShiftExpression	1 << ( QUANT_BIAS_SHIFT - 2 )		102247	1		<<			
ANR	104027	PrimaryExpression	1		102247	0					
ANR	104028	AdditiveExpression	QUANT_BIAS_SHIFT - 2		102247	1		-			
ANR	104029	Identifier	QUANT_BIAS_SHIFT		102247	0					
ANR	104030	PrimaryExpression	2		102247	1					
ANR	104031	IfStatement	if ( avctx -> intra_quant_bias != FF_DEFAULT_QUANT_BIAS )		102247	122					
ANR	104032	Condition	avctx -> intra_quant_bias != FF_DEFAULT_QUANT_BIAS	563:7:11195:11242	102247	0	True				
ANR	104033	EqualityExpression	avctx -> intra_quant_bias != FF_DEFAULT_QUANT_BIAS		102247	0		!=			
ANR	104034	PtrMemberAccess	avctx -> intra_quant_bias		102247	0					
ANR	104035	Identifier	avctx		102247	0					
ANR	104036	Identifier	intra_quant_bias		102247	1					
ANR	104037	Identifier	FF_DEFAULT_QUANT_BIAS		102247	1					
ANR	104038	ExpressionStatement	s -> intra_quant_bias = avctx -> intra_quant_bias	565:8:11254:11298	102247	1	True				
ANR	104039	AssignmentExpression	s -> intra_quant_bias = avctx -> intra_quant_bias		102247	0		=			
ANR	104040	PtrMemberAccess	s -> intra_quant_bias		102247	0					
ANR	104041	Identifier	s		102247	0					
ANR	104042	Identifier	intra_quant_bias		102247	1					
ANR	104043	PtrMemberAccess	avctx -> intra_quant_bias		102247	1					
ANR	104044	Identifier	avctx		102247	0					
ANR	104045	Identifier	intra_quant_bias		102247	1					
ANR	104046	IfStatement	if ( avctx -> inter_quant_bias != FF_DEFAULT_QUANT_BIAS )		102247	123					
ANR	104047	Condition	avctx -> inter_quant_bias != FF_DEFAULT_QUANT_BIAS	567:7:11308:11355	102247	0	True				
ANR	104048	EqualityExpression	avctx -> inter_quant_bias != FF_DEFAULT_QUANT_BIAS		102247	0		!=			
ANR	104049	PtrMemberAccess	avctx -> inter_quant_bias		102247	0					
ANR	104050	Identifier	avctx		102247	0					
ANR	104051	Identifier	inter_quant_bias		102247	1					
ANR	104052	Identifier	FF_DEFAULT_QUANT_BIAS		102247	1					
ANR	104053	ExpressionStatement	s -> inter_quant_bias = avctx -> inter_quant_bias	569:8:11367:11411	102247	1	True				
ANR	104054	AssignmentExpression	s -> inter_quant_bias = avctx -> inter_quant_bias		102247	0		=			
ANR	104055	PtrMemberAccess	s -> inter_quant_bias		102247	0					
ANR	104056	Identifier	s		102247	0					
ANR	104057	Identifier	inter_quant_bias		102247	1					
ANR	104058	PtrMemberAccess	avctx -> inter_quant_bias		102247	1					
ANR	104059	Identifier	avctx		102247	0					
ANR	104060	Identifier	inter_quant_bias		102247	1					
ANR	104061	ExpressionStatement	"avcodec_get_chroma_sub_sample ( avctx -> pix_fmt , & chroma_h_shift , & chroma_v_shift )"	573:4:11420:11499	102247	124	True				
ANR	104062	CallExpression	"avcodec_get_chroma_sub_sample ( avctx -> pix_fmt , & chroma_h_shift , & chroma_v_shift )"		102247	0					
ANR	104063	Callee	avcodec_get_chroma_sub_sample		102247	0					
ANR	104064	Identifier	avcodec_get_chroma_sub_sample		102247	0					
ANR	104065	ArgumentList	avctx -> pix_fmt		102247	1					
ANR	104066	Argument	avctx -> pix_fmt		102247	0					
ANR	104067	PtrMemberAccess	avctx -> pix_fmt		102247	0					
ANR	104068	Identifier	avctx		102247	0					
ANR	104069	Identifier	pix_fmt		102247	1					
ANR	104070	Argument	& chroma_h_shift		102247	1					
ANR	104071	UnaryOperationExpression	& chroma_h_shift		102247	0					
ANR	104072	UnaryOperator	&		102247	0					
ANR	104073	Identifier	chroma_h_shift		102247	1					
ANR	104074	Argument	& chroma_v_shift		102247	2					
ANR	104075	UnaryOperationExpression	& chroma_v_shift		102247	0					
ANR	104076	UnaryOperator	&		102247	0					
ANR	104077	Identifier	chroma_v_shift		102247	1					
ANR	104078	IfStatement	if ( avctx -> codec_id == CODEC_ID_MPEG4 && s -> avctx -> time_base . den > ( 1 << 16 ) - 1 )		102247	125					
ANR	104079	Condition	avctx -> codec_id == CODEC_ID_MPEG4 && s -> avctx -> time_base . den > ( 1 << 16 ) - 1	577:7:11511:11582	102247	0	True				
ANR	104080	AndExpression	avctx -> codec_id == CODEC_ID_MPEG4 && s -> avctx -> time_base . den > ( 1 << 16 ) - 1		102247	0		&&			
ANR	104081	EqualityExpression	avctx -> codec_id == CODEC_ID_MPEG4		102247	0		==			
ANR	104082	PtrMemberAccess	avctx -> codec_id		102247	0					
ANR	104083	Identifier	avctx		102247	0					
ANR	104084	Identifier	codec_id		102247	1					
ANR	104085	Identifier	CODEC_ID_MPEG4		102247	1					
ANR	104086	RelationalExpression	s -> avctx -> time_base . den > ( 1 << 16 ) - 1		102247	1		>			
ANR	104087	MemberAccess	s -> avctx -> time_base . den		102247	0					
ANR	104088	PtrMemberAccess	s -> avctx -> time_base		102247	0					
ANR	104089	PtrMemberAccess	s -> avctx		102247	0					
ANR	104090	Identifier	s		102247	0					
ANR	104091	Identifier	avctx		102247	1					
ANR	104092	Identifier	time_base		102247	1					
ANR	104093	Identifier	den		102247	1					
ANR	104094	AdditiveExpression	( 1 << 16 ) - 1		102247	1		-			
ANR	104095	ShiftExpression	1 << 16		102247	0		<<			
ANR	104096	PrimaryExpression	1		102247	0					
ANR	104097	PrimaryExpression	16		102247	1					
ANR	104098	PrimaryExpression	1		102247	1					
ANR	104099	CompoundStatement		575:80:11531:11531	102247	1					
ANR	104100	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""timebase not supported by mpeg 4 standard\\n"" )"	579:8:11595:11669	102247	0	True				
ANR	104101	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""timebase not supported by mpeg 4 standard\\n"" )"		102247	0					
ANR	104102	Callee	av_log		102247	0					
ANR	104103	Identifier	av_log		102247	0					
ANR	104104	ArgumentList	avctx		102247	1					
ANR	104105	Argument	avctx		102247	0					
ANR	104106	Identifier	avctx		102247	0					
ANR	104107	Argument	AV_LOG_ERROR		102247	1					
ANR	104108	Identifier	AV_LOG_ERROR		102247	0					
ANR	104109	Argument	"""timebase not supported by mpeg 4 standard\\n"""		102247	2					
ANR	104110	PrimaryExpression	"""timebase not supported by mpeg 4 standard\\n"""		102247	0					
ANR	104111	ReturnStatement	return - 1 ;	581:8:11680:11689	102247	1	True				
ANR	104112	UnaryOperationExpression	- 1		102247	0					
ANR	104113	UnaryOperator	-		102247	0					
ANR	104114	PrimaryExpression	1		102247	1					
ANR	104115	ExpressionStatement	s -> time_increment_bits = av_log2 ( s -> avctx -> time_base . den - 1 ) + 1	585:4:11703:11768	102247	126	True				
ANR	104116	AssignmentExpression	s -> time_increment_bits = av_log2 ( s -> avctx -> time_base . den - 1 ) + 1		102247	0		=			
ANR	104117	PtrMemberAccess	s -> time_increment_bits		102247	0					
ANR	104118	Identifier	s		102247	0					
ANR	104119	Identifier	time_increment_bits		102247	1					
ANR	104120	AdditiveExpression	av_log2 ( s -> avctx -> time_base . den - 1 ) + 1		102247	1		+			
ANR	104121	CallExpression	av_log2 ( s -> avctx -> time_base . den - 1 )		102247	0					
ANR	104122	Callee	av_log2		102247	0					
ANR	104123	Identifier	av_log2		102247	0					
ANR	104124	ArgumentList	s -> avctx -> time_base . den - 1		102247	1					
ANR	104125	Argument	s -> avctx -> time_base . den - 1		102247	0					
ANR	104126	AdditiveExpression	s -> avctx -> time_base . den - 1		102247	0		-			
ANR	104127	MemberAccess	s -> avctx -> time_base . den		102247	0					
ANR	104128	PtrMemberAccess	s -> avctx -> time_base		102247	0					
ANR	104129	PtrMemberAccess	s -> avctx		102247	0					
ANR	104130	Identifier	s		102247	0					
ANR	104131	Identifier	avctx		102247	1					
ANR	104132	Identifier	time_base		102247	1					
ANR	104133	Identifier	den		102247	1					
ANR	104134	PrimaryExpression	1		102247	1					
ANR	104135	PrimaryExpression	1		102247	1					
ANR	104136	SwitchStatement	switch ( avctx -> codec -> id )		102247	127					
ANR	104137	Condition	avctx -> codec -> id	589:11:11784:11799	102247	0	True				
ANR	104138	PtrMemberAccess	avctx -> codec -> id		102247	0					
ANR	104139	PtrMemberAccess	avctx -> codec		102247	0					
ANR	104140	Identifier	avctx		102247	0					
ANR	104141	Identifier	codec		102247	1					
ANR	104142	Identifier	id		102247	1					
ANR	104143	CompoundStatement		587:29:11749:11749	102247	1					
ANR	104144	Label	case CODEC_ID_MPEG1VIDEO :	591:4:11809:11833	102247	0	True				
ANR	104145	Identifier	CODEC_ID_MPEG1VIDEO		102247	0					
ANR	104146	ExpressionStatement	s -> out_format = FMT_MPEG1	593:8:11844:11869	102247	1	True				
ANR	104147	AssignmentExpression	s -> out_format = FMT_MPEG1		102247	0		=			
ANR	104148	PtrMemberAccess	s -> out_format		102247	0					
ANR	104149	Identifier	s		102247	0					
ANR	104150	Identifier	out_format		102247	1					
ANR	104151	Identifier	FMT_MPEG1		102247	1					
ANR	104152	ExpressionStatement	s -> low_delay = ! ! ( s -> flags & CODEC_FLAG_LOW_DELAY )	595:8:11880:11929	102247	2	True				
ANR	104153	AssignmentExpression	s -> low_delay = ! ! ( s -> flags & CODEC_FLAG_LOW_DELAY )		102247	0		=			
ANR	104154	PtrMemberAccess	s -> low_delay		102247	0					
ANR	104155	Identifier	s		102247	0					
ANR	104156	Identifier	low_delay		102247	1					
ANR	104157	UnaryOperationExpression	! ! ( s -> flags & CODEC_FLAG_LOW_DELAY )		102247	1					
ANR	104158	UnaryOperator	!		102247	0					
ANR	104159	UnaryOperationExpression	! ( s -> flags & CODEC_FLAG_LOW_DELAY )		102247	1					
ANR	104160	UnaryOperator	!		102247	0					
ANR	104161	BitAndExpression	s -> flags & CODEC_FLAG_LOW_DELAY		102247	1		&			
ANR	104162	PtrMemberAccess	s -> flags		102247	0					
ANR	104163	Identifier	s		102247	0					
ANR	104164	Identifier	flags		102247	1					
ANR	104165	Identifier	CODEC_FLAG_LOW_DELAY		102247	1					
ANR	104166	ExpressionStatement	avctx -> delay = s -> low_delay ? 0 : ( s -> max_b_frames + 1 )	597:8:11940:11994	102247	3	True				
ANR	104167	AssignmentExpression	avctx -> delay = s -> low_delay ? 0 : ( s -> max_b_frames + 1 )		102247	0		=			
ANR	104168	PtrMemberAccess	avctx -> delay		102247	0					
ANR	104169	Identifier	avctx		102247	0					
ANR	104170	Identifier	delay		102247	1					
ANR	104171	ConditionalExpression	s -> low_delay ? 0 : ( s -> max_b_frames + 1 )		102247	1					
ANR	104172	Condition	s -> low_delay		102247	0					
ANR	104173	PtrMemberAccess	s -> low_delay		102247	0					
ANR	104174	Identifier	s		102247	0					
ANR	104175	Identifier	low_delay		102247	1					
ANR	104176	PrimaryExpression	0		102247	1					
ANR	104177	AdditiveExpression	s -> max_b_frames + 1		102247	2		+			
ANR	104178	PtrMemberAccess	s -> max_b_frames		102247	0					
ANR	104179	Identifier	s		102247	0					
ANR	104180	Identifier	max_b_frames		102247	1					
ANR	104181	PrimaryExpression	1		102247	1					
ANR	104182	BreakStatement	break ;	599:8:12005:12010	102247	4	True				
ANR	104183	Label	case CODEC_ID_MPEG2VIDEO :	601:4:12017:12041	102247	5	True				
ANR	104184	Identifier	CODEC_ID_MPEG2VIDEO		102247	0					
ANR	104185	ExpressionStatement	s -> out_format = FMT_MPEG1	603:8:12052:12077	102247	6	True				
ANR	104186	AssignmentExpression	s -> out_format = FMT_MPEG1		102247	0		=			
ANR	104187	PtrMemberAccess	s -> out_format		102247	0					
ANR	104188	Identifier	s		102247	0					
ANR	104189	Identifier	out_format		102247	1					
ANR	104190	Identifier	FMT_MPEG1		102247	1					
ANR	104191	ExpressionStatement	s -> low_delay = ! ! ( s -> flags & CODEC_FLAG_LOW_DELAY )	605:8:12088:12137	102247	7	True				
ANR	104192	AssignmentExpression	s -> low_delay = ! ! ( s -> flags & CODEC_FLAG_LOW_DELAY )		102247	0		=			
ANR	104193	PtrMemberAccess	s -> low_delay		102247	0					
ANR	104194	Identifier	s		102247	0					
ANR	104195	Identifier	low_delay		102247	1					
ANR	104196	UnaryOperationExpression	! ! ( s -> flags & CODEC_FLAG_LOW_DELAY )		102247	1					
ANR	104197	UnaryOperator	!		102247	0					
ANR	104198	UnaryOperationExpression	! ( s -> flags & CODEC_FLAG_LOW_DELAY )		102247	1					
ANR	104199	UnaryOperator	!		102247	0					
ANR	104200	BitAndExpression	s -> flags & CODEC_FLAG_LOW_DELAY		102247	1		&			
ANR	104201	PtrMemberAccess	s -> flags		102247	0					
ANR	104202	Identifier	s		102247	0					
ANR	104203	Identifier	flags		102247	1					
ANR	104204	Identifier	CODEC_FLAG_LOW_DELAY		102247	1					
ANR	104205	ExpressionStatement	avctx -> delay = s -> low_delay ? 0 : ( s -> max_b_frames + 1 )	607:8:12148:12202	102247	8	True				
ANR	104206	AssignmentExpression	avctx -> delay = s -> low_delay ? 0 : ( s -> max_b_frames + 1 )		102247	0		=			
ANR	104207	PtrMemberAccess	avctx -> delay		102247	0					
ANR	104208	Identifier	avctx		102247	0					
ANR	104209	Identifier	delay		102247	1					
ANR	104210	ConditionalExpression	s -> low_delay ? 0 : ( s -> max_b_frames + 1 )		102247	1					
ANR	104211	Condition	s -> low_delay		102247	0					
ANR	104212	PtrMemberAccess	s -> low_delay		102247	0					
ANR	104213	Identifier	s		102247	0					
ANR	104214	Identifier	low_delay		102247	1					
ANR	104215	PrimaryExpression	0		102247	1					
ANR	104216	AdditiveExpression	s -> max_b_frames + 1		102247	2		+			
ANR	104217	PtrMemberAccess	s -> max_b_frames		102247	0					
ANR	104218	Identifier	s		102247	0					
ANR	104219	Identifier	max_b_frames		102247	1					
ANR	104220	PrimaryExpression	1		102247	1					
ANR	104221	ExpressionStatement	s -> rtp_mode = 1	609:8:12213:12227	102247	9	True				
ANR	104222	AssignmentExpression	s -> rtp_mode = 1		102247	0		=			
ANR	104223	PtrMemberAccess	s -> rtp_mode		102247	0					
ANR	104224	Identifier	s		102247	0					
ANR	104225	Identifier	rtp_mode		102247	1					
ANR	104226	PrimaryExpression	1		102247	1					
ANR	104227	BreakStatement	break ;	611:8:12238:12243	102247	10	True				
ANR	104228	Label	case CODEC_ID_LJPEG :	613:4:12250:12269	102247	11	True				
ANR	104229	Identifier	CODEC_ID_LJPEG		102247	0					
ANR	104230	Label	case CODEC_ID_MJPEG :	615:4:12276:12295	102247	12	True				
ANR	104231	Identifier	CODEC_ID_MJPEG		102247	0					
ANR	104232	ExpressionStatement	s -> out_format = FMT_MJPEG	617:8:12306:12331	102247	13	True				
ANR	104233	AssignmentExpression	s -> out_format = FMT_MJPEG		102247	0		=			
ANR	104234	PtrMemberAccess	s -> out_format		102247	0					
ANR	104235	Identifier	s		102247	0					
ANR	104236	Identifier	out_format		102247	1					
ANR	104237	Identifier	FMT_MJPEG		102247	1					
ANR	104238	ExpressionStatement	s -> intra_only = 1	619:8:12342:12359	102247	14	True				
ANR	104239	AssignmentExpression	s -> intra_only = 1		102247	0		=			
ANR	104240	PtrMemberAccess	s -> intra_only		102247	0					
ANR	104241	Identifier	s		102247	0					
ANR	104242	Identifier	intra_only		102247	1					
ANR	104243	PrimaryExpression	1		102247	1					
ANR	104244	IfStatement	if ( avctx -> codec -> id == CODEC_ID_LJPEG && avctx -> pix_fmt == PIX_FMT_BGRA )		102247	15					
ANR	104245	Condition	avctx -> codec -> id == CODEC_ID_LJPEG && avctx -> pix_fmt == PIX_FMT_BGRA	621:11:12405:12472	102247	0	True				
ANR	104246	AndExpression	avctx -> codec -> id == CODEC_ID_LJPEG && avctx -> pix_fmt == PIX_FMT_BGRA		102247	0		&&			
ANR	104247	EqualityExpression	avctx -> codec -> id == CODEC_ID_LJPEG		102247	0		==			
ANR	104248	PtrMemberAccess	avctx -> codec -> id		102247	0					
ANR	104249	PtrMemberAccess	avctx -> codec		102247	0					
ANR	104250	Identifier	avctx		102247	0					
ANR	104251	Identifier	codec		102247	1					
ANR	104252	Identifier	id		102247	1					
ANR	104253	Identifier	CODEC_ID_LJPEG		102247	1					
ANR	104254	EqualityExpression	avctx -> pix_fmt == PIX_FMT_BGRA		102247	1		==			
ANR	104255	PtrMemberAccess	avctx -> pix_fmt		102247	0					
ANR	104256	Identifier	avctx		102247	0					
ANR	104257	Identifier	pix_fmt		102247	1					
ANR	104258	Identifier	PIX_FMT_BGRA		102247	1					
ANR	104259	CompoundStatement		619:80:12421:12421	102247	1					
ANR	104260	ExpressionStatement	s -> mjpeg_vsample [ 0 ] = s -> mjpeg_hsample [ 0 ] = s -> mjpeg_vsample [ 1 ] = s -> mjpeg_hsample [ 1 ] = s -> mjpeg_vsample [ 2 ] = s -> mjpeg_hsample [ 2 ] = 1	623:12:12489:12648	102247	0	True				
ANR	104261	AssignmentExpression	s -> mjpeg_vsample [ 0 ] = s -> mjpeg_hsample [ 0 ] = s -> mjpeg_vsample [ 1 ] = s -> mjpeg_hsample [ 1 ] = s -> mjpeg_vsample [ 2 ] = s -> mjpeg_hsample [ 2 ] = 1		102247	0		=			
ANR	104262	ArrayIndexing	s -> mjpeg_vsample [ 0 ]		102247	0					
ANR	104263	PtrMemberAccess	s -> mjpeg_vsample		102247	0					
ANR	104264	Identifier	s		102247	0					
ANR	104265	Identifier	mjpeg_vsample		102247	1					
ANR	104266	PrimaryExpression	0		102247	1					
ANR	104267	AssignmentExpression	s -> mjpeg_hsample [ 0 ] = s -> mjpeg_vsample [ 1 ] = s -> mjpeg_hsample [ 1 ] = s -> mjpeg_vsample [ 2 ] = s -> mjpeg_hsample [ 2 ] = 1		102247	1		=			
ANR	104268	ArrayIndexing	s -> mjpeg_hsample [ 0 ]		102247	0					
ANR	104269	PtrMemberAccess	s -> mjpeg_hsample		102247	0					
ANR	104270	Identifier	s		102247	0					
ANR	104271	Identifier	mjpeg_hsample		102247	1					
ANR	104272	PrimaryExpression	0		102247	1					
ANR	104273	AssignmentExpression	s -> mjpeg_vsample [ 1 ] = s -> mjpeg_hsample [ 1 ] = s -> mjpeg_vsample [ 2 ] = s -> mjpeg_hsample [ 2 ] = 1		102247	1		=			
ANR	104274	ArrayIndexing	s -> mjpeg_vsample [ 1 ]		102247	0					
ANR	104275	PtrMemberAccess	s -> mjpeg_vsample		102247	0					
ANR	104276	Identifier	s		102247	0					
ANR	104277	Identifier	mjpeg_vsample		102247	1					
ANR	104278	PrimaryExpression	1		102247	1					
ANR	104279	AssignmentExpression	s -> mjpeg_hsample [ 1 ] = s -> mjpeg_vsample [ 2 ] = s -> mjpeg_hsample [ 2 ] = 1		102247	1		=			
ANR	104280	ArrayIndexing	s -> mjpeg_hsample [ 1 ]		102247	0					
ANR	104281	PtrMemberAccess	s -> mjpeg_hsample		102247	0					
ANR	104282	Identifier	s		102247	0					
ANR	104283	Identifier	mjpeg_hsample		102247	1					
ANR	104284	PrimaryExpression	1		102247	1					
ANR	104285	AssignmentExpression	s -> mjpeg_vsample [ 2 ] = s -> mjpeg_hsample [ 2 ] = 1		102247	1		=			
ANR	104286	ArrayIndexing	s -> mjpeg_vsample [ 2 ]		102247	0					
ANR	104287	PtrMemberAccess	s -> mjpeg_vsample		102247	0					
ANR	104288	Identifier	s		102247	0					
ANR	104289	Identifier	mjpeg_vsample		102247	1					
ANR	104290	PrimaryExpression	2		102247	1					
ANR	104291	AssignmentExpression	s -> mjpeg_hsample [ 2 ] = 1		102247	1		=			
ANR	104292	ArrayIndexing	s -> mjpeg_hsample [ 2 ]		102247	0					
ANR	104293	PtrMemberAccess	s -> mjpeg_hsample		102247	0					
ANR	104294	Identifier	s		102247	0					
ANR	104295	Identifier	mjpeg_hsample		102247	1					
ANR	104296	PrimaryExpression	2		102247	1					
ANR	104297	PrimaryExpression	1		102247	1					
ANR	104298	ElseStatement	else		102247	0					
ANR	104299	CompoundStatement		627:13:12611:12611	102247	0					
ANR	104300	ExpressionStatement	s -> mjpeg_vsample [ 0 ] = 2	631:12:12679:12702	102247	0	True				
ANR	104301	AssignmentExpression	s -> mjpeg_vsample [ 0 ] = 2		102247	0		=			
ANR	104302	ArrayIndexing	s -> mjpeg_vsample [ 0 ]		102247	0					
ANR	104303	PtrMemberAccess	s -> mjpeg_vsample		102247	0					
ANR	104304	Identifier	s		102247	0					
ANR	104305	Identifier	mjpeg_vsample		102247	1					
ANR	104306	PrimaryExpression	0		102247	1					
ANR	104307	PrimaryExpression	2		102247	1					
ANR	104308	ExpressionStatement	s -> mjpeg_vsample [ 1 ] = 2 >> chroma_v_shift	633:12:12717:12756	102247	1	True				
ANR	104309	AssignmentExpression	s -> mjpeg_vsample [ 1 ] = 2 >> chroma_v_shift		102247	0		=			
ANR	104310	ArrayIndexing	s -> mjpeg_vsample [ 1 ]		102247	0					
ANR	104311	PtrMemberAccess	s -> mjpeg_vsample		102247	0					
ANR	104312	Identifier	s		102247	0					
ANR	104313	Identifier	mjpeg_vsample		102247	1					
ANR	104314	PrimaryExpression	1		102247	1					
ANR	104315	ShiftExpression	2 >> chroma_v_shift		102247	1		>>			
ANR	104316	PrimaryExpression	2		102247	0					
ANR	104317	Identifier	chroma_v_shift		102247	1					
ANR	104318	ExpressionStatement	s -> mjpeg_vsample [ 2 ] = 2 >> chroma_v_shift	635:12:12771:12810	102247	2	True				
ANR	104319	AssignmentExpression	s -> mjpeg_vsample [ 2 ] = 2 >> chroma_v_shift		102247	0		=			
ANR	104320	ArrayIndexing	s -> mjpeg_vsample [ 2 ]		102247	0					
ANR	104321	PtrMemberAccess	s -> mjpeg_vsample		102247	0					
ANR	104322	Identifier	s		102247	0					
ANR	104323	Identifier	mjpeg_vsample		102247	1					
ANR	104324	PrimaryExpression	2		102247	1					
ANR	104325	ShiftExpression	2 >> chroma_v_shift		102247	1		>>			
ANR	104326	PrimaryExpression	2		102247	0					
ANR	104327	Identifier	chroma_v_shift		102247	1					
ANR	104328	ExpressionStatement	s -> mjpeg_hsample [ 0 ] = 2	637:12:12825:12848	102247	3	True				
ANR	104329	AssignmentExpression	s -> mjpeg_hsample [ 0 ] = 2		102247	0		=			
ANR	104330	ArrayIndexing	s -> mjpeg_hsample [ 0 ]		102247	0					
ANR	104331	PtrMemberAccess	s -> mjpeg_hsample		102247	0					
ANR	104332	Identifier	s		102247	0					
ANR	104333	Identifier	mjpeg_hsample		102247	1					
ANR	104334	PrimaryExpression	0		102247	1					
ANR	104335	PrimaryExpression	2		102247	1					
ANR	104336	ExpressionStatement	s -> mjpeg_hsample [ 1 ] = 2 >> chroma_h_shift	639:12:12863:12902	102247	4	True				
ANR	104337	AssignmentExpression	s -> mjpeg_hsample [ 1 ] = 2 >> chroma_h_shift		102247	0		=			
ANR	104338	ArrayIndexing	s -> mjpeg_hsample [ 1 ]		102247	0					
ANR	104339	PtrMemberAccess	s -> mjpeg_hsample		102247	0					
ANR	104340	Identifier	s		102247	0					
ANR	104341	Identifier	mjpeg_hsample		102247	1					
ANR	104342	PrimaryExpression	1		102247	1					
ANR	104343	ShiftExpression	2 >> chroma_h_shift		102247	1		>>			
ANR	104344	PrimaryExpression	2		102247	0					
ANR	104345	Identifier	chroma_h_shift		102247	1					
ANR	104346	ExpressionStatement	s -> mjpeg_hsample [ 2 ] = 2 >> chroma_h_shift	641:12:12917:12956	102247	5	True				
ANR	104347	AssignmentExpression	s -> mjpeg_hsample [ 2 ] = 2 >> chroma_h_shift		102247	0		=			
ANR	104348	ArrayIndexing	s -> mjpeg_hsample [ 2 ]		102247	0					
ANR	104349	PtrMemberAccess	s -> mjpeg_hsample		102247	0					
ANR	104350	Identifier	s		102247	0					
ANR	104351	Identifier	mjpeg_hsample		102247	1					
ANR	104352	PrimaryExpression	2		102247	1					
ANR	104353	ShiftExpression	2 >> chroma_h_shift		102247	1		>>			
ANR	104354	PrimaryExpression	2		102247	0					
ANR	104355	Identifier	chroma_h_shift		102247	1					
ANR	104356	IfStatement	if ( ! ( CONFIG_MJPEG_ENCODER || CONFIG_LJPEG_ENCODER ) || ff_mjpeg_encode_init ( s ) < 0 )		102247	16					
ANR	104357	Condition	! ( CONFIG_MJPEG_ENCODER || CONFIG_LJPEG_ENCODER ) || ff_mjpeg_encode_init ( s ) < 0	645:12:12982:13072	102247	0	True				
ANR	104358	OrExpression	! ( CONFIG_MJPEG_ENCODER || CONFIG_LJPEG_ENCODER ) || ff_mjpeg_encode_init ( s ) < 0		102247	0		||			
ANR	104359	UnaryOperationExpression	! ( CONFIG_MJPEG_ENCODER || CONFIG_LJPEG_ENCODER )		102247	0					
ANR	104360	UnaryOperator	!		102247	0					
ANR	104361	OrExpression	CONFIG_MJPEG_ENCODER || CONFIG_LJPEG_ENCODER		102247	1		||			
ANR	104362	Identifier	CONFIG_MJPEG_ENCODER		102247	0					
ANR	104363	Identifier	CONFIG_LJPEG_ENCODER		102247	1					
ANR	104364	RelationalExpression	ff_mjpeg_encode_init ( s ) < 0		102247	1		<			
ANR	104365	CallExpression	ff_mjpeg_encode_init ( s )		102247	0					
ANR	104366	Callee	ff_mjpeg_encode_init		102247	0					
ANR	104367	Identifier	ff_mjpeg_encode_init		102247	0					
ANR	104368	ArgumentList	s		102247	1					
ANR	104369	Argument	s		102247	0					
ANR	104370	Identifier	s		102247	0					
ANR	104371	PrimaryExpression	0		102247	1					
ANR	104372	ReturnStatement	return - 1 ;	649:12:13088:13097	102247	1	True				
ANR	104373	UnaryOperationExpression	- 1		102247	0					
ANR	104374	UnaryOperator	-		102247	0					
ANR	104375	PrimaryExpression	1		102247	1					
ANR	104376	ExpressionStatement	avctx -> delay = 0	651:8:13108:13122	102247	17	True				
ANR	104377	AssignmentExpression	avctx -> delay = 0		102247	0		=			
ANR	104378	PtrMemberAccess	avctx -> delay		102247	0					
ANR	104379	Identifier	avctx		102247	0					
ANR	104380	Identifier	delay		102247	1					
ANR	104381	PrimaryExpression	0		102247	1					
ANR	104382	ExpressionStatement	s -> low_delay = 1	653:8:13133:13147	102247	18	True				
ANR	104383	AssignmentExpression	s -> low_delay = 1		102247	0		=			
ANR	104384	PtrMemberAccess	s -> low_delay		102247	0					
ANR	104385	Identifier	s		102247	0					
ANR	104386	Identifier	low_delay		102247	1					
ANR	104387	PrimaryExpression	1		102247	1					
ANR	104388	BreakStatement	break ;	655:8:13158:13163	102247	19	True				
ANR	104389	Label	case CODEC_ID_H261 :	657:4:13170:13188	102247	20	True				
ANR	104390	Identifier	CODEC_ID_H261		102247	0					
ANR	104391	IfStatement	if ( ! CONFIG_H261_ENCODER )		102247	21					
ANR	104392	Condition	! CONFIG_H261_ENCODER	659:12:13203:13222	102247	0	True				
ANR	104393	UnaryOperationExpression	! CONFIG_H261_ENCODER		102247	0					
ANR	104394	UnaryOperator	!		102247	0					
ANR	104395	Identifier	CONFIG_H261_ENCODER		102247	1					
ANR	104396	ReturnStatement	return - 1 ;	659:35:13226:13235	102247	1	True				
ANR	104397	UnaryOperationExpression	- 1		102247	0					
ANR	104398	UnaryOperator	-		102247	0					
ANR	104399	PrimaryExpression	1		102247	1					
ANR	104400	IfStatement	"if ( ff_h261_get_picture_format ( s -> width , s -> height ) < 0 )"		102247	22					
ANR	104401	Condition	"ff_h261_get_picture_format ( s -> width , s -> height ) < 0"	661:12:13250:13300	102247	0	True				
ANR	104402	RelationalExpression	"ff_h261_get_picture_format ( s -> width , s -> height ) < 0"		102247	0		<			
ANR	104403	CallExpression	"ff_h261_get_picture_format ( s -> width , s -> height )"		102247	0					
ANR	104404	Callee	ff_h261_get_picture_format		102247	0					
ANR	104405	Identifier	ff_h261_get_picture_format		102247	0					
ANR	104406	ArgumentList	s -> width		102247	1					
ANR	104407	Argument	s -> width		102247	0					
ANR	104408	PtrMemberAccess	s -> width		102247	0					
ANR	104409	Identifier	s		102247	0					
ANR	104410	Identifier	width		102247	1					
ANR	104411	Argument	s -> height		102247	1					
ANR	104412	PtrMemberAccess	s -> height		102247	0					
ANR	104413	Identifier	s		102247	0					
ANR	104414	Identifier	height		102247	1					
ANR	104415	PrimaryExpression	0		102247	1					
ANR	104416	CompoundStatement		659:65:13250:13250	102247	1					
ANR	104417	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""The specified picture size of %dx%d is not valid for the H.261 codec.\\nValid sizes are 176x144, 352x288\\n"" , s -> width , s -> height )"	663:12:13318:13475	102247	0	True				
ANR	104418	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""The specified picture size of %dx%d is not valid for the H.261 codec.\\nValid sizes are 176x144, 352x288\\n"" , s -> width , s -> height )"		102247	0					
ANR	104419	Callee	av_log		102247	0					
ANR	104420	Identifier	av_log		102247	0					
ANR	104421	ArgumentList	avctx		102247	1					
ANR	104422	Argument	avctx		102247	0					
ANR	104423	Identifier	avctx		102247	0					
ANR	104424	Argument	AV_LOG_ERROR		102247	1					
ANR	104425	Identifier	AV_LOG_ERROR		102247	0					
ANR	104426	Argument	"""The specified picture size of %dx%d is not valid for the H.261 codec.\\nValid sizes are 176x144, 352x288\\n"""		102247	2					
ANR	104427	PrimaryExpression	"""The specified picture size of %dx%d is not valid for the H.261 codec.\\nValid sizes are 176x144, 352x288\\n"""		102247	0					
ANR	104428	Argument	s -> width		102247	3					
ANR	104429	PtrMemberAccess	s -> width		102247	0					
ANR	104430	Identifier	s		102247	0					
ANR	104431	Identifier	width		102247	1					
ANR	104432	Argument	s -> height		102247	4					
ANR	104433	PtrMemberAccess	s -> height		102247	0					
ANR	104434	Identifier	s		102247	0					
ANR	104435	Identifier	height		102247	1					
ANR	104436	ReturnStatement	return - 1 ;	665:12:13490:13499	102247	1	True				
ANR	104437	UnaryOperationExpression	- 1		102247	0					
ANR	104438	UnaryOperator	-		102247	0					
ANR	104439	PrimaryExpression	1		102247	1					
ANR	104440	ExpressionStatement	s -> out_format = FMT_H261	669:8:13521:13545	102247	23	True				
ANR	104441	AssignmentExpression	s -> out_format = FMT_H261		102247	0		=			
ANR	104442	PtrMemberAccess	s -> out_format		102247	0					
ANR	104443	Identifier	s		102247	0					
ANR	104444	Identifier	out_format		102247	1					
ANR	104445	Identifier	FMT_H261		102247	1					
ANR	104446	ExpressionStatement	avctx -> delay = 0	671:8:13556:13570	102247	24	True				
ANR	104447	AssignmentExpression	avctx -> delay = 0		102247	0		=			
ANR	104448	PtrMemberAccess	avctx -> delay		102247	0					
ANR	104449	Identifier	avctx		102247	0					
ANR	104450	Identifier	delay		102247	1					
ANR	104451	PrimaryExpression	0		102247	1					
ANR	104452	ExpressionStatement	s -> low_delay = 1	673:8:13581:13595	102247	25	True				
ANR	104453	AssignmentExpression	s -> low_delay = 1		102247	0		=			
ANR	104454	PtrMemberAccess	s -> low_delay		102247	0					
ANR	104455	Identifier	s		102247	0					
ANR	104456	Identifier	low_delay		102247	1					
ANR	104457	PrimaryExpression	1		102247	1					
ANR	104458	BreakStatement	break ;	675:8:13606:13611	102247	26	True				
ANR	104459	Label	case CODEC_ID_H263 :	677:4:13618:13636	102247	27	True				
ANR	104460	Identifier	CODEC_ID_H263		102247	0					
ANR	104461	IfStatement	if ( ! CONFIG_H263_ENCODER )		102247	28					
ANR	104462	Condition	! CONFIG_H263_ENCODER	679:12:13651:13670	102247	0	True				
ANR	104463	UnaryOperationExpression	! CONFIG_H263_ENCODER		102247	0					
ANR	104464	UnaryOperator	!		102247	0					
ANR	104465	Identifier	CONFIG_H263_ENCODER		102247	1					
ANR	104466	ReturnStatement	return - 1 ;	679:35:13674:13683	102247	1	True				
ANR	104467	UnaryOperationExpression	- 1		102247	0					
ANR	104468	UnaryOperator	-		102247	0					
ANR	104469	PrimaryExpression	1		102247	1					
ANR	104470	IfStatement	"if ( ff_match_2uint16 ( h263_format , FF_ARRAY_ELEMS ( h263_format ) , s -> width , s -> height ) == 8 )"		102247	29					
ANR	104471	Condition	"ff_match_2uint16 ( h263_format , FF_ARRAY_ELEMS ( h263_format ) , s -> width , s -> height ) == 8"	681:12:13698:13781	102247	0	True				
ANR	104472	EqualityExpression	"ff_match_2uint16 ( h263_format , FF_ARRAY_ELEMS ( h263_format ) , s -> width , s -> height ) == 8"		102247	0		==			
ANR	104473	CallExpression	"ff_match_2uint16 ( h263_format , FF_ARRAY_ELEMS ( h263_format ) , s -> width , s -> height )"		102247	0					
ANR	104474	Callee	ff_match_2uint16		102247	0					
ANR	104475	Identifier	ff_match_2uint16		102247	0					
ANR	104476	ArgumentList	h263_format		102247	1					
ANR	104477	Argument	h263_format		102247	0					
ANR	104478	Identifier	h263_format		102247	0					
ANR	104479	Argument	FF_ARRAY_ELEMS ( h263_format )		102247	1					
ANR	104480	CallExpression	FF_ARRAY_ELEMS ( h263_format )		102247	0					
ANR	104481	Callee	FF_ARRAY_ELEMS		102247	0					
ANR	104482	Identifier	FF_ARRAY_ELEMS		102247	0					
ANR	104483	ArgumentList	h263_format		102247	1					
ANR	104484	Argument	h263_format		102247	0					
ANR	104485	Identifier	h263_format		102247	0					
ANR	104486	Argument	s -> width		102247	2					
ANR	104487	PtrMemberAccess	s -> width		102247	0					
ANR	104488	Identifier	s		102247	0					
ANR	104489	Identifier	width		102247	1					
ANR	104490	Argument	s -> height		102247	3					
ANR	104491	PtrMemberAccess	s -> height		102247	0					
ANR	104492	Identifier	s		102247	0					
ANR	104493	Identifier	height		102247	1					
ANR	104494	PrimaryExpression	8		102247	1					
ANR	104495	CompoundStatement		679:98:13731:13731	102247	1					
ANR	104496	ExpressionStatement	"av_log ( avctx , AV_LOG_INFO , ""The specified picture size of %dx%d is not valid for the H.263 codec.\\nValid sizes are 128x96, 176x144, 352x288, 704x576, and 1408x1152. Try H.263+.\\n"" , s -> width , s -> height )"	683:12:13799:14000	102247	0	True				
ANR	104497	CallExpression	"av_log ( avctx , AV_LOG_INFO , ""The specified picture size of %dx%d is not valid for the H.263 codec.\\nValid sizes are 128x96, 176x144, 352x288, 704x576, and 1408x1152. Try H.263+.\\n"" , s -> width , s -> height )"		102247	0					
ANR	104498	Callee	av_log		102247	0					
ANR	104499	Identifier	av_log		102247	0					
ANR	104500	ArgumentList	avctx		102247	1					
ANR	104501	Argument	avctx		102247	0					
ANR	104502	Identifier	avctx		102247	0					
ANR	104503	Argument	AV_LOG_INFO		102247	1					
ANR	104504	Identifier	AV_LOG_INFO		102247	0					
ANR	104505	Argument	"""The specified picture size of %dx%d is not valid for the H.263 codec.\\nValid sizes are 128x96, 176x144, 352x288, 704x576, and 1408x1152. Try H.263+.\\n"""		102247	2					
ANR	104506	PrimaryExpression	"""The specified picture size of %dx%d is not valid for the H.263 codec.\\nValid sizes are 128x96, 176x144, 352x288, 704x576, and 1408x1152. Try H.263+.\\n"""		102247	0					
ANR	104507	Argument	s -> width		102247	3					
ANR	104508	PtrMemberAccess	s -> width		102247	0					
ANR	104509	Identifier	s		102247	0					
ANR	104510	Identifier	width		102247	1					
ANR	104511	Argument	s -> height		102247	4					
ANR	104512	PtrMemberAccess	s -> height		102247	0					
ANR	104513	Identifier	s		102247	0					
ANR	104514	Identifier	height		102247	1					
ANR	104515	ReturnStatement	return - 1 ;	685:12:14015:14024	102247	1	True				
ANR	104516	UnaryOperationExpression	- 1		102247	0					
ANR	104517	UnaryOperator	-		102247	0					
ANR	104518	PrimaryExpression	1		102247	1					
ANR	104519	ExpressionStatement	s -> out_format = FMT_H263	689:8:14046:14070	102247	30	True				
ANR	104520	AssignmentExpression	s -> out_format = FMT_H263		102247	0		=			
ANR	104521	PtrMemberAccess	s -> out_format		102247	0					
ANR	104522	Identifier	s		102247	0					
ANR	104523	Identifier	out_format		102247	1					
ANR	104524	Identifier	FMT_H263		102247	1					
ANR	104525	ExpressionStatement	s -> obmc = ( avctx -> flags & CODEC_FLAG_OBMC ) ? 1 : 0	691:8:14081:14128	102247	31	True				
ANR	104526	AssignmentExpression	s -> obmc = ( avctx -> flags & CODEC_FLAG_OBMC ) ? 1 : 0		102247	0		=			
ANR	104527	PtrMemberAccess	s -> obmc		102247	0					
ANR	104528	Identifier	s		102247	0					
ANR	104529	Identifier	obmc		102247	1					
ANR	104530	ConditionalExpression	( avctx -> flags & CODEC_FLAG_OBMC ) ? 1 : 0		102247	1					
ANR	104531	Condition	avctx -> flags & CODEC_FLAG_OBMC		102247	0					
ANR	104532	BitAndExpression	avctx -> flags & CODEC_FLAG_OBMC		102247	0		&			
ANR	104533	PtrMemberAccess	avctx -> flags		102247	0					
ANR	104534	Identifier	avctx		102247	0					
ANR	104535	Identifier	flags		102247	1					
ANR	104536	Identifier	CODEC_FLAG_OBMC		102247	1					
ANR	104537	PrimaryExpression	1		102247	1					
ANR	104538	PrimaryExpression	0		102247	2					
ANR	104539	ExpressionStatement	avctx -> delay = 0	693:8:14139:14153	102247	32	True				
ANR	104540	AssignmentExpression	avctx -> delay = 0		102247	0		=			
ANR	104541	PtrMemberAccess	avctx -> delay		102247	0					
ANR	104542	Identifier	avctx		102247	0					
ANR	104543	Identifier	delay		102247	1					
ANR	104544	PrimaryExpression	0		102247	1					
ANR	104545	ExpressionStatement	s -> low_delay = 1	695:8:14164:14178	102247	33	True				
ANR	104546	AssignmentExpression	s -> low_delay = 1		102247	0		=			
ANR	104547	PtrMemberAccess	s -> low_delay		102247	0					
ANR	104548	Identifier	s		102247	0					
ANR	104549	Identifier	low_delay		102247	1					
ANR	104550	PrimaryExpression	1		102247	1					
ANR	104551	BreakStatement	break ;	697:8:14189:14194	102247	34	True				
ANR	104552	Label	case CODEC_ID_H263P :	699:4:14201:14220	102247	35	True				
ANR	104553	Identifier	CODEC_ID_H263P		102247	0					
ANR	104554	ExpressionStatement	s -> out_format = FMT_H263	701:8:14231:14255	102247	36	True				
ANR	104555	AssignmentExpression	s -> out_format = FMT_H263		102247	0		=			
ANR	104556	PtrMemberAccess	s -> out_format		102247	0					
ANR	104557	Identifier	s		102247	0					
ANR	104558	Identifier	out_format		102247	1					
ANR	104559	Identifier	FMT_H263		102247	1					
ANR	104560	ExpressionStatement	s -> h263_plus = 1	703:8:14266:14282	102247	37	True				
ANR	104561	AssignmentExpression	s -> h263_plus = 1		102247	0		=			
ANR	104562	PtrMemberAccess	s -> h263_plus		102247	0					
ANR	104563	Identifier	s		102247	0					
ANR	104564	Identifier	h263_plus		102247	1					
ANR	104565	PrimaryExpression	1		102247	1					
ANR	104566	ExpressionStatement	s -> umvplus = ( avctx -> flags & CODEC_FLAG_H263P_UMV ) ? 1 : 0	707:8:14311:14367	102247	38	True				
ANR	104567	AssignmentExpression	s -> umvplus = ( avctx -> flags & CODEC_FLAG_H263P_UMV ) ? 1 : 0		102247	0		=			
ANR	104568	PtrMemberAccess	s -> umvplus		102247	0					
ANR	104569	Identifier	s		102247	0					
ANR	104570	Identifier	umvplus		102247	1					
ANR	104571	ConditionalExpression	( avctx -> flags & CODEC_FLAG_H263P_UMV ) ? 1 : 0		102247	1					
ANR	104572	Condition	avctx -> flags & CODEC_FLAG_H263P_UMV		102247	0					
ANR	104573	BitAndExpression	avctx -> flags & CODEC_FLAG_H263P_UMV		102247	0		&			
ANR	104574	PtrMemberAccess	avctx -> flags		102247	0					
ANR	104575	Identifier	avctx		102247	0					
ANR	104576	Identifier	flags		102247	1					
ANR	104577	Identifier	CODEC_FLAG_H263P_UMV		102247	1					
ANR	104578	PrimaryExpression	1		102247	1					
ANR	104579	PrimaryExpression	0		102247	2					
ANR	104580	ExpressionStatement	s -> h263_aic = ( avctx -> flags & CODEC_FLAG_AC_PRED ) ? 1 : 0	709:8:14378:14432	102247	39	True				
ANR	104581	AssignmentExpression	s -> h263_aic = ( avctx -> flags & CODEC_FLAG_AC_PRED ) ? 1 : 0		102247	0		=			
ANR	104582	PtrMemberAccess	s -> h263_aic		102247	0					
ANR	104583	Identifier	s		102247	0					
ANR	104584	Identifier	h263_aic		102247	1					
ANR	104585	ConditionalExpression	( avctx -> flags & CODEC_FLAG_AC_PRED ) ? 1 : 0		102247	1					
ANR	104586	Condition	avctx -> flags & CODEC_FLAG_AC_PRED		102247	0					
ANR	104587	BitAndExpression	avctx -> flags & CODEC_FLAG_AC_PRED		102247	0		&			
ANR	104588	PtrMemberAccess	avctx -> flags		102247	0					
ANR	104589	Identifier	avctx		102247	0					
ANR	104590	Identifier	flags		102247	1					
ANR	104591	Identifier	CODEC_FLAG_AC_PRED		102247	1					
ANR	104592	PrimaryExpression	1		102247	1					
ANR	104593	PrimaryExpression	0		102247	2					
ANR	104594	ExpressionStatement	s -> modified_quant = s -> h263_aic	711:8:14443:14473	102247	40	True				
ANR	104595	AssignmentExpression	s -> modified_quant = s -> h263_aic		102247	0		=			
ANR	104596	PtrMemberAccess	s -> modified_quant		102247	0					
ANR	104597	Identifier	s		102247	0					
ANR	104598	Identifier	modified_quant		102247	1					
ANR	104599	PtrMemberAccess	s -> h263_aic		102247	1					
ANR	104600	Identifier	s		102247	0					
ANR	104601	Identifier	h263_aic		102247	1					
ANR	104602	ExpressionStatement	s -> alt_inter_vlc = ( avctx -> flags & CODEC_FLAG_H263P_AIV ) ? 1 : 0	713:8:14484:14545	102247	41	True				
ANR	104603	AssignmentExpression	s -> alt_inter_vlc = ( avctx -> flags & CODEC_FLAG_H263P_AIV ) ? 1 : 0		102247	0		=			
ANR	104604	PtrMemberAccess	s -> alt_inter_vlc		102247	0					
ANR	104605	Identifier	s		102247	0					
ANR	104606	Identifier	alt_inter_vlc		102247	1					
ANR	104607	ConditionalExpression	( avctx -> flags & CODEC_FLAG_H263P_AIV ) ? 1 : 0		102247	1					
ANR	104608	Condition	avctx -> flags & CODEC_FLAG_H263P_AIV		102247	0					
ANR	104609	BitAndExpression	avctx -> flags & CODEC_FLAG_H263P_AIV		102247	0		&			
ANR	104610	PtrMemberAccess	avctx -> flags		102247	0					
ANR	104611	Identifier	avctx		102247	0					
ANR	104612	Identifier	flags		102247	1					
ANR	104613	Identifier	CODEC_FLAG_H263P_AIV		102247	1					
ANR	104614	PrimaryExpression	1		102247	1					
ANR	104615	PrimaryExpression	0		102247	2					
ANR	104616	ExpressionStatement	s -> obmc = ( avctx -> flags & CODEC_FLAG_OBMC ) ? 1 : 0	715:8:14556:14603	102247	42	True				
ANR	104617	AssignmentExpression	s -> obmc = ( avctx -> flags & CODEC_FLAG_OBMC ) ? 1 : 0		102247	0		=			
ANR	104618	PtrMemberAccess	s -> obmc		102247	0					
ANR	104619	Identifier	s		102247	0					
ANR	104620	Identifier	obmc		102247	1					
ANR	104621	ConditionalExpression	( avctx -> flags & CODEC_FLAG_OBMC ) ? 1 : 0		102247	1					
ANR	104622	Condition	avctx -> flags & CODEC_FLAG_OBMC		102247	0					
ANR	104623	BitAndExpression	avctx -> flags & CODEC_FLAG_OBMC		102247	0		&			
ANR	104624	PtrMemberAccess	avctx -> flags		102247	0					
ANR	104625	Identifier	avctx		102247	0					
ANR	104626	Identifier	flags		102247	1					
ANR	104627	Identifier	CODEC_FLAG_OBMC		102247	1					
ANR	104628	PrimaryExpression	1		102247	1					
ANR	104629	PrimaryExpression	0		102247	2					
ANR	104630	ExpressionStatement	s -> loop_filter = ( avctx -> flags & CODEC_FLAG_LOOP_FILTER ) ? 1 : 0	717:8:14614:14675	102247	43	True				
ANR	104631	AssignmentExpression	s -> loop_filter = ( avctx -> flags & CODEC_FLAG_LOOP_FILTER ) ? 1 : 0		102247	0		=			
ANR	104632	PtrMemberAccess	s -> loop_filter		102247	0					
ANR	104633	Identifier	s		102247	0					
ANR	104634	Identifier	loop_filter		102247	1					
ANR	104635	ConditionalExpression	( avctx -> flags & CODEC_FLAG_LOOP_FILTER ) ? 1 : 0		102247	1					
ANR	104636	Condition	avctx -> flags & CODEC_FLAG_LOOP_FILTER		102247	0					
ANR	104637	BitAndExpression	avctx -> flags & CODEC_FLAG_LOOP_FILTER		102247	0		&			
ANR	104638	PtrMemberAccess	avctx -> flags		102247	0					
ANR	104639	Identifier	avctx		102247	0					
ANR	104640	Identifier	flags		102247	1					
ANR	104641	Identifier	CODEC_FLAG_LOOP_FILTER		102247	1					
ANR	104642	PrimaryExpression	1		102247	1					
ANR	104643	PrimaryExpression	0		102247	2					
ANR	104644	ExpressionStatement	s -> unrestricted_mv = s -> obmc || s -> loop_filter || s -> umvplus	719:8:14686:14745	102247	44	True				
ANR	104645	AssignmentExpression	s -> unrestricted_mv = s -> obmc || s -> loop_filter || s -> umvplus		102247	0		=			
ANR	104646	PtrMemberAccess	s -> unrestricted_mv		102247	0					
ANR	104647	Identifier	s		102247	0					
ANR	104648	Identifier	unrestricted_mv		102247	1					
ANR	104649	OrExpression	s -> obmc || s -> loop_filter || s -> umvplus		102247	1		||			
ANR	104650	PtrMemberAccess	s -> obmc		102247	0					
ANR	104651	Identifier	s		102247	0					
ANR	104652	Identifier	obmc		102247	1					
ANR	104653	OrExpression	s -> loop_filter || s -> umvplus		102247	1		||			
ANR	104654	PtrMemberAccess	s -> loop_filter		102247	0					
ANR	104655	Identifier	s		102247	0					
ANR	104656	Identifier	loop_filter		102247	1					
ANR	104657	PtrMemberAccess	s -> umvplus		102247	1					
ANR	104658	Identifier	s		102247	0					
ANR	104659	Identifier	umvplus		102247	1					
ANR	104660	ExpressionStatement	s -> h263_slice_structured = ( s -> flags & CODEC_FLAG_H263P_SLICE_STRUCT ) ? 1 : 0	721:8:14756:14830	102247	45	True				
ANR	104661	AssignmentExpression	s -> h263_slice_structured = ( s -> flags & CODEC_FLAG_H263P_SLICE_STRUCT ) ? 1 : 0		102247	0		=			
ANR	104662	PtrMemberAccess	s -> h263_slice_structured		102247	0					
ANR	104663	Identifier	s		102247	0					
ANR	104664	Identifier	h263_slice_structured		102247	1					
ANR	104665	ConditionalExpression	( s -> flags & CODEC_FLAG_H263P_SLICE_STRUCT ) ? 1 : 0		102247	1					
ANR	104666	Condition	s -> flags & CODEC_FLAG_H263P_SLICE_STRUCT		102247	0					
ANR	104667	BitAndExpression	s -> flags & CODEC_FLAG_H263P_SLICE_STRUCT		102247	0		&			
ANR	104668	PtrMemberAccess	s -> flags		102247	0					
ANR	104669	Identifier	s		102247	0					
ANR	104670	Identifier	flags		102247	1					
ANR	104671	Identifier	CODEC_FLAG_H263P_SLICE_STRUCT		102247	1					
ANR	104672	PrimaryExpression	1		102247	1					
ANR	104673	PrimaryExpression	0		102247	2					
ANR	104674	ExpressionStatement	avctx -> delay = 0	729:8:14903:14917	102247	46	True				
ANR	104675	AssignmentExpression	avctx -> delay = 0		102247	0		=			
ANR	104676	PtrMemberAccess	avctx -> delay		102247	0					
ANR	104677	Identifier	avctx		102247	0					
ANR	104678	Identifier	delay		102247	1					
ANR	104679	PrimaryExpression	0		102247	1					
ANR	104680	ExpressionStatement	s -> low_delay = 1	731:8:14928:14942	102247	47	True				
ANR	104681	AssignmentExpression	s -> low_delay = 1		102247	0		=			
ANR	104682	PtrMemberAccess	s -> low_delay		102247	0					
ANR	104683	Identifier	s		102247	0					
ANR	104684	Identifier	low_delay		102247	1					
ANR	104685	PrimaryExpression	1		102247	1					
ANR	104686	BreakStatement	break ;	733:8:14953:14958	102247	48	True				
ANR	104687	Label	case CODEC_ID_FLV1 :	735:4:14965:14983	102247	49	True				
ANR	104688	Identifier	CODEC_ID_FLV1		102247	0					
ANR	104689	ExpressionStatement	s -> out_format = FMT_H263	737:8:14994:15018	102247	50	True				
ANR	104690	AssignmentExpression	s -> out_format = FMT_H263		102247	0		=			
ANR	104691	PtrMemberAccess	s -> out_format		102247	0					
ANR	104692	Identifier	s		102247	0					
ANR	104693	Identifier	out_format		102247	1					
ANR	104694	Identifier	FMT_H263		102247	1					
ANR	104695	ExpressionStatement	s -> h263_flv = 2	739:8:15029:15044	102247	51	True				
ANR	104696	AssignmentExpression	s -> h263_flv = 2		102247	0		=			
ANR	104697	PtrMemberAccess	s -> h263_flv		102247	0					
ANR	104698	Identifier	s		102247	0					
ANR	104699	Identifier	h263_flv		102247	1					
ANR	104700	PrimaryExpression	2		102247	1					
ANR	104701	ExpressionStatement	s -> unrestricted_mv = 1	741:8:15086:15108	102247	52	True				
ANR	104702	AssignmentExpression	s -> unrestricted_mv = 1		102247	0		=			
ANR	104703	PtrMemberAccess	s -> unrestricted_mv		102247	0					
ANR	104704	Identifier	s		102247	0					
ANR	104705	Identifier	unrestricted_mv		102247	1					
ANR	104706	PrimaryExpression	1		102247	1					
ANR	104707	ExpressionStatement	s -> rtp_mode = 0	743:8:15119:15132	102247	53	True				
ANR	104708	AssignmentExpression	s -> rtp_mode = 0		102247	0		=			
ANR	104709	PtrMemberAccess	s -> rtp_mode		102247	0					
ANR	104710	Identifier	s		102247	0					
ANR	104711	Identifier	rtp_mode		102247	1					
ANR	104712	PrimaryExpression	0		102247	1					
ANR	104713	ExpressionStatement	avctx -> delay = 0	745:8:15165:15179	102247	54	True				
ANR	104714	AssignmentExpression	avctx -> delay = 0		102247	0		=			
ANR	104715	PtrMemberAccess	avctx -> delay		102247	0					
ANR	104716	Identifier	avctx		102247	0					
ANR	104717	Identifier	delay		102247	1					
ANR	104718	PrimaryExpression	0		102247	1					
ANR	104719	ExpressionStatement	s -> low_delay = 1	747:8:15190:15204	102247	55	True				
ANR	104720	AssignmentExpression	s -> low_delay = 1		102247	0		=			
ANR	104721	PtrMemberAccess	s -> low_delay		102247	0					
ANR	104722	Identifier	s		102247	0					
ANR	104723	Identifier	low_delay		102247	1					
ANR	104724	PrimaryExpression	1		102247	1					
ANR	104725	BreakStatement	break ;	749:8:15215:15220	102247	56	True				
ANR	104726	Label	case CODEC_ID_RV10 :	751:4:15227:15245	102247	57	True				
ANR	104727	Identifier	CODEC_ID_RV10		102247	0					
ANR	104728	ExpressionStatement	s -> out_format = FMT_H263	753:8:15256:15280	102247	58	True				
ANR	104729	AssignmentExpression	s -> out_format = FMT_H263		102247	0		=			
ANR	104730	PtrMemberAccess	s -> out_format		102247	0					
ANR	104731	Identifier	s		102247	0					
ANR	104732	Identifier	out_format		102247	1					
ANR	104733	Identifier	FMT_H263		102247	1					
ANR	104734	ExpressionStatement	avctx -> delay = 0	755:8:15291:15305	102247	59	True				
ANR	104735	AssignmentExpression	avctx -> delay = 0		102247	0		=			
ANR	104736	PtrMemberAccess	avctx -> delay		102247	0					
ANR	104737	Identifier	avctx		102247	0					
ANR	104738	Identifier	delay		102247	1					
ANR	104739	PrimaryExpression	0		102247	1					
ANR	104740	ExpressionStatement	s -> low_delay = 1	757:8:15316:15330	102247	60	True				
ANR	104741	AssignmentExpression	s -> low_delay = 1		102247	0		=			
ANR	104742	PtrMemberAccess	s -> low_delay		102247	0					
ANR	104743	Identifier	s		102247	0					
ANR	104744	Identifier	low_delay		102247	1					
ANR	104745	PrimaryExpression	1		102247	1					
ANR	104746	BreakStatement	break ;	759:8:15341:15346	102247	61	True				
ANR	104747	Label	case CODEC_ID_RV20 :	761:4:15353:15371	102247	62	True				
ANR	104748	Identifier	CODEC_ID_RV20		102247	0					
ANR	104749	ExpressionStatement	s -> out_format = FMT_H263	763:8:15382:15406	102247	63	True				
ANR	104750	AssignmentExpression	s -> out_format = FMT_H263		102247	0		=			
ANR	104751	PtrMemberAccess	s -> out_format		102247	0					
ANR	104752	Identifier	s		102247	0					
ANR	104753	Identifier	out_format		102247	1					
ANR	104754	Identifier	FMT_H263		102247	1					
ANR	104755	ExpressionStatement	avctx -> delay = 0	765:8:15417:15431	102247	64	True				
ANR	104756	AssignmentExpression	avctx -> delay = 0		102247	0		=			
ANR	104757	PtrMemberAccess	avctx -> delay		102247	0					
ANR	104758	Identifier	avctx		102247	0					
ANR	104759	Identifier	delay		102247	1					
ANR	104760	PrimaryExpression	0		102247	1					
ANR	104761	ExpressionStatement	s -> low_delay = 1	767:8:15442:15456	102247	65	True				
ANR	104762	AssignmentExpression	s -> low_delay = 1		102247	0		=			
ANR	104763	PtrMemberAccess	s -> low_delay		102247	0					
ANR	104764	Identifier	s		102247	0					
ANR	104765	Identifier	low_delay		102247	1					
ANR	104766	PrimaryExpression	1		102247	1					
ANR	104767	ExpressionStatement	s -> modified_quant = 1	769:8:15467:15486	102247	66	True				
ANR	104768	AssignmentExpression	s -> modified_quant = 1		102247	0		=			
ANR	104769	PtrMemberAccess	s -> modified_quant		102247	0					
ANR	104770	Identifier	s		102247	0					
ANR	104771	Identifier	modified_quant		102247	1					
ANR	104772	PrimaryExpression	1		102247	1					
ANR	104773	ExpressionStatement	s -> h263_aic = 1	771:8:15497:15510	102247	67	True				
ANR	104774	AssignmentExpression	s -> h263_aic = 1		102247	0		=			
ANR	104775	PtrMemberAccess	s -> h263_aic		102247	0					
ANR	104776	Identifier	s		102247	0					
ANR	104777	Identifier	h263_aic		102247	1					
ANR	104778	PrimaryExpression	1		102247	1					
ANR	104779	ExpressionStatement	s -> h263_plus = 1	773:8:15521:15535	102247	68	True				
ANR	104780	AssignmentExpression	s -> h263_plus = 1		102247	0		=			
ANR	104781	PtrMemberAccess	s -> h263_plus		102247	0					
ANR	104782	Identifier	s		102247	0					
ANR	104783	Identifier	h263_plus		102247	1					
ANR	104784	PrimaryExpression	1		102247	1					
ANR	104785	ExpressionStatement	s -> loop_filter = 1	775:8:15546:15562	102247	69	True				
ANR	104786	AssignmentExpression	s -> loop_filter = 1		102247	0		=			
ANR	104787	PtrMemberAccess	s -> loop_filter		102247	0					
ANR	104788	Identifier	s		102247	0					
ANR	104789	Identifier	loop_filter		102247	1					
ANR	104790	PrimaryExpression	1		102247	1					
ANR	104791	ExpressionStatement	s -> unrestricted_mv = 0	777:8:15573:15594	102247	70	True				
ANR	104792	AssignmentExpression	s -> unrestricted_mv = 0		102247	0		=			
ANR	104793	PtrMemberAccess	s -> unrestricted_mv		102247	0					
ANR	104794	Identifier	s		102247	0					
ANR	104795	Identifier	unrestricted_mv		102247	1					
ANR	104796	PrimaryExpression	0		102247	1					
ANR	104797	BreakStatement	break ;	779:8:15605:15610	102247	71	True				
ANR	104798	Label	case CODEC_ID_MPEG4 :	781:4:15617:15636	102247	72	True				
ANR	104799	Identifier	CODEC_ID_MPEG4		102247	0					
ANR	104800	ExpressionStatement	s -> out_format = FMT_H263	783:8:15647:15671	102247	73	True				
ANR	104801	AssignmentExpression	s -> out_format = FMT_H263		102247	0		=			
ANR	104802	PtrMemberAccess	s -> out_format		102247	0					
ANR	104803	Identifier	s		102247	0					
ANR	104804	Identifier	out_format		102247	1					
ANR	104805	Identifier	FMT_H263		102247	1					
ANR	104806	ExpressionStatement	s -> h263_pred = 1	785:8:15682:15698	102247	74	True				
ANR	104807	AssignmentExpression	s -> h263_pred = 1		102247	0		=			
ANR	104808	PtrMemberAccess	s -> h263_pred		102247	0					
ANR	104809	Identifier	s		102247	0					
ANR	104810	Identifier	h263_pred		102247	1					
ANR	104811	PrimaryExpression	1		102247	1					
ANR	104812	ExpressionStatement	s -> unrestricted_mv = 1	787:8:15709:15731	102247	75	True				
ANR	104813	AssignmentExpression	s -> unrestricted_mv = 1		102247	0		=			
ANR	104814	PtrMemberAccess	s -> unrestricted_mv		102247	0					
ANR	104815	Identifier	s		102247	0					
ANR	104816	Identifier	unrestricted_mv		102247	1					
ANR	104817	PrimaryExpression	1		102247	1					
ANR	104818	ExpressionStatement	s -> low_delay = s -> max_b_frames ? 0 : 1	789:8:15742:15779	102247	76	True				
ANR	104819	AssignmentExpression	s -> low_delay = s -> max_b_frames ? 0 : 1		102247	0		=			
ANR	104820	PtrMemberAccess	s -> low_delay		102247	0					
ANR	104821	Identifier	s		102247	0					
ANR	104822	Identifier	low_delay		102247	1					
ANR	104823	ConditionalExpression	s -> max_b_frames ? 0 : 1		102247	1					
ANR	104824	Condition	s -> max_b_frames		102247	0					
ANR	104825	PtrMemberAccess	s -> max_b_frames		102247	0					
ANR	104826	Identifier	s		102247	0					
ANR	104827	Identifier	max_b_frames		102247	1					
ANR	104828	PrimaryExpression	0		102247	1					
ANR	104829	PrimaryExpression	1		102247	2					
ANR	104830	ExpressionStatement	avctx -> delay = s -> low_delay ? 0 : ( s -> max_b_frames + 1 )	791:8:15790:15844	102247	77	True				
ANR	104831	AssignmentExpression	avctx -> delay = s -> low_delay ? 0 : ( s -> max_b_frames + 1 )		102247	0		=			
ANR	104832	PtrMemberAccess	avctx -> delay		102247	0					
ANR	104833	Identifier	avctx		102247	0					
ANR	104834	Identifier	delay		102247	1					
ANR	104835	ConditionalExpression	s -> low_delay ? 0 : ( s -> max_b_frames + 1 )		102247	1					
ANR	104836	Condition	s -> low_delay		102247	0					
ANR	104837	PtrMemberAccess	s -> low_delay		102247	0					
ANR	104838	Identifier	s		102247	0					
ANR	104839	Identifier	low_delay		102247	1					
ANR	104840	PrimaryExpression	0		102247	1					
ANR	104841	AdditiveExpression	s -> max_b_frames + 1		102247	2		+			
ANR	104842	PtrMemberAccess	s -> max_b_frames		102247	0					
ANR	104843	Identifier	s		102247	0					
ANR	104844	Identifier	max_b_frames		102247	1					
ANR	104845	PrimaryExpression	1		102247	1					
ANR	104846	BreakStatement	break ;	793:8:15855:15860	102247	78	True				
ANR	104847	Label	case CODEC_ID_MSMPEG4V1 :	795:4:15867:15890	102247	79	True				
ANR	104848	Identifier	CODEC_ID_MSMPEG4V1		102247	0					
ANR	104849	ExpressionStatement	s -> out_format = FMT_H263	797:8:15901:15925	102247	80	True				
ANR	104850	AssignmentExpression	s -> out_format = FMT_H263		102247	0		=			
ANR	104851	PtrMemberAccess	s -> out_format		102247	0					
ANR	104852	Identifier	s		102247	0					
ANR	104853	Identifier	out_format		102247	1					
ANR	104854	Identifier	FMT_H263		102247	1					
ANR	104855	ExpressionStatement	s -> h263_msmpeg4 = 1	799:8:15936:15955	102247	81	True				
ANR	104856	AssignmentExpression	s -> h263_msmpeg4 = 1		102247	0		=			
ANR	104857	PtrMemberAccess	s -> h263_msmpeg4		102247	0					
ANR	104858	Identifier	s		102247	0					
ANR	104859	Identifier	h263_msmpeg4		102247	1					
ANR	104860	PrimaryExpression	1		102247	1					
ANR	104861	ExpressionStatement	s -> h263_pred = 1	801:8:15966:15982	102247	82	True				
ANR	104862	AssignmentExpression	s -> h263_pred = 1		102247	0		=			
ANR	104863	PtrMemberAccess	s -> h263_pred		102247	0					
ANR	104864	Identifier	s		102247	0					
ANR	104865	Identifier	h263_pred		102247	1					
ANR	104866	PrimaryExpression	1		102247	1					
ANR	104867	ExpressionStatement	s -> unrestricted_mv = 1	803:8:15993:16015	102247	83	True				
ANR	104868	AssignmentExpression	s -> unrestricted_mv = 1		102247	0		=			
ANR	104869	PtrMemberAccess	s -> unrestricted_mv		102247	0					
ANR	104870	Identifier	s		102247	0					
ANR	104871	Identifier	unrestricted_mv		102247	1					
ANR	104872	PrimaryExpression	1		102247	1					
ANR	104873	ExpressionStatement	s -> msmpeg4_version = 1	805:8:16026:16047	102247	84	True				
ANR	104874	AssignmentExpression	s -> msmpeg4_version = 1		102247	0		=			
ANR	104875	PtrMemberAccess	s -> msmpeg4_version		102247	0					
ANR	104876	Identifier	s		102247	0					
ANR	104877	Identifier	msmpeg4_version		102247	1					
ANR	104878	PrimaryExpression	1		102247	1					
ANR	104879	ExpressionStatement	avctx -> delay = 0	807:8:16058:16072	102247	85	True				
ANR	104880	AssignmentExpression	avctx -> delay = 0		102247	0		=			
ANR	104881	PtrMemberAccess	avctx -> delay		102247	0					
ANR	104882	Identifier	avctx		102247	0					
ANR	104883	Identifier	delay		102247	1					
ANR	104884	PrimaryExpression	0		102247	1					
ANR	104885	ExpressionStatement	s -> low_delay = 1	809:8:16083:16097	102247	86	True				
ANR	104886	AssignmentExpression	s -> low_delay = 1		102247	0		=			
ANR	104887	PtrMemberAccess	s -> low_delay		102247	0					
ANR	104888	Identifier	s		102247	0					
ANR	104889	Identifier	low_delay		102247	1					
ANR	104890	PrimaryExpression	1		102247	1					
ANR	104891	BreakStatement	break ;	811:8:16108:16113	102247	87	True				
ANR	104892	Label	case CODEC_ID_MSMPEG4V2 :	813:4:16120:16143	102247	88	True				
ANR	104893	Identifier	CODEC_ID_MSMPEG4V2		102247	0					
ANR	104894	ExpressionStatement	s -> out_format = FMT_H263	815:8:16154:16178	102247	89	True				
ANR	104895	AssignmentExpression	s -> out_format = FMT_H263		102247	0		=			
ANR	104896	PtrMemberAccess	s -> out_format		102247	0					
ANR	104897	Identifier	s		102247	0					
ANR	104898	Identifier	out_format		102247	1					
ANR	104899	Identifier	FMT_H263		102247	1					
ANR	104900	ExpressionStatement	s -> h263_msmpeg4 = 1	817:8:16189:16208	102247	90	True				
ANR	104901	AssignmentExpression	s -> h263_msmpeg4 = 1		102247	0		=			
ANR	104902	PtrMemberAccess	s -> h263_msmpeg4		102247	0					
ANR	104903	Identifier	s		102247	0					
ANR	104904	Identifier	h263_msmpeg4		102247	1					
ANR	104905	PrimaryExpression	1		102247	1					
ANR	104906	ExpressionStatement	s -> h263_pred = 1	819:8:16219:16235	102247	91	True				
ANR	104907	AssignmentExpression	s -> h263_pred = 1		102247	0		=			
ANR	104908	PtrMemberAccess	s -> h263_pred		102247	0					
ANR	104909	Identifier	s		102247	0					
ANR	104910	Identifier	h263_pred		102247	1					
ANR	104911	PrimaryExpression	1		102247	1					
ANR	104912	ExpressionStatement	s -> unrestricted_mv = 1	821:8:16246:16268	102247	92	True				
ANR	104913	AssignmentExpression	s -> unrestricted_mv = 1		102247	0		=			
ANR	104914	PtrMemberAccess	s -> unrestricted_mv		102247	0					
ANR	104915	Identifier	s		102247	0					
ANR	104916	Identifier	unrestricted_mv		102247	1					
ANR	104917	PrimaryExpression	1		102247	1					
ANR	104918	ExpressionStatement	s -> msmpeg4_version = 2	823:8:16279:16300	102247	93	True				
ANR	104919	AssignmentExpression	s -> msmpeg4_version = 2		102247	0		=			
ANR	104920	PtrMemberAccess	s -> msmpeg4_version		102247	0					
ANR	104921	Identifier	s		102247	0					
ANR	104922	Identifier	msmpeg4_version		102247	1					
ANR	104923	PrimaryExpression	2		102247	1					
ANR	104924	ExpressionStatement	avctx -> delay = 0	825:8:16311:16325	102247	94	True				
ANR	104925	AssignmentExpression	avctx -> delay = 0		102247	0		=			
ANR	104926	PtrMemberAccess	avctx -> delay		102247	0					
ANR	104927	Identifier	avctx		102247	0					
ANR	104928	Identifier	delay		102247	1					
ANR	104929	PrimaryExpression	0		102247	1					
ANR	104930	ExpressionStatement	s -> low_delay = 1	827:8:16336:16350	102247	95	True				
ANR	104931	AssignmentExpression	s -> low_delay = 1		102247	0		=			
ANR	104932	PtrMemberAccess	s -> low_delay		102247	0					
ANR	104933	Identifier	s		102247	0					
ANR	104934	Identifier	low_delay		102247	1					
ANR	104935	PrimaryExpression	1		102247	1					
ANR	104936	BreakStatement	break ;	829:8:16361:16366	102247	96	True				
ANR	104937	Label	case CODEC_ID_MSMPEG4V3 :	831:4:16373:16396	102247	97	True				
ANR	104938	Identifier	CODEC_ID_MSMPEG4V3		102247	0					
ANR	104939	ExpressionStatement	s -> out_format = FMT_H263	833:8:16407:16431	102247	98	True				
ANR	104940	AssignmentExpression	s -> out_format = FMT_H263		102247	0		=			
ANR	104941	PtrMemberAccess	s -> out_format		102247	0					
ANR	104942	Identifier	s		102247	0					
ANR	104943	Identifier	out_format		102247	1					
ANR	104944	Identifier	FMT_H263		102247	1					
ANR	104945	ExpressionStatement	s -> h263_msmpeg4 = 1	835:8:16442:16461	102247	99	True				
ANR	104946	AssignmentExpression	s -> h263_msmpeg4 = 1		102247	0		=			
ANR	104947	PtrMemberAccess	s -> h263_msmpeg4		102247	0					
ANR	104948	Identifier	s		102247	0					
ANR	104949	Identifier	h263_msmpeg4		102247	1					
ANR	104950	PrimaryExpression	1		102247	1					
ANR	104951	ExpressionStatement	s -> h263_pred = 1	837:8:16472:16488	102247	100	True				
ANR	104952	AssignmentExpression	s -> h263_pred = 1		102247	0		=			
ANR	104953	PtrMemberAccess	s -> h263_pred		102247	0					
ANR	104954	Identifier	s		102247	0					
ANR	104955	Identifier	h263_pred		102247	1					
ANR	104956	PrimaryExpression	1		102247	1					
ANR	104957	ExpressionStatement	s -> unrestricted_mv = 1	839:8:16499:16521	102247	101	True				
ANR	104958	AssignmentExpression	s -> unrestricted_mv = 1		102247	0		=			
ANR	104959	PtrMemberAccess	s -> unrestricted_mv		102247	0					
ANR	104960	Identifier	s		102247	0					
ANR	104961	Identifier	unrestricted_mv		102247	1					
ANR	104962	PrimaryExpression	1		102247	1					
ANR	104963	ExpressionStatement	s -> msmpeg4_version = 3	841:8:16532:16553	102247	102	True				
ANR	104964	AssignmentExpression	s -> msmpeg4_version = 3		102247	0		=			
ANR	104965	PtrMemberAccess	s -> msmpeg4_version		102247	0					
ANR	104966	Identifier	s		102247	0					
ANR	104967	Identifier	msmpeg4_version		102247	1					
ANR	104968	PrimaryExpression	3		102247	1					
ANR	104969	ExpressionStatement	s -> flipflop_rounding = 1	843:8:16564:16586	102247	103	True				
ANR	104970	AssignmentExpression	s -> flipflop_rounding = 1		102247	0		=			
ANR	104971	PtrMemberAccess	s -> flipflop_rounding		102247	0					
ANR	104972	Identifier	s		102247	0					
ANR	104973	Identifier	flipflop_rounding		102247	1					
ANR	104974	PrimaryExpression	1		102247	1					
ANR	104975	ExpressionStatement	avctx -> delay = 0	845:8:16597:16611	102247	104	True				
ANR	104976	AssignmentExpression	avctx -> delay = 0		102247	0		=			
ANR	104977	PtrMemberAccess	avctx -> delay		102247	0					
ANR	104978	Identifier	avctx		102247	0					
ANR	104979	Identifier	delay		102247	1					
ANR	104980	PrimaryExpression	0		102247	1					
ANR	104981	ExpressionStatement	s -> low_delay = 1	847:8:16622:16636	102247	105	True				
ANR	104982	AssignmentExpression	s -> low_delay = 1		102247	0		=			
ANR	104983	PtrMemberAccess	s -> low_delay		102247	0					
ANR	104984	Identifier	s		102247	0					
ANR	104985	Identifier	low_delay		102247	1					
ANR	104986	PrimaryExpression	1		102247	1					
ANR	104987	BreakStatement	break ;	849:8:16647:16652	102247	106	True				
ANR	104988	Label	case CODEC_ID_WMV1 :	851:4:16659:16677	102247	107	True				
ANR	104989	Identifier	CODEC_ID_WMV1		102247	0					
ANR	104990	ExpressionStatement	s -> out_format = FMT_H263	853:8:16688:16712	102247	108	True				
ANR	104991	AssignmentExpression	s -> out_format = FMT_H263		102247	0		=			
ANR	104992	PtrMemberAccess	s -> out_format		102247	0					
ANR	104993	Identifier	s		102247	0					
ANR	104994	Identifier	out_format		102247	1					
ANR	104995	Identifier	FMT_H263		102247	1					
ANR	104996	ExpressionStatement	s -> h263_msmpeg4 = 1	855:8:16723:16742	102247	109	True				
ANR	104997	AssignmentExpression	s -> h263_msmpeg4 = 1		102247	0		=			
ANR	104998	PtrMemberAccess	s -> h263_msmpeg4		102247	0					
ANR	104999	Identifier	s		102247	0					
ANR	105000	Identifier	h263_msmpeg4		102247	1					
ANR	105001	PrimaryExpression	1		102247	1					
ANR	105002	ExpressionStatement	s -> h263_pred = 1	857:8:16753:16769	102247	110	True				
ANR	105003	AssignmentExpression	s -> h263_pred = 1		102247	0		=			
ANR	105004	PtrMemberAccess	s -> h263_pred		102247	0					
ANR	105005	Identifier	s		102247	0					
ANR	105006	Identifier	h263_pred		102247	1					
ANR	105007	PrimaryExpression	1		102247	1					
ANR	105008	ExpressionStatement	s -> unrestricted_mv = 1	859:8:16780:16802	102247	111	True				
ANR	105009	AssignmentExpression	s -> unrestricted_mv = 1		102247	0		=			
ANR	105010	PtrMemberAccess	s -> unrestricted_mv		102247	0					
ANR	105011	Identifier	s		102247	0					
ANR	105012	Identifier	unrestricted_mv		102247	1					
ANR	105013	PrimaryExpression	1		102247	1					
ANR	105014	ExpressionStatement	s -> msmpeg4_version = 4	861:8:16813:16834	102247	112	True				
ANR	105015	AssignmentExpression	s -> msmpeg4_version = 4		102247	0		=			
ANR	105016	PtrMemberAccess	s -> msmpeg4_version		102247	0					
ANR	105017	Identifier	s		102247	0					
ANR	105018	Identifier	msmpeg4_version		102247	1					
ANR	105019	PrimaryExpression	4		102247	1					
ANR	105020	ExpressionStatement	s -> flipflop_rounding = 1	863:8:16845:16867	102247	113	True				
ANR	105021	AssignmentExpression	s -> flipflop_rounding = 1		102247	0		=			
ANR	105022	PtrMemberAccess	s -> flipflop_rounding		102247	0					
ANR	105023	Identifier	s		102247	0					
ANR	105024	Identifier	flipflop_rounding		102247	1					
ANR	105025	PrimaryExpression	1		102247	1					
ANR	105026	ExpressionStatement	avctx -> delay = 0	865:8:16878:16892	102247	114	True				
ANR	105027	AssignmentExpression	avctx -> delay = 0		102247	0		=			
ANR	105028	PtrMemberAccess	avctx -> delay		102247	0					
ANR	105029	Identifier	avctx		102247	0					
ANR	105030	Identifier	delay		102247	1					
ANR	105031	PrimaryExpression	0		102247	1					
ANR	105032	ExpressionStatement	s -> low_delay = 1	867:8:16903:16917	102247	115	True				
ANR	105033	AssignmentExpression	s -> low_delay = 1		102247	0		=			
ANR	105034	PtrMemberAccess	s -> low_delay		102247	0					
ANR	105035	Identifier	s		102247	0					
ANR	105036	Identifier	low_delay		102247	1					
ANR	105037	PrimaryExpression	1		102247	1					
ANR	105038	BreakStatement	break ;	869:8:16928:16933	102247	116	True				
ANR	105039	Label	case CODEC_ID_WMV2 :	871:4:16940:16958	102247	117	True				
ANR	105040	Identifier	CODEC_ID_WMV2		102247	0					
ANR	105041	ExpressionStatement	s -> out_format = FMT_H263	873:8:16969:16993	102247	118	True				
ANR	105042	AssignmentExpression	s -> out_format = FMT_H263		102247	0		=			
ANR	105043	PtrMemberAccess	s -> out_format		102247	0					
ANR	105044	Identifier	s		102247	0					
ANR	105045	Identifier	out_format		102247	1					
ANR	105046	Identifier	FMT_H263		102247	1					
ANR	105047	ExpressionStatement	s -> h263_msmpeg4 = 1	875:8:17004:17023	102247	119	True				
ANR	105048	AssignmentExpression	s -> h263_msmpeg4 = 1		102247	0		=			
ANR	105049	PtrMemberAccess	s -> h263_msmpeg4		102247	0					
ANR	105050	Identifier	s		102247	0					
ANR	105051	Identifier	h263_msmpeg4		102247	1					
ANR	105052	PrimaryExpression	1		102247	1					
ANR	105053	ExpressionStatement	s -> h263_pred = 1	877:8:17034:17050	102247	120	True				
ANR	105054	AssignmentExpression	s -> h263_pred = 1		102247	0		=			
ANR	105055	PtrMemberAccess	s -> h263_pred		102247	0					
ANR	105056	Identifier	s		102247	0					
ANR	105057	Identifier	h263_pred		102247	1					
ANR	105058	PrimaryExpression	1		102247	1					
ANR	105059	ExpressionStatement	s -> unrestricted_mv = 1	879:8:17061:17083	102247	121	True				
ANR	105060	AssignmentExpression	s -> unrestricted_mv = 1		102247	0		=			
ANR	105061	PtrMemberAccess	s -> unrestricted_mv		102247	0					
ANR	105062	Identifier	s		102247	0					
ANR	105063	Identifier	unrestricted_mv		102247	1					
ANR	105064	PrimaryExpression	1		102247	1					
ANR	105065	ExpressionStatement	s -> msmpeg4_version = 5	881:8:17094:17115	102247	122	True				
ANR	105066	AssignmentExpression	s -> msmpeg4_version = 5		102247	0		=			
ANR	105067	PtrMemberAccess	s -> msmpeg4_version		102247	0					
ANR	105068	Identifier	s		102247	0					
ANR	105069	Identifier	msmpeg4_version		102247	1					
ANR	105070	PrimaryExpression	5		102247	1					
ANR	105071	ExpressionStatement	s -> flipflop_rounding = 1	883:8:17126:17148	102247	123	True				
ANR	105072	AssignmentExpression	s -> flipflop_rounding = 1		102247	0		=			
ANR	105073	PtrMemberAccess	s -> flipflop_rounding		102247	0					
ANR	105074	Identifier	s		102247	0					
ANR	105075	Identifier	flipflop_rounding		102247	1					
ANR	105076	PrimaryExpression	1		102247	1					
ANR	105077	ExpressionStatement	avctx -> delay = 0	885:8:17159:17173	102247	124	True				
ANR	105078	AssignmentExpression	avctx -> delay = 0		102247	0		=			
ANR	105079	PtrMemberAccess	avctx -> delay		102247	0					
ANR	105080	Identifier	avctx		102247	0					
ANR	105081	Identifier	delay		102247	1					
ANR	105082	PrimaryExpression	0		102247	1					
ANR	105083	ExpressionStatement	s -> low_delay = 1	887:8:17184:17198	102247	125	True				
ANR	105084	AssignmentExpression	s -> low_delay = 1		102247	0		=			
ANR	105085	PtrMemberAccess	s -> low_delay		102247	0					
ANR	105086	Identifier	s		102247	0					
ANR	105087	Identifier	low_delay		102247	1					
ANR	105088	PrimaryExpression	1		102247	1					
ANR	105089	BreakStatement	break ;	889:8:17209:17214	102247	126	True				
ANR	105090	Label	default :	891:4:17221:17228	102247	127	True				
ANR	105091	Identifier	default		102247	0					
ANR	105092	ReturnStatement	return - 1 ;	893:8:17239:17248	102247	128	True				
ANR	105093	UnaryOperationExpression	- 1		102247	0					
ANR	105094	UnaryOperator	-		102247	0					
ANR	105095	PrimaryExpression	1		102247	1					
ANR	105096	ExpressionStatement	avctx -> has_b_frames = ! s -> low_delay	899:4:17264:17298	102247	128	True				
ANR	105097	AssignmentExpression	avctx -> has_b_frames = ! s -> low_delay		102247	0		=			
ANR	105098	PtrMemberAccess	avctx -> has_b_frames		102247	0					
ANR	105099	Identifier	avctx		102247	0					
ANR	105100	Identifier	has_b_frames		102247	1					
ANR	105101	UnaryOperationExpression	! s -> low_delay		102247	1					
ANR	105102	UnaryOperator	!		102247	0					
ANR	105103	PtrMemberAccess	s -> low_delay		102247	1					
ANR	105104	Identifier	s		102247	0					
ANR	105105	Identifier	low_delay		102247	1					
ANR	105106	ExpressionStatement	s -> encoding = 1	903:4:17307:17322	102247	129	True				
ANR	105107	AssignmentExpression	s -> encoding = 1		102247	0		=			
ANR	105108	PtrMemberAccess	s -> encoding		102247	0					
ANR	105109	Identifier	s		102247	0					
ANR	105110	Identifier	encoding		102247	1					
ANR	105111	PrimaryExpression	1		102247	1					
ANR	105112	ExpressionStatement	s -> progressive_frame = s -> progressive_sequence = ! ( avctx -> flags & ( CODEC_FLAG_INTERLACED_DCT | CODEC_FLAG_INTERLACED_ME | CODEC_FLAG_ALT_SCAN ) )	907:4:17331:17473	102247	130	True				
ANR	105113	AssignmentExpression	s -> progressive_frame = s -> progressive_sequence = ! ( avctx -> flags & ( CODEC_FLAG_INTERLACED_DCT | CODEC_FLAG_INTERLACED_ME | CODEC_FLAG_ALT_SCAN ) )		102247	0		=			
ANR	105114	PtrMemberAccess	s -> progressive_frame		102247	0					
ANR	105115	Identifier	s		102247	0					
ANR	105116	Identifier	progressive_frame		102247	1					
ANR	105117	AssignmentExpression	s -> progressive_sequence = ! ( avctx -> flags & ( CODEC_FLAG_INTERLACED_DCT | CODEC_FLAG_INTERLACED_ME | CODEC_FLAG_ALT_SCAN ) )		102247	1		=			
ANR	105118	PtrMemberAccess	s -> progressive_sequence		102247	0					
ANR	105119	Identifier	s		102247	0					
ANR	105120	Identifier	progressive_sequence		102247	1					
ANR	105121	UnaryOperationExpression	! ( avctx -> flags & ( CODEC_FLAG_INTERLACED_DCT | CODEC_FLAG_INTERLACED_ME | CODEC_FLAG_ALT_SCAN ) )		102247	1					
ANR	105122	UnaryOperator	!		102247	0					
ANR	105123	BitAndExpression	avctx -> flags & ( CODEC_FLAG_INTERLACED_DCT | CODEC_FLAG_INTERLACED_ME | CODEC_FLAG_ALT_SCAN )		102247	1		&			
ANR	105124	PtrMemberAccess	avctx -> flags		102247	0					
ANR	105125	Identifier	avctx		102247	0					
ANR	105126	Identifier	flags		102247	1					
ANR	105127	InclusiveOrExpression	CODEC_FLAG_INTERLACED_DCT | CODEC_FLAG_INTERLACED_ME | CODEC_FLAG_ALT_SCAN		102247	1		|			
ANR	105128	Identifier	CODEC_FLAG_INTERLACED_DCT		102247	0					
ANR	105129	InclusiveOrExpression	CODEC_FLAG_INTERLACED_ME | CODEC_FLAG_ALT_SCAN		102247	1		|			
ANR	105130	Identifier	CODEC_FLAG_INTERLACED_ME		102247	0					
ANR	105131	Identifier	CODEC_FLAG_ALT_SCAN		102247	1					
ANR	105132	IfStatement	if ( MPV_common_init ( s ) < 0 )		102247	131					
ANR	105133	Condition	MPV_common_init ( s ) < 0	915:8:17502:17523	102247	0	True				
ANR	105134	RelationalExpression	MPV_common_init ( s ) < 0		102247	0		<			
ANR	105135	CallExpression	MPV_common_init ( s )		102247	0					
ANR	105136	Callee	MPV_common_init		102247	0					
ANR	105137	Identifier	MPV_common_init		102247	0					
ANR	105138	ArgumentList	s		102247	1					
ANR	105139	Argument	s		102247	0					
ANR	105140	Identifier	s		102247	0					
ANR	105141	PrimaryExpression	0		102247	1					
ANR	105142	ReturnStatement	return - 1 ;	917:8:17535:17544	102247	1	True				
ANR	105143	UnaryOperationExpression	- 1		102247	0					
ANR	105144	UnaryOperator	-		102247	0					
ANR	105145	PrimaryExpression	1		102247	1					
ANR	105146	IfStatement	if ( ! s -> dct_quantize )		102247	132					
ANR	105147	Condition	! s -> dct_quantize	921:7:17556:17571	102247	0	True				
ANR	105148	UnaryOperationExpression	! s -> dct_quantize		102247	0					
ANR	105149	UnaryOperator	!		102247	0					
ANR	105150	PtrMemberAccess	s -> dct_quantize		102247	1					
ANR	105151	Identifier	s		102247	0					
ANR	105152	Identifier	dct_quantize		102247	1					
ANR	105153	ExpressionStatement	s -> dct_quantize = dct_quantize_c	923:8:17583:17615	102247	1	True				
ANR	105154	AssignmentExpression	s -> dct_quantize = dct_quantize_c		102247	0		=			
ANR	105155	PtrMemberAccess	s -> dct_quantize		102247	0					
ANR	105156	Identifier	s		102247	0					
ANR	105157	Identifier	dct_quantize		102247	1					
ANR	105158	Identifier	dct_quantize_c		102247	1					
ANR	105159	IfStatement	if ( ! s -> denoise_dct )		102247	133					
ANR	105160	Condition	! s -> denoise_dct	925:7:17625:17639	102247	0	True				
ANR	105161	UnaryOperationExpression	! s -> denoise_dct		102247	0					
ANR	105162	UnaryOperator	!		102247	0					
ANR	105163	PtrMemberAccess	s -> denoise_dct		102247	1					
ANR	105164	Identifier	s		102247	0					
ANR	105165	Identifier	denoise_dct		102247	1					
ANR	105166	ExpressionStatement	s -> denoise_dct = denoise_dct_c	927:8:17651:17681	102247	1	True				
ANR	105167	AssignmentExpression	s -> denoise_dct = denoise_dct_c		102247	0		=			
ANR	105168	PtrMemberAccess	s -> denoise_dct		102247	0					
ANR	105169	Identifier	s		102247	0					
ANR	105170	Identifier	denoise_dct		102247	1					
ANR	105171	Identifier	denoise_dct_c		102247	1					
ANR	105172	ExpressionStatement	s -> fast_dct_quantize = s -> dct_quantize	929:4:17688:17726	102247	134	True				
ANR	105173	AssignmentExpression	s -> fast_dct_quantize = s -> dct_quantize		102247	0		=			
ANR	105174	PtrMemberAccess	s -> fast_dct_quantize		102247	0					
ANR	105175	Identifier	s		102247	0					
ANR	105176	Identifier	fast_dct_quantize		102247	1					
ANR	105177	PtrMemberAccess	s -> dct_quantize		102247	1					
ANR	105178	Identifier	s		102247	0					
ANR	105179	Identifier	dct_quantize		102247	1					
ANR	105180	IfStatement	if ( avctx -> trellis )		102247	135					
ANR	105181	Condition	avctx -> trellis	931:7:17736:17749	102247	0	True				
ANR	105182	PtrMemberAccess	avctx -> trellis		102247	0					
ANR	105183	Identifier	avctx		102247	0					
ANR	105184	Identifier	trellis		102247	1					
ANR	105185	ExpressionStatement	s -> dct_quantize = dct_quantize_trellis_c	933:8:17761:17801	102247	1	True				
ANR	105186	AssignmentExpression	s -> dct_quantize = dct_quantize_trellis_c		102247	0		=			
ANR	105187	PtrMemberAccess	s -> dct_quantize		102247	0					
ANR	105188	Identifier	s		102247	0					
ANR	105189	Identifier	dct_quantize		102247	1					
ANR	105190	Identifier	dct_quantize_trellis_c		102247	1					
ANR	105191	IfStatement	if ( ( CONFIG_H263P_ENCODER || CONFIG_RV20_ENCODER ) && s -> modified_quant )		102247	136					
ANR	105192	Condition	( CONFIG_H263P_ENCODER || CONFIG_RV20_ENCODER ) && s -> modified_quant	937:7:17813:17878	102247	0	True				
ANR	105193	AndExpression	( CONFIG_H263P_ENCODER || CONFIG_RV20_ENCODER ) && s -> modified_quant		102247	0		&&			
ANR	105194	OrExpression	CONFIG_H263P_ENCODER || CONFIG_RV20_ENCODER		102247	0		||			
ANR	105195	Identifier	CONFIG_H263P_ENCODER		102247	0					
ANR	105196	Identifier	CONFIG_RV20_ENCODER		102247	1					
ANR	105197	PtrMemberAccess	s -> modified_quant		102247	1					
ANR	105198	Identifier	s		102247	0					
ANR	105199	Identifier	modified_quant		102247	1					
ANR	105200	ExpressionStatement	s -> chroma_qscale_table = ff_h263_chroma_qscale_table	939:8:17890:17941	102247	1	True				
ANR	105201	AssignmentExpression	s -> chroma_qscale_table = ff_h263_chroma_qscale_table		102247	0		=			
ANR	105202	PtrMemberAccess	s -> chroma_qscale_table		102247	0					
ANR	105203	Identifier	s		102247	0					
ANR	105204	Identifier	chroma_qscale_table		102247	1					
ANR	105205	Identifier	ff_h263_chroma_qscale_table		102247	1					
ANR	105206	ExpressionStatement	s -> quant_precision = 5	943:4:17950:17970	102247	137	True				
ANR	105207	AssignmentExpression	s -> quant_precision = 5		102247	0		=			
ANR	105208	PtrMemberAccess	s -> quant_precision		102247	0					
ANR	105209	Identifier	s		102247	0					
ANR	105210	Identifier	quant_precision		102247	1					
ANR	105211	PrimaryExpression	5		102247	1					
ANR	105212	ExpressionStatement	"ff_set_cmp ( & s -> dsp , s -> dsp . ildct_cmp , s -> avctx -> ildct_cmp )"	947:4:17979:18037	102247	138	True				
ANR	105213	CallExpression	"ff_set_cmp ( & s -> dsp , s -> dsp . ildct_cmp , s -> avctx -> ildct_cmp )"		102247	0					
ANR	105214	Callee	ff_set_cmp		102247	0					
ANR	105215	Identifier	ff_set_cmp		102247	0					
ANR	105216	ArgumentList	& s -> dsp		102247	1					
ANR	105217	Argument	& s -> dsp		102247	0					
ANR	105218	UnaryOperationExpression	& s -> dsp		102247	0					
ANR	105219	UnaryOperator	&		102247	0					
ANR	105220	PtrMemberAccess	s -> dsp		102247	1					
ANR	105221	Identifier	s		102247	0					
ANR	105222	Identifier	dsp		102247	1					
ANR	105223	Argument	s -> dsp . ildct_cmp		102247	1					
ANR	105224	MemberAccess	s -> dsp . ildct_cmp		102247	0					
ANR	105225	PtrMemberAccess	s -> dsp		102247	0					
ANR	105226	Identifier	s		102247	0					
ANR	105227	Identifier	dsp		102247	1					
ANR	105228	Identifier	ildct_cmp		102247	1					
ANR	105229	Argument	s -> avctx -> ildct_cmp		102247	2					
ANR	105230	PtrMemberAccess	s -> avctx -> ildct_cmp		102247	0					
ANR	105231	PtrMemberAccess	s -> avctx		102247	0					
ANR	105232	Identifier	s		102247	0					
ANR	105233	Identifier	avctx		102247	1					
ANR	105234	Identifier	ildct_cmp		102247	1					
ANR	105235	ExpressionStatement	"ff_set_cmp ( & s -> dsp , s -> dsp . frame_skip_cmp , s -> avctx -> frame_skip_cmp )"	949:4:18044:18112	102247	139	True				
ANR	105236	CallExpression	"ff_set_cmp ( & s -> dsp , s -> dsp . frame_skip_cmp , s -> avctx -> frame_skip_cmp )"		102247	0					
ANR	105237	Callee	ff_set_cmp		102247	0					
ANR	105238	Identifier	ff_set_cmp		102247	0					
ANR	105239	ArgumentList	& s -> dsp		102247	1					
ANR	105240	Argument	& s -> dsp		102247	0					
ANR	105241	UnaryOperationExpression	& s -> dsp		102247	0					
ANR	105242	UnaryOperator	&		102247	0					
ANR	105243	PtrMemberAccess	s -> dsp		102247	1					
ANR	105244	Identifier	s		102247	0					
ANR	105245	Identifier	dsp		102247	1					
ANR	105246	Argument	s -> dsp . frame_skip_cmp		102247	1					
ANR	105247	MemberAccess	s -> dsp . frame_skip_cmp		102247	0					
ANR	105248	PtrMemberAccess	s -> dsp		102247	0					
ANR	105249	Identifier	s		102247	0					
ANR	105250	Identifier	dsp		102247	1					
ANR	105251	Identifier	frame_skip_cmp		102247	1					
ANR	105252	Argument	s -> avctx -> frame_skip_cmp		102247	2					
ANR	105253	PtrMemberAccess	s -> avctx -> frame_skip_cmp		102247	0					
ANR	105254	PtrMemberAccess	s -> avctx		102247	0					
ANR	105255	Identifier	s		102247	0					
ANR	105256	Identifier	avctx		102247	1					
ANR	105257	Identifier	frame_skip_cmp		102247	1					
ANR	105258	IfStatement	if ( CONFIG_H261_ENCODER && s -> out_format == FMT_H261 )		102247	140					
ANR	105259	Condition	CONFIG_H261_ENCODER && s -> out_format == FMT_H261	953:8:18125:18172	102247	0	True				
ANR	105260	AndExpression	CONFIG_H261_ENCODER && s -> out_format == FMT_H261		102247	0		&&			
ANR	105261	Identifier	CONFIG_H261_ENCODER		102247	0					
ANR	105262	EqualityExpression	s -> out_format == FMT_H261		102247	1		==			
ANR	105263	PtrMemberAccess	s -> out_format		102247	0					
ANR	105264	Identifier	s		102247	0					
ANR	105265	Identifier	out_format		102247	1					
ANR	105266	Identifier	FMT_H261		102247	1					
ANR	105267	ExpressionStatement	ff_h261_encode_init ( s )	955:8:18184:18206	102247	1	True				
ANR	105268	CallExpression	ff_h261_encode_init ( s )		102247	0					
ANR	105269	Callee	ff_h261_encode_init		102247	0					
ANR	105270	Identifier	ff_h261_encode_init		102247	0					
ANR	105271	ArgumentList	s		102247	1					
ANR	105272	Argument	s		102247	0					
ANR	105273	Identifier	s		102247	0					
ANR	105274	IfStatement	if ( CONFIG_H263_ENCODER && s -> out_format == FMT_H263 )		102247	141					
ANR	105275	Condition	CONFIG_H263_ENCODER && s -> out_format == FMT_H263	957:8:18217:18264	102247	0	True				
ANR	105276	AndExpression	CONFIG_H263_ENCODER && s -> out_format == FMT_H263		102247	0		&&			
ANR	105277	Identifier	CONFIG_H263_ENCODER		102247	0					
ANR	105278	EqualityExpression	s -> out_format == FMT_H263		102247	1		==			
ANR	105279	PtrMemberAccess	s -> out_format		102247	0					
ANR	105280	Identifier	s		102247	0					
ANR	105281	Identifier	out_format		102247	1					
ANR	105282	Identifier	FMT_H263		102247	1					
ANR	105283	ExpressionStatement	h263_encode_init ( s )	959:8:18276:18295	102247	1	True				
ANR	105284	CallExpression	h263_encode_init ( s )		102247	0					
ANR	105285	Callee	h263_encode_init		102247	0					
ANR	105286	Identifier	h263_encode_init		102247	0					
ANR	105287	ArgumentList	s		102247	1					
ANR	105288	Argument	s		102247	0					
ANR	105289	Identifier	s		102247	0					
ANR	105290	IfStatement	if ( CONFIG_MSMPEG4_ENCODER && s -> msmpeg4_version )		102247	142					
ANR	105291	Condition	CONFIG_MSMPEG4_ENCODER && s -> msmpeg4_version	961:8:18306:18349	102247	0	True				
ANR	105292	AndExpression	CONFIG_MSMPEG4_ENCODER && s -> msmpeg4_version		102247	0		&&			
ANR	105293	Identifier	CONFIG_MSMPEG4_ENCODER		102247	0					
ANR	105294	PtrMemberAccess	s -> msmpeg4_version		102247	1					
ANR	105295	Identifier	s		102247	0					
ANR	105296	Identifier	msmpeg4_version		102247	1					
ANR	105297	ExpressionStatement	ff_msmpeg4_encode_init ( s )	963:8:18361:18386	102247	1	True				
ANR	105298	CallExpression	ff_msmpeg4_encode_init ( s )		102247	0					
ANR	105299	Callee	ff_msmpeg4_encode_init		102247	0					
ANR	105300	Identifier	ff_msmpeg4_encode_init		102247	0					
ANR	105301	ArgumentList	s		102247	1					
ANR	105302	Argument	s		102247	0					
ANR	105303	Identifier	s		102247	0					
ANR	105304	IfStatement	if ( ( CONFIG_MPEG1VIDEO_ENCODER || CONFIG_MPEG2VIDEO_ENCODER ) && s -> out_format == FMT_MPEG1 )		102247	143					
ANR	105305	Condition	( CONFIG_MPEG1VIDEO_ENCODER || CONFIG_MPEG2VIDEO_ENCODER ) && s -> out_format == FMT_MPEG1	965:8:18397:18491	102247	0	True				
ANR	105306	AndExpression	( CONFIG_MPEG1VIDEO_ENCODER || CONFIG_MPEG2VIDEO_ENCODER ) && s -> out_format == FMT_MPEG1		102247	0		&&			
ANR	105307	OrExpression	CONFIG_MPEG1VIDEO_ENCODER || CONFIG_MPEG2VIDEO_ENCODER		102247	0		||			
ANR	105308	Identifier	CONFIG_MPEG1VIDEO_ENCODER		102247	0					
ANR	105309	Identifier	CONFIG_MPEG2VIDEO_ENCODER		102247	1					
ANR	105310	EqualityExpression	s -> out_format == FMT_MPEG1		102247	1		==			
ANR	105311	PtrMemberAccess	s -> out_format		102247	0					
ANR	105312	Identifier	s		102247	0					
ANR	105313	Identifier	out_format		102247	1					
ANR	105314	Identifier	FMT_MPEG1		102247	1					
ANR	105315	ExpressionStatement	ff_mpeg1_encode_init ( s )	969:8:18503:18526	102247	1	True				
ANR	105316	CallExpression	ff_mpeg1_encode_init ( s )		102247	0					
ANR	105317	Callee	ff_mpeg1_encode_init		102247	0					
ANR	105318	Identifier	ff_mpeg1_encode_init		102247	0					
ANR	105319	ArgumentList	s		102247	1					
ANR	105320	Argument	s		102247	0					
ANR	105321	Identifier	s		102247	0					
ANR	105322	ForStatement	for ( i = 0 ; i < 64 ; i ++ )		102247	144					
ANR	105323	ForInit	i = 0 ;	975:8:18564:18567	102247	0	True				
ANR	105324	AssignmentExpression	i = 0		102247	0		=			
ANR	105325	Identifier	i		102247	0					
ANR	105326	PrimaryExpression	0		102247	1					
ANR	105327	Condition	i < 64	975:12:18568:18571	102247	1	True				
ANR	105328	RelationalExpression	i < 64		102247	0		<			
ANR	105329	Identifier	i		102247	0					
ANR	105330	PrimaryExpression	64		102247	1					
ANR	105331	PostIncDecOperationExpression	i ++	975:17:18573:18575	102247	2	True				
ANR	105332	Identifier	i		102247	0					
ANR	105333	IncDec	++		102247	1					
ANR	105334	CompoundStatement		975:8:18536:18569	102247	3					
ANR	105335	IdentifierDeclStatement	int j = s -> dsp . idct_permutation [ i ] ;	977:8:18589:18622	102247	0	True				
ANR	105336	IdentifierDecl	j = s -> dsp . idct_permutation [ i ]		102247	0					
ANR	105337	IdentifierDeclType	int		102247	0					
ANR	105338	Identifier	j		102247	1					
ANR	105339	AssignmentExpression	j = s -> dsp . idct_permutation [ i ]		102247	2		=			
ANR	105340	Identifier	j		102247	0					
ANR	105341	ArrayIndexing	s -> dsp . idct_permutation [ i ]		102247	1					
ANR	105342	MemberAccess	s -> dsp . idct_permutation		102247	0					
ANR	105343	PtrMemberAccess	s -> dsp		102247	0					
ANR	105344	Identifier	s		102247	0					
ANR	105345	Identifier	dsp		102247	1					
ANR	105346	Identifier	idct_permutation		102247	1					
ANR	105347	Identifier	i		102247	1					
ANR	105348	IfStatement	if ( CONFIG_MPEG4_ENCODER && s -> codec_id == CODEC_ID_MPEG4 && s -> mpeg_quant )		102247	1					
ANR	105349	Condition	CONFIG_MPEG4_ENCODER && s -> codec_id == CODEC_ID_MPEG4 && s -> mpeg_quant	979:11:18636:18703	102247	0	True				
ANR	105350	AndExpression	CONFIG_MPEG4_ENCODER && s -> codec_id == CODEC_ID_MPEG4 && s -> mpeg_quant		102247	0		&&			
ANR	105351	Identifier	CONFIG_MPEG4_ENCODER		102247	0					
ANR	105352	AndExpression	s -> codec_id == CODEC_ID_MPEG4 && s -> mpeg_quant		102247	1		&&			
ANR	105353	EqualityExpression	s -> codec_id == CODEC_ID_MPEG4		102247	0		==			
ANR	105354	PtrMemberAccess	s -> codec_id		102247	0					
ANR	105355	Identifier	s		102247	0					
ANR	105356	Identifier	codec_id		102247	1					
ANR	105357	Identifier	CODEC_ID_MPEG4		102247	1					
ANR	105358	PtrMemberAccess	s -> mpeg_quant		102247	1					
ANR	105359	Identifier	s		102247	0					
ANR	105360	Identifier	mpeg_quant		102247	1					
ANR	105361	CompoundStatement		977:80:18652:18652	102247	1					
ANR	105362	ExpressionStatement	s -> intra_matrix [ j ] = ff_mpeg4_default_intra_matrix [ i ]	981:12:18720:18773	102247	0	True				
ANR	105363	AssignmentExpression	s -> intra_matrix [ j ] = ff_mpeg4_default_intra_matrix [ i ]		102247	0		=			
ANR	105364	ArrayIndexing	s -> intra_matrix [ j ]		102247	0					
ANR	105365	PtrMemberAccess	s -> intra_matrix		102247	0					
ANR	105366	Identifier	s		102247	0					
ANR	105367	Identifier	intra_matrix		102247	1					
ANR	105368	Identifier	j		102247	1					
ANR	105369	ArrayIndexing	ff_mpeg4_default_intra_matrix [ i ]		102247	1					
ANR	105370	Identifier	ff_mpeg4_default_intra_matrix		102247	0					
ANR	105371	Identifier	i		102247	1					
ANR	105372	ExpressionStatement	s -> inter_matrix [ j ] = ff_mpeg4_default_non_intra_matrix [ i ]	983:12:18788:18845	102247	1	True				
ANR	105373	AssignmentExpression	s -> inter_matrix [ j ] = ff_mpeg4_default_non_intra_matrix [ i ]		102247	0		=			
ANR	105374	ArrayIndexing	s -> inter_matrix [ j ]		102247	0					
ANR	105375	PtrMemberAccess	s -> inter_matrix		102247	0					
ANR	105376	Identifier	s		102247	0					
ANR	105377	Identifier	inter_matrix		102247	1					
ANR	105378	Identifier	j		102247	1					
ANR	105379	ArrayIndexing	ff_mpeg4_default_non_intra_matrix [ i ]		102247	1					
ANR	105380	Identifier	ff_mpeg4_default_non_intra_matrix		102247	0					
ANR	105381	Identifier	i		102247	1					
ANR	105382	ElseStatement	else		102247	0					
ANR	105383	IfStatement	if ( s -> out_format == FMT_H263 || s -> out_format == FMT_H261 )		102247	0					
ANR	105384	Condition	s -> out_format == FMT_H263 || s -> out_format == FMT_H261	985:17:18865:18918	102247	0	True				
ANR	105385	OrExpression	s -> out_format == FMT_H263 || s -> out_format == FMT_H261		102247	0		||			
ANR	105386	EqualityExpression	s -> out_format == FMT_H263		102247	0		==			
ANR	105387	PtrMemberAccess	s -> out_format		102247	0					
ANR	105388	Identifier	s		102247	0					
ANR	105389	Identifier	out_format		102247	1					
ANR	105390	Identifier	FMT_H263		102247	1					
ANR	105391	EqualityExpression	s -> out_format == FMT_H261		102247	1		==			
ANR	105392	PtrMemberAccess	s -> out_format		102247	0					
ANR	105393	Identifier	s		102247	0					
ANR	105394	Identifier	out_format		102247	1					
ANR	105395	Identifier	FMT_H261		102247	1					
ANR	105396	CompoundStatement		983:72:18867:18867	102247	1					
ANR	105397	ExpressionStatement	s -> intra_matrix [ j ] = s -> inter_matrix [ j ] = ff_mpeg1_default_non_intra_matrix [ i ]	987:12:18935:19026	102247	0	True				
ANR	105398	AssignmentExpression	s -> intra_matrix [ j ] = s -> inter_matrix [ j ] = ff_mpeg1_default_non_intra_matrix [ i ]		102247	0		=			
ANR	105399	ArrayIndexing	s -> intra_matrix [ j ]		102247	0					
ANR	105400	PtrMemberAccess	s -> intra_matrix		102247	0					
ANR	105401	Identifier	s		102247	0					
ANR	105402	Identifier	intra_matrix		102247	1					
ANR	105403	Identifier	j		102247	1					
ANR	105404	AssignmentExpression	s -> inter_matrix [ j ] = ff_mpeg1_default_non_intra_matrix [ i ]		102247	1		=			
ANR	105405	ArrayIndexing	s -> inter_matrix [ j ]		102247	0					
ANR	105406	PtrMemberAccess	s -> inter_matrix		102247	0					
ANR	105407	Identifier	s		102247	0					
ANR	105408	Identifier	inter_matrix		102247	1					
ANR	105409	Identifier	j		102247	1					
ANR	105410	ArrayIndexing	ff_mpeg1_default_non_intra_matrix [ i ]		102247	1					
ANR	105411	Identifier	ff_mpeg1_default_non_intra_matrix		102247	0					
ANR	105412	Identifier	i		102247	1					
ANR	105413	ElseStatement	else		102247	0					
ANR	105414	CompoundStatement		991:8:18999:18999	102247	0					
ANR	105415	ExpressionStatement	s -> intra_matrix [ j ] = ff_mpeg1_default_intra_matrix [ i ]	995:12:19081:19134	102247	0	True				
ANR	105416	AssignmentExpression	s -> intra_matrix [ j ] = ff_mpeg1_default_intra_matrix [ i ]		102247	0		=			
ANR	105417	ArrayIndexing	s -> intra_matrix [ j ]		102247	0					
ANR	105418	PtrMemberAccess	s -> intra_matrix		102247	0					
ANR	105419	Identifier	s		102247	0					
ANR	105420	Identifier	intra_matrix		102247	1					
ANR	105421	Identifier	j		102247	1					
ANR	105422	ArrayIndexing	ff_mpeg1_default_intra_matrix [ i ]		102247	1					
ANR	105423	Identifier	ff_mpeg1_default_intra_matrix		102247	0					
ANR	105424	Identifier	i		102247	1					
ANR	105425	ExpressionStatement	s -> inter_matrix [ j ] = ff_mpeg1_default_non_intra_matrix [ i ]	997:12:19149:19206	102247	1	True				
ANR	105426	AssignmentExpression	s -> inter_matrix [ j ] = ff_mpeg1_default_non_intra_matrix [ i ]		102247	0		=			
ANR	105427	ArrayIndexing	s -> inter_matrix [ j ]		102247	0					
ANR	105428	PtrMemberAccess	s -> inter_matrix		102247	0					
ANR	105429	Identifier	s		102247	0					
ANR	105430	Identifier	inter_matrix		102247	1					
ANR	105431	Identifier	j		102247	1					
ANR	105432	ArrayIndexing	ff_mpeg1_default_non_intra_matrix [ i ]		102247	1					
ANR	105433	Identifier	ff_mpeg1_default_non_intra_matrix		102247	0					
ANR	105434	Identifier	i		102247	1					
ANR	105435	IfStatement	if ( s -> avctx -> intra_matrix )		102247	2					
ANR	105436	Condition	s -> avctx -> intra_matrix	1001:11:19231:19252	102247	0	True				
ANR	105437	PtrMemberAccess	s -> avctx -> intra_matrix		102247	0					
ANR	105438	PtrMemberAccess	s -> avctx		102247	0					
ANR	105439	Identifier	s		102247	0					
ANR	105440	Identifier	avctx		102247	1					
ANR	105441	Identifier	intra_matrix		102247	1					
ANR	105442	ExpressionStatement	s -> intra_matrix [ j ] = s -> avctx -> intra_matrix [ i ]	1003:12:19268:19314	102247	1	True				
ANR	105443	AssignmentExpression	s -> intra_matrix [ j ] = s -> avctx -> intra_matrix [ i ]		102247	0		=			
ANR	105444	ArrayIndexing	s -> intra_matrix [ j ]		102247	0					
ANR	105445	PtrMemberAccess	s -> intra_matrix		102247	0					
ANR	105446	Identifier	s		102247	0					
ANR	105447	Identifier	intra_matrix		102247	1					
ANR	105448	Identifier	j		102247	1					
ANR	105449	ArrayIndexing	s -> avctx -> intra_matrix [ i ]		102247	1					
ANR	105450	PtrMemberAccess	s -> avctx -> intra_matrix		102247	0					
ANR	105451	PtrMemberAccess	s -> avctx		102247	0					
ANR	105452	Identifier	s		102247	0					
ANR	105453	Identifier	avctx		102247	1					
ANR	105454	Identifier	intra_matrix		102247	1					
ANR	105455	Identifier	i		102247	1					
ANR	105456	IfStatement	if ( s -> avctx -> inter_matrix )		102247	3					
ANR	105457	Condition	s -> avctx -> inter_matrix	1005:11:19328:19349	102247	0	True				
ANR	105458	PtrMemberAccess	s -> avctx -> inter_matrix		102247	0					
ANR	105459	PtrMemberAccess	s -> avctx		102247	0					
ANR	105460	Identifier	s		102247	0					
ANR	105461	Identifier	avctx		102247	1					
ANR	105462	Identifier	inter_matrix		102247	1					
ANR	105463	ExpressionStatement	s -> inter_matrix [ j ] = s -> avctx -> inter_matrix [ i ]	1007:12:19365:19411	102247	1	True				
ANR	105464	AssignmentExpression	s -> inter_matrix [ j ] = s -> avctx -> inter_matrix [ i ]		102247	0		=			
ANR	105465	ArrayIndexing	s -> inter_matrix [ j ]		102247	0					
ANR	105466	PtrMemberAccess	s -> inter_matrix		102247	0					
ANR	105467	Identifier	s		102247	0					
ANR	105468	Identifier	inter_matrix		102247	1					
ANR	105469	Identifier	j		102247	1					
ANR	105470	ArrayIndexing	s -> avctx -> inter_matrix [ i ]		102247	1					
ANR	105471	PtrMemberAccess	s -> avctx -> inter_matrix		102247	0					
ANR	105472	PtrMemberAccess	s -> avctx		102247	0					
ANR	105473	Identifier	s		102247	0					
ANR	105474	Identifier	avctx		102247	1					
ANR	105475	Identifier	inter_matrix		102247	1					
ANR	105476	Identifier	i		102247	1					
ANR	105477	IfStatement	if ( s -> out_format != FMT_MJPEG )		102247	145					
ANR	105478	Condition	s -> out_format != FMT_MJPEG	1017:8:19517:19542	102247	0	True				
ANR	105479	EqualityExpression	s -> out_format != FMT_MJPEG		102247	0		!=			
ANR	105480	PtrMemberAccess	s -> out_format		102247	0					
ANR	105481	Identifier	s		102247	0					
ANR	105482	Identifier	out_format		102247	1					
ANR	105483	Identifier	FMT_MJPEG		102247	1					
ANR	105484	CompoundStatement		1015:36:19492:19492	102247	1					
ANR	105485	ExpressionStatement	"ff_convert_matrix ( & s -> dsp , s -> q_intra_matrix , s -> q_intra_matrix16 , s -> intra_matrix , s -> intra_quant_bias , avctx -> qmin , 31 , 1 )"	1019:8:19556:19704	102247	0	True				
ANR	105486	CallExpression	"ff_convert_matrix ( & s -> dsp , s -> q_intra_matrix , s -> q_intra_matrix16 , s -> intra_matrix , s -> intra_quant_bias , avctx -> qmin , 31 , 1 )"		102247	0					
ANR	105487	Callee	ff_convert_matrix		102247	0					
ANR	105488	Identifier	ff_convert_matrix		102247	0					
ANR	105489	ArgumentList	& s -> dsp		102247	1					
ANR	105490	Argument	& s -> dsp		102247	0					
ANR	105491	UnaryOperationExpression	& s -> dsp		102247	0					
ANR	105492	UnaryOperator	&		102247	0					
ANR	105493	PtrMemberAccess	s -> dsp		102247	1					
ANR	105494	Identifier	s		102247	0					
ANR	105495	Identifier	dsp		102247	1					
ANR	105496	Argument	s -> q_intra_matrix		102247	1					
ANR	105497	PtrMemberAccess	s -> q_intra_matrix		102247	0					
ANR	105498	Identifier	s		102247	0					
ANR	105499	Identifier	q_intra_matrix		102247	1					
ANR	105500	Argument	s -> q_intra_matrix16		102247	2					
ANR	105501	PtrMemberAccess	s -> q_intra_matrix16		102247	0					
ANR	105502	Identifier	s		102247	0					
ANR	105503	Identifier	q_intra_matrix16		102247	1					
ANR	105504	Argument	s -> intra_matrix		102247	3					
ANR	105505	PtrMemberAccess	s -> intra_matrix		102247	0					
ANR	105506	Identifier	s		102247	0					
ANR	105507	Identifier	intra_matrix		102247	1					
ANR	105508	Argument	s -> intra_quant_bias		102247	4					
ANR	105509	PtrMemberAccess	s -> intra_quant_bias		102247	0					
ANR	105510	Identifier	s		102247	0					
ANR	105511	Identifier	intra_quant_bias		102247	1					
ANR	105512	Argument	avctx -> qmin		102247	5					
ANR	105513	PtrMemberAccess	avctx -> qmin		102247	0					
ANR	105514	Identifier	avctx		102247	0					
ANR	105515	Identifier	qmin		102247	1					
ANR	105516	Argument	31		102247	6					
ANR	105517	PrimaryExpression	31		102247	0					
ANR	105518	Argument	1		102247	7					
ANR	105519	PrimaryExpression	1		102247	0					
ANR	105520	ExpressionStatement	"ff_convert_matrix ( & s -> dsp , s -> q_inter_matrix , s -> q_inter_matrix16 , s -> inter_matrix , s -> inter_quant_bias , avctx -> qmin , 31 , 0 )"	1023:8:19715:19863	102247	1	True				
ANR	105521	CallExpression	"ff_convert_matrix ( & s -> dsp , s -> q_inter_matrix , s -> q_inter_matrix16 , s -> inter_matrix , s -> inter_quant_bias , avctx -> qmin , 31 , 0 )"		102247	0					
ANR	105522	Callee	ff_convert_matrix		102247	0					
ANR	105523	Identifier	ff_convert_matrix		102247	0					
ANR	105524	ArgumentList	& s -> dsp		102247	1					
ANR	105525	Argument	& s -> dsp		102247	0					
ANR	105526	UnaryOperationExpression	& s -> dsp		102247	0					
ANR	105527	UnaryOperator	&		102247	0					
ANR	105528	PtrMemberAccess	s -> dsp		102247	1					
ANR	105529	Identifier	s		102247	0					
ANR	105530	Identifier	dsp		102247	1					
ANR	105531	Argument	s -> q_inter_matrix		102247	1					
ANR	105532	PtrMemberAccess	s -> q_inter_matrix		102247	0					
ANR	105533	Identifier	s		102247	0					
ANR	105534	Identifier	q_inter_matrix		102247	1					
ANR	105535	Argument	s -> q_inter_matrix16		102247	2					
ANR	105536	PtrMemberAccess	s -> q_inter_matrix16		102247	0					
ANR	105537	Identifier	s		102247	0					
ANR	105538	Identifier	q_inter_matrix16		102247	1					
ANR	105539	Argument	s -> inter_matrix		102247	3					
ANR	105540	PtrMemberAccess	s -> inter_matrix		102247	0					
ANR	105541	Identifier	s		102247	0					
ANR	105542	Identifier	inter_matrix		102247	1					
ANR	105543	Argument	s -> inter_quant_bias		102247	4					
ANR	105544	PtrMemberAccess	s -> inter_quant_bias		102247	0					
ANR	105545	Identifier	s		102247	0					
ANR	105546	Identifier	inter_quant_bias		102247	1					
ANR	105547	Argument	avctx -> qmin		102247	5					
ANR	105548	PtrMemberAccess	avctx -> qmin		102247	0					
ANR	105549	Identifier	avctx		102247	0					
ANR	105550	Identifier	qmin		102247	1					
ANR	105551	Argument	31		102247	6					
ANR	105552	PrimaryExpression	31		102247	0					
ANR	105553	Argument	0		102247	7					
ANR	105554	PrimaryExpression	0		102247	0					
ANR	105555	IfStatement	if ( ff_rate_control_init ( s ) < 0 )		102247	146					
ANR	105556	Condition	ff_rate_control_init ( s ) < 0	1031:7:19882:19908	102247	0	True				
ANR	105557	RelationalExpression	ff_rate_control_init ( s ) < 0		102247	0		<			
ANR	105558	CallExpression	ff_rate_control_init ( s )		102247	0					
ANR	105559	Callee	ff_rate_control_init		102247	0					
ANR	105560	Identifier	ff_rate_control_init		102247	0					
ANR	105561	ArgumentList	s		102247	1					
ANR	105562	Argument	s		102247	0					
ANR	105563	Identifier	s		102247	0					
ANR	105564	PrimaryExpression	0		102247	1					
ANR	105565	ReturnStatement	return - 1 ;	1033:8:19920:19929	102247	1	True				
ANR	105566	UnaryOperationExpression	- 1		102247	0					
ANR	105567	UnaryOperator	-		102247	0					
ANR	105568	PrimaryExpression	1		102247	1					
ANR	105569	ReturnStatement	return 0 ;	1037:4:19938:19946	102247	147	True				
ANR	105570	PrimaryExpression	0		102247	0					
ANR	105571	ReturnType	av_cold int		102247	1					
ANR	105572	Identifier	MPV_encode_init		102247	2					
ANR	105573	ParameterList	AVCodecContext * avctx		102247	3					
ANR	105574	Parameter	AVCodecContext * avctx	1:28:28:48	102247	0	True				
ANR	105575	ParameterType	AVCodecContext *		102247	0					
ANR	105576	Identifier	avctx		102247	1					
ANR	105577	CFGEntryNode	ENTRY		102247		True				
ANR	105578	CFGExitNode	EXIT		102247		True				
ANR	105579	Symbol	CODEC_FLAG2_INTRA_VLC		102247						
ANR	105580	Symbol	ff_mpeg4_default_non_intra_matrix		102247						
ANR	105581	Symbol	CONFIG_H261_ENCODER		102247						
ANR	105582	Symbol	* ff_mpeg4_default_non_intra_matrix		102247						
ANR	105583	Symbol	ff_match_2uint16		102247						
ANR	105584	Symbol	FF_DEFAULT_QUANT_BIAS		102247						
ANR	105585	Symbol	s -> flipflop_rounding		102247						
ANR	105586	Symbol	s -> mjpeg_hsample		102247						
ANR	105587	Symbol	avctx -> mpeg_quant		102247						
ANR	105588	Symbol	CODEC_FLAG_AC_PRED		102247						
ANR	105589	Symbol	s -> out_format		102247						
ANR	105590	Symbol	PIX_FMT_YUV444P		102247						
ANR	105591	Symbol	PIX_FMT_YUV420P		102247						
ANR	105592	Symbol	s -> obmc		102247						
ANR	105593	Symbol	s -> dsp . frame_skip_cmp		102247						
ANR	105594	Symbol	s -> strict_std_compliance		102247						
ANR	105595	Symbol	ff_mpeg4_default_intra_matrix		102247						
ANR	105596	Symbol	CODEC_FLAG_PASS2		102247						
ANR	105597	Symbol	s -> h263_slice_structured		102247						
ANR	105598	Symbol	s -> flags		102247						
ANR	105599	Symbol	s -> progressive_sequence		102247						
ANR	105600	Symbol	s -> h263_plus		102247						
ANR	105601	Symbol	s -> dsp		102247						
ANR	105602	Symbol	CODEC_ID_MPEG2VIDEO		102247						
ANR	105603	Symbol	* ff_mpeg1_default_non_intra_matrix		102247						
ANR	105604	Symbol	FMT_H261		102247						
ANR	105605	Symbol	CODEC_FLAG_QP_RD		102247						
ANR	105606	Symbol	& chroma_v_shift		102247						
ANR	105607	Symbol	CONFIG_MPEG4_ENCODER		102247						
ANR	105608	Symbol	avctx -> pix_fmt		102247						
ANR	105609	Symbol	FMT_H263		102247						
ANR	105610	Symbol	avctx -> sample_aspect_ratio . den		102247						
ANR	105611	Symbol	s -> intra_matrix		102247						
ANR	105612	Symbol	avctx -> codec_id		102247						
ANR	105613	Symbol	s -> avctx -> inter_matrix		102247						
ANR	105614	Symbol	avctx -> width		102247						
ANR	105615	Symbol	s -> h263_aic		102247						
ANR	105616	Symbol	CODEC_FLAG_LOOP_FILTER		102247						
ANR	105617	Symbol	* s -> avctx -> intra_matrix		102247						
ANR	105618	Symbol	avctx -> time_base . den		102247						
ANR	105619	Symbol	* s -> mjpeg_hsample		102247						
ANR	105620	Symbol	s -> intra_dc_precision		102247						
ANR	105621	Symbol	avctx		102247						
ANR	105622	Symbol	avctx -> intra_quant_bias		102247						
ANR	105623	Symbol	* s -> inter_matrix		102247						
ANR	105624	Symbol	avctx -> mb_threshold		102247						
ANR	105625	Symbol	PIX_FMT_BGRA		102247						
ANR	105626	Symbol	i		102247						
ANR	105627	Symbol	j		102247						
ANR	105628	Symbol	CODEC_FLAG_4MV		102247						
ANR	105629	Symbol	ff_h261_get_picture_format		102247						
ANR	105630	Symbol	avctx -> codec -> id		102247						
ANR	105631	Symbol	s		102247						
ANR	105632	Symbol	s -> avctx -> ildct_cmp		102247						
ANR	105633	Symbol	CONFIG_RV20_ENCODER		102247						
ANR	105634	Symbol	* ff_mpeg1_default_intra_matrix		102247						
ANR	105635	Symbol	chroma_v_shift		102247						
ANR	105636	Symbol	CONFIG_H263P_ENCODER		102247						
ANR	105637	Symbol	avctx -> flags2		102247						
ANR	105638	Symbol	FF_MB_DECISION_SIMPLE		102247						
ANR	105639	Symbol	QUANT_BIAS_SHIFT		102247						
ANR	105640	Symbol	avctx -> delay		102247						
ANR	105641	Symbol	CODEC_FLAG_LOW_DELAY		102247						
ANR	105642	Symbol	CODEC_FLAG_H263P_AIV		102247						
ANR	105643	Symbol	avctx -> has_b_frames		102247						
ANR	105644	Symbol	PIX_FMT_RGB32		102247						
ANR	105645	Symbol	s -> fast_dct_quantize		102247						
ANR	105646	Symbol	avctx -> chroma_elim_threshold		102247						
ANR	105647	Symbol	CONFIG_MJPEG_ENCODER		102247						
ANR	105648	Symbol	CONFIG_MPEG1VIDEO_ENCODER		102247						
ANR	105649	Symbol	s -> width		102247						
ANR	105650	Symbol	FMT_MJPEG		102247						
ANR	105651	Symbol	CODEC_ID_MPEG4		102247						
ANR	105652	Symbol	s -> avctx -> temporal_cplx_masking		102247						
ANR	105653	Symbol	CODEC_FLAG_QSCALE		102247						
ANR	105654	Symbol	* s -> avctx		102247						
ANR	105655	Symbol	s -> codec_id		102247						
ANR	105656	Symbol	s -> avctx -> spatial_cplx_masking		102247						
ANR	105657	Symbol	s -> dct_quantize		102247						
ANR	105658	Symbol	avctx -> rc_max_rate		102247						
ANR	105659	Symbol	s -> q_intra_matrix		102247						
ANR	105660	Symbol	CODEC_ID_H263		102247						
ANR	105661	Symbol	avctx -> qmin		102247						
ANR	105662	Symbol	s -> dsp . ildct_cmp		102247						
ANR	105663	Symbol	s -> mpeg_quant		102247						
ANR	105664	Symbol	s -> chroma_qscale_table		102247						
ANR	105665	Symbol	CODEC_FLAG_CLOSED_GOP		102247						
ANR	105666	Symbol	denoise_dct_c		102247						
ANR	105667	Symbol	PIX_FMT_YUV422P		102247						
ANR	105668	Symbol	s -> q_scale_type		102247						
ANR	105669	Symbol	CONFIG_MPEG2VIDEO_ENCODER		102247						
ANR	105670	Symbol	s -> inter_quant_bias		102247						
ANR	105671	Symbol	avctx -> sample_aspect_ratio . num		102247						
ANR	105672	Symbol	CHROMA_420		102247						
ANR	105673	Symbol	s -> q_inter_matrix		102247						
ANR	105674	Symbol	FF_COMPLIANCE_UNOFFICIAL		102247						
ANR	105675	Symbol	CHROMA_422		102247						
ANR	105676	Symbol	s -> alt_inter_vlc		102247						
ANR	105677	Symbol	CODEC_FLAG_PART		102247						
ANR	105678	Symbol	s -> unrestricted_mv		102247						
ANR	105679	Symbol	dct_quantize_c		102247						
ANR	105680	Symbol	s -> alternate_scan		102247						
ANR	105681	Symbol	s -> rtp_mode		102247						
ANR	105682	Symbol	s -> time_increment_bits		102247						
ANR	105683	Symbol	avctx -> me_method		102247						
ANR	105684	Symbol	s -> dsp . idct_permutation		102247						
ANR	105685	Symbol	CODEC_ID_LJPEG		102247						
ANR	105686	Symbol	ff_mjpeg_encode_init		102247						
ANR	105687	Symbol	s -> progressive_frame		102247						
ANR	105688	Symbol	s -> inter_matrix		102247						
ANR	105689	Symbol	avctx -> max_b_frames		102247						
ANR	105690	Symbol	* s -> avctx -> inter_matrix		102247						
ANR	105691	Symbol	s -> loop_filter		102247						
ANR	105692	Symbol	CODEC_ID_FLV1		102247						
ANR	105693	Symbol	s -> data_partitioning		102247						
ANR	105694	Symbol	s -> user_specified_pts		102247						
ANR	105695	Symbol	chroma_h_shift		102247						
ANR	105696	Symbol	CONFIG_MSMPEG4_ENCODER		102247						
ANR	105697	Symbol	avctx -> rc_min_rate		102247						
ANR	105698	Symbol	avctx -> b_frame_strategy		102247						
ANR	105699	Symbol	CODEC_FLAG_H263P_UMV		102247						
ANR	105700	Symbol	avctx -> luma_elim_threshold		102247						
ANR	105701	Symbol	s -> avctx -> p_masking		102247						
ANR	105702	Symbol	* * s -> avctx		102247						
ANR	105703	Symbol	CODEC_ID_MPEG1VIDEO		102247						
ANR	105704	Symbol	& chroma_h_shift		102247						
ANR	105705	Symbol	s -> flags2		102247						
ANR	105706	Symbol	avctx -> codec		102247						
ANR	105707	Symbol	s -> chroma_elim_threshold		102247						
ANR	105708	Symbol	* s -> dsp . idct_permutation		102247						
ANR	105709	Symbol	s -> umvplus		102247						
ANR	105710	Symbol	* * avctx		102247						
ANR	105711	Symbol	s -> gop_size		102247						
ANR	105712	Symbol	* * * s		102247						
ANR	105713	Symbol	s -> encoding		102247						
ANR	105714	Symbol	s -> mjpeg_vsample		102247						
ANR	105715	Symbol	avctx -> bit_rate		102247						
ANR	105716	Symbol	FF_ARRAY_ELEMS		102247						
ANR	105717	Symbol	s -> intra_only		102247						
ANR	105718	Symbol	CODEC_FLAG_ALT_SCAN		102247						
ANR	105719	Symbol	* s -> mjpeg_vsample		102247						
ANR	105720	Symbol	* s -> intra_matrix		102247						
ANR	105721	Symbol	av_log2		102247						
ANR	105722	Symbol	AV_LOG_INFO		102247						
ANR	105723	Symbol	s -> avctx -> border_masking		102247						
ANR	105724	Symbol	s -> avctx -> time_base . den		102247						
ANR	105725	Symbol	AV_NOPTS_VALUE		102247						
ANR	105726	Symbol	avctx -> time_base		102247						
ANR	105727	Symbol	CODEC_FLAG_H263P_SLICE_STRUCT		102247						
ANR	105728	Symbol	s -> modified_quant		102247						
ANR	105729	Symbol	avctx -> me_threshold		102247						
ANR	105730	Symbol	* * s		102247						
ANR	105731	Symbol	INT_MAX		102247						
ANR	105732	Symbol	s -> luma_elim_threshold		102247						
ANR	105733	Symbol	s -> adaptive_quant		102247						
ANR	105734	Symbol	AV_LOG_ERROR		102247						
ANR	105735	Symbol	s -> quarter_sample		102247						
ANR	105736	Symbol	avctx -> inter_quant_bias		102247						
ANR	105737	Symbol	CODEC_FLAG_INTERLACED_DCT		102247						
ANR	105738	Symbol	s -> height		102247						
ANR	105739	Symbol	h263_format		102247						
ANR	105740	Symbol	s -> max_b_frames		102247						
ANR	105741	Symbol	s -> avctx -> mb_decision		102247						
ANR	105742	Symbol	CODEC_ID_H263P		102247						
ANR	105743	Symbol	s -> q_inter_matrix16		102247						
ANR	105744	Symbol	avctx -> bit_rate_tolerance		102247						
ANR	105745	Symbol	& s -> dsp		102247						
ANR	105746	Symbol	avctx -> gop_size		102247						
ANR	105747	Symbol	FMT_MPEG1		102247						
ANR	105748	Symbol	CONFIG_H263_ENCODER		102247						
ANR	105749	Symbol	s -> denoise_dct		102247						
ANR	105750	Symbol	s -> avctx -> intra_matrix		102247						
ANR	105751	Symbol	CONFIG_LJPEG_ENCODER		102247						
ANR	105752	Symbol	s -> avctx -> lumi_masking		102247						
ANR	105753	Symbol	s -> low_delay		102247						
ANR	105754	Symbol	avctx -> flags		102247						
ANR	105755	Symbol	* avctx -> codec		102247						
ANR	105756	Symbol	s -> avctx -> frame_skip_cmp		102247						
ANR	105757	Symbol	* s -> dsp		102247						
ANR	105758	Symbol	FF_MB_DECISION_RD		102247						
ANR	105759	Symbol	s -> h263_msmpeg4		102247						
ANR	105760	Symbol	avctx -> qmax		102247						
ANR	105761	Symbol	CODEC_FLAG_OBMC		102247						
ANR	105762	Symbol	s -> msmpeg4_version		102247						
ANR	105763	Symbol	av_q2d		102247						
ANR	105764	Symbol	s -> bit_rate		102247						
ANR	105765	Symbol	avctx -> rtp_payload_size		102247						
ANR	105766	Symbol	s -> h263_pred		102247						
ANR	105767	Symbol	FF_COMPLIANCE_EXPERIMENTAL		102247						
ANR	105768	Symbol	avctx -> strict_std_compliance		102247						
ANR	105769	Symbol	s -> chroma_format		102247						
ANR	105770	Symbol	* avctx		102247						
ANR	105771	Symbol	s -> h263_flv		102247						
ANR	105772	Symbol	ff_mpeg1_default_intra_matrix		102247						
ANR	105773	Symbol	PIX_FMT_YUVJ444P		102247						
ANR	105774	Symbol	s -> me_method		102247						
ANR	105775	Symbol	s -> avctx		102247						
ANR	105776	Symbol	CODEC_FLAG_CBP_RD		102247						
ANR	105777	Symbol	CODEC_FLAG_INTERLACED_ME		102247						
ANR	105778	Symbol	PIX_FMT_YUVJ420P		102247						
ANR	105779	Symbol	* ff_mpeg4_default_intra_matrix		102247						
ANR	105780	Symbol	CODEC_FLAG_QPEL		102247						
ANR	105781	Symbol	MPV_common_init		102247						
ANR	105782	Symbol	ff_rate_control_init		102247						
ANR	105783	Symbol	s -> q_intra_matrix16		102247						
ANR	105784	Symbol	av_gcd		102247						
ANR	105785	Symbol	avctx -> height		102247						
ANR	105786	Symbol	avctx -> time_base . num		102247						
ANR	105787	Symbol	avctx -> trellis		102247						
ANR	105788	Symbol	s -> avctx -> time_base		102247						
ANR	105789	Symbol	ff_mpeg1_default_non_intra_matrix		102247						
ANR	105790	Symbol	s -> avctx -> scenechange_threshold		102247						
ANR	105791	Symbol	s -> intra_vlc_format		102247						
ANR	105792	Symbol	ff_h263_chroma_qscale_table		102247						
ANR	105793	Symbol	dct_quantize_trellis_c		102247						
ANR	105794	Symbol	s -> avctx -> thread_count		102247						
ANR	105795	Symbol	avctx -> priv_data		102247						
ANR	105796	Symbol	s -> quant_precision		102247						
ANR	105797	Symbol	* i		102247						
ANR	105798	Symbol	* j		102247						
ANR	105799	Symbol	s -> avctx -> dark_masking		102247						
ANR	105800	Symbol	avctx -> rc_buffer_size		102247						
ANR	105801	Symbol	s -> fixed_qscale		102247						
ANR	105802	Symbol	avctx -> intra_dc_precision		102247						
ANR	105803	Symbol	avctx -> sample_aspect_ratio		102247						
ANR	105804	Symbol	PIX_FMT_YUVJ422P		102247						
ANR	105805	Symbol	CODEC_FLAG2_NON_LINEAR_QUANT		102247						
ANR	105806	Symbol	s -> intra_quant_bias		102247						
ANR	105807	Symbol	CODEC_ID_MJPEG		102247						
ANR	105808	Symbol	* s		102247						
