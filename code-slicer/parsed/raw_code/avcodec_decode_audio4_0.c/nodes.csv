command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	812435	File	/home/p4ultr4n/workplace/ReVeal/raw_code/avcodec_decode_audio4_0.c								
ANR	812436	Function	avcodec_decode_audio4	1:0:0:6313							
ANR	812437	FunctionDef	"avcodec_decode_audio4 (AVCodecContext * avctx , AVFrame * frame , int * got_frame_ptr , const AVPacket * avpkt)"		812436	0					
ANR	812438	CompoundStatement		9:0:270:6313	812436	0					
ANR	812439	IdentifierDeclStatement	AVCodecInternal * avci = avctx -> internal ;	11:4:277:316	812436	0	True				
ANR	812440	IdentifierDecl	* avci = avctx -> internal		812436	0					
ANR	812441	IdentifierDeclType	AVCodecInternal *		812436	0					
ANR	812442	Identifier	avci		812436	1					
ANR	812443	AssignmentExpression	* avci = avctx -> internal		812436	2		=			
ANR	812444	Identifier	avci		812436	0					
ANR	812445	PtrMemberAccess	avctx -> internal		812436	1					
ANR	812446	Identifier	avctx		812436	0					
ANR	812447	Identifier	internal		812436	1					
ANR	812448	IdentifierDeclStatement	int ret = 0 ;	13:4:323:334	812436	1	True				
ANR	812449	IdentifierDecl	ret = 0		812436	0					
ANR	812450	IdentifierDeclType	int		812436	0					
ANR	812451	Identifier	ret		812436	1					
ANR	812452	AssignmentExpression	ret = 0		812436	2		=			
ANR	812453	Identifier	ret		812436	0					
ANR	812454	PrimaryExpression	0		812436	1					
ANR	812455	ExpressionStatement	* got_frame_ptr = 0	17:4:343:361	812436	2	True				
ANR	812456	AssignmentExpression	* got_frame_ptr = 0		812436	0		=			
ANR	812457	UnaryOperationExpression	* got_frame_ptr		812436	0					
ANR	812458	UnaryOperator	*		812436	0					
ANR	812459	Identifier	got_frame_ptr		812436	1					
ANR	812460	PrimaryExpression	0		812436	1					
ANR	812461	IfStatement	if ( ! avpkt -> data && avpkt -> size )		812436	3					
ANR	812462	Condition	! avpkt -> data && avpkt -> size	21:8:374:400	812436	0	True				
ANR	812463	AndExpression	! avpkt -> data && avpkt -> size		812436	0		&&			
ANR	812464	UnaryOperationExpression	! avpkt -> data		812436	0					
ANR	812465	UnaryOperator	!		812436	0					
ANR	812466	PtrMemberAccess	avpkt -> data		812436	1					
ANR	812467	Identifier	avpkt		812436	0					
ANR	812468	Identifier	data		812436	1					
ANR	812469	PtrMemberAccess	avpkt -> size		812436	1					
ANR	812470	Identifier	avpkt		812436	0					
ANR	812471	Identifier	size		812436	1					
ANR	812472	CompoundStatement		13:37:132:132	812436	1					
ANR	812473	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""invalid packet: NULL data, size != 0\\n"" )"	23:8:414:483	812436	0	True				
ANR	812474	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""invalid packet: NULL data, size != 0\\n"" )"		812436	0					
ANR	812475	Callee	av_log		812436	0					
ANR	812476	Identifier	av_log		812436	0					
ANR	812477	ArgumentList	avctx		812436	1					
ANR	812478	Argument	avctx		812436	0					
ANR	812479	Identifier	avctx		812436	0					
ANR	812480	Argument	AV_LOG_ERROR		812436	1					
ANR	812481	Identifier	AV_LOG_ERROR		812436	0					
ANR	812482	Argument	"""invalid packet: NULL data, size != 0\\n"""		812436	2					
ANR	812483	PrimaryExpression	"""invalid packet: NULL data, size != 0\\n"""		812436	0					
ANR	812484	ReturnStatement	return AVERROR ( EINVAL ) ;	25:8:494:516	812436	1	True				
ANR	812485	CallExpression	AVERROR ( EINVAL )		812436	0					
ANR	812486	Callee	AVERROR		812436	0					
ANR	812487	Identifier	AVERROR		812436	0					
ANR	812488	ArgumentList	EINVAL		812436	1					
ANR	812489	Argument	EINVAL		812436	0					
ANR	812490	Identifier	EINVAL		812436	0					
ANR	812491	IfStatement	if ( ! avctx -> codec )		812436	4					
ANR	812492	Condition	! avctx -> codec	29:8:534:546	812436	0	True				
ANR	812493	UnaryOperationExpression	! avctx -> codec		812436	0					
ANR	812494	UnaryOperator	!		812436	0					
ANR	812495	PtrMemberAccess	avctx -> codec		812436	1					
ANR	812496	Identifier	avctx		812436	0					
ANR	812497	Identifier	codec		812436	1					
ANR	812498	ReturnStatement	return AVERROR ( EINVAL ) ;	31:8:558:580	812436	1	True				
ANR	812499	CallExpression	AVERROR ( EINVAL )		812436	0					
ANR	812500	Callee	AVERROR		812436	0					
ANR	812501	Identifier	AVERROR		812436	0					
ANR	812502	ArgumentList	EINVAL		812436	1					
ANR	812503	Argument	EINVAL		812436	0					
ANR	812504	Identifier	EINVAL		812436	0					
ANR	812505	IfStatement	if ( avctx -> codec -> type != AVMEDIA_TYPE_AUDIO )		812436	5					
ANR	812506	Condition	avctx -> codec -> type != AVMEDIA_TYPE_AUDIO	33:8:591:630	812436	0	True				
ANR	812507	EqualityExpression	avctx -> codec -> type != AVMEDIA_TYPE_AUDIO		812436	0		!=			
ANR	812508	PtrMemberAccess	avctx -> codec -> type		812436	0					
ANR	812509	PtrMemberAccess	avctx -> codec		812436	0					
ANR	812510	Identifier	avctx		812436	0					
ANR	812511	Identifier	codec		812436	1					
ANR	812512	Identifier	type		812436	1					
ANR	812513	Identifier	AVMEDIA_TYPE_AUDIO		812436	1					
ANR	812514	CompoundStatement		25:50:362:362	812436	1					
ANR	812515	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Invalid media type for audio\\n"" )"	35:8:644:705	812436	0	True				
ANR	812516	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Invalid media type for audio\\n"" )"		812436	0					
ANR	812517	Callee	av_log		812436	0					
ANR	812518	Identifier	av_log		812436	0					
ANR	812519	ArgumentList	avctx		812436	1					
ANR	812520	Argument	avctx		812436	0					
ANR	812521	Identifier	avctx		812436	0					
ANR	812522	Argument	AV_LOG_ERROR		812436	1					
ANR	812523	Identifier	AV_LOG_ERROR		812436	0					
ANR	812524	Argument	"""Invalid media type for audio\\n"""		812436	2					
ANR	812525	PrimaryExpression	"""Invalid media type for audio\\n"""		812436	0					
ANR	812526	ReturnStatement	return AVERROR ( EINVAL ) ;	37:8:716:738	812436	1	True				
ANR	812527	CallExpression	AVERROR ( EINVAL )		812436	0					
ANR	812528	Callee	AVERROR		812436	0					
ANR	812529	Identifier	AVERROR		812436	0					
ANR	812530	ArgumentList	EINVAL		812436	1					
ANR	812531	Argument	EINVAL		812436	0					
ANR	812532	Identifier	EINVAL		812436	0					
ANR	812533	ExpressionStatement	av_frame_unref ( frame )	43:4:754:775	812436	6	True				
ANR	812534	CallExpression	av_frame_unref ( frame )		812436	0					
ANR	812535	Callee	av_frame_unref		812436	0					
ANR	812536	Identifier	av_frame_unref		812436	0					
ANR	812537	ArgumentList	frame		812436	1					
ANR	812538	Argument	frame		812436	0					
ANR	812539	Identifier	frame		812436	0					
ANR	812540	IfStatement	if ( ( avctx -> codec -> capabilities & CODEC_CAP_DELAY ) || avpkt -> size || ( avctx -> active_thread_type & FF_THREAD_FRAME ) )		812436	7					
ANR	812541	Condition	( avctx -> codec -> capabilities & CODEC_CAP_DELAY ) || avpkt -> size || ( avctx -> active_thread_type & FF_THREAD_FRAME )	47:8:788:897	812436	0	True				
ANR	812542	OrExpression	( avctx -> codec -> capabilities & CODEC_CAP_DELAY ) || avpkt -> size || ( avctx -> active_thread_type & FF_THREAD_FRAME )		812436	0		||			
ANR	812543	BitAndExpression	avctx -> codec -> capabilities & CODEC_CAP_DELAY		812436	0		&			
ANR	812544	PtrMemberAccess	avctx -> codec -> capabilities		812436	0					
ANR	812545	PtrMemberAccess	avctx -> codec		812436	0					
ANR	812546	Identifier	avctx		812436	0					
ANR	812547	Identifier	codec		812436	1					
ANR	812548	Identifier	capabilities		812436	1					
ANR	812549	Identifier	CODEC_CAP_DELAY		812436	1					
ANR	812550	OrExpression	avpkt -> size || ( avctx -> active_thread_type & FF_THREAD_FRAME )		812436	1		||			
ANR	812551	PtrMemberAccess	avpkt -> size		812436	0					
ANR	812552	Identifier	avpkt		812436	0					
ANR	812553	Identifier	size		812436	1					
ANR	812554	BitAndExpression	avctx -> active_thread_type & FF_THREAD_FRAME		812436	1		&			
ANR	812555	PtrMemberAccess	avctx -> active_thread_type		812436	0					
ANR	812556	Identifier	avctx		812436	0					
ANR	812557	Identifier	active_thread_type		812436	1					
ANR	812558	Identifier	FF_THREAD_FRAME		812436	1					
ANR	812559	CompoundStatement		51:8:809:856	812436	1					
ANR	812560	IdentifierDeclStatement	uint8_t * side ;	49:8:911:924	812436	0	True				
ANR	812561	IdentifierDecl	* side		812436	0					
ANR	812562	IdentifierDeclType	uint8_t *		812436	0					
ANR	812563	Identifier	side		812436	1					
ANR	812564	IdentifierDeclStatement	int side_size ;	51:8:935:948	812436	1	True				
ANR	812565	IdentifierDecl	side_size		812436	0					
ANR	812566	IdentifierDeclType	int		812436	0					
ANR	812567	Identifier	side_size		812436	1					
ANR	812568	IdentifierDeclStatement	uint32_t discard_padding = 0 ;	53:8:959:987	812436	2	True				
ANR	812569	IdentifierDecl	discard_padding = 0		812436	0					
ANR	812570	IdentifierDeclType	uint32_t		812436	0					
ANR	812571	Identifier	discard_padding		812436	1					
ANR	812572	AssignmentExpression	discard_padding = 0		812436	2		=			
ANR	812573	Identifier	discard_padding		812436	0					
ANR	812574	PrimaryExpression	0		812436	1					
ANR	812575	IdentifierDeclStatement	AVPacket tmp = * avpkt ;	57:8:1048:1069	812436	3	True				
ANR	812576	IdentifierDecl	tmp = * avpkt		812436	0					
ANR	812577	IdentifierDeclType	AVPacket		812436	0					
ANR	812578	Identifier	tmp		812436	1					
ANR	812579	AssignmentExpression	tmp = * avpkt		812436	2		=			
ANR	812580	Identifier	tmp		812436	0					
ANR	812581	UnaryOperationExpression	* avpkt		812436	1					
ANR	812582	UnaryOperator	*		812436	0					
ANR	812583	Identifier	avpkt		812436	1					
ANR	812584	IdentifierDeclStatement	int did_split = av_packet_split_side_data ( & tmp ) ;	59:8:1080:1127	812436	4	True				
ANR	812585	IdentifierDecl	did_split = av_packet_split_side_data ( & tmp )		812436	0					
ANR	812586	IdentifierDeclType	int		812436	0					
ANR	812587	Identifier	did_split		812436	1					
ANR	812588	AssignmentExpression	did_split = av_packet_split_side_data ( & tmp )		812436	2		=			
ANR	812589	Identifier	did_split		812436	0					
ANR	812590	CallExpression	av_packet_split_side_data ( & tmp )		812436	1					
ANR	812591	Callee	av_packet_split_side_data		812436	0					
ANR	812592	Identifier	av_packet_split_side_data		812436	0					
ANR	812593	ArgumentList	& tmp		812436	1					
ANR	812594	Argument	& tmp		812436	0					
ANR	812595	UnaryOperationExpression	& tmp		812436	0					
ANR	812596	UnaryOperator	&		812436	0					
ANR	812597	Identifier	tmp		812436	1					
ANR	812598	ExpressionStatement	"ret = apply_param_change ( avctx , & tmp )"	61:8:1138:1175	812436	5	True				
ANR	812599	AssignmentExpression	"ret = apply_param_change ( avctx , & tmp )"		812436	0		=			
ANR	812600	Identifier	ret		812436	0					
ANR	812601	CallExpression	"apply_param_change ( avctx , & tmp )"		812436	1					
ANR	812602	Callee	apply_param_change		812436	0					
ANR	812603	Identifier	apply_param_change		812436	0					
ANR	812604	ArgumentList	avctx		812436	1					
ANR	812605	Argument	avctx		812436	0					
ANR	812606	Identifier	avctx		812436	0					
ANR	812607	Argument	& tmp		812436	1					
ANR	812608	UnaryOperationExpression	& tmp		812436	0					
ANR	812609	UnaryOperator	&		812436	0					
ANR	812610	Identifier	tmp		812436	1					
ANR	812611	IfStatement	if ( ret < 0 )		812436	6					
ANR	812612	Condition	ret < 0	63:12:1190:1196	812436	0	True				
ANR	812613	RelationalExpression	ret < 0		812436	0		<			
ANR	812614	Identifier	ret		812436	0					
ANR	812615	PrimaryExpression	0		812436	1					
ANR	812616	CompoundStatement		55:21:928:928	812436	1					
ANR	812617	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Error applying parameter changes.\\n"" )"	65:12:1214:1280	812436	0	True				
ANR	812618	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Error applying parameter changes.\\n"" )"		812436	0					
ANR	812619	Callee	av_log		812436	0					
ANR	812620	Identifier	av_log		812436	0					
ANR	812621	ArgumentList	avctx		812436	1					
ANR	812622	Argument	avctx		812436	0					
ANR	812623	Identifier	avctx		812436	0					
ANR	812624	Argument	AV_LOG_ERROR		812436	1					
ANR	812625	Identifier	AV_LOG_ERROR		812436	0					
ANR	812626	Argument	"""Error applying parameter changes.\\n"""		812436	2					
ANR	812627	PrimaryExpression	"""Error applying parameter changes.\\n"""		812436	0					
ANR	812628	IfStatement	if ( avctx -> err_recognition & AV_EF_EXPLODE )		812436	1					
ANR	812629	Condition	avctx -> err_recognition & AV_EF_EXPLODE	67:16:1299:1336	812436	0	True				
ANR	812630	BitAndExpression	avctx -> err_recognition & AV_EF_EXPLODE		812436	0		&			
ANR	812631	PtrMemberAccess	avctx -> err_recognition		812436	0					
ANR	812632	Identifier	avctx		812436	0					
ANR	812633	Identifier	err_recognition		812436	1					
ANR	812634	Identifier	AV_EF_EXPLODE		812436	1					
ANR	812635	GotoStatement	goto fail ;	69:16:1356:1365	812436	1	True				
ANR	812636	Identifier	fail		812436	0					
ANR	812637	ExpressionStatement	avctx -> internal -> pkt = & tmp	75:8:1389:1416	812436	7	True				
ANR	812638	AssignmentExpression	avctx -> internal -> pkt = & tmp		812436	0		=			
ANR	812639	PtrMemberAccess	avctx -> internal -> pkt		812436	0					
ANR	812640	PtrMemberAccess	avctx -> internal		812436	0					
ANR	812641	Identifier	avctx		812436	0					
ANR	812642	Identifier	internal		812436	1					
ANR	812643	Identifier	pkt		812436	1					
ANR	812644	UnaryOperationExpression	& tmp		812436	1					
ANR	812645	UnaryOperator	&		812436	0					
ANR	812646	Identifier	tmp		812436	1					
ANR	812647	IfStatement	if ( HAVE_THREADS && avctx -> active_thread_type & FF_THREAD_FRAME )		812436	8					
ANR	812648	Condition	HAVE_THREADS && avctx -> active_thread_type & FF_THREAD_FRAME	77:12:1431:1489	812436	0	True				
ANR	812649	AndExpression	HAVE_THREADS && avctx -> active_thread_type & FF_THREAD_FRAME		812436	0		&&			
ANR	812650	Identifier	HAVE_THREADS		812436	0					
ANR	812651	BitAndExpression	avctx -> active_thread_type & FF_THREAD_FRAME		812436	1		&			
ANR	812652	PtrMemberAccess	avctx -> active_thread_type		812436	0					
ANR	812653	Identifier	avctx		812436	0					
ANR	812654	Identifier	active_thread_type		812436	1					
ANR	812655	Identifier	FF_THREAD_FRAME		812436	1					
ANR	812656	ExpressionStatement	"ret = ff_thread_decode_frame ( avctx , frame , got_frame_ptr , & tmp )"	79:12:1505:1568	812436	1	True				
ANR	812657	AssignmentExpression	"ret = ff_thread_decode_frame ( avctx , frame , got_frame_ptr , & tmp )"		812436	0		=			
ANR	812658	Identifier	ret		812436	0					
ANR	812659	CallExpression	"ff_thread_decode_frame ( avctx , frame , got_frame_ptr , & tmp )"		812436	1					
ANR	812660	Callee	ff_thread_decode_frame		812436	0					
ANR	812661	Identifier	ff_thread_decode_frame		812436	0					
ANR	812662	ArgumentList	avctx		812436	1					
ANR	812663	Argument	avctx		812436	0					
ANR	812664	Identifier	avctx		812436	0					
ANR	812665	Argument	frame		812436	1					
ANR	812666	Identifier	frame		812436	0					
ANR	812667	Argument	got_frame_ptr		812436	2					
ANR	812668	Identifier	got_frame_ptr		812436	0					
ANR	812669	Argument	& tmp		812436	3					
ANR	812670	UnaryOperationExpression	& tmp		812436	0					
ANR	812671	UnaryOperator	&		812436	0					
ANR	812672	Identifier	tmp		812436	1					
ANR	812673	ElseStatement	else		812436	0					
ANR	812674	CompoundStatement		73:13:1313:1313	812436	0					
ANR	812675	ExpressionStatement	"ret = avctx -> codec -> decode ( avctx , frame , got_frame_ptr , & tmp )"	83:12:1599:1660	812436	0	True				
ANR	812676	AssignmentExpression	"ret = avctx -> codec -> decode ( avctx , frame , got_frame_ptr , & tmp )"		812436	0		=			
ANR	812677	Identifier	ret		812436	0					
ANR	812678	CallExpression	"avctx -> codec -> decode ( avctx , frame , got_frame_ptr , & tmp )"		812436	1					
ANR	812679	Callee	avctx -> codec -> decode		812436	0					
ANR	812680	PtrMemberAccess	avctx -> codec -> decode		812436	0					
ANR	812681	PtrMemberAccess	avctx -> codec		812436	0					
ANR	812682	Identifier	avctx		812436	0					
ANR	812683	Identifier	codec		812436	1					
ANR	812684	Identifier	decode		812436	1					
ANR	812685	ArgumentList	avctx		812436	1					
ANR	812686	Argument	avctx		812436	0					
ANR	812687	Identifier	avctx		812436	0					
ANR	812688	Argument	frame		812436	1					
ANR	812689	Identifier	frame		812436	0					
ANR	812690	Argument	got_frame_ptr		812436	2					
ANR	812691	Identifier	got_frame_ptr		812436	0					
ANR	812692	Argument	& tmp		812436	3					
ANR	812693	UnaryOperationExpression	& tmp		812436	0					
ANR	812694	UnaryOperator	&		812436	0					
ANR	812695	Identifier	tmp		812436	1					
ANR	812696	ExpressionStatement	frame -> pkt_dts = avpkt -> dts	85:12:1675:1702	812436	1	True				
ANR	812697	AssignmentExpression	frame -> pkt_dts = avpkt -> dts		812436	0		=			
ANR	812698	PtrMemberAccess	frame -> pkt_dts		812436	0					
ANR	812699	Identifier	frame		812436	0					
ANR	812700	Identifier	pkt_dts		812436	1					
ANR	812701	PtrMemberAccess	avpkt -> dts		812436	1					
ANR	812702	Identifier	avpkt		812436	0					
ANR	812703	Identifier	dts		812436	1					
ANR	812704	IfStatement	if ( ret >= 0 && * got_frame_ptr )		812436	9					
ANR	812705	Condition	ret >= 0 && * got_frame_ptr	89:12:1728:1753	812436	0	True				
ANR	812706	AndExpression	ret >= 0 && * got_frame_ptr		812436	0		&&			
ANR	812707	RelationalExpression	ret >= 0		812436	0		>=			
ANR	812708	Identifier	ret		812436	0					
ANR	812709	PrimaryExpression	0		812436	1					
ANR	812710	UnaryOperationExpression	* got_frame_ptr		812436	1					
ANR	812711	UnaryOperator	*		812436	0					
ANR	812712	Identifier	got_frame_ptr		812436	1					
ANR	812713	CompoundStatement		81:40:1485:1485	812436	1					
ANR	812714	ExpressionStatement	"add_metadata_from_side_data ( avctx , frame )"	91:12:1771:1812	812436	0	True				
ANR	812715	CallExpression	"add_metadata_from_side_data ( avctx , frame )"		812436	0					
ANR	812716	Callee	add_metadata_from_side_data		812436	0					
ANR	812717	Identifier	add_metadata_from_side_data		812436	0					
ANR	812718	ArgumentList	avctx		812436	1					
ANR	812719	Argument	avctx		812436	0					
ANR	812720	Identifier	avctx		812436	0					
ANR	812721	Argument	frame		812436	1					
ANR	812722	Identifier	frame		812436	0					
ANR	812723	ExpressionStatement	avctx -> frame_number ++	93:12:1827:1848	812436	1	True				
ANR	812724	PostIncDecOperationExpression	avctx -> frame_number ++		812436	0					
ANR	812725	PtrMemberAccess	avctx -> frame_number		812436	0					
ANR	812726	Identifier	avctx		812436	0					
ANR	812727	Identifier	frame_number		812436	1					
ANR	812728	IncDec	++		812436	1					
ANR	812729	ExpressionStatement	"av_frame_set_best_effort_timestamp ( frame , guess_correct_pts ( avctx , frame -> pkt_pts , frame -> pkt_dts ) )"	95:12:1863:2142	812436	2	True				
ANR	812730	CallExpression	"av_frame_set_best_effort_timestamp ( frame , guess_correct_pts ( avctx , frame -> pkt_pts , frame -> pkt_dts ) )"		812436	0					
ANR	812731	Callee	av_frame_set_best_effort_timestamp		812436	0					
ANR	812732	Identifier	av_frame_set_best_effort_timestamp		812436	0					
ANR	812733	ArgumentList	frame		812436	1					
ANR	812734	Argument	frame		812436	0					
ANR	812735	Identifier	frame		812436	0					
ANR	812736	Argument	"guess_correct_pts ( avctx , frame -> pkt_pts , frame -> pkt_dts )"		812436	1					
ANR	812737	CallExpression	"guess_correct_pts ( avctx , frame -> pkt_pts , frame -> pkt_dts )"		812436	0					
ANR	812738	Callee	guess_correct_pts		812436	0					
ANR	812739	Identifier	guess_correct_pts		812436	0					
ANR	812740	ArgumentList	avctx		812436	1					
ANR	812741	Argument	avctx		812436	0					
ANR	812742	Identifier	avctx		812436	0					
ANR	812743	Argument	frame -> pkt_pts		812436	1					
ANR	812744	PtrMemberAccess	frame -> pkt_pts		812436	0					
ANR	812745	Identifier	frame		812436	0					
ANR	812746	Identifier	pkt_pts		812436	1					
ANR	812747	Argument	frame -> pkt_dts		812436	2					
ANR	812748	PtrMemberAccess	frame -> pkt_dts		812436	0					
ANR	812749	Identifier	frame		812436	0					
ANR	812750	Identifier	pkt_dts		812436	1					
ANR	812751	IfStatement	if ( frame -> format == AV_SAMPLE_FMT_NONE )		812436	3					
ANR	812752	Condition	frame -> format == AV_SAMPLE_FMT_NONE	103:16:2161:2195	812436	0	True				
ANR	812753	EqualityExpression	frame -> format == AV_SAMPLE_FMT_NONE		812436	0		==			
ANR	812754	PtrMemberAccess	frame -> format		812436	0					
ANR	812755	Identifier	frame		812436	0					
ANR	812756	Identifier	format		812436	1					
ANR	812757	Identifier	AV_SAMPLE_FMT_NONE		812436	1					
ANR	812758	ExpressionStatement	frame -> format = avctx -> sample_fmt	105:16:2215:2248	812436	1	True				
ANR	812759	AssignmentExpression	frame -> format = avctx -> sample_fmt		812436	0		=			
ANR	812760	PtrMemberAccess	frame -> format		812436	0					
ANR	812761	Identifier	frame		812436	0					
ANR	812762	Identifier	format		812436	1					
ANR	812763	PtrMemberAccess	avctx -> sample_fmt		812436	1					
ANR	812764	Identifier	avctx		812436	0					
ANR	812765	Identifier	sample_fmt		812436	1					
ANR	812766	IfStatement	if ( ! frame -> channel_layout )		812436	4					
ANR	812767	Condition	! frame -> channel_layout	107:16:2267:2288	812436	0	True				
ANR	812768	UnaryOperationExpression	! frame -> channel_layout		812436	0					
ANR	812769	UnaryOperator	!		812436	0					
ANR	812770	PtrMemberAccess	frame -> channel_layout		812436	1					
ANR	812771	Identifier	frame		812436	0					
ANR	812772	Identifier	channel_layout		812436	1					
ANR	812773	ExpressionStatement	frame -> channel_layout = avctx -> channel_layout	109:16:2308:2353	812436	1	True				
ANR	812774	AssignmentExpression	frame -> channel_layout = avctx -> channel_layout		812436	0		=			
ANR	812775	PtrMemberAccess	frame -> channel_layout		812436	0					
ANR	812776	Identifier	frame		812436	0					
ANR	812777	Identifier	channel_layout		812436	1					
ANR	812778	PtrMemberAccess	avctx -> channel_layout		812436	1					
ANR	812779	Identifier	avctx		812436	0					
ANR	812780	Identifier	channel_layout		812436	1					
ANR	812781	IfStatement	if ( ! av_frame_get_channels ( frame ) )		812436	5					
ANR	812782	Condition	! av_frame_get_channels ( frame )	111:16:2372:2400	812436	0	True				
ANR	812783	UnaryOperationExpression	! av_frame_get_channels ( frame )		812436	0					
ANR	812784	UnaryOperator	!		812436	0					
ANR	812785	CallExpression	av_frame_get_channels ( frame )		812436	1					
ANR	812786	Callee	av_frame_get_channels		812436	0					
ANR	812787	Identifier	av_frame_get_channels		812436	0					
ANR	812788	ArgumentList	frame		812436	1					
ANR	812789	Argument	frame		812436	0					
ANR	812790	Identifier	frame		812436	0					
ANR	812791	ExpressionStatement	"av_frame_set_channels ( frame , avctx -> channels )"	113:16:2420:2465	812436	1	True				
ANR	812792	CallExpression	"av_frame_set_channels ( frame , avctx -> channels )"		812436	0					
ANR	812793	Callee	av_frame_set_channels		812436	0					
ANR	812794	Identifier	av_frame_set_channels		812436	0					
ANR	812795	ArgumentList	frame		812436	1					
ANR	812796	Argument	frame		812436	0					
ANR	812797	Identifier	frame		812436	0					
ANR	812798	Argument	avctx -> channels		812436	1					
ANR	812799	PtrMemberAccess	avctx -> channels		812436	0					
ANR	812800	Identifier	avctx		812436	0					
ANR	812801	Identifier	channels		812436	1					
ANR	812802	IfStatement	if ( ! frame -> sample_rate )		812436	6					
ANR	812803	Condition	! frame -> sample_rate	115:16:2484:2502	812436	0	True				
ANR	812804	UnaryOperationExpression	! frame -> sample_rate		812436	0					
ANR	812805	UnaryOperator	!		812436	0					
ANR	812806	PtrMemberAccess	frame -> sample_rate		812436	1					
ANR	812807	Identifier	frame		812436	0					
ANR	812808	Identifier	sample_rate		812436	1					
ANR	812809	ExpressionStatement	frame -> sample_rate = avctx -> sample_rate	117:16:2522:2561	812436	1	True				
ANR	812810	AssignmentExpression	frame -> sample_rate = avctx -> sample_rate		812436	0		=			
ANR	812811	PtrMemberAccess	frame -> sample_rate		812436	0					
ANR	812812	Identifier	frame		812436	0					
ANR	812813	Identifier	sample_rate		812436	1					
ANR	812814	PtrMemberAccess	avctx -> sample_rate		812436	1					
ANR	812815	Identifier	avctx		812436	0					
ANR	812816	Identifier	sample_rate		812436	1					
ANR	812817	ExpressionStatement	"side = av_packet_get_side_data ( avctx -> internal -> pkt , AV_PKT_DATA_SKIP_SAMPLES , & side_size )"	123:8:2585:2674	812436	10	True				
ANR	812818	AssignmentExpression	"side = av_packet_get_side_data ( avctx -> internal -> pkt , AV_PKT_DATA_SKIP_SAMPLES , & side_size )"		812436	0		=			
ANR	812819	Identifier	side		812436	0					
ANR	812820	CallExpression	"av_packet_get_side_data ( avctx -> internal -> pkt , AV_PKT_DATA_SKIP_SAMPLES , & side_size )"		812436	1					
ANR	812821	Callee	av_packet_get_side_data		812436	0					
ANR	812822	Identifier	av_packet_get_side_data		812436	0					
ANR	812823	ArgumentList	avctx -> internal -> pkt		812436	1					
ANR	812824	Argument	avctx -> internal -> pkt		812436	0					
ANR	812825	PtrMemberAccess	avctx -> internal -> pkt		812436	0					
ANR	812826	PtrMemberAccess	avctx -> internal		812436	0					
ANR	812827	Identifier	avctx		812436	0					
ANR	812828	Identifier	internal		812436	1					
ANR	812829	Identifier	pkt		812436	1					
ANR	812830	Argument	AV_PKT_DATA_SKIP_SAMPLES		812436	1					
ANR	812831	Identifier	AV_PKT_DATA_SKIP_SAMPLES		812436	0					
ANR	812832	Argument	& side_size		812436	2					
ANR	812833	UnaryOperationExpression	& side_size		812436	0					
ANR	812834	UnaryOperator	&		812436	0					
ANR	812835	Identifier	side_size		812436	1					
ANR	812836	IfStatement	if ( side && side_size >= 10 )		812436	11					
ANR	812837	Condition	side && side_size >= 10	125:11:2688:2708	812436	0	True				
ANR	812838	AndExpression	side && side_size >= 10		812436	0		&&			
ANR	812839	Identifier	side		812436	0					
ANR	812840	RelationalExpression	side_size >= 10		812436	1		>=			
ANR	812841	Identifier	side_size		812436	0					
ANR	812842	PrimaryExpression	10		812436	1					
ANR	812843	CompoundStatement		117:34:2440:2440	812436	1					
ANR	812844	ExpressionStatement	avctx -> internal -> skip_samples = AV_RL32 ( side )	127:12:2726:2771	812436	0	True				
ANR	812845	AssignmentExpression	avctx -> internal -> skip_samples = AV_RL32 ( side )		812436	0		=			
ANR	812846	PtrMemberAccess	avctx -> internal -> skip_samples		812436	0					
ANR	812847	PtrMemberAccess	avctx -> internal		812436	0					
ANR	812848	Identifier	avctx		812436	0					
ANR	812849	Identifier	internal		812436	1					
ANR	812850	Identifier	skip_samples		812436	1					
ANR	812851	CallExpression	AV_RL32 ( side )		812436	1					
ANR	812852	Callee	AV_RL32		812436	0					
ANR	812853	Identifier	AV_RL32		812436	0					
ANR	812854	ArgumentList	side		812436	1					
ANR	812855	Argument	side		812436	0					
ANR	812856	Identifier	side		812436	0					
ANR	812857	ExpressionStatement	"av_log ( avctx , AV_LOG_DEBUG , ""skip %d samples due to side data\\n"" , avctx -> internal -> skip_samples )"	129:12:2786:2902	812436	1	True				
ANR	812858	CallExpression	"av_log ( avctx , AV_LOG_DEBUG , ""skip %d samples due to side data\\n"" , avctx -> internal -> skip_samples )"		812436	0					
ANR	812859	Callee	av_log		812436	0					
ANR	812860	Identifier	av_log		812436	0					
ANR	812861	ArgumentList	avctx		812436	1					
ANR	812862	Argument	avctx		812436	0					
ANR	812863	Identifier	avctx		812436	0					
ANR	812864	Argument	AV_LOG_DEBUG		812436	1					
ANR	812865	Identifier	AV_LOG_DEBUG		812436	0					
ANR	812866	Argument	"""skip %d samples due to side data\\n"""		812436	2					
ANR	812867	PrimaryExpression	"""skip %d samples due to side data\\n"""		812436	0					
ANR	812868	Argument	avctx -> internal -> skip_samples		812436	3					
ANR	812869	PtrMemberAccess	avctx -> internal -> skip_samples		812436	0					
ANR	812870	PtrMemberAccess	avctx -> internal		812436	0					
ANR	812871	Identifier	avctx		812436	0					
ANR	812872	Identifier	internal		812436	1					
ANR	812873	Identifier	skip_samples		812436	1					
ANR	812874	ExpressionStatement	discard_padding = AV_RL32 ( side + 4 )	133:12:2917:2952	812436	2	True				
ANR	812875	AssignmentExpression	discard_padding = AV_RL32 ( side + 4 )		812436	0		=			
ANR	812876	Identifier	discard_padding		812436	0					
ANR	812877	CallExpression	AV_RL32 ( side + 4 )		812436	1					
ANR	812878	Callee	AV_RL32		812436	0					
ANR	812879	Identifier	AV_RL32		812436	0					
ANR	812880	ArgumentList	side + 4		812436	1					
ANR	812881	Argument	side + 4		812436	0					
ANR	812882	AdditiveExpression	side + 4		812436	0		+			
ANR	812883	Identifier	side		812436	0					
ANR	812884	PrimaryExpression	4		812436	1					
ANR	812885	IfStatement	if ( avctx -> internal -> skip_samples && * got_frame_ptr )		812436	12					
ANR	812886	Condition	avctx -> internal -> skip_samples && * got_frame_ptr	137:12:2978:3024	812436	0	True				
ANR	812887	AndExpression	avctx -> internal -> skip_samples && * got_frame_ptr		812436	0		&&			
ANR	812888	PtrMemberAccess	avctx -> internal -> skip_samples		812436	0					
ANR	812889	PtrMemberAccess	avctx -> internal		812436	0					
ANR	812890	Identifier	avctx		812436	0					
ANR	812891	Identifier	internal		812436	1					
ANR	812892	Identifier	skip_samples		812436	1					
ANR	812893	UnaryOperationExpression	* got_frame_ptr		812436	1					
ANR	812894	UnaryOperator	*		812436	0					
ANR	812895	Identifier	got_frame_ptr		812436	1					
ANR	812896	CompoundStatement		129:61:2756:2756	812436	1					
ANR	812897	IfStatement	if ( frame -> nb_samples <= avctx -> internal -> skip_samples )		812436	0					
ANR	812898	Condition	frame -> nb_samples <= avctx -> internal -> skip_samples	139:15:3045:3094	812436	0	True				
ANR	812899	RelationalExpression	frame -> nb_samples <= avctx -> internal -> skip_samples		812436	0		<=			
ANR	812900	PtrMemberAccess	frame -> nb_samples		812436	0					
ANR	812901	Identifier	frame		812436	0					
ANR	812902	Identifier	nb_samples		812436	1					
ANR	812903	PtrMemberAccess	avctx -> internal -> skip_samples		812436	1					
ANR	812904	PtrMemberAccess	avctx -> internal		812436	0					
ANR	812905	Identifier	avctx		812436	0					
ANR	812906	Identifier	internal		812436	1					
ANR	812907	Identifier	skip_samples		812436	1					
ANR	812908	CompoundStatement		131:66:2825:2825	812436	1					
ANR	812909	ExpressionStatement	* got_frame_ptr = 0	141:16:3115:3133	812436	0	True				
ANR	812910	AssignmentExpression	* got_frame_ptr = 0		812436	0		=			
ANR	812911	UnaryOperationExpression	* got_frame_ptr		812436	0					
ANR	812912	UnaryOperator	*		812436	0					
ANR	812913	Identifier	got_frame_ptr		812436	1					
ANR	812914	PrimaryExpression	0		812436	1					
ANR	812915	ExpressionStatement	avctx -> internal -> skip_samples -= frame -> nb_samples	143:16:3152:3202	812436	1	True				
ANR	812916	AssignmentExpression	avctx -> internal -> skip_samples -= frame -> nb_samples		812436	0		-=			
ANR	812917	PtrMemberAccess	avctx -> internal -> skip_samples		812436	0					
ANR	812918	PtrMemberAccess	avctx -> internal		812436	0					
ANR	812919	Identifier	avctx		812436	0					
ANR	812920	Identifier	internal		812436	1					
ANR	812921	Identifier	skip_samples		812436	1					
ANR	812922	PtrMemberAccess	frame -> nb_samples		812436	1					
ANR	812923	Identifier	frame		812436	0					
ANR	812924	Identifier	nb_samples		812436	1					
ANR	812925	ExpressionStatement	"av_log ( avctx , AV_LOG_DEBUG , ""skip whole frame, skip left: %d\\n"" , avctx -> internal -> skip_samples )"	145:16:3221:3340	812436	2	True				
ANR	812926	CallExpression	"av_log ( avctx , AV_LOG_DEBUG , ""skip whole frame, skip left: %d\\n"" , avctx -> internal -> skip_samples )"		812436	0					
ANR	812927	Callee	av_log		812436	0					
ANR	812928	Identifier	av_log		812436	0					
ANR	812929	ArgumentList	avctx		812436	1					
ANR	812930	Argument	avctx		812436	0					
ANR	812931	Identifier	avctx		812436	0					
ANR	812932	Argument	AV_LOG_DEBUG		812436	1					
ANR	812933	Identifier	AV_LOG_DEBUG		812436	0					
ANR	812934	Argument	"""skip whole frame, skip left: %d\\n"""		812436	2					
ANR	812935	PrimaryExpression	"""skip whole frame, skip left: %d\\n"""		812436	0					
ANR	812936	Argument	avctx -> internal -> skip_samples		812436	3					
ANR	812937	PtrMemberAccess	avctx -> internal -> skip_samples		812436	0					
ANR	812938	PtrMemberAccess	avctx -> internal		812436	0					
ANR	812939	Identifier	avctx		812436	0					
ANR	812940	Identifier	internal		812436	1					
ANR	812941	Identifier	skip_samples		812436	1					
ANR	812942	ElseStatement	else		812436	0					
ANR	812943	CompoundStatement		141:19:3091:3091	812436	0					
ANR	812944	ExpressionStatement	"av_samples_copy ( frame -> extended_data , frame -> extended_data , 0 , avctx -> internal -> skip_samples , frame -> nb_samples - avctx -> internal -> skip_samples , avctx -> channels , frame -> format )"	151:16:3381:3590	812436	0	True				
ANR	812945	CallExpression	"av_samples_copy ( frame -> extended_data , frame -> extended_data , 0 , avctx -> internal -> skip_samples , frame -> nb_samples - avctx -> internal -> skip_samples , avctx -> channels , frame -> format )"		812436	0					
ANR	812946	Callee	av_samples_copy		812436	0					
ANR	812947	Identifier	av_samples_copy		812436	0					
ANR	812948	ArgumentList	frame -> extended_data		812436	1					
ANR	812949	Argument	frame -> extended_data		812436	0					
ANR	812950	PtrMemberAccess	frame -> extended_data		812436	0					
ANR	812951	Identifier	frame		812436	0					
ANR	812952	Identifier	extended_data		812436	1					
ANR	812953	Argument	frame -> extended_data		812436	1					
ANR	812954	PtrMemberAccess	frame -> extended_data		812436	0					
ANR	812955	Identifier	frame		812436	0					
ANR	812956	Identifier	extended_data		812436	1					
ANR	812957	Argument	0		812436	2					
ANR	812958	PrimaryExpression	0		812436	0					
ANR	812959	Argument	avctx -> internal -> skip_samples		812436	3					
ANR	812960	PtrMemberAccess	avctx -> internal -> skip_samples		812436	0					
ANR	812961	PtrMemberAccess	avctx -> internal		812436	0					
ANR	812962	Identifier	avctx		812436	0					
ANR	812963	Identifier	internal		812436	1					
ANR	812964	Identifier	skip_samples		812436	1					
ANR	812965	Argument	frame -> nb_samples - avctx -> internal -> skip_samples		812436	4					
ANR	812966	AdditiveExpression	frame -> nb_samples - avctx -> internal -> skip_samples		812436	0		-			
ANR	812967	PtrMemberAccess	frame -> nb_samples		812436	0					
ANR	812968	Identifier	frame		812436	0					
ANR	812969	Identifier	nb_samples		812436	1					
ANR	812970	PtrMemberAccess	avctx -> internal -> skip_samples		812436	1					
ANR	812971	PtrMemberAccess	avctx -> internal		812436	0					
ANR	812972	Identifier	avctx		812436	0					
ANR	812973	Identifier	internal		812436	1					
ANR	812974	Identifier	skip_samples		812436	1					
ANR	812975	Argument	avctx -> channels		812436	5					
ANR	812976	PtrMemberAccess	avctx -> channels		812436	0					
ANR	812977	Identifier	avctx		812436	0					
ANR	812978	Identifier	channels		812436	1					
ANR	812979	Argument	frame -> format		812436	6					
ANR	812980	PtrMemberAccess	frame -> format		812436	0					
ANR	812981	Identifier	frame		812436	0					
ANR	812982	Identifier	format		812436	1					
ANR	812983	IfStatement	if ( avctx -> pkt_timebase . num && avctx -> sample_rate )		812436	1					
ANR	812984	Condition	avctx -> pkt_timebase . num && avctx -> sample_rate	155:19:3612:3656	812436	0	True				
ANR	812985	AndExpression	avctx -> pkt_timebase . num && avctx -> sample_rate		812436	0		&&			
ANR	812986	MemberAccess	avctx -> pkt_timebase . num		812436	0					
ANR	812987	PtrMemberAccess	avctx -> pkt_timebase		812436	0					
ANR	812988	Identifier	avctx		812436	0					
ANR	812989	Identifier	pkt_timebase		812436	1					
ANR	812990	Identifier	num		812436	1					
ANR	812991	PtrMemberAccess	avctx -> sample_rate		812436	1					
ANR	812992	Identifier	avctx		812436	0					
ANR	812993	Identifier	sample_rate		812436	1					
ANR	812994	CompoundStatement		147:66:3388:3388	812436	1					
ANR	812995	Statement	int64_t	157:20:3682:3688	812436	0	True				
ANR	812996	Statement	diff_ts	157:28:3690:3696	812436	1	True				
ANR	812997	Statement	=	157:36:3698:3698	812436	2	True				
ANR	812998	Statement	av_rescale_q	157:38:3700:3711	812436	3	True				
ANR	812999	Statement	(	157:50:3712:3712	812436	4	True				
ANR	813000	Statement	avctx	157:51:3713:3717	812436	5	True				
ANR	813001	Statement	->	157:56:3718:3719	812436	6	True				
ANR	813002	Statement	internal	157:58:3720:3727	812436	7	True				
ANR	813003	Statement	->	157:66:3728:3729	812436	8	True				
ANR	813004	Statement	skip_samples	157:68:3730:3741	812436	9	True				
ANR	813005	Statement	","	157:80:3742:3742	812436	10	True				
ANR	813006	Statement	(	159:51:3796:3796	812436	11	True				
ANR	813007	Statement	AVRational	159:52:3797:3806	812436	12	True				
ANR	813008	Statement	)	159:62:3807:3807	812436	13	True				
ANR	813009	CompoundStatement		151:63:3537:3537	812436	14					
ANR	813010	Statement	1	159:64:3809:3809	812436	0	True				
ANR	813011	Statement	","	159:65:3810:3810	812436	1	True				
ANR	813012	Statement	avctx	159:67:3812:3816	812436	2	True				
ANR	813013	Statement	->	159:72:3817:3818	812436	3	True				
ANR	813014	Statement	sample_rate	159:74:3819:3829	812436	4	True				
ANR	813015	Statement	","	159:86:3831:3831	812436	15	True				
ANR	813016	Statement	avctx	161:51:3885:3889	812436	16	True				
ANR	813017	Statement	->	161:56:3890:3891	812436	17	True				
ANR	813018	Statement	pkt_timebase	161:58:3892:3903	812436	18	True				
ANR	813019	Statement	)	161:70:3904:3904	812436	19	True				
ANR	813020	ExpressionStatement		161:71:3905:3905	812436	20	True				
ANR	813021	IfStatement	if ( frame -> pkt_pts != AV_NOPTS_VALUE )		812436	21					
ANR	813022	Condition	frame -> pkt_pts != AV_NOPTS_VALUE	163:23:3931:3960	812436	0	True				
ANR	813023	EqualityExpression	frame -> pkt_pts != AV_NOPTS_VALUE		812436	0		!=			
ANR	813024	PtrMemberAccess	frame -> pkt_pts		812436	0					
ANR	813025	Identifier	frame		812436	0					
ANR	813026	Identifier	pkt_pts		812436	1					
ANR	813027	Identifier	AV_NOPTS_VALUE		812436	1					
ANR	813028	ExpressionStatement	frame -> pkt_pts += diff_ts	165:24:3988:4013	812436	1	True				
ANR	813029	AssignmentExpression	frame -> pkt_pts += diff_ts		812436	0		+=			
ANR	813030	PtrMemberAccess	frame -> pkt_pts		812436	0					
ANR	813031	Identifier	frame		812436	0					
ANR	813032	Identifier	pkt_pts		812436	1					
ANR	813033	Identifier	diff_ts		812436	1					
ANR	813034	IfStatement	if ( frame -> pkt_dts != AV_NOPTS_VALUE )		812436	22					
ANR	813035	Condition	frame -> pkt_dts != AV_NOPTS_VALUE	167:23:4039:4068	812436	0	True				
ANR	813036	EqualityExpression	frame -> pkt_dts != AV_NOPTS_VALUE		812436	0		!=			
ANR	813037	PtrMemberAccess	frame -> pkt_dts		812436	0					
ANR	813038	Identifier	frame		812436	0					
ANR	813039	Identifier	pkt_dts		812436	1					
ANR	813040	Identifier	AV_NOPTS_VALUE		812436	1					
ANR	813041	ExpressionStatement	frame -> pkt_dts += diff_ts	169:24:4096:4121	812436	1	True				
ANR	813042	AssignmentExpression	frame -> pkt_dts += diff_ts		812436	0		+=			
ANR	813043	PtrMemberAccess	frame -> pkt_dts		812436	0					
ANR	813044	Identifier	frame		812436	0					
ANR	813045	Identifier	pkt_dts		812436	1					
ANR	813046	Identifier	diff_ts		812436	1					
ANR	813047	IfStatement	if ( av_frame_get_pkt_duration ( frame ) >= diff_ts )		812436	23					
ANR	813048	Condition	av_frame_get_pkt_duration ( frame ) >= diff_ts	171:24:4148:4190	812436	0	True				
ANR	813049	RelationalExpression	av_frame_get_pkt_duration ( frame ) >= diff_ts		812436	0		>=			
ANR	813050	CallExpression	av_frame_get_pkt_duration ( frame )		812436	0					
ANR	813051	Callee	av_frame_get_pkt_duration		812436	0					
ANR	813052	Identifier	av_frame_get_pkt_duration		812436	0					
ANR	813053	ArgumentList	frame		812436	1					
ANR	813054	Argument	frame		812436	0					
ANR	813055	Identifier	frame		812436	0					
ANR	813056	Identifier	diff_ts		812436	1					
ANR	813057	ExpressionStatement	"av_frame_set_pkt_duration ( frame , av_frame_get_pkt_duration ( frame ) - diff_ts )"	173:24:4218:4294	812436	1	True				
ANR	813058	CallExpression	"av_frame_set_pkt_duration ( frame , av_frame_get_pkt_duration ( frame ) - diff_ts )"		812436	0					
ANR	813059	Callee	av_frame_set_pkt_duration		812436	0					
ANR	813060	Identifier	av_frame_set_pkt_duration		812436	0					
ANR	813061	ArgumentList	frame		812436	1					
ANR	813062	Argument	frame		812436	0					
ANR	813063	Identifier	frame		812436	0					
ANR	813064	Argument	av_frame_get_pkt_duration ( frame ) - diff_ts		812436	1					
ANR	813065	AdditiveExpression	av_frame_get_pkt_duration ( frame ) - diff_ts		812436	0		-			
ANR	813066	CallExpression	av_frame_get_pkt_duration ( frame )		812436	0					
ANR	813067	Callee	av_frame_get_pkt_duration		812436	0					
ANR	813068	Identifier	av_frame_get_pkt_duration		812436	0					
ANR	813069	ArgumentList	frame		812436	1					
ANR	813070	Argument	frame		812436	0					
ANR	813071	Identifier	frame		812436	0					
ANR	813072	Identifier	diff_ts		812436	1					
ANR	813073	ElseStatement	else		812436	0					
ANR	813074	CompoundStatement		167:23:4049:4049	812436	0					
ANR	813075	ExpressionStatement	"av_log ( avctx , AV_LOG_WARNING , ""Could not update timestamps for skipped samples.\\n"" )"	177:20:4343:4426	812436	0	True				
ANR	813076	CallExpression	"av_log ( avctx , AV_LOG_WARNING , ""Could not update timestamps for skipped samples.\\n"" )"		812436	0					
ANR	813077	Callee	av_log		812436	0					
ANR	813078	Identifier	av_log		812436	0					
ANR	813079	ArgumentList	avctx		812436	1					
ANR	813080	Argument	avctx		812436	0					
ANR	813081	Identifier	avctx		812436	0					
ANR	813082	Argument	AV_LOG_WARNING		812436	1					
ANR	813083	Identifier	AV_LOG_WARNING		812436	0					
ANR	813084	Argument	"""Could not update timestamps for skipped samples.\\n"""		812436	2					
ANR	813085	PrimaryExpression	"""Could not update timestamps for skipped samples.\\n"""		812436	0					
ANR	813086	ExpressionStatement	"av_log ( avctx , AV_LOG_DEBUG , ""skip %d/%d samples\\n"" , avctx -> internal -> skip_samples , frame -> nb_samples )"	181:16:4464:4589	812436	2	True				
ANR	813087	CallExpression	"av_log ( avctx , AV_LOG_DEBUG , ""skip %d/%d samples\\n"" , avctx -> internal -> skip_samples , frame -> nb_samples )"		812436	0					
ANR	813088	Callee	av_log		812436	0					
ANR	813089	Identifier	av_log		812436	0					
ANR	813090	ArgumentList	avctx		812436	1					
ANR	813091	Argument	avctx		812436	0					
ANR	813092	Identifier	avctx		812436	0					
ANR	813093	Argument	AV_LOG_DEBUG		812436	1					
ANR	813094	Identifier	AV_LOG_DEBUG		812436	0					
ANR	813095	Argument	"""skip %d/%d samples\\n"""		812436	2					
ANR	813096	PrimaryExpression	"""skip %d/%d samples\\n"""		812436	0					
ANR	813097	Argument	avctx -> internal -> skip_samples		812436	3					
ANR	813098	PtrMemberAccess	avctx -> internal -> skip_samples		812436	0					
ANR	813099	PtrMemberAccess	avctx -> internal		812436	0					
ANR	813100	Identifier	avctx		812436	0					
ANR	813101	Identifier	internal		812436	1					
ANR	813102	Identifier	skip_samples		812436	1					
ANR	813103	Argument	frame -> nb_samples		812436	4					
ANR	813104	PtrMemberAccess	frame -> nb_samples		812436	0					
ANR	813105	Identifier	frame		812436	0					
ANR	813106	Identifier	nb_samples		812436	1					
ANR	813107	ExpressionStatement	frame -> nb_samples -= avctx -> internal -> skip_samples	185:16:4608:4658	812436	3	True				
ANR	813108	AssignmentExpression	frame -> nb_samples -= avctx -> internal -> skip_samples		812436	0		-=			
ANR	813109	PtrMemberAccess	frame -> nb_samples		812436	0					
ANR	813110	Identifier	frame		812436	0					
ANR	813111	Identifier	nb_samples		812436	1					
ANR	813112	PtrMemberAccess	avctx -> internal -> skip_samples		812436	1					
ANR	813113	PtrMemberAccess	avctx -> internal		812436	0					
ANR	813114	Identifier	avctx		812436	0					
ANR	813115	Identifier	internal		812436	1					
ANR	813116	Identifier	skip_samples		812436	1					
ANR	813117	ExpressionStatement	avctx -> internal -> skip_samples = 0	187:16:4677:4710	812436	4	True				
ANR	813118	AssignmentExpression	avctx -> internal -> skip_samples = 0		812436	0		=			
ANR	813119	PtrMemberAccess	avctx -> internal -> skip_samples		812436	0					
ANR	813120	PtrMemberAccess	avctx -> internal		812436	0					
ANR	813121	Identifier	avctx		812436	0					
ANR	813122	Identifier	internal		812436	1					
ANR	813123	Identifier	skip_samples		812436	1					
ANR	813124	PrimaryExpression	0		812436	1					
ANR	813125	IfStatement	if ( discard_padding > 0 && discard_padding <= frame -> nb_samples && * got_frame_ptr )		812436	13					
ANR	813126	Condition	discard_padding > 0 && discard_padding <= frame -> nb_samples && * got_frame_ptr	195:12:4753:4829	812436	0	True				
ANR	813127	AndExpression	discard_padding > 0 && discard_padding <= frame -> nb_samples && * got_frame_ptr		812436	0		&&			
ANR	813128	RelationalExpression	discard_padding > 0		812436	0		>			
ANR	813129	Identifier	discard_padding		812436	0					
ANR	813130	PrimaryExpression	0		812436	1					
ANR	813131	AndExpression	discard_padding <= frame -> nb_samples && * got_frame_ptr		812436	1		&&			
ANR	813132	RelationalExpression	discard_padding <= frame -> nb_samples		812436	0		<=			
ANR	813133	Identifier	discard_padding		812436	0					
ANR	813134	PtrMemberAccess	frame -> nb_samples		812436	1					
ANR	813135	Identifier	frame		812436	0					
ANR	813136	Identifier	nb_samples		812436	1					
ANR	813137	UnaryOperationExpression	* got_frame_ptr		812436	1					
ANR	813138	UnaryOperator	*		812436	0					
ANR	813139	Identifier	got_frame_ptr		812436	1					
ANR	813140	CompoundStatement		187:91:4561:4561	812436	1					
ANR	813141	IfStatement	if ( discard_padding == frame -> nb_samples )		812436	0					
ANR	813142	Condition	discard_padding == frame -> nb_samples	197:16:4851:4886	812436	0	True				
ANR	813143	EqualityExpression	discard_padding == frame -> nb_samples		812436	0		==			
ANR	813144	Identifier	discard_padding		812436	0					
ANR	813145	PtrMemberAccess	frame -> nb_samples		812436	1					
ANR	813146	Identifier	frame		812436	0					
ANR	813147	Identifier	nb_samples		812436	1					
ANR	813148	CompoundStatement		189:54:4618:4618	812436	1					
ANR	813149	ExpressionStatement	* got_frame_ptr = 0	199:16:4908:4926	812436	0	True				
ANR	813150	AssignmentExpression	* got_frame_ptr = 0		812436	0		=			
ANR	813151	UnaryOperationExpression	* got_frame_ptr		812436	0					
ANR	813152	UnaryOperator	*		812436	0					
ANR	813153	Identifier	got_frame_ptr		812436	1					
ANR	813154	PrimaryExpression	0		812436	1					
ANR	813155	ElseStatement	else		812436	0					
ANR	813156	CompoundStatement		193:19:4677:4677	812436	0					
ANR	813157	IfStatement	if ( avctx -> pkt_timebase . num && avctx -> sample_rate )		812436	0					
ANR	813158	Condition	avctx -> pkt_timebase . num && avctx -> sample_rate	203:19:4970:5014	812436	0	True				
ANR	813159	AndExpression	avctx -> pkt_timebase . num && avctx -> sample_rate		812436	0		&&			
ANR	813160	MemberAccess	avctx -> pkt_timebase . num		812436	0					
ANR	813161	PtrMemberAccess	avctx -> pkt_timebase		812436	0					
ANR	813162	Identifier	avctx		812436	0					
ANR	813163	Identifier	pkt_timebase		812436	1					
ANR	813164	Identifier	num		812436	1					
ANR	813165	PtrMemberAccess	avctx -> sample_rate		812436	1					
ANR	813166	Identifier	avctx		812436	0					
ANR	813167	Identifier	sample_rate		812436	1					
ANR	813168	CompoundStatement		195:66:4746:4746	812436	1					
ANR	813169	Statement	int64_t	205:20:5040:5046	812436	0	True				
ANR	813170	Statement	diff_ts	205:28:5048:5054	812436	1	True				
ANR	813171	Statement	=	205:36:5056:5056	812436	2	True				
ANR	813172	Statement	av_rescale_q	205:38:5058:5069	812436	3	True				
ANR	813173	Statement	(	205:50:5070:5070	812436	4	True				
ANR	813174	Statement	frame	205:51:5071:5075	812436	5	True				
ANR	813175	Statement	->	205:56:5076:5077	812436	6	True				
ANR	813176	Statement	nb_samples	205:58:5078:5087	812436	7	True				
ANR	813177	Statement	-	205:69:5089:5089	812436	8	True				
ANR	813178	Statement	discard_padding	205:71:5091:5105	812436	9	True				
ANR	813179	Statement	","	205:86:5106:5106	812436	10	True				
ANR	813180	Statement	(	207:51:5160:5160	812436	11	True				
ANR	813181	Statement	AVRational	207:52:5161:5170	812436	12	True				
ANR	813182	Statement	)	207:62:5171:5171	812436	13	True				
ANR	813183	CompoundStatement		199:63:4901:4901	812436	14					
ANR	813184	Statement	1	207:64:5173:5173	812436	0	True				
ANR	813185	Statement	","	207:65:5174:5174	812436	1	True				
ANR	813186	Statement	avctx	207:67:5176:5180	812436	2	True				
ANR	813187	Statement	->	207:72:5181:5182	812436	3	True				
ANR	813188	Statement	sample_rate	207:74:5183:5193	812436	4	True				
ANR	813189	Statement	","	207:86:5195:5195	812436	15	True				
ANR	813190	Statement	avctx	209:51:5249:5253	812436	16	True				
ANR	813191	Statement	->	209:56:5254:5255	812436	17	True				
ANR	813192	Statement	pkt_timebase	209:58:5256:5267	812436	18	True				
ANR	813193	Statement	)	209:70:5268:5268	812436	19	True				
ANR	813194	ExpressionStatement		209:71:5269:5269	812436	20	True				
ANR	813195	IfStatement	if ( av_frame_get_pkt_duration ( frame ) >= diff_ts )		812436	21					
ANR	813196	Condition	av_frame_get_pkt_duration ( frame ) >= diff_ts	211:24:5296:5338	812436	0	True				
ANR	813197	RelationalExpression	av_frame_get_pkt_duration ( frame ) >= diff_ts		812436	0		>=			
ANR	813198	CallExpression	av_frame_get_pkt_duration ( frame )		812436	0					
ANR	813199	Callee	av_frame_get_pkt_duration		812436	0					
ANR	813200	Identifier	av_frame_get_pkt_duration		812436	0					
ANR	813201	ArgumentList	frame		812436	1					
ANR	813202	Argument	frame		812436	0					
ANR	813203	Identifier	frame		812436	0					
ANR	813204	Identifier	diff_ts		812436	1					
ANR	813205	ExpressionStatement	"av_frame_set_pkt_duration ( frame , av_frame_get_pkt_duration ( frame ) - diff_ts )"	213:24:5366:5442	812436	1	True				
ANR	813206	CallExpression	"av_frame_set_pkt_duration ( frame , av_frame_get_pkt_duration ( frame ) - diff_ts )"		812436	0					
ANR	813207	Callee	av_frame_set_pkt_duration		812436	0					
ANR	813208	Identifier	av_frame_set_pkt_duration		812436	0					
ANR	813209	ArgumentList	frame		812436	1					
ANR	813210	Argument	frame		812436	0					
ANR	813211	Identifier	frame		812436	0					
ANR	813212	Argument	av_frame_get_pkt_duration ( frame ) - diff_ts		812436	1					
ANR	813213	AdditiveExpression	av_frame_get_pkt_duration ( frame ) - diff_ts		812436	0		-			
ANR	813214	CallExpression	av_frame_get_pkt_duration ( frame )		812436	0					
ANR	813215	Callee	av_frame_get_pkt_duration		812436	0					
ANR	813216	Identifier	av_frame_get_pkt_duration		812436	0					
ANR	813217	ArgumentList	frame		812436	1					
ANR	813218	Argument	frame		812436	0					
ANR	813219	Identifier	frame		812436	0					
ANR	813220	Identifier	diff_ts		812436	1					
ANR	813221	ElseStatement	else		812436	0					
ANR	813222	CompoundStatement		207:23:5197:5197	812436	0					
ANR	813223	ExpressionStatement	"av_log ( avctx , AV_LOG_WARNING , ""Could not update timestamps for discarded samples.\\n"" )"	217:20:5491:5576	812436	0	True				
ANR	813224	CallExpression	"av_log ( avctx , AV_LOG_WARNING , ""Could not update timestamps for discarded samples.\\n"" )"		812436	0					
ANR	813225	Callee	av_log		812436	0					
ANR	813226	Identifier	av_log		812436	0					
ANR	813227	ArgumentList	avctx		812436	1					
ANR	813228	Argument	avctx		812436	0					
ANR	813229	Identifier	avctx		812436	0					
ANR	813230	Argument	AV_LOG_WARNING		812436	1					
ANR	813231	Identifier	AV_LOG_WARNING		812436	0					
ANR	813232	Argument	"""Could not update timestamps for discarded samples.\\n"""		812436	2					
ANR	813233	PrimaryExpression	"""Could not update timestamps for discarded samples.\\n"""		812436	0					
ANR	813234	ExpressionStatement	"av_log ( avctx , AV_LOG_DEBUG , ""discard %d/%d samples\\n"" , discard_padding , frame -> nb_samples )"	221:16:5614:5728	812436	1	True				
ANR	813235	CallExpression	"av_log ( avctx , AV_LOG_DEBUG , ""discard %d/%d samples\\n"" , discard_padding , frame -> nb_samples )"		812436	0					
ANR	813236	Callee	av_log		812436	0					
ANR	813237	Identifier	av_log		812436	0					
ANR	813238	ArgumentList	avctx		812436	1					
ANR	813239	Argument	avctx		812436	0					
ANR	813240	Identifier	avctx		812436	0					
ANR	813241	Argument	AV_LOG_DEBUG		812436	1					
ANR	813242	Identifier	AV_LOG_DEBUG		812436	0					
ANR	813243	Argument	"""discard %d/%d samples\\n"""		812436	2					
ANR	813244	PrimaryExpression	"""discard %d/%d samples\\n"""		812436	0					
ANR	813245	Argument	discard_padding		812436	3					
ANR	813246	Identifier	discard_padding		812436	0					
ANR	813247	Argument	frame -> nb_samples		812436	4					
ANR	813248	PtrMemberAccess	frame -> nb_samples		812436	0					
ANR	813249	Identifier	frame		812436	0					
ANR	813250	Identifier	nb_samples		812436	1					
ANR	813251	ExpressionStatement	frame -> nb_samples -= discard_padding	225:16:5747:5783	812436	2	True				
ANR	813252	AssignmentExpression	frame -> nb_samples -= discard_padding		812436	0		-=			
ANR	813253	PtrMemberAccess	frame -> nb_samples		812436	0					
ANR	813254	Identifier	frame		812436	0					
ANR	813255	Identifier	nb_samples		812436	1					
ANR	813256	Identifier	discard_padding		812436	1					
ANR	813257	Label	fail :	231:0:5812:5816	812436	14	True				
ANR	813258	Identifier	fail		812436	0					
ANR	813259	ExpressionStatement	avctx -> internal -> pkt = NULL	233:8:5827:5854	812436	15	True				
ANR	813260	AssignmentExpression	avctx -> internal -> pkt = NULL		812436	0		=			
ANR	813261	PtrMemberAccess	avctx -> internal -> pkt		812436	0					
ANR	813262	PtrMemberAccess	avctx -> internal		812436	0					
ANR	813263	Identifier	avctx		812436	0					
ANR	813264	Identifier	internal		812436	1					
ANR	813265	Identifier	pkt		812436	1					
ANR	813266	Identifier	NULL		812436	1					
ANR	813267	IfStatement	if ( did_split )		812436	16					
ANR	813268	Condition	did_split	235:12:5869:5877	812436	0	True				
ANR	813269	Identifier	did_split		812436	0					
ANR	813270	CompoundStatement		227:23:5609:5609	812436	1					
ANR	813271	ExpressionStatement	av_packet_free_side_data ( & tmp )	237:12:5895:5925	812436	0	True				
ANR	813272	CallExpression	av_packet_free_side_data ( & tmp )		812436	0					
ANR	813273	Callee	av_packet_free_side_data		812436	0					
ANR	813274	Identifier	av_packet_free_side_data		812436	0					
ANR	813275	ArgumentList	& tmp		812436	1					
ANR	813276	Argument	& tmp		812436	0					
ANR	813277	UnaryOperationExpression	& tmp		812436	0					
ANR	813278	UnaryOperator	&		812436	0					
ANR	813279	Identifier	tmp		812436	1					
ANR	813280	IfStatement	if ( ret == tmp . size )		812436	1					
ANR	813281	Condition	ret == tmp . size	239:15:5943:5957	812436	0	True				
ANR	813282	EqualityExpression	ret == tmp . size		812436	0		==			
ANR	813283	Identifier	ret		812436	0					
ANR	813284	MemberAccess	tmp . size		812436	1					
ANR	813285	Identifier	tmp		812436	0					
ANR	813286	Identifier	size		812436	1					
ANR	813287	ExpressionStatement	ret = avpkt -> size	241:16:5977:5994	812436	1	True				
ANR	813288	AssignmentExpression	ret = avpkt -> size		812436	0		=			
ANR	813289	Identifier	ret		812436	0					
ANR	813290	PtrMemberAccess	avpkt -> size		812436	1					
ANR	813291	Identifier	avpkt		812436	0					
ANR	813292	Identifier	size		812436	1					
ANR	813293	IfStatement	if ( ret >= 0 && * got_frame_ptr )		812436	17					
ANR	813294	Condition	ret >= 0 && * got_frame_ptr	247:12:6022:6047	812436	0	True				
ANR	813295	AndExpression	ret >= 0 && * got_frame_ptr		812436	0		&&			
ANR	813296	RelationalExpression	ret >= 0		812436	0		>=			
ANR	813297	Identifier	ret		812436	0					
ANR	813298	PrimaryExpression	0		812436	1					
ANR	813299	UnaryOperationExpression	* got_frame_ptr		812436	1					
ANR	813300	UnaryOperator	*		812436	0					
ANR	813301	Identifier	got_frame_ptr		812436	1					
ANR	813302	CompoundStatement		239:40:5779:5779	812436	1					
ANR	813303	IfStatement	if ( ! avctx -> refcounted_frames )		812436	0					
ANR	813304	Condition	! avctx -> refcounted_frames	249:16:6069:6093	812436	0	True				
ANR	813305	UnaryOperationExpression	! avctx -> refcounted_frames		812436	0					
ANR	813306	UnaryOperator	!		812436	0					
ANR	813307	PtrMemberAccess	avctx -> refcounted_frames		812436	1					
ANR	813308	Identifier	avctx		812436	0					
ANR	813309	Identifier	refcounted_frames		812436	1					
ANR	813310	CompoundStatement		243:16:5844:5883	812436	1					
ANR	813311	IdentifierDeclStatement	"int err = unrefcount_frame ( avci , frame ) ;"	251:16:6115:6154	812436	0	True				
ANR	813312	IdentifierDecl	"err = unrefcount_frame ( avci , frame )"		812436	0					
ANR	813313	IdentifierDeclType	int		812436	0					
ANR	813314	Identifier	err		812436	1					
ANR	813315	AssignmentExpression	"err = unrefcount_frame ( avci , frame )"		812436	2		=			
ANR	813316	Identifier	err		812436	0					
ANR	813317	CallExpression	"unrefcount_frame ( avci , frame )"		812436	1					
ANR	813318	Callee	unrefcount_frame		812436	0					
ANR	813319	Identifier	unrefcount_frame		812436	0					
ANR	813320	ArgumentList	avci		812436	1					
ANR	813321	Argument	avci		812436	0					
ANR	813322	Identifier	avci		812436	0					
ANR	813323	Argument	frame		812436	1					
ANR	813324	Identifier	frame		812436	0					
ANR	813325	IfStatement	if ( err < 0 )		812436	1					
ANR	813326	Condition	err < 0	253:20:6177:6183	812436	0	True				
ANR	813327	RelationalExpression	err < 0		812436	0		<			
ANR	813328	Identifier	err		812436	0					
ANR	813329	PrimaryExpression	0		812436	1					
ANR	813330	ReturnStatement	return err ;	255:20:6207:6217	812436	1	True				
ANR	813331	Identifier	err		812436	0					
ANR	813332	ElseStatement	else		812436	0					
ANR	813333	ExpressionStatement	av_frame_unref ( frame )	261:12:6263:6284	812436	0	True				
ANR	813334	CallExpression	av_frame_unref ( frame )		812436	0					
ANR	813335	Callee	av_frame_unref		812436	0					
ANR	813336	Identifier	av_frame_unref		812436	0					
ANR	813337	ArgumentList	frame		812436	1					
ANR	813338	Argument	frame		812436	0					
ANR	813339	Identifier	frame		812436	0					
ANR	813340	ReturnStatement	return ret ;	267:4:6300:6310	812436	8	True				
ANR	813341	Identifier	ret		812436	0					
ANR	813342	ReturnType	int attribute_align_arg		812436	1					
ANR	813343	Identifier	avcodec_decode_audio4		812436	2					
ANR	813344	ParameterList	"AVCodecContext * avctx , AVFrame * frame , int * got_frame_ptr , const AVPacket * avpkt"		812436	3					
ANR	813345	Parameter	AVCodecContext * avctx	1:46:46:66	812436	0	True				
ANR	813346	ParameterType	AVCodecContext *		812436	0					
ANR	813347	Identifier	avctx		812436	1					
ANR	813348	Parameter	AVFrame * frame	3:46:116:129	812436	1	True				
ANR	813349	ParameterType	AVFrame *		812436	0					
ANR	813350	Identifier	frame		812436	1					
ANR	813351	Parameter	int * got_frame_ptr	5:46:179:196	812436	2	True				
ANR	813352	ParameterType	int *		812436	0					
ANR	813353	Identifier	got_frame_ptr		812436	1					
ANR	813354	Parameter	const AVPacket * avpkt	7:46:246:266	812436	3	True				
ANR	813355	ParameterType	const AVPacket *		812436	0					
ANR	813356	Identifier	avpkt		812436	1					
ANR	813357	CFGEntryNode	ENTRY		812436		True				
ANR	813358	CFGExitNode	EXIT		812436		True				
ANR	813359	Symbol	av_packet_split_side_data		812436						
ANR	813360	Symbol	AVMEDIA_TYPE_AUDIO		812436						
ANR	813361	Symbol	frame -> sample_rate		812436						
ANR	813362	Symbol	av_packet_get_side_data		812436						
ANR	813363	Symbol	avctx -> active_thread_type		812436						
ANR	813364	Symbol	got_frame_ptr		812436						
ANR	813365	Symbol	avpkt		812436						
ANR	813366	Symbol	avctx -> internal -> pkt		812436						
ANR	813367	Symbol	avctx -> refcounted_frames		812436						
ANR	813368	Symbol	avctx -> codec -> capabilities		812436						
ANR	813369	Symbol	AV_SAMPLE_FMT_NONE		812436						
ANR	813370	Symbol	avctx -> channels		812436						
ANR	813371	Symbol	diff_ts		812436						
ANR	813372	Symbol	tmp		812436						
ANR	813373	Symbol	avctx -> codec -> decode		812436						
ANR	813374	Symbol	* avctx -> codec		812436						
ANR	813375	Symbol	avpkt -> dts		812436						
ANR	813376	Symbol	& side_size		812436						
ANR	813377	Symbol	AV_LOG_DEBUG		812436						
ANR	813378	Symbol	ret		812436						
ANR	813379	Symbol	CODEC_CAP_DELAY		812436						
ANR	813380	Symbol	avctx -> sample_fmt		812436						
ANR	813381	Symbol	avctx -> codec		812436						
ANR	813382	Symbol	discard_padding		812436						
ANR	813383	Symbol	NULL		812436						
ANR	813384	Symbol	* * avctx		812436						
ANR	813385	Symbol	ff_thread_decode_frame		812436						
ANR	813386	Symbol	* avctx		812436						
ANR	813387	Symbol	av_frame_get_pkt_duration		812436						
ANR	813388	Symbol	& tmp		812436						
ANR	813389	Symbol	avpkt -> data		812436						
ANR	813390	Symbol	side_size		812436						
ANR	813391	Symbol	FF_THREAD_FRAME		812436						
ANR	813392	Symbol	frame		812436						
ANR	813393	Symbol	apply_param_change		812436						
ANR	813394	Symbol	* frame		812436						
ANR	813395	Symbol	* avctx -> internal		812436						
ANR	813396	Symbol	avctx -> pkt_timebase		812436						
ANR	813397	Symbol	AV_EF_EXPLODE		812436						
ANR	813398	Symbol	frame -> format		812436						
ANR	813399	Symbol	AV_NOPTS_VALUE		812436						
ANR	813400	Symbol	av_frame_get_channels		812436						
ANR	813401	Symbol	avpkt -> size		812436						
ANR	813402	Symbol	avctx -> frame_number		812436						
ANR	813403	Symbol	avctx		812436						
ANR	813404	Symbol	avctx -> internal -> skip_samples		812436						
ANR	813405	Symbol	* avpkt		812436						
ANR	813406	Symbol	unrefcount_frame		812436						
ANR	813407	Symbol	side		812436						
ANR	813408	Symbol	frame -> nb_samples		812436						
ANR	813409	Symbol	avctx -> internal		812436						
ANR	813410	Symbol	AV_LOG_ERROR		812436						
ANR	813411	Symbol	err		812436						
ANR	813412	Symbol	* got_frame_ptr		812436						
ANR	813413	Symbol	guess_correct_pts		812436						
ANR	813414	Symbol	frame -> channel_layout		812436						
ANR	813415	Symbol	avctx -> channel_layout		812436						
ANR	813416	Symbol	avctx -> codec -> type		812436						
ANR	813417	Symbol	avctx -> sample_rate		812436						
ANR	813418	Symbol	EINVAL		812436						
ANR	813419	Symbol	did_split		812436						
ANR	813420	Symbol	tmp . size		812436						
ANR	813421	Symbol	HAVE_THREADS		812436						
ANR	813422	Symbol	frame -> pkt_dts		812436						
ANR	813423	Symbol	AV_RL32		812436						
ANR	813424	Symbol	frame -> extended_data		812436						
ANR	813425	Symbol	avctx -> pkt_timebase . num		812436						
ANR	813426	Symbol	avci		812436						
ANR	813427	Symbol	AV_PKT_DATA_SKIP_SAMPLES		812436						
ANR	813428	Symbol	frame -> pkt_pts		812436						
ANR	813429	Symbol	AVERROR		812436						
ANR	813430	Symbol	avctx -> err_recognition		812436						
ANR	813431	Symbol	AV_LOG_WARNING		812436						
