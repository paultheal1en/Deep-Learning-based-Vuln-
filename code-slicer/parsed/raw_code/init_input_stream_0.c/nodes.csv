command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4907539	File	/home/p4ultr4n/workplace/ReVeal/raw_code/init_input_stream_0.c								
ANR	4907540	Function	init_input_stream	1:0:0:1905							
ANR	4907541	FunctionDef	"init_input_stream (int ist_index , char * error , int error_len)"		4907540	0					
ANR	4907542	CompoundStatement		3:0:73:1905	4907540	0					
ANR	4907543	IdentifierDeclStatement	int i ;	5:4:80:85	4907540	0	True				
ANR	4907544	IdentifierDecl	i		4907540	0					
ANR	4907545	IdentifierDeclType	int		4907540	0					
ANR	4907546	Identifier	i		4907540	1					
ANR	4907547	IdentifierDeclStatement	InputStream * ist = input_streams [ ist_index ] ;	7:4:92:135	4907540	1	True				
ANR	4907548	IdentifierDecl	* ist = input_streams [ ist_index ]		4907540	0					
ANR	4907549	IdentifierDeclType	InputStream *		4907540	0					
ANR	4907550	Identifier	ist		4907540	1					
ANR	4907551	AssignmentExpression	* ist = input_streams [ ist_index ]		4907540	2		=			
ANR	4907552	Identifier	ist		4907540	0					
ANR	4907553	ArrayIndexing	input_streams [ ist_index ]		4907540	1					
ANR	4907554	Identifier	input_streams		4907540	0					
ANR	4907555	Identifier	ist_index		4907540	1					
ANR	4907556	IfStatement	if ( ist -> decoding_needed )		4907540	2					
ANR	4907557	Condition	ist -> decoding_needed	9:8:146:165	4907540	0	True				
ANR	4907558	PtrMemberAccess	ist -> decoding_needed		4907540	0					
ANR	4907559	Identifier	ist		4907540	0					
ANR	4907560	Identifier	decoding_needed		4907540	1					
ANR	4907561	CompoundStatement		9:8:105:130	4907540	1					
ANR	4907562	IdentifierDeclStatement	AVCodec * codec = ist -> dec ;	11:8:179:204	4907540	0	True				
ANR	4907563	IdentifierDecl	* codec = ist -> dec		4907540	0					
ANR	4907564	IdentifierDeclType	AVCodec *		4907540	0					
ANR	4907565	Identifier	codec		4907540	1					
ANR	4907566	AssignmentExpression	* codec = ist -> dec		4907540	2		=			
ANR	4907567	Identifier	codec		4907540	0					
ANR	4907568	PtrMemberAccess	ist -> dec		4907540	1					
ANR	4907569	Identifier	ist		4907540	0					
ANR	4907570	Identifier	dec		4907540	1					
ANR	4907571	IfStatement	if ( ! codec )		4907540	1					
ANR	4907572	Condition	! codec	13:12:219:224	4907540	0	True				
ANR	4907573	UnaryOperationExpression	! codec		4907540	0					
ANR	4907574	UnaryOperator	!		4907540	0					
ANR	4907575	Identifier	codec		4907540	1					
ANR	4907576	CompoundStatement		11:20:153:153	4907540	1					
ANR	4907577	ExpressionStatement	"snprintf ( error , error_len , ""Decoder (codec id %d) not found for input stream #%d:%d"" , ist -> st -> codec -> codec_id , ist -> file_index , ist -> st -> index )"	15:12:242:407	4907540	0	True				
ANR	4907578	CallExpression	"snprintf ( error , error_len , ""Decoder (codec id %d) not found for input stream #%d:%d"" , ist -> st -> codec -> codec_id , ist -> file_index , ist -> st -> index )"		4907540	0					
ANR	4907579	Callee	snprintf		4907540	0					
ANR	4907580	Identifier	snprintf		4907540	0					
ANR	4907581	ArgumentList	error		4907540	1					
ANR	4907582	Argument	error		4907540	0					
ANR	4907583	Identifier	error		4907540	0					
ANR	4907584	Argument	error_len		4907540	1					
ANR	4907585	Identifier	error_len		4907540	0					
ANR	4907586	Argument	"""Decoder (codec id %d) not found for input stream #%d:%d"""		4907540	2					
ANR	4907587	PrimaryExpression	"""Decoder (codec id %d) not found for input stream #%d:%d"""		4907540	0					
ANR	4907588	Argument	ist -> st -> codec -> codec_id		4907540	3					
ANR	4907589	PtrMemberAccess	ist -> st -> codec -> codec_id		4907540	0					
ANR	4907590	PtrMemberAccess	ist -> st -> codec		4907540	0					
ANR	4907591	PtrMemberAccess	ist -> st		4907540	0					
ANR	4907592	Identifier	ist		4907540	0					
ANR	4907593	Identifier	st		4907540	1					
ANR	4907594	Identifier	codec		4907540	1					
ANR	4907595	Identifier	codec_id		4907540	1					
ANR	4907596	Argument	ist -> file_index		4907540	4					
ANR	4907597	PtrMemberAccess	ist -> file_index		4907540	0					
ANR	4907598	Identifier	ist		4907540	0					
ANR	4907599	Identifier	file_index		4907540	1					
ANR	4907600	Argument	ist -> st -> index		4907540	5					
ANR	4907601	PtrMemberAccess	ist -> st -> index		4907540	0					
ANR	4907602	PtrMemberAccess	ist -> st		4907540	0					
ANR	4907603	Identifier	ist		4907540	0					
ANR	4907604	Identifier	st		4907540	1					
ANR	4907605	Identifier	index		4907540	1					
ANR	4907606	ReturnStatement	return AVERROR ( EINVAL ) ;	19:12:422:444	4907540	1	True				
ANR	4907607	CallExpression	AVERROR ( EINVAL )		4907540	0					
ANR	4907608	Callee	AVERROR		4907540	0					
ANR	4907609	Identifier	AVERROR		4907540	0					
ANR	4907610	ArgumentList	EINVAL		4907540	1					
ANR	4907611	Argument	EINVAL		4907540	0					
ANR	4907612	Identifier	EINVAL		4907540	0					
ANR	4907613	ForStatement	for ( i = 0 ; i < nb_output_streams ; i ++ )		4907540	2					
ANR	4907614	ForInit	i = 0 ;	29:13:596:601	4907540	0	True				
ANR	4907615	AssignmentExpression	i = 0		4907540	0		=			
ANR	4907616	Identifier	i		4907540	0					
ANR	4907617	PrimaryExpression	0		4907540	1					
ANR	4907618	Condition	i < nb_output_streams	29:20:603:623	4907540	1	True				
ANR	4907619	RelationalExpression	i < nb_output_streams		4907540	0		<			
ANR	4907620	Identifier	i		4907540	0					
ANR	4907621	Identifier	nb_output_streams		4907540	1					
ANR	4907622	PostIncDecOperationExpression	i ++	29:43:626:628	4907540	2	True				
ANR	4907623	Identifier	i		4907540	0					
ANR	4907624	IncDec	++		4907540	1					
ANR	4907625	CompoundStatement		29:12:572:609	4907540	3					
ANR	4907626	IdentifierDeclStatement	OutputStream * ost = output_streams [ i ] ;	31:12:646:683	4907540	0	True				
ANR	4907627	IdentifierDecl	* ost = output_streams [ i ]		4907540	0					
ANR	4907628	IdentifierDeclType	OutputStream *		4907540	0					
ANR	4907629	Identifier	ost		4907540	1					
ANR	4907630	AssignmentExpression	* ost = output_streams [ i ]		4907540	2		=			
ANR	4907631	Identifier	ost		4907540	0					
ANR	4907632	ArrayIndexing	output_streams [ i ]		4907540	1					
ANR	4907633	Identifier	output_streams		4907540	0					
ANR	4907634	Identifier	i		4907540	1					
ANR	4907635	IfStatement	if ( ost -> source_index == ist_index )		4907540	1					
ANR	4907636	Condition	ost -> source_index == ist_index	33:16:702:731	4907540	0	True				
ANR	4907637	EqualityExpression	ost -> source_index == ist_index		4907540	0		==			
ANR	4907638	PtrMemberAccess	ost -> source_index		4907540	0					
ANR	4907639	Identifier	ost		4907540	0					
ANR	4907640	Identifier	source_index		4907540	1					
ANR	4907641	Identifier	ist_index		4907540	1					
ANR	4907642	CompoundStatement		31:48:660:660	4907540	1					
ANR	4907643	ExpressionStatement	"update_sample_fmt ( ist -> st -> codec , codec , ost -> st -> codec )"	35:16:753:809	4907540	0	True				
ANR	4907644	CallExpression	"update_sample_fmt ( ist -> st -> codec , codec , ost -> st -> codec )"		4907540	0					
ANR	4907645	Callee	update_sample_fmt		4907540	0					
ANR	4907646	Identifier	update_sample_fmt		4907540	0					
ANR	4907647	ArgumentList	ist -> st -> codec		4907540	1					
ANR	4907648	Argument	ist -> st -> codec		4907540	0					
ANR	4907649	PtrMemberAccess	ist -> st -> codec		4907540	0					
ANR	4907650	PtrMemberAccess	ist -> st		4907540	0					
ANR	4907651	Identifier	ist		4907540	0					
ANR	4907652	Identifier	st		4907540	1					
ANR	4907653	Identifier	codec		4907540	1					
ANR	4907654	Argument	codec		4907540	1					
ANR	4907655	Identifier	codec		4907540	0					
ANR	4907656	Argument	ost -> st -> codec		4907540	2					
ANR	4907657	PtrMemberAccess	ost -> st -> codec		4907540	0					
ANR	4907658	PtrMemberAccess	ost -> st		4907540	0					
ANR	4907659	Identifier	ost		4907540	0					
ANR	4907660	Identifier	st		4907540	1					
ANR	4907661	Identifier	codec		4907540	1					
ANR	4907662	BreakStatement	break ;	37:16:828:833	4907540	1	True				
ANR	4907663	IfStatement	if ( codec -> type == AVMEDIA_TYPE_VIDEO && codec -> capabilities & CODEC_CAP_DR1 )		4907540	3					
ANR	4907664	Condition	codec -> type == AVMEDIA_TYPE_VIDEO && codec -> capabilities & CODEC_CAP_DR1	45:12:876:947	4907540	0	True				
ANR	4907665	AndExpression	codec -> type == AVMEDIA_TYPE_VIDEO && codec -> capabilities & CODEC_CAP_DR1		4907540	0		&&			
ANR	4907666	EqualityExpression	codec -> type == AVMEDIA_TYPE_VIDEO		4907540	0		==			
ANR	4907667	PtrMemberAccess	codec -> type		4907540	0					
ANR	4907668	Identifier	codec		4907540	0					
ANR	4907669	Identifier	type		4907540	1					
ANR	4907670	Identifier	AVMEDIA_TYPE_VIDEO		4907540	1					
ANR	4907671	BitAndExpression	codec -> capabilities & CODEC_CAP_DR1		4907540	1		&			
ANR	4907672	PtrMemberAccess	codec -> capabilities		4907540	0					
ANR	4907673	Identifier	codec		4907540	0					
ANR	4907674	Identifier	capabilities		4907540	1					
ANR	4907675	Identifier	CODEC_CAP_DR1		4907540	1					
ANR	4907676	CompoundStatement		43:86:876:876	4907540	1					
ANR	4907677	ExpressionStatement	ist -> st -> codec -> get_buffer = codec_get_buffer	47:12:965:1014	4907540	0	True				
ANR	4907678	AssignmentExpression	ist -> st -> codec -> get_buffer = codec_get_buffer		4907540	0		=			
ANR	4907679	PtrMemberAccess	ist -> st -> codec -> get_buffer		4907540	0					
ANR	4907680	PtrMemberAccess	ist -> st -> codec		4907540	0					
ANR	4907681	PtrMemberAccess	ist -> st		4907540	0					
ANR	4907682	Identifier	ist		4907540	0					
ANR	4907683	Identifier	st		4907540	1					
ANR	4907684	Identifier	codec		4907540	1					
ANR	4907685	Identifier	get_buffer		4907540	1					
ANR	4907686	Identifier	codec_get_buffer		4907540	1					
ANR	4907687	ExpressionStatement	ist -> st -> codec -> release_buffer = codec_release_buffer	49:12:1029:1082	4907540	1	True				
ANR	4907688	AssignmentExpression	ist -> st -> codec -> release_buffer = codec_release_buffer		4907540	0		=			
ANR	4907689	PtrMemberAccess	ist -> st -> codec -> release_buffer		4907540	0					
ANR	4907690	PtrMemberAccess	ist -> st -> codec		4907540	0					
ANR	4907691	PtrMemberAccess	ist -> st		4907540	0					
ANR	4907692	Identifier	ist		4907540	0					
ANR	4907693	Identifier	st		4907540	1					
ANR	4907694	Identifier	codec		4907540	1					
ANR	4907695	Identifier	release_buffer		4907540	1					
ANR	4907696	Identifier	codec_release_buffer		4907540	1					
ANR	4907697	ExpressionStatement	ist -> st -> codec -> opaque = & ist -> buffer_pool	51:12:1097:1147	4907540	2	True				
ANR	4907698	AssignmentExpression	ist -> st -> codec -> opaque = & ist -> buffer_pool		4907540	0		=			
ANR	4907699	PtrMemberAccess	ist -> st -> codec -> opaque		4907540	0					
ANR	4907700	PtrMemberAccess	ist -> st -> codec		4907540	0					
ANR	4907701	PtrMemberAccess	ist -> st		4907540	0					
ANR	4907702	Identifier	ist		4907540	0					
ANR	4907703	Identifier	st		4907540	1					
ANR	4907704	Identifier	codec		4907540	1					
ANR	4907705	Identifier	opaque		4907540	1					
ANR	4907706	UnaryOperationExpression	& ist -> buffer_pool		4907540	1					
ANR	4907707	UnaryOperator	&		4907540	0					
ANR	4907708	PtrMemberAccess	ist -> buffer_pool		4907540	1					
ANR	4907709	Identifier	ist		4907540	0					
ANR	4907710	Identifier	buffer_pool		4907540	1					
ANR	4907711	IfStatement	"if ( ! av_dict_get ( ist -> opts , ""threads"" , NULL , 0 ) )"		4907540	4					
ANR	4907712	Condition	"! av_dict_get ( ist -> opts , ""threads"" , NULL , 0 )"	57:12:1175:1217	4907540	0	True				
ANR	4907713	UnaryOperationExpression	"! av_dict_get ( ist -> opts , ""threads"" , NULL , 0 )"		4907540	0					
ANR	4907714	UnaryOperator	!		4907540	0					
ANR	4907715	CallExpression	"av_dict_get ( ist -> opts , ""threads"" , NULL , 0 )"		4907540	1					
ANR	4907716	Callee	av_dict_get		4907540	0					
ANR	4907717	Identifier	av_dict_get		4907540	0					
ANR	4907718	ArgumentList	ist -> opts		4907540	1					
ANR	4907719	Argument	ist -> opts		4907540	0					
ANR	4907720	PtrMemberAccess	ist -> opts		4907540	0					
ANR	4907721	Identifier	ist		4907540	0					
ANR	4907722	Identifier	opts		4907540	1					
ANR	4907723	Argument	"""threads"""		4907540	1					
ANR	4907724	PrimaryExpression	"""threads"""		4907540	0					
ANR	4907725	Argument	NULL		4907540	2					
ANR	4907726	Identifier	NULL		4907540	0					
ANR	4907727	Argument	0		4907540	3					
ANR	4907728	PrimaryExpression	0		4907540	0					
ANR	4907729	ExpressionStatement	"av_dict_set ( & ist -> opts , ""threads"" , ""auto"" , 0 )"	59:12:1233:1278	4907540	1	True				
ANR	4907730	CallExpression	"av_dict_set ( & ist -> opts , ""threads"" , ""auto"" , 0 )"		4907540	0					
ANR	4907731	Callee	av_dict_set		4907540	0					
ANR	4907732	Identifier	av_dict_set		4907540	0					
ANR	4907733	ArgumentList	& ist -> opts		4907540	1					
ANR	4907734	Argument	& ist -> opts		4907540	0					
ANR	4907735	UnaryOperationExpression	& ist -> opts		4907540	0					
ANR	4907736	UnaryOperator	&		4907540	0					
ANR	4907737	PtrMemberAccess	ist -> opts		4907540	1					
ANR	4907738	Identifier	ist		4907540	0					
ANR	4907739	Identifier	opts		4907540	1					
ANR	4907740	Argument	"""threads"""		4907540	1					
ANR	4907741	PrimaryExpression	"""threads"""		4907540	0					
ANR	4907742	Argument	"""auto"""		4907540	2					
ANR	4907743	PrimaryExpression	"""auto"""		4907540	0					
ANR	4907744	Argument	0		4907540	3					
ANR	4907745	PrimaryExpression	0		4907540	0					
ANR	4907746	IfStatement	"if ( avcodec_open2 ( ist -> st -> codec , codec , & ist -> opts ) < 0 )"		4907540	5					
ANR	4907747	Condition	"avcodec_open2 ( ist -> st -> codec , codec , & ist -> opts ) < 0"	61:12:1293:1344	4907540	0	True				
ANR	4907748	RelationalExpression	"avcodec_open2 ( ist -> st -> codec , codec , & ist -> opts ) < 0"		4907540	0		<			
ANR	4907749	CallExpression	"avcodec_open2 ( ist -> st -> codec , codec , & ist -> opts )"		4907540	0					
ANR	4907750	Callee	avcodec_open2		4907540	0					
ANR	4907751	Identifier	avcodec_open2		4907540	0					
ANR	4907752	ArgumentList	ist -> st -> codec		4907540	1					
ANR	4907753	Argument	ist -> st -> codec		4907540	0					
ANR	4907754	PtrMemberAccess	ist -> st -> codec		4907540	0					
ANR	4907755	PtrMemberAccess	ist -> st		4907540	0					
ANR	4907756	Identifier	ist		4907540	0					
ANR	4907757	Identifier	st		4907540	1					
ANR	4907758	Identifier	codec		4907540	1					
ANR	4907759	Argument	codec		4907540	1					
ANR	4907760	Identifier	codec		4907540	0					
ANR	4907761	Argument	& ist -> opts		4907540	2					
ANR	4907762	UnaryOperationExpression	& ist -> opts		4907540	0					
ANR	4907763	UnaryOperator	&		4907540	0					
ANR	4907764	PtrMemberAccess	ist -> opts		4907540	1					
ANR	4907765	Identifier	ist		4907540	0					
ANR	4907766	Identifier	opts		4907540	1					
ANR	4907767	PrimaryExpression	0		4907540	1					
ANR	4907768	CompoundStatement		59:66:1273:1273	4907540	1					
ANR	4907769	ExpressionStatement	"snprintf ( error , error_len , ""Error while opening decoder for input stream #%d:%d"" , ist -> file_index , ist -> st -> index )"	63:12:1362:1497	4907540	0	True				
ANR	4907770	CallExpression	"snprintf ( error , error_len , ""Error while opening decoder for input stream #%d:%d"" , ist -> file_index , ist -> st -> index )"		4907540	0					
ANR	4907771	Callee	snprintf		4907540	0					
ANR	4907772	Identifier	snprintf		4907540	0					
ANR	4907773	ArgumentList	error		4907540	1					
ANR	4907774	Argument	error		4907540	0					
ANR	4907775	Identifier	error		4907540	0					
ANR	4907776	Argument	error_len		4907540	1					
ANR	4907777	Identifier	error_len		4907540	0					
ANR	4907778	Argument	"""Error while opening decoder for input stream #%d:%d"""		4907540	2					
ANR	4907779	PrimaryExpression	"""Error while opening decoder for input stream #%d:%d"""		4907540	0					
ANR	4907780	Argument	ist -> file_index		4907540	3					
ANR	4907781	PtrMemberAccess	ist -> file_index		4907540	0					
ANR	4907782	Identifier	ist		4907540	0					
ANR	4907783	Identifier	file_index		4907540	1					
ANR	4907784	Argument	ist -> st -> index		4907540	4					
ANR	4907785	PtrMemberAccess	ist -> st -> index		4907540	0					
ANR	4907786	PtrMemberAccess	ist -> st		4907540	0					
ANR	4907787	Identifier	ist		4907540	0					
ANR	4907788	Identifier	st		4907540	1					
ANR	4907789	Identifier	index		4907540	1					
ANR	4907790	ReturnStatement	return AVERROR ( EINVAL ) ;	67:12:1512:1534	4907540	1	True				
ANR	4907791	CallExpression	AVERROR ( EINVAL )		4907540	0					
ANR	4907792	Callee	AVERROR		4907540	0					
ANR	4907793	Identifier	AVERROR		4907540	0					
ANR	4907794	ArgumentList	EINVAL		4907540	1					
ANR	4907795	Argument	EINVAL		4907540	0					
ANR	4907796	Identifier	EINVAL		4907540	0					
ANR	4907797	ExpressionStatement	"assert_codec_experimental ( ist -> st -> codec , 0 )"	71:8:1556:1600	4907540	6	True				
ANR	4907798	CallExpression	"assert_codec_experimental ( ist -> st -> codec , 0 )"		4907540	0					
ANR	4907799	Callee	assert_codec_experimental		4907540	0					
ANR	4907800	Identifier	assert_codec_experimental		4907540	0					
ANR	4907801	ArgumentList	ist -> st -> codec		4907540	1					
ANR	4907802	Argument	ist -> st -> codec		4907540	0					
ANR	4907803	PtrMemberAccess	ist -> st -> codec		4907540	0					
ANR	4907804	PtrMemberAccess	ist -> st		4907540	0					
ANR	4907805	Identifier	ist		4907540	0					
ANR	4907806	Identifier	st		4907540	1					
ANR	4907807	Identifier	codec		4907540	1					
ANR	4907808	Argument	0		4907540	1					
ANR	4907809	PrimaryExpression	0		4907540	0					
ANR	4907810	ExpressionStatement	assert_avoptions ( ist -> opts )	73:8:1611:1638	4907540	7	True				
ANR	4907811	CallExpression	assert_avoptions ( ist -> opts )		4907540	0					
ANR	4907812	Callee	assert_avoptions		4907540	0					
ANR	4907813	Identifier	assert_avoptions		4907540	0					
ANR	4907814	ArgumentList	ist -> opts		4907540	1					
ANR	4907815	Argument	ist -> opts		4907540	0					
ANR	4907816	PtrMemberAccess	ist -> opts		4907540	0					
ANR	4907817	Identifier	ist		4907540	0					
ANR	4907818	Identifier	opts		4907540	1					
ANR	4907819	ExpressionStatement	ist -> last_dts = ist -> st -> avg_frame_rate . num ? - ist -> st -> codec -> has_b_frames * AV_TIME_BASE / av_q2d ( ist -> st -> avg_frame_rate ) : 0	79:4:1654:1783	4907540	3	True				
ANR	4907820	AssignmentExpression	ist -> last_dts = ist -> st -> avg_frame_rate . num ? - ist -> st -> codec -> has_b_frames * AV_TIME_BASE / av_q2d ( ist -> st -> avg_frame_rate ) : 0		4907540	0		=			
ANR	4907821	PtrMemberAccess	ist -> last_dts		4907540	0					
ANR	4907822	Identifier	ist		4907540	0					
ANR	4907823	Identifier	last_dts		4907540	1					
ANR	4907824	ConditionalExpression	ist -> st -> avg_frame_rate . num ? - ist -> st -> codec -> has_b_frames * AV_TIME_BASE / av_q2d ( ist -> st -> avg_frame_rate ) : 0		4907540	1					
ANR	4907825	Condition	ist -> st -> avg_frame_rate . num		4907540	0					
ANR	4907826	MemberAccess	ist -> st -> avg_frame_rate . num		4907540	0					
ANR	4907827	PtrMemberAccess	ist -> st -> avg_frame_rate		4907540	0					
ANR	4907828	PtrMemberAccess	ist -> st		4907540	0					
ANR	4907829	Identifier	ist		4907540	0					
ANR	4907830	Identifier	st		4907540	1					
ANR	4907831	Identifier	avg_frame_rate		4907540	1					
ANR	4907832	Identifier	num		4907540	1					
ANR	4907833	MultiplicativeExpression	- ist -> st -> codec -> has_b_frames * AV_TIME_BASE / av_q2d ( ist -> st -> avg_frame_rate )		4907540	1		*			
ANR	4907834	UnaryOperationExpression	- ist -> st -> codec -> has_b_frames		4907540	0					
ANR	4907835	UnaryOperator	-		4907540	0					
ANR	4907836	PtrMemberAccess	ist -> st -> codec -> has_b_frames		4907540	1					
ANR	4907837	PtrMemberAccess	ist -> st -> codec		4907540	0					
ANR	4907838	PtrMemberAccess	ist -> st		4907540	0					
ANR	4907839	Identifier	ist		4907540	0					
ANR	4907840	Identifier	st		4907540	1					
ANR	4907841	Identifier	codec		4907540	1					
ANR	4907842	Identifier	has_b_frames		4907540	1					
ANR	4907843	MultiplicativeExpression	AV_TIME_BASE / av_q2d ( ist -> st -> avg_frame_rate )		4907540	1		/			
ANR	4907844	Identifier	AV_TIME_BASE		4907540	0					
ANR	4907845	CallExpression	av_q2d ( ist -> st -> avg_frame_rate )		4907540	1					
ANR	4907846	Callee	av_q2d		4907540	0					
ANR	4907847	Identifier	av_q2d		4907540	0					
ANR	4907848	ArgumentList	ist -> st -> avg_frame_rate		4907540	1					
ANR	4907849	Argument	ist -> st -> avg_frame_rate		4907540	0					
ANR	4907850	PtrMemberAccess	ist -> st -> avg_frame_rate		4907540	0					
ANR	4907851	PtrMemberAccess	ist -> st		4907540	0					
ANR	4907852	Identifier	ist		4907540	0					
ANR	4907853	Identifier	st		4907540	1					
ANR	4907854	Identifier	avg_frame_rate		4907540	1					
ANR	4907855	PrimaryExpression	0		4907540	2					
ANR	4907856	ExpressionStatement	ist -> next_dts = AV_NOPTS_VALUE	81:4:1790:1820	4907540	4	True				
ANR	4907857	AssignmentExpression	ist -> next_dts = AV_NOPTS_VALUE		4907540	0		=			
ANR	4907858	PtrMemberAccess	ist -> next_dts		4907540	0					
ANR	4907859	Identifier	ist		4907540	0					
ANR	4907860	Identifier	next_dts		4907540	1					
ANR	4907861	Identifier	AV_NOPTS_VALUE		4907540	1					
ANR	4907862	ExpressionStatement	init_pts_correction ( & ist -> pts_ctx )	83:4:1827:1861	4907540	5	True				
ANR	4907863	CallExpression	init_pts_correction ( & ist -> pts_ctx )		4907540	0					
ANR	4907864	Callee	init_pts_correction		4907540	0					
ANR	4907865	Identifier	init_pts_correction		4907540	0					
ANR	4907866	ArgumentList	& ist -> pts_ctx		4907540	1					
ANR	4907867	Argument	& ist -> pts_ctx		4907540	0					
ANR	4907868	UnaryOperationExpression	& ist -> pts_ctx		4907540	0					
ANR	4907869	UnaryOperator	&		4907540	0					
ANR	4907870	PtrMemberAccess	ist -> pts_ctx		4907540	1					
ANR	4907871	Identifier	ist		4907540	0					
ANR	4907872	Identifier	pts_ctx		4907540	1					
ANR	4907873	ExpressionStatement	ist -> is_start = 1	85:4:1868:1885	4907540	6	True				
ANR	4907874	AssignmentExpression	ist -> is_start = 1		4907540	0		=			
ANR	4907875	PtrMemberAccess	ist -> is_start		4907540	0					
ANR	4907876	Identifier	ist		4907540	0					
ANR	4907877	Identifier	is_start		4907540	1					
ANR	4907878	PrimaryExpression	1		4907540	1					
ANR	4907879	ReturnStatement	return 0 ;	89:4:1894:1902	4907540	7	True				
ANR	4907880	PrimaryExpression	0		4907540	0					
ANR	4907881	ReturnType	static int		4907540	1					
ANR	4907882	Identifier	init_input_stream		4907540	2					
ANR	4907883	ParameterList	"int ist_index , char * error , int error_len"		4907540	3					
ANR	4907884	Parameter	int ist_index	1:29:29:41	4907540	0	True				
ANR	4907885	ParameterType	int		4907540	0					
ANR	4907886	Identifier	ist_index		4907540	1					
ANR	4907887	Parameter	char * error	1:44:44:54	4907540	1	True				
ANR	4907888	ParameterType	char *		4907540	0					
ANR	4907889	Identifier	error		4907540	1					
ANR	4907890	Parameter	int error_len	1:57:57:69	4907540	2	True				
ANR	4907891	ParameterType	int		4907540	0					
ANR	4907892	Identifier	error_len		4907540	1					
ANR	4907893	CFGEntryNode	ENTRY		4907540		True				
ANR	4907894	CFGExitNode	EXIT		4907540		True				
ANR	4907895	Symbol	* output_streams		4907540						
ANR	4907896	Symbol	* * * ist		4907540						
ANR	4907897	Symbol	* * ist -> st		4907540						
ANR	4907898	Symbol	ist		4907540						
ANR	4907899	Symbol	AVMEDIA_TYPE_VIDEO		4907540						
ANR	4907900	Symbol	ost		4907540						
ANR	4907901	Symbol	& ist -> buffer_pool		4907540						
ANR	4907902	Symbol	ist -> dec		4907540						
ANR	4907903	Symbol	* ost -> st		4907540						
ANR	4907904	Symbol	NULL		4907540						
ANR	4907905	Symbol	output_streams		4907540						
ANR	4907906	Symbol	ist -> st		4907540						
ANR	4907907	Symbol	* codec		4907540						
ANR	4907908	Symbol	av_q2d		4907540						
ANR	4907909	Symbol	ist -> is_start		4907540						
ANR	4907910	Symbol	* ist_index		4907540						
ANR	4907911	Symbol	codec		4907540						
ANR	4907912	Symbol	avcodec_open2		4907540						
ANR	4907913	Symbol	& ist -> pts_ctx		4907540						
ANR	4907914	Symbol	ist -> file_index		4907540						
ANR	4907915	Symbol	ist -> st -> codec -> opaque		4907540						
ANR	4907916	Symbol	ist -> opts		4907540						
ANR	4907917	Symbol	ist -> next_dts		4907540						
ANR	4907918	Symbol	ist -> st -> codec -> get_buffer		4907540						
ANR	4907919	Symbol	codec_get_buffer		4907540						
ANR	4907920	Symbol	ist -> decoding_needed		4907540						
ANR	4907921	Symbol	& ist -> opts		4907540						
ANR	4907922	Symbol	ost -> st -> codec		4907540						
ANR	4907923	Symbol	* ist		4907540						
ANR	4907924	Symbol	AV_TIME_BASE		4907540						
ANR	4907925	Symbol	error		4907540						
ANR	4907926	Symbol	AV_NOPTS_VALUE		4907540						
ANR	4907927	Symbol	ist -> st -> codec -> has_b_frames		4907540						
ANR	4907928	Symbol	ist -> st -> codec -> release_buffer		4907540						
ANR	4907929	Symbol	* ist -> st		4907540						
ANR	4907930	Symbol	* input_streams		4907540						
ANR	4907931	Symbol	av_dict_get		4907540						
ANR	4907932	Symbol	ist -> st -> avg_frame_rate		4907540						
ANR	4907933	Symbol	* * ist		4907540						
ANR	4907934	Symbol	codec -> capabilities		4907540						
ANR	4907935	Symbol	codec -> type		4907540						
ANR	4907936	Symbol	codec_release_buffer		4907540						
ANR	4907937	Symbol	* * ost		4907540						
ANR	4907938	Symbol	ost -> source_index		4907540						
ANR	4907939	Symbol	input_streams		4907540						
ANR	4907940	Symbol	ist -> st -> avg_frame_rate . num		4907540						
ANR	4907941	Symbol	i		4907540						
ANR	4907942	Symbol	ist -> st -> codec		4907540						
ANR	4907943	Symbol	CODEC_CAP_DR1		4907540						
ANR	4907944	Symbol	EINVAL		4907540						
ANR	4907945	Symbol	nb_output_streams		4907540						
ANR	4907946	Symbol	* i		4907540						
ANR	4907947	Symbol	ist -> st -> codec -> codec_id		4907540						
ANR	4907948	Symbol	ist -> last_dts		4907540						
ANR	4907949	Symbol	error_len		4907540						
ANR	4907950	Symbol	* ist -> st -> codec		4907540						
ANR	4907951	Symbol	ost -> st		4907540						
ANR	4907952	Symbol	* ost		4907540						
ANR	4907953	Symbol	AVERROR		4907540						
ANR	4907954	Symbol	ist -> st -> index		4907540						
ANR	4907955	Symbol	ist_index		4907540						
