command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8210365	File	/home/p4ultr4n/workplace/ReVeal/raw_code/tcg_gen_callN_1.c								
ANR	8210366	Function	tcg_gen_callN	1:0:0:6402							
ANR	8210367	FunctionDef	"tcg_gen_callN (void * func , TCGTemp * ret , int nargs , TCGTemp * * args)"		8210366	0					
ANR	8210368	CompoundStatement		3:0:73:6402	8210366	0					
ANR	8210369	IdentifierDeclStatement	TCGContext * s = tcg_ctx ;	5:4:80:103	8210366	0	True				
ANR	8210370	IdentifierDecl	* s = tcg_ctx		8210366	0					
ANR	8210371	IdentifierDeclType	TCGContext *		8210366	0					
ANR	8210372	Identifier	s		8210366	1					
ANR	8210373	AssignmentExpression	* s = tcg_ctx		8210366	2		=			
ANR	8210374	Identifier	tcg_ctx		8210366	0					
ANR	8210375	Identifier	tcg_ctx		8210366	1					
ANR	8210376	IdentifierDeclStatement	"int i , real_args , nb_rets , pi ;"	7:4:110:139	8210366	1	True				
ANR	8210377	IdentifierDecl	i		8210366	0					
ANR	8210378	IdentifierDeclType	int		8210366	0					
ANR	8210379	Identifier	i		8210366	1					
ANR	8210380	IdentifierDecl	real_args		8210366	1					
ANR	8210381	IdentifierDeclType	int		8210366	0					
ANR	8210382	Identifier	real_args		8210366	1					
ANR	8210383	IdentifierDecl	nb_rets		8210366	2					
ANR	8210384	IdentifierDeclType	int		8210366	0					
ANR	8210385	Identifier	nb_rets		8210366	1					
ANR	8210386	IdentifierDecl	pi		8210366	3					
ANR	8210387	IdentifierDeclType	int		8210366	0					
ANR	8210388	Identifier	pi		8210366	1					
ANR	8210389	IdentifierDeclStatement	"unsigned sizemask , flags ;"	9:4:146:170	8210366	2	True				
ANR	8210390	IdentifierDecl	sizemask		8210366	0					
ANR	8210391	IdentifierDeclType	unsigned		8210366	0					
ANR	8210392	Identifier	sizemask		8210366	1					
ANR	8210393	IdentifierDecl	flags		8210366	1					
ANR	8210394	IdentifierDeclType	unsigned		8210366	0					
ANR	8210395	Identifier	flags		8210366	1					
ANR	8210396	IdentifierDeclStatement	TCGHelperInfo * info ;	11:4:177:196	8210366	3	True				
ANR	8210397	IdentifierDecl	* info		8210366	0					
ANR	8210398	IdentifierDeclType	TCGHelperInfo *		8210366	0					
ANR	8210399	Identifier	info		8210366	1					
ANR	8210400	IdentifierDeclStatement	TCGOp * op ;	13:4:203:212	8210366	4	True				
ANR	8210401	IdentifierDecl	* op		8210366	0					
ANR	8210402	IdentifierDeclType	TCGOp *		8210366	0					
ANR	8210403	Identifier	op		8210366	1					
ANR	8210404	ExpressionStatement	"info = g_hash_table_lookup ( helper_table , ( gpointer ) func )"	17:4:221:277	8210366	5	True				
ANR	8210405	AssignmentExpression	"info = g_hash_table_lookup ( helper_table , ( gpointer ) func )"		8210366	0		=			
ANR	8210406	Identifier	info		8210366	0					
ANR	8210407	CallExpression	"g_hash_table_lookup ( helper_table , ( gpointer ) func )"		8210366	1					
ANR	8210408	Callee	g_hash_table_lookup		8210366	0					
ANR	8210409	Identifier	g_hash_table_lookup		8210366	0					
ANR	8210410	ArgumentList	helper_table		8210366	1					
ANR	8210411	Argument	helper_table		8210366	0					
ANR	8210412	Identifier	helper_table		8210366	0					
ANR	8210413	Argument	( gpointer ) func		8210366	1					
ANR	8210414	CastExpression	( gpointer ) func		8210366	0					
ANR	8210415	CastTarget	gpointer		8210366	0					
ANR	8210416	Identifier	func		8210366	1					
ANR	8210417	ExpressionStatement	flags = info -> flags	19:4:284:303	8210366	6	True				
ANR	8210418	AssignmentExpression	flags = info -> flags		8210366	0		=			
ANR	8210419	Identifier	flags		8210366	0					
ANR	8210420	PtrMemberAccess	info -> flags		8210366	1					
ANR	8210421	Identifier	info		8210366	0					
ANR	8210422	Identifier	flags		8210366	1					
ANR	8210423	ExpressionStatement	sizemask = info -> sizemask	21:4:310:335	8210366	7	True				
ANR	8210424	AssignmentExpression	sizemask = info -> sizemask		8210366	0		=			
ANR	8210425	Identifier	sizemask		8210366	0					
ANR	8210426	PtrMemberAccess	info -> sizemask		8210366	1					
ANR	8210427	Identifier	info		8210366	0					
ANR	8210428	Identifier	sizemask		8210366	1					
ANR	8210429	Statement	&&	27:4:394:395	8210366	8	True				
ANR	8210430	Statement	!	27:7:397:397	8210366	9	True				
ANR	8210431	Statement	defined	27:8:398:404	8210366	10	True				
ANR	8210432	Statement	(	27:15:405:405	8210366	11	True				
ANR	8210433	Statement	CONFIG_TCG_INTERPRETER	27:16:406:427	8210366	12	True				
ANR	8210434	Statement	)	27:38:428:428	8210366	13	True				
ANR	8210435	IdentifierDeclStatement	int orig_sizemask = sizemask ;	33:4:552:580	8210366	14	True				
ANR	8210436	IdentifierDecl	orig_sizemask = sizemask		8210366	0					
ANR	8210437	IdentifierDeclType	int		8210366	0					
ANR	8210438	Identifier	orig_sizemask		8210366	1					
ANR	8210439	AssignmentExpression	orig_sizemask = sizemask		8210366	2		=			
ANR	8210440	Identifier	sizemask		8210366	0					
ANR	8210441	Identifier	sizemask		8210366	1					
ANR	8210442	IdentifierDeclStatement	int orig_nargs = nargs ;	35:4:587:609	8210366	15	True				
ANR	8210443	IdentifierDecl	orig_nargs = nargs		8210366	0					
ANR	8210444	IdentifierDeclType	int		8210366	0					
ANR	8210445	Identifier	orig_nargs		8210366	1					
ANR	8210446	AssignmentExpression	orig_nargs = nargs		8210366	2		=			
ANR	8210447	Identifier	nargs		8210366	0					
ANR	8210448	Identifier	nargs		8210366	1					
ANR	8210449	IdentifierDeclStatement	"TCGv_i64 retl , reth ;"	37:4:616:635	8210366	16	True				
ANR	8210450	IdentifierDecl	retl		8210366	0					
ANR	8210451	IdentifierDeclType	TCGv_i64		8210366	0					
ANR	8210452	Identifier	retl		8210366	1					
ANR	8210453	IdentifierDecl	reth		8210366	1					
ANR	8210454	IdentifierDeclType	TCGv_i64		8210366	0					
ANR	8210455	Identifier	reth		8210366	1					
ANR	8210456	IdentifierDeclStatement	TCGTemp * split_args [ MAX_OPC_PARAM ] ;	39:4:642:676	8210366	17	True				
ANR	8210457	IdentifierDecl	* split_args [ MAX_OPC_PARAM ]		8210366	0					
ANR	8210458	IdentifierDeclType	TCGTemp * [ MAX_OPC_PARAM ]		8210366	0					
ANR	8210459	Identifier	split_args		8210366	1					
ANR	8210460	Identifier	MAX_OPC_PARAM		8210366	2					
ANR	8210461	ExpressionStatement	retl = NULL	43:4:685:696	8210366	18	True				
ANR	8210462	AssignmentExpression	retl = NULL		8210366	0		=			
ANR	8210463	Identifier	retl		8210366	0					
ANR	8210464	Identifier	NULL		8210366	1					
ANR	8210465	ExpressionStatement	reth = NULL	45:4:703:714	8210366	19	True				
ANR	8210466	AssignmentExpression	reth = NULL		8210366	0		=			
ANR	8210467	Identifier	reth		8210366	0					
ANR	8210468	Identifier	NULL		8210366	1					
ANR	8210469	IfStatement	if ( sizemask != 0 )		8210366	20					
ANR	8210470	Condition	sizemask != 0	47:8:725:737	8210366	0	True				
ANR	8210471	EqualityExpression	sizemask != 0		8210366	0		!=			
ANR	8210472	Identifier	sizemask		8210366	0					
ANR	8210473	PrimaryExpression	0		8210366	1					
ANR	8210474	CompoundStatement		45:23:666:666	8210366	1					
ANR	8210475	ForStatement	for ( i = real_args = 0 ; i < nargs ; ++ i )		8210366	0					
ANR	8210476	ForInit	i = real_args = 0 ;	49:13:756:773	8210366	0	True				
ANR	8210477	AssignmentExpression	i = real_args = 0		8210366	0		=			
ANR	8210478	Identifier	i		8210366	0					
ANR	8210479	AssignmentExpression	real_args = 0		8210366	1		=			
ANR	8210480	Identifier	real_args		8210366	0					
ANR	8210481	PrimaryExpression	0		8210366	1					
ANR	8210482	Condition	i < nargs	49:32:775:783	8210366	1	True				
ANR	8210483	RelationalExpression	i < nargs		8210366	0		<			
ANR	8210484	Identifier	i		8210366	0					
ANR	8210485	Identifier	nargs		8210366	1					
ANR	8210486	UnaryExpression	++ i	49:43:786:788	8210366	2	True				
ANR	8210487	IncDec	++		8210366	0					
ANR	8210488	Identifier	i		8210366	1					
ANR	8210489	CompoundStatement		49:12:732:772	8210366	3					
ANR	8210490	IdentifierDeclStatement	int is_64bit = sizemask & ( 1 << ( i + 1 ) * 2 ) ;	51:12:806:846	8210366	0	True				
ANR	8210491	IdentifierDecl	is_64bit = sizemask & ( 1 << ( i + 1 ) * 2 )		8210366	0					
ANR	8210492	IdentifierDeclType	int		8210366	0					
ANR	8210493	Identifier	is_64bit		8210366	1					
ANR	8210494	AssignmentExpression	is_64bit = sizemask & ( 1 << ( i + 1 ) * 2 )		8210366	2		=			
ANR	8210495	Identifier	is_64bit		8210366	0					
ANR	8210496	BitAndExpression	sizemask & ( 1 << ( i + 1 ) * 2 )		8210366	1		&			
ANR	8210497	Identifier	sizemask		8210366	0					
ANR	8210498	ShiftExpression	1 << ( i + 1 ) * 2		8210366	1		<<			
ANR	8210499	PrimaryExpression	1		8210366	0					
ANR	8210500	MultiplicativeExpression	( i + 1 ) * 2		8210366	1		*			
ANR	8210501	AdditiveExpression	i + 1		8210366	0		+			
ANR	8210502	Identifier	i		8210366	0					
ANR	8210503	PrimaryExpression	1		8210366	1					
ANR	8210504	PrimaryExpression	2		8210366	1					
ANR	8210505	IfStatement	if ( is_64bit )		8210366	1					
ANR	8210506	Condition	is_64bit	53:16:865:872	8210366	0	True				
ANR	8210507	Identifier	is_64bit		8210366	0					
ANR	8210508	CompoundStatement		57:16:927:958	8210366	1					
ANR	8210509	IdentifierDeclStatement	TCGv_i64 orig = temp_tcgv_i64 ( args [ i ] ) ;	55:16:894:932	8210366	0	True				
ANR	8210510	IdentifierDecl	orig = temp_tcgv_i64 ( args [ i ] )		8210366	0					
ANR	8210511	IdentifierDeclType	TCGv_i64		8210366	0					
ANR	8210512	Identifier	orig		8210366	1					
ANR	8210513	AssignmentExpression	orig = temp_tcgv_i64 ( args [ i ] )		8210366	2		=			
ANR	8210514	Identifier	orig		8210366	0					
ANR	8210515	CallExpression	temp_tcgv_i64 ( args [ i ] )		8210366	1					
ANR	8210516	Callee	temp_tcgv_i64		8210366	0					
ANR	8210517	Identifier	temp_tcgv_i64		8210366	0					
ANR	8210518	ArgumentList	args [ i ]		8210366	1					
ANR	8210519	Argument	args [ i ]		8210366	0					
ANR	8210520	ArrayIndexing	args [ i ]		8210366	0					
ANR	8210521	Identifier	args		8210366	0					
ANR	8210522	Identifier	i		8210366	1					
ANR	8210523	IdentifierDeclStatement	TCGv_i32 h = tcg_temp_new_i32 ( ) ;	57:16:951:982	8210366	1	True				
ANR	8210524	IdentifierDecl	h = tcg_temp_new_i32 ( )		8210366	0					
ANR	8210525	IdentifierDeclType	TCGv_i32		8210366	0					
ANR	8210526	Identifier	h		8210366	1					
ANR	8210527	AssignmentExpression	h = tcg_temp_new_i32 ( )		8210366	2		=			
ANR	8210528	Identifier	h		8210366	0					
ANR	8210529	CallExpression	tcg_temp_new_i32 ( )		8210366	1					
ANR	8210530	Callee	tcg_temp_new_i32		8210366	0					
ANR	8210531	Identifier	tcg_temp_new_i32		8210366	0					
ANR	8210532	ArgumentList			8210366	1					
ANR	8210533	IdentifierDeclStatement	TCGv_i32 l = tcg_temp_new_i32 ( ) ;	59:16:1001:1032	8210366	2	True				
ANR	8210534	IdentifierDecl	l = tcg_temp_new_i32 ( )		8210366	0					
ANR	8210535	IdentifierDeclType	TCGv_i32		8210366	0					
ANR	8210536	Identifier	l		8210366	1					
ANR	8210537	AssignmentExpression	l = tcg_temp_new_i32 ( )		8210366	2		=			
ANR	8210538	Identifier	l		8210366	0					
ANR	8210539	CallExpression	tcg_temp_new_i32 ( )		8210366	1					
ANR	8210540	Callee	tcg_temp_new_i32		8210366	0					
ANR	8210541	Identifier	tcg_temp_new_i32		8210366	0					
ANR	8210542	ArgumentList			8210366	1					
ANR	8210543	ExpressionStatement	"tcg_gen_extr_i64_i32 ( l , h , orig )"	61:16:1051:1083	8210366	3	True				
ANR	8210544	CallExpression	"tcg_gen_extr_i64_i32 ( l , h , orig )"		8210366	0					
ANR	8210545	Callee	tcg_gen_extr_i64_i32		8210366	0					
ANR	8210546	Identifier	tcg_gen_extr_i64_i32		8210366	0					
ANR	8210547	ArgumentList	l		8210366	1					
ANR	8210548	Argument	l		8210366	0					
ANR	8210549	Identifier	l		8210366	0					
ANR	8210550	Argument	h		8210366	1					
ANR	8210551	Identifier	h		8210366	0					
ANR	8210552	Argument	orig		8210366	2					
ANR	8210553	Identifier	orig		8210366	0					
ANR	8210554	ExpressionStatement	split_args [ real_args ++ ] = tcgv_i32_temp ( h )	63:16:1102:1144	8210366	4	True				
ANR	8210555	AssignmentExpression	split_args [ real_args ++ ] = tcgv_i32_temp ( h )		8210366	0		=			
ANR	8210556	ArrayIndexing	split_args [ real_args ++ ]		8210366	0					
ANR	8210557	Identifier	split_args		8210366	0					
ANR	8210558	PostIncDecOperationExpression	real_args ++		8210366	1					
ANR	8210559	Identifier	real_args		8210366	0					
ANR	8210560	IncDec	++		8210366	1					
ANR	8210561	CallExpression	tcgv_i32_temp ( h )		8210366	1					
ANR	8210562	Callee	tcgv_i32_temp		8210366	0					
ANR	8210563	Identifier	tcgv_i32_temp		8210366	0					
ANR	8210564	ArgumentList	h		8210366	1					
ANR	8210565	Argument	h		8210366	0					
ANR	8210566	Identifier	h		8210366	0					
ANR	8210567	ExpressionStatement	split_args [ real_args ++ ] = tcgv_i32_temp ( l )	65:16:1163:1205	8210366	5	True				
ANR	8210568	AssignmentExpression	split_args [ real_args ++ ] = tcgv_i32_temp ( l )		8210366	0		=			
ANR	8210569	ArrayIndexing	split_args [ real_args ++ ]		8210366	0					
ANR	8210570	Identifier	split_args		8210366	0					
ANR	8210571	PostIncDecOperationExpression	real_args ++		8210366	1					
ANR	8210572	Identifier	real_args		8210366	0					
ANR	8210573	IncDec	++		8210366	1					
ANR	8210574	CallExpression	tcgv_i32_temp ( l )		8210366	1					
ANR	8210575	Callee	tcgv_i32_temp		8210366	0					
ANR	8210576	Identifier	tcgv_i32_temp		8210366	0					
ANR	8210577	ArgumentList	l		8210366	1					
ANR	8210578	Argument	l		8210366	0					
ANR	8210579	Identifier	l		8210366	0					
ANR	8210580	ElseStatement	else		8210366	0					
ANR	8210581	CompoundStatement		65:19:1153:1153	8210366	0					
ANR	8210582	ExpressionStatement	split_args [ real_args ++ ] = args [ i ]	69:16:1246:1279	8210366	0	True				
ANR	8210583	AssignmentExpression	split_args [ real_args ++ ] = args [ i ]		8210366	0		=			
ANR	8210584	ArrayIndexing	split_args [ real_args ++ ]		8210366	0					
ANR	8210585	Identifier	split_args		8210366	0					
ANR	8210586	PostIncDecOperationExpression	real_args ++		8210366	1					
ANR	8210587	Identifier	real_args		8210366	0					
ANR	8210588	IncDec	++		8210366	1					
ANR	8210589	ArrayIndexing	args [ i ]		8210366	1					
ANR	8210590	Identifier	args		8210366	0					
ANR	8210591	Identifier	i		8210366	1					
ANR	8210592	ExpressionStatement	nargs = real_args	75:8:1316:1333	8210366	1	True				
ANR	8210593	AssignmentExpression	nargs = real_args		8210366	0		=			
ANR	8210594	Identifier	nargs		8210366	0					
ANR	8210595	Identifier	real_args		8210366	1					
ANR	8210596	ExpressionStatement	args = split_args	77:8:1344:1361	8210366	2	True				
ANR	8210597	AssignmentExpression	args = split_args		8210366	0		=			
ANR	8210598	Identifier	args		8210366	0					
ANR	8210599	Identifier	split_args		8210366	1					
ANR	8210600	ExpressionStatement	sizemask = 0	79:8:1372:1384	8210366	3	True				
ANR	8210601	AssignmentExpression	sizemask = 0		8210366	0		=			
ANR	8210602	Identifier	sizemask		8210366	0					
ANR	8210603	PrimaryExpression	0		8210366	1					
ANR	8210604	ExpressionStatement	i = s -> gen_next_op_idx	117:4:1998:2020	8210366	21	True				
ANR	8210605	AssignmentExpression	i = s -> gen_next_op_idx		8210366	0		=			
ANR	8210606	Identifier	i		8210366	0					
ANR	8210607	PtrMemberAccess	s -> gen_next_op_idx		8210366	1					
ANR	8210608	Identifier	s		8210366	0					
ANR	8210609	Identifier	gen_next_op_idx		8210366	1					
ANR	8210610	ExpressionStatement	tcg_debug_assert ( i < OPC_BUF_SIZE )	119:4:2027:2061	8210366	22	True				
ANR	8210611	CallExpression	tcg_debug_assert ( i < OPC_BUF_SIZE )		8210366	0					
ANR	8210612	Callee	tcg_debug_assert		8210366	0					
ANR	8210613	Identifier	tcg_debug_assert		8210366	0					
ANR	8210614	ArgumentList	i < OPC_BUF_SIZE		8210366	1					
ANR	8210615	Argument	i < OPC_BUF_SIZE		8210366	0					
ANR	8210616	RelationalExpression	i < OPC_BUF_SIZE		8210366	0		<			
ANR	8210617	Identifier	i		8210366	0					
ANR	8210618	Identifier	OPC_BUF_SIZE		8210366	1					
ANR	8210619	ExpressionStatement	s -> gen_op_buf [ 0 ] . prev = i	121:4:2068:2093	8210366	23	True				
ANR	8210620	AssignmentExpression	s -> gen_op_buf [ 0 ] . prev = i		8210366	0		=			
ANR	8210621	MemberAccess	s -> gen_op_buf [ 0 ] . prev		8210366	0					
ANR	8210622	ArrayIndexing	s -> gen_op_buf [ 0 ]		8210366	0					
ANR	8210623	PtrMemberAccess	s -> gen_op_buf		8210366	0					
ANR	8210624	Identifier	s		8210366	0					
ANR	8210625	Identifier	gen_op_buf		8210366	1					
ANR	8210626	PrimaryExpression	0		8210366	1					
ANR	8210627	Identifier	prev		8210366	1					
ANR	8210628	Identifier	i		8210366	1					
ANR	8210629	ExpressionStatement	s -> gen_next_op_idx = i + 1	123:4:2100:2126	8210366	24	True				
ANR	8210630	AssignmentExpression	s -> gen_next_op_idx = i + 1		8210366	0		=			
ANR	8210631	PtrMemberAccess	s -> gen_next_op_idx		8210366	0					
ANR	8210632	Identifier	s		8210366	0					
ANR	8210633	Identifier	gen_next_op_idx		8210366	1					
ANR	8210634	AdditiveExpression	i + 1		8210366	1		+			
ANR	8210635	Identifier	i		8210366	0					
ANR	8210636	PrimaryExpression	1		8210366	1					
ANR	8210637	ExpressionStatement	op = & s -> gen_op_buf [ i ]	125:4:2133:2155	8210366	25	True				
ANR	8210638	AssignmentExpression	op = & s -> gen_op_buf [ i ]		8210366	0		=			
ANR	8210639	Identifier	op		8210366	0					
ANR	8210640	UnaryOperationExpression	& s -> gen_op_buf [ i ]		8210366	1					
ANR	8210641	UnaryOperator	&		8210366	0					
ANR	8210642	ArrayIndexing	s -> gen_op_buf [ i ]		8210366	1					
ANR	8210643	PtrMemberAccess	s -> gen_op_buf		8210366	0					
ANR	8210644	Identifier	s		8210366	0					
ANR	8210645	Identifier	gen_op_buf		8210366	1					
ANR	8210646	Identifier	i		8210366	1					
ANR	8210647	ExpressionStatement	"memset ( op , 0 , offsetof ( TCGOp , args ) )"	131:4:2232:2268	8210366	26	True				
ANR	8210648	CallExpression	"memset ( op , 0 , offsetof ( TCGOp , args ) )"		8210366	0					
ANR	8210649	Callee	memset		8210366	0					
ANR	8210650	Identifier	memset		8210366	0					
ANR	8210651	ArgumentList	op		8210366	1					
ANR	8210652	Argument	op		8210366	0					
ANR	8210653	Identifier	op		8210366	0					
ANR	8210654	Argument	0		8210366	1					
ANR	8210655	PrimaryExpression	0		8210366	0					
ANR	8210656	Argument	"offsetof ( TCGOp , args )"		8210366	2					
ANR	8210657	CallExpression	"offsetof ( TCGOp , args )"		8210366	0					
ANR	8210658	Callee	offsetof		8210366	0					
ANR	8210659	Identifier	offsetof		8210366	0					
ANR	8210660	ArgumentList	TCGOp		8210366	1					
ANR	8210661	Argument	TCGOp		8210366	0					
ANR	8210662	Identifier	TCGOp		8210366	0					
ANR	8210663	Argument	args		8210366	1					
ANR	8210664	Identifier	args		8210366	0					
ANR	8210665	ExpressionStatement	op -> opc = INDEX_op_call	133:4:2275:2298	8210366	27	True				
ANR	8210666	AssignmentExpression	op -> opc = INDEX_op_call		8210366	0		=			
ANR	8210667	PtrMemberAccess	op -> opc		8210366	0					
ANR	8210668	Identifier	op		8210366	0					
ANR	8210669	Identifier	opc		8210366	1					
ANR	8210670	Identifier	INDEX_op_call		8210366	1					
ANR	8210671	ExpressionStatement	op -> prev = i - 1	135:4:2305:2321	8210366	28	True				
ANR	8210672	AssignmentExpression	op -> prev = i - 1		8210366	0		=			
ANR	8210673	PtrMemberAccess	op -> prev		8210366	0					
ANR	8210674	Identifier	op		8210366	0					
ANR	8210675	Identifier	prev		8210366	1					
ANR	8210676	AdditiveExpression	i - 1		8210366	1		-			
ANR	8210677	Identifier	i		8210366	0					
ANR	8210678	PrimaryExpression	1		8210366	1					
ANR	8210679	ExpressionStatement	op -> next = i + 1	137:4:2328:2344	8210366	29	True				
ANR	8210680	AssignmentExpression	op -> next = i + 1		8210366	0		=			
ANR	8210681	PtrMemberAccess	op -> next		8210366	0					
ANR	8210682	Identifier	op		8210366	0					
ANR	8210683	Identifier	next		8210366	1					
ANR	8210684	AdditiveExpression	i + 1		8210366	1		+			
ANR	8210685	Identifier	i		8210366	0					
ANR	8210686	PrimaryExpression	1		8210366	1					
ANR	8210687	ExpressionStatement	pi = 0	141:4:2353:2359	8210366	30	True				
ANR	8210688	AssignmentExpression	pi = 0		8210366	0		=			
ANR	8210689	Identifier	pi		8210366	0					
ANR	8210690	PrimaryExpression	0		8210366	1					
ANR	8210691	IfStatement	if ( ret != NULL )		8210366	31					
ANR	8210692	Condition	ret != NULL	143:8:2370:2380	8210366	0	True				
ANR	8210693	EqualityExpression	ret != NULL		8210366	0		!=			
ANR	8210694	Identifier	ret		8210366	0					
ANR	8210695	Identifier	NULL		8210366	1					
ANR	8210696	CompoundStatement		141:21:2309:2309	8210366	1					
ANR	8210697	Statement	&&	147:4:2440:2441	8210366	0	True				
ANR	8210698	Statement	!	147:7:2443:2443	8210366	1	True				
ANR	8210699	Statement	defined	147:8:2444:2450	8210366	2	True				
ANR	8210700	Statement	(	147:15:2451:2451	8210366	3	True				
ANR	8210701	Statement	CONFIG_TCG_INTERPRETER	147:16:2452:2473	8210366	4	True				
ANR	8210702	Statement	)	147:38:2474:2474	8210366	5	True				
ANR	8210703	IfStatement	if ( orig_sizemask & 1 )		8210366	6					
ANR	8210704	Condition	orig_sizemask & 1	149:12:2489:2505	8210366	0	True				
ANR	8210705	BitAndExpression	orig_sizemask & 1		8210366	0		&			
ANR	8210706	Identifier	orig_sizemask		8210366	0					
ANR	8210707	PrimaryExpression	1		8210366	1					
ANR	8210708	CompoundStatement		147:31:2434:2434	8210366	1					
ANR	8210709	ExpressionStatement	retl = tcg_temp_new_i64 ( )	157:12:2729:2754	8210366	0	True				
ANR	8210710	AssignmentExpression	retl = tcg_temp_new_i64 ( )		8210366	0		=			
ANR	8210711	Identifier	retl		8210366	0					
ANR	8210712	CallExpression	tcg_temp_new_i64 ( )		8210366	1					
ANR	8210713	Callee	tcg_temp_new_i64		8210366	0					
ANR	8210714	Identifier	tcg_temp_new_i64		8210366	0					
ANR	8210715	ArgumentList			8210366	1					
ANR	8210716	ExpressionStatement	reth = tcg_temp_new_i64 ( )	159:12:2769:2794	8210366	1	True				
ANR	8210717	AssignmentExpression	reth = tcg_temp_new_i64 ( )		8210366	0		=			
ANR	8210718	Identifier	reth		8210366	0					
ANR	8210719	CallExpression	tcg_temp_new_i64 ( )		8210366	1					
ANR	8210720	Callee	tcg_temp_new_i64		8210366	0					
ANR	8210721	Identifier	tcg_temp_new_i64		8210366	0					
ANR	8210722	ArgumentList			8210366	1					
ANR	8210723	ExpressionStatement	op -> args [ pi ++ ] = tcgv_i64_arg ( reth )	161:12:2809:2844	8210366	2	True				
ANR	8210724	AssignmentExpression	op -> args [ pi ++ ] = tcgv_i64_arg ( reth )		8210366	0		=			
ANR	8210725	ArrayIndexing	op -> args [ pi ++ ]		8210366	0					
ANR	8210726	PtrMemberAccess	op -> args		8210366	0					
ANR	8210727	Identifier	op		8210366	0					
ANR	8210728	Identifier	args		8210366	1					
ANR	8210729	PostIncDecOperationExpression	pi ++		8210366	1					
ANR	8210730	Identifier	pi		8210366	0					
ANR	8210731	IncDec	++		8210366	1					
ANR	8210732	CallExpression	tcgv_i64_arg ( reth )		8210366	1					
ANR	8210733	Callee	tcgv_i64_arg		8210366	0					
ANR	8210734	Identifier	tcgv_i64_arg		8210366	0					
ANR	8210735	ArgumentList	reth		8210366	1					
ANR	8210736	Argument	reth		8210366	0					
ANR	8210737	Identifier	reth		8210366	0					
ANR	8210738	ExpressionStatement	op -> args [ pi ++ ] = tcgv_i64_arg ( retl )	163:12:2859:2894	8210366	3	True				
ANR	8210739	AssignmentExpression	op -> args [ pi ++ ] = tcgv_i64_arg ( retl )		8210366	0		=			
ANR	8210740	ArrayIndexing	op -> args [ pi ++ ]		8210366	0					
ANR	8210741	PtrMemberAccess	op -> args		8210366	0					
ANR	8210742	Identifier	op		8210366	0					
ANR	8210743	Identifier	args		8210366	1					
ANR	8210744	PostIncDecOperationExpression	pi ++		8210366	1					
ANR	8210745	Identifier	pi		8210366	0					
ANR	8210746	IncDec	++		8210366	1					
ANR	8210747	CallExpression	tcgv_i64_arg ( retl )		8210366	1					
ANR	8210748	Callee	tcgv_i64_arg		8210366	0					
ANR	8210749	Identifier	tcgv_i64_arg		8210366	0					
ANR	8210750	ArgumentList	retl		8210366	1					
ANR	8210751	Argument	retl		8210366	0					
ANR	8210752	Identifier	retl		8210366	0					
ANR	8210753	ExpressionStatement	nb_rets = 2	165:12:2909:2920	8210366	4	True				
ANR	8210754	AssignmentExpression	nb_rets = 2		8210366	0		=			
ANR	8210755	Identifier	nb_rets		8210366	0					
ANR	8210756	PrimaryExpression	2		8210366	1					
ANR	8210757	ElseStatement	else		8210366	0					
ANR	8210758	CompoundStatement		165:15:2864:2864	8210366	0					
ANR	8210759	ExpressionStatement	op -> args [ pi ++ ] = temp_arg ( ret )	169:12:2953:2983	8210366	0	True				
ANR	8210760	AssignmentExpression	op -> args [ pi ++ ] = temp_arg ( ret )		8210366	0		=			
ANR	8210761	ArrayIndexing	op -> args [ pi ++ ]		8210366	0					
ANR	8210762	PtrMemberAccess	op -> args		8210366	0					
ANR	8210763	Identifier	op		8210366	0					
ANR	8210764	Identifier	args		8210366	1					
ANR	8210765	PostIncDecOperationExpression	pi ++		8210366	1					
ANR	8210766	Identifier	pi		8210366	0					
ANR	8210767	IncDec	++		8210366	1					
ANR	8210768	CallExpression	temp_arg ( ret )		8210366	1					
ANR	8210769	Callee	temp_arg		8210366	0					
ANR	8210770	Identifier	temp_arg		8210366	0					
ANR	8210771	ArgumentList	ret		8210366	1					
ANR	8210772	Argument	ret		8210366	0					
ANR	8210773	Identifier	ret		8210366	0					
ANR	8210774	ExpressionStatement	nb_rets = 1	171:12:2998:3009	8210366	1	True				
ANR	8210775	AssignmentExpression	nb_rets = 1		8210366	0		=			
ANR	8210776	Identifier	nb_rets		8210366	0					
ANR	8210777	PrimaryExpression	1		8210366	1					
ANR	8210778	ElseStatement	else		8210366	0					
ANR	8210779	CompoundStatement		203:11:3392:3392	8210366	0					
ANR	8210780	ExpressionStatement	nb_rets = 0	207:8:3477:3488	8210366	0	True				
ANR	8210781	AssignmentExpression	nb_rets = 0		8210366	0		=			
ANR	8210782	Identifier	nb_rets		8210366	0					
ANR	8210783	PrimaryExpression	0		8210366	1					
ANR	8210784	ExpressionStatement	op -> callo = nb_rets	211:4:3502:3521	8210366	32	True				
ANR	8210785	AssignmentExpression	op -> callo = nb_rets		8210366	0		=			
ANR	8210786	PtrMemberAccess	op -> callo		8210366	0					
ANR	8210787	Identifier	op		8210366	0					
ANR	8210788	Identifier	callo		8210366	1					
ANR	8210789	Identifier	nb_rets		8210366	1					
ANR	8210790	ExpressionStatement	real_args = 0	215:4:3530:3543	8210366	33	True				
ANR	8210791	AssignmentExpression	real_args = 0		8210366	0		=			
ANR	8210792	Identifier	real_args		8210366	0					
ANR	8210793	PrimaryExpression	0		8210366	1					
ANR	8210794	ForStatement	for ( i = 0 ; i < nargs ; i ++ )		8210366	34					
ANR	8210795	ForInit	i = 0 ;	217:9:3555:3560	8210366	0	True				
ANR	8210796	AssignmentExpression	i = 0		8210366	0		=			
ANR	8210797	Identifier	i		8210366	0					
ANR	8210798	PrimaryExpression	0		8210366	1					
ANR	8210799	Condition	i < nargs	217:16:3562:3570	8210366	1	True				
ANR	8210800	RelationalExpression	i < nargs		8210366	0		<			
ANR	8210801	Identifier	i		8210366	0					
ANR	8210802	Identifier	nargs		8210366	1					
ANR	8210803	PostIncDecOperationExpression	i ++	217:27:3573:3575	8210366	2	True				
ANR	8210804	Identifier	i		8210366	0					
ANR	8210805	IncDec	++		8210366	1					
ANR	8210806	CompoundStatement		217:8:3515:3555	8210366	3					
ANR	8210807	IdentifierDeclStatement	int is_64bit = sizemask & ( 1 << ( i + 1 ) * 2 ) ;	219:8:3589:3629	8210366	0	True				
ANR	8210808	IdentifierDecl	is_64bit = sizemask & ( 1 << ( i + 1 ) * 2 )		8210366	0					
ANR	8210809	IdentifierDeclType	int		8210366	0					
ANR	8210810	Identifier	is_64bit		8210366	1					
ANR	8210811	AssignmentExpression	is_64bit = sizemask & ( 1 << ( i + 1 ) * 2 )		8210366	2		=			
ANR	8210812	Identifier	is_64bit		8210366	0					
ANR	8210813	BitAndExpression	sizemask & ( 1 << ( i + 1 ) * 2 )		8210366	1		&			
ANR	8210814	Identifier	sizemask		8210366	0					
ANR	8210815	ShiftExpression	1 << ( i + 1 ) * 2		8210366	1		<<			
ANR	8210816	PrimaryExpression	1		8210366	0					
ANR	8210817	MultiplicativeExpression	( i + 1 ) * 2		8210366	1		*			
ANR	8210818	AdditiveExpression	i + 1		8210366	0		+			
ANR	8210819	Identifier	i		8210366	0					
ANR	8210820	PrimaryExpression	1		8210366	1					
ANR	8210821	PrimaryExpression	2		8210366	1					
ANR	8210822	IfStatement	if ( TCG_TARGET_REG_BITS < 64 && is_64bit )		8210366	1					
ANR	8210823	Condition	TCG_TARGET_REG_BITS < 64 && is_64bit	221:12:3644:3679	8210366	0	True				
ANR	8210824	AndExpression	TCG_TARGET_REG_BITS < 64 && is_64bit		8210366	0		&&			
ANR	8210825	RelationalExpression	TCG_TARGET_REG_BITS < 64		8210366	0		<			
ANR	8210826	Identifier	TCG_TARGET_REG_BITS		8210366	0					
ANR	8210827	PrimaryExpression	64		8210366	1					
ANR	8210828	Identifier	is_64bit		8210366	1					
ANR	8210829	CompoundStatement		219:50:3608:3608	8210366	1					
ANR	8210830	IfStatement	if ( real_args & 1 )		8210366	0					
ANR	8210831	Condition	real_args & 1	227:16:3793:3805	8210366	0	True				
ANR	8210832	BitAndExpression	real_args & 1		8210366	0		&			
ANR	8210833	Identifier	real_args		8210366	0					
ANR	8210834	PrimaryExpression	1		8210366	1					
ANR	8210835	CompoundStatement		225:31:3734:3734	8210366	1					
ANR	8210836	ExpressionStatement	op -> args [ pi ++ ] = TCG_CALL_DUMMY_ARG	229:16:3827:3862	8210366	0	True				
ANR	8210837	AssignmentExpression	op -> args [ pi ++ ] = TCG_CALL_DUMMY_ARG		8210366	0		=			
ANR	8210838	ArrayIndexing	op -> args [ pi ++ ]		8210366	0					
ANR	8210839	PtrMemberAccess	op -> args		8210366	0					
ANR	8210840	Identifier	op		8210366	0					
ANR	8210841	Identifier	args		8210366	1					
ANR	8210842	PostIncDecOperationExpression	pi ++		8210366	1					
ANR	8210843	Identifier	pi		8210366	0					
ANR	8210844	IncDec	++		8210366	1					
ANR	8210845	Identifier	TCG_CALL_DUMMY_ARG		8210366	1					
ANR	8210846	ExpressionStatement	real_args ++	231:16:3881:3892	8210366	1	True				
ANR	8210847	PostIncDecOperationExpression	real_args ++		8210366	0					
ANR	8210848	Identifier	real_args		8210366	0					
ANR	8210849	IncDec	++		8210366	1					
ANR	8210850	ExpressionStatement	op -> args [ pi ++ ] = temp_arg ( args [ i ] + 1 )	259:12:4683:4721	8210366	1	True				
ANR	8210851	AssignmentExpression	op -> args [ pi ++ ] = temp_arg ( args [ i ] + 1 )		8210366	0		=			
ANR	8210852	ArrayIndexing	op -> args [ pi ++ ]		8210366	0					
ANR	8210853	PtrMemberAccess	op -> args		8210366	0					
ANR	8210854	Identifier	op		8210366	0					
ANR	8210855	Identifier	args		8210366	1					
ANR	8210856	PostIncDecOperationExpression	pi ++		8210366	1					
ANR	8210857	Identifier	pi		8210366	0					
ANR	8210858	IncDec	++		8210366	1					
ANR	8210859	CallExpression	temp_arg ( args [ i ] + 1 )		8210366	1					
ANR	8210860	Callee	temp_arg		8210366	0					
ANR	8210861	Identifier	temp_arg		8210366	0					
ANR	8210862	ArgumentList	args [ i ] + 1		8210366	1					
ANR	8210863	Argument	args [ i ] + 1		8210366	0					
ANR	8210864	AdditiveExpression	args [ i ] + 1		8210366	0		+			
ANR	8210865	ArrayIndexing	args [ i ]		8210366	0					
ANR	8210866	Identifier	args		8210366	0					
ANR	8210867	Identifier	i		8210366	1					
ANR	8210868	PrimaryExpression	1		8210366	1					
ANR	8210869	ExpressionStatement	op -> args [ pi ++ ] = temp_arg ( args [ i ] )	261:12:4736:4770	8210366	2	True				
ANR	8210870	AssignmentExpression	op -> args [ pi ++ ] = temp_arg ( args [ i ] )		8210366	0		=			
ANR	8210871	ArrayIndexing	op -> args [ pi ++ ]		8210366	0					
ANR	8210872	PtrMemberAccess	op -> args		8210366	0					
ANR	8210873	Identifier	op		8210366	0					
ANR	8210874	Identifier	args		8210366	1					
ANR	8210875	PostIncDecOperationExpression	pi ++		8210366	1					
ANR	8210876	Identifier	pi		8210366	0					
ANR	8210877	IncDec	++		8210366	1					
ANR	8210878	CallExpression	temp_arg ( args [ i ] )		8210366	1					
ANR	8210879	Callee	temp_arg		8210366	0					
ANR	8210880	Identifier	temp_arg		8210366	0					
ANR	8210881	ArgumentList	args [ i ]		8210366	1					
ANR	8210882	Argument	args [ i ]		8210366	0					
ANR	8210883	ArrayIndexing	args [ i ]		8210366	0					
ANR	8210884	Identifier	args		8210366	0					
ANR	8210885	Identifier	i		8210366	1					
ANR	8210886	ExpressionStatement	real_args += 2	271:12:4902:4916	8210366	3	True				
ANR	8210887	AssignmentExpression	real_args += 2		8210366	0		+=			
ANR	8210888	Identifier	real_args		8210366	0					
ANR	8210889	PrimaryExpression	2		8210366	1					
ANR	8210890	ContinueStatement	continue ;	273:12:4931:4939	8210366	4	True				
ANR	8210891	ExpressionStatement	op -> args [ pi ++ ] = temp_arg ( args [ i ] )	279:8:4963:4997	8210366	2	True				
ANR	8210892	AssignmentExpression	op -> args [ pi ++ ] = temp_arg ( args [ i ] )		8210366	0		=			
ANR	8210893	ArrayIndexing	op -> args [ pi ++ ]		8210366	0					
ANR	8210894	PtrMemberAccess	op -> args		8210366	0					
ANR	8210895	Identifier	op		8210366	0					
ANR	8210896	Identifier	args		8210366	1					
ANR	8210897	PostIncDecOperationExpression	pi ++		8210366	1					
ANR	8210898	Identifier	pi		8210366	0					
ANR	8210899	IncDec	++		8210366	1					
ANR	8210900	CallExpression	temp_arg ( args [ i ] )		8210366	1					
ANR	8210901	Callee	temp_arg		8210366	0					
ANR	8210902	Identifier	temp_arg		8210366	0					
ANR	8210903	ArgumentList	args [ i ]		8210366	1					
ANR	8210904	Argument	args [ i ]		8210366	0					
ANR	8210905	ArrayIndexing	args [ i ]		8210366	0					
ANR	8210906	Identifier	args		8210366	0					
ANR	8210907	Identifier	i		8210366	1					
ANR	8210908	ExpressionStatement	real_args ++	281:8:5008:5019	8210366	3	True				
ANR	8210909	PostIncDecOperationExpression	real_args ++		8210366	0					
ANR	8210910	Identifier	real_args		8210366	0					
ANR	8210911	IncDec	++		8210366	1					
ANR	8210912	ExpressionStatement	op -> args [ pi ++ ] = ( uintptr_t ) func	285:4:5033:5065	8210366	35	True				
ANR	8210913	AssignmentExpression	op -> args [ pi ++ ] = ( uintptr_t ) func		8210366	0		=			
ANR	8210914	ArrayIndexing	op -> args [ pi ++ ]		8210366	0					
ANR	8210915	PtrMemberAccess	op -> args		8210366	0					
ANR	8210916	Identifier	op		8210366	0					
ANR	8210917	Identifier	args		8210366	1					
ANR	8210918	PostIncDecOperationExpression	pi ++		8210366	1					
ANR	8210919	Identifier	pi		8210366	0					
ANR	8210920	IncDec	++		8210366	1					
ANR	8210921	CastExpression	( uintptr_t ) func		8210366	1					
ANR	8210922	CastTarget	uintptr_t		8210366	0					
ANR	8210923	Identifier	func		8210366	1					
ANR	8210924	ExpressionStatement	op -> args [ pi ++ ] = flags	287:4:5072:5094	8210366	36	True				
ANR	8210925	AssignmentExpression	op -> args [ pi ++ ] = flags		8210366	0		=			
ANR	8210926	ArrayIndexing	op -> args [ pi ++ ]		8210366	0					
ANR	8210927	PtrMemberAccess	op -> args		8210366	0					
ANR	8210928	Identifier	op		8210366	0					
ANR	8210929	Identifier	args		8210366	1					
ANR	8210930	PostIncDecOperationExpression	pi ++		8210366	1					
ANR	8210931	Identifier	pi		8210366	0					
ANR	8210932	IncDec	++		8210366	1					
ANR	8210933	Identifier	flags		8210366	1					
ANR	8210934	ExpressionStatement	op -> calli = real_args	289:4:5101:5122	8210366	37	True				
ANR	8210935	AssignmentExpression	op -> calli = real_args		8210366	0		=			
ANR	8210936	PtrMemberAccess	op -> calli		8210366	0					
ANR	8210937	Identifier	op		8210366	0					
ANR	8210938	Identifier	calli		8210366	1					
ANR	8210939	Identifier	real_args		8210366	1					
ANR	8210940	ExpressionStatement	tcg_debug_assert ( op -> calli == real_args )	295:4:5181:5221	8210366	38	True				
ANR	8210941	CallExpression	tcg_debug_assert ( op -> calli == real_args )		8210366	0					
ANR	8210942	Callee	tcg_debug_assert		8210366	0					
ANR	8210943	Identifier	tcg_debug_assert		8210366	0					
ANR	8210944	ArgumentList	op -> calli == real_args		8210366	1					
ANR	8210945	Argument	op -> calli == real_args		8210366	0					
ANR	8210946	EqualityExpression	op -> calli == real_args		8210366	0		==			
ANR	8210947	PtrMemberAccess	op -> calli		8210366	0					
ANR	8210948	Identifier	op		8210366	0					
ANR	8210949	Identifier	calli		8210366	1					
ANR	8210950	Identifier	real_args		8210366	1					
ANR	8210951	ExpressionStatement	tcg_debug_assert ( pi <= ARRAY_SIZE ( op -> args ) )	297:4:5228:5272	8210366	39	True				
ANR	8210952	CallExpression	tcg_debug_assert ( pi <= ARRAY_SIZE ( op -> args ) )		8210366	0					
ANR	8210953	Callee	tcg_debug_assert		8210366	0					
ANR	8210954	Identifier	tcg_debug_assert		8210366	0					
ANR	8210955	ArgumentList	pi <= ARRAY_SIZE ( op -> args )		8210366	1					
ANR	8210956	Argument	pi <= ARRAY_SIZE ( op -> args )		8210366	0					
ANR	8210957	RelationalExpression	pi <= ARRAY_SIZE ( op -> args )		8210366	0		<=			
ANR	8210958	Identifier	pi		8210366	0					
ANR	8210959	CallExpression	ARRAY_SIZE ( op -> args )		8210366	1					
ANR	8210960	Callee	ARRAY_SIZE		8210366	0					
ANR	8210961	Identifier	ARRAY_SIZE		8210366	0					
ANR	8210962	ArgumentList	op -> args		8210366	1					
ANR	8210963	Argument	op -> args		8210366	0					
ANR	8210964	PtrMemberAccess	op -> args		8210366	0					
ANR	8210965	Identifier	op		8210366	0					
ANR	8210966	Identifier	args		8210366	1					
ANR	8210967	Statement	&&	303:4:5331:5332	8210366	40	True				
ANR	8210968	Statement	!	303:7:5334:5334	8210366	41	True				
ANR	8210969	Statement	defined	303:8:5335:5341	8210366	42	True				
ANR	8210970	Statement	(	303:15:5342:5342	8210366	43	True				
ANR	8210971	Statement	CONFIG_TCG_INTERPRETER	303:16:5343:5364	8210366	44	True				
ANR	8210972	Statement	)	303:38:5365:5365	8210366	45	True				
ANR	8210973	ForStatement	for ( i = real_args = 0 ; i < orig_nargs ; ++ i )		8210366	46					
ANR	8210974	ForInit	i = real_args = 0 ;	307:9:5431:5448	8210366	0	True				
ANR	8210975	AssignmentExpression	i = real_args = 0		8210366	0		=			
ANR	8210976	Identifier	i		8210366	0					
ANR	8210977	AssignmentExpression	real_args = 0		8210366	1		=			
ANR	8210978	Identifier	real_args		8210366	0					
ANR	8210979	PrimaryExpression	0		8210366	1					
ANR	8210980	Condition	i < orig_nargs	307:28:5450:5463	8210366	1	True				
ANR	8210981	RelationalExpression	i < orig_nargs		8210366	0		<			
ANR	8210982	Identifier	i		8210366	0					
ANR	8210983	Identifier	orig_nargs		8210366	1					
ANR	8210984	UnaryExpression	++ i	307:44:5466:5468	8210366	2	True				
ANR	8210985	IncDec	++		8210366	0					
ANR	8210986	Identifier	i		8210366	1					
ANR	8210987	CompoundStatement		307:8:5408:5453	8210366	3					
ANR	8210988	IdentifierDeclStatement	int is_64bit = orig_sizemask & ( 1 << ( i + 1 ) * 2 ) ;	309:8:5482:5527	8210366	0	True				
ANR	8210989	IdentifierDecl	is_64bit = orig_sizemask & ( 1 << ( i + 1 ) * 2 )		8210366	0					
ANR	8210990	IdentifierDeclType	int		8210366	0					
ANR	8210991	Identifier	is_64bit		8210366	1					
ANR	8210992	AssignmentExpression	is_64bit = orig_sizemask & ( 1 << ( i + 1 ) * 2 )		8210366	2		=			
ANR	8210993	Identifier	is_64bit		8210366	0					
ANR	8210994	BitAndExpression	orig_sizemask & ( 1 << ( i + 1 ) * 2 )		8210366	1		&			
ANR	8210995	Identifier	orig_sizemask		8210366	0					
ANR	8210996	ShiftExpression	1 << ( i + 1 ) * 2		8210366	1		<<			
ANR	8210997	PrimaryExpression	1		8210366	0					
ANR	8210998	MultiplicativeExpression	( i + 1 ) * 2		8210366	1		*			
ANR	8210999	AdditiveExpression	i + 1		8210366	0		+			
ANR	8211000	Identifier	i		8210366	0					
ANR	8211001	PrimaryExpression	1		8210366	1					
ANR	8211002	PrimaryExpression	2		8210366	1					
ANR	8211003	IfStatement	if ( is_64bit )		8210366	1					
ANR	8211004	Condition	is_64bit	311:12:5542:5549	8210366	0	True				
ANR	8211005	Identifier	is_64bit		8210366	0					
ANR	8211006	CompoundStatement		309:22:5478:5478	8210366	1					
ANR	8211007	ExpressionStatement	tcg_temp_free_internal ( args [ real_args ++ ] )	313:12:5567:5608	8210366	0	True				
ANR	8211008	CallExpression	tcg_temp_free_internal ( args [ real_args ++ ] )		8210366	0					
ANR	8211009	Callee	tcg_temp_free_internal		8210366	0					
ANR	8211010	Identifier	tcg_temp_free_internal		8210366	0					
ANR	8211011	ArgumentList	args [ real_args ++ ]		8210366	1					
ANR	8211012	Argument	args [ real_args ++ ]		8210366	0					
ANR	8211013	ArrayIndexing	args [ real_args ++ ]		8210366	0					
ANR	8211014	Identifier	args		8210366	0					
ANR	8211015	PostIncDecOperationExpression	real_args ++		8210366	1					
ANR	8211016	Identifier	real_args		8210366	0					
ANR	8211017	IncDec	++		8210366	1					
ANR	8211018	ExpressionStatement	tcg_temp_free_internal ( args [ real_args ++ ] )	315:12:5623:5664	8210366	1	True				
ANR	8211019	CallExpression	tcg_temp_free_internal ( args [ real_args ++ ] )		8210366	0					
ANR	8211020	Callee	tcg_temp_free_internal		8210366	0					
ANR	8211021	Identifier	tcg_temp_free_internal		8210366	0					
ANR	8211022	ArgumentList	args [ real_args ++ ]		8210366	1					
ANR	8211023	Argument	args [ real_args ++ ]		8210366	0					
ANR	8211024	ArrayIndexing	args [ real_args ++ ]		8210366	0					
ANR	8211025	Identifier	args		8210366	0					
ANR	8211026	PostIncDecOperationExpression	real_args ++		8210366	1					
ANR	8211027	Identifier	real_args		8210366	0					
ANR	8211028	IncDec	++		8210366	1					
ANR	8211029	ElseStatement	else		8210366	0					
ANR	8211030	CompoundStatement		315:15:5608:5608	8210366	0					
ANR	8211031	ExpressionStatement	real_args ++	319:12:5697:5708	8210366	0	True				
ANR	8211032	PostIncDecOperationExpression	real_args ++		8210366	0					
ANR	8211033	Identifier	real_args		8210366	0					
ANR	8211034	IncDec	++		8210366	1					
ANR	8211035	IfStatement	if ( orig_sizemask & 1 )		8210366	47					
ANR	8211036	Condition	orig_sizemask & 1	325:8:5737:5753	8210366	0	True				
ANR	8211037	BitAndExpression	orig_sizemask & 1		8210366	0		&			
ANR	8211038	Identifier	orig_sizemask		8210366	0					
ANR	8211039	PrimaryExpression	1		8210366	1					
ANR	8211040	CompoundStatement		323:27:5682:5682	8210366	1					
ANR	8211041	ExpressionStatement	"tcg_gen_concat32_i64 ( temp_tcgv_i64 ( ret ) , retl , reth )"	333:8:5991:6043	8210366	0	True				
ANR	8211042	CallExpression	"tcg_gen_concat32_i64 ( temp_tcgv_i64 ( ret ) , retl , reth )"		8210366	0					
ANR	8211043	Callee	tcg_gen_concat32_i64		8210366	0					
ANR	8211044	Identifier	tcg_gen_concat32_i64		8210366	0					
ANR	8211045	ArgumentList	temp_tcgv_i64 ( ret )		8210366	1					
ANR	8211046	Argument	temp_tcgv_i64 ( ret )		8210366	0					
ANR	8211047	CallExpression	temp_tcgv_i64 ( ret )		8210366	0					
ANR	8211048	Callee	temp_tcgv_i64		8210366	0					
ANR	8211049	Identifier	temp_tcgv_i64		8210366	0					
ANR	8211050	ArgumentList	ret		8210366	1					
ANR	8211051	Argument	ret		8210366	0					
ANR	8211052	Identifier	ret		8210366	0					
ANR	8211053	Argument	retl		8210366	1					
ANR	8211054	Identifier	retl		8210366	0					
ANR	8211055	Argument	reth		8210366	2					
ANR	8211056	Identifier	reth		8210366	0					
ANR	8211057	ExpressionStatement	tcg_temp_free_i64 ( retl )	335:8:6054:6077	8210366	1	True				
ANR	8211058	CallExpression	tcg_temp_free_i64 ( retl )		8210366	0					
ANR	8211059	Callee	tcg_temp_free_i64		8210366	0					
ANR	8211060	Identifier	tcg_temp_free_i64		8210366	0					
ANR	8211061	ArgumentList	retl		8210366	1					
ANR	8211062	Argument	retl		8210366	0					
ANR	8211063	Identifier	retl		8210366	0					
ANR	8211064	ExpressionStatement	tcg_temp_free_i64 ( reth )	337:8:6088:6111	8210366	2	True				
ANR	8211065	CallExpression	tcg_temp_free_i64 ( reth )		8210366	0					
ANR	8211066	Callee	tcg_temp_free_i64		8210366	0					
ANR	8211067	Identifier	tcg_temp_free_i64		8210366	0					
ANR	8211068	ArgumentList	reth		8210366	1					
ANR	8211069	Argument	reth		8210366	0					
ANR	8211070	Identifier	reth		8210366	0					
ANR	8211071	ReturnType	void		8210366	1					
ANR	8211072	Identifier	tcg_gen_callN		8210366	2					
ANR	8211073	ParameterList	"void * func , TCGTemp * ret , int nargs , TCGTemp * * args"		8210366	3					
ANR	8211074	Parameter	void * func	1:19:19:28	8210366	0	True				
ANR	8211075	ParameterType	void *		8210366	0					
ANR	8211076	Identifier	func		8210366	1					
ANR	8211077	Parameter	TCGTemp * ret	1:31:31:42	8210366	1	True				
ANR	8211078	ParameterType	TCGTemp *		8210366	0					
ANR	8211079	Identifier	ret		8210366	1					
ANR	8211080	Parameter	int nargs	1:45:45:53	8210366	2	True				
ANR	8211081	ParameterType	int		8210366	0					
ANR	8211082	Identifier	nargs		8210366	1					
ANR	8211083	Parameter	TCGTemp * * args	1:56:56:69	8210366	3	True				
ANR	8211084	ParameterType	TCGTemp * *		8210366	0					
ANR	8211085	Identifier	args		8210366	1					
ANR	8211086	CFGEntryNode	ENTRY		8210366		True				
ANR	8211087	CFGExitNode	EXIT		8210366		True				
ANR	8211088	Symbol	g_hash_table_lookup		8210366						
ANR	8211089	Symbol	* op		8210366						
ANR	8211090	Symbol	nb_rets		8210366						
ANR	8211091	Symbol	TCGOp		8210366						
ANR	8211092	Symbol	temp_tcgv_i64		8210366						
ANR	8211093	Symbol	s -> gen_next_op_idx		8210366						
ANR	8211094	Symbol	op -> args		8210366						
ANR	8211095	Symbol	* args		8210366						
ANR	8211096	Symbol	INDEX_op_call		8210366						
ANR	8211097	Symbol	op -> calli		8210366						
ANR	8211098	Symbol	info -> sizemask		8210366						
ANR	8211099	Symbol	orig_sizemask		8210366						
ANR	8211100	Symbol	real_args		8210366						
ANR	8211101	Symbol	info		8210366						
ANR	8211102	Symbol	ret		8210366						
ANR	8211103	Symbol	ARRAY_SIZE		8210366						
ANR	8211104	Symbol	NULL		8210366						
ANR	8211105	Symbol	s -> gen_op_buf [ 0 ] . prev		8210366						
ANR	8211106	Symbol	helper_table		8210366						
ANR	8211107	Symbol	op -> prev		8210366						
ANR	8211108	Symbol	tcg_temp_new_i64		8210366						
ANR	8211109	Symbol	s -> gen_op_buf		8210366						
ANR	8211110	Symbol	OPC_BUF_SIZE		8210366						
ANR	8211111	Symbol	* op -> args		8210366						
ANR	8211112	Symbol	flags		8210366						
ANR	8211113	Symbol	tcg_temp_new_i32		8210366						
ANR	8211114	Symbol	is_64bit		8210366						
ANR	8211115	Symbol	* * op		8210366						
ANR	8211116	Symbol	info -> flags		8210366						
ANR	8211117	Symbol	reth		8210366						
ANR	8211118	Symbol	split_args		8210366						
ANR	8211119	Symbol	TCG_CALL_DUMMY_ARG		8210366						
ANR	8211120	Symbol	* s -> gen_op_buf		8210366						
ANR	8211121	Symbol	* * s		8210366						
ANR	8211122	Symbol	tcg_ctx		8210366						
ANR	8211123	Symbol	offsetof		8210366						
ANR	8211124	Symbol	retl		8210366						
ANR	8211125	Symbol	temp_arg		8210366						
ANR	8211126	Symbol	op		8210366						
ANR	8211127	Symbol	h		8210366						
ANR	8211128	Symbol	i		8210366						
ANR	8211129	Symbol	* split_args		8210366						
ANR	8211130	Symbol	op -> opc		8210366						
ANR	8211131	Symbol	tcgv_i64_arg		8210366						
ANR	8211132	Symbol	orig_nargs		8210366						
ANR	8211133	Symbol	op -> next		8210366						
ANR	8211134	Symbol	TCG_TARGET_REG_BITS		8210366						
ANR	8211135	Symbol	sizemask		8210366						
ANR	8211136	Symbol	l		8210366						
ANR	8211137	Symbol	op -> callo		8210366						
ANR	8211138	Symbol	nargs		8210366						
ANR	8211139	Symbol	args		8210366						
ANR	8211140	Symbol	s		8210366						
ANR	8211141	Symbol	* i		8210366						
ANR	8211142	Symbol	func		8210366						
ANR	8211143	Symbol	orig		8210366						
ANR	8211144	Symbol	pi		8210366						
ANR	8211145	Symbol	* info		8210366						
ANR	8211146	Symbol	tcgv_i32_temp		8210366						
ANR	8211147	Symbol	* s		8210366						
