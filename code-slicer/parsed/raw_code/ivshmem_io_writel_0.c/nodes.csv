command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5046579	File	/home/p4ultr4n/workplace/ReVeal/raw_code/ivshmem_io_writel_0.c								
ANR	5046580	Function	ivshmem_io_writel	1:0:0:1457							
ANR	5046581	FunctionDef	"ivshmem_io_writel (void * opaque , target_phys_addr_t addr , uint32_t val)"		5046580	0					
ANR	5046582	CompoundStatement		5:0:145:1457	5046580	0					
ANR	5046583	IdentifierDeclStatement	IVShmemState * s = opaque ;	7:4:152:176	5046580	0	True				
ANR	5046584	IdentifierDecl	* s = opaque		5046580	0					
ANR	5046585	IdentifierDeclType	IVShmemState *		5046580	0					
ANR	5046586	Identifier	s		5046580	1					
ANR	5046587	AssignmentExpression	* s = opaque		5046580	2		=			
ANR	5046588	Identifier	opaque		5046580	0					
ANR	5046589	Identifier	opaque		5046580	1					
ANR	5046590	IdentifierDeclStatement	uint64_t write_one = 1 ;	11:4:185:207	5046580	1	True				
ANR	5046591	IdentifierDecl	write_one = 1		5046580	0					
ANR	5046592	IdentifierDeclType	uint64_t		5046580	0					
ANR	5046593	Identifier	write_one		5046580	1					
ANR	5046594	AssignmentExpression	write_one = 1		5046580	2		=			
ANR	5046595	Identifier	write_one		5046580	0					
ANR	5046596	PrimaryExpression	1		5046580	1					
ANR	5046597	IdentifierDeclStatement	uint16_t dest = val >> 16 ;	13:4:214:239	5046580	2	True				
ANR	5046598	IdentifierDecl	dest = val >> 16		5046580	0					
ANR	5046599	IdentifierDeclType	uint16_t		5046580	0					
ANR	5046600	Identifier	dest		5046580	1					
ANR	5046601	AssignmentExpression	dest = val >> 16		5046580	2		=			
ANR	5046602	Identifier	dest		5046580	0					
ANR	5046603	ShiftExpression	val >> 16		5046580	1		>>			
ANR	5046604	Identifier	val		5046580	0					
ANR	5046605	PrimaryExpression	16		5046580	1					
ANR	5046606	IdentifierDeclStatement	uint16_t vector = val & 0xff ;	15:4:246:274	5046580	3	True				
ANR	5046607	IdentifierDecl	vector = val & 0xff		5046580	0					
ANR	5046608	IdentifierDeclType	uint16_t		5046580	0					
ANR	5046609	Identifier	vector		5046580	1					
ANR	5046610	AssignmentExpression	vector = val & 0xff		5046580	2		=			
ANR	5046611	Identifier	vector		5046580	0					
ANR	5046612	BitAndExpression	val & 0xff		5046580	1		&			
ANR	5046613	Identifier	val		5046580	0					
ANR	5046614	PrimaryExpression	0xff		5046580	1					
ANR	5046615	ExpressionStatement	addr &= 0xfc	19:4:283:295	5046580	4	True				
ANR	5046616	AssignmentExpression	addr &= 0xfc		5046580	0		&=			
ANR	5046617	Identifier	addr		5046580	0					
ANR	5046618	PrimaryExpression	0xfc		5046580	1					
ANR	5046619	Statement	IVSHMEM_DPRINTF	23:4:304:318	5046580	5	True				
ANR	5046620	Statement	(	23:19:319:319	5046580	6	True				
ANR	5046621	Statement	"""writing to addr """	23:20:320:337	5046580	7	True				
ANR	5046622	Statement	TARGET_FMT_plx	23:39:339:352	5046580	8	True				
ANR	5046623	Statement	"""\\n"""	23:54:354:357	5046580	9	True				
ANR	5046624	Statement	","	23:58:358:358	5046580	10	True				
ANR	5046625	Statement	addr	23:60:360:363	5046580	11	True				
ANR	5046626	Statement	)	23:64:364:364	5046580	12	True				
ANR	5046627	ExpressionStatement		23:65:365:365	5046580	13	True				
ANR	5046628	SwitchStatement	switch ( addr )		5046580	14					
ANR	5046629	Condition	addr	25:12:380:383	5046580	0	True				
ANR	5046630	Identifier	addr		5046580	0					
ANR	5046631	CompoundStatement		23:4:245:245	5046580	1					
ANR	5046632	Label	case INTRMASK :	29:8:402:415	5046580	0	True				
ANR	5046633	Identifier	INTRMASK		5046580	0					
ANR	5046634	ExpressionStatement	"ivshmem_IntrMask_write ( s , val )"	31:12:430:460	5046580	1	True				
ANR	5046635	CallExpression	"ivshmem_IntrMask_write ( s , val )"		5046580	0					
ANR	5046636	Callee	ivshmem_IntrMask_write		5046580	0					
ANR	5046637	Identifier	ivshmem_IntrMask_write		5046580	0					
ANR	5046638	ArgumentList	s		5046580	1					
ANR	5046639	Argument	s		5046580	0					
ANR	5046640	Identifier	s		5046580	0					
ANR	5046641	Argument	val		5046580	1					
ANR	5046642	Identifier	val		5046580	0					
ANR	5046643	BreakStatement	break ;	33:12:475:480	5046580	2	True				
ANR	5046644	Label	case INTRSTATUS :	37:8:493:508	5046580	3	True				
ANR	5046645	Identifier	INTRSTATUS		5046580	0					
ANR	5046646	ExpressionStatement	"ivshmem_IntrStatus_write ( s , val )"	39:12:523:555	5046580	4	True				
ANR	5046647	CallExpression	"ivshmem_IntrStatus_write ( s , val )"		5046580	0					
ANR	5046648	Callee	ivshmem_IntrStatus_write		5046580	0					
ANR	5046649	Identifier	ivshmem_IntrStatus_write		5046580	0					
ANR	5046650	ArgumentList	s		5046580	1					
ANR	5046651	Argument	s		5046580	0					
ANR	5046652	Identifier	s		5046580	0					
ANR	5046653	Argument	val		5046580	1					
ANR	5046654	Identifier	val		5046580	0					
ANR	5046655	BreakStatement	break ;	41:12:570:575	5046580	5	True				
ANR	5046656	Label	case DOORBELL :	45:8:588:601	5046580	6	True				
ANR	5046657	Identifier	DOORBELL		5046580	0					
ANR	5046658	IfStatement	if ( ( dest < 0 ) || ( dest > s -> max_peer ) )		5046580	7					
ANR	5046659	Condition	( dest < 0 ) || ( dest > s -> max_peer )	49:16:675:708	5046580	0	True				
ANR	5046660	OrExpression	( dest < 0 ) || ( dest > s -> max_peer )		5046580	0		||			
ANR	5046661	RelationalExpression	dest < 0		5046580	0		<			
ANR	5046662	Identifier	dest		5046580	0					
ANR	5046663	PrimaryExpression	0		5046580	1					
ANR	5046664	RelationalExpression	dest > s -> max_peer		5046580	1		>			
ANR	5046665	Identifier	dest		5046580	0					
ANR	5046666	PtrMemberAccess	s -> max_peer		5046580	1					
ANR	5046667	Identifier	s		5046580	0					
ANR	5046668	Identifier	max_peer		5046580	1					
ANR	5046669	CompoundStatement		45:52:565:565	5046580	1					
ANR	5046670	ExpressionStatement	"IVSHMEM_DPRINTF ( ""Invalid destination VM ID (%d)\\n"" , dest )"	51:16:730:787	5046580	0	True				
ANR	5046671	CallExpression	"IVSHMEM_DPRINTF ( ""Invalid destination VM ID (%d)\\n"" , dest )"		5046580	0					
ANR	5046672	Callee	IVSHMEM_DPRINTF		5046580	0					
ANR	5046673	Identifier	IVSHMEM_DPRINTF		5046580	0					
ANR	5046674	ArgumentList	"""Invalid destination VM ID (%d)\\n"""		5046580	1					
ANR	5046675	Argument	"""Invalid destination VM ID (%d)\\n"""		5046580	0					
ANR	5046676	PrimaryExpression	"""Invalid destination VM ID (%d)\\n"""		5046580	0					
ANR	5046677	Argument	dest		5046580	1					
ANR	5046678	Identifier	dest		5046580	0					
ANR	5046679	BreakStatement	break ;	53:16:806:811	5046580	1	True				
ANR	5046680	IfStatement	if ( ( vector >= 0 ) && ( vector < s -> peers [ dest ] . nb_eventfds ) )		5046580	8					
ANR	5046681	Condition	( vector >= 0 ) && ( vector < s -> peers [ dest ] . nb_eventfds )	61:16:887:940	5046580	0	True				
ANR	5046682	AndExpression	( vector >= 0 ) && ( vector < s -> peers [ dest ] . nb_eventfds )		5046580	0		&&			
ANR	5046683	RelationalExpression	vector >= 0		5046580	0		>=			
ANR	5046684	Identifier	vector		5046580	0					
ANR	5046685	PrimaryExpression	0		5046580	1					
ANR	5046686	RelationalExpression	vector < s -> peers [ dest ] . nb_eventfds		5046580	1		<			
ANR	5046687	Identifier	vector		5046580	0					
ANR	5046688	MemberAccess	s -> peers [ dest ] . nb_eventfds		5046580	1					
ANR	5046689	ArrayIndexing	s -> peers [ dest ]		5046580	0					
ANR	5046690	PtrMemberAccess	s -> peers		5046580	0					
ANR	5046691	Identifier	s		5046580	0					
ANR	5046692	Identifier	peers		5046580	1					
ANR	5046693	Identifier	dest		5046580	1					
ANR	5046694	Identifier	nb_eventfds		5046580	1					
ANR	5046695	CompoundStatement		57:72:797:797	5046580	1					
ANR	5046696	Statement	IVSHMEM_DPRINTF	63:16:962:976	5046580	0	True				
ANR	5046697	Statement	(	63:31:977:977	5046580	1	True				
ANR	5046698	Statement	"""Writing %"""	63:32:978:988	5046580	2	True				
ANR	5046699	Statement	PRId64	63:44:990:995	5046580	3	True				
ANR	5046700	Statement	""" to VM %d on vector %d\\n"""	63:51:997:1022	5046580	4	True				
ANR	5046701	Statement	","	63:77:1023:1023	5046580	5	True				
ANR	5046702	Statement	write_one	65:52:1078:1086	5046580	6	True				
ANR	5046703	Statement	","	65:61:1087:1087	5046580	7	True				
ANR	5046704	Statement	dest	65:63:1089:1092	5046580	8	True				
ANR	5046705	Statement	","	65:67:1093:1093	5046580	9	True				
ANR	5046706	Statement	vector	65:69:1095:1100	5046580	10	True				
ANR	5046707	Statement	)	65:75:1101:1101	5046580	11	True				
ANR	5046708	ExpressionStatement		65:76:1102:1102	5046580	12	True				
ANR	5046709	IfStatement	"if ( write ( s -> peers [ dest ] . eventfds [ vector ] , & ( write_one ) , 8 ) != 8 )"		5046580	13					
ANR	5046710	Condition	"write ( s -> peers [ dest ] . eventfds [ vector ] , & ( write_one ) , 8 ) != 8"	67:20:1125:1237	5046580	0	True				
ANR	5046711	EqualityExpression	"write ( s -> peers [ dest ] . eventfds [ vector ] , & ( write_one ) , 8 ) != 8"		5046580	0		!=			
ANR	5046712	CallExpression	"write ( s -> peers [ dest ] . eventfds [ vector ] , & ( write_one ) , 8 )"		5046580	0					
ANR	5046713	Callee	write		5046580	0					
ANR	5046714	Identifier	write		5046580	0					
ANR	5046715	ArgumentList	s -> peers [ dest ] . eventfds [ vector ]		5046580	1					
ANR	5046716	Argument	s -> peers [ dest ] . eventfds [ vector ]		5046580	0					
ANR	5046717	ArrayIndexing	s -> peers [ dest ] . eventfds [ vector ]		5046580	0					
ANR	5046718	MemberAccess	s -> peers [ dest ] . eventfds		5046580	0					
ANR	5046719	ArrayIndexing	s -> peers [ dest ]		5046580	0					
ANR	5046720	PtrMemberAccess	s -> peers		5046580	0					
ANR	5046721	Identifier	s		5046580	0					
ANR	5046722	Identifier	peers		5046580	1					
ANR	5046723	Identifier	dest		5046580	1					
ANR	5046724	Identifier	eventfds		5046580	1					
ANR	5046725	Identifier	vector		5046580	1					
ANR	5046726	Argument	& ( write_one )		5046580	1					
ANR	5046727	UnaryOperationExpression	& ( write_one )		5046580	0					
ANR	5046728	UnaryOperator	&		5046580	0					
ANR	5046729	Identifier	write_one		5046580	1					
ANR	5046730	Argument	8		5046580	2					
ANR	5046731	PrimaryExpression	8		5046580	0					
ANR	5046732	PrimaryExpression	8		5046580	1					
ANR	5046733	CompoundStatement		65:75:1094:1094	5046580	1					
ANR	5046734	ExpressionStatement	"IVSHMEM_DPRINTF ( ""error writing to eventfd\\n"" )"	71:20:1263:1308	5046580	0	True				
ANR	5046735	CallExpression	"IVSHMEM_DPRINTF ( ""error writing to eventfd\\n"" )"		5046580	0					
ANR	5046736	Callee	IVSHMEM_DPRINTF		5046580	0					
ANR	5046737	Identifier	IVSHMEM_DPRINTF		5046580	0					
ANR	5046738	ArgumentList	"""error writing to eventfd\\n"""		5046580	1					
ANR	5046739	Argument	"""error writing to eventfd\\n"""		5046580	0					
ANR	5046740	PrimaryExpression	"""error writing to eventfd\\n"""		5046580	0					
ANR	5046741	BreakStatement	break ;	77:12:1357:1362	5046580	9	True				
ANR	5046742	Label	default :	79:8:1373:1380	5046580	10	True				
ANR	5046743	Identifier	default		5046580	0					
ANR	5046744	ExpressionStatement	"IVSHMEM_DPRINTF ( ""Invalid VM Doorbell VM %d\\n"" , dest )"	81:12:1395:1447	5046580	11	True				
ANR	5046745	CallExpression	"IVSHMEM_DPRINTF ( ""Invalid VM Doorbell VM %d\\n"" , dest )"		5046580	0					
ANR	5046746	Callee	IVSHMEM_DPRINTF		5046580	0					
ANR	5046747	Identifier	IVSHMEM_DPRINTF		5046580	0					
ANR	5046748	ArgumentList	"""Invalid VM Doorbell VM %d\\n"""		5046580	1					
ANR	5046749	Argument	"""Invalid VM Doorbell VM %d\\n"""		5046580	0					
ANR	5046750	PrimaryExpression	"""Invalid VM Doorbell VM %d\\n"""		5046580	0					
ANR	5046751	Argument	dest		5046580	1					
ANR	5046752	Identifier	dest		5046580	0					
ANR	5046753	ReturnType	static void		5046580	1					
ANR	5046754	Identifier	ivshmem_io_writel		5046580	2					
ANR	5046755	ParameterList	"void * opaque , target_phys_addr_t addr , uint32_t val"		5046580	3					
ANR	5046756	Parameter	void * opaque	1:30:30:41	5046580	0	True				
ANR	5046757	ParameterType	void *		5046580	0					
ANR	5046758	Identifier	opaque		5046580	1					
ANR	5046759	Parameter	target_phys_addr_t addr	1:44:44:66	5046580	1	True				
ANR	5046760	ParameterType	target_phys_addr_t		5046580	0					
ANR	5046761	Identifier	addr		5046580	1					
ANR	5046762	Parameter	uint32_t val	3:60:130:141	5046580	2	True				
ANR	5046763	ParameterType	uint32_t		5046580	0					
ANR	5046764	Identifier	val		5046580	1					
ANR	5046765	CFGEntryNode	ENTRY		5046580		True				
ANR	5046766	CFGExitNode	EXIT		5046580		True				
ANR	5046767	Symbol	val		5046580						
ANR	5046768	Symbol	opaque		5046580						
ANR	5046769	Symbol	* dest		5046580						
ANR	5046770	Symbol	s -> peers [ dest ] . eventfds		5046580						
ANR	5046771	Symbol	* vector		5046580						
ANR	5046772	Symbol	dest		5046580						
ANR	5046773	Symbol	* * s -> peers		5046580						
ANR	5046774	Symbol	* s -> peers [ dest ] . eventfds		5046580						
ANR	5046775	Symbol	* * * s		5046580						
ANR	5046776	Symbol	s		5046580						
ANR	5046777	Symbol	s -> max_peer		5046580						
ANR	5046778	Symbol	write_one		5046580						
ANR	5046779	Symbol	s -> peers [ dest ] . nb_eventfds		5046580						
ANR	5046780	Symbol	* s -> peers		5046580						
ANR	5046781	Symbol	* * s		5046580						
ANR	5046782	Symbol	s -> peers		5046580						
ANR	5046783	Symbol	* * dest		5046580						
ANR	5046784	Symbol	vector		5046580						
ANR	5046785	Symbol	addr		5046580						
ANR	5046786	Symbol	* s		5046580						
ANR	5046787	Symbol	write		5046580						
ANR	5046788	Symbol	& write_one		5046580						
