command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3268532	File	/home/p4ultr4n/workplace/ReVeal/raw_code/ff_eval_coefs_1.c								
ANR	3268533	Function	ff_eval_coefs	1:0:0:406							
ANR	3268534	FunctionDef	"ff_eval_coefs (int * coefs , const int * refl)"		3268533	0					
ANR	3268535	CompoundStatement		3:0:49:406	3268533	0					
ANR	3268536	IdentifierDeclStatement	int buffer [ LPC_ORDER ] ;	5:4:56:77	3268533	0	True				
ANR	3268537	IdentifierDecl	buffer [ LPC_ORDER ]		3268533	0					
ANR	3268538	IdentifierDeclType	int [ LPC_ORDER ]		3268533	0					
ANR	3268539	Identifier	buffer		3268533	1					
ANR	3268540	Identifier	LPC_ORDER		3268533	2					
ANR	3268541	IdentifierDeclStatement	int * b1 = buffer ;	7:4:84:100	3268533	1	True				
ANR	3268542	IdentifierDecl	* b1 = buffer		3268533	0					
ANR	3268543	IdentifierDeclType	int *		3268533	0					
ANR	3268544	Identifier	b1		3268533	1					
ANR	3268545	AssignmentExpression	* b1 = buffer		3268533	2		=			
ANR	3268546	Identifier	buffer		3268533	0					
ANR	3268547	Identifier	buffer		3268533	1					
ANR	3268548	IdentifierDeclStatement	int * b2 = coefs ;	9:4:107:122	3268533	2	True				
ANR	3268549	IdentifierDecl	* b2 = coefs		3268533	0					
ANR	3268550	IdentifierDeclType	int *		3268533	0					
ANR	3268551	Identifier	b2		3268533	1					
ANR	3268552	AssignmentExpression	* b2 = coefs		3268533	2		=			
ANR	3268553	Identifier	coefs		3268533	0					
ANR	3268554	Identifier	coefs		3268533	1					
ANR	3268555	IdentifierDeclStatement	"int i , j ;"	11:4:129:137	3268533	3	True				
ANR	3268556	IdentifierDecl	i		3268533	0					
ANR	3268557	IdentifierDeclType	int		3268533	0					
ANR	3268558	Identifier	i		3268533	1					
ANR	3268559	IdentifierDecl	j		3268533	1					
ANR	3268560	IdentifierDeclType	int		3268533	0					
ANR	3268561	Identifier	j		3268533	1					
ANR	3268562	ForStatement	for ( i = 0 ; i < LPC_ORDER ; i ++ )		3268533	4					
ANR	3268563	ForInit	i = 0 ;	15:9:151:154	3268533	0	True				
ANR	3268564	AssignmentExpression	i = 0		3268533	0		=			
ANR	3268565	Identifier	i		3268533	0					
ANR	3268566	PrimaryExpression	0		3268533	1					
ANR	3268567	Condition	i < LPC_ORDER	15:14:156:168	3268533	1	True				
ANR	3268568	RelationalExpression	i < LPC_ORDER		3268533	0		<			
ANR	3268569	Identifier	i		3268533	0					
ANR	3268570	Identifier	LPC_ORDER		3268533	1					
ANR	3268571	PostIncDecOperationExpression	i ++	15:29:171:173	3268533	2	True				
ANR	3268572	Identifier	i		3268533	0					
ANR	3268573	IncDec	++		3268533	1					
ANR	3268574	CompoundStatement		13:34:126:126	3268533	3					
ANR	3268575	ExpressionStatement	b1 [ i ] = refl [ i ] * 16	17:8:187:207	3268533	0	True				
ANR	3268576	AssignmentExpression	b1 [ i ] = refl [ i ] * 16		3268533	0		=			
ANR	3268577	ArrayIndexing	b1 [ i ]		3268533	0					
ANR	3268578	Identifier	b1		3268533	0					
ANR	3268579	Identifier	i		3268533	1					
ANR	3268580	MultiplicativeExpression	refl [ i ] * 16		3268533	1		*			
ANR	3268581	ArrayIndexing	refl [ i ]		3268533	0					
ANR	3268582	Identifier	refl		3268533	0					
ANR	3268583	Identifier	i		3268533	1					
ANR	3268584	PrimaryExpression	16		3268533	1					
ANR	3268585	ForStatement	for ( j = 0 ; j < i ; j ++ )		3268533	1					
ANR	3268586	ForInit	j = 0 ;	21:13:225:228	3268533	0	True				
ANR	3268587	AssignmentExpression	j = 0		3268533	0		=			
ANR	3268588	Identifier	j		3268533	0					
ANR	3268589	PrimaryExpression	0		3268533	1					
ANR	3268590	Condition	j < i	21:18:230:234	3268533	1	True				
ANR	3268591	RelationalExpression	j < i		3268533	0		<			
ANR	3268592	Identifier	j		3268533	0					
ANR	3268593	Identifier	i		3268533	1					
ANR	3268594	PostIncDecOperationExpression	j ++	21:25:237:239	3268533	2	True				
ANR	3268595	Identifier	j		3268533	0					
ANR	3268596	IncDec	++		3268533	1					
ANR	3268597	ExpressionStatement	b1 [ j ] = ( ( refl [ i ] * b2 [ i - j - 1 ] ) >> 12 ) + b2 [ j ]	23:12:255:300	3268533	3	True				
ANR	3268598	AssignmentExpression	b1 [ j ] = ( ( refl [ i ] * b2 [ i - j - 1 ] ) >> 12 ) + b2 [ j ]		3268533	0		=			
ANR	3268599	ArrayIndexing	b1 [ j ]		3268533	0					
ANR	3268600	Identifier	b1		3268533	0					
ANR	3268601	Identifier	j		3268533	1					
ANR	3268602	AdditiveExpression	( ( refl [ i ] * b2 [ i - j - 1 ] ) >> 12 ) + b2 [ j ]		3268533	1		+			
ANR	3268603	ShiftExpression	( refl [ i ] * b2 [ i - j - 1 ] ) >> 12		3268533	0		>>			
ANR	3268604	MultiplicativeExpression	refl [ i ] * b2 [ i - j - 1 ]		3268533	0		*			
ANR	3268605	ArrayIndexing	refl [ i ]		3268533	0					
ANR	3268606	Identifier	refl		3268533	0					
ANR	3268607	Identifier	i		3268533	1					
ANR	3268608	ArrayIndexing	b2 [ i - j - 1 ]		3268533	1					
ANR	3268609	Identifier	b2		3268533	0					
ANR	3268610	AdditiveExpression	i - j - 1		3268533	1		-			
ANR	3268611	Identifier	i		3268533	0					
ANR	3268612	AdditiveExpression	j - 1		3268533	1		-			
ANR	3268613	Identifier	j		3268533	0					
ANR	3268614	PrimaryExpression	1		3268533	1					
ANR	3268615	PrimaryExpression	12		3268533	1					
ANR	3268616	ArrayIndexing	b2 [ j ]		3268533	1					
ANR	3268617	Identifier	b2		3268533	0					
ANR	3268618	Identifier	j		3268533	1					
ANR	3268619	Statement	FFSWAP	27:8:313:318	3268533	2	True				
ANR	3268620	Statement	(	27:14:319:319	3268533	3	True				
ANR	3268621	Statement	int	27:15:320:322	3268533	4	True				
ANR	3268622	Statement	*	27:19:324:324	3268533	5	True				
ANR	3268623	Statement	","	27:20:325:325	3268533	6	True				
ANR	3268624	Statement	b1	27:22:327:328	3268533	7	True				
ANR	3268625	Statement	","	27:24:329:329	3268533	8	True				
ANR	3268626	Statement	b2	27:26:331:332	3268533	9	True				
ANR	3268627	Statement	)	27:28:333:333	3268533	10	True				
ANR	3268628	ExpressionStatement		27:29:334:334	3268533	11	True				
ANR	3268629	ForStatement	for ( i = 0 ; i < LPC_ORDER ; i ++ )		3268533	5					
ANR	3268630	ForInit	i = 0 ;	33:9:355:358	3268533	0	True				
ANR	3268631	AssignmentExpression	i = 0		3268533	0		=			
ANR	3268632	Identifier	i		3268533	0					
ANR	3268633	PrimaryExpression	0		3268533	1					
ANR	3268634	Condition	i < LPC_ORDER	33:14:360:372	3268533	1	True				
ANR	3268635	RelationalExpression	i < LPC_ORDER		3268533	0		<			
ANR	3268636	Identifier	i		3268533	0					
ANR	3268637	Identifier	LPC_ORDER		3268533	1					
ANR	3268638	PostIncDecOperationExpression	i ++	33:29:375:377	3268533	2	True				
ANR	3268639	Identifier	i		3268533	0					
ANR	3268640	IncDec	++		3268533	1					
ANR	3268641	ExpressionStatement	coefs [ i ] >>= 4	35:8:389:403	3268533	3	True				
ANR	3268642	AssignmentExpression	coefs [ i ] >>= 4		3268533	0		>>=			
ANR	3268643	ArrayIndexing	coefs [ i ]		3268533	0					
ANR	3268644	Identifier	coefs		3268533	0					
ANR	3268645	Identifier	i		3268533	1					
ANR	3268646	PrimaryExpression	4		3268533	1					
ANR	3268647	ReturnType	void		3268533	1					
ANR	3268648	Identifier	ff_eval_coefs		3268533	2					
ANR	3268649	ParameterList	"int * coefs , const int * refl"		3268533	3					
ANR	3268650	Parameter	int * coefs	1:19:19:28	3268533	0	True				
ANR	3268651	ParameterType	int *		3268533	0					
ANR	3268652	Identifier	coefs		3268533	1					
ANR	3268653	Parameter	const int * refl	1:31:31:45	3268533	1	True				
ANR	3268654	ParameterType	const int *		3268533	0					
ANR	3268655	Identifier	refl		3268533	1					
ANR	3268656	CFGEntryNode	ENTRY		3268533		True				
ANR	3268657	CFGExitNode	EXIT		3268533		True				
ANR	3268658	Symbol	coefs		3268533						
ANR	3268659	Symbol	LPC_ORDER		3268533						
ANR	3268660	Symbol	i		3268533						
ANR	3268661	Symbol	j		3268533						
ANR	3268662	Symbol	refl		3268533						
ANR	3268663	Symbol	* refl		3268533						
ANR	3268664	Symbol	b1		3268533						
ANR	3268665	Symbol	b2		3268533						
ANR	3268666	Symbol	* i		3268533						
ANR	3268667	Symbol	* j		3268533						
ANR	3268668	Symbol	* b2		3268533						
ANR	3268669	Symbol	* b1		3268533						
ANR	3268670	Symbol	* coefs		3268533						
ANR	3268671	Symbol	buffer		3268533						
