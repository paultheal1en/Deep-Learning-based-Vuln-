command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	856819	File	/home/p4ultr4n/workplace/ReVeal/raw_code/avfilter_graph_queue_command_1.c								
ANR	856820	Function	avfilter_graph_queue_command	1:0:0:963							
ANR	856821	FunctionDef	"avfilter_graph_queue_command (AVFilterGraph * graph , const char * target , const char * command , const char * arg , int flags , double ts)"		856820	0					
ANR	856822	CompoundStatement		2:0:135:963	856820	0					
ANR	856823	IdentifierDeclStatement	int i ;	3:4:141:146	856820	0	True				
ANR	856824	IdentifierDecl	i		856820	0					
ANR	856825	IdentifierDeclType	int		856820	0					
ANR	856826	Identifier	i		856820	1					
ANR	856827	IfStatement	if ( ! graph )		856820	1					
ANR	856828	Condition	! graph	4:7:155:160	856820	0	True				
ANR	856829	UnaryOperationExpression	! graph		856820	0					
ANR	856830	UnaryOperator	!		856820	0					
ANR	856831	Identifier	graph		856820	1					
ANR	856832	ReturnStatement	return 0 ;	5:8:171:179	856820	1	True				
ANR	856833	PrimaryExpression	0		856820	0					
ANR	856834	ForStatement	for ( i = 0 ; i < graph -> nb_filters ; i ++ )		856820	2					
ANR	856835	ForInit	i = 0 ;	6:9:190:195	856820	0	True				
ANR	856836	AssignmentExpression	i = 0		856820	0		=			
ANR	856837	Identifier	i		856820	0					
ANR	856838	PrimaryExpression	0		856820	1					
ANR	856839	Condition	i < graph -> nb_filters	6:16:197:217	856820	1	True				
ANR	856840	RelationalExpression	i < graph -> nb_filters		856820	0		<			
ANR	856841	Identifier	i		856820	0					
ANR	856842	PtrMemberAccess	graph -> nb_filters		856820	1					
ANR	856843	Identifier	graph		856820	0					
ANR	856844	Identifier	nb_filters		856820	1					
ANR	856845	PostIncDecOperationExpression	i ++	6:39:220:222	856820	2	True				
ANR	856846	Identifier	i		856820	0					
ANR	856847	IncDec	++		856820	1					
ANR	856848	CompoundStatement		6:8:99:142	856820	3					
ANR	856849	IdentifierDeclStatement	AVFilterContext * filter = graph -> filters [ i ] ;	7:8:235:278	856820	0	True				
ANR	856850	IdentifierDecl	* filter = graph -> filters [ i ]		856820	0					
ANR	856851	IdentifierDeclType	AVFilterContext *		856820	0					
ANR	856852	Identifier	filter		856820	1					
ANR	856853	AssignmentExpression	* filter = graph -> filters [ i ]		856820	2		=			
ANR	856854	Identifier	filter		856820	0					
ANR	856855	ArrayIndexing	graph -> filters [ i ]		856820	1					
ANR	856856	PtrMemberAccess	graph -> filters		856820	0					
ANR	856857	Identifier	graph		856820	0					
ANR	856858	Identifier	filters		856820	1					
ANR	856859	Identifier	i		856820	1					
ANR	856860	IfStatement	"if ( filter && ( ! strcmp ( target , ""all"" ) || ! strcmp ( target , filter -> name ) || ! strcmp ( target , filter -> filter -> name ) ) )"		856820	1					
ANR	856861	Condition	"filter && ( ! strcmp ( target , ""all"" ) || ! strcmp ( target , filter -> name ) || ! strcmp ( target , filter -> filter -> name ) )"	8:11:291:398	856820	0	True				
ANR	856862	AndExpression	"filter && ( ! strcmp ( target , ""all"" ) || ! strcmp ( target , filter -> name ) || ! strcmp ( target , filter -> filter -> name ) )"		856820	0		&&			
ANR	856863	Identifier	filter		856820	0					
ANR	856864	OrExpression	"! strcmp ( target , ""all"" ) || ! strcmp ( target , filter -> name ) || ! strcmp ( target , filter -> filter -> name )"		856820	1		||			
ANR	856865	UnaryOperationExpression	"! strcmp ( target , ""all"" )"		856820	0					
ANR	856866	UnaryOperator	!		856820	0					
ANR	856867	CallExpression	"strcmp ( target , ""all"" )"		856820	1					
ANR	856868	Callee	strcmp		856820	0					
ANR	856869	Identifier	strcmp		856820	0					
ANR	856870	ArgumentList	target		856820	1					
ANR	856871	Argument	target		856820	0					
ANR	856872	Identifier	target		856820	0					
ANR	856873	Argument	"""all"""		856820	1					
ANR	856874	PrimaryExpression	"""all"""		856820	0					
ANR	856875	OrExpression	"! strcmp ( target , filter -> name ) || ! strcmp ( target , filter -> filter -> name )"		856820	1		||			
ANR	856876	UnaryOperationExpression	"! strcmp ( target , filter -> name )"		856820	0					
ANR	856877	UnaryOperator	!		856820	0					
ANR	856878	CallExpression	"strcmp ( target , filter -> name )"		856820	1					
ANR	856879	Callee	strcmp		856820	0					
ANR	856880	Identifier	strcmp		856820	0					
ANR	856881	ArgumentList	target		856820	1					
ANR	856882	Argument	target		856820	0					
ANR	856883	Identifier	target		856820	0					
ANR	856884	Argument	filter -> name		856820	1					
ANR	856885	PtrMemberAccess	filter -> name		856820	0					
ANR	856886	Identifier	filter		856820	0					
ANR	856887	Identifier	name		856820	1					
ANR	856888	UnaryOperationExpression	"! strcmp ( target , filter -> filter -> name )"		856820	1					
ANR	856889	UnaryOperator	!		856820	0					
ANR	856890	CallExpression	"strcmp ( target , filter -> filter -> name )"		856820	1					
ANR	856891	Callee	strcmp		856820	0					
ANR	856892	Identifier	strcmp		856820	0					
ANR	856893	ArgumentList	target		856820	1					
ANR	856894	Argument	target		856820	0					
ANR	856895	Identifier	target		856820	0					
ANR	856896	Argument	filter -> filter -> name		856820	1					
ANR	856897	PtrMemberAccess	filter -> filter -> name		856820	0					
ANR	856898	PtrMemberAccess	filter -> filter		856820	0					
ANR	856899	Identifier	filter		856820	0					
ANR	856900	Identifier	filter		856820	1					
ANR	856901	Identifier	name		856820	1					
ANR	856902	CompoundStatement		8:12:278:333	856820	1					
ANR	856903	IdentifierDeclStatement	"AVFilterCommand * * queue = & filter -> command_queue , * next ;"	9:12:414:469	856820	0	True				
ANR	856904	IdentifierDecl	* * queue = & filter -> command_queue		856820	0					
ANR	856905	IdentifierDeclType	AVFilterCommand * *		856820	0					
ANR	856906	Identifier	queue		856820	1					
ANR	856907	AssignmentExpression	* * queue = & filter -> command_queue		856820	2		=			
ANR	856908	Identifier	queue		856820	0					
ANR	856909	UnaryOperationExpression	& filter -> command_queue		856820	1					
ANR	856910	UnaryOperator	&		856820	0					
ANR	856911	PtrMemberAccess	filter -> command_queue		856820	1					
ANR	856912	Identifier	filter		856820	0					
ANR	856913	Identifier	command_queue		856820	1					
ANR	856914	IdentifierDecl	* next		856820	1					
ANR	856915	IdentifierDeclType	AVFilterCommand *		856820	0					
ANR	856916	Identifier	next		856820	1					
ANR	856917	WhileStatement	while ( * queue && ( * queue ) -> time <= ts )		856820	1					
ANR	856918	Condition	* queue && ( * queue ) -> time <= ts	10:19:490:519	856820	0	True				
ANR	856919	AndExpression	* queue && ( * queue ) -> time <= ts		856820	0		&&			
ANR	856920	UnaryOperationExpression	* queue		856820	0					
ANR	856921	UnaryOperator	*		856820	0					
ANR	856922	Identifier	queue		856820	1					
ANR	856923	RelationalExpression	( * queue ) -> time <= ts		856820	1		<=			
ANR	856924	PtrMemberAccess	( * queue ) -> time		856820	0					
ANR	856925	UnaryOperationExpression	* queue		856820	0					
ANR	856926	UnaryOperator	*		856820	0					
ANR	856927	Identifier	queue		856820	1					
ANR	856928	Identifier	time		856820	1					
ANR	856929	Identifier	ts		856820	1					
ANR	856930	ExpressionStatement	queue = & ( * queue ) -> next	11:16:538:561	856820	1	True				
ANR	856931	AssignmentExpression	queue = & ( * queue ) -> next		856820	0		=			
ANR	856932	Identifier	queue		856820	0					
ANR	856933	UnaryOperationExpression	& ( * queue ) -> next		856820	1					
ANR	856934	UnaryOperator	&		856820	0					
ANR	856935	PtrMemberAccess	( * queue ) -> next		856820	1					
ANR	856936	UnaryOperationExpression	* queue		856820	0					
ANR	856937	UnaryOperator	*		856820	0					
ANR	856938	Identifier	queue		856820	1					
ANR	856939	Identifier	next		856820	1					
ANR	856940	ExpressionStatement	next = * queue	12:12:575:588	856820	2	True				
ANR	856941	AssignmentExpression	next = * queue		856820	0		=			
ANR	856942	Identifier	next		856820	0					
ANR	856943	UnaryOperationExpression	* queue		856820	1					
ANR	856944	UnaryOperator	*		856820	0					
ANR	856945	Identifier	queue		856820	1					
ANR	856946	ExpressionStatement	* queue = av_mallocz ( sizeof ( AVFilterCommand ) )	13:12:602:646	856820	3	True				
ANR	856947	AssignmentExpression	* queue = av_mallocz ( sizeof ( AVFilterCommand ) )		856820	0		=			
ANR	856948	UnaryOperationExpression	* queue		856820	0					
ANR	856949	UnaryOperator	*		856820	0					
ANR	856950	Identifier	queue		856820	1					
ANR	856951	CallExpression	av_mallocz ( sizeof ( AVFilterCommand ) )		856820	1					
ANR	856952	Callee	av_mallocz		856820	0					
ANR	856953	Identifier	av_mallocz		856820	0					
ANR	856954	ArgumentList	sizeof ( AVFilterCommand )		856820	1					
ANR	856955	Argument	sizeof ( AVFilterCommand )		856820	0					
ANR	856956	SizeofExpression	sizeof ( AVFilterCommand )		856820	0					
ANR	856957	Sizeof	sizeof		856820	0					
ANR	856958	SizeofOperand	AVFilterCommand		856820	1					
ANR	856959	ExpressionStatement	( * queue ) -> command = av_strdup ( command )	14:12:660:698	856820	4	True				
ANR	856960	AssignmentExpression	( * queue ) -> command = av_strdup ( command )		856820	0		=			
ANR	856961	PtrMemberAccess	( * queue ) -> command		856820	0					
ANR	856962	UnaryOperationExpression	* queue		856820	0					
ANR	856963	UnaryOperator	*		856820	0					
ANR	856964	Identifier	queue		856820	1					
ANR	856965	Identifier	command		856820	1					
ANR	856966	CallExpression	av_strdup ( command )		856820	1					
ANR	856967	Callee	av_strdup		856820	0					
ANR	856968	Identifier	av_strdup		856820	0					
ANR	856969	ArgumentList	command		856820	1					
ANR	856970	Argument	command		856820	0					
ANR	856971	Identifier	command		856820	0					
ANR	856972	ExpressionStatement	( * queue ) -> arg = av_strdup ( arg )	15:12:712:746	856820	5	True				
ANR	856973	AssignmentExpression	( * queue ) -> arg = av_strdup ( arg )		856820	0		=			
ANR	856974	PtrMemberAccess	( * queue ) -> arg		856820	0					
ANR	856975	UnaryOperationExpression	* queue		856820	0					
ANR	856976	UnaryOperator	*		856820	0					
ANR	856977	Identifier	queue		856820	1					
ANR	856978	Identifier	arg		856820	1					
ANR	856979	CallExpression	av_strdup ( arg )		856820	1					
ANR	856980	Callee	av_strdup		856820	0					
ANR	856981	Identifier	av_strdup		856820	0					
ANR	856982	ArgumentList	arg		856820	1					
ANR	856983	Argument	arg		856820	0					
ANR	856984	Identifier	arg		856820	0					
ANR	856985	ExpressionStatement	( * queue ) -> time = ts	16:12:760:782	856820	6	True				
ANR	856986	AssignmentExpression	( * queue ) -> time = ts		856820	0		=			
ANR	856987	PtrMemberAccess	( * queue ) -> time		856820	0					
ANR	856988	UnaryOperationExpression	* queue		856820	0					
ANR	856989	UnaryOperator	*		856820	0					
ANR	856990	Identifier	queue		856820	1					
ANR	856991	Identifier	time		856820	1					
ANR	856992	Identifier	ts		856820	1					
ANR	856993	ExpressionStatement	( * queue ) -> flags = flags	17:12:796:821	856820	7	True				
ANR	856994	AssignmentExpression	( * queue ) -> flags = flags		856820	0		=			
ANR	856995	PtrMemberAccess	( * queue ) -> flags		856820	0					
ANR	856996	UnaryOperationExpression	* queue		856820	0					
ANR	856997	UnaryOperator	*		856820	0					
ANR	856998	Identifier	queue		856820	1					
ANR	856999	Identifier	flags		856820	1					
ANR	857000	Identifier	flags		856820	1					
ANR	857001	ExpressionStatement	( * queue ) -> next = next	18:12:835:859	856820	8	True				
ANR	857002	AssignmentExpression	( * queue ) -> next = next		856820	0		=			
ANR	857003	PtrMemberAccess	( * queue ) -> next		856820	0					
ANR	857004	UnaryOperationExpression	* queue		856820	0					
ANR	857005	UnaryOperator	*		856820	0					
ANR	857006	Identifier	queue		856820	1					
ANR	857007	Identifier	next		856820	1					
ANR	857008	Identifier	next		856820	1					
ANR	857009	IfStatement	if ( flags & AVFILTER_CMD_FLAG_ONE )		856820	9					
ANR	857010	Condition	flags & AVFILTER_CMD_FLAG_ONE	19:15:876:904	856820	0	True				
ANR	857011	BitAndExpression	flags & AVFILTER_CMD_FLAG_ONE		856820	0		&			
ANR	857012	Identifier	flags		856820	0					
ANR	857013	Identifier	AVFILTER_CMD_FLAG_ONE		856820	1					
ANR	857014	ReturnStatement	return 0 ;	20:16:923:931	856820	1	True				
ANR	857015	PrimaryExpression	0		856820	0					
ANR	857016	ReturnStatement	return 0 ;	23:4:953:961	856820	3	True				
ANR	857017	PrimaryExpression	0		856820	0					
ANR	857018	ReturnType	int		856820	1					
ANR	857019	Identifier	avfilter_graph_queue_command		856820	2					
ANR	857020	ParameterList	"AVFilterGraph * graph , const char * target , const char * command , const char * arg , int flags , double ts"		856820	3					
ANR	857021	Parameter	AVFilterGraph * graph	1:33:33:52	856820	0	True				
ANR	857022	ParameterType	AVFilterGraph *		856820	0					
ANR	857023	Identifier	graph		856820	1					
ANR	857024	Parameter	const char * target	1:55:55:72	856820	1	True				
ANR	857025	ParameterType	const char *		856820	0					
ANR	857026	Identifier	target		856820	1					
ANR	857027	Parameter	const char * command	1:75:75:93	856820	2	True				
ANR	857028	ParameterType	const char *		856820	0					
ANR	857029	Identifier	command		856820	1					
ANR	857030	Parameter	const char * arg	1:96:96:110	856820	3	True				
ANR	857031	ParameterType	const char *		856820	0					
ANR	857032	Identifier	arg		856820	1					
ANR	857033	Parameter	int flags	1:113:113:121	856820	4	True				
ANR	857034	ParameterType	int		856820	0					
ANR	857035	Identifier	flags		856820	1					
ANR	857036	Parameter	double ts	1:124:124:132	856820	5	True				
ANR	857037	ParameterType	double		856820	0					
ANR	857038	Identifier	ts		856820	1					
ANR	857039	CFGEntryNode	ENTRY		856820		True				
ANR	857040	CFGExitNode	EXIT		856820		True				
ANR	857041	Symbol	next		856820						
ANR	857042	Symbol	( * queue ) -> next		856820						
ANR	857043	Symbol	( * queue ) -> flags		856820						
ANR	857044	Symbol	* * graph		856820						
ANR	857045	Symbol	av_strdup		856820						
ANR	857046	Symbol	flags		856820						
ANR	857047	Symbol	* * queue		856820						
ANR	857048	Symbol	* queue		856820						
ANR	857049	Symbol	filter -> filter		856820						
ANR	857050	Symbol	arg		856820						
ANR	857051	Symbol	& filter -> command_queue		856820						
ANR	857052	Symbol	* graph		856820						
ANR	857053	Symbol	filter -> filter -> name		856820						
ANR	857054	Symbol	AVFILTER_CMD_FLAG_ONE		856820						
ANR	857055	Symbol	strcmp		856820						
ANR	857056	Symbol	* filter -> filter		856820						
ANR	857057	Symbol	av_mallocz		856820						
ANR	857058	Symbol	i		856820						
ANR	857059	Symbol	& ( * queue ) -> next		856820						
ANR	857060	Symbol	graph -> filters		856820						
ANR	857061	Symbol	graph		856820						
ANR	857062	Symbol	command		856820						
ANR	857063	Symbol	target		856820						
ANR	857064	Symbol	* filter		856820						
ANR	857065	Symbol	filter		856820						
ANR	857066	Symbol	filter -> name		856820						
ANR	857067	Symbol	( * queue ) -> arg		856820						
ANR	857068	Symbol	* i		856820						
ANR	857069	Symbol	* graph -> filters		856820						
ANR	857070	Symbol	graph -> nb_filters		856820						
ANR	857071	Symbol	( * queue ) -> time		856820						
ANR	857072	Symbol	( * queue ) -> command		856820						
ANR	857073	Symbol	queue		856820						
ANR	857074	Symbol	ts		856820						
ANR	857075	Symbol	* * filter		856820						
