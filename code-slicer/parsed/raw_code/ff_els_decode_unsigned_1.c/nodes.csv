command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3249041	File	/home/p4ultr4n/workplace/ReVeal/raw_code/ff_els_decode_unsigned_1.c								
ANR	3249042	Function	ff_els_decode_unsigned	1:0:0:2517							
ANR	3249043	FunctionDef	"ff_els_decode_unsigned (ElsDecCtx * ctx , ElsUnsignedRung * ur)"		3249042	0					
ANR	3249044	CompoundStatement		3:0:70:2517	3249042	0					
ANR	3249045	IdentifierDeclStatement	"int i , n , r , bit ;"	5:4:77:93	3249042	0	True				
ANR	3249046	IdentifierDecl	i		3249042	0					
ANR	3249047	IdentifierDeclType	int		3249042	0					
ANR	3249048	Identifier	i		3249042	1					
ANR	3249049	IdentifierDecl	n		3249042	1					
ANR	3249050	IdentifierDeclType	int		3249042	0					
ANR	3249051	Identifier	n		3249042	1					
ANR	3249052	IdentifierDecl	r		3249042	2					
ANR	3249053	IdentifierDeclType	int		3249042	0					
ANR	3249054	Identifier	r		3249042	1					
ANR	3249055	IdentifierDecl	bit		3249042	3					
ANR	3249056	IdentifierDeclType	int		3249042	0					
ANR	3249057	Identifier	bit		3249042	1					
ANR	3249058	IdentifierDeclStatement	ElsRungNode * rung_node ;	7:4:100:122	3249042	1	True				
ANR	3249059	IdentifierDecl	* rung_node		3249042	0					
ANR	3249060	IdentifierDeclType	ElsRungNode *		3249042	0					
ANR	3249061	Identifier	rung_node		3249042	1					
ANR	3249062	IfStatement	if ( ctx -> err )		3249042	2					
ANR	3249063	Condition	ctx -> err	11:8:135:142	3249042	0	True				
ANR	3249064	PtrMemberAccess	ctx -> err		3249042	0					
ANR	3249065	Identifier	ctx		3249042	0					
ANR	3249066	Identifier	err		3249042	1					
ANR	3249067	ReturnStatement	return 0 ;	13:8:154:162	3249042	1	True				
ANR	3249068	PrimaryExpression	0		3249042	0					
ANR	3249069	ForStatement	for ( n = 0 ; n < ELS_EXPGOLOMB_LEN + 1 ; n ++ )		3249042	3					
ANR	3249070	ForInit	n = 0 ;	19:9:207:212	3249042	0	True				
ANR	3249071	AssignmentExpression	n = 0		3249042	0		=			
ANR	3249072	Identifier	n		3249042	0					
ANR	3249073	PrimaryExpression	0		3249042	1					
ANR	3249074	Condition	n < ELS_EXPGOLOMB_LEN + 1	19:16:214:238	3249042	1	True				
ANR	3249075	RelationalExpression	n < ELS_EXPGOLOMB_LEN + 1		3249042	0		<			
ANR	3249076	Identifier	n		3249042	0					
ANR	3249077	AdditiveExpression	ELS_EXPGOLOMB_LEN + 1		3249042	1		+			
ANR	3249078	Identifier	ELS_EXPGOLOMB_LEN		3249042	0					
ANR	3249079	PrimaryExpression	1		3249042	1					
ANR	3249080	PostIncDecOperationExpression	n ++	19:43:241:243	3249042	2	True				
ANR	3249081	Identifier	n		3249042	0					
ANR	3249082	IncDec	++		3249042	1					
ANR	3249083	IfStatement	"if ( ff_els_decode_bit ( ctx , & ur -> prefix_rung [ n ] ) )"		3249042	3					
ANR	3249084	Condition	"ff_els_decode_bit ( ctx , & ur -> prefix_rung [ n ] )"	21:12:259:301	3249042	0	True				
ANR	3249085	CallExpression	"ff_els_decode_bit ( ctx , & ur -> prefix_rung [ n ] )"		3249042	0					
ANR	3249086	Callee	ff_els_decode_bit		3249042	0					
ANR	3249087	Identifier	ff_els_decode_bit		3249042	0					
ANR	3249088	ArgumentList	ctx		3249042	1					
ANR	3249089	Argument	ctx		3249042	0					
ANR	3249090	Identifier	ctx		3249042	0					
ANR	3249091	Argument	& ur -> prefix_rung [ n ]		3249042	1					
ANR	3249092	UnaryOperationExpression	& ur -> prefix_rung [ n ]		3249042	0					
ANR	3249093	UnaryOperator	&		3249042	0					
ANR	3249094	ArrayIndexing	ur -> prefix_rung [ n ]		3249042	1					
ANR	3249095	PtrMemberAccess	ur -> prefix_rung		3249042	0					
ANR	3249096	Identifier	ur		3249042	0					
ANR	3249097	Identifier	prefix_rung		3249042	1					
ANR	3249098	Identifier	n		3249042	1					
ANR	3249099	BreakStatement	break ;	23:12:317:322	3249042	1	True				
ANR	3249100	IfStatement	if ( ctx -> err || n >= ELS_EXPGOLOMB_LEN )		3249042	4					
ANR	3249101	Condition	ctx -> err || n >= ELS_EXPGOLOMB_LEN	29:8:377:410	3249042	0	True				
ANR	3249102	OrExpression	ctx -> err || n >= ELS_EXPGOLOMB_LEN		3249042	0		||			
ANR	3249103	PtrMemberAccess	ctx -> err		3249042	0					
ANR	3249104	Identifier	ctx		3249042	0					
ANR	3249105	Identifier	err		3249042	1					
ANR	3249106	RelationalExpression	n >= ELS_EXPGOLOMB_LEN		3249042	1		>=			
ANR	3249107	Identifier	n		3249042	0					
ANR	3249108	Identifier	ELS_EXPGOLOMB_LEN		3249042	1					
ANR	3249109	CompoundStatement		27:44:342:342	3249042	1					
ANR	3249110	ExpressionStatement	ctx -> err = AVERROR ( EOVERFLOW )	31:8:424:453	3249042	0	True				
ANR	3249111	AssignmentExpression	ctx -> err = AVERROR ( EOVERFLOW )		3249042	0		=			
ANR	3249112	PtrMemberAccess	ctx -> err		3249042	0					
ANR	3249113	Identifier	ctx		3249042	0					
ANR	3249114	Identifier	err		3249042	1					
ANR	3249115	CallExpression	AVERROR ( EOVERFLOW )		3249042	1					
ANR	3249116	Callee	AVERROR		3249042	0					
ANR	3249117	Identifier	AVERROR		3249042	0					
ANR	3249118	ArgumentList	EOVERFLOW		3249042	1					
ANR	3249119	Argument	EOVERFLOW		3249042	0					
ANR	3249120	Identifier	EOVERFLOW		3249042	0					
ANR	3249121	ReturnStatement	return 0 ;	33:8:464:472	3249042	1	True				
ANR	3249122	PrimaryExpression	0		3249042	0					
ANR	3249123	IfStatement	if ( ! n )		3249042	5					
ANR	3249124	Condition	! n	41:8:524:525	3249042	0	True				
ANR	3249125	UnaryOperationExpression	! n		3249042	0					
ANR	3249126	UnaryOperator	!		3249042	0					
ANR	3249127	Identifier	n		3249042	1					
ANR	3249128	ReturnStatement	return 0 ;	43:8:537:545	3249042	1	True				
ANR	3249129	PrimaryExpression	0		3249042	0					
ANR	3249130	IfStatement	if ( ! ur -> rem_rung_list )		3249042	6					
ANR	3249131	Condition	! ur -> rem_rung_list	49:8:597:614	3249042	0	True				
ANR	3249132	UnaryOperationExpression	! ur -> rem_rung_list		3249042	0					
ANR	3249133	UnaryOperator	!		3249042	0					
ANR	3249134	PtrMemberAccess	ur -> rem_rung_list		3249042	1					
ANR	3249135	Identifier	ur		3249042	0					
ANR	3249136	Identifier	rem_rung_list		3249042	1					
ANR	3249137	CompoundStatement		47:28:546:546	3249042	1					
ANR	3249138	ExpressionStatement	"ur -> rem_rung_list = av_realloc ( NULL , RUNG_SPACE )"	51:8:628:676	3249042	0	True				
ANR	3249139	AssignmentExpression	"ur -> rem_rung_list = av_realloc ( NULL , RUNG_SPACE )"		3249042	0		=			
ANR	3249140	PtrMemberAccess	ur -> rem_rung_list		3249042	0					
ANR	3249141	Identifier	ur		3249042	0					
ANR	3249142	Identifier	rem_rung_list		3249042	1					
ANR	3249143	CallExpression	"av_realloc ( NULL , RUNG_SPACE )"		3249042	1					
ANR	3249144	Callee	av_realloc		3249042	0					
ANR	3249145	Identifier	av_realloc		3249042	0					
ANR	3249146	ArgumentList	NULL		3249042	1					
ANR	3249147	Argument	NULL		3249042	0					
ANR	3249148	Identifier	NULL		3249042	0					
ANR	3249149	Argument	RUNG_SPACE		3249042	1					
ANR	3249150	Identifier	RUNG_SPACE		3249042	0					
ANR	3249151	IfStatement	if ( ! ur -> rem_rung_list )		3249042	1					
ANR	3249152	Condition	! ur -> rem_rung_list	53:12:691:708	3249042	0	True				
ANR	3249153	UnaryOperationExpression	! ur -> rem_rung_list		3249042	0					
ANR	3249154	UnaryOperator	!		3249042	0					
ANR	3249155	PtrMemberAccess	ur -> rem_rung_list		3249042	1					
ANR	3249156	Identifier	ur		3249042	0					
ANR	3249157	Identifier	rem_rung_list		3249042	1					
ANR	3249158	CompoundStatement		51:32:640:640	3249042	1					
ANR	3249159	ExpressionStatement	ctx -> err = AVERROR ( ENOMEM )	55:12:726:752	3249042	0	True				
ANR	3249160	AssignmentExpression	ctx -> err = AVERROR ( ENOMEM )		3249042	0		=			
ANR	3249161	PtrMemberAccess	ctx -> err		3249042	0					
ANR	3249162	Identifier	ctx		3249042	0					
ANR	3249163	Identifier	err		3249042	1					
ANR	3249164	CallExpression	AVERROR ( ENOMEM )		3249042	1					
ANR	3249165	Callee	AVERROR		3249042	0					
ANR	3249166	Identifier	AVERROR		3249042	0					
ANR	3249167	ArgumentList	ENOMEM		3249042	1					
ANR	3249168	Argument	ENOMEM		3249042	0					
ANR	3249169	Identifier	ENOMEM		3249042	0					
ANR	3249170	ReturnStatement	return 0 ;	57:12:767:775	3249042	1	True				
ANR	3249171	PrimaryExpression	0		3249042	0					
ANR	3249172	ExpressionStatement	"memset ( ur -> rem_rung_list , 0 , RUNG_SPACE )"	61:8:797:837	3249042	2	True				
ANR	3249173	CallExpression	"memset ( ur -> rem_rung_list , 0 , RUNG_SPACE )"		3249042	0					
ANR	3249174	Callee	memset		3249042	0					
ANR	3249175	Identifier	memset		3249042	0					
ANR	3249176	ArgumentList	ur -> rem_rung_list		3249042	1					
ANR	3249177	Argument	ur -> rem_rung_list		3249042	0					
ANR	3249178	PtrMemberAccess	ur -> rem_rung_list		3249042	0					
ANR	3249179	Identifier	ur		3249042	0					
ANR	3249180	Identifier	rem_rung_list		3249042	1					
ANR	3249181	Argument	0		3249042	1					
ANR	3249182	PrimaryExpression	0		3249042	0					
ANR	3249183	Argument	RUNG_SPACE		3249042	2					
ANR	3249184	Identifier	RUNG_SPACE		3249042	0					
ANR	3249185	ExpressionStatement	ur -> rung_list_size = RUNG_SPACE	63:8:848:879	3249042	3	True				
ANR	3249186	AssignmentExpression	ur -> rung_list_size = RUNG_SPACE		3249042	0		=			
ANR	3249187	PtrMemberAccess	ur -> rung_list_size		3249042	0					
ANR	3249188	Identifier	ur		3249042	0					
ANR	3249189	Identifier	rung_list_size		3249042	1					
ANR	3249190	Identifier	RUNG_SPACE		3249042	1					
ANR	3249191	ExpressionStatement	ur -> avail_index = ELS_EXPGOLOMB_LEN	65:8:890:928	3249042	4	True				
ANR	3249192	AssignmentExpression	ur -> avail_index = ELS_EXPGOLOMB_LEN		3249042	0		=			
ANR	3249193	PtrMemberAccess	ur -> avail_index		3249042	0					
ANR	3249194	Identifier	ur		3249042	0					
ANR	3249195	Identifier	avail_index		3249042	1					
ANR	3249196	Identifier	ELS_EXPGOLOMB_LEN		3249042	1					
ANR	3249197	ForStatement	"for ( i = 0 , r = 0 , bit = 0 ; i < n ; i ++ )"		3249042	7					
ANR	3249198	ForInit	"i = 0 , r = 0 , bit = 0 ;"	73:9:981:1002	3249042	0	True				
ANR	3249199	Expression	"i = 0 , r = 0 , bit = 0"		3249042	0					
ANR	3249200	AssignmentExpression	i = 0		3249042	0		=			
ANR	3249201	Identifier	i		3249042	0					
ANR	3249202	PrimaryExpression	0		3249042	1					
ANR	3249203	Expression	"r = 0 , bit = 0"		3249042	1					
ANR	3249204	AssignmentExpression	r = 0		3249042	0		=			
ANR	3249205	Identifier	r		3249042	0					
ANR	3249206	PrimaryExpression	0		3249042	1					
ANR	3249207	AssignmentExpression	bit = 0		3249042	1		=			
ANR	3249208	Identifier	bit		3249042	0					
ANR	3249209	PrimaryExpression	0		3249042	1					
ANR	3249210	Condition	i < n	73:32:1004:1008	3249042	1	True				
ANR	3249211	RelationalExpression	i < n		3249042	0		<			
ANR	3249212	Identifier	i		3249042	0					
ANR	3249213	Identifier	n		3249042	1					
ANR	3249214	PostIncDecOperationExpression	i ++	73:39:1011:1013	3249042	2	True				
ANR	3249215	Identifier	i		3249042	0					
ANR	3249216	IncDec	++		3249042	1					
ANR	3249217	CompoundStatement		71:44:945:945	3249042	3					
ANR	3249218	IfStatement	if ( ! i )		3249042	0					
ANR	3249219	Condition	! i	75:12:1031:1032	3249042	0	True				
ANR	3249220	UnaryOperationExpression	! i		3249042	0					
ANR	3249221	UnaryOperator	!		3249042	0					
ANR	3249222	Identifier	i		3249042	1					
ANR	3249223	ExpressionStatement	rung_node = & ur -> rem_rung_list [ n ]	77:12:1048:1081	3249042	1	True				
ANR	3249224	AssignmentExpression	rung_node = & ur -> rem_rung_list [ n ]		3249042	0		=			
ANR	3249225	Identifier	rung_node		3249042	0					
ANR	3249226	UnaryOperationExpression	& ur -> rem_rung_list [ n ]		3249042	1					
ANR	3249227	UnaryOperator	&		3249042	0					
ANR	3249228	ArrayIndexing	ur -> rem_rung_list [ n ]		3249042	1					
ANR	3249229	PtrMemberAccess	ur -> rem_rung_list		3249042	0					
ANR	3249230	Identifier	ur		3249042	0					
ANR	3249231	Identifier	rem_rung_list		3249042	1					
ANR	3249232	Identifier	n		3249042	1					
ANR	3249233	ElseStatement	else		3249042	0					
ANR	3249234	CompoundStatement		77:13:1026:1026	3249042	0					
ANR	3249235	IfStatement	if ( ! rung_node -> next_index )		3249042	0					
ANR	3249236	Condition	! rung_node -> next_index	81:16:1116:1137	3249042	0	True				
ANR	3249237	UnaryOperationExpression	! rung_node -> next_index		3249042	0					
ANR	3249238	UnaryOperator	!		3249042	0					
ANR	3249239	PtrMemberAccess	rung_node -> next_index		3249042	1					
ANR	3249240	Identifier	rung_node		3249042	0					
ANR	3249241	Identifier	next_index		3249042	1					
ANR	3249242	CompoundStatement		79:40:1069:1069	3249042	1					
ANR	3249243	IfStatement	if ( ur -> rung_list_size <= ( ur -> avail_index + 2 ) * sizeof ( ElsRungNode ) )		3249042	0					
ANR	3249244	Condition	ur -> rung_list_size <= ( ur -> avail_index + 2 ) * sizeof ( ElsRungNode )	83:20:1163:1227	3249042	0	True				
ANR	3249245	RelationalExpression	ur -> rung_list_size <= ( ur -> avail_index + 2 ) * sizeof ( ElsRungNode )		3249042	0		<=			
ANR	3249246	PtrMemberAccess	ur -> rung_list_size		3249042	0					
ANR	3249247	Identifier	ur		3249042	0					
ANR	3249248	Identifier	rung_list_size		3249042	1					
ANR	3249249	MultiplicativeExpression	( ur -> avail_index + 2 ) * sizeof ( ElsRungNode )		3249042	1		*			
ANR	3249250	AdditiveExpression	ur -> avail_index + 2		3249042	0		+			
ANR	3249251	PtrMemberAccess	ur -> avail_index		3249042	0					
ANR	3249252	Identifier	ur		3249042	0					
ANR	3249253	Identifier	avail_index		3249042	1					
ANR	3249254	PrimaryExpression	2		3249042	1					
ANR	3249255	SizeofExpression	sizeof ( ElsRungNode )		3249042	1					
ANR	3249256	Sizeof	sizeof		3249042	0					
ANR	3249257	SizeofOperand	ElsRungNode		3249042	1					
ANR	3249258	CompoundStatement		85:20:1234:1283	3249042	1					
ANR	3249259	IdentifierDeclStatement	ptrdiff_t pos = rung_node - ur -> rem_rung_list ;	87:20:1305:1354	3249042	0	True				
ANR	3249260	IdentifierDecl	pos = rung_node - ur -> rem_rung_list		3249042	0					
ANR	3249261	IdentifierDeclType	ptrdiff_t		3249042	0					
ANR	3249262	Identifier	pos		3249042	1					
ANR	3249263	AssignmentExpression	pos = rung_node - ur -> rem_rung_list		3249042	2		=			
ANR	3249264	Identifier	pos		3249042	0					
ANR	3249265	AdditiveExpression	rung_node - ur -> rem_rung_list		3249042	1		-			
ANR	3249266	Identifier	rung_node		3249042	0					
ANR	3249267	PtrMemberAccess	ur -> rem_rung_list		3249042	1					
ANR	3249268	Identifier	ur		3249042	0					
ANR	3249269	Identifier	rem_rung_list		3249042	1					
ANR	3249270	ExpressionStatement	"ur -> rem_rung_list = av_realloc ( ur -> rem_rung_list , ur -> rung_list_size + RUNG_SPACE )"	89:20:1377:1563	3249042	1	True				
ANR	3249271	AssignmentExpression	"ur -> rem_rung_list = av_realloc ( ur -> rem_rung_list , ur -> rung_list_size + RUNG_SPACE )"		3249042	0		=			
ANR	3249272	PtrMemberAccess	ur -> rem_rung_list		3249042	0					
ANR	3249273	Identifier	ur		3249042	0					
ANR	3249274	Identifier	rem_rung_list		3249042	1					
ANR	3249275	CallExpression	"av_realloc ( ur -> rem_rung_list , ur -> rung_list_size + RUNG_SPACE )"		3249042	1					
ANR	3249276	Callee	av_realloc		3249042	0					
ANR	3249277	Identifier	av_realloc		3249042	0					
ANR	3249278	ArgumentList	ur -> rem_rung_list		3249042	1					
ANR	3249279	Argument	ur -> rem_rung_list		3249042	0					
ANR	3249280	PtrMemberAccess	ur -> rem_rung_list		3249042	0					
ANR	3249281	Identifier	ur		3249042	0					
ANR	3249282	Identifier	rem_rung_list		3249042	1					
ANR	3249283	Argument	ur -> rung_list_size + RUNG_SPACE		3249042	1					
ANR	3249284	AdditiveExpression	ur -> rung_list_size + RUNG_SPACE		3249042	0		+			
ANR	3249285	PtrMemberAccess	ur -> rung_list_size		3249042	0					
ANR	3249286	Identifier	ur		3249042	0					
ANR	3249287	Identifier	rung_list_size		3249042	1					
ANR	3249288	Identifier	RUNG_SPACE		3249042	1					
ANR	3249289	IfStatement	if ( ! ur -> rem_rung_list )		3249042	2					
ANR	3249290	Condition	! ur -> rem_rung_list	95:24:1590:1607	3249042	0	True				
ANR	3249291	UnaryOperationExpression	! ur -> rem_rung_list		3249042	0					
ANR	3249292	UnaryOperator	!		3249042	0					
ANR	3249293	PtrMemberAccess	ur -> rem_rung_list		3249042	1					
ANR	3249294	Identifier	ur		3249042	0					
ANR	3249295	Identifier	rem_rung_list		3249042	1					
ANR	3249296	CompoundStatement		93:44:1539:1539	3249042	1					
ANR	3249297	ExpressionStatement	av_free ( ur -> rem_rung_list )	97:24:1637:1663	3249042	0	True				
ANR	3249298	CallExpression	av_free ( ur -> rem_rung_list )		3249042	0					
ANR	3249299	Callee	av_free		3249042	0					
ANR	3249300	Identifier	av_free		3249042	0					
ANR	3249301	ArgumentList	ur -> rem_rung_list		3249042	1					
ANR	3249302	Argument	ur -> rem_rung_list		3249042	0					
ANR	3249303	PtrMemberAccess	ur -> rem_rung_list		3249042	0					
ANR	3249304	Identifier	ur		3249042	0					
ANR	3249305	Identifier	rem_rung_list		3249042	1					
ANR	3249306	ExpressionStatement	ctx -> err = AVERROR ( ENOMEM )	99:24:1690:1716	3249042	1	True				
ANR	3249307	AssignmentExpression	ctx -> err = AVERROR ( ENOMEM )		3249042	0		=			
ANR	3249308	PtrMemberAccess	ctx -> err		3249042	0					
ANR	3249309	Identifier	ctx		3249042	0					
ANR	3249310	Identifier	err		3249042	1					
ANR	3249311	CallExpression	AVERROR ( ENOMEM )		3249042	1					
ANR	3249312	Callee	AVERROR		3249042	0					
ANR	3249313	Identifier	AVERROR		3249042	0					
ANR	3249314	ArgumentList	ENOMEM		3249042	1					
ANR	3249315	Argument	ENOMEM		3249042	0					
ANR	3249316	Identifier	ENOMEM		3249042	0					
ANR	3249317	ReturnStatement	return 0 ;	101:24:1743:1751	3249042	2	True				
ANR	3249318	PrimaryExpression	0		3249042	0					
ANR	3249319	ExpressionStatement	"memset ( ( uint8_t * ) ur -> rem_rung_list + ur -> rung_list_size , 0 , RUNG_SPACE )"	105:20:1797:1898	3249042	3	True				
ANR	3249320	CallExpression	"memset ( ( uint8_t * ) ur -> rem_rung_list + ur -> rung_list_size , 0 , RUNG_SPACE )"		3249042	0					
ANR	3249321	Callee	memset		3249042	0					
ANR	3249322	Identifier	memset		3249042	0					
ANR	3249323	ArgumentList	( uint8_t * ) ur -> rem_rung_list + ur -> rung_list_size		3249042	1					
ANR	3249324	Argument	( uint8_t * ) ur -> rem_rung_list + ur -> rung_list_size		3249042	0					
ANR	3249325	AdditiveExpression	( uint8_t * ) ur -> rem_rung_list + ur -> rung_list_size		3249042	0		+			
ANR	3249326	CastExpression	( uint8_t * ) ur -> rem_rung_list		3249042	0					
ANR	3249327	CastTarget	uint8_t *		3249042	0					
ANR	3249328	PtrMemberAccess	ur -> rem_rung_list		3249042	1					
ANR	3249329	Identifier	ur		3249042	0					
ANR	3249330	Identifier	rem_rung_list		3249042	1					
ANR	3249331	PtrMemberAccess	ur -> rung_list_size		3249042	1					
ANR	3249332	Identifier	ur		3249042	0					
ANR	3249333	Identifier	rung_list_size		3249042	1					
ANR	3249334	Argument	0		3249042	1					
ANR	3249335	PrimaryExpression	0		3249042	0					
ANR	3249336	Argument	RUNG_SPACE		3249042	2					
ANR	3249337	Identifier	RUNG_SPACE		3249042	0					
ANR	3249338	ExpressionStatement	ur -> rung_list_size += RUNG_SPACE	109:20:1921:1953	3249042	4	True				
ANR	3249339	AssignmentExpression	ur -> rung_list_size += RUNG_SPACE		3249042	0		+=			
ANR	3249340	PtrMemberAccess	ur -> rung_list_size		3249042	0					
ANR	3249341	Identifier	ur		3249042	0					
ANR	3249342	Identifier	rung_list_size		3249042	1					
ANR	3249343	Identifier	RUNG_SPACE		3249042	1					
ANR	3249344	ExpressionStatement	rung_node = & ur -> rem_rung_list [ pos ]	113:20:2043:2078	3249042	5	True				
ANR	3249345	AssignmentExpression	rung_node = & ur -> rem_rung_list [ pos ]		3249042	0		=			
ANR	3249346	Identifier	rung_node		3249042	0					
ANR	3249347	UnaryOperationExpression	& ur -> rem_rung_list [ pos ]		3249042	1					
ANR	3249348	UnaryOperator	&		3249042	0					
ANR	3249349	ArrayIndexing	ur -> rem_rung_list [ pos ]		3249042	1					
ANR	3249350	PtrMemberAccess	ur -> rem_rung_list		3249042	0					
ANR	3249351	Identifier	ur		3249042	0					
ANR	3249352	Identifier	rem_rung_list		3249042	1					
ANR	3249353	Identifier	pos		3249042	1					
ANR	3249354	ExpressionStatement	rung_node -> next_index = ur -> avail_index	117:16:2116:2155	3249042	1	True				
ANR	3249355	AssignmentExpression	rung_node -> next_index = ur -> avail_index		3249042	0		=			
ANR	3249356	PtrMemberAccess	rung_node -> next_index		3249042	0					
ANR	3249357	Identifier	rung_node		3249042	0					
ANR	3249358	Identifier	next_index		3249042	1					
ANR	3249359	PtrMemberAccess	ur -> avail_index		3249042	1					
ANR	3249360	Identifier	ur		3249042	0					
ANR	3249361	Identifier	avail_index		3249042	1					
ANR	3249362	ExpressionStatement	ur -> avail_index += 2	119:16:2174:2199	3249042	2	True				
ANR	3249363	AssignmentExpression	ur -> avail_index += 2		3249042	0		+=			
ANR	3249364	PtrMemberAccess	ur -> avail_index		3249042	0					
ANR	3249365	Identifier	ur		3249042	0					
ANR	3249366	Identifier	avail_index		3249042	1					
ANR	3249367	PrimaryExpression	2		3249042	1					
ANR	3249368	ExpressionStatement	rung_node = & ur -> rem_rung_list [ rung_node -> next_index + bit ]	123:12:2229:2288	3249042	1	True				
ANR	3249369	AssignmentExpression	rung_node = & ur -> rem_rung_list [ rung_node -> next_index + bit ]		3249042	0		=			
ANR	3249370	Identifier	rung_node		3249042	0					
ANR	3249371	UnaryOperationExpression	& ur -> rem_rung_list [ rung_node -> next_index + bit ]		3249042	1					
ANR	3249372	UnaryOperator	&		3249042	0					
ANR	3249373	ArrayIndexing	ur -> rem_rung_list [ rung_node -> next_index + bit ]		3249042	1					
ANR	3249374	PtrMemberAccess	ur -> rem_rung_list		3249042	0					
ANR	3249375	Identifier	ur		3249042	0					
ANR	3249376	Identifier	rem_rung_list		3249042	1					
ANR	3249377	AdditiveExpression	rung_node -> next_index + bit		3249042	1		+			
ANR	3249378	PtrMemberAccess	rung_node -> next_index		3249042	0					
ANR	3249379	Identifier	rung_node		3249042	0					
ANR	3249380	Identifier	next_index		3249042	1					
ANR	3249381	Identifier	bit		3249042	1					
ANR	3249382	ExpressionStatement	"bit = ff_els_decode_bit ( ctx , & rung_node -> rung )"	129:8:2312:2358	3249042	1	True				
ANR	3249383	AssignmentExpression	"bit = ff_els_decode_bit ( ctx , & rung_node -> rung )"		3249042	0		=			
ANR	3249384	Identifier	bit		3249042	0					
ANR	3249385	CallExpression	"ff_els_decode_bit ( ctx , & rung_node -> rung )"		3249042	1					
ANR	3249386	Callee	ff_els_decode_bit		3249042	0					
ANR	3249387	Identifier	ff_els_decode_bit		3249042	0					
ANR	3249388	ArgumentList	ctx		3249042	1					
ANR	3249389	Argument	ctx		3249042	0					
ANR	3249390	Identifier	ctx		3249042	0					
ANR	3249391	Argument	& rung_node -> rung		3249042	1					
ANR	3249392	UnaryOperationExpression	& rung_node -> rung		3249042	0					
ANR	3249393	UnaryOperator	&		3249042	0					
ANR	3249394	PtrMemberAccess	rung_node -> rung		3249042	1					
ANR	3249395	Identifier	rung_node		3249042	0					
ANR	3249396	Identifier	rung		3249042	1					
ANR	3249397	IfStatement	if ( ctx -> err )		3249042	2					
ANR	3249398	Condition	ctx -> err	131:12:2373:2380	3249042	0	True				
ANR	3249399	PtrMemberAccess	ctx -> err		3249042	0					
ANR	3249400	Identifier	ctx		3249042	0					
ANR	3249401	Identifier	err		3249042	1					
ANR	3249402	ReturnStatement	return bit ;	133:12:2396:2406	3249042	1	True				
ANR	3249403	Identifier	bit		3249042	0					
ANR	3249404	ExpressionStatement	r = ( r << 1 ) + bit	137:8:2419:2437	3249042	3	True				
ANR	3249405	AssignmentExpression	r = ( r << 1 ) + bit		3249042	0		=			
ANR	3249406	Identifier	r		3249042	0					
ANR	3249407	AdditiveExpression	( r << 1 ) + bit		3249042	1		+			
ANR	3249408	ShiftExpression	r << 1		3249042	0		<<			
ANR	3249409	Identifier	r		3249042	0					
ANR	3249410	PrimaryExpression	1		3249042	1					
ANR	3249411	Identifier	bit		3249042	1					
ANR	3249412	ReturnStatement	return ( 1 << n ) - 1 + r ;	143:4:2453:2476	3249042	8	True				
ANR	3249413	AdditiveExpression	( 1 << n ) - 1 + r		3249042	0		-			
ANR	3249414	ShiftExpression	1 << n		3249042	0		<<			
ANR	3249415	PrimaryExpression	1		3249042	0					
ANR	3249416	Identifier	n		3249042	1					
ANR	3249417	AdditiveExpression	1 + r		3249042	1		+			
ANR	3249418	PrimaryExpression	1		3249042	0					
ANR	3249419	Identifier	r		3249042	1					
ANR	3249420	ReturnType	unsigned		3249042	1					
ANR	3249421	Identifier	ff_els_decode_unsigned		3249042	2					
ANR	3249422	ParameterList	"ElsDecCtx * ctx , ElsUnsignedRung * ur"		3249042	3					
ANR	3249423	Parameter	ElsDecCtx * ctx	1:32:32:45	3249042	0	True				
ANR	3249424	ParameterType	ElsDecCtx *		3249042	0					
ANR	3249425	Identifier	ctx		3249042	1					
ANR	3249426	Parameter	ElsUnsignedRung * ur	1:48:48:66	3249042	1	True				
ANR	3249427	ParameterType	ElsUnsignedRung *		3249042	0					
ANR	3249428	Identifier	ur		3249042	1					
ANR	3249429	CFGEntryNode	ENTRY		3249042		True				
ANR	3249430	CFGExitNode	EXIT		3249042		True				
ANR	3249431	Symbol	* ur		3249042						
ANR	3249432	Symbol	av_realloc		3249042						
ANR	3249433	Symbol	ENOMEM		3249042						
ANR	3249434	Symbol	ur -> avail_index		3249042						
ANR	3249435	Symbol	bit		3249042						
ANR	3249436	Symbol	ctx -> err		3249042						
ANR	3249437	Symbol	rung_node -> next_index		3249042						
ANR	3249438	Symbol	pos		3249042						
ANR	3249439	Symbol	* rung_node		3249042						
ANR	3249440	Symbol	& rung_node -> rung		3249042						
ANR	3249441	Symbol	ur		3249042						
ANR	3249442	Symbol	NULL		3249042						
ANR	3249443	Symbol	rung_node		3249042						
ANR	3249444	Symbol	ctx		3249042						
ANR	3249445	Symbol	i		3249042						
ANR	3249446	Symbol	ff_els_decode_bit		3249042						
ANR	3249447	Symbol	RUNG_SPACE		3249042						
ANR	3249448	Symbol	n		3249042						
ANR	3249449	Symbol	* ctx		3249042						
ANR	3249450	Symbol	EOVERFLOW		3249042						
ANR	3249451	Symbol	r		3249042						
ANR	3249452	Symbol	ur -> prefix_rung		3249042						
ANR	3249453	Symbol	ur -> rung_list_size		3249042						
ANR	3249454	Symbol	ur -> rem_rung_list		3249042						
ANR	3249455	Symbol	ELS_EXPGOLOMB_LEN		3249042						
ANR	3249456	Symbol	AVERROR		3249042						
