command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1285531	File	/home/p4ultr4n/workplace/ReVeal/raw_code/check_values_0.c								
ANR	1285532	Function	check_values	1:0:0:355							
ANR	1285533	FunctionDef	check_values (eq2_param_t * par)		1285532	0					
ANR	1285534	CompoundStatement		3:0:38:355	1285532	0					
ANR	1285535	IfStatement	if ( ( par -> c == 1.0 ) && ( par -> b == 0.0 ) && ( par -> g == 1.0 ) )		1285532	0					
ANR	1285536	Condition	( par -> c == 1.0 ) && ( par -> b == 0.0 ) && ( par -> g == 1.0 )	9:6:94:146	1285532	0	True				
ANR	1285537	AndExpression	( par -> c == 1.0 ) && ( par -> b == 0.0 ) && ( par -> g == 1.0 )		1285532	0		&&			
ANR	1285538	EqualityExpression	par -> c == 1.0		1285532	0		==			
ANR	1285539	PtrMemberAccess	par -> c		1285532	0					
ANR	1285540	Identifier	par		1285532	0					
ANR	1285541	Identifier	c		1285532	1					
ANR	1285542	PrimaryExpression	1.0		1285532	1					
ANR	1285543	AndExpression	( par -> b == 0.0 ) && ( par -> g == 1.0 )		1285532	1		&&			
ANR	1285544	EqualityExpression	par -> b == 0.0		1285532	0		==			
ANR	1285545	PtrMemberAccess	par -> b		1285532	0					
ANR	1285546	Identifier	par		1285532	0					
ANR	1285547	Identifier	b		1285532	1					
ANR	1285548	PrimaryExpression	0.0		1285532	1					
ANR	1285549	EqualityExpression	par -> g == 1.0		1285532	1		==			
ANR	1285550	PtrMemberAccess	par -> g		1285532	0					
ANR	1285551	Identifier	par		1285532	0					
ANR	1285552	Identifier	g		1285532	1					
ANR	1285553	PrimaryExpression	1.0		1285532	1					
ANR	1285554	CompoundStatement		7:61:110:110	1285532	1					
ANR	1285555	ExpressionStatement	par -> adjust = NULL	11:4:156:174	1285532	0	True				
ANR	1285556	AssignmentExpression	par -> adjust = NULL		1285532	0		=			
ANR	1285557	PtrMemberAccess	par -> adjust		1285532	0					
ANR	1285558	Identifier	par		1285532	0					
ANR	1285559	Identifier	adjust		1285532	1					
ANR	1285560	Identifier	NULL		1285532	1					
ANR	1285561	ElseStatement	else		1285532	0					
ANR	1285562	IfStatement	if ( par -> g == 1.0 && ff_gCpuCaps . hasMMX )		1285532	0					
ANR	1285563	Condition	par -> g == 1.0 && ff_gCpuCaps . hasMMX	17:11:221:255	1285532	0	True				
ANR	1285564	AndExpression	par -> g == 1.0 && ff_gCpuCaps . hasMMX		1285532	0		&&			
ANR	1285565	EqualityExpression	par -> g == 1.0		1285532	0		==			
ANR	1285566	PtrMemberAccess	par -> g		1285532	0					
ANR	1285567	Identifier	par		1285532	0					
ANR	1285568	Identifier	g		1285532	1					
ANR	1285569	PrimaryExpression	1.0		1285532	1					
ANR	1285570	MemberAccess	ff_gCpuCaps . hasMMX		1285532	1					
ANR	1285571	Identifier	ff_gCpuCaps		1285532	0					
ANR	1285572	Identifier	hasMMX		1285532	1					
ANR	1285573	CompoundStatement		15:48:219:219	1285532	1					
ANR	1285574	ExpressionStatement	par -> adjust = & affine_1d_MMX	19:4:265:293	1285532	0	True				
ANR	1285575	AssignmentExpression	par -> adjust = & affine_1d_MMX		1285532	0		=			
ANR	1285576	PtrMemberAccess	par -> adjust		1285532	0					
ANR	1285577	Identifier	par		1285532	0					
ANR	1285578	Identifier	adjust		1285532	1					
ANR	1285579	UnaryOperationExpression	& affine_1d_MMX		1285532	1					
ANR	1285580	UnaryOperator	&		1285532	0					
ANR	1285581	Identifier	affine_1d_MMX		1285532	1					
ANR	1285582	ElseStatement	else		1285532	0					
ANR	1285583	CompoundStatement		23:7:277:277	1285532	0					
ANR	1285584	ExpressionStatement	par -> adjust = & apply_lut	27:4:323:347	1285532	0	True				
ANR	1285585	AssignmentExpression	par -> adjust = & apply_lut		1285532	0		=			
ANR	1285586	PtrMemberAccess	par -> adjust		1285532	0					
ANR	1285587	Identifier	par		1285532	0					
ANR	1285588	Identifier	adjust		1285532	1					
ANR	1285589	UnaryOperationExpression	& apply_lut		1285532	1					
ANR	1285590	UnaryOperator	&		1285532	0					
ANR	1285591	Identifier	apply_lut		1285532	1					
ANR	1285592	ReturnType	void		1285532	1					
ANR	1285593	Identifier	check_values		1285532	2					
ANR	1285594	ParameterList	eq2_param_t * par		1285532	3					
ANR	1285595	Parameter	eq2_param_t * par	1:19:19:34	1285532	0	True				
ANR	1285596	ParameterType	eq2_param_t *		1285532	0					
ANR	1285597	Identifier	par		1285532	1					
ANR	1285598	CFGEntryNode	ENTRY		1285532		True				
ANR	1285599	CFGExitNode	EXIT		1285532		True				
ANR	1285600	Symbol	par		1285532						
ANR	1285601	Symbol	ff_gCpuCaps		1285532						
ANR	1285602	Symbol	par -> b		1285532						
ANR	1285603	Symbol	& affine_1d_MMX		1285532						
ANR	1285604	Symbol	par -> c		1285532						
ANR	1285605	Symbol	NULL		1285532						
ANR	1285606	Symbol	par -> adjust		1285532						
ANR	1285607	Symbol	par -> g		1285532						
ANR	1285608	Symbol	ff_gCpuCaps . hasMMX		1285532						
ANR	1285609	Symbol	* par		1285532						
ANR	1285610	Symbol	& apply_lut		1285532						
