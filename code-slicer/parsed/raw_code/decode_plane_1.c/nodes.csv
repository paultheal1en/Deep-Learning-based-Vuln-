command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2006567	File	/home/p4ultr4n/workplace/ReVeal/raw_code/decode_plane_1.c								
ANR	2006568	Function	decode_plane	1:0:0:1504							
ANR	2006569	FunctionDef	"decode_plane (FFV1Context * s , uint8_t * src , int w , int h , int stride , int plane_index , int pixel_stride)"		2006568	0					
ANR	2006570	CompoundStatement		7:0:169:1504	2006568	0					
ANR	2006571	IdentifierDeclStatement	"int x , y ;"	9:4:176:184	2006568	0	True				
ANR	2006572	IdentifierDecl	x		2006568	0					
ANR	2006573	IdentifierDeclType	int		2006568	0					
ANR	2006574	Identifier	x		2006568	1					
ANR	2006575	IdentifierDecl	y		2006568	1					
ANR	2006576	IdentifierDeclType	int		2006568	0					
ANR	2006577	Identifier	y		2006568	1					
ANR	2006578	IdentifierDeclStatement	int16_t * sample [ 2 ] ;	11:4:191:209	2006568	1	True				
ANR	2006579	IdentifierDecl	* sample [ 2 ]		2006568	0					
ANR	2006580	IdentifierDeclType	int16_t * [ 2 ]		2006568	0					
ANR	2006581	Identifier	sample		2006568	1					
ANR	2006582	PrimaryExpression	2		2006568	2					
ANR	2006583	ExpressionStatement	sample [ 0 ] = s -> sample_buffer + 3	13:4:216:248	2006568	2	True				
ANR	2006584	AssignmentExpression	sample [ 0 ] = s -> sample_buffer + 3		2006568	0		=			
ANR	2006585	ArrayIndexing	sample [ 0 ]		2006568	0					
ANR	2006586	Identifier	sample		2006568	0					
ANR	2006587	PrimaryExpression	0		2006568	1					
ANR	2006588	AdditiveExpression	s -> sample_buffer + 3		2006568	1		+			
ANR	2006589	PtrMemberAccess	s -> sample_buffer		2006568	0					
ANR	2006590	Identifier	s		2006568	0					
ANR	2006591	Identifier	sample_buffer		2006568	1					
ANR	2006592	PrimaryExpression	3		2006568	1					
ANR	2006593	ExpressionStatement	sample [ 1 ] = s -> sample_buffer + w + 6 + 3	15:4:255:295	2006568	3	True				
ANR	2006594	AssignmentExpression	sample [ 1 ] = s -> sample_buffer + w + 6 + 3		2006568	0		=			
ANR	2006595	ArrayIndexing	sample [ 1 ]		2006568	0					
ANR	2006596	Identifier	sample		2006568	0					
ANR	2006597	PrimaryExpression	1		2006568	1					
ANR	2006598	AdditiveExpression	s -> sample_buffer + w + 6 + 3		2006568	1		+			
ANR	2006599	PtrMemberAccess	s -> sample_buffer		2006568	0					
ANR	2006600	Identifier	s		2006568	0					
ANR	2006601	Identifier	sample_buffer		2006568	1					
ANR	2006602	AdditiveExpression	w + 6 + 3		2006568	1		+			
ANR	2006603	Identifier	w		2006568	0					
ANR	2006604	AdditiveExpression	6 + 3		2006568	1		+			
ANR	2006605	PrimaryExpression	6		2006568	0					
ANR	2006606	PrimaryExpression	3		2006568	1					
ANR	2006607	ExpressionStatement	s -> run_index = 0	19:4:304:320	2006568	4	True				
ANR	2006608	AssignmentExpression	s -> run_index = 0		2006568	0		=			
ANR	2006609	PtrMemberAccess	s -> run_index		2006568	0					
ANR	2006610	Identifier	s		2006568	0					
ANR	2006611	Identifier	run_index		2006568	1					
ANR	2006612	PrimaryExpression	0		2006568	1					
ANR	2006613	ExpressionStatement	"memset ( s -> sample_buffer , 0 , 2 * ( w + 6 ) * sizeof ( * s -> sample_buffer ) )"	23:4:329:397	2006568	5	True				
ANR	2006614	CallExpression	"memset ( s -> sample_buffer , 0 , 2 * ( w + 6 ) * sizeof ( * s -> sample_buffer ) )"		2006568	0					
ANR	2006615	Callee	memset		2006568	0					
ANR	2006616	Identifier	memset		2006568	0					
ANR	2006617	ArgumentList	s -> sample_buffer		2006568	1					
ANR	2006618	Argument	s -> sample_buffer		2006568	0					
ANR	2006619	PtrMemberAccess	s -> sample_buffer		2006568	0					
ANR	2006620	Identifier	s		2006568	0					
ANR	2006621	Identifier	sample_buffer		2006568	1					
ANR	2006622	Argument	0		2006568	1					
ANR	2006623	PrimaryExpression	0		2006568	0					
ANR	2006624	Argument	2 * ( w + 6 ) * sizeof ( * s -> sample_buffer )		2006568	2					
ANR	2006625	MultiplicativeExpression	2 * ( w + 6 ) * sizeof ( * s -> sample_buffer )		2006568	0		*			
ANR	2006626	PrimaryExpression	2		2006568	0					
ANR	2006627	MultiplicativeExpression	( w + 6 ) * sizeof ( * s -> sample_buffer )		2006568	1		*			
ANR	2006628	AdditiveExpression	w + 6		2006568	0		+			
ANR	2006629	Identifier	w		2006568	0					
ANR	2006630	PrimaryExpression	6		2006568	1					
ANR	2006631	SizeofExpression	sizeof ( * s -> sample_buffer )		2006568	1					
ANR	2006632	Sizeof	sizeof		2006568	0					
ANR	2006633	UnaryOperationExpression	* s -> sample_buffer		2006568	1					
ANR	2006634	UnaryOperator	*		2006568	0					
ANR	2006635	PtrMemberAccess	s -> sample_buffer		2006568	1					
ANR	2006636	Identifier	s		2006568	0					
ANR	2006637	Identifier	sample_buffer		2006568	1					
ANR	2006638	ForStatement	for ( y = 0 ; y < h ; y ++ )		2006568	6					
ANR	2006639	ForInit	y = 0 ;	27:9:411:416	2006568	0	True				
ANR	2006640	AssignmentExpression	y = 0		2006568	0		=			
ANR	2006641	Identifier	y		2006568	0					
ANR	2006642	PrimaryExpression	0		2006568	1					
ANR	2006643	Condition	y < h	27:16:418:422	2006568	1	True				
ANR	2006644	RelationalExpression	y < h		2006568	0		<			
ANR	2006645	Identifier	y		2006568	0					
ANR	2006646	Identifier	h		2006568	1					
ANR	2006647	PostIncDecOperationExpression	y ++	27:23:425:427	2006568	2	True				
ANR	2006648	Identifier	y		2006568	0					
ANR	2006649	IncDec	++		2006568	1					
ANR	2006650	CompoundStatement		23:8:271:296	2006568	3					
ANR	2006651	IdentifierDeclStatement	int16_t * temp = sample [ 0 ] ;	29:8:441:466	2006568	0	True				
ANR	2006652	IdentifierDecl	* temp = sample [ 0 ]		2006568	0					
ANR	2006653	IdentifierDeclType	int16_t *		2006568	0					
ANR	2006654	Identifier	temp		2006568	1					
ANR	2006655	AssignmentExpression	* temp = sample [ 0 ]		2006568	2		=			
ANR	2006656	Identifier	temp		2006568	0					
ANR	2006657	ArrayIndexing	sample [ 0 ]		2006568	1					
ANR	2006658	Identifier	sample		2006568	0					
ANR	2006659	PrimaryExpression	0		2006568	1					
ANR	2006660	ExpressionStatement	sample [ 0 ] = sample [ 1 ]	33:8:509:530	2006568	1	True				
ANR	2006661	AssignmentExpression	sample [ 0 ] = sample [ 1 ]		2006568	0		=			
ANR	2006662	ArrayIndexing	sample [ 0 ]		2006568	0					
ANR	2006663	Identifier	sample		2006568	0					
ANR	2006664	PrimaryExpression	0		2006568	1					
ANR	2006665	ArrayIndexing	sample [ 1 ]		2006568	1					
ANR	2006666	Identifier	sample		2006568	0					
ANR	2006667	PrimaryExpression	1		2006568	1					
ANR	2006668	ExpressionStatement	sample [ 1 ] = temp	35:8:541:557	2006568	2	True				
ANR	2006669	AssignmentExpression	sample [ 1 ] = temp		2006568	0		=			
ANR	2006670	ArrayIndexing	sample [ 1 ]		2006568	0					
ANR	2006671	Identifier	sample		2006568	0					
ANR	2006672	PrimaryExpression	1		2006568	1					
ANR	2006673	Identifier	temp		2006568	1					
ANR	2006674	ExpressionStatement	sample [ 1 ] [ - 1 ] = sample [ 0 ] [ 0 ]	39:8:570:598	2006568	3	True				
ANR	2006675	AssignmentExpression	sample [ 1 ] [ - 1 ] = sample [ 0 ] [ 0 ]		2006568	0		=			
ANR	2006676	ArrayIndexing	sample [ 1 ] [ - 1 ]		2006568	0					
ANR	2006677	ArrayIndexing	sample [ 1 ]		2006568	0					
ANR	2006678	Identifier	sample		2006568	0					
ANR	2006679	PrimaryExpression	1		2006568	1					
ANR	2006680	UnaryOperationExpression	- 1		2006568	1					
ANR	2006681	UnaryOperator	-		2006568	0					
ANR	2006682	PrimaryExpression	1		2006568	1					
ANR	2006683	ArrayIndexing	sample [ 0 ] [ 0 ]		2006568	1					
ANR	2006684	ArrayIndexing	sample [ 0 ]		2006568	0					
ANR	2006685	Identifier	sample		2006568	0					
ANR	2006686	PrimaryExpression	0		2006568	1					
ANR	2006687	PrimaryExpression	0		2006568	1					
ANR	2006688	ExpressionStatement	sample [ 0 ] [ w ] = sample [ 0 ] [ w - 1 ]	41:8:609:641	2006568	4	True				
ANR	2006689	AssignmentExpression	sample [ 0 ] [ w ] = sample [ 0 ] [ w - 1 ]		2006568	0		=			
ANR	2006690	ArrayIndexing	sample [ 0 ] [ w ]		2006568	0					
ANR	2006691	ArrayIndexing	sample [ 0 ]		2006568	0					
ANR	2006692	Identifier	sample		2006568	0					
ANR	2006693	PrimaryExpression	0		2006568	1					
ANR	2006694	Identifier	w		2006568	1					
ANR	2006695	ArrayIndexing	sample [ 0 ] [ w - 1 ]		2006568	1					
ANR	2006696	ArrayIndexing	sample [ 0 ]		2006568	0					
ANR	2006697	Identifier	sample		2006568	0					
ANR	2006698	PrimaryExpression	0		2006568	1					
ANR	2006699	AdditiveExpression	w - 1		2006568	1		-			
ANR	2006700	Identifier	w		2006568	0					
ANR	2006701	PrimaryExpression	1		2006568	1					
ANR	2006702	IfStatement	if ( s -> avctx -> bits_per_raw_sample <= 8 )		2006568	5					
ANR	2006703	Condition	s -> avctx -> bits_per_raw_sample <= 8	47:12:676:709	2006568	0	True				
ANR	2006704	RelationalExpression	s -> avctx -> bits_per_raw_sample <= 8		2006568	0		<=			
ANR	2006705	PtrMemberAccess	s -> avctx -> bits_per_raw_sample		2006568	0					
ANR	2006706	PtrMemberAccess	s -> avctx		2006568	0					
ANR	2006707	Identifier	s		2006568	0					
ANR	2006708	Identifier	avctx		2006568	1					
ANR	2006709	Identifier	bits_per_raw_sample		2006568	1					
ANR	2006710	PrimaryExpression	8		2006568	1					
ANR	2006711	CompoundStatement		41:48:542:542	2006568	1					
ANR	2006712	ExpressionStatement	"decode_line ( s , w , sample , plane_index , 8 )"	49:12:727:768	2006568	0	True				
ANR	2006713	CallExpression	"decode_line ( s , w , sample , plane_index , 8 )"		2006568	0					
ANR	2006714	Callee	decode_line		2006568	0					
ANR	2006715	Identifier	decode_line		2006568	0					
ANR	2006716	ArgumentList	s		2006568	1					
ANR	2006717	Argument	s		2006568	0					
ANR	2006718	Identifier	s		2006568	0					
ANR	2006719	Argument	w		2006568	1					
ANR	2006720	Identifier	w		2006568	0					
ANR	2006721	Argument	sample		2006568	2					
ANR	2006722	Identifier	sample		2006568	0					
ANR	2006723	Argument	plane_index		2006568	3					
ANR	2006724	Identifier	plane_index		2006568	0					
ANR	2006725	Argument	8		2006568	4					
ANR	2006726	PrimaryExpression	8		2006568	0					
ANR	2006727	ForStatement	for ( x = 0 ; x < w ; x ++ )		2006568	1					
ANR	2006728	ForInit	x = 0 ;	51:17:788:793	2006568	0	True				
ANR	2006729	AssignmentExpression	x = 0		2006568	0		=			
ANR	2006730	Identifier	x		2006568	0					
ANR	2006731	PrimaryExpression	0		2006568	1					
ANR	2006732	Condition	x < w	51:24:795:799	2006568	1	True				
ANR	2006733	RelationalExpression	x < w		2006568	0		<			
ANR	2006734	Identifier	x		2006568	0					
ANR	2006735	Identifier	w		2006568	1					
ANR	2006736	PostIncDecOperationExpression	x ++	51:31:802:804	2006568	2	True				
ANR	2006737	Identifier	x		2006568	0					
ANR	2006738	IncDec	++		2006568	1					
ANR	2006739	ExpressionStatement	src [ x * pixel_stride + stride * y ] = sample [ 1 ] [ x ]	53:16:824:871	2006568	3	True				
ANR	2006740	AssignmentExpression	src [ x * pixel_stride + stride * y ] = sample [ 1 ] [ x ]		2006568	0		=			
ANR	2006741	ArrayIndexing	src [ x * pixel_stride + stride * y ]		2006568	0					
ANR	2006742	Identifier	src		2006568	0					
ANR	2006743	AdditiveExpression	x * pixel_stride + stride * y		2006568	1		+			
ANR	2006744	MultiplicativeExpression	x * pixel_stride		2006568	0		*			
ANR	2006745	Identifier	x		2006568	0					
ANR	2006746	Identifier	pixel_stride		2006568	1					
ANR	2006747	MultiplicativeExpression	stride * y		2006568	1		*			
ANR	2006748	Identifier	stride		2006568	0					
ANR	2006749	Identifier	y		2006568	1					
ANR	2006750	ArrayIndexing	sample [ 1 ] [ x ]		2006568	1					
ANR	2006751	ArrayIndexing	sample [ 1 ]		2006568	0					
ANR	2006752	Identifier	sample		2006568	0					
ANR	2006753	PrimaryExpression	1		2006568	1					
ANR	2006754	Identifier	x		2006568	1					
ANR	2006755	ElseStatement	else		2006568	0					
ANR	2006756	CompoundStatement		49:15:719:719	2006568	0					
ANR	2006757	ExpressionStatement	"decode_line ( s , w , sample , plane_index , s -> avctx -> bits_per_raw_sample )"	57:12:904:973	2006568	0	True				
ANR	2006758	CallExpression	"decode_line ( s , w , sample , plane_index , s -> avctx -> bits_per_raw_sample )"		2006568	0					
ANR	2006759	Callee	decode_line		2006568	0					
ANR	2006760	Identifier	decode_line		2006568	0					
ANR	2006761	ArgumentList	s		2006568	1					
ANR	2006762	Argument	s		2006568	0					
ANR	2006763	Identifier	s		2006568	0					
ANR	2006764	Argument	w		2006568	1					
ANR	2006765	Identifier	w		2006568	0					
ANR	2006766	Argument	sample		2006568	2					
ANR	2006767	Identifier	sample		2006568	0					
ANR	2006768	Argument	plane_index		2006568	3					
ANR	2006769	Identifier	plane_index		2006568	0					
ANR	2006770	Argument	s -> avctx -> bits_per_raw_sample		2006568	4					
ANR	2006771	PtrMemberAccess	s -> avctx -> bits_per_raw_sample		2006568	0					
ANR	2006772	PtrMemberAccess	s -> avctx		2006568	0					
ANR	2006773	Identifier	s		2006568	0					
ANR	2006774	Identifier	avctx		2006568	1					
ANR	2006775	Identifier	bits_per_raw_sample		2006568	1					
ANR	2006776	IfStatement	if ( s -> packed_at_lsb )		2006568	1					
ANR	2006777	Condition	s -> packed_at_lsb	59:16:992:1007	2006568	0	True				
ANR	2006778	PtrMemberAccess	s -> packed_at_lsb		2006568	0					
ANR	2006779	Identifier	s		2006568	0					
ANR	2006780	Identifier	packed_at_lsb		2006568	1					
ANR	2006781	CompoundStatement		53:34:840:840	2006568	1					
ANR	2006782	ForStatement	for ( x = 0 ; x < w ; x ++ )		2006568	0					
ANR	2006783	ForInit	x = 0 ;	61:21:1034:1039	2006568	0	True				
ANR	2006784	AssignmentExpression	x = 0		2006568	0		=			
ANR	2006785	Identifier	x		2006568	0					
ANR	2006786	PrimaryExpression	0		2006568	1					
ANR	2006787	Condition	x < w	61:28:1041:1045	2006568	1	True				
ANR	2006788	RelationalExpression	x < w		2006568	0		<			
ANR	2006789	Identifier	x		2006568	0					
ANR	2006790	Identifier	w		2006568	1					
ANR	2006791	PostIncDecOperationExpression	x ++	61:35:1048:1050	2006568	2	True				
ANR	2006792	Identifier	x		2006568	0					
ANR	2006793	IncDec	++		2006568	1					
ANR	2006794	CompoundStatement		55:40:883:883	2006568	3					
ANR	2006795	ExpressionStatement	( ( uint16_t * ) ( src + stride * y ) ) [ x * pixel_stride ] = sample [ 1 ] [ x ]	63:20:1076:1136	2006568	0	True				
ANR	2006796	AssignmentExpression	( ( uint16_t * ) ( src + stride * y ) ) [ x * pixel_stride ] = sample [ 1 ] [ x ]		2006568	0		=			
ANR	2006797	ArrayIndexing	( ( uint16_t * ) ( src + stride * y ) ) [ x * pixel_stride ]		2006568	0					
ANR	2006798	CastExpression	( uint16_t * ) ( src + stride * y )		2006568	0					
ANR	2006799	CastTarget	uint16_t *		2006568	0					
ANR	2006800	AdditiveExpression	src + stride * y		2006568	1		+			
ANR	2006801	Identifier	src		2006568	0					
ANR	2006802	MultiplicativeExpression	stride * y		2006568	1		*			
ANR	2006803	Identifier	stride		2006568	0					
ANR	2006804	Identifier	y		2006568	1					
ANR	2006805	MultiplicativeExpression	x * pixel_stride		2006568	1		*			
ANR	2006806	Identifier	x		2006568	0					
ANR	2006807	Identifier	pixel_stride		2006568	1					
ANR	2006808	ArrayIndexing	sample [ 1 ] [ x ]		2006568	1					
ANR	2006809	ArrayIndexing	sample [ 1 ]		2006568	0					
ANR	2006810	Identifier	sample		2006568	0					
ANR	2006811	PrimaryExpression	1		2006568	1					
ANR	2006812	Identifier	x		2006568	1					
ANR	2006813	ElseStatement	else		2006568	0					
ANR	2006814	CompoundStatement		61:19:1007:1007	2006568	0					
ANR	2006815	ForStatement	for ( x = 0 ; x < w ; x ++ )		2006568	0					
ANR	2006816	ForInit	x = 0 ;	69:21:1201:1206	2006568	0	True				
ANR	2006817	AssignmentExpression	x = 0		2006568	0		=			
ANR	2006818	Identifier	x		2006568	0					
ANR	2006819	PrimaryExpression	0		2006568	1					
ANR	2006820	Condition	x < w	69:28:1208:1212	2006568	1	True				
ANR	2006821	RelationalExpression	x < w		2006568	0		<			
ANR	2006822	Identifier	x		2006568	0					
ANR	2006823	Identifier	w		2006568	1					
ANR	2006824	PostIncDecOperationExpression	x ++	69:35:1215:1217	2006568	2	True				
ANR	2006825	Identifier	x		2006568	0					
ANR	2006826	IncDec	++		2006568	1					
ANR	2006827	CompoundStatement		63:40:1050:1050	2006568	3					
ANR	2006828	ExpressionStatement	( ( uint16_t * ) ( src + stride * y ) ) [ x * pixel_stride ] = sample [ 1 ] [ x ] << ( 16 - s -> avctx -> bits_per_raw_sample ) | ( ( uint16_t * * ) sample ) [ 1 ] [ x ] >> ( 2 * s -> avctx -> bits_per_raw_sample - 16 )	71:20:1243:1417	2006568	0	True				
ANR	2006829	AssignmentExpression	( ( uint16_t * ) ( src + stride * y ) ) [ x * pixel_stride ] = sample [ 1 ] [ x ] << ( 16 - s -> avctx -> bits_per_raw_sample ) | ( ( uint16_t * * ) sample ) [ 1 ] [ x ] >> ( 2 * s -> avctx -> bits_per_raw_sample - 16 )		2006568	0		=			
ANR	2006830	ArrayIndexing	( ( uint16_t * ) ( src + stride * y ) ) [ x * pixel_stride ]		2006568	0					
ANR	2006831	CastExpression	( uint16_t * ) ( src + stride * y )		2006568	0					
ANR	2006832	CastTarget	uint16_t *		2006568	0					
ANR	2006833	AdditiveExpression	src + stride * y		2006568	1		+			
ANR	2006834	Identifier	src		2006568	0					
ANR	2006835	MultiplicativeExpression	stride * y		2006568	1		*			
ANR	2006836	Identifier	stride		2006568	0					
ANR	2006837	Identifier	y		2006568	1					
ANR	2006838	MultiplicativeExpression	x * pixel_stride		2006568	1		*			
ANR	2006839	Identifier	x		2006568	0					
ANR	2006840	Identifier	pixel_stride		2006568	1					
ANR	2006841	InclusiveOrExpression	sample [ 1 ] [ x ] << ( 16 - s -> avctx -> bits_per_raw_sample ) | ( ( uint16_t * * ) sample ) [ 1 ] [ x ] >> ( 2 * s -> avctx -> bits_per_raw_sample - 16 )		2006568	1		|			
ANR	2006842	ShiftExpression	sample [ 1 ] [ x ] << ( 16 - s -> avctx -> bits_per_raw_sample )		2006568	0		<<			
ANR	2006843	ArrayIndexing	sample [ 1 ] [ x ]		2006568	0					
ANR	2006844	ArrayIndexing	sample [ 1 ]		2006568	0					
ANR	2006845	Identifier	sample		2006568	0					
ANR	2006846	PrimaryExpression	1		2006568	1					
ANR	2006847	Identifier	x		2006568	1					
ANR	2006848	AdditiveExpression	16 - s -> avctx -> bits_per_raw_sample		2006568	1		-			
ANR	2006849	PrimaryExpression	16		2006568	0					
ANR	2006850	PtrMemberAccess	s -> avctx -> bits_per_raw_sample		2006568	1					
ANR	2006851	PtrMemberAccess	s -> avctx		2006568	0					
ANR	2006852	Identifier	s		2006568	0					
ANR	2006853	Identifier	avctx		2006568	1					
ANR	2006854	Identifier	bits_per_raw_sample		2006568	1					
ANR	2006855	ShiftExpression	( ( uint16_t * * ) sample ) [ 1 ] [ x ] >> ( 2 * s -> avctx -> bits_per_raw_sample - 16 )		2006568	1		>>			
ANR	2006856	ArrayIndexing	( ( uint16_t * * ) sample ) [ 1 ] [ x ]		2006568	0					
ANR	2006857	ArrayIndexing	( ( uint16_t * * ) sample ) [ 1 ]		2006568	0					
ANR	2006858	CastExpression	( uint16_t * * ) sample		2006568	0					
ANR	2006859	CastTarget	uint16_t * *		2006568	0					
ANR	2006860	Identifier	sample		2006568	1					
ANR	2006861	PrimaryExpression	1		2006568	1					
ANR	2006862	Identifier	x		2006568	1					
ANR	2006863	AdditiveExpression	2 * s -> avctx -> bits_per_raw_sample - 16		2006568	1		-			
ANR	2006864	MultiplicativeExpression	2 * s -> avctx -> bits_per_raw_sample		2006568	0		*			
ANR	2006865	PrimaryExpression	2		2006568	0					
ANR	2006866	PtrMemberAccess	s -> avctx -> bits_per_raw_sample		2006568	1					
ANR	2006867	PtrMemberAccess	s -> avctx		2006568	0					
ANR	2006868	Identifier	s		2006568	0					
ANR	2006869	Identifier	avctx		2006568	1					
ANR	2006870	Identifier	bits_per_raw_sample		2006568	1					
ANR	2006871	PrimaryExpression	16		2006568	1					
ANR	2006872	ReturnType	static void		2006568	1					
ANR	2006873	Identifier	decode_plane		2006568	2					
ANR	2006874	ParameterList	"FFV1Context * s , uint8_t * src , int w , int h , int stride , int plane_index , int pixel_stride"		2006568	3					
ANR	2006875	Parameter	FFV1Context * s	1:25:25:38	2006568	0	True				
ANR	2006876	ParameterType	FFV1Context *		2006568	0					
ANR	2006877	Identifier	s		2006568	1					
ANR	2006878	Parameter	uint8_t * src	1:41:41:52	2006568	1	True				
ANR	2006879	ParameterType	uint8_t *		2006568	0					
ANR	2006880	Identifier	src		2006568	1					
ANR	2006881	Parameter	int w	3:25:81:85	2006568	2	True				
ANR	2006882	ParameterType	int		2006568	0					
ANR	2006883	Identifier	w		2006568	1					
ANR	2006884	Parameter	int h	3:32:88:92	2006568	3	True				
ANR	2006885	ParameterType	int		2006568	0					
ANR	2006886	Identifier	h		2006568	1					
ANR	2006887	Parameter	int stride	3:39:95:104	2006568	4	True				
ANR	2006888	ParameterType	int		2006568	0					
ANR	2006889	Identifier	stride		2006568	1					
ANR	2006890	Parameter	int plane_index	3:51:107:121	2006568	5	True				
ANR	2006891	ParameterType	int		2006568	0					
ANR	2006892	Identifier	plane_index		2006568	1					
ANR	2006893	Parameter	int pixel_stride	5:25:150:165	2006568	6	True				
ANR	2006894	ParameterType	int		2006568	0					
ANR	2006895	Identifier	pixel_stride		2006568	1					
ANR	2006896	CFGEntryNode	ENTRY		2006568		True				
ANR	2006897	CFGExitNode	EXIT		2006568		True				
ANR	2006898	Symbol	* w		2006568						
ANR	2006899	Symbol	* stride		2006568						
ANR	2006900	Symbol	* x		2006568						
ANR	2006901	Symbol	* y		2006568						
ANR	2006902	Symbol	pixel_stride		2006568						
ANR	2006903	Symbol	* s -> sample_buffer		2006568						
ANR	2006904	Symbol	plane_index		2006568						
ANR	2006905	Symbol	s -> run_index		2006568						
ANR	2006906	Symbol	s -> avctx -> bits_per_raw_sample		2006568						
ANR	2006907	Symbol	stride		2006568						
ANR	2006908	Symbol	* * sample		2006568						
ANR	2006909	Symbol	* src		2006568						
ANR	2006910	Symbol	* pixel_stride		2006568						
ANR	2006911	Symbol	* * s		2006568						
ANR	2006912	Symbol	* sample		2006568						
ANR	2006913	Symbol	s -> sample_buffer		2006568						
ANR	2006914	Symbol	* s -> avctx		2006568						
ANR	2006915	Symbol	temp		2006568						
ANR	2006916	Symbol	src		2006568						
ANR	2006917	Symbol	h		2006568						
ANR	2006918	Symbol	sample		2006568						
ANR	2006919	Symbol	s -> packed_at_lsb		2006568						
ANR	2006920	Symbol	s		2006568						
ANR	2006921	Symbol	w		2006568						
ANR	2006922	Symbol	x		2006568						
ANR	2006923	Symbol	y		2006568						
ANR	2006924	Symbol	s -> avctx		2006568						
ANR	2006925	Symbol	* s		2006568						
