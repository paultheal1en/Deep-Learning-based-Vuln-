command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3602110	File	/home/p4ultr4n/workplace/ReVeal/raw_code/ff_print_debug_info2_0.c								
ANR	3602111	Function	ff_print_debug_info2	1:0:0:18912							
ANR	3602112	FunctionDef	"ff_print_debug_info2 (AVCodecContext * avctx , AVFrame * pict , uint8_t * mbskip_table , uint32_t * mbtype_table , int8_t * qscale_table , int16_t ( * motion_val [ 2 ] ) [ 2 ] , int * low_delay , int mb_width , int mb_height , int mb_stride , int quarter_sample)"		3602111	0					
ANR	3602113	CompoundStatement		9:0:321:18912	3602111	0					
ANR	3602114	IfStatement	if ( ( avctx -> flags2 & AV_CODEC_FLAG2_EXPORT_MVS ) && mbtype_table && motion_val [ 0 ] )		3602111	0					
ANR	3602115	Condition	( avctx -> flags2 & AV_CODEC_FLAG2_EXPORT_MVS ) && mbtype_table && motion_val [ 0 ]	11:8:332:407	3602111	0	True				
ANR	3602116	AndExpression	( avctx -> flags2 & AV_CODEC_FLAG2_EXPORT_MVS ) && mbtype_table && motion_val [ 0 ]		3602111	0		&&			
ANR	3602117	BitAndExpression	avctx -> flags2 & AV_CODEC_FLAG2_EXPORT_MVS		3602111	0		&			
ANR	3602118	PtrMemberAccess	avctx -> flags2		3602111	0					
ANR	3602119	Identifier	avctx		3602111	0					
ANR	3602120	Identifier	flags2		3602111	1					
ANR	3602121	Identifier	AV_CODEC_FLAG2_EXPORT_MVS		3602111	1					
ANR	3602122	AndExpression	mbtype_table && motion_val [ 0 ]		3602111	1		&&			
ANR	3602123	Identifier	mbtype_table		3602111	0					
ANR	3602124	ArrayIndexing	motion_val [ 0 ]		3602111	1					
ANR	3602125	Identifier	motion_val		3602111	0					
ANR	3602126	PrimaryExpression	0		3602111	1					
ANR	3602127	CompoundStatement		21:8:604:695	3602111	1					
ANR	3602128	IdentifierDeclStatement	const int shift = 1 + quarter_sample ;	13:8:421:457	3602111	0	True				
ANR	3602129	IdentifierDecl	shift = 1 + quarter_sample		3602111	0					
ANR	3602130	IdentifierDeclType	const int		3602111	0					
ANR	3602131	Identifier	shift		3602111	1					
ANR	3602132	AssignmentExpression	shift = 1 + quarter_sample		3602111	2		=			
ANR	3602133	Identifier	shift		3602111	0					
ANR	3602134	AdditiveExpression	1 + quarter_sample		3602111	1		+			
ANR	3602135	PrimaryExpression	1		3602111	0					
ANR	3602136	Identifier	quarter_sample		3602111	1					
ANR	3602137	IdentifierDeclStatement	const int mv_sample_log2 = avctx -> codec_id == AV_CODEC_ID_H264 || avctx -> codec_id == AV_CODEC_ID_SVQ3 ? 2 : 1 ;	15:8:468:577	3602111	1	True				
ANR	3602138	IdentifierDecl	mv_sample_log2 = avctx -> codec_id == AV_CODEC_ID_H264 || avctx -> codec_id == AV_CODEC_ID_SVQ3 ? 2 : 1		3602111	0					
ANR	3602139	IdentifierDeclType	const int		3602111	0					
ANR	3602140	Identifier	mv_sample_log2		3602111	1					
ANR	3602141	AssignmentExpression	mv_sample_log2 = avctx -> codec_id == AV_CODEC_ID_H264 || avctx -> codec_id == AV_CODEC_ID_SVQ3 ? 2 : 1		3602111	2		=			
ANR	3602142	Identifier	mv_sample_log2		3602111	0					
ANR	3602143	ConditionalExpression	avctx -> codec_id == AV_CODEC_ID_H264 || avctx -> codec_id == AV_CODEC_ID_SVQ3 ? 2 : 1		3602111	1					
ANR	3602144	Condition	avctx -> codec_id == AV_CODEC_ID_H264 || avctx -> codec_id == AV_CODEC_ID_SVQ3		3602111	0					
ANR	3602145	OrExpression	avctx -> codec_id == AV_CODEC_ID_H264 || avctx -> codec_id == AV_CODEC_ID_SVQ3		3602111	0		||			
ANR	3602146	EqualityExpression	avctx -> codec_id == AV_CODEC_ID_H264		3602111	0		==			
ANR	3602147	PtrMemberAccess	avctx -> codec_id		3602111	0					
ANR	3602148	Identifier	avctx		3602111	0					
ANR	3602149	Identifier	codec_id		3602111	1					
ANR	3602150	Identifier	AV_CODEC_ID_H264		3602111	1					
ANR	3602151	EqualityExpression	avctx -> codec_id == AV_CODEC_ID_SVQ3		3602111	1		==			
ANR	3602152	PtrMemberAccess	avctx -> codec_id		3602111	0					
ANR	3602153	Identifier	avctx		3602111	0					
ANR	3602154	Identifier	codec_id		3602111	1					
ANR	3602155	Identifier	AV_CODEC_ID_SVQ3		3602111	1					
ANR	3602156	PrimaryExpression	2		3602111	1					
ANR	3602157	PrimaryExpression	1		3602111	2					
ANR	3602158	IdentifierDeclStatement	const int mv_stride = ( mb_width << mv_sample_log2 ) + ( avctx -> codec -> id == AV_CODEC_ID_H264 ? 0 : 1 ) ;	17:8:588:728	3602111	2	True				
ANR	3602159	IdentifierDecl	mv_stride = ( mb_width << mv_sample_log2 ) + ( avctx -> codec -> id == AV_CODEC_ID_H264 ? 0 : 1 )		3602111	0					
ANR	3602160	IdentifierDeclType	const int		3602111	0					
ANR	3602161	Identifier	mv_stride		3602111	1					
ANR	3602162	AssignmentExpression	mv_stride = ( mb_width << mv_sample_log2 ) + ( avctx -> codec -> id == AV_CODEC_ID_H264 ? 0 : 1 )		3602111	2		=			
ANR	3602163	Identifier	mv_stride		3602111	0					
ANR	3602164	AdditiveExpression	( mb_width << mv_sample_log2 ) + ( avctx -> codec -> id == AV_CODEC_ID_H264 ? 0 : 1 )		3602111	1		+			
ANR	3602165	ShiftExpression	mb_width << mv_sample_log2		3602111	0		<<			
ANR	3602166	Identifier	mb_width		3602111	0					
ANR	3602167	Identifier	mv_sample_log2		3602111	1					
ANR	3602168	ConditionalExpression	avctx -> codec -> id == AV_CODEC_ID_H264 ? 0 : 1		3602111	1					
ANR	3602169	Condition	avctx -> codec -> id == AV_CODEC_ID_H264		3602111	0					
ANR	3602170	EqualityExpression	avctx -> codec -> id == AV_CODEC_ID_H264		3602111	0		==			
ANR	3602171	PtrMemberAccess	avctx -> codec -> id		3602111	0					
ANR	3602172	PtrMemberAccess	avctx -> codec		3602111	0					
ANR	3602173	Identifier	avctx		3602111	0					
ANR	3602174	Identifier	codec		3602111	1					
ANR	3602175	Identifier	id		3602111	1					
ANR	3602176	Identifier	AV_CODEC_ID_H264		3602111	1					
ANR	3602177	PrimaryExpression	0		3602111	1					
ANR	3602178	PrimaryExpression	1		3602111	2					
ANR	3602179	IdentifierDeclStatement	"int mb_x , mb_y , mbcount = 0 ;"	21:8:739:766	3602111	3	True				
ANR	3602180	IdentifierDecl	mb_x		3602111	0					
ANR	3602181	IdentifierDeclType	int		3602111	0					
ANR	3602182	Identifier	mb_x		3602111	1					
ANR	3602183	IdentifierDecl	mb_y		3602111	1					
ANR	3602184	IdentifierDeclType	int		3602111	0					
ANR	3602185	Identifier	mb_y		3602111	1					
ANR	3602186	IdentifierDecl	mbcount = 0		3602111	2					
ANR	3602187	IdentifierDeclType	int		3602111	0					
ANR	3602188	Identifier	mbcount		3602111	1					
ANR	3602189	AssignmentExpression	mbcount = 0		3602111	2		=			
ANR	3602190	Identifier	mbcount		3602111	0					
ANR	3602191	PrimaryExpression	0		3602111	1					
ANR	3602192	IdentifierDeclStatement	"AVMotionVector * mvs = av_malloc_array ( mb_width * mb_height , 2 * 4 * sizeof ( AVMotionVector ) ) ;"	29:8:926:1017	3602111	4	True				
ANR	3602193	IdentifierDecl	"* mvs = av_malloc_array ( mb_width * mb_height , 2 * 4 * sizeof ( AVMotionVector ) )"		3602111	0					
ANR	3602194	IdentifierDeclType	AVMotionVector *		3602111	0					
ANR	3602195	Identifier	mvs		3602111	1					
ANR	3602196	AssignmentExpression	"* mvs = av_malloc_array ( mb_width * mb_height , 2 * 4 * sizeof ( AVMotionVector ) )"		3602111	2		=			
ANR	3602197	Identifier	mvs		3602111	0					
ANR	3602198	CallExpression	"av_malloc_array ( mb_width * mb_height , 2 * 4 * sizeof ( AVMotionVector ) )"		3602111	1					
ANR	3602199	Callee	av_malloc_array		3602111	0					
ANR	3602200	Identifier	av_malloc_array		3602111	0					
ANR	3602201	ArgumentList	mb_width * mb_height		3602111	1					
ANR	3602202	Argument	mb_width * mb_height		3602111	0					
ANR	3602203	MultiplicativeExpression	mb_width * mb_height		3602111	0		*			
ANR	3602204	Identifier	mb_width		3602111	0					
ANR	3602205	Identifier	mb_height		3602111	1					
ANR	3602206	Argument	2 * 4 * sizeof ( AVMotionVector )		3602111	1					
ANR	3602207	MultiplicativeExpression	2 * 4 * sizeof ( AVMotionVector )		3602111	0		*			
ANR	3602208	PrimaryExpression	2		3602111	0					
ANR	3602209	MultiplicativeExpression	4 * sizeof ( AVMotionVector )		3602111	1		*			
ANR	3602210	PrimaryExpression	4		3602111	0					
ANR	3602211	SizeofExpression	sizeof ( AVMotionVector )		3602111	1					
ANR	3602212	Sizeof	sizeof		3602111	0					
ANR	3602213	SizeofOperand	AVMotionVector		3602111	1					
ANR	3602214	IfStatement	if ( ! mvs )		3602111	5					
ANR	3602215	Condition	! mvs	31:12:1032:1035	3602111	0	True				
ANR	3602216	UnaryOperationExpression	! mvs		3602111	0					
ANR	3602217	UnaryOperator	!		3602111	0					
ANR	3602218	Identifier	mvs		3602111	1					
ANR	3602219	ReturnStatement	return ;	33:12:1051:1057	3602111	1	True				
ANR	3602220	ForStatement	for ( mb_y = 0 ; mb_y < mb_height ; mb_y ++ )		3602111	6					
ANR	3602221	ForInit	mb_y = 0 ;	37:13:1075:1083	3602111	0	True				
ANR	3602222	AssignmentExpression	mb_y = 0		3602111	0		=			
ANR	3602223	Identifier	mb_y		3602111	0					
ANR	3602224	PrimaryExpression	0		3602111	1					
ANR	3602225	Condition	mb_y < mb_height	37:23:1085:1100	3602111	1	True				
ANR	3602226	RelationalExpression	mb_y < mb_height		3602111	0		<			
ANR	3602227	Identifier	mb_y		3602111	0					
ANR	3602228	Identifier	mb_height		3602111	1					
ANR	3602229	PostIncDecOperationExpression	mb_y ++	37:41:1103:1108	3602111	2	True				
ANR	3602230	Identifier	mb_y		3602111	0					
ANR	3602231	IncDec	++		3602111	1					
ANR	3602232	CompoundStatement		29:49:789:789	3602111	3					
ANR	3602233	ForStatement	for ( mb_x = 0 ; mb_x < mb_width ; mb_x ++ )		3602111	0					
ANR	3602234	ForInit	mb_x = 0 ;	39:17:1131:1139	3602111	0	True				
ANR	3602235	AssignmentExpression	mb_x = 0		3602111	0		=			
ANR	3602236	Identifier	mb_x		3602111	0					
ANR	3602237	PrimaryExpression	0		3602111	1					
ANR	3602238	Condition	mb_x < mb_width	39:27:1141:1155	3602111	1	True				
ANR	3602239	RelationalExpression	mb_x < mb_width		3602111	0		<			
ANR	3602240	Identifier	mb_x		3602111	0					
ANR	3602241	Identifier	mb_width		3602111	1					
ANR	3602242	PostIncDecOperationExpression	mb_x ++	39:44:1158:1163	3602111	2	True				
ANR	3602243	Identifier	mb_x		3602111	0					
ANR	3602244	IncDec	++		3602111	1					
ANR	3602245	CompoundStatement		33:16:863:928	3602111	3					
ANR	3602246	IdentifierDeclStatement	"int i , direction , mb_type = mbtype_table [ mb_x + mb_y * mb_stride ] ;"	41:16:1185:1250	3602111	0	True				
ANR	3602247	IdentifierDecl	i		3602111	0					
ANR	3602248	IdentifierDeclType	int		3602111	0					
ANR	3602249	Identifier	i		3602111	1					
ANR	3602250	IdentifierDecl	direction		3602111	1					
ANR	3602251	IdentifierDeclType	int		3602111	0					
ANR	3602252	Identifier	direction		3602111	1					
ANR	3602253	IdentifierDecl	mb_type = mbtype_table [ mb_x + mb_y * mb_stride ]		3602111	2					
ANR	3602254	IdentifierDeclType	int		3602111	0					
ANR	3602255	Identifier	mb_type		3602111	1					
ANR	3602256	AssignmentExpression	mb_type = mbtype_table [ mb_x + mb_y * mb_stride ]		3602111	2		=			
ANR	3602257	Identifier	mb_type		3602111	0					
ANR	3602258	ArrayIndexing	mbtype_table [ mb_x + mb_y * mb_stride ]		3602111	1					
ANR	3602259	Identifier	mbtype_table		3602111	0					
ANR	3602260	AdditiveExpression	mb_x + mb_y * mb_stride		3602111	1		+			
ANR	3602261	Identifier	mb_x		3602111	0					
ANR	3602262	MultiplicativeExpression	mb_y * mb_stride		3602111	1		*			
ANR	3602263	Identifier	mb_y		3602111	0					
ANR	3602264	Identifier	mb_stride		3602111	1					
ANR	3602265	ForStatement	for ( direction = 0 ; direction < 2 ; direction ++ )		3602111	1					
ANR	3602266	ForInit	direction = 0 ;	43:21:1274:1287	3602111	0	True				
ANR	3602267	AssignmentExpression	direction = 0		3602111	0		=			
ANR	3602268	Identifier	direction		3602111	0					
ANR	3602269	PrimaryExpression	0		3602111	1					
ANR	3602270	Condition	direction < 2	43:36:1289:1301	3602111	1	True				
ANR	3602271	RelationalExpression	direction < 2		3602111	0		<			
ANR	3602272	Identifier	direction		3602111	0					
ANR	3602273	PrimaryExpression	2		3602111	1					
ANR	3602274	PostIncDecOperationExpression	direction ++	43:51:1304:1314	3602111	2	True				
ANR	3602275	Identifier	direction		3602111	0					
ANR	3602276	IncDec	++		3602111	1					
ANR	3602277	CompoundStatement		35:64:995:995	3602111	3					
ANR	3602278	IfStatement	"if ( ! USES_LIST ( mb_type , direction ) )"		3602111	0					
ANR	3602279	Condition	"! USES_LIST ( mb_type , direction )"	45:24:1344:1373	3602111	0	True				
ANR	3602280	UnaryOperationExpression	"! USES_LIST ( mb_type , direction )"		3602111	0					
ANR	3602281	UnaryOperator	!		3602111	0					
ANR	3602282	CallExpression	"USES_LIST ( mb_type , direction )"		3602111	1					
ANR	3602283	Callee	USES_LIST		3602111	0					
ANR	3602284	Identifier	USES_LIST		3602111	0					
ANR	3602285	ArgumentList	mb_type		3602111	1					
ANR	3602286	Argument	mb_type		3602111	0					
ANR	3602287	Identifier	mb_type		3602111	0					
ANR	3602288	Argument	direction		3602111	1					
ANR	3602289	Identifier	direction		3602111	0					
ANR	3602290	ContinueStatement	continue ;	47:24:1401:1409	3602111	1	True				
ANR	3602291	IfStatement	if ( IS_8X8 ( mb_type ) )		3602111	1					
ANR	3602292	Condition	IS_8X8 ( mb_type )	49:24:1436:1450	3602111	0	True				
ANR	3602293	CallExpression	IS_8X8 ( mb_type )		3602111	0					
ANR	3602294	Callee	IS_8X8		3602111	0					
ANR	3602295	Identifier	IS_8X8		3602111	0					
ANR	3602296	ArgumentList	mb_type		3602111	1					
ANR	3602297	Argument	mb_type		3602111	0					
ANR	3602298	Identifier	mb_type		3602111	0					
ANR	3602299	CompoundStatement		41:41:1131:1131	3602111	1					
ANR	3602300	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		3602111	0					
ANR	3602301	ForInit	i = 0 ;	51:29:1485:1490	3602111	0	True				
ANR	3602302	AssignmentExpression	i = 0		3602111	0		=			
ANR	3602303	Identifier	i		3602111	0					
ANR	3602304	PrimaryExpression	0		3602111	1					
ANR	3602305	Condition	i < 4	51:36:1492:1496	3602111	1	True				
ANR	3602306	RelationalExpression	i < 4		3602111	0		<			
ANR	3602307	Identifier	i		3602111	0					
ANR	3602308	PrimaryExpression	4		3602111	1					
ANR	3602309	PostIncDecOperationExpression	i ++	51:43:1499:1501	3602111	2	True				
ANR	3602310	Identifier	i		3602111	0					
ANR	3602311	IncDec	++		3602111	1					
ANR	3602312	CompoundStatement		55:28:1591:1644	3602111	3					
ANR	3602313	IdentifierDeclStatement	int sx = mb_x * 16 + 4 + 8 * ( i & 1 ) ;	53:28:1535:1571	3602111	0	True				
ANR	3602314	IdentifierDecl	sx = mb_x * 16 + 4 + 8 * ( i & 1 )		3602111	0					
ANR	3602315	IdentifierDeclType	int		3602111	0					
ANR	3602316	Identifier	sx		3602111	1					
ANR	3602317	AssignmentExpression	sx = mb_x * 16 + 4 + 8 * ( i & 1 )		3602111	2		=			
ANR	3602318	Identifier	sx		3602111	0					
ANR	3602319	AdditiveExpression	mb_x * 16 + 4 + 8 * ( i & 1 )		3602111	1		+			
ANR	3602320	MultiplicativeExpression	mb_x * 16		3602111	0		*			
ANR	3602321	Identifier	mb_x		3602111	0					
ANR	3602322	PrimaryExpression	16		3602111	1					
ANR	3602323	AdditiveExpression	4 + 8 * ( i & 1 )		3602111	1		+			
ANR	3602324	PrimaryExpression	4		3602111	0					
ANR	3602325	MultiplicativeExpression	8 * ( i & 1 )		3602111	1		*			
ANR	3602326	PrimaryExpression	8		3602111	0					
ANR	3602327	BitAndExpression	i & 1		3602111	1		&			
ANR	3602328	Identifier	i		3602111	0					
ANR	3602329	PrimaryExpression	1		3602111	1					
ANR	3602330	IdentifierDeclStatement	int sy = mb_y * 16 + 4 + 8 * ( i >> 1 ) ;	55:28:1602:1639	3602111	1	True				
ANR	3602331	IdentifierDecl	sy = mb_y * 16 + 4 + 8 * ( i >> 1 )		3602111	0					
ANR	3602332	IdentifierDeclType	int		3602111	0					
ANR	3602333	Identifier	sy		3602111	1					
ANR	3602334	AssignmentExpression	sy = mb_y * 16 + 4 + 8 * ( i >> 1 )		3602111	2		=			
ANR	3602335	Identifier	sy		3602111	0					
ANR	3602336	AdditiveExpression	mb_y * 16 + 4 + 8 * ( i >> 1 )		3602111	1		+			
ANR	3602337	MultiplicativeExpression	mb_y * 16		3602111	0		*			
ANR	3602338	Identifier	mb_y		3602111	0					
ANR	3602339	PrimaryExpression	16		3602111	1					
ANR	3602340	AdditiveExpression	4 + 8 * ( i >> 1 )		3602111	1		+			
ANR	3602341	PrimaryExpression	4		3602111	0					
ANR	3602342	MultiplicativeExpression	8 * ( i >> 1 )		3602111	1		*			
ANR	3602343	PrimaryExpression	8		3602111	0					
ANR	3602344	ShiftExpression	i >> 1		3602111	1		>>			
ANR	3602345	Identifier	i		3602111	0					
ANR	3602346	PrimaryExpression	1		3602111	1					
ANR	3602347	IdentifierDeclStatement	int xy = ( mb_x * 2 + ( i & 1 ) + ( mb_y * 2 + ( i >> 1 ) ) * mv_stride ) << ( mv_sample_log2 - 1 ) ;	57:28:1670:1798	3602111	2	True				
ANR	3602348	IdentifierDecl	xy = ( mb_x * 2 + ( i & 1 ) + ( mb_y * 2 + ( i >> 1 ) ) * mv_stride ) << ( mv_sample_log2 - 1 )		3602111	0					
ANR	3602349	IdentifierDeclType	int		3602111	0					
ANR	3602350	Identifier	xy		3602111	1					
ANR	3602351	AssignmentExpression	xy = ( mb_x * 2 + ( i & 1 ) + ( mb_y * 2 + ( i >> 1 ) ) * mv_stride ) << ( mv_sample_log2 - 1 )		3602111	2		=			
ANR	3602352	Identifier	xy		3602111	0					
ANR	3602353	ShiftExpression	( mb_x * 2 + ( i & 1 ) + ( mb_y * 2 + ( i >> 1 ) ) * mv_stride ) << ( mv_sample_log2 - 1 )		3602111	1		<<			
ANR	3602354	AdditiveExpression	mb_x * 2 + ( i & 1 ) + ( mb_y * 2 + ( i >> 1 ) ) * mv_stride		3602111	0		+			
ANR	3602355	MultiplicativeExpression	mb_x * 2		3602111	0		*			
ANR	3602356	Identifier	mb_x		3602111	0					
ANR	3602357	PrimaryExpression	2		3602111	1					
ANR	3602358	AdditiveExpression	( i & 1 ) + ( mb_y * 2 + ( i >> 1 ) ) * mv_stride		3602111	1		+			
ANR	3602359	BitAndExpression	i & 1		3602111	0		&			
ANR	3602360	Identifier	i		3602111	0					
ANR	3602361	PrimaryExpression	1		3602111	1					
ANR	3602362	MultiplicativeExpression	( mb_y * 2 + ( i >> 1 ) ) * mv_stride		3602111	1		*			
ANR	3602363	AdditiveExpression	mb_y * 2 + ( i >> 1 )		3602111	0		+			
ANR	3602364	MultiplicativeExpression	mb_y * 2		3602111	0		*			
ANR	3602365	Identifier	mb_y		3602111	0					
ANR	3602366	PrimaryExpression	2		3602111	1					
ANR	3602367	ShiftExpression	i >> 1		3602111	1		>>			
ANR	3602368	Identifier	i		3602111	0					
ANR	3602369	PrimaryExpression	1		3602111	1					
ANR	3602370	Identifier	mv_stride		3602111	1					
ANR	3602371	AdditiveExpression	mv_sample_log2 - 1		3602111	1		-			
ANR	3602372	Identifier	mv_sample_log2		3602111	0					
ANR	3602373	PrimaryExpression	1		3602111	1					
ANR	3602374	IdentifierDeclStatement	int mx = ( motion_val [ direction ] [ xy ] [ 0 ] >> shift ) + sx ;	61:28:1829:1882	3602111	3	True				
ANR	3602375	IdentifierDecl	mx = ( motion_val [ direction ] [ xy ] [ 0 ] >> shift ) + sx		3602111	0					
ANR	3602376	IdentifierDeclType	int		3602111	0					
ANR	3602377	Identifier	mx		3602111	1					
ANR	3602378	AssignmentExpression	mx = ( motion_val [ direction ] [ xy ] [ 0 ] >> shift ) + sx		3602111	2		=			
ANR	3602379	Identifier	mx		3602111	0					
ANR	3602380	AdditiveExpression	( motion_val [ direction ] [ xy ] [ 0 ] >> shift ) + sx		3602111	1		+			
ANR	3602381	ShiftExpression	motion_val [ direction ] [ xy ] [ 0 ] >> shift		3602111	0		>>			
ANR	3602382	ArrayIndexing	motion_val [ direction ] [ xy ] [ 0 ]		3602111	0					
ANR	3602383	ArrayIndexing	motion_val [ direction ] [ xy ]		3602111	0					
ANR	3602384	ArrayIndexing	motion_val [ direction ]		3602111	0					
ANR	3602385	Identifier	motion_val		3602111	0					
ANR	3602386	Identifier	direction		3602111	1					
ANR	3602387	Identifier	xy		3602111	1					
ANR	3602388	PrimaryExpression	0		3602111	1					
ANR	3602389	Identifier	shift		3602111	1					
ANR	3602390	Identifier	sx		3602111	1					
ANR	3602391	IdentifierDeclStatement	int my = ( motion_val [ direction ] [ xy ] [ 1 ] >> shift ) + sy ;	63:28:1913:1966	3602111	4	True				
ANR	3602392	IdentifierDecl	my = ( motion_val [ direction ] [ xy ] [ 1 ] >> shift ) + sy		3602111	0					
ANR	3602393	IdentifierDeclType	int		3602111	0					
ANR	3602394	Identifier	my		3602111	1					
ANR	3602395	AssignmentExpression	my = ( motion_val [ direction ] [ xy ] [ 1 ] >> shift ) + sy		3602111	2		=			
ANR	3602396	Identifier	my		3602111	0					
ANR	3602397	AdditiveExpression	( motion_val [ direction ] [ xy ] [ 1 ] >> shift ) + sy		3602111	1		+			
ANR	3602398	ShiftExpression	motion_val [ direction ] [ xy ] [ 1 ] >> shift		3602111	0		>>			
ANR	3602399	ArrayIndexing	motion_val [ direction ] [ xy ] [ 1 ]		3602111	0					
ANR	3602400	ArrayIndexing	motion_val [ direction ] [ xy ]		3602111	0					
ANR	3602401	ArrayIndexing	motion_val [ direction ]		3602111	0					
ANR	3602402	Identifier	motion_val		3602111	0					
ANR	3602403	Identifier	direction		3602111	1					
ANR	3602404	Identifier	xy		3602111	1					
ANR	3602405	PrimaryExpression	1		3602111	1					
ANR	3602406	Identifier	shift		3602111	1					
ANR	3602407	Identifier	sy		3602111	1					
ANR	3602408	ExpressionStatement	"mbcount += add_mb ( mvs + mbcount , mb_type , sx , sy , mx , my , direction )"	65:28:1997:2065	3602111	5	True				
ANR	3602409	AssignmentExpression	"mbcount += add_mb ( mvs + mbcount , mb_type , sx , sy , mx , my , direction )"		3602111	0		+=			
ANR	3602410	Identifier	mbcount		3602111	0					
ANR	3602411	CallExpression	"add_mb ( mvs + mbcount , mb_type , sx , sy , mx , my , direction )"		3602111	1					
ANR	3602412	Callee	add_mb		3602111	0					
ANR	3602413	Identifier	add_mb		3602111	0					
ANR	3602414	ArgumentList	mvs + mbcount		3602111	1					
ANR	3602415	Argument	mvs + mbcount		3602111	0					
ANR	3602416	AdditiveExpression	mvs + mbcount		3602111	0		+			
ANR	3602417	Identifier	mvs		3602111	0					
ANR	3602418	Identifier	mbcount		3602111	1					
ANR	3602419	Argument	mb_type		3602111	1					
ANR	3602420	Identifier	mb_type		3602111	0					
ANR	3602421	Argument	sx		3602111	2					
ANR	3602422	Identifier	sx		3602111	0					
ANR	3602423	Argument	sy		3602111	3					
ANR	3602424	Identifier	sy		3602111	0					
ANR	3602425	Argument	mx		3602111	4					
ANR	3602426	Identifier	mx		3602111	0					
ANR	3602427	Argument	my		3602111	5					
ANR	3602428	Identifier	my		3602111	0					
ANR	3602429	Argument	direction		3602111	6					
ANR	3602430	Identifier	direction		3602111	0					
ANR	3602431	ElseStatement	else		3602111	0					
ANR	3602432	IfStatement	if ( IS_16X8 ( mb_type ) )		3602111	0					
ANR	3602433	Condition	IS_16X8 ( mb_type )	69:31:2126:2141	3602111	0	True				
ANR	3602434	CallExpression	IS_16X8 ( mb_type )		3602111	0					
ANR	3602435	Callee	IS_16X8		3602111	0					
ANR	3602436	Identifier	IS_16X8		3602111	0					
ANR	3602437	ArgumentList	mb_type		3602111	1					
ANR	3602438	Argument	mb_type		3602111	0					
ANR	3602439	Identifier	mb_type		3602111	0					
ANR	3602440	CompoundStatement		61:49:1822:1822	3602111	1					
ANR	3602441	ForStatement	for ( i = 0 ; i < 2 ; i ++ )		3602111	0					
ANR	3602442	ForInit	i = 0 ;	71:29:2176:2181	3602111	0	True				
ANR	3602443	AssignmentExpression	i = 0		3602111	0		=			
ANR	3602444	Identifier	i		3602111	0					
ANR	3602445	PrimaryExpression	0		3602111	1					
ANR	3602446	Condition	i < 2	71:36:2183:2187	3602111	1	True				
ANR	3602447	RelationalExpression	i < 2		3602111	0		<			
ANR	3602448	Identifier	i		3602111	0					
ANR	3602449	PrimaryExpression	2		3602111	1					
ANR	3602450	PostIncDecOperationExpression	i ++	71:43:2190:2192	3602111	2	True				
ANR	3602451	Identifier	i		3602111	0					
ANR	3602452	IncDec	++		3602111	1					
ANR	3602453	CompoundStatement		73:28:2200:2248	3602111	3					
ANR	3602454	IdentifierDeclStatement	int sx = mb_x * 16 + 8 ;	73:28:2226:2248	3602111	0	True				
ANR	3602455	IdentifierDecl	sx = mb_x * 16 + 8		3602111	0					
ANR	3602456	IdentifierDeclType	int		3602111	0					
ANR	3602457	Identifier	sx		3602111	1					
ANR	3602458	AssignmentExpression	sx = mb_x * 16 + 8		3602111	2		=			
ANR	3602459	Identifier	sx		3602111	0					
ANR	3602460	AdditiveExpression	mb_x * 16 + 8		3602111	1		+			
ANR	3602461	MultiplicativeExpression	mb_x * 16		3602111	0		*			
ANR	3602462	Identifier	mb_x		3602111	0					
ANR	3602463	PrimaryExpression	16		3602111	1					
ANR	3602464	PrimaryExpression	8		3602111	1					
ANR	3602465	IdentifierDeclStatement	int sy = mb_y * 16 + 4 + 8 * i ;	75:28:2279:2309	3602111	1	True				
ANR	3602466	IdentifierDecl	sy = mb_y * 16 + 4 + 8 * i		3602111	0					
ANR	3602467	IdentifierDeclType	int		3602111	0					
ANR	3602468	Identifier	sy		3602111	1					
ANR	3602469	AssignmentExpression	sy = mb_y * 16 + 4 + 8 * i		3602111	2		=			
ANR	3602470	Identifier	sy		3602111	0					
ANR	3602471	AdditiveExpression	mb_y * 16 + 4 + 8 * i		3602111	1		+			
ANR	3602472	MultiplicativeExpression	mb_y * 16		3602111	0		*			
ANR	3602473	Identifier	mb_y		3602111	0					
ANR	3602474	PrimaryExpression	16		3602111	1					
ANR	3602475	AdditiveExpression	4 + 8 * i		3602111	1		+			
ANR	3602476	PrimaryExpression	4		3602111	0					
ANR	3602477	MultiplicativeExpression	8 * i		3602111	1		*			
ANR	3602478	PrimaryExpression	8		3602111	0					
ANR	3602479	Identifier	i		3602111	1					
ANR	3602480	IdentifierDeclStatement	int xy = ( mb_x * 2 + ( mb_y * 2 + i ) * mv_stride ) << ( mv_sample_log2 - 1 ) ;	77:28:2340:2412	3602111	2	True				
ANR	3602481	IdentifierDecl	xy = ( mb_x * 2 + ( mb_y * 2 + i ) * mv_stride ) << ( mv_sample_log2 - 1 )		3602111	0					
ANR	3602482	IdentifierDeclType	int		3602111	0					
ANR	3602483	Identifier	xy		3602111	1					
ANR	3602484	AssignmentExpression	xy = ( mb_x * 2 + ( mb_y * 2 + i ) * mv_stride ) << ( mv_sample_log2 - 1 )		3602111	2		=			
ANR	3602485	Identifier	xy		3602111	0					
ANR	3602486	ShiftExpression	( mb_x * 2 + ( mb_y * 2 + i ) * mv_stride ) << ( mv_sample_log2 - 1 )		3602111	1		<<			
ANR	3602487	AdditiveExpression	mb_x * 2 + ( mb_y * 2 + i ) * mv_stride		3602111	0		+			
ANR	3602488	MultiplicativeExpression	mb_x * 2		3602111	0		*			
ANR	3602489	Identifier	mb_x		3602111	0					
ANR	3602490	PrimaryExpression	2		3602111	1					
ANR	3602491	MultiplicativeExpression	( mb_y * 2 + i ) * mv_stride		3602111	1		*			
ANR	3602492	AdditiveExpression	mb_y * 2 + i		3602111	0		+			
ANR	3602493	MultiplicativeExpression	mb_y * 2		3602111	0		*			
ANR	3602494	Identifier	mb_y		3602111	0					
ANR	3602495	PrimaryExpression	2		3602111	1					
ANR	3602496	Identifier	i		3602111	1					
ANR	3602497	Identifier	mv_stride		3602111	1					
ANR	3602498	AdditiveExpression	mv_sample_log2 - 1		3602111	1		-			
ANR	3602499	Identifier	mv_sample_log2		3602111	0					
ANR	3602500	PrimaryExpression	1		3602111	1					
ANR	3602501	IdentifierDeclStatement	int mx = ( motion_val [ direction ] [ xy ] [ 0 ] >> shift ) ;	79:28:2443:2491	3602111	3	True				
ANR	3602502	IdentifierDecl	mx = ( motion_val [ direction ] [ xy ] [ 0 ] >> shift )		3602111	0					
ANR	3602503	IdentifierDeclType	int		3602111	0					
ANR	3602504	Identifier	mx		3602111	1					
ANR	3602505	AssignmentExpression	mx = ( motion_val [ direction ] [ xy ] [ 0 ] >> shift )		3602111	2		=			
ANR	3602506	Identifier	mx		3602111	0					
ANR	3602507	ShiftExpression	motion_val [ direction ] [ xy ] [ 0 ] >> shift		3602111	1		>>			
ANR	3602508	ArrayIndexing	motion_val [ direction ] [ xy ] [ 0 ]		3602111	0					
ANR	3602509	ArrayIndexing	motion_val [ direction ] [ xy ]		3602111	0					
ANR	3602510	ArrayIndexing	motion_val [ direction ]		3602111	0					
ANR	3602511	Identifier	motion_val		3602111	0					
ANR	3602512	Identifier	direction		3602111	1					
ANR	3602513	Identifier	xy		3602111	1					
ANR	3602514	PrimaryExpression	0		3602111	1					
ANR	3602515	Identifier	shift		3602111	1					
ANR	3602516	IdentifierDeclStatement	int my = ( motion_val [ direction ] [ xy ] [ 1 ] >> shift ) ;	81:28:2522:2570	3602111	4	True				
ANR	3602517	IdentifierDecl	my = ( motion_val [ direction ] [ xy ] [ 1 ] >> shift )		3602111	0					
ANR	3602518	IdentifierDeclType	int		3602111	0					
ANR	3602519	Identifier	my		3602111	1					
ANR	3602520	AssignmentExpression	my = ( motion_val [ direction ] [ xy ] [ 1 ] >> shift )		3602111	2		=			
ANR	3602521	Identifier	my		3602111	0					
ANR	3602522	ShiftExpression	motion_val [ direction ] [ xy ] [ 1 ] >> shift		3602111	1		>>			
ANR	3602523	ArrayIndexing	motion_val [ direction ] [ xy ] [ 1 ]		3602111	0					
ANR	3602524	ArrayIndexing	motion_val [ direction ] [ xy ]		3602111	0					
ANR	3602525	ArrayIndexing	motion_val [ direction ]		3602111	0					
ANR	3602526	Identifier	motion_val		3602111	0					
ANR	3602527	Identifier	direction		3602111	1					
ANR	3602528	Identifier	xy		3602111	1					
ANR	3602529	PrimaryExpression	1		3602111	1					
ANR	3602530	Identifier	shift		3602111	1					
ANR	3602531	IfStatement	if ( IS_INTERLACED ( mb_type ) )		3602111	5					
ANR	3602532	Condition	IS_INTERLACED ( mb_type )	85:32:2607:2628	3602111	0	True				
ANR	3602533	CallExpression	IS_INTERLACED ( mb_type )		3602111	0					
ANR	3602534	Callee	IS_INTERLACED		3602111	0					
ANR	3602535	Identifier	IS_INTERLACED		3602111	0					
ANR	3602536	ArgumentList	mb_type		3602111	1					
ANR	3602537	Argument	mb_type		3602111	0					
ANR	3602538	Identifier	mb_type		3602111	0					
ANR	3602539	ExpressionStatement	my *= 2	87:32:2664:2671	3602111	1	True				
ANR	3602540	AssignmentExpression	my *= 2		3602111	0		*=			
ANR	3602541	Identifier	my		3602111	0					
ANR	3602542	PrimaryExpression	2		3602111	1					
ANR	3602543	ExpressionStatement	"mbcount += add_mb ( mvs + mbcount , mb_type , sx , sy , mx + sx , my + sy , direction )"	91:28:2704:2782	3602111	6	True				
ANR	3602544	AssignmentExpression	"mbcount += add_mb ( mvs + mbcount , mb_type , sx , sy , mx + sx , my + sy , direction )"		3602111	0		+=			
ANR	3602545	Identifier	mbcount		3602111	0					
ANR	3602546	CallExpression	"add_mb ( mvs + mbcount , mb_type , sx , sy , mx + sx , my + sy , direction )"		3602111	1					
ANR	3602547	Callee	add_mb		3602111	0					
ANR	3602548	Identifier	add_mb		3602111	0					
ANR	3602549	ArgumentList	mvs + mbcount		3602111	1					
ANR	3602550	Argument	mvs + mbcount		3602111	0					
ANR	3602551	AdditiveExpression	mvs + mbcount		3602111	0		+			
ANR	3602552	Identifier	mvs		3602111	0					
ANR	3602553	Identifier	mbcount		3602111	1					
ANR	3602554	Argument	mb_type		3602111	1					
ANR	3602555	Identifier	mb_type		3602111	0					
ANR	3602556	Argument	sx		3602111	2					
ANR	3602557	Identifier	sx		3602111	0					
ANR	3602558	Argument	sy		3602111	3					
ANR	3602559	Identifier	sy		3602111	0					
ANR	3602560	Argument	mx + sx		3602111	4					
ANR	3602561	AdditiveExpression	mx + sx		3602111	0		+			
ANR	3602562	Identifier	mx		3602111	0					
ANR	3602563	Identifier	sx		3602111	1					
ANR	3602564	Argument	my + sy		3602111	5					
ANR	3602565	AdditiveExpression	my + sy		3602111	0		+			
ANR	3602566	Identifier	my		3602111	0					
ANR	3602567	Identifier	sy		3602111	1					
ANR	3602568	Argument	direction		3602111	6					
ANR	3602569	Identifier	direction		3602111	0					
ANR	3602570	ElseStatement	else		3602111	0					
ANR	3602571	IfStatement	if ( IS_8X16 ( mb_type ) )		3602111	0					
ANR	3602572	Condition	IS_8X16 ( mb_type )	95:31:2843:2858	3602111	0	True				
ANR	3602573	CallExpression	IS_8X16 ( mb_type )		3602111	0					
ANR	3602574	Callee	IS_8X16		3602111	0					
ANR	3602575	Identifier	IS_8X16		3602111	0					
ANR	3602576	ArgumentList	mb_type		3602111	1					
ANR	3602577	Argument	mb_type		3602111	0					
ANR	3602578	Identifier	mb_type		3602111	0					
ANR	3602579	CompoundStatement		87:49:2539:2539	3602111	1					
ANR	3602580	ForStatement	for ( i = 0 ; i < 2 ; i ++ )		3602111	0					
ANR	3602581	ForInit	i = 0 ;	97:29:2893:2898	3602111	0	True				
ANR	3602582	AssignmentExpression	i = 0		3602111	0		=			
ANR	3602583	Identifier	i		3602111	0					
ANR	3602584	PrimaryExpression	0		3602111	1					
ANR	3602585	Condition	i < 2	97:36:2900:2904	3602111	1	True				
ANR	3602586	RelationalExpression	i < 2		3602111	0		<			
ANR	3602587	Identifier	i		3602111	0					
ANR	3602588	PrimaryExpression	2		3602111	1					
ANR	3602589	PostIncDecOperationExpression	i ++	97:43:2907:2909	3602111	2	True				
ANR	3602590	Identifier	i		3602111	0					
ANR	3602591	IncDec	++		3602111	1					
ANR	3602592	CompoundStatement		99:28:2913:2959	3602111	3					
ANR	3602593	IdentifierDeclStatement	int sx = mb_x * 16 + 4 + 8 * i ;	99:28:2943:2973	3602111	0	True				
ANR	3602594	IdentifierDecl	sx = mb_x * 16 + 4 + 8 * i		3602111	0					
ANR	3602595	IdentifierDeclType	int		3602111	0					
ANR	3602596	Identifier	sx		3602111	1					
ANR	3602597	AssignmentExpression	sx = mb_x * 16 + 4 + 8 * i		3602111	2		=			
ANR	3602598	Identifier	sx		3602111	0					
ANR	3602599	AdditiveExpression	mb_x * 16 + 4 + 8 * i		3602111	1		+			
ANR	3602600	MultiplicativeExpression	mb_x * 16		3602111	0		*			
ANR	3602601	Identifier	mb_x		3602111	0					
ANR	3602602	PrimaryExpression	16		3602111	1					
ANR	3602603	AdditiveExpression	4 + 8 * i		3602111	1		+			
ANR	3602604	PrimaryExpression	4		3602111	0					
ANR	3602605	MultiplicativeExpression	8 * i		3602111	1		*			
ANR	3602606	PrimaryExpression	8		3602111	0					
ANR	3602607	Identifier	i		3602111	1					
ANR	3602608	IdentifierDeclStatement	int sy = mb_y * 16 + 8 ;	101:28:3004:3026	3602111	1	True				
ANR	3602609	IdentifierDecl	sy = mb_y * 16 + 8		3602111	0					
ANR	3602610	IdentifierDeclType	int		3602111	0					
ANR	3602611	Identifier	sy		3602111	1					
ANR	3602612	AssignmentExpression	sy = mb_y * 16 + 8		3602111	2		=			
ANR	3602613	Identifier	sy		3602111	0					
ANR	3602614	AdditiveExpression	mb_y * 16 + 8		3602111	1		+			
ANR	3602615	MultiplicativeExpression	mb_y * 16		3602111	0		*			
ANR	3602616	Identifier	mb_y		3602111	0					
ANR	3602617	PrimaryExpression	16		3602111	1					
ANR	3602618	PrimaryExpression	8		3602111	1					
ANR	3602619	IdentifierDeclStatement	int xy = ( mb_x * 2 + i + mb_y * 2 * mv_stride ) << ( mv_sample_log2 - 1 ) ;	103:28:3057:3127	3602111	2	True				
ANR	3602620	IdentifierDecl	xy = ( mb_x * 2 + i + mb_y * 2 * mv_stride ) << ( mv_sample_log2 - 1 )		3602111	0					
ANR	3602621	IdentifierDeclType	int		3602111	0					
ANR	3602622	Identifier	xy		3602111	1					
ANR	3602623	AssignmentExpression	xy = ( mb_x * 2 + i + mb_y * 2 * mv_stride ) << ( mv_sample_log2 - 1 )		3602111	2		=			
ANR	3602624	Identifier	xy		3602111	0					
ANR	3602625	ShiftExpression	( mb_x * 2 + i + mb_y * 2 * mv_stride ) << ( mv_sample_log2 - 1 )		3602111	1		<<			
ANR	3602626	AdditiveExpression	mb_x * 2 + i + mb_y * 2 * mv_stride		3602111	0		+			
ANR	3602627	MultiplicativeExpression	mb_x * 2		3602111	0		*			
ANR	3602628	Identifier	mb_x		3602111	0					
ANR	3602629	PrimaryExpression	2		3602111	1					
ANR	3602630	AdditiveExpression	i + mb_y * 2 * mv_stride		3602111	1		+			
ANR	3602631	Identifier	i		3602111	0					
ANR	3602632	MultiplicativeExpression	mb_y * 2 * mv_stride		3602111	1		*			
ANR	3602633	Identifier	mb_y		3602111	0					
ANR	3602634	MultiplicativeExpression	2 * mv_stride		3602111	1		*			
ANR	3602635	PrimaryExpression	2		3602111	0					
ANR	3602636	Identifier	mv_stride		3602111	1					
ANR	3602637	AdditiveExpression	mv_sample_log2 - 1		3602111	1		-			
ANR	3602638	Identifier	mv_sample_log2		3602111	0					
ANR	3602639	PrimaryExpression	1		3602111	1					
ANR	3602640	IdentifierDeclStatement	int mx = motion_val [ direction ] [ xy ] [ 0 ] >> shift ;	105:28:3158:3204	3602111	3	True				
ANR	3602641	IdentifierDecl	mx = motion_val [ direction ] [ xy ] [ 0 ] >> shift		3602111	0					
ANR	3602642	IdentifierDeclType	int		3602111	0					
ANR	3602643	Identifier	mx		3602111	1					
ANR	3602644	AssignmentExpression	mx = motion_val [ direction ] [ xy ] [ 0 ] >> shift		3602111	2		=			
ANR	3602645	Identifier	mx		3602111	0					
ANR	3602646	ShiftExpression	motion_val [ direction ] [ xy ] [ 0 ] >> shift		3602111	1		>>			
ANR	3602647	ArrayIndexing	motion_val [ direction ] [ xy ] [ 0 ]		3602111	0					
ANR	3602648	ArrayIndexing	motion_val [ direction ] [ xy ]		3602111	0					
ANR	3602649	ArrayIndexing	motion_val [ direction ]		3602111	0					
ANR	3602650	Identifier	motion_val		3602111	0					
ANR	3602651	Identifier	direction		3602111	1					
ANR	3602652	Identifier	xy		3602111	1					
ANR	3602653	PrimaryExpression	0		3602111	1					
ANR	3602654	Identifier	shift		3602111	1					
ANR	3602655	IdentifierDeclStatement	int my = motion_val [ direction ] [ xy ] [ 1 ] >> shift ;	107:28:3235:3281	3602111	4	True				
ANR	3602656	IdentifierDecl	my = motion_val [ direction ] [ xy ] [ 1 ] >> shift		3602111	0					
ANR	3602657	IdentifierDeclType	int		3602111	0					
ANR	3602658	Identifier	my		3602111	1					
ANR	3602659	AssignmentExpression	my = motion_val [ direction ] [ xy ] [ 1 ] >> shift		3602111	2		=			
ANR	3602660	Identifier	my		3602111	0					
ANR	3602661	ShiftExpression	motion_val [ direction ] [ xy ] [ 1 ] >> shift		3602111	1		>>			
ANR	3602662	ArrayIndexing	motion_val [ direction ] [ xy ] [ 1 ]		3602111	0					
ANR	3602663	ArrayIndexing	motion_val [ direction ] [ xy ]		3602111	0					
ANR	3602664	ArrayIndexing	motion_val [ direction ]		3602111	0					
ANR	3602665	Identifier	motion_val		3602111	0					
ANR	3602666	Identifier	direction		3602111	1					
ANR	3602667	Identifier	xy		3602111	1					
ANR	3602668	PrimaryExpression	1		3602111	1					
ANR	3602669	Identifier	shift		3602111	1					
ANR	3602670	IfStatement	if ( IS_INTERLACED ( mb_type ) )		3602111	5					
ANR	3602671	Condition	IS_INTERLACED ( mb_type )	111:32:3318:3339	3602111	0	True				
ANR	3602672	CallExpression	IS_INTERLACED ( mb_type )		3602111	0					
ANR	3602673	Callee	IS_INTERLACED		3602111	0					
ANR	3602674	Identifier	IS_INTERLACED		3602111	0					
ANR	3602675	ArgumentList	mb_type		3602111	1					
ANR	3602676	Argument	mb_type		3602111	0					
ANR	3602677	Identifier	mb_type		3602111	0					
ANR	3602678	ExpressionStatement	my *= 2	113:32:3375:3382	3602111	1	True				
ANR	3602679	AssignmentExpression	my *= 2		3602111	0		*=			
ANR	3602680	Identifier	my		3602111	0					
ANR	3602681	PrimaryExpression	2		3602111	1					
ANR	3602682	ExpressionStatement	"mbcount += add_mb ( mvs + mbcount , mb_type , sx , sy , mx + sx , my + sy , direction )"	117:28:3415:3493	3602111	6	True				
ANR	3602683	AssignmentExpression	"mbcount += add_mb ( mvs + mbcount , mb_type , sx , sy , mx + sx , my + sy , direction )"		3602111	0		+=			
ANR	3602684	Identifier	mbcount		3602111	0					
ANR	3602685	CallExpression	"add_mb ( mvs + mbcount , mb_type , sx , sy , mx + sx , my + sy , direction )"		3602111	1					
ANR	3602686	Callee	add_mb		3602111	0					
ANR	3602687	Identifier	add_mb		3602111	0					
ANR	3602688	ArgumentList	mvs + mbcount		3602111	1					
ANR	3602689	Argument	mvs + mbcount		3602111	0					
ANR	3602690	AdditiveExpression	mvs + mbcount		3602111	0		+			
ANR	3602691	Identifier	mvs		3602111	0					
ANR	3602692	Identifier	mbcount		3602111	1					
ANR	3602693	Argument	mb_type		3602111	1					
ANR	3602694	Identifier	mb_type		3602111	0					
ANR	3602695	Argument	sx		3602111	2					
ANR	3602696	Identifier	sx		3602111	0					
ANR	3602697	Argument	sy		3602111	3					
ANR	3602698	Identifier	sy		3602111	0					
ANR	3602699	Argument	mx + sx		3602111	4					
ANR	3602700	AdditiveExpression	mx + sx		3602111	0		+			
ANR	3602701	Identifier	mx		3602111	0					
ANR	3602702	Identifier	sx		3602111	1					
ANR	3602703	Argument	my + sy		3602111	5					
ANR	3602704	AdditiveExpression	my + sy		3602111	0		+			
ANR	3602705	Identifier	my		3602111	0					
ANR	3602706	Identifier	sy		3602111	1					
ANR	3602707	Argument	direction		3602111	6					
ANR	3602708	Identifier	direction		3602111	0					
ANR	3602709	ElseStatement	else		3602111	0					
ANR	3602710	CompoundStatement		123:26:3520:3571	3602111	0					
ANR	3602711	IdentifierDeclStatement	int sx = mb_x * 16 + 8 ;	123:26:3579:3601	3602111	0	True				
ANR	3602712	IdentifierDecl	sx = mb_x * 16 + 8		3602111	0					
ANR	3602713	IdentifierDeclType	int		3602111	0					
ANR	3602714	Identifier	sx		3602111	1					
ANR	3602715	AssignmentExpression	sx = mb_x * 16 + 8		3602111	2		=			
ANR	3602716	Identifier	sx		3602111	0					
ANR	3602717	AdditiveExpression	mb_x * 16 + 8		3602111	1		+			
ANR	3602718	MultiplicativeExpression	mb_x * 16		3602111	0		*			
ANR	3602719	Identifier	mb_x		3602111	0					
ANR	3602720	PrimaryExpression	16		3602111	1					
ANR	3602721	PrimaryExpression	8		3602111	1					
ANR	3602722	IdentifierDeclStatement	int sy = mb_y * 16 + 8 ;	125:26:3630:3652	3602111	1	True				
ANR	3602723	IdentifierDecl	sy = mb_y * 16 + 8		3602111	0					
ANR	3602724	IdentifierDeclType	int		3602111	0					
ANR	3602725	Identifier	sy		3602111	1					
ANR	3602726	AssignmentExpression	sy = mb_y * 16 + 8		3602111	2		=			
ANR	3602727	Identifier	sy		3602111	0					
ANR	3602728	AdditiveExpression	mb_y * 16 + 8		3602111	1		+			
ANR	3602729	MultiplicativeExpression	mb_y * 16		3602111	0		*			
ANR	3602730	Identifier	mb_y		3602111	0					
ANR	3602731	PrimaryExpression	16		3602111	1					
ANR	3602732	PrimaryExpression	8		3602111	1					
ANR	3602733	IdentifierDeclStatement	int xy = ( mb_x + mb_y * mv_stride ) << mv_sample_log2 ;	127:26:3681:3733	3602111	2	True				
ANR	3602734	IdentifierDecl	xy = ( mb_x + mb_y * mv_stride ) << mv_sample_log2		3602111	0					
ANR	3602735	IdentifierDeclType	int		3602111	0					
ANR	3602736	Identifier	xy		3602111	1					
ANR	3602737	AssignmentExpression	xy = ( mb_x + mb_y * mv_stride ) << mv_sample_log2		3602111	2		=			
ANR	3602738	Identifier	xy		3602111	0					
ANR	3602739	ShiftExpression	( mb_x + mb_y * mv_stride ) << mv_sample_log2		3602111	1		<<			
ANR	3602740	AdditiveExpression	mb_x + mb_y * mv_stride		3602111	0		+			
ANR	3602741	Identifier	mb_x		3602111	0					
ANR	3602742	MultiplicativeExpression	mb_y * mv_stride		3602111	1		*			
ANR	3602743	Identifier	mb_y		3602111	0					
ANR	3602744	Identifier	mv_stride		3602111	1					
ANR	3602745	Identifier	mv_sample_log2		3602111	1					
ANR	3602746	IdentifierDeclStatement	int mx = ( motion_val [ direction ] [ xy ] [ 0 ] >> shift ) + sx ;	129:26:3762:3813	3602111	3	True				
ANR	3602747	IdentifierDecl	mx = ( motion_val [ direction ] [ xy ] [ 0 ] >> shift ) + sx		3602111	0					
ANR	3602748	IdentifierDeclType	int		3602111	0					
ANR	3602749	Identifier	mx		3602111	1					
ANR	3602750	AssignmentExpression	mx = ( motion_val [ direction ] [ xy ] [ 0 ] >> shift ) + sx		3602111	2		=			
ANR	3602751	Identifier	mx		3602111	0					
ANR	3602752	AdditiveExpression	( motion_val [ direction ] [ xy ] [ 0 ] >> shift ) + sx		3602111	1		+			
ANR	3602753	ShiftExpression	motion_val [ direction ] [ xy ] [ 0 ] >> shift		3602111	0		>>			
ANR	3602754	ArrayIndexing	motion_val [ direction ] [ xy ] [ 0 ]		3602111	0					
ANR	3602755	ArrayIndexing	motion_val [ direction ] [ xy ]		3602111	0					
ANR	3602756	ArrayIndexing	motion_val [ direction ]		3602111	0					
ANR	3602757	Identifier	motion_val		3602111	0					
ANR	3602758	Identifier	direction		3602111	1					
ANR	3602759	Identifier	xy		3602111	1					
ANR	3602760	PrimaryExpression	0		3602111	1					
ANR	3602761	Identifier	shift		3602111	1					
ANR	3602762	Identifier	sx		3602111	1					
ANR	3602763	IdentifierDeclStatement	int my = ( motion_val [ direction ] [ xy ] [ 1 ] >> shift ) + sy ;	131:26:3842:3893	3602111	4	True				
ANR	3602764	IdentifierDecl	my = ( motion_val [ direction ] [ xy ] [ 1 ] >> shift ) + sy		3602111	0					
ANR	3602765	IdentifierDeclType	int		3602111	0					
ANR	3602766	Identifier	my		3602111	1					
ANR	3602767	AssignmentExpression	my = ( motion_val [ direction ] [ xy ] [ 1 ] >> shift ) + sy		3602111	2		=			
ANR	3602768	Identifier	my		3602111	0					
ANR	3602769	AdditiveExpression	( motion_val [ direction ] [ xy ] [ 1 ] >> shift ) + sy		3602111	1		+			
ANR	3602770	ShiftExpression	motion_val [ direction ] [ xy ] [ 1 ] >> shift		3602111	0		>>			
ANR	3602771	ArrayIndexing	motion_val [ direction ] [ xy ] [ 1 ]		3602111	0					
ANR	3602772	ArrayIndexing	motion_val [ direction ] [ xy ]		3602111	0					
ANR	3602773	ArrayIndexing	motion_val [ direction ]		3602111	0					
ANR	3602774	Identifier	motion_val		3602111	0					
ANR	3602775	Identifier	direction		3602111	1					
ANR	3602776	Identifier	xy		3602111	1					
ANR	3602777	PrimaryExpression	1		3602111	1					
ANR	3602778	Identifier	shift		3602111	1					
ANR	3602779	Identifier	sy		3602111	1					
ANR	3602780	ExpressionStatement	"mbcount += add_mb ( mvs + mbcount , mb_type , sx , sy , mx , my , direction )"	133:26:3922:3990	3602111	5	True				
ANR	3602781	AssignmentExpression	"mbcount += add_mb ( mvs + mbcount , mb_type , sx , sy , mx , my , direction )"		3602111	0		+=			
ANR	3602782	Identifier	mbcount		3602111	0					
ANR	3602783	CallExpression	"add_mb ( mvs + mbcount , mb_type , sx , sy , mx , my , direction )"		3602111	1					
ANR	3602784	Callee	add_mb		3602111	0					
ANR	3602785	Identifier	add_mb		3602111	0					
ANR	3602786	ArgumentList	mvs + mbcount		3602111	1					
ANR	3602787	Argument	mvs + mbcount		3602111	0					
ANR	3602788	AdditiveExpression	mvs + mbcount		3602111	0		+			
ANR	3602789	Identifier	mvs		3602111	0					
ANR	3602790	Identifier	mbcount		3602111	1					
ANR	3602791	Argument	mb_type		3602111	1					
ANR	3602792	Identifier	mb_type		3602111	0					
ANR	3602793	Argument	sx		3602111	2					
ANR	3602794	Identifier	sx		3602111	0					
ANR	3602795	Argument	sy		3602111	3					
ANR	3602796	Identifier	sy		3602111	0					
ANR	3602797	Argument	mx		3602111	4					
ANR	3602798	Identifier	mx		3602111	0					
ANR	3602799	Argument	my		3602111	5					
ANR	3602800	Identifier	my		3602111	0					
ANR	3602801	Argument	direction		3602111	6					
ANR	3602802	Identifier	direction		3602111	0					
ANR	3602803	IfStatement	if ( mbcount )		3602111	7					
ANR	3602804	Condition	mbcount	145:12:4075:4081	3602111	0	True				
ANR	3602805	Identifier	mbcount		3602111	0					
ANR	3602806	CompoundStatement		139:12:3777:3796	3602111	1					
ANR	3602807	IdentifierDeclStatement	AVFrameSideData * sd ;	147:12:4099:4118	3602111	0	True				
ANR	3602808	IdentifierDecl	* sd		3602111	0					
ANR	3602809	IdentifierDeclType	AVFrameSideData *		3602111	0					
ANR	3602810	Identifier	sd		3602111	1					
ANR	3602811	ExpressionStatement	"av_log ( avctx , AV_LOG_DEBUG , ""Adding %d MVs info to frame %d\\n"" , mbcount , avctx -> frame_number )"	151:12:4135:4228	3602111	1	True				
ANR	3602812	CallExpression	"av_log ( avctx , AV_LOG_DEBUG , ""Adding %d MVs info to frame %d\\n"" , mbcount , avctx -> frame_number )"		3602111	0					
ANR	3602813	Callee	av_log		3602111	0					
ANR	3602814	Identifier	av_log		3602111	0					
ANR	3602815	ArgumentList	avctx		3602111	1					
ANR	3602816	Argument	avctx		3602111	0					
ANR	3602817	Identifier	avctx		3602111	0					
ANR	3602818	Argument	AV_LOG_DEBUG		3602111	1					
ANR	3602819	Identifier	AV_LOG_DEBUG		3602111	0					
ANR	3602820	Argument	"""Adding %d MVs info to frame %d\\n"""		3602111	2					
ANR	3602821	PrimaryExpression	"""Adding %d MVs info to frame %d\\n"""		3602111	0					
ANR	3602822	Argument	mbcount		3602111	3					
ANR	3602823	Identifier	mbcount		3602111	0					
ANR	3602824	Argument	avctx -> frame_number		3602111	4					
ANR	3602825	PtrMemberAccess	avctx -> frame_number		3602111	0					
ANR	3602826	Identifier	avctx		3602111	0					
ANR	3602827	Identifier	frame_number		3602111	1					
ANR	3602828	ExpressionStatement	"sd = av_frame_new_side_data ( pict , AV_FRAME_DATA_MOTION_VECTORS , mbcount * sizeof ( AVMotionVector ) )"	153:12:4243:4340	3602111	2	True				
ANR	3602829	AssignmentExpression	"sd = av_frame_new_side_data ( pict , AV_FRAME_DATA_MOTION_VECTORS , mbcount * sizeof ( AVMotionVector ) )"		3602111	0		=			
ANR	3602830	Identifier	sd		3602111	0					
ANR	3602831	CallExpression	"av_frame_new_side_data ( pict , AV_FRAME_DATA_MOTION_VECTORS , mbcount * sizeof ( AVMotionVector ) )"		3602111	1					
ANR	3602832	Callee	av_frame_new_side_data		3602111	0					
ANR	3602833	Identifier	av_frame_new_side_data		3602111	0					
ANR	3602834	ArgumentList	pict		3602111	1					
ANR	3602835	Argument	pict		3602111	0					
ANR	3602836	Identifier	pict		3602111	0					
ANR	3602837	Argument	AV_FRAME_DATA_MOTION_VECTORS		3602111	1					
ANR	3602838	Identifier	AV_FRAME_DATA_MOTION_VECTORS		3602111	0					
ANR	3602839	Argument	mbcount * sizeof ( AVMotionVector )		3602111	2					
ANR	3602840	MultiplicativeExpression	mbcount * sizeof ( AVMotionVector )		3602111	0		*			
ANR	3602841	Identifier	mbcount		3602111	0					
ANR	3602842	SizeofExpression	sizeof ( AVMotionVector )		3602111	1					
ANR	3602843	Sizeof	sizeof		3602111	0					
ANR	3602844	SizeofOperand	AVMotionVector		3602111	1					
ANR	3602845	IfStatement	if ( ! sd )		3602111	3					
ANR	3602846	Condition	! sd	155:16:4359:4361	3602111	0	True				
ANR	3602847	UnaryOperationExpression	! sd		3602111	0					
ANR	3602848	UnaryOperator	!		3602111	0					
ANR	3602849	Identifier	sd		3602111	1					
ANR	3602850	CompoundStatement		147:21:4042:4042	3602111	1					
ANR	3602851	ExpressionStatement	av_freep ( & mvs )	157:16:4383:4397	3602111	0	True				
ANR	3602852	CallExpression	av_freep ( & mvs )		3602111	0					
ANR	3602853	Callee	av_freep		3602111	0					
ANR	3602854	Identifier	av_freep		3602111	0					
ANR	3602855	ArgumentList	& mvs		3602111	1					
ANR	3602856	Argument	& mvs		3602111	0					
ANR	3602857	UnaryOperationExpression	& mvs		3602111	0					
ANR	3602858	UnaryOperator	&		3602111	0					
ANR	3602859	Identifier	mvs		3602111	1					
ANR	3602860	ReturnStatement	return ;	159:16:4416:4422	3602111	1	True				
ANR	3602861	ExpressionStatement	"memcpy ( sd -> data , mvs , mbcount * sizeof ( AVMotionVector ) )"	163:12:4452:4507	3602111	4	True				
ANR	3602862	CallExpression	"memcpy ( sd -> data , mvs , mbcount * sizeof ( AVMotionVector ) )"		3602111	0					
ANR	3602863	Callee	memcpy		3602111	0					
ANR	3602864	Identifier	memcpy		3602111	0					
ANR	3602865	ArgumentList	sd -> data		3602111	1					
ANR	3602866	Argument	sd -> data		3602111	0					
ANR	3602867	PtrMemberAccess	sd -> data		3602111	0					
ANR	3602868	Identifier	sd		3602111	0					
ANR	3602869	Identifier	data		3602111	1					
ANR	3602870	Argument	mvs		3602111	1					
ANR	3602871	Identifier	mvs		3602111	0					
ANR	3602872	Argument	mbcount * sizeof ( AVMotionVector )		3602111	2					
ANR	3602873	MultiplicativeExpression	mbcount * sizeof ( AVMotionVector )		3602111	0		*			
ANR	3602874	Identifier	mbcount		3602111	0					
ANR	3602875	SizeofExpression	sizeof ( AVMotionVector )		3602111	1					
ANR	3602876	Sizeof	sizeof		3602111	0					
ANR	3602877	SizeofOperand	AVMotionVector		3602111	1					
ANR	3602878	ExpressionStatement	av_freep ( & mvs )	169:8:4531:4545	3602111	8	True				
ANR	3602879	CallExpression	av_freep ( & mvs )		3602111	0					
ANR	3602880	Callee	av_freep		3602111	0					
ANR	3602881	Identifier	av_freep		3602111	0					
ANR	3602882	ArgumentList	& mvs		3602111	1					
ANR	3602883	Argument	& mvs		3602111	0					
ANR	3602884	UnaryOperationExpression	& mvs		3602111	0					
ANR	3602885	UnaryOperator	&		3602111	0					
ANR	3602886	Identifier	mvs		3602111	1					
ANR	3602887	Statement	if	177:4:4651:4652	3602111	1	True				
ANR	3602888	Statement	(	177:7:4654:4654	3602111	2	True				
ANR	3602889	Statement	avctx	177:8:4655:4659	3602111	3	True				
ANR	3602890	Statement	->	177:13:4660:4661	3602111	4	True				
ANR	3602891	Statement	hwaccel	177:15:4662:4668	3602111	5	True				
ANR	3602892	Statement	||	177:23:4670:4671	3602111	6	True				
ANR	3602893	Statement	!	177:26:4673:4673	3602111	7	True				
ANR	3602894	Statement	mbtype_table	177:27:4674:4685	3602111	8	True				
ANR	3602895	Statement	||	181:8:4718:4719	3602111	9	True				
ANR	3602896	Statement	(	181:11:4721:4721	3602111	10	True				
ANR	3602897	Statement	avctx	181:12:4722:4726	3602111	11	True				
ANR	3602898	Statement	->	181:17:4727:4728	3602111	12	True				
ANR	3602899	Statement	codec	181:19:4729:4733	3602111	13	True				
ANR	3602900	Statement	->	181:24:4734:4735	3602111	14	True				
ANR	3602901	Statement	capabilities	181:26:4736:4747	3602111	15	True				
ANR	3602902	Statement	&	181:38:4748:4748	3602111	16	True				
ANR	3602903	Statement	AV_CODEC_CAP_HWACCEL_VDPAU	181:39:4749:4774	3602111	17	True				
ANR	3602904	Statement	)	181:65:4775:4775	3602111	18	True				
ANR	3602905	Statement	)	185:8:4794:4794	3602111	19	True				
ANR	3602906	ReturnStatement	return ;	187:8:4805:4811	3602111	20	True				
ANR	3602907	IfStatement	if ( avctx -> debug & ( FF_DEBUG_SKIP | FF_DEBUG_QP | FF_DEBUG_MB_TYPE ) )		3602111	21					
ANR	3602908	Condition	avctx -> debug & ( FF_DEBUG_SKIP | FF_DEBUG_QP | FF_DEBUG_MB_TYPE )	193:8:4826:4888	3602111	0	True				
ANR	3602909	BitAndExpression	avctx -> debug & ( FF_DEBUG_SKIP | FF_DEBUG_QP | FF_DEBUG_MB_TYPE )		3602111	0		&			
ANR	3602910	PtrMemberAccess	avctx -> debug		3602111	0					
ANR	3602911	Identifier	avctx		3602111	0					
ANR	3602912	Identifier	debug		3602111	1					
ANR	3602913	InclusiveOrExpression	FF_DEBUG_SKIP | FF_DEBUG_QP | FF_DEBUG_MB_TYPE		3602111	1		|			
ANR	3602914	Identifier	FF_DEBUG_SKIP		3602111	0					
ANR	3602915	InclusiveOrExpression	FF_DEBUG_QP | FF_DEBUG_MB_TYPE		3602111	1		|			
ANR	3602916	Identifier	FF_DEBUG_QP		3602111	0					
ANR	3602917	Identifier	FF_DEBUG_MB_TYPE		3602111	1					
ANR	3602918	CompoundStatement		187:8:4580:4587	3602111	1					
ANR	3602919	IdentifierDeclStatement	"int x , y ;"	195:8:4902:4909	3602111	0	True				
ANR	3602920	IdentifierDecl	x		3602111	0					
ANR	3602921	IdentifierDeclType	int		3602111	0					
ANR	3602922	Identifier	x		3602111	1					
ANR	3602923	IdentifierDecl	y		3602111	1					
ANR	3602924	IdentifierDeclType	int		3602111	0					
ANR	3602925	Identifier	y		3602111	1					
ANR	3602926	ExpressionStatement	"av_log ( avctx , AV_LOG_DEBUG , ""New frame, type: %c\\n"" , av_get_picture_type_char ( pict -> pict_type ) )"	199:8:4922:5033	3602111	1	True				
ANR	3602927	CallExpression	"av_log ( avctx , AV_LOG_DEBUG , ""New frame, type: %c\\n"" , av_get_picture_type_char ( pict -> pict_type ) )"		3602111	0					
ANR	3602928	Callee	av_log		3602111	0					
ANR	3602929	Identifier	av_log		3602111	0					
ANR	3602930	ArgumentList	avctx		3602111	1					
ANR	3602931	Argument	avctx		3602111	0					
ANR	3602932	Identifier	avctx		3602111	0					
ANR	3602933	Argument	AV_LOG_DEBUG		3602111	1					
ANR	3602934	Identifier	AV_LOG_DEBUG		3602111	0					
ANR	3602935	Argument	"""New frame, type: %c\\n"""		3602111	2					
ANR	3602936	PrimaryExpression	"""New frame, type: %c\\n"""		3602111	0					
ANR	3602937	Argument	av_get_picture_type_char ( pict -> pict_type )		3602111	3					
ANR	3602938	CallExpression	av_get_picture_type_char ( pict -> pict_type )		3602111	0					
ANR	3602939	Callee	av_get_picture_type_char		3602111	0					
ANR	3602940	Identifier	av_get_picture_type_char		3602111	0					
ANR	3602941	ArgumentList	pict -> pict_type		3602111	1					
ANR	3602942	Argument	pict -> pict_type		3602111	0					
ANR	3602943	PtrMemberAccess	pict -> pict_type		3602111	0					
ANR	3602944	Identifier	pict		3602111	0					
ANR	3602945	Identifier	pict_type		3602111	1					
ANR	3602946	ForStatement	for ( y = 0 ; y < mb_height ; y ++ )		3602111	2					
ANR	3602947	ForInit	y = 0 ;	203:13:5049:5054	3602111	0	True				
ANR	3602948	AssignmentExpression	y = 0		3602111	0		=			
ANR	3602949	Identifier	y		3602111	0					
ANR	3602950	PrimaryExpression	0		3602111	1					
ANR	3602951	Condition	y < mb_height	203:20:5056:5068	3602111	1	True				
ANR	3602952	RelationalExpression	y < mb_height		3602111	0		<			
ANR	3602953	Identifier	y		3602111	0					
ANR	3602954	Identifier	mb_height		3602111	1					
ANR	3602955	PostIncDecOperationExpression	y ++	203:35:5071:5073	3602111	2	True				
ANR	3602956	Identifier	y		3602111	0					
ANR	3602957	IncDec	++		3602111	1					
ANR	3602958	CompoundStatement		195:40:4754:4754	3602111	3					
ANR	3602959	ForStatement	for ( x = 0 ; x < mb_width ; x ++ )		3602111	0					
ANR	3602960	ForInit	x = 0 ;	205:17:5096:5101	3602111	0	True				
ANR	3602961	AssignmentExpression	x = 0		3602111	0		=			
ANR	3602962	Identifier	x		3602111	0					
ANR	3602963	PrimaryExpression	0		3602111	1					
ANR	3602964	Condition	x < mb_width	205:24:5103:5114	3602111	1	True				
ANR	3602965	RelationalExpression	x < mb_width		3602111	0		<			
ANR	3602966	Identifier	x		3602111	0					
ANR	3602967	Identifier	mb_width		3602111	1					
ANR	3602968	PostIncDecOperationExpression	x ++	205:38:5117:5119	3602111	2	True				
ANR	3602969	Identifier	x		3602111	0					
ANR	3602970	IncDec	++		3602111	1					
ANR	3602971	CompoundStatement		197:43:4800:4800	3602111	3					
ANR	3602972	IfStatement	if ( avctx -> debug & FF_DEBUG_SKIP )		3602111	0					
ANR	3602973	Condition	avctx -> debug & FF_DEBUG_SKIP	207:20:5145:5172	3602111	0	True				
ANR	3602974	BitAndExpression	avctx -> debug & FF_DEBUG_SKIP		3602111	0		&			
ANR	3602975	PtrMemberAccess	avctx -> debug		3602111	0					
ANR	3602976	Identifier	avctx		3602111	0					
ANR	3602977	Identifier	debug		3602111	1					
ANR	3602978	Identifier	FF_DEBUG_SKIP		3602111	1					
ANR	3602979	CompoundStatement		201:20:4876:4938	3602111	1					
ANR	3602980	IdentifierDeclStatement	int count = mbskip_table ? mbskip_table [ x + y * mb_stride ] : 0 ;	209:20:5198:5260	3602111	0	True				
ANR	3602981	IdentifierDecl	count = mbskip_table ? mbskip_table [ x + y * mb_stride ] : 0		3602111	0					
ANR	3602982	IdentifierDeclType	int		3602111	0					
ANR	3602983	Identifier	count		3602111	1					
ANR	3602984	AssignmentExpression	count = mbskip_table ? mbskip_table [ x + y * mb_stride ] : 0		3602111	2		=			
ANR	3602985	Identifier	count		3602111	0					
ANR	3602986	ConditionalExpression	mbskip_table ? mbskip_table [ x + y * mb_stride ] : 0		3602111	1					
ANR	3602987	Condition	mbskip_table		3602111	0					
ANR	3602988	Identifier	mbskip_table		3602111	0					
ANR	3602989	ArrayIndexing	mbskip_table [ x + y * mb_stride ]		3602111	1					
ANR	3602990	Identifier	mbskip_table		3602111	0					
ANR	3602991	AdditiveExpression	x + y * mb_stride		3602111	1		+			
ANR	3602992	Identifier	x		3602111	0					
ANR	3602993	MultiplicativeExpression	y * mb_stride		3602111	1		*			
ANR	3602994	Identifier	y		3602111	0					
ANR	3602995	Identifier	mb_stride		3602111	1					
ANR	3602996	PrimaryExpression	0		3602111	2					
ANR	3602997	IfStatement	if ( count > 9 )		3602111	1					
ANR	3602998	Condition	count > 9	211:24:5287:5295	3602111	0	True				
ANR	3602999	RelationalExpression	count > 9		3602111	0		>			
ANR	3603000	Identifier	count		3602111	0					
ANR	3603001	PrimaryExpression	9		3602111	1					
ANR	3603002	ExpressionStatement	count = 9	213:24:5323:5332	3602111	1	True				
ANR	3603003	AssignmentExpression	count = 9		3602111	0		=			
ANR	3603004	Identifier	count		3602111	0					
ANR	3603005	PrimaryExpression	9		3602111	1					
ANR	3603006	ExpressionStatement	"av_log ( avctx , AV_LOG_DEBUG , ""%1d"" , count )"	215:20:5355:5396	3602111	2	True				
ANR	3603007	CallExpression	"av_log ( avctx , AV_LOG_DEBUG , ""%1d"" , count )"		3602111	0					
ANR	3603008	Callee	av_log		3602111	0					
ANR	3603009	Identifier	av_log		3602111	0					
ANR	3603010	ArgumentList	avctx		3602111	1					
ANR	3603011	Argument	avctx		3602111	0					
ANR	3603012	Identifier	avctx		3602111	0					
ANR	3603013	Argument	AV_LOG_DEBUG		3602111	1					
ANR	3603014	Identifier	AV_LOG_DEBUG		3602111	0					
ANR	3603015	Argument	"""%1d"""		3602111	2					
ANR	3603016	PrimaryExpression	"""%1d"""		3602111	0					
ANR	3603017	Argument	count		3602111	3					
ANR	3603018	Identifier	count		3602111	0					
ANR	3603019	IfStatement	if ( avctx -> debug & FF_DEBUG_QP )		3602111	1					
ANR	3603020	Condition	avctx -> debug & FF_DEBUG_QP	219:20:5438:5463	3602111	0	True				
ANR	3603021	BitAndExpression	avctx -> debug & FF_DEBUG_QP		3602111	0		&			
ANR	3603022	PtrMemberAccess	avctx -> debug		3602111	0					
ANR	3603023	Identifier	avctx		3602111	0					
ANR	3603024	Identifier	debug		3602111	1					
ANR	3603025	Identifier	FF_DEBUG_QP		3602111	1					
ANR	3603026	CompoundStatement		211:48:5144:5144	3602111	1					
ANR	3603027	ExpressionStatement	"av_log ( avctx , AV_LOG_DEBUG , ""%2d"" , qscale_table [ x + y * mb_stride ] )"	221:20:5489:5584	3602111	0	True				
ANR	3603028	CallExpression	"av_log ( avctx , AV_LOG_DEBUG , ""%2d"" , qscale_table [ x + y * mb_stride ] )"		3602111	0					
ANR	3603029	Callee	av_log		3602111	0					
ANR	3603030	Identifier	av_log		3602111	0					
ANR	3603031	ArgumentList	avctx		3602111	1					
ANR	3603032	Argument	avctx		3602111	0					
ANR	3603033	Identifier	avctx		3602111	0					
ANR	3603034	Argument	AV_LOG_DEBUG		3602111	1					
ANR	3603035	Identifier	AV_LOG_DEBUG		3602111	0					
ANR	3603036	Argument	"""%2d"""		3602111	2					
ANR	3603037	PrimaryExpression	"""%2d"""		3602111	0					
ANR	3603038	Argument	qscale_table [ x + y * mb_stride ]		3602111	3					
ANR	3603039	ArrayIndexing	qscale_table [ x + y * mb_stride ]		3602111	0					
ANR	3603040	Identifier	qscale_table		3602111	0					
ANR	3603041	AdditiveExpression	x + y * mb_stride		3602111	1		+			
ANR	3603042	Identifier	x		3602111	0					
ANR	3603043	MultiplicativeExpression	y * mb_stride		3602111	1		*			
ANR	3603044	Identifier	y		3602111	0					
ANR	3603045	Identifier	mb_stride		3602111	1					
ANR	3603046	IfStatement	if ( avctx -> debug & FF_DEBUG_MB_TYPE )		3602111	2					
ANR	3603047	Condition	avctx -> debug & FF_DEBUG_MB_TYPE	227:20:5626:5656	3602111	0	True				
ANR	3603048	BitAndExpression	avctx -> debug & FF_DEBUG_MB_TYPE		3602111	0		&			
ANR	3603049	PtrMemberAccess	avctx -> debug		3602111	0					
ANR	3603050	Identifier	avctx		3602111	0					
ANR	3603051	Identifier	debug		3602111	1					
ANR	3603052	Identifier	FF_DEBUG_MB_TYPE		3602111	1					
ANR	3603053	CompoundStatement		221:20:5360:5405	3602111	1					
ANR	3603054	IdentifierDeclStatement	int mb_type = mbtype_table [ x + y * mb_stride ] ;	229:20:5682:5727	3602111	0	True				
ANR	3603055	IdentifierDecl	mb_type = mbtype_table [ x + y * mb_stride ]		3602111	0					
ANR	3603056	IdentifierDeclType	int		3602111	0					
ANR	3603057	Identifier	mb_type		3602111	1					
ANR	3603058	AssignmentExpression	mb_type = mbtype_table [ x + y * mb_stride ]		3602111	2		=			
ANR	3603059	Identifier	mb_type		3602111	0					
ANR	3603060	ArrayIndexing	mbtype_table [ x + y * mb_stride ]		3602111	1					
ANR	3603061	Identifier	mbtype_table		3602111	0					
ANR	3603062	AdditiveExpression	x + y * mb_stride		3602111	1		+			
ANR	3603063	Identifier	x		3602111	0					
ANR	3603064	MultiplicativeExpression	y * mb_stride		3602111	1		*			
ANR	3603065	Identifier	y		3602111	0					
ANR	3603066	Identifier	mb_stride		3602111	1					
ANR	3603067	IfStatement	if ( IS_PCM ( mb_type ) )		3602111	1					
ANR	3603068	Condition	IS_PCM ( mb_type )	233:24:5798:5812	3602111	0	True				
ANR	3603069	CallExpression	IS_PCM ( mb_type )		3602111	0					
ANR	3603070	Callee	IS_PCM		3602111	0					
ANR	3603071	Identifier	IS_PCM		3602111	0					
ANR	3603072	ArgumentList	mb_type		3602111	1					
ANR	3603073	Argument	mb_type		3602111	0					
ANR	3603074	Identifier	mb_type		3602111	0					
ANR	3603075	ExpressionStatement	"av_log ( avctx , AV_LOG_DEBUG , ""P"" )"	235:24:5840:5872	3602111	1	True				
ANR	3603076	CallExpression	"av_log ( avctx , AV_LOG_DEBUG , ""P"" )"		3602111	0					
ANR	3603077	Callee	av_log		3602111	0					
ANR	3603078	Identifier	av_log		3602111	0					
ANR	3603079	ArgumentList	avctx		3602111	1					
ANR	3603080	Argument	avctx		3602111	0					
ANR	3603081	Identifier	avctx		3602111	0					
ANR	3603082	Argument	AV_LOG_DEBUG		3602111	1					
ANR	3603083	Identifier	AV_LOG_DEBUG		3602111	0					
ANR	3603084	Argument	"""P"""		3602111	2					
ANR	3603085	PrimaryExpression	"""P"""		3602111	0					
ANR	3603086	ElseStatement	else		3602111	0					
ANR	3603087	IfStatement	if ( IS_INTRA ( mb_type ) && IS_ACPRED ( mb_type ) )		3602111	0					
ANR	3603088	Condition	IS_INTRA ( mb_type ) && IS_ACPRED ( mb_type )	237:29:5904:5942	3602111	0	True				
ANR	3603089	AndExpression	IS_INTRA ( mb_type ) && IS_ACPRED ( mb_type )		3602111	0		&&			
ANR	3603090	CallExpression	IS_INTRA ( mb_type )		3602111	0					
ANR	3603091	Callee	IS_INTRA		3602111	0					
ANR	3603092	Identifier	IS_INTRA		3602111	0					
ANR	3603093	ArgumentList	mb_type		3602111	1					
ANR	3603094	Argument	mb_type		3602111	0					
ANR	3603095	Identifier	mb_type		3602111	0					
ANR	3603096	CallExpression	IS_ACPRED ( mb_type )		3602111	1					
ANR	3603097	Callee	IS_ACPRED		3602111	0					
ANR	3603098	Identifier	IS_ACPRED		3602111	0					
ANR	3603099	ArgumentList	mb_type		3602111	1					
ANR	3603100	Argument	mb_type		3602111	0					
ANR	3603101	Identifier	mb_type		3602111	0					
ANR	3603102	ExpressionStatement	"av_log ( avctx , AV_LOG_DEBUG , ""A"" )"	239:24:5970:6002	3602111	1	True				
ANR	3603103	CallExpression	"av_log ( avctx , AV_LOG_DEBUG , ""A"" )"		3602111	0					
ANR	3603104	Callee	av_log		3602111	0					
ANR	3603105	Identifier	av_log		3602111	0					
ANR	3603106	ArgumentList	avctx		3602111	1					
ANR	3603107	Argument	avctx		3602111	0					
ANR	3603108	Identifier	avctx		3602111	0					
ANR	3603109	Argument	AV_LOG_DEBUG		3602111	1					
ANR	3603110	Identifier	AV_LOG_DEBUG		3602111	0					
ANR	3603111	Argument	"""A"""		3602111	2					
ANR	3603112	PrimaryExpression	"""A"""		3602111	0					
ANR	3603113	ElseStatement	else		3602111	0					
ANR	3603114	IfStatement	if ( IS_INTRA4x4 ( mb_type ) )		3602111	0					
ANR	3603115	Condition	IS_INTRA4x4 ( mb_type )	241:29:6034:6053	3602111	0	True				
ANR	3603116	CallExpression	IS_INTRA4x4 ( mb_type )		3602111	0					
ANR	3603117	Callee	IS_INTRA4x4		3602111	0					
ANR	3603118	Identifier	IS_INTRA4x4		3602111	0					
ANR	3603119	ArgumentList	mb_type		3602111	1					
ANR	3603120	Argument	mb_type		3602111	0					
ANR	3603121	Identifier	mb_type		3602111	0					
ANR	3603122	ExpressionStatement	"av_log ( avctx , AV_LOG_DEBUG , ""i"" )"	243:24:6081:6113	3602111	1	True				
ANR	3603123	CallExpression	"av_log ( avctx , AV_LOG_DEBUG , ""i"" )"		3602111	0					
ANR	3603124	Callee	av_log		3602111	0					
ANR	3603125	Identifier	av_log		3602111	0					
ANR	3603126	ArgumentList	avctx		3602111	1					
ANR	3603127	Argument	avctx		3602111	0					
ANR	3603128	Identifier	avctx		3602111	0					
ANR	3603129	Argument	AV_LOG_DEBUG		3602111	1					
ANR	3603130	Identifier	AV_LOG_DEBUG		3602111	0					
ANR	3603131	Argument	"""i"""		3602111	2					
ANR	3603132	PrimaryExpression	"""i"""		3602111	0					
ANR	3603133	ElseStatement	else		3602111	0					
ANR	3603134	IfStatement	if ( IS_INTRA16x16 ( mb_type ) )		3602111	0					
ANR	3603135	Condition	IS_INTRA16x16 ( mb_type )	245:29:6145:6166	3602111	0	True				
ANR	3603136	CallExpression	IS_INTRA16x16 ( mb_type )		3602111	0					
ANR	3603137	Callee	IS_INTRA16x16		3602111	0					
ANR	3603138	Identifier	IS_INTRA16x16		3602111	0					
ANR	3603139	ArgumentList	mb_type		3602111	1					
ANR	3603140	Argument	mb_type		3602111	0					
ANR	3603141	Identifier	mb_type		3602111	0					
ANR	3603142	ExpressionStatement	"av_log ( avctx , AV_LOG_DEBUG , ""I"" )"	247:24:6194:6226	3602111	1	True				
ANR	3603143	CallExpression	"av_log ( avctx , AV_LOG_DEBUG , ""I"" )"		3602111	0					
ANR	3603144	Callee	av_log		3602111	0					
ANR	3603145	Identifier	av_log		3602111	0					
ANR	3603146	ArgumentList	avctx		3602111	1					
ANR	3603147	Argument	avctx		3602111	0					
ANR	3603148	Identifier	avctx		3602111	0					
ANR	3603149	Argument	AV_LOG_DEBUG		3602111	1					
ANR	3603150	Identifier	AV_LOG_DEBUG		3602111	0					
ANR	3603151	Argument	"""I"""		3602111	2					
ANR	3603152	PrimaryExpression	"""I"""		3602111	0					
ANR	3603153	ElseStatement	else		3602111	0					
ANR	3603154	IfStatement	if ( IS_DIRECT ( mb_type ) && IS_SKIP ( mb_type ) )		3602111	0					
ANR	3603155	Condition	IS_DIRECT ( mb_type ) && IS_SKIP ( mb_type )	249:29:6258:6295	3602111	0	True				
ANR	3603156	AndExpression	IS_DIRECT ( mb_type ) && IS_SKIP ( mb_type )		3602111	0		&&			
ANR	3603157	CallExpression	IS_DIRECT ( mb_type )		3602111	0					
ANR	3603158	Callee	IS_DIRECT		3602111	0					
ANR	3603159	Identifier	IS_DIRECT		3602111	0					
ANR	3603160	ArgumentList	mb_type		3602111	1					
ANR	3603161	Argument	mb_type		3602111	0					
ANR	3603162	Identifier	mb_type		3602111	0					
ANR	3603163	CallExpression	IS_SKIP ( mb_type )		3602111	1					
ANR	3603164	Callee	IS_SKIP		3602111	0					
ANR	3603165	Identifier	IS_SKIP		3602111	0					
ANR	3603166	ArgumentList	mb_type		3602111	1					
ANR	3603167	Argument	mb_type		3602111	0					
ANR	3603168	Identifier	mb_type		3602111	0					
ANR	3603169	ExpressionStatement	"av_log ( avctx , AV_LOG_DEBUG , ""d"" )"	251:24:6323:6355	3602111	1	True				
ANR	3603170	CallExpression	"av_log ( avctx , AV_LOG_DEBUG , ""d"" )"		3602111	0					
ANR	3603171	Callee	av_log		3602111	0					
ANR	3603172	Identifier	av_log		3602111	0					
ANR	3603173	ArgumentList	avctx		3602111	1					
ANR	3603174	Argument	avctx		3602111	0					
ANR	3603175	Identifier	avctx		3602111	0					
ANR	3603176	Argument	AV_LOG_DEBUG		3602111	1					
ANR	3603177	Identifier	AV_LOG_DEBUG		3602111	0					
ANR	3603178	Argument	"""d"""		3602111	2					
ANR	3603179	PrimaryExpression	"""d"""		3602111	0					
ANR	3603180	ElseStatement	else		3602111	0					
ANR	3603181	IfStatement	if ( IS_DIRECT ( mb_type ) )		3602111	0					
ANR	3603182	Condition	IS_DIRECT ( mb_type )	253:29:6387:6404	3602111	0	True				
ANR	3603183	CallExpression	IS_DIRECT ( mb_type )		3602111	0					
ANR	3603184	Callee	IS_DIRECT		3602111	0					
ANR	3603185	Identifier	IS_DIRECT		3602111	0					
ANR	3603186	ArgumentList	mb_type		3602111	1					
ANR	3603187	Argument	mb_type		3602111	0					
ANR	3603188	Identifier	mb_type		3602111	0					
ANR	3603189	ExpressionStatement	"av_log ( avctx , AV_LOG_DEBUG , ""D"" )"	255:24:6432:6464	3602111	1	True				
ANR	3603190	CallExpression	"av_log ( avctx , AV_LOG_DEBUG , ""D"" )"		3602111	0					
ANR	3603191	Callee	av_log		3602111	0					
ANR	3603192	Identifier	av_log		3602111	0					
ANR	3603193	ArgumentList	avctx		3602111	1					
ANR	3603194	Argument	avctx		3602111	0					
ANR	3603195	Identifier	avctx		3602111	0					
ANR	3603196	Argument	AV_LOG_DEBUG		3602111	1					
ANR	3603197	Identifier	AV_LOG_DEBUG		3602111	0					
ANR	3603198	Argument	"""D"""		3602111	2					
ANR	3603199	PrimaryExpression	"""D"""		3602111	0					
ANR	3603200	ElseStatement	else		3602111	0					
ANR	3603201	IfStatement	if ( IS_GMC ( mb_type ) && IS_SKIP ( mb_type ) )		3602111	0					
ANR	3603202	Condition	IS_GMC ( mb_type ) && IS_SKIP ( mb_type )	257:29:6496:6530	3602111	0	True				
ANR	3603203	AndExpression	IS_GMC ( mb_type ) && IS_SKIP ( mb_type )		3602111	0		&&			
ANR	3603204	CallExpression	IS_GMC ( mb_type )		3602111	0					
ANR	3603205	Callee	IS_GMC		3602111	0					
ANR	3603206	Identifier	IS_GMC		3602111	0					
ANR	3603207	ArgumentList	mb_type		3602111	1					
ANR	3603208	Argument	mb_type		3602111	0					
ANR	3603209	Identifier	mb_type		3602111	0					
ANR	3603210	CallExpression	IS_SKIP ( mb_type )		3602111	1					
ANR	3603211	Callee	IS_SKIP		3602111	0					
ANR	3603212	Identifier	IS_SKIP		3602111	0					
ANR	3603213	ArgumentList	mb_type		3602111	1					
ANR	3603214	Argument	mb_type		3602111	0					
ANR	3603215	Identifier	mb_type		3602111	0					
ANR	3603216	ExpressionStatement	"av_log ( avctx , AV_LOG_DEBUG , ""g"" )"	259:24:6558:6590	3602111	1	True				
ANR	3603217	CallExpression	"av_log ( avctx , AV_LOG_DEBUG , ""g"" )"		3602111	0					
ANR	3603218	Callee	av_log		3602111	0					
ANR	3603219	Identifier	av_log		3602111	0					
ANR	3603220	ArgumentList	avctx		3602111	1					
ANR	3603221	Argument	avctx		3602111	0					
ANR	3603222	Identifier	avctx		3602111	0					
ANR	3603223	Argument	AV_LOG_DEBUG		3602111	1					
ANR	3603224	Identifier	AV_LOG_DEBUG		3602111	0					
ANR	3603225	Argument	"""g"""		3602111	2					
ANR	3603226	PrimaryExpression	"""g"""		3602111	0					
ANR	3603227	ElseStatement	else		3602111	0					
ANR	3603228	IfStatement	if ( IS_GMC ( mb_type ) )		3602111	0					
ANR	3603229	Condition	IS_GMC ( mb_type )	261:29:6622:6636	3602111	0	True				
ANR	3603230	CallExpression	IS_GMC ( mb_type )		3602111	0					
ANR	3603231	Callee	IS_GMC		3602111	0					
ANR	3603232	Identifier	IS_GMC		3602111	0					
ANR	3603233	ArgumentList	mb_type		3602111	1					
ANR	3603234	Argument	mb_type		3602111	0					
ANR	3603235	Identifier	mb_type		3602111	0					
ANR	3603236	ExpressionStatement	"av_log ( avctx , AV_LOG_DEBUG , ""G"" )"	263:24:6664:6696	3602111	1	True				
ANR	3603237	CallExpression	"av_log ( avctx , AV_LOG_DEBUG , ""G"" )"		3602111	0					
ANR	3603238	Callee	av_log		3602111	0					
ANR	3603239	Identifier	av_log		3602111	0					
ANR	3603240	ArgumentList	avctx		3602111	1					
ANR	3603241	Argument	avctx		3602111	0					
ANR	3603242	Identifier	avctx		3602111	0					
ANR	3603243	Argument	AV_LOG_DEBUG		3602111	1					
ANR	3603244	Identifier	AV_LOG_DEBUG		3602111	0					
ANR	3603245	Argument	"""G"""		3602111	2					
ANR	3603246	PrimaryExpression	"""G"""		3602111	0					
ANR	3603247	ElseStatement	else		3602111	0					
ANR	3603248	IfStatement	if ( IS_SKIP ( mb_type ) )		3602111	0					
ANR	3603249	Condition	IS_SKIP ( mb_type )	265:29:6728:6743	3602111	0	True				
ANR	3603250	CallExpression	IS_SKIP ( mb_type )		3602111	0					
ANR	3603251	Callee	IS_SKIP		3602111	0					
ANR	3603252	Identifier	IS_SKIP		3602111	0					
ANR	3603253	ArgumentList	mb_type		3602111	1					
ANR	3603254	Argument	mb_type		3602111	0					
ANR	3603255	Identifier	mb_type		3602111	0					
ANR	3603256	ExpressionStatement	"av_log ( avctx , AV_LOG_DEBUG , ""S"" )"	267:24:6771:6803	3602111	1	True				
ANR	3603257	CallExpression	"av_log ( avctx , AV_LOG_DEBUG , ""S"" )"		3602111	0					
ANR	3603258	Callee	av_log		3602111	0					
ANR	3603259	Identifier	av_log		3602111	0					
ANR	3603260	ArgumentList	avctx		3602111	1					
ANR	3603261	Argument	avctx		3602111	0					
ANR	3603262	Identifier	avctx		3602111	0					
ANR	3603263	Argument	AV_LOG_DEBUG		3602111	1					
ANR	3603264	Identifier	AV_LOG_DEBUG		3602111	0					
ANR	3603265	Argument	"""S"""		3602111	2					
ANR	3603266	PrimaryExpression	"""S"""		3602111	0					
ANR	3603267	ElseStatement	else		3602111	0					
ANR	3603268	IfStatement	"if ( ! USES_LIST ( mb_type , 1 ) )"		3602111	0					
ANR	3603269	Condition	"! USES_LIST ( mb_type , 1 )"	269:29:6835:6856	3602111	0	True				
ANR	3603270	UnaryOperationExpression	"! USES_LIST ( mb_type , 1 )"		3602111	0					
ANR	3603271	UnaryOperator	!		3602111	0					
ANR	3603272	CallExpression	"USES_LIST ( mb_type , 1 )"		3602111	1					
ANR	3603273	Callee	USES_LIST		3602111	0					
ANR	3603274	Identifier	USES_LIST		3602111	0					
ANR	3603275	ArgumentList	mb_type		3602111	1					
ANR	3603276	Argument	mb_type		3602111	0					
ANR	3603277	Identifier	mb_type		3602111	0					
ANR	3603278	Argument	1		3602111	1					
ANR	3603279	PrimaryExpression	1		3602111	0					
ANR	3603280	ExpressionStatement	"av_log ( avctx , AV_LOG_DEBUG , "">"" )"	271:24:6884:6916	3602111	1	True				
ANR	3603281	CallExpression	"av_log ( avctx , AV_LOG_DEBUG , "">"" )"		3602111	0					
ANR	3603282	Callee	av_log		3602111	0					
ANR	3603283	Identifier	av_log		3602111	0					
ANR	3603284	ArgumentList	avctx		3602111	1					
ANR	3603285	Argument	avctx		3602111	0					
ANR	3603286	Identifier	avctx		3602111	0					
ANR	3603287	Argument	AV_LOG_DEBUG		3602111	1					
ANR	3603288	Identifier	AV_LOG_DEBUG		3602111	0					
ANR	3603289	Argument	""">"""		3602111	2					
ANR	3603290	PrimaryExpression	""">"""		3602111	0					
ANR	3603291	ElseStatement	else		3602111	0					
ANR	3603292	IfStatement	"if ( ! USES_LIST ( mb_type , 0 ) )"		3602111	0					
ANR	3603293	Condition	"! USES_LIST ( mb_type , 0 )"	273:29:6948:6969	3602111	0	True				
ANR	3603294	UnaryOperationExpression	"! USES_LIST ( mb_type , 0 )"		3602111	0					
ANR	3603295	UnaryOperator	!		3602111	0					
ANR	3603296	CallExpression	"USES_LIST ( mb_type , 0 )"		3602111	1					
ANR	3603297	Callee	USES_LIST		3602111	0					
ANR	3603298	Identifier	USES_LIST		3602111	0					
ANR	3603299	ArgumentList	mb_type		3602111	1					
ANR	3603300	Argument	mb_type		3602111	0					
ANR	3603301	Identifier	mb_type		3602111	0					
ANR	3603302	Argument	0		3602111	1					
ANR	3603303	PrimaryExpression	0		3602111	0					
ANR	3603304	ExpressionStatement	"av_log ( avctx , AV_LOG_DEBUG , ""<"" )"	275:24:6997:7029	3602111	1	True				
ANR	3603305	CallExpression	"av_log ( avctx , AV_LOG_DEBUG , ""<"" )"		3602111	0					
ANR	3603306	Callee	av_log		3602111	0					
ANR	3603307	Identifier	av_log		3602111	0					
ANR	3603308	ArgumentList	avctx		3602111	1					
ANR	3603309	Argument	avctx		3602111	0					
ANR	3603310	Identifier	avctx		3602111	0					
ANR	3603311	Argument	AV_LOG_DEBUG		3602111	1					
ANR	3603312	Identifier	AV_LOG_DEBUG		3602111	0					
ANR	3603313	Argument	"""<"""		3602111	2					
ANR	3603314	PrimaryExpression	"""<"""		3602111	0					
ANR	3603315	ElseStatement	else		3602111	0					
ANR	3603316	CompoundStatement		269:25:6735:6735	3602111	0					
ANR	3603317	ExpressionStatement	"av_assert2 ( USES_LIST ( mb_type , 0 ) && USES_LIST ( mb_type , 1 ) )"	279:24:7084:7142	3602111	0	True				
ANR	3603318	CallExpression	"av_assert2 ( USES_LIST ( mb_type , 0 ) && USES_LIST ( mb_type , 1 ) )"		3602111	0					
ANR	3603319	Callee	av_assert2		3602111	0					
ANR	3603320	Identifier	av_assert2		3602111	0					
ANR	3603321	ArgumentList	"USES_LIST ( mb_type , 0 ) && USES_LIST ( mb_type , 1 )"		3602111	1					
ANR	3603322	Argument	"USES_LIST ( mb_type , 0 ) && USES_LIST ( mb_type , 1 )"		3602111	0					
ANR	3603323	AndExpression	"USES_LIST ( mb_type , 0 ) && USES_LIST ( mb_type , 1 )"		3602111	0		&&			
ANR	3603324	CallExpression	"USES_LIST ( mb_type , 0 )"		3602111	0					
ANR	3603325	Callee	USES_LIST		3602111	0					
ANR	3603326	Identifier	USES_LIST		3602111	0					
ANR	3603327	ArgumentList	mb_type		3602111	1					
ANR	3603328	Argument	mb_type		3602111	0					
ANR	3603329	Identifier	mb_type		3602111	0					
ANR	3603330	Argument	0		3602111	1					
ANR	3603331	PrimaryExpression	0		3602111	0					
ANR	3603332	CallExpression	"USES_LIST ( mb_type , 1 )"		3602111	1					
ANR	3603333	Callee	USES_LIST		3602111	0					
ANR	3603334	Identifier	USES_LIST		3602111	0					
ANR	3603335	ArgumentList	mb_type		3602111	1					
ANR	3603336	Argument	mb_type		3602111	0					
ANR	3603337	Identifier	mb_type		3602111	0					
ANR	3603338	Argument	1		3602111	1					
ANR	3603339	PrimaryExpression	1		3602111	0					
ANR	3603340	ExpressionStatement	"av_log ( avctx , AV_LOG_DEBUG , ""X"" )"	281:24:7169:7201	3602111	1	True				
ANR	3603341	CallExpression	"av_log ( avctx , AV_LOG_DEBUG , ""X"" )"		3602111	0					
ANR	3603342	Callee	av_log		3602111	0					
ANR	3603343	Identifier	av_log		3602111	0					
ANR	3603344	ArgumentList	avctx		3602111	1					
ANR	3603345	Argument	avctx		3602111	0					
ANR	3603346	Identifier	avctx		3602111	0					
ANR	3603347	Argument	AV_LOG_DEBUG		3602111	1					
ANR	3603348	Identifier	AV_LOG_DEBUG		3602111	0					
ANR	3603349	Argument	"""X"""		3602111	2					
ANR	3603350	PrimaryExpression	"""X"""		3602111	0					
ANR	3603351	IfStatement	if ( IS_8X8 ( mb_type ) )		3602111	2					
ANR	3603352	Condition	IS_8X8 ( mb_type )	289:24:7290:7304	3602111	0	True				
ANR	3603353	CallExpression	IS_8X8 ( mb_type )		3602111	0					
ANR	3603354	Callee	IS_8X8		3602111	0					
ANR	3603355	Identifier	IS_8X8		3602111	0					
ANR	3603356	ArgumentList	mb_type		3602111	1					
ANR	3603357	Argument	mb_type		3602111	0					
ANR	3603358	Identifier	mb_type		3602111	0					
ANR	3603359	ExpressionStatement	"av_log ( avctx , AV_LOG_DEBUG , ""+"" )"	291:24:7332:7364	3602111	1	True				
ANR	3603360	CallExpression	"av_log ( avctx , AV_LOG_DEBUG , ""+"" )"		3602111	0					
ANR	3603361	Callee	av_log		3602111	0					
ANR	3603362	Identifier	av_log		3602111	0					
ANR	3603363	ArgumentList	avctx		3602111	1					
ANR	3603364	Argument	avctx		3602111	0					
ANR	3603365	Identifier	avctx		3602111	0					
ANR	3603366	Argument	AV_LOG_DEBUG		3602111	1					
ANR	3603367	Identifier	AV_LOG_DEBUG		3602111	0					
ANR	3603368	Argument	"""+"""		3602111	2					
ANR	3603369	PrimaryExpression	"""+"""		3602111	0					
ANR	3603370	ElseStatement	else		3602111	0					
ANR	3603371	IfStatement	if ( IS_16X8 ( mb_type ) )		3602111	0					
ANR	3603372	Condition	IS_16X8 ( mb_type )	293:29:7396:7411	3602111	0	True				
ANR	3603373	CallExpression	IS_16X8 ( mb_type )		3602111	0					
ANR	3603374	Callee	IS_16X8		3602111	0					
ANR	3603375	Identifier	IS_16X8		3602111	0					
ANR	3603376	ArgumentList	mb_type		3602111	1					
ANR	3603377	Argument	mb_type		3602111	0					
ANR	3603378	Identifier	mb_type		3602111	0					
ANR	3603379	ExpressionStatement	"av_log ( avctx , AV_LOG_DEBUG , ""-"" )"	295:24:7439:7471	3602111	1	True				
ANR	3603380	CallExpression	"av_log ( avctx , AV_LOG_DEBUG , ""-"" )"		3602111	0					
ANR	3603381	Callee	av_log		3602111	0					
ANR	3603382	Identifier	av_log		3602111	0					
ANR	3603383	ArgumentList	avctx		3602111	1					
ANR	3603384	Argument	avctx		3602111	0					
ANR	3603385	Identifier	avctx		3602111	0					
ANR	3603386	Argument	AV_LOG_DEBUG		3602111	1					
ANR	3603387	Identifier	AV_LOG_DEBUG		3602111	0					
ANR	3603388	Argument	"""-"""		3602111	2					
ANR	3603389	PrimaryExpression	"""-"""		3602111	0					
ANR	3603390	ElseStatement	else		3602111	0					
ANR	3603391	IfStatement	if ( IS_8X16 ( mb_type ) )		3602111	0					
ANR	3603392	Condition	IS_8X16 ( mb_type )	297:29:7503:7518	3602111	0	True				
ANR	3603393	CallExpression	IS_8X16 ( mb_type )		3602111	0					
ANR	3603394	Callee	IS_8X16		3602111	0					
ANR	3603395	Identifier	IS_8X16		3602111	0					
ANR	3603396	ArgumentList	mb_type		3602111	1					
ANR	3603397	Argument	mb_type		3602111	0					
ANR	3603398	Identifier	mb_type		3602111	0					
ANR	3603399	ExpressionStatement	"av_log ( avctx , AV_LOG_DEBUG , ""|"" )"	299:24:7546:7578	3602111	1	True				
ANR	3603400	CallExpression	"av_log ( avctx , AV_LOG_DEBUG , ""|"" )"		3602111	0					
ANR	3603401	Callee	av_log		3602111	0					
ANR	3603402	Identifier	av_log		3602111	0					
ANR	3603403	ArgumentList	avctx		3602111	1					
ANR	3603404	Argument	avctx		3602111	0					
ANR	3603405	Identifier	avctx		3602111	0					
ANR	3603406	Argument	AV_LOG_DEBUG		3602111	1					
ANR	3603407	Identifier	AV_LOG_DEBUG		3602111	0					
ANR	3603408	Argument	"""|"""		3602111	2					
ANR	3603409	PrimaryExpression	"""|"""		3602111	0					
ANR	3603410	ElseStatement	else		3602111	0					
ANR	3603411	IfStatement	if ( IS_INTRA ( mb_type ) || IS_16X16 ( mb_type ) )		3602111	0					
ANR	3603412	Condition	IS_INTRA ( mb_type ) || IS_16X16 ( mb_type )	301:29:7610:7647	3602111	0	True				
ANR	3603413	OrExpression	IS_INTRA ( mb_type ) || IS_16X16 ( mb_type )		3602111	0		||			
ANR	3603414	CallExpression	IS_INTRA ( mb_type )		3602111	0					
ANR	3603415	Callee	IS_INTRA		3602111	0					
ANR	3603416	Identifier	IS_INTRA		3602111	0					
ANR	3603417	ArgumentList	mb_type		3602111	1					
ANR	3603418	Argument	mb_type		3602111	0					
ANR	3603419	Identifier	mb_type		3602111	0					
ANR	3603420	CallExpression	IS_16X16 ( mb_type )		3602111	1					
ANR	3603421	Callee	IS_16X16		3602111	0					
ANR	3603422	Identifier	IS_16X16		3602111	0					
ANR	3603423	ArgumentList	mb_type		3602111	1					
ANR	3603424	Argument	mb_type		3602111	0					
ANR	3603425	Identifier	mb_type		3602111	0					
ANR	3603426	ExpressionStatement	"av_log ( avctx , AV_LOG_DEBUG , "" "" )"	303:24:7675:7707	3602111	1	True				
ANR	3603427	CallExpression	"av_log ( avctx , AV_LOG_DEBUG , "" "" )"		3602111	0					
ANR	3603428	Callee	av_log		3602111	0					
ANR	3603429	Identifier	av_log		3602111	0					
ANR	3603430	ArgumentList	avctx		3602111	1					
ANR	3603431	Argument	avctx		3602111	0					
ANR	3603432	Identifier	avctx		3602111	0					
ANR	3603433	Argument	AV_LOG_DEBUG		3602111	1					
ANR	3603434	Identifier	AV_LOG_DEBUG		3602111	0					
ANR	3603435	Argument	""" """		3602111	2					
ANR	3603436	PrimaryExpression	""" """		3602111	0					
ANR	3603437	ElseStatement	else		3602111	0					
ANR	3603438	ExpressionStatement	"av_log ( avctx , AV_LOG_DEBUG , ""?"" )"	307:24:7760:7792	3602111	0	True				
ANR	3603439	CallExpression	"av_log ( avctx , AV_LOG_DEBUG , ""?"" )"		3602111	0					
ANR	3603440	Callee	av_log		3602111	0					
ANR	3603441	Identifier	av_log		3602111	0					
ANR	3603442	ArgumentList	avctx		3602111	1					
ANR	3603443	Argument	avctx		3602111	0					
ANR	3603444	Identifier	avctx		3602111	0					
ANR	3603445	Argument	AV_LOG_DEBUG		3602111	1					
ANR	3603446	Identifier	AV_LOG_DEBUG		3602111	0					
ANR	3603447	Argument	"""?"""		3602111	2					
ANR	3603448	PrimaryExpression	"""?"""		3602111	0					
ANR	3603449	IfStatement	if ( IS_INTERLACED ( mb_type ) )		3602111	3					
ANR	3603450	Condition	IS_INTERLACED ( mb_type )	313:24:7823:7844	3602111	0	True				
ANR	3603451	CallExpression	IS_INTERLACED ( mb_type )		3602111	0					
ANR	3603452	Callee	IS_INTERLACED		3602111	0					
ANR	3603453	Identifier	IS_INTERLACED		3602111	0					
ANR	3603454	ArgumentList	mb_type		3602111	1					
ANR	3603455	Argument	mb_type		3602111	0					
ANR	3603456	Identifier	mb_type		3602111	0					
ANR	3603457	ExpressionStatement	"av_log ( avctx , AV_LOG_DEBUG , ""="" )"	315:24:7872:7904	3602111	1	True				
ANR	3603458	CallExpression	"av_log ( avctx , AV_LOG_DEBUG , ""="" )"		3602111	0					
ANR	3603459	Callee	av_log		3602111	0					
ANR	3603460	Identifier	av_log		3602111	0					
ANR	3603461	ArgumentList	avctx		3602111	1					
ANR	3603462	Argument	avctx		3602111	0					
ANR	3603463	Identifier	avctx		3602111	0					
ANR	3603464	Argument	AV_LOG_DEBUG		3602111	1					
ANR	3603465	Identifier	AV_LOG_DEBUG		3602111	0					
ANR	3603466	Argument	"""="""		3602111	2					
ANR	3603467	PrimaryExpression	"""="""		3602111	0					
ANR	3603468	ElseStatement	else		3602111	0					
ANR	3603469	ExpressionStatement	"av_log ( avctx , AV_LOG_DEBUG , "" "" )"	319:24:7957:7989	3602111	0	True				
ANR	3603470	CallExpression	"av_log ( avctx , AV_LOG_DEBUG , "" "" )"		3602111	0					
ANR	3603471	Callee	av_log		3602111	0					
ANR	3603472	Identifier	av_log		3602111	0					
ANR	3603473	ArgumentList	avctx		3602111	1					
ANR	3603474	Argument	avctx		3602111	0					
ANR	3603475	Identifier	avctx		3602111	0					
ANR	3603476	Argument	AV_LOG_DEBUG		3602111	1					
ANR	3603477	Identifier	AV_LOG_DEBUG		3602111	0					
ANR	3603478	Argument	""" """		3602111	2					
ANR	3603479	PrimaryExpression	""" """		3602111	0					
ANR	3603480	ExpressionStatement	"av_log ( avctx , AV_LOG_DEBUG , ""\\n"" )"	325:12:8038:8071	3602111	1	True				
ANR	3603481	CallExpression	"av_log ( avctx , AV_LOG_DEBUG , ""\\n"" )"		3602111	0					
ANR	3603482	Callee	av_log		3602111	0					
ANR	3603483	Identifier	av_log		3602111	0					
ANR	3603484	ArgumentList	avctx		3602111	1					
ANR	3603485	Argument	avctx		3602111	0					
ANR	3603486	Identifier	avctx		3602111	0					
ANR	3603487	Argument	AV_LOG_DEBUG		3602111	1					
ANR	3603488	Identifier	AV_LOG_DEBUG		3602111	0					
ANR	3603489	Argument	"""\\n"""		3602111	2					
ANR	3603490	PrimaryExpression	"""\\n"""		3602111	0					
ANR	3603491	IfStatement	if ( ( avctx -> debug & ( FF_DEBUG_VIS_QP | FF_DEBUG_VIS_MB_TYPE ) ) || ( avctx -> debug_mv ) )		3602111	22					
ANR	3603492	Condition	( avctx -> debug & ( FF_DEBUG_VIS_QP | FF_DEBUG_VIS_MB_TYPE ) ) || ( avctx -> debug_mv )	333:8:8102:8188	3602111	0	True				
ANR	3603493	OrExpression	( avctx -> debug & ( FF_DEBUG_VIS_QP | FF_DEBUG_VIS_MB_TYPE ) ) || ( avctx -> debug_mv )		3602111	0		||			
ANR	3603494	BitAndExpression	avctx -> debug & ( FF_DEBUG_VIS_QP | FF_DEBUG_VIS_MB_TYPE )		3602111	0		&			
ANR	3603495	PtrMemberAccess	avctx -> debug		3602111	0					
ANR	3603496	Identifier	avctx		3602111	0					
ANR	3603497	Identifier	debug		3602111	1					
ANR	3603498	InclusiveOrExpression	FF_DEBUG_VIS_QP | FF_DEBUG_VIS_MB_TYPE		3602111	1		|			
ANR	3603499	Identifier	FF_DEBUG_VIS_QP		3602111	0					
ANR	3603500	Identifier	FF_DEBUG_VIS_MB_TYPE		3602111	1					
ANR	3603501	PtrMemberAccess	avctx -> debug_mv		3602111	1					
ANR	3603502	Identifier	avctx		3602111	0					
ANR	3603503	Identifier	debug_mv		3602111	1					
ANR	3603504	CompoundStatement		349:8:8291:8431	3602111	1					
ANR	3603505	IdentifierDeclStatement	int mb_y ;	337:8:8202:8210	3602111	0	True				
ANR	3603506	IdentifierDecl	mb_y		3602111	0					
ANR	3603507	IdentifierDeclType	int		3602111	0					
ANR	3603508	Identifier	mb_y		3602111	1					
ANR	3603509	IdentifierDeclStatement	int i ;	339:8:8221:8226	3602111	1	True				
ANR	3603510	IdentifierDecl	i		3602111	0					
ANR	3603511	IdentifierDeclType	int		3602111	0					
ANR	3603512	Identifier	i		3602111	1					
ANR	3603513	IdentifierDeclStatement	"int h_chroma_shift , v_chroma_shift , block_height ;"	341:8:8237:8285	3602111	2	True				
ANR	3603514	IdentifierDecl	h_chroma_shift		3602111	0					
ANR	3603515	IdentifierDeclType	int		3602111	0					
ANR	3603516	Identifier	h_chroma_shift		3602111	1					
ANR	3603517	IdentifierDecl	v_chroma_shift		3602111	1					
ANR	3603518	IdentifierDeclType	int		3602111	0					
ANR	3603519	Identifier	v_chroma_shift		3602111	1					
ANR	3603520	IdentifierDecl	block_height		3602111	2					
ANR	3603521	IdentifierDeclType	int		3602111	0					
ANR	3603522	Identifier	block_height		3602111	1					
ANR	3603523	IdentifierDeclStatement	const int shift = 1 + quarter_sample ;	345:8:8314:8350	3602111	3	True				
ANR	3603524	IdentifierDecl	shift = 1 + quarter_sample		3602111	0					
ANR	3603525	IdentifierDeclType	const int		3602111	0					
ANR	3603526	Identifier	shift		3602111	1					
ANR	3603527	AssignmentExpression	shift = 1 + quarter_sample		3602111	2		=			
ANR	3603528	Identifier	shift		3602111	0					
ANR	3603529	AdditiveExpression	1 + quarter_sample		3602111	1		+			
ANR	3603530	PrimaryExpression	1		3602111	0					
ANR	3603531	Identifier	quarter_sample		3602111	1					
ANR	3603532	IdentifierDeclStatement	uint8_t * ptr ;	347:8:8361:8373	3602111	4	True				
ANR	3603533	IdentifierDecl	* ptr		3602111	0					
ANR	3603534	IdentifierDeclType	uint8_t *		3602111	0					
ANR	3603535	Identifier	ptr		3602111	1					
ANR	3603536	IdentifierDeclStatement	const int width = avctx -> width ;	349:8:8384:8423	3602111	5	True				
ANR	3603537	IdentifierDecl	width = avctx -> width		3602111	0					
ANR	3603538	IdentifierDeclType	const int		3602111	0					
ANR	3603539	Identifier	width		3602111	1					
ANR	3603540	AssignmentExpression	width = avctx -> width		3602111	2		=			
ANR	3603541	Identifier	width		3602111	0					
ANR	3603542	PtrMemberAccess	avctx -> width		3602111	1					
ANR	3603543	Identifier	avctx		3602111	0					
ANR	3603544	Identifier	width		3602111	1					
ANR	3603545	IdentifierDeclStatement	const int height = avctx -> height ;	351:8:8434:8474	3602111	6	True				
ANR	3603546	IdentifierDecl	height = avctx -> height		3602111	0					
ANR	3603547	IdentifierDeclType	const int		3602111	0					
ANR	3603548	Identifier	height		3602111	1					
ANR	3603549	AssignmentExpression	height = avctx -> height		3602111	2		=			
ANR	3603550	Identifier	height		3602111	0					
ANR	3603551	PtrMemberAccess	avctx -> height		3602111	1					
ANR	3603552	Identifier	avctx		3602111	0					
ANR	3603553	Identifier	height		3602111	1					
ANR	3603554	IdentifierDeclStatement	const int mv_sample_log2 = avctx -> codec_id == AV_CODEC_ID_H264 || avctx -> codec_id == AV_CODEC_ID_SVQ3 ? 2 : 1 ;	355:8:8493:8602	3602111	7	True				
ANR	3603555	IdentifierDecl	mv_sample_log2 = avctx -> codec_id == AV_CODEC_ID_H264 || avctx -> codec_id == AV_CODEC_ID_SVQ3 ? 2 : 1		3602111	0					
ANR	3603556	IdentifierDeclType	const int		3602111	0					
ANR	3603557	Identifier	mv_sample_log2		3602111	1					
ANR	3603558	AssignmentExpression	mv_sample_log2 = avctx -> codec_id == AV_CODEC_ID_H264 || avctx -> codec_id == AV_CODEC_ID_SVQ3 ? 2 : 1		3602111	2		=			
ANR	3603559	Identifier	mv_sample_log2		3602111	0					
ANR	3603560	ConditionalExpression	avctx -> codec_id == AV_CODEC_ID_H264 || avctx -> codec_id == AV_CODEC_ID_SVQ3 ? 2 : 1		3602111	1					
ANR	3603561	Condition	avctx -> codec_id == AV_CODEC_ID_H264 || avctx -> codec_id == AV_CODEC_ID_SVQ3		3602111	0					
ANR	3603562	OrExpression	avctx -> codec_id == AV_CODEC_ID_H264 || avctx -> codec_id == AV_CODEC_ID_SVQ3		3602111	0		||			
ANR	3603563	EqualityExpression	avctx -> codec_id == AV_CODEC_ID_H264		3602111	0		==			
ANR	3603564	PtrMemberAccess	avctx -> codec_id		3602111	0					
ANR	3603565	Identifier	avctx		3602111	0					
ANR	3603566	Identifier	codec_id		3602111	1					
ANR	3603567	Identifier	AV_CODEC_ID_H264		3602111	1					
ANR	3603568	EqualityExpression	avctx -> codec_id == AV_CODEC_ID_SVQ3		3602111	1		==			
ANR	3603569	PtrMemberAccess	avctx -> codec_id		3602111	0					
ANR	3603570	Identifier	avctx		3602111	0					
ANR	3603571	Identifier	codec_id		3602111	1					
ANR	3603572	Identifier	AV_CODEC_ID_SVQ3		3602111	1					
ANR	3603573	PrimaryExpression	2		3602111	1					
ANR	3603574	PrimaryExpression	1		3602111	2					
ANR	3603575	IdentifierDeclStatement	const int mv_stride = ( mb_width << mv_sample_log2 ) + ( avctx -> codec -> id == AV_CODEC_ID_H264 ? 0 : 1 ) ;	357:8:8613:8753	3602111	8	True				
ANR	3603576	IdentifierDecl	mv_stride = ( mb_width << mv_sample_log2 ) + ( avctx -> codec -> id == AV_CODEC_ID_H264 ? 0 : 1 )		3602111	0					
ANR	3603577	IdentifierDeclType	const int		3602111	0					
ANR	3603578	Identifier	mv_stride		3602111	1					
ANR	3603579	AssignmentExpression	mv_stride = ( mb_width << mv_sample_log2 ) + ( avctx -> codec -> id == AV_CODEC_ID_H264 ? 0 : 1 )		3602111	2		=			
ANR	3603580	Identifier	mv_stride		3602111	0					
ANR	3603581	AdditiveExpression	( mb_width << mv_sample_log2 ) + ( avctx -> codec -> id == AV_CODEC_ID_H264 ? 0 : 1 )		3602111	1		+			
ANR	3603582	ShiftExpression	mb_width << mv_sample_log2		3602111	0		<<			
ANR	3603583	Identifier	mb_width		3602111	0					
ANR	3603584	Identifier	mv_sample_log2		3602111	1					
ANR	3603585	ConditionalExpression	avctx -> codec -> id == AV_CODEC_ID_H264 ? 0 : 1		3602111	1					
ANR	3603586	Condition	avctx -> codec -> id == AV_CODEC_ID_H264		3602111	0					
ANR	3603587	EqualityExpression	avctx -> codec -> id == AV_CODEC_ID_H264		3602111	0		==			
ANR	3603588	PtrMemberAccess	avctx -> codec -> id		3602111	0					
ANR	3603589	PtrMemberAccess	avctx -> codec		3602111	0					
ANR	3603590	Identifier	avctx		3602111	0					
ANR	3603591	Identifier	codec		3602111	1					
ANR	3603592	Identifier	id		3602111	1					
ANR	3603593	Identifier	AV_CODEC_ID_H264		3602111	1					
ANR	3603594	PrimaryExpression	0		3602111	1					
ANR	3603595	PrimaryExpression	1		3602111	2					
ANR	3603596	ExpressionStatement	* low_delay = 0	363:8:8766:8780	3602111	9	True				
ANR	3603597	AssignmentExpression	* low_delay = 0		3602111	0		=			
ANR	3603598	UnaryOperationExpression	* low_delay		3602111	0					
ANR	3603599	UnaryOperator	*		3602111	0					
ANR	3603600	Identifier	low_delay		3602111	1					
ANR	3603601	PrimaryExpression	0		3602111	1					
ANR	3603602	ExpressionStatement	"avcodec_get_chroma_sub_sample ( avctx -> pix_fmt , & h_chroma_shift , & v_chroma_shift )"	367:8:8851:8930	3602111	10	True				
ANR	3603603	CallExpression	"avcodec_get_chroma_sub_sample ( avctx -> pix_fmt , & h_chroma_shift , & v_chroma_shift )"		3602111	0					
ANR	3603604	Callee	avcodec_get_chroma_sub_sample		3602111	0					
ANR	3603605	Identifier	avcodec_get_chroma_sub_sample		3602111	0					
ANR	3603606	ArgumentList	avctx -> pix_fmt		3602111	1					
ANR	3603607	Argument	avctx -> pix_fmt		3602111	0					
ANR	3603608	PtrMemberAccess	avctx -> pix_fmt		3602111	0					
ANR	3603609	Identifier	avctx		3602111	0					
ANR	3603610	Identifier	pix_fmt		3602111	1					
ANR	3603611	Argument	& h_chroma_shift		3602111	1					
ANR	3603612	UnaryOperationExpression	& h_chroma_shift		3602111	0					
ANR	3603613	UnaryOperator	&		3602111	0					
ANR	3603614	Identifier	h_chroma_shift		3602111	1					
ANR	3603615	Argument	& v_chroma_shift		3602111	2					
ANR	3603616	UnaryOperationExpression	& v_chroma_shift		3602111	0					
ANR	3603617	UnaryOperator	&		3602111	0					
ANR	3603618	Identifier	v_chroma_shift		3602111	1					
ANR	3603619	ExpressionStatement	av_frame_make_writable ( pict )	371:8:8943:8971	3602111	11	True				
ANR	3603620	CallExpression	av_frame_make_writable ( pict )		3602111	0					
ANR	3603621	Callee	av_frame_make_writable		3602111	0					
ANR	3603622	Identifier	av_frame_make_writable		3602111	0					
ANR	3603623	ArgumentList	pict		3602111	1					
ANR	3603624	Argument	pict		3602111	0					
ANR	3603625	Identifier	pict		3602111	0					
ANR	3603626	ExpressionStatement	pict -> opaque = NULL	375:8:8984:9003	3602111	12	True				
ANR	3603627	AssignmentExpression	pict -> opaque = NULL		3602111	0		=			
ANR	3603628	PtrMemberAccess	pict -> opaque		3602111	0					
ANR	3603629	Identifier	pict		3602111	0					
ANR	3603630	Identifier	opaque		3602111	1					
ANR	3603631	Identifier	NULL		3602111	1					
ANR	3603632	ExpressionStatement	ptr = pict -> data [ 0 ]	379:8:9032:9060	3602111	13	True				
ANR	3603633	AssignmentExpression	ptr = pict -> data [ 0 ]		3602111	0		=			
ANR	3603634	Identifier	ptr		3602111	0					
ANR	3603635	ArrayIndexing	pict -> data [ 0 ]		3602111	1					
ANR	3603636	PtrMemberAccess	pict -> data		3602111	0					
ANR	3603637	Identifier	pict		3602111	0					
ANR	3603638	Identifier	data		3602111	1					
ANR	3603639	PrimaryExpression	0		3602111	1					
ANR	3603640	ExpressionStatement	block_height = 16 >> v_chroma_shift	383:8:9079:9114	3602111	14	True				
ANR	3603641	AssignmentExpression	block_height = 16 >> v_chroma_shift		3602111	0		=			
ANR	3603642	Identifier	block_height		3602111	0					
ANR	3603643	ShiftExpression	16 >> v_chroma_shift		3602111	1		>>			
ANR	3603644	PrimaryExpression	16		3602111	0					
ANR	3603645	Identifier	v_chroma_shift		3602111	1					
ANR	3603646	ForStatement	for ( mb_y = 0 ; mb_y < mb_height ; mb_y ++ )		3602111	15					
ANR	3603647	ForInit	mb_y = 0 ;	387:13:9132:9140	3602111	0	True				
ANR	3603648	AssignmentExpression	mb_y = 0		3602111	0		=			
ANR	3603649	Identifier	mb_y		3602111	0					
ANR	3603650	PrimaryExpression	0		3602111	1					
ANR	3603651	Condition	mb_y < mb_height	387:23:9142:9157	3602111	1	True				
ANR	3603652	RelationalExpression	mb_y < mb_height		3602111	0		<			
ANR	3603653	Identifier	mb_y		3602111	0					
ANR	3603654	Identifier	mb_height		3602111	1					
ANR	3603655	PostIncDecOperationExpression	mb_y ++	387:41:9160:9165	3602111	2	True				
ANR	3603656	Identifier	mb_y		3602111	0					
ANR	3603657	IncDec	++		3602111	1					
ANR	3603658	CompoundStatement		381:12:8861:8869	3602111	3					
ANR	3603659	IdentifierDeclStatement	int mb_x ;	389:12:9183:9191	3602111	0	True				
ANR	3603660	IdentifierDecl	mb_x		3602111	0					
ANR	3603661	IdentifierDeclType	int		3602111	0					
ANR	3603662	Identifier	mb_x		3602111	1					
ANR	3603663	ForStatement	for ( mb_x = 0 ; mb_x < mb_width ; mb_x ++ )		3602111	1					
ANR	3603664	ForInit	mb_x = 0 ;	391:17:9211:9219	3602111	0	True				
ANR	3603665	AssignmentExpression	mb_x = 0		3602111	0		=			
ANR	3603666	Identifier	mb_x		3602111	0					
ANR	3603667	PrimaryExpression	0		3602111	1					
ANR	3603668	Condition	mb_x < mb_width	391:27:9221:9235	3602111	1	True				
ANR	3603669	RelationalExpression	mb_x < mb_width		3602111	0		<			
ANR	3603670	Identifier	mb_x		3602111	0					
ANR	3603671	Identifier	mb_width		3602111	1					
ANR	3603672	PostIncDecOperationExpression	mb_x ++	391:44:9238:9243	3602111	2	True				
ANR	3603673	Identifier	mb_x		3602111	0					
ANR	3603674	IncDec	++		3602111	1					
ANR	3603675	CompoundStatement		385:16:8943:8987	3602111	3					
ANR	3603676	IdentifierDeclStatement	const int mb_index = mb_x + mb_y * mb_stride ;	393:16:9265:9309	3602111	0	True				
ANR	3603677	IdentifierDecl	mb_index = mb_x + mb_y * mb_stride		3602111	0					
ANR	3603678	IdentifierDeclType	const int		3602111	0					
ANR	3603679	Identifier	mb_index		3602111	1					
ANR	3603680	AssignmentExpression	mb_index = mb_x + mb_y * mb_stride		3602111	2		=			
ANR	3603681	Identifier	mb_index		3602111	0					
ANR	3603682	AdditiveExpression	mb_x + mb_y * mb_stride		3602111	1		+			
ANR	3603683	Identifier	mb_x		3602111	0					
ANR	3603684	MultiplicativeExpression	mb_y * mb_stride		3602111	1		*			
ANR	3603685	Identifier	mb_y		3602111	0					
ANR	3603686	Identifier	mb_stride		3602111	1					
ANR	3603687	IfStatement	if ( ( avctx -> debug_mv ) && motion_val [ 0 ] )		3602111	1					
ANR	3603688	Condition	( avctx -> debug_mv ) && motion_val [ 0 ]	397:20:9350:9383	3602111	0	True				
ANR	3603689	AndExpression	( avctx -> debug_mv ) && motion_val [ 0 ]		3602111	0		&&			
ANR	3603690	PtrMemberAccess	avctx -> debug_mv		3602111	0					
ANR	3603691	Identifier	avctx		3602111	0					
ANR	3603692	Identifier	debug_mv		3602111	1					
ANR	3603693	ArrayIndexing	motion_val [ 0 ]		3602111	1					
ANR	3603694	Identifier	motion_val		3602111	0					
ANR	3603695	PrimaryExpression	0		3602111	1					
ANR	3603696	CompoundStatement		391:20:9087:9095	3602111	1					
ANR	3603697	IdentifierDeclStatement	int type ;	399:20:9409:9417	3602111	0	True				
ANR	3603698	IdentifierDecl	type		3602111	0					
ANR	3603699	IdentifierDeclType	int		3602111	0					
ANR	3603700	Identifier	type		3602111	1					
ANR	3603701	ForStatement	for ( type = 0 ; type < 3 ; type ++ )		3602111	1					
ANR	3603702	ForInit	type = 0 ;	401:25:9445:9453	3602111	0	True				
ANR	3603703	AssignmentExpression	type = 0		3602111	0		=			
ANR	3603704	Identifier	type		3602111	0					
ANR	3603705	PrimaryExpression	0		3602111	1					
ANR	3603706	Condition	type < 3	401:35:9455:9462	3602111	1	True				
ANR	3603707	RelationalExpression	type < 3		3602111	0		<			
ANR	3603708	Identifier	type		3602111	0					
ANR	3603709	PrimaryExpression	3		3602111	1					
ANR	3603710	PostIncDecOperationExpression	type ++	401:45:9465:9470	3602111	2	True				
ANR	3603711	Identifier	type		3602111	0					
ANR	3603712	IncDec	++		3602111	1					
ANR	3603713	CompoundStatement		395:24:9178:9195	3602111	3					
ANR	3603714	IdentifierDeclStatement	int direction = 0 ;	403:24:9500:9517	3602111	0	True				
ANR	3603715	IdentifierDecl	direction = 0		3602111	0					
ANR	3603716	IdentifierDeclType	int		3602111	0					
ANR	3603717	Identifier	direction		3602111	1					
ANR	3603718	AssignmentExpression	direction = 0		3602111	2		=			
ANR	3603719	Identifier	direction		3602111	0					
ANR	3603720	PrimaryExpression	0		3602111	1					
ANR	3603721	SwitchStatement	switch ( type )		3602111	1					
ANR	3603722	Condition	type	405:32:9552:9555	3602111	0	True				
ANR	3603723	Identifier	type		3602111	0					
ANR	3603724	CompoundStatement		397:38:9236:9236	3602111	1					
ANR	3603725	Label	case 0 :	407:24:9585:9591	3602111	0	True				
ANR	3603726	IfStatement	if ( ( ! ( avctx -> debug_mv & FF_DEBUG_VIS_MV_P_FOR ) ) || ( pict -> pict_type != AV_PICTURE_TYPE_P ) )		3602111	1					
ANR	3603727	Condition	( ! ( avctx -> debug_mv & FF_DEBUG_VIS_MV_P_FOR ) ) || ( pict -> pict_type != AV_PICTURE_TYPE_P )	409:32:9626:9743	3602111	0	True				
ANR	3603728	OrExpression	( ! ( avctx -> debug_mv & FF_DEBUG_VIS_MV_P_FOR ) ) || ( pict -> pict_type != AV_PICTURE_TYPE_P )		3602111	0		||			
ANR	3603729	UnaryOperationExpression	! ( avctx -> debug_mv & FF_DEBUG_VIS_MV_P_FOR )		3602111	0					
ANR	3603730	UnaryOperator	!		3602111	0					
ANR	3603731	BitAndExpression	avctx -> debug_mv & FF_DEBUG_VIS_MV_P_FOR		3602111	1		&			
ANR	3603732	PtrMemberAccess	avctx -> debug_mv		3602111	0					
ANR	3603733	Identifier	avctx		3602111	0					
ANR	3603734	Identifier	debug_mv		3602111	1					
ANR	3603735	Identifier	FF_DEBUG_VIS_MV_P_FOR		3602111	1					
ANR	3603736	EqualityExpression	pict -> pict_type != AV_PICTURE_TYPE_P		3602111	1		!=			
ANR	3603737	PtrMemberAccess	pict -> pict_type		3602111	0					
ANR	3603738	Identifier	pict		3602111	0					
ANR	3603739	Identifier	pict_type		3602111	1					
ANR	3603740	Identifier	AV_PICTURE_TYPE_P		3602111	1					
ANR	3603741	ContinueStatement	continue ;	413:32:9779:9787	3602111	1	True				
ANR	3603742	ExpressionStatement	direction = 0	415:28:9818:9831	3602111	2	True				
ANR	3603743	AssignmentExpression	direction = 0		3602111	0		=			
ANR	3603744	Identifier	direction		3602111	0					
ANR	3603745	PrimaryExpression	0		3602111	1					
ANR	3603746	BreakStatement	break ;	417:28:9862:9867	3602111	3	True				
ANR	3603747	Label	case 1 :	419:24:9894:9900	3602111	4	True				
ANR	3603748	IfStatement	if ( ( ! ( avctx -> debug_mv & FF_DEBUG_VIS_MV_B_FOR ) ) || ( pict -> pict_type != AV_PICTURE_TYPE_B ) )		3602111	5					
ANR	3603749	Condition	( ! ( avctx -> debug_mv & FF_DEBUG_VIS_MV_B_FOR ) ) || ( pict -> pict_type != AV_PICTURE_TYPE_B )	421:32:9935:10052	3602111	0	True				
ANR	3603750	OrExpression	( ! ( avctx -> debug_mv & FF_DEBUG_VIS_MV_B_FOR ) ) || ( pict -> pict_type != AV_PICTURE_TYPE_B )		3602111	0		||			
ANR	3603751	UnaryOperationExpression	! ( avctx -> debug_mv & FF_DEBUG_VIS_MV_B_FOR )		3602111	0					
ANR	3603752	UnaryOperator	!		3602111	0					
ANR	3603753	BitAndExpression	avctx -> debug_mv & FF_DEBUG_VIS_MV_B_FOR		3602111	1		&			
ANR	3603754	PtrMemberAccess	avctx -> debug_mv		3602111	0					
ANR	3603755	Identifier	avctx		3602111	0					
ANR	3603756	Identifier	debug_mv		3602111	1					
ANR	3603757	Identifier	FF_DEBUG_VIS_MV_B_FOR		3602111	1					
ANR	3603758	EqualityExpression	pict -> pict_type != AV_PICTURE_TYPE_B		3602111	1		!=			
ANR	3603759	PtrMemberAccess	pict -> pict_type		3602111	0					
ANR	3603760	Identifier	pict		3602111	0					
ANR	3603761	Identifier	pict_type		3602111	1					
ANR	3603762	Identifier	AV_PICTURE_TYPE_B		3602111	1					
ANR	3603763	ContinueStatement	continue ;	425:32:10088:10096	3602111	1	True				
ANR	3603764	ExpressionStatement	direction = 0	427:28:10127:10140	3602111	6	True				
ANR	3603765	AssignmentExpression	direction = 0		3602111	0		=			
ANR	3603766	Identifier	direction		3602111	0					
ANR	3603767	PrimaryExpression	0		3602111	1					
ANR	3603768	BreakStatement	break ;	429:28:10171:10176	3602111	7	True				
ANR	3603769	Label	case 2 :	431:24:10203:10209	3602111	8	True				
ANR	3603770	IfStatement	if ( ( ! ( avctx -> debug_mv & FF_DEBUG_VIS_MV_B_BACK ) ) || ( pict -> pict_type != AV_PICTURE_TYPE_B ) )		3602111	9					
ANR	3603771	Condition	( ! ( avctx -> debug_mv & FF_DEBUG_VIS_MV_B_BACK ) ) || ( pict -> pict_type != AV_PICTURE_TYPE_B )	433:32:10244:10362	3602111	0	True				
ANR	3603772	OrExpression	( ! ( avctx -> debug_mv & FF_DEBUG_VIS_MV_B_BACK ) ) || ( pict -> pict_type != AV_PICTURE_TYPE_B )		3602111	0		||			
ANR	3603773	UnaryOperationExpression	! ( avctx -> debug_mv & FF_DEBUG_VIS_MV_B_BACK )		3602111	0					
ANR	3603774	UnaryOperator	!		3602111	0					
ANR	3603775	BitAndExpression	avctx -> debug_mv & FF_DEBUG_VIS_MV_B_BACK		3602111	1		&			
ANR	3603776	PtrMemberAccess	avctx -> debug_mv		3602111	0					
ANR	3603777	Identifier	avctx		3602111	0					
ANR	3603778	Identifier	debug_mv		3602111	1					
ANR	3603779	Identifier	FF_DEBUG_VIS_MV_B_BACK		3602111	1					
ANR	3603780	EqualityExpression	pict -> pict_type != AV_PICTURE_TYPE_B		3602111	1		!=			
ANR	3603781	PtrMemberAccess	pict -> pict_type		3602111	0					
ANR	3603782	Identifier	pict		3602111	0					
ANR	3603783	Identifier	pict_type		3602111	1					
ANR	3603784	Identifier	AV_PICTURE_TYPE_B		3602111	1					
ANR	3603785	ContinueStatement	continue ;	437:32:10398:10406	3602111	1	True				
ANR	3603786	ExpressionStatement	direction = 1	439:28:10437:10450	3602111	10	True				
ANR	3603787	AssignmentExpression	direction = 1		3602111	0		=			
ANR	3603788	Identifier	direction		3602111	0					
ANR	3603789	PrimaryExpression	1		3602111	1					
ANR	3603790	BreakStatement	break ;	441:28:10481:10486	3602111	11	True				
ANR	3603791	IfStatement	"if ( ! USES_LIST ( mbtype_table [ mb_index ] , direction ) )"		3602111	2					
ANR	3603792	Condition	"! USES_LIST ( mbtype_table [ mb_index ] , direction )"	445:28:10544:10588	3602111	0	True				
ANR	3603793	UnaryOperationExpression	"! USES_LIST ( mbtype_table [ mb_index ] , direction )"		3602111	0					
ANR	3603794	UnaryOperator	!		3602111	0					
ANR	3603795	CallExpression	"USES_LIST ( mbtype_table [ mb_index ] , direction )"		3602111	1					
ANR	3603796	Callee	USES_LIST		3602111	0					
ANR	3603797	Identifier	USES_LIST		3602111	0					
ANR	3603798	ArgumentList	mbtype_table [ mb_index ]		3602111	1					
ANR	3603799	Argument	mbtype_table [ mb_index ]		3602111	0					
ANR	3603800	ArrayIndexing	mbtype_table [ mb_index ]		3602111	0					
ANR	3603801	Identifier	mbtype_table		3602111	0					
ANR	3603802	Identifier	mb_index		3602111	1					
ANR	3603803	Argument	direction		3602111	1					
ANR	3603804	Identifier	direction		3602111	0					
ANR	3603805	ContinueStatement	continue ;	447:28:10620:10628	3602111	1	True				
ANR	3603806	IfStatement	if ( IS_8X8 ( mbtype_table [ mb_index ] ) )		3602111	3					
ANR	3603807	Condition	IS_8X8 ( mbtype_table [ mb_index ] )	451:28:10661:10690	3602111	0	True				
ANR	3603808	CallExpression	IS_8X8 ( mbtype_table [ mb_index ] )		3602111	0					
ANR	3603809	Callee	IS_8X8		3602111	0					
ANR	3603810	Identifier	IS_8X8		3602111	0					
ANR	3603811	ArgumentList	mbtype_table [ mb_index ]		3602111	1					
ANR	3603812	Argument	mbtype_table [ mb_index ]		3602111	0					
ANR	3603813	ArrayIndexing	mbtype_table [ mb_index ]		3602111	0					
ANR	3603814	Identifier	mbtype_table		3602111	0					
ANR	3603815	Identifier	mb_index		3602111	1					
ANR	3603816	CompoundStatement		445:28:10402:10407	3602111	1					
ANR	3603817	IdentifierDeclStatement	int i ;	453:28:10724:10729	3602111	0	True				
ANR	3603818	IdentifierDecl	i		3602111	0					
ANR	3603819	IdentifierDeclType	int		3602111	0					
ANR	3603820	Identifier	i		3602111	1					
ANR	3603821	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		3602111	1					
ANR	3603822	ForInit	i = 0 ;	455:33:10765:10770	3602111	0	True				
ANR	3603823	AssignmentExpression	i = 0		3602111	0		=			
ANR	3603824	Identifier	i		3602111	0					
ANR	3603825	PrimaryExpression	0		3602111	1					
ANR	3603826	Condition	i < 4	455:40:10772:10776	3602111	1	True				
ANR	3603827	RelationalExpression	i < 4		3602111	0		<			
ANR	3603828	Identifier	i		3602111	0					
ANR	3603829	PrimaryExpression	4		3602111	1					
ANR	3603830	PostIncDecOperationExpression	i ++	455:47:10779:10781	3602111	2	True				
ANR	3603831	Identifier	i		3602111	0					
ANR	3603832	IncDec	++		3602111	1					
ANR	3603833	CompoundStatement		459:32:10895:10948	3602111	3					
ANR	3603834	IdentifierDeclStatement	int sx = mb_x * 16 + 4 + 8 * ( i & 1 ) ;	457:32:10819:10855	3602111	0	True				
ANR	3603835	IdentifierDecl	sx = mb_x * 16 + 4 + 8 * ( i & 1 )		3602111	0					
ANR	3603836	IdentifierDeclType	int		3602111	0					
ANR	3603837	Identifier	sx		3602111	1					
ANR	3603838	AssignmentExpression	sx = mb_x * 16 + 4 + 8 * ( i & 1 )		3602111	2		=			
ANR	3603839	Identifier	sx		3602111	0					
ANR	3603840	AdditiveExpression	mb_x * 16 + 4 + 8 * ( i & 1 )		3602111	1		+			
ANR	3603841	MultiplicativeExpression	mb_x * 16		3602111	0		*			
ANR	3603842	Identifier	mb_x		3602111	0					
ANR	3603843	PrimaryExpression	16		3602111	1					
ANR	3603844	AdditiveExpression	4 + 8 * ( i & 1 )		3602111	1		+			
ANR	3603845	PrimaryExpression	4		3602111	0					
ANR	3603846	MultiplicativeExpression	8 * ( i & 1 )		3602111	1		*			
ANR	3603847	PrimaryExpression	8		3602111	0					
ANR	3603848	BitAndExpression	i & 1		3602111	1		&			
ANR	3603849	Identifier	i		3602111	0					
ANR	3603850	PrimaryExpression	1		3602111	1					
ANR	3603851	IdentifierDeclStatement	int sy = mb_y * 16 + 4 + 8 * ( i >> 1 ) ;	459:32:10890:10927	3602111	1	True				
ANR	3603852	IdentifierDecl	sy = mb_y * 16 + 4 + 8 * ( i >> 1 )		3602111	0					
ANR	3603853	IdentifierDeclType	int		3602111	0					
ANR	3603854	Identifier	sy		3602111	1					
ANR	3603855	AssignmentExpression	sy = mb_y * 16 + 4 + 8 * ( i >> 1 )		3602111	2		=			
ANR	3603856	Identifier	sy		3602111	0					
ANR	3603857	AdditiveExpression	mb_y * 16 + 4 + 8 * ( i >> 1 )		3602111	1		+			
ANR	3603858	MultiplicativeExpression	mb_y * 16		3602111	0		*			
ANR	3603859	Identifier	mb_y		3602111	0					
ANR	3603860	PrimaryExpression	16		3602111	1					
ANR	3603861	AdditiveExpression	4 + 8 * ( i >> 1 )		3602111	1		+			
ANR	3603862	PrimaryExpression	4		3602111	0					
ANR	3603863	MultiplicativeExpression	8 * ( i >> 1 )		3602111	1		*			
ANR	3603864	PrimaryExpression	8		3602111	0					
ANR	3603865	ShiftExpression	i >> 1		3602111	1		>>			
ANR	3603866	Identifier	i		3602111	0					
ANR	3603867	PrimaryExpression	1		3602111	1					
ANR	3603868	IdentifierDeclStatement	int xy = ( mb_x * 2 + ( i & 1 ) + ( mb_y * 2 + ( i >> 1 ) ) * mv_stride ) << ( mv_sample_log2 - 1 ) ;	461:32:10962:11094	3602111	2	True				
ANR	3603869	IdentifierDecl	xy = ( mb_x * 2 + ( i & 1 ) + ( mb_y * 2 + ( i >> 1 ) ) * mv_stride ) << ( mv_sample_log2 - 1 )		3602111	0					
ANR	3603870	IdentifierDeclType	int		3602111	0					
ANR	3603871	Identifier	xy		3602111	1					
ANR	3603872	AssignmentExpression	xy = ( mb_x * 2 + ( i & 1 ) + ( mb_y * 2 + ( i >> 1 ) ) * mv_stride ) << ( mv_sample_log2 - 1 )		3602111	2		=			
ANR	3603873	Identifier	xy		3602111	0					
ANR	3603874	ShiftExpression	( mb_x * 2 + ( i & 1 ) + ( mb_y * 2 + ( i >> 1 ) ) * mv_stride ) << ( mv_sample_log2 - 1 )		3602111	1		<<			
ANR	3603875	AdditiveExpression	mb_x * 2 + ( i & 1 ) + ( mb_y * 2 + ( i >> 1 ) ) * mv_stride		3602111	0		+			
ANR	3603876	MultiplicativeExpression	mb_x * 2		3602111	0		*			
ANR	3603877	Identifier	mb_x		3602111	0					
ANR	3603878	PrimaryExpression	2		3602111	1					
ANR	3603879	AdditiveExpression	( i & 1 ) + ( mb_y * 2 + ( i >> 1 ) ) * mv_stride		3602111	1		+			
ANR	3603880	BitAndExpression	i & 1		3602111	0		&			
ANR	3603881	Identifier	i		3602111	0					
ANR	3603882	PrimaryExpression	1		3602111	1					
ANR	3603883	MultiplicativeExpression	( mb_y * 2 + ( i >> 1 ) ) * mv_stride		3602111	1		*			
ANR	3603884	AdditiveExpression	mb_y * 2 + ( i >> 1 )		3602111	0		+			
ANR	3603885	MultiplicativeExpression	mb_y * 2		3602111	0		*			
ANR	3603886	Identifier	mb_y		3602111	0					
ANR	3603887	PrimaryExpression	2		3602111	1					
ANR	3603888	ShiftExpression	i >> 1		3602111	1		>>			
ANR	3603889	Identifier	i		3602111	0					
ANR	3603890	PrimaryExpression	1		3602111	1					
ANR	3603891	Identifier	mv_stride		3602111	1					
ANR	3603892	AdditiveExpression	mv_sample_log2 - 1		3602111	1		-			
ANR	3603893	Identifier	mv_sample_log2		3602111	0					
ANR	3603894	PrimaryExpression	1		3602111	1					
ANR	3603895	IdentifierDeclStatement	int mx = ( motion_val [ direction ] [ xy ] [ 0 ] >> shift ) + sx ;	465:32:11129:11182	3602111	3	True				
ANR	3603896	IdentifierDecl	mx = ( motion_val [ direction ] [ xy ] [ 0 ] >> shift ) + sx		3602111	0					
ANR	3603897	IdentifierDeclType	int		3602111	0					
ANR	3603898	Identifier	mx		3602111	1					
ANR	3603899	AssignmentExpression	mx = ( motion_val [ direction ] [ xy ] [ 0 ] >> shift ) + sx		3602111	2		=			
ANR	3603900	Identifier	mx		3602111	0					
ANR	3603901	AdditiveExpression	( motion_val [ direction ] [ xy ] [ 0 ] >> shift ) + sx		3602111	1		+			
ANR	3603902	ShiftExpression	motion_val [ direction ] [ xy ] [ 0 ] >> shift		3602111	0		>>			
ANR	3603903	ArrayIndexing	motion_val [ direction ] [ xy ] [ 0 ]		3602111	0					
ANR	3603904	ArrayIndexing	motion_val [ direction ] [ xy ]		3602111	0					
ANR	3603905	ArrayIndexing	motion_val [ direction ]		3602111	0					
ANR	3603906	Identifier	motion_val		3602111	0					
ANR	3603907	Identifier	direction		3602111	1					
ANR	3603908	Identifier	xy		3602111	1					
ANR	3603909	PrimaryExpression	0		3602111	1					
ANR	3603910	Identifier	shift		3602111	1					
ANR	3603911	Identifier	sx		3602111	1					
ANR	3603912	IdentifierDeclStatement	int my = ( motion_val [ direction ] [ xy ] [ 1 ] >> shift ) + sy ;	467:32:11217:11270	3602111	4	True				
ANR	3603913	IdentifierDecl	my = ( motion_val [ direction ] [ xy ] [ 1 ] >> shift ) + sy		3602111	0					
ANR	3603914	IdentifierDeclType	int		3602111	0					
ANR	3603915	Identifier	my		3602111	1					
ANR	3603916	AssignmentExpression	my = ( motion_val [ direction ] [ xy ] [ 1 ] >> shift ) + sy		3602111	2		=			
ANR	3603917	Identifier	my		3602111	0					
ANR	3603918	AdditiveExpression	( motion_val [ direction ] [ xy ] [ 1 ] >> shift ) + sy		3602111	1		+			
ANR	3603919	ShiftExpression	motion_val [ direction ] [ xy ] [ 1 ] >> shift		3602111	0		>>			
ANR	3603920	ArrayIndexing	motion_val [ direction ] [ xy ] [ 1 ]		3602111	0					
ANR	3603921	ArrayIndexing	motion_val [ direction ] [ xy ]		3602111	0					
ANR	3603922	ArrayIndexing	motion_val [ direction ]		3602111	0					
ANR	3603923	Identifier	motion_val		3602111	0					
ANR	3603924	Identifier	direction		3602111	1					
ANR	3603925	Identifier	xy		3602111	1					
ANR	3603926	PrimaryExpression	1		3602111	1					
ANR	3603927	Identifier	shift		3602111	1					
ANR	3603928	Identifier	sy		3602111	1					
ANR	3603929	ExpressionStatement	"draw_arrow ( ptr , sx , sy , mx , my , width , height , pict -> linesize [ 0 ] , 100 , 0 , direction )"	469:32:11305:11433	3602111	5	True				
ANR	3603930	CallExpression	"draw_arrow ( ptr , sx , sy , mx , my , width , height , pict -> linesize [ 0 ] , 100 , 0 , direction )"		3602111	0					
ANR	3603931	Callee	draw_arrow		3602111	0					
ANR	3603932	Identifier	draw_arrow		3602111	0					
ANR	3603933	ArgumentList	ptr		3602111	1					
ANR	3603934	Argument	ptr		3602111	0					
ANR	3603935	Identifier	ptr		3602111	0					
ANR	3603936	Argument	sx		3602111	1					
ANR	3603937	Identifier	sx		3602111	0					
ANR	3603938	Argument	sy		3602111	2					
ANR	3603939	Identifier	sy		3602111	0					
ANR	3603940	Argument	mx		3602111	3					
ANR	3603941	Identifier	mx		3602111	0					
ANR	3603942	Argument	my		3602111	4					
ANR	3603943	Identifier	my		3602111	0					
ANR	3603944	Argument	width		3602111	5					
ANR	3603945	Identifier	width		3602111	0					
ANR	3603946	Argument	height		3602111	6					
ANR	3603947	Identifier	height		3602111	0					
ANR	3603948	Argument	pict -> linesize [ 0 ]		3602111	7					
ANR	3603949	ArrayIndexing	pict -> linesize [ 0 ]		3602111	0					
ANR	3603950	PtrMemberAccess	pict -> linesize		3602111	0					
ANR	3603951	Identifier	pict		3602111	0					
ANR	3603952	Identifier	linesize		3602111	1					
ANR	3603953	PrimaryExpression	0		3602111	1					
ANR	3603954	Argument	100		3602111	8					
ANR	3603955	PrimaryExpression	100		3602111	0					
ANR	3603956	Argument	0		3602111	9					
ANR	3603957	PrimaryExpression	0		3602111	0					
ANR	3603958	Argument	direction		3602111	10					
ANR	3603959	Identifier	direction		3602111	0					
ANR	3603960	ElseStatement	else		3602111	0					
ANR	3603961	IfStatement	if ( IS_16X8 ( mbtype_table [ mb_index ] ) )		3602111	0					
ANR	3603962	Condition	IS_16X8 ( mbtype_table [ mb_index ] )	475:35:11502:11532	3602111	0	True				
ANR	3603963	CallExpression	IS_16X8 ( mbtype_table [ mb_index ] )		3602111	0					
ANR	3603964	Callee	IS_16X8		3602111	0					
ANR	3603965	Identifier	IS_16X8		3602111	0					
ANR	3603966	ArgumentList	mbtype_table [ mb_index ]		3602111	1					
ANR	3603967	Argument	mbtype_table [ mb_index ]		3602111	0					
ANR	3603968	ArrayIndexing	mbtype_table [ mb_index ]		3602111	0					
ANR	3603969	Identifier	mbtype_table		3602111	0					
ANR	3603970	Identifier	mb_index		3602111	1					
ANR	3603971	CompoundStatement		469:28:11244:11249	3602111	1					
ANR	3603972	IdentifierDeclStatement	int i ;	477:28:11566:11571	3602111	0	True				
ANR	3603973	IdentifierDecl	i		3602111	0					
ANR	3603974	IdentifierDeclType	int		3602111	0					
ANR	3603975	Identifier	i		3602111	1					
ANR	3603976	ForStatement	for ( i = 0 ; i < 2 ; i ++ )		3602111	1					
ANR	3603977	ForInit	i = 0 ;	479:33:11607:11612	3602111	0	True				
ANR	3603978	AssignmentExpression	i = 0		3602111	0		=			
ANR	3603979	Identifier	i		3602111	0					
ANR	3603980	PrimaryExpression	0		3602111	1					
ANR	3603981	Condition	i < 2	479:40:11614:11618	3602111	1	True				
ANR	3603982	RelationalExpression	i < 2		3602111	0		<			
ANR	3603983	Identifier	i		3602111	0					
ANR	3603984	PrimaryExpression	2		3602111	1					
ANR	3603985	PostIncDecOperationExpression	i ++	479:47:11621:11623	3602111	2	True				
ANR	3603986	Identifier	i		3602111	0					
ANR	3603987	IncDec	++		3602111	1					
ANR	3603988	CompoundStatement		481:32:11651:11699	3602111	3					
ANR	3603989	IdentifierDeclStatement	int sx = mb_x * 16 + 8 ;	481:32:11661:11683	3602111	0	True				
ANR	3603990	IdentifierDecl	sx = mb_x * 16 + 8		3602111	0					
ANR	3603991	IdentifierDeclType	int		3602111	0					
ANR	3603992	Identifier	sx		3602111	1					
ANR	3603993	AssignmentExpression	sx = mb_x * 16 + 8		3602111	2		=			
ANR	3603994	Identifier	sx		3602111	0					
ANR	3603995	AdditiveExpression	mb_x * 16 + 8		3602111	1		+			
ANR	3603996	MultiplicativeExpression	mb_x * 16		3602111	0		*			
ANR	3603997	Identifier	mb_x		3602111	0					
ANR	3603998	PrimaryExpression	16		3602111	1					
ANR	3603999	PrimaryExpression	8		3602111	1					
ANR	3604000	IdentifierDeclStatement	int sy = mb_y * 16 + 4 + 8 * i ;	483:32:11718:11748	3602111	1	True				
ANR	3604001	IdentifierDecl	sy = mb_y * 16 + 4 + 8 * i		3602111	0					
ANR	3604002	IdentifierDeclType	int		3602111	0					
ANR	3604003	Identifier	sy		3602111	1					
ANR	3604004	AssignmentExpression	sy = mb_y * 16 + 4 + 8 * i		3602111	2		=			
ANR	3604005	Identifier	sy		3602111	0					
ANR	3604006	AdditiveExpression	mb_y * 16 + 4 + 8 * i		3602111	1		+			
ANR	3604007	MultiplicativeExpression	mb_y * 16		3602111	0		*			
ANR	3604008	Identifier	mb_y		3602111	0					
ANR	3604009	PrimaryExpression	16		3602111	1					
ANR	3604010	AdditiveExpression	4 + 8 * i		3602111	1		+			
ANR	3604011	PrimaryExpression	4		3602111	0					
ANR	3604012	MultiplicativeExpression	8 * i		3602111	1		*			
ANR	3604013	PrimaryExpression	8		3602111	0					
ANR	3604014	Identifier	i		3602111	1					
ANR	3604015	IdentifierDeclStatement	int xy = ( mb_x * 2 + ( mb_y * 2 + i ) * mv_stride ) << ( mv_sample_log2 - 1 ) ;	485:32:11783:11855	3602111	2	True				
ANR	3604016	IdentifierDecl	xy = ( mb_x * 2 + ( mb_y * 2 + i ) * mv_stride ) << ( mv_sample_log2 - 1 )		3602111	0					
ANR	3604017	IdentifierDeclType	int		3602111	0					
ANR	3604018	Identifier	xy		3602111	1					
ANR	3604019	AssignmentExpression	xy = ( mb_x * 2 + ( mb_y * 2 + i ) * mv_stride ) << ( mv_sample_log2 - 1 )		3602111	2		=			
ANR	3604020	Identifier	xy		3602111	0					
ANR	3604021	ShiftExpression	( mb_x * 2 + ( mb_y * 2 + i ) * mv_stride ) << ( mv_sample_log2 - 1 )		3602111	1		<<			
ANR	3604022	AdditiveExpression	mb_x * 2 + ( mb_y * 2 + i ) * mv_stride		3602111	0		+			
ANR	3604023	MultiplicativeExpression	mb_x * 2		3602111	0		*			
ANR	3604024	Identifier	mb_x		3602111	0					
ANR	3604025	PrimaryExpression	2		3602111	1					
ANR	3604026	MultiplicativeExpression	( mb_y * 2 + i ) * mv_stride		3602111	1		*			
ANR	3604027	AdditiveExpression	mb_y * 2 + i		3602111	0		+			
ANR	3604028	MultiplicativeExpression	mb_y * 2		3602111	0		*			
ANR	3604029	Identifier	mb_y		3602111	0					
ANR	3604030	PrimaryExpression	2		3602111	1					
ANR	3604031	Identifier	i		3602111	1					
ANR	3604032	Identifier	mv_stride		3602111	1					
ANR	3604033	AdditiveExpression	mv_sample_log2 - 1		3602111	1		-			
ANR	3604034	Identifier	mv_sample_log2		3602111	0					
ANR	3604035	PrimaryExpression	1		3602111	1					
ANR	3604036	IdentifierDeclStatement	int mx = ( motion_val [ direction ] [ xy ] [ 0 ] >> shift ) ;	487:32:11890:11938	3602111	3	True				
ANR	3604037	IdentifierDecl	mx = ( motion_val [ direction ] [ xy ] [ 0 ] >> shift )		3602111	0					
ANR	3604038	IdentifierDeclType	int		3602111	0					
ANR	3604039	Identifier	mx		3602111	1					
ANR	3604040	AssignmentExpression	mx = ( motion_val [ direction ] [ xy ] [ 0 ] >> shift )		3602111	2		=			
ANR	3604041	Identifier	mx		3602111	0					
ANR	3604042	ShiftExpression	motion_val [ direction ] [ xy ] [ 0 ] >> shift		3602111	1		>>			
ANR	3604043	ArrayIndexing	motion_val [ direction ] [ xy ] [ 0 ]		3602111	0					
ANR	3604044	ArrayIndexing	motion_val [ direction ] [ xy ]		3602111	0					
ANR	3604045	ArrayIndexing	motion_val [ direction ]		3602111	0					
ANR	3604046	Identifier	motion_val		3602111	0					
ANR	3604047	Identifier	direction		3602111	1					
ANR	3604048	Identifier	xy		3602111	1					
ANR	3604049	PrimaryExpression	0		3602111	1					
ANR	3604050	Identifier	shift		3602111	1					
ANR	3604051	IdentifierDeclStatement	int my = ( motion_val [ direction ] [ xy ] [ 1 ] >> shift ) ;	489:32:11973:12021	3602111	4	True				
ANR	3604052	IdentifierDecl	my = ( motion_val [ direction ] [ xy ] [ 1 ] >> shift )		3602111	0					
ANR	3604053	IdentifierDeclType	int		3602111	0					
ANR	3604054	Identifier	my		3602111	1					
ANR	3604055	AssignmentExpression	my = ( motion_val [ direction ] [ xy ] [ 1 ] >> shift )		3602111	2		=			
ANR	3604056	Identifier	my		3602111	0					
ANR	3604057	ShiftExpression	motion_val [ direction ] [ xy ] [ 1 ] >> shift		3602111	1		>>			
ANR	3604058	ArrayIndexing	motion_val [ direction ] [ xy ] [ 1 ]		3602111	0					
ANR	3604059	ArrayIndexing	motion_val [ direction ] [ xy ]		3602111	0					
ANR	3604060	ArrayIndexing	motion_val [ direction ]		3602111	0					
ANR	3604061	Identifier	motion_val		3602111	0					
ANR	3604062	Identifier	direction		3602111	1					
ANR	3604063	Identifier	xy		3602111	1					
ANR	3604064	PrimaryExpression	1		3602111	1					
ANR	3604065	Identifier	shift		3602111	1					
ANR	3604066	IfStatement	if ( IS_INTERLACED ( mbtype_table [ mb_index ] ) )		3602111	5					
ANR	3604067	Condition	IS_INTERLACED ( mbtype_table [ mb_index ] )	493:36:12062:12098	3602111	0	True				
ANR	3604068	CallExpression	IS_INTERLACED ( mbtype_table [ mb_index ] )		3602111	0					
ANR	3604069	Callee	IS_INTERLACED		3602111	0					
ANR	3604070	Identifier	IS_INTERLACED		3602111	0					
ANR	3604071	ArgumentList	mbtype_table [ mb_index ]		3602111	1					
ANR	3604072	Argument	mbtype_table [ mb_index ]		3602111	0					
ANR	3604073	ArrayIndexing	mbtype_table [ mb_index ]		3602111	0					
ANR	3604074	Identifier	mbtype_table		3602111	0					
ANR	3604075	Identifier	mb_index		3602111	1					
ANR	3604076	ExpressionStatement	my *= 2	495:36:12138:12145	3602111	1	True				
ANR	3604077	AssignmentExpression	my *= 2		3602111	0		*=			
ANR	3604078	Identifier	my		3602111	0					
ANR	3604079	PrimaryExpression	2		3602111	1					
ANR	3604080	ExpressionStatement	"draw_arrow ( ptr , sx , sy , mx + sx , my + sy , width , height , pict -> linesize [ 0 ] , 100 , 0 , direction )"	499:32:12182:12320	3602111	6	True				
ANR	3604081	CallExpression	"draw_arrow ( ptr , sx , sy , mx + sx , my + sy , width , height , pict -> linesize [ 0 ] , 100 , 0 , direction )"		3602111	0					
ANR	3604082	Callee	draw_arrow		3602111	0					
ANR	3604083	Identifier	draw_arrow		3602111	0					
ANR	3604084	ArgumentList	ptr		3602111	1					
ANR	3604085	Argument	ptr		3602111	0					
ANR	3604086	Identifier	ptr		3602111	0					
ANR	3604087	Argument	sx		3602111	1					
ANR	3604088	Identifier	sx		3602111	0					
ANR	3604089	Argument	sy		3602111	2					
ANR	3604090	Identifier	sy		3602111	0					
ANR	3604091	Argument	mx + sx		3602111	3					
ANR	3604092	AdditiveExpression	mx + sx		3602111	0		+			
ANR	3604093	Identifier	mx		3602111	0					
ANR	3604094	Identifier	sx		3602111	1					
ANR	3604095	Argument	my + sy		3602111	4					
ANR	3604096	AdditiveExpression	my + sy		3602111	0		+			
ANR	3604097	Identifier	my		3602111	0					
ANR	3604098	Identifier	sy		3602111	1					
ANR	3604099	Argument	width		3602111	5					
ANR	3604100	Identifier	width		3602111	0					
ANR	3604101	Argument	height		3602111	6					
ANR	3604102	Identifier	height		3602111	0					
ANR	3604103	Argument	pict -> linesize [ 0 ]		3602111	7					
ANR	3604104	ArrayIndexing	pict -> linesize [ 0 ]		3602111	0					
ANR	3604105	PtrMemberAccess	pict -> linesize		3602111	0					
ANR	3604106	Identifier	pict		3602111	0					
ANR	3604107	Identifier	linesize		3602111	1					
ANR	3604108	PrimaryExpression	0		3602111	1					
ANR	3604109	Argument	100		3602111	8					
ANR	3604110	PrimaryExpression	100		3602111	0					
ANR	3604111	Argument	0		3602111	9					
ANR	3604112	PrimaryExpression	0		3602111	0					
ANR	3604113	Argument	direction		3602111	10					
ANR	3604114	Identifier	direction		3602111	0					
ANR	3604115	ElseStatement	else		3602111	0					
ANR	3604116	IfStatement	if ( IS_8X16 ( mbtype_table [ mb_index ] ) )		3602111	0					
ANR	3604117	Condition	IS_8X16 ( mbtype_table [ mb_index ] )	505:35:12389:12419	3602111	0	True				
ANR	3604118	CallExpression	IS_8X16 ( mbtype_table [ mb_index ] )		3602111	0					
ANR	3604119	Callee	IS_8X16		3602111	0					
ANR	3604120	Identifier	IS_8X16		3602111	0					
ANR	3604121	ArgumentList	mbtype_table [ mb_index ]		3602111	1					
ANR	3604122	Argument	mbtype_table [ mb_index ]		3602111	0					
ANR	3604123	ArrayIndexing	mbtype_table [ mb_index ]		3602111	0					
ANR	3604124	Identifier	mbtype_table		3602111	0					
ANR	3604125	Identifier	mb_index		3602111	1					
ANR	3604126	CompoundStatement		499:28:12131:12136	3602111	1					
ANR	3604127	IdentifierDeclStatement	int i ;	507:28:12453:12458	3602111	0	True				
ANR	3604128	IdentifierDecl	i		3602111	0					
ANR	3604129	IdentifierDeclType	int		3602111	0					
ANR	3604130	Identifier	i		3602111	1					
ANR	3604131	ForStatement	for ( i = 0 ; i < 2 ; i ++ )		3602111	1					
ANR	3604132	ForInit	i = 0 ;	509:33:12494:12499	3602111	0	True				
ANR	3604133	AssignmentExpression	i = 0		3602111	0		=			
ANR	3604134	Identifier	i		3602111	0					
ANR	3604135	PrimaryExpression	0		3602111	1					
ANR	3604136	Condition	i < 2	509:40:12501:12505	3602111	1	True				
ANR	3604137	RelationalExpression	i < 2		3602111	0		<			
ANR	3604138	Identifier	i		3602111	0					
ANR	3604139	PrimaryExpression	2		3602111	1					
ANR	3604140	PostIncDecOperationExpression	i ++	509:47:12508:12510	3602111	2	True				
ANR	3604141	Identifier	i		3602111	0					
ANR	3604142	IncDec	++		3602111	1					
ANR	3604143	CompoundStatement		511:32:12534:12580	3602111	3					
ANR	3604144	IdentifierDeclStatement	int sx = mb_x * 16 + 4 + 8 * i ;	511:32:12548:12578	3602111	0	True				
ANR	3604145	IdentifierDecl	sx = mb_x * 16 + 4 + 8 * i		3602111	0					
ANR	3604146	IdentifierDeclType	int		3602111	0					
ANR	3604147	Identifier	sx		3602111	1					
ANR	3604148	AssignmentExpression	sx = mb_x * 16 + 4 + 8 * i		3602111	2		=			
ANR	3604149	Identifier	sx		3602111	0					
ANR	3604150	AdditiveExpression	mb_x * 16 + 4 + 8 * i		3602111	1		+			
ANR	3604151	MultiplicativeExpression	mb_x * 16		3602111	0		*			
ANR	3604152	Identifier	mb_x		3602111	0					
ANR	3604153	PrimaryExpression	16		3602111	1					
ANR	3604154	AdditiveExpression	4 + 8 * i		3602111	1		+			
ANR	3604155	PrimaryExpression	4		3602111	0					
ANR	3604156	MultiplicativeExpression	8 * i		3602111	1		*			
ANR	3604157	PrimaryExpression	8		3602111	0					
ANR	3604158	Identifier	i		3602111	1					
ANR	3604159	IdentifierDeclStatement	int sy = mb_y * 16 + 8 ;	513:32:12613:12635	3602111	1	True				
ANR	3604160	IdentifierDecl	sy = mb_y * 16 + 8		3602111	0					
ANR	3604161	IdentifierDeclType	int		3602111	0					
ANR	3604162	Identifier	sy		3602111	1					
ANR	3604163	AssignmentExpression	sy = mb_y * 16 + 8		3602111	2		=			
ANR	3604164	Identifier	sy		3602111	0					
ANR	3604165	AdditiveExpression	mb_y * 16 + 8		3602111	1		+			
ANR	3604166	MultiplicativeExpression	mb_y * 16		3602111	0		*			
ANR	3604167	Identifier	mb_y		3602111	0					
ANR	3604168	PrimaryExpression	16		3602111	1					
ANR	3604169	PrimaryExpression	8		3602111	1					
ANR	3604170	IdentifierDeclStatement	int xy = ( mb_x * 2 + i + mb_y * 2 * mv_stride ) << ( mv_sample_log2 - 1 ) ;	515:32:12670:12740	3602111	2	True				
ANR	3604171	IdentifierDecl	xy = ( mb_x * 2 + i + mb_y * 2 * mv_stride ) << ( mv_sample_log2 - 1 )		3602111	0					
ANR	3604172	IdentifierDeclType	int		3602111	0					
ANR	3604173	Identifier	xy		3602111	1					
ANR	3604174	AssignmentExpression	xy = ( mb_x * 2 + i + mb_y * 2 * mv_stride ) << ( mv_sample_log2 - 1 )		3602111	2		=			
ANR	3604175	Identifier	xy		3602111	0					
ANR	3604176	ShiftExpression	( mb_x * 2 + i + mb_y * 2 * mv_stride ) << ( mv_sample_log2 - 1 )		3602111	1		<<			
ANR	3604177	AdditiveExpression	mb_x * 2 + i + mb_y * 2 * mv_stride		3602111	0		+			
ANR	3604178	MultiplicativeExpression	mb_x * 2		3602111	0		*			
ANR	3604179	Identifier	mb_x		3602111	0					
ANR	3604180	PrimaryExpression	2		3602111	1					
ANR	3604181	AdditiveExpression	i + mb_y * 2 * mv_stride		3602111	1		+			
ANR	3604182	Identifier	i		3602111	0					
ANR	3604183	MultiplicativeExpression	mb_y * 2 * mv_stride		3602111	1		*			
ANR	3604184	Identifier	mb_y		3602111	0					
ANR	3604185	MultiplicativeExpression	2 * mv_stride		3602111	1		*			
ANR	3604186	PrimaryExpression	2		3602111	0					
ANR	3604187	Identifier	mv_stride		3602111	1					
ANR	3604188	AdditiveExpression	mv_sample_log2 - 1		3602111	1		-			
ANR	3604189	Identifier	mv_sample_log2		3602111	0					
ANR	3604190	PrimaryExpression	1		3602111	1					
ANR	3604191	IdentifierDeclStatement	int mx = motion_val [ direction ] [ xy ] [ 0 ] >> shift ;	517:32:12775:12821	3602111	3	True				
ANR	3604192	IdentifierDecl	mx = motion_val [ direction ] [ xy ] [ 0 ] >> shift		3602111	0					
ANR	3604193	IdentifierDeclType	int		3602111	0					
ANR	3604194	Identifier	mx		3602111	1					
ANR	3604195	AssignmentExpression	mx = motion_val [ direction ] [ xy ] [ 0 ] >> shift		3602111	2		=			
ANR	3604196	Identifier	mx		3602111	0					
ANR	3604197	ShiftExpression	motion_val [ direction ] [ xy ] [ 0 ] >> shift		3602111	1		>>			
ANR	3604198	ArrayIndexing	motion_val [ direction ] [ xy ] [ 0 ]		3602111	0					
ANR	3604199	ArrayIndexing	motion_val [ direction ] [ xy ]		3602111	0					
ANR	3604200	ArrayIndexing	motion_val [ direction ]		3602111	0					
ANR	3604201	Identifier	motion_val		3602111	0					
ANR	3604202	Identifier	direction		3602111	1					
ANR	3604203	Identifier	xy		3602111	1					
ANR	3604204	PrimaryExpression	0		3602111	1					
ANR	3604205	Identifier	shift		3602111	1					
ANR	3604206	IdentifierDeclStatement	int my = motion_val [ direction ] [ xy ] [ 1 ] >> shift ;	519:32:12856:12902	3602111	4	True				
ANR	3604207	IdentifierDecl	my = motion_val [ direction ] [ xy ] [ 1 ] >> shift		3602111	0					
ANR	3604208	IdentifierDeclType	int		3602111	0					
ANR	3604209	Identifier	my		3602111	1					
ANR	3604210	AssignmentExpression	my = motion_val [ direction ] [ xy ] [ 1 ] >> shift		3602111	2		=			
ANR	3604211	Identifier	my		3602111	0					
ANR	3604212	ShiftExpression	motion_val [ direction ] [ xy ] [ 1 ] >> shift		3602111	1		>>			
ANR	3604213	ArrayIndexing	motion_val [ direction ] [ xy ] [ 1 ]		3602111	0					
ANR	3604214	ArrayIndexing	motion_val [ direction ] [ xy ]		3602111	0					
ANR	3604215	ArrayIndexing	motion_val [ direction ]		3602111	0					
ANR	3604216	Identifier	motion_val		3602111	0					
ANR	3604217	Identifier	direction		3602111	1					
ANR	3604218	Identifier	xy		3602111	1					
ANR	3604219	PrimaryExpression	1		3602111	1					
ANR	3604220	Identifier	shift		3602111	1					
ANR	3604221	IfStatement	if ( IS_INTERLACED ( mbtype_table [ mb_index ] ) )		3602111	5					
ANR	3604222	Condition	IS_INTERLACED ( mbtype_table [ mb_index ] )	523:36:12943:12979	3602111	0	True				
ANR	3604223	CallExpression	IS_INTERLACED ( mbtype_table [ mb_index ] )		3602111	0					
ANR	3604224	Callee	IS_INTERLACED		3602111	0					
ANR	3604225	Identifier	IS_INTERLACED		3602111	0					
ANR	3604226	ArgumentList	mbtype_table [ mb_index ]		3602111	1					
ANR	3604227	Argument	mbtype_table [ mb_index ]		3602111	0					
ANR	3604228	ArrayIndexing	mbtype_table [ mb_index ]		3602111	0					
ANR	3604229	Identifier	mbtype_table		3602111	0					
ANR	3604230	Identifier	mb_index		3602111	1					
ANR	3604231	ExpressionStatement	my *= 2	525:36:13019:13026	3602111	1	True				
ANR	3604232	AssignmentExpression	my *= 2		3602111	0		*=			
ANR	3604233	Identifier	my		3602111	0					
ANR	3604234	PrimaryExpression	2		3602111	1					
ANR	3604235	ExpressionStatement	"draw_arrow ( ptr , sx , sy , mx + sx , my + sy , width , height , pict -> linesize [ 0 ] , 100 , 0 , direction )"	529:32:13063:13201	3602111	6	True				
ANR	3604236	CallExpression	"draw_arrow ( ptr , sx , sy , mx + sx , my + sy , width , height , pict -> linesize [ 0 ] , 100 , 0 , direction )"		3602111	0					
ANR	3604237	Callee	draw_arrow		3602111	0					
ANR	3604238	Identifier	draw_arrow		3602111	0					
ANR	3604239	ArgumentList	ptr		3602111	1					
ANR	3604240	Argument	ptr		3602111	0					
ANR	3604241	Identifier	ptr		3602111	0					
ANR	3604242	Argument	sx		3602111	1					
ANR	3604243	Identifier	sx		3602111	0					
ANR	3604244	Argument	sy		3602111	2					
ANR	3604245	Identifier	sy		3602111	0					
ANR	3604246	Argument	mx + sx		3602111	3					
ANR	3604247	AdditiveExpression	mx + sx		3602111	0		+			
ANR	3604248	Identifier	mx		3602111	0					
ANR	3604249	Identifier	sx		3602111	1					
ANR	3604250	Argument	my + sy		3602111	4					
ANR	3604251	AdditiveExpression	my + sy		3602111	0		+			
ANR	3604252	Identifier	my		3602111	0					
ANR	3604253	Identifier	sy		3602111	1					
ANR	3604254	Argument	width		3602111	5					
ANR	3604255	Identifier	width		3602111	0					
ANR	3604256	Argument	height		3602111	6					
ANR	3604257	Identifier	height		3602111	0					
ANR	3604258	Argument	pict -> linesize [ 0 ]		3602111	7					
ANR	3604259	ArrayIndexing	pict -> linesize [ 0 ]		3602111	0					
ANR	3604260	PtrMemberAccess	pict -> linesize		3602111	0					
ANR	3604261	Identifier	pict		3602111	0					
ANR	3604262	Identifier	linesize		3602111	1					
ANR	3604263	PrimaryExpression	0		3602111	1					
ANR	3604264	Argument	100		3602111	8					
ANR	3604265	PrimaryExpression	100		3602111	0					
ANR	3604266	Argument	0		3602111	9					
ANR	3604267	PrimaryExpression	0		3602111	0					
ANR	3604268	Argument	direction		3602111	10					
ANR	3604269	Identifier	direction		3602111	0					
ANR	3604270	ElseStatement	else		3602111	0					
ANR	3604271	CompoundStatement		537:30:13252:13302	3602111	0					
ANR	3604272	IdentifierDeclStatement	int sx = mb_x * 16 + 8 ;	537:30:13299:13320	3602111	0	True				
ANR	3604273	IdentifierDecl	sx = mb_x * 16 + 8		3602111	0					
ANR	3604274	IdentifierDeclType	int		3602111	0					
ANR	3604275	Identifier	sx		3602111	1					
ANR	3604276	AssignmentExpression	sx = mb_x * 16 + 8		3602111	2		=			
ANR	3604277	Identifier	sx		3602111	0					
ANR	3604278	AdditiveExpression	mb_x * 16 + 8		3602111	1		+			
ANR	3604279	MultiplicativeExpression	mb_x * 16		3602111	0		*			
ANR	3604280	Identifier	mb_x		3602111	0					
ANR	3604281	PrimaryExpression	16		3602111	1					
ANR	3604282	PrimaryExpression	8		3602111	1					
ANR	3604283	IdentifierDeclStatement	int sy = mb_y * 16 + 8 ;	539:30:13353:13374	3602111	1	True				
ANR	3604284	IdentifierDecl	sy = mb_y * 16 + 8		3602111	0					
ANR	3604285	IdentifierDeclType	int		3602111	0					
ANR	3604286	Identifier	sy		3602111	1					
ANR	3604287	AssignmentExpression	sy = mb_y * 16 + 8		3602111	2		=			
ANR	3604288	Identifier	sy		3602111	0					
ANR	3604289	AdditiveExpression	mb_y * 16 + 8		3602111	1		+			
ANR	3604290	MultiplicativeExpression	mb_y * 16		3602111	0		*			
ANR	3604291	Identifier	mb_y		3602111	0					
ANR	3604292	PrimaryExpression	16		3602111	1					
ANR	3604293	PrimaryExpression	8		3602111	1					
ANR	3604294	IdentifierDeclStatement	int xy = ( mb_x + mb_y * mv_stride ) << mv_sample_log2 ;	541:30:13407:13458	3602111	2	True				
ANR	3604295	IdentifierDecl	xy = ( mb_x + mb_y * mv_stride ) << mv_sample_log2		3602111	0					
ANR	3604296	IdentifierDeclType	int		3602111	0					
ANR	3604297	Identifier	xy		3602111	1					
ANR	3604298	AssignmentExpression	xy = ( mb_x + mb_y * mv_stride ) << mv_sample_log2		3602111	2		=			
ANR	3604299	Identifier	xy		3602111	0					
ANR	3604300	ShiftExpression	( mb_x + mb_y * mv_stride ) << mv_sample_log2		3602111	1		<<			
ANR	3604301	AdditiveExpression	mb_x + mb_y * mv_stride		3602111	0		+			
ANR	3604302	Identifier	mb_x		3602111	0					
ANR	3604303	MultiplicativeExpression	mb_y * mv_stride		3602111	1		*			
ANR	3604304	Identifier	mb_y		3602111	0					
ANR	3604305	Identifier	mv_stride		3602111	1					
ANR	3604306	Identifier	mv_sample_log2		3602111	1					
ANR	3604307	IdentifierDeclStatement	int mx = ( motion_val [ direction ] [ xy ] [ 0 ] >> shift ) + sx ;	543:30:13491:13541	3602111	3	True				
ANR	3604308	IdentifierDecl	mx = ( motion_val [ direction ] [ xy ] [ 0 ] >> shift ) + sx		3602111	0					
ANR	3604309	IdentifierDeclType	int		3602111	0					
ANR	3604310	Identifier	mx		3602111	1					
ANR	3604311	AssignmentExpression	mx = ( motion_val [ direction ] [ xy ] [ 0 ] >> shift ) + sx		3602111	2		=			
ANR	3604312	Identifier	mx		3602111	0					
ANR	3604313	AdditiveExpression	( motion_val [ direction ] [ xy ] [ 0 ] >> shift ) + sx		3602111	1		+			
ANR	3604314	ShiftExpression	motion_val [ direction ] [ xy ] [ 0 ] >> shift		3602111	0		>>			
ANR	3604315	ArrayIndexing	motion_val [ direction ] [ xy ] [ 0 ]		3602111	0					
ANR	3604316	ArrayIndexing	motion_val [ direction ] [ xy ]		3602111	0					
ANR	3604317	ArrayIndexing	motion_val [ direction ]		3602111	0					
ANR	3604318	Identifier	motion_val		3602111	0					
ANR	3604319	Identifier	direction		3602111	1					
ANR	3604320	Identifier	xy		3602111	1					
ANR	3604321	PrimaryExpression	0		3602111	1					
ANR	3604322	Identifier	shift		3602111	1					
ANR	3604323	Identifier	sx		3602111	1					
ANR	3604324	IdentifierDeclStatement	int my = ( motion_val [ direction ] [ xy ] [ 1 ] >> shift ) + sy ;	545:30:13574:13624	3602111	4	True				
ANR	3604325	IdentifierDecl	my = ( motion_val [ direction ] [ xy ] [ 1 ] >> shift ) + sy		3602111	0					
ANR	3604326	IdentifierDeclType	int		3602111	0					
ANR	3604327	Identifier	my		3602111	1					
ANR	3604328	AssignmentExpression	my = ( motion_val [ direction ] [ xy ] [ 1 ] >> shift ) + sy		3602111	2		=			
ANR	3604329	Identifier	my		3602111	0					
ANR	3604330	AdditiveExpression	( motion_val [ direction ] [ xy ] [ 1 ] >> shift ) + sy		3602111	1		+			
ANR	3604331	ShiftExpression	motion_val [ direction ] [ xy ] [ 1 ] >> shift		3602111	0		>>			
ANR	3604332	ArrayIndexing	motion_val [ direction ] [ xy ] [ 1 ]		3602111	0					
ANR	3604333	ArrayIndexing	motion_val [ direction ] [ xy ]		3602111	0					
ANR	3604334	ArrayIndexing	motion_val [ direction ]		3602111	0					
ANR	3604335	Identifier	motion_val		3602111	0					
ANR	3604336	Identifier	direction		3602111	1					
ANR	3604337	Identifier	xy		3602111	1					
ANR	3604338	PrimaryExpression	1		3602111	1					
ANR	3604339	Identifier	shift		3602111	1					
ANR	3604340	Identifier	sy		3602111	1					
ANR	3604341	ExpressionStatement	"draw_arrow ( ptr , sx , sy , mx , my , width , height , pict -> linesize [ 0 ] , 100 , 0 , direction )"	547:30:13657:13741	3602111	5	True				
ANR	3604342	CallExpression	"draw_arrow ( ptr , sx , sy , mx , my , width , height , pict -> linesize [ 0 ] , 100 , 0 , direction )"		3602111	0					
ANR	3604343	Callee	draw_arrow		3602111	0					
ANR	3604344	Identifier	draw_arrow		3602111	0					
ANR	3604345	ArgumentList	ptr		3602111	1					
ANR	3604346	Argument	ptr		3602111	0					
ANR	3604347	Identifier	ptr		3602111	0					
ANR	3604348	Argument	sx		3602111	1					
ANR	3604349	Identifier	sx		3602111	0					
ANR	3604350	Argument	sy		3602111	2					
ANR	3604351	Identifier	sy		3602111	0					
ANR	3604352	Argument	mx		3602111	3					
ANR	3604353	Identifier	mx		3602111	0					
ANR	3604354	Argument	my		3602111	4					
ANR	3604355	Identifier	my		3602111	0					
ANR	3604356	Argument	width		3602111	5					
ANR	3604357	Identifier	width		3602111	0					
ANR	3604358	Argument	height		3602111	6					
ANR	3604359	Identifier	height		3602111	0					
ANR	3604360	Argument	pict -> linesize [ 0 ]		3602111	7					
ANR	3604361	ArrayIndexing	pict -> linesize [ 0 ]		3602111	0					
ANR	3604362	PtrMemberAccess	pict -> linesize		3602111	0					
ANR	3604363	Identifier	pict		3602111	0					
ANR	3604364	Identifier	linesize		3602111	1					
ANR	3604365	PrimaryExpression	0		3602111	1					
ANR	3604366	Argument	100		3602111	8					
ANR	3604367	PrimaryExpression	100		3602111	0					
ANR	3604368	Argument	0		3602111	9					
ANR	3604369	PrimaryExpression	0		3602111	0					
ANR	3604370	Argument	direction		3602111	10					
ANR	3604371	Identifier	direction		3602111	0					
ANR	3604372	IfStatement	if ( ( avctx -> debug & FF_DEBUG_VIS_QP ) )		3602111	2					
ANR	3604373	Condition	avctx -> debug & FF_DEBUG_VIS_QP	557:20:13841:13872	3602111	0	True				
ANR	3604374	BitAndExpression	avctx -> debug & FF_DEBUG_VIS_QP		3602111	0		&			
ANR	3604375	PtrMemberAccess	avctx -> debug		3602111	0					
ANR	3604376	Identifier	avctx		3602111	0					
ANR	3604377	Identifier	debug		3602111	1					
ANR	3604378	Identifier	FF_DEBUG_VIS_QP		3602111	1					
ANR	3604379	CompoundStatement		555:20:13705:13710	3602111	1					
ANR	3604380	Statement	uint64_t	559:20:13898:13905	3602111	0	True				
ANR	3604381	Statement	c	559:29:13907:13907	3602111	1	True				
ANR	3604382	Statement	=	559:31:13909:13909	3602111	2	True				
ANR	3604383	Statement	(	559:33:13911:13911	3602111	3	True				
ANR	3604384	Statement	qscale_table	559:34:13912:13923	3602111	4	True				
ANR	3604385	Statement	[	559:46:13924:13924	3602111	5	True				
ANR	3604386	Statement	mb_index	559:47:13925:13932	3602111	6	True				
ANR	3604387	Statement	]	559:55:13933:13933	3602111	7	True				
ANR	3604388	Statement	*	559:57:13935:13935	3602111	8	True				
ANR	3604389	Statement	128	559:59:13937:13939	3602111	9	True				
ANR	3604390	Statement	/	559:63:13941:13941	3602111	10	True				
ANR	3604391	Statement	31	559:65:13943:13944	3602111	11	True				
ANR	3604392	Statement	)	559:67:13945:13945	3602111	12	True				
ANR	3604393	Statement	*	559:69:13947:13947	3602111	13	True				
ANR	3604394	Statement	0x0101010101010101UL	561:33:13983:14002	3602111	14	True				
ANR	3604395	ExpressionStatement	L	561:53:14003:14004	3602111	15	True				
ANR	3604396	Identifier	L		3602111	0					
ANR	3604397	IdentifierDeclStatement	int y ;	563:20:14027:14032	3602111	16	True				
ANR	3604398	IdentifierDecl	y		3602111	0					
ANR	3604399	IdentifierDeclType	int		3602111	0					
ANR	3604400	Identifier	y		3602111	1					
ANR	3604401	ForStatement	for ( y = 0 ; y < block_height ; y ++ )		3602111	17					
ANR	3604402	ForInit	y = 0 ;	565:25:14060:14065	3602111	0	True				
ANR	3604403	AssignmentExpression	y = 0		3602111	0		=			
ANR	3604404	Identifier	y		3602111	0					
ANR	3604405	PrimaryExpression	0		3602111	1					
ANR	3604406	Condition	y < block_height	565:32:14067:14082	3602111	1	True				
ANR	3604407	RelationalExpression	y < block_height		3602111	0		<			
ANR	3604408	Identifier	y		3602111	0					
ANR	3604409	Identifier	block_height		3602111	1					
ANR	3604410	PostIncDecOperationExpression	y ++	565:50:14085:14087	3602111	2	True				
ANR	3604411	Identifier	y		3602111	0					
ANR	3604412	IncDec	++		3602111	1					
ANR	3604413	CompoundStatement		557:55:13768:13768	3602111	3					
ANR	3604414	ExpressionStatement	* ( uint64_t * ) ( pict -> data [ 1 ] + 8 * mb_x + ( block_height * mb_y + y ) * pict -> linesize [ 1 ] ) = c	567:24:14117:14286	3602111	0	True				
ANR	3604415	AssignmentExpression	* ( uint64_t * ) ( pict -> data [ 1 ] + 8 * mb_x + ( block_height * mb_y + y ) * pict -> linesize [ 1 ] ) = c		3602111	0		=			
ANR	3604416	UnaryOperationExpression	* ( uint64_t * ) ( pict -> data [ 1 ] + 8 * mb_x + ( block_height * mb_y + y ) * pict -> linesize [ 1 ] )		3602111	0					
ANR	3604417	UnaryOperator	*		3602111	0					
ANR	3604418	CastExpression	( uint64_t * ) ( pict -> data [ 1 ] + 8 * mb_x + ( block_height * mb_y + y ) * pict -> linesize [ 1 ] )		3602111	1					
ANR	3604419	CastTarget	uint64_t *		3602111	0					
ANR	3604420	AdditiveExpression	pict -> data [ 1 ] + 8 * mb_x + ( block_height * mb_y + y ) * pict -> linesize [ 1 ]		3602111	1		+			
ANR	3604421	ArrayIndexing	pict -> data [ 1 ]		3602111	0					
ANR	3604422	PtrMemberAccess	pict -> data		3602111	0					
ANR	3604423	Identifier	pict		3602111	0					
ANR	3604424	Identifier	data		3602111	1					
ANR	3604425	PrimaryExpression	1		3602111	1					
ANR	3604426	AdditiveExpression	8 * mb_x + ( block_height * mb_y + y ) * pict -> linesize [ 1 ]		3602111	1		+			
ANR	3604427	MultiplicativeExpression	8 * mb_x		3602111	0		*			
ANR	3604428	PrimaryExpression	8		3602111	0					
ANR	3604429	Identifier	mb_x		3602111	1					
ANR	3604430	MultiplicativeExpression	( block_height * mb_y + y ) * pict -> linesize [ 1 ]		3602111	1		*			
ANR	3604431	AdditiveExpression	block_height * mb_y + y		3602111	0		+			
ANR	3604432	MultiplicativeExpression	block_height * mb_y		3602111	0		*			
ANR	3604433	Identifier	block_height		3602111	0					
ANR	3604434	Identifier	mb_y		3602111	1					
ANR	3604435	Identifier	y		3602111	1					
ANR	3604436	ArrayIndexing	pict -> linesize [ 1 ]		3602111	1					
ANR	3604437	PtrMemberAccess	pict -> linesize		3602111	0					
ANR	3604438	Identifier	pict		3602111	0					
ANR	3604439	Identifier	linesize		3602111	1					
ANR	3604440	PrimaryExpression	1		3602111	1					
ANR	3604441	Identifier	c		3602111	1					
ANR	3604442	ExpressionStatement	* ( uint64_t * ) ( pict -> data [ 2 ] + 8 * mb_x + ( block_height * mb_y + y ) * pict -> linesize [ 2 ] ) = c	573:24:14313:14482	3602111	1	True				
ANR	3604443	AssignmentExpression	* ( uint64_t * ) ( pict -> data [ 2 ] + 8 * mb_x + ( block_height * mb_y + y ) * pict -> linesize [ 2 ] ) = c		3602111	0		=			
ANR	3604444	UnaryOperationExpression	* ( uint64_t * ) ( pict -> data [ 2 ] + 8 * mb_x + ( block_height * mb_y + y ) * pict -> linesize [ 2 ] )		3602111	0					
ANR	3604445	UnaryOperator	*		3602111	0					
ANR	3604446	CastExpression	( uint64_t * ) ( pict -> data [ 2 ] + 8 * mb_x + ( block_height * mb_y + y ) * pict -> linesize [ 2 ] )		3602111	1					
ANR	3604447	CastTarget	uint64_t *		3602111	0					
ANR	3604448	AdditiveExpression	pict -> data [ 2 ] + 8 * mb_x + ( block_height * mb_y + y ) * pict -> linesize [ 2 ]		3602111	1		+			
ANR	3604449	ArrayIndexing	pict -> data [ 2 ]		3602111	0					
ANR	3604450	PtrMemberAccess	pict -> data		3602111	0					
ANR	3604451	Identifier	pict		3602111	0					
ANR	3604452	Identifier	data		3602111	1					
ANR	3604453	PrimaryExpression	2		3602111	1					
ANR	3604454	AdditiveExpression	8 * mb_x + ( block_height * mb_y + y ) * pict -> linesize [ 2 ]		3602111	1		+			
ANR	3604455	MultiplicativeExpression	8 * mb_x		3602111	0		*			
ANR	3604456	PrimaryExpression	8		3602111	0					
ANR	3604457	Identifier	mb_x		3602111	1					
ANR	3604458	MultiplicativeExpression	( block_height * mb_y + y ) * pict -> linesize [ 2 ]		3602111	1		*			
ANR	3604459	AdditiveExpression	block_height * mb_y + y		3602111	0		+			
ANR	3604460	MultiplicativeExpression	block_height * mb_y		3602111	0		*			
ANR	3604461	Identifier	block_height		3602111	0					
ANR	3604462	Identifier	mb_y		3602111	1					
ANR	3604463	Identifier	y		3602111	1					
ANR	3604464	ArrayIndexing	pict -> linesize [ 2 ]		3602111	1					
ANR	3604465	PtrMemberAccess	pict -> linesize		3602111	0					
ANR	3604466	Identifier	pict		3602111	0					
ANR	3604467	Identifier	linesize		3602111	1					
ANR	3604468	PrimaryExpression	2		3602111	1					
ANR	3604469	Identifier	c		3602111	1					
ANR	3604470	IfStatement	if ( ( avctx -> debug & FF_DEBUG_VIS_MB_TYPE ) && motion_val [ 0 ] )		3602111	3					
ANR	3604471	Condition	( avctx -> debug & FF_DEBUG_VIS_MB_TYPE ) && motion_val [ 0 ]	583:20:14547:14621	3602111	0	True				
ANR	3604472	AndExpression	( avctx -> debug & FF_DEBUG_VIS_MB_TYPE ) && motion_val [ 0 ]		3602111	0		&&			
ANR	3604473	BitAndExpression	avctx -> debug & FF_DEBUG_VIS_MB_TYPE		3602111	0		&			
ANR	3604474	PtrMemberAccess	avctx -> debug		3602111	0					
ANR	3604475	Identifier	avctx		3602111	0					
ANR	3604476	Identifier	debug		3602111	1					
ANR	3604477	Identifier	FF_DEBUG_VIS_MB_TYPE		3602111	1					
ANR	3604478	ArrayIndexing	motion_val [ 0 ]		3602111	1					
ANR	3604479	Identifier	motion_val		3602111	0					
ANR	3604480	PrimaryExpression	0		3602111	1					
ANR	3604481	CompoundStatement		583:20:14419:14424	3602111	1					
ANR	3604482	IdentifierDeclStatement	int mb_type = mbtype_table [ mb_index ] ;	587:20:14647:14683	3602111	0	True				
ANR	3604483	IdentifierDecl	mb_type = mbtype_table [ mb_index ]		3602111	0					
ANR	3604484	IdentifierDeclType	int		3602111	0					
ANR	3604485	Identifier	mb_type		3602111	1					
ANR	3604486	AssignmentExpression	mb_type = mbtype_table [ mb_index ]		3602111	2		=			
ANR	3604487	Identifier	mb_type		3602111	0					
ANR	3604488	ArrayIndexing	mbtype_table [ mb_index ]		3602111	1					
ANR	3604489	Identifier	mbtype_table		3602111	0					
ANR	3604490	Identifier	mb_index		3602111	1					
ANR	3604491	IdentifierDeclStatement	"uint64_t u , v ;"	589:20:14706:14718	3602111	1	True				
ANR	3604492	IdentifierDecl	u		3602111	0					
ANR	3604493	IdentifierDeclType	uint64_t		3602111	0					
ANR	3604494	Identifier	u		3602111	1					
ANR	3604495	IdentifierDecl	v		3602111	1					
ANR	3604496	IdentifierDeclType	uint64_t		3602111	0					
ANR	3604497	Identifier	v		3602111	1					
ANR	3604498	IdentifierDeclStatement	int y ;	591:20:14741:14746	3602111	2	True				
ANR	3604499	IdentifierDecl	y		3602111	0					
ANR	3604500	IdentifierDeclType	int		3602111	0					
ANR	3604501	Identifier	y		3602111	1					
ANR	3604502	Statement	define	593:1:14750:14755	3602111	3	True				
ANR	3604503	Statement	COLOR	593:8:14757:14761	3602111	4	True				
ANR	3604504	Statement	(	593:13:14762:14762	3602111	5	True				
ANR	3604505	Statement	theta	593:14:14763:14767	3602111	6	True				
ANR	3604506	Statement	","	593:19:14768:14768	3602111	7	True				
ANR	3604507	Statement	r	593:21:14770:14770	3602111	8	True				
ANR	3604508	Statement	)	593:22:14771:14771	3602111	9	True				
ANR	3604509	ExpressionStatement	u = ( int ) ( 128 + r * cos ( theta * 3.141592 / 180 ) )	595:4:14780:14828	3602111	10	True				
ANR	3604510	AssignmentExpression	u = ( int ) ( 128 + r * cos ( theta * 3.141592 / 180 ) )		3602111	0		=			
ANR	3604511	Identifier	u		3602111	0					
ANR	3604512	CastExpression	( int ) ( 128 + r * cos ( theta * 3.141592 / 180 ) )		3602111	1					
ANR	3604513	CastTarget	int		3602111	0					
ANR	3604514	AdditiveExpression	128 + r * cos ( theta * 3.141592 / 180 )		3602111	1		+			
ANR	3604515	PrimaryExpression	128		3602111	0					
ANR	3604516	MultiplicativeExpression	r * cos ( theta * 3.141592 / 180 )		3602111	1		*			
ANR	3604517	Identifier	r		3602111	0					
ANR	3604518	CallExpression	cos ( theta * 3.141592 / 180 )		3602111	1					
ANR	3604519	Callee	cos		3602111	0					
ANR	3604520	Identifier	cos		3602111	0					
ANR	3604521	ArgumentList	theta * 3.141592 / 180		3602111	1					
ANR	3604522	Argument	theta * 3.141592 / 180		3602111	0					
ANR	3604523	MultiplicativeExpression	theta * 3.141592 / 180		3602111	0		*			
ANR	3604524	Identifier	theta		3602111	0					
ANR	3604525	MultiplicativeExpression	3.141592 / 180		3602111	1		/			
ANR	3604526	PrimaryExpression	3.141592		3602111	0					
ANR	3604527	PrimaryExpression	180		3602111	1					
ANR	3604528	ExpressionStatement	v = ( int ) ( 128 + r * sin ( theta * 3.141592 / 180 ) )	597:4:14837:14885	3602111	11	True				
ANR	3604529	AssignmentExpression	v = ( int ) ( 128 + r * sin ( theta * 3.141592 / 180 ) )		3602111	0		=			
ANR	3604530	Identifier	v		3602111	0					
ANR	3604531	CastExpression	( int ) ( 128 + r * sin ( theta * 3.141592 / 180 ) )		3602111	1					
ANR	3604532	CastTarget	int		3602111	0					
ANR	3604533	AdditiveExpression	128 + r * sin ( theta * 3.141592 / 180 )		3602111	1		+			
ANR	3604534	PrimaryExpression	128		3602111	0					
ANR	3604535	MultiplicativeExpression	r * sin ( theta * 3.141592 / 180 )		3602111	1		*			
ANR	3604536	Identifier	r		3602111	0					
ANR	3604537	CallExpression	sin ( theta * 3.141592 / 180 )		3602111	1					
ANR	3604538	Callee	sin		3602111	0					
ANR	3604539	Identifier	sin		3602111	0					
ANR	3604540	ArgumentList	theta * 3.141592 / 180		3602111	1					
ANR	3604541	Argument	theta * 3.141592 / 180		3602111	0					
ANR	3604542	MultiplicativeExpression	theta * 3.141592 / 180		3602111	0		*			
ANR	3604543	Identifier	theta		3602111	0					
ANR	3604544	MultiplicativeExpression	3.141592 / 180		3602111	1		/			
ANR	3604545	PrimaryExpression	3.141592		3602111	0					
ANR	3604546	PrimaryExpression	180		3602111	1					
ANR	3604547	ExpressionStatement	u = v = 128	603:20:14912:14923	3602111	12	True				
ANR	3604548	AssignmentExpression	u = v = 128		3602111	0		=			
ANR	3604549	Identifier	u		3602111	0					
ANR	3604550	AssignmentExpression	v = 128		3602111	1		=			
ANR	3604551	Identifier	v		3602111	0					
ANR	3604552	PrimaryExpression	128		3602111	1					
ANR	3604553	IfStatement	if ( IS_PCM ( mb_type ) )		3602111	13					
ANR	3604554	Condition	IS_PCM ( mb_type )	605:24:14950:14964	3602111	0	True				
ANR	3604555	CallExpression	IS_PCM ( mb_type )		3602111	0					
ANR	3604556	Callee	IS_PCM		3602111	0					
ANR	3604557	Identifier	IS_PCM		3602111	0					
ANR	3604558	ArgumentList	mb_type		3602111	1					
ANR	3604559	Argument	mb_type		3602111	0					
ANR	3604560	Identifier	mb_type		3602111	0					
ANR	3604561	CompoundStatement		597:41:14645:14645	3602111	1					
ANR	3604562	Statement	COLOR	607:24:14994:14998	3602111	0	True				
ANR	3604563	Statement	(	607:29:14999:14999	3602111	1	True				
ANR	3604564	Statement	120	607:30:15000:15002	3602111	2	True				
ANR	3604565	Statement	","	607:33:15003:15003	3602111	3	True				
ANR	3604566	Statement	48	607:35:15005:15006	3602111	4	True				
ANR	3604567	Statement	)	607:37:15007:15007	3602111	5	True				
ANR	3604568	ElseStatement	else		3602111	0					
ANR	3604569	IfStatement	if ( ( IS_INTRA ( mb_type ) && IS_ACPRED ( mb_type ) ) || IS_INTRA16x16 ( mb_type ) )		3602111	0					
ANR	3604570	Condition	( IS_INTRA ( mb_type ) && IS_ACPRED ( mb_type ) ) || IS_INTRA16x16 ( mb_type )	609:31:15041:15139	3602111	0	True				
ANR	3604571	OrExpression	( IS_INTRA ( mb_type ) && IS_ACPRED ( mb_type ) ) || IS_INTRA16x16 ( mb_type )		3602111	0		||			
ANR	3604572	AndExpression	IS_INTRA ( mb_type ) && IS_ACPRED ( mb_type )		3602111	0		&&			
ANR	3604573	CallExpression	IS_INTRA ( mb_type )		3602111	0					
ANR	3604574	Callee	IS_INTRA		3602111	0					
ANR	3604575	Identifier	IS_INTRA		3602111	0					
ANR	3604576	ArgumentList	mb_type		3602111	1					
ANR	3604577	Argument	mb_type		3602111	0					
ANR	3604578	Identifier	mb_type		3602111	0					
ANR	3604579	CallExpression	IS_ACPRED ( mb_type )		3602111	1					
ANR	3604580	Callee	IS_ACPRED		3602111	0					
ANR	3604581	Identifier	IS_ACPRED		3602111	0					
ANR	3604582	ArgumentList	mb_type		3602111	1					
ANR	3604583	Argument	mb_type		3602111	0					
ANR	3604584	Identifier	mb_type		3602111	0					
ANR	3604585	CallExpression	IS_INTRA16x16 ( mb_type )		3602111	1					
ANR	3604586	Callee	IS_INTRA16x16		3602111	0					
ANR	3604587	Identifier	IS_INTRA16x16		3602111	0					
ANR	3604588	ArgumentList	mb_type		3602111	1					
ANR	3604589	Argument	mb_type		3602111	0					
ANR	3604590	Identifier	mb_type		3602111	0					
ANR	3604591	CompoundStatement		603:55:14820:14820	3602111	1					
ANR	3604592	Statement	COLOR	613:24:15169:15173	3602111	0	True				
ANR	3604593	Statement	(	613:29:15174:15174	3602111	1	True				
ANR	3604594	Statement	30	613:30:15175:15176	3602111	2	True				
ANR	3604595	Statement	","	613:32:15177:15177	3602111	3	True				
ANR	3604596	Statement	48	613:34:15179:15180	3602111	4	True				
ANR	3604597	Statement	)	613:36:15181:15181	3602111	5	True				
ANR	3604598	ElseStatement	else		3602111	0					
ANR	3604599	IfStatement	if ( IS_INTRA4x4 ( mb_type ) )		3602111	0					
ANR	3604600	Condition	IS_INTRA4x4 ( mb_type )	615:31:15215:15234	3602111	0	True				
ANR	3604601	CallExpression	IS_INTRA4x4 ( mb_type )		3602111	0					
ANR	3604602	Callee	IS_INTRA4x4		3602111	0					
ANR	3604603	Identifier	IS_INTRA4x4		3602111	0					
ANR	3604604	ArgumentList	mb_type		3602111	1					
ANR	3604605	Argument	mb_type		3602111	0					
ANR	3604606	Identifier	mb_type		3602111	0					
ANR	3604607	CompoundStatement		607:53:14915:14915	3602111	1					
ANR	3604608	Statement	COLOR	617:24:15264:15268	3602111	0	True				
ANR	3604609	Statement	(	617:29:15269:15269	3602111	1	True				
ANR	3604610	Statement	90	617:30:15270:15271	3602111	2	True				
ANR	3604611	Statement	","	617:32:15272:15272	3602111	3	True				
ANR	3604612	Statement	48	617:34:15274:15275	3602111	4	True				
ANR	3604613	Statement	)	617:36:15276:15276	3602111	5	True				
ANR	3604614	ElseStatement	else		3602111	0					
ANR	3604615	IfStatement	if ( IS_DIRECT ( mb_type ) && IS_SKIP ( mb_type ) )		3602111	0					
ANR	3604616	Condition	IS_DIRECT ( mb_type ) && IS_SKIP ( mb_type )	619:31:15310:15347	3602111	0	True				
ANR	3604617	AndExpression	IS_DIRECT ( mb_type ) && IS_SKIP ( mb_type )		3602111	0		&&			
ANR	3604618	CallExpression	IS_DIRECT ( mb_type )		3602111	0					
ANR	3604619	Callee	IS_DIRECT		3602111	0					
ANR	3604620	Identifier	IS_DIRECT		3602111	0					
ANR	3604621	ArgumentList	mb_type		3602111	1					
ANR	3604622	Argument	mb_type		3602111	0					
ANR	3604623	Identifier	mb_type		3602111	0					
ANR	3604624	CallExpression	IS_SKIP ( mb_type )		3602111	1					
ANR	3604625	Callee	IS_SKIP		3602111	0					
ANR	3604626	Identifier	IS_SKIP		3602111	0					
ANR	3604627	ArgumentList	mb_type		3602111	1					
ANR	3604628	Argument	mb_type		3602111	0					
ANR	3604629	Identifier	mb_type		3602111	0					
ANR	3604630	CompoundStatement		611:71:15028:15028	3602111	1					
ANR	3604631	ElseStatement	else		3602111	0					
ANR	3604632	IfStatement	if ( IS_DIRECT ( mb_type ) )		3602111	0					
ANR	3604633	Condition	IS_DIRECT ( mb_type )	623:31:15427:15444	3602111	0	True				
ANR	3604634	CallExpression	IS_DIRECT ( mb_type )		3602111	0					
ANR	3604635	Callee	IS_DIRECT		3602111	0					
ANR	3604636	Identifier	IS_DIRECT		3602111	0					
ANR	3604637	ArgumentList	mb_type		3602111	1					
ANR	3604638	Argument	mb_type		3602111	0					
ANR	3604639	Identifier	mb_type		3602111	0					
ANR	3604640	CompoundStatement		615:51:15125:15125	3602111	1					
ANR	3604641	Statement	COLOR	625:24:15474:15478	3602111	0	True				
ANR	3604642	Statement	(	625:29:15479:15479	3602111	1	True				
ANR	3604643	Statement	150	625:30:15480:15482	3602111	2	True				
ANR	3604644	Statement	","	625:33:15483:15483	3602111	3	True				
ANR	3604645	Statement	48	625:35:15485:15486	3602111	4	True				
ANR	3604646	Statement	)	625:37:15487:15487	3602111	5	True				
ANR	3604647	ElseStatement	else		3602111	0					
ANR	3604648	IfStatement	if ( IS_GMC ( mb_type ) && IS_SKIP ( mb_type ) )		3602111	0					
ANR	3604649	Condition	IS_GMC ( mb_type ) && IS_SKIP ( mb_type )	627:31:15521:15555	3602111	0	True				
ANR	3604650	AndExpression	IS_GMC ( mb_type ) && IS_SKIP ( mb_type )		3602111	0		&&			
ANR	3604651	CallExpression	IS_GMC ( mb_type )		3602111	0					
ANR	3604652	Callee	IS_GMC		3602111	0					
ANR	3604653	Identifier	IS_GMC		3602111	0					
ANR	3604654	ArgumentList	mb_type		3602111	1					
ANR	3604655	Argument	mb_type		3602111	0					
ANR	3604656	Identifier	mb_type		3602111	0					
ANR	3604657	CallExpression	IS_SKIP ( mb_type )		3602111	1					
ANR	3604658	Callee	IS_SKIP		3602111	0					
ANR	3604659	Identifier	IS_SKIP		3602111	0					
ANR	3604660	ArgumentList	mb_type		3602111	1					
ANR	3604661	Argument	mb_type		3602111	0					
ANR	3604662	Identifier	mb_type		3602111	0					
ANR	3604663	CompoundStatement		619:68:15236:15236	3602111	1					
ANR	3604664	Statement	COLOR	629:24:15585:15589	3602111	0	True				
ANR	3604665	Statement	(	629:29:15590:15590	3602111	1	True				
ANR	3604666	Statement	170	629:30:15591:15593	3602111	2	True				
ANR	3604667	Statement	","	629:33:15594:15594	3602111	3	True				
ANR	3604668	Statement	48	629:35:15596:15597	3602111	4	True				
ANR	3604669	Statement	)	629:37:15598:15598	3602111	5	True				
ANR	3604670	ElseStatement	else		3602111	0					
ANR	3604671	IfStatement	if ( IS_GMC ( mb_type ) )		3602111	0					
ANR	3604672	Condition	IS_GMC ( mb_type )	631:31:15632:15646	3602111	0	True				
ANR	3604673	CallExpression	IS_GMC ( mb_type )		3602111	0					
ANR	3604674	Callee	IS_GMC		3602111	0					
ANR	3604675	Identifier	IS_GMC		3602111	0					
ANR	3604676	ArgumentList	mb_type		3602111	1					
ANR	3604677	Argument	mb_type		3602111	0					
ANR	3604678	Identifier	mb_type		3602111	0					
ANR	3604679	CompoundStatement		623:48:15327:15327	3602111	1					
ANR	3604680	Statement	COLOR	633:24:15676:15680	3602111	0	True				
ANR	3604681	Statement	(	633:29:15681:15681	3602111	1	True				
ANR	3604682	Statement	190	633:30:15682:15684	3602111	2	True				
ANR	3604683	Statement	","	633:33:15685:15685	3602111	3	True				
ANR	3604684	Statement	48	633:35:15687:15688	3602111	4	True				
ANR	3604685	Statement	)	633:37:15689:15689	3602111	5	True				
ANR	3604686	ElseStatement	else		3602111	0					
ANR	3604687	IfStatement	if ( IS_SKIP ( mb_type ) )		3602111	0					
ANR	3604688	Condition	IS_SKIP ( mb_type )	635:31:15723:15738	3602111	0	True				
ANR	3604689	CallExpression	IS_SKIP ( mb_type )		3602111	0					
ANR	3604690	Callee	IS_SKIP		3602111	0					
ANR	3604691	Identifier	IS_SKIP		3602111	0					
ANR	3604692	ArgumentList	mb_type		3602111	1					
ANR	3604693	Argument	mb_type		3602111	0					
ANR	3604694	Identifier	mb_type		3602111	0					
ANR	3604695	CompoundStatement		627:49:15419:15419	3602111	1					
ANR	3604696	ElseStatement	else		3602111	0					
ANR	3604697	IfStatement	"if ( ! USES_LIST ( mb_type , 1 ) )"		3602111	0					
ANR	3604698	Condition	"! USES_LIST ( mb_type , 1 )"	639:31:15818:15839	3602111	0	True				
ANR	3604699	UnaryOperationExpression	"! USES_LIST ( mb_type , 1 )"		3602111	0					
ANR	3604700	UnaryOperator	!		3602111	0					
ANR	3604701	CallExpression	"USES_LIST ( mb_type , 1 )"		3602111	1					
ANR	3604702	Callee	USES_LIST		3602111	0					
ANR	3604703	Identifier	USES_LIST		3602111	0					
ANR	3604704	ArgumentList	mb_type		3602111	1					
ANR	3604705	Argument	mb_type		3602111	0					
ANR	3604706	Identifier	mb_type		3602111	0					
ANR	3604707	Argument	1		3602111	1					
ANR	3604708	PrimaryExpression	1		3602111	0					
ANR	3604709	CompoundStatement		631:55:15520:15520	3602111	1					
ANR	3604710	Statement	COLOR	641:24:15869:15873	3602111	0	True				
ANR	3604711	Statement	(	641:29:15874:15874	3602111	1	True				
ANR	3604712	Statement	240	641:30:15875:15877	3602111	2	True				
ANR	3604713	Statement	","	641:33:15878:15878	3602111	3	True				
ANR	3604714	Statement	48	641:35:15880:15881	3602111	4	True				
ANR	3604715	Statement	)	641:37:15882:15882	3602111	5	True				
ANR	3604716	ElseStatement	else		3602111	0					
ANR	3604717	IfStatement	"if ( ! USES_LIST ( mb_type , 0 ) )"		3602111	0					
ANR	3604718	Condition	"! USES_LIST ( mb_type , 0 )"	643:31:15916:15937	3602111	0	True				
ANR	3604719	UnaryOperationExpression	"! USES_LIST ( mb_type , 0 )"		3602111	0					
ANR	3604720	UnaryOperator	!		3602111	0					
ANR	3604721	CallExpression	"USES_LIST ( mb_type , 0 )"		3602111	1					
ANR	3604722	Callee	USES_LIST		3602111	0					
ANR	3604723	Identifier	USES_LIST		3602111	0					
ANR	3604724	ArgumentList	mb_type		3602111	1					
ANR	3604725	Argument	mb_type		3602111	0					
ANR	3604726	Identifier	mb_type		3602111	0					
ANR	3604727	Argument	0		3602111	1					
ANR	3604728	PrimaryExpression	0		3602111	0					
ANR	3604729	CompoundStatement		635:55:15618:15618	3602111	1					
ANR	3604730	Statement	COLOR	645:24:15967:15971	3602111	0	True				
ANR	3604731	Statement	(	645:29:15972:15972	3602111	1	True				
ANR	3604732	Statement	0	645:30:15973:15973	3602111	2	True				
ANR	3604733	Statement	","	645:31:15974:15974	3602111	3	True				
ANR	3604734	Statement	48	645:33:15976:15977	3602111	4	True				
ANR	3604735	Statement	)	645:35:15978:15978	3602111	5	True				
ANR	3604736	ElseStatement	else		3602111	0					
ANR	3604737	CompoundStatement		639:27:15686:15686	3602111	0					
ANR	3604738	ExpressionStatement	"av_assert2 ( USES_LIST ( mb_type , 0 ) && USES_LIST ( mb_type , 1 ) )"	649:24:16035:16093	3602111	0	True				
ANR	3604739	CallExpression	"av_assert2 ( USES_LIST ( mb_type , 0 ) && USES_LIST ( mb_type , 1 ) )"		3602111	0					
ANR	3604740	Callee	av_assert2		3602111	0					
ANR	3604741	Identifier	av_assert2		3602111	0					
ANR	3604742	ArgumentList	"USES_LIST ( mb_type , 0 ) && USES_LIST ( mb_type , 1 )"		3602111	1					
ANR	3604743	Argument	"USES_LIST ( mb_type , 0 ) && USES_LIST ( mb_type , 1 )"		3602111	0					
ANR	3604744	AndExpression	"USES_LIST ( mb_type , 0 ) && USES_LIST ( mb_type , 1 )"		3602111	0		&&			
ANR	3604745	CallExpression	"USES_LIST ( mb_type , 0 )"		3602111	0					
ANR	3604746	Callee	USES_LIST		3602111	0					
ANR	3604747	Identifier	USES_LIST		3602111	0					
ANR	3604748	ArgumentList	mb_type		3602111	1					
ANR	3604749	Argument	mb_type		3602111	0					
ANR	3604750	Identifier	mb_type		3602111	0					
ANR	3604751	Argument	0		3602111	1					
ANR	3604752	PrimaryExpression	0		3602111	0					
ANR	3604753	CallExpression	"USES_LIST ( mb_type , 1 )"		3602111	1					
ANR	3604754	Callee	USES_LIST		3602111	0					
ANR	3604755	Identifier	USES_LIST		3602111	0					
ANR	3604756	ArgumentList	mb_type		3602111	1					
ANR	3604757	Argument	mb_type		3602111	0					
ANR	3604758	Identifier	mb_type		3602111	0					
ANR	3604759	Argument	1		3602111	1					
ANR	3604760	PrimaryExpression	1		3602111	0					
ANR	3604761	Statement	COLOR	651:24:16120:16124	3602111	1	True				
ANR	3604762	Statement	(	651:29:16125:16125	3602111	2	True				
ANR	3604763	Statement	300	651:30:16126:16128	3602111	3	True				
ANR	3604764	Statement	","	651:33:16129:16129	3602111	4	True				
ANR	3604765	Statement	48	651:34:16130:16131	3602111	5	True				
ANR	3604766	Statement	)	651:36:16132:16132	3602111	6	True				
ANR	3604767	Statement	u	657:20:16180:16180	3602111	14	True				
ANR	3604768	Statement	*=	657:22:16182:16183	3602111	15	True				
ANR	3604769	Statement	0x0101010101010101UL	657:25:16185:16204	3602111	16	True				
ANR	3604770	ExpressionStatement	L	657:45:16205:16206	3602111	17	True				
ANR	3604771	Identifier	L		3602111	0					
ANR	3604772	Statement	v	659:20:16229:16229	3602111	18	True				
ANR	3604773	Statement	*=	659:22:16231:16232	3602111	19	True				
ANR	3604774	Statement	0x0101010101010101UL	659:25:16234:16253	3602111	20	True				
ANR	3604775	ExpressionStatement	L	659:45:16254:16255	3602111	21	True				
ANR	3604776	Identifier	L		3602111	0					
ANR	3604777	ForStatement	for ( y = 0 ; y < block_height ; y ++ )		3602111	22					
ANR	3604778	ForInit	y = 0 ;	661:25:16283:16288	3602111	0	True				
ANR	3604779	AssignmentExpression	y = 0		3602111	0		=			
ANR	3604780	Identifier	y		3602111	0					
ANR	3604781	PrimaryExpression	0		3602111	1					
ANR	3604782	Condition	y < block_height	661:32:16290:16305	3602111	1	True				
ANR	3604783	RelationalExpression	y < block_height		3602111	0		<			
ANR	3604784	Identifier	y		3602111	0					
ANR	3604785	Identifier	block_height		3602111	1					
ANR	3604786	PostIncDecOperationExpression	y ++	661:50:16308:16310	3602111	2	True				
ANR	3604787	Identifier	y		3602111	0					
ANR	3604788	IncDec	++		3602111	1					
ANR	3604789	CompoundStatement		653:55:15991:15991	3602111	3					
ANR	3604790	ExpressionStatement	* ( uint64_t * ) ( pict -> data [ 1 ] + 8 * mb_x + ( block_height * mb_y + y ) * pict -> linesize [ 1 ] ) = u	663:24:16340:16470	3602111	0	True				
ANR	3604791	AssignmentExpression	* ( uint64_t * ) ( pict -> data [ 1 ] + 8 * mb_x + ( block_height * mb_y + y ) * pict -> linesize [ 1 ] ) = u		3602111	0		=			
ANR	3604792	UnaryOperationExpression	* ( uint64_t * ) ( pict -> data [ 1 ] + 8 * mb_x + ( block_height * mb_y + y ) * pict -> linesize [ 1 ] )		3602111	0					
ANR	3604793	UnaryOperator	*		3602111	0					
ANR	3604794	CastExpression	( uint64_t * ) ( pict -> data [ 1 ] + 8 * mb_x + ( block_height * mb_y + y ) * pict -> linesize [ 1 ] )		3602111	1					
ANR	3604795	CastTarget	uint64_t *		3602111	0					
ANR	3604796	AdditiveExpression	pict -> data [ 1 ] + 8 * mb_x + ( block_height * mb_y + y ) * pict -> linesize [ 1 ]		3602111	1		+			
ANR	3604797	ArrayIndexing	pict -> data [ 1 ]		3602111	0					
ANR	3604798	PtrMemberAccess	pict -> data		3602111	0					
ANR	3604799	Identifier	pict		3602111	0					
ANR	3604800	Identifier	data		3602111	1					
ANR	3604801	PrimaryExpression	1		3602111	1					
ANR	3604802	AdditiveExpression	8 * mb_x + ( block_height * mb_y + y ) * pict -> linesize [ 1 ]		3602111	1		+			
ANR	3604803	MultiplicativeExpression	8 * mb_x		3602111	0		*			
ANR	3604804	PrimaryExpression	8		3602111	0					
ANR	3604805	Identifier	mb_x		3602111	1					
ANR	3604806	MultiplicativeExpression	( block_height * mb_y + y ) * pict -> linesize [ 1 ]		3602111	1		*			
ANR	3604807	AdditiveExpression	block_height * mb_y + y		3602111	0		+			
ANR	3604808	MultiplicativeExpression	block_height * mb_y		3602111	0		*			
ANR	3604809	Identifier	block_height		3602111	0					
ANR	3604810	Identifier	mb_y		3602111	1					
ANR	3604811	Identifier	y		3602111	1					
ANR	3604812	ArrayIndexing	pict -> linesize [ 1 ]		3602111	1					
ANR	3604813	PtrMemberAccess	pict -> linesize		3602111	0					
ANR	3604814	Identifier	pict		3602111	0					
ANR	3604815	Identifier	linesize		3602111	1					
ANR	3604816	PrimaryExpression	1		3602111	1					
ANR	3604817	Identifier	u		3602111	1					
ANR	3604818	ExpressionStatement	* ( uint64_t * ) ( pict -> data [ 2 ] + 8 * mb_x + ( block_height * mb_y + y ) * pict -> linesize [ 2 ] ) = v	667:24:16497:16627	3602111	1	True				
ANR	3604819	AssignmentExpression	* ( uint64_t * ) ( pict -> data [ 2 ] + 8 * mb_x + ( block_height * mb_y + y ) * pict -> linesize [ 2 ] ) = v		3602111	0		=			
ANR	3604820	UnaryOperationExpression	* ( uint64_t * ) ( pict -> data [ 2 ] + 8 * mb_x + ( block_height * mb_y + y ) * pict -> linesize [ 2 ] )		3602111	0					
ANR	3604821	UnaryOperator	*		3602111	0					
ANR	3604822	CastExpression	( uint64_t * ) ( pict -> data [ 2 ] + 8 * mb_x + ( block_height * mb_y + y ) * pict -> linesize [ 2 ] )		3602111	1					
ANR	3604823	CastTarget	uint64_t *		3602111	0					
ANR	3604824	AdditiveExpression	pict -> data [ 2 ] + 8 * mb_x + ( block_height * mb_y + y ) * pict -> linesize [ 2 ]		3602111	1		+			
ANR	3604825	ArrayIndexing	pict -> data [ 2 ]		3602111	0					
ANR	3604826	PtrMemberAccess	pict -> data		3602111	0					
ANR	3604827	Identifier	pict		3602111	0					
ANR	3604828	Identifier	data		3602111	1					
ANR	3604829	PrimaryExpression	2		3602111	1					
ANR	3604830	AdditiveExpression	8 * mb_x + ( block_height * mb_y + y ) * pict -> linesize [ 2 ]		3602111	1		+			
ANR	3604831	MultiplicativeExpression	8 * mb_x		3602111	0		*			
ANR	3604832	PrimaryExpression	8		3602111	0					
ANR	3604833	Identifier	mb_x		3602111	1					
ANR	3604834	MultiplicativeExpression	( block_height * mb_y + y ) * pict -> linesize [ 2 ]		3602111	1		*			
ANR	3604835	AdditiveExpression	block_height * mb_y + y		3602111	0		+			
ANR	3604836	MultiplicativeExpression	block_height * mb_y		3602111	0		*			
ANR	3604837	Identifier	block_height		3602111	0					
ANR	3604838	Identifier	mb_y		3602111	1					
ANR	3604839	Identifier	y		3602111	1					
ANR	3604840	ArrayIndexing	pict -> linesize [ 2 ]		3602111	1					
ANR	3604841	PtrMemberAccess	pict -> linesize		3602111	0					
ANR	3604842	Identifier	pict		3602111	0					
ANR	3604843	Identifier	linesize		3602111	1					
ANR	3604844	PrimaryExpression	2		3602111	1					
ANR	3604845	Identifier	v		3602111	1					
ANR	3604846	IfStatement	if ( IS_8X8 ( mb_type ) || IS_16X8 ( mb_type ) )		3602111	23					
ANR	3604847	Condition	IS_8X8 ( mb_type ) || IS_16X8 ( mb_type )	677:24:16716:16750	3602111	0	True				
ANR	3604848	OrExpression	IS_8X8 ( mb_type ) || IS_16X8 ( mb_type )		3602111	0		||			
ANR	3604849	CallExpression	IS_8X8 ( mb_type )		3602111	0					
ANR	3604850	Callee	IS_8X8		3602111	0					
ANR	3604851	Identifier	IS_8X8		3602111	0					
ANR	3604852	ArgumentList	mb_type		3602111	1					
ANR	3604853	Argument	mb_type		3602111	0					
ANR	3604854	Identifier	mb_type		3602111	0					
ANR	3604855	CallExpression	IS_16X8 ( mb_type )		3602111	1					
ANR	3604856	Callee	IS_16X8		3602111	0					
ANR	3604857	Identifier	IS_16X8		3602111	0					
ANR	3604858	ArgumentList	mb_type		3602111	1					
ANR	3604859	Argument	mb_type		3602111	0					
ANR	3604860	Identifier	mb_type		3602111	0					
ANR	3604861	CompoundStatement		669:61:16431:16431	3602111	1					
ANR	3604862	Statement	*	679:24:16780:16780	3602111	0	True				
ANR	3604863	Statement	(	679:25:16781:16781	3602111	1	True				
ANR	3604864	Statement	uint64_t	679:26:16782:16789	3602111	2	True				
ANR	3604865	Statement	*	679:35:16791:16791	3602111	3	True				
ANR	3604866	Statement	)	679:36:16792:16792	3602111	4	True				
ANR	3604867	Statement	(	679:37:16793:16793	3602111	5	True				
ANR	3604868	Statement	pict	679:38:16794:16797	3602111	6	True				
ANR	3604869	Statement	->	679:42:16798:16799	3602111	7	True				
ANR	3604870	Statement	data	679:44:16800:16803	3602111	8	True				
ANR	3604871	Statement	[	679:48:16804:16804	3602111	9	True				
ANR	3604872	Statement	0	679:49:16805:16805	3602111	10	True				
ANR	3604873	Statement	]	679:50:16806:16806	3602111	11	True				
ANR	3604874	Statement	+	679:52:16808:16808	3602111	12	True				
ANR	3604875	Statement	16	679:54:16810:16811	3602111	13	True				
ANR	3604876	Statement	*	679:57:16813:16813	3602111	14	True				
ANR	3604877	Statement	mb_x	679:59:16815:16818	3602111	15	True				
ANR	3604878	Statement	+	679:64:16820:16820	3602111	16	True				
ANR	3604879	Statement	0	679:66:16822:16822	3602111	17	True				
ANR	3604880	Statement	+	679:68:16824:16824	3602111	18	True				
ANR	3604881	Statement	(	681:38:16865:16865	3602111	19	True				
ANR	3604882	Statement	16	681:39:16866:16867	3602111	20	True				
ANR	3604883	Statement	*	681:42:16869:16869	3602111	21	True				
ANR	3604884	Statement	mb_y	681:44:16871:16874	3602111	22	True				
ANR	3604885	Statement	+	681:49:16876:16876	3602111	23	True				
ANR	3604886	Statement	8	681:51:16878:16878	3602111	24	True				
ANR	3604887	Statement	)	681:52:16879:16879	3602111	25	True				
ANR	3604888	Statement	*	681:54:16881:16881	3602111	26	True				
ANR	3604889	Statement	pict	681:56:16883:16886	3602111	27	True				
ANR	3604890	Statement	->	681:60:16887:16888	3602111	28	True				
ANR	3604891	Statement	linesize	681:62:16889:16896	3602111	29	True				
ANR	3604892	Statement	[	681:70:16897:16897	3602111	30	True				
ANR	3604893	Statement	0	681:71:16898:16898	3602111	31	True				
ANR	3604894	Statement	]	681:72:16899:16899	3602111	32	True				
ANR	3604895	Statement	)	681:73:16900:16900	3602111	33	True				
ANR	3604896	Statement	^=	681:75:16902:16903	3602111	34	True				
ANR	3604897	Statement	0x8080808080808080UL	681:78:16905:16924	3602111	35	True				
ANR	3604898	ExpressionStatement	L	681:98:16925:16926	3602111	36	True				
ANR	3604899	Identifier	L		3602111	0					
ANR	3604900	Statement	*	683:24:16953:16953	3602111	37	True				
ANR	3604901	Statement	(	683:25:16954:16954	3602111	38	True				
ANR	3604902	Statement	uint64_t	683:26:16955:16962	3602111	39	True				
ANR	3604903	Statement	*	683:35:16964:16964	3602111	40	True				
ANR	3604904	Statement	)	683:36:16965:16965	3602111	41	True				
ANR	3604905	Statement	(	683:37:16966:16966	3602111	42	True				
ANR	3604906	Statement	pict	683:38:16967:16970	3602111	43	True				
ANR	3604907	Statement	->	683:42:16971:16972	3602111	44	True				
ANR	3604908	Statement	data	683:44:16973:16976	3602111	45	True				
ANR	3604909	Statement	[	683:48:16977:16977	3602111	46	True				
ANR	3604910	Statement	0	683:49:16978:16978	3602111	47	True				
ANR	3604911	Statement	]	683:50:16979:16979	3602111	48	True				
ANR	3604912	Statement	+	683:52:16981:16981	3602111	49	True				
ANR	3604913	Statement	16	683:54:16983:16984	3602111	50	True				
ANR	3604914	Statement	*	683:57:16986:16986	3602111	51	True				
ANR	3604915	Statement	mb_x	683:59:16988:16991	3602111	52	True				
ANR	3604916	Statement	+	683:64:16993:16993	3602111	53	True				
ANR	3604917	Statement	8	683:66:16995:16995	3602111	54	True				
ANR	3604918	Statement	+	683:68:16997:16997	3602111	55	True				
ANR	3604919	Statement	(	685:38:17038:17038	3602111	56	True				
ANR	3604920	Statement	16	685:39:17039:17040	3602111	57	True				
ANR	3604921	Statement	*	685:42:17042:17042	3602111	58	True				
ANR	3604922	Statement	mb_y	685:44:17044:17047	3602111	59	True				
ANR	3604923	Statement	+	685:49:17049:17049	3602111	60	True				
ANR	3604924	Statement	8	685:51:17051:17051	3602111	61	True				
ANR	3604925	Statement	)	685:52:17052:17052	3602111	62	True				
ANR	3604926	Statement	*	685:54:17054:17054	3602111	63	True				
ANR	3604927	Statement	pict	685:56:17056:17059	3602111	64	True				
ANR	3604928	Statement	->	685:60:17060:17061	3602111	65	True				
ANR	3604929	Statement	linesize	685:62:17062:17069	3602111	66	True				
ANR	3604930	Statement	[	685:70:17070:17070	3602111	67	True				
ANR	3604931	Statement	0	685:71:17071:17071	3602111	68	True				
ANR	3604932	Statement	]	685:72:17072:17072	3602111	69	True				
ANR	3604933	Statement	)	685:73:17073:17073	3602111	70	True				
ANR	3604934	Statement	^=	685:75:17075:17076	3602111	71	True				
ANR	3604935	Statement	0x8080808080808080UL	685:78:17078:17097	3602111	72	True				
ANR	3604936	ExpressionStatement	L	685:98:17098:17099	3602111	73	True				
ANR	3604937	Identifier	L		3602111	0					
ANR	3604938	IfStatement	if ( IS_8X8 ( mb_type ) || IS_8X16 ( mb_type ) )		3602111	24					
ANR	3604939	Condition	IS_8X8 ( mb_type ) || IS_8X16 ( mb_type )	689:24:17149:17183	3602111	0	True				
ANR	3604940	OrExpression	IS_8X8 ( mb_type ) || IS_8X16 ( mb_type )		3602111	0		||			
ANR	3604941	CallExpression	IS_8X8 ( mb_type )		3602111	0					
ANR	3604942	Callee	IS_8X8		3602111	0					
ANR	3604943	Identifier	IS_8X8		3602111	0					
ANR	3604944	ArgumentList	mb_type		3602111	1					
ANR	3604945	Argument	mb_type		3602111	0					
ANR	3604946	Identifier	mb_type		3602111	0					
ANR	3604947	CallExpression	IS_8X16 ( mb_type )		3602111	1					
ANR	3604948	Callee	IS_8X16		3602111	0					
ANR	3604949	Identifier	IS_8X16		3602111	0					
ANR	3604950	ArgumentList	mb_type		3602111	1					
ANR	3604951	Argument	mb_type		3602111	0					
ANR	3604952	Identifier	mb_type		3602111	0					
ANR	3604953	CompoundStatement		681:61:16864:16864	3602111	1					
ANR	3604954	ForStatement	for ( y = 0 ; y < 16 ; y ++ )		3602111	0					
ANR	3604955	ForInit	y = 0 ;	691:29:17218:17223	3602111	0	True				
ANR	3604956	AssignmentExpression	y = 0		3602111	0		=			
ANR	3604957	Identifier	y		3602111	0					
ANR	3604958	PrimaryExpression	0		3602111	1					
ANR	3604959	Condition	y < 16	691:36:17225:17230	3602111	1	True				
ANR	3604960	RelationalExpression	y < 16		3602111	0		<			
ANR	3604961	Identifier	y		3602111	0					
ANR	3604962	PrimaryExpression	16		3602111	1					
ANR	3604963	PostIncDecOperationExpression	y ++	691:44:17233:17235	3602111	2	True				
ANR	3604964	Identifier	y		3602111	0					
ANR	3604965	IncDec	++		3602111	1					
ANR	3604966	ExpressionStatement	pict -> data [ 0 ] [ 16 * mb_x + 8 + ( 16 * mb_y + y ) * pict -> linesize [ 0 ] ] ^= 0x80	693:28:17267:17384	3602111	3	True				
ANR	3604967	AssignmentExpression	pict -> data [ 0 ] [ 16 * mb_x + 8 + ( 16 * mb_y + y ) * pict -> linesize [ 0 ] ] ^= 0x80		3602111	0		^=			
ANR	3604968	ArrayIndexing	pict -> data [ 0 ] [ 16 * mb_x + 8 + ( 16 * mb_y + y ) * pict -> linesize [ 0 ] ]		3602111	0					
ANR	3604969	ArrayIndexing	pict -> data [ 0 ]		3602111	0					
ANR	3604970	PtrMemberAccess	pict -> data		3602111	0					
ANR	3604971	Identifier	pict		3602111	0					
ANR	3604972	Identifier	data		3602111	1					
ANR	3604973	PrimaryExpression	0		3602111	1					
ANR	3604974	AdditiveExpression	16 * mb_x + 8 + ( 16 * mb_y + y ) * pict -> linesize [ 0 ]		3602111	1		+			
ANR	3604975	MultiplicativeExpression	16 * mb_x		3602111	0		*			
ANR	3604976	PrimaryExpression	16		3602111	0					
ANR	3604977	Identifier	mb_x		3602111	1					
ANR	3604978	AdditiveExpression	8 + ( 16 * mb_y + y ) * pict -> linesize [ 0 ]		3602111	1		+			
ANR	3604979	PrimaryExpression	8		3602111	0					
ANR	3604980	MultiplicativeExpression	( 16 * mb_y + y ) * pict -> linesize [ 0 ]		3602111	1		*			
ANR	3604981	AdditiveExpression	16 * mb_y + y		3602111	0		+			
ANR	3604982	MultiplicativeExpression	16 * mb_y		3602111	0		*			
ANR	3604983	PrimaryExpression	16		3602111	0					
ANR	3604984	Identifier	mb_y		3602111	1					
ANR	3604985	Identifier	y		3602111	1					
ANR	3604986	ArrayIndexing	pict -> linesize [ 0 ]		3602111	1					
ANR	3604987	PtrMemberAccess	pict -> linesize		3602111	0					
ANR	3604988	Identifier	pict		3602111	0					
ANR	3604989	Identifier	linesize		3602111	1					
ANR	3604990	PrimaryExpression	0		3602111	1					
ANR	3604991	PrimaryExpression	0x80		3602111	1					
ANR	3604992	IfStatement	if ( IS_8X8 ( mb_type ) && mv_sample_log2 >= 2 )		3602111	25					
ANR	3604993	Condition	IS_8X8 ( mb_type ) && mv_sample_log2 >= 2	699:24:17434:17471	3602111	0	True				
ANR	3604994	AndExpression	IS_8X8 ( mb_type ) && mv_sample_log2 >= 2		3602111	0		&&			
ANR	3604995	CallExpression	IS_8X8 ( mb_type )		3602111	0					
ANR	3604996	Callee	IS_8X8		3602111	0					
ANR	3604997	Identifier	IS_8X8		3602111	0					
ANR	3604998	ArgumentList	mb_type		3602111	1					
ANR	3604999	Argument	mb_type		3602111	0					
ANR	3605000	Identifier	mb_type		3602111	0					
ANR	3605001	RelationalExpression	mv_sample_log2 >= 2		3602111	1		>=			
ANR	3605002	Identifier	mv_sample_log2		3602111	0					
ANR	3605003	PrimaryExpression	2		3602111	1					
ANR	3605004	CompoundStatement		693:24:17179:17213	3602111	1					
ANR	3605005	IdentifierDeclStatement	int dm = 1 << ( mv_sample_log2 - 2 ) ;	701:24:17501:17535	3602111	0	True				
ANR	3605006	IdentifierDecl	dm = 1 << ( mv_sample_log2 - 2 )		3602111	0					
ANR	3605007	IdentifierDeclType	int		3602111	0					
ANR	3605008	Identifier	dm		3602111	1					
ANR	3605009	AssignmentExpression	dm = 1 << ( mv_sample_log2 - 2 )		3602111	2		=			
ANR	3605010	Identifier	dm		3602111	0					
ANR	3605011	ShiftExpression	1 << ( mv_sample_log2 - 2 )		3602111	1		<<			
ANR	3605012	PrimaryExpression	1		3602111	0					
ANR	3605013	AdditiveExpression	mv_sample_log2 - 2		3602111	1		-			
ANR	3605014	Identifier	mv_sample_log2		3602111	0					
ANR	3605015	PrimaryExpression	2		3602111	1					
ANR	3605016	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		3602111	1					
ANR	3605017	ForInit	i = 0 ;	703:29:17567:17572	3602111	0	True				
ANR	3605018	AssignmentExpression	i = 0		3602111	0		=			
ANR	3605019	Identifier	i		3602111	0					
ANR	3605020	PrimaryExpression	0		3602111	1					
ANR	3605021	Condition	i < 4	703:36:17574:17578	3602111	1	True				
ANR	3605022	RelationalExpression	i < 4		3602111	0		<			
ANR	3605023	Identifier	i		3602111	0					
ANR	3605024	PrimaryExpression	4		3602111	1					
ANR	3605025	PostIncDecOperationExpression	i ++	703:43:17581:17583	3602111	2	True				
ANR	3605026	Identifier	i		3602111	0					
ANR	3605027	IncDec	++		3602111	1					
ANR	3605028	CompoundStatement		707:28:17624:17668	3602111	3					
ANR	3605029	IdentifierDeclStatement	int sx = mb_x * 16 + 8 * ( i & 1 ) ;	705:28:17617:17649	3602111	0	True				
ANR	3605030	IdentifierDecl	sx = mb_x * 16 + 8 * ( i & 1 )		3602111	0					
ANR	3605031	IdentifierDeclType	int		3602111	0					
ANR	3605032	Identifier	sx		3602111	1					
ANR	3605033	AssignmentExpression	sx = mb_x * 16 + 8 * ( i & 1 )		3602111	2		=			
ANR	3605034	Identifier	sx		3602111	0					
ANR	3605035	AdditiveExpression	mb_x * 16 + 8 * ( i & 1 )		3602111	1		+			
ANR	3605036	MultiplicativeExpression	mb_x * 16		3602111	0		*			
ANR	3605037	Identifier	mb_x		3602111	0					
ANR	3605038	PrimaryExpression	16		3602111	1					
ANR	3605039	MultiplicativeExpression	8 * ( i & 1 )		3602111	1		*			
ANR	3605040	PrimaryExpression	8		3602111	0					
ANR	3605041	BitAndExpression	i & 1		3602111	1		&			
ANR	3605042	Identifier	i		3602111	0					
ANR	3605043	PrimaryExpression	1		3602111	1					
ANR	3605044	IdentifierDeclStatement	int sy = mb_y * 16 + 8 * ( i >> 1 ) ;	707:28:17680:17713	3602111	1	True				
ANR	3605045	IdentifierDecl	sy = mb_y * 16 + 8 * ( i >> 1 )		3602111	0					
ANR	3605046	IdentifierDeclType	int		3602111	0					
ANR	3605047	Identifier	sy		3602111	1					
ANR	3605048	AssignmentExpression	sy = mb_y * 16 + 8 * ( i >> 1 )		3602111	2		=			
ANR	3605049	Identifier	sy		3602111	0					
ANR	3605050	AdditiveExpression	mb_y * 16 + 8 * ( i >> 1 )		3602111	1		+			
ANR	3605051	MultiplicativeExpression	mb_y * 16		3602111	0		*			
ANR	3605052	Identifier	mb_y		3602111	0					
ANR	3605053	PrimaryExpression	16		3602111	1					
ANR	3605054	MultiplicativeExpression	8 * ( i >> 1 )		3602111	1		*			
ANR	3605055	PrimaryExpression	8		3602111	0					
ANR	3605056	ShiftExpression	i >> 1		3602111	1		>>			
ANR	3605057	Identifier	i		3602111	0					
ANR	3605058	PrimaryExpression	1		3602111	1					
ANR	3605059	IdentifierDeclStatement	int xy = ( mb_x * 2 + ( i & 1 ) + ( mb_y * 2 + ( i >> 1 ) ) * mv_stride ) << ( mv_sample_log2 - 1 ) ;	709:28:17744:17871	3602111	2	True				
ANR	3605060	IdentifierDecl	xy = ( mb_x * 2 + ( i & 1 ) + ( mb_y * 2 + ( i >> 1 ) ) * mv_stride ) << ( mv_sample_log2 - 1 )		3602111	0					
ANR	3605061	IdentifierDeclType	int		3602111	0					
ANR	3605062	Identifier	xy		3602111	1					
ANR	3605063	AssignmentExpression	xy = ( mb_x * 2 + ( i & 1 ) + ( mb_y * 2 + ( i >> 1 ) ) * mv_stride ) << ( mv_sample_log2 - 1 )		3602111	2		=			
ANR	3605064	Identifier	xy		3602111	0					
ANR	3605065	ShiftExpression	( mb_x * 2 + ( i & 1 ) + ( mb_y * 2 + ( i >> 1 ) ) * mv_stride ) << ( mv_sample_log2 - 1 )		3602111	1		<<			
ANR	3605066	AdditiveExpression	mb_x * 2 + ( i & 1 ) + ( mb_y * 2 + ( i >> 1 ) ) * mv_stride		3602111	0		+			
ANR	3605067	MultiplicativeExpression	mb_x * 2		3602111	0		*			
ANR	3605068	Identifier	mb_x		3602111	0					
ANR	3605069	PrimaryExpression	2		3602111	1					
ANR	3605070	AdditiveExpression	( i & 1 ) + ( mb_y * 2 + ( i >> 1 ) ) * mv_stride		3602111	1		+			
ANR	3605071	BitAndExpression	i & 1		3602111	0		&			
ANR	3605072	Identifier	i		3602111	0					
ANR	3605073	PrimaryExpression	1		3602111	1					
ANR	3605074	MultiplicativeExpression	( mb_y * 2 + ( i >> 1 ) ) * mv_stride		3602111	1		*			
ANR	3605075	AdditiveExpression	mb_y * 2 + ( i >> 1 )		3602111	0		+			
ANR	3605076	MultiplicativeExpression	mb_y * 2		3602111	0		*			
ANR	3605077	Identifier	mb_y		3602111	0					
ANR	3605078	PrimaryExpression	2		3602111	1					
ANR	3605079	ShiftExpression	i >> 1		3602111	1		>>			
ANR	3605080	Identifier	i		3602111	0					
ANR	3605081	PrimaryExpression	1		3602111	1					
ANR	3605082	Identifier	mv_stride		3602111	1					
ANR	3605083	AdditiveExpression	mv_sample_log2 - 1		3602111	1		-			
ANR	3605084	Identifier	mv_sample_log2		3602111	0					
ANR	3605085	PrimaryExpression	1		3602111	1					
ANR	3605086	IdentifierDeclStatement	int32_t * mv = ( int32_t * ) & motion_val [ 0 ] [ xy ] ;	715:28:17946:17990	3602111	3	True				
ANR	3605087	IdentifierDecl	* mv = ( int32_t * ) & motion_val [ 0 ] [ xy ]		3602111	0					
ANR	3605088	IdentifierDeclType	int32_t *		3602111	0					
ANR	3605089	Identifier	mv		3602111	1					
ANR	3605090	AssignmentExpression	* mv = ( int32_t * ) & motion_val [ 0 ] [ xy ]		3602111	2		=			
ANR	3605091	Identifier	mv		3602111	0					
ANR	3605092	CastExpression	( int32_t * ) & motion_val [ 0 ] [ xy ]		3602111	1					
ANR	3605093	CastTarget	int32_t *		3602111	0					
ANR	3605094	UnaryOperationExpression	& motion_val [ 0 ] [ xy ]		3602111	1					
ANR	3605095	UnaryOperator	&		3602111	0					
ANR	3605096	ArrayIndexing	motion_val [ 0 ] [ xy ]		3602111	1					
ANR	3605097	ArrayIndexing	motion_val [ 0 ]		3602111	0					
ANR	3605098	Identifier	motion_val		3602111	0					
ANR	3605099	PrimaryExpression	0		3602111	1					
ANR	3605100	Identifier	xy		3602111	1					
ANR	3605101	IfStatement	if ( mv [ 0 ] != mv [ dm ] || mv [ dm * mv_stride ] != mv [ dm * ( mv_stride + 1 ) ] )		3602111	4					
ANR	3605102	Condition	mv [ 0 ] != mv [ dm ] || mv [ dm * mv_stride ] != mv [ dm * ( mv_stride + 1 ) ]	717:32:18025:18122	3602111	0	True				
ANR	3605103	OrExpression	mv [ 0 ] != mv [ dm ] || mv [ dm * mv_stride ] != mv [ dm * ( mv_stride + 1 ) ]		3602111	0		||			
ANR	3605104	EqualityExpression	mv [ 0 ] != mv [ dm ]		3602111	0		!=			
ANR	3605105	ArrayIndexing	mv [ 0 ]		3602111	0					
ANR	3605106	Identifier	mv		3602111	0					
ANR	3605107	PrimaryExpression	0		3602111	1					
ANR	3605108	ArrayIndexing	mv [ dm ]		3602111	1					
ANR	3605109	Identifier	mv		3602111	0					
ANR	3605110	Identifier	dm		3602111	1					
ANR	3605111	EqualityExpression	mv [ dm * mv_stride ] != mv [ dm * ( mv_stride + 1 ) ]		3602111	1		!=			
ANR	3605112	ArrayIndexing	mv [ dm * mv_stride ]		3602111	0					
ANR	3605113	Identifier	mv		3602111	0					
ANR	3605114	MultiplicativeExpression	dm * mv_stride		3602111	1		*			
ANR	3605115	Identifier	dm		3602111	0					
ANR	3605116	Identifier	mv_stride		3602111	1					
ANR	3605117	ArrayIndexing	mv [ dm * ( mv_stride + 1 ) ]		3602111	1					
ANR	3605118	Identifier	mv		3602111	0					
ANR	3605119	MultiplicativeExpression	dm * ( mv_stride + 1 )		3602111	1		*			
ANR	3605120	Identifier	dm		3602111	0					
ANR	3605121	AdditiveExpression	mv_stride + 1		3602111	1		+			
ANR	3605122	Identifier	mv_stride		3602111	0					
ANR	3605123	PrimaryExpression	1		3602111	1					
ANR	3605124	ForStatement	for ( y = 0 ; y < 8 ; y ++ )		3602111	1					
ANR	3605125	ForInit	y = 0 ;	721:37:18163:18168	3602111	0	True				
ANR	3605126	AssignmentExpression	y = 0		3602111	0		=			
ANR	3605127	Identifier	y		3602111	0					
ANR	3605128	PrimaryExpression	0		3602111	1					
ANR	3605129	Condition	y < 8	721:44:18170:18174	3602111	1	True				
ANR	3605130	RelationalExpression	y < 8		3602111	0		<			
ANR	3605131	Identifier	y		3602111	0					
ANR	3605132	PrimaryExpression	8		3602111	1					
ANR	3605133	PostIncDecOperationExpression	y ++	721:51:18177:18179	3602111	2	True				
ANR	3605134	Identifier	y		3602111	0					
ANR	3605135	IncDec	++		3602111	1					
ANR	3605136	ExpressionStatement	pict -> data [ 0 ] [ sx + 4 + ( sy + y ) * pict -> linesize [ 0 ] ] ^= 0x80	723:36:18219:18279	3602111	3	True				
ANR	3605137	AssignmentExpression	pict -> data [ 0 ] [ sx + 4 + ( sy + y ) * pict -> linesize [ 0 ] ] ^= 0x80		3602111	0		^=			
ANR	3605138	ArrayIndexing	pict -> data [ 0 ] [ sx + 4 + ( sy + y ) * pict -> linesize [ 0 ] ]		3602111	0					
ANR	3605139	ArrayIndexing	pict -> data [ 0 ]		3602111	0					
ANR	3605140	PtrMemberAccess	pict -> data		3602111	0					
ANR	3605141	Identifier	pict		3602111	0					
ANR	3605142	Identifier	data		3602111	1					
ANR	3605143	PrimaryExpression	0		3602111	1					
ANR	3605144	AdditiveExpression	sx + 4 + ( sy + y ) * pict -> linesize [ 0 ]		3602111	1		+			
ANR	3605145	Identifier	sx		3602111	0					
ANR	3605146	AdditiveExpression	4 + ( sy + y ) * pict -> linesize [ 0 ]		3602111	1		+			
ANR	3605147	PrimaryExpression	4		3602111	0					
ANR	3605148	MultiplicativeExpression	( sy + y ) * pict -> linesize [ 0 ]		3602111	1		*			
ANR	3605149	AdditiveExpression	sy + y		3602111	0		+			
ANR	3605150	Identifier	sy		3602111	0					
ANR	3605151	Identifier	y		3602111	1					
ANR	3605152	ArrayIndexing	pict -> linesize [ 0 ]		3602111	1					
ANR	3605153	PtrMemberAccess	pict -> linesize		3602111	0					
ANR	3605154	Identifier	pict		3602111	0					
ANR	3605155	Identifier	linesize		3602111	1					
ANR	3605156	PrimaryExpression	0		3602111	1					
ANR	3605157	PrimaryExpression	0x80		3602111	1					
ANR	3605158	IfStatement	if ( mv [ 0 ] != mv [ dm * mv_stride ] || mv [ dm ] != mv [ dm * ( mv_stride + 1 ) ] )		3602111	5					
ANR	3605159	Condition	mv [ 0 ] != mv [ dm * mv_stride ] || mv [ dm ] != mv [ dm * ( mv_stride + 1 ) ]	725:32:18314:18378	3602111	0	True				
ANR	3605160	OrExpression	mv [ 0 ] != mv [ dm * mv_stride ] || mv [ dm ] != mv [ dm * ( mv_stride + 1 ) ]		3602111	0		||			
ANR	3605161	EqualityExpression	mv [ 0 ] != mv [ dm * mv_stride ]		3602111	0		!=			
ANR	3605162	ArrayIndexing	mv [ 0 ]		3602111	0					
ANR	3605163	Identifier	mv		3602111	0					
ANR	3605164	PrimaryExpression	0		3602111	1					
ANR	3605165	ArrayIndexing	mv [ dm * mv_stride ]		3602111	1					
ANR	3605166	Identifier	mv		3602111	0					
ANR	3605167	MultiplicativeExpression	dm * mv_stride		3602111	1		*			
ANR	3605168	Identifier	dm		3602111	0					
ANR	3605169	Identifier	mv_stride		3602111	1					
ANR	3605170	EqualityExpression	mv [ dm ] != mv [ dm * ( mv_stride + 1 ) ]		3602111	1		!=			
ANR	3605171	ArrayIndexing	mv [ dm ]		3602111	0					
ANR	3605172	Identifier	mv		3602111	0					
ANR	3605173	Identifier	dm		3602111	1					
ANR	3605174	ArrayIndexing	mv [ dm * ( mv_stride + 1 ) ]		3602111	1					
ANR	3605175	Identifier	mv		3602111	0					
ANR	3605176	MultiplicativeExpression	dm * ( mv_stride + 1 )		3602111	1		*			
ANR	3605177	Identifier	dm		3602111	0					
ANR	3605178	AdditiveExpression	mv_stride + 1		3602111	1		+			
ANR	3605179	Identifier	mv_stride		3602111	0					
ANR	3605180	PrimaryExpression	1		3602111	1					
ANR	3605181	Statement	*	727:32:18414:18414	3602111	1	True				
ANR	3605182	Statement	(	727:33:18415:18415	3602111	6	True				
ANR	3605183	Statement	uint64_t	727:34:18416:18423	3602111	7	True				
ANR	3605184	Statement	*	727:43:18425:18425	3602111	8	True				
ANR	3605185	Statement	)	727:44:18426:18426	3602111	9	True				
ANR	3605186	Statement	(	727:45:18427:18427	3602111	10	True				
ANR	3605187	Statement	pict	727:46:18428:18431	3602111	11	True				
ANR	3605188	Statement	->	727:50:18432:18433	3602111	12	True				
ANR	3605189	Statement	data	727:52:18434:18437	3602111	13	True				
ANR	3605190	Statement	[	727:56:18438:18438	3602111	14	True				
ANR	3605191	Statement	0	727:57:18439:18439	3602111	15	True				
ANR	3605192	Statement	]	727:58:18440:18440	3602111	16	True				
ANR	3605193	Statement	+	727:60:18442:18442	3602111	17	True				
ANR	3605194	Statement	sx	727:62:18444:18445	3602111	18	True				
ANR	3605195	Statement	+	727:65:18447:18447	3602111	19	True				
ANR	3605196	Statement	(	727:67:18449:18449	3602111	20	True				
ANR	3605197	Statement	sy	727:68:18450:18451	3602111	21	True				
ANR	3605198	Statement	+	727:71:18453:18453	3602111	22	True				
ANR	3605199	Statement	4	727:73:18455:18455	3602111	23	True				
ANR	3605200	Statement	)	727:74:18456:18456	3602111	24	True				
ANR	3605201	Statement	*	727:76:18458:18458	3602111	25	True				
ANR	3605202	Statement	pict	729:46:18507:18510	3602111	26	True				
ANR	3605203	Statement	->	729:50:18511:18512	3602111	27	True				
ANR	3605204	Statement	linesize	729:52:18513:18520	3602111	28	True				
ANR	3605205	Statement	[	729:60:18521:18521	3602111	29	True				
ANR	3605206	Statement	0	729:61:18522:18522	3602111	30	True				
ANR	3605207	Statement	]	729:62:18523:18523	3602111	31	True				
ANR	3605208	Statement	)	729:63:18524:18524	3602111	32	True				
ANR	3605209	Statement	^=	729:65:18526:18527	3602111	33	True				
ANR	3605210	Statement	0x8080808080808080UL	729:68:18529:18548	3602111	34	True				
ANR	3605211	ExpressionStatement	L	729:88:18549:18550	3602111	35	True				
ANR	3605212	Identifier	L		3602111	0					
ANR	3605213	IfStatement	if ( IS_INTERLACED ( mb_type ) && avctx -> codec -> id == AV_CODEC_ID_H264 )		3602111	26					
ANR	3605214	Condition	IS_INTERLACED ( mb_type ) && avctx -> codec -> id == AV_CODEC_ID_H264	737:24:18629:18715	3602111	0	True				
ANR	3605215	AndExpression	IS_INTERLACED ( mb_type ) && avctx -> codec -> id == AV_CODEC_ID_H264		3602111	0		&&			
ANR	3605216	CallExpression	IS_INTERLACED ( mb_type )		3602111	0					
ANR	3605217	Callee	IS_INTERLACED		3602111	0					
ANR	3605218	Identifier	IS_INTERLACED		3602111	0					
ANR	3605219	ArgumentList	mb_type		3602111	1					
ANR	3605220	Argument	mb_type		3602111	0					
ANR	3605221	Identifier	mb_type		3602111	0					
ANR	3605222	EqualityExpression	avctx -> codec -> id == AV_CODEC_ID_H264		3602111	1		==			
ANR	3605223	PtrMemberAccess	avctx -> codec -> id		3602111	0					
ANR	3605224	PtrMemberAccess	avctx -> codec		3602111	0					
ANR	3605225	Identifier	avctx		3602111	0					
ANR	3605226	Identifier	codec		3602111	1					
ANR	3605227	Identifier	id		3602111	1					
ANR	3605228	Identifier	AV_CODEC_ID_H264		3602111	1					
ANR	3605229	CompoundStatement		731:62:18396:18396	3602111	1					
ANR	3605230	IfStatement	if ( mbskip_table )		3602111	4					
ANR	3605231	Condition	mbskip_table	747:20:18815:18826	3602111	0	True				
ANR	3605232	Identifier	mbskip_table		3602111	0					
ANR	3605233	ExpressionStatement	mbskip_table [ mb_index ] = 0	749:20:18850:18876	3602111	1	True				
ANR	3605234	AssignmentExpression	mbskip_table [ mb_index ] = 0		3602111	0		=			
ANR	3605235	ArrayIndexing	mbskip_table [ mb_index ]		3602111	0					
ANR	3605236	Identifier	mbskip_table		3602111	0					
ANR	3605237	Identifier	mb_index		3602111	1					
ANR	3605238	PrimaryExpression	0		3602111	1					
ANR	3605239	ReturnType	void		3602111	1					
ANR	3605240	Identifier	ff_print_debug_info2		3602111	2					
ANR	3605241	ParameterList	"AVCodecContext * avctx , AVFrame * pict , uint8_t * mbskip_table , uint32_t * mbtype_table , int8_t * qscale_table , int16_t ( * motion_val [ 2 ] ) [ 2 ] , int * low_delay , int mb_width , int mb_height , int mb_stride , int quarter_sample"		3602111	3					
ANR	3605242	Parameter	AVCodecContext * avctx	1:26:26:46	3602111	0	True				
ANR	3605243	ParameterType	AVCodecContext *		3602111	0					
ANR	3605244	Identifier	avctx		3602111	1					
ANR	3605245	Parameter	AVFrame * pict	1:49:49:61	3602111	1	True				
ANR	3605246	ParameterType	AVFrame *		3602111	0					
ANR	3605247	Identifier	pict		3602111	1					
ANR	3605248	Parameter	uint8_t * mbskip_table	1:64:64:84	3602111	2	True				
ANR	3605249	ParameterType	uint8_t *		3602111	0					
ANR	3605250	Identifier	mbskip_table		3602111	1					
ANR	3605251	Parameter	uint32_t * mbtype_table	3:25:113:134	3602111	3	True				
ANR	3605252	ParameterType	uint32_t *		3602111	0					
ANR	3605253	Identifier	mbtype_table		3602111	1					
ANR	3605254	Parameter	int8_t * qscale_table	3:49:137:156	3602111	4	True				
ANR	3605255	ParameterType	int8_t *		3602111	0					
ANR	3605256	Identifier	qscale_table		3602111	1					
ANR	3605257	Parameter	int16_t ( * motion_val [ 2 ] ) [ 2 ]	3:71:159:185	3602111	5	True				
ANR	3605258	ParameterType	([ 2 ] int16_t) * [ 2 ]		3602111	0					
ANR	3605259	Identifier	motion_val		3602111	1					
ANR	3605260	Parameter	int * low_delay	5:25:214:227	3602111	6	True				
ANR	3605261	ParameterType	int *		3602111	0					
ANR	3605262	Identifier	low_delay		3602111	1					
ANR	3605263	Parameter	int mb_width	7:25:256:267	3602111	7	True				
ANR	3605264	ParameterType	int		3602111	0					
ANR	3605265	Identifier	mb_width		3602111	1					
ANR	3605266	Parameter	int mb_height	7:39:270:282	3602111	8	True				
ANR	3605267	ParameterType	int		3602111	0					
ANR	3605268	Identifier	mb_height		3602111	1					
ANR	3605269	Parameter	int mb_stride	7:54:285:297	3602111	9	True				
ANR	3605270	ParameterType	int		3602111	0					
ANR	3605271	Identifier	mb_stride		3602111	1					
ANR	3605272	Parameter	int quarter_sample	7:69:300:317	3602111	10	True				
ANR	3605273	ParameterType	int		3602111	0					
ANR	3605274	Identifier	quarter_sample		3602111	1					
ANR	3605275	CFGEntryNode	ENTRY		3602111		True				
ANR	3605276	CFGExitNode	EXIT		3602111		True				
ANR	3605277	Symbol	xy		3602111						
ANR	3605278	Symbol	* qscale_table		3602111						
ANR	3605279	Symbol	* pict -> linesize		3602111						
ANR	3605280	Symbol	* mb_stride		3602111						
ANR	3605281	Symbol	* x		3602111						
ANR	3605282	Symbol	* y		3602111						
ANR	3605283	Symbol	* motion_val		3602111						
ANR	3605284	Symbol	shift		3602111						
ANR	3605285	Symbol	* sx		3602111						
ANR	3605286	Symbol	mbtype_table		3602111						
ANR	3605287	Symbol	type		3602111						
ANR	3605288	Symbol	theta		3602111						
ANR	3605289	Symbol	* sy		3602111						
ANR	3605290	Symbol	motion_val		3602111						
ANR	3605291	Symbol	* * direction		3602111						
ANR	3605292	Symbol	* sd		3602111						
ANR	3605293	Symbol	pict -> linesize		3602111						
ANR	3605294	Symbol	mb_type		3602111						
ANR	3605295	Symbol	FF_DEBUG_QP		3602111						
ANR	3605296	Symbol	* block_height		3602111						
ANR	3605297	Symbol	mv_stride		3602111						
ANR	3605298	Symbol	AV_LOG_DEBUG		3602111						
ANR	3605299	Symbol	pict		3602111						
ANR	3605300	Symbol	height		3602111						
ANR	3605301	Symbol	IS_16X8		3602111						
ANR	3605302	Symbol	IS_16X16		3602111						
ANR	3605303	Symbol	* * * direction		3602111						
ANR	3605304	Symbol	avctx -> codec		3602111						
ANR	3605305	Symbol	* mb_y		3602111						
ANR	3605306	Symbol	* mb_x		3602111						
ANR	3605307	Symbol	* * avctx		3602111						
ANR	3605308	Symbol	* dm		3602111						
ANR	3605309	Symbol	quarter_sample		3602111						
ANR	3605310	Symbol	FF_DEBUG_VIS_MB_TYPE		3602111						
ANR	3605311	Symbol	v_chroma_shift		3602111						
ANR	3605312	Symbol	avctx -> pix_fmt		3602111						
ANR	3605313	Symbol	mb_width		3602111						
ANR	3605314	Symbol	avctx -> codec_id		3602111						
ANR	3605315	Symbol	avctx -> width		3602111						
ANR	3605316	Symbol	AV_CODEC_ID_SVQ3		3602111						
ANR	3605317	Symbol	AV_FRAME_DATA_MOTION_VECTORS		3602111						
ANR	3605318	Symbol	IS_INTERLACED		3602111						
ANR	3605319	Symbol	* mv		3602111						
ANR	3605320	Symbol	IS_ACPRED		3602111						
ANR	3605321	Symbol	* * pict		3602111						
ANR	3605322	Symbol	sd		3602111						
ANR	3605323	Symbol	mb_stride		3602111						
ANR	3605324	Symbol	* direction		3602111						
ANR	3605325	Symbol	FF_DEBUG_MB_TYPE		3602111						
ANR	3605326	Symbol	avctx -> frame_number		3602111						
ANR	3605327	Symbol	avctx		3602111						
ANR	3605328	Symbol	* * * motion_val		3602111						
ANR	3605329	Symbol	* mv_stride		3602111						
ANR	3605330	Symbol	c		3602111						
ANR	3605331	Symbol	sx		3602111						
ANR	3605332	Symbol	* low_delay		3602111						
ANR	3605333	Symbol	FF_DEBUG_VIS_MV_B_FOR		3602111						
ANR	3605334	Symbol	sy		3602111						
ANR	3605335	Symbol	i		3602111						
ANR	3605336	Symbol	IS_PCM		3602111						
ANR	3605337	Symbol	* mb_index		3602111						
ANR	3605338	Symbol	* * xy		3602111						
ANR	3605339	Symbol	avctx -> codec -> id		3602111						
ANR	3605340	Symbol	r		3602111						
ANR	3605341	Symbol	mbcount		3602111						
ANR	3605342	Symbol	qscale_table		3602111						
ANR	3605343	Symbol	& v_chroma_shift		3602111						
ANR	3605344	Symbol	u		3602111						
ANR	3605345	Symbol	v		3602111						
ANR	3605346	Symbol	x		3602111						
ANR	3605347	Symbol	width		3602111						
ANR	3605348	Symbol	y		3602111						
ANR	3605349	Symbol	av_malloc_array		3602111						
ANR	3605350	Symbol	avctx -> flags2		3602111						
ANR	3605351	Symbol	mb_y		3602111						
ANR	3605352	Symbol	av_frame_new_side_data		3602111						
ANR	3605353	Symbol	mb_x		3602111						
ANR	3605354	Symbol	h_chroma_shift		3602111						
ANR	3605355	Symbol	cos		3602111						
ANR	3605356	Symbol	* * motion_val		3602111						
ANR	3605357	Symbol	pict -> data		3602111						
ANR	3605358	Symbol	dm		3602111						
ANR	3605359	Symbol	low_delay		3602111						
ANR	3605360	Symbol	block_height		3602111						
ANR	3605361	Symbol	* mbtype_table		3602111						
ANR	3605362	Symbol	mv_sample_log2		3602111						
ANR	3605363	Symbol	avctx -> debug_mv		3602111						
ANR	3605364	Symbol	* avctx -> codec		3602111						
ANR	3605365	Symbol	pict -> opaque		3602111						
ANR	3605366	Symbol	NULL		3602111						
ANR	3605367	Symbol	* xy		3602111						
ANR	3605368	Symbol	IS_8X16		3602111						
ANR	3605369	Symbol	FF_DEBUG_VIS_MV_P_FOR		3602111						
ANR	3605370	Symbol	IS_INTRA4x4		3602111						
ANR	3605371	Symbol	FF_DEBUG_SKIP		3602111						
ANR	3605372	Symbol	count		3602111						
ANR	3605373	Symbol	mv		3602111						
ANR	3605374	Symbol	mx		3602111						
ANR	3605375	Symbol	* ( uint64_t * ) ( pict -> data [ 2 ] + 8 * mb_x + ( block_height * mb_y + y ) * pict -> linesize [ 2 ] )		3602111						
ANR	3605376	Symbol	my		3602111						
ANR	3605377	Symbol	& h_chroma_shift		3602111						
ANR	3605378	Symbol	FF_DEBUG_VIS_MV_B_BACK		3602111						
ANR	3605379	Symbol	* avctx		3602111						
ANR	3605380	Symbol	mb_index		3602111						
ANR	3605381	Symbol	av_get_picture_type_char		3602111						
ANR	3605382	Symbol	IS_DIRECT		3602111						
ANR	3605383	Symbol	* * * pict		3602111						
ANR	3605384	Symbol	AV_CODEC_ID_H264		3602111						
ANR	3605385	Symbol	* pict		3602111						
ANR	3605386	Symbol	AV_PICTURE_TYPE_P		3602111						
ANR	3605387	Symbol	add_mb		3602111						
ANR	3605388	Symbol	* * pict -> data		3602111						
ANR	3605389	Symbol	IS_GMC		3602111						
ANR	3605390	Symbol	IS_INTRA		3602111						
ANR	3605391	Symbol	IS_8X8		3602111						
ANR	3605392	Symbol	* ( uint64_t * ) ( pict -> data [ 1 ] + 8 * mb_x + ( block_height * mb_y + y ) * pict -> linesize [ 1 ] )		3602111						
ANR	3605393	Symbol	avctx -> debug		3602111						
ANR	3605394	Symbol	avctx -> height		3602111						
ANR	3605395	Symbol	* mbskip_table		3602111						
ANR	3605396	Symbol	pict -> pict_type		3602111						
ANR	3605397	Symbol	& mvs		3602111						
ANR	3605398	Symbol	sin		3602111						
ANR	3605399	Symbol	AV_PICTURE_TYPE_B		3602111						
ANR	3605400	Symbol	IS_SKIP		3602111						
ANR	3605401	Symbol	direction		3602111						
ANR	3605402	Symbol	* * pict -> linesize		3602111						
ANR	3605403	Symbol	FF_DEBUG_VIS_QP		3602111						
ANR	3605404	Symbol	mbskip_table		3602111						
ANR	3605405	Symbol	mvs		3602111						
ANR	3605406	Symbol	mb_height		3602111						
ANR	3605407	Symbol	ptr		3602111						
ANR	3605408	Symbol	AV_CODEC_FLAG2_EXPORT_MVS		3602111						
ANR	3605409	Symbol	IS_INTRA16x16		3602111						
ANR	3605410	Symbol	* pict -> data		3602111						
ANR	3605411	Symbol	USES_LIST		3602111						
ANR	3605412	Symbol	sd -> data		3602111						
