command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5282979	File	/home/p4ultr4n/workplace/ReVeal/raw_code/locate_option_0.c								
ANR	5282980	Function	locate_option	1:0:0:669							
ANR	5282981	FunctionDef	"locate_option (int argc , char * * argv , const OptionDef * options , const char * optname)"		5282980	0					
ANR	5282982	CompoundStatement		5:0:108:669	5282980	0					
ANR	5282983	IdentifierDeclStatement	const OptionDef * po ;	7:4:115:134	5282980	0	True				
ANR	5282984	IdentifierDecl	* po		5282980	0					
ANR	5282985	IdentifierDeclType	const OptionDef *		5282980	0					
ANR	5282986	Identifier	po		5282980	1					
ANR	5282987	IdentifierDeclStatement	int i ;	9:4:141:146	5282980	1	True				
ANR	5282988	IdentifierDecl	i		5282980	0					
ANR	5282989	IdentifierDeclType	int		5282980	0					
ANR	5282990	Identifier	i		5282980	1					
ANR	5282991	ForStatement	for ( i = 1 ; i < argc ; i ++ )		5282980	2					
ANR	5282992	ForInit	i = 1 ;	13:9:160:165	5282980	0	True				
ANR	5282993	AssignmentExpression	i = 1		5282980	0		=			
ANR	5282994	Identifier	i		5282980	0					
ANR	5282995	PrimaryExpression	1		5282980	1					
ANR	5282996	Condition	i < argc	13:16:167:174	5282980	1	True				
ANR	5282997	RelationalExpression	i < argc		5282980	0		<			
ANR	5282998	Identifier	i		5282980	0					
ANR	5282999	Identifier	argc		5282980	1					
ANR	5283000	PostIncDecOperationExpression	i ++	13:26:177:179	5282980	2	True				
ANR	5283001	Identifier	i		5282980	0					
ANR	5283002	IncDec	++		5282980	1					
ANR	5283003	CompoundStatement		11:8:84:113	5282980	3					
ANR	5283004	IdentifierDeclStatement	const char * cur_opt = argv [ i ] ;	15:8:193:222	5282980	0	True				
ANR	5283005	IdentifierDecl	* cur_opt = argv [ i ]		5282980	0					
ANR	5283006	IdentifierDeclType	const char *		5282980	0					
ANR	5283007	Identifier	cur_opt		5282980	1					
ANR	5283008	AssignmentExpression	* cur_opt = argv [ i ]		5282980	2		=			
ANR	5283009	Identifier	cur_opt		5282980	0					
ANR	5283010	ArrayIndexing	argv [ i ]		5282980	1					
ANR	5283011	Identifier	argv		5282980	0					
ANR	5283012	Identifier	i		5282980	1					
ANR	5283013	IfStatement	if ( * cur_opt ++ != '-' )		5282980	1					
ANR	5283014	Condition	* cur_opt ++ != '-'	19:12:239:255	5282980	0	True				
ANR	5283015	EqualityExpression	* cur_opt ++ != '-'		5282980	0		!=			
ANR	5283016	UnaryOperationExpression	* cur_opt ++		5282980	0					
ANR	5283017	UnaryOperator	*		5282980	0					
ANR	5283018	PostIncDecOperationExpression	cur_opt ++		5282980	1					
ANR	5283019	Identifier	cur_opt		5282980	0					
ANR	5283020	IncDec	++		5282980	1					
ANR	5283021	PrimaryExpression	'-'		5282980	1					
ANR	5283022	ContinueStatement	continue ;	21:12:271:279	5282980	1	True				
ANR	5283023	ExpressionStatement	"po = find_option ( options , cur_opt )"	25:8:292:326	5282980	2	True				
ANR	5283024	AssignmentExpression	"po = find_option ( options , cur_opt )"		5282980	0		=			
ANR	5283025	Identifier	po		5282980	0					
ANR	5283026	CallExpression	"find_option ( options , cur_opt )"		5282980	1					
ANR	5283027	Callee	find_option		5282980	0					
ANR	5283028	Identifier	find_option		5282980	0					
ANR	5283029	ArgumentList	options		5282980	1					
ANR	5283030	Argument	options		5282980	0					
ANR	5283031	Identifier	options		5282980	0					
ANR	5283032	Argument	cur_opt		5282980	1					
ANR	5283033	Identifier	cur_opt		5282980	0					
ANR	5283034	IfStatement	if ( ! po -> name && cur_opt [ 0 ] == 'n' && cur_opt [ 1 ] == 'o' )		5282980	3					
ANR	5283035	Condition	! po -> name && cur_opt [ 0 ] == 'n' && cur_opt [ 1 ] == 'o'	27:12:341:391	5282980	0	True				
ANR	5283036	AndExpression	! po -> name && cur_opt [ 0 ] == 'n' && cur_opt [ 1 ] == 'o'		5282980	0		&&			
ANR	5283037	UnaryOperationExpression	! po -> name		5282980	0					
ANR	5283038	UnaryOperator	!		5282980	0					
ANR	5283039	PtrMemberAccess	po -> name		5282980	1					
ANR	5283040	Identifier	po		5282980	0					
ANR	5283041	Identifier	name		5282980	1					
ANR	5283042	AndExpression	cur_opt [ 0 ] == 'n' && cur_opt [ 1 ] == 'o'		5282980	1		&&			
ANR	5283043	EqualityExpression	cur_opt [ 0 ] == 'n'		5282980	0		==			
ANR	5283044	ArrayIndexing	cur_opt [ 0 ]		5282980	0					
ANR	5283045	Identifier	cur_opt		5282980	0					
ANR	5283046	PrimaryExpression	0		5282980	1					
ANR	5283047	PrimaryExpression	'n'		5282980	1					
ANR	5283048	EqualityExpression	cur_opt [ 1 ] == 'o'		5282980	1		==			
ANR	5283049	ArrayIndexing	cur_opt [ 1 ]		5282980	0					
ANR	5283050	Identifier	cur_opt		5282980	0					
ANR	5283051	PrimaryExpression	1		5282980	1					
ANR	5283052	PrimaryExpression	'o'		5282980	1					
ANR	5283053	ExpressionStatement	"po = find_option ( options , cur_opt + 2 )"	29:12:407:445	5282980	1	True				
ANR	5283054	AssignmentExpression	"po = find_option ( options , cur_opt + 2 )"		5282980	0		=			
ANR	5283055	Identifier	po		5282980	0					
ANR	5283056	CallExpression	"find_option ( options , cur_opt + 2 )"		5282980	1					
ANR	5283057	Callee	find_option		5282980	0					
ANR	5283058	Identifier	find_option		5282980	0					
ANR	5283059	ArgumentList	options		5282980	1					
ANR	5283060	Argument	options		5282980	0					
ANR	5283061	Identifier	options		5282980	0					
ANR	5283062	Argument	cur_opt + 2		5282980	1					
ANR	5283063	AdditiveExpression	cur_opt + 2		5282980	0		+			
ANR	5283064	Identifier	cur_opt		5282980	0					
ANR	5283065	PrimaryExpression	2		5282980	1					
ANR	5283066	IfStatement	"if ( ( ! po -> name && ! strcmp ( cur_opt , optname ) ) || ( po -> name && ! strcmp ( optname , po -> name ) ) )"		5282980	4					
ANR	5283067	Condition	"( ! po -> name && ! strcmp ( cur_opt , optname ) ) || ( po -> name && ! strcmp ( optname , po -> name ) )"	33:12:462:559	5282980	0	True				
ANR	5283068	OrExpression	"( ! po -> name && ! strcmp ( cur_opt , optname ) ) || ( po -> name && ! strcmp ( optname , po -> name ) )"		5282980	0		||			
ANR	5283069	AndExpression	"! po -> name && ! strcmp ( cur_opt , optname )"		5282980	0		&&			
ANR	5283070	UnaryOperationExpression	! po -> name		5282980	0					
ANR	5283071	UnaryOperator	!		5282980	0					
ANR	5283072	PtrMemberAccess	po -> name		5282980	1					
ANR	5283073	Identifier	po		5282980	0					
ANR	5283074	Identifier	name		5282980	1					
ANR	5283075	UnaryOperationExpression	"! strcmp ( cur_opt , optname )"		5282980	1					
ANR	5283076	UnaryOperator	!		5282980	0					
ANR	5283077	CallExpression	"strcmp ( cur_opt , optname )"		5282980	1					
ANR	5283078	Callee	strcmp		5282980	0					
ANR	5283079	Identifier	strcmp		5282980	0					
ANR	5283080	ArgumentList	cur_opt		5282980	1					
ANR	5283081	Argument	cur_opt		5282980	0					
ANR	5283082	Identifier	cur_opt		5282980	0					
ANR	5283083	Argument	optname		5282980	1					
ANR	5283084	Identifier	optname		5282980	0					
ANR	5283085	AndExpression	"po -> name && ! strcmp ( optname , po -> name )"		5282980	1		&&			
ANR	5283086	PtrMemberAccess	po -> name		5282980	0					
ANR	5283087	Identifier	po		5282980	0					
ANR	5283088	Identifier	name		5282980	1					
ANR	5283089	UnaryOperationExpression	"! strcmp ( optname , po -> name )"		5282980	1					
ANR	5283090	UnaryOperator	!		5282980	0					
ANR	5283091	CallExpression	"strcmp ( optname , po -> name )"		5282980	1					
ANR	5283092	Callee	strcmp		5282980	0					
ANR	5283093	Identifier	strcmp		5282980	0					
ANR	5283094	ArgumentList	optname		5282980	1					
ANR	5283095	Argument	optname		5282980	0					
ANR	5283096	Identifier	optname		5282980	0					
ANR	5283097	Argument	po -> name		5282980	1					
ANR	5283098	PtrMemberAccess	po -> name		5282980	0					
ANR	5283099	Identifier	po		5282980	0					
ANR	5283100	Identifier	name		5282980	1					
ANR	5283101	ReturnStatement	return i ;	37:12:575:583	5282980	1	True				
ANR	5283102	Identifier	i		5282980	0					
ANR	5283103	IfStatement	if ( ! po || po -> flags & HAS_ARG )		5282980	5					
ANR	5283104	Condition	! po || po -> flags & HAS_ARG	41:12:600:625	5282980	0	True				
ANR	5283105	OrExpression	! po || po -> flags & HAS_ARG		5282980	0		||			
ANR	5283106	UnaryOperationExpression	! po		5282980	0					
ANR	5283107	UnaryOperator	!		5282980	0					
ANR	5283108	Identifier	po		5282980	1					
ANR	5283109	BitAndExpression	po -> flags & HAS_ARG		5282980	1		&			
ANR	5283110	PtrMemberAccess	po -> flags		5282980	0					
ANR	5283111	Identifier	po		5282980	0					
ANR	5283112	Identifier	flags		5282980	1					
ANR	5283113	Identifier	HAS_ARG		5282980	1					
ANR	5283114	ExpressionStatement	i ++	43:12:641:644	5282980	1	True				
ANR	5283115	PostIncDecOperationExpression	i ++		5282980	0					
ANR	5283116	Identifier	i		5282980	0					
ANR	5283117	IncDec	++		5282980	1					
ANR	5283118	ReturnStatement	return 0 ;	47:4:658:666	5282980	3	True				
ANR	5283119	PrimaryExpression	0		5282980	0					
ANR	5283120	ReturnType	int		5282980	1					
ANR	5283121	Identifier	locate_option		5282980	2					
ANR	5283122	ParameterList	"int argc , char * * argv , const OptionDef * options , const char * optname"		5282980	3					
ANR	5283123	Parameter	int argc	1:18:18:25	5282980	0	True				
ANR	5283124	ParameterType	int		5282980	0					
ANR	5283125	Identifier	argc		5282980	1					
ANR	5283126	Parameter	char * * argv	1:28:28:38	5282980	1	True				
ANR	5283127	ParameterType	char * *		5282980	0					
ANR	5283128	Identifier	argv		5282980	1					
ANR	5283129	Parameter	const OptionDef * options	1:41:41:64	5282980	2	True				
ANR	5283130	ParameterType	const OptionDef *		5282980	0					
ANR	5283131	Identifier	options		5282980	1					
ANR	5283132	Parameter	const char * optname	3:18:86:104	5282980	3	True				
ANR	5283133	ParameterType	const char *		5282980	0					
ANR	5283134	Identifier	optname		5282980	1					
ANR	5283135	CFGEntryNode	ENTRY		5282980		True				
ANR	5283136	CFGExitNode	EXIT		5282980		True				
ANR	5283137	Symbol	argc		5282980						
ANR	5283138	Symbol	strcmp		5282980						
ANR	5283139	Symbol	* po		5282980						
ANR	5283140	Symbol	i		5282980						
ANR	5283141	Symbol	* argv		5282980						
ANR	5283142	Symbol	* cur_opt ++		5282980						
ANR	5283143	Symbol	argv		5282980						
ANR	5283144	Symbol	find_option		5282980						
ANR	5283145	Symbol	po -> flags		5282980						
ANR	5283146	Symbol	* i		5282980						
ANR	5283147	Symbol	optname		5282980						
ANR	5283148	Symbol	cur_opt		5282980						
ANR	5283149	Symbol	po -> name		5282980						
ANR	5283150	Symbol	options		5282980						
ANR	5283151	Symbol	HAS_ARG		5282980						
ANR	5283152	Symbol	* cur_opt		5282980						
ANR	5283153	Symbol	po		5282980						
