command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2568108	File	/home/p4ultr4n/workplace/ReVeal/raw_code/do_check_io_limits_0.c								
ANR	2568109	Function	do_check_io_limits	1:0:0:602							
ANR	2568110	FunctionDef	do_check_io_limits (BlockIOLimit * io_limits)		2568109	0					
ANR	2568111	CompoundStatement		3:0:57:602	2568109	0					
ANR	2568112	IdentifierDeclStatement	bool bps_flag ;	5:4:64:77	2568109	0	True				
ANR	2568113	IdentifierDecl	bps_flag		2568109	0					
ANR	2568114	IdentifierDeclType	bool		2568109	0					
ANR	2568115	Identifier	bps_flag		2568109	1					
ANR	2568116	IdentifierDeclStatement	bool iops_flag ;	7:4:84:98	2568109	1	True				
ANR	2568117	IdentifierDecl	iops_flag		2568109	0					
ANR	2568118	IdentifierDeclType	bool		2568109	0					
ANR	2568119	Identifier	iops_flag		2568109	1					
ANR	2568120	ExpressionStatement	assert ( io_limits )	11:4:107:124	2568109	2	True				
ANR	2568121	CallExpression	assert ( io_limits )		2568109	0					
ANR	2568122	Callee	assert		2568109	0					
ANR	2568123	Identifier	assert		2568109	0					
ANR	2568124	ArgumentList	io_limits		2568109	1					
ANR	2568125	Argument	io_limits		2568109	0					
ANR	2568126	Identifier	io_limits		2568109	0					
ANR	2568127	ExpressionStatement	bps_flag = ( io_limits -> bps [ BLOCK_IO_LIMIT_TOTAL ] != 0 ) && ( ( io_limits -> bps [ BLOCK_IO_LIMIT_READ ] != 0 ) || ( io_limits -> bps [ BLOCK_IO_LIMIT_WRITE ] != 0 ) )	15:4:133:319	2568109	3	True				
ANR	2568128	AssignmentExpression	bps_flag = ( io_limits -> bps [ BLOCK_IO_LIMIT_TOTAL ] != 0 ) && ( ( io_limits -> bps [ BLOCK_IO_LIMIT_READ ] != 0 ) || ( io_limits -> bps [ BLOCK_IO_LIMIT_WRITE ] != 0 ) )		2568109	0		=			
ANR	2568129	Identifier	bps_flag		2568109	0					
ANR	2568130	AndExpression	( io_limits -> bps [ BLOCK_IO_LIMIT_TOTAL ] != 0 ) && ( ( io_limits -> bps [ BLOCK_IO_LIMIT_READ ] != 0 ) || ( io_limits -> bps [ BLOCK_IO_LIMIT_WRITE ] != 0 ) )		2568109	1		&&			
ANR	2568131	EqualityExpression	io_limits -> bps [ BLOCK_IO_LIMIT_TOTAL ] != 0		2568109	0		!=			
ANR	2568132	ArrayIndexing	io_limits -> bps [ BLOCK_IO_LIMIT_TOTAL ]		2568109	0					
ANR	2568133	PtrMemberAccess	io_limits -> bps		2568109	0					
ANR	2568134	Identifier	io_limits		2568109	0					
ANR	2568135	Identifier	bps		2568109	1					
ANR	2568136	Identifier	BLOCK_IO_LIMIT_TOTAL		2568109	1					
ANR	2568137	PrimaryExpression	0		2568109	1					
ANR	2568138	OrExpression	( io_limits -> bps [ BLOCK_IO_LIMIT_READ ] != 0 ) || ( io_limits -> bps [ BLOCK_IO_LIMIT_WRITE ] != 0 )		2568109	1		||			
ANR	2568139	EqualityExpression	io_limits -> bps [ BLOCK_IO_LIMIT_READ ] != 0		2568109	0		!=			
ANR	2568140	ArrayIndexing	io_limits -> bps [ BLOCK_IO_LIMIT_READ ]		2568109	0					
ANR	2568141	PtrMemberAccess	io_limits -> bps		2568109	0					
ANR	2568142	Identifier	io_limits		2568109	0					
ANR	2568143	Identifier	bps		2568109	1					
ANR	2568144	Identifier	BLOCK_IO_LIMIT_READ		2568109	1					
ANR	2568145	PrimaryExpression	0		2568109	1					
ANR	2568146	EqualityExpression	io_limits -> bps [ BLOCK_IO_LIMIT_WRITE ] != 0		2568109	1		!=			
ANR	2568147	ArrayIndexing	io_limits -> bps [ BLOCK_IO_LIMIT_WRITE ]		2568109	0					
ANR	2568148	PtrMemberAccess	io_limits -> bps		2568109	0					
ANR	2568149	Identifier	io_limits		2568109	0					
ANR	2568150	Identifier	bps		2568109	1					
ANR	2568151	Identifier	BLOCK_IO_LIMIT_WRITE		2568109	1					
ANR	2568152	PrimaryExpression	0		2568109	1					
ANR	2568153	ExpressionStatement	iops_flag = ( io_limits -> iops [ BLOCK_IO_LIMIT_TOTAL ] != 0 ) && ( ( io_limits -> iops [ BLOCK_IO_LIMIT_READ ] != 0 ) || ( io_limits -> iops [ BLOCK_IO_LIMIT_WRITE ] != 0 ) )	21:4:326:515	2568109	4	True				
ANR	2568154	AssignmentExpression	iops_flag = ( io_limits -> iops [ BLOCK_IO_LIMIT_TOTAL ] != 0 ) && ( ( io_limits -> iops [ BLOCK_IO_LIMIT_READ ] != 0 ) || ( io_limits -> iops [ BLOCK_IO_LIMIT_WRITE ] != 0 ) )		2568109	0		=			
ANR	2568155	Identifier	iops_flag		2568109	0					
ANR	2568156	AndExpression	( io_limits -> iops [ BLOCK_IO_LIMIT_TOTAL ] != 0 ) && ( ( io_limits -> iops [ BLOCK_IO_LIMIT_READ ] != 0 ) || ( io_limits -> iops [ BLOCK_IO_LIMIT_WRITE ] != 0 ) )		2568109	1		&&			
ANR	2568157	EqualityExpression	io_limits -> iops [ BLOCK_IO_LIMIT_TOTAL ] != 0		2568109	0		!=			
ANR	2568158	ArrayIndexing	io_limits -> iops [ BLOCK_IO_LIMIT_TOTAL ]		2568109	0					
ANR	2568159	PtrMemberAccess	io_limits -> iops		2568109	0					
ANR	2568160	Identifier	io_limits		2568109	0					
ANR	2568161	Identifier	iops		2568109	1					
ANR	2568162	Identifier	BLOCK_IO_LIMIT_TOTAL		2568109	1					
ANR	2568163	PrimaryExpression	0		2568109	1					
ANR	2568164	OrExpression	( io_limits -> iops [ BLOCK_IO_LIMIT_READ ] != 0 ) || ( io_limits -> iops [ BLOCK_IO_LIMIT_WRITE ] != 0 )		2568109	1		||			
ANR	2568165	EqualityExpression	io_limits -> iops [ BLOCK_IO_LIMIT_READ ] != 0		2568109	0		!=			
ANR	2568166	ArrayIndexing	io_limits -> iops [ BLOCK_IO_LIMIT_READ ]		2568109	0					
ANR	2568167	PtrMemberAccess	io_limits -> iops		2568109	0					
ANR	2568168	Identifier	io_limits		2568109	0					
ANR	2568169	Identifier	iops		2568109	1					
ANR	2568170	Identifier	BLOCK_IO_LIMIT_READ		2568109	1					
ANR	2568171	PrimaryExpression	0		2568109	1					
ANR	2568172	EqualityExpression	io_limits -> iops [ BLOCK_IO_LIMIT_WRITE ] != 0		2568109	1		!=			
ANR	2568173	ArrayIndexing	io_limits -> iops [ BLOCK_IO_LIMIT_WRITE ]		2568109	0					
ANR	2568174	PtrMemberAccess	io_limits -> iops		2568109	0					
ANR	2568175	Identifier	io_limits		2568109	0					
ANR	2568176	Identifier	iops		2568109	1					
ANR	2568177	Identifier	BLOCK_IO_LIMIT_WRITE		2568109	1					
ANR	2568178	PrimaryExpression	0		2568109	1					
ANR	2568179	IfStatement	if ( bps_flag || iops_flag )		2568109	5					
ANR	2568180	Condition	bps_flag || iops_flag	27:8:526:546	2568109	0	True				
ANR	2568181	OrExpression	bps_flag || iops_flag		2568109	0		||			
ANR	2568182	Identifier	bps_flag		2568109	0					
ANR	2568183	Identifier	iops_flag		2568109	1					
ANR	2568184	CompoundStatement		25:31:491:491	2568109	1					
ANR	2568185	ReturnStatement	return false ;	29:8:560:572	2568109	0	True				
ANR	2568186	Identifier	false		2568109	0					
ANR	2568187	ReturnStatement	return true ;	35:4:588:599	2568109	6	True				
ANR	2568188	Identifier	true		2568109	0					
ANR	2568189	ReturnType	static bool		2568109	1					
ANR	2568190	Identifier	do_check_io_limits		2568109	2					
ANR	2568191	ParameterList	BlockIOLimit * io_limits		2568109	3					
ANR	2568192	Parameter	BlockIOLimit * io_limits	1:31:31:53	2568109	0	True				
ANR	2568193	ParameterType	BlockIOLimit *		2568109	0					
ANR	2568194	Identifier	io_limits		2568109	1					
ANR	2568195	CFGEntryNode	ENTRY		2568109		True				
ANR	2568196	CFGExitNode	EXIT		2568109		True				
ANR	2568197	Symbol	BLOCK_IO_LIMIT_TOTAL		2568109						
ANR	2568198	Symbol	BLOCK_IO_LIMIT_READ		2568109						
ANR	2568199	Symbol	* io_limits		2568109						
ANR	2568200	Symbol	* BLOCK_IO_LIMIT_TOTAL		2568109						
ANR	2568201	Symbol	false		2568109						
ANR	2568202	Symbol	BLOCK_IO_LIMIT_WRITE		2568109						
ANR	2568203	Symbol	io_limits -> iops		2568109						
ANR	2568204	Symbol	bps_flag		2568109						
ANR	2568205	Symbol	* * io_limits		2568109						
ANR	2568206	Symbol	iops_flag		2568109						
ANR	2568207	Symbol	* io_limits -> iops		2568109						
ANR	2568208	Symbol	true		2568109						
ANR	2568209	Symbol	io_limits -> bps		2568109						
ANR	2568210	Symbol	* BLOCK_IO_LIMIT_WRITE		2568109						
ANR	2568211	Symbol	io_limits		2568109						
ANR	2568212	Symbol	* io_limits -> bps		2568109						
ANR	2568213	Symbol	* BLOCK_IO_LIMIT_READ		2568109						
