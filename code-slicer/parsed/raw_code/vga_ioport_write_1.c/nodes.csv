command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8998448	File	/home/p4ultr4n/workplace/ReVeal/raw_code/vga_ioport_write_1.c								
ANR	8998449	Function	vga_ioport_write	1:0:0:3941							
ANR	8998450	FunctionDef	"vga_ioport_write (void * opaque , uint32_t addr , uint32_t val)"		8998449	0					
ANR	8998451	CompoundStatement		3:0:66:3941	8998449	0					
ANR	8998452	IdentifierDeclStatement	VGACommonState * s = opaque ;	5:4:73:99	8998449	0	True				
ANR	8998453	IdentifierDecl	* s = opaque		8998449	0					
ANR	8998454	IdentifierDeclType	VGACommonState *		8998449	0					
ANR	8998455	Identifier	s		8998449	1					
ANR	8998456	AssignmentExpression	* s = opaque		8998449	2		=			
ANR	8998457	Identifier	opaque		8998449	0					
ANR	8998458	Identifier	opaque		8998449	1					
ANR	8998459	IdentifierDeclStatement	int index ;	7:4:106:115	8998449	1	True				
ANR	8998460	IdentifierDecl	index		8998449	0					
ANR	8998461	IdentifierDeclType	int		8998449	0					
ANR	8998462	Identifier	index		8998449	1					
ANR	8998463	IfStatement	"if ( vga_ioport_invalid ( s , addr ) )"		8998449	2					
ANR	8998464	Condition	"vga_ioport_invalid ( s , addr )"	13:8:198:224	8998449	0	True				
ANR	8998465	CallExpression	"vga_ioport_invalid ( s , addr )"		8998449	0					
ANR	8998466	Callee	vga_ioport_invalid		8998449	0					
ANR	8998467	Identifier	vga_ioport_invalid		8998449	0					
ANR	8998468	ArgumentList	s		8998449	1					
ANR	8998469	Argument	s		8998449	0					
ANR	8998470	Identifier	s		8998449	0					
ANR	8998471	Argument	addr		8998449	1					
ANR	8998472	Identifier	addr		8998449	0					
ANR	8998473	CompoundStatement		11:37:160:160	8998449	1					
ANR	8998474	ReturnStatement	return ;	15:8:238:244	8998449	0	True				
ANR	8998475	ExpressionStatement	"printf ( ""VGA: write addr=0x%04x data=0x%02x\\n"" , addr , val )"	21:4:276:333	8998449	3	True				
ANR	8998476	CallExpression	"printf ( ""VGA: write addr=0x%04x data=0x%02x\\n"" , addr , val )"		8998449	0					
ANR	8998477	Callee	printf		8998449	0					
ANR	8998478	Identifier	printf		8998449	0					
ANR	8998479	ArgumentList	"""VGA: write addr=0x%04x data=0x%02x\\n"""		8998449	1					
ANR	8998480	Argument	"""VGA: write addr=0x%04x data=0x%02x\\n"""		8998449	0					
ANR	8998481	PrimaryExpression	"""VGA: write addr=0x%04x data=0x%02x\\n"""		8998449	0					
ANR	8998482	Argument	addr		8998449	1					
ANR	8998483	Identifier	addr		8998449	0					
ANR	8998484	Argument	val		8998449	2					
ANR	8998485	Identifier	val		8998449	0					
ANR	8998486	SwitchStatement	switch ( addr )		8998449	4					
ANR	8998487	Condition	addr	27:11:357:360	8998449	0	True				
ANR	8998488	Identifier	addr		8998449	0					
ANR	8998489	CompoundStatement		25:17:296:296	8998449	1					
ANR	8998490	Label	case VGA_ATT_W :	29:4:370:384	8998449	0	True				
ANR	8998491	Identifier	VGA_ATT_W		8998449	0					
ANR	8998492	IfStatement	if ( s -> ar_flip_flop == 0 )		8998449	1					
ANR	8998493	Condition	s -> ar_flip_flop == 0	31:12:399:418	8998449	0	True				
ANR	8998494	EqualityExpression	s -> ar_flip_flop == 0		8998449	0		==			
ANR	8998495	PtrMemberAccess	s -> ar_flip_flop		8998449	0					
ANR	8998496	Identifier	s		8998449	0					
ANR	8998497	Identifier	ar_flip_flop		8998449	1					
ANR	8998498	PrimaryExpression	0		8998449	1					
ANR	8998499	CompoundStatement		29:34:354:354	8998449	1					
ANR	8998500	ExpressionStatement	val &= 0x3f	33:12:436:447	8998449	0	True				
ANR	8998501	AssignmentExpression	val &= 0x3f		8998449	0		&=			
ANR	8998502	Identifier	val		8998449	0					
ANR	8998503	PrimaryExpression	0x3f		8998449	1					
ANR	8998504	ExpressionStatement	s -> ar_index = val	35:12:462:479	8998449	1	True				
ANR	8998505	AssignmentExpression	s -> ar_index = val		8998449	0		=			
ANR	8998506	PtrMemberAccess	s -> ar_index		8998449	0					
ANR	8998507	Identifier	s		8998449	0					
ANR	8998508	Identifier	ar_index		8998449	1					
ANR	8998509	Identifier	val		8998449	1					
ANR	8998510	ElseStatement	else		8998449	0					
ANR	8998511	CompoundStatement		35:15:430:430	8998449	0					
ANR	8998512	ExpressionStatement	index = s -> ar_index & 0x1f	39:12:512:538	8998449	0	True				
ANR	8998513	AssignmentExpression	index = s -> ar_index & 0x1f		8998449	0		=			
ANR	8998514	Identifier	index		8998449	0					
ANR	8998515	BitAndExpression	s -> ar_index & 0x1f		8998449	1		&			
ANR	8998516	PtrMemberAccess	s -> ar_index		8998449	0					
ANR	8998517	Identifier	s		8998449	0					
ANR	8998518	Identifier	ar_index		8998449	1					
ANR	8998519	PrimaryExpression	0x1f		8998449	1					
ANR	8998520	SwitchStatement	switch ( index )		8998449	1					
ANR	8998521	Condition	index	41:19:560:564	8998449	0	True				
ANR	8998522	Identifier	index		8998449	0					
ANR	8998523	CompoundStatement		39:26:500:500	8998449	1					
ANR	8998524	Statement	case	43:12:582:585	8998449	0	True				
ANR	8998525	Statement	VGA_ATC_PALETTE0	43:17:587:602	8998449	1	True				
ANR	8998526	Statement	...	43:34:604:606	8998449	2	True				
ANR	8998527	Label	VGA_ATC_PALETTEF :	43:38:608:624	8998449	3	True				
ANR	8998528	Identifier	VGA_ATC_PALETTEF		8998449	0					
ANR	8998529	ExpressionStatement	s -> ar [ index ] = val & 0x3f	45:16:643:668	8998449	4	True				
ANR	8998530	AssignmentExpression	s -> ar [ index ] = val & 0x3f		8998449	0		=			
ANR	8998531	ArrayIndexing	s -> ar [ index ]		8998449	0					
ANR	8998532	PtrMemberAccess	s -> ar		8998449	0					
ANR	8998533	Identifier	s		8998449	0					
ANR	8998534	Identifier	ar		8998449	1					
ANR	8998535	Identifier	index		8998449	1					
ANR	8998536	BitAndExpression	val & 0x3f		8998449	1		&			
ANR	8998537	Identifier	val		8998449	0					
ANR	8998538	PrimaryExpression	0x3f		8998449	1					
ANR	8998539	BreakStatement	break ;	47:16:687:692	8998449	5	True				
ANR	8998540	Label	case VGA_ATC_MODE :	49:12:707:724	8998449	6	True				
ANR	8998541	Identifier	VGA_ATC_MODE		8998449	0					
ANR	8998542	ExpressionStatement	s -> ar [ index ] = val & ~0x10	51:16:743:769	8998449	7	True				
ANR	8998543	AssignmentExpression	s -> ar [ index ] = val & ~0x10		8998449	0		=			
ANR	8998544	ArrayIndexing	s -> ar [ index ]		8998449	0					
ANR	8998545	PtrMemberAccess	s -> ar		8998449	0					
ANR	8998546	Identifier	s		8998449	0					
ANR	8998547	Identifier	ar		8998449	1					
ANR	8998548	Identifier	index		8998449	1					
ANR	8998549	BitAndExpression	val & ~0x10		8998449	1		&			
ANR	8998550	Identifier	val		8998449	0					
ANR	8998551	Identifier	~0x10		8998449	1					
ANR	8998552	BreakStatement	break ;	53:16:788:793	8998449	8	True				
ANR	8998553	Label	case VGA_ATC_OVERSCAN :	55:12:808:829	8998449	9	True				
ANR	8998554	Identifier	VGA_ATC_OVERSCAN		8998449	0					
ANR	8998555	ExpressionStatement	s -> ar [ index ] = val	57:16:848:866	8998449	10	True				
ANR	8998556	AssignmentExpression	s -> ar [ index ] = val		8998449	0		=			
ANR	8998557	ArrayIndexing	s -> ar [ index ]		8998449	0					
ANR	8998558	PtrMemberAccess	s -> ar		8998449	0					
ANR	8998559	Identifier	s		8998449	0					
ANR	8998560	Identifier	ar		8998449	1					
ANR	8998561	Identifier	index		8998449	1					
ANR	8998562	Identifier	val		8998449	1					
ANR	8998563	BreakStatement	break ;	59:16:885:890	8998449	11	True				
ANR	8998564	Label	case VGA_ATC_PLANE_ENABLE :	61:12:905:930	8998449	12	True				
ANR	8998565	Identifier	VGA_ATC_PLANE_ENABLE		8998449	0					
ANR	8998566	ExpressionStatement	s -> ar [ index ] = val & ~0xc0	63:16:949:975	8998449	13	True				
ANR	8998567	AssignmentExpression	s -> ar [ index ] = val & ~0xc0		8998449	0		=			
ANR	8998568	ArrayIndexing	s -> ar [ index ]		8998449	0					
ANR	8998569	PtrMemberAccess	s -> ar		8998449	0					
ANR	8998570	Identifier	s		8998449	0					
ANR	8998571	Identifier	ar		8998449	1					
ANR	8998572	Identifier	index		8998449	1					
ANR	8998573	BitAndExpression	val & ~0xc0		8998449	1		&			
ANR	8998574	Identifier	val		8998449	0					
ANR	8998575	Identifier	~0xc0		8998449	1					
ANR	8998576	BreakStatement	break ;	65:16:994:999	8998449	14	True				
ANR	8998577	Label	case VGA_ATC_PEL :	67:12:1014:1030	8998449	15	True				
ANR	8998578	Identifier	VGA_ATC_PEL		8998449	0					
ANR	8998579	ExpressionStatement	s -> ar [ index ] = val & ~0xf0	69:16:1049:1075	8998449	16	True				
ANR	8998580	AssignmentExpression	s -> ar [ index ] = val & ~0xf0		8998449	0		=			
ANR	8998581	ArrayIndexing	s -> ar [ index ]		8998449	0					
ANR	8998582	PtrMemberAccess	s -> ar		8998449	0					
ANR	8998583	Identifier	s		8998449	0					
ANR	8998584	Identifier	ar		8998449	1					
ANR	8998585	Identifier	index		8998449	1					
ANR	8998586	BitAndExpression	val & ~0xf0		8998449	1		&			
ANR	8998587	Identifier	val		8998449	0					
ANR	8998588	Identifier	~0xf0		8998449	1					
ANR	8998589	BreakStatement	break ;	71:16:1094:1099	8998449	17	True				
ANR	8998590	Label	case VGA_ATC_COLOR_PAGE :	73:12:1114:1137	8998449	18	True				
ANR	8998591	Identifier	VGA_ATC_COLOR_PAGE		8998449	0					
ANR	8998592	ExpressionStatement	s -> ar [ index ] = val & ~0xf0	75:16:1156:1182	8998449	19	True				
ANR	8998593	AssignmentExpression	s -> ar [ index ] = val & ~0xf0		8998449	0		=			
ANR	8998594	ArrayIndexing	s -> ar [ index ]		8998449	0					
ANR	8998595	PtrMemberAccess	s -> ar		8998449	0					
ANR	8998596	Identifier	s		8998449	0					
ANR	8998597	Identifier	ar		8998449	1					
ANR	8998598	Identifier	index		8998449	1					
ANR	8998599	BitAndExpression	val & ~0xf0		8998449	1		&			
ANR	8998600	Identifier	val		8998449	0					
ANR	8998601	Identifier	~0xf0		8998449	1					
ANR	8998602	BreakStatement	break ;	77:16:1201:1206	8998449	20	True				
ANR	8998603	Label	default :	79:12:1221:1228	8998449	21	True				
ANR	8998604	Identifier	default		8998449	0					
ANR	8998605	BreakStatement	break ;	81:16:1247:1252	8998449	22	True				
ANR	8998606	ExpressionStatement	s -> ar_flip_flop ^= 1	87:8:1289:1309	8998449	2	True				
ANR	8998607	AssignmentExpression	s -> ar_flip_flop ^= 1		8998449	0		^=			
ANR	8998608	PtrMemberAccess	s -> ar_flip_flop		8998449	0					
ANR	8998609	Identifier	s		8998449	0					
ANR	8998610	Identifier	ar_flip_flop		8998449	1					
ANR	8998611	PrimaryExpression	1		8998449	1					
ANR	8998612	BreakStatement	break ;	89:8:1320:1325	8998449	3	True				
ANR	8998613	Label	case VGA_MIS_W :	91:4:1332:1346	8998449	4	True				
ANR	8998614	Identifier	VGA_MIS_W		8998449	0					
ANR	8998615	ExpressionStatement	s -> msr = val & ~0x10	93:8:1357:1377	8998449	5	True				
ANR	8998616	AssignmentExpression	s -> msr = val & ~0x10		8998449	0		=			
ANR	8998617	PtrMemberAccess	s -> msr		8998449	0					
ANR	8998618	Identifier	s		8998449	0					
ANR	8998619	Identifier	msr		8998449	1					
ANR	8998620	BitAndExpression	val & ~0x10		8998449	1		&			
ANR	8998621	Identifier	val		8998449	0					
ANR	8998622	Identifier	~0x10		8998449	1					
ANR	8998623	ExpressionStatement	s -> update_retrace_info ( s )	95:8:1388:1413	8998449	6	True				
ANR	8998624	CallExpression	s -> update_retrace_info ( s )		8998449	0					
ANR	8998625	Callee	s -> update_retrace_info		8998449	0					
ANR	8998626	PtrMemberAccess	s -> update_retrace_info		8998449	0					
ANR	8998627	Identifier	s		8998449	0					
ANR	8998628	Identifier	update_retrace_info		8998449	1					
ANR	8998629	ArgumentList	s		8998449	1					
ANR	8998630	Argument	s		8998449	0					
ANR	8998631	Identifier	s		8998449	0					
ANR	8998632	BreakStatement	break ;	97:8:1424:1429	8998449	7	True				
ANR	8998633	Label	case VGA_SEQ_I :	99:4:1436:1450	8998449	8	True				
ANR	8998634	Identifier	VGA_SEQ_I		8998449	0					
ANR	8998635	ExpressionStatement	s -> sr_index = val & 7	101:8:1461:1482	8998449	9	True				
ANR	8998636	AssignmentExpression	s -> sr_index = val & 7		8998449	0		=			
ANR	8998637	PtrMemberAccess	s -> sr_index		8998449	0					
ANR	8998638	Identifier	s		8998449	0					
ANR	8998639	Identifier	sr_index		8998449	1					
ANR	8998640	BitAndExpression	val & 7		8998449	1		&			
ANR	8998641	Identifier	val		8998449	0					
ANR	8998642	PrimaryExpression	7		8998449	1					
ANR	8998643	BreakStatement	break ;	103:8:1493:1498	8998449	10	True				
ANR	8998644	Label	case VGA_SEQ_D :	105:4:1505:1519	8998449	11	True				
ANR	8998645	Identifier	VGA_SEQ_D		8998449	0					
ANR	8998646	ExpressionStatement	"printf ( ""vga: write SR%x = 0x%02x\\n"" , s -> sr_index , val )"	109:8:1552:1606	8998449	12	True				
ANR	8998647	CallExpression	"printf ( ""vga: write SR%x = 0x%02x\\n"" , s -> sr_index , val )"		8998449	0					
ANR	8998648	Callee	printf		8998449	0					
ANR	8998649	Identifier	printf		8998449	0					
ANR	8998650	ArgumentList	"""vga: write SR%x = 0x%02x\\n"""		8998449	1					
ANR	8998651	Argument	"""vga: write SR%x = 0x%02x\\n"""		8998449	0					
ANR	8998652	PrimaryExpression	"""vga: write SR%x = 0x%02x\\n"""		8998449	0					
ANR	8998653	Argument	s -> sr_index		8998449	1					
ANR	8998654	PtrMemberAccess	s -> sr_index		8998449	0					
ANR	8998655	Identifier	s		8998449	0					
ANR	8998656	Identifier	sr_index		8998449	1					
ANR	8998657	Argument	val		8998449	2					
ANR	8998658	Identifier	val		8998449	0					
ANR	8998659	ExpressionStatement	s -> sr [ s -> sr_index ] = val & sr_mask [ s -> sr_index ]	113:8:1625:1672	8998449	13	True				
ANR	8998660	AssignmentExpression	s -> sr [ s -> sr_index ] = val & sr_mask [ s -> sr_index ]		8998449	0		=			
ANR	8998661	ArrayIndexing	s -> sr [ s -> sr_index ]		8998449	0					
ANR	8998662	PtrMemberAccess	s -> sr		8998449	0					
ANR	8998663	Identifier	s		8998449	0					
ANR	8998664	Identifier	sr		8998449	1					
ANR	8998665	PtrMemberAccess	s -> sr_index		8998449	1					
ANR	8998666	Identifier	s		8998449	0					
ANR	8998667	Identifier	sr_index		8998449	1					
ANR	8998668	BitAndExpression	val & sr_mask [ s -> sr_index ]		8998449	1		&			
ANR	8998669	Identifier	val		8998449	0					
ANR	8998670	ArrayIndexing	sr_mask [ s -> sr_index ]		8998449	1					
ANR	8998671	Identifier	sr_mask		8998449	0					
ANR	8998672	PtrMemberAccess	s -> sr_index		8998449	1					
ANR	8998673	Identifier	s		8998449	0					
ANR	8998674	Identifier	sr_index		8998449	1					
ANR	8998675	ExpressionStatement	vbe_update_vgaregs ( s )	115:8:1683:1704	8998449	14	True				
ANR	8998676	CallExpression	vbe_update_vgaregs ( s )		8998449	0					
ANR	8998677	Callee	vbe_update_vgaregs		8998449	0					
ANR	8998678	Identifier	vbe_update_vgaregs		8998449	0					
ANR	8998679	ArgumentList	s		8998449	1					
ANR	8998680	Argument	s		8998449	0					
ANR	8998681	Identifier	s		8998449	0					
ANR	8998682	IfStatement	if ( s -> sr_index == VGA_SEQ_CLOCK_MODE )		8998449	15					
ANR	8998683	Condition	s -> sr_index == VGA_SEQ_CLOCK_MODE	117:12:1719:1751	8998449	0	True				
ANR	8998684	EqualityExpression	s -> sr_index == VGA_SEQ_CLOCK_MODE		8998449	0		==			
ANR	8998685	PtrMemberAccess	s -> sr_index		8998449	0					
ANR	8998686	Identifier	s		8998449	0					
ANR	8998687	Identifier	sr_index		8998449	1					
ANR	8998688	Identifier	VGA_SEQ_CLOCK_MODE		8998449	1					
ANR	8998689	CompoundStatement		115:47:1687:1687	8998449	1					
ANR	8998690	ExpressionStatement	s -> update_retrace_info ( s )	119:12:1769:1794	8998449	0	True				
ANR	8998691	CallExpression	s -> update_retrace_info ( s )		8998449	0					
ANR	8998692	Callee	s -> update_retrace_info		8998449	0					
ANR	8998693	PtrMemberAccess	s -> update_retrace_info		8998449	0					
ANR	8998694	Identifier	s		8998449	0					
ANR	8998695	Identifier	update_retrace_info		8998449	1					
ANR	8998696	ArgumentList	s		8998449	1					
ANR	8998697	Argument	s		8998449	0					
ANR	8998698	Identifier	s		8998449	0					
ANR	8998699	ExpressionStatement	vga_update_memory_access ( s )	123:8:1816:1843	8998449	16	True				
ANR	8998700	CallExpression	vga_update_memory_access ( s )		8998449	0					
ANR	8998701	Callee	vga_update_memory_access		8998449	0					
ANR	8998702	Identifier	vga_update_memory_access		8998449	0					
ANR	8998703	ArgumentList	s		8998449	1					
ANR	8998704	Argument	s		8998449	0					
ANR	8998705	Identifier	s		8998449	0					
ANR	8998706	BreakStatement	break ;	125:8:1854:1859	8998449	17	True				
ANR	8998707	Label	case VGA_PEL_IR :	127:4:1866:1881	8998449	18	True				
ANR	8998708	Identifier	VGA_PEL_IR		8998449	0					
ANR	8998709	ExpressionStatement	s -> dac_read_index = val	129:8:1892:1915	8998449	19	True				
ANR	8998710	AssignmentExpression	s -> dac_read_index = val		8998449	0		=			
ANR	8998711	PtrMemberAccess	s -> dac_read_index		8998449	0					
ANR	8998712	Identifier	s		8998449	0					
ANR	8998713	Identifier	dac_read_index		8998449	1					
ANR	8998714	Identifier	val		8998449	1					
ANR	8998715	ExpressionStatement	s -> dac_sub_index = 0	131:8:1926:1946	8998449	20	True				
ANR	8998716	AssignmentExpression	s -> dac_sub_index = 0		8998449	0		=			
ANR	8998717	PtrMemberAccess	s -> dac_sub_index		8998449	0					
ANR	8998718	Identifier	s		8998449	0					
ANR	8998719	Identifier	dac_sub_index		8998449	1					
ANR	8998720	PrimaryExpression	0		8998449	1					
ANR	8998721	ExpressionStatement	s -> dac_state = 3	133:8:1957:1973	8998449	21	True				
ANR	8998722	AssignmentExpression	s -> dac_state = 3		8998449	0		=			
ANR	8998723	PtrMemberAccess	s -> dac_state		8998449	0					
ANR	8998724	Identifier	s		8998449	0					
ANR	8998725	Identifier	dac_state		8998449	1					
ANR	8998726	PrimaryExpression	3		8998449	1					
ANR	8998727	BreakStatement	break ;	135:8:1984:1989	8998449	22	True				
ANR	8998728	Label	case VGA_PEL_IW :	137:4:1996:2011	8998449	23	True				
ANR	8998729	Identifier	VGA_PEL_IW		8998449	0					
ANR	8998730	ExpressionStatement	s -> dac_write_index = val	139:8:2022:2046	8998449	24	True				
ANR	8998731	AssignmentExpression	s -> dac_write_index = val		8998449	0		=			
ANR	8998732	PtrMemberAccess	s -> dac_write_index		8998449	0					
ANR	8998733	Identifier	s		8998449	0					
ANR	8998734	Identifier	dac_write_index		8998449	1					
ANR	8998735	Identifier	val		8998449	1					
ANR	8998736	ExpressionStatement	s -> dac_sub_index = 0	141:8:2057:2077	8998449	25	True				
ANR	8998737	AssignmentExpression	s -> dac_sub_index = 0		8998449	0		=			
ANR	8998738	PtrMemberAccess	s -> dac_sub_index		8998449	0					
ANR	8998739	Identifier	s		8998449	0					
ANR	8998740	Identifier	dac_sub_index		8998449	1					
ANR	8998741	PrimaryExpression	0		8998449	1					
ANR	8998742	ExpressionStatement	s -> dac_state = 0	143:8:2088:2104	8998449	26	True				
ANR	8998743	AssignmentExpression	s -> dac_state = 0		8998449	0		=			
ANR	8998744	PtrMemberAccess	s -> dac_state		8998449	0					
ANR	8998745	Identifier	s		8998449	0					
ANR	8998746	Identifier	dac_state		8998449	1					
ANR	8998747	PrimaryExpression	0		8998449	1					
ANR	8998748	BreakStatement	break ;	145:8:2115:2120	8998449	27	True				
ANR	8998749	Label	case VGA_PEL_D :	147:4:2127:2141	8998449	28	True				
ANR	8998750	Identifier	VGA_PEL_D		8998449	0					
ANR	8998751	ExpressionStatement	s -> dac_cache [ s -> dac_sub_index ] = val	149:8:2152:2188	8998449	29	True				
ANR	8998752	AssignmentExpression	s -> dac_cache [ s -> dac_sub_index ] = val		8998449	0		=			
ANR	8998753	ArrayIndexing	s -> dac_cache [ s -> dac_sub_index ]		8998449	0					
ANR	8998754	PtrMemberAccess	s -> dac_cache		8998449	0					
ANR	8998755	Identifier	s		8998449	0					
ANR	8998756	Identifier	dac_cache		8998449	1					
ANR	8998757	PtrMemberAccess	s -> dac_sub_index		8998449	1					
ANR	8998758	Identifier	s		8998449	0					
ANR	8998759	Identifier	dac_sub_index		8998449	1					
ANR	8998760	Identifier	val		8998449	1					
ANR	8998761	IfStatement	if ( ++ s -> dac_sub_index == 3 )		8998449	30					
ANR	8998762	Condition	++ s -> dac_sub_index == 3	151:12:2203:2225	8998449	0	True				
ANR	8998763	EqualityExpression	++ s -> dac_sub_index == 3		8998449	0		==			
ANR	8998764	UnaryExpression	++ s -> dac_sub_index		8998449	0					
ANR	8998765	IncDec	++		8998449	0					
ANR	8998766	PtrMemberAccess	s -> dac_sub_index		8998449	1					
ANR	8998767	Identifier	s		8998449	0					
ANR	8998768	Identifier	dac_sub_index		8998449	1					
ANR	8998769	PrimaryExpression	3		8998449	1					
ANR	8998770	CompoundStatement		149:37:2161:2161	8998449	1					
ANR	8998771	ExpressionStatement	"memcpy ( & s -> palette [ s -> dac_write_index * 3 ] , s -> dac_cache , 3 )"	153:12:2243:2303	8998449	0	True				
ANR	8998772	CallExpression	"memcpy ( & s -> palette [ s -> dac_write_index * 3 ] , s -> dac_cache , 3 )"		8998449	0					
ANR	8998773	Callee	memcpy		8998449	0					
ANR	8998774	Identifier	memcpy		8998449	0					
ANR	8998775	ArgumentList	& s -> palette [ s -> dac_write_index * 3 ]		8998449	1					
ANR	8998776	Argument	& s -> palette [ s -> dac_write_index * 3 ]		8998449	0					
ANR	8998777	UnaryOperationExpression	& s -> palette [ s -> dac_write_index * 3 ]		8998449	0					
ANR	8998778	UnaryOperator	&		8998449	0					
ANR	8998779	ArrayIndexing	s -> palette [ s -> dac_write_index * 3 ]		8998449	1					
ANR	8998780	PtrMemberAccess	s -> palette		8998449	0					
ANR	8998781	Identifier	s		8998449	0					
ANR	8998782	Identifier	palette		8998449	1					
ANR	8998783	MultiplicativeExpression	s -> dac_write_index * 3		8998449	1		*			
ANR	8998784	PtrMemberAccess	s -> dac_write_index		8998449	0					
ANR	8998785	Identifier	s		8998449	0					
ANR	8998786	Identifier	dac_write_index		8998449	1					
ANR	8998787	PrimaryExpression	3		8998449	1					
ANR	8998788	Argument	s -> dac_cache		8998449	1					
ANR	8998789	PtrMemberAccess	s -> dac_cache		8998449	0					
ANR	8998790	Identifier	s		8998449	0					
ANR	8998791	Identifier	dac_cache		8998449	1					
ANR	8998792	Argument	3		8998449	2					
ANR	8998793	PrimaryExpression	3		8998449	0					
ANR	8998794	ExpressionStatement	s -> dac_sub_index = 0	155:12:2318:2338	8998449	1	True				
ANR	8998795	AssignmentExpression	s -> dac_sub_index = 0		8998449	0		=			
ANR	8998796	PtrMemberAccess	s -> dac_sub_index		8998449	0					
ANR	8998797	Identifier	s		8998449	0					
ANR	8998798	Identifier	dac_sub_index		8998449	1					
ANR	8998799	PrimaryExpression	0		8998449	1					
ANR	8998800	ExpressionStatement	s -> dac_write_index ++	157:12:2353:2373	8998449	2	True				
ANR	8998801	PostIncDecOperationExpression	s -> dac_write_index ++		8998449	0					
ANR	8998802	PtrMemberAccess	s -> dac_write_index		8998449	0					
ANR	8998803	Identifier	s		8998449	0					
ANR	8998804	Identifier	dac_write_index		8998449	1					
ANR	8998805	IncDec	++		8998449	1					
ANR	8998806	BreakStatement	break ;	161:8:2395:2400	8998449	31	True				
ANR	8998807	Label	case VGA_GFX_I :	163:4:2407:2421	8998449	32	True				
ANR	8998808	Identifier	VGA_GFX_I		8998449	0					
ANR	8998809	ExpressionStatement	s -> gr_index = val & 0x0f	165:8:2432:2456	8998449	33	True				
ANR	8998810	AssignmentExpression	s -> gr_index = val & 0x0f		8998449	0		=			
ANR	8998811	PtrMemberAccess	s -> gr_index		8998449	0					
ANR	8998812	Identifier	s		8998449	0					
ANR	8998813	Identifier	gr_index		8998449	1					
ANR	8998814	BitAndExpression	val & 0x0f		8998449	1		&			
ANR	8998815	Identifier	val		8998449	0					
ANR	8998816	PrimaryExpression	0x0f		8998449	1					
ANR	8998817	BreakStatement	break ;	167:8:2467:2472	8998449	34	True				
ANR	8998818	Label	case VGA_GFX_D :	169:4:2479:2493	8998449	35	True				
ANR	8998819	Identifier	VGA_GFX_D		8998449	0					
ANR	8998820	ExpressionStatement	"printf ( ""vga: write GR%x = 0x%02x\\n"" , s -> gr_index , val )"	173:8:2526:2580	8998449	36	True				
ANR	8998821	CallExpression	"printf ( ""vga: write GR%x = 0x%02x\\n"" , s -> gr_index , val )"		8998449	0					
ANR	8998822	Callee	printf		8998449	0					
ANR	8998823	Identifier	printf		8998449	0					
ANR	8998824	ArgumentList	"""vga: write GR%x = 0x%02x\\n"""		8998449	1					
ANR	8998825	Argument	"""vga: write GR%x = 0x%02x\\n"""		8998449	0					
ANR	8998826	PrimaryExpression	"""vga: write GR%x = 0x%02x\\n"""		8998449	0					
ANR	8998827	Argument	s -> gr_index		8998449	1					
ANR	8998828	PtrMemberAccess	s -> gr_index		8998449	0					
ANR	8998829	Identifier	s		8998449	0					
ANR	8998830	Identifier	gr_index		8998449	1					
ANR	8998831	Argument	val		8998449	2					
ANR	8998832	Identifier	val		8998449	0					
ANR	8998833	ExpressionStatement	s -> gr [ s -> gr_index ] = val & gr_mask [ s -> gr_index ]	177:8:2599:2646	8998449	37	True				
ANR	8998834	AssignmentExpression	s -> gr [ s -> gr_index ] = val & gr_mask [ s -> gr_index ]		8998449	0		=			
ANR	8998835	ArrayIndexing	s -> gr [ s -> gr_index ]		8998449	0					
ANR	8998836	PtrMemberAccess	s -> gr		8998449	0					
ANR	8998837	Identifier	s		8998449	0					
ANR	8998838	Identifier	gr		8998449	1					
ANR	8998839	PtrMemberAccess	s -> gr_index		8998449	1					
ANR	8998840	Identifier	s		8998449	0					
ANR	8998841	Identifier	gr_index		8998449	1					
ANR	8998842	BitAndExpression	val & gr_mask [ s -> gr_index ]		8998449	1		&			
ANR	8998843	Identifier	val		8998449	0					
ANR	8998844	ArrayIndexing	gr_mask [ s -> gr_index ]		8998449	1					
ANR	8998845	Identifier	gr_mask		8998449	0					
ANR	8998846	PtrMemberAccess	s -> gr_index		8998449	1					
ANR	8998847	Identifier	s		8998449	0					
ANR	8998848	Identifier	gr_index		8998449	1					
ANR	8998849	ExpressionStatement	vbe_update_vgaregs ( s )	179:8:2657:2678	8998449	38	True				
ANR	8998850	CallExpression	vbe_update_vgaregs ( s )		8998449	0					
ANR	8998851	Callee	vbe_update_vgaregs		8998449	0					
ANR	8998852	Identifier	vbe_update_vgaregs		8998449	0					
ANR	8998853	ArgumentList	s		8998449	1					
ANR	8998854	Argument	s		8998449	0					
ANR	8998855	Identifier	s		8998449	0					
ANR	8998856	ExpressionStatement	vga_update_memory_access ( s )	181:8:2689:2716	8998449	39	True				
ANR	8998857	CallExpression	vga_update_memory_access ( s )		8998449	0					
ANR	8998858	Callee	vga_update_memory_access		8998449	0					
ANR	8998859	Identifier	vga_update_memory_access		8998449	0					
ANR	8998860	ArgumentList	s		8998449	1					
ANR	8998861	Argument	s		8998449	0					
ANR	8998862	Identifier	s		8998449	0					
ANR	8998863	BreakStatement	break ;	183:8:2727:2732	8998449	40	True				
ANR	8998864	Label	case VGA_CRT_IM :	185:4:2739:2754	8998449	41	True				
ANR	8998865	Identifier	VGA_CRT_IM		8998449	0					
ANR	8998866	Label	case VGA_CRT_IC :	187:4:2761:2776	8998449	42	True				
ANR	8998867	Identifier	VGA_CRT_IC		8998449	0					
ANR	8998868	ExpressionStatement	s -> cr_index = val	189:8:2787:2804	8998449	43	True				
ANR	8998869	AssignmentExpression	s -> cr_index = val		8998449	0		=			
ANR	8998870	PtrMemberAccess	s -> cr_index		8998449	0					
ANR	8998871	Identifier	s		8998449	0					
ANR	8998872	Identifier	cr_index		8998449	1					
ANR	8998873	Identifier	val		8998449	1					
ANR	8998874	BreakStatement	break ;	191:8:2815:2820	8998449	44	True				
ANR	8998875	Label	case VGA_CRT_DM :	193:4:2827:2842	8998449	45	True				
ANR	8998876	Identifier	VGA_CRT_DM		8998449	0					
ANR	8998877	Label	case VGA_CRT_DC :	195:4:2849:2864	8998449	46	True				
ANR	8998878	Identifier	VGA_CRT_DC		8998449	0					
ANR	8998879	ExpressionStatement	"printf ( ""vga: write CR%x = 0x%02x\\n"" , s -> cr_index , val )"	199:8:2897:2951	8998449	47	True				
ANR	8998880	CallExpression	"printf ( ""vga: write CR%x = 0x%02x\\n"" , s -> cr_index , val )"		8998449	0					
ANR	8998881	Callee	printf		8998449	0					
ANR	8998882	Identifier	printf		8998449	0					
ANR	8998883	ArgumentList	"""vga: write CR%x = 0x%02x\\n"""		8998449	1					
ANR	8998884	Argument	"""vga: write CR%x = 0x%02x\\n"""		8998449	0					
ANR	8998885	PrimaryExpression	"""vga: write CR%x = 0x%02x\\n"""		8998449	0					
ANR	8998886	Argument	s -> cr_index		8998449	1					
ANR	8998887	PtrMemberAccess	s -> cr_index		8998449	0					
ANR	8998888	Identifier	s		8998449	0					
ANR	8998889	Identifier	cr_index		8998449	1					
ANR	8998890	Argument	val		8998449	2					
ANR	8998891	Identifier	val		8998449	0					
ANR	8998892	IfStatement	if ( ( s -> cr [ VGA_CRTC_V_SYNC_END ] & VGA_CR11_LOCK_CR0_CR7 ) && s -> cr_index <= VGA_CRTC_OVERFLOW )		8998449	48					
ANR	8998893	Condition	( s -> cr [ VGA_CRTC_V_SYNC_END ] & VGA_CR11_LOCK_CR0_CR7 ) && s -> cr_index <= VGA_CRTC_OVERFLOW	205:12:3013:3113	8998449	0	True				
ANR	8998894	AndExpression	( s -> cr [ VGA_CRTC_V_SYNC_END ] & VGA_CR11_LOCK_CR0_CR7 ) && s -> cr_index <= VGA_CRTC_OVERFLOW		8998449	0		&&			
ANR	8998895	BitAndExpression	s -> cr [ VGA_CRTC_V_SYNC_END ] & VGA_CR11_LOCK_CR0_CR7		8998449	0		&			
ANR	8998896	ArrayIndexing	s -> cr [ VGA_CRTC_V_SYNC_END ]		8998449	0					
ANR	8998897	PtrMemberAccess	s -> cr		8998449	0					
ANR	8998898	Identifier	s		8998449	0					
ANR	8998899	Identifier	cr		8998449	1					
ANR	8998900	Identifier	VGA_CRTC_V_SYNC_END		8998449	1					
ANR	8998901	Identifier	VGA_CR11_LOCK_CR0_CR7		8998449	1					
ANR	8998902	RelationalExpression	s -> cr_index <= VGA_CRTC_OVERFLOW		8998449	1		<=			
ANR	8998903	PtrMemberAccess	s -> cr_index		8998449	0					
ANR	8998904	Identifier	s		8998449	0					
ANR	8998905	Identifier	cr_index		8998449	1					
ANR	8998906	Identifier	VGA_CRTC_OVERFLOW		8998449	1					
ANR	8998907	CompoundStatement		205:46:3049:3049	8998449	1					
ANR	8998908	IfStatement	if ( s -> cr_index == VGA_CRTC_OVERFLOW )		8998449	0					
ANR	8998909	Condition	s -> cr_index == VGA_CRTC_OVERFLOW	211:16:3184:3215	8998449	0	True				
ANR	8998910	EqualityExpression	s -> cr_index == VGA_CRTC_OVERFLOW		8998449	0		==			
ANR	8998911	PtrMemberAccess	s -> cr_index		8998449	0					
ANR	8998912	Identifier	s		8998449	0					
ANR	8998913	Identifier	cr_index		8998449	1					
ANR	8998914	Identifier	VGA_CRTC_OVERFLOW		8998449	1					
ANR	8998915	CompoundStatement		209:50:3151:3151	8998449	1					
ANR	8998916	ExpressionStatement	s -> cr [ VGA_CRTC_OVERFLOW ] = ( s -> cr [ VGA_CRTC_OVERFLOW ] & ~0x10 ) | ( val & 0x10 )	213:16:3237:3334	8998449	0	True				
ANR	8998917	AssignmentExpression	s -> cr [ VGA_CRTC_OVERFLOW ] = ( s -> cr [ VGA_CRTC_OVERFLOW ] & ~0x10 ) | ( val & 0x10 )		8998449	0		=			
ANR	8998918	ArrayIndexing	s -> cr [ VGA_CRTC_OVERFLOW ]		8998449	0					
ANR	8998919	PtrMemberAccess	s -> cr		8998449	0					
ANR	8998920	Identifier	s		8998449	0					
ANR	8998921	Identifier	cr		8998449	1					
ANR	8998922	Identifier	VGA_CRTC_OVERFLOW		8998449	1					
ANR	8998923	InclusiveOrExpression	( s -> cr [ VGA_CRTC_OVERFLOW ] & ~0x10 ) | ( val & 0x10 )		8998449	1		|			
ANR	8998924	BitAndExpression	s -> cr [ VGA_CRTC_OVERFLOW ] & ~0x10		8998449	0		&			
ANR	8998925	ArrayIndexing	s -> cr [ VGA_CRTC_OVERFLOW ]		8998449	0					
ANR	8998926	PtrMemberAccess	s -> cr		8998449	0					
ANR	8998927	Identifier	s		8998449	0					
ANR	8998928	Identifier	cr		8998449	1					
ANR	8998929	Identifier	VGA_CRTC_OVERFLOW		8998449	1					
ANR	8998930	Identifier	~0x10		8998449	1					
ANR	8998931	BitAndExpression	val & 0x10		8998449	1		&			
ANR	8998932	Identifier	val		8998449	0					
ANR	8998933	PrimaryExpression	0x10		8998449	1					
ANR	8998934	ExpressionStatement	vbe_update_vgaregs ( s )	217:16:3353:3374	8998449	1	True				
ANR	8998935	CallExpression	vbe_update_vgaregs ( s )		8998449	0					
ANR	8998936	Callee	vbe_update_vgaregs		8998449	0					
ANR	8998937	Identifier	vbe_update_vgaregs		8998449	0					
ANR	8998938	ArgumentList	s		8998449	1					
ANR	8998939	Argument	s		8998449	0					
ANR	8998940	Identifier	s		8998449	0					
ANR	8998941	ReturnStatement	return ;	221:12:3404:3410	8998449	1	True				
ANR	8998942	ExpressionStatement	s -> cr [ s -> cr_index ] = val	225:8:3432:3456	8998449	49	True				
ANR	8998943	AssignmentExpression	s -> cr [ s -> cr_index ] = val		8998449	0		=			
ANR	8998944	ArrayIndexing	s -> cr [ s -> cr_index ]		8998449	0					
ANR	8998945	PtrMemberAccess	s -> cr		8998449	0					
ANR	8998946	Identifier	s		8998449	0					
ANR	8998947	Identifier	cr		8998449	1					
ANR	8998948	PtrMemberAccess	s -> cr_index		8998449	1					
ANR	8998949	Identifier	s		8998449	0					
ANR	8998950	Identifier	cr_index		8998449	1					
ANR	8998951	Identifier	val		8998449	1					
ANR	8998952	ExpressionStatement	vbe_update_vgaregs ( s )	227:8:3467:3488	8998449	50	True				
ANR	8998953	CallExpression	vbe_update_vgaregs ( s )		8998449	0					
ANR	8998954	Callee	vbe_update_vgaregs		8998449	0					
ANR	8998955	Identifier	vbe_update_vgaregs		8998449	0					
ANR	8998956	ArgumentList	s		8998449	1					
ANR	8998957	Argument	s		8998449	0					
ANR	8998958	Identifier	s		8998449	0					
ANR	8998959	SwitchStatement	switch ( s -> cr_index )		8998449	51					
ANR	8998960	Condition	s -> cr_index	231:15:3508:3518	8998449	0	True				
ANR	8998961	PtrMemberAccess	s -> cr_index		8998449	0					
ANR	8998962	Identifier	s		8998449	0					
ANR	8998963	Identifier	cr_index		8998449	1					
ANR	8998964	CompoundStatement		229:28:3454:3454	8998449	1					
ANR	8998965	Label	case VGA_CRTC_H_TOTAL :	233:8:3532:3553	8998449	0	True				
ANR	8998966	Identifier	VGA_CRTC_H_TOTAL		8998449	0					
ANR	8998967	Label	case VGA_CRTC_H_SYNC_START :	235:8:3564:3590	8998449	1	True				
ANR	8998968	Identifier	VGA_CRTC_H_SYNC_START		8998449	0					
ANR	8998969	Label	case VGA_CRTC_H_SYNC_END :	237:8:3601:3625	8998449	2	True				
ANR	8998970	Identifier	VGA_CRTC_H_SYNC_END		8998449	0					
ANR	8998971	Label	case VGA_CRTC_V_TOTAL :	239:8:3636:3657	8998449	3	True				
ANR	8998972	Identifier	VGA_CRTC_V_TOTAL		8998449	0					
ANR	8998973	Label	case VGA_CRTC_OVERFLOW :	241:8:3668:3690	8998449	4	True				
ANR	8998974	Identifier	VGA_CRTC_OVERFLOW		8998449	0					
ANR	8998975	Label	case VGA_CRTC_V_SYNC_END :	243:8:3701:3725	8998449	5	True				
ANR	8998976	Identifier	VGA_CRTC_V_SYNC_END		8998449	0					
ANR	8998977	Label	case VGA_CRTC_MODE :	245:8:3736:3754	8998449	6	True				
ANR	8998978	Identifier	VGA_CRTC_MODE		8998449	0					
ANR	8998979	ExpressionStatement	s -> update_retrace_info ( s )	247:12:3769:3794	8998449	7	True				
ANR	8998980	CallExpression	s -> update_retrace_info ( s )		8998449	0					
ANR	8998981	Callee	s -> update_retrace_info		8998449	0					
ANR	8998982	PtrMemberAccess	s -> update_retrace_info		8998449	0					
ANR	8998983	Identifier	s		8998449	0					
ANR	8998984	Identifier	update_retrace_info		8998449	1					
ANR	8998985	ArgumentList	s		8998449	1					
ANR	8998986	Argument	s		8998449	0					
ANR	8998987	Identifier	s		8998449	0					
ANR	8998988	BreakStatement	break ;	249:12:3809:3814	8998449	8	True				
ANR	8998989	BreakStatement	break ;	253:8:3836:3841	8998449	52	True				
ANR	8998990	Label	case VGA_IS1_RM :	255:4:3848:3863	8998449	53	True				
ANR	8998991	Identifier	VGA_IS1_RM		8998449	0					
ANR	8998992	Label	case VGA_IS1_RC :	257:4:3870:3885	8998449	54	True				
ANR	8998993	Identifier	VGA_IS1_RC		8998449	0					
ANR	8998994	ExpressionStatement	s -> fcr = val & 0x10	259:8:3896:3915	8998449	55	True				
ANR	8998995	AssignmentExpression	s -> fcr = val & 0x10		8998449	0		=			
ANR	8998996	PtrMemberAccess	s -> fcr		8998449	0					
ANR	8998997	Identifier	s		8998449	0					
ANR	8998998	Identifier	fcr		8998449	1					
ANR	8998999	BitAndExpression	val & 0x10		8998449	1		&			
ANR	8999000	Identifier	val		8998449	0					
ANR	8999001	PrimaryExpression	0x10		8998449	1					
ANR	8999002	BreakStatement	break ;	261:8:3926:3931	8998449	56	True				
ANR	8999003	ReturnType	void		8998449	1					
ANR	8999004	Identifier	vga_ioport_write		8998449	2					
ANR	8999005	ParameterList	"void * opaque , uint32_t addr , uint32_t val"		8998449	3					
ANR	8999006	Parameter	void * opaque	1:22:22:33	8998449	0	True				
ANR	8999007	ParameterType	void *		8998449	0					
ANR	8999008	Identifier	opaque		8998449	1					
ANR	8999009	Parameter	uint32_t addr	1:36:36:48	8998449	1	True				
ANR	8999010	ParameterType	uint32_t		8998449	0					
ANR	8999011	Identifier	addr		8998449	1					
ANR	8999012	Parameter	uint32_t val	1:51:51:62	8998449	2	True				
ANR	8999013	ParameterType	uint32_t		8998449	0					
ANR	8999014	Identifier	val		8998449	1					
ANR	8999015	CFGEntryNode	ENTRY		8998449		True				
ANR	8999016	CFGExitNode	EXIT		8998449		True				
ANR	8999017	Symbol	VGA_SEQ_CLOCK_MODE		8998449						
ANR	8999018	Symbol	s -> fcr		8998449						
ANR	8999019	Symbol	s -> dac_cache		8998449						
ANR	8999020	Symbol	* index		8998449						
ANR	8999021	Symbol	* s -> sr_index		8998449						
ANR	8999022	Symbol	VGA_CRTC_V_SYNC_END		8998449						
ANR	8999023	Symbol	s -> ar		8998449						
ANR	8999024	Symbol	s -> cr		8998449						
ANR	8999025	Symbol	s -> gr		8998449						
ANR	8999026	Symbol	* sr_mask		8998449						
ANR	8999027	Symbol	~0xf0		8998449						
ANR	8999028	Symbol	* * s		8998449						
ANR	8999029	Symbol	s -> msr		8998449						
ANR	8999030	Symbol	gr_mask		8998449						
ANR	8999031	Symbol	VGA_CR11_LOCK_CR0_CR7		8998449						
ANR	8999032	Symbol	s -> ar_flip_flop		8998449						
ANR	8999033	Symbol	addr		8998449						
ANR	8999034	Symbol	* s -> dac_sub_index		8998449						
ANR	8999035	Symbol	s -> sr		8998449						
ANR	8999036	Symbol	val		8998449						
ANR	8999037	Symbol	* s -> gr_index		8998449						
ANR	8999038	Symbol	* s -> dac_cache		8998449						
ANR	8999039	Symbol	~0x10		8998449						
ANR	8999040	Symbol	opaque		8998449						
ANR	8999041	Symbol	* s -> ar		8998449						
ANR	8999042	Symbol	* s -> cr		8998449						
ANR	8999043	Symbol	* s -> cr_index		8998449						
ANR	8999044	Symbol	index		8998449						
ANR	8999045	Symbol	vga_ioport_invalid		8998449						
ANR	8999046	Symbol	* s -> gr		8998449						
ANR	8999047	Symbol	s -> cr_index		8998449						
ANR	8999048	Symbol	s -> ar_index		8998449						
ANR	8999049	Symbol	s -> dac_read_index		8998449						
ANR	8999050	Symbol	sr_mask		8998449						
ANR	8999051	Symbol	VGA_CRTC_OVERFLOW		8998449						
ANR	8999052	Symbol	s -> dac_sub_index		8998449						
ANR	8999053	Symbol	s -> gr_index		8998449						
ANR	8999054	Symbol	* VGA_CRTC_V_SYNC_END		8998449						
ANR	8999055	Symbol	s		8998449						
ANR	8999056	Symbol	s -> dac_write_index		8998449						
ANR	8999057	Symbol	~0xc0		8998449						
ANR	8999058	Symbol	s -> sr_index		8998449						
ANR	8999059	Symbol	* VGA_CRTC_OVERFLOW		8998449						
ANR	8999060	Symbol	* s -> sr		8998449						
ANR	8999061	Symbol	* s		8998449						
ANR	8999062	Symbol	s -> dac_state		8998449						
ANR	8999063	Symbol	* gr_mask		8998449						
ANR	8999064	Symbol	s -> palette		8998449						
