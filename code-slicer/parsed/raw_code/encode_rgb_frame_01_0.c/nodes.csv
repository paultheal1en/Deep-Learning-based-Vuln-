command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3036507	File	/home/p4ultr4n/workplace/ReVeal/raw_code/encode_rgb_frame_01_0.c								
ANR	3036508	Function	encode_rgb_frame	1:0:0:1910							
ANR	3036509	FunctionDef	"encode_rgb_frame (FFV1Context * s , uint8_t * src [ 3 ] , int w , int h , int stride [ 3 ])"		3036508	0					
ANR	3036510	CompoundStatement		3:0:92:1910	3036508	0					
ANR	3036511	IdentifierDeclStatement	"int x , y , p , i ;"	5:4:99:113	3036508	0	True				
ANR	3036512	IdentifierDecl	x		3036508	0					
ANR	3036513	IdentifierDeclType	int		3036508	0					
ANR	3036514	Identifier	x		3036508	1					
ANR	3036515	IdentifierDecl	y		3036508	1					
ANR	3036516	IdentifierDeclType	int		3036508	0					
ANR	3036517	Identifier	y		3036508	1					
ANR	3036518	IdentifierDecl	p		3036508	2					
ANR	3036519	IdentifierDeclType	int		3036508	0					
ANR	3036520	Identifier	p		3036508	1					
ANR	3036521	IdentifierDecl	i		3036508	3					
ANR	3036522	IdentifierDeclType	int		3036508	0					
ANR	3036523	Identifier	i		3036508	1					
ANR	3036524	IdentifierDeclStatement	const int ring_size = s -> avctx -> context_model ? 3 : 2 ;	7:4:120:173	3036508	1	True				
ANR	3036525	IdentifierDecl	ring_size = s -> avctx -> context_model ? 3 : 2		3036508	0					
ANR	3036526	IdentifierDeclType	const int		3036508	0					
ANR	3036527	Identifier	ring_size		3036508	1					
ANR	3036528	AssignmentExpression	ring_size = s -> avctx -> context_model ? 3 : 2		3036508	2		=			
ANR	3036529	Identifier	ring_size		3036508	0					
ANR	3036530	ConditionalExpression	s -> avctx -> context_model ? 3 : 2		3036508	1					
ANR	3036531	Condition	s -> avctx -> context_model		3036508	0					
ANR	3036532	PtrMemberAccess	s -> avctx -> context_model		3036508	0					
ANR	3036533	PtrMemberAccess	s -> avctx		3036508	0					
ANR	3036534	Identifier	s		3036508	0					
ANR	3036535	Identifier	avctx		3036508	1					
ANR	3036536	Identifier	context_model		3036508	1					
ANR	3036537	PrimaryExpression	3		3036508	1					
ANR	3036538	PrimaryExpression	2		3036508	2					
ANR	3036539	ExpressionStatement	int16_t * sample [ 4 ] [ 3 ]	9:4:180:201	3036508	2	True				
ANR	3036540	MultiplicativeExpression	int16_t * sample [ 4 ] [ 3 ]		3036508	0		*			
ANR	3036541	Identifier	int16_t		3036508	0					
ANR	3036542	ArrayIndexing	sample [ 4 ] [ 3 ]		3036508	1					
ANR	3036543	ArrayIndexing	sample [ 4 ]		3036508	0					
ANR	3036544	Identifier	sample		3036508	0					
ANR	3036545	PrimaryExpression	4		3036508	1					
ANR	3036546	PrimaryExpression	3		3036508	1					
ANR	3036547	IdentifierDeclStatement	int lbd = s -> bits_per_raw_sample <= 8 ;	11:4:208:248	3036508	3	True				
ANR	3036548	IdentifierDecl	lbd = s -> bits_per_raw_sample <= 8		3036508	0					
ANR	3036549	IdentifierDeclType	int		3036508	0					
ANR	3036550	Identifier	lbd		3036508	1					
ANR	3036551	AssignmentExpression	lbd = s -> bits_per_raw_sample <= 8		3036508	2		=			
ANR	3036552	Identifier	lbd		3036508	0					
ANR	3036553	RelationalExpression	s -> bits_per_raw_sample <= 8		3036508	1		<=			
ANR	3036554	PtrMemberAccess	s -> bits_per_raw_sample		3036508	0					
ANR	3036555	Identifier	s		3036508	0					
ANR	3036556	Identifier	bits_per_raw_sample		3036508	1					
ANR	3036557	PrimaryExpression	8		3036508	1					
ANR	3036558	IdentifierDeclStatement	int bits = s -> bits_per_raw_sample > 0 ? s -> bits_per_raw_sample : 8 ;	13:4:255:323	3036508	4	True				
ANR	3036559	IdentifierDecl	bits = s -> bits_per_raw_sample > 0 ? s -> bits_per_raw_sample : 8		3036508	0					
ANR	3036560	IdentifierDeclType	int		3036508	0					
ANR	3036561	Identifier	bits		3036508	1					
ANR	3036562	AssignmentExpression	bits = s -> bits_per_raw_sample > 0 ? s -> bits_per_raw_sample : 8		3036508	2		=			
ANR	3036563	Identifier	bits		3036508	0					
ANR	3036564	ConditionalExpression	s -> bits_per_raw_sample > 0 ? s -> bits_per_raw_sample : 8		3036508	1					
ANR	3036565	Condition	s -> bits_per_raw_sample > 0		3036508	0					
ANR	3036566	RelationalExpression	s -> bits_per_raw_sample > 0		3036508	0		>			
ANR	3036567	PtrMemberAccess	s -> bits_per_raw_sample		3036508	0					
ANR	3036568	Identifier	s		3036508	0					
ANR	3036569	Identifier	bits_per_raw_sample		3036508	1					
ANR	3036570	PrimaryExpression	0		3036508	1					
ANR	3036571	PtrMemberAccess	s -> bits_per_raw_sample		3036508	1					
ANR	3036572	Identifier	s		3036508	0					
ANR	3036573	Identifier	bits_per_raw_sample		3036508	1					
ANR	3036574	PrimaryExpression	8		3036508	2					
ANR	3036575	IdentifierDeclStatement	int offset = 1 << bits ;	15:4:330:352	3036508	5	True				
ANR	3036576	IdentifierDecl	offset = 1 << bits		3036508	0					
ANR	3036577	IdentifierDeclType	int		3036508	0					
ANR	3036578	Identifier	offset		3036508	1					
ANR	3036579	AssignmentExpression	offset = 1 << bits		3036508	2		=			
ANR	3036580	Identifier	offset		3036508	0					
ANR	3036581	ShiftExpression	1 << bits		3036508	1		<<			
ANR	3036582	PrimaryExpression	1		3036508	0					
ANR	3036583	Identifier	bits		3036508	1					
ANR	3036584	ExpressionStatement	s -> run_index = 0	19:4:361:377	3036508	6	True				
ANR	3036585	AssignmentExpression	s -> run_index = 0		3036508	0		=			
ANR	3036586	PtrMemberAccess	s -> run_index		3036508	0					
ANR	3036587	Identifier	s		3036508	0					
ANR	3036588	Identifier	run_index		3036508	1					
ANR	3036589	PrimaryExpression	0		3036508	1					
ANR	3036590	ExpressionStatement	"memset ( s -> sample_buffer , 0 , ring_size * MAX_PLANES * ( w + 6 ) * sizeof ( * s -> sample_buffer ) )"	23:4:386:508	3036508	7	True				
ANR	3036591	CallExpression	"memset ( s -> sample_buffer , 0 , ring_size * MAX_PLANES * ( w + 6 ) * sizeof ( * s -> sample_buffer ) )"		3036508	0					
ANR	3036592	Callee	memset		3036508	0					
ANR	3036593	Identifier	memset		3036508	0					
ANR	3036594	ArgumentList	s -> sample_buffer		3036508	1					
ANR	3036595	Argument	s -> sample_buffer		3036508	0					
ANR	3036596	PtrMemberAccess	s -> sample_buffer		3036508	0					
ANR	3036597	Identifier	s		3036508	0					
ANR	3036598	Identifier	sample_buffer		3036508	1					
ANR	3036599	Argument	0		3036508	1					
ANR	3036600	PrimaryExpression	0		3036508	0					
ANR	3036601	Argument	ring_size * MAX_PLANES * ( w + 6 ) * sizeof ( * s -> sample_buffer )		3036508	2					
ANR	3036602	MultiplicativeExpression	ring_size * MAX_PLANES * ( w + 6 ) * sizeof ( * s -> sample_buffer )		3036508	0		*			
ANR	3036603	Identifier	ring_size		3036508	0					
ANR	3036604	MultiplicativeExpression	MAX_PLANES * ( w + 6 ) * sizeof ( * s -> sample_buffer )		3036508	1		*			
ANR	3036605	Identifier	MAX_PLANES		3036508	0					
ANR	3036606	MultiplicativeExpression	( w + 6 ) * sizeof ( * s -> sample_buffer )		3036508	1		*			
ANR	3036607	AdditiveExpression	w + 6		3036508	0		+			
ANR	3036608	Identifier	w		3036508	0					
ANR	3036609	PrimaryExpression	6		3036508	1					
ANR	3036610	SizeofExpression	sizeof ( * s -> sample_buffer )		3036508	1					
ANR	3036611	Sizeof	sizeof		3036508	0					
ANR	3036612	UnaryOperationExpression	* s -> sample_buffer		3036508	1					
ANR	3036613	UnaryOperator	*		3036508	0					
ANR	3036614	PtrMemberAccess	s -> sample_buffer		3036508	1					
ANR	3036615	Identifier	s		3036508	0					
ANR	3036616	Identifier	sample_buffer		3036508	1					
ANR	3036617	ForStatement	for ( y = 0 ; y < h ; y ++ )		3036508	8					
ANR	3036618	ForInit	y = 0 ;	29:9:522:527	3036508	0	True				
ANR	3036619	AssignmentExpression	y = 0		3036508	0		=			
ANR	3036620	Identifier	y		3036508	0					
ANR	3036621	PrimaryExpression	0		3036508	1					
ANR	3036622	Condition	y < h	29:16:529:533	3036508	1	True				
ANR	3036623	RelationalExpression	y < h		3036508	0		<			
ANR	3036624	Identifier	y		3036508	0					
ANR	3036625	Identifier	h		3036508	1					
ANR	3036626	PostIncDecOperationExpression	y ++	29:23:536:538	3036508	2	True				
ANR	3036627	Identifier	y		3036508	0					
ANR	3036628	IncDec	++		3036508	1					
ANR	3036629	CompoundStatement		27:28:448:448	3036508	3					
ANR	3036630	ForStatement	for ( i = 0 ; i < ring_size ; i ++ )		3036508	0					
ANR	3036631	ForInit	i = 0 ;	31:13:557:562	3036508	0	True				
ANR	3036632	AssignmentExpression	i = 0		3036508	0		=			
ANR	3036633	Identifier	i		3036508	0					
ANR	3036634	PrimaryExpression	0		3036508	1					
ANR	3036635	Condition	i < ring_size	31:20:564:576	3036508	1	True				
ANR	3036636	RelationalExpression	i < ring_size		3036508	0		<			
ANR	3036637	Identifier	i		3036508	0					
ANR	3036638	Identifier	ring_size		3036508	1					
ANR	3036639	PostIncDecOperationExpression	i ++	31:35:579:581	3036508	2	True				
ANR	3036640	Identifier	i		3036508	0					
ANR	3036641	IncDec	++		3036508	1					
ANR	3036642	ForStatement	for ( p = 0 ; p < MAX_PLANES ; p ++ )		3036508	3					
ANR	3036643	ForInit	p = 0 ;	33:17:602:607	3036508	0	True				
ANR	3036644	AssignmentExpression	p = 0		3036508	0		=			
ANR	3036645	Identifier	p		3036508	0					
ANR	3036646	PrimaryExpression	0		3036508	1					
ANR	3036647	Condition	p < MAX_PLANES	33:24:609:622	3036508	1	True				
ANR	3036648	RelationalExpression	p < MAX_PLANES		3036508	0		<			
ANR	3036649	Identifier	p		3036508	0					
ANR	3036650	Identifier	MAX_PLANES		3036508	1					
ANR	3036651	PostIncDecOperationExpression	p ++	33:40:625:627	3036508	2	True				
ANR	3036652	Identifier	p		3036508	0					
ANR	3036653	IncDec	++		3036508	1					
ANR	3036654	ExpressionStatement	sample [ p ] [ i ] = s -> sample_buffer + p * ring_size * ( w + 6 ) + ( ( h + i - y ) % ring_size ) * ( w + 6 ) + 3	35:16:647:729	3036508	3	True				
ANR	3036655	AssignmentExpression	sample [ p ] [ i ] = s -> sample_buffer + p * ring_size * ( w + 6 ) + ( ( h + i - y ) % ring_size ) * ( w + 6 ) + 3		3036508	0		=			
ANR	3036656	ArrayIndexing	sample [ p ] [ i ]		3036508	0					
ANR	3036657	ArrayIndexing	sample [ p ]		3036508	0					
ANR	3036658	Identifier	sample		3036508	0					
ANR	3036659	Identifier	p		3036508	1					
ANR	3036660	Identifier	i		3036508	1					
ANR	3036661	AdditiveExpression	s -> sample_buffer + p * ring_size * ( w + 6 ) + ( ( h + i - y ) % ring_size ) * ( w + 6 ) + 3		3036508	1		+			
ANR	3036662	PtrMemberAccess	s -> sample_buffer		3036508	0					
ANR	3036663	Identifier	s		3036508	0					
ANR	3036664	Identifier	sample_buffer		3036508	1					
ANR	3036665	AdditiveExpression	p * ring_size * ( w + 6 ) + ( ( h + i - y ) % ring_size ) * ( w + 6 ) + 3		3036508	1		+			
ANR	3036666	MultiplicativeExpression	p * ring_size * ( w + 6 )		3036508	0		*			
ANR	3036667	Identifier	p		3036508	0					
ANR	3036668	MultiplicativeExpression	ring_size * ( w + 6 )		3036508	1		*			
ANR	3036669	Identifier	ring_size		3036508	0					
ANR	3036670	AdditiveExpression	w + 6		3036508	1		+			
ANR	3036671	Identifier	w		3036508	0					
ANR	3036672	PrimaryExpression	6		3036508	1					
ANR	3036673	AdditiveExpression	( ( h + i - y ) % ring_size ) * ( w + 6 ) + 3		3036508	1		+			
ANR	3036674	MultiplicativeExpression	( ( h + i - y ) % ring_size ) * ( w + 6 )		3036508	0		*			
ANR	3036675	MultiplicativeExpression	( h + i - y ) % ring_size		3036508	0		%			
ANR	3036676	AdditiveExpression	h + i - y		3036508	0		+			
ANR	3036677	Identifier	h		3036508	0					
ANR	3036678	AdditiveExpression	i - y		3036508	1		-			
ANR	3036679	Identifier	i		3036508	0					
ANR	3036680	Identifier	y		3036508	1					
ANR	3036681	Identifier	ring_size		3036508	1					
ANR	3036682	AdditiveExpression	w + 6		3036508	1		+			
ANR	3036683	Identifier	w		3036508	0					
ANR	3036684	PrimaryExpression	6		3036508	1					
ANR	3036685	PrimaryExpression	3		3036508	1					
ANR	3036686	ForStatement	for ( x = 0 ; x < w ; x ++ )		3036508	1					
ANR	3036687	ForInit	x = 0 ;	39:13:747:752	3036508	0	True				
ANR	3036688	AssignmentExpression	x = 0		3036508	0		=			
ANR	3036689	Identifier	x		3036508	0					
ANR	3036690	PrimaryExpression	0		3036508	1					
ANR	3036691	Condition	x < w	39:20:754:758	3036508	1	True				
ANR	3036692	RelationalExpression	x < w		3036508	0		<			
ANR	3036693	Identifier	x		3036508	0					
ANR	3036694	Identifier	w		3036508	1					
ANR	3036695	PostIncDecOperationExpression	x ++	39:27:761:763	3036508	2	True				
ANR	3036696	Identifier	x		3036508	0					
ANR	3036697	IncDec	++		3036508	1					
ANR	3036698	CompoundStatement		39:12:688:713	3036508	3					
ANR	3036699	IdentifierDeclStatement	"int b , g , r , av_uninit ( a ) ;"	41:12:781:806	3036508	0	True				
ANR	3036700	IdentifierDecl	b		3036508	0					
ANR	3036701	IdentifierDeclType	int		3036508	0					
ANR	3036702	Identifier	b		3036508	1					
ANR	3036703	IdentifierDecl	g		3036508	1					
ANR	3036704	IdentifierDeclType	int		3036508	0					
ANR	3036705	Identifier	g		3036508	1					
ANR	3036706	IdentifierDecl	r		3036508	2					
ANR	3036707	IdentifierDeclType	int		3036508	0					
ANR	3036708	Identifier	r		3036508	1					
ANR	3036709	IdentifierDecl	av_uninit ( a )		3036508	3					
ANR	3036710	IdentifierDeclType	int		3036508	0					
ANR	3036711	Identifier	av_uninit		3036508	1					
ANR	3036712	Identifier	a		3036508	2					
ANR	3036713	IfStatement	if ( lbd )		3036508	1					
ANR	3036714	Condition	lbd	43:16:825:827	3036508	0	True				
ANR	3036715	Identifier	lbd		3036508	0					
ANR	3036716	CompoundStatement		43:16:756:811	3036508	1					
ANR	3036717	IdentifierDeclStatement	unsigned v = * ( ( uint32_t * ) ( src [ 0 ] + x * 4 + stride [ 0 ] * y ) ) ;	45:16:849:904	3036508	0	True				
ANR	3036718	IdentifierDecl	v = * ( ( uint32_t * ) ( src [ 0 ] + x * 4 + stride [ 0 ] * y ) )		3036508	0					
ANR	3036719	IdentifierDeclType	unsigned		3036508	0					
ANR	3036720	Identifier	v		3036508	1					
ANR	3036721	AssignmentExpression	v = * ( ( uint32_t * ) ( src [ 0 ] + x * 4 + stride [ 0 ] * y ) )		3036508	2		=			
ANR	3036722	Identifier	v		3036508	0					
ANR	3036723	UnaryOperationExpression	* ( ( uint32_t * ) ( src [ 0 ] + x * 4 + stride [ 0 ] * y ) )		3036508	1					
ANR	3036724	UnaryOperator	*		3036508	0					
ANR	3036725	CastExpression	( uint32_t * ) ( src [ 0 ] + x * 4 + stride [ 0 ] * y )		3036508	1					
ANR	3036726	CastTarget	uint32_t *		3036508	0					
ANR	3036727	AdditiveExpression	src [ 0 ] + x * 4 + stride [ 0 ] * y		3036508	1		+			
ANR	3036728	ArrayIndexing	src [ 0 ]		3036508	0					
ANR	3036729	Identifier	src		3036508	0					
ANR	3036730	PrimaryExpression	0		3036508	1					
ANR	3036731	AdditiveExpression	x * 4 + stride [ 0 ] * y		3036508	1		+			
ANR	3036732	MultiplicativeExpression	x * 4		3036508	0		*			
ANR	3036733	Identifier	x		3036508	0					
ANR	3036734	PrimaryExpression	4		3036508	1					
ANR	3036735	MultiplicativeExpression	stride [ 0 ] * y		3036508	1		*			
ANR	3036736	ArrayIndexing	stride [ 0 ]		3036508	0					
ANR	3036737	Identifier	stride		3036508	0					
ANR	3036738	PrimaryExpression	0		3036508	1					
ANR	3036739	Identifier	y		3036508	1					
ANR	3036740	ExpressionStatement	b = v & 0xFF	47:16:923:943	3036508	1	True				
ANR	3036741	AssignmentExpression	b = v & 0xFF		3036508	0		=			
ANR	3036742	Identifier	b		3036508	0					
ANR	3036743	BitAndExpression	v & 0xFF		3036508	1		&			
ANR	3036744	Identifier	v		3036508	0					
ANR	3036745	PrimaryExpression	0xFF		3036508	1					
ANR	3036746	ExpressionStatement	g = ( v >> 8 ) & 0xFF	49:16:962:982	3036508	2	True				
ANR	3036747	AssignmentExpression	g = ( v >> 8 ) & 0xFF		3036508	0		=			
ANR	3036748	Identifier	g		3036508	0					
ANR	3036749	BitAndExpression	( v >> 8 ) & 0xFF		3036508	1		&			
ANR	3036750	ShiftExpression	v >> 8		3036508	0		>>			
ANR	3036751	Identifier	v		3036508	0					
ANR	3036752	PrimaryExpression	8		3036508	1					
ANR	3036753	PrimaryExpression	0xFF		3036508	1					
ANR	3036754	ExpressionStatement	r = ( v >> 16 ) & 0xFF	51:16:1001:1021	3036508	3	True				
ANR	3036755	AssignmentExpression	r = ( v >> 16 ) & 0xFF		3036508	0		=			
ANR	3036756	Identifier	r		3036508	0					
ANR	3036757	BitAndExpression	( v >> 16 ) & 0xFF		3036508	1		&			
ANR	3036758	ShiftExpression	v >> 16		3036508	0		>>			
ANR	3036759	Identifier	v		3036508	0					
ANR	3036760	PrimaryExpression	16		3036508	1					
ANR	3036761	PrimaryExpression	0xFF		3036508	1					
ANR	3036762	ExpressionStatement	a = v >> 24	53:16:1040:1052	3036508	4	True				
ANR	3036763	AssignmentExpression	a = v >> 24		3036508	0		=			
ANR	3036764	Identifier	a		3036508	0					
ANR	3036765	ShiftExpression	v >> 24		3036508	1		>>			
ANR	3036766	Identifier	v		3036508	0					
ANR	3036767	PrimaryExpression	24		3036508	1					
ANR	3036768	ElseStatement	else		3036508	0					
ANR	3036769	CompoundStatement		53:19:981:981	3036508	0					
ANR	3036770	ExpressionStatement	b = * ( ( uint16_t * ) ( src [ 0 ] + x * 2 + stride [ 0 ] * y ) )	57:16:1093:1139	3036508	0	True				
ANR	3036771	AssignmentExpression	b = * ( ( uint16_t * ) ( src [ 0 ] + x * 2 + stride [ 0 ] * y ) )		3036508	0		=			
ANR	3036772	Identifier	b		3036508	0					
ANR	3036773	UnaryOperationExpression	* ( ( uint16_t * ) ( src [ 0 ] + x * 2 + stride [ 0 ] * y ) )		3036508	1					
ANR	3036774	UnaryOperator	*		3036508	0					
ANR	3036775	CastExpression	( uint16_t * ) ( src [ 0 ] + x * 2 + stride [ 0 ] * y )		3036508	1					
ANR	3036776	CastTarget	uint16_t *		3036508	0					
ANR	3036777	AdditiveExpression	src [ 0 ] + x * 2 + stride [ 0 ] * y		3036508	1		+			
ANR	3036778	ArrayIndexing	src [ 0 ]		3036508	0					
ANR	3036779	Identifier	src		3036508	0					
ANR	3036780	PrimaryExpression	0		3036508	1					
ANR	3036781	AdditiveExpression	x * 2 + stride [ 0 ] * y		3036508	1		+			
ANR	3036782	MultiplicativeExpression	x * 2		3036508	0		*			
ANR	3036783	Identifier	x		3036508	0					
ANR	3036784	PrimaryExpression	2		3036508	1					
ANR	3036785	MultiplicativeExpression	stride [ 0 ] * y		3036508	1		*			
ANR	3036786	ArrayIndexing	stride [ 0 ]		3036508	0					
ANR	3036787	Identifier	stride		3036508	0					
ANR	3036788	PrimaryExpression	0		3036508	1					
ANR	3036789	Identifier	y		3036508	1					
ANR	3036790	ExpressionStatement	g = * ( ( uint16_t * ) ( src [ 1 ] + x * 2 + stride [ 1 ] * y ) )	59:16:1158:1204	3036508	1	True				
ANR	3036791	AssignmentExpression	g = * ( ( uint16_t * ) ( src [ 1 ] + x * 2 + stride [ 1 ] * y ) )		3036508	0		=			
ANR	3036792	Identifier	g		3036508	0					
ANR	3036793	UnaryOperationExpression	* ( ( uint16_t * ) ( src [ 1 ] + x * 2 + stride [ 1 ] * y ) )		3036508	1					
ANR	3036794	UnaryOperator	*		3036508	0					
ANR	3036795	CastExpression	( uint16_t * ) ( src [ 1 ] + x * 2 + stride [ 1 ] * y )		3036508	1					
ANR	3036796	CastTarget	uint16_t *		3036508	0					
ANR	3036797	AdditiveExpression	src [ 1 ] + x * 2 + stride [ 1 ] * y		3036508	1		+			
ANR	3036798	ArrayIndexing	src [ 1 ]		3036508	0					
ANR	3036799	Identifier	src		3036508	0					
ANR	3036800	PrimaryExpression	1		3036508	1					
ANR	3036801	AdditiveExpression	x * 2 + stride [ 1 ] * y		3036508	1		+			
ANR	3036802	MultiplicativeExpression	x * 2		3036508	0		*			
ANR	3036803	Identifier	x		3036508	0					
ANR	3036804	PrimaryExpression	2		3036508	1					
ANR	3036805	MultiplicativeExpression	stride [ 1 ] * y		3036508	1		*			
ANR	3036806	ArrayIndexing	stride [ 1 ]		3036508	0					
ANR	3036807	Identifier	stride		3036508	0					
ANR	3036808	PrimaryExpression	1		3036508	1					
ANR	3036809	Identifier	y		3036508	1					
ANR	3036810	ExpressionStatement	r = * ( ( uint16_t * ) ( src [ 2 ] + x * 2 + stride [ 2 ] * y ) )	61:16:1223:1269	3036508	2	True				
ANR	3036811	AssignmentExpression	r = * ( ( uint16_t * ) ( src [ 2 ] + x * 2 + stride [ 2 ] * y ) )		3036508	0		=			
ANR	3036812	Identifier	r		3036508	0					
ANR	3036813	UnaryOperationExpression	* ( ( uint16_t * ) ( src [ 2 ] + x * 2 + stride [ 2 ] * y ) )		3036508	1					
ANR	3036814	UnaryOperator	*		3036508	0					
ANR	3036815	CastExpression	( uint16_t * ) ( src [ 2 ] + x * 2 + stride [ 2 ] * y )		3036508	1					
ANR	3036816	CastTarget	uint16_t *		3036508	0					
ANR	3036817	AdditiveExpression	src [ 2 ] + x * 2 + stride [ 2 ] * y		3036508	1		+			
ANR	3036818	ArrayIndexing	src [ 2 ]		3036508	0					
ANR	3036819	Identifier	src		3036508	0					
ANR	3036820	PrimaryExpression	2		3036508	1					
ANR	3036821	AdditiveExpression	x * 2 + stride [ 2 ] * y		3036508	1		+			
ANR	3036822	MultiplicativeExpression	x * 2		3036508	0		*			
ANR	3036823	Identifier	x		3036508	0					
ANR	3036824	PrimaryExpression	2		3036508	1					
ANR	3036825	MultiplicativeExpression	stride [ 2 ] * y		3036508	1		*			
ANR	3036826	ArrayIndexing	stride [ 2 ]		3036508	0					
ANR	3036827	Identifier	stride		3036508	0					
ANR	3036828	PrimaryExpression	2		3036508	1					
ANR	3036829	Identifier	y		3036508	1					
ANR	3036830	ExpressionStatement	b -= g	67:12:1301:1307	3036508	2	True				
ANR	3036831	AssignmentExpression	b -= g		3036508	0		-=			
ANR	3036832	Identifier	b		3036508	0					
ANR	3036833	Identifier	g		3036508	1					
ANR	3036834	ExpressionStatement	r -= g	69:12:1322:1328	3036508	3	True				
ANR	3036835	AssignmentExpression	r -= g		3036508	0		-=			
ANR	3036836	Identifier	r		3036508	0					
ANR	3036837	Identifier	g		3036508	1					
ANR	3036838	ExpressionStatement	g += ( b + r ) >> 2	71:12:1343:1360	3036508	4	True				
ANR	3036839	AssignmentExpression	g += ( b + r ) >> 2		3036508	0		+=			
ANR	3036840	Identifier	g		3036508	0					
ANR	3036841	ShiftExpression	( b + r ) >> 2		3036508	1		>>			
ANR	3036842	AdditiveExpression	b + r		3036508	0		+			
ANR	3036843	Identifier	b		3036508	0					
ANR	3036844	Identifier	r		3036508	1					
ANR	3036845	PrimaryExpression	2		3036508	1					
ANR	3036846	ExpressionStatement	b += offset	73:12:1375:1386	3036508	5	True				
ANR	3036847	AssignmentExpression	b += offset		3036508	0		+=			
ANR	3036848	Identifier	b		3036508	0					
ANR	3036849	Identifier	offset		3036508	1					
ANR	3036850	ExpressionStatement	r += offset	75:12:1401:1412	3036508	6	True				
ANR	3036851	AssignmentExpression	r += offset		3036508	0		+=			
ANR	3036852	Identifier	r		3036508	0					
ANR	3036853	Identifier	offset		3036508	1					
ANR	3036854	ExpressionStatement	sample [ 0 ] [ 0 ] [ x ] = g	79:12:1429:1448	3036508	7	True				
ANR	3036855	AssignmentExpression	sample [ 0 ] [ 0 ] [ x ] = g		3036508	0		=			
ANR	3036856	ArrayIndexing	sample [ 0 ] [ 0 ] [ x ]		3036508	0					
ANR	3036857	ArrayIndexing	sample [ 0 ] [ 0 ]		3036508	0					
ANR	3036858	ArrayIndexing	sample [ 0 ]		3036508	0					
ANR	3036859	Identifier	sample		3036508	0					
ANR	3036860	PrimaryExpression	0		3036508	1					
ANR	3036861	PrimaryExpression	0		3036508	1					
ANR	3036862	Identifier	x		3036508	1					
ANR	3036863	Identifier	g		3036508	1					
ANR	3036864	ExpressionStatement	sample [ 1 ] [ 0 ] [ x ] = b	81:12:1463:1482	3036508	8	True				
ANR	3036865	AssignmentExpression	sample [ 1 ] [ 0 ] [ x ] = b		3036508	0		=			
ANR	3036866	ArrayIndexing	sample [ 1 ] [ 0 ] [ x ]		3036508	0					
ANR	3036867	ArrayIndexing	sample [ 1 ] [ 0 ]		3036508	0					
ANR	3036868	ArrayIndexing	sample [ 1 ]		3036508	0					
ANR	3036869	Identifier	sample		3036508	0					
ANR	3036870	PrimaryExpression	1		3036508	1					
ANR	3036871	PrimaryExpression	0		3036508	1					
ANR	3036872	Identifier	x		3036508	1					
ANR	3036873	Identifier	b		3036508	1					
ANR	3036874	ExpressionStatement	sample [ 2 ] [ 0 ] [ x ] = r	83:12:1497:1516	3036508	9	True				
ANR	3036875	AssignmentExpression	sample [ 2 ] [ 0 ] [ x ] = r		3036508	0		=			
ANR	3036876	ArrayIndexing	sample [ 2 ] [ 0 ] [ x ]		3036508	0					
ANR	3036877	ArrayIndexing	sample [ 2 ] [ 0 ]		3036508	0					
ANR	3036878	ArrayIndexing	sample [ 2 ]		3036508	0					
ANR	3036879	Identifier	sample		3036508	0					
ANR	3036880	PrimaryExpression	2		3036508	1					
ANR	3036881	PrimaryExpression	0		3036508	1					
ANR	3036882	Identifier	x		3036508	1					
ANR	3036883	Identifier	r		3036508	1					
ANR	3036884	ExpressionStatement	sample [ 3 ] [ 0 ] [ x ] = a	85:12:1531:1550	3036508	10	True				
ANR	3036885	AssignmentExpression	sample [ 3 ] [ 0 ] [ x ] = a		3036508	0		=			
ANR	3036886	ArrayIndexing	sample [ 3 ] [ 0 ] [ x ]		3036508	0					
ANR	3036887	ArrayIndexing	sample [ 3 ] [ 0 ]		3036508	0					
ANR	3036888	ArrayIndexing	sample [ 3 ]		3036508	0					
ANR	3036889	Identifier	sample		3036508	0					
ANR	3036890	PrimaryExpression	3		3036508	1					
ANR	3036891	PrimaryExpression	0		3036508	1					
ANR	3036892	Identifier	x		3036508	1					
ANR	3036893	Identifier	a		3036508	1					
ANR	3036894	ForStatement	for ( p = 0 ; p < 3 + s -> transparency ; p ++ )		3036508	2					
ANR	3036895	ForInit	p = 0 ;	89:13:1577:1582	3036508	0	True				
ANR	3036896	AssignmentExpression	p = 0		3036508	0		=			
ANR	3036897	Identifier	p		3036508	0					
ANR	3036898	PrimaryExpression	0		3036508	1					
ANR	3036899	Condition	p < 3 + s -> transparency	89:20:1584:1606	3036508	1	True				
ANR	3036900	RelationalExpression	p < 3 + s -> transparency		3036508	0		<			
ANR	3036901	Identifier	p		3036508	0					
ANR	3036902	AdditiveExpression	3 + s -> transparency		3036508	1		+			
ANR	3036903	PrimaryExpression	3		3036508	0					
ANR	3036904	PtrMemberAccess	s -> transparency		3036508	1					
ANR	3036905	Identifier	s		3036508	0					
ANR	3036906	Identifier	transparency		3036508	1					
ANR	3036907	PostIncDecOperationExpression	p ++	89:45:1609:1611	3036508	2	True				
ANR	3036908	Identifier	p		3036508	0					
ANR	3036909	IncDec	++		3036508	1					
ANR	3036910	CompoundStatement		87:50:1521:1521	3036508	3					
ANR	3036911	ExpressionStatement	sample [ p ] [ 0 ] [ - 1 ] = sample [ p ] [ 1 ] [ 0 ]	91:12:1629:1665	3036508	0	True				
ANR	3036912	AssignmentExpression	sample [ p ] [ 0 ] [ - 1 ] = sample [ p ] [ 1 ] [ 0 ]		3036508	0		=			
ANR	3036913	ArrayIndexing	sample [ p ] [ 0 ] [ - 1 ]		3036508	0					
ANR	3036914	ArrayIndexing	sample [ p ] [ 0 ]		3036508	0					
ANR	3036915	ArrayIndexing	sample [ p ]		3036508	0					
ANR	3036916	Identifier	sample		3036508	0					
ANR	3036917	Identifier	p		3036508	1					
ANR	3036918	PrimaryExpression	0		3036508	1					
ANR	3036919	UnaryOperationExpression	- 1		3036508	1					
ANR	3036920	UnaryOperator	-		3036508	0					
ANR	3036921	PrimaryExpression	1		3036508	1					
ANR	3036922	ArrayIndexing	sample [ p ] [ 1 ] [ 0 ]		3036508	1					
ANR	3036923	ArrayIndexing	sample [ p ] [ 1 ]		3036508	0					
ANR	3036924	ArrayIndexing	sample [ p ]		3036508	0					
ANR	3036925	Identifier	sample		3036508	0					
ANR	3036926	Identifier	p		3036508	1					
ANR	3036927	PrimaryExpression	1		3036508	1					
ANR	3036928	PrimaryExpression	0		3036508	1					
ANR	3036929	ExpressionStatement	sample [ p ] [ 1 ] [ w ] = sample [ p ] [ 1 ] [ w - 1 ]	93:12:1680:1716	3036508	1	True				
ANR	3036930	AssignmentExpression	sample [ p ] [ 1 ] [ w ] = sample [ p ] [ 1 ] [ w - 1 ]		3036508	0		=			
ANR	3036931	ArrayIndexing	sample [ p ] [ 1 ] [ w ]		3036508	0					
ANR	3036932	ArrayIndexing	sample [ p ] [ 1 ]		3036508	0					
ANR	3036933	ArrayIndexing	sample [ p ]		3036508	0					
ANR	3036934	Identifier	sample		3036508	0					
ANR	3036935	Identifier	p		3036508	1					
ANR	3036936	PrimaryExpression	1		3036508	1					
ANR	3036937	Identifier	w		3036508	1					
ANR	3036938	ArrayIndexing	sample [ p ] [ 1 ] [ w - 1 ]		3036508	1					
ANR	3036939	ArrayIndexing	sample [ p ] [ 1 ]		3036508	0					
ANR	3036940	ArrayIndexing	sample [ p ]		3036508	0					
ANR	3036941	Identifier	sample		3036508	0					
ANR	3036942	Identifier	p		3036508	1					
ANR	3036943	PrimaryExpression	1		3036508	1					
ANR	3036944	AdditiveExpression	w - 1		3036508	1		-			
ANR	3036945	Identifier	w		3036508	0					
ANR	3036946	PrimaryExpression	1		3036508	1					
ANR	3036947	IfStatement	if ( lbd )		3036508	2					
ANR	3036948	Condition	lbd	95:16:1735:1737	3036508	0	True				
ANR	3036949	Identifier	lbd		3036508	0					
ANR	3036950	ExpressionStatement	"encode_line ( s , w , sample [ p ] , ( p + 1 ) / 2 , 9 )"	97:16:1757:1801	3036508	1	True				
ANR	3036951	CallExpression	"encode_line ( s , w , sample [ p ] , ( p + 1 ) / 2 , 9 )"		3036508	0					
ANR	3036952	Callee	encode_line		3036508	0					
ANR	3036953	Identifier	encode_line		3036508	0					
ANR	3036954	ArgumentList	s		3036508	1					
ANR	3036955	Argument	s		3036508	0					
ANR	3036956	Identifier	s		3036508	0					
ANR	3036957	Argument	w		3036508	1					
ANR	3036958	Identifier	w		3036508	0					
ANR	3036959	Argument	sample [ p ]		3036508	2					
ANR	3036960	ArrayIndexing	sample [ p ]		3036508	0					
ANR	3036961	Identifier	sample		3036508	0					
ANR	3036962	Identifier	p		3036508	1					
ANR	3036963	Argument	( p + 1 ) / 2		3036508	3					
ANR	3036964	MultiplicativeExpression	( p + 1 ) / 2		3036508	0		/			
ANR	3036965	AdditiveExpression	p + 1		3036508	0		+			
ANR	3036966	Identifier	p		3036508	0					
ANR	3036967	PrimaryExpression	1		3036508	1					
ANR	3036968	PrimaryExpression	2		3036508	1					
ANR	3036969	Argument	9		3036508	4					
ANR	3036970	PrimaryExpression	9		3036508	0					
ANR	3036971	ElseStatement	else		3036508	0					
ANR	3036972	ExpressionStatement	"encode_line ( s , w , sample [ p ] , ( p + 1 ) / 2 , bits + 1 )"	101:16:1838:1889	3036508	0	True				
ANR	3036973	CallExpression	"encode_line ( s , w , sample [ p ] , ( p + 1 ) / 2 , bits + 1 )"		3036508	0					
ANR	3036974	Callee	encode_line		3036508	0					
ANR	3036975	Identifier	encode_line		3036508	0					
ANR	3036976	ArgumentList	s		3036508	1					
ANR	3036977	Argument	s		3036508	0					
ANR	3036978	Identifier	s		3036508	0					
ANR	3036979	Argument	w		3036508	1					
ANR	3036980	Identifier	w		3036508	0					
ANR	3036981	Argument	sample [ p ]		3036508	2					
ANR	3036982	ArrayIndexing	sample [ p ]		3036508	0					
ANR	3036983	Identifier	sample		3036508	0					
ANR	3036984	Identifier	p		3036508	1					
ANR	3036985	Argument	( p + 1 ) / 2		3036508	3					
ANR	3036986	MultiplicativeExpression	( p + 1 ) / 2		3036508	0		/			
ANR	3036987	AdditiveExpression	p + 1		3036508	0		+			
ANR	3036988	Identifier	p		3036508	0					
ANR	3036989	PrimaryExpression	1		3036508	1					
ANR	3036990	PrimaryExpression	2		3036508	1					
ANR	3036991	Argument	bits + 1		3036508	4					
ANR	3036992	AdditiveExpression	bits + 1		3036508	0		+			
ANR	3036993	Identifier	bits		3036508	0					
ANR	3036994	PrimaryExpression	1		3036508	1					
ANR	3036995	ReturnType	static void		3036508	1					
ANR	3036996	Identifier	encode_rgb_frame		3036508	2					
ANR	3036997	ParameterList	"FFV1Context * s , uint8_t * src [ 3 ] , int w , int h , int stride [ 3 ]"		3036508	3					
ANR	3036998	Parameter	FFV1Context * s	1:29:29:42	3036508	0	True				
ANR	3036999	ParameterType	FFV1Context *		3036508	0					
ANR	3037000	Identifier	s		3036508	1					
ANR	3037001	Parameter	uint8_t * src [ 3 ]	1:45:45:59	3036508	1	True				
ANR	3037002	ParameterType	uint8_t * [ 3 ]		3036508	0					
ANR	3037003	Identifier	src		3036508	1					
ANR	3037004	Parameter	int w	1:62:62:66	3036508	2	True				
ANR	3037005	ParameterType	int		3036508	0					
ANR	3037006	Identifier	w		3036508	1					
ANR	3037007	Parameter	int h	1:69:69:73	3036508	3	True				
ANR	3037008	ParameterType	int		3036508	0					
ANR	3037009	Identifier	h		3036508	1					
ANR	3037010	Parameter	int stride [ 3 ]	1:76:76:88	3036508	4	True				
ANR	3037011	ParameterType	int [ 3 ]		3036508	0					
ANR	3037012	Identifier	stride		3036508	1					
ANR	3037013	CFGEntryNode	ENTRY		3036508		True				
ANR	3037014	CFGExitNode	EXIT		3036508		True				
ANR	3037015	Symbol	* stride		3036508						
ANR	3037016	Symbol	* w		3036508						
ANR	3037017	Symbol	* x		3036508						
ANR	3037018	Symbol	* y		3036508						
ANR	3037019	Symbol	stride		3036508						
ANR	3037020	Symbol	* * sample		3036508						
ANR	3037021	Symbol	* ( ( uint16_t * ) ( src [ 1 ] + x * 2 + stride [ 1 ] * y ) )		3036508						
ANR	3037022	Symbol	* src		3036508						
ANR	3037023	Symbol	s -> transparency		3036508						
ANR	3037024	Symbol	* ( ( uint32_t * ) ( src [ 0 ] + x * 4 + stride [ 0 ] * y ) )		3036508						
ANR	3037025	Symbol	* * * sample		3036508						
ANR	3037026	Symbol	s -> sample_buffer		3036508						
ANR	3037027	Symbol	* ( ( uint16_t * ) ( src [ 2 ] + x * 2 + stride [ 2 ] * y ) )		3036508						
ANR	3037028	Symbol	* s -> avctx		3036508						
ANR	3037029	Symbol	offset		3036508						
ANR	3037030	Symbol	bits		3036508						
ANR	3037031	Symbol	lbd		3036508						
ANR	3037032	Symbol	* * * p		3036508						
ANR	3037033	Symbol	* * src		3036508						
ANR	3037034	Symbol	s -> avctx		3036508						
ANR	3037035	Symbol	* s -> sample_buffer		3036508						
ANR	3037036	Symbol	ring_size		3036508						
ANR	3037037	Symbol	s -> run_index		3036508						
ANR	3037038	Symbol	MAX_PLANES		3036508						
ANR	3037039	Symbol	* * s		3036508						
ANR	3037040	Symbol	s -> bits_per_raw_sample		3036508						
ANR	3037041	Symbol	* * p		3036508						
ANR	3037042	Symbol	* sample		3036508						
ANR	3037043	Symbol	a		3036508						
ANR	3037044	Symbol	b		3036508						
ANR	3037045	Symbol	src		3036508						
ANR	3037046	Symbol	g		3036508						
ANR	3037047	Symbol	h		3036508						
ANR	3037048	Symbol	i		3036508						
ANR	3037049	Symbol	* ( ( uint16_t * ) ( src [ 0 ] + x * 2 + stride [ 0 ] * y ) )		3036508						
ANR	3037050	Symbol	sample		3036508						
ANR	3037051	Symbol	* * stride		3036508						
ANR	3037052	Symbol	p		3036508						
ANR	3037053	Symbol	s -> avctx -> context_model		3036508						
ANR	3037054	Symbol	r		3036508						
ANR	3037055	Symbol	s		3036508						
ANR	3037056	Symbol	* i		3036508						
ANR	3037057	Symbol	v		3036508						
ANR	3037058	Symbol	w		3036508						
ANR	3037059	Symbol	x		3036508						
ANR	3037060	Symbol	y		3036508						
ANR	3037061	Symbol	* p		3036508						
ANR	3037062	Symbol	av_uninit		3036508						
ANR	3037063	Symbol	* s		3036508						
