command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4850494	File	/home/p4ultr4n/workplace/ReVeal/raw_code/img_resize_1.c								
ANR	4850495	Function	img_resize	1:0:0:3859							
ANR	4850496	FunctionDef	"img_resize (int argc , char * * argv)"		4850495	0					
ANR	4850497	CompoundStatement		3:0:46:3859	4850495	0					
ANR	4850498	IdentifierDeclStatement	Error * err = NULL ;	5:4:53:70	4850495	0	True				
ANR	4850499	IdentifierDecl	* err = NULL		4850495	0					
ANR	4850500	IdentifierDeclType	Error *		4850495	0					
ANR	4850501	Identifier	err		4850495	1					
ANR	4850502	AssignmentExpression	* err = NULL		4850495	2		=			
ANR	4850503	Identifier	NULL		4850495	0					
ANR	4850504	Identifier	NULL		4850495	1					
ANR	4850505	IdentifierDeclStatement	"int c , ret , relative ;"	7:4:77:97	4850495	1	True				
ANR	4850506	IdentifierDecl	c		4850495	0					
ANR	4850507	IdentifierDeclType	int		4850495	0					
ANR	4850508	Identifier	c		4850495	1					
ANR	4850509	IdentifierDecl	ret		4850495	1					
ANR	4850510	IdentifierDeclType	int		4850495	0					
ANR	4850511	Identifier	ret		4850495	1					
ANR	4850512	IdentifierDecl	relative		4850495	2					
ANR	4850513	IdentifierDeclType	int		4850495	0					
ANR	4850514	Identifier	relative		4850495	1					
ANR	4850515	IdentifierDeclStatement	"const char * filename , * fmt , * size ;"	9:4:104:137	4850495	2	True				
ANR	4850516	IdentifierDecl	* filename		4850495	0					
ANR	4850517	IdentifierDeclType	const char *		4850495	0					
ANR	4850518	Identifier	filename		4850495	1					
ANR	4850519	IdentifierDecl	* fmt		4850495	1					
ANR	4850520	IdentifierDeclType	const char *		4850495	0					
ANR	4850521	Identifier	fmt		4850495	1					
ANR	4850522	IdentifierDecl	* size		4850495	2					
ANR	4850523	IdentifierDeclType	const char *		4850495	0					
ANR	4850524	Identifier	size		4850495	1					
ANR	4850525	IdentifierDeclStatement	"int64_t n , total_size ;"	11:4:144:165	4850495	3	True				
ANR	4850526	IdentifierDecl	n		4850495	0					
ANR	4850527	IdentifierDeclType	int64_t		4850495	0					
ANR	4850528	Identifier	n		4850495	1					
ANR	4850529	IdentifierDecl	total_size		4850495	1					
ANR	4850530	IdentifierDeclType	int64_t		4850495	0					
ANR	4850531	Identifier	total_size		4850495	1					
ANR	4850532	IdentifierDeclStatement	bool quiet = false ;	13:4:172:190	4850495	4	True				
ANR	4850533	IdentifierDecl	quiet = false		4850495	0					
ANR	4850534	IdentifierDeclType	bool		4850495	0					
ANR	4850535	Identifier	quiet		4850495	1					
ANR	4850536	AssignmentExpression	quiet = false		4850495	2		=			
ANR	4850537	Identifier	false		4850495	0					
ANR	4850538	Identifier	false		4850495	1					
ANR	4850539	IdentifierDeclStatement	BlockBackend * blk = NULL ;	15:4:197:221	4850495	5	True				
ANR	4850540	IdentifierDecl	* blk = NULL		4850495	0					
ANR	4850541	IdentifierDeclType	BlockBackend *		4850495	0					
ANR	4850542	Identifier	blk		4850495	1					
ANR	4850543	AssignmentExpression	* blk = NULL		4850495	2		=			
ANR	4850544	Identifier	NULL		4850495	0					
ANR	4850545	Identifier	NULL		4850495	1					
ANR	4850546	IdentifierDeclStatement	QemuOpts * param ;	17:4:228:243	4850495	6	True				
ANR	4850547	IdentifierDecl	* param		4850495	0					
ANR	4850548	IdentifierDeclType	QemuOpts *		4850495	0					
ANR	4850549	Identifier	param		4850495	1					
ANR	4850550	Statement	static	21:4:252:257	4850495	7	True				
ANR	4850551	Statement	QemuOptsList	21:11:259:270	4850495	8	True				
ANR	4850552	Statement	resize_options	21:24:272:285	4850495	9	True				
ANR	4850553	Statement	=	21:39:287:287	4850495	10	True				
ANR	4850554	CompoundStatement		19:41:242:242	4850495	11					
ANR	4850555	Statement	.	23:8:300:300	4850495	0	True				
ANR	4850556	Statement	name	23:9:301:304	4850495	1	True				
ANR	4850557	Statement	=	23:14:306:306	4850495	2	True				
ANR	4850558	Statement	"""resize_options"""	23:16:308:323	4850495	3	True				
ANR	4850559	Statement	","	23:32:324:324	4850495	4	True				
ANR	4850560	Statement	.	25:8:335:335	4850495	5	True				
ANR	4850561	Statement	head	25:9:336:339	4850495	6	True				
ANR	4850562	Statement	=	25:14:341:341	4850495	7	True				
ANR	4850563	Statement	QTAILQ_HEAD_INITIALIZER	25:16:343:365	4850495	8	True				
ANR	4850564	Statement	(	25:39:366:366	4850495	9	True				
ANR	4850565	Statement	resize_options	25:40:367:380	4850495	10	True				
ANR	4850566	Statement	.	25:54:381:381	4850495	11	True				
ANR	4850567	Statement	head	25:55:382:385	4850495	12	True				
ANR	4850568	Statement	)	25:59:386:386	4850495	13	True				
ANR	4850569	Statement	","	25:60:387:387	4850495	14	True				
ANR	4850570	Statement	.	27:8:398:398	4850495	15	True				
ANR	4850571	Statement	desc	27:9:399:402	4850495	16	True				
ANR	4850572	Statement	=	27:14:404:404	4850495	17	True				
ANR	4850573	CompoundStatement		25:16:359:359	4850495	18					
ANR	4850574	CompoundStatement		27:12:374:374	4850495	0					
ANR	4850575	Statement	.	31:16:440:440	4850495	0	True				
ANR	4850576	Statement	name	31:17:441:444	4850495	1	True				
ANR	4850577	Statement	=	31:22:446:446	4850495	2	True				
ANR	4850578	Statement	BLOCK_OPT_SIZE	31:24:448:461	4850495	3	True				
ANR	4850579	Statement	","	31:38:462:462	4850495	4	True				
ANR	4850580	Statement	.	33:16:481:481	4850495	5	True				
ANR	4850581	Statement	type	33:17:482:485	4850495	6	True				
ANR	4850582	Statement	=	33:22:487:487	4850495	7	True				
ANR	4850583	Statement	QEMU_OPT_SIZE	33:24:489:501	4850495	8	True				
ANR	4850584	Statement	","	33:37:502:502	4850495	9	True				
ANR	4850585	Statement	.	35:16:521:521	4850495	10	True				
ANR	4850586	Statement	help	35:17:522:525	4850495	11	True				
ANR	4850587	Statement	=	35:22:527:527	4850495	12	True				
ANR	4850588	Statement	"""Virtual disk size"""	35:24:529:547	4850495	13	True				
ANR	4850589	Statement	","	37:13:563:563	4850495	1	True				
ANR	4850590	CompoundStatement		35:15:518:518	4850495	2					
ANR	4850591	Statement	","	43:9:627:627	4850495	19	True				
ANR	4850592	ExpressionStatement		45:5:635:635	4850495	12	True				
ANR	4850593	IdentifierDeclStatement	bool image_opts = false ;	47:4:642:665	4850495	13	True				
ANR	4850594	IdentifierDecl	image_opts = false		4850495	0					
ANR	4850595	IdentifierDeclType	bool		4850495	0					
ANR	4850596	Identifier	image_opts		4850495	1					
ANR	4850597	AssignmentExpression	image_opts = false		4850495	2		=			
ANR	4850598	Identifier	false		4850495	0					
ANR	4850599	Identifier	false		4850495	1					
ANR	4850600	IfStatement	if ( argc < 3 )		4850495	14					
ANR	4850601	Condition	argc < 3	55:8:791:798	4850495	0	True				
ANR	4850602	RelationalExpression	argc < 3		4850495	0		<			
ANR	4850603	Identifier	argc		4850495	0					
ANR	4850604	PrimaryExpression	3		4850495	1					
ANR	4850605	CompoundStatement		53:18:754:754	4850495	1					
ANR	4850606	ExpressionStatement	"error_exit ( ""Not enough arguments"" )"	57:8:812:846	4850495	0	True				
ANR	4850607	CallExpression	"error_exit ( ""Not enough arguments"" )"		4850495	0					
ANR	4850608	Callee	error_exit		4850495	0					
ANR	4850609	Identifier	error_exit		4850495	0					
ANR	4850610	ArgumentList	"""Not enough arguments"""		4850495	1					
ANR	4850611	Argument	"""Not enough arguments"""		4850495	0					
ANR	4850612	PrimaryExpression	"""Not enough arguments"""		4850495	0					
ANR	4850613	ReturnStatement	return 1 ;	59:8:857:865	4850495	1	True				
ANR	4850614	PrimaryExpression	1		4850495	0					
ANR	4850615	ExpressionStatement	size = argv [ -- argc ]	65:4:881:900	4850495	15	True				
ANR	4850616	AssignmentExpression	size = argv [ -- argc ]		4850495	0		=			
ANR	4850617	Identifier	size		4850495	0					
ANR	4850618	ArrayIndexing	argv [ -- argc ]		4850495	1					
ANR	4850619	Identifier	argv		4850495	0					
ANR	4850620	UnaryExpression	-- argc		4850495	1					
ANR	4850621	IncDec	--		4850495	0					
ANR	4850622	Identifier	argc		4850495	1					
ANR	4850623	ExpressionStatement	fmt = NULL	71:4:943:953	4850495	16	True				
ANR	4850624	AssignmentExpression	fmt = NULL		4850495	0		=			
ANR	4850625	Identifier	fmt		4850495	0					
ANR	4850626	Identifier	NULL		4850495	1					
ANR	4850627	ForStatement	for ( ; ; )		4850495	17					
ANR	4850628	CompoundStatement		73:15:939:1184	4850495	0					
ANR	4850629	Statement	static	75:8:979:984	4850495	0	True				
ANR	4850630	IdentifierDeclStatement	"const struct option long_options [ ] = { { ""help"" , no_argument , 0 , 'h' } , { ""object"" , required_argument , 0 , OPTION_OBJECT } , { ""image-opts"" , no_argument , 0 , OPTION_IMAGE_OPTS } , { 0 , 0 , 0 , 0 } } ;"	75:15:986:1231	4850495	1	True				
ANR	4850631	IdentifierDecl	"long_options [ ] = { { ""help"" , no_argument , 0 , 'h' } , { ""object"" , required_argument , 0 , OPTION_OBJECT } , { ""image-opts"" , no_argument , 0 , OPTION_IMAGE_OPTS } , { 0 , 0 , 0 , 0 } }"		4850495	0					
ANR	4850632	IdentifierDeclType	const struct option [ ]		4850495	0					
ANR	4850633	Identifier	long_options		4850495	1					
ANR	4850634	AssignmentExpression	"long_options [ ] = { { ""help"" , no_argument , 0 , 'h' } , { ""object"" , required_argument , 0 , OPTION_OBJECT } , { ""image-opts"" , no_argument , 0 , OPTION_IMAGE_OPTS } , { 0 , 0 , 0 , 0 } }"		4850495	2		=			
ANR	4850635	Identifier	long_options		4850495	0					
ANR	4850636	InitializerList	"""help"""		4850495	1					
ANR	4850637	InitializerList	"""help"""		4850495	0					
ANR	4850638	PrimaryExpression	"""help"""		4850495	0					
ANR	4850639	Identifier	no_argument		4850495	1					
ANR	4850640	PrimaryExpression	0		4850495	2					
ANR	4850641	PrimaryExpression	'h'		4850495	3					
ANR	4850642	InitializerList	"""object"""		4850495	1					
ANR	4850643	PrimaryExpression	"""object"""		4850495	0					
ANR	4850644	Identifier	required_argument		4850495	1					
ANR	4850645	PrimaryExpression	0		4850495	2					
ANR	4850646	Identifier	OPTION_OBJECT		4850495	3					
ANR	4850647	InitializerList	"""image-opts"""		4850495	2					
ANR	4850648	PrimaryExpression	"""image-opts"""		4850495	0					
ANR	4850649	Identifier	no_argument		4850495	1					
ANR	4850650	PrimaryExpression	0		4850495	2					
ANR	4850651	Identifier	OPTION_IMAGE_OPTS		4850495	3					
ANR	4850652	InitializerList	0		4850495	3					
ANR	4850653	PrimaryExpression	0		4850495	0					
ANR	4850654	PrimaryExpression	0		4850495	1					
ANR	4850655	PrimaryExpression	0		4850495	2					
ANR	4850656	PrimaryExpression	0		4850495	3					
ANR	4850657	ExpressionStatement	"c = getopt_long ( argc , argv , ""f:hq"" , long_options , NULL )"	87:8:1242:1322	4850495	2	True				
ANR	4850658	AssignmentExpression	"c = getopt_long ( argc , argv , ""f:hq"" , long_options , NULL )"		4850495	0		=			
ANR	4850659	Identifier	c		4850495	0					
ANR	4850660	CallExpression	"getopt_long ( argc , argv , ""f:hq"" , long_options , NULL )"		4850495	1					
ANR	4850661	Callee	getopt_long		4850495	0					
ANR	4850662	Identifier	getopt_long		4850495	0					
ANR	4850663	ArgumentList	argc		4850495	1					
ANR	4850664	Argument	argc		4850495	0					
ANR	4850665	Identifier	argc		4850495	0					
ANR	4850666	Argument	argv		4850495	1					
ANR	4850667	Identifier	argv		4850495	0					
ANR	4850668	Argument	"""f:hq"""		4850495	2					
ANR	4850669	PrimaryExpression	"""f:hq"""		4850495	0					
ANR	4850670	Argument	long_options		4850495	3					
ANR	4850671	Identifier	long_options		4850495	0					
ANR	4850672	Argument	NULL		4850495	4					
ANR	4850673	Identifier	NULL		4850495	0					
ANR	4850674	IfStatement	if ( c == - 1 )		4850495	3					
ANR	4850675	Condition	c == - 1	91:12:1337:1343	4850495	0	True				
ANR	4850676	EqualityExpression	c == - 1		4850495	0		==			
ANR	4850677	Identifier	c		4850495	0					
ANR	4850678	UnaryOperationExpression	- 1		4850495	1					
ANR	4850679	UnaryOperator	-		4850495	0					
ANR	4850680	PrimaryExpression	1		4850495	1					
ANR	4850681	CompoundStatement		89:21:1299:1299	4850495	1					
ANR	4850682	BreakStatement	break ;	93:12:1361:1366	4850495	0	True				
ANR	4850683	SwitchStatement	switch ( c )		4850495	4					
ANR	4850684	Condition	c	97:15:1395:1395	4850495	0	True				
ANR	4850685	Identifier	c		4850495	0					
ANR	4850686	CompoundStatement		95:18:1351:1351	4850495	1					
ANR	4850687	Label	case '?' :	99:8:1409:1417	4850495	0	True				
ANR	4850688	Label	case 'h' :	101:8:1428:1436	4850495	1	True				
ANR	4850689	ExpressionStatement	help ( )	103:12:1451:1457	4850495	2	True				
ANR	4850690	CallExpression	help ( )		4850495	0					
ANR	4850691	Callee	help		4850495	0					
ANR	4850692	Identifier	help		4850495	0					
ANR	4850693	ArgumentList			4850495	1					
ANR	4850694	BreakStatement	break ;	105:12:1472:1477	4850495	3	True				
ANR	4850695	Label	case 'f' :	107:8:1488:1496	4850495	4	True				
ANR	4850696	ExpressionStatement	fmt = optarg	109:12:1511:1523	4850495	5	True				
ANR	4850697	AssignmentExpression	fmt = optarg		4850495	0		=			
ANR	4850698	Identifier	fmt		4850495	0					
ANR	4850699	Identifier	optarg		4850495	1					
ANR	4850700	BreakStatement	break ;	111:12:1538:1543	4850495	6	True				
ANR	4850701	Label	case 'q' :	113:8:1554:1562	4850495	7	True				
ANR	4850702	ExpressionStatement	quiet = true	115:12:1577:1589	4850495	8	True				
ANR	4850703	AssignmentExpression	quiet = true		4850495	0		=			
ANR	4850704	Identifier	quiet		4850495	0					
ANR	4850705	Identifier	true		4850495	1					
ANR	4850706	BreakStatement	break ;	117:12:1604:1609	4850495	9	True				
ANR	4850707	Label	case OPTION_OBJECT :	119:8:1620:1638	4850495	10	True				
ANR	4850708	Identifier	OPTION_OBJECT		4850495	0					
ANR	4850709	CompoundStatement		119:12:1608:1622	4850495	11					
ANR	4850710	IdentifierDeclStatement	QemuOpts * opts ;	121:12:1655:1669	4850495	0	True				
ANR	4850711	IdentifierDecl	* opts		4850495	0					
ANR	4850712	IdentifierDeclType	QemuOpts *		4850495	0					
ANR	4850713	Identifier	opts		4850495	1					
ANR	4850714	ExpressionStatement	"opts = qemu_opts_parse_noisily ( & qemu_object_opts , optarg , true )"	123:12:1684:1791	4850495	1	True				
ANR	4850715	AssignmentExpression	"opts = qemu_opts_parse_noisily ( & qemu_object_opts , optarg , true )"		4850495	0		=			
ANR	4850716	Identifier	opts		4850495	0					
ANR	4850717	CallExpression	"qemu_opts_parse_noisily ( & qemu_object_opts , optarg , true )"		4850495	1					
ANR	4850718	Callee	qemu_opts_parse_noisily		4850495	0					
ANR	4850719	Identifier	qemu_opts_parse_noisily		4850495	0					
ANR	4850720	ArgumentList	& qemu_object_opts		4850495	1					
ANR	4850721	Argument	& qemu_object_opts		4850495	0					
ANR	4850722	UnaryOperationExpression	& qemu_object_opts		4850495	0					
ANR	4850723	UnaryOperator	&		4850495	0					
ANR	4850724	Identifier	qemu_object_opts		4850495	1					
ANR	4850725	Argument	optarg		4850495	1					
ANR	4850726	Identifier	optarg		4850495	0					
ANR	4850727	Argument	true		4850495	2					
ANR	4850728	Identifier	true		4850495	0					
ANR	4850729	IfStatement	if ( ! opts )		4850495	2					
ANR	4850730	Condition	! opts	127:16:1810:1814	4850495	0	True				
ANR	4850731	UnaryOperationExpression	! opts		4850495	0					
ANR	4850732	UnaryOperator	!		4850495	0					
ANR	4850733	Identifier	opts		4850495	1					
ANR	4850734	CompoundStatement		125:23:1770:1770	4850495	1					
ANR	4850735	ReturnStatement	return 1 ;	129:16:1836:1844	4850495	0	True				
ANR	4850736	PrimaryExpression	1		4850495	0					
ANR	4850737	BreakStatement	break ;	133:12:1874:1879	4850495	12	True				
ANR	4850738	Label	case OPTION_IMAGE_OPTS :	135:8:1890:1912	4850495	13	True				
ANR	4850739	Identifier	OPTION_IMAGE_OPTS		4850495	0					
ANR	4850740	ExpressionStatement	image_opts = true	137:12:1927:1944	4850495	14	True				
ANR	4850741	AssignmentExpression	image_opts = true		4850495	0		=			
ANR	4850742	Identifier	image_opts		4850495	0					
ANR	4850743	Identifier	true		4850495	1					
ANR	4850744	BreakStatement	break ;	139:12:1959:1964	4850495	15	True				
ANR	4850745	IfStatement	if ( optind != argc - 1 )		4850495	18					
ANR	4850746	Condition	optind != argc - 1	145:8:1993:2010	4850495	0	True				
ANR	4850747	EqualityExpression	optind != argc - 1		4850495	0		!=			
ANR	4850748	Identifier	optind		4850495	0					
ANR	4850749	AdditiveExpression	argc - 1		4850495	1		-			
ANR	4850750	Identifier	argc		4850495	0					
ANR	4850751	PrimaryExpression	1		4850495	1					
ANR	4850752	CompoundStatement		143:28:1966:1966	4850495	1					
ANR	4850753	ExpressionStatement	"error_exit ( ""Expecting one image file name"" )"	147:8:2024:2067	4850495	0	True				
ANR	4850754	CallExpression	"error_exit ( ""Expecting one image file name"" )"		4850495	0					
ANR	4850755	Callee	error_exit		4850495	0					
ANR	4850756	Identifier	error_exit		4850495	0					
ANR	4850757	ArgumentList	"""Expecting one image file name"""		4850495	1					
ANR	4850758	Argument	"""Expecting one image file name"""		4850495	0					
ANR	4850759	PrimaryExpression	"""Expecting one image file name"""		4850495	0					
ANR	4850760	ExpressionStatement	filename = argv [ optind ++ ]	151:4:2081:2106	4850495	19	True				
ANR	4850761	AssignmentExpression	filename = argv [ optind ++ ]		4850495	0		=			
ANR	4850762	Identifier	filename		4850495	0					
ANR	4850763	ArrayIndexing	argv [ optind ++ ]		4850495	1					
ANR	4850764	Identifier	argv		4850495	0					
ANR	4850765	PostIncDecOperationExpression	optind ++		4850495	1					
ANR	4850766	Identifier	optind		4850495	0					
ANR	4850767	IncDec	++		4850495	1					
ANR	4850768	IfStatement	"if ( qemu_opts_foreach ( & qemu_object_opts , user_creatable_add_opts_foreach , NULL , NULL ) )"		4850495	20					
ANR	4850769	Condition	"qemu_opts_foreach ( & qemu_object_opts , user_creatable_add_opts_foreach , NULL , NULL )"	155:8:2119:2253	4850495	0	True				
ANR	4850770	CallExpression	"qemu_opts_foreach ( & qemu_object_opts , user_creatable_add_opts_foreach , NULL , NULL )"		4850495	0					
ANR	4850771	Callee	qemu_opts_foreach		4850495	0					
ANR	4850772	Identifier	qemu_opts_foreach		4850495	0					
ANR	4850773	ArgumentList	& qemu_object_opts		4850495	1					
ANR	4850774	Argument	& qemu_object_opts		4850495	0					
ANR	4850775	UnaryOperationExpression	& qemu_object_opts		4850495	0					
ANR	4850776	UnaryOperator	&		4850495	0					
ANR	4850777	Identifier	qemu_object_opts		4850495	1					
ANR	4850778	Argument	user_creatable_add_opts_foreach		4850495	1					
ANR	4850779	Identifier	user_creatable_add_opts_foreach		4850495	0					
ANR	4850780	Argument	NULL		4850495	2					
ANR	4850781	Identifier	NULL		4850495	0					
ANR	4850782	Argument	NULL		4850495	3					
ANR	4850783	Identifier	NULL		4850495	0					
ANR	4850784	CompoundStatement		157:39:2209:2209	4850495	1					
ANR	4850785	ReturnStatement	return 1 ;	161:8:2267:2275	4850495	0	True				
ANR	4850786	PrimaryExpression	1		4850495	0					
ANR	4850787	SwitchStatement	switch ( size [ 0 ] )		4850495	21					
ANR	4850788	Condition	size [ 0 ]	169:12:2355:2361	4850495	0	True				
ANR	4850789	ArrayIndexing	size [ 0 ]		4850495	0					
ANR	4850790	Identifier	size		4850495	0					
ANR	4850791	PrimaryExpression	0		4850495	1					
ANR	4850792	CompoundStatement		167:21:2317:2317	4850495	1					
ANR	4850793	Label	case '+' :	171:4:2371:2379	4850495	0	True				
ANR	4850794	ExpressionStatement	relative = 1	173:8:2390:2402	4850495	1	True				
ANR	4850795	AssignmentExpression	relative = 1		4850495	0		=			
ANR	4850796	Identifier	relative		4850495	0					
ANR	4850797	PrimaryExpression	1		4850495	1					
ANR	4850798	ExpressionStatement	size ++	175:8:2413:2419	4850495	2	True				
ANR	4850799	PostIncDecOperationExpression	size ++		4850495	0					
ANR	4850800	Identifier	size		4850495	0					
ANR	4850801	IncDec	++		4850495	1					
ANR	4850802	BreakStatement	break ;	177:8:2430:2435	4850495	3	True				
ANR	4850803	Label	case '-' :	179:4:2442:2450	4850495	4	True				
ANR	4850804	ExpressionStatement	relative = - 1	181:8:2461:2474	4850495	5	True				
ANR	4850805	AssignmentExpression	relative = - 1		4850495	0		=			
ANR	4850806	Identifier	relative		4850495	0					
ANR	4850807	UnaryOperationExpression	- 1		4850495	1					
ANR	4850808	UnaryOperator	-		4850495	0					
ANR	4850809	PrimaryExpression	1		4850495	1					
ANR	4850810	ExpressionStatement	size ++	183:8:2485:2491	4850495	6	True				
ANR	4850811	PostIncDecOperationExpression	size ++		4850495	0					
ANR	4850812	Identifier	size		4850495	0					
ANR	4850813	IncDec	++		4850495	1					
ANR	4850814	BreakStatement	break ;	185:8:2502:2507	4850495	7	True				
ANR	4850815	Label	default :	187:4:2514:2521	4850495	8	True				
ANR	4850816	Identifier	default		4850495	0					
ANR	4850817	ExpressionStatement	relative = 0	189:8:2532:2544	4850495	9	True				
ANR	4850818	AssignmentExpression	relative = 0		4850495	0		=			
ANR	4850819	Identifier	relative		4850495	0					
ANR	4850820	PrimaryExpression	0		4850495	1					
ANR	4850821	BreakStatement	break ;	191:8:2555:2560	4850495	10	True				
ANR	4850822	ExpressionStatement	"param = qemu_opts_create ( & resize_options , NULL , 0 , & error_abort )"	199:4:2598:2662	4850495	22	True				
ANR	4850823	AssignmentExpression	"param = qemu_opts_create ( & resize_options , NULL , 0 , & error_abort )"		4850495	0		=			
ANR	4850824	Identifier	param		4850495	0					
ANR	4850825	CallExpression	"qemu_opts_create ( & resize_options , NULL , 0 , & error_abort )"		4850495	1					
ANR	4850826	Callee	qemu_opts_create		4850495	0					
ANR	4850827	Identifier	qemu_opts_create		4850495	0					
ANR	4850828	ArgumentList	& resize_options		4850495	1					
ANR	4850829	Argument	& resize_options		4850495	0					
ANR	4850830	UnaryOperationExpression	& resize_options		4850495	0					
ANR	4850831	UnaryOperator	&		4850495	0					
ANR	4850832	Identifier	resize_options		4850495	1					
ANR	4850833	Argument	NULL		4850495	1					
ANR	4850834	Identifier	NULL		4850495	0					
ANR	4850835	Argument	0		4850495	2					
ANR	4850836	PrimaryExpression	0		4850495	0					
ANR	4850837	Argument	& error_abort		4850495	3					
ANR	4850838	UnaryOperationExpression	& error_abort		4850495	0					
ANR	4850839	UnaryOperator	&		4850495	0					
ANR	4850840	Identifier	error_abort		4850495	1					
ANR	4850841	ExpressionStatement	"qemu_opt_set ( param , BLOCK_OPT_SIZE , size , & err )"	201:4:2669:2716	4850495	23	True				
ANR	4850842	CallExpression	"qemu_opt_set ( param , BLOCK_OPT_SIZE , size , & err )"		4850495	0					
ANR	4850843	Callee	qemu_opt_set		4850495	0					
ANR	4850844	Identifier	qemu_opt_set		4850495	0					
ANR	4850845	ArgumentList	param		4850495	1					
ANR	4850846	Argument	param		4850495	0					
ANR	4850847	Identifier	param		4850495	0					
ANR	4850848	Argument	BLOCK_OPT_SIZE		4850495	1					
ANR	4850849	Identifier	BLOCK_OPT_SIZE		4850495	0					
ANR	4850850	Argument	size		4850495	2					
ANR	4850851	Identifier	size		4850495	0					
ANR	4850852	Argument	& err		4850495	3					
ANR	4850853	UnaryOperationExpression	& err		4850495	0					
ANR	4850854	UnaryOperator	&		4850495	0					
ANR	4850855	Identifier	err		4850495	1					
ANR	4850856	IfStatement	if ( err )		4850495	24					
ANR	4850857	Condition	err	203:8:2727:2729	4850495	0	True				
ANR	4850858	Identifier	err		4850495	0					
ANR	4850859	CompoundStatement		201:13:2685:2685	4850495	1					
ANR	4850860	ExpressionStatement	error_report_err ( err )	205:8:2743:2764	4850495	0	True				
ANR	4850861	CallExpression	error_report_err ( err )		4850495	0					
ANR	4850862	Callee	error_report_err		4850495	0					
ANR	4850863	Identifier	error_report_err		4850495	0					
ANR	4850864	ArgumentList	err		4850495	1					
ANR	4850865	Argument	err		4850495	0					
ANR	4850866	Identifier	err		4850495	0					
ANR	4850867	ExpressionStatement	ret = - 1	207:8:2775:2783	4850495	1	True				
ANR	4850868	AssignmentExpression	ret = - 1		4850495	0		=			
ANR	4850869	Identifier	ret		4850495	0					
ANR	4850870	UnaryOperationExpression	- 1		4850495	1					
ANR	4850871	UnaryOperator	-		4850495	0					
ANR	4850872	PrimaryExpression	1		4850495	1					
ANR	4850873	ExpressionStatement	qemu_opts_del ( param )	209:8:2794:2814	4850495	2	True				
ANR	4850874	CallExpression	qemu_opts_del ( param )		4850495	0					
ANR	4850875	Callee	qemu_opts_del		4850495	0					
ANR	4850876	Identifier	qemu_opts_del		4850495	0					
ANR	4850877	ArgumentList	param		4850495	1					
ANR	4850878	Argument	param		4850495	0					
ANR	4850879	Identifier	param		4850495	0					
ANR	4850880	GotoStatement	goto out ;	211:8:2825:2833	4850495	3	True				
ANR	4850881	Identifier	out		4850495	0					
ANR	4850882	ExpressionStatement	"n = qemu_opt_get_size ( param , BLOCK_OPT_SIZE , 0 )"	215:4:2847:2894	4850495	25	True				
ANR	4850883	AssignmentExpression	"n = qemu_opt_get_size ( param , BLOCK_OPT_SIZE , 0 )"		4850495	0		=			
ANR	4850884	Identifier	n		4850495	0					
ANR	4850885	CallExpression	"qemu_opt_get_size ( param , BLOCK_OPT_SIZE , 0 )"		4850495	1					
ANR	4850886	Callee	qemu_opt_get_size		4850495	0					
ANR	4850887	Identifier	qemu_opt_get_size		4850495	0					
ANR	4850888	ArgumentList	param		4850495	1					
ANR	4850889	Argument	param		4850495	0					
ANR	4850890	Identifier	param		4850495	0					
ANR	4850891	Argument	BLOCK_OPT_SIZE		4850495	1					
ANR	4850892	Identifier	BLOCK_OPT_SIZE		4850495	0					
ANR	4850893	Argument	0		4850495	2					
ANR	4850894	PrimaryExpression	0		4850495	0					
ANR	4850895	ExpressionStatement	qemu_opts_del ( param )	217:4:2901:2921	4850495	26	True				
ANR	4850896	CallExpression	qemu_opts_del ( param )		4850495	0					
ANR	4850897	Callee	qemu_opts_del		4850495	0					
ANR	4850898	Identifier	qemu_opts_del		4850495	0					
ANR	4850899	ArgumentList	param		4850495	1					
ANR	4850900	Argument	param		4850495	0					
ANR	4850901	Identifier	param		4850495	0					
ANR	4850902	ExpressionStatement	"blk = img_open ( image_opts , filename , fmt , BDRV_O_RDWR | BDRV_O_RESIZE , false , quiet )"	221:4:2930:3034	4850495	27	True				
ANR	4850903	AssignmentExpression	"blk = img_open ( image_opts , filename , fmt , BDRV_O_RDWR | BDRV_O_RESIZE , false , quiet )"		4850495	0		=			
ANR	4850904	Identifier	blk		4850495	0					
ANR	4850905	CallExpression	"img_open ( image_opts , filename , fmt , BDRV_O_RDWR | BDRV_O_RESIZE , false , quiet )"		4850495	1					
ANR	4850906	Callee	img_open		4850495	0					
ANR	4850907	Identifier	img_open		4850495	0					
ANR	4850908	ArgumentList	image_opts		4850495	1					
ANR	4850909	Argument	image_opts		4850495	0					
ANR	4850910	Identifier	image_opts		4850495	0					
ANR	4850911	Argument	filename		4850495	1					
ANR	4850912	Identifier	filename		4850495	0					
ANR	4850913	Argument	fmt		4850495	2					
ANR	4850914	Identifier	fmt		4850495	0					
ANR	4850915	Argument	BDRV_O_RDWR | BDRV_O_RESIZE		4850495	3					
ANR	4850916	InclusiveOrExpression	BDRV_O_RDWR | BDRV_O_RESIZE		4850495	0		|			
ANR	4850917	Identifier	BDRV_O_RDWR		4850495	0					
ANR	4850918	Identifier	BDRV_O_RESIZE		4850495	1					
ANR	4850919	Argument	false		4850495	4					
ANR	4850920	Identifier	false		4850495	0					
ANR	4850921	Argument	quiet		4850495	5					
ANR	4850922	Identifier	quiet		4850495	0					
ANR	4850923	IfStatement	if ( ! blk )		4850495	28					
ANR	4850924	Condition	! blk	225:8:3045:3048	4850495	0	True				
ANR	4850925	UnaryOperationExpression	! blk		4850495	0					
ANR	4850926	UnaryOperator	!		4850495	0					
ANR	4850927	Identifier	blk		4850495	1					
ANR	4850928	CompoundStatement		223:14:3004:3004	4850495	1					
ANR	4850929	ExpressionStatement	ret = - 1	227:8:3062:3070	4850495	0	True				
ANR	4850930	AssignmentExpression	ret = - 1		4850495	0		=			
ANR	4850931	Identifier	ret		4850495	0					
ANR	4850932	UnaryOperationExpression	- 1		4850495	1					
ANR	4850933	UnaryOperator	-		4850495	0					
ANR	4850934	PrimaryExpression	1		4850495	1					
ANR	4850935	GotoStatement	goto out ;	229:8:3081:3089	4850495	1	True				
ANR	4850936	Identifier	out		4850495	0					
ANR	4850937	IfStatement	if ( relative )		4850495	29					
ANR	4850938	Condition	relative	235:8:3109:3116	4850495	0	True				
ANR	4850939	Identifier	relative		4850495	0					
ANR	4850940	CompoundStatement		233:18:3072:3072	4850495	1					
ANR	4850941	ExpressionStatement	total_size = blk_getlength ( blk ) + n * relative	237:8:3130:3176	4850495	0	True				
ANR	4850942	AssignmentExpression	total_size = blk_getlength ( blk ) + n * relative		4850495	0		=			
ANR	4850943	Identifier	total_size		4850495	0					
ANR	4850944	AdditiveExpression	blk_getlength ( blk ) + n * relative		4850495	1		+			
ANR	4850945	CallExpression	blk_getlength ( blk )		4850495	0					
ANR	4850946	Callee	blk_getlength		4850495	0					
ANR	4850947	Identifier	blk_getlength		4850495	0					
ANR	4850948	ArgumentList	blk		4850495	1					
ANR	4850949	Argument	blk		4850495	0					
ANR	4850950	Identifier	blk		4850495	0					
ANR	4850951	MultiplicativeExpression	n * relative		4850495	1		*			
ANR	4850952	Identifier	n		4850495	0					
ANR	4850953	Identifier	relative		4850495	1					
ANR	4850954	ElseStatement	else		4850495	0					
ANR	4850955	CompoundStatement		237:11:3143:3143	4850495	0					
ANR	4850956	ExpressionStatement	total_size = n	241:8:3201:3215	4850495	0	True				
ANR	4850957	AssignmentExpression	total_size = n		4850495	0		=			
ANR	4850958	Identifier	total_size		4850495	0					
ANR	4850959	Identifier	n		4850495	1					
ANR	4850960	IfStatement	if ( total_size <= 0 )		4850495	30					
ANR	4850961	Condition	total_size <= 0	245:8:3233:3247	4850495	0	True				
ANR	4850962	RelationalExpression	total_size <= 0		4850495	0		<=			
ANR	4850963	Identifier	total_size		4850495	0					
ANR	4850964	PrimaryExpression	0		4850495	1					
ANR	4850965	CompoundStatement		243:25:3203:3203	4850495	1					
ANR	4850966	ExpressionStatement	"error_report ( ""New image size must be positive"" )"	247:8:3261:3308	4850495	0	True				
ANR	4850967	CallExpression	"error_report ( ""New image size must be positive"" )"		4850495	0					
ANR	4850968	Callee	error_report		4850495	0					
ANR	4850969	Identifier	error_report		4850495	0					
ANR	4850970	ArgumentList	"""New image size must be positive"""		4850495	1					
ANR	4850971	Argument	"""New image size must be positive"""		4850495	0					
ANR	4850972	PrimaryExpression	"""New image size must be positive"""		4850495	0					
ANR	4850973	ExpressionStatement	ret = - 1	249:8:3319:3327	4850495	1	True				
ANR	4850974	AssignmentExpression	ret = - 1		4850495	0		=			
ANR	4850975	Identifier	ret		4850495	0					
ANR	4850976	UnaryOperationExpression	- 1		4850495	1					
ANR	4850977	UnaryOperator	-		4850495	0					
ANR	4850978	PrimaryExpression	1		4850495	1					
ANR	4850979	GotoStatement	goto out ;	251:8:3338:3346	4850495	2	True				
ANR	4850980	Identifier	out		4850495	0					
ANR	4850981	ExpressionStatement	"ret = blk_truncate ( blk , total_size )"	257:4:3362:3397	4850495	31	True				
ANR	4850982	AssignmentExpression	"ret = blk_truncate ( blk , total_size )"		4850495	0		=			
ANR	4850983	Identifier	ret		4850495	0					
ANR	4850984	CallExpression	"blk_truncate ( blk , total_size )"		4850495	1					
ANR	4850985	Callee	blk_truncate		4850495	0					
ANR	4850986	Identifier	blk_truncate		4850495	0					
ANR	4850987	ArgumentList	blk		4850495	1					
ANR	4850988	Argument	blk		4850495	0					
ANR	4850989	Identifier	blk		4850495	0					
ANR	4850990	Argument	total_size		4850495	1					
ANR	4850991	Identifier	total_size		4850495	0					
ANR	4850992	SwitchStatement	switch ( ret )		4850495	32					
ANR	4850993	Condition	ret	259:12:3412:3414	4850495	0	True				
ANR	4850994	Identifier	ret		4850495	0					
ANR	4850995	CompoundStatement		257:17:3370:3370	4850495	1					
ANR	4850996	Label	case 0 :	261:4:3424:3430	4850495	0	True				
ANR	4850997	ExpressionStatement	"qprintf ( quiet , ""Image resized.\\n"" )"	263:8:3441:3475	4850495	1	True				
ANR	4850998	CallExpression	"qprintf ( quiet , ""Image resized.\\n"" )"		4850495	0					
ANR	4850999	Callee	qprintf		4850495	0					
ANR	4851000	Identifier	qprintf		4850495	0					
ANR	4851001	ArgumentList	quiet		4850495	1					
ANR	4851002	Argument	quiet		4850495	0					
ANR	4851003	Identifier	quiet		4850495	0					
ANR	4851004	Argument	"""Image resized.\\n"""		4850495	1					
ANR	4851005	PrimaryExpression	"""Image resized.\\n"""		4850495	0					
ANR	4851006	BreakStatement	break ;	265:8:3486:3491	4850495	2	True				
ANR	4851007	Statement	case	267:4:3498:3501	4850495	3	True				
ANR	4851008	Statement	-	267:9:3503:3503	4850495	4	True				
ANR	4851009	Label	ENOTSUP :	267:10:3504:3511	4850495	5	True				
ANR	4851010	Identifier	ENOTSUP		4850495	0					
ANR	4851011	ExpressionStatement	"error_report ( ""This image does not support resize"" )"	269:8:3522:3572	4850495	6	True				
ANR	4851012	CallExpression	"error_report ( ""This image does not support resize"" )"		4850495	0					
ANR	4851013	Callee	error_report		4850495	0					
ANR	4851014	Identifier	error_report		4850495	0					
ANR	4851015	ArgumentList	"""This image does not support resize"""		4850495	1					
ANR	4851016	Argument	"""This image does not support resize"""		4850495	0					
ANR	4851017	PrimaryExpression	"""This image does not support resize"""		4850495	0					
ANR	4851018	BreakStatement	break ;	271:8:3583:3588	4850495	7	True				
ANR	4851019	Statement	case	273:4:3595:3598	4850495	8	True				
ANR	4851020	Statement	-	273:9:3600:3600	4850495	9	True				
ANR	4851021	Label	EACCES :	273:10:3601:3607	4850495	10	True				
ANR	4851022	Identifier	EACCES		4850495	0					
ANR	4851023	ExpressionStatement	"error_report ( ""Image is read-only"" )"	275:8:3618:3652	4850495	11	True				
ANR	4851024	CallExpression	"error_report ( ""Image is read-only"" )"		4850495	0					
ANR	4851025	Callee	error_report		4850495	0					
ANR	4851026	Identifier	error_report		4850495	0					
ANR	4851027	ArgumentList	"""Image is read-only"""		4850495	1					
ANR	4851028	Argument	"""Image is read-only"""		4850495	0					
ANR	4851029	PrimaryExpression	"""Image is read-only"""		4850495	0					
ANR	4851030	BreakStatement	break ;	277:8:3663:3668	4850495	12	True				
ANR	4851031	Label	default :	279:4:3675:3682	4850495	13	True				
ANR	4851032	Identifier	default		4850495	0					
ANR	4851033	ExpressionStatement	"error_report ( ""Error resizing image: %s"" , strerror ( - ret ) )"	281:8:3693:3749	4850495	14	True				
ANR	4851034	CallExpression	"error_report ( ""Error resizing image: %s"" , strerror ( - ret ) )"		4850495	0					
ANR	4851035	Callee	error_report		4850495	0					
ANR	4851036	Identifier	error_report		4850495	0					
ANR	4851037	ArgumentList	"""Error resizing image: %s"""		4850495	1					
ANR	4851038	Argument	"""Error resizing image: %s"""		4850495	0					
ANR	4851039	PrimaryExpression	"""Error resizing image: %s"""		4850495	0					
ANR	4851040	Argument	strerror ( - ret )		4850495	1					
ANR	4851041	CallExpression	strerror ( - ret )		4850495	0					
ANR	4851042	Callee	strerror		4850495	0					
ANR	4851043	Identifier	strerror		4850495	0					
ANR	4851044	ArgumentList	- ret		4850495	1					
ANR	4851045	Argument	- ret		4850495	0					
ANR	4851046	UnaryOperationExpression	- ret		4850495	0					
ANR	4851047	UnaryOperator	-		4850495	0					
ANR	4851048	Identifier	ret		4850495	1					
ANR	4851049	BreakStatement	break ;	283:8:3760:3765	4850495	15	True				
ANR	4851050	Label	out :	287:0:3775:3778	4850495	33	True				
ANR	4851051	Identifier	out		4850495	0					
ANR	4851052	ExpressionStatement	blk_unref ( blk )	289:4:3785:3799	4850495	34	True				
ANR	4851053	CallExpression	blk_unref ( blk )		4850495	0					
ANR	4851054	Callee	blk_unref		4850495	0					
ANR	4851055	Identifier	blk_unref		4850495	0					
ANR	4851056	ArgumentList	blk		4850495	1					
ANR	4851057	Argument	blk		4850495	0					
ANR	4851058	Identifier	blk		4850495	0					
ANR	4851059	IfStatement	if ( ret )		4850495	35					
ANR	4851060	Condition	ret	291:8:3810:3812	4850495	0	True				
ANR	4851061	Identifier	ret		4850495	0					
ANR	4851062	CompoundStatement		289:13:3768:3768	4850495	1					
ANR	4851063	ReturnStatement	return 1 ;	293:8:3826:3834	4850495	0	True				
ANR	4851064	PrimaryExpression	1		4850495	0					
ANR	4851065	ReturnStatement	return 0 ;	297:4:3848:3856	4850495	36	True				
ANR	4851066	PrimaryExpression	0		4850495	0					
ANR	4851067	ReturnType	static int		4850495	1					
ANR	4851068	Identifier	img_resize		4850495	2					
ANR	4851069	ParameterList	"int argc , char * * argv"		4850495	3					
ANR	4851070	Parameter	int argc	1:22:22:29	4850495	0	True				
ANR	4851071	ParameterType	int		4850495	0					
ANR	4851072	Identifier	argc		4850495	1					
ANR	4851073	Parameter	char * * argv	1:32:32:42	4850495	1	True				
ANR	4851074	ParameterType	char * *		4850495	0					
ANR	4851075	Identifier	argv		4850495	1					
ANR	4851076	CFGEntryNode	ENTRY		4850495		True				
ANR	4851077	CFGExitNode	EXIT		4850495		True				
ANR	4851078	InfiniteForNode	true		4850495		True				
ANR	4851079	Symbol	blk_truncate		4850495						
ANR	4851080	Symbol	qemu_opts_create		4850495						
ANR	4851081	Symbol	optind		4850495						
ANR	4851082	Symbol	optarg		4850495						
ANR	4851083	Symbol	* argv		4850495						
ANR	4851084	Symbol	fmt		4850495						
ANR	4851085	Symbol	required_argument		4850495						
ANR	4851086	Symbol	& err		4850495						
ANR	4851087	Symbol	argv		4850495						
ANR	4851088	Symbol	user_creatable_add_opts_foreach		4850495						
ANR	4851089	Symbol	img_open		4850495						
ANR	4851090	Symbol	long_options		4850495						
ANR	4851091	Symbol	* size		4850495						
ANR	4851092	Symbol	opts		4850495						
ANR	4851093	Symbol	param		4850495						
ANR	4851094	Symbol	quiet		4850495						
ANR	4851095	Symbol	* argc		4850495						
ANR	4851096	Symbol	argc		4850495						
ANR	4851097	Symbol	ret		4850495						
ANR	4851098	Symbol	blk		4850495						
ANR	4851099	Symbol	NULL		4850495						
ANR	4851100	Symbol	c		4850495						
ANR	4851101	Symbol	err		4850495						
ANR	4851102	Symbol	OPTION_OBJECT		4850495						
ANR	4851103	Symbol	getopt_long		4850495						
ANR	4851104	Symbol	& error_abort		4850495						
ANR	4851105	Symbol	& qemu_object_opts		4850495						
ANR	4851106	Symbol	total_size		4850495						
ANR	4851107	Symbol	false		4850495						
ANR	4851108	Symbol	BDRV_O_RESIZE		4850495						
ANR	4851109	Symbol	blk_getlength		4850495						
ANR	4851110	Symbol	BLOCK_OPT_SIZE		4850495						
ANR	4851111	Symbol	n		4850495						
ANR	4851112	Symbol	strerror		4850495						
ANR	4851113	Symbol	filename		4850495						
ANR	4851114	Symbol	size		4850495						
ANR	4851115	Symbol	& resize_options		4850495						
ANR	4851116	Symbol	true		4850495						
ANR	4851117	Symbol	OPTION_IMAGE_OPTS		4850495						
ANR	4851118	Symbol	image_opts		4850495						
ANR	4851119	Symbol	no_argument		4850495						
ANR	4851120	Symbol	qemu_opts_foreach		4850495						
ANR	4851121	Symbol	qemu_opt_get_size		4850495						
ANR	4851122	Symbol	qemu_opts_parse_noisily		4850495						
ANR	4851123	Symbol	BDRV_O_RDWR		4850495						
ANR	4851124	Symbol	relative		4850495						
