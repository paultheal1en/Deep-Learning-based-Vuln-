command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8045839	File	/home/p4ultr4n/workplace/ReVeal/raw_code/svq1_decode_delta_block_0.c								
ANR	8045840	Function	svq1_decode_delta_block	1:0:0:1774							
ANR	8045841	FunctionDef	"svq1_decode_delta_block (MpegEncContext * s , GetBitContext * bitbuf , uint8_t * current , uint8_t * previous , int pitch , svq1_pmv * motion , int x , int y)"		8045840	0					
ANR	8045842	CompoundStatement		7:0:230:1774	8045840	0					
ANR	8045843	IdentifierDeclStatement	uint32_t block_type ;	9:4:237:256	8045840	0	True				
ANR	8045844	IdentifierDecl	block_type		8045840	0					
ANR	8045845	IdentifierDeclType	uint32_t		8045840	0					
ANR	8045846	Identifier	block_type		8045840	1					
ANR	8045847	IdentifierDeclStatement	int result = 0 ;	11:4:263:277	8045840	1	True				
ANR	8045848	IdentifierDecl	result = 0		8045840	0					
ANR	8045849	IdentifierDeclType	int		8045840	0					
ANR	8045850	Identifier	result		8045840	1					
ANR	8045851	AssignmentExpression	result = 0		8045840	2		=			
ANR	8045852	Identifier	result		8045840	0					
ANR	8045853	PrimaryExpression	0		8045840	1					
ANR	8045854	ExpressionStatement	"block_type = get_vlc2 ( bitbuf , svq1_block_type . table , 2 , 2 )"	17:4:312:370	8045840	2	True				
ANR	8045855	AssignmentExpression	"block_type = get_vlc2 ( bitbuf , svq1_block_type . table , 2 , 2 )"		8045840	0		=			
ANR	8045856	Identifier	block_type		8045840	0					
ANR	8045857	CallExpression	"get_vlc2 ( bitbuf , svq1_block_type . table , 2 , 2 )"		8045840	1					
ANR	8045858	Callee	get_vlc2		8045840	0					
ANR	8045859	Identifier	get_vlc2		8045840	0					
ANR	8045860	ArgumentList	bitbuf		8045840	1					
ANR	8045861	Argument	bitbuf		8045840	0					
ANR	8045862	Identifier	bitbuf		8045840	0					
ANR	8045863	Argument	svq1_block_type . table		8045840	1					
ANR	8045864	MemberAccess	svq1_block_type . table		8045840	0					
ANR	8045865	Identifier	svq1_block_type		8045840	0					
ANR	8045866	Identifier	table		8045840	1					
ANR	8045867	Argument	2		8045840	2					
ANR	8045868	PrimaryExpression	2		8045840	0					
ANR	8045869	Argument	2		8045840	3					
ANR	8045870	PrimaryExpression	2		8045840	0					
ANR	8045871	IfStatement	if ( block_type == SVQ1_BLOCK_SKIP || block_type == SVQ1_BLOCK_INTRA )		8045840	3					
ANR	8045872	Condition	block_type == SVQ1_BLOCK_SKIP || block_type == SVQ1_BLOCK_INTRA	23:8:415:477	8045840	0	True				
ANR	8045873	OrExpression	block_type == SVQ1_BLOCK_SKIP || block_type == SVQ1_BLOCK_INTRA		8045840	0		||			
ANR	8045874	EqualityExpression	block_type == SVQ1_BLOCK_SKIP		8045840	0		==			
ANR	8045875	Identifier	block_type		8045840	0					
ANR	8045876	Identifier	SVQ1_BLOCK_SKIP		8045840	1					
ANR	8045877	EqualityExpression	block_type == SVQ1_BLOCK_INTRA		8045840	1		==			
ANR	8045878	Identifier	block_type		8045840	0					
ANR	8045879	Identifier	SVQ1_BLOCK_INTRA		8045840	1					
ANR	8045880	CompoundStatement		17:73:249:249	8045840	1					
ANR	8045881	ExpressionStatement	motion [ 0 ] . x = motion [ 0 ] . y = motion [ x / 8 + 2 ] . x = motion [ x / 8 + 2 ] . y = motion [ x / 8 + 3 ] . x = motion [ x / 8 + 3 ] . y = 0	25:8:491:669	8045840	0	True				
ANR	8045882	AssignmentExpression	motion [ 0 ] . x = motion [ 0 ] . y = motion [ x / 8 + 2 ] . x = motion [ x / 8 + 2 ] . y = motion [ x / 8 + 3 ] . x = motion [ x / 8 + 3 ] . y = 0		8045840	0		=			
ANR	8045883	MemberAccess	motion [ 0 ] . x		8045840	0					
ANR	8045884	ArrayIndexing	motion [ 0 ]		8045840	0					
ANR	8045885	Identifier	motion		8045840	0					
ANR	8045886	PrimaryExpression	0		8045840	1					
ANR	8045887	Identifier	x		8045840	1					
ANR	8045888	AssignmentExpression	motion [ 0 ] . y = motion [ x / 8 + 2 ] . x = motion [ x / 8 + 2 ] . y = motion [ x / 8 + 3 ] . x = motion [ x / 8 + 3 ] . y = 0		8045840	1		=			
ANR	8045889	MemberAccess	motion [ 0 ] . y		8045840	0					
ANR	8045890	ArrayIndexing	motion [ 0 ]		8045840	0					
ANR	8045891	Identifier	motion		8045840	0					
ANR	8045892	PrimaryExpression	0		8045840	1					
ANR	8045893	Identifier	y		8045840	1					
ANR	8045894	AssignmentExpression	motion [ x / 8 + 2 ] . x = motion [ x / 8 + 2 ] . y = motion [ x / 8 + 3 ] . x = motion [ x / 8 + 3 ] . y = 0		8045840	1		=			
ANR	8045895	MemberAccess	motion [ x / 8 + 2 ] . x		8045840	0					
ANR	8045896	ArrayIndexing	motion [ x / 8 + 2 ]		8045840	0					
ANR	8045897	Identifier	motion		8045840	0					
ANR	8045898	AdditiveExpression	x / 8 + 2		8045840	1		+			
ANR	8045899	MultiplicativeExpression	x / 8		8045840	0		/			
ANR	8045900	Identifier	x		8045840	0					
ANR	8045901	PrimaryExpression	8		8045840	1					
ANR	8045902	PrimaryExpression	2		8045840	1					
ANR	8045903	Identifier	x		8045840	1					
ANR	8045904	AssignmentExpression	motion [ x / 8 + 2 ] . y = motion [ x / 8 + 3 ] . x = motion [ x / 8 + 3 ] . y = 0		8045840	1		=			
ANR	8045905	MemberAccess	motion [ x / 8 + 2 ] . y		8045840	0					
ANR	8045906	ArrayIndexing	motion [ x / 8 + 2 ]		8045840	0					
ANR	8045907	Identifier	motion		8045840	0					
ANR	8045908	AdditiveExpression	x / 8 + 2		8045840	1		+			
ANR	8045909	MultiplicativeExpression	x / 8		8045840	0		/			
ANR	8045910	Identifier	x		8045840	0					
ANR	8045911	PrimaryExpression	8		8045840	1					
ANR	8045912	PrimaryExpression	2		8045840	1					
ANR	8045913	Identifier	y		8045840	1					
ANR	8045914	AssignmentExpression	motion [ x / 8 + 3 ] . x = motion [ x / 8 + 3 ] . y = 0		8045840	1		=			
ANR	8045915	MemberAccess	motion [ x / 8 + 3 ] . x		8045840	0					
ANR	8045916	ArrayIndexing	motion [ x / 8 + 3 ]		8045840	0					
ANR	8045917	Identifier	motion		8045840	0					
ANR	8045918	AdditiveExpression	x / 8 + 3		8045840	1		+			
ANR	8045919	MultiplicativeExpression	x / 8		8045840	0		/			
ANR	8045920	Identifier	x		8045840	0					
ANR	8045921	PrimaryExpression	8		8045840	1					
ANR	8045922	PrimaryExpression	3		8045840	1					
ANR	8045923	Identifier	x		8045840	1					
ANR	8045924	AssignmentExpression	motion [ x / 8 + 3 ] . y = 0		8045840	1		=			
ANR	8045925	MemberAccess	motion [ x / 8 + 3 ] . y		8045840	0					
ANR	8045926	ArrayIndexing	motion [ x / 8 + 3 ]		8045840	0					
ANR	8045927	Identifier	motion		8045840	0					
ANR	8045928	AdditiveExpression	x / 8 + 3		8045840	1		+			
ANR	8045929	MultiplicativeExpression	x / 8		8045840	0		/			
ANR	8045930	Identifier	x		8045840	0					
ANR	8045931	PrimaryExpression	8		8045840	1					
ANR	8045932	PrimaryExpression	3		8045840	1					
ANR	8045933	Identifier	y		8045840	1					
ANR	8045934	PrimaryExpression	0		8045840	1					
ANR	8045935	SwitchStatement	switch ( block_type )		8045840	4					
ANR	8045936	Condition	block_type	41:12:693:702	8045840	0	True				
ANR	8045937	Identifier	block_type		8045840	0					
ANR	8045938	CompoundStatement		35:24:474:474	8045840	1					
ANR	8045939	Label	case SVQ1_BLOCK_SKIP :	43:4:712:732	8045840	0	True				
ANR	8045940	Identifier	SVQ1_BLOCK_SKIP		8045840	0					
ANR	8045941	ExpressionStatement	"svq1_skip_block ( current , previous , pitch , x , y )"	45:8:743:790	8045840	1	True				
ANR	8045942	CallExpression	"svq1_skip_block ( current , previous , pitch , x , y )"		8045840	0					
ANR	8045943	Callee	svq1_skip_block		8045840	0					
ANR	8045944	Identifier	svq1_skip_block		8045840	0					
ANR	8045945	ArgumentList	current		8045840	1					
ANR	8045946	Argument	current		8045840	0					
ANR	8045947	Identifier	current		8045840	0					
ANR	8045948	Argument	previous		8045840	1					
ANR	8045949	Identifier	previous		8045840	0					
ANR	8045950	Argument	pitch		8045840	2					
ANR	8045951	Identifier	pitch		8045840	0					
ANR	8045952	Argument	x		8045840	3					
ANR	8045953	Identifier	x		8045840	0					
ANR	8045954	Argument	y		8045840	4					
ANR	8045955	Identifier	y		8045840	0					
ANR	8045956	BreakStatement	break ;	47:8:801:806	8045840	2	True				
ANR	8045957	Label	case SVQ1_BLOCK_INTER :	51:4:815:836	8045840	3	True				
ANR	8045958	Identifier	SVQ1_BLOCK_INTER		8045840	0					
ANR	8045959	ExpressionStatement	"result = svq1_motion_inter_block ( s , bitbuf , current , previous , pitch , motion , x , y )"	53:8:847:972	8045840	4	True				
ANR	8045960	AssignmentExpression	"result = svq1_motion_inter_block ( s , bitbuf , current , previous , pitch , motion , x , y )"		8045840	0		=			
ANR	8045961	Identifier	result		8045840	0					
ANR	8045962	CallExpression	"svq1_motion_inter_block ( s , bitbuf , current , previous , pitch , motion , x , y )"		8045840	1					
ANR	8045963	Callee	svq1_motion_inter_block		8045840	0					
ANR	8045964	Identifier	svq1_motion_inter_block		8045840	0					
ANR	8045965	ArgumentList	s		8045840	1					
ANR	8045966	Argument	s		8045840	0					
ANR	8045967	Identifier	s		8045840	0					
ANR	8045968	Argument	bitbuf		8045840	1					
ANR	8045969	Identifier	bitbuf		8045840	0					
ANR	8045970	Argument	current		8045840	2					
ANR	8045971	Identifier	current		8045840	0					
ANR	8045972	Argument	previous		8045840	3					
ANR	8045973	Identifier	previous		8045840	0					
ANR	8045974	Argument	pitch		8045840	4					
ANR	8045975	Identifier	pitch		8045840	0					
ANR	8045976	Argument	motion		8045840	5					
ANR	8045977	Identifier	motion		8045840	0					
ANR	8045978	Argument	x		8045840	6					
ANR	8045979	Identifier	x		8045840	0					
ANR	8045980	Argument	y		8045840	7					
ANR	8045981	Identifier	y		8045840	0					
ANR	8045982	IfStatement	if ( result != 0 )		8045840	5					
ANR	8045983	Condition	result != 0	59:12:989:999	8045840	0	True				
ANR	8045984	EqualityExpression	result != 0		8045840	0		!=			
ANR	8045985	Identifier	result		8045840	0					
ANR	8045986	PrimaryExpression	0		8045840	1					
ANR	8045987	CompoundStatement		53:25:771:771	8045840	1					
ANR	8045988	ExpressionStatement	"av_dlog ( s -> avctx , ""Error in svq1_motion_inter_block %i\\n"" , result )"	61:12:1017:1083	8045840	0	True				
ANR	8045989	CallExpression	"av_dlog ( s -> avctx , ""Error in svq1_motion_inter_block %i\\n"" , result )"		8045840	0					
ANR	8045990	Callee	av_dlog		8045840	0					
ANR	8045991	Identifier	av_dlog		8045840	0					
ANR	8045992	ArgumentList	s -> avctx		8045840	1					
ANR	8045993	Argument	s -> avctx		8045840	0					
ANR	8045994	PtrMemberAccess	s -> avctx		8045840	0					
ANR	8045995	Identifier	s		8045840	0					
ANR	8045996	Identifier	avctx		8045840	1					
ANR	8045997	Argument	"""Error in svq1_motion_inter_block %i\\n"""		8045840	1					
ANR	8045998	PrimaryExpression	"""Error in svq1_motion_inter_block %i\\n"""		8045840	0					
ANR	8045999	Argument	result		8045840	2					
ANR	8046000	Identifier	result		8045840	0					
ANR	8046001	BreakStatement	break ;	63:12:1098:1103	8045840	1	True				
ANR	8046002	ExpressionStatement	"result = svq1_decode_block_non_intra ( bitbuf , current , pitch )"	67:8:1125:1185	8045840	6	True				
ANR	8046003	AssignmentExpression	"result = svq1_decode_block_non_intra ( bitbuf , current , pitch )"		8045840	0		=			
ANR	8046004	Identifier	result		8045840	0					
ANR	8046005	CallExpression	"svq1_decode_block_non_intra ( bitbuf , current , pitch )"		8045840	1					
ANR	8046006	Callee	svq1_decode_block_non_intra		8045840	0					
ANR	8046007	Identifier	svq1_decode_block_non_intra		8045840	0					
ANR	8046008	ArgumentList	bitbuf		8045840	1					
ANR	8046009	Argument	bitbuf		8045840	0					
ANR	8046010	Identifier	bitbuf		8045840	0					
ANR	8046011	Argument	current		8045840	1					
ANR	8046012	Identifier	current		8045840	0					
ANR	8046013	Argument	pitch		8045840	2					
ANR	8046014	Identifier	pitch		8045840	0					
ANR	8046015	BreakStatement	break ;	69:8:1196:1201	8045840	7	True				
ANR	8046016	Label	case SVQ1_BLOCK_INTER_4V :	73:4:1210:1234	8045840	8	True				
ANR	8046017	Identifier	SVQ1_BLOCK_INTER_4V		8045840	0					
ANR	8046018	ExpressionStatement	"result = svq1_motion_inter_4v_block ( s , bitbuf , current , previous , pitch , motion , x , y )"	75:8:1245:1376	8045840	9	True				
ANR	8046019	AssignmentExpression	"result = svq1_motion_inter_4v_block ( s , bitbuf , current , previous , pitch , motion , x , y )"		8045840	0		=			
ANR	8046020	Identifier	result		8045840	0					
ANR	8046021	CallExpression	"svq1_motion_inter_4v_block ( s , bitbuf , current , previous , pitch , motion , x , y )"		8045840	1					
ANR	8046022	Callee	svq1_motion_inter_4v_block		8045840	0					
ANR	8046023	Identifier	svq1_motion_inter_4v_block		8045840	0					
ANR	8046024	ArgumentList	s		8045840	1					
ANR	8046025	Argument	s		8045840	0					
ANR	8046026	Identifier	s		8045840	0					
ANR	8046027	Argument	bitbuf		8045840	1					
ANR	8046028	Identifier	bitbuf		8045840	0					
ANR	8046029	Argument	current		8045840	2					
ANR	8046030	Identifier	current		8045840	0					
ANR	8046031	Argument	previous		8045840	3					
ANR	8046032	Identifier	previous		8045840	0					
ANR	8046033	Argument	pitch		8045840	4					
ANR	8046034	Identifier	pitch		8045840	0					
ANR	8046035	Argument	motion		8045840	5					
ANR	8046036	Identifier	motion		8045840	0					
ANR	8046037	Argument	x		8045840	6					
ANR	8046038	Identifier	x		8045840	0					
ANR	8046039	Argument	y		8045840	7					
ANR	8046040	Identifier	y		8045840	0					
ANR	8046041	IfStatement	if ( result != 0 )		8045840	10					
ANR	8046042	Condition	result != 0	81:12:1393:1403	8045840	0	True				
ANR	8046043	EqualityExpression	result != 0		8045840	0		!=			
ANR	8046044	Identifier	result		8045840	0					
ANR	8046045	PrimaryExpression	0		8045840	1					
ANR	8046046	CompoundStatement		75:25:1175:1175	8045840	1					
ANR	8046047	ExpressionStatement	"av_dlog ( s -> avctx , ""Error in svq1_motion_inter_4v_block %i\\n"" , result )"	83:12:1421:1511	8045840	0	True				
ANR	8046048	CallExpression	"av_dlog ( s -> avctx , ""Error in svq1_motion_inter_4v_block %i\\n"" , result )"		8045840	0					
ANR	8046049	Callee	av_dlog		8045840	0					
ANR	8046050	Identifier	av_dlog		8045840	0					
ANR	8046051	ArgumentList	s -> avctx		8045840	1					
ANR	8046052	Argument	s -> avctx		8045840	0					
ANR	8046053	PtrMemberAccess	s -> avctx		8045840	0					
ANR	8046054	Identifier	s		8045840	0					
ANR	8046055	Identifier	avctx		8045840	1					
ANR	8046056	Argument	"""Error in svq1_motion_inter_4v_block %i\\n"""		8045840	1					
ANR	8046057	PrimaryExpression	"""Error in svq1_motion_inter_4v_block %i\\n"""		8045840	0					
ANR	8046058	Argument	result		8045840	2					
ANR	8046059	Identifier	result		8045840	0					
ANR	8046060	BreakStatement	break ;	87:12:1526:1531	8045840	1	True				
ANR	8046061	ExpressionStatement	"result = svq1_decode_block_non_intra ( bitbuf , current , pitch )"	91:8:1553:1613	8045840	11	True				
ANR	8046062	AssignmentExpression	"result = svq1_decode_block_non_intra ( bitbuf , current , pitch )"		8045840	0		=			
ANR	8046063	Identifier	result		8045840	0					
ANR	8046064	CallExpression	"svq1_decode_block_non_intra ( bitbuf , current , pitch )"		8045840	1					
ANR	8046065	Callee	svq1_decode_block_non_intra		8045840	0					
ANR	8046066	Identifier	svq1_decode_block_non_intra		8045840	0					
ANR	8046067	ArgumentList	bitbuf		8045840	1					
ANR	8046068	Argument	bitbuf		8045840	0					
ANR	8046069	Identifier	bitbuf		8045840	0					
ANR	8046070	Argument	current		8045840	1					
ANR	8046071	Identifier	current		8045840	0					
ANR	8046072	Argument	pitch		8045840	2					
ANR	8046073	Identifier	pitch		8045840	0					
ANR	8046074	BreakStatement	break ;	93:8:1624:1629	8045840	12	True				
ANR	8046075	Label	case SVQ1_BLOCK_INTRA :	97:4:1638:1659	8045840	13	True				
ANR	8046076	Identifier	SVQ1_BLOCK_INTRA		8045840	0					
ANR	8046077	ExpressionStatement	"result = svq1_decode_block_intra ( bitbuf , current , pitch )"	99:8:1670:1726	8045840	14	True				
ANR	8046078	AssignmentExpression	"result = svq1_decode_block_intra ( bitbuf , current , pitch )"		8045840	0		=			
ANR	8046079	Identifier	result		8045840	0					
ANR	8046080	CallExpression	"svq1_decode_block_intra ( bitbuf , current , pitch )"		8045840	1					
ANR	8046081	Callee	svq1_decode_block_intra		8045840	0					
ANR	8046082	Identifier	svq1_decode_block_intra		8045840	0					
ANR	8046083	ArgumentList	bitbuf		8045840	1					
ANR	8046084	Argument	bitbuf		8045840	0					
ANR	8046085	Identifier	bitbuf		8045840	0					
ANR	8046086	Argument	current		8045840	1					
ANR	8046087	Identifier	current		8045840	0					
ANR	8046088	Argument	pitch		8045840	2					
ANR	8046089	Identifier	pitch		8045840	0					
ANR	8046090	BreakStatement	break ;	101:8:1737:1742	8045840	15	True				
ANR	8046091	ReturnStatement	return result ;	107:4:1758:1771	8045840	5	True				
ANR	8046092	Identifier	result		8045840	0					
ANR	8046093	ReturnType	static int		8045840	1					
ANR	8046094	Identifier	svq1_decode_delta_block		8045840	2					
ANR	8046095	ParameterList	"MpegEncContext * s , GetBitContext * bitbuf , uint8_t * current , uint8_t * previous , int pitch , svq1_pmv * motion , int x , int y"		8045840	3					
ANR	8046096	Parameter	MpegEncContext * s	1:35:35:51	8045840	0	True				
ANR	8046097	ParameterType	MpegEncContext *		8045840	0					
ANR	8046098	Identifier	s		8045840	1					
ANR	8046099	Parameter	GetBitContext * bitbuf	1:54:54:74	8045840	1	True				
ANR	8046100	ParameterType	GetBitContext *		8045840	0					
ANR	8046101	Identifier	bitbuf		8045840	1					
ANR	8046102	Parameter	uint8_t * current	3:35:113:128	8045840	2	True				
ANR	8046103	ParameterType	uint8_t *		8045840	0					
ANR	8046104	Identifier	current		8045840	1					
ANR	8046105	Parameter	uint8_t * previous	3:53:131:147	8045840	3	True				
ANR	8046106	ParameterType	uint8_t *		8045840	0					
ANR	8046107	Identifier	previous		8045840	1					
ANR	8046108	Parameter	int pitch	5:35:186:194	8045840	4	True				
ANR	8046109	ParameterType	int		8045840	0					
ANR	8046110	Identifier	pitch		8045840	1					
ANR	8046111	Parameter	svq1_pmv * motion	5:46:197:212	8045840	5	True				
ANR	8046112	ParameterType	svq1_pmv *		8045840	0					
ANR	8046113	Identifier	motion		8045840	1					
ANR	8046114	Parameter	int x	5:64:215:219	8045840	6	True				
ANR	8046115	ParameterType	int		8045840	0					
ANR	8046116	Identifier	x		8045840	1					
ANR	8046117	Parameter	int y	5:71:222:226	8045840	7	True				
ANR	8046118	ParameterType	int		8045840	0					
ANR	8046119	Identifier	y		8045840	1					
ANR	8046120	CFGEntryNode	ENTRY		8045840		True				
ANR	8046121	CFGExitNode	EXIT		8045840		True				
ANR	8046122	Symbol	* x		8045840						
ANR	8046123	Symbol	block_type		8045840						
ANR	8046124	Symbol	motion [ 0 ] . x		8045840						
ANR	8046125	Symbol	svq1_block_type		8045840						
ANR	8046126	Symbol	motion [ 0 ] . y		8045840						
ANR	8046127	Symbol	svq1_motion_inter_block		8045840						
ANR	8046128	Symbol	result		8045840						
ANR	8046129	Symbol	current		8045840						
ANR	8046130	Symbol	svq1_decode_block_intra		8045840						
ANR	8046131	Symbol	pitch		8045840						
ANR	8046132	Symbol	motion [ x / 8 + 2 ] . x		8045840						
ANR	8046133	Symbol	motion [ x / 8 + 2 ] . y		8045840						
ANR	8046134	Symbol	svq1_block_type . table		8045840						
ANR	8046135	Symbol	motion [ x / 8 + 3 ] . y		8045840						
ANR	8046136	Symbol	svq1_decode_block_non_intra		8045840						
ANR	8046137	Symbol	motion [ x / 8 + 3 ] . x		8045840						
ANR	8046138	Symbol	previous		8045840						
ANR	8046139	Symbol	motion		8045840						
ANR	8046140	Symbol	SVQ1_BLOCK_INTRA		8045840						
ANR	8046141	Symbol	* motion		8045840						
ANR	8046142	Symbol	svq1_motion_inter_4v_block		8045840						
ANR	8046143	Symbol	s		8045840						
ANR	8046144	Symbol	x		8045840						
ANR	8046145	Symbol	y		8045840						
ANR	8046146	Symbol	SVQ1_BLOCK_SKIP		8045840						
ANR	8046147	Symbol	get_vlc2		8045840						
ANR	8046148	Symbol	s -> avctx		8045840						
ANR	8046149	Symbol	* s		8045840						
ANR	8046150	Symbol	bitbuf		8045840						
