command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4585	File	/home/p4ultr4n/workplace/ReVeal/raw_code/AUD_register_card_0.c								
ANR	4586	Function	AUD_register_card	1:0:0:250							
ANR	4587	FunctionDef	"AUD_register_card (const char * name , QEMUSoundCard * card)"		4586	0					
ANR	4588	CompoundStatement		3:0:64:250	4586	0					
ANR	4589	ExpressionStatement	audio_init ( )	5:4:71:84	4586	0	True				
ANR	4590	CallExpression	audio_init ( )		4586	0					
ANR	4591	Callee	audio_init		4586	0					
ANR	4592	Identifier	audio_init		4586	0					
ANR	4593	ArgumentList			4586	1					
ANR	4594	ExpressionStatement	card -> name = qemu_strdup ( name )	7:4:91:122	4586	1	True				
ANR	4595	AssignmentExpression	card -> name = qemu_strdup ( name )		4586	0		=			
ANR	4596	PtrMemberAccess	card -> name		4586	0					
ANR	4597	Identifier	card		4586	0					
ANR	4598	Identifier	name		4586	1					
ANR	4599	CallExpression	qemu_strdup ( name )		4586	1					
ANR	4600	Callee	qemu_strdup		4586	0					
ANR	4601	Identifier	qemu_strdup		4586	0					
ANR	4602	ArgumentList	name		4586	1					
ANR	4603	Argument	name		4586	0					
ANR	4604	Identifier	name		4586	0					
ANR	4605	ExpressionStatement	"memset ( & card -> entries , 0 , sizeof ( card -> entries ) )"	9:4:129:179	4586	2	True				
ANR	4606	CallExpression	"memset ( & card -> entries , 0 , sizeof ( card -> entries ) )"		4586	0					
ANR	4607	Callee	memset		4586	0					
ANR	4608	Identifier	memset		4586	0					
ANR	4609	ArgumentList	& card -> entries		4586	1					
ANR	4610	Argument	& card -> entries		4586	0					
ANR	4611	UnaryOperationExpression	& card -> entries		4586	0					
ANR	4612	UnaryOperator	&		4586	0					
ANR	4613	PtrMemberAccess	card -> entries		4586	1					
ANR	4614	Identifier	card		4586	0					
ANR	4615	Identifier	entries		4586	1					
ANR	4616	Argument	0		4586	1					
ANR	4617	PrimaryExpression	0		4586	0					
ANR	4618	Argument	sizeof ( card -> entries )		4586	2					
ANR	4619	SizeofExpression	sizeof ( card -> entries )		4586	0					
ANR	4620	Sizeof	sizeof		4586	0					
ANR	4621	PtrMemberAccess	card -> entries		4586	1					
ANR	4622	Identifier	card		4586	0					
ANR	4623	Identifier	entries		4586	1					
ANR	4624	ExpressionStatement	"LIST_INSERT_HEAD ( & glob_audio_state . card_head , card , entries )"	11:4:186:247	4586	3	True				
ANR	4625	CallExpression	"LIST_INSERT_HEAD ( & glob_audio_state . card_head , card , entries )"		4586	0					
ANR	4626	Callee	LIST_INSERT_HEAD		4586	0					
ANR	4627	Identifier	LIST_INSERT_HEAD		4586	0					
ANR	4628	ArgumentList	& glob_audio_state . card_head		4586	1					
ANR	4629	Argument	& glob_audio_state . card_head		4586	0					
ANR	4630	UnaryOperationExpression	& glob_audio_state . card_head		4586	0					
ANR	4631	UnaryOperator	&		4586	0					
ANR	4632	MemberAccess	glob_audio_state . card_head		4586	1					
ANR	4633	Identifier	glob_audio_state		4586	0					
ANR	4634	Identifier	card_head		4586	1					
ANR	4635	Argument	card		4586	1					
ANR	4636	Identifier	card		4586	0					
ANR	4637	Argument	entries		4586	2					
ANR	4638	Identifier	entries		4586	0					
ANR	4639	ReturnType	void		4586	1					
ANR	4640	Identifier	AUD_register_card		4586	2					
ANR	4641	ParameterList	"const char * name , QEMUSoundCard * card"		4586	3					
ANR	4642	Parameter	const char * name	1:24:24:39	4586	0	True				
ANR	4643	ParameterType	const char *		4586	0					
ANR	4644	Identifier	name		4586	1					
ANR	4645	Parameter	QEMUSoundCard * card	1:42:42:60	4586	1	True				
ANR	4646	ParameterType	QEMUSoundCard *		4586	0					
ANR	4647	Identifier	card		4586	1					
ANR	4648	CFGEntryNode	ENTRY		4586		True				
ANR	4649	CFGExitNode	EXIT		4586		True				
ANR	4650	Symbol	card -> name		4586						
ANR	4651	Symbol	& glob_audio_state . card_head		4586						
ANR	4652	Symbol	entries		4586						
ANR	4653	Symbol	& glob_audio_state		4586						
ANR	4654	Symbol	name		4586						
ANR	4655	Symbol	* card		4586						
ANR	4656	Symbol	& card -> entries		4586						
ANR	4657	Symbol	card -> entries		4586						
ANR	4658	Symbol	glob_audio_state		4586						
ANR	4659	Symbol	card		4586						
ANR	4660	Symbol	qemu_strdup		4586						
