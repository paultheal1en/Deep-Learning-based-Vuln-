command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3596726	File	/home/p4ultr4n/workplace/ReVeal/raw_code/ff_opus_parse_extradata_1.c								
ANR	3596727	Function	ff_opus_parse_extradata	1:0:0:5111							
ANR	3596728	FunctionDef	"ff_opus_parse_extradata (AVCodecContext * avctx , OpusContext * s)"		3596727	0					
ANR	3596729	CompoundStatement		5:0:113:5111	3596727	0					
ANR	3596730	Statement	static	7:4:120:125	3596727	0	True				
ANR	3596731	IdentifierDeclStatement	"const uint8_t default_channel_map [ 2 ] = { 0 , 1 } ;"	7:11:127:174	3596727	1	True				
ANR	3596732	IdentifierDecl	"default_channel_map [ 2 ] = { 0 , 1 }"		3596727	0					
ANR	3596733	IdentifierDeclType	const uint8_t [ 2 ]		3596727	0					
ANR	3596734	Identifier	default_channel_map		3596727	1					
ANR	3596735	PrimaryExpression	2		3596727	2					
ANR	3596736	AssignmentExpression	"default_channel_map [ 2 ] = { 0 , 1 }"		3596727	3		=			
ANR	3596737	Identifier	default_channel_map		3596727	0					
ANR	3596738	InitializerList	0		3596727	1					
ANR	3596739	PrimaryExpression	0		3596727	0					
ANR	3596740	PrimaryExpression	1		3596727	1					
ANR	3596741	IdentifierDeclStatement	"int ( * channel_reorder ) ( int , int ) = channel_reorder_unknown ;"	11:4:183:241	3596727	2	True				
ANR	3596742	IdentifierDecl	"( * channel_reorder ) ( int , int ) = channel_reorder_unknown"		3596727	0					
ANR	3596743	IdentifierDeclType	"int ( * ) ( int , int )"		3596727	0					
ANR	3596744	Identifier	channel_reorder		3596727	1					
ANR	3596745	AssignmentExpression	"( * channel_reorder ) ( int , int ) = channel_reorder_unknown"		3596727	2		=			
ANR	3596746	Identifier	channel_reorder_unknown		3596727	0					
ANR	3596747	Identifier	channel_reorder_unknown		3596727	1					
ANR	3596748	IdentifierDeclStatement	"const uint8_t * extradata , * channel_map ;"	15:4:250:288	3596727	3	True				
ANR	3596749	IdentifierDecl	* extradata		3596727	0					
ANR	3596750	IdentifierDeclType	const uint8_t *		3596727	0					
ANR	3596751	Identifier	extradata		3596727	1					
ANR	3596752	IdentifierDecl	* channel_map		3596727	1					
ANR	3596753	IdentifierDeclType	const uint8_t *		3596727	0					
ANR	3596754	Identifier	channel_map		3596727	1					
ANR	3596755	IdentifierDeclStatement	int extradata_size ;	17:4:295:313	3596727	4	True				
ANR	3596756	IdentifierDecl	extradata_size		3596727	0					
ANR	3596757	IdentifierDeclType	int		3596727	0					
ANR	3596758	Identifier	extradata_size		3596727	1					
ANR	3596759	IdentifierDeclStatement	"int version , channels , map_type , streams , stereo_streams , i , j ;"	19:4:320:382	3596727	5	True				
ANR	3596760	IdentifierDecl	version		3596727	0					
ANR	3596761	IdentifierDeclType	int		3596727	0					
ANR	3596762	Identifier	version		3596727	1					
ANR	3596763	IdentifierDecl	channels		3596727	1					
ANR	3596764	IdentifierDeclType	int		3596727	0					
ANR	3596765	Identifier	channels		3596727	1					
ANR	3596766	IdentifierDecl	map_type		3596727	2					
ANR	3596767	IdentifierDeclType	int		3596727	0					
ANR	3596768	Identifier	map_type		3596727	1					
ANR	3596769	IdentifierDecl	streams		3596727	3					
ANR	3596770	IdentifierDeclType	int		3596727	0					
ANR	3596771	Identifier	streams		3596727	1					
ANR	3596772	IdentifierDecl	stereo_streams		3596727	4					
ANR	3596773	IdentifierDeclType	int		3596727	0					
ANR	3596774	Identifier	stereo_streams		3596727	1					
ANR	3596775	IdentifierDecl	i		3596727	5					
ANR	3596776	IdentifierDeclType	int		3596727	0					
ANR	3596777	Identifier	i		3596727	1					
ANR	3596778	IdentifierDecl	j		3596727	6					
ANR	3596779	IdentifierDeclType	int		3596727	0					
ANR	3596780	Identifier	j		3596727	1					
ANR	3596781	IdentifierDeclStatement	uint64_t layout ;	21:4:389:404	3596727	6	True				
ANR	3596782	IdentifierDecl	layout		3596727	0					
ANR	3596783	IdentifierDeclType	uint64_t		3596727	0					
ANR	3596784	Identifier	layout		3596727	1					
ANR	3596785	IfStatement	if ( ! avctx -> extradata )		3596727	7					
ANR	3596786	Condition	! avctx -> extradata	25:8:417:433	3596727	0	True				
ANR	3596787	UnaryOperationExpression	! avctx -> extradata		3596727	0					
ANR	3596788	UnaryOperator	!		3596727	0					
ANR	3596789	PtrMemberAccess	avctx -> extradata		3596727	1					
ANR	3596790	Identifier	avctx		3596727	0					
ANR	3596791	Identifier	extradata		3596727	1					
ANR	3596792	CompoundStatement		21:27:322:322	3596727	1					
ANR	3596793	IfStatement	if ( avctx -> channels > 2 )		3596727	0					
ANR	3596794	Condition	avctx -> channels > 2	27:12:451:469	3596727	0	True				
ANR	3596795	RelationalExpression	avctx -> channels > 2		3596727	0		>			
ANR	3596796	PtrMemberAccess	avctx -> channels		3596727	0					
ANR	3596797	Identifier	avctx		3596727	0					
ANR	3596798	Identifier	channels		3596727	1					
ANR	3596799	PrimaryExpression	2		3596727	1					
ANR	3596800	CompoundStatement		23:33:358:358	3596727	1					
ANR	3596801	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Multichannel configuration without extradata.\\n"" )"	29:12:487:585	3596727	0	True				
ANR	3596802	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Multichannel configuration without extradata.\\n"" )"		3596727	0					
ANR	3596803	Callee	av_log		3596727	0					
ANR	3596804	Identifier	av_log		3596727	0					
ANR	3596805	ArgumentList	avctx		3596727	1					
ANR	3596806	Argument	avctx		3596727	0					
ANR	3596807	Identifier	avctx		3596727	0					
ANR	3596808	Argument	AV_LOG_ERROR		3596727	1					
ANR	3596809	Identifier	AV_LOG_ERROR		3596727	0					
ANR	3596810	Argument	"""Multichannel configuration without extradata.\\n"""		3596727	2					
ANR	3596811	PrimaryExpression	"""Multichannel configuration without extradata.\\n"""		3596727	0					
ANR	3596812	ReturnStatement	return AVERROR ( EINVAL ) ;	33:12:600:622	3596727	1	True				
ANR	3596813	CallExpression	AVERROR ( EINVAL )		3596727	0					
ANR	3596814	Callee	AVERROR		3596727	0					
ANR	3596815	Identifier	AVERROR		3596727	0					
ANR	3596816	ArgumentList	EINVAL		3596727	1					
ANR	3596817	Argument	EINVAL		3596727	0					
ANR	3596818	Identifier	EINVAL		3596727	0					
ANR	3596819	ExpressionStatement	extradata = opus_default_extradata	37:8:644:683	3596727	1	True				
ANR	3596820	AssignmentExpression	extradata = opus_default_extradata		3596727	0		=			
ANR	3596821	Identifier	extradata		3596727	0					
ANR	3596822	Identifier	opus_default_extradata		3596727	1					
ANR	3596823	ExpressionStatement	extradata_size = sizeof ( opus_default_extradata )	39:8:694:741	3596727	2	True				
ANR	3596824	AssignmentExpression	extradata_size = sizeof ( opus_default_extradata )		3596727	0		=			
ANR	3596825	Identifier	extradata_size		3596727	0					
ANR	3596826	SizeofExpression	sizeof ( opus_default_extradata )		3596727	1					
ANR	3596827	Sizeof	sizeof		3596727	0					
ANR	3596828	SizeofOperand	opus_default_extradata		3596727	1					
ANR	3596829	ElseStatement	else		3596727	0					
ANR	3596830	CompoundStatement		37:11:641:641	3596727	0					
ANR	3596831	ExpressionStatement	extradata = avctx -> extradata	43:8:766:794	3596727	0	True				
ANR	3596832	AssignmentExpression	extradata = avctx -> extradata		3596727	0		=			
ANR	3596833	Identifier	extradata		3596727	0					
ANR	3596834	PtrMemberAccess	avctx -> extradata		3596727	1					
ANR	3596835	Identifier	avctx		3596727	0					
ANR	3596836	Identifier	extradata		3596727	1					
ANR	3596837	ExpressionStatement	extradata_size = avctx -> extradata_size	45:8:805:843	3596727	1	True				
ANR	3596838	AssignmentExpression	extradata_size = avctx -> extradata_size		3596727	0		=			
ANR	3596839	Identifier	extradata_size		3596727	0					
ANR	3596840	PtrMemberAccess	avctx -> extradata_size		3596727	1					
ANR	3596841	Identifier	avctx		3596727	0					
ANR	3596842	Identifier	extradata_size		3596727	1					
ANR	3596843	IfStatement	if ( extradata_size < 19 )		3596727	8					
ANR	3596844	Condition	extradata_size < 19	51:8:863:881	3596727	0	True				
ANR	3596845	RelationalExpression	extradata_size < 19		3596727	0		<			
ANR	3596846	Identifier	extradata_size		3596727	0					
ANR	3596847	PrimaryExpression	19		3596727	1					
ANR	3596848	CompoundStatement		47:29:770:770	3596727	1					
ANR	3596849	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Invalid extradata size: %d\\n"" , extradata_size )"	53:8:895:986	3596727	0	True				
ANR	3596850	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Invalid extradata size: %d\\n"" , extradata_size )"		3596727	0					
ANR	3596851	Callee	av_log		3596727	0					
ANR	3596852	Identifier	av_log		3596727	0					
ANR	3596853	ArgumentList	avctx		3596727	1					
ANR	3596854	Argument	avctx		3596727	0					
ANR	3596855	Identifier	avctx		3596727	0					
ANR	3596856	Argument	AV_LOG_ERROR		3596727	1					
ANR	3596857	Identifier	AV_LOG_ERROR		3596727	0					
ANR	3596858	Argument	"""Invalid extradata size: %d\\n"""		3596727	2					
ANR	3596859	PrimaryExpression	"""Invalid extradata size: %d\\n"""		3596727	0					
ANR	3596860	Argument	extradata_size		3596727	3					
ANR	3596861	Identifier	extradata_size		3596727	0					
ANR	3596862	ReturnStatement	return AVERROR_INVALIDDATA ;	57:8:997:1023	3596727	1	True				
ANR	3596863	Identifier	AVERROR_INVALIDDATA		3596727	0					
ANR	3596864	ExpressionStatement	version = extradata [ 8 ]	63:4:1039:1061	3596727	9	True				
ANR	3596865	AssignmentExpression	version = extradata [ 8 ]		3596727	0		=			
ANR	3596866	Identifier	version		3596727	0					
ANR	3596867	ArrayIndexing	extradata [ 8 ]		3596727	1					
ANR	3596868	Identifier	extradata		3596727	0					
ANR	3596869	PrimaryExpression	8		3596727	1					
ANR	3596870	IfStatement	if ( version > 15 )		3596727	10					
ANR	3596871	Condition	version > 15	65:8:1072:1083	3596727	0	True				
ANR	3596872	RelationalExpression	version > 15		3596727	0		>			
ANR	3596873	Identifier	version		3596727	0					
ANR	3596874	PrimaryExpression	15		3596727	1					
ANR	3596875	CompoundStatement		61:22:972:972	3596727	1					
ANR	3596876	ExpressionStatement	"avpriv_request_sample ( avctx , ""Extradata version %d"" , version )"	67:8:1097:1158	3596727	0	True				
ANR	3596877	CallExpression	"avpriv_request_sample ( avctx , ""Extradata version %d"" , version )"		3596727	0					
ANR	3596878	Callee	avpriv_request_sample		3596727	0					
ANR	3596879	Identifier	avpriv_request_sample		3596727	0					
ANR	3596880	ArgumentList	avctx		3596727	1					
ANR	3596881	Argument	avctx		3596727	0					
ANR	3596882	Identifier	avctx		3596727	0					
ANR	3596883	Argument	"""Extradata version %d"""		3596727	1					
ANR	3596884	PrimaryExpression	"""Extradata version %d"""		3596727	0					
ANR	3596885	Argument	version		3596727	2					
ANR	3596886	Identifier	version		3596727	0					
ANR	3596887	ReturnStatement	return AVERROR_PATCHWELCOME ;	69:8:1169:1196	3596727	1	True				
ANR	3596888	Identifier	AVERROR_PATCHWELCOME		3596727	0					
ANR	3596889	ExpressionStatement	avctx -> delay = AV_RL16 ( extradata + 10 )	75:4:1212:1250	3596727	11	True				
ANR	3596890	AssignmentExpression	avctx -> delay = AV_RL16 ( extradata + 10 )		3596727	0		=			
ANR	3596891	PtrMemberAccess	avctx -> delay		3596727	0					
ANR	3596892	Identifier	avctx		3596727	0					
ANR	3596893	Identifier	delay		3596727	1					
ANR	3596894	CallExpression	AV_RL16 ( extradata + 10 )		3596727	1					
ANR	3596895	Callee	AV_RL16		3596727	0					
ANR	3596896	Identifier	AV_RL16		3596727	0					
ANR	3596897	ArgumentList	extradata + 10		3596727	1					
ANR	3596898	Argument	extradata + 10		3596727	0					
ANR	3596899	AdditiveExpression	extradata + 10		3596727	0		+			
ANR	3596900	Identifier	extradata		3596727	0					
ANR	3596901	PrimaryExpression	10		3596727	1					
ANR	3596902	ExpressionStatement	channels = avctx -> extradata ? extradata [ 9 ] : ( avctx -> channels == 1 ) ? 1 : 2	79:4:1259:1334	3596727	12	True				
ANR	3596903	AssignmentExpression	channels = avctx -> extradata ? extradata [ 9 ] : ( avctx -> channels == 1 ) ? 1 : 2		3596727	0		=			
ANR	3596904	Identifier	channels		3596727	0					
ANR	3596905	ConditionalExpression	avctx -> extradata ? extradata [ 9 ] : ( avctx -> channels == 1 ) ? 1 : 2		3596727	1					
ANR	3596906	Condition	avctx -> extradata		3596727	0					
ANR	3596907	PtrMemberAccess	avctx -> extradata		3596727	0					
ANR	3596908	Identifier	avctx		3596727	0					
ANR	3596909	Identifier	extradata		3596727	1					
ANR	3596910	ArrayIndexing	extradata [ 9 ]		3596727	1					
ANR	3596911	Identifier	extradata		3596727	0					
ANR	3596912	PrimaryExpression	9		3596727	1					
ANR	3596913	ConditionalExpression	( avctx -> channels == 1 ) ? 1 : 2		3596727	2					
ANR	3596914	Condition	avctx -> channels == 1		3596727	0					
ANR	3596915	EqualityExpression	avctx -> channels == 1		3596727	0		==			
ANR	3596916	PtrMemberAccess	avctx -> channels		3596727	0					
ANR	3596917	Identifier	avctx		3596727	0					
ANR	3596918	Identifier	channels		3596727	1					
ANR	3596919	PrimaryExpression	1		3596727	1					
ANR	3596920	PrimaryExpression	1		3596727	1					
ANR	3596921	PrimaryExpression	2		3596727	2					
ANR	3596922	IfStatement	if ( ! channels )		3596727	13					
ANR	3596923	Condition	! channels	81:8:1345:1353	3596727	0	True				
ANR	3596924	UnaryOperationExpression	! channels		3596727	0					
ANR	3596925	UnaryOperator	!		3596727	0					
ANR	3596926	Identifier	channels		3596727	1					
ANR	3596927	CompoundStatement		77:19:1242:1242	3596727	1					
ANR	3596928	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Zero channel count specified in the extradata\\n"" )"	83:8:1367:1445	3596727	0	True				
ANR	3596929	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Zero channel count specified in the extradata\\n"" )"		3596727	0					
ANR	3596930	Callee	av_log		3596727	0					
ANR	3596931	Identifier	av_log		3596727	0					
ANR	3596932	ArgumentList	avctx		3596727	1					
ANR	3596933	Argument	avctx		3596727	0					
ANR	3596934	Identifier	avctx		3596727	0					
ANR	3596935	Argument	AV_LOG_ERROR		3596727	1					
ANR	3596936	Identifier	AV_LOG_ERROR		3596727	0					
ANR	3596937	Argument	"""Zero channel count specified in the extradata\\n"""		3596727	2					
ANR	3596938	PrimaryExpression	"""Zero channel count specified in the extradata\\n"""		3596727	0					
ANR	3596939	ReturnStatement	return AVERROR_INVALIDDATA ;	85:8:1456:1482	3596727	1	True				
ANR	3596940	Identifier	AVERROR_INVALIDDATA		3596727	0					
ANR	3596941	ExpressionStatement	s -> gain_i = AV_RL16 ( extradata + 16 )	91:4:1498:1533	3596727	14	True				
ANR	3596942	AssignmentExpression	s -> gain_i = AV_RL16 ( extradata + 16 )		3596727	0		=			
ANR	3596943	PtrMemberAccess	s -> gain_i		3596727	0					
ANR	3596944	Identifier	s		3596727	0					
ANR	3596945	Identifier	gain_i		3596727	1					
ANR	3596946	CallExpression	AV_RL16 ( extradata + 16 )		3596727	1					
ANR	3596947	Callee	AV_RL16		3596727	0					
ANR	3596948	Identifier	AV_RL16		3596727	0					
ANR	3596949	ArgumentList	extradata + 16		3596727	1					
ANR	3596950	Argument	extradata + 16		3596727	0					
ANR	3596951	AdditiveExpression	extradata + 16		3596727	0		+			
ANR	3596952	Identifier	extradata		3596727	0					
ANR	3596953	PrimaryExpression	16		3596727	1					
ANR	3596954	IfStatement	if ( s -> gain_i )		3596727	15					
ANR	3596955	Condition	s -> gain_i	93:8:1544:1552	3596727	0	True				
ANR	3596956	PtrMemberAccess	s -> gain_i		3596727	0					
ANR	3596957	Identifier	s		3596727	0					
ANR	3596958	Identifier	gain_i		3596727	1					
ANR	3596959	ExpressionStatement	s -> gain = ff_exp10 ( s -> gain_i / ( 20.0 * 256 ) )	95:8:1564:1608	3596727	1	True				
ANR	3596960	AssignmentExpression	s -> gain = ff_exp10 ( s -> gain_i / ( 20.0 * 256 ) )		3596727	0		=			
ANR	3596961	PtrMemberAccess	s -> gain		3596727	0					
ANR	3596962	Identifier	s		3596727	0					
ANR	3596963	Identifier	gain		3596727	1					
ANR	3596964	CallExpression	ff_exp10 ( s -> gain_i / ( 20.0 * 256 ) )		3596727	1					
ANR	3596965	Callee	ff_exp10		3596727	0					
ANR	3596966	Identifier	ff_exp10		3596727	0					
ANR	3596967	ArgumentList	s -> gain_i / ( 20.0 * 256 )		3596727	1					
ANR	3596968	Argument	s -> gain_i / ( 20.0 * 256 )		3596727	0					
ANR	3596969	MultiplicativeExpression	s -> gain_i / ( 20.0 * 256 )		3596727	0		/			
ANR	3596970	PtrMemberAccess	s -> gain_i		3596727	0					
ANR	3596971	Identifier	s		3596727	0					
ANR	3596972	Identifier	gain_i		3596727	1					
ANR	3596973	MultiplicativeExpression	20.0 * 256		3596727	1		*			
ANR	3596974	PrimaryExpression	20.0		3596727	0					
ANR	3596975	PrimaryExpression	256		3596727	1					
ANR	3596976	ExpressionStatement	map_type = extradata [ 18 ]	99:4:1617:1641	3596727	16	True				
ANR	3596977	AssignmentExpression	map_type = extradata [ 18 ]		3596727	0		=			
ANR	3596978	Identifier	map_type		3596727	0					
ANR	3596979	ArrayIndexing	extradata [ 18 ]		3596727	1					
ANR	3596980	Identifier	extradata		3596727	0					
ANR	3596981	PrimaryExpression	18		3596727	1					
ANR	3596982	IfStatement	if ( ! map_type )		3596727	17					
ANR	3596983	Condition	! map_type	101:8:1652:1660	3596727	0	True				
ANR	3596984	UnaryOperationExpression	! map_type		3596727	0					
ANR	3596985	UnaryOperator	!		3596727	0					
ANR	3596986	Identifier	map_type		3596727	1					
ANR	3596987	CompoundStatement		97:19:1549:1549	3596727	1					
ANR	3596988	IfStatement	if ( channels > 2 )		3596727	0					
ANR	3596989	Condition	channels > 2	103:12:1678:1689	3596727	0	True				
ANR	3596990	RelationalExpression	channels > 2		3596727	0		>			
ANR	3596991	Identifier	channels		3596727	0					
ANR	3596992	PrimaryExpression	2		3596727	1					
ANR	3596993	CompoundStatement		99:26:1578:1578	3596727	1					
ANR	3596994	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Channel mapping 0 is only specified for up to 2 channels\\n"" )"	105:12:1707:1816	3596727	0	True				
ANR	3596995	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Channel mapping 0 is only specified for up to 2 channels\\n"" )"		3596727	0					
ANR	3596996	Callee	av_log		3596727	0					
ANR	3596997	Identifier	av_log		3596727	0					
ANR	3596998	ArgumentList	avctx		3596727	1					
ANR	3596999	Argument	avctx		3596727	0					
ANR	3597000	Identifier	avctx		3596727	0					
ANR	3597001	Argument	AV_LOG_ERROR		3596727	1					
ANR	3597002	Identifier	AV_LOG_ERROR		3596727	0					
ANR	3597003	Argument	"""Channel mapping 0 is only specified for up to 2 channels\\n"""		3596727	2					
ANR	3597004	PrimaryExpression	"""Channel mapping 0 is only specified for up to 2 channels\\n"""		3596727	0					
ANR	3597005	ReturnStatement	return AVERROR_INVALIDDATA ;	109:12:1831:1857	3596727	1	True				
ANR	3597006	Identifier	AVERROR_INVALIDDATA		3596727	0					
ANR	3597007	ExpressionStatement	layout = ( channels == 1 ) ? AV_CH_LAYOUT_MONO : AV_CH_LAYOUT_STEREO	113:8:1879:1953	3596727	1	True				
ANR	3597008	AssignmentExpression	layout = ( channels == 1 ) ? AV_CH_LAYOUT_MONO : AV_CH_LAYOUT_STEREO		3596727	0		=			
ANR	3597009	Identifier	layout		3596727	0					
ANR	3597010	ConditionalExpression	( channels == 1 ) ? AV_CH_LAYOUT_MONO : AV_CH_LAYOUT_STEREO		3596727	1					
ANR	3597011	Condition	channels == 1		3596727	0					
ANR	3597012	EqualityExpression	channels == 1		3596727	0		==			
ANR	3597013	Identifier	channels		3596727	0					
ANR	3597014	PrimaryExpression	1		3596727	1					
ANR	3597015	Identifier	AV_CH_LAYOUT_MONO		3596727	1					
ANR	3597016	Identifier	AV_CH_LAYOUT_STEREO		3596727	2					
ANR	3597017	ExpressionStatement	streams = 1	115:8:1964:1982	3596727	2	True				
ANR	3597018	AssignmentExpression	streams = 1		3596727	0		=			
ANR	3597019	Identifier	streams		3596727	0					
ANR	3597020	PrimaryExpression	1		3596727	1					
ANR	3597021	ExpressionStatement	stereo_streams = channels - 1	117:8:1993:2022	3596727	3	True				
ANR	3597022	AssignmentExpression	stereo_streams = channels - 1		3596727	0		=			
ANR	3597023	Identifier	stereo_streams		3596727	0					
ANR	3597024	AdditiveExpression	channels - 1		3596727	1		-			
ANR	3597025	Identifier	channels		3596727	0					
ANR	3597026	PrimaryExpression	1		3596727	1					
ANR	3597027	ExpressionStatement	channel_map = default_channel_map	119:8:2033:2069	3596727	4	True				
ANR	3597028	AssignmentExpression	channel_map = default_channel_map		3596727	0		=			
ANR	3597029	Identifier	channel_map		3596727	0					
ANR	3597030	Identifier	default_channel_map		3596727	1					
ANR	3597031	ElseStatement	else		3596727	0					
ANR	3597032	IfStatement	if ( map_type == 1 || map_type == 2 || map_type == 255 )		3596727	0					
ANR	3597033	Condition	map_type == 1 || map_type == 2 || map_type == 255	121:15:2087:2135	3596727	0	True				
ANR	3597034	OrExpression	map_type == 1 || map_type == 2 || map_type == 255		3596727	0		||			
ANR	3597035	EqualityExpression	map_type == 1		3596727	0		==			
ANR	3597036	Identifier	map_type		3596727	0					
ANR	3597037	PrimaryExpression	1		3596727	1					
ANR	3597038	OrExpression	map_type == 2 || map_type == 255		3596727	1		||			
ANR	3597039	EqualityExpression	map_type == 2		3596727	0		==			
ANR	3597040	Identifier	map_type		3596727	0					
ANR	3597041	PrimaryExpression	2		3596727	1					
ANR	3597042	EqualityExpression	map_type == 255		3596727	1		==			
ANR	3597043	Identifier	map_type		3596727	0					
ANR	3597044	PrimaryExpression	255		3596727	1					
ANR	3597045	CompoundStatement		117:66:2024:2024	3596727	1					
ANR	3597046	IfStatement	if ( extradata_size < 21 + channels )		3596727	0					
ANR	3597047	Condition	extradata_size < 21 + channels	123:12:2153:2182	3596727	0	True				
ANR	3597048	RelationalExpression	extradata_size < 21 + channels		3596727	0		<			
ANR	3597049	Identifier	extradata_size		3596727	0					
ANR	3597050	AdditiveExpression	21 + channels		3596727	1		+			
ANR	3597051	PrimaryExpression	21		3596727	0					
ANR	3597052	Identifier	channels		3596727	1					
ANR	3597053	CompoundStatement		119:44:2071:2071	3596727	1					
ANR	3597054	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Invalid extradata size: %d\\n"" , extradata_size )"	125:12:2200:2295	3596727	0	True				
ANR	3597055	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Invalid extradata size: %d\\n"" , extradata_size )"		3596727	0					
ANR	3597056	Callee	av_log		3596727	0					
ANR	3597057	Identifier	av_log		3596727	0					
ANR	3597058	ArgumentList	avctx		3596727	1					
ANR	3597059	Argument	avctx		3596727	0					
ANR	3597060	Identifier	avctx		3596727	0					
ANR	3597061	Argument	AV_LOG_ERROR		3596727	1					
ANR	3597062	Identifier	AV_LOG_ERROR		3596727	0					
ANR	3597063	Argument	"""Invalid extradata size: %d\\n"""		3596727	2					
ANR	3597064	PrimaryExpression	"""Invalid extradata size: %d\\n"""		3596727	0					
ANR	3597065	Argument	extradata_size		3596727	3					
ANR	3597066	Identifier	extradata_size		3596727	0					
ANR	3597067	ReturnStatement	return AVERROR_INVALIDDATA ;	129:12:2310:2336	3596727	1	True				
ANR	3597068	Identifier	AVERROR_INVALIDDATA		3596727	0					
ANR	3597069	ExpressionStatement	streams = extradata [ 19 ]	135:8:2360:2390	3596727	1	True				
ANR	3597070	AssignmentExpression	streams = extradata [ 19 ]		3596727	0		=			
ANR	3597071	Identifier	streams		3596727	0					
ANR	3597072	ArrayIndexing	extradata [ 19 ]		3596727	1					
ANR	3597073	Identifier	extradata		3596727	0					
ANR	3597074	PrimaryExpression	19		3596727	1					
ANR	3597075	ExpressionStatement	stereo_streams = extradata [ 20 ]	137:8:2401:2431	3596727	2	True				
ANR	3597076	AssignmentExpression	stereo_streams = extradata [ 20 ]		3596727	0		=			
ANR	3597077	Identifier	stereo_streams		3596727	0					
ANR	3597078	ArrayIndexing	extradata [ 20 ]		3596727	1					
ANR	3597079	Identifier	extradata		3596727	0					
ANR	3597080	PrimaryExpression	20		3596727	1					
ANR	3597081	IfStatement	if ( ! streams || stereo_streams > streams || streams + stereo_streams > 255 )		3596727	3					
ANR	3597082	Condition	! streams || stereo_streams > streams || streams + stereo_streams > 255	139:12:2446:2528	3596727	0	True				
ANR	3597083	OrExpression	! streams || stereo_streams > streams || streams + stereo_streams > 255		3596727	0		||			
ANR	3597084	UnaryOperationExpression	! streams		3596727	0					
ANR	3597085	UnaryOperator	!		3596727	0					
ANR	3597086	Identifier	streams		3596727	1					
ANR	3597087	OrExpression	stereo_streams > streams || streams + stereo_streams > 255		3596727	1		||			
ANR	3597088	RelationalExpression	stereo_streams > streams		3596727	0		>			
ANR	3597089	Identifier	stereo_streams		3596727	0					
ANR	3597090	Identifier	streams		3596727	1					
ANR	3597091	RelationalExpression	streams + stereo_streams > 255		3596727	1		>			
ANR	3597092	AdditiveExpression	streams + stereo_streams		3596727	0		+			
ANR	3597093	Identifier	streams		3596727	0					
ANR	3597094	Identifier	stereo_streams		3596727	1					
ANR	3597095	PrimaryExpression	255		3596727	1					
ANR	3597096	CompoundStatement		137:44:2417:2417	3596727	1					
ANR	3597097	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Invalid stream/stereo stream count: %d/%d\\n"" , streams , stereo_streams )"	143:12:2546:2665	3596727	0	True				
ANR	3597098	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Invalid stream/stereo stream count: %d/%d\\n"" , streams , stereo_streams )"		3596727	0					
ANR	3597099	Callee	av_log		3596727	0					
ANR	3597100	Identifier	av_log		3596727	0					
ANR	3597101	ArgumentList	avctx		3596727	1					
ANR	3597102	Argument	avctx		3596727	0					
ANR	3597103	Identifier	avctx		3596727	0					
ANR	3597104	Argument	AV_LOG_ERROR		3596727	1					
ANR	3597105	Identifier	AV_LOG_ERROR		3596727	0					
ANR	3597106	Argument	"""Invalid stream/stereo stream count: %d/%d\\n"""		3596727	2					
ANR	3597107	PrimaryExpression	"""Invalid stream/stereo stream count: %d/%d\\n"""		3596727	0					
ANR	3597108	Argument	streams		3596727	3					
ANR	3597109	Identifier	streams		3596727	0					
ANR	3597110	Argument	stereo_streams		3596727	4					
ANR	3597111	Identifier	stereo_streams		3596727	0					
ANR	3597112	ReturnStatement	return AVERROR_INVALIDDATA ;	147:12:2680:2706	3596727	1	True				
ANR	3597113	Identifier	AVERROR_INVALIDDATA		3596727	0					
ANR	3597114	IfStatement	if ( map_type == 1 )		3596727	4					
ANR	3597115	Condition	map_type == 1	153:12:2734:2746	3596727	0	True				
ANR	3597116	EqualityExpression	map_type == 1		3596727	0		==			
ANR	3597117	Identifier	map_type		3596727	0					
ANR	3597118	PrimaryExpression	1		3596727	1					
ANR	3597119	CompoundStatement		149:27:2635:2635	3596727	1					
ANR	3597120	IfStatement	if ( channels > 8 )		3596727	0					
ANR	3597121	Condition	channels > 8	155:16:2768:2779	3596727	0	True				
ANR	3597122	RelationalExpression	channels > 8		3596727	0		>			
ANR	3597123	Identifier	channels		3596727	0					
ANR	3597124	PrimaryExpression	8		3596727	1					
ANR	3597125	CompoundStatement		151:30:2668:2668	3596727	1					
ANR	3597126	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Channel mapping 1 is only specified for up to 8 channels\\n"" )"	157:16:2801:2914	3596727	0	True				
ANR	3597127	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Channel mapping 1 is only specified for up to 8 channels\\n"" )"		3596727	0					
ANR	3597128	Callee	av_log		3596727	0					
ANR	3597129	Identifier	av_log		3596727	0					
ANR	3597130	ArgumentList	avctx		3596727	1					
ANR	3597131	Argument	avctx		3596727	0					
ANR	3597132	Identifier	avctx		3596727	0					
ANR	3597133	Argument	AV_LOG_ERROR		3596727	1					
ANR	3597134	Identifier	AV_LOG_ERROR		3596727	0					
ANR	3597135	Argument	"""Channel mapping 1 is only specified for up to 8 channels\\n"""		3596727	2					
ANR	3597136	PrimaryExpression	"""Channel mapping 1 is only specified for up to 8 channels\\n"""		3596727	0					
ANR	3597137	ReturnStatement	return AVERROR_INVALIDDATA ;	161:16:2933:2959	3596727	1	True				
ANR	3597138	Identifier	AVERROR_INVALIDDATA		3596727	0					
ANR	3597139	ExpressionStatement	layout = ff_vorbis_channel_layouts [ channels - 1 ]	165:12:2989:3037	3596727	1	True				
ANR	3597140	AssignmentExpression	layout = ff_vorbis_channel_layouts [ channels - 1 ]		3596727	0		=			
ANR	3597141	Identifier	layout		3596727	0					
ANR	3597142	ArrayIndexing	ff_vorbis_channel_layouts [ channels - 1 ]		3596727	1					
ANR	3597143	Identifier	ff_vorbis_channel_layouts		3596727	0					
ANR	3597144	AdditiveExpression	channels - 1		3596727	1		-			
ANR	3597145	Identifier	channels		3596727	0					
ANR	3597146	PrimaryExpression	1		3596727	1					
ANR	3597147	ExpressionStatement	channel_reorder = channel_reorder_vorbis	167:12:3052:3092	3596727	2	True				
ANR	3597148	AssignmentExpression	channel_reorder = channel_reorder_vorbis		3596727	0		=			
ANR	3597149	Identifier	channel_reorder		3596727	0					
ANR	3597150	Identifier	channel_reorder_vorbis		3596727	1					
ANR	3597151	ElseStatement	else		3596727	0					
ANR	3597152	IfStatement	if ( map_type == 2 )		3596727	0					
ANR	3597153	Condition	map_type == 2	169:19:3114:3126	3596727	0	True				
ANR	3597154	EqualityExpression	map_type == 2		3596727	0		==			
ANR	3597155	Identifier	map_type		3596727	0					
ANR	3597156	PrimaryExpression	2		3596727	1					
ANR	3597157	CompoundStatement		167:12:3030:3073	3596727	1					
ANR	3597158	IdentifierDeclStatement	int ambisonic_order = ff_sqrt ( channels ) - 1 ;	171:12:3144:3187	3596727	0	True				
ANR	3597159	IdentifierDecl	ambisonic_order = ff_sqrt ( channels ) - 1		3596727	0					
ANR	3597160	IdentifierDeclType	int		3596727	0					
ANR	3597161	Identifier	ambisonic_order		3596727	1					
ANR	3597162	AssignmentExpression	ambisonic_order = ff_sqrt ( channels ) - 1		3596727	2		=			
ANR	3597163	Identifier	ambisonic_order		3596727	0					
ANR	3597164	AdditiveExpression	ff_sqrt ( channels ) - 1		3596727	1		-			
ANR	3597165	CallExpression	ff_sqrt ( channels )		3596727	0					
ANR	3597166	Callee	ff_sqrt		3596727	0					
ANR	3597167	Identifier	ff_sqrt		3596727	0					
ANR	3597168	ArgumentList	channels		3596727	1					
ANR	3597169	Argument	channels		3596727	0					
ANR	3597170	Identifier	channels		3596727	0					
ANR	3597171	PrimaryExpression	1		3596727	1					
ANR	3597172	IfStatement	if ( channels != ( ambisonic_order + 1 ) * ( ambisonic_order + 1 ) )		3596727	1					
ANR	3597173	Condition	channels != ( ambisonic_order + 1 ) * ( ambisonic_order + 1 )	173:16:3206:3262	3596727	0	True				
ANR	3597174	EqualityExpression	channels != ( ambisonic_order + 1 ) * ( ambisonic_order + 1 )		3596727	0		!=			
ANR	3597175	Identifier	channels		3596727	0					
ANR	3597176	MultiplicativeExpression	( ambisonic_order + 1 ) * ( ambisonic_order + 1 )		3596727	1		*			
ANR	3597177	AdditiveExpression	ambisonic_order + 1		3596727	0		+			
ANR	3597178	Identifier	ambisonic_order		3596727	0					
ANR	3597179	PrimaryExpression	1		3596727	1					
ANR	3597180	AdditiveExpression	ambisonic_order + 1		3596727	1		+			
ANR	3597181	Identifier	ambisonic_order		3596727	0					
ANR	3597182	PrimaryExpression	1		3596727	1					
ANR	3597183	CompoundStatement		169:75:3151:3151	3596727	1					
ANR	3597184	Statement	av_log	175:16:3284:3289	3596727	0	True				
ANR	3597185	Statement	(	175:22:3290:3290	3596727	1	True				
ANR	3597186	Statement	avctx	175:23:3291:3295	3596727	2	True				
ANR	3597187	Statement	","	175:28:3296:3296	3596727	3	True				
ANR	3597188	Statement	AV_LOG_ERROR	175:30:3298:3309	3596727	4	True				
ANR	3597189	Statement	","	175:42:3310:3310	3596727	5	True				
ANR	3597190	Statement	"""Channel mapping 2 is only specified for channel counts"""	177:23:3336:3391	3596727	6	True				
ANR	3597191	Statement	""" which can be written as (n + 1)^2 for nonnegative integer n\\n"""	179:23:3417:3480	3596727	7	True				
ANR	3597192	Statement	)	179:87:3481:3481	3596727	8	True				
ANR	3597193	ExpressionStatement		179:88:3482:3482	3596727	9	True				
ANR	3597194	ReturnStatement	return AVERROR_INVALIDDATA ;	181:16:3501:3527	3596727	10	True				
ANR	3597195	Identifier	AVERROR_INVALIDDATA		3596727	0					
ANR	3597196	ExpressionStatement	layout = 0	185:12:3557:3567	3596727	2	True				
ANR	3597197	AssignmentExpression	layout = 0		3596727	0		=			
ANR	3597198	Identifier	layout		3596727	0					
ANR	3597199	PrimaryExpression	0		3596727	1					
ANR	3597200	ElseStatement	else		3596727	0					
ANR	3597201	ExpressionStatement	layout = 0	189:12:3598:3608	3596727	0	True				
ANR	3597202	AssignmentExpression	layout = 0		3596727	0		=			
ANR	3597203	Identifier	layout		3596727	0					
ANR	3597204	PrimaryExpression	0		3596727	1					
ANR	3597205	ExpressionStatement	channel_map = extradata + 21	193:8:3621:3649	3596727	5	True				
ANR	3597206	AssignmentExpression	channel_map = extradata + 21		3596727	0		=			
ANR	3597207	Identifier	channel_map		3596727	0					
ANR	3597208	AdditiveExpression	extradata + 21		3596727	1		+			
ANR	3597209	Identifier	extradata		3596727	0					
ANR	3597210	PrimaryExpression	21		3596727	1					
ANR	3597211	ElseStatement	else		3596727	0					
ANR	3597212	CompoundStatement		191:11:3549:3549	3596727	0					
ANR	3597213	ExpressionStatement	"avpriv_request_sample ( avctx , ""Mapping type %d"" , map_type )"	197:8:3674:3731	3596727	0	True				
ANR	3597214	CallExpression	"avpriv_request_sample ( avctx , ""Mapping type %d"" , map_type )"		3596727	0					
ANR	3597215	Callee	avpriv_request_sample		3596727	0					
ANR	3597216	Identifier	avpriv_request_sample		3596727	0					
ANR	3597217	ArgumentList	avctx		3596727	1					
ANR	3597218	Argument	avctx		3596727	0					
ANR	3597219	Identifier	avctx		3596727	0					
ANR	3597220	Argument	"""Mapping type %d"""		3596727	1					
ANR	3597221	PrimaryExpression	"""Mapping type %d"""		3596727	0					
ANR	3597222	Argument	map_type		3596727	2					
ANR	3597223	Identifier	map_type		3596727	0					
ANR	3597224	ReturnStatement	return AVERROR_PATCHWELCOME ;	199:8:3742:3769	3596727	1	True				
ANR	3597225	Identifier	AVERROR_PATCHWELCOME		3596727	0					
ANR	3597226	ExpressionStatement	"s -> channel_maps = av_mallocz_array ( channels , sizeof ( * s -> channel_maps ) )"	205:4:3785:3855	3596727	18	True				
ANR	3597227	AssignmentExpression	"s -> channel_maps = av_mallocz_array ( channels , sizeof ( * s -> channel_maps ) )"		3596727	0		=			
ANR	3597228	PtrMemberAccess	s -> channel_maps		3596727	0					
ANR	3597229	Identifier	s		3596727	0					
ANR	3597230	Identifier	channel_maps		3596727	1					
ANR	3597231	CallExpression	"av_mallocz_array ( channels , sizeof ( * s -> channel_maps ) )"		3596727	1					
ANR	3597232	Callee	av_mallocz_array		3596727	0					
ANR	3597233	Identifier	av_mallocz_array		3596727	0					
ANR	3597234	ArgumentList	channels		3596727	1					
ANR	3597235	Argument	channels		3596727	0					
ANR	3597236	Identifier	channels		3596727	0					
ANR	3597237	Argument	sizeof ( * s -> channel_maps )		3596727	1					
ANR	3597238	SizeofExpression	sizeof ( * s -> channel_maps )		3596727	0					
ANR	3597239	Sizeof	sizeof		3596727	0					
ANR	3597240	UnaryOperationExpression	* s -> channel_maps		3596727	1					
ANR	3597241	UnaryOperator	*		3596727	0					
ANR	3597242	PtrMemberAccess	s -> channel_maps		3596727	1					
ANR	3597243	Identifier	s		3596727	0					
ANR	3597244	Identifier	channel_maps		3596727	1					
ANR	3597245	IfStatement	if ( ! s -> channel_maps )		3596727	19					
ANR	3597246	Condition	! s -> channel_maps	207:8:3866:3881	3596727	0	True				
ANR	3597247	UnaryOperationExpression	! s -> channel_maps		3596727	0					
ANR	3597248	UnaryOperator	!		3596727	0					
ANR	3597249	PtrMemberAccess	s -> channel_maps		3596727	1					
ANR	3597250	Identifier	s		3596727	0					
ANR	3597251	Identifier	channel_maps		3596727	1					
ANR	3597252	ReturnStatement	return AVERROR ( ENOMEM ) ;	209:8:3893:3915	3596727	1	True				
ANR	3597253	CallExpression	AVERROR ( ENOMEM )		3596727	0					
ANR	3597254	Callee	AVERROR		3596727	0					
ANR	3597255	Identifier	AVERROR		3596727	0					
ANR	3597256	ArgumentList	ENOMEM		3596727	1					
ANR	3597257	Argument	ENOMEM		3596727	0					
ANR	3597258	Identifier	ENOMEM		3596727	0					
ANR	3597259	ForStatement	for ( i = 0 ; i < channels ; i ++ )		3596727	20					
ANR	3597260	ForInit	i = 0 ;	213:9:3929:3934	3596727	0	True				
ANR	3597261	AssignmentExpression	i = 0		3596727	0		=			
ANR	3597262	Identifier	i		3596727	0					
ANR	3597263	PrimaryExpression	0		3596727	1					
ANR	3597264	Condition	i < channels	213:16:3936:3947	3596727	1	True				
ANR	3597265	RelationalExpression	i < channels		3596727	0		<			
ANR	3597266	Identifier	i		3596727	0					
ANR	3597267	Identifier	channels		3596727	1					
ANR	3597268	PostIncDecOperationExpression	i ++	213:30:3950:3952	3596727	2	True				
ANR	3597269	Identifier	i		3596727	0					
ANR	3597270	IncDec	++		3596727	1					
ANR	3597271	CompoundStatement		213:8:3900:3959	3596727	3					
ANR	3597272	IdentifierDeclStatement	ChannelMap * map = & s -> channel_maps [ i ] ;	215:8:3966:4003	3596727	0	True				
ANR	3597273	IdentifierDecl	* map = & s -> channel_maps [ i ]		3596727	0					
ANR	3597274	IdentifierDeclType	ChannelMap *		3596727	0					
ANR	3597275	Identifier	map		3596727	1					
ANR	3597276	AssignmentExpression	* map = & s -> channel_maps [ i ]		3596727	2		=			
ANR	3597277	Identifier	map		3596727	0					
ANR	3597278	UnaryOperationExpression	& s -> channel_maps [ i ]		3596727	1					
ANR	3597279	UnaryOperator	&		3596727	0					
ANR	3597280	ArrayIndexing	s -> channel_maps [ i ]		3596727	1					
ANR	3597281	PtrMemberAccess	s -> channel_maps		3596727	0					
ANR	3597282	Identifier	s		3596727	0					
ANR	3597283	Identifier	channel_maps		3596727	1					
ANR	3597284	Identifier	i		3596727	1					
ANR	3597285	IdentifierDeclStatement	"uint8_t idx = channel_map [ channel_reorder ( channels , i ) ] ;"	217:8:4014:4073	3596727	1	True				
ANR	3597286	IdentifierDecl	"idx = channel_map [ channel_reorder ( channels , i ) ]"		3596727	0					
ANR	3597287	IdentifierDeclType	uint8_t		3596727	0					
ANR	3597288	Identifier	idx		3596727	1					
ANR	3597289	AssignmentExpression	"idx = channel_map [ channel_reorder ( channels , i ) ]"		3596727	2		=			
ANR	3597290	Identifier	idx		3596727	0					
ANR	3597291	ArrayIndexing	"channel_map [ channel_reorder ( channels , i ) ]"		3596727	1					
ANR	3597292	Identifier	channel_map		3596727	0					
ANR	3597293	CallExpression	"channel_reorder ( channels , i )"		3596727	1					
ANR	3597294	Callee	channel_reorder		3596727	0					
ANR	3597295	Identifier	channel_reorder		3596727	0					
ANR	3597296	ArgumentList	channels		3596727	1					
ANR	3597297	Argument	channels		3596727	0					
ANR	3597298	Identifier	channels		3596727	0					
ANR	3597299	Argument	i		3596727	1					
ANR	3597300	Identifier	i		3596727	0					
ANR	3597301	IfStatement	if ( idx == 255 )		3596727	2					
ANR	3597302	Condition	idx == 255	221:12:4090:4099	3596727	0	True				
ANR	3597303	EqualityExpression	idx == 255		3596727	0		==			
ANR	3597304	Identifier	idx		3596727	0					
ANR	3597305	PrimaryExpression	255		3596727	1					
ANR	3597306	CompoundStatement		217:24:3988:3988	3596727	1					
ANR	3597307	ExpressionStatement	map -> silence = 1	223:12:4117:4133	3596727	0	True				
ANR	3597308	AssignmentExpression	map -> silence = 1		3596727	0		=			
ANR	3597309	PtrMemberAccess	map -> silence		3596727	0					
ANR	3597310	Identifier	map		3596727	0					
ANR	3597311	Identifier	silence		3596727	1					
ANR	3597312	PrimaryExpression	1		3596727	1					
ANR	3597313	ContinueStatement	continue ;	225:12:4148:4156	3596727	1	True				
ANR	3597314	ElseStatement	else		3596727	0					
ANR	3597315	IfStatement	if ( idx >= streams + stereo_streams )		3596727	0					
ANR	3597316	Condition	idx >= streams + stereo_streams	227:19:4178:4208	3596727	0	True				
ANR	3597317	RelationalExpression	idx >= streams + stereo_streams		3596727	0		>=			
ANR	3597318	Identifier	idx		3596727	0					
ANR	3597319	AdditiveExpression	streams + stereo_streams		3596727	1		+			
ANR	3597320	Identifier	streams		3596727	0					
ANR	3597321	Identifier	stereo_streams		3596727	1					
ANR	3597322	CompoundStatement		223:52:4097:4097	3596727	1					
ANR	3597323	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Invalid channel map for output channel %d: %d\\n"" , i , idx )"	229:12:4226:4332	3596727	0	True				
ANR	3597324	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Invalid channel map for output channel %d: %d\\n"" , i , idx )"		3596727	0					
ANR	3597325	Callee	av_log		3596727	0					
ANR	3597326	Identifier	av_log		3596727	0					
ANR	3597327	ArgumentList	avctx		3596727	1					
ANR	3597328	Argument	avctx		3596727	0					
ANR	3597329	Identifier	avctx		3596727	0					
ANR	3597330	Argument	AV_LOG_ERROR		3596727	1					
ANR	3597331	Identifier	AV_LOG_ERROR		3596727	0					
ANR	3597332	Argument	"""Invalid channel map for output channel %d: %d\\n"""		3596727	2					
ANR	3597333	PrimaryExpression	"""Invalid channel map for output channel %d: %d\\n"""		3596727	0					
ANR	3597334	Argument	i		3596727	3					
ANR	3597335	Identifier	i		3596727	0					
ANR	3597336	Argument	idx		3596727	4					
ANR	3597337	Identifier	idx		3596727	0					
ANR	3597338	ReturnStatement	return AVERROR_INVALIDDATA ;	234:12:4348:4374	3596727	1	True				
ANR	3597339	Identifier	AVERROR_INVALIDDATA		3596727	0					
ANR	3597340	ExpressionStatement	map -> copy = 0	242:8:4454:4467	3596727	3	True				
ANR	3597341	AssignmentExpression	map -> copy = 0		3596727	0		=			
ANR	3597342	PtrMemberAccess	map -> copy		3596727	0					
ANR	3597343	Identifier	map		3596727	0					
ANR	3597344	Identifier	copy		3596727	1					
ANR	3597345	PrimaryExpression	0		3596727	1					
ANR	3597346	ForStatement	for ( j = 0 ; j < i ; j ++ )		3596727	4					
ANR	3597347	ForInit	j = 0 ;	244:13:4483:4488	3596727	0	True				
ANR	3597348	AssignmentExpression	j = 0		3596727	0		=			
ANR	3597349	Identifier	j		3596727	0					
ANR	3597350	PrimaryExpression	0		3596727	1					
ANR	3597351	Condition	j < i	244:20:4490:4494	3596727	1	True				
ANR	3597352	RelationalExpression	j < i		3596727	0		<			
ANR	3597353	Identifier	j		3596727	0					
ANR	3597354	Identifier	i		3596727	1					
ANR	3597355	PostIncDecOperationExpression	j ++	244:27:4497:4499	3596727	2	True				
ANR	3597356	Identifier	j		3596727	0					
ANR	3597357	IncDec	++		3596727	1					
ANR	3597358	IfStatement	"if ( channel_map [ channel_reorder ( channels , j ) ] == idx )"		3596727	3					
ANR	3597359	Condition	"channel_map [ channel_reorder ( channels , j ) ] == idx"	246:16:4519:4566	3596727	0	True				
ANR	3597360	EqualityExpression	"channel_map [ channel_reorder ( channels , j ) ] == idx"		3596727	0		==			
ANR	3597361	ArrayIndexing	"channel_map [ channel_reorder ( channels , j ) ]"		3596727	0					
ANR	3597362	Identifier	channel_map		3596727	0					
ANR	3597363	CallExpression	"channel_reorder ( channels , j )"		3596727	1					
ANR	3597364	Callee	channel_reorder		3596727	0					
ANR	3597365	Identifier	channel_reorder		3596727	0					
ANR	3597366	ArgumentList	channels		3596727	1					
ANR	3597367	Argument	channels		3596727	0					
ANR	3597368	Identifier	channels		3596727	0					
ANR	3597369	Argument	j		3596727	1					
ANR	3597370	Identifier	j		3596727	0					
ANR	3597371	Identifier	idx		3596727	1					
ANR	3597372	CompoundStatement		242:66:4455:4455	3596727	1					
ANR	3597373	ExpressionStatement	map -> copy = 1	248:16:4588:4605	3596727	0	True				
ANR	3597374	AssignmentExpression	map -> copy = 1		3596727	0		=			
ANR	3597375	PtrMemberAccess	map -> copy		3596727	0					
ANR	3597376	Identifier	map		3596727	0					
ANR	3597377	Identifier	copy		3596727	1					
ANR	3597378	PrimaryExpression	1		3596727	1					
ANR	3597379	ExpressionStatement	map -> copy_idx = j	250:16:4624:4641	3596727	1	True				
ANR	3597380	AssignmentExpression	map -> copy_idx = j		3596727	0		=			
ANR	3597381	PtrMemberAccess	map -> copy_idx		3596727	0					
ANR	3597382	Identifier	map		3596727	0					
ANR	3597383	Identifier	copy_idx		3596727	1					
ANR	3597384	Identifier	j		3596727	1					
ANR	3597385	BreakStatement	break ;	252:16:4660:4665	3596727	2	True				
ANR	3597386	IfStatement	if ( idx < 2 * stereo_streams )		3596727	5					
ANR	3597387	Condition	idx < 2 * stereo_streams	258:12:4697:4720	3596727	0	True				
ANR	3597388	RelationalExpression	idx < 2 * stereo_streams		3596727	0		<			
ANR	3597389	Identifier	idx		3596727	0					
ANR	3597390	MultiplicativeExpression	2 * stereo_streams		3596727	1		*			
ANR	3597391	PrimaryExpression	2		3596727	0					
ANR	3597392	Identifier	stereo_streams		3596727	1					
ANR	3597393	CompoundStatement		254:38:4609:4609	3596727	1					
ANR	3597394	ExpressionStatement	map -> stream_idx = idx / 2	260:12:4738:4764	3596727	0	True				
ANR	3597395	AssignmentExpression	map -> stream_idx = idx / 2		3596727	0		=			
ANR	3597396	PtrMemberAccess	map -> stream_idx		3596727	0					
ANR	3597397	Identifier	map		3596727	0					
ANR	3597398	Identifier	stream_idx		3596727	1					
ANR	3597399	MultiplicativeExpression	idx / 2		3596727	1		/			
ANR	3597400	Identifier	idx		3596727	0					
ANR	3597401	PrimaryExpression	2		3596727	1					
ANR	3597402	ExpressionStatement	map -> channel_idx = idx & 1	262:12:4779:4805	3596727	1	True				
ANR	3597403	AssignmentExpression	map -> channel_idx = idx & 1		3596727	0		=			
ANR	3597404	PtrMemberAccess	map -> channel_idx		3596727	0					
ANR	3597405	Identifier	map		3596727	0					
ANR	3597406	Identifier	channel_idx		3596727	1					
ANR	3597407	BitAndExpression	idx & 1		3596727	1		&			
ANR	3597408	Identifier	idx		3596727	0					
ANR	3597409	PrimaryExpression	1		3596727	1					
ANR	3597410	ElseStatement	else		3596727	0					
ANR	3597411	CompoundStatement		260:15:4709:4709	3596727	0					
ANR	3597412	ExpressionStatement	map -> stream_idx = idx - stereo_streams	266:12:4838:4877	3596727	0	True				
ANR	3597413	AssignmentExpression	map -> stream_idx = idx - stereo_streams		3596727	0		=			
ANR	3597414	PtrMemberAccess	map -> stream_idx		3596727	0					
ANR	3597415	Identifier	map		3596727	0					
ANR	3597416	Identifier	stream_idx		3596727	1					
ANR	3597417	AdditiveExpression	idx - stereo_streams		3596727	1		-			
ANR	3597418	Identifier	idx		3596727	0					
ANR	3597419	Identifier	stereo_streams		3596727	1					
ANR	3597420	ExpressionStatement	map -> channel_idx = 0	268:12:4892:4912	3596727	1	True				
ANR	3597421	AssignmentExpression	map -> channel_idx = 0		3596727	0		=			
ANR	3597422	PtrMemberAccess	map -> channel_idx		3596727	0					
ANR	3597423	Identifier	map		3596727	0					
ANR	3597424	Identifier	channel_idx		3596727	1					
ANR	3597425	PrimaryExpression	0		3596727	1					
ANR	3597426	ExpressionStatement	avctx -> channels = channels	276:4:4939:4971	3596727	21	True				
ANR	3597427	AssignmentExpression	avctx -> channels = channels		3596727	0		=			
ANR	3597428	PtrMemberAccess	avctx -> channels		3596727	0					
ANR	3597429	Identifier	avctx		3596727	0					
ANR	3597430	Identifier	channels		3596727	1					
ANR	3597431	Identifier	channels		3596727	1					
ANR	3597432	ExpressionStatement	avctx -> channel_layout = layout	278:4:4978:5008	3596727	22	True				
ANR	3597433	AssignmentExpression	avctx -> channel_layout = layout		3596727	0		=			
ANR	3597434	PtrMemberAccess	avctx -> channel_layout		3596727	0					
ANR	3597435	Identifier	avctx		3596727	0					
ANR	3597436	Identifier	channel_layout		3596727	1					
ANR	3597437	Identifier	layout		3596727	1					
ANR	3597438	ExpressionStatement	s -> nb_streams = streams	280:4:5015:5046	3596727	23	True				
ANR	3597439	AssignmentExpression	s -> nb_streams = streams		3596727	0		=			
ANR	3597440	PtrMemberAccess	s -> nb_streams		3596727	0					
ANR	3597441	Identifier	s		3596727	0					
ANR	3597442	Identifier	nb_streams		3596727	1					
ANR	3597443	Identifier	streams		3596727	1					
ANR	3597444	ExpressionStatement	s -> nb_stereo_streams = stereo_streams	282:4:5053:5091	3596727	24	True				
ANR	3597445	AssignmentExpression	s -> nb_stereo_streams = stereo_streams		3596727	0		=			
ANR	3597446	PtrMemberAccess	s -> nb_stereo_streams		3596727	0					
ANR	3597447	Identifier	s		3596727	0					
ANR	3597448	Identifier	nb_stereo_streams		3596727	1					
ANR	3597449	Identifier	stereo_streams		3596727	1					
ANR	3597450	ReturnStatement	return 0 ;	286:4:5100:5108	3596727	25	True				
ANR	3597451	PrimaryExpression	0		3596727	0					
ANR	3597452	ReturnType	av_cold int		3596727	1					
ANR	3597453	Identifier	ff_opus_parse_extradata		3596727	2					
ANR	3597454	ParameterList	"AVCodecContext * avctx , OpusContext * s"		3596727	3					
ANR	3597455	Parameter	AVCodecContext * avctx	1:36:36:56	3596727	0	True				
ANR	3597456	ParameterType	AVCodecContext *		3596727	0					
ANR	3597457	Identifier	avctx		3596727	1					
ANR	3597458	Parameter	OpusContext * s	3:36:96:109	3596727	1	True				
ANR	3597459	ParameterType	OpusContext *		3596727	0					
ANR	3597460	Identifier	s		3596727	1					
ANR	3597461	CFGEntryNode	ENTRY		3596727		True				
ANR	3597462	CFGExitNode	EXIT		3596727		True				
ANR	3597463	Symbol	ENOMEM		3596727						
ANR	3597464	Symbol	avctx -> delay		3596727						
ANR	3597465	Symbol	ff_sqrt		3596727						
ANR	3597466	Symbol	av_mallocz_array		3596727						
ANR	3597467	Symbol	s -> gain_i		3596727						
ANR	3597468	Symbol	* map		3596727						
ANR	3597469	Symbol	AV_CH_LAYOUT_STEREO		3596727						
ANR	3597470	Symbol	extradata_size		3596727						
ANR	3597471	Symbol	avctx -> channels		3596727						
ANR	3597472	Symbol	map_type		3596727						
ANR	3597473	Symbol	AV_CH_LAYOUT_MONO		3596727						
ANR	3597474	Symbol	* channel_map		3596727						
ANR	3597475	Symbol	streams		3596727						
ANR	3597476	Symbol	s -> nb_stereo_streams		3596727						
ANR	3597477	Symbol	default_channel_map		3596727						
ANR	3597478	Symbol	version		3596727						
ANR	3597479	Symbol	* channel_reorder		3596727						
ANR	3597480	Symbol	* avctx		3596727						
ANR	3597481	Symbol	channels		3596727						
ANR	3597482	Symbol	* s -> channel_maps		3596727						
ANR	3597483	Symbol	opus_default_extradata		3596727						
ANR	3597484	Symbol	idx		3596727						
ANR	3597485	Symbol	AV_RL16		3596727						
ANR	3597486	Symbol	map -> copy		3596727						
ANR	3597487	Symbol	channel_reorder_unknown		3596727						
ANR	3597488	Symbol	map -> silence		3596727						
ANR	3597489	Symbol	map -> stream_idx		3596727						
ANR	3597490	Symbol	ambisonic_order		3596727						
ANR	3597491	Symbol	stereo_streams		3596727						
ANR	3597492	Symbol	extradata		3596727						
ANR	3597493	Symbol	map -> channel_idx		3596727						
ANR	3597494	Symbol	* * s		3596727						
ANR	3597495	Symbol	AVERROR_PATCHWELCOME		3596727						
ANR	3597496	Symbol	s -> nb_streams		3596727						
ANR	3597497	Symbol	map -> copy_idx		3596727						
ANR	3597498	Symbol	avctx		3596727						
ANR	3597499	Symbol	map		3596727						
ANR	3597500	Symbol	channel_reorder_vorbis		3596727						
ANR	3597501	Symbol	avctx -> extradata		3596727						
ANR	3597502	Symbol	AV_LOG_ERROR		3596727						
ANR	3597503	Symbol	* extradata		3596727						
ANR	3597504	Symbol	avctx -> extradata_size		3596727						
ANR	3597505	Symbol	i		3596727						
ANR	3597506	Symbol	* ff_vorbis_channel_layouts		3596727						
ANR	3597507	Symbol	avctx -> channel_layout		3596727						
ANR	3597508	Symbol	j		3596727						
ANR	3597509	Symbol	ff_exp10		3596727						
ANR	3597510	Symbol	ff_vorbis_channel_layouts		3596727						
ANR	3597511	Symbol	s -> channel_maps		3596727						
ANR	3597512	Symbol	layout		3596727						
ANR	3597513	Symbol	EINVAL		3596727						
ANR	3597514	Symbol	s		3596727						
ANR	3597515	Symbol	channel_reorder		3596727						
ANR	3597516	Symbol	* channels		3596727						
ANR	3597517	Symbol	AVERROR_INVALIDDATA		3596727						
ANR	3597518	Symbol	s -> gain		3596727						
ANR	3597519	Symbol	AVERROR		3596727						
ANR	3597520	Symbol	channel_map		3596727						
ANR	3597521	Symbol	* s		3596727						
