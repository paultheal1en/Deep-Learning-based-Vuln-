command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	662916	File	/home/p4ultr4n/workplace/ReVeal/raw_code/atrac3_decode_init_0.c								
ANR	662917	Function	atrac3_decode_init	1:0:0:4907							
ANR	662918	FunctionDef	atrac3_decode_init (AVCodecContext * avctx)		662917	0					
ANR	662919	CompoundStatement		3:0:62:4907	662917	0					
ANR	662920	IdentifierDeclStatement	"int i , ret ;"	5:4:69:79	662917	0	True				
ANR	662921	IdentifierDecl	i		662917	0					
ANR	662922	IdentifierDeclType	int		662917	0					
ANR	662923	Identifier	i		662917	1					
ANR	662924	IdentifierDecl	ret		662917	1					
ANR	662925	IdentifierDeclType	int		662917	0					
ANR	662926	Identifier	ret		662917	1					
ANR	662927	IdentifierDeclStatement	"int version , delay , samples_per_frame , frame_factor ;"	7:4:86:137	662917	1	True				
ANR	662928	IdentifierDecl	version		662917	0					
ANR	662929	IdentifierDeclType	int		662917	0					
ANR	662930	Identifier	version		662917	1					
ANR	662931	IdentifierDecl	delay		662917	1					
ANR	662932	IdentifierDeclType	int		662917	0					
ANR	662933	Identifier	delay		662917	1					
ANR	662934	IdentifierDecl	samples_per_frame		662917	2					
ANR	662935	IdentifierDeclType	int		662917	0					
ANR	662936	Identifier	samples_per_frame		662917	1					
ANR	662937	IdentifierDecl	frame_factor		662917	3					
ANR	662938	IdentifierDeclType	int		662917	0					
ANR	662939	Identifier	frame_factor		662917	1					
ANR	662940	IdentifierDeclStatement	const uint8_t * edata_ptr = avctx -> extradata ;	9:4:144:187	662917	2	True				
ANR	662941	IdentifierDecl	* edata_ptr = avctx -> extradata		662917	0					
ANR	662942	IdentifierDeclType	const uint8_t *		662917	0					
ANR	662943	Identifier	edata_ptr		662917	1					
ANR	662944	AssignmentExpression	* edata_ptr = avctx -> extradata		662917	2		=			
ANR	662945	Identifier	edata_ptr		662917	0					
ANR	662946	PtrMemberAccess	avctx -> extradata		662917	1					
ANR	662947	Identifier	avctx		662917	0					
ANR	662948	Identifier	extradata		662917	1					
ANR	662949	IdentifierDeclStatement	ATRAC3Context * q = avctx -> priv_data ;	11:4:194:229	662917	3	True				
ANR	662950	IdentifierDecl	* q = avctx -> priv_data		662917	0					
ANR	662951	IdentifierDeclType	ATRAC3Context *		662917	0					
ANR	662952	Identifier	q		662917	1					
ANR	662953	AssignmentExpression	* q = avctx -> priv_data		662917	2		=			
ANR	662954	Identifier	q		662917	0					
ANR	662955	PtrMemberAccess	avctx -> priv_data		662917	1					
ANR	662956	Identifier	avctx		662917	0					
ANR	662957	Identifier	priv_data		662917	1					
ANR	662958	IfStatement	if ( avctx -> channels <= 0 || avctx -> channels > 2 )		662917	4					
ANR	662959	Condition	avctx -> channels <= 0 || avctx -> channels > 2	15:8:242:284	662917	0	True				
ANR	662960	OrExpression	avctx -> channels <= 0 || avctx -> channels > 2		662917	0		||			
ANR	662961	RelationalExpression	avctx -> channels <= 0		662917	0		<=			
ANR	662962	PtrMemberAccess	avctx -> channels		662917	0					
ANR	662963	Identifier	avctx		662917	0					
ANR	662964	Identifier	channels		662917	1					
ANR	662965	PrimaryExpression	0		662917	1					
ANR	662966	RelationalExpression	avctx -> channels > 2		662917	1		>			
ANR	662967	PtrMemberAccess	avctx -> channels		662917	0					
ANR	662968	Identifier	avctx		662917	0					
ANR	662969	Identifier	channels		662917	1					
ANR	662970	PrimaryExpression	2		662917	1					
ANR	662971	CompoundStatement		13:53:224:224	662917	1					
ANR	662972	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Channel configuration error!\\n"" )"	17:8:298:359	662917	0	True				
ANR	662973	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Channel configuration error!\\n"" )"		662917	0					
ANR	662974	Callee	av_log		662917	0					
ANR	662975	Identifier	av_log		662917	0					
ANR	662976	ArgumentList	avctx		662917	1					
ANR	662977	Argument	avctx		662917	0					
ANR	662978	Identifier	avctx		662917	0					
ANR	662979	Argument	AV_LOG_ERROR		662917	1					
ANR	662980	Identifier	AV_LOG_ERROR		662917	0					
ANR	662981	Argument	"""Channel configuration error!\\n"""		662917	2					
ANR	662982	PrimaryExpression	"""Channel configuration error!\\n"""		662917	0					
ANR	662983	ReturnStatement	return AVERROR ( EINVAL ) ;	19:8:370:392	662917	1	True				
ANR	662984	CallExpression	AVERROR ( EINVAL )		662917	0					
ANR	662985	Callee	AVERROR		662917	0					
ANR	662986	Identifier	AVERROR		662917	0					
ANR	662987	ArgumentList	EINVAL		662917	1					
ANR	662988	Argument	EINVAL		662917	0					
ANR	662989	Identifier	EINVAL		662917	0					
ANR	662990	IfStatement	if ( avctx -> extradata_size == 14 )		662917	5					
ANR	662991	Condition	avctx -> extradata_size == 14	27:8:466:492	662917	0	True				
ANR	662992	EqualityExpression	avctx -> extradata_size == 14		662917	0		==			
ANR	662993	PtrMemberAccess	avctx -> extradata_size		662917	0					
ANR	662994	Identifier	avctx		662917	0					
ANR	662995	Identifier	extradata_size		662917	1					
ANR	662996	PrimaryExpression	14		662917	1					
ANR	662997	CompoundStatement		25:37:432:432	662917	1					
ANR	662998	ExpressionStatement	"av_log ( avctx , AV_LOG_DEBUG , ""[0-1] %d\\n"" , bytestream_get_le16 ( & edata_ptr ) )"	31:8:553:643	662917	0	True				
ANR	662999	CallExpression	"av_log ( avctx , AV_LOG_DEBUG , ""[0-1] %d\\n"" , bytestream_get_le16 ( & edata_ptr ) )"		662917	0					
ANR	663000	Callee	av_log		662917	0					
ANR	663001	Identifier	av_log		662917	0					
ANR	663002	ArgumentList	avctx		662917	1					
ANR	663003	Argument	avctx		662917	0					
ANR	663004	Identifier	avctx		662917	0					
ANR	663005	Argument	AV_LOG_DEBUG		662917	1					
ANR	663006	Identifier	AV_LOG_DEBUG		662917	0					
ANR	663007	Argument	"""[0-1] %d\\n"""		662917	2					
ANR	663008	PrimaryExpression	"""[0-1] %d\\n"""		662917	0					
ANR	663009	Argument	bytestream_get_le16 ( & edata_ptr )		662917	3					
ANR	663010	CallExpression	bytestream_get_le16 ( & edata_ptr )		662917	0					
ANR	663011	Callee	bytestream_get_le16		662917	0					
ANR	663012	Identifier	bytestream_get_le16		662917	0					
ANR	663013	ArgumentList	& edata_ptr		662917	1					
ANR	663014	Argument	& edata_ptr		662917	0					
ANR	663015	UnaryOperationExpression	& edata_ptr		662917	0					
ANR	663016	UnaryOperator	&		662917	0					
ANR	663017	Identifier	edata_ptr		662917	1					
ANR	663018	ExpressionStatement	edata_ptr += 4	35:8:681:695	662917	1	True				
ANR	663019	AssignmentExpression	edata_ptr += 4		662917	0		+=			
ANR	663020	Identifier	edata_ptr		662917	0					
ANR	663021	PrimaryExpression	4		662917	1					
ANR	663022	ExpressionStatement	q -> coding_mode = bytestream_get_le16 ( & edata_ptr )	37:8:757:805	662917	2	True				
ANR	663023	AssignmentExpression	q -> coding_mode = bytestream_get_le16 ( & edata_ptr )		662917	0		=			
ANR	663024	PtrMemberAccess	q -> coding_mode		662917	0					
ANR	663025	Identifier	q		662917	0					
ANR	663026	Identifier	coding_mode		662917	1					
ANR	663027	CallExpression	bytestream_get_le16 ( & edata_ptr )		662917	1					
ANR	663028	Callee	bytestream_get_le16		662917	0					
ANR	663029	Identifier	bytestream_get_le16		662917	0					
ANR	663030	ArgumentList	& edata_ptr		662917	1					
ANR	663031	Argument	& edata_ptr		662917	0					
ANR	663032	UnaryOperationExpression	& edata_ptr		662917	0					
ANR	663033	UnaryOperator	&		662917	0					
ANR	663034	Identifier	edata_ptr		662917	1					
ANR	663035	ExpressionStatement	"av_log ( avctx , AV_LOG_DEBUG , ""[8-9] %d\\n"" , bytestream_get_le16 ( & edata_ptr ) )"	39:8:816:905	662917	3	True				
ANR	663036	CallExpression	"av_log ( avctx , AV_LOG_DEBUG , ""[8-9] %d\\n"" , bytestream_get_le16 ( & edata_ptr ) )"		662917	0					
ANR	663037	Callee	av_log		662917	0					
ANR	663038	Identifier	av_log		662917	0					
ANR	663039	ArgumentList	avctx		662917	1					
ANR	663040	Argument	avctx		662917	0					
ANR	663041	Identifier	avctx		662917	0					
ANR	663042	Argument	AV_LOG_DEBUG		662917	1					
ANR	663043	Identifier	AV_LOG_DEBUG		662917	0					
ANR	663044	Argument	"""[8-9] %d\\n"""		662917	2					
ANR	663045	PrimaryExpression	"""[8-9] %d\\n"""		662917	0					
ANR	663046	Argument	bytestream_get_le16 ( & edata_ptr )		662917	3					
ANR	663047	CallExpression	bytestream_get_le16 ( & edata_ptr )		662917	0					
ANR	663048	Callee	bytestream_get_le16		662917	0					
ANR	663049	Identifier	bytestream_get_le16		662917	0					
ANR	663050	ArgumentList	& edata_ptr		662917	1					
ANR	663051	Argument	& edata_ptr		662917	0					
ANR	663052	UnaryOperationExpression	& edata_ptr		662917	0					
ANR	663053	UnaryOperator	&		662917	0					
ANR	663054	Identifier	edata_ptr		662917	1					
ANR	663055	ExpressionStatement	frame_factor = bytestream_get_le16 ( & edata_ptr )	43:8:939:985	662917	4	True				
ANR	663056	AssignmentExpression	frame_factor = bytestream_get_le16 ( & edata_ptr )		662917	0		=			
ANR	663057	Identifier	frame_factor		662917	0					
ANR	663058	CallExpression	bytestream_get_le16 ( & edata_ptr )		662917	1					
ANR	663059	Callee	bytestream_get_le16		662917	0					
ANR	663060	Identifier	bytestream_get_le16		662917	0					
ANR	663061	ArgumentList	& edata_ptr		662917	1					
ANR	663062	Argument	& edata_ptr		662917	0					
ANR	663063	UnaryOperationExpression	& edata_ptr		662917	0					
ANR	663064	UnaryOperator	&		662917	0					
ANR	663065	Identifier	edata_ptr		662917	1					
ANR	663066	ExpressionStatement	"av_log ( avctx , AV_LOG_DEBUG , ""[12-13] %d\\n"" , bytestream_get_le16 ( & edata_ptr ) )"	45:8:1017:1108	662917	5	True				
ANR	663067	CallExpression	"av_log ( avctx , AV_LOG_DEBUG , ""[12-13] %d\\n"" , bytestream_get_le16 ( & edata_ptr ) )"		662917	0					
ANR	663068	Callee	av_log		662917	0					
ANR	663069	Identifier	av_log		662917	0					
ANR	663070	ArgumentList	avctx		662917	1					
ANR	663071	Argument	avctx		662917	0					
ANR	663072	Identifier	avctx		662917	0					
ANR	663073	Argument	AV_LOG_DEBUG		662917	1					
ANR	663074	Identifier	AV_LOG_DEBUG		662917	0					
ANR	663075	Argument	"""[12-13] %d\\n"""		662917	2					
ANR	663076	PrimaryExpression	"""[12-13] %d\\n"""		662917	0					
ANR	663077	Argument	bytestream_get_le16 ( & edata_ptr )		662917	3					
ANR	663078	CallExpression	bytestream_get_le16 ( & edata_ptr )		662917	0					
ANR	663079	Callee	bytestream_get_le16		662917	0					
ANR	663080	Identifier	bytestream_get_le16		662917	0					
ANR	663081	ArgumentList	& edata_ptr		662917	1					
ANR	663082	Argument	& edata_ptr		662917	0					
ANR	663083	UnaryOperationExpression	& edata_ptr		662917	0					
ANR	663084	UnaryOperator	&		662917	0					
ANR	663085	Identifier	edata_ptr		662917	1					
ANR	663086	ExpressionStatement	samples_per_frame = SAMPLES_PER_FRAME * avctx -> channels	53:8:1163:1221	662917	6	True				
ANR	663087	AssignmentExpression	samples_per_frame = SAMPLES_PER_FRAME * avctx -> channels		662917	0		=			
ANR	663088	Identifier	samples_per_frame		662917	0					
ANR	663089	MultiplicativeExpression	SAMPLES_PER_FRAME * avctx -> channels		662917	1		*			
ANR	663090	Identifier	SAMPLES_PER_FRAME		662917	0					
ANR	663091	PtrMemberAccess	avctx -> channels		662917	1					
ANR	663092	Identifier	avctx		662917	0					
ANR	663093	Identifier	channels		662917	1					
ANR	663094	ExpressionStatement	version = 4	55:8:1232:1256	662917	7	True				
ANR	663095	AssignmentExpression	version = 4		662917	0		=			
ANR	663096	Identifier	version		662917	0					
ANR	663097	PrimaryExpression	4		662917	1					
ANR	663098	ExpressionStatement	delay = 0x88E	57:8:1267:1295	662917	8	True				
ANR	663099	AssignmentExpression	delay = 0x88E		662917	0		=			
ANR	663100	Identifier	delay		662917	0					
ANR	663101	PrimaryExpression	0x88E		662917	1					
ANR	663102	ExpressionStatement	q -> coding_mode = q -> coding_mode ? JOINT_STEREO : STEREO	59:8:1306:1367	662917	9	True				
ANR	663103	AssignmentExpression	q -> coding_mode = q -> coding_mode ? JOINT_STEREO : STEREO		662917	0		=			
ANR	663104	PtrMemberAccess	q -> coding_mode		662917	0					
ANR	663105	Identifier	q		662917	0					
ANR	663106	Identifier	coding_mode		662917	1					
ANR	663107	ConditionalExpression	q -> coding_mode ? JOINT_STEREO : STEREO		662917	1					
ANR	663108	Condition	q -> coding_mode		662917	0					
ANR	663109	PtrMemberAccess	q -> coding_mode		662917	0					
ANR	663110	Identifier	q		662917	0					
ANR	663111	Identifier	coding_mode		662917	1					
ANR	663112	Identifier	JOINT_STEREO		662917	1					
ANR	663113	Identifier	STEREO		662917	2					
ANR	663114	ExpressionStatement	q -> scrambled_stream = 0	61:8:1378:1402	662917	10	True				
ANR	663115	AssignmentExpression	q -> scrambled_stream = 0		662917	0		=			
ANR	663116	PtrMemberAccess	q -> scrambled_stream		662917	0					
ANR	663117	Identifier	q		662917	0					
ANR	663118	Identifier	scrambled_stream		662917	1					
ANR	663119	PrimaryExpression	0		662917	1					
ANR	663120	IfStatement	if ( avctx -> block_align != 96 * avctx -> channels * frame_factor && avctx -> block_align != 152 * avctx -> channels * frame_factor && avctx -> block_align != 192 * avctx -> channels * frame_factor )		662917	11					
ANR	663121	Condition	avctx -> block_align != 96 * avctx -> channels * frame_factor && avctx -> block_align != 152 * avctx -> channels * frame_factor && avctx -> block_align != 192 * avctx -> channels * frame_factor	65:12:1419:1626	662917	0	True				
ANR	663122	AndExpression	avctx -> block_align != 96 * avctx -> channels * frame_factor && avctx -> block_align != 152 * avctx -> channels * frame_factor && avctx -> block_align != 192 * avctx -> channels * frame_factor		662917	0		&&			
ANR	663123	EqualityExpression	avctx -> block_align != 96 * avctx -> channels * frame_factor		662917	0		!=			
ANR	663124	PtrMemberAccess	avctx -> block_align		662917	0					
ANR	663125	Identifier	avctx		662917	0					
ANR	663126	Identifier	block_align		662917	1					
ANR	663127	MultiplicativeExpression	96 * avctx -> channels * frame_factor		662917	1		*			
ANR	663128	PrimaryExpression	96		662917	0					
ANR	663129	MultiplicativeExpression	avctx -> channels * frame_factor		662917	1		*			
ANR	663130	PtrMemberAccess	avctx -> channels		662917	0					
ANR	663131	Identifier	avctx		662917	0					
ANR	663132	Identifier	channels		662917	1					
ANR	663133	Identifier	frame_factor		662917	1					
ANR	663134	AndExpression	avctx -> block_align != 152 * avctx -> channels * frame_factor && avctx -> block_align != 192 * avctx -> channels * frame_factor		662917	1		&&			
ANR	663135	EqualityExpression	avctx -> block_align != 152 * avctx -> channels * frame_factor		662917	0		!=			
ANR	663136	PtrMemberAccess	avctx -> block_align		662917	0					
ANR	663137	Identifier	avctx		662917	0					
ANR	663138	Identifier	block_align		662917	1					
ANR	663139	MultiplicativeExpression	152 * avctx -> channels * frame_factor		662917	1		*			
ANR	663140	PrimaryExpression	152		662917	0					
ANR	663141	MultiplicativeExpression	avctx -> channels * frame_factor		662917	1		*			
ANR	663142	PtrMemberAccess	avctx -> channels		662917	0					
ANR	663143	Identifier	avctx		662917	0					
ANR	663144	Identifier	channels		662917	1					
ANR	663145	Identifier	frame_factor		662917	1					
ANR	663146	EqualityExpression	avctx -> block_align != 192 * avctx -> channels * frame_factor		662917	1		!=			
ANR	663147	PtrMemberAccess	avctx -> block_align		662917	0					
ANR	663148	Identifier	avctx		662917	0					
ANR	663149	Identifier	block_align		662917	1					
ANR	663150	MultiplicativeExpression	192 * avctx -> channels * frame_factor		662917	1		*			
ANR	663151	PrimaryExpression	192		662917	0					
ANR	663152	MultiplicativeExpression	avctx -> channels * frame_factor		662917	1		*			
ANR	663153	PtrMemberAccess	avctx -> channels		662917	0					
ANR	663154	Identifier	avctx		662917	0					
ANR	663155	Identifier	channels		662917	1					
ANR	663156	Identifier	frame_factor		662917	1					
ANR	663157	CompoundStatement		67:72:1566:1566	662917	1					
ANR	663158	Statement	av_log	71:12:1644:1649	662917	0	True				
ANR	663159	Statement	(	71:18:1650:1650	662917	1	True				
ANR	663160	Statement	avctx	71:19:1651:1655	662917	2	True				
ANR	663161	Statement	","	71:24:1656:1656	662917	3	True				
ANR	663162	Statement	AV_LOG_ERROR	71:26:1658:1669	662917	4	True				
ANR	663163	Statement	","	71:38:1670:1670	662917	5	True				
ANR	663164	Statement	"""Unknown frame/channel/frame_factor """	71:40:1672:1708	662917	6	True				
ANR	663165	Statement	"""configuration %d/%d/%d\\n"""	73:19:1730:1755	662917	7	True				
ANR	663166	Statement	","	73:45:1756:1756	662917	8	True				
ANR	663167	Statement	avctx	73:47:1758:1762	662917	9	True				
ANR	663168	Statement	->	73:52:1763:1764	662917	10	True				
ANR	663169	Statement	block_align	73:54:1765:1775	662917	11	True				
ANR	663170	Statement	","	73:65:1776:1776	662917	12	True				
ANR	663171	Statement	avctx	75:19:1798:1802	662917	13	True				
ANR	663172	Statement	->	75:24:1803:1804	662917	14	True				
ANR	663173	Statement	channels	75:26:1805:1812	662917	15	True				
ANR	663174	Statement	","	75:34:1813:1813	662917	16	True				
ANR	663175	Statement	frame_factor	75:36:1815:1826	662917	17	True				
ANR	663176	Statement	)	75:48:1827:1827	662917	18	True				
ANR	663177	ExpressionStatement		75:49:1828:1828	662917	19	True				
ANR	663178	ReturnStatement	return AVERROR_INVALIDDATA ;	77:12:1843:1869	662917	20	True				
ANR	663179	Identifier	AVERROR_INVALIDDATA		662917	0					
ANR	663180	ElseStatement	else		662917	0					
ANR	663181	IfStatement	if ( avctx -> extradata_size == 10 )		662917	0					
ANR	663182	Condition	avctx -> extradata_size == 10	81:15:1898:1924	662917	0	True				
ANR	663183	EqualityExpression	avctx -> extradata_size == 10		662917	0		==			
ANR	663184	PtrMemberAccess	avctx -> extradata_size		662917	0					
ANR	663185	Identifier	avctx		662917	0					
ANR	663186	Identifier	extradata_size		662917	1					
ANR	663187	PrimaryExpression	10		662917	1					
ANR	663188	CompoundStatement		79:44:1864:1864	662917	1					
ANR	663189	ExpressionStatement	version = bytestream_get_be32 ( & edata_ptr )	85:8:1985:2041	662917	0	True				
ANR	663190	AssignmentExpression	version = bytestream_get_be32 ( & edata_ptr )		662917	0		=			
ANR	663191	Identifier	version		662917	0					
ANR	663192	CallExpression	bytestream_get_be32 ( & edata_ptr )		662917	1					
ANR	663193	Callee	bytestream_get_be32		662917	0					
ANR	663194	Identifier	bytestream_get_be32		662917	0					
ANR	663195	ArgumentList	& edata_ptr		662917	1					
ANR	663196	Argument	& edata_ptr		662917	0					
ANR	663197	UnaryOperationExpression	& edata_ptr		662917	0					
ANR	663198	UnaryOperator	&		662917	0					
ANR	663199	Identifier	edata_ptr		662917	1					
ANR	663200	ExpressionStatement	samples_per_frame = bytestream_get_be16 ( & edata_ptr )	87:8:2052:2108	662917	1	True				
ANR	663201	AssignmentExpression	samples_per_frame = bytestream_get_be16 ( & edata_ptr )		662917	0		=			
ANR	663202	Identifier	samples_per_frame		662917	0					
ANR	663203	CallExpression	bytestream_get_be16 ( & edata_ptr )		662917	1					
ANR	663204	Callee	bytestream_get_be16		662917	0					
ANR	663205	Identifier	bytestream_get_be16		662917	0					
ANR	663206	ArgumentList	& edata_ptr		662917	1					
ANR	663207	Argument	& edata_ptr		662917	0					
ANR	663208	UnaryOperationExpression	& edata_ptr		662917	0					
ANR	663209	UnaryOperator	&		662917	0					
ANR	663210	Identifier	edata_ptr		662917	1					
ANR	663211	ExpressionStatement	delay = bytestream_get_be16 ( & edata_ptr )	89:8:2119:2175	662917	2	True				
ANR	663212	AssignmentExpression	delay = bytestream_get_be16 ( & edata_ptr )		662917	0		=			
ANR	663213	Identifier	delay		662917	0					
ANR	663214	CallExpression	bytestream_get_be16 ( & edata_ptr )		662917	1					
ANR	663215	Callee	bytestream_get_be16		662917	0					
ANR	663216	Identifier	bytestream_get_be16		662917	0					
ANR	663217	ArgumentList	& edata_ptr		662917	1					
ANR	663218	Argument	& edata_ptr		662917	0					
ANR	663219	UnaryOperationExpression	& edata_ptr		662917	0					
ANR	663220	UnaryOperator	&		662917	0					
ANR	663221	Identifier	edata_ptr		662917	1					
ANR	663222	ExpressionStatement	q -> coding_mode = bytestream_get_be16 ( & edata_ptr )	91:8:2186:2242	662917	3	True				
ANR	663223	AssignmentExpression	q -> coding_mode = bytestream_get_be16 ( & edata_ptr )		662917	0		=			
ANR	663224	PtrMemberAccess	q -> coding_mode		662917	0					
ANR	663225	Identifier	q		662917	0					
ANR	663226	Identifier	coding_mode		662917	1					
ANR	663227	CallExpression	bytestream_get_be16 ( & edata_ptr )		662917	1					
ANR	663228	Callee	bytestream_get_be16		662917	0					
ANR	663229	Identifier	bytestream_get_be16		662917	0					
ANR	663230	ArgumentList	& edata_ptr		662917	1					
ANR	663231	Argument	& edata_ptr		662917	0					
ANR	663232	UnaryOperationExpression	& edata_ptr		662917	0					
ANR	663233	UnaryOperator	&		662917	0					
ANR	663234	Identifier	edata_ptr		662917	1					
ANR	663235	ExpressionStatement	q -> scrambled_stream = 1	93:8:2253:2279	662917	4	True				
ANR	663236	AssignmentExpression	q -> scrambled_stream = 1		662917	0		=			
ANR	663237	PtrMemberAccess	q -> scrambled_stream		662917	0					
ANR	663238	Identifier	q		662917	0					
ANR	663239	Identifier	scrambled_stream		662917	1					
ANR	663240	PrimaryExpression	1		662917	1					
ANR	663241	ElseStatement	else		662917	0					
ANR	663242	CompoundStatement		95:11:2232:2232	662917	0					
ANR	663243	ExpressionStatement	"av_log ( NULL , AV_LOG_ERROR , ""Unknown extradata size %d.\\n"" , avctx -> extradata_size )"	99:8:2306:2403	662917	0	True				
ANR	663244	CallExpression	"av_log ( NULL , AV_LOG_ERROR , ""Unknown extradata size %d.\\n"" , avctx -> extradata_size )"		662917	0					
ANR	663245	Callee	av_log		662917	0					
ANR	663246	Identifier	av_log		662917	0					
ANR	663247	ArgumentList	NULL		662917	1					
ANR	663248	Argument	NULL		662917	0					
ANR	663249	Identifier	NULL		662917	0					
ANR	663250	Argument	AV_LOG_ERROR		662917	1					
ANR	663251	Identifier	AV_LOG_ERROR		662917	0					
ANR	663252	Argument	"""Unknown extradata size %d.\\n"""		662917	2					
ANR	663253	PrimaryExpression	"""Unknown extradata size %d.\\n"""		662917	0					
ANR	663254	Argument	avctx -> extradata_size		662917	3					
ANR	663255	PtrMemberAccess	avctx -> extradata_size		662917	0					
ANR	663256	Identifier	avctx		662917	0					
ANR	663257	Identifier	extradata_size		662917	1					
ANR	663258	ReturnStatement	return AVERROR ( EINVAL ) ;	103:8:2414:2436	662917	1	True				
ANR	663259	CallExpression	AVERROR ( EINVAL )		662917	0					
ANR	663260	Callee	AVERROR		662917	0					
ANR	663261	Identifier	AVERROR		662917	0					
ANR	663262	ArgumentList	EINVAL		662917	1					
ANR	663263	Argument	EINVAL		662917	0					
ANR	663264	Identifier	EINVAL		662917	0					
ANR	663265	IfStatement	if ( version != 4 )		662917	6					
ANR	663266	Condition	version != 4	113:8:2489:2500	662917	0	True				
ANR	663267	EqualityExpression	version != 4		662917	0		!=			
ANR	663268	Identifier	version		662917	0					
ANR	663269	PrimaryExpression	4		662917	1					
ANR	663270	CompoundStatement		111:22:2440:2440	662917	1					
ANR	663271	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Version %d != 4.\\n"" , version )"	115:8:2514:2572	662917	0	True				
ANR	663272	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Version %d != 4.\\n"" , version )"		662917	0					
ANR	663273	Callee	av_log		662917	0					
ANR	663274	Identifier	av_log		662917	0					
ANR	663275	ArgumentList	avctx		662917	1					
ANR	663276	Argument	avctx		662917	0					
ANR	663277	Identifier	avctx		662917	0					
ANR	663278	Argument	AV_LOG_ERROR		662917	1					
ANR	663279	Identifier	AV_LOG_ERROR		662917	0					
ANR	663280	Argument	"""Version %d != 4.\\n"""		662917	2					
ANR	663281	PrimaryExpression	"""Version %d != 4.\\n"""		662917	0					
ANR	663282	Argument	version		662917	3					
ANR	663283	Identifier	version		662917	0					
ANR	663284	ReturnStatement	return AVERROR_INVALIDDATA ;	117:8:2583:2609	662917	1	True				
ANR	663285	Identifier	AVERROR_INVALIDDATA		662917	0					
ANR	663286	IfStatement	if ( samples_per_frame != SAMPLES_PER_FRAME && samples_per_frame != SAMPLES_PER_FRAME * 2 )		662917	7					
ANR	663287	Condition	samples_per_frame != SAMPLES_PER_FRAME && samples_per_frame != SAMPLES_PER_FRAME * 2	123:8:2629:2721	662917	0	True				
ANR	663288	AndExpression	samples_per_frame != SAMPLES_PER_FRAME && samples_per_frame != SAMPLES_PER_FRAME * 2		662917	0		&&			
ANR	663289	EqualityExpression	samples_per_frame != SAMPLES_PER_FRAME		662917	0		!=			
ANR	663290	Identifier	samples_per_frame		662917	0					
ANR	663291	Identifier	SAMPLES_PER_FRAME		662917	1					
ANR	663292	EqualityExpression	samples_per_frame != SAMPLES_PER_FRAME * 2		662917	1		!=			
ANR	663293	Identifier	samples_per_frame		662917	0					
ANR	663294	MultiplicativeExpression	SAMPLES_PER_FRAME * 2		662917	1		*			
ANR	663295	Identifier	SAMPLES_PER_FRAME		662917	0					
ANR	663296	PrimaryExpression	2		662917	1					
ANR	663297	CompoundStatement		123:52:2661:2661	662917	1					
ANR	663298	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Unknown amount of samples per frame %d.\\n"" , samples_per_frame )"	127:8:2735:2842	662917	0	True				
ANR	663299	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Unknown amount of samples per frame %d.\\n"" , samples_per_frame )"		662917	0					
ANR	663300	Callee	av_log		662917	0					
ANR	663301	Identifier	av_log		662917	0					
ANR	663302	ArgumentList	avctx		662917	1					
ANR	663303	Argument	avctx		662917	0					
ANR	663304	Identifier	avctx		662917	0					
ANR	663305	Argument	AV_LOG_ERROR		662917	1					
ANR	663306	Identifier	AV_LOG_ERROR		662917	0					
ANR	663307	Argument	"""Unknown amount of samples per frame %d.\\n"""		662917	2					
ANR	663308	PrimaryExpression	"""Unknown amount of samples per frame %d.\\n"""		662917	0					
ANR	663309	Argument	samples_per_frame		662917	3					
ANR	663310	Identifier	samples_per_frame		662917	0					
ANR	663311	ReturnStatement	return AVERROR_INVALIDDATA ;	131:8:2853:2879	662917	1	True				
ANR	663312	Identifier	AVERROR_INVALIDDATA		662917	0					
ANR	663313	IfStatement	if ( delay != 0x88E )		662917	8					
ANR	663314	Condition	delay != 0x88E	137:8:2899:2912	662917	0	True				
ANR	663315	EqualityExpression	delay != 0x88E		662917	0		!=			
ANR	663316	Identifier	delay		662917	0					
ANR	663317	PrimaryExpression	0x88E		662917	1					
ANR	663318	CompoundStatement		135:24:2852:2852	662917	1					
ANR	663319	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Unknown amount of delay %x != 0x88E.\\n"" , delay )"	139:8:2926:3018	662917	0	True				
ANR	663320	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Unknown amount of delay %x != 0x88E.\\n"" , delay )"		662917	0					
ANR	663321	Callee	av_log		662917	0					
ANR	663322	Identifier	av_log		662917	0					
ANR	663323	ArgumentList	avctx		662917	1					
ANR	663324	Argument	avctx		662917	0					
ANR	663325	Identifier	avctx		662917	0					
ANR	663326	Argument	AV_LOG_ERROR		662917	1					
ANR	663327	Identifier	AV_LOG_ERROR		662917	0					
ANR	663328	Argument	"""Unknown amount of delay %x != 0x88E.\\n"""		662917	2					
ANR	663329	PrimaryExpression	"""Unknown amount of delay %x != 0x88E.\\n"""		662917	0					
ANR	663330	Argument	delay		662917	3					
ANR	663331	Identifier	delay		662917	0					
ANR	663332	ReturnStatement	return AVERROR_INVALIDDATA ;	143:8:3029:3055	662917	1	True				
ANR	663333	Identifier	AVERROR_INVALIDDATA		662917	0					
ANR	663334	IfStatement	if ( q -> coding_mode == STEREO )		662917	9					
ANR	663335	Condition	q -> coding_mode == STEREO	149:8:3075:3098	662917	0	True				
ANR	663336	EqualityExpression	q -> coding_mode == STEREO		662917	0		==			
ANR	663337	PtrMemberAccess	q -> coding_mode		662917	0					
ANR	663338	Identifier	q		662917	0					
ANR	663339	Identifier	coding_mode		662917	1					
ANR	663340	Identifier	STEREO		662917	1					
ANR	663341	ExpressionStatement	"av_log ( avctx , AV_LOG_DEBUG , ""Normal stereo detected.\\n"" )"	151:8:3110:3166	662917	1	True				
ANR	663342	CallExpression	"av_log ( avctx , AV_LOG_DEBUG , ""Normal stereo detected.\\n"" )"		662917	0					
ANR	663343	Callee	av_log		662917	0					
ANR	663344	Identifier	av_log		662917	0					
ANR	663345	ArgumentList	avctx		662917	1					
ANR	663346	Argument	avctx		662917	0					
ANR	663347	Identifier	avctx		662917	0					
ANR	663348	Argument	AV_LOG_DEBUG		662917	1					
ANR	663349	Identifier	AV_LOG_DEBUG		662917	0					
ANR	663350	Argument	"""Normal stereo detected.\\n"""		662917	2					
ANR	663351	PrimaryExpression	"""Normal stereo detected.\\n"""		662917	0					
ANR	663352	ElseStatement	else		662917	0					
ANR	663353	IfStatement	if ( q -> coding_mode == JOINT_STEREO )		662917	0					
ANR	663354	Condition	q -> coding_mode == JOINT_STEREO	153:13:3182:3211	662917	0	True				
ANR	663355	EqualityExpression	q -> coding_mode == JOINT_STEREO		662917	0		==			
ANR	663356	PtrMemberAccess	q -> coding_mode		662917	0					
ANR	663357	Identifier	q		662917	0					
ANR	663358	Identifier	coding_mode		662917	1					
ANR	663359	Identifier	JOINT_STEREO		662917	1					
ANR	663360	CompoundStatement		151:45:3151:3151	662917	1					
ANR	663361	IfStatement	if ( avctx -> channels != 2 )		662917	0					
ANR	663362	Condition	avctx -> channels != 2	155:12:3229:3248	662917	0	True				
ANR	663363	EqualityExpression	avctx -> channels != 2		662917	0		!=			
ANR	663364	PtrMemberAccess	avctx -> channels		662917	0					
ANR	663365	Identifier	avctx		662917	0					
ANR	663366	Identifier	channels		662917	1					
ANR	663367	PrimaryExpression	2		662917	1					
ANR	663368	ReturnStatement	return AVERROR_INVALIDDATA ;	157:12:3264:3290	662917	1	True				
ANR	663369	Identifier	AVERROR_INVALIDDATA		662917	0					
ANR	663370	ExpressionStatement	"av_log ( avctx , AV_LOG_DEBUG , ""Joint stereo detected.\\n"" )"	159:8:3301:3356	662917	1	True				
ANR	663371	CallExpression	"av_log ( avctx , AV_LOG_DEBUG , ""Joint stereo detected.\\n"" )"		662917	0					
ANR	663372	Callee	av_log		662917	0					
ANR	663373	Identifier	av_log		662917	0					
ANR	663374	ArgumentList	avctx		662917	1					
ANR	663375	Argument	avctx		662917	0					
ANR	663376	Identifier	avctx		662917	0					
ANR	663377	Argument	AV_LOG_DEBUG		662917	1					
ANR	663378	Identifier	AV_LOG_DEBUG		662917	0					
ANR	663379	Argument	"""Joint stereo detected.\\n"""		662917	2					
ANR	663380	PrimaryExpression	"""Joint stereo detected.\\n"""		662917	0					
ANR	663381	ElseStatement	else		662917	0					
ANR	663382	CompoundStatement		159:11:3307:3307	662917	0					
ANR	663383	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Unknown channel coding mode %x!\\n"" , q -> coding_mode )"	163:8:3381:3477	662917	0	True				
ANR	663384	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Unknown channel coding mode %x!\\n"" , q -> coding_mode )"		662917	0					
ANR	663385	Callee	av_log		662917	0					
ANR	663386	Identifier	av_log		662917	0					
ANR	663387	ArgumentList	avctx		662917	1					
ANR	663388	Argument	avctx		662917	0					
ANR	663389	Identifier	avctx		662917	0					
ANR	663390	Argument	AV_LOG_ERROR		662917	1					
ANR	663391	Identifier	AV_LOG_ERROR		662917	0					
ANR	663392	Argument	"""Unknown channel coding mode %x!\\n"""		662917	2					
ANR	663393	PrimaryExpression	"""Unknown channel coding mode %x!\\n"""		662917	0					
ANR	663394	Argument	q -> coding_mode		662917	3					
ANR	663395	PtrMemberAccess	q -> coding_mode		662917	0					
ANR	663396	Identifier	q		662917	0					
ANR	663397	Identifier	coding_mode		662917	1					
ANR	663398	ReturnStatement	return AVERROR_INVALIDDATA ;	167:8:3488:3514	662917	1	True				
ANR	663399	Identifier	AVERROR_INVALIDDATA		662917	0					
ANR	663400	IfStatement	if ( avctx -> block_align >= UINT_MAX / 2 )		662917	10					
ANR	663401	Condition	avctx -> block_align >= UINT_MAX / 2	173:8:3534:3567	662917	0	True				
ANR	663402	RelationalExpression	avctx -> block_align >= UINT_MAX / 2		662917	0		>=			
ANR	663403	PtrMemberAccess	avctx -> block_align		662917	0					
ANR	663404	Identifier	avctx		662917	0					
ANR	663405	Identifier	block_align		662917	1					
ANR	663406	MultiplicativeExpression	UINT_MAX / 2		662917	1		/			
ANR	663407	Identifier	UINT_MAX		662917	0					
ANR	663408	PrimaryExpression	2		662917	1					
ANR	663409	ReturnStatement	return AVERROR ( EINVAL ) ;	175:8:3579:3601	662917	1	True				
ANR	663410	CallExpression	AVERROR ( EINVAL )		662917	0					
ANR	663411	Callee	AVERROR		662917	0					
ANR	663412	Identifier	AVERROR		662917	0					
ANR	663413	ArgumentList	EINVAL		662917	1					
ANR	663414	Argument	EINVAL		662917	0					
ANR	663415	Identifier	EINVAL		662917	0					
ANR	663416	ExpressionStatement	"q -> decoded_bytes_buffer = av_mallocz ( FFALIGN ( avctx -> block_align , 4 ) + FF_INPUT_BUFFER_PADDING_SIZE )"	179:4:3610:3751	662917	11	True				
ANR	663417	AssignmentExpression	"q -> decoded_bytes_buffer = av_mallocz ( FFALIGN ( avctx -> block_align , 4 ) + FF_INPUT_BUFFER_PADDING_SIZE )"		662917	0		=			
ANR	663418	PtrMemberAccess	q -> decoded_bytes_buffer		662917	0					
ANR	663419	Identifier	q		662917	0					
ANR	663420	Identifier	decoded_bytes_buffer		662917	1					
ANR	663421	CallExpression	"av_mallocz ( FFALIGN ( avctx -> block_align , 4 ) + FF_INPUT_BUFFER_PADDING_SIZE )"		662917	1					
ANR	663422	Callee	av_mallocz		662917	0					
ANR	663423	Identifier	av_mallocz		662917	0					
ANR	663424	ArgumentList	"FFALIGN ( avctx -> block_align , 4 ) + FF_INPUT_BUFFER_PADDING_SIZE"		662917	1					
ANR	663425	Argument	"FFALIGN ( avctx -> block_align , 4 ) + FF_INPUT_BUFFER_PADDING_SIZE"		662917	0					
ANR	663426	AdditiveExpression	"FFALIGN ( avctx -> block_align , 4 ) + FF_INPUT_BUFFER_PADDING_SIZE"		662917	0		+			
ANR	663427	CallExpression	"FFALIGN ( avctx -> block_align , 4 )"		662917	0					
ANR	663428	Callee	FFALIGN		662917	0					
ANR	663429	Identifier	FFALIGN		662917	0					
ANR	663430	ArgumentList	avctx -> block_align		662917	1					
ANR	663431	Argument	avctx -> block_align		662917	0					
ANR	663432	PtrMemberAccess	avctx -> block_align		662917	0					
ANR	663433	Identifier	avctx		662917	0					
ANR	663434	Identifier	block_align		662917	1					
ANR	663435	Argument	4		662917	1					
ANR	663436	PrimaryExpression	4		662917	0					
ANR	663437	Identifier	FF_INPUT_BUFFER_PADDING_SIZE		662917	1					
ANR	663438	IfStatement	if ( q -> decoded_bytes_buffer == NULL )		662917	12					
ANR	663439	Condition	q -> decoded_bytes_buffer == NULL	183:8:3762:3792	662917	0	True				
ANR	663440	EqualityExpression	q -> decoded_bytes_buffer == NULL		662917	0		==			
ANR	663441	PtrMemberAccess	q -> decoded_bytes_buffer		662917	0					
ANR	663442	Identifier	q		662917	0					
ANR	663443	Identifier	decoded_bytes_buffer		662917	1					
ANR	663444	Identifier	NULL		662917	1					
ANR	663445	ReturnStatement	return AVERROR ( ENOMEM ) ;	185:8:3804:3826	662917	1	True				
ANR	663446	CallExpression	AVERROR ( ENOMEM )		662917	0					
ANR	663447	Callee	AVERROR		662917	0					
ANR	663448	Identifier	AVERROR		662917	0					
ANR	663449	ArgumentList	ENOMEM		662917	1					
ANR	663450	Argument	ENOMEM		662917	0					
ANR	663451	Identifier	ENOMEM		662917	0					
ANR	663452	ExpressionStatement	avctx -> sample_fmt = AV_SAMPLE_FMT_FLTP	189:4:3835:3873	662917	13	True				
ANR	663453	AssignmentExpression	avctx -> sample_fmt = AV_SAMPLE_FMT_FLTP		662917	0		=			
ANR	663454	PtrMemberAccess	avctx -> sample_fmt		662917	0					
ANR	663455	Identifier	avctx		662917	0					
ANR	663456	Identifier	sample_fmt		662917	1					
ANR	663457	Identifier	AV_SAMPLE_FMT_FLTP		662917	1					
ANR	663458	IfStatement	"if ( ( ret = ff_mdct_init ( & q -> mdct_ctx , 9 , 1 , 1.0 / 32768 ) ) < 0 )"		662917	14					
ANR	663459	Condition	"( ret = ff_mdct_init ( & q -> mdct_ctx , 9 , 1 , 1.0 / 32768 ) ) < 0"	195:8:3927:3983	662917	0	True				
ANR	663460	RelationalExpression	"( ret = ff_mdct_init ( & q -> mdct_ctx , 9 , 1 , 1.0 / 32768 ) ) < 0"		662917	0		<			
ANR	663461	AssignmentExpression	"ret = ff_mdct_init ( & q -> mdct_ctx , 9 , 1 , 1.0 / 32768 )"		662917	0		=			
ANR	663462	Identifier	ret		662917	0					
ANR	663463	CallExpression	"ff_mdct_init ( & q -> mdct_ctx , 9 , 1 , 1.0 / 32768 )"		662917	1					
ANR	663464	Callee	ff_mdct_init		662917	0					
ANR	663465	Identifier	ff_mdct_init		662917	0					
ANR	663466	ArgumentList	& q -> mdct_ctx		662917	1					
ANR	663467	Argument	& q -> mdct_ctx		662917	0					
ANR	663468	UnaryOperationExpression	& q -> mdct_ctx		662917	0					
ANR	663469	UnaryOperator	&		662917	0					
ANR	663470	PtrMemberAccess	q -> mdct_ctx		662917	1					
ANR	663471	Identifier	q		662917	0					
ANR	663472	Identifier	mdct_ctx		662917	1					
ANR	663473	Argument	9		662917	1					
ANR	663474	PrimaryExpression	9		662917	0					
ANR	663475	Argument	1		662917	2					
ANR	663476	PrimaryExpression	1		662917	0					
ANR	663477	Argument	1.0 / 32768		662917	3					
ANR	663478	MultiplicativeExpression	1.0 / 32768		662917	0		/			
ANR	663479	PrimaryExpression	1.0		662917	0					
ANR	663480	PrimaryExpression	32768		662917	1					
ANR	663481	PrimaryExpression	0		662917	1					
ANR	663482	CompoundStatement		193:67:3923:3923	662917	1					
ANR	663483	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Error initializing MDCT\\n"" )"	197:8:3997:4053	662917	0	True				
ANR	663484	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Error initializing MDCT\\n"" )"		662917	0					
ANR	663485	Callee	av_log		662917	0					
ANR	663486	Identifier	av_log		662917	0					
ANR	663487	ArgumentList	avctx		662917	1					
ANR	663488	Argument	avctx		662917	0					
ANR	663489	Identifier	avctx		662917	0					
ANR	663490	Argument	AV_LOG_ERROR		662917	1					
ANR	663491	Identifier	AV_LOG_ERROR		662917	0					
ANR	663492	Argument	"""Error initializing MDCT\\n"""		662917	2					
ANR	663493	PrimaryExpression	"""Error initializing MDCT\\n"""		662917	0					
ANR	663494	ExpressionStatement	av_freep ( & q -> decoded_bytes_buffer )	199:8:4064:4098	662917	1	True				
ANR	663495	CallExpression	av_freep ( & q -> decoded_bytes_buffer )		662917	0					
ANR	663496	Callee	av_freep		662917	0					
ANR	663497	Identifier	av_freep		662917	0					
ANR	663498	ArgumentList	& q -> decoded_bytes_buffer		662917	1					
ANR	663499	Argument	& q -> decoded_bytes_buffer		662917	0					
ANR	663500	UnaryOperationExpression	& q -> decoded_bytes_buffer		662917	0					
ANR	663501	UnaryOperator	&		662917	0					
ANR	663502	PtrMemberAccess	q -> decoded_bytes_buffer		662917	1					
ANR	663503	Identifier	q		662917	0					
ANR	663504	Identifier	decoded_bytes_buffer		662917	1					
ANR	663505	ReturnStatement	return ret ;	201:8:4109:4119	662917	2	True				
ANR	663506	Identifier	ret		662917	0					
ANR	663507	ExpressionStatement	q -> weighting_delay [ 0 ] = 0	209:4:4182:4207	662917	15	True				
ANR	663508	AssignmentExpression	q -> weighting_delay [ 0 ] = 0		662917	0		=			
ANR	663509	ArrayIndexing	q -> weighting_delay [ 0 ]		662917	0					
ANR	663510	PtrMemberAccess	q -> weighting_delay		662917	0					
ANR	663511	Identifier	q		662917	0					
ANR	663512	Identifier	weighting_delay		662917	1					
ANR	663513	PrimaryExpression	0		662917	1					
ANR	663514	PrimaryExpression	0		662917	1					
ANR	663515	ExpressionStatement	q -> weighting_delay [ 1 ] = 7	211:4:4214:4239	662917	16	True				
ANR	663516	AssignmentExpression	q -> weighting_delay [ 1 ] = 7		662917	0		=			
ANR	663517	ArrayIndexing	q -> weighting_delay [ 1 ]		662917	0					
ANR	663518	PtrMemberAccess	q -> weighting_delay		662917	0					
ANR	663519	Identifier	q		662917	0					
ANR	663520	Identifier	weighting_delay		662917	1					
ANR	663521	PrimaryExpression	1		662917	1					
ANR	663522	PrimaryExpression	7		662917	1					
ANR	663523	ExpressionStatement	q -> weighting_delay [ 2 ] = 0	213:4:4246:4271	662917	17	True				
ANR	663524	AssignmentExpression	q -> weighting_delay [ 2 ] = 0		662917	0		=			
ANR	663525	ArrayIndexing	q -> weighting_delay [ 2 ]		662917	0					
ANR	663526	PtrMemberAccess	q -> weighting_delay		662917	0					
ANR	663527	Identifier	q		662917	0					
ANR	663528	Identifier	weighting_delay		662917	1					
ANR	663529	PrimaryExpression	2		662917	1					
ANR	663530	PrimaryExpression	0		662917	1					
ANR	663531	ExpressionStatement	q -> weighting_delay [ 3 ] = 7	215:4:4278:4303	662917	18	True				
ANR	663532	AssignmentExpression	q -> weighting_delay [ 3 ] = 7		662917	0		=			
ANR	663533	ArrayIndexing	q -> weighting_delay [ 3 ]		662917	0					
ANR	663534	PtrMemberAccess	q -> weighting_delay		662917	0					
ANR	663535	Identifier	q		662917	0					
ANR	663536	Identifier	weighting_delay		662917	1					
ANR	663537	PrimaryExpression	3		662917	1					
ANR	663538	PrimaryExpression	7		662917	1					
ANR	663539	ExpressionStatement	q -> weighting_delay [ 4 ] = 0	217:4:4310:4335	662917	19	True				
ANR	663540	AssignmentExpression	q -> weighting_delay [ 4 ] = 0		662917	0		=			
ANR	663541	ArrayIndexing	q -> weighting_delay [ 4 ]		662917	0					
ANR	663542	PtrMemberAccess	q -> weighting_delay		662917	0					
ANR	663543	Identifier	q		662917	0					
ANR	663544	Identifier	weighting_delay		662917	1					
ANR	663545	PrimaryExpression	4		662917	1					
ANR	663546	PrimaryExpression	0		662917	1					
ANR	663547	ExpressionStatement	q -> weighting_delay [ 5 ] = 7	219:4:4342:4367	662917	20	True				
ANR	663548	AssignmentExpression	q -> weighting_delay [ 5 ] = 7		662917	0		=			
ANR	663549	ArrayIndexing	q -> weighting_delay [ 5 ]		662917	0					
ANR	663550	PtrMemberAccess	q -> weighting_delay		662917	0					
ANR	663551	Identifier	q		662917	0					
ANR	663552	Identifier	weighting_delay		662917	1					
ANR	663553	PrimaryExpression	5		662917	1					
ANR	663554	PrimaryExpression	7		662917	1					
ANR	663555	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		662917	21					
ANR	663556	ForInit	i = 0 ;	223:9:4381:4386	662917	0	True				
ANR	663557	AssignmentExpression	i = 0		662917	0		=			
ANR	663558	Identifier	i		662917	0					
ANR	663559	PrimaryExpression	0		662917	1					
ANR	663560	Condition	i < 4	223:16:4388:4392	662917	1	True				
ANR	663561	RelationalExpression	i < 4		662917	0		<			
ANR	663562	Identifier	i		662917	0					
ANR	663563	PrimaryExpression	4		662917	1					
ANR	663564	PostIncDecOperationExpression	i ++	223:23:4395:4397	662917	2	True				
ANR	663565	Identifier	i		662917	0					
ANR	663566	IncDec	++		662917	1					
ANR	663567	CompoundStatement		221:28:4337:4337	662917	3					
ANR	663568	ExpressionStatement	q -> matrix_coeff_index_prev [ i ] = 3	225:8:4411:4444	662917	0	True				
ANR	663569	AssignmentExpression	q -> matrix_coeff_index_prev [ i ] = 3		662917	0		=			
ANR	663570	ArrayIndexing	q -> matrix_coeff_index_prev [ i ]		662917	0					
ANR	663571	PtrMemberAccess	q -> matrix_coeff_index_prev		662917	0					
ANR	663572	Identifier	q		662917	0					
ANR	663573	Identifier	matrix_coeff_index_prev		662917	1					
ANR	663574	Identifier	i		662917	1					
ANR	663575	PrimaryExpression	3		662917	1					
ANR	663576	ExpressionStatement	q -> matrix_coeff_index_now [ i ] = 3	227:8:4455:4488	662917	1	True				
ANR	663577	AssignmentExpression	q -> matrix_coeff_index_now [ i ] = 3		662917	0		=			
ANR	663578	ArrayIndexing	q -> matrix_coeff_index_now [ i ]		662917	0					
ANR	663579	PtrMemberAccess	q -> matrix_coeff_index_now		662917	0					
ANR	663580	Identifier	q		662917	0					
ANR	663581	Identifier	matrix_coeff_index_now		662917	1					
ANR	663582	Identifier	i		662917	1					
ANR	663583	PrimaryExpression	3		662917	1					
ANR	663584	ExpressionStatement	q -> matrix_coeff_index_next [ i ] = 3	229:8:4499:4532	662917	2	True				
ANR	663585	AssignmentExpression	q -> matrix_coeff_index_next [ i ] = 3		662917	0		=			
ANR	663586	ArrayIndexing	q -> matrix_coeff_index_next [ i ]		662917	0					
ANR	663587	PtrMemberAccess	q -> matrix_coeff_index_next		662917	0					
ANR	663588	Identifier	q		662917	0					
ANR	663589	Identifier	matrix_coeff_index_next		662917	1					
ANR	663590	Identifier	i		662917	1					
ANR	663591	PrimaryExpression	3		662917	1					
ANR	663592	ExpressionStatement	"ff_atrac_init_gain_compensation ( & q -> gainc_ctx , 4 , 3 )"	235:4:4548:4600	662917	22	True				
ANR	663593	CallExpression	"ff_atrac_init_gain_compensation ( & q -> gainc_ctx , 4 , 3 )"		662917	0					
ANR	663594	Callee	ff_atrac_init_gain_compensation		662917	0					
ANR	663595	Identifier	ff_atrac_init_gain_compensation		662917	0					
ANR	663596	ArgumentList	& q -> gainc_ctx		662917	1					
ANR	663597	Argument	& q -> gainc_ctx		662917	0					
ANR	663598	UnaryOperationExpression	& q -> gainc_ctx		662917	0					
ANR	663599	UnaryOperator	&		662917	0					
ANR	663600	PtrMemberAccess	q -> gainc_ctx		662917	1					
ANR	663601	Identifier	q		662917	0					
ANR	663602	Identifier	gainc_ctx		662917	1					
ANR	663603	Argument	4		662917	1					
ANR	663604	PrimaryExpression	4		662917	0					
ANR	663605	Argument	3		662917	2					
ANR	663606	PrimaryExpression	3		662917	0					
ANR	663607	ExpressionStatement	"avpriv_float_dsp_init ( & q -> fdsp , avctx -> flags & CODEC_FLAG_BITEXACT )"	237:4:4607:4674	662917	23	True				
ANR	663608	CallExpression	"avpriv_float_dsp_init ( & q -> fdsp , avctx -> flags & CODEC_FLAG_BITEXACT )"		662917	0					
ANR	663609	Callee	avpriv_float_dsp_init		662917	0					
ANR	663610	Identifier	avpriv_float_dsp_init		662917	0					
ANR	663611	ArgumentList	& q -> fdsp		662917	1					
ANR	663612	Argument	& q -> fdsp		662917	0					
ANR	663613	UnaryOperationExpression	& q -> fdsp		662917	0					
ANR	663614	UnaryOperator	&		662917	0					
ANR	663615	PtrMemberAccess	q -> fdsp		662917	1					
ANR	663616	Identifier	q		662917	0					
ANR	663617	Identifier	fdsp		662917	1					
ANR	663618	Argument	avctx -> flags & CODEC_FLAG_BITEXACT		662917	1					
ANR	663619	BitAndExpression	avctx -> flags & CODEC_FLAG_BITEXACT		662917	0		&			
ANR	663620	PtrMemberAccess	avctx -> flags		662917	0					
ANR	663621	Identifier	avctx		662917	0					
ANR	663622	Identifier	flags		662917	1					
ANR	663623	Identifier	CODEC_FLAG_BITEXACT		662917	1					
ANR	663624	ExpressionStatement	"ff_fmt_convert_init ( & q -> fmt_conv , avctx )"	239:4:4681:4721	662917	24	True				
ANR	663625	CallExpression	"ff_fmt_convert_init ( & q -> fmt_conv , avctx )"		662917	0					
ANR	663626	Callee	ff_fmt_convert_init		662917	0					
ANR	663627	Identifier	ff_fmt_convert_init		662917	0					
ANR	663628	ArgumentList	& q -> fmt_conv		662917	1					
ANR	663629	Argument	& q -> fmt_conv		662917	0					
ANR	663630	UnaryOperationExpression	& q -> fmt_conv		662917	0					
ANR	663631	UnaryOperator	&		662917	0					
ANR	663632	PtrMemberAccess	q -> fmt_conv		662917	1					
ANR	663633	Identifier	q		662917	0					
ANR	663634	Identifier	fmt_conv		662917	1					
ANR	663635	Argument	avctx		662917	1					
ANR	663636	Identifier	avctx		662917	0					
ANR	663637	ExpressionStatement	q -> units = av_mallocz ( sizeof ( * q -> units ) * avctx -> channels )	243:4:4730:4788	662917	25	True				
ANR	663638	AssignmentExpression	q -> units = av_mallocz ( sizeof ( * q -> units ) * avctx -> channels )		662917	0		=			
ANR	663639	PtrMemberAccess	q -> units		662917	0					
ANR	663640	Identifier	q		662917	0					
ANR	663641	Identifier	units		662917	1					
ANR	663642	CallExpression	av_mallocz ( sizeof ( * q -> units ) * avctx -> channels )		662917	1					
ANR	663643	Callee	av_mallocz		662917	0					
ANR	663644	Identifier	av_mallocz		662917	0					
ANR	663645	ArgumentList	sizeof ( * q -> units ) * avctx -> channels		662917	1					
ANR	663646	Argument	sizeof ( * q -> units ) * avctx -> channels		662917	0					
ANR	663647	MultiplicativeExpression	sizeof ( * q -> units ) * avctx -> channels		662917	0		*			
ANR	663648	SizeofExpression	sizeof ( * q -> units )		662917	0					
ANR	663649	Sizeof	sizeof		662917	0					
ANR	663650	UnaryOperationExpression	* q -> units		662917	1					
ANR	663651	UnaryOperator	*		662917	0					
ANR	663652	PtrMemberAccess	q -> units		662917	1					
ANR	663653	Identifier	q		662917	0					
ANR	663654	Identifier	units		662917	1					
ANR	663655	PtrMemberAccess	avctx -> channels		662917	1					
ANR	663656	Identifier	avctx		662917	0					
ANR	663657	Identifier	channels		662917	1					
ANR	663658	IfStatement	if ( ! q -> units )		662917	26					
ANR	663659	Condition	! q -> units	245:8:4799:4807	662917	0	True				
ANR	663660	UnaryOperationExpression	! q -> units		662917	0					
ANR	663661	UnaryOperator	!		662917	0					
ANR	663662	PtrMemberAccess	q -> units		662917	1					
ANR	663663	Identifier	q		662917	0					
ANR	663664	Identifier	units		662917	1					
ANR	663665	CompoundStatement		243:19:4747:4747	662917	1					
ANR	663666	ExpressionStatement	atrac3_decode_close ( avctx )	247:8:4821:4847	662917	0	True				
ANR	663667	CallExpression	atrac3_decode_close ( avctx )		662917	0					
ANR	663668	Callee	atrac3_decode_close		662917	0					
ANR	663669	Identifier	atrac3_decode_close		662917	0					
ANR	663670	ArgumentList	avctx		662917	1					
ANR	663671	Argument	avctx		662917	0					
ANR	663672	Identifier	avctx		662917	0					
ANR	663673	ReturnStatement	return AVERROR ( ENOMEM ) ;	249:8:4858:4880	662917	1	True				
ANR	663674	CallExpression	AVERROR ( ENOMEM )		662917	0					
ANR	663675	Callee	AVERROR		662917	0					
ANR	663676	Identifier	AVERROR		662917	0					
ANR	663677	ArgumentList	ENOMEM		662917	1					
ANR	663678	Argument	ENOMEM		662917	0					
ANR	663679	Identifier	ENOMEM		662917	0					
ANR	663680	ReturnStatement	return 0 ;	255:4:4896:4904	662917	27	True				
ANR	663681	PrimaryExpression	0		662917	0					
ANR	663682	ReturnType	static av_cold int		662917	1					
ANR	663683	Identifier	atrac3_decode_init		662917	2					
ANR	663684	ParameterList	AVCodecContext * avctx		662917	3					
ANR	663685	Parameter	AVCodecContext * avctx	1:38:38:58	662917	0	True				
ANR	663686	ParameterType	AVCodecContext *		662917	0					
ANR	663687	Identifier	avctx		662917	1					
ANR	663688	CFGEntryNode	ENTRY		662917		True				
ANR	663689	CFGExitNode	EXIT		662917		True				
ANR	663690	Symbol	JOINT_STEREO		662917						
ANR	663691	Symbol	q -> matrix_coeff_index_prev		662917						
ANR	663692	Symbol	q -> units		662917						
ANR	663693	Symbol	ENOMEM		662917						
ANR	663694	Symbol	bytestream_get_be16		662917						
ANR	663695	Symbol	AV_SAMPLE_FMT_FLTP		662917						
ANR	663696	Symbol	samples_per_frame		662917						
ANR	663697	Symbol	& edata_ptr		662917						
ANR	663698	Symbol	UINT_MAX		662917						
ANR	663699	Symbol	* q -> units		662917						
ANR	663700	Symbol	frame_factor		662917						
ANR	663701	Symbol	avctx -> channels		662917						
ANR	663702	Symbol	edata_ptr		662917						
ANR	663703	Symbol	avctx -> flags		662917						
ANR	663704	Symbol	STEREO		662917						
ANR	663705	Symbol	q -> scrambled_stream		662917						
ANR	663706	Symbol	AV_LOG_DEBUG		662917						
ANR	663707	Symbol	ret		662917						
ANR	663708	Symbol	avctx -> sample_fmt		662917						
ANR	663709	Symbol	NULL		662917						
ANR	663710	Symbol	av_mallocz		662917						
ANR	663711	Symbol	version		662917						
ANR	663712	Symbol	bytestream_get_le16		662917						
ANR	663713	Symbol	* q -> matrix_coeff_index_prev		662917						
ANR	663714	Symbol	* avctx		662917						
ANR	663715	Symbol	delay		662917						
ANR	663716	Symbol	* q -> weighting_delay		662917						
ANR	663717	Symbol	& q -> fdsp		662917						
ANR	663718	Symbol	& q -> mdct_ctx		662917						
ANR	663719	Symbol	FFALIGN		662917						
ANR	663720	Symbol	q -> decoded_bytes_buffer		662917						
ANR	663721	Symbol	* q -> matrix_coeff_index_now		662917						
ANR	663722	Symbol	SAMPLES_PER_FRAME		662917						
ANR	663723	Symbol	ff_mdct_init		662917						
ANR	663724	Symbol	& q -> gainc_ctx		662917						
ANR	663725	Symbol	q -> coding_mode		662917						
ANR	663726	Symbol	q -> matrix_coeff_index_next		662917						
ANR	663727	Symbol	bytestream_get_be32		662917						
ANR	663728	Symbol	CODEC_FLAG_BITEXACT		662917						
ANR	663729	Symbol	FF_INPUT_BUFFER_PADDING_SIZE		662917						
ANR	663730	Symbol	avctx -> block_align		662917						
ANR	663731	Symbol	* * q		662917						
ANR	663732	Symbol	avctx		662917						
ANR	663733	Symbol	avctx -> extradata		662917						
ANR	663734	Symbol	AV_LOG_ERROR		662917						
ANR	663735	Symbol	avctx -> extradata_size		662917						
ANR	663736	Symbol	i		662917						
ANR	663737	Symbol	q -> weighting_delay		662917						
ANR	663738	Symbol	avctx -> priv_data		662917						
ANR	663739	Symbol	* q -> matrix_coeff_index_next		662917						
ANR	663740	Symbol	EINVAL		662917						
ANR	663741	Symbol	& q -> decoded_bytes_buffer		662917						
ANR	663742	Symbol	q		662917						
ANR	663743	Symbol	* i		662917						
ANR	663744	Symbol	q -> matrix_coeff_index_now		662917						
ANR	663745	Symbol	& q -> fmt_conv		662917						
ANR	663746	Symbol	AVERROR_INVALIDDATA		662917						
ANR	663747	Symbol	AVERROR		662917						
ANR	663748	Symbol	* q		662917						
