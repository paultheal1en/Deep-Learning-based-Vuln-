command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8834993	File	/home/p4ultr4n/workplace/ReVeal/raw_code/vc1_decode_i_block_adv_1.c								
ANR	8834994	Function	vc1_decode_i_block_adv	1:0:0:7226							
ANR	8834995	FunctionDef	"vc1_decode_i_block_adv (VC1Context * v , int16_t block [ 64 ] , int n , int coded , int codingset , int mquant)"		8834994	0					
ANR	8834996	CompoundStatement		5:0:149:7226	8834994	0					
ANR	8834997	IdentifierDeclStatement	GetBitContext * gb = & v -> s . gb ;	7:4:156:184	8834994	0	True				
ANR	8834998	IdentifierDecl	* gb = & v -> s . gb		8834994	0					
ANR	8834999	IdentifierDeclType	GetBitContext *		8834994	0					
ANR	8835000	Identifier	gb		8834994	1					
ANR	8835001	AssignmentExpression	* gb = & v -> s . gb		8834994	2		=			
ANR	8835002	Identifier	gb		8834994	0					
ANR	8835003	UnaryOperationExpression	& v -> s . gb		8834994	1					
ANR	8835004	UnaryOperator	&		8834994	0					
ANR	8835005	MemberAccess	v -> s . gb		8834994	1					
ANR	8835006	PtrMemberAccess	v -> s		8834994	0					
ANR	8835007	Identifier	v		8834994	0					
ANR	8835008	Identifier	s		8834994	1					
ANR	8835009	Identifier	gb		8834994	1					
ANR	8835010	IdentifierDeclStatement	MpegEncContext * s = & v -> s ;	9:4:191:216	8834994	1	True				
ANR	8835011	IdentifierDecl	* s = & v -> s		8834994	0					
ANR	8835012	IdentifierDeclType	MpegEncContext *		8834994	0					
ANR	8835013	Identifier	s		8834994	1					
ANR	8835014	AssignmentExpression	* s = & v -> s		8834994	2		=			
ANR	8835015	Identifier	s		8834994	0					
ANR	8835016	UnaryOperationExpression	& v -> s		8834994	1					
ANR	8835017	UnaryOperator	&		8834994	0					
ANR	8835018	PtrMemberAccess	v -> s		8834994	1					
ANR	8835019	Identifier	v		8834994	0					
ANR	8835020	Identifier	s		8834994	1					
ANR	8835021	IdentifierDeclStatement	int dc_pred_dir = 0 ;	11:4:223:242	8834994	2	True				
ANR	8835022	IdentifierDecl	dc_pred_dir = 0		8834994	0					
ANR	8835023	IdentifierDeclType	int		8834994	0					
ANR	8835024	Identifier	dc_pred_dir		8834994	1					
ANR	8835025	AssignmentExpression	dc_pred_dir = 0		8834994	2		=			
ANR	8835026	Identifier	dc_pred_dir		8834994	0					
ANR	8835027	PrimaryExpression	0		8834994	1					
ANR	8835028	IdentifierDeclStatement	int i ;	13:4:291:296	8834994	3	True				
ANR	8835029	IdentifierDecl	i		8834994	0					
ANR	8835030	IdentifierDeclType	int		8834994	0					
ANR	8835031	Identifier	i		8834994	1					
ANR	8835032	IdentifierDeclStatement	int16_t * dc_val ;	15:4:303:318	8834994	4	True				
ANR	8835033	IdentifierDecl	* dc_val		8834994	0					
ANR	8835034	IdentifierDeclType	int16_t *		8834994	0					
ANR	8835035	Identifier	dc_val		8834994	1					
ANR	8835036	IdentifierDeclStatement	"int16_t * ac_val , * ac_val2 ;"	17:4:325:350	8834994	5	True				
ANR	8835037	IdentifierDecl	* ac_val		8834994	0					
ANR	8835038	IdentifierDeclType	int16_t *		8834994	0					
ANR	8835039	Identifier	ac_val		8834994	1					
ANR	8835040	IdentifierDecl	* ac_val2		8834994	1					
ANR	8835041	IdentifierDeclType	int16_t *		8834994	0					
ANR	8835042	Identifier	ac_val2		8834994	1					
ANR	8835043	IdentifierDeclStatement	int dcdiff ;	19:4:357:367	8834994	6	True				
ANR	8835044	IdentifierDecl	dcdiff		8834994	0					
ANR	8835045	IdentifierDeclType	int		8834994	0					
ANR	8835046	Identifier	dcdiff		8834994	1					
ANR	8835047	IdentifierDeclStatement	"int a_avail = v -> a_avail , c_avail = v -> c_avail ;"	21:4:374:420	8834994	7	True				
ANR	8835048	IdentifierDecl	a_avail = v -> a_avail		8834994	0					
ANR	8835049	IdentifierDeclType	int		8834994	0					
ANR	8835050	Identifier	a_avail		8834994	1					
ANR	8835051	AssignmentExpression	a_avail = v -> a_avail		8834994	2		=			
ANR	8835052	Identifier	a_avail		8834994	0					
ANR	8835053	PtrMemberAccess	v -> a_avail		8834994	1					
ANR	8835054	Identifier	v		8834994	0					
ANR	8835055	Identifier	a_avail		8834994	1					
ANR	8835056	IdentifierDecl	c_avail = v -> c_avail		8834994	1					
ANR	8835057	IdentifierDeclType	int		8834994	0					
ANR	8835058	Identifier	c_avail		8834994	1					
ANR	8835059	AssignmentExpression	c_avail = v -> c_avail		8834994	2		=			
ANR	8835060	Identifier	c_avail		8834994	0					
ANR	8835061	PtrMemberAccess	v -> c_avail		8834994	1					
ANR	8835062	Identifier	v		8834994	0					
ANR	8835063	Identifier	c_avail		8834994	1					
ANR	8835064	IdentifierDeclStatement	int use_pred = s -> ac_pred ;	23:4:427:452	8834994	8	True				
ANR	8835065	IdentifierDecl	use_pred = s -> ac_pred		8834994	0					
ANR	8835066	IdentifierDeclType	int		8834994	0					
ANR	8835067	Identifier	use_pred		8834994	1					
ANR	8835068	AssignmentExpression	use_pred = s -> ac_pred		8834994	2		=			
ANR	8835069	Identifier	use_pred		8834994	0					
ANR	8835070	PtrMemberAccess	s -> ac_pred		8834994	1					
ANR	8835071	Identifier	s		8834994	0					
ANR	8835072	Identifier	ac_pred		8834994	1					
ANR	8835073	IdentifierDeclStatement	int scale ;	25:4:459:468	8834994	9	True				
ANR	8835074	IdentifierDecl	scale		8834994	0					
ANR	8835075	IdentifierDeclType	int		8834994	0					
ANR	8835076	Identifier	scale		8834994	1					
ANR	8835077	IdentifierDeclStatement	"int q1 , q2 = 0 ;"	27:4:475:489	8834994	10	True				
ANR	8835078	IdentifierDecl	q1		8834994	0					
ANR	8835079	IdentifierDeclType	int		8834994	0					
ANR	8835080	Identifier	q1		8834994	1					
ANR	8835081	IdentifierDecl	q2 = 0		8834994	1					
ANR	8835082	IdentifierDeclType	int		8834994	0					
ANR	8835083	Identifier	q2		8834994	1					
ANR	8835084	AssignmentExpression	q2 = 0		8834994	2		=			
ANR	8835085	Identifier	q2		8834994	0					
ANR	8835086	PrimaryExpression	0		8834994	1					
ANR	8835087	IdentifierDeclStatement	int mb_pos = s -> mb_x + s -> mb_y * s -> mb_stride ;	29:4:496:541	8834994	11	True				
ANR	8835088	IdentifierDecl	mb_pos = s -> mb_x + s -> mb_y * s -> mb_stride		8834994	0					
ANR	8835089	IdentifierDeclType	int		8834994	0					
ANR	8835090	Identifier	mb_pos		8834994	1					
ANR	8835091	AssignmentExpression	mb_pos = s -> mb_x + s -> mb_y * s -> mb_stride		8834994	2		=			
ANR	8835092	Identifier	mb_pos		8834994	0					
ANR	8835093	AdditiveExpression	s -> mb_x + s -> mb_y * s -> mb_stride		8834994	1		+			
ANR	8835094	PtrMemberAccess	s -> mb_x		8834994	0					
ANR	8835095	Identifier	s		8834994	0					
ANR	8835096	Identifier	mb_x		8834994	1					
ANR	8835097	MultiplicativeExpression	s -> mb_y * s -> mb_stride		8834994	1		*			
ANR	8835098	PtrMemberAccess	s -> mb_y		8834994	0					
ANR	8835099	Identifier	s		8834994	0					
ANR	8835100	Identifier	mb_y		8834994	1					
ANR	8835101	PtrMemberAccess	s -> mb_stride		8834994	1					
ANR	8835102	Identifier	s		8834994	0					
ANR	8835103	Identifier	mb_stride		8834994	1					
ANR	8835104	IfStatement	if ( n < 4 )		8834994	12					
ANR	8835105	Condition	n < 4	35:8:585:589	8834994	0	True				
ANR	8835106	RelationalExpression	n < 4		8834994	0		<			
ANR	8835107	Identifier	n		8834994	0					
ANR	8835108	PrimaryExpression	4		8834994	1					
ANR	8835109	CompoundStatement		31:15:442:442	8834994	1					
ANR	8835110	ExpressionStatement	"dcdiff = get_vlc2 ( & s -> gb , ff_msmp4_dc_luma_vlc [ s -> dc_table_index ] . table , DC_VLC_BITS , 3 )"	37:8:603:691	8834994	0	True				
ANR	8835111	AssignmentExpression	"dcdiff = get_vlc2 ( & s -> gb , ff_msmp4_dc_luma_vlc [ s -> dc_table_index ] . table , DC_VLC_BITS , 3 )"		8834994	0		=			
ANR	8835112	Identifier	dcdiff		8834994	0					
ANR	8835113	CallExpression	"get_vlc2 ( & s -> gb , ff_msmp4_dc_luma_vlc [ s -> dc_table_index ] . table , DC_VLC_BITS , 3 )"		8834994	1					
ANR	8835114	Callee	get_vlc2		8834994	0					
ANR	8835115	Identifier	get_vlc2		8834994	0					
ANR	8835116	ArgumentList	& s -> gb		8834994	1					
ANR	8835117	Argument	& s -> gb		8834994	0					
ANR	8835118	UnaryOperationExpression	& s -> gb		8834994	0					
ANR	8835119	UnaryOperator	&		8834994	0					
ANR	8835120	PtrMemberAccess	s -> gb		8834994	1					
ANR	8835121	Identifier	s		8834994	0					
ANR	8835122	Identifier	gb		8834994	1					
ANR	8835123	Argument	ff_msmp4_dc_luma_vlc [ s -> dc_table_index ] . table		8834994	1					
ANR	8835124	MemberAccess	ff_msmp4_dc_luma_vlc [ s -> dc_table_index ] . table		8834994	0					
ANR	8835125	ArrayIndexing	ff_msmp4_dc_luma_vlc [ s -> dc_table_index ]		8834994	0					
ANR	8835126	Identifier	ff_msmp4_dc_luma_vlc		8834994	0					
ANR	8835127	PtrMemberAccess	s -> dc_table_index		8834994	1					
ANR	8835128	Identifier	s		8834994	0					
ANR	8835129	Identifier	dc_table_index		8834994	1					
ANR	8835130	Identifier	table		8834994	1					
ANR	8835131	Argument	DC_VLC_BITS		8834994	2					
ANR	8835132	Identifier	DC_VLC_BITS		8834994	0					
ANR	8835133	Argument	3		8834994	3					
ANR	8835134	PrimaryExpression	3		8834994	0					
ANR	8835135	ElseStatement	else		8834994	0					
ANR	8835136	CompoundStatement		35:11:555:555	8834994	0					
ANR	8835137	ExpressionStatement	"dcdiff = get_vlc2 ( & s -> gb , ff_msmp4_dc_chroma_vlc [ s -> dc_table_index ] . table , DC_VLC_BITS , 3 )"	41:8:716:806	8834994	0	True				
ANR	8835138	AssignmentExpression	"dcdiff = get_vlc2 ( & s -> gb , ff_msmp4_dc_chroma_vlc [ s -> dc_table_index ] . table , DC_VLC_BITS , 3 )"		8834994	0		=			
ANR	8835139	Identifier	dcdiff		8834994	0					
ANR	8835140	CallExpression	"get_vlc2 ( & s -> gb , ff_msmp4_dc_chroma_vlc [ s -> dc_table_index ] . table , DC_VLC_BITS , 3 )"		8834994	1					
ANR	8835141	Callee	get_vlc2		8834994	0					
ANR	8835142	Identifier	get_vlc2		8834994	0					
ANR	8835143	ArgumentList	& s -> gb		8834994	1					
ANR	8835144	Argument	& s -> gb		8834994	0					
ANR	8835145	UnaryOperationExpression	& s -> gb		8834994	0					
ANR	8835146	UnaryOperator	&		8834994	0					
ANR	8835147	PtrMemberAccess	s -> gb		8834994	1					
ANR	8835148	Identifier	s		8834994	0					
ANR	8835149	Identifier	gb		8834994	1					
ANR	8835150	Argument	ff_msmp4_dc_chroma_vlc [ s -> dc_table_index ] . table		8834994	1					
ANR	8835151	MemberAccess	ff_msmp4_dc_chroma_vlc [ s -> dc_table_index ] . table		8834994	0					
ANR	8835152	ArrayIndexing	ff_msmp4_dc_chroma_vlc [ s -> dc_table_index ]		8834994	0					
ANR	8835153	Identifier	ff_msmp4_dc_chroma_vlc		8834994	0					
ANR	8835154	PtrMemberAccess	s -> dc_table_index		8834994	1					
ANR	8835155	Identifier	s		8834994	0					
ANR	8835156	Identifier	dc_table_index		8834994	1					
ANR	8835157	Identifier	table		8834994	1					
ANR	8835158	Argument	DC_VLC_BITS		8834994	2					
ANR	8835159	Identifier	DC_VLC_BITS		8834994	0					
ANR	8835160	Argument	3		8834994	3					
ANR	8835161	PrimaryExpression	3		8834994	0					
ANR	8835162	IfStatement	if ( dcdiff < 0 )		8834994	13					
ANR	8835163	Condition	dcdiff < 0	45:8:824:833	8834994	0	True				
ANR	8835164	RelationalExpression	dcdiff < 0		8834994	0		<			
ANR	8835165	Identifier	dcdiff		8834994	0					
ANR	8835166	PrimaryExpression	0		8834994	1					
ANR	8835167	CompoundStatement		41:20:686:686	8834994	1					
ANR	8835168	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_ERROR , ""Illegal DC VLC\\n"" )"	47:8:847:897	8834994	0	True				
ANR	8835169	CallExpression	"av_log ( s -> avctx , AV_LOG_ERROR , ""Illegal DC VLC\\n"" )"		8834994	0					
ANR	8835170	Callee	av_log		8834994	0					
ANR	8835171	Identifier	av_log		8834994	0					
ANR	8835172	ArgumentList	s -> avctx		8834994	1					
ANR	8835173	Argument	s -> avctx		8834994	0					
ANR	8835174	PtrMemberAccess	s -> avctx		8834994	0					
ANR	8835175	Identifier	s		8834994	0					
ANR	8835176	Identifier	avctx		8834994	1					
ANR	8835177	Argument	AV_LOG_ERROR		8834994	1					
ANR	8835178	Identifier	AV_LOG_ERROR		8834994	0					
ANR	8835179	Argument	"""Illegal DC VLC\\n"""		8834994	2					
ANR	8835180	PrimaryExpression	"""Illegal DC VLC\\n"""		8834994	0					
ANR	8835181	ReturnStatement	return - 1 ;	49:8:908:917	8834994	1	True				
ANR	8835182	UnaryOperationExpression	- 1		8834994	0					
ANR	8835183	UnaryOperator	-		8834994	0					
ANR	8835184	PrimaryExpression	1		8834994	1					
ANR	8835185	IfStatement	if ( dcdiff )		8834994	14					
ANR	8835186	Condition	dcdiff	53:8:935:940	8834994	0	True				
ANR	8835187	Identifier	dcdiff		8834994	0					
ANR	8835188	CompoundStatement		49:16:793:793	8834994	1					
ANR	8835189	IfStatement	if ( dcdiff == 119 )		8834994	0					
ANR	8835190	Condition	dcdiff == 119	55:12:958:970	8834994	0	True				
ANR	8835191	EqualityExpression	dcdiff == 119		8834994	0		==			
ANR	8835192	Identifier	dcdiff		8834994	0					
ANR	8835193	PrimaryExpression	119		8834994	1					
ANR	8835194	CompoundStatement		51:49:845:845	8834994	1					
ANR	8835195	IfStatement	if ( mquant == 1 )		8834994	0					
ANR	8835196	Condition	mquant == 1	59:16:1048:1058	8834994	0	True				
ANR	8835197	EqualityExpression	mquant == 1		8834994	0		==			
ANR	8835198	Identifier	mquant		8834994	0					
ANR	8835199	PrimaryExpression	1		8834994	1					
ANR	8835200	ExpressionStatement	"dcdiff = get_bits ( gb , 10 )"	59:34:1066:1091	8834994	1	True				
ANR	8835201	AssignmentExpression	"dcdiff = get_bits ( gb , 10 )"		8834994	0		=			
ANR	8835202	Identifier	dcdiff		8834994	0					
ANR	8835203	CallExpression	"get_bits ( gb , 10 )"		8834994	1					
ANR	8835204	Callee	get_bits		8834994	0					
ANR	8835205	Identifier	get_bits		8834994	0					
ANR	8835206	ArgumentList	gb		8834994	1					
ANR	8835207	Argument	gb		8834994	0					
ANR	8835208	Identifier	gb		8834994	0					
ANR	8835209	Argument	10		8834994	1					
ANR	8835210	PrimaryExpression	10		8834994	0					
ANR	8835211	ElseStatement	else		8834994	0					
ANR	8835212	IfStatement	if ( mquant == 2 )		8834994	0					
ANR	8835213	Condition	mquant == 2	61:21:1115:1125	8834994	0	True				
ANR	8835214	EqualityExpression	mquant == 2		8834994	0		==			
ANR	8835215	Identifier	mquant		8834994	0					
ANR	8835216	PrimaryExpression	2		8834994	1					
ANR	8835217	ExpressionStatement	"dcdiff = get_bits ( gb , 9 )"	61:34:1128:1152	8834994	1	True				
ANR	8835218	AssignmentExpression	"dcdiff = get_bits ( gb , 9 )"		8834994	0		=			
ANR	8835219	Identifier	dcdiff		8834994	0					
ANR	8835220	CallExpression	"get_bits ( gb , 9 )"		8834994	1					
ANR	8835221	Callee	get_bits		8834994	0					
ANR	8835222	Identifier	get_bits		8834994	0					
ANR	8835223	ArgumentList	gb		8834994	1					
ANR	8835224	Argument	gb		8834994	0					
ANR	8835225	Identifier	gb		8834994	0					
ANR	8835226	Argument	9		8834994	1					
ANR	8835227	PrimaryExpression	9		8834994	0					
ANR	8835228	ElseStatement	else		8834994	0					
ANR	8835229	ExpressionStatement	"dcdiff = get_bits ( gb , 8 )"	63:34:1189:1213	8834994	0	True				
ANR	8835230	AssignmentExpression	"dcdiff = get_bits ( gb , 8 )"		8834994	0		=			
ANR	8835231	Identifier	dcdiff		8834994	0					
ANR	8835232	CallExpression	"get_bits ( gb , 8 )"		8834994	1					
ANR	8835233	Callee	get_bits		8834994	0					
ANR	8835234	Identifier	get_bits		8834994	0					
ANR	8835235	ArgumentList	gb		8834994	1					
ANR	8835236	Argument	gb		8834994	0					
ANR	8835237	Identifier	gb		8834994	0					
ANR	8835238	Argument	8		8834994	1					
ANR	8835239	PrimaryExpression	8		8834994	0					
ANR	8835240	ElseStatement	else		8834994	0					
ANR	8835241	CompoundStatement		61:15:1081:1081	8834994	0					
ANR	8835242	IfStatement	if ( mquant == 1 )		8834994	0					
ANR	8835243	Condition	mquant == 1	67:16:1250:1260	8834994	0	True				
ANR	8835244	EqualityExpression	mquant == 1		8834994	0		==			
ANR	8835245	Identifier	mquant		8834994	0					
ANR	8835246	PrimaryExpression	1		8834994	1					
ANR	8835247	ExpressionStatement	"dcdiff = ( dcdiff << 2 ) + get_bits ( gb , 2 ) - 3"	69:16:1280:1324	8834994	1	True				
ANR	8835248	AssignmentExpression	"dcdiff = ( dcdiff << 2 ) + get_bits ( gb , 2 ) - 3"		8834994	0		=			
ANR	8835249	Identifier	dcdiff		8834994	0					
ANR	8835250	AdditiveExpression	"( dcdiff << 2 ) + get_bits ( gb , 2 ) - 3"		8834994	1		+			
ANR	8835251	ShiftExpression	dcdiff << 2		8834994	0		<<			
ANR	8835252	Identifier	dcdiff		8834994	0					
ANR	8835253	PrimaryExpression	2		8834994	1					
ANR	8835254	AdditiveExpression	"get_bits ( gb , 2 ) - 3"		8834994	1		-			
ANR	8835255	CallExpression	"get_bits ( gb , 2 )"		8834994	0					
ANR	8835256	Callee	get_bits		8834994	0					
ANR	8835257	Identifier	get_bits		8834994	0					
ANR	8835258	ArgumentList	gb		8834994	1					
ANR	8835259	Argument	gb		8834994	0					
ANR	8835260	Identifier	gb		8834994	0					
ANR	8835261	Argument	2		8834994	1					
ANR	8835262	PrimaryExpression	2		8834994	0					
ANR	8835263	PrimaryExpression	3		8834994	1					
ANR	8835264	ElseStatement	else		8834994	0					
ANR	8835265	IfStatement	if ( mquant == 2 )		8834994	0					
ANR	8835266	Condition	mquant == 2	71:21:1348:1358	8834994	0	True				
ANR	8835267	EqualityExpression	mquant == 2		8834994	0		==			
ANR	8835268	Identifier	mquant		8834994	0					
ANR	8835269	PrimaryExpression	2		8834994	1					
ANR	8835270	ExpressionStatement	dcdiff = ( dcdiff << 1 ) + get_bits1 ( gb ) - 1	73:16:1378:1422	8834994	1	True				
ANR	8835271	AssignmentExpression	dcdiff = ( dcdiff << 1 ) + get_bits1 ( gb ) - 1		8834994	0		=			
ANR	8835272	Identifier	dcdiff		8834994	0					
ANR	8835273	AdditiveExpression	( dcdiff << 1 ) + get_bits1 ( gb ) - 1		8834994	1		+			
ANR	8835274	ShiftExpression	dcdiff << 1		8834994	0		<<			
ANR	8835275	Identifier	dcdiff		8834994	0					
ANR	8835276	PrimaryExpression	1		8834994	1					
ANR	8835277	AdditiveExpression	get_bits1 ( gb ) - 1		8834994	1		-			
ANR	8835278	CallExpression	get_bits1 ( gb )		8834994	0					
ANR	8835279	Callee	get_bits1		8834994	0					
ANR	8835280	Identifier	get_bits1		8834994	0					
ANR	8835281	ArgumentList	gb		8834994	1					
ANR	8835282	Argument	gb		8834994	0					
ANR	8835283	Identifier	gb		8834994	0					
ANR	8835284	PrimaryExpression	1		8834994	1					
ANR	8835285	IfStatement	if ( get_bits1 ( gb ) )		8834994	1					
ANR	8835286	Condition	get_bits1 ( gb )	77:12:1448:1460	8834994	0	True				
ANR	8835287	CallExpression	get_bits1 ( gb )		8834994	0					
ANR	8835288	Callee	get_bits1		8834994	0					
ANR	8835289	Identifier	get_bits1		8834994	0					
ANR	8835290	ArgumentList	gb		8834994	1					
ANR	8835291	Argument	gb		8834994	0					
ANR	8835292	Identifier	gb		8834994	0					
ANR	8835293	ExpressionStatement	dcdiff = - dcdiff	79:12:1476:1492	8834994	1	True				
ANR	8835294	AssignmentExpression	dcdiff = - dcdiff		8834994	0		=			
ANR	8835295	Identifier	dcdiff		8834994	0					
ANR	8835296	UnaryOperationExpression	- dcdiff		8834994	1					
ANR	8835297	UnaryOperator	-		8834994	0					
ANR	8835298	Identifier	dcdiff		8834994	1					
ANR	8835299	ExpressionStatement	"dcdiff += vc1_pred_dc ( & v -> s , v -> overlap , mquant , n , v -> a_avail , v -> c_avail , & dc_val , & dc_pred_dir )"	87:4:1530:1628	8834994	15	True				
ANR	8835300	AssignmentExpression	"dcdiff += vc1_pred_dc ( & v -> s , v -> overlap , mquant , n , v -> a_avail , v -> c_avail , & dc_val , & dc_pred_dir )"		8834994	0		+=			
ANR	8835301	Identifier	dcdiff		8834994	0					
ANR	8835302	CallExpression	"vc1_pred_dc ( & v -> s , v -> overlap , mquant , n , v -> a_avail , v -> c_avail , & dc_val , & dc_pred_dir )"		8834994	1					
ANR	8835303	Callee	vc1_pred_dc		8834994	0					
ANR	8835304	Identifier	vc1_pred_dc		8834994	0					
ANR	8835305	ArgumentList	& v -> s		8834994	1					
ANR	8835306	Argument	& v -> s		8834994	0					
ANR	8835307	UnaryOperationExpression	& v -> s		8834994	0					
ANR	8835308	UnaryOperator	&		8834994	0					
ANR	8835309	PtrMemberAccess	v -> s		8834994	1					
ANR	8835310	Identifier	v		8834994	0					
ANR	8835311	Identifier	s		8834994	1					
ANR	8835312	Argument	v -> overlap		8834994	1					
ANR	8835313	PtrMemberAccess	v -> overlap		8834994	0					
ANR	8835314	Identifier	v		8834994	0					
ANR	8835315	Identifier	overlap		8834994	1					
ANR	8835316	Argument	mquant		8834994	2					
ANR	8835317	Identifier	mquant		8834994	0					
ANR	8835318	Argument	n		8834994	3					
ANR	8835319	Identifier	n		8834994	0					
ANR	8835320	Argument	v -> a_avail		8834994	4					
ANR	8835321	PtrMemberAccess	v -> a_avail		8834994	0					
ANR	8835322	Identifier	v		8834994	0					
ANR	8835323	Identifier	a_avail		8834994	1					
ANR	8835324	Argument	v -> c_avail		8834994	5					
ANR	8835325	PtrMemberAccess	v -> c_avail		8834994	0					
ANR	8835326	Identifier	v		8834994	0					
ANR	8835327	Identifier	c_avail		8834994	1					
ANR	8835328	Argument	& dc_val		8834994	6					
ANR	8835329	UnaryOperationExpression	& dc_val		8834994	0					
ANR	8835330	UnaryOperator	&		8834994	0					
ANR	8835331	Identifier	dc_val		8834994	1					
ANR	8835332	Argument	& dc_pred_dir		8834994	7					
ANR	8835333	UnaryOperationExpression	& dc_pred_dir		8834994	0					
ANR	8835334	UnaryOperator	&		8834994	0					
ANR	8835335	Identifier	dc_pred_dir		8834994	1					
ANR	8835336	ExpressionStatement	* dc_val = dcdiff	89:4:1635:1651	8834994	16	True				
ANR	8835337	AssignmentExpression	* dc_val = dcdiff		8834994	0		=			
ANR	8835338	UnaryOperationExpression	* dc_val		8834994	0					
ANR	8835339	UnaryOperator	*		8834994	0					
ANR	8835340	Identifier	dc_val		8834994	1					
ANR	8835341	Identifier	dcdiff		8834994	1					
ANR	8835342	IfStatement	if ( n < 4 )		8834994	17					
ANR	8835343	Condition	n < 4	95:8:1725:1729	8834994	0	True				
ANR	8835344	RelationalExpression	n < 4		8834994	0		<			
ANR	8835345	Identifier	n		8834994	0					
ANR	8835346	PrimaryExpression	4		8834994	1					
ANR	8835347	CompoundStatement		91:15:1582:1582	8834994	1					
ANR	8835348	ExpressionStatement	block [ 0 ] = dcdiff * s -> y_dc_scale	97:8:1743:1776	8834994	0	True				
ANR	8835349	AssignmentExpression	block [ 0 ] = dcdiff * s -> y_dc_scale		8834994	0		=			
ANR	8835350	ArrayIndexing	block [ 0 ]		8834994	0					
ANR	8835351	Identifier	block		8834994	0					
ANR	8835352	PrimaryExpression	0		8834994	1					
ANR	8835353	MultiplicativeExpression	dcdiff * s -> y_dc_scale		8834994	1		*			
ANR	8835354	Identifier	dcdiff		8834994	0					
ANR	8835355	PtrMemberAccess	s -> y_dc_scale		8834994	1					
ANR	8835356	Identifier	s		8834994	0					
ANR	8835357	Identifier	y_dc_scale		8834994	1					
ANR	8835358	ElseStatement	else		8834994	0					
ANR	8835359	CompoundStatement		95:11:1640:1640	8834994	0					
ANR	8835360	ExpressionStatement	block [ 0 ] = dcdiff * s -> c_dc_scale	101:8:1801:1834	8834994	0	True				
ANR	8835361	AssignmentExpression	block [ 0 ] = dcdiff * s -> c_dc_scale		8834994	0		=			
ANR	8835362	ArrayIndexing	block [ 0 ]		8834994	0					
ANR	8835363	Identifier	block		8834994	0					
ANR	8835364	PrimaryExpression	0		8834994	1					
ANR	8835365	MultiplicativeExpression	dcdiff * s -> c_dc_scale		8834994	1		*			
ANR	8835366	Identifier	dcdiff		8834994	0					
ANR	8835367	PtrMemberAccess	s -> c_dc_scale		8834994	1					
ANR	8835368	Identifier	s		8834994	0					
ANR	8835369	Identifier	c_dc_scale		8834994	1					
ANR	8835370	ExpressionStatement	i = 1	109:4:1869:1874	8834994	18	True				
ANR	8835371	AssignmentExpression	i = 1		8834994	0		=			
ANR	8835372	Identifier	i		8834994	0					
ANR	8835373	PrimaryExpression	1		8834994	1					
ANR	8835374	IfStatement	if ( ! a_avail && ! c_avail )		8834994	19					
ANR	8835375	Condition	! a_avail && ! c_avail	115:8:1927:1946	8834994	0	True				
ANR	8835376	AndExpression	! a_avail && ! c_avail		8834994	0		&&			
ANR	8835377	UnaryOperationExpression	! a_avail		8834994	0					
ANR	8835378	UnaryOperator	!		8834994	0					
ANR	8835379	Identifier	a_avail		8834994	1					
ANR	8835380	UnaryOperationExpression	! c_avail		8834994	1					
ANR	8835381	UnaryOperator	!		8834994	0					
ANR	8835382	Identifier	c_avail		8834994	1					
ANR	8835383	ExpressionStatement	use_pred = 0	117:8:1958:1970	8834994	1	True				
ANR	8835384	AssignmentExpression	use_pred = 0		8834994	0		=			
ANR	8835385	Identifier	use_pred		8834994	0					
ANR	8835386	PrimaryExpression	0		8834994	1					
ANR	8835387	ExpressionStatement	ac_val = s -> ac_val [ 0 ] [ 0 ] + s -> block_index [ n ] * 16	119:4:1977:2027	8834994	20	True				
ANR	8835388	AssignmentExpression	ac_val = s -> ac_val [ 0 ] [ 0 ] + s -> block_index [ n ] * 16		8834994	0		=			
ANR	8835389	Identifier	ac_val		8834994	0					
ANR	8835390	AdditiveExpression	s -> ac_val [ 0 ] [ 0 ] + s -> block_index [ n ] * 16		8834994	1		+			
ANR	8835391	ArrayIndexing	s -> ac_val [ 0 ] [ 0 ]		8834994	0					
ANR	8835392	ArrayIndexing	s -> ac_val [ 0 ]		8834994	0					
ANR	8835393	PtrMemberAccess	s -> ac_val		8834994	0					
ANR	8835394	Identifier	s		8834994	0					
ANR	8835395	Identifier	ac_val		8834994	1					
ANR	8835396	PrimaryExpression	0		8834994	1					
ANR	8835397	PrimaryExpression	0		8834994	1					
ANR	8835398	MultiplicativeExpression	s -> block_index [ n ] * 16		8834994	1		*			
ANR	8835399	ArrayIndexing	s -> block_index [ n ]		8834994	0					
ANR	8835400	PtrMemberAccess	s -> block_index		8834994	0					
ANR	8835401	Identifier	s		8834994	0					
ANR	8835402	Identifier	block_index		8834994	1					
ANR	8835403	Identifier	n		8834994	1					
ANR	8835404	PrimaryExpression	16		8834994	1					
ANR	8835405	ExpressionStatement	ac_val2 = ac_val	121:4:2034:2050	8834994	21	True				
ANR	8835406	AssignmentExpression	ac_val2 = ac_val		8834994	0		=			
ANR	8835407	Identifier	ac_val2		8834994	0					
ANR	8835408	Identifier	ac_val		8834994	1					
ANR	8835409	ExpressionStatement	scale = mquant * 2 + ( ( mquant == v -> pq ) ? v -> halfpq : 0 )	125:4:2059:2115	8834994	22	True				
ANR	8835410	AssignmentExpression	scale = mquant * 2 + ( ( mquant == v -> pq ) ? v -> halfpq : 0 )		8834994	0		=			
ANR	8835411	Identifier	scale		8834994	0					
ANR	8835412	AdditiveExpression	mquant * 2 + ( ( mquant == v -> pq ) ? v -> halfpq : 0 )		8834994	1		+			
ANR	8835413	MultiplicativeExpression	mquant * 2		8834994	0		*			
ANR	8835414	Identifier	mquant		8834994	0					
ANR	8835415	PrimaryExpression	2		8834994	1					
ANR	8835416	ConditionalExpression	( mquant == v -> pq ) ? v -> halfpq : 0		8834994	1					
ANR	8835417	Condition	mquant == v -> pq		8834994	0					
ANR	8835418	EqualityExpression	mquant == v -> pq		8834994	0		==			
ANR	8835419	Identifier	mquant		8834994	0					
ANR	8835420	PtrMemberAccess	v -> pq		8834994	1					
ANR	8835421	Identifier	v		8834994	0					
ANR	8835422	Identifier	pq		8834994	1					
ANR	8835423	PtrMemberAccess	v -> halfpq		8834994	1					
ANR	8835424	Identifier	v		8834994	0					
ANR	8835425	Identifier	halfpq		8834994	1					
ANR	8835426	PrimaryExpression	0		8834994	2					
ANR	8835427	IfStatement	if ( dc_pred_dir )		8834994	23					
ANR	8835428	Condition	dc_pred_dir	129:8:2128:2138	8834994	0	True				
ANR	8835429	Identifier	dc_pred_dir		8834994	0					
ANR	8835430	ExpressionStatement	ac_val -= 16	131:8:2158:2170	8834994	1	True				
ANR	8835431	AssignmentExpression	ac_val -= 16		8834994	0		-=			
ANR	8835432	Identifier	ac_val		8834994	0					
ANR	8835433	PrimaryExpression	16		8834994	1					
ANR	8835434	ElseStatement	else		8834994	0					
ANR	8835435	ExpressionStatement	ac_val -= 16 * s -> block_wrap [ n ]	135:8:2198:2229	8834994	0	True				
ANR	8835436	AssignmentExpression	ac_val -= 16 * s -> block_wrap [ n ]		8834994	0		-=			
ANR	8835437	Identifier	ac_val		8834994	0					
ANR	8835438	MultiplicativeExpression	16 * s -> block_wrap [ n ]		8834994	1		*			
ANR	8835439	PrimaryExpression	16		8834994	0					
ANR	8835440	ArrayIndexing	s -> block_wrap [ n ]		8834994	1					
ANR	8835441	PtrMemberAccess	s -> block_wrap		8834994	0					
ANR	8835442	Identifier	s		8834994	0					
ANR	8835443	Identifier	block_wrap		8834994	1					
ANR	8835444	Identifier	n		8834994	1					
ANR	8835445	ExpressionStatement	q1 = s -> current_picture . f . qscale_table [ mb_pos ]	139:4:2238:2284	8834994	24	True				
ANR	8835446	AssignmentExpression	q1 = s -> current_picture . f . qscale_table [ mb_pos ]		8834994	0		=			
ANR	8835447	Identifier	q1		8834994	0					
ANR	8835448	ArrayIndexing	s -> current_picture . f . qscale_table [ mb_pos ]		8834994	1					
ANR	8835449	MemberAccess	s -> current_picture . f . qscale_table		8834994	0					
ANR	8835450	MemberAccess	s -> current_picture . f		8834994	0					
ANR	8835451	PtrMemberAccess	s -> current_picture		8834994	0					
ANR	8835452	Identifier	s		8834994	0					
ANR	8835453	Identifier	current_picture		8834994	1					
ANR	8835454	Identifier	f		8834994	1					
ANR	8835455	Identifier	qscale_table		8834994	1					
ANR	8835456	Identifier	mb_pos		8834994	1					
ANR	8835457	IfStatement	if ( dc_pred_dir && c_avail && mb_pos )		8834994	25					
ANR	8835458	Condition	dc_pred_dir && c_avail && mb_pos	141:9:2296:2327	8834994	0	True				
ANR	8835459	AndExpression	dc_pred_dir && c_avail && mb_pos		8834994	0		&&			
ANR	8835460	Identifier	dc_pred_dir		8834994	0					
ANR	8835461	AndExpression	c_avail && mb_pos		8834994	1		&&			
ANR	8835462	Identifier	c_avail		8834994	0					
ANR	8835463	Identifier	mb_pos		8834994	1					
ANR	8835464	ExpressionStatement	q2 = s -> current_picture . f . qscale_table [ mb_pos - 1 ]	143:8:2339:2389	8834994	1	True				
ANR	8835465	AssignmentExpression	q2 = s -> current_picture . f . qscale_table [ mb_pos - 1 ]		8834994	0		=			
ANR	8835466	Identifier	q2		8834994	0					
ANR	8835467	ArrayIndexing	s -> current_picture . f . qscale_table [ mb_pos - 1 ]		8834994	1					
ANR	8835468	MemberAccess	s -> current_picture . f . qscale_table		8834994	0					
ANR	8835469	MemberAccess	s -> current_picture . f		8834994	0					
ANR	8835470	PtrMemberAccess	s -> current_picture		8834994	0					
ANR	8835471	Identifier	s		8834994	0					
ANR	8835472	Identifier	current_picture		8834994	1					
ANR	8835473	Identifier	f		8834994	1					
ANR	8835474	Identifier	qscale_table		8834994	1					
ANR	8835475	AdditiveExpression	mb_pos - 1		8834994	1		-			
ANR	8835476	Identifier	mb_pos		8834994	0					
ANR	8835477	PrimaryExpression	1		8834994	1					
ANR	8835478	IfStatement	if ( ! dc_pred_dir && a_avail && mb_pos >= s -> mb_stride )		8834994	26					
ANR	8835479	Condition	! dc_pred_dir && a_avail && mb_pos >= s -> mb_stride	145:8:2400:2448	8834994	0	True				
ANR	8835480	AndExpression	! dc_pred_dir && a_avail && mb_pos >= s -> mb_stride		8834994	0		&&			
ANR	8835481	UnaryOperationExpression	! dc_pred_dir		8834994	0					
ANR	8835482	UnaryOperator	!		8834994	0					
ANR	8835483	Identifier	dc_pred_dir		8834994	1					
ANR	8835484	AndExpression	a_avail && mb_pos >= s -> mb_stride		8834994	1		&&			
ANR	8835485	Identifier	a_avail		8834994	0					
ANR	8835486	RelationalExpression	mb_pos >= s -> mb_stride		8834994	1		>=			
ANR	8835487	Identifier	mb_pos		8834994	0					
ANR	8835488	PtrMemberAccess	s -> mb_stride		8834994	1					
ANR	8835489	Identifier	s		8834994	0					
ANR	8835490	Identifier	mb_stride		8834994	1					
ANR	8835491	ExpressionStatement	q2 = s -> current_picture . f . qscale_table [ mb_pos - s -> mb_stride ]	147:8:2460:2521	8834994	1	True				
ANR	8835492	AssignmentExpression	q2 = s -> current_picture . f . qscale_table [ mb_pos - s -> mb_stride ]		8834994	0		=			
ANR	8835493	Identifier	q2		8834994	0					
ANR	8835494	ArrayIndexing	s -> current_picture . f . qscale_table [ mb_pos - s -> mb_stride ]		8834994	1					
ANR	8835495	MemberAccess	s -> current_picture . f . qscale_table		8834994	0					
ANR	8835496	MemberAccess	s -> current_picture . f		8834994	0					
ANR	8835497	PtrMemberAccess	s -> current_picture		8834994	0					
ANR	8835498	Identifier	s		8834994	0					
ANR	8835499	Identifier	current_picture		8834994	1					
ANR	8835500	Identifier	f		8834994	1					
ANR	8835501	Identifier	qscale_table		8834994	1					
ANR	8835502	AdditiveExpression	mb_pos - s -> mb_stride		8834994	1		-			
ANR	8835503	Identifier	mb_pos		8834994	0					
ANR	8835504	PtrMemberAccess	s -> mb_stride		8834994	1					
ANR	8835505	Identifier	s		8834994	0					
ANR	8835506	Identifier	mb_stride		8834994	1					
ANR	8835507	IfStatement	if ( dc_pred_dir && n == 1 )		8834994	27					
ANR	8835508	Condition	dc_pred_dir && n == 1	149:9:2533:2553	8834994	0	True				
ANR	8835509	AndExpression	dc_pred_dir && n == 1		8834994	0		&&			
ANR	8835510	Identifier	dc_pred_dir		8834994	0					
ANR	8835511	EqualityExpression	n == 1		8834994	1		==			
ANR	8835512	Identifier	n		8834994	0					
ANR	8835513	PrimaryExpression	1		8834994	1					
ANR	8835514	ExpressionStatement	q2 = q1	151:8:2565:2572	8834994	1	True				
ANR	8835515	AssignmentExpression	q2 = q1		8834994	0		=			
ANR	8835516	Identifier	q2		8834994	0					
ANR	8835517	Identifier	q1		8834994	1					
ANR	8835518	IfStatement	if ( ! dc_pred_dir && n == 2 )		8834994	28					
ANR	8835519	Condition	! dc_pred_dir && n == 2	153:8:2583:2604	8834994	0	True				
ANR	8835520	AndExpression	! dc_pred_dir && n == 2		8834994	0		&&			
ANR	8835521	UnaryOperationExpression	! dc_pred_dir		8834994	0					
ANR	8835522	UnaryOperator	!		8834994	0					
ANR	8835523	Identifier	dc_pred_dir		8834994	1					
ANR	8835524	EqualityExpression	n == 2		8834994	1		==			
ANR	8835525	Identifier	n		8834994	0					
ANR	8835526	PrimaryExpression	2		8834994	1					
ANR	8835527	ExpressionStatement	q2 = q1	155:8:2616:2623	8834994	1	True				
ANR	8835528	AssignmentExpression	q2 = q1		8834994	0		=			
ANR	8835529	Identifier	q2		8834994	0					
ANR	8835530	Identifier	q1		8834994	1					
ANR	8835531	IfStatement	if ( n == 3 )		8834994	29					
ANR	8835532	Condition	n == 3	157:8:2634:2639	8834994	0	True				
ANR	8835533	EqualityExpression	n == 3		8834994	0		==			
ANR	8835534	Identifier	n		8834994	0					
ANR	8835535	PrimaryExpression	3		8834994	1					
ANR	8835536	ExpressionStatement	q2 = q1	159:8:2651:2658	8834994	1	True				
ANR	8835537	AssignmentExpression	q2 = q1		8834994	0		=			
ANR	8835538	Identifier	q2		8834994	0					
ANR	8835539	Identifier	q1		8834994	1					
ANR	8835540	IfStatement	if ( coded )		8834994	30					
ANR	8835541	Condition	coded	163:8:2671:2675	8834994	0	True				
ANR	8835542	Identifier	coded		8834994	0					
ANR	8835543	CompoundStatement		165:8:2609:2614	8834994	1					
ANR	8835544	IdentifierDeclStatement	"int last = 0 , skip , value ;"	165:8:2689:2714	8834994	0	True				
ANR	8835545	IdentifierDecl	last = 0		8834994	0					
ANR	8835546	IdentifierDeclType	int		8834994	0					
ANR	8835547	Identifier	last		8834994	1					
ANR	8835548	AssignmentExpression	last = 0		8834994	2		=			
ANR	8835549	Identifier	last		8834994	0					
ANR	8835550	PrimaryExpression	0		8834994	1					
ANR	8835551	IdentifierDecl	skip		8834994	1					
ANR	8835552	IdentifierDeclType	int		8834994	0					
ANR	8835553	Identifier	skip		8834994	1					
ANR	8835554	IdentifierDecl	value		8834994	2					
ANR	8835555	IdentifierDeclType	int		8834994	0					
ANR	8835556	Identifier	value		8834994	1					
ANR	8835557	IdentifierDeclStatement	const uint8_t * zz_table ;	167:8:2725:2748	8834994	1	True				
ANR	8835558	IdentifierDecl	* zz_table		8834994	0					
ANR	8835559	IdentifierDeclType	const uint8_t *		8834994	0					
ANR	8835560	Identifier	zz_table		8834994	1					
ANR	8835561	IdentifierDeclStatement	int k ;	169:8:2759:2764	8834994	2	True				
ANR	8835562	IdentifierDecl	k		8834994	0					
ANR	8835563	IdentifierDeclType	int		8834994	0					
ANR	8835564	Identifier	k		8834994	1					
ANR	8835565	IfStatement	if ( v -> s . ac_pred )		8834994	3					
ANR	8835566	Condition	v -> s . ac_pred	173:12:2781:2792	8834994	0	True				
ANR	8835567	MemberAccess	v -> s . ac_pred		8834994	0					
ANR	8835568	PtrMemberAccess	v -> s		8834994	0					
ANR	8835569	Identifier	v		8834994	0					
ANR	8835570	Identifier	s		8834994	1					
ANR	8835571	Identifier	ac_pred		8834994	1					
ANR	8835572	CompoundStatement		169:26:2645:2645	8834994	1					
ANR	8835573	IfStatement	if ( ! use_pred && v -> fcm == ILACE_FRAME )		8834994	0					
ANR	8835574	Condition	! use_pred && v -> fcm == ILACE_FRAME	175:16:2814:2847	8834994	0	True				
ANR	8835575	AndExpression	! use_pred && v -> fcm == ILACE_FRAME		8834994	0		&&			
ANR	8835576	UnaryOperationExpression	! use_pred		8834994	0					
ANR	8835577	UnaryOperator	!		8834994	0					
ANR	8835578	Identifier	use_pred		8834994	1					
ANR	8835579	EqualityExpression	v -> fcm == ILACE_FRAME		8834994	1		==			
ANR	8835580	PtrMemberAccess	v -> fcm		8834994	0					
ANR	8835581	Identifier	v		8834994	0					
ANR	8835582	Identifier	fcm		8834994	1					
ANR	8835583	Identifier	ILACE_FRAME		8834994	1					
ANR	8835584	CompoundStatement		171:52:2700:2700	8834994	1					
ANR	8835585	ExpressionStatement	zz_table = v -> zzi_8x8	177:16:2869:2890	8834994	0	True				
ANR	8835586	AssignmentExpression	zz_table = v -> zzi_8x8		8834994	0		=			
ANR	8835587	Identifier	zz_table		8834994	0					
ANR	8835588	PtrMemberAccess	v -> zzi_8x8		8834994	1					
ANR	8835589	Identifier	v		8834994	0					
ANR	8835590	Identifier	zzi_8x8		8834994	1					
ANR	8835591	ElseStatement	else		8834994	0					
ANR	8835592	CompoundStatement		175:19:2762:2762	8834994	0					
ANR	8835593	IfStatement	if ( ! dc_pred_dir )		8834994	0					
ANR	8835594	Condition	! dc_pred_dir	181:20:2935:2946	8834994	0	True				
ANR	8835595	UnaryOperationExpression	! dc_pred_dir		8834994	0					
ANR	8835596	UnaryOperator	!		8834994	0					
ANR	8835597	Identifier	dc_pred_dir		8834994	1					
ANR	8835598	ExpressionStatement	zz_table = v -> zz_8x8 [ 2 ]	183:20:2977:3000	8834994	1	True				
ANR	8835599	AssignmentExpression	zz_table = v -> zz_8x8 [ 2 ]		8834994	0		=			
ANR	8835600	Identifier	zz_table		8834994	0					
ANR	8835601	ArrayIndexing	v -> zz_8x8 [ 2 ]		8834994	1					
ANR	8835602	PtrMemberAccess	v -> zz_8x8		8834994	0					
ANR	8835603	Identifier	v		8834994	0					
ANR	8835604	Identifier	zz_8x8		8834994	1					
ANR	8835605	PrimaryExpression	2		8834994	1					
ANR	8835606	ElseStatement	else		8834994	0					
ANR	8835607	ExpressionStatement	zz_table = v -> zz_8x8 [ 3 ]	187:20:3053:3076	8834994	0	True				
ANR	8835608	AssignmentExpression	zz_table = v -> zz_8x8 [ 3 ]		8834994	0		=			
ANR	8835609	Identifier	zz_table		8834994	0					
ANR	8835610	ArrayIndexing	v -> zz_8x8 [ 3 ]		8834994	1					
ANR	8835611	PtrMemberAccess	v -> zz_8x8		8834994	0					
ANR	8835612	Identifier	v		8834994	0					
ANR	8835613	Identifier	zz_8x8		8834994	1					
ANR	8835614	PrimaryExpression	3		8834994	1					
ANR	8835615	ElseStatement	else		8834994	0					
ANR	8835616	CompoundStatement		187:15:2959:2959	8834994	0					
ANR	8835617	IfStatement	if ( v -> fcm != ILACE_FRAME )		8834994	0					
ANR	8835618	Condition	v -> fcm != ILACE_FRAME	193:16:3128:3148	8834994	0	True				
ANR	8835619	EqualityExpression	v -> fcm != ILACE_FRAME		8834994	0		!=			
ANR	8835620	PtrMemberAccess	v -> fcm		8834994	0					
ANR	8835621	Identifier	v		8834994	0					
ANR	8835622	Identifier	fcm		8834994	1					
ANR	8835623	Identifier	ILACE_FRAME		8834994	1					
ANR	8835624	ExpressionStatement	zz_table = v -> zz_8x8 [ 1 ]	195:16:3168:3191	8834994	1	True				
ANR	8835625	AssignmentExpression	zz_table = v -> zz_8x8 [ 1 ]		8834994	0		=			
ANR	8835626	Identifier	zz_table		8834994	0					
ANR	8835627	ArrayIndexing	v -> zz_8x8 [ 1 ]		8834994	1					
ANR	8835628	PtrMemberAccess	v -> zz_8x8		8834994	0					
ANR	8835629	Identifier	v		8834994	0					
ANR	8835630	Identifier	zz_8x8		8834994	1					
ANR	8835631	PrimaryExpression	1		8834994	1					
ANR	8835632	ElseStatement	else		8834994	0					
ANR	8835633	ExpressionStatement	zz_table = v -> zzi_8x8	199:16:3228:3249	8834994	0	True				
ANR	8835634	AssignmentExpression	zz_table = v -> zzi_8x8		8834994	0		=			
ANR	8835635	Identifier	zz_table		8834994	0					
ANR	8835636	PtrMemberAccess	v -> zzi_8x8		8834994	1					
ANR	8835637	Identifier	v		8834994	0					
ANR	8835638	Identifier	zzi_8x8		8834994	1					
ANR	8835639	WhileStatement	while ( ! last )		8834994	4					
ANR	8835640	Condition	! last	205:15:3280:3284	8834994	0	True				
ANR	8835641	UnaryOperationExpression	! last		8834994	0					
ANR	8835642	UnaryOperator	!		8834994	0					
ANR	8835643	Identifier	last		8834994	1					
ANR	8835644	CompoundStatement		201:22:3137:3137	8834994	1					
ANR	8835645	ExpressionStatement	"vc1_decode_ac_coeff ( v , & last , & skip , & value , codingset )"	207:12:3302:3357	8834994	0	True				
ANR	8835646	CallExpression	"vc1_decode_ac_coeff ( v , & last , & skip , & value , codingset )"		8834994	0					
ANR	8835647	Callee	vc1_decode_ac_coeff		8834994	0					
ANR	8835648	Identifier	vc1_decode_ac_coeff		8834994	0					
ANR	8835649	ArgumentList	v		8834994	1					
ANR	8835650	Argument	v		8834994	0					
ANR	8835651	Identifier	v		8834994	0					
ANR	8835652	Argument	& last		8834994	1					
ANR	8835653	UnaryOperationExpression	& last		8834994	0					
ANR	8835654	UnaryOperator	&		8834994	0					
ANR	8835655	Identifier	last		8834994	1					
ANR	8835656	Argument	& skip		8834994	2					
ANR	8835657	UnaryOperationExpression	& skip		8834994	0					
ANR	8835658	UnaryOperator	&		8834994	0					
ANR	8835659	Identifier	skip		8834994	1					
ANR	8835660	Argument	& value		8834994	3					
ANR	8835661	UnaryOperationExpression	& value		8834994	0					
ANR	8835662	UnaryOperator	&		8834994	0					
ANR	8835663	Identifier	value		8834994	1					
ANR	8835664	Argument	codingset		8834994	4					
ANR	8835665	Identifier	codingset		8834994	0					
ANR	8835666	ExpressionStatement	i += skip	209:12:3372:3381	8834994	1	True				
ANR	8835667	AssignmentExpression	i += skip		8834994	0		+=			
ANR	8835668	Identifier	i		8834994	0					
ANR	8835669	Identifier	skip		8834994	1					
ANR	8835670	IfStatement	if ( i > 63 )		8834994	2					
ANR	8835671	Condition	i > 63	211:16:3400:3405	8834994	0	True				
ANR	8835672	RelationalExpression	i > 63		8834994	0		>			
ANR	8835673	Identifier	i		8834994	0					
ANR	8835674	PrimaryExpression	63		8834994	1					
ANR	8835675	BreakStatement	break ;	213:16:3425:3430	8834994	1	True				
ANR	8835676	ExpressionStatement	block [ zz_table [ i ++ ] ] = value	215:12:3445:3473	8834994	3	True				
ANR	8835677	AssignmentExpression	block [ zz_table [ i ++ ] ] = value		8834994	0		=			
ANR	8835678	ArrayIndexing	block [ zz_table [ i ++ ] ]		8834994	0					
ANR	8835679	Identifier	block		8834994	0					
ANR	8835680	ArrayIndexing	zz_table [ i ++ ]		8834994	1					
ANR	8835681	Identifier	zz_table		8834994	0					
ANR	8835682	PostIncDecOperationExpression	i ++		8834994	1					
ANR	8835683	Identifier	i		8834994	0					
ANR	8835684	IncDec	++		8834994	1					
ANR	8835685	Identifier	value		8834994	1					
ANR	8835686	IfStatement	if ( use_pred )		8834994	5					
ANR	8835687	Condition	use_pred	223:12:3546:3553	8834994	0	True				
ANR	8835688	Identifier	use_pred		8834994	0					
ANR	8835689	CompoundStatement		219:22:3406:3406	8834994	1					
ANR	8835690	IfStatement	if ( q2 && q1 != q2 )		8834994	0					
ANR	8835691	Condition	q2 && q1 != q2	227:16:3620:3633	8834994	0	True				
ANR	8835692	AndExpression	q2 && q1 != q2		8834994	0		&&			
ANR	8835693	Identifier	q2		8834994	0					
ANR	8835694	EqualityExpression	q1 != q2		8834994	1		!=			
ANR	8835695	Identifier	q1		8834994	0					
ANR	8835696	Identifier	q2		8834994	1					
ANR	8835697	CompoundStatement		223:32:3486:3486	8834994	1					
ANR	8835698	ExpressionStatement	q1 = q1 * 2 + ( ( q1 == v -> pq ) ? v -> halfpq : 0 ) - 1	229:16:3655:3704	8834994	0	True				
ANR	8835699	AssignmentExpression	q1 = q1 * 2 + ( ( q1 == v -> pq ) ? v -> halfpq : 0 ) - 1		8834994	0		=			
ANR	8835700	Identifier	q1		8834994	0					
ANR	8835701	AdditiveExpression	q1 * 2 + ( ( q1 == v -> pq ) ? v -> halfpq : 0 ) - 1		8834994	1		+			
ANR	8835702	MultiplicativeExpression	q1 * 2		8834994	0		*			
ANR	8835703	Identifier	q1		8834994	0					
ANR	8835704	PrimaryExpression	2		8834994	1					
ANR	8835705	AdditiveExpression	( ( q1 == v -> pq ) ? v -> halfpq : 0 ) - 1		8834994	1		-			
ANR	8835706	ConditionalExpression	( q1 == v -> pq ) ? v -> halfpq : 0		8834994	0					
ANR	8835707	Condition	q1 == v -> pq		8834994	0					
ANR	8835708	EqualityExpression	q1 == v -> pq		8834994	0		==			
ANR	8835709	Identifier	q1		8834994	0					
ANR	8835710	PtrMemberAccess	v -> pq		8834994	1					
ANR	8835711	Identifier	v		8834994	0					
ANR	8835712	Identifier	pq		8834994	1					
ANR	8835713	PtrMemberAccess	v -> halfpq		8834994	1					
ANR	8835714	Identifier	v		8834994	0					
ANR	8835715	Identifier	halfpq		8834994	1					
ANR	8835716	PrimaryExpression	0		8834994	2					
ANR	8835717	PrimaryExpression	1		8834994	1					
ANR	8835718	ExpressionStatement	q2 = q2 * 2 + ( ( q2 == v -> pq ) ? v -> halfpq : 0 ) - 1	231:16:3723:3772	8834994	1	True				
ANR	8835719	AssignmentExpression	q2 = q2 * 2 + ( ( q2 == v -> pq ) ? v -> halfpq : 0 ) - 1		8834994	0		=			
ANR	8835720	Identifier	q2		8834994	0					
ANR	8835721	AdditiveExpression	q2 * 2 + ( ( q2 == v -> pq ) ? v -> halfpq : 0 ) - 1		8834994	1		+			
ANR	8835722	MultiplicativeExpression	q2 * 2		8834994	0		*			
ANR	8835723	Identifier	q2		8834994	0					
ANR	8835724	PrimaryExpression	2		8834994	1					
ANR	8835725	AdditiveExpression	( ( q2 == v -> pq ) ? v -> halfpq : 0 ) - 1		8834994	1		-			
ANR	8835726	ConditionalExpression	( q2 == v -> pq ) ? v -> halfpq : 0		8834994	0					
ANR	8835727	Condition	q2 == v -> pq		8834994	0					
ANR	8835728	EqualityExpression	q2 == v -> pq		8834994	0		==			
ANR	8835729	Identifier	q2		8834994	0					
ANR	8835730	PtrMemberAccess	v -> pq		8834994	1					
ANR	8835731	Identifier	v		8834994	0					
ANR	8835732	Identifier	pq		8834994	1					
ANR	8835733	PtrMemberAccess	v -> halfpq		8834994	1					
ANR	8835734	Identifier	v		8834994	0					
ANR	8835735	Identifier	halfpq		8834994	1					
ANR	8835736	PrimaryExpression	0		8834994	2					
ANR	8835737	PrimaryExpression	1		8834994	1					
ANR	8835738	IfStatement	if ( q1 < 1 )		8834994	2					
ANR	8835739	Condition	q1 < 1	235:20:3797:3802	8834994	0	True				
ANR	8835740	RelationalExpression	q1 < 1		8834994	0		<			
ANR	8835741	Identifier	q1		8834994	0					
ANR	8835742	PrimaryExpression	1		8834994	1					
ANR	8835743	ReturnStatement	return AVERROR_INVALIDDATA ;	237:20:3826:3852	8834994	1	True				
ANR	8835744	Identifier	AVERROR_INVALIDDATA		8834994	0					
ANR	8835745	IfStatement	if ( dc_pred_dir )		8834994	3					
ANR	8835746	Condition	dc_pred_dir	239:20:3875:3885	8834994	0	True				
ANR	8835747	Identifier	dc_pred_dir		8834994	0					
ANR	8835748	CompoundStatement		235:33:3738:3738	8834994	1					
ANR	8835749	ForStatement	for ( k = 1 ; k < 8 ; k ++ )		8834994	0					
ANR	8835750	ForInit	k = 1 ;	241:25:3924:3929	8834994	0	True				
ANR	8835751	AssignmentExpression	k = 1		8834994	0		=			
ANR	8835752	Identifier	k		8834994	0					
ANR	8835753	PrimaryExpression	1		8834994	1					
ANR	8835754	Condition	k < 8	241:32:3931:3935	8834994	1	True				
ANR	8835755	RelationalExpression	k < 8		8834994	0		<			
ANR	8835756	Identifier	k		8834994	0					
ANR	8835757	PrimaryExpression	8		8834994	1					
ANR	8835758	PostIncDecOperationExpression	k ++	241:39:3938:3940	8834994	2	True				
ANR	8835759	Identifier	k		8834994	0					
ANR	8835760	IncDec	++		8834994	1					
ANR	8835761	ExpressionStatement	block [ k << v -> left_blk_sh ] += ( ac_val [ k ] * q2 * ff_vc1_dqscale [ q1 - 1 ] + 0x20000 ) >> 18	243:24:3968:4055	8834994	3	True				
ANR	8835762	AssignmentExpression	block [ k << v -> left_blk_sh ] += ( ac_val [ k ] * q2 * ff_vc1_dqscale [ q1 - 1 ] + 0x20000 ) >> 18		8834994	0		+=			
ANR	8835763	ArrayIndexing	block [ k << v -> left_blk_sh ]		8834994	0					
ANR	8835764	Identifier	block		8834994	0					
ANR	8835765	ShiftExpression	k << v -> left_blk_sh		8834994	1		<<			
ANR	8835766	Identifier	k		8834994	0					
ANR	8835767	PtrMemberAccess	v -> left_blk_sh		8834994	1					
ANR	8835768	Identifier	v		8834994	0					
ANR	8835769	Identifier	left_blk_sh		8834994	1					
ANR	8835770	ShiftExpression	( ac_val [ k ] * q2 * ff_vc1_dqscale [ q1 - 1 ] + 0x20000 ) >> 18		8834994	1		>>			
ANR	8835771	AdditiveExpression	ac_val [ k ] * q2 * ff_vc1_dqscale [ q1 - 1 ] + 0x20000		8834994	0		+			
ANR	8835772	MultiplicativeExpression	ac_val [ k ] * q2 * ff_vc1_dqscale [ q1 - 1 ]		8834994	0		*			
ANR	8835773	ArrayIndexing	ac_val [ k ]		8834994	0					
ANR	8835774	Identifier	ac_val		8834994	0					
ANR	8835775	Identifier	k		8834994	1					
ANR	8835776	MultiplicativeExpression	q2 * ff_vc1_dqscale [ q1 - 1 ]		8834994	1		*			
ANR	8835777	Identifier	q2		8834994	0					
ANR	8835778	ArrayIndexing	ff_vc1_dqscale [ q1 - 1 ]		8834994	1					
ANR	8835779	Identifier	ff_vc1_dqscale		8834994	0					
ANR	8835780	AdditiveExpression	q1 - 1		8834994	1		-			
ANR	8835781	Identifier	q1		8834994	0					
ANR	8835782	PrimaryExpression	1		8834994	1					
ANR	8835783	PrimaryExpression	0x20000		8834994	1					
ANR	8835784	PrimaryExpression	18		8834994	1					
ANR	8835785	ElseStatement	else		8834994	0					
ANR	8835786	CompoundStatement		241:23:3931:3931	8834994	0					
ANR	8835787	ForStatement	for ( k = 1 ; k < 8 ; k ++ )		8834994	0					
ANR	8835788	ForInit	k = 1 ;	247:25:4116:4121	8834994	0	True				
ANR	8835789	AssignmentExpression	k = 1		8834994	0		=			
ANR	8835790	Identifier	k		8834994	0					
ANR	8835791	PrimaryExpression	1		8834994	1					
ANR	8835792	Condition	k < 8	247:32:4123:4127	8834994	1	True				
ANR	8835793	RelationalExpression	k < 8		8834994	0		<			
ANR	8835794	Identifier	k		8834994	0					
ANR	8835795	PrimaryExpression	8		8834994	1					
ANR	8835796	PostIncDecOperationExpression	k ++	247:39:4130:4132	8834994	2	True				
ANR	8835797	Identifier	k		8834994	0					
ANR	8835798	IncDec	++		8834994	1					
ANR	8835799	ExpressionStatement	block [ k << v -> top_blk_sh ] += ( ac_val [ k + 8 ] * q2 * ff_vc1_dqscale [ q1 - 1 ] + 0x20000 ) >> 18	249:24:4160:4250	8834994	3	True				
ANR	8835800	AssignmentExpression	block [ k << v -> top_blk_sh ] += ( ac_val [ k + 8 ] * q2 * ff_vc1_dqscale [ q1 - 1 ] + 0x20000 ) >> 18		8834994	0		+=			
ANR	8835801	ArrayIndexing	block [ k << v -> top_blk_sh ]		8834994	0					
ANR	8835802	Identifier	block		8834994	0					
ANR	8835803	ShiftExpression	k << v -> top_blk_sh		8834994	1		<<			
ANR	8835804	Identifier	k		8834994	0					
ANR	8835805	PtrMemberAccess	v -> top_blk_sh		8834994	1					
ANR	8835806	Identifier	v		8834994	0					
ANR	8835807	Identifier	top_blk_sh		8834994	1					
ANR	8835808	ShiftExpression	( ac_val [ k + 8 ] * q2 * ff_vc1_dqscale [ q1 - 1 ] + 0x20000 ) >> 18		8834994	1		>>			
ANR	8835809	AdditiveExpression	ac_val [ k + 8 ] * q2 * ff_vc1_dqscale [ q1 - 1 ] + 0x20000		8834994	0		+			
ANR	8835810	MultiplicativeExpression	ac_val [ k + 8 ] * q2 * ff_vc1_dqscale [ q1 - 1 ]		8834994	0		*			
ANR	8835811	ArrayIndexing	ac_val [ k + 8 ]		8834994	0					
ANR	8835812	Identifier	ac_val		8834994	0					
ANR	8835813	AdditiveExpression	k + 8		8834994	1		+			
ANR	8835814	Identifier	k		8834994	0					
ANR	8835815	PrimaryExpression	8		8834994	1					
ANR	8835816	MultiplicativeExpression	q2 * ff_vc1_dqscale [ q1 - 1 ]		8834994	1		*			
ANR	8835817	Identifier	q2		8834994	0					
ANR	8835818	ArrayIndexing	ff_vc1_dqscale [ q1 - 1 ]		8834994	1					
ANR	8835819	Identifier	ff_vc1_dqscale		8834994	0					
ANR	8835820	AdditiveExpression	q1 - 1		8834994	1		-			
ANR	8835821	Identifier	q1		8834994	0					
ANR	8835822	PrimaryExpression	1		8834994	1					
ANR	8835823	PrimaryExpression	0x20000		8834994	1					
ANR	8835824	PrimaryExpression	18		8834994	1					
ANR	8835825	ElseStatement	else		8834994	0					
ANR	8835826	CompoundStatement		249:19:4141:4141	8834994	0					
ANR	8835827	IfStatement	if ( dc_pred_dir )		8834994	0					
ANR	8835828	Condition	dc_pred_dir	255:20:4314:4324	8834994	0	True				
ANR	8835829	Identifier	dc_pred_dir		8834994	0					
ANR	8835830	CompoundStatement		251:33:4177:4177	8834994	1					
ANR	8835831	ForStatement	for ( k = 1 ; k < 8 ; k ++ )		8834994	0					
ANR	8835832	ForInit	k = 1 ;	257:25:4362:4367	8834994	0	True				
ANR	8835833	AssignmentExpression	k = 1		8834994	0		=			
ANR	8835834	Identifier	k		8834994	0					
ANR	8835835	PrimaryExpression	1		8834994	1					
ANR	8835836	Condition	k < 8	257:32:4369:4373	8834994	1	True				
ANR	8835837	RelationalExpression	k < 8		8834994	0		<			
ANR	8835838	Identifier	k		8834994	0					
ANR	8835839	PrimaryExpression	8		8834994	1					
ANR	8835840	PostIncDecOperationExpression	k ++	257:39:4376:4378	8834994	2	True				
ANR	8835841	Identifier	k		8834994	0					
ANR	8835842	IncDec	++		8834994	1					
ANR	8835843	ExpressionStatement	block [ k << v -> left_blk_sh ] += ac_val [ k ]	259:24:4406:4445	8834994	3	True				
ANR	8835844	AssignmentExpression	block [ k << v -> left_blk_sh ] += ac_val [ k ]		8834994	0		+=			
ANR	8835845	ArrayIndexing	block [ k << v -> left_blk_sh ]		8834994	0					
ANR	8835846	Identifier	block		8834994	0					
ANR	8835847	ShiftExpression	k << v -> left_blk_sh		8834994	1		<<			
ANR	8835848	Identifier	k		8834994	0					
ANR	8835849	PtrMemberAccess	v -> left_blk_sh		8834994	1					
ANR	8835850	Identifier	v		8834994	0					
ANR	8835851	Identifier	left_blk_sh		8834994	1					
ANR	8835852	ArrayIndexing	ac_val [ k ]		8834994	1					
ANR	8835853	Identifier	ac_val		8834994	0					
ANR	8835854	Identifier	k		8834994	1					
ANR	8835855	ElseStatement	else		8834994	0					
ANR	8835856	CompoundStatement		257:23:4321:4321	8834994	0					
ANR	8835857	ForStatement	for ( k = 1 ; k < 8 ; k ++ )		8834994	0					
ANR	8835858	ForInit	k = 1 ;	263:25:4505:4510	8834994	0	True				
ANR	8835859	AssignmentExpression	k = 1		8834994	0		=			
ANR	8835860	Identifier	k		8834994	0					
ANR	8835861	PrimaryExpression	1		8834994	1					
ANR	8835862	Condition	k < 8	263:32:4512:4516	8834994	1	True				
ANR	8835863	RelationalExpression	k < 8		8834994	0		<			
ANR	8835864	Identifier	k		8834994	0					
ANR	8835865	PrimaryExpression	8		8834994	1					
ANR	8835866	PostIncDecOperationExpression	k ++	263:39:4519:4521	8834994	2	True				
ANR	8835867	Identifier	k		8834994	0					
ANR	8835868	IncDec	++		8834994	1					
ANR	8835869	ExpressionStatement	block [ k << v -> top_blk_sh ] += ac_val [ k + 8 ]	265:24:4549:4591	8834994	3	True				
ANR	8835870	AssignmentExpression	block [ k << v -> top_blk_sh ] += ac_val [ k + 8 ]		8834994	0		+=			
ANR	8835871	ArrayIndexing	block [ k << v -> top_blk_sh ]		8834994	0					
ANR	8835872	Identifier	block		8834994	0					
ANR	8835873	ShiftExpression	k << v -> top_blk_sh		8834994	1		<<			
ANR	8835874	Identifier	k		8834994	0					
ANR	8835875	PtrMemberAccess	v -> top_blk_sh		8834994	1					
ANR	8835876	Identifier	v		8834994	0					
ANR	8835877	Identifier	top_blk_sh		8834994	1					
ANR	8835878	ArrayIndexing	ac_val [ k + 8 ]		8834994	1					
ANR	8835879	Identifier	ac_val		8834994	0					
ANR	8835880	AdditiveExpression	k + 8		8834994	1		+			
ANR	8835881	Identifier	k		8834994	0					
ANR	8835882	PrimaryExpression	8		8834994	1					
ANR	8835883	ForStatement	for ( k = 1 ; k < 8 ; k ++ )		8834994	6					
ANR	8835884	ForInit	k = 1 ;	275:13:4705:4710	8834994	0	True				
ANR	8835885	AssignmentExpression	k = 1		8834994	0		=			
ANR	8835886	Identifier	k		8834994	0					
ANR	8835887	PrimaryExpression	1		8834994	1					
ANR	8835888	Condition	k < 8	275:20:4712:4716	8834994	1	True				
ANR	8835889	RelationalExpression	k < 8		8834994	0		<			
ANR	8835890	Identifier	k		8834994	0					
ANR	8835891	PrimaryExpression	8		8834994	1					
ANR	8835892	PostIncDecOperationExpression	k ++	275:27:4719:4721	8834994	2	True				
ANR	8835893	Identifier	k		8834994	0					
ANR	8835894	IncDec	++		8834994	1					
ANR	8835895	CompoundStatement		271:32:4574:4574	8834994	3					
ANR	8835896	ExpressionStatement	ac_val2 [ k ] = block [ k << v -> left_blk_sh ]	277:12:4739:4782	8834994	0	True				
ANR	8835897	AssignmentExpression	ac_val2 [ k ] = block [ k << v -> left_blk_sh ]		8834994	0		=			
ANR	8835898	ArrayIndexing	ac_val2 [ k ]		8834994	0					
ANR	8835899	Identifier	ac_val2		8834994	0					
ANR	8835900	Identifier	k		8834994	1					
ANR	8835901	ArrayIndexing	block [ k << v -> left_blk_sh ]		8834994	1					
ANR	8835902	Identifier	block		8834994	0					
ANR	8835903	ShiftExpression	k << v -> left_blk_sh		8834994	1		<<			
ANR	8835904	Identifier	k		8834994	0					
ANR	8835905	PtrMemberAccess	v -> left_blk_sh		8834994	1					
ANR	8835906	Identifier	v		8834994	0					
ANR	8835907	Identifier	left_blk_sh		8834994	1					
ANR	8835908	ExpressionStatement	ac_val2 [ k + 8 ] = block [ k << v -> top_blk_sh ]	279:12:4797:4839	8834994	1	True				
ANR	8835909	AssignmentExpression	ac_val2 [ k + 8 ] = block [ k << v -> top_blk_sh ]		8834994	0		=			
ANR	8835910	ArrayIndexing	ac_val2 [ k + 8 ]		8834994	0					
ANR	8835911	Identifier	ac_val2		8834994	0					
ANR	8835912	AdditiveExpression	k + 8		8834994	1		+			
ANR	8835913	Identifier	k		8834994	0					
ANR	8835914	PrimaryExpression	8		8834994	1					
ANR	8835915	ArrayIndexing	block [ k << v -> top_blk_sh ]		8834994	1					
ANR	8835916	Identifier	block		8834994	0					
ANR	8835917	ShiftExpression	k << v -> top_blk_sh		8834994	1		<<			
ANR	8835918	Identifier	k		8834994	0					
ANR	8835919	PtrMemberAccess	v -> top_blk_sh		8834994	1					
ANR	8835920	Identifier	v		8834994	0					
ANR	8835921	Identifier	top_blk_sh		8834994	1					
ANR	8835922	ForStatement	for ( k = 1 ; k < 64 ; k ++ )		8834994	7					
ANR	8835923	ForInit	k = 1 ;	287:13:4899:4904	8834994	0	True				
ANR	8835924	AssignmentExpression	k = 1		8834994	0		=			
ANR	8835925	Identifier	k		8834994	0					
ANR	8835926	PrimaryExpression	1		8834994	1					
ANR	8835927	Condition	k < 64	287:20:4906:4911	8834994	1	True				
ANR	8835928	RelationalExpression	k < 64		8834994	0		<			
ANR	8835929	Identifier	k		8834994	0					
ANR	8835930	PrimaryExpression	64		8834994	1					
ANR	8835931	PostIncDecOperationExpression	k ++	287:28:4914:4916	8834994	2	True				
ANR	8835932	Identifier	k		8834994	0					
ANR	8835933	IncDec	++		8834994	1					
ANR	8835934	IfStatement	if ( block [ k ] )		8834994	3					
ANR	8835935	Condition	block [ k ]	289:16:4936:4943	8834994	0	True				
ANR	8835936	ArrayIndexing	block [ k ]		8834994	0					
ANR	8835937	Identifier	block		8834994	0					
ANR	8835938	Identifier	k		8834994	1					
ANR	8835939	CompoundStatement		285:26:4796:4796	8834994	1					
ANR	8835940	ExpressionStatement	block [ k ] *= scale	291:16:4965:4982	8834994	0	True				
ANR	8835941	AssignmentExpression	block [ k ] *= scale		8834994	0		*=			
ANR	8835942	ArrayIndexing	block [ k ]		8834994	0					
ANR	8835943	Identifier	block		8834994	0					
ANR	8835944	Identifier	k		8834994	1					
ANR	8835945	Identifier	scale		8834994	1					
ANR	8835946	IfStatement	if ( ! v -> pquantizer )		8834994	1					
ANR	8835947	Condition	! v -> pquantizer	293:20:5005:5018	8834994	0	True				
ANR	8835948	UnaryOperationExpression	! v -> pquantizer		8834994	0					
ANR	8835949	UnaryOperator	!		8834994	0					
ANR	8835950	PtrMemberAccess	v -> pquantizer		8834994	1					
ANR	8835951	Identifier	v		8834994	0					
ANR	8835952	Identifier	pquantizer		8834994	1					
ANR	8835953	ExpressionStatement	block [ k ] += ( block [ k ] < 0 ) ? - mquant : mquant	295:20:5042:5087	8834994	1	True				
ANR	8835954	AssignmentExpression	block [ k ] += ( block [ k ] < 0 ) ? - mquant : mquant		8834994	0		+=			
ANR	8835955	ArrayIndexing	block [ k ]		8834994	0					
ANR	8835956	Identifier	block		8834994	0					
ANR	8835957	Identifier	k		8834994	1					
ANR	8835958	ConditionalExpression	( block [ k ] < 0 ) ? - mquant : mquant		8834994	1					
ANR	8835959	Condition	block [ k ] < 0		8834994	0					
ANR	8835960	RelationalExpression	block [ k ] < 0		8834994	0		<			
ANR	8835961	ArrayIndexing	block [ k ]		8834994	0					
ANR	8835962	Identifier	block		8834994	0					
ANR	8835963	Identifier	k		8834994	1					
ANR	8835964	PrimaryExpression	0		8834994	1					
ANR	8835965	UnaryOperationExpression	- mquant		8834994	1					
ANR	8835966	UnaryOperator	-		8834994	0					
ANR	8835967	Identifier	mquant		8834994	1					
ANR	8835968	Identifier	mquant		8834994	2					
ANR	8835969	IfStatement	if ( use_pred )		8834994	8					
ANR	8835970	Condition	use_pred	301:12:5119:5126	8834994	0	True				
ANR	8835971	Identifier	use_pred		8834994	0					
ANR	8835972	ExpressionStatement	i = 63	301:22:5129:5135	8834994	1	True				
ANR	8835973	AssignmentExpression	i = 63		8834994	0		=			
ANR	8835974	Identifier	i		8834994	0					
ANR	8835975	PrimaryExpression	63		8834994	1					
ANR	8835976	ElseStatement	else		8834994	0					
ANR	8835977	CompoundStatement		301:8:5026:5031	8834994	0					
ANR	8835978	IdentifierDeclStatement	int k ;	305:8:5176:5181	8834994	0	True				
ANR	8835979	IdentifierDecl	k		8834994	0					
ANR	8835980	IdentifierDeclType	int		8834994	0					
ANR	8835981	Identifier	k		8834994	1					
ANR	8835982	ExpressionStatement	"memset ( ac_val2 , 0 , 16 * 2 )"	309:8:5194:5220	8834994	1	True				
ANR	8835983	CallExpression	"memset ( ac_val2 , 0 , 16 * 2 )"		8834994	0					
ANR	8835984	Callee	memset		8834994	0					
ANR	8835985	Identifier	memset		8834994	0					
ANR	8835986	ArgumentList	ac_val2		8834994	1					
ANR	8835987	Argument	ac_val2		8834994	0					
ANR	8835988	Identifier	ac_val2		8834994	0					
ANR	8835989	Argument	0		8834994	1					
ANR	8835990	PrimaryExpression	0		8834994	0					
ANR	8835991	Argument	16 * 2		8834994	2					
ANR	8835992	MultiplicativeExpression	16 * 2		8834994	0		*			
ANR	8835993	PrimaryExpression	16		8834994	0					
ANR	8835994	PrimaryExpression	2		8834994	1					
ANR	8835995	IfStatement	if ( dc_pred_dir )		8834994	2					
ANR	8835996	Condition	dc_pred_dir	311:12:5235:5245	8834994	0	True				
ANR	8835997	Identifier	dc_pred_dir		8834994	0					
ANR	8835998	CompoundStatement		307:25:5098:5098	8834994	1					
ANR	8835999	IfStatement	if ( use_pred )		8834994	0					
ANR	8836000	Condition	use_pred	313:16:5275:5282	8834994	0	True				
ANR	8836001	Identifier	use_pred		8834994	0					
ANR	8836002	CompoundStatement		309:26:5135:5135	8834994	1					
ANR	8836003	ExpressionStatement	"memcpy ( ac_val2 , ac_val , 8 * 2 )"	315:16:5304:5334	8834994	0	True				
ANR	8836004	CallExpression	"memcpy ( ac_val2 , ac_val , 8 * 2 )"		8834994	0					
ANR	8836005	Callee	memcpy		8834994	0					
ANR	8836006	Identifier	memcpy		8834994	0					
ANR	8836007	ArgumentList	ac_val2		8834994	1					
ANR	8836008	Argument	ac_val2		8834994	0					
ANR	8836009	Identifier	ac_val2		8834994	0					
ANR	8836010	Argument	ac_val		8834994	1					
ANR	8836011	Identifier	ac_val		8834994	0					
ANR	8836012	Argument	8 * 2		8834994	2					
ANR	8836013	MultiplicativeExpression	8 * 2		8834994	0		*			
ANR	8836014	PrimaryExpression	8		8834994	0					
ANR	8836015	PrimaryExpression	2		8834994	1					
ANR	8836016	IfStatement	if ( q2 && q1 != q2 )		8834994	1					
ANR	8836017	Condition	q2 && q1 != q2	317:20:5357:5370	8834994	0	True				
ANR	8836018	AndExpression	q2 && q1 != q2		8834994	0		&&			
ANR	8836019	Identifier	q2		8834994	0					
ANR	8836020	EqualityExpression	q1 != q2		8834994	1		!=			
ANR	8836021	Identifier	q1		8834994	0					
ANR	8836022	Identifier	q2		8834994	1					
ANR	8836023	CompoundStatement		313:36:5223:5223	8834994	1					
ANR	8836024	ExpressionStatement	q1 = q1 * 2 + ( ( q1 == v -> pq ) ? v -> halfpq : 0 ) - 1	319:20:5396:5445	8834994	0	True				
ANR	8836025	AssignmentExpression	q1 = q1 * 2 + ( ( q1 == v -> pq ) ? v -> halfpq : 0 ) - 1		8834994	0		=			
ANR	8836026	Identifier	q1		8834994	0					
ANR	8836027	AdditiveExpression	q1 * 2 + ( ( q1 == v -> pq ) ? v -> halfpq : 0 ) - 1		8834994	1		+			
ANR	8836028	MultiplicativeExpression	q1 * 2		8834994	0		*			
ANR	8836029	Identifier	q1		8834994	0					
ANR	8836030	PrimaryExpression	2		8834994	1					
ANR	8836031	AdditiveExpression	( ( q1 == v -> pq ) ? v -> halfpq : 0 ) - 1		8834994	1		-			
ANR	8836032	ConditionalExpression	( q1 == v -> pq ) ? v -> halfpq : 0		8834994	0					
ANR	8836033	Condition	q1 == v -> pq		8834994	0					
ANR	8836034	EqualityExpression	q1 == v -> pq		8834994	0		==			
ANR	8836035	Identifier	q1		8834994	0					
ANR	8836036	PtrMemberAccess	v -> pq		8834994	1					
ANR	8836037	Identifier	v		8834994	0					
ANR	8836038	Identifier	pq		8834994	1					
ANR	8836039	PtrMemberAccess	v -> halfpq		8834994	1					
ANR	8836040	Identifier	v		8834994	0					
ANR	8836041	Identifier	halfpq		8834994	1					
ANR	8836042	PrimaryExpression	0		8834994	2					
ANR	8836043	PrimaryExpression	1		8834994	1					
ANR	8836044	ExpressionStatement	q2 = q2 * 2 + ( ( q2 == v -> pq ) ? v -> halfpq : 0 ) - 1	321:20:5468:5517	8834994	1	True				
ANR	8836045	AssignmentExpression	q2 = q2 * 2 + ( ( q2 == v -> pq ) ? v -> halfpq : 0 ) - 1		8834994	0		=			
ANR	8836046	Identifier	q2		8834994	0					
ANR	8836047	AdditiveExpression	q2 * 2 + ( ( q2 == v -> pq ) ? v -> halfpq : 0 ) - 1		8834994	1		+			
ANR	8836048	MultiplicativeExpression	q2 * 2		8834994	0		*			
ANR	8836049	Identifier	q2		8834994	0					
ANR	8836050	PrimaryExpression	2		8834994	1					
ANR	8836051	AdditiveExpression	( ( q2 == v -> pq ) ? v -> halfpq : 0 ) - 1		8834994	1		-			
ANR	8836052	ConditionalExpression	( q2 == v -> pq ) ? v -> halfpq : 0		8834994	0					
ANR	8836053	Condition	q2 == v -> pq		8834994	0					
ANR	8836054	EqualityExpression	q2 == v -> pq		8834994	0		==			
ANR	8836055	Identifier	q2		8834994	0					
ANR	8836056	PtrMemberAccess	v -> pq		8834994	1					
ANR	8836057	Identifier	v		8834994	0					
ANR	8836058	Identifier	pq		8834994	1					
ANR	8836059	PtrMemberAccess	v -> halfpq		8834994	1					
ANR	8836060	Identifier	v		8834994	0					
ANR	8836061	Identifier	halfpq		8834994	1					
ANR	8836062	PrimaryExpression	0		8834994	2					
ANR	8836063	PrimaryExpression	1		8834994	1					
ANR	8836064	IfStatement	if ( q1 < 1 )		8834994	2					
ANR	8836065	Condition	q1 < 1	323:24:5544:5549	8834994	0	True				
ANR	8836066	RelationalExpression	q1 < 1		8834994	0		<			
ANR	8836067	Identifier	q1		8834994	0					
ANR	8836068	PrimaryExpression	1		8834994	1					
ANR	8836069	ReturnStatement	return AVERROR_INVALIDDATA ;	325:24:5577:5603	8834994	1	True				
ANR	8836070	Identifier	AVERROR_INVALIDDATA		8834994	0					
ANR	8836071	ForStatement	for ( k = 1 ; k < 8 ; k ++ )		8834994	3					
ANR	8836072	ForInit	k = 1 ;	327:25:5631:5636	8834994	0	True				
ANR	8836073	AssignmentExpression	k = 1		8834994	0		=			
ANR	8836074	Identifier	k		8834994	0					
ANR	8836075	PrimaryExpression	1		8834994	1					
ANR	8836076	Condition	k < 8	327:32:5638:5642	8834994	1	True				
ANR	8836077	RelationalExpression	k < 8		8834994	0		<			
ANR	8836078	Identifier	k		8834994	0					
ANR	8836079	PrimaryExpression	8		8834994	1					
ANR	8836080	PostIncDecOperationExpression	k ++	327:39:5645:5647	8834994	2	True				
ANR	8836081	Identifier	k		8834994	0					
ANR	8836082	IncDec	++		8834994	1					
ANR	8836083	ExpressionStatement	ac_val2 [ k ] = ( ac_val2 [ k ] * q2 * ff_vc1_dqscale [ q1 - 1 ] + 0x20000 ) >> 18	329:24:5675:5746	8834994	3	True				
ANR	8836084	AssignmentExpression	ac_val2 [ k ] = ( ac_val2 [ k ] * q2 * ff_vc1_dqscale [ q1 - 1 ] + 0x20000 ) >> 18		8834994	0		=			
ANR	8836085	ArrayIndexing	ac_val2 [ k ]		8834994	0					
ANR	8836086	Identifier	ac_val2		8834994	0					
ANR	8836087	Identifier	k		8834994	1					
ANR	8836088	ShiftExpression	( ac_val2 [ k ] * q2 * ff_vc1_dqscale [ q1 - 1 ] + 0x20000 ) >> 18		8834994	1		>>			
ANR	8836089	AdditiveExpression	ac_val2 [ k ] * q2 * ff_vc1_dqscale [ q1 - 1 ] + 0x20000		8834994	0		+			
ANR	8836090	MultiplicativeExpression	ac_val2 [ k ] * q2 * ff_vc1_dqscale [ q1 - 1 ]		8834994	0		*			
ANR	8836091	ArrayIndexing	ac_val2 [ k ]		8834994	0					
ANR	8836092	Identifier	ac_val2		8834994	0					
ANR	8836093	Identifier	k		8834994	1					
ANR	8836094	MultiplicativeExpression	q2 * ff_vc1_dqscale [ q1 - 1 ]		8834994	1		*			
ANR	8836095	Identifier	q2		8834994	0					
ANR	8836096	ArrayIndexing	ff_vc1_dqscale [ q1 - 1 ]		8834994	1					
ANR	8836097	Identifier	ff_vc1_dqscale		8834994	0					
ANR	8836098	AdditiveExpression	q1 - 1		8834994	1		-			
ANR	8836099	Identifier	q1		8834994	0					
ANR	8836100	PrimaryExpression	1		8834994	1					
ANR	8836101	PrimaryExpression	0x20000		8834994	1					
ANR	8836102	PrimaryExpression	18		8834994	1					
ANR	8836103	ElseStatement	else		8834994	0					
ANR	8836104	CompoundStatement		331:15:5648:5648	8834994	0					
ANR	8836105	IfStatement	if ( use_pred )		8834994	0					
ANR	8836106	Condition	use_pred	337:16:5824:5831	8834994	0	True				
ANR	8836107	Identifier	use_pred		8834994	0					
ANR	8836108	CompoundStatement		333:26:5684:5684	8834994	1					
ANR	8836109	ExpressionStatement	"memcpy ( ac_val2 + 8 , ac_val + 8 , 8 * 2 )"	339:16:5853:5891	8834994	0	True				
ANR	8836110	CallExpression	"memcpy ( ac_val2 + 8 , ac_val + 8 , 8 * 2 )"		8834994	0					
ANR	8836111	Callee	memcpy		8834994	0					
ANR	8836112	Identifier	memcpy		8834994	0					
ANR	8836113	ArgumentList	ac_val2 + 8		8834994	1					
ANR	8836114	Argument	ac_val2 + 8		8834994	0					
ANR	8836115	AdditiveExpression	ac_val2 + 8		8834994	0		+			
ANR	8836116	Identifier	ac_val2		8834994	0					
ANR	8836117	PrimaryExpression	8		8834994	1					
ANR	8836118	Argument	ac_val + 8		8834994	1					
ANR	8836119	AdditiveExpression	ac_val + 8		8834994	0		+			
ANR	8836120	Identifier	ac_val		8834994	0					
ANR	8836121	PrimaryExpression	8		8834994	1					
ANR	8836122	Argument	8 * 2		8834994	2					
ANR	8836123	MultiplicativeExpression	8 * 2		8834994	0		*			
ANR	8836124	PrimaryExpression	8		8834994	0					
ANR	8836125	PrimaryExpression	2		8834994	1					
ANR	8836126	IfStatement	if ( q2 && q1 != q2 )		8834994	1					
ANR	8836127	Condition	q2 && q1 != q2	341:20:5914:5927	8834994	0	True				
ANR	8836128	AndExpression	q2 && q1 != q2		8834994	0		&&			
ANR	8836129	Identifier	q2		8834994	0					
ANR	8836130	EqualityExpression	q1 != q2		8834994	1		!=			
ANR	8836131	Identifier	q1		8834994	0					
ANR	8836132	Identifier	q2		8834994	1					
ANR	8836133	CompoundStatement		337:36:5780:5780	8834994	1					
ANR	8836134	ExpressionStatement	q1 = q1 * 2 + ( ( q1 == v -> pq ) ? v -> halfpq : 0 ) - 1	343:20:5953:6002	8834994	0	True				
ANR	8836135	AssignmentExpression	q1 = q1 * 2 + ( ( q1 == v -> pq ) ? v -> halfpq : 0 ) - 1		8834994	0		=			
ANR	8836136	Identifier	q1		8834994	0					
ANR	8836137	AdditiveExpression	q1 * 2 + ( ( q1 == v -> pq ) ? v -> halfpq : 0 ) - 1		8834994	1		+			
ANR	8836138	MultiplicativeExpression	q1 * 2		8834994	0		*			
ANR	8836139	Identifier	q1		8834994	0					
ANR	8836140	PrimaryExpression	2		8834994	1					
ANR	8836141	AdditiveExpression	( ( q1 == v -> pq ) ? v -> halfpq : 0 ) - 1		8834994	1		-			
ANR	8836142	ConditionalExpression	( q1 == v -> pq ) ? v -> halfpq : 0		8834994	0					
ANR	8836143	Condition	q1 == v -> pq		8834994	0					
ANR	8836144	EqualityExpression	q1 == v -> pq		8834994	0		==			
ANR	8836145	Identifier	q1		8834994	0					
ANR	8836146	PtrMemberAccess	v -> pq		8834994	1					
ANR	8836147	Identifier	v		8834994	0					
ANR	8836148	Identifier	pq		8834994	1					
ANR	8836149	PtrMemberAccess	v -> halfpq		8834994	1					
ANR	8836150	Identifier	v		8834994	0					
ANR	8836151	Identifier	halfpq		8834994	1					
ANR	8836152	PrimaryExpression	0		8834994	2					
ANR	8836153	PrimaryExpression	1		8834994	1					
ANR	8836154	ExpressionStatement	q2 = q2 * 2 + ( ( q2 == v -> pq ) ? v -> halfpq : 0 ) - 1	345:20:6025:6074	8834994	1	True				
ANR	8836155	AssignmentExpression	q2 = q2 * 2 + ( ( q2 == v -> pq ) ? v -> halfpq : 0 ) - 1		8834994	0		=			
ANR	8836156	Identifier	q2		8834994	0					
ANR	8836157	AdditiveExpression	q2 * 2 + ( ( q2 == v -> pq ) ? v -> halfpq : 0 ) - 1		8834994	1		+			
ANR	8836158	MultiplicativeExpression	q2 * 2		8834994	0		*			
ANR	8836159	Identifier	q2		8834994	0					
ANR	8836160	PrimaryExpression	2		8834994	1					
ANR	8836161	AdditiveExpression	( ( q2 == v -> pq ) ? v -> halfpq : 0 ) - 1		8834994	1		-			
ANR	8836162	ConditionalExpression	( q2 == v -> pq ) ? v -> halfpq : 0		8834994	0					
ANR	8836163	Condition	q2 == v -> pq		8834994	0					
ANR	8836164	EqualityExpression	q2 == v -> pq		8834994	0		==			
ANR	8836165	Identifier	q2		8834994	0					
ANR	8836166	PtrMemberAccess	v -> pq		8834994	1					
ANR	8836167	Identifier	v		8834994	0					
ANR	8836168	Identifier	pq		8834994	1					
ANR	8836169	PtrMemberAccess	v -> halfpq		8834994	1					
ANR	8836170	Identifier	v		8834994	0					
ANR	8836171	Identifier	halfpq		8834994	1					
ANR	8836172	PrimaryExpression	0		8834994	2					
ANR	8836173	PrimaryExpression	1		8834994	1					
ANR	8836174	IfStatement	if ( q1 < 1 )		8834994	2					
ANR	8836175	Condition	q1 < 1	347:24:6101:6106	8834994	0	True				
ANR	8836176	RelationalExpression	q1 < 1		8834994	0		<			
ANR	8836177	Identifier	q1		8834994	0					
ANR	8836178	PrimaryExpression	1		8834994	1					
ANR	8836179	ReturnStatement	return AVERROR_INVALIDDATA ;	349:24:6134:6160	8834994	1	True				
ANR	8836180	Identifier	AVERROR_INVALIDDATA		8834994	0					
ANR	8836181	ForStatement	for ( k = 1 ; k < 8 ; k ++ )		8834994	3					
ANR	8836182	ForInit	k = 1 ;	351:25:6188:6193	8834994	0	True				
ANR	8836183	AssignmentExpression	k = 1		8834994	0		=			
ANR	8836184	Identifier	k		8834994	0					
ANR	8836185	PrimaryExpression	1		8834994	1					
ANR	8836186	Condition	k < 8	351:32:6195:6199	8834994	1	True				
ANR	8836187	RelationalExpression	k < 8		8834994	0		<			
ANR	8836188	Identifier	k		8834994	0					
ANR	8836189	PrimaryExpression	8		8834994	1					
ANR	8836190	PostIncDecOperationExpression	k ++	351:39:6202:6204	8834994	2	True				
ANR	8836191	Identifier	k		8834994	0					
ANR	8836192	IncDec	++		8834994	1					
ANR	8836193	ExpressionStatement	ac_val2 [ k + 8 ] = ( ac_val2 [ k + 8 ] * q2 * ff_vc1_dqscale [ q1 - 1 ] + 0x20000 ) >> 18	353:24:6232:6311	8834994	3	True				
ANR	8836194	AssignmentExpression	ac_val2 [ k + 8 ] = ( ac_val2 [ k + 8 ] * q2 * ff_vc1_dqscale [ q1 - 1 ] + 0x20000 ) >> 18		8834994	0		=			
ANR	8836195	ArrayIndexing	ac_val2 [ k + 8 ]		8834994	0					
ANR	8836196	Identifier	ac_val2		8834994	0					
ANR	8836197	AdditiveExpression	k + 8		8834994	1		+			
ANR	8836198	Identifier	k		8834994	0					
ANR	8836199	PrimaryExpression	8		8834994	1					
ANR	8836200	ShiftExpression	( ac_val2 [ k + 8 ] * q2 * ff_vc1_dqscale [ q1 - 1 ] + 0x20000 ) >> 18		8834994	1		>>			
ANR	8836201	AdditiveExpression	ac_val2 [ k + 8 ] * q2 * ff_vc1_dqscale [ q1 - 1 ] + 0x20000		8834994	0		+			
ANR	8836202	MultiplicativeExpression	ac_val2 [ k + 8 ] * q2 * ff_vc1_dqscale [ q1 - 1 ]		8834994	0		*			
ANR	8836203	ArrayIndexing	ac_val2 [ k + 8 ]		8834994	0					
ANR	8836204	Identifier	ac_val2		8834994	0					
ANR	8836205	AdditiveExpression	k + 8		8834994	1		+			
ANR	8836206	Identifier	k		8834994	0					
ANR	8836207	PrimaryExpression	8		8834994	1					
ANR	8836208	MultiplicativeExpression	q2 * ff_vc1_dqscale [ q1 - 1 ]		8834994	1		*			
ANR	8836209	Identifier	q2		8834994	0					
ANR	8836210	ArrayIndexing	ff_vc1_dqscale [ q1 - 1 ]		8834994	1					
ANR	8836211	Identifier	ff_vc1_dqscale		8834994	0					
ANR	8836212	AdditiveExpression	q1 - 1		8834994	1		-			
ANR	8836213	Identifier	q1		8834994	0					
ANR	8836214	PrimaryExpression	1		8834994	1					
ANR	8836215	PrimaryExpression	0x20000		8834994	1					
ANR	8836216	PrimaryExpression	18		8834994	1					
ANR	8836217	IfStatement	if ( use_pred )		8834994	3					
ANR	8836218	Condition	use_pred	365:12:6418:6425	8834994	0	True				
ANR	8836219	Identifier	use_pred		8834994	0					
ANR	8836220	CompoundStatement		361:22:6278:6278	8834994	1					
ANR	8836221	IfStatement	if ( dc_pred_dir )		8834994	0					
ANR	8836222	Condition	dc_pred_dir	367:16:6447:6457	8834994	0	True				
ANR	8836223	Identifier	dc_pred_dir		8834994	0					
ANR	8836224	CompoundStatement		363:29:6310:6310	8834994	1					
ANR	8836225	ForStatement	for ( k = 1 ; k < 8 ; k ++ )		8834994	0					
ANR	8836226	ForInit	k = 1 ;	369:21:6492:6497	8834994	0	True				
ANR	8836227	AssignmentExpression	k = 1		8834994	0		=			
ANR	8836228	Identifier	k		8834994	0					
ANR	8836229	PrimaryExpression	1		8834994	1					
ANR	8836230	Condition	k < 8	369:28:6499:6503	8834994	1	True				
ANR	8836231	RelationalExpression	k < 8		8834994	0		<			
ANR	8836232	Identifier	k		8834994	0					
ANR	8836233	PrimaryExpression	8		8834994	1					
ANR	8836234	PostIncDecOperationExpression	k ++	369:35:6506:6508	8834994	2	True				
ANR	8836235	Identifier	k		8834994	0					
ANR	8836236	IncDec	++		8834994	1					
ANR	8836237	CompoundStatement		365:40:6361:6361	8834994	3					
ANR	8836238	ExpressionStatement	block [ k << v -> left_blk_sh ] = ac_val2 [ k ] * scale	371:20:6534:6581	8834994	0	True				
ANR	8836239	AssignmentExpression	block [ k << v -> left_blk_sh ] = ac_val2 [ k ] * scale		8834994	0		=			
ANR	8836240	ArrayIndexing	block [ k << v -> left_blk_sh ]		8834994	0					
ANR	8836241	Identifier	block		8834994	0					
ANR	8836242	ShiftExpression	k << v -> left_blk_sh		8834994	1		<<			
ANR	8836243	Identifier	k		8834994	0					
ANR	8836244	PtrMemberAccess	v -> left_blk_sh		8834994	1					
ANR	8836245	Identifier	v		8834994	0					
ANR	8836246	Identifier	left_blk_sh		8834994	1					
ANR	8836247	MultiplicativeExpression	ac_val2 [ k ] * scale		8834994	1		*			
ANR	8836248	ArrayIndexing	ac_val2 [ k ]		8834994	0					
ANR	8836249	Identifier	ac_val2		8834994	0					
ANR	8836250	Identifier	k		8834994	1					
ANR	8836251	Identifier	scale		8834994	1					
ANR	8836252	IfStatement	if ( ! v -> pquantizer && block [ k << v -> left_blk_sh ] )		8834994	1					
ANR	8836253	Condition	! v -> pquantizer && block [ k << v -> left_blk_sh ]	373:24:6608:6651	8834994	0	True				
ANR	8836254	AndExpression	! v -> pquantizer && block [ k << v -> left_blk_sh ]		8834994	0		&&			
ANR	8836255	UnaryOperationExpression	! v -> pquantizer		8834994	0					
ANR	8836256	UnaryOperator	!		8834994	0					
ANR	8836257	PtrMemberAccess	v -> pquantizer		8834994	1					
ANR	8836258	Identifier	v		8834994	0					
ANR	8836259	Identifier	pquantizer		8834994	1					
ANR	8836260	ArrayIndexing	block [ k << v -> left_blk_sh ]		8834994	1					
ANR	8836261	Identifier	block		8834994	0					
ANR	8836262	ShiftExpression	k << v -> left_blk_sh		8834994	1		<<			
ANR	8836263	Identifier	k		8834994	0					
ANR	8836264	PtrMemberAccess	v -> left_blk_sh		8834994	1					
ANR	8836265	Identifier	v		8834994	0					
ANR	8836266	Identifier	left_blk_sh		8834994	1					
ANR	8836267	ExpressionStatement	block [ k << v -> left_blk_sh ] += ( block [ k << v -> left_blk_sh ] < 0 ) ? - mquant : mquant	375:24:6679:6760	8834994	1	True				
ANR	8836268	AssignmentExpression	block [ k << v -> left_blk_sh ] += ( block [ k << v -> left_blk_sh ] < 0 ) ? - mquant : mquant		8834994	0		+=			
ANR	8836269	ArrayIndexing	block [ k << v -> left_blk_sh ]		8834994	0					
ANR	8836270	Identifier	block		8834994	0					
ANR	8836271	ShiftExpression	k << v -> left_blk_sh		8834994	1		<<			
ANR	8836272	Identifier	k		8834994	0					
ANR	8836273	PtrMemberAccess	v -> left_blk_sh		8834994	1					
ANR	8836274	Identifier	v		8834994	0					
ANR	8836275	Identifier	left_blk_sh		8834994	1					
ANR	8836276	ConditionalExpression	( block [ k << v -> left_blk_sh ] < 0 ) ? - mquant : mquant		8834994	1					
ANR	8836277	Condition	block [ k << v -> left_blk_sh ] < 0		8834994	0					
ANR	8836278	RelationalExpression	block [ k << v -> left_blk_sh ] < 0		8834994	0		<			
ANR	8836279	ArrayIndexing	block [ k << v -> left_blk_sh ]		8834994	0					
ANR	8836280	Identifier	block		8834994	0					
ANR	8836281	ShiftExpression	k << v -> left_blk_sh		8834994	1		<<			
ANR	8836282	Identifier	k		8834994	0					
ANR	8836283	PtrMemberAccess	v -> left_blk_sh		8834994	1					
ANR	8836284	Identifier	v		8834994	0					
ANR	8836285	Identifier	left_blk_sh		8834994	1					
ANR	8836286	PrimaryExpression	0		8834994	1					
ANR	8836287	UnaryOperationExpression	- mquant		8834994	1					
ANR	8836288	UnaryOperator	-		8834994	0					
ANR	8836289	Identifier	mquant		8834994	1					
ANR	8836290	Identifier	mquant		8834994	2					
ANR	8836291	ElseStatement	else		8834994	0					
ANR	8836292	CompoundStatement		375:19:6651:6651	8834994	0					
ANR	8836293	ForStatement	for ( k = 1 ; k < 8 ; k ++ )		8834994	0					
ANR	8836294	ForInit	k = 1 ;	381:21:6832:6837	8834994	0	True				
ANR	8836295	AssignmentExpression	k = 1		8834994	0		=			
ANR	8836296	Identifier	k		8834994	0					
ANR	8836297	PrimaryExpression	1		8834994	1					
ANR	8836298	Condition	k < 8	381:28:6839:6843	8834994	1	True				
ANR	8836299	RelationalExpression	k < 8		8834994	0		<			
ANR	8836300	Identifier	k		8834994	0					
ANR	8836301	PrimaryExpression	8		8834994	1					
ANR	8836302	PostIncDecOperationExpression	k ++	381:35:6846:6848	8834994	2	True				
ANR	8836303	Identifier	k		8834994	0					
ANR	8836304	IncDec	++		8834994	1					
ANR	8836305	CompoundStatement		377:40:6701:6701	8834994	3					
ANR	8836306	ExpressionStatement	block [ k << v -> top_blk_sh ] = ac_val2 [ k + 8 ] * scale	383:20:6874:6924	8834994	0	True				
ANR	8836307	AssignmentExpression	block [ k << v -> top_blk_sh ] = ac_val2 [ k + 8 ] * scale		8834994	0		=			
ANR	8836308	ArrayIndexing	block [ k << v -> top_blk_sh ]		8834994	0					
ANR	8836309	Identifier	block		8834994	0					
ANR	8836310	ShiftExpression	k << v -> top_blk_sh		8834994	1		<<			
ANR	8836311	Identifier	k		8834994	0					
ANR	8836312	PtrMemberAccess	v -> top_blk_sh		8834994	1					
ANR	8836313	Identifier	v		8834994	0					
ANR	8836314	Identifier	top_blk_sh		8834994	1					
ANR	8836315	MultiplicativeExpression	ac_val2 [ k + 8 ] * scale		8834994	1		*			
ANR	8836316	ArrayIndexing	ac_val2 [ k + 8 ]		8834994	0					
ANR	8836317	Identifier	ac_val2		8834994	0					
ANR	8836318	AdditiveExpression	k + 8		8834994	1		+			
ANR	8836319	Identifier	k		8834994	0					
ANR	8836320	PrimaryExpression	8		8834994	1					
ANR	8836321	Identifier	scale		8834994	1					
ANR	8836322	IfStatement	if ( ! v -> pquantizer && block [ k << v -> top_blk_sh ] )		8834994	1					
ANR	8836323	Condition	! v -> pquantizer && block [ k << v -> top_blk_sh ]	385:24:6951:6993	8834994	0	True				
ANR	8836324	AndExpression	! v -> pquantizer && block [ k << v -> top_blk_sh ]		8834994	0		&&			
ANR	8836325	UnaryOperationExpression	! v -> pquantizer		8834994	0					
ANR	8836326	UnaryOperator	!		8834994	0					
ANR	8836327	PtrMemberAccess	v -> pquantizer		8834994	1					
ANR	8836328	Identifier	v		8834994	0					
ANR	8836329	Identifier	pquantizer		8834994	1					
ANR	8836330	ArrayIndexing	block [ k << v -> top_blk_sh ]		8834994	1					
ANR	8836331	Identifier	block		8834994	0					
ANR	8836332	ShiftExpression	k << v -> top_blk_sh		8834994	1		<<			
ANR	8836333	Identifier	k		8834994	0					
ANR	8836334	PtrMemberAccess	v -> top_blk_sh		8834994	1					
ANR	8836335	Identifier	v		8834994	0					
ANR	8836336	Identifier	top_blk_sh		8834994	1					
ANR	8836337	ExpressionStatement	block [ k << v -> top_blk_sh ] += ( block [ k << v -> top_blk_sh ] < 0 ) ? - mquant : mquant	387:24:7021:7100	8834994	1	True				
ANR	8836338	AssignmentExpression	block [ k << v -> top_blk_sh ] += ( block [ k << v -> top_blk_sh ] < 0 ) ? - mquant : mquant		8834994	0		+=			
ANR	8836339	ArrayIndexing	block [ k << v -> top_blk_sh ]		8834994	0					
ANR	8836340	Identifier	block		8834994	0					
ANR	8836341	ShiftExpression	k << v -> top_blk_sh		8834994	1		<<			
ANR	8836342	Identifier	k		8834994	0					
ANR	8836343	PtrMemberAccess	v -> top_blk_sh		8834994	1					
ANR	8836344	Identifier	v		8834994	0					
ANR	8836345	Identifier	top_blk_sh		8834994	1					
ANR	8836346	ConditionalExpression	( block [ k << v -> top_blk_sh ] < 0 ) ? - mquant : mquant		8834994	1					
ANR	8836347	Condition	block [ k << v -> top_blk_sh ] < 0		8834994	0					
ANR	8836348	RelationalExpression	block [ k << v -> top_blk_sh ] < 0		8834994	0		<			
ANR	8836349	ArrayIndexing	block [ k << v -> top_blk_sh ]		8834994	0					
ANR	8836350	Identifier	block		8834994	0					
ANR	8836351	ShiftExpression	k << v -> top_blk_sh		8834994	1		<<			
ANR	8836352	Identifier	k		8834994	0					
ANR	8836353	PtrMemberAccess	v -> top_blk_sh		8834994	1					
ANR	8836354	Identifier	v		8834994	0					
ANR	8836355	Identifier	top_blk_sh		8834994	1					
ANR	8836356	PrimaryExpression	0		8834994	1					
ANR	8836357	UnaryOperationExpression	- mquant		8834994	1					
ANR	8836358	UnaryOperator	-		8834994	0					
ANR	8836359	Identifier	mquant		8834994	1					
ANR	8836360	Identifier	mquant		8834994	2					
ANR	8836361	ExpressionStatement	i = 63	393:12:7149:7155	8834994	1	True				
ANR	8836362	AssignmentExpression	i = 63		8834994	0		=			
ANR	8836363	Identifier	i		8834994	0					
ANR	8836364	PrimaryExpression	63		8834994	1					
ANR	8836365	ExpressionStatement	s -> block_last_index [ n ] = i	399:4:7180:7206	8834994	31	True				
ANR	8836366	AssignmentExpression	s -> block_last_index [ n ] = i		8834994	0		=			
ANR	8836367	ArrayIndexing	s -> block_last_index [ n ]		8834994	0					
ANR	8836368	PtrMemberAccess	s -> block_last_index		8834994	0					
ANR	8836369	Identifier	s		8834994	0					
ANR	8836370	Identifier	block_last_index		8834994	1					
ANR	8836371	Identifier	n		8834994	1					
ANR	8836372	Identifier	i		8834994	1					
ANR	8836373	ReturnStatement	return 0 ;	403:4:7215:7223	8834994	32	True				
ANR	8836374	PrimaryExpression	0		8834994	0					
ANR	8836375	ReturnType	static int		8834994	1					
ANR	8836376	Identifier	vc1_decode_i_block_adv		8834994	2					
ANR	8836377	ParameterList	"VC1Context * v , int16_t block [ 64 ] , int n , int coded , int codingset , int mquant"		8834994	3					
ANR	8836378	Parameter	VC1Context * v	1:34:34:46	8834994	0	True				
ANR	8836379	ParameterType	VC1Context *		8834994	0					
ANR	8836380	Identifier	v		8834994	1					
ANR	8836381	Parameter	int16_t block [ 64 ]	1:49:49:65	8834994	1	True				
ANR	8836382	ParameterType	int16_t [ 64 ]		8834994	0					
ANR	8836383	Identifier	block		8834994	1					
ANR	8836384	Parameter	int n	1:68:68:72	8834994	2	True				
ANR	8836385	ParameterType	int		8834994	0					
ANR	8836386	Identifier	n		8834994	1					
ANR	8836387	Parameter	int coded	3:34:110:118	8834994	3	True				
ANR	8836388	ParameterType	int		8834994	0					
ANR	8836389	Identifier	coded		8834994	1					
ANR	8836390	Parameter	int codingset	3:45:121:133	8834994	4	True				
ANR	8836391	ParameterType	int		8834994	0					
ANR	8836392	Identifier	codingset		8834994	1					
ANR	8836393	Parameter	int mquant	3:60:136:145	8834994	5	True				
ANR	8836394	ParameterType	int		8834994	0					
ANR	8836395	Identifier	mquant		8834994	1					
ANR	8836396	CFGEntryNode	ENTRY		8834994		True				
ANR	8836397	CFGExitNode	EXIT		8834994		True				
ANR	8836398	Symbol	& v -> s		8834994						
ANR	8836399	Symbol	* v		8834994						
ANR	8836400	Symbol	v -> left_blk_sh		8834994						
ANR	8836401	Symbol	s -> block_wrap		8834994						
ANR	8836402	Symbol	v -> top_blk_sh		8834994						
ANR	8836403	Symbol	* zz_table		8834994						
ANR	8836404	Symbol	v -> a_avail		8834994						
ANR	8836405	Symbol	s -> current_picture		8834994						
ANR	8836406	Symbol	* v -> left_blk_sh		8834994						
ANR	8836407	Symbol	s -> ac_val		8834994						
ANR	8836408	Symbol	* s -> block_wrap		8834994						
ANR	8836409	Symbol	block		8834994						
ANR	8836410	Symbol	v -> s		8834994						
ANR	8836411	Symbol	dc_pred_dir		8834994						
ANR	8836412	Symbol	* v -> zz_8x8		8834994						
ANR	8836413	Symbol	* s -> current_picture . f		8834994						
ANR	8836414	Symbol	dc_val		8834994						
ANR	8836415	Symbol	* mb_pos		8834994						
ANR	8836416	Symbol	* v -> top_blk_sh		8834994						
ANR	8836417	Symbol	* * s -> ac_val		8834994						
ANR	8836418	Symbol	* * * s		8834994						
ANR	8836419	Symbol	& s -> gb		8834994						
ANR	8836420	Symbol	s -> current_picture . f . qscale_table		8834994						
ANR	8836421	Symbol	v -> s . ac_pred		8834994						
ANR	8836422	Symbol	mb_pos		8834994						
ANR	8836423	Symbol	vc1_pred_dc		8834994						
ANR	8836424	Symbol	* s -> current_picture . f . qscale_table		8834994						
ANR	8836425	Symbol	dcdiff		8834994						
ANR	8836426	Symbol	v -> c_avail		8834994						
ANR	8836427	Symbol	skip		8834994						
ANR	8836428	Symbol	* * v		8834994						
ANR	8836429	Symbol	* * s		8834994						
ANR	8836430	Symbol	AV_LOG_ERROR		8834994						
ANR	8836431	Symbol	* s -> current_picture		8834994						
ANR	8836432	Symbol	s -> current_picture . f		8834994						
ANR	8836433	Symbol	& v -> s . gb		8834994						
ANR	8836434	Symbol	v -> halfpq		8834994						
ANR	8836435	Symbol	i		8834994						
ANR	8836436	Symbol	k		8834994						
ANR	8836437	Symbol	* s -> ac_val		8834994						
ANR	8836438	Symbol	n		8834994						
ANR	8836439	Symbol	ff_msmp4_dc_luma_vlc		8834994						
ANR	8836440	Symbol	s -> block_last_index		8834994						
ANR	8836441	Symbol	s -> dc_table_index		8834994						
ANR	8836442	Symbol	DC_VLC_BITS		8834994						
ANR	8836443	Symbol	s		8834994						
ANR	8836444	Symbol	v		8834994						
ANR	8836445	Symbol	a_avail		8834994						
ANR	8836446	Symbol	AVERROR_INVALIDDATA		8834994						
ANR	8836447	Symbol	get_vlc2		8834994						
ANR	8836448	Symbol	* ff_msmp4_dc_chroma_vlc		8834994						
ANR	8836449	Symbol	& value		8834994						
ANR	8836450	Symbol	s -> block_index		8834994						
ANR	8836451	Symbol	* q1		8834994						
ANR	8836452	Symbol	get_bits		8834994						
ANR	8836453	Symbol	s -> c_dc_scale		8834994						
ANR	8836454	Symbol	* s -> block_index		8834994						
ANR	8836455	Symbol	* s -> mb_stride		8834994						
ANR	8836456	Symbol	mquant		8834994						
ANR	8836457	Symbol	v -> zz_8x8		8834994						
ANR	8836458	Symbol	& last		8834994						
ANR	8836459	Symbol	v -> fcm		8834994						
ANR	8836460	Symbol	c_avail		8834994						
ANR	8836461	Symbol	ac_val		8834994						
ANR	8836462	Symbol	last		8834994						
ANR	8836463	Symbol	get_bits1		8834994						
ANR	8836464	Symbol	v -> zzi_8x8		8834994						
ANR	8836465	Symbol	s -> mb_x		8834994						
ANR	8836466	Symbol	s -> mb_y		8834994						
ANR	8836467	Symbol	coded		8834994						
ANR	8836468	Symbol	ac_val2		8834994						
ANR	8836469	Symbol	zz_table		8834994						
ANR	8836470	Symbol	s -> avctx		8834994						
ANR	8836471	Symbol	ff_msmp4_dc_luma_vlc [ s -> dc_table_index ] . table		8834994						
ANR	8836472	Symbol	ff_msmp4_dc_chroma_vlc		8834994						
ANR	8836473	Symbol	* ac_val2		8834994						
ANR	8836474	Symbol	use_pred		8834994						
ANR	8836475	Symbol	s -> mb_stride		8834994						
ANR	8836476	Symbol	* ff_msmp4_dc_luma_vlc		8834994						
ANR	8836477	Symbol	scale		8834994						
ANR	8836478	Symbol	* s -> dc_table_index		8834994						
ANR	8836479	Symbol	ff_msmp4_dc_chroma_vlc [ s -> dc_table_index ] . table		8834994						
ANR	8836480	Symbol	codingset		8834994						
ANR	8836481	Symbol	v -> overlap		8834994						
ANR	8836482	Symbol	ILACE_FRAME		8834994						
ANR	8836483	Symbol	v -> pquantizer		8834994						
ANR	8836484	Symbol	s -> y_dc_scale		8834994						
ANR	8836485	Symbol	gb		8834994						
ANR	8836486	Symbol	s -> ac_pred		8834994						
ANR	8836487	Symbol	value		8834994						
ANR	8836488	Symbol	q1		8834994						
ANR	8836489	Symbol	q2		8834994						
ANR	8836490	Symbol	* s -> block_last_index		8834994						
ANR	8836491	Symbol	& dc_val		8834994						
ANR	8836492	Symbol	* ff_vc1_dqscale		8834994						
ANR	8836493	Symbol	* ac_val		8834994						
ANR	8836494	Symbol	& skip		8834994						
ANR	8836495	Symbol	* dc_val		8834994						
ANR	8836496	Symbol	& dc_pred_dir		8834994						
ANR	8836497	Symbol	* block		8834994						
ANR	8836498	Symbol	* * zz_table		8834994						
ANR	8836499	Symbol	* k		8834994						
ANR	8836500	Symbol	v -> pq		8834994						
ANR	8836501	Symbol	* n		8834994						
ANR	8836502	Symbol	ff_vc1_dqscale		8834994						
ANR	8836503	Symbol	* s		8834994						
