command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3095079	File	/home/p4ultr4n/workplace/ReVeal/raw_code/evrc_decode_frame_0.c								
ANR	3095080	Function	evrc_decode_frame	1:0:0:6103							
ANR	3095081	FunctionDef	"evrc_decode_frame (AVCodecContext * avctx , void * data , int * got_frame_ptr , AVPacket * avpkt)"		3095080	0					
ANR	3095082	CompoundStatement		5:0:132:6103	3095080	0					
ANR	3095083	IdentifierDeclStatement	const uint8_t * buf = avpkt -> data ;	7:4:139:171	3095080	0	True				
ANR	3095084	IdentifierDecl	* buf = avpkt -> data		3095080	0					
ANR	3095085	IdentifierDeclType	const uint8_t *		3095080	0					
ANR	3095086	Identifier	buf		3095080	1					
ANR	3095087	AssignmentExpression	* buf = avpkt -> data		3095080	2		=			
ANR	3095088	Identifier	buf		3095080	0					
ANR	3095089	PtrMemberAccess	avpkt -> data		3095080	1					
ANR	3095090	Identifier	avpkt		3095080	0					
ANR	3095091	Identifier	data		3095080	1					
ANR	3095092	IdentifierDeclStatement	AVFrame * frame = data ;	9:4:178:203	3095080	1	True				
ANR	3095093	IdentifierDecl	* frame = data		3095080	0					
ANR	3095094	IdentifierDeclType	AVFrame *		3095080	0					
ANR	3095095	Identifier	frame		3095080	1					
ANR	3095096	AssignmentExpression	* frame = data		3095080	2		=			
ANR	3095097	Identifier	data		3095080	0					
ANR	3095098	Identifier	data		3095080	1					
ANR	3095099	IdentifierDeclStatement	EVRCContext * e = avctx -> priv_data ;	11:4:210:247	3095080	2	True				
ANR	3095100	IdentifierDecl	* e = avctx -> priv_data		3095080	0					
ANR	3095101	IdentifierDeclType	EVRCContext *		3095080	0					
ANR	3095102	Identifier	e		3095080	1					
ANR	3095103	AssignmentExpression	* e = avctx -> priv_data		3095080	2		=			
ANR	3095104	Identifier	e		3095080	0					
ANR	3095105	PtrMemberAccess	avctx -> priv_data		3095080	1					
ANR	3095106	Identifier	avctx		3095080	0					
ANR	3095107	Identifier	priv_data		3095080	1					
ANR	3095108	IdentifierDeclStatement	int buf_size = avpkt -> size ;	13:4:254:286	3095080	3	True				
ANR	3095109	IdentifierDecl	buf_size = avpkt -> size		3095080	0					
ANR	3095110	IdentifierDeclType	int		3095080	0					
ANR	3095111	Identifier	buf_size		3095080	1					
ANR	3095112	AssignmentExpression	buf_size = avpkt -> size		3095080	2		=			
ANR	3095113	Identifier	buf_size		3095080	0					
ANR	3095114	PtrMemberAccess	avpkt -> size		3095080	1					
ANR	3095115	Identifier	avpkt		3095080	0					
ANR	3095116	Identifier	size		3095080	1					
ANR	3095117	IdentifierDeclStatement	"float ilspf [ FILTER_ORDER ] , ilpc [ FILTER_ORDER ] , idelay [ NB_SUBFRAMES ] ;"	15:4:293:360	3095080	4	True				
ANR	3095118	IdentifierDecl	ilspf [ FILTER_ORDER ]		3095080	0					
ANR	3095119	IdentifierDeclType	float [ FILTER_ORDER ]		3095080	0					
ANR	3095120	Identifier	ilspf		3095080	1					
ANR	3095121	Identifier	FILTER_ORDER		3095080	2					
ANR	3095122	IdentifierDecl	ilpc [ FILTER_ORDER ]		3095080	1					
ANR	3095123	IdentifierDeclType	float [ FILTER_ORDER ]		3095080	0					
ANR	3095124	Identifier	ilpc		3095080	1					
ANR	3095125	Identifier	FILTER_ORDER		3095080	2					
ANR	3095126	IdentifierDecl	idelay [ NB_SUBFRAMES ]		3095080	2					
ANR	3095127	IdentifierDeclType	float [ NB_SUBFRAMES ]		3095080	0					
ANR	3095128	Identifier	idelay		3095080	1					
ANR	3095129	Identifier	NB_SUBFRAMES		3095080	2					
ANR	3095130	IdentifierDeclStatement	float * samples ;	17:4:367:381	3095080	5	True				
ANR	3095131	IdentifierDecl	* samples		3095080	0					
ANR	3095132	IdentifierDeclType	float *		3095080	0					
ANR	3095133	Identifier	samples		3095080	1					
ANR	3095134	IdentifierDeclStatement	"int i , j , ret , error_flag = 0 ;"	19:4:388:419	3095080	6	True				
ANR	3095135	IdentifierDecl	i		3095080	0					
ANR	3095136	IdentifierDeclType	int		3095080	0					
ANR	3095137	Identifier	i		3095080	1					
ANR	3095138	IdentifierDecl	j		3095080	1					
ANR	3095139	IdentifierDeclType	int		3095080	0					
ANR	3095140	Identifier	j		3095080	1					
ANR	3095141	IdentifierDecl	ret		3095080	2					
ANR	3095142	IdentifierDeclType	int		3095080	0					
ANR	3095143	Identifier	ret		3095080	1					
ANR	3095144	IdentifierDecl	error_flag = 0		3095080	3					
ANR	3095145	IdentifierDeclType	int		3095080	0					
ANR	3095146	Identifier	error_flag		3095080	1					
ANR	3095147	AssignmentExpression	error_flag = 0		3095080	2		=			
ANR	3095148	Identifier	error_flag		3095080	0					
ANR	3095149	PrimaryExpression	0		3095080	1					
ANR	3095150	ExpressionStatement	frame -> nb_samples = 160	23:4:428:451	3095080	7	True				
ANR	3095151	AssignmentExpression	frame -> nb_samples = 160		3095080	0		=			
ANR	3095152	PtrMemberAccess	frame -> nb_samples		3095080	0					
ANR	3095153	Identifier	frame		3095080	0					
ANR	3095154	Identifier	nb_samples		3095080	1					
ANR	3095155	PrimaryExpression	160		3095080	1					
ANR	3095156	IfStatement	"if ( ( ret = ff_get_buffer ( avctx , frame , 0 ) ) < 0 )"		3095080	8					
ANR	3095157	Condition	"( ret = ff_get_buffer ( avctx , frame , 0 ) ) < 0"	25:8:462:503	3095080	0	True				
ANR	3095158	RelationalExpression	"( ret = ff_get_buffer ( avctx , frame , 0 ) ) < 0"		3095080	0		<			
ANR	3095159	AssignmentExpression	"ret = ff_get_buffer ( avctx , frame , 0 )"		3095080	0		=			
ANR	3095160	Identifier	ret		3095080	0					
ANR	3095161	CallExpression	"ff_get_buffer ( avctx , frame , 0 )"		3095080	1					
ANR	3095162	Callee	ff_get_buffer		3095080	0					
ANR	3095163	Identifier	ff_get_buffer		3095080	0					
ANR	3095164	ArgumentList	avctx		3095080	1					
ANR	3095165	Argument	avctx		3095080	0					
ANR	3095166	Identifier	avctx		3095080	0					
ANR	3095167	Argument	frame		3095080	1					
ANR	3095168	Identifier	frame		3095080	0					
ANR	3095169	Argument	0		3095080	2					
ANR	3095170	PrimaryExpression	0		3095080	0					
ANR	3095171	PrimaryExpression	0		3095080	1					
ANR	3095172	ReturnStatement	return ret ;	27:8:515:525	3095080	1	True				
ANR	3095173	Identifier	ret		3095080	0					
ANR	3095174	ExpressionStatement	samples = ( float * ) frame -> data [ 0 ]	29:4:532:565	3095080	9	True				
ANR	3095175	AssignmentExpression	samples = ( float * ) frame -> data [ 0 ]		3095080	0		=			
ANR	3095176	Identifier	samples		3095080	0					
ANR	3095177	CastExpression	( float * ) frame -> data [ 0 ]		3095080	1					
ANR	3095178	CastTarget	float *		3095080	0					
ANR	3095179	ArrayIndexing	frame -> data [ 0 ]		3095080	1					
ANR	3095180	PtrMemberAccess	frame -> data		3095080	0					
ANR	3095181	Identifier	frame		3095080	0					
ANR	3095182	Identifier	data		3095080	1					
ANR	3095183	PrimaryExpression	0		3095080	1					
ANR	3095184	IfStatement	"if ( ( e -> bitrate = determine_bitrate ( avctx , & buf_size , & buf ) ) == RATE_ERRS )"		3095080	10					
ANR	3095185	Condition	"( e -> bitrate = determine_bitrate ( avctx , & buf_size , & buf ) ) == RATE_ERRS"	33:8:578:646	3095080	0	True				
ANR	3095186	EqualityExpression	"( e -> bitrate = determine_bitrate ( avctx , & buf_size , & buf ) ) == RATE_ERRS"		3095080	0		==			
ANR	3095187	AssignmentExpression	"e -> bitrate = determine_bitrate ( avctx , & buf_size , & buf )"		3095080	0		=			
ANR	3095188	PtrMemberAccess	e -> bitrate		3095080	0					
ANR	3095189	Identifier	e		3095080	0					
ANR	3095190	Identifier	bitrate		3095080	1					
ANR	3095191	CallExpression	"determine_bitrate ( avctx , & buf_size , & buf )"		3095080	1					
ANR	3095192	Callee	determine_bitrate		3095080	0					
ANR	3095193	Identifier	determine_bitrate		3095080	0					
ANR	3095194	ArgumentList	avctx		3095080	1					
ANR	3095195	Argument	avctx		3095080	0					
ANR	3095196	Identifier	avctx		3095080	0					
ANR	3095197	Argument	& buf_size		3095080	1					
ANR	3095198	UnaryOperationExpression	& buf_size		3095080	0					
ANR	3095199	UnaryOperator	&		3095080	0					
ANR	3095200	Identifier	buf_size		3095080	1					
ANR	3095201	Argument	& buf		3095080	2					
ANR	3095202	UnaryOperationExpression	& buf		3095080	0					
ANR	3095203	UnaryOperator	&		3095080	0					
ANR	3095204	Identifier	buf		3095080	1					
ANR	3095205	Identifier	RATE_ERRS		3095080	1					
ANR	3095206	CompoundStatement		29:79:516:516	3095080	1					
ANR	3095207	ExpressionStatement	"warn_insufficient_frame_quality ( avctx , ""bitrate cannot be determined."" )"	35:8:660:731	3095080	0	True				
ANR	3095208	CallExpression	"warn_insufficient_frame_quality ( avctx , ""bitrate cannot be determined."" )"		3095080	0					
ANR	3095209	Callee	warn_insufficient_frame_quality		3095080	0					
ANR	3095210	Identifier	warn_insufficient_frame_quality		3095080	0					
ANR	3095211	ArgumentList	avctx		3095080	1					
ANR	3095212	Argument	avctx		3095080	0					
ANR	3095213	Identifier	avctx		3095080	0					
ANR	3095214	Argument	"""bitrate cannot be determined."""		3095080	1					
ANR	3095215	PrimaryExpression	"""bitrate cannot be determined."""		3095080	0					
ANR	3095216	GotoStatement	goto erasure ;	37:8:742:754	3095080	1	True				
ANR	3095217	Identifier	erasure		3095080	0					
ANR	3095218	IfStatement	if ( e -> bitrate <= SILENCE || e -> bitrate == RATE_QUARTER )		3095080	11					
ANR	3095219	Condition	e -> bitrate <= SILENCE || e -> bitrate == RATE_QUARTER	41:8:772:822	3095080	0	True				
ANR	3095220	OrExpression	e -> bitrate <= SILENCE || e -> bitrate == RATE_QUARTER		3095080	0		||			
ANR	3095221	RelationalExpression	e -> bitrate <= SILENCE		3095080	0		<=			
ANR	3095222	PtrMemberAccess	e -> bitrate		3095080	0					
ANR	3095223	Identifier	e		3095080	0					
ANR	3095224	Identifier	bitrate		3095080	1					
ANR	3095225	Identifier	SILENCE		3095080	1					
ANR	3095226	EqualityExpression	e -> bitrate == RATE_QUARTER		3095080	1		==			
ANR	3095227	PtrMemberAccess	e -> bitrate		3095080	0					
ANR	3095228	Identifier	e		3095080	0					
ANR	3095229	Identifier	bitrate		3095080	1					
ANR	3095230	Identifier	RATE_QUARTER		3095080	1					
ANR	3095231	GotoStatement	goto erasure ;	43:8:834:846	3095080	1	True				
ANR	3095232	Identifier	erasure		3095080	0					
ANR	3095233	IfStatement	if ( e -> bitrate == RATE_QUANT && e -> last_valid_bitrate == RATE_FULL && ! e -> prev_error_flag )		3095080	12					
ANR	3095234	Condition	e -> bitrate == RATE_QUANT && e -> last_valid_bitrate == RATE_FULL && ! e -> prev_error_flag	45:8:857:975	3095080	0	True				
ANR	3095235	AndExpression	e -> bitrate == RATE_QUANT && e -> last_valid_bitrate == RATE_FULL && ! e -> prev_error_flag		3095080	0		&&			
ANR	3095236	EqualityExpression	e -> bitrate == RATE_QUANT		3095080	0		==			
ANR	3095237	PtrMemberAccess	e -> bitrate		3095080	0					
ANR	3095238	Identifier	e		3095080	0					
ANR	3095239	Identifier	bitrate		3095080	1					
ANR	3095240	Identifier	RATE_QUANT		3095080	1					
ANR	3095241	AndExpression	e -> last_valid_bitrate == RATE_FULL && ! e -> prev_error_flag		3095080	1		&&			
ANR	3095242	EqualityExpression	e -> last_valid_bitrate == RATE_FULL		3095080	0		==			
ANR	3095243	PtrMemberAccess	e -> last_valid_bitrate		3095080	0					
ANR	3095244	Identifier	e		3095080	0					
ANR	3095245	Identifier	last_valid_bitrate		3095080	1					
ANR	3095246	Identifier	RATE_FULL		3095080	1					
ANR	3095247	UnaryOperationExpression	! e -> prev_error_flag		3095080	1					
ANR	3095248	UnaryOperator	!		3095080	0					
ANR	3095249	PtrMemberAccess	e -> prev_error_flag		3095080	1					
ANR	3095250	Identifier	e		3095080	0					
ANR	3095251	Identifier	prev_error_flag		3095080	1					
ANR	3095252	GotoStatement	goto erasure ;	49:8:987:999	3095080	1	True				
ANR	3095253	Identifier	erasure		3095080	0					
ANR	3095254	ExpressionStatement	"init_get_bits ( & e -> gb , buf , 8 * buf_size )"	53:4:1008:1048	3095080	13	True				
ANR	3095255	CallExpression	"init_get_bits ( & e -> gb , buf , 8 * buf_size )"		3095080	0					
ANR	3095256	Callee	init_get_bits		3095080	0					
ANR	3095257	Identifier	init_get_bits		3095080	0					
ANR	3095258	ArgumentList	& e -> gb		3095080	1					
ANR	3095259	Argument	& e -> gb		3095080	0					
ANR	3095260	UnaryOperationExpression	& e -> gb		3095080	0					
ANR	3095261	UnaryOperator	&		3095080	0					
ANR	3095262	PtrMemberAccess	e -> gb		3095080	1					
ANR	3095263	Identifier	e		3095080	0					
ANR	3095264	Identifier	gb		3095080	1					
ANR	3095265	Argument	buf		3095080	1					
ANR	3095266	Identifier	buf		3095080	0					
ANR	3095267	Argument	8 * buf_size		3095080	2					
ANR	3095268	MultiplicativeExpression	8 * buf_size		3095080	0		*			
ANR	3095269	PrimaryExpression	8		3095080	0					
ANR	3095270	Identifier	buf_size		3095080	1					
ANR	3095271	ExpressionStatement	"memset ( & e -> frame , 0 , sizeof ( EVRCAFrame ) )"	55:4:1055:1095	3095080	14	True				
ANR	3095272	CallExpression	"memset ( & e -> frame , 0 , sizeof ( EVRCAFrame ) )"		3095080	0					
ANR	3095273	Callee	memset		3095080	0					
ANR	3095274	Identifier	memset		3095080	0					
ANR	3095275	ArgumentList	& e -> frame		3095080	1					
ANR	3095276	Argument	& e -> frame		3095080	0					
ANR	3095277	UnaryOperationExpression	& e -> frame		3095080	0					
ANR	3095278	UnaryOperator	&		3095080	0					
ANR	3095279	PtrMemberAccess	e -> frame		3095080	1					
ANR	3095280	Identifier	e		3095080	0					
ANR	3095281	Identifier	frame		3095080	1					
ANR	3095282	Argument	0		3095080	1					
ANR	3095283	PrimaryExpression	0		3095080	0					
ANR	3095284	Argument	sizeof ( EVRCAFrame )		3095080	2					
ANR	3095285	SizeofExpression	sizeof ( EVRCAFrame )		3095080	0					
ANR	3095286	Sizeof	sizeof		3095080	0					
ANR	3095287	SizeofOperand	EVRCAFrame		3095080	1					
ANR	3095288	ExpressionStatement	unpack_frame ( e )	59:4:1104:1119	3095080	15	True				
ANR	3095289	CallExpression	unpack_frame ( e )		3095080	0					
ANR	3095290	Callee	unpack_frame		3095080	0					
ANR	3095291	Identifier	unpack_frame		3095080	0					
ANR	3095292	ArgumentList	e		3095080	1					
ANR	3095293	Argument	e		3095080	0					
ANR	3095294	Identifier	e		3095080	0					
ANR	3095295	IfStatement	if ( e -> bitrate != RATE_QUANT )		3095080	16					
ANR	3095296	Condition	e -> bitrate != RATE_QUANT	63:8:1132:1155	3095080	0	True				
ANR	3095297	EqualityExpression	e -> bitrate != RATE_QUANT		3095080	0		!=			
ANR	3095298	PtrMemberAccess	e -> bitrate		3095080	0					
ANR	3095299	Identifier	e		3095080	0					
ANR	3095300	Identifier	bitrate		3095080	1					
ANR	3095301	Identifier	RATE_QUANT		3095080	1					
ANR	3095302	CompoundStatement		61:8:1036:1070	3095080	1					
ANR	3095303	IdentifierDeclStatement	uint8_t * p = ( uint8_t * ) & e -> frame ;	65:8:1169:1203	3095080	0	True				
ANR	3095304	IdentifierDecl	* p = ( uint8_t * ) & e -> frame		3095080	0					
ANR	3095305	IdentifierDeclType	uint8_t *		3095080	0					
ANR	3095306	Identifier	p		3095080	1					
ANR	3095307	AssignmentExpression	* p = ( uint8_t * ) & e -> frame		3095080	2		=			
ANR	3095308	Identifier	p		3095080	0					
ANR	3095309	CastExpression	( uint8_t * ) & e -> frame		3095080	1					
ANR	3095310	CastTarget	uint8_t *		3095080	0					
ANR	3095311	UnaryOperationExpression	& e -> frame		3095080	1					
ANR	3095312	UnaryOperator	&		3095080	0					
ANR	3095313	PtrMemberAccess	e -> frame		3095080	1					
ANR	3095314	Identifier	e		3095080	0					
ANR	3095315	Identifier	frame		3095080	1					
ANR	3095316	ForStatement	for ( i = 0 ; i < sizeof ( EVRCAFrame ) ; i ++ )		3095080	1					
ANR	3095317	ForInit	i = 0 ;	67:13:1219:1224	3095080	0	True				
ANR	3095318	AssignmentExpression	i = 0		3095080	0		=			
ANR	3095319	Identifier	i		3095080	0					
ANR	3095320	PrimaryExpression	0		3095080	1					
ANR	3095321	Condition	i < sizeof ( EVRCAFrame )	67:20:1226:1247	3095080	1	True				
ANR	3095322	RelationalExpression	i < sizeof ( EVRCAFrame )		3095080	0		<			
ANR	3095323	Identifier	i		3095080	0					
ANR	3095324	SizeofExpression	sizeof ( EVRCAFrame )		3095080	1					
ANR	3095325	Sizeof	sizeof		3095080	0					
ANR	3095326	SizeofOperand	EVRCAFrame		3095080	1					
ANR	3095327	PostIncDecOperationExpression	i ++	67:44:1250:1252	3095080	2	True				
ANR	3095328	Identifier	i		3095080	0					
ANR	3095329	IncDec	++		3095080	1					
ANR	3095330	CompoundStatement		63:49:1122:1122	3095080	3					
ANR	3095331	IfStatement	if ( p [ i ] )		3095080	0					
ANR	3095332	Condition	p [ i ]	69:16:1274:1277	3095080	0	True				
ANR	3095333	ArrayIndexing	p [ i ]		3095080	0					
ANR	3095334	Identifier	p		3095080	0					
ANR	3095335	Identifier	i		3095080	1					
ANR	3095336	BreakStatement	break ;	71:16:1297:1302	3095080	1	True				
ANR	3095337	IfStatement	if ( i == sizeof ( EVRCAFrame ) )		3095080	2					
ANR	3095338	Condition	i == sizeof ( EVRCAFrame )	75:12:1328:1350	3095080	0	True				
ANR	3095339	EqualityExpression	i == sizeof ( EVRCAFrame )		3095080	0		==			
ANR	3095340	Identifier	i		3095080	0					
ANR	3095341	SizeofExpression	sizeof ( EVRCAFrame )		3095080	1					
ANR	3095342	Sizeof	sizeof		3095080	0					
ANR	3095343	SizeofOperand	EVRCAFrame		3095080	1					
ANR	3095344	GotoStatement	goto erasure ;	77:12:1366:1378	3095080	1	True				
ANR	3095345	Identifier	erasure		3095080	0					
ANR	3095346	ElseStatement	else		3095080	0					
ANR	3095347	IfStatement	if ( e -> frame . lsp [ 0 ] == 0xf && e -> frame . lsp [ 1 ] == 0xf && e -> frame . energy_gain == 0xff )		3095080	0					
ANR	3095348	Condition	e -> frame . lsp [ 0 ] == 0xf && e -> frame . lsp [ 1 ] == 0xf && e -> frame . energy_gain == 0xff	79:15:1396:1507	3095080	0	True				
ANR	3095349	AndExpression	e -> frame . lsp [ 0 ] == 0xf && e -> frame . lsp [ 1 ] == 0xf && e -> frame . energy_gain == 0xff		3095080	0		&&			
ANR	3095350	EqualityExpression	e -> frame . lsp [ 0 ] == 0xf		3095080	0		==			
ANR	3095351	ArrayIndexing	e -> frame . lsp [ 0 ]		3095080	0					
ANR	3095352	MemberAccess	e -> frame . lsp		3095080	0					
ANR	3095353	PtrMemberAccess	e -> frame		3095080	0					
ANR	3095354	Identifier	e		3095080	0					
ANR	3095355	Identifier	frame		3095080	1					
ANR	3095356	Identifier	lsp		3095080	1					
ANR	3095357	PrimaryExpression	0		3095080	1					
ANR	3095358	PrimaryExpression	0xf		3095080	1					
ANR	3095359	AndExpression	e -> frame . lsp [ 1 ] == 0xf && e -> frame . energy_gain == 0xff		3095080	1		&&			
ANR	3095360	EqualityExpression	e -> frame . lsp [ 1 ] == 0xf		3095080	0		==			
ANR	3095361	ArrayIndexing	e -> frame . lsp [ 1 ]		3095080	0					
ANR	3095362	MemberAccess	e -> frame . lsp		3095080	0					
ANR	3095363	PtrMemberAccess	e -> frame		3095080	0					
ANR	3095364	Identifier	e		3095080	0					
ANR	3095365	Identifier	frame		3095080	1					
ANR	3095366	Identifier	lsp		3095080	1					
ANR	3095367	PrimaryExpression	1		3095080	1					
ANR	3095368	PrimaryExpression	0xf		3095080	1					
ANR	3095369	EqualityExpression	e -> frame . energy_gain == 0xff		3095080	1		==			
ANR	3095370	MemberAccess	e -> frame . energy_gain		3095080	0					
ANR	3095371	PtrMemberAccess	e -> frame		3095080	0					
ANR	3095372	Identifier	e		3095080	0					
ANR	3095373	Identifier	frame		3095080	1					
ANR	3095374	Identifier	energy_gain		3095080	1					
ANR	3095375	PrimaryExpression	0xff		3095080	1					
ANR	3095376	CompoundStatement		79:45:1377:1377	3095080	1					
ANR	3095377	GotoStatement	goto erasure ;	85:8:1521:1533	3095080	0	True				
ANR	3095378	Identifier	erasure		3095080	0					
ANR	3095379	IfStatement	if ( decode_lspf ( e ) < 0 )		3095080	17					
ANR	3095380	Condition	decode_lspf ( e ) < 0	91:8:1553:1570	3095080	0	True				
ANR	3095381	RelationalExpression	decode_lspf ( e ) < 0		3095080	0		<			
ANR	3095382	CallExpression	decode_lspf ( e )		3095080	0					
ANR	3095383	Callee	decode_lspf		3095080	0					
ANR	3095384	Identifier	decode_lspf		3095080	0					
ANR	3095385	ArgumentList	e		3095080	1					
ANR	3095386	Argument	e		3095080	0					
ANR	3095387	Identifier	e		3095080	0					
ANR	3095388	PrimaryExpression	0		3095080	1					
ANR	3095389	GotoStatement	goto erasure ;	93:8:1582:1594	3095080	1	True				
ANR	3095390	Identifier	erasure		3095080	0					
ANR	3095391	IfStatement	if ( e -> bitrate == RATE_FULL || e -> bitrate == RATE_HALF )		3095080	18					
ANR	3095392	Condition	e -> bitrate == RATE_FULL || e -> bitrate == RATE_HALF	97:8:1607:1656	3095080	0	True				
ANR	3095393	OrExpression	e -> bitrate == RATE_FULL || e -> bitrate == RATE_HALF		3095080	0		||			
ANR	3095394	EqualityExpression	e -> bitrate == RATE_FULL		3095080	0		==			
ANR	3095395	PtrMemberAccess	e -> bitrate		3095080	0					
ANR	3095396	Identifier	e		3095080	0					
ANR	3095397	Identifier	bitrate		3095080	1					
ANR	3095398	Identifier	RATE_FULL		3095080	1					
ANR	3095399	EqualityExpression	e -> bitrate == RATE_HALF		3095080	1		==			
ANR	3095400	PtrMemberAccess	e -> bitrate		3095080	0					
ANR	3095401	Identifier	e		3095080	0					
ANR	3095402	Identifier	bitrate		3095080	1					
ANR	3095403	Identifier	RATE_HALF		3095080	1					
ANR	3095404	CompoundStatement		93:60:1526:1526	3095080	1					
ANR	3095405	IfStatement	if ( e -> frame . pitch_delay > MAX_DELAY - MIN_DELAY )		3095080	0					
ANR	3095406	Condition	e -> frame . pitch_delay > MAX_DELAY - MIN_DELAY	101:12:1746:1789	3095080	0	True				
ANR	3095407	RelationalExpression	e -> frame . pitch_delay > MAX_DELAY - MIN_DELAY		3095080	0		>			
ANR	3095408	MemberAccess	e -> frame . pitch_delay		3095080	0					
ANR	3095409	PtrMemberAccess	e -> frame		3095080	0					
ANR	3095410	Identifier	e		3095080	0					
ANR	3095411	Identifier	frame		3095080	1					
ANR	3095412	Identifier	pitch_delay		3095080	1					
ANR	3095413	AdditiveExpression	MAX_DELAY - MIN_DELAY		3095080	1		-			
ANR	3095414	Identifier	MAX_DELAY		3095080	0					
ANR	3095415	Identifier	MIN_DELAY		3095080	1					
ANR	3095416	GotoStatement	goto erasure ;	103:12:1805:1817	3095080	1	True				
ANR	3095417	Identifier	erasure		3095080	0					
ANR	3095418	ExpressionStatement	e -> pitch_delay = e -> frame . pitch_delay + MIN_DELAY	107:8:1830:1879	3095080	1	True				
ANR	3095419	AssignmentExpression	e -> pitch_delay = e -> frame . pitch_delay + MIN_DELAY		3095080	0		=			
ANR	3095420	PtrMemberAccess	e -> pitch_delay		3095080	0					
ANR	3095421	Identifier	e		3095080	0					
ANR	3095422	Identifier	pitch_delay		3095080	1					
ANR	3095423	AdditiveExpression	e -> frame . pitch_delay + MIN_DELAY		3095080	1		+			
ANR	3095424	MemberAccess	e -> frame . pitch_delay		3095080	0					
ANR	3095425	PtrMemberAccess	e -> frame		3095080	0					
ANR	3095426	Identifier	e		3095080	0					
ANR	3095427	Identifier	frame		3095080	1					
ANR	3095428	Identifier	pitch_delay		3095080	1					
ANR	3095429	Identifier	MIN_DELAY		3095080	1					
ANR	3095430	IfStatement	if ( e -> frame . delay_diff )		3095080	2					
ANR	3095431	Condition	e -> frame . delay_diff	113:12:1967:1985	3095080	0	True				
ANR	3095432	MemberAccess	e -> frame . delay_diff		3095080	0					
ANR	3095433	PtrMemberAccess	e -> frame		3095080	0					
ANR	3095434	Identifier	e		3095080	0					
ANR	3095435	Identifier	frame		3095080	1					
ANR	3095436	Identifier	delay_diff		3095080	1					
ANR	3095437	CompoundStatement		111:12:1870:1919	3095080	1					
ANR	3095438	IdentifierDeclStatement	int p = e -> pitch_delay - e -> frame . delay_diff + 16 ;	115:12:2003:2052	3095080	0	True				
ANR	3095439	IdentifierDecl	p = e -> pitch_delay - e -> frame . delay_diff + 16		3095080	0					
ANR	3095440	IdentifierDeclType	int		3095080	0					
ANR	3095441	Identifier	p		3095080	1					
ANR	3095442	AssignmentExpression	p = e -> pitch_delay - e -> frame . delay_diff + 16		3095080	2		=			
ANR	3095443	Identifier	p		3095080	0					
ANR	3095444	AdditiveExpression	e -> pitch_delay - e -> frame . delay_diff + 16		3095080	1		-			
ANR	3095445	PtrMemberAccess	e -> pitch_delay		3095080	0					
ANR	3095446	Identifier	e		3095080	0					
ANR	3095447	Identifier	pitch_delay		3095080	1					
ANR	3095448	AdditiveExpression	e -> frame . delay_diff + 16		3095080	1		+			
ANR	3095449	MemberAccess	e -> frame . delay_diff		3095080	0					
ANR	3095450	PtrMemberAccess	e -> frame		3095080	0					
ANR	3095451	Identifier	e		3095080	0					
ANR	3095452	Identifier	frame		3095080	1					
ANR	3095453	Identifier	delay_diff		3095080	1					
ANR	3095454	PrimaryExpression	16		3095080	1					
ANR	3095455	IfStatement	if ( p < MIN_DELAY || p > MAX_DELAY )		3095080	1					
ANR	3095456	Condition	p < MIN_DELAY || p > MAX_DELAY	117:16:2071:2100	3095080	0	True				
ANR	3095457	OrExpression	p < MIN_DELAY || p > MAX_DELAY		3095080	0		||			
ANR	3095458	RelationalExpression	p < MIN_DELAY		3095080	0		<			
ANR	3095459	Identifier	p		3095080	0					
ANR	3095460	Identifier	MIN_DELAY		3095080	1					
ANR	3095461	RelationalExpression	p > MAX_DELAY		3095080	1		>			
ANR	3095462	Identifier	p		3095080	0					
ANR	3095463	Identifier	MAX_DELAY		3095080	1					
ANR	3095464	GotoStatement	goto erasure ;	119:16:2120:2132	3095080	1	True				
ANR	3095465	Identifier	erasure		3095080	0					
ANR	3095466	IfStatement	if ( e -> frame . delay_diff && e -> bitrate == RATE_FULL && e -> prev_error_flag )		3095080	3					
ANR	3095467	Condition	e -> frame . delay_diff && e -> bitrate == RATE_FULL && e -> prev_error_flag	127:12:2230:2310	3095080	0	True				
ANR	3095468	AndExpression	e -> frame . delay_diff && e -> bitrate == RATE_FULL && e -> prev_error_flag		3095080	0		&&			
ANR	3095469	MemberAccess	e -> frame . delay_diff		3095080	0					
ANR	3095470	PtrMemberAccess	e -> frame		3095080	0					
ANR	3095471	Identifier	e		3095080	0					
ANR	3095472	Identifier	frame		3095080	1					
ANR	3095473	Identifier	delay_diff		3095080	1					
ANR	3095474	AndExpression	e -> bitrate == RATE_FULL && e -> prev_error_flag		3095080	1		&&			
ANR	3095475	EqualityExpression	e -> bitrate == RATE_FULL		3095080	0		==			
ANR	3095476	PtrMemberAccess	e -> bitrate		3095080	0					
ANR	3095477	Identifier	e		3095080	0					
ANR	3095478	Identifier	bitrate		3095080	1					
ANR	3095479	Identifier	RATE_FULL		3095080	1					
ANR	3095480	PtrMemberAccess	e -> prev_error_flag		3095080	1					
ANR	3095481	Identifier	e		3095080	0					
ANR	3095482	Identifier	prev_error_flag		3095080	1					
ANR	3095483	CompoundStatement		127:12:2195:2206	3095080	1					
ANR	3095484	IdentifierDeclStatement	float delay ;	131:12:2328:2339	3095080	0	True				
ANR	3095485	IdentifierDecl	delay		3095080	0					
ANR	3095486	IdentifierDeclType	float		3095080	0					
ANR	3095487	Identifier	delay		3095080	1					
ANR	3095488	ExpressionStatement	"memcpy ( e -> pitch , e -> pitch_back , ACB_SIZE * sizeof ( float ) )"	135:12:2356:2413	3095080	1	True				
ANR	3095489	CallExpression	"memcpy ( e -> pitch , e -> pitch_back , ACB_SIZE * sizeof ( float ) )"		3095080	0					
ANR	3095490	Callee	memcpy		3095080	0					
ANR	3095491	Identifier	memcpy		3095080	0					
ANR	3095492	ArgumentList	e -> pitch		3095080	1					
ANR	3095493	Argument	e -> pitch		3095080	0					
ANR	3095494	PtrMemberAccess	e -> pitch		3095080	0					
ANR	3095495	Identifier	e		3095080	0					
ANR	3095496	Identifier	pitch		3095080	1					
ANR	3095497	Argument	e -> pitch_back		3095080	1					
ANR	3095498	PtrMemberAccess	e -> pitch_back		3095080	0					
ANR	3095499	Identifier	e		3095080	0					
ANR	3095500	Identifier	pitch_back		3095080	1					
ANR	3095501	Argument	ACB_SIZE * sizeof ( float )		3095080	2					
ANR	3095502	MultiplicativeExpression	ACB_SIZE * sizeof ( float )		3095080	0		*			
ANR	3095503	Identifier	ACB_SIZE		3095080	0					
ANR	3095504	SizeofExpression	sizeof ( float )		3095080	1					
ANR	3095505	Sizeof	sizeof		3095080	0					
ANR	3095506	SizeofOperand	float		3095080	1					
ANR	3095507	ExpressionStatement	delay = e -> prev_pitch_delay	139:12:2430:2457	3095080	2	True				
ANR	3095508	AssignmentExpression	delay = e -> prev_pitch_delay		3095080	0		=			
ANR	3095509	Identifier	delay		3095080	0					
ANR	3095510	PtrMemberAccess	e -> prev_pitch_delay		3095080	1					
ANR	3095511	Identifier	e		3095080	0					
ANR	3095512	Identifier	prev_pitch_delay		3095080	1					
ANR	3095513	ExpressionStatement	e -> prev_pitch_delay = delay - e -> frame . delay_diff + 16.0	141:12:2472:2528	3095080	3	True				
ANR	3095514	AssignmentExpression	e -> prev_pitch_delay = delay - e -> frame . delay_diff + 16.0		3095080	0		=			
ANR	3095515	PtrMemberAccess	e -> prev_pitch_delay		3095080	0					
ANR	3095516	Identifier	e		3095080	0					
ANR	3095517	Identifier	prev_pitch_delay		3095080	1					
ANR	3095518	AdditiveExpression	delay - e -> frame . delay_diff + 16.0		3095080	1		-			
ANR	3095519	Identifier	delay		3095080	0					
ANR	3095520	AdditiveExpression	e -> frame . delay_diff + 16.0		3095080	1		+			
ANR	3095521	MemberAccess	e -> frame . delay_diff		3095080	0					
ANR	3095522	PtrMemberAccess	e -> frame		3095080	0					
ANR	3095523	Identifier	e		3095080	0					
ANR	3095524	Identifier	frame		3095080	1					
ANR	3095525	Identifier	delay_diff		3095080	1					
ANR	3095526	PrimaryExpression	16.0		3095080	1					
ANR	3095527	IfStatement	if ( fabs ( e -> pitch_delay - delay ) > 15 )		3095080	4					
ANR	3095528	Condition	fabs ( e -> pitch_delay - delay ) > 15	145:16:2549:2581	3095080	0	True				
ANR	3095529	RelationalExpression	fabs ( e -> pitch_delay - delay ) > 15		3095080	0		>			
ANR	3095530	CallExpression	fabs ( e -> pitch_delay - delay )		3095080	0					
ANR	3095531	Callee	fabs		3095080	0					
ANR	3095532	Identifier	fabs		3095080	0					
ANR	3095533	ArgumentList	e -> pitch_delay - delay		3095080	1					
ANR	3095534	Argument	e -> pitch_delay - delay		3095080	0					
ANR	3095535	AdditiveExpression	e -> pitch_delay - delay		3095080	0		-			
ANR	3095536	PtrMemberAccess	e -> pitch_delay		3095080	0					
ANR	3095537	Identifier	e		3095080	0					
ANR	3095538	Identifier	pitch_delay		3095080	1					
ANR	3095539	Identifier	delay		3095080	1					
ANR	3095540	PrimaryExpression	15		3095080	1					
ANR	3095541	ExpressionStatement	delay = e -> pitch_delay	147:16:2601:2623	3095080	1	True				
ANR	3095542	AssignmentExpression	delay = e -> pitch_delay		3095080	0		=			
ANR	3095543	Identifier	delay		3095080	0					
ANR	3095544	PtrMemberAccess	e -> pitch_delay		3095080	1					
ANR	3095545	Identifier	e		3095080	0					
ANR	3095546	Identifier	pitch_delay		3095080	1					
ANR	3095547	ForStatement	for ( i = 0 ; i < NB_SUBFRAMES ; i ++ )		3095080	5					
ANR	3095548	ForInit	i = 0 ;	151:17:2645:2650	3095080	0	True				
ANR	3095549	AssignmentExpression	i = 0		3095080	0		=			
ANR	3095550	Identifier	i		3095080	0					
ANR	3095551	PrimaryExpression	0		3095080	1					
ANR	3095552	Condition	i < NB_SUBFRAMES	151:24:2652:2667	3095080	1	True				
ANR	3095553	RelationalExpression	i < NB_SUBFRAMES		3095080	0		<			
ANR	3095554	Identifier	i		3095080	0					
ANR	3095555	Identifier	NB_SUBFRAMES		3095080	1					
ANR	3095556	PostIncDecOperationExpression	i ++	151:42:2670:2672	3095080	2	True				
ANR	3095557	Identifier	i		3095080	0					
ANR	3095558	IncDec	++		3095080	1					
ANR	3095559	CompoundStatement		149:16:2561:2598	3095080	3					
ANR	3095560	IdentifierDeclStatement	int subframe_size = subframe_sizes [ i ] ;	153:16:2694:2731	3095080	0	True				
ANR	3095561	IdentifierDecl	subframe_size = subframe_sizes [ i ]		3095080	0					
ANR	3095562	IdentifierDeclType	int		3095080	0					
ANR	3095563	Identifier	subframe_size		3095080	1					
ANR	3095564	AssignmentExpression	subframe_size = subframe_sizes [ i ]		3095080	2		=			
ANR	3095565	Identifier	subframe_size		3095080	0					
ANR	3095566	ArrayIndexing	subframe_sizes [ i ]		3095080	1					
ANR	3095567	Identifier	subframe_sizes		3095080	0					
ANR	3095568	Identifier	i		3095080	1					
ANR	3095569	ExpressionStatement	"interpolate_delay ( idelay , delay , e -> prev_pitch_delay , i )"	157:16:2752:2808	3095080	1	True				
ANR	3095570	CallExpression	"interpolate_delay ( idelay , delay , e -> prev_pitch_delay , i )"		3095080	0					
ANR	3095571	Callee	interpolate_delay		3095080	0					
ANR	3095572	Identifier	interpolate_delay		3095080	0					
ANR	3095573	ArgumentList	idelay		3095080	1					
ANR	3095574	Argument	idelay		3095080	0					
ANR	3095575	Identifier	idelay		3095080	0					
ANR	3095576	Argument	delay		3095080	1					
ANR	3095577	Identifier	delay		3095080	0					
ANR	3095578	Argument	e -> prev_pitch_delay		3095080	2					
ANR	3095579	PtrMemberAccess	e -> prev_pitch_delay		3095080	0					
ANR	3095580	Identifier	e		3095080	0					
ANR	3095581	Identifier	prev_pitch_delay		3095080	1					
ANR	3095582	Argument	i		3095080	3					
ANR	3095583	Identifier	i		3095080	0					
ANR	3095584	ExpressionStatement	"acb_excitation ( e , e -> pitch + ACB_SIZE , e -> avg_acb_gain , idelay , subframe_size )"	159:16:2827:2905	3095080	2	True				
ANR	3095585	CallExpression	"acb_excitation ( e , e -> pitch + ACB_SIZE , e -> avg_acb_gain , idelay , subframe_size )"		3095080	0					
ANR	3095586	Callee	acb_excitation		3095080	0					
ANR	3095587	Identifier	acb_excitation		3095080	0					
ANR	3095588	ArgumentList	e		3095080	1					
ANR	3095589	Argument	e		3095080	0					
ANR	3095590	Identifier	e		3095080	0					
ANR	3095591	Argument	e -> pitch + ACB_SIZE		3095080	1					
ANR	3095592	AdditiveExpression	e -> pitch + ACB_SIZE		3095080	0		+			
ANR	3095593	PtrMemberAccess	e -> pitch		3095080	0					
ANR	3095594	Identifier	e		3095080	0					
ANR	3095595	Identifier	pitch		3095080	1					
ANR	3095596	Identifier	ACB_SIZE		3095080	1					
ANR	3095597	Argument	e -> avg_acb_gain		3095080	2					
ANR	3095598	PtrMemberAccess	e -> avg_acb_gain		3095080	0					
ANR	3095599	Identifier	e		3095080	0					
ANR	3095600	Identifier	avg_acb_gain		3095080	1					
ANR	3095601	Argument	idelay		3095080	3					
ANR	3095602	Identifier	idelay		3095080	0					
ANR	3095603	Argument	subframe_size		3095080	4					
ANR	3095604	Identifier	subframe_size		3095080	0					
ANR	3095605	ExpressionStatement	"memcpy ( e -> pitch , e -> pitch + subframe_size , ACB_SIZE * sizeof ( float ) )"	161:16:2924:2992	3095080	3	True				
ANR	3095606	CallExpression	"memcpy ( e -> pitch , e -> pitch + subframe_size , ACB_SIZE * sizeof ( float ) )"		3095080	0					
ANR	3095607	Callee	memcpy		3095080	0					
ANR	3095608	Identifier	memcpy		3095080	0					
ANR	3095609	ArgumentList	e -> pitch		3095080	1					
ANR	3095610	Argument	e -> pitch		3095080	0					
ANR	3095611	PtrMemberAccess	e -> pitch		3095080	0					
ANR	3095612	Identifier	e		3095080	0					
ANR	3095613	Identifier	pitch		3095080	1					
ANR	3095614	Argument	e -> pitch + subframe_size		3095080	1					
ANR	3095615	AdditiveExpression	e -> pitch + subframe_size		3095080	0		+			
ANR	3095616	PtrMemberAccess	e -> pitch		3095080	0					
ANR	3095617	Identifier	e		3095080	0					
ANR	3095618	Identifier	pitch		3095080	1					
ANR	3095619	Identifier	subframe_size		3095080	1					
ANR	3095620	Argument	ACB_SIZE * sizeof ( float )		3095080	2					
ANR	3095621	MultiplicativeExpression	ACB_SIZE * sizeof ( float )		3095080	0		*			
ANR	3095622	Identifier	ACB_SIZE		3095080	0					
ANR	3095623	SizeofExpression	sizeof ( float )		3095080	1					
ANR	3095624	Sizeof	sizeof		3095080	0					
ANR	3095625	SizeofOperand	float		3095080	1					
ANR	3095626	IfStatement	if ( fabs ( e -> pitch_delay - e -> prev_pitch_delay ) > 15 )		3095080	4					
ANR	3095627	Condition	fabs ( e -> pitch_delay - e -> prev_pitch_delay ) > 15	171:12:3107:3153	3095080	0	True				
ANR	3095628	RelationalExpression	fabs ( e -> pitch_delay - e -> prev_pitch_delay ) > 15		3095080	0		>			
ANR	3095629	CallExpression	fabs ( e -> pitch_delay - e -> prev_pitch_delay )		3095080	0					
ANR	3095630	Callee	fabs		3095080	0					
ANR	3095631	Identifier	fabs		3095080	0					
ANR	3095632	ArgumentList	e -> pitch_delay - e -> prev_pitch_delay		3095080	1					
ANR	3095633	Argument	e -> pitch_delay - e -> prev_pitch_delay		3095080	0					
ANR	3095634	AdditiveExpression	e -> pitch_delay - e -> prev_pitch_delay		3095080	0		-			
ANR	3095635	PtrMemberAccess	e -> pitch_delay		3095080	0					
ANR	3095636	Identifier	e		3095080	0					
ANR	3095637	Identifier	pitch_delay		3095080	1					
ANR	3095638	PtrMemberAccess	e -> prev_pitch_delay		3095080	1					
ANR	3095639	Identifier	e		3095080	0					
ANR	3095640	Identifier	prev_pitch_delay		3095080	1					
ANR	3095641	PrimaryExpression	15		3095080	1					
ANR	3095642	ExpressionStatement	e -> prev_pitch_delay = e -> pitch_delay	173:12:3169:3205	3095080	1	True				
ANR	3095643	AssignmentExpression	e -> prev_pitch_delay = e -> pitch_delay		3095080	0		=			
ANR	3095644	PtrMemberAccess	e -> prev_pitch_delay		3095080	0					
ANR	3095645	Identifier	e		3095080	0					
ANR	3095646	Identifier	prev_pitch_delay		3095080	1					
ANR	3095647	PtrMemberAccess	e -> pitch_delay		3095080	1					
ANR	3095648	Identifier	e		3095080	0					
ANR	3095649	Identifier	pitch_delay		3095080	1					
ANR	3095650	ExpressionStatement	e -> avg_acb_gain = e -> avg_fcb_gain = 0.0	177:8:3218:3257	3095080	5	True				
ANR	3095651	AssignmentExpression	e -> avg_acb_gain = e -> avg_fcb_gain = 0.0		3095080	0		=			
ANR	3095652	PtrMemberAccess	e -> avg_acb_gain		3095080	0					
ANR	3095653	Identifier	e		3095080	0					
ANR	3095654	Identifier	avg_acb_gain		3095080	1					
ANR	3095655	AssignmentExpression	e -> avg_fcb_gain = 0.0		3095080	1		=			
ANR	3095656	PtrMemberAccess	e -> avg_fcb_gain		3095080	0					
ANR	3095657	Identifier	e		3095080	0					
ANR	3095658	Identifier	avg_fcb_gain		3095080	1					
ANR	3095659	PrimaryExpression	0.0		3095080	1					
ANR	3095660	ElseStatement	else		3095080	0					
ANR	3095661	CompoundStatement		175:11:3138:3138	3095080	0					
ANR	3095662	ExpressionStatement	idelay [ 0 ] = idelay [ 1 ] = idelay [ 2 ] = MIN_DELAY	181:8:3282:3327	3095080	0	True				
ANR	3095663	AssignmentExpression	idelay [ 0 ] = idelay [ 1 ] = idelay [ 2 ] = MIN_DELAY		3095080	0		=			
ANR	3095664	ArrayIndexing	idelay [ 0 ]		3095080	0					
ANR	3095665	Identifier	idelay		3095080	0					
ANR	3095666	PrimaryExpression	0		3095080	1					
ANR	3095667	AssignmentExpression	idelay [ 1 ] = idelay [ 2 ] = MIN_DELAY		3095080	1		=			
ANR	3095668	ArrayIndexing	idelay [ 1 ]		3095080	0					
ANR	3095669	Identifier	idelay		3095080	0					
ANR	3095670	PrimaryExpression	1		3095080	1					
ANR	3095671	AssignmentExpression	idelay [ 2 ] = MIN_DELAY		3095080	1		=			
ANR	3095672	ArrayIndexing	idelay [ 2 ]		3095080	0					
ANR	3095673	Identifier	idelay		3095080	0					
ANR	3095674	PrimaryExpression	2		3095080	1					
ANR	3095675	Identifier	MIN_DELAY		3095080	1					
ANR	3095676	ForStatement	for ( i = 0 ; i < NB_SUBFRAMES ; i ++ )		3095080	1					
ANR	3095677	ForInit	i = 0 ;	187:13:3412:3417	3095080	0	True				
ANR	3095678	AssignmentExpression	i = 0		3095080	0		=			
ANR	3095679	Identifier	i		3095080	0					
ANR	3095680	PrimaryExpression	0		3095080	1					
ANR	3095681	Condition	i < NB_SUBFRAMES	187:20:3419:3434	3095080	1	True				
ANR	3095682	RelationalExpression	i < NB_SUBFRAMES		3095080	0		<			
ANR	3095683	Identifier	i		3095080	0					
ANR	3095684	Identifier	NB_SUBFRAMES		3095080	1					
ANR	3095685	PostIncDecOperationExpression	i ++	187:38:3437:3439	3095080	2	True				
ANR	3095686	Identifier	i		3095080	0					
ANR	3095687	IncDec	++		3095080	1					
ANR	3095688	ExpressionStatement	"e -> energy_vector [ i ] = pow ( 10 , evrc_energy_quant [ e -> frame . energy_gain ] [ i ] )"	189:12:3455:3528	3095080	3	True				
ANR	3095689	AssignmentExpression	"e -> energy_vector [ i ] = pow ( 10 , evrc_energy_quant [ e -> frame . energy_gain ] [ i ] )"		3095080	0		=			
ANR	3095690	ArrayIndexing	e -> energy_vector [ i ]		3095080	0					
ANR	3095691	PtrMemberAccess	e -> energy_vector		3095080	0					
ANR	3095692	Identifier	e		3095080	0					
ANR	3095693	Identifier	energy_vector		3095080	1					
ANR	3095694	Identifier	i		3095080	1					
ANR	3095695	CallExpression	"pow ( 10 , evrc_energy_quant [ e -> frame . energy_gain ] [ i ] )"		3095080	1					
ANR	3095696	Callee	pow		3095080	0					
ANR	3095697	Identifier	pow		3095080	0					
ANR	3095698	ArgumentList	10		3095080	1					
ANR	3095699	Argument	10		3095080	0					
ANR	3095700	PrimaryExpression	10		3095080	0					
ANR	3095701	Argument	evrc_energy_quant [ e -> frame . energy_gain ] [ i ]		3095080	1					
ANR	3095702	ArrayIndexing	evrc_energy_quant [ e -> frame . energy_gain ] [ i ]		3095080	0					
ANR	3095703	ArrayIndexing	evrc_energy_quant [ e -> frame . energy_gain ]		3095080	0					
ANR	3095704	Identifier	evrc_energy_quant		3095080	0					
ANR	3095705	MemberAccess	e -> frame . energy_gain		3095080	1					
ANR	3095706	PtrMemberAccess	e -> frame		3095080	0					
ANR	3095707	Identifier	e		3095080	0					
ANR	3095708	Identifier	frame		3095080	1					
ANR	3095709	Identifier	energy_gain		3095080	1					
ANR	3095710	Identifier	i		3095080	1					
ANR	3095711	ExpressionStatement	e -> prev_energy_gain = e -> frame . energy_gain	191:8:3539:3581	3095080	2	True				
ANR	3095712	AssignmentExpression	e -> prev_energy_gain = e -> frame . energy_gain		3095080	0		=			
ANR	3095713	PtrMemberAccess	e -> prev_energy_gain		3095080	0					
ANR	3095714	Identifier	e		3095080	0					
ANR	3095715	Identifier	prev_energy_gain		3095080	1					
ANR	3095716	MemberAccess	e -> frame . energy_gain		3095080	1					
ANR	3095717	PtrMemberAccess	e -> frame		3095080	0					
ANR	3095718	Identifier	e		3095080	0					
ANR	3095719	Identifier	frame		3095080	1					
ANR	3095720	Identifier	energy_gain		3095080	1					
ANR	3095721	ForStatement	for ( i = 0 ; i < NB_SUBFRAMES ; i ++ )		3095080	19					
ANR	3095722	ForInit	i = 0 ;	197:9:3602:3607	3095080	0	True				
ANR	3095723	AssignmentExpression	i = 0		3095080	0		=			
ANR	3095724	Identifier	i		3095080	0					
ANR	3095725	PrimaryExpression	0		3095080	1					
ANR	3095726	Condition	i < NB_SUBFRAMES	197:16:3609:3624	3095080	1	True				
ANR	3095727	RelationalExpression	i < NB_SUBFRAMES		3095080	0		<			
ANR	3095728	Identifier	i		3095080	0					
ANR	3095729	Identifier	NB_SUBFRAMES		3095080	1					
ANR	3095730	PostIncDecOperationExpression	i ++	197:34:3627:3629	3095080	2	True				
ANR	3095731	Identifier	i		3095080	0					
ANR	3095732	IncDec	++		3095080	1					
ANR	3095733	CompoundStatement		199:8:3605:3618	3095080	3					
ANR	3095734	IdentifierDeclStatement	float tmp [ SUBFRAME_SIZE + 6 ] = { 0 } ;	199:8:3643:3679	3095080	0	True				
ANR	3095735	IdentifierDecl	tmp [ SUBFRAME_SIZE + 6 ] = { 0 }		3095080	0					
ANR	3095736	IdentifierDeclType	float [ SUBFRAME_SIZE + 6 ]		3095080	0					
ANR	3095737	Identifier	tmp		3095080	1					
ANR	3095738	AdditiveExpression	SUBFRAME_SIZE + 6		3095080	2		+			
ANR	3095739	Identifier	SUBFRAME_SIZE		3095080	0					
ANR	3095740	PrimaryExpression	6		3095080	1					
ANR	3095741	AssignmentExpression	tmp [ SUBFRAME_SIZE + 6 ] = { 0 }		3095080	3		=			
ANR	3095742	Identifier	tmp		3095080	0					
ANR	3095743	InitializerList	0		3095080	1					
ANR	3095744	PrimaryExpression	0		3095080	0					
ANR	3095745	IdentifierDeclStatement	int subframe_size = subframe_sizes [ i ] ;	201:8:3690:3727	3095080	1	True				
ANR	3095746	IdentifierDecl	subframe_size = subframe_sizes [ i ]		3095080	0					
ANR	3095747	IdentifierDeclType	int		3095080	0					
ANR	3095748	Identifier	subframe_size		3095080	1					
ANR	3095749	AssignmentExpression	subframe_size = subframe_sizes [ i ]		3095080	2		=			
ANR	3095750	Identifier	subframe_size		3095080	0					
ANR	3095751	ArrayIndexing	subframe_sizes [ i ]		3095080	1					
ANR	3095752	Identifier	subframe_sizes		3095080	0					
ANR	3095753	Identifier	i		3095080	1					
ANR	3095754	IdentifierDeclStatement	int pitch_lag ;	203:8:3738:3751	3095080	2	True				
ANR	3095755	IdentifierDecl	pitch_lag		3095080	0					
ANR	3095756	IdentifierDeclType	int		3095080	0					
ANR	3095757	Identifier	pitch_lag		3095080	1					
ANR	3095758	ExpressionStatement	"interpolate_lsp ( ilspf , e -> lspf , e -> prev_lspf , i )"	207:8:3764:3812	3095080	3	True				
ANR	3095759	CallExpression	"interpolate_lsp ( ilspf , e -> lspf , e -> prev_lspf , i )"		3095080	0					
ANR	3095760	Callee	interpolate_lsp		3095080	0					
ANR	3095761	Identifier	interpolate_lsp		3095080	0					
ANR	3095762	ArgumentList	ilspf		3095080	1					
ANR	3095763	Argument	ilspf		3095080	0					
ANR	3095764	Identifier	ilspf		3095080	0					
ANR	3095765	Argument	e -> lspf		3095080	1					
ANR	3095766	PtrMemberAccess	e -> lspf		3095080	0					
ANR	3095767	Identifier	e		3095080	0					
ANR	3095768	Identifier	lspf		3095080	1					
ANR	3095769	Argument	e -> prev_lspf		3095080	2					
ANR	3095770	PtrMemberAccess	e -> prev_lspf		3095080	0					
ANR	3095771	Identifier	e		3095080	0					
ANR	3095772	Identifier	prev_lspf		3095080	1					
ANR	3095773	Argument	i		3095080	3					
ANR	3095774	Identifier	i		3095080	0					
ANR	3095775	IfStatement	if ( e -> bitrate != RATE_QUANT )		3095080	4					
ANR	3095776	Condition	e -> bitrate != RATE_QUANT	211:12:3829:3852	3095080	0	True				
ANR	3095777	EqualityExpression	e -> bitrate != RATE_QUANT		3095080	0		!=			
ANR	3095778	PtrMemberAccess	e -> bitrate		3095080	0					
ANR	3095779	Identifier	e		3095080	0					
ANR	3095780	Identifier	bitrate		3095080	1					
ANR	3095781	Identifier	RATE_QUANT		3095080	1					
ANR	3095782	ExpressionStatement	"interpolate_delay ( idelay , e -> pitch_delay , e -> prev_pitch_delay , i )"	213:12:3868:3933	3095080	1	True				
ANR	3095783	CallExpression	"interpolate_delay ( idelay , e -> pitch_delay , e -> prev_pitch_delay , i )"		3095080	0					
ANR	3095784	Callee	interpolate_delay		3095080	0					
ANR	3095785	Identifier	interpolate_delay		3095080	0					
ANR	3095786	ArgumentList	idelay		3095080	1					
ANR	3095787	Argument	idelay		3095080	0					
ANR	3095788	Identifier	idelay		3095080	0					
ANR	3095789	Argument	e -> pitch_delay		3095080	1					
ANR	3095790	PtrMemberAccess	e -> pitch_delay		3095080	0					
ANR	3095791	Identifier	e		3095080	0					
ANR	3095792	Identifier	pitch_delay		3095080	1					
ANR	3095793	Argument	e -> prev_pitch_delay		3095080	2					
ANR	3095794	PtrMemberAccess	e -> prev_pitch_delay		3095080	0					
ANR	3095795	Identifier	e		3095080	0					
ANR	3095796	Identifier	prev_pitch_delay		3095080	1					
ANR	3095797	Argument	i		3095080	3					
ANR	3095798	Identifier	i		3095080	0					
ANR	3095799	ExpressionStatement	pitch_lag = lrintf ( ( idelay [ 1 ] + idelay [ 0 ] ) / 2.0 )	217:8:3946:3995	3095080	5	True				
ANR	3095800	AssignmentExpression	pitch_lag = lrintf ( ( idelay [ 1 ] + idelay [ 0 ] ) / 2.0 )		3095080	0		=			
ANR	3095801	Identifier	pitch_lag		3095080	0					
ANR	3095802	CallExpression	lrintf ( ( idelay [ 1 ] + idelay [ 0 ] ) / 2.0 )		3095080	1					
ANR	3095803	Callee	lrintf		3095080	0					
ANR	3095804	Identifier	lrintf		3095080	0					
ANR	3095805	ArgumentList	( idelay [ 1 ] + idelay [ 0 ] ) / 2.0		3095080	1					
ANR	3095806	Argument	( idelay [ 1 ] + idelay [ 0 ] ) / 2.0		3095080	0					
ANR	3095807	MultiplicativeExpression	( idelay [ 1 ] + idelay [ 0 ] ) / 2.0		3095080	0		/			
ANR	3095808	AdditiveExpression	idelay [ 1 ] + idelay [ 0 ]		3095080	0		+			
ANR	3095809	ArrayIndexing	idelay [ 1 ]		3095080	0					
ANR	3095810	Identifier	idelay		3095080	0					
ANR	3095811	PrimaryExpression	1		3095080	1					
ANR	3095812	ArrayIndexing	idelay [ 0 ]		3095080	1					
ANR	3095813	Identifier	idelay		3095080	0					
ANR	3095814	PrimaryExpression	0		3095080	1					
ANR	3095815	PrimaryExpression	2.0		3095080	1					
ANR	3095816	ExpressionStatement	"decode_predictor_coeffs ( ilspf , ilpc )"	219:8:4006:4042	3095080	6	True				
ANR	3095817	CallExpression	"decode_predictor_coeffs ( ilspf , ilpc )"		3095080	0					
ANR	3095818	Callee	decode_predictor_coeffs		3095080	0					
ANR	3095819	Identifier	decode_predictor_coeffs		3095080	0					
ANR	3095820	ArgumentList	ilspf		3095080	1					
ANR	3095821	Argument	ilspf		3095080	0					
ANR	3095822	Identifier	ilspf		3095080	0					
ANR	3095823	Argument	ilpc		3095080	1					
ANR	3095824	Identifier	ilpc		3095080	0					
ANR	3095825	IfStatement	if ( e -> frame . lpc_flag && e -> prev_error_flag )		3095080	7					
ANR	3095826	Condition	e -> frame . lpc_flag && e -> prev_error_flag	225:12:4120:4158	3095080	0	True				
ANR	3095827	AndExpression	e -> frame . lpc_flag && e -> prev_error_flag		3095080	0		&&			
ANR	3095828	MemberAccess	e -> frame . lpc_flag		3095080	0					
ANR	3095829	PtrMemberAccess	e -> frame		3095080	0					
ANR	3095830	Identifier	e		3095080	0					
ANR	3095831	Identifier	frame		3095080	1					
ANR	3095832	Identifier	lpc_flag		3095080	1					
ANR	3095833	PtrMemberAccess	e -> prev_error_flag		3095080	1					
ANR	3095834	Identifier	e		3095080	0					
ANR	3095835	Identifier	prev_error_flag		3095080	1					
ANR	3095836	ExpressionStatement	"bandwidth_expansion ( ilpc , ilpc , 0.75 )"	227:12:4174:4211	3095080	1	True				
ANR	3095837	CallExpression	"bandwidth_expansion ( ilpc , ilpc , 0.75 )"		3095080	0					
ANR	3095838	Callee	bandwidth_expansion		3095080	0					
ANR	3095839	Identifier	bandwidth_expansion		3095080	0					
ANR	3095840	ArgumentList	ilpc		3095080	1					
ANR	3095841	Argument	ilpc		3095080	0					
ANR	3095842	Identifier	ilpc		3095080	0					
ANR	3095843	Argument	ilpc		3095080	1					
ANR	3095844	Identifier	ilpc		3095080	0					
ANR	3095845	Argument	0.75		3095080	2					
ANR	3095846	PrimaryExpression	0.75		3095080	0					
ANR	3095847	IfStatement	if ( e -> bitrate != RATE_QUANT )		3095080	8					
ANR	3095848	Condition	e -> bitrate != RATE_QUANT	231:12:4228:4251	3095080	0	True				
ANR	3095849	EqualityExpression	e -> bitrate != RATE_QUANT		3095080	0		!=			
ANR	3095850	PtrMemberAccess	e -> bitrate		3095080	0					
ANR	3095851	Identifier	e		3095080	0					
ANR	3095852	Identifier	bitrate		3095080	1					
ANR	3095853	Identifier	RATE_QUANT		3095080	1					
ANR	3095854	CompoundStatement		229:12:4136:4152	3095080	1					
ANR	3095855	IdentifierDeclStatement	"float acb_sum , f ;"	233:12:4269:4285	3095080	0	True				
ANR	3095856	IdentifierDecl	acb_sum		3095080	0					
ANR	3095857	IdentifierDeclType	float		3095080	0					
ANR	3095858	Identifier	acb_sum		3095080	1					
ANR	3095859	IdentifierDecl	f		3095080	1					
ANR	3095860	IdentifierDeclType	float		3095080	0					
ANR	3095861	Identifier	f		3095080	1					
ANR	3095862	ExpressionStatement	f = exp ( ( e -> bitrate == RATE_HALF ? 0.5 : 0.25 ) * ( e -> frame . fcb_gain [ i ] + 1 ) )	237:12:4302:4404	3095080	1	True				
ANR	3095863	AssignmentExpression	f = exp ( ( e -> bitrate == RATE_HALF ? 0.5 : 0.25 ) * ( e -> frame . fcb_gain [ i ] + 1 ) )		3095080	0		=			
ANR	3095864	Identifier	f		3095080	0					
ANR	3095865	CallExpression	exp ( ( e -> bitrate == RATE_HALF ? 0.5 : 0.25 ) * ( e -> frame . fcb_gain [ i ] + 1 ) )		3095080	1					
ANR	3095866	Callee	exp		3095080	0					
ANR	3095867	Identifier	exp		3095080	0					
ANR	3095868	ArgumentList	( e -> bitrate == RATE_HALF ? 0.5 : 0.25 ) * ( e -> frame . fcb_gain [ i ] + 1 )		3095080	1					
ANR	3095869	Argument	( e -> bitrate == RATE_HALF ? 0.5 : 0.25 ) * ( e -> frame . fcb_gain [ i ] + 1 )		3095080	0					
ANR	3095870	MultiplicativeExpression	( e -> bitrate == RATE_HALF ? 0.5 : 0.25 ) * ( e -> frame . fcb_gain [ i ] + 1 )		3095080	0		*			
ANR	3095871	ConditionalExpression	e -> bitrate == RATE_HALF ? 0.5 : 0.25		3095080	0					
ANR	3095872	Condition	e -> bitrate == RATE_HALF		3095080	0					
ANR	3095873	EqualityExpression	e -> bitrate == RATE_HALF		3095080	0		==			
ANR	3095874	PtrMemberAccess	e -> bitrate		3095080	0					
ANR	3095875	Identifier	e		3095080	0					
ANR	3095876	Identifier	bitrate		3095080	1					
ANR	3095877	Identifier	RATE_HALF		3095080	1					
ANR	3095878	PrimaryExpression	0.5		3095080	1					
ANR	3095879	PrimaryExpression	0.25		3095080	2					
ANR	3095880	AdditiveExpression	e -> frame . fcb_gain [ i ] + 1		3095080	1		+			
ANR	3095881	ArrayIndexing	e -> frame . fcb_gain [ i ]		3095080	0					
ANR	3095882	MemberAccess	e -> frame . fcb_gain		3095080	0					
ANR	3095883	PtrMemberAccess	e -> frame		3095080	0					
ANR	3095884	Identifier	e		3095080	0					
ANR	3095885	Identifier	frame		3095080	1					
ANR	3095886	Identifier	fcb_gain		3095080	1					
ANR	3095887	Identifier	i		3095080	1					
ANR	3095888	PrimaryExpression	1		3095080	1					
ANR	3095889	ExpressionStatement	acb_sum = pitch_gain_vq [ e -> frame . acb_gain [ i ] ]	241:12:4419:4464	3095080	2	True				
ANR	3095890	AssignmentExpression	acb_sum = pitch_gain_vq [ e -> frame . acb_gain [ i ] ]		3095080	0		=			
ANR	3095891	Identifier	acb_sum		3095080	0					
ANR	3095892	ArrayIndexing	pitch_gain_vq [ e -> frame . acb_gain [ i ] ]		3095080	1					
ANR	3095893	Identifier	pitch_gain_vq		3095080	0					
ANR	3095894	ArrayIndexing	e -> frame . acb_gain [ i ]		3095080	1					
ANR	3095895	MemberAccess	e -> frame . acb_gain		3095080	0					
ANR	3095896	PtrMemberAccess	e -> frame		3095080	0					
ANR	3095897	Identifier	e		3095080	0					
ANR	3095898	Identifier	frame		3095080	1					
ANR	3095899	Identifier	acb_gain		3095080	1					
ANR	3095900	Identifier	i		3095080	1					
ANR	3095901	ExpressionStatement	e -> avg_acb_gain += acb_sum / NB_SUBFRAMES	243:12:4479:4520	3095080	3	True				
ANR	3095902	AssignmentExpression	e -> avg_acb_gain += acb_sum / NB_SUBFRAMES		3095080	0		+=			
ANR	3095903	PtrMemberAccess	e -> avg_acb_gain		3095080	0					
ANR	3095904	Identifier	e		3095080	0					
ANR	3095905	Identifier	avg_acb_gain		3095080	1					
ANR	3095906	MultiplicativeExpression	acb_sum / NB_SUBFRAMES		3095080	1		/			
ANR	3095907	Identifier	acb_sum		3095080	0					
ANR	3095908	Identifier	NB_SUBFRAMES		3095080	1					
ANR	3095909	ExpressionStatement	e -> avg_fcb_gain += f / NB_SUBFRAMES	245:12:4535:4570	3095080	4	True				
ANR	3095910	AssignmentExpression	e -> avg_fcb_gain += f / NB_SUBFRAMES		3095080	0		+=			
ANR	3095911	PtrMemberAccess	e -> avg_fcb_gain		3095080	0					
ANR	3095912	Identifier	e		3095080	0					
ANR	3095913	Identifier	avg_fcb_gain		3095080	1					
ANR	3095914	MultiplicativeExpression	f / NB_SUBFRAMES		3095080	1		/			
ANR	3095915	Identifier	f		3095080	0					
ANR	3095916	Identifier	NB_SUBFRAMES		3095080	1					
ANR	3095917	ExpressionStatement	"acb_excitation ( e , e -> pitch + ACB_SIZE , acb_sum , idelay , subframe_size )"	249:12:4587:4685	3095080	5	True				
ANR	3095918	CallExpression	"acb_excitation ( e , e -> pitch + ACB_SIZE , acb_sum , idelay , subframe_size )"		3095080	0					
ANR	3095919	Callee	acb_excitation		3095080	0					
ANR	3095920	Identifier	acb_excitation		3095080	0					
ANR	3095921	ArgumentList	e		3095080	1					
ANR	3095922	Argument	e		3095080	0					
ANR	3095923	Identifier	e		3095080	0					
ANR	3095924	Argument	e -> pitch + ACB_SIZE		3095080	1					
ANR	3095925	AdditiveExpression	e -> pitch + ACB_SIZE		3095080	0		+			
ANR	3095926	PtrMemberAccess	e -> pitch		3095080	0					
ANR	3095927	Identifier	e		3095080	0					
ANR	3095928	Identifier	pitch		3095080	1					
ANR	3095929	Identifier	ACB_SIZE		3095080	1					
ANR	3095930	Argument	acb_sum		3095080	2					
ANR	3095931	Identifier	acb_sum		3095080	0					
ANR	3095932	Argument	idelay		3095080	3					
ANR	3095933	Identifier	idelay		3095080	0					
ANR	3095934	Argument	subframe_size		3095080	4					
ANR	3095935	Identifier	subframe_size		3095080	0					
ANR	3095936	ExpressionStatement	"fcb_excitation ( e , e -> frame . fcb_shape [ i ] , tmp , acb_sum , pitch_lag , subframe_size )"	253:12:4700:4808	3095080	6	True				
ANR	3095937	CallExpression	"fcb_excitation ( e , e -> frame . fcb_shape [ i ] , tmp , acb_sum , pitch_lag , subframe_size )"		3095080	0					
ANR	3095938	Callee	fcb_excitation		3095080	0					
ANR	3095939	Identifier	fcb_excitation		3095080	0					
ANR	3095940	ArgumentList	e		3095080	1					
ANR	3095941	Argument	e		3095080	0					
ANR	3095942	Identifier	e		3095080	0					
ANR	3095943	Argument	e -> frame . fcb_shape [ i ]		3095080	1					
ANR	3095944	ArrayIndexing	e -> frame . fcb_shape [ i ]		3095080	0					
ANR	3095945	MemberAccess	e -> frame . fcb_shape		3095080	0					
ANR	3095946	PtrMemberAccess	e -> frame		3095080	0					
ANR	3095947	Identifier	e		3095080	0					
ANR	3095948	Identifier	frame		3095080	1					
ANR	3095949	Identifier	fcb_shape		3095080	1					
ANR	3095950	Identifier	i		3095080	1					
ANR	3095951	Argument	tmp		3095080	2					
ANR	3095952	Identifier	tmp		3095080	0					
ANR	3095953	Argument	acb_sum		3095080	3					
ANR	3095954	Identifier	acb_sum		3095080	0					
ANR	3095955	Argument	pitch_lag		3095080	4					
ANR	3095956	Identifier	pitch_lag		3095080	0					
ANR	3095957	Argument	subframe_size		3095080	5					
ANR	3095958	Identifier	subframe_size		3095080	0					
ANR	3095959	ForStatement	for ( j = 0 ; j < subframe_size ; j ++ )		3095080	7					
ANR	3095960	ForInit	j = 0 ;	261:17:4903:4908	3095080	0	True				
ANR	3095961	AssignmentExpression	j = 0		3095080	0		=			
ANR	3095962	Identifier	j		3095080	0					
ANR	3095963	PrimaryExpression	0		3095080	1					
ANR	3095964	Condition	j < subframe_size	261:24:4910:4926	3095080	1	True				
ANR	3095965	RelationalExpression	j < subframe_size		3095080	0		<			
ANR	3095966	Identifier	j		3095080	0					
ANR	3095967	Identifier	subframe_size		3095080	1					
ANR	3095968	PostIncDecOperationExpression	j ++	261:43:4929:4931	3095080	2	True				
ANR	3095969	Identifier	j		3095080	0					
ANR	3095970	IncDec	++		3095080	1					
ANR	3095971	ExpressionStatement	e -> pitch [ ACB_SIZE + j ] += f * tmp [ j ]	263:16:4951:4987	3095080	3	True				
ANR	3095972	AssignmentExpression	e -> pitch [ ACB_SIZE + j ] += f * tmp [ j ]		3095080	0		+=			
ANR	3095973	ArrayIndexing	e -> pitch [ ACB_SIZE + j ]		3095080	0					
ANR	3095974	PtrMemberAccess	e -> pitch		3095080	0					
ANR	3095975	Identifier	e		3095080	0					
ANR	3095976	Identifier	pitch		3095080	1					
ANR	3095977	AdditiveExpression	ACB_SIZE + j		3095080	1		+			
ANR	3095978	Identifier	ACB_SIZE		3095080	0					
ANR	3095979	Identifier	j		3095080	1					
ANR	3095980	MultiplicativeExpression	f * tmp [ j ]		3095080	1		*			
ANR	3095981	Identifier	f		3095080	0					
ANR	3095982	ArrayIndexing	tmp [ j ]		3095080	1					
ANR	3095983	Identifier	tmp		3095080	0					
ANR	3095984	Identifier	j		3095080	1					
ANR	3095985	ExpressionStatement	"e -> fade_scale = FFMIN ( e -> fade_scale + 0.2 , 1.0 )"	265:12:5002:5049	3095080	8	True				
ANR	3095986	AssignmentExpression	"e -> fade_scale = FFMIN ( e -> fade_scale + 0.2 , 1.0 )"		3095080	0		=			
ANR	3095987	PtrMemberAccess	e -> fade_scale		3095080	0					
ANR	3095988	Identifier	e		3095080	0					
ANR	3095989	Identifier	fade_scale		3095080	1					
ANR	3095990	CallExpression	"FFMIN ( e -> fade_scale + 0.2 , 1.0 )"		3095080	1					
ANR	3095991	Callee	FFMIN		3095080	0					
ANR	3095992	Identifier	FFMIN		3095080	0					
ANR	3095993	ArgumentList	e -> fade_scale + 0.2		3095080	1					
ANR	3095994	Argument	e -> fade_scale + 0.2		3095080	0					
ANR	3095995	AdditiveExpression	e -> fade_scale + 0.2		3095080	0		+			
ANR	3095996	PtrMemberAccess	e -> fade_scale		3095080	0					
ANR	3095997	Identifier	e		3095080	0					
ANR	3095998	Identifier	fade_scale		3095080	1					
ANR	3095999	PrimaryExpression	0.2		3095080	1					
ANR	3096000	Argument	1.0		3095080	1					
ANR	3096001	PrimaryExpression	1.0		3095080	0					
ANR	3096002	ElseStatement	else		3095080	0					
ANR	3096003	CompoundStatement		263:15:4934:4934	3095080	0					
ANR	3096004	ForStatement	for ( j = 0 ; j < subframe_size ; j ++ )		3095080	0					
ANR	3096005	ForInit	j = 0 ;	269:17:5087:5092	3095080	0	True				
ANR	3096006	AssignmentExpression	j = 0		3095080	0		=			
ANR	3096007	Identifier	j		3095080	0					
ANR	3096008	PrimaryExpression	0		3095080	1					
ANR	3096009	Condition	j < subframe_size	269:24:5094:5110	3095080	1	True				
ANR	3096010	RelationalExpression	j < subframe_size		3095080	0		<			
ANR	3096011	Identifier	j		3095080	0					
ANR	3096012	Identifier	subframe_size		3095080	1					
ANR	3096013	PostIncDecOperationExpression	j ++	269:43:5113:5115	3095080	2	True				
ANR	3096014	Identifier	j		3095080	0					
ANR	3096015	IncDec	++		3095080	1					
ANR	3096016	ExpressionStatement	e -> pitch [ ACB_SIZE + j ] = e -> energy_vector [ i ]	271:16:5135:5179	3095080	3	True				
ANR	3096017	AssignmentExpression	e -> pitch [ ACB_SIZE + j ] = e -> energy_vector [ i ]		3095080	0		=			
ANR	3096018	ArrayIndexing	e -> pitch [ ACB_SIZE + j ]		3095080	0					
ANR	3096019	PtrMemberAccess	e -> pitch		3095080	0					
ANR	3096020	Identifier	e		3095080	0					
ANR	3096021	Identifier	pitch		3095080	1					
ANR	3096022	AdditiveExpression	ACB_SIZE + j		3095080	1		+			
ANR	3096023	Identifier	ACB_SIZE		3095080	0					
ANR	3096024	Identifier	j		3095080	1					
ANR	3096025	ArrayIndexing	e -> energy_vector [ i ]		3095080	1					
ANR	3096026	PtrMemberAccess	e -> energy_vector		3095080	0					
ANR	3096027	Identifier	e		3095080	0					
ANR	3096028	Identifier	energy_vector		3095080	1					
ANR	3096029	Identifier	i		3095080	1					
ANR	3096030	ExpressionStatement	"memcpy ( e -> pitch , e -> pitch + subframe_size , ACB_SIZE * sizeof ( float ) )"	277:8:5203:5271	3095080	9	True				
ANR	3096031	CallExpression	"memcpy ( e -> pitch , e -> pitch + subframe_size , ACB_SIZE * sizeof ( float ) )"		3095080	0					
ANR	3096032	Callee	memcpy		3095080	0					
ANR	3096033	Identifier	memcpy		3095080	0					
ANR	3096034	ArgumentList	e -> pitch		3095080	1					
ANR	3096035	Argument	e -> pitch		3095080	0					
ANR	3096036	PtrMemberAccess	e -> pitch		3095080	0					
ANR	3096037	Identifier	e		3095080	0					
ANR	3096038	Identifier	pitch		3095080	1					
ANR	3096039	Argument	e -> pitch + subframe_size		3095080	1					
ANR	3096040	AdditiveExpression	e -> pitch + subframe_size		3095080	0		+			
ANR	3096041	PtrMemberAccess	e -> pitch		3095080	0					
ANR	3096042	Identifier	e		3095080	0					
ANR	3096043	Identifier	pitch		3095080	1					
ANR	3096044	Identifier	subframe_size		3095080	1					
ANR	3096045	Argument	ACB_SIZE * sizeof ( float )		3095080	2					
ANR	3096046	MultiplicativeExpression	ACB_SIZE * sizeof ( float )		3095080	0		*			
ANR	3096047	Identifier	ACB_SIZE		3095080	0					
ANR	3096048	SizeofExpression	sizeof ( float )		3095080	1					
ANR	3096049	Sizeof	sizeof		3095080	0					
ANR	3096050	SizeofOperand	float		3095080	1					
ANR	3096051	ExpressionStatement	"synthesis_filter ( e -> pitch + ACB_SIZE , ilpc , e -> synthesis , subframe_size , tmp )"	281:8:5284:5387	3095080	10	True				
ANR	3096052	CallExpression	"synthesis_filter ( e -> pitch + ACB_SIZE , ilpc , e -> synthesis , subframe_size , tmp )"		3095080	0					
ANR	3096053	Callee	synthesis_filter		3095080	0					
ANR	3096054	Identifier	synthesis_filter		3095080	0					
ANR	3096055	ArgumentList	e -> pitch + ACB_SIZE		3095080	1					
ANR	3096056	Argument	e -> pitch + ACB_SIZE		3095080	0					
ANR	3096057	AdditiveExpression	e -> pitch + ACB_SIZE		3095080	0		+			
ANR	3096058	PtrMemberAccess	e -> pitch		3095080	0					
ANR	3096059	Identifier	e		3095080	0					
ANR	3096060	Identifier	pitch		3095080	1					
ANR	3096061	Identifier	ACB_SIZE		3095080	1					
ANR	3096062	Argument	ilpc		3095080	1					
ANR	3096063	Identifier	ilpc		3095080	0					
ANR	3096064	Argument	e -> synthesis		3095080	2					
ANR	3096065	PtrMemberAccess	e -> synthesis		3095080	0					
ANR	3096066	Identifier	e		3095080	0					
ANR	3096067	Identifier	synthesis		3095080	1					
ANR	3096068	Argument	subframe_size		3095080	3					
ANR	3096069	Identifier	subframe_size		3095080	0					
ANR	3096070	Argument	tmp		3095080	4					
ANR	3096071	Identifier	tmp		3095080	0					
ANR	3096072	ExpressionStatement	"postfilter ( e , tmp , ilpc , samples , pitch_lag , & postfilter_coeffs [ e -> bitrate ] , subframe_size )"	285:8:5398:5509	3095080	11	True				
ANR	3096073	CallExpression	"postfilter ( e , tmp , ilpc , samples , pitch_lag , & postfilter_coeffs [ e -> bitrate ] , subframe_size )"		3095080	0					
ANR	3096074	Callee	postfilter		3095080	0					
ANR	3096075	Identifier	postfilter		3095080	0					
ANR	3096076	ArgumentList	e		3095080	1					
ANR	3096077	Argument	e		3095080	0					
ANR	3096078	Identifier	e		3095080	0					
ANR	3096079	Argument	tmp		3095080	1					
ANR	3096080	Identifier	tmp		3095080	0					
ANR	3096081	Argument	ilpc		3095080	2					
ANR	3096082	Identifier	ilpc		3095080	0					
ANR	3096083	Argument	samples		3095080	3					
ANR	3096084	Identifier	samples		3095080	0					
ANR	3096085	Argument	pitch_lag		3095080	4					
ANR	3096086	Identifier	pitch_lag		3095080	0					
ANR	3096087	Argument	& postfilter_coeffs [ e -> bitrate ]		3095080	5					
ANR	3096088	UnaryOperationExpression	& postfilter_coeffs [ e -> bitrate ]		3095080	0					
ANR	3096089	UnaryOperator	&		3095080	0					
ANR	3096090	ArrayIndexing	postfilter_coeffs [ e -> bitrate ]		3095080	1					
ANR	3096091	Identifier	postfilter_coeffs		3095080	0					
ANR	3096092	PtrMemberAccess	e -> bitrate		3095080	1					
ANR	3096093	Identifier	e		3095080	0					
ANR	3096094	Identifier	bitrate		3095080	1					
ANR	3096095	Argument	subframe_size		3095080	6					
ANR	3096096	Identifier	subframe_size		3095080	0					
ANR	3096097	ExpressionStatement	samples += subframe_size	291:8:5522:5546	3095080	12	True				
ANR	3096098	AssignmentExpression	samples += subframe_size		3095080	0		+=			
ANR	3096099	Identifier	samples		3095080	0					
ANR	3096100	Identifier	subframe_size		3095080	1					
ANR	3096101	IfStatement	if ( error_flag )		3095080	20					
ANR	3096102	Condition	error_flag	297:8:5566:5575	3095080	0	True				
ANR	3096103	Identifier	error_flag		3095080	0					
ANR	3096104	CompoundStatement		293:20:5445:5445	3095080	1					
ANR	3096105	Label	erasure :	299:0:5581:5588	3095080	0	True				
ANR	3096106	Identifier	erasure		3095080	0					
ANR	3096107	ExpressionStatement	error_flag = 1	301:8:5599:5613	3095080	1	True				
ANR	3096108	AssignmentExpression	error_flag = 1		3095080	0		=			
ANR	3096109	Identifier	error_flag		3095080	0					
ANR	3096110	PrimaryExpression	1		3095080	1					
ANR	3096111	ExpressionStatement	"av_log ( avctx , AV_LOG_WARNING , ""frame erasure\\n"" )"	303:8:5624:5672	3095080	2	True				
ANR	3096112	CallExpression	"av_log ( avctx , AV_LOG_WARNING , ""frame erasure\\n"" )"		3095080	0					
ANR	3096113	Callee	av_log		3095080	0					
ANR	3096114	Identifier	av_log		3095080	0					
ANR	3096115	ArgumentList	avctx		3095080	1					
ANR	3096116	Argument	avctx		3095080	0					
ANR	3096117	Identifier	avctx		3095080	0					
ANR	3096118	Argument	AV_LOG_WARNING		3095080	1					
ANR	3096119	Identifier	AV_LOG_WARNING		3095080	0					
ANR	3096120	Argument	"""frame erasure\\n"""		3095080	2					
ANR	3096121	PrimaryExpression	"""frame erasure\\n"""		3095080	0					
ANR	3096122	ExpressionStatement	"frame_erasure ( e , samples )"	305:8:5683:5708	3095080	3	True				
ANR	3096123	CallExpression	"frame_erasure ( e , samples )"		3095080	0					
ANR	3096124	Callee	frame_erasure		3095080	0					
ANR	3096125	Identifier	frame_erasure		3095080	0					
ANR	3096126	ArgumentList	e		3095080	1					
ANR	3096127	Argument	e		3095080	0					
ANR	3096128	Identifier	e		3095080	0					
ANR	3096129	Argument	samples		3095080	1					
ANR	3096130	Identifier	samples		3095080	0					
ANR	3096131	ExpressionStatement	"memcpy ( e -> prev_lspf , e -> lspf , sizeof ( e -> prev_lspf ) )"	311:4:5724:5775	3095080	21	True				
ANR	3096132	CallExpression	"memcpy ( e -> prev_lspf , e -> lspf , sizeof ( e -> prev_lspf ) )"		3095080	0					
ANR	3096133	Callee	memcpy		3095080	0					
ANR	3096134	Identifier	memcpy		3095080	0					
ANR	3096135	ArgumentList	e -> prev_lspf		3095080	1					
ANR	3096136	Argument	e -> prev_lspf		3095080	0					
ANR	3096137	PtrMemberAccess	e -> prev_lspf		3095080	0					
ANR	3096138	Identifier	e		3095080	0					
ANR	3096139	Identifier	prev_lspf		3095080	1					
ANR	3096140	Argument	e -> lspf		3095080	1					
ANR	3096141	PtrMemberAccess	e -> lspf		3095080	0					
ANR	3096142	Identifier	e		3095080	0					
ANR	3096143	Identifier	lspf		3095080	1					
ANR	3096144	Argument	sizeof ( e -> prev_lspf )		3095080	2					
ANR	3096145	SizeofExpression	sizeof ( e -> prev_lspf )		3095080	0					
ANR	3096146	Sizeof	sizeof		3095080	0					
ANR	3096147	PtrMemberAccess	e -> prev_lspf		3095080	1					
ANR	3096148	Identifier	e		3095080	0					
ANR	3096149	Identifier	prev_lspf		3095080	1					
ANR	3096150	ExpressionStatement	e -> prev_error_flag = error_flag	313:4:5782:5816	3095080	22	True				
ANR	3096151	AssignmentExpression	e -> prev_error_flag = error_flag		3095080	0		=			
ANR	3096152	PtrMemberAccess	e -> prev_error_flag		3095080	0					
ANR	3096153	Identifier	e		3095080	0					
ANR	3096154	Identifier	prev_error_flag		3095080	1					
ANR	3096155	Identifier	error_flag		3095080	1					
ANR	3096156	ExpressionStatement	e -> last_valid_bitrate = e -> bitrate	315:4:5823:5857	3095080	23	True				
ANR	3096157	AssignmentExpression	e -> last_valid_bitrate = e -> bitrate		3095080	0		=			
ANR	3096158	PtrMemberAccess	e -> last_valid_bitrate		3095080	0					
ANR	3096159	Identifier	e		3095080	0					
ANR	3096160	Identifier	last_valid_bitrate		3095080	1					
ANR	3096161	PtrMemberAccess	e -> bitrate		3095080	1					
ANR	3096162	Identifier	e		3095080	0					
ANR	3096163	Identifier	bitrate		3095080	1					
ANR	3096164	IfStatement	if ( e -> bitrate != RATE_QUANT )		3095080	24					
ANR	3096165	Condition	e -> bitrate != RATE_QUANT	319:8:5870:5893	3095080	0	True				
ANR	3096166	EqualityExpression	e -> bitrate != RATE_QUANT		3095080	0		!=			
ANR	3096167	PtrMemberAccess	e -> bitrate		3095080	0					
ANR	3096168	Identifier	e		3095080	0					
ANR	3096169	Identifier	bitrate		3095080	1					
ANR	3096170	Identifier	RATE_QUANT		3095080	1					
ANR	3096171	ExpressionStatement	e -> prev_pitch_delay = e -> pitch_delay	321:8:5905:5941	3095080	1	True				
ANR	3096172	AssignmentExpression	e -> prev_pitch_delay = e -> pitch_delay		3095080	0		=			
ANR	3096173	PtrMemberAccess	e -> prev_pitch_delay		3095080	0					
ANR	3096174	Identifier	e		3095080	0					
ANR	3096175	Identifier	prev_pitch_delay		3095080	1					
ANR	3096176	PtrMemberAccess	e -> pitch_delay		3095080	1					
ANR	3096177	Identifier	e		3095080	0					
ANR	3096178	Identifier	pitch_delay		3095080	1					
ANR	3096179	ExpressionStatement	samples = ( float * ) frame -> data [ 0 ]	325:4:5950:5983	3095080	25	True				
ANR	3096180	AssignmentExpression	samples = ( float * ) frame -> data [ 0 ]		3095080	0		=			
ANR	3096181	Identifier	samples		3095080	0					
ANR	3096182	CastExpression	( float * ) frame -> data [ 0 ]		3095080	1					
ANR	3096183	CastTarget	float *		3095080	0					
ANR	3096184	ArrayIndexing	frame -> data [ 0 ]		3095080	1					
ANR	3096185	PtrMemberAccess	frame -> data		3095080	0					
ANR	3096186	Identifier	frame		3095080	0					
ANR	3096187	Identifier	data		3095080	1					
ANR	3096188	PrimaryExpression	0		3095080	1					
ANR	3096189	ForStatement	for ( i = 0 ; i < 160 ; i ++ )		3095080	26					
ANR	3096190	ForInit	i = 0 ;	327:9:5995:6000	3095080	0	True				
ANR	3096191	AssignmentExpression	i = 0		3095080	0		=			
ANR	3096192	Identifier	i		3095080	0					
ANR	3096193	PrimaryExpression	0		3095080	1					
ANR	3096194	Condition	i < 160	327:16:6002:6008	3095080	1	True				
ANR	3096195	RelationalExpression	i < 160		3095080	0		<			
ANR	3096196	Identifier	i		3095080	0					
ANR	3096197	PrimaryExpression	160		3095080	1					
ANR	3096198	PostIncDecOperationExpression	i ++	327:25:6011:6013	3095080	2	True				
ANR	3096199	Identifier	i		3095080	0					
ANR	3096200	IncDec	++		3095080	1					
ANR	3096201	ExpressionStatement	samples [ i ] /= 32768	329:8:6025:6044	3095080	3	True				
ANR	3096202	AssignmentExpression	samples [ i ] /= 32768		3095080	0		/=			
ANR	3096203	ArrayIndexing	samples [ i ]		3095080	0					
ANR	3096204	Identifier	samples		3095080	0					
ANR	3096205	Identifier	i		3095080	1					
ANR	3096206	PrimaryExpression	32768		3095080	1					
ANR	3096207	ExpressionStatement	* got_frame_ptr = 1	333:4:6053:6073	3095080	27	True				
ANR	3096208	AssignmentExpression	* got_frame_ptr = 1		3095080	0		=			
ANR	3096209	UnaryOperationExpression	* got_frame_ptr		3095080	0					
ANR	3096210	UnaryOperator	*		3095080	0					
ANR	3096211	Identifier	got_frame_ptr		3095080	1					
ANR	3096212	PrimaryExpression	1		3095080	1					
ANR	3096213	ReturnStatement	return avpkt -> size ;	337:4:6082:6100	3095080	28	True				
ANR	3096214	PtrMemberAccess	avpkt -> size		3095080	0					
ANR	3096215	Identifier	avpkt		3095080	0					
ANR	3096216	Identifier	size		3095080	1					
ANR	3096217	ReturnType	static int		3095080	1					
ANR	3096218	Identifier	evrc_decode_frame		3095080	2					
ANR	3096219	ParameterList	"AVCodecContext * avctx , void * data , int * got_frame_ptr , AVPacket * avpkt"		3095080	3					
ANR	3096220	Parameter	AVCodecContext * avctx	1:29:29:49	3095080	0	True				
ANR	3096221	ParameterType	AVCodecContext *		3095080	0					
ANR	3096222	Identifier	avctx		3095080	1					
ANR	3096223	Parameter	void * data	1:52:52:61	3095080	1	True				
ANR	3096224	ParameterType	void *		3095080	0					
ANR	3096225	Identifier	data		3095080	1					
ANR	3096226	Parameter	int * got_frame_ptr	3:29:94:111	3095080	2	True				
ANR	3096227	ParameterType	int *		3095080	0					
ANR	3096228	Identifier	got_frame_ptr		3095080	1					
ANR	3096229	Parameter	AVPacket * avpkt	3:49:114:128	3095080	3	True				
ANR	3096230	ParameterType	AVPacket *		3095080	0					
ANR	3096231	Identifier	avpkt		3095080	1					
ANR	3096232	CFGEntryNode	ENTRY		3095080		True				
ANR	3096233	CFGExitNode	EXIT		3095080		True				
ANR	3096234	Symbol	e -> frame . lsp		3095080						
ANR	3096235	Symbol	e -> frame . pitch_delay		3095080						
ANR	3096236	Symbol	e -> prev_pitch_delay		3095080						
ANR	3096237	Symbol	SILENCE		3095080						
ANR	3096238	Symbol	* e -> frame . acb_gain		3095080						
ANR	3096239	Symbol	got_frame_ptr		3095080						
ANR	3096240	Symbol	avpkt		3095080						
ANR	3096241	Symbol	RATE_ERRS		3095080						
ANR	3096242	Symbol	tmp		3095080						
ANR	3096243	Symbol	e -> frame . energy_gain		3095080						
ANR	3096244	Symbol	e -> prev_energy_gain		3095080						
ANR	3096245	Symbol	exp		3095080						
ANR	3096246	Symbol	lrintf		3095080						
ANR	3096247	Symbol	* * e -> frame . energy_gain		3095080						
ANR	3096248	Symbol	determine_bitrate		3095080						
ANR	3096249	Symbol	e -> prev_error_flag		3095080						
ANR	3096250	Symbol	* e -> energy_vector		3095080						
ANR	3096251	Symbol	samples		3095080						
ANR	3096252	Symbol	* * e -> frame . acb_gain		3095080						
ANR	3096253	Symbol	* e -> frame . fcb_gain		3095080						
ANR	3096254	Symbol	RATE_FULL		3095080						
ANR	3096255	Symbol	delay		3095080						
ANR	3096256	Symbol	error_flag		3095080						
ANR	3096257	Symbol	* * * e		3095080						
ANR	3096258	Symbol	* tmp		3095080						
ANR	3096259	Symbol	e -> frame . fcb_gain		3095080						
ANR	3096260	Symbol	NB_SUBFRAMES		3095080						
ANR	3096261	Symbol	* e -> frame		3095080						
ANR	3096262	Symbol	MAX_DELAY		3095080						
ANR	3096263	Symbol	* subframe_sizes		3095080						
ANR	3096264	Symbol	* * e -> frame		3095080						
ANR	3096265	Symbol	evrc_energy_quant		3095080						
ANR	3096266	Symbol	& buf_size		3095080						
ANR	3096267	Symbol	pow		3095080						
ANR	3096268	Symbol	avctx		3095080						
ANR	3096269	Symbol	ilspf		3095080						
ANR	3096270	Symbol	e -> frame . acb_gain		3095080						
ANR	3096271	Symbol	& buf		3095080						
ANR	3096272	Symbol	& e -> gb		3095080						
ANR	3096273	Symbol	e -> synthesis		3095080						
ANR	3096274	Symbol	frame -> nb_samples		3095080						
ANR	3096275	Symbol	fabs		3095080						
ANR	3096276	Symbol	e		3095080						
ANR	3096277	Symbol	f		3095080						
ANR	3096278	Symbol	idelay		3095080						
ANR	3096279	Symbol	ilpc		3095080						
ANR	3096280	Symbol	pitch_lag		3095080						
ANR	3096281	Symbol	* got_frame_ptr		3095080						
ANR	3096282	Symbol	i		3095080						
ANR	3096283	Symbol	e -> avg_acb_gain		3095080						
ANR	3096284	Symbol	* pitch_gain_vq		3095080						
ANR	3096285	Symbol	j		3095080						
ANR	3096286	Symbol	p		3095080						
ANR	3096287	Symbol	decode_lspf		3095080						
ANR	3096288	Symbol	e -> lspf		3095080						
ANR	3096289	Symbol	buf		3095080						
ANR	3096290	Symbol	AV_LOG_WARNING		3095080						
ANR	3096291	Symbol	* e -> frame . lsp		3095080						
ANR	3096292	Symbol	* * evrc_energy_quant		3095080						
ANR	3096293	Symbol	data		3095080						
ANR	3096294	Symbol	FFMIN		3095080						
ANR	3096295	Symbol	RATE_HALF		3095080						
ANR	3096296	Symbol	e -> pitch_delay		3095080						
ANR	3096297	Symbol	e -> fade_scale		3095080						
ANR	3096298	Symbol	* * frame		3095080						
ANR	3096299	Symbol	& e -> frame		3095080						
ANR	3096300	Symbol	ff_get_buffer		3095080						
ANR	3096301	Symbol	RATE_QUANT		3095080						
ANR	3096302	Symbol	* samples		3095080						
ANR	3096303	Symbol	* evrc_energy_quant		3095080						
ANR	3096304	Symbol	subframe_sizes		3095080						
ANR	3096305	Symbol	frame -> data		3095080						
ANR	3096306	Symbol	RATE_QUARTER		3095080						
ANR	3096307	Symbol	ret		3095080						
ANR	3096308	Symbol	* * i		3095080						
ANR	3096309	Symbol	* e -> frame . fcb_shape		3095080						
ANR	3096310	Symbol	buf_size		3095080						
ANR	3096311	Symbol	* * e		3095080						
ANR	3096312	Symbol	e -> avg_fcb_gain		3095080						
ANR	3096313	Symbol	subframe_size		3095080						
ANR	3096314	Symbol	e -> bitrate		3095080						
ANR	3096315	Symbol	* avctx		3095080						
ANR	3096316	Symbol	acb_sum		3095080						
ANR	3096317	Symbol	* e -> pitch		3095080						
ANR	3096318	Symbol	e -> pitch		3095080						
ANR	3096319	Symbol	avpkt -> data		3095080						
ANR	3096320	Symbol	frame		3095080						
ANR	3096321	Symbol	* ACB_SIZE		3095080						
ANR	3096322	Symbol	e -> last_valid_bitrate		3095080						
ANR	3096323	Symbol	* frame -> data		3095080						
ANR	3096324	Symbol	* frame		3095080						
ANR	3096325	Symbol	postfilter_coeffs		3095080						
ANR	3096326	Symbol	e -> energy_vector		3095080						
ANR	3096327	Symbol	e -> frame . delay_diff		3095080						
ANR	3096328	Symbol	e -> pitch_back		3095080						
ANR	3096329	Symbol	pitch_gain_vq		3095080						
ANR	3096330	Symbol	e -> frame		3095080						
ANR	3096331	Symbol	avpkt -> size		3095080						
ANR	3096332	Symbol	e -> frame . lpc_flag		3095080						
ANR	3096333	Symbol	* avpkt		3095080						
ANR	3096334	Symbol	* idelay		3095080						
ANR	3096335	Symbol	avctx -> priv_data		3095080						
ANR	3096336	Symbol	* e		3095080						
ANR	3096337	Symbol	ACB_SIZE		3095080						
ANR	3096338	Symbol	* e -> frame . energy_gain		3095080						
ANR	3096339	Symbol	* i		3095080						
ANR	3096340	Symbol	* j		3095080						
ANR	3096341	Symbol	e -> prev_lspf		3095080						
ANR	3096342	Symbol	* p		3095080						
ANR	3096343	Symbol	MIN_DELAY		3095080						
ANR	3096344	Symbol	e -> frame . fcb_shape		3095080						
