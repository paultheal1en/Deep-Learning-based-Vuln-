command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8767466	File	/home/p4ultr4n/workplace/ReVeal/raw_code/v9fs_synth_pwritev_0.c								
ANR	8767467	Function	v9fs_synth_pwritev	1:0:0:782							
ANR	8767468	FunctionDef	"v9fs_synth_pwritev (FsContext * ctx , V9fsFidOpenState * fs , const struct iovec * iov , int iovcnt , off_t offset)"		8767467	0					
ANR	8767469	CompoundStatement		7:0:194:782	8767467	0					
ANR	8767470	IdentifierDeclStatement	"int i , count = 0 , wcount ;"	9:4:201:225	8767467	0	True				
ANR	8767471	IdentifierDecl	i		8767467	0					
ANR	8767472	IdentifierDeclType	int		8767467	0					
ANR	8767473	Identifier	i		8767467	1					
ANR	8767474	IdentifierDecl	count = 0		8767467	1					
ANR	8767475	IdentifierDeclType	int		8767467	0					
ANR	8767476	Identifier	count		8767467	1					
ANR	8767477	AssignmentExpression	count = 0		8767467	2		=			
ANR	8767478	Identifier	count		8767467	0					
ANR	8767479	PrimaryExpression	0		8767467	1					
ANR	8767480	IdentifierDecl	wcount		8767467	2					
ANR	8767481	IdentifierDeclType	int		8767467	0					
ANR	8767482	Identifier	wcount		8767467	1					
ANR	8767483	IdentifierDeclStatement	V9fsSynthOpenState * synth_open = fs -> private ;	11:4:232:276	8767467	1	True				
ANR	8767484	IdentifierDecl	* synth_open = fs -> private		8767467	0					
ANR	8767485	IdentifierDeclType	V9fsSynthOpenState *		8767467	0					
ANR	8767486	Identifier	synth_open		8767467	1					
ANR	8767487	AssignmentExpression	* synth_open = fs -> private		8767467	2		=			
ANR	8767488	Identifier	synth_open		8767467	0					
ANR	8767489	PtrMemberAccess	fs -> private		8767467	1					
ANR	8767490	Identifier	fs		8767467	0					
ANR	8767491	Identifier	private		8767467	1					
ANR	8767492	IdentifierDeclStatement	V9fsSynthNode * node = synth_open -> node ;	13:4:283:321	8767467	2	True				
ANR	8767493	IdentifierDecl	* node = synth_open -> node		8767467	0					
ANR	8767494	IdentifierDeclType	V9fsSynthNode *		8767467	0					
ANR	8767495	Identifier	node		8767467	1					
ANR	8767496	AssignmentExpression	* node = synth_open -> node		8767467	2		=			
ANR	8767497	Identifier	node		8767467	0					
ANR	8767498	PtrMemberAccess	synth_open -> node		8767467	1					
ANR	8767499	Identifier	synth_open		8767467	0					
ANR	8767500	Identifier	node		8767467	1					
ANR	8767501	IfStatement	if ( ! node -> attr -> write )		8767467	3					
ANR	8767502	Condition	! node -> attr -> write	15:8:332:349	8767467	0	True				
ANR	8767503	UnaryOperationExpression	! node -> attr -> write		8767467	0					
ANR	8767504	UnaryOperator	!		8767467	0					
ANR	8767505	PtrMemberAccess	node -> attr -> write		8767467	1					
ANR	8767506	PtrMemberAccess	node -> attr		8767467	0					
ANR	8767507	Identifier	node		8767467	0					
ANR	8767508	Identifier	attr		8767467	1					
ANR	8767509	Identifier	write		8767467	1					
ANR	8767510	CompoundStatement		9:28:157:157	8767467	1					
ANR	8767511	ExpressionStatement	errno = EPERM	17:8:363:376	8767467	0	True				
ANR	8767512	AssignmentExpression	errno = EPERM		8767467	0		=			
ANR	8767513	Identifier	errno		8767467	0					
ANR	8767514	Identifier	EPERM		8767467	1					
ANR	8767515	ReturnStatement	return - 1 ;	19:8:387:396	8767467	1	True				
ANR	8767516	UnaryOperationExpression	- 1		8767467	0					
ANR	8767517	UnaryOperator	-		8767467	0					
ANR	8767518	PrimaryExpression	1		8767467	1					
ANR	8767519	ForStatement	for ( i = 0 ; i < iovcnt ; i ++ )		8767467	4					
ANR	8767520	ForInit	i = 0 ;	23:9:415:420	8767467	0	True				
ANR	8767521	AssignmentExpression	i = 0		8767467	0		=			
ANR	8767522	Identifier	i		8767467	0					
ANR	8767523	PrimaryExpression	0		8767467	1					
ANR	8767524	Condition	i < iovcnt	23:16:422:431	8767467	1	True				
ANR	8767525	RelationalExpression	i < iovcnt		8767467	0		<			
ANR	8767526	Identifier	i		8767467	0					
ANR	8767527	Identifier	iovcnt		8767467	1					
ANR	8767528	PostIncDecOperationExpression	i ++	23:28:434:436	8767467	2	True				
ANR	8767529	Identifier	i		8767467	0					
ANR	8767530	IncDec	++		8767467	1					
ANR	8767531	CompoundStatement		17:33:244:244	8767467	3					
ANR	8767532	ExpressionStatement	"wcount = node -> attr -> write ( iov [ i ] . iov_base , iov [ i ] . iov_len , offset , node -> private )"	25:8:450:568	8767467	0	True				
ANR	8767533	AssignmentExpression	"wcount = node -> attr -> write ( iov [ i ] . iov_base , iov [ i ] . iov_len , offset , node -> private )"		8767467	0		=			
ANR	8767534	Identifier	wcount		8767467	0					
ANR	8767535	CallExpression	"node -> attr -> write ( iov [ i ] . iov_base , iov [ i ] . iov_len , offset , node -> private )"		8767467	1					
ANR	8767536	Callee	node -> attr -> write		8767467	0					
ANR	8767537	PtrMemberAccess	node -> attr -> write		8767467	0					
ANR	8767538	PtrMemberAccess	node -> attr		8767467	0					
ANR	8767539	Identifier	node		8767467	0					
ANR	8767540	Identifier	attr		8767467	1					
ANR	8767541	Identifier	write		8767467	1					
ANR	8767542	ArgumentList	iov [ i ] . iov_base		8767467	1					
ANR	8767543	Argument	iov [ i ] . iov_base		8767467	0					
ANR	8767544	MemberAccess	iov [ i ] . iov_base		8767467	0					
ANR	8767545	ArrayIndexing	iov [ i ]		8767467	0					
ANR	8767546	Identifier	iov		8767467	0					
ANR	8767547	Identifier	i		8767467	1					
ANR	8767548	Identifier	iov_base		8767467	1					
ANR	8767549	Argument	iov [ i ] . iov_len		8767467	1					
ANR	8767550	MemberAccess	iov [ i ] . iov_len		8767467	0					
ANR	8767551	ArrayIndexing	iov [ i ]		8767467	0					
ANR	8767552	Identifier	iov		8767467	0					
ANR	8767553	Identifier	i		8767467	1					
ANR	8767554	Identifier	iov_len		8767467	1					
ANR	8767555	Argument	offset		8767467	2					
ANR	8767556	Identifier	offset		8767467	0					
ANR	8767557	Argument	node -> private		8767467	3					
ANR	8767558	PtrMemberAccess	node -> private		8767467	0					
ANR	8767559	Identifier	node		8767467	0					
ANR	8767560	Identifier	private		8767467	1					
ANR	8767561	ExpressionStatement	offset += wcount	29:8:579:595	8767467	1	True				
ANR	8767562	AssignmentExpression	offset += wcount		8767467	0		+=			
ANR	8767563	Identifier	offset		8767467	0					
ANR	8767564	Identifier	wcount		8767467	1					
ANR	8767565	ExpressionStatement	count += wcount	31:8:606:622	8767467	2	True				
ANR	8767566	AssignmentExpression	count += wcount		8767467	0		+=			
ANR	8767567	Identifier	count		8767467	0					
ANR	8767568	Identifier	wcount		8767467	1					
ANR	8767569	IfStatement	if ( wcount < iov [ i ] . iov_len )		8767467	3					
ANR	8767570	Condition	wcount < iov [ i ] . iov_len	35:12:697:719	8767467	0	True				
ANR	8767571	RelationalExpression	wcount < iov [ i ] . iov_len		8767467	0		<			
ANR	8767572	Identifier	wcount		8767467	0					
ANR	8767573	MemberAccess	iov [ i ] . iov_len		8767467	1					
ANR	8767574	ArrayIndexing	iov [ i ]		8767467	0					
ANR	8767575	Identifier	iov		8767467	0					
ANR	8767576	Identifier	i		8767467	1					
ANR	8767577	Identifier	iov_len		8767467	1					
ANR	8767578	CompoundStatement		29:37:527:527	8767467	1					
ANR	8767579	BreakStatement	break ;	37:12:737:742	8767467	0	True				
ANR	8767580	ReturnStatement	return count ;	43:4:767:779	8767467	5	True				
ANR	8767581	Identifier	count		8767467	0					
ANR	8767582	ReturnType	static ssize_t		8767467	1					
ANR	8767583	Identifier	v9fs_synth_pwritev		8767467	2					
ANR	8767584	ParameterList	"FsContext * ctx , V9fsFidOpenState * fs , const struct iovec * iov , int iovcnt , off_t offset"		8767467	3					
ANR	8767585	Parameter	FsContext * ctx	1:34:34:47	8767467	0	True				
ANR	8767586	ParameterType	FsContext *		8767467	0					
ANR	8767587	Identifier	ctx		8767467	1					
ANR	8767588	Parameter	V9fsFidOpenState * fs	1:50:50:69	8767467	1	True				
ANR	8767589	ParameterType	V9fsFidOpenState *		8767467	0					
ANR	8767590	Identifier	fs		8767467	1					
ANR	8767591	Parameter	const struct iovec * iov	3:34:107:129	8767467	2	True				
ANR	8767592	ParameterType	const struct iovec *		8767467	0					
ANR	8767593	Identifier	iov		8767467	1					
ANR	8767594	Parameter	int iovcnt	5:34:167:176	8767467	3	True				
ANR	8767595	ParameterType	int		8767467	0					
ANR	8767596	Identifier	iovcnt		8767467	1					
ANR	8767597	Parameter	off_t offset	5:46:179:190	8767467	4	True				
ANR	8767598	ParameterType	off_t		8767467	0					
ANR	8767599	Identifier	offset		8767467	1					
ANR	8767600	CFGEntryNode	ENTRY		8767467		True				
ANR	8767601	CFGExitNode	EXIT		8767467		True				
ANR	8767602	Symbol	wcount		8767467						
ANR	8767603	Symbol	EPERM		8767467						
ANR	8767604	Symbol	* iov		8767467						
ANR	8767605	Symbol	fs		8767467						
ANR	8767606	Symbol	* fs		8767467						
ANR	8767607	Symbol	iov		8767467						
ANR	8767608	Symbol	node -> attr -> write		8767467						
ANR	8767609	Symbol	* node -> attr		8767467						
ANR	8767610	Symbol	iovcnt		8767467						
ANR	8767611	Symbol	* node		8767467						
ANR	8767612	Symbol	node -> private		8767467						
ANR	8767613	Symbol	synth_open -> node		8767467						
ANR	8767614	Symbol	errno		8767467						
ANR	8767615	Symbol	offset		8767467						
ANR	8767616	Symbol	ctx		8767467						
ANR	8767617	Symbol	count		8767467						
ANR	8767618	Symbol	i		8767467						
ANR	8767619	Symbol	node -> attr		8767467						
ANR	8767620	Symbol	iov [ i ] . iov_len		8767467						
ANR	8767621	Symbol	* synth_open		8767467						
ANR	8767622	Symbol	iov [ i ] . iov_base		8767467						
ANR	8767623	Symbol	node		8767467						
ANR	8767624	Symbol	* i		8767467						
ANR	8767625	Symbol	* * node		8767467						
ANR	8767626	Symbol	synth_open		8767467						
ANR	8767627	Symbol	fs -> private		8767467						
