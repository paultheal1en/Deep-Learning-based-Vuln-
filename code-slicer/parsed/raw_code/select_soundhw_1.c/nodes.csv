command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	7740408	File	/home/p4ultr4n/workplace/ReVeal/raw_code/select_soundhw_1.c								
ANR	7740409	Function	select_soundhw	1:0:0:1534							
ANR	7740410	FunctionDef	select_soundhw (const char * optarg)		7740409	0					
ANR	7740411	CompoundStatement		3:0:41:1534	7740409	0					
ANR	7740412	IdentifierDeclStatement	struct soundhw * c ;	5:4:48:65	7740409	0	True				
ANR	7740413	IdentifierDecl	* c		7740409	0					
ANR	7740414	IdentifierDeclType	struct soundhw *		7740409	0					
ANR	7740415	Identifier	c		7740409	1					
ANR	7740416	IfStatement	if ( * optarg == '?' )		7740409	1					
ANR	7740417	Condition	* optarg == '?'	9:8:78:91	7740409	0	True				
ANR	7740418	EqualityExpression	* optarg == '?'		7740409	0		==			
ANR	7740419	UnaryOperationExpression	* optarg		7740409	0					
ANR	7740420	UnaryOperator	*		7740409	0					
ANR	7740421	Identifier	optarg		7740409	1					
ANR	7740422	PrimaryExpression	'?'		7740409	1					
ANR	7740423	CompoundStatement		7:24:52:52	7740409	1					
ANR	7740424	Label	show_valid_cards :	11:4:101:117	7740409	0	True				
ANR	7740425	Identifier	show_valid_cards		7740409	0					
ANR	7740426	ExpressionStatement	"printf ( ""Valid sound card names (comma separated):\\n"" )"	15:8:130:183	7740409	1	True				
ANR	7740427	CallExpression	"printf ( ""Valid sound card names (comma separated):\\n"" )"		7740409	0					
ANR	7740428	Callee	printf		7740409	0					
ANR	7740429	Identifier	printf		7740409	0					
ANR	7740430	ArgumentList	"""Valid sound card names (comma separated):\\n"""		7740409	1					
ANR	7740431	Argument	"""Valid sound card names (comma separated):\\n"""		7740409	0					
ANR	7740432	PrimaryExpression	"""Valid sound card names (comma separated):\\n"""		7740409	0					
ANR	7740433	ForStatement	for ( c = soundhw ; c -> name ; ++ c )		7740409	2					
ANR	7740434	ForInit	c = soundhw ;	17:13:199:210	7740409	0	True				
ANR	7740435	AssignmentExpression	c = soundhw		7740409	0		=			
ANR	7740436	Identifier	c		7740409	0					
ANR	7740437	Identifier	soundhw		7740409	1					
ANR	7740438	Condition	c -> name	17:26:212:218	7740409	1	True				
ANR	7740439	PtrMemberAccess	c -> name		7740409	0					
ANR	7740440	Identifier	c		7740409	0					
ANR	7740441	Identifier	name		7740409	1					
ANR	7740442	UnaryExpression	++ c	17:35:221:223	7740409	2	True				
ANR	7740443	IncDec	++		7740409	0					
ANR	7740444	Identifier	c		7740409	1					
ANR	7740445	CompoundStatement		15:40:184:184	7740409	3					
ANR	7740446	ExpressionStatement	"printf ( ""%-11s %s\\n"" , c -> name , c -> descr )"	19:12:241:281	7740409	0	True				
ANR	7740447	CallExpression	"printf ( ""%-11s %s\\n"" , c -> name , c -> descr )"		7740409	0					
ANR	7740448	Callee	printf		7740409	0					
ANR	7740449	Identifier	printf		7740409	0					
ANR	7740450	ArgumentList	"""%-11s %s\\n"""		7740409	1					
ANR	7740451	Argument	"""%-11s %s\\n"""		7740409	0					
ANR	7740452	PrimaryExpression	"""%-11s %s\\n"""		7740409	0					
ANR	7740453	Argument	c -> name		7740409	1					
ANR	7740454	PtrMemberAccess	c -> name		7740409	0					
ANR	7740455	Identifier	c		7740409	0					
ANR	7740456	Identifier	name		7740409	1					
ANR	7740457	Argument	c -> descr		7740409	2					
ANR	7740458	PtrMemberAccess	c -> descr		7740409	0					
ANR	7740459	Identifier	c		7740409	0					
ANR	7740460	Identifier	descr		7740409	1					
ANR	7740461	ExpressionStatement	"printf ( ""\\n-soundhw all will enable all of the above\\n"" )"	23:8:303:358	7740409	3	True				
ANR	7740462	CallExpression	"printf ( ""\\n-soundhw all will enable all of the above\\n"" )"		7740409	0					
ANR	7740463	Callee	printf		7740409	0					
ANR	7740464	Identifier	printf		7740409	0					
ANR	7740465	ArgumentList	"""\\n-soundhw all will enable all of the above\\n"""		7740409	1					
ANR	7740466	Argument	"""\\n-soundhw all will enable all of the above\\n"""		7740409	0					
ANR	7740467	PrimaryExpression	"""\\n-soundhw all will enable all of the above\\n"""		7740409	0					
ANR	7740468	ExpressionStatement	exit ( * optarg != '?' )	25:8:369:389	7740409	4	True				
ANR	7740469	CallExpression	exit ( * optarg != '?' )		7740409	0					
ANR	7740470	Callee	exit		7740409	0					
ANR	7740471	Identifier	exit		7740409	0					
ANR	7740472	ArgumentList	* optarg != '?'		7740409	1					
ANR	7740473	Argument	* optarg != '?'		7740409	0					
ANR	7740474	EqualityExpression	* optarg != '?'		7740409	0		!=			
ANR	7740475	UnaryOperationExpression	* optarg		7740409	0					
ANR	7740476	UnaryOperator	*		7740409	0					
ANR	7740477	Identifier	optarg		7740409	1					
ANR	7740478	PrimaryExpression	'?'		7740409	1					
ANR	7740479	ElseStatement	else		7740409	0					
ANR	7740480	CompoundStatement		35:8:438:454	7740409	0					
ANR	7740481	IdentifierDeclStatement	size_t l ;	31:8:419:427	7740409	0	True				
ANR	7740482	IdentifierDecl	l		7740409	0					
ANR	7740483	IdentifierDeclType	size_t		7740409	0					
ANR	7740484	Identifier	l		7740409	1					
ANR	7740485	IdentifierDeclStatement	const char * p ;	33:8:438:451	7740409	1	True				
ANR	7740486	IdentifierDecl	* p		7740409	0					
ANR	7740487	IdentifierDeclType	const char *		7740409	0					
ANR	7740488	Identifier	p		7740409	1					
ANR	7740489	IdentifierDeclStatement	char * e ;	35:8:462:469	7740409	2	True				
ANR	7740490	IdentifierDecl	* e		7740409	0					
ANR	7740491	IdentifierDeclType	char *		7740409	0					
ANR	7740492	Identifier	e		7740409	1					
ANR	7740493	IdentifierDeclStatement	int bad_card = 0 ;	37:8:480:496	7740409	3	True				
ANR	7740494	IdentifierDecl	bad_card = 0		7740409	0					
ANR	7740495	IdentifierDeclType	int		7740409	0					
ANR	7740496	Identifier	bad_card		7740409	1					
ANR	7740497	AssignmentExpression	bad_card = 0		7740409	2		=			
ANR	7740498	Identifier	bad_card		7740409	0					
ANR	7740499	PrimaryExpression	0		7740409	1					
ANR	7740500	IfStatement	"if ( ! strcmp ( optarg , ""all"" ) )"		7740409	4					
ANR	7740501	Condition	"! strcmp ( optarg , ""all"" )"	41:12:513:534	7740409	0	True				
ANR	7740502	UnaryOperationExpression	"! strcmp ( optarg , ""all"" )"		7740409	0					
ANR	7740503	UnaryOperator	!		7740409	0					
ANR	7740504	CallExpression	"strcmp ( optarg , ""all"" )"		7740409	1					
ANR	7740505	Callee	strcmp		7740409	0					
ANR	7740506	Identifier	strcmp		7740409	0					
ANR	7740507	ArgumentList	optarg		7740409	1					
ANR	7740508	Argument	optarg		7740409	0					
ANR	7740509	Identifier	optarg		7740409	0					
ANR	7740510	Argument	"""all"""		7740409	1					
ANR	7740511	PrimaryExpression	"""all"""		7740409	0					
ANR	7740512	CompoundStatement		39:36:495:495	7740409	1					
ANR	7740513	ForStatement	for ( c = soundhw ; c -> name ; ++ c )		7740409	0					
ANR	7740514	ForInit	c = soundhw ;	43:17:557:568	7740409	0	True				
ANR	7740515	AssignmentExpression	c = soundhw		7740409	0		=			
ANR	7740516	Identifier	c		7740409	0					
ANR	7740517	Identifier	soundhw		7740409	1					
ANR	7740518	Condition	c -> name	43:30:570:576	7740409	1	True				
ANR	7740519	PtrMemberAccess	c -> name		7740409	0					
ANR	7740520	Identifier	c		7740409	0					
ANR	7740521	Identifier	name		7740409	1					
ANR	7740522	UnaryExpression	++ c	43:39:579:581	7740409	2	True				
ANR	7740523	IncDec	++		7740409	0					
ANR	7740524	Identifier	c		7740409	1					
ANR	7740525	CompoundStatement		41:44:542:542	7740409	3					
ANR	7740526	ExpressionStatement	c -> enabled = 1	45:16:603:617	7740409	0	True				
ANR	7740527	AssignmentExpression	c -> enabled = 1		7740409	0		=			
ANR	7740528	PtrMemberAccess	c -> enabled		7740409	0					
ANR	7740529	Identifier	c		7740409	0					
ANR	7740530	Identifier	enabled		7740409	1					
ANR	7740531	PrimaryExpression	1		7740409	1					
ANR	7740532	ReturnStatement	return ;	49:12:647:653	7740409	1	True				
ANR	7740533	ExpressionStatement	p = optarg	55:8:677:687	7740409	5	True				
ANR	7740534	AssignmentExpression	p = optarg		7740409	0		=			
ANR	7740535	Identifier	p		7740409	0					
ANR	7740536	Identifier	optarg		7740409	1					
ANR	7740537	WhileStatement	while ( * p )		7740409	6					
ANR	7740538	Condition	* p	57:15:705:706	7740409	0	True				
ANR	7740539	UnaryOperationExpression	* p		7740409	0					
ANR	7740540	UnaryOperator	*		7740409	0					
ANR	7740541	Identifier	p		7740409	1					
ANR	7740542	CompoundStatement		55:19:667:667	7740409	1					
ANR	7740543	ExpressionStatement	"e = strchr ( p , ',' )"	59:12:724:742	7740409	0	True				
ANR	7740544	AssignmentExpression	"e = strchr ( p , ',' )"		7740409	0		=			
ANR	7740545	Identifier	e		7740409	0					
ANR	7740546	CallExpression	"strchr ( p , ',' )"		7740409	1					
ANR	7740547	Callee	strchr		7740409	0					
ANR	7740548	Identifier	strchr		7740409	0					
ANR	7740549	ArgumentList	p		7740409	1					
ANR	7740550	Argument	p		7740409	0					
ANR	7740551	Identifier	p		7740409	0					
ANR	7740552	Argument	"','"		7740409	1					
ANR	7740553	PrimaryExpression	"','"		7740409	0					
ANR	7740554	ExpressionStatement	l = ! e ? strlen ( p ) : ( size_t ) ( e - p )	61:12:757:794	7740409	1	True				
ANR	7740555	AssignmentExpression	l = ! e ? strlen ( p ) : ( size_t ) ( e - p )		7740409	0		=			
ANR	7740556	Identifier	l		7740409	0					
ANR	7740557	ConditionalExpression	! e ? strlen ( p ) : ( size_t ) ( e - p )		7740409	1					
ANR	7740558	Condition	! e		7740409	0					
ANR	7740559	UnaryOperationExpression	! e		7740409	0					
ANR	7740560	UnaryOperator	!		7740409	0					
ANR	7740561	Identifier	e		7740409	1					
ANR	7740562	CallExpression	strlen ( p )		7740409	1					
ANR	7740563	Callee	strlen		7740409	0					
ANR	7740564	Identifier	strlen		7740409	0					
ANR	7740565	ArgumentList	p		7740409	1					
ANR	7740566	Argument	p		7740409	0					
ANR	7740567	Identifier	p		7740409	0					
ANR	7740568	CastExpression	( size_t ) ( e - p )		7740409	2					
ANR	7740569	CastTarget	size_t		7740409	0					
ANR	7740570	AdditiveExpression	e - p		7740409	1		-			
ANR	7740571	Identifier	e		7740409	0					
ANR	7740572	Identifier	p		7740409	1					
ANR	7740573	ForStatement	for ( c = soundhw ; c -> name ; ++ c )		7740409	2					
ANR	7740574	ForInit	c = soundhw ;	65:17:816:827	7740409	0	True				
ANR	7740575	AssignmentExpression	c = soundhw		7740409	0		=			
ANR	7740576	Identifier	c		7740409	0					
ANR	7740577	Identifier	soundhw		7740409	1					
ANR	7740578	Condition	c -> name	65:30:829:835	7740409	1	True				
ANR	7740579	PtrMemberAccess	c -> name		7740409	0					
ANR	7740580	Identifier	c		7740409	0					
ANR	7740581	Identifier	name		7740409	1					
ANR	7740582	UnaryExpression	++ c	65:39:838:840	7740409	2	True				
ANR	7740583	IncDec	++		7740409	0					
ANR	7740584	Identifier	c		7740409	1					
ANR	7740585	CompoundStatement		63:44:801:801	7740409	3					
ANR	7740586	IfStatement	"if ( ! strncmp ( c -> name , p , l ) && ! c -> name [ l ] )"		7740409	0					
ANR	7740587	Condition	"! strncmp ( c -> name , p , l ) && ! c -> name [ l ]"	67:20:866:903	7740409	0	True				
ANR	7740588	AndExpression	"! strncmp ( c -> name , p , l ) && ! c -> name [ l ]"		7740409	0		&&			
ANR	7740589	UnaryOperationExpression	"! strncmp ( c -> name , p , l )"		7740409	0					
ANR	7740590	UnaryOperator	!		7740409	0					
ANR	7740591	CallExpression	"strncmp ( c -> name , p , l )"		7740409	1					
ANR	7740592	Callee	strncmp		7740409	0					
ANR	7740593	Identifier	strncmp		7740409	0					
ANR	7740594	ArgumentList	c -> name		7740409	1					
ANR	7740595	Argument	c -> name		7740409	0					
ANR	7740596	PtrMemberAccess	c -> name		7740409	0					
ANR	7740597	Identifier	c		7740409	0					
ANR	7740598	Identifier	name		7740409	1					
ANR	7740599	Argument	p		7740409	1					
ANR	7740600	Identifier	p		7740409	0					
ANR	7740601	Argument	l		7740409	2					
ANR	7740602	Identifier	l		7740409	0					
ANR	7740603	UnaryOperationExpression	! c -> name [ l ]		7740409	1					
ANR	7740604	UnaryOperator	!		7740409	0					
ANR	7740605	ArrayIndexing	c -> name [ l ]		7740409	1					
ANR	7740606	PtrMemberAccess	c -> name		7740409	0					
ANR	7740607	Identifier	c		7740409	0					
ANR	7740608	Identifier	name		7740409	1					
ANR	7740609	Identifier	l		7740409	1					
ANR	7740610	CompoundStatement		65:60:864:864	7740409	1					
ANR	7740611	ExpressionStatement	c -> enabled = 1	69:20:929:943	7740409	0	True				
ANR	7740612	AssignmentExpression	c -> enabled = 1		7740409	0		=			
ANR	7740613	PtrMemberAccess	c -> enabled		7740409	0					
ANR	7740614	Identifier	c		7740409	0					
ANR	7740615	Identifier	enabled		7740409	1					
ANR	7740616	PrimaryExpression	1		7740409	1					
ANR	7740617	BreakStatement	break ;	71:20:966:971	7740409	1	True				
ANR	7740618	IfStatement	if ( ! c -> name )		7740409	3					
ANR	7740619	Condition	! c -> name	79:16:1026:1033	7740409	0	True				
ANR	7740620	UnaryOperationExpression	! c -> name		7740409	0					
ANR	7740621	UnaryOperator	!		7740409	0					
ANR	7740622	PtrMemberAccess	c -> name		7740409	1					
ANR	7740623	Identifier	c		7740409	0					
ANR	7740624	Identifier	name		7740409	1					
ANR	7740625	CompoundStatement		77:26:994:994	7740409	1					
ANR	7740626	IfStatement	if ( l > 80 )		7740409	0					
ANR	7740627	Condition	l > 80	81:20:1059:1064	7740409	0	True				
ANR	7740628	RelationalExpression	l > 80		7740409	0		>			
ANR	7740629	Identifier	l		7740409	0					
ANR	7740630	PrimaryExpression	80		7740409	1					
ANR	7740631	CompoundStatement		79:28:1025:1025	7740409	1					
ANR	7740632	ExpressionStatement	"fprintf ( stderr , ""Unknown sound card name (too big to show)\\n"" )"	83:20:1090:1181	7740409	0	True				
ANR	7740633	CallExpression	"fprintf ( stderr , ""Unknown sound card name (too big to show)\\n"" )"		7740409	0					
ANR	7740634	Callee	fprintf		7740409	0					
ANR	7740635	Identifier	fprintf		7740409	0					
ANR	7740636	ArgumentList	stderr		7740409	1					
ANR	7740637	Argument	stderr		7740409	0					
ANR	7740638	Identifier	stderr		7740409	0					
ANR	7740639	Argument	"""Unknown sound card name (too big to show)\\n"""		7740409	1					
ANR	7740640	PrimaryExpression	"""Unknown sound card name (too big to show)\\n"""		7740409	0					
ANR	7740641	ElseStatement	else		7740409	0					
ANR	7740642	CompoundStatement		87:21:1182:1182	7740409	0					
ANR	7740643	ExpressionStatement	"fprintf ( stderr , ""Unknown sound card name `%.*s'\\n"" , ( int ) l , p )"	91:20:1247:1339	7740409	0	True				
ANR	7740644	CallExpression	"fprintf ( stderr , ""Unknown sound card name `%.*s'\\n"" , ( int ) l , p )"		7740409	0					
ANR	7740645	Callee	fprintf		7740409	0					
ANR	7740646	Identifier	fprintf		7740409	0					
ANR	7740647	ArgumentList	stderr		7740409	1					
ANR	7740648	Argument	stderr		7740409	0					
ANR	7740649	Identifier	stderr		7740409	0					
ANR	7740650	Argument	"""Unknown sound card name `%.*s'\\n"""		7740409	1					
ANR	7740651	PrimaryExpression	"""Unknown sound card name `%.*s'\\n"""		7740409	0					
ANR	7740652	Argument	( int ) l		7740409	2					
ANR	7740653	CastExpression	( int ) l		7740409	0					
ANR	7740654	CastTarget	int		7740409	0					
ANR	7740655	Identifier	l		7740409	1					
ANR	7740656	Argument	p		7740409	3					
ANR	7740657	Identifier	p		7740409	0					
ANR	7740658	ExpressionStatement	bad_card = 1	97:16:1377:1389	7740409	1	True				
ANR	7740659	AssignmentExpression	bad_card = 1		7740409	0		=			
ANR	7740660	Identifier	bad_card		7740409	0					
ANR	7740661	PrimaryExpression	1		7740409	1					
ANR	7740662	ExpressionStatement	p += l + ( e != NULL )	101:12:1419:1439	7740409	4	True				
ANR	7740663	AssignmentExpression	p += l + ( e != NULL )		7740409	0		+=			
ANR	7740664	Identifier	p		7740409	0					
ANR	7740665	AdditiveExpression	l + ( e != NULL )		7740409	1		+			
ANR	7740666	Identifier	l		7740409	0					
ANR	7740667	EqualityExpression	e != NULL		7740409	1		!=			
ANR	7740668	Identifier	e		7740409	0					
ANR	7740669	Identifier	NULL		7740409	1					
ANR	7740670	IfStatement	if ( bad_card )		7740409	7					
ANR	7740671	Condition	bad_card	107:12:1467:1474	7740409	0	True				
ANR	7740672	Identifier	bad_card		7740409	0					
ANR	7740673	CompoundStatement		105:22:1435:1435	7740409	1					
ANR	7740674	GotoStatement	goto show_valid_cards ;	109:12:1492:1513	7740409	0	True				
ANR	7740675	Identifier	show_valid_cards		7740409	0					
ANR	7740676	ReturnType	void		7740409	1					
ANR	7740677	Identifier	select_soundhw		7740409	2					
ANR	7740678	ParameterList	const char * optarg		7740409	3					
ANR	7740679	Parameter	const char * optarg	1:20:20:37	7740409	0	True				
ANR	7740680	ParameterType	const char *		7740409	0					
ANR	7740681	Identifier	optarg		7740409	1					
ANR	7740682	CFGEntryNode	ENTRY		7740409		True				
ANR	7740683	CFGExitNode	EXIT		7740409		True				
ANR	7740684	Symbol	strcmp		7740409						
ANR	7740685	Symbol	c		7740409						
ANR	7740686	Symbol	NULL		7740409						
ANR	7740687	Symbol	soundhw		7740409						
ANR	7740688	Symbol	e		7740409						
ANR	7740689	Symbol	* * c		7740409						
ANR	7740690	Symbol	optarg		7740409						
ANR	7740691	Symbol	strchr		7740409						
ANR	7740692	Symbol	c -> name		7740409						
ANR	7740693	Symbol	l		7740409						
ANR	7740694	Symbol	* c -> name		7740409						
ANR	7740695	Symbol	stderr		7740409						
ANR	7740696	Symbol	* c		7740409						
ANR	7740697	Symbol	p		7740409						
ANR	7740698	Symbol	strlen		7740409						
ANR	7740699	Symbol	strncmp		7740409						
ANR	7740700	Symbol	c -> enabled		7740409						
ANR	7740701	Symbol	* l		7740409						
ANR	7740702	Symbol	bad_card		7740409						
ANR	7740703	Symbol	c -> descr		7740409						
ANR	7740704	Symbol	* optarg		7740409						
ANR	7740705	Symbol	* p		7740409						
