command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5666254	File	/home/p4ultr4n/workplace/ReVeal/raw_code/mov_write_trailer_0.c								
ANR	5666255	Function	mov_write_trailer	1:0:0:3591							
ANR	5666256	FunctionDef	mov_write_trailer (AVFormatContext * s)		5666255	0					
ANR	5666257	CompoundStatement		3:0:50:3591	5666255	0					
ANR	5666258	IdentifierDeclStatement	MOVMuxContext * mov = s -> priv_data ;	5:4:57:90	5666255	0	True				
ANR	5666259	IdentifierDecl	* mov = s -> priv_data		5666255	0					
ANR	5666260	IdentifierDeclType	MOVMuxContext *		5666255	0					
ANR	5666261	Identifier	mov		5666255	1					
ANR	5666262	AssignmentExpression	* mov = s -> priv_data		5666255	2		=			
ANR	5666263	Identifier	mov		5666255	0					
ANR	5666264	PtrMemberAccess	s -> priv_data		5666255	1					
ANR	5666265	Identifier	s		5666255	0					
ANR	5666266	Identifier	priv_data		5666255	1					
ANR	5666267	IdentifierDeclStatement	AVIOContext * pb = s -> pb ;	7:4:97:120	5666255	1	True				
ANR	5666268	IdentifierDecl	* pb = s -> pb		5666255	0					
ANR	5666269	IdentifierDeclType	AVIOContext *		5666255	0					
ANR	5666270	Identifier	pb		5666255	1					
ANR	5666271	AssignmentExpression	* pb = s -> pb		5666255	2		=			
ANR	5666272	Identifier	pb		5666255	0					
ANR	5666273	PtrMemberAccess	s -> pb		5666255	1					
ANR	5666274	Identifier	s		5666255	0					
ANR	5666275	Identifier	pb		5666255	1					
ANR	5666276	IdentifierDeclStatement	int res = 0 ;	9:4:127:138	5666255	2	True				
ANR	5666277	IdentifierDecl	res = 0		5666255	0					
ANR	5666278	IdentifierDeclType	int		5666255	0					
ANR	5666279	Identifier	res		5666255	1					
ANR	5666280	AssignmentExpression	res = 0		5666255	2		=			
ANR	5666281	Identifier	res		5666255	0					
ANR	5666282	PrimaryExpression	0		5666255	1					
ANR	5666283	IdentifierDeclStatement	int i ;	11:4:145:150	5666255	3	True				
ANR	5666284	IdentifierDecl	i		5666255	0					
ANR	5666285	IdentifierDeclType	int		5666255	0					
ANR	5666286	Identifier	i		5666255	1					
ANR	5666287	IdentifierDeclStatement	int64_t moov_pos ;	13:4:157:173	5666255	4	True				
ANR	5666288	IdentifierDecl	moov_pos		5666255	0					
ANR	5666289	IdentifierDeclType	int64_t		5666255	0					
ANR	5666290	Identifier	moov_pos		5666255	1					
ANR	5666291	ForStatement	for ( i = 0 ; i < mov -> nb_streams ; i ++ )		5666255	5					
ANR	5666292	ForInit	i = 0 ;	25:9:337:342	5666255	0	True				
ANR	5666293	AssignmentExpression	i = 0		5666255	0		=			
ANR	5666294	Identifier	i		5666255	0					
ANR	5666295	PrimaryExpression	0		5666255	1					
ANR	5666296	Condition	i < mov -> nb_streams	25:16:344:362	5666255	1	True				
ANR	5666297	RelationalExpression	i < mov -> nb_streams		5666255	0		<			
ANR	5666298	Identifier	i		5666255	0					
ANR	5666299	PtrMemberAccess	mov -> nb_streams		5666255	1					
ANR	5666300	Identifier	mov		5666255	0					
ANR	5666301	Identifier	nb_streams		5666255	1					
ANR	5666302	PostIncDecOperationExpression	i ++	25:37:365:367	5666255	2	True				
ANR	5666303	Identifier	i		5666255	0					
ANR	5666304	IncDec	++		5666255	1					
ANR	5666305	CompoundStatement		25:8:330:361	5666255	3					
ANR	5666306	IdentifierDeclStatement	MOVTrack * trk = & mov -> tracks [ i ] ;	27:8:381:412	5666255	0	True				
ANR	5666307	IdentifierDecl	* trk = & mov -> tracks [ i ]		5666255	0					
ANR	5666308	IdentifierDeclType	MOVTrack *		5666255	0					
ANR	5666309	Identifier	trk		5666255	1					
ANR	5666310	AssignmentExpression	* trk = & mov -> tracks [ i ]		5666255	2		=			
ANR	5666311	Identifier	trk		5666255	0					
ANR	5666312	UnaryOperationExpression	& mov -> tracks [ i ]		5666255	1					
ANR	5666313	UnaryOperator	&		5666255	0					
ANR	5666314	ArrayIndexing	mov -> tracks [ i ]		5666255	1					
ANR	5666315	PtrMemberAccess	mov -> tracks		5666255	0					
ANR	5666316	Identifier	mov		5666255	0					
ANR	5666317	Identifier	tracks		5666255	1					
ANR	5666318	Identifier	i		5666255	1					
ANR	5666319	IfStatement	if ( trk -> enc -> codec_id == AV_CODEC_ID_MOV_TEXT && ! trk -> last_sample_is_subtitle_end )		5666255	1					
ANR	5666320	Condition	trk -> enc -> codec_id == AV_CODEC_ID_MOV_TEXT && ! trk -> last_sample_is_subtitle_end	29:12:427:518	5666255	0	True				
ANR	5666321	AndExpression	trk -> enc -> codec_id == AV_CODEC_ID_MOV_TEXT && ! trk -> last_sample_is_subtitle_end		5666255	0		&&			
ANR	5666322	EqualityExpression	trk -> enc -> codec_id == AV_CODEC_ID_MOV_TEXT		5666255	0		==			
ANR	5666323	PtrMemberAccess	trk -> enc -> codec_id		5666255	0					
ANR	5666324	PtrMemberAccess	trk -> enc		5666255	0					
ANR	5666325	Identifier	trk		5666255	0					
ANR	5666326	Identifier	enc		5666255	1					
ANR	5666327	Identifier	codec_id		5666255	1					
ANR	5666328	Identifier	AV_CODEC_ID_MOV_TEXT		5666255	1					
ANR	5666329	UnaryOperationExpression	! trk -> last_sample_is_subtitle_end		5666255	1					
ANR	5666330	UnaryOperator	!		5666255	0					
ANR	5666331	PtrMemberAccess	trk -> last_sample_is_subtitle_end		5666255	1					
ANR	5666332	Identifier	trk		5666255	0					
ANR	5666333	Identifier	last_sample_is_subtitle_end		5666255	1					
ANR	5666334	CompoundStatement		29:47:470:470	5666255	1					
ANR	5666335	ExpressionStatement	"mov_write_subtitle_end_packet ( s , i , trk -> track_duration )"	33:12:536:592	5666255	0	True				
ANR	5666336	CallExpression	"mov_write_subtitle_end_packet ( s , i , trk -> track_duration )"		5666255	0					
ANR	5666337	Callee	mov_write_subtitle_end_packet		5666255	0					
ANR	5666338	Identifier	mov_write_subtitle_end_packet		5666255	0					
ANR	5666339	ArgumentList	s		5666255	1					
ANR	5666340	Argument	s		5666255	0					
ANR	5666341	Identifier	s		5666255	0					
ANR	5666342	Argument	i		5666255	1					
ANR	5666343	Identifier	i		5666255	0					
ANR	5666344	Argument	trk -> track_duration		5666255	2					
ANR	5666345	PtrMemberAccess	trk -> track_duration		5666255	0					
ANR	5666346	Identifier	trk		5666255	0					
ANR	5666347	Identifier	track_duration		5666255	1					
ANR	5666348	ExpressionStatement	trk -> last_sample_is_subtitle_end = 1	35:12:607:643	5666255	1	True				
ANR	5666349	AssignmentExpression	trk -> last_sample_is_subtitle_end = 1		5666255	0		=			
ANR	5666350	PtrMemberAccess	trk -> last_sample_is_subtitle_end		5666255	0					
ANR	5666351	Identifier	trk		5666255	0					
ANR	5666352	Identifier	last_sample_is_subtitle_end		5666255	1					
ANR	5666353	PrimaryExpression	1		5666255	1					
ANR	5666354	IfStatement	if ( ! mov -> chapter_track && ! ( mov -> flags & FF_MOV_FLAG_FRAGMENT ) )		5666255	6					
ANR	5666355	Condition	! mov -> chapter_track && ! ( mov -> flags & FF_MOV_FLAG_FRAGMENT )	49:8:858:916	5666255	0	True				
ANR	5666356	AndExpression	! mov -> chapter_track && ! ( mov -> flags & FF_MOV_FLAG_FRAGMENT )		5666255	0		&&			
ANR	5666357	UnaryOperationExpression	! mov -> chapter_track		5666255	0					
ANR	5666358	UnaryOperator	!		5666255	0					
ANR	5666359	PtrMemberAccess	mov -> chapter_track		5666255	1					
ANR	5666360	Identifier	mov		5666255	0					
ANR	5666361	Identifier	chapter_track		5666255	1					
ANR	5666362	UnaryOperationExpression	! ( mov -> flags & FF_MOV_FLAG_FRAGMENT )		5666255	1					
ANR	5666363	UnaryOperator	!		5666255	0					
ANR	5666364	BitAndExpression	mov -> flags & FF_MOV_FLAG_FRAGMENT		5666255	1		&			
ANR	5666365	PtrMemberAccess	mov -> flags		5666255	0					
ANR	5666366	Identifier	mov		5666255	0					
ANR	5666367	Identifier	flags		5666255	1					
ANR	5666368	Identifier	FF_MOV_FLAG_FRAGMENT		5666255	1					
ANR	5666369	CompoundStatement		47:69:868:868	5666255	1					
ANR	5666370	IfStatement	if ( mov -> mode & ( MODE_MP4 | MODE_MOV | MODE_IPOD ) && s -> nb_chapters )		5666255	0					
ANR	5666371	Condition	mov -> mode & ( MODE_MP4 | MODE_MOV | MODE_IPOD ) && s -> nb_chapters	51:12:934:992	5666255	0	True				
ANR	5666372	AndExpression	mov -> mode & ( MODE_MP4 | MODE_MOV | MODE_IPOD ) && s -> nb_chapters		5666255	0		&&			
ANR	5666373	BitAndExpression	mov -> mode & ( MODE_MP4 | MODE_MOV | MODE_IPOD )		5666255	0		&			
ANR	5666374	PtrMemberAccess	mov -> mode		5666255	0					
ANR	5666375	Identifier	mov		5666255	0					
ANR	5666376	Identifier	mode		5666255	1					
ANR	5666377	InclusiveOrExpression	MODE_MP4 | MODE_MOV | MODE_IPOD		5666255	1		|			
ANR	5666378	Identifier	MODE_MP4		5666255	0					
ANR	5666379	InclusiveOrExpression	MODE_MOV | MODE_IPOD		5666255	1		|			
ANR	5666380	Identifier	MODE_MOV		5666255	0					
ANR	5666381	Identifier	MODE_IPOD		5666255	1					
ANR	5666382	PtrMemberAccess	s -> nb_chapters		5666255	1					
ANR	5666383	Identifier	s		5666255	0					
ANR	5666384	Identifier	nb_chapters		5666255	1					
ANR	5666385	CompoundStatement		49:73:944:944	5666255	1					
ANR	5666386	ExpressionStatement	mov -> chapter_track = mov -> nb_streams ++	53:12:1010:1048	5666255	0	True				
ANR	5666387	AssignmentExpression	mov -> chapter_track = mov -> nb_streams ++		5666255	0		=			
ANR	5666388	PtrMemberAccess	mov -> chapter_track		5666255	0					
ANR	5666389	Identifier	mov		5666255	0					
ANR	5666390	Identifier	chapter_track		5666255	1					
ANR	5666391	PostIncDecOperationExpression	mov -> nb_streams ++		5666255	1					
ANR	5666392	PtrMemberAccess	mov -> nb_streams		5666255	0					
ANR	5666393	Identifier	mov		5666255	0					
ANR	5666394	Identifier	nb_streams		5666255	1					
ANR	5666395	IncDec	++		5666255	1					
ANR	5666396	IfStatement	"if ( ( res = mov_create_chapter_track ( s , mov -> chapter_track ) ) < 0 )"		5666255	1					
ANR	5666397	Condition	"( res = mov_create_chapter_track ( s , mov -> chapter_track ) ) < 0"	55:16:1067:1125	5666255	0	True				
ANR	5666398	RelationalExpression	"( res = mov_create_chapter_track ( s , mov -> chapter_track ) ) < 0"		5666255	0		<			
ANR	5666399	AssignmentExpression	"res = mov_create_chapter_track ( s , mov -> chapter_track )"		5666255	0		=			
ANR	5666400	Identifier	res		5666255	0					
ANR	5666401	CallExpression	"mov_create_chapter_track ( s , mov -> chapter_track )"		5666255	1					
ANR	5666402	Callee	mov_create_chapter_track		5666255	0					
ANR	5666403	Identifier	mov_create_chapter_track		5666255	0					
ANR	5666404	ArgumentList	s		5666255	1					
ANR	5666405	Argument	s		5666255	0					
ANR	5666406	Identifier	s		5666255	0					
ANR	5666407	Argument	mov -> chapter_track		5666255	1					
ANR	5666408	PtrMemberAccess	mov -> chapter_track		5666255	0					
ANR	5666409	Identifier	mov		5666255	0					
ANR	5666410	Identifier	chapter_track		5666255	1					
ANR	5666411	PrimaryExpression	0		5666255	1					
ANR	5666412	GotoStatement	goto error ;	57:16:1145:1155	5666255	1	True				
ANR	5666413	Identifier	error		5666255	0					
ANR	5666414	IfStatement	if ( ! ( mov -> flags & FF_MOV_FLAG_FRAGMENT ) )		5666255	7					
ANR	5666415	Condition	! ( mov -> flags & FF_MOV_FLAG_FRAGMENT )	65:8:1186:1221	5666255	0	True				
ANR	5666416	UnaryOperationExpression	! ( mov -> flags & FF_MOV_FLAG_FRAGMENT )		5666255	0					
ANR	5666417	UnaryOperator	!		5666255	0					
ANR	5666418	BitAndExpression	mov -> flags & FF_MOV_FLAG_FRAGMENT		5666255	1		&			
ANR	5666419	PtrMemberAccess	mov -> flags		5666255	0					
ANR	5666420	Identifier	mov		5666255	0					
ANR	5666421	Identifier	flags		5666255	1					
ANR	5666422	Identifier	FF_MOV_FLAG_FRAGMENT		5666255	1					
ANR	5666423	CompoundStatement		63:46:1173:1173	5666255	1					
ANR	5666424	ExpressionStatement	moov_pos = avio_tell ( pb )	67:8:1235:1259	5666255	0	True				
ANR	5666425	AssignmentExpression	moov_pos = avio_tell ( pb )		5666255	0		=			
ANR	5666426	Identifier	moov_pos		5666255	0					
ANR	5666427	CallExpression	avio_tell ( pb )		5666255	1					
ANR	5666428	Callee	avio_tell		5666255	0					
ANR	5666429	Identifier	avio_tell		5666255	0					
ANR	5666430	ArgumentList	pb		5666255	1					
ANR	5666431	Argument	pb		5666255	0					
ANR	5666432	Identifier	pb		5666255	0					
ANR	5666433	IfStatement	if ( mov -> mdat_size + 8 <= UINT32_MAX )		5666255	1					
ANR	5666434	Condition	mov -> mdat_size + 8 <= UINT32_MAX	73:12:1314:1345	5666255	0	True				
ANR	5666435	RelationalExpression	mov -> mdat_size + 8 <= UINT32_MAX		5666255	0		<=			
ANR	5666436	AdditiveExpression	mov -> mdat_size + 8		5666255	0		+			
ANR	5666437	PtrMemberAccess	mov -> mdat_size		5666255	0					
ANR	5666438	Identifier	mov		5666255	0					
ANR	5666439	Identifier	mdat_size		5666255	1					
ANR	5666440	PrimaryExpression	8		5666255	1					
ANR	5666441	Identifier	UINT32_MAX		5666255	1					
ANR	5666442	CompoundStatement		71:46:1297:1297	5666255	1					
ANR	5666443	ExpressionStatement	"avio_seek ( pb , mov -> mdat_pos , SEEK_SET )"	75:12:1363:1401	5666255	0	True				
ANR	5666444	CallExpression	"avio_seek ( pb , mov -> mdat_pos , SEEK_SET )"		5666255	0					
ANR	5666445	Callee	avio_seek		5666255	0					
ANR	5666446	Identifier	avio_seek		5666255	0					
ANR	5666447	ArgumentList	pb		5666255	1					
ANR	5666448	Argument	pb		5666255	0					
ANR	5666449	Identifier	pb		5666255	0					
ANR	5666450	Argument	mov -> mdat_pos		5666255	1					
ANR	5666451	PtrMemberAccess	mov -> mdat_pos		5666255	0					
ANR	5666452	Identifier	mov		5666255	0					
ANR	5666453	Identifier	mdat_pos		5666255	1					
ANR	5666454	Argument	SEEK_SET		5666255	2					
ANR	5666455	Identifier	SEEK_SET		5666255	0					
ANR	5666456	ExpressionStatement	"avio_wb32 ( pb , mov -> mdat_size + 8 )"	77:12:1416:1449	5666255	1	True				
ANR	5666457	CallExpression	"avio_wb32 ( pb , mov -> mdat_size + 8 )"		5666255	0					
ANR	5666458	Callee	avio_wb32		5666255	0					
ANR	5666459	Identifier	avio_wb32		5666255	0					
ANR	5666460	ArgumentList	pb		5666255	1					
ANR	5666461	Argument	pb		5666255	0					
ANR	5666462	Identifier	pb		5666255	0					
ANR	5666463	Argument	mov -> mdat_size + 8		5666255	1					
ANR	5666464	AdditiveExpression	mov -> mdat_size + 8		5666255	0		+			
ANR	5666465	PtrMemberAccess	mov -> mdat_size		5666255	0					
ANR	5666466	Identifier	mov		5666255	0					
ANR	5666467	Identifier	mdat_size		5666255	1					
ANR	5666468	PrimaryExpression	8		5666255	1					
ANR	5666469	ElseStatement	else		5666255	0					
ANR	5666470	CompoundStatement		77:15:1416:1416	5666255	0					
ANR	5666471	ExpressionStatement	"avio_seek ( pb , mov -> mdat_pos - 8 , SEEK_SET )"	83:12:1535:1577	5666255	0	True				
ANR	5666472	CallExpression	"avio_seek ( pb , mov -> mdat_pos - 8 , SEEK_SET )"		5666255	0					
ANR	5666473	Callee	avio_seek		5666255	0					
ANR	5666474	Identifier	avio_seek		5666255	0					
ANR	5666475	ArgumentList	pb		5666255	1					
ANR	5666476	Argument	pb		5666255	0					
ANR	5666477	Identifier	pb		5666255	0					
ANR	5666478	Argument	mov -> mdat_pos - 8		5666255	1					
ANR	5666479	AdditiveExpression	mov -> mdat_pos - 8		5666255	0		-			
ANR	5666480	PtrMemberAccess	mov -> mdat_pos		5666255	0					
ANR	5666481	Identifier	mov		5666255	0					
ANR	5666482	Identifier	mdat_pos		5666255	1					
ANR	5666483	PrimaryExpression	8		5666255	1					
ANR	5666484	Argument	SEEK_SET		5666255	2					
ANR	5666485	Identifier	SEEK_SET		5666255	0					
ANR	5666486	ExpressionStatement	"avio_wb32 ( pb , 1 )"	89:12:1694:1710	5666255	1	True				
ANR	5666487	CallExpression	"avio_wb32 ( pb , 1 )"		5666255	0					
ANR	5666488	Callee	avio_wb32		5666255	0					
ANR	5666489	Identifier	avio_wb32		5666255	0					
ANR	5666490	ArgumentList	pb		5666255	1					
ANR	5666491	Argument	pb		5666255	0					
ANR	5666492	Identifier	pb		5666255	0					
ANR	5666493	Argument	1		5666255	1					
ANR	5666494	PrimaryExpression	1		5666255	0					
ANR	5666495	ExpressionStatement	"ffio_wfourcc ( pb , ""mdat"" )"	91:12:1725:1749	5666255	2	True				
ANR	5666496	CallExpression	"ffio_wfourcc ( pb , ""mdat"" )"		5666255	0					
ANR	5666497	Callee	ffio_wfourcc		5666255	0					
ANR	5666498	Identifier	ffio_wfourcc		5666255	0					
ANR	5666499	ArgumentList	pb		5666255	1					
ANR	5666500	Argument	pb		5666255	0					
ANR	5666501	Identifier	pb		5666255	0					
ANR	5666502	Argument	"""mdat"""		5666255	1					
ANR	5666503	PrimaryExpression	"""mdat"""		5666255	0					
ANR	5666504	ExpressionStatement	"avio_wb64 ( pb , mov -> mdat_size + 16 )"	93:12:1764:1798	5666255	3	True				
ANR	5666505	CallExpression	"avio_wb64 ( pb , mov -> mdat_size + 16 )"		5666255	0					
ANR	5666506	Callee	avio_wb64		5666255	0					
ANR	5666507	Identifier	avio_wb64		5666255	0					
ANR	5666508	ArgumentList	pb		5666255	1					
ANR	5666509	Argument	pb		5666255	0					
ANR	5666510	Identifier	pb		5666255	0					
ANR	5666511	Argument	mov -> mdat_size + 16		5666255	1					
ANR	5666512	AdditiveExpression	mov -> mdat_size + 16		5666255	0		+			
ANR	5666513	PtrMemberAccess	mov -> mdat_size		5666255	0					
ANR	5666514	Identifier	mov		5666255	0					
ANR	5666515	Identifier	mdat_size		5666255	1					
ANR	5666516	PrimaryExpression	16		5666255	1					
ANR	5666517	ExpressionStatement	"avio_seek ( pb , mov -> reserved_moov_size > 0 ? mov -> reserved_moov_pos : moov_pos , SEEK_SET )"	97:8:1820:1908	5666255	2	True				
ANR	5666518	CallExpression	"avio_seek ( pb , mov -> reserved_moov_size > 0 ? mov -> reserved_moov_pos : moov_pos , SEEK_SET )"		5666255	0					
ANR	5666519	Callee	avio_seek		5666255	0					
ANR	5666520	Identifier	avio_seek		5666255	0					
ANR	5666521	ArgumentList	pb		5666255	1					
ANR	5666522	Argument	pb		5666255	0					
ANR	5666523	Identifier	pb		5666255	0					
ANR	5666524	Argument	mov -> reserved_moov_size > 0 ? mov -> reserved_moov_pos : moov_pos		5666255	1					
ANR	5666525	ConditionalExpression	mov -> reserved_moov_size > 0 ? mov -> reserved_moov_pos : moov_pos		5666255	0					
ANR	5666526	Condition	mov -> reserved_moov_size > 0		5666255	0					
ANR	5666527	RelationalExpression	mov -> reserved_moov_size > 0		5666255	0		>			
ANR	5666528	PtrMemberAccess	mov -> reserved_moov_size		5666255	0					
ANR	5666529	Identifier	mov		5666255	0					
ANR	5666530	Identifier	reserved_moov_size		5666255	1					
ANR	5666531	PrimaryExpression	0		5666255	1					
ANR	5666532	PtrMemberAccess	mov -> reserved_moov_pos		5666255	1					
ANR	5666533	Identifier	mov		5666255	0					
ANR	5666534	Identifier	reserved_moov_pos		5666255	1					
ANR	5666535	Identifier	moov_pos		5666255	2					
ANR	5666536	Argument	SEEK_SET		5666255	2					
ANR	5666537	Identifier	SEEK_SET		5666255	0					
ANR	5666538	IfStatement	if ( mov -> flags & FF_MOV_FLAG_FASTSTART )		5666255	3					
ANR	5666539	Condition	mov -> flags & FF_MOV_FLAG_FASTSTART	101:12:1925:1958	5666255	0	True				
ANR	5666540	BitAndExpression	mov -> flags & FF_MOV_FLAG_FASTSTART		5666255	0		&			
ANR	5666541	PtrMemberAccess	mov -> flags		5666255	0					
ANR	5666542	Identifier	mov		5666255	0					
ANR	5666543	Identifier	flags		5666255	1					
ANR	5666544	Identifier	FF_MOV_FLAG_FASTSTART		5666255	1					
ANR	5666545	CompoundStatement		99:48:1910:1910	5666255	1					
ANR	5666546	ExpressionStatement	"av_log ( s , AV_LOG_INFO , ""Starting second pass: moving the moov atom to the beginning of the file\\n"" )"	103:12:1976:2075	5666255	0	True				
ANR	5666547	CallExpression	"av_log ( s , AV_LOG_INFO , ""Starting second pass: moving the moov atom to the beginning of the file\\n"" )"		5666255	0					
ANR	5666548	Callee	av_log		5666255	0					
ANR	5666549	Identifier	av_log		5666255	0					
ANR	5666550	ArgumentList	s		5666255	1					
ANR	5666551	Argument	s		5666255	0					
ANR	5666552	Identifier	s		5666255	0					
ANR	5666553	Argument	AV_LOG_INFO		5666255	1					
ANR	5666554	Identifier	AV_LOG_INFO		5666255	0					
ANR	5666555	Argument	"""Starting second pass: moving the moov atom to the beginning of the file\\n"""		5666255	2					
ANR	5666556	PrimaryExpression	"""Starting second pass: moving the moov atom to the beginning of the file\\n"""		5666255	0					
ANR	5666557	ExpressionStatement	res = shift_data ( s )	105:12:2090:2109	5666255	1	True				
ANR	5666558	AssignmentExpression	res = shift_data ( s )		5666255	0		=			
ANR	5666559	Identifier	res		5666255	0					
ANR	5666560	CallExpression	shift_data ( s )		5666255	1					
ANR	5666561	Callee	shift_data		5666255	0					
ANR	5666562	Identifier	shift_data		5666255	0					
ANR	5666563	ArgumentList	s		5666255	1					
ANR	5666564	Argument	s		5666255	0					
ANR	5666565	Identifier	s		5666255	0					
ANR	5666566	IfStatement	if ( res == 0 )		5666255	2					
ANR	5666567	Condition	res == 0	107:16:2128:2135	5666255	0	True				
ANR	5666568	EqualityExpression	res == 0		5666255	0		==			
ANR	5666569	Identifier	res		5666255	0					
ANR	5666570	PrimaryExpression	0		5666255	1					
ANR	5666571	CompoundStatement		105:26:2087:2087	5666255	1					
ANR	5666572	ExpressionStatement	"avio_seek ( s -> pb , mov -> reserved_moov_pos , SEEK_SET )"	109:16:2157:2207	5666255	0	True				
ANR	5666573	CallExpression	"avio_seek ( s -> pb , mov -> reserved_moov_pos , SEEK_SET )"		5666255	0					
ANR	5666574	Callee	avio_seek		5666255	0					
ANR	5666575	Identifier	avio_seek		5666255	0					
ANR	5666576	ArgumentList	s -> pb		5666255	1					
ANR	5666577	Argument	s -> pb		5666255	0					
ANR	5666578	PtrMemberAccess	s -> pb		5666255	0					
ANR	5666579	Identifier	s		5666255	0					
ANR	5666580	Identifier	pb		5666255	1					
ANR	5666581	Argument	mov -> reserved_moov_pos		5666255	1					
ANR	5666582	PtrMemberAccess	mov -> reserved_moov_pos		5666255	0					
ANR	5666583	Identifier	mov		5666255	0					
ANR	5666584	Identifier	reserved_moov_pos		5666255	1					
ANR	5666585	Argument	SEEK_SET		5666255	2					
ANR	5666586	Identifier	SEEK_SET		5666255	0					
ANR	5666587	ExpressionStatement	"mov_write_moov_tag ( pb , mov , s )"	111:16:2226:2256	5666255	1	True				
ANR	5666588	CallExpression	"mov_write_moov_tag ( pb , mov , s )"		5666255	0					
ANR	5666589	Callee	mov_write_moov_tag		5666255	0					
ANR	5666590	Identifier	mov_write_moov_tag		5666255	0					
ANR	5666591	ArgumentList	pb		5666255	1					
ANR	5666592	Argument	pb		5666255	0					
ANR	5666593	Identifier	pb		5666255	0					
ANR	5666594	Argument	mov		5666255	1					
ANR	5666595	Identifier	mov		5666255	0					
ANR	5666596	Argument	s		5666255	2					
ANR	5666597	Identifier	s		5666255	0					
ANR	5666598	ElseStatement	else		5666255	0					
ANR	5666599	IfStatement	if ( mov -> reserved_moov_size > 0 )		5666255	0					
ANR	5666600	Condition	mov -> reserved_moov_size > 0	115:19:2293:2319	5666255	0	True				
ANR	5666601	RelationalExpression	mov -> reserved_moov_size > 0		5666255	0		>			
ANR	5666602	PtrMemberAccess	mov -> reserved_moov_size		5666255	0					
ANR	5666603	Identifier	mov		5666255	0					
ANR	5666604	Identifier	reserved_moov_size		5666255	1					
ANR	5666605	PrimaryExpression	0		5666255	1					
ANR	5666606	CompoundStatement		115:12:2286:2298	5666255	1					
ANR	5666607	IdentifierDeclStatement	int64_t size ;	117:12:2337:2349	5666255	0	True				
ANR	5666608	IdentifierDecl	size		5666255	0					
ANR	5666609	IdentifierDeclType	int64_t		5666255	0					
ANR	5666610	Identifier	size		5666255	1					
ANR	5666611	ExpressionStatement	"mov_write_moov_tag ( pb , mov , s )"	119:12:2364:2394	5666255	1	True				
ANR	5666612	CallExpression	"mov_write_moov_tag ( pb , mov , s )"		5666255	0					
ANR	5666613	Callee	mov_write_moov_tag		5666255	0					
ANR	5666614	Identifier	mov_write_moov_tag		5666255	0					
ANR	5666615	ArgumentList	pb		5666255	1					
ANR	5666616	Argument	pb		5666255	0					
ANR	5666617	Identifier	pb		5666255	0					
ANR	5666618	Argument	mov		5666255	1					
ANR	5666619	Identifier	mov		5666255	0					
ANR	5666620	Argument	s		5666255	2					
ANR	5666621	Identifier	s		5666255	0					
ANR	5666622	ExpressionStatement	size = mov -> reserved_moov_size - ( avio_tell ( pb ) - mov -> reserved_moov_pos )	121:12:2409:2482	5666255	2	True				
ANR	5666623	AssignmentExpression	size = mov -> reserved_moov_size - ( avio_tell ( pb ) - mov -> reserved_moov_pos )		5666255	0		=			
ANR	5666624	Identifier	size		5666255	0					
ANR	5666625	AdditiveExpression	mov -> reserved_moov_size - ( avio_tell ( pb ) - mov -> reserved_moov_pos )		5666255	1		-			
ANR	5666626	PtrMemberAccess	mov -> reserved_moov_size		5666255	0					
ANR	5666627	Identifier	mov		5666255	0					
ANR	5666628	Identifier	reserved_moov_size		5666255	1					
ANR	5666629	AdditiveExpression	avio_tell ( pb ) - mov -> reserved_moov_pos		5666255	1		-			
ANR	5666630	CallExpression	avio_tell ( pb )		5666255	0					
ANR	5666631	Callee	avio_tell		5666255	0					
ANR	5666632	Identifier	avio_tell		5666255	0					
ANR	5666633	ArgumentList	pb		5666255	1					
ANR	5666634	Argument	pb		5666255	0					
ANR	5666635	Identifier	pb		5666255	0					
ANR	5666636	PtrMemberAccess	mov -> reserved_moov_pos		5666255	1					
ANR	5666637	Identifier	mov		5666255	0					
ANR	5666638	Identifier	reserved_moov_pos		5666255	1					
ANR	5666639	IfStatement	if ( size < 8 )		5666255	3					
ANR	5666640	Condition	size < 8	123:16:2501:2508	5666255	0	True				
ANR	5666641	RelationalExpression	size < 8		5666255	0		<			
ANR	5666642	Identifier	size		5666255	0					
ANR	5666643	PrimaryExpression	8		5666255	1					
ANR	5666644	CompoundStatement		121:25:2459:2459	5666255	1					
ANR	5666645	Statement	av_log	125:16:2529:2534	5666255	0	True				
ANR	5666646	Statement	(	125:22:2535:2535	5666255	1	True				
ANR	5666647	Statement	s	125:23:2536:2536	5666255	2	True				
ANR	5666648	Statement	","	125:24:2537:2537	5666255	3	True				
ANR	5666649	Statement	AV_LOG_ERROR	125:26:2539:2550	5666255	4	True				
ANR	5666650	Statement	","	125:38:2551:2551	5666255	5	True				
ANR	5666651	Statement	"""reserved_moov_size is too small, needed %"""	125:40:2553:2595	5666255	6	True				
ANR	5666652	Statement	PRId64	125:83:2596:2601	5666255	7	True				
ANR	5666653	Statement	""" additional\\n"""	125:89:2602:2616	5666255	8	True				
ANR	5666654	Statement	","	125:104:2617:2617	5666255	9	True				
ANR	5666655	Statement	8	125:106:2619:2619	5666255	10	True				
ANR	5666656	Statement	-	125:107:2620:2620	5666255	11	True				
ANR	5666657	Statement	size	125:108:2621:2624	5666255	12	True				
ANR	5666658	Statement	)	125:112:2625:2625	5666255	13	True				
ANR	5666659	ExpressionStatement		125:113:2626:2626	5666255	14	True				
ANR	5666660	ReturnStatement	return - 1 ;	127:16:2645:2654	5666255	15	True				
ANR	5666661	UnaryOperationExpression	- 1		5666255	0					
ANR	5666662	UnaryOperator	-		5666255	0					
ANR	5666663	PrimaryExpression	1		5666255	1					
ANR	5666664	ExpressionStatement	"avio_wb32 ( pb , size )"	131:12:2684:2703	5666255	4	True				
ANR	5666665	CallExpression	"avio_wb32 ( pb , size )"		5666255	0					
ANR	5666666	Callee	avio_wb32		5666255	0					
ANR	5666667	Identifier	avio_wb32		5666255	0					
ANR	5666668	ArgumentList	pb		5666255	1					
ANR	5666669	Argument	pb		5666255	0					
ANR	5666670	Identifier	pb		5666255	0					
ANR	5666671	Argument	size		5666255	1					
ANR	5666672	Identifier	size		5666255	0					
ANR	5666673	ExpressionStatement	"ffio_wfourcc ( pb , ""free"" )"	133:12:2718:2742	5666255	5	True				
ANR	5666674	CallExpression	"ffio_wfourcc ( pb , ""free"" )"		5666255	0					
ANR	5666675	Callee	ffio_wfourcc		5666255	0					
ANR	5666676	Identifier	ffio_wfourcc		5666255	0					
ANR	5666677	ArgumentList	pb		5666255	1					
ANR	5666678	Argument	pb		5666255	0					
ANR	5666679	Identifier	pb		5666255	0					
ANR	5666680	Argument	"""free"""		5666255	1					
ANR	5666681	PrimaryExpression	"""free"""		5666255	0					
ANR	5666682	ForStatement	for ( i = 0 ; i < size ; i ++ )		5666255	6					
ANR	5666683	ForInit	i = 0 ;	135:17:2762:2767	5666255	0	True				
ANR	5666684	AssignmentExpression	i = 0		5666255	0		=			
ANR	5666685	Identifier	i		5666255	0					
ANR	5666686	PrimaryExpression	0		5666255	1					
ANR	5666687	Condition	i < size	135:24:2769:2776	5666255	1	True				
ANR	5666688	RelationalExpression	i < size		5666255	0		<			
ANR	5666689	Identifier	i		5666255	0					
ANR	5666690	Identifier	size		5666255	1					
ANR	5666691	PostIncDecOperationExpression	i ++	135:34:2779:2781	5666255	2	True				
ANR	5666692	Identifier	i		5666255	0					
ANR	5666693	IncDec	++		5666255	1					
ANR	5666694	ExpressionStatement	"avio_w8 ( pb , 0 )"	137:16:2801:2815	5666255	3	True				
ANR	5666695	CallExpression	"avio_w8 ( pb , 0 )"		5666255	0					
ANR	5666696	Callee	avio_w8		5666255	0					
ANR	5666697	Identifier	avio_w8		5666255	0					
ANR	5666698	ArgumentList	pb		5666255	1					
ANR	5666699	Argument	pb		5666255	0					
ANR	5666700	Identifier	pb		5666255	0					
ANR	5666701	Argument	0		5666255	1					
ANR	5666702	PrimaryExpression	0		5666255	0					
ANR	5666703	ExpressionStatement	"avio_seek ( pb , moov_pos , SEEK_SET )"	139:12:2830:2863	5666255	7	True				
ANR	5666704	CallExpression	"avio_seek ( pb , moov_pos , SEEK_SET )"		5666255	0					
ANR	5666705	Callee	avio_seek		5666255	0					
ANR	5666706	Identifier	avio_seek		5666255	0					
ANR	5666707	ArgumentList	pb		5666255	1					
ANR	5666708	Argument	pb		5666255	0					
ANR	5666709	Identifier	pb		5666255	0					
ANR	5666710	Argument	moov_pos		5666255	1					
ANR	5666711	Identifier	moov_pos		5666255	0					
ANR	5666712	Argument	SEEK_SET		5666255	2					
ANR	5666713	Identifier	SEEK_SET		5666255	0					
ANR	5666714	ElseStatement	else		5666255	0					
ANR	5666715	CompoundStatement		139:15:2830:2830	5666255	0					
ANR	5666716	ExpressionStatement	"mov_write_moov_tag ( pb , mov , s )"	143:12:2896:2926	5666255	0	True				
ANR	5666717	CallExpression	"mov_write_moov_tag ( pb , mov , s )"		5666255	0					
ANR	5666718	Callee	mov_write_moov_tag		5666255	0					
ANR	5666719	Identifier	mov_write_moov_tag		5666255	0					
ANR	5666720	ArgumentList	pb		5666255	1					
ANR	5666721	Argument	pb		5666255	0					
ANR	5666722	Identifier	pb		5666255	0					
ANR	5666723	Argument	mov		5666255	1					
ANR	5666724	Identifier	mov		5666255	0					
ANR	5666725	Argument	s		5666255	2					
ANR	5666726	Identifier	s		5666255	0					
ANR	5666727	ElseStatement	else		5666255	0					
ANR	5666728	CompoundStatement		145:11:2900:2900	5666255	0					
ANR	5666729	ExpressionStatement	mov_flush_fragment ( s )	149:8:2962:2983	5666255	0	True				
ANR	5666730	CallExpression	mov_flush_fragment ( s )		5666255	0					
ANR	5666731	Callee	mov_flush_fragment		5666255	0					
ANR	5666732	Identifier	mov_flush_fragment		5666255	0					
ANR	5666733	ArgumentList	s		5666255	1					
ANR	5666734	Argument	s		5666255	0					
ANR	5666735	Identifier	s		5666255	0					
ANR	5666736	ExpressionStatement	"mov_write_mfra_tag ( pb , mov )"	151:8:2994:3021	5666255	1	True				
ANR	5666737	CallExpression	"mov_write_mfra_tag ( pb , mov )"		5666255	0					
ANR	5666738	Callee	mov_write_mfra_tag		5666255	0					
ANR	5666739	Identifier	mov_write_mfra_tag		5666255	0					
ANR	5666740	ArgumentList	pb		5666255	1					
ANR	5666741	Argument	pb		5666255	0					
ANR	5666742	Identifier	pb		5666255	0					
ANR	5666743	Argument	mov		5666255	1					
ANR	5666744	Identifier	mov		5666255	0					
ANR	5666745	ForStatement	for ( i = 0 ; i < mov -> nb_streams ; i ++ )		5666255	8					
ANR	5666746	ForInit	i = 0 ;	157:9:3042:3047	5666255	0	True				
ANR	5666747	AssignmentExpression	i = 0		5666255	0		=			
ANR	5666748	Identifier	i		5666255	0					
ANR	5666749	PrimaryExpression	0		5666255	1					
ANR	5666750	Condition	i < mov -> nb_streams	157:16:3049:3067	5666255	1	True				
ANR	5666751	RelationalExpression	i < mov -> nb_streams		5666255	0		<			
ANR	5666752	Identifier	i		5666255	0					
ANR	5666753	PtrMemberAccess	mov -> nb_streams		5666255	1					
ANR	5666754	Identifier	mov		5666255	0					
ANR	5666755	Identifier	nb_streams		5666255	1					
ANR	5666756	PostIncDecOperationExpression	i ++	157:37:3070:3072	5666255	2	True				
ANR	5666757	Identifier	i		5666255	0					
ANR	5666758	IncDec	++		5666255	1					
ANR	5666759	CompoundStatement		155:42:3024:3024	5666255	3					
ANR	5666760	IfStatement	if ( mov -> flags & FF_MOV_FLAG_FRAGMENT && mov -> tracks [ i ] . vc1_info . struct_offset && s -> pb -> seekable )		5666255	0					
ANR	5666761	Condition	mov -> flags & FF_MOV_FLAG_FRAGMENT && mov -> tracks [ i ] . vc1_info . struct_offset && s -> pb -> seekable	159:12:3090:3195	5666255	0	True				
ANR	5666762	AndExpression	mov -> flags & FF_MOV_FLAG_FRAGMENT && mov -> tracks [ i ] . vc1_info . struct_offset && s -> pb -> seekable		5666255	0		&&			
ANR	5666763	BitAndExpression	mov -> flags & FF_MOV_FLAG_FRAGMENT		5666255	0		&			
ANR	5666764	PtrMemberAccess	mov -> flags		5666255	0					
ANR	5666765	Identifier	mov		5666255	0					
ANR	5666766	Identifier	flags		5666255	1					
ANR	5666767	Identifier	FF_MOV_FLAG_FRAGMENT		5666255	1					
ANR	5666768	AndExpression	mov -> tracks [ i ] . vc1_info . struct_offset && s -> pb -> seekable		5666255	1		&&			
ANR	5666769	MemberAccess	mov -> tracks [ i ] . vc1_info . struct_offset		5666255	0					
ANR	5666770	MemberAccess	mov -> tracks [ i ] . vc1_info		5666255	0					
ANR	5666771	ArrayIndexing	mov -> tracks [ i ]		5666255	0					
ANR	5666772	PtrMemberAccess	mov -> tracks		5666255	0					
ANR	5666773	Identifier	mov		5666255	0					
ANR	5666774	Identifier	tracks		5666255	1					
ANR	5666775	Identifier	i		5666255	1					
ANR	5666776	Identifier	vc1_info		5666255	1					
ANR	5666777	Identifier	struct_offset		5666255	1					
ANR	5666778	PtrMemberAccess	s -> pb -> seekable		5666255	1					
ANR	5666779	PtrMemberAccess	s -> pb		5666255	0					
ANR	5666780	Identifier	s		5666255	0					
ANR	5666781	Identifier	pb		5666255	1					
ANR	5666782	Identifier	seekable		5666255	1					
ANR	5666783	CompoundStatement		163:12:3204:3218	5666255	1					
ANR	5666784	IdentifierDeclStatement	int64_t off = avio_tell ( pb ) ;	163:12:3213:3240	5666255	0	True				
ANR	5666785	IdentifierDecl	off = avio_tell ( pb )		5666255	0					
ANR	5666786	IdentifierDeclType	int64_t		5666255	0					
ANR	5666787	Identifier	off		5666255	1					
ANR	5666788	AssignmentExpression	off = avio_tell ( pb )		5666255	2		=			
ANR	5666789	Identifier	off		5666255	0					
ANR	5666790	CallExpression	avio_tell ( pb )		5666255	1					
ANR	5666791	Callee	avio_tell		5666255	0					
ANR	5666792	Identifier	avio_tell		5666255	0					
ANR	5666793	ArgumentList	pb		5666255	1					
ANR	5666794	Argument	pb		5666255	0					
ANR	5666795	Identifier	pb		5666255	0					
ANR	5666796	IdentifierDeclStatement	uint8_t buf [ 7 ] ;	165:12:3255:3269	5666255	1	True				
ANR	5666797	IdentifierDecl	buf [ 7 ]		5666255	0					
ANR	5666798	IdentifierDeclType	uint8_t [ 7 ]		5666255	0					
ANR	5666799	Identifier	buf		5666255	1					
ANR	5666800	PrimaryExpression	7		5666255	2					
ANR	5666801	IfStatement	"if ( mov_write_dvc1_structs ( & mov -> tracks [ i ] , buf ) >= 0 )"		5666255	2					
ANR	5666802	Condition	"mov_write_dvc1_structs ( & mov -> tracks [ i ] , buf ) >= 0"	167:16:3288:3336	5666255	0	True				
ANR	5666803	RelationalExpression	"mov_write_dvc1_structs ( & mov -> tracks [ i ] , buf ) >= 0"		5666255	0		>=			
ANR	5666804	CallExpression	"mov_write_dvc1_structs ( & mov -> tracks [ i ] , buf )"		5666255	0					
ANR	5666805	Callee	mov_write_dvc1_structs		5666255	0					
ANR	5666806	Identifier	mov_write_dvc1_structs		5666255	0					
ANR	5666807	ArgumentList	& mov -> tracks [ i ]		5666255	1					
ANR	5666808	Argument	& mov -> tracks [ i ]		5666255	0					
ANR	5666809	UnaryOperationExpression	& mov -> tracks [ i ]		5666255	0					
ANR	5666810	UnaryOperator	&		5666255	0					
ANR	5666811	ArrayIndexing	mov -> tracks [ i ]		5666255	1					
ANR	5666812	PtrMemberAccess	mov -> tracks		5666255	0					
ANR	5666813	Identifier	mov		5666255	0					
ANR	5666814	Identifier	tracks		5666255	1					
ANR	5666815	Identifier	i		5666255	1					
ANR	5666816	Argument	buf		5666255	1					
ANR	5666817	Identifier	buf		5666255	0					
ANR	5666818	PrimaryExpression	0		5666255	1					
ANR	5666819	CompoundStatement		165:67:3288:3288	5666255	1					
ANR	5666820	ExpressionStatement	"avio_seek ( pb , mov -> tracks [ i ] . vc1_info . struct_offset , SEEK_SET )"	169:16:3358:3420	5666255	0	True				
ANR	5666821	CallExpression	"avio_seek ( pb , mov -> tracks [ i ] . vc1_info . struct_offset , SEEK_SET )"		5666255	0					
ANR	5666822	Callee	avio_seek		5666255	0					
ANR	5666823	Identifier	avio_seek		5666255	0					
ANR	5666824	ArgumentList	pb		5666255	1					
ANR	5666825	Argument	pb		5666255	0					
ANR	5666826	Identifier	pb		5666255	0					
ANR	5666827	Argument	mov -> tracks [ i ] . vc1_info . struct_offset		5666255	1					
ANR	5666828	MemberAccess	mov -> tracks [ i ] . vc1_info . struct_offset		5666255	0					
ANR	5666829	MemberAccess	mov -> tracks [ i ] . vc1_info		5666255	0					
ANR	5666830	ArrayIndexing	mov -> tracks [ i ]		5666255	0					
ANR	5666831	PtrMemberAccess	mov -> tracks		5666255	0					
ANR	5666832	Identifier	mov		5666255	0					
ANR	5666833	Identifier	tracks		5666255	1					
ANR	5666834	Identifier	i		5666255	1					
ANR	5666835	Identifier	vc1_info		5666255	1					
ANR	5666836	Identifier	struct_offset		5666255	1					
ANR	5666837	Argument	SEEK_SET		5666255	2					
ANR	5666838	Identifier	SEEK_SET		5666255	0					
ANR	5666839	ExpressionStatement	"avio_write ( pb , buf , 7 )"	171:16:3439:3461	5666255	1	True				
ANR	5666840	CallExpression	"avio_write ( pb , buf , 7 )"		5666255	0					
ANR	5666841	Callee	avio_write		5666255	0					
ANR	5666842	Identifier	avio_write		5666255	0					
ANR	5666843	ArgumentList	pb		5666255	1					
ANR	5666844	Argument	pb		5666255	0					
ANR	5666845	Identifier	pb		5666255	0					
ANR	5666846	Argument	buf		5666255	1					
ANR	5666847	Identifier	buf		5666255	0					
ANR	5666848	Argument	7		5666255	2					
ANR	5666849	PrimaryExpression	7		5666255	0					
ANR	5666850	ExpressionStatement	"avio_seek ( pb , off , SEEK_SET )"	173:16:3480:3508	5666255	2	True				
ANR	5666851	CallExpression	"avio_seek ( pb , off , SEEK_SET )"		5666255	0					
ANR	5666852	Callee	avio_seek		5666255	0					
ANR	5666853	Identifier	avio_seek		5666255	0					
ANR	5666854	ArgumentList	pb		5666255	1					
ANR	5666855	Argument	pb		5666255	0					
ANR	5666856	Identifier	pb		5666255	0					
ANR	5666857	Argument	off		5666255	1					
ANR	5666858	Identifier	off		5666255	0					
ANR	5666859	Argument	SEEK_SET		5666255	2					
ANR	5666860	Identifier	SEEK_SET		5666255	0					
ANR	5666861	Label	error :	183:0:3546:3551	5666255	9	True				
ANR	5666862	Identifier	error		5666255	0					
ANR	5666863	ExpressionStatement	mov_free ( s )	185:4:3558:3569	5666255	10	True				
ANR	5666864	CallExpression	mov_free ( s )		5666255	0					
ANR	5666865	Callee	mov_free		5666255	0					
ANR	5666866	Identifier	mov_free		5666255	0					
ANR	5666867	ArgumentList	s		5666255	1					
ANR	5666868	Argument	s		5666255	0					
ANR	5666869	Identifier	s		5666255	0					
ANR	5666870	ReturnStatement	return res ;	189:4:3578:3588	5666255	11	True				
ANR	5666871	Identifier	res		5666255	0					
ANR	5666872	ReturnType	static int		5666255	1					
ANR	5666873	Identifier	mov_write_trailer		5666255	2					
ANR	5666874	ParameterList	AVFormatContext * s		5666255	3					
ANR	5666875	Parameter	AVFormatContext * s	1:29:29:46	5666255	0	True				
ANR	5666876	ParameterType	AVFormatContext *		5666255	0					
ANR	5666877	Identifier	s		5666255	1					
ANR	5666878	CFGEntryNode	ENTRY		5666255		True				
ANR	5666879	CFGExitNode	EXIT		5666255		True				
ANR	5666880	Symbol	* * trk		5666255						
ANR	5666881	Symbol	mov -> mode		5666255						
ANR	5666882	Symbol	mov -> tracks [ i ] . vc1_info . struct_offset		5666255						
ANR	5666883	Symbol	mov -> tracks [ i ] . vc1_info		5666255						
ANR	5666884	Symbol	* mov -> tracks		5666255						
ANR	5666885	Symbol	MODE_IPOD		5666255						
ANR	5666886	Symbol	mov_write_dvc1_structs		5666255						
ANR	5666887	Symbol	MODE_MOV		5666255						
ANR	5666888	Symbol	mov -> nb_streams		5666255						
ANR	5666889	Symbol	mov -> flags		5666255						
ANR	5666890	Symbol	mov		5666255						
ANR	5666891	Symbol	MODE_MP4		5666255						
ANR	5666892	Symbol	s -> priv_data		5666255						
ANR	5666893	Symbol	* s -> pb		5666255						
ANR	5666894	Symbol	res		5666255						
ANR	5666895	Symbol	trk		5666255						
ANR	5666896	Symbol	trk -> enc -> codec_id		5666255						
ANR	5666897	Symbol	mov -> mdat_size		5666255						
ANR	5666898	Symbol	FF_MOV_FLAG_FASTSTART		5666255						
ANR	5666899	Symbol	s -> pb -> seekable		5666255						
ANR	5666900	Symbol	size		5666255						
ANR	5666901	Symbol	trk -> last_sample_is_subtitle_end		5666255						
ANR	5666902	Symbol	mov -> mdat_pos		5666255						
ANR	5666903	Symbol	FF_MOV_FLAG_FRAGMENT		5666255						
ANR	5666904	Symbol	AV_LOG_INFO		5666255						
ANR	5666905	Symbol	mov_create_chapter_track		5666255						
ANR	5666906	Symbol	UINT32_MAX		5666255						
ANR	5666907	Symbol	trk -> track_duration		5666255						
ANR	5666908	Symbol	mov -> chapter_track		5666255						
ANR	5666909	Symbol	mov -> reserved_moov_pos		5666255						
ANR	5666910	Symbol	s -> pb		5666255						
ANR	5666911	Symbol	* trk -> enc		5666255						
ANR	5666912	Symbol	avio_tell		5666255						
ANR	5666913	Symbol	moov_pos		5666255						
ANR	5666914	Symbol	* trk		5666255						
ANR	5666915	Symbol	AV_CODEC_ID_MOV_TEXT		5666255						
ANR	5666916	Symbol	trk -> enc		5666255						
ANR	5666917	Symbol	* * s		5666255						
ANR	5666918	Symbol	SEEK_SET		5666255						
ANR	5666919	Symbol	mov -> reserved_moov_size		5666255						
ANR	5666920	Symbol	s -> nb_chapters		5666255						
ANR	5666921	Symbol	* * mov		5666255						
ANR	5666922	Symbol	i		5666255						
ANR	5666923	Symbol	mov -> tracks		5666255						
ANR	5666924	Symbol	off		5666255						
ANR	5666925	Symbol	pb		5666255						
ANR	5666926	Symbol	buf		5666255						
ANR	5666927	Symbol	s		5666255						
ANR	5666928	Symbol	* i		5666255						
ANR	5666929	Symbol	shift_data		5666255						
ANR	5666930	Symbol	* s		5666255						
ANR	5666931	Symbol	* mov		5666255						
