command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1002695	File	/home/p4ultr4n/workplace/ReVeal/raw_code/bdrv_open_common_02_0.c								
ANR	1002696	Function	bdrv_open_common	1:0:0:4470							
ANR	1002697	FunctionDef	"bdrv_open_common (BlockDriverState * bs , BdrvChild * file , QDict * options , Error * * errp)"		1002696	0					
ANR	1002698	CompoundStatement		5:0:127:4470	1002696	0					
ANR	1002699	IdentifierDeclStatement	"int ret , open_flags ;"	7:4:134:153	1002696	0	True				
ANR	1002700	IdentifierDecl	ret		1002696	0					
ANR	1002701	IdentifierDeclType	int		1002696	0					
ANR	1002702	Identifier	ret		1002696	1					
ANR	1002703	IdentifierDecl	open_flags		1002696	1					
ANR	1002704	IdentifierDeclType	int		1002696	0					
ANR	1002705	Identifier	open_flags		1002696	1					
ANR	1002706	IdentifierDeclStatement	const char * filename ;	9:4:160:180	1002696	1	True				
ANR	1002707	IdentifierDecl	* filename		1002696	0					
ANR	1002708	IdentifierDeclType	const char *		1002696	0					
ANR	1002709	Identifier	filename		1002696	1					
ANR	1002710	IdentifierDeclStatement	const char * driver_name = NULL ;	11:4:187:217	1002696	2	True				
ANR	1002711	IdentifierDecl	* driver_name = NULL		1002696	0					
ANR	1002712	IdentifierDeclType	const char *		1002696	0					
ANR	1002713	Identifier	driver_name		1002696	1					
ANR	1002714	AssignmentExpression	* driver_name = NULL		1002696	2		=			
ANR	1002715	Identifier	NULL		1002696	0					
ANR	1002716	Identifier	NULL		1002696	1					
ANR	1002717	IdentifierDeclStatement	const char * node_name = NULL ;	13:4:224:252	1002696	3	True				
ANR	1002718	IdentifierDecl	* node_name = NULL		1002696	0					
ANR	1002719	IdentifierDeclType	const char *		1002696	0					
ANR	1002720	Identifier	node_name		1002696	1					
ANR	1002721	AssignmentExpression	* node_name = NULL		1002696	2		=			
ANR	1002722	Identifier	NULL		1002696	0					
ANR	1002723	Identifier	NULL		1002696	1					
ANR	1002724	IdentifierDeclStatement	QemuOpts * opts ;	15:4:259:273	1002696	4	True				
ANR	1002725	IdentifierDecl	* opts		1002696	0					
ANR	1002726	IdentifierDeclType	QemuOpts *		1002696	0					
ANR	1002727	Identifier	opts		1002696	1					
ANR	1002728	IdentifierDeclStatement	BlockDriver * drv ;	17:4:280:296	1002696	5	True				
ANR	1002729	IdentifierDecl	* drv		1002696	0					
ANR	1002730	IdentifierDeclType	BlockDriver *		1002696	0					
ANR	1002731	Identifier	drv		1002696	1					
ANR	1002732	IdentifierDeclStatement	Error * local_err = NULL ;	19:4:303:326	1002696	6	True				
ANR	1002733	IdentifierDecl	* local_err = NULL		1002696	0					
ANR	1002734	IdentifierDeclType	Error *		1002696	0					
ANR	1002735	Identifier	local_err		1002696	1					
ANR	1002736	AssignmentExpression	* local_err = NULL		1002696	2		=			
ANR	1002737	Identifier	NULL		1002696	0					
ANR	1002738	Identifier	NULL		1002696	1					
ANR	1002739	ExpressionStatement	assert ( bs -> file == NULL )	23:4:335:359	1002696	7	True				
ANR	1002740	CallExpression	assert ( bs -> file == NULL )		1002696	0					
ANR	1002741	Callee	assert		1002696	0					
ANR	1002742	Identifier	assert		1002696	0					
ANR	1002743	ArgumentList	bs -> file == NULL		1002696	1					
ANR	1002744	Argument	bs -> file == NULL		1002696	0					
ANR	1002745	EqualityExpression	bs -> file == NULL		1002696	0		==			
ANR	1002746	PtrMemberAccess	bs -> file		1002696	0					
ANR	1002747	Identifier	bs		1002696	0					
ANR	1002748	Identifier	file		1002696	1					
ANR	1002749	Identifier	NULL		1002696	1					
ANR	1002750	ExpressionStatement	assert ( options != NULL && bs -> options != options )	25:4:366:415	1002696	8	True				
ANR	1002751	CallExpression	assert ( options != NULL && bs -> options != options )		1002696	0					
ANR	1002752	Callee	assert		1002696	0					
ANR	1002753	Identifier	assert		1002696	0					
ANR	1002754	ArgumentList	options != NULL && bs -> options != options		1002696	1					
ANR	1002755	Argument	options != NULL && bs -> options != options		1002696	0					
ANR	1002756	AndExpression	options != NULL && bs -> options != options		1002696	0		&&			
ANR	1002757	EqualityExpression	options != NULL		1002696	0		!=			
ANR	1002758	Identifier	options		1002696	0					
ANR	1002759	Identifier	NULL		1002696	1					
ANR	1002760	EqualityExpression	bs -> options != options		1002696	1		!=			
ANR	1002761	PtrMemberAccess	bs -> options		1002696	0					
ANR	1002762	Identifier	bs		1002696	0					
ANR	1002763	Identifier	options		1002696	1					
ANR	1002764	Identifier	options		1002696	1					
ANR	1002765	ExpressionStatement	"opts = qemu_opts_create ( & bdrv_runtime_opts , NULL , 0 , & error_abort )"	29:4:424:490	1002696	9	True				
ANR	1002766	AssignmentExpression	"opts = qemu_opts_create ( & bdrv_runtime_opts , NULL , 0 , & error_abort )"		1002696	0		=			
ANR	1002767	Identifier	opts		1002696	0					
ANR	1002768	CallExpression	"qemu_opts_create ( & bdrv_runtime_opts , NULL , 0 , & error_abort )"		1002696	1					
ANR	1002769	Callee	qemu_opts_create		1002696	0					
ANR	1002770	Identifier	qemu_opts_create		1002696	0					
ANR	1002771	ArgumentList	& bdrv_runtime_opts		1002696	1					
ANR	1002772	Argument	& bdrv_runtime_opts		1002696	0					
ANR	1002773	UnaryOperationExpression	& bdrv_runtime_opts		1002696	0					
ANR	1002774	UnaryOperator	&		1002696	0					
ANR	1002775	Identifier	bdrv_runtime_opts		1002696	1					
ANR	1002776	Argument	NULL		1002696	1					
ANR	1002777	Identifier	NULL		1002696	0					
ANR	1002778	Argument	0		1002696	2					
ANR	1002779	PrimaryExpression	0		1002696	0					
ANR	1002780	Argument	& error_abort		1002696	3					
ANR	1002781	UnaryOperationExpression	& error_abort		1002696	0					
ANR	1002782	UnaryOperator	&		1002696	0					
ANR	1002783	Identifier	error_abort		1002696	1					
ANR	1002784	ExpressionStatement	"qemu_opts_absorb_qdict ( opts , options , & local_err )"	31:4:497:546	1002696	10	True				
ANR	1002785	CallExpression	"qemu_opts_absorb_qdict ( opts , options , & local_err )"		1002696	0					
ANR	1002786	Callee	qemu_opts_absorb_qdict		1002696	0					
ANR	1002787	Identifier	qemu_opts_absorb_qdict		1002696	0					
ANR	1002788	ArgumentList	opts		1002696	1					
ANR	1002789	Argument	opts		1002696	0					
ANR	1002790	Identifier	opts		1002696	0					
ANR	1002791	Argument	options		1002696	1					
ANR	1002792	Identifier	options		1002696	0					
ANR	1002793	Argument	& local_err		1002696	2					
ANR	1002794	UnaryOperationExpression	& local_err		1002696	0					
ANR	1002795	UnaryOperator	&		1002696	0					
ANR	1002796	Identifier	local_err		1002696	1					
ANR	1002797	IfStatement	if ( local_err )		1002696	11					
ANR	1002798	Condition	local_err	33:8:557:565	1002696	0	True				
ANR	1002799	Identifier	local_err		1002696	0					
ANR	1002800	CompoundStatement		29:19:440:440	1002696	1					
ANR	1002801	ExpressionStatement	"error_propagate ( errp , local_err )"	35:8:579:611	1002696	0	True				
ANR	1002802	CallExpression	"error_propagate ( errp , local_err )"		1002696	0					
ANR	1002803	Callee	error_propagate		1002696	0					
ANR	1002804	Identifier	error_propagate		1002696	0					
ANR	1002805	ArgumentList	errp		1002696	1					
ANR	1002806	Argument	errp		1002696	0					
ANR	1002807	Identifier	errp		1002696	0					
ANR	1002808	Argument	local_err		1002696	1					
ANR	1002809	Identifier	local_err		1002696	0					
ANR	1002810	ExpressionStatement	ret = - EINVAL	37:8:622:635	1002696	1	True				
ANR	1002811	AssignmentExpression	ret = - EINVAL		1002696	0		=			
ANR	1002812	Identifier	ret		1002696	0					
ANR	1002813	UnaryOperationExpression	- EINVAL		1002696	1					
ANR	1002814	UnaryOperator	-		1002696	0					
ANR	1002815	Identifier	EINVAL		1002696	1					
ANR	1002816	GotoStatement	goto fail_opts ;	39:8:646:660	1002696	2	True				
ANR	1002817	Identifier	fail_opts		1002696	0					
ANR	1002818	ExpressionStatement	"driver_name = qemu_opt_get ( opts , ""driver"" )"	45:4:676:718	1002696	12	True				
ANR	1002819	AssignmentExpression	"driver_name = qemu_opt_get ( opts , ""driver"" )"		1002696	0		=			
ANR	1002820	Identifier	driver_name		1002696	0					
ANR	1002821	CallExpression	"qemu_opt_get ( opts , ""driver"" )"		1002696	1					
ANR	1002822	Callee	qemu_opt_get		1002696	0					
ANR	1002823	Identifier	qemu_opt_get		1002696	0					
ANR	1002824	ArgumentList	opts		1002696	1					
ANR	1002825	Argument	opts		1002696	0					
ANR	1002826	Identifier	opts		1002696	0					
ANR	1002827	Argument	"""driver"""		1002696	1					
ANR	1002828	PrimaryExpression	"""driver"""		1002696	0					
ANR	1002829	ExpressionStatement	drv = bdrv_find_format ( driver_name )	47:4:725:760	1002696	13	True				
ANR	1002830	AssignmentExpression	drv = bdrv_find_format ( driver_name )		1002696	0		=			
ANR	1002831	Identifier	drv		1002696	0					
ANR	1002832	CallExpression	bdrv_find_format ( driver_name )		1002696	1					
ANR	1002833	Callee	bdrv_find_format		1002696	0					
ANR	1002834	Identifier	bdrv_find_format		1002696	0					
ANR	1002835	ArgumentList	driver_name		1002696	1					
ANR	1002836	Argument	driver_name		1002696	0					
ANR	1002837	Identifier	driver_name		1002696	0					
ANR	1002838	ExpressionStatement	assert ( drv != NULL )	49:4:767:786	1002696	14	True				
ANR	1002839	CallExpression	assert ( drv != NULL )		1002696	0					
ANR	1002840	Callee	assert		1002696	0					
ANR	1002841	Identifier	assert		1002696	0					
ANR	1002842	ArgumentList	drv != NULL		1002696	1					
ANR	1002843	Argument	drv != NULL		1002696	0					
ANR	1002844	EqualityExpression	drv != NULL		1002696	0		!=			
ANR	1002845	Identifier	drv		1002696	0					
ANR	1002846	Identifier	NULL		1002696	1					
ANR	1002847	IfStatement	if ( file != NULL )		1002696	15					
ANR	1002848	Condition	file != NULL	53:8:799:810	1002696	0	True				
ANR	1002849	EqualityExpression	file != NULL		1002696	0		!=			
ANR	1002850	Identifier	file		1002696	0					
ANR	1002851	Identifier	NULL		1002696	1					
ANR	1002852	CompoundStatement		49:22:685:685	1002696	1					
ANR	1002853	ExpressionStatement	filename = file -> bs -> filename	55:8:824:853	1002696	0	True				
ANR	1002854	AssignmentExpression	filename = file -> bs -> filename		1002696	0		=			
ANR	1002855	Identifier	filename		1002696	0					
ANR	1002856	PtrMemberAccess	file -> bs -> filename		1002696	1					
ANR	1002857	PtrMemberAccess	file -> bs		1002696	0					
ANR	1002858	Identifier	file		1002696	0					
ANR	1002859	Identifier	bs		1002696	1					
ANR	1002860	Identifier	filename		1002696	1					
ANR	1002861	ElseStatement	else		1002696	0					
ANR	1002862	CompoundStatement		53:11:739:739	1002696	0					
ANR	1002863	ExpressionStatement	"filename = qdict_get_try_str ( options , ""filename"" )"	59:8:878:927	1002696	0	True				
ANR	1002864	AssignmentExpression	"filename = qdict_get_try_str ( options , ""filename"" )"		1002696	0		=			
ANR	1002865	Identifier	filename		1002696	0					
ANR	1002866	CallExpression	"qdict_get_try_str ( options , ""filename"" )"		1002696	1					
ANR	1002867	Callee	qdict_get_try_str		1002696	0					
ANR	1002868	Identifier	qdict_get_try_str		1002696	0					
ANR	1002869	ArgumentList	options		1002696	1					
ANR	1002870	Argument	options		1002696	0					
ANR	1002871	Identifier	options		1002696	0					
ANR	1002872	Argument	"""filename"""		1002696	1					
ANR	1002873	PrimaryExpression	"""filename"""		1002696	0					
ANR	1002874	IfStatement	if ( drv -> bdrv_needs_filename && ! filename )		1002696	16					
ANR	1002875	Condition	drv -> bdrv_needs_filename && ! filename	65:8:947:983	1002696	0	True				
ANR	1002876	AndExpression	drv -> bdrv_needs_filename && ! filename		1002696	0		&&			
ANR	1002877	PtrMemberAccess	drv -> bdrv_needs_filename		1002696	0					
ANR	1002878	Identifier	drv		1002696	0					
ANR	1002879	Identifier	bdrv_needs_filename		1002696	1					
ANR	1002880	UnaryOperationExpression	! filename		1002696	1					
ANR	1002881	UnaryOperator	!		1002696	0					
ANR	1002882	Identifier	filename		1002696	1					
ANR	1002883	CompoundStatement		61:47:858:858	1002696	1					
ANR	1002884	ExpressionStatement	"error_setg ( errp , ""The '%s' block driver requires a file name"" , drv -> format_name )"	67:8:997:1097	1002696	0	True				
ANR	1002885	CallExpression	"error_setg ( errp , ""The '%s' block driver requires a file name"" , drv -> format_name )"		1002696	0					
ANR	1002886	Callee	error_setg		1002696	0					
ANR	1002887	Identifier	error_setg		1002696	0					
ANR	1002888	ArgumentList	errp		1002696	1					
ANR	1002889	Argument	errp		1002696	0					
ANR	1002890	Identifier	errp		1002696	0					
ANR	1002891	Argument	"""The '%s' block driver requires a file name"""		1002696	1					
ANR	1002892	PrimaryExpression	"""The '%s' block driver requires a file name"""		1002696	0					
ANR	1002893	Argument	drv -> format_name		1002696	2					
ANR	1002894	PtrMemberAccess	drv -> format_name		1002696	0					
ANR	1002895	Identifier	drv		1002696	0					
ANR	1002896	Identifier	format_name		1002696	1					
ANR	1002897	ExpressionStatement	ret = - EINVAL	71:8:1108:1121	1002696	1	True				
ANR	1002898	AssignmentExpression	ret = - EINVAL		1002696	0		=			
ANR	1002899	Identifier	ret		1002696	0					
ANR	1002900	UnaryOperationExpression	- EINVAL		1002696	1					
ANR	1002901	UnaryOperator	-		1002696	0					
ANR	1002902	Identifier	EINVAL		1002696	1					
ANR	1002903	GotoStatement	goto fail_opts ;	73:8:1132:1146	1002696	2	True				
ANR	1002904	Identifier	fail_opts		1002696	0					
ANR	1002905	Statement	trace_bdrv_open_common	79:4:1162:1183	1002696	17	True				
ANR	1002906	Statement	(	79:26:1184:1184	1002696	18	True				
ANR	1002907	Statement	bs	79:27:1185:1186	1002696	19	True				
ANR	1002908	Statement	","	79:29:1187:1187	1002696	20	True				
ANR	1002909	Statement	filename	79:31:1189:1196	1002696	21	True				
ANR	1002910	Statement	?	79:40:1198:1198	1002696	22	True				
ANR	1002911	Statement	:	79:41:1199:1199	1002696	23	True				
ANR	1002912	Statement	""""""	79:43:1201:1202	1002696	24	True				
ANR	1002913	Statement	","	79:45:1203:1203	1002696	25	True				
ANR	1002914	Statement	bs	79:47:1205:1206	1002696	26	True				
ANR	1002915	Statement	->	79:49:1207:1208	1002696	27	True				
ANR	1002916	Statement	open_flags	79:51:1209:1218	1002696	28	True				
ANR	1002917	Statement	","	79:61:1219:1219	1002696	29	True				
ANR	1002918	Statement	drv	81:27:1249:1251	1002696	30	True				
ANR	1002919	Statement	->	81:30:1252:1253	1002696	31	True				
ANR	1002920	Statement	format_name	81:32:1254:1264	1002696	32	True				
ANR	1002921	Statement	)	81:43:1265:1265	1002696	33	True				
ANR	1002922	ExpressionStatement		81:44:1266:1266	1002696	34	True				
ANR	1002923	ExpressionStatement	"node_name = qemu_opt_get ( opts , ""node-name"" )"	85:4:1275:1318	1002696	35	True				
ANR	1002924	AssignmentExpression	"node_name = qemu_opt_get ( opts , ""node-name"" )"		1002696	0		=			
ANR	1002925	Identifier	node_name		1002696	0					
ANR	1002926	CallExpression	"qemu_opt_get ( opts , ""node-name"" )"		1002696	1					
ANR	1002927	Callee	qemu_opt_get		1002696	0					
ANR	1002928	Identifier	qemu_opt_get		1002696	0					
ANR	1002929	ArgumentList	opts		1002696	1					
ANR	1002930	Argument	opts		1002696	0					
ANR	1002931	Identifier	opts		1002696	0					
ANR	1002932	Argument	"""node-name"""		1002696	1					
ANR	1002933	PrimaryExpression	"""node-name"""		1002696	0					
ANR	1002934	ExpressionStatement	"bdrv_assign_node_name ( bs , node_name , & local_err )"	87:4:1325:1373	1002696	36	True				
ANR	1002935	CallExpression	"bdrv_assign_node_name ( bs , node_name , & local_err )"		1002696	0					
ANR	1002936	Callee	bdrv_assign_node_name		1002696	0					
ANR	1002937	Identifier	bdrv_assign_node_name		1002696	0					
ANR	1002938	ArgumentList	bs		1002696	1					
ANR	1002939	Argument	bs		1002696	0					
ANR	1002940	Identifier	bs		1002696	0					
ANR	1002941	Argument	node_name		1002696	1					
ANR	1002942	Identifier	node_name		1002696	0					
ANR	1002943	Argument	& local_err		1002696	2					
ANR	1002944	UnaryOperationExpression	& local_err		1002696	0					
ANR	1002945	UnaryOperator	&		1002696	0					
ANR	1002946	Identifier	local_err		1002696	1					
ANR	1002947	IfStatement	if ( local_err )		1002696	37					
ANR	1002948	Condition	local_err	89:8:1384:1392	1002696	0	True				
ANR	1002949	Identifier	local_err		1002696	0					
ANR	1002950	CompoundStatement		85:19:1267:1267	1002696	1					
ANR	1002951	ExpressionStatement	"error_propagate ( errp , local_err )"	91:8:1406:1438	1002696	0	True				
ANR	1002952	CallExpression	"error_propagate ( errp , local_err )"		1002696	0					
ANR	1002953	Callee	error_propagate		1002696	0					
ANR	1002954	Identifier	error_propagate		1002696	0					
ANR	1002955	ArgumentList	errp		1002696	1					
ANR	1002956	Argument	errp		1002696	0					
ANR	1002957	Identifier	errp		1002696	0					
ANR	1002958	Argument	local_err		1002696	1					
ANR	1002959	Identifier	local_err		1002696	0					
ANR	1002960	ExpressionStatement	ret = - EINVAL	93:8:1449:1462	1002696	1	True				
ANR	1002961	AssignmentExpression	ret = - EINVAL		1002696	0		=			
ANR	1002962	Identifier	ret		1002696	0					
ANR	1002963	UnaryOperationExpression	- EINVAL		1002696	1					
ANR	1002964	UnaryOperator	-		1002696	0					
ANR	1002965	Identifier	EINVAL		1002696	1					
ANR	1002966	GotoStatement	goto fail_opts ;	95:8:1473:1487	1002696	2	True				
ANR	1002967	Identifier	fail_opts		1002696	0					
ANR	1002968	ExpressionStatement	bs -> read_only = ! ( bs -> open_flags & BDRV_O_RDWR )	101:4:1503:1550	1002696	38	True				
ANR	1002969	AssignmentExpression	bs -> read_only = ! ( bs -> open_flags & BDRV_O_RDWR )		1002696	0		=			
ANR	1002970	PtrMemberAccess	bs -> read_only		1002696	0					
ANR	1002971	Identifier	bs		1002696	0					
ANR	1002972	Identifier	read_only		1002696	1					
ANR	1002973	UnaryOperationExpression	! ( bs -> open_flags & BDRV_O_RDWR )		1002696	1					
ANR	1002974	UnaryOperator	!		1002696	0					
ANR	1002975	BitAndExpression	bs -> open_flags & BDRV_O_RDWR		1002696	1		&			
ANR	1002976	PtrMemberAccess	bs -> open_flags		1002696	0					
ANR	1002977	Identifier	bs		1002696	0					
ANR	1002978	Identifier	open_flags		1002696	1					
ANR	1002979	Identifier	BDRV_O_RDWR		1002696	1					
ANR	1002980	IfStatement	"if ( use_bdrv_whitelist && ! bdrv_is_whitelisted ( drv , bs -> read_only ) )"		1002696	39					
ANR	1002981	Condition	"use_bdrv_whitelist && ! bdrv_is_whitelisted ( drv , bs -> read_only )"	105:8:1563:1624	1002696	0	True				
ANR	1002982	AndExpression	"use_bdrv_whitelist && ! bdrv_is_whitelisted ( drv , bs -> read_only )"		1002696	0		&&			
ANR	1002983	Identifier	use_bdrv_whitelist		1002696	0					
ANR	1002984	UnaryOperationExpression	"! bdrv_is_whitelisted ( drv , bs -> read_only )"		1002696	1					
ANR	1002985	UnaryOperator	!		1002696	0					
ANR	1002986	CallExpression	"bdrv_is_whitelisted ( drv , bs -> read_only )"		1002696	1					
ANR	1002987	Callee	bdrv_is_whitelisted		1002696	0					
ANR	1002988	Identifier	bdrv_is_whitelisted		1002696	0					
ANR	1002989	ArgumentList	drv		1002696	1					
ANR	1002990	Argument	drv		1002696	0					
ANR	1002991	Identifier	drv		1002696	0					
ANR	1002992	Argument	bs -> read_only		1002696	1					
ANR	1002993	PtrMemberAccess	bs -> read_only		1002696	0					
ANR	1002994	Identifier	bs		1002696	0					
ANR	1002995	Identifier	read_only		1002696	1					
ANR	1002996	CompoundStatement		101:72:1499:1499	1002696	1					
ANR	1002997	ExpressionStatement	"error_setg ( errp , ! bs -> read_only && bdrv_is_whitelisted ( drv , true ) ? ""Driver '%s' can only be used for read-only devices"" : ""Driver '%s' is not whitelisted"" , drv -> format_name )"	107:8:1638:1902	1002696	0	True				
ANR	1002998	CallExpression	"error_setg ( errp , ! bs -> read_only && bdrv_is_whitelisted ( drv , true ) ? ""Driver '%s' can only be used for read-only devices"" : ""Driver '%s' is not whitelisted"" , drv -> format_name )"		1002696	0					
ANR	1002999	Callee	error_setg		1002696	0					
ANR	1003000	Identifier	error_setg		1002696	0					
ANR	1003001	ArgumentList	errp		1002696	1					
ANR	1003002	Argument	errp		1002696	0					
ANR	1003003	Identifier	errp		1002696	0					
ANR	1003004	Argument	"! bs -> read_only && bdrv_is_whitelisted ( drv , true ) ? ""Driver '%s' can only be used for read-only devices"" : ""Driver '%s' is not whitelisted"""		1002696	1					
ANR	1003005	ConditionalExpression	"! bs -> read_only && bdrv_is_whitelisted ( drv , true ) ? ""Driver '%s' can only be used for read-only devices"" : ""Driver '%s' is not whitelisted"""		1002696	0					
ANR	1003006	Condition	"! bs -> read_only && bdrv_is_whitelisted ( drv , true )"		1002696	0					
ANR	1003007	AndExpression	"! bs -> read_only && bdrv_is_whitelisted ( drv , true )"		1002696	0		&&			
ANR	1003008	UnaryOperationExpression	! bs -> read_only		1002696	0					
ANR	1003009	UnaryOperator	!		1002696	0					
ANR	1003010	PtrMemberAccess	bs -> read_only		1002696	1					
ANR	1003011	Identifier	bs		1002696	0					
ANR	1003012	Identifier	read_only		1002696	1					
ANR	1003013	CallExpression	"bdrv_is_whitelisted ( drv , true )"		1002696	1					
ANR	1003014	Callee	bdrv_is_whitelisted		1002696	0					
ANR	1003015	Identifier	bdrv_is_whitelisted		1002696	0					
ANR	1003016	ArgumentList	drv		1002696	1					
ANR	1003017	Argument	drv		1002696	0					
ANR	1003018	Identifier	drv		1002696	0					
ANR	1003019	Argument	true		1002696	1					
ANR	1003020	Identifier	true		1002696	0					
ANR	1003021	PrimaryExpression	"""Driver '%s' can only be used for read-only devices"""		1002696	1					
ANR	1003022	PrimaryExpression	"""Driver '%s' is not whitelisted"""		1002696	2					
ANR	1003023	Argument	drv -> format_name		1002696	2					
ANR	1003024	PtrMemberAccess	drv -> format_name		1002696	0					
ANR	1003025	Identifier	drv		1002696	0					
ANR	1003026	Identifier	format_name		1002696	1					
ANR	1003027	ExpressionStatement	ret = - ENOTSUP	117:8:1913:1927	1002696	1	True				
ANR	1003028	AssignmentExpression	ret = - ENOTSUP		1002696	0		=			
ANR	1003029	Identifier	ret		1002696	0					
ANR	1003030	UnaryOperationExpression	- ENOTSUP		1002696	1					
ANR	1003031	UnaryOperator	-		1002696	0					
ANR	1003032	Identifier	ENOTSUP		1002696	1					
ANR	1003033	GotoStatement	goto fail_opts ;	119:8:1938:1952	1002696	2	True				
ANR	1003034	Identifier	fail_opts		1002696	0					
ANR	1003035	ExpressionStatement	assert ( bs -> copy_on_read == 0 )	125:4:1968:1997	1002696	40	True				
ANR	1003036	CallExpression	assert ( bs -> copy_on_read == 0 )		1002696	0					
ANR	1003037	Callee	assert		1002696	0					
ANR	1003038	Identifier	assert		1002696	0					
ANR	1003039	ArgumentList	bs -> copy_on_read == 0		1002696	1					
ANR	1003040	Argument	bs -> copy_on_read == 0		1002696	0					
ANR	1003041	EqualityExpression	bs -> copy_on_read == 0		1002696	0		==			
ANR	1003042	PtrMemberAccess	bs -> copy_on_read		1002696	0					
ANR	1003043	Identifier	bs		1002696	0					
ANR	1003044	Identifier	copy_on_read		1002696	1					
ANR	1003045	PrimaryExpression	0		1002696	1					
ANR	1003046	IfStatement	if ( bs -> open_flags & BDRV_O_COPY_ON_READ )		1002696	41					
ANR	1003047	Condition	bs -> open_flags & BDRV_O_COPY_ON_READ	127:8:2053:2088	1002696	0	True				
ANR	1003048	BitAndExpression	bs -> open_flags & BDRV_O_COPY_ON_READ		1002696	0		&			
ANR	1003049	PtrMemberAccess	bs -> open_flags		1002696	0					
ANR	1003050	Identifier	bs		1002696	0					
ANR	1003051	Identifier	open_flags		1002696	1					
ANR	1003052	Identifier	BDRV_O_COPY_ON_READ		1002696	1					
ANR	1003053	CompoundStatement		123:46:1963:1963	1002696	1					
ANR	1003054	IfStatement	if ( ! bs -> read_only )		1002696	0					
ANR	1003055	Condition	! bs -> read_only	129:12:2106:2119	1002696	0	True				
ANR	1003056	UnaryOperationExpression	! bs -> read_only		1002696	0					
ANR	1003057	UnaryOperator	!		1002696	0					
ANR	1003058	PtrMemberAccess	bs -> read_only		1002696	1					
ANR	1003059	Identifier	bs		1002696	0					
ANR	1003060	Identifier	read_only		1002696	1					
ANR	1003061	CompoundStatement		125:28:1994:1994	1002696	1					
ANR	1003062	ExpressionStatement	bdrv_enable_copy_on_read ( bs )	131:12:2137:2165	1002696	0	True				
ANR	1003063	CallExpression	bdrv_enable_copy_on_read ( bs )		1002696	0					
ANR	1003064	Callee	bdrv_enable_copy_on_read		1002696	0					
ANR	1003065	Identifier	bdrv_enable_copy_on_read		1002696	0					
ANR	1003066	ArgumentList	bs		1002696	1					
ANR	1003067	Argument	bs		1002696	0					
ANR	1003068	Identifier	bs		1002696	0					
ANR	1003069	ElseStatement	else		1002696	0					
ANR	1003070	CompoundStatement		129:15:2055:2055	1002696	0					
ANR	1003071	ExpressionStatement	"error_setg ( errp , ""Can't use copy-on-read on read-only device"" )"	135:12:2198:2260	1002696	0	True				
ANR	1003072	CallExpression	"error_setg ( errp , ""Can't use copy-on-read on read-only device"" )"		1002696	0					
ANR	1003073	Callee	error_setg		1002696	0					
ANR	1003074	Identifier	error_setg		1002696	0					
ANR	1003075	ArgumentList	errp		1002696	1					
ANR	1003076	Argument	errp		1002696	0					
ANR	1003077	Identifier	errp		1002696	0					
ANR	1003078	Argument	"""Can't use copy-on-read on read-only device"""		1002696	1					
ANR	1003079	PrimaryExpression	"""Can't use copy-on-read on read-only device"""		1002696	0					
ANR	1003080	ExpressionStatement	ret = - EINVAL	137:12:2275:2288	1002696	1	True				
ANR	1003081	AssignmentExpression	ret = - EINVAL		1002696	0		=			
ANR	1003082	Identifier	ret		1002696	0					
ANR	1003083	UnaryOperationExpression	- EINVAL		1002696	1					
ANR	1003084	UnaryOperator	-		1002696	0					
ANR	1003085	Identifier	EINVAL		1002696	1					
ANR	1003086	GotoStatement	goto fail_opts ;	139:12:2303:2317	1002696	2	True				
ANR	1003087	Identifier	fail_opts		1002696	0					
ANR	1003088	IfStatement	if ( filename != NULL )		1002696	42					
ANR	1003089	Condition	filename != NULL	147:8:2348:2363	1002696	0	True				
ANR	1003090	EqualityExpression	filename != NULL		1002696	0		!=			
ANR	1003091	Identifier	filename		1002696	0					
ANR	1003092	Identifier	NULL		1002696	1					
ANR	1003093	CompoundStatement		143:26:2238:2238	1002696	1					
ANR	1003094	ExpressionStatement	"pstrcpy ( bs -> filename , sizeof ( bs -> filename ) , filename )"	149:8:2377:2430	1002696	0	True				
ANR	1003095	CallExpression	"pstrcpy ( bs -> filename , sizeof ( bs -> filename ) , filename )"		1002696	0					
ANR	1003096	Callee	pstrcpy		1002696	0					
ANR	1003097	Identifier	pstrcpy		1002696	0					
ANR	1003098	ArgumentList	bs -> filename		1002696	1					
ANR	1003099	Argument	bs -> filename		1002696	0					
ANR	1003100	PtrMemberAccess	bs -> filename		1002696	0					
ANR	1003101	Identifier	bs		1002696	0					
ANR	1003102	Identifier	filename		1002696	1					
ANR	1003103	Argument	sizeof ( bs -> filename )		1002696	1					
ANR	1003104	SizeofExpression	sizeof ( bs -> filename )		1002696	0					
ANR	1003105	Sizeof	sizeof		1002696	0					
ANR	1003106	PtrMemberAccess	bs -> filename		1002696	1					
ANR	1003107	Identifier	bs		1002696	0					
ANR	1003108	Identifier	filename		1002696	1					
ANR	1003109	Argument	filename		1002696	2					
ANR	1003110	Identifier	filename		1002696	0					
ANR	1003111	ElseStatement	else		1002696	0					
ANR	1003112	CompoundStatement		147:11:2316:2316	1002696	0					
ANR	1003113	ExpressionStatement	bs -> filename [ 0 ] = '\\0'	153:8:2455:2477	1002696	0	True				
ANR	1003114	AssignmentExpression	bs -> filename [ 0 ] = '\\0'		1002696	0		=			
ANR	1003115	ArrayIndexing	bs -> filename [ 0 ]		1002696	0					
ANR	1003116	PtrMemberAccess	bs -> filename		1002696	0					
ANR	1003117	Identifier	bs		1002696	0					
ANR	1003118	Identifier	filename		1002696	1					
ANR	1003119	PrimaryExpression	0		1002696	1					
ANR	1003120	PrimaryExpression	'\\0'		1002696	1					
ANR	1003121	ExpressionStatement	"pstrcpy ( bs -> exact_filename , sizeof ( bs -> exact_filename ) , bs -> filename )"	157:4:2491:2560	1002696	43	True				
ANR	1003122	CallExpression	"pstrcpy ( bs -> exact_filename , sizeof ( bs -> exact_filename ) , bs -> filename )"		1002696	0					
ANR	1003123	Callee	pstrcpy		1002696	0					
ANR	1003124	Identifier	pstrcpy		1002696	0					
ANR	1003125	ArgumentList	bs -> exact_filename		1002696	1					
ANR	1003126	Argument	bs -> exact_filename		1002696	0					
ANR	1003127	PtrMemberAccess	bs -> exact_filename		1002696	0					
ANR	1003128	Identifier	bs		1002696	0					
ANR	1003129	Identifier	exact_filename		1002696	1					
ANR	1003130	Argument	sizeof ( bs -> exact_filename )		1002696	1					
ANR	1003131	SizeofExpression	sizeof ( bs -> exact_filename )		1002696	0					
ANR	1003132	Sizeof	sizeof		1002696	0					
ANR	1003133	PtrMemberAccess	bs -> exact_filename		1002696	1					
ANR	1003134	Identifier	bs		1002696	0					
ANR	1003135	Identifier	exact_filename		1002696	1					
ANR	1003136	Argument	bs -> filename		1002696	2					
ANR	1003137	PtrMemberAccess	bs -> filename		1002696	0					
ANR	1003138	Identifier	bs		1002696	0					
ANR	1003139	Identifier	filename		1002696	1					
ANR	1003140	ExpressionStatement	bs -> drv = drv	161:4:2569:2582	1002696	44	True				
ANR	1003141	AssignmentExpression	bs -> drv = drv		1002696	0		=			
ANR	1003142	PtrMemberAccess	bs -> drv		1002696	0					
ANR	1003143	Identifier	bs		1002696	0					
ANR	1003144	Identifier	drv		1002696	1					
ANR	1003145	Identifier	drv		1002696	1					
ANR	1003146	ExpressionStatement	bs -> opaque = g_malloc0 ( drv -> instance_size )	163:4:2589:2631	1002696	45	True				
ANR	1003147	AssignmentExpression	bs -> opaque = g_malloc0 ( drv -> instance_size )		1002696	0		=			
ANR	1003148	PtrMemberAccess	bs -> opaque		1002696	0					
ANR	1003149	Identifier	bs		1002696	0					
ANR	1003150	Identifier	opaque		1002696	1					
ANR	1003151	CallExpression	g_malloc0 ( drv -> instance_size )		1002696	1					
ANR	1003152	Callee	g_malloc0		1002696	0					
ANR	1003153	Identifier	g_malloc0		1002696	0					
ANR	1003154	ArgumentList	drv -> instance_size		1002696	1					
ANR	1003155	Argument	drv -> instance_size		1002696	0					
ANR	1003156	PtrMemberAccess	drv -> instance_size		1002696	0					
ANR	1003157	Identifier	drv		1002696	0					
ANR	1003158	Identifier	instance_size		1002696	1					
ANR	1003159	ExpressionStatement	"update_flags_from_options ( & bs -> open_flags , opts )"	169:4:2676:2724	1002696	46	True				
ANR	1003160	CallExpression	"update_flags_from_options ( & bs -> open_flags , opts )"		1002696	0					
ANR	1003161	Callee	update_flags_from_options		1002696	0					
ANR	1003162	Identifier	update_flags_from_options		1002696	0					
ANR	1003163	ArgumentList	& bs -> open_flags		1002696	1					
ANR	1003164	Argument	& bs -> open_flags		1002696	0					
ANR	1003165	UnaryOperationExpression	& bs -> open_flags		1002696	0					
ANR	1003166	UnaryOperator	&		1002696	0					
ANR	1003167	PtrMemberAccess	bs -> open_flags		1002696	1					
ANR	1003168	Identifier	bs		1002696	0					
ANR	1003169	Identifier	open_flags		1002696	1					
ANR	1003170	Argument	opts		1002696	1					
ANR	1003171	Identifier	opts		1002696	0					
ANR	1003172	ExpressionStatement	"open_flags = bdrv_open_flags ( bs , bs -> open_flags )"	175:4:2796:2844	1002696	47	True				
ANR	1003173	AssignmentExpression	"open_flags = bdrv_open_flags ( bs , bs -> open_flags )"		1002696	0		=			
ANR	1003174	Identifier	open_flags		1002696	0					
ANR	1003175	CallExpression	"bdrv_open_flags ( bs , bs -> open_flags )"		1002696	1					
ANR	1003176	Callee	bdrv_open_flags		1002696	0					
ANR	1003177	Identifier	bdrv_open_flags		1002696	0					
ANR	1003178	ArgumentList	bs		1002696	1					
ANR	1003179	Argument	bs		1002696	0					
ANR	1003180	Identifier	bs		1002696	0					
ANR	1003181	Argument	bs -> open_flags		1002696	1					
ANR	1003182	PtrMemberAccess	bs -> open_flags		1002696	0					
ANR	1003183	Identifier	bs		1002696	0					
ANR	1003184	Identifier	open_flags		1002696	1					
ANR	1003185	IfStatement	if ( drv -> bdrv_file_open )		1002696	48					
ANR	1003186	Condition	drv -> bdrv_file_open	177:8:2855:2873	1002696	0	True				
ANR	1003187	PtrMemberAccess	drv -> bdrv_file_open		1002696	0					
ANR	1003188	Identifier	drv		1002696	0					
ANR	1003189	Identifier	bdrv_file_open		1002696	1					
ANR	1003190	CompoundStatement		173:29:2748:2748	1002696	1					
ANR	1003191	ExpressionStatement	assert ( file == NULL )	179:8:2887:2907	1002696	0	True				
ANR	1003192	CallExpression	assert ( file == NULL )		1002696	0					
ANR	1003193	Callee	assert		1002696	0					
ANR	1003194	Identifier	assert		1002696	0					
ANR	1003195	ArgumentList	file == NULL		1002696	1					
ANR	1003196	Argument	file == NULL		1002696	0					
ANR	1003197	EqualityExpression	file == NULL		1002696	0		==			
ANR	1003198	Identifier	file		1002696	0					
ANR	1003199	Identifier	NULL		1002696	1					
ANR	1003200	ExpressionStatement	assert ( ! drv -> bdrv_needs_filename || filename != NULL )	181:8:2918:2971	1002696	1	True				
ANR	1003201	CallExpression	assert ( ! drv -> bdrv_needs_filename || filename != NULL )		1002696	0					
ANR	1003202	Callee	assert		1002696	0					
ANR	1003203	Identifier	assert		1002696	0					
ANR	1003204	ArgumentList	! drv -> bdrv_needs_filename || filename != NULL		1002696	1					
ANR	1003205	Argument	! drv -> bdrv_needs_filename || filename != NULL		1002696	0					
ANR	1003206	OrExpression	! drv -> bdrv_needs_filename || filename != NULL		1002696	0		||			
ANR	1003207	UnaryOperationExpression	! drv -> bdrv_needs_filename		1002696	0					
ANR	1003208	UnaryOperator	!		1002696	0					
ANR	1003209	PtrMemberAccess	drv -> bdrv_needs_filename		1002696	1					
ANR	1003210	Identifier	drv		1002696	0					
ANR	1003211	Identifier	bdrv_needs_filename		1002696	1					
ANR	1003212	EqualityExpression	filename != NULL		1002696	1		!=			
ANR	1003213	Identifier	filename		1002696	0					
ANR	1003214	Identifier	NULL		1002696	1					
ANR	1003215	ExpressionStatement	"ret = drv -> bdrv_file_open ( bs , options , open_flags , & local_err )"	183:8:2982:3044	1002696	2	True				
ANR	1003216	AssignmentExpression	"ret = drv -> bdrv_file_open ( bs , options , open_flags , & local_err )"		1002696	0		=			
ANR	1003217	Identifier	ret		1002696	0					
ANR	1003218	CallExpression	"drv -> bdrv_file_open ( bs , options , open_flags , & local_err )"		1002696	1					
ANR	1003219	Callee	drv -> bdrv_file_open		1002696	0					
ANR	1003220	PtrMemberAccess	drv -> bdrv_file_open		1002696	0					
ANR	1003221	Identifier	drv		1002696	0					
ANR	1003222	Identifier	bdrv_file_open		1002696	1					
ANR	1003223	ArgumentList	bs		1002696	1					
ANR	1003224	Argument	bs		1002696	0					
ANR	1003225	Identifier	bs		1002696	0					
ANR	1003226	Argument	options		1002696	1					
ANR	1003227	Identifier	options		1002696	0					
ANR	1003228	Argument	open_flags		1002696	2					
ANR	1003229	Identifier	open_flags		1002696	0					
ANR	1003230	Argument	& local_err		1002696	3					
ANR	1003231	UnaryOperationExpression	& local_err		1002696	0					
ANR	1003232	UnaryOperator	&		1002696	0					
ANR	1003233	Identifier	local_err		1002696	1					
ANR	1003234	ElseStatement	else		1002696	0					
ANR	1003235	CompoundStatement		181:11:2930:2930	1002696	0					
ANR	1003236	IfStatement	if ( file == NULL )		1002696	0					
ANR	1003237	Condition	file == NULL	187:12:3073:3084	1002696	0	True				
ANR	1003238	EqualityExpression	file == NULL		1002696	0		==			
ANR	1003239	Identifier	file		1002696	0					
ANR	1003240	Identifier	NULL		1002696	1					
ANR	1003241	CompoundStatement		183:26:2959:2959	1002696	1					
ANR	1003242	Statement	error_setg	189:12:3102:3111	1002696	0	True				
ANR	1003243	Statement	(	189:22:3112:3112	1002696	1	True				
ANR	1003244	Statement	errp	189:23:3113:3116	1002696	2	True				
ANR	1003245	Statement	","	189:27:3117:3117	1002696	3	True				
ANR	1003246	Statement	"""Can't use '%s' as a block driver for the """	189:29:3119:3161	1002696	4	True				
ANR	1003247	Statement	"""protocol level"""	191:23:3187:3202	1002696	5	True				
ANR	1003248	Statement	","	191:39:3203:3203	1002696	6	True				
ANR	1003249	Statement	drv	191:41:3205:3207	1002696	7	True				
ANR	1003250	Statement	->	191:44:3208:3209	1002696	8	True				
ANR	1003251	Statement	format_name	191:46:3210:3220	1002696	9	True				
ANR	1003252	Statement	)	191:57:3221:3221	1002696	10	True				
ANR	1003253	ExpressionStatement		191:58:3222:3222	1002696	11	True				
ANR	1003254	ExpressionStatement	ret = - EINVAL	193:12:3237:3250	1002696	12	True				
ANR	1003255	AssignmentExpression	ret = - EINVAL		1002696	0		=			
ANR	1003256	Identifier	ret		1002696	0					
ANR	1003257	UnaryOperationExpression	- EINVAL		1002696	1					
ANR	1003258	UnaryOperator	-		1002696	0					
ANR	1003259	Identifier	EINVAL		1002696	1					
ANR	1003260	GotoStatement	goto free_and_fail ;	195:12:3265:3283	1002696	13	True				
ANR	1003261	Identifier	free_and_fail		1002696	0					
ANR	1003262	ExpressionStatement	bs -> file = file	199:8:3305:3320	1002696	1	True				
ANR	1003263	AssignmentExpression	bs -> file = file		1002696	0		=			
ANR	1003264	PtrMemberAccess	bs -> file		1002696	0					
ANR	1003265	Identifier	bs		1002696	0					
ANR	1003266	Identifier	file		1002696	1					
ANR	1003267	Identifier	file		1002696	1					
ANR	1003268	ExpressionStatement	"ret = drv -> bdrv_open ( bs , options , open_flags , & local_err )"	201:8:3331:3388	1002696	2	True				
ANR	1003269	AssignmentExpression	"ret = drv -> bdrv_open ( bs , options , open_flags , & local_err )"		1002696	0		=			
ANR	1003270	Identifier	ret		1002696	0					
ANR	1003271	CallExpression	"drv -> bdrv_open ( bs , options , open_flags , & local_err )"		1002696	1					
ANR	1003272	Callee	drv -> bdrv_open		1002696	0					
ANR	1003273	PtrMemberAccess	drv -> bdrv_open		1002696	0					
ANR	1003274	Identifier	drv		1002696	0					
ANR	1003275	Identifier	bdrv_open		1002696	1					
ANR	1003276	ArgumentList	bs		1002696	1					
ANR	1003277	Argument	bs		1002696	0					
ANR	1003278	Identifier	bs		1002696	0					
ANR	1003279	Argument	options		1002696	1					
ANR	1003280	Identifier	options		1002696	0					
ANR	1003281	Argument	open_flags		1002696	2					
ANR	1003282	Identifier	open_flags		1002696	0					
ANR	1003283	Argument	& local_err		1002696	3					
ANR	1003284	UnaryOperationExpression	& local_err		1002696	0					
ANR	1003285	UnaryOperator	&		1002696	0					
ANR	1003286	Identifier	local_err		1002696	1					
ANR	1003287	IfStatement	if ( ret < 0 )		1002696	49					
ANR	1003288	Condition	ret < 0	207:8:3408:3414	1002696	0	True				
ANR	1003289	RelationalExpression	ret < 0		1002696	0		<			
ANR	1003290	Identifier	ret		1002696	0					
ANR	1003291	PrimaryExpression	0		1002696	1					
ANR	1003292	CompoundStatement		203:17:3289:3289	1002696	1					
ANR	1003293	IfStatement	if ( local_err )		1002696	0					
ANR	1003294	Condition	local_err	209:12:3432:3440	1002696	0	True				
ANR	1003295	Identifier	local_err		1002696	0					
ANR	1003296	CompoundStatement		205:23:3315:3315	1002696	1					
ANR	1003297	ExpressionStatement	"error_propagate ( errp , local_err )"	211:12:3458:3490	1002696	0	True				
ANR	1003298	CallExpression	"error_propagate ( errp , local_err )"		1002696	0					
ANR	1003299	Callee	error_propagate		1002696	0					
ANR	1003300	Identifier	error_propagate		1002696	0					
ANR	1003301	ArgumentList	errp		1002696	1					
ANR	1003302	Argument	errp		1002696	0					
ANR	1003303	Identifier	errp		1002696	0					
ANR	1003304	Argument	local_err		1002696	1					
ANR	1003305	Identifier	local_err		1002696	0					
ANR	1003306	ElseStatement	else		1002696	0					
ANR	1003307	IfStatement	if ( bs -> filename [ 0 ] )		1002696	0					
ANR	1003308	Condition	bs -> filename [ 0 ]	213:19:3512:3526	1002696	0	True				
ANR	1003309	ArrayIndexing	bs -> filename [ 0 ]		1002696	0					
ANR	1003310	PtrMemberAccess	bs -> filename		1002696	0					
ANR	1003311	Identifier	bs		1002696	0					
ANR	1003312	Identifier	filename		1002696	1					
ANR	1003313	PrimaryExpression	0		1002696	1					
ANR	1003314	CompoundStatement		209:36:3401:3401	1002696	1					
ANR	1003315	ExpressionStatement	"error_setg_errno ( errp , - ret , ""Could not open '%s'"" , bs -> filename )"	215:12:3544:3609	1002696	0	True				
ANR	1003316	CallExpression	"error_setg_errno ( errp , - ret , ""Could not open '%s'"" , bs -> filename )"		1002696	0					
ANR	1003317	Callee	error_setg_errno		1002696	0					
ANR	1003318	Identifier	error_setg_errno		1002696	0					
ANR	1003319	ArgumentList	errp		1002696	1					
ANR	1003320	Argument	errp		1002696	0					
ANR	1003321	Identifier	errp		1002696	0					
ANR	1003322	Argument	- ret		1002696	1					
ANR	1003323	UnaryOperationExpression	- ret		1002696	0					
ANR	1003324	UnaryOperator	-		1002696	0					
ANR	1003325	Identifier	ret		1002696	1					
ANR	1003326	Argument	"""Could not open '%s'"""		1002696	2					
ANR	1003327	PrimaryExpression	"""Could not open '%s'"""		1002696	0					
ANR	1003328	Argument	bs -> filename		1002696	3					
ANR	1003329	PtrMemberAccess	bs -> filename		1002696	0					
ANR	1003330	Identifier	bs		1002696	0					
ANR	1003331	Identifier	filename		1002696	1					
ANR	1003332	ElseStatement	else		1002696	0					
ANR	1003333	CompoundStatement		213:15:3499:3499	1002696	0					
ANR	1003334	ExpressionStatement	"error_setg_errno ( errp , - ret , ""Could not open image"" )"	219:12:3642:3694	1002696	0	True				
ANR	1003335	CallExpression	"error_setg_errno ( errp , - ret , ""Could not open image"" )"		1002696	0					
ANR	1003336	Callee	error_setg_errno		1002696	0					
ANR	1003337	Identifier	error_setg_errno		1002696	0					
ANR	1003338	ArgumentList	errp		1002696	1					
ANR	1003339	Argument	errp		1002696	0					
ANR	1003340	Identifier	errp		1002696	0					
ANR	1003341	Argument	- ret		1002696	1					
ANR	1003342	UnaryOperationExpression	- ret		1002696	0					
ANR	1003343	UnaryOperator	-		1002696	0					
ANR	1003344	Identifier	ret		1002696	1					
ANR	1003345	Argument	"""Could not open image"""		1002696	2					
ANR	1003346	PrimaryExpression	"""Could not open image"""		1002696	0					
ANR	1003347	GotoStatement	goto free_and_fail ;	223:8:3716:3734	1002696	1	True				
ANR	1003348	Identifier	free_and_fail		1002696	0					
ANR	1003349	ExpressionStatement	"ret = refresh_total_sectors ( bs , bs -> total_sectors )"	229:4:3750:3800	1002696	50	True				
ANR	1003350	AssignmentExpression	"ret = refresh_total_sectors ( bs , bs -> total_sectors )"		1002696	0		=			
ANR	1003351	Identifier	ret		1002696	0					
ANR	1003352	CallExpression	"refresh_total_sectors ( bs , bs -> total_sectors )"		1002696	1					
ANR	1003353	Callee	refresh_total_sectors		1002696	0					
ANR	1003354	Identifier	refresh_total_sectors		1002696	0					
ANR	1003355	ArgumentList	bs		1002696	1					
ANR	1003356	Argument	bs		1002696	0					
ANR	1003357	Identifier	bs		1002696	0					
ANR	1003358	Argument	bs -> total_sectors		1002696	1					
ANR	1003359	PtrMemberAccess	bs -> total_sectors		1002696	0					
ANR	1003360	Identifier	bs		1002696	0					
ANR	1003361	Identifier	total_sectors		1002696	1					
ANR	1003362	IfStatement	if ( ret < 0 )		1002696	51					
ANR	1003363	Condition	ret < 0	231:8:3811:3817	1002696	0	True				
ANR	1003364	RelationalExpression	ret < 0		1002696	0		<			
ANR	1003365	Identifier	ret		1002696	0					
ANR	1003366	PrimaryExpression	0		1002696	1					
ANR	1003367	CompoundStatement		227:17:3692:3692	1002696	1					
ANR	1003368	ExpressionStatement	"error_setg_errno ( errp , - ret , ""Could not refresh total sector count"" )"	233:8:3831:3899	1002696	0	True				
ANR	1003369	CallExpression	"error_setg_errno ( errp , - ret , ""Could not refresh total sector count"" )"		1002696	0					
ANR	1003370	Callee	error_setg_errno		1002696	0					
ANR	1003371	Identifier	error_setg_errno		1002696	0					
ANR	1003372	ArgumentList	errp		1002696	1					
ANR	1003373	Argument	errp		1002696	0					
ANR	1003374	Identifier	errp		1002696	0					
ANR	1003375	Argument	- ret		1002696	1					
ANR	1003376	UnaryOperationExpression	- ret		1002696	0					
ANR	1003377	UnaryOperator	-		1002696	0					
ANR	1003378	Identifier	ret		1002696	1					
ANR	1003379	Argument	"""Could not refresh total sector count"""		1002696	2					
ANR	1003380	PrimaryExpression	"""Could not refresh total sector count"""		1002696	0					
ANR	1003381	GotoStatement	goto free_and_fail ;	235:8:3910:3928	1002696	1	True				
ANR	1003382	Identifier	free_and_fail		1002696	0					
ANR	1003383	ExpressionStatement	"bdrv_refresh_limits ( bs , & local_err )"	241:4:3944:3979	1002696	52	True				
ANR	1003384	CallExpression	"bdrv_refresh_limits ( bs , & local_err )"		1002696	0					
ANR	1003385	Callee	bdrv_refresh_limits		1002696	0					
ANR	1003386	Identifier	bdrv_refresh_limits		1002696	0					
ANR	1003387	ArgumentList	bs		1002696	1					
ANR	1003388	Argument	bs		1002696	0					
ANR	1003389	Identifier	bs		1002696	0					
ANR	1003390	Argument	& local_err		1002696	1					
ANR	1003391	UnaryOperationExpression	& local_err		1002696	0					
ANR	1003392	UnaryOperator	&		1002696	0					
ANR	1003393	Identifier	local_err		1002696	1					
ANR	1003394	IfStatement	if ( local_err )		1002696	53					
ANR	1003395	Condition	local_err	243:8:3990:3998	1002696	0	True				
ANR	1003396	Identifier	local_err		1002696	0					
ANR	1003397	CompoundStatement		239:19:3873:3873	1002696	1					
ANR	1003398	ExpressionStatement	"error_propagate ( errp , local_err )"	245:8:4012:4044	1002696	0	True				
ANR	1003399	CallExpression	"error_propagate ( errp , local_err )"		1002696	0					
ANR	1003400	Callee	error_propagate		1002696	0					
ANR	1003401	Identifier	error_propagate		1002696	0					
ANR	1003402	ArgumentList	errp		1002696	1					
ANR	1003403	Argument	errp		1002696	0					
ANR	1003404	Identifier	errp		1002696	0					
ANR	1003405	Argument	local_err		1002696	1					
ANR	1003406	Identifier	local_err		1002696	0					
ANR	1003407	ExpressionStatement	ret = - EINVAL	247:8:4055:4068	1002696	1	True				
ANR	1003408	AssignmentExpression	ret = - EINVAL		1002696	0		=			
ANR	1003409	Identifier	ret		1002696	0					
ANR	1003410	UnaryOperationExpression	- EINVAL		1002696	1					
ANR	1003411	UnaryOperator	-		1002696	0					
ANR	1003412	Identifier	EINVAL		1002696	1					
ANR	1003413	GotoStatement	goto free_and_fail ;	249:8:4079:4097	1002696	2	True				
ANR	1003414	Identifier	free_and_fail		1002696	0					
ANR	1003415	ExpressionStatement	assert ( bdrv_opt_mem_align ( bs ) != 0 )	255:4:4113:4148	1002696	54	True				
ANR	1003416	CallExpression	assert ( bdrv_opt_mem_align ( bs ) != 0 )		1002696	0					
ANR	1003417	Callee	assert		1002696	0					
ANR	1003418	Identifier	assert		1002696	0					
ANR	1003419	ArgumentList	bdrv_opt_mem_align ( bs ) != 0		1002696	1					
ANR	1003420	Argument	bdrv_opt_mem_align ( bs ) != 0		1002696	0					
ANR	1003421	EqualityExpression	bdrv_opt_mem_align ( bs ) != 0		1002696	0		!=			
ANR	1003422	CallExpression	bdrv_opt_mem_align ( bs )		1002696	0					
ANR	1003423	Callee	bdrv_opt_mem_align		1002696	0					
ANR	1003424	Identifier	bdrv_opt_mem_align		1002696	0					
ANR	1003425	ArgumentList	bs		1002696	1					
ANR	1003426	Argument	bs		1002696	0					
ANR	1003427	Identifier	bs		1002696	0					
ANR	1003428	PrimaryExpression	0		1002696	1					
ANR	1003429	ExpressionStatement	assert ( bdrv_min_mem_align ( bs ) != 0 )	257:4:4155:4190	1002696	55	True				
ANR	1003430	CallExpression	assert ( bdrv_min_mem_align ( bs ) != 0 )		1002696	0					
ANR	1003431	Callee	assert		1002696	0					
ANR	1003432	Identifier	assert		1002696	0					
ANR	1003433	ArgumentList	bdrv_min_mem_align ( bs ) != 0		1002696	1					
ANR	1003434	Argument	bdrv_min_mem_align ( bs ) != 0		1002696	0					
ANR	1003435	EqualityExpression	bdrv_min_mem_align ( bs ) != 0		1002696	0		!=			
ANR	1003436	CallExpression	bdrv_min_mem_align ( bs )		1002696	0					
ANR	1003437	Callee	bdrv_min_mem_align		1002696	0					
ANR	1003438	Identifier	bdrv_min_mem_align		1002696	0					
ANR	1003439	ArgumentList	bs		1002696	1					
ANR	1003440	Argument	bs		1002696	0					
ANR	1003441	Identifier	bs		1002696	0					
ANR	1003442	PrimaryExpression	0		1002696	1					
ANR	1003443	ExpressionStatement	assert ( is_power_of_2 ( bs -> request_alignment ) || bdrv_is_sg ( bs ) )	259:4:4197:4259	1002696	56	True				
ANR	1003444	CallExpression	assert ( is_power_of_2 ( bs -> request_alignment ) || bdrv_is_sg ( bs ) )		1002696	0					
ANR	1003445	Callee	assert		1002696	0					
ANR	1003446	Identifier	assert		1002696	0					
ANR	1003447	ArgumentList	is_power_of_2 ( bs -> request_alignment ) || bdrv_is_sg ( bs )		1002696	1					
ANR	1003448	Argument	is_power_of_2 ( bs -> request_alignment ) || bdrv_is_sg ( bs )		1002696	0					
ANR	1003449	OrExpression	is_power_of_2 ( bs -> request_alignment ) || bdrv_is_sg ( bs )		1002696	0		||			
ANR	1003450	CallExpression	is_power_of_2 ( bs -> request_alignment )		1002696	0					
ANR	1003451	Callee	is_power_of_2		1002696	0					
ANR	1003452	Identifier	is_power_of_2		1002696	0					
ANR	1003453	ArgumentList	bs -> request_alignment		1002696	1					
ANR	1003454	Argument	bs -> request_alignment		1002696	0					
ANR	1003455	PtrMemberAccess	bs -> request_alignment		1002696	0					
ANR	1003456	Identifier	bs		1002696	0					
ANR	1003457	Identifier	request_alignment		1002696	1					
ANR	1003458	CallExpression	bdrv_is_sg ( bs )		1002696	1					
ANR	1003459	Callee	bdrv_is_sg		1002696	0					
ANR	1003460	Identifier	bdrv_is_sg		1002696	0					
ANR	1003461	ArgumentList	bs		1002696	1					
ANR	1003462	Argument	bs		1002696	0					
ANR	1003463	Identifier	bs		1002696	0					
ANR	1003464	ExpressionStatement	qemu_opts_del ( opts )	263:4:4268:4287	1002696	57	True				
ANR	1003465	CallExpression	qemu_opts_del ( opts )		1002696	0					
ANR	1003466	Callee	qemu_opts_del		1002696	0					
ANR	1003467	Identifier	qemu_opts_del		1002696	0					
ANR	1003468	ArgumentList	opts		1002696	1					
ANR	1003469	Argument	opts		1002696	0					
ANR	1003470	Identifier	opts		1002696	0					
ANR	1003471	ReturnStatement	return 0 ;	265:4:4294:4302	1002696	58	True				
ANR	1003472	PrimaryExpression	0		1002696	0					
ANR	1003473	Label	free_and_fail :	269:0:4307:4320	1002696	59	True				
ANR	1003474	Identifier	free_and_fail		1002696	0					
ANR	1003475	ExpressionStatement	bs -> file = NULL	271:4:4327:4342	1002696	60	True				
ANR	1003476	AssignmentExpression	bs -> file = NULL		1002696	0		=			
ANR	1003477	PtrMemberAccess	bs -> file		1002696	0					
ANR	1003478	Identifier	bs		1002696	0					
ANR	1003479	Identifier	file		1002696	1					
ANR	1003480	Identifier	NULL		1002696	1					
ANR	1003481	ExpressionStatement	g_free ( bs -> opaque )	273:4:4349:4367	1002696	61	True				
ANR	1003482	CallExpression	g_free ( bs -> opaque )		1002696	0					
ANR	1003483	Callee	g_free		1002696	0					
ANR	1003484	Identifier	g_free		1002696	0					
ANR	1003485	ArgumentList	bs -> opaque		1002696	1					
ANR	1003486	Argument	bs -> opaque		1002696	0					
ANR	1003487	PtrMemberAccess	bs -> opaque		1002696	0					
ANR	1003488	Identifier	bs		1002696	0					
ANR	1003489	Identifier	opaque		1002696	1					
ANR	1003490	ExpressionStatement	bs -> opaque = NULL	275:4:4374:4391	1002696	62	True				
ANR	1003491	AssignmentExpression	bs -> opaque = NULL		1002696	0		=			
ANR	1003492	PtrMemberAccess	bs -> opaque		1002696	0					
ANR	1003493	Identifier	bs		1002696	0					
ANR	1003494	Identifier	opaque		1002696	1					
ANR	1003495	Identifier	NULL		1002696	1					
ANR	1003496	ExpressionStatement	bs -> drv = NULL	277:4:4398:4412	1002696	63	True				
ANR	1003497	AssignmentExpression	bs -> drv = NULL		1002696	0		=			
ANR	1003498	PtrMemberAccess	bs -> drv		1002696	0					
ANR	1003499	Identifier	bs		1002696	0					
ANR	1003500	Identifier	drv		1002696	1					
ANR	1003501	Identifier	NULL		1002696	1					
ANR	1003502	Label	fail_opts :	279:0:4415:4424	1002696	64	True				
ANR	1003503	Identifier	fail_opts		1002696	0					
ANR	1003504	ExpressionStatement	qemu_opts_del ( opts )	281:4:4431:4450	1002696	65	True				
ANR	1003505	CallExpression	qemu_opts_del ( opts )		1002696	0					
ANR	1003506	Callee	qemu_opts_del		1002696	0					
ANR	1003507	Identifier	qemu_opts_del		1002696	0					
ANR	1003508	ArgumentList	opts		1002696	1					
ANR	1003509	Argument	opts		1002696	0					
ANR	1003510	Identifier	opts		1002696	0					
ANR	1003511	ReturnStatement	return ret ;	283:4:4457:4467	1002696	66	True				
ANR	1003512	Identifier	ret		1002696	0					
ANR	1003513	ReturnType	static int		1002696	1					
ANR	1003514	Identifier	bdrv_open_common		1002696	2					
ANR	1003515	ParameterList	"BlockDriverState * bs , BdrvChild * file , QDict * options , Error * * errp"		1002696	3					
ANR	1003516	Parameter	BlockDriverState * bs	1:28:28:47	1002696	0	True				
ANR	1003517	ParameterType	BlockDriverState *		1002696	0					
ANR	1003518	Identifier	bs		1002696	1					
ANR	1003519	Parameter	BdrvChild * file	1:50:50:64	1002696	1	True				
ANR	1003520	ParameterType	BdrvChild *		1002696	0					
ANR	1003521	Identifier	file		1002696	1					
ANR	1003522	Parameter	QDict * options	3:28:96:109	1002696	2	True				
ANR	1003523	ParameterType	QDict *		1002696	0					
ANR	1003524	Identifier	options		1002696	1					
ANR	1003525	Parameter	Error * * errp	3:44:112:123	1002696	3	True				
ANR	1003526	ParameterType	Error * *		1002696	0					
ANR	1003527	Identifier	errp		1002696	1					
ANR	1003528	CFGEntryNode	ENTRY		1002696		True				
ANR	1003529	CFGExitNode	EXIT		1002696		True				
ANR	1003530	Symbol	qemu_opts_create		1002696						
ANR	1003531	Symbol	errp		1002696						
ANR	1003532	Symbol	bs -> file		1002696						
ANR	1003533	Symbol	qemu_opt_get		1002696						
ANR	1003534	Symbol	bs -> copy_on_read		1002696						
ANR	1003535	Symbol	ENOTSUP		1002696						
ANR	1003536	Symbol	bdrv_find_format		1002696						
ANR	1003537	Symbol	bs -> drv		1002696						
ANR	1003538	Symbol	BDRV_O_COPY_ON_READ		1002696						
ANR	1003539	Symbol	drv -> bdrv_file_open		1002696						
ANR	1003540	Symbol	opts		1002696						
ANR	1003541	Symbol	* bs		1002696						
ANR	1003542	Symbol	options		1002696						
ANR	1003543	Symbol	bdrv_open_flags		1002696						
ANR	1003544	Symbol	bs -> read_only		1002696						
ANR	1003545	Symbol	bdrv_min_mem_align		1002696						
ANR	1003546	Symbol	drv -> instance_size		1002696						
ANR	1003547	Symbol	ret		1002696						
ANR	1003548	Symbol	NULL		1002696						
ANR	1003549	Symbol	* file -> bs		1002696						
ANR	1003550	Symbol	bs -> total_sectors		1002696						
ANR	1003551	Symbol	file -> bs		1002696						
ANR	1003552	Symbol	drv		1002696						
ANR	1003553	Symbol	open_flags		1002696						
ANR	1003554	Symbol	* file		1002696						
ANR	1003555	Symbol	bs -> open_flags		1002696						
ANR	1003556	Symbol	filename		1002696						
ANR	1003557	Symbol	& bdrv_runtime_opts		1002696						
ANR	1003558	Symbol	true		1002696						
ANR	1003559	Symbol	g_malloc0		1002696						
ANR	1003560	Symbol	bs -> request_alignment		1002696						
ANR	1003561	Symbol	use_bdrv_whitelist		1002696						
ANR	1003562	Symbol	drv -> bdrv_open		1002696						
ANR	1003563	Symbol	bdrv_opt_mem_align		1002696						
ANR	1003564	Symbol	local_err		1002696						
ANR	1003565	Symbol	* * file		1002696						
ANR	1003566	Symbol	* * bs		1002696						
ANR	1003567	Symbol	bdrv_is_sg		1002696						
ANR	1003568	Symbol	bdrv_is_whitelisted		1002696						
ANR	1003569	Symbol	bs		1002696						
ANR	1003570	Symbol	file		1002696						
ANR	1003571	Symbol	drv -> bdrv_needs_filename		1002696						
ANR	1003572	Symbol	is_power_of_2		1002696						
ANR	1003573	Symbol	& local_err		1002696						
ANR	1003574	Symbol	bs -> exact_filename		1002696						
ANR	1003575	Symbol	bs -> opaque		1002696						
ANR	1003576	Symbol	& error_abort		1002696						
ANR	1003577	Symbol	file -> bs -> filename		1002696						
ANR	1003578	Symbol	node_name		1002696						
ANR	1003579	Symbol	qdict_get_try_str		1002696						
ANR	1003580	Symbol	bs -> options		1002696						
ANR	1003581	Symbol	refresh_total_sectors		1002696						
ANR	1003582	Symbol	* drv		1002696						
ANR	1003583	Symbol	& bs -> open_flags		1002696						
ANR	1003584	Symbol	* bs -> filename		1002696						
ANR	1003585	Symbol	driver_name		1002696						
ANR	1003586	Symbol	EINVAL		1002696						
ANR	1003587	Symbol	bs -> filename		1002696						
ANR	1003588	Symbol	drv -> format_name		1002696						
ANR	1003589	Symbol	BDRV_O_RDWR		1002696						
