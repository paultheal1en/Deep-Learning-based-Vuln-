command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	332420	File	/home/p4ultr4n/workplace/ReVeal/raw_code/aac_encode_frame_0.c								
ANR	332421	Function	aac_encode_frame	1:0:0:6007							
ANR	332422	FunctionDef	"aac_encode_frame (AVCodecContext * avctx , uint8_t * frame , int buf_size , void * data)"		332421	0					
ANR	332423	CompoundStatement		5:0:123:6007	332421	0					
ANR	332424	IdentifierDeclStatement	AACEncContext * s = avctx -> priv_data ;	7:4:130:165	332421	0	True				
ANR	332425	IdentifierDecl	* s = avctx -> priv_data		332421	0					
ANR	332426	IdentifierDeclType	AACEncContext *		332421	0					
ANR	332427	Identifier	s		332421	1					
ANR	332428	AssignmentExpression	* s = avctx -> priv_data		332421	2		=			
ANR	332429	Identifier	s		332421	0					
ANR	332430	PtrMemberAccess	avctx -> priv_data		332421	1					
ANR	332431	Identifier	avctx		332421	0					
ANR	332432	Identifier	priv_data		332421	1					
ANR	332433	IdentifierDeclStatement	"int16_t * samples = s -> samples , * samples2 , * la ;"	9:4:172:217	332421	1	True				
ANR	332434	IdentifierDecl	* samples = s -> samples		332421	0					
ANR	332435	IdentifierDeclType	int16_t *		332421	0					
ANR	332436	Identifier	samples		332421	1					
ANR	332437	AssignmentExpression	* samples = s -> samples		332421	2		=			
ANR	332438	Identifier	samples		332421	0					
ANR	332439	PtrMemberAccess	s -> samples		332421	1					
ANR	332440	Identifier	s		332421	0					
ANR	332441	Identifier	samples		332421	1					
ANR	332442	IdentifierDecl	* samples2		332421	1					
ANR	332443	IdentifierDeclType	int16_t *		332421	0					
ANR	332444	Identifier	samples2		332421	1					
ANR	332445	IdentifierDecl	* la		332421	2					
ANR	332446	IdentifierDeclType	int16_t *		332421	0					
ANR	332447	Identifier	la		332421	1					
ANR	332448	IdentifierDeclStatement	ChannelElement * cpe ;	11:4:224:243	332421	2	True				
ANR	332449	IdentifierDecl	* cpe		332421	0					
ANR	332450	IdentifierDeclType	ChannelElement *		332421	0					
ANR	332451	Identifier	cpe		332421	1					
ANR	332452	IdentifierDeclStatement	"int i , j , chans , tag , start_ch ;"	13:4:250:280	332421	3	True				
ANR	332453	IdentifierDecl	i		332421	0					
ANR	332454	IdentifierDeclType	int		332421	0					
ANR	332455	Identifier	i		332421	1					
ANR	332456	IdentifierDecl	j		332421	1					
ANR	332457	IdentifierDeclType	int		332421	0					
ANR	332458	Identifier	j		332421	1					
ANR	332459	IdentifierDecl	chans		332421	2					
ANR	332460	IdentifierDeclType	int		332421	0					
ANR	332461	Identifier	chans		332421	1					
ANR	332462	IdentifierDecl	tag		332421	3					
ANR	332463	IdentifierDeclType	int		332421	0					
ANR	332464	Identifier	tag		332421	1					
ANR	332465	IdentifierDecl	start_ch		332421	4					
ANR	332466	IdentifierDeclType	int		332421	0					
ANR	332467	Identifier	start_ch		332421	1					
ANR	332468	IdentifierDeclStatement	const uint8_t * chan_map = aac_chan_configs [ avctx -> channels - 1 ] ;	15:4:287:348	332421	4	True				
ANR	332469	IdentifierDecl	* chan_map = aac_chan_configs [ avctx -> channels - 1 ]		332421	0					
ANR	332470	IdentifierDeclType	const uint8_t *		332421	0					
ANR	332471	Identifier	chan_map		332421	1					
ANR	332472	AssignmentExpression	* chan_map = aac_chan_configs [ avctx -> channels - 1 ]		332421	2		=			
ANR	332473	Identifier	chan_map		332421	0					
ANR	332474	ArrayIndexing	aac_chan_configs [ avctx -> channels - 1 ]		332421	1					
ANR	332475	Identifier	aac_chan_configs		332421	0					
ANR	332476	AdditiveExpression	avctx -> channels - 1		332421	1		-			
ANR	332477	PtrMemberAccess	avctx -> channels		332421	0					
ANR	332478	Identifier	avctx		332421	0					
ANR	332479	Identifier	channels		332421	1					
ANR	332480	PrimaryExpression	1		332421	1					
ANR	332481	IdentifierDeclStatement	int chan_el_counter [ 4 ] ;	17:4:355:377	332421	5	True				
ANR	332482	IdentifierDecl	chan_el_counter [ 4 ]		332421	0					
ANR	332483	IdentifierDeclType	int [ 4 ]		332421	0					
ANR	332484	Identifier	chan_el_counter		332421	1					
ANR	332485	PrimaryExpression	4		332421	2					
ANR	332486	IdentifierDeclStatement	FFPsyWindowInfo windows [ AAC_MAX_CHANNELS ] ;	19:4:384:425	332421	6	True				
ANR	332487	IdentifierDecl	windows [ AAC_MAX_CHANNELS ]		332421	0					
ANR	332488	IdentifierDeclType	FFPsyWindowInfo [ AAC_MAX_CHANNELS ]		332421	0					
ANR	332489	Identifier	windows		332421	1					
ANR	332490	Identifier	AAC_MAX_CHANNELS		332421	2					
ANR	332491	IfStatement	if ( s -> last_frame )		332421	7					
ANR	332492	Condition	s -> last_frame	23:8:438:450	332421	0	True				
ANR	332493	PtrMemberAccess	s -> last_frame		332421	0					
ANR	332494	Identifier	s		332421	0					
ANR	332495	Identifier	last_frame		332421	1					
ANR	332496	ReturnStatement	return 0 ;	25:8:462:470	332421	1	True				
ANR	332497	PrimaryExpression	0		332421	0					
ANR	332498	IfStatement	if ( data )		332421	8					
ANR	332499	Condition	data	27:8:481:484	332421	0	True				
ANR	332500	Identifier	data		332421	0					
ANR	332501	CompoundStatement		23:14:363:363	332421	1					
ANR	332502	IfStatement	if ( ! s -> psypp )		332421	0					
ANR	332503	Condition	! s -> psypp	29:12:502:510	332421	0	True				
ANR	332504	UnaryOperationExpression	! s -> psypp		332421	0					
ANR	332505	UnaryOperator	!		332421	0					
ANR	332506	PtrMemberAccess	s -> psypp		332421	1					
ANR	332507	Identifier	s		332421	0					
ANR	332508	Identifier	psypp		332421	1					
ANR	332509	CompoundStatement		25:23:389:389	332421	1					
ANR	332510	ExpressionStatement	"memcpy ( s -> samples + 1024 * avctx -> channels , data , 1024 * avctx -> channels * sizeof ( s -> samples [ 0 ] ) )"	31:12:528:645	332421	0	True				
ANR	332511	CallExpression	"memcpy ( s -> samples + 1024 * avctx -> channels , data , 1024 * avctx -> channels * sizeof ( s -> samples [ 0 ] ) )"		332421	0					
ANR	332512	Callee	memcpy		332421	0					
ANR	332513	Identifier	memcpy		332421	0					
ANR	332514	ArgumentList	s -> samples + 1024 * avctx -> channels		332421	1					
ANR	332515	Argument	s -> samples + 1024 * avctx -> channels		332421	0					
ANR	332516	AdditiveExpression	s -> samples + 1024 * avctx -> channels		332421	0		+			
ANR	332517	PtrMemberAccess	s -> samples		332421	0					
ANR	332518	Identifier	s		332421	0					
ANR	332519	Identifier	samples		332421	1					
ANR	332520	MultiplicativeExpression	1024 * avctx -> channels		332421	1		*			
ANR	332521	PrimaryExpression	1024		332421	0					
ANR	332522	PtrMemberAccess	avctx -> channels		332421	1					
ANR	332523	Identifier	avctx		332421	0					
ANR	332524	Identifier	channels		332421	1					
ANR	332525	Argument	data		332421	1					
ANR	332526	Identifier	data		332421	0					
ANR	332527	Argument	1024 * avctx -> channels * sizeof ( s -> samples [ 0 ] )		332421	2					
ANR	332528	MultiplicativeExpression	1024 * avctx -> channels * sizeof ( s -> samples [ 0 ] )		332421	0		*			
ANR	332529	PrimaryExpression	1024		332421	0					
ANR	332530	MultiplicativeExpression	avctx -> channels * sizeof ( s -> samples [ 0 ] )		332421	1		*			
ANR	332531	PtrMemberAccess	avctx -> channels		332421	0					
ANR	332532	Identifier	avctx		332421	0					
ANR	332533	Identifier	channels		332421	1					
ANR	332534	SizeofExpression	sizeof ( s -> samples [ 0 ] )		332421	1					
ANR	332535	Sizeof	sizeof		332421	0					
ANR	332536	ArrayIndexing	s -> samples [ 0 ]		332421	1					
ANR	332537	PtrMemberAccess	s -> samples		332421	0					
ANR	332538	Identifier	s		332421	0					
ANR	332539	Identifier	samples		332421	1					
ANR	332540	PrimaryExpression	0		332421	1					
ANR	332541	ElseStatement	else		332421	0					
ANR	332542	CompoundStatement		31:15:539:539	332421	0					
ANR	332543	ExpressionStatement	start_ch = 0	37:12:678:690	332421	0	True				
ANR	332544	AssignmentExpression	start_ch = 0		332421	0		=			
ANR	332545	Identifier	start_ch		332421	0					
ANR	332546	PrimaryExpression	0		332421	1					
ANR	332547	ExpressionStatement	samples2 = s -> samples + 1024 * avctx -> channels	39:12:705:751	332421	1	True				
ANR	332548	AssignmentExpression	samples2 = s -> samples + 1024 * avctx -> channels		332421	0		=			
ANR	332549	Identifier	samples2		332421	0					
ANR	332550	AdditiveExpression	s -> samples + 1024 * avctx -> channels		332421	1		+			
ANR	332551	PtrMemberAccess	s -> samples		332421	0					
ANR	332552	Identifier	s		332421	0					
ANR	332553	Identifier	samples		332421	1					
ANR	332554	MultiplicativeExpression	1024 * avctx -> channels		332421	1		*			
ANR	332555	PrimaryExpression	1024		332421	0					
ANR	332556	PtrMemberAccess	avctx -> channels		332421	1					
ANR	332557	Identifier	avctx		332421	0					
ANR	332558	Identifier	channels		332421	1					
ANR	332559	ForStatement	for ( i = 0 ; i < chan_map [ 0 ] ; i ++ )		332421	2					
ANR	332560	ForInit	i = 0 ;	41:17:771:776	332421	0	True				
ANR	332561	AssignmentExpression	i = 0		332421	0		=			
ANR	332562	Identifier	i		332421	0					
ANR	332563	PrimaryExpression	0		332421	1					
ANR	332564	Condition	i < chan_map [ 0 ]	41:24:778:792	332421	1	True				
ANR	332565	RelationalExpression	i < chan_map [ 0 ]		332421	0		<			
ANR	332566	Identifier	i		332421	0					
ANR	332567	ArrayIndexing	chan_map [ 0 ]		332421	1					
ANR	332568	Identifier	chan_map		332421	0					
ANR	332569	PrimaryExpression	0		332421	1					
ANR	332570	PostIncDecOperationExpression	i ++	41:41:795:797	332421	2	True				
ANR	332571	Identifier	i		332421	0					
ANR	332572	IncDec	++		332421	1					
ANR	332573	CompoundStatement		37:46:676:676	332421	3					
ANR	332574	ExpressionStatement	tag = chan_map [ i + 1 ]	43:16:819:838	332421	0	True				
ANR	332575	AssignmentExpression	tag = chan_map [ i + 1 ]		332421	0		=			
ANR	332576	Identifier	tag		332421	0					
ANR	332577	ArrayIndexing	chan_map [ i + 1 ]		332421	1					
ANR	332578	Identifier	chan_map		332421	0					
ANR	332579	AdditiveExpression	i + 1		332421	1		+			
ANR	332580	Identifier	i		332421	0					
ANR	332581	PrimaryExpression	1		332421	1					
ANR	332582	ExpressionStatement	chans = tag == TYPE_CPE ? 2 : 1	45:16:857:888	332421	1	True				
ANR	332583	AssignmentExpression	chans = tag == TYPE_CPE ? 2 : 1		332421	0		=			
ANR	332584	Identifier	chans		332421	0					
ANR	332585	ConditionalExpression	tag == TYPE_CPE ? 2 : 1		332421	1					
ANR	332586	Condition	tag == TYPE_CPE		332421	0					
ANR	332587	EqualityExpression	tag == TYPE_CPE		332421	0		==			
ANR	332588	Identifier	tag		332421	0					
ANR	332589	Identifier	TYPE_CPE		332421	1					
ANR	332590	PrimaryExpression	2		332421	1					
ANR	332591	PrimaryExpression	1		332421	2					
ANR	332592	ExpressionStatement	"ff_psy_preprocess ( s -> psypp , ( uint16_t * ) data + start_ch , samples2 + start_ch , start_ch , chans )"	47:16:907:1035	332421	2	True				
ANR	332593	CallExpression	"ff_psy_preprocess ( s -> psypp , ( uint16_t * ) data + start_ch , samples2 + start_ch , start_ch , chans )"		332421	0					
ANR	332594	Callee	ff_psy_preprocess		332421	0					
ANR	332595	Identifier	ff_psy_preprocess		332421	0					
ANR	332596	ArgumentList	s -> psypp		332421	1					
ANR	332597	Argument	s -> psypp		332421	0					
ANR	332598	PtrMemberAccess	s -> psypp		332421	0					
ANR	332599	Identifier	s		332421	0					
ANR	332600	Identifier	psypp		332421	1					
ANR	332601	Argument	( uint16_t * ) data + start_ch		332421	1					
ANR	332602	AdditiveExpression	( uint16_t * ) data + start_ch		332421	0		+			
ANR	332603	CastExpression	( uint16_t * ) data		332421	0					
ANR	332604	CastTarget	uint16_t *		332421	0					
ANR	332605	Identifier	data		332421	1					
ANR	332606	Identifier	start_ch		332421	1					
ANR	332607	Argument	samples2 + start_ch		332421	2					
ANR	332608	AdditiveExpression	samples2 + start_ch		332421	0		+			
ANR	332609	Identifier	samples2		332421	0					
ANR	332610	Identifier	start_ch		332421	1					
ANR	332611	Argument	start_ch		332421	3					
ANR	332612	Identifier	start_ch		332421	0					
ANR	332613	Argument	chans		332421	4					
ANR	332614	Identifier	chans		332421	0					
ANR	332615	ExpressionStatement	start_ch += chans	51:16:1054:1071	332421	3	True				
ANR	332616	AssignmentExpression	start_ch += chans		332421	0		+=			
ANR	332617	Identifier	start_ch		332421	0					
ANR	332618	Identifier	chans		332421	1					
ANR	332619	IfStatement	if ( ! avctx -> frame_number )		332421	9					
ANR	332620	Condition	! avctx -> frame_number	59:8:1115:1134	332421	0	True				
ANR	332621	UnaryOperationExpression	! avctx -> frame_number		332421	0					
ANR	332622	UnaryOperator	!		332421	0					
ANR	332623	PtrMemberAccess	avctx -> frame_number		332421	1					
ANR	332624	Identifier	avctx		332421	0					
ANR	332625	Identifier	frame_number		332421	1					
ANR	332626	CompoundStatement		55:30:1013:1013	332421	1					
ANR	332627	ExpressionStatement	"memcpy ( s -> samples , s -> samples + 1024 * avctx -> channels , 1024 * avctx -> channels * sizeof ( s -> samples [ 0 ] ) )"	61:8:1148:1267	332421	0	True				
ANR	332628	CallExpression	"memcpy ( s -> samples , s -> samples + 1024 * avctx -> channels , 1024 * avctx -> channels * sizeof ( s -> samples [ 0 ] ) )"		332421	0					
ANR	332629	Callee	memcpy		332421	0					
ANR	332630	Identifier	memcpy		332421	0					
ANR	332631	ArgumentList	s -> samples		332421	1					
ANR	332632	Argument	s -> samples		332421	0					
ANR	332633	PtrMemberAccess	s -> samples		332421	0					
ANR	332634	Identifier	s		332421	0					
ANR	332635	Identifier	samples		332421	1					
ANR	332636	Argument	s -> samples + 1024 * avctx -> channels		332421	1					
ANR	332637	AdditiveExpression	s -> samples + 1024 * avctx -> channels		332421	0		+			
ANR	332638	PtrMemberAccess	s -> samples		332421	0					
ANR	332639	Identifier	s		332421	0					
ANR	332640	Identifier	samples		332421	1					
ANR	332641	MultiplicativeExpression	1024 * avctx -> channels		332421	1		*			
ANR	332642	PrimaryExpression	1024		332421	0					
ANR	332643	PtrMemberAccess	avctx -> channels		332421	1					
ANR	332644	Identifier	avctx		332421	0					
ANR	332645	Identifier	channels		332421	1					
ANR	332646	Argument	1024 * avctx -> channels * sizeof ( s -> samples [ 0 ] )		332421	2					
ANR	332647	MultiplicativeExpression	1024 * avctx -> channels * sizeof ( s -> samples [ 0 ] )		332421	0		*			
ANR	332648	PrimaryExpression	1024		332421	0					
ANR	332649	MultiplicativeExpression	avctx -> channels * sizeof ( s -> samples [ 0 ] )		332421	1		*			
ANR	332650	PtrMemberAccess	avctx -> channels		332421	0					
ANR	332651	Identifier	avctx		332421	0					
ANR	332652	Identifier	channels		332421	1					
ANR	332653	SizeofExpression	sizeof ( s -> samples [ 0 ] )		332421	1					
ANR	332654	Sizeof	sizeof		332421	0					
ANR	332655	ArrayIndexing	s -> samples [ 0 ]		332421	1					
ANR	332656	PtrMemberAccess	s -> samples		332421	0					
ANR	332657	Identifier	s		332421	0					
ANR	332658	Identifier	samples		332421	1					
ANR	332659	PrimaryExpression	0		332421	1					
ANR	332660	ReturnStatement	return 0 ;	65:8:1278:1286	332421	1	True				
ANR	332661	PrimaryExpression	0		332421	0					
ANR	332662	ExpressionStatement	start_ch = 0	71:4:1302:1314	332421	10	True				
ANR	332663	AssignmentExpression	start_ch = 0		332421	0		=			
ANR	332664	Identifier	start_ch		332421	0					
ANR	332665	PrimaryExpression	0		332421	1					
ANR	332666	ForStatement	for ( i = 0 ; i < chan_map [ 0 ] ; i ++ )		332421	11					
ANR	332667	ForInit	i = 0 ;	73:9:1326:1331	332421	0	True				
ANR	332668	AssignmentExpression	i = 0		332421	0		=			
ANR	332669	Identifier	i		332421	0					
ANR	332670	PrimaryExpression	0		332421	1					
ANR	332671	Condition	i < chan_map [ 0 ]	73:16:1333:1347	332421	1	True				
ANR	332672	RelationalExpression	i < chan_map [ 0 ]		332421	0		<			
ANR	332673	Identifier	i		332421	0					
ANR	332674	ArrayIndexing	chan_map [ 0 ]		332421	1					
ANR	332675	Identifier	chan_map		332421	0					
ANR	332676	PrimaryExpression	0		332421	1					
ANR	332677	PostIncDecOperationExpression	i ++	73:33:1350:1352	332421	2	True				
ANR	332678	Identifier	i		332421	0					
ANR	332679	IncDec	++		332421	1					
ANR	332680	CompoundStatement		71:8:1242:1282	332421	3					
ANR	332681	IdentifierDeclStatement	FFPsyWindowInfo * wi = windows + start_ch ;	75:8:1366:1406	332421	0	True				
ANR	332682	IdentifierDecl	* wi = windows + start_ch		332421	0					
ANR	332683	IdentifierDeclType	FFPsyWindowInfo *		332421	0					
ANR	332684	Identifier	wi		332421	1					
ANR	332685	AssignmentExpression	* wi = windows + start_ch		332421	2		=			
ANR	332686	Identifier	wi		332421	0					
ANR	332687	AdditiveExpression	windows + start_ch		332421	1		+			
ANR	332688	Identifier	windows		332421	0					
ANR	332689	Identifier	start_ch		332421	1					
ANR	332690	ExpressionStatement	tag = chan_map [ i + 1 ]	77:8:1417:1441	332421	1	True				
ANR	332691	AssignmentExpression	tag = chan_map [ i + 1 ]		332421	0		=			
ANR	332692	Identifier	tag		332421	0					
ANR	332693	ArrayIndexing	chan_map [ i + 1 ]		332421	1					
ANR	332694	Identifier	chan_map		332421	0					
ANR	332695	AdditiveExpression	i + 1		332421	1		+			
ANR	332696	Identifier	i		332421	0					
ANR	332697	PrimaryExpression	1		332421	1					
ANR	332698	ExpressionStatement	chans = tag == TYPE_CPE ? 2 : 1	79:8:1452:1486	332421	2	True				
ANR	332699	AssignmentExpression	chans = tag == TYPE_CPE ? 2 : 1		332421	0		=			
ANR	332700	Identifier	chans		332421	0					
ANR	332701	ConditionalExpression	tag == TYPE_CPE ? 2 : 1		332421	1					
ANR	332702	Condition	tag == TYPE_CPE		332421	0					
ANR	332703	EqualityExpression	tag == TYPE_CPE		332421	0		==			
ANR	332704	Identifier	tag		332421	0					
ANR	332705	Identifier	TYPE_CPE		332421	1					
ANR	332706	PrimaryExpression	2		332421	1					
ANR	332707	PrimaryExpression	1		332421	2					
ANR	332708	ExpressionStatement	cpe = & s -> cpe [ i ]	81:8:1497:1518	332421	3	True				
ANR	332709	AssignmentExpression	cpe = & s -> cpe [ i ]		332421	0		=			
ANR	332710	Identifier	cpe		332421	0					
ANR	332711	UnaryOperationExpression	& s -> cpe [ i ]		332421	1					
ANR	332712	UnaryOperator	&		332421	0					
ANR	332713	ArrayIndexing	s -> cpe [ i ]		332421	1					
ANR	332714	PtrMemberAccess	s -> cpe		332421	0					
ANR	332715	Identifier	s		332421	0					
ANR	332716	Identifier	cpe		332421	1					
ANR	332717	Identifier	i		332421	1					
ANR	332718	ForStatement	for ( j = 0 ; j < chans ; j ++ )		332421	4					
ANR	332719	ForInit	j = 0 ;	83:13:1534:1539	332421	0	True				
ANR	332720	AssignmentExpression	j = 0		332421	0		=			
ANR	332721	Identifier	j		332421	0					
ANR	332722	PrimaryExpression	0		332421	1					
ANR	332723	Condition	j < chans	83:20:1541:1549	332421	1	True				
ANR	332724	RelationalExpression	j < chans		332421	0		<			
ANR	332725	Identifier	j		332421	0					
ANR	332726	Identifier	chans		332421	1					
ANR	332727	PostIncDecOperationExpression	j ++	83:31:1552:1554	332421	2	True				
ANR	332728	Identifier	j		332421	0					
ANR	332729	IncDec	++		332421	1					
ANR	332730	CompoundStatement		85:12:1529:1559	332421	3					
ANR	332731	IdentifierDeclStatement	IndividualChannelStream * ics = & cpe -> ch [ j ] . ics ;	85:12:1572:1618	332421	0	True				
ANR	332732	IdentifierDecl	* ics = & cpe -> ch [ j ] . ics		332421	0					
ANR	332733	IdentifierDeclType	IndividualChannelStream *		332421	0					
ANR	332734	Identifier	ics		332421	1					
ANR	332735	AssignmentExpression	* ics = & cpe -> ch [ j ] . ics		332421	2		=			
ANR	332736	Identifier	ics		332421	0					
ANR	332737	UnaryOperationExpression	& cpe -> ch [ j ] . ics		332421	1					
ANR	332738	UnaryOperator	&		332421	0					
ANR	332739	MemberAccess	cpe -> ch [ j ] . ics		332421	1					
ANR	332740	ArrayIndexing	cpe -> ch [ j ]		332421	0					
ANR	332741	PtrMemberAccess	cpe -> ch		332421	0					
ANR	332742	Identifier	cpe		332421	0					
ANR	332743	Identifier	ch		332421	1					
ANR	332744	Identifier	j		332421	1					
ANR	332745	Identifier	ics		332421	1					
ANR	332746	IdentifierDeclStatement	int k ;	87:12:1633:1638	332421	1	True				
ANR	332747	IdentifierDecl	k		332421	0					
ANR	332748	IdentifierDeclType	int		332421	0					
ANR	332749	Identifier	k		332421	1					
ANR	332750	IdentifierDeclStatement	int cur_channel = start_ch + j ;	89:12:1653:1683	332421	2	True				
ANR	332751	IdentifierDecl	cur_channel = start_ch + j		332421	0					
ANR	332752	IdentifierDeclType	int		332421	0					
ANR	332753	Identifier	cur_channel		332421	1					
ANR	332754	AssignmentExpression	cur_channel = start_ch + j		332421	2		=			
ANR	332755	Identifier	cur_channel		332421	0					
ANR	332756	AdditiveExpression	start_ch + j		332421	1		+			
ANR	332757	Identifier	start_ch		332421	0					
ANR	332758	Identifier	j		332421	1					
ANR	332759	ExpressionStatement	samples2 = samples + cur_channel	91:12:1698:1730	332421	3	True				
ANR	332760	AssignmentExpression	samples2 = samples + cur_channel		332421	0		=			
ANR	332761	Identifier	samples2		332421	0					
ANR	332762	AdditiveExpression	samples + cur_channel		332421	1		+			
ANR	332763	Identifier	samples		332421	0					
ANR	332764	Identifier	cur_channel		332421	1					
ANR	332765	ExpressionStatement	la = samples2 + ( 448 + 64 ) * avctx -> channels	93:12:1745:1793	332421	4	True				
ANR	332766	AssignmentExpression	la = samples2 + ( 448 + 64 ) * avctx -> channels		332421	0		=			
ANR	332767	Identifier	la		332421	0					
ANR	332768	AdditiveExpression	samples2 + ( 448 + 64 ) * avctx -> channels		332421	1		+			
ANR	332769	Identifier	samples2		332421	0					
ANR	332770	MultiplicativeExpression	( 448 + 64 ) * avctx -> channels		332421	1		*			
ANR	332771	AdditiveExpression	448 + 64		332421	0		+			
ANR	332772	PrimaryExpression	448		332421	0					
ANR	332773	PrimaryExpression	64		332421	1					
ANR	332774	PtrMemberAccess	avctx -> channels		332421	1					
ANR	332775	Identifier	avctx		332421	0					
ANR	332776	Identifier	channels		332421	1					
ANR	332777	IfStatement	if ( ! data )		332421	5					
ANR	332778	Condition	! data	95:16:1812:1816	332421	0	True				
ANR	332779	UnaryOperationExpression	! data		332421	0					
ANR	332780	UnaryOperator	!		332421	0					
ANR	332781	Identifier	data		332421	1					
ANR	332782	ExpressionStatement	la = NULL	97:16:1836:1845	332421	1	True				
ANR	332783	AssignmentExpression	la = NULL		332421	0		=			
ANR	332784	Identifier	la		332421	0					
ANR	332785	Identifier	NULL		332421	1					
ANR	332786	IfStatement	if ( tag == TYPE_LFE )		332421	6					
ANR	332787	Condition	tag == TYPE_LFE	99:16:1864:1878	332421	0	True				
ANR	332788	EqualityExpression	tag == TYPE_LFE		332421	0		==			
ANR	332789	Identifier	tag		332421	0					
ANR	332790	Identifier	TYPE_LFE		332421	1					
ANR	332791	CompoundStatement		95:33:1757:1757	332421	1					
ANR	332792	ExpressionStatement	wi [ j ] . window_type [ 0 ] = ONLY_LONG_SEQUENCE	101:16:1900:1941	332421	0	True				
ANR	332793	AssignmentExpression	wi [ j ] . window_type [ 0 ] = ONLY_LONG_SEQUENCE		332421	0		=			
ANR	332794	ArrayIndexing	wi [ j ] . window_type [ 0 ]		332421	0					
ANR	332795	MemberAccess	wi [ j ] . window_type		332421	0					
ANR	332796	ArrayIndexing	wi [ j ]		332421	0					
ANR	332797	Identifier	wi		332421	0					
ANR	332798	Identifier	j		332421	1					
ANR	332799	Identifier	window_type		332421	1					
ANR	332800	PrimaryExpression	0		332421	1					
ANR	332801	Identifier	ONLY_LONG_SEQUENCE		332421	1					
ANR	332802	ExpressionStatement	wi [ j ] . window_shape = 0	103:16:1960:1984	332421	1	True				
ANR	332803	AssignmentExpression	wi [ j ] . window_shape = 0		332421	0		=			
ANR	332804	MemberAccess	wi [ j ] . window_shape		332421	0					
ANR	332805	ArrayIndexing	wi [ j ]		332421	0					
ANR	332806	Identifier	wi		332421	0					
ANR	332807	Identifier	j		332421	1					
ANR	332808	Identifier	window_shape		332421	1					
ANR	332809	PrimaryExpression	0		332421	1					
ANR	332810	ExpressionStatement	wi [ j ] . num_windows = 1	105:16:2003:2027	332421	2	True				
ANR	332811	AssignmentExpression	wi [ j ] . num_windows = 1		332421	0		=			
ANR	332812	MemberAccess	wi [ j ] . num_windows		332421	0					
ANR	332813	ArrayIndexing	wi [ j ]		332421	0					
ANR	332814	Identifier	wi		332421	0					
ANR	332815	Identifier	j		332421	1					
ANR	332816	Identifier	num_windows		332421	1					
ANR	332817	PrimaryExpression	1		332421	1					
ANR	332818	ExpressionStatement	wi [ j ] . grouping [ 0 ] = 1	107:16:2046:2070	332421	3	True				
ANR	332819	AssignmentExpression	wi [ j ] . grouping [ 0 ] = 1		332421	0		=			
ANR	332820	ArrayIndexing	wi [ j ] . grouping [ 0 ]		332421	0					
ANR	332821	MemberAccess	wi [ j ] . grouping		332421	0					
ANR	332822	ArrayIndexing	wi [ j ]		332421	0					
ANR	332823	Identifier	wi		332421	0					
ANR	332824	Identifier	j		332421	1					
ANR	332825	Identifier	grouping		332421	1					
ANR	332826	PrimaryExpression	0		332421	1					
ANR	332827	PrimaryExpression	1		332421	1					
ANR	332828	ElseStatement	else		332421	0					
ANR	332829	CompoundStatement		105:19:1968:1968	332421	0					
ANR	332830	ExpressionStatement	"wi [ j ] = ff_psy_suggest_window ( & s -> psy , samples2 , la , cur_channel , ics -> window_sequence [ 0 ] )"	111:16:2111:2248	332421	0	True				
ANR	332831	AssignmentExpression	"wi [ j ] = ff_psy_suggest_window ( & s -> psy , samples2 , la , cur_channel , ics -> window_sequence [ 0 ] )"		332421	0		=			
ANR	332832	ArrayIndexing	wi [ j ]		332421	0					
ANR	332833	Identifier	wi		332421	0					
ANR	332834	Identifier	j		332421	1					
ANR	332835	CallExpression	"ff_psy_suggest_window ( & s -> psy , samples2 , la , cur_channel , ics -> window_sequence [ 0 ] )"		332421	1					
ANR	332836	Callee	ff_psy_suggest_window		332421	0					
ANR	332837	Identifier	ff_psy_suggest_window		332421	0					
ANR	332838	ArgumentList	& s -> psy		332421	1					
ANR	332839	Argument	& s -> psy		332421	0					
ANR	332840	UnaryOperationExpression	& s -> psy		332421	0					
ANR	332841	UnaryOperator	&		332421	0					
ANR	332842	PtrMemberAccess	s -> psy		332421	1					
ANR	332843	Identifier	s		332421	0					
ANR	332844	Identifier	psy		332421	1					
ANR	332845	Argument	samples2		332421	1					
ANR	332846	Identifier	samples2		332421	0					
ANR	332847	Argument	la		332421	2					
ANR	332848	Identifier	la		332421	0					
ANR	332849	Argument	cur_channel		332421	3					
ANR	332850	Identifier	cur_channel		332421	0					
ANR	332851	Argument	ics -> window_sequence [ 0 ]		332421	4					
ANR	332852	ArrayIndexing	ics -> window_sequence [ 0 ]		332421	0					
ANR	332853	PtrMemberAccess	ics -> window_sequence		332421	0					
ANR	332854	Identifier	ics		332421	0					
ANR	332855	Identifier	window_sequence		332421	1					
ANR	332856	PrimaryExpression	0		332421	1					
ANR	332857	ExpressionStatement	ics -> window_sequence [ 1 ] = ics -> window_sequence [ 0 ]	117:12:2278:2327	332421	7	True				
ANR	332858	AssignmentExpression	ics -> window_sequence [ 1 ] = ics -> window_sequence [ 0 ]		332421	0		=			
ANR	332859	ArrayIndexing	ics -> window_sequence [ 1 ]		332421	0					
ANR	332860	PtrMemberAccess	ics -> window_sequence		332421	0					
ANR	332861	Identifier	ics		332421	0					
ANR	332862	Identifier	window_sequence		332421	1					
ANR	332863	PrimaryExpression	1		332421	1					
ANR	332864	ArrayIndexing	ics -> window_sequence [ 0 ]		332421	1					
ANR	332865	PtrMemberAccess	ics -> window_sequence		332421	0					
ANR	332866	Identifier	ics		332421	0					
ANR	332867	Identifier	window_sequence		332421	1					
ANR	332868	PrimaryExpression	0		332421	1					
ANR	332869	ExpressionStatement	ics -> window_sequence [ 0 ] = wi [ j ] . window_type [ 0 ]	119:12:2342:2388	332421	8	True				
ANR	332870	AssignmentExpression	ics -> window_sequence [ 0 ] = wi [ j ] . window_type [ 0 ]		332421	0		=			
ANR	332871	ArrayIndexing	ics -> window_sequence [ 0 ]		332421	0					
ANR	332872	PtrMemberAccess	ics -> window_sequence		332421	0					
ANR	332873	Identifier	ics		332421	0					
ANR	332874	Identifier	window_sequence		332421	1					
ANR	332875	PrimaryExpression	0		332421	1					
ANR	332876	ArrayIndexing	wi [ j ] . window_type [ 0 ]		332421	1					
ANR	332877	MemberAccess	wi [ j ] . window_type		332421	0					
ANR	332878	ArrayIndexing	wi [ j ]		332421	0					
ANR	332879	Identifier	wi		332421	0					
ANR	332880	Identifier	j		332421	1					
ANR	332881	Identifier	window_type		332421	1					
ANR	332882	PrimaryExpression	0		332421	1					
ANR	332883	ExpressionStatement	ics -> use_kb_window [ 1 ] = ics -> use_kb_window [ 0 ]	121:12:2403:2450	332421	9	True				
ANR	332884	AssignmentExpression	ics -> use_kb_window [ 1 ] = ics -> use_kb_window [ 0 ]		332421	0		=			
ANR	332885	ArrayIndexing	ics -> use_kb_window [ 1 ]		332421	0					
ANR	332886	PtrMemberAccess	ics -> use_kb_window		332421	0					
ANR	332887	Identifier	ics		332421	0					
ANR	332888	Identifier	use_kb_window		332421	1					
ANR	332889	PrimaryExpression	1		332421	1					
ANR	332890	ArrayIndexing	ics -> use_kb_window [ 0 ]		332421	1					
ANR	332891	PtrMemberAccess	ics -> use_kb_window		332421	0					
ANR	332892	Identifier	ics		332421	0					
ANR	332893	Identifier	use_kb_window		332421	1					
ANR	332894	PrimaryExpression	0		332421	1					
ANR	332895	ExpressionStatement	ics -> use_kb_window [ 0 ] = wi [ j ] . window_shape	123:12:2465:2509	332421	10	True				
ANR	332896	AssignmentExpression	ics -> use_kb_window [ 0 ] = wi [ j ] . window_shape		332421	0		=			
ANR	332897	ArrayIndexing	ics -> use_kb_window [ 0 ]		332421	0					
ANR	332898	PtrMemberAccess	ics -> use_kb_window		332421	0					
ANR	332899	Identifier	ics		332421	0					
ANR	332900	Identifier	use_kb_window		332421	1					
ANR	332901	PrimaryExpression	0		332421	1					
ANR	332902	MemberAccess	wi [ j ] . window_shape		332421	1					
ANR	332903	ArrayIndexing	wi [ j ]		332421	0					
ANR	332904	Identifier	wi		332421	0					
ANR	332905	Identifier	j		332421	1					
ANR	332906	Identifier	window_shape		332421	1					
ANR	332907	ExpressionStatement	ics -> num_windows = wi [ j ] . num_windows	125:12:2524:2567	332421	11	True				
ANR	332908	AssignmentExpression	ics -> num_windows = wi [ j ] . num_windows		332421	0		=			
ANR	332909	PtrMemberAccess	ics -> num_windows		332421	0					
ANR	332910	Identifier	ics		332421	0					
ANR	332911	Identifier	num_windows		332421	1					
ANR	332912	MemberAccess	wi [ j ] . num_windows		332421	1					
ANR	332913	ArrayIndexing	wi [ j ]		332421	0					
ANR	332914	Identifier	wi		332421	0					
ANR	332915	Identifier	j		332421	1					
ANR	332916	Identifier	num_windows		332421	1					
ANR	332917	ExpressionStatement	ics -> swb_sizes = s -> psy . bands [ ics -> num_windows == 8 ]	127:12:2582:2647	332421	12	True				
ANR	332918	AssignmentExpression	ics -> swb_sizes = s -> psy . bands [ ics -> num_windows == 8 ]		332421	0		=			
ANR	332919	PtrMemberAccess	ics -> swb_sizes		332421	0					
ANR	332920	Identifier	ics		332421	0					
ANR	332921	Identifier	swb_sizes		332421	1					
ANR	332922	ArrayIndexing	s -> psy . bands [ ics -> num_windows == 8 ]		332421	1					
ANR	332923	MemberAccess	s -> psy . bands		332421	0					
ANR	332924	PtrMemberAccess	s -> psy		332421	0					
ANR	332925	Identifier	s		332421	0					
ANR	332926	Identifier	psy		332421	1					
ANR	332927	Identifier	bands		332421	1					
ANR	332928	EqualityExpression	ics -> num_windows == 8		332421	1		==			
ANR	332929	PtrMemberAccess	ics -> num_windows		332421	0					
ANR	332930	Identifier	ics		332421	0					
ANR	332931	Identifier	num_windows		332421	1					
ANR	332932	PrimaryExpression	8		332421	1					
ANR	332933	ExpressionStatement	ics -> num_swb = tag == TYPE_LFE ? 12 : s -> psy . num_bands [ ics -> num_windows == 8 ]	129:12:2662:2750	332421	13	True				
ANR	332934	AssignmentExpression	ics -> num_swb = tag == TYPE_LFE ? 12 : s -> psy . num_bands [ ics -> num_windows == 8 ]		332421	0		=			
ANR	332935	PtrMemberAccess	ics -> num_swb		332421	0					
ANR	332936	Identifier	ics		332421	0					
ANR	332937	Identifier	num_swb		332421	1					
ANR	332938	ConditionalExpression	tag == TYPE_LFE ? 12 : s -> psy . num_bands [ ics -> num_windows == 8 ]		332421	1					
ANR	332939	Condition	tag == TYPE_LFE		332421	0					
ANR	332940	EqualityExpression	tag == TYPE_LFE		332421	0		==			
ANR	332941	Identifier	tag		332421	0					
ANR	332942	Identifier	TYPE_LFE		332421	1					
ANR	332943	PrimaryExpression	12		332421	1					
ANR	332944	ArrayIndexing	s -> psy . num_bands [ ics -> num_windows == 8 ]		332421	2					
ANR	332945	MemberAccess	s -> psy . num_bands		332421	0					
ANR	332946	PtrMemberAccess	s -> psy		332421	0					
ANR	332947	Identifier	s		332421	0					
ANR	332948	Identifier	psy		332421	1					
ANR	332949	Identifier	num_bands		332421	1					
ANR	332950	EqualityExpression	ics -> num_windows == 8		332421	1		==			
ANR	332951	PtrMemberAccess	ics -> num_windows		332421	0					
ANR	332952	Identifier	ics		332421	0					
ANR	332953	Identifier	num_windows		332421	1					
ANR	332954	PrimaryExpression	8		332421	1					
ANR	332955	ForStatement	for ( k = 0 ; k < ics -> num_windows ; k ++ )		332421	14					
ANR	332956	ForInit	k = 0 ;	131:17:2770:2775	332421	0	True				
ANR	332957	AssignmentExpression	k = 0		332421	0		=			
ANR	332958	Identifier	k		332421	0					
ANR	332959	PrimaryExpression	0		332421	1					
ANR	332960	Condition	k < ics -> num_windows	131:24:2777:2796	332421	1	True				
ANR	332961	RelationalExpression	k < ics -> num_windows		332421	0		<			
ANR	332962	Identifier	k		332421	0					
ANR	332963	PtrMemberAccess	ics -> num_windows		332421	1					
ANR	332964	Identifier	ics		332421	0					
ANR	332965	Identifier	num_windows		332421	1					
ANR	332966	PostIncDecOperationExpression	k ++	131:46:2799:2801	332421	2	True				
ANR	332967	Identifier	k		332421	0					
ANR	332968	IncDec	++		332421	1					
ANR	332969	ExpressionStatement	ics -> group_len [ k ] = wi [ j ] . grouping [ k ]	133:16:2821:2858	332421	3	True				
ANR	332970	AssignmentExpression	ics -> group_len [ k ] = wi [ j ] . grouping [ k ]		332421	0		=			
ANR	332971	ArrayIndexing	ics -> group_len [ k ]		332421	0					
ANR	332972	PtrMemberAccess	ics -> group_len		332421	0					
ANR	332973	Identifier	ics		332421	0					
ANR	332974	Identifier	group_len		332421	1					
ANR	332975	Identifier	k		332421	1					
ANR	332976	ArrayIndexing	wi [ j ] . grouping [ k ]		332421	1					
ANR	332977	MemberAccess	wi [ j ] . grouping		332421	0					
ANR	332978	ArrayIndexing	wi [ j ]		332421	0					
ANR	332979	Identifier	wi		332421	0					
ANR	332980	Identifier	j		332421	1					
ANR	332981	Identifier	grouping		332421	1					
ANR	332982	Identifier	k		332421	1					
ANR	332983	ExpressionStatement	"apply_window_and_mdct ( avctx , s , & cpe -> ch [ j ] , samples2 )"	137:12:2875:2929	332421	15	True				
ANR	332984	CallExpression	"apply_window_and_mdct ( avctx , s , & cpe -> ch [ j ] , samples2 )"		332421	0					
ANR	332985	Callee	apply_window_and_mdct		332421	0					
ANR	332986	Identifier	apply_window_and_mdct		332421	0					
ANR	332987	ArgumentList	avctx		332421	1					
ANR	332988	Argument	avctx		332421	0					
ANR	332989	Identifier	avctx		332421	0					
ANR	332990	Argument	s		332421	1					
ANR	332991	Identifier	s		332421	0					
ANR	332992	Argument	& cpe -> ch [ j ]		332421	2					
ANR	332993	UnaryOperationExpression	& cpe -> ch [ j ]		332421	0					
ANR	332994	UnaryOperator	&		332421	0					
ANR	332995	ArrayIndexing	cpe -> ch [ j ]		332421	1					
ANR	332996	PtrMemberAccess	cpe -> ch		332421	0					
ANR	332997	Identifier	cpe		332421	0					
ANR	332998	Identifier	ch		332421	1					
ANR	332999	Identifier	j		332421	1					
ANR	333000	Argument	samples2		332421	3					
ANR	333001	Identifier	samples2		332421	0					
ANR	333002	ExpressionStatement	start_ch += chans	141:8:2951:2968	332421	5	True				
ANR	333003	AssignmentExpression	start_ch += chans		332421	0		+=			
ANR	333004	Identifier	start_ch		332421	0					
ANR	333005	Identifier	chans		332421	1					
ANR	333006	DoStatement	do		332421	12					
ANR	333007	CompoundStatement		143:8:2872:2886	332421	0					
ANR	333008	IdentifierDeclStatement	int frame_bits ;	147:8:2996:3010	332421	0	True				
ANR	333009	IdentifierDecl	frame_bits		332421	0					
ANR	333010	IdentifierDeclType	int		332421	0					
ANR	333011	Identifier	frame_bits		332421	1					
ANR	333012	ExpressionStatement	"init_put_bits ( & s -> pb , frame , buf_size * 8 )"	149:8:3021:3061	332421	1	True				
ANR	333013	CallExpression	"init_put_bits ( & s -> pb , frame , buf_size * 8 )"		332421	0					
ANR	333014	Callee	init_put_bits		332421	0					
ANR	333015	Identifier	init_put_bits		332421	0					
ANR	333016	ArgumentList	& s -> pb		332421	1					
ANR	333017	Argument	& s -> pb		332421	0					
ANR	333018	UnaryOperationExpression	& s -> pb		332421	0					
ANR	333019	UnaryOperator	&		332421	0					
ANR	333020	PtrMemberAccess	s -> pb		332421	1					
ANR	333021	Identifier	s		332421	0					
ANR	333022	Identifier	pb		332421	1					
ANR	333023	Argument	frame		332421	1					
ANR	333024	Identifier	frame		332421	0					
ANR	333025	Argument	buf_size * 8		332421	2					
ANR	333026	MultiplicativeExpression	buf_size * 8		332421	0		*			
ANR	333027	Identifier	buf_size		332421	0					
ANR	333028	PrimaryExpression	8		332421	1					
ANR	333029	IfStatement	if ( ( avctx -> frame_number & 0xFF ) == 1 && ! ( avctx -> flags & CODEC_FLAG_BITEXACT ) )		332421	2					
ANR	333030	Condition	( avctx -> frame_number & 0xFF ) == 1 && ! ( avctx -> flags & CODEC_FLAG_BITEXACT )	151:12:3076:3147	332421	0	True				
ANR	333031	AndExpression	( avctx -> frame_number & 0xFF ) == 1 && ! ( avctx -> flags & CODEC_FLAG_BITEXACT )		332421	0		&&			
ANR	333032	EqualityExpression	( avctx -> frame_number & 0xFF ) == 1		332421	0		==			
ANR	333033	BitAndExpression	avctx -> frame_number & 0xFF		332421	0		&			
ANR	333034	PtrMemberAccess	avctx -> frame_number		332421	0					
ANR	333035	Identifier	avctx		332421	0					
ANR	333036	Identifier	frame_number		332421	1					
ANR	333037	PrimaryExpression	0xFF		332421	1					
ANR	333038	PrimaryExpression	1		332421	1					
ANR	333039	UnaryOperationExpression	! ( avctx -> flags & CODEC_FLAG_BITEXACT )		332421	1					
ANR	333040	UnaryOperator	!		332421	0					
ANR	333041	BitAndExpression	avctx -> flags & CODEC_FLAG_BITEXACT		332421	1		&			
ANR	333042	PtrMemberAccess	avctx -> flags		332421	0					
ANR	333043	Identifier	avctx		332421	0					
ANR	333044	Identifier	flags		332421	1					
ANR	333045	Identifier	CODEC_FLAG_BITEXACT		332421	1					
ANR	333046	ExpressionStatement	"put_bitstream_info ( avctx , s , LIBAVCODEC_IDENT )"	153:12:3163:3209	332421	1	True				
ANR	333047	CallExpression	"put_bitstream_info ( avctx , s , LIBAVCODEC_IDENT )"		332421	0					
ANR	333048	Callee	put_bitstream_info		332421	0					
ANR	333049	Identifier	put_bitstream_info		332421	0					
ANR	333050	ArgumentList	avctx		332421	1					
ANR	333051	Argument	avctx		332421	0					
ANR	333052	Identifier	avctx		332421	0					
ANR	333053	Argument	s		332421	1					
ANR	333054	Identifier	s		332421	0					
ANR	333055	Argument	LIBAVCODEC_IDENT		332421	2					
ANR	333056	Identifier	LIBAVCODEC_IDENT		332421	0					
ANR	333057	ExpressionStatement	start_ch = 0	155:8:3220:3232	332421	3	True				
ANR	333058	AssignmentExpression	start_ch = 0		332421	0		=			
ANR	333059	Identifier	start_ch		332421	0					
ANR	333060	PrimaryExpression	0		332421	1					
ANR	333061	ExpressionStatement	"memset ( chan_el_counter , 0 , sizeof ( chan_el_counter ) )"	157:8:3243:3294	332421	4	True				
ANR	333062	CallExpression	"memset ( chan_el_counter , 0 , sizeof ( chan_el_counter ) )"		332421	0					
ANR	333063	Callee	memset		332421	0					
ANR	333064	Identifier	memset		332421	0					
ANR	333065	ArgumentList	chan_el_counter		332421	1					
ANR	333066	Argument	chan_el_counter		332421	0					
ANR	333067	Identifier	chan_el_counter		332421	0					
ANR	333068	Argument	0		332421	1					
ANR	333069	PrimaryExpression	0		332421	0					
ANR	333070	Argument	sizeof ( chan_el_counter )		332421	2					
ANR	333071	SizeofExpression	sizeof ( chan_el_counter )		332421	0					
ANR	333072	Sizeof	sizeof		332421	0					
ANR	333073	SizeofOperand	chan_el_counter		332421	1					
ANR	333074	ForStatement	for ( i = 0 ; i < chan_map [ 0 ] ; i ++ )		332421	5					
ANR	333075	ForInit	i = 0 ;	159:13:3310:3315	332421	0	True				
ANR	333076	AssignmentExpression	i = 0		332421	0		=			
ANR	333077	Identifier	i		332421	0					
ANR	333078	PrimaryExpression	0		332421	1					
ANR	333079	Condition	i < chan_map [ 0 ]	159:20:3317:3331	332421	1	True				
ANR	333080	RelationalExpression	i < chan_map [ 0 ]		332421	0		<			
ANR	333081	Identifier	i		332421	0					
ANR	333082	ArrayIndexing	chan_map [ 0 ]		332421	1					
ANR	333083	Identifier	chan_map		332421	0					
ANR	333084	PrimaryExpression	0		332421	1					
ANR	333085	PostIncDecOperationExpression	i ++	159:37:3334:3336	332421	2	True				
ANR	333086	Identifier	i		332421	0					
ANR	333087	IncDec	++		332421	1					
ANR	333088	CompoundStatement		157:12:3230:3270	332421	3					
ANR	333089	IdentifierDeclStatement	FFPsyWindowInfo * wi = windows + start_ch ;	161:12:3354:3394	332421	0	True				
ANR	333090	IdentifierDecl	* wi = windows + start_ch		332421	0					
ANR	333091	IdentifierDeclType	FFPsyWindowInfo *		332421	0					
ANR	333092	Identifier	wi		332421	1					
ANR	333093	AssignmentExpression	* wi = windows + start_ch		332421	2		=			
ANR	333094	Identifier	wi		332421	0					
ANR	333095	AdditiveExpression	windows + start_ch		332421	1		+			
ANR	333096	Identifier	windows		332421	0					
ANR	333097	Identifier	start_ch		332421	1					
ANR	333098	ExpressionStatement	tag = chan_map [ i + 1 ]	163:12:3409:3433	332421	1	True				
ANR	333099	AssignmentExpression	tag = chan_map [ i + 1 ]		332421	0		=			
ANR	333100	Identifier	tag		332421	0					
ANR	333101	ArrayIndexing	chan_map [ i + 1 ]		332421	1					
ANR	333102	Identifier	chan_map		332421	0					
ANR	333103	AdditiveExpression	i + 1		332421	1		+			
ANR	333104	Identifier	i		332421	0					
ANR	333105	PrimaryExpression	1		332421	1					
ANR	333106	ExpressionStatement	chans = tag == TYPE_CPE ? 2 : 1	165:12:3448:3482	332421	2	True				
ANR	333107	AssignmentExpression	chans = tag == TYPE_CPE ? 2 : 1		332421	0		=			
ANR	333108	Identifier	chans		332421	0					
ANR	333109	ConditionalExpression	tag == TYPE_CPE ? 2 : 1		332421	1					
ANR	333110	Condition	tag == TYPE_CPE		332421	0					
ANR	333111	EqualityExpression	tag == TYPE_CPE		332421	0		==			
ANR	333112	Identifier	tag		332421	0					
ANR	333113	Identifier	TYPE_CPE		332421	1					
ANR	333114	PrimaryExpression	2		332421	1					
ANR	333115	PrimaryExpression	1		332421	2					
ANR	333116	ExpressionStatement	cpe = & s -> cpe [ i ]	167:12:3497:3518	332421	3	True				
ANR	333117	AssignmentExpression	cpe = & s -> cpe [ i ]		332421	0		=			
ANR	333118	Identifier	cpe		332421	0					
ANR	333119	UnaryOperationExpression	& s -> cpe [ i ]		332421	1					
ANR	333120	UnaryOperator	&		332421	0					
ANR	333121	ArrayIndexing	s -> cpe [ i ]		332421	1					
ANR	333122	PtrMemberAccess	s -> cpe		332421	0					
ANR	333123	Identifier	s		332421	0					
ANR	333124	Identifier	cpe		332421	1					
ANR	333125	Identifier	i		332421	1					
ANR	333126	ExpressionStatement	"put_bits ( & s -> pb , 3 , tag )"	169:12:3533:3557	332421	4	True				
ANR	333127	CallExpression	"put_bits ( & s -> pb , 3 , tag )"		332421	0					
ANR	333128	Callee	put_bits		332421	0					
ANR	333129	Identifier	put_bits		332421	0					
ANR	333130	ArgumentList	& s -> pb		332421	1					
ANR	333131	Argument	& s -> pb		332421	0					
ANR	333132	UnaryOperationExpression	& s -> pb		332421	0					
ANR	333133	UnaryOperator	&		332421	0					
ANR	333134	PtrMemberAccess	s -> pb		332421	1					
ANR	333135	Identifier	s		332421	0					
ANR	333136	Identifier	pb		332421	1					
ANR	333137	Argument	3		332421	1					
ANR	333138	PrimaryExpression	3		332421	0					
ANR	333139	Argument	tag		332421	2					
ANR	333140	Identifier	tag		332421	0					
ANR	333141	ExpressionStatement	"put_bits ( & s -> pb , 4 , chan_el_counter [ tag ] ++ )"	171:12:3572:3615	332421	5	True				
ANR	333142	CallExpression	"put_bits ( & s -> pb , 4 , chan_el_counter [ tag ] ++ )"		332421	0					
ANR	333143	Callee	put_bits		332421	0					
ANR	333144	Identifier	put_bits		332421	0					
ANR	333145	ArgumentList	& s -> pb		332421	1					
ANR	333146	Argument	& s -> pb		332421	0					
ANR	333147	UnaryOperationExpression	& s -> pb		332421	0					
ANR	333148	UnaryOperator	&		332421	0					
ANR	333149	PtrMemberAccess	s -> pb		332421	1					
ANR	333150	Identifier	s		332421	0					
ANR	333151	Identifier	pb		332421	1					
ANR	333152	Argument	4		332421	1					
ANR	333153	PrimaryExpression	4		332421	0					
ANR	333154	Argument	chan_el_counter [ tag ] ++		332421	2					
ANR	333155	PostIncDecOperationExpression	chan_el_counter [ tag ] ++		332421	0					
ANR	333156	ArrayIndexing	chan_el_counter [ tag ]		332421	0					
ANR	333157	Identifier	chan_el_counter		332421	0					
ANR	333158	Identifier	tag		332421	1					
ANR	333159	IncDec	++		332421	1					
ANR	333160	ForStatement	for ( j = 0 ; j < chans ; j ++ )		332421	6					
ANR	333161	ForInit	j = 0 ;	173:17:3635:3640	332421	0	True				
ANR	333162	AssignmentExpression	j = 0		332421	0		=			
ANR	333163	Identifier	j		332421	0					
ANR	333164	PrimaryExpression	0		332421	1					
ANR	333165	Condition	j < chans	173:24:3642:3650	332421	1	True				
ANR	333166	RelationalExpression	j < chans		332421	0		<			
ANR	333167	Identifier	j		332421	0					
ANR	333168	Identifier	chans		332421	1					
ANR	333169	PostIncDecOperationExpression	j ++	173:35:3653:3655	332421	2	True				
ANR	333170	Identifier	j		332421	0					
ANR	333171	IncDec	++		332421	1					
ANR	333172	CompoundStatement		169:40:3534:3534	332421	3					
ANR	333173	ExpressionStatement	s -> cur_channel = start_ch + j	175:16:3677:3706	332421	0	True				
ANR	333174	AssignmentExpression	s -> cur_channel = start_ch + j		332421	0		=			
ANR	333175	PtrMemberAccess	s -> cur_channel		332421	0					
ANR	333176	Identifier	s		332421	0					
ANR	333177	Identifier	cur_channel		332421	1					
ANR	333178	AdditiveExpression	start_ch + j		332421	1		+			
ANR	333179	Identifier	start_ch		332421	0					
ANR	333180	Identifier	j		332421	1					
ANR	333181	ExpressionStatement	"ff_psy_set_band_info ( & s -> psy , s -> cur_channel , cpe -> ch [ j ] . coeffs , & wi [ j ] )"	177:16:3725:3797	332421	1	True				
ANR	333182	CallExpression	"ff_psy_set_band_info ( & s -> psy , s -> cur_channel , cpe -> ch [ j ] . coeffs , & wi [ j ] )"		332421	0					
ANR	333183	Callee	ff_psy_set_band_info		332421	0					
ANR	333184	Identifier	ff_psy_set_band_info		332421	0					
ANR	333185	ArgumentList	& s -> psy		332421	1					
ANR	333186	Argument	& s -> psy		332421	0					
ANR	333187	UnaryOperationExpression	& s -> psy		332421	0					
ANR	333188	UnaryOperator	&		332421	0					
ANR	333189	PtrMemberAccess	s -> psy		332421	1					
ANR	333190	Identifier	s		332421	0					
ANR	333191	Identifier	psy		332421	1					
ANR	333192	Argument	s -> cur_channel		332421	1					
ANR	333193	PtrMemberAccess	s -> cur_channel		332421	0					
ANR	333194	Identifier	s		332421	0					
ANR	333195	Identifier	cur_channel		332421	1					
ANR	333196	Argument	cpe -> ch [ j ] . coeffs		332421	2					
ANR	333197	MemberAccess	cpe -> ch [ j ] . coeffs		332421	0					
ANR	333198	ArrayIndexing	cpe -> ch [ j ]		332421	0					
ANR	333199	PtrMemberAccess	cpe -> ch		332421	0					
ANR	333200	Identifier	cpe		332421	0					
ANR	333201	Identifier	ch		332421	1					
ANR	333202	Identifier	j		332421	1					
ANR	333203	Identifier	coeffs		332421	1					
ANR	333204	Argument	& wi [ j ]		332421	3					
ANR	333205	UnaryOperationExpression	& wi [ j ]		332421	0					
ANR	333206	UnaryOperator	&		332421	0					
ANR	333207	ArrayIndexing	wi [ j ]		332421	1					
ANR	333208	Identifier	wi		332421	0					
ANR	333209	Identifier	j		332421	1					
ANR	333210	ExpressionStatement	"s -> coder -> search_for_quantizers ( avctx , s , & cpe -> ch [ j ] , s -> lambda )"	179:16:3816:3881	332421	2	True				
ANR	333211	CallExpression	"s -> coder -> search_for_quantizers ( avctx , s , & cpe -> ch [ j ] , s -> lambda )"		332421	0					
ANR	333212	Callee	s -> coder -> search_for_quantizers		332421	0					
ANR	333213	PtrMemberAccess	s -> coder -> search_for_quantizers		332421	0					
ANR	333214	PtrMemberAccess	s -> coder		332421	0					
ANR	333215	Identifier	s		332421	0					
ANR	333216	Identifier	coder		332421	1					
ANR	333217	Identifier	search_for_quantizers		332421	1					
ANR	333218	ArgumentList	avctx		332421	1					
ANR	333219	Argument	avctx		332421	0					
ANR	333220	Identifier	avctx		332421	0					
ANR	333221	Argument	s		332421	1					
ANR	333222	Identifier	s		332421	0					
ANR	333223	Argument	& cpe -> ch [ j ]		332421	2					
ANR	333224	UnaryOperationExpression	& cpe -> ch [ j ]		332421	0					
ANR	333225	UnaryOperator	&		332421	0					
ANR	333226	ArrayIndexing	cpe -> ch [ j ]		332421	1					
ANR	333227	PtrMemberAccess	cpe -> ch		332421	0					
ANR	333228	Identifier	cpe		332421	0					
ANR	333229	Identifier	ch		332421	1					
ANR	333230	Identifier	j		332421	1					
ANR	333231	Argument	s -> lambda		332421	3					
ANR	333232	PtrMemberAccess	s -> lambda		332421	0					
ANR	333233	Identifier	s		332421	0					
ANR	333234	Identifier	lambda		332421	1					
ANR	333235	ExpressionStatement	cpe -> common_window = 0	183:12:3911:3933	332421	7	True				
ANR	333236	AssignmentExpression	cpe -> common_window = 0		332421	0		=			
ANR	333237	PtrMemberAccess	cpe -> common_window		332421	0					
ANR	333238	Identifier	cpe		332421	0					
ANR	333239	Identifier	common_window		332421	1					
ANR	333240	PrimaryExpression	0		332421	1					
ANR	333241	IfStatement	if ( chans > 1 && wi [ 0 ] . window_type [ 0 ] == wi [ 1 ] . window_type [ 0 ] && wi [ 0 ] . window_shape == wi [ 1 ] . window_shape )		332421	8					
ANR	333242	Condition	chans > 1 && wi [ 0 ] . window_type [ 0 ] == wi [ 1 ] . window_type [ 0 ] && wi [ 0 ] . window_shape == wi [ 1 ] . window_shape	185:16:3952:4088	332421	0	True				
ANR	333243	AndExpression	chans > 1 && wi [ 0 ] . window_type [ 0 ] == wi [ 1 ] . window_type [ 0 ] && wi [ 0 ] . window_shape == wi [ 1 ] . window_shape		332421	0		&&			
ANR	333244	RelationalExpression	chans > 1		332421	0		>			
ANR	333245	Identifier	chans		332421	0					
ANR	333246	PrimaryExpression	1		332421	1					
ANR	333247	AndExpression	wi [ 0 ] . window_type [ 0 ] == wi [ 1 ] . window_type [ 0 ] && wi [ 0 ] . window_shape == wi [ 1 ] . window_shape		332421	1		&&			
ANR	333248	EqualityExpression	wi [ 0 ] . window_type [ 0 ] == wi [ 1 ] . window_type [ 0 ]		332421	0		==			
ANR	333249	ArrayIndexing	wi [ 0 ] . window_type [ 0 ]		332421	0					
ANR	333250	MemberAccess	wi [ 0 ] . window_type		332421	0					
ANR	333251	ArrayIndexing	wi [ 0 ]		332421	0					
ANR	333252	Identifier	wi		332421	0					
ANR	333253	PrimaryExpression	0		332421	1					
ANR	333254	Identifier	window_type		332421	1					
ANR	333255	PrimaryExpression	0		332421	1					
ANR	333256	ArrayIndexing	wi [ 1 ] . window_type [ 0 ]		332421	1					
ANR	333257	MemberAccess	wi [ 1 ] . window_type		332421	0					
ANR	333258	ArrayIndexing	wi [ 1 ]		332421	0					
ANR	333259	Identifier	wi		332421	0					
ANR	333260	PrimaryExpression	1		332421	1					
ANR	333261	Identifier	window_type		332421	1					
ANR	333262	PrimaryExpression	0		332421	1					
ANR	333263	EqualityExpression	wi [ 0 ] . window_shape == wi [ 1 ] . window_shape		332421	1		==			
ANR	333264	MemberAccess	wi [ 0 ] . window_shape		332421	0					
ANR	333265	ArrayIndexing	wi [ 0 ]		332421	0					
ANR	333266	Identifier	wi		332421	0					
ANR	333267	PrimaryExpression	0		332421	1					
ANR	333268	Identifier	window_shape		332421	1					
ANR	333269	MemberAccess	wi [ 1 ] . window_shape		332421	1					
ANR	333270	ArrayIndexing	wi [ 1 ]		332421	0					
ANR	333271	Identifier	wi		332421	0					
ANR	333272	PrimaryExpression	1		332421	1					
ANR	333273	Identifier	window_shape		332421	1					
ANR	333274	CompoundStatement		185:63:3967:3967	332421	1					
ANR	333275	ExpressionStatement	cpe -> common_window = 1	193:16:4112:4134	332421	0	True				
ANR	333276	AssignmentExpression	cpe -> common_window = 1		332421	0		=			
ANR	333277	PtrMemberAccess	cpe -> common_window		332421	0					
ANR	333278	Identifier	cpe		332421	0					
ANR	333279	Identifier	common_window		332421	1					
ANR	333280	PrimaryExpression	1		332421	1					
ANR	333281	ForStatement	for ( j = 0 ; j < wi [ 0 ] . num_windows ; j ++ )		332421	1					
ANR	333282	ForInit	j = 0 ;	195:21:4158:4163	332421	0	True				
ANR	333283	AssignmentExpression	j = 0		332421	0		=			
ANR	333284	Identifier	j		332421	0					
ANR	333285	PrimaryExpression	0		332421	1					
ANR	333286	Condition	j < wi [ 0 ] . num_windows	195:28:4165:4185	332421	1	True				
ANR	333287	RelationalExpression	j < wi [ 0 ] . num_windows		332421	0		<			
ANR	333288	Identifier	j		332421	0					
ANR	333289	MemberAccess	wi [ 0 ] . num_windows		332421	1					
ANR	333290	ArrayIndexing	wi [ 0 ]		332421	0					
ANR	333291	Identifier	wi		332421	0					
ANR	333292	PrimaryExpression	0		332421	1					
ANR	333293	Identifier	num_windows		332421	1					
ANR	333294	PostIncDecOperationExpression	j ++	195:51:4188:4190	332421	2	True				
ANR	333295	Identifier	j		332421	0					
ANR	333296	IncDec	++		332421	1					
ANR	333297	CompoundStatement		191:56:4069:4069	332421	3					
ANR	333298	IfStatement	if ( wi [ 0 ] . grouping [ j ] != wi [ 1 ] . grouping [ j ] )		332421	0					
ANR	333299	Condition	wi [ 0 ] . grouping [ j ] != wi [ 1 ] . grouping [ j ]	197:24:4220:4257	332421	0	True				
ANR	333300	EqualityExpression	wi [ 0 ] . grouping [ j ] != wi [ 1 ] . grouping [ j ]		332421	0		!=			
ANR	333301	ArrayIndexing	wi [ 0 ] . grouping [ j ]		332421	0					
ANR	333302	MemberAccess	wi [ 0 ] . grouping		332421	0					
ANR	333303	ArrayIndexing	wi [ 0 ]		332421	0					
ANR	333304	Identifier	wi		332421	0					
ANR	333305	PrimaryExpression	0		332421	1					
ANR	333306	Identifier	grouping		332421	1					
ANR	333307	Identifier	j		332421	1					
ANR	333308	ArrayIndexing	wi [ 1 ] . grouping [ j ]		332421	1					
ANR	333309	MemberAccess	wi [ 1 ] . grouping		332421	0					
ANR	333310	ArrayIndexing	wi [ 1 ]		332421	0					
ANR	333311	Identifier	wi		332421	0					
ANR	333312	PrimaryExpression	1		332421	1					
ANR	333313	Identifier	grouping		332421	1					
ANR	333314	Identifier	j		332421	1					
ANR	333315	CompoundStatement		193:64:4136:4136	332421	1					
ANR	333316	ExpressionStatement	cpe -> common_window = 0	199:24:4287:4309	332421	0	True				
ANR	333317	AssignmentExpression	cpe -> common_window = 0		332421	0		=			
ANR	333318	PtrMemberAccess	cpe -> common_window		332421	0					
ANR	333319	Identifier	cpe		332421	0					
ANR	333320	Identifier	common_window		332421	1					
ANR	333321	PrimaryExpression	0		332421	1					
ANR	333322	BreakStatement	break ;	201:24:4336:4341	332421	1	True				
ANR	333323	ExpressionStatement	s -> cur_channel = start_ch	209:12:4413:4438	332421	9	True				
ANR	333324	AssignmentExpression	s -> cur_channel = start_ch		332421	0		=			
ANR	333325	PtrMemberAccess	s -> cur_channel		332421	0					
ANR	333326	Identifier	s		332421	0					
ANR	333327	Identifier	cur_channel		332421	1					
ANR	333328	Identifier	start_ch		332421	1					
ANR	333329	IfStatement	if ( cpe -> common_window && s -> coder -> search_for_ms )		332421	10					
ANR	333330	Condition	cpe -> common_window && s -> coder -> search_for_ms	211:16:4457:4501	332421	0	True				
ANR	333331	AndExpression	cpe -> common_window && s -> coder -> search_for_ms		332421	0		&&			
ANR	333332	PtrMemberAccess	cpe -> common_window		332421	0					
ANR	333333	Identifier	cpe		332421	0					
ANR	333334	Identifier	common_window		332421	1					
ANR	333335	PtrMemberAccess	s -> coder -> search_for_ms		332421	1					
ANR	333336	PtrMemberAccess	s -> coder		332421	0					
ANR	333337	Identifier	s		332421	0					
ANR	333338	Identifier	coder		332421	1					
ANR	333339	Identifier	search_for_ms		332421	1					
ANR	333340	ExpressionStatement	"s -> coder -> search_for_ms ( s , cpe , s -> lambda )"	213:16:4521:4563	332421	1	True				
ANR	333341	CallExpression	"s -> coder -> search_for_ms ( s , cpe , s -> lambda )"		332421	0					
ANR	333342	Callee	s -> coder -> search_for_ms		332421	0					
ANR	333343	PtrMemberAccess	s -> coder -> search_for_ms		332421	0					
ANR	333344	PtrMemberAccess	s -> coder		332421	0					
ANR	333345	Identifier	s		332421	0					
ANR	333346	Identifier	coder		332421	1					
ANR	333347	Identifier	search_for_ms		332421	1					
ANR	333348	ArgumentList	s		332421	1					
ANR	333349	Argument	s		332421	0					
ANR	333350	Identifier	s		332421	0					
ANR	333351	Argument	cpe		332421	1					
ANR	333352	Identifier	cpe		332421	0					
ANR	333353	Argument	s -> lambda		332421	2					
ANR	333354	PtrMemberAccess	s -> lambda		332421	0					
ANR	333355	Identifier	s		332421	0					
ANR	333356	Identifier	lambda		332421	1					
ANR	333357	ExpressionStatement	"adjust_frame_information ( s , cpe , chans )"	215:12:4578:4617	332421	11	True				
ANR	333358	CallExpression	"adjust_frame_information ( s , cpe , chans )"		332421	0					
ANR	333359	Callee	adjust_frame_information		332421	0					
ANR	333360	Identifier	adjust_frame_information		332421	0					
ANR	333361	ArgumentList	s		332421	1					
ANR	333362	Argument	s		332421	0					
ANR	333363	Identifier	s		332421	0					
ANR	333364	Argument	cpe		332421	1					
ANR	333365	Identifier	cpe		332421	0					
ANR	333366	Argument	chans		332421	2					
ANR	333367	Identifier	chans		332421	0					
ANR	333368	IfStatement	if ( chans == 2 )		332421	12					
ANR	333369	Condition	chans == 2	217:16:4636:4645	332421	0	True				
ANR	333370	EqualityExpression	chans == 2		332421	0		==			
ANR	333371	Identifier	chans		332421	0					
ANR	333372	PrimaryExpression	2		332421	1					
ANR	333373	CompoundStatement		213:28:4524:4524	332421	1					
ANR	333374	ExpressionStatement	"put_bits ( & s -> pb , 1 , cpe -> common_window )"	219:16:4667:4706	332421	0	True				
ANR	333375	CallExpression	"put_bits ( & s -> pb , 1 , cpe -> common_window )"		332421	0					
ANR	333376	Callee	put_bits		332421	0					
ANR	333377	Identifier	put_bits		332421	0					
ANR	333378	ArgumentList	& s -> pb		332421	1					
ANR	333379	Argument	& s -> pb		332421	0					
ANR	333380	UnaryOperationExpression	& s -> pb		332421	0					
ANR	333381	UnaryOperator	&		332421	0					
ANR	333382	PtrMemberAccess	s -> pb		332421	1					
ANR	333383	Identifier	s		332421	0					
ANR	333384	Identifier	pb		332421	1					
ANR	333385	Argument	1		332421	1					
ANR	333386	PrimaryExpression	1		332421	0					
ANR	333387	Argument	cpe -> common_window		332421	2					
ANR	333388	PtrMemberAccess	cpe -> common_window		332421	0					
ANR	333389	Identifier	cpe		332421	0					
ANR	333390	Identifier	common_window		332421	1					
ANR	333391	IfStatement	if ( cpe -> common_window )		332421	1					
ANR	333392	Condition	cpe -> common_window	221:20:4729:4746	332421	0	True				
ANR	333393	PtrMemberAccess	cpe -> common_window		332421	0					
ANR	333394	Identifier	cpe		332421	0					
ANR	333395	Identifier	common_window		332421	1					
ANR	333396	CompoundStatement		217:40:4625:4625	332421	1					
ANR	333397	ExpressionStatement	"put_ics_info ( s , & cpe -> ch [ 0 ] . ics )"	223:20:4772:4804	332421	0	True				
ANR	333398	CallExpression	"put_ics_info ( s , & cpe -> ch [ 0 ] . ics )"		332421	0					
ANR	333399	Callee	put_ics_info		332421	0					
ANR	333400	Identifier	put_ics_info		332421	0					
ANR	333401	ArgumentList	s		332421	1					
ANR	333402	Argument	s		332421	0					
ANR	333403	Identifier	s		332421	0					
ANR	333404	Argument	& cpe -> ch [ 0 ] . ics		332421	1					
ANR	333405	UnaryOperationExpression	& cpe -> ch [ 0 ] . ics		332421	0					
ANR	333406	UnaryOperator	&		332421	0					
ANR	333407	MemberAccess	cpe -> ch [ 0 ] . ics		332421	1					
ANR	333408	ArrayIndexing	cpe -> ch [ 0 ]		332421	0					
ANR	333409	PtrMemberAccess	cpe -> ch		332421	0					
ANR	333410	Identifier	cpe		332421	0					
ANR	333411	Identifier	ch		332421	1					
ANR	333412	PrimaryExpression	0		332421	1					
ANR	333413	Identifier	ics		332421	1					
ANR	333414	ExpressionStatement	"encode_ms_info ( & s -> pb , cpe )"	225:20:4827:4854	332421	1	True				
ANR	333415	CallExpression	"encode_ms_info ( & s -> pb , cpe )"		332421	0					
ANR	333416	Callee	encode_ms_info		332421	0					
ANR	333417	Identifier	encode_ms_info		332421	0					
ANR	333418	ArgumentList	& s -> pb		332421	1					
ANR	333419	Argument	& s -> pb		332421	0					
ANR	333420	UnaryOperationExpression	& s -> pb		332421	0					
ANR	333421	UnaryOperator	&		332421	0					
ANR	333422	PtrMemberAccess	s -> pb		332421	1					
ANR	333423	Identifier	s		332421	0					
ANR	333424	Identifier	pb		332421	1					
ANR	333425	Argument	cpe		332421	1					
ANR	333426	Identifier	cpe		332421	0					
ANR	333427	ForStatement	for ( j = 0 ; j < chans ; j ++ )		332421	13					
ANR	333428	ForInit	j = 0 ;	231:17:4908:4913	332421	0	True				
ANR	333429	AssignmentExpression	j = 0		332421	0		=			
ANR	333430	Identifier	j		332421	0					
ANR	333431	PrimaryExpression	0		332421	1					
ANR	333432	Condition	j < chans	231:24:4915:4923	332421	1	True				
ANR	333433	RelationalExpression	j < chans		332421	0		<			
ANR	333434	Identifier	j		332421	0					
ANR	333435	Identifier	chans		332421	1					
ANR	333436	PostIncDecOperationExpression	j ++	231:35:4926:4928	332421	2	True				
ANR	333437	Identifier	j		332421	0					
ANR	333438	IncDec	++		332421	1					
ANR	333439	CompoundStatement		227:40:4807:4807	332421	3					
ANR	333440	ExpressionStatement	s -> cur_channel = start_ch + j	233:16:4950:4979	332421	0	True				
ANR	333441	AssignmentExpression	s -> cur_channel = start_ch + j		332421	0		=			
ANR	333442	PtrMemberAccess	s -> cur_channel		332421	0					
ANR	333443	Identifier	s		332421	0					
ANR	333444	Identifier	cur_channel		332421	1					
ANR	333445	AdditiveExpression	start_ch + j		332421	1		+			
ANR	333446	Identifier	start_ch		332421	0					
ANR	333447	Identifier	j		332421	1					
ANR	333448	ExpressionStatement	"encode_individual_channel ( avctx , s , & cpe -> ch [ j ] , cpe -> common_window )"	235:16:4998:5066	332421	1	True				
ANR	333449	CallExpression	"encode_individual_channel ( avctx , s , & cpe -> ch [ j ] , cpe -> common_window )"		332421	0					
ANR	333450	Callee	encode_individual_channel		332421	0					
ANR	333451	Identifier	encode_individual_channel		332421	0					
ANR	333452	ArgumentList	avctx		332421	1					
ANR	333453	Argument	avctx		332421	0					
ANR	333454	Identifier	avctx		332421	0					
ANR	333455	Argument	s		332421	1					
ANR	333456	Identifier	s		332421	0					
ANR	333457	Argument	& cpe -> ch [ j ]		332421	2					
ANR	333458	UnaryOperationExpression	& cpe -> ch [ j ]		332421	0					
ANR	333459	UnaryOperator	&		332421	0					
ANR	333460	ArrayIndexing	cpe -> ch [ j ]		332421	1					
ANR	333461	PtrMemberAccess	cpe -> ch		332421	0					
ANR	333462	Identifier	cpe		332421	0					
ANR	333463	Identifier	ch		332421	1					
ANR	333464	Identifier	j		332421	1					
ANR	333465	Argument	cpe -> common_window		332421	3					
ANR	333466	PtrMemberAccess	cpe -> common_window		332421	0					
ANR	333467	Identifier	cpe		332421	0					
ANR	333468	Identifier	common_window		332421	1					
ANR	333469	ExpressionStatement	start_ch += chans	239:12:5096:5113	332421	14	True				
ANR	333470	AssignmentExpression	start_ch += chans		332421	0		+=			
ANR	333471	Identifier	start_ch		332421	0					
ANR	333472	Identifier	chans		332421	1					
ANR	333473	ExpressionStatement	frame_bits = put_bits_count ( & s -> pb )	245:8:5137:5172	332421	6	True				
ANR	333474	AssignmentExpression	frame_bits = put_bits_count ( & s -> pb )		332421	0		=			
ANR	333475	Identifier	frame_bits		332421	0					
ANR	333476	CallExpression	put_bits_count ( & s -> pb )		332421	1					
ANR	333477	Callee	put_bits_count		332421	0					
ANR	333478	Identifier	put_bits_count		332421	0					
ANR	333479	ArgumentList	& s -> pb		332421	1					
ANR	333480	Argument	& s -> pb		332421	0					
ANR	333481	UnaryOperationExpression	& s -> pb		332421	0					
ANR	333482	UnaryOperator	&		332421	0					
ANR	333483	PtrMemberAccess	s -> pb		332421	1					
ANR	333484	Identifier	s		332421	0					
ANR	333485	Identifier	pb		332421	1					
ANR	333486	IfStatement	if ( frame_bits <= 6144 * avctx -> channels - 3 )		332421	7					
ANR	333487	Condition	frame_bits <= 6144 * avctx -> channels - 3	247:12:5187:5226	332421	0	True				
ANR	333488	RelationalExpression	frame_bits <= 6144 * avctx -> channels - 3		332421	0		<=			
ANR	333489	Identifier	frame_bits		332421	0					
ANR	333490	AdditiveExpression	6144 * avctx -> channels - 3		332421	1		-			
ANR	333491	MultiplicativeExpression	6144 * avctx -> channels		332421	0		*			
ANR	333492	PrimaryExpression	6144		332421	0					
ANR	333493	PtrMemberAccess	avctx -> channels		332421	1					
ANR	333494	Identifier	avctx		332421	0					
ANR	333495	Identifier	channels		332421	1					
ANR	333496	PrimaryExpression	3		332421	1					
ANR	333497	CompoundStatement		243:54:5105:5105	332421	1					
ANR	333498	ExpressionStatement	s -> psy . bitres . bits = frame_bits / avctx -> channels	249:12:5244:5293	332421	0	True				
ANR	333499	AssignmentExpression	s -> psy . bitres . bits = frame_bits / avctx -> channels		332421	0		=			
ANR	333500	MemberAccess	s -> psy . bitres . bits		332421	0					
ANR	333501	MemberAccess	s -> psy . bitres		332421	0					
ANR	333502	PtrMemberAccess	s -> psy		332421	0					
ANR	333503	Identifier	s		332421	0					
ANR	333504	Identifier	psy		332421	1					
ANR	333505	Identifier	bitres		332421	1					
ANR	333506	Identifier	bits		332421	1					
ANR	333507	MultiplicativeExpression	frame_bits / avctx -> channels		332421	1		/			
ANR	333508	Identifier	frame_bits		332421	0					
ANR	333509	PtrMemberAccess	avctx -> channels		332421	1					
ANR	333510	Identifier	avctx		332421	0					
ANR	333511	Identifier	channels		332421	1					
ANR	333512	BreakStatement	break ;	251:12:5308:5313	332421	1	True				
ANR	333513	ExpressionStatement	s -> lambda *= avctx -> bit_rate * 1024.0f / avctx -> sample_rate / frame_bits	257:8:5337:5409	332421	8	True				
ANR	333514	AssignmentExpression	s -> lambda *= avctx -> bit_rate * 1024.0f / avctx -> sample_rate / frame_bits		332421	0		*=			
ANR	333515	PtrMemberAccess	s -> lambda		332421	0					
ANR	333516	Identifier	s		332421	0					
ANR	333517	Identifier	lambda		332421	1					
ANR	333518	MultiplicativeExpression	avctx -> bit_rate * 1024.0f / avctx -> sample_rate / frame_bits		332421	1		*			
ANR	333519	PtrMemberAccess	avctx -> bit_rate		332421	0					
ANR	333520	Identifier	avctx		332421	0					
ANR	333521	Identifier	bit_rate		332421	1					
ANR	333522	MultiplicativeExpression	1024.0f / avctx -> sample_rate / frame_bits		332421	1		/			
ANR	333523	PrimaryExpression	1024.0f		332421	0					
ANR	333524	MultiplicativeExpression	avctx -> sample_rate / frame_bits		332421	1		/			
ANR	333525	PtrMemberAccess	avctx -> sample_rate		332421	0					
ANR	333526	Identifier	avctx		332421	0					
ANR	333527	Identifier	sample_rate		332421	1					
ANR	333528	Identifier	frame_bits		332421	1					
ANR	333529	Condition	1	261:13:5427:5427	332421	1	True				
ANR	333530	PrimaryExpression	1		332421	0					
ANR	333531	ExpressionStatement	"put_bits ( & s -> pb , 3 , TYPE_END )"	265:4:5438:5467	332421	13	True				
ANR	333532	CallExpression	"put_bits ( & s -> pb , 3 , TYPE_END )"		332421	0					
ANR	333533	Callee	put_bits		332421	0					
ANR	333534	Identifier	put_bits		332421	0					
ANR	333535	ArgumentList	& s -> pb		332421	1					
ANR	333536	Argument	& s -> pb		332421	0					
ANR	333537	UnaryOperationExpression	& s -> pb		332421	0					
ANR	333538	UnaryOperator	&		332421	0					
ANR	333539	PtrMemberAccess	s -> pb		332421	1					
ANR	333540	Identifier	s		332421	0					
ANR	333541	Identifier	pb		332421	1					
ANR	333542	Argument	3		332421	1					
ANR	333543	PrimaryExpression	3		332421	0					
ANR	333544	Argument	TYPE_END		332421	2					
ANR	333545	Identifier	TYPE_END		332421	0					
ANR	333546	ExpressionStatement	flush_put_bits ( & s -> pb )	267:4:5474:5496	332421	14	True				
ANR	333547	CallExpression	flush_put_bits ( & s -> pb )		332421	0					
ANR	333548	Callee	flush_put_bits		332421	0					
ANR	333549	Identifier	flush_put_bits		332421	0					
ANR	333550	ArgumentList	& s -> pb		332421	1					
ANR	333551	Argument	& s -> pb		332421	0					
ANR	333552	UnaryOperationExpression	& s -> pb		332421	0					
ANR	333553	UnaryOperator	&		332421	0					
ANR	333554	PtrMemberAccess	s -> pb		332421	1					
ANR	333555	Identifier	s		332421	0					
ANR	333556	Identifier	pb		332421	1					
ANR	333557	ExpressionStatement	avctx -> frame_bits = put_bits_count ( & s -> pb )	269:4:5503:5545	332421	15	True				
ANR	333558	AssignmentExpression	avctx -> frame_bits = put_bits_count ( & s -> pb )		332421	0		=			
ANR	333559	PtrMemberAccess	avctx -> frame_bits		332421	0					
ANR	333560	Identifier	avctx		332421	0					
ANR	333561	Identifier	frame_bits		332421	1					
ANR	333562	CallExpression	put_bits_count ( & s -> pb )		332421	1					
ANR	333563	Callee	put_bits_count		332421	0					
ANR	333564	Identifier	put_bits_count		332421	0					
ANR	333565	ArgumentList	& s -> pb		332421	1					
ANR	333566	Argument	& s -> pb		332421	0					
ANR	333567	UnaryOperationExpression	& s -> pb		332421	0					
ANR	333568	UnaryOperator	&		332421	0					
ANR	333569	PtrMemberAccess	s -> pb		332421	1					
ANR	333570	Identifier	s		332421	0					
ANR	333571	Identifier	pb		332421	1					
ANR	333572	IfStatement	if ( ! ( avctx -> flags & CODEC_FLAG_QSCALE ) )		332421	16					
ANR	333573	Condition	! ( avctx -> flags & CODEC_FLAG_QSCALE )	275:8:5585:5619	332421	0	True				
ANR	333574	UnaryOperationExpression	! ( avctx -> flags & CODEC_FLAG_QSCALE )		332421	0					
ANR	333575	UnaryOperator	!		332421	0					
ANR	333576	BitAndExpression	avctx -> flags & CODEC_FLAG_QSCALE		332421	1		&			
ANR	333577	PtrMemberAccess	avctx -> flags		332421	0					
ANR	333578	Identifier	avctx		332421	0					
ANR	333579	Identifier	flags		332421	1					
ANR	333580	Identifier	CODEC_FLAG_QSCALE		332421	1					
ANR	333581	CompoundStatement		273:8:5509:5589	332421	1					
ANR	333582	IdentifierDeclStatement	float ratio = avctx -> bit_rate * 1024.0f / avctx -> sample_rate / avctx -> frame_bits ;	277:8:5633:5713	332421	0	True				
ANR	333583	IdentifierDecl	ratio = avctx -> bit_rate * 1024.0f / avctx -> sample_rate / avctx -> frame_bits		332421	0					
ANR	333584	IdentifierDeclType	float		332421	0					
ANR	333585	Identifier	ratio		332421	1					
ANR	333586	AssignmentExpression	ratio = avctx -> bit_rate * 1024.0f / avctx -> sample_rate / avctx -> frame_bits		332421	2		=			
ANR	333587	Identifier	ratio		332421	0					
ANR	333588	MultiplicativeExpression	avctx -> bit_rate * 1024.0f / avctx -> sample_rate / avctx -> frame_bits		332421	1		*			
ANR	333589	PtrMemberAccess	avctx -> bit_rate		332421	0					
ANR	333590	Identifier	avctx		332421	0					
ANR	333591	Identifier	bit_rate		332421	1					
ANR	333592	MultiplicativeExpression	1024.0f / avctx -> sample_rate / avctx -> frame_bits		332421	1		/			
ANR	333593	PrimaryExpression	1024.0f		332421	0					
ANR	333594	MultiplicativeExpression	avctx -> sample_rate / avctx -> frame_bits		332421	1		/			
ANR	333595	PtrMemberAccess	avctx -> sample_rate		332421	0					
ANR	333596	Identifier	avctx		332421	0					
ANR	333597	Identifier	sample_rate		332421	1					
ANR	333598	PtrMemberAccess	avctx -> frame_bits		332421	1					
ANR	333599	Identifier	avctx		332421	0					
ANR	333600	Identifier	frame_bits		332421	1					
ANR	333601	ExpressionStatement	s -> lambda *= ratio	279:8:5724:5742	332421	1	True				
ANR	333602	AssignmentExpression	s -> lambda *= ratio		332421	0		*=			
ANR	333603	PtrMemberAccess	s -> lambda		332421	0					
ANR	333604	Identifier	s		332421	0					
ANR	333605	Identifier	lambda		332421	1					
ANR	333606	Identifier	ratio		332421	1					
ANR	333607	ExpressionStatement	"s -> lambda = FFMIN ( s -> lambda , 65536.f )"	281:8:5753:5790	332421	2	True				
ANR	333608	AssignmentExpression	"s -> lambda = FFMIN ( s -> lambda , 65536.f )"		332421	0		=			
ANR	333609	PtrMemberAccess	s -> lambda		332421	0					
ANR	333610	Identifier	s		332421	0					
ANR	333611	Identifier	lambda		332421	1					
ANR	333612	CallExpression	"FFMIN ( s -> lambda , 65536.f )"		332421	1					
ANR	333613	Callee	FFMIN		332421	0					
ANR	333614	Identifier	FFMIN		332421	0					
ANR	333615	ArgumentList	s -> lambda		332421	1					
ANR	333616	Argument	s -> lambda		332421	0					
ANR	333617	PtrMemberAccess	s -> lambda		332421	0					
ANR	333618	Identifier	s		332421	0					
ANR	333619	Identifier	lambda		332421	1					
ANR	333620	Argument	65536.f		332421	1					
ANR	333621	PrimaryExpression	65536.f		332421	0					
ANR	333622	IfStatement	if ( ! data )		332421	17					
ANR	333623	Condition	! data	287:8:5810:5814	332421	0	True				
ANR	333624	UnaryOperationExpression	! data		332421	0					
ANR	333625	UnaryOperator	!		332421	0					
ANR	333626	Identifier	data		332421	1					
ANR	333627	ExpressionStatement	s -> last_frame = 1	289:8:5826:5843	332421	1	True				
ANR	333628	AssignmentExpression	s -> last_frame = 1		332421	0		=			
ANR	333629	PtrMemberAccess	s -> last_frame		332421	0					
ANR	333630	Identifier	s		332421	0					
ANR	333631	Identifier	last_frame		332421	1					
ANR	333632	PrimaryExpression	1		332421	1					
ANR	333633	ExpressionStatement	"memcpy ( s -> samples , s -> samples + 1024 * avctx -> channels , 1024 * avctx -> channels * sizeof ( s -> samples [ 0 ] ) )"	291:4:5850:5965	332421	18	True				
ANR	333634	CallExpression	"memcpy ( s -> samples , s -> samples + 1024 * avctx -> channels , 1024 * avctx -> channels * sizeof ( s -> samples [ 0 ] ) )"		332421	0					
ANR	333635	Callee	memcpy		332421	0					
ANR	333636	Identifier	memcpy		332421	0					
ANR	333637	ArgumentList	s -> samples		332421	1					
ANR	333638	Argument	s -> samples		332421	0					
ANR	333639	PtrMemberAccess	s -> samples		332421	0					
ANR	333640	Identifier	s		332421	0					
ANR	333641	Identifier	samples		332421	1					
ANR	333642	Argument	s -> samples + 1024 * avctx -> channels		332421	1					
ANR	333643	AdditiveExpression	s -> samples + 1024 * avctx -> channels		332421	0		+			
ANR	333644	PtrMemberAccess	s -> samples		332421	0					
ANR	333645	Identifier	s		332421	0					
ANR	333646	Identifier	samples		332421	1					
ANR	333647	MultiplicativeExpression	1024 * avctx -> channels		332421	1		*			
ANR	333648	PrimaryExpression	1024		332421	0					
ANR	333649	PtrMemberAccess	avctx -> channels		332421	1					
ANR	333650	Identifier	avctx		332421	0					
ANR	333651	Identifier	channels		332421	1					
ANR	333652	Argument	1024 * avctx -> channels * sizeof ( s -> samples [ 0 ] )		332421	2					
ANR	333653	MultiplicativeExpression	1024 * avctx -> channels * sizeof ( s -> samples [ 0 ] )		332421	0		*			
ANR	333654	PrimaryExpression	1024		332421	0					
ANR	333655	MultiplicativeExpression	avctx -> channels * sizeof ( s -> samples [ 0 ] )		332421	1		*			
ANR	333656	PtrMemberAccess	avctx -> channels		332421	0					
ANR	333657	Identifier	avctx		332421	0					
ANR	333658	Identifier	channels		332421	1					
ANR	333659	SizeofExpression	sizeof ( s -> samples [ 0 ] )		332421	1					
ANR	333660	Sizeof	sizeof		332421	0					
ANR	333661	ArrayIndexing	s -> samples [ 0 ]		332421	1					
ANR	333662	PtrMemberAccess	s -> samples		332421	0					
ANR	333663	Identifier	s		332421	0					
ANR	333664	Identifier	samples		332421	1					
ANR	333665	PrimaryExpression	0		332421	1					
ANR	333666	ReturnStatement	return put_bits_count ( & s -> pb ) >> 3 ;	295:4:5972:6004	332421	19	True				
ANR	333667	ShiftExpression	put_bits_count ( & s -> pb ) >> 3		332421	0		>>			
ANR	333668	CallExpression	put_bits_count ( & s -> pb )		332421	0					
ANR	333669	Callee	put_bits_count		332421	0					
ANR	333670	Identifier	put_bits_count		332421	0					
ANR	333671	ArgumentList	& s -> pb		332421	1					
ANR	333672	Argument	& s -> pb		332421	0					
ANR	333673	UnaryOperationExpression	& s -> pb		332421	0					
ANR	333674	UnaryOperator	&		332421	0					
ANR	333675	PtrMemberAccess	s -> pb		332421	1					
ANR	333676	Identifier	s		332421	0					
ANR	333677	Identifier	pb		332421	1					
ANR	333678	PrimaryExpression	3		332421	1					
ANR	333679	ReturnType	static int		332421	1					
ANR	333680	Identifier	aac_encode_frame		332421	2					
ANR	333681	ParameterList	"AVCodecContext * avctx , uint8_t * frame , int buf_size , void * data"		332421	3					
ANR	333682	Parameter	AVCodecContext * avctx	1:28:28:48	332421	0	True				
ANR	333683	ParameterType	AVCodecContext *		332421	0					
ANR	333684	Identifier	avctx		332421	1					
ANR	333685	Parameter	uint8_t * frame	3:28:80:93	332421	1	True				
ANR	333686	ParameterType	uint8_t *		332421	0					
ANR	333687	Identifier	frame		332421	1					
ANR	333688	Parameter	int buf_size	3:44:96:107	332421	2	True				
ANR	333689	ParameterType	int		332421	0					
ANR	333690	Identifier	buf_size		332421	1					
ANR	333691	Parameter	void * data	3:58:110:119	332421	3	True				
ANR	333692	ParameterType	void *		332421	0					
ANR	333693	Identifier	data		332421	1					
ANR	333694	CFGEntryNode	ENTRY		332421		True				
ANR	333695	CFGExitNode	EXIT		332421		True				
ANR	333696	Symbol	s -> psy		332421						
ANR	333697	Symbol	wi [ 1 ] . window_type		332421						
ANR	333698	Symbol	cur_channel		332421						
ANR	333699	Symbol	ff_psy_suggest_window		332421						
ANR	333700	Symbol	* ics -> window_sequence		332421						
ANR	333701	Symbol	ics -> num_windows		332421						
ANR	333702	Symbol	* chan_el_counter		332421						
ANR	333703	Symbol	start_ch		332421						
ANR	333704	Symbol	* wi [ 1 ] . grouping		332421						
ANR	333705	Symbol	s -> coder		332421						
ANR	333706	Symbol	s -> last_frame		332421						
ANR	333707	Symbol	* * avctx		332421						
ANR	333708	Symbol	* avctx -> channels		332421						
ANR	333709	Symbol	samples		332421						
ANR	333710	Symbol	avctx -> bit_rate		332421						
ANR	333711	Symbol	& s -> pb		332421						
ANR	333712	Symbol	* aac_chan_configs		332421						
ANR	333713	Symbol	ONLY_LONG_SEQUENCE		332421						
ANR	333714	Symbol	* * wi		332421						
ANR	333715	Symbol	chan_el_counter		332421						
ANR	333716	Symbol	avctx -> frame_bits		332421						
ANR	333717	Symbol	frame_bits		332421						
ANR	333718	Symbol	s -> coder -> search_for_ms		332421						
ANR	333719	Symbol	* ics -> group_len		332421						
ANR	333720	Symbol	LIBAVCODEC_IDENT		332421						
ANR	333721	Symbol	& s -> psy		332421						
ANR	333722	Symbol	s -> samples		332421						
ANR	333723	Symbol	* * s		332421						
ANR	333724	Symbol	* s -> coder		332421						
ANR	333725	Symbol	avctx -> frame_number		332421						
ANR	333726	Symbol	& cpe -> ch [ 0 ] . ics		332421						
ANR	333727	Symbol	avctx		332421						
ANR	333728	Symbol	TYPE_END		332421						
ANR	333729	Symbol	ics -> window_sequence		332421						
ANR	333730	Symbol	ics -> use_kb_window		332421						
ANR	333731	Symbol	* wi [ j ] . grouping		332421						
ANR	333732	Symbol	put_bits_count		332421						
ANR	333733	Symbol	i		332421						
ANR	333734	Symbol	j		332421						
ANR	333735	Symbol	wi [ j ] . num_windows		332421						
ANR	333736	Symbol	k		332421						
ANR	333737	Symbol	* s -> samples		332421						
ANR	333738	Symbol	avctx -> sample_rate		332421						
ANR	333739	Symbol	* wi [ 0 ] . window_type		332421						
ANR	333740	Symbol	s -> psy . bitres		332421						
ANR	333741	Symbol	s		332421						
ANR	333742	Symbol	la		332421						
ANR	333743	Symbol	wi [ 1 ] . window_shape		332421						
ANR	333744	Symbol	s -> psy . bands		332421						
ANR	333745	Symbol	ratio		332421						
ANR	333746	Symbol	s -> psy . bitres . bits		332421						
ANR	333747	Symbol	* cpe -> ch		332421						
ANR	333748	Symbol	data		332421						
ANR	333749	Symbol	samples2		332421						
ANR	333750	Symbol	FFMIN		332421						
ANR	333751	Symbol	avctx -> channels		332421						
ANR	333752	Symbol	wi [ j ] . grouping		332421						
ANR	333753	Symbol	s -> psy . num_bands		332421						
ANR	333754	Symbol	* s -> psy . bands		332421						
ANR	333755	Symbol	s -> cur_channel		332421						
ANR	333756	Symbol	ics		332421						
ANR	333757	Symbol	cpe		332421						
ANR	333758	Symbol	avctx -> flags		332421						
ANR	333759	Symbol	TYPE_CPE		332421						
ANR	333760	Symbol	tag		332421						
ANR	333761	Symbol	* wi		332421						
ANR	333762	Symbol	* s -> psy . num_bands		332421						
ANR	333763	Symbol	* * j		332421						
ANR	333764	Symbol	* wi [ 0 ] . grouping		332421						
ANR	333765	Symbol	CODEC_FLAG_QSCALE		332421						
ANR	333766	Symbol	wi [ 0 ] . window_type		332421						
ANR	333767	Symbol	NULL		332421						
ANR	333768	Symbol	ics -> swb_sizes		332421						
ANR	333769	Symbol	* wi [ j ] . window_type		332421						
ANR	333770	Symbol	buf_size		332421						
ANR	333771	Symbol	* s -> psy		332421						
ANR	333772	Symbol	wi [ 0 ] . grouping		332421						
ANR	333773	Symbol	cpe -> ch [ j ] . coeffs		332421						
ANR	333774	Symbol	cpe -> ch		332421						
ANR	333775	Symbol	cpe -> common_window		332421						
ANR	333776	Symbol	* avctx		332421						
ANR	333777	Symbol	chan_map		332421						
ANR	333778	Symbol	wi [ 1 ] . grouping		332421						
ANR	333779	Symbol	wi [ 0 ] . num_windows		332421						
ANR	333780	Symbol	s -> lambda		332421						
ANR	333781	Symbol	frame		332421						
ANR	333782	Symbol	* ics -> num_windows		332421						
ANR	333783	Symbol	wi [ 0 ] . window_shape		332421						
ANR	333784	Symbol	chans		332421						
ANR	333785	Symbol	* ics -> use_kb_window		332421						
ANR	333786	Symbol	s -> cpe		332421						
ANR	333787	Symbol	* tag		332421						
ANR	333788	Symbol	wi [ j ] . window_shape		332421						
ANR	333789	Symbol	ics -> group_len		332421						
ANR	333790	Symbol	CODEC_FLAG_BITEXACT		332421						
ANR	333791	Symbol	* chan_map		332421						
ANR	333792	Symbol	wi		332421						
ANR	333793	Symbol	ics -> num_swb		332421						
ANR	333794	Symbol	* wi [ 1 ] . window_type		332421						
ANR	333795	Symbol	& cpe -> ch [ j ] . ics		332421						
ANR	333796	Symbol	aac_chan_configs		332421						
ANR	333797	Symbol	wi [ j ] . window_type		332421						
ANR	333798	Symbol	s -> psypp		332421						
ANR	333799	Symbol	avctx -> priv_data		332421						
ANR	333800	Symbol	windows		332421						
ANR	333801	Symbol	* * cpe		332421						
ANR	333802	Symbol	* * ics		332421						
ANR	333803	Symbol	TYPE_LFE		332421						
ANR	333804	Symbol	* i		332421						
ANR	333805	Symbol	* j		332421						
ANR	333806	Symbol	* k		332421						
ANR	333807	Symbol	* ics		332421						
ANR	333808	Symbol	* s		332421						
ANR	333809	Symbol	* cpe		332421						
