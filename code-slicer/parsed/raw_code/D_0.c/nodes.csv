command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	11103	File	/home/p4ultr4n/workplace/ReVeal/raw_code/D_0.c								
ANR	11104	Function	swri_rematrix_init_x86	11:0:63:2231							
ANR	11105	FunctionDef	swri_rematrix_init_x86 (struct SwrContext * s)		11104	0					
ANR	11106	CompoundStatement		11:57:120:2231	11104	0					
ANR	11107	IdentifierDeclStatement	int mm_flags = av_get_cpu_flags ( ) ;	13:4:127:160	11104	0	True				
ANR	11108	IdentifierDecl	mm_flags = av_get_cpu_flags ( )		11104	0					
ANR	11109	IdentifierDeclType	int		11104	0					
ANR	11110	Identifier	mm_flags		11104	1					
ANR	11111	AssignmentExpression	mm_flags = av_get_cpu_flags ( )		11104	2		=			
ANR	11112	Identifier	mm_flags		11104	0					
ANR	11113	CallExpression	av_get_cpu_flags ( )		11104	1					
ANR	11114	Callee	av_get_cpu_flags		11104	0					
ANR	11115	Identifier	av_get_cpu_flags		11104	0					
ANR	11116	ArgumentList			11104	1					
ANR	11117	IdentifierDeclStatement	int nb_in = av_get_channel_layout_nb_channels ( s -> in_ch_layout ) ;	15:4:167:230	11104	1	True				
ANR	11118	IdentifierDecl	nb_in = av_get_channel_layout_nb_channels ( s -> in_ch_layout )		11104	0					
ANR	11119	IdentifierDeclType	int		11104	0					
ANR	11120	Identifier	nb_in		11104	1					
ANR	11121	AssignmentExpression	nb_in = av_get_channel_layout_nb_channels ( s -> in_ch_layout )		11104	2		=			
ANR	11122	Identifier	nb_in		11104	0					
ANR	11123	CallExpression	av_get_channel_layout_nb_channels ( s -> in_ch_layout )		11104	1					
ANR	11124	Callee	av_get_channel_layout_nb_channels		11104	0					
ANR	11125	Identifier	av_get_channel_layout_nb_channels		11104	0					
ANR	11126	ArgumentList	s -> in_ch_layout		11104	1					
ANR	11127	Argument	s -> in_ch_layout		11104	0					
ANR	11128	PtrMemberAccess	s -> in_ch_layout		11104	0					
ANR	11129	Identifier	s		11104	0					
ANR	11130	Identifier	in_ch_layout		11104	1					
ANR	11131	IdentifierDeclStatement	int nb_out = av_get_channel_layout_nb_channels ( s -> out_ch_layout ) ;	17:4:237:301	11104	2	True				
ANR	11132	IdentifierDecl	nb_out = av_get_channel_layout_nb_channels ( s -> out_ch_layout )		11104	0					
ANR	11133	IdentifierDeclType	int		11104	0					
ANR	11134	Identifier	nb_out		11104	1					
ANR	11135	AssignmentExpression	nb_out = av_get_channel_layout_nb_channels ( s -> out_ch_layout )		11104	2		=			
ANR	11136	Identifier	nb_out		11104	0					
ANR	11137	CallExpression	av_get_channel_layout_nb_channels ( s -> out_ch_layout )		11104	1					
ANR	11138	Callee	av_get_channel_layout_nb_channels		11104	0					
ANR	11139	Identifier	av_get_channel_layout_nb_channels		11104	0					
ANR	11140	ArgumentList	s -> out_ch_layout		11104	1					
ANR	11141	Argument	s -> out_ch_layout		11104	0					
ANR	11142	PtrMemberAccess	s -> out_ch_layout		11104	0					
ANR	11143	Identifier	s		11104	0					
ANR	11144	Identifier	out_ch_layout		11104	1					
ANR	11145	IdentifierDeclStatement	int num = nb_in * nb_out ;	19:4:308:335	11104	3	True				
ANR	11146	IdentifierDecl	num = nb_in * nb_out		11104	0					
ANR	11147	IdentifierDeclType	int		11104	0					
ANR	11148	Identifier	num		11104	1					
ANR	11149	AssignmentExpression	num = nb_in * nb_out		11104	2		=			
ANR	11150	Identifier	num		11104	0					
ANR	11151	MultiplicativeExpression	nb_in * nb_out		11104	1		*			
ANR	11152	Identifier	nb_in		11104	0					
ANR	11153	Identifier	nb_out		11104	1					
ANR	11154	IdentifierDeclStatement	"int i , j ;"	21:4:342:349	11104	4	True				
ANR	11155	IdentifierDecl	i		11104	0					
ANR	11156	IdentifierDeclType	int		11104	0					
ANR	11157	Identifier	i		11104	1					
ANR	11158	IdentifierDecl	j		11104	1					
ANR	11159	IdentifierDeclType	int		11104	0					
ANR	11160	Identifier	j		11104	1					
ANR	11161	ExpressionStatement	s -> mix_1_1_simd = NULL	25:4:358:380	11104	5	True				
ANR	11162	AssignmentExpression	s -> mix_1_1_simd = NULL		11104	0		=			
ANR	11163	PtrMemberAccess	s -> mix_1_1_simd		11104	0					
ANR	11164	Identifier	s		11104	0					
ANR	11165	Identifier	mix_1_1_simd		11104	1					
ANR	11166	Identifier	NULL		11104	1					
ANR	11167	ExpressionStatement	s -> mix_2_1_simd = NULL	27:4:387:409	11104	6	True				
ANR	11168	AssignmentExpression	s -> mix_2_1_simd = NULL		11104	0		=			
ANR	11169	PtrMemberAccess	s -> mix_2_1_simd		11104	0					
ANR	11170	Identifier	s		11104	0					
ANR	11171	Identifier	mix_2_1_simd		11104	1					
ANR	11172	Identifier	NULL		11104	1					
ANR	11173	IfStatement	if ( s -> midbuf . fmt == AV_SAMPLE_FMT_S16P )		11104	7					
ANR	11174	Condition	s -> midbuf . fmt == AV_SAMPLE_FMT_S16P	31:8:422:456	11104	0	True				
ANR	11175	EqualityExpression	s -> midbuf . fmt == AV_SAMPLE_FMT_S16P		11104	0		==			
ANR	11176	MemberAccess	s -> midbuf . fmt		11104	0					
ANR	11177	PtrMemberAccess	s -> midbuf		11104	0					
ANR	11178	Identifier	s		11104	0					
ANR	11179	Identifier	midbuf		11104	1					
ANR	11180	Identifier	fmt		11104	1					
ANR	11181	Identifier	AV_SAMPLE_FMT_S16P		11104	1					
ANR	11182	CompoundStatement		21:44:337:337	11104	1					
ANR	11183	IfStatement	if ( mm_flags & AV_CPU_FLAG_MMX )		11104	0					
ANR	11184	Condition	mm_flags & AV_CPU_FLAG_MMX	33:11:472:497	11104	0	True				
ANR	11185	BitAndExpression	mm_flags & AV_CPU_FLAG_MMX		11104	0		&			
ANR	11186	Identifier	mm_flags		11104	0					
ANR	11187	Identifier	AV_CPU_FLAG_MMX		11104	1					
ANR	11188	CompoundStatement		23:39:379:379	11104	1					
ANR	11189	ExpressionStatement	s -> mix_1_1_simd = ff_mix_1_1_a_int16_mmx	35:12:515:555	11104	0	True				
ANR	11190	AssignmentExpression	s -> mix_1_1_simd = ff_mix_1_1_a_int16_mmx		11104	0		=			
ANR	11191	PtrMemberAccess	s -> mix_1_1_simd		11104	0					
ANR	11192	Identifier	s		11104	0					
ANR	11193	Identifier	mix_1_1_simd		11104	1					
ANR	11194	Identifier	ff_mix_1_1_a_int16_mmx		11104	1					
ANR	11195	ExpressionStatement	s -> mix_2_1_simd = ff_mix_2_1_a_int16_mmx	37:12:570:610	11104	1	True				
ANR	11196	AssignmentExpression	s -> mix_2_1_simd = ff_mix_2_1_a_int16_mmx		11104	0		=			
ANR	11197	PtrMemberAccess	s -> mix_2_1_simd		11104	0					
ANR	11198	Identifier	s		11104	0					
ANR	11199	Identifier	mix_2_1_simd		11104	1					
ANR	11200	Identifier	ff_mix_2_1_a_int16_mmx		11104	1					
ANR	11201	IfStatement	if ( mm_flags & AV_CPU_FLAG_SSE2 )		11104	1					
ANR	11202	Condition	mm_flags & AV_CPU_FLAG_SSE2	41:11:635:661	11104	0	True				
ANR	11203	BitAndExpression	mm_flags & AV_CPU_FLAG_SSE2		11104	0		&			
ANR	11204	Identifier	mm_flags		11104	0					
ANR	11205	Identifier	AV_CPU_FLAG_SSE2		11104	1					
ANR	11206	CompoundStatement		31:40:543:543	11104	1					
ANR	11207	ExpressionStatement	s -> mix_1_1_simd = ff_mix_1_1_a_int16_sse2	43:12:679:720	11104	0	True				
ANR	11208	AssignmentExpression	s -> mix_1_1_simd = ff_mix_1_1_a_int16_sse2		11104	0		=			
ANR	11209	PtrMemberAccess	s -> mix_1_1_simd		11104	0					
ANR	11210	Identifier	s		11104	0					
ANR	11211	Identifier	mix_1_1_simd		11104	1					
ANR	11212	Identifier	ff_mix_1_1_a_int16_sse2		11104	1					
ANR	11213	ExpressionStatement	s -> mix_2_1_simd = ff_mix_2_1_a_int16_sse2	45:12:735:776	11104	1	True				
ANR	11214	AssignmentExpression	s -> mix_2_1_simd = ff_mix_2_1_a_int16_sse2		11104	0		=			
ANR	11215	PtrMemberAccess	s -> mix_2_1_simd		11104	0					
ANR	11216	Identifier	s		11104	0					
ANR	11217	Identifier	mix_2_1_simd		11104	1					
ANR	11218	Identifier	ff_mix_2_1_a_int16_sse2		11104	1					
ANR	11219	ExpressionStatement	s -> native_simd_matrix = av_mallocz ( 2 * num * sizeof ( int16_t ) )	49:8:798:859	11104	2	True				
ANR	11220	AssignmentExpression	s -> native_simd_matrix = av_mallocz ( 2 * num * sizeof ( int16_t ) )		11104	0		=			
ANR	11221	PtrMemberAccess	s -> native_simd_matrix		11104	0					
ANR	11222	Identifier	s		11104	0					
ANR	11223	Identifier	native_simd_matrix		11104	1					
ANR	11224	CallExpression	av_mallocz ( 2 * num * sizeof ( int16_t ) )		11104	1					
ANR	11225	Callee	av_mallocz		11104	0					
ANR	11226	Identifier	av_mallocz		11104	0					
ANR	11227	ArgumentList	2 * num * sizeof ( int16_t )		11104	1					
ANR	11228	Argument	2 * num * sizeof ( int16_t )		11104	0					
ANR	11229	MultiplicativeExpression	2 * num * sizeof ( int16_t )		11104	0		*			
ANR	11230	PrimaryExpression	2		11104	0					
ANR	11231	MultiplicativeExpression	num * sizeof ( int16_t )		11104	1		*			
ANR	11232	Identifier	num		11104	0					
ANR	11233	SizeofExpression	sizeof ( int16_t )		11104	1					
ANR	11234	Sizeof	sizeof		11104	0					
ANR	11235	SizeofOperand	int16_t		11104	1					
ANR	11236	ExpressionStatement	s -> native_simd_one = av_mallocz ( 2 * sizeof ( int16_t ) )	51:8:870:925	11104	3	True				
ANR	11237	AssignmentExpression	s -> native_simd_one = av_mallocz ( 2 * sizeof ( int16_t ) )		11104	0		=			
ANR	11238	PtrMemberAccess	s -> native_simd_one		11104	0					
ANR	11239	Identifier	s		11104	0					
ANR	11240	Identifier	native_simd_one		11104	1					
ANR	11241	CallExpression	av_mallocz ( 2 * sizeof ( int16_t ) )		11104	1					
ANR	11242	Callee	av_mallocz		11104	0					
ANR	11243	Identifier	av_mallocz		11104	0					
ANR	11244	ArgumentList	2 * sizeof ( int16_t )		11104	1					
ANR	11245	Argument	2 * sizeof ( int16_t )		11104	0					
ANR	11246	MultiplicativeExpression	2 * sizeof ( int16_t )		11104	0		*			
ANR	11247	PrimaryExpression	2		11104	0					
ANR	11248	SizeofExpression	sizeof ( int16_t )		11104	1					
ANR	11249	Sizeof	sizeof		11104	0					
ANR	11250	SizeofOperand	int16_t		11104	1					
ANR	11251	ForStatement	for ( i = 0 ; i < nb_out ; i ++ )		11104	4					
ANR	11252	ForInit	i = 0 ;	53:12:940:943	11104	0	True				
ANR	11253	AssignmentExpression	i = 0		11104	0		=			
ANR	11254	Identifier	i		11104	0					
ANR	11255	PrimaryExpression	0		11104	1					
ANR	11256	Condition	i < nb_out	53:17:945:952	11104	1	True				
ANR	11257	RelationalExpression	i < nb_out		11104	0		<			
ANR	11258	Identifier	i		11104	0					
ANR	11259	Identifier	nb_out		11104	1					
ANR	11260	PostIncDecOperationExpression	i ++	53:27:955:957	11104	2	True				
ANR	11261	Identifier	i		11104	0					
ANR	11262	IncDec	++		11104	1					
ANR	11263	CompoundStatement		45:12:853:863	11104	3					
ANR	11264	IdentifierDeclStatement	int sh = 0 ;	55:12:974:984	11104	0	True				
ANR	11265	IdentifierDecl	sh = 0		11104	0					
ANR	11266	IdentifierDeclType	int		11104	0					
ANR	11267	Identifier	sh		11104	1					
ANR	11268	AssignmentExpression	sh = 0		11104	2		=			
ANR	11269	Identifier	sh		11104	0					
ANR	11270	PrimaryExpression	0		11104	1					
ANR	11271	ForStatement	for ( j = 0 ; j < nb_in ; j ++ )		11104	1					
ANR	11272	ForInit	j = 0 ;	57:16:1003:1006	11104	0	True				
ANR	11273	AssignmentExpression	j = 0		11104	0		=			
ANR	11274	Identifier	j		11104	0					
ANR	11275	PrimaryExpression	0		11104	1					
ANR	11276	Condition	j < nb_in	57:21:1008:1014	11104	1	True				
ANR	11277	RelationalExpression	j < nb_in		11104	0		<			
ANR	11278	Identifier	j		11104	0					
ANR	11279	Identifier	nb_in		11104	1					
ANR	11280	PostIncDecOperationExpression	j ++	57:30:1017:1019	11104	2	True				
ANR	11281	Identifier	j		11104	0					
ANR	11282	IncDec	++		11104	1					
ANR	11283	ExpressionStatement	"sh = FFMAX ( sh , FFABS ( ( ( int * ) s -> native_matrix ) [ i * nb_in + j ] ) )"	59:16:1039:1101	11104	3	True				
ANR	11284	AssignmentExpression	"sh = FFMAX ( sh , FFABS ( ( ( int * ) s -> native_matrix ) [ i * nb_in + j ] ) )"		11104	0		=			
ANR	11285	Identifier	sh		11104	0					
ANR	11286	CallExpression	"FFMAX ( sh , FFABS ( ( ( int * ) s -> native_matrix ) [ i * nb_in + j ] ) )"		11104	1					
ANR	11287	Callee	FFMAX		11104	0					
ANR	11288	Identifier	FFMAX		11104	0					
ANR	11289	ArgumentList	sh		11104	1					
ANR	11290	Argument	sh		11104	0					
ANR	11291	Identifier	sh		11104	0					
ANR	11292	Argument	FFABS ( ( ( int * ) s -> native_matrix ) [ i * nb_in + j ] )		11104	1					
ANR	11293	CallExpression	FFABS ( ( ( int * ) s -> native_matrix ) [ i * nb_in + j ] )		11104	0					
ANR	11294	Callee	FFABS		11104	0					
ANR	11295	Identifier	FFABS		11104	0					
ANR	11296	ArgumentList	( ( int * ) s -> native_matrix ) [ i * nb_in + j ]		11104	1					
ANR	11297	Argument	( ( int * ) s -> native_matrix ) [ i * nb_in + j ]		11104	0					
ANR	11298	ArrayIndexing	( ( int * ) s -> native_matrix ) [ i * nb_in + j ]		11104	0					
ANR	11299	CastExpression	( int * ) s -> native_matrix		11104	0					
ANR	11300	CastTarget	int *		11104	0					
ANR	11301	PtrMemberAccess	s -> native_matrix		11104	1					
ANR	11302	Identifier	s		11104	0					
ANR	11303	Identifier	native_matrix		11104	1					
ANR	11304	AdditiveExpression	i * nb_in + j		11104	1		+			
ANR	11305	MultiplicativeExpression	i * nb_in		11104	0		*			
ANR	11306	Identifier	i		11104	0					
ANR	11307	Identifier	nb_in		11104	1					
ANR	11308	Identifier	j		11104	1					
ANR	11309	ExpressionStatement	"sh = FFMAX ( av_log2 ( sh ) - 14 , 0 )"	61:12:1116:1147	11104	2	True				
ANR	11310	AssignmentExpression	"sh = FFMAX ( av_log2 ( sh ) - 14 , 0 )"		11104	0		=			
ANR	11311	Identifier	sh		11104	0					
ANR	11312	CallExpression	"FFMAX ( av_log2 ( sh ) - 14 , 0 )"		11104	1					
ANR	11313	Callee	FFMAX		11104	0					
ANR	11314	Identifier	FFMAX		11104	0					
ANR	11315	ArgumentList	av_log2 ( sh ) - 14		11104	1					
ANR	11316	Argument	av_log2 ( sh ) - 14		11104	0					
ANR	11317	AdditiveExpression	av_log2 ( sh ) - 14		11104	0		-			
ANR	11318	CallExpression	av_log2 ( sh )		11104	0					
ANR	11319	Callee	av_log2		11104	0					
ANR	11320	Identifier	av_log2		11104	0					
ANR	11321	ArgumentList	sh		11104	1					
ANR	11322	Argument	sh		11104	0					
ANR	11323	Identifier	sh		11104	0					
ANR	11324	PrimaryExpression	14		11104	1					
ANR	11325	Argument	0		11104	1					
ANR	11326	PrimaryExpression	0		11104	0					
ANR	11327	ForStatement	for ( j = 0 ; j < nb_in ; j ++ )		11104	3					
ANR	11328	ForInit	j = 0 ;	63:16:1166:1169	11104	0	True				
ANR	11329	AssignmentExpression	j = 0		11104	0		=			
ANR	11330	Identifier	j		11104	0					
ANR	11331	PrimaryExpression	0		11104	1					
ANR	11332	Condition	j < nb_in	63:21:1171:1177	11104	1	True				
ANR	11333	RelationalExpression	j < nb_in		11104	0		<			
ANR	11334	Identifier	j		11104	0					
ANR	11335	Identifier	nb_in		11104	1					
ANR	11336	PostIncDecOperationExpression	j ++	63:30:1180:1182	11104	2	True				
ANR	11337	Identifier	j		11104	0					
ANR	11338	IncDec	++		11104	1					
ANR	11339	CompoundStatement		53:35:1064:1064	11104	3					
ANR	11340	ExpressionStatement	( ( int16_t * ) s -> native_simd_matrix ) [ 2 * ( i * nb_in + j ) + 1 ] = 15 - sh	65:16:1204:1268	11104	0	True				
ANR	11341	AssignmentExpression	( ( int16_t * ) s -> native_simd_matrix ) [ 2 * ( i * nb_in + j ) + 1 ] = 15 - sh		11104	0		=			
ANR	11342	ArrayIndexing	( ( int16_t * ) s -> native_simd_matrix ) [ 2 * ( i * nb_in + j ) + 1 ]		11104	0					
ANR	11343	CastExpression	( int16_t * ) s -> native_simd_matrix		11104	0					
ANR	11344	CastTarget	int16_t *		11104	0					
ANR	11345	PtrMemberAccess	s -> native_simd_matrix		11104	1					
ANR	11346	Identifier	s		11104	0					
ANR	11347	Identifier	native_simd_matrix		11104	1					
ANR	11348	AdditiveExpression	2 * ( i * nb_in + j ) + 1		11104	1		+			
ANR	11349	MultiplicativeExpression	2 * ( i * nb_in + j )		11104	0		*			
ANR	11350	PrimaryExpression	2		11104	0					
ANR	11351	AdditiveExpression	i * nb_in + j		11104	1		+			
ANR	11352	MultiplicativeExpression	i * nb_in		11104	0		*			
ANR	11353	Identifier	i		11104	0					
ANR	11354	Identifier	nb_in		11104	1					
ANR	11355	Identifier	j		11104	1					
ANR	11356	PrimaryExpression	1		11104	1					
ANR	11357	AdditiveExpression	15 - sh		11104	1		-			
ANR	11358	PrimaryExpression	15		11104	0					
ANR	11359	Identifier	sh		11104	1					
ANR	11360	ExpressionStatement	( ( int16_t * ) s -> native_simd_matrix ) [ 2 * ( i * nb_in + j ) ] = ( ( ( ( int * ) s -> native_matrix ) [ i * nb_in + j ] ) + ( 1 << sh >> 1 ) ) >> sh	67:16:1287:1425	11104	1	True				
ANR	11361	AssignmentExpression	( ( int16_t * ) s -> native_simd_matrix ) [ 2 * ( i * nb_in + j ) ] = ( ( ( ( int * ) s -> native_matrix ) [ i * nb_in + j ] ) + ( 1 << sh >> 1 ) ) >> sh		11104	0		=			
ANR	11362	ArrayIndexing	( ( int16_t * ) s -> native_simd_matrix ) [ 2 * ( i * nb_in + j ) ]		11104	0					
ANR	11363	CastExpression	( int16_t * ) s -> native_simd_matrix		11104	0					
ANR	11364	CastTarget	int16_t *		11104	0					
ANR	11365	PtrMemberAccess	s -> native_simd_matrix		11104	1					
ANR	11366	Identifier	s		11104	0					
ANR	11367	Identifier	native_simd_matrix		11104	1					
ANR	11368	MultiplicativeExpression	2 * ( i * nb_in + j )		11104	1		*			
ANR	11369	PrimaryExpression	2		11104	0					
ANR	11370	AdditiveExpression	i * nb_in + j		11104	1		+			
ANR	11371	MultiplicativeExpression	i * nb_in		11104	0		*			
ANR	11372	Identifier	i		11104	0					
ANR	11373	Identifier	nb_in		11104	1					
ANR	11374	Identifier	j		11104	1					
ANR	11375	ShiftExpression	( ( ( ( int * ) s -> native_matrix ) [ i * nb_in + j ] ) + ( 1 << sh >> 1 ) ) >> sh		11104	1		>>			
ANR	11376	AdditiveExpression	( ( ( int * ) s -> native_matrix ) [ i * nb_in + j ] ) + ( 1 << sh >> 1 )		11104	0		+			
ANR	11377	ArrayIndexing	( ( int * ) s -> native_matrix ) [ i * nb_in + j ]		11104	0					
ANR	11378	CastExpression	( int * ) s -> native_matrix		11104	0					
ANR	11379	CastTarget	int *		11104	0					
ANR	11380	PtrMemberAccess	s -> native_matrix		11104	1					
ANR	11381	Identifier	s		11104	0					
ANR	11382	Identifier	native_matrix		11104	1					
ANR	11383	AdditiveExpression	i * nb_in + j		11104	1		+			
ANR	11384	MultiplicativeExpression	i * nb_in		11104	0		*			
ANR	11385	Identifier	i		11104	0					
ANR	11386	Identifier	nb_in		11104	1					
ANR	11387	Identifier	j		11104	1					
ANR	11388	ShiftExpression	1 << sh >> 1		11104	1		<<			
ANR	11389	PrimaryExpression	1		11104	0					
ANR	11390	ShiftExpression	sh >> 1		11104	1		>>			
ANR	11391	Identifier	sh		11104	0					
ANR	11392	PrimaryExpression	1		11104	1					
ANR	11393	Identifier	sh		11104	1					
ANR	11394	ExpressionStatement	( ( int16_t * ) s -> native_simd_one ) [ 1 ] = 14	75:8:1462:1500	11104	5	True				
ANR	11395	AssignmentExpression	( ( int16_t * ) s -> native_simd_one ) [ 1 ] = 14		11104	0		=			
ANR	11396	ArrayIndexing	( ( int16_t * ) s -> native_simd_one ) [ 1 ]		11104	0					
ANR	11397	CastExpression	( int16_t * ) s -> native_simd_one		11104	0					
ANR	11398	CastTarget	int16_t *		11104	0					
ANR	11399	PtrMemberAccess	s -> native_simd_one		11104	1					
ANR	11400	Identifier	s		11104	0					
ANR	11401	Identifier	native_simd_one		11104	1					
ANR	11402	PrimaryExpression	1		11104	1					
ANR	11403	PrimaryExpression	14		11104	1					
ANR	11404	ExpressionStatement	( ( int16_t * ) s -> native_simd_one ) [ 0 ] = 16384	77:8:1511:1552	11104	6	True				
ANR	11405	AssignmentExpression	( ( int16_t * ) s -> native_simd_one ) [ 0 ] = 16384		11104	0		=			
ANR	11406	ArrayIndexing	( ( int16_t * ) s -> native_simd_one ) [ 0 ]		11104	0					
ANR	11407	CastExpression	( int16_t * ) s -> native_simd_one		11104	0					
ANR	11408	CastTarget	int16_t *		11104	0					
ANR	11409	PtrMemberAccess	s -> native_simd_one		11104	1					
ANR	11410	Identifier	s		11104	0					
ANR	11411	Identifier	native_simd_one		11104	1					
ANR	11412	PrimaryExpression	0		11104	1					
ANR	11413	PrimaryExpression	16384		11104	1					
ANR	11414	ElseStatement	else		11104	0					
ANR	11415	IfStatement	if ( s -> midbuf . fmt == AV_SAMPLE_FMT_FLTP )		11104	0					
ANR	11416	Condition	s -> midbuf . fmt == AV_SAMPLE_FMT_FLTP	79:14:1569:1603	11104	0	True				
ANR	11417	EqualityExpression	s -> midbuf . fmt == AV_SAMPLE_FMT_FLTP		11104	0		==			
ANR	11418	MemberAccess	s -> midbuf . fmt		11104	0					
ANR	11419	PtrMemberAccess	s -> midbuf		11104	0					
ANR	11420	Identifier	s		11104	0					
ANR	11421	Identifier	midbuf		11104	1					
ANR	11422	Identifier	fmt		11104	1					
ANR	11423	Identifier	AV_SAMPLE_FMT_FLTP		11104	1					
ANR	11424	CompoundStatement		69:50:1484:1484	11104	1					
ANR	11425	IfStatement	if ( mm_flags & AV_CPU_FLAG_SSE )		11104	0					
ANR	11426	Condition	mm_flags & AV_CPU_FLAG_SSE	81:11:1619:1644	11104	0	True				
ANR	11427	BitAndExpression	mm_flags & AV_CPU_FLAG_SSE		11104	0		&			
ANR	11428	Identifier	mm_flags		11104	0					
ANR	11429	Identifier	AV_CPU_FLAG_SSE		11104	1					
ANR	11430	CompoundStatement		71:39:1526:1526	11104	1					
ANR	11431	ExpressionStatement	s -> mix_1_1_simd = ff_mix_1_1_a_float_sse	83:12:1662:1702	11104	0	True				
ANR	11432	AssignmentExpression	s -> mix_1_1_simd = ff_mix_1_1_a_float_sse		11104	0		=			
ANR	11433	PtrMemberAccess	s -> mix_1_1_simd		11104	0					
ANR	11434	Identifier	s		11104	0					
ANR	11435	Identifier	mix_1_1_simd		11104	1					
ANR	11436	Identifier	ff_mix_1_1_a_float_sse		11104	1					
ANR	11437	ExpressionStatement	s -> mix_2_1_simd = ff_mix_2_1_a_float_sse	85:12:1717:1757	11104	1	True				
ANR	11438	AssignmentExpression	s -> mix_2_1_simd = ff_mix_2_1_a_float_sse		11104	0		=			
ANR	11439	PtrMemberAccess	s -> mix_2_1_simd		11104	0					
ANR	11440	Identifier	s		11104	0					
ANR	11441	Identifier	mix_2_1_simd		11104	1					
ANR	11442	Identifier	ff_mix_2_1_a_float_sse		11104	1					
ANR	11443	IfStatement	if ( HAVE_AVX_EXTERNAL && mm_flags & AV_CPU_FLAG_AVX )		11104	1					
ANR	11444	Condition	HAVE_AVX_EXTERNAL && mm_flags & AV_CPU_FLAG_AVX	89:11:1782:1828	11104	0	True				
ANR	11445	AndExpression	HAVE_AVX_EXTERNAL && mm_flags & AV_CPU_FLAG_AVX		11104	0		&&			
ANR	11446	Identifier	HAVE_AVX_EXTERNAL		11104	0					
ANR	11447	BitAndExpression	mm_flags & AV_CPU_FLAG_AVX		11104	1		&			
ANR	11448	Identifier	mm_flags		11104	0					
ANR	11449	Identifier	AV_CPU_FLAG_AVX		11104	1					
ANR	11450	CompoundStatement		79:60:1710:1710	11104	1					
ANR	11451	ExpressionStatement	s -> mix_1_1_simd = ff_mix_1_1_a_float_avx	91:12:1846:1886	11104	0	True				
ANR	11452	AssignmentExpression	s -> mix_1_1_simd = ff_mix_1_1_a_float_avx		11104	0		=			
ANR	11453	PtrMemberAccess	s -> mix_1_1_simd		11104	0					
ANR	11454	Identifier	s		11104	0					
ANR	11455	Identifier	mix_1_1_simd		11104	1					
ANR	11456	Identifier	ff_mix_1_1_a_float_avx		11104	1					
ANR	11457	ExpressionStatement	s -> mix_2_1_simd = ff_mix_2_1_a_float_avx	93:12:1901:1941	11104	1	True				
ANR	11458	AssignmentExpression	s -> mix_2_1_simd = ff_mix_2_1_a_float_avx		11104	0		=			
ANR	11459	PtrMemberAccess	s -> mix_2_1_simd		11104	0					
ANR	11460	Identifier	s		11104	0					
ANR	11461	Identifier	mix_2_1_simd		11104	1					
ANR	11462	Identifier	ff_mix_2_1_a_float_avx		11104	1					
ANR	11463	ExpressionStatement	s -> native_simd_matrix = av_mallocz ( num * sizeof ( float ) )	97:8:1963:2018	11104	2	True				
ANR	11464	AssignmentExpression	s -> native_simd_matrix = av_mallocz ( num * sizeof ( float ) )		11104	0		=			
ANR	11465	PtrMemberAccess	s -> native_simd_matrix		11104	0					
ANR	11466	Identifier	s		11104	0					
ANR	11467	Identifier	native_simd_matrix		11104	1					
ANR	11468	CallExpression	av_mallocz ( num * sizeof ( float ) )		11104	1					
ANR	11469	Callee	av_mallocz		11104	0					
ANR	11470	Identifier	av_mallocz		11104	0					
ANR	11471	ArgumentList	num * sizeof ( float )		11104	1					
ANR	11472	Argument	num * sizeof ( float )		11104	0					
ANR	11473	MultiplicativeExpression	num * sizeof ( float )		11104	0		*			
ANR	11474	Identifier	num		11104	0					
ANR	11475	SizeofExpression	sizeof ( float )		11104	1					
ANR	11476	Sizeof	sizeof		11104	0					
ANR	11477	SizeofOperand	float		11104	1					
ANR	11478	ExpressionStatement	"memcpy ( s -> native_simd_matrix , s -> native_matrix , num * sizeof ( float ) )"	99:8:2029:2097	11104	3	True				
ANR	11479	CallExpression	"memcpy ( s -> native_simd_matrix , s -> native_matrix , num * sizeof ( float ) )"		11104	0					
ANR	11480	Callee	memcpy		11104	0					
ANR	11481	Identifier	memcpy		11104	0					
ANR	11482	ArgumentList	s -> native_simd_matrix		11104	1					
ANR	11483	Argument	s -> native_simd_matrix		11104	0					
ANR	11484	PtrMemberAccess	s -> native_simd_matrix		11104	0					
ANR	11485	Identifier	s		11104	0					
ANR	11486	Identifier	native_simd_matrix		11104	1					
ANR	11487	Argument	s -> native_matrix		11104	1					
ANR	11488	PtrMemberAccess	s -> native_matrix		11104	0					
ANR	11489	Identifier	s		11104	0					
ANR	11490	Identifier	native_matrix		11104	1					
ANR	11491	Argument	num * sizeof ( float )		11104	2					
ANR	11492	MultiplicativeExpression	num * sizeof ( float )		11104	0		*			
ANR	11493	Identifier	num		11104	0					
ANR	11494	SizeofExpression	sizeof ( float )		11104	1					
ANR	11495	Sizeof	sizeof		11104	0					
ANR	11496	SizeofOperand	float		11104	1					
ANR	11497	ExpressionStatement	s -> native_simd_one = av_mallocz ( sizeof ( float ) )	101:8:2108:2154	11104	4	True				
ANR	11498	AssignmentExpression	s -> native_simd_one = av_mallocz ( sizeof ( float ) )		11104	0		=			
ANR	11499	PtrMemberAccess	s -> native_simd_one		11104	0					
ANR	11500	Identifier	s		11104	0					
ANR	11501	Identifier	native_simd_one		11104	1					
ANR	11502	CallExpression	av_mallocz ( sizeof ( float ) )		11104	1					
ANR	11503	Callee	av_mallocz		11104	0					
ANR	11504	Identifier	av_mallocz		11104	0					
ANR	11505	ArgumentList	sizeof ( float )		11104	1					
ANR	11506	Argument	sizeof ( float )		11104	0					
ANR	11507	SizeofExpression	sizeof ( float )		11104	0					
ANR	11508	Sizeof	sizeof		11104	0					
ANR	11509	SizeofOperand	float		11104	1					
ANR	11510	ExpressionStatement	"memcpy ( s -> native_simd_one , s -> native_one , sizeof ( float ) )"	103:8:2165:2221	11104	5	True				
ANR	11511	CallExpression	"memcpy ( s -> native_simd_one , s -> native_one , sizeof ( float ) )"		11104	0					
ANR	11512	Callee	memcpy		11104	0					
ANR	11513	Identifier	memcpy		11104	0					
ANR	11514	ArgumentList	s -> native_simd_one		11104	1					
ANR	11515	Argument	s -> native_simd_one		11104	0					
ANR	11516	PtrMemberAccess	s -> native_simd_one		11104	0					
ANR	11517	Identifier	s		11104	0					
ANR	11518	Identifier	native_simd_one		11104	1					
ANR	11519	Argument	s -> native_one		11104	1					
ANR	11520	PtrMemberAccess	s -> native_one		11104	0					
ANR	11521	Identifier	s		11104	0					
ANR	11522	Identifier	native_one		11104	1					
ANR	11523	Argument	sizeof ( float )		11104	2					
ANR	11524	SizeofExpression	sizeof ( float )		11104	0					
ANR	11525	Sizeof	sizeof		11104	0					
ANR	11526	SizeofOperand	float		11104	1					
ANR	11527	ReturnType	av_cold void		11104	1					
ANR	11528	Identifier	swri_rematrix_init_x86		11104	2					
ANR	11529	ParameterList	struct SwrContext * s		11104	3					
ANR	11530	Parameter	struct SwrContext * s	11:36:99:118	11104	0	True				
ANR	11531	ParameterType	struct SwrContext *		11104	0					
ANR	11532	Identifier	s		11104	1					
ANR	11533	CFGEntryNode	ENTRY		11104		True				
ANR	11534	CFGExitNode	EXIT		11104		True				
ANR	11535	Symbol	s -> native_simd_matrix		11104						
ANR	11536	Symbol	nb_out		11104						
ANR	11537	Symbol	AV_CPU_FLAG_SSE2		11104						
ANR	11538	Symbol	AV_CPU_FLAG_MMX		11104						
ANR	11539	Symbol	* nb_in		11104						
ANR	11540	Symbol	s -> native_matrix		11104						
ANR	11541	Symbol	num		11104						
ANR	11542	Symbol	s -> native_simd_one		11104						
ANR	11543	Symbol	AV_SAMPLE_FMT_FLTP		11104						
ANR	11544	Symbol	ff_mix_1_1_a_float_sse		11104						
ANR	11545	Symbol	ff_mix_2_1_a_float_avx		11104						
ANR	11546	Symbol	AV_CPU_FLAG_AVX		11104						
ANR	11547	Symbol	s -> out_ch_layout		11104						
ANR	11548	Symbol	sh		11104						
ANR	11549	Symbol	s -> midbuf . fmt		11104						
ANR	11550	Symbol	* * s		11104						
ANR	11551	Symbol	s -> native_one		11104						
ANR	11552	Symbol	ff_mix_1_1_a_int16_mmx		11104						
ANR	11553	Symbol	s -> in_ch_layout		11104						
ANR	11554	Symbol	s -> mix_1_1_simd		11104						
ANR	11555	Symbol	ff_mix_1_1_a_int16_sse2		11104						
ANR	11556	Symbol	HAVE_AVX_EXTERNAL		11104						
ANR	11557	Symbol	s -> mix_2_1_simd		11104						
ANR	11558	Symbol	NULL		11104						
ANR	11559	Symbol	* s -> native_matrix		11104						
ANR	11560	Symbol	av_mallocz		11104						
ANR	11561	Symbol	i		11104						
ANR	11562	Symbol	AV_SAMPLE_FMT_S16P		11104						
ANR	11563	Symbol	FFABS		11104						
ANR	11564	Symbol	j		11104						
ANR	11565	Symbol	ff_mix_1_1_a_float_avx		11104						
ANR	11566	Symbol	nb_in		11104						
ANR	11567	Symbol	av_get_channel_layout_nb_channels		11104						
ANR	11568	Symbol	ff_mix_2_1_a_float_sse		11104						
ANR	11569	Symbol	s		11104						
ANR	11570	Symbol	* i		11104						
ANR	11571	Symbol	AV_CPU_FLAG_SSE		11104						
ANR	11572	Symbol	s -> midbuf		11104						
ANR	11573	Symbol	ff_mix_2_1_a_int16_mmx		11104						
ANR	11574	Symbol	* j		11104						
ANR	11575	Symbol	ff_mix_2_1_a_int16_sse2		11104						
ANR	11576	Symbol	av_get_cpu_flags		11104						
ANR	11577	Symbol	* s -> native_simd_matrix		11104						
ANR	11578	Symbol	mm_flags		11104						
ANR	11579	Symbol	* s -> native_simd_one		11104						
ANR	11580	Symbol	* s		11104						
ANR	11581	Symbol	av_log2		11104						
ANR	11582	Symbol	FFMAX		11104						
