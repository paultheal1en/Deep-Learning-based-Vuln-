command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1048059	File	/home/p4ultr4n/workplace/ReVeal/raw_code/bitplane_decoding_01_1.c								
ANR	1048060	Function	bitplane_decoding	1:0:0:4637							
ANR	1048061	FunctionDef	"bitplane_decoding (uint8_t * data , int * raw_flag , VC1Context * v)"		1048060	0					
ANR	1048062	CompoundStatement		3:0:75:4637	1048060	0					
ANR	1048063	IdentifierDeclStatement	GetBitContext * gb = & v -> s . gb ;	5:4:82:110	1048060	0	True				
ANR	1048064	IdentifierDecl	* gb = & v -> s . gb		1048060	0					
ANR	1048065	IdentifierDeclType	GetBitContext *		1048060	0					
ANR	1048066	Identifier	gb		1048060	1					
ANR	1048067	AssignmentExpression	* gb = & v -> s . gb		1048060	2		=			
ANR	1048068	Identifier	gb		1048060	0					
ANR	1048069	UnaryOperationExpression	& v -> s . gb		1048060	1					
ANR	1048070	UnaryOperator	&		1048060	0					
ANR	1048071	MemberAccess	v -> s . gb		1048060	1					
ANR	1048072	PtrMemberAccess	v -> s		1048060	0					
ANR	1048073	Identifier	v		1048060	0					
ANR	1048074	Identifier	s		1048060	1					
ANR	1048075	Identifier	gb		1048060	1					
ANR	1048076	IdentifierDeclStatement	"int imode , x , y , code , offset ;"	9:4:119:148	1048060	1	True				
ANR	1048077	IdentifierDecl	imode		1048060	0					
ANR	1048078	IdentifierDeclType	int		1048060	0					
ANR	1048079	Identifier	imode		1048060	1					
ANR	1048080	IdentifierDecl	x		1048060	1					
ANR	1048081	IdentifierDeclType	int		1048060	0					
ANR	1048082	Identifier	x		1048060	1					
ANR	1048083	IdentifierDecl	y		1048060	2					
ANR	1048084	IdentifierDeclType	int		1048060	0					
ANR	1048085	Identifier	y		1048060	1					
ANR	1048086	IdentifierDecl	code		1048060	3					
ANR	1048087	IdentifierDeclType	int		1048060	0					
ANR	1048088	Identifier	code		1048060	1					
ANR	1048089	IdentifierDecl	offset		1048060	4					
ANR	1048090	IdentifierDeclType	int		1048060	0					
ANR	1048091	Identifier	offset		1048060	1					
ANR	1048092	IdentifierDeclStatement	"uint8_t invert , * planep = data ;"	11:4:155:185	1048060	2	True				
ANR	1048093	IdentifierDecl	invert		1048060	0					
ANR	1048094	IdentifierDeclType	uint8_t		1048060	0					
ANR	1048095	Identifier	invert		1048060	1					
ANR	1048096	IdentifierDecl	* planep = data		1048060	1					
ANR	1048097	IdentifierDeclType	uint8_t *		1048060	0					
ANR	1048098	Identifier	planep		1048060	1					
ANR	1048099	AssignmentExpression	* planep = data		1048060	2		=			
ANR	1048100	Identifier	data		1048060	0					
ANR	1048101	Identifier	data		1048060	1					
ANR	1048102	IdentifierDeclStatement	"int width , height , stride ;"	13:4:192:217	1048060	3	True				
ANR	1048103	IdentifierDecl	width		1048060	0					
ANR	1048104	IdentifierDeclType	int		1048060	0					
ANR	1048105	Identifier	width		1048060	1					
ANR	1048106	IdentifierDecl	height		1048060	1					
ANR	1048107	IdentifierDeclType	int		1048060	0					
ANR	1048108	Identifier	height		1048060	1					
ANR	1048109	IdentifierDecl	stride		1048060	2					
ANR	1048110	IdentifierDeclType	int		1048060	0					
ANR	1048111	Identifier	stride		1048060	1					
ANR	1048112	ExpressionStatement	width = v -> s . mb_width	17:4:226:248	1048060	4	True				
ANR	1048113	AssignmentExpression	width = v -> s . mb_width		1048060	0		=			
ANR	1048114	Identifier	width		1048060	0					
ANR	1048115	MemberAccess	v -> s . mb_width		1048060	1					
ANR	1048116	PtrMemberAccess	v -> s		1048060	0					
ANR	1048117	Identifier	v		1048060	0					
ANR	1048118	Identifier	s		1048060	1					
ANR	1048119	Identifier	mb_width		1048060	1					
ANR	1048120	ExpressionStatement	height = v -> s . mb_height >> v -> field_mode	19:4:255:295	1048060	5	True				
ANR	1048121	AssignmentExpression	height = v -> s . mb_height >> v -> field_mode		1048060	0		=			
ANR	1048122	Identifier	height		1048060	0					
ANR	1048123	ShiftExpression	v -> s . mb_height >> v -> field_mode		1048060	1		>>			
ANR	1048124	MemberAccess	v -> s . mb_height		1048060	0					
ANR	1048125	PtrMemberAccess	v -> s		1048060	0					
ANR	1048126	Identifier	v		1048060	0					
ANR	1048127	Identifier	s		1048060	1					
ANR	1048128	Identifier	mb_height		1048060	1					
ANR	1048129	PtrMemberAccess	v -> field_mode		1048060	1					
ANR	1048130	Identifier	v		1048060	0					
ANR	1048131	Identifier	field_mode		1048060	1					
ANR	1048132	ExpressionStatement	stride = v -> s . mb_stride	21:4:302:325	1048060	6	True				
ANR	1048133	AssignmentExpression	stride = v -> s . mb_stride		1048060	0		=			
ANR	1048134	Identifier	stride		1048060	0					
ANR	1048135	MemberAccess	v -> s . mb_stride		1048060	1					
ANR	1048136	PtrMemberAccess	v -> s		1048060	0					
ANR	1048137	Identifier	v		1048060	0					
ANR	1048138	Identifier	s		1048060	1					
ANR	1048139	Identifier	mb_stride		1048060	1					
ANR	1048140	ExpressionStatement	invert = get_bits1 ( gb )	23:4:332:354	1048060	7	True				
ANR	1048141	AssignmentExpression	invert = get_bits1 ( gb )		1048060	0		=			
ANR	1048142	Identifier	invert		1048060	0					
ANR	1048143	CallExpression	get_bits1 ( gb )		1048060	1					
ANR	1048144	Callee	get_bits1		1048060	0					
ANR	1048145	Identifier	get_bits1		1048060	0					
ANR	1048146	ArgumentList	gb		1048060	1					
ANR	1048147	Argument	gb		1048060	0					
ANR	1048148	Identifier	gb		1048060	0					
ANR	1048149	ExpressionStatement	"imode = get_vlc2 ( gb , ff_vc1_imode_vlc . table , VC1_IMODE_VLC_BITS , 1 )"	25:4:361:428	1048060	8	True				
ANR	1048150	AssignmentExpression	"imode = get_vlc2 ( gb , ff_vc1_imode_vlc . table , VC1_IMODE_VLC_BITS , 1 )"		1048060	0		=			
ANR	1048151	Identifier	imode		1048060	0					
ANR	1048152	CallExpression	"get_vlc2 ( gb , ff_vc1_imode_vlc . table , VC1_IMODE_VLC_BITS , 1 )"		1048060	1					
ANR	1048153	Callee	get_vlc2		1048060	0					
ANR	1048154	Identifier	get_vlc2		1048060	0					
ANR	1048155	ArgumentList	gb		1048060	1					
ANR	1048156	Argument	gb		1048060	0					
ANR	1048157	Identifier	gb		1048060	0					
ANR	1048158	Argument	ff_vc1_imode_vlc . table		1048060	1					
ANR	1048159	MemberAccess	ff_vc1_imode_vlc . table		1048060	0					
ANR	1048160	Identifier	ff_vc1_imode_vlc		1048060	0					
ANR	1048161	Identifier	table		1048060	1					
ANR	1048162	Argument	VC1_IMODE_VLC_BITS		1048060	2					
ANR	1048163	Identifier	VC1_IMODE_VLC_BITS		1048060	0					
ANR	1048164	Argument	1		1048060	3					
ANR	1048165	PrimaryExpression	1		1048060	0					
ANR	1048166	ExpressionStatement	* raw_flag = 0	29:4:437:450	1048060	9	True				
ANR	1048167	AssignmentExpression	* raw_flag = 0		1048060	0		=			
ANR	1048168	UnaryOperationExpression	* raw_flag		1048060	0					
ANR	1048169	UnaryOperator	*		1048060	0					
ANR	1048170	Identifier	raw_flag		1048060	1					
ANR	1048171	PrimaryExpression	0		1048060	1					
ANR	1048172	SwitchStatement	switch ( imode )		1048060	10					
ANR	1048173	Condition	imode	31:12:465:469	1048060	0	True				
ANR	1048174	Identifier	imode		1048060	0					
ANR	1048175	CompoundStatement		29:19:396:396	1048060	1					
ANR	1048176	Label	case IMODE_RAW :	33:4:479:493	1048060	0	True				
ANR	1048177	Identifier	IMODE_RAW		1048060	0					
ANR	1048178	ExpressionStatement	* raw_flag = 1	37:8:583:596	1048060	1	True				
ANR	1048179	AssignmentExpression	* raw_flag = 1		1048060	0		=			
ANR	1048180	UnaryOperationExpression	* raw_flag		1048060	0					
ANR	1048181	UnaryOperator	*		1048060	0					
ANR	1048182	Identifier	raw_flag		1048060	1					
ANR	1048183	PrimaryExpression	1		1048060	1					
ANR	1048184	ReturnStatement	return invert ;	39:8:624:637	1048060	2	True				
ANR	1048185	Identifier	invert		1048060	0					
ANR	1048186	Label	case IMODE_DIFF2 :	41:4:644:660	1048060	3	True				
ANR	1048187	Identifier	IMODE_DIFF2		1048060	0					
ANR	1048188	Label	case IMODE_NORM2 :	43:4:667:683	1048060	4	True				
ANR	1048189	Identifier	IMODE_NORM2		1048060	0					
ANR	1048190	IfStatement	if ( ( height * width ) & 1 )		1048060	5					
ANR	1048191	Condition	( height * width ) & 1	45:12:698:717	1048060	0	True				
ANR	1048192	BitAndExpression	( height * width ) & 1		1048060	0		&			
ANR	1048193	MultiplicativeExpression	height * width		1048060	0		*			
ANR	1048194	Identifier	height		1048060	0					
ANR	1048195	Identifier	width		1048060	1					
ANR	1048196	PrimaryExpression	1		1048060	1					
ANR	1048197	CompoundStatement		43:34:644:644	1048060	1					
ANR	1048198	ExpressionStatement	* planep ++ = get_bits1 ( gb )	47:12:735:760	1048060	0	True				
ANR	1048199	AssignmentExpression	* planep ++ = get_bits1 ( gb )		1048060	0		=			
ANR	1048200	UnaryOperationExpression	* planep ++		1048060	0					
ANR	1048201	UnaryOperator	*		1048060	0					
ANR	1048202	PostIncDecOperationExpression	planep ++		1048060	1					
ANR	1048203	Identifier	planep		1048060	0					
ANR	1048204	IncDec	++		1048060	1					
ANR	1048205	CallExpression	get_bits1 ( gb )		1048060	1					
ANR	1048206	Callee	get_bits1		1048060	0					
ANR	1048207	Identifier	get_bits1		1048060	0					
ANR	1048208	ArgumentList	gb		1048060	1					
ANR	1048209	Argument	gb		1048060	0					
ANR	1048210	Identifier	gb		1048060	0					
ANR	1048211	ExpressionStatement	offset = 1	49:12:775:788	1048060	1	True				
ANR	1048212	AssignmentExpression	offset = 1		1048060	0		=			
ANR	1048213	Identifier	offset		1048060	0					
ANR	1048214	PrimaryExpression	1		1048060	1					
ANR	1048215	ElseStatement	else		1048060	0					
ANR	1048216	ExpressionStatement	offset = 0	55:12:828:838	1048060	0	True				
ANR	1048217	AssignmentExpression	offset = 0		1048060	0		=			
ANR	1048218	Identifier	offset		1048060	0					
ANR	1048219	PrimaryExpression	0		1048060	1					
ANR	1048220	ForStatement	for ( y = offset ; y < height * width ; y += 2 )		1048060	6					
ANR	1048221	ForInit	y = offset ;	59:13:899:909	1048060	0	True				
ANR	1048222	AssignmentExpression	y = offset		1048060	0		=			
ANR	1048223	Identifier	y		1048060	0					
ANR	1048224	Identifier	offset		1048060	1					
ANR	1048225	Condition	y < height * width	59:25:911:928	1048060	1	True				
ANR	1048226	RelationalExpression	y < height * width		1048060	0		<			
ANR	1048227	Identifier	y		1048060	0					
ANR	1048228	MultiplicativeExpression	height * width		1048060	1		*			
ANR	1048229	Identifier	height		1048060	0					
ANR	1048230	Identifier	width		1048060	1					
ANR	1048231	AssignmentExpression	y += 2	59:45:931:936	1048060	2	True	+=			
ANR	1048232	Identifier	y		1048060	0					
ANR	1048233	PrimaryExpression	2		1048060	1					
ANR	1048234	CompoundStatement		57:53:863:863	1048060	3					
ANR	1048235	ExpressionStatement	"code = get_vlc2 ( gb , ff_vc1_norm2_vlc . table , VC1_NORM2_VLC_BITS , 1 )"	61:12:954:1020	1048060	0	True				
ANR	1048236	AssignmentExpression	"code = get_vlc2 ( gb , ff_vc1_norm2_vlc . table , VC1_NORM2_VLC_BITS , 1 )"		1048060	0		=			
ANR	1048237	Identifier	code		1048060	0					
ANR	1048238	CallExpression	"get_vlc2 ( gb , ff_vc1_norm2_vlc . table , VC1_NORM2_VLC_BITS , 1 )"		1048060	1					
ANR	1048239	Callee	get_vlc2		1048060	0					
ANR	1048240	Identifier	get_vlc2		1048060	0					
ANR	1048241	ArgumentList	gb		1048060	1					
ANR	1048242	Argument	gb		1048060	0					
ANR	1048243	Identifier	gb		1048060	0					
ANR	1048244	Argument	ff_vc1_norm2_vlc . table		1048060	1					
ANR	1048245	MemberAccess	ff_vc1_norm2_vlc . table		1048060	0					
ANR	1048246	Identifier	ff_vc1_norm2_vlc		1048060	0					
ANR	1048247	Identifier	table		1048060	1					
ANR	1048248	Argument	VC1_NORM2_VLC_BITS		1048060	2					
ANR	1048249	Identifier	VC1_NORM2_VLC_BITS		1048060	0					
ANR	1048250	Argument	1		1048060	3					
ANR	1048251	PrimaryExpression	1		1048060	0					
ANR	1048252	ExpressionStatement	* planep ++ = code & 1	63:12:1035:1055	1048060	1	True				
ANR	1048253	AssignmentExpression	* planep ++ = code & 1		1048060	0		=			
ANR	1048254	UnaryOperationExpression	* planep ++		1048060	0					
ANR	1048255	UnaryOperator	*		1048060	0					
ANR	1048256	PostIncDecOperationExpression	planep ++		1048060	1					
ANR	1048257	Identifier	planep		1048060	0					
ANR	1048258	IncDec	++		1048060	1					
ANR	1048259	BitAndExpression	code & 1		1048060	1		&			
ANR	1048260	Identifier	code		1048060	0					
ANR	1048261	PrimaryExpression	1		1048060	1					
ANR	1048262	ExpressionStatement	offset ++	65:12:1070:1078	1048060	2	True				
ANR	1048263	PostIncDecOperationExpression	offset ++		1048060	0					
ANR	1048264	Identifier	offset		1048060	0					
ANR	1048265	IncDec	++		1048060	1					
ANR	1048266	IfStatement	if ( offset == width )		1048060	3					
ANR	1048267	Condition	offset == width	67:16:1097:1111	1048060	0	True				
ANR	1048268	EqualityExpression	offset == width		1048060	0		==			
ANR	1048269	Identifier	offset		1048060	0					
ANR	1048270	Identifier	width		1048060	1					
ANR	1048271	CompoundStatement		65:33:1038:1038	1048060	1					
ANR	1048272	ExpressionStatement	offset = 0	69:16:1133:1144	1048060	0	True				
ANR	1048273	AssignmentExpression	offset = 0		1048060	0		=			
ANR	1048274	Identifier	offset		1048060	0					
ANR	1048275	PrimaryExpression	0		1048060	1					
ANR	1048276	ExpressionStatement	planep += stride - width	71:16:1163:1187	1048060	1	True				
ANR	1048277	AssignmentExpression	planep += stride - width		1048060	0		+=			
ANR	1048278	Identifier	planep		1048060	0					
ANR	1048279	AdditiveExpression	stride - width		1048060	1		-			
ANR	1048280	Identifier	stride		1048060	0					
ANR	1048281	Identifier	width		1048060	1					
ANR	1048282	ExpressionStatement	* planep ++ = code >> 1	75:12:1217:1238	1048060	4	True				
ANR	1048283	AssignmentExpression	* planep ++ = code >> 1		1048060	0		=			
ANR	1048284	UnaryOperationExpression	* planep ++		1048060	0					
ANR	1048285	UnaryOperator	*		1048060	0					
ANR	1048286	PostIncDecOperationExpression	planep ++		1048060	1					
ANR	1048287	Identifier	planep		1048060	0					
ANR	1048288	IncDec	++		1048060	1					
ANR	1048289	ShiftExpression	code >> 1		1048060	1		>>			
ANR	1048290	Identifier	code		1048060	0					
ANR	1048291	PrimaryExpression	1		1048060	1					
ANR	1048292	ExpressionStatement	offset ++	77:12:1253:1261	1048060	5	True				
ANR	1048293	PostIncDecOperationExpression	offset ++		1048060	0					
ANR	1048294	Identifier	offset		1048060	0					
ANR	1048295	IncDec	++		1048060	1					
ANR	1048296	IfStatement	if ( offset == width )		1048060	6					
ANR	1048297	Condition	offset == width	79:16:1280:1294	1048060	0	True				
ANR	1048298	EqualityExpression	offset == width		1048060	0		==			
ANR	1048299	Identifier	offset		1048060	0					
ANR	1048300	Identifier	width		1048060	1					
ANR	1048301	CompoundStatement		77:33:1221:1221	1048060	1					
ANR	1048302	ExpressionStatement	offset = 0	81:16:1316:1327	1048060	0	True				
ANR	1048303	AssignmentExpression	offset = 0		1048060	0		=			
ANR	1048304	Identifier	offset		1048060	0					
ANR	1048305	PrimaryExpression	0		1048060	1					
ANR	1048306	ExpressionStatement	planep += stride - width	83:16:1346:1370	1048060	1	True				
ANR	1048307	AssignmentExpression	planep += stride - width		1048060	0		+=			
ANR	1048308	Identifier	planep		1048060	0					
ANR	1048309	AdditiveExpression	stride - width		1048060	1		-			
ANR	1048310	Identifier	stride		1048060	0					
ANR	1048311	Identifier	width		1048060	1					
ANR	1048312	BreakStatement	break ;	89:8:1407:1412	1048060	7	True				
ANR	1048313	Label	case IMODE_DIFF6 :	91:4:1419:1435	1048060	8	True				
ANR	1048314	Identifier	IMODE_DIFF6		1048060	0					
ANR	1048315	Label	case IMODE_NORM6 :	93:4:1442:1458	1048060	9	True				
ANR	1048316	Identifier	IMODE_NORM6		1048060	0					
ANR	1048317	IfStatement	if ( ! ( height % 3 ) && ( width % 3 ) )		1048060	10					
ANR	1048318	Condition	! ( height % 3 ) && ( width % 3 )	95:12:1473:1500	1048060	0	True				
ANR	1048319	AndExpression	! ( height % 3 ) && ( width % 3 )		1048060	0		&&			
ANR	1048320	UnaryOperationExpression	! ( height % 3 )		1048060	0					
ANR	1048321	UnaryOperator	!		1048060	0					
ANR	1048322	MultiplicativeExpression	height % 3		1048060	1		%			
ANR	1048323	Identifier	height		1048060	0					
ANR	1048324	PrimaryExpression	3		1048060	1					
ANR	1048325	MultiplicativeExpression	width % 3		1048060	1		%			
ANR	1048326	Identifier	width		1048060	0					
ANR	1048327	PrimaryExpression	3		1048060	1					
ANR	1048328	CompoundStatement		93:42:1427:1427	1048060	1					
ANR	1048329	ForStatement	for ( y = 0 ; y < height ; y += 3 )		1048060	0					
ANR	1048330	ForInit	y = 0 ;	97:17:1543:1548	1048060	0	True				
ANR	1048331	AssignmentExpression	y = 0		1048060	0		=			
ANR	1048332	Identifier	y		1048060	0					
ANR	1048333	PrimaryExpression	0		1048060	1					
ANR	1048334	Condition	y < height	97:24:1550:1559	1048060	1	True				
ANR	1048335	RelationalExpression	y < height		1048060	0		<			
ANR	1048336	Identifier	y		1048060	0					
ANR	1048337	Identifier	height		1048060	1					
ANR	1048338	AssignmentExpression	y += 3	97:36:1562:1567	1048060	2	True	+=			
ANR	1048339	Identifier	y		1048060	0					
ANR	1048340	PrimaryExpression	3		1048060	1					
ANR	1048341	CompoundStatement		95:44:1494:1494	1048060	3					
ANR	1048342	ForStatement	for ( x = width & 1 ; x < width ; x += 2 )		1048060	0					
ANR	1048343	ForInit	x = width & 1 ;	99:21:1594:1607	1048060	0	True				
ANR	1048344	AssignmentExpression	x = width & 1		1048060	0		=			
ANR	1048345	Identifier	x		1048060	0					
ANR	1048346	BitAndExpression	width & 1		1048060	1		&			
ANR	1048347	Identifier	width		1048060	0					
ANR	1048348	PrimaryExpression	1		1048060	1					
ANR	1048349	Condition	x < width	99:36:1609:1617	1048060	1	True				
ANR	1048350	RelationalExpression	x < width		1048060	0		<			
ANR	1048351	Identifier	x		1048060	0					
ANR	1048352	Identifier	width		1048060	1					
ANR	1048353	AssignmentExpression	x += 2	99:47:1620:1625	1048060	2	True	+=			
ANR	1048354	Identifier	x		1048060	0					
ANR	1048355	PrimaryExpression	2		1048060	1					
ANR	1048356	CompoundStatement		97:55:1552:1552	1048060	3					
ANR	1048357	ExpressionStatement	"code = get_vlc2 ( gb , ff_vc1_norm6_vlc . table , VC1_NORM6_VLC_BITS , 2 )"	101:20:1651:1717	1048060	0	True				
ANR	1048358	AssignmentExpression	"code = get_vlc2 ( gb , ff_vc1_norm6_vlc . table , VC1_NORM6_VLC_BITS , 2 )"		1048060	0		=			
ANR	1048359	Identifier	code		1048060	0					
ANR	1048360	CallExpression	"get_vlc2 ( gb , ff_vc1_norm6_vlc . table , VC1_NORM6_VLC_BITS , 2 )"		1048060	1					
ANR	1048361	Callee	get_vlc2		1048060	0					
ANR	1048362	Identifier	get_vlc2		1048060	0					
ANR	1048363	ArgumentList	gb		1048060	1					
ANR	1048364	Argument	gb		1048060	0					
ANR	1048365	Identifier	gb		1048060	0					
ANR	1048366	Argument	ff_vc1_norm6_vlc . table		1048060	1					
ANR	1048367	MemberAccess	ff_vc1_norm6_vlc . table		1048060	0					
ANR	1048368	Identifier	ff_vc1_norm6_vlc		1048060	0					
ANR	1048369	Identifier	table		1048060	1					
ANR	1048370	Argument	VC1_NORM6_VLC_BITS		1048060	2					
ANR	1048371	Identifier	VC1_NORM6_VLC_BITS		1048060	0					
ANR	1048372	Argument	2		1048060	3					
ANR	1048373	PrimaryExpression	2		1048060	0					
ANR	1048374	IfStatement	if ( code < 0 )		1048060	1					
ANR	1048375	Condition	code < 0	103:24:1744:1751	1048060	0	True				
ANR	1048376	RelationalExpression	code < 0		1048060	0		<			
ANR	1048377	Identifier	code		1048060	0					
ANR	1048378	PrimaryExpression	0		1048060	1					
ANR	1048379	CompoundStatement		101:34:1678:1678	1048060	1					
ANR	1048380	ExpressionStatement	"av_log ( v -> s . avctx , AV_LOG_DEBUG , ""invalid NORM-6 VLC\\n"" )"	105:24:1781:1837	1048060	0	True				
ANR	1048381	CallExpression	"av_log ( v -> s . avctx , AV_LOG_DEBUG , ""invalid NORM-6 VLC\\n"" )"		1048060	0					
ANR	1048382	Callee	av_log		1048060	0					
ANR	1048383	Identifier	av_log		1048060	0					
ANR	1048384	ArgumentList	v -> s . avctx		1048060	1					
ANR	1048385	Argument	v -> s . avctx		1048060	0					
ANR	1048386	MemberAccess	v -> s . avctx		1048060	0					
ANR	1048387	PtrMemberAccess	v -> s		1048060	0					
ANR	1048388	Identifier	v		1048060	0					
ANR	1048389	Identifier	s		1048060	1					
ANR	1048390	Identifier	avctx		1048060	1					
ANR	1048391	Argument	AV_LOG_DEBUG		1048060	1					
ANR	1048392	Identifier	AV_LOG_DEBUG		1048060	0					
ANR	1048393	Argument	"""invalid NORM-6 VLC\\n"""		1048060	2					
ANR	1048394	PrimaryExpression	"""invalid NORM-6 VLC\\n"""		1048060	0					
ANR	1048395	ReturnStatement	return - 1 ;	107:24:1864:1873	1048060	1	True				
ANR	1048396	UnaryOperationExpression	- 1		1048060	0					
ANR	1048397	UnaryOperator	-		1048060	0					
ANR	1048398	PrimaryExpression	1		1048060	1					
ANR	1048399	ExpressionStatement	planep [ x + 0 ] = ( code >> 0 ) & 1	111:20:1919:1963	1048060	2	True				
ANR	1048400	AssignmentExpression	planep [ x + 0 ] = ( code >> 0 ) & 1		1048060	0		=			
ANR	1048401	ArrayIndexing	planep [ x + 0 ]		1048060	0					
ANR	1048402	Identifier	planep		1048060	0					
ANR	1048403	AdditiveExpression	x + 0		1048060	1		+			
ANR	1048404	Identifier	x		1048060	0					
ANR	1048405	PrimaryExpression	0		1048060	1					
ANR	1048406	BitAndExpression	( code >> 0 ) & 1		1048060	1		&			
ANR	1048407	ShiftExpression	code >> 0		1048060	0		>>			
ANR	1048408	Identifier	code		1048060	0					
ANR	1048409	PrimaryExpression	0		1048060	1					
ANR	1048410	PrimaryExpression	1		1048060	1					
ANR	1048411	ExpressionStatement	planep [ x + 1 ] = ( code >> 1 ) & 1	113:20:1986:2030	1048060	3	True				
ANR	1048412	AssignmentExpression	planep [ x + 1 ] = ( code >> 1 ) & 1		1048060	0		=			
ANR	1048413	ArrayIndexing	planep [ x + 1 ]		1048060	0					
ANR	1048414	Identifier	planep		1048060	0					
ANR	1048415	AdditiveExpression	x + 1		1048060	1		+			
ANR	1048416	Identifier	x		1048060	0					
ANR	1048417	PrimaryExpression	1		1048060	1					
ANR	1048418	BitAndExpression	( code >> 1 ) & 1		1048060	1		&			
ANR	1048419	ShiftExpression	code >> 1		1048060	0		>>			
ANR	1048420	Identifier	code		1048060	0					
ANR	1048421	PrimaryExpression	1		1048060	1					
ANR	1048422	PrimaryExpression	1		1048060	1					
ANR	1048423	ExpressionStatement	planep [ x + 0 + stride ] = ( code >> 2 ) & 1	115:20:2053:2097	1048060	4	True				
ANR	1048424	AssignmentExpression	planep [ x + 0 + stride ] = ( code >> 2 ) & 1		1048060	0		=			
ANR	1048425	ArrayIndexing	planep [ x + 0 + stride ]		1048060	0					
ANR	1048426	Identifier	planep		1048060	0					
ANR	1048427	AdditiveExpression	x + 0 + stride		1048060	1		+			
ANR	1048428	Identifier	x		1048060	0					
ANR	1048429	AdditiveExpression	0 + stride		1048060	1		+			
ANR	1048430	PrimaryExpression	0		1048060	0					
ANR	1048431	Identifier	stride		1048060	1					
ANR	1048432	BitAndExpression	( code >> 2 ) & 1		1048060	1		&			
ANR	1048433	ShiftExpression	code >> 2		1048060	0		>>			
ANR	1048434	Identifier	code		1048060	0					
ANR	1048435	PrimaryExpression	2		1048060	1					
ANR	1048436	PrimaryExpression	1		1048060	1					
ANR	1048437	ExpressionStatement	planep [ x + 1 + stride ] = ( code >> 3 ) & 1	117:20:2120:2164	1048060	5	True				
ANR	1048438	AssignmentExpression	planep [ x + 1 + stride ] = ( code >> 3 ) & 1		1048060	0		=			
ANR	1048439	ArrayIndexing	planep [ x + 1 + stride ]		1048060	0					
ANR	1048440	Identifier	planep		1048060	0					
ANR	1048441	AdditiveExpression	x + 1 + stride		1048060	1		+			
ANR	1048442	Identifier	x		1048060	0					
ANR	1048443	AdditiveExpression	1 + stride		1048060	1		+			
ANR	1048444	PrimaryExpression	1		1048060	0					
ANR	1048445	Identifier	stride		1048060	1					
ANR	1048446	BitAndExpression	( code >> 3 ) & 1		1048060	1		&			
ANR	1048447	ShiftExpression	code >> 3		1048060	0		>>			
ANR	1048448	Identifier	code		1048060	0					
ANR	1048449	PrimaryExpression	3		1048060	1					
ANR	1048450	PrimaryExpression	1		1048060	1					
ANR	1048451	ExpressionStatement	planep [ x + 0 + stride * 2 ] = ( code >> 4 ) & 1	119:20:2187:2231	1048060	6	True				
ANR	1048452	AssignmentExpression	planep [ x + 0 + stride * 2 ] = ( code >> 4 ) & 1		1048060	0		=			
ANR	1048453	ArrayIndexing	planep [ x + 0 + stride * 2 ]		1048060	0					
ANR	1048454	Identifier	planep		1048060	0					
ANR	1048455	AdditiveExpression	x + 0 + stride * 2		1048060	1		+			
ANR	1048456	Identifier	x		1048060	0					
ANR	1048457	AdditiveExpression	0 + stride * 2		1048060	1		+			
ANR	1048458	PrimaryExpression	0		1048060	0					
ANR	1048459	MultiplicativeExpression	stride * 2		1048060	1		*			
ANR	1048460	Identifier	stride		1048060	0					
ANR	1048461	PrimaryExpression	2		1048060	1					
ANR	1048462	BitAndExpression	( code >> 4 ) & 1		1048060	1		&			
ANR	1048463	ShiftExpression	code >> 4		1048060	0		>>			
ANR	1048464	Identifier	code		1048060	0					
ANR	1048465	PrimaryExpression	4		1048060	1					
ANR	1048466	PrimaryExpression	1		1048060	1					
ANR	1048467	ExpressionStatement	planep [ x + 1 + stride * 2 ] = ( code >> 5 ) & 1	121:20:2254:2298	1048060	7	True				
ANR	1048468	AssignmentExpression	planep [ x + 1 + stride * 2 ] = ( code >> 5 ) & 1		1048060	0		=			
ANR	1048469	ArrayIndexing	planep [ x + 1 + stride * 2 ]		1048060	0					
ANR	1048470	Identifier	planep		1048060	0					
ANR	1048471	AdditiveExpression	x + 1 + stride * 2		1048060	1		+			
ANR	1048472	Identifier	x		1048060	0					
ANR	1048473	AdditiveExpression	1 + stride * 2		1048060	1		+			
ANR	1048474	PrimaryExpression	1		1048060	0					
ANR	1048475	MultiplicativeExpression	stride * 2		1048060	1		*			
ANR	1048476	Identifier	stride		1048060	0					
ANR	1048477	PrimaryExpression	2		1048060	1					
ANR	1048478	BitAndExpression	( code >> 5 ) & 1		1048060	1		&			
ANR	1048479	ShiftExpression	code >> 5		1048060	0		>>			
ANR	1048480	Identifier	code		1048060	0					
ANR	1048481	PrimaryExpression	5		1048060	1					
ANR	1048482	PrimaryExpression	1		1048060	1					
ANR	1048483	ExpressionStatement	planep += stride * 3	125:16:2336:2356	1048060	1	True				
ANR	1048484	AssignmentExpression	planep += stride * 3		1048060	0		+=			
ANR	1048485	Identifier	planep		1048060	0					
ANR	1048486	MultiplicativeExpression	stride * 3		1048060	1		*			
ANR	1048487	Identifier	stride		1048060	0					
ANR	1048488	PrimaryExpression	3		1048060	1					
ANR	1048489	IfStatement	if ( width & 1 )		1048060	1					
ANR	1048490	Condition	width & 1	129:16:2390:2398	1048060	0	True				
ANR	1048491	BitAndExpression	width & 1		1048060	0		&			
ANR	1048492	Identifier	width		1048060	0					
ANR	1048493	PrimaryExpression	1		1048060	1					
ANR	1048494	ExpressionStatement	"decode_colskip ( data , 1 , height , stride , & v -> s . gb )"	131:16:2418:2467	1048060	1	True				
ANR	1048495	CallExpression	"decode_colskip ( data , 1 , height , stride , & v -> s . gb )"		1048060	0					
ANR	1048496	Callee	decode_colskip		1048060	0					
ANR	1048497	Identifier	decode_colskip		1048060	0					
ANR	1048498	ArgumentList	data		1048060	1					
ANR	1048499	Argument	data		1048060	0					
ANR	1048500	Identifier	data		1048060	0					
ANR	1048501	Argument	1		1048060	1					
ANR	1048502	PrimaryExpression	1		1048060	0					
ANR	1048503	Argument	height		1048060	2					
ANR	1048504	Identifier	height		1048060	0					
ANR	1048505	Argument	stride		1048060	3					
ANR	1048506	Identifier	stride		1048060	0					
ANR	1048507	Argument	& v -> s . gb		1048060	4					
ANR	1048508	UnaryOperationExpression	& v -> s . gb		1048060	0					
ANR	1048509	UnaryOperator	&		1048060	0					
ANR	1048510	MemberAccess	v -> s . gb		1048060	1					
ANR	1048511	PtrMemberAccess	v -> s		1048060	0					
ANR	1048512	Identifier	v		1048060	0					
ANR	1048513	Identifier	s		1048060	1					
ANR	1048514	Identifier	gb		1048060	1					
ANR	1048515	ElseStatement	else		1048060	0					
ANR	1048516	CompoundStatement		131:15:2409:2409	1048060	0					
ANR	1048517	ExpressionStatement	planep += ( height & 1 ) * stride	135:12:2507:2538	1048060	0	True				
ANR	1048518	AssignmentExpression	planep += ( height & 1 ) * stride		1048060	0		+=			
ANR	1048519	Identifier	planep		1048060	0					
ANR	1048520	MultiplicativeExpression	( height & 1 ) * stride		1048060	1		*			
ANR	1048521	BitAndExpression	height & 1		1048060	0		&			
ANR	1048522	Identifier	height		1048060	0					
ANR	1048523	PrimaryExpression	1		1048060	1					
ANR	1048524	Identifier	stride		1048060	1					
ANR	1048525	ForStatement	for ( y = height & 1 ; y < height ; y += 2 )		1048060	1					
ANR	1048526	ForInit	y = height & 1 ;	137:17:2558:2572	1048060	0	True				
ANR	1048527	AssignmentExpression	y = height & 1		1048060	0		=			
ANR	1048528	Identifier	y		1048060	0					
ANR	1048529	BitAndExpression	height & 1		1048060	1		&			
ANR	1048530	Identifier	height		1048060	0					
ANR	1048531	PrimaryExpression	1		1048060	1					
ANR	1048532	Condition	y < height	137:33:2574:2583	1048060	1	True				
ANR	1048533	RelationalExpression	y < height		1048060	0		<			
ANR	1048534	Identifier	y		1048060	0					
ANR	1048535	Identifier	height		1048060	1					
ANR	1048536	AssignmentExpression	y += 2	137:45:2586:2591	1048060	2	True	+=			
ANR	1048537	Identifier	y		1048060	0					
ANR	1048538	PrimaryExpression	2		1048060	1					
ANR	1048539	CompoundStatement		135:53:2518:2518	1048060	3					
ANR	1048540	ForStatement	for ( x = width % 3 ; x < width ; x += 3 )		1048060	0					
ANR	1048541	ForInit	x = width % 3 ;	139:21:2618:2631	1048060	0	True				
ANR	1048542	AssignmentExpression	x = width % 3		1048060	0		=			
ANR	1048543	Identifier	x		1048060	0					
ANR	1048544	MultiplicativeExpression	width % 3		1048060	1		%			
ANR	1048545	Identifier	width		1048060	0					
ANR	1048546	PrimaryExpression	3		1048060	1					
ANR	1048547	Condition	x < width	139:36:2633:2641	1048060	1	True				
ANR	1048548	RelationalExpression	x < width		1048060	0		<			
ANR	1048549	Identifier	x		1048060	0					
ANR	1048550	Identifier	width		1048060	1					
ANR	1048551	AssignmentExpression	x += 3	139:47:2644:2649	1048060	2	True	+=			
ANR	1048552	Identifier	x		1048060	0					
ANR	1048553	PrimaryExpression	3		1048060	1					
ANR	1048554	CompoundStatement		137:55:2576:2576	1048060	3					
ANR	1048555	ExpressionStatement	"code = get_vlc2 ( gb , ff_vc1_norm6_vlc . table , VC1_NORM6_VLC_BITS , 2 )"	141:20:2675:2741	1048060	0	True				
ANR	1048556	AssignmentExpression	"code = get_vlc2 ( gb , ff_vc1_norm6_vlc . table , VC1_NORM6_VLC_BITS , 2 )"		1048060	0		=			
ANR	1048557	Identifier	code		1048060	0					
ANR	1048558	CallExpression	"get_vlc2 ( gb , ff_vc1_norm6_vlc . table , VC1_NORM6_VLC_BITS , 2 )"		1048060	1					
ANR	1048559	Callee	get_vlc2		1048060	0					
ANR	1048560	Identifier	get_vlc2		1048060	0					
ANR	1048561	ArgumentList	gb		1048060	1					
ANR	1048562	Argument	gb		1048060	0					
ANR	1048563	Identifier	gb		1048060	0					
ANR	1048564	Argument	ff_vc1_norm6_vlc . table		1048060	1					
ANR	1048565	MemberAccess	ff_vc1_norm6_vlc . table		1048060	0					
ANR	1048566	Identifier	ff_vc1_norm6_vlc		1048060	0					
ANR	1048567	Identifier	table		1048060	1					
ANR	1048568	Argument	VC1_NORM6_VLC_BITS		1048060	2					
ANR	1048569	Identifier	VC1_NORM6_VLC_BITS		1048060	0					
ANR	1048570	Argument	2		1048060	3					
ANR	1048571	PrimaryExpression	2		1048060	0					
ANR	1048572	IfStatement	if ( code < 0 )		1048060	1					
ANR	1048573	Condition	code < 0	143:24:2768:2775	1048060	0	True				
ANR	1048574	RelationalExpression	code < 0		1048060	0		<			
ANR	1048575	Identifier	code		1048060	0					
ANR	1048576	PrimaryExpression	0		1048060	1					
ANR	1048577	CompoundStatement		141:34:2702:2702	1048060	1					
ANR	1048578	ExpressionStatement	"av_log ( v -> s . avctx , AV_LOG_DEBUG , ""invalid NORM-6 VLC\\n"" )"	145:24:2805:2861	1048060	0	True				
ANR	1048579	CallExpression	"av_log ( v -> s . avctx , AV_LOG_DEBUG , ""invalid NORM-6 VLC\\n"" )"		1048060	0					
ANR	1048580	Callee	av_log		1048060	0					
ANR	1048581	Identifier	av_log		1048060	0					
ANR	1048582	ArgumentList	v -> s . avctx		1048060	1					
ANR	1048583	Argument	v -> s . avctx		1048060	0					
ANR	1048584	MemberAccess	v -> s . avctx		1048060	0					
ANR	1048585	PtrMemberAccess	v -> s		1048060	0					
ANR	1048586	Identifier	v		1048060	0					
ANR	1048587	Identifier	s		1048060	1					
ANR	1048588	Identifier	avctx		1048060	1					
ANR	1048589	Argument	AV_LOG_DEBUG		1048060	1					
ANR	1048590	Identifier	AV_LOG_DEBUG		1048060	0					
ANR	1048591	Argument	"""invalid NORM-6 VLC\\n"""		1048060	2					
ANR	1048592	PrimaryExpression	"""invalid NORM-6 VLC\\n"""		1048060	0					
ANR	1048593	ReturnStatement	return - 1 ;	147:24:2888:2897	1048060	1	True				
ANR	1048594	UnaryOperationExpression	- 1		1048060	0					
ANR	1048595	UnaryOperator	-		1048060	0					
ANR	1048596	PrimaryExpression	1		1048060	1					
ANR	1048597	ExpressionStatement	planep [ x + 0 ] = ( code >> 0 ) & 1	151:20:2943:2983	1048060	2	True				
ANR	1048598	AssignmentExpression	planep [ x + 0 ] = ( code >> 0 ) & 1		1048060	0		=			
ANR	1048599	ArrayIndexing	planep [ x + 0 ]		1048060	0					
ANR	1048600	Identifier	planep		1048060	0					
ANR	1048601	AdditiveExpression	x + 0		1048060	1		+			
ANR	1048602	Identifier	x		1048060	0					
ANR	1048603	PrimaryExpression	0		1048060	1					
ANR	1048604	BitAndExpression	( code >> 0 ) & 1		1048060	1		&			
ANR	1048605	ShiftExpression	code >> 0		1048060	0		>>			
ANR	1048606	Identifier	code		1048060	0					
ANR	1048607	PrimaryExpression	0		1048060	1					
ANR	1048608	PrimaryExpression	1		1048060	1					
ANR	1048609	ExpressionStatement	planep [ x + 1 ] = ( code >> 1 ) & 1	153:20:3006:3046	1048060	3	True				
ANR	1048610	AssignmentExpression	planep [ x + 1 ] = ( code >> 1 ) & 1		1048060	0		=			
ANR	1048611	ArrayIndexing	planep [ x + 1 ]		1048060	0					
ANR	1048612	Identifier	planep		1048060	0					
ANR	1048613	AdditiveExpression	x + 1		1048060	1		+			
ANR	1048614	Identifier	x		1048060	0					
ANR	1048615	PrimaryExpression	1		1048060	1					
ANR	1048616	BitAndExpression	( code >> 1 ) & 1		1048060	1		&			
ANR	1048617	ShiftExpression	code >> 1		1048060	0		>>			
ANR	1048618	Identifier	code		1048060	0					
ANR	1048619	PrimaryExpression	1		1048060	1					
ANR	1048620	PrimaryExpression	1		1048060	1					
ANR	1048621	ExpressionStatement	planep [ x + 2 ] = ( code >> 2 ) & 1	155:20:3069:3109	1048060	4	True				
ANR	1048622	AssignmentExpression	planep [ x + 2 ] = ( code >> 2 ) & 1		1048060	0		=			
ANR	1048623	ArrayIndexing	planep [ x + 2 ]		1048060	0					
ANR	1048624	Identifier	planep		1048060	0					
ANR	1048625	AdditiveExpression	x + 2		1048060	1		+			
ANR	1048626	Identifier	x		1048060	0					
ANR	1048627	PrimaryExpression	2		1048060	1					
ANR	1048628	BitAndExpression	( code >> 2 ) & 1		1048060	1		&			
ANR	1048629	ShiftExpression	code >> 2		1048060	0		>>			
ANR	1048630	Identifier	code		1048060	0					
ANR	1048631	PrimaryExpression	2		1048060	1					
ANR	1048632	PrimaryExpression	1		1048060	1					
ANR	1048633	ExpressionStatement	planep [ x + 0 + stride ] = ( code >> 3 ) & 1	157:20:3132:3172	1048060	5	True				
ANR	1048634	AssignmentExpression	planep [ x + 0 + stride ] = ( code >> 3 ) & 1		1048060	0		=			
ANR	1048635	ArrayIndexing	planep [ x + 0 + stride ]		1048060	0					
ANR	1048636	Identifier	planep		1048060	0					
ANR	1048637	AdditiveExpression	x + 0 + stride		1048060	1		+			
ANR	1048638	Identifier	x		1048060	0					
ANR	1048639	AdditiveExpression	0 + stride		1048060	1		+			
ANR	1048640	PrimaryExpression	0		1048060	0					
ANR	1048641	Identifier	stride		1048060	1					
ANR	1048642	BitAndExpression	( code >> 3 ) & 1		1048060	1		&			
ANR	1048643	ShiftExpression	code >> 3		1048060	0		>>			
ANR	1048644	Identifier	code		1048060	0					
ANR	1048645	PrimaryExpression	3		1048060	1					
ANR	1048646	PrimaryExpression	1		1048060	1					
ANR	1048647	ExpressionStatement	planep [ x + 1 + stride ] = ( code >> 4 ) & 1	159:20:3195:3235	1048060	6	True				
ANR	1048648	AssignmentExpression	planep [ x + 1 + stride ] = ( code >> 4 ) & 1		1048060	0		=			
ANR	1048649	ArrayIndexing	planep [ x + 1 + stride ]		1048060	0					
ANR	1048650	Identifier	planep		1048060	0					
ANR	1048651	AdditiveExpression	x + 1 + stride		1048060	1		+			
ANR	1048652	Identifier	x		1048060	0					
ANR	1048653	AdditiveExpression	1 + stride		1048060	1		+			
ANR	1048654	PrimaryExpression	1		1048060	0					
ANR	1048655	Identifier	stride		1048060	1					
ANR	1048656	BitAndExpression	( code >> 4 ) & 1		1048060	1		&			
ANR	1048657	ShiftExpression	code >> 4		1048060	0		>>			
ANR	1048658	Identifier	code		1048060	0					
ANR	1048659	PrimaryExpression	4		1048060	1					
ANR	1048660	PrimaryExpression	1		1048060	1					
ANR	1048661	ExpressionStatement	planep [ x + 2 + stride ] = ( code >> 5 ) & 1	161:20:3258:3298	1048060	7	True				
ANR	1048662	AssignmentExpression	planep [ x + 2 + stride ] = ( code >> 5 ) & 1		1048060	0		=			
ANR	1048663	ArrayIndexing	planep [ x + 2 + stride ]		1048060	0					
ANR	1048664	Identifier	planep		1048060	0					
ANR	1048665	AdditiveExpression	x + 2 + stride		1048060	1		+			
ANR	1048666	Identifier	x		1048060	0					
ANR	1048667	AdditiveExpression	2 + stride		1048060	1		+			
ANR	1048668	PrimaryExpression	2		1048060	0					
ANR	1048669	Identifier	stride		1048060	1					
ANR	1048670	BitAndExpression	( code >> 5 ) & 1		1048060	1		&			
ANR	1048671	ShiftExpression	code >> 5		1048060	0		>>			
ANR	1048672	Identifier	code		1048060	0					
ANR	1048673	PrimaryExpression	5		1048060	1					
ANR	1048674	PrimaryExpression	1		1048060	1					
ANR	1048675	ExpressionStatement	planep += stride * 2	165:16:3336:3356	1048060	1	True				
ANR	1048676	AssignmentExpression	planep += stride * 2		1048060	0		+=			
ANR	1048677	Identifier	planep		1048060	0					
ANR	1048678	MultiplicativeExpression	stride * 2		1048060	1		*			
ANR	1048679	Identifier	stride		1048060	0					
ANR	1048680	PrimaryExpression	2		1048060	1					
ANR	1048681	ExpressionStatement	x = width % 3	169:12:3386:3399	1048060	2	True				
ANR	1048682	AssignmentExpression	x = width % 3		1048060	0		=			
ANR	1048683	Identifier	x		1048060	0					
ANR	1048684	MultiplicativeExpression	width % 3		1048060	1		%			
ANR	1048685	Identifier	width		1048060	0					
ANR	1048686	PrimaryExpression	3		1048060	1					
ANR	1048687	IfStatement	if ( x )		1048060	3					
ANR	1048688	Condition	x	171:16:3418:3418	1048060	0	True				
ANR	1048689	Identifier	x		1048060	0					
ANR	1048690	ExpressionStatement	"decode_colskip ( data , x , height , stride , & v -> s . gb )"	173:16:3438:3499	1048060	1	True				
ANR	1048691	CallExpression	"decode_colskip ( data , x , height , stride , & v -> s . gb )"		1048060	0					
ANR	1048692	Callee	decode_colskip		1048060	0					
ANR	1048693	Identifier	decode_colskip		1048060	0					
ANR	1048694	ArgumentList	data		1048060	1					
ANR	1048695	Argument	data		1048060	0					
ANR	1048696	Identifier	data		1048060	0					
ANR	1048697	Argument	x		1048060	1					
ANR	1048698	Identifier	x		1048060	0					
ANR	1048699	Argument	height		1048060	2					
ANR	1048700	Identifier	height		1048060	0					
ANR	1048701	Argument	stride		1048060	3					
ANR	1048702	Identifier	stride		1048060	0					
ANR	1048703	Argument	& v -> s . gb		1048060	4					
ANR	1048704	UnaryOperationExpression	& v -> s . gb		1048060	0					
ANR	1048705	UnaryOperator	&		1048060	0					
ANR	1048706	MemberAccess	v -> s . gb		1048060	1					
ANR	1048707	PtrMemberAccess	v -> s		1048060	0					
ANR	1048708	Identifier	v		1048060	0					
ANR	1048709	Identifier	s		1048060	1					
ANR	1048710	Identifier	gb		1048060	1					
ANR	1048711	IfStatement	if ( height & 1 )		1048060	4					
ANR	1048712	Condition	height & 1	175:16:3518:3527	1048060	0	True				
ANR	1048713	BitAndExpression	height & 1		1048060	0		&			
ANR	1048714	Identifier	height		1048060	0					
ANR	1048715	PrimaryExpression	1		1048060	1					
ANR	1048716	ExpressionStatement	"decode_rowskip ( data + x , width - x , 1 , stride , & v -> s . gb )"	177:16:3547:3608	1048060	1	True				
ANR	1048717	CallExpression	"decode_rowskip ( data + x , width - x , 1 , stride , & v -> s . gb )"		1048060	0					
ANR	1048718	Callee	decode_rowskip		1048060	0					
ANR	1048719	Identifier	decode_rowskip		1048060	0					
ANR	1048720	ArgumentList	data + x		1048060	1					
ANR	1048721	Argument	data + x		1048060	0					
ANR	1048722	AdditiveExpression	data + x		1048060	0		+			
ANR	1048723	Identifier	data		1048060	0					
ANR	1048724	Identifier	x		1048060	1					
ANR	1048725	Argument	width - x		1048060	1					
ANR	1048726	AdditiveExpression	width - x		1048060	0		-			
ANR	1048727	Identifier	width		1048060	0					
ANR	1048728	Identifier	x		1048060	1					
ANR	1048729	Argument	1		1048060	2					
ANR	1048730	PrimaryExpression	1		1048060	0					
ANR	1048731	Argument	stride		1048060	3					
ANR	1048732	Identifier	stride		1048060	0					
ANR	1048733	Argument	& v -> s . gb		1048060	4					
ANR	1048734	UnaryOperationExpression	& v -> s . gb		1048060	0					
ANR	1048735	UnaryOperator	&		1048060	0					
ANR	1048736	MemberAccess	v -> s . gb		1048060	1					
ANR	1048737	PtrMemberAccess	v -> s		1048060	0					
ANR	1048738	Identifier	v		1048060	0					
ANR	1048739	Identifier	s		1048060	1					
ANR	1048740	Identifier	gb		1048060	1					
ANR	1048741	BreakStatement	break ;	181:8:3630:3635	1048060	11	True				
ANR	1048742	Label	case IMODE_ROWSKIP :	183:4:3642:3660	1048060	12	True				
ANR	1048743	Identifier	IMODE_ROWSKIP		1048060	0					
ANR	1048744	ExpressionStatement	"decode_rowskip ( data , width , height , stride , & v -> s . gb )"	185:8:3671:3724	1048060	13	True				
ANR	1048745	CallExpression	"decode_rowskip ( data , width , height , stride , & v -> s . gb )"		1048060	0					
ANR	1048746	Callee	decode_rowskip		1048060	0					
ANR	1048747	Identifier	decode_rowskip		1048060	0					
ANR	1048748	ArgumentList	data		1048060	1					
ANR	1048749	Argument	data		1048060	0					
ANR	1048750	Identifier	data		1048060	0					
ANR	1048751	Argument	width		1048060	1					
ANR	1048752	Identifier	width		1048060	0					
ANR	1048753	Argument	height		1048060	2					
ANR	1048754	Identifier	height		1048060	0					
ANR	1048755	Argument	stride		1048060	3					
ANR	1048756	Identifier	stride		1048060	0					
ANR	1048757	Argument	& v -> s . gb		1048060	4					
ANR	1048758	UnaryOperationExpression	& v -> s . gb		1048060	0					
ANR	1048759	UnaryOperator	&		1048060	0					
ANR	1048760	MemberAccess	v -> s . gb		1048060	1					
ANR	1048761	PtrMemberAccess	v -> s		1048060	0					
ANR	1048762	Identifier	v		1048060	0					
ANR	1048763	Identifier	s		1048060	1					
ANR	1048764	Identifier	gb		1048060	1					
ANR	1048765	BreakStatement	break ;	187:8:3735:3740	1048060	14	True				
ANR	1048766	Label	case IMODE_COLSKIP :	189:4:3747:3765	1048060	15	True				
ANR	1048767	Identifier	IMODE_COLSKIP		1048060	0					
ANR	1048768	ExpressionStatement	"decode_colskip ( data , width , height , stride , & v -> s . gb )"	191:8:3776:3829	1048060	16	True				
ANR	1048769	CallExpression	"decode_colskip ( data , width , height , stride , & v -> s . gb )"		1048060	0					
ANR	1048770	Callee	decode_colskip		1048060	0					
ANR	1048771	Identifier	decode_colskip		1048060	0					
ANR	1048772	ArgumentList	data		1048060	1					
ANR	1048773	Argument	data		1048060	0					
ANR	1048774	Identifier	data		1048060	0					
ANR	1048775	Argument	width		1048060	1					
ANR	1048776	Identifier	width		1048060	0					
ANR	1048777	Argument	height		1048060	2					
ANR	1048778	Identifier	height		1048060	0					
ANR	1048779	Argument	stride		1048060	3					
ANR	1048780	Identifier	stride		1048060	0					
ANR	1048781	Argument	& v -> s . gb		1048060	4					
ANR	1048782	UnaryOperationExpression	& v -> s . gb		1048060	0					
ANR	1048783	UnaryOperator	&		1048060	0					
ANR	1048784	MemberAccess	v -> s . gb		1048060	1					
ANR	1048785	PtrMemberAccess	v -> s		1048060	0					
ANR	1048786	Identifier	v		1048060	0					
ANR	1048787	Identifier	s		1048060	1					
ANR	1048788	Identifier	gb		1048060	1					
ANR	1048789	BreakStatement	break ;	193:8:3840:3845	1048060	17	True				
ANR	1048790	Label	default :	195:4:3852:3859	1048060	18	True				
ANR	1048791	Identifier	default		1048060	0					
ANR	1048792	BreakStatement	break ;	197:8:3870:3875	1048060	19	True				
ANR	1048793	IfStatement	if ( imode == IMODE_DIFF2 || imode == IMODE_DIFF6 )		1048060	11					
ANR	1048794	Condition	imode == IMODE_DIFF2 || imode == IMODE_DIFF6	205:8:3929:3972	1048060	0	True				
ANR	1048795	OrExpression	imode == IMODE_DIFF2 || imode == IMODE_DIFF6		1048060	0		||			
ANR	1048796	EqualityExpression	imode == IMODE_DIFF2		1048060	0		==			
ANR	1048797	Identifier	imode		1048060	0					
ANR	1048798	Identifier	IMODE_DIFF2		1048060	1					
ANR	1048799	EqualityExpression	imode == IMODE_DIFF6		1048060	1		==			
ANR	1048800	Identifier	imode		1048060	0					
ANR	1048801	Identifier	IMODE_DIFF6		1048060	1					
ANR	1048802	CompoundStatement		203:54:3899:3899	1048060	1					
ANR	1048803	ExpressionStatement	planep = data	207:8:3986:3999	1048060	0	True				
ANR	1048804	AssignmentExpression	planep = data		1048060	0		=			
ANR	1048805	Identifier	planep		1048060	0					
ANR	1048806	Identifier	data		1048060	1					
ANR	1048807	ExpressionStatement	planep [ 0 ] ^= invert	209:8:4010:4029	1048060	1	True				
ANR	1048808	AssignmentExpression	planep [ 0 ] ^= invert		1048060	0		^=			
ANR	1048809	ArrayIndexing	planep [ 0 ]		1048060	0					
ANR	1048810	Identifier	planep		1048060	0					
ANR	1048811	PrimaryExpression	0		1048060	1					
ANR	1048812	Identifier	invert		1048060	1					
ANR	1048813	ForStatement	for ( x = 1 ; x < width ; x ++ )		1048060	2					
ANR	1048814	ForInit	x = 1 ;	211:13:4045:4050	1048060	0	True				
ANR	1048815	AssignmentExpression	x = 1		1048060	0		=			
ANR	1048816	Identifier	x		1048060	0					
ANR	1048817	PrimaryExpression	1		1048060	1					
ANR	1048818	Condition	x < width	211:20:4052:4060	1048060	1	True				
ANR	1048819	RelationalExpression	x < width		1048060	0		<			
ANR	1048820	Identifier	x		1048060	0					
ANR	1048821	Identifier	width		1048060	1					
ANR	1048822	PostIncDecOperationExpression	x ++	211:31:4063:4065	1048060	2	True				
ANR	1048823	Identifier	x		1048060	0					
ANR	1048824	IncDec	++		1048060	1					
ANR	1048825	ExpressionStatement	planep [ x ] ^= planep [ x - 1 ]	213:12:4081:4105	1048060	3	True				
ANR	1048826	AssignmentExpression	planep [ x ] ^= planep [ x - 1 ]		1048060	0		^=			
ANR	1048827	ArrayIndexing	planep [ x ]		1048060	0					
ANR	1048828	Identifier	planep		1048060	0					
ANR	1048829	Identifier	x		1048060	1					
ANR	1048830	ArrayIndexing	planep [ x - 1 ]		1048060	1					
ANR	1048831	Identifier	planep		1048060	0					
ANR	1048832	AdditiveExpression	x - 1		1048060	1		-			
ANR	1048833	Identifier	x		1048060	0					
ANR	1048834	PrimaryExpression	1		1048060	1					
ANR	1048835	ForStatement	for ( y = 1 ; y < height ; y ++ )		1048060	3					
ANR	1048836	ForInit	y = 1 ;	215:13:4121:4126	1048060	0	True				
ANR	1048837	AssignmentExpression	y = 1		1048060	0		=			
ANR	1048838	Identifier	y		1048060	0					
ANR	1048839	PrimaryExpression	1		1048060	1					
ANR	1048840	Condition	y < height	215:20:4128:4137	1048060	1	True				
ANR	1048841	RelationalExpression	y < height		1048060	0		<			
ANR	1048842	Identifier	y		1048060	0					
ANR	1048843	Identifier	height		1048060	1					
ANR	1048844	PostIncDecOperationExpression	y ++	215:32:4140:4142	1048060	2	True				
ANR	1048845	Identifier	y		1048060	0					
ANR	1048846	IncDec	++		1048060	1					
ANR	1048847	CompoundStatement		213:37:4069:4069	1048060	3					
ANR	1048848	ExpressionStatement	planep += stride	217:12:4160:4176	1048060	0	True				
ANR	1048849	AssignmentExpression	planep += stride		1048060	0		+=			
ANR	1048850	Identifier	planep		1048060	0					
ANR	1048851	Identifier	stride		1048060	1					
ANR	1048852	ExpressionStatement	planep [ 0 ] ^= planep [ - stride ]	219:12:4191:4219	1048060	1	True				
ANR	1048853	AssignmentExpression	planep [ 0 ] ^= planep [ - stride ]		1048060	0		^=			
ANR	1048854	ArrayIndexing	planep [ 0 ]		1048060	0					
ANR	1048855	Identifier	planep		1048060	0					
ANR	1048856	PrimaryExpression	0		1048060	1					
ANR	1048857	ArrayIndexing	planep [ - stride ]		1048060	1					
ANR	1048858	Identifier	planep		1048060	0					
ANR	1048859	UnaryOperationExpression	- stride		1048060	1					
ANR	1048860	UnaryOperator	-		1048060	0					
ANR	1048861	Identifier	stride		1048060	1					
ANR	1048862	ForStatement	for ( x = 1 ; x < width ; x ++ )		1048060	2					
ANR	1048863	ForInit	x = 1 ;	221:17:4239:4244	1048060	0	True				
ANR	1048864	AssignmentExpression	x = 1		1048060	0		=			
ANR	1048865	Identifier	x		1048060	0					
ANR	1048866	PrimaryExpression	1		1048060	1					
ANR	1048867	Condition	x < width	221:24:4246:4254	1048060	1	True				
ANR	1048868	RelationalExpression	x < width		1048060	0		<			
ANR	1048869	Identifier	x		1048060	0					
ANR	1048870	Identifier	width		1048060	1					
ANR	1048871	PostIncDecOperationExpression	x ++	221:35:4257:4259	1048060	2	True				
ANR	1048872	Identifier	x		1048060	0					
ANR	1048873	IncDec	++		1048060	1					
ANR	1048874	CompoundStatement		219:40:4186:4186	1048060	3					
ANR	1048875	IfStatement	if ( planep [ x - 1 ] != planep [ x - stride ] )		1048060	0					
ANR	1048876	Condition	planep [ x - 1 ] != planep [ x - stride ]	223:20:4285:4315	1048060	0	True				
ANR	1048877	EqualityExpression	planep [ x - 1 ] != planep [ x - stride ]		1048060	0		!=			
ANR	1048878	ArrayIndexing	planep [ x - 1 ]		1048060	0					
ANR	1048879	Identifier	planep		1048060	0					
ANR	1048880	AdditiveExpression	x - 1		1048060	1		-			
ANR	1048881	Identifier	x		1048060	0					
ANR	1048882	PrimaryExpression	1		1048060	1					
ANR	1048883	ArrayIndexing	planep [ x - stride ]		1048060	1					
ANR	1048884	Identifier	planep		1048060	0					
ANR	1048885	AdditiveExpression	x - stride		1048060	1		-			
ANR	1048886	Identifier	x		1048060	0					
ANR	1048887	Identifier	stride		1048060	1					
ANR	1048888	ExpressionStatement	planep [ x ] ^= invert	223:53:4318:4337	1048060	1	True				
ANR	1048889	AssignmentExpression	planep [ x ] ^= invert		1048060	0		^=			
ANR	1048890	ArrayIndexing	planep [ x ]		1048060	0					
ANR	1048891	Identifier	planep		1048060	0					
ANR	1048892	Identifier	x		1048060	1					
ANR	1048893	Identifier	invert		1048060	1					
ANR	1048894	ElseStatement	else		1048060	0					
ANR	1048895	ExpressionStatement	planep [ x ] ^= planep [ x - 1 ]	225:53:4393:4417	1048060	0	True				
ANR	1048896	AssignmentExpression	planep [ x ] ^= planep [ x - 1 ]		1048060	0		^=			
ANR	1048897	ArrayIndexing	planep [ x ]		1048060	0					
ANR	1048898	Identifier	planep		1048060	0					
ANR	1048899	Identifier	x		1048060	1					
ANR	1048900	ArrayIndexing	planep [ x - 1 ]		1048060	1					
ANR	1048901	Identifier	planep		1048060	0					
ANR	1048902	AdditiveExpression	x - 1		1048060	1		-			
ANR	1048903	Identifier	x		1048060	0					
ANR	1048904	PrimaryExpression	1		1048060	1					
ANR	1048905	ElseStatement	else		1048060	0					
ANR	1048906	IfStatement	if ( invert )		1048060	0					
ANR	1048907	Condition	invert	231:15:4461:4466	1048060	0	True				
ANR	1048908	Identifier	invert		1048060	0					
ANR	1048909	CompoundStatement		229:23:4393:4393	1048060	1					
ANR	1048910	ExpressionStatement	planep = data	233:8:4480:4493	1048060	0	True				
ANR	1048911	AssignmentExpression	planep = data		1048060	0		=			
ANR	1048912	Identifier	planep		1048060	0					
ANR	1048913	Identifier	data		1048060	1					
ANR	1048914	ForStatement	for ( x = 0 ; x < stride * height ; x ++ )		1048060	1					
ANR	1048915	ForInit	x = 0 ;	235:13:4509:4514	1048060	0	True				
ANR	1048916	AssignmentExpression	x = 0		1048060	0		=			
ANR	1048917	Identifier	x		1048060	0					
ANR	1048918	PrimaryExpression	0		1048060	1					
ANR	1048919	Condition	x < stride * height	235:20:4516:4534	1048060	1	True				
ANR	1048920	RelationalExpression	x < stride * height		1048060	0		<			
ANR	1048921	Identifier	x		1048060	0					
ANR	1048922	MultiplicativeExpression	stride * height		1048060	1		*			
ANR	1048923	Identifier	stride		1048060	0					
ANR	1048924	Identifier	height		1048060	1					
ANR	1048925	PostIncDecOperationExpression	x ++	235:41:4537:4539	1048060	2	True				
ANR	1048926	Identifier	x		1048060	0					
ANR	1048927	IncDec	++		1048060	1					
ANR	1048928	ExpressionStatement	planep [ x ] = ! planep [ x ]	237:12:4555:4577	1048060	3	True				
ANR	1048929	AssignmentExpression	planep [ x ] = ! planep [ x ]		1048060	0		=			
ANR	1048930	ArrayIndexing	planep [ x ]		1048060	0					
ANR	1048931	Identifier	planep		1048060	0					
ANR	1048932	Identifier	x		1048060	1					
ANR	1048933	UnaryOperationExpression	! planep [ x ]		1048060	1					
ANR	1048934	UnaryOperator	!		1048060	0					
ANR	1048935	ArrayIndexing	planep [ x ]		1048060	1					
ANR	1048936	Identifier	planep		1048060	0					
ANR	1048937	Identifier	x		1048060	1					
ANR	1048938	ReturnStatement	return ( imode << 1 ) + invert ;	241:4:4606:4634	1048060	12	True				
ANR	1048939	AdditiveExpression	( imode << 1 ) + invert		1048060	0		+			
ANR	1048940	ShiftExpression	imode << 1		1048060	0		<<			
ANR	1048941	Identifier	imode		1048060	0					
ANR	1048942	PrimaryExpression	1		1048060	1					
ANR	1048943	Identifier	invert		1048060	1					
ANR	1048944	ReturnType	static int		1048060	1					
ANR	1048945	Identifier	bitplane_decoding		1048060	2					
ANR	1048946	ParameterList	"uint8_t * data , int * raw_flag , VC1Context * v"		1048060	3					
ANR	1048947	Parameter	uint8_t * data	1:29:29:41	1048060	0	True				
ANR	1048948	ParameterType	uint8_t *		1048060	0					
ANR	1048949	Identifier	data		1048060	1					
ANR	1048950	Parameter	int * raw_flag	1:44:44:56	1048060	1	True				
ANR	1048951	ParameterType	int *		1048060	0					
ANR	1048952	Identifier	raw_flag		1048060	1					
ANR	1048953	Parameter	VC1Context * v	1:59:59:71	1048060	2	True				
ANR	1048954	ParameterType	VC1Context *		1048060	0					
ANR	1048955	Identifier	v		1048060	1					
ANR	1048956	CFGEntryNode	ENTRY		1048060		True				
ANR	1048957	CFGExitNode	EXIT		1048060		True				
ANR	1048958	Symbol	& v -> s		1048060						
ANR	1048959	Symbol	* v		1048060						
ANR	1048960	Symbol	* raw_flag		1048060						
ANR	1048961	Symbol	* stride		1048060						
ANR	1048962	Symbol	* x		1048060						
ANR	1048963	Symbol	code		1048060						
ANR	1048964	Symbol	VC1_IMODE_VLC_BITS		1048060						
ANR	1048965	Symbol	data		1048060						
ANR	1048966	Symbol	VC1_NORM6_VLC_BITS		1048060						
ANR	1048967	Symbol	stride		1048060						
ANR	1048968	Symbol	ff_vc1_imode_vlc . table		1048060						
ANR	1048969	Symbol	ff_vc1_norm2_vlc . table		1048060						
ANR	1048970	Symbol	v -> s		1048060						
ANR	1048971	Symbol	gb		1048060						
ANR	1048972	Symbol	ff_vc1_norm6_vlc . table		1048060						
ANR	1048973	Symbol	AV_LOG_DEBUG		1048060						
ANR	1048974	Symbol	raw_flag		1048060						
ANR	1048975	Symbol	height		1048060						
ANR	1048976	Symbol	ff_vc1_norm6_vlc		1048060						
ANR	1048977	Symbol	* planep ++		1048060						
ANR	1048978	Symbol	offset		1048060						
ANR	1048979	Symbol	invert		1048060						
ANR	1048980	Symbol	get_bits1		1048060						
ANR	1048981	Symbol	& v -> s . gb		1048060						
ANR	1048982	Symbol	planep		1048060						
ANR	1048983	Symbol	VC1_NORM2_VLC_BITS		1048060						
ANR	1048984	Symbol	v -> s . mb_width		1048060						
ANR	1048985	Symbol	v -> field_mode		1048060						
ANR	1048986	Symbol	v -> s . mb_stride		1048060						
ANR	1048987	Symbol	v		1048060						
ANR	1048988	Symbol	imode		1048060						
ANR	1048989	Symbol	x		1048060						
ANR	1048990	Symbol	width		1048060						
ANR	1048991	Symbol	y		1048060						
ANR	1048992	Symbol	IMODE_DIFF6		1048060						
ANR	1048993	Symbol	get_vlc2		1048060						
ANR	1048994	Symbol	ff_vc1_norm2_vlc		1048060						
ANR	1048995	Symbol	v -> s . avctx		1048060						
ANR	1048996	Symbol	v -> s . mb_height		1048060						
ANR	1048997	Symbol	ff_vc1_imode_vlc		1048060						
ANR	1048998	Symbol	* planep		1048060						
ANR	1048999	Symbol	IMODE_DIFF2		1048060						
