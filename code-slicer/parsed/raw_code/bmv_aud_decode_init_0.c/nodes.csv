command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1105757	File	/home/p4ultr4n/workplace/ReVeal/raw_code/bmv_aud_decode_init_0.c								
ANR	1105758	Function	bmv_aud_decode_init	1:0:0:403							
ANR	1105759	FunctionDef	bmv_aud_decode_init (AVCodecContext * avctx)		1105758	0					
ANR	1105760	CompoundStatement		3:0:63:403	1105758	0					
ANR	1105761	IdentifierDeclStatement	BMVAudioDecContext * c = avctx -> priv_data ;	5:4:70:110	1105758	0	True				
ANR	1105762	IdentifierDecl	* c = avctx -> priv_data		1105758	0					
ANR	1105763	IdentifierDeclType	BMVAudioDecContext *		1105758	0					
ANR	1105764	Identifier	c		1105758	1					
ANR	1105765	AssignmentExpression	* c = avctx -> priv_data		1105758	2		=			
ANR	1105766	Identifier	c		1105758	0					
ANR	1105767	PtrMemberAccess	avctx -> priv_data		1105758	1					
ANR	1105768	Identifier	avctx		1105758	0					
ANR	1105769	Identifier	priv_data		1105758	1					
ANR	1105770	IfStatement	if ( avctx -> channels != 2 )		1105758	1					
ANR	1105771	Condition	avctx -> channels != 2	9:8:123:142	1105758	0	True				
ANR	1105772	EqualityExpression	avctx -> channels != 2		1105758	0		!=			
ANR	1105773	PtrMemberAccess	avctx -> channels		1105758	0					
ANR	1105774	Identifier	avctx		1105758	0					
ANR	1105775	Identifier	channels		1105758	1					
ANR	1105776	PrimaryExpression	2		1105758	1					
ANR	1105777	CompoundStatement		7:30:81:81	1105758	1					
ANR	1105778	ExpressionStatement	"av_log ( avctx , AV_LOG_INFO , ""invalid number of channels\\n"" )"	11:8:156:214	1105758	0	True				
ANR	1105779	CallExpression	"av_log ( avctx , AV_LOG_INFO , ""invalid number of channels\\n"" )"		1105758	0					
ANR	1105780	Callee	av_log		1105758	0					
ANR	1105781	Identifier	av_log		1105758	0					
ANR	1105782	ArgumentList	avctx		1105758	1					
ANR	1105783	Argument	avctx		1105758	0					
ANR	1105784	Identifier	avctx		1105758	0					
ANR	1105785	Argument	AV_LOG_INFO		1105758	1					
ANR	1105786	Identifier	AV_LOG_INFO		1105758	0					
ANR	1105787	Argument	"""invalid number of channels\\n"""		1105758	2					
ANR	1105788	PrimaryExpression	"""invalid number of channels\\n"""		1105758	0					
ANR	1105789	ReturnStatement	return AVERROR ( EINVAL ) ;	13:8:225:247	1105758	1	True				
ANR	1105790	CallExpression	AVERROR ( EINVAL )		1105758	0					
ANR	1105791	Callee	AVERROR		1105758	0					
ANR	1105792	Identifier	AVERROR		1105758	0					
ANR	1105793	ArgumentList	EINVAL		1105758	1					
ANR	1105794	Argument	EINVAL		1105758	0					
ANR	1105795	Identifier	EINVAL		1105758	0					
ANR	1105796	ExpressionStatement	avctx -> sample_fmt = AV_SAMPLE_FMT_S16	19:4:263:300	1105758	2	True				
ANR	1105797	AssignmentExpression	avctx -> sample_fmt = AV_SAMPLE_FMT_S16		1105758	0		=			
ANR	1105798	PtrMemberAccess	avctx -> sample_fmt		1105758	0					
ANR	1105799	Identifier	avctx		1105758	0					
ANR	1105800	Identifier	sample_fmt		1105758	1					
ANR	1105801	Identifier	AV_SAMPLE_FMT_S16		1105758	1					
ANR	1105802	ExpressionStatement	avcodec_get_frame_defaults ( & c -> frame )	23:4:309:346	1105758	3	True				
ANR	1105803	CallExpression	avcodec_get_frame_defaults ( & c -> frame )		1105758	0					
ANR	1105804	Callee	avcodec_get_frame_defaults		1105758	0					
ANR	1105805	Identifier	avcodec_get_frame_defaults		1105758	0					
ANR	1105806	ArgumentList	& c -> frame		1105758	1					
ANR	1105807	Argument	& c -> frame		1105758	0					
ANR	1105808	UnaryOperationExpression	& c -> frame		1105758	0					
ANR	1105809	UnaryOperator	&		1105758	0					
ANR	1105810	PtrMemberAccess	c -> frame		1105758	1					
ANR	1105811	Identifier	c		1105758	0					
ANR	1105812	Identifier	frame		1105758	1					
ANR	1105813	ExpressionStatement	avctx -> coded_frame = & c -> frame	25:4:353:383	1105758	4	True				
ANR	1105814	AssignmentExpression	avctx -> coded_frame = & c -> frame		1105758	0		=			
ANR	1105815	PtrMemberAccess	avctx -> coded_frame		1105758	0					
ANR	1105816	Identifier	avctx		1105758	0					
ANR	1105817	Identifier	coded_frame		1105758	1					
ANR	1105818	UnaryOperationExpression	& c -> frame		1105758	1					
ANR	1105819	UnaryOperator	&		1105758	0					
ANR	1105820	PtrMemberAccess	c -> frame		1105758	1					
ANR	1105821	Identifier	c		1105758	0					
ANR	1105822	Identifier	frame		1105758	1					
ANR	1105823	ReturnStatement	return 0 ;	29:4:392:400	1105758	5	True				
ANR	1105824	PrimaryExpression	0		1105758	0					
ANR	1105825	ReturnType	static av_cold int		1105758	1					
ANR	1105826	Identifier	bmv_aud_decode_init		1105758	2					
ANR	1105827	ParameterList	AVCodecContext * avctx		1105758	3					
ANR	1105828	Parameter	AVCodecContext * avctx	1:39:39:59	1105758	0	True				
ANR	1105829	ParameterType	AVCodecContext *		1105758	0					
ANR	1105830	Identifier	avctx		1105758	1					
ANR	1105831	CFGEntryNode	ENTRY		1105758		True				
ANR	1105832	CFGExitNode	EXIT		1105758		True				
ANR	1105833	Symbol	avctx -> channels		1105758						
ANR	1105834	Symbol	EINVAL		1105758						
ANR	1105835	Symbol	* avctx		1105758						
ANR	1105836	Symbol	avctx -> sample_fmt		1105758						
ANR	1105837	Symbol	c		1105758						
ANR	1105838	Symbol	avctx -> coded_frame		1105758						
ANR	1105839	Symbol	AVERROR		1105758						
ANR	1105840	Symbol	& c -> frame		1105758						
ANR	1105841	Symbol	avctx		1105758						
ANR	1105842	Symbol	avctx -> priv_data		1105758						
ANR	1105843	Symbol	AV_SAMPLE_FMT_S16		1105758						
ANR	1105844	Symbol	AV_LOG_INFO		1105758						
