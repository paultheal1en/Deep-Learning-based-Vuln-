command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8618799	File	/home/p4ultr4n/workplace/ReVeal/raw_code/unassign_storage_01_1.c								
ANR	8618800	Function	unassign_storage	1:0:0:1680							
ANR	8618801	FunctionDef	unassign_storage (SCCB * sccb)		8618800	0					
ANR	8618802	CompoundStatement		3:0:42:1680	8618800	0					
ANR	8618803	IdentifierDeclStatement	MemoryRegion * mr = NULL ;	5:4:49:72	8618800	0	True				
ANR	8618804	IdentifierDecl	* mr = NULL		8618800	0					
ANR	8618805	IdentifierDeclType	MemoryRegion *		8618800	0					
ANR	8618806	Identifier	mr		8618800	1					
ANR	8618807	AssignmentExpression	* mr = NULL		8618800	2		=			
ANR	8618808	Identifier	NULL		8618800	0					
ANR	8618809	Identifier	NULL		8618800	1					
ANR	8618810	IdentifierDeclStatement	AssignStorage * assign_info = ( AssignStorage * ) sccb ;	7:4:79:130	8618800	1	True				
ANR	8618811	IdentifierDecl	* assign_info = ( AssignStorage * ) sccb		8618800	0					
ANR	8618812	IdentifierDeclType	AssignStorage *		8618800	0					
ANR	8618813	Identifier	assign_info		8618800	1					
ANR	8618814	AssignmentExpression	* assign_info = ( AssignStorage * ) sccb		8618800	2		=			
ANR	8618815	Identifier	assign_info		8618800	0					
ANR	8618816	CastExpression	( AssignStorage * ) sccb		8618800	1					
ANR	8618817	CastTarget	AssignStorage *		8618800	0					
ANR	8618818	Identifier	sccb		8618800	1					
ANR	8618819	IdentifierDeclStatement	sclpMemoryHotplugDev * mhd = get_sclp_memory_hotplug_dev ( ) ;	9:4:137:194	8618800	2	True				
ANR	8618820	IdentifierDecl	* mhd = get_sclp_memory_hotplug_dev ( )		8618800	0					
ANR	8618821	IdentifierDeclType	sclpMemoryHotplugDev *		8618800	0					
ANR	8618822	Identifier	mhd		8618800	1					
ANR	8618823	AssignmentExpression	* mhd = get_sclp_memory_hotplug_dev ( )		8618800	2		=			
ANR	8618824	Identifier	mhd		8618800	0					
ANR	8618825	CallExpression	get_sclp_memory_hotplug_dev ( )		8618800	1					
ANR	8618826	Callee	get_sclp_memory_hotplug_dev		8618800	0					
ANR	8618827	Identifier	get_sclp_memory_hotplug_dev		8618800	0					
ANR	8618828	ArgumentList			8618800	1					
ANR	8618829	ExpressionStatement	assert ( mhd )	11:4:201:212	8618800	3	True				
ANR	8618830	CallExpression	assert ( mhd )		8618800	0					
ANR	8618831	Callee	assert		8618800	0					
ANR	8618832	Identifier	assert		8618800	0					
ANR	8618833	ArgumentList	mhd		8618800	1					
ANR	8618834	Argument	mhd		8618800	0					
ANR	8618835	Identifier	mhd		8618800	0					
ANR	8618836	IdentifierDeclStatement	ram_addr_t unassign_addr = ( assign_info -> rn - 1 ) * mhd -> rzm ;	13:4:219:278	8618800	4	True				
ANR	8618837	IdentifierDecl	unassign_addr = ( assign_info -> rn - 1 ) * mhd -> rzm		8618800	0					
ANR	8618838	IdentifierDeclType	ram_addr_t		8618800	0					
ANR	8618839	Identifier	unassign_addr		8618800	1					
ANR	8618840	AssignmentExpression	unassign_addr = ( assign_info -> rn - 1 ) * mhd -> rzm		8618800	2		=			
ANR	8618841	Identifier	unassign_addr		8618800	0					
ANR	8618842	MultiplicativeExpression	( assign_info -> rn - 1 ) * mhd -> rzm		8618800	1		*			
ANR	8618843	AdditiveExpression	assign_info -> rn - 1		8618800	0		-			
ANR	8618844	PtrMemberAccess	assign_info -> rn		8618800	0					
ANR	8618845	Identifier	assign_info		8618800	0					
ANR	8618846	Identifier	rn		8618800	1					
ANR	8618847	PrimaryExpression	1		8618800	1					
ANR	8618848	PtrMemberAccess	mhd -> rzm		8618800	1					
ANR	8618849	Identifier	mhd		8618800	0					
ANR	8618850	Identifier	rzm		8618800	1					
ANR	8618851	IdentifierDeclStatement	MemoryRegion * sysmem = get_system_memory ( ) ;	15:4:285:327	8618800	5	True				
ANR	8618852	IdentifierDecl	* sysmem = get_system_memory ( )		8618800	0					
ANR	8618853	IdentifierDeclType	MemoryRegion *		8618800	0					
ANR	8618854	Identifier	sysmem		8618800	1					
ANR	8618855	AssignmentExpression	* sysmem = get_system_memory ( )		8618800	2		=			
ANR	8618856	Identifier	sysmem		8618800	0					
ANR	8618857	CallExpression	get_system_memory ( )		8618800	1					
ANR	8618858	Callee	get_system_memory		8618800	0					
ANR	8618859	Identifier	get_system_memory		8618800	0					
ANR	8618860	ArgumentList			8618800	1					
ANR	8618861	IfStatement	if ( ( unassign_addr % MEM_SECTION_SIZE == 0 ) && ( unassign_addr >= mhd -> padded_ram_size ) )		8618800	6					
ANR	8618862	Condition	( unassign_addr % MEM_SECTION_SIZE == 0 ) && ( unassign_addr >= mhd -> padded_ram_size )	21:8:387:477	8618800	0	True				
ANR	8618863	AndExpression	( unassign_addr % MEM_SECTION_SIZE == 0 ) && ( unassign_addr >= mhd -> padded_ram_size )		8618800	0		&&			
ANR	8618864	EqualityExpression	unassign_addr % MEM_SECTION_SIZE == 0		8618800	0		==			
ANR	8618865	MultiplicativeExpression	unassign_addr % MEM_SECTION_SIZE		8618800	0		%			
ANR	8618866	Identifier	unassign_addr		8618800	0					
ANR	8618867	Identifier	MEM_SECTION_SIZE		8618800	1					
ANR	8618868	PrimaryExpression	0		8618800	1					
ANR	8618869	RelationalExpression	unassign_addr >= mhd -> padded_ram_size		8618800	1		>=			
ANR	8618870	Identifier	unassign_addr		8618800	0					
ANR	8618871	PtrMemberAccess	mhd -> padded_ram_size		8618800	1					
ANR	8618872	Identifier	mhd		8618800	0					
ANR	8618873	Identifier	padded_ram_size		8618800	1					
ANR	8618874	CompoundStatement		21:49:437:437	8618800	1					
ANR	8618875	ExpressionStatement	mhd -> standby_state_map [ ( unassign_addr - mhd -> padded_ram_size ) / MEM_SECTION_SIZE ] = 0	25:8:491:604	8618800	0	True				
ANR	8618876	AssignmentExpression	mhd -> standby_state_map [ ( unassign_addr - mhd -> padded_ram_size ) / MEM_SECTION_SIZE ] = 0		8618800	0		=			
ANR	8618877	ArrayIndexing	mhd -> standby_state_map [ ( unassign_addr - mhd -> padded_ram_size ) / MEM_SECTION_SIZE ]		8618800	0					
ANR	8618878	PtrMemberAccess	mhd -> standby_state_map		8618800	0					
ANR	8618879	Identifier	mhd		8618800	0					
ANR	8618880	Identifier	standby_state_map		8618800	1					
ANR	8618881	MultiplicativeExpression	( unassign_addr - mhd -> padded_ram_size ) / MEM_SECTION_SIZE		8618800	1		/			
ANR	8618882	AdditiveExpression	unassign_addr - mhd -> padded_ram_size		8618800	0		-			
ANR	8618883	Identifier	unassign_addr		8618800	0					
ANR	8618884	PtrMemberAccess	mhd -> padded_ram_size		8618800	1					
ANR	8618885	Identifier	mhd		8618800	0					
ANR	8618886	Identifier	padded_ram_size		8618800	1					
ANR	8618887	Identifier	MEM_SECTION_SIZE		8618800	1					
ANR	8618888	PrimaryExpression	0		8618800	1					
ANR	8618889	ExpressionStatement	"mr = memory_region_find ( sysmem , unassign_addr , 1 ) . mr"	33:8:680:732	8618800	1	True				
ANR	8618890	AssignmentExpression	"mr = memory_region_find ( sysmem , unassign_addr , 1 ) . mr"		8618800	0		=			
ANR	8618891	Identifier	mr		8618800	0					
ANR	8618892	MemberAccess	"memory_region_find ( sysmem , unassign_addr , 1 ) . mr"		8618800	1					
ANR	8618893	CallExpression	"memory_region_find ( sysmem , unassign_addr , 1 )"		8618800	0					
ANR	8618894	Callee	memory_region_find		8618800	0					
ANR	8618895	Identifier	memory_region_find		8618800	0					
ANR	8618896	ArgumentList	sysmem		8618800	1					
ANR	8618897	Argument	sysmem		8618800	0					
ANR	8618898	Identifier	sysmem		8618800	0					
ANR	8618899	Argument	unassign_addr		8618800	1					
ANR	8618900	Identifier	unassign_addr		8618800	0					
ANR	8618901	Argument	1		8618800	2					
ANR	8618902	PrimaryExpression	1		8618800	0					
ANR	8618903	Identifier	mr		8618800	1					
ANR	8618904	IfStatement	if ( mr )		8618800	2					
ANR	8618905	Condition	mr	35:12:747:748	8618800	0	True				
ANR	8618906	Identifier	mr		8618800	0					
ANR	8618907	CompoundStatement		39:12:778:987	8618800	1					
ANR	8618908	IdentifierDeclStatement	int i ;	37:12:766:771	8618800	0	True				
ANR	8618909	IdentifierDecl	i		8618800	0					
ANR	8618910	IdentifierDeclType	int		8618800	0					
ANR	8618911	Identifier	i		8618800	1					
ANR	8618912	IdentifierDeclStatement	int is_removable = 1 ;	39:12:786:806	8618800	1	True				
ANR	8618913	IdentifierDecl	is_removable = 1		8618800	0					
ANR	8618914	IdentifierDeclType	int		8618800	0					
ANR	8618915	Identifier	is_removable		8618800	1					
ANR	8618916	AssignmentExpression	is_removable = 1		8618800	2		=			
ANR	8618917	Identifier	is_removable		8618800	0					
ANR	8618918	PrimaryExpression	1		8618800	1					
ANR	8618919	IdentifierDeclStatement	ram_addr_t map_offset = ( unassign_addr - mhd -> padded_ram_size - ( unassign_addr - mhd -> padded_ram_size ) % mhd -> standby_subregion_size ) ;	41:12:821:1030	8618800	2	True				
ANR	8618920	IdentifierDecl	map_offset = ( unassign_addr - mhd -> padded_ram_size - ( unassign_addr - mhd -> padded_ram_size ) % mhd -> standby_subregion_size )		8618800	0					
ANR	8618921	IdentifierDeclType	ram_addr_t		8618800	0					
ANR	8618922	Identifier	map_offset		8618800	1					
ANR	8618923	AssignmentExpression	map_offset = ( unassign_addr - mhd -> padded_ram_size - ( unassign_addr - mhd -> padded_ram_size ) % mhd -> standby_subregion_size )		8618800	2		=			
ANR	8618924	Identifier	map_offset		8618800	0					
ANR	8618925	AdditiveExpression	unassign_addr - mhd -> padded_ram_size - ( unassign_addr - mhd -> padded_ram_size ) % mhd -> standby_subregion_size		8618800	1		-			
ANR	8618926	Identifier	unassign_addr		8618800	0					
ANR	8618927	AdditiveExpression	mhd -> padded_ram_size - ( unassign_addr - mhd -> padded_ram_size ) % mhd -> standby_subregion_size		8618800	1		-			
ANR	8618928	PtrMemberAccess	mhd -> padded_ram_size		8618800	0					
ANR	8618929	Identifier	mhd		8618800	0					
ANR	8618930	Identifier	padded_ram_size		8618800	1					
ANR	8618931	MultiplicativeExpression	( unassign_addr - mhd -> padded_ram_size ) % mhd -> standby_subregion_size		8618800	1		%			
ANR	8618932	AdditiveExpression	unassign_addr - mhd -> padded_ram_size		8618800	0		-			
ANR	8618933	Identifier	unassign_addr		8618800	0					
ANR	8618934	PtrMemberAccess	mhd -> padded_ram_size		8618800	1					
ANR	8618935	Identifier	mhd		8618800	0					
ANR	8618936	Identifier	padded_ram_size		8618800	1					
ANR	8618937	PtrMemberAccess	mhd -> standby_subregion_size		8618800	1					
ANR	8618938	Identifier	mhd		8618800	0					
ANR	8618939	Identifier	standby_subregion_size		8618800	1					
ANR	8618940	ForStatement	for ( i = 0 ; i < ( mhd -> standby_subregion_size / MEM_SECTION_SIZE ) ; i ++ )		8618800	3					
ANR	8618941	ForInit	i = 0 ;	49:17:1122:1127	8618800	0	True				
ANR	8618942	AssignmentExpression	i = 0		8618800	0		=			
ANR	8618943	Identifier	i		8618800	0					
ANR	8618944	PrimaryExpression	0		8618800	1					
ANR	8618945	Condition	i < ( mhd -> standby_subregion_size / MEM_SECTION_SIZE )	51:17:1147:1198	8618800	1	True				
ANR	8618946	RelationalExpression	i < ( mhd -> standby_subregion_size / MEM_SECTION_SIZE )		8618800	0		<			
ANR	8618947	Identifier	i		8618800	0					
ANR	8618948	MultiplicativeExpression	mhd -> standby_subregion_size / MEM_SECTION_SIZE		8618800	1		/			
ANR	8618949	PtrMemberAccess	mhd -> standby_subregion_size		8618800	0					
ANR	8618950	Identifier	mhd		8618800	0					
ANR	8618951	Identifier	standby_subregion_size		8618800	1					
ANR	8618952	Identifier	MEM_SECTION_SIZE		8618800	1					
ANR	8618953	PostIncDecOperationExpression	i ++	53:17:1219:1221	8618800	2	True				
ANR	8618954	Identifier	i		8618800	0					
ANR	8618955	IncDec	++		8618800	1					
ANR	8618956	CompoundStatement		51:22:1181:1181	8618800	3					
ANR	8618957	IfStatement	if ( mhd -> standby_state_map [ i + map_offset / MEM_SECTION_SIZE ] )		8618800	0					
ANR	8618958	Condition	mhd -> standby_state_map [ i + map_offset / MEM_SECTION_SIZE ]	57:20:1249:1305	8618800	0	True				
ANR	8618959	ArrayIndexing	mhd -> standby_state_map [ i + map_offset / MEM_SECTION_SIZE ]		8618800	0					
ANR	8618960	PtrMemberAccess	mhd -> standby_state_map		8618800	0					
ANR	8618961	Identifier	mhd		8618800	0					
ANR	8618962	Identifier	standby_state_map		8618800	1					
ANR	8618963	AdditiveExpression	i + map_offset / MEM_SECTION_SIZE		8618800	1		+			
ANR	8618964	Identifier	i		8618800	0					
ANR	8618965	MultiplicativeExpression	map_offset / MEM_SECTION_SIZE		8618800	1		/			
ANR	8618966	Identifier	map_offset		8618800	0					
ANR	8618967	Identifier	MEM_SECTION_SIZE		8618800	1					
ANR	8618968	CompoundStatement		55:79:1265:1265	8618800	1					
ANR	8618969	ExpressionStatement	is_removable = 0	59:20:1331:1347	8618800	0	True				
ANR	8618970	AssignmentExpression	is_removable = 0		8618800	0		=			
ANR	8618971	Identifier	is_removable		8618800	0					
ANR	8618972	PrimaryExpression	0		8618800	1					
ANR	8618973	BreakStatement	break ;	61:20:1370:1375	8618800	1	True				
ANR	8618974	IfStatement	if ( is_removable )		8618800	4					
ANR	8618975	Condition	is_removable	67:16:1428:1439	8618800	0	True				
ANR	8618976	Identifier	is_removable		8618800	0					
ANR	8618977	CompoundStatement		65:30:1399:1399	8618800	1					
ANR	8618978	ExpressionStatement	"memory_region_del_subregion ( sysmem , mr )"	69:16:1461:1500	8618800	0	True				
ANR	8618979	CallExpression	"memory_region_del_subregion ( sysmem , mr )"		8618800	0					
ANR	8618980	Callee	memory_region_del_subregion		8618800	0					
ANR	8618981	Identifier	memory_region_del_subregion		8618800	0					
ANR	8618982	ArgumentList	sysmem		8618800	1					
ANR	8618983	Argument	sysmem		8618800	0					
ANR	8618984	Identifier	sysmem		8618800	0					
ANR	8618985	Argument	mr		8618800	1					
ANR	8618986	Identifier	mr		8618800	0					
ANR	8618987	ExpressionStatement	object_unparent ( OBJECT ( mr ) )	71:16:1519:1546	8618800	1	True				
ANR	8618988	CallExpression	object_unparent ( OBJECT ( mr ) )		8618800	0					
ANR	8618989	Callee	object_unparent		8618800	0					
ANR	8618990	Identifier	object_unparent		8618800	0					
ANR	8618991	ArgumentList	OBJECT ( mr )		8618800	1					
ANR	8618992	Argument	OBJECT ( mr )		8618800	0					
ANR	8618993	CallExpression	OBJECT ( mr )		8618800	0					
ANR	8618994	Callee	OBJECT		8618800	0					
ANR	8618995	Identifier	OBJECT		8618800	0					
ANR	8618996	ArgumentList	mr		8618800	1					
ANR	8618997	Argument	mr		8618800	0					
ANR	8618998	Identifier	mr		8618800	0					
ANR	8618999	ExpressionStatement	g_free ( mr )	73:16:1565:1575	8618800	2	True				
ANR	8619000	CallExpression	g_free ( mr )		8618800	0					
ANR	8619001	Callee	g_free		8618800	0					
ANR	8619002	Identifier	g_free		8618800	0					
ANR	8619003	ArgumentList	mr		8618800	1					
ANR	8619004	Argument	mr		8618800	0					
ANR	8619005	Identifier	mr		8618800	0					
ANR	8619006	ExpressionStatement	sccb -> h . response_code = cpu_to_be16 ( SCLP_RC_NORMAL_COMPLETION )	81:4:1615:1677	8618800	7	True				
ANR	8619007	AssignmentExpression	sccb -> h . response_code = cpu_to_be16 ( SCLP_RC_NORMAL_COMPLETION )		8618800	0		=			
ANR	8619008	MemberAccess	sccb -> h . response_code		8618800	0					
ANR	8619009	PtrMemberAccess	sccb -> h		8618800	0					
ANR	8619010	Identifier	sccb		8618800	0					
ANR	8619011	Identifier	h		8618800	1					
ANR	8619012	Identifier	response_code		8618800	1					
ANR	8619013	CallExpression	cpu_to_be16 ( SCLP_RC_NORMAL_COMPLETION )		8618800	1					
ANR	8619014	Callee	cpu_to_be16		8618800	0					
ANR	8619015	Identifier	cpu_to_be16		8618800	0					
ANR	8619016	ArgumentList	SCLP_RC_NORMAL_COMPLETION		8618800	1					
ANR	8619017	Argument	SCLP_RC_NORMAL_COMPLETION		8618800	0					
ANR	8619018	Identifier	SCLP_RC_NORMAL_COMPLETION		8618800	0					
ANR	8619019	ReturnType	static void		8618800	1					
ANR	8619020	Identifier	unassign_storage		8618800	2					
ANR	8619021	ParameterList	SCCB * sccb		8618800	3					
ANR	8619022	Parameter	SCCB * sccb	1:29:29:38	8618800	0	True				
ANR	8619023	ParameterType	SCCB *		8618800	0					
ANR	8619024	Identifier	sccb		8618800	1					
ANR	8619025	CFGEntryNode	ENTRY		8618800		True				
ANR	8619026	CFGExitNode	EXIT		8618800		True				
ANR	8619027	Symbol	* mhd -> padded_ram_size		8618800						
ANR	8619028	Symbol	memory_region_find		8618800						
ANR	8619029	Symbol	is_removable		8618800						
ANR	8619030	Symbol	* sccb		8618800						
ANR	8619031	Symbol	mhd -> standby_subregion_size		8618800						
ANR	8619032	Symbol	mhd -> padded_ram_size		8618800						
ANR	8619033	Symbol	SCLP_RC_NORMAL_COMPLETION		8618800						
ANR	8619034	Symbol	map_offset		8618800						
ANR	8619035	Symbol	* MEM_SECTION_SIZE		8618800						
ANR	8619036	Symbol	get_sclp_memory_hotplug_dev		8618800						
ANR	8619037	Symbol	* mhd		8618800						
ANR	8619038	Symbol	* map_offset		8618800						
ANR	8619039	Symbol	sccb		8618800						
ANR	8619040	Symbol	* mhd -> standby_state_map		8618800						
ANR	8619041	Symbol	cpu_to_be16		8618800						
ANR	8619042	Symbol	mhd -> rzm		8618800						
ANR	8619043	Symbol	get_system_memory		8618800						
ANR	8619044	Symbol	NULL		8618800						
ANR	8619045	Symbol	sccb -> h		8618800						
ANR	8619046	Symbol	mr		8618800						
ANR	8619047	Symbol	mhd		8618800						
ANR	8619048	Symbol	sccb -> h . response_code		8618800						
ANR	8619049	Symbol	i		8618800						
ANR	8619050	Symbol	mhd -> standby_state_map		8618800						
ANR	8619051	Symbol	OBJECT		8618800						
ANR	8619052	Symbol	assign_info -> rn		8618800						
ANR	8619053	Symbol	* i		8618800						
ANR	8619054	Symbol	sysmem		8618800						
ANR	8619055	Symbol	MEM_SECTION_SIZE		8618800						
ANR	8619056	Symbol	unassign_addr		8618800						
ANR	8619057	Symbol	* assign_info		8618800						
ANR	8619058	Symbol	* * mhd		8618800						
ANR	8619059	Symbol	assign_info		8618800						
ANR	8619060	Symbol	* unassign_addr		8618800						
ANR	8619061	Symbol	"memory_region_find ( sysmem , unassign_addr , 1 ) . mr"		8618800						
