command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	549459	File	/home/p4ultr4n/workplace/ReVeal/raw_code/amr_nb_encode_init_1.c								
ANR	549460	Function	amr_nb_encode_init	1:0:0:790							
ANR	549461	FunctionDef	amr_nb_encode_init (AVCodecContext * avctx)		549460	0					
ANR	549462	CompoundStatement		3:0:62:790	549460	0					
ANR	549463	IdentifierDeclStatement	AMRContext * s = avctx -> priv_data ;	5:4:69:101	549460	0	True				
ANR	549464	IdentifierDecl	* s = avctx -> priv_data		549460	0					
ANR	549465	IdentifierDeclType	AMRContext *		549460	0					
ANR	549466	Identifier	s		549460	1					
ANR	549467	AssignmentExpression	* s = avctx -> priv_data		549460	2		=			
ANR	549468	Identifier	s		549460	0					
ANR	549469	PtrMemberAccess	avctx -> priv_data		549460	1					
ANR	549470	Identifier	avctx		549460	0					
ANR	549471	Identifier	priv_data		549460	1					
ANR	549472	IfStatement	if ( avctx -> sample_rate != 8000 )		549460	1					
ANR	549473	Condition	avctx -> sample_rate != 8000	9:8:114:139	549460	0	True				
ANR	549474	EqualityExpression	avctx -> sample_rate != 8000		549460	0		!=			
ANR	549475	PtrMemberAccess	avctx -> sample_rate		549460	0					
ANR	549476	Identifier	avctx		549460	0					
ANR	549477	Identifier	sample_rate		549460	1					
ANR	549478	PrimaryExpression	8000		549460	1					
ANR	549479	CompoundStatement		7:36:79:79	549460	1					
ANR	549480	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Only 8000Hz sample rate supported\\n"" )"	11:8:153:219	549460	0	True				
ANR	549481	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Only 8000Hz sample rate supported\\n"" )"		549460	0					
ANR	549482	Callee	av_log		549460	0					
ANR	549483	Identifier	av_log		549460	0					
ANR	549484	ArgumentList	avctx		549460	1					
ANR	549485	Argument	avctx		549460	0					
ANR	549486	Identifier	avctx		549460	0					
ANR	549487	Argument	AV_LOG_ERROR		549460	1					
ANR	549488	Identifier	AV_LOG_ERROR		549460	0					
ANR	549489	Argument	"""Only 8000Hz sample rate supported\\n"""		549460	2					
ANR	549490	PrimaryExpression	"""Only 8000Hz sample rate supported\\n"""		549460	0					
ANR	549491	ReturnStatement	return AVERROR ( ENOSYS ) ;	13:8:230:252	549460	1	True				
ANR	549492	CallExpression	AVERROR ( ENOSYS )		549460	0					
ANR	549493	Callee	AVERROR		549460	0					
ANR	549494	Identifier	AVERROR		549460	0					
ANR	549495	ArgumentList	ENOSYS		549460	1					
ANR	549496	Argument	ENOSYS		549460	0					
ANR	549497	Identifier	ENOSYS		549460	0					
ANR	549498	IfStatement	if ( avctx -> channels != 1 )		549460	2					
ANR	549499	Condition	avctx -> channels != 1	19:8:272:291	549460	0	True				
ANR	549500	EqualityExpression	avctx -> channels != 1		549460	0		!=			
ANR	549501	PtrMemberAccess	avctx -> channels		549460	0					
ANR	549502	Identifier	avctx		549460	0					
ANR	549503	Identifier	channels		549460	1					
ANR	549504	PrimaryExpression	1		549460	1					
ANR	549505	CompoundStatement		17:30:231:231	549460	1					
ANR	549506	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Only mono supported\\n"" )"	21:8:305:357	549460	0	True				
ANR	549507	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Only mono supported\\n"" )"		549460	0					
ANR	549508	Callee	av_log		549460	0					
ANR	549509	Identifier	av_log		549460	0					
ANR	549510	ArgumentList	avctx		549460	1					
ANR	549511	Argument	avctx		549460	0					
ANR	549512	Identifier	avctx		549460	0					
ANR	549513	Argument	AV_LOG_ERROR		549460	1					
ANR	549514	Identifier	AV_LOG_ERROR		549460	0					
ANR	549515	Argument	"""Only mono supported\\n"""		549460	2					
ANR	549516	PrimaryExpression	"""Only mono supported\\n"""		549460	0					
ANR	549517	ReturnStatement	return AVERROR ( ENOSYS ) ;	23:8:368:390	549460	1	True				
ANR	549518	CallExpression	AVERROR ( ENOSYS )		549460	0					
ANR	549519	Callee	AVERROR		549460	0					
ANR	549520	Identifier	AVERROR		549460	0					
ANR	549521	ArgumentList	ENOSYS		549460	1					
ANR	549522	Argument	ENOSYS		549460	0					
ANR	549523	Identifier	ENOSYS		549460	0					
ANR	549524	ExpressionStatement	avctx -> frame_size = 160	29:4:406:430	549460	3	True				
ANR	549525	AssignmentExpression	avctx -> frame_size = 160		549460	0		=			
ANR	549526	PtrMemberAccess	avctx -> frame_size		549460	0					
ANR	549527	Identifier	avctx		549460	0					
ANR	549528	Identifier	frame_size		549460	1					
ANR	549529	PrimaryExpression	160		549460	1					
ANR	549530	ExpressionStatement	avctx -> coded_frame = avcodec_alloc_frame ( )	31:4:437:479	549460	4	True				
ANR	549531	AssignmentExpression	avctx -> coded_frame = avcodec_alloc_frame ( )		549460	0		=			
ANR	549532	PtrMemberAccess	avctx -> coded_frame		549460	0					
ANR	549533	Identifier	avctx		549460	0					
ANR	549534	Identifier	coded_frame		549460	1					
ANR	549535	CallExpression	avcodec_alloc_frame ( )		549460	1					
ANR	549536	Callee	avcodec_alloc_frame		549460	0					
ANR	549537	Identifier	avcodec_alloc_frame		549460	0					
ANR	549538	ArgumentList			549460	1					
ANR	549539	ExpressionStatement	s -> enc_state = Encoder_Interface_init ( s -> enc_dtx )	37:4:490:539	549460	5	True				
ANR	549540	AssignmentExpression	s -> enc_state = Encoder_Interface_init ( s -> enc_dtx )		549460	0		=			
ANR	549541	PtrMemberAccess	s -> enc_state		549460	0					
ANR	549542	Identifier	s		549460	0					
ANR	549543	Identifier	enc_state		549460	1					
ANR	549544	CallExpression	Encoder_Interface_init ( s -> enc_dtx )		549460	1					
ANR	549545	Callee	Encoder_Interface_init		549460	0					
ANR	549546	Identifier	Encoder_Interface_init		549460	0					
ANR	549547	ArgumentList	s -> enc_dtx		549460	1					
ANR	549548	Argument	s -> enc_dtx		549460	0					
ANR	549549	PtrMemberAccess	s -> enc_dtx		549460	0					
ANR	549550	Identifier	s		549460	0					
ANR	549551	Identifier	enc_dtx		549460	1					
ANR	549552	IfStatement	if ( ! s -> enc_state )		549460	6					
ANR	549553	Condition	! s -> enc_state	39:8:550:562	549460	0	True				
ANR	549554	UnaryOperationExpression	! s -> enc_state		549460	0					
ANR	549555	UnaryOperator	!		549460	0					
ANR	549556	PtrMemberAccess	s -> enc_state		549460	1					
ANR	549557	Identifier	s		549460	0					
ANR	549558	Identifier	enc_state		549460	1					
ANR	549559	CompoundStatement		37:23:502:502	549460	1					
ANR	549560	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Encoder_Interface_init error\\n"" )"	41:8:576:637	549460	0	True				
ANR	549561	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Encoder_Interface_init error\\n"" )"		549460	0					
ANR	549562	Callee	av_log		549460	0					
ANR	549563	Identifier	av_log		549460	0					
ANR	549564	ArgumentList	avctx		549460	1					
ANR	549565	Argument	avctx		549460	0					
ANR	549566	Identifier	avctx		549460	0					
ANR	549567	Argument	AV_LOG_ERROR		549460	1					
ANR	549568	Identifier	AV_LOG_ERROR		549460	0					
ANR	549569	Argument	"""Encoder_Interface_init error\\n"""		549460	2					
ANR	549570	PrimaryExpression	"""Encoder_Interface_init error\\n"""		549460	0					
ANR	549571	ReturnStatement	return - 1 ;	44:8:649:658	549460	1	True				
ANR	549572	UnaryOperationExpression	- 1		549460	0					
ANR	549573	UnaryOperator	-		549460	0					
ANR	549574	PrimaryExpression	1		549460	1					
ANR	549575	ExpressionStatement	"s -> enc_mode = get_bitrate_mode ( avctx -> bit_rate , avctx )"	50:4:674:731	549460	7	True				
ANR	549576	AssignmentExpression	"s -> enc_mode = get_bitrate_mode ( avctx -> bit_rate , avctx )"		549460	0		=			
ANR	549577	PtrMemberAccess	s -> enc_mode		549460	0					
ANR	549578	Identifier	s		549460	0					
ANR	549579	Identifier	enc_mode		549460	1					
ANR	549580	CallExpression	"get_bitrate_mode ( avctx -> bit_rate , avctx )"		549460	1					
ANR	549581	Callee	get_bitrate_mode		549460	0					
ANR	549582	Identifier	get_bitrate_mode		549460	0					
ANR	549583	ArgumentList	avctx -> bit_rate		549460	1					
ANR	549584	Argument	avctx -> bit_rate		549460	0					
ANR	549585	PtrMemberAccess	avctx -> bit_rate		549460	0					
ANR	549586	Identifier	avctx		549460	0					
ANR	549587	Identifier	bit_rate		549460	1					
ANR	549588	Argument	avctx		549460	1					
ANR	549589	Identifier	avctx		549460	0					
ANR	549590	ExpressionStatement	s -> enc_bitrate = avctx -> bit_rate	52:4:738:770	549460	8	True				
ANR	549591	AssignmentExpression	s -> enc_bitrate = avctx -> bit_rate		549460	0		=			
ANR	549592	PtrMemberAccess	s -> enc_bitrate		549460	0					
ANR	549593	Identifier	s		549460	0					
ANR	549594	Identifier	enc_bitrate		549460	1					
ANR	549595	PtrMemberAccess	avctx -> bit_rate		549460	1					
ANR	549596	Identifier	avctx		549460	0					
ANR	549597	Identifier	bit_rate		549460	1					
ANR	549598	ReturnStatement	return 0 ;	56:4:779:787	549460	9	True				
ANR	549599	PrimaryExpression	0		549460	0					
ANR	549600	ReturnType	static av_cold int		549460	1					
ANR	549601	Identifier	amr_nb_encode_init		549460	2					
ANR	549602	ParameterList	AVCodecContext * avctx		549460	3					
ANR	549603	Parameter	AVCodecContext * avctx	1:38:38:58	549460	0	True				
ANR	549604	ParameterType	AVCodecContext *		549460	0					
ANR	549605	Identifier	avctx		549460	1					
ANR	549606	CFGEntryNode	ENTRY		549460		True				
ANR	549607	CFGExitNode	EXIT		549460		True				
ANR	549608	Symbol	avcodec_alloc_frame		549460						
ANR	549609	Symbol	Encoder_Interface_init		549460						
ANR	549610	Symbol	AV_LOG_ERROR		549460						
ANR	549611	Symbol	get_bitrate_mode		549460						
ANR	549612	Symbol	ENOSYS		549460						
ANR	549613	Symbol	avctx -> priv_data		549460						
ANR	549614	Symbol	avctx -> sample_rate		549460						
ANR	549615	Symbol	s -> enc_dtx		549460						
ANR	549616	Symbol	avctx -> channels		549460						
ANR	549617	Symbol	s -> enc_bitrate		549460						
ANR	549618	Symbol	* avctx		549460						
ANR	549619	Symbol	s		549460						
ANR	549620	Symbol	avctx -> bit_rate		549460						
ANR	549621	Symbol	avctx -> coded_frame		549460						
ANR	549622	Symbol	s -> enc_state		549460						
ANR	549623	Symbol	s -> enc_mode		549460						
ANR	549624	Symbol	avctx -> frame_size		549460						
ANR	549625	Symbol	AVERROR		549460						
ANR	549626	Symbol	avctx		549460						
ANR	549627	Symbol	* s		549460						
