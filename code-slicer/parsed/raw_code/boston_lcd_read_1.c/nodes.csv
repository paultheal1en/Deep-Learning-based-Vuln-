command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1119039	File	/home/p4ultr4n/workplace/ReVeal/raw_code/boston_lcd_read_1.c								
ANR	1119040	Function	boston_lcd_read	1:0:0:886							
ANR	1119041	FunctionDef	"boston_lcd_read (void * opaque , hwaddr addr , unsigned size)"		1119040	0					
ANR	1119042	CompoundStatement		5:0:108:886	1119040	0					
ANR	1119043	IdentifierDeclStatement	BostonState * s = opaque ;	7:4:115:138	1119040	0	True				
ANR	1119044	IdentifierDecl	* s = opaque		1119040	0					
ANR	1119045	IdentifierDeclType	BostonState *		1119040	0					
ANR	1119046	Identifier	s		1119040	1					
ANR	1119047	AssignmentExpression	* s = opaque		1119040	2		=			
ANR	1119048	Identifier	opaque		1119040	0					
ANR	1119049	Identifier	opaque		1119040	1					
ANR	1119050	IdentifierDeclStatement	uint64_t val = 0 ;	9:4:145:161	1119040	1	True				
ANR	1119051	IdentifierDecl	val = 0		1119040	0					
ANR	1119052	IdentifierDeclType	uint64_t		1119040	0					
ANR	1119053	Identifier	val		1119040	1					
ANR	1119054	AssignmentExpression	val = 0		1119040	2		=			
ANR	1119055	Identifier	val		1119040	0					
ANR	1119056	PrimaryExpression	0		1119040	1					
ANR	1119057	SwitchStatement	switch ( size )		1119040	2					
ANR	1119058	Condition	size	13:12:178:181	1119040	0	True				
ANR	1119059	Identifier	size		1119040	0					
ANR	1119060	CompoundStatement		9:18:75:75	1119040	1					
ANR	1119061	Label	case 8 :	15:4:191:197	1119040	0	True				
ANR	1119062	ExpressionStatement	val |= ( uint64_t ) s -> lcd_content [ ( addr + 7 ) & 0x7 ] << 56	17:8:208:263	1119040	1	True				
ANR	1119063	AssignmentExpression	val |= ( uint64_t ) s -> lcd_content [ ( addr + 7 ) & 0x7 ] << 56		1119040	0		|=			
ANR	1119064	Identifier	val		1119040	0					
ANR	1119065	ShiftExpression	( uint64_t ) s -> lcd_content [ ( addr + 7 ) & 0x7 ] << 56		1119040	1		<<			
ANR	1119066	CastExpression	( uint64_t ) s -> lcd_content [ ( addr + 7 ) & 0x7 ]		1119040	0					
ANR	1119067	CastTarget	uint64_t		1119040	0					
ANR	1119068	ArrayIndexing	s -> lcd_content [ ( addr + 7 ) & 0x7 ]		1119040	1					
ANR	1119069	PtrMemberAccess	s -> lcd_content		1119040	0					
ANR	1119070	Identifier	s		1119040	0					
ANR	1119071	Identifier	lcd_content		1119040	1					
ANR	1119072	BitAndExpression	( addr + 7 ) & 0x7		1119040	1		&			
ANR	1119073	AdditiveExpression	addr + 7		1119040	0		+			
ANR	1119074	Identifier	addr		1119040	0					
ANR	1119075	PrimaryExpression	7		1119040	1					
ANR	1119076	PrimaryExpression	0x7		1119040	1					
ANR	1119077	PrimaryExpression	56		1119040	1					
ANR	1119078	ExpressionStatement	val |= ( uint64_t ) s -> lcd_content [ ( addr + 6 ) & 0x7 ] << 48	19:8:274:329	1119040	2	True				
ANR	1119079	AssignmentExpression	val |= ( uint64_t ) s -> lcd_content [ ( addr + 6 ) & 0x7 ] << 48		1119040	0		|=			
ANR	1119080	Identifier	val		1119040	0					
ANR	1119081	ShiftExpression	( uint64_t ) s -> lcd_content [ ( addr + 6 ) & 0x7 ] << 48		1119040	1		<<			
ANR	1119082	CastExpression	( uint64_t ) s -> lcd_content [ ( addr + 6 ) & 0x7 ]		1119040	0					
ANR	1119083	CastTarget	uint64_t		1119040	0					
ANR	1119084	ArrayIndexing	s -> lcd_content [ ( addr + 6 ) & 0x7 ]		1119040	1					
ANR	1119085	PtrMemberAccess	s -> lcd_content		1119040	0					
ANR	1119086	Identifier	s		1119040	0					
ANR	1119087	Identifier	lcd_content		1119040	1					
ANR	1119088	BitAndExpression	( addr + 6 ) & 0x7		1119040	1		&			
ANR	1119089	AdditiveExpression	addr + 6		1119040	0		+			
ANR	1119090	Identifier	addr		1119040	0					
ANR	1119091	PrimaryExpression	6		1119040	1					
ANR	1119092	PrimaryExpression	0x7		1119040	1					
ANR	1119093	PrimaryExpression	48		1119040	1					
ANR	1119094	ExpressionStatement	val |= ( uint64_t ) s -> lcd_content [ ( addr + 5 ) & 0x7 ] << 40	21:8:340:395	1119040	3	True				
ANR	1119095	AssignmentExpression	val |= ( uint64_t ) s -> lcd_content [ ( addr + 5 ) & 0x7 ] << 40		1119040	0		|=			
ANR	1119096	Identifier	val		1119040	0					
ANR	1119097	ShiftExpression	( uint64_t ) s -> lcd_content [ ( addr + 5 ) & 0x7 ] << 40		1119040	1		<<			
ANR	1119098	CastExpression	( uint64_t ) s -> lcd_content [ ( addr + 5 ) & 0x7 ]		1119040	0					
ANR	1119099	CastTarget	uint64_t		1119040	0					
ANR	1119100	ArrayIndexing	s -> lcd_content [ ( addr + 5 ) & 0x7 ]		1119040	1					
ANR	1119101	PtrMemberAccess	s -> lcd_content		1119040	0					
ANR	1119102	Identifier	s		1119040	0					
ANR	1119103	Identifier	lcd_content		1119040	1					
ANR	1119104	BitAndExpression	( addr + 5 ) & 0x7		1119040	1		&			
ANR	1119105	AdditiveExpression	addr + 5		1119040	0		+			
ANR	1119106	Identifier	addr		1119040	0					
ANR	1119107	PrimaryExpression	5		1119040	1					
ANR	1119108	PrimaryExpression	0x7		1119040	1					
ANR	1119109	PrimaryExpression	40		1119040	1					
ANR	1119110	ExpressionStatement	val |= ( uint64_t ) s -> lcd_content [ ( addr + 4 ) & 0x7 ] << 32	23:8:406:461	1119040	4	True				
ANR	1119111	AssignmentExpression	val |= ( uint64_t ) s -> lcd_content [ ( addr + 4 ) & 0x7 ] << 32		1119040	0		|=			
ANR	1119112	Identifier	val		1119040	0					
ANR	1119113	ShiftExpression	( uint64_t ) s -> lcd_content [ ( addr + 4 ) & 0x7 ] << 32		1119040	1		<<			
ANR	1119114	CastExpression	( uint64_t ) s -> lcd_content [ ( addr + 4 ) & 0x7 ]		1119040	0					
ANR	1119115	CastTarget	uint64_t		1119040	0					
ANR	1119116	ArrayIndexing	s -> lcd_content [ ( addr + 4 ) & 0x7 ]		1119040	1					
ANR	1119117	PtrMemberAccess	s -> lcd_content		1119040	0					
ANR	1119118	Identifier	s		1119040	0					
ANR	1119119	Identifier	lcd_content		1119040	1					
ANR	1119120	BitAndExpression	( addr + 4 ) & 0x7		1119040	1		&			
ANR	1119121	AdditiveExpression	addr + 4		1119040	0		+			
ANR	1119122	Identifier	addr		1119040	0					
ANR	1119123	PrimaryExpression	4		1119040	1					
ANR	1119124	PrimaryExpression	0x7		1119040	1					
ANR	1119125	PrimaryExpression	32		1119040	1					
ANR	1119126	Label	case 4 :	27:4:496:502	1119040	5	True				
ANR	1119127	ExpressionStatement	val |= ( uint64_t ) s -> lcd_content [ ( addr + 3 ) & 0x7 ] << 24	29:8:513:568	1119040	6	True				
ANR	1119128	AssignmentExpression	val |= ( uint64_t ) s -> lcd_content [ ( addr + 3 ) & 0x7 ] << 24		1119040	0		|=			
ANR	1119129	Identifier	val		1119040	0					
ANR	1119130	ShiftExpression	( uint64_t ) s -> lcd_content [ ( addr + 3 ) & 0x7 ] << 24		1119040	1		<<			
ANR	1119131	CastExpression	( uint64_t ) s -> lcd_content [ ( addr + 3 ) & 0x7 ]		1119040	0					
ANR	1119132	CastTarget	uint64_t		1119040	0					
ANR	1119133	ArrayIndexing	s -> lcd_content [ ( addr + 3 ) & 0x7 ]		1119040	1					
ANR	1119134	PtrMemberAccess	s -> lcd_content		1119040	0					
ANR	1119135	Identifier	s		1119040	0					
ANR	1119136	Identifier	lcd_content		1119040	1					
ANR	1119137	BitAndExpression	( addr + 3 ) & 0x7		1119040	1		&			
ANR	1119138	AdditiveExpression	addr + 3		1119040	0		+			
ANR	1119139	Identifier	addr		1119040	0					
ANR	1119140	PrimaryExpression	3		1119040	1					
ANR	1119141	PrimaryExpression	0x7		1119040	1					
ANR	1119142	PrimaryExpression	24		1119040	1					
ANR	1119143	ExpressionStatement	val |= ( uint64_t ) s -> lcd_content [ ( addr + 2 ) & 0x7 ] << 16	31:8:579:634	1119040	7	True				
ANR	1119144	AssignmentExpression	val |= ( uint64_t ) s -> lcd_content [ ( addr + 2 ) & 0x7 ] << 16		1119040	0		|=			
ANR	1119145	Identifier	val		1119040	0					
ANR	1119146	ShiftExpression	( uint64_t ) s -> lcd_content [ ( addr + 2 ) & 0x7 ] << 16		1119040	1		<<			
ANR	1119147	CastExpression	( uint64_t ) s -> lcd_content [ ( addr + 2 ) & 0x7 ]		1119040	0					
ANR	1119148	CastTarget	uint64_t		1119040	0					
ANR	1119149	ArrayIndexing	s -> lcd_content [ ( addr + 2 ) & 0x7 ]		1119040	1					
ANR	1119150	PtrMemberAccess	s -> lcd_content		1119040	0					
ANR	1119151	Identifier	s		1119040	0					
ANR	1119152	Identifier	lcd_content		1119040	1					
ANR	1119153	BitAndExpression	( addr + 2 ) & 0x7		1119040	1		&			
ANR	1119154	AdditiveExpression	addr + 2		1119040	0		+			
ANR	1119155	Identifier	addr		1119040	0					
ANR	1119156	PrimaryExpression	2		1119040	1					
ANR	1119157	PrimaryExpression	0x7		1119040	1					
ANR	1119158	PrimaryExpression	16		1119040	1					
ANR	1119159	Label	case 2 :	35:4:669:675	1119040	8	True				
ANR	1119160	ExpressionStatement	val |= ( uint64_t ) s -> lcd_content [ ( addr + 1 ) & 0x7 ] << 8	37:8:686:740	1119040	9	True				
ANR	1119161	AssignmentExpression	val |= ( uint64_t ) s -> lcd_content [ ( addr + 1 ) & 0x7 ] << 8		1119040	0		|=			
ANR	1119162	Identifier	val		1119040	0					
ANR	1119163	ShiftExpression	( uint64_t ) s -> lcd_content [ ( addr + 1 ) & 0x7 ] << 8		1119040	1		<<			
ANR	1119164	CastExpression	( uint64_t ) s -> lcd_content [ ( addr + 1 ) & 0x7 ]		1119040	0					
ANR	1119165	CastTarget	uint64_t		1119040	0					
ANR	1119166	ArrayIndexing	s -> lcd_content [ ( addr + 1 ) & 0x7 ]		1119040	1					
ANR	1119167	PtrMemberAccess	s -> lcd_content		1119040	0					
ANR	1119168	Identifier	s		1119040	0					
ANR	1119169	Identifier	lcd_content		1119040	1					
ANR	1119170	BitAndExpression	( addr + 1 ) & 0x7		1119040	1		&			
ANR	1119171	AdditiveExpression	addr + 1		1119040	0		+			
ANR	1119172	Identifier	addr		1119040	0					
ANR	1119173	PrimaryExpression	1		1119040	1					
ANR	1119174	PrimaryExpression	0x7		1119040	1					
ANR	1119175	PrimaryExpression	8		1119040	1					
ANR	1119176	Label	case 1 :	41:4:775:781	1119040	10	True				
ANR	1119177	ExpressionStatement	val |= ( uint64_t ) s -> lcd_content [ ( addr + 0 ) & 0x7 ]	43:8:792:841	1119040	11	True				
ANR	1119178	AssignmentExpression	val |= ( uint64_t ) s -> lcd_content [ ( addr + 0 ) & 0x7 ]		1119040	0		|=			
ANR	1119179	Identifier	val		1119040	0					
ANR	1119180	CastExpression	( uint64_t ) s -> lcd_content [ ( addr + 0 ) & 0x7 ]		1119040	1					
ANR	1119181	CastTarget	uint64_t		1119040	0					
ANR	1119182	ArrayIndexing	s -> lcd_content [ ( addr + 0 ) & 0x7 ]		1119040	1					
ANR	1119183	PtrMemberAccess	s -> lcd_content		1119040	0					
ANR	1119184	Identifier	s		1119040	0					
ANR	1119185	Identifier	lcd_content		1119040	1					
ANR	1119186	BitAndExpression	( addr + 0 ) & 0x7		1119040	1		&			
ANR	1119187	AdditiveExpression	addr + 0		1119040	0		+			
ANR	1119188	Identifier	addr		1119040	0					
ANR	1119189	PrimaryExpression	0		1119040	1					
ANR	1119190	PrimaryExpression	0x7		1119040	1					
ANR	1119191	BreakStatement	break ;	45:8:852:857	1119040	12	True				
ANR	1119192	ReturnStatement	return val ;	51:4:873:883	1119040	3	True				
ANR	1119193	Identifier	val		1119040	0					
ANR	1119194	ReturnType	static uint64_t		1119040	1					
ANR	1119195	Identifier	boston_lcd_read		1119040	2					
ANR	1119196	ParameterList	"void * opaque , hwaddr addr , unsigned size"		1119040	3					
ANR	1119197	Parameter	void * opaque	1:32:32:43	1119040	0	True				
ANR	1119198	ParameterType	void *		1119040	0					
ANR	1119199	Identifier	opaque		1119040	1					
ANR	1119200	Parameter	hwaddr addr	1:46:46:56	1119040	1	True				
ANR	1119201	ParameterType	hwaddr		1119040	0					
ANR	1119202	Identifier	addr		1119040	1					
ANR	1119203	Parameter	unsigned size	3:32:92:104	1119040	2	True				
ANR	1119204	ParameterType	unsigned		1119040	0					
ANR	1119205	Identifier	size		1119040	1					
ANR	1119206	CFGEntryNode	ENTRY		1119040		True				
ANR	1119207	CFGExitNode	EXIT		1119040		True				
ANR	1119208	Symbol	val		1119040						
ANR	1119209	Symbol	s -> lcd_content		1119040						
ANR	1119210	Symbol	opaque		1119040						
ANR	1119211	Symbol	s		1119040						
ANR	1119212	Symbol	size		1119040						
ANR	1119213	Symbol	* s -> lcd_content		1119040						
ANR	1119214	Symbol	* * s		1119040						
ANR	1119215	Symbol	* addr		1119040						
ANR	1119216	Symbol	addr		1119040						
ANR	1119217	Symbol	* s		1119040						
