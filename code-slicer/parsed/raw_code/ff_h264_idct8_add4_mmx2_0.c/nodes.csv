command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3426518	File	/home/p4ultr4n/workplace/ReVeal/raw_code/ff_h264_idct8_add4_mmx2_0.c								
ANR	3426519	Function	ff_h264_idct8_add4_mmx2	1:0:0:464							
ANR	3426520	FunctionDef	"ff_h264_idct8_add4_mmx2 (uint8_t * dst , const int * block_offset , DCTELEM * block , int stride , const uint8_t nnzc [ 6 * 8 ])"		3426519	0					
ANR	3426521	CompoundStatement		1:127:127:464	3426519	0					
ANR	3426522	IdentifierDeclStatement	int i ;	3:4:134:139	3426519	0	True				
ANR	3426523	IdentifierDecl	i		3426519	0					
ANR	3426524	IdentifierDeclType	int		3426519	0					
ANR	3426525	Identifier	i		3426519	1					
ANR	3426526	ForStatement	for ( i = 0 ; i < 16 ; i += 4 )		3426519	1					
ANR	3426527	ForInit	i = 0 ;	5:8:150:153	3426519	0	True				
ANR	3426528	AssignmentExpression	i = 0		3426519	0		=			
ANR	3426529	Identifier	i		3426519	0					
ANR	3426530	PrimaryExpression	0		3426519	1					
ANR	3426531	Condition	i < 16	5:13:155:158	3426519	1	True				
ANR	3426532	RelationalExpression	i < 16		3426519	0		<			
ANR	3426533	Identifier	i		3426519	0					
ANR	3426534	PrimaryExpression	16		3426519	1					
ANR	3426535	AssignmentExpression	i += 4	5:19:161:164	3426519	2	True	+=			
ANR	3426536	Identifier	i		3426519	0					
ANR	3426537	PrimaryExpression	4		3426519	1					
ANR	3426538	CompoundStatement		7:8:49:75	3426519	3					
ANR	3426539	IdentifierDeclStatement	int nnz = nnzc [ scan8 [ i ] ] ;	7:8:177:203	3426519	0	True				
ANR	3426540	IdentifierDecl	nnz = nnzc [ scan8 [ i ] ]		3426519	0					
ANR	3426541	IdentifierDeclType	int		3426519	0					
ANR	3426542	Identifier	nnz		3426519	1					
ANR	3426543	AssignmentExpression	nnz = nnzc [ scan8 [ i ] ]		3426519	2		=			
ANR	3426544	Identifier	nnz		3426519	0					
ANR	3426545	ArrayIndexing	nnzc [ scan8 [ i ] ]		3426519	1					
ANR	3426546	Identifier	nnzc		3426519	0					
ANR	3426547	ArrayIndexing	scan8 [ i ]		3426519	1					
ANR	3426548	Identifier	scan8		3426519	0					
ANR	3426549	Identifier	i		3426519	1					
ANR	3426550	IfStatement	if ( nnz )		3426519	1					
ANR	3426551	Condition	nnz	9:11:217:219	3426519	0	True				
ANR	3426552	Identifier	nnz		3426519	0					
ANR	3426553	CompoundStatement		9:15:93:93	3426519	1					
ANR	3426554	IfStatement	if ( nnz == 1 && block [ i * 16 ] )		3426519	0					
ANR	3426555	Condition	nnz == 1 && block [ i * 16 ]	11:15:239:259	3426519	0	True				
ANR	3426556	AndExpression	nnz == 1 && block [ i * 16 ]		3426519	0		&&			
ANR	3426557	EqualityExpression	nnz == 1		3426519	0		==			
ANR	3426558	Identifier	nnz		3426519	0					
ANR	3426559	PrimaryExpression	1		3426519	1					
ANR	3426560	ArrayIndexing	block [ i * 16 ]		3426519	1					
ANR	3426561	Identifier	block		3426519	0					
ANR	3426562	MultiplicativeExpression	i * 16		3426519	1		*			
ANR	3426563	Identifier	i		3426519	0					
ANR	3426564	PrimaryExpression	16		3426519	1					
ANR	3426565	ExpressionStatement	"ff_h264_idct8_dc_add_mmx2 ( dst + block_offset [ i ] , block + i * 16 , stride )"	11:38:262:332	3426519	1	True				
ANR	3426566	CallExpression	"ff_h264_idct8_dc_add_mmx2 ( dst + block_offset [ i ] , block + i * 16 , stride )"		3426519	0					
ANR	3426567	Callee	ff_h264_idct8_dc_add_mmx2		3426519	0					
ANR	3426568	Identifier	ff_h264_idct8_dc_add_mmx2		3426519	0					
ANR	3426569	ArgumentList	dst + block_offset [ i ]		3426519	1					
ANR	3426570	Argument	dst + block_offset [ i ]		3426519	0					
ANR	3426571	AdditiveExpression	dst + block_offset [ i ]		3426519	0		+			
ANR	3426572	Identifier	dst		3426519	0					
ANR	3426573	ArrayIndexing	block_offset [ i ]		3426519	1					
ANR	3426574	Identifier	block_offset		3426519	0					
ANR	3426575	Identifier	i		3426519	1					
ANR	3426576	Argument	block + i * 16		3426519	1					
ANR	3426577	AdditiveExpression	block + i * 16		3426519	0		+			
ANR	3426578	Identifier	block		3426519	0					
ANR	3426579	MultiplicativeExpression	i * 16		3426519	1		*			
ANR	3426580	Identifier	i		3426519	0					
ANR	3426581	PrimaryExpression	16		3426519	1					
ANR	3426582	Argument	stride		3426519	2					
ANR	3426583	Identifier	stride		3426519	0					
ANR	3426584	ElseStatement	else		3426519	0					
ANR	3426585	ExpressionStatement	"ff_h264_idct8_add_mmx ( dst + block_offset [ i ] , block + i * 16 , stride )"	13:38:373:443	3426519	0	True				
ANR	3426586	CallExpression	"ff_h264_idct8_add_mmx ( dst + block_offset [ i ] , block + i * 16 , stride )"		3426519	0					
ANR	3426587	Callee	ff_h264_idct8_add_mmx		3426519	0					
ANR	3426588	Identifier	ff_h264_idct8_add_mmx		3426519	0					
ANR	3426589	ArgumentList	dst + block_offset [ i ]		3426519	1					
ANR	3426590	Argument	dst + block_offset [ i ]		3426519	0					
ANR	3426591	AdditiveExpression	dst + block_offset [ i ]		3426519	0		+			
ANR	3426592	Identifier	dst		3426519	0					
ANR	3426593	ArrayIndexing	block_offset [ i ]		3426519	1					
ANR	3426594	Identifier	block_offset		3426519	0					
ANR	3426595	Identifier	i		3426519	1					
ANR	3426596	Argument	block + i * 16		3426519	1					
ANR	3426597	AdditiveExpression	block + i * 16		3426519	0		+			
ANR	3426598	Identifier	block		3426519	0					
ANR	3426599	MultiplicativeExpression	i * 16		3426519	1		*			
ANR	3426600	Identifier	i		3426519	0					
ANR	3426601	PrimaryExpression	16		3426519	1					
ANR	3426602	Argument	stride		3426519	2					
ANR	3426603	Identifier	stride		3426519	0					
ANR	3426604	ReturnType	static void		3426519	1					
ANR	3426605	Identifier	ff_h264_idct8_add4_mmx2		3426519	2					
ANR	3426606	ParameterList	"uint8_t * dst , const int * block_offset , DCTELEM * block , int stride , const uint8_t nnzc [ 6 * 8 ]"		3426519	3					
ANR	3426607	Parameter	uint8_t * dst	1:36:36:47	3426519	0	True				
ANR	3426608	ParameterType	uint8_t *		3426519	0					
ANR	3426609	Identifier	dst		3426519	1					
ANR	3426610	Parameter	const int * block_offset	1:50:50:72	3426519	1	True				
ANR	3426611	ParameterType	const int *		3426519	0					
ANR	3426612	Identifier	block_offset		3426519	1					
ANR	3426613	Parameter	DCTELEM * block	1:75:75:88	3426519	2	True				
ANR	3426614	ParameterType	DCTELEM *		3426519	0					
ANR	3426615	Identifier	block		3426519	1					
ANR	3426616	Parameter	int stride	1:91:91:100	3426519	3	True				
ANR	3426617	ParameterType	int		3426519	0					
ANR	3426618	Identifier	stride		3426519	1					
ANR	3426619	Parameter	const uint8_t nnzc [ 6 * 8 ]	1:103:103:125	3426519	4	True				
ANR	3426620	ParameterType	const uint8_t [ 6 * 8 ]		3426519	0					
ANR	3426621	Identifier	nnzc		3426519	1					
ANR	3426622	CFGEntryNode	ENTRY		3426519		True				
ANR	3426623	CFGExitNode	EXIT		3426519		True				
ANR	3426624	Symbol	* * i		3426519						
ANR	3426625	Symbol	dst		3426519						
ANR	3426626	Symbol	* scan8		3426519						
ANR	3426627	Symbol	i		3426519						
ANR	3426628	Symbol	stride		3426519						
ANR	3426629	Symbol	* * scan8		3426519						
ANR	3426630	Symbol	* block		3426519						
ANR	3426631	Symbol	* block_offset		3426519						
ANR	3426632	Symbol	* i		3426519						
ANR	3426633	Symbol	block_offset		3426519						
ANR	3426634	Symbol	scan8		3426519						
ANR	3426635	Symbol	block		3426519						
ANR	3426636	Symbol	nnzc		3426519						
ANR	3426637	Symbol	nnz		3426519						
ANR	3426638	Symbol	* nnzc		3426519						
