command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1623499	File	/home/p4ultr4n/workplace/ReVeal/raw_code/dca_decode_frame_02_1.c								
ANR	1623500	Function	dca_decode_frame	1:0:0:2365							
ANR	1623501	FunctionDef	"dca_decode_frame (AVCodecContext * avctx , void * data , int * data_size , AVPacket * avpkt)"		1623500	0					
ANR	1623502	CompoundStatement		4:0:153:2365	1623500	0					
ANR	1623503	IdentifierDeclStatement	const uint8_t * buf = avpkt -> data ;	5:4:159:191	1623500	0	True				
ANR	1623504	IdentifierDecl	* buf = avpkt -> data		1623500	0					
ANR	1623505	IdentifierDeclType	const uint8_t *		1623500	0					
ANR	1623506	Identifier	buf		1623500	1					
ANR	1623507	AssignmentExpression	* buf = avpkt -> data		1623500	2		=			
ANR	1623508	Identifier	buf		1623500	0					
ANR	1623509	PtrMemberAccess	avpkt -> data		1623500	1					
ANR	1623510	Identifier	avpkt		1623500	0					
ANR	1623511	Identifier	data		1623500	1					
ANR	1623512	IdentifierDeclStatement	int buf_size = avpkt -> size ;	6:4:197:223	1623500	1	True				
ANR	1623513	IdentifierDecl	buf_size = avpkt -> size		1623500	0					
ANR	1623514	IdentifierDeclType	int		1623500	0					
ANR	1623515	Identifier	buf_size		1623500	1					
ANR	1623516	AssignmentExpression	buf_size = avpkt -> size		1623500	2		=			
ANR	1623517	Identifier	buf_size		1623500	0					
ANR	1623518	PtrMemberAccess	avpkt -> size		1623500	1					
ANR	1623519	Identifier	avpkt		1623500	0					
ANR	1623520	Identifier	size		1623500	1					
ANR	1623521	IdentifierDeclStatement	int i ;	7:4:229:234	1623500	2	True				
ANR	1623522	IdentifierDecl	i		1623500	0					
ANR	1623523	IdentifierDeclType	int		1623500	0					
ANR	1623524	Identifier	i		1623500	1					
ANR	1623525	IdentifierDeclStatement	int16_t * samples = data ;	8:4:240:263	1623500	3	True				
ANR	1623526	IdentifierDecl	* samples = data		1623500	0					
ANR	1623527	IdentifierDeclType	int16_t *		1623500	0					
ANR	1623528	Identifier	samples		1623500	1					
ANR	1623529	AssignmentExpression	* samples = data		1623500	2		=			
ANR	1623530	Identifier	data		1623500	0					
ANR	1623531	Identifier	data		1623500	1					
ANR	1623532	IdentifierDeclStatement	DCAContext * s = avctx -> priv_data ;	9:4:269:301	1623500	4	True				
ANR	1623533	IdentifierDecl	* s = avctx -> priv_data		1623500	0					
ANR	1623534	IdentifierDeclType	DCAContext *		1623500	0					
ANR	1623535	Identifier	s		1623500	1					
ANR	1623536	AssignmentExpression	* s = avctx -> priv_data		1623500	2		=			
ANR	1623537	Identifier	s		1623500	0					
ANR	1623538	PtrMemberAccess	avctx -> priv_data		1623500	1					
ANR	1623539	Identifier	avctx		1623500	0					
ANR	1623540	Identifier	priv_data		1623500	1					
ANR	1623541	IdentifierDeclStatement	int channels ;	10:4:307:319	1623500	5	True				
ANR	1623542	IdentifierDecl	channels		1623500	0					
ANR	1623543	IdentifierDeclType	int		1623500	0					
ANR	1623544	Identifier	channels		1623500	1					
ANR	1623545	ExpressionStatement	"s -> dca_buffer_size = dca_convert_bitstream ( buf , buf_size , s -> dca_buffer , DCA_MAX_FRAME_SIZE )"	11:4:325:417	1623500	6	True				
ANR	1623546	AssignmentExpression	"s -> dca_buffer_size = dca_convert_bitstream ( buf , buf_size , s -> dca_buffer , DCA_MAX_FRAME_SIZE )"		1623500	0		=			
ANR	1623547	PtrMemberAccess	s -> dca_buffer_size		1623500	0					
ANR	1623548	Identifier	s		1623500	0					
ANR	1623549	Identifier	dca_buffer_size		1623500	1					
ANR	1623550	CallExpression	"dca_convert_bitstream ( buf , buf_size , s -> dca_buffer , DCA_MAX_FRAME_SIZE )"		1623500	1					
ANR	1623551	Callee	dca_convert_bitstream		1623500	0					
ANR	1623552	Identifier	dca_convert_bitstream		1623500	0					
ANR	1623553	ArgumentList	buf		1623500	1					
ANR	1623554	Argument	buf		1623500	0					
ANR	1623555	Identifier	buf		1623500	0					
ANR	1623556	Argument	buf_size		1623500	1					
ANR	1623557	Identifier	buf_size		1623500	0					
ANR	1623558	Argument	s -> dca_buffer		1623500	2					
ANR	1623559	PtrMemberAccess	s -> dca_buffer		1623500	0					
ANR	1623560	Identifier	s		1623500	0					
ANR	1623561	Identifier	dca_buffer		1623500	1					
ANR	1623562	Argument	DCA_MAX_FRAME_SIZE		1623500	3					
ANR	1623563	Identifier	DCA_MAX_FRAME_SIZE		1623500	0					
ANR	1623564	IfStatement	if ( s -> dca_buffer_size == - 1 )		1623500	7					
ANR	1623565	Condition	s -> dca_buffer_size == - 1	12:8:427:450	1623500	0	True				
ANR	1623566	EqualityExpression	s -> dca_buffer_size == - 1		1623500	0		==			
ANR	1623567	PtrMemberAccess	s -> dca_buffer_size		1623500	0					
ANR	1623568	Identifier	s		1623500	0					
ANR	1623569	Identifier	dca_buffer_size		1623500	1					
ANR	1623570	UnaryOperationExpression	- 1		1623500	1					
ANR	1623571	UnaryOperator	-		1623500	0					
ANR	1623572	PrimaryExpression	1		1623500	1					
ANR	1623573	CompoundStatement		9:34:299:299	1623500	1					
ANR	1623574	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Not a valid DCA frame\\n"" )"	13:8:463:517	1623500	0	True				
ANR	1623575	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Not a valid DCA frame\\n"" )"		1623500	0					
ANR	1623576	Callee	av_log		1623500	0					
ANR	1623577	Identifier	av_log		1623500	0					
ANR	1623578	ArgumentList	avctx		1623500	1					
ANR	1623579	Argument	avctx		1623500	0					
ANR	1623580	Identifier	avctx		1623500	0					
ANR	1623581	Argument	AV_LOG_ERROR		1623500	1					
ANR	1623582	Identifier	AV_LOG_ERROR		1623500	0					
ANR	1623583	Argument	"""Not a valid DCA frame\\n"""		1623500	2					
ANR	1623584	PrimaryExpression	"""Not a valid DCA frame\\n"""		1623500	0					
ANR	1623585	ExpressionStatement	"init_get_bits ( & s -> gb , s -> dca_buffer , s -> dca_buffer_size * 8 )"	15:4:529:589	1623500	8	True				
ANR	1623586	CallExpression	"init_get_bits ( & s -> gb , s -> dca_buffer , s -> dca_buffer_size * 8 )"		1623500	0					
ANR	1623587	Callee	init_get_bits		1623500	0					
ANR	1623588	Identifier	init_get_bits		1623500	0					
ANR	1623589	ArgumentList	& s -> gb		1623500	1					
ANR	1623590	Argument	& s -> gb		1623500	0					
ANR	1623591	UnaryOperationExpression	& s -> gb		1623500	0					
ANR	1623592	UnaryOperator	&		1623500	0					
ANR	1623593	PtrMemberAccess	s -> gb		1623500	1					
ANR	1623594	Identifier	s		1623500	0					
ANR	1623595	Identifier	gb		1623500	1					
ANR	1623596	Argument	s -> dca_buffer		1623500	1					
ANR	1623597	PtrMemberAccess	s -> dca_buffer		1623500	0					
ANR	1623598	Identifier	s		1623500	0					
ANR	1623599	Identifier	dca_buffer		1623500	1					
ANR	1623600	Argument	s -> dca_buffer_size * 8		1623500	2					
ANR	1623601	MultiplicativeExpression	s -> dca_buffer_size * 8		1623500	0		*			
ANR	1623602	PtrMemberAccess	s -> dca_buffer_size		1623500	0					
ANR	1623603	Identifier	s		1623500	0					
ANR	1623604	Identifier	dca_buffer_size		1623500	1					
ANR	1623605	PrimaryExpression	8		1623500	1					
ANR	1623606	IfStatement	if ( dca_parse_frame_header ( s ) < 0 )		1623500	9					
ANR	1623607	Condition	dca_parse_frame_header ( s ) < 0	16:8:599:627	1623500	0	True				
ANR	1623608	RelationalExpression	dca_parse_frame_header ( s ) < 0		1623500	0		<			
ANR	1623609	CallExpression	dca_parse_frame_header ( s )		1623500	0					
ANR	1623610	Callee	dca_parse_frame_header		1623500	0					
ANR	1623611	Identifier	dca_parse_frame_header		1623500	0					
ANR	1623612	ArgumentList	s		1623500	1					
ANR	1623613	Argument	s		1623500	0					
ANR	1623614	Identifier	s		1623500	0					
ANR	1623615	PrimaryExpression	0		1623500	1					
ANR	1623616	CompoundStatement		13:39:476:476	1623500	1					
ANR	1623617	ExpressionStatement	* data_size = 0	18:8:705:717	1623500	0	True				
ANR	1623618	AssignmentExpression	* data_size = 0		1623500	0		=			
ANR	1623619	UnaryOperationExpression	* data_size		1623500	0					
ANR	1623620	UnaryOperator	*		1623500	0					
ANR	1623621	Identifier	data_size		1623500	1					
ANR	1623622	PrimaryExpression	0		1623500	1					
ANR	1623623	ReturnStatement	return buf_size ;	19:8:727:742	1623500	1	True				
ANR	1623624	Identifier	buf_size		1623500	0					
ANR	1623625	ExpressionStatement	avctx -> sample_rate = s -> sample_rate	22:4:796:831	1623500	10	True				
ANR	1623626	AssignmentExpression	avctx -> sample_rate = s -> sample_rate		1623500	0		=			
ANR	1623627	PtrMemberAccess	avctx -> sample_rate		1623500	0					
ANR	1623628	Identifier	avctx		1623500	0					
ANR	1623629	Identifier	sample_rate		1623500	1					
ANR	1623630	PtrMemberAccess	s -> sample_rate		1623500	1					
ANR	1623631	Identifier	s		1623500	0					
ANR	1623632	Identifier	sample_rate		1623500	1					
ANR	1623633	ExpressionStatement	avctx -> bit_rate = s -> bit_rate	23:4:837:866	1623500	11	True				
ANR	1623634	AssignmentExpression	avctx -> bit_rate = s -> bit_rate		1623500	0		=			
ANR	1623635	PtrMemberAccess	avctx -> bit_rate		1623500	0					
ANR	1623636	Identifier	avctx		1623500	0					
ANR	1623637	Identifier	bit_rate		1623500	1					
ANR	1623638	PtrMemberAccess	s -> bit_rate		1623500	1					
ANR	1623639	Identifier	s		1623500	0					
ANR	1623640	Identifier	bit_rate		1623500	1					
ANR	1623641	ExpressionStatement	channels = s -> prim_channels + ! ! s -> lfe	24:4:872:910	1623500	12	True				
ANR	1623642	AssignmentExpression	channels = s -> prim_channels + ! ! s -> lfe		1623500	0		=			
ANR	1623643	Identifier	channels		1623500	0					
ANR	1623644	AdditiveExpression	s -> prim_channels + ! ! s -> lfe		1623500	1		+			
ANR	1623645	PtrMemberAccess	s -> prim_channels		1623500	0					
ANR	1623646	Identifier	s		1623500	0					
ANR	1623647	Identifier	prim_channels		1623500	1					
ANR	1623648	UnaryOperationExpression	! ! s -> lfe		1623500	1					
ANR	1623649	UnaryOperator	!		1623500	0					
ANR	1623650	UnaryOperationExpression	! s -> lfe		1623500	1					
ANR	1623651	UnaryOperator	!		1623500	0					
ANR	1623652	PtrMemberAccess	s -> lfe		1623500	1					
ANR	1623653	Identifier	s		1623500	0					
ANR	1623654	Identifier	lfe		1623500	1					
ANR	1623655	IfStatement	if ( s -> amode < 16 )		1623500	13					
ANR	1623656	Condition	s -> amode < 16	25:8:920:930	1623500	0	True				
ANR	1623657	RelationalExpression	s -> amode < 16		1623500	0		<			
ANR	1623658	PtrMemberAccess	s -> amode		1623500	0					
ANR	1623659	Identifier	s		1623500	0					
ANR	1623660	Identifier	amode		1623500	1					
ANR	1623661	PrimaryExpression	16		1623500	1					
ANR	1623662	CompoundStatement		22:21:779:779	1623500	1					
ANR	1623663	ExpressionStatement	avctx -> channel_layout = dca_core_channel_layout [ s -> amode ]	26:8:943:1000	1623500	0	True				
ANR	1623664	AssignmentExpression	avctx -> channel_layout = dca_core_channel_layout [ s -> amode ]		1623500	0		=			
ANR	1623665	PtrMemberAccess	avctx -> channel_layout		1623500	0					
ANR	1623666	Identifier	avctx		1623500	0					
ANR	1623667	Identifier	channel_layout		1623500	1					
ANR	1623668	ArrayIndexing	dca_core_channel_layout [ s -> amode ]		1623500	1					
ANR	1623669	Identifier	dca_core_channel_layout		1623500	0					
ANR	1623670	PtrMemberAccess	s -> amode		1623500	1					
ANR	1623671	Identifier	s		1623500	0					
ANR	1623672	Identifier	amode		1623500	1					
ANR	1623673	IfStatement	if ( s -> lfe )		1623500	1					
ANR	1623674	Condition	s -> lfe	27:12:1014:1019	1623500	0	True				
ANR	1623675	PtrMemberAccess	s -> lfe		1623500	0					
ANR	1623676	Identifier	s		1623500	0					
ANR	1623677	Identifier	lfe		1623500	1					
ANR	1623678	CompoundStatement		24:20:868:868	1623500	1					
ANR	1623679	ExpressionStatement	avctx -> channel_layout |= CH_LOW_FREQUENCY	28:12:1036:1077	1623500	0	True				
ANR	1623680	AssignmentExpression	avctx -> channel_layout |= CH_LOW_FREQUENCY		1623500	0		|=			
ANR	1623681	PtrMemberAccess	avctx -> channel_layout		1623500	0					
ANR	1623682	Identifier	avctx		1623500	0					
ANR	1623683	Identifier	channel_layout		1623500	1					
ANR	1623684	Identifier	CH_LOW_FREQUENCY		1623500	1					
ANR	1623685	ExpressionStatement	s -> channel_order_tab = dca_channel_reorder_lfe [ s -> amode ]	29:12:1091:1147	1623500	1	True				
ANR	1623686	AssignmentExpression	s -> channel_order_tab = dca_channel_reorder_lfe [ s -> amode ]		1623500	0		=			
ANR	1623687	PtrMemberAccess	s -> channel_order_tab		1623500	0					
ANR	1623688	Identifier	s		1623500	0					
ANR	1623689	Identifier	channel_order_tab		1623500	1					
ANR	1623690	ArrayIndexing	dca_channel_reorder_lfe [ s -> amode ]		1623500	1					
ANR	1623691	Identifier	dca_channel_reorder_lfe		1623500	0					
ANR	1623692	PtrMemberAccess	s -> amode		1623500	1					
ANR	1623693	Identifier	s		1623500	0					
ANR	1623694	Identifier	amode		1623500	1					
ANR	1623695	ElseStatement	else		1623500	0					
ANR	1623696	ExpressionStatement	s -> channel_order_tab = dca_channel_reorder_nolfe [ s -> amode ]	31:12:1176:1234	1623500	0	True				
ANR	1623697	AssignmentExpression	s -> channel_order_tab = dca_channel_reorder_nolfe [ s -> amode ]		1623500	0		=			
ANR	1623698	PtrMemberAccess	s -> channel_order_tab		1623500	0					
ANR	1623699	Identifier	s		1623500	0					
ANR	1623700	Identifier	channel_order_tab		1623500	1					
ANR	1623701	ArrayIndexing	dca_channel_reorder_nolfe [ s -> amode ]		1623500	1					
ANR	1623702	Identifier	dca_channel_reorder_nolfe		1623500	0					
ANR	1623703	PtrMemberAccess	s -> amode		1623500	1					
ANR	1623704	Identifier	s		1623500	0					
ANR	1623705	Identifier	amode		1623500	1					
ANR	1623706	IfStatement	if ( avctx -> request_channels == 2 && s -> prim_channels > 2 )		1623500	2					
ANR	1623707	Condition	avctx -> request_channels == 2 && s -> prim_channels > 2	32:11:1247:1298	1623500	0	True				
ANR	1623708	AndExpression	avctx -> request_channels == 2 && s -> prim_channels > 2		1623500	0		&&			
ANR	1623709	EqualityExpression	avctx -> request_channels == 2		1623500	0		==			
ANR	1623710	PtrMemberAccess	avctx -> request_channels		1623500	0					
ANR	1623711	Identifier	avctx		1623500	0					
ANR	1623712	Identifier	request_channels		1623500	1					
ANR	1623713	PrimaryExpression	2		1623500	1					
ANR	1623714	RelationalExpression	s -> prim_channels > 2		1623500	1		>			
ANR	1623715	PtrMemberAccess	s -> prim_channels		1623500	0					
ANR	1623716	Identifier	s		1623500	0					
ANR	1623717	Identifier	prim_channels		1623500	1					
ANR	1623718	PrimaryExpression	2		1623500	1					
ANR	1623719	CompoundStatement		29:65:1147:1147	1623500	1					
ANR	1623720	ExpressionStatement	channels = 2	33:12:1315:1327	1623500	0	True				
ANR	1623721	AssignmentExpression	channels = 2		1623500	0		=			
ANR	1623722	Identifier	channels		1623500	0					
ANR	1623723	PrimaryExpression	2		1623500	1					
ANR	1623724	ExpressionStatement	s -> output = DCA_STEREO	34:12:1341:1363	1623500	1	True				
ANR	1623725	AssignmentExpression	s -> output = DCA_STEREO		1623500	0		=			
ANR	1623726	PtrMemberAccess	s -> output		1623500	0					
ANR	1623727	Identifier	s		1623500	0					
ANR	1623728	Identifier	output		1623500	1					
ANR	1623729	Identifier	DCA_STEREO		1623500	1					
ANR	1623730	ExpressionStatement	avctx -> channel_layout = CH_LAYOUT_STEREO	35:12:1377:1417	1623500	2	True				
ANR	1623731	AssignmentExpression	avctx -> channel_layout = CH_LAYOUT_STEREO		1623500	0		=			
ANR	1623732	PtrMemberAccess	avctx -> channel_layout		1623500	0					
ANR	1623733	Identifier	avctx		1623500	0					
ANR	1623734	Identifier	channel_layout		1623500	1					
ANR	1623735	Identifier	CH_LAYOUT_STEREO		1623500	1					
ANR	1623736	ElseStatement	else		1623500	0					
ANR	1623737	CompoundStatement		34:11:1286:1286	1623500	0					
ANR	1623738	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Non standard configuration %d !\\n"" , s -> amode )"	38:8:1450:1523	1623500	0	True				
ANR	1623739	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Non standard configuration %d !\\n"" , s -> amode )"		1623500	0					
ANR	1623740	Callee	av_log		1623500	0					
ANR	1623741	Identifier	av_log		1623500	0					
ANR	1623742	ArgumentList	avctx		1623500	1					
ANR	1623743	Argument	avctx		1623500	0					
ANR	1623744	Identifier	avctx		1623500	0					
ANR	1623745	Argument	AV_LOG_ERROR		1623500	1					
ANR	1623746	Identifier	AV_LOG_ERROR		1623500	0					
ANR	1623747	Argument	"""Non standard configuration %d !\\n"""		1623500	2					
ANR	1623748	PrimaryExpression	"""Non standard configuration %d !\\n"""		1623500	0					
ANR	1623749	Argument	s -> amode		1623500	3					
ANR	1623750	PtrMemberAccess	s -> amode		1623500	0					
ANR	1623751	Identifier	s		1623500	0					
ANR	1623752	Identifier	amode		1623500	1					
ANR	1623753	IfStatement	if ( ! avctx -> channels )		1623500	14					
ANR	1623754	Condition	! avctx -> channels	45:8:1930:1945	1623500	0	True				
ANR	1623755	UnaryOperationExpression	! avctx -> channels		1623500	0					
ANR	1623756	UnaryOperator	!		1623500	0					
ANR	1623757	PtrMemberAccess	avctx -> channels		1623500	1					
ANR	1623758	Identifier	avctx		1623500	0					
ANR	1623759	Identifier	channels		1623500	1					
ANR	1623760	ExpressionStatement	avctx -> channels = channels	46:8:1956:1982	1623500	1	True				
ANR	1623761	AssignmentExpression	avctx -> channels = channels		1623500	0		=			
ANR	1623762	PtrMemberAccess	avctx -> channels		1623500	0					
ANR	1623763	Identifier	avctx		1623500	0					
ANR	1623764	Identifier	channels		1623500	1					
ANR	1623765	Identifier	channels		1623500	1					
ANR	1623766	IfStatement	if ( * data_size < ( s -> sample_blocks / 8 ) * 256 * sizeof ( int16_t ) * channels )		1623500	15					
ANR	1623767	Condition	* data_size < ( s -> sample_blocks / 8 ) * 256 * sizeof ( int16_t ) * channels	47:7:1991:2060	1623500	0	True				
ANR	1623768	RelationalExpression	* data_size < ( s -> sample_blocks / 8 ) * 256 * sizeof ( int16_t ) * channels		1623500	0		<			
ANR	1623769	UnaryOperationExpression	* data_size		1623500	0					
ANR	1623770	UnaryOperator	*		1623500	0					
ANR	1623771	Identifier	data_size		1623500	1					
ANR	1623772	MultiplicativeExpression	( s -> sample_blocks / 8 ) * 256 * sizeof ( int16_t ) * channels		1623500	1		*			
ANR	1623773	MultiplicativeExpression	s -> sample_blocks / 8		1623500	0		/			
ANR	1623774	PtrMemberAccess	s -> sample_blocks		1623500	0					
ANR	1623775	Identifier	s		1623500	0					
ANR	1623776	Identifier	sample_blocks		1623500	1					
ANR	1623777	PrimaryExpression	8		1623500	1					
ANR	1623778	MultiplicativeExpression	256 * sizeof ( int16_t ) * channels		1623500	1		*			
ANR	1623779	PrimaryExpression	256		1623500	0					
ANR	1623780	MultiplicativeExpression	sizeof ( int16_t ) * channels		1623500	1		*			
ANR	1623781	SizeofExpression	sizeof ( int16_t )		1623500	0					
ANR	1623782	Sizeof	sizeof		1623500	0					
ANR	1623783	SizeofOperand	int16_t		1623500	1					
ANR	1623784	Identifier	channels		1623500	1					
ANR	1623785	ExpressionStatement	* data_size = 256 / 8 * s -> sample_blocks * sizeof ( int16_t ) * channels	48:4:2067:2135	1623500	1	True				
ANR	1623786	AssignmentExpression	* data_size = 256 / 8 * s -> sample_blocks * sizeof ( int16_t ) * channels		1623500	0		=			
ANR	1623787	UnaryOperationExpression	* data_size		1623500	0					
ANR	1623788	UnaryOperator	*		1623500	0					
ANR	1623789	Identifier	data_size		1623500	1					
ANR	1623790	MultiplicativeExpression	256 / 8 * s -> sample_blocks * sizeof ( int16_t ) * channels		1623500	1		/			
ANR	1623791	PrimaryExpression	256		1623500	0					
ANR	1623792	MultiplicativeExpression	8 * s -> sample_blocks * sizeof ( int16_t ) * channels		1623500	1		*			
ANR	1623793	PrimaryExpression	8		1623500	0					
ANR	1623794	MultiplicativeExpression	s -> sample_blocks * sizeof ( int16_t ) * channels		1623500	1		*			
ANR	1623795	PtrMemberAccess	s -> sample_blocks		1623500	0					
ANR	1623796	Identifier	s		1623500	0					
ANR	1623797	Identifier	sample_blocks		1623500	1					
ANR	1623798	MultiplicativeExpression	sizeof ( int16_t ) * channels		1623500	1		*			
ANR	1623799	SizeofExpression	sizeof ( int16_t )		1623500	0					
ANR	1623800	Sizeof	sizeof		1623500	0					
ANR	1623801	SizeofOperand	int16_t		1623500	1					
ANR	1623802	Identifier	channels		1623500	1					
ANR	1623803	ForStatement	for ( i = 0 ; i < ( s -> sample_blocks / 8 ) ; i ++ )		1623500	16					
ANR	1623804	ForInit	i = 0 ;	49:9:2146:2151	1623500	0	True				
ANR	1623805	AssignmentExpression	i = 0		1623500	0		=			
ANR	1623806	Identifier	i		1623500	0					
ANR	1623807	PrimaryExpression	0		1623500	1					
ANR	1623808	Condition	i < ( s -> sample_blocks / 8 )	49:16:2153:2178	1623500	1	True				
ANR	1623809	RelationalExpression	i < ( s -> sample_blocks / 8 )		1623500	0		<			
ANR	1623810	Identifier	i		1623500	0					
ANR	1623811	MultiplicativeExpression	s -> sample_blocks / 8		1623500	1		/			
ANR	1623812	PtrMemberAccess	s -> sample_blocks		1623500	0					
ANR	1623813	Identifier	s		1623500	0					
ANR	1623814	Identifier	sample_blocks		1623500	1					
ANR	1623815	PrimaryExpression	8		1623500	1					
ANR	1623816	PostIncDecOperationExpression	i ++	49:44:2181:2183	1623500	2	True				
ANR	1623817	Identifier	i		1623500	0					
ANR	1623818	IncDec	++		1623500	1					
ANR	1623819	CompoundStatement		46:49:2032:2032	1623500	3					
ANR	1623820	ExpressionStatement	dca_decode_block ( s )	50:8:2196:2215	1623500	0	True				
ANR	1623821	CallExpression	dca_decode_block ( s )		1623500	0					
ANR	1623822	Callee	dca_decode_block		1623500	0					
ANR	1623823	Identifier	dca_decode_block		1623500	0					
ANR	1623824	ArgumentList	s		1623500	1					
ANR	1623825	Argument	s		1623500	0					
ANR	1623826	Identifier	s		1623500	0					
ANR	1623827	ExpressionStatement	"s -> dsp . float_to_int16_interleave ( samples , s -> samples_chanptr , 256 , channels )"	51:8:2225:2301	1623500	1	True				
ANR	1623828	CallExpression	"s -> dsp . float_to_int16_interleave ( samples , s -> samples_chanptr , 256 , channels )"		1623500	0					
ANR	1623829	Callee	s -> dsp . float_to_int16_interleave		1623500	0					
ANR	1623830	MemberAccess	s -> dsp . float_to_int16_interleave		1623500	0					
ANR	1623831	PtrMemberAccess	s -> dsp		1623500	0					
ANR	1623832	Identifier	s		1623500	0					
ANR	1623833	Identifier	dsp		1623500	1					
ANR	1623834	Identifier	float_to_int16_interleave		1623500	1					
ANR	1623835	ArgumentList	samples		1623500	1					
ANR	1623836	Argument	samples		1623500	0					
ANR	1623837	Identifier	samples		1623500	0					
ANR	1623838	Argument	s -> samples_chanptr		1623500	1					
ANR	1623839	PtrMemberAccess	s -> samples_chanptr		1623500	0					
ANR	1623840	Identifier	s		1623500	0					
ANR	1623841	Identifier	samples_chanptr		1623500	1					
ANR	1623842	Argument	256		1623500	2					
ANR	1623843	PrimaryExpression	256		1623500	0					
ANR	1623844	Argument	channels		1623500	3					
ANR	1623845	Identifier	channels		1623500	0					
ANR	1623846	ExpressionStatement	samples += 256 * channels	52:8:2311:2336	1623500	2	True				
ANR	1623847	AssignmentExpression	samples += 256 * channels		1623500	0		+=			
ANR	1623848	Identifier	samples		1623500	0					
ANR	1623849	MultiplicativeExpression	256 * channels		1623500	1		*			
ANR	1623850	PrimaryExpression	256		1623500	0					
ANR	1623851	Identifier	channels		1623500	1					
ANR	1623852	ReturnStatement	return buf_size ;	54:4:2348:2363	1623500	17	True				
ANR	1623853	Identifier	buf_size		1623500	0					
ANR	1623854	ReturnType	static int		1623500	1					
ANR	1623855	Identifier	dca_decode_frame		1623500	2					
ANR	1623856	ParameterList	"AVCodecContext * avctx , void * data , int * data_size , AVPacket * avpkt"		1623500	3					
ANR	1623857	Parameter	AVCodecContext * avctx	1:28:28:49	1623500	0	True				
ANR	1623858	ParameterType	AVCodecContext *		1623500	0					
ANR	1623859	Identifier	avctx		1623500	1					
ANR	1623860	Parameter	void * data	2:28:80:89	1623500	1	True				
ANR	1623861	ParameterType	void *		1623500	0					
ANR	1623862	Identifier	data		1623500	1					
ANR	1623863	Parameter	int * data_size	2:40:92:105	1623500	2	True				
ANR	1623864	ParameterType	int *		1623500	0					
ANR	1623865	Identifier	data_size		1623500	1					
ANR	1623866	Parameter	AVPacket * avpkt	3:28:136:150	1623500	3	True				
ANR	1623867	ParameterType	AVPacket *		1623500	0					
ANR	1623868	Identifier	avpkt		1623500	1					
ANR	1623869	CFGEntryNode	ENTRY		1623500		True				
ANR	1623870	CFGExitNode	EXIT		1623500		True				
ANR	1623871	Symbol	data		1623500						
ANR	1623872	Symbol	avpkt		1623500						
ANR	1623873	Symbol	* data_size		1623500						
ANR	1623874	Symbol	s -> dca_buffer		1623500						
ANR	1623875	Symbol	dca_parse_frame_header		1623500						
ANR	1623876	Symbol	avctx -> channels		1623500						
ANR	1623877	Symbol	s -> channel_order_tab		1623500						
ANR	1623878	Symbol	CH_LAYOUT_STEREO		1623500						
ANR	1623879	Symbol	data_size		1623500						
ANR	1623880	Symbol	buf_size		1623500						
ANR	1623881	Symbol	s -> prim_channels		1623500						
ANR	1623882	Symbol	s -> bit_rate		1623500						
ANR	1623883	Symbol	s -> dsp		1623500						
ANR	1623884	Symbol	samples		1623500						
ANR	1623885	Symbol	& s -> gb		1623500						
ANR	1623886	Symbol	avctx -> request_channels		1623500						
ANR	1623887	Symbol	s -> output		1623500						
ANR	1623888	Symbol	s -> sample_rate		1623500						
ANR	1623889	Symbol	* avctx		1623500						
ANR	1623890	Symbol	avctx -> bit_rate		1623500						
ANR	1623891	Symbol	channels		1623500						
ANR	1623892	Symbol	dca_channel_reorder_nolfe		1623500						
ANR	1623893	Symbol	avpkt -> data		1623500						
ANR	1623894	Symbol	s -> lfe		1623500						
ANR	1623895	Symbol	* dca_channel_reorder_nolfe		1623500						
ANR	1623896	Symbol	dca_core_channel_layout		1623500						
ANR	1623897	Symbol	* * s		1623500						
ANR	1623898	Symbol	avpkt -> size		1623500						
ANR	1623899	Symbol	CH_LOW_FREQUENCY		1623500						
ANR	1623900	Symbol	dca_convert_bitstream		1623500						
ANR	1623901	Symbol	* s -> amode		1623500						
ANR	1623902	Symbol	avctx		1623500						
ANR	1623903	Symbol	* dca_channel_reorder_lfe		1623500						
ANR	1623904	Symbol	DCA_STEREO		1623500						
ANR	1623905	Symbol	* avpkt		1623500						
ANR	1623906	Symbol	s -> sample_blocks		1623500						
ANR	1623907	Symbol	AV_LOG_ERROR		1623500						
ANR	1623908	Symbol	i		1623500						
ANR	1623909	Symbol	avctx -> channel_layout		1623500						
ANR	1623910	Symbol	dca_channel_reorder_lfe		1623500						
ANR	1623911	Symbol	DCA_MAX_FRAME_SIZE		1623500						
ANR	1623912	Symbol	s -> amode		1623500						
ANR	1623913	Symbol	s -> samples_chanptr		1623500						
ANR	1623914	Symbol	avctx -> priv_data		1623500						
ANR	1623915	Symbol	avctx -> sample_rate		1623500						
ANR	1623916	Symbol	buf		1623500						
ANR	1623917	Symbol	s		1623500						
ANR	1623918	Symbol	s -> dca_buffer_size		1623500						
ANR	1623919	Symbol	* dca_core_channel_layout		1623500						
ANR	1623920	Symbol	* s		1623500						
