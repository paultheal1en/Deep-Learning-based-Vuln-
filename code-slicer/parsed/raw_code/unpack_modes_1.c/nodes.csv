command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8631904	File	/home/p4ultr4n/workplace/ReVeal/raw_code/unpack_modes_1.c								
ANR	8631905	Function	unpack_modes	1:0:0:2759							
ANR	8631906	FunctionDef	"unpack_modes (Vp3DecodeContext * s , GetBitContext * gb)"		8631905	0					
ANR	8631907	CompoundStatement		3:0:65:2759	8631905	0					
ANR	8631908	IdentifierDeclStatement	"int i , j , k ;"	5:4:72:83	8631905	0	True				
ANR	8631909	IdentifierDecl	i		8631905	0					
ANR	8631910	IdentifierDeclType	int		8631905	0					
ANR	8631911	Identifier	i		8631905	1					
ANR	8631912	IdentifierDecl	j		8631905	1					
ANR	8631913	IdentifierDeclType	int		8631905	0					
ANR	8631914	Identifier	j		8631905	1					
ANR	8631915	IdentifierDecl	k		8631905	2					
ANR	8631916	IdentifierDeclType	int		8631905	0					
ANR	8631917	Identifier	k		8631905	1					
ANR	8631918	IdentifierDeclStatement	int scheme ;	7:4:90:100	8631905	1	True				
ANR	8631919	IdentifierDecl	scheme		8631905	0					
ANR	8631920	IdentifierDeclType	int		8631905	0					
ANR	8631921	Identifier	scheme		8631905	1					
ANR	8631922	IdentifierDeclStatement	int current_macroblock ;	9:4:107:129	8631905	2	True				
ANR	8631923	IdentifierDecl	current_macroblock		8631905	0					
ANR	8631924	IdentifierDeclType	int		8631905	0					
ANR	8631925	Identifier	current_macroblock		8631905	1					
ANR	8631926	IdentifierDeclStatement	int current_fragment ;	11:4:136:156	8631905	3	True				
ANR	8631927	IdentifierDecl	current_fragment		8631905	0					
ANR	8631928	IdentifierDeclType	int		8631905	0					
ANR	8631929	Identifier	current_fragment		8631905	1					
ANR	8631930	IdentifierDeclStatement	int coding_mode ;	13:4:163:178	8631905	4	True				
ANR	8631931	IdentifierDecl	coding_mode		8631905	0					
ANR	8631932	IdentifierDeclType	int		8631905	0					
ANR	8631933	Identifier	coding_mode		8631905	1					
ANR	8631934	IdentifierDeclStatement	int custom_mode_alphabet [ CODING_MODE_COUNT ] ;	15:4:185:228	8631905	5	True				
ANR	8631935	IdentifierDecl	custom_mode_alphabet [ CODING_MODE_COUNT ]		8631905	0					
ANR	8631936	IdentifierDeclType	int [ CODING_MODE_COUNT ]		8631905	0					
ANR	8631937	Identifier	custom_mode_alphabet		8631905	1					
ANR	8631938	Identifier	CODING_MODE_COUNT		8631905	2					
ANR	8631939	IfStatement	if ( s -> keyframe )		8631905	6					
ANR	8631940	Condition	s -> keyframe	19:8:241:251	8631905	0	True				
ANR	8631941	PtrMemberAccess	s -> keyframe		8631905	0					
ANR	8631942	Identifier	s		8631905	0					
ANR	8631943	Identifier	keyframe		8631905	1					
ANR	8631944	CompoundStatement		17:21:188:188	8631905	1					
ANR	8631945	ForStatement	for ( i = 0 ; i < s -> fragment_count ; i ++ )		8631905	0					
ANR	8631946	ForInit	i = 0 ;	21:13:270:275	8631905	0	True				
ANR	8631947	AssignmentExpression	i = 0		8631905	0		=			
ANR	8631948	Identifier	i		8631905	0					
ANR	8631949	PrimaryExpression	0		8631905	1					
ANR	8631950	Condition	i < s -> fragment_count	21:20:277:297	8631905	1	True				
ANR	8631951	RelationalExpression	i < s -> fragment_count		8631905	0		<			
ANR	8631952	Identifier	i		8631905	0					
ANR	8631953	PtrMemberAccess	s -> fragment_count		8631905	1					
ANR	8631954	Identifier	s		8631905	0					
ANR	8631955	Identifier	fragment_count		8631905	1					
ANR	8631956	PostIncDecOperationExpression	i ++	21:43:300:302	8631905	2	True				
ANR	8631957	Identifier	i		8631905	0					
ANR	8631958	IncDec	++		8631905	1					
ANR	8631959	ExpressionStatement	s -> all_fragments [ i ] . coding_method = MODE_INTRA	23:12:318:364	8631905	3	True				
ANR	8631960	AssignmentExpression	s -> all_fragments [ i ] . coding_method = MODE_INTRA		8631905	0		=			
ANR	8631961	MemberAccess	s -> all_fragments [ i ] . coding_method		8631905	0					
ANR	8631962	ArrayIndexing	s -> all_fragments [ i ]		8631905	0					
ANR	8631963	PtrMemberAccess	s -> all_fragments		8631905	0					
ANR	8631964	Identifier	s		8631905	0					
ANR	8631965	Identifier	all_fragments		8631905	1					
ANR	8631966	Identifier	i		8631905	1					
ANR	8631967	Identifier	coding_method		8631905	1					
ANR	8631968	Identifier	MODE_INTRA		8631905	1					
ANR	8631969	ElseStatement	else		8631905	0					
ANR	8631970	CompoundStatement		25:11:314:314	8631905	0					
ANR	8631971	ExpressionStatement	"scheme = get_bits ( gb , 3 )"	33:8:452:476	8631905	0	True				
ANR	8631972	AssignmentExpression	"scheme = get_bits ( gb , 3 )"		8631905	0		=			
ANR	8631973	Identifier	scheme		8631905	0					
ANR	8631974	CallExpression	"get_bits ( gb , 3 )"		8631905	1					
ANR	8631975	Callee	get_bits		8631905	0					
ANR	8631976	Identifier	get_bits		8631905	0					
ANR	8631977	ArgumentList	gb		8631905	1					
ANR	8631978	Argument	gb		8631905	0					
ANR	8631979	Identifier	gb		8631905	0					
ANR	8631980	Argument	3		8631905	1					
ANR	8631981	PrimaryExpression	3		8631905	0					
ANR	8631982	IfStatement	if ( scheme == 0 )		8631905	1					
ANR	8631983	Condition	scheme == 0	39:12:538:548	8631905	0	True				
ANR	8631984	EqualityExpression	scheme == 0		8631905	0		==			
ANR	8631985	Identifier	scheme		8631905	0					
ANR	8631986	PrimaryExpression	0		8631905	1					
ANR	8631987	CompoundStatement		37:25:485:485	8631905	1					
ANR	8631988	ExpressionStatement	"custom_mode_alphabet [ get_bits ( gb , 3 ) ] = i"	44:16:573:614	8631905	0	True				
ANR	8631989	AssignmentExpression	"custom_mode_alphabet [ get_bits ( gb , 3 ) ] = i"		8631905	0		=			
ANR	8631990	ArrayIndexing	"custom_mode_alphabet [ get_bits ( gb , 3 ) ]"		8631905	0					
ANR	8631991	Identifier	custom_mode_alphabet		8631905	0					
ANR	8631992	CallExpression	"get_bits ( gb , 3 )"		8631905	1					
ANR	8631993	Callee	get_bits		8631905	0					
ANR	8631994	Identifier	get_bits		8631905	0					
ANR	8631995	ArgumentList	gb		8631905	1					
ANR	8631996	Argument	gb		8631905	0					
ANR	8631997	Identifier	gb		8631905	0					
ANR	8631998	Argument	3		8631905	1					
ANR	8631999	PrimaryExpression	3		8631905	0					
ANR	8632000	Identifier	i		8631905	1					
ANR	8632001	ForStatement	for ( i = 0 ; i < s -> u_superblock_start ; i ++ )		8631905	2					
ANR	8632002	ForInit	i = 0 ;	54:13:748:753	8631905	0	True				
ANR	8632003	AssignmentExpression	i = 0		8631905	0		=			
ANR	8632004	Identifier	i		8631905	0					
ANR	8632005	PrimaryExpression	0		8631905	1					
ANR	8632006	Condition	i < s -> u_superblock_start	54:20:755:779	8631905	1	True				
ANR	8632007	RelationalExpression	i < s -> u_superblock_start		8631905	0		<			
ANR	8632008	Identifier	i		8631905	0					
ANR	8632009	PtrMemberAccess	s -> u_superblock_start		8631905	1					
ANR	8632010	Identifier	s		8631905	0					
ANR	8632011	Identifier	u_superblock_start		8631905	1					
ANR	8632012	PostIncDecOperationExpression	i ++	54:47:782:784	8631905	2	True				
ANR	8632013	Identifier	i		8631905	0					
ANR	8632014	IncDec	++		8631905	1					
ANR	8632015	CompoundStatement		52:52:721:721	8631905	3					
ANR	8632016	ForStatement	for ( j = 0 ; j < 4 ; j ++ )		8631905	0					
ANR	8632017	ForInit	j = 0 ;	58:17:809:814	8631905	0	True				
ANR	8632018	AssignmentExpression	j = 0		8631905	0		=			
ANR	8632019	Identifier	j		8631905	0					
ANR	8632020	PrimaryExpression	0		8631905	1					
ANR	8632021	Condition	j < 4	58:24:816:820	8631905	1	True				
ANR	8632022	RelationalExpression	j < 4		8631905	0		<			
ANR	8632023	Identifier	j		8631905	0					
ANR	8632024	PrimaryExpression	4		8631905	1					
ANR	8632025	PostIncDecOperationExpression	j ++	58:31:823:825	8631905	2	True				
ANR	8632026	Identifier	j		8631905	0					
ANR	8632027	IncDec	++		8631905	1					
ANR	8632028	CompoundStatement		56:36:762:762	8631905	3					
ANR	8632029	ExpressionStatement	current_macroblock = s -> superblock_macroblocks [ i * 4 + j ]	60:16:847:904	8631905	0	True				
ANR	8632030	AssignmentExpression	current_macroblock = s -> superblock_macroblocks [ i * 4 + j ]		8631905	0		=			
ANR	8632031	Identifier	current_macroblock		8631905	0					
ANR	8632032	ArrayIndexing	s -> superblock_macroblocks [ i * 4 + j ]		8631905	1					
ANR	8632033	PtrMemberAccess	s -> superblock_macroblocks		8631905	0					
ANR	8632034	Identifier	s		8631905	0					
ANR	8632035	Identifier	superblock_macroblocks		8631905	1					
ANR	8632036	AdditiveExpression	i * 4 + j		8631905	1		+			
ANR	8632037	MultiplicativeExpression	i * 4		8631905	0		*			
ANR	8632038	Identifier	i		8631905	0					
ANR	8632039	PrimaryExpression	4		8631905	1					
ANR	8632040	Identifier	j		8631905	1					
ANR	8632041	IfStatement	if ( ( current_macroblock == - 1 ) || ( s -> macroblock_coding [ current_macroblock ] == MODE_COPY ) )		8631905	1					
ANR	8632042	Condition	( current_macroblock == - 1 ) || ( s -> macroblock_coding [ current_macroblock ] == MODE_COPY )	62:20:927:1032	8631905	0	True				
ANR	8632043	OrExpression	( current_macroblock == - 1 ) || ( s -> macroblock_coding [ current_macroblock ] == MODE_COPY )		8631905	0		||			
ANR	8632044	EqualityExpression	current_macroblock == - 1		8631905	0		==			
ANR	8632045	Identifier	current_macroblock		8631905	0					
ANR	8632046	UnaryOperationExpression	- 1		8631905	1					
ANR	8632047	UnaryOperator	-		8631905	0					
ANR	8632048	PrimaryExpression	1		8631905	1					
ANR	8632049	EqualityExpression	s -> macroblock_coding [ current_macroblock ] == MODE_COPY		8631905	1		==			
ANR	8632050	ArrayIndexing	s -> macroblock_coding [ current_macroblock ]		8631905	0					
ANR	8632051	PtrMemberAccess	s -> macroblock_coding		8631905	0					
ANR	8632052	Identifier	s		8631905	0					
ANR	8632053	Identifier	macroblock_coding		8631905	1					
ANR	8632054	Identifier	current_macroblock		8631905	1					
ANR	8632055	Identifier	MODE_COPY		8631905	1					
ANR	8632056	ContinueStatement	continue ;	66:20:1056:1064	8631905	1	True				
ANR	8632057	IfStatement	if ( current_macroblock >= s -> macroblock_count )		8631905	2					
ANR	8632058	Condition	current_macroblock >= s -> macroblock_count	68:20:1087:1127	8631905	0	True				
ANR	8632059	RelationalExpression	current_macroblock >= s -> macroblock_count		8631905	0		>=			
ANR	8632060	Identifier	current_macroblock		8631905	0					
ANR	8632061	PtrMemberAccess	s -> macroblock_count		8631905	1					
ANR	8632062	Identifier	s		8631905	0					
ANR	8632063	Identifier	macroblock_count		8631905	1					
ANR	8632064	CompoundStatement		66:63:1064:1064	8631905	1					
ANR	8632065	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_ERROR , ""  vp3:unpack_modes(): bad macroblock number (%d >= %d)\\n"" , current_macroblock , s -> macroblock_count )"	70:20:1153:1309	8631905	0	True				
ANR	8632066	CallExpression	"av_log ( s -> avctx , AV_LOG_ERROR , ""  vp3:unpack_modes(): bad macroblock number (%d >= %d)\\n"" , current_macroblock , s -> macroblock_count )"		8631905	0					
ANR	8632067	Callee	av_log		8631905	0					
ANR	8632068	Identifier	av_log		8631905	0					
ANR	8632069	ArgumentList	s -> avctx		8631905	1					
ANR	8632070	Argument	s -> avctx		8631905	0					
ANR	8632071	PtrMemberAccess	s -> avctx		8631905	0					
ANR	8632072	Identifier	s		8631905	0					
ANR	8632073	Identifier	avctx		8631905	1					
ANR	8632074	Argument	AV_LOG_ERROR		8631905	1					
ANR	8632075	Identifier	AV_LOG_ERROR		8631905	0					
ANR	8632076	Argument	"""  vp3:unpack_modes(): bad macroblock number (%d >= %d)\\n"""		8631905	2					
ANR	8632077	PrimaryExpression	"""  vp3:unpack_modes(): bad macroblock number (%d >= %d)\\n"""		8631905	0					
ANR	8632078	Argument	current_macroblock		8631905	3					
ANR	8632079	Identifier	current_macroblock		8631905	0					
ANR	8632080	Argument	s -> macroblock_count		8631905	4					
ANR	8632081	PtrMemberAccess	s -> macroblock_count		8631905	0					
ANR	8632082	Identifier	s		8631905	0					
ANR	8632083	Identifier	macroblock_count		8631905	1					
ANR	8632084	ReturnStatement	return 1 ;	74:20:1332:1340	8631905	1	True				
ANR	8632085	PrimaryExpression	1		8631905	0					
ANR	8632086	IfStatement	if ( scheme == 7 )		8631905	3					
ANR	8632087	Condition	scheme == 7	82:20:1452:1462	8631905	0	True				
ANR	8632088	EqualityExpression	scheme == 7		8631905	0		==			
ANR	8632089	Identifier	scheme		8631905	0					
ANR	8632090	PrimaryExpression	7		8631905	1					
ANR	8632091	ExpressionStatement	"coding_mode = get_bits ( gb , 3 )"	84:20:1486:1515	8631905	1	True				
ANR	8632092	AssignmentExpression	"coding_mode = get_bits ( gb , 3 )"		8631905	0		=			
ANR	8632093	Identifier	coding_mode		8631905	0					
ANR	8632094	CallExpression	"get_bits ( gb , 3 )"		8631905	1					
ANR	8632095	Callee	get_bits		8631905	0					
ANR	8632096	Identifier	get_bits		8631905	0					
ANR	8632097	ArgumentList	gb		8631905	1					
ANR	8632098	Argument	gb		8631905	0					
ANR	8632099	Identifier	gb		8631905	0					
ANR	8632100	Argument	3		8631905	1					
ANR	8632101	PrimaryExpression	3		8631905	0					
ANR	8632102	ElseStatement	else		8631905	0					
ANR	8632103	IfStatement	if ( scheme == 0 )		8631905	0					
ANR	8632104	Condition	scheme == 0	86:24:1542:1552	8631905	0	True				
ANR	8632105	EqualityExpression	scheme == 0		8631905	0		==			
ANR	8632106	Identifier	scheme		8631905	0					
ANR	8632107	PrimaryExpression	0		8631905	1					
ANR	8632108	ExpressionStatement	"coding_mode = custom_mode_alphabet [ get_vlc2 ( gb , s -> mode_code_vlc . table , 3 , 3 ) ]"	88:20:1576:1680	8631905	1	True				
ANR	8632109	AssignmentExpression	"coding_mode = custom_mode_alphabet [ get_vlc2 ( gb , s -> mode_code_vlc . table , 3 , 3 ) ]"		8631905	0		=			
ANR	8632110	Identifier	coding_mode		8631905	0					
ANR	8632111	ArrayIndexing	"custom_mode_alphabet [ get_vlc2 ( gb , s -> mode_code_vlc . table , 3 , 3 ) ]"		8631905	1					
ANR	8632112	Identifier	custom_mode_alphabet		8631905	0					
ANR	8632113	CallExpression	"get_vlc2 ( gb , s -> mode_code_vlc . table , 3 , 3 )"		8631905	1					
ANR	8632114	Callee	get_vlc2		8631905	0					
ANR	8632115	Identifier	get_vlc2		8631905	0					
ANR	8632116	ArgumentList	gb		8631905	1					
ANR	8632117	Argument	gb		8631905	0					
ANR	8632118	Identifier	gb		8631905	0					
ANR	8632119	Argument	s -> mode_code_vlc . table		8631905	1					
ANR	8632120	MemberAccess	s -> mode_code_vlc . table		8631905	0					
ANR	8632121	PtrMemberAccess	s -> mode_code_vlc		8631905	0					
ANR	8632122	Identifier	s		8631905	0					
ANR	8632123	Identifier	mode_code_vlc		8631905	1					
ANR	8632124	Identifier	table		8631905	1					
ANR	8632125	Argument	3		8631905	2					
ANR	8632126	PrimaryExpression	3		8631905	0					
ANR	8632127	Argument	3		8631905	3					
ANR	8632128	PrimaryExpression	3		8631905	0					
ANR	8632129	ElseStatement	else		8631905	0					
ANR	8632130	ExpressionStatement	"coding_mode = ModeAlphabet [ scheme - 1 ] [ get_vlc2 ( gb , s -> mode_code_vlc . table , 3 , 3 ) ]"	94:20:1725:1831	8631905	0	True				
ANR	8632131	AssignmentExpression	"coding_mode = ModeAlphabet [ scheme - 1 ] [ get_vlc2 ( gb , s -> mode_code_vlc . table , 3 , 3 ) ]"		8631905	0		=			
ANR	8632132	Identifier	coding_mode		8631905	0					
ANR	8632133	ArrayIndexing	"ModeAlphabet [ scheme - 1 ] [ get_vlc2 ( gb , s -> mode_code_vlc . table , 3 , 3 ) ]"		8631905	1					
ANR	8632134	ArrayIndexing	ModeAlphabet [ scheme - 1 ]		8631905	0					
ANR	8632135	Identifier	ModeAlphabet		8631905	0					
ANR	8632136	AdditiveExpression	scheme - 1		8631905	1		-			
ANR	8632137	Identifier	scheme		8631905	0					
ANR	8632138	PrimaryExpression	1		8631905	1					
ANR	8632139	CallExpression	"get_vlc2 ( gb , s -> mode_code_vlc . table , 3 , 3 )"		8631905	1					
ANR	8632140	Callee	get_vlc2		8631905	0					
ANR	8632141	Identifier	get_vlc2		8631905	0					
ANR	8632142	ArgumentList	gb		8631905	1					
ANR	8632143	Argument	gb		8631905	0					
ANR	8632144	Identifier	gb		8631905	0					
ANR	8632145	Argument	s -> mode_code_vlc . table		8631905	1					
ANR	8632146	MemberAccess	s -> mode_code_vlc . table		8631905	0					
ANR	8632147	PtrMemberAccess	s -> mode_code_vlc		8631905	0					
ANR	8632148	Identifier	s		8631905	0					
ANR	8632149	Identifier	mode_code_vlc		8631905	1					
ANR	8632150	Identifier	table		8631905	1					
ANR	8632151	Argument	3		8631905	2					
ANR	8632152	PrimaryExpression	3		8631905	0					
ANR	8632153	Argument	3		8631905	3					
ANR	8632154	PrimaryExpression	3		8631905	0					
ANR	8632155	ExpressionStatement	s -> macroblock_coding [ current_macroblock ] = coding_mode	100:16:1852:1906	8631905	4	True				
ANR	8632156	AssignmentExpression	s -> macroblock_coding [ current_macroblock ] = coding_mode		8631905	0		=			
ANR	8632157	ArrayIndexing	s -> macroblock_coding [ current_macroblock ]		8631905	0					
ANR	8632158	PtrMemberAccess	s -> macroblock_coding		8631905	0					
ANR	8632159	Identifier	s		8631905	0					
ANR	8632160	Identifier	macroblock_coding		8631905	1					
ANR	8632161	Identifier	current_macroblock		8631905	1					
ANR	8632162	Identifier	coding_mode		8631905	1					
ANR	8632163	ForStatement	for ( k = 0 ; k < 6 ; k ++ )		8631905	5					
ANR	8632164	ForInit	k = 0 ;	102:21:1930:1935	8631905	0	True				
ANR	8632165	AssignmentExpression	k = 0		8631905	0		=			
ANR	8632166	Identifier	k		8631905	0					
ANR	8632167	PrimaryExpression	0		8631905	1					
ANR	8632168	Condition	k < 6	102:28:1937:1941	8631905	1	True				
ANR	8632169	RelationalExpression	k < 6		8631905	0		<			
ANR	8632170	Identifier	k		8631905	0					
ANR	8632171	PrimaryExpression	6		8631905	1					
ANR	8632172	PostIncDecOperationExpression	k ++	102:35:1944:1946	8631905	2	True				
ANR	8632173	Identifier	k		8631905	0					
ANR	8632174	IncDec	++		8631905	1					
ANR	8632175	CompoundStatement		100:40:1883:1883	8631905	3					
ANR	8632176	ExpressionStatement	current_fragment = s -> macroblock_fragments [ current_macroblock * 6 + k ]	104:20:1972:2067	8631905	0	True				
ANR	8632177	AssignmentExpression	current_fragment = s -> macroblock_fragments [ current_macroblock * 6 + k ]		8631905	0		=			
ANR	8632178	Identifier	current_fragment		8631905	0					
ANR	8632179	ArrayIndexing	s -> macroblock_fragments [ current_macroblock * 6 + k ]		8631905	1					
ANR	8632180	PtrMemberAccess	s -> macroblock_fragments		8631905	0					
ANR	8632181	Identifier	s		8631905	0					
ANR	8632182	Identifier	macroblock_fragments		8631905	1					
ANR	8632183	AdditiveExpression	current_macroblock * 6 + k		8631905	1		+			
ANR	8632184	MultiplicativeExpression	current_macroblock * 6		8631905	0		*			
ANR	8632185	Identifier	current_macroblock		8631905	0					
ANR	8632186	PrimaryExpression	6		8631905	1					
ANR	8632187	Identifier	k		8631905	1					
ANR	8632188	IfStatement	if ( current_fragment == - 1 )		8631905	1					
ANR	8632189	Condition	current_fragment == - 1	108:24:2094:2115	8631905	0	True				
ANR	8632190	EqualityExpression	current_fragment == - 1		8631905	0		==			
ANR	8632191	Identifier	current_fragment		8631905	0					
ANR	8632192	UnaryOperationExpression	- 1		8631905	1					
ANR	8632193	UnaryOperator	-		8631905	0					
ANR	8632194	PrimaryExpression	1		8631905	1					
ANR	8632195	ContinueStatement	continue ;	110:24:2143:2151	8631905	1	True				
ANR	8632196	IfStatement	if ( current_fragment >= s -> fragment_count )		8631905	2					
ANR	8632197	Condition	current_fragment >= s -> fragment_count	112:24:2178:2214	8631905	0	True				
ANR	8632198	RelationalExpression	current_fragment >= s -> fragment_count		8631905	0		>=			
ANR	8632199	Identifier	current_fragment		8631905	0					
ANR	8632200	PtrMemberAccess	s -> fragment_count		8631905	1					
ANR	8632201	Identifier	s		8631905	0					
ANR	8632202	Identifier	fragment_count		8631905	1					
ANR	8632203	CompoundStatement		110:63:2151:2151	8631905	1					
ANR	8632204	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_ERROR , ""  vp3:unpack_modes(): bad fragment number (%d >= %d)\\n"" , current_fragment , s -> fragment_count )"	114:24:2244:2398	8631905	0	True				
ANR	8632205	CallExpression	"av_log ( s -> avctx , AV_LOG_ERROR , ""  vp3:unpack_modes(): bad fragment number (%d >= %d)\\n"" , current_fragment , s -> fragment_count )"		8631905	0					
ANR	8632206	Callee	av_log		8631905	0					
ANR	8632207	Identifier	av_log		8631905	0					
ANR	8632208	ArgumentList	s -> avctx		8631905	1					
ANR	8632209	Argument	s -> avctx		8631905	0					
ANR	8632210	PtrMemberAccess	s -> avctx		8631905	0					
ANR	8632211	Identifier	s		8631905	0					
ANR	8632212	Identifier	avctx		8631905	1					
ANR	8632213	Argument	AV_LOG_ERROR		8631905	1					
ANR	8632214	Identifier	AV_LOG_ERROR		8631905	0					
ANR	8632215	Argument	"""  vp3:unpack_modes(): bad fragment number (%d >= %d)\\n"""		8631905	2					
ANR	8632216	PrimaryExpression	"""  vp3:unpack_modes(): bad fragment number (%d >= %d)\\n"""		8631905	0					
ANR	8632217	Argument	current_fragment		8631905	3					
ANR	8632218	Identifier	current_fragment		8631905	0					
ANR	8632219	Argument	s -> fragment_count		8631905	4					
ANR	8632220	PtrMemberAccess	s -> fragment_count		8631905	0					
ANR	8632221	Identifier	s		8631905	0					
ANR	8632222	Identifier	fragment_count		8631905	1					
ANR	8632223	ReturnStatement	return 1 ;	118:24:2425:2433	8631905	1	True				
ANR	8632224	PrimaryExpression	1		8631905	0					
ANR	8632225	IfStatement	if ( s -> all_fragments [ current_fragment ] . coding_method != MODE_COPY )		8631905	3					
ANR	8632226	Condition	s -> all_fragments [ current_fragment ] . coding_method != MODE_COPY	122:24:2483:2568	8631905	0	True				
ANR	8632227	EqualityExpression	s -> all_fragments [ current_fragment ] . coding_method != MODE_COPY		8631905	0		!=			
ANR	8632228	MemberAccess	s -> all_fragments [ current_fragment ] . coding_method		8631905	0					
ANR	8632229	ArrayIndexing	s -> all_fragments [ current_fragment ]		8631905	0					
ANR	8632230	PtrMemberAccess	s -> all_fragments		8631905	0					
ANR	8632231	Identifier	s		8631905	0					
ANR	8632232	Identifier	all_fragments		8631905	1					
ANR	8632233	Identifier	current_fragment		8631905	1					
ANR	8632234	Identifier	coding_method		8631905	1					
ANR	8632235	Identifier	MODE_COPY		8631905	1					
ANR	8632236	ExpressionStatement	s -> all_fragments [ current_fragment ] . coding_method = coding_mode	126:24:2596:2687	8631905	1	True				
ANR	8632237	AssignmentExpression	s -> all_fragments [ current_fragment ] . coding_method = coding_mode		8631905	0		=			
ANR	8632238	MemberAccess	s -> all_fragments [ current_fragment ] . coding_method		8631905	0					
ANR	8632239	ArrayIndexing	s -> all_fragments [ current_fragment ]		8631905	0					
ANR	8632240	PtrMemberAccess	s -> all_fragments		8631905	0					
ANR	8632241	Identifier	s		8631905	0					
ANR	8632242	Identifier	all_fragments		8631905	1					
ANR	8632243	Identifier	current_fragment		8631905	1					
ANR	8632244	Identifier	coding_method		8631905	1					
ANR	8632245	Identifier	coding_mode		8631905	1					
ANR	8632246	ReturnStatement	return 0 ;	140:4:2748:2756	8631905	7	True				
ANR	8632247	PrimaryExpression	0		8631905	0					
ANR	8632248	ReturnType	static int		8631905	1					
ANR	8632249	Identifier	unpack_modes		8631905	2					
ANR	8632250	ParameterList	"Vp3DecodeContext * s , GetBitContext * gb"		8631905	3					
ANR	8632251	Parameter	Vp3DecodeContext * s	1:24:24:42	8631905	0	True				
ANR	8632252	ParameterType	Vp3DecodeContext *		8631905	0					
ANR	8632253	Identifier	s		8631905	1					
ANR	8632254	Parameter	GetBitContext * gb	1:45:45:61	8631905	1	True				
ANR	8632255	ParameterType	GetBitContext *		8631905	0					
ANR	8632256	Identifier	gb		8631905	1					
ANR	8632257	CFGEntryNode	ENTRY		8631905		True				
ANR	8632258	CFGExitNode	EXIT		8631905		True				
ANR	8632259	Symbol	s -> macroblock_fragments		8631905						
ANR	8632260	Symbol	* scheme		8631905						
ANR	8632261	Symbol	MODE_COPY		8631905						
ANR	8632262	Symbol	scheme		8631905						
ANR	8632263	Symbol	get_bits		8631905						
ANR	8632264	Symbol	s -> mode_code_vlc		8631905						
ANR	8632265	Symbol	s -> fragment_count		8631905						
ANR	8632266	Symbol	* get_vlc2		8631905						
ANR	8632267	Symbol	s -> keyframe		8631905						
ANR	8632268	Symbol	* custom_mode_alphabet		8631905						
ANR	8632269	Symbol	s -> superblock_macroblocks		8631905						
ANR	8632270	Symbol	ModeAlphabet		8631905						
ANR	8632271	Symbol	* s -> macroblock_coding		8631905						
ANR	8632272	Symbol	* ModeAlphabet		8631905						
ANR	8632273	Symbol	s -> all_fragments [ i ] . coding_method		8631905						
ANR	8632274	Symbol	* * s		8631905						
ANR	8632275	Symbol	* s -> superblock_macroblocks		8631905						
ANR	8632276	Symbol	gb		8631905						
ANR	8632277	Symbol	current_fragment		8631905						
ANR	8632278	Symbol	AV_LOG_ERROR		8631905						
ANR	8632279	Symbol	s -> mode_code_vlc . table		8631905						
ANR	8632280	Symbol	s -> u_superblock_start		8631905						
ANR	8632281	Symbol	* * scheme		8631905						
ANR	8632282	Symbol	coding_mode		8631905						
ANR	8632283	Symbol	* get_bits		8631905						
ANR	8632284	Symbol	i		8631905						
ANR	8632285	Symbol	j		8631905						
ANR	8632286	Symbol	k		8631905						
ANR	8632287	Symbol	custom_mode_alphabet		8631905						
ANR	8632288	Symbol	s -> macroblock_count		8631905						
ANR	8632289	Symbol	* current_fragment		8631905						
ANR	8632290	Symbol	* s -> macroblock_fragments		8631905						
ANR	8632291	Symbol	s -> all_fragments		8631905						
ANR	8632292	Symbol	* s -> all_fragments		8631905						
ANR	8632293	Symbol	s		8631905						
ANR	8632294	Symbol	* i		8631905						
ANR	8632295	Symbol	* j		8631905						
ANR	8632296	Symbol	* k		8631905						
ANR	8632297	Symbol	current_macroblock		8631905						
ANR	8632298	Symbol	* current_macroblock		8631905						
ANR	8632299	Symbol	s -> macroblock_coding		8631905						
ANR	8632300	Symbol	* * ModeAlphabet		8631905						
ANR	8632301	Symbol	MODE_INTRA		8631905						
ANR	8632302	Symbol	s -> avctx		8631905						
ANR	8632303	Symbol	get_vlc2		8631905						
ANR	8632304	Symbol	* s		8631905						
ANR	8632305	Symbol	s -> all_fragments [ current_fragment ] . coding_method		8631905						
