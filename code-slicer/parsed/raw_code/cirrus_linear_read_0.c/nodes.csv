command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1313157	File	/home/p4ultr4n/workplace/ReVeal/raw_code/cirrus_linear_read_0.c								
ANR	1313158	Function	cirrus_linear_read	1:0:0:713							
ANR	1313159	FunctionDef	"cirrus_linear_read (void * opaque , target_phys_addr_t addr , unsigned size)"		1313158	0					
ANR	1313160	CompoundStatement		5:0:126:713	1313158	0					
ANR	1313161	IdentifierDeclStatement	CirrusVGAState * s = opaque ;	7:4:133:159	1313158	0	True				
ANR	1313162	IdentifierDecl	* s = opaque		1313158	0					
ANR	1313163	IdentifierDeclType	CirrusVGAState *		1313158	0					
ANR	1313164	Identifier	s		1313158	1					
ANR	1313165	AssignmentExpression	* s = opaque		1313158	2		=			
ANR	1313166	Identifier	opaque		1313158	0					
ANR	1313167	Identifier	opaque		1313158	1					
ANR	1313168	IdentifierDeclStatement	uint32_t ret ;	9:4:166:178	1313158	1	True				
ANR	1313169	IdentifierDecl	ret		1313158	0					
ANR	1313170	IdentifierDeclType	uint32_t		1313158	0					
ANR	1313171	Identifier	ret		1313158	1					
ANR	1313172	ExpressionStatement	addr &= s -> cirrus_addr_mask	13:4:187:214	1313158	2	True				
ANR	1313173	AssignmentExpression	addr &= s -> cirrus_addr_mask		1313158	0		&=			
ANR	1313174	Identifier	addr		1313158	0					
ANR	1313175	PtrMemberAccess	s -> cirrus_addr_mask		1313158	1					
ANR	1313176	Identifier	s		1313158	0					
ANR	1313177	Identifier	cirrus_addr_mask		1313158	1					
ANR	1313178	IfStatement	if ( ( ( s -> vga . sr [ 0x17 ] & 0x44 ) == 0x44 ) && ( ( addr & s -> linear_mmio_mask ) == s -> linear_mmio_mask ) )		1313158	3					
ANR	1313179	Condition	( ( s -> vga . sr [ 0x17 ] & 0x44 ) == 0x44 ) && ( ( addr & s -> linear_mmio_mask ) == s -> linear_mmio_mask )	17:8:227:326	1313158	0	True				
ANR	1313180	AndExpression	( ( s -> vga . sr [ 0x17 ] & 0x44 ) == 0x44 ) && ( ( addr & s -> linear_mmio_mask ) == s -> linear_mmio_mask )		1313158	0		&&			
ANR	1313181	EqualityExpression	( s -> vga . sr [ 0x17 ] & 0x44 ) == 0x44		1313158	0		==			
ANR	1313182	BitAndExpression	s -> vga . sr [ 0x17 ] & 0x44		1313158	0		&			
ANR	1313183	ArrayIndexing	s -> vga . sr [ 0x17 ]		1313158	0					
ANR	1313184	MemberAccess	s -> vga . sr		1313158	0					
ANR	1313185	PtrMemberAccess	s -> vga		1313158	0					
ANR	1313186	Identifier	s		1313158	0					
ANR	1313187	Identifier	vga		1313158	1					
ANR	1313188	Identifier	sr		1313158	1					
ANR	1313189	PrimaryExpression	0x17		1313158	1					
ANR	1313190	PrimaryExpression	0x44		1313158	1					
ANR	1313191	PrimaryExpression	0x44		1313158	1					
ANR	1313192	EqualityExpression	( addr & s -> linear_mmio_mask ) == s -> linear_mmio_mask		1313158	1		==			
ANR	1313193	BitAndExpression	addr & s -> linear_mmio_mask		1313158	0		&			
ANR	1313194	Identifier	addr		1313158	0					
ANR	1313195	PtrMemberAccess	s -> linear_mmio_mask		1313158	1					
ANR	1313196	Identifier	s		1313158	0					
ANR	1313197	Identifier	linear_mmio_mask		1313158	1					
ANR	1313198	PtrMemberAccess	s -> linear_mmio_mask		1313158	1					
ANR	1313199	Identifier	s		1313158	0					
ANR	1313200	Identifier	linear_mmio_mask		1313158	1					
ANR	1313201	CompoundStatement		15:63:202:202	1313158	1					
ANR	1313202	ExpressionStatement	"ret = cirrus_mmio_blt_read ( s , addr & 0xff )"	23:1:359:401	1313158	0	True				
ANR	1313203	AssignmentExpression	"ret = cirrus_mmio_blt_read ( s , addr & 0xff )"		1313158	0		=			
ANR	1313204	Identifier	ret		1313158	0					
ANR	1313205	CallExpression	"cirrus_mmio_blt_read ( s , addr & 0xff )"		1313158	1					
ANR	1313206	Callee	cirrus_mmio_blt_read		1313158	0					
ANR	1313207	Identifier	cirrus_mmio_blt_read		1313158	0					
ANR	1313208	ArgumentList	s		1313158	1					
ANR	1313209	Argument	s		1313158	0					
ANR	1313210	Identifier	s		1313158	0					
ANR	1313211	Argument	addr & 0xff		1313158	1					
ANR	1313212	BitAndExpression	addr & 0xff		1313158	0		&			
ANR	1313213	Identifier	addr		1313158	0					
ANR	1313214	PrimaryExpression	0xff		1313158	1					
ANR	1313215	ElseStatement	else		1313158	0					
ANR	1313216	IfStatement	if ( 0 )		1313158	0					
ANR	1313217	Condition	0	25:15:419:419	1313158	0	True				
ANR	1313218	PrimaryExpression	0		1313158	0					
ANR	1313219	CompoundStatement		21:18:295:295	1313158	1					
ANR	1313220	ExpressionStatement	ret = 0xff	29:1:452:462	1313158	0	True				
ANR	1313221	AssignmentExpression	ret = 0xff		1313158	0		=			
ANR	1313222	Identifier	ret		1313158	0					
ANR	1313223	PrimaryExpression	0xff		1313158	1					
ANR	1313224	ElseStatement	else		1313158	0					
ANR	1313225	CompoundStatement		27:11:349:349	1313158	0					
ANR	1313226	IfStatement	if ( ( s -> vga . gr [ 0x0B ] & 0x14 ) == 0x14 )		1313158	0					
ANR	1313227	Condition	( s -> vga . gr [ 0x0B ] & 0x14 ) == 0x14	35:5:505:536	1313158	0	True				
ANR	1313228	EqualityExpression	( s -> vga . gr [ 0x0B ] & 0x14 ) == 0x14		1313158	0		==			
ANR	1313229	BitAndExpression	s -> vga . gr [ 0x0B ] & 0x14		1313158	0		&			
ANR	1313230	ArrayIndexing	s -> vga . gr [ 0x0B ]		1313158	0					
ANR	1313231	MemberAccess	s -> vga . gr		1313158	0					
ANR	1313232	PtrMemberAccess	s -> vga		1313158	0					
ANR	1313233	Identifier	s		1313158	0					
ANR	1313234	Identifier	vga		1313158	1					
ANR	1313235	Identifier	gr		1313158	1					
ANR	1313236	PrimaryExpression	0x0B		1313158	1					
ANR	1313237	PrimaryExpression	0x14		1313158	1					
ANR	1313238	PrimaryExpression	0x14		1313158	1					
ANR	1313239	CompoundStatement		31:39:412:412	1313158	1					
ANR	1313240	ExpressionStatement	addr <<= 4	37:5:547:557	1313158	0	True				
ANR	1313241	AssignmentExpression	addr <<= 4		1313158	0		<<=			
ANR	1313242	Identifier	addr		1313158	0					
ANR	1313243	PrimaryExpression	4		1313158	1					
ANR	1313244	ElseStatement	else		1313158	0					
ANR	1313245	IfStatement	if ( s -> vga . gr [ 0x0B ] & 0x02 )		1313158	0					
ANR	1313246	Condition	s -> vga . gr [ 0x0B ] & 0x02	39:12:572:593	1313158	0	True				
ANR	1313247	BitAndExpression	s -> vga . gr [ 0x0B ] & 0x02		1313158	0		&			
ANR	1313248	ArrayIndexing	s -> vga . gr [ 0x0B ]		1313158	0					
ANR	1313249	MemberAccess	s -> vga . gr		1313158	0					
ANR	1313250	PtrMemberAccess	s -> vga		1313158	0					
ANR	1313251	Identifier	s		1313158	0					
ANR	1313252	Identifier	vga		1313158	1					
ANR	1313253	Identifier	gr		1313158	1					
ANR	1313254	PrimaryExpression	0x0B		1313158	1					
ANR	1313255	PrimaryExpression	0x02		1313158	1					
ANR	1313256	CompoundStatement		35:36:469:469	1313158	1					
ANR	1313257	ExpressionStatement	addr <<= 3	41:5:604:614	1313158	0	True				
ANR	1313258	AssignmentExpression	addr <<= 3		1313158	0		<<=			
ANR	1313259	Identifier	addr		1313158	0					
ANR	1313260	PrimaryExpression	3		1313158	1					
ANR	1313261	ExpressionStatement	addr &= s -> cirrus_addr_mask	45:1:622:649	1313158	1	True				
ANR	1313262	AssignmentExpression	addr &= s -> cirrus_addr_mask		1313158	0		&=			
ANR	1313263	Identifier	addr		1313158	0					
ANR	1313264	PtrMemberAccess	s -> cirrus_addr_mask		1313158	1					
ANR	1313265	Identifier	s		1313158	0					
ANR	1313266	Identifier	cirrus_addr_mask		1313158	1					
ANR	1313267	ExpressionStatement	ret = * ( s -> vga . vram_ptr + addr )	47:1:653:684	1313158	2	True				
ANR	1313268	AssignmentExpression	ret = * ( s -> vga . vram_ptr + addr )		1313158	0		=			
ANR	1313269	Identifier	ret		1313158	0					
ANR	1313270	UnaryOperationExpression	* ( s -> vga . vram_ptr + addr )		1313158	1					
ANR	1313271	UnaryOperator	*		1313158	0					
ANR	1313272	AdditiveExpression	s -> vga . vram_ptr + addr		1313158	1		+			
ANR	1313273	MemberAccess	s -> vga . vram_ptr		1313158	0					
ANR	1313274	PtrMemberAccess	s -> vga		1313158	0					
ANR	1313275	Identifier	s		1313158	0					
ANR	1313276	Identifier	vga		1313158	1					
ANR	1313277	Identifier	vram_ptr		1313158	1					
ANR	1313278	Identifier	addr		1313158	1					
ANR	1313279	ReturnStatement	return ret ;	53:4:700:710	1313158	4	True				
ANR	1313280	Identifier	ret		1313158	0					
ANR	1313281	ReturnType	static uint64_t		1313158	1					
ANR	1313282	Identifier	cirrus_linear_read		1313158	2					
ANR	1313283	ParameterList	"void * opaque , target_phys_addr_t addr , unsigned size"		1313158	3					
ANR	1313284	Parameter	void * opaque	1:35:35:46	1313158	0	True				
ANR	1313285	ParameterType	void *		1313158	0					
ANR	1313286	Identifier	opaque		1313158	1					
ANR	1313287	Parameter	target_phys_addr_t addr	1:49:49:71	1313158	1	True				
ANR	1313288	ParameterType	target_phys_addr_t		1313158	0					
ANR	1313289	Identifier	addr		1313158	1					
ANR	1313290	Parameter	unsigned size	3:35:110:122	1313158	2	True				
ANR	1313291	ParameterType	unsigned		1313158	0					
ANR	1313292	Identifier	size		1313158	1					
ANR	1313293	CFGEntryNode	ENTRY		1313158		True				
ANR	1313294	CFGExitNode	EXIT		1313158		True				
ANR	1313295	Symbol	ret		1313158						
ANR	1313296	Symbol	s -> linear_mmio_mask		1313158						
ANR	1313297	Symbol	opaque		1313158						
ANR	1313298	Symbol	cirrus_mmio_blt_read		1313158						
ANR	1313299	Symbol	s -> vga . sr		1313158						
ANR	1313300	Symbol	* s -> vga . gr		1313158						
ANR	1313301	Symbol	* s -> vga		1313158						
ANR	1313302	Symbol	s -> vga . gr		1313158						
ANR	1313303	Symbol	* ( s -> vga . vram_ptr + addr )		1313158						
ANR	1313304	Symbol	s -> cirrus_addr_mask		1313158						
ANR	1313305	Symbol	s		1313158						
ANR	1313306	Symbol	* s -> vga . sr		1313158						
ANR	1313307	Symbol	size		1313158						
ANR	1313308	Symbol	* s -> vga . vram_ptr		1313158						
ANR	1313309	Symbol	* * s		1313158						
ANR	1313310	Symbol	* addr		1313158						
ANR	1313311	Symbol	s -> vga . vram_ptr		1313158						
ANR	1313312	Symbol	addr		1313158						
ANR	1313313	Symbol	s -> vga		1313158						
ANR	1313314	Symbol	* s		1313158						
