command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8013455	File	/home/p4ultr4n/workplace/ReVeal/raw_code/sub_left_prediction_0.c								
ANR	8013456	Function	sub_left_prediction	1:0:0:1381							
ANR	8013457	FunctionDef	"sub_left_prediction (HYuvContext * s , uint8_t * dst , const uint8_t * src , int w , int left)"		8013456	0					
ANR	8013458	CompoundStatement		5:0:145:1381	8013456	0					
ANR	8013459	IdentifierDeclStatement	int i ;	7:4:152:157	8013456	0	True				
ANR	8013460	IdentifierDecl	i		8013456	0					
ANR	8013461	IdentifierDeclType	int		8013456	0					
ANR	8013462	Identifier	i		8013456	1					
ANR	8013463	IfStatement	if ( s -> bps <= 8 )		8013456	1					
ANR	8013464	Condition	s -> bps <= 8	9:8:168:178	8013456	0	True				
ANR	8013465	RelationalExpression	s -> bps <= 8		8013456	0		<=			
ANR	8013466	PtrMemberAccess	s -> bps		8013456	0					
ANR	8013467	Identifier	s		8013456	0					
ANR	8013468	Identifier	bps		8013456	1					
ANR	8013469	PrimaryExpression	8		8013456	1					
ANR	8013470	CompoundStatement		5:21:35:35	8013456	1					
ANR	8013471	IfStatement	if ( w < 32 )		8013456	0					
ANR	8013472	Condition	w < 32	11:12:196:201	8013456	0	True				
ANR	8013473	RelationalExpression	w < 32		8013456	0		<			
ANR	8013474	Identifier	w		8013456	0					
ANR	8013475	PrimaryExpression	32		8013456	1					
ANR	8013476	CompoundStatement		7:20:58:58	8013456	1					
ANR	8013477	ForStatement	for ( i = 0 ; i < w ; i ++ )		8013456	0					
ANR	8013478	ForInit	i = 0 ;	13:17:224:229	8013456	0	True				
ANR	8013479	AssignmentExpression	i = 0		8013456	0		=			
ANR	8013480	Identifier	i		8013456	0					
ANR	8013481	PrimaryExpression	0		8013456	1					
ANR	8013482	Condition	i < w	13:24:231:235	8013456	1	True				
ANR	8013483	RelationalExpression	i < w		8013456	0		<			
ANR	8013484	Identifier	i		8013456	0					
ANR	8013485	Identifier	w		8013456	1					
ANR	8013486	PostIncDecOperationExpression	i ++	13:31:238:240	8013456	2	True				
ANR	8013487	Identifier	i		8013456	0					
ANR	8013488	IncDec	++		8013456	1					
ANR	8013489	CompoundStatement		11:16:116:139	8013456	3					
ANR	8013490	IdentifierDeclStatement	const int temp = src [ i ] ;	15:16:262:285	8013456	0	True				
ANR	8013491	IdentifierDecl	temp = src [ i ]		8013456	0					
ANR	8013492	IdentifierDeclType	const int		8013456	0					
ANR	8013493	Identifier	temp		8013456	1					
ANR	8013494	AssignmentExpression	temp = src [ i ]		8013456	2		=			
ANR	8013495	Identifier	temp		8013456	0					
ANR	8013496	ArrayIndexing	src [ i ]		8013456	1					
ANR	8013497	Identifier	src		8013456	0					
ANR	8013498	Identifier	i		8013456	1					
ANR	8013499	ExpressionStatement	dst [ i ] = temp - left	17:16:304:324	8013456	1	True				
ANR	8013500	AssignmentExpression	dst [ i ] = temp - left		8013456	0		=			
ANR	8013501	ArrayIndexing	dst [ i ]		8013456	0					
ANR	8013502	Identifier	dst		8013456	0					
ANR	8013503	Identifier	i		8013456	1					
ANR	8013504	AdditiveExpression	temp - left		8013456	1		-			
ANR	8013505	Identifier	temp		8013456	0					
ANR	8013506	Identifier	left		8013456	1					
ANR	8013507	ExpressionStatement	left = temp	19:16:343:356	8013456	2	True				
ANR	8013508	AssignmentExpression	left = temp		8013456	0		=			
ANR	8013509	Identifier	left		8013456	0					
ANR	8013510	Identifier	temp		8013456	1					
ANR	8013511	ReturnStatement	return left ;	23:12:386:397	8013456	1	True				
ANR	8013512	Identifier	left		8013456	0					
ANR	8013513	ElseStatement	else		8013456	0					
ANR	8013514	CompoundStatement		21:15:269:269	8013456	0					
ANR	8013515	ForStatement	for ( i = 0 ; i < 32 ; i ++ )		8013456	0					
ANR	8013516	ForInit	i = 0 ;	27:17:435:440	8013456	0	True				
ANR	8013517	AssignmentExpression	i = 0		8013456	0		=			
ANR	8013518	Identifier	i		8013456	0					
ANR	8013519	PrimaryExpression	0		8013456	1					
ANR	8013520	Condition	i < 32	27:24:442:447	8013456	1	True				
ANR	8013521	RelationalExpression	i < 32		8013456	0		<			
ANR	8013522	Identifier	i		8013456	0					
ANR	8013523	PrimaryExpression	32		8013456	1					
ANR	8013524	PostIncDecOperationExpression	i ++	27:32:450:452	8013456	2	True				
ANR	8013525	Identifier	i		8013456	0					
ANR	8013526	IncDec	++		8013456	1					
ANR	8013527	CompoundStatement		25:16:328:351	8013456	3					
ANR	8013528	IdentifierDeclStatement	const int temp = src [ i ] ;	29:16:474:497	8013456	0	True				
ANR	8013529	IdentifierDecl	temp = src [ i ]		8013456	0					
ANR	8013530	IdentifierDeclType	const int		8013456	0					
ANR	8013531	Identifier	temp		8013456	1					
ANR	8013532	AssignmentExpression	temp = src [ i ]		8013456	2		=			
ANR	8013533	Identifier	temp		8013456	0					
ANR	8013534	ArrayIndexing	src [ i ]		8013456	1					
ANR	8013535	Identifier	src		8013456	0					
ANR	8013536	Identifier	i		8013456	1					
ANR	8013537	ExpressionStatement	dst [ i ] = temp - left	31:16:516:536	8013456	1	True				
ANR	8013538	AssignmentExpression	dst [ i ] = temp - left		8013456	0		=			
ANR	8013539	ArrayIndexing	dst [ i ]		8013456	0					
ANR	8013540	Identifier	dst		8013456	0					
ANR	8013541	Identifier	i		8013456	1					
ANR	8013542	AdditiveExpression	temp - left		8013456	1		-			
ANR	8013543	Identifier	temp		8013456	0					
ANR	8013544	Identifier	left		8013456	1					
ANR	8013545	ExpressionStatement	left = temp	33:16:555:568	8013456	2	True				
ANR	8013546	AssignmentExpression	left = temp		8013456	0		=			
ANR	8013547	Identifier	left		8013456	0					
ANR	8013548	Identifier	temp		8013456	1					
ANR	8013549	ExpressionStatement	"s -> llvidencdsp . diff_bytes ( dst + 32 , src + 32 , src + 31 , w - 32 )"	37:12:598:661	8013456	1	True				
ANR	8013550	CallExpression	"s -> llvidencdsp . diff_bytes ( dst + 32 , src + 32 , src + 31 , w - 32 )"		8013456	0					
ANR	8013551	Callee	s -> llvidencdsp . diff_bytes		8013456	0					
ANR	8013552	MemberAccess	s -> llvidencdsp . diff_bytes		8013456	0					
ANR	8013553	PtrMemberAccess	s -> llvidencdsp		8013456	0					
ANR	8013554	Identifier	s		8013456	0					
ANR	8013555	Identifier	llvidencdsp		8013456	1					
ANR	8013556	Identifier	diff_bytes		8013456	1					
ANR	8013557	ArgumentList	dst + 32		8013456	1					
ANR	8013558	Argument	dst + 32		8013456	0					
ANR	8013559	AdditiveExpression	dst + 32		8013456	0		+			
ANR	8013560	Identifier	dst		8013456	0					
ANR	8013561	PrimaryExpression	32		8013456	1					
ANR	8013562	Argument	src + 32		8013456	1					
ANR	8013563	AdditiveExpression	src + 32		8013456	0		+			
ANR	8013564	Identifier	src		8013456	0					
ANR	8013565	PrimaryExpression	32		8013456	1					
ANR	8013566	Argument	src + 31		8013456	2					
ANR	8013567	AdditiveExpression	src + 31		8013456	0		+			
ANR	8013568	Identifier	src		8013456	0					
ANR	8013569	PrimaryExpression	31		8013456	1					
ANR	8013570	Argument	w - 32		8013456	3					
ANR	8013571	AdditiveExpression	w - 32		8013456	0		-			
ANR	8013572	Identifier	w		8013456	0					
ANR	8013573	PrimaryExpression	32		8013456	1					
ANR	8013574	ReturnStatement	return src [ w - 1 ] ;	39:12:676:691	8013456	2	True				
ANR	8013575	ArrayIndexing	src [ w - 1 ]		8013456	0					
ANR	8013576	Identifier	src		8013456	0					
ANR	8013577	AdditiveExpression	w - 1		8013456	1		-			
ANR	8013578	Identifier	w		8013456	0					
ANR	8013579	PrimaryExpression	1		8013456	1					
ANR	8013580	ElseStatement	else		8013456	0					
ANR	8013581	CompoundStatement		43:8:637:682	8013456	0					
ANR	8013582	IdentifierDeclStatement	const uint16_t * src16 = ( const uint16_t * ) src ;	45:8:727:772	8013456	0	True				
ANR	8013583	IdentifierDecl	* src16 = ( const uint16_t * ) src		8013456	0					
ANR	8013584	IdentifierDeclType	const uint16_t *		8013456	0					
ANR	8013585	Identifier	src16		8013456	1					
ANR	8013586	AssignmentExpression	* src16 = ( const uint16_t * ) src		8013456	2		=			
ANR	8013587	Identifier	src16		8013456	0					
ANR	8013588	CastExpression	( const uint16_t * ) src		8013456	1					
ANR	8013589	CastTarget	const uint16_t *		8013456	0					
ANR	8013590	Identifier	src		8013456	1					
ANR	8013591	IdentifierDeclStatement	uint16_t * dst16 = ( uint16_t * ) dst ;	47:8:783:828	8013456	1	True				
ANR	8013592	IdentifierDecl	* dst16 = ( uint16_t * ) dst		8013456	0					
ANR	8013593	IdentifierDeclType	uint16_t *		8013456	0					
ANR	8013594	Identifier	dst16		8013456	1					
ANR	8013595	AssignmentExpression	* dst16 = ( uint16_t * ) dst		8013456	2		=			
ANR	8013596	Identifier	dst16		8013456	0					
ANR	8013597	CastExpression	( uint16_t * ) dst		8013456	1					
ANR	8013598	CastTarget	uint16_t *		8013456	0					
ANR	8013599	Identifier	dst		8013456	1					
ANR	8013600	IfStatement	if ( w < 32 )		8013456	2					
ANR	8013601	Condition	w < 32	49:12:843:848	8013456	0	True				
ANR	8013602	RelationalExpression	w < 32		8013456	0		<			
ANR	8013603	Identifier	w		8013456	0					
ANR	8013604	PrimaryExpression	32		8013456	1					
ANR	8013605	CompoundStatement		45:20:705:705	8013456	1					
ANR	8013606	ForStatement	for ( i = 0 ; i < w ; i ++ )		8013456	0					
ANR	8013607	ForInit	i = 0 ;	51:17:871:876	8013456	0	True				
ANR	8013608	AssignmentExpression	i = 0		8013456	0		=			
ANR	8013609	Identifier	i		8013456	0					
ANR	8013610	PrimaryExpression	0		8013456	1					
ANR	8013611	Condition	i < w	51:24:878:882	8013456	1	True				
ANR	8013612	RelationalExpression	i < w		8013456	0		<			
ANR	8013613	Identifier	i		8013456	0					
ANR	8013614	Identifier	w		8013456	1					
ANR	8013615	PostIncDecOperationExpression	i ++	51:31:885:887	8013456	2	True				
ANR	8013616	Identifier	i		8013456	0					
ANR	8013617	IncDec	++		8013456	1					
ANR	8013618	CompoundStatement		49:16:763:788	8013456	3					
ANR	8013619	IdentifierDeclStatement	const int temp = src16 [ i ] ;	53:16:909:934	8013456	0	True				
ANR	8013620	IdentifierDecl	temp = src16 [ i ]		8013456	0					
ANR	8013621	IdentifierDeclType	const int		8013456	0					
ANR	8013622	Identifier	temp		8013456	1					
ANR	8013623	AssignmentExpression	temp = src16 [ i ]		8013456	2		=			
ANR	8013624	Identifier	temp		8013456	0					
ANR	8013625	ArrayIndexing	src16 [ i ]		8013456	1					
ANR	8013626	Identifier	src16		8013456	0					
ANR	8013627	Identifier	i		8013456	1					
ANR	8013628	ExpressionStatement	dst16 [ i ] = temp - left	55:16:953:975	8013456	1	True				
ANR	8013629	AssignmentExpression	dst16 [ i ] = temp - left		8013456	0		=			
ANR	8013630	ArrayIndexing	dst16 [ i ]		8013456	0					
ANR	8013631	Identifier	dst16		8013456	0					
ANR	8013632	Identifier	i		8013456	1					
ANR	8013633	AdditiveExpression	temp - left		8013456	1		-			
ANR	8013634	Identifier	temp		8013456	0					
ANR	8013635	Identifier	left		8013456	1					
ANR	8013636	ExpressionStatement	left = temp	57:16:994:1007	8013456	2	True				
ANR	8013637	AssignmentExpression	left = temp		8013456	0		=			
ANR	8013638	Identifier	left		8013456	0					
ANR	8013639	Identifier	temp		8013456	1					
ANR	8013640	ReturnStatement	return left ;	61:12:1037:1048	8013456	1	True				
ANR	8013641	Identifier	left		8013456	0					
ANR	8013642	ElseStatement	else		8013456	0					
ANR	8013643	CompoundStatement		59:15:920:920	8013456	0					
ANR	8013644	ForStatement	for ( i = 0 ; i < 16 ; i ++ )		8013456	0					
ANR	8013645	ForInit	i = 0 ;	65:17:1086:1091	8013456	0	True				
ANR	8013646	AssignmentExpression	i = 0		8013456	0		=			
ANR	8013647	Identifier	i		8013456	0					
ANR	8013648	PrimaryExpression	0		8013456	1					
ANR	8013649	Condition	i < 16	65:24:1093:1098	8013456	1	True				
ANR	8013650	RelationalExpression	i < 16		8013456	0		<			
ANR	8013651	Identifier	i		8013456	0					
ANR	8013652	PrimaryExpression	16		8013456	1					
ANR	8013653	PostIncDecOperationExpression	i ++	65:32:1101:1103	8013456	2	True				
ANR	8013654	Identifier	i		8013456	0					
ANR	8013655	IncDec	++		8013456	1					
ANR	8013656	CompoundStatement		63:16:979:1004	8013456	3					
ANR	8013657	IdentifierDeclStatement	const int temp = src16 [ i ] ;	67:16:1125:1150	8013456	0	True				
ANR	8013658	IdentifierDecl	temp = src16 [ i ]		8013456	0					
ANR	8013659	IdentifierDeclType	const int		8013456	0					
ANR	8013660	Identifier	temp		8013456	1					
ANR	8013661	AssignmentExpression	temp = src16 [ i ]		8013456	2		=			
ANR	8013662	Identifier	temp		8013456	0					
ANR	8013663	ArrayIndexing	src16 [ i ]		8013456	1					
ANR	8013664	Identifier	src16		8013456	0					
ANR	8013665	Identifier	i		8013456	1					
ANR	8013666	ExpressionStatement	dst16 [ i ] = temp - left	69:16:1169:1191	8013456	1	True				
ANR	8013667	AssignmentExpression	dst16 [ i ] = temp - left		8013456	0		=			
ANR	8013668	ArrayIndexing	dst16 [ i ]		8013456	0					
ANR	8013669	Identifier	dst16		8013456	0					
ANR	8013670	Identifier	i		8013456	1					
ANR	8013671	AdditiveExpression	temp - left		8013456	1		-			
ANR	8013672	Identifier	temp		8013456	0					
ANR	8013673	Identifier	left		8013456	1					
ANR	8013674	ExpressionStatement	left = temp	71:16:1210:1223	8013456	2	True				
ANR	8013675	AssignmentExpression	left = temp		8013456	0		=			
ANR	8013676	Identifier	left		8013456	0					
ANR	8013677	Identifier	temp		8013456	1					
ANR	8013678	ExpressionStatement	"s -> hencdsp . diff_int16 ( dst16 + 16 , src16 + 16 , src16 + 15 , s -> n - 1 , w - 16 )"	75:12:1253:1328	8013456	1	True				
ANR	8013679	CallExpression	"s -> hencdsp . diff_int16 ( dst16 + 16 , src16 + 16 , src16 + 15 , s -> n - 1 , w - 16 )"		8013456	0					
ANR	8013680	Callee	s -> hencdsp . diff_int16		8013456	0					
ANR	8013681	MemberAccess	s -> hencdsp . diff_int16		8013456	0					
ANR	8013682	PtrMemberAccess	s -> hencdsp		8013456	0					
ANR	8013683	Identifier	s		8013456	0					
ANR	8013684	Identifier	hencdsp		8013456	1					
ANR	8013685	Identifier	diff_int16		8013456	1					
ANR	8013686	ArgumentList	dst16 + 16		8013456	1					
ANR	8013687	Argument	dst16 + 16		8013456	0					
ANR	8013688	AdditiveExpression	dst16 + 16		8013456	0		+			
ANR	8013689	Identifier	dst16		8013456	0					
ANR	8013690	PrimaryExpression	16		8013456	1					
ANR	8013691	Argument	src16 + 16		8013456	1					
ANR	8013692	AdditiveExpression	src16 + 16		8013456	0		+			
ANR	8013693	Identifier	src16		8013456	0					
ANR	8013694	PrimaryExpression	16		8013456	1					
ANR	8013695	Argument	src16 + 15		8013456	2					
ANR	8013696	AdditiveExpression	src16 + 15		8013456	0		+			
ANR	8013697	Identifier	src16		8013456	0					
ANR	8013698	PrimaryExpression	15		8013456	1					
ANR	8013699	Argument	s -> n - 1		8013456	3					
ANR	8013700	AdditiveExpression	s -> n - 1		8013456	0		-			
ANR	8013701	PtrMemberAccess	s -> n		8013456	0					
ANR	8013702	Identifier	s		8013456	0					
ANR	8013703	Identifier	n		8013456	1					
ANR	8013704	PrimaryExpression	1		8013456	1					
ANR	8013705	Argument	w - 16		8013456	4					
ANR	8013706	AdditiveExpression	w - 16		8013456	0		-			
ANR	8013707	Identifier	w		8013456	0					
ANR	8013708	PrimaryExpression	16		8013456	1					
ANR	8013709	ReturnStatement	return src16 [ w - 1 ] ;	77:12:1343:1360	8013456	2	True				
ANR	8013710	ArrayIndexing	src16 [ w - 1 ]		8013456	0					
ANR	8013711	Identifier	src16		8013456	0					
ANR	8013712	AdditiveExpression	w - 1		8013456	1		-			
ANR	8013713	Identifier	w		8013456	0					
ANR	8013714	PrimaryExpression	1		8013456	1					
ANR	8013715	ReturnType	static inline int		8013456	1					
ANR	8013716	Identifier	sub_left_prediction		8013456	2					
ANR	8013717	ParameterList	"HYuvContext * s , uint8_t * dst , const uint8_t * src , int w , int left"		8013456	3					
ANR	8013718	Parameter	HYuvContext * s	1:38:38:51	8013456	0	True				
ANR	8013719	ParameterType	HYuvContext *		8013456	0					
ANR	8013720	Identifier	s		8013456	1					
ANR	8013721	Parameter	uint8_t * dst	1:54:54:65	8013456	1	True				
ANR	8013722	ParameterType	uint8_t *		8013456	0					
ANR	8013723	Identifier	dst		8013456	1					
ANR	8013724	Parameter	const uint8_t * src	3:38:107:124	8013456	2	True				
ANR	8013725	ParameterType	const uint8_t *		8013456	0					
ANR	8013726	Identifier	src		8013456	1					
ANR	8013727	Parameter	int w	3:58:127:131	8013456	3	True				
ANR	8013728	ParameterType	int		8013456	0					
ANR	8013729	Identifier	w		8013456	1					
ANR	8013730	Parameter	int left	3:65:134:141	8013456	4	True				
ANR	8013731	ParameterType	int		8013456	0					
ANR	8013732	Identifier	left		8013456	1					
ANR	8013733	CFGEntryNode	ENTRY		8013456		True				
ANR	8013734	CFGExitNode	EXIT		8013456		True				
ANR	8013735	Symbol	src16		8013456						
ANR	8013736	Symbol	* w		8013456						
ANR	8013737	Symbol	temp		8013456						
ANR	8013738	Symbol	* dst16		8013456						
ANR	8013739	Symbol	dst		8013456						
ANR	8013740	Symbol	src		8013456						
ANR	8013741	Symbol	i		8013456						
ANR	8013742	Symbol	* src		8013456						
ANR	8013743	Symbol	s -> hencdsp		8013456						
ANR	8013744	Symbol	* dst		8013456						
ANR	8013745	Symbol	s -> bps		8013456						
ANR	8013746	Symbol	s		8013456						
ANR	8013747	Symbol	* i		8013456						
ANR	8013748	Symbol	left		8013456						
ANR	8013749	Symbol	s -> llvidencdsp		8013456						
ANR	8013750	Symbol	w		8013456						
ANR	8013751	Symbol	* src16		8013456						
ANR	8013752	Symbol	s -> n		8013456						
ANR	8013753	Symbol	* s		8013456						
ANR	8013754	Symbol	dst16		8013456						
