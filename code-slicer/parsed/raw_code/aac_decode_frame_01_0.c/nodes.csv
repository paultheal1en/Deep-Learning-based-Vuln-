command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	324887	File	/home/p4ultr4n/workplace/ReVeal/raw_code/aac_decode_frame_01_0.c								
ANR	324888	Function	aac_decode_frame	1:0:0:3639							
ANR	324889	FunctionDef	"aac_decode_frame (AVCodecContext * avccontext , void * data , int * data_size , const uint8_t * buf , int buf_size)"		324888	0					
ANR	324890	CompoundStatement		1:122:122:3639	324888	0					
ANR	324891	IdentifierDeclStatement	AACContext * ac = avccontext -> priv_data ;	3:4:129:168	324888	0	True				
ANR	324892	IdentifierDecl	* ac = avccontext -> priv_data		324888	0					
ANR	324893	IdentifierDeclType	AACContext *		324888	0					
ANR	324894	Identifier	ac		324888	1					
ANR	324895	AssignmentExpression	* ac = avccontext -> priv_data		324888	2		=			
ANR	324896	Identifier	ac		324888	0					
ANR	324897	PtrMemberAccess	avccontext -> priv_data		324888	1					
ANR	324898	Identifier	avccontext		324888	0					
ANR	324899	Identifier	priv_data		324888	1					
ANR	324900	IdentifierDeclStatement	GetBitContext gb ;	5:4:175:191	324888	1	True				
ANR	324901	IdentifierDecl	gb		324888	0					
ANR	324902	IdentifierDeclType	GetBitContext		324888	0					
ANR	324903	Identifier	gb		324888	1					
ANR	324904	IdentifierDeclStatement	enum RawDataBlockType elem_type ;	7:4:198:229	324888	2	True				
ANR	324905	IdentifierDecl	elem_type		324888	0					
ANR	324906	IdentifierDeclType	enum RawDataBlockType		324888	0					
ANR	324907	Identifier	elem_type		324888	1					
ANR	324908	IdentifierDeclStatement	"int err , elem_id , data_size_tmp ;"	9:4:236:267	324888	3	True				
ANR	324909	IdentifierDecl	err		324888	0					
ANR	324910	IdentifierDeclType	int		324888	0					
ANR	324911	Identifier	err		324888	1					
ANR	324912	IdentifierDecl	elem_id		324888	1					
ANR	324913	IdentifierDeclType	int		324888	0					
ANR	324914	Identifier	elem_id		324888	1					
ANR	324915	IdentifierDecl	data_size_tmp		324888	2					
ANR	324916	IdentifierDeclType	int		324888	0					
ANR	324917	Identifier	data_size_tmp		324888	1					
ANR	324918	ExpressionStatement	"init_get_bits ( & gb , buf , buf_size * 8 )"	13:4:276:311	324888	4	True				
ANR	324919	CallExpression	"init_get_bits ( & gb , buf , buf_size * 8 )"		324888	0					
ANR	324920	Callee	init_get_bits		324888	0					
ANR	324921	Identifier	init_get_bits		324888	0					
ANR	324922	ArgumentList	& gb		324888	1					
ANR	324923	Argument	& gb		324888	0					
ANR	324924	UnaryOperationExpression	& gb		324888	0					
ANR	324925	UnaryOperator	&		324888	0					
ANR	324926	Identifier	gb		324888	1					
ANR	324927	Argument	buf		324888	1					
ANR	324928	Identifier	buf		324888	0					
ANR	324929	Argument	buf_size * 8		324888	2					
ANR	324930	MultiplicativeExpression	buf_size * 8		324888	0		*			
ANR	324931	Identifier	buf_size		324888	0					
ANR	324932	PrimaryExpression	8		324888	1					
ANR	324933	IfStatement	"if ( show_bits ( & gb , 12 ) == 0xfff )"		324888	5					
ANR	324934	Condition	"show_bits ( & gb , 12 ) == 0xfff"	17:8:324:350	324888	0	True				
ANR	324935	EqualityExpression	"show_bits ( & gb , 12 ) == 0xfff"		324888	0		==			
ANR	324936	CallExpression	"show_bits ( & gb , 12 )"		324888	0					
ANR	324937	Callee	show_bits		324888	0					
ANR	324938	Identifier	show_bits		324888	0					
ANR	324939	ArgumentList	& gb		324888	1					
ANR	324940	Argument	& gb		324888	0					
ANR	324941	UnaryOperationExpression	& gb		324888	0					
ANR	324942	UnaryOperator	&		324888	0					
ANR	324943	Identifier	gb		324888	1					
ANR	324944	Argument	12		324888	1					
ANR	324945	PrimaryExpression	12		324888	0					
ANR	324946	PrimaryExpression	0xfff		324888	1					
ANR	324947	CompoundStatement		17:37:230:230	324888	1					
ANR	324948	IfStatement	"if ( ( err = parse_adts_frame_header ( ac , & gb ) ) < 0 )"		324888	0					
ANR	324949	Condition	"( err = parse_adts_frame_header ( ac , & gb ) ) < 0"	19:12:368:411	324888	0	True				
ANR	324950	RelationalExpression	"( err = parse_adts_frame_header ( ac , & gb ) ) < 0"		324888	0		<			
ANR	324951	AssignmentExpression	"err = parse_adts_frame_header ( ac , & gb )"		324888	0		=			
ANR	324952	Identifier	err		324888	0					
ANR	324953	CallExpression	"parse_adts_frame_header ( ac , & gb )"		324888	1					
ANR	324954	Callee	parse_adts_frame_header		324888	0					
ANR	324955	Identifier	parse_adts_frame_header		324888	0					
ANR	324956	ArgumentList	ac		324888	1					
ANR	324957	Argument	ac		324888	0					
ANR	324958	Identifier	ac		324888	0					
ANR	324959	Argument	& gb		324888	1					
ANR	324960	UnaryOperationExpression	& gb		324888	0					
ANR	324961	UnaryOperator	&		324888	0					
ANR	324962	Identifier	gb		324888	1					
ANR	324963	PrimaryExpression	0		324888	1					
ANR	324964	CompoundStatement		19:58:291:291	324888	1					
ANR	324965	ExpressionStatement	"av_log ( avccontext , AV_LOG_ERROR , ""Error decoding AAC frame header.\\n"" )"	21:12:429:499	324888	0	True				
ANR	324966	CallExpression	"av_log ( avccontext , AV_LOG_ERROR , ""Error decoding AAC frame header.\\n"" )"		324888	0					
ANR	324967	Callee	av_log		324888	0					
ANR	324968	Identifier	av_log		324888	0					
ANR	324969	ArgumentList	avccontext		324888	1					
ANR	324970	Argument	avccontext		324888	0					
ANR	324971	Identifier	avccontext		324888	0					
ANR	324972	Argument	AV_LOG_ERROR		324888	1					
ANR	324973	Identifier	AV_LOG_ERROR		324888	0					
ANR	324974	Argument	"""Error decoding AAC frame header.\\n"""		324888	2					
ANR	324975	PrimaryExpression	"""Error decoding AAC frame header.\\n"""		324888	0					
ANR	324976	ReturnStatement	return - 1 ;	23:12:514:523	324888	1	True				
ANR	324977	UnaryOperationExpression	- 1		324888	0					
ANR	324978	UnaryOperator	-		324888	0					
ANR	324979	PrimaryExpression	1		324888	1					
ANR	324980	IfStatement	if ( ac -> m4ac . sampling_index > 11 )		324888	1					
ANR	324981	Condition	ac -> m4ac . sampling_index > 11	27:12:549:576	324888	0	True				
ANR	324982	RelationalExpression	ac -> m4ac . sampling_index > 11		324888	0		>			
ANR	324983	MemberAccess	ac -> m4ac . sampling_index		324888	0					
ANR	324984	PtrMemberAccess	ac -> m4ac		324888	0					
ANR	324985	Identifier	ac		324888	0					
ANR	324986	Identifier	m4ac		324888	1					
ANR	324987	Identifier	sampling_index		324888	1					
ANR	324988	PrimaryExpression	11		324888	1					
ANR	324989	CompoundStatement		27:42:456:456	324888	1					
ANR	324990	ExpressionStatement	"av_log ( ac -> avccontext , AV_LOG_ERROR , ""invalid sampling rate index %d\\n"" , ac -> m4ac . sampling_index )"	29:12:594:691	324888	0	True				
ANR	324991	CallExpression	"av_log ( ac -> avccontext , AV_LOG_ERROR , ""invalid sampling rate index %d\\n"" , ac -> m4ac . sampling_index )"		324888	0					
ANR	324992	Callee	av_log		324888	0					
ANR	324993	Identifier	av_log		324888	0					
ANR	324994	ArgumentList	ac -> avccontext		324888	1					
ANR	324995	Argument	ac -> avccontext		324888	0					
ANR	324996	PtrMemberAccess	ac -> avccontext		324888	0					
ANR	324997	Identifier	ac		324888	0					
ANR	324998	Identifier	avccontext		324888	1					
ANR	324999	Argument	AV_LOG_ERROR		324888	1					
ANR	325000	Identifier	AV_LOG_ERROR		324888	0					
ANR	325001	Argument	"""invalid sampling rate index %d\\n"""		324888	2					
ANR	325002	PrimaryExpression	"""invalid sampling rate index %d\\n"""		324888	0					
ANR	325003	Argument	ac -> m4ac . sampling_index		324888	3					
ANR	325004	MemberAccess	ac -> m4ac . sampling_index		324888	0					
ANR	325005	PtrMemberAccess	ac -> m4ac		324888	0					
ANR	325006	Identifier	ac		324888	0					
ANR	325007	Identifier	m4ac		324888	1					
ANR	325008	Identifier	sampling_index		324888	1					
ANR	325009	ReturnStatement	return - 1 ;	31:12:706:715	324888	1	True				
ANR	325010	UnaryOperationExpression	- 1		324888	0					
ANR	325011	UnaryOperator	-		324888	0					
ANR	325012	PrimaryExpression	1		324888	1					
ANR	325013	WhileStatement	"while ( ( elem_type = get_bits ( & gb , 3 ) ) != TYPE_END )"		324888	6					
ANR	325014	Condition	"( elem_type = get_bits ( & gb , 3 ) ) != TYPE_END"	41:11:763:804	324888	0	True				
ANR	325015	EqualityExpression	"( elem_type = get_bits ( & gb , 3 ) ) != TYPE_END"		324888	0		!=			
ANR	325016	AssignmentExpression	"elem_type = get_bits ( & gb , 3 )"		324888	0		=			
ANR	325017	Identifier	elem_type		324888	0					
ANR	325018	CallExpression	"get_bits ( & gb , 3 )"		324888	1					
ANR	325019	Callee	get_bits		324888	0					
ANR	325020	Identifier	get_bits		324888	0					
ANR	325021	ArgumentList	& gb		324888	1					
ANR	325022	Argument	& gb		324888	0					
ANR	325023	UnaryOperationExpression	& gb		324888	0					
ANR	325024	UnaryOperator	&		324888	0					
ANR	325025	Identifier	gb		324888	1					
ANR	325026	Argument	3		324888	1					
ANR	325027	PrimaryExpression	3		324888	0					
ANR	325028	Identifier	TYPE_END		324888	1					
ANR	325029	CompoundStatement		41:55:684:684	324888	1					
ANR	325030	ExpressionStatement	"elem_id = get_bits ( & gb , 4 )"	43:8:818:844	324888	0	True				
ANR	325031	AssignmentExpression	"elem_id = get_bits ( & gb , 4 )"		324888	0		=			
ANR	325032	Identifier	elem_id		324888	0					
ANR	325033	CallExpression	"get_bits ( & gb , 4 )"		324888	1					
ANR	325034	Callee	get_bits		324888	0					
ANR	325035	Identifier	get_bits		324888	0					
ANR	325036	ArgumentList	& gb		324888	1					
ANR	325037	Argument	& gb		324888	0					
ANR	325038	UnaryOperationExpression	& gb		324888	0					
ANR	325039	UnaryOperator	&		324888	0					
ANR	325040	Identifier	gb		324888	1					
ANR	325041	Argument	4		324888	1					
ANR	325042	PrimaryExpression	4		324888	0					
ANR	325043	ExpressionStatement	err = - 1	45:8:855:863	324888	1	True				
ANR	325044	AssignmentExpression	err = - 1		324888	0		=			
ANR	325045	Identifier	err		324888	0					
ANR	325046	UnaryOperationExpression	- 1		324888	1					
ANR	325047	UnaryOperator	-		324888	0					
ANR	325048	PrimaryExpression	1		324888	1					
ANR	325049	IfStatement	if ( elem_type == TYPE_SCE && elem_id == 1 && ! ac -> che [ TYPE_SCE ] [ elem_id ] && ac -> che [ TYPE_LFE ] [ 0 ] )		324888	2					
ANR	325050	Condition	elem_type == TYPE_SCE && elem_id == 1 && ! ac -> che [ TYPE_SCE ] [ elem_id ] && ac -> che [ TYPE_LFE ] [ 0 ]	49:11:879:987	324888	0	True				
ANR	325051	AndExpression	elem_type == TYPE_SCE && elem_id == 1 && ! ac -> che [ TYPE_SCE ] [ elem_id ] && ac -> che [ TYPE_LFE ] [ 0 ]		324888	0		&&			
ANR	325052	EqualityExpression	elem_type == TYPE_SCE		324888	0		==			
ANR	325053	Identifier	elem_type		324888	0					
ANR	325054	Identifier	TYPE_SCE		324888	1					
ANR	325055	AndExpression	elem_id == 1 && ! ac -> che [ TYPE_SCE ] [ elem_id ] && ac -> che [ TYPE_LFE ] [ 0 ]		324888	1		&&			
ANR	325056	EqualityExpression	elem_id == 1		324888	0		==			
ANR	325057	Identifier	elem_id		324888	0					
ANR	325058	PrimaryExpression	1		324888	1					
ANR	325059	AndExpression	! ac -> che [ TYPE_SCE ] [ elem_id ] && ac -> che [ TYPE_LFE ] [ 0 ]		324888	1		&&			
ANR	325060	UnaryOperationExpression	! ac -> che [ TYPE_SCE ] [ elem_id ]		324888	0					
ANR	325061	UnaryOperator	!		324888	0					
ANR	325062	ArrayIndexing	ac -> che [ TYPE_SCE ] [ elem_id ]		324888	1					
ANR	325063	ArrayIndexing	ac -> che [ TYPE_SCE ]		324888	0					
ANR	325064	PtrMemberAccess	ac -> che		324888	0					
ANR	325065	Identifier	ac		324888	0					
ANR	325066	Identifier	che		324888	1					
ANR	325067	Identifier	TYPE_SCE		324888	1					
ANR	325068	Identifier	elem_id		324888	1					
ANR	325069	ArrayIndexing	ac -> che [ TYPE_LFE ] [ 0 ]		324888	1					
ANR	325070	ArrayIndexing	ac -> che [ TYPE_LFE ]		324888	0					
ANR	325071	PtrMemberAccess	ac -> che		324888	0					
ANR	325072	Identifier	ac		324888	0					
ANR	325073	Identifier	che		324888	1					
ANR	325074	Identifier	TYPE_LFE		324888	1					
ANR	325075	PrimaryExpression	0		324888	1					
ANR	325076	CompoundStatement		51:69:867:867	324888	1					
ANR	325077	ExpressionStatement	ac -> che [ TYPE_SCE ] [ elem_id ] = ac -> che [ TYPE_LFE ] [ 0 ]	59:12:1251:1300	324888	0	True				
ANR	325078	AssignmentExpression	ac -> che [ TYPE_SCE ] [ elem_id ] = ac -> che [ TYPE_LFE ] [ 0 ]		324888	0		=			
ANR	325079	ArrayIndexing	ac -> che [ TYPE_SCE ] [ elem_id ]		324888	0					
ANR	325080	ArrayIndexing	ac -> che [ TYPE_SCE ]		324888	0					
ANR	325081	PtrMemberAccess	ac -> che		324888	0					
ANR	325082	Identifier	ac		324888	0					
ANR	325083	Identifier	che		324888	1					
ANR	325084	Identifier	TYPE_SCE		324888	1					
ANR	325085	Identifier	elem_id		324888	1					
ANR	325086	ArrayIndexing	ac -> che [ TYPE_LFE ] [ 0 ]		324888	1					
ANR	325087	ArrayIndexing	ac -> che [ TYPE_LFE ]		324888	0					
ANR	325088	PtrMemberAccess	ac -> che		324888	0					
ANR	325089	Identifier	ac		324888	0					
ANR	325090	Identifier	che		324888	1					
ANR	325091	Identifier	TYPE_LFE		324888	1					
ANR	325092	PrimaryExpression	0		324888	1					
ANR	325093	ExpressionStatement	ac -> che [ TYPE_LFE ] [ 0 ] = NULL	61:12:1315:1342	324888	1	True				
ANR	325094	AssignmentExpression	ac -> che [ TYPE_LFE ] [ 0 ] = NULL		324888	0		=			
ANR	325095	ArrayIndexing	ac -> che [ TYPE_LFE ] [ 0 ]		324888	0					
ANR	325096	ArrayIndexing	ac -> che [ TYPE_LFE ]		324888	0					
ANR	325097	PtrMemberAccess	ac -> che		324888	0					
ANR	325098	Identifier	ac		324888	0					
ANR	325099	Identifier	che		324888	1					
ANR	325100	Identifier	TYPE_LFE		324888	1					
ANR	325101	PrimaryExpression	0		324888	1					
ANR	325102	Identifier	NULL		324888	1					
ANR	325103	IfStatement	if ( elem_type < TYPE_DSE )		324888	3					
ANR	325104	Condition	elem_type < TYPE_DSE	65:11:1367:1386	324888	0	True				
ANR	325105	RelationalExpression	elem_type < TYPE_DSE		324888	0		<			
ANR	325106	Identifier	elem_type		324888	0					
ANR	325107	Identifier	TYPE_DSE		324888	1					
ANR	325108	CompoundStatement		65:33:1266:1266	324888	1					
ANR	325109	IfStatement	if ( ! ac -> che [ elem_type ] [ elem_id ] )		324888	0					
ANR	325110	Condition	! ac -> che [ elem_type ] [ elem_id ]	67:15:1407:1434	324888	0	True				
ANR	325111	UnaryOperationExpression	! ac -> che [ elem_type ] [ elem_id ]		324888	0					
ANR	325112	UnaryOperator	!		324888	0					
ANR	325113	ArrayIndexing	ac -> che [ elem_type ] [ elem_id ]		324888	1					
ANR	325114	ArrayIndexing	ac -> che [ elem_type ]		324888	0					
ANR	325115	PtrMemberAccess	ac -> che		324888	0					
ANR	325116	Identifier	ac		324888	0					
ANR	325117	Identifier	che		324888	1					
ANR	325118	Identifier	elem_type		324888	1					
ANR	325119	Identifier	elem_id		324888	1					
ANR	325120	ReturnStatement	return - 1 ;	69:16:1454:1463	324888	1	True				
ANR	325121	UnaryOperationExpression	- 1		324888	0					
ANR	325122	UnaryOperator	-		324888	0					
ANR	325123	PrimaryExpression	1		324888	1					
ANR	325124	IfStatement	if ( elem_type != TYPE_CCE )		324888	1					
ANR	325125	Condition	elem_type != TYPE_CCE	71:15:1481:1501	324888	0	True				
ANR	325126	EqualityExpression	elem_type != TYPE_CCE		324888	0		!=			
ANR	325127	Identifier	elem_type		324888	0					
ANR	325128	Identifier	TYPE_CCE		324888	1					
ANR	325129	ExpressionStatement	ac -> che [ elem_type ] [ elem_id ] -> coup . coupling_point = 4	73:16:1521:1573	324888	1	True				
ANR	325130	AssignmentExpression	ac -> che [ elem_type ] [ elem_id ] -> coup . coupling_point = 4		324888	0		=			
ANR	325131	MemberAccess	ac -> che [ elem_type ] [ elem_id ] -> coup . coupling_point		324888	0					
ANR	325132	PtrMemberAccess	ac -> che [ elem_type ] [ elem_id ] -> coup		324888	0					
ANR	325133	ArrayIndexing	ac -> che [ elem_type ] [ elem_id ]		324888	0					
ANR	325134	ArrayIndexing	ac -> che [ elem_type ]		324888	0					
ANR	325135	PtrMemberAccess	ac -> che		324888	0					
ANR	325136	Identifier	ac		324888	0					
ANR	325137	Identifier	che		324888	1					
ANR	325138	Identifier	elem_type		324888	1					
ANR	325139	Identifier	elem_id		324888	1					
ANR	325140	Identifier	coup		324888	1					
ANR	325141	Identifier	coupling_point		324888	1					
ANR	325142	PrimaryExpression	4		324888	1					
ANR	325143	SwitchStatement	switch ( elem_type )		324888	4					
ANR	325144	Condition	elem_type	79:16:1605:1613	324888	0	True				
ANR	325145	Identifier	elem_type		324888	0					
ANR	325146	CompoundStatement		79:27:1493:1493	324888	1					
ANR	325147	Label	case TYPE_SCE :	83:8:1629:1642	324888	0	True				
ANR	325148	Identifier	TYPE_SCE		324888	0					
ANR	325149	ExpressionStatement	"err = decode_ics ( ac , & ac -> che [ TYPE_SCE ] [ elem_id ] -> ch [ 0 ] , & gb , 0 , 0 )"	85:12:1657:1724	324888	1	True				
ANR	325150	AssignmentExpression	"err = decode_ics ( ac , & ac -> che [ TYPE_SCE ] [ elem_id ] -> ch [ 0 ] , & gb , 0 , 0 )"		324888	0		=			
ANR	325151	Identifier	err		324888	0					
ANR	325152	CallExpression	"decode_ics ( ac , & ac -> che [ TYPE_SCE ] [ elem_id ] -> ch [ 0 ] , & gb , 0 , 0 )"		324888	1					
ANR	325153	Callee	decode_ics		324888	0					
ANR	325154	Identifier	decode_ics		324888	0					
ANR	325155	ArgumentList	ac		324888	1					
ANR	325156	Argument	ac		324888	0					
ANR	325157	Identifier	ac		324888	0					
ANR	325158	Argument	& ac -> che [ TYPE_SCE ] [ elem_id ] -> ch [ 0 ]		324888	1					
ANR	325159	UnaryOperationExpression	& ac -> che [ TYPE_SCE ] [ elem_id ] -> ch [ 0 ]		324888	0					
ANR	325160	UnaryOperator	&		324888	0					
ANR	325161	ArrayIndexing	ac -> che [ TYPE_SCE ] [ elem_id ] -> ch [ 0 ]		324888	1					
ANR	325162	PtrMemberAccess	ac -> che [ TYPE_SCE ] [ elem_id ] -> ch		324888	0					
ANR	325163	ArrayIndexing	ac -> che [ TYPE_SCE ] [ elem_id ]		324888	0					
ANR	325164	ArrayIndexing	ac -> che [ TYPE_SCE ]		324888	0					
ANR	325165	PtrMemberAccess	ac -> che		324888	0					
ANR	325166	Identifier	ac		324888	0					
ANR	325167	Identifier	che		324888	1					
ANR	325168	Identifier	TYPE_SCE		324888	1					
ANR	325169	Identifier	elem_id		324888	1					
ANR	325170	Identifier	ch		324888	1					
ANR	325171	PrimaryExpression	0		324888	1					
ANR	325172	Argument	& gb		324888	2					
ANR	325173	UnaryOperationExpression	& gb		324888	0					
ANR	325174	UnaryOperator	&		324888	0					
ANR	325175	Identifier	gb		324888	1					
ANR	325176	Argument	0		324888	3					
ANR	325177	PrimaryExpression	0		324888	0					
ANR	325178	Argument	0		324888	4					
ANR	325179	PrimaryExpression	0		324888	0					
ANR	325180	BreakStatement	break ;	87:12:1739:1744	324888	2	True				
ANR	325181	Label	case TYPE_CPE :	91:8:1757:1770	324888	3	True				
ANR	325182	Identifier	TYPE_CPE		324888	0					
ANR	325183	ExpressionStatement	"err = decode_cpe ( ac , & gb , elem_id )"	93:12:1785:1819	324888	4	True				
ANR	325184	AssignmentExpression	"err = decode_cpe ( ac , & gb , elem_id )"		324888	0		=			
ANR	325185	Identifier	err		324888	0					
ANR	325186	CallExpression	"decode_cpe ( ac , & gb , elem_id )"		324888	1					
ANR	325187	Callee	decode_cpe		324888	0					
ANR	325188	Identifier	decode_cpe		324888	0					
ANR	325189	ArgumentList	ac		324888	1					
ANR	325190	Argument	ac		324888	0					
ANR	325191	Identifier	ac		324888	0					
ANR	325192	Argument	& gb		324888	1					
ANR	325193	UnaryOperationExpression	& gb		324888	0					
ANR	325194	UnaryOperator	&		324888	0					
ANR	325195	Identifier	gb		324888	1					
ANR	325196	Argument	elem_id		324888	2					
ANR	325197	Identifier	elem_id		324888	0					
ANR	325198	BreakStatement	break ;	95:12:1834:1839	324888	5	True				
ANR	325199	Label	case TYPE_CCE :	99:8:1852:1865	324888	6	True				
ANR	325200	Identifier	TYPE_CCE		324888	0					
ANR	325201	ExpressionStatement	"err = decode_cce ( ac , & gb , ac -> che [ TYPE_CCE ] [ elem_id ] )"	101:12:1880:1933	324888	7	True				
ANR	325202	AssignmentExpression	"err = decode_cce ( ac , & gb , ac -> che [ TYPE_CCE ] [ elem_id ] )"		324888	0		=			
ANR	325203	Identifier	err		324888	0					
ANR	325204	CallExpression	"decode_cce ( ac , & gb , ac -> che [ TYPE_CCE ] [ elem_id ] )"		324888	1					
ANR	325205	Callee	decode_cce		324888	0					
ANR	325206	Identifier	decode_cce		324888	0					
ANR	325207	ArgumentList	ac		324888	1					
ANR	325208	Argument	ac		324888	0					
ANR	325209	Identifier	ac		324888	0					
ANR	325210	Argument	& gb		324888	1					
ANR	325211	UnaryOperationExpression	& gb		324888	0					
ANR	325212	UnaryOperator	&		324888	0					
ANR	325213	Identifier	gb		324888	1					
ANR	325214	Argument	ac -> che [ TYPE_CCE ] [ elem_id ]		324888	2					
ANR	325215	ArrayIndexing	ac -> che [ TYPE_CCE ] [ elem_id ]		324888	0					
ANR	325216	ArrayIndexing	ac -> che [ TYPE_CCE ]		324888	0					
ANR	325217	PtrMemberAccess	ac -> che		324888	0					
ANR	325218	Identifier	ac		324888	0					
ANR	325219	Identifier	che		324888	1					
ANR	325220	Identifier	TYPE_CCE		324888	1					
ANR	325221	Identifier	elem_id		324888	1					
ANR	325222	BreakStatement	break ;	103:12:1948:1953	324888	8	True				
ANR	325223	Label	case TYPE_LFE :	107:8:1966:1979	324888	9	True				
ANR	325224	Identifier	TYPE_LFE		324888	0					
ANR	325225	ExpressionStatement	"err = decode_ics ( ac , & ac -> che [ TYPE_LFE ] [ elem_id ] -> ch [ 0 ] , & gb , 0 , 0 )"	109:12:1994:2061	324888	10	True				
ANR	325226	AssignmentExpression	"err = decode_ics ( ac , & ac -> che [ TYPE_LFE ] [ elem_id ] -> ch [ 0 ] , & gb , 0 , 0 )"		324888	0		=			
ANR	325227	Identifier	err		324888	0					
ANR	325228	CallExpression	"decode_ics ( ac , & ac -> che [ TYPE_LFE ] [ elem_id ] -> ch [ 0 ] , & gb , 0 , 0 )"		324888	1					
ANR	325229	Callee	decode_ics		324888	0					
ANR	325230	Identifier	decode_ics		324888	0					
ANR	325231	ArgumentList	ac		324888	1					
ANR	325232	Argument	ac		324888	0					
ANR	325233	Identifier	ac		324888	0					
ANR	325234	Argument	& ac -> che [ TYPE_LFE ] [ elem_id ] -> ch [ 0 ]		324888	1					
ANR	325235	UnaryOperationExpression	& ac -> che [ TYPE_LFE ] [ elem_id ] -> ch [ 0 ]		324888	0					
ANR	325236	UnaryOperator	&		324888	0					
ANR	325237	ArrayIndexing	ac -> che [ TYPE_LFE ] [ elem_id ] -> ch [ 0 ]		324888	1					
ANR	325238	PtrMemberAccess	ac -> che [ TYPE_LFE ] [ elem_id ] -> ch		324888	0					
ANR	325239	ArrayIndexing	ac -> che [ TYPE_LFE ] [ elem_id ]		324888	0					
ANR	325240	ArrayIndexing	ac -> che [ TYPE_LFE ]		324888	0					
ANR	325241	PtrMemberAccess	ac -> che		324888	0					
ANR	325242	Identifier	ac		324888	0					
ANR	325243	Identifier	che		324888	1					
ANR	325244	Identifier	TYPE_LFE		324888	1					
ANR	325245	Identifier	elem_id		324888	1					
ANR	325246	Identifier	ch		324888	1					
ANR	325247	PrimaryExpression	0		324888	1					
ANR	325248	Argument	& gb		324888	2					
ANR	325249	UnaryOperationExpression	& gb		324888	0					
ANR	325250	UnaryOperator	&		324888	0					
ANR	325251	Identifier	gb		324888	1					
ANR	325252	Argument	0		324888	3					
ANR	325253	PrimaryExpression	0		324888	0					
ANR	325254	Argument	0		324888	4					
ANR	325255	PrimaryExpression	0		324888	0					
ANR	325256	BreakStatement	break ;	111:12:2076:2081	324888	11	True				
ANR	325257	Label	case TYPE_DSE :	115:8:2094:2107	324888	12	True				
ANR	325258	Identifier	TYPE_DSE		324888	0					
ANR	325259	ExpressionStatement	skip_data_stream_element ( & gb )	117:12:2122:2151	324888	13	True				
ANR	325260	CallExpression	skip_data_stream_element ( & gb )		324888	0					
ANR	325261	Callee	skip_data_stream_element		324888	0					
ANR	325262	Identifier	skip_data_stream_element		324888	0					
ANR	325263	ArgumentList	& gb		324888	1					
ANR	325264	Argument	& gb		324888	0					
ANR	325265	UnaryOperationExpression	& gb		324888	0					
ANR	325266	UnaryOperator	&		324888	0					
ANR	325267	Identifier	gb		324888	1					
ANR	325268	ExpressionStatement	err = 0	119:12:2166:2173	324888	14	True				
ANR	325269	AssignmentExpression	err = 0		324888	0		=			
ANR	325270	Identifier	err		324888	0					
ANR	325271	PrimaryExpression	0		324888	1					
ANR	325272	BreakStatement	break ;	121:12:2188:2193	324888	15	True				
ANR	325273	Label	case TYPE_PCE :	125:8:2206:2219	324888	16	True				
ANR	325274	Identifier	TYPE_PCE		324888	0					
ANR	325275	CompoundStatement		127:8:2107:2107	324888	17					
ANR	325276	Statement	enum	129:12:2245:2248	324888	0	True				
ANR	325277	Statement	ChannelPosition	129:17:2250:2264	324888	1	True				
ANR	325278	ExpressionStatement	new_che_pos [ 4 ] [ MAX_ELEM_ID ]	129:33:2266:2293	324888	2	True				
ANR	325279	ArrayIndexing	new_che_pos [ 4 ] [ MAX_ELEM_ID ]		324888	0					
ANR	325280	ArrayIndexing	new_che_pos [ 4 ]		324888	0					
ANR	325281	Identifier	new_che_pos		324888	0					
ANR	325282	PrimaryExpression	4		324888	1					
ANR	325283	Identifier	MAX_ELEM_ID		324888	1					
ANR	325284	ExpressionStatement	"memset ( new_che_pos , 0 , 4 * MAX_ELEM_ID * sizeof ( new_che_pos [ 0 ] [ 0 ] ) )"	131:12:2308:2375	324888	3	True				
ANR	325285	CallExpression	"memset ( new_che_pos , 0 , 4 * MAX_ELEM_ID * sizeof ( new_che_pos [ 0 ] [ 0 ] ) )"		324888	0					
ANR	325286	Callee	memset		324888	0					
ANR	325287	Identifier	memset		324888	0					
ANR	325288	ArgumentList	new_che_pos		324888	1					
ANR	325289	Argument	new_che_pos		324888	0					
ANR	325290	Identifier	new_che_pos		324888	0					
ANR	325291	Argument	0		324888	1					
ANR	325292	PrimaryExpression	0		324888	0					
ANR	325293	Argument	4 * MAX_ELEM_ID * sizeof ( new_che_pos [ 0 ] [ 0 ] )		324888	2					
ANR	325294	MultiplicativeExpression	4 * MAX_ELEM_ID * sizeof ( new_che_pos [ 0 ] [ 0 ] )		324888	0		*			
ANR	325295	PrimaryExpression	4		324888	0					
ANR	325296	MultiplicativeExpression	MAX_ELEM_ID * sizeof ( new_che_pos [ 0 ] [ 0 ] )		324888	1		*			
ANR	325297	Identifier	MAX_ELEM_ID		324888	0					
ANR	325298	SizeofExpression	sizeof ( new_che_pos [ 0 ] [ 0 ] )		324888	1					
ANR	325299	Sizeof	sizeof		324888	0					
ANR	325300	ArrayIndexing	new_che_pos [ 0 ] [ 0 ]		324888	1					
ANR	325301	ArrayIndexing	new_che_pos [ 0 ]		324888	0					
ANR	325302	Identifier	new_che_pos		324888	0					
ANR	325303	PrimaryExpression	0		324888	1					
ANR	325304	PrimaryExpression	0		324888	1					
ANR	325305	IfStatement	"if ( ( err = decode_pce ( ac , new_che_pos , & gb ) ) )"		324888	4					
ANR	325306	Condition	"err = decode_pce ( ac , new_che_pos , & gb )"	133:15:2393:2432	324888	0	True				
ANR	325307	AssignmentExpression	"err = decode_pce ( ac , new_che_pos , & gb )"		324888	0		=			
ANR	325308	Identifier	err		324888	0					
ANR	325309	CallExpression	"decode_pce ( ac , new_che_pos , & gb )"		324888	1					
ANR	325310	Callee	decode_pce		324888	0					
ANR	325311	Identifier	decode_pce		324888	0					
ANR	325312	ArgumentList	ac		324888	1					
ANR	325313	Argument	ac		324888	0					
ANR	325314	Identifier	ac		324888	0					
ANR	325315	Argument	new_che_pos		324888	1					
ANR	325316	Identifier	new_che_pos		324888	0					
ANR	325317	Argument	& gb		324888	2					
ANR	325318	UnaryOperationExpression	& gb		324888	0					
ANR	325319	UnaryOperator	&		324888	0					
ANR	325320	Identifier	gb		324888	1					
ANR	325321	BreakStatement	break ;	135:16:2452:2457	324888	1	True				
ANR	325322	ExpressionStatement	"err = output_configure ( ac , ac -> che_pos , new_che_pos )"	137:12:2472:2524	324888	5	True				
ANR	325323	AssignmentExpression	"err = output_configure ( ac , ac -> che_pos , new_che_pos )"		324888	0		=			
ANR	325324	Identifier	err		324888	0					
ANR	325325	CallExpression	"output_configure ( ac , ac -> che_pos , new_che_pos )"		324888	1					
ANR	325326	Callee	output_configure		324888	0					
ANR	325327	Identifier	output_configure		324888	0					
ANR	325328	ArgumentList	ac		324888	1					
ANR	325329	Argument	ac		324888	0					
ANR	325330	Identifier	ac		324888	0					
ANR	325331	Argument	ac -> che_pos		324888	1					
ANR	325332	PtrMemberAccess	ac -> che_pos		324888	0					
ANR	325333	Identifier	ac		324888	0					
ANR	325334	Identifier	che_pos		324888	1					
ANR	325335	Argument	new_che_pos		324888	2					
ANR	325336	Identifier	new_che_pos		324888	0					
ANR	325337	BreakStatement	break ;	139:12:2539:2544	324888	6	True				
ANR	325338	Label	case TYPE_FIL :	145:8:2568:2581	324888	18	True				
ANR	325339	Identifier	TYPE_FIL		324888	0					
ANR	325340	IfStatement	if ( elem_id == 15 )		324888	19					
ANR	325341	Condition	elem_id == 15	147:16:2600:2612	324888	0	True				
ANR	325342	EqualityExpression	elem_id == 15		324888	0		==			
ANR	325343	Identifier	elem_id		324888	0					
ANR	325344	PrimaryExpression	15		324888	1					
ANR	325345	ExpressionStatement	"elem_id += get_bits ( & gb , 8 ) - 1"	149:16:2632:2663	324888	1	True				
ANR	325346	AssignmentExpression	"elem_id += get_bits ( & gb , 8 ) - 1"		324888	0		+=			
ANR	325347	Identifier	elem_id		324888	0					
ANR	325348	AdditiveExpression	"get_bits ( & gb , 8 ) - 1"		324888	1		-			
ANR	325349	CallExpression	"get_bits ( & gb , 8 )"		324888	0					
ANR	325350	Callee	get_bits		324888	0					
ANR	325351	Identifier	get_bits		324888	0					
ANR	325352	ArgumentList	& gb		324888	1					
ANR	325353	Argument	& gb		324888	0					
ANR	325354	UnaryOperationExpression	& gb		324888	0					
ANR	325355	UnaryOperator	&		324888	0					
ANR	325356	Identifier	gb		324888	1					
ANR	325357	Argument	8		324888	1					
ANR	325358	PrimaryExpression	8		324888	0					
ANR	325359	PrimaryExpression	1		324888	1					
ANR	325360	WhileStatement	while ( elem_id > 0 )		324888	20					
ANR	325361	Condition	elem_id > 0	151:19:2685:2695	324888	0	True				
ANR	325362	RelationalExpression	elem_id > 0		324888	0		>			
ANR	325363	Identifier	elem_id		324888	0					
ANR	325364	PrimaryExpression	0		324888	1					
ANR	325365	ExpressionStatement	"elem_id -= decode_extension_payload ( ac , & gb , elem_id )"	153:16:2715:2768	324888	1	True				
ANR	325366	AssignmentExpression	"elem_id -= decode_extension_payload ( ac , & gb , elem_id )"		324888	0		-=			
ANR	325367	Identifier	elem_id		324888	0					
ANR	325368	CallExpression	"decode_extension_payload ( ac , & gb , elem_id )"		324888	1					
ANR	325369	Callee	decode_extension_payload		324888	0					
ANR	325370	Identifier	decode_extension_payload		324888	0					
ANR	325371	ArgumentList	ac		324888	1					
ANR	325372	Argument	ac		324888	0					
ANR	325373	Identifier	ac		324888	0					
ANR	325374	Argument	& gb		324888	1					
ANR	325375	UnaryOperationExpression	& gb		324888	0					
ANR	325376	UnaryOperator	&		324888	0					
ANR	325377	Identifier	gb		324888	1					
ANR	325378	Argument	elem_id		324888	2					
ANR	325379	Identifier	elem_id		324888	0					
ANR	325380	ExpressionStatement	err = 0	155:12:2783:2790	324888	21	True				
ANR	325381	AssignmentExpression	err = 0		324888	0		=			
ANR	325382	Identifier	err		324888	0					
ANR	325383	PrimaryExpression	0		324888	1					
ANR	325384	BreakStatement	break ;	157:12:2817:2822	324888	22	True				
ANR	325385	Label	default :	161:8:2835:2842	324888	23	True				
ANR	325386	Identifier	default		324888	0					
ANR	325387	ExpressionStatement	err = - 1	163:12:2857:2865	324888	24	True				
ANR	325388	AssignmentExpression	err = - 1		324888	0		=			
ANR	325389	Identifier	err		324888	0					
ANR	325390	UnaryOperationExpression	- 1		324888	1					
ANR	325391	UnaryOperator	-		324888	0					
ANR	325392	PrimaryExpression	1		324888	1					
ANR	325393	BreakStatement	break ;	165:12:2930:2935	324888	25	True				
ANR	325394	IfStatement	if ( err )		324888	5					
ANR	325395	Condition	err	171:11:2962:2964	324888	0	True				
ANR	325396	Identifier	err		324888	0					
ANR	325397	ReturnStatement	return err ;	173:12:2980:2990	324888	1	True				
ANR	325398	Identifier	err		324888	0					
ANR	325399	ExpressionStatement	spectral_to_sample ( ac )	179:4:3006:3028	324888	7	True				
ANR	325400	CallExpression	spectral_to_sample ( ac )		324888	0					
ANR	325401	Callee	spectral_to_sample		324888	0					
ANR	325402	Identifier	spectral_to_sample		324888	0					
ANR	325403	ArgumentList	ac		324888	1					
ANR	325404	Argument	ac		324888	0					
ANR	325405	Identifier	ac		324888	0					
ANR	325406	IfStatement	if ( ! ac -> is_saved )		324888	8					
ANR	325407	Condition	! ac -> is_saved	183:8:3041:3053	324888	0	True				
ANR	325408	UnaryOperationExpression	! ac -> is_saved		324888	0					
ANR	325409	UnaryOperator	!		324888	0					
ANR	325410	PtrMemberAccess	ac -> is_saved		324888	1					
ANR	325411	Identifier	ac		324888	0					
ANR	325412	Identifier	is_saved		324888	1					
ANR	325413	CompoundStatement		183:23:2933:2933	324888	1					
ANR	325414	ExpressionStatement	ac -> is_saved = 1	185:8:3067:3083	324888	0	True				
ANR	325415	AssignmentExpression	ac -> is_saved = 1		324888	0		=			
ANR	325416	PtrMemberAccess	ac -> is_saved		324888	0					
ANR	325417	Identifier	ac		324888	0					
ANR	325418	Identifier	is_saved		324888	1					
ANR	325419	PrimaryExpression	1		324888	1					
ANR	325420	ExpressionStatement	* data_size = 0	187:8:3094:3108	324888	1	True				
ANR	325421	AssignmentExpression	* data_size = 0		324888	0		=			
ANR	325422	UnaryOperationExpression	* data_size		324888	0					
ANR	325423	UnaryOperator	*		324888	0					
ANR	325424	Identifier	data_size		324888	1					
ANR	325425	PrimaryExpression	0		324888	1					
ANR	325426	ReturnStatement	return buf_size ;	189:8:3119:3134	324888	2	True				
ANR	325427	Identifier	buf_size		324888	0					
ANR	325428	ExpressionStatement	data_size_tmp = 1024 * avccontext -> channels * sizeof ( int16_t )	195:4:3150:3211	324888	9	True				
ANR	325429	AssignmentExpression	data_size_tmp = 1024 * avccontext -> channels * sizeof ( int16_t )		324888	0		=			
ANR	325430	Identifier	data_size_tmp		324888	0					
ANR	325431	MultiplicativeExpression	1024 * avccontext -> channels * sizeof ( int16_t )		324888	1		*			
ANR	325432	PrimaryExpression	1024		324888	0					
ANR	325433	MultiplicativeExpression	avccontext -> channels * sizeof ( int16_t )		324888	1		*			
ANR	325434	PtrMemberAccess	avccontext -> channels		324888	0					
ANR	325435	Identifier	avccontext		324888	0					
ANR	325436	Identifier	channels		324888	1					
ANR	325437	SizeofExpression	sizeof ( int16_t )		324888	1					
ANR	325438	Sizeof	sizeof		324888	0					
ANR	325439	SizeofOperand	int16_t		324888	1					
ANR	325440	IfStatement	if ( * data_size < data_size_tmp )		324888	10					
ANR	325441	Condition	* data_size < data_size_tmp	197:7:3221:3246	324888	0	True				
ANR	325442	RelationalExpression	* data_size < data_size_tmp		324888	0		<			
ANR	325443	UnaryOperationExpression	* data_size		324888	0					
ANR	325444	UnaryOperator	*		324888	0					
ANR	325445	Identifier	data_size		324888	1					
ANR	325446	Identifier	data_size_tmp		324888	1					
ANR	325447	CompoundStatement		197:35:3126:3126	324888	1					
ANR	325448	ExpressionStatement	"av_log ( avccontext , AV_LOG_ERROR , ""Output buffer too small (%d) or trying to output too many samples (%d) for this frame.\\n"" , * data_size , data_size_tmp )"	199:8:3260:3443	324888	0	True				
ANR	325449	CallExpression	"av_log ( avccontext , AV_LOG_ERROR , ""Output buffer too small (%d) or trying to output too many samples (%d) for this frame.\\n"" , * data_size , data_size_tmp )"		324888	0					
ANR	325450	Callee	av_log		324888	0					
ANR	325451	Identifier	av_log		324888	0					
ANR	325452	ArgumentList	avccontext		324888	1					
ANR	325453	Argument	avccontext		324888	0					
ANR	325454	Identifier	avccontext		324888	0					
ANR	325455	Argument	AV_LOG_ERROR		324888	1					
ANR	325456	Identifier	AV_LOG_ERROR		324888	0					
ANR	325457	Argument	"""Output buffer too small (%d) or trying to output too many samples (%d) for this frame.\\n"""		324888	2					
ANR	325458	PrimaryExpression	"""Output buffer too small (%d) or trying to output too many samples (%d) for this frame.\\n"""		324888	0					
ANR	325459	Argument	* data_size		324888	3					
ANR	325460	UnaryOperationExpression	* data_size		324888	0					
ANR	325461	UnaryOperator	*		324888	0					
ANR	325462	Identifier	data_size		324888	1					
ANR	325463	Argument	data_size_tmp		324888	4					
ANR	325464	Identifier	data_size_tmp		324888	0					
ANR	325465	ReturnStatement	return - 1 ;	205:8:3454:3463	324888	1	True				
ANR	325466	UnaryOperationExpression	- 1		324888	0					
ANR	325467	UnaryOperator	-		324888	0					
ANR	325468	PrimaryExpression	1		324888	1					
ANR	325469	ExpressionStatement	* data_size = data_size_tmp	209:4:3477:3503	324888	11	True				
ANR	325470	AssignmentExpression	* data_size = data_size_tmp		324888	0		=			
ANR	325471	UnaryOperationExpression	* data_size		324888	0					
ANR	325472	UnaryOperator	*		324888	0					
ANR	325473	Identifier	data_size		324888	1					
ANR	325474	Identifier	data_size_tmp		324888	1					
ANR	325475	ExpressionStatement	"ac -> dsp . float_to_int16_interleave ( data , ( const float * * ) ac -> output_data , 1024 , avccontext -> channels )"	213:4:3512:3612	324888	12	True				
ANR	325476	CallExpression	"ac -> dsp . float_to_int16_interleave ( data , ( const float * * ) ac -> output_data , 1024 , avccontext -> channels )"		324888	0					
ANR	325477	Callee	ac -> dsp . float_to_int16_interleave		324888	0					
ANR	325478	MemberAccess	ac -> dsp . float_to_int16_interleave		324888	0					
ANR	325479	PtrMemberAccess	ac -> dsp		324888	0					
ANR	325480	Identifier	ac		324888	0					
ANR	325481	Identifier	dsp		324888	1					
ANR	325482	Identifier	float_to_int16_interleave		324888	1					
ANR	325483	ArgumentList	data		324888	1					
ANR	325484	Argument	data		324888	0					
ANR	325485	Identifier	data		324888	0					
ANR	325486	Argument	( const float * * ) ac -> output_data		324888	1					
ANR	325487	CastExpression	( const float * * ) ac -> output_data		324888	0					
ANR	325488	CastTarget	const float * *		324888	0					
ANR	325489	PtrMemberAccess	ac -> output_data		324888	1					
ANR	325490	Identifier	ac		324888	0					
ANR	325491	Identifier	output_data		324888	1					
ANR	325492	Argument	1024		324888	2					
ANR	325493	PrimaryExpression	1024		324888	0					
ANR	325494	Argument	avccontext -> channels		324888	3					
ANR	325495	PtrMemberAccess	avccontext -> channels		324888	0					
ANR	325496	Identifier	avccontext		324888	0					
ANR	325497	Identifier	channels		324888	1					
ANR	325498	ReturnStatement	return buf_size ;	217:4:3621:3636	324888	13	True				
ANR	325499	Identifier	buf_size		324888	0					
ANR	325500	ReturnType	static int		324888	1					
ANR	325501	Identifier	aac_decode_frame		324888	2					
ANR	325502	ParameterList	"AVCodecContext * avccontext , void * data , int * data_size , const uint8_t * buf , int buf_size"		324888	3					
ANR	325503	Parameter	AVCodecContext * avccontext	1:28:28:54	324888	0	True				
ANR	325504	ParameterType	AVCodecContext *		324888	0					
ANR	325505	Identifier	avccontext		324888	1					
ANR	325506	Parameter	void * data	1:57:57:67	324888	1	True				
ANR	325507	ParameterType	void *		324888	0					
ANR	325508	Identifier	data		324888	1					
ANR	325509	Parameter	int * data_size	1:70:70:84	324888	2	True				
ANR	325510	ParameterType	int *		324888	0					
ANR	325511	Identifier	data_size		324888	1					
ANR	325512	Parameter	const uint8_t * buf	1:87:87:105	324888	3	True				
ANR	325513	ParameterType	const uint8_t *		324888	0					
ANR	325514	Identifier	buf		324888	1					
ANR	325515	Parameter	int buf_size	1:108:108:119	324888	4	True				
ANR	325516	ParameterType	int		324888	0					
ANR	325517	Identifier	buf_size		324888	1					
ANR	325518	CFGEntryNode	ENTRY		324888		True				
ANR	325519	CFGExitNode	EXIT		324888		True				
ANR	325520	Symbol	ac -> output_data		324888						
ANR	325521	Symbol	data		324888						
ANR	325522	Symbol	& gb		324888						
ANR	325523	Symbol	get_bits		324888						
ANR	325524	Symbol	TYPE_CCE		324888						
ANR	325525	Symbol	* data_size		324888						
ANR	325526	Symbol	avccontext		324888						
ANR	325527	Symbol	* * ac		324888						
ANR	325528	Symbol	show_bits		324888						
ANR	325529	Symbol	* elem_type		324888						
ANR	325530	Symbol	* * * TYPE_SCE		324888						
ANR	325531	Symbol	decode_extension_payload		324888						
ANR	325532	Symbol	* TYPE_CCE		324888						
ANR	325533	Symbol	data_size_tmp		324888						
ANR	325534	Symbol	ac -> m4ac . sampling_index		324888						
ANR	325535	Symbol	* elem_id		324888						
ANR	325536	Symbol	ac -> is_saved		324888						
ANR	325537	Symbol	TYPE_SCE		324888						
ANR	325538	Symbol	avccontext -> priv_data		324888						
ANR	325539	Symbol	ac -> dsp		324888						
ANR	325540	Symbol	data_size		324888						
ANR	325541	Symbol	* * * ac -> che		324888						
ANR	325542	Symbol	ac		324888						
ANR	325543	Symbol	* TYPE_SCE		324888						
ANR	325544	Symbol	ac -> che [ TYPE_LFE ] [ elem_id ] -> ch		324888						
ANR	325545	Symbol	NULL		324888						
ANR	325546	Symbol	buf_size		324888						
ANR	325547	Symbol	elem_id		324888						
ANR	325548	Symbol	* * elem_id		324888						
ANR	325549	Symbol	* * * TYPE_LFE		324888						
ANR	325550	Symbol	* new_che_pos		324888						
ANR	325551	Symbol	elem_type		324888						
ANR	325552	Symbol	* * * * ac		324888						
ANR	325553	Symbol	decode_ics		324888						
ANR	325554	Symbol	* avccontext		324888						
ANR	325555	Symbol	* TYPE_LFE		324888						
ANR	325556	Symbol	* ac -> che		324888						
ANR	325557	Symbol	decode_cpe		324888						
ANR	325558	Symbol	ac -> che [ TYPE_SCE ] [ elem_id ] -> ch		324888						
ANR	325559	Symbol	ac -> che_pos		324888						
ANR	325560	Symbol	* ac		324888						
ANR	325561	Symbol	decode_cce		324888						
ANR	325562	Symbol	new_che_pos		324888						
ANR	325563	Symbol	* * TYPE_LFE		324888						
ANR	325564	Symbol	output_configure		324888						
ANR	325565	Symbol	* * elem_type		324888						
ANR	325566	Symbol	ac -> avccontext		324888						
ANR	325567	Symbol	gb		324888						
ANR	325568	Symbol	TYPE_END		324888						
ANR	325569	Symbol	ac -> che		324888						
ANR	325570	Symbol	* * TYPE_SCE		324888						
ANR	325571	Symbol	err		324888						
ANR	325572	Symbol	AV_LOG_ERROR		324888						
ANR	325573	Symbol	MAX_ELEM_ID		324888						
ANR	325574	Symbol	avccontext -> channels		324888						
ANR	325575	Symbol	ac -> che [ elem_type ] [ elem_id ] -> coup . coupling_point		324888						
ANR	325576	Symbol	* * * elem_type		324888						
ANR	325577	Symbol	* * new_che_pos		324888						
ANR	325578	Symbol	TYPE_LFE		324888						
ANR	325579	Symbol	ac -> m4ac		324888						
ANR	325580	Symbol	parse_adts_frame_header		324888						
ANR	325581	Symbol	buf		324888						
ANR	325582	Symbol	* * TYPE_CCE		324888						
ANR	325583	Symbol	ac -> che [ elem_type ] [ elem_id ] -> coup		324888						
ANR	325584	Symbol	* * ac -> che		324888						
ANR	325585	Symbol	TYPE_DSE		324888						
ANR	325586	Symbol	decode_pce		324888						
ANR	325587	Symbol	* * * ac		324888						
