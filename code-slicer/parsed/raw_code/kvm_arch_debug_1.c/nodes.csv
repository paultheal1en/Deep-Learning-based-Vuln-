command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5085113	File	/home/p4ultr4n/workplace/ReVeal/raw_code/kvm_arch_debug_1.c								
ANR	5085114	Function	kvm_arch_debug	1:0:0:1489							
ANR	5085115	FunctionDef	kvm_arch_debug (struct kvm_debug_exit_arch * arch_info)		5085114	0					
ANR	5085116	CompoundStatement		3:0:59:1489	5085114	0					
ANR	5085117	IdentifierDeclStatement	int handle = 0 ;	5:4:66:80	5085114	0	True				
ANR	5085118	IdentifierDecl	handle = 0		5085114	0					
ANR	5085119	IdentifierDeclType	int		5085114	0					
ANR	5085120	Identifier	handle		5085114	1					
ANR	5085121	AssignmentExpression	handle = 0		5085114	2		=			
ANR	5085122	Identifier	handle		5085114	0					
ANR	5085123	PrimaryExpression	0		5085114	1					
ANR	5085124	IdentifierDeclStatement	int n ;	7:4:87:92	5085114	1	True				
ANR	5085125	IdentifierDecl	n		5085114	0					
ANR	5085126	IdentifierDeclType	int		5085114	0					
ANR	5085127	Identifier	n		5085114	1					
ANR	5085128	IfStatement	if ( arch_info -> exception == 1 )		5085114	2					
ANR	5085129	Condition	arch_info -> exception == 1	11:8:105:129	5085114	0	True				
ANR	5085130	EqualityExpression	arch_info -> exception == 1		5085114	0		==			
ANR	5085131	PtrMemberAccess	arch_info -> exception		5085114	0					
ANR	5085132	Identifier	arch_info		5085114	0					
ANR	5085133	Identifier	exception		5085114	1					
ANR	5085134	PrimaryExpression	1		5085114	1					
ANR	5085135	CompoundStatement		9:35:72:72	5085114	1					
ANR	5085136	IfStatement	if ( arch_info -> dr6 & ( 1 << 14 ) )		5085114	0					
ANR	5085137	Condition	arch_info -> dr6 & ( 1 << 14 )	13:12:147:172	5085114	0	True				
ANR	5085138	BitAndExpression	arch_info -> dr6 & ( 1 << 14 )		5085114	0		&			
ANR	5085139	PtrMemberAccess	arch_info -> dr6		5085114	0					
ANR	5085140	Identifier	arch_info		5085114	0					
ANR	5085141	Identifier	dr6		5085114	1					
ANR	5085142	ShiftExpression	1 << 14		5085114	1		<<			
ANR	5085143	PrimaryExpression	1		5085114	0					
ANR	5085144	PrimaryExpression	14		5085114	1					
ANR	5085145	CompoundStatement		11:40:115:115	5085114	1					
ANR	5085146	IfStatement	if ( cpu_single_env -> singlestep_enabled )		5085114	0					
ANR	5085147	Condition	cpu_single_env -> singlestep_enabled	15:16:194:227	5085114	0	True				
ANR	5085148	PtrMemberAccess	cpu_single_env -> singlestep_enabled		5085114	0					
ANR	5085149	Identifier	cpu_single_env		5085114	0					
ANR	5085150	Identifier	singlestep_enabled		5085114	1					
ANR	5085151	ExpressionStatement	handle = 1	17:16:247:257	5085114	1	True				
ANR	5085152	AssignmentExpression	handle = 1		5085114	0		=			
ANR	5085153	Identifier	handle		5085114	0					
ANR	5085154	PrimaryExpression	1		5085114	1					
ANR	5085155	ElseStatement	else		5085114	0					
ANR	5085156	CompoundStatement		17:15:215:215	5085114	0					
ANR	5085157	ForStatement	for ( n = 0 ; n < 4 ; n ++ )		5085114	0					
ANR	5085158	ForInit	n = 0 ;	21:17:295:300	5085114	0	True				
ANR	5085159	AssignmentExpression	n = 0		5085114	0		=			
ANR	5085160	Identifier	n		5085114	0					
ANR	5085161	PrimaryExpression	0		5085114	1					
ANR	5085162	Condition	n < 4	21:24:302:306	5085114	1	True				
ANR	5085163	RelationalExpression	n < 4		5085114	0		<			
ANR	5085164	Identifier	n		5085114	0					
ANR	5085165	PrimaryExpression	4		5085114	1					
ANR	5085166	PostIncDecOperationExpression	n ++	21:31:309:311	5085114	2	True				
ANR	5085167	Identifier	n		5085114	0					
ANR	5085168	IncDec	++		5085114	1					
ANR	5085169	IfStatement	if ( arch_info -> dr6 & ( 1 << n ) )		5085114	3					
ANR	5085170	Condition	arch_info -> dr6 & ( 1 << n )	23:20:335:359	5085114	0	True				
ANR	5085171	BitAndExpression	arch_info -> dr6 & ( 1 << n )		5085114	0		&			
ANR	5085172	PtrMemberAccess	arch_info -> dr6		5085114	0					
ANR	5085173	Identifier	arch_info		5085114	0					
ANR	5085174	Identifier	dr6		5085114	1					
ANR	5085175	ShiftExpression	1 << n		5085114	1		<<			
ANR	5085176	PrimaryExpression	1		5085114	0					
ANR	5085177	Identifier	n		5085114	1					
ANR	5085178	SwitchStatement	switch ( ( arch_info -> dr7 >> ( 16 + n * 4 ) ) & 0x3 )		5085114	1					
ANR	5085179	Condition	( arch_info -> dr7 >> ( 16 + n * 4 ) ) & 0x3	25:28:391:426	5085114	0	True				
ANR	5085180	BitAndExpression	( arch_info -> dr7 >> ( 16 + n * 4 ) ) & 0x3		5085114	0		&			
ANR	5085181	ShiftExpression	arch_info -> dr7 >> ( 16 + n * 4 )		5085114	0		>>			
ANR	5085182	PtrMemberAccess	arch_info -> dr7		5085114	0					
ANR	5085183	Identifier	arch_info		5085114	0					
ANR	5085184	Identifier	dr7		5085114	1					
ANR	5085185	AdditiveExpression	16 + n * 4		5085114	1		+			
ANR	5085186	PrimaryExpression	16		5085114	0					
ANR	5085187	MultiplicativeExpression	n * 4		5085114	1		*			
ANR	5085188	Identifier	n		5085114	0					
ANR	5085189	PrimaryExpression	4		5085114	1					
ANR	5085190	PrimaryExpression	0x3		5085114	1					
ANR	5085191	CompoundStatement		23:66:369:369	5085114	1					
ANR	5085192	Label	case 0x0 :	27:20:452:460	5085114	0	True				
ANR	5085193	ExpressionStatement	handle = 1	29:24:487:497	5085114	1	True				
ANR	5085194	AssignmentExpression	handle = 1		5085114	0		=			
ANR	5085195	Identifier	handle		5085114	0					
ANR	5085196	PrimaryExpression	1		5085114	1					
ANR	5085197	BreakStatement	break ;	31:24:524:529	5085114	2	True				
ANR	5085198	Label	case 0x1 :	33:20:552:560	5085114	3	True				
ANR	5085199	ExpressionStatement	handle = 1	35:24:587:597	5085114	4	True				
ANR	5085200	AssignmentExpression	handle = 1		5085114	0		=			
ANR	5085201	Identifier	handle		5085114	0					
ANR	5085202	PrimaryExpression	1		5085114	1					
ANR	5085203	ExpressionStatement	cpu_single_env -> watchpoint_hit = & hw_watchpoint	37:24:624:671	5085114	5	True				
ANR	5085204	AssignmentExpression	cpu_single_env -> watchpoint_hit = & hw_watchpoint		5085114	0		=			
ANR	5085205	PtrMemberAccess	cpu_single_env -> watchpoint_hit		5085114	0					
ANR	5085206	Identifier	cpu_single_env		5085114	0					
ANR	5085207	Identifier	watchpoint_hit		5085114	1					
ANR	5085208	UnaryOperationExpression	& hw_watchpoint		5085114	1					
ANR	5085209	UnaryOperator	&		5085114	0					
ANR	5085210	Identifier	hw_watchpoint		5085114	1					
ANR	5085211	ExpressionStatement	hw_watchpoint . vaddr = hw_breakpoint [ n ] . addr	39:24:698:741	5085114	6	True				
ANR	5085212	AssignmentExpression	hw_watchpoint . vaddr = hw_breakpoint [ n ] . addr		5085114	0		=			
ANR	5085213	MemberAccess	hw_watchpoint . vaddr		5085114	0					
ANR	5085214	Identifier	hw_watchpoint		5085114	0					
ANR	5085215	Identifier	vaddr		5085114	1					
ANR	5085216	MemberAccess	hw_breakpoint [ n ] . addr		5085114	1					
ANR	5085217	ArrayIndexing	hw_breakpoint [ n ]		5085114	0					
ANR	5085218	Identifier	hw_breakpoint		5085114	0					
ANR	5085219	Identifier	n		5085114	1					
ANR	5085220	Identifier	addr		5085114	1					
ANR	5085221	ExpressionStatement	hw_watchpoint . flags = BP_MEM_WRITE	41:24:768:802	5085114	7	True				
ANR	5085222	AssignmentExpression	hw_watchpoint . flags = BP_MEM_WRITE		5085114	0		=			
ANR	5085223	MemberAccess	hw_watchpoint . flags		5085114	0					
ANR	5085224	Identifier	hw_watchpoint		5085114	0					
ANR	5085225	Identifier	flags		5085114	1					
ANR	5085226	Identifier	BP_MEM_WRITE		5085114	1					
ANR	5085227	BreakStatement	break ;	43:24:829:834	5085114	8	True				
ANR	5085228	Label	case 0x3 :	45:20:857:865	5085114	9	True				
ANR	5085229	ExpressionStatement	handle = 1	47:24:892:902	5085114	10	True				
ANR	5085230	AssignmentExpression	handle = 1		5085114	0		=			
ANR	5085231	Identifier	handle		5085114	0					
ANR	5085232	PrimaryExpression	1		5085114	1					
ANR	5085233	ExpressionStatement	cpu_single_env -> watchpoint_hit = & hw_watchpoint	49:24:929:976	5085114	11	True				
ANR	5085234	AssignmentExpression	cpu_single_env -> watchpoint_hit = & hw_watchpoint		5085114	0		=			
ANR	5085235	PtrMemberAccess	cpu_single_env -> watchpoint_hit		5085114	0					
ANR	5085236	Identifier	cpu_single_env		5085114	0					
ANR	5085237	Identifier	watchpoint_hit		5085114	1					
ANR	5085238	UnaryOperationExpression	& hw_watchpoint		5085114	1					
ANR	5085239	UnaryOperator	&		5085114	0					
ANR	5085240	Identifier	hw_watchpoint		5085114	1					
ANR	5085241	ExpressionStatement	hw_watchpoint . vaddr = hw_breakpoint [ n ] . addr	51:24:1003:1046	5085114	12	True				
ANR	5085242	AssignmentExpression	hw_watchpoint . vaddr = hw_breakpoint [ n ] . addr		5085114	0		=			
ANR	5085243	MemberAccess	hw_watchpoint . vaddr		5085114	0					
ANR	5085244	Identifier	hw_watchpoint		5085114	0					
ANR	5085245	Identifier	vaddr		5085114	1					
ANR	5085246	MemberAccess	hw_breakpoint [ n ] . addr		5085114	1					
ANR	5085247	ArrayIndexing	hw_breakpoint [ n ]		5085114	0					
ANR	5085248	Identifier	hw_breakpoint		5085114	0					
ANR	5085249	Identifier	n		5085114	1					
ANR	5085250	Identifier	addr		5085114	1					
ANR	5085251	ExpressionStatement	hw_watchpoint . flags = BP_MEM_ACCESS	53:24:1073:1108	5085114	13	True				
ANR	5085252	AssignmentExpression	hw_watchpoint . flags = BP_MEM_ACCESS		5085114	0		=			
ANR	5085253	MemberAccess	hw_watchpoint . flags		5085114	0					
ANR	5085254	Identifier	hw_watchpoint		5085114	0					
ANR	5085255	Identifier	flags		5085114	1					
ANR	5085256	Identifier	BP_MEM_ACCESS		5085114	1					
ANR	5085257	BreakStatement	break ;	55:24:1135:1140	5085114	14	True				
ANR	5085258	ElseStatement	else		5085114	0					
ANR	5085259	IfStatement	"if ( kvm_find_sw_breakpoint ( cpu_single_env , arch_info -> pc ) )"		5085114	0					
ANR	5085260	Condition	"kvm_find_sw_breakpoint ( cpu_single_env , arch_info -> pc )"	61:15:1192:1244	5085114	0	True				
ANR	5085261	CallExpression	"kvm_find_sw_breakpoint ( cpu_single_env , arch_info -> pc )"		5085114	0					
ANR	5085262	Callee	kvm_find_sw_breakpoint		5085114	0					
ANR	5085263	Identifier	kvm_find_sw_breakpoint		5085114	0					
ANR	5085264	ArgumentList	cpu_single_env		5085114	1					
ANR	5085265	Argument	cpu_single_env		5085114	0					
ANR	5085266	Identifier	cpu_single_env		5085114	0					
ANR	5085267	Argument	arch_info -> pc		5085114	1					
ANR	5085268	PtrMemberAccess	arch_info -> pc		5085114	0					
ANR	5085269	Identifier	arch_info		5085114	0					
ANR	5085270	Identifier	pc		5085114	1					
ANR	5085271	ExpressionStatement	handle = 1	63:8:1256:1266	5085114	1	True				
ANR	5085272	AssignmentExpression	handle = 1		5085114	0		=			
ANR	5085273	Identifier	handle		5085114	0					
ANR	5085274	PrimaryExpression	1		5085114	1					
ANR	5085275	IfStatement	if ( ! handle )		5085114	3					
ANR	5085276	Condition	! handle	67:8:1279:1285	5085114	0	True				
ANR	5085277	UnaryOperationExpression	! handle		5085114	0					
ANR	5085278	UnaryOperator	!		5085114	0					
ANR	5085279	Identifier	handle		5085114	1					
ANR	5085280	ExpressionStatement	"kvm_update_guest_debug ( cpu_single_env , ( arch_info -> exception == 1 ) ? KVM_GUESTDBG_INJECT_DB : KVM_GUESTDBG_INJECT_BP )"	69:8:1297:1464	5085114	1	True				
ANR	5085281	CallExpression	"kvm_update_guest_debug ( cpu_single_env , ( arch_info -> exception == 1 ) ? KVM_GUESTDBG_INJECT_DB : KVM_GUESTDBG_INJECT_BP )"		5085114	0					
ANR	5085282	Callee	kvm_update_guest_debug		5085114	0					
ANR	5085283	Identifier	kvm_update_guest_debug		5085114	0					
ANR	5085284	ArgumentList	cpu_single_env		5085114	1					
ANR	5085285	Argument	cpu_single_env		5085114	0					
ANR	5085286	Identifier	cpu_single_env		5085114	0					
ANR	5085287	Argument	( arch_info -> exception == 1 ) ? KVM_GUESTDBG_INJECT_DB : KVM_GUESTDBG_INJECT_BP		5085114	1					
ANR	5085288	ConditionalExpression	( arch_info -> exception == 1 ) ? KVM_GUESTDBG_INJECT_DB : KVM_GUESTDBG_INJECT_BP		5085114	0					
ANR	5085289	Condition	arch_info -> exception == 1		5085114	0					
ANR	5085290	EqualityExpression	arch_info -> exception == 1		5085114	0		==			
ANR	5085291	PtrMemberAccess	arch_info -> exception		5085114	0					
ANR	5085292	Identifier	arch_info		5085114	0					
ANR	5085293	Identifier	exception		5085114	1					
ANR	5085294	PrimaryExpression	1		5085114	1					
ANR	5085295	Identifier	KVM_GUESTDBG_INJECT_DB		5085114	1					
ANR	5085296	Identifier	KVM_GUESTDBG_INJECT_BP		5085114	2					
ANR	5085297	ReturnStatement	return handle ;	77:4:1473:1486	5085114	4	True				
ANR	5085298	Identifier	handle		5085114	0					
ANR	5085299	ReturnType	int		5085114	1					
ANR	5085300	Identifier	kvm_arch_debug		5085114	2					
ANR	5085301	ParameterList	struct kvm_debug_exit_arch * arch_info		5085114	3					
ANR	5085302	Parameter	struct kvm_debug_exit_arch * arch_info	1:19:19:55	5085114	0	True				
ANR	5085303	ParameterType	struct kvm_debug_exit_arch *		5085114	0					
ANR	5085304	Identifier	arch_info		5085114	1					
ANR	5085305	CFGEntryNode	ENTRY		5085114		True				
ANR	5085306	CFGExitNode	EXIT		5085114		True				
ANR	5085307	Symbol	KVM_GUESTDBG_INJECT_DB		5085114						
ANR	5085308	Symbol	cpu_single_env -> singlestep_enabled		5085114						
ANR	5085309	Symbol	arch_info -> exception		5085114						
ANR	5085310	Symbol	cpu_single_env		5085114						
ANR	5085311	Symbol	kvm_find_sw_breakpoint		5085114						
ANR	5085312	Symbol	* arch_info		5085114						
ANR	5085313	Symbol	arch_info		5085114						
ANR	5085314	Symbol	BP_MEM_WRITE		5085114						
ANR	5085315	Symbol	* cpu_single_env		5085114						
ANR	5085316	Symbol	cpu_single_env -> watchpoint_hit		5085114						
ANR	5085317	Symbol	& hw_watchpoint		5085114						
ANR	5085318	Symbol	BP_MEM_ACCESS		5085114						
ANR	5085319	Symbol	handle		5085114						
ANR	5085320	Symbol	hw_breakpoint		5085114						
ANR	5085321	Symbol	hw_breakpoint [ n ] . addr		5085114						
ANR	5085322	Symbol	n		5085114						
ANR	5085323	Symbol	* hw_breakpoint		5085114						
ANR	5085324	Symbol	KVM_GUESTDBG_INJECT_BP		5085114						
ANR	5085325	Symbol	hw_watchpoint . vaddr		5085114						
ANR	5085326	Symbol	arch_info -> dr6		5085114						
ANR	5085327	Symbol	arch_info -> dr7		5085114						
ANR	5085328	Symbol	hw_watchpoint		5085114						
ANR	5085329	Symbol	* n		5085114						
ANR	5085330	Symbol	arch_info -> pc		5085114						
ANR	5085331	Symbol	hw_watchpoint . flags		5085114						
