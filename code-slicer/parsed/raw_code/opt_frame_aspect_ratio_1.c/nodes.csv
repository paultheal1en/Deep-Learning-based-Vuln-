command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6232164	File	/home/p4ultr4n/workplace/ReVeal/raw_code/opt_frame_aspect_ratio_1.c								
ANR	6232165	Function	opt_frame_aspect_ratio	1:0:0:698							
ANR	6232166	FunctionDef	opt_frame_aspect_ratio (const char * arg)		6232165	0					
ANR	6232167	CompoundStatement		3:0:53:698	6232165	0					
ANR	6232168	IdentifierDeclStatement	"int x = 0 , y = 0 ;"	5:4:60:76	6232165	0	True				
ANR	6232169	IdentifierDecl	x = 0		6232165	0					
ANR	6232170	IdentifierDeclType	int		6232165	0					
ANR	6232171	Identifier	x		6232165	1					
ANR	6232172	AssignmentExpression	x = 0		6232165	2		=			
ANR	6232173	Identifier	x		6232165	0					
ANR	6232174	PrimaryExpression	0		6232165	1					
ANR	6232175	IdentifierDecl	y = 0		6232165	1					
ANR	6232176	IdentifierDeclType	int		6232165	0					
ANR	6232177	Identifier	y		6232165	1					
ANR	6232178	AssignmentExpression	y = 0		6232165	2		=			
ANR	6232179	Identifier	y		6232165	0					
ANR	6232180	PrimaryExpression	0		6232165	1					
ANR	6232181	IdentifierDeclStatement	double ar = 0 ;	7:4:83:96	6232165	1	True				
ANR	6232182	IdentifierDecl	ar = 0		6232165	0					
ANR	6232183	IdentifierDeclType	double		6232165	0					
ANR	6232184	Identifier	ar		6232165	1					
ANR	6232185	AssignmentExpression	ar = 0		6232165	2		=			
ANR	6232186	Identifier	ar		6232165	0					
ANR	6232187	PrimaryExpression	0		6232165	1					
ANR	6232188	IdentifierDeclStatement	const char * p ;	9:4:103:116	6232165	2	True				
ANR	6232189	IdentifierDecl	* p		6232165	0					
ANR	6232190	IdentifierDeclType	const char *		6232165	0					
ANR	6232191	Identifier	p		6232165	1					
ANR	6232192	IdentifierDeclStatement	char * end ;	11:4:123:132	6232165	3	True				
ANR	6232193	IdentifierDecl	* end		6232165	0					
ANR	6232194	IdentifierDeclType	char *		6232165	0					
ANR	6232195	Identifier	end		6232165	1					
ANR	6232196	ExpressionStatement	"p = strchr ( arg , ':' )"	15:4:141:161	6232165	4	True				
ANR	6232197	AssignmentExpression	"p = strchr ( arg , ':' )"		6232165	0		=			
ANR	6232198	Identifier	p		6232165	0					
ANR	6232199	CallExpression	"strchr ( arg , ':' )"		6232165	1					
ANR	6232200	Callee	strchr		6232165	0					
ANR	6232201	Identifier	strchr		6232165	0					
ANR	6232202	ArgumentList	arg		6232165	1					
ANR	6232203	Argument	arg		6232165	0					
ANR	6232204	Identifier	arg		6232165	0					
ANR	6232205	Argument	':'		6232165	1					
ANR	6232206	PrimaryExpression	':'		6232165	0					
ANR	6232207	IfStatement	if ( p )		6232165	5					
ANR	6232208	Condition	p	17:8:172:172	6232165	0	True				
ANR	6232209	Identifier	p		6232165	0					
ANR	6232210	CompoundStatement		15:11:121:121	6232165	1					
ANR	6232211	ExpressionStatement	"x = strtol ( arg , & end , 10 )"	19:8:186:211	6232165	0	True				
ANR	6232212	AssignmentExpression	"x = strtol ( arg , & end , 10 )"		6232165	0		=			
ANR	6232213	Identifier	x		6232165	0					
ANR	6232214	CallExpression	"strtol ( arg , & end , 10 )"		6232165	1					
ANR	6232215	Callee	strtol		6232165	0					
ANR	6232216	Identifier	strtol		6232165	0					
ANR	6232217	ArgumentList	arg		6232165	1					
ANR	6232218	Argument	arg		6232165	0					
ANR	6232219	Identifier	arg		6232165	0					
ANR	6232220	Argument	& end		6232165	1					
ANR	6232221	UnaryOperationExpression	& end		6232165	0					
ANR	6232222	UnaryOperator	&		6232165	0					
ANR	6232223	Identifier	end		6232165	1					
ANR	6232224	Argument	10		6232165	2					
ANR	6232225	PrimaryExpression	10		6232165	0					
ANR	6232226	IfStatement	if ( end == p )		6232165	1					
ANR	6232227	Condition	end == p	21:12:226:233	6232165	0	True				
ANR	6232228	EqualityExpression	end == p		6232165	0		==			
ANR	6232229	Identifier	end		6232165	0					
ANR	6232230	Identifier	p		6232165	1					
ANR	6232231	ExpressionStatement	"y = strtol ( end + 1 , & end , 10 )"	23:12:249:276	6232165	1	True				
ANR	6232232	AssignmentExpression	"y = strtol ( end + 1 , & end , 10 )"		6232165	0		=			
ANR	6232233	Identifier	y		6232165	0					
ANR	6232234	CallExpression	"strtol ( end + 1 , & end , 10 )"		6232165	1					
ANR	6232235	Callee	strtol		6232165	0					
ANR	6232236	Identifier	strtol		6232165	0					
ANR	6232237	ArgumentList	end + 1		6232165	1					
ANR	6232238	Argument	end + 1		6232165	0					
ANR	6232239	AdditiveExpression	end + 1		6232165	0		+			
ANR	6232240	Identifier	end		6232165	0					
ANR	6232241	PrimaryExpression	1		6232165	1					
ANR	6232242	Argument	& end		6232165	1					
ANR	6232243	UnaryOperationExpression	& end		6232165	0					
ANR	6232244	UnaryOperator	&		6232165	0					
ANR	6232245	Identifier	end		6232165	1					
ANR	6232246	Argument	10		6232165	2					
ANR	6232247	PrimaryExpression	10		6232165	0					
ANR	6232248	IfStatement	if ( x > 0 && y > 0 )		6232165	2					
ANR	6232249	Condition	x > 0 && y > 0	25:12:291:304	6232165	0	True				
ANR	6232250	AndExpression	x > 0 && y > 0		6232165	0		&&			
ANR	6232251	RelationalExpression	x > 0		6232165	0		>			
ANR	6232252	Identifier	x		6232165	0					
ANR	6232253	PrimaryExpression	0		6232165	1					
ANR	6232254	RelationalExpression	y > 0		6232165	1		>			
ANR	6232255	Identifier	y		6232165	0					
ANR	6232256	PrimaryExpression	0		6232165	1					
ANR	6232257	ExpressionStatement	ar = ( double ) x / ( double ) y	27:12:320:346	6232165	1	True				
ANR	6232258	AssignmentExpression	ar = ( double ) x / ( double ) y		6232165	0		=			
ANR	6232259	Identifier	ar		6232165	0					
ANR	6232260	MultiplicativeExpression	( double ) x / ( double ) y		6232165	1		/			
ANR	6232261	CastExpression	( double ) x		6232165	0					
ANR	6232262	CastTarget	double		6232165	0					
ANR	6232263	Identifier	x		6232165	1					
ANR	6232264	CastExpression	( double ) y		6232165	1					
ANR	6232265	CastTarget	double		6232165	0					
ANR	6232266	Identifier	y		6232165	1					
ANR	6232267	ElseStatement	else		6232165	0					
ANR	6232268	ExpressionStatement	"ar = strtod ( arg , NULL )"	31:8:369:391	6232165	0	True				
ANR	6232269	AssignmentExpression	"ar = strtod ( arg , NULL )"		6232165	0		=			
ANR	6232270	Identifier	ar		6232165	0					
ANR	6232271	CallExpression	"strtod ( arg , NULL )"		6232165	1					
ANR	6232272	Callee	strtod		6232165	0					
ANR	6232273	Identifier	strtod		6232165	0					
ANR	6232274	ArgumentList	arg		6232165	1					
ANR	6232275	Argument	arg		6232165	0					
ANR	6232276	Identifier	arg		6232165	0					
ANR	6232277	Argument	NULL		6232165	1					
ANR	6232278	Identifier	NULL		6232165	0					
ANR	6232279	IfStatement	if ( ! ar )		6232165	6					
ANR	6232280	Condition	! ar	35:8:404:406	6232165	0	True				
ANR	6232281	UnaryOperationExpression	! ar		6232165	0					
ANR	6232282	UnaryOperator	!		6232165	0					
ANR	6232283	Identifier	ar		6232165	1					
ANR	6232284	CompoundStatement		33:13:355:355	6232165	1					
ANR	6232285	ExpressionStatement	"fprintf ( stderr , ""Incorrect aspect ratio specification.\\n"" )"	37:8:420:478	6232165	0	True				
ANR	6232286	CallExpression	"fprintf ( stderr , ""Incorrect aspect ratio specification.\\n"" )"		6232165	0					
ANR	6232287	Callee	fprintf		6232165	0					
ANR	6232288	Identifier	fprintf		6232165	0					
ANR	6232289	ArgumentList	stderr		6232165	1					
ANR	6232290	Argument	stderr		6232165	0					
ANR	6232291	Identifier	stderr		6232165	0					
ANR	6232292	Argument	"""Incorrect aspect ratio specification.\\n"""		6232165	1					
ANR	6232293	PrimaryExpression	"""Incorrect aspect ratio specification.\\n"""		6232165	0					
ANR	6232294	ExpressionStatement	ffmpeg_exit ( 1 )	39:8:489:503	6232165	1	True				
ANR	6232295	CallExpression	ffmpeg_exit ( 1 )		6232165	0					
ANR	6232296	Callee	ffmpeg_exit		6232165	0					
ANR	6232297	Identifier	ffmpeg_exit		6232165	0					
ANR	6232298	ArgumentList	1		6232165	1					
ANR	6232299	Argument	1		6232165	0					
ANR	6232300	PrimaryExpression	1		6232165	0					
ANR	6232301	ExpressionStatement	frame_aspect_ratio = ar	43:4:517:540	6232165	7	True				
ANR	6232302	AssignmentExpression	frame_aspect_ratio = ar		6232165	0		=			
ANR	6232303	Identifier	frame_aspect_ratio		6232165	0					
ANR	6232304	Identifier	ar		6232165	1					
ANR	6232305	ExpressionStatement	x = vfilters ? strlen ( vfilters ) : 0	47:4:549:584	6232165	8	True				
ANR	6232306	AssignmentExpression	x = vfilters ? strlen ( vfilters ) : 0		6232165	0		=			
ANR	6232307	Identifier	x		6232165	0					
ANR	6232308	ConditionalExpression	vfilters ? strlen ( vfilters ) : 0		6232165	1					
ANR	6232309	Condition	vfilters		6232165	0					
ANR	6232310	Identifier	vfilters		6232165	0					
ANR	6232311	CallExpression	strlen ( vfilters )		6232165	1					
ANR	6232312	Callee	strlen		6232165	0					
ANR	6232313	Identifier	strlen		6232165	0					
ANR	6232314	ArgumentList	vfilters		6232165	1					
ANR	6232315	Argument	vfilters		6232165	0					
ANR	6232316	Identifier	vfilters		6232165	0					
ANR	6232317	PrimaryExpression	0		6232165	2					
ANR	6232318	ExpressionStatement	"vfilters = av_realloc ( vfilters , x + 100 )"	49:4:591:629	6232165	9	True				
ANR	6232319	AssignmentExpression	"vfilters = av_realloc ( vfilters , x + 100 )"		6232165	0		=			
ANR	6232320	Identifier	vfilters		6232165	0					
ANR	6232321	CallExpression	"av_realloc ( vfilters , x + 100 )"		6232165	1					
ANR	6232322	Callee	av_realloc		6232165	0					
ANR	6232323	Identifier	av_realloc		6232165	0					
ANR	6232324	ArgumentList	vfilters		6232165	1					
ANR	6232325	Argument	vfilters		6232165	0					
ANR	6232326	Identifier	vfilters		6232165	0					
ANR	6232327	Argument	x + 100		6232165	1					
ANR	6232328	AdditiveExpression	x + 100		6232165	0		+			
ANR	6232329	Identifier	x		6232165	0					
ANR	6232330	PrimaryExpression	100		6232165	1					
ANR	6232331	ExpressionStatement	"snprintf ( vfilters + x , x + 100 , ""%csetdar=%f\\n"" , x ? ',' : ' ' , ar )"	51:4:636:695	6232165	10	True				
ANR	6232332	CallExpression	"snprintf ( vfilters + x , x + 100 , ""%csetdar=%f\\n"" , x ? ',' : ' ' , ar )"		6232165	0					
ANR	6232333	Callee	snprintf		6232165	0					
ANR	6232334	Identifier	snprintf		6232165	0					
ANR	6232335	ArgumentList	vfilters + x		6232165	1					
ANR	6232336	Argument	vfilters + x		6232165	0					
ANR	6232337	AdditiveExpression	vfilters + x		6232165	0		+			
ANR	6232338	Identifier	vfilters		6232165	0					
ANR	6232339	Identifier	x		6232165	1					
ANR	6232340	Argument	x + 100		6232165	1					
ANR	6232341	AdditiveExpression	x + 100		6232165	0		+			
ANR	6232342	Identifier	x		6232165	0					
ANR	6232343	PrimaryExpression	100		6232165	1					
ANR	6232344	Argument	"""%csetdar=%f\\n"""		6232165	2					
ANR	6232345	PrimaryExpression	"""%csetdar=%f\\n"""		6232165	0					
ANR	6232346	Argument	"x ? ',' : ' '"		6232165	3					
ANR	6232347	ConditionalExpression	"x ? ',' : ' '"		6232165	0					
ANR	6232348	Condition	x		6232165	0					
ANR	6232349	Identifier	x		6232165	0					
ANR	6232350	PrimaryExpression	"','"		6232165	1					
ANR	6232351	PrimaryExpression	' '		6232165	2					
ANR	6232352	Argument	ar		6232165	4					
ANR	6232353	Identifier	ar		6232165	0					
ANR	6232354	ReturnType	static void		6232165	1					
ANR	6232355	Identifier	opt_frame_aspect_ratio		6232165	2					
ANR	6232356	ParameterList	const char * arg		6232165	3					
ANR	6232357	Parameter	const char * arg	1:35:35:49	6232165	0	True				
ANR	6232358	ParameterType	const char *		6232165	0					
ANR	6232359	Identifier	arg		6232165	1					
ANR	6232360	CFGEntryNode	ENTRY		6232165		True				
ANR	6232361	CFGExitNode	EXIT		6232165		True				
ANR	6232362	Symbol	av_realloc		6232165						
ANR	6232363	Symbol	NULL		6232165						
ANR	6232364	Symbol	& end		6232165						
ANR	6232365	Symbol	strchr		6232165						
ANR	6232366	Symbol	stderr		6232165						
ANR	6232367	Symbol	strtod		6232165						
ANR	6232368	Symbol	frame_aspect_ratio		6232165						
ANR	6232369	Symbol	p		6232165						
ANR	6232370	Symbol	ar		6232165						
ANR	6232371	Symbol	strlen		6232165						
ANR	6232372	Symbol	strtol		6232165						
ANR	6232373	Symbol	arg		6232165						
ANR	6232374	Symbol	x		6232165						
ANR	6232375	Symbol	y		6232165						
ANR	6232376	Symbol	end		6232165						
ANR	6232377	Symbol	vfilters		6232165						
