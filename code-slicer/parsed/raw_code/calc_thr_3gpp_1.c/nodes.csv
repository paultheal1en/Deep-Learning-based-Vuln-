command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1203563	File	/home/p4ultr4n/workplace/ReVeal/raw_code/calc_thr_3gpp_1.c								
ANR	1203564	Function	calc_thr_3gpp	1:0:0:908							
ANR	1203565	FunctionDef	"calc_thr_3gpp (const FFPsyWindowInfo * wi , const int num_bands , AacPsyChannel * pch , const uint8_t * band_sizes , const float * coefs)"		1203564	0					
ANR	1203566	CompoundStatement		5:0:169:908	1203564	0					
ANR	1203567	IdentifierDeclStatement	"int i , w , g ;"	7:4:176:187	1203564	0	True				
ANR	1203568	IdentifierDecl	i		1203564	0					
ANR	1203569	IdentifierDeclType	int		1203564	0					
ANR	1203570	Identifier	i		1203564	1					
ANR	1203571	IdentifierDecl	w		1203564	1					
ANR	1203572	IdentifierDeclType	int		1203564	0					
ANR	1203573	Identifier	w		1203564	1					
ANR	1203574	IdentifierDecl	g		1203564	2					
ANR	1203575	IdentifierDeclType	int		1203564	0					
ANR	1203576	Identifier	g		1203564	1					
ANR	1203577	IdentifierDeclStatement	int start = 0 ;	9:4:194:207	1203564	1	True				
ANR	1203578	IdentifierDecl	start = 0		1203564	0					
ANR	1203579	IdentifierDeclType	int		1203564	0					
ANR	1203580	Identifier	start		1203564	1					
ANR	1203581	AssignmentExpression	start = 0		1203564	2		=			
ANR	1203582	Identifier	start		1203564	0					
ANR	1203583	PrimaryExpression	0		1203564	1					
ANR	1203584	ForStatement	for ( w = 0 ; w < wi -> num_windows * 16 ; w += 16 )		1203564	2					
ANR	1203585	ForInit	w = 0 ;	11:9:219:224	1203564	0	True				
ANR	1203586	AssignmentExpression	w = 0		1203564	0		=			
ANR	1203587	Identifier	w		1203564	0					
ANR	1203588	PrimaryExpression	0		1203564	1					
ANR	1203589	Condition	w < wi -> num_windows * 16	11:16:226:247	1203564	1	True				
ANR	1203590	RelationalExpression	w < wi -> num_windows * 16		1203564	0		<			
ANR	1203591	Identifier	w		1203564	0					
ANR	1203592	MultiplicativeExpression	wi -> num_windows * 16		1203564	1		*			
ANR	1203593	PtrMemberAccess	wi -> num_windows		1203564	0					
ANR	1203594	Identifier	wi		1203564	0					
ANR	1203595	Identifier	num_windows		1203564	1					
ANR	1203596	PrimaryExpression	16		1203564	1					
ANR	1203597	AssignmentExpression	w += 16	11:40:250:256	1203564	2	True	+=			
ANR	1203598	Identifier	w		1203564	0					
ANR	1203599	PrimaryExpression	16		1203564	1					
ANR	1203600	CompoundStatement		7:49:89:89	1203564	3					
ANR	1203601	ForStatement	for ( g = 0 ; g < num_bands ; g ++ )		1203564	0					
ANR	1203602	ForInit	g = 0 ;	13:13:275:280	1203564	0	True				
ANR	1203603	AssignmentExpression	g = 0		1203564	0		=			
ANR	1203604	Identifier	g		1203564	0					
ANR	1203605	PrimaryExpression	0		1203564	1					
ANR	1203606	Condition	g < num_bands	13:20:282:294	1203564	1	True				
ANR	1203607	RelationalExpression	g < num_bands		1203564	0		<			
ANR	1203608	Identifier	g		1203564	0					
ANR	1203609	Identifier	num_bands		1203564	1					
ANR	1203610	PostIncDecOperationExpression	g ++	13:35:297:299	1203564	2	True				
ANR	1203611	Identifier	g		1203564	0					
ANR	1203612	IncDec	++		1203564	1					
ANR	1203613	CompoundStatement		17:12:237:247	1203564	3					
ANR	1203614	IdentifierDeclStatement	AacPsyBand * band = & pch -> band [ w + g ] ;	15:12:317:351	1203564	0	True				
ANR	1203615	IdentifierDecl	* band = & pch -> band [ w + g ]		1203564	0					
ANR	1203616	IdentifierDeclType	AacPsyBand *		1203564	0					
ANR	1203617	Identifier	band		1203564	1					
ANR	1203618	AssignmentExpression	* band = & pch -> band [ w + g ]		1203564	2		=			
ANR	1203619	Identifier	band		1203564	0					
ANR	1203620	UnaryOperationExpression	& pch -> band [ w + g ]		1203564	1					
ANR	1203621	UnaryOperator	&		1203564	0					
ANR	1203622	ArrayIndexing	pch -> band [ w + g ]		1203564	1					
ANR	1203623	PtrMemberAccess	pch -> band		1203564	0					
ANR	1203624	Identifier	pch		1203564	0					
ANR	1203625	Identifier	band		1203564	1					
ANR	1203626	AdditiveExpression	w + g		1203564	1		+			
ANR	1203627	Identifier	w		1203564	0					
ANR	1203628	Identifier	g		1203564	1					
ANR	1203629	IdentifierDeclStatement	float form_factor = 0.0f ;	19:12:368:392	1203564	1	True				
ANR	1203630	IdentifierDecl	form_factor = 0.0f		1203564	0					
ANR	1203631	IdentifierDeclType	float		1203564	0					
ANR	1203632	Identifier	form_factor		1203564	1					
ANR	1203633	AssignmentExpression	form_factor = 0.0f		1203564	2		=			
ANR	1203634	Identifier	form_factor		1203564	0					
ANR	1203635	PrimaryExpression	0.0f		1203564	1					
ANR	1203636	IdentifierDeclStatement	float Temp ;	21:12:407:417	1203564	2	True				
ANR	1203637	IdentifierDecl	Temp		1203564	0					
ANR	1203638	IdentifierDeclType	float		1203564	0					
ANR	1203639	Identifier	Temp		1203564	1					
ANR	1203640	ExpressionStatement	band -> energy = 0.0f	23:12:432:451	1203564	3	True				
ANR	1203641	AssignmentExpression	band -> energy = 0.0f		1203564	0		=			
ANR	1203642	PtrMemberAccess	band -> energy		1203564	0					
ANR	1203643	Identifier	band		1203564	0					
ANR	1203644	Identifier	energy		1203564	1					
ANR	1203645	PrimaryExpression	0.0f		1203564	1					
ANR	1203646	ForStatement	for ( i = 0 ; i < band_sizes [ g ] ; i ++ )		1203564	4					
ANR	1203647	ForInit	i = 0 ;	25:17:471:476	1203564	0	True				
ANR	1203648	AssignmentExpression	i = 0		1203564	0		=			
ANR	1203649	Identifier	i		1203564	0					
ANR	1203650	PrimaryExpression	0		1203564	1					
ANR	1203651	Condition	i < band_sizes [ g ]	25:24:478:494	1203564	1	True				
ANR	1203652	RelationalExpression	i < band_sizes [ g ]		1203564	0		<			
ANR	1203653	Identifier	i		1203564	0					
ANR	1203654	ArrayIndexing	band_sizes [ g ]		1203564	1					
ANR	1203655	Identifier	band_sizes		1203564	0					
ANR	1203656	Identifier	g		1203564	1					
ANR	1203657	PostIncDecOperationExpression	i ++	25:43:497:499	1203564	2	True				
ANR	1203658	Identifier	i		1203564	0					
ANR	1203659	IncDec	++		1203564	1					
ANR	1203660	CompoundStatement		21:48:332:332	1203564	3					
ANR	1203661	ExpressionStatement	band -> energy += coefs [ start + i ] * coefs [ start + i ]	27:16:521:568	1203564	0	True				
ANR	1203662	AssignmentExpression	band -> energy += coefs [ start + i ] * coefs [ start + i ]		1203564	0		+=			
ANR	1203663	PtrMemberAccess	band -> energy		1203564	0					
ANR	1203664	Identifier	band		1203564	0					
ANR	1203665	Identifier	energy		1203564	1					
ANR	1203666	MultiplicativeExpression	coefs [ start + i ] * coefs [ start + i ]		1203564	1		*			
ANR	1203667	ArrayIndexing	coefs [ start + i ]		1203564	0					
ANR	1203668	Identifier	coefs		1203564	0					
ANR	1203669	AdditiveExpression	start + i		1203564	1		+			
ANR	1203670	Identifier	start		1203564	0					
ANR	1203671	Identifier	i		1203564	1					
ANR	1203672	ArrayIndexing	coefs [ start + i ]		1203564	1					
ANR	1203673	Identifier	coefs		1203564	0					
ANR	1203674	AdditiveExpression	start + i		1203564	1		+			
ANR	1203675	Identifier	start		1203564	0					
ANR	1203676	Identifier	i		1203564	1					
ANR	1203677	ExpressionStatement	form_factor += sqrtf ( fabs ( coefs [ start + i ] ) )	29:16:587:630	1203564	1	True				
ANR	1203678	AssignmentExpression	form_factor += sqrtf ( fabs ( coefs [ start + i ] ) )		1203564	0		+=			
ANR	1203679	Identifier	form_factor		1203564	0					
ANR	1203680	CallExpression	sqrtf ( fabs ( coefs [ start + i ] ) )		1203564	1					
ANR	1203681	Callee	sqrtf		1203564	0					
ANR	1203682	Identifier	sqrtf		1203564	0					
ANR	1203683	ArgumentList	fabs ( coefs [ start + i ] )		1203564	1					
ANR	1203684	Argument	fabs ( coefs [ start + i ] )		1203564	0					
ANR	1203685	CallExpression	fabs ( coefs [ start + i ] )		1203564	0					
ANR	1203686	Callee	fabs		1203564	0					
ANR	1203687	Identifier	fabs		1203564	0					
ANR	1203688	ArgumentList	coefs [ start + i ]		1203564	1					
ANR	1203689	Argument	coefs [ start + i ]		1203564	0					
ANR	1203690	ArrayIndexing	coefs [ start + i ]		1203564	0					
ANR	1203691	Identifier	coefs		1203564	0					
ANR	1203692	AdditiveExpression	start + i		1203564	1		+			
ANR	1203693	Identifier	start		1203564	0					
ANR	1203694	Identifier	i		1203564	1					
ANR	1203695	ExpressionStatement	Temp = band -> energy > 0 ? sqrtf ( ( float ) band_sizes [ g ] / band -> energy ) : 0	33:12:660:732	1203564	5	True				
ANR	1203696	AssignmentExpression	Temp = band -> energy > 0 ? sqrtf ( ( float ) band_sizes [ g ] / band -> energy ) : 0		1203564	0		=			
ANR	1203697	Identifier	Temp		1203564	0					
ANR	1203698	ConditionalExpression	band -> energy > 0 ? sqrtf ( ( float ) band_sizes [ g ] / band -> energy ) : 0		1203564	1					
ANR	1203699	Condition	band -> energy > 0		1203564	0					
ANR	1203700	RelationalExpression	band -> energy > 0		1203564	0		>			
ANR	1203701	PtrMemberAccess	band -> energy		1203564	0					
ANR	1203702	Identifier	band		1203564	0					
ANR	1203703	Identifier	energy		1203564	1					
ANR	1203704	PrimaryExpression	0		1203564	1					
ANR	1203705	CallExpression	sqrtf ( ( float ) band_sizes [ g ] / band -> energy )		1203564	1					
ANR	1203706	Callee	sqrtf		1203564	0					
ANR	1203707	Identifier	sqrtf		1203564	0					
ANR	1203708	ArgumentList	( float ) band_sizes [ g ] / band -> energy		1203564	1					
ANR	1203709	Argument	( float ) band_sizes [ g ] / band -> energy		1203564	0					
ANR	1203710	MultiplicativeExpression	( float ) band_sizes [ g ] / band -> energy		1203564	0		/			
ANR	1203711	CastExpression	( float ) band_sizes [ g ]		1203564	0					
ANR	1203712	CastTarget	float		1203564	0					
ANR	1203713	ArrayIndexing	band_sizes [ g ]		1203564	1					
ANR	1203714	Identifier	band_sizes		1203564	0					
ANR	1203715	Identifier	g		1203564	1					
ANR	1203716	PtrMemberAccess	band -> energy		1203564	1					
ANR	1203717	Identifier	band		1203564	0					
ANR	1203718	Identifier	energy		1203564	1					
ANR	1203719	PrimaryExpression	0		1203564	2					
ANR	1203720	ExpressionStatement	band -> thr = band -> energy * 0.001258925f	35:12:747:791	1203564	6	True				
ANR	1203721	AssignmentExpression	band -> thr = band -> energy * 0.001258925f		1203564	0		=			
ANR	1203722	PtrMemberAccess	band -> thr		1203564	0					
ANR	1203723	Identifier	band		1203564	0					
ANR	1203724	Identifier	thr		1203564	1					
ANR	1203725	MultiplicativeExpression	band -> energy * 0.001258925f		1203564	1		*			
ANR	1203726	PtrMemberAccess	band -> energy		1203564	0					
ANR	1203727	Identifier	band		1203564	0					
ANR	1203728	Identifier	energy		1203564	1					
ANR	1203729	PrimaryExpression	0.001258925f		1203564	1					
ANR	1203730	ExpressionStatement	band -> nz_lines = form_factor * sqrtf ( Temp )	37:12:806:848	1203564	7	True				
ANR	1203731	AssignmentExpression	band -> nz_lines = form_factor * sqrtf ( Temp )		1203564	0		=			
ANR	1203732	PtrMemberAccess	band -> nz_lines		1203564	0					
ANR	1203733	Identifier	band		1203564	0					
ANR	1203734	Identifier	nz_lines		1203564	1					
ANR	1203735	MultiplicativeExpression	form_factor * sqrtf ( Temp )		1203564	1		*			
ANR	1203736	Identifier	form_factor		1203564	0					
ANR	1203737	CallExpression	sqrtf ( Temp )		1203564	1					
ANR	1203738	Callee	sqrtf		1203564	0					
ANR	1203739	Identifier	sqrtf		1203564	0					
ANR	1203740	ArgumentList	Temp		1203564	1					
ANR	1203741	Argument	Temp		1203564	0					
ANR	1203742	Identifier	Temp		1203564	0					
ANR	1203743	ExpressionStatement	start += band_sizes [ g ]	41:12:865:887	1203564	8	True				
ANR	1203744	AssignmentExpression	start += band_sizes [ g ]		1203564	0		+=			
ANR	1203745	Identifier	start		1203564	0					
ANR	1203746	ArrayIndexing	band_sizes [ g ]		1203564	1					
ANR	1203747	Identifier	band_sizes		1203564	0					
ANR	1203748	Identifier	g		1203564	1					
ANR	1203749	ReturnType	static void		1203564	1					
ANR	1203750	Identifier	calc_thr_3gpp		1203564	2					
ANR	1203751	ParameterList	"const FFPsyWindowInfo * wi , const int num_bands , AacPsyChannel * pch , const uint8_t * band_sizes , const float * coefs"		1203564	3					
ANR	1203752	Parameter	const FFPsyWindowInfo * wi	1:26:26:50	1203564	0	True				
ANR	1203753	ParameterType	const FFPsyWindowInfo *		1203564	0					
ANR	1203754	Identifier	wi		1203564	1					
ANR	1203755	Parameter	const int num_bands	1:53:53:71	1203564	1	True				
ANR	1203756	ParameterType	const int		1203564	0					
ANR	1203757	Identifier	num_bands		1203564	1					
ANR	1203758	Parameter	AacPsyChannel * pch	1:74:74:91	1203564	2	True				
ANR	1203759	ParameterType	AacPsyChannel *		1203564	0					
ANR	1203760	Identifier	pch		1203564	1					
ANR	1203761	Parameter	const uint8_t * band_sizes	3:26:121:145	1203564	3	True				
ANR	1203762	ParameterType	const uint8_t *		1203564	0					
ANR	1203763	Identifier	band_sizes		1203564	1					
ANR	1203764	Parameter	const float * coefs	3:53:148:165	1203564	4	True				
ANR	1203765	ParameterType	const float *		1203564	0					
ANR	1203766	Identifier	coefs		1203564	1					
ANR	1203767	CFGEntryNode	ENTRY		1203564		True				
ANR	1203768	CFGExitNode	EXIT		1203564		True				
ANR	1203769	Symbol	* start		1203564						
ANR	1203770	Symbol	sqrtf		1203564						
ANR	1203771	Symbol	wi		1203564						
ANR	1203772	Symbol	band -> thr		1203564						
ANR	1203773	Symbol	Temp		1203564						
ANR	1203774	Symbol	pch		1203564						
ANR	1203775	Symbol	band_sizes		1203564						
ANR	1203776	Symbol	* coefs		1203564						
ANR	1203777	Symbol	* wi		1203564						
ANR	1203778	Symbol	band		1203564						
ANR	1203779	Symbol	band -> nz_lines		1203564						
ANR	1203780	Symbol	coefs		1203564						
ANR	1203781	Symbol	num_bands		1203564						
ANR	1203782	Symbol	fabs		1203564						
ANR	1203783	Symbol	pch -> band		1203564						
ANR	1203784	Symbol	g		1203564						
ANR	1203785	Symbol	* band_sizes		1203564						
ANR	1203786	Symbol	start		1203564						
ANR	1203787	Symbol	i		1203564						
ANR	1203788	Symbol	* g		1203564						
ANR	1203789	Symbol	* i		1203564						
ANR	1203790	Symbol	wi -> num_windows		1203564						
ANR	1203791	Symbol	w		1203564						
ANR	1203792	Symbol	* band		1203564						
ANR	1203793	Symbol	band -> energy		1203564						
ANR	1203794	Symbol	form_factor		1203564						
ANR	1203795	Symbol	* pch		1203564						
