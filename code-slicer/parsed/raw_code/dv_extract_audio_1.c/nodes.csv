command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2868702	File	/home/p4ultr4n/workplace/ReVeal/raw_code/dv_extract_audio_1.c								
ANR	2868703	Function	dv_extract_audio	1:0:0:3543							
ANR	2868704	FunctionDef	"dv_extract_audio (uint8_t * frame , uint8_t * ppcm [ 4 ] , const DVprofile * sys)"		2868703	0					
ANR	2868705	CompoundStatement		5:0:114:3543	2868703	0					
ANR	2868706	IdentifierDeclStatement	"int size , chan , i , j , d , of , smpls , freq , quant , half_ch ;"	7:4:121:177	2868703	0	True				
ANR	2868707	IdentifierDecl	size		2868703	0					
ANR	2868708	IdentifierDeclType	int		2868703	0					
ANR	2868709	Identifier	size		2868703	1					
ANR	2868710	IdentifierDecl	chan		2868703	1					
ANR	2868711	IdentifierDeclType	int		2868703	0					
ANR	2868712	Identifier	chan		2868703	1					
ANR	2868713	IdentifierDecl	i		2868703	2					
ANR	2868714	IdentifierDeclType	int		2868703	0					
ANR	2868715	Identifier	i		2868703	1					
ANR	2868716	IdentifierDecl	j		2868703	3					
ANR	2868717	IdentifierDeclType	int		2868703	0					
ANR	2868718	Identifier	j		2868703	1					
ANR	2868719	IdentifierDecl	d		2868703	4					
ANR	2868720	IdentifierDeclType	int		2868703	0					
ANR	2868721	Identifier	d		2868703	1					
ANR	2868722	IdentifierDecl	of		2868703	5					
ANR	2868723	IdentifierDeclType	int		2868703	0					
ANR	2868724	Identifier	of		2868703	1					
ANR	2868725	IdentifierDecl	smpls		2868703	6					
ANR	2868726	IdentifierDeclType	int		2868703	0					
ANR	2868727	Identifier	smpls		2868703	1					
ANR	2868728	IdentifierDecl	freq		2868703	7					
ANR	2868729	IdentifierDeclType	int		2868703	0					
ANR	2868730	Identifier	freq		2868703	1					
ANR	2868731	IdentifierDecl	quant		2868703	8					
ANR	2868732	IdentifierDeclType	int		2868703	0					
ANR	2868733	Identifier	quant		2868703	1					
ANR	2868734	IdentifierDecl	half_ch		2868703	9					
ANR	2868735	IdentifierDeclType	int		2868703	0					
ANR	2868736	Identifier	half_ch		2868703	1					
ANR	2868737	IdentifierDeclStatement	"uint16_t lc , rc ;"	9:4:184:199	2868703	1	True				
ANR	2868738	IdentifierDecl	lc		2868703	0					
ANR	2868739	IdentifierDeclType	uint16_t		2868703	0					
ANR	2868740	Identifier	lc		2868703	1					
ANR	2868741	IdentifierDecl	rc		2868703	1					
ANR	2868742	IdentifierDeclType	uint16_t		2868703	0					
ANR	2868743	Identifier	rc		2868703	1					
ANR	2868744	IdentifierDeclStatement	const uint8_t * as_pack ;	11:4:206:228	2868703	2	True				
ANR	2868745	IdentifierDecl	* as_pack		2868703	0					
ANR	2868746	IdentifierDeclType	const uint8_t *		2868703	0					
ANR	2868747	Identifier	as_pack		2868703	1					
ANR	2868748	IdentifierDeclStatement	"uint8_t * pcm , ipcm ;"	13:4:235:253	2868703	3	True				
ANR	2868749	IdentifierDecl	* pcm		2868703	0					
ANR	2868750	IdentifierDeclType	uint8_t *		2868703	0					
ANR	2868751	Identifier	pcm		2868703	1					
ANR	2868752	IdentifierDecl	ipcm		2868703	1					
ANR	2868753	IdentifierDeclType	uint8_t		2868703	0					
ANR	2868754	Identifier	ipcm		2868703	1					
ANR	2868755	ExpressionStatement	"as_pack = dv_extract_pack ( frame , dv_audio_source )"	17:4:262:311	2868703	4	True				
ANR	2868756	AssignmentExpression	"as_pack = dv_extract_pack ( frame , dv_audio_source )"		2868703	0		=			
ANR	2868757	Identifier	as_pack		2868703	0					
ANR	2868758	CallExpression	"dv_extract_pack ( frame , dv_audio_source )"		2868703	1					
ANR	2868759	Callee	dv_extract_pack		2868703	0					
ANR	2868760	Identifier	dv_extract_pack		2868703	0					
ANR	2868761	ArgumentList	frame		2868703	1					
ANR	2868762	Argument	frame		2868703	0					
ANR	2868763	Identifier	frame		2868703	0					
ANR	2868764	Argument	dv_audio_source		2868703	1					
ANR	2868765	Identifier	dv_audio_source		2868703	0					
ANR	2868766	IfStatement	if ( ! as_pack )		2868703	5					
ANR	2868767	Condition	! as_pack	19:8:322:329	2868703	0	True				
ANR	2868768	UnaryOperationExpression	! as_pack		2868703	0					
ANR	2868769	UnaryOperator	!		2868703	0					
ANR	2868770	Identifier	as_pack		2868703	1					
ANR	2868771	ReturnStatement	return 0 ;	21:8:361:369	2868703	1	True				
ANR	2868772	PrimaryExpression	0		2868703	0					
ANR	2868773	ExpressionStatement	smpls = as_pack [ 1 ] & 0x3f	25:4:378:404	2868703	6	True				
ANR	2868774	AssignmentExpression	smpls = as_pack [ 1 ] & 0x3f		2868703	0		=			
ANR	2868775	Identifier	smpls		2868703	0					
ANR	2868776	BitAndExpression	as_pack [ 1 ] & 0x3f		2868703	1		&			
ANR	2868777	ArrayIndexing	as_pack [ 1 ]		2868703	0					
ANR	2868778	Identifier	as_pack		2868703	0					
ANR	2868779	PrimaryExpression	1		2868703	1					
ANR	2868780	PrimaryExpression	0x3f		2868703	1					
ANR	2868781	ExpressionStatement	freq = ( as_pack [ 4 ] >> 3 ) & 0x07	27:4:460:492	2868703	7	True				
ANR	2868782	AssignmentExpression	freq = ( as_pack [ 4 ] >> 3 ) & 0x07		2868703	0		=			
ANR	2868783	Identifier	freq		2868703	0					
ANR	2868784	BitAndExpression	( as_pack [ 4 ] >> 3 ) & 0x07		2868703	1		&			
ANR	2868785	ShiftExpression	as_pack [ 4 ] >> 3		2868703	0		>>			
ANR	2868786	ArrayIndexing	as_pack [ 4 ]		2868703	0					
ANR	2868787	Identifier	as_pack		2868703	0					
ANR	2868788	PrimaryExpression	4		2868703	1					
ANR	2868789	PrimaryExpression	3		2868703	1					
ANR	2868790	PrimaryExpression	0x07		2868703	1					
ANR	2868791	ExpressionStatement	quant = as_pack [ 4 ] & 0x07	29:4:539:565	2868703	8	True				
ANR	2868792	AssignmentExpression	quant = as_pack [ 4 ] & 0x07		2868703	0		=			
ANR	2868793	Identifier	quant		2868703	0					
ANR	2868794	BitAndExpression	as_pack [ 4 ] & 0x07		2868703	1		&			
ANR	2868795	ArrayIndexing	as_pack [ 4 ]		2868703	0					
ANR	2868796	Identifier	as_pack		2868703	0					
ANR	2868797	PrimaryExpression	4		2868703	1					
ANR	2868798	PrimaryExpression	0x07		2868703	1					
ANR	2868799	IfStatement	if ( quant > 1 )		2868703	9					
ANR	2868800	Condition	quant > 1	33:8:628:636	2868703	0	True				
ANR	2868801	RelationalExpression	quant > 1		2868703	0		>			
ANR	2868802	Identifier	quant		2868703	0					
ANR	2868803	PrimaryExpression	1		2868703	1					
ANR	2868804	ReturnStatement	return - 1 ;	35:8:648:657	2868703	1	True				
ANR	2868805	UnaryOperationExpression	- 1		2868703	0					
ANR	2868806	UnaryOperator	-		2868703	0					
ANR	2868807	PrimaryExpression	1		2868703	1					
ANR	2868808	ExpressionStatement	size = ( sys -> audio_min_samples [ freq ] + smpls ) * 4	39:4:697:746	2868703	10	True				
ANR	2868809	AssignmentExpression	size = ( sys -> audio_min_samples [ freq ] + smpls ) * 4		2868703	0		=			
ANR	2868810	Identifier	size		2868703	0					
ANR	2868811	MultiplicativeExpression	( sys -> audio_min_samples [ freq ] + smpls ) * 4		2868703	1		*			
ANR	2868812	AdditiveExpression	sys -> audio_min_samples [ freq ] + smpls		2868703	0		+			
ANR	2868813	ArrayIndexing	sys -> audio_min_samples [ freq ]		2868703	0					
ANR	2868814	PtrMemberAccess	sys -> audio_min_samples		2868703	0					
ANR	2868815	Identifier	sys		2868703	0					
ANR	2868816	Identifier	audio_min_samples		2868703	1					
ANR	2868817	Identifier	freq		2868703	1					
ANR	2868818	Identifier	smpls		2868703	1					
ANR	2868819	PrimaryExpression	4		2868703	1					
ANR	2868820	ExpressionStatement	half_ch = sys -> difseg_size / 2	41:4:771:801	2868703	11	True				
ANR	2868821	AssignmentExpression	half_ch = sys -> difseg_size / 2		2868703	0		=			
ANR	2868822	Identifier	half_ch		2868703	0					
ANR	2868823	MultiplicativeExpression	sys -> difseg_size / 2		2868703	1		/			
ANR	2868824	PtrMemberAccess	sys -> difseg_size		2868703	0					
ANR	2868825	Identifier	sys		2868703	0					
ANR	2868826	Identifier	difseg_size		2868703	1					
ANR	2868827	PrimaryExpression	2		2868703	1					
ANR	2868828	ExpressionStatement	ipcm = ( sys -> height == 720 && ! ( frame [ 1 ] & 0x0C ) ) ? 2 : 0	49:4:917:974	2868703	12	True				
ANR	2868829	AssignmentExpression	ipcm = ( sys -> height == 720 && ! ( frame [ 1 ] & 0x0C ) ) ? 2 : 0		2868703	0		=			
ANR	2868830	Identifier	ipcm		2868703	0					
ANR	2868831	ConditionalExpression	( sys -> height == 720 && ! ( frame [ 1 ] & 0x0C ) ) ? 2 : 0		2868703	1					
ANR	2868832	Condition	sys -> height == 720 && ! ( frame [ 1 ] & 0x0C )		2868703	0					
ANR	2868833	AndExpression	sys -> height == 720 && ! ( frame [ 1 ] & 0x0C )		2868703	0		&&			
ANR	2868834	EqualityExpression	sys -> height == 720		2868703	0		==			
ANR	2868835	PtrMemberAccess	sys -> height		2868703	0					
ANR	2868836	Identifier	sys		2868703	0					
ANR	2868837	Identifier	height		2868703	1					
ANR	2868838	PrimaryExpression	720		2868703	1					
ANR	2868839	UnaryOperationExpression	! ( frame [ 1 ] & 0x0C )		2868703	1					
ANR	2868840	UnaryOperator	!		2868703	0					
ANR	2868841	BitAndExpression	frame [ 1 ] & 0x0C		2868703	1		&			
ANR	2868842	ArrayIndexing	frame [ 1 ]		2868703	0					
ANR	2868843	Identifier	frame		2868703	0					
ANR	2868844	PrimaryExpression	1		2868703	1					
ANR	2868845	PrimaryExpression	0x0C		2868703	1					
ANR	2868846	PrimaryExpression	2		2868703	1					
ANR	2868847	PrimaryExpression	0		2868703	2					
ANR	2868848	ExpressionStatement	pcm = ppcm [ ipcm ++ ]	51:4:981:1000	2868703	13	True				
ANR	2868849	AssignmentExpression	pcm = ppcm [ ipcm ++ ]		2868703	0		=			
ANR	2868850	Identifier	pcm		2868703	0					
ANR	2868851	ArrayIndexing	ppcm [ ipcm ++ ]		2868703	1					
ANR	2868852	Identifier	ppcm		2868703	0					
ANR	2868853	PostIncDecOperationExpression	ipcm ++		2868703	1					
ANR	2868854	Identifier	ipcm		2868703	0					
ANR	2868855	IncDec	++		2868703	1					
ANR	2868856	ForStatement	for ( chan = 0 ; chan < sys -> n_difchan ; chan ++ )		2868703	14					
ANR	2868857	ForInit	chan = 0 ;	57:9:1046:1054	2868703	0	True				
ANR	2868858	AssignmentExpression	chan = 0		2868703	0		=			
ANR	2868859	Identifier	chan		2868703	0					
ANR	2868860	PrimaryExpression	0		2868703	1					
ANR	2868861	Condition	chan < sys -> n_difchan	57:19:1056:1076	2868703	1	True				
ANR	2868862	RelationalExpression	chan < sys -> n_difchan		2868703	0		<			
ANR	2868863	Identifier	chan		2868703	0					
ANR	2868864	PtrMemberAccess	sys -> n_difchan		2868703	1					
ANR	2868865	Identifier	sys		2868703	0					
ANR	2868866	Identifier	n_difchan		2868703	1					
ANR	2868867	PostIncDecOperationExpression	chan ++	57:42:1079:1084	2868703	2	True				
ANR	2868868	Identifier	chan		2868703	0					
ANR	2868869	IncDec	++		2868703	1					
ANR	2868870	CompoundStatement		53:50:972:972	2868703	3					
ANR	2868871	ForStatement	for ( i = 0 ; i < sys -> difseg_size ; i ++ )		2868703	0					
ANR	2868872	ForInit	i = 0 ;	61:13:1139:1144	2868703	0	True				
ANR	2868873	AssignmentExpression	i = 0		2868703	0		=			
ANR	2868874	Identifier	i		2868703	0					
ANR	2868875	PrimaryExpression	0		2868703	1					
ANR	2868876	Condition	i < sys -> difseg_size	61:20:1146:1165	2868703	1	True				
ANR	2868877	RelationalExpression	i < sys -> difseg_size		2868703	0		<			
ANR	2868878	Identifier	i		2868703	0					
ANR	2868879	PtrMemberAccess	sys -> difseg_size		2868703	1					
ANR	2868880	Identifier	sys		2868703	0					
ANR	2868881	Identifier	difseg_size		2868703	1					
ANR	2868882	PostIncDecOperationExpression	i ++	61:42:1168:1170	2868703	2	True				
ANR	2868883	Identifier	i		2868703	0					
ANR	2868884	IncDec	++		2868703	1					
ANR	2868885	CompoundStatement		57:47:1058:1058	2868703	3					
ANR	2868886	ExpressionStatement	frame += 6 * 80	63:12:1188:1203	2868703	0	True				
ANR	2868887	AssignmentExpression	frame += 6 * 80		2868703	0		+=			
ANR	2868888	Identifier	frame		2868703	0					
ANR	2868889	MultiplicativeExpression	6 * 80		2868703	1		*			
ANR	2868890	PrimaryExpression	6		2868703	0					
ANR	2868891	PrimaryExpression	80		2868703	1					
ANR	2868892	IfStatement	if ( quant == 1 && i == half_ch )		2868703	1					
ANR	2868893	Condition	quant == 1 && i == half_ch	65:16:1252:1277	2868703	0	True				
ANR	2868894	AndExpression	quant == 1 && i == half_ch		2868703	0		&&			
ANR	2868895	EqualityExpression	quant == 1		2868703	0		==			
ANR	2868896	Identifier	quant		2868703	0					
ANR	2868897	PrimaryExpression	1		2868703	1					
ANR	2868898	EqualityExpression	i == half_ch		2868703	1		==			
ANR	2868899	Identifier	i		2868703	0					
ANR	2868900	Identifier	half_ch		2868703	1					
ANR	2868901	CompoundStatement		61:44:1165:1165	2868703	1					
ANR	2868902	ExpressionStatement	pcm = ppcm [ ipcm ++ ]	69:16:1360:1378	2868703	0	True				
ANR	2868903	AssignmentExpression	pcm = ppcm [ ipcm ++ ]		2868703	0		=			
ANR	2868904	Identifier	pcm		2868703	0					
ANR	2868905	ArrayIndexing	ppcm [ ipcm ++ ]		2868703	1					
ANR	2868906	Identifier	ppcm		2868703	0					
ANR	2868907	PostIncDecOperationExpression	ipcm ++		2868703	1					
ANR	2868908	Identifier	ipcm		2868703	0					
ANR	2868909	IncDec	++		2868703	1					
ANR	2868910	IfStatement	if ( ! pcm )		2868703	1					
ANR	2868911	Condition	! pcm	71:20:1401:1404	2868703	0	True				
ANR	2868912	UnaryOperationExpression	! pcm		2868703	0					
ANR	2868913	UnaryOperator	!		2868703	0					
ANR	2868914	Identifier	pcm		2868703	1					
ANR	2868915	BreakStatement	break ;	73:20:1428:1433	2868703	1	True				
ANR	2868916	ForStatement	for ( j = 0 ; j < 9 ; j ++ )		2868703	2					
ANR	2868917	ForInit	j = 0 ;	81:17:1510:1515	2868703	0	True				
ANR	2868918	AssignmentExpression	j = 0		2868703	0		=			
ANR	2868919	Identifier	j		2868703	0					
ANR	2868920	PrimaryExpression	0		2868703	1					
ANR	2868921	Condition	j < 9	81:24:1517:1521	2868703	1	True				
ANR	2868922	RelationalExpression	j < 9		2868703	0		<			
ANR	2868923	Identifier	j		2868703	0					
ANR	2868924	PrimaryExpression	9		2868703	1					
ANR	2868925	PostIncDecOperationExpression	j ++	81:31:1524:1526	2868703	2	True				
ANR	2868926	Identifier	j		2868703	0					
ANR	2868927	IncDec	++		2868703	1					
ANR	2868928	CompoundStatement		77:36:1414:1414	2868703	3					
ANR	2868929	ForStatement	for ( d = 8 ; d < 80 ; d += 2 )		2868703	0					
ANR	2868930	ForInit	d = 8 ;	83:21:1553:1558	2868703	0	True				
ANR	2868931	AssignmentExpression	d = 8		2868703	0		=			
ANR	2868932	Identifier	d		2868703	0					
ANR	2868933	PrimaryExpression	8		2868703	1					
ANR	2868934	Condition	d < 80	83:28:1560:1565	2868703	1	True				
ANR	2868935	RelationalExpression	d < 80		2868703	0		<			
ANR	2868936	Identifier	d		2868703	0					
ANR	2868937	PrimaryExpression	80		2868703	1					
ANR	2868938	AssignmentExpression	d += 2	83:36:1568:1573	2868703	2	True	+=			
ANR	2868939	Identifier	d		2868703	0					
ANR	2868940	PrimaryExpression	2		2868703	1					
ANR	2868941	CompoundStatement		79:44:1461:1461	2868703	3					
ANR	2868942	IfStatement	if ( quant == 0 )		2868703	0					
ANR	2868943	Condition	quant == 0	85:24:1603:1612	2868703	0	True				
ANR	2868944	EqualityExpression	quant == 0		2868703	0		==			
ANR	2868945	Identifier	quant		2868703	0					
ANR	2868946	PrimaryExpression	0		2868703	1					
ANR	2868947	CompoundStatement		81:36:1500:1500	2868703	1					
ANR	2868948	ExpressionStatement	of = sys -> audio_shuffle [ i ] [ j ] + ( d - 8 ) / 2 * sys -> audio_stride	87:24:1668:1731	2868703	0	True				
ANR	2868949	AssignmentExpression	of = sys -> audio_shuffle [ i ] [ j ] + ( d - 8 ) / 2 * sys -> audio_stride		2868703	0		=			
ANR	2868950	Identifier	of		2868703	0					
ANR	2868951	AdditiveExpression	sys -> audio_shuffle [ i ] [ j ] + ( d - 8 ) / 2 * sys -> audio_stride		2868703	1		+			
ANR	2868952	ArrayIndexing	sys -> audio_shuffle [ i ] [ j ]		2868703	0					
ANR	2868953	ArrayIndexing	sys -> audio_shuffle [ i ]		2868703	0					
ANR	2868954	PtrMemberAccess	sys -> audio_shuffle		2868703	0					
ANR	2868955	Identifier	sys		2868703	0					
ANR	2868956	Identifier	audio_shuffle		2868703	1					
ANR	2868957	Identifier	i		2868703	1					
ANR	2868958	Identifier	j		2868703	1					
ANR	2868959	MultiplicativeExpression	( d - 8 ) / 2 * sys -> audio_stride		2868703	1		/			
ANR	2868960	AdditiveExpression	d - 8		2868703	0		-			
ANR	2868961	Identifier	d		2868703	0					
ANR	2868962	PrimaryExpression	8		2868703	1					
ANR	2868963	MultiplicativeExpression	2 * sys -> audio_stride		2868703	1		*			
ANR	2868964	PrimaryExpression	2		2868703	0					
ANR	2868965	PtrMemberAccess	sys -> audio_stride		2868703	1					
ANR	2868966	Identifier	sys		2868703	0					
ANR	2868967	Identifier	audio_stride		2868703	1					
ANR	2868968	IfStatement	if ( of * 2 >= size )		2868703	1					
ANR	2868969	Condition	of * 2 >= size	89:28:1762:1773	2868703	0	True				
ANR	2868970	RelationalExpression	of * 2 >= size		2868703	0		>=			
ANR	2868971	MultiplicativeExpression	of * 2		2868703	0		*			
ANR	2868972	Identifier	of		2868703	0					
ANR	2868973	PrimaryExpression	2		2868703	1					
ANR	2868974	Identifier	size		2868703	1					
ANR	2868975	ContinueStatement	continue ;	91:28:1805:1813	2868703	1	True				
ANR	2868976	ExpressionStatement	pcm [ of * 2 ] = frame [ d + 1 ]	95:24:1842:1866	2868703	2	True				
ANR	2868977	AssignmentExpression	pcm [ of * 2 ] = frame [ d + 1 ]		2868703	0		=			
ANR	2868978	ArrayIndexing	pcm [ of * 2 ]		2868703	0					
ANR	2868979	Identifier	pcm		2868703	0					
ANR	2868980	MultiplicativeExpression	of * 2		2868703	1		*			
ANR	2868981	Identifier	of		2868703	0					
ANR	2868982	PrimaryExpression	2		2868703	1					
ANR	2868983	ArrayIndexing	frame [ d + 1 ]		2868703	1					
ANR	2868984	Identifier	frame		2868703	0					
ANR	2868985	AdditiveExpression	d + 1		2868703	1		+			
ANR	2868986	Identifier	d		2868703	0					
ANR	2868987	PrimaryExpression	1		2868703	1					
ANR	2868988	ExpressionStatement	pcm [ of * 2 + 1 ] = frame [ d ]	97:24:1926:1948	2868703	3	True				
ANR	2868989	AssignmentExpression	pcm [ of * 2 + 1 ] = frame [ d ]		2868703	0		=			
ANR	2868990	ArrayIndexing	pcm [ of * 2 + 1 ]		2868703	0					
ANR	2868991	Identifier	pcm		2868703	0					
ANR	2868992	AdditiveExpression	of * 2 + 1		2868703	1		+			
ANR	2868993	MultiplicativeExpression	of * 2		2868703	0		*			
ANR	2868994	Identifier	of		2868703	0					
ANR	2868995	PrimaryExpression	2		2868703	1					
ANR	2868996	PrimaryExpression	1		2868703	1					
ANR	2868997	ArrayIndexing	frame [ d ]		2868703	1					
ANR	2868998	Identifier	frame		2868703	0					
ANR	2868999	Identifier	d		2868703	1					
ANR	2869000	IfStatement	if ( pcm [ of * 2 + 1 ] == 0x80 && pcm [ of * 2 ] == 0x00 )		2868703	4					
ANR	2869001	Condition	pcm [ of * 2 + 1 ] == 0x80 && pcm [ of * 2 ] == 0x00	99:28:2019:2058	2868703	0	True				
ANR	2869002	AndExpression	pcm [ of * 2 + 1 ] == 0x80 && pcm [ of * 2 ] == 0x00		2868703	0		&&			
ANR	2869003	EqualityExpression	pcm [ of * 2 + 1 ] == 0x80		2868703	0		==			
ANR	2869004	ArrayIndexing	pcm [ of * 2 + 1 ]		2868703	0					
ANR	2869005	Identifier	pcm		2868703	0					
ANR	2869006	AdditiveExpression	of * 2 + 1		2868703	1		+			
ANR	2869007	MultiplicativeExpression	of * 2		2868703	0		*			
ANR	2869008	Identifier	of		2868703	0					
ANR	2869009	PrimaryExpression	2		2868703	1					
ANR	2869010	PrimaryExpression	1		2868703	1					
ANR	2869011	PrimaryExpression	0x80		2868703	1					
ANR	2869012	EqualityExpression	pcm [ of * 2 ] == 0x00		2868703	1		==			
ANR	2869013	ArrayIndexing	pcm [ of * 2 ]		2868703	0					
ANR	2869014	Identifier	pcm		2868703	0					
ANR	2869015	MultiplicativeExpression	of * 2		2868703	1		*			
ANR	2869016	Identifier	of		2868703	0					
ANR	2869017	PrimaryExpression	2		2868703	1					
ANR	2869018	PrimaryExpression	0x00		2868703	1					
ANR	2869019	ExpressionStatement	pcm [ of * 2 + 1 ] = 0	101:28:2090:2105	2868703	1	True				
ANR	2869020	AssignmentExpression	pcm [ of * 2 + 1 ] = 0		2868703	0		=			
ANR	2869021	ArrayIndexing	pcm [ of * 2 + 1 ]		2868703	0					
ANR	2869022	Identifier	pcm		2868703	0					
ANR	2869023	AdditiveExpression	of * 2 + 1		2868703	1		+			
ANR	2869024	MultiplicativeExpression	of * 2		2868703	0		*			
ANR	2869025	Identifier	of		2868703	0					
ANR	2869026	PrimaryExpression	2		2868703	1					
ANR	2869027	PrimaryExpression	1		2868703	1					
ANR	2869028	PrimaryExpression	0		2868703	1					
ANR	2869029	ElseStatement	else		2868703	0					
ANR	2869030	CompoundStatement		99:27:2020:2020	2868703	0					
ANR	2869031	ExpressionStatement	lc = ( ( uint16_t ) frame [ d ] << 4 ) | ( ( uint16_t ) frame [ d + 2 ] >> 4 )	105:24:2197:2289	2868703	0	True				
ANR	2869032	AssignmentExpression	lc = ( ( uint16_t ) frame [ d ] << 4 ) | ( ( uint16_t ) frame [ d + 2 ] >> 4 )		2868703	0		=			
ANR	2869033	Identifier	lc		2868703	0					
ANR	2869034	InclusiveOrExpression	( ( uint16_t ) frame [ d ] << 4 ) | ( ( uint16_t ) frame [ d + 2 ] >> 4 )		2868703	1		|			
ANR	2869035	ShiftExpression	( uint16_t ) frame [ d ] << 4		2868703	0		<<			
ANR	2869036	CastExpression	( uint16_t ) frame [ d ]		2868703	0					
ANR	2869037	CastTarget	uint16_t		2868703	0					
ANR	2869038	ArrayIndexing	frame [ d ]		2868703	1					
ANR	2869039	Identifier	frame		2868703	0					
ANR	2869040	Identifier	d		2868703	1					
ANR	2869041	PrimaryExpression	4		2868703	1					
ANR	2869042	ShiftExpression	( uint16_t ) frame [ d + 2 ] >> 4		2868703	1		>>			
ANR	2869043	CastExpression	( uint16_t ) frame [ d + 2 ]		2868703	0					
ANR	2869044	CastTarget	uint16_t		2868703	0					
ANR	2869045	ArrayIndexing	frame [ d + 2 ]		2868703	1					
ANR	2869046	Identifier	frame		2868703	0					
ANR	2869047	AdditiveExpression	d + 2		2868703	1		+			
ANR	2869048	Identifier	d		2868703	0					
ANR	2869049	PrimaryExpression	2		2868703	1					
ANR	2869050	PrimaryExpression	4		2868703	1					
ANR	2869051	ExpressionStatement	rc = ( ( uint16_t ) frame [ d + 1 ] << 4 ) | ( ( uint16_t ) frame [ d + 2 ] & 0x0f )	109:24:2316:2410	2868703	1	True				
ANR	2869052	AssignmentExpression	rc = ( ( uint16_t ) frame [ d + 1 ] << 4 ) | ( ( uint16_t ) frame [ d + 2 ] & 0x0f )		2868703	0		=			
ANR	2869053	Identifier	rc		2868703	0					
ANR	2869054	InclusiveOrExpression	( ( uint16_t ) frame [ d + 1 ] << 4 ) | ( ( uint16_t ) frame [ d + 2 ] & 0x0f )		2868703	1		|			
ANR	2869055	ShiftExpression	( uint16_t ) frame [ d + 1 ] << 4		2868703	0		<<			
ANR	2869056	CastExpression	( uint16_t ) frame [ d + 1 ]		2868703	0					
ANR	2869057	CastTarget	uint16_t		2868703	0					
ANR	2869058	ArrayIndexing	frame [ d + 1 ]		2868703	1					
ANR	2869059	Identifier	frame		2868703	0					
ANR	2869060	AdditiveExpression	d + 1		2868703	1		+			
ANR	2869061	Identifier	d		2868703	0					
ANR	2869062	PrimaryExpression	1		2868703	1					
ANR	2869063	PrimaryExpression	4		2868703	1					
ANR	2869064	BitAndExpression	( uint16_t ) frame [ d + 2 ] & 0x0f		2868703	1		&			
ANR	2869065	CastExpression	( uint16_t ) frame [ d + 2 ]		2868703	0					
ANR	2869066	CastTarget	uint16_t		2868703	0					
ANR	2869067	ArrayIndexing	frame [ d + 2 ]		2868703	1					
ANR	2869068	Identifier	frame		2868703	0					
ANR	2869069	AdditiveExpression	d + 2		2868703	1		+			
ANR	2869070	Identifier	d		2868703	0					
ANR	2869071	PrimaryExpression	2		2868703	1					
ANR	2869072	PrimaryExpression	0x0f		2868703	1					
ANR	2869073	ExpressionStatement	lc = ( lc == 0x800 ? 0 : dv_audio_12to16 ( lc ) )	113:24:2437:2481	2868703	2	True				
ANR	2869074	AssignmentExpression	lc = ( lc == 0x800 ? 0 : dv_audio_12to16 ( lc ) )		2868703	0		=			
ANR	2869075	Identifier	lc		2868703	0					
ANR	2869076	ConditionalExpression	lc == 0x800 ? 0 : dv_audio_12to16 ( lc )		2868703	1					
ANR	2869077	Condition	lc == 0x800		2868703	0					
ANR	2869078	EqualityExpression	lc == 0x800		2868703	0		==			
ANR	2869079	Identifier	lc		2868703	0					
ANR	2869080	PrimaryExpression	0x800		2868703	1					
ANR	2869081	PrimaryExpression	0		2868703	1					
ANR	2869082	CallExpression	dv_audio_12to16 ( lc )		2868703	2					
ANR	2869083	Callee	dv_audio_12to16		2868703	0					
ANR	2869084	Identifier	dv_audio_12to16		2868703	0					
ANR	2869085	ArgumentList	lc		2868703	1					
ANR	2869086	Argument	lc		2868703	0					
ANR	2869087	Identifier	lc		2868703	0					
ANR	2869088	ExpressionStatement	rc = ( rc == 0x800 ? 0 : dv_audio_12to16 ( rc ) )	115:24:2508:2552	2868703	3	True				
ANR	2869089	AssignmentExpression	rc = ( rc == 0x800 ? 0 : dv_audio_12to16 ( rc ) )		2868703	0		=			
ANR	2869090	Identifier	rc		2868703	0					
ANR	2869091	ConditionalExpression	rc == 0x800 ? 0 : dv_audio_12to16 ( rc )		2868703	1					
ANR	2869092	Condition	rc == 0x800		2868703	0					
ANR	2869093	EqualityExpression	rc == 0x800		2868703	0		==			
ANR	2869094	Identifier	rc		2868703	0					
ANR	2869095	PrimaryExpression	0x800		2868703	1					
ANR	2869096	PrimaryExpression	0		2868703	1					
ANR	2869097	CallExpression	dv_audio_12to16 ( rc )		2868703	2					
ANR	2869098	Callee	dv_audio_12to16		2868703	0					
ANR	2869099	Identifier	dv_audio_12to16		2868703	0					
ANR	2869100	ArgumentList	rc		2868703	1					
ANR	2869101	Argument	rc		2868703	0					
ANR	2869102	Identifier	rc		2868703	0					
ANR	2869103	ExpressionStatement	of = sys -> audio_shuffle [ i % half_ch ] [ j ] + ( d - 8 ) / 3 * sys -> audio_stride	119:24:2581:2652	2868703	4	True				
ANR	2869104	AssignmentExpression	of = sys -> audio_shuffle [ i % half_ch ] [ j ] + ( d - 8 ) / 3 * sys -> audio_stride		2868703	0		=			
ANR	2869105	Identifier	of		2868703	0					
ANR	2869106	AdditiveExpression	sys -> audio_shuffle [ i % half_ch ] [ j ] + ( d - 8 ) / 3 * sys -> audio_stride		2868703	1		+			
ANR	2869107	ArrayIndexing	sys -> audio_shuffle [ i % half_ch ] [ j ]		2868703	0					
ANR	2869108	ArrayIndexing	sys -> audio_shuffle [ i % half_ch ]		2868703	0					
ANR	2869109	PtrMemberAccess	sys -> audio_shuffle		2868703	0					
ANR	2869110	Identifier	sys		2868703	0					
ANR	2869111	Identifier	audio_shuffle		2868703	1					
ANR	2869112	MultiplicativeExpression	i % half_ch		2868703	1		%			
ANR	2869113	Identifier	i		2868703	0					
ANR	2869114	Identifier	half_ch		2868703	1					
ANR	2869115	Identifier	j		2868703	1					
ANR	2869116	MultiplicativeExpression	( d - 8 ) / 3 * sys -> audio_stride		2868703	1		/			
ANR	2869117	AdditiveExpression	d - 8		2868703	0		-			
ANR	2869118	Identifier	d		2868703	0					
ANR	2869119	PrimaryExpression	8		2868703	1					
ANR	2869120	MultiplicativeExpression	3 * sys -> audio_stride		2868703	1		*			
ANR	2869121	PrimaryExpression	3		2868703	0					
ANR	2869122	PtrMemberAccess	sys -> audio_stride		2868703	1					
ANR	2869123	Identifier	sys		2868703	0					
ANR	2869124	Identifier	audio_stride		2868703	1					
ANR	2869125	IfStatement	if ( of * 2 >= size )		2868703	5					
ANR	2869126	Condition	of * 2 >= size	121:28:2683:2694	2868703	0	True				
ANR	2869127	RelationalExpression	of * 2 >= size		2868703	0		>=			
ANR	2869128	MultiplicativeExpression	of * 2		2868703	0		*			
ANR	2869129	Identifier	of		2868703	0					
ANR	2869130	PrimaryExpression	2		2868703	1					
ANR	2869131	Identifier	size		2868703	1					
ANR	2869132	ContinueStatement	continue ;	123:28:2726:2734	2868703	1	True				
ANR	2869133	ExpressionStatement	pcm [ of * 2 ] = lc & 0xff	127:24:2763:2786	2868703	6	True				
ANR	2869134	AssignmentExpression	pcm [ of * 2 ] = lc & 0xff		2868703	0		=			
ANR	2869135	ArrayIndexing	pcm [ of * 2 ]		2868703	0					
ANR	2869136	Identifier	pcm		2868703	0					
ANR	2869137	MultiplicativeExpression	of * 2		2868703	1		*			
ANR	2869138	Identifier	of		2868703	0					
ANR	2869139	PrimaryExpression	2		2868703	1					
ANR	2869140	BitAndExpression	lc & 0xff		2868703	1		&			
ANR	2869141	Identifier	lc		2868703	0					
ANR	2869142	PrimaryExpression	0xff		2868703	1					
ANR	2869143	ExpressionStatement	pcm [ of * 2 + 1 ] = lc >> 8	129:24:2846:2867	2868703	7	True				
ANR	2869144	AssignmentExpression	pcm [ of * 2 + 1 ] = lc >> 8		2868703	0		=			
ANR	2869145	ArrayIndexing	pcm [ of * 2 + 1 ]		2868703	0					
ANR	2869146	Identifier	pcm		2868703	0					
ANR	2869147	AdditiveExpression	of * 2 + 1		2868703	1		+			
ANR	2869148	MultiplicativeExpression	of * 2		2868703	0		*			
ANR	2869149	Identifier	of		2868703	0					
ANR	2869150	PrimaryExpression	2		2868703	1					
ANR	2869151	PrimaryExpression	1		2868703	1					
ANR	2869152	ShiftExpression	lc >> 8		2868703	1		>>			
ANR	2869153	Identifier	lc		2868703	0					
ANR	2869154	PrimaryExpression	8		2868703	1					
ANR	2869155	ExpressionStatement	of = sys -> audio_shuffle [ i % half_ch + half_ch ] [ j ] + ( d - 8 ) / 3 * sys -> audio_stride	131:24:2934:3042	2868703	8	True				
ANR	2869156	AssignmentExpression	of = sys -> audio_shuffle [ i % half_ch + half_ch ] [ j ] + ( d - 8 ) / 3 * sys -> audio_stride		2868703	0		=			
ANR	2869157	Identifier	of		2868703	0					
ANR	2869158	AdditiveExpression	sys -> audio_shuffle [ i % half_ch + half_ch ] [ j ] + ( d - 8 ) / 3 * sys -> audio_stride		2868703	1		+			
ANR	2869159	ArrayIndexing	sys -> audio_shuffle [ i % half_ch + half_ch ] [ j ]		2868703	0					
ANR	2869160	ArrayIndexing	sys -> audio_shuffle [ i % half_ch + half_ch ]		2868703	0					
ANR	2869161	PtrMemberAccess	sys -> audio_shuffle		2868703	0					
ANR	2869162	Identifier	sys		2868703	0					
ANR	2869163	Identifier	audio_shuffle		2868703	1					
ANR	2869164	AdditiveExpression	i % half_ch + half_ch		2868703	1		+			
ANR	2869165	MultiplicativeExpression	i % half_ch		2868703	0		%			
ANR	2869166	Identifier	i		2868703	0					
ANR	2869167	Identifier	half_ch		2868703	1					
ANR	2869168	Identifier	half_ch		2868703	1					
ANR	2869169	Identifier	j		2868703	1					
ANR	2869170	MultiplicativeExpression	( d - 8 ) / 3 * sys -> audio_stride		2868703	1		/			
ANR	2869171	AdditiveExpression	d - 8		2868703	0		-			
ANR	2869172	Identifier	d		2868703	0					
ANR	2869173	PrimaryExpression	8		2868703	1					
ANR	2869174	MultiplicativeExpression	3 * sys -> audio_stride		2868703	1		*			
ANR	2869175	PrimaryExpression	3		2868703	0					
ANR	2869176	PtrMemberAccess	sys -> audio_stride		2868703	1					
ANR	2869177	Identifier	sys		2868703	0					
ANR	2869178	Identifier	audio_stride		2868703	1					
ANR	2869179	ExpressionStatement	pcm [ of * 2 ] = rc & 0xff	135:24:3069:3092	2868703	9	True				
ANR	2869180	AssignmentExpression	pcm [ of * 2 ] = rc & 0xff		2868703	0		=			
ANR	2869181	ArrayIndexing	pcm [ of * 2 ]		2868703	0					
ANR	2869182	Identifier	pcm		2868703	0					
ANR	2869183	MultiplicativeExpression	of * 2		2868703	1		*			
ANR	2869184	Identifier	of		2868703	0					
ANR	2869185	PrimaryExpression	2		2868703	1					
ANR	2869186	BitAndExpression	rc & 0xff		2868703	1		&			
ANR	2869187	Identifier	rc		2868703	0					
ANR	2869188	PrimaryExpression	0xff		2868703	1					
ANR	2869189	ExpressionStatement	pcm [ of * 2 + 1 ] = rc >> 8	137:24:3152:3173	2868703	10	True				
ANR	2869190	AssignmentExpression	pcm [ of * 2 + 1 ] = rc >> 8		2868703	0		=			
ANR	2869191	ArrayIndexing	pcm [ of * 2 + 1 ]		2868703	0					
ANR	2869192	Identifier	pcm		2868703	0					
ANR	2869193	AdditiveExpression	of * 2 + 1		2868703	1		+			
ANR	2869194	MultiplicativeExpression	of * 2		2868703	0		*			
ANR	2869195	Identifier	of		2868703	0					
ANR	2869196	PrimaryExpression	2		2868703	1					
ANR	2869197	PrimaryExpression	1		2868703	1					
ANR	2869198	ShiftExpression	rc >> 8		2868703	1		>>			
ANR	2869199	Identifier	rc		2868703	0					
ANR	2869200	PrimaryExpression	8		2868703	1					
ANR	2869201	ExpressionStatement	++ d	139:24:3240:3243	2868703	11	True				
ANR	2869202	UnaryExpression	++ d		2868703	0					
ANR	2869203	IncDec	++		2868703	0					
ANR	2869204	Identifier	d		2868703	1					
ANR	2869205	ExpressionStatement	frame += 16 * 80	147:16:3306:3322	2868703	1	True				
ANR	2869206	AssignmentExpression	frame += 16 * 80		2868703	0		+=			
ANR	2869207	Identifier	frame		2868703	0					
ANR	2869208	MultiplicativeExpression	16 * 80		2868703	1		*			
ANR	2869209	PrimaryExpression	16		2868703	0					
ANR	2869210	PrimaryExpression	80		2868703	1					
ANR	2869211	ExpressionStatement	pcm = ppcm [ ipcm ++ ]	157:8:3456:3474	2868703	1	True				
ANR	2869212	AssignmentExpression	pcm = ppcm [ ipcm ++ ]		2868703	0		=			
ANR	2869213	Identifier	pcm		2868703	0					
ANR	2869214	ArrayIndexing	ppcm [ ipcm ++ ]		2868703	1					
ANR	2869215	Identifier	ppcm		2868703	0					
ANR	2869216	PostIncDecOperationExpression	ipcm ++		2868703	1					
ANR	2869217	Identifier	ipcm		2868703	0					
ANR	2869218	IncDec	++		2868703	1					
ANR	2869219	IfStatement	if ( ! pcm )		2868703	2					
ANR	2869220	Condition	! pcm	159:12:3489:3492	2868703	0	True				
ANR	2869221	UnaryOperationExpression	! pcm		2868703	0					
ANR	2869222	UnaryOperator	!		2868703	0					
ANR	2869223	Identifier	pcm		2868703	1					
ANR	2869224	BreakStatement	break ;	161:12:3508:3513	2868703	1	True				
ANR	2869225	ReturnStatement	return size ;	167:4:3529:3540	2868703	15	True				
ANR	2869226	Identifier	size		2868703	0					
ANR	2869227	ReturnType	static int		2868703	1					
ANR	2869228	Identifier	dv_extract_audio		2868703	2					
ANR	2869229	ParameterList	"uint8_t * frame , uint8_t * ppcm [ 4 ] , const DVprofile * sys"		2868703	3					
ANR	2869230	Parameter	uint8_t * frame	1:28:28:41	2868703	0	True				
ANR	2869231	ParameterType	uint8_t *		2868703	0					
ANR	2869232	Identifier	frame		2868703	1					
ANR	2869233	Parameter	uint8_t * ppcm [ 4 ]	1:44:44:59	2868703	1	True				
ANR	2869234	ParameterType	uint8_t * [ 4 ]		2868703	0					
ANR	2869235	Identifier	ppcm		2868703	1					
ANR	2869236	Parameter	const DVprofile * sys	3:28:91:110	2868703	2	True				
ANR	2869237	ParameterType	const DVprofile *		2868703	0					
ANR	2869238	Identifier	sys		2868703	1					
ANR	2869239	CFGEntryNode	ENTRY		2868703		True				
ANR	2869240	CFGExitNode	EXIT		2868703		True				
ANR	2869241	Symbol	* ppcm		2868703						
ANR	2869242	Symbol	* frame		2868703						
ANR	2869243	Symbol	* pcm		2868703						
ANR	2869244	Symbol	* * half_ch		2868703						
ANR	2869245	Symbol	freq		2868703						
ANR	2869246	Symbol	* * * sys		2868703						
ANR	2869247	Symbol	sys		2868703						
ANR	2869248	Symbol	* * sys -> audio_shuffle		2868703						
ANR	2869249	Symbol	* sys -> audio_shuffle		2868703						
ANR	2869250	Symbol	of		2868703						
ANR	2869251	Symbol	* as_pack		2868703						
ANR	2869252	Symbol	sys -> audio_shuffle		2868703						
ANR	2869253	Symbol	smpls		2868703						
ANR	2869254	Symbol	dv_audio_12to16		2868703						
ANR	2869255	Symbol	pcm		2868703						
ANR	2869256	Symbol	ppcm		2868703						
ANR	2869257	Symbol	half_ch		2868703						
ANR	2869258	Symbol	* of		2868703						
ANR	2869259	Symbol	ipcm		2868703						
ANR	2869260	Symbol	sys -> audio_min_samples		2868703						
ANR	2869261	Symbol	* * sys		2868703						
ANR	2869262	Symbol	* * i		2868703						
ANR	2869263	Symbol	d		2868703						
ANR	2869264	Symbol	* sys -> audio_min_samples		2868703						
ANR	2869265	Symbol	i		2868703						
ANR	2869266	Symbol	j		2868703						
ANR	2869267	Symbol	quant		2868703						
ANR	2869268	Symbol	sys -> difseg_size		2868703						
ANR	2869269	Symbol	as_pack		2868703						
ANR	2869270	Symbol	sys -> height		2868703						
ANR	2869271	Symbol	sys -> audio_stride		2868703						
ANR	2869272	Symbol	* d		2868703						
ANR	2869273	Symbol	sys -> n_difchan		2868703						
ANR	2869274	Symbol	* freq		2868703						
ANR	2869275	Symbol	rc		2868703						
ANR	2869276	Symbol	dv_extract_pack		2868703						
ANR	2869277	Symbol	* i		2868703						
ANR	2869278	Symbol	size		2868703						
ANR	2869279	Symbol	* j		2868703						
ANR	2869280	Symbol	* half_ch		2868703						
ANR	2869281	Symbol	lc		2868703						
ANR	2869282	Symbol	* sys		2868703						
ANR	2869283	Symbol	dv_audio_source		2868703						
ANR	2869284	Symbol	chan		2868703						
ANR	2869285	Symbol	frame		2868703						
