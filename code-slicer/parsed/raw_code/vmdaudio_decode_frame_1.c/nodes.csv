command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	9160748	File	/home/p4ultr4n/workplace/ReVeal/raw_code/vmdaudio_decode_frame_1.c								
ANR	9160749	Function	vmdaudio_decode_frame	1:0:0:2986							
ANR	9160750	FunctionDef	"vmdaudio_decode_frame (AVCodecContext * avctx , void * data , int * got_frame_ptr , AVPacket * avpkt)"		9160749	0					
ANR	9160751	CompoundStatement		5:0:140:2986	9160749	0					
ANR	9160752	IdentifierDeclStatement	AVFrame * frame = data ;	7:4:147:172	9160749	0	True				
ANR	9160753	IdentifierDecl	* frame = data		9160749	0					
ANR	9160754	IdentifierDeclType	AVFrame *		9160749	0					
ANR	9160755	Identifier	frame		9160749	1					
ANR	9160756	AssignmentExpression	* frame = data		9160749	2		=			
ANR	9160757	Identifier	data		9160749	0					
ANR	9160758	Identifier	data		9160749	1					
ANR	9160759	IdentifierDeclStatement	const uint8_t * buf = avpkt -> data ;	9:4:179:211	9160749	1	True				
ANR	9160760	IdentifierDecl	* buf = avpkt -> data		9160749	0					
ANR	9160761	IdentifierDeclType	const uint8_t *		9160749	0					
ANR	9160762	Identifier	buf		9160749	1					
ANR	9160763	AssignmentExpression	* buf = avpkt -> data		9160749	2		=			
ANR	9160764	Identifier	buf		9160749	0					
ANR	9160765	PtrMemberAccess	avpkt -> data		9160749	1					
ANR	9160766	Identifier	avpkt		9160749	0					
ANR	9160767	Identifier	data		9160749	1					
ANR	9160768	IdentifierDeclStatement	const uint8_t * buf_end ;	11:4:218:240	9160749	2	True				
ANR	9160769	IdentifierDecl	* buf_end		9160749	0					
ANR	9160770	IdentifierDeclType	const uint8_t *		9160749	0					
ANR	9160771	Identifier	buf_end		9160749	1					
ANR	9160772	IdentifierDeclStatement	int buf_size = avpkt -> size ;	13:4:247:273	9160749	3	True				
ANR	9160773	IdentifierDecl	buf_size = avpkt -> size		9160749	0					
ANR	9160774	IdentifierDeclType	int		9160749	0					
ANR	9160775	Identifier	buf_size		9160749	1					
ANR	9160776	AssignmentExpression	buf_size = avpkt -> size		9160749	2		=			
ANR	9160777	Identifier	buf_size		9160749	0					
ANR	9160778	PtrMemberAccess	avpkt -> size		9160749	1					
ANR	9160779	Identifier	avpkt		9160749	0					
ANR	9160780	Identifier	size		9160749	1					
ANR	9160781	IdentifierDeclStatement	VmdAudioContext * s = avctx -> priv_data ;	15:4:280:317	9160749	4	True				
ANR	9160782	IdentifierDecl	* s = avctx -> priv_data		9160749	0					
ANR	9160783	IdentifierDeclType	VmdAudioContext *		9160749	0					
ANR	9160784	Identifier	s		9160749	1					
ANR	9160785	AssignmentExpression	* s = avctx -> priv_data		9160749	2		=			
ANR	9160786	Identifier	s		9160749	0					
ANR	9160787	PtrMemberAccess	avctx -> priv_data		9160749	1					
ANR	9160788	Identifier	avctx		9160749	0					
ANR	9160789	Identifier	priv_data		9160749	1					
ANR	9160790	IdentifierDeclStatement	"int block_type , silent_chunks , audio_chunks ;"	17:4:324:367	9160749	5	True				
ANR	9160791	IdentifierDecl	block_type		9160749	0					
ANR	9160792	IdentifierDeclType	int		9160749	0					
ANR	9160793	Identifier	block_type		9160749	1					
ANR	9160794	IdentifierDecl	silent_chunks		9160749	1					
ANR	9160795	IdentifierDeclType	int		9160749	0					
ANR	9160796	Identifier	silent_chunks		9160749	1					
ANR	9160797	IdentifierDecl	audio_chunks		9160749	2					
ANR	9160798	IdentifierDeclType	int		9160749	0					
ANR	9160799	Identifier	audio_chunks		9160749	1					
ANR	9160800	IdentifierDeclStatement	int ret ;	19:4:374:381	9160749	6	True				
ANR	9160801	IdentifierDecl	ret		9160749	0					
ANR	9160802	IdentifierDeclType	int		9160749	0					
ANR	9160803	Identifier	ret		9160749	1					
ANR	9160804	IdentifierDeclStatement	uint8_t * output_samples_u8 ;	21:4:388:414	9160749	7	True				
ANR	9160805	IdentifierDecl	* output_samples_u8		9160749	0					
ANR	9160806	IdentifierDeclType	uint8_t *		9160749	0					
ANR	9160807	Identifier	output_samples_u8		9160749	1					
ANR	9160808	IdentifierDeclStatement	int16_t * output_samples_s16 ;	23:4:421:448	9160749	8	True				
ANR	9160809	IdentifierDecl	* output_samples_s16		9160749	0					
ANR	9160810	IdentifierDeclType	int16_t *		9160749	0					
ANR	9160811	Identifier	output_samples_s16		9160749	1					
ANR	9160812	IfStatement	if ( buf_size < 16 )		9160749	9					
ANR	9160813	Condition	buf_size < 16	27:8:461:473	9160749	0	True				
ANR	9160814	RelationalExpression	buf_size < 16		9160749	0		<			
ANR	9160815	Identifier	buf_size		9160749	0					
ANR	9160816	PrimaryExpression	16		9160749	1					
ANR	9160817	CompoundStatement		23:23:335:335	9160749	1					
ANR	9160818	ExpressionStatement	"av_log ( avctx , AV_LOG_WARNING , ""skipping small junk packet\\n"" )"	29:8:487:548	9160749	0	True				
ANR	9160819	CallExpression	"av_log ( avctx , AV_LOG_WARNING , ""skipping small junk packet\\n"" )"		9160749	0					
ANR	9160820	Callee	av_log		9160749	0					
ANR	9160821	Identifier	av_log		9160749	0					
ANR	9160822	ArgumentList	avctx		9160749	1					
ANR	9160823	Argument	avctx		9160749	0					
ANR	9160824	Identifier	avctx		9160749	0					
ANR	9160825	Argument	AV_LOG_WARNING		9160749	1					
ANR	9160826	Identifier	AV_LOG_WARNING		9160749	0					
ANR	9160827	Argument	"""skipping small junk packet\\n"""		9160749	2					
ANR	9160828	PrimaryExpression	"""skipping small junk packet\\n"""		9160749	0					
ANR	9160829	ExpressionStatement	* got_frame_ptr = 0	31:8:559:577	9160749	1	True				
ANR	9160830	AssignmentExpression	* got_frame_ptr = 0		9160749	0		=			
ANR	9160831	UnaryOperationExpression	* got_frame_ptr		9160749	0					
ANR	9160832	UnaryOperator	*		9160749	0					
ANR	9160833	Identifier	got_frame_ptr		9160749	1					
ANR	9160834	PrimaryExpression	0		9160749	1					
ANR	9160835	ReturnStatement	return buf_size ;	33:8:588:603	9160749	2	True				
ANR	9160836	Identifier	buf_size		9160749	0					
ANR	9160837	ExpressionStatement	block_type = buf [ 6 ]	39:4:619:638	9160749	10	True				
ANR	9160838	AssignmentExpression	block_type = buf [ 6 ]		9160749	0		=			
ANR	9160839	Identifier	block_type		9160749	0					
ANR	9160840	ArrayIndexing	buf [ 6 ]		9160749	1					
ANR	9160841	Identifier	buf		9160749	0					
ANR	9160842	PrimaryExpression	6		9160749	1					
ANR	9160843	IfStatement	if ( block_type < BLOCK_TYPE_AUDIO || block_type > BLOCK_TYPE_SILENCE )		9160749	11					
ANR	9160844	Condition	block_type < BLOCK_TYPE_AUDIO || block_type > BLOCK_TYPE_SILENCE	41:8:649:712	9160749	0	True				
ANR	9160845	OrExpression	block_type < BLOCK_TYPE_AUDIO || block_type > BLOCK_TYPE_SILENCE		9160749	0		||			
ANR	9160846	RelationalExpression	block_type < BLOCK_TYPE_AUDIO		9160749	0		<			
ANR	9160847	Identifier	block_type		9160749	0					
ANR	9160848	Identifier	BLOCK_TYPE_AUDIO		9160749	1					
ANR	9160849	RelationalExpression	block_type > BLOCK_TYPE_SILENCE		9160749	1		>			
ANR	9160850	Identifier	block_type		9160749	0					
ANR	9160851	Identifier	BLOCK_TYPE_SILENCE		9160749	1					
ANR	9160852	CompoundStatement		37:74:574:574	9160749	1					
ANR	9160853	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""unknown block type: %d\\n"" , block_type )"	43:8:726:793	9160749	0	True				
ANR	9160854	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""unknown block type: %d\\n"" , block_type )"		9160749	0					
ANR	9160855	Callee	av_log		9160749	0					
ANR	9160856	Identifier	av_log		9160749	0					
ANR	9160857	ArgumentList	avctx		9160749	1					
ANR	9160858	Argument	avctx		9160749	0					
ANR	9160859	Identifier	avctx		9160749	0					
ANR	9160860	Argument	AV_LOG_ERROR		9160749	1					
ANR	9160861	Identifier	AV_LOG_ERROR		9160749	0					
ANR	9160862	Argument	"""unknown block type: %d\\n"""		9160749	2					
ANR	9160863	PrimaryExpression	"""unknown block type: %d\\n"""		9160749	0					
ANR	9160864	Argument	block_type		9160749	3					
ANR	9160865	Identifier	block_type		9160749	0					
ANR	9160866	ReturnStatement	return AVERROR ( EINVAL ) ;	45:8:804:826	9160749	1	True				
ANR	9160867	CallExpression	AVERROR ( EINVAL )		9160749	0					
ANR	9160868	Callee	AVERROR		9160749	0					
ANR	9160869	Identifier	AVERROR		9160749	0					
ANR	9160870	ArgumentList	EINVAL		9160749	1					
ANR	9160871	Argument	EINVAL		9160749	0					
ANR	9160872	Identifier	EINVAL		9160749	0					
ANR	9160873	ExpressionStatement	buf += 16	49:4:840:854	9160749	12	True				
ANR	9160874	AssignmentExpression	buf += 16		9160749	0		+=			
ANR	9160875	Identifier	buf		9160749	0					
ANR	9160876	PrimaryExpression	16		9160749	1					
ANR	9160877	ExpressionStatement	buf_size -= 16	51:4:861:875	9160749	13	True				
ANR	9160878	AssignmentExpression	buf_size -= 16		9160749	0		-=			
ANR	9160879	Identifier	buf_size		9160749	0					
ANR	9160880	PrimaryExpression	16		9160749	1					
ANR	9160881	ExpressionStatement	silent_chunks = 0	57:4:923:940	9160749	14	True				
ANR	9160882	AssignmentExpression	silent_chunks = 0		9160749	0		=			
ANR	9160883	Identifier	silent_chunks		9160749	0					
ANR	9160884	PrimaryExpression	0		9160749	1					
ANR	9160885	IfStatement	if ( block_type == BLOCK_TYPE_INITIAL )		9160749	15					
ANR	9160886	Condition	block_type == BLOCK_TYPE_INITIAL	59:8:951:982	9160749	0	True				
ANR	9160887	EqualityExpression	block_type == BLOCK_TYPE_INITIAL		9160749	0		==			
ANR	9160888	Identifier	block_type		9160749	0					
ANR	9160889	Identifier	BLOCK_TYPE_INITIAL		9160749	1					
ANR	9160890	CompoundStatement		57:8:855:869	9160749	1					
ANR	9160891	IdentifierDeclStatement	uint32_t flags ;	61:8:996:1010	9160749	0	True				
ANR	9160892	IdentifierDecl	flags		9160749	0					
ANR	9160893	IdentifierDeclType	uint32_t		9160749	0					
ANR	9160894	Identifier	flags		9160749	1					
ANR	9160895	IfStatement	if ( buf_size < 4 )		9160749	1					
ANR	9160896	Condition	buf_size < 4	63:12:1025:1036	9160749	0	True				
ANR	9160897	RelationalExpression	buf_size < 4		9160749	0		<			
ANR	9160898	Identifier	buf_size		9160749	0					
ANR	9160899	PrimaryExpression	4		9160749	1					
ANR	9160900	CompoundStatement		59:26:898:898	9160749	1					
ANR	9160901	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""packet is too small\\n"" )"	65:12:1054:1106	9160749	0	True				
ANR	9160902	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""packet is too small\\n"" )"		9160749	0					
ANR	9160903	Callee	av_log		9160749	0					
ANR	9160904	Identifier	av_log		9160749	0					
ANR	9160905	ArgumentList	avctx		9160749	1					
ANR	9160906	Argument	avctx		9160749	0					
ANR	9160907	Identifier	avctx		9160749	0					
ANR	9160908	Argument	AV_LOG_ERROR		9160749	1					
ANR	9160909	Identifier	AV_LOG_ERROR		9160749	0					
ANR	9160910	Argument	"""packet is too small\\n"""		9160749	2					
ANR	9160911	PrimaryExpression	"""packet is too small\\n"""		9160749	0					
ANR	9160912	ReturnStatement	return AVERROR ( EINVAL ) ;	67:12:1121:1143	9160749	1	True				
ANR	9160913	CallExpression	AVERROR ( EINVAL )		9160749	0					
ANR	9160914	Callee	AVERROR		9160749	0					
ANR	9160915	Identifier	AVERROR		9160749	0					
ANR	9160916	ArgumentList	EINVAL		9160749	1					
ANR	9160917	Argument	EINVAL		9160749	0					
ANR	9160918	Identifier	EINVAL		9160749	0					
ANR	9160919	ExpressionStatement	flags = AV_RB32 ( buf )	71:8:1165:1193	9160749	2	True				
ANR	9160920	AssignmentExpression	flags = AV_RB32 ( buf )		9160749	0		=			
ANR	9160921	Identifier	flags		9160749	0					
ANR	9160922	CallExpression	AV_RB32 ( buf )		9160749	1					
ANR	9160923	Callee	AV_RB32		9160749	0					
ANR	9160924	Identifier	AV_RB32		9160749	0					
ANR	9160925	ArgumentList	buf		9160749	1					
ANR	9160926	Argument	buf		9160749	0					
ANR	9160927	Identifier	buf		9160749	0					
ANR	9160928	ExpressionStatement	silent_chunks = av_popcount ( flags )	73:8:1204:1238	9160749	3	True				
ANR	9160929	AssignmentExpression	silent_chunks = av_popcount ( flags )		9160749	0		=			
ANR	9160930	Identifier	silent_chunks		9160749	0					
ANR	9160931	CallExpression	av_popcount ( flags )		9160749	1					
ANR	9160932	Callee	av_popcount		9160749	0					
ANR	9160933	Identifier	av_popcount		9160749	0					
ANR	9160934	ArgumentList	flags		9160749	1					
ANR	9160935	Argument	flags		9160749	0					
ANR	9160936	Identifier	flags		9160749	0					
ANR	9160937	ExpressionStatement	buf += 4	75:8:1249:1262	9160749	4	True				
ANR	9160938	AssignmentExpression	buf += 4		9160749	0		+=			
ANR	9160939	Identifier	buf		9160749	0					
ANR	9160940	PrimaryExpression	4		9160749	1					
ANR	9160941	ExpressionStatement	buf_size -= 4	77:8:1273:1286	9160749	5	True				
ANR	9160942	AssignmentExpression	buf_size -= 4		9160749	0		-=			
ANR	9160943	Identifier	buf_size		9160749	0					
ANR	9160944	PrimaryExpression	4		9160749	1					
ANR	9160945	ElseStatement	else		9160749	0					
ANR	9160946	IfStatement	if ( block_type == BLOCK_TYPE_SILENCE )		9160749	0					
ANR	9160947	Condition	block_type == BLOCK_TYPE_SILENCE	79:15:1304:1335	9160749	0	True				
ANR	9160948	EqualityExpression	block_type == BLOCK_TYPE_SILENCE		9160749	0		==			
ANR	9160949	Identifier	block_type		9160749	0					
ANR	9160950	Identifier	BLOCK_TYPE_SILENCE		9160749	1					
ANR	9160951	CompoundStatement		75:49:1197:1197	9160749	1					
ANR	9160952	ExpressionStatement	silent_chunks = 1	81:8:1349:1366	9160749	0	True				
ANR	9160953	AssignmentExpression	silent_chunks = 1		9160749	0		=			
ANR	9160954	Identifier	silent_chunks		9160749	0					
ANR	9160955	PrimaryExpression	1		9160749	1					
ANR	9160956	ExpressionStatement	buf_size = 0	83:8:1377:1389	9160749	1	True				
ANR	9160957	AssignmentExpression	buf_size = 0		9160749	0		=			
ANR	9160958	Identifier	buf_size		9160749	0					
ANR	9160959	PrimaryExpression	0		9160749	1					
ANR	9160960	ExpressionStatement	audio_chunks = buf_size / s -> chunk_size	91:4:1506:1545	9160749	16	True				
ANR	9160961	AssignmentExpression	audio_chunks = buf_size / s -> chunk_size		9160749	0		=			
ANR	9160962	Identifier	audio_chunks		9160749	0					
ANR	9160963	MultiplicativeExpression	buf_size / s -> chunk_size		9160749	1		/			
ANR	9160964	Identifier	buf_size		9160749	0					
ANR	9160965	PtrMemberAccess	s -> chunk_size		9160749	1					
ANR	9160966	Identifier	s		9160749	0					
ANR	9160967	Identifier	chunk_size		9160749	1					
ANR	9160968	ExpressionStatement	frame -> nb_samples = ( ( silent_chunks + audio_chunks ) * avctx -> block_align ) / avctx -> channels	97:4:1583:1699	9160749	17	True				
ANR	9160969	AssignmentExpression	frame -> nb_samples = ( ( silent_chunks + audio_chunks ) * avctx -> block_align ) / avctx -> channels		9160749	0		=			
ANR	9160970	PtrMemberAccess	frame -> nb_samples		9160749	0					
ANR	9160971	Identifier	frame		9160749	0					
ANR	9160972	Identifier	nb_samples		9160749	1					
ANR	9160973	MultiplicativeExpression	( ( silent_chunks + audio_chunks ) * avctx -> block_align ) / avctx -> channels		9160749	1		/			
ANR	9160974	MultiplicativeExpression	( silent_chunks + audio_chunks ) * avctx -> block_align		9160749	0		*			
ANR	9160975	AdditiveExpression	silent_chunks + audio_chunks		9160749	0		+			
ANR	9160976	Identifier	silent_chunks		9160749	0					
ANR	9160977	Identifier	audio_chunks		9160749	1					
ANR	9160978	PtrMemberAccess	avctx -> block_align		9160749	1					
ANR	9160979	Identifier	avctx		9160749	0					
ANR	9160980	Identifier	block_align		9160749	1					
ANR	9160981	PtrMemberAccess	avctx -> channels		9160749	1					
ANR	9160982	Identifier	avctx		9160749	0					
ANR	9160983	Identifier	channels		9160749	1					
ANR	9160984	IfStatement	"if ( ( ret = ff_get_buffer ( avctx , frame , 0 ) ) < 0 )"		9160749	18					
ANR	9160985	Condition	"( ret = ff_get_buffer ( avctx , frame , 0 ) ) < 0"	101:8:1710:1751	9160749	0	True				
ANR	9160986	RelationalExpression	"( ret = ff_get_buffer ( avctx , frame , 0 ) ) < 0"		9160749	0		<			
ANR	9160987	AssignmentExpression	"ret = ff_get_buffer ( avctx , frame , 0 )"		9160749	0		=			
ANR	9160988	Identifier	ret		9160749	0					
ANR	9160989	CallExpression	"ff_get_buffer ( avctx , frame , 0 )"		9160749	1					
ANR	9160990	Callee	ff_get_buffer		9160749	0					
ANR	9160991	Identifier	ff_get_buffer		9160749	0					
ANR	9160992	ArgumentList	avctx		9160749	1					
ANR	9160993	Argument	avctx		9160749	0					
ANR	9160994	Identifier	avctx		9160749	0					
ANR	9160995	Argument	frame		9160749	1					
ANR	9160996	Identifier	frame		9160749	0					
ANR	9160997	Argument	0		9160749	2					
ANR	9160998	PrimaryExpression	0		9160749	0					
ANR	9160999	PrimaryExpression	0		9160749	1					
ANR	9161000	CompoundStatement		97:52:1613:1613	9160749	1					
ANR	9161001	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""get_buffer() failed\\n"" )"	103:8:1765:1817	9160749	0	True				
ANR	9161002	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""get_buffer() failed\\n"" )"		9160749	0					
ANR	9161003	Callee	av_log		9160749	0					
ANR	9161004	Identifier	av_log		9160749	0					
ANR	9161005	ArgumentList	avctx		9160749	1					
ANR	9161006	Argument	avctx		9160749	0					
ANR	9161007	Identifier	avctx		9160749	0					
ANR	9161008	Argument	AV_LOG_ERROR		9160749	1					
ANR	9161009	Identifier	AV_LOG_ERROR		9160749	0					
ANR	9161010	Argument	"""get_buffer() failed\\n"""		9160749	2					
ANR	9161011	PrimaryExpression	"""get_buffer() failed\\n"""		9160749	0					
ANR	9161012	ReturnStatement	return ret ;	105:8:1828:1838	9160749	1	True				
ANR	9161013	Identifier	ret		9160749	0					
ANR	9161014	ExpressionStatement	output_samples_u8 = frame -> data [ 0 ]	109:4:1852:1898	9160749	19	True				
ANR	9161015	AssignmentExpression	output_samples_u8 = frame -> data [ 0 ]		9160749	0		=			
ANR	9161016	Identifier	output_samples_u8		9160749	0					
ANR	9161017	ArrayIndexing	frame -> data [ 0 ]		9160749	1					
ANR	9161018	PtrMemberAccess	frame -> data		9160749	0					
ANR	9161019	Identifier	frame		9160749	0					
ANR	9161020	Identifier	data		9160749	1					
ANR	9161021	PrimaryExpression	0		9160749	1					
ANR	9161022	ExpressionStatement	output_samples_s16 = ( int16_t * ) frame -> data [ 0 ]	111:4:1905:1951	9160749	20	True				
ANR	9161023	AssignmentExpression	output_samples_s16 = ( int16_t * ) frame -> data [ 0 ]		9160749	0		=			
ANR	9161024	Identifier	output_samples_s16		9160749	0					
ANR	9161025	CastExpression	( int16_t * ) frame -> data [ 0 ]		9160749	1					
ANR	9161026	CastTarget	int16_t *		9160749	0					
ANR	9161027	ArrayIndexing	frame -> data [ 0 ]		9160749	1					
ANR	9161028	PtrMemberAccess	frame -> data		9160749	0					
ANR	9161029	Identifier	frame		9160749	0					
ANR	9161030	Identifier	data		9160749	1					
ANR	9161031	PrimaryExpression	0		9160749	1					
ANR	9161032	IfStatement	if ( silent_chunks > 0 )		9160749	21					
ANR	9161033	Condition	silent_chunks > 0	117:8:1996:2012	9160749	0	True				
ANR	9161034	RelationalExpression	silent_chunks > 0		9160749	0		>			
ANR	9161035	Identifier	silent_chunks		9160749	0					
ANR	9161036	PrimaryExpression	0		9160749	1					
ANR	9161037	CompoundStatement		115:8:1885:1937	9160749	1					
ANR	9161038	IdentifierDeclStatement	int silent_size = avctx -> block_align * silent_chunks ;	119:8:2026:2078	9160749	0	True				
ANR	9161039	IdentifierDecl	silent_size = avctx -> block_align * silent_chunks		9160749	0					
ANR	9161040	IdentifierDeclType	int		9160749	0					
ANR	9161041	Identifier	silent_size		9160749	1					
ANR	9161042	AssignmentExpression	silent_size = avctx -> block_align * silent_chunks		9160749	2		=			
ANR	9161043	Identifier	silent_size		9160749	0					
ANR	9161044	MultiplicativeExpression	avctx -> block_align * silent_chunks		9160749	1		*			
ANR	9161045	PtrMemberAccess	avctx -> block_align		9160749	0					
ANR	9161046	Identifier	avctx		9160749	0					
ANR	9161047	Identifier	block_align		9160749	1					
ANR	9161048	Identifier	silent_chunks		9160749	1					
ANR	9161049	IfStatement	if ( s -> out_bps == 2 )		9160749	1					
ANR	9161050	Condition	s -> out_bps == 2	121:12:2093:2107	9160749	0	True				
ANR	9161051	EqualityExpression	s -> out_bps == 2		9160749	0		==			
ANR	9161052	PtrMemberAccess	s -> out_bps		9160749	0					
ANR	9161053	Identifier	s		9160749	0					
ANR	9161054	Identifier	out_bps		9160749	1					
ANR	9161055	PrimaryExpression	2		9160749	1					
ANR	9161056	CompoundStatement		117:29:1969:1969	9160749	1					
ANR	9161057	ExpressionStatement	"memset ( output_samples_s16 , 0x00 , silent_size * 2 )"	123:12:2125:2174	9160749	0	True				
ANR	9161058	CallExpression	"memset ( output_samples_s16 , 0x00 , silent_size * 2 )"		9160749	0					
ANR	9161059	Callee	memset		9160749	0					
ANR	9161060	Identifier	memset		9160749	0					
ANR	9161061	ArgumentList	output_samples_s16		9160749	1					
ANR	9161062	Argument	output_samples_s16		9160749	0					
ANR	9161063	Identifier	output_samples_s16		9160749	0					
ANR	9161064	Argument	0x00		9160749	1					
ANR	9161065	PrimaryExpression	0x00		9160749	0					
ANR	9161066	Argument	silent_size * 2		9160749	2					
ANR	9161067	MultiplicativeExpression	silent_size * 2		9160749	0		*			
ANR	9161068	Identifier	silent_size		9160749	0					
ANR	9161069	PrimaryExpression	2		9160749	1					
ANR	9161070	ExpressionStatement	output_samples_s16 += silent_size	125:12:2189:2222	9160749	1	True				
ANR	9161071	AssignmentExpression	output_samples_s16 += silent_size		9160749	0		+=			
ANR	9161072	Identifier	output_samples_s16		9160749	0					
ANR	9161073	Identifier	silent_size		9160749	1					
ANR	9161074	ElseStatement	else		9160749	0					
ANR	9161075	CompoundStatement		123:15:2099:2099	9160749	0					
ANR	9161076	ExpressionStatement	"memset ( output_samples_u8 , 0x80 , silent_size )"	129:12:2255:2300	9160749	0	True				
ANR	9161077	CallExpression	"memset ( output_samples_u8 , 0x80 , silent_size )"		9160749	0					
ANR	9161078	Callee	memset		9160749	0					
ANR	9161079	Identifier	memset		9160749	0					
ANR	9161080	ArgumentList	output_samples_u8		9160749	1					
ANR	9161081	Argument	output_samples_u8		9160749	0					
ANR	9161082	Identifier	output_samples_u8		9160749	0					
ANR	9161083	Argument	0x80		9160749	1					
ANR	9161084	PrimaryExpression	0x80		9160749	0					
ANR	9161085	Argument	silent_size		9160749	2					
ANR	9161086	Identifier	silent_size		9160749	0					
ANR	9161087	ExpressionStatement	output_samples_u8 += silent_size	131:12:2315:2347	9160749	1	True				
ANR	9161088	AssignmentExpression	output_samples_u8 += silent_size		9160749	0		+=			
ANR	9161089	Identifier	output_samples_u8		9160749	0					
ANR	9161090	Identifier	silent_size		9160749	1					
ANR	9161091	IfStatement	if ( audio_chunks > 0 )		9160749	22					
ANR	9161092	Condition	audio_chunks > 0	141:8:2409:2424	9160749	0	True				
ANR	9161093	RelationalExpression	audio_chunks > 0		9160749	0		>			
ANR	9161094	Identifier	audio_chunks		9160749	0					
ANR	9161095	PrimaryExpression	0		9160749	1					
ANR	9161096	CompoundStatement		137:26:2286:2286	9160749	1					
ANR	9161097	ExpressionStatement	buf_end = buf + buf_size	143:8:2438:2462	9160749	0	True				
ANR	9161098	AssignmentExpression	buf_end = buf + buf_size		9160749	0		=			
ANR	9161099	Identifier	buf_end		9160749	0					
ANR	9161100	AdditiveExpression	buf + buf_size		9160749	1		+			
ANR	9161101	Identifier	buf		9160749	0					
ANR	9161102	Identifier	buf_size		9160749	1					
ANR	9161103	WhileStatement	while ( buf < buf_end )		9160749	1					
ANR	9161104	Condition	buf < buf_end	145:15:2480:2492	9160749	0	True				
ANR	9161105	RelationalExpression	buf < buf_end		9160749	0		<			
ANR	9161106	Identifier	buf		9160749	0					
ANR	9161107	Identifier	buf_end		9160749	1					
ANR	9161108	CompoundStatement		141:30:2354:2354	9160749	1					
ANR	9161109	IfStatement	if ( s -> out_bps == 2 )		9160749	0					
ANR	9161110	Condition	s -> out_bps == 2	147:16:2514:2528	9160749	0	True				
ANR	9161111	EqualityExpression	s -> out_bps == 2		9160749	0		==			
ANR	9161112	PtrMemberAccess	s -> out_bps		9160749	0					
ANR	9161113	Identifier	s		9160749	0					
ANR	9161114	Identifier	out_bps		9160749	1					
ANR	9161115	PrimaryExpression	2		9160749	1					
ANR	9161116	CompoundStatement		143:33:2390:2390	9160749	1					
ANR	9161117	ExpressionStatement	"decode_audio_s16 ( output_samples_s16 , buf , s -> chunk_size , avctx -> channels )"	149:16:2550:2657	9160749	0	True				
ANR	9161118	CallExpression	"decode_audio_s16 ( output_samples_s16 , buf , s -> chunk_size , avctx -> channels )"		9160749	0					
ANR	9161119	Callee	decode_audio_s16		9160749	0					
ANR	9161120	Identifier	decode_audio_s16		9160749	0					
ANR	9161121	ArgumentList	output_samples_s16		9160749	1					
ANR	9161122	Argument	output_samples_s16		9160749	0					
ANR	9161123	Identifier	output_samples_s16		9160749	0					
ANR	9161124	Argument	buf		9160749	1					
ANR	9161125	Identifier	buf		9160749	0					
ANR	9161126	Argument	s -> chunk_size		9160749	2					
ANR	9161127	PtrMemberAccess	s -> chunk_size		9160749	0					
ANR	9161128	Identifier	s		9160749	0					
ANR	9161129	Identifier	chunk_size		9160749	1					
ANR	9161130	Argument	avctx -> channels		9160749	3					
ANR	9161131	PtrMemberAccess	avctx -> channels		9160749	0					
ANR	9161132	Identifier	avctx		9160749	0					
ANR	9161133	Identifier	channels		9160749	1					
ANR	9161134	ExpressionStatement	output_samples_s16 += avctx -> block_align	153:16:2676:2716	9160749	1	True				
ANR	9161135	AssignmentExpression	output_samples_s16 += avctx -> block_align		9160749	0		+=			
ANR	9161136	Identifier	output_samples_s16		9160749	0					
ANR	9161137	PtrMemberAccess	avctx -> block_align		9160749	1					
ANR	9161138	Identifier	avctx		9160749	0					
ANR	9161139	Identifier	block_align		9160749	1					
ANR	9161140	ElseStatement	else		9160749	0					
ANR	9161141	CompoundStatement		151:19:2597:2597	9160749	0					
ANR	9161142	ExpressionStatement	"memcpy ( output_samples_u8 , buf , s -> chunk_size )"	157:16:2757:2802	9160749	0	True				
ANR	9161143	CallExpression	"memcpy ( output_samples_u8 , buf , s -> chunk_size )"		9160749	0					
ANR	9161144	Callee	memcpy		9160749	0					
ANR	9161145	Identifier	memcpy		9160749	0					
ANR	9161146	ArgumentList	output_samples_u8		9160749	1					
ANR	9161147	Argument	output_samples_u8		9160749	0					
ANR	9161148	Identifier	output_samples_u8		9160749	0					
ANR	9161149	Argument	buf		9160749	1					
ANR	9161150	Identifier	buf		9160749	0					
ANR	9161151	Argument	s -> chunk_size		9160749	2					
ANR	9161152	PtrMemberAccess	s -> chunk_size		9160749	0					
ANR	9161153	Identifier	s		9160749	0					
ANR	9161154	Identifier	chunk_size		9160749	1					
ANR	9161155	ExpressionStatement	output_samples_u8 += avctx -> block_align	159:16:2821:2861	9160749	1	True				
ANR	9161156	AssignmentExpression	output_samples_u8 += avctx -> block_align		9160749	0		+=			
ANR	9161157	Identifier	output_samples_u8		9160749	0					
ANR	9161158	PtrMemberAccess	avctx -> block_align		9160749	1					
ANR	9161159	Identifier	avctx		9160749	0					
ANR	9161160	Identifier	block_align		9160749	1					
ANR	9161161	ExpressionStatement	buf += s -> chunk_size	163:12:2891:2911	9160749	1	True				
ANR	9161162	AssignmentExpression	buf += s -> chunk_size		9160749	0		+=			
ANR	9161163	Identifier	buf		9160749	0					
ANR	9161164	PtrMemberAccess	s -> chunk_size		9160749	1					
ANR	9161165	Identifier	s		9160749	0					
ANR	9161166	Identifier	chunk_size		9160749	1					
ANR	9161167	ExpressionStatement	* got_frame_ptr = 1	171:4:2938:2956	9160749	23	True				
ANR	9161168	AssignmentExpression	* got_frame_ptr = 1		9160749	0		=			
ANR	9161169	UnaryOperationExpression	* got_frame_ptr		9160749	0					
ANR	9161170	UnaryOperator	*		9160749	0					
ANR	9161171	Identifier	got_frame_ptr		9160749	1					
ANR	9161172	PrimaryExpression	1		9160749	1					
ANR	9161173	ReturnStatement	return avpkt -> size ;	175:4:2965:2983	9160749	24	True				
ANR	9161174	PtrMemberAccess	avpkt -> size		9160749	0					
ANR	9161175	Identifier	avpkt		9160749	0					
ANR	9161176	Identifier	size		9160749	1					
ANR	9161177	ReturnType	static int		9160749	1					
ANR	9161178	Identifier	vmdaudio_decode_frame		9160749	2					
ANR	9161179	ParameterList	"AVCodecContext * avctx , void * data , int * got_frame_ptr , AVPacket * avpkt"		9160749	3					
ANR	9161180	Parameter	AVCodecContext * avctx	1:33:33:53	9160749	0	True				
ANR	9161181	ParameterType	AVCodecContext *		9160749	0					
ANR	9161182	Identifier	avctx		9160749	1					
ANR	9161183	Parameter	void * data	1:56:56:65	9160749	1	True				
ANR	9161184	ParameterType	void *		9160749	0					
ANR	9161185	Identifier	data		9160749	1					
ANR	9161186	Parameter	int * got_frame_ptr	3:33:102:119	9160749	2	True				
ANR	9161187	ParameterType	int *		9160749	0					
ANR	9161188	Identifier	got_frame_ptr		9160749	1					
ANR	9161189	Parameter	AVPacket * avpkt	3:53:122:136	9160749	3	True				
ANR	9161190	ParameterType	AVPacket *		9160749	0					
ANR	9161191	Identifier	avpkt		9160749	1					
ANR	9161192	CFGEntryNode	ENTRY		9160749		True				
ANR	9161193	CFGExitNode	EXIT		9160749		True				
ANR	9161194	Symbol	* frame -> data		9160749						
ANR	9161195	Symbol	block_type		9160749						
ANR	9161196	Symbol	data		9160749						
ANR	9161197	Symbol	* frame		9160749						
ANR	9161198	Symbol	flags		9160749						
ANR	9161199	Symbol	got_frame_ptr		9160749						
ANR	9161200	Symbol	avpkt		9160749						
ANR	9161201	Symbol	silent_size		9160749						
ANR	9161202	Symbol	output_samples_u8		9160749						
ANR	9161203	Symbol	BLOCK_TYPE_AUDIO		9160749						
ANR	9161204	Symbol	AV_RB32		9160749						
ANR	9161205	Symbol	avctx -> channels		9160749						
ANR	9161206	Symbol	* * frame		9160749						
ANR	9161207	Symbol	avctx -> block_align		9160749						
ANR	9161208	Symbol	ff_get_buffer		9160749						
ANR	9161209	Symbol	BLOCK_TYPE_SILENCE		9160749						
ANR	9161210	Symbol	avpkt -> size		9160749						
ANR	9161211	Symbol	avctx		9160749						
ANR	9161212	Symbol	buf_end		9160749						
ANR	9161213	Symbol	s -> out_bps		9160749						
ANR	9161214	Symbol	frame -> data		9160749						
ANR	9161215	Symbol	ret		9160749						
ANR	9161216	Symbol	* avpkt		9160749						
ANR	9161217	Symbol	* buf		9160749						
ANR	9161218	Symbol	frame -> nb_samples		9160749						
ANR	9161219	Symbol	AV_LOG_ERROR		9160749						
ANR	9161220	Symbol	buf_size		9160749						
ANR	9161221	Symbol	audio_chunks		9160749						
ANR	9161222	Symbol	* got_frame_ptr		9160749						
ANR	9161223	Symbol	avctx -> priv_data		9160749						
ANR	9161224	Symbol	av_popcount		9160749						
ANR	9161225	Symbol	EINVAL		9160749						
ANR	9161226	Symbol	output_samples_s16		9160749						
ANR	9161227	Symbol	buf		9160749						
ANR	9161228	Symbol	* avctx		9160749						
ANR	9161229	Symbol	s		9160749						
ANR	9161230	Symbol	BLOCK_TYPE_INITIAL		9160749						
ANR	9161231	Symbol	s -> chunk_size		9160749						
ANR	9161232	Symbol	avpkt -> data		9160749						
ANR	9161233	Symbol	AVERROR		9160749						
ANR	9161234	Symbol	AV_LOG_WARNING		9160749						
ANR	9161235	Symbol	silent_chunks		9160749						
ANR	9161236	Symbol	* s		9160749						
ANR	9161237	Symbol	frame		9160749						
