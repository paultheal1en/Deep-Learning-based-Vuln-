command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	320206	File	/home/p4ultr4n/workplace/ReVeal/raw_code/a64multi_encode_init_0.c								
ANR	320207	Function	a64multi_encode_init	1:0:0:2141							
ANR	320208	FunctionDef	a64multi_encode_init (AVCodecContext * avctx)		320207	0					
ANR	320209	CompoundStatement		3:0:64:2141	320207	0					
ANR	320210	IdentifierDeclStatement	A64Context * c = avctx -> priv_data ;	5:4:71:103	320207	0	True				
ANR	320211	IdentifierDecl	* c = avctx -> priv_data		320207	0					
ANR	320212	IdentifierDeclType	A64Context *		320207	0					
ANR	320213	Identifier	c		320207	1					
ANR	320214	AssignmentExpression	* c = avctx -> priv_data		320207	2		=			
ANR	320215	Identifier	c		320207	0					
ANR	320216	PtrMemberAccess	avctx -> priv_data		320207	1					
ANR	320217	Identifier	avctx		320207	0					
ANR	320218	Identifier	priv_data		320207	1					
ANR	320219	IdentifierDeclStatement	int a ;	7:4:110:115	320207	1	True				
ANR	320220	IdentifierDecl	a		320207	0					
ANR	320221	IdentifierDeclType	int		320207	0					
ANR	320222	Identifier	a		320207	1					
ANR	320223	ExpressionStatement	"av_lfg_init ( & c -> randctx , 1 )"	9:4:122:149	320207	2	True				
ANR	320224	CallExpression	"av_lfg_init ( & c -> randctx , 1 )"		320207	0					
ANR	320225	Callee	av_lfg_init		320207	0					
ANR	320226	Identifier	av_lfg_init		320207	0					
ANR	320227	ArgumentList	& c -> randctx		320207	1					
ANR	320228	Argument	& c -> randctx		320207	0					
ANR	320229	UnaryOperationExpression	& c -> randctx		320207	0					
ANR	320230	UnaryOperator	&		320207	0					
ANR	320231	PtrMemberAccess	c -> randctx		320207	1					
ANR	320232	Identifier	c		320207	0					
ANR	320233	Identifier	randctx		320207	1					
ANR	320234	Argument	1		320207	1					
ANR	320235	PrimaryExpression	1		320207	0					
ANR	320236	IfStatement	if ( avctx -> global_quality < 1 )		320207	3					
ANR	320237	Condition	avctx -> global_quality < 1	13:8:162:186	320207	0	True				
ANR	320238	RelationalExpression	avctx -> global_quality < 1		320207	0		<			
ANR	320239	PtrMemberAccess	avctx -> global_quality		320207	0					
ANR	320240	Identifier	avctx		320207	0					
ANR	320241	Identifier	global_quality		320207	1					
ANR	320242	PrimaryExpression	1		320207	1					
ANR	320243	CompoundStatement		11:35:124:124	320207	1					
ANR	320244	ExpressionStatement	c -> mc_lifetime = 4	15:8:200:218	320207	0	True				
ANR	320245	AssignmentExpression	c -> mc_lifetime = 4		320207	0		=			
ANR	320246	PtrMemberAccess	c -> mc_lifetime		320207	0					
ANR	320247	Identifier	c		320207	0					
ANR	320248	Identifier	mc_lifetime		320207	1					
ANR	320249	PrimaryExpression	4		320207	1					
ANR	320250	ElseStatement	else		320207	0					
ANR	320251	CompoundStatement		15:11:167:167	320207	0					
ANR	320252	ExpressionStatement	c -> mc_lifetime = avctx -> global_quality /= FF_QP2LAMBDA	19:8:243:297	320207	0	True				
ANR	320253	AssignmentExpression	c -> mc_lifetime = avctx -> global_quality /= FF_QP2LAMBDA		320207	0		=			
ANR	320254	PtrMemberAccess	c -> mc_lifetime		320207	0					
ANR	320255	Identifier	c		320207	0					
ANR	320256	Identifier	mc_lifetime		320207	1					
ANR	320257	AssignmentExpression	avctx -> global_quality /= FF_QP2LAMBDA		320207	1		/=			
ANR	320258	PtrMemberAccess	avctx -> global_quality		320207	0					
ANR	320259	Identifier	avctx		320207	0					
ANR	320260	Identifier	global_quality		320207	1					
ANR	320261	Identifier	FF_QP2LAMBDA		320207	1					
ANR	320262	ExpressionStatement	"av_log ( avctx , AV_LOG_INFO , ""charset lifetime set to %d frame(s)\\n"" , c -> mc_lifetime )"	25:4:313:396	320207	4	True				
ANR	320263	CallExpression	"av_log ( avctx , AV_LOG_INFO , ""charset lifetime set to %d frame(s)\\n"" , c -> mc_lifetime )"		320207	0					
ANR	320264	Callee	av_log		320207	0					
ANR	320265	Identifier	av_log		320207	0					
ANR	320266	ArgumentList	avctx		320207	1					
ANR	320267	Argument	avctx		320207	0					
ANR	320268	Identifier	avctx		320207	0					
ANR	320269	Argument	AV_LOG_INFO		320207	1					
ANR	320270	Identifier	AV_LOG_INFO		320207	0					
ANR	320271	Argument	"""charset lifetime set to %d frame(s)\\n"""		320207	2					
ANR	320272	PrimaryExpression	"""charset lifetime set to %d frame(s)\\n"""		320207	0					
ANR	320273	Argument	c -> mc_lifetime		320207	3					
ANR	320274	PtrMemberAccess	c -> mc_lifetime		320207	0					
ANR	320275	Identifier	c		320207	0					
ANR	320276	Identifier	mc_lifetime		320207	1					
ANR	320277	ExpressionStatement	c -> mc_frame_counter = 0	29:4:405:428	320207	5	True				
ANR	320278	AssignmentExpression	c -> mc_frame_counter = 0		320207	0		=			
ANR	320279	PtrMemberAccess	c -> mc_frame_counter		320207	0					
ANR	320280	Identifier	c		320207	0					
ANR	320281	Identifier	mc_frame_counter		320207	1					
ANR	320282	PrimaryExpression	0		320207	1					
ANR	320283	ExpressionStatement	c -> mc_use_5col = avctx -> codec -> id == AV_CODEC_ID_A64_MULTI5	31:4:435:499	320207	6	True				
ANR	320284	AssignmentExpression	c -> mc_use_5col = avctx -> codec -> id == AV_CODEC_ID_A64_MULTI5		320207	0		=			
ANR	320285	PtrMemberAccess	c -> mc_use_5col		320207	0					
ANR	320286	Identifier	c		320207	0					
ANR	320287	Identifier	mc_use_5col		320207	1					
ANR	320288	EqualityExpression	avctx -> codec -> id == AV_CODEC_ID_A64_MULTI5		320207	1		==			
ANR	320289	PtrMemberAccess	avctx -> codec -> id		320207	0					
ANR	320290	PtrMemberAccess	avctx -> codec		320207	0					
ANR	320291	Identifier	avctx		320207	0					
ANR	320292	Identifier	codec		320207	1					
ANR	320293	Identifier	id		320207	1					
ANR	320294	Identifier	AV_CODEC_ID_A64_MULTI5		320207	1					
ANR	320295	ExpressionStatement	c -> mc_pal_size = 4 + c -> mc_use_5col	33:4:506:546	320207	7	True				
ANR	320296	AssignmentExpression	c -> mc_pal_size = 4 + c -> mc_use_5col		320207	0		=			
ANR	320297	PtrMemberAccess	c -> mc_pal_size		320207	0					
ANR	320298	Identifier	c		320207	0					
ANR	320299	Identifier	mc_pal_size		320207	1					
ANR	320300	AdditiveExpression	4 + c -> mc_use_5col		320207	1		+			
ANR	320301	PrimaryExpression	4		320207	0					
ANR	320302	PtrMemberAccess	c -> mc_use_5col		320207	1					
ANR	320303	Identifier	c		320207	0					
ANR	320304	Identifier	mc_use_5col		320207	1					
ANR	320305	ForStatement	for ( a = 0 ; a < c -> mc_pal_size ; a ++ )		320207	8					
ANR	320306	ForInit	a = 0 ;	39:9:605:610	320207	0	True				
ANR	320307	AssignmentExpression	a = 0		320207	0		=			
ANR	320308	Identifier	a		320207	0					
ANR	320309	PrimaryExpression	0		320207	1					
ANR	320310	Condition	a < c -> mc_pal_size	39:16:612:629	320207	1	True				
ANR	320311	RelationalExpression	a < c -> mc_pal_size		320207	0		<			
ANR	320312	Identifier	a		320207	0					
ANR	320313	PtrMemberAccess	c -> mc_pal_size		320207	1					
ANR	320314	Identifier	c		320207	0					
ANR	320315	Identifier	mc_pal_size		320207	1					
ANR	320316	PostIncDecOperationExpression	a ++	39:36:632:634	320207	2	True				
ANR	320317	Identifier	a		320207	0					
ANR	320318	IncDec	++		320207	1					
ANR	320319	CompoundStatement		37:41:572:572	320207	3					
ANR	320320	ExpressionStatement	c -> mc_luma_vals [ a ] = a64_palette [ mc_colors [ a ] ] [ 0 ] * 0.30 + a64_palette [ mc_colors [ a ] ] [ 1 ] * 0.59 + a64_palette [ mc_colors [ a ] ] [ 2 ] * 0.11	41:8:648:834	320207	0	True				
ANR	320321	AssignmentExpression	c -> mc_luma_vals [ a ] = a64_palette [ mc_colors [ a ] ] [ 0 ] * 0.30 + a64_palette [ mc_colors [ a ] ] [ 1 ] * 0.59 + a64_palette [ mc_colors [ a ] ] [ 2 ] * 0.11		320207	0		=			
ANR	320322	ArrayIndexing	c -> mc_luma_vals [ a ]		320207	0					
ANR	320323	PtrMemberAccess	c -> mc_luma_vals		320207	0					
ANR	320324	Identifier	c		320207	0					
ANR	320325	Identifier	mc_luma_vals		320207	1					
ANR	320326	Identifier	a		320207	1					
ANR	320327	AdditiveExpression	a64_palette [ mc_colors [ a ] ] [ 0 ] * 0.30 + a64_palette [ mc_colors [ a ] ] [ 1 ] * 0.59 + a64_palette [ mc_colors [ a ] ] [ 2 ] * 0.11		320207	1		+			
ANR	320328	MultiplicativeExpression	a64_palette [ mc_colors [ a ] ] [ 0 ] * 0.30		320207	0		*			
ANR	320329	ArrayIndexing	a64_palette [ mc_colors [ a ] ] [ 0 ]		320207	0					
ANR	320330	ArrayIndexing	a64_palette [ mc_colors [ a ] ]		320207	0					
ANR	320331	Identifier	a64_palette		320207	0					
ANR	320332	ArrayIndexing	mc_colors [ a ]		320207	1					
ANR	320333	Identifier	mc_colors		320207	0					
ANR	320334	Identifier	a		320207	1					
ANR	320335	PrimaryExpression	0		320207	1					
ANR	320336	PrimaryExpression	0.30		320207	1					
ANR	320337	AdditiveExpression	a64_palette [ mc_colors [ a ] ] [ 1 ] * 0.59 + a64_palette [ mc_colors [ a ] ] [ 2 ] * 0.11		320207	1		+			
ANR	320338	MultiplicativeExpression	a64_palette [ mc_colors [ a ] ] [ 1 ] * 0.59		320207	0		*			
ANR	320339	ArrayIndexing	a64_palette [ mc_colors [ a ] ] [ 1 ]		320207	0					
ANR	320340	ArrayIndexing	a64_palette [ mc_colors [ a ] ]		320207	0					
ANR	320341	Identifier	a64_palette		320207	0					
ANR	320342	ArrayIndexing	mc_colors [ a ]		320207	1					
ANR	320343	Identifier	mc_colors		320207	0					
ANR	320344	Identifier	a		320207	1					
ANR	320345	PrimaryExpression	1		320207	1					
ANR	320346	PrimaryExpression	0.59		320207	1					
ANR	320347	MultiplicativeExpression	a64_palette [ mc_colors [ a ] ] [ 2 ] * 0.11		320207	1		*			
ANR	320348	ArrayIndexing	a64_palette [ mc_colors [ a ] ] [ 2 ]		320207	0					
ANR	320349	ArrayIndexing	a64_palette [ mc_colors [ a ] ]		320207	0					
ANR	320350	Identifier	a64_palette		320207	0					
ANR	320351	ArrayIndexing	mc_colors [ a ]		320207	1					
ANR	320352	Identifier	mc_colors		320207	0					
ANR	320353	Identifier	a		320207	1					
ANR	320354	PrimaryExpression	2		320207	1					
ANR	320355	PrimaryExpression	0.11		320207	1					
ANR	320356	IfStatement	if ( ! ( c -> mc_meta_charset = av_malloc ( 32000 * c -> mc_lifetime * sizeof ( int ) ) ) || ! ( c -> mc_best_cb = av_malloc ( CHARSET_CHARS * 32 * sizeof ( int ) ) ) || ! ( c -> mc_charmap = av_mallocz ( 1000 * c -> mc_lifetime * sizeof ( int ) ) ) || ! ( c -> mc_colram = av_mallocz ( CHARSET_CHARS * sizeof ( uint8_t ) ) ) || ! ( c -> mc_charset = av_malloc ( 0x800 * ( INTERLACED + 1 ) * sizeof ( uint8_t ) ) ) )		320207	9					
ANR	320357	Condition	! ( c -> mc_meta_charset = av_malloc ( 32000 * c -> mc_lifetime * sizeof ( int ) ) ) || ! ( c -> mc_best_cb = av_malloc ( CHARSET_CHARS * 32 * sizeof ( int ) ) ) || ! ( c -> mc_charmap = av_mallocz ( 1000 * c -> mc_lifetime * sizeof ( int ) ) ) || ! ( c -> mc_colram = av_mallocz ( CHARSET_CHARS * sizeof ( uint8_t ) ) ) || ! ( c -> mc_charset = av_malloc ( 0x800 * ( INTERLACED + 1 ) * sizeof ( uint8_t ) ) )	51:8:854:1264	320207	0	True				
ANR	320358	OrExpression	! ( c -> mc_meta_charset = av_malloc ( 32000 * c -> mc_lifetime * sizeof ( int ) ) ) || ! ( c -> mc_best_cb = av_malloc ( CHARSET_CHARS * 32 * sizeof ( int ) ) ) || ! ( c -> mc_charmap = av_mallocz ( 1000 * c -> mc_lifetime * sizeof ( int ) ) ) || ! ( c -> mc_colram = av_mallocz ( CHARSET_CHARS * sizeof ( uint8_t ) ) ) || ! ( c -> mc_charset = av_malloc ( 0x800 * ( INTERLACED + 1 ) * sizeof ( uint8_t ) ) )		320207	0		||			
ANR	320359	UnaryOperationExpression	! ( c -> mc_meta_charset = av_malloc ( 32000 * c -> mc_lifetime * sizeof ( int ) ) )		320207	0					
ANR	320360	UnaryOperator	!		320207	0					
ANR	320361	AssignmentExpression	c -> mc_meta_charset = av_malloc ( 32000 * c -> mc_lifetime * sizeof ( int ) )		320207	1		=			
ANR	320362	PtrMemberAccess	c -> mc_meta_charset		320207	0					
ANR	320363	Identifier	c		320207	0					
ANR	320364	Identifier	mc_meta_charset		320207	1					
ANR	320365	CallExpression	av_malloc ( 32000 * c -> mc_lifetime * sizeof ( int ) )		320207	1					
ANR	320366	Callee	av_malloc		320207	0					
ANR	320367	Identifier	av_malloc		320207	0					
ANR	320368	ArgumentList	32000 * c -> mc_lifetime * sizeof ( int )		320207	1					
ANR	320369	Argument	32000 * c -> mc_lifetime * sizeof ( int )		320207	0					
ANR	320370	MultiplicativeExpression	32000 * c -> mc_lifetime * sizeof ( int )		320207	0		*			
ANR	320371	PrimaryExpression	32000		320207	0					
ANR	320372	MultiplicativeExpression	c -> mc_lifetime * sizeof ( int )		320207	1		*			
ANR	320373	PtrMemberAccess	c -> mc_lifetime		320207	0					
ANR	320374	Identifier	c		320207	0					
ANR	320375	Identifier	mc_lifetime		320207	1					
ANR	320376	SizeofExpression	sizeof ( int )		320207	1					
ANR	320377	Sizeof	sizeof		320207	0					
ANR	320378	SizeofOperand	int		320207	1					
ANR	320379	OrExpression	! ( c -> mc_best_cb = av_malloc ( CHARSET_CHARS * 32 * sizeof ( int ) ) ) || ! ( c -> mc_charmap = av_mallocz ( 1000 * c -> mc_lifetime * sizeof ( int ) ) ) || ! ( c -> mc_colram = av_mallocz ( CHARSET_CHARS * sizeof ( uint8_t ) ) ) || ! ( c -> mc_charset = av_malloc ( 0x800 * ( INTERLACED + 1 ) * sizeof ( uint8_t ) ) )		320207	1		||			
ANR	320380	UnaryOperationExpression	! ( c -> mc_best_cb = av_malloc ( CHARSET_CHARS * 32 * sizeof ( int ) ) )		320207	0					
ANR	320381	UnaryOperator	!		320207	0					
ANR	320382	AssignmentExpression	c -> mc_best_cb = av_malloc ( CHARSET_CHARS * 32 * sizeof ( int ) )		320207	1		=			
ANR	320383	PtrMemberAccess	c -> mc_best_cb		320207	0					
ANR	320384	Identifier	c		320207	0					
ANR	320385	Identifier	mc_best_cb		320207	1					
ANR	320386	CallExpression	av_malloc ( CHARSET_CHARS * 32 * sizeof ( int ) )		320207	1					
ANR	320387	Callee	av_malloc		320207	0					
ANR	320388	Identifier	av_malloc		320207	0					
ANR	320389	ArgumentList	CHARSET_CHARS * 32 * sizeof ( int )		320207	1					
ANR	320390	Argument	CHARSET_CHARS * 32 * sizeof ( int )		320207	0					
ANR	320391	MultiplicativeExpression	CHARSET_CHARS * 32 * sizeof ( int )		320207	0		*			
ANR	320392	Identifier	CHARSET_CHARS		320207	0					
ANR	320393	MultiplicativeExpression	32 * sizeof ( int )		320207	1		*			
ANR	320394	PrimaryExpression	32		320207	0					
ANR	320395	SizeofExpression	sizeof ( int )		320207	1					
ANR	320396	Sizeof	sizeof		320207	0					
ANR	320397	SizeofOperand	int		320207	1					
ANR	320398	OrExpression	! ( c -> mc_charmap = av_mallocz ( 1000 * c -> mc_lifetime * sizeof ( int ) ) ) || ! ( c -> mc_colram = av_mallocz ( CHARSET_CHARS * sizeof ( uint8_t ) ) ) || ! ( c -> mc_charset = av_malloc ( 0x800 * ( INTERLACED + 1 ) * sizeof ( uint8_t ) ) )		320207	1		||			
ANR	320399	UnaryOperationExpression	! ( c -> mc_charmap = av_mallocz ( 1000 * c -> mc_lifetime * sizeof ( int ) ) )		320207	0					
ANR	320400	UnaryOperator	!		320207	0					
ANR	320401	AssignmentExpression	c -> mc_charmap = av_mallocz ( 1000 * c -> mc_lifetime * sizeof ( int ) )		320207	1		=			
ANR	320402	PtrMemberAccess	c -> mc_charmap		320207	0					
ANR	320403	Identifier	c		320207	0					
ANR	320404	Identifier	mc_charmap		320207	1					
ANR	320405	CallExpression	av_mallocz ( 1000 * c -> mc_lifetime * sizeof ( int ) )		320207	1					
ANR	320406	Callee	av_mallocz		320207	0					
ANR	320407	Identifier	av_mallocz		320207	0					
ANR	320408	ArgumentList	1000 * c -> mc_lifetime * sizeof ( int )		320207	1					
ANR	320409	Argument	1000 * c -> mc_lifetime * sizeof ( int )		320207	0					
ANR	320410	MultiplicativeExpression	1000 * c -> mc_lifetime * sizeof ( int )		320207	0		*			
ANR	320411	PrimaryExpression	1000		320207	0					
ANR	320412	MultiplicativeExpression	c -> mc_lifetime * sizeof ( int )		320207	1		*			
ANR	320413	PtrMemberAccess	c -> mc_lifetime		320207	0					
ANR	320414	Identifier	c		320207	0					
ANR	320415	Identifier	mc_lifetime		320207	1					
ANR	320416	SizeofExpression	sizeof ( int )		320207	1					
ANR	320417	Sizeof	sizeof		320207	0					
ANR	320418	SizeofOperand	int		320207	1					
ANR	320419	OrExpression	! ( c -> mc_colram = av_mallocz ( CHARSET_CHARS * sizeof ( uint8_t ) ) ) || ! ( c -> mc_charset = av_malloc ( 0x800 * ( INTERLACED + 1 ) * sizeof ( uint8_t ) ) )		320207	1		||			
ANR	320420	UnaryOperationExpression	! ( c -> mc_colram = av_mallocz ( CHARSET_CHARS * sizeof ( uint8_t ) ) )		320207	0					
ANR	320421	UnaryOperator	!		320207	0					
ANR	320422	AssignmentExpression	c -> mc_colram = av_mallocz ( CHARSET_CHARS * sizeof ( uint8_t ) )		320207	1		=			
ANR	320423	PtrMemberAccess	c -> mc_colram		320207	0					
ANR	320424	Identifier	c		320207	0					
ANR	320425	Identifier	mc_colram		320207	1					
ANR	320426	CallExpression	av_mallocz ( CHARSET_CHARS * sizeof ( uint8_t ) )		320207	1					
ANR	320427	Callee	av_mallocz		320207	0					
ANR	320428	Identifier	av_mallocz		320207	0					
ANR	320429	ArgumentList	CHARSET_CHARS * sizeof ( uint8_t )		320207	1					
ANR	320430	Argument	CHARSET_CHARS * sizeof ( uint8_t )		320207	0					
ANR	320431	MultiplicativeExpression	CHARSET_CHARS * sizeof ( uint8_t )		320207	0		*			
ANR	320432	Identifier	CHARSET_CHARS		320207	0					
ANR	320433	SizeofExpression	sizeof ( uint8_t )		320207	1					
ANR	320434	Sizeof	sizeof		320207	0					
ANR	320435	SizeofOperand	uint8_t		320207	1					
ANR	320436	UnaryOperationExpression	! ( c -> mc_charset = av_malloc ( 0x800 * ( INTERLACED + 1 ) * sizeof ( uint8_t ) ) )		320207	1					
ANR	320437	UnaryOperator	!		320207	0					
ANR	320438	AssignmentExpression	c -> mc_charset = av_malloc ( 0x800 * ( INTERLACED + 1 ) * sizeof ( uint8_t ) )		320207	1		=			
ANR	320439	PtrMemberAccess	c -> mc_charset		320207	0					
ANR	320440	Identifier	c		320207	0					
ANR	320441	Identifier	mc_charset		320207	1					
ANR	320442	CallExpression	av_malloc ( 0x800 * ( INTERLACED + 1 ) * sizeof ( uint8_t ) )		320207	1					
ANR	320443	Callee	av_malloc		320207	0					
ANR	320444	Identifier	av_malloc		320207	0					
ANR	320445	ArgumentList	0x800 * ( INTERLACED + 1 ) * sizeof ( uint8_t )		320207	1					
ANR	320446	Argument	0x800 * ( INTERLACED + 1 ) * sizeof ( uint8_t )		320207	0					
ANR	320447	MultiplicativeExpression	0x800 * ( INTERLACED + 1 ) * sizeof ( uint8_t )		320207	0		*			
ANR	320448	PrimaryExpression	0x800		320207	0					
ANR	320449	MultiplicativeExpression	( INTERLACED + 1 ) * sizeof ( uint8_t )		320207	1		*			
ANR	320450	AdditiveExpression	INTERLACED + 1		320207	0		+			
ANR	320451	Identifier	INTERLACED		320207	0					
ANR	320452	PrimaryExpression	1		320207	1					
ANR	320453	SizeofExpression	sizeof ( uint8_t )		320207	1					
ANR	320454	Sizeof	sizeof		320207	0					
ANR	320455	SizeofOperand	uint8_t		320207	1					
ANR	320456	CompoundStatement		57:85:1202:1202	320207	1					
ANR	320457	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Failed to allocate buffer memory.\\n"" )"	61:8:1278:1344	320207	0	True				
ANR	320458	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Failed to allocate buffer memory.\\n"" )"		320207	0					
ANR	320459	Callee	av_log		320207	0					
ANR	320460	Identifier	av_log		320207	0					
ANR	320461	ArgumentList	avctx		320207	1					
ANR	320462	Argument	avctx		320207	0					
ANR	320463	Identifier	avctx		320207	0					
ANR	320464	Argument	AV_LOG_ERROR		320207	1					
ANR	320465	Identifier	AV_LOG_ERROR		320207	0					
ANR	320466	Argument	"""Failed to allocate buffer memory.\\n"""		320207	2					
ANR	320467	PrimaryExpression	"""Failed to allocate buffer memory.\\n"""		320207	0					
ANR	320468	ReturnStatement	return AVERROR ( ENOMEM ) ;	63:8:1355:1377	320207	1	True				
ANR	320469	CallExpression	AVERROR ( ENOMEM )		320207	0					
ANR	320470	Callee	AVERROR		320207	0					
ANR	320471	Identifier	AVERROR		320207	0					
ANR	320472	ArgumentList	ENOMEM		320207	1					
ANR	320473	Argument	ENOMEM		320207	0					
ANR	320474	Identifier	ENOMEM		320207	0					
ANR	320475	IfStatement	if ( ! ( avctx -> extradata = av_mallocz ( 8 * 4 + FF_INPUT_BUFFER_PADDING_SIZE ) ) )		320207	10					
ANR	320476	Condition	! ( avctx -> extradata = av_mallocz ( 8 * 4 + FF_INPUT_BUFFER_PADDING_SIZE ) )	71:8:1425:1494	320207	0	True				
ANR	320477	UnaryOperationExpression	! ( avctx -> extradata = av_mallocz ( 8 * 4 + FF_INPUT_BUFFER_PADDING_SIZE ) )		320207	0					
ANR	320478	UnaryOperator	!		320207	0					
ANR	320479	AssignmentExpression	avctx -> extradata = av_mallocz ( 8 * 4 + FF_INPUT_BUFFER_PADDING_SIZE )		320207	1		=			
ANR	320480	PtrMemberAccess	avctx -> extradata		320207	0					
ANR	320481	Identifier	avctx		320207	0					
ANR	320482	Identifier	extradata		320207	1					
ANR	320483	CallExpression	av_mallocz ( 8 * 4 + FF_INPUT_BUFFER_PADDING_SIZE )		320207	1					
ANR	320484	Callee	av_mallocz		320207	0					
ANR	320485	Identifier	av_mallocz		320207	0					
ANR	320486	ArgumentList	8 * 4 + FF_INPUT_BUFFER_PADDING_SIZE		320207	1					
ANR	320487	Argument	8 * 4 + FF_INPUT_BUFFER_PADDING_SIZE		320207	0					
ANR	320488	AdditiveExpression	8 * 4 + FF_INPUT_BUFFER_PADDING_SIZE		320207	0		+			
ANR	320489	MultiplicativeExpression	8 * 4		320207	0		*			
ANR	320490	PrimaryExpression	8		320207	0					
ANR	320491	PrimaryExpression	4		320207	1					
ANR	320492	Identifier	FF_INPUT_BUFFER_PADDING_SIZE		320207	1					
ANR	320493	CompoundStatement		69:80:1432:1432	320207	1					
ANR	320494	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Failed to allocate memory for extradata.\\n"" )"	73:8:1508:1581	320207	0	True				
ANR	320495	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Failed to allocate memory for extradata.\\n"" )"		320207	0					
ANR	320496	Callee	av_log		320207	0					
ANR	320497	Identifier	av_log		320207	0					
ANR	320498	ArgumentList	avctx		320207	1					
ANR	320499	Argument	avctx		320207	0					
ANR	320500	Identifier	avctx		320207	0					
ANR	320501	Argument	AV_LOG_ERROR		320207	1					
ANR	320502	Identifier	AV_LOG_ERROR		320207	0					
ANR	320503	Argument	"""Failed to allocate memory for extradata.\\n"""		320207	2					
ANR	320504	PrimaryExpression	"""Failed to allocate memory for extradata.\\n"""		320207	0					
ANR	320505	ReturnStatement	return AVERROR ( ENOMEM ) ;	75:8:1592:1614	320207	1	True				
ANR	320506	CallExpression	AVERROR ( ENOMEM )		320207	0					
ANR	320507	Callee	AVERROR		320207	0					
ANR	320508	Identifier	AVERROR		320207	0					
ANR	320509	ArgumentList	ENOMEM		320207	1					
ANR	320510	Argument	ENOMEM		320207	0					
ANR	320511	Identifier	ENOMEM		320207	0					
ANR	320512	ExpressionStatement	avctx -> extradata_size = 8 * 4	79:4:1628:1657	320207	11	True				
ANR	320513	AssignmentExpression	avctx -> extradata_size = 8 * 4		320207	0		=			
ANR	320514	PtrMemberAccess	avctx -> extradata_size		320207	0					
ANR	320515	Identifier	avctx		320207	0					
ANR	320516	Identifier	extradata_size		320207	1					
ANR	320517	MultiplicativeExpression	8 * 4		320207	1		*			
ANR	320518	PrimaryExpression	8		320207	0					
ANR	320519	PrimaryExpression	4		320207	1					
ANR	320520	ExpressionStatement	"AV_WB32 ( avctx -> extradata , c -> mc_lifetime )"	81:4:1664:1705	320207	12	True				
ANR	320521	CallExpression	"AV_WB32 ( avctx -> extradata , c -> mc_lifetime )"		320207	0					
ANR	320522	Callee	AV_WB32		320207	0					
ANR	320523	Identifier	AV_WB32		320207	0					
ANR	320524	ArgumentList	avctx -> extradata		320207	1					
ANR	320525	Argument	avctx -> extradata		320207	0					
ANR	320526	PtrMemberAccess	avctx -> extradata		320207	0					
ANR	320527	Identifier	avctx		320207	0					
ANR	320528	Identifier	extradata		320207	1					
ANR	320529	Argument	c -> mc_lifetime		320207	1					
ANR	320530	PtrMemberAccess	c -> mc_lifetime		320207	0					
ANR	320531	Identifier	c		320207	0					
ANR	320532	Identifier	mc_lifetime		320207	1					
ANR	320533	ExpressionStatement	"AV_WB32 ( avctx -> extradata + 16 , INTERLACED )"	83:4:1712:1754	320207	13	True				
ANR	320534	CallExpression	"AV_WB32 ( avctx -> extradata + 16 , INTERLACED )"		320207	0					
ANR	320535	Callee	AV_WB32		320207	0					
ANR	320536	Identifier	AV_WB32		320207	0					
ANR	320537	ArgumentList	avctx -> extradata + 16		320207	1					
ANR	320538	Argument	avctx -> extradata + 16		320207	0					
ANR	320539	AdditiveExpression	avctx -> extradata + 16		320207	0		+			
ANR	320540	PtrMemberAccess	avctx -> extradata		320207	0					
ANR	320541	Identifier	avctx		320207	0					
ANR	320542	Identifier	extradata		320207	1					
ANR	320543	PrimaryExpression	16		320207	1					
ANR	320544	Argument	INTERLACED		320207	1					
ANR	320545	Identifier	INTERLACED		320207	0					
ANR	320546	ExpressionStatement	avctx -> coded_frame = av_frame_alloc ( )	87:4:1763:1800	320207	14	True				
ANR	320547	AssignmentExpression	avctx -> coded_frame = av_frame_alloc ( )		320207	0		=			
ANR	320548	PtrMemberAccess	avctx -> coded_frame		320207	0					
ANR	320549	Identifier	avctx		320207	0					
ANR	320550	Identifier	coded_frame		320207	1					
ANR	320551	CallExpression	av_frame_alloc ( )		320207	1					
ANR	320552	Callee	av_frame_alloc		320207	0					
ANR	320553	Identifier	av_frame_alloc		320207	0					
ANR	320554	ArgumentList			320207	1					
ANR	320555	IfStatement	if ( ! avctx -> coded_frame )		320207	15					
ANR	320556	Condition	! avctx -> coded_frame	89:8:1811:1829	320207	0	True				
ANR	320557	UnaryOperationExpression	! avctx -> coded_frame		320207	0					
ANR	320558	UnaryOperator	!		320207	0					
ANR	320559	PtrMemberAccess	avctx -> coded_frame		320207	1					
ANR	320560	Identifier	avctx		320207	0					
ANR	320561	Identifier	coded_frame		320207	1					
ANR	320562	CompoundStatement		87:29:1767:1767	320207	1					
ANR	320563	ExpressionStatement	a64multi_close_encoder ( avctx )	91:8:1843:1872	320207	0	True				
ANR	320564	CallExpression	a64multi_close_encoder ( avctx )		320207	0					
ANR	320565	Callee	a64multi_close_encoder		320207	0					
ANR	320566	Identifier	a64multi_close_encoder		320207	0					
ANR	320567	ArgumentList	avctx		320207	1					
ANR	320568	Argument	avctx		320207	0					
ANR	320569	Identifier	avctx		320207	0					
ANR	320570	ReturnStatement	return AVERROR ( ENOMEM ) ;	93:8:1883:1905	320207	1	True				
ANR	320571	CallExpression	AVERROR ( ENOMEM )		320207	0					
ANR	320572	Callee	AVERROR		320207	0					
ANR	320573	Identifier	AVERROR		320207	0					
ANR	320574	ArgumentList	ENOMEM		320207	1					
ANR	320575	Argument	ENOMEM		320207	0					
ANR	320576	Identifier	ENOMEM		320207	0					
ANR	320577	ExpressionStatement	avctx -> coded_frame -> pict_type = AV_PICTURE_TYPE_I	99:4:1921:1970	320207	16	True				
ANR	320578	AssignmentExpression	avctx -> coded_frame -> pict_type = AV_PICTURE_TYPE_I		320207	0		=			
ANR	320579	PtrMemberAccess	avctx -> coded_frame -> pict_type		320207	0					
ANR	320580	PtrMemberAccess	avctx -> coded_frame		320207	0					
ANR	320581	Identifier	avctx		320207	0					
ANR	320582	Identifier	coded_frame		320207	1					
ANR	320583	Identifier	pict_type		320207	1					
ANR	320584	Identifier	AV_PICTURE_TYPE_I		320207	1					
ANR	320585	ExpressionStatement	avctx -> coded_frame -> key_frame = 1	101:4:1977:2010	320207	17	True				
ANR	320586	AssignmentExpression	avctx -> coded_frame -> key_frame = 1		320207	0		=			
ANR	320587	PtrMemberAccess	avctx -> coded_frame -> key_frame		320207	0					
ANR	320588	PtrMemberAccess	avctx -> coded_frame		320207	0					
ANR	320589	Identifier	avctx		320207	0					
ANR	320590	Identifier	coded_frame		320207	1					
ANR	320591	Identifier	key_frame		320207	1					
ANR	320592	PrimaryExpression	1		320207	1					
ANR	320593	IfStatement	if ( ! avctx -> codec_tag )		320207	18					
ANR	320594	Condition	! avctx -> codec_tag	103:8:2021:2037	320207	0	True				
ANR	320595	UnaryOperationExpression	! avctx -> codec_tag		320207	0					
ANR	320596	UnaryOperator	!		320207	0					
ANR	320597	PtrMemberAccess	avctx -> codec_tag		320207	1					
ANR	320598	Identifier	avctx		320207	0					
ANR	320599	Identifier	codec_tag		320207	1					
ANR	320600	ExpressionStatement	"avctx -> codec_tag = AV_RL32 ( ""a64m"" )"	105:9:2050:2084	320207	1	True				
ANR	320601	AssignmentExpression	"avctx -> codec_tag = AV_RL32 ( ""a64m"" )"		320207	0		=			
ANR	320602	PtrMemberAccess	avctx -> codec_tag		320207	0					
ANR	320603	Identifier	avctx		320207	0					
ANR	320604	Identifier	codec_tag		320207	1					
ANR	320605	CallExpression	"AV_RL32 ( ""a64m"" )"		320207	1					
ANR	320606	Callee	AV_RL32		320207	0					
ANR	320607	Identifier	AV_RL32		320207	0					
ANR	320608	ArgumentList	"""a64m"""		320207	1					
ANR	320609	Argument	"""a64m"""		320207	0					
ANR	320610	PrimaryExpression	"""a64m"""		320207	0					
ANR	320611	ExpressionStatement	c -> next_pts = AV_NOPTS_VALUE	109:4:2093:2121	320207	19	True				
ANR	320612	AssignmentExpression	c -> next_pts = AV_NOPTS_VALUE		320207	0		=			
ANR	320613	PtrMemberAccess	c -> next_pts		320207	0					
ANR	320614	Identifier	c		320207	0					
ANR	320615	Identifier	next_pts		320207	1					
ANR	320616	Identifier	AV_NOPTS_VALUE		320207	1					
ANR	320617	ReturnStatement	return 0 ;	113:4:2130:2138	320207	20	True				
ANR	320618	PrimaryExpression	0		320207	0					
ANR	320619	ReturnType	static av_cold int		320207	1					
ANR	320620	Identifier	a64multi_encode_init		320207	2					
ANR	320621	ParameterList	AVCodecContext * avctx		320207	3					
ANR	320622	Parameter	AVCodecContext * avctx	1:40:40:60	320207	0	True				
ANR	320623	ParameterType	AVCodecContext *		320207	0					
ANR	320624	Identifier	avctx		320207	1					
ANR	320625	CFGEntryNode	ENTRY		320207		True				
ANR	320626	CFGExitNode	EXIT		320207		True				
ANR	320627	Symbol	* * mc_colors		320207						
ANR	320628	Symbol	av_malloc		320207						
ANR	320629	Symbol	ENOMEM		320207						
ANR	320630	Symbol	avctx -> coded_frame -> pict_type		320207						
ANR	320631	Symbol	c -> mc_colram		320207						
ANR	320632	Symbol	& c -> randctx		320207						
ANR	320633	Symbol	* a64_palette		320207						
ANR	320634	Symbol	* avctx -> codec		320207						
ANR	320635	Symbol	c -> mc_frame_counter		320207						
ANR	320636	Symbol	avctx -> codec		320207						
ANR	320637	Symbol	c -> next_pts		320207						
ANR	320638	Symbol	INTERLACED		320207						
ANR	320639	Symbol	c -> mc_use_5col		320207						
ANR	320640	Symbol	* * avctx		320207						
ANR	320641	Symbol	* * c		320207						
ANR	320642	Symbol	av_mallocz		320207						
ANR	320643	Symbol	* * a		320207						
ANR	320644	Symbol	avctx -> coded_frame -> key_frame		320207						
ANR	320645	Symbol	av_frame_alloc		320207						
ANR	320646	Symbol	avctx -> global_quality		320207						
ANR	320647	Symbol	* avctx		320207						
ANR	320648	Symbol	AV_LOG_INFO		320207						
ANR	320649	Symbol	* * * a		320207						
ANR	320650	Symbol	* * a64_palette		320207						
ANR	320651	Symbol	c -> mc_best_cb		320207						
ANR	320652	Symbol	AV_NOPTS_VALUE		320207						
ANR	320653	Symbol	c -> mc_luma_vals		320207						
ANR	320654	Symbol	* * * mc_colors		320207						
ANR	320655	Symbol	FF_INPUT_BUFFER_PADDING_SIZE		320207						
ANR	320656	Symbol	avctx -> coded_frame		320207						
ANR	320657	Symbol	CHARSET_CHARS		320207						
ANR	320658	Symbol	* mc_colors		320207						
ANR	320659	Symbol	AV_PICTURE_TYPE_I		320207						
ANR	320660	Symbol	* avctx -> coded_frame		320207						
ANR	320661	Symbol	avctx		320207						
ANR	320662	Symbol	avctx -> codec_tag		320207						
ANR	320663	Symbol	AV_CODEC_ID_A64_MULTI5		320207						
ANR	320664	Symbol	mc_colors		320207						
ANR	320665	Symbol	a		320207						
ANR	320666	Symbol	avctx -> extradata		320207						
ANR	320667	Symbol	c		320207						
ANR	320668	Symbol	* c -> mc_luma_vals		320207						
ANR	320669	Symbol	AV_LOG_ERROR		320207						
ANR	320670	Symbol	c -> mc_charset		320207						
ANR	320671	Symbol	a64_palette		320207						
ANR	320672	Symbol	avctx -> extradata_size		320207						
ANR	320673	Symbol	* a		320207						
ANR	320674	Symbol	avctx -> priv_data		320207						
ANR	320675	Symbol	* c		320207						
ANR	320676	Symbol	c -> mc_meta_charset		320207						
ANR	320677	Symbol	c -> mc_lifetime		320207						
ANR	320678	Symbol	avctx -> codec -> id		320207						
ANR	320679	Symbol	AV_RL32		320207						
ANR	320680	Symbol	c -> mc_pal_size		320207						
ANR	320681	Symbol	FF_QP2LAMBDA		320207						
ANR	320682	Symbol	AVERROR		320207						
ANR	320683	Symbol	c -> mc_charmap		320207						
