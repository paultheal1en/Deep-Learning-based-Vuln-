command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3475060	File	/home/p4ultr4n/workplace/ReVeal/raw_code/ff_huff_build_tree_1.c								
ANR	3475061	Function	ff_huff_build_tree	1:0:0:1307							
ANR	3475062	FunctionDef	"ff_huff_build_tree (AVCodecContext * avctx , VLC * vlc , int nb_codes , Node * nodes , huff_cmp_t cmp , int hnode_first)"		3475061	0					
ANR	3475063	CompoundStatement		5:0:141:1307	3475061	0					
ANR	3475064	IdentifierDeclStatement	"int i , j ;"	7:4:148:156	3475061	0	True				
ANR	3475065	IdentifierDecl	i		3475061	0					
ANR	3475066	IdentifierDeclType	int		3475061	0					
ANR	3475067	Identifier	i		3475061	1					
ANR	3475068	IdentifierDecl	j		3475061	1					
ANR	3475069	IdentifierDeclType	int		3475061	0					
ANR	3475070	Identifier	j		3475061	1					
ANR	3475071	IdentifierDeclStatement	int cur_node ;	9:4:163:175	3475061	1	True				
ANR	3475072	IdentifierDecl	cur_node		3475061	0					
ANR	3475073	IdentifierDeclType	int		3475061	0					
ANR	3475074	Identifier	cur_node		3475061	1					
ANR	3475075	IdentifierDeclStatement	int64_t sum = 0 ;	11:4:182:197	3475061	2	True				
ANR	3475076	IdentifierDecl	sum = 0		3475061	0					
ANR	3475077	IdentifierDeclType	int64_t		3475061	0					
ANR	3475078	Identifier	sum		3475061	1					
ANR	3475079	AssignmentExpression	sum = 0		3475061	2		=			
ANR	3475080	Identifier	sum		3475061	0					
ANR	3475081	PrimaryExpression	0		3475061	1					
ANR	3475082	ForStatement	for ( i = 0 ; i < nb_codes ; i ++ )		3475061	3					
ANR	3475083	ForInit	i = 0 ;	15:8:210:215	3475061	0	True				
ANR	3475084	AssignmentExpression	i = 0		3475061	0		=			
ANR	3475085	Identifier	i		3475061	0					
ANR	3475086	PrimaryExpression	0		3475061	1					
ANR	3475087	Condition	i < nb_codes	15:15:217:228	3475061	1	True				
ANR	3475088	RelationalExpression	i < nb_codes		3475061	0		<			
ANR	3475089	Identifier	i		3475061	0					
ANR	3475090	Identifier	nb_codes		3475061	1					
ANR	3475091	PostIncDecOperationExpression	i ++	15:29:231:233	3475061	2	True				
ANR	3475092	Identifier	i		3475061	0					
ANR	3475093	IncDec	++		3475061	1					
ANR	3475094	CompoundStatement		11:33:93:93	3475061	3					
ANR	3475095	ExpressionStatement	nodes [ i ] . sym = i	17:8:246:262	3475061	0	True				
ANR	3475096	AssignmentExpression	nodes [ i ] . sym = i		3475061	0		=			
ANR	3475097	MemberAccess	nodes [ i ] . sym		3475061	0					
ANR	3475098	ArrayIndexing	nodes [ i ]		3475061	0					
ANR	3475099	Identifier	nodes		3475061	0					
ANR	3475100	Identifier	i		3475061	1					
ANR	3475101	Identifier	sym		3475061	1					
ANR	3475102	Identifier	i		3475061	1					
ANR	3475103	ExpressionStatement	nodes [ i ] . n0 = - 2	19:8:273:289	3475061	1	True				
ANR	3475104	AssignmentExpression	nodes [ i ] . n0 = - 2		3475061	0		=			
ANR	3475105	MemberAccess	nodes [ i ] . n0		3475061	0					
ANR	3475106	ArrayIndexing	nodes [ i ]		3475061	0					
ANR	3475107	Identifier	nodes		3475061	0					
ANR	3475108	Identifier	i		3475061	1					
ANR	3475109	Identifier	n0		3475061	1					
ANR	3475110	UnaryOperationExpression	- 2		3475061	1					
ANR	3475111	UnaryOperator	-		3475061	0					
ANR	3475112	PrimaryExpression	2		3475061	1					
ANR	3475113	ExpressionStatement	sum += nodes [ i ] . count	21:8:300:321	3475061	2	True				
ANR	3475114	AssignmentExpression	sum += nodes [ i ] . count		3475061	0		+=			
ANR	3475115	Identifier	sum		3475061	0					
ANR	3475116	MemberAccess	nodes [ i ] . count		3475061	1					
ANR	3475117	ArrayIndexing	nodes [ i ]		3475061	0					
ANR	3475118	Identifier	nodes		3475061	0					
ANR	3475119	Identifier	i		3475061	1					
ANR	3475120	Identifier	count		3475061	1					
ANR	3475121	IfStatement	if ( sum >> 31 )		3475061	4					
ANR	3475122	Condition	sum >> 31	27:7:340:348	3475061	0	True				
ANR	3475123	ShiftExpression	sum >> 31		3475061	0		>>			
ANR	3475124	Identifier	sum		3475061	0					
ANR	3475125	PrimaryExpression	31		3475061	1					
ANR	3475126	CompoundStatement		23:18:209:209	3475061	1					
ANR	3475127	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Too high symbol frequencies. Tree construction is not possible\\n"" )"	29:8:362:457	3475061	0	True				
ANR	3475128	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Too high symbol frequencies. Tree construction is not possible\\n"" )"		3475061	0					
ANR	3475129	Callee	av_log		3475061	0					
ANR	3475130	Identifier	av_log		3475061	0					
ANR	3475131	ArgumentList	avctx		3475061	1					
ANR	3475132	Argument	avctx		3475061	0					
ANR	3475133	Identifier	avctx		3475061	0					
ANR	3475134	Argument	AV_LOG_ERROR		3475061	1					
ANR	3475135	Identifier	AV_LOG_ERROR		3475061	0					
ANR	3475136	Argument	"""Too high symbol frequencies. Tree construction is not possible\\n"""		3475061	2					
ANR	3475137	PrimaryExpression	"""Too high symbol frequencies. Tree construction is not possible\\n"""		3475061	0					
ANR	3475138	ReturnStatement	return - 1 ;	31:8:468:477	3475061	1	True				
ANR	3475139	UnaryOperationExpression	- 1		3475061	0					
ANR	3475140	UnaryOperator	-		3475061	0					
ANR	3475141	PrimaryExpression	1		3475061	1					
ANR	3475142	ExpressionStatement	"qsort ( nodes , nb_codes , sizeof ( Node ) , cmp )"	35:4:491:532	3475061	5	True				
ANR	3475143	CallExpression	"qsort ( nodes , nb_codes , sizeof ( Node ) , cmp )"		3475061	0					
ANR	3475144	Callee	qsort		3475061	0					
ANR	3475145	Identifier	qsort		3475061	0					
ANR	3475146	ArgumentList	nodes		3475061	1					
ANR	3475147	Argument	nodes		3475061	0					
ANR	3475148	Identifier	nodes		3475061	0					
ANR	3475149	Argument	nb_codes		3475061	1					
ANR	3475150	Identifier	nb_codes		3475061	0					
ANR	3475151	Argument	sizeof ( Node )		3475061	2					
ANR	3475152	SizeofExpression	sizeof ( Node )		3475061	0					
ANR	3475153	Sizeof	sizeof		3475061	0					
ANR	3475154	SizeofOperand	Node		3475061	1					
ANR	3475155	Argument	cmp		3475061	3					
ANR	3475156	Identifier	cmp		3475061	0					
ANR	3475157	ExpressionStatement	cur_node = nb_codes	37:4:539:558	3475061	6	True				
ANR	3475158	AssignmentExpression	cur_node = nb_codes		3475061	0		=			
ANR	3475159	Identifier	cur_node		3475061	0					
ANR	3475160	Identifier	nb_codes		3475061	1					
ANR	3475161	ForStatement	for ( i = 0 ; i < nb_codes * 2 - 1 ; i += 2 )		3475061	7					
ANR	3475162	ForInit	i = 0 ;	40:8:570:575	3475061	0	True				
ANR	3475163	AssignmentExpression	i = 0		3475061	0		=			
ANR	3475164	Identifier	i		3475061	0					
ANR	3475165	PrimaryExpression	0		3475061	1					
ANR	3475166	Condition	i < nb_codes * 2 - 1	40:15:577:592	3475061	1	True				
ANR	3475167	RelationalExpression	i < nb_codes * 2 - 1		3475061	0		<			
ANR	3475168	Identifier	i		3475061	0					
ANR	3475169	AdditiveExpression	nb_codes * 2 - 1		3475061	1		-			
ANR	3475170	MultiplicativeExpression	nb_codes * 2		3475061	0		*			
ANR	3475171	Identifier	nb_codes		3475061	0					
ANR	3475172	PrimaryExpression	2		3475061	1					
ANR	3475173	PrimaryExpression	1		3475061	1					
ANR	3475174	AssignmentExpression	i += 2	40:33:595:600	3475061	2	True	+=			
ANR	3475175	Identifier	i		3475061	0					
ANR	3475176	PrimaryExpression	2		3475061	1					
ANR	3475177	CompoundStatement		36:40:460:460	3475061	3					
ANR	3475178	ExpressionStatement	nodes [ cur_node ] . sym = HNODE	42:8:613:640	3475061	0	True				
ANR	3475179	AssignmentExpression	nodes [ cur_node ] . sym = HNODE		3475061	0		=			
ANR	3475180	MemberAccess	nodes [ cur_node ] . sym		3475061	0					
ANR	3475181	ArrayIndexing	nodes [ cur_node ]		3475061	0					
ANR	3475182	Identifier	nodes		3475061	0					
ANR	3475183	Identifier	cur_node		3475061	1					
ANR	3475184	Identifier	sym		3475061	1					
ANR	3475185	Identifier	HNODE		3475061	1					
ANR	3475186	ExpressionStatement	nodes [ cur_node ] . count = nodes [ i ] . count + nodes [ i + 1 ] . count	44:8:651:708	3475061	1	True				
ANR	3475187	AssignmentExpression	nodes [ cur_node ] . count = nodes [ i ] . count + nodes [ i + 1 ] . count		3475061	0		=			
ANR	3475188	MemberAccess	nodes [ cur_node ] . count		3475061	0					
ANR	3475189	ArrayIndexing	nodes [ cur_node ]		3475061	0					
ANR	3475190	Identifier	nodes		3475061	0					
ANR	3475191	Identifier	cur_node		3475061	1					
ANR	3475192	Identifier	count		3475061	1					
ANR	3475193	AdditiveExpression	nodes [ i ] . count + nodes [ i + 1 ] . count		3475061	1		+			
ANR	3475194	MemberAccess	nodes [ i ] . count		3475061	0					
ANR	3475195	ArrayIndexing	nodes [ i ]		3475061	0					
ANR	3475196	Identifier	nodes		3475061	0					
ANR	3475197	Identifier	i		3475061	1					
ANR	3475198	Identifier	count		3475061	1					
ANR	3475199	MemberAccess	nodes [ i + 1 ] . count		3475061	1					
ANR	3475200	ArrayIndexing	nodes [ i + 1 ]		3475061	0					
ANR	3475201	Identifier	nodes		3475061	0					
ANR	3475202	AdditiveExpression	i + 1		3475061	1		+			
ANR	3475203	Identifier	i		3475061	0					
ANR	3475204	PrimaryExpression	1		3475061	1					
ANR	3475205	Identifier	count		3475061	1					
ANR	3475206	ExpressionStatement	nodes [ cur_node ] . n0 = i	46:8:719:741	3475061	2	True				
ANR	3475207	AssignmentExpression	nodes [ cur_node ] . n0 = i		3475061	0		=			
ANR	3475208	MemberAccess	nodes [ cur_node ] . n0		3475061	0					
ANR	3475209	ArrayIndexing	nodes [ cur_node ]		3475061	0					
ANR	3475210	Identifier	nodes		3475061	0					
ANR	3475211	Identifier	cur_node		3475061	1					
ANR	3475212	Identifier	n0		3475061	1					
ANR	3475213	Identifier	i		3475061	1					
ANR	3475214	ForStatement	for ( j = cur_node ; j > 0 ; j -- )		3475061	3					
ANR	3475215	ForInit	j = cur_node ;	48:12:756:768	3475061	0	True				
ANR	3475216	AssignmentExpression	j = cur_node		3475061	0		=			
ANR	3475217	Identifier	j		3475061	0					
ANR	3475218	Identifier	cur_node		3475061	1					
ANR	3475219	Condition	j > 0	48:26:770:774	3475061	1	True				
ANR	3475220	RelationalExpression	j > 0		3475061	0		>			
ANR	3475221	Identifier	j		3475061	0					
ANR	3475222	PrimaryExpression	0		3475061	1					
ANR	3475223	PostIncDecOperationExpression	j --	48:33:777:779	3475061	2	True				
ANR	3475224	Identifier	j		3475061	0					
ANR	3475225	IncDec	--		3475061	1					
ANR	3475226	CompoundStatement		44:37:639:639	3475061	3					
ANR	3475227	IfStatement	if ( nodes [ j ] . count > nodes [ j - 1 ] . count || ( nodes [ j ] . count == nodes [ j - 1 ] . count && ( ! hnode_first || nodes [ j ] . n0 == j - 1 || nodes [ j ] . n0 == j - 2 || ( nodes [ j ] . sym != HNODE && nodes [ j - 1 ] . sym != HNODE ) ) ) )		3475061	0					
ANR	3475228	Condition	nodes [ j ] . count > nodes [ j - 1 ] . count || ( nodes [ j ] . count == nodes [ j - 1 ] . count && ( ! hnode_first || nodes [ j ] . n0 == j - 1 || nodes [ j ] . n0 == j - 2 || ( nodes [ j ] . sym != HNODE && nodes [ j - 1 ] . sym != HNODE ) ) )	50:15:799:1030	3475061	0	True				
ANR	3475229	OrExpression	nodes [ j ] . count > nodes [ j - 1 ] . count || ( nodes [ j ] . count == nodes [ j - 1 ] . count && ( ! hnode_first || nodes [ j ] . n0 == j - 1 || nodes [ j ] . n0 == j - 2 || ( nodes [ j ] . sym != HNODE && nodes [ j - 1 ] . sym != HNODE ) ) )		3475061	0		||			
ANR	3475230	RelationalExpression	nodes [ j ] . count > nodes [ j - 1 ] . count		3475061	0		>			
ANR	3475231	MemberAccess	nodes [ j ] . count		3475061	0					
ANR	3475232	ArrayIndexing	nodes [ j ]		3475061	0					
ANR	3475233	Identifier	nodes		3475061	0					
ANR	3475234	Identifier	j		3475061	1					
ANR	3475235	Identifier	count		3475061	1					
ANR	3475236	MemberAccess	nodes [ j - 1 ] . count		3475061	1					
ANR	3475237	ArrayIndexing	nodes [ j - 1 ]		3475061	0					
ANR	3475238	Identifier	nodes		3475061	0					
ANR	3475239	AdditiveExpression	j - 1		3475061	1		-			
ANR	3475240	Identifier	j		3475061	0					
ANR	3475241	PrimaryExpression	1		3475061	1					
ANR	3475242	Identifier	count		3475061	1					
ANR	3475243	AndExpression	nodes [ j ] . count == nodes [ j - 1 ] . count && ( ! hnode_first || nodes [ j ] . n0 == j - 1 || nodes [ j ] . n0 == j - 2 || ( nodes [ j ] . sym != HNODE && nodes [ j - 1 ] . sym != HNODE ) )		3475061	1		&&			
ANR	3475244	EqualityExpression	nodes [ j ] . count == nodes [ j - 1 ] . count		3475061	0		==			
ANR	3475245	MemberAccess	nodes [ j ] . count		3475061	0					
ANR	3475246	ArrayIndexing	nodes [ j ]		3475061	0					
ANR	3475247	Identifier	nodes		3475061	0					
ANR	3475248	Identifier	j		3475061	1					
ANR	3475249	Identifier	count		3475061	1					
ANR	3475250	MemberAccess	nodes [ j - 1 ] . count		3475061	1					
ANR	3475251	ArrayIndexing	nodes [ j - 1 ]		3475061	0					
ANR	3475252	Identifier	nodes		3475061	0					
ANR	3475253	AdditiveExpression	j - 1		3475061	1		-			
ANR	3475254	Identifier	j		3475061	0					
ANR	3475255	PrimaryExpression	1		3475061	1					
ANR	3475256	Identifier	count		3475061	1					
ANR	3475257	OrExpression	! hnode_first || nodes [ j ] . n0 == j - 1 || nodes [ j ] . n0 == j - 2 || ( nodes [ j ] . sym != HNODE && nodes [ j - 1 ] . sym != HNODE )		3475061	1		||			
ANR	3475258	UnaryOperationExpression	! hnode_first		3475061	0					
ANR	3475259	UnaryOperator	!		3475061	0					
ANR	3475260	Identifier	hnode_first		3475061	1					
ANR	3475261	OrExpression	nodes [ j ] . n0 == j - 1 || nodes [ j ] . n0 == j - 2 || ( nodes [ j ] . sym != HNODE && nodes [ j - 1 ] . sym != HNODE )		3475061	1		||			
ANR	3475262	EqualityExpression	nodes [ j ] . n0 == j - 1		3475061	0		==			
ANR	3475263	MemberAccess	nodes [ j ] . n0		3475061	0					
ANR	3475264	ArrayIndexing	nodes [ j ]		3475061	0					
ANR	3475265	Identifier	nodes		3475061	0					
ANR	3475266	Identifier	j		3475061	1					
ANR	3475267	Identifier	n0		3475061	1					
ANR	3475268	AdditiveExpression	j - 1		3475061	1		-			
ANR	3475269	Identifier	j		3475061	0					
ANR	3475270	PrimaryExpression	1		3475061	1					
ANR	3475271	OrExpression	nodes [ j ] . n0 == j - 2 || ( nodes [ j ] . sym != HNODE && nodes [ j - 1 ] . sym != HNODE )		3475061	1		||			
ANR	3475272	EqualityExpression	nodes [ j ] . n0 == j - 2		3475061	0		==			
ANR	3475273	MemberAccess	nodes [ j ] . n0		3475061	0					
ANR	3475274	ArrayIndexing	nodes [ j ]		3475061	0					
ANR	3475275	Identifier	nodes		3475061	0					
ANR	3475276	Identifier	j		3475061	1					
ANR	3475277	Identifier	n0		3475061	1					
ANR	3475278	AdditiveExpression	j - 2		3475061	1		-			
ANR	3475279	Identifier	j		3475061	0					
ANR	3475280	PrimaryExpression	2		3475061	1					
ANR	3475281	AndExpression	nodes [ j ] . sym != HNODE && nodes [ j - 1 ] . sym != HNODE		3475061	1		&&			
ANR	3475282	EqualityExpression	nodes [ j ] . sym != HNODE		3475061	0		!=			
ANR	3475283	MemberAccess	nodes [ j ] . sym		3475061	0					
ANR	3475284	ArrayIndexing	nodes [ j ]		3475061	0					
ANR	3475285	Identifier	nodes		3475061	0					
ANR	3475286	Identifier	j		3475061	1					
ANR	3475287	Identifier	sym		3475061	1					
ANR	3475288	Identifier	HNODE		3475061	1					
ANR	3475289	EqualityExpression	nodes [ j - 1 ] . sym != HNODE		3475061	1		!=			
ANR	3475290	MemberAccess	nodes [ j - 1 ] . sym		3475061	0					
ANR	3475291	ArrayIndexing	nodes [ j - 1 ]		3475061	0					
ANR	3475292	Identifier	nodes		3475061	0					
ANR	3475293	AdditiveExpression	j - 1		3475061	1		-			
ANR	3475294	Identifier	j		3475061	0					
ANR	3475295	PrimaryExpression	1		3475061	1					
ANR	3475296	Identifier	sym		3475061	1					
ANR	3475297	Identifier	HNODE		3475061	1					
ANR	3475298	BreakStatement	break ;	58:16:1050:1055	3475061	1	True				
ANR	3475299	ExpressionStatement	"FFSWAP ( Node , nodes [ j ] , nodes [ j - 1 ] )"	60:12:1070:1104	3475061	1	True				
ANR	3475300	CallExpression	"FFSWAP ( Node , nodes [ j ] , nodes [ j - 1 ] )"		3475061	0					
ANR	3475301	Callee	FFSWAP		3475061	0					
ANR	3475302	Identifier	FFSWAP		3475061	0					
ANR	3475303	ArgumentList	Node		3475061	1					
ANR	3475304	Argument	Node		3475061	0					
ANR	3475305	Identifier	Node		3475061	0					
ANR	3475306	Argument	nodes [ j ]		3475061	1					
ANR	3475307	ArrayIndexing	nodes [ j ]		3475061	0					
ANR	3475308	Identifier	nodes		3475061	0					
ANR	3475309	Identifier	j		3475061	1					
ANR	3475310	Argument	nodes [ j - 1 ]		3475061	2					
ANR	3475311	ArrayIndexing	nodes [ j - 1 ]		3475061	0					
ANR	3475312	Identifier	nodes		3475061	0					
ANR	3475313	AdditiveExpression	j - 1		3475061	1		-			
ANR	3475314	Identifier	j		3475061	0					
ANR	3475315	PrimaryExpression	1		3475061	1					
ANR	3475316	ExpressionStatement	cur_node ++	64:8:1126:1136	3475061	4	True				
ANR	3475317	PostIncDecOperationExpression	cur_node ++		3475061	0					
ANR	3475318	Identifier	cur_node		3475061	0					
ANR	3475319	IncDec	++		3475061	1					
ANR	3475320	IfStatement	"if ( build_huff_tree ( vlc , nodes , nb_codes * 2 - 2 ) < 0 )"		3475061	8					
ANR	3475321	Condition	"build_huff_tree ( vlc , nodes , nb_codes * 2 - 2 ) < 0"	68:7:1153:1197	3475061	0	True				
ANR	3475322	RelationalExpression	"build_huff_tree ( vlc , nodes , nb_codes * 2 - 2 ) < 0"		3475061	0		<			
ANR	3475323	CallExpression	"build_huff_tree ( vlc , nodes , nb_codes * 2 - 2 )"		3475061	0					
ANR	3475324	Callee	build_huff_tree		3475061	0					
ANR	3475325	Identifier	build_huff_tree		3475061	0					
ANR	3475326	ArgumentList	vlc		3475061	1					
ANR	3475327	Argument	vlc		3475061	0					
ANR	3475328	Identifier	vlc		3475061	0					
ANR	3475329	Argument	nodes		3475061	1					
ANR	3475330	Identifier	nodes		3475061	0					
ANR	3475331	Argument	nb_codes * 2 - 2		3475061	2					
ANR	3475332	AdditiveExpression	nb_codes * 2 - 2		3475061	0		-			
ANR	3475333	MultiplicativeExpression	nb_codes * 2		3475061	0		*			
ANR	3475334	Identifier	nb_codes		3475061	0					
ANR	3475335	PrimaryExpression	2		3475061	1					
ANR	3475336	PrimaryExpression	2		3475061	1					
ANR	3475337	PrimaryExpression	0		3475061	1					
ANR	3475338	CompoundStatement		64:53:1057:1057	3475061	1					
ANR	3475339	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Error building tree\\n"" )"	70:8:1210:1262	3475061	0	True				
ANR	3475340	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Error building tree\\n"" )"		3475061	0					
ANR	3475341	Callee	av_log		3475061	0					
ANR	3475342	Identifier	av_log		3475061	0					
ANR	3475343	ArgumentList	avctx		3475061	1					
ANR	3475344	Argument	avctx		3475061	0					
ANR	3475345	Identifier	avctx		3475061	0					
ANR	3475346	Argument	AV_LOG_ERROR		3475061	1					
ANR	3475347	Identifier	AV_LOG_ERROR		3475061	0					
ANR	3475348	Argument	"""Error building tree\\n"""		3475061	2					
ANR	3475349	PrimaryExpression	"""Error building tree\\n"""		3475061	0					
ANR	3475350	ReturnStatement	return - 1 ;	72:8:1273:1282	3475061	1	True				
ANR	3475351	UnaryOperationExpression	- 1		3475061	0					
ANR	3475352	UnaryOperator	-		3475061	0					
ANR	3475353	PrimaryExpression	1		3475061	1					
ANR	3475354	ReturnStatement	return 0 ;	76:4:1296:1304	3475061	9	True				
ANR	3475355	PrimaryExpression	0		3475061	0					
ANR	3475356	ReturnType	int		3475061	1					
ANR	3475357	Identifier	ff_huff_build_tree		3475061	2					
ANR	3475358	ParameterList	"AVCodecContext * avctx , VLC * vlc , int nb_codes , Node * nodes , huff_cmp_t cmp , int hnode_first"		3475061	3					
ANR	3475359	Parameter	AVCodecContext * avctx	1:23:23:43	3475061	0	True				
ANR	3475360	ParameterType	AVCodecContext *		3475061	0					
ANR	3475361	Identifier	avctx		3475061	1					
ANR	3475362	Parameter	VLC * vlc	1:46:46:53	3475061	1	True				
ANR	3475363	ParameterType	VLC *		3475061	0					
ANR	3475364	Identifier	vlc		3475061	1					
ANR	3475365	Parameter	int nb_codes	1:56:56:67	3475061	2	True				
ANR	3475366	ParameterType	int		3475061	0					
ANR	3475367	Identifier	nb_codes		3475061	1					
ANR	3475368	Parameter	Node * nodes	3:23:94:104	3475061	3	True				
ANR	3475369	ParameterType	Node *		3475061	0					
ANR	3475370	Identifier	nodes		3475061	1					
ANR	3475371	Parameter	huff_cmp_t cmp	3:36:107:120	3475061	4	True				
ANR	3475372	ParameterType	huff_cmp_t		3475061	0					
ANR	3475373	Identifier	cmp		3475061	1					
ANR	3475374	Parameter	int hnode_first	3:52:123:137	3475061	5	True				
ANR	3475375	ParameterType	int		3475061	0					
ANR	3475376	Identifier	hnode_first		3475061	1					
ANR	3475377	CFGEntryNode	ENTRY		3475061		True				
ANR	3475378	CFGExitNode	EXIT		3475061		True				
ANR	3475379	Symbol	nodes [ j ] . n0		3475061						
ANR	3475380	Symbol	hnode_first		3475061						
ANR	3475381	Symbol	nodes [ j ] . count		3475061						
ANR	3475382	Symbol	nodes [ cur_node ] . n0		3475061						
ANR	3475383	Symbol	nodes [ i + 1 ] . count		3475061						
ANR	3475384	Symbol	cmp		3475061						
ANR	3475385	Symbol	Node		3475061						
ANR	3475386	Symbol	* cur_node		3475061						
ANR	3475387	Symbol	sum		3475061						
ANR	3475388	Symbol	nodes [ cur_node ] . count		3475061						
ANR	3475389	Symbol	HNODE		3475061						
ANR	3475390	Symbol	* nodes		3475061						
ANR	3475391	Symbol	avctx		3475061						
ANR	3475392	Symbol	nodes [ cur_node ] . sym		3475061						
ANR	3475393	Symbol	nodes [ i ] . count		3475061						
ANR	3475394	Symbol	AV_LOG_ERROR		3475061						
ANR	3475395	Symbol	cur_node		3475061						
ANR	3475396	Symbol	nodes [ j ] . sym		3475061						
ANR	3475397	Symbol	i		3475061						
ANR	3475398	Symbol	j		3475061						
ANR	3475399	Symbol	vlc		3475061						
ANR	3475400	Symbol	nodes [ i ] . sym		3475061						
ANR	3475401	Symbol	build_huff_tree		3475061						
ANR	3475402	Symbol	nodes		3475061						
ANR	3475403	Symbol	* i		3475061						
ANR	3475404	Symbol	* j		3475061						
ANR	3475405	Symbol	nodes [ j - 1 ] . sym		3475061						
ANR	3475406	Symbol	nb_codes		3475061						
ANR	3475407	Symbol	nodes [ i ] . n0		3475061						
ANR	3475408	Symbol	nodes [ j - 1 ] . count		3475061						
