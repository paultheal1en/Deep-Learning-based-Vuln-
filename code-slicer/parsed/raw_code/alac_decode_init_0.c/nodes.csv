command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	509716	File	/home/p4ultr4n/workplace/ReVeal/raw_code/alac_decode_init_0.c								
ANR	509717	Function	alac_decode_init	1:0:0:1967							
ANR	509718	FunctionDef	alac_decode_init (AVCodecContext * avctx)		509717	0					
ANR	509719	CompoundStatement		3:0:61:1967	509717	0					
ANR	509720	IdentifierDeclStatement	int ret ;	5:4:68:75	509717	0	True				
ANR	509721	IdentifierDecl	ret		509717	0					
ANR	509722	IdentifierDeclType	int		509717	0					
ANR	509723	Identifier	ret		509717	1					
ANR	509724	IdentifierDeclStatement	int req_packed ;	7:4:82:96	509717	1	True				
ANR	509725	IdentifierDecl	req_packed		509717	0					
ANR	509726	IdentifierDeclType	int		509717	0					
ANR	509727	Identifier	req_packed		509717	1					
ANR	509728	IdentifierDeclStatement	ALACContext * alac = avctx -> priv_data ;	9:4:103:139	509717	2	True				
ANR	509729	IdentifierDecl	* alac = avctx -> priv_data		509717	0					
ANR	509730	IdentifierDeclType	ALACContext *		509717	0					
ANR	509731	Identifier	alac		509717	1					
ANR	509732	AssignmentExpression	* alac = avctx -> priv_data		509717	2		=			
ANR	509733	Identifier	alac		509717	0					
ANR	509734	PtrMemberAccess	avctx -> priv_data		509717	1					
ANR	509735	Identifier	avctx		509717	0					
ANR	509736	Identifier	priv_data		509717	1					
ANR	509737	ExpressionStatement	alac -> avctx = avctx	11:4:146:165	509717	3	True				
ANR	509738	AssignmentExpression	alac -> avctx = avctx		509717	0		=			
ANR	509739	PtrMemberAccess	alac -> avctx		509717	0					
ANR	509740	Identifier	alac		509717	0					
ANR	509741	Identifier	avctx		509717	1					
ANR	509742	Identifier	avctx		509717	1					
ANR	509743	IfStatement	if ( alac -> avctx -> extradata_size != ALAC_EXTRADATA_SIZE )		509717	4					
ANR	509744	Condition	alac -> avctx -> extradata_size != ALAC_EXTRADATA_SIZE	17:8:219:268	509717	0	True				
ANR	509745	EqualityExpression	alac -> avctx -> extradata_size != ALAC_EXTRADATA_SIZE		509717	0		!=			
ANR	509746	PtrMemberAccess	alac -> avctx -> extradata_size		509717	0					
ANR	509747	PtrMemberAccess	alac -> avctx		509717	0					
ANR	509748	Identifier	alac		509717	0					
ANR	509749	Identifier	avctx		509717	1					
ANR	509750	Identifier	extradata_size		509717	1					
ANR	509751	Identifier	ALAC_EXTRADATA_SIZE		509717	1					
ANR	509752	CompoundStatement		15:60:209:209	509717	1					
ANR	509753	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""expected %d extradata bytes\\n"" , ALAC_EXTRADATA_SIZE )"	19:8:282:376	509717	0	True				
ANR	509754	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""expected %d extradata bytes\\n"" , ALAC_EXTRADATA_SIZE )"		509717	0					
ANR	509755	Callee	av_log		509717	0					
ANR	509756	Identifier	av_log		509717	0					
ANR	509757	ArgumentList	avctx		509717	1					
ANR	509758	Argument	avctx		509717	0					
ANR	509759	Identifier	avctx		509717	0					
ANR	509760	Argument	AV_LOG_ERROR		509717	1					
ANR	509761	Identifier	AV_LOG_ERROR		509717	0					
ANR	509762	Argument	"""expected %d extradata bytes\\n"""		509717	2					
ANR	509763	PrimaryExpression	"""expected %d extradata bytes\\n"""		509717	0					
ANR	509764	Argument	ALAC_EXTRADATA_SIZE		509717	3					
ANR	509765	Identifier	ALAC_EXTRADATA_SIZE		509717	0					
ANR	509766	ReturnStatement	return - 1 ;	23:8:387:396	509717	1	True				
ANR	509767	UnaryOperationExpression	- 1		509717	0					
ANR	509768	UnaryOperator	-		509717	0					
ANR	509769	PrimaryExpression	1		509717	1					
ANR	509770	IfStatement	if ( alac_set_info ( alac ) )		509717	5					
ANR	509771	Condition	alac_set_info ( alac )	27:8:414:432	509717	0	True				
ANR	509772	CallExpression	alac_set_info ( alac )		509717	0					
ANR	509773	Callee	alac_set_info		509717	0					
ANR	509774	Identifier	alac_set_info		509717	0					
ANR	509775	ArgumentList	alac		509717	1					
ANR	509776	Argument	alac		509717	0					
ANR	509777	Identifier	alac		509717	0					
ANR	509778	CompoundStatement		25:29:373:373	509717	1					
ANR	509779	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""set_info failed\\n"" )"	29:8:446:494	509717	0	True				
ANR	509780	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""set_info failed\\n"" )"		509717	0					
ANR	509781	Callee	av_log		509717	0					
ANR	509782	Identifier	av_log		509717	0					
ANR	509783	ArgumentList	avctx		509717	1					
ANR	509784	Argument	avctx		509717	0					
ANR	509785	Identifier	avctx		509717	0					
ANR	509786	Argument	AV_LOG_ERROR		509717	1					
ANR	509787	Identifier	AV_LOG_ERROR		509717	0					
ANR	509788	Argument	"""set_info failed\\n"""		509717	2					
ANR	509789	PrimaryExpression	"""set_info failed\\n"""		509717	0					
ANR	509790	ReturnStatement	return - 1 ;	31:8:505:514	509717	1	True				
ANR	509791	UnaryOperationExpression	- 1		509717	0					
ANR	509792	UnaryOperator	-		509717	0					
ANR	509793	PrimaryExpression	1		509717	1					
ANR	509794	ExpressionStatement	req_packed = LIBAVCODEC_VERSION_MAJOR < 55 && ! av_sample_fmt_is_planar ( avctx -> request_sample_fmt )	37:4:530:627	509717	6	True				
ANR	509795	AssignmentExpression	req_packed = LIBAVCODEC_VERSION_MAJOR < 55 && ! av_sample_fmt_is_planar ( avctx -> request_sample_fmt )		509717	0		=			
ANR	509796	Identifier	req_packed		509717	0					
ANR	509797	AndExpression	LIBAVCODEC_VERSION_MAJOR < 55 && ! av_sample_fmt_is_planar ( avctx -> request_sample_fmt )		509717	1		&&			
ANR	509798	RelationalExpression	LIBAVCODEC_VERSION_MAJOR < 55		509717	0		<			
ANR	509799	Identifier	LIBAVCODEC_VERSION_MAJOR		509717	0					
ANR	509800	PrimaryExpression	55		509717	1					
ANR	509801	UnaryOperationExpression	! av_sample_fmt_is_planar ( avctx -> request_sample_fmt )		509717	1					
ANR	509802	UnaryOperator	!		509717	0					
ANR	509803	CallExpression	av_sample_fmt_is_planar ( avctx -> request_sample_fmt )		509717	1					
ANR	509804	Callee	av_sample_fmt_is_planar		509717	0					
ANR	509805	Identifier	av_sample_fmt_is_planar		509717	0					
ANR	509806	ArgumentList	avctx -> request_sample_fmt		509717	1					
ANR	509807	Argument	avctx -> request_sample_fmt		509717	0					
ANR	509808	PtrMemberAccess	avctx -> request_sample_fmt		509717	0					
ANR	509809	Identifier	avctx		509717	0					
ANR	509810	Identifier	request_sample_fmt		509717	1					
ANR	509811	SwitchStatement	switch ( alac -> sample_size )		509717	7					
ANR	509812	Condition	alac -> sample_size	39:12:642:658	509717	0	True				
ANR	509813	PtrMemberAccess	alac -> sample_size		509717	0					
ANR	509814	Identifier	alac		509717	0					
ANR	509815	Identifier	sample_size		509717	1					
ANR	509816	CompoundStatement		37:31:599:599	509717	1					
ANR	509817	Label	case 16 :	41:4:668:675	509717	0	True				
ANR	509818	ExpressionStatement	avctx -> sample_fmt = req_packed ? AV_SAMPLE_FMT_S16 : AV_SAMPLE_FMT_S16P	41:13:677:748	509717	1	True				
ANR	509819	AssignmentExpression	avctx -> sample_fmt = req_packed ? AV_SAMPLE_FMT_S16 : AV_SAMPLE_FMT_S16P		509717	0		=			
ANR	509820	PtrMemberAccess	avctx -> sample_fmt		509717	0					
ANR	509821	Identifier	avctx		509717	0					
ANR	509822	Identifier	sample_fmt		509717	1					
ANR	509823	ConditionalExpression	req_packed ? AV_SAMPLE_FMT_S16 : AV_SAMPLE_FMT_S16P		509717	1					
ANR	509824	Condition	req_packed		509717	0					
ANR	509825	Identifier	req_packed		509717	0					
ANR	509826	Identifier	AV_SAMPLE_FMT_S16		509717	1					
ANR	509827	Identifier	AV_SAMPLE_FMT_S16P		509717	2					
ANR	509828	BreakStatement	break ;	43:13:764:769	509717	2	True				
ANR	509829	Label	case 24 :	45:4:776:783	509717	3	True				
ANR	509830	Label	case 32 :	47:4:790:797	509717	4	True				
ANR	509831	ExpressionStatement	avctx -> sample_fmt = req_packed ? AV_SAMPLE_FMT_S32 : AV_SAMPLE_FMT_S32P	47:13:799:870	509717	5	True				
ANR	509832	AssignmentExpression	avctx -> sample_fmt = req_packed ? AV_SAMPLE_FMT_S32 : AV_SAMPLE_FMT_S32P		509717	0		=			
ANR	509833	PtrMemberAccess	avctx -> sample_fmt		509717	0					
ANR	509834	Identifier	avctx		509717	0					
ANR	509835	Identifier	sample_fmt		509717	1					
ANR	509836	ConditionalExpression	req_packed ? AV_SAMPLE_FMT_S32 : AV_SAMPLE_FMT_S32P		509717	1					
ANR	509837	Condition	req_packed		509717	0					
ANR	509838	Identifier	req_packed		509717	0					
ANR	509839	Identifier	AV_SAMPLE_FMT_S32		509717	1					
ANR	509840	Identifier	AV_SAMPLE_FMT_S32P		509717	2					
ANR	509841	BreakStatement	break ;	49:13:886:891	509717	6	True				
ANR	509842	Label	default :	51:4:898:905	509717	7	True				
ANR	509843	Identifier	default		509717	0					
ANR	509844	ExpressionStatement	"av_log_ask_for_sample ( avctx , ""Sample depth %d is not supported.\\n"" , alac -> sample_size )"	51:13:907:1029	509717	8	True				
ANR	509845	CallExpression	"av_log_ask_for_sample ( avctx , ""Sample depth %d is not supported.\\n"" , alac -> sample_size )"		509717	0					
ANR	509846	Callee	av_log_ask_for_sample		509717	0					
ANR	509847	Identifier	av_log_ask_for_sample		509717	0					
ANR	509848	ArgumentList	avctx		509717	1					
ANR	509849	Argument	avctx		509717	0					
ANR	509850	Identifier	avctx		509717	0					
ANR	509851	Argument	"""Sample depth %d is not supported.\\n"""		509717	1					
ANR	509852	PrimaryExpression	"""Sample depth %d is not supported.\\n"""		509717	0					
ANR	509853	Argument	alac -> sample_size		509717	2					
ANR	509854	PtrMemberAccess	alac -> sample_size		509717	0					
ANR	509855	Identifier	alac		509717	0					
ANR	509856	Identifier	sample_size		509717	1					
ANR	509857	ReturnStatement	return AVERROR_PATCHWELCOME ;	55:13:1045:1072	509717	9	True				
ANR	509858	Identifier	AVERROR_PATCHWELCOME		509717	0					
ANR	509859	ExpressionStatement	avctx -> bits_per_raw_sample = alac -> sample_size	59:4:1086:1132	509717	8	True				
ANR	509860	AssignmentExpression	avctx -> bits_per_raw_sample = alac -> sample_size		509717	0		=			
ANR	509861	PtrMemberAccess	avctx -> bits_per_raw_sample		509717	0					
ANR	509862	Identifier	avctx		509717	0					
ANR	509863	Identifier	bits_per_raw_sample		509717	1					
ANR	509864	PtrMemberAccess	alac -> sample_size		509717	1					
ANR	509865	Identifier	alac		509717	0					
ANR	509866	Identifier	sample_size		509717	1					
ANR	509867	IfStatement	if ( alac -> channels < 1 )		509717	9					
ANR	509868	Condition	alac -> channels < 1	63:8:1145:1162	509717	0	True				
ANR	509869	RelationalExpression	alac -> channels < 1		509717	0		<			
ANR	509870	PtrMemberAccess	alac -> channels		509717	0					
ANR	509871	Identifier	alac		509717	0					
ANR	509872	Identifier	channels		509717	1					
ANR	509873	PrimaryExpression	1		509717	1					
ANR	509874	CompoundStatement		61:28:1103:1103	509717	1					
ANR	509875	ExpressionStatement	"av_log ( avctx , AV_LOG_WARNING , ""Invalid channel count\\n"" )"	65:8:1176:1232	509717	0	True				
ANR	509876	CallExpression	"av_log ( avctx , AV_LOG_WARNING , ""Invalid channel count\\n"" )"		509717	0					
ANR	509877	Callee	av_log		509717	0					
ANR	509878	Identifier	av_log		509717	0					
ANR	509879	ArgumentList	avctx		509717	1					
ANR	509880	Argument	avctx		509717	0					
ANR	509881	Identifier	avctx		509717	0					
ANR	509882	Argument	AV_LOG_WARNING		509717	1					
ANR	509883	Identifier	AV_LOG_WARNING		509717	0					
ANR	509884	Argument	"""Invalid channel count\\n"""		509717	2					
ANR	509885	PrimaryExpression	"""Invalid channel count\\n"""		509717	0					
ANR	509886	ExpressionStatement	alac -> channels = avctx -> channels	67:8:1243:1275	509717	1	True				
ANR	509887	AssignmentExpression	alac -> channels = avctx -> channels		509717	0		=			
ANR	509888	PtrMemberAccess	alac -> channels		509717	0					
ANR	509889	Identifier	alac		509717	0					
ANR	509890	Identifier	channels		509717	1					
ANR	509891	PtrMemberAccess	avctx -> channels		509717	1					
ANR	509892	Identifier	avctx		509717	0					
ANR	509893	Identifier	channels		509717	1					
ANR	509894	ElseStatement	else		509717	0					
ANR	509895	CompoundStatement		67:11:1227:1227	509717	0					
ANR	509896	IfStatement	if ( alac -> channels > MAX_CHANNELS )		509717	0					
ANR	509897	Condition	alac -> channels > MAX_CHANNELS	71:12:1304:1332	509717	0	True				
ANR	509898	RelationalExpression	alac -> channels > MAX_CHANNELS		509717	0		>			
ANR	509899	PtrMemberAccess	alac -> channels		509717	0					
ANR	509900	Identifier	alac		509717	0					
ANR	509901	Identifier	channels		509717	1					
ANR	509902	Identifier	MAX_CHANNELS		509717	1					
ANR	509903	ExpressionStatement	alac -> channels = avctx -> channels	73:12:1348:1380	509717	1	True				
ANR	509904	AssignmentExpression	alac -> channels = avctx -> channels		509717	0		=			
ANR	509905	PtrMemberAccess	alac -> channels		509717	0					
ANR	509906	Identifier	alac		509717	0					
ANR	509907	Identifier	channels		509717	1					
ANR	509908	PtrMemberAccess	avctx -> channels		509717	1					
ANR	509909	Identifier	avctx		509717	0					
ANR	509910	Identifier	channels		509717	1					
ANR	509911	ElseStatement	else		509717	0					
ANR	509912	ExpressionStatement	avctx -> channels = alac -> channels	77:12:1409:1441	509717	0	True				
ANR	509913	AssignmentExpression	avctx -> channels = alac -> channels		509717	0		=			
ANR	509914	PtrMemberAccess	avctx -> channels		509717	0					
ANR	509915	Identifier	avctx		509717	0					
ANR	509916	Identifier	channels		509717	1					
ANR	509917	PtrMemberAccess	alac -> channels		509717	1					
ANR	509918	Identifier	alac		509717	0					
ANR	509919	Identifier	channels		509717	1					
ANR	509920	IfStatement	if ( avctx -> channels > MAX_CHANNELS )		509717	10					
ANR	509921	Condition	avctx -> channels > MAX_CHANNELS	81:8:1459:1488	509717	0	True				
ANR	509922	RelationalExpression	avctx -> channels > MAX_CHANNELS		509717	0		>			
ANR	509923	PtrMemberAccess	avctx -> channels		509717	0					
ANR	509924	Identifier	avctx		509717	0					
ANR	509925	Identifier	channels		509717	1					
ANR	509926	Identifier	MAX_CHANNELS		509717	1					
ANR	509927	CompoundStatement		79:40:1429:1429	509717	1					
ANR	509928	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Unsupported channel count: %d\\n"" , avctx -> channels )"	83:8:1502:1597	509717	0	True				
ANR	509929	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Unsupported channel count: %d\\n"" , avctx -> channels )"		509717	0					
ANR	509930	Callee	av_log		509717	0					
ANR	509931	Identifier	av_log		509717	0					
ANR	509932	ArgumentList	avctx		509717	1					
ANR	509933	Argument	avctx		509717	0					
ANR	509934	Identifier	avctx		509717	0					
ANR	509935	Argument	AV_LOG_ERROR		509717	1					
ANR	509936	Identifier	AV_LOG_ERROR		509717	0					
ANR	509937	Argument	"""Unsupported channel count: %d\\n"""		509717	2					
ANR	509938	PrimaryExpression	"""Unsupported channel count: %d\\n"""		509717	0					
ANR	509939	Argument	avctx -> channels		509717	3					
ANR	509940	PtrMemberAccess	avctx -> channels		509717	0					
ANR	509941	Identifier	avctx		509717	0					
ANR	509942	Identifier	channels		509717	1					
ANR	509943	ReturnStatement	return AVERROR_PATCHWELCOME ;	87:8:1608:1635	509717	1	True				
ANR	509944	Identifier	AVERROR_PATCHWELCOME		509717	0					
ANR	509945	ExpressionStatement	avctx -> channel_layout = alac_channel_layouts [ alac -> channels - 1 ]	91:4:1649:1713	509717	11	True				
ANR	509946	AssignmentExpression	avctx -> channel_layout = alac_channel_layouts [ alac -> channels - 1 ]		509717	0		=			
ANR	509947	PtrMemberAccess	avctx -> channel_layout		509717	0					
ANR	509948	Identifier	avctx		509717	0					
ANR	509949	Identifier	channel_layout		509717	1					
ANR	509950	ArrayIndexing	alac_channel_layouts [ alac -> channels - 1 ]		509717	1					
ANR	509951	Identifier	alac_channel_layouts		509717	0					
ANR	509952	AdditiveExpression	alac -> channels - 1		509717	1		-			
ANR	509953	PtrMemberAccess	alac -> channels		509717	0					
ANR	509954	Identifier	alac		509717	0					
ANR	509955	Identifier	channels		509717	1					
ANR	509956	PrimaryExpression	1		509717	1					
ANR	509957	IfStatement	if ( ( ret = allocate_buffers ( alac ) ) < 0 )		509717	12					
ANR	509958	Condition	( ret = allocate_buffers ( alac ) ) < 0	95:8:1726:1759	509717	0	True				
ANR	509959	RelationalExpression	( ret = allocate_buffers ( alac ) ) < 0		509717	0		<			
ANR	509960	AssignmentExpression	ret = allocate_buffers ( alac )		509717	0		=			
ANR	509961	Identifier	ret		509717	0					
ANR	509962	CallExpression	allocate_buffers ( alac )		509717	1					
ANR	509963	Callee	allocate_buffers		509717	0					
ANR	509964	Identifier	allocate_buffers		509717	0					
ANR	509965	ArgumentList	alac		509717	1					
ANR	509966	Argument	alac		509717	0					
ANR	509967	Identifier	alac		509717	0					
ANR	509968	PrimaryExpression	0		509717	1					
ANR	509969	CompoundStatement		93:44:1700:1700	509717	1					
ANR	509970	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Error allocating buffers\\n"" )"	97:8:1773:1830	509717	0	True				
ANR	509971	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Error allocating buffers\\n"" )"		509717	0					
ANR	509972	Callee	av_log		509717	0					
ANR	509973	Identifier	av_log		509717	0					
ANR	509974	ArgumentList	avctx		509717	1					
ANR	509975	Argument	avctx		509717	0					
ANR	509976	Identifier	avctx		509717	0					
ANR	509977	Argument	AV_LOG_ERROR		509717	1					
ANR	509978	Identifier	AV_LOG_ERROR		509717	0					
ANR	509979	Argument	"""Error allocating buffers\\n"""		509717	2					
ANR	509980	PrimaryExpression	"""Error allocating buffers\\n"""		509717	0					
ANR	509981	ReturnStatement	return ret ;	99:8:1841:1851	509717	1	True				
ANR	509982	Identifier	ret		509717	0					
ANR	509983	ExpressionStatement	avcodec_get_frame_defaults ( & alac -> frame )	105:4:1867:1907	509717	13	True				
ANR	509984	CallExpression	avcodec_get_frame_defaults ( & alac -> frame )		509717	0					
ANR	509985	Callee	avcodec_get_frame_defaults		509717	0					
ANR	509986	Identifier	avcodec_get_frame_defaults		509717	0					
ANR	509987	ArgumentList	& alac -> frame		509717	1					
ANR	509988	Argument	& alac -> frame		509717	0					
ANR	509989	UnaryOperationExpression	& alac -> frame		509717	0					
ANR	509990	UnaryOperator	&		509717	0					
ANR	509991	PtrMemberAccess	alac -> frame		509717	1					
ANR	509992	Identifier	alac		509717	0					
ANR	509993	Identifier	frame		509717	1					
ANR	509994	ExpressionStatement	avctx -> coded_frame = & alac -> frame	107:4:1914:1947	509717	14	True				
ANR	509995	AssignmentExpression	avctx -> coded_frame = & alac -> frame		509717	0		=			
ANR	509996	PtrMemberAccess	avctx -> coded_frame		509717	0					
ANR	509997	Identifier	avctx		509717	0					
ANR	509998	Identifier	coded_frame		509717	1					
ANR	509999	UnaryOperationExpression	& alac -> frame		509717	1					
ANR	510000	UnaryOperator	&		509717	0					
ANR	510001	PtrMemberAccess	alac -> frame		509717	1					
ANR	510002	Identifier	alac		509717	0					
ANR	510003	Identifier	frame		509717	1					
ANR	510004	ReturnStatement	return 0 ;	111:4:1956:1964	509717	15	True				
ANR	510005	PrimaryExpression	0		509717	0					
ANR	510006	ReturnType	static av_cold int		509717	1					
ANR	510007	Identifier	alac_decode_init		509717	2					
ANR	510008	ParameterList	AVCodecContext * avctx		509717	3					
ANR	510009	Parameter	AVCodecContext * avctx	1:36:36:57	509717	0	True				
ANR	510010	ParameterType	AVCodecContext *		509717	0					
ANR	510011	Identifier	avctx		509717	1					
ANR	510012	CFGEntryNode	ENTRY		509717		True				
ANR	510013	CFGExitNode	EXIT		509717		True				
ANR	510014	Symbol	AV_SAMPLE_FMT_S32		509717						
ANR	510015	Symbol	MAX_CHANNELS		509717						
ANR	510016	Symbol	LIBAVCODEC_VERSION_MAJOR		509717						
ANR	510017	Symbol	* alac -> avctx		509717						
ANR	510018	Symbol	AV_SAMPLE_FMT_S16		509717						
ANR	510019	Symbol	allocate_buffers		509717						
ANR	510020	Symbol	avctx -> channels		509717						
ANR	510021	Symbol	avctx -> bits_per_raw_sample		509717						
ANR	510022	Symbol	req_packed		509717						
ANR	510023	Symbol	avctx -> coded_frame		509717						
ANR	510024	Symbol	AVERROR_PATCHWELCOME		509717						
ANR	510025	Symbol	alac -> avctx -> extradata_size		509717						
ANR	510026	Symbol	* alac -> channels		509717						
ANR	510027	Symbol	avctx		509717						
ANR	510028	Symbol	* alac		509717						
ANR	510029	Symbol	ret		509717						
ANR	510030	Symbol	alac		509717						
ANR	510031	Symbol	avctx -> request_sample_fmt		509717						
ANR	510032	Symbol	avctx -> sample_fmt		509717						
ANR	510033	Symbol	alac -> channels		509717						
ANR	510034	Symbol	AV_LOG_ERROR		509717						
ANR	510035	Symbol	alac -> avctx		509717						
ANR	510036	Symbol	alac -> sample_size		509717						
ANR	510037	Symbol	AV_SAMPLE_FMT_S32P		509717						
ANR	510038	Symbol	AV_SAMPLE_FMT_S16P		509717						
ANR	510039	Symbol	avctx -> channel_layout		509717						
ANR	510040	Symbol	* alac_channel_layouts		509717						
ANR	510041	Symbol	avctx -> priv_data		509717						
ANR	510042	Symbol	* * alac		509717						
ANR	510043	Symbol	* avctx		509717						
ANR	510044	Symbol	& alac -> frame		509717						
ANR	510045	Symbol	alac_channel_layouts		509717						
ANR	510046	Symbol	alac_set_info		509717						
ANR	510047	Symbol	ALAC_EXTRADATA_SIZE		509717						
ANR	510048	Symbol	AV_LOG_WARNING		509717						
ANR	510049	Symbol	av_sample_fmt_is_planar		509717						
