command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1064805	File	/home/p4ultr4n/workplace/ReVeal/raw_code/blk_send_1.c								
ANR	1064806	Function	blk_send	1:0:0:924							
ANR	1064807	FunctionDef	"blk_send (QEMUFile * f , BlkMigBlock * blk)"		1064806	0					
ANR	1064808	CompoundStatement		3:0:54:924	1064806	0					
ANR	1064809	IdentifierDeclStatement	int len ;	5:4:61:68	1064806	0	True				
ANR	1064810	IdentifierDecl	len		1064806	0					
ANR	1064811	IdentifierDeclType	int		1064806	0					
ANR	1064812	Identifier	len		1064806	1					
ANR	1064813	IdentifierDeclStatement	uint64_t flags = BLK_MIG_FLAG_DEVICE_BLOCK ;	7:4:75:117	1064806	1	True				
ANR	1064814	IdentifierDecl	flags = BLK_MIG_FLAG_DEVICE_BLOCK		1064806	0					
ANR	1064815	IdentifierDeclType	uint64_t		1064806	0					
ANR	1064816	Identifier	flags		1064806	1					
ANR	1064817	AssignmentExpression	flags = BLK_MIG_FLAG_DEVICE_BLOCK		1064806	2		=			
ANR	1064818	Identifier	BLK_MIG_FLAG_DEVICE_BLOCK		1064806	0					
ANR	1064819	Identifier	BLK_MIG_FLAG_DEVICE_BLOCK		1064806	1					
ANR	1064820	IfStatement	"if ( block_mig_state . zero_blocks && buffer_is_zero ( blk -> buf , BLOCK_SIZE ) )"		1064806	2					
ANR	1064821	Condition	"block_mig_state . zero_blocks && buffer_is_zero ( blk -> buf , BLOCK_SIZE )"	11:8:130:205	1064806	0	True				
ANR	1064822	AndExpression	"block_mig_state . zero_blocks && buffer_is_zero ( blk -> buf , BLOCK_SIZE )"		1064806	0		&&			
ANR	1064823	MemberAccess	block_mig_state . zero_blocks		1064806	0					
ANR	1064824	Identifier	block_mig_state		1064806	0					
ANR	1064825	Identifier	zero_blocks		1064806	1					
ANR	1064826	CallExpression	"buffer_is_zero ( blk -> buf , BLOCK_SIZE )"		1064806	1					
ANR	1064827	Callee	buffer_is_zero		1064806	0					
ANR	1064828	Identifier	buffer_is_zero		1064806	0					
ANR	1064829	ArgumentList	blk -> buf		1064806	1					
ANR	1064830	Argument	blk -> buf		1064806	0					
ANR	1064831	PtrMemberAccess	blk -> buf		1064806	0					
ANR	1064832	Identifier	blk		1064806	0					
ANR	1064833	Identifier	buf		1064806	1					
ANR	1064834	Argument	BLOCK_SIZE		1064806	1					
ANR	1064835	Identifier	BLOCK_SIZE		1064806	0					
ANR	1064836	CompoundStatement		11:46:153:153	1064806	1					
ANR	1064837	ExpressionStatement	flags |= BLK_MIG_FLAG_ZERO_BLOCK	15:8:219:251	1064806	0	True				
ANR	1064838	AssignmentExpression	flags |= BLK_MIG_FLAG_ZERO_BLOCK		1064806	0		|=			
ANR	1064839	Identifier	flags		1064806	0					
ANR	1064840	Identifier	BLK_MIG_FLAG_ZERO_BLOCK		1064806	1					
ANR	1064841	ExpressionStatement	"qemu_put_be64 ( f , ( blk -> sector << BDRV_SECTOR_BITS ) | flags )"	23:4:302:383	1064806	3	True				
ANR	1064842	CallExpression	"qemu_put_be64 ( f , ( blk -> sector << BDRV_SECTOR_BITS ) | flags )"		1064806	0					
ANR	1064843	Callee	qemu_put_be64		1064806	0					
ANR	1064844	Identifier	qemu_put_be64		1064806	0					
ANR	1064845	ArgumentList	f		1064806	1					
ANR	1064846	Argument	f		1064806	0					
ANR	1064847	Identifier	f		1064806	0					
ANR	1064848	Argument	( blk -> sector << BDRV_SECTOR_BITS ) | flags		1064806	1					
ANR	1064849	InclusiveOrExpression	( blk -> sector << BDRV_SECTOR_BITS ) | flags		1064806	0		|			
ANR	1064850	ShiftExpression	blk -> sector << BDRV_SECTOR_BITS		1064806	0		<<			
ANR	1064851	PtrMemberAccess	blk -> sector		1064806	0					
ANR	1064852	Identifier	blk		1064806	0					
ANR	1064853	Identifier	sector		1064806	1					
ANR	1064854	Identifier	BDRV_SECTOR_BITS		1064806	1					
ANR	1064855	Identifier	flags		1064806	1					
ANR	1064856	ExpressionStatement	len = strlen ( bdrv_get_device_name ( blk -> bmds -> bs ) )	31:4:415:464	1064806	4	True				
ANR	1064857	AssignmentExpression	len = strlen ( bdrv_get_device_name ( blk -> bmds -> bs ) )		1064806	0		=			
ANR	1064858	Identifier	len		1064806	0					
ANR	1064859	CallExpression	strlen ( bdrv_get_device_name ( blk -> bmds -> bs ) )		1064806	1					
ANR	1064860	Callee	strlen		1064806	0					
ANR	1064861	Identifier	strlen		1064806	0					
ANR	1064862	ArgumentList	bdrv_get_device_name ( blk -> bmds -> bs )		1064806	1					
ANR	1064863	Argument	bdrv_get_device_name ( blk -> bmds -> bs )		1064806	0					
ANR	1064864	CallExpression	bdrv_get_device_name ( blk -> bmds -> bs )		1064806	0					
ANR	1064865	Callee	bdrv_get_device_name		1064806	0					
ANR	1064866	Identifier	bdrv_get_device_name		1064806	0					
ANR	1064867	ArgumentList	blk -> bmds -> bs		1064806	1					
ANR	1064868	Argument	blk -> bmds -> bs		1064806	0					
ANR	1064869	PtrMemberAccess	blk -> bmds -> bs		1064806	0					
ANR	1064870	PtrMemberAccess	blk -> bmds		1064806	0					
ANR	1064871	Identifier	blk		1064806	0					
ANR	1064872	Identifier	bmds		1064806	1					
ANR	1064873	Identifier	bs		1064806	1					
ANR	1064874	ExpressionStatement	"qemu_put_byte ( f , len )"	33:4:471:492	1064806	5	True				
ANR	1064875	CallExpression	"qemu_put_byte ( f , len )"		1064806	0					
ANR	1064876	Callee	qemu_put_byte		1064806	0					
ANR	1064877	Identifier	qemu_put_byte		1064806	0					
ANR	1064878	ArgumentList	f		1064806	1					
ANR	1064879	Argument	f		1064806	0					
ANR	1064880	Identifier	f		1064806	0					
ANR	1064881	Argument	len		1064806	1					
ANR	1064882	Identifier	len		1064806	0					
ANR	1064883	ExpressionStatement	"qemu_put_buffer ( f , ( uint8_t * ) bdrv_get_device_name ( blk -> bmds -> bs ) , len )"	35:4:499:570	1064806	6	True				
ANR	1064884	CallExpression	"qemu_put_buffer ( f , ( uint8_t * ) bdrv_get_device_name ( blk -> bmds -> bs ) , len )"		1064806	0					
ANR	1064885	Callee	qemu_put_buffer		1064806	0					
ANR	1064886	Identifier	qemu_put_buffer		1064806	0					
ANR	1064887	ArgumentList	f		1064806	1					
ANR	1064888	Argument	f		1064806	0					
ANR	1064889	Identifier	f		1064806	0					
ANR	1064890	Argument	( uint8_t * ) bdrv_get_device_name ( blk -> bmds -> bs )		1064806	1					
ANR	1064891	CastExpression	( uint8_t * ) bdrv_get_device_name ( blk -> bmds -> bs )		1064806	0					
ANR	1064892	CastTarget	uint8_t *		1064806	0					
ANR	1064893	CallExpression	bdrv_get_device_name ( blk -> bmds -> bs )		1064806	1					
ANR	1064894	Callee	bdrv_get_device_name		1064806	0					
ANR	1064895	Identifier	bdrv_get_device_name		1064806	0					
ANR	1064896	ArgumentList	blk -> bmds -> bs		1064806	1					
ANR	1064897	Argument	blk -> bmds -> bs		1064806	0					
ANR	1064898	PtrMemberAccess	blk -> bmds -> bs		1064806	0					
ANR	1064899	PtrMemberAccess	blk -> bmds		1064806	0					
ANR	1064900	Identifier	blk		1064806	0					
ANR	1064901	Identifier	bmds		1064806	1					
ANR	1064902	Identifier	bs		1064806	1					
ANR	1064903	Argument	len		1064806	2					
ANR	1064904	Identifier	len		1064806	0					
ANR	1064905	IfStatement	if ( flags & BLK_MIG_FLAG_ZERO_BLOCK )		1064806	7					
ANR	1064906	Condition	flags & BLK_MIG_FLAG_ZERO_BLOCK	45:8:790:820	1064806	0	True				
ANR	1064907	BitAndExpression	flags & BLK_MIG_FLAG_ZERO_BLOCK		1064806	0		&			
ANR	1064908	Identifier	flags		1064806	0					
ANR	1064909	Identifier	BLK_MIG_FLAG_ZERO_BLOCK		1064806	1					
ANR	1064910	CompoundStatement		43:41:768:768	1064806	1					
ANR	1064911	ExpressionStatement	qemu_fflush ( f )	47:8:834:848	1064806	0	True				
ANR	1064912	CallExpression	qemu_fflush ( f )		1064806	0					
ANR	1064913	Callee	qemu_fflush		1064806	0					
ANR	1064914	Identifier	qemu_fflush		1064806	0					
ANR	1064915	ArgumentList	f		1064806	1					
ANR	1064916	Argument	f		1064806	0					
ANR	1064917	Identifier	f		1064806	0					
ANR	1064918	ReturnStatement	return ;	49:8:859:865	1064806	1	True				
ANR	1064919	ExpressionStatement	"qemu_put_buffer ( f , blk -> buf , BLOCK_SIZE )"	55:4:881:921	1064806	8	True				
ANR	1064920	CallExpression	"qemu_put_buffer ( f , blk -> buf , BLOCK_SIZE )"		1064806	0					
ANR	1064921	Callee	qemu_put_buffer		1064806	0					
ANR	1064922	Identifier	qemu_put_buffer		1064806	0					
ANR	1064923	ArgumentList	f		1064806	1					
ANR	1064924	Argument	f		1064806	0					
ANR	1064925	Identifier	f		1064806	0					
ANR	1064926	Argument	blk -> buf		1064806	1					
ANR	1064927	PtrMemberAccess	blk -> buf		1064806	0					
ANR	1064928	Identifier	blk		1064806	0					
ANR	1064929	Identifier	buf		1064806	1					
ANR	1064930	Argument	BLOCK_SIZE		1064806	2					
ANR	1064931	Identifier	BLOCK_SIZE		1064806	0					
ANR	1064932	ReturnType	static void		1064806	1					
ANR	1064933	Identifier	blk_send		1064806	2					
ANR	1064934	ParameterList	"QEMUFile * f , BlkMigBlock * blk"		1064806	3					
ANR	1064935	Parameter	QEMUFile * f	1:21:21:31	1064806	0	True				
ANR	1064936	ParameterType	QEMUFile *		1064806	0					
ANR	1064937	Identifier	f		1064806	1					
ANR	1064938	Parameter	BlkMigBlock * blk	1:34:34:50	1064806	1	True				
ANR	1064939	ParameterType	BlkMigBlock *		1064806	0					
ANR	1064940	Identifier	blk		1064806	1					
ANR	1064941	CFGEntryNode	ENTRY		1064806		True				
ANR	1064942	CFGExitNode	EXIT		1064806		True				
ANR	1064943	Symbol	blk		1064806						
ANR	1064944	Symbol	block_mig_state . zero_blocks		1064806						
ANR	1064945	Symbol	blk -> sector		1064806						
ANR	1064946	Symbol	* blk -> bmds		1064806						
ANR	1064947	Symbol	f		1064806						
ANR	1064948	Symbol	blk -> buf		1064806						
ANR	1064949	Symbol	flags		1064806						
ANR	1064950	Symbol	BLOCK_SIZE		1064806						
ANR	1064951	Symbol	BDRV_SECTOR_BITS		1064806						
ANR	1064952	Symbol	buffer_is_zero		1064806						
ANR	1064953	Symbol	strlen		1064806						
ANR	1064954	Symbol	blk -> bmds -> bs		1064806						
ANR	1064955	Symbol	bdrv_get_device_name		1064806						
ANR	1064956	Symbol	len		1064806						
ANR	1064957	Symbol	* blk		1064806						
ANR	1064958	Symbol	BLK_MIG_FLAG_ZERO_BLOCK		1064806						
ANR	1064959	Symbol	blk -> bmds		1064806						
ANR	1064960	Symbol	* * blk		1064806						
ANR	1064961	Symbol	block_mig_state		1064806						
ANR	1064962	Symbol	BLK_MIG_FLAG_DEVICE_BLOCK		1064806						
