command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1291208	File	/home/p4ultr4n/workplace/ReVeal/raw_code/choose_pixel_fmt_0.c								
ANR	1291209	Function	choose_pixel_fmt	1:0:0:1599							
ANR	1291210	FunctionDef	"choose_pixel_fmt (AVStream * st , AVCodec * codec , enum AVPixelFormat target)"		1291209	0					
ANR	1291211	CompoundStatement		3:0:94:1599	1291209	0					
ANR	1291212	IfStatement	if ( codec && codec -> pix_fmts )		1291209	0					
ANR	1291213	Condition	codec && codec -> pix_fmts	5:8:105:128	1291209	0	True				
ANR	1291214	AndExpression	codec && codec -> pix_fmts		1291209	0		&&			
ANR	1291215	Identifier	codec		1291209	0					
ANR	1291216	PtrMemberAccess	codec -> pix_fmts		1291209	1					
ANR	1291217	Identifier	codec		1291209	0					
ANR	1291218	Identifier	pix_fmts		1291209	1					
ANR	1291219	CompoundStatement		9:8:180:220	1291209	1					
ANR	1291220	IdentifierDeclStatement	const enum AVPixelFormat * p = codec -> pix_fmts ;	7:8:142:187	1291209	0	True				
ANR	1291221	IdentifierDecl	* p = codec -> pix_fmts		1291209	0					
ANR	1291222	IdentifierDeclType	const enum AVPixelFormat *		1291209	0					
ANR	1291223	Identifier	p		1291209	1					
ANR	1291224	AssignmentExpression	* p = codec -> pix_fmts		1291209	2		=			
ANR	1291225	Identifier	p		1291209	0					
ANR	1291226	PtrMemberAccess	codec -> pix_fmts		1291209	1					
ANR	1291227	Identifier	codec		1291209	0					
ANR	1291228	Identifier	pix_fmts		1291209	1					
ANR	1291229	IdentifierDeclStatement	int has_alpha = av_pix_fmt_desc_get ( target ) -> nb_components % 2 == 0 ;	9:8:198:264	1291209	1	True				
ANR	1291230	IdentifierDecl	has_alpha = av_pix_fmt_desc_get ( target ) -> nb_components % 2 == 0		1291209	0					
ANR	1291231	IdentifierDeclType	int		1291209	0					
ANR	1291232	Identifier	has_alpha		1291209	1					
ANR	1291233	AssignmentExpression	has_alpha = av_pix_fmt_desc_get ( target ) -> nb_components % 2 == 0		1291209	2		=			
ANR	1291234	Identifier	has_alpha		1291209	0					
ANR	1291235	EqualityExpression	av_pix_fmt_desc_get ( target ) -> nb_components % 2 == 0		1291209	1		==			
ANR	1291236	MultiplicativeExpression	av_pix_fmt_desc_get ( target ) -> nb_components % 2		1291209	0		%			
ANR	1291237	PtrMemberAccess	av_pix_fmt_desc_get ( target ) -> nb_components		1291209	0					
ANR	1291238	CallExpression	av_pix_fmt_desc_get ( target )		1291209	0					
ANR	1291239	Callee	av_pix_fmt_desc_get		1291209	0					
ANR	1291240	Identifier	av_pix_fmt_desc_get		1291209	0					
ANR	1291241	ArgumentList	target		1291209	1					
ANR	1291242	Argument	target		1291209	0					
ANR	1291243	Identifier	target		1291209	0					
ANR	1291244	Identifier	nb_components		1291209	1					
ANR	1291245	PrimaryExpression	2		1291209	1					
ANR	1291246	PrimaryExpression	0		1291209	1					
ANR	1291247	IdentifierDeclStatement	enum AVPixelFormat best = AV_PIX_FMT_NONE ;	11:8:275:315	1291209	2	True				
ANR	1291248	IdentifierDecl	best = AV_PIX_FMT_NONE		1291209	0					
ANR	1291249	IdentifierDeclType	enum AVPixelFormat		1291209	0					
ANR	1291250	Identifier	best		1291209	1					
ANR	1291251	AssignmentExpression	best = AV_PIX_FMT_NONE		1291209	2		=			
ANR	1291252	Identifier	AV_PIX_FMT_NONE		1291209	0					
ANR	1291253	Identifier	AV_PIX_FMT_NONE		1291209	1					
ANR	1291254	IfStatement	if ( st -> codec -> strict_std_compliance <= FF_COMPLIANCE_UNOFFICIAL )		1291209	3					
ANR	1291255	Condition	st -> codec -> strict_std_compliance <= FF_COMPLIANCE_UNOFFICIAL	13:12:330:389	1291209	0	True				
ANR	1291256	RelationalExpression	st -> codec -> strict_std_compliance <= FF_COMPLIANCE_UNOFFICIAL		1291209	0		<=			
ANR	1291257	PtrMemberAccess	st -> codec -> strict_std_compliance		1291209	0					
ANR	1291258	PtrMemberAccess	st -> codec		1291209	0					
ANR	1291259	Identifier	st		1291209	0					
ANR	1291260	Identifier	codec		1291209	1					
ANR	1291261	Identifier	strict_std_compliance		1291209	1					
ANR	1291262	Identifier	FF_COMPLIANCE_UNOFFICIAL		1291209	1					
ANR	1291263	CompoundStatement		11:74:297:297	1291209	1					
ANR	1291264	IfStatement	if ( st -> codec -> codec_id == AV_CODEC_ID_MJPEG )		1291209	0					
ANR	1291265	Condition	st -> codec -> codec_id == AV_CODEC_ID_MJPEG	15:16:411:450	1291209	0	True				
ANR	1291266	EqualityExpression	st -> codec -> codec_id == AV_CODEC_ID_MJPEG		1291209	0		==			
ANR	1291267	PtrMemberAccess	st -> codec -> codec_id		1291209	0					
ANR	1291268	PtrMemberAccess	st -> codec		1291209	0					
ANR	1291269	Identifier	st		1291209	0					
ANR	1291270	Identifier	codec		1291209	1					
ANR	1291271	Identifier	codec_id		1291209	1					
ANR	1291272	Identifier	AV_CODEC_ID_MJPEG		1291209	1					
ANR	1291273	CompoundStatement		13:58:358:358	1291209	1					
ANR	1291274	Statement	p	17:16:472:472	1291209	0	True				
ANR	1291275	Statement	=	17:18:474:474	1291209	1	True				
ANR	1291276	Statement	(	17:20:476:476	1291209	2	True				
ANR	1291277	Statement	const	17:21:477:481	1291209	3	True				
ANR	1291278	Statement	enum	17:27:483:486	1291209	4	True				
ANR	1291279	Statement	AVPixelFormat	17:32:488:500	1291209	5	True				
ANR	1291280	Statement	[	17:45:501:501	1291209	6	True				
ANR	1291281	Statement	]	17:46:502:502	1291209	7	True				
ANR	1291282	Statement	)	17:47:503:503	1291209	8	True				
ANR	1291283	CompoundStatement		15:49:410:410	1291209	9					
ANR	1291284	Statement	AV_PIX_FMT_YUVJ420P	17:51:507:525	1291209	0	True				
ANR	1291285	Statement	","	17:70:526:526	1291209	1	True				
ANR	1291286	Statement	AV_PIX_FMT_YUVJ422P	17:72:528:546	1291209	2	True				
ANR	1291287	Statement	","	17:91:547:547	1291209	3	True				
ANR	1291288	Statement	AV_PIX_FMT_YUV420P	17:93:549:566	1291209	4	True				
ANR	1291289	Statement	","	17:111:567:567	1291209	5	True				
ANR	1291290	Statement	AV_PIX_FMT_YUV422P	17:113:569:586	1291209	6	True				
ANR	1291291	Statement	","	17:131:587:587	1291209	7	True				
ANR	1291292	Statement	AV_PIX_FMT_NONE	17:133:589:603	1291209	8	True				
ANR	1291293	ExpressionStatement		17:150:606:606	1291209	10	True				
ANR	1291294	ElseStatement	else		1291209	0					
ANR	1291295	IfStatement	if ( st -> codec -> codec_id == AV_CODEC_ID_LJPEG )		1291209	0					
ANR	1291296	Condition	st -> codec -> codec_id == AV_CODEC_ID_LJPEG	19:23:632:671	1291209	0	True				
ANR	1291297	EqualityExpression	st -> codec -> codec_id == AV_CODEC_ID_LJPEG		1291209	0		==			
ANR	1291298	PtrMemberAccess	st -> codec -> codec_id		1291209	0					
ANR	1291299	PtrMemberAccess	st -> codec		1291209	0					
ANR	1291300	Identifier	st		1291209	0					
ANR	1291301	Identifier	codec		1291209	1					
ANR	1291302	Identifier	codec_id		1291209	1					
ANR	1291303	Identifier	AV_CODEC_ID_LJPEG		1291209	1					
ANR	1291304	CompoundStatement		17:65:579:579	1291209	1					
ANR	1291305	Statement	p	21:16:693:693	1291209	0	True				
ANR	1291306	Statement	=	21:18:695:695	1291209	1	True				
ANR	1291307	Statement	(	21:20:697:697	1291209	2	True				
ANR	1291308	Statement	const	21:21:698:702	1291209	3	True				
ANR	1291309	Statement	enum	21:27:704:707	1291209	4	True				
ANR	1291310	Statement	AVPixelFormat	21:32:709:721	1291209	5	True				
ANR	1291311	Statement	[	21:45:722:722	1291209	6	True				
ANR	1291312	Statement	]	21:46:723:723	1291209	7	True				
ANR	1291313	Statement	)	21:47:724:724	1291209	8	True				
ANR	1291314	CompoundStatement		19:49:631:631	1291209	9					
ANR	1291315	Statement	AV_PIX_FMT_YUVJ420P	21:51:728:746	1291209	0	True				
ANR	1291316	Statement	","	21:70:747:747	1291209	1	True				
ANR	1291317	Statement	AV_PIX_FMT_YUVJ422P	21:72:749:767	1291209	2	True				
ANR	1291318	Statement	","	21:91:768:768	1291209	3	True				
ANR	1291319	Statement	AV_PIX_FMT_YUVJ444P	21:93:770:788	1291209	4	True				
ANR	1291320	Statement	","	21:112:789:789	1291209	5	True				
ANR	1291321	Statement	AV_PIX_FMT_YUV420P	21:114:791:808	1291209	6	True				
ANR	1291322	Statement	","	21:132:809:809	1291209	7	True				
ANR	1291323	Statement	AV_PIX_FMT_YUV422P	23:49:861:878	1291209	8	True				
ANR	1291324	Statement	","	23:67:879:879	1291209	9	True				
ANR	1291325	Statement	AV_PIX_FMT_YUV444P	23:69:881:898	1291209	10	True				
ANR	1291326	Statement	","	23:87:899:899	1291209	11	True				
ANR	1291327	Statement	AV_PIX_FMT_BGRA	23:89:901:915	1291209	12	True				
ANR	1291328	Statement	","	23:104:916:916	1291209	13	True				
ANR	1291329	Statement	AV_PIX_FMT_NONE	23:106:918:932	1291209	14	True				
ANR	1291330	ExpressionStatement		23:123:935:935	1291209	10	True				
ANR	1291331	ForStatement	for ( ; * p != AV_PIX_FMT_NONE ; p ++ )		1291209	4					
ANR	1291332	Condition	* p != AV_PIX_FMT_NONE	29:15:979:999	1291209	0	True				
ANR	1291333	EqualityExpression	* p != AV_PIX_FMT_NONE		1291209	0		!=			
ANR	1291334	UnaryOperationExpression	* p		1291209	0					
ANR	1291335	UnaryOperator	*		1291209	0					
ANR	1291336	Identifier	p		1291209	1					
ANR	1291337	Identifier	AV_PIX_FMT_NONE		1291209	1					
ANR	1291338	PostIncDecOperationExpression	p ++	29:38:1002:1004	1291209	1	True				
ANR	1291339	Identifier	p		1291209	0					
ANR	1291340	IncDec	++		1291209	1					
ANR	1291341	CompoundStatement		27:43:912:912	1291209	2					
ANR	1291342	ExpressionStatement	"best = avcodec_find_best_pix_fmt_of_2 ( best , * p , target , has_alpha , NULL )"	31:12:1022:1093	1291209	0	True				
ANR	1291343	AssignmentExpression	"best = avcodec_find_best_pix_fmt_of_2 ( best , * p , target , has_alpha , NULL )"		1291209	0		=			
ANR	1291344	Identifier	best		1291209	0					
ANR	1291345	CallExpression	"avcodec_find_best_pix_fmt_of_2 ( best , * p , target , has_alpha , NULL )"		1291209	1					
ANR	1291346	Callee	avcodec_find_best_pix_fmt_of_2		1291209	0					
ANR	1291347	Identifier	avcodec_find_best_pix_fmt_of_2		1291209	0					
ANR	1291348	ArgumentList	best		1291209	1					
ANR	1291349	Argument	best		1291209	0					
ANR	1291350	Identifier	best		1291209	0					
ANR	1291351	Argument	* p		1291209	1					
ANR	1291352	UnaryOperationExpression	* p		1291209	0					
ANR	1291353	UnaryOperator	*		1291209	0					
ANR	1291354	Identifier	p		1291209	1					
ANR	1291355	Argument	target		1291209	2					
ANR	1291356	Identifier	target		1291209	0					
ANR	1291357	Argument	has_alpha		1291209	3					
ANR	1291358	Identifier	has_alpha		1291209	0					
ANR	1291359	Argument	NULL		1291209	4					
ANR	1291360	Identifier	NULL		1291209	0					
ANR	1291361	IfStatement	if ( * p == target )		1291209	1					
ANR	1291362	Condition	* p == target	33:16:1112:1123	1291209	0	True				
ANR	1291363	EqualityExpression	* p == target		1291209	0		==			
ANR	1291364	UnaryOperationExpression	* p		1291209	0					
ANR	1291365	UnaryOperator	*		1291209	0					
ANR	1291366	Identifier	p		1291209	1					
ANR	1291367	Identifier	target		1291209	1					
ANR	1291368	BreakStatement	break ;	35:16:1143:1148	1291209	1	True				
ANR	1291369	IfStatement	if ( * p == AV_PIX_FMT_NONE )		1291209	5					
ANR	1291370	Condition	* p == AV_PIX_FMT_NONE	39:12:1174:1194	1291209	0	True				
ANR	1291371	EqualityExpression	* p == AV_PIX_FMT_NONE		1291209	0		==			
ANR	1291372	UnaryOperationExpression	* p		1291209	0					
ANR	1291373	UnaryOperator	*		1291209	0					
ANR	1291374	Identifier	p		1291209	1					
ANR	1291375	Identifier	AV_PIX_FMT_NONE		1291209	1					
ANR	1291376	CompoundStatement		37:35:1102:1102	1291209	1					
ANR	1291377	IfStatement	if ( target != AV_PIX_FMT_NONE )		1291209	0					
ANR	1291378	Condition	target != AV_PIX_FMT_NONE	41:16:1216:1240	1291209	0	True				
ANR	1291379	EqualityExpression	target != AV_PIX_FMT_NONE		1291209	0		!=			
ANR	1291380	Identifier	target		1291209	0					
ANR	1291381	Identifier	AV_PIX_FMT_NONE		1291209	1					
ANR	1291382	ExpressionStatement	"av_log ( NULL , AV_LOG_WARNING , ""Incompatible pixel format '%s' for codec '%s', auto-selecting format '%s'\\n"" , av_get_pix_fmt_name ( target ) , codec -> name , av_get_pix_fmt_name ( best ) )"	43:16:1260:1532	1291209	1	True				
ANR	1291383	CallExpression	"av_log ( NULL , AV_LOG_WARNING , ""Incompatible pixel format '%s' for codec '%s', auto-selecting format '%s'\\n"" , av_get_pix_fmt_name ( target ) , codec -> name , av_get_pix_fmt_name ( best ) )"		1291209	0					
ANR	1291384	Callee	av_log		1291209	0					
ANR	1291385	Identifier	av_log		1291209	0					
ANR	1291386	ArgumentList	NULL		1291209	1					
ANR	1291387	Argument	NULL		1291209	0					
ANR	1291388	Identifier	NULL		1291209	0					
ANR	1291389	Argument	AV_LOG_WARNING		1291209	1					
ANR	1291390	Identifier	AV_LOG_WARNING		1291209	0					
ANR	1291391	Argument	"""Incompatible pixel format '%s' for codec '%s', auto-selecting format '%s'\\n"""		1291209	2					
ANR	1291392	PrimaryExpression	"""Incompatible pixel format '%s' for codec '%s', auto-selecting format '%s'\\n"""		1291209	0					
ANR	1291393	Argument	av_get_pix_fmt_name ( target )		1291209	3					
ANR	1291394	CallExpression	av_get_pix_fmt_name ( target )		1291209	0					
ANR	1291395	Callee	av_get_pix_fmt_name		1291209	0					
ANR	1291396	Identifier	av_get_pix_fmt_name		1291209	0					
ANR	1291397	ArgumentList	target		1291209	1					
ANR	1291398	Argument	target		1291209	0					
ANR	1291399	Identifier	target		1291209	0					
ANR	1291400	Argument	codec -> name		1291209	4					
ANR	1291401	PtrMemberAccess	codec -> name		1291209	0					
ANR	1291402	Identifier	codec		1291209	0					
ANR	1291403	Identifier	name		1291209	1					
ANR	1291404	Argument	av_get_pix_fmt_name ( best )		1291209	5					
ANR	1291405	CallExpression	av_get_pix_fmt_name ( best )		1291209	0					
ANR	1291406	Callee	av_get_pix_fmt_name		1291209	0					
ANR	1291407	Identifier	av_get_pix_fmt_name		1291209	0					
ANR	1291408	ArgumentList	best		1291209	1					
ANR	1291409	Argument	best		1291209	0					
ANR	1291410	Identifier	best		1291209	0					
ANR	1291411	ReturnStatement	return best ;	53:12:1547:1558	1291209	1	True				
ANR	1291412	Identifier	best		1291209	0					
ANR	1291413	ReturnStatement	return target ;	59:4:1583:1596	1291209	1	True				
ANR	1291414	Identifier	target		1291209	0					
ANR	1291415	ReturnType	enum AVPixelFormat		1291209	1					
ANR	1291416	Identifier	choose_pixel_fmt		1291209	2					
ANR	1291417	ParameterList	"AVStream * st , AVCodec * codec , enum AVPixelFormat target"		1291209	3					
ANR	1291418	Parameter	AVStream * st	1:36:36:47	1291209	0	True				
ANR	1291419	ParameterType	AVStream *		1291209	0					
ANR	1291420	Identifier	st		1291209	1					
ANR	1291421	Parameter	AVCodec * codec	1:50:50:63	1291209	1	True				
ANR	1291422	ParameterType	AVCodec *		1291209	0					
ANR	1291423	Identifier	codec		1291209	1					
ANR	1291424	Parameter	enum AVPixelFormat target	1:66:66:90	1291209	2	True				
ANR	1291425	ParameterType	enum AVPixelFormat		1291209	0					
ANR	1291426	Identifier	target		1291209	1					
ANR	1291427	CFGEntryNode	ENTRY		1291209		True				
ANR	1291428	CFGExitNode	EXIT		1291209		True				
ANR	1291429	Symbol	* st		1291209						
ANR	1291430	Symbol	* av_pix_fmt_desc_get		1291209						
ANR	1291431	Symbol	AV_CODEC_ID_LJPEG		1291209						
ANR	1291432	Symbol	has_alpha		1291209						
ANR	1291433	Symbol	codec -> name		1291209						
ANR	1291434	Symbol	best		1291209						
ANR	1291435	Symbol	st -> codec -> strict_std_compliance		1291209						
ANR	1291436	Symbol	* st -> codec		1291209						
ANR	1291437	Symbol	* * st		1291209						
ANR	1291438	Symbol	AV_CODEC_ID_MJPEG		1291209						
ANR	1291439	Symbol	st -> codec -> codec_id		1291209						
ANR	1291440	Symbol	codec -> pix_fmts		1291209						
ANR	1291441	Symbol	av_get_pix_fmt_name		1291209						
ANR	1291442	Symbol	st		1291209						
ANR	1291443	Symbol	FF_COMPLIANCE_UNOFFICIAL		1291209						
ANR	1291444	Symbol	NULL		1291209						
ANR	1291445	Symbol	avcodec_find_best_pix_fmt_of_2		1291209						
ANR	1291446	Symbol	* codec		1291209						
ANR	1291447	Symbol	AV_PIX_FMT_NONE		1291209						
ANR	1291448	Symbol	st -> codec		1291209						
ANR	1291449	Symbol	target		1291209						
ANR	1291450	Symbol	p		1291209						
ANR	1291451	Symbol	av_pix_fmt_desc_get ( target ) -> nb_components		1291209						
ANR	1291452	Symbol	codec		1291209						
ANR	1291453	Symbol	* p		1291209						
ANR	1291454	Symbol	av_pix_fmt_desc_get		1291209						
ANR	1291455	Symbol	AV_LOG_WARNING		1291209						
