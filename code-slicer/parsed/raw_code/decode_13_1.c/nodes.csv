command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1682160	File	/home/p4ultr4n/workplace/ReVeal/raw_code/decode_13_1.c								
ANR	1682161	Function	decode_13	1:0:0:5886							
ANR	1682162	FunctionDef	"decode_13 (AVCodecContext * avctx , DxaDecContext * c , uint8_t * dst , int stride , uint8_t * src , uint8_t * ref)"		1682161	0					
ANR	1682163	CompoundStatement		5:0:139:5886	1682161	0					
ANR	1682164	IdentifierDeclStatement	"uint8_t * code , * data , * mv , * msk , * tmp , * tmp2 ;"	7:4:146:190	1682161	0	True				
ANR	1682165	IdentifierDecl	* code		1682161	0					
ANR	1682166	IdentifierDeclType	uint8_t *		1682161	0					
ANR	1682167	Identifier	code		1682161	1					
ANR	1682168	IdentifierDecl	* data		1682161	1					
ANR	1682169	IdentifierDeclType	uint8_t *		1682161	0					
ANR	1682170	Identifier	data		1682161	1					
ANR	1682171	IdentifierDecl	* mv		1682161	2					
ANR	1682172	IdentifierDeclType	uint8_t *		1682161	0					
ANR	1682173	Identifier	mv		1682161	1					
ANR	1682174	IdentifierDecl	* msk		1682161	3					
ANR	1682175	IdentifierDeclType	uint8_t *		1682161	0					
ANR	1682176	Identifier	msk		1682161	1					
ANR	1682177	IdentifierDecl	* tmp		1682161	4					
ANR	1682178	IdentifierDeclType	uint8_t *		1682161	0					
ANR	1682179	Identifier	tmp		1682161	1					
ANR	1682180	IdentifierDecl	* tmp2		1682161	5					
ANR	1682181	IdentifierDeclType	uint8_t *		1682161	0					
ANR	1682182	Identifier	tmp2		1682161	1					
ANR	1682183	IdentifierDeclStatement	"int i , j , k ;"	9:4:197:208	1682161	1	True				
ANR	1682184	IdentifierDecl	i		1682161	0					
ANR	1682185	IdentifierDeclType	int		1682161	0					
ANR	1682186	Identifier	i		1682161	1					
ANR	1682187	IdentifierDecl	j		1682161	1					
ANR	1682188	IdentifierDeclType	int		1682161	0					
ANR	1682189	Identifier	j		1682161	1					
ANR	1682190	IdentifierDecl	k		1682161	2					
ANR	1682191	IdentifierDeclType	int		1682161	0					
ANR	1682192	Identifier	k		1682161	1					
ANR	1682193	IdentifierDeclStatement	"int type , x , y , d , d2 ;"	11:4:215:236	1682161	2	True				
ANR	1682194	IdentifierDecl	type		1682161	0					
ANR	1682195	IdentifierDeclType	int		1682161	0					
ANR	1682196	Identifier	type		1682161	1					
ANR	1682197	IdentifierDecl	x		1682161	1					
ANR	1682198	IdentifierDeclType	int		1682161	0					
ANR	1682199	Identifier	x		1682161	1					
ANR	1682200	IdentifierDecl	y		1682161	2					
ANR	1682201	IdentifierDeclType	int		1682161	0					
ANR	1682202	Identifier	y		1682161	1					
ANR	1682203	IdentifierDecl	d		1682161	3					
ANR	1682204	IdentifierDeclType	int		1682161	0					
ANR	1682205	Identifier	d		1682161	1					
ANR	1682206	IdentifierDecl	d2		1682161	4					
ANR	1682207	IdentifierDeclType	int		1682161	0					
ANR	1682208	Identifier	d2		1682161	1					
ANR	1682209	IdentifierDeclStatement	uint32_t mask ;	13:4:243:256	1682161	3	True				
ANR	1682210	IdentifierDecl	mask		1682161	0					
ANR	1682211	IdentifierDeclType	uint32_t		1682161	0					
ANR	1682212	Identifier	mask		1682161	1					
ANR	1682213	ExpressionStatement	code = src + 12	17:4:265:281	1682161	4	True				
ANR	1682214	AssignmentExpression	code = src + 12		1682161	0		=			
ANR	1682215	Identifier	code		1682161	0					
ANR	1682216	AdditiveExpression	src + 12		1682161	1		+			
ANR	1682217	Identifier	src		1682161	0					
ANR	1682218	PrimaryExpression	12		1682161	1					
ANR	1682219	ExpressionStatement	data = code + ( ( avctx -> width * avctx -> height ) >> 4 )	19:4:288:339	1682161	5	True				
ANR	1682220	AssignmentExpression	data = code + ( ( avctx -> width * avctx -> height ) >> 4 )		1682161	0		=			
ANR	1682221	Identifier	data		1682161	0					
ANR	1682222	AdditiveExpression	code + ( ( avctx -> width * avctx -> height ) >> 4 )		1682161	1		+			
ANR	1682223	Identifier	code		1682161	0					
ANR	1682224	ShiftExpression	( avctx -> width * avctx -> height ) >> 4		1682161	1		>>			
ANR	1682225	MultiplicativeExpression	avctx -> width * avctx -> height		1682161	0		*			
ANR	1682226	PtrMemberAccess	avctx -> width		1682161	0					
ANR	1682227	Identifier	avctx		1682161	0					
ANR	1682228	Identifier	width		1682161	1					
ANR	1682229	PtrMemberAccess	avctx -> height		1682161	1					
ANR	1682230	Identifier	avctx		1682161	0					
ANR	1682231	Identifier	height		1682161	1					
ANR	1682232	PrimaryExpression	4		1682161	1					
ANR	1682233	ExpressionStatement	mv = data + AV_RB32 ( src + 0 )	21:4:346:376	1682161	6	True				
ANR	1682234	AssignmentExpression	mv = data + AV_RB32 ( src + 0 )		1682161	0		=			
ANR	1682235	Identifier	mv		1682161	0					
ANR	1682236	AdditiveExpression	data + AV_RB32 ( src + 0 )		1682161	1		+			
ANR	1682237	Identifier	data		1682161	0					
ANR	1682238	CallExpression	AV_RB32 ( src + 0 )		1682161	1					
ANR	1682239	Callee	AV_RB32		1682161	0					
ANR	1682240	Identifier	AV_RB32		1682161	0					
ANR	1682241	ArgumentList	src + 0		1682161	1					
ANR	1682242	Argument	src + 0		1682161	0					
ANR	1682243	AdditiveExpression	src + 0		1682161	0		+			
ANR	1682244	Identifier	src		1682161	0					
ANR	1682245	PrimaryExpression	0		1682161	1					
ANR	1682246	ExpressionStatement	msk = mv + AV_RB32 ( src + 4 )	23:4:383:413	1682161	7	True				
ANR	1682247	AssignmentExpression	msk = mv + AV_RB32 ( src + 4 )		1682161	0		=			
ANR	1682248	Identifier	msk		1682161	0					
ANR	1682249	AdditiveExpression	mv + AV_RB32 ( src + 4 )		1682161	1		+			
ANR	1682250	Identifier	mv		1682161	0					
ANR	1682251	CallExpression	AV_RB32 ( src + 4 )		1682161	1					
ANR	1682252	Callee	AV_RB32		1682161	0					
ANR	1682253	Identifier	AV_RB32		1682161	0					
ANR	1682254	ArgumentList	src + 4		1682161	1					
ANR	1682255	Argument	src + 4		1682161	0					
ANR	1682256	AdditiveExpression	src + 4		1682161	0		+			
ANR	1682257	Identifier	src		1682161	0					
ANR	1682258	PrimaryExpression	4		1682161	1					
ANR	1682259	ForStatement	for ( j = 0 ; j < avctx -> height ; j += 4 )		1682161	8					
ANR	1682260	ForInit	j = 0 ;	27:8:426:431	1682161	0	True				
ANR	1682261	AssignmentExpression	j = 0		1682161	0		=			
ANR	1682262	Identifier	j		1682161	0					
ANR	1682263	PrimaryExpression	0		1682161	1					
ANR	1682264	Condition	j < avctx -> height	27:15:433:449	1682161	1	True				
ANR	1682265	RelationalExpression	j < avctx -> height		1682161	0		<			
ANR	1682266	Identifier	j		1682161	0					
ANR	1682267	PtrMemberAccess	avctx -> height		1682161	1					
ANR	1682268	Identifier	avctx		1682161	0					
ANR	1682269	Identifier	height		1682161	1					
ANR	1682270	AssignmentExpression	j += 4	27:34:452:457	1682161	2	True	+=			
ANR	1682271	Identifier	j		1682161	0					
ANR	1682272	PrimaryExpression	4		1682161	1					
ANR	1682273	CompoundStatement		23:41:319:319	1682161	3					
ANR	1682274	ForStatement	for ( i = 0 ; i < avctx -> width ; i += 4 )		1682161	0					
ANR	1682275	ForInit	i = 0 ;	29:12:474:479	1682161	0	True				
ANR	1682276	AssignmentExpression	i = 0		1682161	0		=			
ANR	1682277	Identifier	i		1682161	0					
ANR	1682278	PrimaryExpression	0		1682161	1					
ANR	1682279	Condition	i < avctx -> width	29:19:481:496	1682161	1	True				
ANR	1682280	RelationalExpression	i < avctx -> width		1682161	0		<			
ANR	1682281	Identifier	i		1682161	0					
ANR	1682282	PtrMemberAccess	avctx -> width		1682161	1					
ANR	1682283	Identifier	avctx		1682161	0					
ANR	1682284	Identifier	width		1682161	1					
ANR	1682285	AssignmentExpression	i += 4	29:37:499:504	1682161	2	True	+=			
ANR	1682286	Identifier	i		1682161	0					
ANR	1682287	PrimaryExpression	4		1682161	1					
ANR	1682288	CompoundStatement		25:44:366:366	1682161	3					
ANR	1682289	ExpressionStatement	tmp = dst + i	31:12:521:535	1682161	0	True				
ANR	1682290	AssignmentExpression	tmp = dst + i		1682161	0		=			
ANR	1682291	Identifier	tmp		1682161	0					
ANR	1682292	AdditiveExpression	dst + i		1682161	1		+			
ANR	1682293	Identifier	dst		1682161	0					
ANR	1682294	Identifier	i		1682161	1					
ANR	1682295	ExpressionStatement	tmp2 = ref + i	33:12:550:564	1682161	1	True				
ANR	1682296	AssignmentExpression	tmp2 = ref + i		1682161	0		=			
ANR	1682297	Identifier	tmp2		1682161	0					
ANR	1682298	AdditiveExpression	ref + i		1682161	1		+			
ANR	1682299	Identifier	ref		1682161	0					
ANR	1682300	Identifier	i		1682161	1					
ANR	1682301	ExpressionStatement	type = * code ++	35:12:579:593	1682161	2	True				
ANR	1682302	AssignmentExpression	type = * code ++		1682161	0		=			
ANR	1682303	Identifier	type		1682161	0					
ANR	1682304	UnaryOperationExpression	* code ++		1682161	1					
ANR	1682305	UnaryOperator	*		1682161	0					
ANR	1682306	PostIncDecOperationExpression	code ++		1682161	1					
ANR	1682307	Identifier	code		1682161	0					
ANR	1682308	IncDec	++		1682161	1					
ANR	1682309	SwitchStatement	switch ( type )		1682161	3					
ANR	1682310	Condition	type	37:19:615:618	1682161	0	True				
ANR	1682311	Identifier	type		1682161	0					
ANR	1682312	CompoundStatement		33:24:480:480	1682161	1					
ANR	1682313	Label	case 4 :	39:12:635:641	1682161	0	True				
ANR	1682314	ExpressionStatement	x = ( * mv ) >> 4	41:16:683:697	1682161	1	True				
ANR	1682315	AssignmentExpression	x = ( * mv ) >> 4		1682161	0		=			
ANR	1682316	Identifier	x		1682161	0					
ANR	1682317	ShiftExpression	( * mv ) >> 4		1682161	1		>>			
ANR	1682318	UnaryOperationExpression	* mv		1682161	0					
ANR	1682319	UnaryOperator	*		1682161	0					
ANR	1682320	Identifier	mv		1682161	1					
ANR	1682321	PrimaryExpression	4		1682161	1					
ANR	1682322	IfStatement	if ( x & 8 )		1682161	2					
ANR	1682323	Condition	x & 8	41:38:705:709	1682161	0	True				
ANR	1682324	BitAndExpression	x & 8		1682161	0		&			
ANR	1682325	Identifier	x		1682161	0					
ANR	1682326	PrimaryExpression	8		1682161	1					
ANR	1682327	ExpressionStatement	x = 8 - x	41:45:712:721	1682161	1	True				
ANR	1682328	AssignmentExpression	x = 8 - x		1682161	0		=			
ANR	1682329	Identifier	x		1682161	0					
ANR	1682330	AdditiveExpression	8 - x		1682161	1		-			
ANR	1682331	PrimaryExpression	8		1682161	0					
ANR	1682332	Identifier	x		1682161	1					
ANR	1682333	ExpressionStatement	y = ( * mv ++ ) & 0xF	43:16:740:757	1682161	3	True				
ANR	1682334	AssignmentExpression	y = ( * mv ++ ) & 0xF		1682161	0		=			
ANR	1682335	Identifier	y		1682161	0					
ANR	1682336	BitAndExpression	( * mv ++ ) & 0xF		1682161	1		&			
ANR	1682337	UnaryOperationExpression	* mv ++		1682161	0					
ANR	1682338	UnaryOperator	*		1682161	0					
ANR	1682339	PostIncDecOperationExpression	mv ++		1682161	1					
ANR	1682340	Identifier	mv		1682161	0					
ANR	1682341	IncDec	++		1682161	1					
ANR	1682342	PrimaryExpression	0xF		1682161	1					
ANR	1682343	IfStatement	if ( y & 8 )		1682161	4					
ANR	1682344	Condition	y & 8	43:38:762:766	1682161	0	True				
ANR	1682345	BitAndExpression	y & 8		1682161	0		&			
ANR	1682346	Identifier	y		1682161	0					
ANR	1682347	PrimaryExpression	8		1682161	1					
ANR	1682348	ExpressionStatement	y = 8 - y	43:45:769:778	1682161	1	True				
ANR	1682349	AssignmentExpression	y = 8 - y		1682161	0		=			
ANR	1682350	Identifier	y		1682161	0					
ANR	1682351	AdditiveExpression	8 - y		1682161	1		-			
ANR	1682352	PrimaryExpression	8		1682161	0					
ANR	1682353	Identifier	y		1682161	1					
ANR	1682354	IfStatement	if ( i < - x || avctx -> width - i - 4 < x || j < - y || avctx -> height - j - 4 < y )		1682161	5					
ANR	1682355	Condition	i < - x || avctx -> width - i - 4 < x || j < - y || avctx -> height - j - 4 < y	45:20:801:895	1682161	0	True				
ANR	1682356	OrExpression	i < - x || avctx -> width - i - 4 < x || j < - y || avctx -> height - j - 4 < y		1682161	0		||			
ANR	1682357	RelationalExpression	i < - x		1682161	0		<			
ANR	1682358	Identifier	i		1682161	0					
ANR	1682359	UnaryOperationExpression	- x		1682161	1					
ANR	1682360	UnaryOperator	-		1682161	0					
ANR	1682361	Identifier	x		1682161	1					
ANR	1682362	OrExpression	avctx -> width - i - 4 < x || j < - y || avctx -> height - j - 4 < y		1682161	1		||			
ANR	1682363	RelationalExpression	avctx -> width - i - 4 < x		1682161	0		<			
ANR	1682364	AdditiveExpression	avctx -> width - i - 4		1682161	0		-			
ANR	1682365	PtrMemberAccess	avctx -> width		1682161	0					
ANR	1682366	Identifier	avctx		1682161	0					
ANR	1682367	Identifier	width		1682161	1					
ANR	1682368	AdditiveExpression	i - 4		1682161	1		-			
ANR	1682369	Identifier	i		1682161	0					
ANR	1682370	PrimaryExpression	4		1682161	1					
ANR	1682371	Identifier	x		1682161	1					
ANR	1682372	OrExpression	j < - y || avctx -> height - j - 4 < y		1682161	1		||			
ANR	1682373	RelationalExpression	j < - y		1682161	0		<			
ANR	1682374	Identifier	j		1682161	0					
ANR	1682375	UnaryOperationExpression	- y		1682161	1					
ANR	1682376	UnaryOperator	-		1682161	0					
ANR	1682377	Identifier	y		1682161	1					
ANR	1682378	RelationalExpression	avctx -> height - j - 4 < y		1682161	1		<			
ANR	1682379	AdditiveExpression	avctx -> height - j - 4		1682161	0		-			
ANR	1682380	PtrMemberAccess	avctx -> height		1682161	0					
ANR	1682381	Identifier	avctx		1682161	0					
ANR	1682382	Identifier	height		1682161	1					
ANR	1682383	AdditiveExpression	j - 4		1682161	1		-			
ANR	1682384	Identifier	j		1682161	0					
ANR	1682385	PrimaryExpression	4		1682161	1					
ANR	1682386	Identifier	y		1682161	1					
ANR	1682387	CompoundStatement		43:57:758:758	1682161	1					
ANR	1682388	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""MV %d %d out of bounds\\n"" , x , y )"	49:20:921:981	1682161	0	True				
ANR	1682389	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""MV %d %d out of bounds\\n"" , x , y )"		1682161	0					
ANR	1682390	Callee	av_log		1682161	0					
ANR	1682391	Identifier	av_log		1682161	0					
ANR	1682392	ArgumentList	avctx		1682161	1					
ANR	1682393	Argument	avctx		1682161	0					
ANR	1682394	Identifier	avctx		1682161	0					
ANR	1682395	Argument	AV_LOG_ERROR		1682161	1					
ANR	1682396	Identifier	AV_LOG_ERROR		1682161	0					
ANR	1682397	Argument	"""MV %d %d out of bounds\\n"""		1682161	2					
ANR	1682398	PrimaryExpression	"""MV %d %d out of bounds\\n"""		1682161	0					
ANR	1682399	Argument	x		1682161	3					
ANR	1682400	Identifier	x		1682161	0					
ANR	1682401	Argument	y		1682161	4					
ANR	1682402	Identifier	y		1682161	0					
ANR	1682403	ReturnStatement	return AVERROR_INVALIDDATA ;	51:20:1004:1030	1682161	1	True				
ANR	1682404	Identifier	AVERROR_INVALIDDATA		1682161	0					
ANR	1682405	ExpressionStatement	tmp2 += x + y * stride	55:16:1068:1088	1682161	6	True				
ANR	1682406	AssignmentExpression	tmp2 += x + y * stride		1682161	0		+=			
ANR	1682407	Identifier	tmp2		1682161	0					
ANR	1682408	AdditiveExpression	x + y * stride		1682161	1		+			
ANR	1682409	Identifier	x		1682161	0					
ANR	1682410	MultiplicativeExpression	y * stride		1682161	1		*			
ANR	1682411	Identifier	y		1682161	0					
ANR	1682412	Identifier	stride		1682161	1					
ANR	1682413	Label	case 0 :	57:12:1103:1109	1682161	7	True				
ANR	1682414	Label	case 5 :	59:12:1132:1138	1682161	8	True				
ANR	1682415	ForStatement	for ( y = 0 ; y < 4 ; y ++ )		1682161	9					
ANR	1682416	ForInit	y = 0 ;	61:20:1182:1187	1682161	0	True				
ANR	1682417	AssignmentExpression	y = 0		1682161	0		=			
ANR	1682418	Identifier	y		1682161	0					
ANR	1682419	PrimaryExpression	0		1682161	1					
ANR	1682420	Condition	y < 4	61:27:1189:1193	1682161	1	True				
ANR	1682421	RelationalExpression	y < 4		1682161	0		<			
ANR	1682422	Identifier	y		1682161	0					
ANR	1682423	PrimaryExpression	4		1682161	1					
ANR	1682424	PostIncDecOperationExpression	y ++	61:34:1196:1198	1682161	2	True				
ANR	1682425	Identifier	y		1682161	0					
ANR	1682426	IncDec	++		1682161	1					
ANR	1682427	CompoundStatement		57:38:1060:1060	1682161	3					
ANR	1682428	ExpressionStatement	"memcpy ( tmp , tmp2 , 4 )"	63:20:1223:1243	1682161	0	True				
ANR	1682429	CallExpression	"memcpy ( tmp , tmp2 , 4 )"		1682161	0					
ANR	1682430	Callee	memcpy		1682161	0					
ANR	1682431	Identifier	memcpy		1682161	0					
ANR	1682432	ArgumentList	tmp		1682161	1					
ANR	1682433	Argument	tmp		1682161	0					
ANR	1682434	Identifier	tmp		1682161	0					
ANR	1682435	Argument	tmp2		1682161	1					
ANR	1682436	Identifier	tmp2		1682161	0					
ANR	1682437	Argument	4		1682161	2					
ANR	1682438	PrimaryExpression	4		1682161	0					
ANR	1682439	ExpressionStatement	tmp += stride	65:20:1266:1280	1682161	1	True				
ANR	1682440	AssignmentExpression	tmp += stride		1682161	0		+=			
ANR	1682441	Identifier	tmp		1682161	0					
ANR	1682442	Identifier	stride		1682161	1					
ANR	1682443	ExpressionStatement	tmp2 += stride	67:20:1303:1317	1682161	2	True				
ANR	1682444	AssignmentExpression	tmp2 += stride		1682161	0		+=			
ANR	1682445	Identifier	tmp2		1682161	0					
ANR	1682446	Identifier	stride		1682161	1					
ANR	1682447	BreakStatement	break ;	71:16:1355:1360	1682161	10	True				
ANR	1682448	Label	case 1 :	73:12:1375:1381	1682161	11	True				
ANR	1682449	Label	case 10 :	75:12:1414:1421	1682161	12	True				
ANR	1682450	Label	case 11 :	77:12:1486:1493	1682161	13	True				
ANR	1682451	Label	case 12 :	79:12:1546:1553	1682161	14	True				
ANR	1682452	Label	case 13 :	81:12:1568:1575	1682161	15	True				
ANR	1682453	Label	case 14 :	83:12:1590:1597	1682161	16	True				
ANR	1682454	Label	case 15 :	85:12:1612:1619	1682161	17	True				
ANR	1682455	IfStatement	if ( type == 1 )		1682161	18					
ANR	1682456	Condition	type == 1	87:19:1641:1649	1682161	0	True				
ANR	1682457	EqualityExpression	type == 1		1682161	0		==			
ANR	1682458	Identifier	type		1682161	0					
ANR	1682459	PrimaryExpression	1		1682161	1					
ANR	1682460	CompoundStatement		83:29:1511:1511	1682161	1					
ANR	1682461	ExpressionStatement	mask = AV_RB16 ( msk )	89:20:1674:1693	1682161	0	True				
ANR	1682462	AssignmentExpression	mask = AV_RB16 ( msk )		1682161	0		=			
ANR	1682463	Identifier	mask		1682161	0					
ANR	1682464	CallExpression	AV_RB16 ( msk )		1682161	1					
ANR	1682465	Callee	AV_RB16		1682161	0					
ANR	1682466	Identifier	AV_RB16		1682161	0					
ANR	1682467	ArgumentList	msk		1682161	1					
ANR	1682468	Argument	msk		1682161	0					
ANR	1682469	Identifier	msk		1682161	0					
ANR	1682470	ExpressionStatement	msk += 2	91:20:1716:1724	1682161	1	True				
ANR	1682471	AssignmentExpression	msk += 2		1682161	0		+=			
ANR	1682472	Identifier	msk		1682161	0					
ANR	1682473	PrimaryExpression	2		1682161	1					
ANR	1682474	ElseStatement	else		1682161	0					
ANR	1682475	CompoundStatement		89:21:1608:1608	1682161	0					
ANR	1682476	ExpressionStatement	type -= 10	95:20:1771:1781	1682161	0	True				
ANR	1682477	AssignmentExpression	type -= 10		1682161	0		-=			
ANR	1682478	Identifier	type		1682161	0					
ANR	1682479	PrimaryExpression	10		1682161	1					
ANR	1682480	ExpressionStatement	mask = ( ( msk [ 0 ] & 0xF0 ) << shift1 [ type ] ) | ( ( msk [ 0 ] & 0xF ) << shift2 [ type ] )	97:20:1804:1879	1682161	1	True				
ANR	1682481	AssignmentExpression	mask = ( ( msk [ 0 ] & 0xF0 ) << shift1 [ type ] ) | ( ( msk [ 0 ] & 0xF ) << shift2 [ type ] )		1682161	0		=			
ANR	1682482	Identifier	mask		1682161	0					
ANR	1682483	InclusiveOrExpression	( ( msk [ 0 ] & 0xF0 ) << shift1 [ type ] ) | ( ( msk [ 0 ] & 0xF ) << shift2 [ type ] )		1682161	1		|			
ANR	1682484	ShiftExpression	( msk [ 0 ] & 0xF0 ) << shift1 [ type ]		1682161	0		<<			
ANR	1682485	BitAndExpression	msk [ 0 ] & 0xF0		1682161	0		&			
ANR	1682486	ArrayIndexing	msk [ 0 ]		1682161	0					
ANR	1682487	Identifier	msk		1682161	0					
ANR	1682488	PrimaryExpression	0		1682161	1					
ANR	1682489	PrimaryExpression	0xF0		1682161	1					
ANR	1682490	ArrayIndexing	shift1 [ type ]		1682161	1					
ANR	1682491	Identifier	shift1		1682161	0					
ANR	1682492	Identifier	type		1682161	1					
ANR	1682493	ShiftExpression	( msk [ 0 ] & 0xF ) << shift2 [ type ]		1682161	1		<<			
ANR	1682494	BitAndExpression	msk [ 0 ] & 0xF		1682161	0		&			
ANR	1682495	ArrayIndexing	msk [ 0 ]		1682161	0					
ANR	1682496	Identifier	msk		1682161	0					
ANR	1682497	PrimaryExpression	0		1682161	1					
ANR	1682498	PrimaryExpression	0xF		1682161	1					
ANR	1682499	ArrayIndexing	shift2 [ type ]		1682161	1					
ANR	1682500	Identifier	shift2		1682161	0					
ANR	1682501	Identifier	type		1682161	1					
ANR	1682502	ExpressionStatement	msk ++	99:20:1902:1907	1682161	2	True				
ANR	1682503	PostIncDecOperationExpression	msk ++		1682161	0					
ANR	1682504	Identifier	msk		1682161	0					
ANR	1682505	IncDec	++		1682161	1					
ANR	1682506	ForStatement	for ( y = 0 ; y < 4 ; y ++ )		1682161	19					
ANR	1682507	ForInit	y = 0 ;	103:20:1949:1954	1682161	0	True				
ANR	1682508	AssignmentExpression	y = 0		1682161	0		=			
ANR	1682509	Identifier	y		1682161	0					
ANR	1682510	PrimaryExpression	0		1682161	1					
ANR	1682511	Condition	y < 4	103:27:1956:1960	1682161	1	True				
ANR	1682512	RelationalExpression	y < 4		1682161	0		<			
ANR	1682513	Identifier	y		1682161	0					
ANR	1682514	PrimaryExpression	4		1682161	1					
ANR	1682515	PostIncDecOperationExpression	y ++	103:34:1963:1965	1682161	2	True				
ANR	1682516	Identifier	y		1682161	0					
ANR	1682517	IncDec	++		1682161	1					
ANR	1682518	CompoundStatement		99:38:1827:1827	1682161	3					
ANR	1682519	ForStatement	for ( x = 0 ; x < 4 ; x ++ )		1682161	0					
ANR	1682520	ForInit	x = 0 ;	105:24:1994:1999	1682161	0	True				
ANR	1682521	AssignmentExpression	x = 0		1682161	0		=			
ANR	1682522	Identifier	x		1682161	0					
ANR	1682523	PrimaryExpression	0		1682161	1					
ANR	1682524	Condition	x < 4	105:31:2001:2005	1682161	1	True				
ANR	1682525	RelationalExpression	x < 4		1682161	0		<			
ANR	1682526	Identifier	x		1682161	0					
ANR	1682527	PrimaryExpression	4		1682161	1					
ANR	1682528	PostIncDecOperationExpression	x ++	105:38:2008:2010	1682161	2	True				
ANR	1682529	Identifier	x		1682161	0					
ANR	1682530	IncDec	++		1682161	1					
ANR	1682531	CompoundStatement		101:42:1872:1872	1682161	3					
ANR	1682532	ExpressionStatement	tmp [ x ] = ( mask & 0x8000 ) ? * data ++ : tmp2 [ x ]	107:24:2039:2083	1682161	0	True				
ANR	1682533	AssignmentExpression	tmp [ x ] = ( mask & 0x8000 ) ? * data ++ : tmp2 [ x ]		1682161	0		=			
ANR	1682534	ArrayIndexing	tmp [ x ]		1682161	0					
ANR	1682535	Identifier	tmp		1682161	0					
ANR	1682536	Identifier	x		1682161	1					
ANR	1682537	ConditionalExpression	( mask & 0x8000 ) ? * data ++ : tmp2 [ x ]		1682161	1					
ANR	1682538	Condition	mask & 0x8000		1682161	0					
ANR	1682539	BitAndExpression	mask & 0x8000		1682161	0		&			
ANR	1682540	Identifier	mask		1682161	0					
ANR	1682541	PrimaryExpression	0x8000		1682161	1					
ANR	1682542	UnaryOperationExpression	* data ++		1682161	1					
ANR	1682543	UnaryOperator	*		1682161	0					
ANR	1682544	PostIncDecOperationExpression	data ++		1682161	1					
ANR	1682545	Identifier	data		1682161	0					
ANR	1682546	IncDec	++		1682161	1					
ANR	1682547	ArrayIndexing	tmp2 [ x ]		1682161	2					
ANR	1682548	Identifier	tmp2		1682161	0					
ANR	1682549	Identifier	x		1682161	1					
ANR	1682550	ExpressionStatement	mask <<= 1	109:24:2110:2120	1682161	1	True				
ANR	1682551	AssignmentExpression	mask <<= 1		1682161	0		<<=			
ANR	1682552	Identifier	mask		1682161	0					
ANR	1682553	PrimaryExpression	1		1682161	1					
ANR	1682554	ExpressionStatement	tmp += stride	113:20:2166:2180	1682161	1	True				
ANR	1682555	AssignmentExpression	tmp += stride		1682161	0		+=			
ANR	1682556	Identifier	tmp		1682161	0					
ANR	1682557	Identifier	stride		1682161	1					
ANR	1682558	ExpressionStatement	tmp2 += stride	115:20:2203:2217	1682161	2	True				
ANR	1682559	AssignmentExpression	tmp2 += stride		1682161	0		+=			
ANR	1682560	Identifier	tmp2		1682161	0					
ANR	1682561	Identifier	stride		1682161	1					
ANR	1682562	BreakStatement	break ;	119:16:2255:2260	1682161	20	True				
ANR	1682563	Label	case 2 :	121:12:2275:2281	1682161	21	True				
ANR	1682564	ForStatement	for ( y = 0 ; y < 4 ; y ++ )		1682161	22					
ANR	1682565	ForInit	y = 0 ;	123:20:2318:2323	1682161	0	True				
ANR	1682566	AssignmentExpression	y = 0		1682161	0		=			
ANR	1682567	Identifier	y		1682161	0					
ANR	1682568	PrimaryExpression	0		1682161	1					
ANR	1682569	Condition	y < 4	123:27:2325:2329	1682161	1	True				
ANR	1682570	RelationalExpression	y < 4		1682161	0		<			
ANR	1682571	Identifier	y		1682161	0					
ANR	1682572	PrimaryExpression	4		1682161	1					
ANR	1682573	PostIncDecOperationExpression	y ++	123:34:2332:2334	1682161	2	True				
ANR	1682574	Identifier	y		1682161	0					
ANR	1682575	IncDec	++		1682161	1					
ANR	1682576	CompoundStatement		119:38:2196:2196	1682161	3					
ANR	1682577	ExpressionStatement	"memset ( tmp , data [ 0 ] , 4 )"	125:20:2359:2382	1682161	0	True				
ANR	1682578	CallExpression	"memset ( tmp , data [ 0 ] , 4 )"		1682161	0					
ANR	1682579	Callee	memset		1682161	0					
ANR	1682580	Identifier	memset		1682161	0					
ANR	1682581	ArgumentList	tmp		1682161	1					
ANR	1682582	Argument	tmp		1682161	0					
ANR	1682583	Identifier	tmp		1682161	0					
ANR	1682584	Argument	data [ 0 ]		1682161	1					
ANR	1682585	ArrayIndexing	data [ 0 ]		1682161	0					
ANR	1682586	Identifier	data		1682161	0					
ANR	1682587	PrimaryExpression	0		1682161	1					
ANR	1682588	Argument	4		1682161	2					
ANR	1682589	PrimaryExpression	4		1682161	0					
ANR	1682590	ExpressionStatement	tmp += stride	127:20:2405:2418	1682161	1	True				
ANR	1682591	AssignmentExpression	tmp += stride		1682161	0		+=			
ANR	1682592	Identifier	tmp		1682161	0					
ANR	1682593	Identifier	stride		1682161	1					
ANR	1682594	ExpressionStatement	data ++	131:16:2456:2462	1682161	23	True				
ANR	1682595	PostIncDecOperationExpression	data ++		1682161	0					
ANR	1682596	Identifier	data		1682161	0					
ANR	1682597	IncDec	++		1682161	1					
ANR	1682598	BreakStatement	break ;	133:16:2481:2486	1682161	24	True				
ANR	1682599	Label	case 3 :	135:12:2501:2507	1682161	25	True				
ANR	1682600	ForStatement	for ( y = 0 ; y < 4 ; y ++ )		1682161	26					
ANR	1682601	ForInit	y = 0 ;	137:20:2543:2548	1682161	0	True				
ANR	1682602	AssignmentExpression	y = 0		1682161	0		=			
ANR	1682603	Identifier	y		1682161	0					
ANR	1682604	PrimaryExpression	0		1682161	1					
ANR	1682605	Condition	y < 4	137:27:2550:2554	1682161	1	True				
ANR	1682606	RelationalExpression	y < 4		1682161	0		<			
ANR	1682607	Identifier	y		1682161	0					
ANR	1682608	PrimaryExpression	4		1682161	1					
ANR	1682609	PostIncDecOperationExpression	y ++	137:34:2557:2559	1682161	2	True				
ANR	1682610	Identifier	y		1682161	0					
ANR	1682611	IncDec	++		1682161	1					
ANR	1682612	CompoundStatement		133:38:2421:2421	1682161	3					
ANR	1682613	ExpressionStatement	"memcpy ( tmp , data , 4 )"	139:20:2584:2604	1682161	0	True				
ANR	1682614	CallExpression	"memcpy ( tmp , data , 4 )"		1682161	0					
ANR	1682615	Callee	memcpy		1682161	0					
ANR	1682616	Identifier	memcpy		1682161	0					
ANR	1682617	ArgumentList	tmp		1682161	1					
ANR	1682618	Argument	tmp		1682161	0					
ANR	1682619	Identifier	tmp		1682161	0					
ANR	1682620	Argument	data		1682161	1					
ANR	1682621	Identifier	data		1682161	0					
ANR	1682622	Argument	4		1682161	2					
ANR	1682623	PrimaryExpression	4		1682161	0					
ANR	1682624	ExpressionStatement	data += 4	141:20:2627:2636	1682161	1	True				
ANR	1682625	AssignmentExpression	data += 4		1682161	0		+=			
ANR	1682626	Identifier	data		1682161	0					
ANR	1682627	PrimaryExpression	4		1682161	1					
ANR	1682628	ExpressionStatement	tmp += stride	143:20:2659:2673	1682161	2	True				
ANR	1682629	AssignmentExpression	tmp += stride		1682161	0		+=			
ANR	1682630	Identifier	tmp		1682161	0					
ANR	1682631	Identifier	stride		1682161	1					
ANR	1682632	BreakStatement	break ;	147:16:2711:2716	1682161	27	True				
ANR	1682633	Label	case 8 :	149:12:2731:2737	1682161	28	True				
ANR	1682634	ExpressionStatement	mask = * msk ++	151:16:2786:2799	1682161	29	True				
ANR	1682635	AssignmentExpression	mask = * msk ++		1682161	0		=			
ANR	1682636	Identifier	mask		1682161	0					
ANR	1682637	UnaryOperationExpression	* msk ++		1682161	1					
ANR	1682638	UnaryOperator	*		1682161	0					
ANR	1682639	PostIncDecOperationExpression	msk ++		1682161	1					
ANR	1682640	Identifier	msk		1682161	0					
ANR	1682641	IncDec	++		1682161	1					
ANR	1682642	ForStatement	for ( k = 0 ; k < 4 ; k ++ )		1682161	30					
ANR	1682643	ForInit	k = 0 ;	153:20:2822:2827	1682161	0	True				
ANR	1682644	AssignmentExpression	k = 0		1682161	0		=			
ANR	1682645	Identifier	k		1682161	0					
ANR	1682646	PrimaryExpression	0		1682161	1					
ANR	1682647	Condition	k < 4	153:27:2829:2833	1682161	1	True				
ANR	1682648	RelationalExpression	k < 4		1682161	0		<			
ANR	1682649	Identifier	k		1682161	0					
ANR	1682650	PrimaryExpression	4		1682161	1					
ANR	1682651	PostIncDecOperationExpression	k ++	153:34:2836:2838	1682161	2	True				
ANR	1682652	Identifier	k		1682161	0					
ANR	1682653	IncDec	++		1682161	1					
ANR	1682654	CompoundStatement		149:38:2700:2700	1682161	3					
ANR	1682655	ExpressionStatement	d = ( ( k & 1 ) << 1 ) + ( ( k & 2 ) * stride )	155:20:2863:2903	1682161	0	True				
ANR	1682656	AssignmentExpression	d = ( ( k & 1 ) << 1 ) + ( ( k & 2 ) * stride )		1682161	0		=			
ANR	1682657	Identifier	d		1682161	0					
ANR	1682658	AdditiveExpression	( ( k & 1 ) << 1 ) + ( ( k & 2 ) * stride )		1682161	1		+			
ANR	1682659	ShiftExpression	( k & 1 ) << 1		1682161	0		<<			
ANR	1682660	BitAndExpression	k & 1		1682161	0		&			
ANR	1682661	Identifier	k		1682161	0					
ANR	1682662	PrimaryExpression	1		1682161	1					
ANR	1682663	PrimaryExpression	1		1682161	1					
ANR	1682664	MultiplicativeExpression	( k & 2 ) * stride		1682161	1		*			
ANR	1682665	BitAndExpression	k & 2		1682161	0		&			
ANR	1682666	Identifier	k		1682161	0					
ANR	1682667	PrimaryExpression	2		1682161	1					
ANR	1682668	Identifier	stride		1682161	1					
ANR	1682669	ExpressionStatement	d2 = ( ( k & 1 ) << 1 ) + ( ( k & 2 ) * stride )	157:20:2926:2966	1682161	1	True				
ANR	1682670	AssignmentExpression	d2 = ( ( k & 1 ) << 1 ) + ( ( k & 2 ) * stride )		1682161	0		=			
ANR	1682671	Identifier	d2		1682161	0					
ANR	1682672	AdditiveExpression	( ( k & 1 ) << 1 ) + ( ( k & 2 ) * stride )		1682161	1		+			
ANR	1682673	ShiftExpression	( k & 1 ) << 1		1682161	0		<<			
ANR	1682674	BitAndExpression	k & 1		1682161	0		&			
ANR	1682675	Identifier	k		1682161	0					
ANR	1682676	PrimaryExpression	1		1682161	1					
ANR	1682677	PrimaryExpression	1		1682161	1					
ANR	1682678	MultiplicativeExpression	( k & 2 ) * stride		1682161	1		*			
ANR	1682679	BitAndExpression	k & 2		1682161	0		&			
ANR	1682680	Identifier	k		1682161	0					
ANR	1682681	PrimaryExpression	2		1682161	1					
ANR	1682682	Identifier	stride		1682161	1					
ANR	1682683	ExpressionStatement	tmp2 = ref + i + d2	159:20:2989:3008	1682161	2	True				
ANR	1682684	AssignmentExpression	tmp2 = ref + i + d2		1682161	0		=			
ANR	1682685	Identifier	tmp2		1682161	0					
ANR	1682686	AdditiveExpression	ref + i + d2		1682161	1		+			
ANR	1682687	Identifier	ref		1682161	0					
ANR	1682688	AdditiveExpression	i + d2		1682161	1		+			
ANR	1682689	Identifier	i		1682161	0					
ANR	1682690	Identifier	d2		1682161	1					
ANR	1682691	SwitchStatement	switch ( mask & 0xC0 )		1682161	3					
ANR	1682692	Condition	mask & 0xC0	161:27:3038:3048	1682161	0	True				
ANR	1682693	BitAndExpression	mask & 0xC0		1682161	0		&			
ANR	1682694	Identifier	mask		1682161	0					
ANR	1682695	PrimaryExpression	0xC0		1682161	1					
ANR	1682696	CompoundStatement		157:39:2910:2910	1682161	1					
ANR	1682697	Label	case 0x80 :	163:20:3073:3082	1682161	0	True				
ANR	1682698	ExpressionStatement	x = ( * mv ) >> 4	165:24:3132:3146	1682161	1	True				
ANR	1682699	AssignmentExpression	x = ( * mv ) >> 4		1682161	0		=			
ANR	1682700	Identifier	x		1682161	0					
ANR	1682701	ShiftExpression	( * mv ) >> 4		1682161	1		>>			
ANR	1682702	UnaryOperationExpression	* mv		1682161	0					
ANR	1682703	UnaryOperator	*		1682161	0					
ANR	1682704	Identifier	mv		1682161	1					
ANR	1682705	PrimaryExpression	4		1682161	1					
ANR	1682706	IfStatement	if ( x & 8 )		1682161	2					
ANR	1682707	Condition	x & 8	165:46:3154:3158	1682161	0	True				
ANR	1682708	BitAndExpression	x & 8		1682161	0		&			
ANR	1682709	Identifier	x		1682161	0					
ANR	1682710	PrimaryExpression	8		1682161	1					
ANR	1682711	ExpressionStatement	x = 8 - x	165:53:3161:3170	1682161	1	True				
ANR	1682712	AssignmentExpression	x = 8 - x		1682161	0		=			
ANR	1682713	Identifier	x		1682161	0					
ANR	1682714	AdditiveExpression	8 - x		1682161	1		-			
ANR	1682715	PrimaryExpression	8		1682161	0					
ANR	1682716	Identifier	x		1682161	1					
ANR	1682717	ExpressionStatement	y = ( * mv ++ ) & 0xF	167:24:3197:3214	1682161	3	True				
ANR	1682718	AssignmentExpression	y = ( * mv ++ ) & 0xF		1682161	0		=			
ANR	1682719	Identifier	y		1682161	0					
ANR	1682720	BitAndExpression	( * mv ++ ) & 0xF		1682161	1		&			
ANR	1682721	UnaryOperationExpression	* mv ++		1682161	0					
ANR	1682722	UnaryOperator	*		1682161	0					
ANR	1682723	PostIncDecOperationExpression	mv ++		1682161	1					
ANR	1682724	Identifier	mv		1682161	0					
ANR	1682725	IncDec	++		1682161	1					
ANR	1682726	PrimaryExpression	0xF		1682161	1					
ANR	1682727	IfStatement	if ( y & 8 )		1682161	4					
ANR	1682728	Condition	y & 8	167:46:3219:3223	1682161	0	True				
ANR	1682729	BitAndExpression	y & 8		1682161	0		&			
ANR	1682730	Identifier	y		1682161	0					
ANR	1682731	PrimaryExpression	8		1682161	1					
ANR	1682732	ExpressionStatement	y = 8 - y	167:53:3226:3235	1682161	1	True				
ANR	1682733	AssignmentExpression	y = 8 - y		1682161	0		=			
ANR	1682734	Identifier	y		1682161	0					
ANR	1682735	AdditiveExpression	8 - y		1682161	1		-			
ANR	1682736	PrimaryExpression	8		1682161	0					
ANR	1682737	Identifier	y		1682161	1					
ANR	1682738	IfStatement	if ( i + 2 * ( k & 1 ) < - x || avctx -> width - i - 2 * ( k & 1 ) - 2 < x || j + ( k & 2 ) < - y || avctx -> height - j - ( k & 2 ) - 2 < y )		1682161	5					
ANR	1682739	Condition	i + 2 * ( k & 1 ) < - x || avctx -> width - i - 2 * ( k & 1 ) - 2 < x || j + ( k & 2 ) < - y || avctx -> height - j - ( k & 2 ) - 2 < y	169:28:3266:3416	1682161	0	True				
ANR	1682740	OrExpression	i + 2 * ( k & 1 ) < - x || avctx -> width - i - 2 * ( k & 1 ) - 2 < x || j + ( k & 2 ) < - y || avctx -> height - j - ( k & 2 ) - 2 < y		1682161	0		||			
ANR	1682741	RelationalExpression	i + 2 * ( k & 1 ) < - x		1682161	0		<			
ANR	1682742	AdditiveExpression	i + 2 * ( k & 1 )		1682161	0		+			
ANR	1682743	Identifier	i		1682161	0					
ANR	1682744	MultiplicativeExpression	2 * ( k & 1 )		1682161	1		*			
ANR	1682745	PrimaryExpression	2		1682161	0					
ANR	1682746	BitAndExpression	k & 1		1682161	1		&			
ANR	1682747	Identifier	k		1682161	0					
ANR	1682748	PrimaryExpression	1		1682161	1					
ANR	1682749	UnaryOperationExpression	- x		1682161	1					
ANR	1682750	UnaryOperator	-		1682161	0					
ANR	1682751	Identifier	x		1682161	1					
ANR	1682752	OrExpression	avctx -> width - i - 2 * ( k & 1 ) - 2 < x || j + ( k & 2 ) < - y || avctx -> height - j - ( k & 2 ) - 2 < y		1682161	1		||			
ANR	1682753	RelationalExpression	avctx -> width - i - 2 * ( k & 1 ) - 2 < x		1682161	0		<			
ANR	1682754	AdditiveExpression	avctx -> width - i - 2 * ( k & 1 ) - 2		1682161	0		-			
ANR	1682755	PtrMemberAccess	avctx -> width		1682161	0					
ANR	1682756	Identifier	avctx		1682161	0					
ANR	1682757	Identifier	width		1682161	1					
ANR	1682758	AdditiveExpression	i - 2 * ( k & 1 ) - 2		1682161	1		-			
ANR	1682759	Identifier	i		1682161	0					
ANR	1682760	AdditiveExpression	2 * ( k & 1 ) - 2		1682161	1		-			
ANR	1682761	MultiplicativeExpression	2 * ( k & 1 )		1682161	0		*			
ANR	1682762	PrimaryExpression	2		1682161	0					
ANR	1682763	BitAndExpression	k & 1		1682161	1		&			
ANR	1682764	Identifier	k		1682161	0					
ANR	1682765	PrimaryExpression	1		1682161	1					
ANR	1682766	PrimaryExpression	2		1682161	1					
ANR	1682767	Identifier	x		1682161	1					
ANR	1682768	OrExpression	j + ( k & 2 ) < - y || avctx -> height - j - ( k & 2 ) - 2 < y		1682161	1		||			
ANR	1682769	RelationalExpression	j + ( k & 2 ) < - y		1682161	0		<			
ANR	1682770	AdditiveExpression	j + ( k & 2 )		1682161	0		+			
ANR	1682771	Identifier	j		1682161	0					
ANR	1682772	BitAndExpression	k & 2		1682161	1		&			
ANR	1682773	Identifier	k		1682161	0					
ANR	1682774	PrimaryExpression	2		1682161	1					
ANR	1682775	UnaryOperationExpression	- y		1682161	1					
ANR	1682776	UnaryOperator	-		1682161	0					
ANR	1682777	Identifier	y		1682161	1					
ANR	1682778	RelationalExpression	avctx -> height - j - ( k & 2 ) - 2 < y		1682161	1		<			
ANR	1682779	AdditiveExpression	avctx -> height - j - ( k & 2 ) - 2		1682161	0		-			
ANR	1682780	PtrMemberAccess	avctx -> height		1682161	0					
ANR	1682781	Identifier	avctx		1682161	0					
ANR	1682782	Identifier	height		1682161	1					
ANR	1682783	AdditiveExpression	j - ( k & 2 ) - 2		1682161	1		-			
ANR	1682784	Identifier	j		1682161	0					
ANR	1682785	AdditiveExpression	( k & 2 ) - 2		1682161	1		-			
ANR	1682786	BitAndExpression	k & 2		1682161	0		&			
ANR	1682787	Identifier	k		1682161	0					
ANR	1682788	PrimaryExpression	2		1682161	1					
ANR	1682789	PrimaryExpression	2		1682161	1					
ANR	1682790	Identifier	y		1682161	1					
ANR	1682791	CompoundStatement		167:89:3279:3279	1682161	1					
ANR	1682792	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""MV %d %d out of bounds\\n"" , x , y )"	173:28:3450:3510	1682161	0	True				
ANR	1682793	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""MV %d %d out of bounds\\n"" , x , y )"		1682161	0					
ANR	1682794	Callee	av_log		1682161	0					
ANR	1682795	Identifier	av_log		1682161	0					
ANR	1682796	ArgumentList	avctx		1682161	1					
ANR	1682797	Argument	avctx		1682161	0					
ANR	1682798	Identifier	avctx		1682161	0					
ANR	1682799	Argument	AV_LOG_ERROR		1682161	1					
ANR	1682800	Identifier	AV_LOG_ERROR		1682161	0					
ANR	1682801	Argument	"""MV %d %d out of bounds\\n"""		1682161	2					
ANR	1682802	PrimaryExpression	"""MV %d %d out of bounds\\n"""		1682161	0					
ANR	1682803	Argument	x		1682161	3					
ANR	1682804	Identifier	x		1682161	0					
ANR	1682805	Argument	y		1682161	4					
ANR	1682806	Identifier	y		1682161	0					
ANR	1682807	ReturnStatement	return AVERROR_INVALIDDATA ;	175:28:3541:3567	1682161	1	True				
ANR	1682808	Identifier	AVERROR_INVALIDDATA		1682161	0					
ANR	1682809	ExpressionStatement	tmp2 += x + y * stride	179:24:3621:3641	1682161	6	True				
ANR	1682810	AssignmentExpression	tmp2 += x + y * stride		1682161	0		+=			
ANR	1682811	Identifier	tmp2		1682161	0					
ANR	1682812	AdditiveExpression	x + y * stride		1682161	1		+			
ANR	1682813	Identifier	x		1682161	0					
ANR	1682814	MultiplicativeExpression	y * stride		1682161	1		*			
ANR	1682815	Identifier	y		1682161	0					
ANR	1682816	Identifier	stride		1682161	1					
ANR	1682817	Label	case 0x00 :	181:20:3664:3673	1682161	7	True				
ANR	1682818	ExpressionStatement	tmp [ d + 0 ] = tmp2 [ 0 ]	183:24:3708:3737	1682161	8	True				
ANR	1682819	AssignmentExpression	tmp [ d + 0 ] = tmp2 [ 0 ]		1682161	0		=			
ANR	1682820	ArrayIndexing	tmp [ d + 0 ]		1682161	0					
ANR	1682821	Identifier	tmp		1682161	0					
ANR	1682822	AdditiveExpression	d + 0		1682161	1		+			
ANR	1682823	Identifier	d		1682161	0					
ANR	1682824	PrimaryExpression	0		1682161	1					
ANR	1682825	ArrayIndexing	tmp2 [ 0 ]		1682161	1					
ANR	1682826	Identifier	tmp2		1682161	0					
ANR	1682827	PrimaryExpression	0		1682161	1					
ANR	1682828	ExpressionStatement	tmp [ d + 1 ] = tmp2 [ 1 ]	185:24:3764:3793	1682161	9	True				
ANR	1682829	AssignmentExpression	tmp [ d + 1 ] = tmp2 [ 1 ]		1682161	0		=			
ANR	1682830	ArrayIndexing	tmp [ d + 1 ]		1682161	0					
ANR	1682831	Identifier	tmp		1682161	0					
ANR	1682832	AdditiveExpression	d + 1		1682161	1		+			
ANR	1682833	Identifier	d		1682161	0					
ANR	1682834	PrimaryExpression	1		1682161	1					
ANR	1682835	ArrayIndexing	tmp2 [ 1 ]		1682161	1					
ANR	1682836	Identifier	tmp2		1682161	0					
ANR	1682837	PrimaryExpression	1		1682161	1					
ANR	1682838	ExpressionStatement	tmp [ d + 0 + stride ] = tmp2 [ 0 + stride ]	187:24:3820:3858	1682161	10	True				
ANR	1682839	AssignmentExpression	tmp [ d + 0 + stride ] = tmp2 [ 0 + stride ]		1682161	0		=			
ANR	1682840	ArrayIndexing	tmp [ d + 0 + stride ]		1682161	0					
ANR	1682841	Identifier	tmp		1682161	0					
ANR	1682842	AdditiveExpression	d + 0 + stride		1682161	1		+			
ANR	1682843	Identifier	d		1682161	0					
ANR	1682844	AdditiveExpression	0 + stride		1682161	1		+			
ANR	1682845	PrimaryExpression	0		1682161	0					
ANR	1682846	Identifier	stride		1682161	1					
ANR	1682847	ArrayIndexing	tmp2 [ 0 + stride ]		1682161	1					
ANR	1682848	Identifier	tmp2		1682161	0					
ANR	1682849	AdditiveExpression	0 + stride		1682161	1		+			
ANR	1682850	PrimaryExpression	0		1682161	0					
ANR	1682851	Identifier	stride		1682161	1					
ANR	1682852	ExpressionStatement	tmp [ d + 1 + stride ] = tmp2 [ 1 + stride ]	189:24:3885:3923	1682161	11	True				
ANR	1682853	AssignmentExpression	tmp [ d + 1 + stride ] = tmp2 [ 1 + stride ]		1682161	0		=			
ANR	1682854	ArrayIndexing	tmp [ d + 1 + stride ]		1682161	0					
ANR	1682855	Identifier	tmp		1682161	0					
ANR	1682856	AdditiveExpression	d + 1 + stride		1682161	1		+			
ANR	1682857	Identifier	d		1682161	0					
ANR	1682858	AdditiveExpression	1 + stride		1682161	1		+			
ANR	1682859	PrimaryExpression	1		1682161	0					
ANR	1682860	Identifier	stride		1682161	1					
ANR	1682861	ArrayIndexing	tmp2 [ 1 + stride ]		1682161	1					
ANR	1682862	Identifier	tmp2		1682161	0					
ANR	1682863	AdditiveExpression	1 + stride		1682161	1		+			
ANR	1682864	PrimaryExpression	1		1682161	0					
ANR	1682865	Identifier	stride		1682161	1					
ANR	1682866	BreakStatement	break ;	191:24:3950:3955	1682161	12	True				
ANR	1682867	Label	case 0x40 :	193:20:3978:3987	1682161	13	True				
ANR	1682868	ExpressionStatement	tmp [ d + 0 ] = data [ 0 ]	195:24:4022:4051	1682161	14	True				
ANR	1682869	AssignmentExpression	tmp [ d + 0 ] = data [ 0 ]		1682161	0		=			
ANR	1682870	ArrayIndexing	tmp [ d + 0 ]		1682161	0					
ANR	1682871	Identifier	tmp		1682161	0					
ANR	1682872	AdditiveExpression	d + 0		1682161	1		+			
ANR	1682873	Identifier	d		1682161	0					
ANR	1682874	PrimaryExpression	0		1682161	1					
ANR	1682875	ArrayIndexing	data [ 0 ]		1682161	1					
ANR	1682876	Identifier	data		1682161	0					
ANR	1682877	PrimaryExpression	0		1682161	1					
ANR	1682878	ExpressionStatement	tmp [ d + 1 ] = data [ 0 ]	197:24:4078:4107	1682161	15	True				
ANR	1682879	AssignmentExpression	tmp [ d + 1 ] = data [ 0 ]		1682161	0		=			
ANR	1682880	ArrayIndexing	tmp [ d + 1 ]		1682161	0					
ANR	1682881	Identifier	tmp		1682161	0					
ANR	1682882	AdditiveExpression	d + 1		1682161	1		+			
ANR	1682883	Identifier	d		1682161	0					
ANR	1682884	PrimaryExpression	1		1682161	1					
ANR	1682885	ArrayIndexing	data [ 0 ]		1682161	1					
ANR	1682886	Identifier	data		1682161	0					
ANR	1682887	PrimaryExpression	0		1682161	1					
ANR	1682888	ExpressionStatement	tmp [ d + 0 + stride ] = data [ 0 ]	199:24:4134:4163	1682161	16	True				
ANR	1682889	AssignmentExpression	tmp [ d + 0 + stride ] = data [ 0 ]		1682161	0		=			
ANR	1682890	ArrayIndexing	tmp [ d + 0 + stride ]		1682161	0					
ANR	1682891	Identifier	tmp		1682161	0					
ANR	1682892	AdditiveExpression	d + 0 + stride		1682161	1		+			
ANR	1682893	Identifier	d		1682161	0					
ANR	1682894	AdditiveExpression	0 + stride		1682161	1		+			
ANR	1682895	PrimaryExpression	0		1682161	0					
ANR	1682896	Identifier	stride		1682161	1					
ANR	1682897	ArrayIndexing	data [ 0 ]		1682161	1					
ANR	1682898	Identifier	data		1682161	0					
ANR	1682899	PrimaryExpression	0		1682161	1					
ANR	1682900	ExpressionStatement	tmp [ d + 1 + stride ] = data [ 0 ]	201:24:4190:4219	1682161	17	True				
ANR	1682901	AssignmentExpression	tmp [ d + 1 + stride ] = data [ 0 ]		1682161	0		=			
ANR	1682902	ArrayIndexing	tmp [ d + 1 + stride ]		1682161	0					
ANR	1682903	Identifier	tmp		1682161	0					
ANR	1682904	AdditiveExpression	d + 1 + stride		1682161	1		+			
ANR	1682905	Identifier	d		1682161	0					
ANR	1682906	AdditiveExpression	1 + stride		1682161	1		+			
ANR	1682907	PrimaryExpression	1		1682161	0					
ANR	1682908	Identifier	stride		1682161	1					
ANR	1682909	ArrayIndexing	data [ 0 ]		1682161	1					
ANR	1682910	Identifier	data		1682161	0					
ANR	1682911	PrimaryExpression	0		1682161	1					
ANR	1682912	ExpressionStatement	data ++	203:24:4246:4252	1682161	18	True				
ANR	1682913	PostIncDecOperationExpression	data ++		1682161	0					
ANR	1682914	Identifier	data		1682161	0					
ANR	1682915	IncDec	++		1682161	1					
ANR	1682916	BreakStatement	break ;	205:24:4279:4284	1682161	19	True				
ANR	1682917	Label	case 0xC0 :	207:20:4307:4316	1682161	20	True				
ANR	1682918	ExpressionStatement	tmp [ d + 0 ] = * data ++	209:24:4350:4379	1682161	21	True				
ANR	1682919	AssignmentExpression	tmp [ d + 0 ] = * data ++		1682161	0		=			
ANR	1682920	ArrayIndexing	tmp [ d + 0 ]		1682161	0					
ANR	1682921	Identifier	tmp		1682161	0					
ANR	1682922	AdditiveExpression	d + 0		1682161	1		+			
ANR	1682923	Identifier	d		1682161	0					
ANR	1682924	PrimaryExpression	0		1682161	1					
ANR	1682925	UnaryOperationExpression	* data ++		1682161	1					
ANR	1682926	UnaryOperator	*		1682161	0					
ANR	1682927	PostIncDecOperationExpression	data ++		1682161	1					
ANR	1682928	Identifier	data		1682161	0					
ANR	1682929	IncDec	++		1682161	1					
ANR	1682930	ExpressionStatement	tmp [ d + 1 ] = * data ++	211:24:4406:4435	1682161	22	True				
ANR	1682931	AssignmentExpression	tmp [ d + 1 ] = * data ++		1682161	0		=			
ANR	1682932	ArrayIndexing	tmp [ d + 1 ]		1682161	0					
ANR	1682933	Identifier	tmp		1682161	0					
ANR	1682934	AdditiveExpression	d + 1		1682161	1		+			
ANR	1682935	Identifier	d		1682161	0					
ANR	1682936	PrimaryExpression	1		1682161	1					
ANR	1682937	UnaryOperationExpression	* data ++		1682161	1					
ANR	1682938	UnaryOperator	*		1682161	0					
ANR	1682939	PostIncDecOperationExpression	data ++		1682161	1					
ANR	1682940	Identifier	data		1682161	0					
ANR	1682941	IncDec	++		1682161	1					
ANR	1682942	ExpressionStatement	tmp [ d + 0 + stride ] = * data ++	213:24:4462:4491	1682161	23	True				
ANR	1682943	AssignmentExpression	tmp [ d + 0 + stride ] = * data ++		1682161	0		=			
ANR	1682944	ArrayIndexing	tmp [ d + 0 + stride ]		1682161	0					
ANR	1682945	Identifier	tmp		1682161	0					
ANR	1682946	AdditiveExpression	d + 0 + stride		1682161	1		+			
ANR	1682947	Identifier	d		1682161	0					
ANR	1682948	AdditiveExpression	0 + stride		1682161	1		+			
ANR	1682949	PrimaryExpression	0		1682161	0					
ANR	1682950	Identifier	stride		1682161	1					
ANR	1682951	UnaryOperationExpression	* data ++		1682161	1					
ANR	1682952	UnaryOperator	*		1682161	0					
ANR	1682953	PostIncDecOperationExpression	data ++		1682161	1					
ANR	1682954	Identifier	data		1682161	0					
ANR	1682955	IncDec	++		1682161	1					
ANR	1682956	ExpressionStatement	tmp [ d + 1 + stride ] = * data ++	215:24:4518:4547	1682161	24	True				
ANR	1682957	AssignmentExpression	tmp [ d + 1 + stride ] = * data ++		1682161	0		=			
ANR	1682958	ArrayIndexing	tmp [ d + 1 + stride ]		1682161	0					
ANR	1682959	Identifier	tmp		1682161	0					
ANR	1682960	AdditiveExpression	d + 1 + stride		1682161	1		+			
ANR	1682961	Identifier	d		1682161	0					
ANR	1682962	AdditiveExpression	1 + stride		1682161	1		+			
ANR	1682963	PrimaryExpression	1		1682161	0					
ANR	1682964	Identifier	stride		1682161	1					
ANR	1682965	UnaryOperationExpression	* data ++		1682161	1					
ANR	1682966	UnaryOperator	*		1682161	0					
ANR	1682967	PostIncDecOperationExpression	data ++		1682161	1					
ANR	1682968	Identifier	data		1682161	0					
ANR	1682969	IncDec	++		1682161	1					
ANR	1682970	BreakStatement	break ;	217:24:4574:4579	1682161	25	True				
ANR	1682971	ExpressionStatement	mask <<= 2	221:20:4625:4635	1682161	4	True				
ANR	1682972	AssignmentExpression	mask <<= 2		1682161	0		<<=			
ANR	1682973	Identifier	mask		1682161	0					
ANR	1682974	PrimaryExpression	2		1682161	1					
ANR	1682975	BreakStatement	break ;	225:16:4673:4678	1682161	31	True				
ANR	1682976	Label	case 32 :	227:12:4693:4700	1682161	32	True				
ANR	1682977	ExpressionStatement	mask = AV_RB16 ( msk )	229:16:4753:4772	1682161	33	True				
ANR	1682978	AssignmentExpression	mask = AV_RB16 ( msk )		1682161	0		=			
ANR	1682979	Identifier	mask		1682161	0					
ANR	1682980	CallExpression	AV_RB16 ( msk )		1682161	1					
ANR	1682981	Callee	AV_RB16		1682161	0					
ANR	1682982	Identifier	AV_RB16		1682161	0					
ANR	1682983	ArgumentList	msk		1682161	1					
ANR	1682984	Argument	msk		1682161	0					
ANR	1682985	Identifier	msk		1682161	0					
ANR	1682986	ExpressionStatement	msk += 2	231:16:4791:4799	1682161	34	True				
ANR	1682987	AssignmentExpression	msk += 2		1682161	0		+=			
ANR	1682988	Identifier	msk		1682161	0					
ANR	1682989	PrimaryExpression	2		1682161	1					
ANR	1682990	ForStatement	for ( y = 0 ; y < 4 ; y ++ )		1682161	35					
ANR	1682991	ForInit	y = 0 ;	233:20:4822:4827	1682161	0	True				
ANR	1682992	AssignmentExpression	y = 0		1682161	0		=			
ANR	1682993	Identifier	y		1682161	0					
ANR	1682994	PrimaryExpression	0		1682161	1					
ANR	1682995	Condition	y < 4	233:27:4829:4833	1682161	1	True				
ANR	1682996	RelationalExpression	y < 4		1682161	0		<			
ANR	1682997	Identifier	y		1682161	0					
ANR	1682998	PrimaryExpression	4		1682161	1					
ANR	1682999	PostIncDecOperationExpression	y ++	233:34:4836:4838	1682161	2	True				
ANR	1683000	Identifier	y		1682161	0					
ANR	1683001	IncDec	++		1682161	1					
ANR	1683002	CompoundStatement		229:38:4700:4700	1682161	3					
ANR	1683003	ForStatement	for ( x = 0 ; x < 4 ; x ++ )		1682161	0					
ANR	1683004	ForInit	x = 0 ;	235:24:4867:4872	1682161	0	True				
ANR	1683005	AssignmentExpression	x = 0		1682161	0		=			
ANR	1683006	Identifier	x		1682161	0					
ANR	1683007	PrimaryExpression	0		1682161	1					
ANR	1683008	Condition	x < 4	235:31:4874:4878	1682161	1	True				
ANR	1683009	RelationalExpression	x < 4		1682161	0		<			
ANR	1683010	Identifier	x		1682161	0					
ANR	1683011	PrimaryExpression	4		1682161	1					
ANR	1683012	PostIncDecOperationExpression	x ++	235:38:4881:4883	1682161	2	True				
ANR	1683013	Identifier	x		1682161	0					
ANR	1683014	IncDec	++		1682161	1					
ANR	1683015	CompoundStatement		231:42:4745:4745	1682161	3					
ANR	1683016	ExpressionStatement	tmp [ x ] = data [ mask & 1 ]	237:24:4912:4935	1682161	0	True				
ANR	1683017	AssignmentExpression	tmp [ x ] = data [ mask & 1 ]		1682161	0		=			
ANR	1683018	ArrayIndexing	tmp [ x ]		1682161	0					
ANR	1683019	Identifier	tmp		1682161	0					
ANR	1683020	Identifier	x		1682161	1					
ANR	1683021	ArrayIndexing	data [ mask & 1 ]		1682161	1					
ANR	1683022	Identifier	data		1682161	0					
ANR	1683023	BitAndExpression	mask & 1		1682161	1		&			
ANR	1683024	Identifier	mask		1682161	0					
ANR	1683025	PrimaryExpression	1		1682161	1					
ANR	1683026	ExpressionStatement	mask >>= 1	239:24:4962:4972	1682161	1	True				
ANR	1683027	AssignmentExpression	mask >>= 1		1682161	0		>>=			
ANR	1683028	Identifier	mask		1682161	0					
ANR	1683029	PrimaryExpression	1		1682161	1					
ANR	1683030	ExpressionStatement	tmp += stride	243:20:5018:5032	1682161	1	True				
ANR	1683031	AssignmentExpression	tmp += stride		1682161	0		+=			
ANR	1683032	Identifier	tmp		1682161	0					
ANR	1683033	Identifier	stride		1682161	1					
ANR	1683034	ExpressionStatement	tmp2 += stride	245:20:5055:5069	1682161	2	True				
ANR	1683035	AssignmentExpression	tmp2 += stride		1682161	0		+=			
ANR	1683036	Identifier	tmp2		1682161	0					
ANR	1683037	Identifier	stride		1682161	1					
ANR	1683038	ExpressionStatement	data += 2	249:16:5107:5116	1682161	36	True				
ANR	1683039	AssignmentExpression	data += 2		1682161	0		+=			
ANR	1683040	Identifier	data		1682161	0					
ANR	1683041	PrimaryExpression	2		1682161	1					
ANR	1683042	BreakStatement	break ;	251:16:5135:5140	1682161	37	True				
ANR	1683043	Label	case 33 :	253:12:5155:5162	1682161	38	True				
ANR	1683044	Label	case 34 :	255:12:5216:5223	1682161	39	True				
ANR	1683045	ExpressionStatement	mask = AV_RB32 ( msk )	257:16:5242:5261	1682161	40	True				
ANR	1683046	AssignmentExpression	mask = AV_RB32 ( msk )		1682161	0		=			
ANR	1683047	Identifier	mask		1682161	0					
ANR	1683048	CallExpression	AV_RB32 ( msk )		1682161	1					
ANR	1683049	Callee	AV_RB32		1682161	0					
ANR	1683050	Identifier	AV_RB32		1682161	0					
ANR	1683051	ArgumentList	msk		1682161	1					
ANR	1683052	Argument	msk		1682161	0					
ANR	1683053	Identifier	msk		1682161	0					
ANR	1683054	ExpressionStatement	msk += 4	259:16:5280:5288	1682161	41	True				
ANR	1683055	AssignmentExpression	msk += 4		1682161	0		+=			
ANR	1683056	Identifier	msk		1682161	0					
ANR	1683057	PrimaryExpression	4		1682161	1					
ANR	1683058	ForStatement	for ( y = 0 ; y < 4 ; y ++ )		1682161	42					
ANR	1683059	ForInit	y = 0 ;	261:20:5311:5316	1682161	0	True				
ANR	1683060	AssignmentExpression	y = 0		1682161	0		=			
ANR	1683061	Identifier	y		1682161	0					
ANR	1683062	PrimaryExpression	0		1682161	1					
ANR	1683063	Condition	y < 4	261:27:5318:5322	1682161	1	True				
ANR	1683064	RelationalExpression	y < 4		1682161	0		<			
ANR	1683065	Identifier	y		1682161	0					
ANR	1683066	PrimaryExpression	4		1682161	1					
ANR	1683067	PostIncDecOperationExpression	y ++	261:34:5325:5327	1682161	2	True				
ANR	1683068	Identifier	y		1682161	0					
ANR	1683069	IncDec	++		1682161	1					
ANR	1683070	CompoundStatement		257:38:5189:5189	1682161	3					
ANR	1683071	ForStatement	for ( x = 0 ; x < 4 ; x ++ )		1682161	0					
ANR	1683072	ForInit	x = 0 ;	263:24:5356:5361	1682161	0	True				
ANR	1683073	AssignmentExpression	x = 0		1682161	0		=			
ANR	1683074	Identifier	x		1682161	0					
ANR	1683075	PrimaryExpression	0		1682161	1					
ANR	1683076	Condition	x < 4	263:31:5363:5367	1682161	1	True				
ANR	1683077	RelationalExpression	x < 4		1682161	0		<			
ANR	1683078	Identifier	x		1682161	0					
ANR	1683079	PrimaryExpression	4		1682161	1					
ANR	1683080	PostIncDecOperationExpression	x ++	263:38:5370:5372	1682161	2	True				
ANR	1683081	Identifier	x		1682161	0					
ANR	1683082	IncDec	++		1682161	1					
ANR	1683083	CompoundStatement		259:42:5234:5234	1682161	3					
ANR	1683084	ExpressionStatement	tmp [ x ] = data [ mask & 3 ]	265:24:5401:5424	1682161	0	True				
ANR	1683085	AssignmentExpression	tmp [ x ] = data [ mask & 3 ]		1682161	0		=			
ANR	1683086	ArrayIndexing	tmp [ x ]		1682161	0					
ANR	1683087	Identifier	tmp		1682161	0					
ANR	1683088	Identifier	x		1682161	1					
ANR	1683089	ArrayIndexing	data [ mask & 3 ]		1682161	1					
ANR	1683090	Identifier	data		1682161	0					
ANR	1683091	BitAndExpression	mask & 3		1682161	1		&			
ANR	1683092	Identifier	mask		1682161	0					
ANR	1683093	PrimaryExpression	3		1682161	1					
ANR	1683094	ExpressionStatement	mask >>= 2	267:24:5451:5461	1682161	1	True				
ANR	1683095	AssignmentExpression	mask >>= 2		1682161	0		>>=			
ANR	1683096	Identifier	mask		1682161	0					
ANR	1683097	PrimaryExpression	2		1682161	1					
ANR	1683098	ExpressionStatement	tmp += stride	271:20:5507:5521	1682161	1	True				
ANR	1683099	AssignmentExpression	tmp += stride		1682161	0		+=			
ANR	1683100	Identifier	tmp		1682161	0					
ANR	1683101	Identifier	stride		1682161	1					
ANR	1683102	ExpressionStatement	tmp2 += stride	273:20:5544:5558	1682161	2	True				
ANR	1683103	AssignmentExpression	tmp2 += stride		1682161	0		+=			
ANR	1683104	Identifier	tmp2		1682161	0					
ANR	1683105	Identifier	stride		1682161	1					
ANR	1683106	ExpressionStatement	data += type - 30	277:16:5596:5613	1682161	43	True				
ANR	1683107	AssignmentExpression	data += type - 30		1682161	0		+=			
ANR	1683108	Identifier	data		1682161	0					
ANR	1683109	AdditiveExpression	type - 30		1682161	1		-			
ANR	1683110	Identifier	type		1682161	0					
ANR	1683111	PrimaryExpression	30		1682161	1					
ANR	1683112	BreakStatement	break ;	279:16:5632:5637	1682161	44	True				
ANR	1683113	Label	default :	281:12:5652:5659	1682161	45	True				
ANR	1683114	Identifier	default		1682161	0					
ANR	1683115	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Unknown opcode %d\\n"" , type )"	283:16:5678:5734	1682161	46	True				
ANR	1683116	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Unknown opcode %d\\n"" , type )"		1682161	0					
ANR	1683117	Callee	av_log		1682161	0					
ANR	1683118	Identifier	av_log		1682161	0					
ANR	1683119	ArgumentList	avctx		1682161	1					
ANR	1683120	Argument	avctx		1682161	0					
ANR	1683121	Identifier	avctx		1682161	0					
ANR	1683122	Argument	AV_LOG_ERROR		1682161	1					
ANR	1683123	Identifier	AV_LOG_ERROR		1682161	0					
ANR	1683124	Argument	"""Unknown opcode %d\\n"""		1682161	2					
ANR	1683125	PrimaryExpression	"""Unknown opcode %d\\n"""		1682161	0					
ANR	1683126	Argument	type		1682161	3					
ANR	1683127	Identifier	type		1682161	0					
ANR	1683128	ReturnStatement	return AVERROR_INVALIDDATA ;	285:16:5753:5779	1682161	47	True				
ANR	1683129	Identifier	AVERROR_INVALIDDATA		1682161	0					
ANR	1683130	ExpressionStatement	dst += stride * 4	291:8:5816:5833	1682161	1	True				
ANR	1683131	AssignmentExpression	dst += stride * 4		1682161	0		+=			
ANR	1683132	Identifier	dst		1682161	0					
ANR	1683133	MultiplicativeExpression	stride * 4		1682161	1		*			
ANR	1683134	Identifier	stride		1682161	0					
ANR	1683135	PrimaryExpression	4		1682161	1					
ANR	1683136	ExpressionStatement	ref += stride * 4	293:8:5844:5861	1682161	2	True				
ANR	1683137	AssignmentExpression	ref += stride * 4		1682161	0		+=			
ANR	1683138	Identifier	ref		1682161	0					
ANR	1683139	MultiplicativeExpression	stride * 4		1682161	1		*			
ANR	1683140	Identifier	stride		1682161	0					
ANR	1683141	PrimaryExpression	4		1682161	1					
ANR	1683142	ReturnStatement	return 0 ;	297:4:5875:5883	1682161	9	True				
ANR	1683143	PrimaryExpression	0		1682161	0					
ANR	1683144	ReturnType	static int		1682161	1					
ANR	1683145	Identifier	decode_13		1682161	2					
ANR	1683146	ParameterList	"AVCodecContext * avctx , DxaDecContext * c , uint8_t * dst , int stride , uint8_t * src , uint8_t * ref"		1682161	3					
ANR	1683147	Parameter	AVCodecContext * avctx	1:21:21:41	1682161	0	True				
ANR	1683148	ParameterType	AVCodecContext *		1682161	0					
ANR	1683149	Identifier	avctx		1682161	1					
ANR	1683150	Parameter	DxaDecContext * c	1:44:44:59	1682161	1	True				
ANR	1683151	ParameterType	DxaDecContext *		1682161	0					
ANR	1683152	Identifier	c		1682161	1					
ANR	1683153	Parameter	uint8_t * dst	1:62:62:73	1682161	2	True				
ANR	1683154	ParameterType	uint8_t *		1682161	0					
ANR	1683155	Identifier	dst		1682161	1					
ANR	1683156	Parameter	int stride	3:21:98:107	1682161	3	True				
ANR	1683157	ParameterType	int		1682161	0					
ANR	1683158	Identifier	stride		1682161	1					
ANR	1683159	Parameter	uint8_t * src	3:33:110:121	1682161	4	True				
ANR	1683160	ParameterType	uint8_t *		1682161	0					
ANR	1683161	Identifier	src		1682161	1					
ANR	1683162	Parameter	uint8_t * ref	3:47:124:135	1682161	5	True				
ANR	1683163	ParameterType	uint8_t *		1682161	0					
ANR	1683164	Identifier	ref		1682161	1					
ANR	1683165	CFGEntryNode	ENTRY		1682161		True				
ANR	1683166	CFGExitNode	EXIT		1682161		True				
ANR	1683167	Symbol	* tmp		1682161						
ANR	1683168	Symbol	* stride		1682161						
ANR	1683169	Symbol	* x		1682161						
ANR	1683170	Symbol	code		1682161						
ANR	1683171	Symbol	* mask		1682161						
ANR	1683172	Symbol	dst		1682161						
ANR	1683173	Symbol	msk		1682161						
ANR	1683174	Symbol	data		1682161						
ANR	1683175	Symbol	* data ++		1682161						
ANR	1683176	Symbol	* shift1		1682161						
ANR	1683177	Symbol	* shift2		1682161						
ANR	1683178	Symbol	shift1		1682161						
ANR	1683179	Symbol	avctx -> width		1682161						
ANR	1683180	Symbol	AV_RB16		1682161						
ANR	1683181	Symbol	stride		1682161						
ANR	1683182	Symbol	type		1682161						
ANR	1683183	Symbol	* mv		1682161						
ANR	1683184	Symbol	tmp2		1682161						
ANR	1683185	Symbol	d2		1682161						
ANR	1683186	Symbol	AV_RB32		1682161						
ANR	1683187	Symbol	ref		1682161						
ANR	1683188	Symbol	avctx -> height		1682161						
ANR	1683189	Symbol	* type		1682161						
ANR	1683190	Symbol	* tmp2		1682161						
ANR	1683191	Symbol	tmp		1682161						
ANR	1683192	Symbol	* mv ++		1682161						
ANR	1683193	Symbol	shift2		1682161						
ANR	1683194	Symbol	avctx		1682161						
ANR	1683195	Symbol	mask		1682161						
ANR	1683196	Symbol	c		1682161						
ANR	1683197	Symbol	d		1682161						
ANR	1683198	Symbol	AV_LOG_ERROR		1682161						
ANR	1683199	Symbol	src		1682161						
ANR	1683200	Symbol	mv		1682161						
ANR	1683201	Symbol	i		1682161						
ANR	1683202	Symbol	j		1682161						
ANR	1683203	Symbol	k		1682161						
ANR	1683204	Symbol	* d		1682161						
ANR	1683205	Symbol	* msk		1682161						
ANR	1683206	Symbol	* msk ++		1682161						
ANR	1683207	Symbol	* avctx		1682161						
ANR	1683208	Symbol	x		1682161						
ANR	1683209	Symbol	y		1682161						
ANR	1683210	Symbol	AVERROR_INVALIDDATA		1682161						
ANR	1683211	Symbol	* data		1682161						
ANR	1683212	Symbol	* code ++		1682161						
