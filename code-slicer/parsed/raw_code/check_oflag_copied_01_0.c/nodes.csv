command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1267317	File	/home/p4ultr4n/workplace/ReVeal/raw_code/check_oflag_copied_01_0.c								
ANR	1267318	Function	check_oflag_copied	1:0:0:2295							
ANR	1267319	FunctionDef	"check_oflag_copied (BlockDriverState * bs , BdrvCheckResult * res)"		1267318	0					
ANR	1267320	CompoundStatement		3:0:75:2295	1267318	0					
ANR	1267321	IdentifierDeclStatement	BDRVQcowState * s = bs -> opaque ;	5:4:82:111	1267318	0	True				
ANR	1267322	IdentifierDecl	* s = bs -> opaque		1267318	0					
ANR	1267323	IdentifierDeclType	BDRVQcowState *		1267318	0					
ANR	1267324	Identifier	s		1267318	1					
ANR	1267325	AssignmentExpression	* s = bs -> opaque		1267318	2		=			
ANR	1267326	Identifier	s		1267318	0					
ANR	1267327	PtrMemberAccess	bs -> opaque		1267318	1					
ANR	1267328	Identifier	bs		1267318	0					
ANR	1267329	Identifier	opaque		1267318	1					
ANR	1267330	IdentifierDeclStatement	"uint64_t * l2_table = qemu_blockalign ( bs , s -> cluster_size ) ;"	7:4:118:175	1267318	1	True				
ANR	1267331	IdentifierDecl	"* l2_table = qemu_blockalign ( bs , s -> cluster_size )"		1267318	0					
ANR	1267332	IdentifierDeclType	uint64_t *		1267318	0					
ANR	1267333	Identifier	l2_table		1267318	1					
ANR	1267334	AssignmentExpression	"* l2_table = qemu_blockalign ( bs , s -> cluster_size )"		1267318	2		=			
ANR	1267335	Identifier	l2_table		1267318	0					
ANR	1267336	CallExpression	"qemu_blockalign ( bs , s -> cluster_size )"		1267318	1					
ANR	1267337	Callee	qemu_blockalign		1267318	0					
ANR	1267338	Identifier	qemu_blockalign		1267318	0					
ANR	1267339	ArgumentList	bs		1267318	1					
ANR	1267340	Argument	bs		1267318	0					
ANR	1267341	Identifier	bs		1267318	0					
ANR	1267342	Argument	s -> cluster_size		1267318	1					
ANR	1267343	PtrMemberAccess	s -> cluster_size		1267318	0					
ANR	1267344	Identifier	s		1267318	0					
ANR	1267345	Identifier	cluster_size		1267318	1					
ANR	1267346	IdentifierDeclStatement	int ret ;	9:4:182:189	1267318	2	True				
ANR	1267347	IdentifierDecl	ret		1267318	0					
ANR	1267348	IdentifierDeclType	int		1267318	0					
ANR	1267349	Identifier	ret		1267318	1					
ANR	1267350	IdentifierDeclStatement	int refcount ;	11:4:196:208	1267318	3	True				
ANR	1267351	IdentifierDecl	refcount		1267318	0					
ANR	1267352	IdentifierDeclType	int		1267318	0					
ANR	1267353	Identifier	refcount		1267318	1					
ANR	1267354	IdentifierDeclStatement	"int i , j ;"	13:4:215:223	1267318	4	True				
ANR	1267355	IdentifierDecl	i		1267318	0					
ANR	1267356	IdentifierDeclType	int		1267318	0					
ANR	1267357	Identifier	i		1267318	1					
ANR	1267358	IdentifierDecl	j		1267318	1					
ANR	1267359	IdentifierDeclType	int		1267318	0					
ANR	1267360	Identifier	j		1267318	1					
ANR	1267361	ForStatement	for ( i = 0 ; i < s -> l1_size ; i ++ )		1267318	5					
ANR	1267362	ForInit	i = 0 ;	17:9:237:242	1267318	0	True				
ANR	1267363	AssignmentExpression	i = 0		1267318	0		=			
ANR	1267364	Identifier	i		1267318	0					
ANR	1267365	PrimaryExpression	0		1267318	1					
ANR	1267366	Condition	i < s -> l1_size	17:16:244:257	1267318	1	True				
ANR	1267367	RelationalExpression	i < s -> l1_size		1267318	0		<			
ANR	1267368	Identifier	i		1267318	0					
ANR	1267369	PtrMemberAccess	s -> l1_size		1267318	1					
ANR	1267370	Identifier	s		1267318	0					
ANR	1267371	Identifier	l1_size		1267318	1					
ANR	1267372	PostIncDecOperationExpression	i ++	17:32:260:262	1267318	2	True				
ANR	1267373	Identifier	i		1267318	0					
ANR	1267374	IncDec	++		1267318	1					
ANR	1267375	CompoundStatement		19:8:245:292	1267318	3					
ANR	1267376	IdentifierDeclStatement	uint64_t l1_entry = s -> l1_table [ i ] ;	19:8:276:310	1267318	0	True				
ANR	1267377	IdentifierDecl	l1_entry = s -> l1_table [ i ]		1267318	0					
ANR	1267378	IdentifierDeclType	uint64_t		1267318	0					
ANR	1267379	Identifier	l1_entry		1267318	1					
ANR	1267380	AssignmentExpression	l1_entry = s -> l1_table [ i ]		1267318	2		=			
ANR	1267381	Identifier	l1_entry		1267318	0					
ANR	1267382	ArrayIndexing	s -> l1_table [ i ]		1267318	1					
ANR	1267383	PtrMemberAccess	s -> l1_table		1267318	0					
ANR	1267384	Identifier	s		1267318	0					
ANR	1267385	Identifier	l1_table		1267318	1					
ANR	1267386	Identifier	i		1267318	1					
ANR	1267387	IdentifierDeclStatement	uint64_t l2_offset = l1_entry & L1E_OFFSET_MASK ;	21:8:321:368	1267318	1	True				
ANR	1267388	IdentifierDecl	l2_offset = l1_entry & L1E_OFFSET_MASK		1267318	0					
ANR	1267389	IdentifierDeclType	uint64_t		1267318	0					
ANR	1267390	Identifier	l2_offset		1267318	1					
ANR	1267391	AssignmentExpression	l2_offset = l1_entry & L1E_OFFSET_MASK		1267318	2		=			
ANR	1267392	Identifier	l2_offset		1267318	0					
ANR	1267393	BitAndExpression	l1_entry & L1E_OFFSET_MASK		1267318	1		&			
ANR	1267394	Identifier	l1_entry		1267318	0					
ANR	1267395	Identifier	L1E_OFFSET_MASK		1267318	1					
ANR	1267396	IfStatement	if ( ! l2_offset )		1267318	2					
ANR	1267397	Condition	! l2_offset	25:12:385:394	1267318	0	True				
ANR	1267398	UnaryOperationExpression	! l2_offset		1267318	0					
ANR	1267399	UnaryOperator	!		1267318	0					
ANR	1267400	Identifier	l2_offset		1267318	1					
ANR	1267401	CompoundStatement		23:24:321:321	1267318	1					
ANR	1267402	ContinueStatement	continue ;	27:12:412:420	1267318	0	True				
ANR	1267403	ExpressionStatement	"refcount = get_refcount ( bs , l2_offset >> s -> cluster_bits )"	33:8:444:501	1267318	3	True				
ANR	1267404	AssignmentExpression	"refcount = get_refcount ( bs , l2_offset >> s -> cluster_bits )"		1267318	0		=			
ANR	1267405	Identifier	refcount		1267318	0					
ANR	1267406	CallExpression	"get_refcount ( bs , l2_offset >> s -> cluster_bits )"		1267318	1					
ANR	1267407	Callee	get_refcount		1267318	0					
ANR	1267408	Identifier	get_refcount		1267318	0					
ANR	1267409	ArgumentList	bs		1267318	1					
ANR	1267410	Argument	bs		1267318	0					
ANR	1267411	Identifier	bs		1267318	0					
ANR	1267412	Argument	l2_offset >> s -> cluster_bits		1267318	1					
ANR	1267413	ShiftExpression	l2_offset >> s -> cluster_bits		1267318	0		>>			
ANR	1267414	Identifier	l2_offset		1267318	0					
ANR	1267415	PtrMemberAccess	s -> cluster_bits		1267318	1					
ANR	1267416	Identifier	s		1267318	0					
ANR	1267417	Identifier	cluster_bits		1267318	1					
ANR	1267418	IfStatement	if ( refcount < 0 )		1267318	4					
ANR	1267419	Condition	refcount < 0	35:12:516:527	1267318	0	True				
ANR	1267420	RelationalExpression	refcount < 0		1267318	0		<			
ANR	1267421	Identifier	refcount		1267318	0					
ANR	1267422	PrimaryExpression	0		1267318	1					
ANR	1267423	CompoundStatement		33:26:454:454	1267318	1					
ANR	1267424	ContinueStatement	continue ;	39:12:611:619	1267318	0	True				
ANR	1267425	IfStatement	if ( ( refcount == 1 ) != ( ( l1_entry & QCOW_OFLAG_COPIED ) != 0 ) )		1267318	5					
ANR	1267426	Condition	( refcount == 1 ) != ( ( l1_entry & QCOW_OFLAG_COPIED ) != 0 )	43:12:645:700	1267318	0	True				
ANR	1267427	EqualityExpression	( refcount == 1 ) != ( ( l1_entry & QCOW_OFLAG_COPIED ) != 0 )		1267318	0		!=			
ANR	1267428	EqualityExpression	refcount == 1		1267318	0		==			
ANR	1267429	Identifier	refcount		1267318	0					
ANR	1267430	PrimaryExpression	1		1267318	1					
ANR	1267431	EqualityExpression	( l1_entry & QCOW_OFLAG_COPIED ) != 0		1267318	1		!=			
ANR	1267432	BitAndExpression	l1_entry & QCOW_OFLAG_COPIED		1267318	0		&			
ANR	1267433	Identifier	l1_entry		1267318	0					
ANR	1267434	Identifier	QCOW_OFLAG_COPIED		1267318	1					
ANR	1267435	PrimaryExpression	0		1267318	1					
ANR	1267436	CompoundStatement		41:70:627:627	1267318	1					
ANR	1267437	Statement	fprintf	45:12:718:724	1267318	0	True				
ANR	1267438	Statement	(	45:19:725:725	1267318	1	True				
ANR	1267439	Statement	stderr	45:20:726:731	1267318	2	True				
ANR	1267440	Statement	","	45:26:732:732	1267318	3	True				
ANR	1267441	Statement	"""ERROR OFLAG_COPIED L2 cluster: l1_index=%d """	45:28:734:778	1267318	4	True				
ANR	1267442	Statement	"""l1_entry=%"""	47:20:801:812	1267318	5	True				
ANR	1267443	Statement	PRIx64	47:33:814:819	1267318	6	True				
ANR	1267444	Statement	""" refcount=%d\\n"""	47:40:821:836	1267318	7	True				
ANR	1267445	Statement	","	47:56:837:837	1267318	8	True				
ANR	1267446	Statement	i	49:20:860:860	1267318	9	True				
ANR	1267447	Statement	","	49:21:861:861	1267318	10	True				
ANR	1267448	Statement	l1_entry	49:23:863:870	1267318	11	True				
ANR	1267449	Statement	","	49:31:871:871	1267318	12	True				
ANR	1267450	Statement	refcount	49:33:873:880	1267318	13	True				
ANR	1267451	Statement	)	49:41:881:881	1267318	14	True				
ANR	1267452	ExpressionStatement		49:42:882:882	1267318	15	True				
ANR	1267453	ExpressionStatement	res -> corruptions ++	51:12:897:915	1267318	16	True				
ANR	1267454	PostIncDecOperationExpression	res -> corruptions ++		1267318	0					
ANR	1267455	PtrMemberAccess	res -> corruptions		1267318	0					
ANR	1267456	Identifier	res		1267318	0					
ANR	1267457	Identifier	corruptions		1267318	1					
ANR	1267458	IncDec	++		1267318	1					
ANR	1267459	ExpressionStatement	"ret = bdrv_pread ( bs -> file , l2_offset , l2_table , s -> l2_size * sizeof ( uint64_t ) )"	57:8:939:1043	1267318	6	True				
ANR	1267460	AssignmentExpression	"ret = bdrv_pread ( bs -> file , l2_offset , l2_table , s -> l2_size * sizeof ( uint64_t ) )"		1267318	0		=			
ANR	1267461	Identifier	ret		1267318	0					
ANR	1267462	CallExpression	"bdrv_pread ( bs -> file , l2_offset , l2_table , s -> l2_size * sizeof ( uint64_t ) )"		1267318	1					
ANR	1267463	Callee	bdrv_pread		1267318	0					
ANR	1267464	Identifier	bdrv_pread		1267318	0					
ANR	1267465	ArgumentList	bs -> file		1267318	1					
ANR	1267466	Argument	bs -> file		1267318	0					
ANR	1267467	PtrMemberAccess	bs -> file		1267318	0					
ANR	1267468	Identifier	bs		1267318	0					
ANR	1267469	Identifier	file		1267318	1					
ANR	1267470	Argument	l2_offset		1267318	1					
ANR	1267471	Identifier	l2_offset		1267318	0					
ANR	1267472	Argument	l2_table		1267318	2					
ANR	1267473	Identifier	l2_table		1267318	0					
ANR	1267474	Argument	s -> l2_size * sizeof ( uint64_t )		1267318	3					
ANR	1267475	MultiplicativeExpression	s -> l2_size * sizeof ( uint64_t )		1267318	0		*			
ANR	1267476	PtrMemberAccess	s -> l2_size		1267318	0					
ANR	1267477	Identifier	s		1267318	0					
ANR	1267478	Identifier	l2_size		1267318	1					
ANR	1267479	SizeofExpression	sizeof ( uint64_t )		1267318	1					
ANR	1267480	Sizeof	sizeof		1267318	0					
ANR	1267481	SizeofOperand	uint64_t		1267318	1					
ANR	1267482	IfStatement	if ( ret < 0 )		1267318	7					
ANR	1267483	Condition	ret < 0	61:12:1058:1064	1267318	0	True				
ANR	1267484	RelationalExpression	ret < 0		1267318	0		<			
ANR	1267485	Identifier	ret		1267318	0					
ANR	1267486	PrimaryExpression	0		1267318	1					
ANR	1267487	CompoundStatement		59:21:991:991	1267318	1					
ANR	1267488	ExpressionStatement	"fprintf ( stderr , ""ERROR: Could not read L2 table: %s\\n"" , strerror ( - ret ) )"	63:12:1082:1174	1267318	0	True				
ANR	1267489	CallExpression	"fprintf ( stderr , ""ERROR: Could not read L2 table: %s\\n"" , strerror ( - ret ) )"		1267318	0					
ANR	1267490	Callee	fprintf		1267318	0					
ANR	1267491	Identifier	fprintf		1267318	0					
ANR	1267492	ArgumentList	stderr		1267318	1					
ANR	1267493	Argument	stderr		1267318	0					
ANR	1267494	Identifier	stderr		1267318	0					
ANR	1267495	Argument	"""ERROR: Could not read L2 table: %s\\n"""		1267318	1					
ANR	1267496	PrimaryExpression	"""ERROR: Could not read L2 table: %s\\n"""		1267318	0					
ANR	1267497	Argument	strerror ( - ret )		1267318	2					
ANR	1267498	CallExpression	strerror ( - ret )		1267318	0					
ANR	1267499	Callee	strerror		1267318	0					
ANR	1267500	Identifier	strerror		1267318	0					
ANR	1267501	ArgumentList	- ret		1267318	1					
ANR	1267502	Argument	- ret		1267318	0					
ANR	1267503	UnaryOperationExpression	- ret		1267318	0					
ANR	1267504	UnaryOperator	-		1267318	0					
ANR	1267505	Identifier	ret		1267318	1					
ANR	1267506	ExpressionStatement	res -> check_errors ++	67:12:1189:1208	1267318	1	True				
ANR	1267507	PostIncDecOperationExpression	res -> check_errors ++		1267318	0					
ANR	1267508	PtrMemberAccess	res -> check_errors		1267318	0					
ANR	1267509	Identifier	res		1267318	0					
ANR	1267510	Identifier	check_errors		1267318	1					
ANR	1267511	IncDec	++		1267318	1					
ANR	1267512	GotoStatement	goto fail ;	69:12:1223:1232	1267318	2	True				
ANR	1267513	Identifier	fail		1267318	0					
ANR	1267514	ForStatement	for ( j = 0 ; j < s -> l2_size ; j ++ )		1267318	8					
ANR	1267515	ForInit	j = 0 ;	75:13:1261:1266	1267318	0	True				
ANR	1267516	AssignmentExpression	j = 0		1267318	0		=			
ANR	1267517	Identifier	j		1267318	0					
ANR	1267518	PrimaryExpression	0		1267318	1					
ANR	1267519	Condition	j < s -> l2_size	75:20:1268:1281	1267318	1	True				
ANR	1267520	RelationalExpression	j < s -> l2_size		1267318	0		<			
ANR	1267521	Identifier	j		1267318	0					
ANR	1267522	PtrMemberAccess	s -> l2_size		1267318	1					
ANR	1267523	Identifier	s		1267318	0					
ANR	1267524	Identifier	l2_size		1267318	1					
ANR	1267525	PostIncDecOperationExpression	j ++	75:36:1284:1286	1267318	2	True				
ANR	1267526	Identifier	j		1267318	0					
ANR	1267527	IncDec	++		1267318	1					
ANR	1267528	CompoundStatement		79:12:1351:1402	1267318	3					
ANR	1267529	IdentifierDeclStatement	uint64_t l2_entry = be64_to_cpu ( l2_table [ j ] ) ;	77:12:1304:1348	1267318	0	True				
ANR	1267530	IdentifierDecl	l2_entry = be64_to_cpu ( l2_table [ j ] )		1267318	0					
ANR	1267531	IdentifierDeclType	uint64_t		1267318	0					
ANR	1267532	Identifier	l2_entry		1267318	1					
ANR	1267533	AssignmentExpression	l2_entry = be64_to_cpu ( l2_table [ j ] )		1267318	2		=			
ANR	1267534	Identifier	l2_entry		1267318	0					
ANR	1267535	CallExpression	be64_to_cpu ( l2_table [ j ] )		1267318	1					
ANR	1267536	Callee	be64_to_cpu		1267318	0					
ANR	1267537	Identifier	be64_to_cpu		1267318	0					
ANR	1267538	ArgumentList	l2_table [ j ]		1267318	1					
ANR	1267539	Argument	l2_table [ j ]		1267318	0					
ANR	1267540	ArrayIndexing	l2_table [ j ]		1267318	0					
ANR	1267541	Identifier	l2_table		1267318	0					
ANR	1267542	Identifier	j		1267318	1					
ANR	1267543	IdentifierDeclStatement	uint64_t data_offset = l2_entry & L2E_OFFSET_MASK ;	79:12:1363:1412	1267318	1	True				
ANR	1267544	IdentifierDecl	data_offset = l2_entry & L2E_OFFSET_MASK		1267318	0					
ANR	1267545	IdentifierDeclType	uint64_t		1267318	0					
ANR	1267546	Identifier	data_offset		1267318	1					
ANR	1267547	AssignmentExpression	data_offset = l2_entry & L2E_OFFSET_MASK		1267318	2		=			
ANR	1267548	Identifier	data_offset		1267318	0					
ANR	1267549	BitAndExpression	l2_entry & L2E_OFFSET_MASK		1267318	1		&			
ANR	1267550	Identifier	l2_entry		1267318	0					
ANR	1267551	Identifier	L2E_OFFSET_MASK		1267318	1					
ANR	1267552	IdentifierDeclStatement	int cluster_type = qcow2_get_cluster_type ( l2_entry ) ;	81:12:1427:1478	1267318	2	True				
ANR	1267553	IdentifierDecl	cluster_type = qcow2_get_cluster_type ( l2_entry )		1267318	0					
ANR	1267554	IdentifierDeclType	int		1267318	0					
ANR	1267555	Identifier	cluster_type		1267318	1					
ANR	1267556	AssignmentExpression	cluster_type = qcow2_get_cluster_type ( l2_entry )		1267318	2		=			
ANR	1267557	Identifier	cluster_type		1267318	0					
ANR	1267558	CallExpression	qcow2_get_cluster_type ( l2_entry )		1267318	1					
ANR	1267559	Callee	qcow2_get_cluster_type		1267318	0					
ANR	1267560	Identifier	qcow2_get_cluster_type		1267318	0					
ANR	1267561	ArgumentList	l2_entry		1267318	1					
ANR	1267562	Argument	l2_entry		1267318	0					
ANR	1267563	Identifier	l2_entry		1267318	0					
ANR	1267564	IfStatement	if ( ( cluster_type == QCOW2_CLUSTER_NORMAL ) || ( ( cluster_type == QCOW2_CLUSTER_ZERO ) && ( data_offset != 0 ) ) )		1267318	3					
ANR	1267565	Condition	( cluster_type == QCOW2_CLUSTER_NORMAL ) || ( ( cluster_type == QCOW2_CLUSTER_ZERO ) && ( data_offset != 0 ) )	85:16:1499:1617	1267318	0	True				
ANR	1267566	OrExpression	( cluster_type == QCOW2_CLUSTER_NORMAL ) || ( ( cluster_type == QCOW2_CLUSTER_ZERO ) && ( data_offset != 0 ) )		1267318	0		||			
ANR	1267567	EqualityExpression	cluster_type == QCOW2_CLUSTER_NORMAL		1267318	0		==			
ANR	1267568	Identifier	cluster_type		1267318	0					
ANR	1267569	Identifier	QCOW2_CLUSTER_NORMAL		1267318	1					
ANR	1267570	AndExpression	( cluster_type == QCOW2_CLUSTER_ZERO ) && ( data_offset != 0 )		1267318	1		&&			
ANR	1267571	EqualityExpression	cluster_type == QCOW2_CLUSTER_ZERO		1267318	0		==			
ANR	1267572	Identifier	cluster_type		1267318	0					
ANR	1267573	Identifier	QCOW2_CLUSTER_ZERO		1267318	1					
ANR	1267574	EqualityExpression	data_offset != 0		1267318	1		!=			
ANR	1267575	Identifier	data_offset		1267318	0					
ANR	1267576	PrimaryExpression	0		1267318	1					
ANR	1267577	CompoundStatement		85:78:1544:1544	1267318	1					
ANR	1267578	ExpressionStatement	"refcount = get_refcount ( bs , data_offset >> s -> cluster_bits )"	89:16:1639:1698	1267318	0	True				
ANR	1267579	AssignmentExpression	"refcount = get_refcount ( bs , data_offset >> s -> cluster_bits )"		1267318	0		=			
ANR	1267580	Identifier	refcount		1267318	0					
ANR	1267581	CallExpression	"get_refcount ( bs , data_offset >> s -> cluster_bits )"		1267318	1					
ANR	1267582	Callee	get_refcount		1267318	0					
ANR	1267583	Identifier	get_refcount		1267318	0					
ANR	1267584	ArgumentList	bs		1267318	1					
ANR	1267585	Argument	bs		1267318	0					
ANR	1267586	Identifier	bs		1267318	0					
ANR	1267587	Argument	data_offset >> s -> cluster_bits		1267318	1					
ANR	1267588	ShiftExpression	data_offset >> s -> cluster_bits		1267318	0		>>			
ANR	1267589	Identifier	data_offset		1267318	0					
ANR	1267590	PtrMemberAccess	s -> cluster_bits		1267318	1					
ANR	1267591	Identifier	s		1267318	0					
ANR	1267592	Identifier	cluster_bits		1267318	1					
ANR	1267593	IfStatement	if ( refcount < 0 )		1267318	1					
ANR	1267594	Condition	refcount < 0	91:20:1721:1732	1267318	0	True				
ANR	1267595	RelationalExpression	refcount < 0		1267318	0		<			
ANR	1267596	Identifier	refcount		1267318	0					
ANR	1267597	PrimaryExpression	0		1267318	1					
ANR	1267598	CompoundStatement		89:34:1659:1659	1267318	1					
ANR	1267599	ContinueStatement	continue ;	95:20:1832:1840	1267318	0	True				
ANR	1267600	IfStatement	if ( ( refcount == 1 ) != ( ( l2_entry & QCOW_OFLAG_COPIED ) != 0 ) )		1267318	2					
ANR	1267601	Condition	( refcount == 1 ) != ( ( l2_entry & QCOW_OFLAG_COPIED ) != 0 )	99:20:1882:1937	1267318	0	True				
ANR	1267602	EqualityExpression	( refcount == 1 ) != ( ( l2_entry & QCOW_OFLAG_COPIED ) != 0 )		1267318	0		!=			
ANR	1267603	EqualityExpression	refcount == 1		1267318	0		==			
ANR	1267604	Identifier	refcount		1267318	0					
ANR	1267605	PrimaryExpression	1		1267318	1					
ANR	1267606	EqualityExpression	( l2_entry & QCOW_OFLAG_COPIED ) != 0		1267318	1		!=			
ANR	1267607	BitAndExpression	l2_entry & QCOW_OFLAG_COPIED		1267318	0		&			
ANR	1267608	Identifier	l2_entry		1267318	0					
ANR	1267609	Identifier	QCOW_OFLAG_COPIED		1267318	1					
ANR	1267610	PrimaryExpression	0		1267318	1					
ANR	1267611	CompoundStatement		97:78:1864:1864	1267318	1					
ANR	1267612	Statement	fprintf	101:20:1963:1969	1267318	0	True				
ANR	1267613	Statement	(	101:27:1970:1970	1267318	1	True				
ANR	1267614	Statement	stderr	101:28:1971:1976	1267318	2	True				
ANR	1267615	Statement	","	101:34:1977:1977	1267318	3	True				
ANR	1267616	Statement	"""ERROR OFLAG_COPIED data cluster: """	101:36:1979:2013	1267318	4	True				
ANR	1267617	Statement	"""l2_entry=%"""	103:28:2044:2055	1267318	5	True				
ANR	1267618	Statement	PRIx64	103:41:2057:2062	1267318	6	True				
ANR	1267619	Statement	""" refcount=%d\\n"""	103:48:2064:2079	1267318	7	True				
ANR	1267620	Statement	","	103:64:2080:2080	1267318	8	True				
ANR	1267621	Statement	l2_entry	105:28:2111:2118	1267318	9	True				
ANR	1267622	Statement	","	105:36:2119:2119	1267318	10	True				
ANR	1267623	Statement	refcount	105:38:2121:2128	1267318	11	True				
ANR	1267624	Statement	)	105:46:2129:2129	1267318	12	True				
ANR	1267625	ExpressionStatement		105:47:2130:2130	1267318	13	True				
ANR	1267626	ExpressionStatement	res -> corruptions ++	107:20:2153:2171	1267318	14	True				
ANR	1267627	PostIncDecOperationExpression	res -> corruptions ++		1267318	0					
ANR	1267628	PtrMemberAccess	res -> corruptions		1267318	0					
ANR	1267629	Identifier	res		1267318	0					
ANR	1267630	Identifier	corruptions		1267318	1					
ANR	1267631	IncDec	++		1267318	1					
ANR	1267632	ExpressionStatement	ret = 0	119:4:2232:2239	1267318	6	True				
ANR	1267633	AssignmentExpression	ret = 0		1267318	0		=			
ANR	1267634	Identifier	ret		1267318	0					
ANR	1267635	PrimaryExpression	0		1267318	1					
ANR	1267636	Label	fail :	123:0:2244:2248	1267318	7	True				
ANR	1267637	Identifier	fail		1267318	0					
ANR	1267638	ExpressionStatement	qemu_vfree ( l2_table )	125:4:2255:2275	1267318	8	True				
ANR	1267639	CallExpression	qemu_vfree ( l2_table )		1267318	0					
ANR	1267640	Callee	qemu_vfree		1267318	0					
ANR	1267641	Identifier	qemu_vfree		1267318	0					
ANR	1267642	ArgumentList	l2_table		1267318	1					
ANR	1267643	Argument	l2_table		1267318	0					
ANR	1267644	Identifier	l2_table		1267318	0					
ANR	1267645	ReturnStatement	return ret ;	127:4:2282:2292	1267318	9	True				
ANR	1267646	Identifier	ret		1267318	0					
ANR	1267647	ReturnType	static int		1267318	1					
ANR	1267648	Identifier	check_oflag_copied		1267318	2					
ANR	1267649	ParameterList	"BlockDriverState * bs , BdrvCheckResult * res"		1267318	3					
ANR	1267650	Parameter	BlockDriverState * bs	1:30:30:49	1267318	0	True				
ANR	1267651	ParameterType	BlockDriverState *		1267318	0					
ANR	1267652	Identifier	bs		1267318	1					
ANR	1267653	Parameter	BdrvCheckResult * res	1:52:52:71	1267318	1	True				
ANR	1267654	ParameterType	BdrvCheckResult *		1267318	0					
ANR	1267655	Identifier	res		1267318	1					
ANR	1267656	CFGEntryNode	ENTRY		1267318		True				
ANR	1267657	CFGExitNode	EXIT		1267318		True				
ANR	1267658	Symbol	qemu_blockalign		1267318						
ANR	1267659	Symbol	res -> check_errors		1267318						
ANR	1267660	Symbol	bs -> file		1267318						
ANR	1267661	Symbol	qcow2_get_cluster_type		1267318						
ANR	1267662	Symbol	* res		1267318						
ANR	1267663	Symbol	cluster_type		1267318						
ANR	1267664	Symbol	refcount		1267318						
ANR	1267665	Symbol	QCOW_OFLAG_COPIED		1267318						
ANR	1267666	Symbol	s -> cluster_size		1267318						
ANR	1267667	Symbol	QCOW2_CLUSTER_ZERO		1267318						
ANR	1267668	Symbol	* s -> l1_table		1267318						
ANR	1267669	Symbol	s -> l2_size		1267318						
ANR	1267670	Symbol	bs		1267318						
ANR	1267671	Symbol	* bs		1267318						
ANR	1267672	Symbol	get_refcount		1267318						
ANR	1267673	Symbol	l1_entry		1267318						
ANR	1267674	Symbol	* * s		1267318						
ANR	1267675	Symbol	res -> corruptions		1267318						
ANR	1267676	Symbol	ret		1267318						
ANR	1267677	Symbol	res		1267318						
ANR	1267678	Symbol	L1E_OFFSET_MASK		1267318						
ANR	1267679	Symbol	bs -> opaque		1267318						
ANR	1267680	Symbol	i		1267318						
ANR	1267681	Symbol	j		1267318						
ANR	1267682	Symbol	l2_offset		1267318						
ANR	1267683	Symbol	stderr		1267318						
ANR	1267684	Symbol	l2_entry		1267318						
ANR	1267685	Symbol	s -> l1_size		1267318						
ANR	1267686	Symbol	data_offset		1267318						
ANR	1267687	Symbol	L2E_OFFSET_MASK		1267318						
ANR	1267688	Symbol	QCOW2_CLUSTER_NORMAL		1267318						
ANR	1267689	Symbol	s -> l1_table		1267318						
ANR	1267690	Symbol	strerror		1267318						
ANR	1267691	Symbol	s -> cluster_bits		1267318						
ANR	1267692	Symbol	s		1267318						
ANR	1267693	Symbol	* i		1267318						
ANR	1267694	Symbol	bdrv_pread		1267318						
ANR	1267695	Symbol	* j		1267318						
ANR	1267696	Symbol	l2_table		1267318						
ANR	1267697	Symbol	* l2_table		1267318						
ANR	1267698	Symbol	* s		1267318						
ANR	1267699	Symbol	be64_to_cpu		1267318						
