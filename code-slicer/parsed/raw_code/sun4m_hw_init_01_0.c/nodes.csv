command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8024465	File	/home/p4ultr4n/workplace/ReVeal/raw_code/sun4m_hw_init_01_0.c								
ANR	8024466	Function	sun4m_hw_init	1:0:0:8491							
ANR	8024467	FunctionDef	"sun4m_hw_init (const struct sun4m_hwdef * hwdef , MachineState * machine)"		8024466	0					
ANR	8024468	CompoundStatement		5:0:110:8491	8024466	0					
ANR	8024469	IdentifierDeclStatement	const char * cpu_model = machine -> cpu_model ;	7:4:117:159	8024466	0	True				
ANR	8024470	IdentifierDecl	* cpu_model = machine -> cpu_model		8024466	0					
ANR	8024471	IdentifierDeclType	const char *		8024466	0					
ANR	8024472	Identifier	cpu_model		8024466	1					
ANR	8024473	AssignmentExpression	* cpu_model = machine -> cpu_model		8024466	2		=			
ANR	8024474	Identifier	cpu_model		8024466	0					
ANR	8024475	PtrMemberAccess	machine -> cpu_model		8024466	1					
ANR	8024476	Identifier	machine		8024466	0					
ANR	8024477	Identifier	cpu_model		8024466	1					
ANR	8024478	IdentifierDeclStatement	unsigned int i ;	9:4:166:180	8024466	1	True				
ANR	8024479	IdentifierDecl	i		8024466	0					
ANR	8024480	IdentifierDeclType	unsigned int		8024466	0					
ANR	8024481	Identifier	i		8024466	1					
ANR	8024482	IdentifierDeclStatement	"void * iommu , * espdma , * ledma , * nvram ;"	11:4:187:223	8024466	2	True				
ANR	8024483	IdentifierDecl	* iommu		8024466	0					
ANR	8024484	IdentifierDeclType	void *		8024466	0					
ANR	8024485	Identifier	iommu		8024466	1					
ANR	8024486	IdentifierDecl	* espdma		8024466	1					
ANR	8024487	IdentifierDeclType	void *		8024466	0					
ANR	8024488	Identifier	espdma		8024466	1					
ANR	8024489	IdentifierDecl	* ledma		8024466	2					
ANR	8024490	IdentifierDeclType	void *		8024466	0					
ANR	8024491	Identifier	ledma		8024466	1					
ANR	8024492	IdentifierDecl	* nvram		8024466	3					
ANR	8024493	IdentifierDeclType	void *		8024466	0					
ANR	8024494	Identifier	nvram		8024466	1					
ANR	8024495	IdentifierDeclStatement	"qemu_irq * cpu_irqs [ MAX_CPUS ] , slavio_irq [ 32 ] , slavio_cpu_irq [ MAX_CPUS ] , espdma_irq , ledma_irq ;"	13:4:230:332	8024466	3	True				
ANR	8024496	IdentifierDecl	* cpu_irqs [ MAX_CPUS ]		8024466	0					
ANR	8024497	IdentifierDeclType	qemu_irq * [ MAX_CPUS ]		8024466	0					
ANR	8024498	Identifier	cpu_irqs		8024466	1					
ANR	8024499	Identifier	MAX_CPUS		8024466	2					
ANR	8024500	IdentifierDecl	slavio_irq [ 32 ]		8024466	1					
ANR	8024501	IdentifierDeclType	qemu_irq [ 32 ]		8024466	0					
ANR	8024502	Identifier	slavio_irq		8024466	1					
ANR	8024503	PrimaryExpression	32		8024466	2					
ANR	8024504	IdentifierDecl	slavio_cpu_irq [ MAX_CPUS ]		8024466	2					
ANR	8024505	IdentifierDeclType	qemu_irq [ MAX_CPUS ]		8024466	0					
ANR	8024506	Identifier	slavio_cpu_irq		8024466	1					
ANR	8024507	Identifier	MAX_CPUS		8024466	2					
ANR	8024508	IdentifierDecl	espdma_irq		8024466	3					
ANR	8024509	IdentifierDeclType	qemu_irq		8024466	0					
ANR	8024510	Identifier	espdma_irq		8024466	1					
ANR	8024511	IdentifierDecl	ledma_irq		8024466	4					
ANR	8024512	IdentifierDeclType	qemu_irq		8024466	0					
ANR	8024513	Identifier	ledma_irq		8024466	1					
ANR	8024514	IdentifierDeclStatement	"qemu_irq esp_reset , dma_enable ;"	17:4:339:369	8024466	4	True				
ANR	8024515	IdentifierDecl	esp_reset		8024466	0					
ANR	8024516	IdentifierDeclType	qemu_irq		8024466	0					
ANR	8024517	Identifier	esp_reset		8024466	1					
ANR	8024518	IdentifierDecl	dma_enable		8024466	1					
ANR	8024519	IdentifierDeclType	qemu_irq		8024466	0					
ANR	8024520	Identifier	dma_enable		8024466	1					
ANR	8024521	IdentifierDeclStatement	qemu_irq fdc_tc ;	19:4:376:391	8024466	5	True				
ANR	8024522	IdentifierDecl	fdc_tc		8024466	0					
ANR	8024523	IdentifierDeclType	qemu_irq		8024466	0					
ANR	8024524	Identifier	fdc_tc		8024466	1					
ANR	8024525	IdentifierDeclStatement	qemu_irq * cpu_halt ;	21:4:398:416	8024466	6	True				
ANR	8024526	IdentifierDecl	* cpu_halt		8024466	0					
ANR	8024527	IdentifierDeclType	qemu_irq *		8024466	0					
ANR	8024528	Identifier	cpu_halt		8024466	1					
ANR	8024529	IdentifierDeclStatement	unsigned long kernel_size ;	23:4:423:448	8024466	7	True				
ANR	8024530	IdentifierDecl	kernel_size		8024466	0					
ANR	8024531	IdentifierDeclType	unsigned long		8024466	0					
ANR	8024532	Identifier	kernel_size		8024466	1					
ANR	8024533	IdentifierDeclStatement	DriveInfo * fd [ MAX_FD ] ;	25:4:455:476	8024466	8	True				
ANR	8024534	IdentifierDecl	* fd [ MAX_FD ]		8024466	0					
ANR	8024535	IdentifierDeclType	DriveInfo * [ MAX_FD ]		8024466	0					
ANR	8024536	Identifier	fd		8024466	1					
ANR	8024537	Identifier	MAX_FD		8024466	2					
ANR	8024538	IdentifierDeclStatement	FWCfgState * fw_cfg ;	27:4:483:501	8024466	9	True				
ANR	8024539	IdentifierDecl	* fw_cfg		8024466	0					
ANR	8024540	IdentifierDeclType	FWCfgState *		8024466	0					
ANR	8024541	Identifier	fw_cfg		8024466	1					
ANR	8024542	IdentifierDeclStatement	unsigned int num_vsimms ;	29:4:508:531	8024466	10	True				
ANR	8024543	IdentifierDecl	num_vsimms		8024466	0					
ANR	8024544	IdentifierDeclType	unsigned int		8024466	0					
ANR	8024545	Identifier	num_vsimms		8024466	1					
ANR	8024546	IfStatement	if ( ! cpu_model )		8024466	11					
ANR	8024547	Condition	! cpu_model	35:8:565:574	8024466	0	True				
ANR	8024548	UnaryOperationExpression	! cpu_model		8024466	0					
ANR	8024549	UnaryOperator	!		8024466	0					
ANR	8024550	Identifier	cpu_model		8024466	1					
ANR	8024551	ExpressionStatement	cpu_model = hwdef -> default_cpu_model	37:8:586:622	8024466	1	True				
ANR	8024552	AssignmentExpression	cpu_model = hwdef -> default_cpu_model		8024466	0		=			
ANR	8024553	Identifier	cpu_model		8024466	0					
ANR	8024554	PtrMemberAccess	hwdef -> default_cpu_model		8024466	1					
ANR	8024555	Identifier	hwdef		8024466	0					
ANR	8024556	Identifier	default_cpu_model		8024466	1					
ANR	8024557	ForStatement	for ( i = 0 ; i < smp_cpus ; i ++ )		8024466	12					
ANR	8024558	ForInit	i = 0 ;	41:8:635:640	8024466	0	True				
ANR	8024559	AssignmentExpression	i = 0		8024466	0		=			
ANR	8024560	Identifier	i		8024466	0					
ANR	8024561	PrimaryExpression	0		8024466	1					
ANR	8024562	Condition	i < smp_cpus	41:15:642:653	8024466	1	True				
ANR	8024563	RelationalExpression	i < smp_cpus		8024466	0		<			
ANR	8024564	Identifier	i		8024466	0					
ANR	8024565	Identifier	smp_cpus		8024466	1					
ANR	8024566	PostIncDecOperationExpression	i ++	41:29:656:658	8024466	2	True				
ANR	8024567	Identifier	i		8024466	0					
ANR	8024568	IncDec	++		8024466	1					
ANR	8024569	CompoundStatement		37:34:550:550	8024466	3					
ANR	8024570	ExpressionStatement	"cpu_devinit ( cpu_model , i , hwdef -> slavio_base , & cpu_irqs [ i ] )"	43:8:672:731	8024466	0	True				
ANR	8024571	CallExpression	"cpu_devinit ( cpu_model , i , hwdef -> slavio_base , & cpu_irqs [ i ] )"		8024466	0					
ANR	8024572	Callee	cpu_devinit		8024466	0					
ANR	8024573	Identifier	cpu_devinit		8024466	0					
ANR	8024574	ArgumentList	cpu_model		8024466	1					
ANR	8024575	Argument	cpu_model		8024466	0					
ANR	8024576	Identifier	cpu_model		8024466	0					
ANR	8024577	Argument	i		8024466	1					
ANR	8024578	Identifier	i		8024466	0					
ANR	8024579	Argument	hwdef -> slavio_base		8024466	2					
ANR	8024580	PtrMemberAccess	hwdef -> slavio_base		8024466	0					
ANR	8024581	Identifier	hwdef		8024466	0					
ANR	8024582	Identifier	slavio_base		8024466	1					
ANR	8024583	Argument	& cpu_irqs [ i ]		8024466	3					
ANR	8024584	UnaryOperationExpression	& cpu_irqs [ i ]		8024466	0					
ANR	8024585	UnaryOperator	&		8024466	0					
ANR	8024586	ArrayIndexing	cpu_irqs [ i ]		8024466	1					
ANR	8024587	Identifier	cpu_irqs		8024466	0					
ANR	8024588	Identifier	i		8024466	1					
ANR	8024589	ForStatement	for ( i = smp_cpus ; i < MAX_CPUS ; i ++ )		8024466	13					
ANR	8024590	ForInit	i = smp_cpus ;	49:9:752:764	8024466	0	True				
ANR	8024591	AssignmentExpression	i = smp_cpus		8024466	0		=			
ANR	8024592	Identifier	i		8024466	0					
ANR	8024593	Identifier	smp_cpus		8024466	1					
ANR	8024594	Condition	i < MAX_CPUS	49:23:766:777	8024466	1	True				
ANR	8024595	RelationalExpression	i < MAX_CPUS		8024466	0		<			
ANR	8024596	Identifier	i		8024466	0					
ANR	8024597	Identifier	MAX_CPUS		8024466	1					
ANR	8024598	PostIncDecOperationExpression	i ++	49:37:780:782	8024466	2	True				
ANR	8024599	Identifier	i		8024466	0					
ANR	8024600	IncDec	++		8024466	1					
ANR	8024601	ExpressionStatement	"cpu_irqs [ i ] = qemu_allocate_irqs ( dummy_cpu_set_irq , NULL , MAX_PILS )"	51:8:794:861	8024466	3	True				
ANR	8024602	AssignmentExpression	"cpu_irqs [ i ] = qemu_allocate_irqs ( dummy_cpu_set_irq , NULL , MAX_PILS )"		8024466	0		=			
ANR	8024603	ArrayIndexing	cpu_irqs [ i ]		8024466	0					
ANR	8024604	Identifier	cpu_irqs		8024466	0					
ANR	8024605	Identifier	i		8024466	1					
ANR	8024606	CallExpression	"qemu_allocate_irqs ( dummy_cpu_set_irq , NULL , MAX_PILS )"		8024466	1					
ANR	8024607	Callee	qemu_allocate_irqs		8024466	0					
ANR	8024608	Identifier	qemu_allocate_irqs		8024466	0					
ANR	8024609	ArgumentList	dummy_cpu_set_irq		8024466	1					
ANR	8024610	Argument	dummy_cpu_set_irq		8024466	0					
ANR	8024611	Identifier	dummy_cpu_set_irq		8024466	0					
ANR	8024612	Argument	NULL		8024466	1					
ANR	8024613	Identifier	NULL		8024466	0					
ANR	8024614	Argument	MAX_PILS		8024466	2					
ANR	8024615	Identifier	MAX_PILS		8024466	0					
ANR	8024616	ExpressionStatement	"ram_init ( 0 , machine -> ram_size , hwdef -> max_mem )"	59:4:898:944	8024466	14	True				
ANR	8024617	CallExpression	"ram_init ( 0 , machine -> ram_size , hwdef -> max_mem )"		8024466	0					
ANR	8024618	Callee	ram_init		8024466	0					
ANR	8024619	Identifier	ram_init		8024466	0					
ANR	8024620	ArgumentList	0		8024466	1					
ANR	8024621	Argument	0		8024466	0					
ANR	8024622	PrimaryExpression	0		8024466	0					
ANR	8024623	Argument	machine -> ram_size		8024466	1					
ANR	8024624	PtrMemberAccess	machine -> ram_size		8024466	0					
ANR	8024625	Identifier	machine		8024466	0					
ANR	8024626	Identifier	ram_size		8024466	1					
ANR	8024627	Argument	hwdef -> max_mem		8024466	2					
ANR	8024628	PtrMemberAccess	hwdef -> max_mem		8024466	0					
ANR	8024629	Identifier	hwdef		8024466	0					
ANR	8024630	Identifier	max_mem		8024466	1					
ANR	8024631	IfStatement	if ( ! hwdef -> ecc_base )		8024466	15					
ANR	8024632	Condition	! hwdef -> ecc_base	63:8:1025:1040	8024466	0	True				
ANR	8024633	UnaryOperationExpression	! hwdef -> ecc_base		8024466	0					
ANR	8024634	UnaryOperator	!		8024466	0					
ANR	8024635	PtrMemberAccess	hwdef -> ecc_base		8024466	1					
ANR	8024636	Identifier	hwdef		8024466	0					
ANR	8024637	Identifier	ecc_base		8024466	1					
ANR	8024638	CompoundStatement		59:26:932:932	8024466	1					
ANR	8024639	ExpressionStatement	"empty_slot_init ( machine -> ram_size , hwdef -> max_mem - machine -> ram_size )"	65:8:1054:1124	8024466	0	True				
ANR	8024640	CallExpression	"empty_slot_init ( machine -> ram_size , hwdef -> max_mem - machine -> ram_size )"		8024466	0					
ANR	8024641	Callee	empty_slot_init		8024466	0					
ANR	8024642	Identifier	empty_slot_init		8024466	0					
ANR	8024643	ArgumentList	machine -> ram_size		8024466	1					
ANR	8024644	Argument	machine -> ram_size		8024466	0					
ANR	8024645	PtrMemberAccess	machine -> ram_size		8024466	0					
ANR	8024646	Identifier	machine		8024466	0					
ANR	8024647	Identifier	ram_size		8024466	1					
ANR	8024648	Argument	hwdef -> max_mem - machine -> ram_size		8024466	1					
ANR	8024649	AdditiveExpression	hwdef -> max_mem - machine -> ram_size		8024466	0		-			
ANR	8024650	PtrMemberAccess	hwdef -> max_mem		8024466	0					
ANR	8024651	Identifier	hwdef		8024466	0					
ANR	8024652	Identifier	max_mem		8024466	1					
ANR	8024653	PtrMemberAccess	machine -> ram_size		8024466	1					
ANR	8024654	Identifier	machine		8024466	0					
ANR	8024655	Identifier	ram_size		8024466	1					
ANR	8024656	ExpressionStatement	"prom_init ( hwdef -> slavio_base , bios_name )"	71:4:1140:1180	8024466	16	True				
ANR	8024657	CallExpression	"prom_init ( hwdef -> slavio_base , bios_name )"		8024466	0					
ANR	8024658	Callee	prom_init		8024466	0					
ANR	8024659	Identifier	prom_init		8024466	0					
ANR	8024660	ArgumentList	hwdef -> slavio_base		8024466	1					
ANR	8024661	Argument	hwdef -> slavio_base		8024466	0					
ANR	8024662	PtrMemberAccess	hwdef -> slavio_base		8024466	0					
ANR	8024663	Identifier	hwdef		8024466	0					
ANR	8024664	Identifier	slavio_base		8024466	1					
ANR	8024665	Argument	bios_name		8024466	1					
ANR	8024666	Identifier	bios_name		8024466	0					
ANR	8024667	Statement	slavio_intctl	75:4:1189:1201	8024466	17	True				
ANR	8024668	Statement	=	75:18:1203:1203	8024466	18	True				
ANR	8024669	Statement	slavio_intctl_init	75:20:1205:1222	8024466	19	True				
ANR	8024670	Statement	(	75:38:1223:1223	8024466	20	True				
ANR	8024671	Statement	hwdef	75:39:1224:1228	8024466	21	True				
ANR	8024672	Statement	->	75:44:1229:1230	8024466	22	True				
ANR	8024673	Statement	intctl_base	75:46:1231:1241	8024466	23	True				
ANR	8024674	Statement	","	75:57:1242:1242	8024466	24	True				
ANR	8024675	Statement	hwdef	77:39:1284:1288	8024466	25	True				
ANR	8024676	Statement	->	77:44:1289:1290	8024466	26	True				
ANR	8024677	Statement	intctl_base	77:46:1291:1301	8024466	27	True				
ANR	8024678	Statement	+	77:58:1303:1303	8024466	28	True				
ANR	8024679	Statement	0x10000UL	77:60:1305:1313	8024466	29	True				
ANR	8024680	Statement	L	77:69:1314:1314	8024466	30	True				
ANR	8024681	Statement	","	77:70:1315:1315	8024466	31	True				
ANR	8024682	Statement	cpu_irqs	79:39:1357:1364	8024466	32	True				
ANR	8024683	Statement	)	79:47:1365:1365	8024466	33	True				
ANR	8024684	ExpressionStatement		79:48:1366:1366	8024466	34	True				
ANR	8024685	ForStatement	for ( i = 0 ; i < 32 ; i ++ )		8024466	35					
ANR	8024686	ForInit	i = 0 ;	83:9:1380:1385	8024466	0	True				
ANR	8024687	AssignmentExpression	i = 0		8024466	0		=			
ANR	8024688	Identifier	i		8024466	0					
ANR	8024689	PrimaryExpression	0		8024466	1					
ANR	8024690	Condition	i < 32	83:16:1387:1392	8024466	1	True				
ANR	8024691	RelationalExpression	i < 32		8024466	0		<			
ANR	8024692	Identifier	i		8024466	0					
ANR	8024693	PrimaryExpression	32		8024466	1					
ANR	8024694	PostIncDecOperationExpression	i ++	83:24:1395:1397	8024466	2	True				
ANR	8024695	Identifier	i		8024466	0					
ANR	8024696	IncDec	++		8024466	1					
ANR	8024697	CompoundStatement		79:29:1289:1289	8024466	3					
ANR	8024698	ExpressionStatement	"slavio_irq [ i ] = qdev_get_gpio_in ( slavio_intctl , i )"	85:8:1411:1461	8024466	0	True				
ANR	8024699	AssignmentExpression	"slavio_irq [ i ] = qdev_get_gpio_in ( slavio_intctl , i )"		8024466	0		=			
ANR	8024700	ArrayIndexing	slavio_irq [ i ]		8024466	0					
ANR	8024701	Identifier	slavio_irq		8024466	0					
ANR	8024702	Identifier	i		8024466	1					
ANR	8024703	CallExpression	"qdev_get_gpio_in ( slavio_intctl , i )"		8024466	1					
ANR	8024704	Callee	qdev_get_gpio_in		8024466	0					
ANR	8024705	Identifier	qdev_get_gpio_in		8024466	0					
ANR	8024706	ArgumentList	slavio_intctl		8024466	1					
ANR	8024707	Argument	slavio_intctl		8024466	0					
ANR	8024708	Identifier	slavio_intctl		8024466	0					
ANR	8024709	Argument	i		8024466	1					
ANR	8024710	Identifier	i		8024466	0					
ANR	8024711	ForStatement	for ( i = 0 ; i < MAX_CPUS ; i ++ )		8024466	36					
ANR	8024712	ForInit	i = 0 ;	89:9:1480:1485	8024466	0	True				
ANR	8024713	AssignmentExpression	i = 0		8024466	0		=			
ANR	8024714	Identifier	i		8024466	0					
ANR	8024715	PrimaryExpression	0		8024466	1					
ANR	8024716	Condition	i < MAX_CPUS	89:16:1487:1498	8024466	1	True				
ANR	8024717	RelationalExpression	i < MAX_CPUS		8024466	0		<			
ANR	8024718	Identifier	i		8024466	0					
ANR	8024719	Identifier	MAX_CPUS		8024466	1					
ANR	8024720	PostIncDecOperationExpression	i ++	89:30:1501:1503	8024466	2	True				
ANR	8024721	Identifier	i		8024466	0					
ANR	8024722	IncDec	++		8024466	1					
ANR	8024723	CompoundStatement		85:35:1395:1395	8024466	3					
ANR	8024724	ExpressionStatement	"slavio_cpu_irq [ i ] = qdev_get_gpio_in ( slavio_intctl , 32 + i )"	91:8:1517:1576	8024466	0	True				
ANR	8024725	AssignmentExpression	"slavio_cpu_irq [ i ] = qdev_get_gpio_in ( slavio_intctl , 32 + i )"		8024466	0		=			
ANR	8024726	ArrayIndexing	slavio_cpu_irq [ i ]		8024466	0					
ANR	8024727	Identifier	slavio_cpu_irq		8024466	0					
ANR	8024728	Identifier	i		8024466	1					
ANR	8024729	CallExpression	"qdev_get_gpio_in ( slavio_intctl , 32 + i )"		8024466	1					
ANR	8024730	Callee	qdev_get_gpio_in		8024466	0					
ANR	8024731	Identifier	qdev_get_gpio_in		8024466	0					
ANR	8024732	ArgumentList	slavio_intctl		8024466	1					
ANR	8024733	Argument	slavio_intctl		8024466	0					
ANR	8024734	Identifier	slavio_intctl		8024466	0					
ANR	8024735	Argument	32 + i		8024466	1					
ANR	8024736	AdditiveExpression	32 + i		8024466	0		+			
ANR	8024737	PrimaryExpression	32		8024466	0					
ANR	8024738	Identifier	i		8024466	1					
ANR	8024739	IfStatement	if ( hwdef -> idreg_base )		8024466	37					
ANR	8024740	Condition	hwdef -> idreg_base	97:8:1596:1612	8024466	0	True				
ANR	8024741	PtrMemberAccess	hwdef -> idreg_base		8024466	0					
ANR	8024742	Identifier	hwdef		8024466	0					
ANR	8024743	Identifier	idreg_base		8024466	1					
ANR	8024744	CompoundStatement		93:27:1504:1504	8024466	1					
ANR	8024745	ExpressionStatement	idreg_init ( hwdef -> idreg_base )	99:8:1626:1655	8024466	0	True				
ANR	8024746	CallExpression	idreg_init ( hwdef -> idreg_base )		8024466	0					
ANR	8024747	Callee	idreg_init		8024466	0					
ANR	8024748	Identifier	idreg_init		8024466	0					
ANR	8024749	ArgumentList	hwdef -> idreg_base		8024466	1					
ANR	8024750	Argument	hwdef -> idreg_base		8024466	0					
ANR	8024751	PtrMemberAccess	hwdef -> idreg_base		8024466	0					
ANR	8024752	Identifier	hwdef		8024466	0					
ANR	8024753	Identifier	idreg_base		8024466	1					
ANR	8024754	IfStatement	if ( hwdef -> afx_base )		8024466	38					
ANR	8024755	Condition	hwdef -> afx_base	105:8:1675:1689	8024466	0	True				
ANR	8024756	PtrMemberAccess	hwdef -> afx_base		8024466	0					
ANR	8024757	Identifier	hwdef		8024466	0					
ANR	8024758	Identifier	afx_base		8024466	1					
ANR	8024759	CompoundStatement		101:25:1581:1581	8024466	1					
ANR	8024760	ExpressionStatement	afx_init ( hwdef -> afx_base )	107:8:1703:1728	8024466	0	True				
ANR	8024761	CallExpression	afx_init ( hwdef -> afx_base )		8024466	0					
ANR	8024762	Callee	afx_init		8024466	0					
ANR	8024763	Identifier	afx_init		8024466	0					
ANR	8024764	ArgumentList	hwdef -> afx_base		8024466	1					
ANR	8024765	Argument	hwdef -> afx_base		8024466	0					
ANR	8024766	PtrMemberAccess	hwdef -> afx_base		8024466	0					
ANR	8024767	Identifier	hwdef		8024466	0					
ANR	8024768	Identifier	afx_base		8024466	1					
ANR	8024769	ExpressionStatement	"iommu = iommu_init ( hwdef -> iommu_base , hwdef -> iommu_version , slavio_irq [ 30 ] )"	113:4:1744:1843	8024466	39	True				
ANR	8024770	AssignmentExpression	"iommu = iommu_init ( hwdef -> iommu_base , hwdef -> iommu_version , slavio_irq [ 30 ] )"		8024466	0		=			
ANR	8024771	Identifier	iommu		8024466	0					
ANR	8024772	CallExpression	"iommu_init ( hwdef -> iommu_base , hwdef -> iommu_version , slavio_irq [ 30 ] )"		8024466	1					
ANR	8024773	Callee	iommu_init		8024466	0					
ANR	8024774	Identifier	iommu_init		8024466	0					
ANR	8024775	ArgumentList	hwdef -> iommu_base		8024466	1					
ANR	8024776	Argument	hwdef -> iommu_base		8024466	0					
ANR	8024777	PtrMemberAccess	hwdef -> iommu_base		8024466	0					
ANR	8024778	Identifier	hwdef		8024466	0					
ANR	8024779	Identifier	iommu_base		8024466	1					
ANR	8024780	Argument	hwdef -> iommu_version		8024466	1					
ANR	8024781	PtrMemberAccess	hwdef -> iommu_version		8024466	0					
ANR	8024782	Identifier	hwdef		8024466	0					
ANR	8024783	Identifier	iommu_version		8024466	1					
ANR	8024784	Argument	slavio_irq [ 30 ]		8024466	2					
ANR	8024785	ArrayIndexing	slavio_irq [ 30 ]		8024466	0					
ANR	8024786	Identifier	slavio_irq		8024466	0					
ANR	8024787	PrimaryExpression	30		8024466	1					
ANR	8024788	IfStatement	if ( hwdef -> iommu_pad_base )		8024466	40					
ANR	8024789	Condition	hwdef -> iommu_pad_base	119:8:1856:1876	8024466	0	True				
ANR	8024790	PtrMemberAccess	hwdef -> iommu_pad_base		8024466	0					
ANR	8024791	Identifier	hwdef		8024466	0					
ANR	8024792	Identifier	iommu_pad_base		8024466	1					
ANR	8024793	CompoundStatement		115:31:1768:1768	8024466	1					
ANR	8024794	ExpressionStatement	"empty_slot_init ( hwdef -> iommu_pad_base , hwdef -> iommu_pad_len )"	129:8:2161:2220	8024466	0	True				
ANR	8024795	CallExpression	"empty_slot_init ( hwdef -> iommu_pad_base , hwdef -> iommu_pad_len )"		8024466	0					
ANR	8024796	Callee	empty_slot_init		8024466	0					
ANR	8024797	Identifier	empty_slot_init		8024466	0					
ANR	8024798	ArgumentList	hwdef -> iommu_pad_base		8024466	1					
ANR	8024799	Argument	hwdef -> iommu_pad_base		8024466	0					
ANR	8024800	PtrMemberAccess	hwdef -> iommu_pad_base		8024466	0					
ANR	8024801	Identifier	hwdef		8024466	0					
ANR	8024802	Identifier	iommu_pad_base		8024466	1					
ANR	8024803	Argument	hwdef -> iommu_pad_len		8024466	1					
ANR	8024804	PtrMemberAccess	hwdef -> iommu_pad_len		8024466	0					
ANR	8024805	Identifier	hwdef		8024466	0					
ANR	8024806	Identifier	iommu_pad_len		8024466	1					
ANR	8024807	ExpressionStatement	"espdma = sparc32_dma_init ( hwdef -> dma_base , slavio_irq [ 18 ] , iommu , & espdma_irq , 0 )"	135:4:2236:2348	8024466	41	True				
ANR	8024808	AssignmentExpression	"espdma = sparc32_dma_init ( hwdef -> dma_base , slavio_irq [ 18 ] , iommu , & espdma_irq , 0 )"		8024466	0		=			
ANR	8024809	Identifier	espdma		8024466	0					
ANR	8024810	CallExpression	"sparc32_dma_init ( hwdef -> dma_base , slavio_irq [ 18 ] , iommu , & espdma_irq , 0 )"		8024466	1					
ANR	8024811	Callee	sparc32_dma_init		8024466	0					
ANR	8024812	Identifier	sparc32_dma_init		8024466	0					
ANR	8024813	ArgumentList	hwdef -> dma_base		8024466	1					
ANR	8024814	Argument	hwdef -> dma_base		8024466	0					
ANR	8024815	PtrMemberAccess	hwdef -> dma_base		8024466	0					
ANR	8024816	Identifier	hwdef		8024466	0					
ANR	8024817	Identifier	dma_base		8024466	1					
ANR	8024818	Argument	slavio_irq [ 18 ]		8024466	1					
ANR	8024819	ArrayIndexing	slavio_irq [ 18 ]		8024466	0					
ANR	8024820	Identifier	slavio_irq		8024466	0					
ANR	8024821	PrimaryExpression	18		8024466	1					
ANR	8024822	Argument	iommu		8024466	2					
ANR	8024823	Identifier	iommu		8024466	0					
ANR	8024824	Argument	& espdma_irq		8024466	3					
ANR	8024825	UnaryOperationExpression	& espdma_irq		8024466	0					
ANR	8024826	UnaryOperator	&		8024466	0					
ANR	8024827	Identifier	espdma_irq		8024466	1					
ANR	8024828	Argument	0		8024466	4					
ANR	8024829	PrimaryExpression	0		8024466	0					
ANR	8024830	Statement	ledma	141:4:2357:2361	8024466	42	True				
ANR	8024831	Statement	=	141:10:2363:2363	8024466	43	True				
ANR	8024832	Statement	sparc32_dma_init	141:12:2365:2380	8024466	44	True				
ANR	8024833	Statement	(	141:28:2381:2381	8024466	45	True				
ANR	8024834	Statement	hwdef	141:29:2382:2386	8024466	46	True				
ANR	8024835	Statement	->	141:34:2387:2388	8024466	47	True				
ANR	8024836	Statement	dma_base	141:36:2389:2396	8024466	48	True				
ANR	8024837	Statement	+	141:45:2398:2398	8024466	49	True				
ANR	8024838	Statement	16UL	141:47:2400:2403	8024466	50	True				
ANR	8024839	Statement	L	141:51:2404:2404	8024466	51	True				
ANR	8024840	Statement	","	141:52:2405:2405	8024466	52	True				
ANR	8024841	Statement	slavio_irq	143:29:2437:2446	8024466	53	True				
ANR	8024842	Statement	[	143:39:2447:2447	8024466	54	True				
ANR	8024843	Statement	16	143:40:2448:2449	8024466	55	True				
ANR	8024844	Statement	]	143:42:2450:2450	8024466	56	True				
ANR	8024845	Statement	","	143:43:2451:2451	8024466	57	True				
ANR	8024846	Statement	iommu	143:45:2453:2457	8024466	58	True				
ANR	8024847	Statement	","	143:50:2458:2458	8024466	59	True				
ANR	8024848	Statement	&	143:52:2460:2460	8024466	60	True				
ANR	8024849	Statement	ledma_irq	143:53:2461:2469	8024466	61	True				
ANR	8024850	Statement	","	143:62:2470:2470	8024466	62	True				
ANR	8024851	Statement	1	143:64:2472:2472	8024466	63	True				
ANR	8024852	Statement	)	143:65:2473:2473	8024466	64	True				
ANR	8024853	ExpressionStatement		143:66:2474:2474	8024466	65	True				
ANR	8024854	IfStatement	if ( graphic_depth != 8 && graphic_depth != 24 )		8024466	66					
ANR	8024855	Condition	graphic_depth != 8 && graphic_depth != 24	147:8:2487:2527	8024466	0	True				
ANR	8024856	AndExpression	graphic_depth != 8 && graphic_depth != 24		8024466	0		&&			
ANR	8024857	EqualityExpression	graphic_depth != 8		8024466	0		!=			
ANR	8024858	Identifier	graphic_depth		8024466	0					
ANR	8024859	PrimaryExpression	8		8024466	1					
ANR	8024860	EqualityExpression	graphic_depth != 24		8024466	1		!=			
ANR	8024861	Identifier	graphic_depth		8024466	0					
ANR	8024862	PrimaryExpression	24		8024466	1					
ANR	8024863	CompoundStatement		143:51:2419:2419	8024466	1					
ANR	8024864	ExpressionStatement	"error_report ( ""Unsupported depth: %d"" , graphic_depth )"	149:8:2541:2593	8024466	0	True				
ANR	8024865	CallExpression	"error_report ( ""Unsupported depth: %d"" , graphic_depth )"		8024466	0					
ANR	8024866	Callee	error_report		8024466	0					
ANR	8024867	Identifier	error_report		8024466	0					
ANR	8024868	ArgumentList	"""Unsupported depth: %d"""		8024466	1					
ANR	8024869	Argument	"""Unsupported depth: %d"""		8024466	0					
ANR	8024870	PrimaryExpression	"""Unsupported depth: %d"""		8024466	0					
ANR	8024871	Argument	graphic_depth		8024466	1					
ANR	8024872	Identifier	graphic_depth		8024466	0					
ANR	8024873	ExpressionStatement	exit ( 1 )	151:8:2604:2612	8024466	1	True				
ANR	8024874	CallExpression	exit ( 1 )		8024466	0					
ANR	8024875	Callee	exit		8024466	0					
ANR	8024876	Identifier	exit		8024466	0					
ANR	8024877	ArgumentList	1		8024466	1					
ANR	8024878	Argument	1		8024466	0					
ANR	8024879	PrimaryExpression	1		8024466	0					
ANR	8024880	ExpressionStatement	num_vsimms = 0	155:4:2626:2640	8024466	67	True				
ANR	8024881	AssignmentExpression	num_vsimms = 0		8024466	0		=			
ANR	8024882	Identifier	num_vsimms		8024466	0					
ANR	8024883	PrimaryExpression	0		8024466	1					
ANR	8024884	IfStatement	if ( num_vsimms == 0 )		8024466	68					
ANR	8024885	Condition	num_vsimms == 0	157:8:2651:2665	8024466	0	True				
ANR	8024886	EqualityExpression	num_vsimms == 0		8024466	0		==			
ANR	8024887	Identifier	num_vsimms		8024466	0					
ANR	8024888	PrimaryExpression	0		8024466	1					
ANR	8024889	CompoundStatement		153:25:2557:2557	8024466	1					
ANR	8024890	IfStatement	if ( vga_interface_type == VGA_CG3 )		8024466	0					
ANR	8024891	Condition	vga_interface_type == VGA_CG3	159:12:2683:2711	8024466	0	True				
ANR	8024892	EqualityExpression	vga_interface_type == VGA_CG3		8024466	0		==			
ANR	8024893	Identifier	vga_interface_type		8024466	0					
ANR	8024894	Identifier	VGA_CG3		8024466	1					
ANR	8024895	CompoundStatement		155:43:2603:2603	8024466	1					
ANR	8024896	IfStatement	if ( graphic_depth != 8 )		8024466	0					
ANR	8024897	Condition	graphic_depth != 8	161:16:2733:2750	8024466	0	True				
ANR	8024898	EqualityExpression	graphic_depth != 8		8024466	0		!=			
ANR	8024899	Identifier	graphic_depth		8024466	0					
ANR	8024900	PrimaryExpression	8		8024466	1					
ANR	8024901	CompoundStatement		157:36:2642:2642	8024466	1					
ANR	8024902	ExpressionStatement	"error_report ( ""Unsupported depth: %d"" , graphic_depth )"	163:16:2772:2824	8024466	0	True				
ANR	8024903	CallExpression	"error_report ( ""Unsupported depth: %d"" , graphic_depth )"		8024466	0					
ANR	8024904	Callee	error_report		8024466	0					
ANR	8024905	Identifier	error_report		8024466	0					
ANR	8024906	ArgumentList	"""Unsupported depth: %d"""		8024466	1					
ANR	8024907	Argument	"""Unsupported depth: %d"""		8024466	0					
ANR	8024908	PrimaryExpression	"""Unsupported depth: %d"""		8024466	0					
ANR	8024909	Argument	graphic_depth		8024466	1					
ANR	8024910	Identifier	graphic_depth		8024466	0					
ANR	8024911	ExpressionStatement	exit ( 1 )	165:16:2843:2850	8024466	1	True				
ANR	8024912	CallExpression	exit ( 1 )		8024466	0					
ANR	8024913	Callee	exit		8024466	0					
ANR	8024914	Identifier	exit		8024466	0					
ANR	8024915	ArgumentList	1		8024466	1					
ANR	8024916	Argument	1		8024466	0					
ANR	8024917	PrimaryExpression	1		8024466	0					
ANR	8024918	IfStatement	if ( ! ( graphic_width == 1024 && graphic_height == 768 ) && ! ( graphic_width == 1152 && graphic_height == 900 ) )		8024466	1					
ANR	8024919	Condition	! ( graphic_width == 1024 && graphic_height == 768 ) && ! ( graphic_width == 1152 && graphic_height == 900 )	171:16:2886:3004	8024466	0	True				
ANR	8024920	AndExpression	! ( graphic_width == 1024 && graphic_height == 768 ) && ! ( graphic_width == 1152 && graphic_height == 900 )		8024466	0		&&			
ANR	8024921	UnaryOperationExpression	! ( graphic_width == 1024 && graphic_height == 768 )		8024466	0					
ANR	8024922	UnaryOperator	!		8024466	0					
ANR	8024923	AndExpression	graphic_width == 1024 && graphic_height == 768		8024466	1		&&			
ANR	8024924	EqualityExpression	graphic_width == 1024		8024466	0		==			
ANR	8024925	Identifier	graphic_width		8024466	0					
ANR	8024926	PrimaryExpression	1024		8024466	1					
ANR	8024927	EqualityExpression	graphic_height == 768		8024466	1		==			
ANR	8024928	Identifier	graphic_height		8024466	0					
ANR	8024929	PrimaryExpression	768		8024466	1					
ANR	8024930	UnaryOperationExpression	! ( graphic_width == 1152 && graphic_height == 900 )		8024466	1					
ANR	8024931	UnaryOperator	!		8024466	0					
ANR	8024932	AndExpression	graphic_width == 1152 && graphic_height == 900		8024466	1		&&			
ANR	8024933	EqualityExpression	graphic_width == 1152		8024466	0		==			
ANR	8024934	Identifier	graphic_width		8024466	0					
ANR	8024935	PrimaryExpression	1152		8024466	1					
ANR	8024936	EqualityExpression	graphic_height == 900		8024466	1		==			
ANR	8024937	Identifier	graphic_height		8024466	0					
ANR	8024938	PrimaryExpression	900		8024466	1					
ANR	8024939	CompoundStatement		169:67:2896:2896	8024466	1					
ANR	8024940	ExpressionStatement	"error_report ( ""Unsupported resolution: %d x %d"" , graphic_width , graphic_height )"	175:16:3026:3134	8024466	0	True				
ANR	8024941	CallExpression	"error_report ( ""Unsupported resolution: %d x %d"" , graphic_width , graphic_height )"		8024466	0					
ANR	8024942	Callee	error_report		8024466	0					
ANR	8024943	Identifier	error_report		8024466	0					
ANR	8024944	ArgumentList	"""Unsupported resolution: %d x %d"""		8024466	1					
ANR	8024945	Argument	"""Unsupported resolution: %d x %d"""		8024466	0					
ANR	8024946	PrimaryExpression	"""Unsupported resolution: %d x %d"""		8024466	0					
ANR	8024947	Argument	graphic_width		8024466	1					
ANR	8024948	Identifier	graphic_width		8024466	0					
ANR	8024949	Argument	graphic_height		8024466	2					
ANR	8024950	Identifier	graphic_height		8024466	0					
ANR	8024951	ExpressionStatement	exit ( 1 )	179:16:3153:3160	8024466	1	True				
ANR	8024952	CallExpression	exit ( 1 )		8024466	0					
ANR	8024953	Callee	exit		8024466	0					
ANR	8024954	Identifier	exit		8024466	0					
ANR	8024955	ArgumentList	1		8024466	1					
ANR	8024956	Argument	1		8024466	0					
ANR	8024957	PrimaryExpression	1		8024466	0					
ANR	8024958	ExpressionStatement	"cg3_init ( hwdef -> tcx_base , slavio_irq [ 11 ] , 0x00100000 , graphic_width , graphic_height , graphic_depth )"	187:12:3222:3343	8024466	2	True				
ANR	8024959	CallExpression	"cg3_init ( hwdef -> tcx_base , slavio_irq [ 11 ] , 0x00100000 , graphic_width , graphic_height , graphic_depth )"		8024466	0					
ANR	8024960	Callee	cg3_init		8024466	0					
ANR	8024961	Identifier	cg3_init		8024466	0					
ANR	8024962	ArgumentList	hwdef -> tcx_base		8024466	1					
ANR	8024963	Argument	hwdef -> tcx_base		8024466	0					
ANR	8024964	PtrMemberAccess	hwdef -> tcx_base		8024466	0					
ANR	8024965	Identifier	hwdef		8024466	0					
ANR	8024966	Identifier	tcx_base		8024466	1					
ANR	8024967	Argument	slavio_irq [ 11 ]		8024466	1					
ANR	8024968	ArrayIndexing	slavio_irq [ 11 ]		8024466	0					
ANR	8024969	Identifier	slavio_irq		8024466	0					
ANR	8024970	PrimaryExpression	11		8024466	1					
ANR	8024971	Argument	0x00100000		8024466	2					
ANR	8024972	PrimaryExpression	0x00100000		8024466	0					
ANR	8024973	Argument	graphic_width		8024466	3					
ANR	8024974	Identifier	graphic_width		8024466	0					
ANR	8024975	Argument	graphic_height		8024466	4					
ANR	8024976	Identifier	graphic_height		8024466	0					
ANR	8024977	Argument	graphic_depth		8024466	5					
ANR	8024978	Identifier	graphic_depth		8024466	0					
ANR	8024979	ElseStatement	else		8024466	0					
ANR	8024980	CompoundStatement		187:15:3250:3250	8024466	0					
ANR	8024981	IfStatement	if ( graphic_depth != 8 && graphic_depth != 24 )		8024466	0					
ANR	8024982	Condition	graphic_depth != 8 && graphic_depth != 24	195:16:3439:3479	8024466	0	True				
ANR	8024983	AndExpression	graphic_depth != 8 && graphic_depth != 24		8024466	0		&&			
ANR	8024984	EqualityExpression	graphic_depth != 8		8024466	0		!=			
ANR	8024985	Identifier	graphic_depth		8024466	0					
ANR	8024986	PrimaryExpression	8		8024466	1					
ANR	8024987	EqualityExpression	graphic_depth != 24		8024466	1		!=			
ANR	8024988	Identifier	graphic_depth		8024466	0					
ANR	8024989	PrimaryExpression	24		8024466	1					
ANR	8024990	CompoundStatement		191:59:3371:3371	8024466	1					
ANR	8024991	ExpressionStatement	"error_report ( ""Unsupported depth: %d"" , graphic_depth )"	197:16:3501:3553	8024466	0	True				
ANR	8024992	CallExpression	"error_report ( ""Unsupported depth: %d"" , graphic_depth )"		8024466	0					
ANR	8024993	Callee	error_report		8024466	0					
ANR	8024994	Identifier	error_report		8024466	0					
ANR	8024995	ArgumentList	"""Unsupported depth: %d"""		8024466	1					
ANR	8024996	Argument	"""Unsupported depth: %d"""		8024466	0					
ANR	8024997	PrimaryExpression	"""Unsupported depth: %d"""		8024466	0					
ANR	8024998	Argument	graphic_depth		8024466	1					
ANR	8024999	Identifier	graphic_depth		8024466	0					
ANR	8025000	ExpressionStatement	exit ( 1 )	199:16:3572:3579	8024466	1	True				
ANR	8025001	CallExpression	exit ( 1 )		8024466	0					
ANR	8025002	Callee	exit		8024466	0					
ANR	8025003	Identifier	exit		8024466	0					
ANR	8025004	ArgumentList	1		8024466	1					
ANR	8025005	Argument	1		8024466	0					
ANR	8025006	PrimaryExpression	1		8024466	0					
ANR	8025007	IfStatement	if ( ! ( graphic_width == 1024 && graphic_height == 768 ) )		8024466	1					
ANR	8025008	Condition	! ( graphic_width == 1024 && graphic_height == 768 )	205:16:3615:3663	8024466	0	True				
ANR	8025009	UnaryOperationExpression	! ( graphic_width == 1024 && graphic_height == 768 )		8024466	0					
ANR	8025010	UnaryOperator	!		8024466	0					
ANR	8025011	AndExpression	graphic_width == 1024 && graphic_height == 768		8024466	1		&&			
ANR	8025012	EqualityExpression	graphic_width == 1024		8024466	0		==			
ANR	8025013	Identifier	graphic_width		8024466	0					
ANR	8025014	PrimaryExpression	1024		8024466	1					
ANR	8025015	EqualityExpression	graphic_height == 768		8024466	1		==			
ANR	8025016	Identifier	graphic_height		8024466	0					
ANR	8025017	PrimaryExpression	768		8024466	1					
ANR	8025018	CompoundStatement		201:67:3555:3555	8024466	1					
ANR	8025019	ExpressionStatement	"error_report ( ""Unsupported resolution: %d x %d"" , graphic_width , graphic_height )"	207:16:3685:3793	8024466	0	True				
ANR	8025020	CallExpression	"error_report ( ""Unsupported resolution: %d x %d"" , graphic_width , graphic_height )"		8024466	0					
ANR	8025021	Callee	error_report		8024466	0					
ANR	8025022	Identifier	error_report		8024466	0					
ANR	8025023	ArgumentList	"""Unsupported resolution: %d x %d"""		8024466	1					
ANR	8025024	Argument	"""Unsupported resolution: %d x %d"""		8024466	0					
ANR	8025025	PrimaryExpression	"""Unsupported resolution: %d x %d"""		8024466	0					
ANR	8025026	Argument	graphic_width		8024466	1					
ANR	8025027	Identifier	graphic_width		8024466	0					
ANR	8025028	Argument	graphic_height		8024466	2					
ANR	8025029	Identifier	graphic_height		8024466	0					
ANR	8025030	ExpressionStatement	exit ( 1 )	211:16:3812:3819	8024466	1	True				
ANR	8025031	CallExpression	exit ( 1 )		8024466	0					
ANR	8025032	Callee	exit		8024466	0					
ANR	8025033	Identifier	exit		8024466	0					
ANR	8025034	ArgumentList	1		8024466	1					
ANR	8025035	Argument	1		8024466	0					
ANR	8025036	PrimaryExpression	1		8024466	0					
ANR	8025037	ExpressionStatement	"tcx_init ( hwdef -> tcx_base , slavio_irq [ 11 ] , 0x00100000 , graphic_width , graphic_height , graphic_depth )"	217:12:3851:3972	8024466	2	True				
ANR	8025038	CallExpression	"tcx_init ( hwdef -> tcx_base , slavio_irq [ 11 ] , 0x00100000 , graphic_width , graphic_height , graphic_depth )"		8024466	0					
ANR	8025039	Callee	tcx_init		8024466	0					
ANR	8025040	Identifier	tcx_init		8024466	0					
ANR	8025041	ArgumentList	hwdef -> tcx_base		8024466	1					
ANR	8025042	Argument	hwdef -> tcx_base		8024466	0					
ANR	8025043	PtrMemberAccess	hwdef -> tcx_base		8024466	0					
ANR	8025044	Identifier	hwdef		8024466	0					
ANR	8025045	Identifier	tcx_base		8024466	1					
ANR	8025046	Argument	slavio_irq [ 11 ]		8024466	1					
ANR	8025047	ArrayIndexing	slavio_irq [ 11 ]		8024466	0					
ANR	8025048	Identifier	slavio_irq		8024466	0					
ANR	8025049	PrimaryExpression	11		8024466	1					
ANR	8025050	Argument	0x00100000		8024466	2					
ANR	8025051	PrimaryExpression	0x00100000		8024466	0					
ANR	8025052	Argument	graphic_width		8024466	3					
ANR	8025053	Identifier	graphic_width		8024466	0					
ANR	8025054	Argument	graphic_height		8024466	4					
ANR	8025055	Identifier	graphic_height		8024466	0					
ANR	8025056	Argument	graphic_depth		8024466	5					
ANR	8025057	Identifier	graphic_depth		8024466	0					
ANR	8025058	ForStatement	for ( i = num_vsimms ; i < MAX_VSIMMS ; i ++ )		8024466	69					
ANR	8025059	ForInit	i = num_vsimms ;	227:9:4004:4018	8024466	0	True				
ANR	8025060	AssignmentExpression	i = num_vsimms		8024466	0		=			
ANR	8025061	Identifier	i		8024466	0					
ANR	8025062	Identifier	num_vsimms		8024466	1					
ANR	8025063	Condition	i < MAX_VSIMMS	227:25:4020:4033	8024466	1	True				
ANR	8025064	RelationalExpression	i < MAX_VSIMMS		8024466	0		<			
ANR	8025065	Identifier	i		8024466	0					
ANR	8025066	Identifier	MAX_VSIMMS		8024466	1					
ANR	8025067	PostIncDecOperationExpression	i ++	227:41:4036:4038	8024466	2	True				
ANR	8025068	Identifier	i		8024466	0					
ANR	8025069	IncDec	++		8024466	1					
ANR	8025070	CompoundStatement		223:46:3930:3930	8024466	3					
ANR	8025071	IfStatement	if ( hwdef -> vsimm [ i ] . reg_base )		8024466	0					
ANR	8025072	Condition	hwdef -> vsimm [ i ] . reg_base	231:12:4101:4124	8024466	0	True				
ANR	8025073	MemberAccess	hwdef -> vsimm [ i ] . reg_base		8024466	0					
ANR	8025074	ArrayIndexing	hwdef -> vsimm [ i ]		8024466	0					
ANR	8025075	PtrMemberAccess	hwdef -> vsimm		8024466	0					
ANR	8025076	Identifier	hwdef		8024466	0					
ANR	8025077	Identifier	vsimm		8024466	1					
ANR	8025078	Identifier	i		8024466	1					
ANR	8025079	Identifier	reg_base		8024466	1					
ANR	8025080	CompoundStatement		227:38:4016:4016	8024466	1					
ANR	8025081	ExpressionStatement	"empty_slot_init ( hwdef -> vsimm [ i ] . reg_base , 0x2000 )"	233:12:4142:4191	8024466	0	True				
ANR	8025082	CallExpression	"empty_slot_init ( hwdef -> vsimm [ i ] . reg_base , 0x2000 )"		8024466	0					
ANR	8025083	Callee	empty_slot_init		8024466	0					
ANR	8025084	Identifier	empty_slot_init		8024466	0					
ANR	8025085	ArgumentList	hwdef -> vsimm [ i ] . reg_base		8024466	1					
ANR	8025086	Argument	hwdef -> vsimm [ i ] . reg_base		8024466	0					
ANR	8025087	MemberAccess	hwdef -> vsimm [ i ] . reg_base		8024466	0					
ANR	8025088	ArrayIndexing	hwdef -> vsimm [ i ]		8024466	0					
ANR	8025089	PtrMemberAccess	hwdef -> vsimm		8024466	0					
ANR	8025090	Identifier	hwdef		8024466	0					
ANR	8025091	Identifier	vsimm		8024466	1					
ANR	8025092	Identifier	i		8024466	1					
ANR	8025093	Identifier	reg_base		8024466	1					
ANR	8025094	Argument	0x2000		8024466	1					
ANR	8025095	PrimaryExpression	0x2000		8024466	0					
ANR	8025096	IfStatement	if ( hwdef -> sx_base )		8024466	70					
ANR	8025097	Condition	hwdef -> sx_base	241:8:4222:4235	8024466	0	True				
ANR	8025098	PtrMemberAccess	hwdef -> sx_base		8024466	0					
ANR	8025099	Identifier	hwdef		8024466	0					
ANR	8025100	Identifier	sx_base		8024466	1					
ANR	8025101	CompoundStatement		237:24:4127:4127	8024466	1					
ANR	8025102	ExpressionStatement	"empty_slot_init ( hwdef -> sx_base , 0x2000 )"	243:8:4249:4288	8024466	0	True				
ANR	8025103	CallExpression	"empty_slot_init ( hwdef -> sx_base , 0x2000 )"		8024466	0					
ANR	8025104	Callee	empty_slot_init		8024466	0					
ANR	8025105	Identifier	empty_slot_init		8024466	0					
ANR	8025106	ArgumentList	hwdef -> sx_base		8024466	1					
ANR	8025107	Argument	hwdef -> sx_base		8024466	0					
ANR	8025108	PtrMemberAccess	hwdef -> sx_base		8024466	0					
ANR	8025109	Identifier	hwdef		8024466	0					
ANR	8025110	Identifier	sx_base		8024466	1					
ANR	8025111	Argument	0x2000		8024466	1					
ANR	8025112	PrimaryExpression	0x2000		8024466	0					
ANR	8025113	ExpressionStatement	"lance_init ( & nd_table [ 0 ] , hwdef -> le_base , ledma , ledma_irq )"	249:4:4304:4362	8024466	71	True				
ANR	8025114	CallExpression	"lance_init ( & nd_table [ 0 ] , hwdef -> le_base , ledma , ledma_irq )"		8024466	0					
ANR	8025115	Callee	lance_init		8024466	0					
ANR	8025116	Identifier	lance_init		8024466	0					
ANR	8025117	ArgumentList	& nd_table [ 0 ]		8024466	1					
ANR	8025118	Argument	& nd_table [ 0 ]		8024466	0					
ANR	8025119	UnaryOperationExpression	& nd_table [ 0 ]		8024466	0					
ANR	8025120	UnaryOperator	&		8024466	0					
ANR	8025121	ArrayIndexing	nd_table [ 0 ]		8024466	1					
ANR	8025122	Identifier	nd_table		8024466	0					
ANR	8025123	PrimaryExpression	0		8024466	1					
ANR	8025124	Argument	hwdef -> le_base		8024466	1					
ANR	8025125	PtrMemberAccess	hwdef -> le_base		8024466	0					
ANR	8025126	Identifier	hwdef		8024466	0					
ANR	8025127	Identifier	le_base		8024466	1					
ANR	8025128	Argument	ledma		8024466	2					
ANR	8025129	Identifier	ledma		8024466	0					
ANR	8025130	Argument	ledma_irq		8024466	3					
ANR	8025131	Identifier	ledma_irq		8024466	0					
ANR	8025132	ExpressionStatement	"nvram = m48t59_init ( slavio_irq [ 0 ] , hwdef -> nvram_base , 0 , 0x2000 , 1968 , 8 )"	253:4:4371:4444	8024466	72	True				
ANR	8025133	AssignmentExpression	"nvram = m48t59_init ( slavio_irq [ 0 ] , hwdef -> nvram_base , 0 , 0x2000 , 1968 , 8 )"		8024466	0		=			
ANR	8025134	Identifier	nvram		8024466	0					
ANR	8025135	CallExpression	"m48t59_init ( slavio_irq [ 0 ] , hwdef -> nvram_base , 0 , 0x2000 , 1968 , 8 )"		8024466	1					
ANR	8025136	Callee	m48t59_init		8024466	0					
ANR	8025137	Identifier	m48t59_init		8024466	0					
ANR	8025138	ArgumentList	slavio_irq [ 0 ]		8024466	1					
ANR	8025139	Argument	slavio_irq [ 0 ]		8024466	0					
ANR	8025140	ArrayIndexing	slavio_irq [ 0 ]		8024466	0					
ANR	8025141	Identifier	slavio_irq		8024466	0					
ANR	8025142	PrimaryExpression	0		8024466	1					
ANR	8025143	Argument	hwdef -> nvram_base		8024466	1					
ANR	8025144	PtrMemberAccess	hwdef -> nvram_base		8024466	0					
ANR	8025145	Identifier	hwdef		8024466	0					
ANR	8025146	Identifier	nvram_base		8024466	1					
ANR	8025147	Argument	0		8024466	2					
ANR	8025148	PrimaryExpression	0		8024466	0					
ANR	8025149	Argument	0x2000		8024466	3					
ANR	8025150	PrimaryExpression	0x2000		8024466	0					
ANR	8025151	Argument	1968		8024466	4					
ANR	8025152	PrimaryExpression	1968		8024466	0					
ANR	8025153	Argument	8		8024466	5					
ANR	8025154	PrimaryExpression	8		8024466	0					
ANR	8025155	ExpressionStatement	"slavio_timer_init_all ( hwdef -> counter_base , slavio_irq [ 19 ] , slavio_cpu_irq , smp_cpus )"	257:4:4453:4537	8024466	73	True				
ANR	8025156	CallExpression	"slavio_timer_init_all ( hwdef -> counter_base , slavio_irq [ 19 ] , slavio_cpu_irq , smp_cpus )"		8024466	0					
ANR	8025157	Callee	slavio_timer_init_all		8024466	0					
ANR	8025158	Identifier	slavio_timer_init_all		8024466	0					
ANR	8025159	ArgumentList	hwdef -> counter_base		8024466	1					
ANR	8025160	Argument	hwdef -> counter_base		8024466	0					
ANR	8025161	PtrMemberAccess	hwdef -> counter_base		8024466	0					
ANR	8025162	Identifier	hwdef		8024466	0					
ANR	8025163	Identifier	counter_base		8024466	1					
ANR	8025164	Argument	slavio_irq [ 19 ]		8024466	1					
ANR	8025165	ArrayIndexing	slavio_irq [ 19 ]		8024466	0					
ANR	8025166	Identifier	slavio_irq		8024466	0					
ANR	8025167	PrimaryExpression	19		8024466	1					
ANR	8025168	Argument	slavio_cpu_irq		8024466	2					
ANR	8025169	Identifier	slavio_cpu_irq		8024466	0					
ANR	8025170	Argument	smp_cpus		8024466	3					
ANR	8025171	Identifier	smp_cpus		8024466	0					
ANR	8025172	ExpressionStatement	"slavio_serial_ms_kbd_init ( hwdef -> ms_kb_base , slavio_irq [ 14 ] , display_type == DT_NOGRAPHIC , ESCC_CLOCK , 1 )"	261:4:4546:4682	8024466	74	True				
ANR	8025173	CallExpression	"slavio_serial_ms_kbd_init ( hwdef -> ms_kb_base , slavio_irq [ 14 ] , display_type == DT_NOGRAPHIC , ESCC_CLOCK , 1 )"		8024466	0					
ANR	8025174	Callee	slavio_serial_ms_kbd_init		8024466	0					
ANR	8025175	Identifier	slavio_serial_ms_kbd_init		8024466	0					
ANR	8025176	ArgumentList	hwdef -> ms_kb_base		8024466	1					
ANR	8025177	Argument	hwdef -> ms_kb_base		8024466	0					
ANR	8025178	PtrMemberAccess	hwdef -> ms_kb_base		8024466	0					
ANR	8025179	Identifier	hwdef		8024466	0					
ANR	8025180	Identifier	ms_kb_base		8024466	1					
ANR	8025181	Argument	slavio_irq [ 14 ]		8024466	1					
ANR	8025182	ArrayIndexing	slavio_irq [ 14 ]		8024466	0					
ANR	8025183	Identifier	slavio_irq		8024466	0					
ANR	8025184	PrimaryExpression	14		8024466	1					
ANR	8025185	Argument	display_type == DT_NOGRAPHIC		8024466	2					
ANR	8025186	EqualityExpression	display_type == DT_NOGRAPHIC		8024466	0		==			
ANR	8025187	Identifier	display_type		8024466	0					
ANR	8025188	Identifier	DT_NOGRAPHIC		8024466	1					
ANR	8025189	Argument	ESCC_CLOCK		8024466	3					
ANR	8025190	Identifier	ESCC_CLOCK		8024466	0					
ANR	8025191	Argument	1		8024466	4					
ANR	8025192	PrimaryExpression	1		8024466	0					
ANR	8025193	ExpressionStatement	"escc_init ( hwdef -> serial_base , slavio_irq [ 15 ] , slavio_irq [ 15 ] , serial_hds [ 0 ] , serial_hds [ 1 ] , ESCC_CLOCK , 1 )"	269:4:4841:4962	8024466	75	True				
ANR	8025194	CallExpression	"escc_init ( hwdef -> serial_base , slavio_irq [ 15 ] , slavio_irq [ 15 ] , serial_hds [ 0 ] , serial_hds [ 1 ] , ESCC_CLOCK , 1 )"		8024466	0					
ANR	8025195	Callee	escc_init		8024466	0					
ANR	8025196	Identifier	escc_init		8024466	0					
ANR	8025197	ArgumentList	hwdef -> serial_base		8024466	1					
ANR	8025198	Argument	hwdef -> serial_base		8024466	0					
ANR	8025199	PtrMemberAccess	hwdef -> serial_base		8024466	0					
ANR	8025200	Identifier	hwdef		8024466	0					
ANR	8025201	Identifier	serial_base		8024466	1					
ANR	8025202	Argument	slavio_irq [ 15 ]		8024466	1					
ANR	8025203	ArrayIndexing	slavio_irq [ 15 ]		8024466	0					
ANR	8025204	Identifier	slavio_irq		8024466	0					
ANR	8025205	PrimaryExpression	15		8024466	1					
ANR	8025206	Argument	slavio_irq [ 15 ]		8024466	2					
ANR	8025207	ArrayIndexing	slavio_irq [ 15 ]		8024466	0					
ANR	8025208	Identifier	slavio_irq		8024466	0					
ANR	8025209	PrimaryExpression	15		8024466	1					
ANR	8025210	Argument	serial_hds [ 0 ]		8024466	3					
ANR	8025211	ArrayIndexing	serial_hds [ 0 ]		8024466	0					
ANR	8025212	Identifier	serial_hds		8024466	0					
ANR	8025213	PrimaryExpression	0		8024466	1					
ANR	8025214	Argument	serial_hds [ 1 ]		8024466	4					
ANR	8025215	ArrayIndexing	serial_hds [ 1 ]		8024466	0					
ANR	8025216	Identifier	serial_hds		8024466	0					
ANR	8025217	PrimaryExpression	1		8024466	1					
ANR	8025218	Argument	ESCC_CLOCK		8024466	5					
ANR	8025219	Identifier	ESCC_CLOCK		8024466	0					
ANR	8025220	Argument	1		8024466	6					
ANR	8025221	PrimaryExpression	1		8024466	0					
ANR	8025222	ExpressionStatement	"cpu_halt = qemu_allocate_irqs ( cpu_halt_signal , NULL , 1 )"	275:4:4971:5026	8024466	76	True				
ANR	8025223	AssignmentExpression	"cpu_halt = qemu_allocate_irqs ( cpu_halt_signal , NULL , 1 )"		8024466	0		=			
ANR	8025224	Identifier	cpu_halt		8024466	0					
ANR	8025225	CallExpression	"qemu_allocate_irqs ( cpu_halt_signal , NULL , 1 )"		8024466	1					
ANR	8025226	Callee	qemu_allocate_irqs		8024466	0					
ANR	8025227	Identifier	qemu_allocate_irqs		8024466	0					
ANR	8025228	ArgumentList	cpu_halt_signal		8024466	1					
ANR	8025229	Argument	cpu_halt_signal		8024466	0					
ANR	8025230	Identifier	cpu_halt_signal		8024466	0					
ANR	8025231	Argument	NULL		8024466	1					
ANR	8025232	Identifier	NULL		8024466	0					
ANR	8025233	Argument	1		8024466	2					
ANR	8025234	PrimaryExpression	1		8024466	0					
ANR	8025235	IfStatement	if ( hwdef -> apc_base )		8024466	77					
ANR	8025236	Condition	hwdef -> apc_base	277:8:5037:5051	8024466	0	True				
ANR	8025237	PtrMemberAccess	hwdef -> apc_base		8024466	0					
ANR	8025238	Identifier	hwdef		8024466	0					
ANR	8025239	Identifier	apc_base		8024466	1					
ANR	8025240	CompoundStatement		273:25:4943:4943	8024466	1					
ANR	8025241	ExpressionStatement	"apc_init ( hwdef -> apc_base , cpu_halt [ 0 ] )"	279:8:5065:5103	8024466	0	True				
ANR	8025242	CallExpression	"apc_init ( hwdef -> apc_base , cpu_halt [ 0 ] )"		8024466	0					
ANR	8025243	Callee	apc_init		8024466	0					
ANR	8025244	Identifier	apc_init		8024466	0					
ANR	8025245	ArgumentList	hwdef -> apc_base		8024466	1					
ANR	8025246	Argument	hwdef -> apc_base		8024466	0					
ANR	8025247	PtrMemberAccess	hwdef -> apc_base		8024466	0					
ANR	8025248	Identifier	hwdef		8024466	0					
ANR	8025249	Identifier	apc_base		8024466	1					
ANR	8025250	Argument	cpu_halt [ 0 ]		8024466	1					
ANR	8025251	ArrayIndexing	cpu_halt [ 0 ]		8024466	0					
ANR	8025252	Identifier	cpu_halt		8024466	0					
ANR	8025253	PrimaryExpression	0		8024466	1					
ANR	8025254	IfStatement	if ( hwdef -> fd_base )		8024466	78					
ANR	8025255	Condition	hwdef -> fd_base	285:8:5123:5136	8024466	0	True				
ANR	8025256	PtrMemberAccess	hwdef -> fd_base		8024466	0					
ANR	8025257	Identifier	hwdef		8024466	0					
ANR	8025258	Identifier	fd_base		8024466	1					
ANR	8025259	CompoundStatement		281:24:5028:5028	8024466	1					
ANR	8025260	ExpressionStatement	"memset ( fd , 0 , sizeof ( fd ) )"	289:8:5199:5224	8024466	0	True				
ANR	8025261	CallExpression	"memset ( fd , 0 , sizeof ( fd ) )"		8024466	0					
ANR	8025262	Callee	memset		8024466	0					
ANR	8025263	Identifier	memset		8024466	0					
ANR	8025264	ArgumentList	fd		8024466	1					
ANR	8025265	Argument	fd		8024466	0					
ANR	8025266	Identifier	fd		8024466	0					
ANR	8025267	Argument	0		8024466	1					
ANR	8025268	PrimaryExpression	0		8024466	0					
ANR	8025269	Argument	sizeof ( fd )		8024466	2					
ANR	8025270	SizeofExpression	sizeof ( fd )		8024466	0					
ANR	8025271	Sizeof	sizeof		8024466	0					
ANR	8025272	SizeofOperand	fd		8024466	1					
ANR	8025273	ExpressionStatement	"fd [ 0 ] = drive_get ( IF_FLOPPY , 0 , 0 )"	291:8:5235:5269	8024466	1	True				
ANR	8025274	AssignmentExpression	"fd [ 0 ] = drive_get ( IF_FLOPPY , 0 , 0 )"		8024466	0		=			
ANR	8025275	ArrayIndexing	fd [ 0 ]		8024466	0					
ANR	8025276	Identifier	fd		8024466	0					
ANR	8025277	PrimaryExpression	0		8024466	1					
ANR	8025278	CallExpression	"drive_get ( IF_FLOPPY , 0 , 0 )"		8024466	1					
ANR	8025279	Callee	drive_get		8024466	0					
ANR	8025280	Identifier	drive_get		8024466	0					
ANR	8025281	ArgumentList	IF_FLOPPY		8024466	1					
ANR	8025282	Argument	IF_FLOPPY		8024466	0					
ANR	8025283	Identifier	IF_FLOPPY		8024466	0					
ANR	8025284	Argument	0		8024466	1					
ANR	8025285	PrimaryExpression	0		8024466	0					
ANR	8025286	Argument	0		8024466	2					
ANR	8025287	PrimaryExpression	0		8024466	0					
ANR	8025288	ExpressionStatement	"sun4m_fdctrl_init ( slavio_irq [ 22 ] , hwdef -> fd_base , fd , & fdc_tc )"	293:8:5280:5369	8024466	2	True				
ANR	8025289	CallExpression	"sun4m_fdctrl_init ( slavio_irq [ 22 ] , hwdef -> fd_base , fd , & fdc_tc )"		8024466	0					
ANR	8025290	Callee	sun4m_fdctrl_init		8024466	0					
ANR	8025291	Identifier	sun4m_fdctrl_init		8024466	0					
ANR	8025292	ArgumentList	slavio_irq [ 22 ]		8024466	1					
ANR	8025293	Argument	slavio_irq [ 22 ]		8024466	0					
ANR	8025294	ArrayIndexing	slavio_irq [ 22 ]		8024466	0					
ANR	8025295	Identifier	slavio_irq		8024466	0					
ANR	8025296	PrimaryExpression	22		8024466	1					
ANR	8025297	Argument	hwdef -> fd_base		8024466	1					
ANR	8025298	PtrMemberAccess	hwdef -> fd_base		8024466	0					
ANR	8025299	Identifier	hwdef		8024466	0					
ANR	8025300	Identifier	fd_base		8024466	1					
ANR	8025301	Argument	fd		8024466	2					
ANR	8025302	Identifier	fd		8024466	0					
ANR	8025303	Argument	& fdc_tc		8024466	3					
ANR	8025304	UnaryOperationExpression	& fdc_tc		8024466	0					
ANR	8025305	UnaryOperator	&		8024466	0					
ANR	8025306	Identifier	fdc_tc		8024466	1					
ANR	8025307	ElseStatement	else		8024466	0					
ANR	8025308	CompoundStatement		293:11:5272:5272	8024466	0					
ANR	8025309	ExpressionStatement	"fdc_tc = * qemu_allocate_irqs ( dummy_fdc_tc , NULL , 1 )"	299:8:5394:5445	8024466	0	True				
ANR	8025310	AssignmentExpression	"fdc_tc = * qemu_allocate_irqs ( dummy_fdc_tc , NULL , 1 )"		8024466	0		=			
ANR	8025311	Identifier	fdc_tc		8024466	0					
ANR	8025312	UnaryOperationExpression	"* qemu_allocate_irqs ( dummy_fdc_tc , NULL , 1 )"		8024466	1					
ANR	8025313	UnaryOperator	*		8024466	0					
ANR	8025314	CallExpression	"qemu_allocate_irqs ( dummy_fdc_tc , NULL , 1 )"		8024466	1					
ANR	8025315	Callee	qemu_allocate_irqs		8024466	0					
ANR	8025316	Identifier	qemu_allocate_irqs		8024466	0					
ANR	8025317	ArgumentList	dummy_fdc_tc		8024466	1					
ANR	8025318	Argument	dummy_fdc_tc		8024466	0					
ANR	8025319	Identifier	dummy_fdc_tc		8024466	0					
ANR	8025320	Argument	NULL		8024466	1					
ANR	8025321	Identifier	NULL		8024466	0					
ANR	8025322	Argument	1		8024466	2					
ANR	8025323	PrimaryExpression	1		8024466	0					
ANR	8025324	ExpressionStatement	"slavio_misc_init ( hwdef -> slavio_base , hwdef -> aux1_base , hwdef -> aux2_base , slavio_irq [ 30 ] , fdc_tc )"	305:4:5461:5579	8024466	79	True				
ANR	8025325	CallExpression	"slavio_misc_init ( hwdef -> slavio_base , hwdef -> aux1_base , hwdef -> aux2_base , slavio_irq [ 30 ] , fdc_tc )"		8024466	0					
ANR	8025326	Callee	slavio_misc_init		8024466	0					
ANR	8025327	Identifier	slavio_misc_init		8024466	0					
ANR	8025328	ArgumentList	hwdef -> slavio_base		8024466	1					
ANR	8025329	Argument	hwdef -> slavio_base		8024466	0					
ANR	8025330	PtrMemberAccess	hwdef -> slavio_base		8024466	0					
ANR	8025331	Identifier	hwdef		8024466	0					
ANR	8025332	Identifier	slavio_base		8024466	1					
ANR	8025333	Argument	hwdef -> aux1_base		8024466	1					
ANR	8025334	PtrMemberAccess	hwdef -> aux1_base		8024466	0					
ANR	8025335	Identifier	hwdef		8024466	0					
ANR	8025336	Identifier	aux1_base		8024466	1					
ANR	8025337	Argument	hwdef -> aux2_base		8024466	2					
ANR	8025338	PtrMemberAccess	hwdef -> aux2_base		8024466	0					
ANR	8025339	Identifier	hwdef		8024466	0					
ANR	8025340	Identifier	aux2_base		8024466	1					
ANR	8025341	Argument	slavio_irq [ 30 ]		8024466	3					
ANR	8025342	ArrayIndexing	slavio_irq [ 30 ]		8024466	0					
ANR	8025343	Identifier	slavio_irq		8024466	0					
ANR	8025344	PrimaryExpression	30		8024466	1					
ANR	8025345	Argument	fdc_tc		8024466	4					
ANR	8025346	Identifier	fdc_tc		8024466	0					
ANR	8025347	IfStatement	if ( drive_get_max_bus ( IF_SCSI ) > 0 )		8024466	80					
ANR	8025348	Condition	drive_get_max_bus ( IF_SCSI ) > 0	311:8:5592:5621	8024466	0	True				
ANR	8025349	RelationalExpression	drive_get_max_bus ( IF_SCSI ) > 0		8024466	0		>			
ANR	8025350	CallExpression	drive_get_max_bus ( IF_SCSI )		8024466	0					
ANR	8025351	Callee	drive_get_max_bus		8024466	0					
ANR	8025352	Identifier	drive_get_max_bus		8024466	0					
ANR	8025353	ArgumentList	IF_SCSI		8024466	1					
ANR	8025354	Argument	IF_SCSI		8024466	0					
ANR	8025355	Identifier	IF_SCSI		8024466	0					
ANR	8025356	PrimaryExpression	0		8024466	1					
ANR	8025357	CompoundStatement		307:40:5513:5513	8024466	1					
ANR	8025358	ExpressionStatement	"fprintf ( stderr , ""qemu: too many SCSI bus\\n"" )"	313:8:5635:5679	8024466	0	True				
ANR	8025359	CallExpression	"fprintf ( stderr , ""qemu: too many SCSI bus\\n"" )"		8024466	0					
ANR	8025360	Callee	fprintf		8024466	0					
ANR	8025361	Identifier	fprintf		8024466	0					
ANR	8025362	ArgumentList	stderr		8024466	1					
ANR	8025363	Argument	stderr		8024466	0					
ANR	8025364	Identifier	stderr		8024466	0					
ANR	8025365	Argument	"""qemu: too many SCSI bus\\n"""		8024466	1					
ANR	8025366	PrimaryExpression	"""qemu: too many SCSI bus\\n"""		8024466	0					
ANR	8025367	ExpressionStatement	exit ( 1 )	315:8:5690:5697	8024466	1	True				
ANR	8025368	CallExpression	exit ( 1 )		8024466	0					
ANR	8025369	Callee	exit		8024466	0					
ANR	8025370	Identifier	exit		8024466	0					
ANR	8025371	ArgumentList	1		8024466	1					
ANR	8025372	Argument	1		8024466	0					
ANR	8025373	PrimaryExpression	1		8024466	0					
ANR	8025374	ExpressionStatement	"esp_init ( hwdef -> esp_base , 2 , espdma_memory_read , espdma_memory_write , espdma , espdma_irq , & esp_reset , & dma_enable )"	321:4:5713:5855	8024466	81	True				
ANR	8025375	CallExpression	"esp_init ( hwdef -> esp_base , 2 , espdma_memory_read , espdma_memory_write , espdma , espdma_irq , & esp_reset , & dma_enable )"		8024466	0					
ANR	8025376	Callee	esp_init		8024466	0					
ANR	8025377	Identifier	esp_init		8024466	0					
ANR	8025378	ArgumentList	hwdef -> esp_base		8024466	1					
ANR	8025379	Argument	hwdef -> esp_base		8024466	0					
ANR	8025380	PtrMemberAccess	hwdef -> esp_base		8024466	0					
ANR	8025381	Identifier	hwdef		8024466	0					
ANR	8025382	Identifier	esp_base		8024466	1					
ANR	8025383	Argument	2		8024466	1					
ANR	8025384	PrimaryExpression	2		8024466	0					
ANR	8025385	Argument	espdma_memory_read		8024466	2					
ANR	8025386	Identifier	espdma_memory_read		8024466	0					
ANR	8025387	Argument	espdma_memory_write		8024466	3					
ANR	8025388	Identifier	espdma_memory_write		8024466	0					
ANR	8025389	Argument	espdma		8024466	4					
ANR	8025390	Identifier	espdma		8024466	0					
ANR	8025391	Argument	espdma_irq		8024466	5					
ANR	8025392	Identifier	espdma_irq		8024466	0					
ANR	8025393	Argument	& esp_reset		8024466	6					
ANR	8025394	UnaryOperationExpression	& esp_reset		8024466	0					
ANR	8025395	UnaryOperator	&		8024466	0					
ANR	8025396	Identifier	esp_reset		8024466	1					
ANR	8025397	Argument	& dma_enable		8024466	7					
ANR	8025398	UnaryOperationExpression	& dma_enable		8024466	0					
ANR	8025399	UnaryOperator	&		8024466	0					
ANR	8025400	Identifier	dma_enable		8024466	1					
ANR	8025401	ExpressionStatement	"qdev_connect_gpio_out ( espdma , 0 , esp_reset )"	329:4:5864:5907	8024466	82	True				
ANR	8025402	CallExpression	"qdev_connect_gpio_out ( espdma , 0 , esp_reset )"		8024466	0					
ANR	8025403	Callee	qdev_connect_gpio_out		8024466	0					
ANR	8025404	Identifier	qdev_connect_gpio_out		8024466	0					
ANR	8025405	ArgumentList	espdma		8024466	1					
ANR	8025406	Argument	espdma		8024466	0					
ANR	8025407	Identifier	espdma		8024466	0					
ANR	8025408	Argument	0		8024466	1					
ANR	8025409	PrimaryExpression	0		8024466	0					
ANR	8025410	Argument	esp_reset		8024466	2					
ANR	8025411	Identifier	esp_reset		8024466	0					
ANR	8025412	ExpressionStatement	"qdev_connect_gpio_out ( espdma , 1 , dma_enable )"	331:4:5914:5958	8024466	83	True				
ANR	8025413	CallExpression	"qdev_connect_gpio_out ( espdma , 1 , dma_enable )"		8024466	0					
ANR	8025414	Callee	qdev_connect_gpio_out		8024466	0					
ANR	8025415	Identifier	qdev_connect_gpio_out		8024466	0					
ANR	8025416	ArgumentList	espdma		8024466	1					
ANR	8025417	Argument	espdma		8024466	0					
ANR	8025418	Identifier	espdma		8024466	0					
ANR	8025419	Argument	1		8024466	1					
ANR	8025420	PrimaryExpression	1		8024466	0					
ANR	8025421	Argument	dma_enable		8024466	2					
ANR	8025422	Identifier	dma_enable		8024466	0					
ANR	8025423	IfStatement	if ( hwdef -> cs_base )		8024466	84					
ANR	8025424	Condition	hwdef -> cs_base	335:8:5971:5984	8024466	0	True				
ANR	8025425	PtrMemberAccess	hwdef -> cs_base		8024466	0					
ANR	8025426	Identifier	hwdef		8024466	0					
ANR	8025427	Identifier	cs_base		8024466	1					
ANR	8025428	CompoundStatement		331:24:5876:5876	8024466	1					
ANR	8025429	ExpressionStatement	"sysbus_create_simple ( ""SUNW,CS4231"" , hwdef -> cs_base , slavio_irq [ 5 ] )"	337:8:5998:6094	8024466	0	True				
ANR	8025430	CallExpression	"sysbus_create_simple ( ""SUNW,CS4231"" , hwdef -> cs_base , slavio_irq [ 5 ] )"		8024466	0					
ANR	8025431	Callee	sysbus_create_simple		8024466	0					
ANR	8025432	Identifier	sysbus_create_simple		8024466	0					
ANR	8025433	ArgumentList	"""SUNW,CS4231"""		8024466	1					
ANR	8025434	Argument	"""SUNW,CS4231"""		8024466	0					
ANR	8025435	PrimaryExpression	"""SUNW,CS4231"""		8024466	0					
ANR	8025436	Argument	hwdef -> cs_base		8024466	1					
ANR	8025437	PtrMemberAccess	hwdef -> cs_base		8024466	0					
ANR	8025438	Identifier	hwdef		8024466	0					
ANR	8025439	Identifier	cs_base		8024466	1					
ANR	8025440	Argument	slavio_irq [ 5 ]		8024466	2					
ANR	8025441	ArrayIndexing	slavio_irq [ 5 ]		8024466	0					
ANR	8025442	Identifier	slavio_irq		8024466	0					
ANR	8025443	PrimaryExpression	5		8024466	1					
ANR	8025444	IfStatement	if ( hwdef -> dbri_base )		8024466	85					
ANR	8025445	Condition	hwdef -> dbri_base	345:8:6114:6129	8024466	0	True				
ANR	8025446	PtrMemberAccess	hwdef -> dbri_base		8024466	0					
ANR	8025447	Identifier	hwdef		8024466	0					
ANR	8025448	Identifier	dbri_base		8024466	1					
ANR	8025449	CompoundStatement		341:26:6021:6021	8024466	1					
ANR	8025450	ExpressionStatement	"empty_slot_init ( hwdef -> dbri_base + 0x1000 , 0x30 )"	351:8:6227:6273	8024466	0	True				
ANR	8025451	CallExpression	"empty_slot_init ( hwdef -> dbri_base + 0x1000 , 0x30 )"		8024466	0					
ANR	8025452	Callee	empty_slot_init		8024466	0					
ANR	8025453	Identifier	empty_slot_init		8024466	0					
ANR	8025454	ArgumentList	hwdef -> dbri_base + 0x1000		8024466	1					
ANR	8025455	Argument	hwdef -> dbri_base + 0x1000		8024466	0					
ANR	8025456	AdditiveExpression	hwdef -> dbri_base + 0x1000		8024466	0		+			
ANR	8025457	PtrMemberAccess	hwdef -> dbri_base		8024466	0					
ANR	8025458	Identifier	hwdef		8024466	0					
ANR	8025459	Identifier	dbri_base		8024466	1					
ANR	8025460	PrimaryExpression	0x1000		8024466	1					
ANR	8025461	Argument	0x30		8024466	1					
ANR	8025462	PrimaryExpression	0x30		8024466	0					
ANR	8025463	ExpressionStatement	"empty_slot_init ( hwdef -> dbri_base + 0x10000 , 0x100 )"	355:8:6309:6357	8024466	1	True				
ANR	8025464	CallExpression	"empty_slot_init ( hwdef -> dbri_base + 0x10000 , 0x100 )"		8024466	0					
ANR	8025465	Callee	empty_slot_init		8024466	0					
ANR	8025466	Identifier	empty_slot_init		8024466	0					
ANR	8025467	ArgumentList	hwdef -> dbri_base + 0x10000		8024466	1					
ANR	8025468	Argument	hwdef -> dbri_base + 0x10000		8024466	0					
ANR	8025469	AdditiveExpression	hwdef -> dbri_base + 0x10000		8024466	0		+			
ANR	8025470	PtrMemberAccess	hwdef -> dbri_base		8024466	0					
ANR	8025471	Identifier	hwdef		8024466	0					
ANR	8025472	Identifier	dbri_base		8024466	1					
ANR	8025473	PrimaryExpression	0x10000		8024466	1					
ANR	8025474	Argument	0x100		8024466	1					
ANR	8025475	PrimaryExpression	0x100		8024466	0					
ANR	8025476	IfStatement	if ( hwdef -> bpp_base )		8024466	86					
ANR	8025477	Condition	hwdef -> bpp_base	361:8:6377:6391	8024466	0	True				
ANR	8025478	PtrMemberAccess	hwdef -> bpp_base		8024466	0					
ANR	8025479	Identifier	hwdef		8024466	0					
ANR	8025480	Identifier	bpp_base		8024466	1					
ANR	8025481	CompoundStatement		357:25:6283:6283	8024466	1					
ANR	8025482	ExpressionStatement	"empty_slot_init ( hwdef -> bpp_base , 0x20 )"	365:8:6434:6472	8024466	0	True				
ANR	8025483	CallExpression	"empty_slot_init ( hwdef -> bpp_base , 0x20 )"		8024466	0					
ANR	8025484	Callee	empty_slot_init		8024466	0					
ANR	8025485	Identifier	empty_slot_init		8024466	0					
ANR	8025486	ArgumentList	hwdef -> bpp_base		8024466	1					
ANR	8025487	Argument	hwdef -> bpp_base		8024466	0					
ANR	8025488	PtrMemberAccess	hwdef -> bpp_base		8024466	0					
ANR	8025489	Identifier	hwdef		8024466	0					
ANR	8025490	Identifier	bpp_base		8024466	1					
ANR	8025491	Argument	0x20		8024466	1					
ANR	8025492	PrimaryExpression	0x20		8024466	0					
ANR	8025493	ExpressionStatement	"kernel_size = sun4m_load_kernel ( machine -> kernel_filename , machine -> initrd_filename , machine -> ram_size )"	371:4:6488:6664	8024466	87	True				
ANR	8025494	AssignmentExpression	"kernel_size = sun4m_load_kernel ( machine -> kernel_filename , machine -> initrd_filename , machine -> ram_size )"		8024466	0		=			
ANR	8025495	Identifier	kernel_size		8024466	0					
ANR	8025496	CallExpression	"sun4m_load_kernel ( machine -> kernel_filename , machine -> initrd_filename , machine -> ram_size )"		8024466	1					
ANR	8025497	Callee	sun4m_load_kernel		8024466	0					
ANR	8025498	Identifier	sun4m_load_kernel		8024466	0					
ANR	8025499	ArgumentList	machine -> kernel_filename		8024466	1					
ANR	8025500	Argument	machine -> kernel_filename		8024466	0					
ANR	8025501	PtrMemberAccess	machine -> kernel_filename		8024466	0					
ANR	8025502	Identifier	machine		8024466	0					
ANR	8025503	Identifier	kernel_filename		8024466	1					
ANR	8025504	Argument	machine -> initrd_filename		8024466	1					
ANR	8025505	PtrMemberAccess	machine -> initrd_filename		8024466	0					
ANR	8025506	Identifier	machine		8024466	0					
ANR	8025507	Identifier	initrd_filename		8024466	1					
ANR	8025508	Argument	machine -> ram_size		8024466	2					
ANR	8025509	PtrMemberAccess	machine -> ram_size		8024466	0					
ANR	8025510	Identifier	machine		8024466	0					
ANR	8025511	Identifier	ram_size		8024466	1					
ANR	8025512	ExpressionStatement	"nvram_init ( nvram , ( uint8_t * ) & nd_table [ 0 ] . macaddr , machine -> kernel_cmdline , machine -> boot_order , machine -> ram_size , kernel_size , graphic_width , graphic_height , graphic_depth , hwdef -> nvram_machine_id , ""Sun4m"" )"	379:4:6673:6929	8024466	88	True				
ANR	8025513	CallExpression	"nvram_init ( nvram , ( uint8_t * ) & nd_table [ 0 ] . macaddr , machine -> kernel_cmdline , machine -> boot_order , machine -> ram_size , kernel_size , graphic_width , graphic_height , graphic_depth , hwdef -> nvram_machine_id , ""Sun4m"" )"		8024466	0					
ANR	8025514	Callee	nvram_init		8024466	0					
ANR	8025515	Identifier	nvram_init		8024466	0					
ANR	8025516	ArgumentList	nvram		8024466	1					
ANR	8025517	Argument	nvram		8024466	0					
ANR	8025518	Identifier	nvram		8024466	0					
ANR	8025519	Argument	( uint8_t * ) & nd_table [ 0 ] . macaddr		8024466	1					
ANR	8025520	CastExpression	( uint8_t * ) & nd_table [ 0 ] . macaddr		8024466	0					
ANR	8025521	CastTarget	uint8_t *		8024466	0					
ANR	8025522	UnaryOperationExpression	& nd_table [ 0 ] . macaddr		8024466	1					
ANR	8025523	UnaryOperator	&		8024466	0					
ANR	8025524	MemberAccess	nd_table [ 0 ] . macaddr		8024466	1					
ANR	8025525	ArrayIndexing	nd_table [ 0 ]		8024466	0					
ANR	8025526	Identifier	nd_table		8024466	0					
ANR	8025527	PrimaryExpression	0		8024466	1					
ANR	8025528	Identifier	macaddr		8024466	1					
ANR	8025529	Argument	machine -> kernel_cmdline		8024466	2					
ANR	8025530	PtrMemberAccess	machine -> kernel_cmdline		8024466	0					
ANR	8025531	Identifier	machine		8024466	0					
ANR	8025532	Identifier	kernel_cmdline		8024466	1					
ANR	8025533	Argument	machine -> boot_order		8024466	3					
ANR	8025534	PtrMemberAccess	machine -> boot_order		8024466	0					
ANR	8025535	Identifier	machine		8024466	0					
ANR	8025536	Identifier	boot_order		8024466	1					
ANR	8025537	Argument	machine -> ram_size		8024466	4					
ANR	8025538	PtrMemberAccess	machine -> ram_size		8024466	0					
ANR	8025539	Identifier	machine		8024466	0					
ANR	8025540	Identifier	ram_size		8024466	1					
ANR	8025541	Argument	kernel_size		8024466	5					
ANR	8025542	Identifier	kernel_size		8024466	0					
ANR	8025543	Argument	graphic_width		8024466	6					
ANR	8025544	Identifier	graphic_width		8024466	0					
ANR	8025545	Argument	graphic_height		8024466	7					
ANR	8025546	Identifier	graphic_height		8024466	0					
ANR	8025547	Argument	graphic_depth		8024466	8					
ANR	8025548	Identifier	graphic_depth		8024466	0					
ANR	8025549	Argument	hwdef -> nvram_machine_id		8024466	9					
ANR	8025550	PtrMemberAccess	hwdef -> nvram_machine_id		8024466	0					
ANR	8025551	Identifier	hwdef		8024466	0					
ANR	8025552	Identifier	nvram_machine_id		8024466	1					
ANR	8025553	Argument	"""Sun4m"""		8024466	10					
ANR	8025554	PrimaryExpression	"""Sun4m"""		8024466	0					
ANR	8025555	IfStatement	if ( hwdef -> ecc_base )		8024466	89					
ANR	8025556	Condition	hwdef -> ecc_base	389:8:6942:6956	8024466	0	True				
ANR	8025557	PtrMemberAccess	hwdef -> ecc_base		8024466	0					
ANR	8025558	Identifier	hwdef		8024466	0					
ANR	8025559	Identifier	ecc_base		8024466	1					
ANR	8025560	ExpressionStatement	"ecc_init ( hwdef -> ecc_base , slavio_irq [ 28 ] , hwdef -> ecc_version )"	391:8:6968:7047	8024466	1	True				
ANR	8025561	CallExpression	"ecc_init ( hwdef -> ecc_base , slavio_irq [ 28 ] , hwdef -> ecc_version )"		8024466	0					
ANR	8025562	Callee	ecc_init		8024466	0					
ANR	8025563	Identifier	ecc_init		8024466	0					
ANR	8025564	ArgumentList	hwdef -> ecc_base		8024466	1					
ANR	8025565	Argument	hwdef -> ecc_base		8024466	0					
ANR	8025566	PtrMemberAccess	hwdef -> ecc_base		8024466	0					
ANR	8025567	Identifier	hwdef		8024466	0					
ANR	8025568	Identifier	ecc_base		8024466	1					
ANR	8025569	Argument	slavio_irq [ 28 ]		8024466	1					
ANR	8025570	ArrayIndexing	slavio_irq [ 28 ]		8024466	0					
ANR	8025571	Identifier	slavio_irq		8024466	0					
ANR	8025572	PrimaryExpression	28		8024466	1					
ANR	8025573	Argument	hwdef -> ecc_version		8024466	2					
ANR	8025574	PtrMemberAccess	hwdef -> ecc_version		8024466	0					
ANR	8025575	Identifier	hwdef		8024466	0					
ANR	8025576	Identifier	ecc_version		8024466	1					
ANR	8025577	ExpressionStatement	"fw_cfg = fw_cfg_init_mem ( CFG_ADDR , CFG_ADDR + 2 )"	397:4:7056:7104	8024466	90	True				
ANR	8025578	AssignmentExpression	"fw_cfg = fw_cfg_init_mem ( CFG_ADDR , CFG_ADDR + 2 )"		8024466	0		=			
ANR	8025579	Identifier	fw_cfg		8024466	0					
ANR	8025580	CallExpression	"fw_cfg_init_mem ( CFG_ADDR , CFG_ADDR + 2 )"		8024466	1					
ANR	8025581	Callee	fw_cfg_init_mem		8024466	0					
ANR	8025582	Identifier	fw_cfg_init_mem		8024466	0					
ANR	8025583	ArgumentList	CFG_ADDR		8024466	1					
ANR	8025584	Argument	CFG_ADDR		8024466	0					
ANR	8025585	Identifier	CFG_ADDR		8024466	0					
ANR	8025586	Argument	CFG_ADDR + 2		8024466	1					
ANR	8025587	AdditiveExpression	CFG_ADDR + 2		8024466	0		+			
ANR	8025588	Identifier	CFG_ADDR		8024466	0					
ANR	8025589	PrimaryExpression	2		8024466	1					
ANR	8025590	ExpressionStatement	"fw_cfg_add_i16 ( fw_cfg , FW_CFG_MAX_CPUS , ( uint16_t ) max_cpus )"	399:4:7111:7170	8024466	91	True				
ANR	8025591	CallExpression	"fw_cfg_add_i16 ( fw_cfg , FW_CFG_MAX_CPUS , ( uint16_t ) max_cpus )"		8024466	0					
ANR	8025592	Callee	fw_cfg_add_i16		8024466	0					
ANR	8025593	Identifier	fw_cfg_add_i16		8024466	0					
ANR	8025594	ArgumentList	fw_cfg		8024466	1					
ANR	8025595	Argument	fw_cfg		8024466	0					
ANR	8025596	Identifier	fw_cfg		8024466	0					
ANR	8025597	Argument	FW_CFG_MAX_CPUS		8024466	1					
ANR	8025598	Identifier	FW_CFG_MAX_CPUS		8024466	0					
ANR	8025599	Argument	( uint16_t ) max_cpus		8024466	2					
ANR	8025600	CastExpression	( uint16_t ) max_cpus		8024466	0					
ANR	8025601	CastTarget	uint16_t		8024466	0					
ANR	8025602	Identifier	max_cpus		8024466	1					
ANR	8025603	ExpressionStatement	"fw_cfg_add_i32 ( fw_cfg , FW_CFG_ID , 1 )"	401:4:7177:7213	8024466	92	True				
ANR	8025604	CallExpression	"fw_cfg_add_i32 ( fw_cfg , FW_CFG_ID , 1 )"		8024466	0					
ANR	8025605	Callee	fw_cfg_add_i32		8024466	0					
ANR	8025606	Identifier	fw_cfg_add_i32		8024466	0					
ANR	8025607	ArgumentList	fw_cfg		8024466	1					
ANR	8025608	Argument	fw_cfg		8024466	0					
ANR	8025609	Identifier	fw_cfg		8024466	0					
ANR	8025610	Argument	FW_CFG_ID		8024466	1					
ANR	8025611	Identifier	FW_CFG_ID		8024466	0					
ANR	8025612	Argument	1		8024466	2					
ANR	8025613	PrimaryExpression	1		8024466	0					
ANR	8025614	ExpressionStatement	"fw_cfg_add_i64 ( fw_cfg , FW_CFG_RAM_SIZE , ( uint64_t ) ram_size )"	403:4:7220:7279	8024466	93	True				
ANR	8025615	CallExpression	"fw_cfg_add_i64 ( fw_cfg , FW_CFG_RAM_SIZE , ( uint64_t ) ram_size )"		8024466	0					
ANR	8025616	Callee	fw_cfg_add_i64		8024466	0					
ANR	8025617	Identifier	fw_cfg_add_i64		8024466	0					
ANR	8025618	ArgumentList	fw_cfg		8024466	1					
ANR	8025619	Argument	fw_cfg		8024466	0					
ANR	8025620	Identifier	fw_cfg		8024466	0					
ANR	8025621	Argument	FW_CFG_RAM_SIZE		8024466	1					
ANR	8025622	Identifier	FW_CFG_RAM_SIZE		8024466	0					
ANR	8025623	Argument	( uint64_t ) ram_size		8024466	2					
ANR	8025624	CastExpression	( uint64_t ) ram_size		8024466	0					
ANR	8025625	CastTarget	uint64_t		8024466	0					
ANR	8025626	Identifier	ram_size		8024466	1					
ANR	8025627	ExpressionStatement	"fw_cfg_add_i16 ( fw_cfg , FW_CFG_MACHINE_ID , hwdef -> machine_id )"	405:4:7286:7346	8024466	94	True				
ANR	8025628	CallExpression	"fw_cfg_add_i16 ( fw_cfg , FW_CFG_MACHINE_ID , hwdef -> machine_id )"		8024466	0					
ANR	8025629	Callee	fw_cfg_add_i16		8024466	0					
ANR	8025630	Identifier	fw_cfg_add_i16		8024466	0					
ANR	8025631	ArgumentList	fw_cfg		8024466	1					
ANR	8025632	Argument	fw_cfg		8024466	0					
ANR	8025633	Identifier	fw_cfg		8024466	0					
ANR	8025634	Argument	FW_CFG_MACHINE_ID		8024466	1					
ANR	8025635	Identifier	FW_CFG_MACHINE_ID		8024466	0					
ANR	8025636	Argument	hwdef -> machine_id		8024466	2					
ANR	8025637	PtrMemberAccess	hwdef -> machine_id		8024466	0					
ANR	8025638	Identifier	hwdef		8024466	0					
ANR	8025639	Identifier	machine_id		8024466	1					
ANR	8025640	ExpressionStatement	"fw_cfg_add_i16 ( fw_cfg , FW_CFG_SUN4M_DEPTH , graphic_depth )"	407:4:7353:7410	8024466	95	True				
ANR	8025641	CallExpression	"fw_cfg_add_i16 ( fw_cfg , FW_CFG_SUN4M_DEPTH , graphic_depth )"		8024466	0					
ANR	8025642	Callee	fw_cfg_add_i16		8024466	0					
ANR	8025643	Identifier	fw_cfg_add_i16		8024466	0					
ANR	8025644	ArgumentList	fw_cfg		8024466	1					
ANR	8025645	Argument	fw_cfg		8024466	0					
ANR	8025646	Identifier	fw_cfg		8024466	0					
ANR	8025647	Argument	FW_CFG_SUN4M_DEPTH		8024466	1					
ANR	8025648	Identifier	FW_CFG_SUN4M_DEPTH		8024466	0					
ANR	8025649	Argument	graphic_depth		8024466	2					
ANR	8025650	Identifier	graphic_depth		8024466	0					
ANR	8025651	ExpressionStatement	"fw_cfg_add_i16 ( fw_cfg , FW_CFG_SUN4M_WIDTH , graphic_width )"	409:4:7417:7474	8024466	96	True				
ANR	8025652	CallExpression	"fw_cfg_add_i16 ( fw_cfg , FW_CFG_SUN4M_WIDTH , graphic_width )"		8024466	0					
ANR	8025653	Callee	fw_cfg_add_i16		8024466	0					
ANR	8025654	Identifier	fw_cfg_add_i16		8024466	0					
ANR	8025655	ArgumentList	fw_cfg		8024466	1					
ANR	8025656	Argument	fw_cfg		8024466	0					
ANR	8025657	Identifier	fw_cfg		8024466	0					
ANR	8025658	Argument	FW_CFG_SUN4M_WIDTH		8024466	1					
ANR	8025659	Identifier	FW_CFG_SUN4M_WIDTH		8024466	0					
ANR	8025660	Argument	graphic_width		8024466	2					
ANR	8025661	Identifier	graphic_width		8024466	0					
ANR	8025662	ExpressionStatement	"fw_cfg_add_i16 ( fw_cfg , FW_CFG_SUN4M_HEIGHT , graphic_height )"	411:4:7481:7540	8024466	97	True				
ANR	8025663	CallExpression	"fw_cfg_add_i16 ( fw_cfg , FW_CFG_SUN4M_HEIGHT , graphic_height )"		8024466	0					
ANR	8025664	Callee	fw_cfg_add_i16		8024466	0					
ANR	8025665	Identifier	fw_cfg_add_i16		8024466	0					
ANR	8025666	ArgumentList	fw_cfg		8024466	1					
ANR	8025667	Argument	fw_cfg		8024466	0					
ANR	8025668	Identifier	fw_cfg		8024466	0					
ANR	8025669	Argument	FW_CFG_SUN4M_HEIGHT		8024466	1					
ANR	8025670	Identifier	FW_CFG_SUN4M_HEIGHT		8024466	0					
ANR	8025671	Argument	graphic_height		8024466	2					
ANR	8025672	Identifier	graphic_height		8024466	0					
ANR	8025673	ExpressionStatement	"fw_cfg_add_i32 ( fw_cfg , FW_CFG_KERNEL_ADDR , KERNEL_LOAD_ADDR )"	413:4:7547:7607	8024466	98	True				
ANR	8025674	CallExpression	"fw_cfg_add_i32 ( fw_cfg , FW_CFG_KERNEL_ADDR , KERNEL_LOAD_ADDR )"		8024466	0					
ANR	8025675	Callee	fw_cfg_add_i32		8024466	0					
ANR	8025676	Identifier	fw_cfg_add_i32		8024466	0					
ANR	8025677	ArgumentList	fw_cfg		8024466	1					
ANR	8025678	Argument	fw_cfg		8024466	0					
ANR	8025679	Identifier	fw_cfg		8024466	0					
ANR	8025680	Argument	FW_CFG_KERNEL_ADDR		8024466	1					
ANR	8025681	Identifier	FW_CFG_KERNEL_ADDR		8024466	0					
ANR	8025682	Argument	KERNEL_LOAD_ADDR		8024466	2					
ANR	8025683	Identifier	KERNEL_LOAD_ADDR		8024466	0					
ANR	8025684	ExpressionStatement	"fw_cfg_add_i32 ( fw_cfg , FW_CFG_KERNEL_SIZE , kernel_size )"	415:4:7614:7669	8024466	99	True				
ANR	8025685	CallExpression	"fw_cfg_add_i32 ( fw_cfg , FW_CFG_KERNEL_SIZE , kernel_size )"		8024466	0					
ANR	8025686	Callee	fw_cfg_add_i32		8024466	0					
ANR	8025687	Identifier	fw_cfg_add_i32		8024466	0					
ANR	8025688	ArgumentList	fw_cfg		8024466	1					
ANR	8025689	Argument	fw_cfg		8024466	0					
ANR	8025690	Identifier	fw_cfg		8024466	0					
ANR	8025691	Argument	FW_CFG_KERNEL_SIZE		8024466	1					
ANR	8025692	Identifier	FW_CFG_KERNEL_SIZE		8024466	0					
ANR	8025693	Argument	kernel_size		8024466	2					
ANR	8025694	Identifier	kernel_size		8024466	0					
ANR	8025695	IfStatement	if ( machine -> kernel_cmdline )		8024466	100					
ANR	8025696	Condition	machine -> kernel_cmdline	417:8:7680:7702	8024466	0	True				
ANR	8025697	PtrMemberAccess	machine -> kernel_cmdline		8024466	0					
ANR	8025698	Identifier	machine		8024466	0					
ANR	8025699	Identifier	kernel_cmdline		8024466	1					
ANR	8025700	CompoundStatement		413:33:7594:7594	8024466	1					
ANR	8025701	ExpressionStatement	"fw_cfg_add_i32 ( fw_cfg , FW_CFG_KERNEL_CMDLINE , CMDLINE_ADDR )"	419:8:7716:7775	8024466	0	True				
ANR	8025702	CallExpression	"fw_cfg_add_i32 ( fw_cfg , FW_CFG_KERNEL_CMDLINE , CMDLINE_ADDR )"		8024466	0					
ANR	8025703	Callee	fw_cfg_add_i32		8024466	0					
ANR	8025704	Identifier	fw_cfg_add_i32		8024466	0					
ANR	8025705	ArgumentList	fw_cfg		8024466	1					
ANR	8025706	Argument	fw_cfg		8024466	0					
ANR	8025707	Identifier	fw_cfg		8024466	0					
ANR	8025708	Argument	FW_CFG_KERNEL_CMDLINE		8024466	1					
ANR	8025709	Identifier	FW_CFG_KERNEL_CMDLINE		8024466	0					
ANR	8025710	Argument	CMDLINE_ADDR		8024466	2					
ANR	8025711	Identifier	CMDLINE_ADDR		8024466	0					
ANR	8025712	ExpressionStatement	"pstrcpy_targphys ( ""cmdline"" , CMDLINE_ADDR , TARGET_PAGE_SIZE , machine -> kernel_cmdline )"	421:8:7786:7896	8024466	1	True				
ANR	8025713	CallExpression	"pstrcpy_targphys ( ""cmdline"" , CMDLINE_ADDR , TARGET_PAGE_SIZE , machine -> kernel_cmdline )"		8024466	0					
ANR	8025714	Callee	pstrcpy_targphys		8024466	0					
ANR	8025715	Identifier	pstrcpy_targphys		8024466	0					
ANR	8025716	ArgumentList	"""cmdline"""		8024466	1					
ANR	8025717	Argument	"""cmdline"""		8024466	0					
ANR	8025718	PrimaryExpression	"""cmdline"""		8024466	0					
ANR	8025719	Argument	CMDLINE_ADDR		8024466	1					
ANR	8025720	Identifier	CMDLINE_ADDR		8024466	0					
ANR	8025721	Argument	TARGET_PAGE_SIZE		8024466	2					
ANR	8025722	Identifier	TARGET_PAGE_SIZE		8024466	0					
ANR	8025723	Argument	machine -> kernel_cmdline		8024466	3					
ANR	8025724	PtrMemberAccess	machine -> kernel_cmdline		8024466	0					
ANR	8025725	Identifier	machine		8024466	0					
ANR	8025726	Identifier	kernel_cmdline		8024466	1					
ANR	8025727	ExpressionStatement	"fw_cfg_add_string ( fw_cfg , FW_CFG_CMDLINE_DATA , machine -> kernel_cmdline )"	425:8:7907:7978	8024466	2	True				
ANR	8025728	CallExpression	"fw_cfg_add_string ( fw_cfg , FW_CFG_CMDLINE_DATA , machine -> kernel_cmdline )"		8024466	0					
ANR	8025729	Callee	fw_cfg_add_string		8024466	0					
ANR	8025730	Identifier	fw_cfg_add_string		8024466	0					
ANR	8025731	ArgumentList	fw_cfg		8024466	1					
ANR	8025732	Argument	fw_cfg		8024466	0					
ANR	8025733	Identifier	fw_cfg		8024466	0					
ANR	8025734	Argument	FW_CFG_CMDLINE_DATA		8024466	1					
ANR	8025735	Identifier	FW_CFG_CMDLINE_DATA		8024466	0					
ANR	8025736	Argument	machine -> kernel_cmdline		8024466	2					
ANR	8025737	PtrMemberAccess	machine -> kernel_cmdline		8024466	0					
ANR	8025738	Identifier	machine		8024466	0					
ANR	8025739	Identifier	kernel_cmdline		8024466	1					
ANR	8025740	ExpressionStatement	"fw_cfg_add_i32 ( fw_cfg , FW_CFG_CMDLINE_SIZE , strlen ( machine -> kernel_cmdline ) + 1 )"	427:8:7989:8093	8024466	3	True				
ANR	8025741	CallExpression	"fw_cfg_add_i32 ( fw_cfg , FW_CFG_CMDLINE_SIZE , strlen ( machine -> kernel_cmdline ) + 1 )"		8024466	0					
ANR	8025742	Callee	fw_cfg_add_i32		8024466	0					
ANR	8025743	Identifier	fw_cfg_add_i32		8024466	0					
ANR	8025744	ArgumentList	fw_cfg		8024466	1					
ANR	8025745	Argument	fw_cfg		8024466	0					
ANR	8025746	Identifier	fw_cfg		8024466	0					
ANR	8025747	Argument	FW_CFG_CMDLINE_SIZE		8024466	1					
ANR	8025748	Identifier	FW_CFG_CMDLINE_SIZE		8024466	0					
ANR	8025749	Argument	strlen ( machine -> kernel_cmdline ) + 1		8024466	2					
ANR	8025750	AdditiveExpression	strlen ( machine -> kernel_cmdline ) + 1		8024466	0		+			
ANR	8025751	CallExpression	strlen ( machine -> kernel_cmdline )		8024466	0					
ANR	8025752	Callee	strlen		8024466	0					
ANR	8025753	Identifier	strlen		8024466	0					
ANR	8025754	ArgumentList	machine -> kernel_cmdline		8024466	1					
ANR	8025755	Argument	machine -> kernel_cmdline		8024466	0					
ANR	8025756	PtrMemberAccess	machine -> kernel_cmdline		8024466	0					
ANR	8025757	Identifier	machine		8024466	0					
ANR	8025758	Identifier	kernel_cmdline		8024466	1					
ANR	8025759	PrimaryExpression	1		8024466	1					
ANR	8025760	ElseStatement	else		8024466	0					
ANR	8025761	CompoundStatement		427:11:7996:7996	8024466	0					
ANR	8025762	ExpressionStatement	"fw_cfg_add_i32 ( fw_cfg , FW_CFG_KERNEL_CMDLINE , 0 )"	433:8:8118:8166	8024466	0	True				
ANR	8025763	CallExpression	"fw_cfg_add_i32 ( fw_cfg , FW_CFG_KERNEL_CMDLINE , 0 )"		8024466	0					
ANR	8025764	Callee	fw_cfg_add_i32		8024466	0					
ANR	8025765	Identifier	fw_cfg_add_i32		8024466	0					
ANR	8025766	ArgumentList	fw_cfg		8024466	1					
ANR	8025767	Argument	fw_cfg		8024466	0					
ANR	8025768	Identifier	fw_cfg		8024466	0					
ANR	8025769	Argument	FW_CFG_KERNEL_CMDLINE		8024466	1					
ANR	8025770	Identifier	FW_CFG_KERNEL_CMDLINE		8024466	0					
ANR	8025771	Argument	0		8024466	2					
ANR	8025772	PrimaryExpression	0		8024466	0					
ANR	8025773	ExpressionStatement	"fw_cfg_add_i32 ( fw_cfg , FW_CFG_CMDLINE_SIZE , 0 )"	435:8:8177:8223	8024466	1	True				
ANR	8025774	CallExpression	"fw_cfg_add_i32 ( fw_cfg , FW_CFG_CMDLINE_SIZE , 0 )"		8024466	0					
ANR	8025775	Callee	fw_cfg_add_i32		8024466	0					
ANR	8025776	Identifier	fw_cfg_add_i32		8024466	0					
ANR	8025777	ArgumentList	fw_cfg		8024466	1					
ANR	8025778	Argument	fw_cfg		8024466	0					
ANR	8025779	Identifier	fw_cfg		8024466	0					
ANR	8025780	Argument	FW_CFG_CMDLINE_SIZE		8024466	1					
ANR	8025781	Identifier	FW_CFG_CMDLINE_SIZE		8024466	0					
ANR	8025782	Argument	0		8024466	2					
ANR	8025783	PrimaryExpression	0		8024466	0					
ANR	8025784	ExpressionStatement	"fw_cfg_add_i32 ( fw_cfg , FW_CFG_INITRD_ADDR , INITRD_LOAD_ADDR )"	439:4:8237:8297	8024466	101	True				
ANR	8025785	CallExpression	"fw_cfg_add_i32 ( fw_cfg , FW_CFG_INITRD_ADDR , INITRD_LOAD_ADDR )"		8024466	0					
ANR	8025786	Callee	fw_cfg_add_i32		8024466	0					
ANR	8025787	Identifier	fw_cfg_add_i32		8024466	0					
ANR	8025788	ArgumentList	fw_cfg		8024466	1					
ANR	8025789	Argument	fw_cfg		8024466	0					
ANR	8025790	Identifier	fw_cfg		8024466	0					
ANR	8025791	Argument	FW_CFG_INITRD_ADDR		8024466	1					
ANR	8025792	Identifier	FW_CFG_INITRD_ADDR		8024466	0					
ANR	8025793	Argument	INITRD_LOAD_ADDR		8024466	2					
ANR	8025794	Identifier	INITRD_LOAD_ADDR		8024466	0					
ANR	8025795	ExpressionStatement	"fw_cfg_add_i32 ( fw_cfg , FW_CFG_INITRD_SIZE , 0 )"	441:4:8304:8349	8024466	102	True				
ANR	8025796	CallExpression	"fw_cfg_add_i32 ( fw_cfg , FW_CFG_INITRD_SIZE , 0 )"		8024466	0					
ANR	8025797	Callee	fw_cfg_add_i32		8024466	0					
ANR	8025798	Identifier	fw_cfg_add_i32		8024466	0					
ANR	8025799	ArgumentList	fw_cfg		8024466	1					
ANR	8025800	Argument	fw_cfg		8024466	0					
ANR	8025801	Identifier	fw_cfg		8024466	0					
ANR	8025802	Argument	FW_CFG_INITRD_SIZE		8024466	1					
ANR	8025803	Identifier	FW_CFG_INITRD_SIZE		8024466	0					
ANR	8025804	Argument	0		8024466	2					
ANR	8025805	PrimaryExpression	0		8024466	0					
ANR	8025806	ExpressionStatement	"fw_cfg_add_i16 ( fw_cfg , FW_CFG_BOOT_DEVICE , machine -> boot_order [ 0 ] )"	443:4:8368:8434	8024466	103	True				
ANR	8025807	CallExpression	"fw_cfg_add_i16 ( fw_cfg , FW_CFG_BOOT_DEVICE , machine -> boot_order [ 0 ] )"		8024466	0					
ANR	8025808	Callee	fw_cfg_add_i16		8024466	0					
ANR	8025809	Identifier	fw_cfg_add_i16		8024466	0					
ANR	8025810	ArgumentList	fw_cfg		8024466	1					
ANR	8025811	Argument	fw_cfg		8024466	0					
ANR	8025812	Identifier	fw_cfg		8024466	0					
ANR	8025813	Argument	FW_CFG_BOOT_DEVICE		8024466	1					
ANR	8025814	Identifier	FW_CFG_BOOT_DEVICE		8024466	0					
ANR	8025815	Argument	machine -> boot_order [ 0 ]		8024466	2					
ANR	8025816	ArrayIndexing	machine -> boot_order [ 0 ]		8024466	0					
ANR	8025817	PtrMemberAccess	machine -> boot_order		8024466	0					
ANR	8025818	Identifier	machine		8024466	0					
ANR	8025819	Identifier	boot_order		8024466	1					
ANR	8025820	PrimaryExpression	0		8024466	1					
ANR	8025821	ExpressionStatement	"qemu_register_boot_set ( fw_cfg_boot_set , fw_cfg )"	445:4:8441:8488	8024466	104	True				
ANR	8025822	CallExpression	"qemu_register_boot_set ( fw_cfg_boot_set , fw_cfg )"		8024466	0					
ANR	8025823	Callee	qemu_register_boot_set		8024466	0					
ANR	8025824	Identifier	qemu_register_boot_set		8024466	0					
ANR	8025825	ArgumentList	fw_cfg_boot_set		8024466	1					
ANR	8025826	Argument	fw_cfg_boot_set		8024466	0					
ANR	8025827	Identifier	fw_cfg_boot_set		8024466	0					
ANR	8025828	Argument	fw_cfg		8024466	1					
ANR	8025829	Identifier	fw_cfg		8024466	0					
ANR	8025830	ReturnType	static void		8024466	1					
ANR	8025831	Identifier	sun4m_hw_init		8024466	2					
ANR	8025832	ParameterList	"const struct sun4m_hwdef * hwdef , MachineState * machine"		8024466	3					
ANR	8025833	Parameter	const struct sun4m_hwdef * hwdef	1:26:26:56	8024466	0	True				
ANR	8025834	ParameterType	const struct sun4m_hwdef *		8024466	0					
ANR	8025835	Identifier	hwdef		8024466	1					
ANR	8025836	Parameter	MachineState * machine	3:26:86:106	8024466	1	True				
ANR	8025837	ParameterType	MachineState *		8024466	0					
ANR	8025838	Identifier	machine		8024466	1					
ANR	8025839	CFGEntryNode	ENTRY		8024466		True				
ANR	8025840	CFGExitNode	EXIT		8024466		True				
ANR	8025841	Symbol	VGA_CG3		8024466						
ANR	8025842	Symbol	* cpu_irqs		8024466						
ANR	8025843	Symbol	graphic_width		8024466						
ANR	8025844	Symbol	hwdef -> slavio_base		8024466						
ANR	8025845	Symbol	hwdef -> counter_base		8024466						
ANR	8025846	Symbol	drive_get_max_bus		8024466						
ANR	8025847	Symbol	CMDLINE_ADDR		8024466						
ANR	8025848	Symbol	machine -> kernel_cmdline		8024466						
ANR	8025849	Symbol	nvram		8024466						
ANR	8025850	Symbol	iommu		8024466						
ANR	8025851	Symbol	FW_CFG_CMDLINE_DATA		8024466						
ANR	8025852	Symbol	hwdef -> vsimm		8024466						
ANR	8025853	Symbol	ledma_irq		8024466						
ANR	8025854	Symbol	esp_reset		8024466						
ANR	8025855	Symbol	dummy_cpu_set_irq		8024466						
ANR	8025856	Symbol	TARGET_PAGE_SIZE		8024466						
ANR	8025857	Symbol	hwdef -> machine_id		8024466						
ANR	8025858	Symbol	* slavio_irq		8024466						
ANR	8025859	Symbol	m48t59_init		8024466						
ANR	8025860	Symbol	fw_cfg		8024466						
ANR	8025861	Symbol	& fdc_tc		8024466						
ANR	8025862	Symbol	FW_CFG_KERNEL_CMDLINE		8024466						
ANR	8025863	Symbol	fdc_tc		8024466						
ANR	8025864	Symbol	hwdef -> default_cpu_model		8024466						
ANR	8025865	Symbol	sparc32_dma_init		8024466						
ANR	8025866	Symbol	graphic_depth		8024466						
ANR	8025867	Symbol	hwdef -> max_mem		8024466						
ANR	8025868	Symbol	FW_CFG_CMDLINE_SIZE		8024466						
ANR	8025869	Symbol	hwdef -> le_base		8024466						
ANR	8025870	Symbol	& esp_reset		8024466						
ANR	8025871	Symbol	hwdef -> fd_base		8024466						
ANR	8025872	Symbol	MAX_CPUS		8024466						
ANR	8025873	Symbol	FW_CFG_MAX_CPUS		8024466						
ANR	8025874	Symbol	hwdef -> iommu_version		8024466						
ANR	8025875	Symbol	hwdef -> tcx_base		8024466						
ANR	8025876	Symbol	cpu_model		8024466						
ANR	8025877	Symbol	fw_cfg_boot_set		8024466						
ANR	8025878	Symbol	hwdef -> dma_base		8024466						
ANR	8025879	Symbol	nd_table		8024466						
ANR	8025880	Symbol	FW_CFG_KERNEL_SIZE		8024466						
ANR	8025881	Symbol	slavio_irq		8024466						
ANR	8025882	Symbol	hwdef -> nvram_base		8024466						
ANR	8025883	Symbol	hwdef -> ecc_base		8024466						
ANR	8025884	Symbol	hwdef		8024466						
ANR	8025885	Symbol	* fd		8024466						
ANR	8025886	Symbol	hwdef -> aux1_base		8024466						
ANR	8025887	Symbol	CFG_ADDR		8024466						
ANR	8025888	Symbol	i		8024466						
ANR	8025889	Symbol	machine -> cpu_model		8024466						
ANR	8025890	Symbol	qemu_allocate_irqs		8024466						
ANR	8025891	Symbol	hwdef -> dbri_base		8024466						
ANR	8025892	Symbol	espdma_memory_write		8024466						
ANR	8025893	Symbol	espdma_irq		8024466						
ANR	8025894	Symbol	* hwdef		8024466						
ANR	8025895	Symbol	ram_size		8024466						
ANR	8025896	Symbol	machine		8024466						
ANR	8025897	Symbol	machine -> boot_order		8024466						
ANR	8025898	Symbol	FW_CFG_BOOT_DEVICE		8024466						
ANR	8025899	Symbol	serial_hds		8024466						
ANR	8025900	Symbol	sun4m_load_kernel		8024466						
ANR	8025901	Symbol	hwdef -> bpp_base		8024466						
ANR	8025902	Symbol	hwdef -> apc_base		8024466						
ANR	8025903	Symbol	espdma_memory_read		8024466						
ANR	8025904	Symbol	dma_enable		8024466						
ANR	8025905	Symbol	hwdef -> nvram_machine_id		8024466						
ANR	8025906	Symbol	& nd_table [ 0 ] . macaddr		8024466						
ANR	8025907	Symbol	max_cpus		8024466						
ANR	8025908	Symbol	strlen		8024466						
ANR	8025909	Symbol	machine -> initrd_filename		8024466						
ANR	8025910	Symbol	slavio_intctl		8024466						
ANR	8025911	Symbol	hwdef -> afx_base		8024466						
ANR	8025912	Symbol	cpu_halt		8024466						
ANR	8025913	Symbol	* * hwdef		8024466						
ANR	8025914	Symbol	hwdef -> iommu_base		8024466						
ANR	8025915	Symbol	kernel_size		8024466						
ANR	8025916	Symbol	IF_FLOPPY		8024466						
ANR	8025917	Symbol	* * machine		8024466						
ANR	8025918	Symbol	MAX_VSIMMS		8024466						
ANR	8025919	Symbol	smp_cpus		8024466						
ANR	8025920	Symbol	* slavio_cpu_irq		8024466						
ANR	8025921	Symbol	fw_cfg_init_mem		8024466						
ANR	8025922	Symbol	cpu_irqs		8024466						
ANR	8025923	Symbol	NULL		8024466						
ANR	8025924	Symbol	FW_CFG_MACHINE_ID		8024466						
ANR	8025925	Symbol	iommu_init		8024466						
ANR	8025926	Symbol	hwdef -> iommu_pad_base		8024466						
ANR	8025927	Symbol	drive_get		8024466						
ANR	8025928	Symbol	hwdef -> idreg_base		8024466						
ANR	8025929	Symbol	vga_interface_type		8024466						
ANR	8025930	Symbol	DT_NOGRAPHIC		8024466						
ANR	8025931	Symbol	KERNEL_LOAD_ADDR		8024466						
ANR	8025932	Symbol	stderr		8024466						
ANR	8025933	Symbol	FW_CFG_SUN4M_DEPTH		8024466						
ANR	8025934	Symbol	FW_CFG_KERNEL_ADDR		8024466						
ANR	8025935	Symbol	cpu_halt_signal		8024466						
ANR	8025936	Symbol	hwdef -> esp_base		8024466						
ANR	8025937	Symbol	"* qemu_allocate_irqs ( dummy_fdc_tc , NULL , 1 )"		8024466						
ANR	8025938	Symbol	& espdma_irq		8024466						
ANR	8025939	Symbol	fd		8024466						
ANR	8025940	Symbol	FW_CFG_SUN4M_WIDTH		8024466						
ANR	8025941	Symbol	* machine		8024466						
ANR	8025942	Symbol	slavio_cpu_irq		8024466						
ANR	8025943	Symbol	qdev_get_gpio_in		8024466						
ANR	8025944	Symbol	graphic_height		8024466						
ANR	8025945	Symbol	* hwdef -> vsimm		8024466						
ANR	8025946	Symbol	FW_CFG_INITRD_SIZE		8024466						
ANR	8025947	Symbol	machine -> ram_size		8024466						
ANR	8025948	Symbol	* nd_table		8024466						
ANR	8025949	Symbol	hwdef -> ms_kb_base		8024466						
ANR	8025950	Symbol	FW_CFG_RAM_SIZE		8024466						
ANR	8025951	Symbol	display_type		8024466						
ANR	8025952	Symbol	INITRD_LOAD_ADDR		8024466						
ANR	8025953	Symbol	FW_CFG_INITRD_ADDR		8024466						
ANR	8025954	Symbol	bios_name		8024466						
ANR	8025955	Symbol	hwdef -> aux2_base		8024466						
ANR	8025956	Symbol	espdma		8024466						
ANR	8025957	Symbol	* cpu_halt		8024466						
ANR	8025958	Symbol	machine -> kernel_filename		8024466						
ANR	8025959	Symbol	hwdef -> vsimm [ i ] . reg_base		8024466						
ANR	8025960	Symbol	hwdef -> cs_base		8024466						
ANR	8025961	Symbol	FW_CFG_ID		8024466						
ANR	8025962	Symbol	hwdef -> iommu_pad_len		8024466						
ANR	8025963	Symbol	MAX_PILS		8024466						
ANR	8025964	Symbol	ESCC_CLOCK		8024466						
ANR	8025965	Symbol	num_vsimms		8024466						
ANR	8025966	Symbol	* machine -> boot_order		8024466						
ANR	8025967	Symbol	hwdef -> sx_base		8024466						
ANR	8025968	Symbol	FW_CFG_SUN4M_HEIGHT		8024466						
ANR	8025969	Symbol	dummy_fdc_tc		8024466						
ANR	8025970	Symbol	* serial_hds		8024466						
ANR	8025971	Symbol	hwdef -> serial_base		8024466						
ANR	8025972	Symbol	hwdef -> ecc_version		8024466						
ANR	8025973	Symbol	* i		8024466						
ANR	8025974	Symbol	IF_SCSI		8024466						
ANR	8025975	Symbol	& dma_enable		8024466						
ANR	8025976	Symbol	ledma		8024466						
ANR	8025977	Symbol	* qemu_allocate_irqs		8024466						
