command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6960298	File	/home/p4ultr4n/workplace/ReVeal/raw_code/qemu_chr_open_spice_vmc_0.c								
ANR	6960299	Function	qemu_chr_open_spice_vmc	1:0:0:754							
ANR	6960300	FunctionDef	"qemu_chr_open_spice_vmc (const char * id , ChardevBackend * backend , ChardevReturn * ret , Error * * errp)"		6960299	0					
ANR	6960301	CompoundStatement		9:0:271:754	6960299	0					
ANR	6960302	IdentifierDeclStatement	const char * type = backend -> u . spicevmc -> type ;	11:4:278:322	6960299	0	True				
ANR	6960303	IdentifierDecl	* type = backend -> u . spicevmc -> type		6960299	0					
ANR	6960304	IdentifierDeclType	const char *		6960299	0					
ANR	6960305	Identifier	type		6960299	1					
ANR	6960306	AssignmentExpression	* type = backend -> u . spicevmc -> type		6960299	2		=			
ANR	6960307	Identifier	type		6960299	0					
ANR	6960308	PtrMemberAccess	backend -> u . spicevmc -> type		6960299	1					
ANR	6960309	MemberAccess	backend -> u . spicevmc		6960299	0					
ANR	6960310	PtrMemberAccess	backend -> u		6960299	0					
ANR	6960311	Identifier	backend		6960299	0					
ANR	6960312	Identifier	u		6960299	1					
ANR	6960313	Identifier	spicevmc		6960299	1					
ANR	6960314	Identifier	type		6960299	1					
ANR	6960315	IdentifierDeclStatement	const char * * psubtype = spice_server_char_device_recognized_subtypes ( ) ;	13:4:329:399	6960299	1	True				
ANR	6960316	IdentifierDecl	* * psubtype = spice_server_char_device_recognized_subtypes ( )		6960299	0					
ANR	6960317	IdentifierDeclType	const char * *		6960299	0					
ANR	6960318	Identifier	psubtype		6960299	1					
ANR	6960319	AssignmentExpression	* * psubtype = spice_server_char_device_recognized_subtypes ( )		6960299	2		=			
ANR	6960320	Identifier	psubtype		6960299	0					
ANR	6960321	CallExpression	spice_server_char_device_recognized_subtypes ( )		6960299	1					
ANR	6960322	Callee	spice_server_char_device_recognized_subtypes		6960299	0					
ANR	6960323	Identifier	spice_server_char_device_recognized_subtypes		6960299	0					
ANR	6960324	ArgumentList			6960299	1					
ANR	6960325	ForStatement	for ( ; * psubtype != NULL ; ++ psubtype )		6960299	2					
ANR	6960326	Condition	* psubtype != NULL	17:11:415:431	6960299	0	True				
ANR	6960327	EqualityExpression	* psubtype != NULL		6960299	0		!=			
ANR	6960328	UnaryOperationExpression	* psubtype		6960299	0					
ANR	6960329	UnaryOperator	*		6960299	0					
ANR	6960330	Identifier	psubtype		6960299	1					
ANR	6960331	Identifier	NULL		6960299	1					
ANR	6960332	UnaryExpression	++ psubtype	17:30:434:443	6960299	1	True				
ANR	6960333	IncDec	++		6960299	0					
ANR	6960334	Identifier	psubtype		6960299	1					
ANR	6960335	CompoundStatement		9:42:174:174	6960299	2					
ANR	6960336	IfStatement	"if ( strcmp ( type , * psubtype ) == 0 )"		6960299	0					
ANR	6960337	Condition	"strcmp ( type , * psubtype ) == 0"	19:12:461:488	6960299	0	True				
ANR	6960338	EqualityExpression	"strcmp ( type , * psubtype ) == 0"		6960299	0		==			
ANR	6960339	CallExpression	"strcmp ( type , * psubtype )"		6960299	0					
ANR	6960340	Callee	strcmp		6960299	0					
ANR	6960341	Identifier	strcmp		6960299	0					
ANR	6960342	ArgumentList	type		6960299	1					
ANR	6960343	Argument	type		6960299	0					
ANR	6960344	Identifier	type		6960299	0					
ANR	6960345	Argument	* psubtype		6960299	1					
ANR	6960346	UnaryOperationExpression	* psubtype		6960299	0					
ANR	6960347	UnaryOperator	*		6960299	0					
ANR	6960348	Identifier	psubtype		6960299	1					
ANR	6960349	PrimaryExpression	0		6960299	1					
ANR	6960350	CompoundStatement		11:42:219:219	6960299	1					
ANR	6960351	BreakStatement	break ;	21:12:506:511	6960299	0	True				
ANR	6960352	IfStatement	if ( * psubtype == NULL )		6960299	3					
ANR	6960353	Condition	* psubtype == NULL	27:8:540:556	6960299	0	True				
ANR	6960354	EqualityExpression	* psubtype == NULL		6960299	0		==			
ANR	6960355	UnaryOperationExpression	* psubtype		6960299	0					
ANR	6960356	UnaryOperator	*		6960299	0					
ANR	6960357	Identifier	psubtype		6960299	1					
ANR	6960358	Identifier	NULL		6960299	1					
ANR	6960359	CompoundStatement		19:27:287:287	6960299	1					
ANR	6960360	ExpressionStatement	"fprintf ( stderr , ""spice-qemu-char: unsupported type: %s\\n"" , type )"	29:8:570:634	6960299	0	True				
ANR	6960361	CallExpression	"fprintf ( stderr , ""spice-qemu-char: unsupported type: %s\\n"" , type )"		6960299	0					
ANR	6960362	Callee	fprintf		6960299	0					
ANR	6960363	Identifier	fprintf		6960299	0					
ANR	6960364	ArgumentList	stderr		6960299	1					
ANR	6960365	Argument	stderr		6960299	0					
ANR	6960366	Identifier	stderr		6960299	0					
ANR	6960367	Argument	"""spice-qemu-char: unsupported type: %s\\n"""		6960299	1					
ANR	6960368	PrimaryExpression	"""spice-qemu-char: unsupported type: %s\\n"""		6960299	0					
ANR	6960369	Argument	type		6960299	2					
ANR	6960370	Identifier	type		6960299	0					
ANR	6960371	ExpressionStatement	print_allowed_subtypes ( )	31:8:645:669	6960299	1	True				
ANR	6960372	CallExpression	print_allowed_subtypes ( )		6960299	0					
ANR	6960373	Callee	print_allowed_subtypes		6960299	0					
ANR	6960374	Identifier	print_allowed_subtypes		6960299	0					
ANR	6960375	ArgumentList			6960299	1					
ANR	6960376	ReturnStatement	return NULL ;	33:8:680:691	6960299	2	True				
ANR	6960377	Identifier	NULL		6960299	0					
ANR	6960378	ReturnStatement	"return chr_open ( type , spice_vmc_set_fe_open ) ;"	39:4:707:751	6960299	4	True				
ANR	6960379	CallExpression	"chr_open ( type , spice_vmc_set_fe_open )"		6960299	0					
ANR	6960380	Callee	chr_open		6960299	0					
ANR	6960381	Identifier	chr_open		6960299	0					
ANR	6960382	ArgumentList	type		6960299	1					
ANR	6960383	Argument	type		6960299	0					
ANR	6960384	Identifier	type		6960299	0					
ANR	6960385	Argument	spice_vmc_set_fe_open		6960299	1					
ANR	6960386	Identifier	spice_vmc_set_fe_open		6960299	0					
ANR	6960387	ReturnType	static CharDriverState *		6960299	1					
ANR	6960388	Identifier	qemu_chr_open_spice_vmc		6960299	2					
ANR	6960389	ParameterList	"const char * id , ChardevBackend * backend , ChardevReturn * ret , Error * * errp"		6960299	3					
ANR	6960390	Parameter	const char * id	1:48:48:61	6960299	0	True				
ANR	6960391	ParameterType	const char *		6960299	0					
ANR	6960392	Identifier	id		6960299	1					
ANR	6960393	Parameter	ChardevBackend * backend	3:48:113:135	6960299	1	True				
ANR	6960394	ParameterType	ChardevBackend *		6960299	0					
ANR	6960395	Identifier	backend		6960299	1					
ANR	6960396	Parameter	ChardevReturn * ret	5:48:187:204	6960299	2	True				
ANR	6960397	ParameterType	ChardevReturn *		6960299	0					
ANR	6960398	Identifier	ret		6960299	1					
ANR	6960399	Parameter	Error * * errp	7:48:256:267	6960299	3	True				
ANR	6960400	ParameterType	Error * *		6960299	0					
ANR	6960401	Identifier	errp		6960299	1					
ANR	6960402	CFGEntryNode	ENTRY		6960299		True				
ANR	6960403	CFGExitNode	EXIT		6960299		True				
ANR	6960404	Symbol	ret		6960299						
ANR	6960405	Symbol	strcmp		6960299						
ANR	6960406	Symbol	NULL		6960299						
ANR	6960407	Symbol	errp		6960299						
ANR	6960408	Symbol	spice_server_char_device_recognized_subtypes		6960299						
ANR	6960409	Symbol	spice_vmc_set_fe_open		6960299						
ANR	6960410	Symbol	* backend -> u		6960299						
ANR	6960411	Symbol	* * backend		6960299						
ANR	6960412	Symbol	type		6960299						
ANR	6960413	Symbol	stderr		6960299						
ANR	6960414	Symbol	backend -> u . spicevmc		6960299						
ANR	6960415	Symbol	* psubtype		6960299						
ANR	6960416	Symbol	chr_open		6960299						
ANR	6960417	Symbol	* backend		6960299						
ANR	6960418	Symbol	backend -> u . spicevmc -> type		6960299						
ANR	6960419	Symbol	psubtype		6960299						
ANR	6960420	Symbol	backend -> u		6960299						
ANR	6960421	Symbol	* backend -> u . spicevmc		6960299						
ANR	6960422	Symbol	backend		6960299						
ANR	6960423	Symbol	id		6960299						
