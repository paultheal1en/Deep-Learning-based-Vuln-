command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1706159	File	/home/p4ultr4n/workplace/ReVeal/raw_code/decode_block_0.c								
ANR	1706160	Function	decode_block	1:0:0:2759							
ANR	1706161	FunctionDef	"decode_block (BinkAudioContext * s , short * out , int use_dct)"		1706160	0					
ANR	1706162	CompoundStatement		3:0:72:2759	1706160	0					
ANR	1706163	IdentifierDeclStatement	"int ch , i , j , k ;"	5:4:79:94	1706160	0	True				
ANR	1706164	IdentifierDecl	ch		1706160	0					
ANR	1706165	IdentifierDeclType	int		1706160	0					
ANR	1706166	Identifier	ch		1706160	1					
ANR	1706167	IdentifierDecl	i		1706160	1					
ANR	1706168	IdentifierDeclType	int		1706160	0					
ANR	1706169	Identifier	i		1706160	1					
ANR	1706170	IdentifierDecl	j		1706160	2					
ANR	1706171	IdentifierDeclType	int		1706160	0					
ANR	1706172	Identifier	j		1706160	1					
ANR	1706173	IdentifierDecl	k		1706160	3					
ANR	1706174	IdentifierDeclType	int		1706160	0					
ANR	1706175	Identifier	k		1706160	1					
ANR	1706176	IdentifierDeclStatement	"float q , quant [ 25 ] ;"	7:4:101:119	1706160	1	True				
ANR	1706177	IdentifierDecl	q		1706160	0					
ANR	1706178	IdentifierDeclType	float		1706160	0					
ANR	1706179	Identifier	q		1706160	1					
ANR	1706180	IdentifierDecl	quant [ 25 ]		1706160	1					
ANR	1706181	IdentifierDeclType	float [ 25 ]		1706160	0					
ANR	1706182	Identifier	quant		1706160	1					
ANR	1706183	PrimaryExpression	25		1706160	2					
ANR	1706184	IdentifierDeclStatement	"int width , coeff ;"	9:4:126:142	1706160	2	True				
ANR	1706185	IdentifierDecl	width		1706160	0					
ANR	1706186	IdentifierDeclType	int		1706160	0					
ANR	1706187	Identifier	width		1706160	1					
ANR	1706188	IdentifierDecl	coeff		1706160	1					
ANR	1706189	IdentifierDeclType	int		1706160	0					
ANR	1706190	Identifier	coeff		1706160	1					
ANR	1706191	IdentifierDeclStatement	GetBitContext * gb = & s -> gb ;	11:4:149:175	1706160	3	True				
ANR	1706192	IdentifierDecl	* gb = & s -> gb		1706160	0					
ANR	1706193	IdentifierDeclType	GetBitContext *		1706160	0					
ANR	1706194	Identifier	gb		1706160	1					
ANR	1706195	AssignmentExpression	* gb = & s -> gb		1706160	2		=			
ANR	1706196	Identifier	gb		1706160	0					
ANR	1706197	UnaryOperationExpression	& s -> gb		1706160	1					
ANR	1706198	UnaryOperator	&		1706160	0					
ANR	1706199	PtrMemberAccess	s -> gb		1706160	1					
ANR	1706200	Identifier	s		1706160	0					
ANR	1706201	Identifier	gb		1706160	1					
ANR	1706202	IfStatement	if ( use_dct )		1706160	4					
ANR	1706203	Condition	use_dct	15:8:188:194	1706160	0	True				
ANR	1706204	Identifier	use_dct		1706160	0					
ANR	1706205	ExpressionStatement	"skip_bits ( gb , 2 )"	17:8:206:222	1706160	1	True				
ANR	1706206	CallExpression	"skip_bits ( gb , 2 )"		1706160	0					
ANR	1706207	Callee	skip_bits		1706160	0					
ANR	1706208	Identifier	skip_bits		1706160	0					
ANR	1706209	ArgumentList	gb		1706160	1					
ANR	1706210	Argument	gb		1706160	0					
ANR	1706211	Identifier	gb		1706160	0					
ANR	1706212	Argument	2		1706160	1					
ANR	1706213	PrimaryExpression	2		1706160	0					
ANR	1706214	ForStatement	for ( ch = 0 ; ch < s -> channels ; ch ++ )		1706160	5					
ANR	1706215	ForInit	ch = 0 ;	21:9:236:242	1706160	0	True				
ANR	1706216	AssignmentExpression	ch = 0		1706160	0		=			
ANR	1706217	Identifier	ch		1706160	0					
ANR	1706218	PrimaryExpression	0		1706160	1					
ANR	1706219	Condition	ch < s -> channels	21:17:244:259	1706160	1	True				
ANR	1706220	RelationalExpression	ch < s -> channels		1706160	0		<			
ANR	1706221	Identifier	ch		1706160	0					
ANR	1706222	PtrMemberAccess	s -> channels		1706160	1					
ANR	1706223	Identifier	s		1706160	0					
ANR	1706224	Identifier	channels		1706160	1					
ANR	1706225	PostIncDecOperationExpression	ch ++	21:35:262:265	1706160	2	True				
ANR	1706226	Identifier	ch		1706160	0					
ANR	1706227	IncDec	++		1706160	1					
ANR	1706228	CompoundStatement		21:8:206:243	1706160	3					
ANR	1706229	IdentifierDeclStatement	FFTSample * coeffs = s -> coeffs_ptr [ ch ] ;	23:8:279:316	1706160	0	True				
ANR	1706230	IdentifierDecl	* coeffs = s -> coeffs_ptr [ ch ]		1706160	0					
ANR	1706231	IdentifierDeclType	FFTSample *		1706160	0					
ANR	1706232	Identifier	coeffs		1706160	1					
ANR	1706233	AssignmentExpression	* coeffs = s -> coeffs_ptr [ ch ]		1706160	2		=			
ANR	1706234	Identifier	coeffs		1706160	0					
ANR	1706235	ArrayIndexing	s -> coeffs_ptr [ ch ]		1706160	1					
ANR	1706236	PtrMemberAccess	s -> coeffs_ptr		1706160	0					
ANR	1706237	Identifier	s		1706160	0					
ANR	1706238	Identifier	coeffs_ptr		1706160	1					
ANR	1706239	Identifier	ch		1706160	1					
ANR	1706240	ExpressionStatement	q = 0.0f	25:8:327:335	1706160	1	True				
ANR	1706241	AssignmentExpression	q = 0.0f		1706160	0		=			
ANR	1706242	Identifier	q		1706160	0					
ANR	1706243	PrimaryExpression	0.0f		1706160	1					
ANR	1706244	ExpressionStatement	coeffs [ 0 ] = get_float ( gb ) * s -> root	27:8:346:381	1706160	2	True				
ANR	1706245	AssignmentExpression	coeffs [ 0 ] = get_float ( gb ) * s -> root		1706160	0		=			
ANR	1706246	ArrayIndexing	coeffs [ 0 ]		1706160	0					
ANR	1706247	Identifier	coeffs		1706160	0					
ANR	1706248	PrimaryExpression	0		1706160	1					
ANR	1706249	MultiplicativeExpression	get_float ( gb ) * s -> root		1706160	1		*			
ANR	1706250	CallExpression	get_float ( gb )		1706160	0					
ANR	1706251	Callee	get_float		1706160	0					
ANR	1706252	Identifier	get_float		1706160	0					
ANR	1706253	ArgumentList	gb		1706160	1					
ANR	1706254	Argument	gb		1706160	0					
ANR	1706255	Identifier	gb		1706160	0					
ANR	1706256	PtrMemberAccess	s -> root		1706160	1					
ANR	1706257	Identifier	s		1706160	0					
ANR	1706258	Identifier	root		1706160	1					
ANR	1706259	ExpressionStatement	coeffs [ 1 ] = get_float ( gb ) * s -> root	29:8:392:427	1706160	3	True				
ANR	1706260	AssignmentExpression	coeffs [ 1 ] = get_float ( gb ) * s -> root		1706160	0		=			
ANR	1706261	ArrayIndexing	coeffs [ 1 ]		1706160	0					
ANR	1706262	Identifier	coeffs		1706160	0					
ANR	1706263	PrimaryExpression	1		1706160	1					
ANR	1706264	MultiplicativeExpression	get_float ( gb ) * s -> root		1706160	1		*			
ANR	1706265	CallExpression	get_float ( gb )		1706160	0					
ANR	1706266	Callee	get_float		1706160	0					
ANR	1706267	Identifier	get_float		1706160	0					
ANR	1706268	ArgumentList	gb		1706160	1					
ANR	1706269	Argument	gb		1706160	0					
ANR	1706270	Identifier	gb		1706160	0					
ANR	1706271	PtrMemberAccess	s -> root		1706160	1					
ANR	1706272	Identifier	s		1706160	0					
ANR	1706273	Identifier	root		1706160	1					
ANR	1706274	ForStatement	for ( i = 0 ; i < s -> num_bands ; i ++ )		1706160	4					
ANR	1706275	ForInit	i = 0 ;	33:13:445:450	1706160	0	True				
ANR	1706276	AssignmentExpression	i = 0		1706160	0		=			
ANR	1706277	Identifier	i		1706160	0					
ANR	1706278	PrimaryExpression	0		1706160	1					
ANR	1706279	Condition	i < s -> num_bands	33:20:452:467	1706160	1	True				
ANR	1706280	RelationalExpression	i < s -> num_bands		1706160	0		<			
ANR	1706281	Identifier	i		1706160	0					
ANR	1706282	PtrMemberAccess	s -> num_bands		1706160	1					
ANR	1706283	Identifier	s		1706160	0					
ANR	1706284	Identifier	num_bands		1706160	1					
ANR	1706285	PostIncDecOperationExpression	i ++	33:38:470:472	1706160	2	True				
ANR	1706286	Identifier	i		1706160	0					
ANR	1706287	IncDec	++		1706160	1					
ANR	1706288	CompoundStatement		35:12:481:508	1706160	3					
ANR	1706289	IdentifierDeclStatement	"int value = get_bits ( gb , 8 ) ;"	37:12:554:581	1706160	0	True				
ANR	1706290	IdentifierDecl	"value = get_bits ( gb , 8 )"		1706160	0					
ANR	1706291	IdentifierDeclType	int		1706160	0					
ANR	1706292	Identifier	value		1706160	1					
ANR	1706293	AssignmentExpression	"value = get_bits ( gb , 8 )"		1706160	2		=			
ANR	1706294	Identifier	value		1706160	0					
ANR	1706295	CallExpression	"get_bits ( gb , 8 )"		1706160	1					
ANR	1706296	Callee	get_bits		1706160	0					
ANR	1706297	Identifier	get_bits		1706160	0					
ANR	1706298	ArgumentList	gb		1706160	1					
ANR	1706299	Argument	gb		1706160	0					
ANR	1706300	Identifier	gb		1706160	0					
ANR	1706301	Argument	8		1706160	1					
ANR	1706302	PrimaryExpression	8		1706160	0					
ANR	1706303	ExpressionStatement	"quant [ i ] = expf ( FFMIN ( value , 95 ) * 0.15289164787221953823f ) * s -> root"	39:12:596:665	1706160	1	True				
ANR	1706304	AssignmentExpression	"quant [ i ] = expf ( FFMIN ( value , 95 ) * 0.15289164787221953823f ) * s -> root"		1706160	0		=			
ANR	1706305	ArrayIndexing	quant [ i ]		1706160	0					
ANR	1706306	Identifier	quant		1706160	0					
ANR	1706307	Identifier	i		1706160	1					
ANR	1706308	MultiplicativeExpression	"expf ( FFMIN ( value , 95 ) * 0.15289164787221953823f ) * s -> root"		1706160	1		*			
ANR	1706309	CallExpression	"expf ( FFMIN ( value , 95 ) * 0.15289164787221953823f )"		1706160	0					
ANR	1706310	Callee	expf		1706160	0					
ANR	1706311	Identifier	expf		1706160	0					
ANR	1706312	ArgumentList	"FFMIN ( value , 95 ) * 0.15289164787221953823f"		1706160	1					
ANR	1706313	Argument	"FFMIN ( value , 95 ) * 0.15289164787221953823f"		1706160	0					
ANR	1706314	MultiplicativeExpression	"FFMIN ( value , 95 ) * 0.15289164787221953823f"		1706160	0		*			
ANR	1706315	CallExpression	"FFMIN ( value , 95 )"		1706160	0					
ANR	1706316	Callee	FFMIN		1706160	0					
ANR	1706317	Identifier	FFMIN		1706160	0					
ANR	1706318	ArgumentList	value		1706160	1					
ANR	1706319	Argument	value		1706160	0					
ANR	1706320	Identifier	value		1706160	0					
ANR	1706321	Argument	95		1706160	1					
ANR	1706322	PrimaryExpression	95		1706160	0					
ANR	1706323	PrimaryExpression	0.15289164787221953823f		1706160	1					
ANR	1706324	PtrMemberAccess	s -> root		1706160	1					
ANR	1706325	Identifier	s		1706160	0					
ANR	1706326	Identifier	root		1706160	1					
ANR	1706327	ForStatement	for ( k = 0 ; s -> bands [ k ] < 1 ; k ++ )		1706160	5					
ANR	1706328	ForInit	k = 0 ;	47:13:720:725	1706160	0	True				
ANR	1706329	AssignmentExpression	k = 0		1706160	0		=			
ANR	1706330	Identifier	k		1706160	0					
ANR	1706331	PrimaryExpression	0		1706160	1					
ANR	1706332	Condition	s -> bands [ k ] < 1	47:20:727:741	1706160	1	True				
ANR	1706333	RelationalExpression	s -> bands [ k ] < 1		1706160	0		<			
ANR	1706334	ArrayIndexing	s -> bands [ k ]		1706160	0					
ANR	1706335	PtrMemberAccess	s -> bands		1706160	0					
ANR	1706336	Identifier	s		1706160	0					
ANR	1706337	Identifier	bands		1706160	1					
ANR	1706338	Identifier	k		1706160	1					
ANR	1706339	PrimaryExpression	1		1706160	1					
ANR	1706340	PostIncDecOperationExpression	k ++	47:37:744:746	1706160	2	True				
ANR	1706341	Identifier	k		1706160	0					
ANR	1706342	IncDec	++		1706160	1					
ANR	1706343	CompoundStatement		45:42:676:676	1706160	3					
ANR	1706344	ExpressionStatement	q = quant [ k ]	49:12:764:776	1706160	0	True				
ANR	1706345	AssignmentExpression	q = quant [ k ]		1706160	0		=			
ANR	1706346	Identifier	q		1706160	0					
ANR	1706347	ArrayIndexing	quant [ k ]		1706160	1					
ANR	1706348	Identifier	quant		1706160	0					
ANR	1706349	Identifier	k		1706160	1					
ANR	1706350	ExpressionStatement	i = 2	57:8:831:836	1706160	6	True				
ANR	1706351	AssignmentExpression	i = 2		1706160	0		=			
ANR	1706352	Identifier	i		1706160	0					
ANR	1706353	PrimaryExpression	2		1706160	1					
ANR	1706354	WhileStatement	while ( i < s -> frame_len )		1706160	7					
ANR	1706355	Condition	i < s -> frame_len	59:15:854:869	1706160	0	True				
ANR	1706356	RelationalExpression	i < s -> frame_len		1706160	0		<			
ANR	1706357	Identifier	i		1706160	0					
ANR	1706358	PtrMemberAccess	s -> frame_len		1706160	1					
ANR	1706359	Identifier	s		1706160	0					
ANR	1706360	Identifier	frame_len		1706160	1					
ANR	1706361	CompoundStatement		57:33:799:799	1706160	1					
ANR	1706362	IfStatement	if ( get_bits1 ( gb ) )		1706160	0					
ANR	1706363	Condition	get_bits1 ( gb )	61:16:891:903	1706160	0	True				
ANR	1706364	CallExpression	get_bits1 ( gb )		1706160	0					
ANR	1706365	Callee	get_bits1		1706160	0					
ANR	1706366	Identifier	get_bits1		1706160	0					
ANR	1706367	ArgumentList	gb		1706160	1					
ANR	1706368	Argument	gb		1706160	0					
ANR	1706369	Identifier	gb		1706160	0					
ANR	1706370	CompoundStatement		59:31:833:833	1706160	1					
ANR	1706371	ExpressionStatement	"j = i + rle_length_tab [ get_bits ( gb , 4 ) ] * 8"	63:16:925:968	1706160	0	True				
ANR	1706372	AssignmentExpression	"j = i + rle_length_tab [ get_bits ( gb , 4 ) ] * 8"		1706160	0		=			
ANR	1706373	Identifier	j		1706160	0					
ANR	1706374	AdditiveExpression	"i + rle_length_tab [ get_bits ( gb , 4 ) ] * 8"		1706160	1		+			
ANR	1706375	Identifier	i		1706160	0					
ANR	1706376	MultiplicativeExpression	"rle_length_tab [ get_bits ( gb , 4 ) ] * 8"		1706160	1		*			
ANR	1706377	ArrayIndexing	"rle_length_tab [ get_bits ( gb , 4 ) ]"		1706160	0					
ANR	1706378	Identifier	rle_length_tab		1706160	0					
ANR	1706379	CallExpression	"get_bits ( gb , 4 )"		1706160	1					
ANR	1706380	Callee	get_bits		1706160	0					
ANR	1706381	Identifier	get_bits		1706160	0					
ANR	1706382	ArgumentList	gb		1706160	1					
ANR	1706383	Argument	gb		1706160	0					
ANR	1706384	Identifier	gb		1706160	0					
ANR	1706385	Argument	4		1706160	1					
ANR	1706386	PrimaryExpression	4		1706160	0					
ANR	1706387	PrimaryExpression	8		1706160	1					
ANR	1706388	ElseStatement	else		1706160	0					
ANR	1706389	CompoundStatement		63:19:917:917	1706160	0					
ANR	1706390	ExpressionStatement	j = i + 8	67:16:1009:1018	1706160	0	True				
ANR	1706391	AssignmentExpression	j = i + 8		1706160	0		=			
ANR	1706392	Identifier	j		1706160	0					
ANR	1706393	AdditiveExpression	i + 8		1706160	1		+			
ANR	1706394	Identifier	i		1706160	0					
ANR	1706395	PrimaryExpression	8		1706160	1					
ANR	1706396	ExpressionStatement	"j = FFMIN ( j , s -> frame_len )"	73:12:1050:1076	1706160	1	True				
ANR	1706397	AssignmentExpression	"j = FFMIN ( j , s -> frame_len )"		1706160	0		=			
ANR	1706398	Identifier	j		1706160	0					
ANR	1706399	CallExpression	"FFMIN ( j , s -> frame_len )"		1706160	1					
ANR	1706400	Callee	FFMIN		1706160	0					
ANR	1706401	Identifier	FFMIN		1706160	0					
ANR	1706402	ArgumentList	j		1706160	1					
ANR	1706403	Argument	j		1706160	0					
ANR	1706404	Identifier	j		1706160	0					
ANR	1706405	Argument	s -> frame_len		1706160	1					
ANR	1706406	PtrMemberAccess	s -> frame_len		1706160	0					
ANR	1706407	Identifier	s		1706160	0					
ANR	1706408	Identifier	frame_len		1706160	1					
ANR	1706409	ExpressionStatement	"width = get_bits ( gb , 4 )"	77:12:1093:1116	1706160	2	True				
ANR	1706410	AssignmentExpression	"width = get_bits ( gb , 4 )"		1706160	0		=			
ANR	1706411	Identifier	width		1706160	0					
ANR	1706412	CallExpression	"get_bits ( gb , 4 )"		1706160	1					
ANR	1706413	Callee	get_bits		1706160	0					
ANR	1706414	Identifier	get_bits		1706160	0					
ANR	1706415	ArgumentList	gb		1706160	1					
ANR	1706416	Argument	gb		1706160	0					
ANR	1706417	Identifier	gb		1706160	0					
ANR	1706418	Argument	4		1706160	1					
ANR	1706419	PrimaryExpression	4		1706160	0					
ANR	1706420	IfStatement	if ( width == 0 )		1706160	3					
ANR	1706421	Condition	width == 0	79:16:1135:1144	1706160	0	True				
ANR	1706422	EqualityExpression	width == 0		1706160	0		==			
ANR	1706423	Identifier	width		1706160	0					
ANR	1706424	PrimaryExpression	0		1706160	1					
ANR	1706425	CompoundStatement		77:28:1074:1074	1706160	1					
ANR	1706426	ExpressionStatement	"memset ( coeffs + i , 0 , ( j - i ) * sizeof ( * coeffs ) )"	81:16:1166:1214	1706160	0	True				
ANR	1706427	CallExpression	"memset ( coeffs + i , 0 , ( j - i ) * sizeof ( * coeffs ) )"		1706160	0					
ANR	1706428	Callee	memset		1706160	0					
ANR	1706429	Identifier	memset		1706160	0					
ANR	1706430	ArgumentList	coeffs + i		1706160	1					
ANR	1706431	Argument	coeffs + i		1706160	0					
ANR	1706432	AdditiveExpression	coeffs + i		1706160	0		+			
ANR	1706433	Identifier	coeffs		1706160	0					
ANR	1706434	Identifier	i		1706160	1					
ANR	1706435	Argument	0		1706160	1					
ANR	1706436	PrimaryExpression	0		1706160	0					
ANR	1706437	Argument	( j - i ) * sizeof ( * coeffs )		1706160	2					
ANR	1706438	MultiplicativeExpression	( j - i ) * sizeof ( * coeffs )		1706160	0		*			
ANR	1706439	AdditiveExpression	j - i		1706160	0		-			
ANR	1706440	Identifier	j		1706160	0					
ANR	1706441	Identifier	i		1706160	1					
ANR	1706442	SizeofExpression	sizeof ( * coeffs )		1706160	1					
ANR	1706443	Sizeof	sizeof		1706160	0					
ANR	1706444	UnaryOperationExpression	* coeffs		1706160	1					
ANR	1706445	UnaryOperator	*		1706160	0					
ANR	1706446	Identifier	coeffs		1706160	1					
ANR	1706447	ExpressionStatement	i = j	83:16:1233:1238	1706160	1	True				
ANR	1706448	AssignmentExpression	i = j		1706160	0		=			
ANR	1706449	Identifier	i		1706160	0					
ANR	1706450	Identifier	j		1706160	1					
ANR	1706451	WhileStatement	while ( s -> bands [ k ] < i )		1706160	2					
ANR	1706452	Condition	s -> bands [ k ] < i	85:23:1264:1278	1706160	0	True				
ANR	1706453	RelationalExpression	s -> bands [ k ] < i		1706160	0		<			
ANR	1706454	ArrayIndexing	s -> bands [ k ]		1706160	0					
ANR	1706455	PtrMemberAccess	s -> bands		1706160	0					
ANR	1706456	Identifier	s		1706160	0					
ANR	1706457	Identifier	bands		1706160	1					
ANR	1706458	Identifier	k		1706160	1					
ANR	1706459	Identifier	i		1706160	1					
ANR	1706460	ExpressionStatement	q = quant [ k ++ ]	87:20:1302:1316	1706160	1	True				
ANR	1706461	AssignmentExpression	q = quant [ k ++ ]		1706160	0		=			
ANR	1706462	Identifier	q		1706160	0					
ANR	1706463	ArrayIndexing	quant [ k ++ ]		1706160	1					
ANR	1706464	Identifier	quant		1706160	0					
ANR	1706465	PostIncDecOperationExpression	k ++		1706160	1					
ANR	1706466	Identifier	k		1706160	0					
ANR	1706467	IncDec	++		1706160	1					
ANR	1706468	ElseStatement	else		1706160	0					
ANR	1706469	CompoundStatement		87:19:1265:1265	1706160	0					
ANR	1706470	WhileStatement	while ( i < j )		1706160	0					
ANR	1706471	Condition	i < j	91:23:1364:1368	1706160	0	True				
ANR	1706472	RelationalExpression	i < j		1706160	0		<			
ANR	1706473	Identifier	i		1706160	0					
ANR	1706474	Identifier	j		1706160	1					
ANR	1706475	CompoundStatement		89:30:1298:1298	1706160	1					
ANR	1706476	IfStatement	if ( s -> bands [ k ] == i )		1706160	0					
ANR	1706477	Condition	s -> bands [ k ] == i	93:24:1398:1413	1706160	0	True				
ANR	1706478	EqualityExpression	s -> bands [ k ] == i		1706160	0		==			
ANR	1706479	ArrayIndexing	s -> bands [ k ]		1706160	0					
ANR	1706480	PtrMemberAccess	s -> bands		1706160	0					
ANR	1706481	Identifier	s		1706160	0					
ANR	1706482	Identifier	bands		1706160	1					
ANR	1706483	Identifier	k		1706160	1					
ANR	1706484	Identifier	i		1706160	1					
ANR	1706485	ExpressionStatement	q = quant [ k ++ ]	95:24:1441:1455	1706160	1	True				
ANR	1706486	AssignmentExpression	q = quant [ k ++ ]		1706160	0		=			
ANR	1706487	Identifier	q		1706160	0					
ANR	1706488	ArrayIndexing	quant [ k ++ ]		1706160	1					
ANR	1706489	Identifier	quant		1706160	0					
ANR	1706490	PostIncDecOperationExpression	k ++		1706160	1					
ANR	1706491	Identifier	k		1706160	0					
ANR	1706492	IncDec	++		1706160	1					
ANR	1706493	ExpressionStatement	"coeff = get_bits ( gb , width )"	97:20:1478:1505	1706160	1	True				
ANR	1706494	AssignmentExpression	"coeff = get_bits ( gb , width )"		1706160	0		=			
ANR	1706495	Identifier	coeff		1706160	0					
ANR	1706496	CallExpression	"get_bits ( gb , width )"		1706160	1					
ANR	1706497	Callee	get_bits		1706160	0					
ANR	1706498	Identifier	get_bits		1706160	0					
ANR	1706499	ArgumentList	gb		1706160	1					
ANR	1706500	Argument	gb		1706160	0					
ANR	1706501	Identifier	gb		1706160	0					
ANR	1706502	Argument	width		1706160	1					
ANR	1706503	Identifier	width		1706160	0					
ANR	1706504	IfStatement	if ( coeff )		1706160	2					
ANR	1706505	Condition	coeff	99:24:1532:1536	1706160	0	True				
ANR	1706506	Identifier	coeff		1706160	0					
ANR	1706507	CompoundStatement		97:31:1466:1466	1706160	1					
ANR	1706508	IfStatement	if ( get_bits1 ( gb ) )		1706160	0					
ANR	1706509	Condition	get_bits1 ( gb )	101:28:1570:1582	1706160	0	True				
ANR	1706510	CallExpression	get_bits1 ( gb )		1706160	0					
ANR	1706511	Callee	get_bits1		1706160	0					
ANR	1706512	Identifier	get_bits1		1706160	0					
ANR	1706513	ArgumentList	gb		1706160	1					
ANR	1706514	Argument	gb		1706160	0					
ANR	1706515	Identifier	gb		1706160	0					
ANR	1706516	ExpressionStatement	coeffs [ i ] = - q * coeff	103:28:1614:1636	1706160	1	True				
ANR	1706517	AssignmentExpression	coeffs [ i ] = - q * coeff		1706160	0		=			
ANR	1706518	ArrayIndexing	coeffs [ i ]		1706160	0					
ANR	1706519	Identifier	coeffs		1706160	0					
ANR	1706520	Identifier	i		1706160	1					
ANR	1706521	MultiplicativeExpression	- q * coeff		1706160	1		*			
ANR	1706522	UnaryOperationExpression	- q		1706160	0					
ANR	1706523	UnaryOperator	-		1706160	0					
ANR	1706524	Identifier	q		1706160	1					
ANR	1706525	Identifier	coeff		1706160	1					
ANR	1706526	ElseStatement	else		1706160	0					
ANR	1706527	ExpressionStatement	coeffs [ i ] = q * coeff	107:28:1697:1719	1706160	0	True				
ANR	1706528	AssignmentExpression	coeffs [ i ] = q * coeff		1706160	0		=			
ANR	1706529	ArrayIndexing	coeffs [ i ]		1706160	0					
ANR	1706530	Identifier	coeffs		1706160	0					
ANR	1706531	Identifier	i		1706160	1					
ANR	1706532	MultiplicativeExpression	q * coeff		1706160	1		*			
ANR	1706533	Identifier	q		1706160	0					
ANR	1706534	Identifier	coeff		1706160	1					
ANR	1706535	ElseStatement	else		1706160	0					
ANR	1706536	CompoundStatement		107:27:1676:1676	1706160	0					
ANR	1706537	ExpressionStatement	coeffs [ i ] = 0.0f	111:24:1776:1792	1706160	0	True				
ANR	1706538	AssignmentExpression	coeffs [ i ] = 0.0f		1706160	0		=			
ANR	1706539	ArrayIndexing	coeffs [ i ]		1706160	0					
ANR	1706540	Identifier	coeffs		1706160	0					
ANR	1706541	Identifier	i		1706160	1					
ANR	1706542	PrimaryExpression	0.0f		1706160	1					
ANR	1706543	ExpressionStatement	i ++	115:20:1838:1841	1706160	3	True				
ANR	1706544	PostIncDecOperationExpression	i ++		1706160	0					
ANR	1706545	Identifier	i		1706160	0					
ANR	1706546	IncDec	++		1706160	1					
ANR	1706547	IfStatement	if ( CONFIG_BINKAUDIO_DCT_DECODER && use_dct )		1706160	8					
ANR	1706548	Condition	CONFIG_BINKAUDIO_DCT_DECODER && use_dct	125:12:1903:1941	1706160	0	True				
ANR	1706549	AndExpression	CONFIG_BINKAUDIO_DCT_DECODER && use_dct		1706160	0		&&			
ANR	1706550	Identifier	CONFIG_BINKAUDIO_DCT_DECODER		1706160	0					
ANR	1706551	Identifier	use_dct		1706160	1					
ANR	1706552	CompoundStatement		123:53:1871:1871	1706160	1					
ANR	1706553	ExpressionStatement	coeffs [ 0 ] /= 0.5	127:12:1959:1975	1706160	0	True				
ANR	1706554	AssignmentExpression	coeffs [ 0 ] /= 0.5		1706160	0		/=			
ANR	1706555	ArrayIndexing	coeffs [ 0 ]		1706160	0					
ANR	1706556	Identifier	coeffs		1706160	0					
ANR	1706557	PrimaryExpression	0		1706160	1					
ANR	1706558	PrimaryExpression	0.5		1706160	1					
ANR	1706559	ExpressionStatement	"ff_dct_calc ( & s -> trans . dct , coeffs )"	129:12:1990:2026	1706160	1	True				
ANR	1706560	CallExpression	"ff_dct_calc ( & s -> trans . dct , coeffs )"		1706160	0					
ANR	1706561	Callee	ff_dct_calc		1706160	0					
ANR	1706562	Identifier	ff_dct_calc		1706160	0					
ANR	1706563	ArgumentList	& s -> trans . dct		1706160	1					
ANR	1706564	Argument	& s -> trans . dct		1706160	0					
ANR	1706565	UnaryOperationExpression	& s -> trans . dct		1706160	0					
ANR	1706566	UnaryOperator	&		1706160	0					
ANR	1706567	MemberAccess	s -> trans . dct		1706160	1					
ANR	1706568	PtrMemberAccess	s -> trans		1706160	0					
ANR	1706569	Identifier	s		1706160	0					
ANR	1706570	Identifier	trans		1706160	1					
ANR	1706571	Identifier	dct		1706160	1					
ANR	1706572	Argument	coeffs		1706160	1					
ANR	1706573	Identifier	coeffs		1706160	0					
ANR	1706574	ExpressionStatement	"s -> dsp . vector_fmul_scalar ( coeffs , coeffs , s -> frame_len / 2 , s -> frame_len )"	131:12:2041:2114	1706160	2	True				
ANR	1706575	CallExpression	"s -> dsp . vector_fmul_scalar ( coeffs , coeffs , s -> frame_len / 2 , s -> frame_len )"		1706160	0					
ANR	1706576	Callee	s -> dsp . vector_fmul_scalar		1706160	0					
ANR	1706577	MemberAccess	s -> dsp . vector_fmul_scalar		1706160	0					
ANR	1706578	PtrMemberAccess	s -> dsp		1706160	0					
ANR	1706579	Identifier	s		1706160	0					
ANR	1706580	Identifier	dsp		1706160	1					
ANR	1706581	Identifier	vector_fmul_scalar		1706160	1					
ANR	1706582	ArgumentList	coeffs		1706160	1					
ANR	1706583	Argument	coeffs		1706160	0					
ANR	1706584	Identifier	coeffs		1706160	0					
ANR	1706585	Argument	coeffs		1706160	1					
ANR	1706586	Identifier	coeffs		1706160	0					
ANR	1706587	Argument	s -> frame_len / 2		1706160	2					
ANR	1706588	MultiplicativeExpression	s -> frame_len / 2		1706160	0		/			
ANR	1706589	PtrMemberAccess	s -> frame_len		1706160	0					
ANR	1706590	Identifier	s		1706160	0					
ANR	1706591	Identifier	frame_len		1706160	1					
ANR	1706592	PrimaryExpression	2		1706160	1					
ANR	1706593	Argument	s -> frame_len		1706160	3					
ANR	1706594	PtrMemberAccess	s -> frame_len		1706160	0					
ANR	1706595	Identifier	s		1706160	0					
ANR	1706596	Identifier	frame_len		1706160	1					
ANR	1706597	ElseStatement	else		1706160	0					
ANR	1706598	IfStatement	if ( CONFIG_BINKAUDIO_RDFT_DECODER )		1706160	0					
ANR	1706599	Condition	CONFIG_BINKAUDIO_RDFT_DECODER	135:17:2145:2173	1706160	0	True				
ANR	1706600	Identifier	CONFIG_BINKAUDIO_RDFT_DECODER		1706160	0					
ANR	1706601	ExpressionStatement	"ff_rdft_calc ( & s -> trans . rdft , coeffs )"	137:12:2189:2225	1706160	1	True				
ANR	1706602	CallExpression	"ff_rdft_calc ( & s -> trans . rdft , coeffs )"		1706160	0					
ANR	1706603	Callee	ff_rdft_calc		1706160	0					
ANR	1706604	Identifier	ff_rdft_calc		1706160	0					
ANR	1706605	ArgumentList	& s -> trans . rdft		1706160	1					
ANR	1706606	Argument	& s -> trans . rdft		1706160	0					
ANR	1706607	UnaryOperationExpression	& s -> trans . rdft		1706160	0					
ANR	1706608	UnaryOperator	&		1706160	0					
ANR	1706609	MemberAccess	s -> trans . rdft		1706160	1					
ANR	1706610	PtrMemberAccess	s -> trans		1706160	0					
ANR	1706611	Identifier	s		1706160	0					
ANR	1706612	Identifier	trans		1706160	1					
ANR	1706613	Identifier	rdft		1706160	1					
ANR	1706614	Argument	coeffs		1706160	1					
ANR	1706615	Identifier	coeffs		1706160	0					
ANR	1706616	ExpressionStatement	"s -> fmt_conv . float_to_int16_interleave ( out , ( const float * * ) s -> coeffs_ptr , s -> frame_len , s -> channels )"	143:4:2241:2384	1706160	6	True				
ANR	1706617	CallExpression	"s -> fmt_conv . float_to_int16_interleave ( out , ( const float * * ) s -> coeffs_ptr , s -> frame_len , s -> channels )"		1706160	0					
ANR	1706618	Callee	s -> fmt_conv . float_to_int16_interleave		1706160	0					
ANR	1706619	MemberAccess	s -> fmt_conv . float_to_int16_interleave		1706160	0					
ANR	1706620	PtrMemberAccess	s -> fmt_conv		1706160	0					
ANR	1706621	Identifier	s		1706160	0					
ANR	1706622	Identifier	fmt_conv		1706160	1					
ANR	1706623	Identifier	float_to_int16_interleave		1706160	1					
ANR	1706624	ArgumentList	out		1706160	1					
ANR	1706625	Argument	out		1706160	0					
ANR	1706626	Identifier	out		1706160	0					
ANR	1706627	Argument	( const float * * ) s -> coeffs_ptr		1706160	1					
ANR	1706628	CastExpression	( const float * * ) s -> coeffs_ptr		1706160	0					
ANR	1706629	CastTarget	const float * *		1706160	0					
ANR	1706630	PtrMemberAccess	s -> coeffs_ptr		1706160	1					
ANR	1706631	Identifier	s		1706160	0					
ANR	1706632	Identifier	coeffs_ptr		1706160	1					
ANR	1706633	Argument	s -> frame_len		1706160	2					
ANR	1706634	PtrMemberAccess	s -> frame_len		1706160	0					
ANR	1706635	Identifier	s		1706160	0					
ANR	1706636	Identifier	frame_len		1706160	1					
ANR	1706637	Argument	s -> channels		1706160	3					
ANR	1706638	PtrMemberAccess	s -> channels		1706160	0					
ANR	1706639	Identifier	s		1706160	0					
ANR	1706640	Identifier	channels		1706160	1					
ANR	1706641	IfStatement	if ( ! s -> first )		1706160	7					
ANR	1706642	Condition	! s -> first	149:8:2397:2405	1706160	0	True				
ANR	1706643	UnaryOperationExpression	! s -> first		1706160	0					
ANR	1706644	UnaryOperator	!		1706160	0					
ANR	1706645	PtrMemberAccess	s -> first		1706160	1					
ANR	1706646	Identifier	s		1706160	0					
ANR	1706647	Identifier	first		1706160	1					
ANR	1706648	CompoundStatement		151:8:2397:2423	1706160	1					
ANR	1706649	IdentifierDeclStatement	int count = s -> overlap_len * s -> channels ;	151:8:2419:2459	1706160	0	True				
ANR	1706650	IdentifierDecl	count = s -> overlap_len * s -> channels		1706160	0					
ANR	1706651	IdentifierDeclType	int		1706160	0					
ANR	1706652	Identifier	count		1706160	1					
ANR	1706653	AssignmentExpression	count = s -> overlap_len * s -> channels		1706160	2		=			
ANR	1706654	Identifier	count		1706160	0					
ANR	1706655	MultiplicativeExpression	s -> overlap_len * s -> channels		1706160	1		*			
ANR	1706656	PtrMemberAccess	s -> overlap_len		1706160	0					
ANR	1706657	Identifier	s		1706160	0					
ANR	1706658	Identifier	overlap_len		1706160	1					
ANR	1706659	PtrMemberAccess	s -> channels		1706160	1					
ANR	1706660	Identifier	s		1706160	0					
ANR	1706661	Identifier	channels		1706160	1					
ANR	1706662	IdentifierDeclStatement	int shift = av_log2 ( count ) ;	153:8:2470:2496	1706160	1	True				
ANR	1706663	IdentifierDecl	shift = av_log2 ( count )		1706160	0					
ANR	1706664	IdentifierDeclType	int		1706160	0					
ANR	1706665	Identifier	shift		1706160	1					
ANR	1706666	AssignmentExpression	shift = av_log2 ( count )		1706160	2		=			
ANR	1706667	Identifier	shift		1706160	0					
ANR	1706668	CallExpression	av_log2 ( count )		1706160	1					
ANR	1706669	Callee	av_log2		1706160	0					
ANR	1706670	Identifier	av_log2		1706160	0					
ANR	1706671	ArgumentList	count		1706160	1					
ANR	1706672	Argument	count		1706160	0					
ANR	1706673	Identifier	count		1706160	0					
ANR	1706674	ForStatement	for ( i = 0 ; i < count ; i ++ )		1706160	2					
ANR	1706675	ForInit	i = 0 ;	155:13:2512:2517	1706160	0	True				
ANR	1706676	AssignmentExpression	i = 0		1706160	0		=			
ANR	1706677	Identifier	i		1706160	0					
ANR	1706678	PrimaryExpression	0		1706160	1					
ANR	1706679	Condition	i < count	155:20:2519:2527	1706160	1	True				
ANR	1706680	RelationalExpression	i < count		1706160	0		<			
ANR	1706681	Identifier	i		1706160	0					
ANR	1706682	Identifier	count		1706160	1					
ANR	1706683	PostIncDecOperationExpression	i ++	155:31:2530:2532	1706160	2	True				
ANR	1706684	Identifier	i		1706160	0					
ANR	1706685	IncDec	++		1706160	1					
ANR	1706686	CompoundStatement		153:36:2462:2462	1706160	3					
ANR	1706687	ExpressionStatement	out [ i ] = ( s -> previous [ i ] * ( count - i ) + out [ i ] * i ) >> shift	157:12:2550:2611	1706160	0	True				
ANR	1706688	AssignmentExpression	out [ i ] = ( s -> previous [ i ] * ( count - i ) + out [ i ] * i ) >> shift		1706160	0		=			
ANR	1706689	ArrayIndexing	out [ i ]		1706160	0					
ANR	1706690	Identifier	out		1706160	0					
ANR	1706691	Identifier	i		1706160	1					
ANR	1706692	ShiftExpression	( s -> previous [ i ] * ( count - i ) + out [ i ] * i ) >> shift		1706160	1		>>			
ANR	1706693	AdditiveExpression	s -> previous [ i ] * ( count - i ) + out [ i ] * i		1706160	0		+			
ANR	1706694	MultiplicativeExpression	s -> previous [ i ] * ( count - i )		1706160	0		*			
ANR	1706695	ArrayIndexing	s -> previous [ i ]		1706160	0					
ANR	1706696	PtrMemberAccess	s -> previous		1706160	0					
ANR	1706697	Identifier	s		1706160	0					
ANR	1706698	Identifier	previous		1706160	1					
ANR	1706699	Identifier	i		1706160	1					
ANR	1706700	AdditiveExpression	count - i		1706160	1		-			
ANR	1706701	Identifier	count		1706160	0					
ANR	1706702	Identifier	i		1706160	1					
ANR	1706703	MultiplicativeExpression	out [ i ] * i		1706160	1		*			
ANR	1706704	ArrayIndexing	out [ i ]		1706160	0					
ANR	1706705	Identifier	out		1706160	0					
ANR	1706706	Identifier	i		1706160	1					
ANR	1706707	Identifier	i		1706160	1					
ANR	1706708	Identifier	shift		1706160	1					
ANR	1706709	ExpressionStatement	"memcpy ( s -> previous , out + s -> block_size , s -> overlap_len * s -> channels * sizeof ( * out ) )"	165:4:2638:2735	1706160	8	True				
ANR	1706710	CallExpression	"memcpy ( s -> previous , out + s -> block_size , s -> overlap_len * s -> channels * sizeof ( * out ) )"		1706160	0					
ANR	1706711	Callee	memcpy		1706160	0					
ANR	1706712	Identifier	memcpy		1706160	0					
ANR	1706713	ArgumentList	s -> previous		1706160	1					
ANR	1706714	Argument	s -> previous		1706160	0					
ANR	1706715	PtrMemberAccess	s -> previous		1706160	0					
ANR	1706716	Identifier	s		1706160	0					
ANR	1706717	Identifier	previous		1706160	1					
ANR	1706718	Argument	out + s -> block_size		1706160	1					
ANR	1706719	AdditiveExpression	out + s -> block_size		1706160	0		+			
ANR	1706720	Identifier	out		1706160	0					
ANR	1706721	PtrMemberAccess	s -> block_size		1706160	1					
ANR	1706722	Identifier	s		1706160	0					
ANR	1706723	Identifier	block_size		1706160	1					
ANR	1706724	Argument	s -> overlap_len * s -> channels * sizeof ( * out )		1706160	2					
ANR	1706725	MultiplicativeExpression	s -> overlap_len * s -> channels * sizeof ( * out )		1706160	0		*			
ANR	1706726	PtrMemberAccess	s -> overlap_len		1706160	0					
ANR	1706727	Identifier	s		1706160	0					
ANR	1706728	Identifier	overlap_len		1706160	1					
ANR	1706729	MultiplicativeExpression	s -> channels * sizeof ( * out )		1706160	1		*			
ANR	1706730	PtrMemberAccess	s -> channels		1706160	0					
ANR	1706731	Identifier	s		1706160	0					
ANR	1706732	Identifier	channels		1706160	1					
ANR	1706733	SizeofExpression	sizeof ( * out )		1706160	1					
ANR	1706734	Sizeof	sizeof		1706160	0					
ANR	1706735	UnaryOperationExpression	* out		1706160	1					
ANR	1706736	UnaryOperator	*		1706160	0					
ANR	1706737	Identifier	out		1706160	1					
ANR	1706738	ExpressionStatement	s -> first = 0	171:4:2744:2756	1706160	9	True				
ANR	1706739	AssignmentExpression	s -> first = 0		1706160	0		=			
ANR	1706740	PtrMemberAccess	s -> first		1706160	0					
ANR	1706741	Identifier	s		1706160	0					
ANR	1706742	Identifier	first		1706160	1					
ANR	1706743	PrimaryExpression	0		1706160	1					
ANR	1706744	ReturnType	static void		1706160	1					
ANR	1706745	Identifier	decode_block		1706160	2					
ANR	1706746	ParameterList	"BinkAudioContext * s , short * out , int use_dct"		1706160	3					
ANR	1706747	Parameter	BinkAudioContext * s	1:25:25:43	1706160	0	True				
ANR	1706748	ParameterType	BinkAudioContext *		1706160	0					
ANR	1706749	Identifier	s		1706160	1					
ANR	1706750	Parameter	short * out	1:46:46:55	1706160	1	True				
ANR	1706751	ParameterType	short *		1706160	0					
ANR	1706752	Identifier	out		1706160	1					
ANR	1706753	Parameter	int use_dct	1:58:58:68	1706160	2	True				
ANR	1706754	ParameterType	int		1706160	0					
ANR	1706755	Identifier	use_dct		1706160	1					
ANR	1706756	CFGEntryNode	ENTRY		1706160		True				
ANR	1706757	CFGExitNode	EXIT		1706160		True				
ANR	1706758	Symbol	* quant		1706160						
ANR	1706759	Symbol	* s -> previous		1706160						
ANR	1706760	Symbol	get_bits		1706160						
ANR	1706761	Symbol	shift		1706160						
ANR	1706762	Symbol	s -> coeffs_ptr		1706160						
ANR	1706763	Symbol	* s -> coeffs_ptr		1706160						
ANR	1706764	Symbol	* ch		1706160						
ANR	1706765	Symbol	FFMIN		1706160						
ANR	1706766	Symbol	s -> trans		1706160						
ANR	1706767	Symbol	s -> num_bands		1706160						
ANR	1706768	Symbol	& s -> trans . rdft		1706160						
ANR	1706769	Symbol	coeffs		1706160						
ANR	1706770	Symbol	* coeffs		1706160						
ANR	1706771	Symbol	rle_length_tab		1706160						
ANR	1706772	Symbol	get_bits1		1706160						
ANR	1706773	Symbol	count		1706160						
ANR	1706774	Symbol	quant		1706160						
ANR	1706775	Symbol	s -> bands		1706160						
ANR	1706776	Symbol	get_float		1706160						
ANR	1706777	Symbol	s -> dsp		1706160						
ANR	1706778	Symbol	use_dct		1706160						
ANR	1706779	Symbol	& s -> gb		1706160						
ANR	1706780	Symbol	* out		1706160						
ANR	1706781	Symbol	s -> fmt_conv		1706160						
ANR	1706782	Symbol	av_log2		1706160						
ANR	1706783	Symbol	* s -> bands		1706160						
ANR	1706784	Symbol	s -> first		1706160						
ANR	1706785	Symbol	expf		1706160						
ANR	1706786	Symbol	s -> block_size		1706160						
ANR	1706787	Symbol	& s -> trans		1706160						
ANR	1706788	Symbol	s -> channels		1706160						
ANR	1706789	Symbol	CONFIG_BINKAUDIO_DCT_DECODER		1706160						
ANR	1706790	Symbol	out		1706160						
ANR	1706791	Symbol	s -> overlap_len		1706160						
ANR	1706792	Symbol	* rle_length_tab		1706160						
ANR	1706793	Symbol	* * s		1706160						
ANR	1706794	Symbol	gb		1706160						
ANR	1706795	Symbol	value		1706160						
ANR	1706796	Symbol	coeff		1706160						
ANR	1706797	Symbol	s -> root		1706160						
ANR	1706798	Symbol	ch		1706160						
ANR	1706799	Symbol	* get_bits		1706160						
ANR	1706800	Symbol	i		1706160						
ANR	1706801	Symbol	j		1706160						
ANR	1706802	Symbol	CONFIG_BINKAUDIO_RDFT_DECODER		1706160						
ANR	1706803	Symbol	k		1706160						
ANR	1706804	Symbol	& s -> trans . dct		1706160						
ANR	1706805	Symbol	q		1706160						
ANR	1706806	Symbol	s -> frame_len		1706160						
ANR	1706807	Symbol	s		1706160						
ANR	1706808	Symbol	* i		1706160						
ANR	1706809	Symbol	* k		1706160						
ANR	1706810	Symbol	s -> previous		1706160						
ANR	1706811	Symbol	width		1706160						
ANR	1706812	Symbol	* s		1706160						
