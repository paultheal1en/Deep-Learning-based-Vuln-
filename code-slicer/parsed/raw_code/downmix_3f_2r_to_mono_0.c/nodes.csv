command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2763109	File	/home/p4ultr4n/workplace/ReVeal/raw_code/downmix_3f_2r_to_mono_0.c								
ANR	2763110	Function	downmix_3f_2r_to_mono	1:0:0:305							
ANR	2763111	FunctionDef	downmix_3f_2r_to_mono (float * samples)		2763110	0					
ANR	2763112	CompoundStatement		3:0:58:305	2763110	0					
ANR	2763113	IdentifierDeclStatement	int i ;	5:4:65:70	2763110	0	True				
ANR	2763114	IdentifierDecl	i		2763110	0					
ANR	2763115	IdentifierDeclType	int		2763110	0					
ANR	2763116	Identifier	i		2763110	1					
ANR	2763117	ForStatement	for ( i = 0 ; i < 256 ; i ++ )		2763110	1					
ANR	2763118	ForInit	i = 0 ;	9:9:84:89	2763110	0	True				
ANR	2763119	AssignmentExpression	i = 0		2763110	0		=			
ANR	2763120	Identifier	i		2763110	0					
ANR	2763121	PrimaryExpression	0		2763110	1					
ANR	2763122	Condition	i < 256	9:16:91:97	2763110	1	True				
ANR	2763123	RelationalExpression	i < 256		2763110	0		<			
ANR	2763124	Identifier	i		2763110	0					
ANR	2763125	PrimaryExpression	256		2763110	1					
ANR	2763126	PostIncDecOperationExpression	i ++	9:25:100:102	2763110	2	True				
ANR	2763127	Identifier	i		2763110	0					
ANR	2763128	IncDec	++		2763110	1					
ANR	2763129	CompoundStatement		7:30:46:46	2763110	3					
ANR	2763130	ExpressionStatement	samples [ i ] += ( samples [ i + 256 ] + samples [ i + 512 ] + samples [ i + 768 ] + samples [ i + 1024 ] )	11:8:116:206	2763110	0	True				
ANR	2763131	AssignmentExpression	samples [ i ] += ( samples [ i + 256 ] + samples [ i + 512 ] + samples [ i + 768 ] + samples [ i + 1024 ] )		2763110	0		+=			
ANR	2763132	ArrayIndexing	samples [ i ]		2763110	0					
ANR	2763133	Identifier	samples		2763110	0					
ANR	2763134	Identifier	i		2763110	1					
ANR	2763135	AdditiveExpression	samples [ i + 256 ] + samples [ i + 512 ] + samples [ i + 768 ] + samples [ i + 1024 ]		2763110	1		+			
ANR	2763136	ArrayIndexing	samples [ i + 256 ]		2763110	0					
ANR	2763137	Identifier	samples		2763110	0					
ANR	2763138	AdditiveExpression	i + 256		2763110	1		+			
ANR	2763139	Identifier	i		2763110	0					
ANR	2763140	PrimaryExpression	256		2763110	1					
ANR	2763141	AdditiveExpression	samples [ i + 512 ] + samples [ i + 768 ] + samples [ i + 1024 ]		2763110	1		+			
ANR	2763142	ArrayIndexing	samples [ i + 512 ]		2763110	0					
ANR	2763143	Identifier	samples		2763110	0					
ANR	2763144	AdditiveExpression	i + 512		2763110	1		+			
ANR	2763145	Identifier	i		2763110	0					
ANR	2763146	PrimaryExpression	512		2763110	1					
ANR	2763147	AdditiveExpression	samples [ i + 768 ] + samples [ i + 1024 ]		2763110	1		+			
ANR	2763148	ArrayIndexing	samples [ i + 768 ]		2763110	0					
ANR	2763149	Identifier	samples		2763110	0					
ANR	2763150	AdditiveExpression	i + 768		2763110	1		+			
ANR	2763151	Identifier	i		2763110	0					
ANR	2763152	PrimaryExpression	768		2763110	1					
ANR	2763153	ArrayIndexing	samples [ i + 1024 ]		2763110	1					
ANR	2763154	Identifier	samples		2763110	0					
ANR	2763155	AdditiveExpression	i + 1024		2763110	1		+			
ANR	2763156	Identifier	i		2763110	0					
ANR	2763157	PrimaryExpression	1024		2763110	1					
ANR	2763158	ExpressionStatement	samples [ i + 256 ] = samples [ i + 512 ] = samples [ i + 768 ] = samples [ i + 1024 ] = 0	13:8:217:295	2763110	1	True				
ANR	2763159	AssignmentExpression	samples [ i + 256 ] = samples [ i + 512 ] = samples [ i + 768 ] = samples [ i + 1024 ] = 0		2763110	0		=			
ANR	2763160	ArrayIndexing	samples [ i + 256 ]		2763110	0					
ANR	2763161	Identifier	samples		2763110	0					
ANR	2763162	AdditiveExpression	i + 256		2763110	1		+			
ANR	2763163	Identifier	i		2763110	0					
ANR	2763164	PrimaryExpression	256		2763110	1					
ANR	2763165	AssignmentExpression	samples [ i + 512 ] = samples [ i + 768 ] = samples [ i + 1024 ] = 0		2763110	1		=			
ANR	2763166	ArrayIndexing	samples [ i + 512 ]		2763110	0					
ANR	2763167	Identifier	samples		2763110	0					
ANR	2763168	AdditiveExpression	i + 512		2763110	1		+			
ANR	2763169	Identifier	i		2763110	0					
ANR	2763170	PrimaryExpression	512		2763110	1					
ANR	2763171	AssignmentExpression	samples [ i + 768 ] = samples [ i + 1024 ] = 0		2763110	1		=			
ANR	2763172	ArrayIndexing	samples [ i + 768 ]		2763110	0					
ANR	2763173	Identifier	samples		2763110	0					
ANR	2763174	AdditiveExpression	i + 768		2763110	1		+			
ANR	2763175	Identifier	i		2763110	0					
ANR	2763176	PrimaryExpression	768		2763110	1					
ANR	2763177	AssignmentExpression	samples [ i + 1024 ] = 0		2763110	1		=			
ANR	2763178	ArrayIndexing	samples [ i + 1024 ]		2763110	0					
ANR	2763179	Identifier	samples		2763110	0					
ANR	2763180	AdditiveExpression	i + 1024		2763110	1		+			
ANR	2763181	Identifier	i		2763110	0					
ANR	2763182	PrimaryExpression	1024		2763110	1					
ANR	2763183	PrimaryExpression	0		2763110	1					
ANR	2763184	ReturnType	static inline void		2763110	1					
ANR	2763185	Identifier	downmix_3f_2r_to_mono		2763110	2					
ANR	2763186	ParameterList	float * samples		2763110	3					
ANR	2763187	Parameter	float * samples	1:41:41:54	2763110	0	True				
ANR	2763188	ParameterType	float *		2763110	0					
ANR	2763189	Identifier	samples		2763110	1					
ANR	2763190	CFGEntryNode	ENTRY		2763110		True				
ANR	2763191	CFGExitNode	EXIT		2763110		True				
ANR	2763192	Symbol	* i		2763110						
ANR	2763193	Symbol	* samples		2763110						
ANR	2763194	Symbol	i		2763110						
ANR	2763195	Symbol	samples		2763110						
