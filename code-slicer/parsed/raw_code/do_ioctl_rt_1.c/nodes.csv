command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2602084	File	/home/p4ultr4n/workplace/ReVeal/raw_code/do_ioctl_rt_1.c								
ANR	2602085	Function	do_ioctl_rt	1:0:0:2341							
ANR	2602086	FunctionDef	"do_ioctl_rt (const IOCTLEntry * ie , uint8_t * buf_temp , int fd , int cmd , abi_long arg)"		2602085	0					
ANR	2602087	CompoundStatement		5:0:134:2341	2602085	0					
ANR	2602088	IdentifierDeclStatement	const argtype * arg_type = ie -> arg_type ;	7:4:141:179	2602085	0	True				
ANR	2602089	IdentifierDecl	* arg_type = ie -> arg_type		2602085	0					
ANR	2602090	IdentifierDeclType	const argtype *		2602085	0					
ANR	2602091	Identifier	arg_type		2602085	1					
ANR	2602092	AssignmentExpression	* arg_type = ie -> arg_type		2602085	2		=			
ANR	2602093	Identifier	arg_type		2602085	0					
ANR	2602094	PtrMemberAccess	ie -> arg_type		2602085	1					
ANR	2602095	Identifier	ie		2602085	0					
ANR	2602096	Identifier	arg_type		2602085	1					
ANR	2602097	IdentifierDeclStatement	const StructEntry * se ;	9:4:186:207	2602085	1	True				
ANR	2602098	IdentifierDecl	* se		2602085	0					
ANR	2602099	IdentifierDeclType	const StructEntry *		2602085	0					
ANR	2602100	Identifier	se		2602085	1					
ANR	2602101	IdentifierDeclStatement	const argtype * field_types ;	11:4:214:240	2602085	2	True				
ANR	2602102	IdentifierDecl	* field_types		2602085	0					
ANR	2602103	IdentifierDeclType	const argtype *		2602085	0					
ANR	2602104	Identifier	field_types		2602085	1					
ANR	2602105	IdentifierDeclStatement	"const int * dst_offsets , * src_offsets ;"	13:4:247:283	2602085	3	True				
ANR	2602106	IdentifierDecl	* dst_offsets		2602085	0					
ANR	2602107	IdentifierDeclType	const int *		2602085	0					
ANR	2602108	Identifier	dst_offsets		2602085	1					
ANR	2602109	IdentifierDecl	* src_offsets		2602085	1					
ANR	2602110	IdentifierDeclType	const int *		2602085	0					
ANR	2602111	Identifier	src_offsets		2602085	1					
ANR	2602112	IdentifierDeclStatement	int target_size ;	15:4:290:305	2602085	4	True				
ANR	2602113	IdentifierDecl	target_size		2602085	0					
ANR	2602114	IdentifierDeclType	int		2602085	0					
ANR	2602115	Identifier	target_size		2602085	1					
ANR	2602116	IdentifierDeclStatement	void * argptr ;	17:4:312:324	2602085	5	True				
ANR	2602117	IdentifierDecl	* argptr		2602085	0					
ANR	2602118	IdentifierDeclType	void *		2602085	0					
ANR	2602119	Identifier	argptr		2602085	1					
ANR	2602120	IdentifierDeclStatement	abi_ulong * target_rt_dev_ptr ;	19:4:331:359	2602085	6	True				
ANR	2602121	IdentifierDecl	* target_rt_dev_ptr		2602085	0					
ANR	2602122	IdentifierDeclType	abi_ulong *		2602085	0					
ANR	2602123	Identifier	target_rt_dev_ptr		2602085	1					
ANR	2602124	IdentifierDeclStatement	unsigned long * host_rt_dev_ptr ;	21:4:366:396	2602085	7	True				
ANR	2602125	IdentifierDecl	* host_rt_dev_ptr		2602085	0					
ANR	2602126	IdentifierDeclType	unsigned long *		2602085	0					
ANR	2602127	Identifier	host_rt_dev_ptr		2602085	1					
ANR	2602128	IdentifierDeclStatement	abi_long ret ;	23:4:403:415	2602085	8	True				
ANR	2602129	IdentifierDecl	ret		2602085	0					
ANR	2602130	IdentifierDeclType	abi_long		2602085	0					
ANR	2602131	Identifier	ret		2602085	1					
ANR	2602132	IdentifierDeclStatement	int i ;	25:4:422:427	2602085	9	True				
ANR	2602133	IdentifierDecl	i		2602085	0					
ANR	2602134	IdentifierDeclType	int		2602085	0					
ANR	2602135	Identifier	i		2602085	1					
ANR	2602136	ExpressionStatement	assert ( ie -> access == IOC_W )	29:4:436:463	2602085	10	True				
ANR	2602137	CallExpression	assert ( ie -> access == IOC_W )		2602085	0					
ANR	2602138	Callee	assert		2602085	0					
ANR	2602139	Identifier	assert		2602085	0					
ANR	2602140	ArgumentList	ie -> access == IOC_W		2602085	1					
ANR	2602141	Argument	ie -> access == IOC_W		2602085	0					
ANR	2602142	EqualityExpression	ie -> access == IOC_W		2602085	0		==			
ANR	2602143	PtrMemberAccess	ie -> access		2602085	0					
ANR	2602144	Identifier	ie		2602085	0					
ANR	2602145	Identifier	access		2602085	1					
ANR	2602146	Identifier	IOC_W		2602085	1					
ANR	2602147	ExpressionStatement	assert ( * arg_type == TYPE_PTR )	31:4:470:499	2602085	11	True				
ANR	2602148	CallExpression	assert ( * arg_type == TYPE_PTR )		2602085	0					
ANR	2602149	Callee	assert		2602085	0					
ANR	2602150	Identifier	assert		2602085	0					
ANR	2602151	ArgumentList	* arg_type == TYPE_PTR		2602085	1					
ANR	2602152	Argument	* arg_type == TYPE_PTR		2602085	0					
ANR	2602153	EqualityExpression	* arg_type == TYPE_PTR		2602085	0		==			
ANR	2602154	UnaryOperationExpression	* arg_type		2602085	0					
ANR	2602155	UnaryOperator	*		2602085	0					
ANR	2602156	Identifier	arg_type		2602085	1					
ANR	2602157	Identifier	TYPE_PTR		2602085	1					
ANR	2602158	ExpressionStatement	arg_type ++	33:4:506:516	2602085	12	True				
ANR	2602159	PostIncDecOperationExpression	arg_type ++		2602085	0					
ANR	2602160	Identifier	arg_type		2602085	0					
ANR	2602161	IncDec	++		2602085	1					
ANR	2602162	ExpressionStatement	assert ( * arg_type == TYPE_STRUCT )	35:4:523:555	2602085	13	True				
ANR	2602163	CallExpression	assert ( * arg_type == TYPE_STRUCT )		2602085	0					
ANR	2602164	Callee	assert		2602085	0					
ANR	2602165	Identifier	assert		2602085	0					
ANR	2602166	ArgumentList	* arg_type == TYPE_STRUCT		2602085	1					
ANR	2602167	Argument	* arg_type == TYPE_STRUCT		2602085	0					
ANR	2602168	EqualityExpression	* arg_type == TYPE_STRUCT		2602085	0		==			
ANR	2602169	UnaryOperationExpression	* arg_type		2602085	0					
ANR	2602170	UnaryOperator	*		2602085	0					
ANR	2602171	Identifier	arg_type		2602085	1					
ANR	2602172	Identifier	TYPE_STRUCT		2602085	1					
ANR	2602173	ExpressionStatement	"target_size = thunk_type_size ( arg_type , 0 )"	37:4:562:604	2602085	14	True				
ANR	2602174	AssignmentExpression	"target_size = thunk_type_size ( arg_type , 0 )"		2602085	0		=			
ANR	2602175	Identifier	target_size		2602085	0					
ANR	2602176	CallExpression	"thunk_type_size ( arg_type , 0 )"		2602085	1					
ANR	2602177	Callee	thunk_type_size		2602085	0					
ANR	2602178	Identifier	thunk_type_size		2602085	0					
ANR	2602179	ArgumentList	arg_type		2602085	1					
ANR	2602180	Argument	arg_type		2602085	0					
ANR	2602181	Identifier	arg_type		2602085	0					
ANR	2602182	Argument	0		2602085	1					
ANR	2602183	PrimaryExpression	0		2602085	0					
ANR	2602184	ExpressionStatement	"argptr = lock_user ( VERIFY_READ , arg , target_size , 1 )"	39:4:611:663	2602085	15	True				
ANR	2602185	AssignmentExpression	"argptr = lock_user ( VERIFY_READ , arg , target_size , 1 )"		2602085	0		=			
ANR	2602186	Identifier	argptr		2602085	0					
ANR	2602187	CallExpression	"lock_user ( VERIFY_READ , arg , target_size , 1 )"		2602085	1					
ANR	2602188	Callee	lock_user		2602085	0					
ANR	2602189	Identifier	lock_user		2602085	0					
ANR	2602190	ArgumentList	VERIFY_READ		2602085	1					
ANR	2602191	Argument	VERIFY_READ		2602085	0					
ANR	2602192	Identifier	VERIFY_READ		2602085	0					
ANR	2602193	Argument	arg		2602085	1					
ANR	2602194	Identifier	arg		2602085	0					
ANR	2602195	Argument	target_size		2602085	2					
ANR	2602196	Identifier	target_size		2602085	0					
ANR	2602197	Argument	1		2602085	3					
ANR	2602198	PrimaryExpression	1		2602085	0					
ANR	2602199	IfStatement	if ( ! argptr )		2602085	16					
ANR	2602200	Condition	! argptr	41:8:674:680	2602085	0	True				
ANR	2602201	UnaryOperationExpression	! argptr		2602085	0					
ANR	2602202	UnaryOperator	!		2602085	0					
ANR	2602203	Identifier	argptr		2602085	1					
ANR	2602204	CompoundStatement		37:17:548:548	2602085	1					
ANR	2602205	ReturnStatement	return - TARGET_EFAULT ;	43:8:694:715	2602085	0	True				
ANR	2602206	UnaryOperationExpression	- TARGET_EFAULT		2602085	0					
ANR	2602207	UnaryOperator	-		2602085	0					
ANR	2602208	Identifier	TARGET_EFAULT		2602085	1					
ANR	2602209	ExpressionStatement	arg_type ++	47:4:729:739	2602085	17	True				
ANR	2602210	PostIncDecOperationExpression	arg_type ++		2602085	0					
ANR	2602211	Identifier	arg_type		2602085	0					
ANR	2602212	IncDec	++		2602085	1					
ANR	2602213	ExpressionStatement	assert ( * arg_type == ( int ) STRUCT_rtentry )	49:4:746:786	2602085	18	True				
ANR	2602214	CallExpression	assert ( * arg_type == ( int ) STRUCT_rtentry )		2602085	0					
ANR	2602215	Callee	assert		2602085	0					
ANR	2602216	Identifier	assert		2602085	0					
ANR	2602217	ArgumentList	* arg_type == ( int ) STRUCT_rtentry		2602085	1					
ANR	2602218	Argument	* arg_type == ( int ) STRUCT_rtentry		2602085	0					
ANR	2602219	EqualityExpression	* arg_type == ( int ) STRUCT_rtentry		2602085	0		==			
ANR	2602220	UnaryOperationExpression	* arg_type		2602085	0					
ANR	2602221	UnaryOperator	*		2602085	0					
ANR	2602222	Identifier	arg_type		2602085	1					
ANR	2602223	CastExpression	( int ) STRUCT_rtentry		2602085	1					
ANR	2602224	CastTarget	int		2602085	0					
ANR	2602225	Identifier	STRUCT_rtentry		2602085	1					
ANR	2602226	ExpressionStatement	se = struct_entries + * arg_type ++	51:4:793:826	2602085	19	True				
ANR	2602227	AssignmentExpression	se = struct_entries + * arg_type ++		2602085	0		=			
ANR	2602228	Identifier	se		2602085	0					
ANR	2602229	AdditiveExpression	struct_entries + * arg_type ++		2602085	1		+			
ANR	2602230	Identifier	struct_entries		2602085	0					
ANR	2602231	UnaryOperationExpression	* arg_type ++		2602085	1					
ANR	2602232	UnaryOperator	*		2602085	0					
ANR	2602233	PostIncDecOperationExpression	arg_type ++		2602085	1					
ANR	2602234	Identifier	arg_type		2602085	0					
ANR	2602235	IncDec	++		2602085	1					
ANR	2602236	ExpressionStatement	assert ( se -> convert [ 0 ] == NULL )	53:4:833:863	2602085	20	True				
ANR	2602237	CallExpression	assert ( se -> convert [ 0 ] == NULL )		2602085	0					
ANR	2602238	Callee	assert		2602085	0					
ANR	2602239	Identifier	assert		2602085	0					
ANR	2602240	ArgumentList	se -> convert [ 0 ] == NULL		2602085	1					
ANR	2602241	Argument	se -> convert [ 0 ] == NULL		2602085	0					
ANR	2602242	EqualityExpression	se -> convert [ 0 ] == NULL		2602085	0		==			
ANR	2602243	ArrayIndexing	se -> convert [ 0 ]		2602085	0					
ANR	2602244	PtrMemberAccess	se -> convert		2602085	0					
ANR	2602245	Identifier	se		2602085	0					
ANR	2602246	Identifier	convert		2602085	1					
ANR	2602247	PrimaryExpression	0		2602085	1					
ANR	2602248	Identifier	NULL		2602085	1					
ANR	2602249	ExpressionStatement	field_types = se -> field_types	57:4:935:964	2602085	21	True				
ANR	2602250	AssignmentExpression	field_types = se -> field_types		2602085	0		=			
ANR	2602251	Identifier	field_types		2602085	0					
ANR	2602252	PtrMemberAccess	se -> field_types		2602085	1					
ANR	2602253	Identifier	se		2602085	0					
ANR	2602254	Identifier	field_types		2602085	1					
ANR	2602255	ExpressionStatement	dst_offsets = se -> field_offsets [ THUNK_HOST ]	59:4:971:1014	2602085	22	True				
ANR	2602256	AssignmentExpression	dst_offsets = se -> field_offsets [ THUNK_HOST ]		2602085	0		=			
ANR	2602257	Identifier	dst_offsets		2602085	0					
ANR	2602258	ArrayIndexing	se -> field_offsets [ THUNK_HOST ]		2602085	1					
ANR	2602259	PtrMemberAccess	se -> field_offsets		2602085	0					
ANR	2602260	Identifier	se		2602085	0					
ANR	2602261	Identifier	field_offsets		2602085	1					
ANR	2602262	Identifier	THUNK_HOST		2602085	1					
ANR	2602263	ExpressionStatement	src_offsets = se -> field_offsets [ THUNK_TARGET ]	61:4:1021:1066	2602085	23	True				
ANR	2602264	AssignmentExpression	src_offsets = se -> field_offsets [ THUNK_TARGET ]		2602085	0		=			
ANR	2602265	Identifier	src_offsets		2602085	0					
ANR	2602266	ArrayIndexing	se -> field_offsets [ THUNK_TARGET ]		2602085	1					
ANR	2602267	PtrMemberAccess	se -> field_offsets		2602085	0					
ANR	2602268	Identifier	se		2602085	0					
ANR	2602269	Identifier	field_offsets		2602085	1					
ANR	2602270	Identifier	THUNK_TARGET		2602085	1					
ANR	2602271	ForStatement	for ( i = 0 ; i < se -> nb_fields ; i ++ )		2602085	24					
ANR	2602272	ForInit	i = 0 ;	63:9:1078:1083	2602085	0	True				
ANR	2602273	AssignmentExpression	i = 0		2602085	0		=			
ANR	2602274	Identifier	i		2602085	0					
ANR	2602275	PrimaryExpression	0		2602085	1					
ANR	2602276	Condition	i < se -> nb_fields	63:16:1085:1101	2602085	1	True				
ANR	2602277	RelationalExpression	i < se -> nb_fields		2602085	0		<			
ANR	2602278	Identifier	i		2602085	0					
ANR	2602279	PtrMemberAccess	se -> nb_fields		2602085	1					
ANR	2602280	Identifier	se		2602085	0					
ANR	2602281	Identifier	nb_fields		2602085	1					
ANR	2602282	PostIncDecOperationExpression	i ++	63:35:1104:1106	2602085	2	True				
ANR	2602283	Identifier	i		2602085	0					
ANR	2602284	IncDec	++		2602085	1					
ANR	2602285	CompoundStatement		59:40:974:974	2602085	3					
ANR	2602286	Statement	if	65:8:1120:1121	2602085	0	True				
ANR	2602287	Statement	(	65:11:1123:1123	2602085	1	True				
ANR	2602288	Statement	dst_offsets	65:12:1124:1134	2602085	2	True				
ANR	2602289	Statement	[	65:23:1135:1135	2602085	3	True				
ANR	2602290	Statement	i	65:24:1136:1136	2602085	4	True				
ANR	2602291	Statement	]	65:25:1137:1137	2602085	5	True				
ANR	2602292	Statement	==	65:27:1139:1140	2602085	6	True				
ANR	2602293	Statement	offsetof	65:30:1142:1149	2602085	7	True				
ANR	2602294	Statement	(	65:38:1150:1150	2602085	8	True				
ANR	2602295	Statement	struct	65:39:1151:1156	2602085	9	True				
ANR	2602296	Statement	rtentry	65:46:1158:1164	2602085	10	True				
ANR	2602297	Statement	","	65:53:1165:1165	2602085	11	True				
ANR	2602298	Statement	rt_dev	65:55:1167:1172	2602085	12	True				
ANR	2602299	Statement	)	65:61:1173:1173	2602085	13	True				
ANR	2602300	Statement	)	65:62:1174:1174	2602085	14	True				
ANR	2602301	CompoundStatement		61:64:1041:1041	2602085	15					
ANR	2602302	ExpressionStatement	assert ( * field_types == TYPE_PTRVOID )	67:12:1191:1227	2602085	0	True				
ANR	2602303	CallExpression	assert ( * field_types == TYPE_PTRVOID )		2602085	0					
ANR	2602304	Callee	assert		2602085	0					
ANR	2602305	Identifier	assert		2602085	0					
ANR	2602306	ArgumentList	* field_types == TYPE_PTRVOID		2602085	1					
ANR	2602307	Argument	* field_types == TYPE_PTRVOID		2602085	0					
ANR	2602308	EqualityExpression	* field_types == TYPE_PTRVOID		2602085	0		==			
ANR	2602309	UnaryOperationExpression	* field_types		2602085	0					
ANR	2602310	UnaryOperator	*		2602085	0					
ANR	2602311	Identifier	field_types		2602085	1					
ANR	2602312	Identifier	TYPE_PTRVOID		2602085	1					
ANR	2602313	ExpressionStatement	target_rt_dev_ptr = ( abi_ulong * ) ( argptr + src_offsets [ i ] )	69:12:1242:1300	2602085	1	True				
ANR	2602314	AssignmentExpression	target_rt_dev_ptr = ( abi_ulong * ) ( argptr + src_offsets [ i ] )		2602085	0		=			
ANR	2602315	Identifier	target_rt_dev_ptr		2602085	0					
ANR	2602316	CastExpression	( abi_ulong * ) ( argptr + src_offsets [ i ] )		2602085	1					
ANR	2602317	CastTarget	abi_ulong *		2602085	0					
ANR	2602318	AdditiveExpression	argptr + src_offsets [ i ]		2602085	1		+			
ANR	2602319	Identifier	argptr		2602085	0					
ANR	2602320	ArrayIndexing	src_offsets [ i ]		2602085	1					
ANR	2602321	Identifier	src_offsets		2602085	0					
ANR	2602322	Identifier	i		2602085	1					
ANR	2602323	ExpressionStatement	host_rt_dev_ptr = ( unsigned long * ) ( buf_temp + dst_offsets [ i ] )	71:12:1315:1377	2602085	2	True				
ANR	2602324	AssignmentExpression	host_rt_dev_ptr = ( unsigned long * ) ( buf_temp + dst_offsets [ i ] )		2602085	0		=			
ANR	2602325	Identifier	host_rt_dev_ptr		2602085	0					
ANR	2602326	CastExpression	( unsigned long * ) ( buf_temp + dst_offsets [ i ] )		2602085	1					
ANR	2602327	CastTarget	unsigned long *		2602085	0					
ANR	2602328	AdditiveExpression	buf_temp + dst_offsets [ i ]		2602085	1		+			
ANR	2602329	Identifier	buf_temp		2602085	0					
ANR	2602330	ArrayIndexing	dst_offsets [ i ]		2602085	1					
ANR	2602331	Identifier	dst_offsets		2602085	0					
ANR	2602332	Identifier	i		2602085	1					
ANR	2602333	IfStatement	if ( * target_rt_dev_ptr != 0 )		2602085	3					
ANR	2602334	Condition	* target_rt_dev_ptr != 0	73:16:1396:1418	2602085	0	True				
ANR	2602335	EqualityExpression	* target_rt_dev_ptr != 0		2602085	0		!=			
ANR	2602336	UnaryOperationExpression	* target_rt_dev_ptr		2602085	0					
ANR	2602337	UnaryOperator	*		2602085	0					
ANR	2602338	Identifier	target_rt_dev_ptr		2602085	1					
ANR	2602339	PrimaryExpression	0		2602085	1					
ANR	2602340	CompoundStatement		69:41:1286:1286	2602085	1					
ANR	2602341	ExpressionStatement	* host_rt_dev_ptr = ( unsigned long ) lock_user_string ( tswapal ( * target_rt_dev_ptr ) )	75:16:1440:1571	2602085	0	True				
ANR	2602342	AssignmentExpression	* host_rt_dev_ptr = ( unsigned long ) lock_user_string ( tswapal ( * target_rt_dev_ptr ) )		2602085	0		=			
ANR	2602343	UnaryOperationExpression	* host_rt_dev_ptr		2602085	0					
ANR	2602344	UnaryOperator	*		2602085	0					
ANR	2602345	Identifier	host_rt_dev_ptr		2602085	1					
ANR	2602346	CastExpression	( unsigned long ) lock_user_string ( tswapal ( * target_rt_dev_ptr ) )		2602085	1					
ANR	2602347	CastTarget	unsigned long		2602085	0					
ANR	2602348	CallExpression	lock_user_string ( tswapal ( * target_rt_dev_ptr ) )		2602085	1					
ANR	2602349	Callee	lock_user_string		2602085	0					
ANR	2602350	Identifier	lock_user_string		2602085	0					
ANR	2602351	ArgumentList	tswapal ( * target_rt_dev_ptr )		2602085	1					
ANR	2602352	Argument	tswapal ( * target_rt_dev_ptr )		2602085	0					
ANR	2602353	CallExpression	tswapal ( * target_rt_dev_ptr )		2602085	0					
ANR	2602354	Callee	tswapal		2602085	0					
ANR	2602355	Identifier	tswapal		2602085	0					
ANR	2602356	ArgumentList	* target_rt_dev_ptr		2602085	1					
ANR	2602357	Argument	* target_rt_dev_ptr		2602085	0					
ANR	2602358	UnaryOperationExpression	* target_rt_dev_ptr		2602085	0					
ANR	2602359	UnaryOperator	*		2602085	0					
ANR	2602360	Identifier	target_rt_dev_ptr		2602085	1					
ANR	2602361	IfStatement	if ( ! * host_rt_dev_ptr )		2602085	1					
ANR	2602362	Condition	! * host_rt_dev_ptr	79:20:1594:1610	2602085	0	True				
ANR	2602363	UnaryOperationExpression	! * host_rt_dev_ptr		2602085	0					
ANR	2602364	UnaryOperator	!		2602085	0					
ANR	2602365	UnaryOperationExpression	* host_rt_dev_ptr		2602085	1					
ANR	2602366	UnaryOperator	*		2602085	0					
ANR	2602367	Identifier	host_rt_dev_ptr		2602085	1					
ANR	2602368	CompoundStatement		75:39:1478:1478	2602085	1					
ANR	2602369	ExpressionStatement	"unlock_user ( argptr , arg , 0 )"	81:20:1636:1663	2602085	0	True				
ANR	2602370	CallExpression	"unlock_user ( argptr , arg , 0 )"		2602085	0					
ANR	2602371	Callee	unlock_user		2602085	0					
ANR	2602372	Identifier	unlock_user		2602085	0					
ANR	2602373	ArgumentList	argptr		2602085	1					
ANR	2602374	Argument	argptr		2602085	0					
ANR	2602375	Identifier	argptr		2602085	0					
ANR	2602376	Argument	arg		2602085	1					
ANR	2602377	Identifier	arg		2602085	0					
ANR	2602378	Argument	0		2602085	2					
ANR	2602379	PrimaryExpression	0		2602085	0					
ANR	2602380	ReturnStatement	return - TARGET_EFAULT ;	83:20:1686:1707	2602085	1	True				
ANR	2602381	UnaryOperationExpression	- TARGET_EFAULT		2602085	0					
ANR	2602382	UnaryOperator	-		2602085	0					
ANR	2602383	Identifier	TARGET_EFAULT		2602085	1					
ANR	2602384	ElseStatement	else		2602085	0					
ANR	2602385	CompoundStatement		83:19:1613:1613	2602085	0					
ANR	2602386	ExpressionStatement	* host_rt_dev_ptr = 0	89:16:1767:1787	2602085	0	True				
ANR	2602387	AssignmentExpression	* host_rt_dev_ptr = 0		2602085	0		=			
ANR	2602388	UnaryOperationExpression	* host_rt_dev_ptr		2602085	0					
ANR	2602389	UnaryOperator	*		2602085	0					
ANR	2602390	Identifier	host_rt_dev_ptr		2602085	1					
ANR	2602391	PrimaryExpression	0		2602085	1					
ANR	2602392	ExpressionStatement	field_types ++	93:12:1817:1830	2602085	4	True				
ANR	2602393	PostIncDecOperationExpression	field_types ++		2602085	0					
ANR	2602394	Identifier	field_types		2602085	0					
ANR	2602395	IncDec	++		2602085	1					
ANR	2602396	ContinueStatement	continue ;	95:12:1845:1853	2602085	5	True				
ANR	2602397	ExpressionStatement	"field_types = thunk_convert ( buf_temp + dst_offsets [ i ] , argptr + src_offsets [ i ] , field_types , THUNK_HOST )"	99:8:1875:2053	2602085	16	True				
ANR	2602398	AssignmentExpression	"field_types = thunk_convert ( buf_temp + dst_offsets [ i ] , argptr + src_offsets [ i ] , field_types , THUNK_HOST )"		2602085	0		=			
ANR	2602399	Identifier	field_types		2602085	0					
ANR	2602400	CallExpression	"thunk_convert ( buf_temp + dst_offsets [ i ] , argptr + src_offsets [ i ] , field_types , THUNK_HOST )"		2602085	1					
ANR	2602401	Callee	thunk_convert		2602085	0					
ANR	2602402	Identifier	thunk_convert		2602085	0					
ANR	2602403	ArgumentList	buf_temp + dst_offsets [ i ]		2602085	1					
ANR	2602404	Argument	buf_temp + dst_offsets [ i ]		2602085	0					
ANR	2602405	AdditiveExpression	buf_temp + dst_offsets [ i ]		2602085	0		+			
ANR	2602406	Identifier	buf_temp		2602085	0					
ANR	2602407	ArrayIndexing	dst_offsets [ i ]		2602085	1					
ANR	2602408	Identifier	dst_offsets		2602085	0					
ANR	2602409	Identifier	i		2602085	1					
ANR	2602410	Argument	argptr + src_offsets [ i ]		2602085	1					
ANR	2602411	AdditiveExpression	argptr + src_offsets [ i ]		2602085	0		+			
ANR	2602412	Identifier	argptr		2602085	0					
ANR	2602413	ArrayIndexing	src_offsets [ i ]		2602085	1					
ANR	2602414	Identifier	src_offsets		2602085	0					
ANR	2602415	Identifier	i		2602085	1					
ANR	2602416	Argument	field_types		2602085	2					
ANR	2602417	Identifier	field_types		2602085	0					
ANR	2602418	Argument	THUNK_HOST		2602085	3					
ANR	2602419	Identifier	THUNK_HOST		2602085	0					
ANR	2602420	ExpressionStatement	"unlock_user ( argptr , arg , 0 )"	107:4:2067:2094	2602085	25	True				
ANR	2602421	CallExpression	"unlock_user ( argptr , arg , 0 )"		2602085	0					
ANR	2602422	Callee	unlock_user		2602085	0					
ANR	2602423	Identifier	unlock_user		2602085	0					
ANR	2602424	ArgumentList	argptr		2602085	1					
ANR	2602425	Argument	argptr		2602085	0					
ANR	2602426	Identifier	argptr		2602085	0					
ANR	2602427	Argument	arg		2602085	1					
ANR	2602428	Identifier	arg		2602085	0					
ANR	2602429	Argument	0		2602085	2					
ANR	2602430	PrimaryExpression	0		2602085	0					
ANR	2602431	ExpressionStatement	assert ( host_rt_dev_ptr )	109:4:2101:2124	2602085	26	True				
ANR	2602432	CallExpression	assert ( host_rt_dev_ptr )		2602085	0					
ANR	2602433	Callee	assert		2602085	0					
ANR	2602434	Identifier	assert		2602085	0					
ANR	2602435	ArgumentList	host_rt_dev_ptr		2602085	1					
ANR	2602436	Argument	host_rt_dev_ptr		2602085	0					
ANR	2602437	Identifier	host_rt_dev_ptr		2602085	0					
ANR	2602438	ExpressionStatement	"ret = get_errno ( safe_ioctl ( fd , ie -> host_cmd , buf_temp ) )"	113:4:2133:2188	2602085	27	True				
ANR	2602439	AssignmentExpression	"ret = get_errno ( safe_ioctl ( fd , ie -> host_cmd , buf_temp ) )"		2602085	0		=			
ANR	2602440	Identifier	ret		2602085	0					
ANR	2602441	CallExpression	"get_errno ( safe_ioctl ( fd , ie -> host_cmd , buf_temp ) )"		2602085	1					
ANR	2602442	Callee	get_errno		2602085	0					
ANR	2602443	Identifier	get_errno		2602085	0					
ANR	2602444	ArgumentList	"safe_ioctl ( fd , ie -> host_cmd , buf_temp )"		2602085	1					
ANR	2602445	Argument	"safe_ioctl ( fd , ie -> host_cmd , buf_temp )"		2602085	0					
ANR	2602446	CallExpression	"safe_ioctl ( fd , ie -> host_cmd , buf_temp )"		2602085	0					
ANR	2602447	Callee	safe_ioctl		2602085	0					
ANR	2602448	Identifier	safe_ioctl		2602085	0					
ANR	2602449	ArgumentList	fd		2602085	1					
ANR	2602450	Argument	fd		2602085	0					
ANR	2602451	Identifier	fd		2602085	0					
ANR	2602452	Argument	ie -> host_cmd		2602085	1					
ANR	2602453	PtrMemberAccess	ie -> host_cmd		2602085	0					
ANR	2602454	Identifier	ie		2602085	0					
ANR	2602455	Identifier	host_cmd		2602085	1					
ANR	2602456	Argument	buf_temp		2602085	2					
ANR	2602457	Identifier	buf_temp		2602085	0					
ANR	2602458	IfStatement	if ( * host_rt_dev_ptr != 0 )		2602085	28					
ANR	2602459	Condition	* host_rt_dev_ptr != 0	115:8:2199:2219	2602085	0	True				
ANR	2602460	EqualityExpression	* host_rt_dev_ptr != 0		2602085	0		!=			
ANR	2602461	UnaryOperationExpression	* host_rt_dev_ptr		2602085	0					
ANR	2602462	UnaryOperator	*		2602085	0					
ANR	2602463	Identifier	host_rt_dev_ptr		2602085	1					
ANR	2602464	PrimaryExpression	0		2602085	1					
ANR	2602465	CompoundStatement		111:31:2087:2087	2602085	1					
ANR	2602466	ExpressionStatement	"unlock_user ( ( void * ) * host_rt_dev_ptr , * target_rt_dev_ptr , 0 )"	117:8:2233:2314	2602085	0	True				
ANR	2602467	CallExpression	"unlock_user ( ( void * ) * host_rt_dev_ptr , * target_rt_dev_ptr , 0 )"		2602085	0					
ANR	2602468	Callee	unlock_user		2602085	0					
ANR	2602469	Identifier	unlock_user		2602085	0					
ANR	2602470	ArgumentList	( void * ) * host_rt_dev_ptr		2602085	1					
ANR	2602471	Argument	( void * ) * host_rt_dev_ptr		2602085	0					
ANR	2602472	CastExpression	( void * ) * host_rt_dev_ptr		2602085	0					
ANR	2602473	CastTarget	void *		2602085	0					
ANR	2602474	UnaryOperationExpression	* host_rt_dev_ptr		2602085	1					
ANR	2602475	UnaryOperator	*		2602085	0					
ANR	2602476	Identifier	host_rt_dev_ptr		2602085	1					
ANR	2602477	Argument	* target_rt_dev_ptr		2602085	1					
ANR	2602478	UnaryOperationExpression	* target_rt_dev_ptr		2602085	0					
ANR	2602479	UnaryOperator	*		2602085	0					
ANR	2602480	Identifier	target_rt_dev_ptr		2602085	1					
ANR	2602481	Argument	0		2602085	2					
ANR	2602482	PrimaryExpression	0		2602085	0					
ANR	2602483	ReturnStatement	return ret ;	123:4:2328:2338	2602085	29	True				
ANR	2602484	Identifier	ret		2602085	0					
ANR	2602485	ReturnType	static abi_long		2602085	1					
ANR	2602486	Identifier	do_ioctl_rt		2602085	2					
ANR	2602487	ParameterList	"const IOCTLEntry * ie , uint8_t * buf_temp , int fd , int cmd , abi_long arg"		2602085	3					
ANR	2602488	Parameter	const IOCTLEntry * ie	1:28:28:47	2602085	0	True				
ANR	2602489	ParameterType	const IOCTLEntry *		2602085	0					
ANR	2602490	Identifier	ie		2602085	1					
ANR	2602491	Parameter	uint8_t * buf_temp	1:50:50:66	2602085	1	True				
ANR	2602492	ParameterType	uint8_t *		2602085	0					
ANR	2602493	Identifier	buf_temp		2602085	1					
ANR	2602494	Parameter	int fd	3:32:102:107	2602085	2	True				
ANR	2602495	ParameterType	int		2602085	0					
ANR	2602496	Identifier	fd		2602085	1					
ANR	2602497	Parameter	int cmd	3:40:110:116	2602085	3	True				
ANR	2602498	ParameterType	int		2602085	0					
ANR	2602499	Identifier	cmd		2602085	1					
ANR	2602500	Parameter	abi_long arg	3:49:119:130	2602085	4	True				
ANR	2602501	ParameterType	abi_long		2602085	0					
ANR	2602502	Identifier	arg		2602085	1					
ANR	2602503	CFGEntryNode	ENTRY		2602085		True				
ANR	2602504	CFGExitNode	EXIT		2602085		True				
ANR	2602505	Symbol	TYPE_STRUCT		2602085						
ANR	2602506	Symbol	se -> field_types		2602085						
ANR	2602507	Symbol	* se -> field_offsets		2602085						
ANR	2602508	Symbol	arg_type		2602085						
ANR	2602509	Symbol	* src_offsets		2602085						
ANR	2602510	Symbol	field_types		2602085						
ANR	2602511	Symbol	safe_ioctl		2602085						
ANR	2602512	Symbol	* host_rt_dev_ptr		2602085						
ANR	2602513	Symbol	* target_rt_dev_ptr		2602085						
ANR	2602514	Symbol	struct_entries		2602085						
ANR	2602515	Symbol	* se		2602085						
ANR	2602516	Symbol	ie		2602085						
ANR	2602517	Symbol	* arg_type		2602085						
ANR	2602518	Symbol	* dst_offsets		2602085						
ANR	2602519	Symbol	ret		2602085						
ANR	2602520	Symbol	TYPE_PTR		2602085						
ANR	2602521	Symbol	NULL		2602085						
ANR	2602522	Symbol	argptr		2602085						
ANR	2602523	Symbol	ie -> host_cmd		2602085						
ANR	2602524	Symbol	get_errno		2602085						
ANR	2602525	Symbol	se -> convert		2602085						
ANR	2602526	Symbol	STRUCT_rtentry		2602085						
ANR	2602527	Symbol	tswapal		2602085						
ANR	2602528	Symbol	cmd		2602085						
ANR	2602529	Symbol	* * se		2602085						
ANR	2602530	Symbol	fd		2602085						
ANR	2602531	Symbol	THUNK_TARGET		2602085						
ANR	2602532	Symbol	* ie		2602085						
ANR	2602533	Symbol	lock_user_string		2602085						
ANR	2602534	Symbol	* se -> convert		2602085						
ANR	2602535	Symbol	se -> field_offsets		2602085						
ANR	2602536	Symbol	src_offsets		2602085						
ANR	2602537	Symbol	* THUNK_HOST		2602085						
ANR	2602538	Symbol	buf_temp		2602085						
ANR	2602539	Symbol	target_rt_dev_ptr		2602085						
ANR	2602540	Symbol	lock_user		2602085						
ANR	2602541	Symbol	se -> nb_fields		2602085						
ANR	2602542	Symbol	target_size		2602085						
ANR	2602543	Symbol	se		2602085						
ANR	2602544	Symbol	arg		2602085						
ANR	2602545	Symbol	dst_offsets		2602085						
ANR	2602546	Symbol	IOC_W		2602085						
ANR	2602547	Symbol	* THUNK_TARGET		2602085						
ANR	2602548	Symbol	i		2602085						
ANR	2602549	Symbol	VERIFY_READ		2602085						
ANR	2602550	Symbol	* arg_type ++		2602085						
ANR	2602551	Symbol	* field_types		2602085						
ANR	2602552	Symbol	ie -> access		2602085						
ANR	2602553	Symbol	TYPE_PTRVOID		2602085						
ANR	2602554	Symbol	thunk_type_size		2602085						
ANR	2602555	Symbol	thunk_convert		2602085						
ANR	2602556	Symbol	THUNK_HOST		2602085						
ANR	2602557	Symbol	* i		2602085						
ANR	2602558	Symbol	ie -> arg_type		2602085						
ANR	2602559	Symbol	TARGET_EFAULT		2602085						
ANR	2602560	Symbol	host_rt_dev_ptr		2602085						
