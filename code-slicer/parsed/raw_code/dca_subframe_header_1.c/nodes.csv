command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1633001	File	/home/p4ultr4n/workplace/ReVeal/raw_code/dca_subframe_header_1.c								
ANR	1633002	Function	dca_subframe_header	1:0:0:11298							
ANR	1633003	FunctionDef	"dca_subframe_header (DCAContext * s , int base_channel , int block_index)"		1633002	0					
ANR	1633004	CompoundStatement		3:0:82:11298	1633002	0					
ANR	1633005	IdentifierDeclStatement	"int j , k ;"	7:4:138:146	1633002	0	True				
ANR	1633006	IdentifierDecl	j		1633002	0					
ANR	1633007	IdentifierDeclType	int		1633002	0					
ANR	1633008	Identifier	j		1633002	1					
ANR	1633009	IdentifierDecl	k		1633002	1					
ANR	1633010	IdentifierDeclType	int		1633002	0					
ANR	1633011	Identifier	k		1633002	1					
ANR	1633012	IfStatement	if ( get_bits_left ( & s -> gb ) < 0 )		1633002	1					
ANR	1633013	Condition	get_bits_left ( & s -> gb ) < 0	11:8:159:183	1633002	0	True				
ANR	1633014	RelationalExpression	get_bits_left ( & s -> gb ) < 0		1633002	0		<			
ANR	1633015	CallExpression	get_bits_left ( & s -> gb )		1633002	0					
ANR	1633016	Callee	get_bits_left		1633002	0					
ANR	1633017	Identifier	get_bits_left		1633002	0					
ANR	1633018	ArgumentList	& s -> gb		1633002	1					
ANR	1633019	Argument	& s -> gb		1633002	0					
ANR	1633020	UnaryOperationExpression	& s -> gb		1633002	0					
ANR	1633021	UnaryOperator	&		1633002	0					
ANR	1633022	PtrMemberAccess	s -> gb		1633002	1					
ANR	1633023	Identifier	s		1633002	0					
ANR	1633024	Identifier	gb		1633002	1					
ANR	1633025	PrimaryExpression	0		1633002	1					
ANR	1633026	ReturnStatement	return AVERROR_INVALIDDATA ;	13:8:195:221	1633002	1	True				
ANR	1633027	Identifier	AVERROR_INVALIDDATA		1633002	0					
ANR	1633028	IfStatement	if ( ! base_channel )		1633002	2					
ANR	1633029	Condition	! base_channel	17:8:234:246	1633002	0	True				
ANR	1633030	UnaryOperationExpression	! base_channel		1633002	0					
ANR	1633031	UnaryOperator	!		1633002	0					
ANR	1633032	Identifier	base_channel		1633002	1					
ANR	1633033	CompoundStatement		15:23:166:166	1633002	1					
ANR	1633034	ExpressionStatement	"s -> subsubframes [ s -> current_subframe ] = get_bits ( & s -> gb , 2 ) + 1"	19:8:260:325	1633002	0	True				
ANR	1633035	AssignmentExpression	"s -> subsubframes [ s -> current_subframe ] = get_bits ( & s -> gb , 2 ) + 1"		1633002	0		=			
ANR	1633036	ArrayIndexing	s -> subsubframes [ s -> current_subframe ]		1633002	0					
ANR	1633037	PtrMemberAccess	s -> subsubframes		1633002	0					
ANR	1633038	Identifier	s		1633002	0					
ANR	1633039	Identifier	subsubframes		1633002	1					
ANR	1633040	PtrMemberAccess	s -> current_subframe		1633002	1					
ANR	1633041	Identifier	s		1633002	0					
ANR	1633042	Identifier	current_subframe		1633002	1					
ANR	1633043	AdditiveExpression	"get_bits ( & s -> gb , 2 ) + 1"		1633002	1		+			
ANR	1633044	CallExpression	"get_bits ( & s -> gb , 2 )"		1633002	0					
ANR	1633045	Callee	get_bits		1633002	0					
ANR	1633046	Identifier	get_bits		1633002	0					
ANR	1633047	ArgumentList	& s -> gb		1633002	1					
ANR	1633048	Argument	& s -> gb		1633002	0					
ANR	1633049	UnaryOperationExpression	& s -> gb		1633002	0					
ANR	1633050	UnaryOperator	&		1633002	0					
ANR	1633051	PtrMemberAccess	s -> gb		1633002	1					
ANR	1633052	Identifier	s		1633002	0					
ANR	1633053	Identifier	gb		1633002	1					
ANR	1633054	Argument	2		1633002	1					
ANR	1633055	PrimaryExpression	2		1633002	0					
ANR	1633056	PrimaryExpression	1		1633002	1					
ANR	1633057	ExpressionStatement	"s -> partial_samples [ s -> current_subframe ] = get_bits ( & s -> gb , 3 )"	21:8:336:397	1633002	1	True				
ANR	1633058	AssignmentExpression	"s -> partial_samples [ s -> current_subframe ] = get_bits ( & s -> gb , 3 )"		1633002	0		=			
ANR	1633059	ArrayIndexing	s -> partial_samples [ s -> current_subframe ]		1633002	0					
ANR	1633060	PtrMemberAccess	s -> partial_samples		1633002	0					
ANR	1633061	Identifier	s		1633002	0					
ANR	1633062	Identifier	partial_samples		1633002	1					
ANR	1633063	PtrMemberAccess	s -> current_subframe		1633002	1					
ANR	1633064	Identifier	s		1633002	0					
ANR	1633065	Identifier	current_subframe		1633002	1					
ANR	1633066	CallExpression	"get_bits ( & s -> gb , 3 )"		1633002	1					
ANR	1633067	Callee	get_bits		1633002	0					
ANR	1633068	Identifier	get_bits		1633002	0					
ANR	1633069	ArgumentList	& s -> gb		1633002	1					
ANR	1633070	Argument	& s -> gb		1633002	0					
ANR	1633071	UnaryOperationExpression	& s -> gb		1633002	0					
ANR	1633072	UnaryOperator	&		1633002	0					
ANR	1633073	PtrMemberAccess	s -> gb		1633002	1					
ANR	1633074	Identifier	s		1633002	0					
ANR	1633075	Identifier	gb		1633002	1					
ANR	1633076	Argument	3		1633002	1					
ANR	1633077	PrimaryExpression	3		1633002	0					
ANR	1633078	ForStatement	for ( j = base_channel ; j < s -> prim_channels ; j ++ )		1633002	3					
ANR	1633079	ForInit	j = base_channel ;	27:9:418:434	1633002	0	True				
ANR	1633080	AssignmentExpression	j = base_channel		1633002	0		=			
ANR	1633081	Identifier	j		1633002	0					
ANR	1633082	Identifier	base_channel		1633002	1					
ANR	1633083	Condition	j < s -> prim_channels	27:27:436:455	1633002	1	True				
ANR	1633084	RelationalExpression	j < s -> prim_channels		1633002	0		<			
ANR	1633085	Identifier	j		1633002	0					
ANR	1633086	PtrMemberAccess	s -> prim_channels		1633002	1					
ANR	1633087	Identifier	s		1633002	0					
ANR	1633088	Identifier	prim_channels		1633002	1					
ANR	1633089	PostIncDecOperationExpression	j ++	27:49:458:460	1633002	2	True				
ANR	1633090	Identifier	j		1633002	0					
ANR	1633091	IncDec	++		1633002	1					
ANR	1633092	CompoundStatement		25:54:380:380	1633002	3					
ANR	1633093	ForStatement	for ( k = 0 ; k < s -> subband_activity [ j ] ; k ++ )		1633002	0					
ANR	1633094	ForInit	k = 0 ;	29:13:479:484	1633002	0	True				
ANR	1633095	AssignmentExpression	k = 0		1633002	0		=			
ANR	1633096	Identifier	k		1633002	0					
ANR	1633097	PrimaryExpression	0		1633002	1					
ANR	1633098	Condition	k < s -> subband_activity [ j ]	29:20:486:511	1633002	1	True				
ANR	1633099	RelationalExpression	k < s -> subband_activity [ j ]		1633002	0		<			
ANR	1633100	Identifier	k		1633002	0					
ANR	1633101	ArrayIndexing	s -> subband_activity [ j ]		1633002	1					
ANR	1633102	PtrMemberAccess	s -> subband_activity		1633002	0					
ANR	1633103	Identifier	s		1633002	0					
ANR	1633104	Identifier	subband_activity		1633002	1					
ANR	1633105	Identifier	j		1633002	1					
ANR	1633106	PostIncDecOperationExpression	k ++	29:48:514:516	1633002	2	True				
ANR	1633107	Identifier	k		1633002	0					
ANR	1633108	IncDec	++		1633002	1					
ANR	1633109	ExpressionStatement	"s -> prediction_mode [ j ] [ k ] = get_bits ( & s -> gb , 1 )"	31:12:532:578	1633002	3	True				
ANR	1633110	AssignmentExpression	"s -> prediction_mode [ j ] [ k ] = get_bits ( & s -> gb , 1 )"		1633002	0		=			
ANR	1633111	ArrayIndexing	s -> prediction_mode [ j ] [ k ]		1633002	0					
ANR	1633112	ArrayIndexing	s -> prediction_mode [ j ]		1633002	0					
ANR	1633113	PtrMemberAccess	s -> prediction_mode		1633002	0					
ANR	1633114	Identifier	s		1633002	0					
ANR	1633115	Identifier	prediction_mode		1633002	1					
ANR	1633116	Identifier	j		1633002	1					
ANR	1633117	Identifier	k		1633002	1					
ANR	1633118	CallExpression	"get_bits ( & s -> gb , 1 )"		1633002	1					
ANR	1633119	Callee	get_bits		1633002	0					
ANR	1633120	Identifier	get_bits		1633002	0					
ANR	1633121	ArgumentList	& s -> gb		1633002	1					
ANR	1633122	Argument	& s -> gb		1633002	0					
ANR	1633123	UnaryOperationExpression	& s -> gb		1633002	0					
ANR	1633124	UnaryOperator	&		1633002	0					
ANR	1633125	PtrMemberAccess	s -> gb		1633002	1					
ANR	1633126	Identifier	s		1633002	0					
ANR	1633127	Identifier	gb		1633002	1					
ANR	1633128	Argument	1		1633002	1					
ANR	1633129	PrimaryExpression	1		1633002	0					
ANR	1633130	ForStatement	for ( j = base_channel ; j < s -> prim_channels ; j ++ )		1633002	4					
ANR	1633131	ForInit	j = base_channel ;	39:9:634:650	1633002	0	True				
ANR	1633132	AssignmentExpression	j = base_channel		1633002	0		=			
ANR	1633133	Identifier	j		1633002	0					
ANR	1633134	Identifier	base_channel		1633002	1					
ANR	1633135	Condition	j < s -> prim_channels	39:27:652:671	1633002	1	True				
ANR	1633136	RelationalExpression	j < s -> prim_channels		1633002	0		<			
ANR	1633137	Identifier	j		1633002	0					
ANR	1633138	PtrMemberAccess	s -> prim_channels		1633002	1					
ANR	1633139	Identifier	s		1633002	0					
ANR	1633140	Identifier	prim_channels		1633002	1					
ANR	1633141	PostIncDecOperationExpression	j ++	39:49:674:676	1633002	2	True				
ANR	1633142	Identifier	j		1633002	0					
ANR	1633143	IncDec	++		1633002	1					
ANR	1633144	CompoundStatement		37:54:596:596	1633002	3					
ANR	1633145	ForStatement	for ( k = 0 ; k < s -> subband_activity [ j ] ; k ++ )		1633002	0					
ANR	1633146	ForInit	k = 0 ;	41:13:695:700	1633002	0	True				
ANR	1633147	AssignmentExpression	k = 0		1633002	0		=			
ANR	1633148	Identifier	k		1633002	0					
ANR	1633149	PrimaryExpression	0		1633002	1					
ANR	1633150	Condition	k < s -> subband_activity [ j ]	41:20:702:727	1633002	1	True				
ANR	1633151	RelationalExpression	k < s -> subband_activity [ j ]		1633002	0		<			
ANR	1633152	Identifier	k		1633002	0					
ANR	1633153	ArrayIndexing	s -> subband_activity [ j ]		1633002	1					
ANR	1633154	PtrMemberAccess	s -> subband_activity		1633002	0					
ANR	1633155	Identifier	s		1633002	0					
ANR	1633156	Identifier	subband_activity		1633002	1					
ANR	1633157	Identifier	j		1633002	1					
ANR	1633158	PostIncDecOperationExpression	k ++	41:48:730:732	1633002	2	True				
ANR	1633159	Identifier	k		1633002	0					
ANR	1633160	IncDec	++		1633002	1					
ANR	1633161	CompoundStatement		39:53:652:652	1633002	3					
ANR	1633162	IfStatement	if ( s -> prediction_mode [ j ] [ k ] > 0 )		1633002	0					
ANR	1633163	Condition	s -> prediction_mode [ j ] [ k ] > 0	43:16:754:781	1633002	0	True				
ANR	1633164	RelationalExpression	s -> prediction_mode [ j ] [ k ] > 0		1633002	0		>			
ANR	1633165	ArrayIndexing	s -> prediction_mode [ j ] [ k ]		1633002	0					
ANR	1633166	ArrayIndexing	s -> prediction_mode [ j ]		1633002	0					
ANR	1633167	PtrMemberAccess	s -> prediction_mode		1633002	0					
ANR	1633168	Identifier	s		1633002	0					
ANR	1633169	Identifier	prediction_mode		1633002	1					
ANR	1633170	Identifier	j		1633002	1					
ANR	1633171	Identifier	k		1633002	1					
ANR	1633172	PrimaryExpression	0		1633002	1					
ANR	1633173	CompoundStatement		41:46:701:701	1633002	1					
ANR	1633174	ExpressionStatement	"s -> prediction_vq [ j ] [ k ] = get_bits ( & s -> gb , 12 )"	47:16:862:907	1633002	0	True				
ANR	1633175	AssignmentExpression	"s -> prediction_vq [ j ] [ k ] = get_bits ( & s -> gb , 12 )"		1633002	0		=			
ANR	1633176	ArrayIndexing	s -> prediction_vq [ j ] [ k ]		1633002	0					
ANR	1633177	ArrayIndexing	s -> prediction_vq [ j ]		1633002	0					
ANR	1633178	PtrMemberAccess	s -> prediction_vq		1633002	0					
ANR	1633179	Identifier	s		1633002	0					
ANR	1633180	Identifier	prediction_vq		1633002	1					
ANR	1633181	Identifier	j		1633002	1					
ANR	1633182	Identifier	k		1633002	1					
ANR	1633183	CallExpression	"get_bits ( & s -> gb , 12 )"		1633002	1					
ANR	1633184	Callee	get_bits		1633002	0					
ANR	1633185	Identifier	get_bits		1633002	0					
ANR	1633186	ArgumentList	& s -> gb		1633002	1					
ANR	1633187	Argument	& s -> gb		1633002	0					
ANR	1633188	UnaryOperationExpression	& s -> gb		1633002	0					
ANR	1633189	UnaryOperator	&		1633002	0					
ANR	1633190	PtrMemberAccess	s -> gb		1633002	1					
ANR	1633191	Identifier	s		1633002	0					
ANR	1633192	Identifier	gb		1633002	1					
ANR	1633193	Argument	12		1633002	1					
ANR	1633194	PrimaryExpression	12		1633002	0					
ANR	1633195	ForStatement	for ( j = base_channel ; j < s -> prim_channels ; j ++ )		1633002	5					
ANR	1633196	ForInit	j = base_channel ;	59:9:986:1002	1633002	0	True				
ANR	1633197	AssignmentExpression	j = base_channel		1633002	0		=			
ANR	1633198	Identifier	j		1633002	0					
ANR	1633199	Identifier	base_channel		1633002	1					
ANR	1633200	Condition	j < s -> prim_channels	59:27:1004:1023	1633002	1	True				
ANR	1633201	RelationalExpression	j < s -> prim_channels		1633002	0		<			
ANR	1633202	Identifier	j		1633002	0					
ANR	1633203	PtrMemberAccess	s -> prim_channels		1633002	1					
ANR	1633204	Identifier	s		1633002	0					
ANR	1633205	Identifier	prim_channels		1633002	1					
ANR	1633206	PostIncDecOperationExpression	j ++	59:49:1026:1028	1633002	2	True				
ANR	1633207	Identifier	j		1633002	0					
ANR	1633208	IncDec	++		1633002	1					
ANR	1633209	CompoundStatement		57:54:948:948	1633002	3					
ANR	1633210	ForStatement	for ( k = 0 ; k < s -> vq_start_subband [ j ] ; k ++ )		1633002	0					
ANR	1633211	ForInit	k = 0 ;	61:13:1047:1052	1633002	0	True				
ANR	1633212	AssignmentExpression	k = 0		1633002	0		=			
ANR	1633213	Identifier	k		1633002	0					
ANR	1633214	PrimaryExpression	0		1633002	1					
ANR	1633215	Condition	k < s -> vq_start_subband [ j ]	61:20:1054:1079	1633002	1	True				
ANR	1633216	RelationalExpression	k < s -> vq_start_subband [ j ]		1633002	0		<			
ANR	1633217	Identifier	k		1633002	0					
ANR	1633218	ArrayIndexing	s -> vq_start_subband [ j ]		1633002	1					
ANR	1633219	PtrMemberAccess	s -> vq_start_subband		1633002	0					
ANR	1633220	Identifier	s		1633002	0					
ANR	1633221	Identifier	vq_start_subband		1633002	1					
ANR	1633222	Identifier	j		1633002	1					
ANR	1633223	PostIncDecOperationExpression	k ++	61:48:1082:1084	1633002	2	True				
ANR	1633224	Identifier	k		1633002	0					
ANR	1633225	IncDec	++		1633002	1					
ANR	1633226	CompoundStatement		59:53:1004:1004	1633002	3					
ANR	1633227	IfStatement	if ( s -> bitalloc_huffman [ j ] == 6 )		1633002	0					
ANR	1633228	Condition	s -> bitalloc_huffman [ j ] == 6	63:16:1106:1132	1633002	0	True				
ANR	1633229	EqualityExpression	s -> bitalloc_huffman [ j ] == 6		1633002	0		==			
ANR	1633230	ArrayIndexing	s -> bitalloc_huffman [ j ]		1633002	0					
ANR	1633231	PtrMemberAccess	s -> bitalloc_huffman		1633002	0					
ANR	1633232	Identifier	s		1633002	0					
ANR	1633233	Identifier	bitalloc_huffman		1633002	1					
ANR	1633234	Identifier	j		1633002	1					
ANR	1633235	PrimaryExpression	6		1633002	1					
ANR	1633236	ExpressionStatement	"s -> bitalloc [ j ] [ k ] = get_bits ( & s -> gb , 5 )"	65:16:1152:1191	1633002	1	True				
ANR	1633237	AssignmentExpression	"s -> bitalloc [ j ] [ k ] = get_bits ( & s -> gb , 5 )"		1633002	0		=			
ANR	1633238	ArrayIndexing	s -> bitalloc [ j ] [ k ]		1633002	0					
ANR	1633239	ArrayIndexing	s -> bitalloc [ j ]		1633002	0					
ANR	1633240	PtrMemberAccess	s -> bitalloc		1633002	0					
ANR	1633241	Identifier	s		1633002	0					
ANR	1633242	Identifier	bitalloc		1633002	1					
ANR	1633243	Identifier	j		1633002	1					
ANR	1633244	Identifier	k		1633002	1					
ANR	1633245	CallExpression	"get_bits ( & s -> gb , 5 )"		1633002	1					
ANR	1633246	Callee	get_bits		1633002	0					
ANR	1633247	Identifier	get_bits		1633002	0					
ANR	1633248	ArgumentList	& s -> gb		1633002	1					
ANR	1633249	Argument	& s -> gb		1633002	0					
ANR	1633250	UnaryOperationExpression	& s -> gb		1633002	0					
ANR	1633251	UnaryOperator	&		1633002	0					
ANR	1633252	PtrMemberAccess	s -> gb		1633002	1					
ANR	1633253	Identifier	s		1633002	0					
ANR	1633254	Identifier	gb		1633002	1					
ANR	1633255	Argument	5		1633002	1					
ANR	1633256	PrimaryExpression	5		1633002	0					
ANR	1633257	ElseStatement	else		1633002	0					
ANR	1633258	IfStatement	if ( s -> bitalloc_huffman [ j ] == 5 )		1633002	0					
ANR	1633259	Condition	s -> bitalloc_huffman [ j ] == 5	67:21:1215:1241	1633002	0	True				
ANR	1633260	EqualityExpression	s -> bitalloc_huffman [ j ] == 5		1633002	0		==			
ANR	1633261	ArrayIndexing	s -> bitalloc_huffman [ j ]		1633002	0					
ANR	1633262	PtrMemberAccess	s -> bitalloc_huffman		1633002	0					
ANR	1633263	Identifier	s		1633002	0					
ANR	1633264	Identifier	bitalloc_huffman		1633002	1					
ANR	1633265	Identifier	j		1633002	1					
ANR	1633266	PrimaryExpression	5		1633002	1					
ANR	1633267	ExpressionStatement	"s -> bitalloc [ j ] [ k ] = get_bits ( & s -> gb , 4 )"	69:16:1261:1300	1633002	1	True				
ANR	1633268	AssignmentExpression	"s -> bitalloc [ j ] [ k ] = get_bits ( & s -> gb , 4 )"		1633002	0		=			
ANR	1633269	ArrayIndexing	s -> bitalloc [ j ] [ k ]		1633002	0					
ANR	1633270	ArrayIndexing	s -> bitalloc [ j ]		1633002	0					
ANR	1633271	PtrMemberAccess	s -> bitalloc		1633002	0					
ANR	1633272	Identifier	s		1633002	0					
ANR	1633273	Identifier	bitalloc		1633002	1					
ANR	1633274	Identifier	j		1633002	1					
ANR	1633275	Identifier	k		1633002	1					
ANR	1633276	CallExpression	"get_bits ( & s -> gb , 4 )"		1633002	1					
ANR	1633277	Callee	get_bits		1633002	0					
ANR	1633278	Identifier	get_bits		1633002	0					
ANR	1633279	ArgumentList	& s -> gb		1633002	1					
ANR	1633280	Argument	& s -> gb		1633002	0					
ANR	1633281	UnaryOperationExpression	& s -> gb		1633002	0					
ANR	1633282	UnaryOperator	&		1633002	0					
ANR	1633283	PtrMemberAccess	s -> gb		1633002	1					
ANR	1633284	Identifier	s		1633002	0					
ANR	1633285	Identifier	gb		1633002	1					
ANR	1633286	Argument	4		1633002	1					
ANR	1633287	PrimaryExpression	4		1633002	0					
ANR	1633288	ElseStatement	else		1633002	0					
ANR	1633289	IfStatement	if ( s -> bitalloc_huffman [ j ] == 7 )		1633002	0					
ANR	1633290	Condition	s -> bitalloc_huffman [ j ] == 7	71:21:1324:1350	1633002	0	True				
ANR	1633291	EqualityExpression	s -> bitalloc_huffman [ j ] == 7		1633002	0		==			
ANR	1633292	ArrayIndexing	s -> bitalloc_huffman [ j ]		1633002	0					
ANR	1633293	PtrMemberAccess	s -> bitalloc_huffman		1633002	0					
ANR	1633294	Identifier	s		1633002	0					
ANR	1633295	Identifier	bitalloc_huffman		1633002	1					
ANR	1633296	Identifier	j		1633002	1					
ANR	1633297	PrimaryExpression	7		1633002	1					
ANR	1633298	CompoundStatement		69:50:1270:1270	1633002	1					
ANR	1633299	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_ERROR , ""Invalid bit allocation index\\n"" )"	73:16:1372:1460	1633002	0	True				
ANR	1633300	CallExpression	"av_log ( s -> avctx , AV_LOG_ERROR , ""Invalid bit allocation index\\n"" )"		1633002	0					
ANR	1633301	Callee	av_log		1633002	0					
ANR	1633302	Identifier	av_log		1633002	0					
ANR	1633303	ArgumentList	s -> avctx		1633002	1					
ANR	1633304	Argument	s -> avctx		1633002	0					
ANR	1633305	PtrMemberAccess	s -> avctx		1633002	0					
ANR	1633306	Identifier	s		1633002	0					
ANR	1633307	Identifier	avctx		1633002	1					
ANR	1633308	Argument	AV_LOG_ERROR		1633002	1					
ANR	1633309	Identifier	AV_LOG_ERROR		1633002	0					
ANR	1633310	Argument	"""Invalid bit allocation index\\n"""		1633002	2					
ANR	1633311	PrimaryExpression	"""Invalid bit allocation index\\n"""		1633002	0					
ANR	1633312	ReturnStatement	return AVERROR_INVALIDDATA ;	77:16:1479:1505	1633002	1	True				
ANR	1633313	Identifier	AVERROR_INVALIDDATA		1633002	0					
ANR	1633314	ElseStatement	else		1633002	0					
ANR	1633315	CompoundStatement		77:19:1444:1444	1633002	0					
ANR	1633316	ExpressionStatement	"s -> bitalloc [ j ] [ k ] = get_bitalloc ( & s -> gb , & dca_bitalloc_index , s -> bitalloc_huffman [ j ] )"	81:16:1546:1652	1633002	0	True				
ANR	1633317	AssignmentExpression	"s -> bitalloc [ j ] [ k ] = get_bitalloc ( & s -> gb , & dca_bitalloc_index , s -> bitalloc_huffman [ j ] )"		1633002	0		=			
ANR	1633318	ArrayIndexing	s -> bitalloc [ j ] [ k ]		1633002	0					
ANR	1633319	ArrayIndexing	s -> bitalloc [ j ]		1633002	0					
ANR	1633320	PtrMemberAccess	s -> bitalloc		1633002	0					
ANR	1633321	Identifier	s		1633002	0					
ANR	1633322	Identifier	bitalloc		1633002	1					
ANR	1633323	Identifier	j		1633002	1					
ANR	1633324	Identifier	k		1633002	1					
ANR	1633325	CallExpression	"get_bitalloc ( & s -> gb , & dca_bitalloc_index , s -> bitalloc_huffman [ j ] )"		1633002	1					
ANR	1633326	Callee	get_bitalloc		1633002	0					
ANR	1633327	Identifier	get_bitalloc		1633002	0					
ANR	1633328	ArgumentList	& s -> gb		1633002	1					
ANR	1633329	Argument	& s -> gb		1633002	0					
ANR	1633330	UnaryOperationExpression	& s -> gb		1633002	0					
ANR	1633331	UnaryOperator	&		1633002	0					
ANR	1633332	PtrMemberAccess	s -> gb		1633002	1					
ANR	1633333	Identifier	s		1633002	0					
ANR	1633334	Identifier	gb		1633002	1					
ANR	1633335	Argument	& dca_bitalloc_index		1633002	1					
ANR	1633336	UnaryOperationExpression	& dca_bitalloc_index		1633002	0					
ANR	1633337	UnaryOperator	&		1633002	0					
ANR	1633338	Identifier	dca_bitalloc_index		1633002	1					
ANR	1633339	Argument	s -> bitalloc_huffman [ j ]		1633002	2					
ANR	1633340	ArrayIndexing	s -> bitalloc_huffman [ j ]		1633002	0					
ANR	1633341	PtrMemberAccess	s -> bitalloc_huffman		1633002	0					
ANR	1633342	Identifier	s		1633002	0					
ANR	1633343	Identifier	bitalloc_huffman		1633002	1					
ANR	1633344	Identifier	j		1633002	1					
ANR	1633345	IfStatement	if ( s -> bitalloc [ j ] [ k ] > 26 )		1633002	1					
ANR	1633346	Condition	s -> bitalloc [ j ] [ k ] > 26	89:16:1688:1709	1633002	0	True				
ANR	1633347	RelationalExpression	s -> bitalloc [ j ] [ k ] > 26		1633002	0		>			
ANR	1633348	ArrayIndexing	s -> bitalloc [ j ] [ k ]		1633002	0					
ANR	1633349	ArrayIndexing	s -> bitalloc [ j ]		1633002	0					
ANR	1633350	PtrMemberAccess	s -> bitalloc		1633002	0					
ANR	1633351	Identifier	s		1633002	0					
ANR	1633352	Identifier	bitalloc		1633002	1					
ANR	1633353	Identifier	j		1633002	1					
ANR	1633354	Identifier	k		1633002	1					
ANR	1633355	PrimaryExpression	26		1633002	1					
ANR	1633356	CompoundStatement		87:40:1629:1629	1633002	1					
ANR	1633357	ReturnStatement	return AVERROR_INVALIDDATA ;	95:16:1877:1903	1633002	0	True				
ANR	1633358	Identifier	AVERROR_INVALIDDATA		1633002	0					
ANR	1633359	ForStatement	for ( j = base_channel ; j < s -> prim_channels ; j ++ )		1633002	6					
ANR	1633360	ForInit	j = base_channel ;	107:9:1977:1993	1633002	0	True				
ANR	1633361	AssignmentExpression	j = base_channel		1633002	0		=			
ANR	1633362	Identifier	j		1633002	0					
ANR	1633363	Identifier	base_channel		1633002	1					
ANR	1633364	Condition	j < s -> prim_channels	107:27:1995:2014	1633002	1	True				
ANR	1633365	RelationalExpression	j < s -> prim_channels		1633002	0		<			
ANR	1633366	Identifier	j		1633002	0					
ANR	1633367	PtrMemberAccess	s -> prim_channels		1633002	1					
ANR	1633368	Identifier	s		1633002	0					
ANR	1633369	Identifier	prim_channels		1633002	1					
ANR	1633370	PostIncDecOperationExpression	j ++	107:49:2017:2019	1633002	2	True				
ANR	1633371	Identifier	j		1633002	0					
ANR	1633372	IncDec	++		1633002	1					
ANR	1633373	CompoundStatement		105:54:1939:1939	1633002	3					
ANR	1633374	ForStatement	for ( k = 0 ; k < s -> subband_activity [ j ] ; k ++ )		1633002	0					
ANR	1633375	ForInit	k = 0 ;	109:13:2038:2043	1633002	0	True				
ANR	1633376	AssignmentExpression	k = 0		1633002	0		=			
ANR	1633377	Identifier	k		1633002	0					
ANR	1633378	PrimaryExpression	0		1633002	1					
ANR	1633379	Condition	k < s -> subband_activity [ j ]	109:20:2045:2070	1633002	1	True				
ANR	1633380	RelationalExpression	k < s -> subband_activity [ j ]		1633002	0		<			
ANR	1633381	Identifier	k		1633002	0					
ANR	1633382	ArrayIndexing	s -> subband_activity [ j ]		1633002	1					
ANR	1633383	PtrMemberAccess	s -> subband_activity		1633002	0					
ANR	1633384	Identifier	s		1633002	0					
ANR	1633385	Identifier	subband_activity		1633002	1					
ANR	1633386	Identifier	j		1633002	1					
ANR	1633387	PostIncDecOperationExpression	k ++	109:48:2073:2075	1633002	2	True				
ANR	1633388	Identifier	k		1633002	0					
ANR	1633389	IncDec	++		1633002	1					
ANR	1633390	CompoundStatement		107:53:1995:1995	1633002	3					
ANR	1633391	ExpressionStatement	s -> transition_mode [ j ] [ k ] = 0	111:12:2093:2121	1633002	0	True				
ANR	1633392	AssignmentExpression	s -> transition_mode [ j ] [ k ] = 0		1633002	0		=			
ANR	1633393	ArrayIndexing	s -> transition_mode [ j ] [ k ]		1633002	0					
ANR	1633394	ArrayIndexing	s -> transition_mode [ j ]		1633002	0					
ANR	1633395	PtrMemberAccess	s -> transition_mode		1633002	0					
ANR	1633396	Identifier	s		1633002	0					
ANR	1633397	Identifier	transition_mode		1633002	1					
ANR	1633398	Identifier	j		1633002	1					
ANR	1633399	Identifier	k		1633002	1					
ANR	1633400	PrimaryExpression	0		1633002	1					
ANR	1633401	IfStatement	if ( s -> subsubframes [ s -> current_subframe ] > 1 && k < s -> vq_start_subband [ j ] && s -> bitalloc [ j ] [ k ] > 0 )		1633002	1					
ANR	1633402	Condition	s -> subsubframes [ s -> current_subframe ] > 1 && k < s -> vq_start_subband [ j ] && s -> bitalloc [ j ] [ k ] > 0	113:16:2140:2251	1633002	0	True				
ANR	1633403	AndExpression	s -> subsubframes [ s -> current_subframe ] > 1 && k < s -> vq_start_subband [ j ] && s -> bitalloc [ j ] [ k ] > 0		1633002	0		&&			
ANR	1633404	RelationalExpression	s -> subsubframes [ s -> current_subframe ] > 1		1633002	0		>			
ANR	1633405	ArrayIndexing	s -> subsubframes [ s -> current_subframe ]		1633002	0					
ANR	1633406	PtrMemberAccess	s -> subsubframes		1633002	0					
ANR	1633407	Identifier	s		1633002	0					
ANR	1633408	Identifier	subsubframes		1633002	1					
ANR	1633409	PtrMemberAccess	s -> current_subframe		1633002	1					
ANR	1633410	Identifier	s		1633002	0					
ANR	1633411	Identifier	current_subframe		1633002	1					
ANR	1633412	PrimaryExpression	1		1633002	1					
ANR	1633413	AndExpression	k < s -> vq_start_subband [ j ] && s -> bitalloc [ j ] [ k ] > 0		1633002	1		&&			
ANR	1633414	RelationalExpression	k < s -> vq_start_subband [ j ]		1633002	0		<			
ANR	1633415	Identifier	k		1633002	0					
ANR	1633416	ArrayIndexing	s -> vq_start_subband [ j ]		1633002	1					
ANR	1633417	PtrMemberAccess	s -> vq_start_subband		1633002	0					
ANR	1633418	Identifier	s		1633002	0					
ANR	1633419	Identifier	vq_start_subband		1633002	1					
ANR	1633420	Identifier	j		1633002	1					
ANR	1633421	RelationalExpression	s -> bitalloc [ j ] [ k ] > 0		1633002	1		>			
ANR	1633422	ArrayIndexing	s -> bitalloc [ j ] [ k ]		1633002	0					
ANR	1633423	ArrayIndexing	s -> bitalloc [ j ]		1633002	0					
ANR	1633424	PtrMemberAccess	s -> bitalloc		1633002	0					
ANR	1633425	Identifier	s		1633002	0					
ANR	1633426	Identifier	bitalloc		1633002	1					
ANR	1633427	Identifier	j		1633002	1					
ANR	1633428	Identifier	k		1633002	1					
ANR	1633429	PrimaryExpression	0		1633002	1					
ANR	1633430	CompoundStatement		113:69:2171:2171	1633002	1					
ANR	1633431	ExpressionStatement	"s -> transition_mode [ j ] [ k ] = get_bitalloc ( & s -> gb , & dca_tmode , s -> transient_huffman [ j ] )"	117:16:2273:2378	1633002	0	True				
ANR	1633432	AssignmentExpression	"s -> transition_mode [ j ] [ k ] = get_bitalloc ( & s -> gb , & dca_tmode , s -> transient_huffman [ j ] )"		1633002	0		=			
ANR	1633433	ArrayIndexing	s -> transition_mode [ j ] [ k ]		1633002	0					
ANR	1633434	ArrayIndexing	s -> transition_mode [ j ]		1633002	0					
ANR	1633435	PtrMemberAccess	s -> transition_mode		1633002	0					
ANR	1633436	Identifier	s		1633002	0					
ANR	1633437	Identifier	transition_mode		1633002	1					
ANR	1633438	Identifier	j		1633002	1					
ANR	1633439	Identifier	k		1633002	1					
ANR	1633440	CallExpression	"get_bitalloc ( & s -> gb , & dca_tmode , s -> transient_huffman [ j ] )"		1633002	1					
ANR	1633441	Callee	get_bitalloc		1633002	0					
ANR	1633442	Identifier	get_bitalloc		1633002	0					
ANR	1633443	ArgumentList	& s -> gb		1633002	1					
ANR	1633444	Argument	& s -> gb		1633002	0					
ANR	1633445	UnaryOperationExpression	& s -> gb		1633002	0					
ANR	1633446	UnaryOperator	&		1633002	0					
ANR	1633447	PtrMemberAccess	s -> gb		1633002	1					
ANR	1633448	Identifier	s		1633002	0					
ANR	1633449	Identifier	gb		1633002	1					
ANR	1633450	Argument	& dca_tmode		1633002	1					
ANR	1633451	UnaryOperationExpression	& dca_tmode		1633002	0					
ANR	1633452	UnaryOperator	&		1633002	0					
ANR	1633453	Identifier	dca_tmode		1633002	1					
ANR	1633454	Argument	s -> transient_huffman [ j ]		1633002	2					
ANR	1633455	ArrayIndexing	s -> transient_huffman [ j ]		1633002	0					
ANR	1633456	PtrMemberAccess	s -> transient_huffman		1633002	0					
ANR	1633457	Identifier	s		1633002	0					
ANR	1633458	Identifier	transient_huffman		1633002	1					
ANR	1633459	Identifier	j		1633002	1					
ANR	1633460	IfStatement	if ( get_bits_left ( & s -> gb ) < 0 )		1633002	7					
ANR	1633461	Condition	get_bits_left ( & s -> gb ) < 0	129:8:2424:2448	1633002	0	True				
ANR	1633462	RelationalExpression	get_bits_left ( & s -> gb ) < 0		1633002	0		<			
ANR	1633463	CallExpression	get_bits_left ( & s -> gb )		1633002	0					
ANR	1633464	Callee	get_bits_left		1633002	0					
ANR	1633465	Identifier	get_bits_left		1633002	0					
ANR	1633466	ArgumentList	& s -> gb		1633002	1					
ANR	1633467	Argument	& s -> gb		1633002	0					
ANR	1633468	UnaryOperationExpression	& s -> gb		1633002	0					
ANR	1633469	UnaryOperator	&		1633002	0					
ANR	1633470	PtrMemberAccess	s -> gb		1633002	1					
ANR	1633471	Identifier	s		1633002	0					
ANR	1633472	Identifier	gb		1633002	1					
ANR	1633473	PrimaryExpression	0		1633002	1					
ANR	1633474	ReturnStatement	return AVERROR_INVALIDDATA ;	131:8:2460:2486	1633002	1	True				
ANR	1633475	Identifier	AVERROR_INVALIDDATA		1633002	0					
ANR	1633476	ForStatement	for ( j = base_channel ; j < s -> prim_channels ; j ++ )		1633002	8					
ANR	1633477	ForInit	j = base_channel ;	135:9:2500:2516	1633002	0	True				
ANR	1633478	AssignmentExpression	j = base_channel		1633002	0		=			
ANR	1633479	Identifier	j		1633002	0					
ANR	1633480	Identifier	base_channel		1633002	1					
ANR	1633481	Condition	j < s -> prim_channels	135:27:2518:2537	1633002	1	True				
ANR	1633482	RelationalExpression	j < s -> prim_channels		1633002	0		<			
ANR	1633483	Identifier	j		1633002	0					
ANR	1633484	PtrMemberAccess	s -> prim_channels		1633002	1					
ANR	1633485	Identifier	s		1633002	0					
ANR	1633486	Identifier	prim_channels		1633002	1					
ANR	1633487	PostIncDecOperationExpression	j ++	135:49:2540:2542	1633002	2	True				
ANR	1633488	Identifier	j		1633002	0					
ANR	1633489	IncDec	++		1633002	1					
ANR	1633490	CompoundStatement		137:8:2511:2534	1633002	3					
ANR	1633491	IdentifierDeclStatement	const uint32_t * scale_table ;	137:8:2556:2583	1633002	0	True				
ANR	1633492	IdentifierDecl	* scale_table		1633002	0					
ANR	1633493	IdentifierDeclType	const uint32_t *		1633002	0					
ANR	1633494	Identifier	scale_table		1633002	1					
ANR	1633495	IdentifierDeclStatement	"int scale_sum , log_size ;"	139:8:2594:2617	1633002	1	True				
ANR	1633496	IdentifierDecl	scale_sum		1633002	0					
ANR	1633497	IdentifierDeclType	int		1633002	0					
ANR	1633498	Identifier	scale_sum		1633002	1					
ANR	1633499	IdentifierDecl	log_size		1633002	1					
ANR	1633500	IdentifierDeclType	int		1633002	0					
ANR	1633501	Identifier	log_size		1633002	1					
ANR	1633502	ExpressionStatement	"memset ( s -> scale_factor [ j ] , 0 , s -> subband_activity [ j ] * sizeof ( s -> scale_factor [ 0 ] [ 0 ] [ 0 ] ) * 2 )"	143:8:2630:2738	1633002	2	True				
ANR	1633503	CallExpression	"memset ( s -> scale_factor [ j ] , 0 , s -> subband_activity [ j ] * sizeof ( s -> scale_factor [ 0 ] [ 0 ] [ 0 ] ) * 2 )"		1633002	0					
ANR	1633504	Callee	memset		1633002	0					
ANR	1633505	Identifier	memset		1633002	0					
ANR	1633506	ArgumentList	s -> scale_factor [ j ]		1633002	1					
ANR	1633507	Argument	s -> scale_factor [ j ]		1633002	0					
ANR	1633508	ArrayIndexing	s -> scale_factor [ j ]		1633002	0					
ANR	1633509	PtrMemberAccess	s -> scale_factor		1633002	0					
ANR	1633510	Identifier	s		1633002	0					
ANR	1633511	Identifier	scale_factor		1633002	1					
ANR	1633512	Identifier	j		1633002	1					
ANR	1633513	Argument	0		1633002	1					
ANR	1633514	PrimaryExpression	0		1633002	0					
ANR	1633515	Argument	s -> subband_activity [ j ] * sizeof ( s -> scale_factor [ 0 ] [ 0 ] [ 0 ] ) * 2		1633002	2					
ANR	1633516	MultiplicativeExpression	s -> subband_activity [ j ] * sizeof ( s -> scale_factor [ 0 ] [ 0 ] [ 0 ] ) * 2		1633002	0		*			
ANR	1633517	ArrayIndexing	s -> subband_activity [ j ]		1633002	0					
ANR	1633518	PtrMemberAccess	s -> subband_activity		1633002	0					
ANR	1633519	Identifier	s		1633002	0					
ANR	1633520	Identifier	subband_activity		1633002	1					
ANR	1633521	Identifier	j		1633002	1					
ANR	1633522	MultiplicativeExpression	sizeof ( s -> scale_factor [ 0 ] [ 0 ] [ 0 ] ) * 2		1633002	1		*			
ANR	1633523	SizeofExpression	sizeof ( s -> scale_factor [ 0 ] [ 0 ] [ 0 ] )		1633002	0					
ANR	1633524	Sizeof	sizeof		1633002	0					
ANR	1633525	ArrayIndexing	s -> scale_factor [ 0 ] [ 0 ] [ 0 ]		1633002	1					
ANR	1633526	ArrayIndexing	s -> scale_factor [ 0 ] [ 0 ]		1633002	0					
ANR	1633527	ArrayIndexing	s -> scale_factor [ 0 ]		1633002	0					
ANR	1633528	PtrMemberAccess	s -> scale_factor		1633002	0					
ANR	1633529	Identifier	s		1633002	0					
ANR	1633530	Identifier	scale_factor		1633002	1					
ANR	1633531	PrimaryExpression	0		1633002	1					
ANR	1633532	PrimaryExpression	0		1633002	1					
ANR	1633533	PrimaryExpression	0		1633002	1					
ANR	1633534	PrimaryExpression	2		1633002	1					
ANR	1633535	IfStatement	if ( s -> scalefactor_huffman [ j ] == 6 )		1633002	3					
ANR	1633536	Condition	s -> scalefactor_huffman [ j ] == 6	149:12:2755:2784	1633002	0	True				
ANR	1633537	EqualityExpression	s -> scalefactor_huffman [ j ] == 6		1633002	0		==			
ANR	1633538	ArrayIndexing	s -> scalefactor_huffman [ j ]		1633002	0					
ANR	1633539	PtrMemberAccess	s -> scalefactor_huffman		1633002	0					
ANR	1633540	Identifier	s		1633002	0					
ANR	1633541	Identifier	scalefactor_huffman		1633002	1					
ANR	1633542	Identifier	j		1633002	1					
ANR	1633543	PrimaryExpression	6		1633002	1					
ANR	1633544	CompoundStatement		147:44:2704:2704	1633002	1					
ANR	1633545	ExpressionStatement	scale_table = scale_factor_quant7	151:12:2802:2835	1633002	0	True				
ANR	1633546	AssignmentExpression	scale_table = scale_factor_quant7		1633002	0		=			
ANR	1633547	Identifier	scale_table		1633002	0					
ANR	1633548	Identifier	scale_factor_quant7		1633002	1					
ANR	1633549	ExpressionStatement	log_size = 7	153:12:2850:2862	1633002	1	True				
ANR	1633550	AssignmentExpression	log_size = 7		1633002	0		=			
ANR	1633551	Identifier	log_size		1633002	0					
ANR	1633552	PrimaryExpression	7		1633002	1					
ANR	1633553	ElseStatement	else		1633002	0					
ANR	1633554	CompoundStatement		153:15:2797:2797	1633002	0					
ANR	1633555	ExpressionStatement	scale_table = scale_factor_quant6	157:12:2895:2928	1633002	0	True				
ANR	1633556	AssignmentExpression	scale_table = scale_factor_quant6		1633002	0		=			
ANR	1633557	Identifier	scale_table		1633002	0					
ANR	1633558	Identifier	scale_factor_quant6		1633002	1					
ANR	1633559	ExpressionStatement	log_size = 6	159:12:2943:2955	1633002	1	True				
ANR	1633560	AssignmentExpression	log_size = 6		1633002	0		=			
ANR	1633561	Identifier	log_size		1633002	0					
ANR	1633562	PrimaryExpression	6		1633002	1					
ANR	1633563	ExpressionStatement	scale_sum = 0	167:8:3045:3058	1633002	4	True				
ANR	1633564	AssignmentExpression	scale_sum = 0		1633002	0		=			
ANR	1633565	Identifier	scale_sum		1633002	0					
ANR	1633566	PrimaryExpression	0		1633002	1					
ANR	1633567	ForStatement	for ( k = 0 ; k < s -> subband_activity [ j ] ; k ++ )		1633002	5					
ANR	1633568	ForInit	k = 0 ;	171:13:3076:3081	1633002	0	True				
ANR	1633569	AssignmentExpression	k = 0		1633002	0		=			
ANR	1633570	Identifier	k		1633002	0					
ANR	1633571	PrimaryExpression	0		1633002	1					
ANR	1633572	Condition	k < s -> subband_activity [ j ]	171:20:3083:3108	1633002	1	True				
ANR	1633573	RelationalExpression	k < s -> subband_activity [ j ]		1633002	0		<			
ANR	1633574	Identifier	k		1633002	0					
ANR	1633575	ArrayIndexing	s -> subband_activity [ j ]		1633002	1					
ANR	1633576	PtrMemberAccess	s -> subband_activity		1633002	0					
ANR	1633577	Identifier	s		1633002	0					
ANR	1633578	Identifier	subband_activity		1633002	1					
ANR	1633579	Identifier	j		1633002	1					
ANR	1633580	PostIncDecOperationExpression	k ++	171:48:3111:3113	1633002	2	True				
ANR	1633581	Identifier	k		1633002	0					
ANR	1633582	IncDec	++		1633002	1					
ANR	1633583	CompoundStatement		169:53:3033:3033	1633002	3					
ANR	1633584	IfStatement	if ( k >= s -> vq_start_subband [ j ] || s -> bitalloc [ j ] [ k ] > 0 )		1633002	0					
ANR	1633585	Condition	k >= s -> vq_start_subband [ j ] || s -> bitalloc [ j ] [ k ] > 0	173:16:3135:3186	1633002	0	True				
ANR	1633586	OrExpression	k >= s -> vq_start_subband [ j ] || s -> bitalloc [ j ] [ k ] > 0		1633002	0		||			
ANR	1633587	RelationalExpression	k >= s -> vq_start_subband [ j ]		1633002	0		>=			
ANR	1633588	Identifier	k		1633002	0					
ANR	1633589	ArrayIndexing	s -> vq_start_subband [ j ]		1633002	1					
ANR	1633590	PtrMemberAccess	s -> vq_start_subband		1633002	0					
ANR	1633591	Identifier	s		1633002	0					
ANR	1633592	Identifier	vq_start_subband		1633002	1					
ANR	1633593	Identifier	j		1633002	1					
ANR	1633594	RelationalExpression	s -> bitalloc [ j ] [ k ] > 0		1633002	1		>			
ANR	1633595	ArrayIndexing	s -> bitalloc [ j ] [ k ]		1633002	0					
ANR	1633596	ArrayIndexing	s -> bitalloc [ j ]		1633002	0					
ANR	1633597	PtrMemberAccess	s -> bitalloc		1633002	0					
ANR	1633598	Identifier	s		1633002	0					
ANR	1633599	Identifier	bitalloc		1633002	1					
ANR	1633600	Identifier	j		1633002	1					
ANR	1633601	Identifier	k		1633002	1					
ANR	1633602	PrimaryExpression	0		1633002	1					
ANR	1633603	CompoundStatement		171:70:3106:3106	1633002	1					
ANR	1633604	ExpressionStatement	"scale_sum = get_scale ( & s -> gb , s -> scalefactor_huffman [ j ] , scale_sum , log_size )"	175:16:3208:3285	1633002	0	True				
ANR	1633605	AssignmentExpression	"scale_sum = get_scale ( & s -> gb , s -> scalefactor_huffman [ j ] , scale_sum , log_size )"		1633002	0		=			
ANR	1633606	Identifier	scale_sum		1633002	0					
ANR	1633607	CallExpression	"get_scale ( & s -> gb , s -> scalefactor_huffman [ j ] , scale_sum , log_size )"		1633002	1					
ANR	1633608	Callee	get_scale		1633002	0					
ANR	1633609	Identifier	get_scale		1633002	0					
ANR	1633610	ArgumentList	& s -> gb		1633002	1					
ANR	1633611	Argument	& s -> gb		1633002	0					
ANR	1633612	UnaryOperationExpression	& s -> gb		1633002	0					
ANR	1633613	UnaryOperator	&		1633002	0					
ANR	1633614	PtrMemberAccess	s -> gb		1633002	1					
ANR	1633615	Identifier	s		1633002	0					
ANR	1633616	Identifier	gb		1633002	1					
ANR	1633617	Argument	s -> scalefactor_huffman [ j ]		1633002	1					
ANR	1633618	ArrayIndexing	s -> scalefactor_huffman [ j ]		1633002	0					
ANR	1633619	PtrMemberAccess	s -> scalefactor_huffman		1633002	0					
ANR	1633620	Identifier	s		1633002	0					
ANR	1633621	Identifier	scalefactor_huffman		1633002	1					
ANR	1633622	Identifier	j		1633002	1					
ANR	1633623	Argument	scale_sum		1633002	2					
ANR	1633624	Identifier	scale_sum		1633002	0					
ANR	1633625	Argument	log_size		1633002	3					
ANR	1633626	Identifier	log_size		1633002	0					
ANR	1633627	ExpressionStatement	s -> scale_factor [ j ] [ k ] [ 0 ] = scale_table [ scale_sum ]	177:16:3304:3353	1633002	1	True				
ANR	1633628	AssignmentExpression	s -> scale_factor [ j ] [ k ] [ 0 ] = scale_table [ scale_sum ]		1633002	0		=			
ANR	1633629	ArrayIndexing	s -> scale_factor [ j ] [ k ] [ 0 ]		1633002	0					
ANR	1633630	ArrayIndexing	s -> scale_factor [ j ] [ k ]		1633002	0					
ANR	1633631	ArrayIndexing	s -> scale_factor [ j ]		1633002	0					
ANR	1633632	PtrMemberAccess	s -> scale_factor		1633002	0					
ANR	1633633	Identifier	s		1633002	0					
ANR	1633634	Identifier	scale_factor		1633002	1					
ANR	1633635	Identifier	j		1633002	1					
ANR	1633636	Identifier	k		1633002	1					
ANR	1633637	PrimaryExpression	0		1633002	1					
ANR	1633638	ArrayIndexing	scale_table [ scale_sum ]		1633002	1					
ANR	1633639	Identifier	scale_table		1633002	0					
ANR	1633640	Identifier	scale_sum		1633002	1					
ANR	1633641	IfStatement	if ( k < s -> vq_start_subband [ j ] && s -> transition_mode [ j ] [ k ] )		1633002	1					
ANR	1633642	Condition	k < s -> vq_start_subband [ j ] && s -> transition_mode [ j ] [ k ]	183:16:3389:3442	1633002	0	True				
ANR	1633643	AndExpression	k < s -> vq_start_subband [ j ] && s -> transition_mode [ j ] [ k ]		1633002	0		&&			
ANR	1633644	RelationalExpression	k < s -> vq_start_subband [ j ]		1633002	0		<			
ANR	1633645	Identifier	k		1633002	0					
ANR	1633646	ArrayIndexing	s -> vq_start_subband [ j ]		1633002	1					
ANR	1633647	PtrMemberAccess	s -> vq_start_subband		1633002	0					
ANR	1633648	Identifier	s		1633002	0					
ANR	1633649	Identifier	vq_start_subband		1633002	1					
ANR	1633650	Identifier	j		1633002	1					
ANR	1633651	ArrayIndexing	s -> transition_mode [ j ] [ k ]		1633002	1					
ANR	1633652	ArrayIndexing	s -> transition_mode [ j ]		1633002	0					
ANR	1633653	PtrMemberAccess	s -> transition_mode		1633002	0					
ANR	1633654	Identifier	s		1633002	0					
ANR	1633655	Identifier	transition_mode		1633002	1					
ANR	1633656	Identifier	j		1633002	1					
ANR	1633657	Identifier	k		1633002	1					
ANR	1633658	CompoundStatement		181:72:3362:3362	1633002	1					
ANR	1633659	ExpressionStatement	"scale_sum = get_scale ( & s -> gb , s -> scalefactor_huffman [ j ] , scale_sum , log_size )"	187:16:3511:3588	1633002	0	True				
ANR	1633660	AssignmentExpression	"scale_sum = get_scale ( & s -> gb , s -> scalefactor_huffman [ j ] , scale_sum , log_size )"		1633002	0		=			
ANR	1633661	Identifier	scale_sum		1633002	0					
ANR	1633662	CallExpression	"get_scale ( & s -> gb , s -> scalefactor_huffman [ j ] , scale_sum , log_size )"		1633002	1					
ANR	1633663	Callee	get_scale		1633002	0					
ANR	1633664	Identifier	get_scale		1633002	0					
ANR	1633665	ArgumentList	& s -> gb		1633002	1					
ANR	1633666	Argument	& s -> gb		1633002	0					
ANR	1633667	UnaryOperationExpression	& s -> gb		1633002	0					
ANR	1633668	UnaryOperator	&		1633002	0					
ANR	1633669	PtrMemberAccess	s -> gb		1633002	1					
ANR	1633670	Identifier	s		1633002	0					
ANR	1633671	Identifier	gb		1633002	1					
ANR	1633672	Argument	s -> scalefactor_huffman [ j ]		1633002	1					
ANR	1633673	ArrayIndexing	s -> scalefactor_huffman [ j ]		1633002	0					
ANR	1633674	PtrMemberAccess	s -> scalefactor_huffman		1633002	0					
ANR	1633675	Identifier	s		1633002	0					
ANR	1633676	Identifier	scalefactor_huffman		1633002	1					
ANR	1633677	Identifier	j		1633002	1					
ANR	1633678	Argument	scale_sum		1633002	2					
ANR	1633679	Identifier	scale_sum		1633002	0					
ANR	1633680	Argument	log_size		1633002	3					
ANR	1633681	Identifier	log_size		1633002	0					
ANR	1633682	ExpressionStatement	s -> scale_factor [ j ] [ k ] [ 1 ] = scale_table [ scale_sum ]	189:16:3607:3656	1633002	1	True				
ANR	1633683	AssignmentExpression	s -> scale_factor [ j ] [ k ] [ 1 ] = scale_table [ scale_sum ]		1633002	0		=			
ANR	1633684	ArrayIndexing	s -> scale_factor [ j ] [ k ] [ 1 ]		1633002	0					
ANR	1633685	ArrayIndexing	s -> scale_factor [ j ] [ k ]		1633002	0					
ANR	1633686	ArrayIndexing	s -> scale_factor [ j ]		1633002	0					
ANR	1633687	PtrMemberAccess	s -> scale_factor		1633002	0					
ANR	1633688	Identifier	s		1633002	0					
ANR	1633689	Identifier	scale_factor		1633002	1					
ANR	1633690	Identifier	j		1633002	1					
ANR	1633691	Identifier	k		1633002	1					
ANR	1633692	PrimaryExpression	1		1633002	1					
ANR	1633693	ArrayIndexing	scale_table [ scale_sum ]		1633002	1					
ANR	1633694	Identifier	scale_table		1633002	0					
ANR	1633695	Identifier	scale_sum		1633002	1					
ANR	1633696	ForStatement	for ( j = base_channel ; j < s -> prim_channels ; j ++ )		1633002	9					
ANR	1633697	ForInit	j = base_channel ;	201:9:3757:3773	1633002	0	True				
ANR	1633698	AssignmentExpression	j = base_channel		1633002	0		=			
ANR	1633699	Identifier	j		1633002	0					
ANR	1633700	Identifier	base_channel		1633002	1					
ANR	1633701	Condition	j < s -> prim_channels	201:27:3775:3794	1633002	1	True				
ANR	1633702	RelationalExpression	j < s -> prim_channels		1633002	0		<			
ANR	1633703	Identifier	j		1633002	0					
ANR	1633704	PtrMemberAccess	s -> prim_channels		1633002	1					
ANR	1633705	Identifier	s		1633002	0					
ANR	1633706	Identifier	prim_channels		1633002	1					
ANR	1633707	PostIncDecOperationExpression	j ++	201:49:3797:3799	1633002	2	True				
ANR	1633708	Identifier	j		1633002	0					
ANR	1633709	IncDec	++		1633002	1					
ANR	1633710	CompoundStatement		199:54:3719:3719	1633002	3					
ANR	1633711	IfStatement	if ( s -> joint_intensity [ j ] > 0 )		1633002	0					
ANR	1633712	Condition	s -> joint_intensity [ j ] > 0	205:12:3881:3905	1633002	0	True				
ANR	1633713	RelationalExpression	s -> joint_intensity [ j ] > 0		1633002	0		>			
ANR	1633714	ArrayIndexing	s -> joint_intensity [ j ]		1633002	0					
ANR	1633715	PtrMemberAccess	s -> joint_intensity		1633002	0					
ANR	1633716	Identifier	s		1633002	0					
ANR	1633717	Identifier	joint_intensity		1633002	1					
ANR	1633718	Identifier	j		1633002	1					
ANR	1633719	PrimaryExpression	0		1633002	1					
ANR	1633720	ExpressionStatement	"s -> joint_huff [ j ] = get_bits ( & s -> gb , 3 )"	207:12:3921:3959	1633002	1	True				
ANR	1633721	AssignmentExpression	"s -> joint_huff [ j ] = get_bits ( & s -> gb , 3 )"		1633002	0		=			
ANR	1633722	ArrayIndexing	s -> joint_huff [ j ]		1633002	0					
ANR	1633723	PtrMemberAccess	s -> joint_huff		1633002	0					
ANR	1633724	Identifier	s		1633002	0					
ANR	1633725	Identifier	joint_huff		1633002	1					
ANR	1633726	Identifier	j		1633002	1					
ANR	1633727	CallExpression	"get_bits ( & s -> gb , 3 )"		1633002	1					
ANR	1633728	Callee	get_bits		1633002	0					
ANR	1633729	Identifier	get_bits		1633002	0					
ANR	1633730	ArgumentList	& s -> gb		1633002	1					
ANR	1633731	Argument	& s -> gb		1633002	0					
ANR	1633732	UnaryOperationExpression	& s -> gb		1633002	0					
ANR	1633733	UnaryOperator	&		1633002	0					
ANR	1633734	PtrMemberAccess	s -> gb		1633002	1					
ANR	1633735	Identifier	s		1633002	0					
ANR	1633736	Identifier	gb		1633002	1					
ANR	1633737	Argument	3		1633002	1					
ANR	1633738	PrimaryExpression	3		1633002	0					
ANR	1633739	IfStatement	if ( get_bits_left ( & s -> gb ) < 0 )		1633002	10					
ANR	1633740	Condition	get_bits_left ( & s -> gb ) < 0	213:8:3979:4003	1633002	0	True				
ANR	1633741	RelationalExpression	get_bits_left ( & s -> gb ) < 0		1633002	0		<			
ANR	1633742	CallExpression	get_bits_left ( & s -> gb )		1633002	0					
ANR	1633743	Callee	get_bits_left		1633002	0					
ANR	1633744	Identifier	get_bits_left		1633002	0					
ANR	1633745	ArgumentList	& s -> gb		1633002	1					
ANR	1633746	Argument	& s -> gb		1633002	0					
ANR	1633747	UnaryOperationExpression	& s -> gb		1633002	0					
ANR	1633748	UnaryOperator	&		1633002	0					
ANR	1633749	PtrMemberAccess	s -> gb		1633002	1					
ANR	1633750	Identifier	s		1633002	0					
ANR	1633751	Identifier	gb		1633002	1					
ANR	1633752	PrimaryExpression	0		1633002	1					
ANR	1633753	ReturnStatement	return AVERROR_INVALIDDATA ;	215:8:4015:4041	1633002	1	True				
ANR	1633754	Identifier	AVERROR_INVALIDDATA		1633002	0					
ANR	1633755	ForStatement	for ( j = base_channel ; j < s -> prim_channels ; j ++ )		1633002	11					
ANR	1633756	ForInit	j = base_channel ;	221:9:4105:4121	1633002	0	True				
ANR	1633757	AssignmentExpression	j = base_channel		1633002	0		=			
ANR	1633758	Identifier	j		1633002	0					
ANR	1633759	Identifier	base_channel		1633002	1					
ANR	1633760	Condition	j < s -> prim_channels	221:27:4123:4142	1633002	1	True				
ANR	1633761	RelationalExpression	j < s -> prim_channels		1633002	0		<			
ANR	1633762	Identifier	j		1633002	0					
ANR	1633763	PtrMemberAccess	s -> prim_channels		1633002	1					
ANR	1633764	Identifier	s		1633002	0					
ANR	1633765	Identifier	prim_channels		1633002	1					
ANR	1633766	PostIncDecOperationExpression	j ++	221:49:4145:4147	1633002	2	True				
ANR	1633767	Identifier	j		1633002	0					
ANR	1633768	IncDec	++		1633002	1					
ANR	1633769	CompoundStatement		221:8:4078:4096	1633002	3					
ANR	1633770	IdentifierDeclStatement	int source_channel ;	223:8:4161:4179	1633002	0	True				
ANR	1633771	IdentifierDecl	source_channel		1633002	0					
ANR	1633772	IdentifierDeclType	int		1633002	0					
ANR	1633773	Identifier	source_channel		1633002	1					
ANR	1633774	IfStatement	if ( s -> joint_intensity [ j ] > 0 )		1633002	1					
ANR	1633775	Condition	s -> joint_intensity [ j ] > 0	229:12:4260:4284	1633002	0	True				
ANR	1633776	RelationalExpression	s -> joint_intensity [ j ] > 0		1633002	0		>			
ANR	1633777	ArrayIndexing	s -> joint_intensity [ j ]		1633002	0					
ANR	1633778	PtrMemberAccess	s -> joint_intensity		1633002	0					
ANR	1633779	Identifier	s		1633002	0					
ANR	1633780	Identifier	joint_intensity		1633002	1					
ANR	1633781	Identifier	j		1633002	1					
ANR	1633782	PrimaryExpression	0		1633002	1					
ANR	1633783	CompoundStatement		229:12:4219:4232	1633002	1					
ANR	1633784	IdentifierDeclStatement	int scale = 0 ;	231:12:4302:4315	1633002	0	True				
ANR	1633785	IdentifierDecl	scale = 0		1633002	0					
ANR	1633786	IdentifierDeclType	int		1633002	0					
ANR	1633787	Identifier	scale		1633002	1					
ANR	1633788	AssignmentExpression	scale = 0		1633002	2		=			
ANR	1633789	Identifier	scale		1633002	0					
ANR	1633790	PrimaryExpression	0		1633002	1					
ANR	1633791	ExpressionStatement	source_channel = s -> joint_intensity [ j ] - 1	233:12:4330:4372	1633002	1	True				
ANR	1633792	AssignmentExpression	source_channel = s -> joint_intensity [ j ] - 1		1633002	0		=			
ANR	1633793	Identifier	source_channel		1633002	0					
ANR	1633794	AdditiveExpression	s -> joint_intensity [ j ] - 1		1633002	1		-			
ANR	1633795	ArrayIndexing	s -> joint_intensity [ j ]		1633002	0					
ANR	1633796	PtrMemberAccess	s -> joint_intensity		1633002	0					
ANR	1633797	Identifier	s		1633002	0					
ANR	1633798	Identifier	joint_intensity		1633002	1					
ANR	1633799	Identifier	j		1633002	1					
ANR	1633800	PrimaryExpression	1		1633002	1					
ANR	1633801	ForStatement	for ( k = s -> subband_activity [ j ] ; k < s -> subband_activity [ source_channel ] ; k ++ )		1633002	2					
ANR	1633802	ForInit	k = s -> subband_activity [ j ] ;	243:17:4527:4553	1633002	0	True				
ANR	1633803	AssignmentExpression	k = s -> subband_activity [ j ]		1633002	0		=			
ANR	1633804	Identifier	k		1633002	0					
ANR	1633805	ArrayIndexing	s -> subband_activity [ j ]		1633002	1					
ANR	1633806	PtrMemberAccess	s -> subband_activity		1633002	0					
ANR	1633807	Identifier	s		1633002	0					
ANR	1633808	Identifier	subband_activity		1633002	1					
ANR	1633809	Identifier	j		1633002	1					
ANR	1633810	Condition	k < s -> subband_activity [ source_channel ]	243:45:4555:4593	1633002	1	True				
ANR	1633811	RelationalExpression	k < s -> subband_activity [ source_channel ]		1633002	0		<			
ANR	1633812	Identifier	k		1633002	0					
ANR	1633813	ArrayIndexing	s -> subband_activity [ source_channel ]		1633002	1					
ANR	1633814	PtrMemberAccess	s -> subband_activity		1633002	0					
ANR	1633815	Identifier	s		1633002	0					
ANR	1633816	Identifier	subband_activity		1633002	1					
ANR	1633817	Identifier	source_channel		1633002	1					
ANR	1633818	PostIncDecOperationExpression	k ++	243:86:4596:4598	1633002	2	True				
ANR	1633819	Identifier	k		1633002	0					
ANR	1633820	IncDec	++		1633002	1					
ANR	1633821	CompoundStatement		241:91:4518:4518	1633002	3					
ANR	1633822	ExpressionStatement	"scale = get_scale ( & s -> gb , s -> joint_huff [ j ] , 64 , 7 )"	245:16:4620:4681	1633002	0	True				
ANR	1633823	AssignmentExpression	"scale = get_scale ( & s -> gb , s -> joint_huff [ j ] , 64 , 7 )"		1633002	0		=			
ANR	1633824	Identifier	scale		1633002	0					
ANR	1633825	CallExpression	"get_scale ( & s -> gb , s -> joint_huff [ j ] , 64 , 7 )"		1633002	1					
ANR	1633826	Callee	get_scale		1633002	0					
ANR	1633827	Identifier	get_scale		1633002	0					
ANR	1633828	ArgumentList	& s -> gb		1633002	1					
ANR	1633829	Argument	& s -> gb		1633002	0					
ANR	1633830	UnaryOperationExpression	& s -> gb		1633002	0					
ANR	1633831	UnaryOperator	&		1633002	0					
ANR	1633832	PtrMemberAccess	s -> gb		1633002	1					
ANR	1633833	Identifier	s		1633002	0					
ANR	1633834	Identifier	gb		1633002	1					
ANR	1633835	Argument	s -> joint_huff [ j ]		1633002	1					
ANR	1633836	ArrayIndexing	s -> joint_huff [ j ]		1633002	0					
ANR	1633837	PtrMemberAccess	s -> joint_huff		1633002	0					
ANR	1633838	Identifier	s		1633002	0					
ANR	1633839	Identifier	joint_huff		1633002	1					
ANR	1633840	Identifier	j		1633002	1					
ANR	1633841	Argument	64		1633002	2					
ANR	1633842	PrimaryExpression	64		1633002	0					
ANR	1633843	Argument	7		1633002	3					
ANR	1633844	PrimaryExpression	7		1633002	0					
ANR	1633845	ExpressionStatement	s -> joint_scale_factor [ j ] [ k ] = scale	247:16:4700:4735	1633002	1	True				
ANR	1633846	AssignmentExpression	s -> joint_scale_factor [ j ] [ k ] = scale		1633002	0		=			
ANR	1633847	ArrayIndexing	s -> joint_scale_factor [ j ] [ k ]		1633002	0					
ANR	1633848	ArrayIndexing	s -> joint_scale_factor [ j ]		1633002	0					
ANR	1633849	PtrMemberAccess	s -> joint_scale_factor		1633002	0					
ANR	1633850	Identifier	s		1633002	0					
ANR	1633851	Identifier	joint_scale_factor		1633002	1					
ANR	1633852	Identifier	j		1633002	1					
ANR	1633853	Identifier	k		1633002	1					
ANR	1633854	Identifier	scale		1633002	1					
ANR	1633855	IfStatement	if ( ! ( s -> debug_flag & 0x02 ) )		1633002	3					
ANR	1633856	Condition	! ( s -> debug_flag & 0x02 )	253:16:4805:4827	1633002	0	True				
ANR	1633857	UnaryOperationExpression	! ( s -> debug_flag & 0x02 )		1633002	0					
ANR	1633858	UnaryOperator	!		1633002	0					
ANR	1633859	BitAndExpression	s -> debug_flag & 0x02		1633002	1		&			
ANR	1633860	PtrMemberAccess	s -> debug_flag		1633002	0					
ANR	1633861	Identifier	s		1633002	0					
ANR	1633862	Identifier	debug_flag		1633002	1					
ANR	1633863	PrimaryExpression	0x02		1633002	1					
ANR	1633864	CompoundStatement		251:41:4747:4747	1633002	1					
ANR	1633865	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_DEBUG , ""Joint stereo coding not supported\\n"" )"	255:16:4849:4942	1633002	0	True				
ANR	1633866	CallExpression	"av_log ( s -> avctx , AV_LOG_DEBUG , ""Joint stereo coding not supported\\n"" )"		1633002	0					
ANR	1633867	Callee	av_log		1633002	0					
ANR	1633868	Identifier	av_log		1633002	0					
ANR	1633869	ArgumentList	s -> avctx		1633002	1					
ANR	1633870	Argument	s -> avctx		1633002	0					
ANR	1633871	PtrMemberAccess	s -> avctx		1633002	0					
ANR	1633872	Identifier	s		1633002	0					
ANR	1633873	Identifier	avctx		1633002	1					
ANR	1633874	Argument	AV_LOG_DEBUG		1633002	1					
ANR	1633875	Identifier	AV_LOG_DEBUG		1633002	0					
ANR	1633876	Argument	"""Joint stereo coding not supported\\n"""		1633002	2					
ANR	1633877	PrimaryExpression	"""Joint stereo coding not supported\\n"""		1633002	0					
ANR	1633878	ExpressionStatement	s -> debug_flag |= 0x02	259:16:4961:4982	1633002	1	True				
ANR	1633879	AssignmentExpression	s -> debug_flag |= 0x02		1633002	0		|=			
ANR	1633880	PtrMemberAccess	s -> debug_flag		1633002	0					
ANR	1633881	Identifier	s		1633002	0					
ANR	1633882	Identifier	debug_flag		1633002	1					
ANR	1633883	PrimaryExpression	0x02		1633002	1					
ANR	1633884	IfStatement	if ( ! base_channel && s -> prim_channels > 2 )		1633002	12					
ANR	1633885	Condition	! base_channel && s -> prim_channels > 2	271:8:5067:5103	1633002	0	True				
ANR	1633886	AndExpression	! base_channel && s -> prim_channels > 2		1633002	0		&&			
ANR	1633887	UnaryOperationExpression	! base_channel		1633002	0					
ANR	1633888	UnaryOperator	!		1633002	0					
ANR	1633889	Identifier	base_channel		1633002	1					
ANR	1633890	RelationalExpression	s -> prim_channels > 2		1633002	1		>			
ANR	1633891	PtrMemberAccess	s -> prim_channels		1633002	0					
ANR	1633892	Identifier	s		1633002	0					
ANR	1633893	Identifier	prim_channels		1633002	1					
ANR	1633894	PrimaryExpression	2		1633002	1					
ANR	1633895	CompoundStatement		269:47:5023:5023	1633002	1					
ANR	1633896	IfStatement	if ( s -> downmix )		1633002	0					
ANR	1633897	Condition	s -> downmix	273:12:5121:5130	1633002	0	True				
ANR	1633898	PtrMemberAccess	s -> downmix		1633002	0					
ANR	1633899	Identifier	s		1633002	0					
ANR	1633900	Identifier	downmix		1633002	1					
ANR	1633901	CompoundStatement		271:24:5050:5050	1633002	1					
ANR	1633902	ForStatement	for ( j = base_channel ; j < s -> prim_channels ; j ++ )		1633002	0					
ANR	1633903	ForInit	j = base_channel ;	275:17:5153:5169	1633002	0	True				
ANR	1633904	AssignmentExpression	j = base_channel		1633002	0		=			
ANR	1633905	Identifier	j		1633002	0					
ANR	1633906	Identifier	base_channel		1633002	1					
ANR	1633907	Condition	j < s -> prim_channels	275:35:5171:5190	1633002	1	True				
ANR	1633908	RelationalExpression	j < s -> prim_channels		1633002	0		<			
ANR	1633909	Identifier	j		1633002	0					
ANR	1633910	PtrMemberAccess	s -> prim_channels		1633002	1					
ANR	1633911	Identifier	s		1633002	0					
ANR	1633912	Identifier	prim_channels		1633002	1					
ANR	1633913	PostIncDecOperationExpression	j ++	275:57:5193:5195	1633002	2	True				
ANR	1633914	Identifier	j		1633002	0					
ANR	1633915	IncDec	++		1633002	1					
ANR	1633916	CompoundStatement		273:62:5115:5115	1633002	3					
ANR	1633917	ExpressionStatement	"s -> downmix_coef [ j ] [ 0 ] = get_bits ( & s -> gb , 7 )"	277:16:5217:5260	1633002	0	True				
ANR	1633918	AssignmentExpression	"s -> downmix_coef [ j ] [ 0 ] = get_bits ( & s -> gb , 7 )"		1633002	0		=			
ANR	1633919	ArrayIndexing	s -> downmix_coef [ j ] [ 0 ]		1633002	0					
ANR	1633920	ArrayIndexing	s -> downmix_coef [ j ]		1633002	0					
ANR	1633921	PtrMemberAccess	s -> downmix_coef		1633002	0					
ANR	1633922	Identifier	s		1633002	0					
ANR	1633923	Identifier	downmix_coef		1633002	1					
ANR	1633924	Identifier	j		1633002	1					
ANR	1633925	PrimaryExpression	0		1633002	1					
ANR	1633926	CallExpression	"get_bits ( & s -> gb , 7 )"		1633002	1					
ANR	1633927	Callee	get_bits		1633002	0					
ANR	1633928	Identifier	get_bits		1633002	0					
ANR	1633929	ArgumentList	& s -> gb		1633002	1					
ANR	1633930	Argument	& s -> gb		1633002	0					
ANR	1633931	UnaryOperationExpression	& s -> gb		1633002	0					
ANR	1633932	UnaryOperator	&		1633002	0					
ANR	1633933	PtrMemberAccess	s -> gb		1633002	1					
ANR	1633934	Identifier	s		1633002	0					
ANR	1633935	Identifier	gb		1633002	1					
ANR	1633936	Argument	7		1633002	1					
ANR	1633937	PrimaryExpression	7		1633002	0					
ANR	1633938	ExpressionStatement	"s -> downmix_coef [ j ] [ 1 ] = get_bits ( & s -> gb , 7 )"	279:16:5279:5322	1633002	1	True				
ANR	1633939	AssignmentExpression	"s -> downmix_coef [ j ] [ 1 ] = get_bits ( & s -> gb , 7 )"		1633002	0		=			
ANR	1633940	ArrayIndexing	s -> downmix_coef [ j ] [ 1 ]		1633002	0					
ANR	1633941	ArrayIndexing	s -> downmix_coef [ j ]		1633002	0					
ANR	1633942	PtrMemberAccess	s -> downmix_coef		1633002	0					
ANR	1633943	Identifier	s		1633002	0					
ANR	1633944	Identifier	downmix_coef		1633002	1					
ANR	1633945	Identifier	j		1633002	1					
ANR	1633946	PrimaryExpression	1		1633002	1					
ANR	1633947	CallExpression	"get_bits ( & s -> gb , 7 )"		1633002	1					
ANR	1633948	Callee	get_bits		1633002	0					
ANR	1633949	Identifier	get_bits		1633002	0					
ANR	1633950	ArgumentList	& s -> gb		1633002	1					
ANR	1633951	Argument	& s -> gb		1633002	0					
ANR	1633952	UnaryOperationExpression	& s -> gb		1633002	0					
ANR	1633953	UnaryOperator	&		1633002	0					
ANR	1633954	PtrMemberAccess	s -> gb		1633002	1					
ANR	1633955	Identifier	s		1633002	0					
ANR	1633956	Identifier	gb		1633002	1					
ANR	1633957	Argument	7		1633002	1					
ANR	1633958	PrimaryExpression	7		1633002	0					
ANR	1633959	ElseStatement	else		1633002	0					
ANR	1633960	CompoundStatement		283:12:5287:5323	1633002	0					
ANR	1633961	IdentifierDeclStatement	int am = s -> amode & DCA_CHANNEL_MASK ;	285:12:5370:5406	1633002	0	True				
ANR	1633962	IdentifierDecl	am = s -> amode & DCA_CHANNEL_MASK		1633002	0					
ANR	1633963	IdentifierDeclType	int		1633002	0					
ANR	1633964	Identifier	am		1633002	1					
ANR	1633965	AssignmentExpression	am = s -> amode & DCA_CHANNEL_MASK		1633002	2		=			
ANR	1633966	Identifier	am		1633002	0					
ANR	1633967	BitAndExpression	s -> amode & DCA_CHANNEL_MASK		1633002	1		&			
ANR	1633968	PtrMemberAccess	s -> amode		1633002	0					
ANR	1633969	Identifier	s		1633002	0					
ANR	1633970	Identifier	amode		1633002	1					
ANR	1633971	Identifier	DCA_CHANNEL_MASK		1633002	1					
ANR	1633972	IfStatement	if ( am >= FF_ARRAY_ELEMS ( dca_default_coeffs ) )		1633002	1					
ANR	1633973	Condition	am >= FF_ARRAY_ELEMS ( dca_default_coeffs )	287:16:5425:5464	1633002	0	True				
ANR	1633974	RelationalExpression	am >= FF_ARRAY_ELEMS ( dca_default_coeffs )		1633002	0		>=			
ANR	1633975	Identifier	am		1633002	0					
ANR	1633976	CallExpression	FF_ARRAY_ELEMS ( dca_default_coeffs )		1633002	1					
ANR	1633977	Callee	FF_ARRAY_ELEMS		1633002	0					
ANR	1633978	Identifier	FF_ARRAY_ELEMS		1633002	0					
ANR	1633979	ArgumentList	dca_default_coeffs		1633002	1					
ANR	1633980	Argument	dca_default_coeffs		1633002	0					
ANR	1633981	Identifier	dca_default_coeffs		1633002	0					
ANR	1633982	CompoundStatement		285:58:5384:5384	1633002	1					
ANR	1633983	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_ERROR , ""Invalid channel mode %d\\n"" , am )"	289:16:5486:5573	1633002	0	True				
ANR	1633984	CallExpression	"av_log ( s -> avctx , AV_LOG_ERROR , ""Invalid channel mode %d\\n"" , am )"		1633002	0					
ANR	1633985	Callee	av_log		1633002	0					
ANR	1633986	Identifier	av_log		1633002	0					
ANR	1633987	ArgumentList	s -> avctx		1633002	1					
ANR	1633988	Argument	s -> avctx		1633002	0					
ANR	1633989	PtrMemberAccess	s -> avctx		1633002	0					
ANR	1633990	Identifier	s		1633002	0					
ANR	1633991	Identifier	avctx		1633002	1					
ANR	1633992	Argument	AV_LOG_ERROR		1633002	1					
ANR	1633993	Identifier	AV_LOG_ERROR		1633002	0					
ANR	1633994	Argument	"""Invalid channel mode %d\\n"""		1633002	2					
ANR	1633995	PrimaryExpression	"""Invalid channel mode %d\\n"""		1633002	0					
ANR	1633996	Argument	am		1633002	3					
ANR	1633997	Identifier	am		1633002	0					
ANR	1633998	ReturnStatement	return AVERROR_INVALIDDATA ;	293:16:5592:5618	1633002	1	True				
ANR	1633999	Identifier	AVERROR_INVALIDDATA		1633002	0					
ANR	1634000	ForStatement	for ( j = base_channel ; j < s -> prim_channels ; j ++ )		1633002	2					
ANR	1634001	ForInit	j = base_channel ;	297:17:5653:5669	1633002	0	True				
ANR	1634002	AssignmentExpression	j = base_channel		1633002	0		=			
ANR	1634003	Identifier	j		1633002	0					
ANR	1634004	Identifier	base_channel		1633002	1					
ANR	1634005	Condition	j < s -> prim_channels	297:35:5671:5690	1633002	1	True				
ANR	1634006	RelationalExpression	j < s -> prim_channels		1633002	0		<			
ANR	1634007	Identifier	j		1633002	0					
ANR	1634008	PtrMemberAccess	s -> prim_channels		1633002	1					
ANR	1634009	Identifier	s		1633002	0					
ANR	1634010	Identifier	prim_channels		1633002	1					
ANR	1634011	PostIncDecOperationExpression	j ++	297:57:5693:5695	1633002	2	True				
ANR	1634012	Identifier	j		1633002	0					
ANR	1634013	IncDec	++		1633002	1					
ANR	1634014	CompoundStatement		295:62:5615:5615	1633002	3					
ANR	1634015	ExpressionStatement	s -> downmix_coef [ j ] [ 0 ] = dca_default_coeffs [ am ] [ j ] [ 0 ]	299:16:5717:5769	1633002	0	True				
ANR	1634016	AssignmentExpression	s -> downmix_coef [ j ] [ 0 ] = dca_default_coeffs [ am ] [ j ] [ 0 ]		1633002	0		=			
ANR	1634017	ArrayIndexing	s -> downmix_coef [ j ] [ 0 ]		1633002	0					
ANR	1634018	ArrayIndexing	s -> downmix_coef [ j ]		1633002	0					
ANR	1634019	PtrMemberAccess	s -> downmix_coef		1633002	0					
ANR	1634020	Identifier	s		1633002	0					
ANR	1634021	Identifier	downmix_coef		1633002	1					
ANR	1634022	Identifier	j		1633002	1					
ANR	1634023	PrimaryExpression	0		1633002	1					
ANR	1634024	ArrayIndexing	dca_default_coeffs [ am ] [ j ] [ 0 ]		1633002	1					
ANR	1634025	ArrayIndexing	dca_default_coeffs [ am ] [ j ]		1633002	0					
ANR	1634026	ArrayIndexing	dca_default_coeffs [ am ]		1633002	0					
ANR	1634027	Identifier	dca_default_coeffs		1633002	0					
ANR	1634028	Identifier	am		1633002	1					
ANR	1634029	Identifier	j		1633002	1					
ANR	1634030	PrimaryExpression	0		1633002	1					
ANR	1634031	ExpressionStatement	s -> downmix_coef [ j ] [ 1 ] = dca_default_coeffs [ am ] [ j ] [ 1 ]	301:16:5788:5840	1633002	1	True				
ANR	1634032	AssignmentExpression	s -> downmix_coef [ j ] [ 1 ] = dca_default_coeffs [ am ] [ j ] [ 1 ]		1633002	0		=			
ANR	1634033	ArrayIndexing	s -> downmix_coef [ j ] [ 1 ]		1633002	0					
ANR	1634034	ArrayIndexing	s -> downmix_coef [ j ]		1633002	0					
ANR	1634035	PtrMemberAccess	s -> downmix_coef		1633002	0					
ANR	1634036	Identifier	s		1633002	0					
ANR	1634037	Identifier	downmix_coef		1633002	1					
ANR	1634038	Identifier	j		1633002	1					
ANR	1634039	PrimaryExpression	1		1633002	1					
ANR	1634040	ArrayIndexing	dca_default_coeffs [ am ] [ j ] [ 1 ]		1633002	1					
ANR	1634041	ArrayIndexing	dca_default_coeffs [ am ] [ j ]		1633002	0					
ANR	1634042	ArrayIndexing	dca_default_coeffs [ am ]		1633002	0					
ANR	1634043	Identifier	dca_default_coeffs		1633002	0					
ANR	1634044	Identifier	am		1633002	1					
ANR	1634045	Identifier	j		1633002	1					
ANR	1634046	PrimaryExpression	1		1633002	1					
ANR	1634047	IfStatement	if ( ! base_channel && s -> dynrange )		1633002	13					
ANR	1634048	Condition	! base_channel && s -> dynrange	313:8:5923:5950	1633002	0	True				
ANR	1634049	AndExpression	! base_channel && s -> dynrange		1633002	0		&&			
ANR	1634050	UnaryOperationExpression	! base_channel		1633002	0					
ANR	1634051	UnaryOperator	!		1633002	0					
ANR	1634052	Identifier	base_channel		1633002	1					
ANR	1634053	PtrMemberAccess	s -> dynrange		1633002	1					
ANR	1634054	Identifier	s		1633002	0					
ANR	1634055	Identifier	dynrange		1633002	1					
ANR	1634056	ExpressionStatement	"s -> dynrange_coef = get_bits ( & s -> gb , 8 )"	315:8:5962:6000	1633002	1	True				
ANR	1634057	AssignmentExpression	"s -> dynrange_coef = get_bits ( & s -> gb , 8 )"		1633002	0		=			
ANR	1634058	PtrMemberAccess	s -> dynrange_coef		1633002	0					
ANR	1634059	Identifier	s		1633002	0					
ANR	1634060	Identifier	dynrange_coef		1633002	1					
ANR	1634061	CallExpression	"get_bits ( & s -> gb , 8 )"		1633002	1					
ANR	1634062	Callee	get_bits		1633002	0					
ANR	1634063	Identifier	get_bits		1633002	0					
ANR	1634064	ArgumentList	& s -> gb		1633002	1					
ANR	1634065	Argument	& s -> gb		1633002	0					
ANR	1634066	UnaryOperationExpression	& s -> gb		1633002	0					
ANR	1634067	UnaryOperator	&		1633002	0					
ANR	1634068	PtrMemberAccess	s -> gb		1633002	1					
ANR	1634069	Identifier	s		1633002	0					
ANR	1634070	Identifier	gb		1633002	1					
ANR	1634071	Argument	8		1633002	1					
ANR	1634072	PrimaryExpression	8		1633002	0					
ANR	1634073	IfStatement	if ( s -> crc_present )		1633002	14					
ANR	1634074	Condition	s -> crc_present	321:8:6056:6069	1633002	0	True				
ANR	1634075	PtrMemberAccess	s -> crc_present		1633002	0					
ANR	1634076	Identifier	s		1633002	0					
ANR	1634077	Identifier	crc_present		1633002	1					
ANR	1634078	CompoundStatement		319:24:5989:5989	1633002	1					
ANR	1634079	ExpressionStatement	"get_bits ( & s -> gb , 16 )"	323:8:6083:6103	1633002	0	True				
ANR	1634080	CallExpression	"get_bits ( & s -> gb , 16 )"		1633002	0					
ANR	1634081	Callee	get_bits		1633002	0					
ANR	1634082	Identifier	get_bits		1633002	0					
ANR	1634083	ArgumentList	& s -> gb		1633002	1					
ANR	1634084	Argument	& s -> gb		1633002	0					
ANR	1634085	UnaryOperationExpression	& s -> gb		1633002	0					
ANR	1634086	UnaryOperator	&		1633002	0					
ANR	1634087	PtrMemberAccess	s -> gb		1633002	1					
ANR	1634088	Identifier	s		1633002	0					
ANR	1634089	Identifier	gb		1633002	1					
ANR	1634090	Argument	16		1633002	1					
ANR	1634091	PrimaryExpression	16		1633002	0					
ANR	1634092	ForStatement	for ( j = base_channel ; j < s -> prim_channels ; j ++ )		1633002	15					
ANR	1634093	ForInit	j = base_channel ;	339:9:6223:6239	1633002	0	True				
ANR	1634094	AssignmentExpression	j = base_channel		1633002	0		=			
ANR	1634095	Identifier	j		1633002	0					
ANR	1634096	Identifier	base_channel		1633002	1					
ANR	1634097	Condition	j < s -> prim_channels	339:27:6241:6260	1633002	1	True				
ANR	1634098	RelationalExpression	j < s -> prim_channels		1633002	0		<			
ANR	1634099	Identifier	j		1633002	0					
ANR	1634100	PtrMemberAccess	s -> prim_channels		1633002	1					
ANR	1634101	Identifier	s		1633002	0					
ANR	1634102	Identifier	prim_channels		1633002	1					
ANR	1634103	PostIncDecOperationExpression	j ++	339:49:6263:6265	1633002	2	True				
ANR	1634104	Identifier	j		1633002	0					
ANR	1634105	IncDec	++		1633002	1					
ANR	1634106	ForStatement	for ( k = s -> vq_start_subband [ j ] ; k < s -> subband_activity [ j ] ; k ++ )		1633002	3					
ANR	1634107	ForInit	k = s -> vq_start_subband [ j ] ;	341:13:6282:6308	1633002	0	True				
ANR	1634108	AssignmentExpression	k = s -> vq_start_subband [ j ]		1633002	0		=			
ANR	1634109	Identifier	k		1633002	0					
ANR	1634110	ArrayIndexing	s -> vq_start_subband [ j ]		1633002	1					
ANR	1634111	PtrMemberAccess	s -> vq_start_subband		1633002	0					
ANR	1634112	Identifier	s		1633002	0					
ANR	1634113	Identifier	vq_start_subband		1633002	1					
ANR	1634114	Identifier	j		1633002	1					
ANR	1634115	Condition	k < s -> subband_activity [ j ]	341:41:6310:6335	1633002	1	True				
ANR	1634116	RelationalExpression	k < s -> subband_activity [ j ]		1633002	0		<			
ANR	1634117	Identifier	k		1633002	0					
ANR	1634118	ArrayIndexing	s -> subband_activity [ j ]		1633002	1					
ANR	1634119	PtrMemberAccess	s -> subband_activity		1633002	0					
ANR	1634120	Identifier	s		1633002	0					
ANR	1634121	Identifier	subband_activity		1633002	1					
ANR	1634122	Identifier	j		1633002	1					
ANR	1634123	PostIncDecOperationExpression	k ++	341:69:6338:6340	1633002	2	True				
ANR	1634124	Identifier	k		1633002	0					
ANR	1634125	IncDec	++		1633002	1					
ANR	1634126	ExpressionStatement	"s -> high_freq_vq [ j ] [ k ] = get_bits ( & s -> gb , 10 )"	345:12:6398:6442	1633002	3	True				
ANR	1634127	AssignmentExpression	"s -> high_freq_vq [ j ] [ k ] = get_bits ( & s -> gb , 10 )"		1633002	0		=			
ANR	1634128	ArrayIndexing	s -> high_freq_vq [ j ] [ k ]		1633002	0					
ANR	1634129	ArrayIndexing	s -> high_freq_vq [ j ]		1633002	0					
ANR	1634130	PtrMemberAccess	s -> high_freq_vq		1633002	0					
ANR	1634131	Identifier	s		1633002	0					
ANR	1634132	Identifier	high_freq_vq		1633002	1					
ANR	1634133	Identifier	j		1633002	1					
ANR	1634134	Identifier	k		1633002	1					
ANR	1634135	CallExpression	"get_bits ( & s -> gb , 10 )"		1633002	1					
ANR	1634136	Callee	get_bits		1633002	0					
ANR	1634137	Identifier	get_bits		1633002	0					
ANR	1634138	ArgumentList	& s -> gb		1633002	1					
ANR	1634139	Argument	& s -> gb		1633002	0					
ANR	1634140	UnaryOperationExpression	& s -> gb		1633002	0					
ANR	1634141	UnaryOperator	&		1633002	0					
ANR	1634142	PtrMemberAccess	s -> gb		1633002	1					
ANR	1634143	Identifier	s		1633002	0					
ANR	1634144	Identifier	gb		1633002	1					
ANR	1634145	Argument	10		1633002	1					
ANR	1634146	PrimaryExpression	10		1633002	0					
ANR	1634147	IfStatement	if ( ! base_channel && s -> lfe )		1633002	16					
ANR	1634148	Condition	! base_channel && s -> lfe	351:8:6492:6514	1633002	0	True				
ANR	1634149	AndExpression	! base_channel && s -> lfe		1633002	0		&&			
ANR	1634150	UnaryOperationExpression	! base_channel		1633002	0					
ANR	1634151	UnaryOperator	!		1633002	0					
ANR	1634152	Identifier	base_channel		1633002	1					
ANR	1634153	PtrMemberAccess	s -> lfe		1633002	1					
ANR	1634154	Identifier	s		1633002	0					
ANR	1634155	Identifier	lfe		1633002	1					
ANR	1634156	CompoundStatement		359:8:6653:6668	1633002	1					
ANR	1634157	IdentifierDeclStatement	int quant7 ;	353:8:6528:6538	1633002	0	True				
ANR	1634158	IdentifierDecl	quant7		1633002	0					
ANR	1634159	IdentifierDeclType	int		1633002	0					
ANR	1634160	Identifier	quant7		1633002	1					
ANR	1634161	IdentifierDeclStatement	int lfe_samples = 2 * s -> lfe * ( 4 + block_index ) ;	357:8:6576:6624	1633002	1	True				
ANR	1634162	IdentifierDecl	lfe_samples = 2 * s -> lfe * ( 4 + block_index )		1633002	0					
ANR	1634163	IdentifierDeclType	int		1633002	0					
ANR	1634164	Identifier	lfe_samples		1633002	1					
ANR	1634165	AssignmentExpression	lfe_samples = 2 * s -> lfe * ( 4 + block_index )		1633002	2		=			
ANR	1634166	Identifier	lfe_samples		1633002	0					
ANR	1634167	MultiplicativeExpression	2 * s -> lfe * ( 4 + block_index )		1633002	1		*			
ANR	1634168	PrimaryExpression	2		1633002	0					
ANR	1634169	MultiplicativeExpression	s -> lfe * ( 4 + block_index )		1633002	1		*			
ANR	1634170	PtrMemberAccess	s -> lfe		1633002	0					
ANR	1634171	Identifier	s		1633002	0					
ANR	1634172	Identifier	lfe		1633002	1					
ANR	1634173	AdditiveExpression	4 + block_index		1633002	1		+			
ANR	1634174	PrimaryExpression	4		1633002	0					
ANR	1634175	Identifier	block_index		1633002	1					
ANR	1634176	IdentifierDeclStatement	int lfe_end_sample = 2 * s -> lfe * ( 4 + block_index + s -> subsubframes [ s -> current_subframe ] ) ;	359:8:6635:6725	1633002	2	True				
ANR	1634177	IdentifierDecl	lfe_end_sample = 2 * s -> lfe * ( 4 + block_index + s -> subsubframes [ s -> current_subframe ] )		1633002	0					
ANR	1634178	IdentifierDeclType	int		1633002	0					
ANR	1634179	Identifier	lfe_end_sample		1633002	1					
ANR	1634180	AssignmentExpression	lfe_end_sample = 2 * s -> lfe * ( 4 + block_index + s -> subsubframes [ s -> current_subframe ] )		1633002	2		=			
ANR	1634181	Identifier	lfe_end_sample		1633002	0					
ANR	1634182	MultiplicativeExpression	2 * s -> lfe * ( 4 + block_index + s -> subsubframes [ s -> current_subframe ] )		1633002	1		*			
ANR	1634183	PrimaryExpression	2		1633002	0					
ANR	1634184	MultiplicativeExpression	s -> lfe * ( 4 + block_index + s -> subsubframes [ s -> current_subframe ] )		1633002	1		*			
ANR	1634185	PtrMemberAccess	s -> lfe		1633002	0					
ANR	1634186	Identifier	s		1633002	0					
ANR	1634187	Identifier	lfe		1633002	1					
ANR	1634188	AdditiveExpression	4 + block_index + s -> subsubframes [ s -> current_subframe ]		1633002	1		+			
ANR	1634189	PrimaryExpression	4		1633002	0					
ANR	1634190	AdditiveExpression	block_index + s -> subsubframes [ s -> current_subframe ]		1633002	1		+			
ANR	1634191	Identifier	block_index		1633002	0					
ANR	1634192	ArrayIndexing	s -> subsubframes [ s -> current_subframe ]		1633002	1					
ANR	1634193	PtrMemberAccess	s -> subsubframes		1633002	0					
ANR	1634194	Identifier	s		1633002	0					
ANR	1634195	Identifier	subsubframes		1633002	1					
ANR	1634196	PtrMemberAccess	s -> current_subframe		1633002	1					
ANR	1634197	Identifier	s		1633002	0					
ANR	1634198	Identifier	current_subframe		1633002	1					
ANR	1634199	IdentifierDeclStatement	float lfe_scale ;	361:8:6736:6751	1633002	3	True				
ANR	1634200	IdentifierDecl	lfe_scale		1633002	0					
ANR	1634201	IdentifierDeclType	float		1633002	0					
ANR	1634202	Identifier	lfe_scale		1633002	1					
ANR	1634203	ForStatement	for ( j = lfe_samples ; j < lfe_end_sample ; j ++ )		1633002	4					
ANR	1634204	ForInit	j = lfe_samples ;	365:13:6769:6784	1633002	0	True				
ANR	1634205	AssignmentExpression	j = lfe_samples		1633002	0		=			
ANR	1634206	Identifier	j		1633002	0					
ANR	1634207	Identifier	lfe_samples		1633002	1					
ANR	1634208	Condition	j < lfe_end_sample	365:30:6786:6803	1633002	1	True				
ANR	1634209	RelationalExpression	j < lfe_end_sample		1633002	0		<			
ANR	1634210	Identifier	j		1633002	0					
ANR	1634211	Identifier	lfe_end_sample		1633002	1					
ANR	1634212	PostIncDecOperationExpression	j ++	365:50:6806:6808	1633002	2	True				
ANR	1634213	Identifier	j		1633002	0					
ANR	1634214	IncDec	++		1633002	1					
ANR	1634215	CompoundStatement		363:55:6728:6728	1633002	3					
ANR	1634216	ExpressionStatement	"s -> lfe_data [ j ] = get_sbits ( & s -> gb , 8 )"	369:12:6863:6900	1633002	0	True				
ANR	1634217	AssignmentExpression	"s -> lfe_data [ j ] = get_sbits ( & s -> gb , 8 )"		1633002	0		=			
ANR	1634218	ArrayIndexing	s -> lfe_data [ j ]		1633002	0					
ANR	1634219	PtrMemberAccess	s -> lfe_data		1633002	0					
ANR	1634220	Identifier	s		1633002	0					
ANR	1634221	Identifier	lfe_data		1633002	1					
ANR	1634222	Identifier	j		1633002	1					
ANR	1634223	CallExpression	"get_sbits ( & s -> gb , 8 )"		1633002	1					
ANR	1634224	Callee	get_sbits		1633002	0					
ANR	1634225	Identifier	get_sbits		1633002	0					
ANR	1634226	ArgumentList	& s -> gb		1633002	1					
ANR	1634227	Argument	& s -> gb		1633002	0					
ANR	1634228	UnaryOperationExpression	& s -> gb		1633002	0					
ANR	1634229	UnaryOperator	&		1633002	0					
ANR	1634230	PtrMemberAccess	s -> gb		1633002	1					
ANR	1634231	Identifier	s		1633002	0					
ANR	1634232	Identifier	gb		1633002	1					
ANR	1634233	Argument	8		1633002	1					
ANR	1634234	PrimaryExpression	8		1633002	0					
ANR	1634235	ExpressionStatement	"quant7 = get_bits ( & s -> gb , 8 )"	377:8:6958:6986	1633002	5	True				
ANR	1634236	AssignmentExpression	"quant7 = get_bits ( & s -> gb , 8 )"		1633002	0		=			
ANR	1634237	Identifier	quant7		1633002	0					
ANR	1634238	CallExpression	"get_bits ( & s -> gb , 8 )"		1633002	1					
ANR	1634239	Callee	get_bits		1633002	0					
ANR	1634240	Identifier	get_bits		1633002	0					
ANR	1634241	ArgumentList	& s -> gb		1633002	1					
ANR	1634242	Argument	& s -> gb		1633002	0					
ANR	1634243	UnaryOperationExpression	& s -> gb		1633002	0					
ANR	1634244	UnaryOperator	&		1633002	0					
ANR	1634245	PtrMemberAccess	s -> gb		1633002	1					
ANR	1634246	Identifier	s		1633002	0					
ANR	1634247	Identifier	gb		1633002	1					
ANR	1634248	Argument	8		1633002	1					
ANR	1634249	PrimaryExpression	8		1633002	0					
ANR	1634250	IfStatement	if ( quant7 > 127 )		1633002	6					
ANR	1634251	Condition	quant7 > 127	379:12:7001:7012	1633002	0	True				
ANR	1634252	RelationalExpression	quant7 > 127		1633002	0		>			
ANR	1634253	Identifier	quant7		1633002	0					
ANR	1634254	PrimaryExpression	127		1633002	1					
ANR	1634255	CompoundStatement		377:26:6932:6932	1633002	1					
ANR	1634256	ExpressionStatement	"av_log_ask_for_sample ( s -> avctx , ""LFEScaleIndex larger than 127\\n"" )"	381:12:7030:7096	1633002	0	True				
ANR	1634257	CallExpression	"av_log_ask_for_sample ( s -> avctx , ""LFEScaleIndex larger than 127\\n"" )"		1633002	0					
ANR	1634258	Callee	av_log_ask_for_sample		1633002	0					
ANR	1634259	Identifier	av_log_ask_for_sample		1633002	0					
ANR	1634260	ArgumentList	s -> avctx		1633002	1					
ANR	1634261	Argument	s -> avctx		1633002	0					
ANR	1634262	PtrMemberAccess	s -> avctx		1633002	0					
ANR	1634263	Identifier	s		1633002	0					
ANR	1634264	Identifier	avctx		1633002	1					
ANR	1634265	Argument	"""LFEScaleIndex larger than 127\\n"""		1633002	1					
ANR	1634266	PrimaryExpression	"""LFEScaleIndex larger than 127\\n"""		1633002	0					
ANR	1634267	ReturnStatement	return AVERROR_INVALIDDATA ;	383:12:7111:7137	1633002	1	True				
ANR	1634268	Identifier	AVERROR_INVALIDDATA		1633002	0					
ANR	1634269	ExpressionStatement	s -> lfe_scale_factor = scale_factor_quant7 [ quant7 ]	387:8:7159:7208	1633002	7	True				
ANR	1634270	AssignmentExpression	s -> lfe_scale_factor = scale_factor_quant7 [ quant7 ]		1633002	0		=			
ANR	1634271	PtrMemberAccess	s -> lfe_scale_factor		1633002	0					
ANR	1634272	Identifier	s		1633002	0					
ANR	1634273	Identifier	lfe_scale_factor		1633002	1					
ANR	1634274	ArrayIndexing	scale_factor_quant7 [ quant7 ]		1633002	1					
ANR	1634275	Identifier	scale_factor_quant7		1633002	0					
ANR	1634276	Identifier	quant7		1633002	1					
ANR	1634277	ExpressionStatement	lfe_scale = 0.035 * s -> lfe_scale_factor	393:8:7274:7313	1633002	8	True				
ANR	1634278	AssignmentExpression	lfe_scale = 0.035 * s -> lfe_scale_factor		1633002	0		=			
ANR	1634279	Identifier	lfe_scale		1633002	0					
ANR	1634280	MultiplicativeExpression	0.035 * s -> lfe_scale_factor		1633002	1		*			
ANR	1634281	PrimaryExpression	0.035		1633002	0					
ANR	1634282	PtrMemberAccess	s -> lfe_scale_factor		1633002	1					
ANR	1634283	Identifier	s		1633002	0					
ANR	1634284	Identifier	lfe_scale_factor		1633002	1					
ANR	1634285	ForStatement	for ( j = lfe_samples ; j < lfe_end_sample ; j ++ )		1633002	9					
ANR	1634286	ForInit	j = lfe_samples ;	397:13:7331:7346	1633002	0	True				
ANR	1634287	AssignmentExpression	j = lfe_samples		1633002	0		=			
ANR	1634288	Identifier	j		1633002	0					
ANR	1634289	Identifier	lfe_samples		1633002	1					
ANR	1634290	Condition	j < lfe_end_sample	397:30:7348:7365	1633002	1	True				
ANR	1634291	RelationalExpression	j < lfe_end_sample		1633002	0		<			
ANR	1634292	Identifier	j		1633002	0					
ANR	1634293	Identifier	lfe_end_sample		1633002	1					
ANR	1634294	PostIncDecOperationExpression	j ++	397:50:7368:7370	1633002	2	True				
ANR	1634295	Identifier	j		1633002	0					
ANR	1634296	IncDec	++		1633002	1					
ANR	1634297	ExpressionStatement	s -> lfe_data [ j ] *= lfe_scale	399:12:7386:7413	1633002	3	True				
ANR	1634298	AssignmentExpression	s -> lfe_data [ j ] *= lfe_scale		1633002	0		*=			
ANR	1634299	ArrayIndexing	s -> lfe_data [ j ]		1633002	0					
ANR	1634300	PtrMemberAccess	s -> lfe_data		1633002	0					
ANR	1634301	Identifier	s		1633002	0					
ANR	1634302	Identifier	lfe_data		1633002	1					
ANR	1634303	Identifier	j		1633002	1					
ANR	1634304	Identifier	lfe_scale		1633002	1					
ANR	1634305	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_DEBUG , ""subsubframes: %i\\n"" , s -> subsubframes [ s -> current_subframe ] )"	407:4:7443:7545	1633002	17	True				
ANR	1634306	CallExpression	"av_log ( s -> avctx , AV_LOG_DEBUG , ""subsubframes: %i\\n"" , s -> subsubframes [ s -> current_subframe ] )"		1633002	0					
ANR	1634307	Callee	av_log		1633002	0					
ANR	1634308	Identifier	av_log		1633002	0					
ANR	1634309	ArgumentList	s -> avctx		1633002	1					
ANR	1634310	Argument	s -> avctx		1633002	0					
ANR	1634311	PtrMemberAccess	s -> avctx		1633002	0					
ANR	1634312	Identifier	s		1633002	0					
ANR	1634313	Identifier	avctx		1633002	1					
ANR	1634314	Argument	AV_LOG_DEBUG		1633002	1					
ANR	1634315	Identifier	AV_LOG_DEBUG		1633002	0					
ANR	1634316	Argument	"""subsubframes: %i\\n"""		1633002	2					
ANR	1634317	PrimaryExpression	"""subsubframes: %i\\n"""		1633002	0					
ANR	1634318	Argument	s -> subsubframes [ s -> current_subframe ]		1633002	3					
ANR	1634319	ArrayIndexing	s -> subsubframes [ s -> current_subframe ]		1633002	0					
ANR	1634320	PtrMemberAccess	s -> subsubframes		1633002	0					
ANR	1634321	Identifier	s		1633002	0					
ANR	1634322	Identifier	subsubframes		1633002	1					
ANR	1634323	PtrMemberAccess	s -> current_subframe		1633002	1					
ANR	1634324	Identifier	s		1633002	0					
ANR	1634325	Identifier	current_subframe		1633002	1					
ANR	1634326	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_DEBUG , ""partial samples: %i\\n"" , s -> partial_samples [ s -> current_subframe ] )"	411:4:7552:7660	1633002	18	True				
ANR	1634327	CallExpression	"av_log ( s -> avctx , AV_LOG_DEBUG , ""partial samples: %i\\n"" , s -> partial_samples [ s -> current_subframe ] )"		1633002	0					
ANR	1634328	Callee	av_log		1633002	0					
ANR	1634329	Identifier	av_log		1633002	0					
ANR	1634330	ArgumentList	s -> avctx		1633002	1					
ANR	1634331	Argument	s -> avctx		1633002	0					
ANR	1634332	PtrMemberAccess	s -> avctx		1633002	0					
ANR	1634333	Identifier	s		1633002	0					
ANR	1634334	Identifier	avctx		1633002	1					
ANR	1634335	Argument	AV_LOG_DEBUG		1633002	1					
ANR	1634336	Identifier	AV_LOG_DEBUG		1633002	0					
ANR	1634337	Argument	"""partial samples: %i\\n"""		1633002	2					
ANR	1634338	PrimaryExpression	"""partial samples: %i\\n"""		1633002	0					
ANR	1634339	Argument	s -> partial_samples [ s -> current_subframe ]		1633002	3					
ANR	1634340	ArrayIndexing	s -> partial_samples [ s -> current_subframe ]		1633002	0					
ANR	1634341	PtrMemberAccess	s -> partial_samples		1633002	0					
ANR	1634342	Identifier	s		1633002	0					
ANR	1634343	Identifier	partial_samples		1633002	1					
ANR	1634344	PtrMemberAccess	s -> current_subframe		1633002	1					
ANR	1634345	Identifier	s		1633002	0					
ANR	1634346	Identifier	current_subframe		1633002	1					
ANR	1634347	ForStatement	for ( j = base_channel ; j < s -> prim_channels ; j ++ )		1633002	19					
ANR	1634348	ForInit	j = base_channel ;	417:9:7674:7690	1633002	0	True				
ANR	1634349	AssignmentExpression	j = base_channel		1633002	0		=			
ANR	1634350	Identifier	j		1633002	0					
ANR	1634351	Identifier	base_channel		1633002	1					
ANR	1634352	Condition	j < s -> prim_channels	417:27:7692:7711	1633002	1	True				
ANR	1634353	RelationalExpression	j < s -> prim_channels		1633002	0		<			
ANR	1634354	Identifier	j		1633002	0					
ANR	1634355	PtrMemberAccess	s -> prim_channels		1633002	1					
ANR	1634356	Identifier	s		1633002	0					
ANR	1634357	Identifier	prim_channels		1633002	1					
ANR	1634358	PostIncDecOperationExpression	j ++	417:49:7714:7716	1633002	2	True				
ANR	1634359	Identifier	j		1633002	0					
ANR	1634360	IncDec	++		1633002	1					
ANR	1634361	CompoundStatement		415:54:7636:7636	1633002	3					
ANR	1634362	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_DEBUG , ""prediction mode:"" )"	419:8:7730:7780	1633002	0	True				
ANR	1634363	CallExpression	"av_log ( s -> avctx , AV_LOG_DEBUG , ""prediction mode:"" )"		1633002	0					
ANR	1634364	Callee	av_log		1633002	0					
ANR	1634365	Identifier	av_log		1633002	0					
ANR	1634366	ArgumentList	s -> avctx		1633002	1					
ANR	1634367	Argument	s -> avctx		1633002	0					
ANR	1634368	PtrMemberAccess	s -> avctx		1633002	0					
ANR	1634369	Identifier	s		1633002	0					
ANR	1634370	Identifier	avctx		1633002	1					
ANR	1634371	Argument	AV_LOG_DEBUG		1633002	1					
ANR	1634372	Identifier	AV_LOG_DEBUG		1633002	0					
ANR	1634373	Argument	"""prediction mode:"""		1633002	2					
ANR	1634374	PrimaryExpression	"""prediction mode:"""		1633002	0					
ANR	1634375	ForStatement	for ( k = 0 ; k < s -> subband_activity [ j ] ; k ++ )		1633002	1					
ANR	1634376	ForInit	k = 0 ;	421:13:7796:7801	1633002	0	True				
ANR	1634377	AssignmentExpression	k = 0		1633002	0		=			
ANR	1634378	Identifier	k		1633002	0					
ANR	1634379	PrimaryExpression	0		1633002	1					
ANR	1634380	Condition	k < s -> subband_activity [ j ]	421:20:7803:7828	1633002	1	True				
ANR	1634381	RelationalExpression	k < s -> subband_activity [ j ]		1633002	0		<			
ANR	1634382	Identifier	k		1633002	0					
ANR	1634383	ArrayIndexing	s -> subband_activity [ j ]		1633002	1					
ANR	1634384	PtrMemberAccess	s -> subband_activity		1633002	0					
ANR	1634385	Identifier	s		1633002	0					
ANR	1634386	Identifier	subband_activity		1633002	1					
ANR	1634387	Identifier	j		1633002	1					
ANR	1634388	PostIncDecOperationExpression	k ++	421:48:7831:7833	1633002	2	True				
ANR	1634389	Identifier	k		1633002	0					
ANR	1634390	IncDec	++		1633002	1					
ANR	1634391	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_DEBUG , "" %i"" , s -> prediction_mode [ j ] [ k ] )"	423:12:7849:7912	1633002	3	True				
ANR	1634392	CallExpression	"av_log ( s -> avctx , AV_LOG_DEBUG , "" %i"" , s -> prediction_mode [ j ] [ k ] )"		1633002	0					
ANR	1634393	Callee	av_log		1633002	0					
ANR	1634394	Identifier	av_log		1633002	0					
ANR	1634395	ArgumentList	s -> avctx		1633002	1					
ANR	1634396	Argument	s -> avctx		1633002	0					
ANR	1634397	PtrMemberAccess	s -> avctx		1633002	0					
ANR	1634398	Identifier	s		1633002	0					
ANR	1634399	Identifier	avctx		1633002	1					
ANR	1634400	Argument	AV_LOG_DEBUG		1633002	1					
ANR	1634401	Identifier	AV_LOG_DEBUG		1633002	0					
ANR	1634402	Argument	""" %i"""		1633002	2					
ANR	1634403	PrimaryExpression	""" %i"""		1633002	0					
ANR	1634404	Argument	s -> prediction_mode [ j ] [ k ]		1633002	3					
ANR	1634405	ArrayIndexing	s -> prediction_mode [ j ] [ k ]		1633002	0					
ANR	1634406	ArrayIndexing	s -> prediction_mode [ j ]		1633002	0					
ANR	1634407	PtrMemberAccess	s -> prediction_mode		1633002	0					
ANR	1634408	Identifier	s		1633002	0					
ANR	1634409	Identifier	prediction_mode		1633002	1					
ANR	1634410	Identifier	j		1633002	1					
ANR	1634411	Identifier	k		1633002	1					
ANR	1634412	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_DEBUG , ""\\n"" )"	425:8:7923:7959	1633002	2	True				
ANR	1634413	CallExpression	"av_log ( s -> avctx , AV_LOG_DEBUG , ""\\n"" )"		1633002	0					
ANR	1634414	Callee	av_log		1633002	0					
ANR	1634415	Identifier	av_log		1633002	0					
ANR	1634416	ArgumentList	s -> avctx		1633002	1					
ANR	1634417	Argument	s -> avctx		1633002	0					
ANR	1634418	PtrMemberAccess	s -> avctx		1633002	0					
ANR	1634419	Identifier	s		1633002	0					
ANR	1634420	Identifier	avctx		1633002	1					
ANR	1634421	Argument	AV_LOG_DEBUG		1633002	1					
ANR	1634422	Identifier	AV_LOG_DEBUG		1633002	0					
ANR	1634423	Argument	"""\\n"""		1633002	2					
ANR	1634424	PrimaryExpression	"""\\n"""		1633002	0					
ANR	1634425	ForStatement	for ( j = base_channel ; j < s -> prim_channels ; j ++ )		1633002	20					
ANR	1634426	ForInit	j = base_channel ;	429:9:7978:7994	1633002	0	True				
ANR	1634427	AssignmentExpression	j = base_channel		1633002	0		=			
ANR	1634428	Identifier	j		1633002	0					
ANR	1634429	Identifier	base_channel		1633002	1					
ANR	1634430	Condition	j < s -> prim_channels	429:27:7996:8015	1633002	1	True				
ANR	1634431	RelationalExpression	j < s -> prim_channels		1633002	0		<			
ANR	1634432	Identifier	j		1633002	0					
ANR	1634433	PtrMemberAccess	s -> prim_channels		1633002	1					
ANR	1634434	Identifier	s		1633002	0					
ANR	1634435	Identifier	prim_channels		1633002	1					
ANR	1634436	PostIncDecOperationExpression	j ++	429:49:8018:8020	1633002	2	True				
ANR	1634437	Identifier	j		1633002	0					
ANR	1634438	IncDec	++		1633002	1					
ANR	1634439	CompoundStatement		427:54:7940:7940	1633002	3					
ANR	1634440	ForStatement	for ( k = 0 ; k < s -> subband_activity [ j ] ; k ++ )		1633002	0					
ANR	1634441	ForInit	k = 0 ;	431:13:8039:8044	1633002	0	True				
ANR	1634442	AssignmentExpression	k = 0		1633002	0		=			
ANR	1634443	Identifier	k		1633002	0					
ANR	1634444	PrimaryExpression	0		1633002	1					
ANR	1634445	Condition	k < s -> subband_activity [ j ]	431:20:8046:8071	1633002	1	True				
ANR	1634446	RelationalExpression	k < s -> subband_activity [ j ]		1633002	0		<			
ANR	1634447	Identifier	k		1633002	0					
ANR	1634448	ArrayIndexing	s -> subband_activity [ j ]		1633002	1					
ANR	1634449	PtrMemberAccess	s -> subband_activity		1633002	0					
ANR	1634450	Identifier	s		1633002	0					
ANR	1634451	Identifier	subband_activity		1633002	1					
ANR	1634452	Identifier	j		1633002	1					
ANR	1634453	PostIncDecOperationExpression	k ++	431:48:8074:8076	1633002	2	True				
ANR	1634454	Identifier	k		1633002	0					
ANR	1634455	IncDec	++		1633002	1					
ANR	1634456	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_DEBUG , ""prediction coefs: %f, %f, %f, %f\\n"" , ( float ) adpcm_vb [ s -> prediction_vq [ j ] [ k ] ] [ 0 ] / 8192 , ( float ) adpcm_vb [ s -> prediction_vq [ j ] [ k ] ] [ 1 ] / 8192 , ( float ) adpcm_vb [ s -> prediction_vq [ j ] [ k ] ] [ 2 ] / 8192 , ( float ) adpcm_vb [ s -> prediction_vq [ j ] [ k ] ] [ 3 ] / 8192 )"	433:12:8092:8468	1633002	3	True				
ANR	1634457	CallExpression	"av_log ( s -> avctx , AV_LOG_DEBUG , ""prediction coefs: %f, %f, %f, %f\\n"" , ( float ) adpcm_vb [ s -> prediction_vq [ j ] [ k ] ] [ 0 ] / 8192 , ( float ) adpcm_vb [ s -> prediction_vq [ j ] [ k ] ] [ 1 ] / 8192 , ( float ) adpcm_vb [ s -> prediction_vq [ j ] [ k ] ] [ 2 ] / 8192 , ( float ) adpcm_vb [ s -> prediction_vq [ j ] [ k ] ] [ 3 ] / 8192 )"		1633002	0					
ANR	1634458	Callee	av_log		1633002	0					
ANR	1634459	Identifier	av_log		1633002	0					
ANR	1634460	ArgumentList	s -> avctx		1633002	1					
ANR	1634461	Argument	s -> avctx		1633002	0					
ANR	1634462	PtrMemberAccess	s -> avctx		1633002	0					
ANR	1634463	Identifier	s		1633002	0					
ANR	1634464	Identifier	avctx		1633002	1					
ANR	1634465	Argument	AV_LOG_DEBUG		1633002	1					
ANR	1634466	Identifier	AV_LOG_DEBUG		1633002	0					
ANR	1634467	Argument	"""prediction coefs: %f, %f, %f, %f\\n"""		1633002	2					
ANR	1634468	PrimaryExpression	"""prediction coefs: %f, %f, %f, %f\\n"""		1633002	0					
ANR	1634469	Argument	( float ) adpcm_vb [ s -> prediction_vq [ j ] [ k ] ] [ 0 ] / 8192		1633002	3					
ANR	1634470	MultiplicativeExpression	( float ) adpcm_vb [ s -> prediction_vq [ j ] [ k ] ] [ 0 ] / 8192		1633002	0		/			
ANR	1634471	CastExpression	( float ) adpcm_vb [ s -> prediction_vq [ j ] [ k ] ] [ 0 ]		1633002	0					
ANR	1634472	CastTarget	float		1633002	0					
ANR	1634473	ArrayIndexing	adpcm_vb [ s -> prediction_vq [ j ] [ k ] ] [ 0 ]		1633002	1					
ANR	1634474	ArrayIndexing	adpcm_vb [ s -> prediction_vq [ j ] [ k ] ]		1633002	0					
ANR	1634475	Identifier	adpcm_vb		1633002	0					
ANR	1634476	ArrayIndexing	s -> prediction_vq [ j ] [ k ]		1633002	1					
ANR	1634477	ArrayIndexing	s -> prediction_vq [ j ]		1633002	0					
ANR	1634478	PtrMemberAccess	s -> prediction_vq		1633002	0					
ANR	1634479	Identifier	s		1633002	0					
ANR	1634480	Identifier	prediction_vq		1633002	1					
ANR	1634481	Identifier	j		1633002	1					
ANR	1634482	Identifier	k		1633002	1					
ANR	1634483	PrimaryExpression	0		1633002	1					
ANR	1634484	PrimaryExpression	8192		1633002	1					
ANR	1634485	Argument	( float ) adpcm_vb [ s -> prediction_vq [ j ] [ k ] ] [ 1 ] / 8192		1633002	4					
ANR	1634486	MultiplicativeExpression	( float ) adpcm_vb [ s -> prediction_vq [ j ] [ k ] ] [ 1 ] / 8192		1633002	0		/			
ANR	1634487	CastExpression	( float ) adpcm_vb [ s -> prediction_vq [ j ] [ k ] ] [ 1 ]		1633002	0					
ANR	1634488	CastTarget	float		1633002	0					
ANR	1634489	ArrayIndexing	adpcm_vb [ s -> prediction_vq [ j ] [ k ] ] [ 1 ]		1633002	1					
ANR	1634490	ArrayIndexing	adpcm_vb [ s -> prediction_vq [ j ] [ k ] ]		1633002	0					
ANR	1634491	Identifier	adpcm_vb		1633002	0					
ANR	1634492	ArrayIndexing	s -> prediction_vq [ j ] [ k ]		1633002	1					
ANR	1634493	ArrayIndexing	s -> prediction_vq [ j ]		1633002	0					
ANR	1634494	PtrMemberAccess	s -> prediction_vq		1633002	0					
ANR	1634495	Identifier	s		1633002	0					
ANR	1634496	Identifier	prediction_vq		1633002	1					
ANR	1634497	Identifier	j		1633002	1					
ANR	1634498	Identifier	k		1633002	1					
ANR	1634499	PrimaryExpression	1		1633002	1					
ANR	1634500	PrimaryExpression	8192		1633002	1					
ANR	1634501	Argument	( float ) adpcm_vb [ s -> prediction_vq [ j ] [ k ] ] [ 2 ] / 8192		1633002	5					
ANR	1634502	MultiplicativeExpression	( float ) adpcm_vb [ s -> prediction_vq [ j ] [ k ] ] [ 2 ] / 8192		1633002	0		/			
ANR	1634503	CastExpression	( float ) adpcm_vb [ s -> prediction_vq [ j ] [ k ] ] [ 2 ]		1633002	0					
ANR	1634504	CastTarget	float		1633002	0					
ANR	1634505	ArrayIndexing	adpcm_vb [ s -> prediction_vq [ j ] [ k ] ] [ 2 ]		1633002	1					
ANR	1634506	ArrayIndexing	adpcm_vb [ s -> prediction_vq [ j ] [ k ] ]		1633002	0					
ANR	1634507	Identifier	adpcm_vb		1633002	0					
ANR	1634508	ArrayIndexing	s -> prediction_vq [ j ] [ k ]		1633002	1					
ANR	1634509	ArrayIndexing	s -> prediction_vq [ j ]		1633002	0					
ANR	1634510	PtrMemberAccess	s -> prediction_vq		1633002	0					
ANR	1634511	Identifier	s		1633002	0					
ANR	1634512	Identifier	prediction_vq		1633002	1					
ANR	1634513	Identifier	j		1633002	1					
ANR	1634514	Identifier	k		1633002	1					
ANR	1634515	PrimaryExpression	2		1633002	1					
ANR	1634516	PrimaryExpression	8192		1633002	1					
ANR	1634517	Argument	( float ) adpcm_vb [ s -> prediction_vq [ j ] [ k ] ] [ 3 ] / 8192		1633002	6					
ANR	1634518	MultiplicativeExpression	( float ) adpcm_vb [ s -> prediction_vq [ j ] [ k ] ] [ 3 ] / 8192		1633002	0		/			
ANR	1634519	CastExpression	( float ) adpcm_vb [ s -> prediction_vq [ j ] [ k ] ] [ 3 ]		1633002	0					
ANR	1634520	CastTarget	float		1633002	0					
ANR	1634521	ArrayIndexing	adpcm_vb [ s -> prediction_vq [ j ] [ k ] ] [ 3 ]		1633002	1					
ANR	1634522	ArrayIndexing	adpcm_vb [ s -> prediction_vq [ j ] [ k ] ]		1633002	0					
ANR	1634523	Identifier	adpcm_vb		1633002	0					
ANR	1634524	ArrayIndexing	s -> prediction_vq [ j ] [ k ]		1633002	1					
ANR	1634525	ArrayIndexing	s -> prediction_vq [ j ]		1633002	0					
ANR	1634526	PtrMemberAccess	s -> prediction_vq		1633002	0					
ANR	1634527	Identifier	s		1633002	0					
ANR	1634528	Identifier	prediction_vq		1633002	1					
ANR	1634529	Identifier	j		1633002	1					
ANR	1634530	Identifier	k		1633002	1					
ANR	1634531	PrimaryExpression	3		1633002	1					
ANR	1634532	PrimaryExpression	8192		1633002	1					
ANR	1634533	ForStatement	for ( j = base_channel ; j < s -> prim_channels ; j ++ )		1633002	21					
ANR	1634534	ForInit	j = base_channel ;	447:9:8487:8503	1633002	0	True				
ANR	1634535	AssignmentExpression	j = base_channel		1633002	0		=			
ANR	1634536	Identifier	j		1633002	0					
ANR	1634537	Identifier	base_channel		1633002	1					
ANR	1634538	Condition	j < s -> prim_channels	447:27:8505:8524	1633002	1	True				
ANR	1634539	RelationalExpression	j < s -> prim_channels		1633002	0		<			
ANR	1634540	Identifier	j		1633002	0					
ANR	1634541	PtrMemberAccess	s -> prim_channels		1633002	1					
ANR	1634542	Identifier	s		1633002	0					
ANR	1634543	Identifier	prim_channels		1633002	1					
ANR	1634544	PostIncDecOperationExpression	j ++	447:49:8527:8529	1633002	2	True				
ANR	1634545	Identifier	j		1633002	0					
ANR	1634546	IncDec	++		1633002	1					
ANR	1634547	CompoundStatement		445:54:8449:8449	1633002	3					
ANR	1634548	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_DEBUG , ""bitalloc index: "" )"	449:8:8543:8593	1633002	0	True				
ANR	1634549	CallExpression	"av_log ( s -> avctx , AV_LOG_DEBUG , ""bitalloc index: "" )"		1633002	0					
ANR	1634550	Callee	av_log		1633002	0					
ANR	1634551	Identifier	av_log		1633002	0					
ANR	1634552	ArgumentList	s -> avctx		1633002	1					
ANR	1634553	Argument	s -> avctx		1633002	0					
ANR	1634554	PtrMemberAccess	s -> avctx		1633002	0					
ANR	1634555	Identifier	s		1633002	0					
ANR	1634556	Identifier	avctx		1633002	1					
ANR	1634557	Argument	AV_LOG_DEBUG		1633002	1					
ANR	1634558	Identifier	AV_LOG_DEBUG		1633002	0					
ANR	1634559	Argument	"""bitalloc index: """		1633002	2					
ANR	1634560	PrimaryExpression	"""bitalloc index: """		1633002	0					
ANR	1634561	ForStatement	for ( k = 0 ; k < s -> vq_start_subband [ j ] ; k ++ )		1633002	1					
ANR	1634562	ForInit	k = 0 ;	451:13:8609:8614	1633002	0	True				
ANR	1634563	AssignmentExpression	k = 0		1633002	0		=			
ANR	1634564	Identifier	k		1633002	0					
ANR	1634565	PrimaryExpression	0		1633002	1					
ANR	1634566	Condition	k < s -> vq_start_subband [ j ]	451:20:8616:8641	1633002	1	True				
ANR	1634567	RelationalExpression	k < s -> vq_start_subband [ j ]		1633002	0		<			
ANR	1634568	Identifier	k		1633002	0					
ANR	1634569	ArrayIndexing	s -> vq_start_subband [ j ]		1633002	1					
ANR	1634570	PtrMemberAccess	s -> vq_start_subband		1633002	0					
ANR	1634571	Identifier	s		1633002	0					
ANR	1634572	Identifier	vq_start_subband		1633002	1					
ANR	1634573	Identifier	j		1633002	1					
ANR	1634574	PostIncDecOperationExpression	k ++	451:48:8644:8646	1633002	2	True				
ANR	1634575	Identifier	k		1633002	0					
ANR	1634576	IncDec	++		1633002	1					
ANR	1634577	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_DEBUG , ""%2.2i "" , s -> bitalloc [ j ] [ k ] )"	453:12:8662:8721	1633002	3	True				
ANR	1634578	CallExpression	"av_log ( s -> avctx , AV_LOG_DEBUG , ""%2.2i "" , s -> bitalloc [ j ] [ k ] )"		1633002	0					
ANR	1634579	Callee	av_log		1633002	0					
ANR	1634580	Identifier	av_log		1633002	0					
ANR	1634581	ArgumentList	s -> avctx		1633002	1					
ANR	1634582	Argument	s -> avctx		1633002	0					
ANR	1634583	PtrMemberAccess	s -> avctx		1633002	0					
ANR	1634584	Identifier	s		1633002	0					
ANR	1634585	Identifier	avctx		1633002	1					
ANR	1634586	Argument	AV_LOG_DEBUG		1633002	1					
ANR	1634587	Identifier	AV_LOG_DEBUG		1633002	0					
ANR	1634588	Argument	"""%2.2i """		1633002	2					
ANR	1634589	PrimaryExpression	"""%2.2i """		1633002	0					
ANR	1634590	Argument	s -> bitalloc [ j ] [ k ]		1633002	3					
ANR	1634591	ArrayIndexing	s -> bitalloc [ j ] [ k ]		1633002	0					
ANR	1634592	ArrayIndexing	s -> bitalloc [ j ]		1633002	0					
ANR	1634593	PtrMemberAccess	s -> bitalloc		1633002	0					
ANR	1634594	Identifier	s		1633002	0					
ANR	1634595	Identifier	bitalloc		1633002	1					
ANR	1634596	Identifier	j		1633002	1					
ANR	1634597	Identifier	k		1633002	1					
ANR	1634598	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_DEBUG , ""\\n"" )"	455:8:8732:8768	1633002	2	True				
ANR	1634599	CallExpression	"av_log ( s -> avctx , AV_LOG_DEBUG , ""\\n"" )"		1633002	0					
ANR	1634600	Callee	av_log		1633002	0					
ANR	1634601	Identifier	av_log		1633002	0					
ANR	1634602	ArgumentList	s -> avctx		1633002	1					
ANR	1634603	Argument	s -> avctx		1633002	0					
ANR	1634604	PtrMemberAccess	s -> avctx		1633002	0					
ANR	1634605	Identifier	s		1633002	0					
ANR	1634606	Identifier	avctx		1633002	1					
ANR	1634607	Argument	AV_LOG_DEBUG		1633002	1					
ANR	1634608	Identifier	AV_LOG_DEBUG		1633002	0					
ANR	1634609	Argument	"""\\n"""		1633002	2					
ANR	1634610	PrimaryExpression	"""\\n"""		1633002	0					
ANR	1634611	ForStatement	for ( j = base_channel ; j < s -> prim_channels ; j ++ )		1633002	22					
ANR	1634612	ForInit	j = base_channel ;	459:9:8787:8803	1633002	0	True				
ANR	1634613	AssignmentExpression	j = base_channel		1633002	0		=			
ANR	1634614	Identifier	j		1633002	0					
ANR	1634615	Identifier	base_channel		1633002	1					
ANR	1634616	Condition	j < s -> prim_channels	459:27:8805:8824	1633002	1	True				
ANR	1634617	RelationalExpression	j < s -> prim_channels		1633002	0		<			
ANR	1634618	Identifier	j		1633002	0					
ANR	1634619	PtrMemberAccess	s -> prim_channels		1633002	1					
ANR	1634620	Identifier	s		1633002	0					
ANR	1634621	Identifier	prim_channels		1633002	1					
ANR	1634622	PostIncDecOperationExpression	j ++	459:49:8827:8829	1633002	2	True				
ANR	1634623	Identifier	j		1633002	0					
ANR	1634624	IncDec	++		1633002	1					
ANR	1634625	CompoundStatement		457:54:8749:8749	1633002	3					
ANR	1634626	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_DEBUG , ""Transition mode:"" )"	461:8:8843:8893	1633002	0	True				
ANR	1634627	CallExpression	"av_log ( s -> avctx , AV_LOG_DEBUG , ""Transition mode:"" )"		1633002	0					
ANR	1634628	Callee	av_log		1633002	0					
ANR	1634629	Identifier	av_log		1633002	0					
ANR	1634630	ArgumentList	s -> avctx		1633002	1					
ANR	1634631	Argument	s -> avctx		1633002	0					
ANR	1634632	PtrMemberAccess	s -> avctx		1633002	0					
ANR	1634633	Identifier	s		1633002	0					
ANR	1634634	Identifier	avctx		1633002	1					
ANR	1634635	Argument	AV_LOG_DEBUG		1633002	1					
ANR	1634636	Identifier	AV_LOG_DEBUG		1633002	0					
ANR	1634637	Argument	"""Transition mode:"""		1633002	2					
ANR	1634638	PrimaryExpression	"""Transition mode:"""		1633002	0					
ANR	1634639	ForStatement	for ( k = 0 ; k < s -> subband_activity [ j ] ; k ++ )		1633002	1					
ANR	1634640	ForInit	k = 0 ;	463:13:8909:8914	1633002	0	True				
ANR	1634641	AssignmentExpression	k = 0		1633002	0		=			
ANR	1634642	Identifier	k		1633002	0					
ANR	1634643	PrimaryExpression	0		1633002	1					
ANR	1634644	Condition	k < s -> subband_activity [ j ]	463:20:8916:8941	1633002	1	True				
ANR	1634645	RelationalExpression	k < s -> subband_activity [ j ]		1633002	0		<			
ANR	1634646	Identifier	k		1633002	0					
ANR	1634647	ArrayIndexing	s -> subband_activity [ j ]		1633002	1					
ANR	1634648	PtrMemberAccess	s -> subband_activity		1633002	0					
ANR	1634649	Identifier	s		1633002	0					
ANR	1634650	Identifier	subband_activity		1633002	1					
ANR	1634651	Identifier	j		1633002	1					
ANR	1634652	PostIncDecOperationExpression	k ++	463:48:8944:8946	1633002	2	True				
ANR	1634653	Identifier	k		1633002	0					
ANR	1634654	IncDec	++		1633002	1					
ANR	1634655	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_DEBUG , "" %i"" , s -> transition_mode [ j ] [ k ] )"	465:12:8962:9025	1633002	3	True				
ANR	1634656	CallExpression	"av_log ( s -> avctx , AV_LOG_DEBUG , "" %i"" , s -> transition_mode [ j ] [ k ] )"		1633002	0					
ANR	1634657	Callee	av_log		1633002	0					
ANR	1634658	Identifier	av_log		1633002	0					
ANR	1634659	ArgumentList	s -> avctx		1633002	1					
ANR	1634660	Argument	s -> avctx		1633002	0					
ANR	1634661	PtrMemberAccess	s -> avctx		1633002	0					
ANR	1634662	Identifier	s		1633002	0					
ANR	1634663	Identifier	avctx		1633002	1					
ANR	1634664	Argument	AV_LOG_DEBUG		1633002	1					
ANR	1634665	Identifier	AV_LOG_DEBUG		1633002	0					
ANR	1634666	Argument	""" %i"""		1633002	2					
ANR	1634667	PrimaryExpression	""" %i"""		1633002	0					
ANR	1634668	Argument	s -> transition_mode [ j ] [ k ]		1633002	3					
ANR	1634669	ArrayIndexing	s -> transition_mode [ j ] [ k ]		1633002	0					
ANR	1634670	ArrayIndexing	s -> transition_mode [ j ]		1633002	0					
ANR	1634671	PtrMemberAccess	s -> transition_mode		1633002	0					
ANR	1634672	Identifier	s		1633002	0					
ANR	1634673	Identifier	transition_mode		1633002	1					
ANR	1634674	Identifier	j		1633002	1					
ANR	1634675	Identifier	k		1633002	1					
ANR	1634676	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_DEBUG , ""\\n"" )"	467:8:9036:9072	1633002	2	True				
ANR	1634677	CallExpression	"av_log ( s -> avctx , AV_LOG_DEBUG , ""\\n"" )"		1633002	0					
ANR	1634678	Callee	av_log		1633002	0					
ANR	1634679	Identifier	av_log		1633002	0					
ANR	1634680	ArgumentList	s -> avctx		1633002	1					
ANR	1634681	Argument	s -> avctx		1633002	0					
ANR	1634682	PtrMemberAccess	s -> avctx		1633002	0					
ANR	1634683	Identifier	s		1633002	0					
ANR	1634684	Identifier	avctx		1633002	1					
ANR	1634685	Argument	AV_LOG_DEBUG		1633002	1					
ANR	1634686	Identifier	AV_LOG_DEBUG		1633002	0					
ANR	1634687	Argument	"""\\n"""		1633002	2					
ANR	1634688	PrimaryExpression	"""\\n"""		1633002	0					
ANR	1634689	ForStatement	for ( j = base_channel ; j < s -> prim_channels ; j ++ )		1633002	23					
ANR	1634690	ForInit	j = base_channel ;	471:9:9091:9107	1633002	0	True				
ANR	1634691	AssignmentExpression	j = base_channel		1633002	0		=			
ANR	1634692	Identifier	j		1633002	0					
ANR	1634693	Identifier	base_channel		1633002	1					
ANR	1634694	Condition	j < s -> prim_channels	471:27:9109:9128	1633002	1	True				
ANR	1634695	RelationalExpression	j < s -> prim_channels		1633002	0		<			
ANR	1634696	Identifier	j		1633002	0					
ANR	1634697	PtrMemberAccess	s -> prim_channels		1633002	1					
ANR	1634698	Identifier	s		1633002	0					
ANR	1634699	Identifier	prim_channels		1633002	1					
ANR	1634700	PostIncDecOperationExpression	j ++	471:49:9131:9133	1633002	2	True				
ANR	1634701	Identifier	j		1633002	0					
ANR	1634702	IncDec	++		1633002	1					
ANR	1634703	CompoundStatement		469:54:9053:9053	1633002	3					
ANR	1634704	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_DEBUG , ""Scale factor:"" )"	473:8:9147:9194	1633002	0	True				
ANR	1634705	CallExpression	"av_log ( s -> avctx , AV_LOG_DEBUG , ""Scale factor:"" )"		1633002	0					
ANR	1634706	Callee	av_log		1633002	0					
ANR	1634707	Identifier	av_log		1633002	0					
ANR	1634708	ArgumentList	s -> avctx		1633002	1					
ANR	1634709	Argument	s -> avctx		1633002	0					
ANR	1634710	PtrMemberAccess	s -> avctx		1633002	0					
ANR	1634711	Identifier	s		1633002	0					
ANR	1634712	Identifier	avctx		1633002	1					
ANR	1634713	Argument	AV_LOG_DEBUG		1633002	1					
ANR	1634714	Identifier	AV_LOG_DEBUG		1633002	0					
ANR	1634715	Argument	"""Scale factor:"""		1633002	2					
ANR	1634716	PrimaryExpression	"""Scale factor:"""		1633002	0					
ANR	1634717	ForStatement	for ( k = 0 ; k < s -> subband_activity [ j ] ; k ++ )		1633002	1					
ANR	1634718	ForInit	k = 0 ;	475:13:9210:9215	1633002	0	True				
ANR	1634719	AssignmentExpression	k = 0		1633002	0		=			
ANR	1634720	Identifier	k		1633002	0					
ANR	1634721	PrimaryExpression	0		1633002	1					
ANR	1634722	Condition	k < s -> subband_activity [ j ]	475:20:9217:9242	1633002	1	True				
ANR	1634723	RelationalExpression	k < s -> subband_activity [ j ]		1633002	0		<			
ANR	1634724	Identifier	k		1633002	0					
ANR	1634725	ArrayIndexing	s -> subband_activity [ j ]		1633002	1					
ANR	1634726	PtrMemberAccess	s -> subband_activity		1633002	0					
ANR	1634727	Identifier	s		1633002	0					
ANR	1634728	Identifier	subband_activity		1633002	1					
ANR	1634729	Identifier	j		1633002	1					
ANR	1634730	PostIncDecOperationExpression	k ++	475:48:9245:9247	1633002	2	True				
ANR	1634731	Identifier	k		1633002	0					
ANR	1634732	IncDec	++		1633002	1					
ANR	1634733	CompoundStatement		473:53:9167:9167	1633002	3					
ANR	1634734	IfStatement	if ( k >= s -> vq_start_subband [ j ] || s -> bitalloc [ j ] [ k ] > 0 )		1633002	0					
ANR	1634735	Condition	k >= s -> vq_start_subband [ j ] || s -> bitalloc [ j ] [ k ] > 0	477:16:9269:9320	1633002	0	True				
ANR	1634736	OrExpression	k >= s -> vq_start_subband [ j ] || s -> bitalloc [ j ] [ k ] > 0		1633002	0		||			
ANR	1634737	RelationalExpression	k >= s -> vq_start_subband [ j ]		1633002	0		>=			
ANR	1634738	Identifier	k		1633002	0					
ANR	1634739	ArrayIndexing	s -> vq_start_subband [ j ]		1633002	1					
ANR	1634740	PtrMemberAccess	s -> vq_start_subband		1633002	0					
ANR	1634741	Identifier	s		1633002	0					
ANR	1634742	Identifier	vq_start_subband		1633002	1					
ANR	1634743	Identifier	j		1633002	1					
ANR	1634744	RelationalExpression	s -> bitalloc [ j ] [ k ] > 0		1633002	1		>			
ANR	1634745	ArrayIndexing	s -> bitalloc [ j ] [ k ]		1633002	0					
ANR	1634746	ArrayIndexing	s -> bitalloc [ j ]		1633002	0					
ANR	1634747	PtrMemberAccess	s -> bitalloc		1633002	0					
ANR	1634748	Identifier	s		1633002	0					
ANR	1634749	Identifier	bitalloc		1633002	1					
ANR	1634750	Identifier	j		1633002	1					
ANR	1634751	Identifier	k		1633002	1					
ANR	1634752	PrimaryExpression	0		1633002	1					
ANR	1634753	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_DEBUG , "" %i"" , s -> scale_factor [ j ] [ k ] [ 0 ] )"	479:16:9340:9403	1633002	1	True				
ANR	1634754	CallExpression	"av_log ( s -> avctx , AV_LOG_DEBUG , "" %i"" , s -> scale_factor [ j ] [ k ] [ 0 ] )"		1633002	0					
ANR	1634755	Callee	av_log		1633002	0					
ANR	1634756	Identifier	av_log		1633002	0					
ANR	1634757	ArgumentList	s -> avctx		1633002	1					
ANR	1634758	Argument	s -> avctx		1633002	0					
ANR	1634759	PtrMemberAccess	s -> avctx		1633002	0					
ANR	1634760	Identifier	s		1633002	0					
ANR	1634761	Identifier	avctx		1633002	1					
ANR	1634762	Argument	AV_LOG_DEBUG		1633002	1					
ANR	1634763	Identifier	AV_LOG_DEBUG		1633002	0					
ANR	1634764	Argument	""" %i"""		1633002	2					
ANR	1634765	PrimaryExpression	""" %i"""		1633002	0					
ANR	1634766	Argument	s -> scale_factor [ j ] [ k ] [ 0 ]		1633002	3					
ANR	1634767	ArrayIndexing	s -> scale_factor [ j ] [ k ] [ 0 ]		1633002	0					
ANR	1634768	ArrayIndexing	s -> scale_factor [ j ] [ k ]		1633002	0					
ANR	1634769	ArrayIndexing	s -> scale_factor [ j ]		1633002	0					
ANR	1634770	PtrMemberAccess	s -> scale_factor		1633002	0					
ANR	1634771	Identifier	s		1633002	0					
ANR	1634772	Identifier	scale_factor		1633002	1					
ANR	1634773	Identifier	j		1633002	1					
ANR	1634774	Identifier	k		1633002	1					
ANR	1634775	PrimaryExpression	0		1633002	1					
ANR	1634776	IfStatement	if ( k < s -> vq_start_subband [ j ] && s -> transition_mode [ j ] [ k ] )		1633002	1					
ANR	1634777	Condition	k < s -> vq_start_subband [ j ] && s -> transition_mode [ j ] [ k ]	481:16:9422:9475	1633002	0	True				
ANR	1634778	AndExpression	k < s -> vq_start_subband [ j ] && s -> transition_mode [ j ] [ k ]		1633002	0		&&			
ANR	1634779	RelationalExpression	k < s -> vq_start_subband [ j ]		1633002	0		<			
ANR	1634780	Identifier	k		1633002	0					
ANR	1634781	ArrayIndexing	s -> vq_start_subband [ j ]		1633002	1					
ANR	1634782	PtrMemberAccess	s -> vq_start_subband		1633002	0					
ANR	1634783	Identifier	s		1633002	0					
ANR	1634784	Identifier	vq_start_subband		1633002	1					
ANR	1634785	Identifier	j		1633002	1					
ANR	1634786	ArrayIndexing	s -> transition_mode [ j ] [ k ]		1633002	1					
ANR	1634787	ArrayIndexing	s -> transition_mode [ j ]		1633002	0					
ANR	1634788	PtrMemberAccess	s -> transition_mode		1633002	0					
ANR	1634789	Identifier	s		1633002	0					
ANR	1634790	Identifier	transition_mode		1633002	1					
ANR	1634791	Identifier	j		1633002	1					
ANR	1634792	Identifier	k		1633002	1					
ANR	1634793	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_DEBUG , "" %i(t)"" , s -> scale_factor [ j ] [ k ] [ 1 ] )"	483:16:9495:9561	1633002	1	True				
ANR	1634794	CallExpression	"av_log ( s -> avctx , AV_LOG_DEBUG , "" %i(t)"" , s -> scale_factor [ j ] [ k ] [ 1 ] )"		1633002	0					
ANR	1634795	Callee	av_log		1633002	0					
ANR	1634796	Identifier	av_log		1633002	0					
ANR	1634797	ArgumentList	s -> avctx		1633002	1					
ANR	1634798	Argument	s -> avctx		1633002	0					
ANR	1634799	PtrMemberAccess	s -> avctx		1633002	0					
ANR	1634800	Identifier	s		1633002	0					
ANR	1634801	Identifier	avctx		1633002	1					
ANR	1634802	Argument	AV_LOG_DEBUG		1633002	1					
ANR	1634803	Identifier	AV_LOG_DEBUG		1633002	0					
ANR	1634804	Argument	""" %i(t)"""		1633002	2					
ANR	1634805	PrimaryExpression	""" %i(t)"""		1633002	0					
ANR	1634806	Argument	s -> scale_factor [ j ] [ k ] [ 1 ]		1633002	3					
ANR	1634807	ArrayIndexing	s -> scale_factor [ j ] [ k ] [ 1 ]		1633002	0					
ANR	1634808	ArrayIndexing	s -> scale_factor [ j ] [ k ]		1633002	0					
ANR	1634809	ArrayIndexing	s -> scale_factor [ j ]		1633002	0					
ANR	1634810	PtrMemberAccess	s -> scale_factor		1633002	0					
ANR	1634811	Identifier	s		1633002	0					
ANR	1634812	Identifier	scale_factor		1633002	1					
ANR	1634813	Identifier	j		1633002	1					
ANR	1634814	Identifier	k		1633002	1					
ANR	1634815	PrimaryExpression	1		1633002	1					
ANR	1634816	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_DEBUG , ""\\n"" )"	487:8:9583:9619	1633002	2	True				
ANR	1634817	CallExpression	"av_log ( s -> avctx , AV_LOG_DEBUG , ""\\n"" )"		1633002	0					
ANR	1634818	Callee	av_log		1633002	0					
ANR	1634819	Identifier	av_log		1633002	0					
ANR	1634820	ArgumentList	s -> avctx		1633002	1					
ANR	1634821	Argument	s -> avctx		1633002	0					
ANR	1634822	PtrMemberAccess	s -> avctx		1633002	0					
ANR	1634823	Identifier	s		1633002	0					
ANR	1634824	Identifier	avctx		1633002	1					
ANR	1634825	Argument	AV_LOG_DEBUG		1633002	1					
ANR	1634826	Identifier	AV_LOG_DEBUG		1633002	0					
ANR	1634827	Argument	"""\\n"""		1633002	2					
ANR	1634828	PrimaryExpression	"""\\n"""		1633002	0					
ANR	1634829	ForStatement	for ( j = base_channel ; j < s -> prim_channels ; j ++ )		1633002	24					
ANR	1634830	ForInit	j = base_channel ;	491:9:9638:9654	1633002	0	True				
ANR	1634831	AssignmentExpression	j = base_channel		1633002	0		=			
ANR	1634832	Identifier	j		1633002	0					
ANR	1634833	Identifier	base_channel		1633002	1					
ANR	1634834	Condition	j < s -> prim_channels	491:27:9656:9675	1633002	1	True				
ANR	1634835	RelationalExpression	j < s -> prim_channels		1633002	0		<			
ANR	1634836	Identifier	j		1633002	0					
ANR	1634837	PtrMemberAccess	s -> prim_channels		1633002	1					
ANR	1634838	Identifier	s		1633002	0					
ANR	1634839	Identifier	prim_channels		1633002	1					
ANR	1634840	PostIncDecOperationExpression	j ++	491:49:9678:9680	1633002	2	True				
ANR	1634841	Identifier	j		1633002	0					
ANR	1634842	IncDec	++		1633002	1					
ANR	1634843	CompoundStatement		489:54:9600:9600	1633002	3					
ANR	1634844	IfStatement	if ( s -> joint_intensity [ j ] > 0 )		1633002	0					
ANR	1634845	Condition	s -> joint_intensity [ j ] > 0	493:12:9698:9722	1633002	0	True				
ANR	1634846	RelationalExpression	s -> joint_intensity [ j ] > 0		1633002	0		>			
ANR	1634847	ArrayIndexing	s -> joint_intensity [ j ]		1633002	0					
ANR	1634848	PtrMemberAccess	s -> joint_intensity		1633002	0					
ANR	1634849	Identifier	s		1633002	0					
ANR	1634850	Identifier	joint_intensity		1633002	1					
ANR	1634851	Identifier	j		1633002	1					
ANR	1634852	PrimaryExpression	0		1633002	1					
ANR	1634853	CompoundStatement		493:12:9657:9703	1633002	1					
ANR	1634854	IdentifierDeclStatement	int source_channel = s -> joint_intensity [ j ] - 1 ;	495:12:9740:9786	1633002	0	True				
ANR	1634855	IdentifierDecl	source_channel = s -> joint_intensity [ j ] - 1		1633002	0					
ANR	1634856	IdentifierDeclType	int		1633002	0					
ANR	1634857	Identifier	source_channel		1633002	1					
ANR	1634858	AssignmentExpression	source_channel = s -> joint_intensity [ j ] - 1		1633002	2		=			
ANR	1634859	Identifier	source_channel		1633002	0					
ANR	1634860	AdditiveExpression	s -> joint_intensity [ j ] - 1		1633002	1		-			
ANR	1634861	ArrayIndexing	s -> joint_intensity [ j ]		1633002	0					
ANR	1634862	PtrMemberAccess	s -> joint_intensity		1633002	0					
ANR	1634863	Identifier	s		1633002	0					
ANR	1634864	Identifier	joint_intensity		1633002	1					
ANR	1634865	Identifier	j		1633002	1					
ANR	1634866	PrimaryExpression	1		1633002	1					
ANR	1634867	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_DEBUG , ""Joint scale factor index:\\n"" )"	497:12:9801:9862	1633002	1	True				
ANR	1634868	CallExpression	"av_log ( s -> avctx , AV_LOG_DEBUG , ""Joint scale factor index:\\n"" )"		1633002	0					
ANR	1634869	Callee	av_log		1633002	0					
ANR	1634870	Identifier	av_log		1633002	0					
ANR	1634871	ArgumentList	s -> avctx		1633002	1					
ANR	1634872	Argument	s -> avctx		1633002	0					
ANR	1634873	PtrMemberAccess	s -> avctx		1633002	0					
ANR	1634874	Identifier	s		1633002	0					
ANR	1634875	Identifier	avctx		1633002	1					
ANR	1634876	Argument	AV_LOG_DEBUG		1633002	1					
ANR	1634877	Identifier	AV_LOG_DEBUG		1633002	0					
ANR	1634878	Argument	"""Joint scale factor index:\\n"""		1633002	2					
ANR	1634879	PrimaryExpression	"""Joint scale factor index:\\n"""		1633002	0					
ANR	1634880	ForStatement	for ( k = s -> subband_activity [ j ] ; k < s -> subband_activity [ source_channel ] ; k ++ )		1633002	2					
ANR	1634881	ForInit	k = s -> subband_activity [ j ] ;	499:17:9882:9908	1633002	0	True				
ANR	1634882	AssignmentExpression	k = s -> subband_activity [ j ]		1633002	0		=			
ANR	1634883	Identifier	k		1633002	0					
ANR	1634884	ArrayIndexing	s -> subband_activity [ j ]		1633002	1					
ANR	1634885	PtrMemberAccess	s -> subband_activity		1633002	0					
ANR	1634886	Identifier	s		1633002	0					
ANR	1634887	Identifier	subband_activity		1633002	1					
ANR	1634888	Identifier	j		1633002	1					
ANR	1634889	Condition	k < s -> subband_activity [ source_channel ]	499:45:9910:9948	1633002	1	True				
ANR	1634890	RelationalExpression	k < s -> subband_activity [ source_channel ]		1633002	0		<			
ANR	1634891	Identifier	k		1633002	0					
ANR	1634892	ArrayIndexing	s -> subband_activity [ source_channel ]		1633002	1					
ANR	1634893	PtrMemberAccess	s -> subband_activity		1633002	0					
ANR	1634894	Identifier	s		1633002	0					
ANR	1634895	Identifier	subband_activity		1633002	1					
ANR	1634896	Identifier	source_channel		1633002	1					
ANR	1634897	PostIncDecOperationExpression	k ++	499:86:9951:9953	1633002	2	True				
ANR	1634898	Identifier	k		1633002	0					
ANR	1634899	IncDec	++		1633002	1					
ANR	1634900	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_DEBUG , "" %i"" , s -> joint_scale_factor [ j ] [ k ] )"	501:16:9973:10039	1633002	3	True				
ANR	1634901	CallExpression	"av_log ( s -> avctx , AV_LOG_DEBUG , "" %i"" , s -> joint_scale_factor [ j ] [ k ] )"		1633002	0					
ANR	1634902	Callee	av_log		1633002	0					
ANR	1634903	Identifier	av_log		1633002	0					
ANR	1634904	ArgumentList	s -> avctx		1633002	1					
ANR	1634905	Argument	s -> avctx		1633002	0					
ANR	1634906	PtrMemberAccess	s -> avctx		1633002	0					
ANR	1634907	Identifier	s		1633002	0					
ANR	1634908	Identifier	avctx		1633002	1					
ANR	1634909	Argument	AV_LOG_DEBUG		1633002	1					
ANR	1634910	Identifier	AV_LOG_DEBUG		1633002	0					
ANR	1634911	Argument	""" %i"""		1633002	2					
ANR	1634912	PrimaryExpression	""" %i"""		1633002	0					
ANR	1634913	Argument	s -> joint_scale_factor [ j ] [ k ]		1633002	3					
ANR	1634914	ArrayIndexing	s -> joint_scale_factor [ j ] [ k ]		1633002	0					
ANR	1634915	ArrayIndexing	s -> joint_scale_factor [ j ]		1633002	0					
ANR	1634916	PtrMemberAccess	s -> joint_scale_factor		1633002	0					
ANR	1634917	Identifier	s		1633002	0					
ANR	1634918	Identifier	joint_scale_factor		1633002	1					
ANR	1634919	Identifier	j		1633002	1					
ANR	1634920	Identifier	k		1633002	1					
ANR	1634921	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_DEBUG , ""\\n"" )"	503:12:10054:10090	1633002	3	True				
ANR	1634922	CallExpression	"av_log ( s -> avctx , AV_LOG_DEBUG , ""\\n"" )"		1633002	0					
ANR	1634923	Callee	av_log		1633002	0					
ANR	1634924	Identifier	av_log		1633002	0					
ANR	1634925	ArgumentList	s -> avctx		1633002	1					
ANR	1634926	Argument	s -> avctx		1633002	0					
ANR	1634927	PtrMemberAccess	s -> avctx		1633002	0					
ANR	1634928	Identifier	s		1633002	0					
ANR	1634929	Identifier	avctx		1633002	1					
ANR	1634930	Argument	AV_LOG_DEBUG		1633002	1					
ANR	1634931	Identifier	AV_LOG_DEBUG		1633002	0					
ANR	1634932	Argument	"""\\n"""		1633002	2					
ANR	1634933	PrimaryExpression	"""\\n"""		1633002	0					
ANR	1634934	IfStatement	if ( ! base_channel && s -> prim_channels > 2 && s -> downmix )		1633002	25					
ANR	1634935	Condition	! base_channel && s -> prim_channels > 2 && s -> downmix	509:8:10119:10169	1633002	0	True				
ANR	1634936	AndExpression	! base_channel && s -> prim_channels > 2 && s -> downmix		1633002	0		&&			
ANR	1634937	UnaryOperationExpression	! base_channel		1633002	0					
ANR	1634938	UnaryOperator	!		1633002	0					
ANR	1634939	Identifier	base_channel		1633002	1					
ANR	1634940	AndExpression	s -> prim_channels > 2 && s -> downmix		1633002	1		&&			
ANR	1634941	RelationalExpression	s -> prim_channels > 2		1633002	0		>			
ANR	1634942	PtrMemberAccess	s -> prim_channels		1633002	0					
ANR	1634943	Identifier	s		1633002	0					
ANR	1634944	Identifier	prim_channels		1633002	1					
ANR	1634945	PrimaryExpression	2		1633002	1					
ANR	1634946	PtrMemberAccess	s -> downmix		1633002	1					
ANR	1634947	Identifier	s		1633002	0					
ANR	1634948	Identifier	downmix		1633002	1					
ANR	1634949	CompoundStatement		507:61:10089:10089	1633002	1					
ANR	1634950	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_DEBUG , ""Downmix coeffs:\\n"" )"	511:8:10183:10234	1633002	0	True				
ANR	1634951	CallExpression	"av_log ( s -> avctx , AV_LOG_DEBUG , ""Downmix coeffs:\\n"" )"		1633002	0					
ANR	1634952	Callee	av_log		1633002	0					
ANR	1634953	Identifier	av_log		1633002	0					
ANR	1634954	ArgumentList	s -> avctx		1633002	1					
ANR	1634955	Argument	s -> avctx		1633002	0					
ANR	1634956	PtrMemberAccess	s -> avctx		1633002	0					
ANR	1634957	Identifier	s		1633002	0					
ANR	1634958	Identifier	avctx		1633002	1					
ANR	1634959	Argument	AV_LOG_DEBUG		1633002	1					
ANR	1634960	Identifier	AV_LOG_DEBUG		1633002	0					
ANR	1634961	Argument	"""Downmix coeffs:\\n"""		1633002	2					
ANR	1634962	PrimaryExpression	"""Downmix coeffs:\\n"""		1633002	0					
ANR	1634963	ForStatement	for ( j = 0 ; j < s -> prim_channels ; j ++ )		1633002	1					
ANR	1634964	ForInit	j = 0 ;	513:13:10250:10255	1633002	0	True				
ANR	1634965	AssignmentExpression	j = 0		1633002	0		=			
ANR	1634966	Identifier	j		1633002	0					
ANR	1634967	PrimaryExpression	0		1633002	1					
ANR	1634968	Condition	j < s -> prim_channels	513:20:10257:10276	1633002	1	True				
ANR	1634969	RelationalExpression	j < s -> prim_channels		1633002	0		<			
ANR	1634970	Identifier	j		1633002	0					
ANR	1634971	PtrMemberAccess	s -> prim_channels		1633002	1					
ANR	1634972	Identifier	s		1633002	0					
ANR	1634973	Identifier	prim_channels		1633002	1					
ANR	1634974	PostIncDecOperationExpression	j ++	513:42:10279:10281	1633002	2	True				
ANR	1634975	Identifier	j		1633002	0					
ANR	1634976	IncDec	++		1633002	1					
ANR	1634977	CompoundStatement		511:47:10201:10201	1633002	3					
ANR	1634978	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_DEBUG , ""Channel 0, %d = %f\\n"" , j , dca_downmix_coeffs [ s -> downmix_coef [ j ] [ 0 ] ] )"	515:12:10299:10419	1633002	0	True				
ANR	1634979	CallExpression	"av_log ( s -> avctx , AV_LOG_DEBUG , ""Channel 0, %d = %f\\n"" , j , dca_downmix_coeffs [ s -> downmix_coef [ j ] [ 0 ] ] )"		1633002	0					
ANR	1634980	Callee	av_log		1633002	0					
ANR	1634981	Identifier	av_log		1633002	0					
ANR	1634982	ArgumentList	s -> avctx		1633002	1					
ANR	1634983	Argument	s -> avctx		1633002	0					
ANR	1634984	PtrMemberAccess	s -> avctx		1633002	0					
ANR	1634985	Identifier	s		1633002	0					
ANR	1634986	Identifier	avctx		1633002	1					
ANR	1634987	Argument	AV_LOG_DEBUG		1633002	1					
ANR	1634988	Identifier	AV_LOG_DEBUG		1633002	0					
ANR	1634989	Argument	"""Channel 0, %d = %f\\n"""		1633002	2					
ANR	1634990	PrimaryExpression	"""Channel 0, %d = %f\\n"""		1633002	0					
ANR	1634991	Argument	j		1633002	3					
ANR	1634992	Identifier	j		1633002	0					
ANR	1634993	Argument	dca_downmix_coeffs [ s -> downmix_coef [ j ] [ 0 ] ]		1633002	4					
ANR	1634994	ArrayIndexing	dca_downmix_coeffs [ s -> downmix_coef [ j ] [ 0 ] ]		1633002	0					
ANR	1634995	Identifier	dca_downmix_coeffs		1633002	0					
ANR	1634996	ArrayIndexing	s -> downmix_coef [ j ] [ 0 ]		1633002	1					
ANR	1634997	ArrayIndexing	s -> downmix_coef [ j ]		1633002	0					
ANR	1634998	PtrMemberAccess	s -> downmix_coef		1633002	0					
ANR	1634999	Identifier	s		1633002	0					
ANR	1635000	Identifier	downmix_coef		1633002	1					
ANR	1635001	Identifier	j		1633002	1					
ANR	1635002	PrimaryExpression	0		1633002	1					
ANR	1635003	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_DEBUG , ""Channel 1, %d = %f\\n"" , j , dca_downmix_coeffs [ s -> downmix_coef [ j ] [ 1 ] ] )"	519:12:10434:10554	1633002	1	True				
ANR	1635004	CallExpression	"av_log ( s -> avctx , AV_LOG_DEBUG , ""Channel 1, %d = %f\\n"" , j , dca_downmix_coeffs [ s -> downmix_coef [ j ] [ 1 ] ] )"		1633002	0					
ANR	1635005	Callee	av_log		1633002	0					
ANR	1635006	Identifier	av_log		1633002	0					
ANR	1635007	ArgumentList	s -> avctx		1633002	1					
ANR	1635008	Argument	s -> avctx		1633002	0					
ANR	1635009	PtrMemberAccess	s -> avctx		1633002	0					
ANR	1635010	Identifier	s		1633002	0					
ANR	1635011	Identifier	avctx		1633002	1					
ANR	1635012	Argument	AV_LOG_DEBUG		1633002	1					
ANR	1635013	Identifier	AV_LOG_DEBUG		1633002	0					
ANR	1635014	Argument	"""Channel 1, %d = %f\\n"""		1633002	2					
ANR	1635015	PrimaryExpression	"""Channel 1, %d = %f\\n"""		1633002	0					
ANR	1635016	Argument	j		1633002	3					
ANR	1635017	Identifier	j		1633002	0					
ANR	1635018	Argument	dca_downmix_coeffs [ s -> downmix_coef [ j ] [ 1 ] ]		1633002	4					
ANR	1635019	ArrayIndexing	dca_downmix_coeffs [ s -> downmix_coef [ j ] [ 1 ] ]		1633002	0					
ANR	1635020	Identifier	dca_downmix_coeffs		1633002	0					
ANR	1635021	ArrayIndexing	s -> downmix_coef [ j ] [ 1 ]		1633002	1					
ANR	1635022	ArrayIndexing	s -> downmix_coef [ j ]		1633002	0					
ANR	1635023	PtrMemberAccess	s -> downmix_coef		1633002	0					
ANR	1635024	Identifier	s		1633002	0					
ANR	1635025	Identifier	downmix_coef		1633002	1					
ANR	1635026	Identifier	j		1633002	1					
ANR	1635027	PrimaryExpression	1		1633002	1					
ANR	1635028	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_DEBUG , ""\\n"" )"	525:8:10576:10612	1633002	2	True				
ANR	1635029	CallExpression	"av_log ( s -> avctx , AV_LOG_DEBUG , ""\\n"" )"		1633002	0					
ANR	1635030	Callee	av_log		1633002	0					
ANR	1635031	Identifier	av_log		1633002	0					
ANR	1635032	ArgumentList	s -> avctx		1633002	1					
ANR	1635033	Argument	s -> avctx		1633002	0					
ANR	1635034	PtrMemberAccess	s -> avctx		1633002	0					
ANR	1635035	Identifier	s		1633002	0					
ANR	1635036	Identifier	avctx		1633002	1					
ANR	1635037	Argument	AV_LOG_DEBUG		1633002	1					
ANR	1635038	Identifier	AV_LOG_DEBUG		1633002	0					
ANR	1635039	Argument	"""\\n"""		1633002	2					
ANR	1635040	PrimaryExpression	"""\\n"""		1633002	0					
ANR	1635041	ForStatement	for ( j = base_channel ; j < s -> prim_channels ; j ++ )		1633002	26					
ANR	1635042	ForInit	j = base_channel ;	529:9:10631:10647	1633002	0	True				
ANR	1635043	AssignmentExpression	j = base_channel		1633002	0		=			
ANR	1635044	Identifier	j		1633002	0					
ANR	1635045	Identifier	base_channel		1633002	1					
ANR	1635046	Condition	j < s -> prim_channels	529:27:10649:10668	1633002	1	True				
ANR	1635047	RelationalExpression	j < s -> prim_channels		1633002	0		<			
ANR	1635048	Identifier	j		1633002	0					
ANR	1635049	PtrMemberAccess	s -> prim_channels		1633002	1					
ANR	1635050	Identifier	s		1633002	0					
ANR	1635051	Identifier	prim_channels		1633002	1					
ANR	1635052	PostIncDecOperationExpression	j ++	529:49:10671:10673	1633002	2	True				
ANR	1635053	Identifier	j		1633002	0					
ANR	1635054	IncDec	++		1633002	1					
ANR	1635055	ForStatement	for ( k = s -> vq_start_subband [ j ] ; k < s -> subband_activity [ j ] ; k ++ )		1633002	3					
ANR	1635056	ForInit	k = s -> vq_start_subband [ j ] ;	531:13:10690:10716	1633002	0	True				
ANR	1635057	AssignmentExpression	k = s -> vq_start_subband [ j ]		1633002	0		=			
ANR	1635058	Identifier	k		1633002	0					
ANR	1635059	ArrayIndexing	s -> vq_start_subband [ j ]		1633002	1					
ANR	1635060	PtrMemberAccess	s -> vq_start_subband		1633002	0					
ANR	1635061	Identifier	s		1633002	0					
ANR	1635062	Identifier	vq_start_subband		1633002	1					
ANR	1635063	Identifier	j		1633002	1					
ANR	1635064	Condition	k < s -> subband_activity [ j ]	531:41:10718:10743	1633002	1	True				
ANR	1635065	RelationalExpression	k < s -> subband_activity [ j ]		1633002	0		<			
ANR	1635066	Identifier	k		1633002	0					
ANR	1635067	ArrayIndexing	s -> subband_activity [ j ]		1633002	1					
ANR	1635068	PtrMemberAccess	s -> subband_activity		1633002	0					
ANR	1635069	Identifier	s		1633002	0					
ANR	1635070	Identifier	subband_activity		1633002	1					
ANR	1635071	Identifier	j		1633002	1					
ANR	1635072	PostIncDecOperationExpression	k ++	531:69:10746:10748	1633002	2	True				
ANR	1635073	Identifier	k		1633002	0					
ANR	1635074	IncDec	++		1633002	1					
ANR	1635075	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_DEBUG , ""VQ index: %i\\n"" , s -> high_freq_vq [ j ] [ k ] )"	533:12:10764:10835	1633002	3	True				
ANR	1635076	CallExpression	"av_log ( s -> avctx , AV_LOG_DEBUG , ""VQ index: %i\\n"" , s -> high_freq_vq [ j ] [ k ] )"		1633002	0					
ANR	1635077	Callee	av_log		1633002	0					
ANR	1635078	Identifier	av_log		1633002	0					
ANR	1635079	ArgumentList	s -> avctx		1633002	1					
ANR	1635080	Argument	s -> avctx		1633002	0					
ANR	1635081	PtrMemberAccess	s -> avctx		1633002	0					
ANR	1635082	Identifier	s		1633002	0					
ANR	1635083	Identifier	avctx		1633002	1					
ANR	1635084	Argument	AV_LOG_DEBUG		1633002	1					
ANR	1635085	Identifier	AV_LOG_DEBUG		1633002	0					
ANR	1635086	Argument	"""VQ index: %i\\n"""		1633002	2					
ANR	1635087	PrimaryExpression	"""VQ index: %i\\n"""		1633002	0					
ANR	1635088	Argument	s -> high_freq_vq [ j ] [ k ]		1633002	3					
ANR	1635089	ArrayIndexing	s -> high_freq_vq [ j ] [ k ]		1633002	0					
ANR	1635090	ArrayIndexing	s -> high_freq_vq [ j ]		1633002	0					
ANR	1635091	PtrMemberAccess	s -> high_freq_vq		1633002	0					
ANR	1635092	Identifier	s		1633002	0					
ANR	1635093	Identifier	high_freq_vq		1633002	1					
ANR	1635094	Identifier	j		1633002	1					
ANR	1635095	Identifier	k		1633002	1					
ANR	1635096	IfStatement	if ( ! base_channel && s -> lfe )		1633002	27					
ANR	1635097	Condition	! base_channel && s -> lfe	535:8:10846:10868	1633002	0	True				
ANR	1635098	AndExpression	! base_channel && s -> lfe		1633002	0		&&			
ANR	1635099	UnaryOperationExpression	! base_channel		1633002	0					
ANR	1635100	UnaryOperator	!		1633002	0					
ANR	1635101	Identifier	base_channel		1633002	1					
ANR	1635102	PtrMemberAccess	s -> lfe		1633002	1					
ANR	1635103	Identifier	s		1633002	0					
ANR	1635104	Identifier	lfe		1633002	1					
ANR	1635105	CompoundStatement		537:8:10858:10948	1633002	1					
ANR	1635106	IdentifierDeclStatement	int lfe_samples = 2 * s -> lfe * ( 4 + block_index ) ;	537:8:10882:10930	1633002	0	True				
ANR	1635107	IdentifierDecl	lfe_samples = 2 * s -> lfe * ( 4 + block_index )		1633002	0					
ANR	1635108	IdentifierDeclType	int		1633002	0					
ANR	1635109	Identifier	lfe_samples		1633002	1					
ANR	1635110	AssignmentExpression	lfe_samples = 2 * s -> lfe * ( 4 + block_index )		1633002	2		=			
ANR	1635111	Identifier	lfe_samples		1633002	0					
ANR	1635112	MultiplicativeExpression	2 * s -> lfe * ( 4 + block_index )		1633002	1		*			
ANR	1635113	PrimaryExpression	2		1633002	0					
ANR	1635114	MultiplicativeExpression	s -> lfe * ( 4 + block_index )		1633002	1		*			
ANR	1635115	PtrMemberAccess	s -> lfe		1633002	0					
ANR	1635116	Identifier	s		1633002	0					
ANR	1635117	Identifier	lfe		1633002	1					
ANR	1635118	AdditiveExpression	4 + block_index		1633002	1		+			
ANR	1635119	PrimaryExpression	4		1633002	0					
ANR	1635120	Identifier	block_index		1633002	1					
ANR	1635121	IdentifierDeclStatement	int lfe_end_sample = 2 * s -> lfe * ( 4 + block_index + s -> subsubframes [ s -> current_subframe ] ) ;	539:8:10941:11031	1633002	1	True				
ANR	1635122	IdentifierDecl	lfe_end_sample = 2 * s -> lfe * ( 4 + block_index + s -> subsubframes [ s -> current_subframe ] )		1633002	0					
ANR	1635123	IdentifierDeclType	int		1633002	0					
ANR	1635124	Identifier	lfe_end_sample		1633002	1					
ANR	1635125	AssignmentExpression	lfe_end_sample = 2 * s -> lfe * ( 4 + block_index + s -> subsubframes [ s -> current_subframe ] )		1633002	2		=			
ANR	1635126	Identifier	lfe_end_sample		1633002	0					
ANR	1635127	MultiplicativeExpression	2 * s -> lfe * ( 4 + block_index + s -> subsubframes [ s -> current_subframe ] )		1633002	1		*			
ANR	1635128	PrimaryExpression	2		1633002	0					
ANR	1635129	MultiplicativeExpression	s -> lfe * ( 4 + block_index + s -> subsubframes [ s -> current_subframe ] )		1633002	1		*			
ANR	1635130	PtrMemberAccess	s -> lfe		1633002	0					
ANR	1635131	Identifier	s		1633002	0					
ANR	1635132	Identifier	lfe		1633002	1					
ANR	1635133	AdditiveExpression	4 + block_index + s -> subsubframes [ s -> current_subframe ]		1633002	1		+			
ANR	1635134	PrimaryExpression	4		1633002	0					
ANR	1635135	AdditiveExpression	block_index + s -> subsubframes [ s -> current_subframe ]		1633002	1		+			
ANR	1635136	Identifier	block_index		1633002	0					
ANR	1635137	ArrayIndexing	s -> subsubframes [ s -> current_subframe ]		1633002	1					
ANR	1635138	PtrMemberAccess	s -> subsubframes		1633002	0					
ANR	1635139	Identifier	s		1633002	0					
ANR	1635140	Identifier	subsubframes		1633002	1					
ANR	1635141	PtrMemberAccess	s -> current_subframe		1633002	1					
ANR	1635142	Identifier	s		1633002	0					
ANR	1635143	Identifier	current_subframe		1633002	1					
ANR	1635144	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_DEBUG , ""LFE samples:\\n"" )"	543:8:11044:11092	1633002	2	True				
ANR	1635145	CallExpression	"av_log ( s -> avctx , AV_LOG_DEBUG , ""LFE samples:\\n"" )"		1633002	0					
ANR	1635146	Callee	av_log		1633002	0					
ANR	1635147	Identifier	av_log		1633002	0					
ANR	1635148	ArgumentList	s -> avctx		1633002	1					
ANR	1635149	Argument	s -> avctx		1633002	0					
ANR	1635150	PtrMemberAccess	s -> avctx		1633002	0					
ANR	1635151	Identifier	s		1633002	0					
ANR	1635152	Identifier	avctx		1633002	1					
ANR	1635153	Argument	AV_LOG_DEBUG		1633002	1					
ANR	1635154	Identifier	AV_LOG_DEBUG		1633002	0					
ANR	1635155	Argument	"""LFE samples:\\n"""		1633002	2					
ANR	1635156	PrimaryExpression	"""LFE samples:\\n"""		1633002	0					
ANR	1635157	ForStatement	for ( j = lfe_samples ; j < lfe_end_sample ; j ++ )		1633002	3					
ANR	1635158	ForInit	j = lfe_samples ;	545:13:11108:11123	1633002	0	True				
ANR	1635159	AssignmentExpression	j = lfe_samples		1633002	0		=			
ANR	1635160	Identifier	j		1633002	0					
ANR	1635161	Identifier	lfe_samples		1633002	1					
ANR	1635162	Condition	j < lfe_end_sample	545:30:11125:11142	1633002	1	True				
ANR	1635163	RelationalExpression	j < lfe_end_sample		1633002	0		<			
ANR	1635164	Identifier	j		1633002	0					
ANR	1635165	Identifier	lfe_end_sample		1633002	1					
ANR	1635166	PostIncDecOperationExpression	j ++	545:50:11145:11147	1633002	2	True				
ANR	1635167	Identifier	j		1633002	0					
ANR	1635168	IncDec	++		1633002	1					
ANR	1635169	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_DEBUG , "" %f"" , s -> lfe_data [ j ] )"	547:12:11163:11216	1633002	3	True				
ANR	1635170	CallExpression	"av_log ( s -> avctx , AV_LOG_DEBUG , "" %f"" , s -> lfe_data [ j ] )"		1633002	0					
ANR	1635171	Callee	av_log		1633002	0					
ANR	1635172	Identifier	av_log		1633002	0					
ANR	1635173	ArgumentList	s -> avctx		1633002	1					
ANR	1635174	Argument	s -> avctx		1633002	0					
ANR	1635175	PtrMemberAccess	s -> avctx		1633002	0					
ANR	1635176	Identifier	s		1633002	0					
ANR	1635177	Identifier	avctx		1633002	1					
ANR	1635178	Argument	AV_LOG_DEBUG		1633002	1					
ANR	1635179	Identifier	AV_LOG_DEBUG		1633002	0					
ANR	1635180	Argument	""" %f"""		1633002	2					
ANR	1635181	PrimaryExpression	""" %f"""		1633002	0					
ANR	1635182	Argument	s -> lfe_data [ j ]		1633002	3					
ANR	1635183	ArrayIndexing	s -> lfe_data [ j ]		1633002	0					
ANR	1635184	PtrMemberAccess	s -> lfe_data		1633002	0					
ANR	1635185	Identifier	s		1633002	0					
ANR	1635186	Identifier	lfe_data		1633002	1					
ANR	1635187	Identifier	j		1633002	1					
ANR	1635188	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_DEBUG , ""\\n"" )"	549:8:11227:11263	1633002	4	True				
ANR	1635189	CallExpression	"av_log ( s -> avctx , AV_LOG_DEBUG , ""\\n"" )"		1633002	0					
ANR	1635190	Callee	av_log		1633002	0					
ANR	1635191	Identifier	av_log		1633002	0					
ANR	1635192	ArgumentList	s -> avctx		1633002	1					
ANR	1635193	Argument	s -> avctx		1633002	0					
ANR	1635194	PtrMemberAccess	s -> avctx		1633002	0					
ANR	1635195	Identifier	s		1633002	0					
ANR	1635196	Identifier	avctx		1633002	1					
ANR	1635197	Argument	AV_LOG_DEBUG		1633002	1					
ANR	1635198	Identifier	AV_LOG_DEBUG		1633002	0					
ANR	1635199	Argument	"""\\n"""		1633002	2					
ANR	1635200	PrimaryExpression	"""\\n"""		1633002	0					
ANR	1635201	ReturnStatement	return 0 ;	557:4:11287:11295	1633002	28	True				
ANR	1635202	PrimaryExpression	0		1633002	0					
ANR	1635203	ReturnType	static int		1633002	1					
ANR	1635204	Identifier	dca_subframe_header		1633002	2					
ANR	1635205	ParameterList	"DCAContext * s , int base_channel , int block_index"		1633002	3					
ANR	1635206	Parameter	DCAContext * s	1:31:31:43	1633002	0	True				
ANR	1635207	ParameterType	DCAContext *		1633002	0					
ANR	1635208	Identifier	s		1633002	1					
ANR	1635209	Parameter	int base_channel	1:46:46:61	1633002	1	True				
ANR	1635210	ParameterType	int		1633002	0					
ANR	1635211	Identifier	base_channel		1633002	1					
ANR	1635212	Parameter	int block_index	1:64:64:78	1633002	2	True				
ANR	1635213	ParameterType	int		1633002	0					
ANR	1635214	Identifier	block_index		1633002	1					
ANR	1635215	CFGEntryNode	ENTRY		1633002		True				
ANR	1635216	CFGExitNode	EXIT		1633002		True				
ANR	1635217	Symbol	* scale_factor_quant7		1633002						
ANR	1635218	Symbol	scale_table		1633002						
ANR	1635219	Symbol	s -> bitalloc		1633002						
ANR	1635220	Symbol	adpcm_vb		1633002						
ANR	1635221	Symbol	log_size		1633002						
ANR	1635222	Symbol	* * * s -> downmix_coef		1633002						
ANR	1635223	Symbol	* s -> scalefactor_huffman		1633002						
ANR	1635224	Symbol	* * * s -> prediction_vq		1633002						
ANR	1635225	Symbol	AV_LOG_DEBUG		1633002						
ANR	1635226	Symbol	* quant7		1633002						
ANR	1635227	Symbol	s -> current_subframe		1633002						
ANR	1635228	Symbol	dca_downmix_coeffs		1633002						
ANR	1635229	Symbol	quant7		1633002						
ANR	1635230	Symbol	am		1633002						
ANR	1635231	Symbol	* * * s		1633002						
ANR	1635232	Symbol	s -> joint_scale_factor		1633002						
ANR	1635233	Symbol	& s -> gb		1633002						
ANR	1635234	Symbol	dca_default_coeffs		1633002						
ANR	1635235	Symbol	* s -> bitalloc_huffman		1633002						
ANR	1635236	Symbol	FF_ARRAY_ELEMS		1633002						
ANR	1635237	Symbol	* dca_default_coeffs		1633002						
ANR	1635238	Symbol	* * * k		1633002						
ANR	1635239	Symbol	* * * j		1633002						
ANR	1635240	Symbol	* * * s -> scale_factor		1633002						
ANR	1635241	Symbol	block_index		1633002						
ANR	1635242	Symbol	lfe_scale		1633002						
ANR	1635243	Symbol	& dca_tmode		1633002						
ANR	1635244	Symbol	* source_channel		1633002						
ANR	1635245	Symbol	* s -> bitalloc		1633002						
ANR	1635246	Symbol	s -> transient_huffman		1633002						
ANR	1635247	Symbol	* * s -> prediction_vq		1633002						
ANR	1635248	Symbol	s -> dynrange		1633002						
ANR	1635249	Symbol	* * dca_default_coeffs		1633002						
ANR	1635250	Symbol	* * s		1633002						
ANR	1635251	Symbol	* * s -> scale_factor		1633002						
ANR	1635252	Symbol	* * adpcm_vb		1633002						
ANR	1635253	Symbol	DCA_CHANNEL_MASK		1633002						
ANR	1635254	Symbol	AV_LOG_ERROR		1633002						
ANR	1635255	Symbol	* s -> downmix_coef		1633002						
ANR	1635256	Symbol	j		1633002						
ANR	1635257	Symbol	s -> amode		1633002						
ANR	1635258	Symbol	lfe_end_sample		1633002						
ANR	1635259	Symbol	k		1633002						
ANR	1635260	Symbol	& dca_bitalloc_index		1633002						
ANR	1635261	Symbol	get_bitalloc		1633002						
ANR	1635262	Symbol	get_scale		1633002						
ANR	1635263	Symbol	s		1633002						
ANR	1635264	Symbol	* * s -> prediction_mode		1633002						
ANR	1635265	Symbol	* * s -> transition_mode		1633002						
ANR	1635266	Symbol	AVERROR_INVALIDDATA		1633002						
ANR	1635267	Symbol	* s -> high_freq_vq		1633002						
ANR	1635268	Symbol	lfe_samples		1633002						
ANR	1635269	Symbol	get_sbits		1633002						
ANR	1635270	Symbol	s -> debug_flag		1633002						
ANR	1635271	Symbol	* * * * s -> prediction_vq		1633002						
ANR	1635272	Symbol	* * * * s		1633002						
ANR	1635273	Symbol	get_bits		1633002						
ANR	1635274	Symbol	* s -> transient_huffman		1633002						
ANR	1635275	Symbol	* s -> transition_mode		1633002						
ANR	1635276	Symbol	s -> lfe_scale_factor		1633002						
ANR	1635277	Symbol	* * * * j		1633002						
ANR	1635278	Symbol	* s -> current_subframe		1633002						
ANR	1635279	Symbol	* s -> prediction_vq		1633002						
ANR	1635280	Symbol	* s -> prediction_mode		1633002						
ANR	1635281	Symbol	* * am		1633002						
ANR	1635282	Symbol	* * s -> high_freq_vq		1633002						
ANR	1635283	Symbol	* s -> joint_intensity		1633002						
ANR	1635284	Symbol	s -> dynrange_coef		1633002						
ANR	1635285	Symbol	* * k		1633002						
ANR	1635286	Symbol	* * j		1633002						
ANR	1635287	Symbol	* s -> vq_start_subband		1633002						
ANR	1635288	Symbol	s -> joint_intensity		1633002						
ANR	1635289	Symbol	source_channel		1633002						
ANR	1635290	Symbol	* s -> subband_activity		1633002						
ANR	1635291	Symbol	s -> prim_channels		1633002						
ANR	1635292	Symbol	* scale_sum		1633002						
ANR	1635293	Symbol	s -> scalefactor_huffman		1633002						
ANR	1635294	Symbol	s -> joint_huff		1633002						
ANR	1635295	Symbol	s -> bitalloc_huffman		1633002						
ANR	1635296	Symbol	* s -> subsubframes		1633002						
ANR	1635297	Symbol	s -> partial_samples		1633002						
ANR	1635298	Symbol	s -> subband_activity		1633002						
ANR	1635299	Symbol	* * * dca_default_coeffs		1633002						
ANR	1635300	Symbol	* * s -> bitalloc		1633002						
ANR	1635301	Symbol	s -> lfe_data		1633002						
ANR	1635302	Symbol	s -> scale_factor		1633002						
ANR	1635303	Symbol	s -> crc_present		1633002						
ANR	1635304	Symbol	s -> high_freq_vq		1633002						
ANR	1635305	Symbol	s -> lfe		1633002						
ANR	1635306	Symbol	s -> avctx		1633002						
ANR	1635307	Symbol	s -> vq_start_subband		1633002						
ANR	1635308	Symbol	scale_sum		1633002						
ANR	1635309	Symbol	* dca_downmix_coeffs		1633002						
ANR	1635310	Symbol	scale_factor_quant6		1633002						
ANR	1635311	Symbol	scale_factor_quant7		1633002						
ANR	1635312	Symbol	s -> downmix		1633002						
ANR	1635313	Symbol	scale		1633002						
ANR	1635314	Symbol	* s -> joint_huff		1633002						
ANR	1635315	Symbol	get_bits_left		1633002						
ANR	1635316	Symbol	base_channel		1633002						
ANR	1635317	Symbol	s -> prediction_mode		1633002						
ANR	1635318	Symbol	s -> prediction_vq		1633002						
ANR	1635319	Symbol	s -> downmix_coef		1633002						
ANR	1635320	Symbol	* * s -> joint_scale_factor		1633002						
ANR	1635321	Symbol	* * s -> downmix_coef		1633002						
ANR	1635322	Symbol	* scale_table		1633002						
ANR	1635323	Symbol	* adpcm_vb		1633002						
ANR	1635324	Symbol	* s -> joint_scale_factor		1633002						
ANR	1635325	Symbol	* am		1633002						
ANR	1635326	Symbol	* j		1633002						
ANR	1635327	Symbol	* * * am		1633002						
ANR	1635328	Symbol	* k		1633002						
ANR	1635329	Symbol	s -> transition_mode		1633002						
ANR	1635330	Symbol	* s -> partial_samples		1633002						
ANR	1635331	Symbol	* * * * * s		1633002						
ANR	1635332	Symbol	s -> subsubframes		1633002						
ANR	1635333	Symbol	* s -> lfe_data		1633002						
ANR	1635334	Symbol	* s		1633002						
ANR	1635335	Symbol	* s -> scale_factor		1633002						
