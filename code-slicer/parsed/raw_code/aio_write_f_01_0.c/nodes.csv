command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	500788	File	/home/p4ultr4n/workplace/ReVeal/raw_code/aio_write_f_01_0.c								
ANR	500789	Function	aio_write_f	1:0:0:1501							
ANR	500790	FunctionDef	"aio_write_f (int argc , char * * argv)"		500789	0					
ANR	500791	CompoundStatement		3:0:47:1501	500789	0					
ANR	500792	IdentifierDeclStatement	"int nr_iov , c ;"	5:4:54:67	500789	0	True				
ANR	500793	IdentifierDecl	nr_iov		500789	0					
ANR	500794	IdentifierDeclType	int		500789	0					
ANR	500795	Identifier	nr_iov		500789	1					
ANR	500796	IdentifierDecl	c		500789	1					
ANR	500797	IdentifierDeclType	int		500789	0					
ANR	500798	Identifier	c		500789	1					
ANR	500799	IdentifierDeclStatement	int pattern = 0xcd ;	7:4:74:92	500789	1	True				
ANR	500800	IdentifierDecl	pattern = 0xcd		500789	0					
ANR	500801	IdentifierDeclType	int		500789	0					
ANR	500802	Identifier	pattern		500789	1					
ANR	500803	AssignmentExpression	pattern = 0xcd		500789	2		=			
ANR	500804	Identifier	pattern		500789	0					
ANR	500805	PrimaryExpression	0xcd		500789	1					
ANR	500806	IdentifierDeclStatement	"struct aio_ctx * ctx = calloc ( 1 , sizeof ( struct aio_ctx ) ) ;"	9:4:99:154	500789	2	True				
ANR	500807	IdentifierDecl	"* ctx = calloc ( 1 , sizeof ( struct aio_ctx ) )"		500789	0					
ANR	500808	IdentifierDeclType	struct aio_ctx *		500789	0					
ANR	500809	Identifier	ctx		500789	1					
ANR	500810	AssignmentExpression	"* ctx = calloc ( 1 , sizeof ( struct aio_ctx ) )"		500789	2		=			
ANR	500811	Identifier	ctx		500789	0					
ANR	500812	CallExpression	"calloc ( 1 , sizeof ( struct aio_ctx ) )"		500789	1					
ANR	500813	Callee	calloc		500789	0					
ANR	500814	Identifier	calloc		500789	0					
ANR	500815	ArgumentList	1		500789	1					
ANR	500816	Argument	1		500789	0					
ANR	500817	PrimaryExpression	1		500789	0					
ANR	500818	Argument	sizeof ( struct aio_ctx )		500789	1					
ANR	500819	SizeofExpression	sizeof ( struct aio_ctx )		500789	0					
ANR	500820	Sizeof	sizeof		500789	0					
ANR	500821	SizeofOperand	struct aio_ctx		500789	1					
ANR	500822	WhileStatement	"while ( ( c = getopt ( argc , argv , ""CqP:"" ) ) != EOF )"		500789	3					
ANR	500823	Condition	"( c = getopt ( argc , argv , ""CqP:"" ) ) != EOF"	13:11:170:208	500789	0	True				
ANR	500824	EqualityExpression	"( c = getopt ( argc , argv , ""CqP:"" ) ) != EOF"		500789	0		!=			
ANR	500825	AssignmentExpression	"c = getopt ( argc , argv , ""CqP:"" )"		500789	0		=			
ANR	500826	Identifier	c		500789	0					
ANR	500827	CallExpression	"getopt ( argc , argv , ""CqP:"" )"		500789	1					
ANR	500828	Callee	getopt		500789	0					
ANR	500829	Identifier	getopt		500789	0					
ANR	500830	ArgumentList	argc		500789	1					
ANR	500831	Argument	argc		500789	0					
ANR	500832	Identifier	argc		500789	0					
ANR	500833	Argument	argv		500789	1					
ANR	500834	Identifier	argv		500789	0					
ANR	500835	Argument	"""CqP:"""		500789	2					
ANR	500836	PrimaryExpression	"""CqP:"""		500789	0					
ANR	500837	Identifier	EOF		500789	1					
ANR	500838	CompoundStatement		11:52:163:163	500789	1					
ANR	500839	SwitchStatement	switch ( c )		500789	0					
ANR	500840	Condition	c	15:16:230:230	500789	0	True				
ANR	500841	Identifier	c		500789	0					
ANR	500842	CompoundStatement		13:19:185:185	500789	1					
ANR	500843	Label	case 'C' :	17:8:244:252	500789	0	True				
ANR	500844	ExpressionStatement	ctx -> Cflag = 1	19:12:267:281	500789	1	True				
ANR	500845	AssignmentExpression	ctx -> Cflag = 1		500789	0		=			
ANR	500846	PtrMemberAccess	ctx -> Cflag		500789	0					
ANR	500847	Identifier	ctx		500789	0					
ANR	500848	Identifier	Cflag		500789	1					
ANR	500849	PrimaryExpression	1		500789	1					
ANR	500850	BreakStatement	break ;	21:12:296:301	500789	2	True				
ANR	500851	Label	case 'q' :	23:8:312:320	500789	3	True				
ANR	500852	ExpressionStatement	ctx -> qflag = 1	25:12:335:349	500789	4	True				
ANR	500853	AssignmentExpression	ctx -> qflag = 1		500789	0		=			
ANR	500854	PtrMemberAccess	ctx -> qflag		500789	0					
ANR	500855	Identifier	ctx		500789	0					
ANR	500856	Identifier	qflag		500789	1					
ANR	500857	PrimaryExpression	1		500789	1					
ANR	500858	BreakStatement	break ;	27:12:364:369	500789	5	True				
ANR	500859	Label	case 'P' :	29:8:380:388	500789	6	True				
ANR	500860	ExpressionStatement	pattern = parse_pattern ( optarg )	31:12:403:434	500789	7	True				
ANR	500861	AssignmentExpression	pattern = parse_pattern ( optarg )		500789	0		=			
ANR	500862	Identifier	pattern		500789	0					
ANR	500863	CallExpression	parse_pattern ( optarg )		500789	1					
ANR	500864	Callee	parse_pattern		500789	0					
ANR	500865	Identifier	parse_pattern		500789	0					
ANR	500866	ArgumentList	optarg		500789	1					
ANR	500867	Argument	optarg		500789	0					
ANR	500868	Identifier	optarg		500789	0					
ANR	500869	IfStatement	if ( pattern < 0 )		500789	8					
ANR	500870	Condition	pattern < 0	33:16:453:463	500789	0	True				
ANR	500871	RelationalExpression	pattern < 0		500789	0		<			
ANR	500872	Identifier	pattern		500789	0					
ANR	500873	PrimaryExpression	0		500789	1					
ANR	500874	CompoundStatement		31:29:418:418	500789	1					
ANR	500875	ExpressionStatement	free ( ctx )	35:16:485:494	500789	0	True				
ANR	500876	CallExpression	free ( ctx )		500789	0					
ANR	500877	Callee	free		500789	0					
ANR	500878	Identifier	free		500789	0					
ANR	500879	ArgumentList	ctx		500789	1					
ANR	500880	Argument	ctx		500789	0					
ANR	500881	Identifier	ctx		500789	0					
ANR	500882	ReturnStatement	return 0 ;	37:16:513:521	500789	1	True				
ANR	500883	PrimaryExpression	0		500789	0					
ANR	500884	BreakStatement	break ;	41:12:551:556	500789	9	True				
ANR	500885	Label	default :	43:8:567:574	500789	10	True				
ANR	500886	Identifier	default		500789	0					
ANR	500887	ExpressionStatement	free ( ctx )	45:12:589:598	500789	11	True				
ANR	500888	CallExpression	free ( ctx )		500789	0					
ANR	500889	Callee	free		500789	0					
ANR	500890	Identifier	free		500789	0					
ANR	500891	ArgumentList	ctx		500789	1					
ANR	500892	Argument	ctx		500789	0					
ANR	500893	Identifier	ctx		500789	0					
ANR	500894	ReturnStatement	return command_usage ( & aio_write_cmd ) ;	47:12:613:649	500789	12	True				
ANR	500895	CallExpression	command_usage ( & aio_write_cmd )		500789	0					
ANR	500896	Callee	command_usage		500789	0					
ANR	500897	Identifier	command_usage		500789	0					
ANR	500898	ArgumentList	& aio_write_cmd		500789	1					
ANR	500899	Argument	& aio_write_cmd		500789	0					
ANR	500900	UnaryOperationExpression	& aio_write_cmd		500789	0					
ANR	500901	UnaryOperator	&		500789	0					
ANR	500902	Identifier	aio_write_cmd		500789	1					
ANR	500903	IfStatement	if ( optind > argc - 2 )		500789	4					
ANR	500904	Condition	optind > argc - 2	55:8:680:696	500789	0	True				
ANR	500905	RelationalExpression	optind > argc - 2		500789	0		>			
ANR	500906	Identifier	optind		500789	0					
ANR	500907	AdditiveExpression	argc - 2		500789	1		-			
ANR	500908	Identifier	argc		500789	0					
ANR	500909	PrimaryExpression	2		500789	1					
ANR	500910	CompoundStatement		53:27:651:651	500789	1					
ANR	500911	ExpressionStatement	free ( ctx )	57:8:710:719	500789	0	True				
ANR	500912	CallExpression	free ( ctx )		500789	0					
ANR	500913	Callee	free		500789	0					
ANR	500914	Identifier	free		500789	0					
ANR	500915	ArgumentList	ctx		500789	1					
ANR	500916	Argument	ctx		500789	0					
ANR	500917	Identifier	ctx		500789	0					
ANR	500918	ReturnStatement	return command_usage ( & aio_write_cmd ) ;	59:8:730:766	500789	1	True				
ANR	500919	CallExpression	command_usage ( & aio_write_cmd )		500789	0					
ANR	500920	Callee	command_usage		500789	0					
ANR	500921	Identifier	command_usage		500789	0					
ANR	500922	ArgumentList	& aio_write_cmd		500789	1					
ANR	500923	Argument	& aio_write_cmd		500789	0					
ANR	500924	UnaryOperationExpression	& aio_write_cmd		500789	0					
ANR	500925	UnaryOperator	&		500789	0					
ANR	500926	Identifier	aio_write_cmd		500789	1					
ANR	500927	ExpressionStatement	ctx -> offset = cvtnum ( argv [ optind ] )	65:4:782:816	500789	5	True				
ANR	500928	AssignmentExpression	ctx -> offset = cvtnum ( argv [ optind ] )		500789	0		=			
ANR	500929	PtrMemberAccess	ctx -> offset		500789	0					
ANR	500930	Identifier	ctx		500789	0					
ANR	500931	Identifier	offset		500789	1					
ANR	500932	CallExpression	cvtnum ( argv [ optind ] )		500789	1					
ANR	500933	Callee	cvtnum		500789	0					
ANR	500934	Identifier	cvtnum		500789	0					
ANR	500935	ArgumentList	argv [ optind ]		500789	1					
ANR	500936	Argument	argv [ optind ]		500789	0					
ANR	500937	ArrayIndexing	argv [ optind ]		500789	0					
ANR	500938	Identifier	argv		500789	0					
ANR	500939	Identifier	optind		500789	1					
ANR	500940	IfStatement	if ( ctx -> offset < 0 )		500789	6					
ANR	500941	Condition	ctx -> offset < 0	67:8:827:841	500789	0	True				
ANR	500942	RelationalExpression	ctx -> offset < 0		500789	0		<			
ANR	500943	PtrMemberAccess	ctx -> offset		500789	0					
ANR	500944	Identifier	ctx		500789	0					
ANR	500945	Identifier	offset		500789	1					
ANR	500946	PrimaryExpression	0		500789	1					
ANR	500947	CompoundStatement		65:25:796:796	500789	1					
ANR	500948	ExpressionStatement	"printf ( ""non-numeric length argument -- %s\\n"" , argv [ optind ] )"	69:8:855:914	500789	0	True				
ANR	500949	CallExpression	"printf ( ""non-numeric length argument -- %s\\n"" , argv [ optind ] )"		500789	0					
ANR	500950	Callee	printf		500789	0					
ANR	500951	Identifier	printf		500789	0					
ANR	500952	ArgumentList	"""non-numeric length argument -- %s\\n"""		500789	1					
ANR	500953	Argument	"""non-numeric length argument -- %s\\n"""		500789	0					
ANR	500954	PrimaryExpression	"""non-numeric length argument -- %s\\n"""		500789	0					
ANR	500955	Argument	argv [ optind ]		500789	1					
ANR	500956	ArrayIndexing	argv [ optind ]		500789	0					
ANR	500957	Identifier	argv		500789	0					
ANR	500958	Identifier	optind		500789	1					
ANR	500959	ExpressionStatement	free ( ctx )	71:8:925:934	500789	1	True				
ANR	500960	CallExpression	free ( ctx )		500789	0					
ANR	500961	Callee	free		500789	0					
ANR	500962	Identifier	free		500789	0					
ANR	500963	ArgumentList	ctx		500789	1					
ANR	500964	Argument	ctx		500789	0					
ANR	500965	Identifier	ctx		500789	0					
ANR	500966	ReturnStatement	return 0 ;	73:8:945:953	500789	2	True				
ANR	500967	PrimaryExpression	0		500789	0					
ANR	500968	ExpressionStatement	optind ++	77:4:967:975	500789	7	True				
ANR	500969	PostIncDecOperationExpression	optind ++		500789	0					
ANR	500970	Identifier	optind		500789	0					
ANR	500971	IncDec	++		500789	1					
ANR	500972	IfStatement	if ( ctx -> offset & 0x1ff )		500789	8					
ANR	500973	Condition	ctx -> offset & 0x1ff	81:8:988:1006	500789	0	True				
ANR	500974	BitAndExpression	ctx -> offset & 0x1ff		500789	0		&			
ANR	500975	PtrMemberAccess	ctx -> offset		500789	0					
ANR	500976	Identifier	ctx		500789	0					
ANR	500977	Identifier	offset		500789	1					
ANR	500978	PrimaryExpression	0x1ff		500789	1					
ANR	500979	CompoundStatement		79:29:961:961	500789	1					
ANR	500980	Statement	printf	83:8:1020:1025	500789	0	True				
ANR	500981	Statement	(	83:14:1026:1026	500789	1	True				
ANR	500982	Statement	"""offset %"""	83:15:1027:1036	500789	2	True				
ANR	500983	Statement	PRId64	83:26:1038:1043	500789	3	True				
ANR	500984	Statement	""" is not sector aligned\\n"""	83:33:1045:1070	500789	4	True				
ANR	500985	Statement	","	83:59:1071:1071	500789	5	True				
ANR	500986	Statement	ctx	85:15:1089:1091	500789	6	True				
ANR	500987	Statement	->	85:18:1092:1093	500789	7	True				
ANR	500988	Statement	offset	85:20:1094:1099	500789	8	True				
ANR	500989	Statement	)	85:26:1100:1100	500789	9	True				
ANR	500990	ExpressionStatement		85:27:1101:1101	500789	10	True				
ANR	500991	ExpressionStatement	free ( ctx )	87:8:1112:1121	500789	11	True				
ANR	500992	CallExpression	free ( ctx )		500789	0					
ANR	500993	Callee	free		500789	0					
ANR	500994	Identifier	free		500789	0					
ANR	500995	ArgumentList	ctx		500789	1					
ANR	500996	Argument	ctx		500789	0					
ANR	500997	Identifier	ctx		500789	0					
ANR	500998	ReturnStatement	return 0 ;	89:8:1132:1140	500789	12	True				
ANR	500999	PrimaryExpression	0		500789	0					
ANR	501000	ExpressionStatement	nr_iov = argc - optind	95:4:1156:1178	500789	9	True				
ANR	501001	AssignmentExpression	nr_iov = argc - optind		500789	0		=			
ANR	501002	Identifier	nr_iov		500789	0					
ANR	501003	AdditiveExpression	argc - optind		500789	1		-			
ANR	501004	Identifier	argc		500789	0					
ANR	501005	Identifier	optind		500789	1					
ANR	501006	ExpressionStatement	"ctx -> buf = create_iovec ( & ctx -> qiov , & argv [ optind ] , nr_iov , pattern )"	97:4:1185:1252	500789	10	True				
ANR	501007	AssignmentExpression	"ctx -> buf = create_iovec ( & ctx -> qiov , & argv [ optind ] , nr_iov , pattern )"		500789	0		=			
ANR	501008	PtrMemberAccess	ctx -> buf		500789	0					
ANR	501009	Identifier	ctx		500789	0					
ANR	501010	Identifier	buf		500789	1					
ANR	501011	CallExpression	"create_iovec ( & ctx -> qiov , & argv [ optind ] , nr_iov , pattern )"		500789	1					
ANR	501012	Callee	create_iovec		500789	0					
ANR	501013	Identifier	create_iovec		500789	0					
ANR	501014	ArgumentList	& ctx -> qiov		500789	1					
ANR	501015	Argument	& ctx -> qiov		500789	0					
ANR	501016	UnaryOperationExpression	& ctx -> qiov		500789	0					
ANR	501017	UnaryOperator	&		500789	0					
ANR	501018	PtrMemberAccess	ctx -> qiov		500789	1					
ANR	501019	Identifier	ctx		500789	0					
ANR	501020	Identifier	qiov		500789	1					
ANR	501021	Argument	& argv [ optind ]		500789	1					
ANR	501022	UnaryOperationExpression	& argv [ optind ]		500789	0					
ANR	501023	UnaryOperator	&		500789	0					
ANR	501024	ArrayIndexing	argv [ optind ]		500789	1					
ANR	501025	Identifier	argv		500789	0					
ANR	501026	Identifier	optind		500789	1					
ANR	501027	Argument	nr_iov		500789	2					
ANR	501028	Identifier	nr_iov		500789	0					
ANR	501029	Argument	pattern		500789	3					
ANR	501030	Identifier	pattern		500789	0					
ANR	501031	IfStatement	if ( ctx -> buf == NULL )		500789	11					
ANR	501032	Condition	ctx -> buf == NULL	99:8:1263:1278	500789	0	True				
ANR	501033	EqualityExpression	ctx -> buf == NULL		500789	0		==			
ANR	501034	PtrMemberAccess	ctx -> buf		500789	0					
ANR	501035	Identifier	ctx		500789	0					
ANR	501036	Identifier	buf		500789	1					
ANR	501037	Identifier	NULL		500789	1					
ANR	501038	CompoundStatement		97:26:1233:1233	500789	1					
ANR	501039	ExpressionStatement	free ( ctx )	101:8:1292:1301	500789	0	True				
ANR	501040	CallExpression	free ( ctx )		500789	0					
ANR	501041	Callee	free		500789	0					
ANR	501042	Identifier	free		500789	0					
ANR	501043	ArgumentList	ctx		500789	1					
ANR	501044	Argument	ctx		500789	0					
ANR	501045	Identifier	ctx		500789	0					
ANR	501046	ReturnStatement	return 0 ;	103:8:1312:1320	500789	1	True				
ANR	501047	PrimaryExpression	0		500789	0					
ANR	501048	ExpressionStatement	"gettimeofday ( & ctx -> t1 , NULL )"	109:4:1336:1364	500789	12	True				
ANR	501049	CallExpression	"gettimeofday ( & ctx -> t1 , NULL )"		500789	0					
ANR	501050	Callee	gettimeofday		500789	0					
ANR	501051	Identifier	gettimeofday		500789	0					
ANR	501052	ArgumentList	& ctx -> t1		500789	1					
ANR	501053	Argument	& ctx -> t1		500789	0					
ANR	501054	UnaryOperationExpression	& ctx -> t1		500789	0					
ANR	501055	UnaryOperator	&		500789	0					
ANR	501056	PtrMemberAccess	ctx -> t1		500789	1					
ANR	501057	Identifier	ctx		500789	0					
ANR	501058	Identifier	t1		500789	1					
ANR	501059	Argument	NULL		500789	1					
ANR	501060	Identifier	NULL		500789	0					
ANR	501061	ExpressionStatement	"bdrv_aio_writev ( bs , ctx -> offset >> 9 , & ctx -> qiov , ctx -> qiov . size >> 9 , aio_write_done , ctx )"	111:4:1371:1483	500789	13	True				
ANR	501062	CallExpression	"bdrv_aio_writev ( bs , ctx -> offset >> 9 , & ctx -> qiov , ctx -> qiov . size >> 9 , aio_write_done , ctx )"		500789	0					
ANR	501063	Callee	bdrv_aio_writev		500789	0					
ANR	501064	Identifier	bdrv_aio_writev		500789	0					
ANR	501065	ArgumentList	bs		500789	1					
ANR	501066	Argument	bs		500789	0					
ANR	501067	Identifier	bs		500789	0					
ANR	501068	Argument	ctx -> offset >> 9		500789	1					
ANR	501069	ShiftExpression	ctx -> offset >> 9		500789	0		>>			
ANR	501070	PtrMemberAccess	ctx -> offset		500789	0					
ANR	501071	Identifier	ctx		500789	0					
ANR	501072	Identifier	offset		500789	1					
ANR	501073	PrimaryExpression	9		500789	1					
ANR	501074	Argument	& ctx -> qiov		500789	2					
ANR	501075	UnaryOperationExpression	& ctx -> qiov		500789	0					
ANR	501076	UnaryOperator	&		500789	0					
ANR	501077	PtrMemberAccess	ctx -> qiov		500789	1					
ANR	501078	Identifier	ctx		500789	0					
ANR	501079	Identifier	qiov		500789	1					
ANR	501080	Argument	ctx -> qiov . size >> 9		500789	3					
ANR	501081	ShiftExpression	ctx -> qiov . size >> 9		500789	0		>>			
ANR	501082	MemberAccess	ctx -> qiov . size		500789	0					
ANR	501083	PtrMemberAccess	ctx -> qiov		500789	0					
ANR	501084	Identifier	ctx		500789	0					
ANR	501085	Identifier	qiov		500789	1					
ANR	501086	Identifier	size		500789	1					
ANR	501087	PrimaryExpression	9		500789	1					
ANR	501088	Argument	aio_write_done		500789	4					
ANR	501089	Identifier	aio_write_done		500789	0					
ANR	501090	Argument	ctx		500789	5					
ANR	501091	Identifier	ctx		500789	0					
ANR	501092	ReturnStatement	return 0 ;	115:4:1490:1498	500789	14	True				
ANR	501093	PrimaryExpression	0		500789	0					
ANR	501094	ReturnType	static int		500789	1					
ANR	501095	Identifier	aio_write_f		500789	2					
ANR	501096	ParameterList	"int argc , char * * argv"		500789	3					
ANR	501097	Parameter	int argc	1:23:23:30	500789	0	True				
ANR	501098	ParameterType	int		500789	0					
ANR	501099	Identifier	argc		500789	1					
ANR	501100	Parameter	char * * argv	1:33:33:43	500789	1	True				
ANR	501101	ParameterType	char * *		500789	0					
ANR	501102	Identifier	argv		500789	1					
ANR	501103	CFGEntryNode	ENTRY		500789		True				
ANR	501104	CFGExitNode	EXIT		500789		True				
ANR	501105	Symbol	& aio_write_cmd		500789						
ANR	501106	Symbol	* optind		500789						
ANR	501107	Symbol	create_iovec		500789						
ANR	501108	Symbol	optind		500789						
ANR	501109	Symbol	pattern		500789						
ANR	501110	Symbol	optarg		500789						
ANR	501111	Symbol	* argv		500789						
ANR	501112	Symbol	calloc		500789						
ANR	501113	Symbol	argv		500789						
ANR	501114	Symbol	& ctx -> qiov		500789						
ANR	501115	Symbol	bs		500789						
ANR	501116	Symbol	getopt		500789						
ANR	501117	Symbol	command_usage		500789						
ANR	501118	Symbol	ctx -> buf		500789						
ANR	501119	Symbol	EOF		500789						
ANR	501120	Symbol	argc		500789						
ANR	501121	Symbol	cvtnum		500789						
ANR	501122	Symbol	aio_write_done		500789						
ANR	501123	Symbol	c		500789						
ANR	501124	Symbol	NULL		500789						
ANR	501125	Symbol	parse_pattern		500789						
ANR	501126	Symbol	& ctx -> t1		500789						
ANR	501127	Symbol	ctx		500789						
ANR	501128	Symbol	* ctx		500789						
ANR	501129	Symbol	ctx -> qflag		500789						
ANR	501130	Symbol	ctx -> offset		500789						
ANR	501131	Symbol	ctx -> Cflag		500789						
ANR	501132	Symbol	ctx -> qiov		500789						
ANR	501133	Symbol	ctx -> qiov . size		500789						
ANR	501134	Symbol	nr_iov		500789						
