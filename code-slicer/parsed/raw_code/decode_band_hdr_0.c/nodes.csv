command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1701061	File	/home/p4ultr4n/workplace/ReVeal/raw_code/decode_band_hdr_0.c								
ANR	1701062	Function	decode_band_hdr	1:0:0:6136							
ANR	1701063	FunctionDef	"decode_band_hdr (IVI45DecContext * ctx , IVIBandDesc * band , AVCodecContext * avctx)"		1701062	0					
ANR	1701064	CompoundStatement		5:0:120:6136	1701062	0					
ANR	1701065	IdentifierDeclStatement	"int plane , band_num , indx , transform_id , scan_indx ;"	7:4:127:177	1701062	0	True				
ANR	1701066	IdentifierDecl	plane		1701062	0					
ANR	1701067	IdentifierDeclType	int		1701062	0					
ANR	1701068	Identifier	plane		1701062	1					
ANR	1701069	IdentifierDecl	band_num		1701062	1					
ANR	1701070	IdentifierDeclType	int		1701062	0					
ANR	1701071	Identifier	band_num		1701062	1					
ANR	1701072	IdentifierDecl	indx		1701062	2					
ANR	1701073	IdentifierDeclType	int		1701062	0					
ANR	1701074	Identifier	indx		1701062	1					
ANR	1701075	IdentifierDecl	transform_id		1701062	3					
ANR	1701076	IdentifierDeclType	int		1701062	0					
ANR	1701077	Identifier	transform_id		1701062	1					
ANR	1701078	IdentifierDecl	scan_indx		1701062	4					
ANR	1701079	IdentifierDeclType	int		1701062	0					
ANR	1701080	Identifier	scan_indx		1701062	1					
ANR	1701081	IdentifierDeclStatement	int i ;	9:4:184:189	1701062	1	True				
ANR	1701082	IdentifierDecl	i		1701062	0					
ANR	1701083	IdentifierDeclType	int		1701062	0					
ANR	1701084	Identifier	i		1701062	1					
ANR	1701085	ExpressionStatement	"plane = get_bits ( & ctx -> gb , 2 )"	13:4:198:230	1701062	2	True				
ANR	1701086	AssignmentExpression	"plane = get_bits ( & ctx -> gb , 2 )"		1701062	0		=			
ANR	1701087	Identifier	plane		1701062	0					
ANR	1701088	CallExpression	"get_bits ( & ctx -> gb , 2 )"		1701062	1					
ANR	1701089	Callee	get_bits		1701062	0					
ANR	1701090	Identifier	get_bits		1701062	0					
ANR	1701091	ArgumentList	& ctx -> gb		1701062	1					
ANR	1701092	Argument	& ctx -> gb		1701062	0					
ANR	1701093	UnaryOperationExpression	& ctx -> gb		1701062	0					
ANR	1701094	UnaryOperator	&		1701062	0					
ANR	1701095	PtrMemberAccess	ctx -> gb		1701062	1					
ANR	1701096	Identifier	ctx		1701062	0					
ANR	1701097	Identifier	gb		1701062	1					
ANR	1701098	Argument	2		1701062	1					
ANR	1701099	PrimaryExpression	2		1701062	0					
ANR	1701100	ExpressionStatement	"band_num = get_bits ( & ctx -> gb , 4 )"	15:4:237:269	1701062	3	True				
ANR	1701101	AssignmentExpression	"band_num = get_bits ( & ctx -> gb , 4 )"		1701062	0		=			
ANR	1701102	Identifier	band_num		1701062	0					
ANR	1701103	CallExpression	"get_bits ( & ctx -> gb , 4 )"		1701062	1					
ANR	1701104	Callee	get_bits		1701062	0					
ANR	1701105	Identifier	get_bits		1701062	0					
ANR	1701106	ArgumentList	& ctx -> gb		1701062	1					
ANR	1701107	Argument	& ctx -> gb		1701062	0					
ANR	1701108	UnaryOperationExpression	& ctx -> gb		1701062	0					
ANR	1701109	UnaryOperator	&		1701062	0					
ANR	1701110	PtrMemberAccess	ctx -> gb		1701062	1					
ANR	1701111	Identifier	ctx		1701062	0					
ANR	1701112	Identifier	gb		1701062	1					
ANR	1701113	Argument	4		1701062	1					
ANR	1701114	PrimaryExpression	4		1701062	0					
ANR	1701115	IfStatement	if ( band -> plane != plane || band -> band_num != band_num )		1701062	4					
ANR	1701116	Condition	band -> plane != plane || band -> band_num != band_num	17:8:280:329	1701062	0	True				
ANR	1701117	OrExpression	band -> plane != plane || band -> band_num != band_num		1701062	0		||			
ANR	1701118	EqualityExpression	band -> plane != plane		1701062	0		!=			
ANR	1701119	PtrMemberAccess	band -> plane		1701062	0					
ANR	1701120	Identifier	band		1701062	0					
ANR	1701121	Identifier	plane		1701062	1					
ANR	1701122	Identifier	plane		1701062	1					
ANR	1701123	EqualityExpression	band -> band_num != band_num		1701062	1		!=			
ANR	1701124	PtrMemberAccess	band -> band_num		1701062	0					
ANR	1701125	Identifier	band		1701062	0					
ANR	1701126	Identifier	band_num		1701062	1					
ANR	1701127	Identifier	band_num		1701062	1					
ANR	1701128	CompoundStatement		13:60:211:211	1701062	1					
ANR	1701129	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Invalid band header sequence!\\n"" )"	19:8:343:405	1701062	0	True				
ANR	1701130	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Invalid band header sequence!\\n"" )"		1701062	0					
ANR	1701131	Callee	av_log		1701062	0					
ANR	1701132	Identifier	av_log		1701062	0					
ANR	1701133	ArgumentList	avctx		1701062	1					
ANR	1701134	Argument	avctx		1701062	0					
ANR	1701135	Identifier	avctx		1701062	0					
ANR	1701136	Argument	AV_LOG_ERROR		1701062	1					
ANR	1701137	Identifier	AV_LOG_ERROR		1701062	0					
ANR	1701138	Argument	"""Invalid band header sequence!\\n"""		1701062	2					
ANR	1701139	PrimaryExpression	"""Invalid band header sequence!\\n"""		1701062	0					
ANR	1701140	ReturnStatement	return AVERROR_INVALIDDATA ;	21:8:416:442	1701062	1	True				
ANR	1701141	Identifier	AVERROR_INVALIDDATA		1701062	0					
ANR	1701142	ExpressionStatement	band -> is_empty = get_bits1 ( & ctx -> gb )	27:4:458:494	1701062	5	True				
ANR	1701143	AssignmentExpression	band -> is_empty = get_bits1 ( & ctx -> gb )		1701062	0		=			
ANR	1701144	PtrMemberAccess	band -> is_empty		1701062	0					
ANR	1701145	Identifier	band		1701062	0					
ANR	1701146	Identifier	is_empty		1701062	1					
ANR	1701147	CallExpression	get_bits1 ( & ctx -> gb )		1701062	1					
ANR	1701148	Callee	get_bits1		1701062	0					
ANR	1701149	Identifier	get_bits1		1701062	0					
ANR	1701150	ArgumentList	& ctx -> gb		1701062	1					
ANR	1701151	Argument	& ctx -> gb		1701062	0					
ANR	1701152	UnaryOperationExpression	& ctx -> gb		1701062	0					
ANR	1701153	UnaryOperator	&		1701062	0					
ANR	1701154	PtrMemberAccess	ctx -> gb		1701062	1					
ANR	1701155	Identifier	ctx		1701062	0					
ANR	1701156	Identifier	gb		1701062	1					
ANR	1701157	IfStatement	if ( ! band -> is_empty )		1701062	6					
ANR	1701158	Condition	! band -> is_empty	29:8:505:519	1701062	0	True				
ANR	1701159	UnaryOperationExpression	! band -> is_empty		1701062	0					
ANR	1701160	UnaryOperator	!		1701062	0					
ANR	1701161	PtrMemberAccess	band -> is_empty		1701062	1					
ANR	1701162	Identifier	band		1701062	0					
ANR	1701163	Identifier	is_empty		1701062	1					
ANR	1701164	CompoundStatement		27:8:412:445	1701062	1					
ANR	1701165	IdentifierDeclStatement	int old_blk_size = band -> blk_size ;	31:8:533:566	1701062	0	True				
ANR	1701166	IdentifierDecl	old_blk_size = band -> blk_size		1701062	0					
ANR	1701167	IdentifierDeclType	int		1701062	0					
ANR	1701168	Identifier	old_blk_size		1701062	1					
ANR	1701169	AssignmentExpression	old_blk_size = band -> blk_size		1701062	2		=			
ANR	1701170	Identifier	old_blk_size		1701062	0					
ANR	1701171	PtrMemberAccess	band -> blk_size		1701062	1					
ANR	1701172	Identifier	band		1701062	0					
ANR	1701173	Identifier	blk_size		1701062	1					
ANR	1701174	IfStatement	if ( get_bits1 ( & ctx -> gb ) )		1701062	1					
ANR	1701175	Condition	get_bits1 ( & ctx -> gb )	37:12:678:696	1701062	0	True				
ANR	1701176	CallExpression	get_bits1 ( & ctx -> gb )		1701062	0					
ANR	1701177	Callee	get_bits1		1701062	0					
ANR	1701178	Identifier	get_bits1		1701062	0					
ANR	1701179	ArgumentList	& ctx -> gb		1701062	1					
ANR	1701180	Argument	& ctx -> gb		1701062	0					
ANR	1701181	UnaryOperationExpression	& ctx -> gb		1701062	0					
ANR	1701182	UnaryOperator	&		1701062	0					
ANR	1701183	PtrMemberAccess	ctx -> gb		1701062	1					
ANR	1701184	Identifier	ctx		1701062	0					
ANR	1701185	Identifier	gb		1701062	1					
ANR	1701186	ExpressionStatement	"skip_bits ( & ctx -> gb , 16 )"	39:12:712:735	1701062	1	True				
ANR	1701187	CallExpression	"skip_bits ( & ctx -> gb , 16 )"		1701062	0					
ANR	1701188	Callee	skip_bits		1701062	0					
ANR	1701189	Identifier	skip_bits		1701062	0					
ANR	1701190	ArgumentList	& ctx -> gb		1701062	1					
ANR	1701191	Argument	& ctx -> gb		1701062	0					
ANR	1701192	UnaryOperationExpression	& ctx -> gb		1701062	0					
ANR	1701193	UnaryOperator	&		1701062	0					
ANR	1701194	PtrMemberAccess	ctx -> gb		1701062	1					
ANR	1701195	Identifier	ctx		1701062	0					
ANR	1701196	Identifier	gb		1701062	1					
ANR	1701197	Argument	16		1701062	1					
ANR	1701198	PrimaryExpression	16		1701062	0					
ANR	1701199	ExpressionStatement	"band -> is_halfpel = get_bits ( & ctx -> gb , 2 )"	43:8:748:788	1701062	2	True				
ANR	1701200	AssignmentExpression	"band -> is_halfpel = get_bits ( & ctx -> gb , 2 )"		1701062	0		=			
ANR	1701201	PtrMemberAccess	band -> is_halfpel		1701062	0					
ANR	1701202	Identifier	band		1701062	0					
ANR	1701203	Identifier	is_halfpel		1701062	1					
ANR	1701204	CallExpression	"get_bits ( & ctx -> gb , 2 )"		1701062	1					
ANR	1701205	Callee	get_bits		1701062	0					
ANR	1701206	Identifier	get_bits		1701062	0					
ANR	1701207	ArgumentList	& ctx -> gb		1701062	1					
ANR	1701208	Argument	& ctx -> gb		1701062	0					
ANR	1701209	UnaryOperationExpression	& ctx -> gb		1701062	0					
ANR	1701210	UnaryOperator	&		1701062	0					
ANR	1701211	PtrMemberAccess	ctx -> gb		1701062	1					
ANR	1701212	Identifier	ctx		1701062	0					
ANR	1701213	Identifier	gb		1701062	1					
ANR	1701214	Argument	2		1701062	1					
ANR	1701215	PrimaryExpression	2		1701062	0					
ANR	1701216	IfStatement	if ( band -> is_halfpel >= 2 )		1701062	3					
ANR	1701217	Condition	band -> is_halfpel >= 2	45:12:803:823	1701062	0	True				
ANR	1701218	RelationalExpression	band -> is_halfpel >= 2		1701062	0		>=			
ANR	1701219	PtrMemberAccess	band -> is_halfpel		1701062	0					
ANR	1701220	Identifier	band		1701062	0					
ANR	1701221	Identifier	is_halfpel		1701062	1					
ANR	1701222	PrimaryExpression	2		1701062	1					
ANR	1701223	CompoundStatement		41:35:705:705	1701062	1					
ANR	1701224	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Invalid/unsupported mv resolution: %d!\\n"" , band -> is_halfpel )"	47:12:841:950	1701062	0	True				
ANR	1701225	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Invalid/unsupported mv resolution: %d!\\n"" , band -> is_halfpel )"		1701062	0					
ANR	1701226	Callee	av_log		1701062	0					
ANR	1701227	Identifier	av_log		1701062	0					
ANR	1701228	ArgumentList	avctx		1701062	1					
ANR	1701229	Argument	avctx		1701062	0					
ANR	1701230	Identifier	avctx		1701062	0					
ANR	1701231	Argument	AV_LOG_ERROR		1701062	1					
ANR	1701232	Identifier	AV_LOG_ERROR		1701062	0					
ANR	1701233	Argument	"""Invalid/unsupported mv resolution: %d!\\n"""		1701062	2					
ANR	1701234	PrimaryExpression	"""Invalid/unsupported mv resolution: %d!\\n"""		1701062	0					
ANR	1701235	Argument	band -> is_halfpel		1701062	3					
ANR	1701236	PtrMemberAccess	band -> is_halfpel		1701062	0					
ANR	1701237	Identifier	band		1701062	0					
ANR	1701238	Identifier	is_halfpel		1701062	1					
ANR	1701239	ReturnStatement	return AVERROR_INVALIDDATA ;	51:12:965:991	1701062	1	True				
ANR	1701240	Identifier	AVERROR_INVALIDDATA		1701062	0					
ANR	1701241	IfStatement	if ( ! band -> is_halfpel )		1701062	4					
ANR	1701242	Condition	! band -> is_halfpel	57:12:1043:1059	1701062	0	True				
ANR	1701243	UnaryOperationExpression	! band -> is_halfpel		1701062	0					
ANR	1701244	UnaryOperator	!		1701062	0					
ANR	1701245	PtrMemberAccess	band -> is_halfpel		1701062	1					
ANR	1701246	Identifier	band		1701062	0					
ANR	1701247	Identifier	is_halfpel		1701062	1					
ANR	1701248	ExpressionStatement	ctx -> uses_fullpel = 1	59:12:1075:1096	1701062	1	True				
ANR	1701249	AssignmentExpression	ctx -> uses_fullpel = 1		1701062	0		=			
ANR	1701250	PtrMemberAccess	ctx -> uses_fullpel		1701062	0					
ANR	1701251	Identifier	ctx		1701062	0					
ANR	1701252	Identifier	uses_fullpel		1701062	1					
ANR	1701253	PrimaryExpression	1		1701062	1					
ANR	1701254	ExpressionStatement	band -> checksum_present = get_bits1 ( & ctx -> gb )	65:8:1117:1161	1701062	5	True				
ANR	1701255	AssignmentExpression	band -> checksum_present = get_bits1 ( & ctx -> gb )		1701062	0		=			
ANR	1701256	PtrMemberAccess	band -> checksum_present		1701062	0					
ANR	1701257	Identifier	band		1701062	0					
ANR	1701258	Identifier	checksum_present		1701062	1					
ANR	1701259	CallExpression	get_bits1 ( & ctx -> gb )		1701062	1					
ANR	1701260	Callee	get_bits1		1701062	0					
ANR	1701261	Identifier	get_bits1		1701062	0					
ANR	1701262	ArgumentList	& ctx -> gb		1701062	1					
ANR	1701263	Argument	& ctx -> gb		1701062	0					
ANR	1701264	UnaryOperationExpression	& ctx -> gb		1701062	0					
ANR	1701265	UnaryOperator	&		1701062	0					
ANR	1701266	PtrMemberAccess	ctx -> gb		1701062	1					
ANR	1701267	Identifier	ctx		1701062	0					
ANR	1701268	Identifier	gb		1701062	1					
ANR	1701269	IfStatement	if ( band -> checksum_present )		1701062	6					
ANR	1701270	Condition	band -> checksum_present	67:12:1176:1197	1701062	0	True				
ANR	1701271	PtrMemberAccess	band -> checksum_present		1701062	0					
ANR	1701272	Identifier	band		1701062	0					
ANR	1701273	Identifier	checksum_present		1701062	1					
ANR	1701274	ExpressionStatement	"band -> checksum = get_bits ( & ctx -> gb , 16 )"	69:12:1213:1252	1701062	1	True				
ANR	1701275	AssignmentExpression	"band -> checksum = get_bits ( & ctx -> gb , 16 )"		1701062	0		=			
ANR	1701276	PtrMemberAccess	band -> checksum		1701062	0					
ANR	1701277	Identifier	band		1701062	0					
ANR	1701278	Identifier	checksum		1701062	1					
ANR	1701279	CallExpression	"get_bits ( & ctx -> gb , 16 )"		1701062	1					
ANR	1701280	Callee	get_bits		1701062	0					
ANR	1701281	Identifier	get_bits		1701062	0					
ANR	1701282	ArgumentList	& ctx -> gb		1701062	1					
ANR	1701283	Argument	& ctx -> gb		1701062	0					
ANR	1701284	UnaryOperationExpression	& ctx -> gb		1701062	0					
ANR	1701285	UnaryOperator	&		1701062	0					
ANR	1701286	PtrMemberAccess	ctx -> gb		1701062	1					
ANR	1701287	Identifier	ctx		1701062	0					
ANR	1701288	Identifier	gb		1701062	1					
ANR	1701289	Argument	16		1701062	1					
ANR	1701290	PrimaryExpression	16		1701062	0					
ANR	1701291	ExpressionStatement	"indx = get_bits ( & ctx -> gb , 2 )"	73:8:1265:1293	1701062	7	True				
ANR	1701292	AssignmentExpression	"indx = get_bits ( & ctx -> gb , 2 )"		1701062	0		=			
ANR	1701293	Identifier	indx		1701062	0					
ANR	1701294	CallExpression	"get_bits ( & ctx -> gb , 2 )"		1701062	1					
ANR	1701295	Callee	get_bits		1701062	0					
ANR	1701296	Identifier	get_bits		1701062	0					
ANR	1701297	ArgumentList	& ctx -> gb		1701062	1					
ANR	1701298	Argument	& ctx -> gb		1701062	0					
ANR	1701299	UnaryOperationExpression	& ctx -> gb		1701062	0					
ANR	1701300	UnaryOperator	&		1701062	0					
ANR	1701301	PtrMemberAccess	ctx -> gb		1701062	1					
ANR	1701302	Identifier	ctx		1701062	0					
ANR	1701303	Identifier	gb		1701062	1					
ANR	1701304	Argument	2		1701062	1					
ANR	1701305	PrimaryExpression	2		1701062	0					
ANR	1701306	IfStatement	if ( indx == 3 )		1701062	8					
ANR	1701307	Condition	indx == 3	75:12:1308:1316	1701062	0	True				
ANR	1701308	EqualityExpression	indx == 3		1701062	0		==			
ANR	1701309	Identifier	indx		1701062	0					
ANR	1701310	PrimaryExpression	3		1701062	1					
ANR	1701311	CompoundStatement		71:23:1198:1198	1701062	1					
ANR	1701312	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Invalid block size!\\n"" )"	77:12:1334:1386	1701062	0	True				
ANR	1701313	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Invalid block size!\\n"" )"		1701062	0					
ANR	1701314	Callee	av_log		1701062	0					
ANR	1701315	Identifier	av_log		1701062	0					
ANR	1701316	ArgumentList	avctx		1701062	1					
ANR	1701317	Argument	avctx		1701062	0					
ANR	1701318	Identifier	avctx		1701062	0					
ANR	1701319	Argument	AV_LOG_ERROR		1701062	1					
ANR	1701320	Identifier	AV_LOG_ERROR		1701062	0					
ANR	1701321	Argument	"""Invalid block size!\\n"""		1701062	2					
ANR	1701322	PrimaryExpression	"""Invalid block size!\\n"""		1701062	0					
ANR	1701323	ReturnStatement	return AVERROR_INVALIDDATA ;	79:12:1401:1427	1701062	1	True				
ANR	1701324	Identifier	AVERROR_INVALIDDATA		1701062	0					
ANR	1701325	ExpressionStatement	band -> mb_size = 16 >> indx	83:8:1449:1476	1701062	9	True				
ANR	1701326	AssignmentExpression	band -> mb_size = 16 >> indx		1701062	0		=			
ANR	1701327	PtrMemberAccess	band -> mb_size		1701062	0					
ANR	1701328	Identifier	band		1701062	0					
ANR	1701329	Identifier	mb_size		1701062	1					
ANR	1701330	ShiftExpression	16 >> indx		1701062	1		>>			
ANR	1701331	PrimaryExpression	16		1701062	0					
ANR	1701332	Identifier	indx		1701062	1					
ANR	1701333	ExpressionStatement	band -> blk_size = 8 >> ( indx >> 1 )	85:8:1487:1520	1701062	10	True				
ANR	1701334	AssignmentExpression	band -> blk_size = 8 >> ( indx >> 1 )		1701062	0		=			
ANR	1701335	PtrMemberAccess	band -> blk_size		1701062	0					
ANR	1701336	Identifier	band		1701062	0					
ANR	1701337	Identifier	blk_size		1701062	1					
ANR	1701338	ShiftExpression	8 >> ( indx >> 1 )		1701062	1		>>			
ANR	1701339	PrimaryExpression	8		1701062	0					
ANR	1701340	ShiftExpression	indx >> 1		1701062	1		>>			
ANR	1701341	Identifier	indx		1701062	0					
ANR	1701342	PrimaryExpression	1		1701062	1					
ANR	1701343	ExpressionStatement	band -> inherit_mv = get_bits1 ( & ctx -> gb )	89:8:1533:1575	1701062	11	True				
ANR	1701344	AssignmentExpression	band -> inherit_mv = get_bits1 ( & ctx -> gb )		1701062	0		=			
ANR	1701345	PtrMemberAccess	band -> inherit_mv		1701062	0					
ANR	1701346	Identifier	band		1701062	0					
ANR	1701347	Identifier	inherit_mv		1701062	1					
ANR	1701348	CallExpression	get_bits1 ( & ctx -> gb )		1701062	1					
ANR	1701349	Callee	get_bits1		1701062	0					
ANR	1701350	Identifier	get_bits1		1701062	0					
ANR	1701351	ArgumentList	& ctx -> gb		1701062	1					
ANR	1701352	Argument	& ctx -> gb		1701062	0					
ANR	1701353	UnaryOperationExpression	& ctx -> gb		1701062	0					
ANR	1701354	UnaryOperator	&		1701062	0					
ANR	1701355	PtrMemberAccess	ctx -> gb		1701062	1					
ANR	1701356	Identifier	ctx		1701062	0					
ANR	1701357	Identifier	gb		1701062	1					
ANR	1701358	ExpressionStatement	band -> inherit_qdelta = get_bits1 ( & ctx -> gb )	91:8:1586:1628	1701062	12	True				
ANR	1701359	AssignmentExpression	band -> inherit_qdelta = get_bits1 ( & ctx -> gb )		1701062	0		=			
ANR	1701360	PtrMemberAccess	band -> inherit_qdelta		1701062	0					
ANR	1701361	Identifier	band		1701062	0					
ANR	1701362	Identifier	inherit_qdelta		1701062	1					
ANR	1701363	CallExpression	get_bits1 ( & ctx -> gb )		1701062	1					
ANR	1701364	Callee	get_bits1		1701062	0					
ANR	1701365	Identifier	get_bits1		1701062	0					
ANR	1701366	ArgumentList	& ctx -> gb		1701062	1					
ANR	1701367	Argument	& ctx -> gb		1701062	0					
ANR	1701368	UnaryOperationExpression	& ctx -> gb		1701062	0					
ANR	1701369	UnaryOperator	&		1701062	0					
ANR	1701370	PtrMemberAccess	ctx -> gb		1701062	1					
ANR	1701371	Identifier	ctx		1701062	0					
ANR	1701372	Identifier	gb		1701062	1					
ANR	1701373	ExpressionStatement	"band -> glob_quant = get_bits ( & ctx -> gb , 5 )"	95:8:1641:1681	1701062	13	True				
ANR	1701374	AssignmentExpression	"band -> glob_quant = get_bits ( & ctx -> gb , 5 )"		1701062	0		=			
ANR	1701375	PtrMemberAccess	band -> glob_quant		1701062	0					
ANR	1701376	Identifier	band		1701062	0					
ANR	1701377	Identifier	glob_quant		1701062	1					
ANR	1701378	CallExpression	"get_bits ( & ctx -> gb , 5 )"		1701062	1					
ANR	1701379	Callee	get_bits		1701062	0					
ANR	1701380	Identifier	get_bits		1701062	0					
ANR	1701381	ArgumentList	& ctx -> gb		1701062	1					
ANR	1701382	Argument	& ctx -> gb		1701062	0					
ANR	1701383	UnaryOperationExpression	& ctx -> gb		1701062	0					
ANR	1701384	UnaryOperator	&		1701062	0					
ANR	1701385	PtrMemberAccess	ctx -> gb		1701062	1					
ANR	1701386	Identifier	ctx		1701062	0					
ANR	1701387	Identifier	gb		1701062	1					
ANR	1701388	Argument	5		1701062	1					
ANR	1701389	PrimaryExpression	5		1701062	0					
ANR	1701390	IfStatement	if ( ! get_bits1 ( & ctx -> gb ) || ctx -> frame_type == IVI4_FRAMETYPE_INTRA )		1701062	14					
ANR	1701391	Condition	! get_bits1 ( & ctx -> gb ) || ctx -> frame_type == IVI4_FRAMETYPE_INTRA	99:12:1698:1760	1701062	0	True				
ANR	1701392	OrExpression	! get_bits1 ( & ctx -> gb ) || ctx -> frame_type == IVI4_FRAMETYPE_INTRA		1701062	0		||			
ANR	1701393	UnaryOperationExpression	! get_bits1 ( & ctx -> gb )		1701062	0					
ANR	1701394	UnaryOperator	!		1701062	0					
ANR	1701395	CallExpression	get_bits1 ( & ctx -> gb )		1701062	1					
ANR	1701396	Callee	get_bits1		1701062	0					
ANR	1701397	Identifier	get_bits1		1701062	0					
ANR	1701398	ArgumentList	& ctx -> gb		1701062	1					
ANR	1701399	Argument	& ctx -> gb		1701062	0					
ANR	1701400	UnaryOperationExpression	& ctx -> gb		1701062	0					
ANR	1701401	UnaryOperator	&		1701062	0					
ANR	1701402	PtrMemberAccess	ctx -> gb		1701062	1					
ANR	1701403	Identifier	ctx		1701062	0					
ANR	1701404	Identifier	gb		1701062	1					
ANR	1701405	EqualityExpression	ctx -> frame_type == IVI4_FRAMETYPE_INTRA		1701062	1		==			
ANR	1701406	PtrMemberAccess	ctx -> frame_type		1701062	0					
ANR	1701407	Identifier	ctx		1701062	0					
ANR	1701408	Identifier	frame_type		1701062	1					
ANR	1701409	Identifier	IVI4_FRAMETYPE_INTRA		1701062	1					
ANR	1701410	CompoundStatement		95:77:1642:1642	1701062	1					
ANR	1701411	ExpressionStatement	"transform_id = get_bits ( & ctx -> gb , 5 )"	101:12:1778:1814	1701062	0	True				
ANR	1701412	AssignmentExpression	"transform_id = get_bits ( & ctx -> gb , 5 )"		1701062	0		=			
ANR	1701413	Identifier	transform_id		1701062	0					
ANR	1701414	CallExpression	"get_bits ( & ctx -> gb , 5 )"		1701062	1					
ANR	1701415	Callee	get_bits		1701062	0					
ANR	1701416	Identifier	get_bits		1701062	0					
ANR	1701417	ArgumentList	& ctx -> gb		1701062	1					
ANR	1701418	Argument	& ctx -> gb		1701062	0					
ANR	1701419	UnaryOperationExpression	& ctx -> gb		1701062	0					
ANR	1701420	UnaryOperator	&		1701062	0					
ANR	1701421	PtrMemberAccess	ctx -> gb		1701062	1					
ANR	1701422	Identifier	ctx		1701062	0					
ANR	1701423	Identifier	gb		1701062	1					
ANR	1701424	Argument	5		1701062	1					
ANR	1701425	PrimaryExpression	5		1701062	0					
ANR	1701426	IfStatement	if ( transform_id >= FF_ARRAY_ELEMS ( transforms ) || ! transforms [ transform_id ] . inv_trans )		1701062	1					
ANR	1701427	Condition	transform_id >= FF_ARRAY_ELEMS ( transforms ) || ! transforms [ transform_id ] . inv_trans	103:16:1833:1930	1701062	0	True				
ANR	1701428	OrExpression	transform_id >= FF_ARRAY_ELEMS ( transforms ) || ! transforms [ transform_id ] . inv_trans		1701062	0		||			
ANR	1701429	RelationalExpression	transform_id >= FF_ARRAY_ELEMS ( transforms )		1701062	0		>=			
ANR	1701430	Identifier	transform_id		1701062	0					
ANR	1701431	CallExpression	FF_ARRAY_ELEMS ( transforms )		1701062	1					
ANR	1701432	Callee	FF_ARRAY_ELEMS		1701062	0					
ANR	1701433	Identifier	FF_ARRAY_ELEMS		1701062	0					
ANR	1701434	ArgumentList	transforms		1701062	1					
ANR	1701435	Argument	transforms		1701062	0					
ANR	1701436	Identifier	transforms		1701062	0					
ANR	1701437	UnaryOperationExpression	! transforms [ transform_id ] . inv_trans		1701062	1					
ANR	1701438	UnaryOperator	!		1701062	0					
ANR	1701439	MemberAccess	transforms [ transform_id ] . inv_trans		1701062	1					
ANR	1701440	ArrayIndexing	transforms [ transform_id ]		1701062	0					
ANR	1701441	Identifier	transforms		1701062	0					
ANR	1701442	Identifier	transform_id		1701062	1					
ANR	1701443	Identifier	inv_trans		1701062	1					
ANR	1701444	CompoundStatement		101:53:1812:1812	1701062	1					
ANR	1701445	ExpressionStatement	"avpriv_request_sample ( avctx , ""Transform %d"" , transform_id )"	107:16:1952:2010	1701062	0	True				
ANR	1701446	CallExpression	"avpriv_request_sample ( avctx , ""Transform %d"" , transform_id )"		1701062	0					
ANR	1701447	Callee	avpriv_request_sample		1701062	0					
ANR	1701448	Identifier	avpriv_request_sample		1701062	0					
ANR	1701449	ArgumentList	avctx		1701062	1					
ANR	1701450	Argument	avctx		1701062	0					
ANR	1701451	Identifier	avctx		1701062	0					
ANR	1701452	Argument	"""Transform %d"""		1701062	1					
ANR	1701453	PrimaryExpression	"""Transform %d"""		1701062	0					
ANR	1701454	Argument	transform_id		1701062	2					
ANR	1701455	Identifier	transform_id		1701062	0					
ANR	1701456	ReturnStatement	return AVERROR_PATCHWELCOME ;	109:16:2029:2056	1701062	1	True				
ANR	1701457	Identifier	AVERROR_PATCHWELCOME		1701062	0					
ANR	1701458	IfStatement	if ( ( transform_id >= 7 && transform_id <= 9 ) || transform_id == 17 )		1701062	2					
ANR	1701459	Condition	( transform_id >= 7 && transform_id <= 9 ) || transform_id == 17	113:16:2090:2169	1701062	0	True				
ANR	1701460	OrExpression	( transform_id >= 7 && transform_id <= 9 ) || transform_id == 17		1701062	0		||			
ANR	1701461	AndExpression	transform_id >= 7 && transform_id <= 9		1701062	0		&&			
ANR	1701462	RelationalExpression	transform_id >= 7		1701062	0		>=			
ANR	1701463	Identifier	transform_id		1701062	0					
ANR	1701464	PrimaryExpression	7		1701062	1					
ANR	1701465	RelationalExpression	transform_id <= 9		1701062	1		<=			
ANR	1701466	Identifier	transform_id		1701062	0					
ANR	1701467	PrimaryExpression	9		1701062	1					
ANR	1701468	EqualityExpression	transform_id == 17		1701062	1		==			
ANR	1701469	Identifier	transform_id		1701062	0					
ANR	1701470	PrimaryExpression	17		1701062	1					
ANR	1701471	CompoundStatement		111:37:2051:2051	1701062	1					
ANR	1701472	ExpressionStatement	"avpriv_request_sample ( avctx , ""DCT transform"" )"	117:16:2191:2236	1701062	0	True				
ANR	1701473	CallExpression	"avpriv_request_sample ( avctx , ""DCT transform"" )"		1701062	0					
ANR	1701474	Callee	avpriv_request_sample		1701062	0					
ANR	1701475	Identifier	avpriv_request_sample		1701062	0					
ANR	1701476	ArgumentList	avctx		1701062	1					
ANR	1701477	Argument	avctx		1701062	0					
ANR	1701478	Identifier	avctx		1701062	0					
ANR	1701479	Argument	"""DCT transform"""		1701062	1					
ANR	1701480	PrimaryExpression	"""DCT transform"""		1701062	0					
ANR	1701481	ReturnStatement	return AVERROR_PATCHWELCOME ;	119:16:2255:2282	1701062	1	True				
ANR	1701482	Identifier	AVERROR_PATCHWELCOME		1701062	0					
ANR	1701483	IfStatement	if ( ( transform_id >= 0 && transform_id <= 2 ) || transform_id == 10 )		1701062	3					
ANR	1701484	Condition	( transform_id >= 0 && transform_id <= 2 ) || transform_id == 10	127:16:2344:2405	1701062	0	True				
ANR	1701485	OrExpression	( transform_id >= 0 && transform_id <= 2 ) || transform_id == 10		1701062	0		||			
ANR	1701486	AndExpression	transform_id >= 0 && transform_id <= 2		1701062	0		&&			
ANR	1701487	RelationalExpression	transform_id >= 0		1701062	0		>=			
ANR	1701488	Identifier	transform_id		1701062	0					
ANR	1701489	PrimaryExpression	0		1701062	1					
ANR	1701490	RelationalExpression	transform_id <= 2		1701062	1		<=			
ANR	1701491	Identifier	transform_id		1701062	0					
ANR	1701492	PrimaryExpression	2		1701062	1					
ANR	1701493	EqualityExpression	transform_id == 10		1701062	1		==			
ANR	1701494	Identifier	transform_id		1701062	0					
ANR	1701495	PrimaryExpression	10		1701062	1					
ANR	1701496	ExpressionStatement	ctx -> uses_haar = 1	129:16:2425:2443	1701062	1	True				
ANR	1701497	AssignmentExpression	ctx -> uses_haar = 1		1701062	0		=			
ANR	1701498	PtrMemberAccess	ctx -> uses_haar		1701062	0					
ANR	1701499	Identifier	ctx		1701062	0					
ANR	1701500	Identifier	uses_haar		1701062	1					
ANR	1701501	PrimaryExpression	1		1701062	1					
ANR	1701502	ExpressionStatement	band -> inv_transform = transforms [ transform_id ] . inv_trans	135:12:2468:2524	1701062	4	True				
ANR	1701503	AssignmentExpression	band -> inv_transform = transforms [ transform_id ] . inv_trans		1701062	0		=			
ANR	1701504	PtrMemberAccess	band -> inv_transform		1701062	0					
ANR	1701505	Identifier	band		1701062	0					
ANR	1701506	Identifier	inv_transform		1701062	1					
ANR	1701507	MemberAccess	transforms [ transform_id ] . inv_trans		1701062	1					
ANR	1701508	ArrayIndexing	transforms [ transform_id ]		1701062	0					
ANR	1701509	Identifier	transforms		1701062	0					
ANR	1701510	Identifier	transform_id		1701062	1					
ANR	1701511	Identifier	inv_trans		1701062	1					
ANR	1701512	ExpressionStatement	band -> dc_transform = transforms [ transform_id ] . dc_trans	137:12:2539:2594	1701062	5	True				
ANR	1701513	AssignmentExpression	band -> dc_transform = transforms [ transform_id ] . dc_trans		1701062	0		=			
ANR	1701514	PtrMemberAccess	band -> dc_transform		1701062	0					
ANR	1701515	Identifier	band		1701062	0					
ANR	1701516	Identifier	dc_transform		1701062	1					
ANR	1701517	MemberAccess	transforms [ transform_id ] . dc_trans		1701062	1					
ANR	1701518	ArrayIndexing	transforms [ transform_id ]		1701062	0					
ANR	1701519	Identifier	transforms		1701062	0					
ANR	1701520	Identifier	transform_id		1701062	1					
ANR	1701521	Identifier	dc_trans		1701062	1					
ANR	1701522	ExpressionStatement	band -> is_2d_trans = transforms [ transform_id ] . is_2d_trans	139:12:2609:2667	1701062	6	True				
ANR	1701523	AssignmentExpression	band -> is_2d_trans = transforms [ transform_id ] . is_2d_trans		1701062	0		=			
ANR	1701524	PtrMemberAccess	band -> is_2d_trans		1701062	0					
ANR	1701525	Identifier	band		1701062	0					
ANR	1701526	Identifier	is_2d_trans		1701062	1					
ANR	1701527	MemberAccess	transforms [ transform_id ] . is_2d_trans		1701062	1					
ANR	1701528	ArrayIndexing	transforms [ transform_id ]		1701062	0					
ANR	1701529	Identifier	transforms		1701062	0					
ANR	1701530	Identifier	transform_id		1701062	1					
ANR	1701531	Identifier	is_2d_trans		1701062	1					
ANR	1701532	IfStatement	if ( transform_id < 10 )		1701062	7					
ANR	1701533	Condition	transform_id < 10	141:16:2686:2702	1701062	0	True				
ANR	1701534	RelationalExpression	transform_id < 10		1701062	0		<			
ANR	1701535	Identifier	transform_id		1701062	0					
ANR	1701536	PrimaryExpression	10		1701062	1					
ANR	1701537	ExpressionStatement	band -> transform_size = 8	143:16:2722:2746	1701062	1	True				
ANR	1701538	AssignmentExpression	band -> transform_size = 8		1701062	0		=			
ANR	1701539	PtrMemberAccess	band -> transform_size		1701062	0					
ANR	1701540	Identifier	band		1701062	0					
ANR	1701541	Identifier	transform_size		1701062	1					
ANR	1701542	PrimaryExpression	8		1701062	1					
ANR	1701543	ElseStatement	else		1701062	0					
ANR	1701544	ExpressionStatement	band -> transform_size = 4	147:16:2783:2807	1701062	0	True				
ANR	1701545	AssignmentExpression	band -> transform_size = 4		1701062	0		=			
ANR	1701546	PtrMemberAccess	band -> transform_size		1701062	0					
ANR	1701547	Identifier	band		1701062	0					
ANR	1701548	Identifier	transform_size		1701062	1					
ANR	1701549	PrimaryExpression	4		1701062	1					
ANR	1701550	IfStatement	if ( band -> blk_size != band -> transform_size )		1701062	8					
ANR	1701551	Condition	band -> blk_size != band -> transform_size	151:16:2828:2865	1701062	0	True				
ANR	1701552	EqualityExpression	band -> blk_size != band -> transform_size		1701062	0		!=			
ANR	1701553	PtrMemberAccess	band -> blk_size		1701062	0					
ANR	1701554	Identifier	band		1701062	0					
ANR	1701555	Identifier	blk_size		1701062	1					
ANR	1701556	PtrMemberAccess	band -> transform_size		1701062	1					
ANR	1701557	Identifier	band		1701062	0					
ANR	1701558	Identifier	transform_size		1701062	1					
ANR	1701559	ReturnStatement	return AVERROR_INVALIDDATA ;	153:16:2885:2911	1701062	1	True				
ANR	1701560	Identifier	AVERROR_INVALIDDATA		1701062	0					
ANR	1701561	ExpressionStatement	"scan_indx = get_bits ( & ctx -> gb , 4 )"	157:12:2928:2961	1701062	9	True				
ANR	1701562	AssignmentExpression	"scan_indx = get_bits ( & ctx -> gb , 4 )"		1701062	0		=			
ANR	1701563	Identifier	scan_indx		1701062	0					
ANR	1701564	CallExpression	"get_bits ( & ctx -> gb , 4 )"		1701062	1					
ANR	1701565	Callee	get_bits		1701062	0					
ANR	1701566	Identifier	get_bits		1701062	0					
ANR	1701567	ArgumentList	& ctx -> gb		1701062	1					
ANR	1701568	Argument	& ctx -> gb		1701062	0					
ANR	1701569	UnaryOperationExpression	& ctx -> gb		1701062	0					
ANR	1701570	UnaryOperator	&		1701062	0					
ANR	1701571	PtrMemberAccess	ctx -> gb		1701062	1					
ANR	1701572	Identifier	ctx		1701062	0					
ANR	1701573	Identifier	gb		1701062	1					
ANR	1701574	Argument	4		1701062	1					
ANR	1701575	PrimaryExpression	4		1701062	0					
ANR	1701576	IfStatement	if ( scan_indx == 15 )		1701062	10					
ANR	1701577	Condition	scan_indx == 15	159:16:2980:2994	1701062	0	True				
ANR	1701578	EqualityExpression	scan_indx == 15		1701062	0		==			
ANR	1701579	Identifier	scan_indx		1701062	0					
ANR	1701580	PrimaryExpression	15		1701062	1					
ANR	1701581	CompoundStatement		155:33:2876:2876	1701062	1					
ANR	1701582	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Custom scan pattern encountered!\\n"" )"	161:16:3016:3081	1701062	0	True				
ANR	1701583	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Custom scan pattern encountered!\\n"" )"		1701062	0					
ANR	1701584	Callee	av_log		1701062	0					
ANR	1701585	Identifier	av_log		1701062	0					
ANR	1701586	ArgumentList	avctx		1701062	1					
ANR	1701587	Argument	avctx		1701062	0					
ANR	1701588	Identifier	avctx		1701062	0					
ANR	1701589	Argument	AV_LOG_ERROR		1701062	1					
ANR	1701590	Identifier	AV_LOG_ERROR		1701062	0					
ANR	1701591	Argument	"""Custom scan pattern encountered!\\n"""		1701062	2					
ANR	1701592	PrimaryExpression	"""Custom scan pattern encountered!\\n"""		1701062	0					
ANR	1701593	ReturnStatement	return AVERROR_INVALIDDATA ;	163:16:3100:3126	1701062	1	True				
ANR	1701594	Identifier	AVERROR_INVALIDDATA		1701062	0					
ANR	1701595	IfStatement	if ( scan_indx > 4 && scan_indx < 10 )		1701062	11					
ANR	1701596	Condition	scan_indx > 4 && scan_indx < 10	167:16:3160:3190	1701062	0	True				
ANR	1701597	AndExpression	scan_indx > 4 && scan_indx < 10		1701062	0		&&			
ANR	1701598	RelationalExpression	scan_indx > 4		1701062	0		>			
ANR	1701599	Identifier	scan_indx		1701062	0					
ANR	1701600	PrimaryExpression	4		1701062	1					
ANR	1701601	RelationalExpression	scan_indx < 10		1701062	1		<			
ANR	1701602	Identifier	scan_indx		1701062	0					
ANR	1701603	PrimaryExpression	10		1701062	1					
ANR	1701604	CompoundStatement		163:49:3072:3072	1701062	1					
ANR	1701605	IfStatement	if ( band -> blk_size != 4 )		1701062	0					
ANR	1701606	Condition	band -> blk_size != 4	169:20:3216:3234	1701062	0	True				
ANR	1701607	EqualityExpression	band -> blk_size != 4		1701062	0		!=			
ANR	1701608	PtrMemberAccess	band -> blk_size		1701062	0					
ANR	1701609	Identifier	band		1701062	0					
ANR	1701610	Identifier	blk_size		1701062	1					
ANR	1701611	PrimaryExpression	4		1701062	1					
ANR	1701612	ReturnStatement	return AVERROR_INVALIDDATA ;	171:20:3258:3284	1701062	1	True				
ANR	1701613	Identifier	AVERROR_INVALIDDATA		1701062	0					
ANR	1701614	ElseStatement	else		1701062	0					
ANR	1701615	IfStatement	if ( band -> blk_size != 8 )		1701062	0					
ANR	1701616	Condition	band -> blk_size != 8	173:23:3310:3328	1701062	0	True				
ANR	1701617	EqualityExpression	band -> blk_size != 8		1701062	0		!=			
ANR	1701618	PtrMemberAccess	band -> blk_size		1701062	0					
ANR	1701619	Identifier	band		1701062	0					
ANR	1701620	Identifier	blk_size		1701062	1					
ANR	1701621	PrimaryExpression	8		1701062	1					
ANR	1701622	ReturnStatement	return AVERROR_INVALIDDATA ;	175:16:3348:3374	1701062	1	True				
ANR	1701623	Identifier	AVERROR_INVALIDDATA		1701062	0					
ANR	1701624	ExpressionStatement	band -> scan = scan_index_to_tab [ scan_indx ]	179:12:3391:3432	1701062	12	True				
ANR	1701625	AssignmentExpression	band -> scan = scan_index_to_tab [ scan_indx ]		1701062	0		=			
ANR	1701626	PtrMemberAccess	band -> scan		1701062	0					
ANR	1701627	Identifier	band		1701062	0					
ANR	1701628	Identifier	scan		1701062	1					
ANR	1701629	ArrayIndexing	scan_index_to_tab [ scan_indx ]		1701062	1					
ANR	1701630	Identifier	scan_index_to_tab		1701062	0					
ANR	1701631	Identifier	scan_indx		1701062	1					
ANR	1701632	ExpressionStatement	"band -> quant_mat = get_bits ( & ctx -> gb , 5 )"	183:12:3449:3488	1701062	13	True				
ANR	1701633	AssignmentExpression	"band -> quant_mat = get_bits ( & ctx -> gb , 5 )"		1701062	0		=			
ANR	1701634	PtrMemberAccess	band -> quant_mat		1701062	0					
ANR	1701635	Identifier	band		1701062	0					
ANR	1701636	Identifier	quant_mat		1701062	1					
ANR	1701637	CallExpression	"get_bits ( & ctx -> gb , 5 )"		1701062	1					
ANR	1701638	Callee	get_bits		1701062	0					
ANR	1701639	Identifier	get_bits		1701062	0					
ANR	1701640	ArgumentList	& ctx -> gb		1701062	1					
ANR	1701641	Argument	& ctx -> gb		1701062	0					
ANR	1701642	UnaryOperationExpression	& ctx -> gb		1701062	0					
ANR	1701643	UnaryOperator	&		1701062	0					
ANR	1701644	PtrMemberAccess	ctx -> gb		1701062	1					
ANR	1701645	Identifier	ctx		1701062	0					
ANR	1701646	Identifier	gb		1701062	1					
ANR	1701647	Argument	5		1701062	1					
ANR	1701648	PrimaryExpression	5		1701062	0					
ANR	1701649	IfStatement	if ( band -> quant_mat >= FF_ARRAY_ELEMS ( quant_index_to_tab ) )		1701062	14					
ANR	1701650	Condition	band -> quant_mat >= FF_ARRAY_ELEMS ( quant_index_to_tab )	185:16:3507:3559	1701062	0	True				
ANR	1701651	RelationalExpression	band -> quant_mat >= FF_ARRAY_ELEMS ( quant_index_to_tab )		1701062	0		>=			
ANR	1701652	PtrMemberAccess	band -> quant_mat		1701062	0					
ANR	1701653	Identifier	band		1701062	0					
ANR	1701654	Identifier	quant_mat		1701062	1					
ANR	1701655	CallExpression	FF_ARRAY_ELEMS ( quant_index_to_tab )		1701062	1					
ANR	1701656	Callee	FF_ARRAY_ELEMS		1701062	0					
ANR	1701657	Identifier	FF_ARRAY_ELEMS		1701062	0					
ANR	1701658	ArgumentList	quant_index_to_tab		1701062	1					
ANR	1701659	Argument	quant_index_to_tab		1701062	0					
ANR	1701660	Identifier	quant_index_to_tab		1701062	0					
ANR	1701661	CompoundStatement		181:71:3441:3441	1701062	1					
ANR	1701662	IfStatement	if ( band -> quant_mat == 31 )		1701062	0					
ANR	1701663	Condition	band -> quant_mat == 31	189:20:3587:3607	1701062	0	True				
ANR	1701664	EqualityExpression	band -> quant_mat == 31		1701062	0		==			
ANR	1701665	PtrMemberAccess	band -> quant_mat		1701062	0					
ANR	1701666	Identifier	band		1701062	0					
ANR	1701667	Identifier	quant_mat		1701062	1					
ANR	1701668	PrimaryExpression	31		1701062	1					
ANR	1701669	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Custom quant matrix encountered!\\n"" )"	191:20:3631:3724	1701062	1	True				
ANR	1701670	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Custom quant matrix encountered!\\n"" )"		1701062	0					
ANR	1701671	Callee	av_log		1701062	0					
ANR	1701672	Identifier	av_log		1701062	0					
ANR	1701673	ArgumentList	avctx		1701062	1					
ANR	1701674	Argument	avctx		1701062	0					
ANR	1701675	Identifier	avctx		1701062	0					
ANR	1701676	Argument	AV_LOG_ERROR		1701062	1					
ANR	1701677	Identifier	AV_LOG_ERROR		1701062	0					
ANR	1701678	Argument	"""Custom quant matrix encountered!\\n"""		1701062	2					
ANR	1701679	PrimaryExpression	"""Custom quant matrix encountered!\\n"""		1701062	0					
ANR	1701680	ElseStatement	else		1701062	0					
ANR	1701681	ExpressionStatement	"avpriv_request_sample ( avctx , ""Quantization matrix %d"" , band -> quant_mat )"	197:20:3769:3883	1701062	0	True				
ANR	1701682	CallExpression	"avpriv_request_sample ( avctx , ""Quantization matrix %d"" , band -> quant_mat )"		1701062	0					
ANR	1701683	Callee	avpriv_request_sample		1701062	0					
ANR	1701684	Identifier	avpriv_request_sample		1701062	0					
ANR	1701685	ArgumentList	avctx		1701062	1					
ANR	1701686	Argument	avctx		1701062	0					
ANR	1701687	Identifier	avctx		1701062	0					
ANR	1701688	Argument	"""Quantization matrix %d"""		1701062	1					
ANR	1701689	PrimaryExpression	"""Quantization matrix %d"""		1701062	0					
ANR	1701690	Argument	band -> quant_mat		1701062	2					
ANR	1701691	PtrMemberAccess	band -> quant_mat		1701062	0					
ANR	1701692	Identifier	band		1701062	0					
ANR	1701693	Identifier	quant_mat		1701062	1					
ANR	1701694	ExpressionStatement	band -> quant_mat = - 1	201:16:3902:3922	1701062	1	True				
ANR	1701695	AssignmentExpression	band -> quant_mat = - 1		1701062	0		=			
ANR	1701696	PtrMemberAccess	band -> quant_mat		1701062	0					
ANR	1701697	Identifier	band		1701062	0					
ANR	1701698	Identifier	quant_mat		1701062	1					
ANR	1701699	UnaryOperationExpression	- 1		1701062	1					
ANR	1701700	UnaryOperator	-		1701062	0					
ANR	1701701	PrimaryExpression	1		1701062	1					
ANR	1701702	ReturnStatement	return AVERROR_INVALIDDATA ;	203:16:3941:3967	1701062	2	True				
ANR	1701703	Identifier	AVERROR_INVALIDDATA		1701062	0					
ANR	1701704	ElseStatement	else		1701062	0					
ANR	1701705	CompoundStatement		203:15:3879:3879	1701062	0					
ANR	1701706	IfStatement	if ( old_blk_size != band -> blk_size )		1701062	0					
ANR	1701707	Condition	old_blk_size != band -> blk_size	209:16:4019:4048	1701062	0	True				
ANR	1701708	EqualityExpression	old_blk_size != band -> blk_size		1701062	0		!=			
ANR	1701709	Identifier	old_blk_size		1701062	0					
ANR	1701710	PtrMemberAccess	band -> blk_size		1701062	1					
ANR	1701711	Identifier	band		1701062	0					
ANR	1701712	Identifier	blk_size		1701062	1					
ANR	1701713	CompoundStatement		205:48:3930:3930	1701062	1					
ANR	1701714	Statement	av_log	211:16:4070:4075	1701062	0	True				
ANR	1701715	Statement	(	211:22:4076:4076	1701062	1	True				
ANR	1701716	Statement	avctx	211:23:4077:4081	1701062	2	True				
ANR	1701717	Statement	","	211:28:4082:4082	1701062	3	True				
ANR	1701718	Statement	AV_LOG_ERROR	211:30:4084:4095	1701062	4	True				
ANR	1701719	Statement	","	211:42:4096:4096	1701062	5	True				
ANR	1701720	Statement	"""The band block size does not match the configuration """	213:23:4122:4176	1701062	6	True				
ANR	1701721	Statement	"""inherited\\n"""	215:23:4202:4214	1701062	7	True				
ANR	1701722	Statement	)	215:36:4215:4215	1701062	8	True				
ANR	1701723	ExpressionStatement		215:37:4216:4216	1701062	9	True				
ANR	1701724	ReturnStatement	return AVERROR_INVALIDDATA ;	217:16:4235:4261	1701062	10	True				
ANR	1701725	Identifier	AVERROR_INVALIDDATA		1701062	0					
ANR	1701726	IfStatement	if ( band -> quant_mat < 0 )		1701062	1					
ANR	1701727	Condition	band -> quant_mat < 0	221:16:4295:4313	1701062	0	True				
ANR	1701728	RelationalExpression	band -> quant_mat < 0		1701062	0		<			
ANR	1701729	PtrMemberAccess	band -> quant_mat		1701062	0					
ANR	1701730	Identifier	band		1701062	0					
ANR	1701731	Identifier	quant_mat		1701062	1					
ANR	1701732	PrimaryExpression	0		1701062	1					
ANR	1701733	CompoundStatement		217:37:4195:4195	1701062	1					
ANR	1701734	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Invalid quant_mat inherited\\n"" )"	223:16:4335:4395	1701062	0	True				
ANR	1701735	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Invalid quant_mat inherited\\n"" )"		1701062	0					
ANR	1701736	Callee	av_log		1701062	0					
ANR	1701737	Identifier	av_log		1701062	0					
ANR	1701738	ArgumentList	avctx		1701062	1					
ANR	1701739	Argument	avctx		1701062	0					
ANR	1701740	Identifier	avctx		1701062	0					
ANR	1701741	Argument	AV_LOG_ERROR		1701062	1					
ANR	1701742	Identifier	AV_LOG_ERROR		1701062	0					
ANR	1701743	Argument	"""Invalid quant_mat inherited\\n"""		1701062	2					
ANR	1701744	PrimaryExpression	"""Invalid quant_mat inherited\\n"""		1701062	0					
ANR	1701745	ReturnStatement	return AVERROR_INVALIDDATA ;	225:16:4414:4440	1701062	1	True				
ANR	1701746	Identifier	AVERROR_INVALIDDATA		1701062	0					
ANR	1701747	IfStatement	if ( ! get_bits1 ( & ctx -> gb ) )		1701062	15					
ANR	1701748	Condition	! get_bits1 ( & ctx -> gb )	235:12:4528:4547	1701062	0	True				
ANR	1701749	UnaryOperationExpression	! get_bits1 ( & ctx -> gb )		1701062	0					
ANR	1701750	UnaryOperator	!		1701062	0					
ANR	1701751	CallExpression	get_bits1 ( & ctx -> gb )		1701062	1					
ANR	1701752	Callee	get_bits1		1701062	0					
ANR	1701753	Identifier	get_bits1		1701062	0					
ANR	1701754	ArgumentList	& ctx -> gb		1701062	1					
ANR	1701755	Argument	& ctx -> gb		1701062	0					
ANR	1701756	UnaryOperationExpression	& ctx -> gb		1701062	0					
ANR	1701757	UnaryOperator	&		1701062	0					
ANR	1701758	PtrMemberAccess	ctx -> gb		1701062	1					
ANR	1701759	Identifier	ctx		1701062	0					
ANR	1701760	Identifier	gb		1701062	1					
ANR	1701761	ExpressionStatement	band -> blk_vlc . tab = ctx -> blk_vlc . tab	237:12:4563:4599	1701062	1	True				
ANR	1701762	AssignmentExpression	band -> blk_vlc . tab = ctx -> blk_vlc . tab		1701062	0		=			
ANR	1701763	MemberAccess	band -> blk_vlc . tab		1701062	0					
ANR	1701764	PtrMemberAccess	band -> blk_vlc		1701062	0					
ANR	1701765	Identifier	band		1701062	0					
ANR	1701766	Identifier	blk_vlc		1701062	1					
ANR	1701767	Identifier	tab		1701062	1					
ANR	1701768	MemberAccess	ctx -> blk_vlc . tab		1701062	1					
ANR	1701769	PtrMemberAccess	ctx -> blk_vlc		1701062	0					
ANR	1701770	Identifier	ctx		1701062	0					
ANR	1701771	Identifier	blk_vlc		1701062	1					
ANR	1701772	Identifier	tab		1701062	1					
ANR	1701773	ElseStatement	else		1701062	0					
ANR	1701774	IfStatement	"if ( ff_ivi_dec_huff_desc ( & ctx -> gb , 1 , IVI_BLK_HUFF , & band -> blk_vlc , avctx ) )"		1701062	0					
ANR	1701775	Condition	"ff_ivi_dec_huff_desc ( & ctx -> gb , 1 , IVI_BLK_HUFF , & band -> blk_vlc , avctx )"	241:16:4632:4739	1701062	0	True				
ANR	1701776	CallExpression	"ff_ivi_dec_huff_desc ( & ctx -> gb , 1 , IVI_BLK_HUFF , & band -> blk_vlc , avctx )"		1701062	0					
ANR	1701777	Callee	ff_ivi_dec_huff_desc		1701062	0					
ANR	1701778	Identifier	ff_ivi_dec_huff_desc		1701062	0					
ANR	1701779	ArgumentList	& ctx -> gb		1701062	1					
ANR	1701780	Argument	& ctx -> gb		1701062	0					
ANR	1701781	UnaryOperationExpression	& ctx -> gb		1701062	0					
ANR	1701782	UnaryOperator	&		1701062	0					
ANR	1701783	PtrMemberAccess	ctx -> gb		1701062	1					
ANR	1701784	Identifier	ctx		1701062	0					
ANR	1701785	Identifier	gb		1701062	1					
ANR	1701786	Argument	1		1701062	1					
ANR	1701787	PrimaryExpression	1		1701062	0					
ANR	1701788	Argument	IVI_BLK_HUFF		1701062	2					
ANR	1701789	Identifier	IVI_BLK_HUFF		1701062	0					
ANR	1701790	Argument	& band -> blk_vlc		1701062	3					
ANR	1701791	UnaryOperationExpression	& band -> blk_vlc		1701062	0					
ANR	1701792	UnaryOperator	&		1701062	0					
ANR	1701793	PtrMemberAccess	band -> blk_vlc		1701062	1					
ANR	1701794	Identifier	band		1701062	0					
ANR	1701795	Identifier	blk_vlc		1701062	1					
ANR	1701796	Argument	avctx		1701062	4					
ANR	1701797	Identifier	avctx		1701062	0					
ANR	1701798	ReturnStatement	return AVERROR_INVALIDDATA ;	245:16:4759:4785	1701062	1	True				
ANR	1701799	Identifier	AVERROR_INVALIDDATA		1701062	0					
ANR	1701800	ExpressionStatement	"band -> rvmap_sel = get_bits1 ( & ctx -> gb ) ? get_bits ( & ctx -> gb , 3 ) : 8"	251:8:4858:4923	1701062	16	True				
ANR	1701801	AssignmentExpression	"band -> rvmap_sel = get_bits1 ( & ctx -> gb ) ? get_bits ( & ctx -> gb , 3 ) : 8"		1701062	0		=			
ANR	1701802	PtrMemberAccess	band -> rvmap_sel		1701062	0					
ANR	1701803	Identifier	band		1701062	0					
ANR	1701804	Identifier	rvmap_sel		1701062	1					
ANR	1701805	ConditionalExpression	"get_bits1 ( & ctx -> gb ) ? get_bits ( & ctx -> gb , 3 ) : 8"		1701062	1					
ANR	1701806	Condition	get_bits1 ( & ctx -> gb )		1701062	0					
ANR	1701807	CallExpression	get_bits1 ( & ctx -> gb )		1701062	0					
ANR	1701808	Callee	get_bits1		1701062	0					
ANR	1701809	Identifier	get_bits1		1701062	0					
ANR	1701810	ArgumentList	& ctx -> gb		1701062	1					
ANR	1701811	Argument	& ctx -> gb		1701062	0					
ANR	1701812	UnaryOperationExpression	& ctx -> gb		1701062	0					
ANR	1701813	UnaryOperator	&		1701062	0					
ANR	1701814	PtrMemberAccess	ctx -> gb		1701062	1					
ANR	1701815	Identifier	ctx		1701062	0					
ANR	1701816	Identifier	gb		1701062	1					
ANR	1701817	CallExpression	"get_bits ( & ctx -> gb , 3 )"		1701062	1					
ANR	1701818	Callee	get_bits		1701062	0					
ANR	1701819	Identifier	get_bits		1701062	0					
ANR	1701820	ArgumentList	& ctx -> gb		1701062	1					
ANR	1701821	Argument	& ctx -> gb		1701062	0					
ANR	1701822	UnaryOperationExpression	& ctx -> gb		1701062	0					
ANR	1701823	UnaryOperator	&		1701062	0					
ANR	1701824	PtrMemberAccess	ctx -> gb		1701062	1					
ANR	1701825	Identifier	ctx		1701062	0					
ANR	1701826	Identifier	gb		1701062	1					
ANR	1701827	Argument	3		1701062	1					
ANR	1701828	PrimaryExpression	3		1701062	0					
ANR	1701829	PrimaryExpression	8		1701062	2					
ANR	1701830	ExpressionStatement	band -> num_corr = 0	257:8:4995:5013	1701062	17	True				
ANR	1701831	AssignmentExpression	band -> num_corr = 0		1701062	0		=			
ANR	1701832	PtrMemberAccess	band -> num_corr		1701062	0					
ANR	1701833	Identifier	band		1701062	0					
ANR	1701834	Identifier	num_corr		1701062	1					
ANR	1701835	PrimaryExpression	0		1701062	1					
ANR	1701836	IfStatement	if ( get_bits1 ( & ctx -> gb ) )		1701062	18					
ANR	1701837	Condition	get_bits1 ( & ctx -> gb )	259:12:5058:5076	1701062	0	True				
ANR	1701838	CallExpression	get_bits1 ( & ctx -> gb )		1701062	0					
ANR	1701839	Callee	get_bits1		1701062	0					
ANR	1701840	Identifier	get_bits1		1701062	0					
ANR	1701841	ArgumentList	& ctx -> gb		1701062	1					
ANR	1701842	Argument	& ctx -> gb		1701062	0					
ANR	1701843	UnaryOperationExpression	& ctx -> gb		1701062	0					
ANR	1701844	UnaryOperator	&		1701062	0					
ANR	1701845	PtrMemberAccess	ctx -> gb		1701062	1					
ANR	1701846	Identifier	ctx		1701062	0					
ANR	1701847	Identifier	gb		1701062	1					
ANR	1701848	CompoundStatement		255:33:4958:4958	1701062	1					
ANR	1701849	ExpressionStatement	"band -> num_corr = get_bits ( & ctx -> gb , 8 )"	261:12:5094:5132	1701062	0	True				
ANR	1701850	AssignmentExpression	"band -> num_corr = get_bits ( & ctx -> gb , 8 )"		1701062	0		=			
ANR	1701851	PtrMemberAccess	band -> num_corr		1701062	0					
ANR	1701852	Identifier	band		1701062	0					
ANR	1701853	Identifier	num_corr		1701062	1					
ANR	1701854	CallExpression	"get_bits ( & ctx -> gb , 8 )"		1701062	1					
ANR	1701855	Callee	get_bits		1701062	0					
ANR	1701856	Identifier	get_bits		1701062	0					
ANR	1701857	ArgumentList	& ctx -> gb		1701062	1					
ANR	1701858	Argument	& ctx -> gb		1701062	0					
ANR	1701859	UnaryOperationExpression	& ctx -> gb		1701062	0					
ANR	1701860	UnaryOperator	&		1701062	0					
ANR	1701861	PtrMemberAccess	ctx -> gb		1701062	1					
ANR	1701862	Identifier	ctx		1701062	0					
ANR	1701863	Identifier	gb		1701062	1					
ANR	1701864	Argument	8		1701062	1					
ANR	1701865	PrimaryExpression	8		1701062	0					
ANR	1701866	IfStatement	if ( band -> num_corr > 61 )		1701062	1					
ANR	1701867	Condition	band -> num_corr > 61	263:16:5188:5206	1701062	0	True				
ANR	1701868	RelationalExpression	band -> num_corr > 61		1701062	0		>			
ANR	1701869	PtrMemberAccess	band -> num_corr		1701062	0					
ANR	1701870	Identifier	band		1701062	0					
ANR	1701871	Identifier	num_corr		1701062	1					
ANR	1701872	PrimaryExpression	61		1701062	1					
ANR	1701873	CompoundStatement		259:37:5088:5088	1701062	1					
ANR	1701874	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Too many corrections: %d\\n"" , band -> num_corr )"	265:16:5228:5325	1701062	0	True				
ANR	1701875	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Too many corrections: %d\\n"" , band -> num_corr )"		1701062	0					
ANR	1701876	Callee	av_log		1701062	0					
ANR	1701877	Identifier	av_log		1701062	0					
ANR	1701878	ArgumentList	avctx		1701062	1					
ANR	1701879	Argument	avctx		1701062	0					
ANR	1701880	Identifier	avctx		1701062	0					
ANR	1701881	Argument	AV_LOG_ERROR		1701062	1					
ANR	1701882	Identifier	AV_LOG_ERROR		1701062	0					
ANR	1701883	Argument	"""Too many corrections: %d\\n"""		1701062	2					
ANR	1701884	PrimaryExpression	"""Too many corrections: %d\\n"""		1701062	0					
ANR	1701885	Argument	band -> num_corr		1701062	3					
ANR	1701886	PtrMemberAccess	band -> num_corr		1701062	0					
ANR	1701887	Identifier	band		1701062	0					
ANR	1701888	Identifier	num_corr		1701062	1					
ANR	1701889	ReturnStatement	return AVERROR_INVALIDDATA ;	269:16:5344:5370	1701062	1	True				
ANR	1701890	Identifier	AVERROR_INVALIDDATA		1701062	0					
ANR	1701891	ForStatement	for ( i = 0 ; i < band -> num_corr * 2 ; i ++ )		1701062	2					
ANR	1701892	ForInit	i = 0 ;	277:17:5448:5453	1701062	0	True				
ANR	1701893	AssignmentExpression	i = 0		1701062	0		=			
ANR	1701894	Identifier	i		1701062	0					
ANR	1701895	PrimaryExpression	0		1701062	1					
ANR	1701896	Condition	i < band -> num_corr * 2	277:24:5455:5476	1701062	1	True				
ANR	1701897	RelationalExpression	i < band -> num_corr * 2		1701062	0		<			
ANR	1701898	Identifier	i		1701062	0					
ANR	1701899	MultiplicativeExpression	band -> num_corr * 2		1701062	1		*			
ANR	1701900	PtrMemberAccess	band -> num_corr		1701062	0					
ANR	1701901	Identifier	band		1701062	0					
ANR	1701902	Identifier	num_corr		1701062	1					
ANR	1701903	PrimaryExpression	2		1701062	1					
ANR	1701904	PostIncDecOperationExpression	i ++	277:48:5479:5481	1701062	2	True				
ANR	1701905	Identifier	i		1701062	0					
ANR	1701906	IncDec	++		1701062	1					
ANR	1701907	ExpressionStatement	"band -> corr [ i ] = get_bits ( & ctx -> gb , 8 )"	279:16:5501:5538	1701062	3	True				
ANR	1701908	AssignmentExpression	"band -> corr [ i ] = get_bits ( & ctx -> gb , 8 )"		1701062	0		=			
ANR	1701909	ArrayIndexing	band -> corr [ i ]		1701062	0					
ANR	1701910	PtrMemberAccess	band -> corr		1701062	0					
ANR	1701911	Identifier	band		1701062	0					
ANR	1701912	Identifier	corr		1701062	1					
ANR	1701913	Identifier	i		1701062	1					
ANR	1701914	CallExpression	"get_bits ( & ctx -> gb , 8 )"		1701062	1					
ANR	1701915	Callee	get_bits		1701062	0					
ANR	1701916	Identifier	get_bits		1701062	0					
ANR	1701917	ArgumentList	& ctx -> gb		1701062	1					
ANR	1701918	Argument	& ctx -> gb		1701062	0					
ANR	1701919	UnaryOperationExpression	& ctx -> gb		1701062	0					
ANR	1701920	UnaryOperator	&		1701062	0					
ANR	1701921	PtrMemberAccess	ctx -> gb		1701062	1					
ANR	1701922	Identifier	ctx		1701062	0					
ANR	1701923	Identifier	gb		1701062	1					
ANR	1701924	Argument	8		1701062	1					
ANR	1701925	PrimaryExpression	8		1701062	0					
ANR	1701926	IfStatement	if ( band -> blk_size == 8 )		1701062	7					
ANR	1701927	Condition	band -> blk_size == 8	287:8:5569:5587	1701062	0	True				
ANR	1701928	EqualityExpression	band -> blk_size == 8		1701062	0		==			
ANR	1701929	PtrMemberAccess	band -> blk_size		1701062	0					
ANR	1701930	Identifier	band		1701062	0					
ANR	1701931	Identifier	blk_size		1701062	1					
ANR	1701932	PrimaryExpression	8		1701062	1					
ANR	1701933	CompoundStatement		283:29:5469:5469	1701062	1					
ANR	1701934	ExpressionStatement	band -> intra_base = & ivi4_quant_8x8_intra [ quant_index_to_tab [ band -> quant_mat ] ] [ 0 ]	289:8:5601:5681	1701062	0	True				
ANR	1701935	AssignmentExpression	band -> intra_base = & ivi4_quant_8x8_intra [ quant_index_to_tab [ band -> quant_mat ] ] [ 0 ]		1701062	0		=			
ANR	1701936	PtrMemberAccess	band -> intra_base		1701062	0					
ANR	1701937	Identifier	band		1701062	0					
ANR	1701938	Identifier	intra_base		1701062	1					
ANR	1701939	UnaryOperationExpression	& ivi4_quant_8x8_intra [ quant_index_to_tab [ band -> quant_mat ] ] [ 0 ]		1701062	1					
ANR	1701940	UnaryOperator	&		1701062	0					
ANR	1701941	ArrayIndexing	ivi4_quant_8x8_intra [ quant_index_to_tab [ band -> quant_mat ] ] [ 0 ]		1701062	1					
ANR	1701942	ArrayIndexing	ivi4_quant_8x8_intra [ quant_index_to_tab [ band -> quant_mat ] ]		1701062	0					
ANR	1701943	Identifier	ivi4_quant_8x8_intra		1701062	0					
ANR	1701944	ArrayIndexing	quant_index_to_tab [ band -> quant_mat ]		1701062	1					
ANR	1701945	Identifier	quant_index_to_tab		1701062	0					
ANR	1701946	PtrMemberAccess	band -> quant_mat		1701062	1					
ANR	1701947	Identifier	band		1701062	0					
ANR	1701948	Identifier	quant_mat		1701062	1					
ANR	1701949	PrimaryExpression	0		1701062	1					
ANR	1701950	ExpressionStatement	band -> inter_base = & ivi4_quant_8x8_inter [ quant_index_to_tab [ band -> quant_mat ] ] [ 0 ]	291:8:5692:5772	1701062	1	True				
ANR	1701951	AssignmentExpression	band -> inter_base = & ivi4_quant_8x8_inter [ quant_index_to_tab [ band -> quant_mat ] ] [ 0 ]		1701062	0		=			
ANR	1701952	PtrMemberAccess	band -> inter_base		1701062	0					
ANR	1701953	Identifier	band		1701062	0					
ANR	1701954	Identifier	inter_base		1701062	1					
ANR	1701955	UnaryOperationExpression	& ivi4_quant_8x8_inter [ quant_index_to_tab [ band -> quant_mat ] ] [ 0 ]		1701062	1					
ANR	1701956	UnaryOperator	&		1701062	0					
ANR	1701957	ArrayIndexing	ivi4_quant_8x8_inter [ quant_index_to_tab [ band -> quant_mat ] ] [ 0 ]		1701062	1					
ANR	1701958	ArrayIndexing	ivi4_quant_8x8_inter [ quant_index_to_tab [ band -> quant_mat ] ]		1701062	0					
ANR	1701959	Identifier	ivi4_quant_8x8_inter		1701062	0					
ANR	1701960	ArrayIndexing	quant_index_to_tab [ band -> quant_mat ]		1701062	1					
ANR	1701961	Identifier	quant_index_to_tab		1701062	0					
ANR	1701962	PtrMemberAccess	band -> quant_mat		1701062	1					
ANR	1701963	Identifier	band		1701062	0					
ANR	1701964	Identifier	quant_mat		1701062	1					
ANR	1701965	PrimaryExpression	0		1701062	1					
ANR	1701966	ElseStatement	else		1701062	0					
ANR	1701967	CompoundStatement		289:11:5665:5665	1701062	0					
ANR	1701968	ExpressionStatement	band -> intra_base = & ivi4_quant_4x4_intra [ quant_index_to_tab [ band -> quant_mat ] ] [ 0 ]	295:8:5797:5877	1701062	0	True				
ANR	1701969	AssignmentExpression	band -> intra_base = & ivi4_quant_4x4_intra [ quant_index_to_tab [ band -> quant_mat ] ] [ 0 ]		1701062	0		=			
ANR	1701970	PtrMemberAccess	band -> intra_base		1701062	0					
ANR	1701971	Identifier	band		1701062	0					
ANR	1701972	Identifier	intra_base		1701062	1					
ANR	1701973	UnaryOperationExpression	& ivi4_quant_4x4_intra [ quant_index_to_tab [ band -> quant_mat ] ] [ 0 ]		1701062	1					
ANR	1701974	UnaryOperator	&		1701062	0					
ANR	1701975	ArrayIndexing	ivi4_quant_4x4_intra [ quant_index_to_tab [ band -> quant_mat ] ] [ 0 ]		1701062	1					
ANR	1701976	ArrayIndexing	ivi4_quant_4x4_intra [ quant_index_to_tab [ band -> quant_mat ] ]		1701062	0					
ANR	1701977	Identifier	ivi4_quant_4x4_intra		1701062	0					
ANR	1701978	ArrayIndexing	quant_index_to_tab [ band -> quant_mat ]		1701062	1					
ANR	1701979	Identifier	quant_index_to_tab		1701062	0					
ANR	1701980	PtrMemberAccess	band -> quant_mat		1701062	1					
ANR	1701981	Identifier	band		1701062	0					
ANR	1701982	Identifier	quant_mat		1701062	1					
ANR	1701983	PrimaryExpression	0		1701062	1					
ANR	1701984	ExpressionStatement	band -> inter_base = & ivi4_quant_4x4_inter [ quant_index_to_tab [ band -> quant_mat ] ] [ 0 ]	297:8:5888:5968	1701062	1	True				
ANR	1701985	AssignmentExpression	band -> inter_base = & ivi4_quant_4x4_inter [ quant_index_to_tab [ band -> quant_mat ] ] [ 0 ]		1701062	0		=			
ANR	1701986	PtrMemberAccess	band -> inter_base		1701062	0					
ANR	1701987	Identifier	band		1701062	0					
ANR	1701988	Identifier	inter_base		1701062	1					
ANR	1701989	UnaryOperationExpression	& ivi4_quant_4x4_inter [ quant_index_to_tab [ band -> quant_mat ] ] [ 0 ]		1701062	1					
ANR	1701990	UnaryOperator	&		1701062	0					
ANR	1701991	ArrayIndexing	ivi4_quant_4x4_inter [ quant_index_to_tab [ band -> quant_mat ] ] [ 0 ]		1701062	1					
ANR	1701992	ArrayIndexing	ivi4_quant_4x4_inter [ quant_index_to_tab [ band -> quant_mat ] ]		1701062	0					
ANR	1701993	Identifier	ivi4_quant_4x4_inter		1701062	0					
ANR	1701994	ArrayIndexing	quant_index_to_tab [ band -> quant_mat ]		1701062	1					
ANR	1701995	Identifier	quant_index_to_tab		1701062	0					
ANR	1701996	PtrMemberAccess	band -> quant_mat		1701062	1					
ANR	1701997	Identifier	band		1701062	0					
ANR	1701998	Identifier	quant_mat		1701062	1					
ANR	1701999	PrimaryExpression	0		1701062	1					
ANR	1702000	ExpressionStatement	band -> intra_scale = NULL	305:4:6028:6052	1701062	8	True				
ANR	1702001	AssignmentExpression	band -> intra_scale = NULL		1701062	0		=			
ANR	1702002	PtrMemberAccess	band -> intra_scale		1701062	0					
ANR	1702003	Identifier	band		1701062	0					
ANR	1702004	Identifier	intra_scale		1701062	1					
ANR	1702005	Identifier	NULL		1701062	1					
ANR	1702006	ExpressionStatement	band -> inter_scale = NULL	307:4:6059:6083	1701062	9	True				
ANR	1702007	AssignmentExpression	band -> inter_scale = NULL		1701062	0		=			
ANR	1702008	PtrMemberAccess	band -> inter_scale		1701062	0					
ANR	1702009	Identifier	band		1701062	0					
ANR	1702010	Identifier	inter_scale		1701062	1					
ANR	1702011	Identifier	NULL		1701062	1					
ANR	1702012	ExpressionStatement	align_get_bits ( & ctx -> gb )	311:4:6092:6116	1701062	10	True				
ANR	1702013	CallExpression	align_get_bits ( & ctx -> gb )		1701062	0					
ANR	1702014	Callee	align_get_bits		1701062	0					
ANR	1702015	Identifier	align_get_bits		1701062	0					
ANR	1702016	ArgumentList	& ctx -> gb		1701062	1					
ANR	1702017	Argument	& ctx -> gb		1701062	0					
ANR	1702018	UnaryOperationExpression	& ctx -> gb		1701062	0					
ANR	1702019	UnaryOperator	&		1701062	0					
ANR	1702020	PtrMemberAccess	ctx -> gb		1701062	1					
ANR	1702021	Identifier	ctx		1701062	0					
ANR	1702022	Identifier	gb		1701062	1					
ANR	1702023	ReturnStatement	return 0 ;	315:4:6125:6133	1701062	11	True				
ANR	1702024	PrimaryExpression	0		1701062	0					
ANR	1702025	ReturnType	static int		1701062	1					
ANR	1702026	Identifier	decode_band_hdr		1701062	2					
ANR	1702027	ParameterList	"IVI45DecContext * ctx , IVIBandDesc * band , AVCodecContext * avctx"		1701062	3					
ANR	1702028	Parameter	IVI45DecContext * ctx	1:27:27:46	1701062	0	True				
ANR	1702029	ParameterType	IVI45DecContext *		1701062	0					
ANR	1702030	Identifier	ctx		1701062	1					
ANR	1702031	Parameter	IVIBandDesc * band	1:49:49:65	1701062	1	True				
ANR	1702032	ParameterType	IVIBandDesc *		1701062	0					
ANR	1702033	Identifier	band		1701062	1					
ANR	1702034	Parameter	AVCodecContext * avctx	3:27:96:116	1701062	2	True				
ANR	1702035	ParameterType	AVCodecContext *		1701062	0					
ANR	1702036	Identifier	avctx		1701062	1					
ANR	1702037	CFGEntryNode	ENTRY		1701062		True				
ANR	1702038	CFGExitNode	EXIT		1701062		True				
ANR	1702039	Symbol	plane		1701062						
ANR	1702040	Symbol	band -> is_halfpel		1701062						
ANR	1702041	Symbol	ctx -> frame_type		1701062						
ANR	1702042	Symbol	band -> rvmap_sel		1701062						
ANR	1702043	Symbol	get_bits		1701062						
ANR	1702044	Symbol	* quant_index_to_tab		1701062						
ANR	1702045	Symbol	transforms		1701062						
ANR	1702046	Symbol	transforms [ transform_id ] . inv_trans		1701062						
ANR	1702047	Symbol	& band -> blk_vlc		1701062						
ANR	1702048	Symbol	* band -> corr		1701062						
ANR	1702049	Symbol	transform_id		1701062						
ANR	1702050	Symbol	band -> dc_transform		1701062						
ANR	1702051	Symbol	* transform_id		1701062						
ANR	1702052	Symbol	ctx -> blk_vlc		1701062						
ANR	1702053	Symbol	band		1701062						
ANR	1702054	Symbol	band -> blk_vlc		1701062						
ANR	1702055	Symbol	ivi4_quant_8x8_intra		1701062						
ANR	1702056	Symbol	ivi4_quant_8x8_inter		1701062						
ANR	1702057	Symbol	band -> corr		1701062						
ANR	1702058	Symbol	NULL		1701062						
ANR	1702059	Symbol	ctx		1701062						
ANR	1702060	Symbol	band -> band_num		1701062						
ANR	1702061	Symbol	get_bits1		1701062						
ANR	1702062	Symbol	band -> blk_vlc . tab		1701062						
ANR	1702063	Symbol	ivi4_quant_4x4_intra		1701062						
ANR	1702064	Symbol	IVI4_FRAMETYPE_INTRA		1701062						
ANR	1702065	Symbol	band_num		1701062						
ANR	1702066	Symbol	ivi4_quant_4x4_inter		1701062						
ANR	1702067	Symbol	band -> inter_scale		1701062						
ANR	1702068	Symbol	scan_index_to_tab		1701062						
ANR	1702069	Symbol	band -> inv_transform		1701062						
ANR	1702070	Symbol	ff_ivi_dec_huff_desc		1701062						
ANR	1702071	Symbol	band -> checksum_present		1701062						
ANR	1702072	Symbol	FF_ARRAY_ELEMS		1701062						
ANR	1702073	Symbol	band -> inter_base		1701062						
ANR	1702074	Symbol	band -> checksum		1701062						
ANR	1702075	Symbol	* * * band		1701062						
ANR	1702076	Symbol	band -> inherit_mv		1701062						
ANR	1702077	Symbol	band -> quant_mat		1701062						
ANR	1702078	Symbol	ctx -> uses_haar		1701062						
ANR	1702079	Symbol	old_blk_size		1701062						
ANR	1702080	Symbol	band -> is_empty		1701062						
ANR	1702081	Symbol	indx		1701062						
ANR	1702082	Symbol	& ctx -> gb		1701062						
ANR	1702083	Symbol	band -> inherit_qdelta		1701062						
ANR	1702084	Symbol	transforms [ transform_id ] . dc_trans		1701062						
ANR	1702085	Symbol	band -> is_2d_trans		1701062						
ANR	1702086	Symbol	band -> intra_base		1701062						
ANR	1702087	Symbol	* * band -> quant_mat		1701062						
ANR	1702088	Symbol	band -> glob_quant		1701062						
ANR	1702089	Symbol	band -> blk_size		1701062						
ANR	1702090	Symbol	scan_indx		1701062						
ANR	1702091	Symbol	* ivi4_quant_8x8_intra		1701062						
ANR	1702092	Symbol	* ivi4_quant_8x8_inter		1701062						
ANR	1702093	Symbol	band -> intra_scale		1701062						
ANR	1702094	Symbol	AVERROR_PATCHWELCOME		1701062						
ANR	1702095	Symbol	transforms [ transform_id ] . is_2d_trans		1701062						
ANR	1702096	Symbol	avctx		1701062						
ANR	1702097	Symbol	ctx -> blk_vlc . tab		1701062						
ANR	1702098	Symbol	* * quant_index_to_tab		1701062						
ANR	1702099	Symbol	AV_LOG_ERROR		1701062						
ANR	1702100	Symbol	band -> mb_size		1701062						
ANR	1702101	Symbol	* scan_indx		1701062						
ANR	1702102	Symbol	quant_index_to_tab		1701062						
ANR	1702103	Symbol	i		1701062						
ANR	1702104	Symbol	* scan_index_to_tab		1701062						
ANR	1702105	Symbol	* ctx		1701062						
ANR	1702106	Symbol	band -> num_corr		1701062						
ANR	1702107	Symbol	band -> plane		1701062						
ANR	1702108	Symbol	* i		1701062						
ANR	1702109	Symbol	* * band		1701062						
ANR	1702110	Symbol	* ivi4_quant_4x4_inter		1701062						
ANR	1702111	Symbol	ctx -> uses_fullpel		1701062						
ANR	1702112	Symbol	* ivi4_quant_4x4_intra		1701062						
ANR	1702113	Symbol	* band		1701062						
ANR	1702114	Symbol	* transforms		1701062						
ANR	1702115	Symbol	band -> scan		1701062						
ANR	1702116	Symbol	band -> transform_size		1701062						
ANR	1702117	Symbol	* band -> quant_mat		1701062						
ANR	1702118	Symbol	AVERROR_INVALIDDATA		1701062						
ANR	1702119	Symbol	IVI_BLK_HUFF		1701062						
