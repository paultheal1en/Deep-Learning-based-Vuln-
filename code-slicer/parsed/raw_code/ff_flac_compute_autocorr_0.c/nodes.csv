command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3276534	File	/home/p4ultr4n/workplace/ReVeal/raw_code/ff_flac_compute_autocorr_0.c								
ANR	3276535	Function	ff_flac_compute_autocorr	1:0:0:800							
ANR	3276536	FunctionDef	"ff_flac_compute_autocorr (const int32_t * data , int len , int lag , double * autoc)"		3276535	0					
ANR	3276537	CompoundStatement		5:0:116:800	3276535	0					
ANR	3276538	IdentifierDeclStatement	"int i , j ;"	7:4:123:131	3276535	0	True				
ANR	3276539	IdentifierDecl	i		3276535	0					
ANR	3276540	IdentifierDeclType	int		3276535	0					
ANR	3276541	Identifier	i		3276535	1					
ANR	3276542	IdentifierDecl	j		3276535	1					
ANR	3276543	IdentifierDeclType	int		3276535	0					
ANR	3276544	Identifier	j		3276535	1					
ANR	3276545	IdentifierDeclStatement	double tmp [ len + lag + 1 ] ;	9:4:138:163	3276535	1	True				
ANR	3276546	IdentifierDecl	tmp [ len + lag + 1 ]		3276535	0					
ANR	3276547	IdentifierDeclType	double [ len + lag + 1 ]		3276535	0					
ANR	3276548	Identifier	tmp		3276535	1					
ANR	3276549	AdditiveExpression	len + lag + 1		3276535	2		+			
ANR	3276550	Identifier	len		3276535	0					
ANR	3276551	AdditiveExpression	lag + 1		3276535	1		+			
ANR	3276552	Identifier	lag		3276535	0					
ANR	3276553	PrimaryExpression	1		3276535	1					
ANR	3276554	IdentifierDeclStatement	double * data1 = tmp + lag ;	11:4:170:194	3276535	2	True				
ANR	3276555	IdentifierDecl	* data1 = tmp + lag		3276535	0					
ANR	3276556	IdentifierDeclType	double *		3276535	0					
ANR	3276557	Identifier	data1		3276535	1					
ANR	3276558	AssignmentExpression	* data1 = tmp + lag		3276535	2		=			
ANR	3276559	Identifier	data1		3276535	0					
ANR	3276560	AdditiveExpression	tmp + lag		3276535	1		+			
ANR	3276561	Identifier	tmp		3276535	0					
ANR	3276562	Identifier	lag		3276535	1					
ANR	3276563	ExpressionStatement	"apply_welch_window ( data , len , data1 )"	15:4:203:239	3276535	3	True				
ANR	3276564	CallExpression	"apply_welch_window ( data , len , data1 )"		3276535	0					
ANR	3276565	Callee	apply_welch_window		3276535	0					
ANR	3276566	Identifier	apply_welch_window		3276535	0					
ANR	3276567	ArgumentList	data		3276535	1					
ANR	3276568	Argument	data		3276535	0					
ANR	3276569	Identifier	data		3276535	0					
ANR	3276570	Argument	len		3276535	1					
ANR	3276571	Identifier	len		3276535	0					
ANR	3276572	Argument	data1		3276535	2					
ANR	3276573	Identifier	data1		3276535	0					
ANR	3276574	ForStatement	for ( j = 0 ; j < lag ; j ++ )		3276535	4					
ANR	3276575	ForInit	j = 0 ;	19:8:252:255	3276535	0	True				
ANR	3276576	AssignmentExpression	j = 0		3276535	0		=			
ANR	3276577	Identifier	j		3276535	0					
ANR	3276578	PrimaryExpression	0		3276535	1					
ANR	3276579	Condition	j < lag	19:13:257:261	3276535	1	True				
ANR	3276580	RelationalExpression	j < lag		3276535	0		<			
ANR	3276581	Identifier	j		3276535	0					
ANR	3276582	Identifier	lag		3276535	1					
ANR	3276583	PostIncDecOperationExpression	j ++	19:20:264:266	3276535	2	True				
ANR	3276584	Identifier	j		3276535	0					
ANR	3276585	IncDec	++		3276535	1					
ANR	3276586	ExpressionStatement	data1 [ j - lag ] = 0.0	21:8:278:295	3276535	3	True				
ANR	3276587	AssignmentExpression	data1 [ j - lag ] = 0.0		3276535	0		=			
ANR	3276588	ArrayIndexing	data1 [ j - lag ]		3276535	0					
ANR	3276589	Identifier	data1		3276535	0					
ANR	3276590	AdditiveExpression	j - lag		3276535	1		-			
ANR	3276591	Identifier	j		3276535	0					
ANR	3276592	Identifier	lag		3276535	1					
ANR	3276593	PrimaryExpression	0.0		3276535	1					
ANR	3276594	ExpressionStatement	data1 [ len ] = 0.0	23:4:302:318	3276535	5	True				
ANR	3276595	AssignmentExpression	data1 [ len ] = 0.0		3276535	0		=			
ANR	3276596	ArrayIndexing	data1 [ len ]		3276535	0					
ANR	3276597	Identifier	data1		3276535	0					
ANR	3276598	Identifier	len		3276535	1					
ANR	3276599	PrimaryExpression	0.0		3276535	1					
ANR	3276600	ForStatement	for ( j = 0 ; j < lag ; j += 2 )		3276535	6					
ANR	3276601	ForInit	j = 0 ;	27:8:331:334	3276535	0	True				
ANR	3276602	AssignmentExpression	j = 0		3276535	0		=			
ANR	3276603	Identifier	j		3276535	0					
ANR	3276604	PrimaryExpression	0		3276535	1					
ANR	3276605	Condition	j < lag	27:13:336:340	3276535	1	True				
ANR	3276606	RelationalExpression	j < lag		3276535	0		<			
ANR	3276607	Identifier	j		3276535	0					
ANR	3276608	Identifier	lag		3276535	1					
ANR	3276609	AssignmentExpression	j += 2	27:20:343:346	3276535	2	True	+=			
ANR	3276610	Identifier	j		3276535	0					
ANR	3276611	PrimaryExpression	2		3276535	1					
ANR	3276612	CompoundStatement		25:8:242:271	3276535	3					
ANR	3276613	IdentifierDeclStatement	"double sum0 = 1.0 , sum1 = 1.0 ;"	29:8:359:388	3276535	0	True				
ANR	3276614	IdentifierDecl	sum0 = 1.0		3276535	0					
ANR	3276615	IdentifierDeclType	double		3276535	0					
ANR	3276616	Identifier	sum0		3276535	1					
ANR	3276617	AssignmentExpression	sum0 = 1.0		3276535	2		=			
ANR	3276618	Identifier	sum0		3276535	0					
ANR	3276619	PrimaryExpression	1.0		3276535	1					
ANR	3276620	IdentifierDecl	sum1 = 1.0		3276535	1					
ANR	3276621	IdentifierDeclType	double		3276535	0					
ANR	3276622	Identifier	sum1		3276535	1					
ANR	3276623	AssignmentExpression	sum1 = 1.0		3276535	2		=			
ANR	3276624	Identifier	sum1		3276535	0					
ANR	3276625	PrimaryExpression	1.0		3276535	1					
ANR	3276626	ForStatement	for ( i = 0 ; i < len ; i ++ )		3276535	1					
ANR	3276627	ForInit	i = 0 ;	31:12:403:406	3276535	0	True				
ANR	3276628	AssignmentExpression	i = 0		3276535	0		=			
ANR	3276629	Identifier	i		3276535	0					
ANR	3276630	PrimaryExpression	0		3276535	1					
ANR	3276631	Condition	i < len	31:17:408:412	3276535	1	True				
ANR	3276632	RelationalExpression	i < len		3276535	0		<			
ANR	3276633	Identifier	i		3276535	0					
ANR	3276634	Identifier	len		3276535	1					
ANR	3276635	PostIncDecOperationExpression	i ++	31:24:415:417	3276535	2	True				
ANR	3276636	Identifier	i		3276535	0					
ANR	3276637	IncDec	++		3276535	1					
ANR	3276638	CompoundStatement		27:28:302:302	3276535	3					
ANR	3276639	ExpressionStatement	sum0 += data1 [ i ] * data1 [ i - j ]	33:12:434:463	3276535	0	True				
ANR	3276640	AssignmentExpression	sum0 += data1 [ i ] * data1 [ i - j ]		3276535	0		+=			
ANR	3276641	Identifier	sum0		3276535	0					
ANR	3276642	MultiplicativeExpression	data1 [ i ] * data1 [ i - j ]		3276535	1		*			
ANR	3276643	ArrayIndexing	data1 [ i ]		3276535	0					
ANR	3276644	Identifier	data1		3276535	0					
ANR	3276645	Identifier	i		3276535	1					
ANR	3276646	ArrayIndexing	data1 [ i - j ]		3276535	1					
ANR	3276647	Identifier	data1		3276535	0					
ANR	3276648	AdditiveExpression	i - j		3276535	1		-			
ANR	3276649	Identifier	i		3276535	0					
ANR	3276650	Identifier	j		3276535	1					
ANR	3276651	ExpressionStatement	sum1 += data1 [ i ] * data1 [ i - j - 1 ]	35:12:478:509	3276535	1	True				
ANR	3276652	AssignmentExpression	sum1 += data1 [ i ] * data1 [ i - j - 1 ]		3276535	0		+=			
ANR	3276653	Identifier	sum1		3276535	0					
ANR	3276654	MultiplicativeExpression	data1 [ i ] * data1 [ i - j - 1 ]		3276535	1		*			
ANR	3276655	ArrayIndexing	data1 [ i ]		3276535	0					
ANR	3276656	Identifier	data1		3276535	0					
ANR	3276657	Identifier	i		3276535	1					
ANR	3276658	ArrayIndexing	data1 [ i - j - 1 ]		3276535	1					
ANR	3276659	Identifier	data1		3276535	0					
ANR	3276660	AdditiveExpression	i - j - 1		3276535	1		-			
ANR	3276661	Identifier	i		3276535	0					
ANR	3276662	AdditiveExpression	j - 1		3276535	1		-			
ANR	3276663	Identifier	j		3276535	0					
ANR	3276664	PrimaryExpression	1		3276535	1					
ANR	3276665	ExpressionStatement	autoc [ j ] = sum0	39:8:531:548	3276535	2	True				
ANR	3276666	AssignmentExpression	autoc [ j ] = sum0		3276535	0		=			
ANR	3276667	ArrayIndexing	autoc [ j ]		3276535	0					
ANR	3276668	Identifier	autoc		3276535	0					
ANR	3276669	Identifier	j		3276535	1					
ANR	3276670	Identifier	sum0		3276535	1					
ANR	3276671	ExpressionStatement	autoc [ j + 1 ] = sum1	41:8:559:576	3276535	3	True				
ANR	3276672	AssignmentExpression	autoc [ j + 1 ] = sum1		3276535	0		=			
ANR	3276673	ArrayIndexing	autoc [ j + 1 ]		3276535	0					
ANR	3276674	Identifier	autoc		3276535	0					
ANR	3276675	AdditiveExpression	j + 1		3276535	1		+			
ANR	3276676	Identifier	j		3276535	0					
ANR	3276677	PrimaryExpression	1		3276535	1					
ANR	3276678	Identifier	sum1		3276535	1					
ANR	3276679	IfStatement	if ( j == lag )		3276535	7					
ANR	3276680	Condition	j == lag	47:7:595:600	3276535	0	True				
ANR	3276681	EqualityExpression	j == lag		3276535	0		==			
ANR	3276682	Identifier	j		3276535	0					
ANR	3276683	Identifier	lag		3276535	1					
ANR	3276684	CompoundStatement		45:8:496:512	3276535	1					
ANR	3276685	IdentifierDeclStatement	double sum = 1.0 ;	49:8:613:629	3276535	0	True				
ANR	3276686	IdentifierDecl	sum = 1.0		3276535	0					
ANR	3276687	IdentifierDeclType	double		3276535	0					
ANR	3276688	Identifier	sum		3276535	1					
ANR	3276689	AssignmentExpression	sum = 1.0		3276535	2		=			
ANR	3276690	Identifier	sum		3276535	0					
ANR	3276691	PrimaryExpression	1.0		3276535	1					
ANR	3276692	ForStatement	for ( i = 0 ; i < len ; i += 2 )		3276535	1					
ANR	3276693	ForInit	i = 0 ;	51:12:644:647	3276535	0	True				
ANR	3276694	AssignmentExpression	i = 0		3276535	0		=			
ANR	3276695	Identifier	i		3276535	0					
ANR	3276696	PrimaryExpression	0		3276535	1					
ANR	3276697	Condition	i < len	51:17:649:653	3276535	1	True				
ANR	3276698	RelationalExpression	i < len		3276535	0		<			
ANR	3276699	Identifier	i		3276535	0					
ANR	3276700	Identifier	len		3276535	1					
ANR	3276701	AssignmentExpression	i += 2	51:24:656:659	3276535	2	True	+=			
ANR	3276702	Identifier	i		3276535	0					
ANR	3276703	PrimaryExpression	2		3276535	1					
ANR	3276704	CompoundStatement		47:29:544:544	3276535	3					
ANR	3276705	ExpressionStatement	sum += data1 [ i ] * data1 [ i - j ] + data1 [ i + 1 ] * data1 [ i - j + 1 ]	53:12:676:754	3276535	0	True				
ANR	3276706	AssignmentExpression	sum += data1 [ i ] * data1 [ i - j ] + data1 [ i + 1 ] * data1 [ i - j + 1 ]		3276535	0		+=			
ANR	3276707	Identifier	sum		3276535	0					
ANR	3276708	AdditiveExpression	data1 [ i ] * data1 [ i - j ] + data1 [ i + 1 ] * data1 [ i - j + 1 ]		3276535	1		+			
ANR	3276709	MultiplicativeExpression	data1 [ i ] * data1 [ i - j ]		3276535	0		*			
ANR	3276710	ArrayIndexing	data1 [ i ]		3276535	0					
ANR	3276711	Identifier	data1		3276535	0					
ANR	3276712	Identifier	i		3276535	1					
ANR	3276713	ArrayIndexing	data1 [ i - j ]		3276535	1					
ANR	3276714	Identifier	data1		3276535	0					
ANR	3276715	AdditiveExpression	i - j		3276535	1		-			
ANR	3276716	Identifier	i		3276535	0					
ANR	3276717	Identifier	j		3276535	1					
ANR	3276718	MultiplicativeExpression	data1 [ i + 1 ] * data1 [ i - j + 1 ]		3276535	1		*			
ANR	3276719	ArrayIndexing	data1 [ i + 1 ]		3276535	0					
ANR	3276720	Identifier	data1		3276535	0					
ANR	3276721	AdditiveExpression	i + 1		3276535	1		+			
ANR	3276722	Identifier	i		3276535	0					
ANR	3276723	PrimaryExpression	1		3276535	1					
ANR	3276724	ArrayIndexing	data1 [ i - j + 1 ]		3276535	1					
ANR	3276725	Identifier	data1		3276535	0					
ANR	3276726	AdditiveExpression	i - j + 1		3276535	1		-			
ANR	3276727	Identifier	i		3276535	0					
ANR	3276728	AdditiveExpression	j + 1		3276535	1		+			
ANR	3276729	Identifier	j		3276535	0					
ANR	3276730	PrimaryExpression	1		3276535	1					
ANR	3276731	ExpressionStatement	autoc [ j ] = sum	59:8:776:790	3276535	2	True				
ANR	3276732	AssignmentExpression	autoc [ j ] = sum		3276535	0		=			
ANR	3276733	ArrayIndexing	autoc [ j ]		3276535	0					
ANR	3276734	Identifier	autoc		3276535	0					
ANR	3276735	Identifier	j		3276535	1					
ANR	3276736	Identifier	sum		3276535	1					
ANR	3276737	ReturnType	void		3276535	1					
ANR	3276738	Identifier	ff_flac_compute_autocorr		3276535	2					
ANR	3276739	ParameterList	"const int32_t * data , int len , int lag , double * autoc"		3276535	3					
ANR	3276740	Parameter	const int32_t * data	1:30:30:48	3276535	0	True				
ANR	3276741	ParameterType	const int32_t *		3276535	0					
ANR	3276742	Identifier	data		3276535	1					
ANR	3276743	Parameter	int len	1:51:51:57	3276535	1	True				
ANR	3276744	ParameterType	int		3276535	0					
ANR	3276745	Identifier	len		3276535	1					
ANR	3276746	Parameter	int lag	1:60:60:66	3276535	2	True				
ANR	3276747	ParameterType	int		3276535	0					
ANR	3276748	Identifier	lag		3276535	1					
ANR	3276749	Parameter	double * autoc	3:30:100:112	3276535	3	True				
ANR	3276750	ParameterType	double *		3276535	0					
ANR	3276751	Identifier	autoc		3276535	1					
ANR	3276752	CFGEntryNode	ENTRY		3276535		True				
ANR	3276753	CFGExitNode	EXIT		3276535		True				
ANR	3276754	Symbol	data		3276535						
ANR	3276755	Symbol	data1		3276535						
ANR	3276756	Symbol	i		3276535						
ANR	3276757	Symbol	j		3276535						
ANR	3276758	Symbol	sum		3276535						
ANR	3276759	Symbol	sum1		3276535						
ANR	3276760	Symbol	* autoc		3276535						
ANR	3276761	Symbol	lag		3276535						
ANR	3276762	Symbol	sum0		3276535						
ANR	3276763	Symbol	* i		3276535						
ANR	3276764	Symbol	len		3276535						
ANR	3276765	Symbol	* j		3276535						
ANR	3276766	Symbol	tmp		3276535						
ANR	3276767	Symbol	autoc		3276535						
ANR	3276768	Symbol	* lag		3276535						
ANR	3276769	Symbol	* data1		3276535						
ANR	3276770	Symbol	* len		3276535						
