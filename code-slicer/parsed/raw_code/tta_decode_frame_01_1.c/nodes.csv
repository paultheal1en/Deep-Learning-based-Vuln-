command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8575748	File	/home/p4ultr4n/workplace/ReVeal/raw_code/tta_decode_frame_01_1.c								
ANR	8575749	Function	tta_decode_frame	1:0:0:4228							
ANR	8575750	FunctionDef	"tta_decode_frame (AVCodecContext * avctx , void * data , int * got_frame_ptr , AVPacket * avpkt)"		8575749	0					
ANR	8575751	CompoundStatement		5:0:130:4228	8575749	0					
ANR	8575752	IdentifierDeclStatement	const uint8_t * buf = avpkt -> data ;	7:4:137:169	8575749	0	True				
ANR	8575753	IdentifierDecl	* buf = avpkt -> data		8575749	0					
ANR	8575754	IdentifierDeclType	const uint8_t *		8575749	0					
ANR	8575755	Identifier	buf		8575749	1					
ANR	8575756	AssignmentExpression	* buf = avpkt -> data		8575749	2		=			
ANR	8575757	Identifier	buf		8575749	0					
ANR	8575758	PtrMemberAccess	avpkt -> data		8575749	1					
ANR	8575759	Identifier	avpkt		8575749	0					
ANR	8575760	Identifier	data		8575749	1					
ANR	8575761	IdentifierDeclStatement	int buf_size = avpkt -> size ;	9:4:176:202	8575749	1	True				
ANR	8575762	IdentifierDecl	buf_size = avpkt -> size		8575749	0					
ANR	8575763	IdentifierDeclType	int		8575749	0					
ANR	8575764	Identifier	buf_size		8575749	1					
ANR	8575765	AssignmentExpression	buf_size = avpkt -> size		8575749	2		=			
ANR	8575766	Identifier	buf_size		8575749	0					
ANR	8575767	PtrMemberAccess	avpkt -> size		8575749	1					
ANR	8575768	Identifier	avpkt		8575749	0					
ANR	8575769	Identifier	size		8575749	1					
ANR	8575770	IdentifierDeclStatement	TTAContext * s = avctx -> priv_data ;	11:4:209:241	8575749	2	True				
ANR	8575771	IdentifierDecl	* s = avctx -> priv_data		8575749	0					
ANR	8575772	IdentifierDeclType	TTAContext *		8575749	0					
ANR	8575773	Identifier	s		8575749	1					
ANR	8575774	AssignmentExpression	* s = avctx -> priv_data		8575749	2		=			
ANR	8575775	Identifier	s		8575749	0					
ANR	8575776	PtrMemberAccess	avctx -> priv_data		8575749	1					
ANR	8575777	Identifier	avctx		8575749	0					
ANR	8575778	Identifier	priv_data		8575749	1					
ANR	8575779	IdentifierDeclStatement	"int i , ret ;"	13:4:248:258	8575749	3	True				
ANR	8575780	IdentifierDecl	i		8575749	0					
ANR	8575781	IdentifierDeclType	int		8575749	0					
ANR	8575782	Identifier	i		8575749	1					
ANR	8575783	IdentifierDecl	ret		8575749	1					
ANR	8575784	IdentifierDeclType	int		8575749	0					
ANR	8575785	Identifier	ret		8575749	1					
ANR	8575786	IdentifierDeclStatement	"int cur_chan = 0 , framelen = s -> frame_length ;"	15:4:265:309	8575749	4	True				
ANR	8575787	IdentifierDecl	cur_chan = 0		8575749	0					
ANR	8575788	IdentifierDeclType	int		8575749	0					
ANR	8575789	Identifier	cur_chan		8575749	1					
ANR	8575790	AssignmentExpression	cur_chan = 0		8575749	2		=			
ANR	8575791	Identifier	cur_chan		8575749	0					
ANR	8575792	PrimaryExpression	0		8575749	1					
ANR	8575793	IdentifierDecl	framelen = s -> frame_length		8575749	1					
ANR	8575794	IdentifierDeclType	int		8575749	0					
ANR	8575795	Identifier	framelen		8575749	1					
ANR	8575796	AssignmentExpression	framelen = s -> frame_length		8575749	2		=			
ANR	8575797	Identifier	framelen		8575749	0					
ANR	8575798	PtrMemberAccess	s -> frame_length		8575749	1					
ANR	8575799	Identifier	s		8575749	0					
ANR	8575800	Identifier	frame_length		8575749	1					
ANR	8575801	IdentifierDeclStatement	int32_t * p ;	17:4:316:326	8575749	5	True				
ANR	8575802	IdentifierDecl	* p		8575749	0					
ANR	8575803	IdentifierDeclType	int32_t *		8575749	0					
ANR	8575804	Identifier	p		8575749	1					
ANR	8575805	ExpressionStatement	"init_get_bits ( & s -> gb , buf , buf_size * 8 )"	21:4:335:373	8575749	6	True				
ANR	8575806	CallExpression	"init_get_bits ( & s -> gb , buf , buf_size * 8 )"		8575749	0					
ANR	8575807	Callee	init_get_bits		8575749	0					
ANR	8575808	Identifier	init_get_bits		8575749	0					
ANR	8575809	ArgumentList	& s -> gb		8575749	1					
ANR	8575810	Argument	& s -> gb		8575749	0					
ANR	8575811	UnaryOperationExpression	& s -> gb		8575749	0					
ANR	8575812	UnaryOperator	&		8575749	0					
ANR	8575813	PtrMemberAccess	s -> gb		8575749	1					
ANR	8575814	Identifier	s		8575749	0					
ANR	8575815	Identifier	gb		8575749	1					
ANR	8575816	Argument	buf		8575749	1					
ANR	8575817	Identifier	buf		8575749	0					
ANR	8575818	Argument	buf_size * 8		8575749	2					
ANR	8575819	MultiplicativeExpression	buf_size * 8		8575749	0		*			
ANR	8575820	Identifier	buf_size		8575749	0					
ANR	8575821	PrimaryExpression	8		8575749	1					
ANR	8575822	ExpressionStatement	s -> total_frames --	27:4:405:422	8575749	7	True				
ANR	8575823	PostIncDecOperationExpression	s -> total_frames --		8575749	0					
ANR	8575824	PtrMemberAccess	s -> total_frames		8575749	0					
ANR	8575825	Identifier	s		8575749	0					
ANR	8575826	Identifier	total_frames		8575749	1					
ANR	8575827	IncDec	--		8575749	1					
ANR	8575828	IfStatement	if ( ! s -> total_frames && s -> last_frame_length )		8575749	8					
ANR	8575829	Condition	! s -> total_frames && s -> last_frame_length	29:8:433:472	8575749	0	True				
ANR	8575830	AndExpression	! s -> total_frames && s -> last_frame_length		8575749	0		&&			
ANR	8575831	UnaryOperationExpression	! s -> total_frames		8575749	0					
ANR	8575832	UnaryOperator	!		8575749	0					
ANR	8575833	PtrMemberAccess	s -> total_frames		8575749	1					
ANR	8575834	Identifier	s		8575749	0					
ANR	8575835	Identifier	total_frames		8575749	1					
ANR	8575836	PtrMemberAccess	s -> last_frame_length		8575749	1					
ANR	8575837	Identifier	s		8575749	0					
ANR	8575838	Identifier	last_frame_length		8575749	1					
ANR	8575839	ExpressionStatement	framelen = s -> last_frame_length	31:8:484:515	8575749	1	True				
ANR	8575840	AssignmentExpression	framelen = s -> last_frame_length		8575749	0		=			
ANR	8575841	Identifier	framelen		8575749	0					
ANR	8575842	PtrMemberAccess	s -> last_frame_length		8575749	1					
ANR	8575843	Identifier	s		8575749	0					
ANR	8575844	Identifier	last_frame_length		8575749	1					
ANR	8575845	ExpressionStatement	s -> frame . nb_samples = framelen	37:4:553:583	8575749	9	True				
ANR	8575846	AssignmentExpression	s -> frame . nb_samples = framelen		8575749	0		=			
ANR	8575847	MemberAccess	s -> frame . nb_samples		8575749	0					
ANR	8575848	PtrMemberAccess	s -> frame		8575749	0					
ANR	8575849	Identifier	s		8575749	0					
ANR	8575850	Identifier	frame		8575749	1					
ANR	8575851	Identifier	nb_samples		8575749	1					
ANR	8575852	Identifier	framelen		8575749	1					
ANR	8575853	IfStatement	"if ( ( ret = avctx -> get_buffer ( avctx , & s -> frame ) ) < 0 )"		8575749	10					
ANR	8575854	Condition	"( ret = avctx -> get_buffer ( avctx , & s -> frame ) ) < 0"	39:8:594:640	8575749	0	True				
ANR	8575855	RelationalExpression	"( ret = avctx -> get_buffer ( avctx , & s -> frame ) ) < 0"		8575749	0		<			
ANR	8575856	AssignmentExpression	"ret = avctx -> get_buffer ( avctx , & s -> frame )"		8575749	0		=			
ANR	8575857	Identifier	ret		8575749	0					
ANR	8575858	CallExpression	"avctx -> get_buffer ( avctx , & s -> frame )"		8575749	1					
ANR	8575859	Callee	avctx -> get_buffer		8575749	0					
ANR	8575860	PtrMemberAccess	avctx -> get_buffer		8575749	0					
ANR	8575861	Identifier	avctx		8575749	0					
ANR	8575862	Identifier	get_buffer		8575749	1					
ANR	8575863	ArgumentList	avctx		8575749	1					
ANR	8575864	Argument	avctx		8575749	0					
ANR	8575865	Identifier	avctx		8575749	0					
ANR	8575866	Argument	& s -> frame		8575749	1					
ANR	8575867	UnaryOperationExpression	& s -> frame		8575749	0					
ANR	8575868	UnaryOperator	&		8575749	0					
ANR	8575869	PtrMemberAccess	s -> frame		8575749	1					
ANR	8575870	Identifier	s		8575749	0					
ANR	8575871	Identifier	frame		8575749	1					
ANR	8575872	PrimaryExpression	0		8575749	1					
ANR	8575873	CompoundStatement		35:57:512:512	8575749	1					
ANR	8575874	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""get_buffer() failed\\n"" )"	41:8:654:706	8575749	0	True				
ANR	8575875	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""get_buffer() failed\\n"" )"		8575749	0					
ANR	8575876	Callee	av_log		8575749	0					
ANR	8575877	Identifier	av_log		8575749	0					
ANR	8575878	ArgumentList	avctx		8575749	1					
ANR	8575879	Argument	avctx		8575749	0					
ANR	8575880	Identifier	avctx		8575749	0					
ANR	8575881	Argument	AV_LOG_ERROR		8575749	1					
ANR	8575882	Identifier	AV_LOG_ERROR		8575749	0					
ANR	8575883	Argument	"""get_buffer() failed\\n"""		8575749	2					
ANR	8575884	PrimaryExpression	"""get_buffer() failed\\n"""		8575749	0					
ANR	8575885	ReturnStatement	return ret ;	43:8:717:727	8575749	1	True				
ANR	8575886	Identifier	ret		8575749	0					
ANR	8575887	IfStatement	if ( s -> bps == 3 )		8575749	11					
ANR	8575888	Condition	s -> bps == 3	51:8:813:823	8575749	0	True				
ANR	8575889	EqualityExpression	s -> bps == 3		8575749	0		==			
ANR	8575890	PtrMemberAccess	s -> bps		8575749	0					
ANR	8575891	Identifier	s		8575749	0					
ANR	8575892	Identifier	bps		8575749	1					
ANR	8575893	PrimaryExpression	3		8575749	1					
ANR	8575894	ExpressionStatement	s -> decode_buffer = ( int32_t * ) s -> frame . data [ 0 ]	53:8:835:881	8575749	1	True				
ANR	8575895	AssignmentExpression	s -> decode_buffer = ( int32_t * ) s -> frame . data [ 0 ]		8575749	0		=			
ANR	8575896	PtrMemberAccess	s -> decode_buffer		8575749	0					
ANR	8575897	Identifier	s		8575749	0					
ANR	8575898	Identifier	decode_buffer		8575749	1					
ANR	8575899	CastExpression	( int32_t * ) s -> frame . data [ 0 ]		8575749	1					
ANR	8575900	CastTarget	int32_t *		8575749	0					
ANR	8575901	ArrayIndexing	s -> frame . data [ 0 ]		8575749	1					
ANR	8575902	MemberAccess	s -> frame . data		8575749	0					
ANR	8575903	PtrMemberAccess	s -> frame		8575749	0					
ANR	8575904	Identifier	s		8575749	0					
ANR	8575905	Identifier	frame		8575749	1					
ANR	8575906	Identifier	data		8575749	1					
ANR	8575907	PrimaryExpression	0		8575749	1					
ANR	8575908	ForStatement	for ( i = 0 ; i < s -> channels ; i ++ )		8575749	12					
ANR	8575909	ForInit	i = 0 ;	59:9:927:932	8575749	0	True				
ANR	8575910	AssignmentExpression	i = 0		8575749	0		=			
ANR	8575911	Identifier	i		8575749	0					
ANR	8575912	PrimaryExpression	0		8575749	1					
ANR	8575913	Condition	i < s -> channels	59:16:934:948	8575749	1	True				
ANR	8575914	RelationalExpression	i < s -> channels		8575749	0		<			
ANR	8575915	Identifier	i		8575749	0					
ANR	8575916	PtrMemberAccess	s -> channels		8575749	1					
ANR	8575917	Identifier	s		8575749	0					
ANR	8575918	Identifier	channels		8575749	1					
ANR	8575919	PostIncDecOperationExpression	i ++	59:33:951:953	8575749	2	True				
ANR	8575920	Identifier	i		8575749	0					
ANR	8575921	IncDec	++		8575749	1					
ANR	8575922	CompoundStatement		55:38:825:825	8575749	3					
ANR	8575923	ExpressionStatement	s -> ch_ctx [ i ] . predictor = 0	61:8:967:993	8575749	0	True				
ANR	8575924	AssignmentExpression	s -> ch_ctx [ i ] . predictor = 0		8575749	0		=			
ANR	8575925	MemberAccess	s -> ch_ctx [ i ] . predictor		8575749	0					
ANR	8575926	ArrayIndexing	s -> ch_ctx [ i ]		8575749	0					
ANR	8575927	PtrMemberAccess	s -> ch_ctx		8575749	0					
ANR	8575928	Identifier	s		8575749	0					
ANR	8575929	Identifier	ch_ctx		8575749	1					
ANR	8575930	Identifier	i		8575749	1					
ANR	8575931	Identifier	predictor		8575749	1					
ANR	8575932	PrimaryExpression	0		8575749	1					
ANR	8575933	ExpressionStatement	"ttafilter_init ( & s -> ch_ctx [ i ] . filter , ttafilter_configs [ s -> bps - 1 ] [ 0 ] , ttafilter_configs [ s -> bps - 1 ] [ 1 ] )"	63:8:1004:1104	8575749	1	True				
ANR	8575934	CallExpression	"ttafilter_init ( & s -> ch_ctx [ i ] . filter , ttafilter_configs [ s -> bps - 1 ] [ 0 ] , ttafilter_configs [ s -> bps - 1 ] [ 1 ] )"		8575749	0					
ANR	8575935	Callee	ttafilter_init		8575749	0					
ANR	8575936	Identifier	ttafilter_init		8575749	0					
ANR	8575937	ArgumentList	& s -> ch_ctx [ i ] . filter		8575749	1					
ANR	8575938	Argument	& s -> ch_ctx [ i ] . filter		8575749	0					
ANR	8575939	UnaryOperationExpression	& s -> ch_ctx [ i ] . filter		8575749	0					
ANR	8575940	UnaryOperator	&		8575749	0					
ANR	8575941	MemberAccess	s -> ch_ctx [ i ] . filter		8575749	1					
ANR	8575942	ArrayIndexing	s -> ch_ctx [ i ]		8575749	0					
ANR	8575943	PtrMemberAccess	s -> ch_ctx		8575749	0					
ANR	8575944	Identifier	s		8575749	0					
ANR	8575945	Identifier	ch_ctx		8575749	1					
ANR	8575946	Identifier	i		8575749	1					
ANR	8575947	Identifier	filter		8575749	1					
ANR	8575948	Argument	ttafilter_configs [ s -> bps - 1 ] [ 0 ]		8575749	1					
ANR	8575949	ArrayIndexing	ttafilter_configs [ s -> bps - 1 ] [ 0 ]		8575749	0					
ANR	8575950	ArrayIndexing	ttafilter_configs [ s -> bps - 1 ]		8575749	0					
ANR	8575951	Identifier	ttafilter_configs		8575749	0					
ANR	8575952	AdditiveExpression	s -> bps - 1		8575749	1		-			
ANR	8575953	PtrMemberAccess	s -> bps		8575749	0					
ANR	8575954	Identifier	s		8575749	0					
ANR	8575955	Identifier	bps		8575749	1					
ANR	8575956	PrimaryExpression	1		8575749	1					
ANR	8575957	PrimaryExpression	0		8575749	1					
ANR	8575958	Argument	ttafilter_configs [ s -> bps - 1 ] [ 1 ]		8575749	2					
ANR	8575959	ArrayIndexing	ttafilter_configs [ s -> bps - 1 ] [ 1 ]		8575749	0					
ANR	8575960	ArrayIndexing	ttafilter_configs [ s -> bps - 1 ]		8575749	0					
ANR	8575961	Identifier	ttafilter_configs		8575749	0					
ANR	8575962	AdditiveExpression	s -> bps - 1		8575749	1		-			
ANR	8575963	PtrMemberAccess	s -> bps		8575749	0					
ANR	8575964	Identifier	s		8575749	0					
ANR	8575965	Identifier	bps		8575749	1					
ANR	8575966	PrimaryExpression	1		8575749	1					
ANR	8575967	PrimaryExpression	1		8575749	1					
ANR	8575968	ExpressionStatement	"rice_init ( & s -> ch_ctx [ i ] . rice , 10 , 10 )"	65:8:1115:1152	8575749	2	True				
ANR	8575969	CallExpression	"rice_init ( & s -> ch_ctx [ i ] . rice , 10 , 10 )"		8575749	0					
ANR	8575970	Callee	rice_init		8575749	0					
ANR	8575971	Identifier	rice_init		8575749	0					
ANR	8575972	ArgumentList	& s -> ch_ctx [ i ] . rice		8575749	1					
ANR	8575973	Argument	& s -> ch_ctx [ i ] . rice		8575749	0					
ANR	8575974	UnaryOperationExpression	& s -> ch_ctx [ i ] . rice		8575749	0					
ANR	8575975	UnaryOperator	&		8575749	0					
ANR	8575976	MemberAccess	s -> ch_ctx [ i ] . rice		8575749	1					
ANR	8575977	ArrayIndexing	s -> ch_ctx [ i ]		8575749	0					
ANR	8575978	PtrMemberAccess	s -> ch_ctx		8575749	0					
ANR	8575979	Identifier	s		8575749	0					
ANR	8575980	Identifier	ch_ctx		8575749	1					
ANR	8575981	Identifier	i		8575749	1					
ANR	8575982	Identifier	rice		8575749	1					
ANR	8575983	Argument	10		8575749	1					
ANR	8575984	PrimaryExpression	10		8575749	0					
ANR	8575985	Argument	10		8575749	2					
ANR	8575986	PrimaryExpression	10		8575749	0					
ANR	8575987	ForStatement	for ( p = s -> decode_buffer ; p < s -> decode_buffer + ( framelen * s -> channels ) ; p ++ )		8575749	13					
ANR	8575988	ForInit	p = s -> decode_buffer ;	71:9:1173:1193	8575749	0	True				
ANR	8575989	AssignmentExpression	p = s -> decode_buffer		8575749	0		=			
ANR	8575990	Identifier	p		8575749	0					
ANR	8575991	PtrMemberAccess	s -> decode_buffer		8575749	1					
ANR	8575992	Identifier	s		8575749	0					
ANR	8575993	Identifier	decode_buffer		8575749	1					
ANR	8575994	Condition	p < s -> decode_buffer + ( framelen * s -> channels )	71:31:1195:1241	8575749	1	True				
ANR	8575995	RelationalExpression	p < s -> decode_buffer + ( framelen * s -> channels )		8575749	0		<			
ANR	8575996	Identifier	p		8575749	0					
ANR	8575997	AdditiveExpression	s -> decode_buffer + ( framelen * s -> channels )		8575749	1		+			
ANR	8575998	PtrMemberAccess	s -> decode_buffer		8575749	0					
ANR	8575999	Identifier	s		8575749	0					
ANR	8576000	Identifier	decode_buffer		8575749	1					
ANR	8576001	MultiplicativeExpression	framelen * s -> channels		8575749	1		*			
ANR	8576002	Identifier	framelen		8575749	0					
ANR	8576003	PtrMemberAccess	s -> channels		8575749	1					
ANR	8576004	Identifier	s		8575749	0					
ANR	8576005	Identifier	channels		8575749	1					
ANR	8576006	PostIncDecOperationExpression	p ++	71:80:1244:1246	8575749	2	True				
ANR	8576007	Identifier	p		8575749	0					
ANR	8576008	IncDec	++		8575749	1					
ANR	8576009	CompoundStatement		77:8:1336:1349	8575749	3					
ANR	8576010	IdentifierDeclStatement	int32_t * predictor = & s -> ch_ctx [ cur_chan ] . predictor ;	73:8:1260:1311	8575749	0	True				
ANR	8576011	IdentifierDecl	* predictor = & s -> ch_ctx [ cur_chan ] . predictor		8575749	0					
ANR	8576012	IdentifierDeclType	int32_t *		8575749	0					
ANR	8576013	Identifier	predictor		8575749	1					
ANR	8576014	AssignmentExpression	* predictor = & s -> ch_ctx [ cur_chan ] . predictor		8575749	2		=			
ANR	8576015	Identifier	predictor		8575749	0					
ANR	8576016	UnaryOperationExpression	& s -> ch_ctx [ cur_chan ] . predictor		8575749	1					
ANR	8576017	UnaryOperator	&		8575749	0					
ANR	8576018	MemberAccess	s -> ch_ctx [ cur_chan ] . predictor		8575749	1					
ANR	8576019	ArrayIndexing	s -> ch_ctx [ cur_chan ]		8575749	0					
ANR	8576020	PtrMemberAccess	s -> ch_ctx		8575749	0					
ANR	8576021	Identifier	s		8575749	0					
ANR	8576022	Identifier	ch_ctx		8575749	1					
ANR	8576023	Identifier	cur_chan		8575749	1					
ANR	8576024	Identifier	predictor		8575749	1					
ANR	8576025	IdentifierDeclStatement	TTAFilter * filter = & s -> ch_ctx [ cur_chan ] . filter ;	75:8:1322:1369	8575749	1	True				
ANR	8576026	IdentifierDecl	* filter = & s -> ch_ctx [ cur_chan ] . filter		8575749	0					
ANR	8576027	IdentifierDeclType	TTAFilter *		8575749	0					
ANR	8576028	Identifier	filter		8575749	1					
ANR	8576029	AssignmentExpression	* filter = & s -> ch_ctx [ cur_chan ] . filter		8575749	2		=			
ANR	8576030	Identifier	filter		8575749	0					
ANR	8576031	UnaryOperationExpression	& s -> ch_ctx [ cur_chan ] . filter		8575749	1					
ANR	8576032	UnaryOperator	&		8575749	0					
ANR	8576033	MemberAccess	s -> ch_ctx [ cur_chan ] . filter		8575749	1					
ANR	8576034	ArrayIndexing	s -> ch_ctx [ cur_chan ]		8575749	0					
ANR	8576035	PtrMemberAccess	s -> ch_ctx		8575749	0					
ANR	8576036	Identifier	s		8575749	0					
ANR	8576037	Identifier	ch_ctx		8575749	1					
ANR	8576038	Identifier	cur_chan		8575749	1					
ANR	8576039	Identifier	filter		8575749	1					
ANR	8576040	IdentifierDeclStatement	TTARice * rice = & s -> ch_ctx [ cur_chan ] . rice ;	77:8:1380:1421	8575749	2	True				
ANR	8576041	IdentifierDecl	* rice = & s -> ch_ctx [ cur_chan ] . rice		8575749	0					
ANR	8576042	IdentifierDeclType	TTARice *		8575749	0					
ANR	8576043	Identifier	rice		8575749	1					
ANR	8576044	AssignmentExpression	* rice = & s -> ch_ctx [ cur_chan ] . rice		8575749	2		=			
ANR	8576045	Identifier	rice		8575749	0					
ANR	8576046	UnaryOperationExpression	& s -> ch_ctx [ cur_chan ] . rice		8575749	1					
ANR	8576047	UnaryOperator	&		8575749	0					
ANR	8576048	MemberAccess	s -> ch_ctx [ cur_chan ] . rice		8575749	1					
ANR	8576049	ArrayIndexing	s -> ch_ctx [ cur_chan ]		8575749	0					
ANR	8576050	PtrMemberAccess	s -> ch_ctx		8575749	0					
ANR	8576051	Identifier	s		8575749	0					
ANR	8576052	Identifier	ch_ctx		8575749	1					
ANR	8576053	Identifier	cur_chan		8575749	1					
ANR	8576054	Identifier	rice		8575749	1					
ANR	8576055	IdentifierDeclStatement	"uint32_t unary , depth , k ;"	79:8:1432:1456	8575749	3	True				
ANR	8576056	IdentifierDecl	unary		8575749	0					
ANR	8576057	IdentifierDeclType	uint32_t		8575749	0					
ANR	8576058	Identifier	unary		8575749	1					
ANR	8576059	IdentifierDecl	depth		8575749	1					
ANR	8576060	IdentifierDeclType	uint32_t		8575749	0					
ANR	8576061	Identifier	depth		8575749	1					
ANR	8576062	IdentifierDecl	k		8575749	2					
ANR	8576063	IdentifierDeclType	uint32_t		8575749	0					
ANR	8576064	Identifier	k		8575749	1					
ANR	8576065	IdentifierDeclStatement	int32_t value ;	81:8:1467:1480	8575749	4	True				
ANR	8576066	IdentifierDecl	value		8575749	0					
ANR	8576067	IdentifierDeclType	int32_t		8575749	0					
ANR	8576068	Identifier	value		8575749	1					
ANR	8576069	ExpressionStatement	unary = tta_get_unary ( & s -> gb )	85:8:1493:1522	8575749	5	True				
ANR	8576070	AssignmentExpression	unary = tta_get_unary ( & s -> gb )		8575749	0		=			
ANR	8576071	Identifier	unary		8575749	0					
ANR	8576072	CallExpression	tta_get_unary ( & s -> gb )		8575749	1					
ANR	8576073	Callee	tta_get_unary		8575749	0					
ANR	8576074	Identifier	tta_get_unary		8575749	0					
ANR	8576075	ArgumentList	& s -> gb		8575749	1					
ANR	8576076	Argument	& s -> gb		8575749	0					
ANR	8576077	UnaryOperationExpression	& s -> gb		8575749	0					
ANR	8576078	UnaryOperator	&		8575749	0					
ANR	8576079	PtrMemberAccess	s -> gb		8575749	1					
ANR	8576080	Identifier	s		8575749	0					
ANR	8576081	Identifier	gb		8575749	1					
ANR	8576082	IfStatement	if ( unary == 0 )		8575749	6					
ANR	8576083	Condition	unary == 0	89:12:1539:1548	8575749	0	True				
ANR	8576084	EqualityExpression	unary == 0		8575749	0		==			
ANR	8576085	Identifier	unary		8575749	0					
ANR	8576086	PrimaryExpression	0		8575749	1					
ANR	8576087	CompoundStatement		85:24:1420:1420	8575749	1					
ANR	8576088	ExpressionStatement	depth = 0	91:12:1566:1575	8575749	0	True				
ANR	8576089	AssignmentExpression	depth = 0		8575749	0		=			
ANR	8576090	Identifier	depth		8575749	0					
ANR	8576091	PrimaryExpression	0		8575749	1					
ANR	8576092	ExpressionStatement	k = rice -> k0	93:12:1590:1602	8575749	1	True				
ANR	8576093	AssignmentExpression	k = rice -> k0		8575749	0		=			
ANR	8576094	Identifier	k		8575749	0					
ANR	8576095	PtrMemberAccess	rice -> k0		8575749	1					
ANR	8576096	Identifier	rice		8575749	0					
ANR	8576097	Identifier	k0		8575749	1					
ANR	8576098	ElseStatement	else		8575749	0					
ANR	8576099	CompoundStatement		91:15:1489:1489	8575749	0					
ANR	8576100	ExpressionStatement	depth = 1	97:12:1635:1644	8575749	0	True				
ANR	8576101	AssignmentExpression	depth = 1		8575749	0		=			
ANR	8576102	Identifier	depth		8575749	0					
ANR	8576103	PrimaryExpression	1		8575749	1					
ANR	8576104	ExpressionStatement	k = rice -> k1	99:12:1659:1671	8575749	1	True				
ANR	8576105	AssignmentExpression	k = rice -> k1		8575749	0		=			
ANR	8576106	Identifier	k		8575749	0					
ANR	8576107	PtrMemberAccess	rice -> k1		8575749	1					
ANR	8576108	Identifier	rice		8575749	0					
ANR	8576109	Identifier	k1		8575749	1					
ANR	8576110	ExpressionStatement	unary --	101:12:1686:1693	8575749	2	True				
ANR	8576111	PostIncDecOperationExpression	unary --		8575749	0					
ANR	8576112	Identifier	unary		8575749	0					
ANR	8576113	IncDec	--		8575749	1					
ANR	8576114	IfStatement	if ( get_bits_left ( & s -> gb ) < k )		8575749	7					
ANR	8576115	Condition	get_bits_left ( & s -> gb ) < k	107:12:1721:1745	8575749	0	True				
ANR	8576116	RelationalExpression	get_bits_left ( & s -> gb ) < k		8575749	0		<			
ANR	8576117	CallExpression	get_bits_left ( & s -> gb )		8575749	0					
ANR	8576118	Callee	get_bits_left		8575749	0					
ANR	8576119	Identifier	get_bits_left		8575749	0					
ANR	8576120	ArgumentList	& s -> gb		8575749	1					
ANR	8576121	Argument	& s -> gb		8575749	0					
ANR	8576122	UnaryOperationExpression	& s -> gb		8575749	0					
ANR	8576123	UnaryOperator	&		8575749	0					
ANR	8576124	PtrMemberAccess	s -> gb		8575749	1					
ANR	8576125	Identifier	s		8575749	0					
ANR	8576126	Identifier	gb		8575749	1					
ANR	8576127	Identifier	k		8575749	1					
ANR	8576128	ReturnStatement	return - 1 ;	109:12:1761:1770	8575749	1	True				
ANR	8576129	UnaryOperationExpression	- 1		8575749	0					
ANR	8576130	UnaryOperator	-		8575749	0					
ANR	8576131	PrimaryExpression	1		8575749	1					
ANR	8576132	IfStatement	if ( k )		8575749	8					
ANR	8576133	Condition	k	113:12:1787:1787	8575749	0	True				
ANR	8576134	Identifier	k		8575749	0					
ANR	8576135	CompoundStatement		109:15:1659:1659	8575749	1					
ANR	8576136	IfStatement	if ( k > MIN_CACHE_BITS )		8575749	0					
ANR	8576137	Condition	k > MIN_CACHE_BITS	115:16:1809:1826	8575749	0	True				
ANR	8576138	RelationalExpression	k > MIN_CACHE_BITS		8575749	0		>			
ANR	8576139	Identifier	k		8575749	0					
ANR	8576140	Identifier	MIN_CACHE_BITS		8575749	1					
ANR	8576141	ReturnStatement	return - 1 ;	117:16:1846:1855	8575749	1	True				
ANR	8576142	UnaryOperationExpression	- 1		8575749	0					
ANR	8576143	UnaryOperator	-		8575749	0					
ANR	8576144	PrimaryExpression	1		8575749	1					
ANR	8576145	ExpressionStatement	"value = ( unary << k ) + get_bits ( & s -> gb , k )"	119:12:1870:1912	8575749	1	True				
ANR	8576146	AssignmentExpression	"value = ( unary << k ) + get_bits ( & s -> gb , k )"		8575749	0		=			
ANR	8576147	Identifier	value		8575749	0					
ANR	8576148	AdditiveExpression	"( unary << k ) + get_bits ( & s -> gb , k )"		8575749	1		+			
ANR	8576149	ShiftExpression	unary << k		8575749	0		<<			
ANR	8576150	Identifier	unary		8575749	0					
ANR	8576151	Identifier	k		8575749	1					
ANR	8576152	CallExpression	"get_bits ( & s -> gb , k )"		8575749	1					
ANR	8576153	Callee	get_bits		8575749	0					
ANR	8576154	Identifier	get_bits		8575749	0					
ANR	8576155	ArgumentList	& s -> gb		8575749	1					
ANR	8576156	Argument	& s -> gb		8575749	0					
ANR	8576157	UnaryOperationExpression	& s -> gb		8575749	0					
ANR	8576158	UnaryOperator	&		8575749	0					
ANR	8576159	PtrMemberAccess	s -> gb		8575749	1					
ANR	8576160	Identifier	s		8575749	0					
ANR	8576161	Identifier	gb		8575749	1					
ANR	8576162	Argument	k		8575749	1					
ANR	8576163	Identifier	k		8575749	0					
ANR	8576164	ElseStatement	else		8575749	0					
ANR	8576165	ExpressionStatement	value = unary	123:12:1943:1956	8575749	0	True				
ANR	8576166	AssignmentExpression	value = unary		8575749	0		=			
ANR	8576167	Identifier	value		8575749	0					
ANR	8576168	Identifier	unary		8575749	1					
ANR	8576169	SwitchStatement	switch ( depth )		8575749	9					
ANR	8576170	Condition	depth	129:16:2021:2025	8575749	0	True				
ANR	8576171	Identifier	depth		8575749	0					
ANR	8576172	CompoundStatement		125:23:1897:1897	8575749	1					
ANR	8576173	Label	case 1 :	131:8:2039:2045	8575749	0	True				
ANR	8576174	ExpressionStatement	rice -> sum1 += value - ( rice -> sum1 >> 4 )	133:12:2060:2099	8575749	1	True				
ANR	8576175	AssignmentExpression	rice -> sum1 += value - ( rice -> sum1 >> 4 )		8575749	0		+=			
ANR	8576176	PtrMemberAccess	rice -> sum1		8575749	0					
ANR	8576177	Identifier	rice		8575749	0					
ANR	8576178	Identifier	sum1		8575749	1					
ANR	8576179	AdditiveExpression	value - ( rice -> sum1 >> 4 )		8575749	1		-			
ANR	8576180	Identifier	value		8575749	0					
ANR	8576181	ShiftExpression	rice -> sum1 >> 4		8575749	1		>>			
ANR	8576182	PtrMemberAccess	rice -> sum1		8575749	0					
ANR	8576183	Identifier	rice		8575749	0					
ANR	8576184	Identifier	sum1		8575749	1					
ANR	8576185	PrimaryExpression	4		8575749	1					
ANR	8576186	IfStatement	if ( rice -> k1 > 0 && rice -> sum1 < shift_16 [ rice -> k1 ] )		8575749	2					
ANR	8576187	Condition	rice -> k1 > 0 && rice -> sum1 < shift_16 [ rice -> k1 ]	135:16:2118:2164	8575749	0	True				
ANR	8576188	AndExpression	rice -> k1 > 0 && rice -> sum1 < shift_16 [ rice -> k1 ]		8575749	0		&&			
ANR	8576189	RelationalExpression	rice -> k1 > 0		8575749	0		>			
ANR	8576190	PtrMemberAccess	rice -> k1		8575749	0					
ANR	8576191	Identifier	rice		8575749	0					
ANR	8576192	Identifier	k1		8575749	1					
ANR	8576193	PrimaryExpression	0		8575749	1					
ANR	8576194	RelationalExpression	rice -> sum1 < shift_16 [ rice -> k1 ]		8575749	1		<			
ANR	8576195	PtrMemberAccess	rice -> sum1		8575749	0					
ANR	8576196	Identifier	rice		8575749	0					
ANR	8576197	Identifier	sum1		8575749	1					
ANR	8576198	ArrayIndexing	shift_16 [ rice -> k1 ]		8575749	1					
ANR	8576199	Identifier	shift_16		8575749	0					
ANR	8576200	PtrMemberAccess	rice -> k1		8575749	1					
ANR	8576201	Identifier	rice		8575749	0					
ANR	8576202	Identifier	k1		8575749	1					
ANR	8576203	ExpressionStatement	rice -> k1 --	137:16:2184:2194	8575749	1	True				
ANR	8576204	PostIncDecOperationExpression	rice -> k1 --		8575749	0					
ANR	8576205	PtrMemberAccess	rice -> k1		8575749	0					
ANR	8576206	Identifier	rice		8575749	0					
ANR	8576207	Identifier	k1		8575749	1					
ANR	8576208	IncDec	--		8575749	1					
ANR	8576209	ElseStatement	else		8575749	0					
ANR	8576210	IfStatement	if ( rice -> sum1 > shift_16 [ rice -> k1 + 1 ] )		8575749	0					
ANR	8576211	Condition	rice -> sum1 > shift_16 [ rice -> k1 + 1 ]	139:20:2217:2251	8575749	0	True				
ANR	8576212	RelationalExpression	rice -> sum1 > shift_16 [ rice -> k1 + 1 ]		8575749	0		>			
ANR	8576213	PtrMemberAccess	rice -> sum1		8575749	0					
ANR	8576214	Identifier	rice		8575749	0					
ANR	8576215	Identifier	sum1		8575749	1					
ANR	8576216	ArrayIndexing	shift_16 [ rice -> k1 + 1 ]		8575749	1					
ANR	8576217	Identifier	shift_16		8575749	0					
ANR	8576218	AdditiveExpression	rice -> k1 + 1		8575749	1		+			
ANR	8576219	PtrMemberAccess	rice -> k1		8575749	0					
ANR	8576220	Identifier	rice		8575749	0					
ANR	8576221	Identifier	k1		8575749	1					
ANR	8576222	PrimaryExpression	1		8575749	1					
ANR	8576223	ExpressionStatement	rice -> k1 ++	141:16:2271:2281	8575749	1	True				
ANR	8576224	PostIncDecOperationExpression	rice -> k1 ++		8575749	0					
ANR	8576225	PtrMemberAccess	rice -> k1		8575749	0					
ANR	8576226	Identifier	rice		8575749	0					
ANR	8576227	Identifier	k1		8575749	1					
ANR	8576228	IncDec	++		8575749	1					
ANR	8576229	ExpressionStatement	value += shift_1 [ rice -> k0 ]	143:12:2296:2322	8575749	3	True				
ANR	8576230	AssignmentExpression	value += shift_1 [ rice -> k0 ]		8575749	0		+=			
ANR	8576231	Identifier	value		8575749	0					
ANR	8576232	ArrayIndexing	shift_1 [ rice -> k0 ]		8575749	1					
ANR	8576233	Identifier	shift_1		8575749	0					
ANR	8576234	PtrMemberAccess	rice -> k0		8575749	1					
ANR	8576235	Identifier	rice		8575749	0					
ANR	8576236	Identifier	k0		8575749	1					
ANR	8576237	Label	default :	145:8:2333:2340	8575749	4	True				
ANR	8576238	Identifier	default		8575749	0					
ANR	8576239	ExpressionStatement	rice -> sum0 += value - ( rice -> sum0 >> 4 )	147:12:2355:2394	8575749	5	True				
ANR	8576240	AssignmentExpression	rice -> sum0 += value - ( rice -> sum0 >> 4 )		8575749	0		+=			
ANR	8576241	PtrMemberAccess	rice -> sum0		8575749	0					
ANR	8576242	Identifier	rice		8575749	0					
ANR	8576243	Identifier	sum0		8575749	1					
ANR	8576244	AdditiveExpression	value - ( rice -> sum0 >> 4 )		8575749	1		-			
ANR	8576245	Identifier	value		8575749	0					
ANR	8576246	ShiftExpression	rice -> sum0 >> 4		8575749	1		>>			
ANR	8576247	PtrMemberAccess	rice -> sum0		8575749	0					
ANR	8576248	Identifier	rice		8575749	0					
ANR	8576249	Identifier	sum0		8575749	1					
ANR	8576250	PrimaryExpression	4		8575749	1					
ANR	8576251	IfStatement	if ( rice -> k0 > 0 && rice -> sum0 < shift_16 [ rice -> k0 ] )		8575749	6					
ANR	8576252	Condition	rice -> k0 > 0 && rice -> sum0 < shift_16 [ rice -> k0 ]	149:16:2413:2459	8575749	0	True				
ANR	8576253	AndExpression	rice -> k0 > 0 && rice -> sum0 < shift_16 [ rice -> k0 ]		8575749	0		&&			
ANR	8576254	RelationalExpression	rice -> k0 > 0		8575749	0		>			
ANR	8576255	PtrMemberAccess	rice -> k0		8575749	0					
ANR	8576256	Identifier	rice		8575749	0					
ANR	8576257	Identifier	k0		8575749	1					
ANR	8576258	PrimaryExpression	0		8575749	1					
ANR	8576259	RelationalExpression	rice -> sum0 < shift_16 [ rice -> k0 ]		8575749	1		<			
ANR	8576260	PtrMemberAccess	rice -> sum0		8575749	0					
ANR	8576261	Identifier	rice		8575749	0					
ANR	8576262	Identifier	sum0		8575749	1					
ANR	8576263	ArrayIndexing	shift_16 [ rice -> k0 ]		8575749	1					
ANR	8576264	Identifier	shift_16		8575749	0					
ANR	8576265	PtrMemberAccess	rice -> k0		8575749	1					
ANR	8576266	Identifier	rice		8575749	0					
ANR	8576267	Identifier	k0		8575749	1					
ANR	8576268	ExpressionStatement	rice -> k0 --	151:16:2479:2489	8575749	1	True				
ANR	8576269	PostIncDecOperationExpression	rice -> k0 --		8575749	0					
ANR	8576270	PtrMemberAccess	rice -> k0		8575749	0					
ANR	8576271	Identifier	rice		8575749	0					
ANR	8576272	Identifier	k0		8575749	1					
ANR	8576273	IncDec	--		8575749	1					
ANR	8576274	ElseStatement	else		8575749	0					
ANR	8576275	IfStatement	if ( rice -> sum0 > shift_16 [ rice -> k0 + 1 ] )		8575749	0					
ANR	8576276	Condition	rice -> sum0 > shift_16 [ rice -> k0 + 1 ]	153:20:2512:2546	8575749	0	True				
ANR	8576277	RelationalExpression	rice -> sum0 > shift_16 [ rice -> k0 + 1 ]		8575749	0		>			
ANR	8576278	PtrMemberAccess	rice -> sum0		8575749	0					
ANR	8576279	Identifier	rice		8575749	0					
ANR	8576280	Identifier	sum0		8575749	1					
ANR	8576281	ArrayIndexing	shift_16 [ rice -> k0 + 1 ]		8575749	1					
ANR	8576282	Identifier	shift_16		8575749	0					
ANR	8576283	AdditiveExpression	rice -> k0 + 1		8575749	1		+			
ANR	8576284	PtrMemberAccess	rice -> k0		8575749	0					
ANR	8576285	Identifier	rice		8575749	0					
ANR	8576286	Identifier	k0		8575749	1					
ANR	8576287	PrimaryExpression	1		8575749	1					
ANR	8576288	ExpressionStatement	rice -> k0 ++	155:16:2566:2576	8575749	1	True				
ANR	8576289	PostIncDecOperationExpression	rice -> k0 ++		8575749	0					
ANR	8576290	PtrMemberAccess	rice -> k0		8575749	0					
ANR	8576291	Identifier	rice		8575749	0					
ANR	8576292	Identifier	k0		8575749	1					
ANR	8576293	IncDec	++		8575749	1					
ANR	8576294	Statement	define	163:1:2625:2630	8575749	10	True				
ANR	8576295	ExpressionStatement	UNFOLD ( x ) ( ( ( x ) & 1 ) ? ( ++ ( x ) >> 1 ) : ( - ( x ) >> 1 ) ) * p = UNFOLD ( value )	163:8:2632:2704	8575749	11	True				
ANR	8576296	AssignmentExpression	UNFOLD ( x ) ( ( ( x ) & 1 ) ? ( ++ ( x ) >> 1 ) : ( - ( x ) >> 1 ) ) * p = UNFOLD ( value )		8575749	0		=			
ANR	8576297	MultiplicativeExpression	UNFOLD ( x ) ( ( ( x ) & 1 ) ? ( ++ ( x ) >> 1 ) : ( - ( x ) >> 1 ) ) * p		8575749	0		*			
ANR	8576298	CallExpression	UNFOLD ( x ) ( ( ( x ) & 1 ) ? ( ++ ( x ) >> 1 ) : ( - ( x ) >> 1 ) )		8575749	0					
ANR	8576299	Callee	UNFOLD ( x )		8575749	0					
ANR	8576300	CallExpression	UNFOLD ( x )		8575749	0					
ANR	8576301	Callee	UNFOLD		8575749	0					
ANR	8576302	Identifier	UNFOLD		8575749	0					
ANR	8576303	ArgumentList	x		8575749	1					
ANR	8576304	Argument	x		8575749	0					
ANR	8576305	Identifier	x		8575749	0					
ANR	8576306	ArgumentList	( ( x ) & 1 ) ? ( ++ ( x ) >> 1 ) : ( - ( x ) >> 1 )		8575749	1					
ANR	8576307	Argument	( ( x ) & 1 ) ? ( ++ ( x ) >> 1 ) : ( - ( x ) >> 1 )		8575749	0					
ANR	8576308	ConditionalExpression	( ( x ) & 1 ) ? ( ++ ( x ) >> 1 ) : ( - ( x ) >> 1 )		8575749	0					
ANR	8576309	Condition	( x ) & 1		8575749	0					
ANR	8576310	CastExpression	( x ) & 1		8575749	0					
ANR	8576311	CastTarget	x		8575749	0					
ANR	8576312	UnaryOperationExpression	& 1		8575749	1					
ANR	8576313	UnaryOperator	&		8575749	0					
ANR	8576314	PrimaryExpression	1		8575749	1					
ANR	8576315	ShiftExpression	++ ( x ) >> 1		8575749	1		>>			
ANR	8576316	UnaryExpression	++ ( x )		8575749	0					
ANR	8576317	IncDec	++		8575749	0					
ANR	8576318	Identifier	x		8575749	1					
ANR	8576319	PrimaryExpression	1		8575749	1					
ANR	8576320	ShiftExpression	- ( x ) >> 1		8575749	2		>>			
ANR	8576321	UnaryOperationExpression	- ( x )		8575749	0					
ANR	8576322	UnaryOperator	-		8575749	0					
ANR	8576323	Identifier	x		8575749	1					
ANR	8576324	PrimaryExpression	1		8575749	1					
ANR	8576325	Identifier	p		8575749	1					
ANR	8576326	CallExpression	UNFOLD ( value )		8575749	1					
ANR	8576327	Callee	UNFOLD		8575749	0					
ANR	8576328	Identifier	UNFOLD		8575749	0					
ANR	8576329	ArgumentList	value		8575749	1					
ANR	8576330	Argument	value		8575749	0					
ANR	8576331	Identifier	value		8575749	0					
ANR	8576332	ExpressionStatement	"ttafilter_process ( filter , p , 0 )"	171:8:2747:2778	8575749	12	True				
ANR	8576333	CallExpression	"ttafilter_process ( filter , p , 0 )"		8575749	0					
ANR	8576334	Callee	ttafilter_process		8575749	0					
ANR	8576335	Identifier	ttafilter_process		8575749	0					
ANR	8576336	ArgumentList	filter		8575749	1					
ANR	8576337	Argument	filter		8575749	0					
ANR	8576338	Identifier	filter		8575749	0					
ANR	8576339	Argument	p		8575749	1					
ANR	8576340	Identifier	p		8575749	0					
ANR	8576341	Argument	0		8575749	2					
ANR	8576342	PrimaryExpression	0		8575749	0					
ANR	8576343	Statement	define	177:1:2819:2824	8575749	13	True				
ANR	8576344	Statement	PRED	177:8:2826:2829	8575749	14	True				
ANR	8576345	Statement	(	177:12:2830:2830	8575749	15	True				
ANR	8576346	Statement	x	177:13:2831:2831	8575749	16	True				
ANR	8576347	Statement	","	177:14:2832:2832	8575749	17	True				
ANR	8576348	Statement	k	177:16:2834:2834	8575749	18	True				
ANR	8576349	Statement	)	177:17:2835:2835	8575749	19	True				
ANR	8576350	Statement	(	177:19:2837:2837	8575749	20	True				
ANR	8576351	Statement	int32_t	177:20:2838:2844	8575749	21	True				
ANR	8576352	Statement	)	177:27:2845:2845	8575749	22	True				
ANR	8576353	Statement	(	177:28:2846:2846	8575749	23	True				
ANR	8576354	Statement	(	177:29:2847:2847	8575749	24	True				
ANR	8576355	Statement	(	177:30:2848:2848	8575749	25	True				
ANR	8576356	Statement	(	177:31:2849:2849	8575749	26	True				
ANR	8576357	Statement	uint64_t	177:32:2850:2857	8575749	27	True				
ANR	8576358	Statement	)	177:40:2858:2858	8575749	28	True				
ANR	8576359	Statement	x	177:41:2859:2859	8575749	29	True				
ANR	8576360	Statement	<<	177:43:2861:2862	8575749	30	True				
ANR	8576361	Statement	k	177:46:2864:2864	8575749	31	True				
ANR	8576362	Statement	)	177:47:2865:2865	8575749	32	True				
ANR	8576363	Statement	-	177:49:2867:2867	8575749	33	True				
ANR	8576364	Statement	x	177:51:2869:2869	8575749	34	True				
ANR	8576365	Statement	)	177:52:2870:2870	8575749	35	True				
ANR	8576366	Statement	>>	177:54:2872:2873	8575749	36	True				
ANR	8576367	Statement	k	177:57:2875:2875	8575749	37	True				
ANR	8576368	Statement	)	177:58:2876:2876	8575749	38	True				
ANR	8576369	SwitchStatement	switch ( s -> bps )		8575749	39					
ANR	8576370	Condition	s -> bps	179:16:2895:2900	8575749	0	True				
ANR	8576371	PtrMemberAccess	s -> bps		8575749	0					
ANR	8576372	Identifier	s		8575749	0					
ANR	8576373	Identifier	bps		8575749	1					
ANR	8576374	CompoundStatement		175:24:2772:2772	8575749	1					
ANR	8576375	Label	case 1 :	181:12:2918:2924	8575749	0	True				
ANR	8576376	ExpressionStatement	"* p += PRED ( * predictor , 4 )"	181:20:2926:2951	8575749	1	True				
ANR	8576377	AssignmentExpression	"* p += PRED ( * predictor , 4 )"		8575749	0		+=			
ANR	8576378	UnaryOperationExpression	* p		8575749	0					
ANR	8576379	UnaryOperator	*		8575749	0					
ANR	8576380	Identifier	p		8575749	1					
ANR	8576381	CallExpression	"PRED ( * predictor , 4 )"		8575749	1					
ANR	8576382	Callee	PRED		8575749	0					
ANR	8576383	Identifier	PRED		8575749	0					
ANR	8576384	ArgumentList	* predictor		8575749	1					
ANR	8576385	Argument	* predictor		8575749	0					
ANR	8576386	UnaryOperationExpression	* predictor		8575749	0					
ANR	8576387	UnaryOperator	*		8575749	0					
ANR	8576388	Identifier	predictor		8575749	1					
ANR	8576389	Argument	4		8575749	1					
ANR	8576390	PrimaryExpression	4		8575749	0					
ANR	8576391	BreakStatement	break ;	181:47:2953:2958	8575749	2	True				
ANR	8576392	Label	case 2 :	183:12:2973:2979	8575749	3	True				
ANR	8576393	Label	case 3 :	185:12:2994:3000	8575749	4	True				
ANR	8576394	ExpressionStatement	"* p += PRED ( * predictor , 5 )"	185:20:3002:3027	8575749	5	True				
ANR	8576395	AssignmentExpression	"* p += PRED ( * predictor , 5 )"		8575749	0		+=			
ANR	8576396	UnaryOperationExpression	* p		8575749	0					
ANR	8576397	UnaryOperator	*		8575749	0					
ANR	8576398	Identifier	p		8575749	1					
ANR	8576399	CallExpression	"PRED ( * predictor , 5 )"		8575749	1					
ANR	8576400	Callee	PRED		8575749	0					
ANR	8576401	Identifier	PRED		8575749	0					
ANR	8576402	ArgumentList	* predictor		8575749	1					
ANR	8576403	Argument	* predictor		8575749	0					
ANR	8576404	UnaryOperationExpression	* predictor		8575749	0					
ANR	8576405	UnaryOperator	*		8575749	0					
ANR	8576406	Identifier	predictor		8575749	1					
ANR	8576407	Argument	5		8575749	1					
ANR	8576408	PrimaryExpression	5		8575749	0					
ANR	8576409	BreakStatement	break ;	185:47:3029:3034	8575749	6	True				
ANR	8576410	Label	case 4 :	187:12:3049:3055	8575749	7	True				
ANR	8576411	ExpressionStatement	* p += * predictor	187:20:3057:3073	8575749	8	True				
ANR	8576412	AssignmentExpression	* p += * predictor		8575749	0		+=			
ANR	8576413	UnaryOperationExpression	* p		8575749	0					
ANR	8576414	UnaryOperator	*		8575749	0					
ANR	8576415	Identifier	p		8575749	1					
ANR	8576416	UnaryOperationExpression	* predictor		8575749	1					
ANR	8576417	UnaryOperator	*		8575749	0					
ANR	8576418	Identifier	predictor		8575749	1					
ANR	8576419	BreakStatement	break ;	187:38:3075:3080	8575749	9	True				
ANR	8576420	ExpressionStatement	* predictor = * p	191:8:3102:3117	8575749	40	True				
ANR	8576421	AssignmentExpression	* predictor = * p		8575749	0		=			
ANR	8576422	UnaryOperationExpression	* predictor		8575749	0					
ANR	8576423	UnaryOperator	*		8575749	0					
ANR	8576424	Identifier	predictor		8575749	1					
ANR	8576425	UnaryOperationExpression	* p		8575749	1					
ANR	8576426	UnaryOperator	*		8575749	0					
ANR	8576427	Identifier	p		8575749	1					
ANR	8576428	IfStatement	if ( cur_chan < ( s -> channels - 1 ) )		8575749	41					
ANR	8576429	Condition	cur_chan < ( s -> channels - 1 )	197:12:3160:3185	8575749	0	True				
ANR	8576430	RelationalExpression	cur_chan < ( s -> channels - 1 )		8575749	0		<			
ANR	8576431	Identifier	cur_chan		8575749	0					
ANR	8576432	AdditiveExpression	s -> channels - 1		8575749	1		-			
ANR	8576433	PtrMemberAccess	s -> channels		8575749	0					
ANR	8576434	Identifier	s		8575749	0					
ANR	8576435	Identifier	channels		8575749	1					
ANR	8576436	PrimaryExpression	1		8575749	1					
ANR	8576437	ExpressionStatement	cur_chan ++	199:12:3201:3211	8575749	1	True				
ANR	8576438	PostIncDecOperationExpression	cur_chan ++		8575749	0					
ANR	8576439	Identifier	cur_chan		8575749	0					
ANR	8576440	IncDec	++		8575749	1					
ANR	8576441	ElseStatement	else		8575749	0					
ANR	8576442	CompoundStatement		197:13:3096:3096	8575749	0					
ANR	8576443	IfStatement	if ( s -> channels > 1 )		8575749	0					
ANR	8576444	Condition	s -> channels > 1	205:16:3300:3314	8575749	0	True				
ANR	8576445	RelationalExpression	s -> channels > 1		8575749	0		>			
ANR	8576446	PtrMemberAccess	s -> channels		8575749	0					
ANR	8576447	Identifier	s		8575749	0					
ANR	8576448	Identifier	channels		8575749	1					
ANR	8576449	PrimaryExpression	1		8575749	1					
ANR	8576450	CompoundStatement		203:16:3205:3223	8575749	1					
ANR	8576451	IdentifierDeclStatement	int32_t * r = p - 1 ;	207:16:3336:3354	8575749	0	True				
ANR	8576452	IdentifierDecl	* r = p - 1		8575749	0					
ANR	8576453	IdentifierDeclType	int32_t *		8575749	0					
ANR	8576454	Identifier	r		8575749	1					
ANR	8576455	AssignmentExpression	* r = p - 1		8575749	2		=			
ANR	8576456	Identifier	r		8575749	0					
ANR	8576457	AdditiveExpression	p - 1		8575749	1		-			
ANR	8576458	Identifier	p		8575749	0					
ANR	8576459	PrimaryExpression	1		8575749	1					
ANR	8576460	ForStatement	for ( * p += * r / 2 ; r > p - s -> channels ; r -- )		8575749	1					
ANR	8576461	ForInit	* p += * r / 2 ;	209:21:3378:3390	8575749	0	True				
ANR	8576462	AssignmentExpression	* p += * r / 2		8575749	0		+=			
ANR	8576463	UnaryOperationExpression	* p		8575749	0					
ANR	8576464	UnaryOperator	*		8575749	0					
ANR	8576465	Identifier	p		8575749	1					
ANR	8576466	MultiplicativeExpression	* r / 2		8575749	1		/			
ANR	8576467	UnaryOperationExpression	* r		8575749	0					
ANR	8576468	UnaryOperator	*		8575749	0					
ANR	8576469	Identifier	r		8575749	1					
ANR	8576470	PrimaryExpression	2		8575749	1					
ANR	8576471	Condition	r > p - s -> channels	209:35:3392:3410	8575749	1	True				
ANR	8576472	RelationalExpression	r > p - s -> channels		8575749	0		>			
ANR	8576473	Identifier	r		8575749	0					
ANR	8576474	AdditiveExpression	p - s -> channels		8575749	1		-			
ANR	8576475	Identifier	p		8575749	0					
ANR	8576476	PtrMemberAccess	s -> channels		8575749	1					
ANR	8576477	Identifier	s		8575749	0					
ANR	8576478	Identifier	channels		8575749	1					
ANR	8576479	PostIncDecOperationExpression	r --	209:56:3413:3415	8575749	2	True				
ANR	8576480	Identifier	r		8575749	0					
ANR	8576481	IncDec	--		8575749	1					
ANR	8576482	ExpressionStatement	* r = * ( r + 1 ) - * r	211:20:3439:3457	8575749	3	True				
ANR	8576483	AssignmentExpression	* r = * ( r + 1 ) - * r		8575749	0		=			
ANR	8576484	UnaryOperationExpression	* r		8575749	0					
ANR	8576485	UnaryOperator	*		8575749	0					
ANR	8576486	Identifier	r		8575749	1					
ANR	8576487	AdditiveExpression	* ( r + 1 ) - * r		8575749	1		-			
ANR	8576488	UnaryOperationExpression	* ( r + 1 )		8575749	0					
ANR	8576489	UnaryOperator	*		8575749	0					
ANR	8576490	AdditiveExpression	r + 1		8575749	1		+			
ANR	8576491	Identifier	r		8575749	0					
ANR	8576492	PrimaryExpression	1		8575749	1					
ANR	8576493	UnaryOperationExpression	* r		8575749	1					
ANR	8576494	UnaryOperator	*		8575749	0					
ANR	8576495	Identifier	r		8575749	1					
ANR	8576496	ExpressionStatement	cur_chan = 0	215:12:3487:3499	8575749	1	True				
ANR	8576497	AssignmentExpression	cur_chan = 0		8575749	0		=			
ANR	8576498	Identifier	cur_chan		8575749	0					
ANR	8576499	PrimaryExpression	0		8575749	1					
ANR	8576500	IfStatement	if ( get_bits_left ( & s -> gb ) < 32 )		8575749	14					
ANR	8576501	Condition	get_bits_left ( & s -> gb ) < 32	223:8:3530:3555	8575749	0	True				
ANR	8576502	RelationalExpression	get_bits_left ( & s -> gb ) < 32		8575749	0		<			
ANR	8576503	CallExpression	get_bits_left ( & s -> gb )		8575749	0					
ANR	8576504	Callee	get_bits_left		8575749	0					
ANR	8576505	Identifier	get_bits_left		8575749	0					
ANR	8576506	ArgumentList	& s -> gb		8575749	1					
ANR	8576507	Argument	& s -> gb		8575749	0					
ANR	8576508	UnaryOperationExpression	& s -> gb		8575749	0					
ANR	8576509	UnaryOperator	&		8575749	0					
ANR	8576510	PtrMemberAccess	s -> gb		8575749	1					
ANR	8576511	Identifier	s		8575749	0					
ANR	8576512	Identifier	gb		8575749	1					
ANR	8576513	PrimaryExpression	32		8575749	1					
ANR	8576514	ReturnStatement	return - 1 ;	225:8:3567:3576	8575749	1	True				
ANR	8576515	UnaryOperationExpression	- 1		8575749	0					
ANR	8576516	UnaryOperator	-		8575749	0					
ANR	8576517	PrimaryExpression	1		8575749	1					
ANR	8576518	ExpressionStatement	"skip_bits_long ( & s -> gb , 32 )"	227:4:3583:3609	8575749	15	True				
ANR	8576519	CallExpression	"skip_bits_long ( & s -> gb , 32 )"		8575749	0					
ANR	8576520	Callee	skip_bits_long		8575749	0					
ANR	8576521	Identifier	skip_bits_long		8575749	0					
ANR	8576522	ArgumentList	& s -> gb		8575749	1					
ANR	8576523	Argument	& s -> gb		8575749	0					
ANR	8576524	UnaryOperationExpression	& s -> gb		8575749	0					
ANR	8576525	UnaryOperator	&		8575749	0					
ANR	8576526	PtrMemberAccess	s -> gb		8575749	1					
ANR	8576527	Identifier	s		8575749	0					
ANR	8576528	Identifier	gb		8575749	1					
ANR	8576529	Argument	32		8575749	1					
ANR	8576530	PrimaryExpression	32		8575749	0					
ANR	8576531	IfStatement	if ( s -> bps == 2 )		8575749	16					
ANR	8576532	Condition	s -> bps == 2	233:8:3668:3678	8575749	0	True				
ANR	8576533	EqualityExpression	s -> bps == 2		8575749	0		==			
ANR	8576534	PtrMemberAccess	s -> bps		8575749	0					
ANR	8576535	Identifier	s		8575749	0					
ANR	8576536	Identifier	bps		8575749	1					
ANR	8576537	PrimaryExpression	2		8575749	1					
ANR	8576538	CompoundStatement		231:8:3561:3607	8575749	1					
ANR	8576539	IdentifierDeclStatement	int16_t * samples = ( int16_t * ) s -> frame . data [ 0 ] ;	235:8:3692:3738	8575749	0	True				
ANR	8576540	IdentifierDecl	* samples = ( int16_t * ) s -> frame . data [ 0 ]		8575749	0					
ANR	8576541	IdentifierDeclType	int16_t *		8575749	0					
ANR	8576542	Identifier	samples		8575749	1					
ANR	8576543	AssignmentExpression	* samples = ( int16_t * ) s -> frame . data [ 0 ]		8575749	2		=			
ANR	8576544	Identifier	samples		8575749	0					
ANR	8576545	CastExpression	( int16_t * ) s -> frame . data [ 0 ]		8575749	1					
ANR	8576546	CastTarget	int16_t *		8575749	0					
ANR	8576547	ArrayIndexing	s -> frame . data [ 0 ]		8575749	1					
ANR	8576548	MemberAccess	s -> frame . data		8575749	0					
ANR	8576549	PtrMemberAccess	s -> frame		8575749	0					
ANR	8576550	Identifier	s		8575749	0					
ANR	8576551	Identifier	frame		8575749	1					
ANR	8576552	Identifier	data		8575749	1					
ANR	8576553	PrimaryExpression	0		8575749	1					
ANR	8576554	ForStatement	for ( p = s -> decode_buffer ; p < s -> decode_buffer + ( framelen * s -> channels ) ; p ++ )		8575749	1					
ANR	8576555	ForInit	p = s -> decode_buffer ;	237:13:3754:3774	8575749	0	True				
ANR	8576556	AssignmentExpression	p = s -> decode_buffer		8575749	0		=			
ANR	8576557	Identifier	p		8575749	0					
ANR	8576558	PtrMemberAccess	s -> decode_buffer		8575749	1					
ANR	8576559	Identifier	s		8575749	0					
ANR	8576560	Identifier	decode_buffer		8575749	1					
ANR	8576561	Condition	p < s -> decode_buffer + ( framelen * s -> channels )	237:35:3776:3822	8575749	1	True				
ANR	8576562	RelationalExpression	p < s -> decode_buffer + ( framelen * s -> channels )		8575749	0		<			
ANR	8576563	Identifier	p		8575749	0					
ANR	8576564	AdditiveExpression	s -> decode_buffer + ( framelen * s -> channels )		8575749	1		+			
ANR	8576565	PtrMemberAccess	s -> decode_buffer		8575749	0					
ANR	8576566	Identifier	s		8575749	0					
ANR	8576567	Identifier	decode_buffer		8575749	1					
ANR	8576568	MultiplicativeExpression	framelen * s -> channels		8575749	1		*			
ANR	8576569	Identifier	framelen		8575749	0					
ANR	8576570	PtrMemberAccess	s -> channels		8575749	1					
ANR	8576571	Identifier	s		8575749	0					
ANR	8576572	Identifier	channels		8575749	1					
ANR	8576573	PostIncDecOperationExpression	p ++	237:84:3825:3827	8575749	2	True				
ANR	8576574	Identifier	p		8575749	0					
ANR	8576575	IncDec	++		8575749	1					
ANR	8576576	ExpressionStatement	* samples ++ = * p	239:12:3843:3858	8575749	3	True				
ANR	8576577	AssignmentExpression	* samples ++ = * p		8575749	0		=			
ANR	8576578	UnaryOperationExpression	* samples ++		8575749	0					
ANR	8576579	UnaryOperator	*		8575749	0					
ANR	8576580	PostIncDecOperationExpression	samples ++		8575749	1					
ANR	8576581	Identifier	samples		8575749	0					
ANR	8576582	IncDec	++		8575749	1					
ANR	8576583	UnaryOperationExpression	* p		8575749	1					
ANR	8576584	UnaryOperator	*		8575749	0					
ANR	8576585	Identifier	p		8575749	1					
ANR	8576586	ElseStatement	else		8575749	0					
ANR	8576587	CompoundStatement		241:8:3803:3849	8575749	0					
ANR	8576588	IdentifierDeclStatement	int32_t * samples = ( int32_t * ) s -> frame . data [ 0 ] ;	245:8:3934:3980	8575749	0	True				
ANR	8576589	IdentifierDecl	* samples = ( int32_t * ) s -> frame . data [ 0 ]		8575749	0					
ANR	8576590	IdentifierDeclType	int32_t *		8575749	0					
ANR	8576591	Identifier	samples		8575749	1					
ANR	8576592	AssignmentExpression	* samples = ( int32_t * ) s -> frame . data [ 0 ]		8575749	2		=			
ANR	8576593	Identifier	samples		8575749	0					
ANR	8576594	CastExpression	( int32_t * ) s -> frame . data [ 0 ]		8575749	1					
ANR	8576595	CastTarget	int32_t *		8575749	0					
ANR	8576596	ArrayIndexing	s -> frame . data [ 0 ]		8575749	1					
ANR	8576597	MemberAccess	s -> frame . data		8575749	0					
ANR	8576598	PtrMemberAccess	s -> frame		8575749	0					
ANR	8576599	Identifier	s		8575749	0					
ANR	8576600	Identifier	frame		8575749	1					
ANR	8576601	Identifier	data		8575749	1					
ANR	8576602	PrimaryExpression	0		8575749	1					
ANR	8576603	ForStatement	for ( i = 0 ; i < framelen * s -> channels ; i ++ )		8575749	1					
ANR	8576604	ForInit	i = 0 ;	247:13:3996:4001	8575749	0	True				
ANR	8576605	AssignmentExpression	i = 0		8575749	0		=			
ANR	8576606	Identifier	i		8575749	0					
ANR	8576607	PrimaryExpression	0		8575749	1					
ANR	8576608	Condition	i < framelen * s -> channels	247:20:4003:4028	8575749	1	True				
ANR	8576609	RelationalExpression	i < framelen * s -> channels		8575749	0		<			
ANR	8576610	Identifier	i		8575749	0					
ANR	8576611	MultiplicativeExpression	framelen * s -> channels		8575749	1		*			
ANR	8576612	Identifier	framelen		8575749	0					
ANR	8576613	PtrMemberAccess	s -> channels		8575749	1					
ANR	8576614	Identifier	s		8575749	0					
ANR	8576615	Identifier	channels		8575749	1					
ANR	8576616	PostIncDecOperationExpression	i ++	247:48:4031:4033	8575749	2	True				
ANR	8576617	Identifier	i		8575749	0					
ANR	8576618	IncDec	++		8575749	1					
ANR	8576619	ExpressionStatement	* samples ++ <<= 8	249:12:4049:4065	8575749	3	True				
ANR	8576620	AssignmentExpression	* samples ++ <<= 8		8575749	0		<<=			
ANR	8576621	UnaryOperationExpression	* samples ++		8575749	0					
ANR	8576622	UnaryOperator	*		8575749	0					
ANR	8576623	PostIncDecOperationExpression	samples ++		8575749	1					
ANR	8576624	Identifier	samples		8575749	0					
ANR	8576625	IncDec	++		8575749	1					
ANR	8576626	PrimaryExpression	8		8575749	1					
ANR	8576627	ExpressionStatement	s -> decode_buffer = NULL	253:8:4108:4131	8575749	2	True				
ANR	8576628	AssignmentExpression	s -> decode_buffer = NULL		8575749	0		=			
ANR	8576629	PtrMemberAccess	s -> decode_buffer		8575749	0					
ANR	8576630	Identifier	s		8575749	0					
ANR	8576631	Identifier	decode_buffer		8575749	1					
ANR	8576632	Identifier	NULL		8575749	1					
ANR	8576633	ExpressionStatement	* got_frame_ptr = 1	259:4:4147:4167	8575749	17	True				
ANR	8576634	AssignmentExpression	* got_frame_ptr = 1		8575749	0		=			
ANR	8576635	UnaryOperationExpression	* got_frame_ptr		8575749	0					
ANR	8576636	UnaryOperator	*		8575749	0					
ANR	8576637	Identifier	got_frame_ptr		8575749	1					
ANR	8576638	PrimaryExpression	1		8575749	1					
ANR	8576639	ExpressionStatement	* ( AVFrame * ) data = s -> frame	261:4:4174:4201	8575749	18	True				
ANR	8576640	AssignmentExpression	* ( AVFrame * ) data = s -> frame		8575749	0		=			
ANR	8576641	UnaryOperationExpression	* ( AVFrame * ) data		8575749	0					
ANR	8576642	UnaryOperator	*		8575749	0					
ANR	8576643	CastExpression	( AVFrame * ) data		8575749	1					
ANR	8576644	CastTarget	AVFrame *		8575749	0					
ANR	8576645	Identifier	data		8575749	1					
ANR	8576646	PtrMemberAccess	s -> frame		8575749	1					
ANR	8576647	Identifier	s		8575749	0					
ANR	8576648	Identifier	frame		8575749	1					
ANR	8576649	ReturnStatement	return buf_size ;	265:4:4210:4225	8575749	19	True				
ANR	8576650	Identifier	buf_size		8575749	0					
ANR	8576651	ReturnType	static int		8575749	1					
ANR	8576652	Identifier	tta_decode_frame		8575749	2					
ANR	8576653	ParameterList	"AVCodecContext * avctx , void * data , int * got_frame_ptr , AVPacket * avpkt"		8575749	3					
ANR	8576654	Parameter	AVCodecContext * avctx	1:28:28:48	8575749	0	True				
ANR	8576655	ParameterType	AVCodecContext *		8575749	0					
ANR	8576656	Identifier	avctx		8575749	1					
ANR	8576657	Parameter	void * data	1:51:51:60	8575749	1	True				
ANR	8576658	ParameterType	void *		8575749	0					
ANR	8576659	Identifier	data		8575749	1					
ANR	8576660	Parameter	int * got_frame_ptr	3:28:92:109	8575749	2	True				
ANR	8576661	ParameterType	int *		8575749	0					
ANR	8576662	Identifier	got_frame_ptr		8575749	1					
ANR	8576663	Parameter	AVPacket * avpkt	3:48:112:126	8575749	3	True				
ANR	8576664	ParameterType	AVPacket *		8575749	0					
ANR	8576665	Identifier	avpkt		8575749	1					
ANR	8576666	CFGEntryNode	ENTRY		8575749		True				
ANR	8576667	CFGExitNode	EXIT		8575749		True				
ANR	8576668	Symbol	MIN_CACHE_BITS		8575749						
ANR	8576669	Symbol	* shift_1		8575749						
ANR	8576670	Symbol	data		8575749						
ANR	8576671	Symbol	PRED		8575749						
ANR	8576672	Symbol	get_bits		8575749						
ANR	8576673	Symbol	s -> frame . data		8575749						
ANR	8576674	Symbol	got_frame_ptr		8575749						
ANR	8576675	Symbol	avpkt		8575749						
ANR	8576676	Symbol	unary		8575749						
ANR	8576677	Symbol	rice -> k0		8575749						
ANR	8576678	Symbol	* s -> frame		8575749						
ANR	8576679	Symbol	rice -> k1		8575749						
ANR	8576680	Symbol	tta_get_unary		8575749						
ANR	8576681	Symbol	* ttafilter_configs		8575749						
ANR	8576682	Symbol	* * rice		8575749						
ANR	8576683	Symbol	s -> frame		8575749						
ANR	8576684	Symbol	ret		8575749						
ANR	8576685	Symbol	NULL		8575749						
ANR	8576686	Symbol	buf_size		8575749						
ANR	8576687	Symbol	* * s -> bps		8575749						
ANR	8576688	Symbol	& s -> ch_ctx [ cur_chan ] . filter		8575749						
ANR	8576689	Symbol	* rice		8575749						
ANR	8576690	Symbol	s -> ch_ctx [ i ] . predictor		8575749						
ANR	8576691	Symbol	shift_16		8575749						
ANR	8576692	Symbol	* * * s		8575749						
ANR	8576693	Symbol	samples		8575749						
ANR	8576694	Symbol	& s -> gb		8575749						
ANR	8576695	Symbol	* avctx		8575749						
ANR	8576696	Symbol	* s -> bps		8575749						
ANR	8576697	Symbol	& s -> ch_ctx [ cur_chan ] . predictor		8575749						
ANR	8576698	Symbol	s -> ch_ctx		8575749						
ANR	8576699	Symbol	& s -> ch_ctx [ i ] . rice		8575749						
ANR	8576700	Symbol	* rice -> k1		8575749						
ANR	8576701	Symbol	avpkt -> data		8575749						
ANR	8576702	Symbol	rice -> sum1		8575749						
ANR	8576703	Symbol	* rice -> k0		8575749						
ANR	8576704	Symbol	s -> decode_buffer		8575749						
ANR	8576705	Symbol	rice -> sum0		8575749						
ANR	8576706	Symbol	& s -> frame		8575749						
ANR	8576707	Symbol	s -> frame_length		8575749						
ANR	8576708	Symbol	& s -> ch_ctx [ i ] . filter		8575749						
ANR	8576709	Symbol	* * ttafilter_configs		8575749						
ANR	8576710	Symbol	& s -> ch_ctx [ cur_chan ] . rice		8575749						
ANR	8576711	Symbol	get_bits_left		8575749						
ANR	8576712	Symbol	s -> channels		8575749						
ANR	8576713	Symbol	cur_chan		8575749						
ANR	8576714	Symbol	* s -> frame . data		8575749						
ANR	8576715	Symbol	s -> frame . nb_samples		8575749						
ANR	8576716	Symbol	* * s		8575749						
ANR	8576717	Symbol	avpkt -> size		8575749						
ANR	8576718	Symbol	predictor		8575749						
ANR	8576719	Symbol	avctx		8575749						
ANR	8576720	Symbol	* predictor		8575749						
ANR	8576721	Symbol	ttafilter_configs		8575749						
ANR	8576722	Symbol	value		8575749						
ANR	8576723	Symbol	* samples ++		8575749						
ANR	8576724	Symbol	* avpkt		8575749						
ANR	8576725	Symbol	s -> total_frames		8575749						
ANR	8576726	Symbol	UNFOLD		8575749						
ANR	8576727	Symbol	avctx -> get_buffer		8575749						
ANR	8576728	Symbol	AV_LOG_ERROR		8575749						
ANR	8576729	Symbol	shift_1		8575749						
ANR	8576730	Symbol	* got_frame_ptr		8575749						
ANR	8576731	Symbol	i		8575749						
ANR	8576732	Symbol	k		8575749						
ANR	8576733	Symbol	avctx -> priv_data		8575749						
ANR	8576734	Symbol	rice		8575749						
ANR	8576735	Symbol	p		8575749						
ANR	8576736	Symbol	filter		8575749						
ANR	8576737	Symbol	* ( r + 1 )		8575749						
ANR	8576738	Symbol	s -> bps		8575749						
ANR	8576739	Symbol	buf		8575749						
ANR	8576740	Symbol	s -> last_frame_length		8575749						
ANR	8576741	Symbol	* s -> ch_ctx		8575749						
ANR	8576742	Symbol	* shift_16		8575749						
ANR	8576743	Symbol	r		8575749						
ANR	8576744	Symbol	s		8575749						
ANR	8576745	Symbol	* i		8575749						
ANR	8576746	Symbol	depth		8575749						
ANR	8576747	Symbol	x		8575749						
ANR	8576748	Symbol	* p		8575749						
ANR	8576749	Symbol	framelen		8575749						
ANR	8576750	Symbol	* ( AVFrame * ) data		8575749						
ANR	8576751	Symbol	* r		8575749						
ANR	8576752	Symbol	* s		8575749						
ANR	8576753	Symbol	* data		8575749						
ANR	8576754	Symbol	* cur_chan		8575749						
