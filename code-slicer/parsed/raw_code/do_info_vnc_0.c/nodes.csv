command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2588602	File	/home/p4ultr4n/workplace/ReVeal/raw_code/do_info_vnc_0.c								
ANR	2588603	Function	do_info_vnc	1:0:0:476							
ANR	2588604	FunctionDef	do_info_vnc (Monitor * mon)		2588603	0					
ANR	2588605	CompoundStatement		3:0:32:476	2588603	0					
ANR	2588606	IfStatement	if ( vnc_display == NULL || vnc_display -> display == NULL )		2588603	0					
ANR	2588607	Condition	vnc_display == NULL || vnc_display -> display == NULL	5:8:43:93	2588603	0	True				
ANR	2588608	OrExpression	vnc_display == NULL || vnc_display -> display == NULL		2588603	0		||			
ANR	2588609	EqualityExpression	vnc_display == NULL		2588603	0		==			
ANR	2588610	Identifier	vnc_display		2588603	0					
ANR	2588611	Identifier	NULL		2588603	1					
ANR	2588612	EqualityExpression	vnc_display -> display == NULL		2588603	1		==			
ANR	2588613	PtrMemberAccess	vnc_display -> display		2588603	0					
ANR	2588614	Identifier	vnc_display		2588603	0					
ANR	2588615	Identifier	display		2588603	1					
ANR	2588616	Identifier	NULL		2588603	1					
ANR	2588617	ExpressionStatement	"monitor_printf ( mon , ""VNC server disabled\\n"" )"	7:8:105:149	2588603	1	True				
ANR	2588618	CallExpression	"monitor_printf ( mon , ""VNC server disabled\\n"" )"		2588603	0					
ANR	2588619	Callee	monitor_printf		2588603	0					
ANR	2588620	Identifier	monitor_printf		2588603	0					
ANR	2588621	ArgumentList	mon		2588603	1					
ANR	2588622	Argument	mon		2588603	0					
ANR	2588623	Identifier	mon		2588603	0					
ANR	2588624	Argument	"""VNC server disabled\\n"""		2588603	1					
ANR	2588625	PrimaryExpression	"""VNC server disabled\\n"""		2588603	0					
ANR	2588626	ElseStatement	else		2588603	0					
ANR	2588627	CompoundStatement		7:9:128:128	2588603	0					
ANR	2588628	ExpressionStatement	"monitor_printf ( mon , ""VNC server active on: "" )"	11:8:172:217	2588603	0	True				
ANR	2588629	CallExpression	"monitor_printf ( mon , ""VNC server active on: "" )"		2588603	0					
ANR	2588630	Callee	monitor_printf		2588603	0					
ANR	2588631	Identifier	monitor_printf		2588603	0					
ANR	2588632	ArgumentList	mon		2588603	1					
ANR	2588633	Argument	mon		2588603	0					
ANR	2588634	Identifier	mon		2588603	0					
ANR	2588635	Argument	"""VNC server active on: """		2588603	1					
ANR	2588636	PrimaryExpression	"""VNC server active on: """		2588603	0					
ANR	2588637	ExpressionStatement	"monitor_print_filename ( mon , vnc_display -> display )"	13:8:228:277	2588603	1	True				
ANR	2588638	CallExpression	"monitor_print_filename ( mon , vnc_display -> display )"		2588603	0					
ANR	2588639	Callee	monitor_print_filename		2588603	0					
ANR	2588640	Identifier	monitor_print_filename		2588603	0					
ANR	2588641	ArgumentList	mon		2588603	1					
ANR	2588642	Argument	mon		2588603	0					
ANR	2588643	Identifier	mon		2588603	0					
ANR	2588644	Argument	vnc_display -> display		2588603	1					
ANR	2588645	PtrMemberAccess	vnc_display -> display		2588603	0					
ANR	2588646	Identifier	vnc_display		2588603	0					
ANR	2588647	Identifier	display		2588603	1					
ANR	2588648	ExpressionStatement	"monitor_printf ( mon , ""\\n"" )"	15:8:288:313	2588603	2	True				
ANR	2588649	CallExpression	"monitor_printf ( mon , ""\\n"" )"		2588603	0					
ANR	2588650	Callee	monitor_printf		2588603	0					
ANR	2588651	Identifier	monitor_printf		2588603	0					
ANR	2588652	ArgumentList	mon		2588603	1					
ANR	2588653	Argument	mon		2588603	0					
ANR	2588654	Identifier	mon		2588603	0					
ANR	2588655	Argument	"""\\n"""		2588603	1					
ANR	2588656	PrimaryExpression	"""\\n"""		2588603	0					
ANR	2588657	IfStatement	if ( vnc_display -> clients == NULL )		2588603	3					
ANR	2588658	Condition	vnc_display -> clients == NULL	19:5:323:350	2588603	0	True				
ANR	2588659	EqualityExpression	vnc_display -> clients == NULL		2588603	0		==			
ANR	2588660	PtrMemberAccess	vnc_display -> clients		2588603	0					
ANR	2588661	Identifier	vnc_display		2588603	0					
ANR	2588662	Identifier	clients		2588603	1					
ANR	2588663	Identifier	NULL		2588603	1					
ANR	2588664	ExpressionStatement	"monitor_printf ( mon , ""No client connected\\n"" )"	21:12:366:410	2588603	1	True				
ANR	2588665	CallExpression	"monitor_printf ( mon , ""No client connected\\n"" )"		2588603	0					
ANR	2588666	Callee	monitor_printf		2588603	0					
ANR	2588667	Identifier	monitor_printf		2588603	0					
ANR	2588668	ArgumentList	mon		2588603	1					
ANR	2588669	Argument	mon		2588603	0					
ANR	2588670	Identifier	mon		2588603	0					
ANR	2588671	Argument	"""No client connected\\n"""		2588603	1					
ANR	2588672	PrimaryExpression	"""No client connected\\n"""		2588603	0					
ANR	2588673	ElseStatement	else		2588603	0					
ANR	2588674	ExpressionStatement	"monitor_printf ( mon , ""Client connected\\n"" )"	25:5:425:466	2588603	0	True				
ANR	2588675	CallExpression	"monitor_printf ( mon , ""Client connected\\n"" )"		2588603	0					
ANR	2588676	Callee	monitor_printf		2588603	0					
ANR	2588677	Identifier	monitor_printf		2588603	0					
ANR	2588678	ArgumentList	mon		2588603	1					
ANR	2588679	Argument	mon		2588603	0					
ANR	2588680	Identifier	mon		2588603	0					
ANR	2588681	Argument	"""Client connected\\n"""		2588603	1					
ANR	2588682	PrimaryExpression	"""Client connected\\n"""		2588603	0					
ANR	2588683	ReturnType	void		2588603	1					
ANR	2588684	Identifier	do_info_vnc		2588603	2					
ANR	2588685	ParameterList	Monitor * mon		2588603	3					
ANR	2588686	Parameter	Monitor * mon	1:17:17:28	2588603	0	True				
ANR	2588687	ParameterType	Monitor *		2588603	0					
ANR	2588688	Identifier	mon		2588603	1					
ANR	2588689	CFGEntryNode	ENTRY		2588603		True				
ANR	2588690	CFGExitNode	EXIT		2588603		True				
ANR	2588691	Symbol	* vnc_display		2588603						
ANR	2588692	Symbol	vnc_display -> display		2588603						
ANR	2588693	Symbol	NULL		2588603						
ANR	2588694	Symbol	vnc_display -> clients		2588603						
ANR	2588695	Symbol	vnc_display		2588603						
ANR	2588696	Symbol	mon		2588603						
