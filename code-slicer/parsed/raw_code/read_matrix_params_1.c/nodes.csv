command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	7306517	File	/home/p4ultr4n/workplace/ReVeal/raw_code/read_matrix_params_1.c								
ANR	7306518	Function	read_matrix_params	1:0:0:2115							
ANR	7306519	FunctionDef	"read_matrix_params (MLPDecodeContext * m , unsigned int substr , GetBitContext * gbp)"		7306518	0					
ANR	7306520	CompoundStatement		3:0:93:2115	7306518	0					
ANR	7306521	IdentifierDeclStatement	SubStream * s = & m -> substream [ substr ] ;	5:4:100:136	7306518	0	True				
ANR	7306522	IdentifierDecl	* s = & m -> substream [ substr ]		7306518	0					
ANR	7306523	IdentifierDeclType	SubStream *		7306518	0					
ANR	7306524	Identifier	s		7306518	1					
ANR	7306525	AssignmentExpression	* s = & m -> substream [ substr ]		7306518	2		=			
ANR	7306526	Identifier	s		7306518	0					
ANR	7306527	UnaryOperationExpression	& m -> substream [ substr ]		7306518	1					
ANR	7306528	UnaryOperator	&		7306518	0					
ANR	7306529	ArrayIndexing	m -> substream [ substr ]		7306518	1					
ANR	7306530	PtrMemberAccess	m -> substream		7306518	0					
ANR	7306531	Identifier	m		7306518	0					
ANR	7306532	Identifier	substream		7306518	1					
ANR	7306533	Identifier	substr		7306518	1					
ANR	7306534	IdentifierDeclStatement	"unsigned int mat , ch ;"	7:4:143:163	7306518	1	True				
ANR	7306535	IdentifierDecl	mat		7306518	0					
ANR	7306536	IdentifierDeclType	unsigned int		7306518	0					
ANR	7306537	Identifier	mat		7306518	1					
ANR	7306538	IdentifierDecl	ch		7306518	1					
ANR	7306539	IdentifierDeclType	unsigned int		7306518	0					
ANR	7306540	Identifier	ch		7306518	1					
ANR	7306541	IdentifierDeclStatement	const int max_primitive_matrices = m -> avctx -> codec_id == AV_CODEC_ID_MLP ? MAX_MATRICES_MLP : MAX_MATRICES_TRUEHD ;	9:4:170:359	7306518	2	True				
ANR	7306542	IdentifierDecl	max_primitive_matrices = m -> avctx -> codec_id == AV_CODEC_ID_MLP ? MAX_MATRICES_MLP : MAX_MATRICES_TRUEHD		7306518	0					
ANR	7306543	IdentifierDeclType	const int		7306518	0					
ANR	7306544	Identifier	max_primitive_matrices		7306518	1					
ANR	7306545	AssignmentExpression	max_primitive_matrices = m -> avctx -> codec_id == AV_CODEC_ID_MLP ? MAX_MATRICES_MLP : MAX_MATRICES_TRUEHD		7306518	2		=			
ANR	7306546	Identifier	max_primitive_matrices		7306518	0					
ANR	7306547	ConditionalExpression	m -> avctx -> codec_id == AV_CODEC_ID_MLP ? MAX_MATRICES_MLP : MAX_MATRICES_TRUEHD		7306518	1					
ANR	7306548	Condition	m -> avctx -> codec_id == AV_CODEC_ID_MLP		7306518	0					
ANR	7306549	EqualityExpression	m -> avctx -> codec_id == AV_CODEC_ID_MLP		7306518	0		==			
ANR	7306550	PtrMemberAccess	m -> avctx -> codec_id		7306518	0					
ANR	7306551	PtrMemberAccess	m -> avctx		7306518	0					
ANR	7306552	Identifier	m		7306518	0					
ANR	7306553	Identifier	avctx		7306518	1					
ANR	7306554	Identifier	codec_id		7306518	1					
ANR	7306555	Identifier	AV_CODEC_ID_MLP		7306518	1					
ANR	7306556	Identifier	MAX_MATRICES_MLP		7306518	1					
ANR	7306557	Identifier	MAX_MATRICES_TRUEHD		7306518	2					
ANR	7306558	IfStatement	if ( m -> matrix_changed ++ > 1 )		7306518	3					
ANR	7306559	Condition	m -> matrix_changed ++ > 1	17:8:372:394	7306518	0	True				
ANR	7306560	RelationalExpression	m -> matrix_changed ++ > 1		7306518	0		>			
ANR	7306561	PostIncDecOperationExpression	m -> matrix_changed ++		7306518	0					
ANR	7306562	PtrMemberAccess	m -> matrix_changed		7306518	0					
ANR	7306563	Identifier	m		7306518	0					
ANR	7306564	Identifier	matrix_changed		7306518	1					
ANR	7306565	IncDec	++		7306518	1					
ANR	7306566	PrimaryExpression	1		7306518	1					
ANR	7306567	CompoundStatement		15:33:303:303	7306518	1					
ANR	7306568	ExpressionStatement	"av_log ( m -> avctx , AV_LOG_ERROR , ""Matrices may change only once per access unit.\\n"" )"	19:8:408:490	7306518	0	True				
ANR	7306569	CallExpression	"av_log ( m -> avctx , AV_LOG_ERROR , ""Matrices may change only once per access unit.\\n"" )"		7306518	0					
ANR	7306570	Callee	av_log		7306518	0					
ANR	7306571	Identifier	av_log		7306518	0					
ANR	7306572	ArgumentList	m -> avctx		7306518	1					
ANR	7306573	Argument	m -> avctx		7306518	0					
ANR	7306574	PtrMemberAccess	m -> avctx		7306518	0					
ANR	7306575	Identifier	m		7306518	0					
ANR	7306576	Identifier	avctx		7306518	1					
ANR	7306577	Argument	AV_LOG_ERROR		7306518	1					
ANR	7306578	Identifier	AV_LOG_ERROR		7306518	0					
ANR	7306579	Argument	"""Matrices may change only once per access unit.\\n"""		7306518	2					
ANR	7306580	PrimaryExpression	"""Matrices may change only once per access unit.\\n"""		7306518	0					
ANR	7306581	ReturnStatement	return AVERROR_INVALIDDATA ;	21:8:501:527	7306518	1	True				
ANR	7306582	Identifier	AVERROR_INVALIDDATA		7306518	0					
ANR	7306583	ExpressionStatement	"s -> num_primitive_matrices = get_bits ( gbp , 4 )"	27:4:543:587	7306518	4	True				
ANR	7306584	AssignmentExpression	"s -> num_primitive_matrices = get_bits ( gbp , 4 )"		7306518	0		=			
ANR	7306585	PtrMemberAccess	s -> num_primitive_matrices		7306518	0					
ANR	7306586	Identifier	s		7306518	0					
ANR	7306587	Identifier	num_primitive_matrices		7306518	1					
ANR	7306588	CallExpression	"get_bits ( gbp , 4 )"		7306518	1					
ANR	7306589	Callee	get_bits		7306518	0					
ANR	7306590	Identifier	get_bits		7306518	0					
ANR	7306591	ArgumentList	gbp		7306518	1					
ANR	7306592	Argument	gbp		7306518	0					
ANR	7306593	Identifier	gbp		7306518	0					
ANR	7306594	Argument	4		7306518	1					
ANR	7306595	PrimaryExpression	4		7306518	0					
ANR	7306596	IfStatement	if ( s -> num_primitive_matrices > max_primitive_matrices )		7306518	5					
ANR	7306597	Condition	s -> num_primitive_matrices > max_primitive_matrices	31:8:600:649	7306518	0	True				
ANR	7306598	RelationalExpression	s -> num_primitive_matrices > max_primitive_matrices		7306518	0		>			
ANR	7306599	PtrMemberAccess	s -> num_primitive_matrices		7306518	0					
ANR	7306600	Identifier	s		7306518	0					
ANR	7306601	Identifier	num_primitive_matrices		7306518	1					
ANR	7306602	Identifier	max_primitive_matrices		7306518	1					
ANR	7306603	CompoundStatement		29:60:558:558	7306518	1					
ANR	7306604	ExpressionStatement	"av_log ( m -> avctx , AV_LOG_ERROR , ""Number of primitive matrices cannot be greater than %d.\\n"" , max_primitive_matrices )"	33:8:663:810	7306518	0	True				
ANR	7306605	CallExpression	"av_log ( m -> avctx , AV_LOG_ERROR , ""Number of primitive matrices cannot be greater than %d.\\n"" , max_primitive_matrices )"		7306518	0					
ANR	7306606	Callee	av_log		7306518	0					
ANR	7306607	Identifier	av_log		7306518	0					
ANR	7306608	ArgumentList	m -> avctx		7306518	1					
ANR	7306609	Argument	m -> avctx		7306518	0					
ANR	7306610	PtrMemberAccess	m -> avctx		7306518	0					
ANR	7306611	Identifier	m		7306518	0					
ANR	7306612	Identifier	avctx		7306518	1					
ANR	7306613	Argument	AV_LOG_ERROR		7306518	1					
ANR	7306614	Identifier	AV_LOG_ERROR		7306518	0					
ANR	7306615	Argument	"""Number of primitive matrices cannot be greater than %d.\\n"""		7306518	2					
ANR	7306616	PrimaryExpression	"""Number of primitive matrices cannot be greater than %d.\\n"""		7306518	0					
ANR	7306617	Argument	max_primitive_matrices		7306518	3					
ANR	7306618	Identifier	max_primitive_matrices		7306518	0					
ANR	7306619	ReturnStatement	return AVERROR_INVALIDDATA ;	40:8:822:848	7306518	1	True				
ANR	7306620	Identifier	AVERROR_INVALIDDATA		7306518	0					
ANR	7306621	ForStatement	for ( mat = 0 ; mat < s -> num_primitive_matrices ; mat ++ )		7306518	6					
ANR	7306622	ForInit	mat = 0 ;	46:9:869:876	7306518	0	True				
ANR	7306623	AssignmentExpression	mat = 0		7306518	0		=			
ANR	7306624	Identifier	mat		7306518	0					
ANR	7306625	PrimaryExpression	0		7306518	1					
ANR	7306626	Condition	mat < s -> num_primitive_matrices	46:18:878:908	7306518	1	True				
ANR	7306627	RelationalExpression	mat < s -> num_primitive_matrices		7306518	0		<			
ANR	7306628	Identifier	mat		7306518	0					
ANR	7306629	PtrMemberAccess	s -> num_primitive_matrices		7306518	1					
ANR	7306630	Identifier	s		7306518	0					
ANR	7306631	Identifier	num_primitive_matrices		7306518	1					
ANR	7306632	PostIncDecOperationExpression	mat ++	46:51:911:915	7306518	2	True				
ANR	7306633	Identifier	mat		7306518	0					
ANR	7306634	IncDec	++		7306518	1					
ANR	7306635	CompoundStatement		46:8:835:858	7306518	3					
ANR	7306636	IdentifierDeclStatement	"int frac_bits , max_chan ;"	48:8:929:952	7306518	0	True				
ANR	7306637	IdentifierDecl	frac_bits		7306518	0					
ANR	7306638	IdentifierDeclType	int		7306518	0					
ANR	7306639	Identifier	frac_bits		7306518	1					
ANR	7306640	IdentifierDecl	max_chan		7306518	1					
ANR	7306641	IdentifierDeclType	int		7306518	0					
ANR	7306642	Identifier	max_chan		7306518	1					
ANR	7306643	ExpressionStatement	"s -> matrix_out_ch [ mat ] = get_bits ( gbp , 4 )"	50:8:963:1003	7306518	1	True				
ANR	7306644	AssignmentExpression	"s -> matrix_out_ch [ mat ] = get_bits ( gbp , 4 )"		7306518	0		=			
ANR	7306645	ArrayIndexing	s -> matrix_out_ch [ mat ]		7306518	0					
ANR	7306646	PtrMemberAccess	s -> matrix_out_ch		7306518	0					
ANR	7306647	Identifier	s		7306518	0					
ANR	7306648	Identifier	matrix_out_ch		7306518	1					
ANR	7306649	Identifier	mat		7306518	1					
ANR	7306650	CallExpression	"get_bits ( gbp , 4 )"		7306518	1					
ANR	7306651	Callee	get_bits		7306518	0					
ANR	7306652	Identifier	get_bits		7306518	0					
ANR	7306653	ArgumentList	gbp		7306518	1					
ANR	7306654	Argument	gbp		7306518	0					
ANR	7306655	Identifier	gbp		7306518	0					
ANR	7306656	Argument	4		7306518	1					
ANR	7306657	PrimaryExpression	4		7306518	0					
ANR	7306658	ExpressionStatement	"frac_bits = get_bits ( gbp , 4 )"	52:8:1014:1054	7306518	2	True				
ANR	7306659	AssignmentExpression	"frac_bits = get_bits ( gbp , 4 )"		7306518	0		=			
ANR	7306660	Identifier	frac_bits		7306518	0					
ANR	7306661	CallExpression	"get_bits ( gbp , 4 )"		7306518	1					
ANR	7306662	Callee	get_bits		7306518	0					
ANR	7306663	Identifier	get_bits		7306518	0					
ANR	7306664	ArgumentList	gbp		7306518	1					
ANR	7306665	Argument	gbp		7306518	0					
ANR	7306666	Identifier	gbp		7306518	0					
ANR	7306667	Argument	4		7306518	1					
ANR	7306668	PrimaryExpression	4		7306518	0					
ANR	7306669	ExpressionStatement	s -> lsb_bypass [ mat ] = get_bits1 ( gbp )	54:8:1065:1103	7306518	3	True				
ANR	7306670	AssignmentExpression	s -> lsb_bypass [ mat ] = get_bits1 ( gbp )		7306518	0		=			
ANR	7306671	ArrayIndexing	s -> lsb_bypass [ mat ]		7306518	0					
ANR	7306672	PtrMemberAccess	s -> lsb_bypass		7306518	0					
ANR	7306673	Identifier	s		7306518	0					
ANR	7306674	Identifier	lsb_bypass		7306518	1					
ANR	7306675	Identifier	mat		7306518	1					
ANR	7306676	CallExpression	get_bits1 ( gbp )		7306518	1					
ANR	7306677	Callee	get_bits1		7306518	0					
ANR	7306678	Identifier	get_bits1		7306518	0					
ANR	7306679	ArgumentList	gbp		7306518	1					
ANR	7306680	Argument	gbp		7306518	0					
ANR	7306681	Identifier	gbp		7306518	0					
ANR	7306682	IfStatement	if ( s -> matrix_out_ch [ mat ] > s -> max_matrix_channel )		7306518	4					
ANR	7306683	Condition	s -> matrix_out_ch [ mat ] > s -> max_matrix_channel	58:12:1120:1164	7306518	0	True				
ANR	7306684	RelationalExpression	s -> matrix_out_ch [ mat ] > s -> max_matrix_channel		7306518	0		>			
ANR	7306685	ArrayIndexing	s -> matrix_out_ch [ mat ]		7306518	0					
ANR	7306686	PtrMemberAccess	s -> matrix_out_ch		7306518	0					
ANR	7306687	Identifier	s		7306518	0					
ANR	7306688	Identifier	matrix_out_ch		7306518	1					
ANR	7306689	Identifier	mat		7306518	1					
ANR	7306690	PtrMemberAccess	s -> max_matrix_channel		7306518	1					
ANR	7306691	Identifier	s		7306518	0					
ANR	7306692	Identifier	max_matrix_channel		7306518	1					
ANR	7306693	CompoundStatement		56:59:1073:1073	7306518	1					
ANR	7306694	ExpressionStatement	"av_log ( m -> avctx , AV_LOG_ERROR , ""Invalid channel %d specified as output from matrix.\\n"" , s -> matrix_out_ch [ mat ] )"	60:12:1182:1334	7306518	0	True				
ANR	7306695	CallExpression	"av_log ( m -> avctx , AV_LOG_ERROR , ""Invalid channel %d specified as output from matrix.\\n"" , s -> matrix_out_ch [ mat ] )"		7306518	0					
ANR	7306696	Callee	av_log		7306518	0					
ANR	7306697	Identifier	av_log		7306518	0					
ANR	7306698	ArgumentList	m -> avctx		7306518	1					
ANR	7306699	Argument	m -> avctx		7306518	0					
ANR	7306700	PtrMemberAccess	m -> avctx		7306518	0					
ANR	7306701	Identifier	m		7306518	0					
ANR	7306702	Identifier	avctx		7306518	1					
ANR	7306703	Argument	AV_LOG_ERROR		7306518	1					
ANR	7306704	Identifier	AV_LOG_ERROR		7306518	0					
ANR	7306705	Argument	"""Invalid channel %d specified as output from matrix.\\n"""		7306518	2					
ANR	7306706	PrimaryExpression	"""Invalid channel %d specified as output from matrix.\\n"""		7306518	0					
ANR	7306707	Argument	s -> matrix_out_ch [ mat ]		7306518	3					
ANR	7306708	ArrayIndexing	s -> matrix_out_ch [ mat ]		7306518	0					
ANR	7306709	PtrMemberAccess	s -> matrix_out_ch		7306518	0					
ANR	7306710	Identifier	s		7306518	0					
ANR	7306711	Identifier	matrix_out_ch		7306518	1					
ANR	7306712	Identifier	mat		7306518	1					
ANR	7306713	ReturnStatement	return AVERROR_INVALIDDATA ;	66:12:1349:1375	7306518	1	True				
ANR	7306714	Identifier	AVERROR_INVALIDDATA		7306518	0					
ANR	7306715	IfStatement	if ( frac_bits > 14 )		7306518	5					
ANR	7306716	Condition	frac_bits > 14	70:12:1401:1414	7306518	0	True				
ANR	7306717	RelationalExpression	frac_bits > 14		7306518	0		>			
ANR	7306718	Identifier	frac_bits		7306518	0					
ANR	7306719	PrimaryExpression	14		7306518	1					
ANR	7306720	CompoundStatement		68:28:1323:1323	7306518	1					
ANR	7306721	ExpressionStatement	"av_log ( m -> avctx , AV_LOG_ERROR , ""Too many fractional bits specified.\\n"" )"	72:12:1432:1524	7306518	0	True				
ANR	7306722	CallExpression	"av_log ( m -> avctx , AV_LOG_ERROR , ""Too many fractional bits specified.\\n"" )"		7306518	0					
ANR	7306723	Callee	av_log		7306518	0					
ANR	7306724	Identifier	av_log		7306518	0					
ANR	7306725	ArgumentList	m -> avctx		7306518	1					
ANR	7306726	Argument	m -> avctx		7306518	0					
ANR	7306727	PtrMemberAccess	m -> avctx		7306518	0					
ANR	7306728	Identifier	m		7306518	0					
ANR	7306729	Identifier	avctx		7306518	1					
ANR	7306730	Argument	AV_LOG_ERROR		7306518	1					
ANR	7306731	Identifier	AV_LOG_ERROR		7306518	0					
ANR	7306732	Argument	"""Too many fractional bits specified.\\n"""		7306518	2					
ANR	7306733	PrimaryExpression	"""Too many fractional bits specified.\\n"""		7306518	0					
ANR	7306734	ReturnStatement	return AVERROR_INVALIDDATA ;	76:12:1539:1565	7306518	1	True				
ANR	7306735	Identifier	AVERROR_INVALIDDATA		7306518	0					
ANR	7306736	ExpressionStatement	max_chan = s -> max_matrix_channel	82:8:1589:1621	7306518	6	True				
ANR	7306737	AssignmentExpression	max_chan = s -> max_matrix_channel		7306518	0		=			
ANR	7306738	Identifier	max_chan		7306518	0					
ANR	7306739	PtrMemberAccess	s -> max_matrix_channel		7306518	1					
ANR	7306740	Identifier	s		7306518	0					
ANR	7306741	Identifier	max_matrix_channel		7306518	1					
ANR	7306742	IfStatement	if ( ! s -> noise_type )		7306518	7					
ANR	7306743	Condition	! s -> noise_type	84:12:1636:1649	7306518	0	True				
ANR	7306744	UnaryOperationExpression	! s -> noise_type		7306518	0					
ANR	7306745	UnaryOperator	!		7306518	0					
ANR	7306746	PtrMemberAccess	s -> noise_type		7306518	1					
ANR	7306747	Identifier	s		7306518	0					
ANR	7306748	Identifier	noise_type		7306518	1					
ANR	7306749	ExpressionStatement	max_chan += 2	86:12:1665:1676	7306518	1	True				
ANR	7306750	AssignmentExpression	max_chan += 2		7306518	0		+=			
ANR	7306751	Identifier	max_chan		7306518	0					
ANR	7306752	PrimaryExpression	2		7306518	1					
ANR	7306753	ForStatement	for ( ch = 0 ; ch <= max_chan ; ch ++ )		7306518	8					
ANR	7306754	ForInit	ch = 0 ;	90:13:1694:1700	7306518	0	True				
ANR	7306755	AssignmentExpression	ch = 0		7306518	0		=			
ANR	7306756	Identifier	ch		7306518	0					
ANR	7306757	PrimaryExpression	0		7306518	1					
ANR	7306758	Condition	ch <= max_chan	90:21:1702:1715	7306518	1	True				
ANR	7306759	RelationalExpression	ch <= max_chan		7306518	0		<=			
ANR	7306760	Identifier	ch		7306518	0					
ANR	7306761	Identifier	max_chan		7306518	1					
ANR	7306762	PostIncDecOperationExpression	ch ++	90:37:1718:1721	7306518	2	True				
ANR	7306763	Identifier	ch		7306518	0					
ANR	7306764	IncDec	++		7306518	1					
ANR	7306765	CompoundStatement		90:12:1645:1662	7306518	3					
ANR	7306766	IdentifierDeclStatement	int coeff_val = 0 ;	92:12:1739:1756	7306518	0	True				
ANR	7306767	IdentifierDecl	coeff_val = 0		7306518	0					
ANR	7306768	IdentifierDeclType	int		7306518	0					
ANR	7306769	Identifier	coeff_val		7306518	1					
ANR	7306770	AssignmentExpression	coeff_val = 0		7306518	2		=			
ANR	7306771	Identifier	coeff_val		7306518	0					
ANR	7306772	PrimaryExpression	0		7306518	1					
ANR	7306773	IfStatement	if ( get_bits1 ( gbp ) )		7306518	1					
ANR	7306774	Condition	get_bits1 ( gbp )	94:16:1775:1788	7306518	0	True				
ANR	7306775	CallExpression	get_bits1 ( gbp )		7306518	0					
ANR	7306776	Callee	get_bits1		7306518	0					
ANR	7306777	Identifier	get_bits1		7306518	0					
ANR	7306778	ArgumentList	gbp		7306518	1					
ANR	7306779	Argument	gbp		7306518	0					
ANR	7306780	Identifier	gbp		7306518	0					
ANR	7306781	ExpressionStatement	"coeff_val = get_sbits ( gbp , frac_bits + 2 )"	96:16:1808:1849	7306518	1	True				
ANR	7306782	AssignmentExpression	"coeff_val = get_sbits ( gbp , frac_bits + 2 )"		7306518	0		=			
ANR	7306783	Identifier	coeff_val		7306518	0					
ANR	7306784	CallExpression	"get_sbits ( gbp , frac_bits + 2 )"		7306518	1					
ANR	7306785	Callee	get_sbits		7306518	0					
ANR	7306786	Identifier	get_sbits		7306518	0					
ANR	7306787	ArgumentList	gbp		7306518	1					
ANR	7306788	Argument	gbp		7306518	0					
ANR	7306789	Identifier	gbp		7306518	0					
ANR	7306790	Argument	frac_bits + 2		7306518	1					
ANR	7306791	AdditiveExpression	frac_bits + 2		7306518	0		+			
ANR	7306792	Identifier	frac_bits		7306518	0					
ANR	7306793	PrimaryExpression	2		7306518	1					
ANR	7306794	ExpressionStatement	s -> matrix_coeff [ mat ] [ ch ] = coeff_val * ( 1 << ( 14 - frac_bits ) )	100:12:1866:1928	7306518	2	True				
ANR	7306795	AssignmentExpression	s -> matrix_coeff [ mat ] [ ch ] = coeff_val * ( 1 << ( 14 - frac_bits ) )		7306518	0		=			
ANR	7306796	ArrayIndexing	s -> matrix_coeff [ mat ] [ ch ]		7306518	0					
ANR	7306797	ArrayIndexing	s -> matrix_coeff [ mat ]		7306518	0					
ANR	7306798	PtrMemberAccess	s -> matrix_coeff		7306518	0					
ANR	7306799	Identifier	s		7306518	0					
ANR	7306800	Identifier	matrix_coeff		7306518	1					
ANR	7306801	Identifier	mat		7306518	1					
ANR	7306802	Identifier	ch		7306518	1					
ANR	7306803	MultiplicativeExpression	coeff_val * ( 1 << ( 14 - frac_bits ) )		7306518	1		*			
ANR	7306804	Identifier	coeff_val		7306518	0					
ANR	7306805	ShiftExpression	1 << ( 14 - frac_bits )		7306518	1		<<			
ANR	7306806	PrimaryExpression	1		7306518	0					
ANR	7306807	AdditiveExpression	14 - frac_bits		7306518	1		-			
ANR	7306808	PrimaryExpression	14		7306518	0					
ANR	7306809	Identifier	frac_bits		7306518	1					
ANR	7306810	IfStatement	if ( s -> noise_type )		7306518	9					
ANR	7306811	Condition	s -> noise_type	106:12:1956:1968	7306518	0	True				
ANR	7306812	PtrMemberAccess	s -> noise_type		7306518	0					
ANR	7306813	Identifier	s		7306518	0					
ANR	7306814	Identifier	noise_type		7306518	1					
ANR	7306815	ExpressionStatement	"s -> matrix_noise_shift [ mat ] = get_bits ( gbp , 4 )"	108:12:1984:2029	7306518	1	True				
ANR	7306816	AssignmentExpression	"s -> matrix_noise_shift [ mat ] = get_bits ( gbp , 4 )"		7306518	0		=			
ANR	7306817	ArrayIndexing	s -> matrix_noise_shift [ mat ]		7306518	0					
ANR	7306818	PtrMemberAccess	s -> matrix_noise_shift		7306518	0					
ANR	7306819	Identifier	s		7306518	0					
ANR	7306820	Identifier	matrix_noise_shift		7306518	1					
ANR	7306821	Identifier	mat		7306518	1					
ANR	7306822	CallExpression	"get_bits ( gbp , 4 )"		7306518	1					
ANR	7306823	Callee	get_bits		7306518	0					
ANR	7306824	Identifier	get_bits		7306518	0					
ANR	7306825	ArgumentList	gbp		7306518	1					
ANR	7306826	Argument	gbp		7306518	0					
ANR	7306827	Identifier	gbp		7306518	0					
ANR	7306828	Argument	4		7306518	1					
ANR	7306829	PrimaryExpression	4		7306518	0					
ANR	7306830	ElseStatement	else		7306518	0					
ANR	7306831	ExpressionStatement	s -> matrix_noise_shift [ mat ] = 0	112:12:2058:2088	7306518	0	True				
ANR	7306832	AssignmentExpression	s -> matrix_noise_shift [ mat ] = 0		7306518	0		=			
ANR	7306833	ArrayIndexing	s -> matrix_noise_shift [ mat ]		7306518	0					
ANR	7306834	PtrMemberAccess	s -> matrix_noise_shift		7306518	0					
ANR	7306835	Identifier	s		7306518	0					
ANR	7306836	Identifier	matrix_noise_shift		7306518	1					
ANR	7306837	Identifier	mat		7306518	1					
ANR	7306838	PrimaryExpression	0		7306518	1					
ANR	7306839	ReturnStatement	return 0 ;	118:4:2104:2112	7306518	7	True				
ANR	7306840	PrimaryExpression	0		7306518	0					
ANR	7306841	ReturnType	static int		7306518	1					
ANR	7306842	Identifier	read_matrix_params		7306518	2					
ANR	7306843	ParameterList	"MLPDecodeContext * m , unsigned int substr , GetBitContext * gbp"		7306518	3					
ANR	7306844	Parameter	MLPDecodeContext * m	1:30:30:48	7306518	0	True				
ANR	7306845	ParameterType	MLPDecodeContext *		7306518	0					
ANR	7306846	Identifier	m		7306518	1					
ANR	7306847	Parameter	unsigned int substr	1:51:51:69	7306518	1	True				
ANR	7306848	ParameterType	unsigned int		7306518	0					
ANR	7306849	Identifier	substr		7306518	1					
ANR	7306850	Parameter	GetBitContext * gbp	1:72:72:89	7306518	2	True				
ANR	7306851	ParameterType	GetBitContext *		7306518	0					
ANR	7306852	Identifier	gbp		7306518	1					
ANR	7306853	CFGEntryNode	ENTRY		7306518		True				
ANR	7306854	CFGExitNode	EXIT		7306518		True				
ANR	7306855	Symbol	s -> matrix_out_ch		7306518						
ANR	7306856	Symbol	get_sbits		7306518						
ANR	7306857	Symbol	s -> max_matrix_channel		7306518						
ANR	7306858	Symbol	s -> matrix_noise_shift		7306518						
ANR	7306859	Symbol	get_bits		7306518						
ANR	7306860	Symbol	max_chan		7306518						
ANR	7306861	Symbol	* ch		7306518						
ANR	7306862	Symbol	* mat		7306518						
ANR	7306863	Symbol	m -> matrix_changed		7306518						
ANR	7306864	Symbol	MAX_MATRICES_TRUEHD		7306518						
ANR	7306865	Symbol	s -> num_primitive_matrices		7306518						
ANR	7306866	Symbol	AV_CODEC_ID_MLP		7306518						
ANR	7306867	Symbol	s -> matrix_coeff		7306518						
ANR	7306868	Symbol	* * s		7306518						
ANR	7306869	Symbol	max_primitive_matrices		7306518						
ANR	7306870	Symbol	s -> noise_type		7306518						
ANR	7306871	Symbol	coeff_val		7306518						
ANR	7306872	Symbol	* s -> matrix_coeff		7306518						
ANR	7306873	Symbol	m -> substream		7306518						
ANR	7306874	Symbol	* * m		7306518						
ANR	7306875	Symbol	m -> avctx -> codec_id		7306518						
ANR	7306876	Symbol	mat		7306518						
ANR	7306877	Symbol	* m -> avctx		7306518						
ANR	7306878	Symbol	AV_LOG_ERROR		7306518						
ANR	7306879	Symbol	* s -> matrix_out_ch		7306518						
ANR	7306880	Symbol	ch		7306518						
ANR	7306881	Symbol	m -> avctx		7306518						
ANR	7306882	Symbol	* s -> lsb_bypass		7306518						
ANR	7306883	Symbol	get_bits1		7306518						
ANR	7306884	Symbol	frac_bits		7306518						
ANR	7306885	Symbol	* s -> matrix_noise_shift		7306518						
ANR	7306886	Symbol	m		7306518						
ANR	7306887	Symbol	substr		7306518						
ANR	7306888	Symbol	MAX_MATRICES_MLP		7306518						
ANR	7306889	Symbol	s -> lsb_bypass		7306518						
ANR	7306890	Symbol	* * * s		7306518						
ANR	7306891	Symbol	s		7306518						
ANR	7306892	Symbol	gbp		7306518						
ANR	7306893	Symbol	* * mat		7306518						
ANR	7306894	Symbol	* m		7306518						
ANR	7306895	Symbol	AVERROR_INVALIDDATA		7306518						
ANR	7306896	Symbol	* * s -> matrix_coeff		7306518						
ANR	7306897	Symbol	* s		7306518						
