command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8767304	File	/home/p4ultr4n/workplace/ReVeal/raw_code/v9fs_synth_preadv_0.c								
ANR	8767305	Function	v9fs_synth_preadv	1:0:0:775							
ANR	8767306	FunctionDef	"v9fs_synth_preadv (FsContext * ctx , V9fsFidOpenState * fs , const struct iovec * iov , int iovcnt , off_t offset)"		8767305	0					
ANR	8767307	CompoundStatement		7:0:191:775	8767305	0					
ANR	8767308	IdentifierDeclStatement	"int i , count = 0 , rcount ;"	9:4:198:222	8767305	0	True				
ANR	8767309	IdentifierDecl	i		8767305	0					
ANR	8767310	IdentifierDeclType	int		8767305	0					
ANR	8767311	Identifier	i		8767305	1					
ANR	8767312	IdentifierDecl	count = 0		8767305	1					
ANR	8767313	IdentifierDeclType	int		8767305	0					
ANR	8767314	Identifier	count		8767305	1					
ANR	8767315	AssignmentExpression	count = 0		8767305	2		=			
ANR	8767316	Identifier	count		8767305	0					
ANR	8767317	PrimaryExpression	0		8767305	1					
ANR	8767318	IdentifierDecl	rcount		8767305	2					
ANR	8767319	IdentifierDeclType	int		8767305	0					
ANR	8767320	Identifier	rcount		8767305	1					
ANR	8767321	IdentifierDeclStatement	V9fsSynthOpenState * synth_open = fs -> private ;	11:4:229:273	8767305	1	True				
ANR	8767322	IdentifierDecl	* synth_open = fs -> private		8767305	0					
ANR	8767323	IdentifierDeclType	V9fsSynthOpenState *		8767305	0					
ANR	8767324	Identifier	synth_open		8767305	1					
ANR	8767325	AssignmentExpression	* synth_open = fs -> private		8767305	2		=			
ANR	8767326	Identifier	synth_open		8767305	0					
ANR	8767327	PtrMemberAccess	fs -> private		8767305	1					
ANR	8767328	Identifier	fs		8767305	0					
ANR	8767329	Identifier	private		8767305	1					
ANR	8767330	IdentifierDeclStatement	V9fsSynthNode * node = synth_open -> node ;	13:4:280:318	8767305	2	True				
ANR	8767331	IdentifierDecl	* node = synth_open -> node		8767305	0					
ANR	8767332	IdentifierDeclType	V9fsSynthNode *		8767305	0					
ANR	8767333	Identifier	node		8767305	1					
ANR	8767334	AssignmentExpression	* node = synth_open -> node		8767305	2		=			
ANR	8767335	Identifier	node		8767305	0					
ANR	8767336	PtrMemberAccess	synth_open -> node		8767305	1					
ANR	8767337	Identifier	synth_open		8767305	0					
ANR	8767338	Identifier	node		8767305	1					
ANR	8767339	IfStatement	if ( ! node -> attr -> read )		8767305	3					
ANR	8767340	Condition	! node -> attr -> read	15:8:329:345	8767305	0	True				
ANR	8767341	UnaryOperationExpression	! node -> attr -> read		8767305	0					
ANR	8767342	UnaryOperator	!		8767305	0					
ANR	8767343	PtrMemberAccess	node -> attr -> read		8767305	1					
ANR	8767344	PtrMemberAccess	node -> attr		8767305	0					
ANR	8767345	Identifier	node		8767305	0					
ANR	8767346	Identifier	attr		8767305	1					
ANR	8767347	Identifier	read		8767305	1					
ANR	8767348	CompoundStatement		9:27:156:156	8767305	1					
ANR	8767349	ExpressionStatement	errno = EPERM	17:8:359:372	8767305	0	True				
ANR	8767350	AssignmentExpression	errno = EPERM		8767305	0		=			
ANR	8767351	Identifier	errno		8767305	0					
ANR	8767352	Identifier	EPERM		8767305	1					
ANR	8767353	ReturnStatement	return - 1 ;	19:8:383:392	8767305	1	True				
ANR	8767354	UnaryOperationExpression	- 1		8767305	0					
ANR	8767355	UnaryOperator	-		8767305	0					
ANR	8767356	PrimaryExpression	1		8767305	1					
ANR	8767357	ForStatement	for ( i = 0 ; i < iovcnt ; i ++ )		8767305	4					
ANR	8767358	ForInit	i = 0 ;	23:9:411:416	8767305	0	True				
ANR	8767359	AssignmentExpression	i = 0		8767305	0		=			
ANR	8767360	Identifier	i		8767305	0					
ANR	8767361	PrimaryExpression	0		8767305	1					
ANR	8767362	Condition	i < iovcnt	23:16:418:427	8767305	1	True				
ANR	8767363	RelationalExpression	i < iovcnt		8767305	0		<			
ANR	8767364	Identifier	i		8767305	0					
ANR	8767365	Identifier	iovcnt		8767305	1					
ANR	8767366	PostIncDecOperationExpression	i ++	23:28:430:432	8767305	2	True				
ANR	8767367	Identifier	i		8767305	0					
ANR	8767368	IncDec	++		8767305	1					
ANR	8767369	CompoundStatement		17:33:243:243	8767305	3					
ANR	8767370	ExpressionStatement	"rcount = node -> attr -> read ( iov [ i ] . iov_base , iov [ i ] . iov_len , offset , node -> private )"	25:8:446:562	8767305	0	True				
ANR	8767371	AssignmentExpression	"rcount = node -> attr -> read ( iov [ i ] . iov_base , iov [ i ] . iov_len , offset , node -> private )"		8767305	0		=			
ANR	8767372	Identifier	rcount		8767305	0					
ANR	8767373	CallExpression	"node -> attr -> read ( iov [ i ] . iov_base , iov [ i ] . iov_len , offset , node -> private )"		8767305	1					
ANR	8767374	Callee	node -> attr -> read		8767305	0					
ANR	8767375	PtrMemberAccess	node -> attr -> read		8767305	0					
ANR	8767376	PtrMemberAccess	node -> attr		8767305	0					
ANR	8767377	Identifier	node		8767305	0					
ANR	8767378	Identifier	attr		8767305	1					
ANR	8767379	Identifier	read		8767305	1					
ANR	8767380	ArgumentList	iov [ i ] . iov_base		8767305	1					
ANR	8767381	Argument	iov [ i ] . iov_base		8767305	0					
ANR	8767382	MemberAccess	iov [ i ] . iov_base		8767305	0					
ANR	8767383	ArrayIndexing	iov [ i ]		8767305	0					
ANR	8767384	Identifier	iov		8767305	0					
ANR	8767385	Identifier	i		8767305	1					
ANR	8767386	Identifier	iov_base		8767305	1					
ANR	8767387	Argument	iov [ i ] . iov_len		8767305	1					
ANR	8767388	MemberAccess	iov [ i ] . iov_len		8767305	0					
ANR	8767389	ArrayIndexing	iov [ i ]		8767305	0					
ANR	8767390	Identifier	iov		8767305	0					
ANR	8767391	Identifier	i		8767305	1					
ANR	8767392	Identifier	iov_len		8767305	1					
ANR	8767393	Argument	offset		8767305	2					
ANR	8767394	Identifier	offset		8767305	0					
ANR	8767395	Argument	node -> private		8767305	3					
ANR	8767396	PtrMemberAccess	node -> private		8767305	0					
ANR	8767397	Identifier	node		8767305	0					
ANR	8767398	Identifier	private		8767305	1					
ANR	8767399	ExpressionStatement	offset += rcount	29:8:573:589	8767305	1	True				
ANR	8767400	AssignmentExpression	offset += rcount		8767305	0		+=			
ANR	8767401	Identifier	offset		8767305	0					
ANR	8767402	Identifier	rcount		8767305	1					
ANR	8767403	ExpressionStatement	count += rcount	31:8:600:616	8767305	2	True				
ANR	8767404	AssignmentExpression	count += rcount		8767305	0		+=			
ANR	8767405	Identifier	count		8767305	0					
ANR	8767406	Identifier	rcount		8767305	1					
ANR	8767407	IfStatement	if ( rcount < iov [ i ] . iov_len )		8767305	3					
ANR	8767408	Condition	rcount < iov [ i ] . iov_len	35:12:690:712	8767305	0	True				
ANR	8767409	RelationalExpression	rcount < iov [ i ] . iov_len		8767305	0		<			
ANR	8767410	Identifier	rcount		8767305	0					
ANR	8767411	MemberAccess	iov [ i ] . iov_len		8767305	1					
ANR	8767412	ArrayIndexing	iov [ i ]		8767305	0					
ANR	8767413	Identifier	iov		8767305	0					
ANR	8767414	Identifier	i		8767305	1					
ANR	8767415	Identifier	iov_len		8767305	1					
ANR	8767416	CompoundStatement		29:37:523:523	8767305	1					
ANR	8767417	BreakStatement	break ;	37:12:730:735	8767305	0	True				
ANR	8767418	ReturnStatement	return count ;	43:4:760:772	8767305	5	True				
ANR	8767419	Identifier	count		8767305	0					
ANR	8767420	ReturnType	static ssize_t		8767305	1					
ANR	8767421	Identifier	v9fs_synth_preadv		8767305	2					
ANR	8767422	ParameterList	"FsContext * ctx , V9fsFidOpenState * fs , const struct iovec * iov , int iovcnt , off_t offset"		8767305	3					
ANR	8767423	Parameter	FsContext * ctx	1:33:33:46	8767305	0	True				
ANR	8767424	ParameterType	FsContext *		8767305	0					
ANR	8767425	Identifier	ctx		8767305	1					
ANR	8767426	Parameter	V9fsFidOpenState * fs	1:49:49:68	8767305	1	True				
ANR	8767427	ParameterType	V9fsFidOpenState *		8767305	0					
ANR	8767428	Identifier	fs		8767305	1					
ANR	8767429	Parameter	const struct iovec * iov	3:33:105:127	8767305	2	True				
ANR	8767430	ParameterType	const struct iovec *		8767305	0					
ANR	8767431	Identifier	iov		8767305	1					
ANR	8767432	Parameter	int iovcnt	5:33:164:173	8767305	3	True				
ANR	8767433	ParameterType	int		8767305	0					
ANR	8767434	Identifier	iovcnt		8767305	1					
ANR	8767435	Parameter	off_t offset	5:45:176:187	8767305	4	True				
ANR	8767436	ParameterType	off_t		8767305	0					
ANR	8767437	Identifier	offset		8767305	1					
ANR	8767438	CFGEntryNode	ENTRY		8767305		True				
ANR	8767439	CFGExitNode	EXIT		8767305		True				
ANR	8767440	Symbol	node -> attr -> read		8767305						
ANR	8767441	Symbol	EPERM		8767305						
ANR	8767442	Symbol	* iov		8767305						
ANR	8767443	Symbol	fs		8767305						
ANR	8767444	Symbol	* fs		8767305						
ANR	8767445	Symbol	iov		8767305						
ANR	8767446	Symbol	* node -> attr		8767305						
ANR	8767447	Symbol	iovcnt		8767305						
ANR	8767448	Symbol	* node		8767305						
ANR	8767449	Symbol	node -> private		8767305						
ANR	8767450	Symbol	synth_open -> node		8767305						
ANR	8767451	Symbol	errno		8767305						
ANR	8767452	Symbol	offset		8767305						
ANR	8767453	Symbol	ctx		8767305						
ANR	8767454	Symbol	count		8767305						
ANR	8767455	Symbol	i		8767305						
ANR	8767456	Symbol	node -> attr		8767305						
ANR	8767457	Symbol	iov [ i ] . iov_len		8767305						
ANR	8767458	Symbol	* synth_open		8767305						
ANR	8767459	Symbol	iov [ i ] . iov_base		8767305						
ANR	8767460	Symbol	node		8767305						
ANR	8767461	Symbol	rcount		8767305						
ANR	8767462	Symbol	* i		8767305						
ANR	8767463	Symbol	* * node		8767305						
ANR	8767464	Symbol	synth_open		8767305						
ANR	8767465	Symbol	fs -> private		8767305						
