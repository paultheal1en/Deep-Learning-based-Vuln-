command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6721934	File	/home/p4ultr4n/workplace/ReVeal/raw_code/process_ipmovie_chunk_0.c								
ANR	6721935	Function	process_ipmovie_chunk	1:0:0:11426							
ANR	6721936	FunctionDef	"process_ipmovie_chunk (IPMVEContext * s , AVIOContext * pb , AVPacket * pkt)"		6721935	0					
ANR	6721937	CompoundStatement		5:0:88:11426	6721935	0					
ANR	6721938	IdentifierDeclStatement	unsigned char chunk_preamble [ CHUNK_PREAMBLE_SIZE ] ;	7:4:95:144	6721935	0	True				
ANR	6721939	IdentifierDecl	chunk_preamble [ CHUNK_PREAMBLE_SIZE ]		6721935	0					
ANR	6721940	IdentifierDeclType	unsigned char [ CHUNK_PREAMBLE_SIZE ]		6721935	0					
ANR	6721941	Identifier	chunk_preamble		6721935	1					
ANR	6721942	Identifier	CHUNK_PREAMBLE_SIZE		6721935	2					
ANR	6721943	IdentifierDeclStatement	int chunk_type ;	9:4:151:165	6721935	1	True				
ANR	6721944	IdentifierDecl	chunk_type		6721935	0					
ANR	6721945	IdentifierDeclType	int		6721935	0					
ANR	6721946	Identifier	chunk_type		6721935	1					
ANR	6721947	IdentifierDeclStatement	int chunk_size ;	11:4:172:186	6721935	2	True				
ANR	6721948	IdentifierDecl	chunk_size		6721935	0					
ANR	6721949	IdentifierDeclType	int		6721935	0					
ANR	6721950	Identifier	chunk_size		6721935	1					
ANR	6721951	IdentifierDeclStatement	unsigned char opcode_preamble [ OPCODE_PREAMBLE_SIZE ] ;	13:4:193:244	6721935	3	True				
ANR	6721952	IdentifierDecl	opcode_preamble [ OPCODE_PREAMBLE_SIZE ]		6721935	0					
ANR	6721953	IdentifierDeclType	unsigned char [ OPCODE_PREAMBLE_SIZE ]		6721935	0					
ANR	6721954	Identifier	opcode_preamble		6721935	1					
ANR	6721955	Identifier	OPCODE_PREAMBLE_SIZE		6721935	2					
ANR	6721956	IdentifierDeclStatement	unsigned char opcode_type ;	15:4:251:276	6721935	4	True				
ANR	6721957	IdentifierDecl	opcode_type		6721935	0					
ANR	6721958	IdentifierDeclType	unsigned char		6721935	0					
ANR	6721959	Identifier	opcode_type		6721935	1					
ANR	6721960	IdentifierDeclStatement	unsigned char opcode_version ;	17:4:283:311	6721935	5	True				
ANR	6721961	IdentifierDecl	opcode_version		6721935	0					
ANR	6721962	IdentifierDeclType	unsigned char		6721935	0					
ANR	6721963	Identifier	opcode_version		6721935	1					
ANR	6721964	IdentifierDeclStatement	int opcode_size ;	19:4:318:333	6721935	6	True				
ANR	6721965	IdentifierDecl	opcode_size		6721935	0					
ANR	6721966	IdentifierDeclType	int		6721935	0					
ANR	6721967	Identifier	opcode_size		6721935	1					
ANR	6721968	IdentifierDeclStatement	unsigned char scratch [ 1024 ] ;	21:4:340:367	6721935	7	True				
ANR	6721969	IdentifierDecl	scratch [ 1024 ]		6721935	0					
ANR	6721970	IdentifierDeclType	unsigned char [ 1024 ]		6721935	0					
ANR	6721971	Identifier	scratch		6721935	1					
ANR	6721972	PrimaryExpression	1024		6721935	2					
ANR	6721973	IdentifierDeclStatement	"int i , j ;"	23:4:374:382	6721935	8	True				
ANR	6721974	IdentifierDecl	i		6721935	0					
ANR	6721975	IdentifierDeclType	int		6721935	0					
ANR	6721976	Identifier	i		6721935	1					
ANR	6721977	IdentifierDecl	j		6721935	1					
ANR	6721978	IdentifierDeclType	int		6721935	0					
ANR	6721979	Identifier	j		6721935	1					
ANR	6721980	IdentifierDeclStatement	"int first_color , last_color ;"	25:4:389:416	6721935	9	True				
ANR	6721981	IdentifierDecl	first_color		6721935	0					
ANR	6721982	IdentifierDeclType	int		6721935	0					
ANR	6721983	Identifier	first_color		6721935	1					
ANR	6721984	IdentifierDecl	last_color		6721935	1					
ANR	6721985	IdentifierDeclType	int		6721935	0					
ANR	6721986	Identifier	last_color		6721935	1					
ANR	6721987	IdentifierDeclStatement	int audio_flags ;	27:4:423:438	6721935	10	True				
ANR	6721988	IdentifierDecl	audio_flags		6721935	0					
ANR	6721989	IdentifierDeclType	int		6721935	0					
ANR	6721990	Identifier	audio_flags		6721935	1					
ANR	6721991	IdentifierDeclStatement	"unsigned char r , g , b ;"	29:4:445:466	6721935	11	True				
ANR	6721992	IdentifierDecl	r		6721935	0					
ANR	6721993	IdentifierDeclType	unsigned char		6721935	0					
ANR	6721994	Identifier	r		6721935	1					
ANR	6721995	IdentifierDecl	g		6721935	1					
ANR	6721996	IdentifierDeclType	unsigned char		6721935	0					
ANR	6721997	Identifier	g		6721935	1					
ANR	6721998	IdentifierDecl	b		6721935	2					
ANR	6721999	IdentifierDeclType	unsigned char		6721935	0					
ANR	6722000	Identifier	b		6721935	1					
ANR	6722001	IdentifierDeclStatement	"unsigned int width , height ;"	31:4:473:499	6721935	12	True				
ANR	6722002	IdentifierDecl	width		6721935	0					
ANR	6722003	IdentifierDeclType	unsigned int		6721935	0					
ANR	6722004	Identifier	width		6721935	1					
ANR	6722005	IdentifierDecl	height		6721935	1					
ANR	6722006	IdentifierDeclType	unsigned int		6721935	0					
ANR	6722007	Identifier	height		6721935	1					
ANR	6722008	ExpressionStatement	"chunk_type = load_ipmovie_packet ( s , pb , pkt )"	37:4:556:600	6721935	13	True				
ANR	6722009	AssignmentExpression	"chunk_type = load_ipmovie_packet ( s , pb , pkt )"		6721935	0		=			
ANR	6722010	Identifier	chunk_type		6721935	0					
ANR	6722011	CallExpression	"load_ipmovie_packet ( s , pb , pkt )"		6721935	1					
ANR	6722012	Callee	load_ipmovie_packet		6721935	0					
ANR	6722013	Identifier	load_ipmovie_packet		6721935	0					
ANR	6722014	ArgumentList	s		6721935	1					
ANR	6722015	Argument	s		6721935	0					
ANR	6722016	Identifier	s		6721935	0					
ANR	6722017	Argument	pb		6721935	1					
ANR	6722018	Identifier	pb		6721935	0					
ANR	6722019	Argument	pkt		6721935	2					
ANR	6722020	Identifier	pkt		6721935	0					
ANR	6722021	IfStatement	if ( chunk_type != CHUNK_DONE )		6721935	14					
ANR	6722022	Condition	chunk_type != CHUNK_DONE	39:8:611:634	6721935	0	True				
ANR	6722023	EqualityExpression	chunk_type != CHUNK_DONE		6721935	0		!=			
ANR	6722024	Identifier	chunk_type		6721935	0					
ANR	6722025	Identifier	CHUNK_DONE		6721935	1					
ANR	6722026	ReturnStatement	return chunk_type ;	41:8:646:663	6721935	1	True				
ANR	6722027	Identifier	chunk_type		6721935	0					
ANR	6722028	IfStatement	if ( avio_feof ( pb ) )		6721935	15					
ANR	6722029	Condition	avio_feof ( pb )	47:8:749:761	6721935	0	True				
ANR	6722030	CallExpression	avio_feof ( pb )		6721935	0					
ANR	6722031	Callee	avio_feof		6721935	0					
ANR	6722032	Identifier	avio_feof		6721935	0					
ANR	6722033	ArgumentList	pb		6721935	1					
ANR	6722034	Argument	pb		6721935	0					
ANR	6722035	Identifier	pb		6721935	0					
ANR	6722036	ReturnStatement	return CHUNK_EOF ;	49:8:773:789	6721935	1	True				
ANR	6722037	Identifier	CHUNK_EOF		6721935	0					
ANR	6722038	IfStatement	"if ( avio_read ( pb , chunk_preamble , CHUNK_PREAMBLE_SIZE ) != CHUNK_PREAMBLE_SIZE )"		6721935	16					
ANR	6722039	Condition	"avio_read ( pb , chunk_preamble , CHUNK_PREAMBLE_SIZE ) != CHUNK_PREAMBLE_SIZE"	51:8:800:881	6721935	0	True				
ANR	6722040	EqualityExpression	"avio_read ( pb , chunk_preamble , CHUNK_PREAMBLE_SIZE ) != CHUNK_PREAMBLE_SIZE"		6721935	0		!=			
ANR	6722041	CallExpression	"avio_read ( pb , chunk_preamble , CHUNK_PREAMBLE_SIZE )"		6721935	0					
ANR	6722042	Callee	avio_read		6721935	0					
ANR	6722043	Identifier	avio_read		6721935	0					
ANR	6722044	ArgumentList	pb		6721935	1					
ANR	6722045	Argument	pb		6721935	0					
ANR	6722046	Identifier	pb		6721935	0					
ANR	6722047	Argument	chunk_preamble		6721935	1					
ANR	6722048	Identifier	chunk_preamble		6721935	0					
ANR	6722049	Argument	CHUNK_PREAMBLE_SIZE		6721935	2					
ANR	6722050	Identifier	CHUNK_PREAMBLE_SIZE		6721935	0					
ANR	6722051	Identifier	CHUNK_PREAMBLE_SIZE		6721935	1					
ANR	6722052	ReturnStatement	return CHUNK_BAD ;	55:8:893:909	6721935	1	True				
ANR	6722053	Identifier	CHUNK_BAD		6721935	0					
ANR	6722054	ExpressionStatement	chunk_size = AV_RL16 ( & chunk_preamble [ 0 ] )	57:4:916:956	6721935	17	True				
ANR	6722055	AssignmentExpression	chunk_size = AV_RL16 ( & chunk_preamble [ 0 ] )		6721935	0		=			
ANR	6722056	Identifier	chunk_size		6721935	0					
ANR	6722057	CallExpression	AV_RL16 ( & chunk_preamble [ 0 ] )		6721935	1					
ANR	6722058	Callee	AV_RL16		6721935	0					
ANR	6722059	Identifier	AV_RL16		6721935	0					
ANR	6722060	ArgumentList	& chunk_preamble [ 0 ]		6721935	1					
ANR	6722061	Argument	& chunk_preamble [ 0 ]		6721935	0					
ANR	6722062	UnaryOperationExpression	& chunk_preamble [ 0 ]		6721935	0					
ANR	6722063	UnaryOperator	&		6721935	0					
ANR	6722064	ArrayIndexing	chunk_preamble [ 0 ]		6721935	1					
ANR	6722065	Identifier	chunk_preamble		6721935	0					
ANR	6722066	PrimaryExpression	0		6721935	1					
ANR	6722067	ExpressionStatement	chunk_type = AV_RL16 ( & chunk_preamble [ 2 ] )	59:4:963:1003	6721935	18	True				
ANR	6722068	AssignmentExpression	chunk_type = AV_RL16 ( & chunk_preamble [ 2 ] )		6721935	0		=			
ANR	6722069	Identifier	chunk_type		6721935	0					
ANR	6722070	CallExpression	AV_RL16 ( & chunk_preamble [ 2 ] )		6721935	1					
ANR	6722071	Callee	AV_RL16		6721935	0					
ANR	6722072	Identifier	AV_RL16		6721935	0					
ANR	6722073	ArgumentList	& chunk_preamble [ 2 ]		6721935	1					
ANR	6722074	Argument	& chunk_preamble [ 2 ]		6721935	0					
ANR	6722075	UnaryOperationExpression	& chunk_preamble [ 2 ]		6721935	0					
ANR	6722076	UnaryOperator	&		6721935	0					
ANR	6722077	ArrayIndexing	chunk_preamble [ 2 ]		6721935	1					
ANR	6722078	Identifier	chunk_preamble		6721935	0					
ANR	6722079	PrimaryExpression	2		6721935	1					
ANR	6722080	ExpressionStatement	"av_log ( s -> avf , AV_LOG_TRACE , ""chunk type 0x%04X, 0x%04X bytes: "" , chunk_type , chunk_size )"	63:4:1012:1101	6721935	19	True				
ANR	6722081	CallExpression	"av_log ( s -> avf , AV_LOG_TRACE , ""chunk type 0x%04X, 0x%04X bytes: "" , chunk_type , chunk_size )"		6721935	0					
ANR	6722082	Callee	av_log		6721935	0					
ANR	6722083	Identifier	av_log		6721935	0					
ANR	6722084	ArgumentList	s -> avf		6721935	1					
ANR	6722085	Argument	s -> avf		6721935	0					
ANR	6722086	PtrMemberAccess	s -> avf		6721935	0					
ANR	6722087	Identifier	s		6721935	0					
ANR	6722088	Identifier	avf		6721935	1					
ANR	6722089	Argument	AV_LOG_TRACE		6721935	1					
ANR	6722090	Identifier	AV_LOG_TRACE		6721935	0					
ANR	6722091	Argument	"""chunk type 0x%04X, 0x%04X bytes: """		6721935	2					
ANR	6722092	PrimaryExpression	"""chunk type 0x%04X, 0x%04X bytes: """		6721935	0					
ANR	6722093	Argument	chunk_type		6721935	3					
ANR	6722094	Identifier	chunk_type		6721935	0					
ANR	6722095	Argument	chunk_size		6721935	4					
ANR	6722096	Identifier	chunk_size		6721935	0					
ANR	6722097	SwitchStatement	switch ( chunk_type )		6721935	20					
ANR	6722098	Condition	chunk_type	67:12:1118:1127	6721935	0	True				
ANR	6722099	Identifier	chunk_type		6721935	0					
ANR	6722100	CompoundStatement		63:24:1041:1041	6721935	1					
ANR	6722101	Label	case CHUNK_INIT_AUDIO :	71:4:1139:1160	6721935	0	True				
ANR	6722102	Identifier	CHUNK_INIT_AUDIO		6721935	0					
ANR	6722103	ExpressionStatement	"av_log ( s -> avf , AV_LOG_TRACE , ""initialize audio\\n"" )"	73:8:1171:1221	6721935	1	True				
ANR	6722104	CallExpression	"av_log ( s -> avf , AV_LOG_TRACE , ""initialize audio\\n"" )"		6721935	0					
ANR	6722105	Callee	av_log		6721935	0					
ANR	6722106	Identifier	av_log		6721935	0					
ANR	6722107	ArgumentList	s -> avf		6721935	1					
ANR	6722108	Argument	s -> avf		6721935	0					
ANR	6722109	PtrMemberAccess	s -> avf		6721935	0					
ANR	6722110	Identifier	s		6721935	0					
ANR	6722111	Identifier	avf		6721935	1					
ANR	6722112	Argument	AV_LOG_TRACE		6721935	1					
ANR	6722113	Identifier	AV_LOG_TRACE		6721935	0					
ANR	6722114	Argument	"""initialize audio\\n"""		6721935	2					
ANR	6722115	PrimaryExpression	"""initialize audio\\n"""		6721935	0					
ANR	6722116	BreakStatement	break ;	75:8:1232:1237	6721935	2	True				
ANR	6722117	Label	case CHUNK_AUDIO_ONLY :	79:4:1246:1267	6721935	3	True				
ANR	6722118	Identifier	CHUNK_AUDIO_ONLY		6721935	0					
ANR	6722119	ExpressionStatement	"av_log ( s -> avf , AV_LOG_TRACE , ""audio only\\n"" )"	81:8:1278:1322	6721935	4	True				
ANR	6722120	CallExpression	"av_log ( s -> avf , AV_LOG_TRACE , ""audio only\\n"" )"		6721935	0					
ANR	6722121	Callee	av_log		6721935	0					
ANR	6722122	Identifier	av_log		6721935	0					
ANR	6722123	ArgumentList	s -> avf		6721935	1					
ANR	6722124	Argument	s -> avf		6721935	0					
ANR	6722125	PtrMemberAccess	s -> avf		6721935	0					
ANR	6722126	Identifier	s		6721935	0					
ANR	6722127	Identifier	avf		6721935	1					
ANR	6722128	Argument	AV_LOG_TRACE		6721935	1					
ANR	6722129	Identifier	AV_LOG_TRACE		6721935	0					
ANR	6722130	Argument	"""audio only\\n"""		6721935	2					
ANR	6722131	PrimaryExpression	"""audio only\\n"""		6721935	0					
ANR	6722132	BreakStatement	break ;	83:8:1333:1338	6721935	5	True				
ANR	6722133	Label	case CHUNK_INIT_VIDEO :	87:4:1347:1368	6721935	6	True				
ANR	6722134	Identifier	CHUNK_INIT_VIDEO		6721935	0					
ANR	6722135	ExpressionStatement	"av_log ( s -> avf , AV_LOG_TRACE , ""initialize video\\n"" )"	89:8:1379:1429	6721935	7	True				
ANR	6722136	CallExpression	"av_log ( s -> avf , AV_LOG_TRACE , ""initialize video\\n"" )"		6721935	0					
ANR	6722137	Callee	av_log		6721935	0					
ANR	6722138	Identifier	av_log		6721935	0					
ANR	6722139	ArgumentList	s -> avf		6721935	1					
ANR	6722140	Argument	s -> avf		6721935	0					
ANR	6722141	PtrMemberAccess	s -> avf		6721935	0					
ANR	6722142	Identifier	s		6721935	0					
ANR	6722143	Identifier	avf		6721935	1					
ANR	6722144	Argument	AV_LOG_TRACE		6721935	1					
ANR	6722145	Identifier	AV_LOG_TRACE		6721935	0					
ANR	6722146	Argument	"""initialize video\\n"""		6721935	2					
ANR	6722147	PrimaryExpression	"""initialize video\\n"""		6721935	0					
ANR	6722148	BreakStatement	break ;	91:8:1440:1445	6721935	8	True				
ANR	6722149	Label	case CHUNK_VIDEO :	95:4:1454:1470	6721935	9	True				
ANR	6722150	Identifier	CHUNK_VIDEO		6721935	0					
ANR	6722151	ExpressionStatement	"av_log ( s -> avf , AV_LOG_TRACE , ""video (and audio)\\n"" )"	97:8:1481:1532	6721935	10	True				
ANR	6722152	CallExpression	"av_log ( s -> avf , AV_LOG_TRACE , ""video (and audio)\\n"" )"		6721935	0					
ANR	6722153	Callee	av_log		6721935	0					
ANR	6722154	Identifier	av_log		6721935	0					
ANR	6722155	ArgumentList	s -> avf		6721935	1					
ANR	6722156	Argument	s -> avf		6721935	0					
ANR	6722157	PtrMemberAccess	s -> avf		6721935	0					
ANR	6722158	Identifier	s		6721935	0					
ANR	6722159	Identifier	avf		6721935	1					
ANR	6722160	Argument	AV_LOG_TRACE		6721935	1					
ANR	6722161	Identifier	AV_LOG_TRACE		6721935	0					
ANR	6722162	Argument	"""video (and audio)\\n"""		6721935	2					
ANR	6722163	PrimaryExpression	"""video (and audio)\\n"""		6721935	0					
ANR	6722164	BreakStatement	break ;	99:8:1543:1548	6721935	11	True				
ANR	6722165	Label	case CHUNK_SHUTDOWN :	103:4:1557:1576	6721935	12	True				
ANR	6722166	Identifier	CHUNK_SHUTDOWN		6721935	0					
ANR	6722167	ExpressionStatement	"av_log ( s -> avf , AV_LOG_TRACE , ""shutdown\\n"" )"	105:8:1587:1629	6721935	13	True				
ANR	6722168	CallExpression	"av_log ( s -> avf , AV_LOG_TRACE , ""shutdown\\n"" )"		6721935	0					
ANR	6722169	Callee	av_log		6721935	0					
ANR	6722170	Identifier	av_log		6721935	0					
ANR	6722171	ArgumentList	s -> avf		6721935	1					
ANR	6722172	Argument	s -> avf		6721935	0					
ANR	6722173	PtrMemberAccess	s -> avf		6721935	0					
ANR	6722174	Identifier	s		6721935	0					
ANR	6722175	Identifier	avf		6721935	1					
ANR	6722176	Argument	AV_LOG_TRACE		6721935	1					
ANR	6722177	Identifier	AV_LOG_TRACE		6721935	0					
ANR	6722178	Argument	"""shutdown\\n"""		6721935	2					
ANR	6722179	PrimaryExpression	"""shutdown\\n"""		6721935	0					
ANR	6722180	BreakStatement	break ;	107:8:1640:1645	6721935	14	True				
ANR	6722181	Label	case CHUNK_END :	111:4:1654:1668	6721935	15	True				
ANR	6722182	Identifier	CHUNK_END		6721935	0					
ANR	6722183	ExpressionStatement	"av_log ( s -> avf , AV_LOG_TRACE , ""end\\n"" )"	113:8:1679:1716	6721935	16	True				
ANR	6722184	CallExpression	"av_log ( s -> avf , AV_LOG_TRACE , ""end\\n"" )"		6721935	0					
ANR	6722185	Callee	av_log		6721935	0					
ANR	6722186	Identifier	av_log		6721935	0					
ANR	6722187	ArgumentList	s -> avf		6721935	1					
ANR	6722188	Argument	s -> avf		6721935	0					
ANR	6722189	PtrMemberAccess	s -> avf		6721935	0					
ANR	6722190	Identifier	s		6721935	0					
ANR	6722191	Identifier	avf		6721935	1					
ANR	6722192	Argument	AV_LOG_TRACE		6721935	1					
ANR	6722193	Identifier	AV_LOG_TRACE		6721935	0					
ANR	6722194	Argument	"""end\\n"""		6721935	2					
ANR	6722195	PrimaryExpression	"""end\\n"""		6721935	0					
ANR	6722196	BreakStatement	break ;	115:8:1727:1732	6721935	17	True				
ANR	6722197	Label	default :	119:4:1741:1748	6721935	18	True				
ANR	6722198	Identifier	default		6721935	0					
ANR	6722199	ExpressionStatement	"av_log ( s -> avf , AV_LOG_TRACE , ""invalid chunk\\n"" )"	121:8:1759:1806	6721935	19	True				
ANR	6722200	CallExpression	"av_log ( s -> avf , AV_LOG_TRACE , ""invalid chunk\\n"" )"		6721935	0					
ANR	6722201	Callee	av_log		6721935	0					
ANR	6722202	Identifier	av_log		6721935	0					
ANR	6722203	ArgumentList	s -> avf		6721935	1					
ANR	6722204	Argument	s -> avf		6721935	0					
ANR	6722205	PtrMemberAccess	s -> avf		6721935	0					
ANR	6722206	Identifier	s		6721935	0					
ANR	6722207	Identifier	avf		6721935	1					
ANR	6722208	Argument	AV_LOG_TRACE		6721935	1					
ANR	6722209	Identifier	AV_LOG_TRACE		6721935	0					
ANR	6722210	Argument	"""invalid chunk\\n"""		6721935	2					
ANR	6722211	PrimaryExpression	"""invalid chunk\\n"""		6721935	0					
ANR	6722212	ExpressionStatement	chunk_type = CHUNK_BAD	123:8:1817:1839	6721935	20	True				
ANR	6722213	AssignmentExpression	chunk_type = CHUNK_BAD		6721935	0		=			
ANR	6722214	Identifier	chunk_type		6721935	0					
ANR	6722215	Identifier	CHUNK_BAD		6721935	1					
ANR	6722216	BreakStatement	break ;	125:8:1850:1855	6721935	21	True				
ANR	6722217	WhileStatement	while ( ( chunk_size > 0 ) && ( chunk_type != CHUNK_BAD ) )		6721935	21					
ANR	6722218	Condition	( chunk_size > 0 ) && ( chunk_type != CHUNK_BAD )	133:11:1880:1924	6721935	0	True				
ANR	6722219	AndExpression	( chunk_size > 0 ) && ( chunk_type != CHUNK_BAD )		6721935	0		&&			
ANR	6722220	RelationalExpression	chunk_size > 0		6721935	0		>			
ANR	6722221	Identifier	chunk_size		6721935	0					
ANR	6722222	PrimaryExpression	0		6721935	1					
ANR	6722223	EqualityExpression	chunk_type != CHUNK_BAD		6721935	1		!=			
ANR	6722224	Identifier	chunk_type		6721935	0					
ANR	6722225	Identifier	CHUNK_BAD		6721935	1					
ANR	6722226	CompoundStatement		129:58:1838:1838	6721935	1					
ANR	6722227	IfStatement	if ( avio_feof ( pb ) )		6721935	0					
ANR	6722228	Condition	avio_feof ( pb )	139:12:2021:2033	6721935	0	True				
ANR	6722229	CallExpression	avio_feof ( pb )		6721935	0					
ANR	6722230	Callee	avio_feof		6721935	0					
ANR	6722231	Identifier	avio_feof		6721935	0					
ANR	6722232	ArgumentList	pb		6721935	1					
ANR	6722233	Argument	pb		6721935	0					
ANR	6722234	Identifier	pb		6721935	0					
ANR	6722235	CompoundStatement		135:27:1947:1947	6721935	1					
ANR	6722236	ExpressionStatement	chunk_type = CHUNK_EOF	141:12:2051:2073	6721935	0	True				
ANR	6722237	AssignmentExpression	chunk_type = CHUNK_EOF		6721935	0		=			
ANR	6722238	Identifier	chunk_type		6721935	0					
ANR	6722239	Identifier	CHUNK_EOF		6721935	1					
ANR	6722240	BreakStatement	break ;	143:12:2088:2093	6721935	1	True				
ANR	6722241	IfStatement	"if ( avio_read ( pb , opcode_preamble , CHUNK_PREAMBLE_SIZE ) != CHUNK_PREAMBLE_SIZE )"		6721935	1					
ANR	6722242	Condition	"avio_read ( pb , opcode_preamble , CHUNK_PREAMBLE_SIZE ) != CHUNK_PREAMBLE_SIZE"	147:12:2119:2205	6721935	0	True				
ANR	6722243	EqualityExpression	"avio_read ( pb , opcode_preamble , CHUNK_PREAMBLE_SIZE ) != CHUNK_PREAMBLE_SIZE"		6721935	0		!=			
ANR	6722244	CallExpression	"avio_read ( pb , opcode_preamble , CHUNK_PREAMBLE_SIZE )"		6721935	0					
ANR	6722245	Callee	avio_read		6721935	0					
ANR	6722246	Identifier	avio_read		6721935	0					
ANR	6722247	ArgumentList	pb		6721935	1					
ANR	6722248	Argument	pb		6721935	0					
ANR	6722249	Identifier	pb		6721935	0					
ANR	6722250	Argument	opcode_preamble		6721935	1					
ANR	6722251	Identifier	opcode_preamble		6721935	0					
ANR	6722252	Argument	CHUNK_PREAMBLE_SIZE		6721935	2					
ANR	6722253	Identifier	CHUNK_PREAMBLE_SIZE		6721935	0					
ANR	6722254	Identifier	CHUNK_PREAMBLE_SIZE		6721935	1					
ANR	6722255	CompoundStatement		145:33:2119:2119	6721935	1					
ANR	6722256	ExpressionStatement	chunk_type = CHUNK_BAD	151:12:2223:2245	6721935	0	True				
ANR	6722257	AssignmentExpression	chunk_type = CHUNK_BAD		6721935	0		=			
ANR	6722258	Identifier	chunk_type		6721935	0					
ANR	6722259	Identifier	CHUNK_BAD		6721935	1					
ANR	6722260	BreakStatement	break ;	153:12:2260:2265	6721935	1	True				
ANR	6722261	ExpressionStatement	opcode_size = AV_RL16 ( & opcode_preamble [ 0 ] )	159:8:2289:2331	6721935	2	True				
ANR	6722262	AssignmentExpression	opcode_size = AV_RL16 ( & opcode_preamble [ 0 ] )		6721935	0		=			
ANR	6722263	Identifier	opcode_size		6721935	0					
ANR	6722264	CallExpression	AV_RL16 ( & opcode_preamble [ 0 ] )		6721935	1					
ANR	6722265	Callee	AV_RL16		6721935	0					
ANR	6722266	Identifier	AV_RL16		6721935	0					
ANR	6722267	ArgumentList	& opcode_preamble [ 0 ]		6721935	1					
ANR	6722268	Argument	& opcode_preamble [ 0 ]		6721935	0					
ANR	6722269	UnaryOperationExpression	& opcode_preamble [ 0 ]		6721935	0					
ANR	6722270	UnaryOperator	&		6721935	0					
ANR	6722271	ArrayIndexing	opcode_preamble [ 0 ]		6721935	1					
ANR	6722272	Identifier	opcode_preamble		6721935	0					
ANR	6722273	PrimaryExpression	0		6721935	1					
ANR	6722274	ExpressionStatement	opcode_type = opcode_preamble [ 2 ]	161:8:2342:2374	6721935	3	True				
ANR	6722275	AssignmentExpression	opcode_type = opcode_preamble [ 2 ]		6721935	0		=			
ANR	6722276	Identifier	opcode_type		6721935	0					
ANR	6722277	ArrayIndexing	opcode_preamble [ 2 ]		6721935	1					
ANR	6722278	Identifier	opcode_preamble		6721935	0					
ANR	6722279	PrimaryExpression	2		6721935	1					
ANR	6722280	ExpressionStatement	opcode_version = opcode_preamble [ 3 ]	163:8:2385:2420	6721935	4	True				
ANR	6722281	AssignmentExpression	opcode_version = opcode_preamble [ 3 ]		6721935	0		=			
ANR	6722282	Identifier	opcode_version		6721935	0					
ANR	6722283	ArrayIndexing	opcode_preamble [ 3 ]		6721935	1					
ANR	6722284	Identifier	opcode_preamble		6721935	0					
ANR	6722285	PrimaryExpression	3		6721935	1					
ANR	6722286	ExpressionStatement	chunk_size -= OPCODE_PREAMBLE_SIZE	167:8:2433:2467	6721935	5	True				
ANR	6722287	AssignmentExpression	chunk_size -= OPCODE_PREAMBLE_SIZE		6721935	0		-=			
ANR	6722288	Identifier	chunk_size		6721935	0					
ANR	6722289	Identifier	OPCODE_PREAMBLE_SIZE		6721935	1					
ANR	6722290	ExpressionStatement	chunk_size -= opcode_size	169:8:2478:2503	6721935	6	True				
ANR	6722291	AssignmentExpression	chunk_size -= opcode_size		6721935	0		-=			
ANR	6722292	Identifier	chunk_size		6721935	0					
ANR	6722293	Identifier	opcode_size		6721935	1					
ANR	6722294	IfStatement	if ( chunk_size < 0 )		6721935	7					
ANR	6722295	Condition	chunk_size < 0	171:12:2518:2531	6721935	0	True				
ANR	6722296	RelationalExpression	chunk_size < 0		6721935	0		<			
ANR	6722297	Identifier	chunk_size		6721935	0					
ANR	6722298	PrimaryExpression	0		6721935	1					
ANR	6722299	CompoundStatement		167:28:2445:2445	6721935	1					
ANR	6722300	ExpressionStatement	"av_log ( s -> avf , AV_LOG_TRACE , ""chunk_size countdown just went negative\\n"" )"	173:12:2549:2622	6721935	0	True				
ANR	6722301	CallExpression	"av_log ( s -> avf , AV_LOG_TRACE , ""chunk_size countdown just went negative\\n"" )"		6721935	0					
ANR	6722302	Callee	av_log		6721935	0					
ANR	6722303	Identifier	av_log		6721935	0					
ANR	6722304	ArgumentList	s -> avf		6721935	1					
ANR	6722305	Argument	s -> avf		6721935	0					
ANR	6722306	PtrMemberAccess	s -> avf		6721935	0					
ANR	6722307	Identifier	s		6721935	0					
ANR	6722308	Identifier	avf		6721935	1					
ANR	6722309	Argument	AV_LOG_TRACE		6721935	1					
ANR	6722310	Identifier	AV_LOG_TRACE		6721935	0					
ANR	6722311	Argument	"""chunk_size countdown just went negative\\n"""		6721935	2					
ANR	6722312	PrimaryExpression	"""chunk_size countdown just went negative\\n"""		6721935	0					
ANR	6722313	ExpressionStatement	chunk_type = CHUNK_BAD	175:12:2637:2659	6721935	1	True				
ANR	6722314	AssignmentExpression	chunk_type = CHUNK_BAD		6721935	0		=			
ANR	6722315	Identifier	chunk_type		6721935	0					
ANR	6722316	Identifier	CHUNK_BAD		6721935	1					
ANR	6722317	BreakStatement	break ;	177:12:2674:2679	6721935	2	True				
ANR	6722318	ExpressionStatement	"av_log ( s -> avf , AV_LOG_TRACE , ""  opcode type %02X, version %d, 0x%04X bytes: "" , opcode_type , opcode_version , opcode_size )"	183:8:2703:2840	6721935	8	True				
ANR	6722319	CallExpression	"av_log ( s -> avf , AV_LOG_TRACE , ""  opcode type %02X, version %d, 0x%04X bytes: "" , opcode_type , opcode_version , opcode_size )"		6721935	0					
ANR	6722320	Callee	av_log		6721935	0					
ANR	6722321	Identifier	av_log		6721935	0					
ANR	6722322	ArgumentList	s -> avf		6721935	1					
ANR	6722323	Argument	s -> avf		6721935	0					
ANR	6722324	PtrMemberAccess	s -> avf		6721935	0					
ANR	6722325	Identifier	s		6721935	0					
ANR	6722326	Identifier	avf		6721935	1					
ANR	6722327	Argument	AV_LOG_TRACE		6721935	1					
ANR	6722328	Identifier	AV_LOG_TRACE		6721935	0					
ANR	6722329	Argument	"""  opcode type %02X, version %d, 0x%04X bytes: """		6721935	2					
ANR	6722330	PrimaryExpression	"""  opcode type %02X, version %d, 0x%04X bytes: """		6721935	0					
ANR	6722331	Argument	opcode_type		6721935	3					
ANR	6722332	Identifier	opcode_type		6721935	0					
ANR	6722333	Argument	opcode_version		6721935	4					
ANR	6722334	Identifier	opcode_version		6721935	0					
ANR	6722335	Argument	opcode_size		6721935	5					
ANR	6722336	Identifier	opcode_size		6721935	0					
ANR	6722337	SwitchStatement	switch ( opcode_type )		6721935	9					
ANR	6722338	Condition	opcode_type	187:16:2859:2869	6721935	0	True				
ANR	6722339	Identifier	opcode_type		6721935	0					
ANR	6722340	CompoundStatement		183:29:2783:2783	6721935	1					
ANR	6722341	Label	case OPCODE_END_OF_STREAM :	191:8:2885:2910	6721935	0	True				
ANR	6722342	Identifier	OPCODE_END_OF_STREAM		6721935	0					
ANR	6722343	ExpressionStatement	"av_log ( s -> avf , AV_LOG_TRACE , ""end of stream\\n"" )"	193:12:2925:2972	6721935	1	True				
ANR	6722344	CallExpression	"av_log ( s -> avf , AV_LOG_TRACE , ""end of stream\\n"" )"		6721935	0					
ANR	6722345	Callee	av_log		6721935	0					
ANR	6722346	Identifier	av_log		6721935	0					
ANR	6722347	ArgumentList	s -> avf		6721935	1					
ANR	6722348	Argument	s -> avf		6721935	0					
ANR	6722349	PtrMemberAccess	s -> avf		6721935	0					
ANR	6722350	Identifier	s		6721935	0					
ANR	6722351	Identifier	avf		6721935	1					
ANR	6722352	Argument	AV_LOG_TRACE		6721935	1					
ANR	6722353	Identifier	AV_LOG_TRACE		6721935	0					
ANR	6722354	Argument	"""end of stream\\n"""		6721935	2					
ANR	6722355	PrimaryExpression	"""end of stream\\n"""		6721935	0					
ANR	6722356	ExpressionStatement	"avio_skip ( pb , opcode_size )"	195:12:2987:3013	6721935	2	True				
ANR	6722357	CallExpression	"avio_skip ( pb , opcode_size )"		6721935	0					
ANR	6722358	Callee	avio_skip		6721935	0					
ANR	6722359	Identifier	avio_skip		6721935	0					
ANR	6722360	ArgumentList	pb		6721935	1					
ANR	6722361	Argument	pb		6721935	0					
ANR	6722362	Identifier	pb		6721935	0					
ANR	6722363	Argument	opcode_size		6721935	1					
ANR	6722364	Identifier	opcode_size		6721935	0					
ANR	6722365	BreakStatement	break ;	197:12:3028:3033	6721935	3	True				
ANR	6722366	Label	case OPCODE_END_OF_CHUNK :	201:8:3046:3070	6721935	4	True				
ANR	6722367	Identifier	OPCODE_END_OF_CHUNK		6721935	0					
ANR	6722368	ExpressionStatement	"av_log ( s -> avf , AV_LOG_TRACE , ""end of chunk\\n"" )"	203:12:3085:3131	6721935	5	True				
ANR	6722369	CallExpression	"av_log ( s -> avf , AV_LOG_TRACE , ""end of chunk\\n"" )"		6721935	0					
ANR	6722370	Callee	av_log		6721935	0					
ANR	6722371	Identifier	av_log		6721935	0					
ANR	6722372	ArgumentList	s -> avf		6721935	1					
ANR	6722373	Argument	s -> avf		6721935	0					
ANR	6722374	PtrMemberAccess	s -> avf		6721935	0					
ANR	6722375	Identifier	s		6721935	0					
ANR	6722376	Identifier	avf		6721935	1					
ANR	6722377	Argument	AV_LOG_TRACE		6721935	1					
ANR	6722378	Identifier	AV_LOG_TRACE		6721935	0					
ANR	6722379	Argument	"""end of chunk\\n"""		6721935	2					
ANR	6722380	PrimaryExpression	"""end of chunk\\n"""		6721935	0					
ANR	6722381	ExpressionStatement	"avio_skip ( pb , opcode_size )"	205:12:3146:3172	6721935	6	True				
ANR	6722382	CallExpression	"avio_skip ( pb , opcode_size )"		6721935	0					
ANR	6722383	Callee	avio_skip		6721935	0					
ANR	6722384	Identifier	avio_skip		6721935	0					
ANR	6722385	ArgumentList	pb		6721935	1					
ANR	6722386	Argument	pb		6721935	0					
ANR	6722387	Identifier	pb		6721935	0					
ANR	6722388	Argument	opcode_size		6721935	1					
ANR	6722389	Identifier	opcode_size		6721935	0					
ANR	6722390	BreakStatement	break ;	207:12:3187:3192	6721935	7	True				
ANR	6722391	Label	case OPCODE_CREATE_TIMER :	211:8:3205:3229	6721935	8	True				
ANR	6722392	Identifier	OPCODE_CREATE_TIMER		6721935	0					
ANR	6722393	ExpressionStatement	"av_log ( s -> avf , AV_LOG_TRACE , ""create timer\\n"" )"	213:12:3244:3290	6721935	9	True				
ANR	6722394	CallExpression	"av_log ( s -> avf , AV_LOG_TRACE , ""create timer\\n"" )"		6721935	0					
ANR	6722395	Callee	av_log		6721935	0					
ANR	6722396	Identifier	av_log		6721935	0					
ANR	6722397	ArgumentList	s -> avf		6721935	1					
ANR	6722398	Argument	s -> avf		6721935	0					
ANR	6722399	PtrMemberAccess	s -> avf		6721935	0					
ANR	6722400	Identifier	s		6721935	0					
ANR	6722401	Identifier	avf		6721935	1					
ANR	6722402	Argument	AV_LOG_TRACE		6721935	1					
ANR	6722403	Identifier	AV_LOG_TRACE		6721935	0					
ANR	6722404	Argument	"""create timer\\n"""		6721935	2					
ANR	6722405	PrimaryExpression	"""create timer\\n"""		6721935	0					
ANR	6722406	IfStatement	if ( ( opcode_version > 0 ) || ( opcode_size != 6 ) )		6721935	10					
ANR	6722407	Condition	( opcode_version > 0 ) || ( opcode_size != 6 )	215:16:3309:3350	6721935	0	True				
ANR	6722408	OrExpression	( opcode_version > 0 ) || ( opcode_size != 6 )		6721935	0		||			
ANR	6722409	RelationalExpression	opcode_version > 0		6721935	0		>			
ANR	6722410	Identifier	opcode_version		6721935	0					
ANR	6722411	PrimaryExpression	0		6721935	1					
ANR	6722412	EqualityExpression	opcode_size != 6		6721935	1		!=			
ANR	6722413	Identifier	opcode_size		6721935	0					
ANR	6722414	PrimaryExpression	6		6721935	1					
ANR	6722415	CompoundStatement		211:60:3264:3264	6721935	1					
ANR	6722416	ExpressionStatement	"av_log ( s -> avf , AV_LOG_TRACE , ""bad create_timer opcode\\n"" )"	217:16:3372:3429	6721935	0	True				
ANR	6722417	CallExpression	"av_log ( s -> avf , AV_LOG_TRACE , ""bad create_timer opcode\\n"" )"		6721935	0					
ANR	6722418	Callee	av_log		6721935	0					
ANR	6722419	Identifier	av_log		6721935	0					
ANR	6722420	ArgumentList	s -> avf		6721935	1					
ANR	6722421	Argument	s -> avf		6721935	0					
ANR	6722422	PtrMemberAccess	s -> avf		6721935	0					
ANR	6722423	Identifier	s		6721935	0					
ANR	6722424	Identifier	avf		6721935	1					
ANR	6722425	Argument	AV_LOG_TRACE		6721935	1					
ANR	6722426	Identifier	AV_LOG_TRACE		6721935	0					
ANR	6722427	Argument	"""bad create_timer opcode\\n"""		6721935	2					
ANR	6722428	PrimaryExpression	"""bad create_timer opcode\\n"""		6721935	0					
ANR	6722429	ExpressionStatement	chunk_type = CHUNK_BAD	219:16:3448:3470	6721935	1	True				
ANR	6722430	AssignmentExpression	chunk_type = CHUNK_BAD		6721935	0		=			
ANR	6722431	Identifier	chunk_type		6721935	0					
ANR	6722432	Identifier	CHUNK_BAD		6721935	1					
ANR	6722433	BreakStatement	break ;	221:16:3489:3494	6721935	2	True				
ANR	6722434	IfStatement	"if ( avio_read ( pb , scratch , opcode_size ) != opcode_size )"		6721935	11					
ANR	6722435	Condition	"avio_read ( pb , scratch , opcode_size ) != opcode_size"	225:16:3528:3594	6721935	0	True				
ANR	6722436	EqualityExpression	"avio_read ( pb , scratch , opcode_size ) != opcode_size"		6721935	0		!=			
ANR	6722437	CallExpression	"avio_read ( pb , scratch , opcode_size )"		6721935	0					
ANR	6722438	Callee	avio_read		6721935	0					
ANR	6722439	Identifier	avio_read		6721935	0					
ANR	6722440	ArgumentList	pb		6721935	1					
ANR	6722441	Argument	pb		6721935	0					
ANR	6722442	Identifier	pb		6721935	0					
ANR	6722443	Argument	scratch		6721935	1					
ANR	6722444	Identifier	scratch		6721935	0					
ANR	6722445	Argument	opcode_size		6721935	2					
ANR	6722446	Identifier	opcode_size		6721935	0					
ANR	6722447	Identifier	opcode_size		6721935	1					
ANR	6722448	CompoundStatement		223:29:3508:3508	6721935	1					
ANR	6722449	ExpressionStatement	chunk_type = CHUNK_BAD	229:16:3616:3638	6721935	0	True				
ANR	6722450	AssignmentExpression	chunk_type = CHUNK_BAD		6721935	0		=			
ANR	6722451	Identifier	chunk_type		6721935	0					
ANR	6722452	Identifier	CHUNK_BAD		6721935	1					
ANR	6722453	BreakStatement	break ;	231:16:3657:3662	6721935	1	True				
ANR	6722454	ExpressionStatement	s -> frame_pts_inc = ( ( uint64_t ) AV_RL32 ( & scratch [ 0 ] ) ) * AV_RL16 ( & scratch [ 4 ] )	235:12:3692:3766	6721935	12	True				
ANR	6722455	AssignmentExpression	s -> frame_pts_inc = ( ( uint64_t ) AV_RL32 ( & scratch [ 0 ] ) ) * AV_RL16 ( & scratch [ 4 ] )		6721935	0		=			
ANR	6722456	PtrMemberAccess	s -> frame_pts_inc		6721935	0					
ANR	6722457	Identifier	s		6721935	0					
ANR	6722458	Identifier	frame_pts_inc		6721935	1					
ANR	6722459	MultiplicativeExpression	( ( uint64_t ) AV_RL32 ( & scratch [ 0 ] ) ) * AV_RL16 ( & scratch [ 4 ] )		6721935	1		*			
ANR	6722460	CastExpression	( uint64_t ) AV_RL32 ( & scratch [ 0 ] )		6721935	0					
ANR	6722461	CastTarget	uint64_t		6721935	0					
ANR	6722462	CallExpression	AV_RL32 ( & scratch [ 0 ] )		6721935	1					
ANR	6722463	Callee	AV_RL32		6721935	0					
ANR	6722464	Identifier	AV_RL32		6721935	0					
ANR	6722465	ArgumentList	& scratch [ 0 ]		6721935	1					
ANR	6722466	Argument	& scratch [ 0 ]		6721935	0					
ANR	6722467	UnaryOperationExpression	& scratch [ 0 ]		6721935	0					
ANR	6722468	UnaryOperator	&		6721935	0					
ANR	6722469	ArrayIndexing	scratch [ 0 ]		6721935	1					
ANR	6722470	Identifier	scratch		6721935	0					
ANR	6722471	PrimaryExpression	0		6721935	1					
ANR	6722472	CallExpression	AV_RL16 ( & scratch [ 4 ] )		6721935	1					
ANR	6722473	Callee	AV_RL16		6721935	0					
ANR	6722474	Identifier	AV_RL16		6721935	0					
ANR	6722475	ArgumentList	& scratch [ 4 ]		6721935	1					
ANR	6722476	Argument	& scratch [ 4 ]		6721935	0					
ANR	6722477	UnaryOperationExpression	& scratch [ 4 ]		6721935	0					
ANR	6722478	UnaryOperator	&		6721935	0					
ANR	6722479	ArrayIndexing	scratch [ 4 ]		6721935	1					
ANR	6722480	Identifier	scratch		6721935	0					
ANR	6722481	PrimaryExpression	4		6721935	1					
ANR	6722482	BreakStatement	break ;	237:12:3781:3786	6721935	13	True				
ANR	6722483	Label	case OPCODE_INIT_AUDIO_BUFFERS :	241:8:3799:3829	6721935	14	True				
ANR	6722484	Identifier	OPCODE_INIT_AUDIO_BUFFERS		6721935	0					
ANR	6722485	ExpressionStatement	"av_log ( s -> avf , AV_LOG_TRACE , ""initialize audio buffers\\n"" )"	243:12:3844:3902	6721935	15	True				
ANR	6722486	CallExpression	"av_log ( s -> avf , AV_LOG_TRACE , ""initialize audio buffers\\n"" )"		6721935	0					
ANR	6722487	Callee	av_log		6721935	0					
ANR	6722488	Identifier	av_log		6721935	0					
ANR	6722489	ArgumentList	s -> avf		6721935	1					
ANR	6722490	Argument	s -> avf		6721935	0					
ANR	6722491	PtrMemberAccess	s -> avf		6721935	0					
ANR	6722492	Identifier	s		6721935	0					
ANR	6722493	Identifier	avf		6721935	1					
ANR	6722494	Argument	AV_LOG_TRACE		6721935	1					
ANR	6722495	Identifier	AV_LOG_TRACE		6721935	0					
ANR	6722496	Argument	"""initialize audio buffers\\n"""		6721935	2					
ANR	6722497	PrimaryExpression	"""initialize audio buffers\\n"""		6721935	0					
ANR	6722498	IfStatement	if ( opcode_version > 1 || opcode_size > 10 || opcode_size < 6 )		6721935	16					
ANR	6722499	Condition	opcode_version > 1 || opcode_size > 10 || opcode_size < 6	245:16:3921:3977	6721935	0	True				
ANR	6722500	OrExpression	opcode_version > 1 || opcode_size > 10 || opcode_size < 6		6721935	0		||			
ANR	6722501	RelationalExpression	opcode_version > 1		6721935	0		>			
ANR	6722502	Identifier	opcode_version		6721935	0					
ANR	6722503	PrimaryExpression	1		6721935	1					
ANR	6722504	OrExpression	opcode_size > 10 || opcode_size < 6		6721935	1		||			
ANR	6722505	RelationalExpression	opcode_size > 10		6721935	0		>			
ANR	6722506	Identifier	opcode_size		6721935	0					
ANR	6722507	PrimaryExpression	10		6721935	1					
ANR	6722508	RelationalExpression	opcode_size < 6		6721935	1		<			
ANR	6722509	Identifier	opcode_size		6721935	0					
ANR	6722510	PrimaryExpression	6		6721935	1					
ANR	6722511	CompoundStatement		241:75:3891:3891	6721935	1					
ANR	6722512	ExpressionStatement	"av_log ( s -> avf , AV_LOG_TRACE , ""bad init_audio_buffers opcode\\n"" )"	247:16:3999:4062	6721935	0	True				
ANR	6722513	CallExpression	"av_log ( s -> avf , AV_LOG_TRACE , ""bad init_audio_buffers opcode\\n"" )"		6721935	0					
ANR	6722514	Callee	av_log		6721935	0					
ANR	6722515	Identifier	av_log		6721935	0					
ANR	6722516	ArgumentList	s -> avf		6721935	1					
ANR	6722517	Argument	s -> avf		6721935	0					
ANR	6722518	PtrMemberAccess	s -> avf		6721935	0					
ANR	6722519	Identifier	s		6721935	0					
ANR	6722520	Identifier	avf		6721935	1					
ANR	6722521	Argument	AV_LOG_TRACE		6721935	1					
ANR	6722522	Identifier	AV_LOG_TRACE		6721935	0					
ANR	6722523	Argument	"""bad init_audio_buffers opcode\\n"""		6721935	2					
ANR	6722524	PrimaryExpression	"""bad init_audio_buffers opcode\\n"""		6721935	0					
ANR	6722525	ExpressionStatement	chunk_type = CHUNK_BAD	249:16:4081:4103	6721935	1	True				
ANR	6722526	AssignmentExpression	chunk_type = CHUNK_BAD		6721935	0		=			
ANR	6722527	Identifier	chunk_type		6721935	0					
ANR	6722528	Identifier	CHUNK_BAD		6721935	1					
ANR	6722529	BreakStatement	break ;	251:16:4122:4127	6721935	2	True				
ANR	6722530	IfStatement	"if ( avio_read ( pb , scratch , opcode_size ) != opcode_size )"		6721935	17					
ANR	6722531	Condition	"avio_read ( pb , scratch , opcode_size ) != opcode_size"	255:16:4161:4227	6721935	0	True				
ANR	6722532	EqualityExpression	"avio_read ( pb , scratch , opcode_size ) != opcode_size"		6721935	0		!=			
ANR	6722533	CallExpression	"avio_read ( pb , scratch , opcode_size )"		6721935	0					
ANR	6722534	Callee	avio_read		6721935	0					
ANR	6722535	Identifier	avio_read		6721935	0					
ANR	6722536	ArgumentList	pb		6721935	1					
ANR	6722537	Argument	pb		6721935	0					
ANR	6722538	Identifier	pb		6721935	0					
ANR	6722539	Argument	scratch		6721935	1					
ANR	6722540	Identifier	scratch		6721935	0					
ANR	6722541	Argument	opcode_size		6721935	2					
ANR	6722542	Identifier	opcode_size		6721935	0					
ANR	6722543	Identifier	opcode_size		6721935	1					
ANR	6722544	CompoundStatement		253:29:4141:4141	6721935	1					
ANR	6722545	ExpressionStatement	chunk_type = CHUNK_BAD	259:16:4249:4271	6721935	0	True				
ANR	6722546	AssignmentExpression	chunk_type = CHUNK_BAD		6721935	0		=			
ANR	6722547	Identifier	chunk_type		6721935	0					
ANR	6722548	Identifier	CHUNK_BAD		6721935	1					
ANR	6722549	BreakStatement	break ;	261:16:4290:4295	6721935	1	True				
ANR	6722550	ExpressionStatement	s -> audio_sample_rate = AV_RL16 ( & scratch [ 4 ] )	265:12:4325:4368	6721935	18	True				
ANR	6722551	AssignmentExpression	s -> audio_sample_rate = AV_RL16 ( & scratch [ 4 ] )		6721935	0		=			
ANR	6722552	PtrMemberAccess	s -> audio_sample_rate		6721935	0					
ANR	6722553	Identifier	s		6721935	0					
ANR	6722554	Identifier	audio_sample_rate		6721935	1					
ANR	6722555	CallExpression	AV_RL16 ( & scratch [ 4 ] )		6721935	1					
ANR	6722556	Callee	AV_RL16		6721935	0					
ANR	6722557	Identifier	AV_RL16		6721935	0					
ANR	6722558	ArgumentList	& scratch [ 4 ]		6721935	1					
ANR	6722559	Argument	& scratch [ 4 ]		6721935	0					
ANR	6722560	UnaryOperationExpression	& scratch [ 4 ]		6721935	0					
ANR	6722561	UnaryOperator	&		6721935	0					
ANR	6722562	ArrayIndexing	scratch [ 4 ]		6721935	1					
ANR	6722563	Identifier	scratch		6721935	0					
ANR	6722564	PrimaryExpression	4		6721935	1					
ANR	6722565	ExpressionStatement	audio_flags = AV_RL16 ( & scratch [ 2 ] )	267:12:4383:4417	6721935	19	True				
ANR	6722566	AssignmentExpression	audio_flags = AV_RL16 ( & scratch [ 2 ] )		6721935	0		=			
ANR	6722567	Identifier	audio_flags		6721935	0					
ANR	6722568	CallExpression	AV_RL16 ( & scratch [ 2 ] )		6721935	1					
ANR	6722569	Callee	AV_RL16		6721935	0					
ANR	6722570	Identifier	AV_RL16		6721935	0					
ANR	6722571	ArgumentList	& scratch [ 2 ]		6721935	1					
ANR	6722572	Argument	& scratch [ 2 ]		6721935	0					
ANR	6722573	UnaryOperationExpression	& scratch [ 2 ]		6721935	0					
ANR	6722574	UnaryOperator	&		6721935	0					
ANR	6722575	ArrayIndexing	scratch [ 2 ]		6721935	1					
ANR	6722576	Identifier	scratch		6721935	0					
ANR	6722577	PrimaryExpression	2		6721935	1					
ANR	6722578	ExpressionStatement	s -> audio_channels = ( audio_flags & 1 ) + 1	271:12:4492:4533	6721935	20	True				
ANR	6722579	AssignmentExpression	s -> audio_channels = ( audio_flags & 1 ) + 1		6721935	0		=			
ANR	6722580	PtrMemberAccess	s -> audio_channels		6721935	0					
ANR	6722581	Identifier	s		6721935	0					
ANR	6722582	Identifier	audio_channels		6721935	1					
ANR	6722583	AdditiveExpression	( audio_flags & 1 ) + 1		6721935	1		+			
ANR	6722584	BitAndExpression	audio_flags & 1		6721935	0		&			
ANR	6722585	Identifier	audio_flags		6721935	0					
ANR	6722586	PrimaryExpression	1		6721935	1					
ANR	6722587	PrimaryExpression	1		6721935	1					
ANR	6722588	ExpressionStatement	s -> audio_bits = ( ( ( audio_flags >> 1 ) & 1 ) + 1 ) * 8	275:12:4609:4659	6721935	21	True				
ANR	6722589	AssignmentExpression	s -> audio_bits = ( ( ( audio_flags >> 1 ) & 1 ) + 1 ) * 8		6721935	0		=			
ANR	6722590	PtrMemberAccess	s -> audio_bits		6721935	0					
ANR	6722591	Identifier	s		6721935	0					
ANR	6722592	Identifier	audio_bits		6721935	1					
ANR	6722593	MultiplicativeExpression	( ( ( audio_flags >> 1 ) & 1 ) + 1 ) * 8		6721935	1		*			
ANR	6722594	AdditiveExpression	( ( audio_flags >> 1 ) & 1 ) + 1		6721935	0		+			
ANR	6722595	BitAndExpression	( audio_flags >> 1 ) & 1		6721935	0		&			
ANR	6722596	ShiftExpression	audio_flags >> 1		6721935	0		>>			
ANR	6722597	Identifier	audio_flags		6721935	0					
ANR	6722598	PrimaryExpression	1		6721935	1					
ANR	6722599	PrimaryExpression	1		6721935	1					
ANR	6722600	PrimaryExpression	1		6721935	1					
ANR	6722601	PrimaryExpression	8		6721935	1					
ANR	6722602	IfStatement	if ( ( opcode_version == 1 ) && ( audio_flags & 0x4 ) )		6721935	22					
ANR	6722603	Condition	( opcode_version == 1 ) && ( audio_flags & 0x4 )	279:16:4750:4793	6721935	0	True				
ANR	6722604	AndExpression	( opcode_version == 1 ) && ( audio_flags & 0x4 )		6721935	0		&&			
ANR	6722605	EqualityExpression	opcode_version == 1		6721935	0		==			
ANR	6722606	Identifier	opcode_version		6721935	0					
ANR	6722607	PrimaryExpression	1		6721935	1					
ANR	6722608	BitAndExpression	audio_flags & 0x4		6721935	1		&			
ANR	6722609	Identifier	audio_flags		6721935	0					
ANR	6722610	PrimaryExpression	0x4		6721935	1					
ANR	6722611	ExpressionStatement	s -> audio_type = AV_CODEC_ID_INTERPLAY_DPCM	281:16:4813:4855	6721935	1	True				
ANR	6722612	AssignmentExpression	s -> audio_type = AV_CODEC_ID_INTERPLAY_DPCM		6721935	0		=			
ANR	6722613	PtrMemberAccess	s -> audio_type		6721935	0					
ANR	6722614	Identifier	s		6721935	0					
ANR	6722615	Identifier	audio_type		6721935	1					
ANR	6722616	Identifier	AV_CODEC_ID_INTERPLAY_DPCM		6721935	1					
ANR	6722617	ElseStatement	else		6721935	0					
ANR	6722618	IfStatement	if ( s -> audio_bits == 16 )		6721935	0					
ANR	6722619	Condition	s -> audio_bits == 16	283:21:4879:4897	6721935	0	True				
ANR	6722620	EqualityExpression	s -> audio_bits == 16		6721935	0		==			
ANR	6722621	PtrMemberAccess	s -> audio_bits		6721935	0					
ANR	6722622	Identifier	s		6721935	0					
ANR	6722623	Identifier	audio_bits		6721935	1					
ANR	6722624	PrimaryExpression	16		6721935	1					
ANR	6722625	ExpressionStatement	s -> audio_type = AV_CODEC_ID_PCM_S16LE	285:16:4917:4954	6721935	1	True				
ANR	6722626	AssignmentExpression	s -> audio_type = AV_CODEC_ID_PCM_S16LE		6721935	0		=			
ANR	6722627	PtrMemberAccess	s -> audio_type		6721935	0					
ANR	6722628	Identifier	s		6721935	0					
ANR	6722629	Identifier	audio_type		6721935	1					
ANR	6722630	Identifier	AV_CODEC_ID_PCM_S16LE		6721935	1					
ANR	6722631	ElseStatement	else		6721935	0					
ANR	6722632	ExpressionStatement	s -> audio_type = AV_CODEC_ID_PCM_U8	289:16:4991:5025	6721935	0	True				
ANR	6722633	AssignmentExpression	s -> audio_type = AV_CODEC_ID_PCM_U8		6721935	0		=			
ANR	6722634	PtrMemberAccess	s -> audio_type		6721935	0					
ANR	6722635	Identifier	s		6721935	0					
ANR	6722636	Identifier	audio_type		6721935	1					
ANR	6722637	Identifier	AV_CODEC_ID_PCM_U8		6721935	1					
ANR	6722638	ExpressionStatement	"av_log ( s -> avf , AV_LOG_TRACE , ""audio: %d bits, %d Hz, %s, %s format\\n"" , s -> audio_bits , s -> audio_sample_rate , ( s -> audio_channels == 2 ) ? ""stereo"" : ""mono"" , ( s -> audio_type == AV_CODEC_ID_INTERPLAY_DPCM ) ? ""Interplay audio"" : ""PCM"" )"	291:12:5040:5352	6721935	23	True				
ANR	6722639	CallExpression	"av_log ( s -> avf , AV_LOG_TRACE , ""audio: %d bits, %d Hz, %s, %s format\\n"" , s -> audio_bits , s -> audio_sample_rate , ( s -> audio_channels == 2 ) ? ""stereo"" : ""mono"" , ( s -> audio_type == AV_CODEC_ID_INTERPLAY_DPCM ) ? ""Interplay audio"" : ""PCM"" )"		6721935	0					
ANR	6722640	Callee	av_log		6721935	0					
ANR	6722641	Identifier	av_log		6721935	0					
ANR	6722642	ArgumentList	s -> avf		6721935	1					
ANR	6722643	Argument	s -> avf		6721935	0					
ANR	6722644	PtrMemberAccess	s -> avf		6721935	0					
ANR	6722645	Identifier	s		6721935	0					
ANR	6722646	Identifier	avf		6721935	1					
ANR	6722647	Argument	AV_LOG_TRACE		6721935	1					
ANR	6722648	Identifier	AV_LOG_TRACE		6721935	0					
ANR	6722649	Argument	"""audio: %d bits, %d Hz, %s, %s format\\n"""		6721935	2					
ANR	6722650	PrimaryExpression	"""audio: %d bits, %d Hz, %s, %s format\\n"""		6721935	0					
ANR	6722651	Argument	s -> audio_bits		6721935	3					
ANR	6722652	PtrMemberAccess	s -> audio_bits		6721935	0					
ANR	6722653	Identifier	s		6721935	0					
ANR	6722654	Identifier	audio_bits		6721935	1					
ANR	6722655	Argument	s -> audio_sample_rate		6721935	4					
ANR	6722656	PtrMemberAccess	s -> audio_sample_rate		6721935	0					
ANR	6722657	Identifier	s		6721935	0					
ANR	6722658	Identifier	audio_sample_rate		6721935	1					
ANR	6722659	Argument	"( s -> audio_channels == 2 ) ? ""stereo"" : ""mono"""		6721935	5					
ANR	6722660	ConditionalExpression	"( s -> audio_channels == 2 ) ? ""stereo"" : ""mono"""		6721935	0					
ANR	6722661	Condition	s -> audio_channels == 2		6721935	0					
ANR	6722662	EqualityExpression	s -> audio_channels == 2		6721935	0		==			
ANR	6722663	PtrMemberAccess	s -> audio_channels		6721935	0					
ANR	6722664	Identifier	s		6721935	0					
ANR	6722665	Identifier	audio_channels		6721935	1					
ANR	6722666	PrimaryExpression	2		6721935	1					
ANR	6722667	PrimaryExpression	"""stereo"""		6721935	1					
ANR	6722668	PrimaryExpression	"""mono"""		6721935	2					
ANR	6722669	Argument	"( s -> audio_type == AV_CODEC_ID_INTERPLAY_DPCM ) ? ""Interplay audio"" : ""PCM"""		6721935	6					
ANR	6722670	ConditionalExpression	"( s -> audio_type == AV_CODEC_ID_INTERPLAY_DPCM ) ? ""Interplay audio"" : ""PCM"""		6721935	0					
ANR	6722671	Condition	s -> audio_type == AV_CODEC_ID_INTERPLAY_DPCM		6721935	0					
ANR	6722672	EqualityExpression	s -> audio_type == AV_CODEC_ID_INTERPLAY_DPCM		6721935	0		==			
ANR	6722673	PtrMemberAccess	s -> audio_type		6721935	0					
ANR	6722674	Identifier	s		6721935	0					
ANR	6722675	Identifier	audio_type		6721935	1					
ANR	6722676	Identifier	AV_CODEC_ID_INTERPLAY_DPCM		6721935	1					
ANR	6722677	PrimaryExpression	"""Interplay audio"""		6721935	1					
ANR	6722678	PrimaryExpression	"""PCM"""		6721935	2					
ANR	6722679	BreakStatement	break ;	301:12:5367:5372	6721935	24	True				
ANR	6722680	Label	case OPCODE_START_STOP_AUDIO :	305:8:5385:5413	6721935	25	True				
ANR	6722681	Identifier	OPCODE_START_STOP_AUDIO		6721935	0					
ANR	6722682	ExpressionStatement	"av_log ( s -> avf , AV_LOG_TRACE , ""start/stop audio\\n"" )"	307:12:5428:5478	6721935	26	True				
ANR	6722683	CallExpression	"av_log ( s -> avf , AV_LOG_TRACE , ""start/stop audio\\n"" )"		6721935	0					
ANR	6722684	Callee	av_log		6721935	0					
ANR	6722685	Identifier	av_log		6721935	0					
ANR	6722686	ArgumentList	s -> avf		6721935	1					
ANR	6722687	Argument	s -> avf		6721935	0					
ANR	6722688	PtrMemberAccess	s -> avf		6721935	0					
ANR	6722689	Identifier	s		6721935	0					
ANR	6722690	Identifier	avf		6721935	1					
ANR	6722691	Argument	AV_LOG_TRACE		6721935	1					
ANR	6722692	Identifier	AV_LOG_TRACE		6721935	0					
ANR	6722693	Argument	"""start/stop audio\\n"""		6721935	2					
ANR	6722694	PrimaryExpression	"""start/stop audio\\n"""		6721935	0					
ANR	6722695	ExpressionStatement	"avio_skip ( pb , opcode_size )"	309:12:5493:5519	6721935	27	True				
ANR	6722696	CallExpression	"avio_skip ( pb , opcode_size )"		6721935	0					
ANR	6722697	Callee	avio_skip		6721935	0					
ANR	6722698	Identifier	avio_skip		6721935	0					
ANR	6722699	ArgumentList	pb		6721935	1					
ANR	6722700	Argument	pb		6721935	0					
ANR	6722701	Identifier	pb		6721935	0					
ANR	6722702	Argument	opcode_size		6721935	1					
ANR	6722703	Identifier	opcode_size		6721935	0					
ANR	6722704	BreakStatement	break ;	311:12:5534:5539	6721935	28	True				
ANR	6722705	Label	case OPCODE_INIT_VIDEO_BUFFERS :	315:8:5552:5582	6721935	29	True				
ANR	6722706	Identifier	OPCODE_INIT_VIDEO_BUFFERS		6721935	0					
ANR	6722707	ExpressionStatement	"av_log ( s -> avf , AV_LOG_TRACE , ""initialize video buffers\\n"" )"	317:12:5597:5655	6721935	30	True				
ANR	6722708	CallExpression	"av_log ( s -> avf , AV_LOG_TRACE , ""initialize video buffers\\n"" )"		6721935	0					
ANR	6722709	Callee	av_log		6721935	0					
ANR	6722710	Identifier	av_log		6721935	0					
ANR	6722711	ArgumentList	s -> avf		6721935	1					
ANR	6722712	Argument	s -> avf		6721935	0					
ANR	6722713	PtrMemberAccess	s -> avf		6721935	0					
ANR	6722714	Identifier	s		6721935	0					
ANR	6722715	Identifier	avf		6721935	1					
ANR	6722716	Argument	AV_LOG_TRACE		6721935	1					
ANR	6722717	Identifier	AV_LOG_TRACE		6721935	0					
ANR	6722718	Argument	"""initialize video buffers\\n"""		6721935	2					
ANR	6722719	PrimaryExpression	"""initialize video buffers\\n"""		6721935	0					
ANR	6722720	IfStatement	if ( ( opcode_version > 2 ) || ( opcode_size > 8 ) || opcode_size < 4 || opcode_version == 2 && opcode_size < 8 )		6721935	31					
ANR	6722721	Condition	( opcode_version > 2 ) || ( opcode_size > 8 ) || opcode_size < 4 || opcode_version == 2 && opcode_size < 8	319:16:5674:5792	6721935	0	True				
ANR	6722722	OrExpression	( opcode_version > 2 ) || ( opcode_size > 8 ) || opcode_size < 4 || opcode_version == 2 && opcode_size < 8		6721935	0		||			
ANR	6722723	RelationalExpression	opcode_version > 2		6721935	0		>			
ANR	6722724	Identifier	opcode_version		6721935	0					
ANR	6722725	PrimaryExpression	2		6721935	1					
ANR	6722726	OrExpression	( opcode_size > 8 ) || opcode_size < 4 || opcode_version == 2 && opcode_size < 8		6721935	1		||			
ANR	6722727	RelationalExpression	opcode_size > 8		6721935	0		>			
ANR	6722728	Identifier	opcode_size		6721935	0					
ANR	6722729	PrimaryExpression	8		6721935	1					
ANR	6722730	OrExpression	opcode_size < 4 || opcode_version == 2 && opcode_size < 8		6721935	1		||			
ANR	6722731	RelationalExpression	opcode_size < 4		6721935	0		<			
ANR	6722732	Identifier	opcode_size		6721935	0					
ANR	6722733	PrimaryExpression	4		6721935	1					
ANR	6722734	AndExpression	opcode_version == 2 && opcode_size < 8		6721935	1		&&			
ANR	6722735	EqualityExpression	opcode_version == 2		6721935	0		==			
ANR	6722736	Identifier	opcode_version		6721935	0					
ANR	6722737	PrimaryExpression	2		6721935	1					
ANR	6722738	RelationalExpression	opcode_size < 8		6721935	1		<			
ANR	6722739	Identifier	opcode_size		6721935	0					
ANR	6722740	PrimaryExpression	8		6721935	1					
ANR	6722741	CompoundStatement		319:14:5720:5720	6721935	1					
ANR	6722742	ExpressionStatement	"av_log ( s -> avf , AV_LOG_TRACE , ""bad init_video_buffers opcode\\n"" )"	325:16:5828:5891	6721935	0	True				
ANR	6722743	CallExpression	"av_log ( s -> avf , AV_LOG_TRACE , ""bad init_video_buffers opcode\\n"" )"		6721935	0					
ANR	6722744	Callee	av_log		6721935	0					
ANR	6722745	Identifier	av_log		6721935	0					
ANR	6722746	ArgumentList	s -> avf		6721935	1					
ANR	6722747	Argument	s -> avf		6721935	0					
ANR	6722748	PtrMemberAccess	s -> avf		6721935	0					
ANR	6722749	Identifier	s		6721935	0					
ANR	6722750	Identifier	avf		6721935	1					
ANR	6722751	Argument	AV_LOG_TRACE		6721935	1					
ANR	6722752	Identifier	AV_LOG_TRACE		6721935	0					
ANR	6722753	Argument	"""bad init_video_buffers opcode\\n"""		6721935	2					
ANR	6722754	PrimaryExpression	"""bad init_video_buffers opcode\\n"""		6721935	0					
ANR	6722755	ExpressionStatement	chunk_type = CHUNK_BAD	327:16:5910:5932	6721935	1	True				
ANR	6722756	AssignmentExpression	chunk_type = CHUNK_BAD		6721935	0		=			
ANR	6722757	Identifier	chunk_type		6721935	0					
ANR	6722758	Identifier	CHUNK_BAD		6721935	1					
ANR	6722759	BreakStatement	break ;	329:16:5951:5956	6721935	2	True				
ANR	6722760	IfStatement	"if ( avio_read ( pb , scratch , opcode_size ) != opcode_size )"		6721935	32					
ANR	6722761	Condition	"avio_read ( pb , scratch , opcode_size ) != opcode_size"	333:16:5990:6056	6721935	0	True				
ANR	6722762	EqualityExpression	"avio_read ( pb , scratch , opcode_size ) != opcode_size"		6721935	0		!=			
ANR	6722763	CallExpression	"avio_read ( pb , scratch , opcode_size )"		6721935	0					
ANR	6722764	Callee	avio_read		6721935	0					
ANR	6722765	Identifier	avio_read		6721935	0					
ANR	6722766	ArgumentList	pb		6721935	1					
ANR	6722767	Argument	pb		6721935	0					
ANR	6722768	Identifier	pb		6721935	0					
ANR	6722769	Argument	scratch		6721935	1					
ANR	6722770	Identifier	scratch		6721935	0					
ANR	6722771	Argument	opcode_size		6721935	2					
ANR	6722772	Identifier	opcode_size		6721935	0					
ANR	6722773	Identifier	opcode_size		6721935	1					
ANR	6722774	CompoundStatement		331:29:5970:5970	6721935	1					
ANR	6722775	ExpressionStatement	chunk_type = CHUNK_BAD	337:16:6078:6100	6721935	0	True				
ANR	6722776	AssignmentExpression	chunk_type = CHUNK_BAD		6721935	0		=			
ANR	6722777	Identifier	chunk_type		6721935	0					
ANR	6722778	Identifier	CHUNK_BAD		6721935	1					
ANR	6722779	BreakStatement	break ;	339:16:6119:6124	6721935	1	True				
ANR	6722780	ExpressionStatement	width = AV_RL16 ( & scratch [ 0 ] ) * 8	343:12:6154:6187	6721935	33	True				
ANR	6722781	AssignmentExpression	width = AV_RL16 ( & scratch [ 0 ] ) * 8		6721935	0		=			
ANR	6722782	Identifier	width		6721935	0					
ANR	6722783	MultiplicativeExpression	AV_RL16 ( & scratch [ 0 ] ) * 8		6721935	1		*			
ANR	6722784	CallExpression	AV_RL16 ( & scratch [ 0 ] )		6721935	0					
ANR	6722785	Callee	AV_RL16		6721935	0					
ANR	6722786	Identifier	AV_RL16		6721935	0					
ANR	6722787	ArgumentList	& scratch [ 0 ]		6721935	1					
ANR	6722788	Argument	& scratch [ 0 ]		6721935	0					
ANR	6722789	UnaryOperationExpression	& scratch [ 0 ]		6721935	0					
ANR	6722790	UnaryOperator	&		6721935	0					
ANR	6722791	ArrayIndexing	scratch [ 0 ]		6721935	1					
ANR	6722792	Identifier	scratch		6721935	0					
ANR	6722793	PrimaryExpression	0		6721935	1					
ANR	6722794	PrimaryExpression	8		6721935	1					
ANR	6722795	ExpressionStatement	height = AV_RL16 ( & scratch [ 2 ] ) * 8	345:12:6202:6235	6721935	34	True				
ANR	6722796	AssignmentExpression	height = AV_RL16 ( & scratch [ 2 ] ) * 8		6721935	0		=			
ANR	6722797	Identifier	height		6721935	0					
ANR	6722798	MultiplicativeExpression	AV_RL16 ( & scratch [ 2 ] ) * 8		6721935	1		*			
ANR	6722799	CallExpression	AV_RL16 ( & scratch [ 2 ] )		6721935	0					
ANR	6722800	Callee	AV_RL16		6721935	0					
ANR	6722801	Identifier	AV_RL16		6721935	0					
ANR	6722802	ArgumentList	& scratch [ 2 ]		6721935	1					
ANR	6722803	Argument	& scratch [ 2 ]		6721935	0					
ANR	6722804	UnaryOperationExpression	& scratch [ 2 ]		6721935	0					
ANR	6722805	UnaryOperator	&		6721935	0					
ANR	6722806	ArrayIndexing	scratch [ 2 ]		6721935	1					
ANR	6722807	Identifier	scratch		6721935	0					
ANR	6722808	PrimaryExpression	2		6721935	1					
ANR	6722809	PrimaryExpression	8		6721935	1					
ANR	6722810	IfStatement	if ( width != s -> video_width )		6721935	35					
ANR	6722811	Condition	width != s -> video_width	347:16:6254:6276	6721935	0	True				
ANR	6722812	EqualityExpression	width != s -> video_width		6721935	0		!=			
ANR	6722813	Identifier	width		6721935	0					
ANR	6722814	PtrMemberAccess	s -> video_width		6721935	1					
ANR	6722815	Identifier	s		6721935	0					
ANR	6722816	Identifier	video_width		6721935	1					
ANR	6722817	CompoundStatement		343:41:6190:6190	6721935	1					
ANR	6722818	ExpressionStatement	s -> video_width = width	349:16:6298:6320	6721935	0	True				
ANR	6722819	AssignmentExpression	s -> video_width = width		6721935	0		=			
ANR	6722820	PtrMemberAccess	s -> video_width		6721935	0					
ANR	6722821	Identifier	s		6721935	0					
ANR	6722822	Identifier	video_width		6721935	1					
ANR	6722823	Identifier	width		6721935	1					
ANR	6722824	ExpressionStatement	s -> changed ++	351:16:6339:6351	6721935	1	True				
ANR	6722825	PostIncDecOperationExpression	s -> changed ++		6721935	0					
ANR	6722826	PtrMemberAccess	s -> changed		6721935	0					
ANR	6722827	Identifier	s		6721935	0					
ANR	6722828	Identifier	changed		6721935	1					
ANR	6722829	IncDec	++		6721935	1					
ANR	6722830	IfStatement	if ( height != s -> video_height )		6721935	36					
ANR	6722831	Condition	height != s -> video_height	355:16:6385:6409	6721935	0	True				
ANR	6722832	EqualityExpression	height != s -> video_height		6721935	0		!=			
ANR	6722833	Identifier	height		6721935	0					
ANR	6722834	PtrMemberAccess	s -> video_height		6721935	1					
ANR	6722835	Identifier	s		6721935	0					
ANR	6722836	Identifier	video_height		6721935	1					
ANR	6722837	CompoundStatement		351:43:6323:6323	6721935	1					
ANR	6722838	ExpressionStatement	s -> video_height = height	357:16:6431:6455	6721935	0	True				
ANR	6722839	AssignmentExpression	s -> video_height = height		6721935	0		=			
ANR	6722840	PtrMemberAccess	s -> video_height		6721935	0					
ANR	6722841	Identifier	s		6721935	0					
ANR	6722842	Identifier	video_height		6721935	1					
ANR	6722843	Identifier	height		6721935	1					
ANR	6722844	ExpressionStatement	s -> changed ++	359:16:6474:6486	6721935	1	True				
ANR	6722845	PostIncDecOperationExpression	s -> changed ++		6721935	0					
ANR	6722846	PtrMemberAccess	s -> changed		6721935	0					
ANR	6722847	Identifier	s		6721935	0					
ANR	6722848	Identifier	changed		6721935	1					
ANR	6722849	IncDec	++		6721935	1					
ANR	6722850	IfStatement	if ( opcode_version < 2 || ! AV_RL16 ( & scratch [ 6 ] ) )		6721935	37					
ANR	6722851	Condition	opcode_version < 2 || ! AV_RL16 ( & scratch [ 6 ] )	363:16:6520:6562	6721935	0	True				
ANR	6722852	OrExpression	opcode_version < 2 || ! AV_RL16 ( & scratch [ 6 ] )		6721935	0		||			
ANR	6722853	RelationalExpression	opcode_version < 2		6721935	0		<			
ANR	6722854	Identifier	opcode_version		6721935	0					
ANR	6722855	PrimaryExpression	2		6721935	1					
ANR	6722856	UnaryOperationExpression	! AV_RL16 ( & scratch [ 6 ] )		6721935	1					
ANR	6722857	UnaryOperator	!		6721935	0					
ANR	6722858	CallExpression	AV_RL16 ( & scratch [ 6 ] )		6721935	1					
ANR	6722859	Callee	AV_RL16		6721935	0					
ANR	6722860	Identifier	AV_RL16		6721935	0					
ANR	6722861	ArgumentList	& scratch [ 6 ]		6721935	1					
ANR	6722862	Argument	& scratch [ 6 ]		6721935	0					
ANR	6722863	UnaryOperationExpression	& scratch [ 6 ]		6721935	0					
ANR	6722864	UnaryOperator	&		6721935	0					
ANR	6722865	ArrayIndexing	scratch [ 6 ]		6721935	1					
ANR	6722866	Identifier	scratch		6721935	0					
ANR	6722867	PrimaryExpression	6		6721935	1					
ANR	6722868	CompoundStatement		359:61:6476:6476	6721935	1					
ANR	6722869	ExpressionStatement	s -> video_bpp = 8	365:16:6584:6600	6721935	0	True				
ANR	6722870	AssignmentExpression	s -> video_bpp = 8		6721935	0		=			
ANR	6722871	PtrMemberAccess	s -> video_bpp		6721935	0					
ANR	6722872	Identifier	s		6721935	0					
ANR	6722873	Identifier	video_bpp		6721935	1					
ANR	6722874	PrimaryExpression	8		6721935	1					
ANR	6722875	ElseStatement	else		6721935	0					
ANR	6722876	CompoundStatement		363:19:6533:6533	6721935	0					
ANR	6722877	ExpressionStatement	s -> video_bpp = 16	369:16:6641:6658	6721935	0	True				
ANR	6722878	AssignmentExpression	s -> video_bpp = 16		6721935	0		=			
ANR	6722879	PtrMemberAccess	s -> video_bpp		6721935	0					
ANR	6722880	Identifier	s		6721935	0					
ANR	6722881	Identifier	video_bpp		6721935	1					
ANR	6722882	PrimaryExpression	16		6721935	1					
ANR	6722883	ExpressionStatement	"av_log ( s -> avf , AV_LOG_TRACE , ""video resolution: %d x %d\\n"" , s -> video_width , s -> video_height )"	373:12:6688:6801	6721935	38	True				
ANR	6722884	CallExpression	"av_log ( s -> avf , AV_LOG_TRACE , ""video resolution: %d x %d\\n"" , s -> video_width , s -> video_height )"		6721935	0					
ANR	6722885	Callee	av_log		6721935	0					
ANR	6722886	Identifier	av_log		6721935	0					
ANR	6722887	ArgumentList	s -> avf		6721935	1					
ANR	6722888	Argument	s -> avf		6721935	0					
ANR	6722889	PtrMemberAccess	s -> avf		6721935	0					
ANR	6722890	Identifier	s		6721935	0					
ANR	6722891	Identifier	avf		6721935	1					
ANR	6722892	Argument	AV_LOG_TRACE		6721935	1					
ANR	6722893	Identifier	AV_LOG_TRACE		6721935	0					
ANR	6722894	Argument	"""video resolution: %d x %d\\n"""		6721935	2					
ANR	6722895	PrimaryExpression	"""video resolution: %d x %d\\n"""		6721935	0					
ANR	6722896	Argument	s -> video_width		6721935	3					
ANR	6722897	PtrMemberAccess	s -> video_width		6721935	0					
ANR	6722898	Identifier	s		6721935	0					
ANR	6722899	Identifier	video_width		6721935	1					
ANR	6722900	Argument	s -> video_height		6721935	4					
ANR	6722901	PtrMemberAccess	s -> video_height		6721935	0					
ANR	6722902	Identifier	s		6721935	0					
ANR	6722903	Identifier	video_height		6721935	1					
ANR	6722904	BreakStatement	break ;	377:12:6816:6821	6721935	39	True				
ANR	6722905	Label	case OPCODE_UNKNOWN_06 :	381:8:6834:6856	6721935	40	True				
ANR	6722906	Identifier	OPCODE_UNKNOWN_06		6721935	0					
ANR	6722907	Label	case OPCODE_UNKNOWN_0E :	383:8:6867:6889	6721935	41	True				
ANR	6722908	Identifier	OPCODE_UNKNOWN_0E		6721935	0					
ANR	6722909	Label	case OPCODE_UNKNOWN_10 :	385:8:6900:6922	6721935	42	True				
ANR	6722910	Identifier	OPCODE_UNKNOWN_10		6721935	0					
ANR	6722911	Label	case OPCODE_UNKNOWN_12 :	387:8:6933:6955	6721935	43	True				
ANR	6722912	Identifier	OPCODE_UNKNOWN_12		6721935	0					
ANR	6722913	Label	case OPCODE_UNKNOWN_13 :	389:8:6966:6988	6721935	44	True				
ANR	6722914	Identifier	OPCODE_UNKNOWN_13		6721935	0					
ANR	6722915	Label	case OPCODE_UNKNOWN_14 :	391:8:6999:7021	6721935	45	True				
ANR	6722916	Identifier	OPCODE_UNKNOWN_14		6721935	0					
ANR	6722917	Label	case OPCODE_UNKNOWN_15 :	393:8:7032:7054	6721935	46	True				
ANR	6722918	Identifier	OPCODE_UNKNOWN_15		6721935	0					
ANR	6722919	ExpressionStatement	"av_log ( s -> avf , AV_LOG_TRACE , ""unknown (but documented) opcode %02X\\n"" , opcode_type )"	395:12:7069:7152	6721935	47	True				
ANR	6722920	CallExpression	"av_log ( s -> avf , AV_LOG_TRACE , ""unknown (but documented) opcode %02X\\n"" , opcode_type )"		6721935	0					
ANR	6722921	Callee	av_log		6721935	0					
ANR	6722922	Identifier	av_log		6721935	0					
ANR	6722923	ArgumentList	s -> avf		6721935	1					
ANR	6722924	Argument	s -> avf		6721935	0					
ANR	6722925	PtrMemberAccess	s -> avf		6721935	0					
ANR	6722926	Identifier	s		6721935	0					
ANR	6722927	Identifier	avf		6721935	1					
ANR	6722928	Argument	AV_LOG_TRACE		6721935	1					
ANR	6722929	Identifier	AV_LOG_TRACE		6721935	0					
ANR	6722930	Argument	"""unknown (but documented) opcode %02X\\n"""		6721935	2					
ANR	6722931	PrimaryExpression	"""unknown (but documented) opcode %02X\\n"""		6721935	0					
ANR	6722932	Argument	opcode_type		6721935	3					
ANR	6722933	Identifier	opcode_type		6721935	0					
ANR	6722934	ExpressionStatement	"avio_skip ( pb , opcode_size )"	397:12:7167:7193	6721935	48	True				
ANR	6722935	CallExpression	"avio_skip ( pb , opcode_size )"		6721935	0					
ANR	6722936	Callee	avio_skip		6721935	0					
ANR	6722937	Identifier	avio_skip		6721935	0					
ANR	6722938	ArgumentList	pb		6721935	1					
ANR	6722939	Argument	pb		6721935	0					
ANR	6722940	Identifier	pb		6721935	0					
ANR	6722941	Argument	opcode_size		6721935	1					
ANR	6722942	Identifier	opcode_size		6721935	0					
ANR	6722943	BreakStatement	break ;	399:12:7208:7213	6721935	49	True				
ANR	6722944	Label	case OPCODE_SEND_BUFFER :	403:8:7226:7249	6721935	50	True				
ANR	6722945	Identifier	OPCODE_SEND_BUFFER		6721935	0					
ANR	6722946	ExpressionStatement	"av_log ( s -> avf , AV_LOG_TRACE , ""send buffer\\n"" )"	405:12:7264:7309	6721935	51	True				
ANR	6722947	CallExpression	"av_log ( s -> avf , AV_LOG_TRACE , ""send buffer\\n"" )"		6721935	0					
ANR	6722948	Callee	av_log		6721935	0					
ANR	6722949	Identifier	av_log		6721935	0					
ANR	6722950	ArgumentList	s -> avf		6721935	1					
ANR	6722951	Argument	s -> avf		6721935	0					
ANR	6722952	PtrMemberAccess	s -> avf		6721935	0					
ANR	6722953	Identifier	s		6721935	0					
ANR	6722954	Identifier	avf		6721935	1					
ANR	6722955	Argument	AV_LOG_TRACE		6721935	1					
ANR	6722956	Identifier	AV_LOG_TRACE		6721935	0					
ANR	6722957	Argument	"""send buffer\\n"""		6721935	2					
ANR	6722958	PrimaryExpression	"""send buffer\\n"""		6721935	0					
ANR	6722959	ExpressionStatement	"avio_skip ( pb , opcode_size )"	407:12:7324:7350	6721935	52	True				
ANR	6722960	CallExpression	"avio_skip ( pb , opcode_size )"		6721935	0					
ANR	6722961	Callee	avio_skip		6721935	0					
ANR	6722962	Identifier	avio_skip		6721935	0					
ANR	6722963	ArgumentList	pb		6721935	1					
ANR	6722964	Argument	pb		6721935	0					
ANR	6722965	Identifier	pb		6721935	0					
ANR	6722966	Argument	opcode_size		6721935	1					
ANR	6722967	Identifier	opcode_size		6721935	0					
ANR	6722968	ExpressionStatement	s -> send_buffer = 1	409:12:7365:7383	6721935	53	True				
ANR	6722969	AssignmentExpression	s -> send_buffer = 1		6721935	0		=			
ANR	6722970	PtrMemberAccess	s -> send_buffer		6721935	0					
ANR	6722971	Identifier	s		6721935	0					
ANR	6722972	Identifier	send_buffer		6721935	1					
ANR	6722973	PrimaryExpression	1		6721935	1					
ANR	6722974	BreakStatement	break ;	411:12:7398:7403	6721935	54	True				
ANR	6722975	Label	case OPCODE_AUDIO_FRAME :	415:8:7416:7439	6721935	55	True				
ANR	6722976	Identifier	OPCODE_AUDIO_FRAME		6721935	0					
ANR	6722977	ExpressionStatement	"av_log ( s -> avf , AV_LOG_TRACE , ""audio frame\\n"" )"	417:12:7454:7499	6721935	56	True				
ANR	6722978	CallExpression	"av_log ( s -> avf , AV_LOG_TRACE , ""audio frame\\n"" )"		6721935	0					
ANR	6722979	Callee	av_log		6721935	0					
ANR	6722980	Identifier	av_log		6721935	0					
ANR	6722981	ArgumentList	s -> avf		6721935	1					
ANR	6722982	Argument	s -> avf		6721935	0					
ANR	6722983	PtrMemberAccess	s -> avf		6721935	0					
ANR	6722984	Identifier	s		6721935	0					
ANR	6722985	Identifier	avf		6721935	1					
ANR	6722986	Argument	AV_LOG_TRACE		6721935	1					
ANR	6722987	Identifier	AV_LOG_TRACE		6721935	0					
ANR	6722988	Argument	"""audio frame\\n"""		6721935	2					
ANR	6722989	PrimaryExpression	"""audio frame\\n"""		6721935	0					
ANR	6722990	ExpressionStatement	s -> audio_chunk_offset = avio_tell ( pb )	423:12:7568:7605	6721935	57	True				
ANR	6722991	AssignmentExpression	s -> audio_chunk_offset = avio_tell ( pb )		6721935	0		=			
ANR	6722992	PtrMemberAccess	s -> audio_chunk_offset		6721935	0					
ANR	6722993	Identifier	s		6721935	0					
ANR	6722994	Identifier	audio_chunk_offset		6721935	1					
ANR	6722995	CallExpression	avio_tell ( pb )		6721935	1					
ANR	6722996	Callee	avio_tell		6721935	0					
ANR	6722997	Identifier	avio_tell		6721935	0					
ANR	6722998	ArgumentList	pb		6721935	1					
ANR	6722999	Argument	pb		6721935	0					
ANR	6723000	Identifier	pb		6721935	0					
ANR	6723001	ExpressionStatement	s -> audio_chunk_size = opcode_size	425:12:7620:7653	6721935	58	True				
ANR	6723002	AssignmentExpression	s -> audio_chunk_size = opcode_size		6721935	0		=			
ANR	6723003	PtrMemberAccess	s -> audio_chunk_size		6721935	0					
ANR	6723004	Identifier	s		6721935	0					
ANR	6723005	Identifier	audio_chunk_size		6721935	1					
ANR	6723006	Identifier	opcode_size		6721935	1					
ANR	6723007	ExpressionStatement	"avio_skip ( pb , opcode_size )"	427:12:7668:7694	6721935	59	True				
ANR	6723008	CallExpression	"avio_skip ( pb , opcode_size )"		6721935	0					
ANR	6723009	Callee	avio_skip		6721935	0					
ANR	6723010	Identifier	avio_skip		6721935	0					
ANR	6723011	ArgumentList	pb		6721935	1					
ANR	6723012	Argument	pb		6721935	0					
ANR	6723013	Identifier	pb		6721935	0					
ANR	6723014	Argument	opcode_size		6721935	1					
ANR	6723015	Identifier	opcode_size		6721935	0					
ANR	6723016	BreakStatement	break ;	429:12:7709:7714	6721935	60	True				
ANR	6723017	Label	case OPCODE_SILENCE_FRAME :	433:8:7727:7752	6721935	61	True				
ANR	6723018	Identifier	OPCODE_SILENCE_FRAME		6721935	0					
ANR	6723019	ExpressionStatement	"av_log ( s -> avf , AV_LOG_TRACE , ""silence frame\\n"" )"	435:12:7767:7814	6721935	62	True				
ANR	6723020	CallExpression	"av_log ( s -> avf , AV_LOG_TRACE , ""silence frame\\n"" )"		6721935	0					
ANR	6723021	Callee	av_log		6721935	0					
ANR	6723022	Identifier	av_log		6721935	0					
ANR	6723023	ArgumentList	s -> avf		6721935	1					
ANR	6723024	Argument	s -> avf		6721935	0					
ANR	6723025	PtrMemberAccess	s -> avf		6721935	0					
ANR	6723026	Identifier	s		6721935	0					
ANR	6723027	Identifier	avf		6721935	1					
ANR	6723028	Argument	AV_LOG_TRACE		6721935	1					
ANR	6723029	Identifier	AV_LOG_TRACE		6721935	0					
ANR	6723030	Argument	"""silence frame\\n"""		6721935	2					
ANR	6723031	PrimaryExpression	"""silence frame\\n"""		6721935	0					
ANR	6723032	ExpressionStatement	"avio_skip ( pb , opcode_size )"	437:12:7829:7855	6721935	63	True				
ANR	6723033	CallExpression	"avio_skip ( pb , opcode_size )"		6721935	0					
ANR	6723034	Callee	avio_skip		6721935	0					
ANR	6723035	Identifier	avio_skip		6721935	0					
ANR	6723036	ArgumentList	pb		6721935	1					
ANR	6723037	Argument	pb		6721935	0					
ANR	6723038	Identifier	pb		6721935	0					
ANR	6723039	Argument	opcode_size		6721935	1					
ANR	6723040	Identifier	opcode_size		6721935	0					
ANR	6723041	BreakStatement	break ;	439:12:7870:7875	6721935	64	True				
ANR	6723042	Label	case OPCODE_INIT_VIDEO_MODE :	443:8:7888:7915	6721935	65	True				
ANR	6723043	Identifier	OPCODE_INIT_VIDEO_MODE		6721935	0					
ANR	6723044	ExpressionStatement	"av_log ( s -> avf , AV_LOG_TRACE , ""initialize video mode\\n"" )"	445:12:7930:7985	6721935	66	True				
ANR	6723045	CallExpression	"av_log ( s -> avf , AV_LOG_TRACE , ""initialize video mode\\n"" )"		6721935	0					
ANR	6723046	Callee	av_log		6721935	0					
ANR	6723047	Identifier	av_log		6721935	0					
ANR	6723048	ArgumentList	s -> avf		6721935	1					
ANR	6723049	Argument	s -> avf		6721935	0					
ANR	6723050	PtrMemberAccess	s -> avf		6721935	0					
ANR	6723051	Identifier	s		6721935	0					
ANR	6723052	Identifier	avf		6721935	1					
ANR	6723053	Argument	AV_LOG_TRACE		6721935	1					
ANR	6723054	Identifier	AV_LOG_TRACE		6721935	0					
ANR	6723055	Argument	"""initialize video mode\\n"""		6721935	2					
ANR	6723056	PrimaryExpression	"""initialize video mode\\n"""		6721935	0					
ANR	6723057	ExpressionStatement	"avio_skip ( pb , opcode_size )"	447:12:8000:8026	6721935	67	True				
ANR	6723058	CallExpression	"avio_skip ( pb , opcode_size )"		6721935	0					
ANR	6723059	Callee	avio_skip		6721935	0					
ANR	6723060	Identifier	avio_skip		6721935	0					
ANR	6723061	ArgumentList	pb		6721935	1					
ANR	6723062	Argument	pb		6721935	0					
ANR	6723063	Identifier	pb		6721935	0					
ANR	6723064	Argument	opcode_size		6721935	1					
ANR	6723065	Identifier	opcode_size		6721935	0					
ANR	6723066	BreakStatement	break ;	449:12:8041:8046	6721935	68	True				
ANR	6723067	Label	case OPCODE_CREATE_GRADIENT :	453:8:8059:8086	6721935	69	True				
ANR	6723068	Identifier	OPCODE_CREATE_GRADIENT		6721935	0					
ANR	6723069	ExpressionStatement	"av_log ( s -> avf , AV_LOG_TRACE , ""create gradient\\n"" )"	455:12:8101:8150	6721935	70	True				
ANR	6723070	CallExpression	"av_log ( s -> avf , AV_LOG_TRACE , ""create gradient\\n"" )"		6721935	0					
ANR	6723071	Callee	av_log		6721935	0					
ANR	6723072	Identifier	av_log		6721935	0					
ANR	6723073	ArgumentList	s -> avf		6721935	1					
ANR	6723074	Argument	s -> avf		6721935	0					
ANR	6723075	PtrMemberAccess	s -> avf		6721935	0					
ANR	6723076	Identifier	s		6721935	0					
ANR	6723077	Identifier	avf		6721935	1					
ANR	6723078	Argument	AV_LOG_TRACE		6721935	1					
ANR	6723079	Identifier	AV_LOG_TRACE		6721935	0					
ANR	6723080	Argument	"""create gradient\\n"""		6721935	2					
ANR	6723081	PrimaryExpression	"""create gradient\\n"""		6721935	0					
ANR	6723082	ExpressionStatement	"avio_skip ( pb , opcode_size )"	457:12:8165:8191	6721935	71	True				
ANR	6723083	CallExpression	"avio_skip ( pb , opcode_size )"		6721935	0					
ANR	6723084	Callee	avio_skip		6721935	0					
ANR	6723085	Identifier	avio_skip		6721935	0					
ANR	6723086	ArgumentList	pb		6721935	1					
ANR	6723087	Argument	pb		6721935	0					
ANR	6723088	Identifier	pb		6721935	0					
ANR	6723089	Argument	opcode_size		6721935	1					
ANR	6723090	Identifier	opcode_size		6721935	0					
ANR	6723091	BreakStatement	break ;	459:12:8206:8211	6721935	72	True				
ANR	6723092	Label	case OPCODE_SET_PALETTE :	463:8:8224:8247	6721935	73	True				
ANR	6723093	Identifier	OPCODE_SET_PALETTE		6721935	0					
ANR	6723094	ExpressionStatement	"av_log ( s -> avf , AV_LOG_TRACE , ""set palette\\n"" )"	465:12:8262:8307	6721935	74	True				
ANR	6723095	CallExpression	"av_log ( s -> avf , AV_LOG_TRACE , ""set palette\\n"" )"		6721935	0					
ANR	6723096	Callee	av_log		6721935	0					
ANR	6723097	Identifier	av_log		6721935	0					
ANR	6723098	ArgumentList	s -> avf		6721935	1					
ANR	6723099	Argument	s -> avf		6721935	0					
ANR	6723100	PtrMemberAccess	s -> avf		6721935	0					
ANR	6723101	Identifier	s		6721935	0					
ANR	6723102	Identifier	avf		6721935	1					
ANR	6723103	Argument	AV_LOG_TRACE		6721935	1					
ANR	6723104	Identifier	AV_LOG_TRACE		6721935	0					
ANR	6723105	Argument	"""set palette\\n"""		6721935	2					
ANR	6723106	PrimaryExpression	"""set palette\\n"""		6721935	0					
ANR	6723107	IfStatement	if ( opcode_size > 0x304 || opcode_size < 4 )		6721935	75					
ANR	6723108	Condition	opcode_size > 0x304 || opcode_size < 4	471:16:8424:8461	6721935	0	True				
ANR	6723109	OrExpression	opcode_size > 0x304 || opcode_size < 4		6721935	0		||			
ANR	6723110	RelationalExpression	opcode_size > 0x304		6721935	0		>			
ANR	6723111	Identifier	opcode_size		6721935	0					
ANR	6723112	PrimaryExpression	0x304		6721935	1					
ANR	6723113	RelationalExpression	opcode_size < 4		6721935	1		<			
ANR	6723114	Identifier	opcode_size		6721935	0					
ANR	6723115	PrimaryExpression	4		6721935	1					
ANR	6723116	CompoundStatement		467:56:8375:8375	6721935	1					
ANR	6723117	ExpressionStatement	"av_log ( s -> avf , AV_LOG_TRACE , ""demux_ipmovie: set_palette opcode with invalid size\\n"" )"	473:16:8483:8568	6721935	0	True				
ANR	6723118	CallExpression	"av_log ( s -> avf , AV_LOG_TRACE , ""demux_ipmovie: set_palette opcode with invalid size\\n"" )"		6721935	0					
ANR	6723119	Callee	av_log		6721935	0					
ANR	6723120	Identifier	av_log		6721935	0					
ANR	6723121	ArgumentList	s -> avf		6721935	1					
ANR	6723122	Argument	s -> avf		6721935	0					
ANR	6723123	PtrMemberAccess	s -> avf		6721935	0					
ANR	6723124	Identifier	s		6721935	0					
ANR	6723125	Identifier	avf		6721935	1					
ANR	6723126	Argument	AV_LOG_TRACE		6721935	1					
ANR	6723127	Identifier	AV_LOG_TRACE		6721935	0					
ANR	6723128	Argument	"""demux_ipmovie: set_palette opcode with invalid size\\n"""		6721935	2					
ANR	6723129	PrimaryExpression	"""demux_ipmovie: set_palette opcode with invalid size\\n"""		6721935	0					
ANR	6723130	ExpressionStatement	chunk_type = CHUNK_BAD	475:16:8587:8609	6721935	1	True				
ANR	6723131	AssignmentExpression	chunk_type = CHUNK_BAD		6721935	0		=			
ANR	6723132	Identifier	chunk_type		6721935	0					
ANR	6723133	Identifier	CHUNK_BAD		6721935	1					
ANR	6723134	BreakStatement	break ;	477:16:8628:8633	6721935	2	True				
ANR	6723135	IfStatement	"if ( avio_read ( pb , scratch , opcode_size ) != opcode_size )"		6721935	76					
ANR	6723136	Condition	"avio_read ( pb , scratch , opcode_size ) != opcode_size"	481:16:8667:8716	6721935	0	True				
ANR	6723137	EqualityExpression	"avio_read ( pb , scratch , opcode_size ) != opcode_size"		6721935	0		!=			
ANR	6723138	CallExpression	"avio_read ( pb , scratch , opcode_size )"		6721935	0					
ANR	6723139	Callee	avio_read		6721935	0					
ANR	6723140	Identifier	avio_read		6721935	0					
ANR	6723141	ArgumentList	pb		6721935	1					
ANR	6723142	Argument	pb		6721935	0					
ANR	6723143	Identifier	pb		6721935	0					
ANR	6723144	Argument	scratch		6721935	1					
ANR	6723145	Identifier	scratch		6721935	0					
ANR	6723146	Argument	opcode_size		6721935	2					
ANR	6723147	Identifier	opcode_size		6721935	0					
ANR	6723148	Identifier	opcode_size		6721935	1					
ANR	6723149	CompoundStatement		477:68:8630:8630	6721935	1					
ANR	6723150	ExpressionStatement	chunk_type = CHUNK_BAD	483:16:8738:8760	6721935	0	True				
ANR	6723151	AssignmentExpression	chunk_type = CHUNK_BAD		6721935	0		=			
ANR	6723152	Identifier	chunk_type		6721935	0					
ANR	6723153	Identifier	CHUNK_BAD		6721935	1					
ANR	6723154	BreakStatement	break ;	485:16:8779:8784	6721935	1	True				
ANR	6723155	ExpressionStatement	first_color = AV_RL16 ( & scratch [ 0 ] )	493:12:8881:8915	6721935	77	True				
ANR	6723156	AssignmentExpression	first_color = AV_RL16 ( & scratch [ 0 ] )		6721935	0		=			
ANR	6723157	Identifier	first_color		6721935	0					
ANR	6723158	CallExpression	AV_RL16 ( & scratch [ 0 ] )		6721935	1					
ANR	6723159	Callee	AV_RL16		6721935	0					
ANR	6723160	Identifier	AV_RL16		6721935	0					
ANR	6723161	ArgumentList	& scratch [ 0 ]		6721935	1					
ANR	6723162	Argument	& scratch [ 0 ]		6721935	0					
ANR	6723163	UnaryOperationExpression	& scratch [ 0 ]		6721935	0					
ANR	6723164	UnaryOperator	&		6721935	0					
ANR	6723165	ArrayIndexing	scratch [ 0 ]		6721935	1					
ANR	6723166	Identifier	scratch		6721935	0					
ANR	6723167	PrimaryExpression	0		6721935	1					
ANR	6723168	ExpressionStatement	last_color = first_color + AV_RL16 ( & scratch [ 2 ] ) - 1	495:12:8930:8981	6721935	78	True				
ANR	6723169	AssignmentExpression	last_color = first_color + AV_RL16 ( & scratch [ 2 ] ) - 1		6721935	0		=			
ANR	6723170	Identifier	last_color		6721935	0					
ANR	6723171	AdditiveExpression	first_color + AV_RL16 ( & scratch [ 2 ] ) - 1		6721935	1		+			
ANR	6723172	Identifier	first_color		6721935	0					
ANR	6723173	AdditiveExpression	AV_RL16 ( & scratch [ 2 ] ) - 1		6721935	1		-			
ANR	6723174	CallExpression	AV_RL16 ( & scratch [ 2 ] )		6721935	0					
ANR	6723175	Callee	AV_RL16		6721935	0					
ANR	6723176	Identifier	AV_RL16		6721935	0					
ANR	6723177	ArgumentList	& scratch [ 2 ]		6721935	1					
ANR	6723178	Argument	& scratch [ 2 ]		6721935	0					
ANR	6723179	UnaryOperationExpression	& scratch [ 2 ]		6721935	0					
ANR	6723180	UnaryOperator	&		6721935	0					
ANR	6723181	ArrayIndexing	scratch [ 2 ]		6721935	1					
ANR	6723182	Identifier	scratch		6721935	0					
ANR	6723183	PrimaryExpression	2		6721935	1					
ANR	6723184	PrimaryExpression	1		6721935	1					
ANR	6723185	IfStatement	if ( ( first_color > 0xFF ) || ( last_color > 0xFF ) || ( last_color - first_color + 1 ) * 3 + 4 > opcode_size )		6721935	79					
ANR	6723186	Condition	( first_color > 0xFF ) || ( last_color > 0xFF ) || ( last_color - first_color + 1 ) * 3 + 4 > opcode_size	499:19:9066:9179	6721935	0	True				
ANR	6723187	OrExpression	( first_color > 0xFF ) || ( last_color > 0xFF ) || ( last_color - first_color + 1 ) * 3 + 4 > opcode_size		6721935	0		||			
ANR	6723188	RelationalExpression	first_color > 0xFF		6721935	0		>			
ANR	6723189	Identifier	first_color		6721935	0					
ANR	6723190	PrimaryExpression	0xFF		6721935	1					
ANR	6723191	OrExpression	( last_color > 0xFF ) || ( last_color - first_color + 1 ) * 3 + 4 > opcode_size		6721935	1		||			
ANR	6723192	RelationalExpression	last_color > 0xFF		6721935	0		>			
ANR	6723193	Identifier	last_color		6721935	0					
ANR	6723194	PrimaryExpression	0xFF		6721935	1					
ANR	6723195	RelationalExpression	( last_color - first_color + 1 ) * 3 + 4 > opcode_size		6721935	1		>			
ANR	6723196	AdditiveExpression	( last_color - first_color + 1 ) * 3 + 4		6721935	0		+			
ANR	6723197	MultiplicativeExpression	( last_color - first_color + 1 ) * 3		6721935	0		*			
ANR	6723198	AdditiveExpression	last_color - first_color + 1		6721935	0		-			
ANR	6723199	Identifier	last_color		6721935	0					
ANR	6723200	AdditiveExpression	first_color + 1		6721935	1		+			
ANR	6723201	Identifier	first_color		6721935	0					
ANR	6723202	PrimaryExpression	1		6721935	1					
ANR	6723203	PrimaryExpression	3		6721935	1					
ANR	6723204	PrimaryExpression	4		6721935	1					
ANR	6723205	Identifier	opcode_size		6721935	1					
ANR	6723206	CompoundStatement		497:71:9093:9093	6721935	1					
ANR	6723207	ExpressionStatement	"av_log ( s -> avf , AV_LOG_TRACE , ""demux_ipmovie: set_palette indexes out of range (%d -> %d)\\n"" , first_color , last_color )"	503:16:9201:9339	6721935	0	True				
ANR	6723208	CallExpression	"av_log ( s -> avf , AV_LOG_TRACE , ""demux_ipmovie: set_palette indexes out of range (%d -> %d)\\n"" , first_color , last_color )"		6721935	0					
ANR	6723209	Callee	av_log		6721935	0					
ANR	6723210	Identifier	av_log		6721935	0					
ANR	6723211	ArgumentList	s -> avf		6721935	1					
ANR	6723212	Argument	s -> avf		6721935	0					
ANR	6723213	PtrMemberAccess	s -> avf		6721935	0					
ANR	6723214	Identifier	s		6721935	0					
ANR	6723215	Identifier	avf		6721935	1					
ANR	6723216	Argument	AV_LOG_TRACE		6721935	1					
ANR	6723217	Identifier	AV_LOG_TRACE		6721935	0					
ANR	6723218	Argument	"""demux_ipmovie: set_palette indexes out of range (%d -> %d)\\n"""		6721935	2					
ANR	6723219	PrimaryExpression	"""demux_ipmovie: set_palette indexes out of range (%d -> %d)\\n"""		6721935	0					
ANR	6723220	Argument	first_color		6721935	3					
ANR	6723221	Identifier	first_color		6721935	0					
ANR	6723222	Argument	last_color		6721935	4					
ANR	6723223	Identifier	last_color		6721935	0					
ANR	6723224	ExpressionStatement	chunk_type = CHUNK_BAD	507:16:9358:9380	6721935	1	True				
ANR	6723225	AssignmentExpression	chunk_type = CHUNK_BAD		6721935	0		=			
ANR	6723226	Identifier	chunk_type		6721935	0					
ANR	6723227	Identifier	CHUNK_BAD		6721935	1					
ANR	6723228	BreakStatement	break ;	509:16:9399:9404	6721935	2	True				
ANR	6723229	ExpressionStatement	j = 4	513:12:9434:9439	6721935	80	True				
ANR	6723230	AssignmentExpression	j = 4		6721935	0		=			
ANR	6723231	Identifier	j		6721935	0					
ANR	6723232	PrimaryExpression	4		6721935	1					
ANR	6723233	ForStatement	for ( i = first_color ; i <= last_color ; i ++ )		6721935	81					
ANR	6723234	ForInit	i = first_color ;	515:17:9495:9510	6721935	0	True				
ANR	6723235	AssignmentExpression	i = first_color		6721935	0		=			
ANR	6723236	Identifier	i		6721935	0					
ANR	6723237	Identifier	first_color		6721935	1					
ANR	6723238	Condition	i <= last_color	515:34:9512:9526	6721935	1	True				
ANR	6723239	RelationalExpression	i <= last_color		6721935	0		<=			
ANR	6723240	Identifier	i		6721935	0					
ANR	6723241	Identifier	last_color		6721935	1					
ANR	6723242	PostIncDecOperationExpression	i ++	515:51:9529:9531	6721935	2	True				
ANR	6723243	Identifier	i		6721935	0					
ANR	6723244	IncDec	++		6721935	1					
ANR	6723245	CompoundStatement		511:56:9445:9445	6721935	3					
ANR	6723246	ExpressionStatement	r = scratch [ j ++ ] * 4	521:16:9693:9713	6721935	0	True				
ANR	6723247	AssignmentExpression	r = scratch [ j ++ ] * 4		6721935	0		=			
ANR	6723248	Identifier	r		6721935	0					
ANR	6723249	MultiplicativeExpression	scratch [ j ++ ] * 4		6721935	1		*			
ANR	6723250	ArrayIndexing	scratch [ j ++ ]		6721935	0					
ANR	6723251	Identifier	scratch		6721935	0					
ANR	6723252	PostIncDecOperationExpression	j ++		6721935	1					
ANR	6723253	Identifier	j		6721935	0					
ANR	6723254	IncDec	++		6721935	1					
ANR	6723255	PrimaryExpression	4		6721935	1					
ANR	6723256	ExpressionStatement	g = scratch [ j ++ ] * 4	523:16:9732:9752	6721935	1	True				
ANR	6723257	AssignmentExpression	g = scratch [ j ++ ] * 4		6721935	0		=			
ANR	6723258	Identifier	g		6721935	0					
ANR	6723259	MultiplicativeExpression	scratch [ j ++ ] * 4		6721935	1		*			
ANR	6723260	ArrayIndexing	scratch [ j ++ ]		6721935	0					
ANR	6723261	Identifier	scratch		6721935	0					
ANR	6723262	PostIncDecOperationExpression	j ++		6721935	1					
ANR	6723263	Identifier	j		6721935	0					
ANR	6723264	IncDec	++		6721935	1					
ANR	6723265	PrimaryExpression	4		6721935	1					
ANR	6723266	ExpressionStatement	b = scratch [ j ++ ] * 4	525:16:9771:9791	6721935	2	True				
ANR	6723267	AssignmentExpression	b = scratch [ j ++ ] * 4		6721935	0		=			
ANR	6723268	Identifier	b		6721935	0					
ANR	6723269	MultiplicativeExpression	scratch [ j ++ ] * 4		6721935	1		*			
ANR	6723270	ArrayIndexing	scratch [ j ++ ]		6721935	0					
ANR	6723271	Identifier	scratch		6721935	0					
ANR	6723272	PostIncDecOperationExpression	j ++		6721935	1					
ANR	6723273	Identifier	j		6721935	0					
ANR	6723274	IncDec	++		6721935	1					
ANR	6723275	PrimaryExpression	4		6721935	1					
ANR	6723276	ExpressionStatement	s -> palette [ i ] = ( 0xFFU << 24 ) | ( r << 16 ) | ( g << 8 ) | ( b )	527:16:9810:9868	6721935	3	True				
ANR	6723277	AssignmentExpression	s -> palette [ i ] = ( 0xFFU << 24 ) | ( r << 16 ) | ( g << 8 ) | ( b )		6721935	0		=			
ANR	6723278	ArrayIndexing	s -> palette [ i ]		6721935	0					
ANR	6723279	PtrMemberAccess	s -> palette		6721935	0					
ANR	6723280	Identifier	s		6721935	0					
ANR	6723281	Identifier	palette		6721935	1					
ANR	6723282	Identifier	i		6721935	1					
ANR	6723283	InclusiveOrExpression	( 0xFFU << 24 ) | ( r << 16 ) | ( g << 8 ) | ( b )		6721935	1		|			
ANR	6723284	ShiftExpression	0xFFU << 24		6721935	0		<<			
ANR	6723285	PrimaryExpression	0xFFU		6721935	0					
ANR	6723286	PrimaryExpression	24		6721935	1					
ANR	6723287	InclusiveOrExpression	( r << 16 ) | ( g << 8 ) | ( b )		6721935	1		|			
ANR	6723288	ShiftExpression	r << 16		6721935	0		<<			
ANR	6723289	Identifier	r		6721935	0					
ANR	6723290	PrimaryExpression	16		6721935	1					
ANR	6723291	InclusiveOrExpression	( g << 8 ) | ( b )		6721935	1		|			
ANR	6723292	ShiftExpression	g << 8		6721935	0		<<			
ANR	6723293	Identifier	g		6721935	0					
ANR	6723294	PrimaryExpression	8		6721935	1					
ANR	6723295	Identifier	b		6721935	1					
ANR	6723296	ExpressionStatement	s -> palette [ i ] |= s -> palette [ i ] >> 6 & 0x30303	529:16:9887:9932	6721935	4	True				
ANR	6723297	AssignmentExpression	s -> palette [ i ] |= s -> palette [ i ] >> 6 & 0x30303		6721935	0		|=			
ANR	6723298	ArrayIndexing	s -> palette [ i ]		6721935	0					
ANR	6723299	PtrMemberAccess	s -> palette		6721935	0					
ANR	6723300	Identifier	s		6721935	0					
ANR	6723301	Identifier	palette		6721935	1					
ANR	6723302	Identifier	i		6721935	1					
ANR	6723303	BitAndExpression	s -> palette [ i ] >> 6 & 0x30303		6721935	1		&			
ANR	6723304	ShiftExpression	s -> palette [ i ] >> 6		6721935	0		>>			
ANR	6723305	ArrayIndexing	s -> palette [ i ]		6721935	0					
ANR	6723306	PtrMemberAccess	s -> palette		6721935	0					
ANR	6723307	Identifier	s		6721935	0					
ANR	6723308	Identifier	palette		6721935	1					
ANR	6723309	Identifier	i		6721935	1					
ANR	6723310	PrimaryExpression	6		6721935	1					
ANR	6723311	PrimaryExpression	0x30303		6721935	1					
ANR	6723312	ExpressionStatement	s -> has_palette = 1	533:12:9962:9980	6721935	82	True				
ANR	6723313	AssignmentExpression	s -> has_palette = 1		6721935	0		=			
ANR	6723314	PtrMemberAccess	s -> has_palette		6721935	0					
ANR	6723315	Identifier	s		6721935	0					
ANR	6723316	Identifier	has_palette		6721935	1					
ANR	6723317	PrimaryExpression	1		6721935	1					
ANR	6723318	BreakStatement	break ;	535:12:9995:10000	6721935	83	True				
ANR	6723319	Label	case OPCODE_SET_PALETTE_COMPRESSED :	539:8:10013:10047	6721935	84	True				
ANR	6723320	Identifier	OPCODE_SET_PALETTE_COMPRESSED		6721935	0					
ANR	6723321	ExpressionStatement	"av_log ( s -> avf , AV_LOG_TRACE , ""set palette compressed\\n"" )"	541:12:10062:10118	6721935	85	True				
ANR	6723322	CallExpression	"av_log ( s -> avf , AV_LOG_TRACE , ""set palette compressed\\n"" )"		6721935	0					
ANR	6723323	Callee	av_log		6721935	0					
ANR	6723324	Identifier	av_log		6721935	0					
ANR	6723325	ArgumentList	s -> avf		6721935	1					
ANR	6723326	Argument	s -> avf		6721935	0					
ANR	6723327	PtrMemberAccess	s -> avf		6721935	0					
ANR	6723328	Identifier	s		6721935	0					
ANR	6723329	Identifier	avf		6721935	1					
ANR	6723330	Argument	AV_LOG_TRACE		6721935	1					
ANR	6723331	Identifier	AV_LOG_TRACE		6721935	0					
ANR	6723332	Argument	"""set palette compressed\\n"""		6721935	2					
ANR	6723333	PrimaryExpression	"""set palette compressed\\n"""		6721935	0					
ANR	6723334	ExpressionStatement	"avio_skip ( pb , opcode_size )"	543:12:10133:10159	6721935	86	True				
ANR	6723335	CallExpression	"avio_skip ( pb , opcode_size )"		6721935	0					
ANR	6723336	Callee	avio_skip		6721935	0					
ANR	6723337	Identifier	avio_skip		6721935	0					
ANR	6723338	ArgumentList	pb		6721935	1					
ANR	6723339	Argument	pb		6721935	0					
ANR	6723340	Identifier	pb		6721935	0					
ANR	6723341	Argument	opcode_size		6721935	1					
ANR	6723342	Identifier	opcode_size		6721935	0					
ANR	6723343	BreakStatement	break ;	545:12:10174:10179	6721935	87	True				
ANR	6723344	Label	case OPCODE_SET_DECODING_MAP :	549:8:10192:10220	6721935	88	True				
ANR	6723345	Identifier	OPCODE_SET_DECODING_MAP		6721935	0					
ANR	6723346	ExpressionStatement	"av_log ( s -> avf , AV_LOG_TRACE , ""set decoding map\\n"" )"	551:12:10235:10285	6721935	89	True				
ANR	6723347	CallExpression	"av_log ( s -> avf , AV_LOG_TRACE , ""set decoding map\\n"" )"		6721935	0					
ANR	6723348	Callee	av_log		6721935	0					
ANR	6723349	Identifier	av_log		6721935	0					
ANR	6723350	ArgumentList	s -> avf		6721935	1					
ANR	6723351	Argument	s -> avf		6721935	0					
ANR	6723352	PtrMemberAccess	s -> avf		6721935	0					
ANR	6723353	Identifier	s		6721935	0					
ANR	6723354	Identifier	avf		6721935	1					
ANR	6723355	Argument	AV_LOG_TRACE		6721935	1					
ANR	6723356	Identifier	AV_LOG_TRACE		6721935	0					
ANR	6723357	Argument	"""set decoding map\\n"""		6721935	2					
ANR	6723358	PrimaryExpression	"""set decoding map\\n"""		6721935	0					
ANR	6723359	ExpressionStatement	s -> decode_map_chunk_offset = avio_tell ( pb )	557:12:10354:10396	6721935	90	True				
ANR	6723360	AssignmentExpression	s -> decode_map_chunk_offset = avio_tell ( pb )		6721935	0		=			
ANR	6723361	PtrMemberAccess	s -> decode_map_chunk_offset		6721935	0					
ANR	6723362	Identifier	s		6721935	0					
ANR	6723363	Identifier	decode_map_chunk_offset		6721935	1					
ANR	6723364	CallExpression	avio_tell ( pb )		6721935	1					
ANR	6723365	Callee	avio_tell		6721935	0					
ANR	6723366	Identifier	avio_tell		6721935	0					
ANR	6723367	ArgumentList	pb		6721935	1					
ANR	6723368	Argument	pb		6721935	0					
ANR	6723369	Identifier	pb		6721935	0					
ANR	6723370	ExpressionStatement	s -> decode_map_chunk_size = opcode_size	559:12:10411:10449	6721935	91	True				
ANR	6723371	AssignmentExpression	s -> decode_map_chunk_size = opcode_size		6721935	0		=			
ANR	6723372	PtrMemberAccess	s -> decode_map_chunk_size		6721935	0					
ANR	6723373	Identifier	s		6721935	0					
ANR	6723374	Identifier	decode_map_chunk_size		6721935	1					
ANR	6723375	Identifier	opcode_size		6721935	1					
ANR	6723376	ExpressionStatement	"avio_skip ( pb , opcode_size )"	561:12:10464:10490	6721935	92	True				
ANR	6723377	CallExpression	"avio_skip ( pb , opcode_size )"		6721935	0					
ANR	6723378	Callee	avio_skip		6721935	0					
ANR	6723379	Identifier	avio_skip		6721935	0					
ANR	6723380	ArgumentList	pb		6721935	1					
ANR	6723381	Argument	pb		6721935	0					
ANR	6723382	Identifier	pb		6721935	0					
ANR	6723383	Argument	opcode_size		6721935	1					
ANR	6723384	Identifier	opcode_size		6721935	0					
ANR	6723385	BreakStatement	break ;	563:12:10505:10510	6721935	93	True				
ANR	6723386	Label	case OPCODE_VIDEO_DATA_11 :	567:8:10523:10548	6721935	94	True				
ANR	6723387	Identifier	OPCODE_VIDEO_DATA_11		6721935	0					
ANR	6723388	ExpressionStatement	"av_log ( s -> avf , AV_LOG_TRACE , ""set video data\\n"" )"	569:12:10563:10611	6721935	95	True				
ANR	6723389	CallExpression	"av_log ( s -> avf , AV_LOG_TRACE , ""set video data\\n"" )"		6721935	0					
ANR	6723390	Callee	av_log		6721935	0					
ANR	6723391	Identifier	av_log		6721935	0					
ANR	6723392	ArgumentList	s -> avf		6721935	1					
ANR	6723393	Argument	s -> avf		6721935	0					
ANR	6723394	PtrMemberAccess	s -> avf		6721935	0					
ANR	6723395	Identifier	s		6721935	0					
ANR	6723396	Identifier	avf		6721935	1					
ANR	6723397	Argument	AV_LOG_TRACE		6721935	1					
ANR	6723398	Identifier	AV_LOG_TRACE		6721935	0					
ANR	6723399	Argument	"""set video data\\n"""		6721935	2					
ANR	6723400	PrimaryExpression	"""set video data\\n"""		6721935	0					
ANR	6723401	ExpressionStatement	s -> frame_format = 0x11	571:12:10626:10648	6721935	96	True				
ANR	6723402	AssignmentExpression	s -> frame_format = 0x11		6721935	0		=			
ANR	6723403	PtrMemberAccess	s -> frame_format		6721935	0					
ANR	6723404	Identifier	s		6721935	0					
ANR	6723405	Identifier	frame_format		6721935	1					
ANR	6723406	PrimaryExpression	0x11		6721935	1					
ANR	6723407	ExpressionStatement	s -> video_chunk_offset = avio_tell ( pb )	577:12:10717:10754	6721935	97	True				
ANR	6723408	AssignmentExpression	s -> video_chunk_offset = avio_tell ( pb )		6721935	0		=			
ANR	6723409	PtrMemberAccess	s -> video_chunk_offset		6721935	0					
ANR	6723410	Identifier	s		6721935	0					
ANR	6723411	Identifier	video_chunk_offset		6721935	1					
ANR	6723412	CallExpression	avio_tell ( pb )		6721935	1					
ANR	6723413	Callee	avio_tell		6721935	0					
ANR	6723414	Identifier	avio_tell		6721935	0					
ANR	6723415	ArgumentList	pb		6721935	1					
ANR	6723416	Argument	pb		6721935	0					
ANR	6723417	Identifier	pb		6721935	0					
ANR	6723418	ExpressionStatement	s -> video_chunk_size = opcode_size	579:12:10769:10802	6721935	98	True				
ANR	6723419	AssignmentExpression	s -> video_chunk_size = opcode_size		6721935	0		=			
ANR	6723420	PtrMemberAccess	s -> video_chunk_size		6721935	0					
ANR	6723421	Identifier	s		6721935	0					
ANR	6723422	Identifier	video_chunk_size		6721935	1					
ANR	6723423	Identifier	opcode_size		6721935	1					
ANR	6723424	ExpressionStatement	"avio_skip ( pb , opcode_size )"	581:12:10817:10843	6721935	99	True				
ANR	6723425	CallExpression	"avio_skip ( pb , opcode_size )"		6721935	0					
ANR	6723426	Callee	avio_skip		6721935	0					
ANR	6723427	Identifier	avio_skip		6721935	0					
ANR	6723428	ArgumentList	pb		6721935	1					
ANR	6723429	Argument	pb		6721935	0					
ANR	6723430	Identifier	pb		6721935	0					
ANR	6723431	Argument	opcode_size		6721935	1					
ANR	6723432	Identifier	opcode_size		6721935	0					
ANR	6723433	BreakStatement	break ;	583:12:10858:10863	6721935	100	True				
ANR	6723434	Label	default :	587:8:10876:10883	6721935	101	True				
ANR	6723435	Identifier	default		6721935	0					
ANR	6723436	ExpressionStatement	"av_log ( s -> avf , AV_LOG_TRACE , ""*** unknown opcode type\\n"" )"	589:12:10898:10955	6721935	102	True				
ANR	6723437	CallExpression	"av_log ( s -> avf , AV_LOG_TRACE , ""*** unknown opcode type\\n"" )"		6721935	0					
ANR	6723438	Callee	av_log		6721935	0					
ANR	6723439	Identifier	av_log		6721935	0					
ANR	6723440	ArgumentList	s -> avf		6721935	1					
ANR	6723441	Argument	s -> avf		6721935	0					
ANR	6723442	PtrMemberAccess	s -> avf		6721935	0					
ANR	6723443	Identifier	s		6721935	0					
ANR	6723444	Identifier	avf		6721935	1					
ANR	6723445	Argument	AV_LOG_TRACE		6721935	1					
ANR	6723446	Identifier	AV_LOG_TRACE		6721935	0					
ANR	6723447	Argument	"""*** unknown opcode type\\n"""		6721935	2					
ANR	6723448	PrimaryExpression	"""*** unknown opcode type\\n"""		6721935	0					
ANR	6723449	ExpressionStatement	chunk_type = CHUNK_BAD	591:12:10970:10992	6721935	103	True				
ANR	6723450	AssignmentExpression	chunk_type = CHUNK_BAD		6721935	0		=			
ANR	6723451	Identifier	chunk_type		6721935	0					
ANR	6723452	Identifier	CHUNK_BAD		6721935	1					
ANR	6723453	BreakStatement	break ;	593:12:11007:11012	6721935	104	True				
ANR	6723454	IfStatement	if ( s -> avf -> nb_streams == 1 && s -> audio_type )		6721935	22					
ANR	6723455	Condition	s -> avf -> nb_streams == 1 && s -> audio_type	603:8:11045:11084	6721935	0	True				
ANR	6723456	AndExpression	s -> avf -> nb_streams == 1 && s -> audio_type		6721935	0		&&			
ANR	6723457	EqualityExpression	s -> avf -> nb_streams == 1		6721935	0		==			
ANR	6723458	PtrMemberAccess	s -> avf -> nb_streams		6721935	0					
ANR	6723459	PtrMemberAccess	s -> avf		6721935	0					
ANR	6723460	Identifier	s		6721935	0					
ANR	6723461	Identifier	avf		6721935	1					
ANR	6723462	Identifier	nb_streams		6721935	1					
ANR	6723463	PrimaryExpression	1		6721935	1					
ANR	6723464	PtrMemberAccess	s -> audio_type		6721935	1					
ANR	6723465	Identifier	s		6721935	0					
ANR	6723466	Identifier	audio_type		6721935	1					
ANR	6723467	ExpressionStatement	init_audio ( s -> avf )	605:8:11096:11114	6721935	1	True				
ANR	6723468	CallExpression	init_audio ( s -> avf )		6721935	0					
ANR	6723469	Callee	init_audio		6721935	0					
ANR	6723470	Identifier	init_audio		6721935	0					
ANR	6723471	ArgumentList	s -> avf		6721935	1					
ANR	6723472	Argument	s -> avf		6721935	0					
ANR	6723473	PtrMemberAccess	s -> avf		6721935	0					
ANR	6723474	Identifier	s		6721935	0					
ANR	6723475	Identifier	avf		6721935	1					
ANR	6723476	ExpressionStatement	s -> next_chunk_offset = avio_tell ( pb )	611:4:11177:11213	6721935	23	True				
ANR	6723477	AssignmentExpression	s -> next_chunk_offset = avio_tell ( pb )		6721935	0		=			
ANR	6723478	PtrMemberAccess	s -> next_chunk_offset		6721935	0					
ANR	6723479	Identifier	s		6721935	0					
ANR	6723480	Identifier	next_chunk_offset		6721935	1					
ANR	6723481	CallExpression	avio_tell ( pb )		6721935	1					
ANR	6723482	Callee	avio_tell		6721935	0					
ANR	6723483	Identifier	avio_tell		6721935	0					
ANR	6723484	ArgumentList	pb		6721935	1					
ANR	6723485	Argument	pb		6721935	0					
ANR	6723486	Identifier	pb		6721935	0					
ANR	6723487	IfStatement	if ( ( chunk_type == CHUNK_VIDEO ) || ( chunk_type == CHUNK_AUDIO_ONLY ) )		6721935	24					
ANR	6723488	Condition	( chunk_type == CHUNK_VIDEO ) || ( chunk_type == CHUNK_AUDIO_ONLY )	617:8:11279:11341	6721935	0	True				
ANR	6723489	OrExpression	( chunk_type == CHUNK_VIDEO ) || ( chunk_type == CHUNK_AUDIO_ONLY )		6721935	0		||			
ANR	6723490	EqualityExpression	chunk_type == CHUNK_VIDEO		6721935	0		==			
ANR	6723491	Identifier	chunk_type		6721935	0					
ANR	6723492	Identifier	CHUNK_VIDEO		6721935	1					
ANR	6723493	EqualityExpression	chunk_type == CHUNK_AUDIO_ONLY		6721935	1		==			
ANR	6723494	Identifier	chunk_type		6721935	0					
ANR	6723495	Identifier	CHUNK_AUDIO_ONLY		6721935	1					
ANR	6723496	ExpressionStatement	"chunk_type = load_ipmovie_packet ( s , pb , pkt )"	619:8:11353:11397	6721935	1	True				
ANR	6723497	AssignmentExpression	"chunk_type = load_ipmovie_packet ( s , pb , pkt )"		6721935	0		=			
ANR	6723498	Identifier	chunk_type		6721935	0					
ANR	6723499	CallExpression	"load_ipmovie_packet ( s , pb , pkt )"		6721935	1					
ANR	6723500	Callee	load_ipmovie_packet		6721935	0					
ANR	6723501	Identifier	load_ipmovie_packet		6721935	0					
ANR	6723502	ArgumentList	s		6721935	1					
ANR	6723503	Argument	s		6721935	0					
ANR	6723504	Identifier	s		6721935	0					
ANR	6723505	Argument	pb		6721935	1					
ANR	6723506	Identifier	pb		6721935	0					
ANR	6723507	Argument	pkt		6721935	2					
ANR	6723508	Identifier	pkt		6721935	0					
ANR	6723509	ReturnStatement	return chunk_type ;	623:4:11406:11423	6721935	25	True				
ANR	6723510	Identifier	chunk_type		6721935	0					
ANR	6723511	ReturnType	static int		6721935	1					
ANR	6723512	Identifier	process_ipmovie_chunk		6721935	2					
ANR	6723513	ParameterList	"IPMVEContext * s , AVIOContext * pb , AVPacket * pkt"		6721935	3					
ANR	6723514	Parameter	IPMVEContext * s	1:33:33:47	6721935	0	True				
ANR	6723515	ParameterType	IPMVEContext *		6721935	0					
ANR	6723516	Identifier	s		6721935	1					
ANR	6723517	Parameter	AVIOContext * pb	1:50:50:64	6721935	1	True				
ANR	6723518	ParameterType	AVIOContext *		6721935	0					
ANR	6723519	Identifier	pb		6721935	1					
ANR	6723520	Parameter	AVPacket * pkt	3:4:72:84	6721935	2	True				
ANR	6723521	ParameterType	AVPacket *		6721935	0					
ANR	6723522	Identifier	pkt		6721935	1					
ANR	6723523	CFGEntryNode	ENTRY		6721935		True				
ANR	6723524	CFGExitNode	EXIT		6721935		True				
ANR	6723525	Symbol	avio_feof		6721935						
ANR	6723526	Symbol	chunk_size		6721935						
ANR	6723527	Symbol	s -> changed		6721935						
ANR	6723528	Symbol	chunk_preamble		6721935						
ANR	6723529	Symbol	s -> send_buffer		6721935						
ANR	6723530	Symbol	CHUNK_DONE		6721935						
ANR	6723531	Symbol	s -> audio_bits		6721935						
ANR	6723532	Symbol	s -> video_height		6721935						
ANR	6723533	Symbol	opcode_type		6721935						
ANR	6723534	Symbol	s -> frame_format		6721935						
ANR	6723535	Symbol	s -> avf		6721935						
ANR	6723536	Symbol	height		6721935						
ANR	6723537	Symbol	s -> frame_pts_inc		6721935						
ANR	6723538	Symbol	* s -> palette		6721935						
ANR	6723539	Symbol	s -> audio_chunk_size		6721935						
ANR	6723540	Symbol	CHUNK_AUDIO_ONLY		6721935						
ANR	6723541	Symbol	* s -> avf		6721935						
ANR	6723542	Symbol	scratch		6721935						
ANR	6723543	Symbol	AV_CODEC_ID_INTERPLAY_DPCM		6721935						
ANR	6723544	Symbol	s -> avf -> nb_streams		6721935						
ANR	6723545	Symbol	s -> audio_type		6721935						
ANR	6723546	Symbol	CHUNK_VIDEO		6721935						
ANR	6723547	Symbol	AV_CODEC_ID_PCM_S16LE		6721935						
ANR	6723548	Symbol	s -> next_chunk_offset		6721935						
ANR	6723549	Symbol	s -> video_chunk_offset		6721935						
ANR	6723550	Symbol	* scratch		6721935						
ANR	6723551	Symbol	s -> audio_chunk_offset		6721935						
ANR	6723552	Symbol	AV_CODEC_ID_PCM_U8		6721935						
ANR	6723553	Symbol	s -> video_bpp		6721935						
ANR	6723554	Symbol	avio_read		6721935						
ANR	6723555	Symbol	AV_RL16		6721935						
ANR	6723556	Symbol	s -> palette		6721935						
ANR	6723557	Symbol	opcode_preamble		6721935						
ANR	6723558	Symbol	load_ipmovie_packet		6721935						
ANR	6723559	Symbol	s -> video_chunk_size		6721935						
ANR	6723560	Symbol	s -> video_width		6721935						
ANR	6723561	Symbol	s -> decode_map_chunk_offset		6721935						
ANR	6723562	Symbol	CHUNK_PREAMBLE_SIZE		6721935						
ANR	6723563	Symbol	opcode_size		6721935						
ANR	6723564	Symbol	audio_flags		6721935						
ANR	6723565	Symbol	avio_tell		6721935						
ANR	6723566	Symbol	pkt		6721935						
ANR	6723567	Symbol	* * s		6721935						
ANR	6723568	Symbol	s -> audio_channels		6721935						
ANR	6723569	Symbol	s -> decode_map_chunk_size		6721935						
ANR	6723570	Symbol	last_color		6721935						
ANR	6723571	Symbol	chunk_type		6721935						
ANR	6723572	Symbol	* opcode_preamble		6721935						
ANR	6723573	Symbol	first_color		6721935						
ANR	6723574	Symbol	b		6721935						
ANR	6723575	Symbol	CHUNK_BAD		6721935						
ANR	6723576	Symbol	g		6721935						
ANR	6723577	Symbol	opcode_version		6721935						
ANR	6723578	Symbol	i		6721935						
ANR	6723579	Symbol	j		6721935						
ANR	6723580	Symbol	pb		6721935						
ANR	6723581	Symbol	r		6721935						
ANR	6723582	Symbol	s		6721935						
ANR	6723583	Symbol	* i		6721935						
ANR	6723584	Symbol	AV_RL32		6721935						
ANR	6723585	Symbol	width		6721935						
ANR	6723586	Symbol	s -> has_palette		6721935						
ANR	6723587	Symbol	AV_LOG_TRACE		6721935						
ANR	6723588	Symbol	OPCODE_PREAMBLE_SIZE		6721935						
ANR	6723589	Symbol	CHUNK_EOF		6721935						
ANR	6723590	Symbol	s -> audio_sample_rate		6721935						
ANR	6723591	Symbol	* s		6721935						
