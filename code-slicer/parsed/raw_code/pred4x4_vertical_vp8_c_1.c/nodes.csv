command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6669072	File	/home/p4ultr4n/workplace/ReVeal/raw_code/pred4x4_vertical_vp8_c_1.c								
ANR	6669073	Function	pred4x4_vertical_vp8_c	1:0:0:516							
ANR	6669074	FunctionDef	"pred4x4_vertical_vp8_c (uint8_t * src , const uint8_t * topright , int stride)"		6669073	0					
ANR	6669075	CompoundStatement		1:85:85:516	6669073	0					
ANR	6669076	IdentifierDeclStatement	const int lt = src [ - 1 - 1 * stride ] ;	3:4:92:122	6669073	0	True				
ANR	6669077	IdentifierDecl	lt = src [ - 1 - 1 * stride ]		6669073	0					
ANR	6669078	IdentifierDeclType	const int		6669073	0					
ANR	6669079	Identifier	lt		6669073	1					
ANR	6669080	AssignmentExpression	lt = src [ - 1 - 1 * stride ]		6669073	2		=			
ANR	6669081	Identifier	lt		6669073	0					
ANR	6669082	ArrayIndexing	src [ - 1 - 1 * stride ]		6669073	1					
ANR	6669083	Identifier	src		6669073	0					
ANR	6669084	AdditiveExpression	- 1 - 1 * stride		6669073	1		-			
ANR	6669085	UnaryOperationExpression	- 1		6669073	0					
ANR	6669086	UnaryOperator	-		6669073	0					
ANR	6669087	PrimaryExpression	1		6669073	1					
ANR	6669088	MultiplicativeExpression	1 * stride		6669073	1		*			
ANR	6669089	PrimaryExpression	1		6669073	0					
ANR	6669090	Identifier	stride		6669073	1					
ANR	6669091	IdentifierDeclStatement	"LOAD_TOP_EDGE LOAD_TOP_RIGHT_EDGE uint32_t v = PACK_4U8 ( ( lt + 2 * t0 + t1 + 2 ) >> 2 , ( t0 + 2 * t1 + t2 + 2 ) >> 2 , ( t1 + 2 * t2 + t3 + 2 ) >> 2 , ( t2 + 2 * t3 + t4 + 2 ) >> 2 ) ;"	5:4:129:383	6669073	1	True				
ANR	6669092	IdentifierDecl	"v = PACK_4U8 ( ( lt + 2 * t0 + t1 + 2 ) >> 2 , ( t0 + 2 * t1 + t2 + 2 ) >> 2 , ( t1 + 2 * t2 + t3 + 2 ) >> 2 , ( t2 + 2 * t3 + t4 + 2 ) >> 2 )"		6669073	0					
ANR	6669093	IdentifierDeclType	LOAD_TOP_EDGE LOAD_TOP_RIGHT_EDGE uint32_t		6669073	0					
ANR	6669094	Identifier	v		6669073	1					
ANR	6669095	AssignmentExpression	"v = PACK_4U8 ( ( lt + 2 * t0 + t1 + 2 ) >> 2 , ( t0 + 2 * t1 + t2 + 2 ) >> 2 , ( t1 + 2 * t2 + t3 + 2 ) >> 2 , ( t2 + 2 * t3 + t4 + 2 ) >> 2 )"		6669073	2		=			
ANR	6669096	Identifier	v		6669073	0					
ANR	6669097	CallExpression	"PACK_4U8 ( ( lt + 2 * t0 + t1 + 2 ) >> 2 , ( t0 + 2 * t1 + t2 + 2 ) >> 2 , ( t1 + 2 * t2 + t3 + 2 ) >> 2 , ( t2 + 2 * t3 + t4 + 2 ) >> 2 )"		6669073	1					
ANR	6669098	Callee	PACK_4U8		6669073	0					
ANR	6669099	Identifier	PACK_4U8		6669073	0					
ANR	6669100	ArgumentList	( lt + 2 * t0 + t1 + 2 ) >> 2		6669073	1					
ANR	6669101	Argument	( lt + 2 * t0 + t1 + 2 ) >> 2		6669073	0					
ANR	6669102	ShiftExpression	( lt + 2 * t0 + t1 + 2 ) >> 2		6669073	0		>>			
ANR	6669103	AdditiveExpression	lt + 2 * t0 + t1 + 2		6669073	0		+			
ANR	6669104	Identifier	lt		6669073	0					
ANR	6669105	AdditiveExpression	2 * t0 + t1 + 2		6669073	1		+			
ANR	6669106	MultiplicativeExpression	2 * t0		6669073	0		*			
ANR	6669107	PrimaryExpression	2		6669073	0					
ANR	6669108	Identifier	t0		6669073	1					
ANR	6669109	AdditiveExpression	t1 + 2		6669073	1		+			
ANR	6669110	Identifier	t1		6669073	0					
ANR	6669111	PrimaryExpression	2		6669073	1					
ANR	6669112	PrimaryExpression	2		6669073	1					
ANR	6669113	Argument	( t0 + 2 * t1 + t2 + 2 ) >> 2		6669073	1					
ANR	6669114	ShiftExpression	( t0 + 2 * t1 + t2 + 2 ) >> 2		6669073	0		>>			
ANR	6669115	AdditiveExpression	t0 + 2 * t1 + t2 + 2		6669073	0		+			
ANR	6669116	Identifier	t0		6669073	0					
ANR	6669117	AdditiveExpression	2 * t1 + t2 + 2		6669073	1		+			
ANR	6669118	MultiplicativeExpression	2 * t1		6669073	0		*			
ANR	6669119	PrimaryExpression	2		6669073	0					
ANR	6669120	Identifier	t1		6669073	1					
ANR	6669121	AdditiveExpression	t2 + 2		6669073	1		+			
ANR	6669122	Identifier	t2		6669073	0					
ANR	6669123	PrimaryExpression	2		6669073	1					
ANR	6669124	PrimaryExpression	2		6669073	1					
ANR	6669125	Argument	( t1 + 2 * t2 + t3 + 2 ) >> 2		6669073	2					
ANR	6669126	ShiftExpression	( t1 + 2 * t2 + t3 + 2 ) >> 2		6669073	0		>>			
ANR	6669127	AdditiveExpression	t1 + 2 * t2 + t3 + 2		6669073	0		+			
ANR	6669128	Identifier	t1		6669073	0					
ANR	6669129	AdditiveExpression	2 * t2 + t3 + 2		6669073	1		+			
ANR	6669130	MultiplicativeExpression	2 * t2		6669073	0		*			
ANR	6669131	PrimaryExpression	2		6669073	0					
ANR	6669132	Identifier	t2		6669073	1					
ANR	6669133	AdditiveExpression	t3 + 2		6669073	1		+			
ANR	6669134	Identifier	t3		6669073	0					
ANR	6669135	PrimaryExpression	2		6669073	1					
ANR	6669136	PrimaryExpression	2		6669073	1					
ANR	6669137	Argument	( t2 + 2 * t3 + t4 + 2 ) >> 2		6669073	3					
ANR	6669138	ShiftExpression	( t2 + 2 * t3 + t4 + 2 ) >> 2		6669073	0		>>			
ANR	6669139	AdditiveExpression	t2 + 2 * t3 + t4 + 2		6669073	0		+			
ANR	6669140	Identifier	t2		6669073	0					
ANR	6669141	AdditiveExpression	2 * t3 + t4 + 2		6669073	1		+			
ANR	6669142	MultiplicativeExpression	2 * t3		6669073	0		*			
ANR	6669143	PrimaryExpression	2		6669073	0					
ANR	6669144	Identifier	t3		6669073	1					
ANR	6669145	AdditiveExpression	t4 + 2		6669073	1		+			
ANR	6669146	Identifier	t4		6669073	0					
ANR	6669147	PrimaryExpression	2		6669073	1					
ANR	6669148	PrimaryExpression	2		6669073	1					
ANR	6669149	ExpressionStatement	"AV_WN32A ( src + 0 * stride , v )"	19:4:392:417	6669073	2	True				
ANR	6669150	CallExpression	"AV_WN32A ( src + 0 * stride , v )"		6669073	0					
ANR	6669151	Callee	AV_WN32A		6669073	0					
ANR	6669152	Identifier	AV_WN32A		6669073	0					
ANR	6669153	ArgumentList	src + 0 * stride		6669073	1					
ANR	6669154	Argument	src + 0 * stride		6669073	0					
ANR	6669155	AdditiveExpression	src + 0 * stride		6669073	0		+			
ANR	6669156	Identifier	src		6669073	0					
ANR	6669157	MultiplicativeExpression	0 * stride		6669073	1		*			
ANR	6669158	PrimaryExpression	0		6669073	0					
ANR	6669159	Identifier	stride		6669073	1					
ANR	6669160	Argument	v		6669073	1					
ANR	6669161	Identifier	v		6669073	0					
ANR	6669162	ExpressionStatement	"AV_WN32A ( src + 1 * stride , v )"	21:4:424:449	6669073	3	True				
ANR	6669163	CallExpression	"AV_WN32A ( src + 1 * stride , v )"		6669073	0					
ANR	6669164	Callee	AV_WN32A		6669073	0					
ANR	6669165	Identifier	AV_WN32A		6669073	0					
ANR	6669166	ArgumentList	src + 1 * stride		6669073	1					
ANR	6669167	Argument	src + 1 * stride		6669073	0					
ANR	6669168	AdditiveExpression	src + 1 * stride		6669073	0		+			
ANR	6669169	Identifier	src		6669073	0					
ANR	6669170	MultiplicativeExpression	1 * stride		6669073	1		*			
ANR	6669171	PrimaryExpression	1		6669073	0					
ANR	6669172	Identifier	stride		6669073	1					
ANR	6669173	Argument	v		6669073	1					
ANR	6669174	Identifier	v		6669073	0					
ANR	6669175	ExpressionStatement	"AV_WN32A ( src + 2 * stride , v )"	23:4:456:481	6669073	4	True				
ANR	6669176	CallExpression	"AV_WN32A ( src + 2 * stride , v )"		6669073	0					
ANR	6669177	Callee	AV_WN32A		6669073	0					
ANR	6669178	Identifier	AV_WN32A		6669073	0					
ANR	6669179	ArgumentList	src + 2 * stride		6669073	1					
ANR	6669180	Argument	src + 2 * stride		6669073	0					
ANR	6669181	AdditiveExpression	src + 2 * stride		6669073	0		+			
ANR	6669182	Identifier	src		6669073	0					
ANR	6669183	MultiplicativeExpression	2 * stride		6669073	1		*			
ANR	6669184	PrimaryExpression	2		6669073	0					
ANR	6669185	Identifier	stride		6669073	1					
ANR	6669186	Argument	v		6669073	1					
ANR	6669187	Identifier	v		6669073	0					
ANR	6669188	ExpressionStatement	"AV_WN32A ( src + 3 * stride , v )"	25:4:488:513	6669073	5	True				
ANR	6669189	CallExpression	"AV_WN32A ( src + 3 * stride , v )"		6669073	0					
ANR	6669190	Callee	AV_WN32A		6669073	0					
ANR	6669191	Identifier	AV_WN32A		6669073	0					
ANR	6669192	ArgumentList	src + 3 * stride		6669073	1					
ANR	6669193	Argument	src + 3 * stride		6669073	0					
ANR	6669194	AdditiveExpression	src + 3 * stride		6669073	0		+			
ANR	6669195	Identifier	src		6669073	0					
ANR	6669196	MultiplicativeExpression	3 * stride		6669073	1		*			
ANR	6669197	PrimaryExpression	3		6669073	0					
ANR	6669198	Identifier	stride		6669073	1					
ANR	6669199	Argument	v		6669073	1					
ANR	6669200	Identifier	v		6669073	0					
ANR	6669201	ReturnType	static void		6669073	1					
ANR	6669202	Identifier	pred4x4_vertical_vp8_c		6669073	2					
ANR	6669203	ParameterList	"uint8_t * src , const uint8_t * topright , int stride"		6669073	3					
ANR	6669204	Parameter	uint8_t * src	1:35:35:46	6669073	0	True				
ANR	6669205	ParameterType	uint8_t *		6669073	0					
ANR	6669206	Identifier	src		6669073	1					
ANR	6669207	Parameter	const uint8_t * topright	1:49:49:71	6669073	1	True				
ANR	6669208	ParameterType	const uint8_t *		6669073	0					
ANR	6669209	Identifier	topright		6669073	1					
ANR	6669210	Parameter	int stride	1:74:74:83	6669073	2	True				
ANR	6669211	ParameterType	int		6669073	0					
ANR	6669212	Identifier	stride		6669073	1					
ANR	6669213	CFGEntryNode	ENTRY		6669073		True				
ANR	6669214	CFGExitNode	EXIT		6669073		True				
ANR	6669215	Symbol	t4		6669073						
ANR	6669216	Symbol	* stride		6669073						
ANR	6669217	Symbol	src		6669073						
ANR	6669218	Symbol	PACK_4U8		6669073						
ANR	6669219	Symbol	lt		6669073						
ANR	6669220	Symbol	stride		6669073						
ANR	6669221	Symbol	* src		6669073						
ANR	6669222	Symbol	topright		6669073						
ANR	6669223	Symbol	v		6669073						
ANR	6669224	Symbol	t0		6669073						
ANR	6669225	Symbol	t1		6669073						
ANR	6669226	Symbol	t2		6669073						
ANR	6669227	Symbol	t3		6669073						
