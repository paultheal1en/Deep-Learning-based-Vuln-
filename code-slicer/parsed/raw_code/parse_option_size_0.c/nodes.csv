command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6348698	File	/home/p4ultr4n/workplace/ReVeal/raw_code/parse_option_size_0.c								
ANR	6348699	Function	parse_option_size	1:0:0:735							
ANR	6348700	FunctionDef	"parse_option_size (const char * name , const char * value , uint64_t * ret , Error * * errp)"		6348699	0					
ANR	6348701	CompoundStatement		5:0:114:735	6348699	0					
ANR	6348702	IdentifierDeclStatement	uint64_t size ;	7:4:121:134	6348699	0	True				
ANR	6348703	IdentifierDecl	size		6348699	0					
ANR	6348704	IdentifierDeclType	uint64_t		6348699	0					
ANR	6348705	Identifier	size		6348699	1					
ANR	6348706	IdentifierDeclStatement	int err ;	9:4:141:148	6348699	1	True				
ANR	6348707	IdentifierDecl	err		6348699	0					
ANR	6348708	IdentifierDeclType	int		6348699	0					
ANR	6348709	Identifier	err		6348699	1					
ANR	6348710	ExpressionStatement	"err = qemu_strtosz ( value , NULL , & size )"	13:4:157:195	6348699	2	True				
ANR	6348711	AssignmentExpression	"err = qemu_strtosz ( value , NULL , & size )"		6348699	0		=			
ANR	6348712	Identifier	err		6348699	0					
ANR	6348713	CallExpression	"qemu_strtosz ( value , NULL , & size )"		6348699	1					
ANR	6348714	Callee	qemu_strtosz		6348699	0					
ANR	6348715	Identifier	qemu_strtosz		6348699	0					
ANR	6348716	ArgumentList	value		6348699	1					
ANR	6348717	Argument	value		6348699	0					
ANR	6348718	Identifier	value		6348699	0					
ANR	6348719	Argument	NULL		6348699	1					
ANR	6348720	Identifier	NULL		6348699	0					
ANR	6348721	Argument	& size		6348699	2					
ANR	6348722	UnaryOperationExpression	& size		6348699	0					
ANR	6348723	UnaryOperator	&		6348699	0					
ANR	6348724	Identifier	size		6348699	1					
ANR	6348725	IfStatement	if ( err == - ERANGE )		6348699	3					
ANR	6348726	Condition	err == - ERANGE	15:8:206:219	6348699	0	True				
ANR	6348727	EqualityExpression	err == - ERANGE		6348699	0		==			
ANR	6348728	Identifier	err		6348699	0					
ANR	6348729	UnaryOperationExpression	- ERANGE		6348699	1					
ANR	6348730	UnaryOperator	-		6348699	0					
ANR	6348731	Identifier	ERANGE		6348699	1					
ANR	6348732	CompoundStatement		11:24:107:107	6348699	1					
ANR	6348733	ExpressionStatement	"error_setg ( errp , ""Value '%s' is too large for parameter '%s'"" , value , name )"	17:8:233:328	6348699	0	True				
ANR	6348734	CallExpression	"error_setg ( errp , ""Value '%s' is too large for parameter '%s'"" , value , name )"		6348699	0					
ANR	6348735	Callee	error_setg		6348699	0					
ANR	6348736	Identifier	error_setg		6348699	0					
ANR	6348737	ArgumentList	errp		6348699	1					
ANR	6348738	Argument	errp		6348699	0					
ANR	6348739	Identifier	errp		6348699	0					
ANR	6348740	Argument	"""Value '%s' is too large for parameter '%s'"""		6348699	1					
ANR	6348741	PrimaryExpression	"""Value '%s' is too large for parameter '%s'"""		6348699	0					
ANR	6348742	Argument	value		6348699	2					
ANR	6348743	Identifier	value		6348699	0					
ANR	6348744	Argument	name		6348699	3					
ANR	6348745	Identifier	name		6348699	0					
ANR	6348746	ReturnStatement	return ;	21:8:339:345	6348699	1	True				
ANR	6348747	IfStatement	if ( err )		6348699	4					
ANR	6348748	Condition	err	25:8:363:365	6348699	0	True				
ANR	6348749	Identifier	err		6348699	0					
ANR	6348750	CompoundStatement		21:13:253:253	6348699	1					
ANR	6348751	ExpressionStatement	"error_setg ( errp , QERR_INVALID_PARAMETER_VALUE , name , ""a non-negative number below 2^64"" )"	27:8:379:487	6348699	0	True				
ANR	6348752	CallExpression	"error_setg ( errp , QERR_INVALID_PARAMETER_VALUE , name , ""a non-negative number below 2^64"" )"		6348699	0					
ANR	6348753	Callee	error_setg		6348699	0					
ANR	6348754	Identifier	error_setg		6348699	0					
ANR	6348755	ArgumentList	errp		6348699	1					
ANR	6348756	Argument	errp		6348699	0					
ANR	6348757	Identifier	errp		6348699	0					
ANR	6348758	Argument	QERR_INVALID_PARAMETER_VALUE		6348699	1					
ANR	6348759	Identifier	QERR_INVALID_PARAMETER_VALUE		6348699	0					
ANR	6348760	Argument	name		6348699	2					
ANR	6348761	Identifier	name		6348699	0					
ANR	6348762	Argument	"""a non-negative number below 2^64"""		6348699	3					
ANR	6348763	PrimaryExpression	"""a non-negative number below 2^64"""		6348699	0					
ANR	6348764	Statement	error_append_hint	31:8:498:514	6348699	1	True				
ANR	6348765	Statement	(	31:25:515:515	6348699	2	True				
ANR	6348766	Statement	errp	31:26:516:519	6348699	3	True				
ANR	6348767	Statement	","	31:30:520:520	6348699	4	True				
ANR	6348768	Statement	"""Optional suffix k, M, G, T, P or E means"""	31:32:522:563	6348699	5	True				
ANR	6348769	Statement	""" kilo-, mega-, giga-, tera-, peta-\\n"""	33:26:592:629	6348699	6	True				
ANR	6348770	Statement	"""and exabytes, respectively.\\n"""	35:26:658:688	6348699	7	True				
ANR	6348771	Statement	)	35:57:689:689	6348699	8	True				
ANR	6348772	ExpressionStatement		35:58:690:690	6348699	9	True				
ANR	6348773	ReturnStatement	return ;	37:8:701:707	6348699	10	True				
ANR	6348774	ExpressionStatement	* ret = size	41:4:721:732	6348699	5	True				
ANR	6348775	AssignmentExpression	* ret = size		6348699	0		=			
ANR	6348776	UnaryOperationExpression	* ret		6348699	0					
ANR	6348777	UnaryOperator	*		6348699	0					
ANR	6348778	Identifier	ret		6348699	1					
ANR	6348779	Identifier	size		6348699	1					
ANR	6348780	ReturnType	void		6348699	1					
ANR	6348781	Identifier	parse_option_size		6348699	2					
ANR	6348782	ParameterList	"const char * name , const char * value , uint64_t * ret , Error * * errp"		6348699	3					
ANR	6348783	Parameter	const char * name	1:23:23:38	6348699	0	True				
ANR	6348784	ParameterType	const char *		6348699	0					
ANR	6348785	Identifier	name		6348699	1					
ANR	6348786	Parameter	const char * value	1:41:41:57	6348699	1	True				
ANR	6348787	ParameterType	const char *		6348699	0					
ANR	6348788	Identifier	value		6348699	1					
ANR	6348789	Parameter	uint64_t * ret	3:23:84:96	6348699	2	True				
ANR	6348790	ParameterType	uint64_t *		6348699	0					
ANR	6348791	Identifier	ret		6348699	1					
ANR	6348792	Parameter	Error * * errp	3:38:99:110	6348699	3	True				
ANR	6348793	ParameterType	Error * *		6348699	0					
ANR	6348794	Identifier	errp		6348699	1					
ANR	6348795	CFGEntryNode	ENTRY		6348699		True				
ANR	6348796	CFGExitNode	EXIT		6348699		True				
ANR	6348797	Symbol	ret		6348699						
ANR	6348798	Symbol	NULL		6348699						
ANR	6348799	Symbol	errp		6348699						
ANR	6348800	Symbol	size		6348699						
ANR	6348801	Symbol	err		6348699						
ANR	6348802	Symbol	name		6348699						
ANR	6348803	Symbol	ERANGE		6348699						
ANR	6348804	Symbol	qemu_strtosz		6348699						
ANR	6348805	Symbol	& size		6348699						
ANR	6348806	Symbol	* ret		6348699						
ANR	6348807	Symbol	value		6348699						
ANR	6348808	Symbol	QERR_INVALID_PARAMETER_VALUE		6348699						
