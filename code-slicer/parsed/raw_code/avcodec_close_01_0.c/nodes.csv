command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	809671	File	/home/p4ultr4n/workplace/ReVeal/raw_code/avcodec_close_01_0.c								
ANR	809672	Function	avcodec_close	1:0:0:912							
ANR	809673	FunctionDef	avcodec_close (AVCodecContext * avctx)		809672	0					
ANR	809674	CompoundStatement		3:0:42:912	809672	0					
ANR	809675	IfStatement	if ( ff_lockmgr_cb )		809672	0					
ANR	809676	Condition	ff_lockmgr_cb	7:8:124:136	809672	0	True				
ANR	809677	Identifier	ff_lockmgr_cb		809672	0					
ANR	809678	CompoundStatement		5:23:96:96	809672	1					
ANR	809679	IfStatement	"if ( ( * ff_lockmgr_cb ) ( & codec_mutex , AV_LOCK_OBTAIN ) )"		809672	0					
ANR	809680	Condition	"( * ff_lockmgr_cb ) ( & codec_mutex , AV_LOCK_OBTAIN )"	9:12:154:199	809672	0	True				
ANR	809681	CallExpression	"( * ff_lockmgr_cb ) ( & codec_mutex , AV_LOCK_OBTAIN )"		809672	0					
ANR	809682	Callee	* ff_lockmgr_cb		809672	0					
ANR	809683	UnaryOperationExpression	* ff_lockmgr_cb		809672	0					
ANR	809684	UnaryOperator	*		809672	0					
ANR	809685	Identifier	ff_lockmgr_cb		809672	1					
ANR	809686	ArgumentList	& codec_mutex		809672	1					
ANR	809687	Argument	& codec_mutex		809672	0					
ANR	809688	UnaryOperationExpression	& codec_mutex		809672	0					
ANR	809689	UnaryOperator	&		809672	0					
ANR	809690	Identifier	codec_mutex		809672	1					
ANR	809691	Argument	AV_LOCK_OBTAIN		809672	1					
ANR	809692	Identifier	AV_LOCK_OBTAIN		809672	0					
ANR	809693	ReturnStatement	return - 1 ;	11:12:215:224	809672	1	True				
ANR	809694	UnaryOperationExpression	- 1		809672	0					
ANR	809695	UnaryOperator	-		809672	0					
ANR	809696	PrimaryExpression	1		809672	1					
ANR	809697	ExpressionStatement	entangled_thread_counter ++	17:4:240:266	809672	1	True				
ANR	809698	PostIncDecOperationExpression	entangled_thread_counter ++		809672	0					
ANR	809699	Identifier	entangled_thread_counter		809672	0					
ANR	809700	IncDec	++		809672	1					
ANR	809701	IfStatement	if ( entangled_thread_counter != 1 )		809672	2					
ANR	809702	Condition	entangled_thread_counter != 1	19:7:276:304	809672	0	True				
ANR	809703	EqualityExpression	entangled_thread_counter != 1		809672	0		!=			
ANR	809704	Identifier	entangled_thread_counter		809672	0					
ANR	809705	PrimaryExpression	1		809672	1					
ANR	809706	CompoundStatement		17:37:263:263	809672	1					
ANR	809707	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""insufficient thread locking around avcodec_open/close()\\n"" )"	21:8:317:405	809672	0	True				
ANR	809708	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""insufficient thread locking around avcodec_open/close()\\n"" )"		809672	0					
ANR	809709	Callee	av_log		809672	0					
ANR	809710	Identifier	av_log		809672	0					
ANR	809711	ArgumentList	avctx		809672	1					
ANR	809712	Argument	avctx		809672	0					
ANR	809713	Identifier	avctx		809672	0					
ANR	809714	Argument	AV_LOG_ERROR		809672	1					
ANR	809715	Identifier	AV_LOG_ERROR		809672	0					
ANR	809716	Argument	"""insufficient thread locking around avcodec_open/close()\\n"""		809672	2					
ANR	809717	PrimaryExpression	"""insufficient thread locking around avcodec_open/close()\\n"""		809672	0					
ANR	809718	ExpressionStatement	entangled_thread_counter --	23:8:416:442	809672	1	True				
ANR	809719	PostIncDecOperationExpression	entangled_thread_counter --		809672	0					
ANR	809720	Identifier	entangled_thread_counter		809672	0					
ANR	809721	IncDec	--		809672	1					
ANR	809722	ReturnStatement	return - 1 ;	25:8:453:462	809672	2	True				
ANR	809723	UnaryOperationExpression	- 1		809672	0					
ANR	809724	UnaryOperator	-		809672	0					
ANR	809725	PrimaryExpression	1		809672	1					
ANR	809726	IfStatement	if ( HAVE_THREADS && avctx -> thread_opaque )		809672	3					
ANR	809727	Condition	HAVE_THREADS && avctx -> thread_opaque	31:8:482:517	809672	0	True				
ANR	809728	AndExpression	HAVE_THREADS && avctx -> thread_opaque		809672	0		&&			
ANR	809729	Identifier	HAVE_THREADS		809672	0					
ANR	809730	PtrMemberAccess	avctx -> thread_opaque		809672	1					
ANR	809731	Identifier	avctx		809672	0					
ANR	809732	Identifier	thread_opaque		809672	1					
ANR	809733	ExpressionStatement	avcodec_thread_free ( avctx )	33:8:529:555	809672	1	True				
ANR	809734	CallExpression	avcodec_thread_free ( avctx )		809672	0					
ANR	809735	Callee	avcodec_thread_free		809672	0					
ANR	809736	Identifier	avcodec_thread_free		809672	0					
ANR	809737	ArgumentList	avctx		809672	1					
ANR	809738	Argument	avctx		809672	0					
ANR	809739	Identifier	avctx		809672	0					
ANR	809740	IfStatement	if ( avctx -> codec -> close )		809672	4					
ANR	809741	Condition	avctx -> codec -> close	35:8:566:584	809672	0	True				
ANR	809742	PtrMemberAccess	avctx -> codec -> close		809672	0					
ANR	809743	PtrMemberAccess	avctx -> codec		809672	0					
ANR	809744	Identifier	avctx		809672	0					
ANR	809745	Identifier	codec		809672	1					
ANR	809746	Identifier	close		809672	1					
ANR	809747	ExpressionStatement	avctx -> codec -> close ( avctx )	37:8:596:622	809672	1	True				
ANR	809748	CallExpression	avctx -> codec -> close ( avctx )		809672	0					
ANR	809749	Callee	avctx -> codec -> close		809672	0					
ANR	809750	PtrMemberAccess	avctx -> codec -> close		809672	0					
ANR	809751	PtrMemberAccess	avctx -> codec		809672	0					
ANR	809752	Identifier	avctx		809672	0					
ANR	809753	Identifier	codec		809672	1					
ANR	809754	Identifier	close		809672	1					
ANR	809755	ArgumentList	avctx		809672	1					
ANR	809756	Argument	avctx		809672	0					
ANR	809757	Identifier	avctx		809672	0					
ANR	809758	ExpressionStatement	avcodec_default_free_buffers ( avctx )	39:4:629:664	809672	5	True				
ANR	809759	CallExpression	avcodec_default_free_buffers ( avctx )		809672	0					
ANR	809760	Callee	avcodec_default_free_buffers		809672	0					
ANR	809761	Identifier	avcodec_default_free_buffers		809672	0					
ANR	809762	ArgumentList	avctx		809672	1					
ANR	809763	Argument	avctx		809672	0					
ANR	809764	Identifier	avctx		809672	0					
ANR	809765	ExpressionStatement	av_freep ( & avctx -> priv_data )	41:4:671:698	809672	6	True				
ANR	809766	CallExpression	av_freep ( & avctx -> priv_data )		809672	0					
ANR	809767	Callee	av_freep		809672	0					
ANR	809768	Identifier	av_freep		809672	0					
ANR	809769	ArgumentList	& avctx -> priv_data		809672	1					
ANR	809770	Argument	& avctx -> priv_data		809672	0					
ANR	809771	UnaryOperationExpression	& avctx -> priv_data		809672	0					
ANR	809772	UnaryOperator	&		809672	0					
ANR	809773	PtrMemberAccess	avctx -> priv_data		809672	1					
ANR	809774	Identifier	avctx		809672	0					
ANR	809775	Identifier	priv_data		809672	1					
ANR	809776	ExpressionStatement	avctx -> codec = NULL	43:4:705:724	809672	7	True				
ANR	809777	AssignmentExpression	avctx -> codec = NULL		809672	0		=			
ANR	809778	PtrMemberAccess	avctx -> codec		809672	0					
ANR	809779	Identifier	avctx		809672	0					
ANR	809780	Identifier	codec		809672	1					
ANR	809781	Identifier	NULL		809672	1					
ANR	809782	ExpressionStatement	entangled_thread_counter --	45:4:731:757	809672	8	True				
ANR	809783	PostIncDecOperationExpression	entangled_thread_counter --		809672	0					
ANR	809784	Identifier	entangled_thread_counter		809672	0					
ANR	809785	IncDec	--		809672	1					
ANR	809786	IfStatement	if ( ff_lockmgr_cb )		809672	9					
ANR	809787	Condition	ff_lockmgr_cb	51:8:814:826	809672	0	True				
ANR	809788	Identifier	ff_lockmgr_cb		809672	0					
ANR	809789	CompoundStatement		49:23:786:786	809672	1					
ANR	809790	ExpressionStatement	"( * ff_lockmgr_cb ) ( & codec_mutex , AV_LOCK_RELEASE )"	53:8:840:887	809672	0	True				
ANR	809791	CallExpression	"( * ff_lockmgr_cb ) ( & codec_mutex , AV_LOCK_RELEASE )"		809672	0					
ANR	809792	Callee	* ff_lockmgr_cb		809672	0					
ANR	809793	UnaryOperationExpression	* ff_lockmgr_cb		809672	0					
ANR	809794	UnaryOperator	*		809672	0					
ANR	809795	Identifier	ff_lockmgr_cb		809672	1					
ANR	809796	ArgumentList	& codec_mutex		809672	1					
ANR	809797	Argument	& codec_mutex		809672	0					
ANR	809798	UnaryOperationExpression	& codec_mutex		809672	0					
ANR	809799	UnaryOperator	&		809672	0					
ANR	809800	Identifier	codec_mutex		809672	1					
ANR	809801	Argument	AV_LOCK_RELEASE		809672	1					
ANR	809802	Identifier	AV_LOCK_RELEASE		809672	0					
ANR	809803	ReturnStatement	return 0 ;	57:4:901:909	809672	10	True				
ANR	809804	PrimaryExpression	0		809672	0					
ANR	809805	ReturnType	int		809672	1					
ANR	809806	Identifier	avcodec_close		809672	2					
ANR	809807	ParameterList	AVCodecContext * avctx		809672	3					
ANR	809808	Parameter	AVCodecContext * avctx	1:18:18:38	809672	0	True				
ANR	809809	ParameterType	AVCodecContext *		809672	0					
ANR	809810	Identifier	avctx		809672	1					
ANR	809811	CFGEntryNode	ENTRY		809672		True				
ANR	809812	CFGExitNode	EXIT		809672		True				
ANR	809813	Symbol	ff_lockmgr_cb		809672						
ANR	809814	Symbol	& codec_mutex		809672						
ANR	809815	Symbol	avctx -> codec		809672						
ANR	809816	Symbol	NULL		809672						
ANR	809817	Symbol	AV_LOG_ERROR		809672						
ANR	809818	Symbol	entangled_thread_counter		809672						
ANR	809819	Symbol	* * avctx		809672						
ANR	809820	Symbol	* ff_lockmgr_cb		809672						
ANR	809821	Symbol	* avctx		809672						
ANR	809822	Symbol	avctx -> thread_opaque		809672						
ANR	809823	Symbol	HAVE_THREADS		809672						
ANR	809824	Symbol	& avctx -> priv_data		809672						
ANR	809825	Symbol	AV_LOCK_RELEASE		809672						
ANR	809826	Symbol	AV_LOCK_OBTAIN		809672						
ANR	809827	Symbol	avctx -> codec -> close		809672						
ANR	809828	Symbol	* avctx -> codec		809672						
ANR	809829	Symbol	avctx		809672						
