command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	9000083	File	/home/p4ultr4n/workplace/ReVeal/raw_code/vga_mem_writeb_1.c								
ANR	9000084	Function	vga_mem_writeb	1:0:0:4440							
ANR	9000085	FunctionDef	"vga_mem_writeb (VGACommonState * s , hwaddr addr , uint32_t val)"		9000084	0					
ANR	9000086	CompoundStatement		3:0:67:4440	9000084	0					
ANR	9000087	IdentifierDeclStatement	"int memory_map_mode , plane , write_mode , b , func_select , mask ;"	5:4:74:134	9000084	0	True				
ANR	9000088	IdentifierDecl	memory_map_mode		9000084	0					
ANR	9000089	IdentifierDeclType	int		9000084	0					
ANR	9000090	Identifier	memory_map_mode		9000084	1					
ANR	9000091	IdentifierDecl	plane		9000084	1					
ANR	9000092	IdentifierDeclType	int		9000084	0					
ANR	9000093	Identifier	plane		9000084	1					
ANR	9000094	IdentifierDecl	write_mode		9000084	2					
ANR	9000095	IdentifierDeclType	int		9000084	0					
ANR	9000096	Identifier	write_mode		9000084	1					
ANR	9000097	IdentifierDecl	b		9000084	3					
ANR	9000098	IdentifierDeclType	int		9000084	0					
ANR	9000099	Identifier	b		9000084	1					
ANR	9000100	IdentifierDecl	func_select		9000084	4					
ANR	9000101	IdentifierDeclType	int		9000084	0					
ANR	9000102	Identifier	func_select		9000084	1					
ANR	9000103	IdentifierDecl	mask		9000084	5					
ANR	9000104	IdentifierDeclType	int		9000084	0					
ANR	9000105	Identifier	mask		9000084	1					
ANR	9000106	IdentifierDeclStatement	"uint32_t write_mask , bit_mask , set_mask ;"	7:4:141:180	9000084	1	True				
ANR	9000107	IdentifierDecl	write_mask		9000084	0					
ANR	9000108	IdentifierDeclType	uint32_t		9000084	0					
ANR	9000109	Identifier	write_mask		9000084	1					
ANR	9000110	IdentifierDecl	bit_mask		9000084	1					
ANR	9000111	IdentifierDeclType	uint32_t		9000084	0					
ANR	9000112	Identifier	bit_mask		9000084	1					
ANR	9000113	IdentifierDecl	set_mask		9000084	2					
ANR	9000114	IdentifierDeclType	uint32_t		9000084	0					
ANR	9000115	Identifier	set_mask		9000084	1					
ANR	9000116	Statement	printf	13:4:211:216	9000084	2	True				
ANR	9000117	Statement	(	13:10:217:217	9000084	3	True				
ANR	9000118	Statement	"""vga: [0x"""	13:11:218:227	9000084	4	True				
ANR	9000119	Statement	TARGET_FMT_plx	13:22:229:242	9000084	5	True				
ANR	9000120	Statement	"""] = 0x%02x\\n"""	13:37:244:257	9000084	6	True				
ANR	9000121	Statement	","	13:51:258:258	9000084	7	True				
ANR	9000122	Statement	addr	13:53:260:263	9000084	8	True				
ANR	9000123	Statement	","	13:57:264:264	9000084	9	True				
ANR	9000124	Statement	val	13:59:266:268	9000084	10	True				
ANR	9000125	Statement	)	13:62:269:269	9000084	11	True				
ANR	9000126	ExpressionStatement		13:63:270:270	9000084	12	True				
ANR	9000127	ExpressionStatement	memory_map_mode = ( s -> gr [ VGA_GFX_MISC ] >> 2 ) & 3	19:4:325:373	9000084	13	True				
ANR	9000128	AssignmentExpression	memory_map_mode = ( s -> gr [ VGA_GFX_MISC ] >> 2 ) & 3		9000084	0		=			
ANR	9000129	Identifier	memory_map_mode		9000084	0					
ANR	9000130	BitAndExpression	( s -> gr [ VGA_GFX_MISC ] >> 2 ) & 3		9000084	1		&			
ANR	9000131	ShiftExpression	s -> gr [ VGA_GFX_MISC ] >> 2		9000084	0		>>			
ANR	9000132	ArrayIndexing	s -> gr [ VGA_GFX_MISC ]		9000084	0					
ANR	9000133	PtrMemberAccess	s -> gr		9000084	0					
ANR	9000134	Identifier	s		9000084	0					
ANR	9000135	Identifier	gr		9000084	1					
ANR	9000136	Identifier	VGA_GFX_MISC		9000084	1					
ANR	9000137	PrimaryExpression	2		9000084	1					
ANR	9000138	PrimaryExpression	3		9000084	1					
ANR	9000139	ExpressionStatement	addr &= 0x1ffff	21:4:380:395	9000084	14	True				
ANR	9000140	AssignmentExpression	addr &= 0x1ffff		9000084	0		&=			
ANR	9000141	Identifier	addr		9000084	0					
ANR	9000142	PrimaryExpression	0x1ffff		9000084	1					
ANR	9000143	SwitchStatement	switch ( memory_map_mode )		9000084	15					
ANR	9000144	Condition	memory_map_mode	23:11:409:423	9000084	0	True				
ANR	9000145	Identifier	memory_map_mode		9000084	0					
ANR	9000146	CompoundStatement		21:28:358:358	9000084	1					
ANR	9000147	Label	case 0 :	25:4:433:439	9000084	0	True				
ANR	9000148	BreakStatement	break ;	27:8:450:455	9000084	1	True				
ANR	9000149	Label	case 1 :	29:4:462:468	9000084	2	True				
ANR	9000150	IfStatement	if ( addr >= 0x10000 )		9000084	3					
ANR	9000151	Condition	addr >= 0x10000	31:12:483:497	9000084	0	True				
ANR	9000152	RelationalExpression	addr >= 0x10000		9000084	0		>=			
ANR	9000153	Identifier	addr		9000084	0					
ANR	9000154	PrimaryExpression	0x10000		9000084	1					
ANR	9000155	ReturnStatement	return ;	33:12:513:519	9000084	1	True				
ANR	9000156	ExpressionStatement	addr += s -> bank_offset	35:8:530:552	9000084	4	True				
ANR	9000157	AssignmentExpression	addr += s -> bank_offset		9000084	0		+=			
ANR	9000158	Identifier	addr		9000084	0					
ANR	9000159	PtrMemberAccess	s -> bank_offset		9000084	1					
ANR	9000160	Identifier	s		9000084	0					
ANR	9000161	Identifier	bank_offset		9000084	1					
ANR	9000162	BreakStatement	break ;	37:8:563:568	9000084	5	True				
ANR	9000163	Label	case 2 :	39:4:575:581	9000084	6	True				
ANR	9000164	ExpressionStatement	addr -= 0x10000	41:8:592:607	9000084	7	True				
ANR	9000165	AssignmentExpression	addr -= 0x10000		9000084	0		-=			
ANR	9000166	Identifier	addr		9000084	0					
ANR	9000167	PrimaryExpression	0x10000		9000084	1					
ANR	9000168	IfStatement	if ( addr >= 0x8000 )		9000084	8					
ANR	9000169	Condition	addr >= 0x8000	43:12:622:635	9000084	0	True				
ANR	9000170	RelationalExpression	addr >= 0x8000		9000084	0		>=			
ANR	9000171	Identifier	addr		9000084	0					
ANR	9000172	PrimaryExpression	0x8000		9000084	1					
ANR	9000173	ReturnStatement	return ;	45:12:651:657	9000084	1	True				
ANR	9000174	BreakStatement	break ;	47:8:668:673	9000084	9	True				
ANR	9000175	Label	default :	49:4:680:687	9000084	10	True				
ANR	9000176	Identifier	default		9000084	0					
ANR	9000177	Label	case 3 :	51:4:694:700	9000084	11	True				
ANR	9000178	ExpressionStatement	addr -= 0x18000	53:8:711:726	9000084	12	True				
ANR	9000179	AssignmentExpression	addr -= 0x18000		9000084	0		-=			
ANR	9000180	Identifier	addr		9000084	0					
ANR	9000181	PrimaryExpression	0x18000		9000084	1					
ANR	9000182	IfStatement	if ( addr >= 0x8000 )		9000084	13					
ANR	9000183	Condition	addr >= 0x8000	55:12:741:754	9000084	0	True				
ANR	9000184	RelationalExpression	addr >= 0x8000		9000084	0		>=			
ANR	9000185	Identifier	addr		9000084	0					
ANR	9000186	PrimaryExpression	0x8000		9000084	1					
ANR	9000187	ReturnStatement	return ;	57:12:770:776	9000084	1	True				
ANR	9000188	BreakStatement	break ;	59:8:787:792	9000084	14	True				
ANR	9000189	IfStatement	if ( s -> sr [ VGA_SEQ_MEMORY_MODE ] & VGA_SR04_CHN_4M )		9000084	16					
ANR	9000190	Condition	s -> sr [ VGA_SEQ_MEMORY_MODE ] & VGA_SR04_CHN_4M	65:8:812:855	9000084	0	True				
ANR	9000191	BitAndExpression	s -> sr [ VGA_SEQ_MEMORY_MODE ] & VGA_SR04_CHN_4M		9000084	0		&			
ANR	9000192	ArrayIndexing	s -> sr [ VGA_SEQ_MEMORY_MODE ]		9000084	0					
ANR	9000193	PtrMemberAccess	s -> sr		9000084	0					
ANR	9000194	Identifier	s		9000084	0					
ANR	9000195	Identifier	sr		9000084	1					
ANR	9000196	Identifier	VGA_SEQ_MEMORY_MODE		9000084	1					
ANR	9000197	Identifier	VGA_SR04_CHN_4M		9000084	1					
ANR	9000198	CompoundStatement		63:54:790:790	9000084	1					
ANR	9000199	ExpressionStatement	plane = addr & 3	69:8:915:931	9000084	0	True				
ANR	9000200	AssignmentExpression	plane = addr & 3		9000084	0		=			
ANR	9000201	Identifier	plane		9000084	0					
ANR	9000202	BitAndExpression	addr & 3		9000084	1		&			
ANR	9000203	Identifier	addr		9000084	0					
ANR	9000204	PrimaryExpression	3		9000084	1					
ANR	9000205	ExpressionStatement	mask = ( 1 << plane )	71:8:942:961	9000084	1	True				
ANR	9000206	AssignmentExpression	mask = ( 1 << plane )		9000084	0		=			
ANR	9000207	Identifier	mask		9000084	0					
ANR	9000208	ShiftExpression	1 << plane		9000084	1		<<			
ANR	9000209	PrimaryExpression	1		9000084	0					
ANR	9000210	Identifier	plane		9000084	1					
ANR	9000211	IfStatement	if ( s -> sr [ VGA_SEQ_PLANE_WRITE ] & mask )		9000084	2					
ANR	9000212	Condition	s -> sr [ VGA_SEQ_PLANE_WRITE ] & mask	73:12:976:1008	9000084	0	True				
ANR	9000213	BitAndExpression	s -> sr [ VGA_SEQ_PLANE_WRITE ] & mask		9000084	0		&			
ANR	9000214	ArrayIndexing	s -> sr [ VGA_SEQ_PLANE_WRITE ]		9000084	0					
ANR	9000215	PtrMemberAccess	s -> sr		9000084	0					
ANR	9000216	Identifier	s		9000084	0					
ANR	9000217	Identifier	sr		9000084	1					
ANR	9000218	Identifier	VGA_SEQ_PLANE_WRITE		9000084	1					
ANR	9000219	Identifier	mask		9000084	1					
ANR	9000220	CompoundStatement		71:47:943:943	9000084	1					
ANR	9000221	ExpressionStatement	assert ( addr < s -> vram_size )	75:12:1026:1053	9000084	0	True				
ANR	9000222	CallExpression	assert ( addr < s -> vram_size )		9000084	0					
ANR	9000223	Callee	assert		9000084	0					
ANR	9000224	Identifier	assert		9000084	0					
ANR	9000225	ArgumentList	addr < s -> vram_size		9000084	1					
ANR	9000226	Argument	addr < s -> vram_size		9000084	0					
ANR	9000227	RelationalExpression	addr < s -> vram_size		9000084	0		<			
ANR	9000228	Identifier	addr		9000084	0					
ANR	9000229	PtrMemberAccess	s -> vram_size		9000084	1					
ANR	9000230	Identifier	s		9000084	0					
ANR	9000231	Identifier	vram_size		9000084	1					
ANR	9000232	ExpressionStatement	s -> vram_ptr [ addr ] = val	77:12:1068:1091	9000084	1	True				
ANR	9000233	AssignmentExpression	s -> vram_ptr [ addr ] = val		9000084	0		=			
ANR	9000234	ArrayIndexing	s -> vram_ptr [ addr ]		9000084	0					
ANR	9000235	PtrMemberAccess	s -> vram_ptr		9000084	0					
ANR	9000236	Identifier	s		9000084	0					
ANR	9000237	Identifier	vram_ptr		9000084	1					
ANR	9000238	Identifier	addr		9000084	1					
ANR	9000239	Identifier	val		9000084	1					
ANR	9000240	Statement	printf	81:12:1128:1133	9000084	2	True				
ANR	9000241	Statement	(	81:18:1134:1134	9000084	3	True				
ANR	9000242	Statement	"""vga: chain4: [0x"""	81:19:1135:1152	9000084	4	True				
ANR	9000243	Statement	TARGET_FMT_plx	81:38:1154:1167	9000084	5	True				
ANR	9000244	Statement	"""]\\n"""	81:53:1169:1173	9000084	6	True				
ANR	9000245	Statement	","	81:58:1174:1174	9000084	7	True				
ANR	9000246	Statement	addr	81:60:1176:1179	9000084	8	True				
ANR	9000247	Statement	)	81:64:1180:1180	9000084	9	True				
ANR	9000248	ExpressionStatement		81:65:1181:1181	9000084	10	True				
ANR	9000249	ExpressionStatement	s -> plane_updated |= mask	85:12:1204:1228	9000084	11	True				
ANR	9000250	AssignmentExpression	s -> plane_updated |= mask		9000084	0		|=			
ANR	9000251	PtrMemberAccess	s -> plane_updated		9000084	0					
ANR	9000252	Identifier	s		9000084	0					
ANR	9000253	Identifier	plane_updated		9000084	1					
ANR	9000254	Identifier	mask		9000084	1					
ANR	9000255	ExpressionStatement	"memory_region_set_dirty ( & s -> vram , addr , 1 )"	87:12:1281:1323	9000084	12	True				
ANR	9000256	CallExpression	"memory_region_set_dirty ( & s -> vram , addr , 1 )"		9000084	0					
ANR	9000257	Callee	memory_region_set_dirty		9000084	0					
ANR	9000258	Identifier	memory_region_set_dirty		9000084	0					
ANR	9000259	ArgumentList	& s -> vram		9000084	1					
ANR	9000260	Argument	& s -> vram		9000084	0					
ANR	9000261	UnaryOperationExpression	& s -> vram		9000084	0					
ANR	9000262	UnaryOperator	&		9000084	0					
ANR	9000263	PtrMemberAccess	s -> vram		9000084	1					
ANR	9000264	Identifier	s		9000084	0					
ANR	9000265	Identifier	vram		9000084	1					
ANR	9000266	Argument	addr		9000084	1					
ANR	9000267	Identifier	addr		9000084	0					
ANR	9000268	Argument	1		9000084	2					
ANR	9000269	PrimaryExpression	1		9000084	0					
ANR	9000270	ElseStatement	else		9000084	0					
ANR	9000271	IfStatement	if ( s -> gr [ VGA_GFX_MODE ] & 0x10 )		9000084	0					
ANR	9000272	Condition	s -> gr [ VGA_GFX_MODE ] & 0x10	91:15:1352:1377	9000084	0	True				
ANR	9000273	BitAndExpression	s -> gr [ VGA_GFX_MODE ] & 0x10		9000084	0		&			
ANR	9000274	ArrayIndexing	s -> gr [ VGA_GFX_MODE ]		9000084	0					
ANR	9000275	PtrMemberAccess	s -> gr		9000084	0					
ANR	9000276	Identifier	s		9000084	0					
ANR	9000277	Identifier	gr		9000084	1					
ANR	9000278	Identifier	VGA_GFX_MODE		9000084	1					
ANR	9000279	PrimaryExpression	0x10		9000084	1					
ANR	9000280	CompoundStatement		89:43:1312:1312	9000084	1					
ANR	9000281	ExpressionStatement	plane = ( s -> gr [ VGA_GFX_PLANE_READ ] & 2 ) | ( addr & 1 )	95:8:1444:1496	9000084	0	True				
ANR	9000282	AssignmentExpression	plane = ( s -> gr [ VGA_GFX_PLANE_READ ] & 2 ) | ( addr & 1 )		9000084	0		=			
ANR	9000283	Identifier	plane		9000084	0					
ANR	9000284	InclusiveOrExpression	( s -> gr [ VGA_GFX_PLANE_READ ] & 2 ) | ( addr & 1 )		9000084	1		|			
ANR	9000285	BitAndExpression	s -> gr [ VGA_GFX_PLANE_READ ] & 2		9000084	0		&			
ANR	9000286	ArrayIndexing	s -> gr [ VGA_GFX_PLANE_READ ]		9000084	0					
ANR	9000287	PtrMemberAccess	s -> gr		9000084	0					
ANR	9000288	Identifier	s		9000084	0					
ANR	9000289	Identifier	gr		9000084	1					
ANR	9000290	Identifier	VGA_GFX_PLANE_READ		9000084	1					
ANR	9000291	PrimaryExpression	2		9000084	1					
ANR	9000292	BitAndExpression	addr & 1		9000084	1		&			
ANR	9000293	Identifier	addr		9000084	0					
ANR	9000294	PrimaryExpression	1		9000084	1					
ANR	9000295	ExpressionStatement	mask = ( 1 << plane )	97:8:1507:1526	9000084	1	True				
ANR	9000296	AssignmentExpression	mask = ( 1 << plane )		9000084	0		=			
ANR	9000297	Identifier	mask		9000084	0					
ANR	9000298	ShiftExpression	1 << plane		9000084	1		<<			
ANR	9000299	PrimaryExpression	1		9000084	0					
ANR	9000300	Identifier	plane		9000084	1					
ANR	9000301	IfStatement	if ( s -> sr [ VGA_SEQ_PLANE_WRITE ] & mask )		9000084	2					
ANR	9000302	Condition	s -> sr [ VGA_SEQ_PLANE_WRITE ] & mask	99:12:1541:1573	9000084	0	True				
ANR	9000303	BitAndExpression	s -> sr [ VGA_SEQ_PLANE_WRITE ] & mask		9000084	0		&			
ANR	9000304	ArrayIndexing	s -> sr [ VGA_SEQ_PLANE_WRITE ]		9000084	0					
ANR	9000305	PtrMemberAccess	s -> sr		9000084	0					
ANR	9000306	Identifier	s		9000084	0					
ANR	9000307	Identifier	sr		9000084	1					
ANR	9000308	Identifier	VGA_SEQ_PLANE_WRITE		9000084	1					
ANR	9000309	Identifier	mask		9000084	1					
ANR	9000310	CompoundStatement		97:47:1508:1508	9000084	1					
ANR	9000311	ExpressionStatement	addr = ( ( addr & ~1 ) << 1 ) | plane	101:12:1591:1624	9000084	0	True				
ANR	9000312	AssignmentExpression	addr = ( ( addr & ~1 ) << 1 ) | plane		9000084	0		=			
ANR	9000313	Identifier	addr		9000084	0					
ANR	9000314	InclusiveOrExpression	( ( addr & ~1 ) << 1 ) | plane		9000084	1		|			
ANR	9000315	ShiftExpression	( addr & ~1 ) << 1		9000084	0		<<			
ANR	9000316	BitAndExpression	addr & ~1		9000084	0		&			
ANR	9000317	Identifier	addr		9000084	0					
ANR	9000318	Identifier	~1		9000084	1					
ANR	9000319	PrimaryExpression	1		9000084	1					
ANR	9000320	Identifier	plane		9000084	1					
ANR	9000321	IfStatement	if ( addr >= s -> vram_size )		9000084	1					
ANR	9000322	Condition	addr >= s -> vram_size	103:16:1643:1662	9000084	0	True				
ANR	9000323	RelationalExpression	addr >= s -> vram_size		9000084	0		>=			
ANR	9000324	Identifier	addr		9000084	0					
ANR	9000325	PtrMemberAccess	s -> vram_size		9000084	1					
ANR	9000326	Identifier	s		9000084	0					
ANR	9000327	Identifier	vram_size		9000084	1					
ANR	9000328	CompoundStatement		101:38:1597:1597	9000084	1					
ANR	9000329	ReturnStatement	return ;	105:16:1684:1690	9000084	0	True				
ANR	9000330	ExpressionStatement	s -> vram_ptr [ addr ] = val	109:12:1720:1743	9000084	2	True				
ANR	9000331	AssignmentExpression	s -> vram_ptr [ addr ] = val		9000084	0		=			
ANR	9000332	ArrayIndexing	s -> vram_ptr [ addr ]		9000084	0					
ANR	9000333	PtrMemberAccess	s -> vram_ptr		9000084	0					
ANR	9000334	Identifier	s		9000084	0					
ANR	9000335	Identifier	vram_ptr		9000084	1					
ANR	9000336	Identifier	addr		9000084	1					
ANR	9000337	Identifier	val		9000084	1					
ANR	9000338	Statement	printf	113:12:1780:1785	9000084	3	True				
ANR	9000339	Statement	(	113:18:1786:1786	9000084	4	True				
ANR	9000340	Statement	"""vga: odd/even: [0x"""	113:19:1787:1806	9000084	5	True				
ANR	9000341	Statement	TARGET_FMT_plx	113:40:1808:1821	9000084	6	True				
ANR	9000342	Statement	"""]\\n"""	113:55:1823:1827	9000084	7	True				
ANR	9000343	Statement	","	113:60:1828:1828	9000084	8	True				
ANR	9000344	Statement	addr	113:62:1830:1833	9000084	9	True				
ANR	9000345	Statement	)	113:66:1834:1834	9000084	10	True				
ANR	9000346	ExpressionStatement		113:67:1835:1835	9000084	11	True				
ANR	9000347	ExpressionStatement	s -> plane_updated |= mask	117:12:1858:1882	9000084	12	True				
ANR	9000348	AssignmentExpression	s -> plane_updated |= mask		9000084	0		|=			
ANR	9000349	PtrMemberAccess	s -> plane_updated		9000084	0					
ANR	9000350	Identifier	s		9000084	0					
ANR	9000351	Identifier	plane_updated		9000084	1					
ANR	9000352	Identifier	mask		9000084	1					
ANR	9000353	ExpressionStatement	"memory_region_set_dirty ( & s -> vram , addr , 1 )"	119:12:1935:1977	9000084	13	True				
ANR	9000354	CallExpression	"memory_region_set_dirty ( & s -> vram , addr , 1 )"		9000084	0					
ANR	9000355	Callee	memory_region_set_dirty		9000084	0					
ANR	9000356	Identifier	memory_region_set_dirty		9000084	0					
ANR	9000357	ArgumentList	& s -> vram		9000084	1					
ANR	9000358	Argument	& s -> vram		9000084	0					
ANR	9000359	UnaryOperationExpression	& s -> vram		9000084	0					
ANR	9000360	UnaryOperator	&		9000084	0					
ANR	9000361	PtrMemberAccess	s -> vram		9000084	1					
ANR	9000362	Identifier	s		9000084	0					
ANR	9000363	Identifier	vram		9000084	1					
ANR	9000364	Argument	addr		9000084	1					
ANR	9000365	Identifier	addr		9000084	0					
ANR	9000366	Argument	1		9000084	2					
ANR	9000367	PrimaryExpression	1		9000084	0					
ANR	9000368	ElseStatement	else		9000084	0					
ANR	9000369	CompoundStatement		121:11:1934:1934	9000084	0					
ANR	9000370	ExpressionStatement	write_mode = s -> gr [ VGA_GFX_MODE ] & 3	127:8:2056:2092	9000084	0	True				
ANR	9000371	AssignmentExpression	write_mode = s -> gr [ VGA_GFX_MODE ] & 3		9000084	0		=			
ANR	9000372	Identifier	write_mode		9000084	0					
ANR	9000373	BitAndExpression	s -> gr [ VGA_GFX_MODE ] & 3		9000084	1		&			
ANR	9000374	ArrayIndexing	s -> gr [ VGA_GFX_MODE ]		9000084	0					
ANR	9000375	PtrMemberAccess	s -> gr		9000084	0					
ANR	9000376	Identifier	s		9000084	0					
ANR	9000377	Identifier	gr		9000084	1					
ANR	9000378	Identifier	VGA_GFX_MODE		9000084	1					
ANR	9000379	PrimaryExpression	3		9000084	1					
ANR	9000380	SwitchStatement	switch ( write_mode )		9000084	1					
ANR	9000381	Condition	write_mode	129:15:2110:2119	9000084	0	True				
ANR	9000382	Identifier	write_mode		9000084	0					
ANR	9000383	CompoundStatement		127:27:2054:2054	9000084	1					
ANR	9000384	Label	default :	131:8:2133:2140	9000084	0	True				
ANR	9000385	Identifier	default		9000084	0					
ANR	9000386	Label	case 0 :	133:8:2151:2157	9000084	1	True				
ANR	9000387	ExpressionStatement	b = s -> gr [ VGA_GFX_DATA_ROTATE ] & 7	137:12:2198:2232	9000084	2	True				
ANR	9000388	AssignmentExpression	b = s -> gr [ VGA_GFX_DATA_ROTATE ] & 7		9000084	0		=			
ANR	9000389	Identifier	b		9000084	0					
ANR	9000390	BitAndExpression	s -> gr [ VGA_GFX_DATA_ROTATE ] & 7		9000084	1		&			
ANR	9000391	ArrayIndexing	s -> gr [ VGA_GFX_DATA_ROTATE ]		9000084	0					
ANR	9000392	PtrMemberAccess	s -> gr		9000084	0					
ANR	9000393	Identifier	s		9000084	0					
ANR	9000394	Identifier	gr		9000084	1					
ANR	9000395	Identifier	VGA_GFX_DATA_ROTATE		9000084	1					
ANR	9000396	PrimaryExpression	7		9000084	1					
ANR	9000397	ExpressionStatement	val = ( ( val >> b ) | ( val << ( 8 - b ) ) ) & 0xff	139:12:2247:2291	9000084	3	True				
ANR	9000398	AssignmentExpression	val = ( ( val >> b ) | ( val << ( 8 - b ) ) ) & 0xff		9000084	0		=			
ANR	9000399	Identifier	val		9000084	0					
ANR	9000400	BitAndExpression	( ( val >> b ) | ( val << ( 8 - b ) ) ) & 0xff		9000084	1		&			
ANR	9000401	InclusiveOrExpression	( val >> b ) | ( val << ( 8 - b ) )		9000084	0		|			
ANR	9000402	ShiftExpression	val >> b		9000084	0		>>			
ANR	9000403	Identifier	val		9000084	0					
ANR	9000404	Identifier	b		9000084	1					
ANR	9000405	ShiftExpression	val << ( 8 - b )		9000084	1		<<			
ANR	9000406	Identifier	val		9000084	0					
ANR	9000407	AdditiveExpression	8 - b		9000084	1		-			
ANR	9000408	PrimaryExpression	8		9000084	0					
ANR	9000409	Identifier	b		9000084	1					
ANR	9000410	PrimaryExpression	0xff		9000084	1					
ANR	9000411	ExpressionStatement	val |= val << 8	141:12:2306:2321	9000084	4	True				
ANR	9000412	AssignmentExpression	val |= val << 8		9000084	0		|=			
ANR	9000413	Identifier	val		9000084	0					
ANR	9000414	ShiftExpression	val << 8		9000084	1		<<			
ANR	9000415	Identifier	val		9000084	0					
ANR	9000416	PrimaryExpression	8		9000084	1					
ANR	9000417	ExpressionStatement	val |= val << 16	143:12:2336:2352	9000084	5	True				
ANR	9000418	AssignmentExpression	val |= val << 16		9000084	0		|=			
ANR	9000419	Identifier	val		9000084	0					
ANR	9000420	ShiftExpression	val << 16		9000084	1		<<			
ANR	9000421	Identifier	val		9000084	0					
ANR	9000422	PrimaryExpression	16		9000084	1					
ANR	9000423	ExpressionStatement	set_mask = mask16 [ s -> gr [ VGA_GFX_SR_ENABLE ] ]	149:12:2409:2452	9000084	6	True				
ANR	9000424	AssignmentExpression	set_mask = mask16 [ s -> gr [ VGA_GFX_SR_ENABLE ] ]		9000084	0		=			
ANR	9000425	Identifier	set_mask		9000084	0					
ANR	9000426	ArrayIndexing	mask16 [ s -> gr [ VGA_GFX_SR_ENABLE ] ]		9000084	1					
ANR	9000427	Identifier	mask16		9000084	0					
ANR	9000428	ArrayIndexing	s -> gr [ VGA_GFX_SR_ENABLE ]		9000084	1					
ANR	9000429	PtrMemberAccess	s -> gr		9000084	0					
ANR	9000430	Identifier	s		9000084	0					
ANR	9000431	Identifier	gr		9000084	1					
ANR	9000432	Identifier	VGA_GFX_SR_ENABLE		9000084	1					
ANR	9000433	ExpressionStatement	val = ( val & ~set_mask ) | ( mask16 [ s -> gr [ VGA_GFX_SR_VALUE ] ] & set_mask )	151:12:2467:2554	9000084	7	True				
ANR	9000434	AssignmentExpression	val = ( val & ~set_mask ) | ( mask16 [ s -> gr [ VGA_GFX_SR_VALUE ] ] & set_mask )		9000084	0		=			
ANR	9000435	Identifier	val		9000084	0					
ANR	9000436	InclusiveOrExpression	( val & ~set_mask ) | ( mask16 [ s -> gr [ VGA_GFX_SR_VALUE ] ] & set_mask )		9000084	1		|			
ANR	9000437	BitAndExpression	val & ~set_mask		9000084	0		&			
ANR	9000438	Identifier	val		9000084	0					
ANR	9000439	Identifier	~set_mask		9000084	1					
ANR	9000440	BitAndExpression	mask16 [ s -> gr [ VGA_GFX_SR_VALUE ] ] & set_mask		9000084	1		&			
ANR	9000441	ArrayIndexing	mask16 [ s -> gr [ VGA_GFX_SR_VALUE ] ]		9000084	0					
ANR	9000442	Identifier	mask16		9000084	0					
ANR	9000443	ArrayIndexing	s -> gr [ VGA_GFX_SR_VALUE ]		9000084	1					
ANR	9000444	PtrMemberAccess	s -> gr		9000084	0					
ANR	9000445	Identifier	s		9000084	0					
ANR	9000446	Identifier	gr		9000084	1					
ANR	9000447	Identifier	VGA_GFX_SR_VALUE		9000084	1					
ANR	9000448	Identifier	set_mask		9000084	1					
ANR	9000449	ExpressionStatement	bit_mask = s -> gr [ VGA_GFX_BIT_MASK ]	155:12:2569:2603	9000084	8	True				
ANR	9000450	AssignmentExpression	bit_mask = s -> gr [ VGA_GFX_BIT_MASK ]		9000084	0		=			
ANR	9000451	Identifier	bit_mask		9000084	0					
ANR	9000452	ArrayIndexing	s -> gr [ VGA_GFX_BIT_MASK ]		9000084	1					
ANR	9000453	PtrMemberAccess	s -> gr		9000084	0					
ANR	9000454	Identifier	s		9000084	0					
ANR	9000455	Identifier	gr		9000084	1					
ANR	9000456	Identifier	VGA_GFX_BIT_MASK		9000084	1					
ANR	9000457	BreakStatement	break ;	157:12:2618:2623	9000084	9	True				
ANR	9000458	Label	case 1 :	159:8:2634:2640	9000084	10	True				
ANR	9000459	ExpressionStatement	val = s -> latch	161:12:2655:2669	9000084	11	True				
ANR	9000460	AssignmentExpression	val = s -> latch		9000084	0		=			
ANR	9000461	Identifier	val		9000084	0					
ANR	9000462	PtrMemberAccess	s -> latch		9000084	1					
ANR	9000463	Identifier	s		9000084	0					
ANR	9000464	Identifier	latch		9000084	1					
ANR	9000465	GotoStatement	goto do_write ;	163:12:2684:2697	9000084	12	True				
ANR	9000466	Identifier	do_write		9000084	0					
ANR	9000467	Label	case 2 :	165:8:2708:2714	9000084	13	True				
ANR	9000468	ExpressionStatement	val = mask16 [ val & 0x0f ]	167:12:2729:2753	9000084	14	True				
ANR	9000469	AssignmentExpression	val = mask16 [ val & 0x0f ]		9000084	0		=			
ANR	9000470	Identifier	val		9000084	0					
ANR	9000471	ArrayIndexing	mask16 [ val & 0x0f ]		9000084	1					
ANR	9000472	Identifier	mask16		9000084	0					
ANR	9000473	BitAndExpression	val & 0x0f		9000084	1		&			
ANR	9000474	Identifier	val		9000084	0					
ANR	9000475	PrimaryExpression	0x0f		9000084	1					
ANR	9000476	ExpressionStatement	bit_mask = s -> gr [ VGA_GFX_BIT_MASK ]	169:12:2768:2802	9000084	15	True				
ANR	9000477	AssignmentExpression	bit_mask = s -> gr [ VGA_GFX_BIT_MASK ]		9000084	0		=			
ANR	9000478	Identifier	bit_mask		9000084	0					
ANR	9000479	ArrayIndexing	s -> gr [ VGA_GFX_BIT_MASK ]		9000084	1					
ANR	9000480	PtrMemberAccess	s -> gr		9000084	0					
ANR	9000481	Identifier	s		9000084	0					
ANR	9000482	Identifier	gr		9000084	1					
ANR	9000483	Identifier	VGA_GFX_BIT_MASK		9000084	1					
ANR	9000484	BreakStatement	break ;	171:12:2817:2822	9000084	16	True				
ANR	9000485	Label	case 3 :	173:8:2833:2839	9000084	17	True				
ANR	9000486	ExpressionStatement	b = s -> gr [ VGA_GFX_DATA_ROTATE ] & 7	177:12:2880:2914	9000084	18	True				
ANR	9000487	AssignmentExpression	b = s -> gr [ VGA_GFX_DATA_ROTATE ] & 7		9000084	0		=			
ANR	9000488	Identifier	b		9000084	0					
ANR	9000489	BitAndExpression	s -> gr [ VGA_GFX_DATA_ROTATE ] & 7		9000084	1		&			
ANR	9000490	ArrayIndexing	s -> gr [ VGA_GFX_DATA_ROTATE ]		9000084	0					
ANR	9000491	PtrMemberAccess	s -> gr		9000084	0					
ANR	9000492	Identifier	s		9000084	0					
ANR	9000493	Identifier	gr		9000084	1					
ANR	9000494	Identifier	VGA_GFX_DATA_ROTATE		9000084	1					
ANR	9000495	PrimaryExpression	7		9000084	1					
ANR	9000496	ExpressionStatement	val = ( val >> b ) | ( val << ( 8 - b ) )	179:12:2929:2964	9000084	19	True				
ANR	9000497	AssignmentExpression	val = ( val >> b ) | ( val << ( 8 - b ) )		9000084	0		=			
ANR	9000498	Identifier	val		9000084	0					
ANR	9000499	InclusiveOrExpression	( val >> b ) | ( val << ( 8 - b ) )		9000084	1		|			
ANR	9000500	ShiftExpression	val >> b		9000084	0		>>			
ANR	9000501	Identifier	val		9000084	0					
ANR	9000502	Identifier	b		9000084	1					
ANR	9000503	ShiftExpression	val << ( 8 - b )		9000084	1		<<			
ANR	9000504	Identifier	val		9000084	0					
ANR	9000505	AdditiveExpression	8 - b		9000084	1		-			
ANR	9000506	PrimaryExpression	8		9000084	0					
ANR	9000507	Identifier	b		9000084	1					
ANR	9000508	ExpressionStatement	bit_mask = s -> gr [ VGA_GFX_BIT_MASK ] & val	183:12:2981:3021	9000084	20	True				
ANR	9000509	AssignmentExpression	bit_mask = s -> gr [ VGA_GFX_BIT_MASK ] & val		9000084	0		=			
ANR	9000510	Identifier	bit_mask		9000084	0					
ANR	9000511	BitAndExpression	s -> gr [ VGA_GFX_BIT_MASK ] & val		9000084	1		&			
ANR	9000512	ArrayIndexing	s -> gr [ VGA_GFX_BIT_MASK ]		9000084	0					
ANR	9000513	PtrMemberAccess	s -> gr		9000084	0					
ANR	9000514	Identifier	s		9000084	0					
ANR	9000515	Identifier	gr		9000084	1					
ANR	9000516	Identifier	VGA_GFX_BIT_MASK		9000084	1					
ANR	9000517	Identifier	val		9000084	1					
ANR	9000518	ExpressionStatement	val = mask16 [ s -> gr [ VGA_GFX_SR_VALUE ] ]	185:12:3036:3073	9000084	21	True				
ANR	9000519	AssignmentExpression	val = mask16 [ s -> gr [ VGA_GFX_SR_VALUE ] ]		9000084	0		=			
ANR	9000520	Identifier	val		9000084	0					
ANR	9000521	ArrayIndexing	mask16 [ s -> gr [ VGA_GFX_SR_VALUE ] ]		9000084	1					
ANR	9000522	Identifier	mask16		9000084	0					
ANR	9000523	ArrayIndexing	s -> gr [ VGA_GFX_SR_VALUE ]		9000084	1					
ANR	9000524	PtrMemberAccess	s -> gr		9000084	0					
ANR	9000525	Identifier	s		9000084	0					
ANR	9000526	Identifier	gr		9000084	1					
ANR	9000527	Identifier	VGA_GFX_SR_VALUE		9000084	1					
ANR	9000528	BreakStatement	break ;	187:12:3088:3093	9000084	22	True				
ANR	9000529	ExpressionStatement	func_select = s -> gr [ VGA_GFX_DATA_ROTATE ] >> 3	195:8:3156:3201	9000084	2	True				
ANR	9000530	AssignmentExpression	func_select = s -> gr [ VGA_GFX_DATA_ROTATE ] >> 3		9000084	0		=			
ANR	9000531	Identifier	func_select		9000084	0					
ANR	9000532	ShiftExpression	s -> gr [ VGA_GFX_DATA_ROTATE ] >> 3		9000084	1		>>			
ANR	9000533	ArrayIndexing	s -> gr [ VGA_GFX_DATA_ROTATE ]		9000084	0					
ANR	9000534	PtrMemberAccess	s -> gr		9000084	0					
ANR	9000535	Identifier	s		9000084	0					
ANR	9000536	Identifier	gr		9000084	1					
ANR	9000537	Identifier	VGA_GFX_DATA_ROTATE		9000084	1					
ANR	9000538	PrimaryExpression	3		9000084	1					
ANR	9000539	SwitchStatement	switch ( func_select )		9000084	3					
ANR	9000540	Condition	func_select	197:15:3219:3229	9000084	0	True				
ANR	9000541	Identifier	func_select		9000084	0					
ANR	9000542	CompoundStatement		195:28:3164:3164	9000084	1					
ANR	9000543	Label	case 0 :	199:8:3243:3249	9000084	0	True				
ANR	9000544	Label	default :	201:8:3260:3267	9000084	1	True				
ANR	9000545	Identifier	default		9000084	0					
ANR	9000546	BreakStatement	break ;	205:12:3315:3320	9000084	2	True				
ANR	9000547	Label	case 1 :	207:8:3331:3337	9000084	3	True				
ANR	9000548	ExpressionStatement	val &= s -> latch	211:12:3375:3390	9000084	4	True				
ANR	9000549	AssignmentExpression	val &= s -> latch		9000084	0		&=			
ANR	9000550	Identifier	val		9000084	0					
ANR	9000551	PtrMemberAccess	s -> latch		9000084	1					
ANR	9000552	Identifier	s		9000084	0					
ANR	9000553	Identifier	latch		9000084	1					
ANR	9000554	BreakStatement	break ;	213:12:3405:3410	9000084	5	True				
ANR	9000555	Label	case 2 :	215:8:3421:3427	9000084	6	True				
ANR	9000556	ExpressionStatement	val |= s -> latch	219:12:3464:3479	9000084	7	True				
ANR	9000557	AssignmentExpression	val |= s -> latch		9000084	0		|=			
ANR	9000558	Identifier	val		9000084	0					
ANR	9000559	PtrMemberAccess	s -> latch		9000084	1					
ANR	9000560	Identifier	s		9000084	0					
ANR	9000561	Identifier	latch		9000084	1					
ANR	9000562	BreakStatement	break ;	221:12:3494:3499	9000084	8	True				
ANR	9000563	Label	case 3 :	223:8:3510:3516	9000084	9	True				
ANR	9000564	ExpressionStatement	val ^= s -> latch	227:12:3554:3569	9000084	10	True				
ANR	9000565	AssignmentExpression	val ^= s -> latch		9000084	0		^=			
ANR	9000566	Identifier	val		9000084	0					
ANR	9000567	PtrMemberAccess	s -> latch		9000084	1					
ANR	9000568	Identifier	s		9000084	0					
ANR	9000569	Identifier	latch		9000084	1					
ANR	9000570	BreakStatement	break ;	229:12:3584:3589	9000084	11	True				
ANR	9000571	ExpressionStatement	bit_mask |= bit_mask << 8	237:8:3643:3668	9000084	4	True				
ANR	9000572	AssignmentExpression	bit_mask |= bit_mask << 8		9000084	0		|=			
ANR	9000573	Identifier	bit_mask		9000084	0					
ANR	9000574	ShiftExpression	bit_mask << 8		9000084	1		<<			
ANR	9000575	Identifier	bit_mask		9000084	0					
ANR	9000576	PrimaryExpression	8		9000084	1					
ANR	9000577	ExpressionStatement	bit_mask |= bit_mask << 16	239:8:3679:3705	9000084	5	True				
ANR	9000578	AssignmentExpression	bit_mask |= bit_mask << 16		9000084	0		|=			
ANR	9000579	Identifier	bit_mask		9000084	0					
ANR	9000580	ShiftExpression	bit_mask << 16		9000084	1		<<			
ANR	9000581	Identifier	bit_mask		9000084	0					
ANR	9000582	PrimaryExpression	16		9000084	1					
ANR	9000583	ExpressionStatement	val = ( val & bit_mask ) | ( s -> latch & ~bit_mask )	241:8:3716:3763	9000084	6	True				
ANR	9000584	AssignmentExpression	val = ( val & bit_mask ) | ( s -> latch & ~bit_mask )		9000084	0		=			
ANR	9000585	Identifier	val		9000084	0					
ANR	9000586	InclusiveOrExpression	( val & bit_mask ) | ( s -> latch & ~bit_mask )		9000084	1		|			
ANR	9000587	BitAndExpression	val & bit_mask		9000084	0		&			
ANR	9000588	Identifier	val		9000084	0					
ANR	9000589	Identifier	bit_mask		9000084	1					
ANR	9000590	BitAndExpression	s -> latch & ~bit_mask		9000084	1		&			
ANR	9000591	PtrMemberAccess	s -> latch		9000084	0					
ANR	9000592	Identifier	s		9000084	0					
ANR	9000593	Identifier	latch		9000084	1					
ANR	9000594	Identifier	~bit_mask		9000084	1					
ANR	9000595	Label	do_write :	245:4:3772:3780	9000084	7	True				
ANR	9000596	Identifier	do_write		9000084	0					
ANR	9000597	ExpressionStatement	mask = s -> sr [ VGA_SEQ_PLANE_WRITE ]	249:8:3835:3868	9000084	8	True				
ANR	9000598	AssignmentExpression	mask = s -> sr [ VGA_SEQ_PLANE_WRITE ]		9000084	0		=			
ANR	9000599	Identifier	mask		9000084	0					
ANR	9000600	ArrayIndexing	s -> sr [ VGA_SEQ_PLANE_WRITE ]		9000084	1					
ANR	9000601	PtrMemberAccess	s -> sr		9000084	0					
ANR	9000602	Identifier	s		9000084	0					
ANR	9000603	Identifier	sr		9000084	1					
ANR	9000604	Identifier	VGA_SEQ_PLANE_WRITE		9000084	1					
ANR	9000605	ExpressionStatement	s -> plane_updated |= mask	251:8:3879:3903	9000084	9	True				
ANR	9000606	AssignmentExpression	s -> plane_updated |= mask		9000084	0		|=			
ANR	9000607	PtrMemberAccess	s -> plane_updated		9000084	0					
ANR	9000608	Identifier	s		9000084	0					
ANR	9000609	Identifier	plane_updated		9000084	1					
ANR	9000610	Identifier	mask		9000084	1					
ANR	9000611	ExpressionStatement	write_mask = mask16 [ mask ]	253:8:3952:3977	9000084	10	True				
ANR	9000612	AssignmentExpression	write_mask = mask16 [ mask ]		9000084	0		=			
ANR	9000613	Identifier	write_mask		9000084	0					
ANR	9000614	ArrayIndexing	mask16 [ mask ]		9000084	1					
ANR	9000615	Identifier	mask16		9000084	0					
ANR	9000616	Identifier	mask		9000084	1					
ANR	9000617	IfStatement	if ( addr * sizeof ( uint32_t ) >= s -> vram_size )		9000084	11					
ANR	9000618	Condition	addr * sizeof ( uint32_t ) >= s -> vram_size	255:12:3992:4030	9000084	0	True				
ANR	9000619	RelationalExpression	addr * sizeof ( uint32_t ) >= s -> vram_size		9000084	0		>=			
ANR	9000620	MultiplicativeExpression	addr * sizeof ( uint32_t )		9000084	0		*			
ANR	9000621	Identifier	addr		9000084	0					
ANR	9000622	SizeofExpression	sizeof ( uint32_t )		9000084	1					
ANR	9000623	Sizeof	sizeof		9000084	0					
ANR	9000624	SizeofOperand	uint32_t		9000084	1					
ANR	9000625	PtrMemberAccess	s -> vram_size		9000084	1					
ANR	9000626	Identifier	s		9000084	0					
ANR	9000627	Identifier	vram_size		9000084	1					
ANR	9000628	CompoundStatement		253:53:3965:3965	9000084	1					
ANR	9000629	ReturnStatement	return ;	257:12:4048:4054	9000084	0	True				
ANR	9000630	ExpressionStatement	( ( uint32_t * ) s -> vram_ptr ) [ addr ] = ( ( ( uint32_t * ) s -> vram_ptr ) [ addr ] & ~write_mask ) | ( val & write_mask )	261:8:4076:4204	9000084	12	True				
ANR	9000631	AssignmentExpression	( ( uint32_t * ) s -> vram_ptr ) [ addr ] = ( ( ( uint32_t * ) s -> vram_ptr ) [ addr ] & ~write_mask ) | ( val & write_mask )		9000084	0		=			
ANR	9000632	ArrayIndexing	( ( uint32_t * ) s -> vram_ptr ) [ addr ]		9000084	0					
ANR	9000633	CastExpression	( uint32_t * ) s -> vram_ptr		9000084	0					
ANR	9000634	CastTarget	uint32_t *		9000084	0					
ANR	9000635	PtrMemberAccess	s -> vram_ptr		9000084	1					
ANR	9000636	Identifier	s		9000084	0					
ANR	9000637	Identifier	vram_ptr		9000084	1					
ANR	9000638	Identifier	addr		9000084	1					
ANR	9000639	InclusiveOrExpression	( ( ( uint32_t * ) s -> vram_ptr ) [ addr ] & ~write_mask ) | ( val & write_mask )		9000084	1		|			
ANR	9000640	BitAndExpression	( ( uint32_t * ) s -> vram_ptr ) [ addr ] & ~write_mask		9000084	0		&			
ANR	9000641	ArrayIndexing	( ( uint32_t * ) s -> vram_ptr ) [ addr ]		9000084	0					
ANR	9000642	CastExpression	( uint32_t * ) s -> vram_ptr		9000084	0					
ANR	9000643	CastTarget	uint32_t *		9000084	0					
ANR	9000644	PtrMemberAccess	s -> vram_ptr		9000084	1					
ANR	9000645	Identifier	s		9000084	0					
ANR	9000646	Identifier	vram_ptr		9000084	1					
ANR	9000647	Identifier	addr		9000084	1					
ANR	9000648	Identifier	~write_mask		9000084	1					
ANR	9000649	BitAndExpression	val & write_mask		9000084	1		&			
ANR	9000650	Identifier	val		9000084	0					
ANR	9000651	Identifier	write_mask		9000084	1					
ANR	9000652	Statement	printf	269:8:4237:4242	9000084	13	True				
ANR	9000653	Statement	(	269:14:4243:4243	9000084	14	True				
ANR	9000654	Statement	"""vga: latch: [0x"""	269:15:4244:4260	9000084	15	True				
ANR	9000655	Statement	TARGET_FMT_plx	269:33:4262:4275	9000084	16	True				
ANR	9000656	Statement	"""] mask=0x%08x val=0x%08x\\n"""	269:48:4277:4304	9000084	17	True				
ANR	9000657	Statement	","	269:76:4305:4305	9000084	18	True				
ANR	9000658	Statement	addr	271:15:4323:4326	9000084	19	True				
ANR	9000659	Statement	*	271:20:4328:4328	9000084	20	True				
ANR	9000660	Statement	4	271:22:4330:4330	9000084	21	True				
ANR	9000661	Statement	","	271:23:4331:4331	9000084	22	True				
ANR	9000662	Statement	write_mask	271:25:4333:4342	9000084	23	True				
ANR	9000663	Statement	","	271:35:4343:4343	9000084	24	True				
ANR	9000664	Statement	val	271:37:4345:4347	9000084	25	True				
ANR	9000665	Statement	)	271:40:4348:4348	9000084	26	True				
ANR	9000666	ExpressionStatement		271:41:4349:4349	9000084	27	True				
ANR	9000667	ExpressionStatement	"memory_region_set_dirty ( & s -> vram , addr << 2 , sizeof ( uint32_t ) )"	275:8:4368:4430	9000084	28	True				
ANR	9000668	CallExpression	"memory_region_set_dirty ( & s -> vram , addr << 2 , sizeof ( uint32_t ) )"		9000084	0					
ANR	9000669	Callee	memory_region_set_dirty		9000084	0					
ANR	9000670	Identifier	memory_region_set_dirty		9000084	0					
ANR	9000671	ArgumentList	& s -> vram		9000084	1					
ANR	9000672	Argument	& s -> vram		9000084	0					
ANR	9000673	UnaryOperationExpression	& s -> vram		9000084	0					
ANR	9000674	UnaryOperator	&		9000084	0					
ANR	9000675	PtrMemberAccess	s -> vram		9000084	1					
ANR	9000676	Identifier	s		9000084	0					
ANR	9000677	Identifier	vram		9000084	1					
ANR	9000678	Argument	addr << 2		9000084	1					
ANR	9000679	ShiftExpression	addr << 2		9000084	0		<<			
ANR	9000680	Identifier	addr		9000084	0					
ANR	9000681	PrimaryExpression	2		9000084	1					
ANR	9000682	Argument	sizeof ( uint32_t )		9000084	2					
ANR	9000683	SizeofExpression	sizeof ( uint32_t )		9000084	0					
ANR	9000684	Sizeof	sizeof		9000084	0					
ANR	9000685	SizeofOperand	uint32_t		9000084	1					
ANR	9000686	ReturnType	void		9000084	1					
ANR	9000687	Identifier	vga_mem_writeb		9000084	2					
ANR	9000688	ParameterList	"VGACommonState * s , hwaddr addr , uint32_t val"		9000084	3					
ANR	9000689	Parameter	VGACommonState * s	1:20:20:36	9000084	0	True				
ANR	9000690	ParameterType	VGACommonState *		9000084	0					
ANR	9000691	Identifier	s		9000084	1					
ANR	9000692	Parameter	hwaddr addr	1:39:39:49	9000084	1	True				
ANR	9000693	ParameterType	hwaddr		9000084	0					
ANR	9000694	Identifier	addr		9000084	1					
ANR	9000695	Parameter	uint32_t val	1:52:52:63	9000084	2	True				
ANR	9000696	ParameterType	uint32_t		9000084	0					
ANR	9000697	Identifier	val		9000084	1					
ANR	9000698	CFGEntryNode	ENTRY		9000084		True				
ANR	9000699	CFGExitNode	EXIT		9000084		True				
ANR	9000700	Symbol	plane		9000084						
ANR	9000701	Symbol	* mask16		9000084						
ANR	9000702	Symbol	* mask		9000084						
ANR	9000703	Symbol	* VGA_SEQ_PLANE_WRITE		9000084						
ANR	9000704	Symbol	* VGA_GFX_DATA_ROTATE		9000084						
ANR	9000705	Symbol	write_mode		9000084						
ANR	9000706	Symbol	& s -> vram		9000084						
ANR	9000707	Symbol	VGA_GFX_SR_ENABLE		9000084						
ANR	9000708	Symbol	s -> vram_size		9000084						
ANR	9000709	Symbol	VGA_SR04_CHN_4M		9000084						
ANR	9000710	Symbol	mask16		9000084						
ANR	9000711	Symbol	val		9000084						
ANR	9000712	Symbol	* VGA_SEQ_MEMORY_MODE		9000084						
ANR	9000713	Symbol	* s -> gr		9000084						
ANR	9000714	Symbol	~set_mask		9000084						
ANR	9000715	Symbol	* VGA_GFX_MISC		9000084						
ANR	9000716	Symbol	* * * s		9000084						
ANR	9000717	Symbol	* s -> sr		9000084						
ANR	9000718	Symbol	VGA_GFX_SR_VALUE		9000084						
ANR	9000719	Symbol	s -> bank_offset		9000084						
ANR	9000720	Symbol	* addr		9000084						
ANR	9000721	Symbol	s -> latch		9000084						
ANR	9000722	Symbol	* * VGA_GFX_SR_VALUE		9000084						
ANR	9000723	Symbol	* val		9000084						
ANR	9000724	Symbol	func_select		9000084						
ANR	9000725	Symbol	* * s -> gr		9000084						
ANR	9000726	Symbol	* VGA_GFX_SR_ENABLE		9000084						
ANR	9000727	Symbol	s -> gr		9000084						
ANR	9000728	Symbol	* s -> vram_ptr		9000084						
ANR	9000729	Symbol	VGA_GFX_DATA_ROTATE		9000084						
ANR	9000730	Symbol	VGA_GFX_MISC		9000084						
ANR	9000731	Symbol	* * s		9000084						
ANR	9000732	Symbol	* VGA_GFX_BIT_MASK		9000084						
ANR	9000733	Symbol	addr		9000084						
ANR	9000734	Symbol	write_mask		9000084						
ANR	9000735	Symbol	VGA_GFX_PLANE_READ		9000084						
ANR	9000736	Symbol	mask		9000084						
ANR	9000737	Symbol	bit_mask		9000084						
ANR	9000738	Symbol	s -> sr		9000084						
ANR	9000739	Symbol	s -> plane_updated		9000084						
ANR	9000740	Symbol	b		9000084						
ANR	9000741	Symbol	* VGA_GFX_SR_VALUE		9000084						
ANR	9000742	Symbol	s -> vram_ptr		9000084						
ANR	9000743	Symbol	~write_mask		9000084						
ANR	9000744	Symbol	~bit_mask		9000084						
ANR	9000745	Symbol	* VGA_GFX_PLANE_READ		9000084						
ANR	9000746	Symbol	VGA_GFX_MODE		9000084						
ANR	9000747	Symbol	VGA_SEQ_PLANE_WRITE		9000084						
ANR	9000748	Symbol	s		9000084						
ANR	9000749	Symbol	~1		9000084						
ANR	9000750	Symbol	VGA_SEQ_MEMORY_MODE		9000084						
ANR	9000751	Symbol	* VGA_GFX_MODE		9000084						
ANR	9000752	Symbol	set_mask		9000084						
ANR	9000753	Symbol	VGA_GFX_BIT_MASK		9000084						
ANR	9000754	Symbol	memory_map_mode		9000084						
ANR	9000755	Symbol	* s		9000084						
ANR	9000756	Symbol	* * VGA_GFX_SR_ENABLE		9000084						
