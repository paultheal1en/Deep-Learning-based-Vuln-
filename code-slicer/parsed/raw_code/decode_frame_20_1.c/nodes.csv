command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1802255	File	/home/p4ultr4n/workplace/ReVeal/raw_code/decode_frame_20_1.c								
ANR	1802256	Function	decode_frame	1:0:0:4924							
ANR	1802257	FunctionDef	"decode_frame (AVCodecContext * avctx , void * data , int * got_frame_ptr , AVPacket * pkt)"		1802256	0					
ANR	1802258	CompoundStatement		5:0:120:4924	1802256	0					
ANR	1802259	IdentifierDeclStatement	SANMVideoContext * ctx = avctx -> priv_data ;	7:4:127:167	1802256	0	True				
ANR	1802260	IdentifierDecl	* ctx = avctx -> priv_data		1802256	0					
ANR	1802261	IdentifierDeclType	SANMVideoContext *		1802256	0					
ANR	1802262	Identifier	ctx		1802256	1					
ANR	1802263	AssignmentExpression	* ctx = avctx -> priv_data		1802256	2		=			
ANR	1802264	Identifier	ctx		1802256	0					
ANR	1802265	PtrMemberAccess	avctx -> priv_data		1802256	1					
ANR	1802266	Identifier	avctx		1802256	0					
ANR	1802267	Identifier	priv_data		1802256	1					
ANR	1802268	IdentifierDeclStatement	"int i , ret ;"	9:4:174:184	1802256	1	True				
ANR	1802269	IdentifierDecl	i		1802256	0					
ANR	1802270	IdentifierDeclType	int		1802256	0					
ANR	1802271	Identifier	i		1802256	1					
ANR	1802272	IdentifierDecl	ret		1802256	1					
ANR	1802273	IdentifierDeclType	int		1802256	0					
ANR	1802274	Identifier	ret		1802256	1					
ANR	1802275	ExpressionStatement	"bytestream2_init ( & ctx -> gb , pkt -> data , pkt -> size )"	13:4:193:241	1802256	2	True				
ANR	1802276	CallExpression	"bytestream2_init ( & ctx -> gb , pkt -> data , pkt -> size )"		1802256	0					
ANR	1802277	Callee	bytestream2_init		1802256	0					
ANR	1802278	Identifier	bytestream2_init		1802256	0					
ANR	1802279	ArgumentList	& ctx -> gb		1802256	1					
ANR	1802280	Argument	& ctx -> gb		1802256	0					
ANR	1802281	UnaryOperationExpression	& ctx -> gb		1802256	0					
ANR	1802282	UnaryOperator	&		1802256	0					
ANR	1802283	PtrMemberAccess	ctx -> gb		1802256	1					
ANR	1802284	Identifier	ctx		1802256	0					
ANR	1802285	Identifier	gb		1802256	1					
ANR	1802286	Argument	pkt -> data		1802256	1					
ANR	1802287	PtrMemberAccess	pkt -> data		1802256	0					
ANR	1802288	Identifier	pkt		1802256	0					
ANR	1802289	Identifier	data		1802256	1					
ANR	1802290	Argument	pkt -> size		1802256	2					
ANR	1802291	PtrMemberAccess	pkt -> size		1802256	0					
ANR	1802292	Identifier	pkt		1802256	0					
ANR	1802293	Identifier	size		1802256	1					
ANR	1802294	IfStatement	if ( ctx -> output -> data [ 0 ] )		1802256	3					
ANR	1802295	Condition	ctx -> output -> data [ 0 ]	15:8:252:271	1802256	0	True				
ANR	1802296	ArrayIndexing	ctx -> output -> data [ 0 ]		1802256	0					
ANR	1802297	PtrMemberAccess	ctx -> output -> data		1802256	0					
ANR	1802298	PtrMemberAccess	ctx -> output		1802256	0					
ANR	1802299	Identifier	ctx		1802256	0					
ANR	1802300	Identifier	output		1802256	1					
ANR	1802301	Identifier	data		1802256	1					
ANR	1802302	PrimaryExpression	0		1802256	1					
ANR	1802303	ExpressionStatement	"avctx -> release_buffer ( avctx , ctx -> output )"	17:8:283:324	1802256	1	True				
ANR	1802304	CallExpression	"avctx -> release_buffer ( avctx , ctx -> output )"		1802256	0					
ANR	1802305	Callee	avctx -> release_buffer		1802256	0					
ANR	1802306	PtrMemberAccess	avctx -> release_buffer		1802256	0					
ANR	1802307	Identifier	avctx		1802256	0					
ANR	1802308	Identifier	release_buffer		1802256	1					
ANR	1802309	ArgumentList	avctx		1802256	1					
ANR	1802310	Argument	avctx		1802256	0					
ANR	1802311	Identifier	avctx		1802256	0					
ANR	1802312	Argument	ctx -> output		1802256	1					
ANR	1802313	PtrMemberAccess	ctx -> output		1802256	0					
ANR	1802314	Identifier	ctx		1802256	0					
ANR	1802315	Identifier	output		1802256	1					
ANR	1802316	IfStatement	if ( ! ctx -> version )		1802256	4					
ANR	1802317	Condition	! ctx -> version	21:8:337:349	1802256	0	True				
ANR	1802318	UnaryOperationExpression	! ctx -> version		1802256	0					
ANR	1802319	UnaryOperator	!		1802256	0					
ANR	1802320	PtrMemberAccess	ctx -> version		1802256	1					
ANR	1802321	Identifier	ctx		1802256	0					
ANR	1802322	Identifier	version		1802256	1					
ANR	1802323	CompoundStatement		19:8:242:258	1802256	1					
ANR	1802324	IdentifierDeclStatement	int to_store = 0 ;	23:8:363:379	1802256	0	True				
ANR	1802325	IdentifierDecl	to_store = 0		1802256	0					
ANR	1802326	IdentifierDeclType	int		1802256	0					
ANR	1802327	Identifier	to_store		1802256	1					
ANR	1802328	AssignmentExpression	to_store = 0		1802256	2		=			
ANR	1802329	Identifier	to_store		1802256	0					
ANR	1802330	PrimaryExpression	0		1802256	1					
ANR	1802331	WhileStatement	while ( bytestream2_get_bytes_left ( & ctx -> gb ) >= 8 )		1802256	1					
ANR	1802332	Condition	bytestream2_get_bytes_left ( & ctx -> gb ) >= 8	27:15:399:439	1802256	0	True				
ANR	1802333	RelationalExpression	bytestream2_get_bytes_left ( & ctx -> gb ) >= 8		1802256	0		>=			
ANR	1802334	CallExpression	bytestream2_get_bytes_left ( & ctx -> gb )		1802256	0					
ANR	1802335	Callee	bytestream2_get_bytes_left		1802256	0					
ANR	1802336	Identifier	bytestream2_get_bytes_left		1802256	0					
ANR	1802337	ArgumentList	& ctx -> gb		1802256	1					
ANR	1802338	Argument	& ctx -> gb		1802256	0					
ANR	1802339	UnaryOperationExpression	& ctx -> gb		1802256	0					
ANR	1802340	UnaryOperator	&		1802256	0					
ANR	1802341	PtrMemberAccess	ctx -> gb		1802256	1					
ANR	1802342	Identifier	ctx		1802256	0					
ANR	1802343	Identifier	gb		1802256	1					
ANR	1802344	PrimaryExpression	8		1802256	1					
ANR	1802345	CompoundStatement		27:12:369:376	1802256	1					
ANR	1802346	IdentifierDeclStatement	"uint32_t sig , size ;"	29:12:457:475	1802256	0	True				
ANR	1802347	IdentifierDecl	sig		1802256	0					
ANR	1802348	IdentifierDeclType	uint32_t		1802256	0					
ANR	1802349	Identifier	sig		1802256	1					
ANR	1802350	IdentifierDecl	size		1802256	1					
ANR	1802351	IdentifierDeclType	uint32_t		1802256	0					
ANR	1802352	Identifier	size		1802256	1					
ANR	1802353	IdentifierDeclStatement	int pos ;	31:12:490:497	1802256	1	True				
ANR	1802354	IdentifierDecl	pos		1802256	0					
ANR	1802355	IdentifierDeclType	int		1802256	0					
ANR	1802356	Identifier	pos		1802256	1					
ANR	1802357	ExpressionStatement	sig = bytestream2_get_be32u ( & ctx -> gb )	35:12:514:552	1802256	2	True				
ANR	1802358	AssignmentExpression	sig = bytestream2_get_be32u ( & ctx -> gb )		1802256	0		=			
ANR	1802359	Identifier	sig		1802256	0					
ANR	1802360	CallExpression	bytestream2_get_be32u ( & ctx -> gb )		1802256	1					
ANR	1802361	Callee	bytestream2_get_be32u		1802256	0					
ANR	1802362	Identifier	bytestream2_get_be32u		1802256	0					
ANR	1802363	ArgumentList	& ctx -> gb		1802256	1					
ANR	1802364	Argument	& ctx -> gb		1802256	0					
ANR	1802365	UnaryOperationExpression	& ctx -> gb		1802256	0					
ANR	1802366	UnaryOperator	&		1802256	0					
ANR	1802367	PtrMemberAccess	ctx -> gb		1802256	1					
ANR	1802368	Identifier	ctx		1802256	0					
ANR	1802369	Identifier	gb		1802256	1					
ANR	1802370	ExpressionStatement	size = bytestream2_get_be32u ( & ctx -> gb )	37:12:567:605	1802256	3	True				
ANR	1802371	AssignmentExpression	size = bytestream2_get_be32u ( & ctx -> gb )		1802256	0		=			
ANR	1802372	Identifier	size		1802256	0					
ANR	1802373	CallExpression	bytestream2_get_be32u ( & ctx -> gb )		1802256	1					
ANR	1802374	Callee	bytestream2_get_be32u		1802256	0					
ANR	1802375	Identifier	bytestream2_get_be32u		1802256	0					
ANR	1802376	ArgumentList	& ctx -> gb		1802256	1					
ANR	1802377	Argument	& ctx -> gb		1802256	0					
ANR	1802378	UnaryOperationExpression	& ctx -> gb		1802256	0					
ANR	1802379	UnaryOperator	&		1802256	0					
ANR	1802380	PtrMemberAccess	ctx -> gb		1802256	1					
ANR	1802381	Identifier	ctx		1802256	0					
ANR	1802382	Identifier	gb		1802256	1					
ANR	1802383	ExpressionStatement	pos = bytestream2_tell ( & ctx -> gb )	39:12:620:653	1802256	4	True				
ANR	1802384	AssignmentExpression	pos = bytestream2_tell ( & ctx -> gb )		1802256	0		=			
ANR	1802385	Identifier	pos		1802256	0					
ANR	1802386	CallExpression	bytestream2_tell ( & ctx -> gb )		1802256	1					
ANR	1802387	Callee	bytestream2_tell		1802256	0					
ANR	1802388	Identifier	bytestream2_tell		1802256	0					
ANR	1802389	ArgumentList	& ctx -> gb		1802256	1					
ANR	1802390	Argument	& ctx -> gb		1802256	0					
ANR	1802391	UnaryOperationExpression	& ctx -> gb		1802256	0					
ANR	1802392	UnaryOperator	&		1802256	0					
ANR	1802393	PtrMemberAccess	ctx -> gb		1802256	1					
ANR	1802394	Identifier	ctx		1802256	0					
ANR	1802395	Identifier	gb		1802256	1					
ANR	1802396	IfStatement	if ( bytestream2_get_bytes_left ( & ctx -> gb ) < size )		1802256	5					
ANR	1802397	Condition	bytestream2_get_bytes_left ( & ctx -> gb ) < size	43:16:674:716	1802256	0	True				
ANR	1802398	RelationalExpression	bytestream2_get_bytes_left ( & ctx -> gb ) < size		1802256	0		<			
ANR	1802399	CallExpression	bytestream2_get_bytes_left ( & ctx -> gb )		1802256	0					
ANR	1802400	Callee	bytestream2_get_bytes_left		1802256	0					
ANR	1802401	Identifier	bytestream2_get_bytes_left		1802256	0					
ANR	1802402	ArgumentList	& ctx -> gb		1802256	1					
ANR	1802403	Argument	& ctx -> gb		1802256	0					
ANR	1802404	UnaryOperationExpression	& ctx -> gb		1802256	0					
ANR	1802405	UnaryOperator	&		1802256	0					
ANR	1802406	PtrMemberAccess	ctx -> gb		1802256	1					
ANR	1802407	Identifier	ctx		1802256	0					
ANR	1802408	Identifier	gb		1802256	1					
ANR	1802409	Identifier	size		1802256	1					
ANR	1802410	CompoundStatement		39:61:598:598	1802256	1					
ANR	1802411	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""incorrect chunk size %d\\n"" , size )"	45:16:738:800	1802256	0	True				
ANR	1802412	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""incorrect chunk size %d\\n"" , size )"		1802256	0					
ANR	1802413	Callee	av_log		1802256	0					
ANR	1802414	Identifier	av_log		1802256	0					
ANR	1802415	ArgumentList	avctx		1802256	1					
ANR	1802416	Argument	avctx		1802256	0					
ANR	1802417	Identifier	avctx		1802256	0					
ANR	1802418	Argument	AV_LOG_ERROR		1802256	1					
ANR	1802419	Identifier	AV_LOG_ERROR		1802256	0					
ANR	1802420	Argument	"""incorrect chunk size %d\\n"""		1802256	2					
ANR	1802421	PrimaryExpression	"""incorrect chunk size %d\\n"""		1802256	0					
ANR	1802422	Argument	size		1802256	3					
ANR	1802423	Identifier	size		1802256	0					
ANR	1802424	BreakStatement	break ;	47:16:819:824	1802256	1	True				
ANR	1802425	SwitchStatement	switch ( sig )		1802256	6					
ANR	1802426	Condition	sig	51:20:862:864	1802256	0	True				
ANR	1802427	Identifier	sig		1802256	0					
ANR	1802428	CompoundStatement		47:25:746:746	1802256	1					
ANR	1802429	Statement	case	53:12:882:885	1802256	0	True				
ANR	1802430	Statement	MKBETAG	53:17:887:893	1802256	1	True				
ANR	1802431	Statement	(	53:24:894:894	1802256	2	True				
ANR	1802432	Statement	'N'	53:25:895:897	1802256	3	True				
ANR	1802433	Statement	","	53:28:898:898	1802256	4	True				
ANR	1802434	Statement	'P'	53:30:900:902	1802256	5	True				
ANR	1802435	Statement	","	53:33:903:903	1802256	6	True				
ANR	1802436	Statement	'A'	53:35:905:907	1802256	7	True				
ANR	1802437	Statement	","	53:38:908:908	1802256	8	True				
ANR	1802438	Statement	'L'	53:40:910:912	1802256	9	True				
ANR	1802439	Statement	)	53:43:913:913	1802256	10	True				
ANR	1802440	Statement	:	53:44:914:914	1802256	11	True				
ANR	1802441	IfStatement	if ( size != 256 * 3 )		1802256	12					
ANR	1802442	Condition	size != 256 * 3	55:20:937:951	1802256	0	True				
ANR	1802443	EqualityExpression	size != 256 * 3		1802256	0		!=			
ANR	1802444	Identifier	size		1802256	0					
ANR	1802445	MultiplicativeExpression	256 * 3		1802256	1		*			
ANR	1802446	PrimaryExpression	256		1802256	0					
ANR	1802447	PrimaryExpression	3		1802256	1					
ANR	1802448	CompoundStatement		51:37:833:833	1802256	1					
ANR	1802449	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""incorrect palette block size %d\\n"" , size )"	57:20:977:1075	1802256	0	True				
ANR	1802450	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""incorrect palette block size %d\\n"" , size )"		1802256	0					
ANR	1802451	Callee	av_log		1802256	0					
ANR	1802452	Identifier	av_log		1802256	0					
ANR	1802453	ArgumentList	avctx		1802256	1					
ANR	1802454	Argument	avctx		1802256	0					
ANR	1802455	Identifier	avctx		1802256	0					
ANR	1802456	Argument	AV_LOG_ERROR		1802256	1					
ANR	1802457	Identifier	AV_LOG_ERROR		1802256	0					
ANR	1802458	Argument	"""incorrect palette block size %d\\n"""		1802256	2					
ANR	1802459	PrimaryExpression	"""incorrect palette block size %d\\n"""		1802256	0					
ANR	1802460	Argument	size		1802256	3					
ANR	1802461	Identifier	size		1802256	0					
ANR	1802462	ReturnStatement	return AVERROR_INVALIDDATA ;	61:20:1098:1124	1802256	1	True				
ANR	1802463	Identifier	AVERROR_INVALIDDATA		1802256	0					
ANR	1802464	ForStatement	for ( i = 0 ; i < 256 ; i ++ )		1802256	13					
ANR	1802465	ForInit	i = 0 ;	65:21:1167:1172	1802256	0	True				
ANR	1802466	AssignmentExpression	i = 0		1802256	0		=			
ANR	1802467	Identifier	i		1802256	0					
ANR	1802468	PrimaryExpression	0		1802256	1					
ANR	1802469	Condition	i < 256	65:28:1174:1180	1802256	1	True				
ANR	1802470	RelationalExpression	i < 256		1802256	0		<			
ANR	1802471	Identifier	i		1802256	0					
ANR	1802472	PrimaryExpression	256		1802256	1					
ANR	1802473	PostIncDecOperationExpression	i ++	65:37:1183:1185	1802256	2	True				
ANR	1802474	Identifier	i		1802256	0					
ANR	1802475	IncDec	++		1802256	1					
ANR	1802476	ExpressionStatement	ctx -> pal [ i ] = 0xFF << 24 | bytestream2_get_be24u ( & ctx -> gb )	67:20:1209:1267	1802256	3	True				
ANR	1802477	AssignmentExpression	ctx -> pal [ i ] = 0xFF << 24 | bytestream2_get_be24u ( & ctx -> gb )		1802256	0		=			
ANR	1802478	ArrayIndexing	ctx -> pal [ i ]		1802256	0					
ANR	1802479	PtrMemberAccess	ctx -> pal		1802256	0					
ANR	1802480	Identifier	ctx		1802256	0					
ANR	1802481	Identifier	pal		1802256	1					
ANR	1802482	Identifier	i		1802256	1					
ANR	1802483	InclusiveOrExpression	0xFF << 24 | bytestream2_get_be24u ( & ctx -> gb )		1802256	1		|			
ANR	1802484	ShiftExpression	0xFF << 24		1802256	0		<<			
ANR	1802485	PrimaryExpression	0xFF		1802256	0					
ANR	1802486	PrimaryExpression	24		1802256	1					
ANR	1802487	CallExpression	bytestream2_get_be24u ( & ctx -> gb )		1802256	1					
ANR	1802488	Callee	bytestream2_get_be24u		1802256	0					
ANR	1802489	Identifier	bytestream2_get_be24u		1802256	0					
ANR	1802490	ArgumentList	& ctx -> gb		1802256	1					
ANR	1802491	Argument	& ctx -> gb		1802256	0					
ANR	1802492	UnaryOperationExpression	& ctx -> gb		1802256	0					
ANR	1802493	UnaryOperator	&		1802256	0					
ANR	1802494	PtrMemberAccess	ctx -> gb		1802256	1					
ANR	1802495	Identifier	ctx		1802256	0					
ANR	1802496	Identifier	gb		1802256	1					
ANR	1802497	BreakStatement	break ;	69:16:1286:1291	1802256	14	True				
ANR	1802498	Statement	case	71:12:1306:1309	1802256	15	True				
ANR	1802499	Statement	MKBETAG	71:17:1311:1317	1802256	16	True				
ANR	1802500	Statement	(	71:24:1318:1318	1802256	17	True				
ANR	1802501	Statement	'F'	71:25:1319:1321	1802256	18	True				
ANR	1802502	Statement	","	71:28:1322:1322	1802256	19	True				
ANR	1802503	Statement	'O'	71:30:1324:1326	1802256	20	True				
ANR	1802504	Statement	","	71:33:1327:1327	1802256	21	True				
ANR	1802505	Statement	'B'	71:35:1329:1331	1802256	22	True				
ANR	1802506	Statement	","	71:38:1332:1332	1802256	23	True				
ANR	1802507	Statement	'J'	71:40:1334:1336	1802256	24	True				
ANR	1802508	Statement	)	71:43:1337:1337	1802256	25	True				
ANR	1802509	Statement	:	71:44:1338:1338	1802256	26	True				
ANR	1802510	IfStatement	if ( size < 16 )		1802256	27					
ANR	1802511	Condition	size < 16	73:20:1361:1369	1802256	0	True				
ANR	1802512	RelationalExpression	size < 16		1802256	0		<			
ANR	1802513	Identifier	size		1802256	0					
ANR	1802514	PrimaryExpression	16		1802256	1					
ANR	1802515	ReturnStatement	return AVERROR_INVALIDDATA ;	75:20:1393:1419	1802256	1	True				
ANR	1802516	Identifier	AVERROR_INVALIDDATA		1802256	0					
ANR	1802517	IfStatement	if ( ret = process_frame_obj ( ctx ) )		1802256	28					
ANR	1802518	Condition	ret = process_frame_obj ( ctx )	77:20:1442:1469	1802256	0	True				
ANR	1802519	AssignmentExpression	ret = process_frame_obj ( ctx )		1802256	0		=			
ANR	1802520	Identifier	ret		1802256	0					
ANR	1802521	CallExpression	process_frame_obj ( ctx )		1802256	1					
ANR	1802522	Callee	process_frame_obj		1802256	0					
ANR	1802523	Identifier	process_frame_obj		1802256	0					
ANR	1802524	ArgumentList	ctx		1802256	1					
ANR	1802525	Argument	ctx		1802256	0					
ANR	1802526	Identifier	ctx		1802256	0					
ANR	1802527	ReturnStatement	return ret ;	79:20:1493:1503	1802256	1	True				
ANR	1802528	Identifier	ret		1802256	0					
ANR	1802529	BreakStatement	break ;	81:16:1522:1527	1802256	29	True				
ANR	1802530	Statement	case	83:12:1542:1545	1802256	30	True				
ANR	1802531	Statement	MKBETAG	83:17:1547:1553	1802256	31	True				
ANR	1802532	Statement	(	83:24:1554:1554	1802256	32	True				
ANR	1802533	Statement	'X'	83:25:1555:1557	1802256	33	True				
ANR	1802534	Statement	","	83:28:1558:1558	1802256	34	True				
ANR	1802535	Statement	'P'	83:30:1560:1562	1802256	35	True				
ANR	1802536	Statement	","	83:33:1563:1563	1802256	36	True				
ANR	1802537	Statement	'A'	83:35:1565:1567	1802256	37	True				
ANR	1802538	Statement	","	83:38:1568:1568	1802256	38	True				
ANR	1802539	Statement	'L'	83:40:1570:1572	1802256	39	True				
ANR	1802540	Statement	)	83:43:1573:1573	1802256	40	True				
ANR	1802541	Statement	:	83:44:1574:1574	1802256	41	True				
ANR	1802542	IfStatement	if ( size == 6 || size == 4 )		1802256	42					
ANR	1802543	Condition	size == 6 || size == 4	85:20:1597:1618	1802256	0	True				
ANR	1802544	OrExpression	size == 6 || size == 4		1802256	0		||			
ANR	1802545	EqualityExpression	size == 6		1802256	0		==			
ANR	1802546	Identifier	size		1802256	0					
ANR	1802547	PrimaryExpression	6		1802256	1					
ANR	1802548	EqualityExpression	size == 4		1802256	1		==			
ANR	1802549	Identifier	size		1802256	0					
ANR	1802550	PrimaryExpression	4		1802256	1					
ANR	1802551	CompoundStatement		85:20:1560:1565	1802256	1					
ANR	1802552	IdentifierDeclStatement	uint8_t tmp [ 3 ] ;	87:20:1644:1658	1802256	0	True				
ANR	1802553	IdentifierDecl	tmp [ 3 ]		1802256	0					
ANR	1802554	IdentifierDeclType	uint8_t [ 3 ]		1802256	0					
ANR	1802555	Identifier	tmp		1802256	1					
ANR	1802556	PrimaryExpression	3		1802256	2					
ANR	1802557	IdentifierDeclStatement	int j ;	89:20:1681:1686	1802256	1	True				
ANR	1802558	IdentifierDecl	j		1802256	0					
ANR	1802559	IdentifierDeclType	int		1802256	0					
ANR	1802560	Identifier	j		1802256	1					
ANR	1802561	ForStatement	for ( i = 0 ; i < 256 ; i ++ )		1802256	2					
ANR	1802562	ForInit	i = 0 ;	93:25:1716:1721	1802256	0	True				
ANR	1802563	AssignmentExpression	i = 0		1802256	0		=			
ANR	1802564	Identifier	i		1802256	0					
ANR	1802565	PrimaryExpression	0		1802256	1					
ANR	1802566	Condition	i < 256	93:32:1723:1729	1802256	1	True				
ANR	1802567	RelationalExpression	i < 256		1802256	0		<			
ANR	1802568	Identifier	i		1802256	0					
ANR	1802569	PrimaryExpression	256		1802256	1					
ANR	1802570	PostIncDecOperationExpression	i ++	93:41:1732:1734	1802256	2	True				
ANR	1802571	Identifier	i		1802256	0					
ANR	1802572	IncDec	++		1802256	1					
ANR	1802573	CompoundStatement		89:46:1616:1616	1802256	3					
ANR	1802574	ForStatement	for ( j = 0 ; j < 3 ; j ++ )		1802256	0					
ANR	1802575	ForInit	j = 0 ;	95:29:1769:1774	1802256	0	True				
ANR	1802576	AssignmentExpression	j = 0		1802256	0		=			
ANR	1802577	Identifier	j		1802256	0					
ANR	1802578	PrimaryExpression	0		1802256	1					
ANR	1802579	Condition	j < 3	95:36:1776:1780	1802256	1	True				
ANR	1802580	RelationalExpression	j < 3		1802256	0		<			
ANR	1802581	Identifier	j		1802256	0					
ANR	1802582	PrimaryExpression	3		1802256	1					
ANR	1802583	PostIncDecOperationExpression	j ++	95:43:1783:1785	1802256	2	True				
ANR	1802584	Identifier	j		1802256	0					
ANR	1802585	IncDec	++		1802256	1					
ANR	1802586	CompoundStatement		93:28:1698:1742	1802256	3					
ANR	1802587	IdentifierDeclStatement	int t = ( ctx -> pal [ i ] >> ( 16 - j * 8 ) ) & 0xFF ;	97:28:1819:1863	1802256	0	True				
ANR	1802588	IdentifierDecl	t = ( ctx -> pal [ i ] >> ( 16 - j * 8 ) ) & 0xFF		1802256	0					
ANR	1802589	IdentifierDeclType	int		1802256	0					
ANR	1802590	Identifier	t		1802256	1					
ANR	1802591	AssignmentExpression	t = ( ctx -> pal [ i ] >> ( 16 - j * 8 ) ) & 0xFF		1802256	2		=			
ANR	1802592	Identifier	t		1802256	0					
ANR	1802593	BitAndExpression	( ctx -> pal [ i ] >> ( 16 - j * 8 ) ) & 0xFF		1802256	1		&			
ANR	1802594	ShiftExpression	ctx -> pal [ i ] >> ( 16 - j * 8 )		1802256	0		>>			
ANR	1802595	ArrayIndexing	ctx -> pal [ i ]		1802256	0					
ANR	1802596	PtrMemberAccess	ctx -> pal		1802256	0					
ANR	1802597	Identifier	ctx		1802256	0					
ANR	1802598	Identifier	pal		1802256	1					
ANR	1802599	Identifier	i		1802256	1					
ANR	1802600	AdditiveExpression	16 - j * 8		1802256	1		-			
ANR	1802601	PrimaryExpression	16		1802256	0					
ANR	1802602	MultiplicativeExpression	j * 8		1802256	1		*			
ANR	1802603	Identifier	j		1802256	0					
ANR	1802604	PrimaryExpression	8		1802256	1					
ANR	1802605	PrimaryExpression	0xFF		1802256	1					
ANR	1802606	ExpressionStatement	tmp [ j ] = av_clip_uint8 ( ( t * 129 + ctx -> delta_pal [ i * 3 + j ] ) >> 7 )	99:28:1894:1960	1802256	1	True				
ANR	1802607	AssignmentExpression	tmp [ j ] = av_clip_uint8 ( ( t * 129 + ctx -> delta_pal [ i * 3 + j ] ) >> 7 )		1802256	0		=			
ANR	1802608	ArrayIndexing	tmp [ j ]		1802256	0					
ANR	1802609	Identifier	tmp		1802256	0					
ANR	1802610	Identifier	j		1802256	1					
ANR	1802611	CallExpression	av_clip_uint8 ( ( t * 129 + ctx -> delta_pal [ i * 3 + j ] ) >> 7 )		1802256	1					
ANR	1802612	Callee	av_clip_uint8		1802256	0					
ANR	1802613	Identifier	av_clip_uint8		1802256	0					
ANR	1802614	ArgumentList	( t * 129 + ctx -> delta_pal [ i * 3 + j ] ) >> 7		1802256	1					
ANR	1802615	Argument	( t * 129 + ctx -> delta_pal [ i * 3 + j ] ) >> 7		1802256	0					
ANR	1802616	ShiftExpression	( t * 129 + ctx -> delta_pal [ i * 3 + j ] ) >> 7		1802256	0		>>			
ANR	1802617	AdditiveExpression	t * 129 + ctx -> delta_pal [ i * 3 + j ]		1802256	0		+			
ANR	1802618	MultiplicativeExpression	t * 129		1802256	0		*			
ANR	1802619	Identifier	t		1802256	0					
ANR	1802620	PrimaryExpression	129		1802256	1					
ANR	1802621	ArrayIndexing	ctx -> delta_pal [ i * 3 + j ]		1802256	1					
ANR	1802622	PtrMemberAccess	ctx -> delta_pal		1802256	0					
ANR	1802623	Identifier	ctx		1802256	0					
ANR	1802624	Identifier	delta_pal		1802256	1					
ANR	1802625	AdditiveExpression	i * 3 + j		1802256	1		+			
ANR	1802626	MultiplicativeExpression	i * 3		1802256	0		*			
ANR	1802627	Identifier	i		1802256	0					
ANR	1802628	PrimaryExpression	3		1802256	1					
ANR	1802629	Identifier	j		1802256	1					
ANR	1802630	PrimaryExpression	7		1802256	1					
ANR	1802631	ExpressionStatement	ctx -> pal [ i ] = 0xFF << 24 | AV_RB24 ( tmp )	103:24:2014:2053	1802256	1	True				
ANR	1802632	AssignmentExpression	ctx -> pal [ i ] = 0xFF << 24 | AV_RB24 ( tmp )		1802256	0		=			
ANR	1802633	ArrayIndexing	ctx -> pal [ i ]		1802256	0					
ANR	1802634	PtrMemberAccess	ctx -> pal		1802256	0					
ANR	1802635	Identifier	ctx		1802256	0					
ANR	1802636	Identifier	pal		1802256	1					
ANR	1802637	Identifier	i		1802256	1					
ANR	1802638	InclusiveOrExpression	0xFF << 24 | AV_RB24 ( tmp )		1802256	1		|			
ANR	1802639	ShiftExpression	0xFF << 24		1802256	0		<<			
ANR	1802640	PrimaryExpression	0xFF		1802256	0					
ANR	1802641	PrimaryExpression	24		1802256	1					
ANR	1802642	CallExpression	AV_RB24 ( tmp )		1802256	1					
ANR	1802643	Callee	AV_RB24		1802256	0					
ANR	1802644	Identifier	AV_RB24		1802256	0					
ANR	1802645	ArgumentList	tmp		1802256	1					
ANR	1802646	Argument	tmp		1802256	0					
ANR	1802647	Identifier	tmp		1802256	0					
ANR	1802648	ElseStatement	else		1802256	0					
ANR	1802649	CompoundStatement		103:23:1981:1981	1802256	0					
ANR	1802650	IfStatement	if ( size < 768 * 2 + 4 )		1802256	0					
ANR	1802651	Condition	size < 768 * 2 + 4	109:24:2129:2146	1802256	0	True				
ANR	1802652	RelationalExpression	size < 768 * 2 + 4		1802256	0		<			
ANR	1802653	Identifier	size		1802256	0					
ANR	1802654	AdditiveExpression	768 * 2 + 4		1802256	1		+			
ANR	1802655	MultiplicativeExpression	768 * 2		1802256	0		*			
ANR	1802656	PrimaryExpression	768		1802256	0					
ANR	1802657	PrimaryExpression	2		1802256	1					
ANR	1802658	PrimaryExpression	4		1802256	1					
ANR	1802659	CompoundStatement		105:44:2028:2028	1802256	1					
ANR	1802660	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""incorrect palette change block size %d\\n"" , size )"	111:24:2176:2285	1802256	0	True				
ANR	1802661	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""incorrect palette change block size %d\\n"" , size )"		1802256	0					
ANR	1802662	Callee	av_log		1802256	0					
ANR	1802663	Identifier	av_log		1802256	0					
ANR	1802664	ArgumentList	avctx		1802256	1					
ANR	1802665	Argument	avctx		1802256	0					
ANR	1802666	Identifier	avctx		1802256	0					
ANR	1802667	Argument	AV_LOG_ERROR		1802256	1					
ANR	1802668	Identifier	AV_LOG_ERROR		1802256	0					
ANR	1802669	Argument	"""incorrect palette change block size %d\\n"""		1802256	2					
ANR	1802670	PrimaryExpression	"""incorrect palette change block size %d\\n"""		1802256	0					
ANR	1802671	Argument	size		1802256	3					
ANR	1802672	Identifier	size		1802256	0					
ANR	1802673	ReturnStatement	return AVERROR_INVALIDDATA ;	115:24:2312:2338	1802256	1	True				
ANR	1802674	Identifier	AVERROR_INVALIDDATA		1802256	0					
ANR	1802675	ExpressionStatement	"bytestream2_skipu ( & ctx -> gb , 4 )"	119:20:2384:2414	1802256	1	True				
ANR	1802676	CallExpression	"bytestream2_skipu ( & ctx -> gb , 4 )"		1802256	0					
ANR	1802677	Callee	bytestream2_skipu		1802256	0					
ANR	1802678	Identifier	bytestream2_skipu		1802256	0					
ANR	1802679	ArgumentList	& ctx -> gb		1802256	1					
ANR	1802680	Argument	& ctx -> gb		1802256	0					
ANR	1802681	UnaryOperationExpression	& ctx -> gb		1802256	0					
ANR	1802682	UnaryOperator	&		1802256	0					
ANR	1802683	PtrMemberAccess	ctx -> gb		1802256	1					
ANR	1802684	Identifier	ctx		1802256	0					
ANR	1802685	Identifier	gb		1802256	1					
ANR	1802686	Argument	4		1802256	1					
ANR	1802687	PrimaryExpression	4		1802256	0					
ANR	1802688	ForStatement	for ( i = 0 ; i < 768 ; i ++ )		1802256	2					
ANR	1802689	ForInit	i = 0 ;	121:25:2442:2447	1802256	0	True				
ANR	1802690	AssignmentExpression	i = 0		1802256	0		=			
ANR	1802691	Identifier	i		1802256	0					
ANR	1802692	PrimaryExpression	0		1802256	1					
ANR	1802693	Condition	i < 768	121:32:2449:2455	1802256	1	True				
ANR	1802694	RelationalExpression	i < 768		1802256	0		<			
ANR	1802695	Identifier	i		1802256	0					
ANR	1802696	PrimaryExpression	768		1802256	1					
ANR	1802697	PostIncDecOperationExpression	i ++	121:41:2458:2460	1802256	2	True				
ANR	1802698	Identifier	i		1802256	0					
ANR	1802699	IncDec	++		1802256	1					
ANR	1802700	ExpressionStatement	ctx -> delta_pal [ i ] = bytestream2_get_le16u ( & ctx -> gb )	123:24:2488:2539	1802256	3	True				
ANR	1802701	AssignmentExpression	ctx -> delta_pal [ i ] = bytestream2_get_le16u ( & ctx -> gb )		1802256	0		=			
ANR	1802702	ArrayIndexing	ctx -> delta_pal [ i ]		1802256	0					
ANR	1802703	PtrMemberAccess	ctx -> delta_pal		1802256	0					
ANR	1802704	Identifier	ctx		1802256	0					
ANR	1802705	Identifier	delta_pal		1802256	1					
ANR	1802706	Identifier	i		1802256	1					
ANR	1802707	CallExpression	bytestream2_get_le16u ( & ctx -> gb )		1802256	1					
ANR	1802708	Callee	bytestream2_get_le16u		1802256	0					
ANR	1802709	Identifier	bytestream2_get_le16u		1802256	0					
ANR	1802710	ArgumentList	& ctx -> gb		1802256	1					
ANR	1802711	Argument	& ctx -> gb		1802256	0					
ANR	1802712	UnaryOperationExpression	& ctx -> gb		1802256	0					
ANR	1802713	UnaryOperator	&		1802256	0					
ANR	1802714	PtrMemberAccess	ctx -> gb		1802256	1					
ANR	1802715	Identifier	ctx		1802256	0					
ANR	1802716	Identifier	gb		1802256	1					
ANR	1802717	IfStatement	if ( size >= 768 * 5 + 4 )		1802256	3					
ANR	1802718	Condition	size >= 768 * 5 + 4	125:24:2566:2584	1802256	0	True				
ANR	1802719	RelationalExpression	size >= 768 * 5 + 4		1802256	0		>=			
ANR	1802720	Identifier	size		1802256	0					
ANR	1802721	AdditiveExpression	768 * 5 + 4		1802256	1		+			
ANR	1802722	MultiplicativeExpression	768 * 5		1802256	0		*			
ANR	1802723	PrimaryExpression	768		1802256	0					
ANR	1802724	PrimaryExpression	5		1802256	1					
ANR	1802725	PrimaryExpression	4		1802256	1					
ANR	1802726	CompoundStatement		121:45:2466:2466	1802256	1					
ANR	1802727	ForStatement	for ( i = 0 ; i < 256 ; i ++ )		1802256	0					
ANR	1802728	ForInit	i = 0 ;	127:29:2619:2624	1802256	0	True				
ANR	1802729	AssignmentExpression	i = 0		1802256	0		=			
ANR	1802730	Identifier	i		1802256	0					
ANR	1802731	PrimaryExpression	0		1802256	1					
ANR	1802732	Condition	i < 256	127:36:2626:2632	1802256	1	True				
ANR	1802733	RelationalExpression	i < 256		1802256	0		<			
ANR	1802734	Identifier	i		1802256	0					
ANR	1802735	PrimaryExpression	256		1802256	1					
ANR	1802736	PostIncDecOperationExpression	i ++	127:45:2635:2637	1802256	2	True				
ANR	1802737	Identifier	i		1802256	0					
ANR	1802738	IncDec	++		1802256	1					
ANR	1802739	ExpressionStatement	ctx -> pal [ i ] = 0xFF << 24 | bytestream2_get_be24u ( & ctx -> gb )	129:28:2669:2727	1802256	3	True				
ANR	1802740	AssignmentExpression	ctx -> pal [ i ] = 0xFF << 24 | bytestream2_get_be24u ( & ctx -> gb )		1802256	0		=			
ANR	1802741	ArrayIndexing	ctx -> pal [ i ]		1802256	0					
ANR	1802742	PtrMemberAccess	ctx -> pal		1802256	0					
ANR	1802743	Identifier	ctx		1802256	0					
ANR	1802744	Identifier	pal		1802256	1					
ANR	1802745	Identifier	i		1802256	1					
ANR	1802746	InclusiveOrExpression	0xFF << 24 | bytestream2_get_be24u ( & ctx -> gb )		1802256	1		|			
ANR	1802747	ShiftExpression	0xFF << 24		1802256	0		<<			
ANR	1802748	PrimaryExpression	0xFF		1802256	0					
ANR	1802749	PrimaryExpression	24		1802256	1					
ANR	1802750	CallExpression	bytestream2_get_be24u ( & ctx -> gb )		1802256	1					
ANR	1802751	Callee	bytestream2_get_be24u		1802256	0					
ANR	1802752	Identifier	bytestream2_get_be24u		1802256	0					
ANR	1802753	ArgumentList	& ctx -> gb		1802256	1					
ANR	1802754	Argument	& ctx -> gb		1802256	0					
ANR	1802755	UnaryOperationExpression	& ctx -> gb		1802256	0					
ANR	1802756	UnaryOperator	&		1802256	0					
ANR	1802757	PtrMemberAccess	ctx -> gb		1802256	1					
ANR	1802758	Identifier	ctx		1802256	0					
ANR	1802759	Identifier	gb		1802256	1					
ANR	1802760	ElseStatement	else		1802256	0					
ANR	1802761	CompoundStatement		127:27:2636:2636	1802256	0					
ANR	1802762	ExpressionStatement	"memset ( ctx -> pal , 0 , sizeof ( ctx -> pal ) )"	133:24:2784:2821	1802256	0	True				
ANR	1802763	CallExpression	"memset ( ctx -> pal , 0 , sizeof ( ctx -> pal ) )"		1802256	0					
ANR	1802764	Callee	memset		1802256	0					
ANR	1802765	Identifier	memset		1802256	0					
ANR	1802766	ArgumentList	ctx -> pal		1802256	1					
ANR	1802767	Argument	ctx -> pal		1802256	0					
ANR	1802768	PtrMemberAccess	ctx -> pal		1802256	0					
ANR	1802769	Identifier	ctx		1802256	0					
ANR	1802770	Identifier	pal		1802256	1					
ANR	1802771	Argument	0		1802256	1					
ANR	1802772	PrimaryExpression	0		1802256	0					
ANR	1802773	Argument	sizeof ( ctx -> pal )		1802256	2					
ANR	1802774	SizeofExpression	sizeof ( ctx -> pal )		1802256	0					
ANR	1802775	Sizeof	sizeof		1802256	0					
ANR	1802776	PtrMemberAccess	ctx -> pal		1802256	1					
ANR	1802777	Identifier	ctx		1802256	0					
ANR	1802778	Identifier	pal		1802256	1					
ANR	1802779	BreakStatement	break ;	139:16:2882:2887	1802256	43	True				
ANR	1802780	Statement	case	141:12:2902:2905	1802256	44	True				
ANR	1802781	Statement	MKBETAG	141:17:2907:2913	1802256	45	True				
ANR	1802782	Statement	(	141:24:2914:2914	1802256	46	True				
ANR	1802783	Statement	'S'	141:25:2915:2917	1802256	47	True				
ANR	1802784	Statement	","	141:28:2918:2918	1802256	48	True				
ANR	1802785	Statement	'T'	141:30:2920:2922	1802256	49	True				
ANR	1802786	Statement	","	141:33:2923:2923	1802256	50	True				
ANR	1802787	Statement	'O'	141:35:2925:2927	1802256	51	True				
ANR	1802788	Statement	","	141:38:2928:2928	1802256	52	True				
ANR	1802789	Statement	'R'	141:40:2930:2932	1802256	53	True				
ANR	1802790	Statement	)	141:43:2933:2933	1802256	54	True				
ANR	1802791	Statement	:	141:44:2934:2934	1802256	55	True				
ANR	1802792	ExpressionStatement	to_store = 1	143:16:2953:2965	1802256	56	True				
ANR	1802793	AssignmentExpression	to_store = 1		1802256	0		=			
ANR	1802794	Identifier	to_store		1802256	0					
ANR	1802795	PrimaryExpression	1		1802256	1					
ANR	1802796	BreakStatement	break ;	145:16:2984:2989	1802256	57	True				
ANR	1802797	Statement	case	147:12:3004:3007	1802256	58	True				
ANR	1802798	Statement	MKBETAG	147:17:3009:3015	1802256	59	True				
ANR	1802799	Statement	(	147:24:3016:3016	1802256	60	True				
ANR	1802800	Statement	'F'	147:25:3017:3019	1802256	61	True				
ANR	1802801	Statement	","	147:28:3020:3020	1802256	62	True				
ANR	1802802	Statement	'T'	147:30:3022:3024	1802256	63	True				
ANR	1802803	Statement	","	147:33:3025:3025	1802256	64	True				
ANR	1802804	Statement	'C'	147:35:3027:3029	1802256	65	True				
ANR	1802805	Statement	","	147:38:3030:3030	1802256	66	True				
ANR	1802806	Statement	'H'	147:40:3032:3034	1802256	67	True				
ANR	1802807	Statement	)	147:43:3035:3035	1802256	68	True				
ANR	1802808	Statement	:	147:44:3036:3036	1802256	69	True				
ANR	1802809	ExpressionStatement	"memcpy ( ctx -> frm0 , ctx -> stored_frame , ctx -> buf_size )"	149:16:3055:3106	1802256	70	True				
ANR	1802810	CallExpression	"memcpy ( ctx -> frm0 , ctx -> stored_frame , ctx -> buf_size )"		1802256	0					
ANR	1802811	Callee	memcpy		1802256	0					
ANR	1802812	Identifier	memcpy		1802256	0					
ANR	1802813	ArgumentList	ctx -> frm0		1802256	1					
ANR	1802814	Argument	ctx -> frm0		1802256	0					
ANR	1802815	PtrMemberAccess	ctx -> frm0		1802256	0					
ANR	1802816	Identifier	ctx		1802256	0					
ANR	1802817	Identifier	frm0		1802256	1					
ANR	1802818	Argument	ctx -> stored_frame		1802256	1					
ANR	1802819	PtrMemberAccess	ctx -> stored_frame		1802256	0					
ANR	1802820	Identifier	ctx		1802256	0					
ANR	1802821	Identifier	stored_frame		1802256	1					
ANR	1802822	Argument	ctx -> buf_size		1802256	2					
ANR	1802823	PtrMemberAccess	ctx -> buf_size		1802256	0					
ANR	1802824	Identifier	ctx		1802256	0					
ANR	1802825	Identifier	buf_size		1802256	1					
ANR	1802826	BreakStatement	break ;	151:16:3125:3130	1802256	71	True				
ANR	1802827	Label	default :	153:12:3145:3152	1802256	72	True				
ANR	1802828	Identifier	default		1802256	0					
ANR	1802829	ExpressionStatement	"bytestream2_skip ( & ctx -> gb , size )"	155:16:3171:3203	1802256	73	True				
ANR	1802830	CallExpression	"bytestream2_skip ( & ctx -> gb , size )"		1802256	0					
ANR	1802831	Callee	bytestream2_skip		1802256	0					
ANR	1802832	Identifier	bytestream2_skip		1802256	0					
ANR	1802833	ArgumentList	& ctx -> gb		1802256	1					
ANR	1802834	Argument	& ctx -> gb		1802256	0					
ANR	1802835	UnaryOperationExpression	& ctx -> gb		1802256	0					
ANR	1802836	UnaryOperator	&		1802256	0					
ANR	1802837	PtrMemberAccess	ctx -> gb		1802256	1					
ANR	1802838	Identifier	ctx		1802256	0					
ANR	1802839	Identifier	gb		1802256	1					
ANR	1802840	Argument	size		1802256	1					
ANR	1802841	Identifier	size		1802256	0					
ANR	1802842	ExpressionStatement	"av_log ( avctx , AV_LOG_DEBUG , ""unknown/unsupported chunk %x\\n"" , sig )"	157:16:3222:3288	1802256	74	True				
ANR	1802843	CallExpression	"av_log ( avctx , AV_LOG_DEBUG , ""unknown/unsupported chunk %x\\n"" , sig )"		1802256	0					
ANR	1802844	Callee	av_log		1802256	0					
ANR	1802845	Identifier	av_log		1802256	0					
ANR	1802846	ArgumentList	avctx		1802256	1					
ANR	1802847	Argument	avctx		1802256	0					
ANR	1802848	Identifier	avctx		1802256	0					
ANR	1802849	Argument	AV_LOG_DEBUG		1802256	1					
ANR	1802850	Identifier	AV_LOG_DEBUG		1802256	0					
ANR	1802851	Argument	"""unknown/unsupported chunk %x\\n"""		1802256	2					
ANR	1802852	PrimaryExpression	"""unknown/unsupported chunk %x\\n"""		1802256	0					
ANR	1802853	Argument	sig		1802256	3					
ANR	1802854	Identifier	sig		1802256	0					
ANR	1802855	BreakStatement	break ;	159:16:3307:3312	1802256	75	True				
ANR	1802856	ExpressionStatement	"bytestream2_seek ( & ctx -> gb , pos + size , SEEK_SET )"	165:12:3344:3392	1802256	7	True				
ANR	1802857	CallExpression	"bytestream2_seek ( & ctx -> gb , pos + size , SEEK_SET )"		1802256	0					
ANR	1802858	Callee	bytestream2_seek		1802256	0					
ANR	1802859	Identifier	bytestream2_seek		1802256	0					
ANR	1802860	ArgumentList	& ctx -> gb		1802256	1					
ANR	1802861	Argument	& ctx -> gb		1802256	0					
ANR	1802862	UnaryOperationExpression	& ctx -> gb		1802256	0					
ANR	1802863	UnaryOperator	&		1802256	0					
ANR	1802864	PtrMemberAccess	ctx -> gb		1802256	1					
ANR	1802865	Identifier	ctx		1802256	0					
ANR	1802866	Identifier	gb		1802256	1					
ANR	1802867	Argument	pos + size		1802256	1					
ANR	1802868	AdditiveExpression	pos + size		1802256	0		+			
ANR	1802869	Identifier	pos		1802256	0					
ANR	1802870	Identifier	size		1802256	1					
ANR	1802871	Argument	SEEK_SET		1802256	2					
ANR	1802872	Identifier	SEEK_SET		1802256	0					
ANR	1802873	IfStatement	if ( size & 1 )		1802256	8					
ANR	1802874	Condition	size & 1	167:16:3411:3418	1802256	0	True				
ANR	1802875	BitAndExpression	size & 1		1802256	0		&			
ANR	1802876	Identifier	size		1802256	0					
ANR	1802877	PrimaryExpression	1		1802256	1					
ANR	1802878	ExpressionStatement	"bytestream2_skip ( & ctx -> gb , 1 )"	169:16:3438:3467	1802256	1	True				
ANR	1802879	CallExpression	"bytestream2_skip ( & ctx -> gb , 1 )"		1802256	0					
ANR	1802880	Callee	bytestream2_skip		1802256	0					
ANR	1802881	Identifier	bytestream2_skip		1802256	0					
ANR	1802882	ArgumentList	& ctx -> gb		1802256	1					
ANR	1802883	Argument	& ctx -> gb		1802256	0					
ANR	1802884	UnaryOperationExpression	& ctx -> gb		1802256	0					
ANR	1802885	UnaryOperator	&		1802256	0					
ANR	1802886	PtrMemberAccess	ctx -> gb		1802256	1					
ANR	1802887	Identifier	ctx		1802256	0					
ANR	1802888	Identifier	gb		1802256	1					
ANR	1802889	Argument	1		1802256	1					
ANR	1802890	PrimaryExpression	1		1802256	0					
ANR	1802891	IfStatement	if ( to_store )		1802256	2					
ANR	1802892	Condition	to_store	173:12:3493:3500	1802256	0	True				
ANR	1802893	Identifier	to_store		1802256	0					
ANR	1802894	ExpressionStatement	"memcpy ( ctx -> stored_frame , ctx -> frm0 , ctx -> buf_size )"	175:12:3516:3567	1802256	1	True				
ANR	1802895	CallExpression	"memcpy ( ctx -> stored_frame , ctx -> frm0 , ctx -> buf_size )"		1802256	0					
ANR	1802896	Callee	memcpy		1802256	0					
ANR	1802897	Identifier	memcpy		1802256	0					
ANR	1802898	ArgumentList	ctx -> stored_frame		1802256	1					
ANR	1802899	Argument	ctx -> stored_frame		1802256	0					
ANR	1802900	PtrMemberAccess	ctx -> stored_frame		1802256	0					
ANR	1802901	Identifier	ctx		1802256	0					
ANR	1802902	Identifier	stored_frame		1802256	1					
ANR	1802903	Argument	ctx -> frm0		1802256	1					
ANR	1802904	PtrMemberAccess	ctx -> frm0		1802256	0					
ANR	1802905	Identifier	ctx		1802256	0					
ANR	1802906	Identifier	frm0		1802256	1					
ANR	1802907	Argument	ctx -> buf_size		1802256	2					
ANR	1802908	PtrMemberAccess	ctx -> buf_size		1802256	0					
ANR	1802909	Identifier	ctx		1802256	0					
ANR	1802910	Identifier	buf_size		1802256	1					
ANR	1802911	IfStatement	"if ( ( ret = copy_output ( ctx , NULL ) ) )"		1802256	3					
ANR	1802912	Condition	"ret = copy_output ( ctx , NULL )"	177:12:3582:3611	1802256	0	True				
ANR	1802913	AssignmentExpression	"ret = copy_output ( ctx , NULL )"		1802256	0		=			
ANR	1802914	Identifier	ret		1802256	0					
ANR	1802915	CallExpression	"copy_output ( ctx , NULL )"		1802256	1					
ANR	1802916	Callee	copy_output		1802256	0					
ANR	1802917	Identifier	copy_output		1802256	0					
ANR	1802918	ArgumentList	ctx		1802256	1					
ANR	1802919	Argument	ctx		1802256	0					
ANR	1802920	Identifier	ctx		1802256	0					
ANR	1802921	Argument	NULL		1802256	1					
ANR	1802922	Identifier	NULL		1802256	0					
ANR	1802923	ReturnStatement	return ret ;	179:12:3627:3637	1802256	1	True				
ANR	1802924	Identifier	ret		1802256	0					
ANR	1802925	ExpressionStatement	"memcpy ( ctx -> output -> data [ 1 ] , ctx -> pal , 1024 )"	181:8:3648:3692	1802256	4	True				
ANR	1802926	CallExpression	"memcpy ( ctx -> output -> data [ 1 ] , ctx -> pal , 1024 )"		1802256	0					
ANR	1802927	Callee	memcpy		1802256	0					
ANR	1802928	Identifier	memcpy		1802256	0					
ANR	1802929	ArgumentList	ctx -> output -> data [ 1 ]		1802256	1					
ANR	1802930	Argument	ctx -> output -> data [ 1 ]		1802256	0					
ANR	1802931	ArrayIndexing	ctx -> output -> data [ 1 ]		1802256	0					
ANR	1802932	PtrMemberAccess	ctx -> output -> data		1802256	0					
ANR	1802933	PtrMemberAccess	ctx -> output		1802256	0					
ANR	1802934	Identifier	ctx		1802256	0					
ANR	1802935	Identifier	output		1802256	1					
ANR	1802936	Identifier	data		1802256	1					
ANR	1802937	PrimaryExpression	1		1802256	1					
ANR	1802938	Argument	ctx -> pal		1802256	1					
ANR	1802939	PtrMemberAccess	ctx -> pal		1802256	0					
ANR	1802940	Identifier	ctx		1802256	0					
ANR	1802941	Identifier	pal		1802256	1					
ANR	1802942	Argument	1024		1802256	2					
ANR	1802943	PrimaryExpression	1024		1802256	0					
ANR	1802944	ElseStatement	else		1802256	0					
ANR	1802945	CompoundStatement		181:8:3596:3618	1802256	0					
ANR	1802946	IdentifierDeclStatement	SANMFrameHeader header ;	185:8:3717:3739	1802256	0	True				
ANR	1802947	IdentifierDecl	header		1802256	0					
ANR	1802948	IdentifierDeclType	SANMFrameHeader		1802256	0					
ANR	1802949	Identifier	header		1802256	1					
ANR	1802950	IfStatement	"if ( ( ret = read_frame_header ( ctx , & header ) ) )"		1802256	1					
ANR	1802951	Condition	"ret = read_frame_header ( ctx , & header )"	189:12:3756:3794	1802256	0	True				
ANR	1802952	AssignmentExpression	"ret = read_frame_header ( ctx , & header )"		1802256	0		=			
ANR	1802953	Identifier	ret		1802256	0					
ANR	1802954	CallExpression	"read_frame_header ( ctx , & header )"		1802256	1					
ANR	1802955	Callee	read_frame_header		1802256	0					
ANR	1802956	Identifier	read_frame_header		1802256	0					
ANR	1802957	ArgumentList	ctx		1802256	1					
ANR	1802958	Argument	ctx		1802256	0					
ANR	1802959	Identifier	ctx		1802256	0					
ANR	1802960	Argument	& header		1802256	1					
ANR	1802961	UnaryOperationExpression	& header		1802256	0					
ANR	1802962	UnaryOperator	&		1802256	0					
ANR	1802963	Identifier	header		1802256	1					
ANR	1802964	ReturnStatement	return ret ;	191:12:3810:3820	1802256	1	True				
ANR	1802965	Identifier	ret		1802256	0					
ANR	1802966	ExpressionStatement	ctx -> rotate_code = header . rotate_code	195:8:3833:3870	1802256	2	True				
ANR	1802967	AssignmentExpression	ctx -> rotate_code = header . rotate_code		1802256	0		=			
ANR	1802968	PtrMemberAccess	ctx -> rotate_code		1802256	0					
ANR	1802969	Identifier	ctx		1802256	0					
ANR	1802970	Identifier	rotate_code		1802256	1					
ANR	1802971	MemberAccess	header . rotate_code		1802256	1					
ANR	1802972	Identifier	header		1802256	0					
ANR	1802973	Identifier	rotate_code		1802256	1					
ANR	1802974	IfStatement	if ( ( ctx -> output -> key_frame = ! header . seq_num ) )		1802256	3					
ANR	1802975	Condition	ctx -> output -> key_frame = ! header . seq_num	197:12:3885:3926	1802256	0	True				
ANR	1802976	AssignmentExpression	ctx -> output -> key_frame = ! header . seq_num		1802256	0		=			
ANR	1802977	PtrMemberAccess	ctx -> output -> key_frame		1802256	0					
ANR	1802978	PtrMemberAccess	ctx -> output		1802256	0					
ANR	1802979	Identifier	ctx		1802256	0					
ANR	1802980	Identifier	output		1802256	1					
ANR	1802981	Identifier	key_frame		1802256	1					
ANR	1802982	UnaryOperationExpression	! header . seq_num		1802256	1					
ANR	1802983	UnaryOperator	!		1802256	0					
ANR	1802984	MemberAccess	header . seq_num		1802256	1					
ANR	1802985	Identifier	header		1802256	0					
ANR	1802986	Identifier	seq_num		1802256	1					
ANR	1802987	CompoundStatement		193:56:3808:3808	1802256	1					
ANR	1802988	ExpressionStatement	ctx -> output -> pict_type = AV_PICTURE_TYPE_I	199:12:3944:3986	1802256	0	True				
ANR	1802989	AssignmentExpression	ctx -> output -> pict_type = AV_PICTURE_TYPE_I		1802256	0		=			
ANR	1802990	PtrMemberAccess	ctx -> output -> pict_type		1802256	0					
ANR	1802991	PtrMemberAccess	ctx -> output		1802256	0					
ANR	1802992	Identifier	ctx		1802256	0					
ANR	1802993	Identifier	output		1802256	1					
ANR	1802994	Identifier	pict_type		1802256	1					
ANR	1802995	Identifier	AV_PICTURE_TYPE_I		1802256	1					
ANR	1802996	ExpressionStatement	"fill_frame ( ctx -> frm1 , ctx -> npixels , header . bg_color )"	201:12:4001:4053	1802256	1	True				
ANR	1802997	CallExpression	"fill_frame ( ctx -> frm1 , ctx -> npixels , header . bg_color )"		1802256	0					
ANR	1802998	Callee	fill_frame		1802256	0					
ANR	1802999	Identifier	fill_frame		1802256	0					
ANR	1803000	ArgumentList	ctx -> frm1		1802256	1					
ANR	1803001	Argument	ctx -> frm1		1802256	0					
ANR	1803002	PtrMemberAccess	ctx -> frm1		1802256	0					
ANR	1803003	Identifier	ctx		1802256	0					
ANR	1803004	Identifier	frm1		1802256	1					
ANR	1803005	Argument	ctx -> npixels		1802256	1					
ANR	1803006	PtrMemberAccess	ctx -> npixels		1802256	0					
ANR	1803007	Identifier	ctx		1802256	0					
ANR	1803008	Identifier	npixels		1802256	1					
ANR	1803009	Argument	header . bg_color		1802256	2					
ANR	1803010	MemberAccess	header . bg_color		1802256	0					
ANR	1803011	Identifier	header		1802256	0					
ANR	1803012	Identifier	bg_color		1802256	1					
ANR	1803013	ExpressionStatement	"fill_frame ( ctx -> frm2 , ctx -> npixels , header . bg_color )"	203:12:4068:4120	1802256	2	True				
ANR	1803014	CallExpression	"fill_frame ( ctx -> frm2 , ctx -> npixels , header . bg_color )"		1802256	0					
ANR	1803015	Callee	fill_frame		1802256	0					
ANR	1803016	Identifier	fill_frame		1802256	0					
ANR	1803017	ArgumentList	ctx -> frm2		1802256	1					
ANR	1803018	Argument	ctx -> frm2		1802256	0					
ANR	1803019	PtrMemberAccess	ctx -> frm2		1802256	0					
ANR	1803020	Identifier	ctx		1802256	0					
ANR	1803021	Identifier	frm2		1802256	1					
ANR	1803022	Argument	ctx -> npixels		1802256	1					
ANR	1803023	PtrMemberAccess	ctx -> npixels		1802256	0					
ANR	1803024	Identifier	ctx		1802256	0					
ANR	1803025	Identifier	npixels		1802256	1					
ANR	1803026	Argument	header . bg_color		1802256	2					
ANR	1803027	MemberAccess	header . bg_color		1802256	0					
ANR	1803028	Identifier	header		1802256	0					
ANR	1803029	Identifier	bg_color		1802256	1					
ANR	1803030	ElseStatement	else		1802256	0					
ANR	1803031	CompoundStatement		201:15:4017:4017	1802256	0					
ANR	1803032	ExpressionStatement	ctx -> output -> pict_type = AV_PICTURE_TYPE_P	207:12:4153:4195	1802256	0	True				
ANR	1803033	AssignmentExpression	ctx -> output -> pict_type = AV_PICTURE_TYPE_P		1802256	0		=			
ANR	1803034	PtrMemberAccess	ctx -> output -> pict_type		1802256	0					
ANR	1803035	PtrMemberAccess	ctx -> output		1802256	0					
ANR	1803036	Identifier	ctx		1802256	0					
ANR	1803037	Identifier	output		1802256	1					
ANR	1803038	Identifier	pict_type		1802256	1					
ANR	1803039	Identifier	AV_PICTURE_TYPE_P		1802256	1					
ANR	1803040	IfStatement	if ( header . codec < FF_ARRAY_ELEMS ( v1_decoders ) )		1802256	4					
ANR	1803041	Condition	header . codec < FF_ARRAY_ELEMS ( v1_decoders )	213:12:4223:4264	1802256	0	True				
ANR	1803042	RelationalExpression	header . codec < FF_ARRAY_ELEMS ( v1_decoders )		1802256	0		<			
ANR	1803043	MemberAccess	header . codec		1802256	0					
ANR	1803044	Identifier	header		1802256	0					
ANR	1803045	Identifier	codec		1802256	1					
ANR	1803046	CallExpression	FF_ARRAY_ELEMS ( v1_decoders )		1802256	1					
ANR	1803047	Callee	FF_ARRAY_ELEMS		1802256	0					
ANR	1803048	Identifier	FF_ARRAY_ELEMS		1802256	0					
ANR	1803049	ArgumentList	v1_decoders		1802256	1					
ANR	1803050	Argument	v1_decoders		1802256	0					
ANR	1803051	Identifier	v1_decoders		1802256	0					
ANR	1803052	CompoundStatement		209:56:4146:4146	1802256	1					
ANR	1803053	IfStatement	if ( ( ret = v1_decoders [ header . codec ] ( ctx ) ) )		1802256	0					
ANR	1803054	Condition	ret = v1_decoders [ header . codec ] ( ctx )	215:16:4286:4323	1802256	0	True				
ANR	1803055	AssignmentExpression	ret = v1_decoders [ header . codec ] ( ctx )		1802256	0		=			
ANR	1803056	Identifier	ret		1802256	0					
ANR	1803057	CallExpression	v1_decoders [ header . codec ] ( ctx )		1802256	1					
ANR	1803058	Callee	v1_decoders [ header . codec ]		1802256	0					
ANR	1803059	ArrayIndexing	v1_decoders [ header . codec ]		1802256	0					
ANR	1803060	Identifier	v1_decoders		1802256	0					
ANR	1803061	MemberAccess	header . codec		1802256	1					
ANR	1803062	Identifier	header		1802256	0					
ANR	1803063	Identifier	codec		1802256	1					
ANR	1803064	ArgumentList	ctx		1802256	1					
ANR	1803065	Argument	ctx		1802256	0					
ANR	1803066	Identifier	ctx		1802256	0					
ANR	1803067	CompoundStatement		211:56:4205:4205	1802256	1					
ANR	1803068	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""subcodec %d: error decoding frame\\n"" , header . codec )"	217:16:4345:4449	1802256	0	True				
ANR	1803069	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""subcodec %d: error decoding frame\\n"" , header . codec )"		1802256	0					
ANR	1803070	Callee	av_log		1802256	0					
ANR	1803071	Identifier	av_log		1802256	0					
ANR	1803072	ArgumentList	avctx		1802256	1					
ANR	1803073	Argument	avctx		1802256	0					
ANR	1803074	Identifier	avctx		1802256	0					
ANR	1803075	Argument	AV_LOG_ERROR		1802256	1					
ANR	1803076	Identifier	AV_LOG_ERROR		1802256	0					
ANR	1803077	Argument	"""subcodec %d: error decoding frame\\n"""		1802256	2					
ANR	1803078	PrimaryExpression	"""subcodec %d: error decoding frame\\n"""		1802256	0					
ANR	1803079	Argument	header . codec		1802256	3					
ANR	1803080	MemberAccess	header . codec		1802256	0					
ANR	1803081	Identifier	header		1802256	0					
ANR	1803082	Identifier	codec		1802256	1					
ANR	1803083	ReturnStatement	return ret ;	221:16:4468:4478	1802256	1	True				
ANR	1803084	Identifier	ret		1802256	0					
ANR	1803085	ElseStatement	else		1802256	0					
ANR	1803086	CompoundStatement		221:15:4390:4390	1802256	0					
ANR	1803087	ExpressionStatement	"av_log_ask_for_sample ( avctx , ""subcodec %d is not implemented\\n"" , header . codec )"	227:12:4526:4624	1802256	0	True				
ANR	1803088	CallExpression	"av_log_ask_for_sample ( avctx , ""subcodec %d is not implemented\\n"" , header . codec )"		1802256	0					
ANR	1803089	Callee	av_log_ask_for_sample		1802256	0					
ANR	1803090	Identifier	av_log_ask_for_sample		1802256	0					
ANR	1803091	ArgumentList	avctx		1802256	1					
ANR	1803092	Argument	avctx		1802256	0					
ANR	1803093	Identifier	avctx		1802256	0					
ANR	1803094	Argument	"""subcodec %d is not implemented\\n"""		1802256	1					
ANR	1803095	PrimaryExpression	"""subcodec %d is not implemented\\n"""		1802256	0					
ANR	1803096	Argument	header . codec		1802256	2					
ANR	1803097	MemberAccess	header . codec		1802256	0					
ANR	1803098	Identifier	header		1802256	0					
ANR	1803099	Identifier	codec		1802256	1					
ANR	1803100	ReturnStatement	return AVERROR_PATCHWELCOME ;	231:12:4639:4666	1802256	1	True				
ANR	1803101	Identifier	AVERROR_PATCHWELCOME		1802256	0					
ANR	1803102	IfStatement	"if ( ( ret = copy_output ( ctx , & header ) ) )"		1802256	5					
ANR	1803103	Condition	"ret = copy_output ( ctx , & header )"	237:12:4694:4726	1802256	0	True				
ANR	1803104	AssignmentExpression	"ret = copy_output ( ctx , & header )"		1802256	0		=			
ANR	1803105	Identifier	ret		1802256	0					
ANR	1803106	CallExpression	"copy_output ( ctx , & header )"		1802256	1					
ANR	1803107	Callee	copy_output		1802256	0					
ANR	1803108	Identifier	copy_output		1802256	0					
ANR	1803109	ArgumentList	ctx		1802256	1					
ANR	1803110	Argument	ctx		1802256	0					
ANR	1803111	Identifier	ctx		1802256	0					
ANR	1803112	Argument	& header		1802256	1					
ANR	1803113	UnaryOperationExpression	& header		1802256	0					
ANR	1803114	UnaryOperator	&		1802256	0					
ANR	1803115	Identifier	header		1802256	1					
ANR	1803116	ReturnStatement	return ret ;	239:12:4742:4752	1802256	1	True				
ANR	1803117	Identifier	ret		1802256	0					
ANR	1803118	IfStatement	if ( ctx -> rotate_code )		1802256	5					
ANR	1803119	Condition	ctx -> rotate_code	243:8:4770:4785	1802256	0	True				
ANR	1803120	PtrMemberAccess	ctx -> rotate_code		1802256	0					
ANR	1803121	Identifier	ctx		1802256	0					
ANR	1803122	Identifier	rotate_code		1802256	1					
ANR	1803123	ExpressionStatement	"rotate_bufs ( ctx , ctx -> rotate_code )"	245:8:4797:4831	1802256	1	True				
ANR	1803124	CallExpression	"rotate_bufs ( ctx , ctx -> rotate_code )"		1802256	0					
ANR	1803125	Callee	rotate_bufs		1802256	0					
ANR	1803126	Identifier	rotate_bufs		1802256	0					
ANR	1803127	ArgumentList	ctx		1802256	1					
ANR	1803128	Argument	ctx		1802256	0					
ANR	1803129	Identifier	ctx		1802256	0					
ANR	1803130	Argument	ctx -> rotate_code		1802256	1					
ANR	1803131	PtrMemberAccess	ctx -> rotate_code		1802256	0					
ANR	1803132	Identifier	ctx		1802256	0					
ANR	1803133	Identifier	rotate_code		1802256	1					
ANR	1803134	ExpressionStatement	* got_frame_ptr = 1	249:4:4840:4859	1802256	6	True				
ANR	1803135	AssignmentExpression	* got_frame_ptr = 1		1802256	0		=			
ANR	1803136	UnaryOperationExpression	* got_frame_ptr		1802256	0					
ANR	1803137	UnaryOperator	*		1802256	0					
ANR	1803138	Identifier	got_frame_ptr		1802256	1					
ANR	1803139	PrimaryExpression	1		1802256	1					
ANR	1803140	ExpressionStatement	* ( AVFrame * ) data = * ctx -> output	251:4:4866:4896	1802256	7	True				
ANR	1803141	AssignmentExpression	* ( AVFrame * ) data = * ctx -> output		1802256	0		=			
ANR	1803142	UnaryOperationExpression	* ( AVFrame * ) data		1802256	0					
ANR	1803143	UnaryOperator	*		1802256	0					
ANR	1803144	CastExpression	( AVFrame * ) data		1802256	1					
ANR	1803145	CastTarget	AVFrame *		1802256	0					
ANR	1803146	Identifier	data		1802256	1					
ANR	1803147	UnaryOperationExpression	* ctx -> output		1802256	1					
ANR	1803148	UnaryOperator	*		1802256	0					
ANR	1803149	PtrMemberAccess	ctx -> output		1802256	1					
ANR	1803150	Identifier	ctx		1802256	0					
ANR	1803151	Identifier	output		1802256	1					
ANR	1803152	ReturnStatement	return pkt -> size ;	255:4:4905:4921	1802256	8	True				
ANR	1803153	PtrMemberAccess	pkt -> size		1802256	0					
ANR	1803154	Identifier	pkt		1802256	0					
ANR	1803155	Identifier	size		1802256	1					
ANR	1803156	ReturnType	static int		1802256	1					
ANR	1803157	Identifier	decode_frame		1802256	2					
ANR	1803158	ParameterList	"AVCodecContext * avctx , void * data , int * got_frame_ptr , AVPacket * pkt"		1802256	3					
ANR	1803159	Parameter	AVCodecContext * avctx	1:24:24:44	1802256	0	True				
ANR	1803160	ParameterType	AVCodecContext *		1802256	0					
ANR	1803161	Identifier	avctx		1802256	1					
ANR	1803162	Parameter	void * data	1:47:47:56	1802256	1	True				
ANR	1803163	ParameterType	void *		1802256	0					
ANR	1803164	Identifier	data		1802256	1					
ANR	1803165	Parameter	int * got_frame_ptr	3:24:84:101	1802256	2	True				
ANR	1803166	ParameterType	int *		1802256	0					
ANR	1803167	Identifier	got_frame_ptr		1802256	1					
ANR	1803168	Parameter	AVPacket * pkt	3:44:104:116	1802256	3	True				
ANR	1803169	ParameterType	AVPacket *		1802256	0					
ANR	1803170	Identifier	pkt		1802256	1					
ANR	1803171	CFGEntryNode	ENTRY		1802256		True				
ANR	1803172	CFGExitNode	EXIT		1802256		True				
ANR	1803173	Symbol	read_frame_header		1802256						
ANR	1803174	Symbol	* pkt		1802256						
ANR	1803175	Symbol	data		1802256						
ANR	1803176	Symbol	got_frame_ptr		1802256						
ANR	1803177	Symbol	* ctx -> output		1802256						
ANR	1803178	Symbol	ctx -> output -> data		1802256						
ANR	1803179	Symbol	ctx -> buf_size		1802256						
ANR	1803180	Symbol	ctx -> version		1802256						
ANR	1803181	Symbol	tmp		1802256						
ANR	1803182	Symbol	v1_decoders		1802256						
ANR	1803183	Symbol	AV_LOG_DEBUG		1802256						
ANR	1803184	Symbol	to_store		1802256						
ANR	1803185	Symbol	ctx -> delta_pal		1802256						
ANR	1803186	Symbol	ctx -> stored_frame		1802256						
ANR	1803187	Symbol	header . bg_color		1802256						
ANR	1803188	Symbol	ret		1802256						
ANR	1803189	Symbol	copy_output		1802256						
ANR	1803190	Symbol	header . seq_num		1802256						
ANR	1803191	Symbol	NULL		1802256						
ANR	1803192	Symbol	ctx		1802256						
ANR	1803193	Symbol	AV_RB24		1802256						
ANR	1803194	Symbol	* ctx -> output -> data		1802256						
ANR	1803195	Symbol	* header		1802256						
ANR	1803196	Symbol	& header		1802256						
ANR	1803197	Symbol	* avctx		1802256						
ANR	1803198	Symbol	size		1802256						
ANR	1803199	Symbol	FF_ARRAY_ELEMS		1802256						
ANR	1803200	Symbol	header		1802256						
ANR	1803201	Symbol	header . codec		1802256						
ANR	1803202	Symbol	* ctx -> delta_pal		1802256						
ANR	1803203	Symbol	* tmp		1802256						
ANR	1803204	Symbol	* header . codec		1802256						
ANR	1803205	Symbol	AV_PICTURE_TYPE_P		1802256						
ANR	1803206	Symbol	ctx -> pal		1802256						
ANR	1803207	Symbol	av_clip_uint8		1802256						
ANR	1803208	Symbol	* ctx -> pal		1802256						
ANR	1803209	Symbol	& ctx -> gb		1802256						
ANR	1803210	Symbol	ctx -> rotate_code		1802256						
ANR	1803211	Symbol	ctx -> output -> pict_type		1802256						
ANR	1803212	Symbol	sig		1802256						
ANR	1803213	Symbol	bytestream2_get_be24u		1802256						
ANR	1803214	Symbol	pos		1802256						
ANR	1803215	Symbol	bytestream2_get_le16u		1802256						
ANR	1803216	Symbol	bytestream2_get_be32u		1802256						
ANR	1803217	Symbol	pkt		1802256						
ANR	1803218	Symbol	AVERROR_PATCHWELCOME		1802256						
ANR	1803219	Symbol	bytestream2_tell		1802256						
ANR	1803220	Symbol	AV_PICTURE_TYPE_I		1802256						
ANR	1803221	Symbol	avctx		1802256						
ANR	1803222	Symbol	bytestream2_get_bytes_left		1802256						
ANR	1803223	Symbol	SEEK_SET		1802256						
ANR	1803224	Symbol	header . rotate_code		1802256						
ANR	1803225	Symbol	ctx -> output		1802256						
ANR	1803226	Symbol	* * ctx -> output		1802256						
ANR	1803227	Symbol	AV_LOG_ERROR		1802256						
ANR	1803228	Symbol	* * * ctx		1802256						
ANR	1803229	Symbol	ctx -> output -> key_frame		1802256						
ANR	1803230	Symbol	ctx -> npixels		1802256						
ANR	1803231	Symbol	* got_frame_ptr		1802256						
ANR	1803232	Symbol	i		1802256						
ANR	1803233	Symbol	j		1802256						
ANR	1803234	Symbol	* v1_decoders		1802256						
ANR	1803235	Symbol	avctx -> priv_data		1802256						
ANR	1803236	Symbol	ctx -> frm0		1802256						
ANR	1803237	Symbol	pkt -> data		1802256						
ANR	1803238	Symbol	* ctx		1802256						
ANR	1803239	Symbol	ctx -> frm2		1802256						
ANR	1803240	Symbol	pkt -> size		1802256						
ANR	1803241	Symbol	ctx -> frm1		1802256						
ANR	1803242	Symbol	* i		1802256						
ANR	1803243	Symbol	t		1802256						
ANR	1803244	Symbol	* j		1802256						
ANR	1803245	Symbol	process_frame_obj		1802256						
ANR	1803246	Symbol	AVERROR_INVALIDDATA		1802256						
ANR	1803247	Symbol	* * ctx		1802256						
ANR	1803248	Symbol	* ( AVFrame * ) data		1802256						
ANR	1803249	Symbol	* data		1802256						
