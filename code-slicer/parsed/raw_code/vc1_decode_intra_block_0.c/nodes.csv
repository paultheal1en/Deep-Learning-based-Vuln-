command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8842661	File	/home/p4ultr4n/workplace/ReVeal/raw_code/vc1_decode_intra_block_0.c								
ANR	8842662	Function	vc1_decode_intra_block	1:0:0:6510							
ANR	8842663	FunctionDef	"vc1_decode_intra_block (VC1Context * v , DCTELEM block [ 64 ] , int n , int coded , int mquant , int codingset)"		8842662	0					
ANR	8842664	CompoundStatement		3:0:114:6510	8842662	0					
ANR	8842665	IdentifierDeclStatement	GetBitContext * gb = & v -> s . gb ;	5:4:121:149	8842662	0	True				
ANR	8842666	IdentifierDecl	* gb = & v -> s . gb		8842662	0					
ANR	8842667	IdentifierDeclType	GetBitContext *		8842662	0					
ANR	8842668	Identifier	gb		8842662	1					
ANR	8842669	AssignmentExpression	* gb = & v -> s . gb		8842662	2		=			
ANR	8842670	Identifier	gb		8842662	0					
ANR	8842671	UnaryOperationExpression	& v -> s . gb		8842662	1					
ANR	8842672	UnaryOperator	&		8842662	0					
ANR	8842673	MemberAccess	v -> s . gb		8842662	1					
ANR	8842674	PtrMemberAccess	v -> s		8842662	0					
ANR	8842675	Identifier	v		8842662	0					
ANR	8842676	Identifier	s		8842662	1					
ANR	8842677	Identifier	gb		8842662	1					
ANR	8842678	IdentifierDeclStatement	MpegEncContext * s = & v -> s ;	7:4:156:181	8842662	1	True				
ANR	8842679	IdentifierDecl	* s = & v -> s		8842662	0					
ANR	8842680	IdentifierDeclType	MpegEncContext *		8842662	0					
ANR	8842681	Identifier	s		8842662	1					
ANR	8842682	AssignmentExpression	* s = & v -> s		8842662	2		=			
ANR	8842683	Identifier	s		8842662	0					
ANR	8842684	UnaryOperationExpression	& v -> s		8842662	1					
ANR	8842685	UnaryOperator	&		8842662	0					
ANR	8842686	PtrMemberAccess	v -> s		8842662	1					
ANR	8842687	Identifier	v		8842662	0					
ANR	8842688	Identifier	s		8842662	1					
ANR	8842689	IdentifierDeclStatement	int dc_pred_dir = 0 ;	9:4:188:207	8842662	2	True				
ANR	8842690	IdentifierDecl	dc_pred_dir = 0		8842662	0					
ANR	8842691	IdentifierDeclType	int		8842662	0					
ANR	8842692	Identifier	dc_pred_dir		8842662	1					
ANR	8842693	AssignmentExpression	dc_pred_dir = 0		8842662	2		=			
ANR	8842694	Identifier	dc_pred_dir		8842662	0					
ANR	8842695	PrimaryExpression	0		8842662	1					
ANR	8842696	IdentifierDeclStatement	"int run_diff , i ;"	11:4:256:271	8842662	3	True				
ANR	8842697	IdentifierDecl	run_diff		8842662	0					
ANR	8842698	IdentifierDeclType	int		8842662	0					
ANR	8842699	Identifier	run_diff		8842662	1					
ANR	8842700	IdentifierDecl	i		8842662	1					
ANR	8842701	IdentifierDeclType	int		8842662	0					
ANR	8842702	Identifier	i		8842662	1					
ANR	8842703	IdentifierDeclStatement	int16_t * dc_val ;	13:4:278:293	8842662	4	True				
ANR	8842704	IdentifierDecl	* dc_val		8842662	0					
ANR	8842705	IdentifierDeclType	int16_t *		8842662	0					
ANR	8842706	Identifier	dc_val		8842662	1					
ANR	8842707	IdentifierDeclStatement	"int16_t * ac_val , * ac_val2 ;"	15:4:300:325	8842662	5	True				
ANR	8842708	IdentifierDecl	* ac_val		8842662	0					
ANR	8842709	IdentifierDeclType	int16_t *		8842662	0					
ANR	8842710	Identifier	ac_val		8842662	1					
ANR	8842711	IdentifierDecl	* ac_val2		8842662	1					
ANR	8842712	IdentifierDeclType	int16_t *		8842662	0					
ANR	8842713	Identifier	ac_val2		8842662	1					
ANR	8842714	IdentifierDeclStatement	int dcdiff ;	17:4:332:342	8842662	6	True				
ANR	8842715	IdentifierDecl	dcdiff		8842662	0					
ANR	8842716	IdentifierDeclType	int		8842662	0					
ANR	8842717	Identifier	dcdiff		8842662	1					
ANR	8842718	IdentifierDeclStatement	int mb_pos = s -> mb_x + s -> mb_y * s -> mb_stride ;	19:4:349:394	8842662	7	True				
ANR	8842719	IdentifierDecl	mb_pos = s -> mb_x + s -> mb_y * s -> mb_stride		8842662	0					
ANR	8842720	IdentifierDeclType	int		8842662	0					
ANR	8842721	Identifier	mb_pos		8842662	1					
ANR	8842722	AssignmentExpression	mb_pos = s -> mb_x + s -> mb_y * s -> mb_stride		8842662	2		=			
ANR	8842723	Identifier	mb_pos		8842662	0					
ANR	8842724	AdditiveExpression	s -> mb_x + s -> mb_y * s -> mb_stride		8842662	1		+			
ANR	8842725	PtrMemberAccess	s -> mb_x		8842662	0					
ANR	8842726	Identifier	s		8842662	0					
ANR	8842727	Identifier	mb_x		8842662	1					
ANR	8842728	MultiplicativeExpression	s -> mb_y * s -> mb_stride		8842662	1		*			
ANR	8842729	PtrMemberAccess	s -> mb_y		8842662	0					
ANR	8842730	Identifier	s		8842662	0					
ANR	8842731	Identifier	mb_y		8842662	1					
ANR	8842732	PtrMemberAccess	s -> mb_stride		8842662	1					
ANR	8842733	Identifier	s		8842662	0					
ANR	8842734	Identifier	mb_stride		8842662	1					
ANR	8842735	IdentifierDeclStatement	"int a_avail , c_avail ;"	21:4:401:421	8842662	8	True				
ANR	8842736	IdentifierDecl	a_avail		8842662	0					
ANR	8842737	IdentifierDeclType	int		8842662	0					
ANR	8842738	Identifier	a_avail		8842662	1					
ANR	8842739	IdentifierDecl	c_avail		8842662	1					
ANR	8842740	IdentifierDeclType	int		8842662	0					
ANR	8842741	Identifier	c_avail		8842662	1					
ANR	8842742	ExpressionStatement	mquant = ( mquant < 1 ) ? 0 : ( ( mquant > 31 ) ? 31 : mquant )	27:4:482:539	8842662	9	True				
ANR	8842743	AssignmentExpression	mquant = ( mquant < 1 ) ? 0 : ( ( mquant > 31 ) ? 31 : mquant )		8842662	0		=			
ANR	8842744	Identifier	mquant		8842662	0					
ANR	8842745	ConditionalExpression	( mquant < 1 ) ? 0 : ( ( mquant > 31 ) ? 31 : mquant )		8842662	1					
ANR	8842746	Condition	mquant < 1		8842662	0					
ANR	8842747	RelationalExpression	mquant < 1		8842662	0		<			
ANR	8842748	Identifier	mquant		8842662	0					
ANR	8842749	PrimaryExpression	1		8842662	1					
ANR	8842750	PrimaryExpression	0		8842662	1					
ANR	8842751	ConditionalExpression	( mquant > 31 ) ? 31 : mquant		8842662	2					
ANR	8842752	Condition	mquant > 31		8842662	0					
ANR	8842753	RelationalExpression	mquant > 31		8842662	0		>			
ANR	8842754	Identifier	mquant		8842662	0					
ANR	8842755	PrimaryExpression	31		8842662	1					
ANR	8842756	PrimaryExpression	31		8842662	1					
ANR	8842757	Identifier	mquant		8842662	2					
ANR	8842758	ExpressionStatement	s -> y_dc_scale = s -> y_dc_scale_table [ mquant ]	33:4:595:638	8842662	10	True				
ANR	8842759	AssignmentExpression	s -> y_dc_scale = s -> y_dc_scale_table [ mquant ]		8842662	0		=			
ANR	8842760	PtrMemberAccess	s -> y_dc_scale		8842662	0					
ANR	8842761	Identifier	s		8842662	0					
ANR	8842762	Identifier	y_dc_scale		8842662	1					
ANR	8842763	ArrayIndexing	s -> y_dc_scale_table [ mquant ]		8842662	1					
ANR	8842764	PtrMemberAccess	s -> y_dc_scale_table		8842662	0					
ANR	8842765	Identifier	s		8842662	0					
ANR	8842766	Identifier	y_dc_scale_table		8842662	1					
ANR	8842767	Identifier	mquant		8842662	1					
ANR	8842768	ExpressionStatement	s -> c_dc_scale = s -> c_dc_scale_table [ mquant ]	35:4:645:688	8842662	11	True				
ANR	8842769	AssignmentExpression	s -> c_dc_scale = s -> c_dc_scale_table [ mquant ]		8842662	0		=			
ANR	8842770	PtrMemberAccess	s -> c_dc_scale		8842662	0					
ANR	8842771	Identifier	s		8842662	0					
ANR	8842772	Identifier	c_dc_scale		8842662	1					
ANR	8842773	ArrayIndexing	s -> c_dc_scale_table [ mquant ]		8842662	1					
ANR	8842774	PtrMemberAccess	s -> c_dc_scale_table		8842662	0					
ANR	8842775	Identifier	s		8842662	0					
ANR	8842776	Identifier	c_dc_scale_table		8842662	1					
ANR	8842777	Identifier	mquant		8842662	1					
ANR	8842778	ExpressionStatement	a_avail = c_avail = 0	41:4:757:778	8842662	12	True				
ANR	8842779	AssignmentExpression	a_avail = c_avail = 0		8842662	0		=			
ANR	8842780	Identifier	a_avail		8842662	0					
ANR	8842781	AssignmentExpression	c_avail = 0		8842662	1		=			
ANR	8842782	Identifier	c_avail		8842662	0					
ANR	8842783	PrimaryExpression	0		8842662	1					
ANR	8842784	IfStatement	if ( ( n == 2 || n == 3 ) || ( s -> mb_y && IS_INTRA ( s -> current_picture . mb_type [ mb_pos - s -> mb_stride ] ) ) )		8842662	13					
ANR	8842785	Condition	( n == 2 || n == 3 ) || ( s -> mb_y && IS_INTRA ( s -> current_picture . mb_type [ mb_pos - s -> mb_stride ] ) )	43:7:788:881	8842662	0	True				
ANR	8842786	OrExpression	( n == 2 || n == 3 ) || ( s -> mb_y && IS_INTRA ( s -> current_picture . mb_type [ mb_pos - s -> mb_stride ] ) )		8842662	0		||			
ANR	8842787	OrExpression	n == 2 || n == 3		8842662	0		||			
ANR	8842788	EqualityExpression	n == 2		8842662	0		==			
ANR	8842789	Identifier	n		8842662	0					
ANR	8842790	PrimaryExpression	2		8842662	1					
ANR	8842791	EqualityExpression	n == 3		8842662	1		==			
ANR	8842792	Identifier	n		8842662	0					
ANR	8842793	PrimaryExpression	3		8842662	1					
ANR	8842794	AndExpression	s -> mb_y && IS_INTRA ( s -> current_picture . mb_type [ mb_pos - s -> mb_stride ] )		8842662	1		&&			
ANR	8842795	PtrMemberAccess	s -> mb_y		8842662	0					
ANR	8842796	Identifier	s		8842662	0					
ANR	8842797	Identifier	mb_y		8842662	1					
ANR	8842798	CallExpression	IS_INTRA ( s -> current_picture . mb_type [ mb_pos - s -> mb_stride ] )		8842662	1					
ANR	8842799	Callee	IS_INTRA		8842662	0					
ANR	8842800	Identifier	IS_INTRA		8842662	0					
ANR	8842801	ArgumentList	s -> current_picture . mb_type [ mb_pos - s -> mb_stride ]		8842662	1					
ANR	8842802	Argument	s -> current_picture . mb_type [ mb_pos - s -> mb_stride ]		8842662	0					
ANR	8842803	ArrayIndexing	s -> current_picture . mb_type [ mb_pos - s -> mb_stride ]		8842662	0					
ANR	8842804	MemberAccess	s -> current_picture . mb_type		8842662	0					
ANR	8842805	PtrMemberAccess	s -> current_picture		8842662	0					
ANR	8842806	Identifier	s		8842662	0					
ANR	8842807	Identifier	current_picture		8842662	1					
ANR	8842808	Identifier	mb_type		8842662	1					
ANR	8842809	AdditiveExpression	mb_pos - s -> mb_stride		8842662	1		-			
ANR	8842810	Identifier	mb_pos		8842662	0					
ANR	8842811	PtrMemberAccess	s -> mb_stride		8842662	1					
ANR	8842812	Identifier	s		8842662	0					
ANR	8842813	Identifier	mb_stride		8842662	1					
ANR	8842814	ExpressionStatement	a_avail = 1	45:8:893:904	8842662	1	True				
ANR	8842815	AssignmentExpression	a_avail = 1		8842662	0		=			
ANR	8842816	Identifier	a_avail		8842662	0					
ANR	8842817	PrimaryExpression	1		8842662	1					
ANR	8842818	IfStatement	if ( ( n == 1 || n == 3 ) || ( s -> mb_x && IS_INTRA ( s -> current_picture . mb_type [ mb_pos - 1 ] ) ) )		8842662	14					
ANR	8842819	Condition	( n == 1 || n == 3 ) || ( s -> mb_x && IS_INTRA ( s -> current_picture . mb_type [ mb_pos - 1 ] ) )	47:7:914:996	8842662	0	True				
ANR	8842820	OrExpression	( n == 1 || n == 3 ) || ( s -> mb_x && IS_INTRA ( s -> current_picture . mb_type [ mb_pos - 1 ] ) )		8842662	0		||			
ANR	8842821	OrExpression	n == 1 || n == 3		8842662	0		||			
ANR	8842822	EqualityExpression	n == 1		8842662	0		==			
ANR	8842823	Identifier	n		8842662	0					
ANR	8842824	PrimaryExpression	1		8842662	1					
ANR	8842825	EqualityExpression	n == 3		8842662	1		==			
ANR	8842826	Identifier	n		8842662	0					
ANR	8842827	PrimaryExpression	3		8842662	1					
ANR	8842828	AndExpression	s -> mb_x && IS_INTRA ( s -> current_picture . mb_type [ mb_pos - 1 ] )		8842662	1		&&			
ANR	8842829	PtrMemberAccess	s -> mb_x		8842662	0					
ANR	8842830	Identifier	s		8842662	0					
ANR	8842831	Identifier	mb_x		8842662	1					
ANR	8842832	CallExpression	IS_INTRA ( s -> current_picture . mb_type [ mb_pos - 1 ] )		8842662	1					
ANR	8842833	Callee	IS_INTRA		8842662	0					
ANR	8842834	Identifier	IS_INTRA		8842662	0					
ANR	8842835	ArgumentList	s -> current_picture . mb_type [ mb_pos - 1 ]		8842662	1					
ANR	8842836	Argument	s -> current_picture . mb_type [ mb_pos - 1 ]		8842662	0					
ANR	8842837	ArrayIndexing	s -> current_picture . mb_type [ mb_pos - 1 ]		8842662	0					
ANR	8842838	MemberAccess	s -> current_picture . mb_type		8842662	0					
ANR	8842839	PtrMemberAccess	s -> current_picture		8842662	0					
ANR	8842840	Identifier	s		8842662	0					
ANR	8842841	Identifier	current_picture		8842662	1					
ANR	8842842	Identifier	mb_type		8842662	1					
ANR	8842843	AdditiveExpression	mb_pos - 1		8842662	1		-			
ANR	8842844	Identifier	mb_pos		8842662	0					
ANR	8842845	PrimaryExpression	1		8842662	1					
ANR	8842846	ExpressionStatement	c_avail = 1	49:8:1008:1019	8842662	1	True				
ANR	8842847	AssignmentExpression	c_avail = 1		8842662	0		=			
ANR	8842848	Identifier	c_avail		8842662	0					
ANR	8842849	PrimaryExpression	1		8842662	1					
ANR	8842850	IfStatement	if ( n < 4 )		8842662	15					
ANR	8842851	Condition	n < 4	53:8:1061:1065	8842662	0	True				
ANR	8842852	RelationalExpression	n < 4		8842662	0		<			
ANR	8842853	Identifier	n		8842662	0					
ANR	8842854	PrimaryExpression	4		8842662	1					
ANR	8842855	CompoundStatement		51:15:953:953	8842662	1					
ANR	8842856	ExpressionStatement	"dcdiff = get_vlc2 ( & s -> gb , ff_msmp4_dc_luma_vlc [ s -> dc_table_index ] . table , DC_VLC_BITS , 3 )"	55:8:1079:1167	8842662	0	True				
ANR	8842857	AssignmentExpression	"dcdiff = get_vlc2 ( & s -> gb , ff_msmp4_dc_luma_vlc [ s -> dc_table_index ] . table , DC_VLC_BITS , 3 )"		8842662	0		=			
ANR	8842858	Identifier	dcdiff		8842662	0					
ANR	8842859	CallExpression	"get_vlc2 ( & s -> gb , ff_msmp4_dc_luma_vlc [ s -> dc_table_index ] . table , DC_VLC_BITS , 3 )"		8842662	1					
ANR	8842860	Callee	get_vlc2		8842662	0					
ANR	8842861	Identifier	get_vlc2		8842662	0					
ANR	8842862	ArgumentList	& s -> gb		8842662	1					
ANR	8842863	Argument	& s -> gb		8842662	0					
ANR	8842864	UnaryOperationExpression	& s -> gb		8842662	0					
ANR	8842865	UnaryOperator	&		8842662	0					
ANR	8842866	PtrMemberAccess	s -> gb		8842662	1					
ANR	8842867	Identifier	s		8842662	0					
ANR	8842868	Identifier	gb		8842662	1					
ANR	8842869	Argument	ff_msmp4_dc_luma_vlc [ s -> dc_table_index ] . table		8842662	1					
ANR	8842870	MemberAccess	ff_msmp4_dc_luma_vlc [ s -> dc_table_index ] . table		8842662	0					
ANR	8842871	ArrayIndexing	ff_msmp4_dc_luma_vlc [ s -> dc_table_index ]		8842662	0					
ANR	8842872	Identifier	ff_msmp4_dc_luma_vlc		8842662	0					
ANR	8842873	PtrMemberAccess	s -> dc_table_index		8842662	1					
ANR	8842874	Identifier	s		8842662	0					
ANR	8842875	Identifier	dc_table_index		8842662	1					
ANR	8842876	Identifier	table		8842662	1					
ANR	8842877	Argument	DC_VLC_BITS		8842662	2					
ANR	8842878	Identifier	DC_VLC_BITS		8842662	0					
ANR	8842879	Argument	3		8842662	3					
ANR	8842880	PrimaryExpression	3		8842662	0					
ANR	8842881	ElseStatement	else		8842662	0					
ANR	8842882	CompoundStatement		55:11:1066:1066	8842662	0					
ANR	8842883	ExpressionStatement	"dcdiff = get_vlc2 ( & s -> gb , ff_msmp4_dc_chroma_vlc [ s -> dc_table_index ] . table , DC_VLC_BITS , 3 )"	59:8:1192:1282	8842662	0	True				
ANR	8842884	AssignmentExpression	"dcdiff = get_vlc2 ( & s -> gb , ff_msmp4_dc_chroma_vlc [ s -> dc_table_index ] . table , DC_VLC_BITS , 3 )"		8842662	0		=			
ANR	8842885	Identifier	dcdiff		8842662	0					
ANR	8842886	CallExpression	"get_vlc2 ( & s -> gb , ff_msmp4_dc_chroma_vlc [ s -> dc_table_index ] . table , DC_VLC_BITS , 3 )"		8842662	1					
ANR	8842887	Callee	get_vlc2		8842662	0					
ANR	8842888	Identifier	get_vlc2		8842662	0					
ANR	8842889	ArgumentList	& s -> gb		8842662	1					
ANR	8842890	Argument	& s -> gb		8842662	0					
ANR	8842891	UnaryOperationExpression	& s -> gb		8842662	0					
ANR	8842892	UnaryOperator	&		8842662	0					
ANR	8842893	PtrMemberAccess	s -> gb		8842662	1					
ANR	8842894	Identifier	s		8842662	0					
ANR	8842895	Identifier	gb		8842662	1					
ANR	8842896	Argument	ff_msmp4_dc_chroma_vlc [ s -> dc_table_index ] . table		8842662	1					
ANR	8842897	MemberAccess	ff_msmp4_dc_chroma_vlc [ s -> dc_table_index ] . table		8842662	0					
ANR	8842898	ArrayIndexing	ff_msmp4_dc_chroma_vlc [ s -> dc_table_index ]		8842662	0					
ANR	8842899	Identifier	ff_msmp4_dc_chroma_vlc		8842662	0					
ANR	8842900	PtrMemberAccess	s -> dc_table_index		8842662	1					
ANR	8842901	Identifier	s		8842662	0					
ANR	8842902	Identifier	dc_table_index		8842662	1					
ANR	8842903	Identifier	table		8842662	1					
ANR	8842904	Argument	DC_VLC_BITS		8842662	2					
ANR	8842905	Identifier	DC_VLC_BITS		8842662	0					
ANR	8842906	Argument	3		8842662	3					
ANR	8842907	PrimaryExpression	3		8842662	0					
ANR	8842908	IfStatement	if ( dcdiff < 0 )		8842662	16					
ANR	8842909	Condition	dcdiff < 0	63:8:1300:1309	8842662	0	True				
ANR	8842910	RelationalExpression	dcdiff < 0		8842662	0		<			
ANR	8842911	Identifier	dcdiff		8842662	0					
ANR	8842912	PrimaryExpression	0		8842662	1					
ANR	8842913	CompoundStatement		61:19:1196:1196	8842662	1					
ANR	8842914	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_ERROR , ""Illegal DC VLC\\n"" )"	65:8:1322:1372	8842662	0	True				
ANR	8842915	CallExpression	"av_log ( s -> avctx , AV_LOG_ERROR , ""Illegal DC VLC\\n"" )"		8842662	0					
ANR	8842916	Callee	av_log		8842662	0					
ANR	8842917	Identifier	av_log		8842662	0					
ANR	8842918	ArgumentList	s -> avctx		8842662	1					
ANR	8842919	Argument	s -> avctx		8842662	0					
ANR	8842920	PtrMemberAccess	s -> avctx		8842662	0					
ANR	8842921	Identifier	s		8842662	0					
ANR	8842922	Identifier	avctx		8842662	1					
ANR	8842923	Argument	AV_LOG_ERROR		8842662	1					
ANR	8842924	Identifier	AV_LOG_ERROR		8842662	0					
ANR	8842925	Argument	"""Illegal DC VLC\\n"""		8842662	2					
ANR	8842926	PrimaryExpression	"""Illegal DC VLC\\n"""		8842662	0					
ANR	8842927	ReturnStatement	return - 1 ;	67:8:1383:1392	8842662	1	True				
ANR	8842928	UnaryOperationExpression	- 1		8842662	0					
ANR	8842929	UnaryOperator	-		8842662	0					
ANR	8842930	PrimaryExpression	1		8842662	1					
ANR	8842931	IfStatement	if ( dcdiff )		8842662	17					
ANR	8842932	Condition	dcdiff	71:8:1410:1415	8842662	0	True				
ANR	8842933	Identifier	dcdiff		8842662	0					
ANR	8842934	CompoundStatement		71:4:1308:1308	8842662	1					
ANR	8842935	IfStatement	if ( dcdiff == 119 )		8842662	0					
ANR	8842936	Condition	dcdiff == 119	75:12:1438:1450	8842662	0	True				
ANR	8842937	EqualityExpression	dcdiff == 119		8842662	0		==			
ANR	8842938	Identifier	dcdiff		8842662	0					
ANR	8842939	PrimaryExpression	119		8842662	1					
ANR	8842940	CompoundStatement		75:8:1369:1369	8842662	1					
ANR	8842941	IfStatement	if ( mquant == 1 )		8842662	0					
ANR	8842942	Condition	mquant == 1	81:16:1537:1547	8842662	0	True				
ANR	8842943	EqualityExpression	mquant == 1		8842662	0		==			
ANR	8842944	Identifier	mquant		8842662	0					
ANR	8842945	PrimaryExpression	1		8842662	1					
ANR	8842946	ExpressionStatement	"dcdiff = get_bits ( gb , 10 )"	81:29:1550:1575	8842662	1	True				
ANR	8842947	AssignmentExpression	"dcdiff = get_bits ( gb , 10 )"		8842662	0		=			
ANR	8842948	Identifier	dcdiff		8842662	0					
ANR	8842949	CallExpression	"get_bits ( gb , 10 )"		8842662	1					
ANR	8842950	Callee	get_bits		8842662	0					
ANR	8842951	Identifier	get_bits		8842662	0					
ANR	8842952	ArgumentList	gb		8842662	1					
ANR	8842953	Argument	gb		8842662	0					
ANR	8842954	Identifier	gb		8842662	0					
ANR	8842955	Argument	10		8842662	1					
ANR	8842956	PrimaryExpression	10		8842662	0					
ANR	8842957	ElseStatement	else		8842662	0					
ANR	8842958	IfStatement	if ( mquant == 2 )		8842662	0					
ANR	8842959	Condition	mquant == 2	83:21:1599:1609	8842662	0	True				
ANR	8842960	EqualityExpression	mquant == 2		8842662	0		==			
ANR	8842961	Identifier	mquant		8842662	0					
ANR	8842962	PrimaryExpression	2		8842662	1					
ANR	8842963	ExpressionStatement	"dcdiff = get_bits ( gb , 9 )"	83:34:1612:1636	8842662	1	True				
ANR	8842964	AssignmentExpression	"dcdiff = get_bits ( gb , 9 )"		8842662	0		=			
ANR	8842965	Identifier	dcdiff		8842662	0					
ANR	8842966	CallExpression	"get_bits ( gb , 9 )"		8842662	1					
ANR	8842967	Callee	get_bits		8842662	0					
ANR	8842968	Identifier	get_bits		8842662	0					
ANR	8842969	ArgumentList	gb		8842662	1					
ANR	8842970	Argument	gb		8842662	0					
ANR	8842971	Identifier	gb		8842662	0					
ANR	8842972	Argument	9		8842662	1					
ANR	8842973	PrimaryExpression	9		8842662	0					
ANR	8842974	ElseStatement	else		8842662	0					
ANR	8842975	ExpressionStatement	"dcdiff = get_bits ( gb , 8 )"	85:17:1656:1680	8842662	0	True				
ANR	8842976	AssignmentExpression	"dcdiff = get_bits ( gb , 8 )"		8842662	0		=			
ANR	8842977	Identifier	dcdiff		8842662	0					
ANR	8842978	CallExpression	"get_bits ( gb , 8 )"		8842662	1					
ANR	8842979	Callee	get_bits		8842662	0					
ANR	8842980	Identifier	get_bits		8842662	0					
ANR	8842981	ArgumentList	gb		8842662	1					
ANR	8842982	Argument	gb		8842662	0					
ANR	8842983	Identifier	gb		8842662	0					
ANR	8842984	Argument	8		8842662	1					
ANR	8842985	PrimaryExpression	8		8842662	0					
ANR	8842986	ElseStatement	else		8842662	0					
ANR	8842987	CompoundStatement		89:8:1601:1601	8842662	0					
ANR	8842988	IfStatement	if ( mquant == 1 )		8842662	0					
ANR	8842989	Condition	mquant == 1	93:16:1735:1745	8842662	0	True				
ANR	8842990	EqualityExpression	mquant == 1		8842662	0		==			
ANR	8842991	Identifier	mquant		8842662	0					
ANR	8842992	PrimaryExpression	1		8842662	1					
ANR	8842993	ExpressionStatement	"dcdiff = ( dcdiff << 2 ) + get_bits ( gb , 2 ) - 3"	95:16:1765:1807	8842662	1	True				
ANR	8842994	AssignmentExpression	"dcdiff = ( dcdiff << 2 ) + get_bits ( gb , 2 ) - 3"		8842662	0		=			
ANR	8842995	Identifier	dcdiff		8842662	0					
ANR	8842996	AdditiveExpression	"( dcdiff << 2 ) + get_bits ( gb , 2 ) - 3"		8842662	1		+			
ANR	8842997	ShiftExpression	dcdiff << 2		8842662	0		<<			
ANR	8842998	Identifier	dcdiff		8842662	0					
ANR	8842999	PrimaryExpression	2		8842662	1					
ANR	8843000	AdditiveExpression	"get_bits ( gb , 2 ) - 3"		8842662	1		-			
ANR	8843001	CallExpression	"get_bits ( gb , 2 )"		8842662	0					
ANR	8843002	Callee	get_bits		8842662	0					
ANR	8843003	Identifier	get_bits		8842662	0					
ANR	8843004	ArgumentList	gb		8842662	1					
ANR	8843005	Argument	gb		8842662	0					
ANR	8843006	Identifier	gb		8842662	0					
ANR	8843007	Argument	2		8842662	1					
ANR	8843008	PrimaryExpression	2		8842662	0					
ANR	8843009	PrimaryExpression	3		8842662	1					
ANR	8843010	ElseStatement	else		8842662	0					
ANR	8843011	IfStatement	if ( mquant == 2 )		8842662	0					
ANR	8843012	Condition	mquant == 2	97:21:1831:1841	8842662	0	True				
ANR	8843013	EqualityExpression	mquant == 2		8842662	0		==			
ANR	8843014	Identifier	mquant		8842662	0					
ANR	8843015	PrimaryExpression	2		8842662	1					
ANR	8843016	ExpressionStatement	"dcdiff = ( dcdiff << 1 ) + get_bits ( gb , 1 ) - 1"	99:16:1861:1903	8842662	1	True				
ANR	8843017	AssignmentExpression	"dcdiff = ( dcdiff << 1 ) + get_bits ( gb , 1 ) - 1"		8842662	0		=			
ANR	8843018	Identifier	dcdiff		8842662	0					
ANR	8843019	AdditiveExpression	"( dcdiff << 1 ) + get_bits ( gb , 1 ) - 1"		8842662	1		+			
ANR	8843020	ShiftExpression	dcdiff << 1		8842662	0		<<			
ANR	8843021	Identifier	dcdiff		8842662	0					
ANR	8843022	PrimaryExpression	1		8842662	1					
ANR	8843023	AdditiveExpression	"get_bits ( gb , 1 ) - 1"		8842662	1		-			
ANR	8843024	CallExpression	"get_bits ( gb , 1 )"		8842662	0					
ANR	8843025	Callee	get_bits		8842662	0					
ANR	8843026	Identifier	get_bits		8842662	0					
ANR	8843027	ArgumentList	gb		8842662	1					
ANR	8843028	Argument	gb		8842662	0					
ANR	8843029	Identifier	gb		8842662	0					
ANR	8843030	Argument	1		8842662	1					
ANR	8843031	PrimaryExpression	1		8842662	0					
ANR	8843032	PrimaryExpression	1		8842662	1					
ANR	8843033	IfStatement	"if ( get_bits ( gb , 1 ) )"		8842662	1					
ANR	8843034	Condition	"get_bits ( gb , 1 )"	103:12:1929:1943	8842662	0	True				
ANR	8843035	CallExpression	"get_bits ( gb , 1 )"		8842662	0					
ANR	8843036	Callee	get_bits		8842662	0					
ANR	8843037	Identifier	get_bits		8842662	0					
ANR	8843038	ArgumentList	gb		8842662	1					
ANR	8843039	Argument	gb		8842662	0					
ANR	8843040	Identifier	gb		8842662	0					
ANR	8843041	Argument	1		8842662	1					
ANR	8843042	PrimaryExpression	1		8842662	0					
ANR	8843043	ExpressionStatement	dcdiff = - dcdiff	105:12:1959:1975	8842662	1	True				
ANR	8843044	AssignmentExpression	dcdiff = - dcdiff		8842662	0		=			
ANR	8843045	Identifier	dcdiff		8842662	0					
ANR	8843046	UnaryOperationExpression	- dcdiff		8842662	1					
ANR	8843047	UnaryOperator	-		8842662	0					
ANR	8843048	Identifier	dcdiff		8842662	1					
ANR	8843049	ExpressionStatement	"dcdiff += vc1_pred_dc ( & v -> s , v -> overlap , mquant , n , a_avail , c_avail , & dc_val , & dc_pred_dir )"	113:4:2013:2105	8842662	18	True				
ANR	8843050	AssignmentExpression	"dcdiff += vc1_pred_dc ( & v -> s , v -> overlap , mquant , n , a_avail , c_avail , & dc_val , & dc_pred_dir )"		8842662	0		+=			
ANR	8843051	Identifier	dcdiff		8842662	0					
ANR	8843052	CallExpression	"vc1_pred_dc ( & v -> s , v -> overlap , mquant , n , a_avail , c_avail , & dc_val , & dc_pred_dir )"		8842662	1					
ANR	8843053	Callee	vc1_pred_dc		8842662	0					
ANR	8843054	Identifier	vc1_pred_dc		8842662	0					
ANR	8843055	ArgumentList	& v -> s		8842662	1					
ANR	8843056	Argument	& v -> s		8842662	0					
ANR	8843057	UnaryOperationExpression	& v -> s		8842662	0					
ANR	8843058	UnaryOperator	&		8842662	0					
ANR	8843059	PtrMemberAccess	v -> s		8842662	1					
ANR	8843060	Identifier	v		8842662	0					
ANR	8843061	Identifier	s		8842662	1					
ANR	8843062	Argument	v -> overlap		8842662	1					
ANR	8843063	PtrMemberAccess	v -> overlap		8842662	0					
ANR	8843064	Identifier	v		8842662	0					
ANR	8843065	Identifier	overlap		8842662	1					
ANR	8843066	Argument	mquant		8842662	2					
ANR	8843067	Identifier	mquant		8842662	0					
ANR	8843068	Argument	n		8842662	3					
ANR	8843069	Identifier	n		8842662	0					
ANR	8843070	Argument	a_avail		8842662	4					
ANR	8843071	Identifier	a_avail		8842662	0					
ANR	8843072	Argument	c_avail		8842662	5					
ANR	8843073	Identifier	c_avail		8842662	0					
ANR	8843074	Argument	& dc_val		8842662	6					
ANR	8843075	UnaryOperationExpression	& dc_val		8842662	0					
ANR	8843076	UnaryOperator	&		8842662	0					
ANR	8843077	Identifier	dc_val		8842662	1					
ANR	8843078	Argument	& dc_pred_dir		8842662	7					
ANR	8843079	UnaryOperationExpression	& dc_pred_dir		8842662	0					
ANR	8843080	UnaryOperator	&		8842662	0					
ANR	8843081	Identifier	dc_pred_dir		8842662	1					
ANR	8843082	ExpressionStatement	* dc_val = dcdiff	115:4:2112:2128	8842662	19	True				
ANR	8843083	AssignmentExpression	* dc_val = dcdiff		8842662	0		=			
ANR	8843084	UnaryOperationExpression	* dc_val		8842662	0					
ANR	8843085	UnaryOperator	*		8842662	0					
ANR	8843086	Identifier	dc_val		8842662	1					
ANR	8843087	Identifier	dcdiff		8842662	1					
ANR	8843088	IfStatement	if ( n < 4 )		8842662	20					
ANR	8843089	Condition	n < 4	123:8:2204:2208	8842662	0	True				
ANR	8843090	RelationalExpression	n < 4		8842662	0		<			
ANR	8843091	Identifier	n		8842662	0					
ANR	8843092	PrimaryExpression	4		8842662	1					
ANR	8843093	CompoundStatement		121:15:2096:2096	8842662	1					
ANR	8843094	ExpressionStatement	block [ 0 ] = dcdiff * s -> y_dc_scale	125:8:2222:2255	8842662	0	True				
ANR	8843095	AssignmentExpression	block [ 0 ] = dcdiff * s -> y_dc_scale		8842662	0		=			
ANR	8843096	ArrayIndexing	block [ 0 ]		8842662	0					
ANR	8843097	Identifier	block		8842662	0					
ANR	8843098	PrimaryExpression	0		8842662	1					
ANR	8843099	MultiplicativeExpression	dcdiff * s -> y_dc_scale		8842662	1		*			
ANR	8843100	Identifier	dcdiff		8842662	0					
ANR	8843101	PtrMemberAccess	s -> y_dc_scale		8842662	1					
ANR	8843102	Identifier	s		8842662	0					
ANR	8843103	Identifier	y_dc_scale		8842662	1					
ANR	8843104	ElseStatement	else		8842662	0					
ANR	8843105	CompoundStatement		125:11:2154:2154	8842662	0					
ANR	8843106	ExpressionStatement	block [ 0 ] = dcdiff * s -> c_dc_scale	129:8:2280:2313	8842662	0	True				
ANR	8843107	AssignmentExpression	block [ 0 ] = dcdiff * s -> c_dc_scale		8842662	0		=			
ANR	8843108	ArrayIndexing	block [ 0 ]		8842662	0					
ANR	8843109	Identifier	block		8842662	0					
ANR	8843110	PrimaryExpression	0		8842662	1					
ANR	8843111	MultiplicativeExpression	dcdiff * s -> c_dc_scale		8842662	1		*			
ANR	8843112	Identifier	dcdiff		8842662	0					
ANR	8843113	PtrMemberAccess	s -> c_dc_scale		8842662	1					
ANR	8843114	Identifier	s		8842662	0					
ANR	8843115	Identifier	c_dc_scale		8842662	1					
ANR	8843116	ExpressionStatement	run_diff = 0	135:4:2345:2357	8842662	21	True				
ANR	8843117	AssignmentExpression	run_diff = 0		8842662	0		=			
ANR	8843118	Identifier	run_diff		8842662	0					
ANR	8843119	PrimaryExpression	0		8842662	1					
ANR	8843120	ExpressionStatement	i = 0	137:4:2364:2369	8842662	22	True				
ANR	8843121	AssignmentExpression	i = 0		8842662	0		=			
ANR	8843122	Identifier	i		8842662	0					
ANR	8843123	PrimaryExpression	0		8842662	1					
ANR	8843124	IfStatement	if ( ! coded )		8842662	23					
ANR	8843125	Condition	! coded	139:8:2380:2385	8842662	0	True				
ANR	8843126	UnaryOperationExpression	! coded		8842662	0					
ANR	8843127	UnaryOperator	!		8842662	0					
ANR	8843128	Identifier	coded		8842662	1					
ANR	8843129	CompoundStatement		137:16:2273:2273	8842662	1					
ANR	8843130	GotoStatement	goto not_coded ;	141:8:2399:2413	8842662	0	True				
ANR	8843131	Identifier	not_coded		8842662	0					
ANR	8843132	ExpressionStatement	i = 1	149:4:2448:2453	8842662	24	True				
ANR	8843133	AssignmentExpression	i = 1		8842662	0		=			
ANR	8843134	Identifier	i		8842662	0					
ANR	8843135	PrimaryExpression	1		8842662	1					
ANR	8843136	CompoundStatement		159:8:2447:2452	8842662	25					
ANR	8843137	IdentifierDeclStatement	"int last = 0 , skip , value ;"	155:8:2473:2498	8842662	0	True				
ANR	8843138	IdentifierDecl	last = 0		8842662	0					
ANR	8843139	IdentifierDeclType	int		8842662	0					
ANR	8843140	Identifier	last		8842662	1					
ANR	8843141	AssignmentExpression	last = 0		8842662	2		=			
ANR	8843142	Identifier	last		8842662	0					
ANR	8843143	PrimaryExpression	0		8842662	1					
ANR	8843144	IdentifierDecl	skip		8842662	1					
ANR	8843145	IdentifierDeclType	int		8842662	0					
ANR	8843146	Identifier	skip		8842662	1					
ANR	8843147	IdentifierDecl	value		8842662	2					
ANR	8843148	IdentifierDeclType	int		8842662	0					
ANR	8843149	Identifier	value		8842662	1					
ANR	8843150	IdentifierDeclStatement	const int8_t * zz_table ;	157:8:2509:2531	8842662	1	True				
ANR	8843151	IdentifierDecl	* zz_table		8842662	0					
ANR	8843152	IdentifierDeclType	const int8_t *		8842662	0					
ANR	8843153	Identifier	zz_table		8842662	1					
ANR	8843154	IdentifierDeclStatement	int scale ;	159:8:2542:2551	8842662	2	True				
ANR	8843155	IdentifierDecl	scale		8842662	0					
ANR	8843156	IdentifierDeclType	int		8842662	0					
ANR	8843157	Identifier	scale		8842662	1					
ANR	8843158	IdentifierDeclStatement	int k ;	161:8:2562:2567	8842662	3	True				
ANR	8843159	IdentifierDecl	k		8842662	0					
ANR	8843160	IdentifierDeclType	int		8842662	0					
ANR	8843161	Identifier	k		8842662	1					
ANR	8843162	ExpressionStatement	scale = mquant * 2 + v -> halfpq	165:8:2580:2610	8842662	4	True				
ANR	8843163	AssignmentExpression	scale = mquant * 2 + v -> halfpq		8842662	0		=			
ANR	8843164	Identifier	scale		8842662	0					
ANR	8843165	AdditiveExpression	mquant * 2 + v -> halfpq		8842662	1		+			
ANR	8843166	MultiplicativeExpression	mquant * 2		8842662	0		*			
ANR	8843167	Identifier	mquant		8842662	0					
ANR	8843168	PrimaryExpression	2		8842662	1					
ANR	8843169	PtrMemberAccess	v -> halfpq		8842662	1					
ANR	8843170	Identifier	v		8842662	0					
ANR	8843171	Identifier	halfpq		8842662	1					
ANR	8843172	ExpressionStatement	zz_table = vc1_simple_progressive_8x8_zz	169:8:2623:2663	8842662	5	True				
ANR	8843173	AssignmentExpression	zz_table = vc1_simple_progressive_8x8_zz		8842662	0		=			
ANR	8843174	Identifier	zz_table		8842662	0					
ANR	8843175	Identifier	vc1_simple_progressive_8x8_zz		8842662	1					
ANR	8843176	ExpressionStatement	ac_val = s -> ac_val [ 0 ] [ 0 ] + s -> block_index [ n ] * 16	173:8:2676:2725	8842662	6	True				
ANR	8843177	AssignmentExpression	ac_val = s -> ac_val [ 0 ] [ 0 ] + s -> block_index [ n ] * 16		8842662	0		=			
ANR	8843178	Identifier	ac_val		8842662	0					
ANR	8843179	AdditiveExpression	s -> ac_val [ 0 ] [ 0 ] + s -> block_index [ n ] * 16		8842662	1		+			
ANR	8843180	ArrayIndexing	s -> ac_val [ 0 ] [ 0 ]		8842662	0					
ANR	8843181	ArrayIndexing	s -> ac_val [ 0 ]		8842662	0					
ANR	8843182	PtrMemberAccess	s -> ac_val		8842662	0					
ANR	8843183	Identifier	s		8842662	0					
ANR	8843184	Identifier	ac_val		8842662	1					
ANR	8843185	PrimaryExpression	0		8842662	1					
ANR	8843186	PrimaryExpression	0		8842662	1					
ANR	8843187	MultiplicativeExpression	s -> block_index [ n ] * 16		8842662	1		*			
ANR	8843188	ArrayIndexing	s -> block_index [ n ]		8842662	0					
ANR	8843189	PtrMemberAccess	s -> block_index		8842662	0					
ANR	8843190	Identifier	s		8842662	0					
ANR	8843191	Identifier	block_index		8842662	1					
ANR	8843192	Identifier	n		8842662	1					
ANR	8843193	PrimaryExpression	16		8842662	1					
ANR	8843194	ExpressionStatement	ac_val2 = ac_val	175:8:2736:2752	8842662	7	True				
ANR	8843195	AssignmentExpression	ac_val2 = ac_val		8842662	0		=			
ANR	8843196	Identifier	ac_val2		8842662	0					
ANR	8843197	Identifier	ac_val		8842662	1					
ANR	8843198	IfStatement	if ( dc_pred_dir )		8842662	8					
ANR	8843199	Condition	dc_pred_dir	177:11:2766:2776	8842662	0	True				
ANR	8843200	Identifier	dc_pred_dir		8842662	0					
ANR	8843201	ExpressionStatement	ac_val -= 16	179:12:2799:2811	8842662	1	True				
ANR	8843202	AssignmentExpression	ac_val -= 16		8842662	0		-=			
ANR	8843203	Identifier	ac_val		8842662	0					
ANR	8843204	PrimaryExpression	16		8842662	1					
ANR	8843205	ElseStatement	else		8842662	0					
ANR	8843206	ExpressionStatement	ac_val -= 16 * s -> block_wrap [ n ]	183:12:2846:2877	8842662	0	True				
ANR	8843207	AssignmentExpression	ac_val -= 16 * s -> block_wrap [ n ]		8842662	0		-=			
ANR	8843208	Identifier	ac_val		8842662	0					
ANR	8843209	MultiplicativeExpression	16 * s -> block_wrap [ n ]		8842662	1		*			
ANR	8843210	PrimaryExpression	16		8842662	0					
ANR	8843211	ArrayIndexing	s -> block_wrap [ n ]		8842662	1					
ANR	8843212	PtrMemberAccess	s -> block_wrap		8842662	0					
ANR	8843213	Identifier	s		8842662	0					
ANR	8843214	Identifier	block_wrap		8842662	1					
ANR	8843215	Identifier	n		8842662	1					
ANR	8843216	WhileStatement	while ( ! last )		8842662	9					
ANR	8843217	Condition	! last	187:15:2897:2901	8842662	0	True				
ANR	8843218	UnaryOperationExpression	! last		8842662	0					
ANR	8843219	UnaryOperator	!		8842662	0					
ANR	8843220	Identifier	last		8842662	1					
ANR	8843221	CompoundStatement		185:22:2789:2789	8842662	1					
ANR	8843222	ExpressionStatement	"vc1_decode_ac_coeff ( v , & last , & skip , & value , codingset )"	189:12:2919:2974	8842662	0	True				
ANR	8843223	CallExpression	"vc1_decode_ac_coeff ( v , & last , & skip , & value , codingset )"		8842662	0					
ANR	8843224	Callee	vc1_decode_ac_coeff		8842662	0					
ANR	8843225	Identifier	vc1_decode_ac_coeff		8842662	0					
ANR	8843226	ArgumentList	v		8842662	1					
ANR	8843227	Argument	v		8842662	0					
ANR	8843228	Identifier	v		8842662	0					
ANR	8843229	Argument	& last		8842662	1					
ANR	8843230	UnaryOperationExpression	& last		8842662	0					
ANR	8843231	UnaryOperator	&		8842662	0					
ANR	8843232	Identifier	last		8842662	1					
ANR	8843233	Argument	& skip		8842662	2					
ANR	8843234	UnaryOperationExpression	& skip		8842662	0					
ANR	8843235	UnaryOperator	&		8842662	0					
ANR	8843236	Identifier	skip		8842662	1					
ANR	8843237	Argument	& value		8842662	3					
ANR	8843238	UnaryOperationExpression	& value		8842662	0					
ANR	8843239	UnaryOperator	&		8842662	0					
ANR	8843240	Identifier	value		8842662	1					
ANR	8843241	Argument	codingset		8842662	4					
ANR	8843242	Identifier	codingset		8842662	0					
ANR	8843243	ExpressionStatement	i += skip	191:12:2989:2998	8842662	1	True				
ANR	8843244	AssignmentExpression	i += skip		8842662	0		+=			
ANR	8843245	Identifier	i		8842662	0					
ANR	8843246	Identifier	skip		8842662	1					
ANR	8843247	IfStatement	if ( i > 63 )		8842662	2					
ANR	8843248	Condition	i > 63	193:15:3016:3021	8842662	0	True				
ANR	8843249	RelationalExpression	i > 63		8842662	0		>			
ANR	8843250	Identifier	i		8842662	0					
ANR	8843251	PrimaryExpression	63		8842662	1					
ANR	8843252	BreakStatement	break ;	195:16:3041:3046	8842662	1	True				
ANR	8843253	ExpressionStatement	block [ zz_table [ i ++ ] ] = value	197:12:3061:3089	8842662	3	True				
ANR	8843254	AssignmentExpression	block [ zz_table [ i ++ ] ] = value		8842662	0		=			
ANR	8843255	ArrayIndexing	block [ zz_table [ i ++ ] ]		8842662	0					
ANR	8843256	Identifier	block		8842662	0					
ANR	8843257	ArrayIndexing	zz_table [ i ++ ]		8842662	1					
ANR	8843258	Identifier	zz_table		8842662	0					
ANR	8843259	PostIncDecOperationExpression	i ++		8842662	1					
ANR	8843260	Identifier	i		8842662	0					
ANR	8843261	IncDec	++		8842662	1					
ANR	8843262	Identifier	value		8842662	1					
ANR	8843263	IfStatement	if ( s -> ac_pred )		8842662	10					
ANR	8843264	Condition	s -> ac_pred	205:11:3161:3170	8842662	0	True				
ANR	8843265	PtrMemberAccess	s -> ac_pred		8842662	0					
ANR	8843266	Identifier	s		8842662	0					
ANR	8843267	Identifier	ac_pred		8842662	1					
ANR	8843268	CompoundStatement		207:12:3118:3137	8842662	1					
ANR	8843269	IdentifierDeclStatement	"int mb_pos2 , q1 , q2 ;"	209:12:3233:3252	8842662	0	True				
ANR	8843270	IdentifierDecl	mb_pos2		8842662	0					
ANR	8843271	IdentifierDeclType	int		8842662	0					
ANR	8843272	Identifier	mb_pos2		8842662	1					
ANR	8843273	IdentifierDecl	q1		8842662	1					
ANR	8843274	IdentifierDeclType	int		8842662	0					
ANR	8843275	Identifier	q1		8842662	1					
ANR	8843276	IdentifierDecl	q2		8842662	2					
ANR	8843277	IdentifierDeclType	int		8842662	0					
ANR	8843278	Identifier	q2		8842662	1					
ANR	8843279	ExpressionStatement	mb_pos2 = mb_pos - dc_pred_dir - ( 1 - dc_pred_dir ) * s -> mb_stride	213:12:3269:3334	8842662	1	True				
ANR	8843280	AssignmentExpression	mb_pos2 = mb_pos - dc_pred_dir - ( 1 - dc_pred_dir ) * s -> mb_stride		8842662	0		=			
ANR	8843281	Identifier	mb_pos2		8842662	0					
ANR	8843282	AdditiveExpression	mb_pos - dc_pred_dir - ( 1 - dc_pred_dir ) * s -> mb_stride		8842662	1		-			
ANR	8843283	Identifier	mb_pos		8842662	0					
ANR	8843284	AdditiveExpression	dc_pred_dir - ( 1 - dc_pred_dir ) * s -> mb_stride		8842662	1		-			
ANR	8843285	Identifier	dc_pred_dir		8842662	0					
ANR	8843286	MultiplicativeExpression	( 1 - dc_pred_dir ) * s -> mb_stride		8842662	1		*			
ANR	8843287	AdditiveExpression	1 - dc_pred_dir		8842662	0		-			
ANR	8843288	PrimaryExpression	1		8842662	0					
ANR	8843289	Identifier	dc_pred_dir		8842662	1					
ANR	8843290	PtrMemberAccess	s -> mb_stride		8842662	1					
ANR	8843291	Identifier	s		8842662	0					
ANR	8843292	Identifier	mb_stride		8842662	1					
ANR	8843293	ExpressionStatement	q1 = s -> current_picture . qscale_table [ mb_pos ]	215:12:3349:3393	8842662	2	True				
ANR	8843294	AssignmentExpression	q1 = s -> current_picture . qscale_table [ mb_pos ]		8842662	0		=			
ANR	8843295	Identifier	q1		8842662	0					
ANR	8843296	ArrayIndexing	s -> current_picture . qscale_table [ mb_pos ]		8842662	1					
ANR	8843297	MemberAccess	s -> current_picture . qscale_table		8842662	0					
ANR	8843298	PtrMemberAccess	s -> current_picture		8842662	0					
ANR	8843299	Identifier	s		8842662	0					
ANR	8843300	Identifier	current_picture		8842662	1					
ANR	8843301	Identifier	qscale_table		8842662	1					
ANR	8843302	Identifier	mb_pos		8842662	1					
ANR	8843303	ExpressionStatement	q2 = s -> current_picture . qscale_table [ mb_pos2 ]	217:12:3408:3453	8842662	3	True				
ANR	8843304	AssignmentExpression	q2 = s -> current_picture . qscale_table [ mb_pos2 ]		8842662	0		=			
ANR	8843305	Identifier	q2		8842662	0					
ANR	8843306	ArrayIndexing	s -> current_picture . qscale_table [ mb_pos2 ]		8842662	1					
ANR	8843307	MemberAccess	s -> current_picture . qscale_table		8842662	0					
ANR	8843308	PtrMemberAccess	s -> current_picture		8842662	0					
ANR	8843309	Identifier	s		8842662	0					
ANR	8843310	Identifier	current_picture		8842662	1					
ANR	8843311	Identifier	qscale_table		8842662	1					
ANR	8843312	Identifier	mb_pos2		8842662	1					
ANR	8843313	IfStatement	if ( ! c_avail )		8842662	4					
ANR	8843314	Condition	! c_avail	221:15:3473:3480	8842662	0	True				
ANR	8843315	UnaryOperationExpression	! c_avail		8842662	0					
ANR	8843316	UnaryOperator	!		8842662	0					
ANR	8843317	Identifier	c_avail		8842662	1					
ANR	8843318	CompoundStatement		219:25:3368:3368	8842662	1					
ANR	8843319	ExpressionStatement	"memset ( ac_val , 0 , 8 * sizeof ( ac_val [ 0 ] ) )"	223:16:3502:3542	8842662	0	True				
ANR	8843320	CallExpression	"memset ( ac_val , 0 , 8 * sizeof ( ac_val [ 0 ] ) )"		8842662	0					
ANR	8843321	Callee	memset		8842662	0					
ANR	8843322	Identifier	memset		8842662	0					
ANR	8843323	ArgumentList	ac_val		8842662	1					
ANR	8843324	Argument	ac_val		8842662	0					
ANR	8843325	Identifier	ac_val		8842662	0					
ANR	8843326	Argument	0		8842662	1					
ANR	8843327	PrimaryExpression	0		8842662	0					
ANR	8843328	Argument	8 * sizeof ( ac_val [ 0 ] )		8842662	2					
ANR	8843329	MultiplicativeExpression	8 * sizeof ( ac_val [ 0 ] )		8842662	0		*			
ANR	8843330	PrimaryExpression	8		8842662	0					
ANR	8843331	SizeofExpression	sizeof ( ac_val [ 0 ] )		8842662	1					
ANR	8843332	Sizeof	sizeof		8842662	0					
ANR	8843333	ArrayIndexing	ac_val [ 0 ]		8842662	1					
ANR	8843334	Identifier	ac_val		8842662	0					
ANR	8843335	PrimaryExpression	0		8842662	1					
ANR	8843336	ExpressionStatement	dc_pred_dir = 0	225:16:3561:3576	8842662	1	True				
ANR	8843337	AssignmentExpression	dc_pred_dir = 0		8842662	0		=			
ANR	8843338	Identifier	dc_pred_dir		8842662	0					
ANR	8843339	PrimaryExpression	0		8842662	1					
ANR	8843340	IfStatement	if ( ! a_avail )		8842662	5					
ANR	8843341	Condition	! a_avail	229:15:3609:3616	8842662	0	True				
ANR	8843342	UnaryOperationExpression	! a_avail		8842662	0					
ANR	8843343	UnaryOperator	!		8842662	0					
ANR	8843344	Identifier	a_avail		8842662	1					
ANR	8843345	CompoundStatement		227:25:3504:3504	8842662	1					
ANR	8843346	ExpressionStatement	"memset ( ac_val + 8 , 0 , 8 * sizeof ( ac_val [ 0 ] ) )"	231:16:3638:3682	8842662	0	True				
ANR	8843347	CallExpression	"memset ( ac_val + 8 , 0 , 8 * sizeof ( ac_val [ 0 ] ) )"		8842662	0					
ANR	8843348	Callee	memset		8842662	0					
ANR	8843349	Identifier	memset		8842662	0					
ANR	8843350	ArgumentList	ac_val + 8		8842662	1					
ANR	8843351	Argument	ac_val + 8		8842662	0					
ANR	8843352	AdditiveExpression	ac_val + 8		8842662	0		+			
ANR	8843353	Identifier	ac_val		8842662	0					
ANR	8843354	PrimaryExpression	8		8842662	1					
ANR	8843355	Argument	0		8842662	1					
ANR	8843356	PrimaryExpression	0		8842662	0					
ANR	8843357	Argument	8 * sizeof ( ac_val [ 0 ] )		8842662	2					
ANR	8843358	MultiplicativeExpression	8 * sizeof ( ac_val [ 0 ] )		8842662	0		*			
ANR	8843359	PrimaryExpression	8		8842662	0					
ANR	8843360	SizeofExpression	sizeof ( ac_val [ 0 ] )		8842662	1					
ANR	8843361	Sizeof	sizeof		8842662	0					
ANR	8843362	ArrayIndexing	ac_val [ 0 ]		8842662	1					
ANR	8843363	Identifier	ac_val		8842662	0					
ANR	8843364	PrimaryExpression	0		8842662	1					
ANR	8843365	ExpressionStatement	dc_pred_dir = 1	233:16:3701:3716	8842662	1	True				
ANR	8843366	AssignmentExpression	dc_pred_dir = 1		8842662	0		=			
ANR	8843367	Identifier	dc_pred_dir		8842662	0					
ANR	8843368	PrimaryExpression	1		8842662	1					
ANR	8843369	IfStatement	if ( ! q1 && q1 && q2 && q1 != q2 )		8842662	6					
ANR	8843370	Condition	! q1 && q1 && q2 && q1 != q2	237:15:3749:3775	8842662	0	True				
ANR	8843371	AndExpression	! q1 && q1 && q2 && q1 != q2		8842662	0		&&			
ANR	8843372	UnaryOperationExpression	! q1		8842662	0					
ANR	8843373	UnaryOperator	!		8842662	0					
ANR	8843374	Identifier	q1		8842662	1					
ANR	8843375	AndExpression	q1 && q2 && q1 != q2		8842662	1		&&			
ANR	8843376	Identifier	q1		8842662	0					
ANR	8843377	AndExpression	q2 && q1 != q2		8842662	1		&&			
ANR	8843378	Identifier	q2		8842662	0					
ANR	8843379	EqualityExpression	q1 != q2		8842662	1		!=			
ANR	8843380	Identifier	q1		8842662	0					
ANR	8843381	Identifier	q2		8842662	1					
ANR	8843382	CompoundStatement		235:44:3663:3663	8842662	1					
ANR	8843383	ExpressionStatement	q1 = q1 * 2 - 1	239:16:3797:3812	8842662	0	True				
ANR	8843384	AssignmentExpression	q1 = q1 * 2 - 1		8842662	0		=			
ANR	8843385	Identifier	q1		8842662	0					
ANR	8843386	AdditiveExpression	q1 * 2 - 1		8842662	1		-			
ANR	8843387	MultiplicativeExpression	q1 * 2		8842662	0		*			
ANR	8843388	Identifier	q1		8842662	0					
ANR	8843389	PrimaryExpression	2		8842662	1					
ANR	8843390	PrimaryExpression	1		8842662	1					
ANR	8843391	ExpressionStatement	q2 = q2 * 2 - 1	241:16:3831:3846	8842662	1	True				
ANR	8843392	AssignmentExpression	q2 = q2 * 2 - 1		8842662	0		=			
ANR	8843393	Identifier	q2		8842662	0					
ANR	8843394	AdditiveExpression	q2 * 2 - 1		8842662	1		-			
ANR	8843395	MultiplicativeExpression	q2 * 2		8842662	0		*			
ANR	8843396	Identifier	q2		8842662	0					
ANR	8843397	PrimaryExpression	2		8842662	1					
ANR	8843398	PrimaryExpression	1		8842662	1					
ANR	8843399	IfStatement	if ( dc_pred_dir )		8842662	2					
ANR	8843400	Condition	dc_pred_dir	245:19:3870:3880	8842662	0	True				
ANR	8843401	Identifier	dc_pred_dir		8842662	0					
ANR	8843402	CompoundStatement		243:32:3768:3768	8842662	1					
ANR	8843403	ForStatement	for ( k = 1 ; k < 8 ; k ++ )		8842662	0					
ANR	8843404	ForInit	k = 1 ;	247:24:3917:3922	8842662	0	True				
ANR	8843405	AssignmentExpression	k = 1		8842662	0		=			
ANR	8843406	Identifier	k		8842662	0					
ANR	8843407	PrimaryExpression	1		8842662	1					
ANR	8843408	Condition	k < 8	247:31:3924:3928	8842662	1	True				
ANR	8843409	RelationalExpression	k < 8		8842662	0		<			
ANR	8843410	Identifier	k		8842662	0					
ANR	8843411	PrimaryExpression	8		8842662	1					
ANR	8843412	PostIncDecOperationExpression	k ++	247:38:3931:3933	8842662	2	True				
ANR	8843413	Identifier	k		8842662	0					
ANR	8843414	IncDec	++		8842662	1					
ANR	8843415	ExpressionStatement	block [ k << 3 ] += ( ac_val [ k ] * q2 * vc1_dqscale [ q1 - 1 ] + 0x20000 ) >> 18	249:24:3961:4032	8842662	3	True				
ANR	8843416	AssignmentExpression	block [ k << 3 ] += ( ac_val [ k ] * q2 * vc1_dqscale [ q1 - 1 ] + 0x20000 ) >> 18		8842662	0		+=			
ANR	8843417	ArrayIndexing	block [ k << 3 ]		8842662	0					
ANR	8843418	Identifier	block		8842662	0					
ANR	8843419	ShiftExpression	k << 3		8842662	1		<<			
ANR	8843420	Identifier	k		8842662	0					
ANR	8843421	PrimaryExpression	3		8842662	1					
ANR	8843422	ShiftExpression	( ac_val [ k ] * q2 * vc1_dqscale [ q1 - 1 ] + 0x20000 ) >> 18		8842662	1		>>			
ANR	8843423	AdditiveExpression	ac_val [ k ] * q2 * vc1_dqscale [ q1 - 1 ] + 0x20000		8842662	0		+			
ANR	8843424	MultiplicativeExpression	ac_val [ k ] * q2 * vc1_dqscale [ q1 - 1 ]		8842662	0		*			
ANR	8843425	ArrayIndexing	ac_val [ k ]		8842662	0					
ANR	8843426	Identifier	ac_val		8842662	0					
ANR	8843427	Identifier	k		8842662	1					
ANR	8843428	MultiplicativeExpression	q2 * vc1_dqscale [ q1 - 1 ]		8842662	1		*			
ANR	8843429	Identifier	q2		8842662	0					
ANR	8843430	ArrayIndexing	vc1_dqscale [ q1 - 1 ]		8842662	1					
ANR	8843431	Identifier	vc1_dqscale		8842662	0					
ANR	8843432	AdditiveExpression	q1 - 1		8842662	1		-			
ANR	8843433	Identifier	q1		8842662	0					
ANR	8843434	PrimaryExpression	1		8842662	1					
ANR	8843435	PrimaryExpression	0x20000		8842662	1					
ANR	8843436	PrimaryExpression	18		8842662	1					
ANR	8843437	ElseStatement	else		8842662	0					
ANR	8843438	CompoundStatement		249:23:3943:3943	8842662	0					
ANR	8843439	ForStatement	for ( k = 1 ; k < 8 ; k ++ )		8842662	0					
ANR	8843440	ForInit	k = 1 ;	253:24:4091:4096	8842662	0	True				
ANR	8843441	AssignmentExpression	k = 1		8842662	0		=			
ANR	8843442	Identifier	k		8842662	0					
ANR	8843443	PrimaryExpression	1		8842662	1					
ANR	8843444	Condition	k < 8	253:31:4098:4102	8842662	1	True				
ANR	8843445	RelationalExpression	k < 8		8842662	0		<			
ANR	8843446	Identifier	k		8842662	0					
ANR	8843447	PrimaryExpression	8		8842662	1					
ANR	8843448	PostIncDecOperationExpression	k ++	253:38:4105:4107	8842662	2	True				
ANR	8843449	Identifier	k		8842662	0					
ANR	8843450	IncDec	++		8842662	1					
ANR	8843451	ExpressionStatement	block [ k ] += ( ac_val [ k + 8 ] * q2 * vc1_dqscale [ q1 - 1 ] + 0x20000 ) >> 18	255:24:4135:4205	8842662	3	True				
ANR	8843452	AssignmentExpression	block [ k ] += ( ac_val [ k + 8 ] * q2 * vc1_dqscale [ q1 - 1 ] + 0x20000 ) >> 18		8842662	0		+=			
ANR	8843453	ArrayIndexing	block [ k ]		8842662	0					
ANR	8843454	Identifier	block		8842662	0					
ANR	8843455	Identifier	k		8842662	1					
ANR	8843456	ShiftExpression	( ac_val [ k + 8 ] * q2 * vc1_dqscale [ q1 - 1 ] + 0x20000 ) >> 18		8842662	1		>>			
ANR	8843457	AdditiveExpression	ac_val [ k + 8 ] * q2 * vc1_dqscale [ q1 - 1 ] + 0x20000		8842662	0		+			
ANR	8843458	MultiplicativeExpression	ac_val [ k + 8 ] * q2 * vc1_dqscale [ q1 - 1 ]		8842662	0		*			
ANR	8843459	ArrayIndexing	ac_val [ k + 8 ]		8842662	0					
ANR	8843460	Identifier	ac_val		8842662	0					
ANR	8843461	AdditiveExpression	k + 8		8842662	1		+			
ANR	8843462	Identifier	k		8842662	0					
ANR	8843463	PrimaryExpression	8		8842662	1					
ANR	8843464	MultiplicativeExpression	q2 * vc1_dqscale [ q1 - 1 ]		8842662	1		*			
ANR	8843465	Identifier	q2		8842662	0					
ANR	8843466	ArrayIndexing	vc1_dqscale [ q1 - 1 ]		8842662	1					
ANR	8843467	Identifier	vc1_dqscale		8842662	0					
ANR	8843468	AdditiveExpression	q1 - 1		8842662	1		-			
ANR	8843469	Identifier	q1		8842662	0					
ANR	8843470	PrimaryExpression	1		8842662	1					
ANR	8843471	PrimaryExpression	0x20000		8842662	1					
ANR	8843472	PrimaryExpression	18		8842662	1					
ANR	8843473	ElseStatement	else		8842662	0					
ANR	8843474	CompoundStatement		257:19:4131:4131	8842662	0					
ANR	8843475	IfStatement	if ( dc_pred_dir )		8842662	0					
ANR	8843476	Condition	dc_pred_dir	261:19:4268:4278	8842662	0	True				
ANR	8843477	Identifier	dc_pred_dir		8842662	0					
ANR	8843478	CompoundStatement		259:32:4166:4166	8842662	1					
ANR	8843479	ForStatement	for ( k = 1 ; k < 8 ; k ++ )		8842662	0					
ANR	8843480	ForInit	k = 1 ;	263:24:4315:4320	8842662	0	True				
ANR	8843481	AssignmentExpression	k = 1		8842662	0		=			
ANR	8843482	Identifier	k		8842662	0					
ANR	8843483	PrimaryExpression	1		8842662	1					
ANR	8843484	Condition	k < 8	263:31:4322:4326	8842662	1	True				
ANR	8843485	RelationalExpression	k < 8		8842662	0		<			
ANR	8843486	Identifier	k		8842662	0					
ANR	8843487	PrimaryExpression	8		8842662	1					
ANR	8843488	PostIncDecOperationExpression	k ++	263:38:4329:4331	8842662	2	True				
ANR	8843489	Identifier	k		8842662	0					
ANR	8843490	IncDec	++		8842662	1					
ANR	8843491	ExpressionStatement	block [ k << 3 ] += ac_val [ k ]	265:24:4359:4385	8842662	3	True				
ANR	8843492	AssignmentExpression	block [ k << 3 ] += ac_val [ k ]		8842662	0		+=			
ANR	8843493	ArrayIndexing	block [ k << 3 ]		8842662	0					
ANR	8843494	Identifier	block		8842662	0					
ANR	8843495	ShiftExpression	k << 3		8842662	1		<<			
ANR	8843496	Identifier	k		8842662	0					
ANR	8843497	PrimaryExpression	3		8842662	1					
ANR	8843498	ArrayIndexing	ac_val [ k ]		8842662	1					
ANR	8843499	Identifier	ac_val		8842662	0					
ANR	8843500	Identifier	k		8842662	1					
ANR	8843501	ElseStatement	else		8842662	0					
ANR	8843502	CompoundStatement		265:23:4296:4296	8842662	0					
ANR	8843503	ForStatement	for ( k = 1 ; k < 8 ; k ++ )		8842662	0					
ANR	8843504	ForInit	k = 1 ;	269:24:4444:4449	8842662	0	True				
ANR	8843505	AssignmentExpression	k = 1		8842662	0		=			
ANR	8843506	Identifier	k		8842662	0					
ANR	8843507	PrimaryExpression	1		8842662	1					
ANR	8843508	Condition	k < 8	269:31:4451:4455	8842662	1	True				
ANR	8843509	RelationalExpression	k < 8		8842662	0		<			
ANR	8843510	Identifier	k		8842662	0					
ANR	8843511	PrimaryExpression	8		8842662	1					
ANR	8843512	PostIncDecOperationExpression	k ++	269:38:4458:4460	8842662	2	True				
ANR	8843513	Identifier	k		8842662	0					
ANR	8843514	IncDec	++		8842662	1					
ANR	8843515	ExpressionStatement	block [ k ] += ac_val [ k + 8 ]	271:24:4488:4513	8842662	3	True				
ANR	8843516	AssignmentExpression	block [ k ] += ac_val [ k + 8 ]		8842662	0		+=			
ANR	8843517	ArrayIndexing	block [ k ]		8842662	0					
ANR	8843518	Identifier	block		8842662	0					
ANR	8843519	Identifier	k		8842662	1					
ANR	8843520	ArrayIndexing	ac_val [ k + 8 ]		8842662	1					
ANR	8843521	Identifier	ac_val		8842662	0					
ANR	8843522	AdditiveExpression	k + 8		8842662	1		+			
ANR	8843523	Identifier	k		8842662	0					
ANR	8843524	PrimaryExpression	8		8842662	1					
ANR	8843525	ForStatement	for ( k = 1 ; k < 8 ; k ++ )		8842662	11					
ANR	8843526	ForInit	k = 1 ;	281:12:4626:4631	8842662	0	True				
ANR	8843527	AssignmentExpression	k = 1		8842662	0		=			
ANR	8843528	Identifier	k		8842662	0					
ANR	8843529	PrimaryExpression	1		8842662	1					
ANR	8843530	Condition	k < 8	281:19:4633:4637	8842662	1	True				
ANR	8843531	RelationalExpression	k < 8		8842662	0		<			
ANR	8843532	Identifier	k		8842662	0					
ANR	8843533	PrimaryExpression	8		8842662	1					
ANR	8843534	PostIncDecOperationExpression	k ++	281:26:4640:4642	8842662	2	True				
ANR	8843535	Identifier	k		8842662	0					
ANR	8843536	IncDec	++		8842662	1					
ANR	8843537	CompoundStatement		279:31:4530:4530	8842662	3					
ANR	8843538	ExpressionStatement	ac_val2 [ k ] = block [ k << 3 ]	283:12:4660:4686	8842662	0	True				
ANR	8843539	AssignmentExpression	ac_val2 [ k ] = block [ k << 3 ]		8842662	0		=			
ANR	8843540	ArrayIndexing	ac_val2 [ k ]		8842662	0					
ANR	8843541	Identifier	ac_val2		8842662	0					
ANR	8843542	Identifier	k		8842662	1					
ANR	8843543	ArrayIndexing	block [ k << 3 ]		8842662	1					
ANR	8843544	Identifier	block		8842662	0					
ANR	8843545	ShiftExpression	k << 3		8842662	1		<<			
ANR	8843546	Identifier	k		8842662	0					
ANR	8843547	PrimaryExpression	3		8842662	1					
ANR	8843548	ExpressionStatement	ac_val2 [ k + 8 ] = block [ k ]	285:12:4701:4726	8842662	1	True				
ANR	8843549	AssignmentExpression	ac_val2 [ k + 8 ] = block [ k ]		8842662	0		=			
ANR	8843550	ArrayIndexing	ac_val2 [ k + 8 ]		8842662	0					
ANR	8843551	Identifier	ac_val2		8842662	0					
ANR	8843552	AdditiveExpression	k + 8		8842662	1		+			
ANR	8843553	Identifier	k		8842662	0					
ANR	8843554	PrimaryExpression	8		8842662	1					
ANR	8843555	ArrayIndexing	block [ k ]		8842662	1					
ANR	8843556	Identifier	block		8842662	0					
ANR	8843557	Identifier	k		8842662	1					
ANR	8843558	ForStatement	for ( k = 1 ; k < 64 ; k ++ )		8842662	12					
ANR	8843559	ForInit	k = 1 ;	293:12:4785:4790	8842662	0	True				
ANR	8843560	AssignmentExpression	k = 1		8842662	0		=			
ANR	8843561	Identifier	k		8842662	0					
ANR	8843562	PrimaryExpression	1		8842662	1					
ANR	8843563	Condition	k < 64	293:19:4792:4797	8842662	1	True				
ANR	8843564	RelationalExpression	k < 64		8842662	0		<			
ANR	8843565	Identifier	k		8842662	0					
ANR	8843566	PrimaryExpression	64		8842662	1					
ANR	8843567	PostIncDecOperationExpression	k ++	293:27:4800:4802	8842662	2	True				
ANR	8843568	Identifier	k		8842662	0					
ANR	8843569	IncDec	++		8842662	1					
ANR	8843570	IfStatement	if ( block [ k ] )		8842662	3					
ANR	8843571	Condition	block [ k ]	295:15:4821:4828	8842662	0	True				
ANR	8843572	ArrayIndexing	block [ k ]		8842662	0					
ANR	8843573	Identifier	block		8842662	0					
ANR	8843574	Identifier	k		8842662	1					
ANR	8843575	CompoundStatement		293:25:4716:4716	8842662	1					
ANR	8843576	ExpressionStatement	block [ k ] *= scale	297:16:4850:4867	8842662	0	True				
ANR	8843577	AssignmentExpression	block [ k ] *= scale		8842662	0		*=			
ANR	8843578	ArrayIndexing	block [ k ]		8842662	0					
ANR	8843579	Identifier	block		8842662	0					
ANR	8843580	Identifier	k		8842662	1					
ANR	8843581	Identifier	scale		8842662	1					
ANR	8843582	IfStatement	if ( ! v -> pquantizer )		8842662	1					
ANR	8843583	Condition	! v -> pquantizer	299:19:4889:4902	8842662	0	True				
ANR	8843584	UnaryOperationExpression	! v -> pquantizer		8842662	0					
ANR	8843585	UnaryOperator	!		8842662	0					
ANR	8843586	PtrMemberAccess	v -> pquantizer		8842662	1					
ANR	8843587	Identifier	v		8842662	0					
ANR	8843588	Identifier	pquantizer		8842662	1					
ANR	8843589	ExpressionStatement	block [ k ] += ( block [ k ] < 0 ) ? - mquant : mquant	301:20:4926:4971	8842662	1	True				
ANR	8843590	AssignmentExpression	block [ k ] += ( block [ k ] < 0 ) ? - mquant : mquant		8842662	0		+=			
ANR	8843591	ArrayIndexing	block [ k ]		8842662	0					
ANR	8843592	Identifier	block		8842662	0					
ANR	8843593	Identifier	k		8842662	1					
ANR	8843594	ConditionalExpression	( block [ k ] < 0 ) ? - mquant : mquant		8842662	1					
ANR	8843595	Condition	block [ k ] < 0		8842662	0					
ANR	8843596	RelationalExpression	block [ k ] < 0		8842662	0		<			
ANR	8843597	ArrayIndexing	block [ k ]		8842662	0					
ANR	8843598	Identifier	block		8842662	0					
ANR	8843599	Identifier	k		8842662	1					
ANR	8843600	PrimaryExpression	0		8842662	1					
ANR	8843601	UnaryOperationExpression	- mquant		8842662	1					
ANR	8843602	UnaryOperator	-		8842662	0					
ANR	8843603	Identifier	mquant		8842662	1					
ANR	8843604	Identifier	mquant		8842662	2					
ANR	8843605	IfStatement	if ( s -> ac_pred )		8842662	13					
ANR	8843606	Condition	s -> ac_pred	307:11:5002:5011	8842662	0	True				
ANR	8843607	PtrMemberAccess	s -> ac_pred		8842662	0					
ANR	8843608	Identifier	s		8842662	0					
ANR	8843609	Identifier	ac_pred		8842662	1					
ANR	8843610	ExpressionStatement	i = 63	307:23:5014:5020	8842662	1	True				
ANR	8843611	AssignmentExpression	i = 63		8842662	0		=			
ANR	8843612	Identifier	i		8842662	0					
ANR	8843613	PrimaryExpression	63		8842662	1					
ANR	8843614	Label	not_coded :	313:0:5032:5041	8842662	26	True				
ANR	8843615	Identifier	not_coded		8842662	0					
ANR	8843616	IfStatement	if ( ! coded )		8842662	27					
ANR	8843617	Condition	! coded	315:7:5051:5056	8842662	0	True				
ANR	8843618	UnaryOperationExpression	! coded		8842662	0					
ANR	8843619	UnaryOperator	!		8842662	0					
ANR	8843620	Identifier	coded		8842662	1					
ANR	8843621	CompoundStatement		315:8:4955:4967	8842662	1					
ANR	8843622	IdentifierDeclStatement	"int k , scale ;"	317:8:5070:5082	8842662	0	True				
ANR	8843623	IdentifierDecl	k		8842662	0					
ANR	8843624	IdentifierDeclType	int		8842662	0					
ANR	8843625	Identifier	k		8842662	1					
ANR	8843626	IdentifierDecl	scale		8842662	1					
ANR	8843627	IdentifierDeclType	int		8842662	0					
ANR	8843628	Identifier	scale		8842662	1					
ANR	8843629	ExpressionStatement	ac_val = s -> ac_val [ 0 ] [ 0 ] + s -> block_index [ n ] * 16	319:8:5093:5142	8842662	1	True				
ANR	8843630	AssignmentExpression	ac_val = s -> ac_val [ 0 ] [ 0 ] + s -> block_index [ n ] * 16		8842662	0		=			
ANR	8843631	Identifier	ac_val		8842662	0					
ANR	8843632	AdditiveExpression	s -> ac_val [ 0 ] [ 0 ] + s -> block_index [ n ] * 16		8842662	1		+			
ANR	8843633	ArrayIndexing	s -> ac_val [ 0 ] [ 0 ]		8842662	0					
ANR	8843634	ArrayIndexing	s -> ac_val [ 0 ]		8842662	0					
ANR	8843635	PtrMemberAccess	s -> ac_val		8842662	0					
ANR	8843636	Identifier	s		8842662	0					
ANR	8843637	Identifier	ac_val		8842662	1					
ANR	8843638	PrimaryExpression	0		8842662	1					
ANR	8843639	PrimaryExpression	0		8842662	1					
ANR	8843640	MultiplicativeExpression	s -> block_index [ n ] * 16		8842662	1		*			
ANR	8843641	ArrayIndexing	s -> block_index [ n ]		8842662	0					
ANR	8843642	PtrMemberAccess	s -> block_index		8842662	0					
ANR	8843643	Identifier	s		8842662	0					
ANR	8843644	Identifier	block_index		8842662	1					
ANR	8843645	Identifier	n		8842662	1					
ANR	8843646	PrimaryExpression	16		8842662	1					
ANR	8843647	ExpressionStatement	ac_val2 = ac_val	321:8:5153:5169	8842662	2	True				
ANR	8843648	AssignmentExpression	ac_val2 = ac_val		8842662	0		=			
ANR	8843649	Identifier	ac_val2		8842662	0					
ANR	8843650	Identifier	ac_val		8842662	1					
ANR	8843651	IfStatement	if ( ! c_avail )		8842662	3					
ANR	8843652	Condition	! c_avail	325:11:5185:5192	8842662	0	True				
ANR	8843653	UnaryOperationExpression	! c_avail		8842662	0					
ANR	8843654	UnaryOperator	!		8842662	0					
ANR	8843655	Identifier	c_avail		8842662	1					
ANR	8843656	CompoundStatement		323:21:5080:5080	8842662	1					
ANR	8843657	ExpressionStatement	"memset ( ac_val , 0 , 8 * sizeof ( ac_val [ 0 ] ) )"	327:12:5210:5250	8842662	0	True				
ANR	8843658	CallExpression	"memset ( ac_val , 0 , 8 * sizeof ( ac_val [ 0 ] ) )"		8842662	0					
ANR	8843659	Callee	memset		8842662	0					
ANR	8843660	Identifier	memset		8842662	0					
ANR	8843661	ArgumentList	ac_val		8842662	1					
ANR	8843662	Argument	ac_val		8842662	0					
ANR	8843663	Identifier	ac_val		8842662	0					
ANR	8843664	Argument	0		8842662	1					
ANR	8843665	PrimaryExpression	0		8842662	0					
ANR	8843666	Argument	8 * sizeof ( ac_val [ 0 ] )		8842662	2					
ANR	8843667	MultiplicativeExpression	8 * sizeof ( ac_val [ 0 ] )		8842662	0		*			
ANR	8843668	PrimaryExpression	8		8842662	0					
ANR	8843669	SizeofExpression	sizeof ( ac_val [ 0 ] )		8842662	1					
ANR	8843670	Sizeof	sizeof		8842662	0					
ANR	8843671	ArrayIndexing	ac_val [ 0 ]		8842662	1					
ANR	8843672	Identifier	ac_val		8842662	0					
ANR	8843673	PrimaryExpression	0		8842662	1					
ANR	8843674	ExpressionStatement	dc_pred_dir = 0	329:12:5265:5280	8842662	1	True				
ANR	8843675	AssignmentExpression	dc_pred_dir = 0		8842662	0		=			
ANR	8843676	Identifier	dc_pred_dir		8842662	0					
ANR	8843677	PrimaryExpression	0		8842662	1					
ANR	8843678	IfStatement	if ( ! a_avail )		8842662	4					
ANR	8843679	Condition	! a_avail	333:11:5305:5312	8842662	0	True				
ANR	8843680	UnaryOperationExpression	! a_avail		8842662	0					
ANR	8843681	UnaryOperator	!		8842662	0					
ANR	8843682	Identifier	a_avail		8842662	1					
ANR	8843683	CompoundStatement		331:21:5200:5200	8842662	1					
ANR	8843684	ExpressionStatement	"memset ( ac_val + 8 , 0 , 8 * sizeof ( ac_val [ 0 ] ) )"	335:12:5330:5374	8842662	0	True				
ANR	8843685	CallExpression	"memset ( ac_val + 8 , 0 , 8 * sizeof ( ac_val [ 0 ] ) )"		8842662	0					
ANR	8843686	Callee	memset		8842662	0					
ANR	8843687	Identifier	memset		8842662	0					
ANR	8843688	ArgumentList	ac_val + 8		8842662	1					
ANR	8843689	Argument	ac_val + 8		8842662	0					
ANR	8843690	AdditiveExpression	ac_val + 8		8842662	0		+			
ANR	8843691	Identifier	ac_val		8842662	0					
ANR	8843692	PrimaryExpression	8		8842662	1					
ANR	8843693	Argument	0		8842662	1					
ANR	8843694	PrimaryExpression	0		8842662	0					
ANR	8843695	Argument	8 * sizeof ( ac_val [ 0 ] )		8842662	2					
ANR	8843696	MultiplicativeExpression	8 * sizeof ( ac_val [ 0 ] )		8842662	0		*			
ANR	8843697	PrimaryExpression	8		8842662	0					
ANR	8843698	SizeofExpression	sizeof ( ac_val [ 0 ] )		8842662	1					
ANR	8843699	Sizeof	sizeof		8842662	0					
ANR	8843700	ArrayIndexing	ac_val [ 0 ]		8842662	1					
ANR	8843701	Identifier	ac_val		8842662	0					
ANR	8843702	PrimaryExpression	0		8842662	1					
ANR	8843703	ExpressionStatement	dc_pred_dir = 1	337:12:5389:5404	8842662	1	True				
ANR	8843704	AssignmentExpression	dc_pred_dir = 1		8842662	0		=			
ANR	8843705	Identifier	dc_pred_dir		8842662	0					
ANR	8843706	PrimaryExpression	1		8842662	1					
ANR	8843707	ExpressionStatement	scale = mquant * 2 + v -> halfpq	343:8:5428:5458	8842662	5	True				
ANR	8843708	AssignmentExpression	scale = mquant * 2 + v -> halfpq		8842662	0		=			
ANR	8843709	Identifier	scale		8842662	0					
ANR	8843710	AdditiveExpression	mquant * 2 + v -> halfpq		8842662	1		+			
ANR	8843711	MultiplicativeExpression	mquant * 2		8842662	0		*			
ANR	8843712	Identifier	mquant		8842662	0					
ANR	8843713	PrimaryExpression	2		8842662	1					
ANR	8843714	PtrMemberAccess	v -> halfpq		8842662	1					
ANR	8843715	Identifier	v		8842662	0					
ANR	8843716	Identifier	halfpq		8842662	1					
ANR	8843717	ExpressionStatement	"memset ( ac_val2 , 0 , 16 * 2 )"	345:8:5469:5495	8842662	6	True				
ANR	8843718	CallExpression	"memset ( ac_val2 , 0 , 16 * 2 )"		8842662	0					
ANR	8843719	Callee	memset		8842662	0					
ANR	8843720	Identifier	memset		8842662	0					
ANR	8843721	ArgumentList	ac_val2		8842662	1					
ANR	8843722	Argument	ac_val2		8842662	0					
ANR	8843723	Identifier	ac_val2		8842662	0					
ANR	8843724	Argument	0		8842662	1					
ANR	8843725	PrimaryExpression	0		8842662	0					
ANR	8843726	Argument	16 * 2		8842662	2					
ANR	8843727	MultiplicativeExpression	16 * 2		8842662	0		*			
ANR	8843728	PrimaryExpression	16		8842662	0					
ANR	8843729	PrimaryExpression	2		8842662	1					
ANR	8843730	IfStatement	if ( dc_pred_dir )		8842662	7					
ANR	8843731	Condition	dc_pred_dir	347:11:5509:5519	8842662	0	True				
ANR	8843732	Identifier	dc_pred_dir		8842662	0					
ANR	8843733	CompoundStatement		345:24:5407:5407	8842662	1					
ANR	8843734	ExpressionStatement	ac_val -= 16	349:12:5543:5555	8842662	0	True				
ANR	8843735	AssignmentExpression	ac_val -= 16		8842662	0		-=			
ANR	8843736	Identifier	ac_val		8842662	0					
ANR	8843737	PrimaryExpression	16		8842662	1					
ANR	8843738	IfStatement	if ( s -> ac_pred )		8842662	1					
ANR	8843739	Condition	s -> ac_pred	351:15:5573:5582	8842662	0	True				
ANR	8843740	PtrMemberAccess	s -> ac_pred		8842662	0					
ANR	8843741	Identifier	s		8842662	0					
ANR	8843742	Identifier	ac_pred		8842662	1					
ANR	8843743	ExpressionStatement	"memcpy ( ac_val2 , ac_val , 8 * 2 )"	353:16:5602:5632	8842662	1	True				
ANR	8843744	CallExpression	"memcpy ( ac_val2 , ac_val , 8 * 2 )"		8842662	0					
ANR	8843745	Callee	memcpy		8842662	0					
ANR	8843746	Identifier	memcpy		8842662	0					
ANR	8843747	ArgumentList	ac_val2		8842662	1					
ANR	8843748	Argument	ac_val2		8842662	0					
ANR	8843749	Identifier	ac_val2		8842662	0					
ANR	8843750	Argument	ac_val		8842662	1					
ANR	8843751	Identifier	ac_val		8842662	0					
ANR	8843752	Argument	8 * 2		8842662	2					
ANR	8843753	MultiplicativeExpression	8 * 2		8842662	0		*			
ANR	8843754	PrimaryExpression	8		8842662	0					
ANR	8843755	PrimaryExpression	2		8842662	1					
ANR	8843756	ElseStatement	else		8842662	0					
ANR	8843757	CompoundStatement		353:15:5535:5535	8842662	0					
ANR	8843758	ExpressionStatement	ac_val -= 16 * s -> block_wrap [ n ]	357:12:5670:5701	8842662	0	True				
ANR	8843759	AssignmentExpression	ac_val -= 16 * s -> block_wrap [ n ]		8842662	0		-=			
ANR	8843760	Identifier	ac_val		8842662	0					
ANR	8843761	MultiplicativeExpression	16 * s -> block_wrap [ n ]		8842662	1		*			
ANR	8843762	PrimaryExpression	16		8842662	0					
ANR	8843763	ArrayIndexing	s -> block_wrap [ n ]		8842662	1					
ANR	8843764	PtrMemberAccess	s -> block_wrap		8842662	0					
ANR	8843765	Identifier	s		8842662	0					
ANR	8843766	Identifier	block_wrap		8842662	1					
ANR	8843767	Identifier	n		8842662	1					
ANR	8843768	IfStatement	if ( s -> ac_pred )		8842662	1					
ANR	8843769	Condition	s -> ac_pred	359:15:5719:5728	8842662	0	True				
ANR	8843770	PtrMemberAccess	s -> ac_pred		8842662	0					
ANR	8843771	Identifier	s		8842662	0					
ANR	8843772	Identifier	ac_pred		8842662	1					
ANR	8843773	ExpressionStatement	"memcpy ( ac_val2 + 8 , ac_val + 8 , 8 * 2 )"	361:16:5748:5786	8842662	1	True				
ANR	8843774	CallExpression	"memcpy ( ac_val2 + 8 , ac_val + 8 , 8 * 2 )"		8842662	0					
ANR	8843775	Callee	memcpy		8842662	0					
ANR	8843776	Identifier	memcpy		8842662	0					
ANR	8843777	ArgumentList	ac_val2 + 8		8842662	1					
ANR	8843778	Argument	ac_val2 + 8		8842662	0					
ANR	8843779	AdditiveExpression	ac_val2 + 8		8842662	0		+			
ANR	8843780	Identifier	ac_val2		8842662	0					
ANR	8843781	PrimaryExpression	8		8842662	1					
ANR	8843782	Argument	ac_val + 8		8842662	1					
ANR	8843783	AdditiveExpression	ac_val + 8		8842662	0		+			
ANR	8843784	Identifier	ac_val		8842662	0					
ANR	8843785	PrimaryExpression	8		8842662	1					
ANR	8843786	Argument	8 * 2		8842662	2					
ANR	8843787	MultiplicativeExpression	8 * 2		8842662	0		*			
ANR	8843788	PrimaryExpression	8		8842662	0					
ANR	8843789	PrimaryExpression	2		8842662	1					
ANR	8843790	IfStatement	if ( s -> ac_pred )		8842662	8					
ANR	8843791	Condition	s -> ac_pred	369:11:5858:5867	8842662	0	True				
ANR	8843792	PtrMemberAccess	s -> ac_pred		8842662	0					
ANR	8843793	Identifier	s		8842662	0					
ANR	8843794	Identifier	ac_pred		8842662	1					
ANR	8843795	CompoundStatement		367:23:5755:5755	8842662	1					
ANR	8843796	IfStatement	if ( dc_pred_dir )		8842662	0					
ANR	8843797	Condition	dc_pred_dir	371:15:5888:5898	8842662	0	True				
ANR	8843798	Identifier	dc_pred_dir		8842662	0					
ANR	8843799	CompoundStatement		369:28:5786:5786	8842662	1					
ANR	8843800	ForStatement	for ( k = 1 ; k < 8 ; k ++ )		8842662	0					
ANR	8843801	ForInit	k = 1 ;	373:20:5931:5936	8842662	0	True				
ANR	8843802	AssignmentExpression	k = 1		8842662	0		=			
ANR	8843803	Identifier	k		8842662	0					
ANR	8843804	PrimaryExpression	1		8842662	1					
ANR	8843805	Condition	k < 8	373:27:5938:5942	8842662	1	True				
ANR	8843806	RelationalExpression	k < 8		8842662	0		<			
ANR	8843807	Identifier	k		8842662	0					
ANR	8843808	PrimaryExpression	8		8842662	1					
ANR	8843809	PostIncDecOperationExpression	k ++	373:34:5945:5947	8842662	2	True				
ANR	8843810	Identifier	k		8842662	0					
ANR	8843811	IncDec	++		8842662	1					
ANR	8843812	CompoundStatement		371:39:5835:5835	8842662	3					
ANR	8843813	ExpressionStatement	block [ k << 3 ] = ac_val [ k ] * scale	375:20:5973:6006	8842662	0	True				
ANR	8843814	AssignmentExpression	block [ k << 3 ] = ac_val [ k ] * scale		8842662	0		=			
ANR	8843815	ArrayIndexing	block [ k << 3 ]		8842662	0					
ANR	8843816	Identifier	block		8842662	0					
ANR	8843817	ShiftExpression	k << 3		8842662	1		<<			
ANR	8843818	Identifier	k		8842662	0					
ANR	8843819	PrimaryExpression	3		8842662	1					
ANR	8843820	MultiplicativeExpression	ac_val [ k ] * scale		8842662	1		*			
ANR	8843821	ArrayIndexing	ac_val [ k ]		8842662	0					
ANR	8843822	Identifier	ac_val		8842662	0					
ANR	8843823	Identifier	k		8842662	1					
ANR	8843824	Identifier	scale		8842662	1					
ANR	8843825	IfStatement	if ( ! v -> pquantizer )		8842662	1					
ANR	8843826	Condition	! v -> pquantizer	377:23:6032:6045	8842662	0	True				
ANR	8843827	UnaryOperationExpression	! v -> pquantizer		8842662	0					
ANR	8843828	UnaryOperator	!		8842662	0					
ANR	8843829	PtrMemberAccess	v -> pquantizer		8842662	1					
ANR	8843830	Identifier	v		8842662	0					
ANR	8843831	Identifier	pquantizer		8842662	1					
ANR	8843832	ExpressionStatement	block [ k << 3 ] += ( block [ k << 3 ] < 0 ) ? - mquant : mquant	379:24:6073:6128	8842662	1	True				
ANR	8843833	AssignmentExpression	block [ k << 3 ] += ( block [ k << 3 ] < 0 ) ? - mquant : mquant		8842662	0		+=			
ANR	8843834	ArrayIndexing	block [ k << 3 ]		8842662	0					
ANR	8843835	Identifier	block		8842662	0					
ANR	8843836	ShiftExpression	k << 3		8842662	1		<<			
ANR	8843837	Identifier	k		8842662	0					
ANR	8843838	PrimaryExpression	3		8842662	1					
ANR	8843839	ConditionalExpression	( block [ k << 3 ] < 0 ) ? - mquant : mquant		8842662	1					
ANR	8843840	Condition	block [ k << 3 ] < 0		8842662	0					
ANR	8843841	RelationalExpression	block [ k << 3 ] < 0		8842662	0		<			
ANR	8843842	ArrayIndexing	block [ k << 3 ]		8842662	0					
ANR	8843843	Identifier	block		8842662	0					
ANR	8843844	ShiftExpression	k << 3		8842662	1		<<			
ANR	8843845	Identifier	k		8842662	0					
ANR	8843846	PrimaryExpression	3		8842662	1					
ANR	8843847	PrimaryExpression	0		8842662	1					
ANR	8843848	UnaryOperationExpression	- mquant		8842662	1					
ANR	8843849	UnaryOperator	-		8842662	0					
ANR	8843850	Identifier	mquant		8842662	1					
ANR	8843851	Identifier	mquant		8842662	2					
ANR	8843852	ElseStatement	else		8842662	0					
ANR	8843853	CompoundStatement		381:19:6054:6054	8842662	0					
ANR	8843854	ForStatement	for ( k = 1 ; k < 8 ; k ++ )		8842662	0					
ANR	8843855	ForInit	k = 1 ;	385:20:6198:6203	8842662	0	True				
ANR	8843856	AssignmentExpression	k = 1		8842662	0		=			
ANR	8843857	Identifier	k		8842662	0					
ANR	8843858	PrimaryExpression	1		8842662	1					
ANR	8843859	Condition	k < 8	385:27:6205:6209	8842662	1	True				
ANR	8843860	RelationalExpression	k < 8		8842662	0		<			
ANR	8843861	Identifier	k		8842662	0					
ANR	8843862	PrimaryExpression	8		8842662	1					
ANR	8843863	PostIncDecOperationExpression	k ++	385:34:6212:6214	8842662	2	True				
ANR	8843864	Identifier	k		8842662	0					
ANR	8843865	IncDec	++		8842662	1					
ANR	8843866	CompoundStatement		383:39:6102:6102	8842662	3					
ANR	8843867	ExpressionStatement	block [ k ] = ac_val [ k + 8 ] * scale	387:20:6240:6272	8842662	0	True				
ANR	8843868	AssignmentExpression	block [ k ] = ac_val [ k + 8 ] * scale		8842662	0		=			
ANR	8843869	ArrayIndexing	block [ k ]		8842662	0					
ANR	8843870	Identifier	block		8842662	0					
ANR	8843871	Identifier	k		8842662	1					
ANR	8843872	MultiplicativeExpression	ac_val [ k + 8 ] * scale		8842662	1		*			
ANR	8843873	ArrayIndexing	ac_val [ k + 8 ]		8842662	0					
ANR	8843874	Identifier	ac_val		8842662	0					
ANR	8843875	AdditiveExpression	k + 8		8842662	1		+			
ANR	8843876	Identifier	k		8842662	0					
ANR	8843877	PrimaryExpression	8		8842662	1					
ANR	8843878	Identifier	scale		8842662	1					
ANR	8843879	IfStatement	if ( ! v -> pquantizer )		8842662	1					
ANR	8843880	Condition	! v -> pquantizer	389:23:6298:6311	8842662	0	True				
ANR	8843881	UnaryOperationExpression	! v -> pquantizer		8842662	0					
ANR	8843882	UnaryOperator	!		8842662	0					
ANR	8843883	PtrMemberAccess	v -> pquantizer		8842662	1					
ANR	8843884	Identifier	v		8842662	0					
ANR	8843885	Identifier	pquantizer		8842662	1					
ANR	8843886	ExpressionStatement	block [ k ] += ( block [ k ] < 0 ) ? - mquant : mquant	391:24:6339:6384	8842662	1	True				
ANR	8843887	AssignmentExpression	block [ k ] += ( block [ k ] < 0 ) ? - mquant : mquant		8842662	0		+=			
ANR	8843888	ArrayIndexing	block [ k ]		8842662	0					
ANR	8843889	Identifier	block		8842662	0					
ANR	8843890	Identifier	k		8842662	1					
ANR	8843891	ConditionalExpression	( block [ k ] < 0 ) ? - mquant : mquant		8842662	1					
ANR	8843892	Condition	block [ k ] < 0		8842662	0					
ANR	8843893	RelationalExpression	block [ k ] < 0		8842662	0		<			
ANR	8843894	ArrayIndexing	block [ k ]		8842662	0					
ANR	8843895	Identifier	block		8842662	0					
ANR	8843896	Identifier	k		8842662	1					
ANR	8843897	PrimaryExpression	0		8842662	1					
ANR	8843898	UnaryOperationExpression	- mquant		8842662	1					
ANR	8843899	UnaryOperator	-		8842662	0					
ANR	8843900	Identifier	mquant		8842662	1					
ANR	8843901	Identifier	mquant		8842662	2					
ANR	8843902	ExpressionStatement	i = 63	397:12:6433:6439	8842662	1	True				
ANR	8843903	AssignmentExpression	i = 63		8842662	0		=			
ANR	8843904	Identifier	i		8842662	0					
ANR	8843905	PrimaryExpression	63		8842662	1					
ANR	8843906	ExpressionStatement	s -> block_last_index [ n ] = i	403:4:6464:6490	8842662	28	True				
ANR	8843907	AssignmentExpression	s -> block_last_index [ n ] = i		8842662	0		=			
ANR	8843908	ArrayIndexing	s -> block_last_index [ n ]		8842662	0					
ANR	8843909	PtrMemberAccess	s -> block_last_index		8842662	0					
ANR	8843910	Identifier	s		8842662	0					
ANR	8843911	Identifier	block_last_index		8842662	1					
ANR	8843912	Identifier	n		8842662	1					
ANR	8843913	Identifier	i		8842662	1					
ANR	8843914	ReturnStatement	return 0 ;	407:4:6499:6507	8842662	29	True				
ANR	8843915	PrimaryExpression	0		8842662	0					
ANR	8843916	ReturnType	static int		8842662	1					
ANR	8843917	Identifier	vc1_decode_intra_block		8842662	2					
ANR	8843918	ParameterList	"VC1Context * v , DCTELEM block [ 64 ] , int n , int coded , int mquant , int codingset"		8842662	3					
ANR	8843919	Parameter	VC1Context * v	1:34:34:46	8842662	0	True				
ANR	8843920	ParameterType	VC1Context *		8842662	0					
ANR	8843921	Identifier	v		8842662	1					
ANR	8843922	Parameter	DCTELEM block [ 64 ]	1:49:49:65	8842662	1	True				
ANR	8843923	ParameterType	DCTELEM [ 64 ]		8842662	0					
ANR	8843924	Identifier	block		8842662	1					
ANR	8843925	Parameter	int n	1:68:68:72	8842662	2	True				
ANR	8843926	ParameterType	int		8842662	0					
ANR	8843927	Identifier	n		8842662	1					
ANR	8843928	Parameter	int coded	1:75:75:83	8842662	3	True				
ANR	8843929	ParameterType	int		8842662	0					
ANR	8843930	Identifier	coded		8842662	1					
ANR	8843931	Parameter	int mquant	1:86:86:95	8842662	4	True				
ANR	8843932	ParameterType	int		8842662	0					
ANR	8843933	Identifier	mquant		8842662	1					
ANR	8843934	Parameter	int codingset	1:98:98:110	8842662	5	True				
ANR	8843935	ParameterType	int		8842662	0					
ANR	8843936	Identifier	codingset		8842662	1					
ANR	8843937	CFGEntryNode	ENTRY		8842662		True				
ANR	8843938	CFGExitNode	EXIT		8842662		True				
ANR	8843939	Symbol	* v		8842662						
ANR	8843940	Symbol	& v -> s		8842662						
ANR	8843941	Symbol	s -> block_wrap		8842662						
ANR	8843942	Symbol	* zz_table		8842662						
ANR	8843943	Symbol	s -> current_picture		8842662						
ANR	8843944	Symbol	s -> ac_val		8842662						
ANR	8843945	Symbol	* s -> block_wrap		8842662						
ANR	8843946	Symbol	* s -> current_picture . qscale_table		8842662						
ANR	8843947	Symbol	block		8842662						
ANR	8843948	Symbol	v -> s		8842662						
ANR	8843949	Symbol	dc_pred_dir		8842662						
ANR	8843950	Symbol	dc_val		8842662						
ANR	8843951	Symbol	* mb_pos		8842662						
ANR	8843952	Symbol	* * * s		8842662						
ANR	8843953	Symbol	* * s -> ac_val		8842662						
ANR	8843954	Symbol	& s -> gb		8842662						
ANR	8843955	Symbol	* s -> y_dc_scale_table		8842662						
ANR	8843956	Symbol	mb_pos		8842662						
ANR	8843957	Symbol	vc1_pred_dc		8842662						
ANR	8843958	Symbol	* s -> current_picture . mb_type		8842662						
ANR	8843959	Symbol	dcdiff		8842662						
ANR	8843960	Symbol	skip		8842662						
ANR	8843961	Symbol	* * s		8842662						
ANR	8843962	Symbol	s -> y_dc_scale_table		8842662						
ANR	8843963	Symbol	AV_LOG_ERROR		8842662						
ANR	8843964	Symbol	* s -> current_picture		8842662						
ANR	8843965	Symbol	& v -> s . gb		8842662						
ANR	8843966	Symbol	v -> halfpq		8842662						
ANR	8843967	Symbol	i		8842662						
ANR	8843968	Symbol	k		8842662						
ANR	8843969	Symbol	* s -> ac_val		8842662						
ANR	8843970	Symbol	n		8842662						
ANR	8843971	Symbol	ff_msmp4_dc_luma_vlc		8842662						
ANR	8843972	Symbol	s -> block_last_index		8842662						
ANR	8843973	Symbol	s -> dc_table_index		8842662						
ANR	8843974	Symbol	DC_VLC_BITS		8842662						
ANR	8843975	Symbol	s		8842662						
ANR	8843976	Symbol	v		8842662						
ANR	8843977	Symbol	a_avail		8842662						
ANR	8843978	Symbol	mb_pos2		8842662						
ANR	8843979	Symbol	get_vlc2		8842662						
ANR	8843980	Symbol	vc1_dqscale		8842662						
ANR	8843981	Symbol	s -> c_dc_scale_table		8842662						
ANR	8843982	Symbol	* ff_msmp4_dc_chroma_vlc		8842662						
ANR	8843983	Symbol	& value		8842662						
ANR	8843984	Symbol	* mquant		8842662						
ANR	8843985	Symbol	s -> block_index		8842662						
ANR	8843986	Symbol	* q1		8842662						
ANR	8843987	Symbol	get_bits		8842662						
ANR	8843988	Symbol	s -> c_dc_scale		8842662						
ANR	8843989	Symbol	* s -> mb_stride		8842662						
ANR	8843990	Symbol	* s -> block_index		8842662						
ANR	8843991	Symbol	mquant		8842662						
ANR	8843992	Symbol	& last		8842662						
ANR	8843993	Symbol	c_avail		8842662						
ANR	8843994	Symbol	ac_val		8842662						
ANR	8843995	Symbol	run_diff		8842662						
ANR	8843996	Symbol	last		8842662						
ANR	8843997	Symbol	s -> current_picture . qscale_table		8842662						
ANR	8843998	Symbol	s -> mb_x		8842662						
ANR	8843999	Symbol	s -> mb_y		8842662						
ANR	8844000	Symbol	coded		8842662						
ANR	8844001	Symbol	ac_val2		8842662						
ANR	8844002	Symbol	zz_table		8842662						
ANR	8844003	Symbol	s -> avctx		8842662						
ANR	8844004	Symbol	* vc1_dqscale		8842662						
ANR	8844005	Symbol	ff_msmp4_dc_luma_vlc [ s -> dc_table_index ] . table		8842662						
ANR	8844006	Symbol	ff_msmp4_dc_chroma_vlc		8842662						
ANR	8844007	Symbol	* mb_pos2		8842662						
ANR	8844008	Symbol	* ac_val2		8842662						
ANR	8844009	Symbol	s -> mb_stride		8842662						
ANR	8844010	Symbol	* ff_msmp4_dc_luma_vlc		8842662						
ANR	8844011	Symbol	IS_INTRA		8842662						
ANR	8844012	Symbol	* s -> dc_table_index		8842662						
ANR	8844013	Symbol	scale		8842662						
ANR	8844014	Symbol	ff_msmp4_dc_chroma_vlc [ s -> dc_table_index ] . table		8842662						
ANR	8844015	Symbol	s -> current_picture . mb_type		8842662						
ANR	8844016	Symbol	codingset		8842662						
ANR	8844017	Symbol	v -> overlap		8842662						
ANR	8844018	Symbol	* s -> c_dc_scale_table		8842662						
ANR	8844019	Symbol	v -> pquantizer		8842662						
ANR	8844020	Symbol	s -> y_dc_scale		8842662						
ANR	8844021	Symbol	gb		8842662						
ANR	8844022	Symbol	s -> ac_pred		8842662						
ANR	8844023	Symbol	value		8842662						
ANR	8844024	Symbol	q1		8842662						
ANR	8844025	Symbol	q2		8842662						
ANR	8844026	Symbol	* s -> block_last_index		8842662						
ANR	8844027	Symbol	& dc_val		8842662						
ANR	8844028	Symbol	* ac_val		8842662						
ANR	8844029	Symbol	& skip		8842662						
ANR	8844030	Symbol	* dc_val		8842662						
ANR	8844031	Symbol	& dc_pred_dir		8842662						
ANR	8844032	Symbol	* block		8842662						
ANR	8844033	Symbol	* * zz_table		8842662						
ANR	8844034	Symbol	vc1_simple_progressive_8x8_zz		8842662						
ANR	8844035	Symbol	* k		8842662						
ANR	8844036	Symbol	* n		8842662						
ANR	8844037	Symbol	* s		8842662						
