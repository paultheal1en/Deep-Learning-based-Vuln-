command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	7217854	File	/home/p4ultr4n/workplace/ReVeal/raw_code/ra288_decode_frame_0.c								
ANR	7217855	Function	ra288_decode_frame	1:0:0:974							
ANR	7217856	FunctionDef	"ra288_decode_frame (AVCodecContext * avctx , void * data , int * data_size , const uint8_t * buf , int buf_size)"		7217855	0					
ANR	7217857	CompoundStatement		7:0:180:974	7217855	0					
ANR	7217858	IdentifierDeclStatement	int16_t * out = data ;	9:4:187:206	7217855	0	True				
ANR	7217859	IdentifierDecl	* out = data		7217855	0					
ANR	7217860	IdentifierDeclType	int16_t *		7217855	0					
ANR	7217861	Identifier	out		7217855	1					
ANR	7217862	AssignmentExpression	* out = data		7217855	2		=			
ANR	7217863	Identifier	data		7217855	0					
ANR	7217864	Identifier	data		7217855	1					
ANR	7217865	IdentifierDeclStatement	"int i , j ;"	11:4:213:221	7217855	1	True				
ANR	7217866	IdentifierDecl	i		7217855	0					
ANR	7217867	IdentifierDeclType	int		7217855	0					
ANR	7217868	Identifier	i		7217855	1					
ANR	7217869	IdentifierDecl	j		7217855	1					
ANR	7217870	IdentifierDeclType	int		7217855	0					
ANR	7217871	Identifier	j		7217855	1					
ANR	7217872	IdentifierDeclStatement	RA288Context * ractx = avctx -> priv_data ;	13:4:228:266	7217855	2	True				
ANR	7217873	IdentifierDecl	* ractx = avctx -> priv_data		7217855	0					
ANR	7217874	IdentifierDeclType	RA288Context *		7217855	0					
ANR	7217875	Identifier	ractx		7217855	1					
ANR	7217876	AssignmentExpression	* ractx = avctx -> priv_data		7217855	2		=			
ANR	7217877	Identifier	ractx		7217855	0					
ANR	7217878	PtrMemberAccess	avctx -> priv_data		7217855	1					
ANR	7217879	Identifier	avctx		7217855	0					
ANR	7217880	Identifier	priv_data		7217855	1					
ANR	7217881	IdentifierDeclStatement	GetBitContext gb ;	15:4:273:289	7217855	3	True				
ANR	7217882	IdentifierDecl	gb		7217855	0					
ANR	7217883	IdentifierDeclType	GetBitContext		7217855	0					
ANR	7217884	Identifier	gb		7217855	1					
ANR	7217885	IfStatement	if ( buf_size < avctx -> block_align )		7217855	4					
ANR	7217886	Condition	buf_size < avctx -> block_align	19:8:302:330	7217855	0	True				
ANR	7217887	RelationalExpression	buf_size < avctx -> block_align		7217855	0		<			
ANR	7217888	Identifier	buf_size		7217855	0					
ANR	7217889	PtrMemberAccess	avctx -> block_align		7217855	1					
ANR	7217890	Identifier	avctx		7217855	0					
ANR	7217891	Identifier	block_align		7217855	1					
ANR	7217892	CompoundStatement		13:39:152:152	7217855	1					
ANR	7217893	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Error! Input buffer is too small [%d<%d]\\n"" , buf_size , avctx -> block_align )"	21:8:344:479	7217855	0	True				
ANR	7217894	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Error! Input buffer is too small [%d<%d]\\n"" , buf_size , avctx -> block_align )"		7217855	0					
ANR	7217895	Callee	av_log		7217855	0					
ANR	7217896	Identifier	av_log		7217855	0					
ANR	7217897	ArgumentList	avctx		7217855	1					
ANR	7217898	Argument	avctx		7217855	0					
ANR	7217899	Identifier	avctx		7217855	0					
ANR	7217900	Argument	AV_LOG_ERROR		7217855	1					
ANR	7217901	Identifier	AV_LOG_ERROR		7217855	0					
ANR	7217902	Argument	"""Error! Input buffer is too small [%d<%d]\\n"""		7217855	2					
ANR	7217903	PrimaryExpression	"""Error! Input buffer is too small [%d<%d]\\n"""		7217855	0					
ANR	7217904	Argument	buf_size		7217855	3					
ANR	7217905	Identifier	buf_size		7217855	0					
ANR	7217906	Argument	avctx -> block_align		7217855	4					
ANR	7217907	PtrMemberAccess	avctx -> block_align		7217855	0					
ANR	7217908	Identifier	avctx		7217855	0					
ANR	7217909	Identifier	block_align		7217855	1					
ANR	7217910	ReturnStatement	return 0 ;	27:8:490:498	7217855	1	True				
ANR	7217911	PrimaryExpression	0		7217855	0					
ANR	7217912	ExpressionStatement	"init_get_bits ( & gb , buf , avctx -> block_align * 8 )"	33:4:514:561	7217855	5	True				
ANR	7217913	CallExpression	"init_get_bits ( & gb , buf , avctx -> block_align * 8 )"		7217855	0					
ANR	7217914	Callee	init_get_bits		7217855	0					
ANR	7217915	Identifier	init_get_bits		7217855	0					
ANR	7217916	ArgumentList	& gb		7217855	1					
ANR	7217917	Argument	& gb		7217855	0					
ANR	7217918	UnaryOperationExpression	& gb		7217855	0					
ANR	7217919	UnaryOperator	&		7217855	0					
ANR	7217920	Identifier	gb		7217855	1					
ANR	7217921	Argument	buf		7217855	1					
ANR	7217922	Identifier	buf		7217855	0					
ANR	7217923	Argument	avctx -> block_align * 8		7217855	2					
ANR	7217924	MultiplicativeExpression	avctx -> block_align * 8		7217855	0		*			
ANR	7217925	PtrMemberAccess	avctx -> block_align		7217855	0					
ANR	7217926	Identifier	avctx		7217855	0					
ANR	7217927	Identifier	block_align		7217855	1					
ANR	7217928	PrimaryExpression	8		7217855	1					
ANR	7217929	ForStatement	for ( i = 0 ; i < 32 ; i ++ )		7217855	6					
ANR	7217930	ForInit	i = 0 ;	37:9:575:578	7217855	0	True				
ANR	7217931	AssignmentExpression	i = 0		7217855	0		=			
ANR	7217932	Identifier	i		7217855	0					
ANR	7217933	PrimaryExpression	0		7217855	1					
ANR	7217934	Condition	i < 32	37:14:580:585	7217855	1	True				
ANR	7217935	RelationalExpression	i < 32		7217855	0		<			
ANR	7217936	Identifier	i		7217855	0					
ANR	7217937	PrimaryExpression	32		7217855	1					
ANR	7217938	PostIncDecOperationExpression	i ++	37:22:588:590	7217855	2	True				
ANR	7217939	Identifier	i		7217855	0					
ANR	7217940	IncDec	++		7217855	1					
ANR	7217941	CompoundStatement		35:8:473:511	7217855	3					
ANR	7217942	IdentifierDeclStatement	"float gain = amptable [ get_bits ( & gb , 3 ) ] ;"	39:8:604:643	7217855	0	True				
ANR	7217943	IdentifierDecl	"gain = amptable [ get_bits ( & gb , 3 ) ]"		7217855	0					
ANR	7217944	IdentifierDeclType	float		7217855	0					
ANR	7217945	Identifier	gain		7217855	1					
ANR	7217946	AssignmentExpression	"gain = amptable [ get_bits ( & gb , 3 ) ]"		7217855	2		=			
ANR	7217947	Identifier	gain		7217855	0					
ANR	7217948	ArrayIndexing	"amptable [ get_bits ( & gb , 3 ) ]"		7217855	1					
ANR	7217949	Identifier	amptable		7217855	0					
ANR	7217950	CallExpression	"get_bits ( & gb , 3 )"		7217855	1					
ANR	7217951	Callee	get_bits		7217855	0					
ANR	7217952	Identifier	get_bits		7217855	0					
ANR	7217953	ArgumentList	& gb		7217855	1					
ANR	7217954	Argument	& gb		7217855	0					
ANR	7217955	UnaryOperationExpression	& gb		7217855	0					
ANR	7217956	UnaryOperator	&		7217855	0					
ANR	7217957	Identifier	gb		7217855	1					
ANR	7217958	Argument	3		7217855	1					
ANR	7217959	PrimaryExpression	3		7217855	0					
ANR	7217960	IdentifierDeclStatement	"int cb_coef = get_bits ( & gb , 6 + ( i & 1 ) ) ;"	41:8:654:692	7217855	1	True				
ANR	7217961	IdentifierDecl	"cb_coef = get_bits ( & gb , 6 + ( i & 1 ) )"		7217855	0					
ANR	7217962	IdentifierDeclType	int		7217855	0					
ANR	7217963	Identifier	cb_coef		7217855	1					
ANR	7217964	AssignmentExpression	"cb_coef = get_bits ( & gb , 6 + ( i & 1 ) )"		7217855	2		=			
ANR	7217965	Identifier	cb_coef		7217855	0					
ANR	7217966	CallExpression	"get_bits ( & gb , 6 + ( i & 1 ) )"		7217855	1					
ANR	7217967	Callee	get_bits		7217855	0					
ANR	7217968	Identifier	get_bits		7217855	0					
ANR	7217969	ArgumentList	& gb		7217855	1					
ANR	7217970	Argument	& gb		7217855	0					
ANR	7217971	UnaryOperationExpression	& gb		7217855	0					
ANR	7217972	UnaryOperator	&		7217855	0					
ANR	7217973	Identifier	gb		7217855	1					
ANR	7217974	Argument	6 + ( i & 1 )		7217855	1					
ANR	7217975	AdditiveExpression	6 + ( i & 1 )		7217855	0		+			
ANR	7217976	PrimaryExpression	6		7217855	0					
ANR	7217977	BitAndExpression	i & 1		7217855	1		&			
ANR	7217978	Identifier	i		7217855	0					
ANR	7217979	PrimaryExpression	1		7217855	1					
ANR	7217980	ExpressionStatement	"decode ( ractx , gain , cb_coef )"	45:8:705:733	7217855	2	True				
ANR	7217981	CallExpression	"decode ( ractx , gain , cb_coef )"		7217855	0					
ANR	7217982	Callee	decode		7217855	0					
ANR	7217983	Identifier	decode		7217855	0					
ANR	7217984	ArgumentList	ractx		7217855	1					
ANR	7217985	Argument	ractx		7217855	0					
ANR	7217986	Identifier	ractx		7217855	0					
ANR	7217987	Argument	gain		7217855	1					
ANR	7217988	Identifier	gain		7217855	0					
ANR	7217989	Argument	cb_coef		7217855	2					
ANR	7217990	Identifier	cb_coef		7217855	0					
ANR	7217991	ForStatement	for ( j = 0 ; j < 5 ; j ++ )		7217855	3					
ANR	7217992	ForInit	j = 0 ;	49:13:751:754	7217855	0	True				
ANR	7217993	AssignmentExpression	j = 0		7217855	0		=			
ANR	7217994	Identifier	j		7217855	0					
ANR	7217995	PrimaryExpression	0		7217855	1					
ANR	7217996	Condition	j < 5	49:18:756:760	7217855	1	True				
ANR	7217997	RelationalExpression	j < 5		7217855	0		<			
ANR	7217998	Identifier	j		7217855	0					
ANR	7217999	PrimaryExpression	5		7217855	1					
ANR	7218000	PostIncDecOperationExpression	j ++	49:25:763:765	7217855	2	True				
ANR	7218001	Identifier	j		7217855	0					
ANR	7218002	IncDec	++		7217855	1					
ANR	7218003	ExpressionStatement	* ( out ++ ) = 8 * ractx -> sp_block [ 4 - j ]	51:12:781:818	7217855	3	True				
ANR	7218004	AssignmentExpression	* ( out ++ ) = 8 * ractx -> sp_block [ 4 - j ]		7217855	0		=			
ANR	7218005	UnaryOperationExpression	* ( out ++ )		7217855	0					
ANR	7218006	UnaryOperator	*		7217855	0					
ANR	7218007	PostIncDecOperationExpression	out ++		7217855	1					
ANR	7218008	Identifier	out		7217855	0					
ANR	7218009	IncDec	++		7217855	1					
ANR	7218010	MultiplicativeExpression	8 * ractx -> sp_block [ 4 - j ]		7217855	1		*			
ANR	7218011	PrimaryExpression	8		7217855	0					
ANR	7218012	ArrayIndexing	ractx -> sp_block [ 4 - j ]		7217855	1					
ANR	7218013	PtrMemberAccess	ractx -> sp_block		7217855	0					
ANR	7218014	Identifier	ractx		7217855	0					
ANR	7218015	Identifier	sp_block		7217855	1					
ANR	7218016	AdditiveExpression	4 - j		7217855	1		-			
ANR	7218017	PrimaryExpression	4		7217855	0					
ANR	7218018	Identifier	j		7217855	1					
ANR	7218019	IfStatement	if ( ( i & 7 ) == 3 )		7217855	4					
ANR	7218020	Condition	( i & 7 ) == 3	55:12:835:846	7217855	0	True				
ANR	7218021	EqualityExpression	( i & 7 ) == 3		7217855	0		==			
ANR	7218022	BitAndExpression	i & 7		7217855	0		&			
ANR	7218023	Identifier	i		7217855	0					
ANR	7218024	PrimaryExpression	7		7217855	1					
ANR	7218025	PrimaryExpression	3		7217855	1					
ANR	7218026	ExpressionStatement	backward_filter ( ractx )	57:12:862:884	7217855	1	True				
ANR	7218027	CallExpression	backward_filter ( ractx )		7217855	0					
ANR	7218028	Callee	backward_filter		7217855	0					
ANR	7218029	Identifier	backward_filter		7217855	0					
ANR	7218030	ArgumentList	ractx		7217855	1					
ANR	7218031	Argument	ractx		7217855	0					
ANR	7218032	Identifier	ractx		7217855	0					
ANR	7218033	ExpressionStatement	* data_size = ( char * ) out - ( char * ) data	63:4:900:939	7217855	7	True				
ANR	7218034	AssignmentExpression	* data_size = ( char * ) out - ( char * ) data		7217855	0		=			
ANR	7218035	UnaryOperationExpression	* data_size		7217855	0					
ANR	7218036	UnaryOperator	*		7217855	0					
ANR	7218037	Identifier	data_size		7217855	1					
ANR	7218038	AdditiveExpression	( char * ) out - ( char * ) data		7217855	1		-			
ANR	7218039	CastExpression	( char * ) out		7217855	0					
ANR	7218040	CastTarget	char *		7217855	0					
ANR	7218041	Identifier	out		7217855	1					
ANR	7218042	CastExpression	( char * ) data		7217855	1					
ANR	7218043	CastTarget	char *		7217855	0					
ANR	7218044	Identifier	data		7217855	1					
ANR	7218045	ReturnStatement	return avctx -> block_align ;	65:4:946:971	7217855	8	True				
ANR	7218046	PtrMemberAccess	avctx -> block_align		7217855	0					
ANR	7218047	Identifier	avctx		7217855	0					
ANR	7218048	Identifier	block_align		7217855	1					
ANR	7218049	ReturnType	static int		7217855	1					
ANR	7218050	Identifier	ra288_decode_frame		7217855	2					
ANR	7218051	ParameterList	"AVCodecContext * avctx , void * data , int * data_size , const uint8_t * buf , int buf_size"		7217855	3					
ANR	7218052	Parameter	AVCodecContext * avctx	1:30:30:51	7217855	0	True				
ANR	7218053	ParameterType	AVCodecContext *		7217855	0					
ANR	7218054	Identifier	avctx		7217855	1					
ANR	7218055	Parameter	void * data	1:54:54:63	7217855	1	True				
ANR	7218056	ParameterType	void *		7217855	0					
ANR	7218057	Identifier	data		7217855	1					
ANR	7218058	Parameter	int * data_size	3:30:97:110	7217855	2	True				
ANR	7218059	ParameterType	int *		7217855	0					
ANR	7218060	Identifier	data_size		7217855	1					
ANR	7218061	Parameter	const uint8_t * buf	3:46:113:131	7217855	3	True				
ANR	7218062	ParameterType	const uint8_t *		7217855	0					
ANR	7218063	Identifier	buf		7217855	1					
ANR	7218064	Parameter	int buf_size	5:30:165:176	7217855	4	True				
ANR	7218065	ParameterType	int		7217855	0					
ANR	7218066	Identifier	buf_size		7217855	1					
ANR	7218067	CFGEntryNode	ENTRY		7217855		True				
ANR	7218068	CFGExitNode	EXIT		7217855		True				
ANR	7218069	Symbol	cb_coef		7217855						
ANR	7218070	Symbol	amptable		7217855						
ANR	7218071	Symbol	data		7217855						
ANR	7218072	Symbol	& gb		7217855						
ANR	7218073	Symbol	get_bits		7217855						
ANR	7218074	Symbol	* data_size		7217855						
ANR	7218075	Symbol	* ( out ++ )		7217855						
ANR	7218076	Symbol	out		7217855						
ANR	7218077	Symbol	gain		7217855						
ANR	7218078	Symbol	* ractx -> sp_block		7217855						
ANR	7218079	Symbol	avctx -> block_align		7217855						
ANR	7218080	Symbol	* * ractx		7217855						
ANR	7218081	Symbol	gb		7217855						
ANR	7218082	Symbol	avctx		7217855						
ANR	7218083	Symbol	data_size		7217855						
ANR	7218084	Symbol	* amptable		7217855						
ANR	7218085	Symbol	AV_LOG_ERROR		7217855						
ANR	7218086	Symbol	buf_size		7217855						
ANR	7218087	Symbol	* get_bits		7217855						
ANR	7218088	Symbol	i		7217855						
ANR	7218089	Symbol	j		7217855						
ANR	7218090	Symbol	ractx		7217855						
ANR	7218091	Symbol	avctx -> priv_data		7217855						
ANR	7218092	Symbol	ractx -> sp_block		7217855						
ANR	7218093	Symbol	buf		7217855						
ANR	7218094	Symbol	* avctx		7217855						
ANR	7218095	Symbol	* j		7217855						
ANR	7218096	Symbol	* ractx		7217855						
