command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	560986	File	/home/p4ultr4n/workplace/ReVeal/raw_code/ape_decode_init_1.c								
ANR	560987	Function	ape_decode_init	1:0:0:1556							
ANR	560988	FunctionDef	ape_decode_init (AVCodecContext * avctx)		560987	0					
ANR	560989	CompoundStatement		3:0:60:1556	560987	0					
ANR	560990	IdentifierDeclStatement	APEContext * s = avctx -> priv_data ;	5:4:67:99	560987	0	True				
ANR	560991	IdentifierDecl	* s = avctx -> priv_data		560987	0					
ANR	560992	IdentifierDeclType	APEContext *		560987	0					
ANR	560993	Identifier	s		560987	1					
ANR	560994	AssignmentExpression	* s = avctx -> priv_data		560987	2		=			
ANR	560995	Identifier	s		560987	0					
ANR	560996	PtrMemberAccess	avctx -> priv_data		560987	1					
ANR	560997	Identifier	avctx		560987	0					
ANR	560998	Identifier	priv_data		560987	1					
ANR	560999	IdentifierDeclStatement	int i ;	7:4:106:111	560987	1	True				
ANR	561000	IdentifierDecl	i		560987	0					
ANR	561001	IdentifierDeclType	int		560987	0					
ANR	561002	Identifier	i		560987	1					
ANR	561003	IfStatement	if ( avctx -> extradata_size != 6 )		560987	2					
ANR	561004	Condition	avctx -> extradata_size != 6	11:8:124:149	560987	0	True				
ANR	561005	EqualityExpression	avctx -> extradata_size != 6		560987	0		!=			
ANR	561006	PtrMemberAccess	avctx -> extradata_size		560987	0					
ANR	561007	Identifier	avctx		560987	0					
ANR	561008	Identifier	extradata_size		560987	1					
ANR	561009	PrimaryExpression	6		560987	1					
ANR	561010	CompoundStatement		9:36:91:91	560987	1					
ANR	561011	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Incorrect extradata\\n"" )"	13:8:163:215	560987	0	True				
ANR	561012	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Incorrect extradata\\n"" )"		560987	0					
ANR	561013	Callee	av_log		560987	0					
ANR	561014	Identifier	av_log		560987	0					
ANR	561015	ArgumentList	avctx		560987	1					
ANR	561016	Argument	avctx		560987	0					
ANR	561017	Identifier	avctx		560987	0					
ANR	561018	Argument	AV_LOG_ERROR		560987	1					
ANR	561019	Identifier	AV_LOG_ERROR		560987	0					
ANR	561020	Argument	"""Incorrect extradata\\n"""		560987	2					
ANR	561021	PrimaryExpression	"""Incorrect extradata\\n"""		560987	0					
ANR	561022	ReturnStatement	return - 1 ;	15:8:226:235	560987	1	True				
ANR	561023	UnaryOperationExpression	- 1		560987	0					
ANR	561024	UnaryOperator	-		560987	0					
ANR	561025	PrimaryExpression	1		560987	1					
ANR	561026	IfStatement	if ( avctx -> bits_per_coded_sample != 16 )		560987	3					
ANR	561027	Condition	avctx -> bits_per_coded_sample != 16	19:8:253:286	560987	0	True				
ANR	561028	EqualityExpression	avctx -> bits_per_coded_sample != 16		560987	0		!=			
ANR	561029	PtrMemberAccess	avctx -> bits_per_coded_sample		560987	0					
ANR	561030	Identifier	avctx		560987	0					
ANR	561031	Identifier	bits_per_coded_sample		560987	1					
ANR	561032	PrimaryExpression	16		560987	1					
ANR	561033	CompoundStatement		17:44:228:228	560987	1					
ANR	561034	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Only 16-bit samples are supported\\n"" )"	21:8:300:366	560987	0	True				
ANR	561035	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Only 16-bit samples are supported\\n"" )"		560987	0					
ANR	561036	Callee	av_log		560987	0					
ANR	561037	Identifier	av_log		560987	0					
ANR	561038	ArgumentList	avctx		560987	1					
ANR	561039	Argument	avctx		560987	0					
ANR	561040	Identifier	avctx		560987	0					
ANR	561041	Argument	AV_LOG_ERROR		560987	1					
ANR	561042	Identifier	AV_LOG_ERROR		560987	0					
ANR	561043	Argument	"""Only 16-bit samples are supported\\n"""		560987	2					
ANR	561044	PrimaryExpression	"""Only 16-bit samples are supported\\n"""		560987	0					
ANR	561045	ReturnStatement	return - 1 ;	23:8:377:386	560987	1	True				
ANR	561046	UnaryOperationExpression	- 1		560987	0					
ANR	561047	UnaryOperator	-		560987	0					
ANR	561048	PrimaryExpression	1		560987	1					
ANR	561049	IfStatement	if ( avctx -> channels > 2 )		560987	4					
ANR	561050	Condition	avctx -> channels > 2	27:8:404:422	560987	0	True				
ANR	561051	RelationalExpression	avctx -> channels > 2		560987	0		>			
ANR	561052	PtrMemberAccess	avctx -> channels		560987	0					
ANR	561053	Identifier	avctx		560987	0					
ANR	561054	Identifier	channels		560987	1					
ANR	561055	PrimaryExpression	2		560987	1					
ANR	561056	CompoundStatement		25:29:364:364	560987	1					
ANR	561057	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Only mono and stereo is supported\\n"" )"	29:8:436:502	560987	0	True				
ANR	561058	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Only mono and stereo is supported\\n"" )"		560987	0					
ANR	561059	Callee	av_log		560987	0					
ANR	561060	Identifier	av_log		560987	0					
ANR	561061	ArgumentList	avctx		560987	1					
ANR	561062	Argument	avctx		560987	0					
ANR	561063	Identifier	avctx		560987	0					
ANR	561064	Argument	AV_LOG_ERROR		560987	1					
ANR	561065	Identifier	AV_LOG_ERROR		560987	0					
ANR	561066	Argument	"""Only mono and stereo is supported\\n"""		560987	2					
ANR	561067	PrimaryExpression	"""Only mono and stereo is supported\\n"""		560987	0					
ANR	561068	ReturnStatement	return - 1 ;	31:8:513:522	560987	1	True				
ANR	561069	UnaryOperationExpression	- 1		560987	0					
ANR	561070	UnaryOperator	-		560987	0					
ANR	561071	PrimaryExpression	1		560987	1					
ANR	561072	ExpressionStatement	s -> avctx = avctx	35:4:536:564	560987	5	True				
ANR	561073	AssignmentExpression	s -> avctx = avctx		560987	0		=			
ANR	561074	PtrMemberAccess	s -> avctx		560987	0					
ANR	561075	Identifier	s		560987	0					
ANR	561076	Identifier	avctx		560987	1					
ANR	561077	Identifier	avctx		560987	1					
ANR	561078	ExpressionStatement	s -> channels = avctx -> channels	37:4:571:609	560987	6	True				
ANR	561079	AssignmentExpression	s -> channels = avctx -> channels		560987	0		=			
ANR	561080	PtrMemberAccess	s -> channels		560987	0					
ANR	561081	Identifier	s		560987	0					
ANR	561082	Identifier	channels		560987	1					
ANR	561083	PtrMemberAccess	avctx -> channels		560987	1					
ANR	561084	Identifier	avctx		560987	0					
ANR	561085	Identifier	channels		560987	1					
ANR	561086	ExpressionStatement	s -> fileversion = AV_RL16 ( avctx -> extradata )	39:4:616:664	560987	7	True				
ANR	561087	AssignmentExpression	s -> fileversion = AV_RL16 ( avctx -> extradata )		560987	0		=			
ANR	561088	PtrMemberAccess	s -> fileversion		560987	0					
ANR	561089	Identifier	s		560987	0					
ANR	561090	Identifier	fileversion		560987	1					
ANR	561091	CallExpression	AV_RL16 ( avctx -> extradata )		560987	1					
ANR	561092	Callee	AV_RL16		560987	0					
ANR	561093	Identifier	AV_RL16		560987	0					
ANR	561094	ArgumentList	avctx -> extradata		560987	1					
ANR	561095	Argument	avctx -> extradata		560987	0					
ANR	561096	PtrMemberAccess	avctx -> extradata		560987	0					
ANR	561097	Identifier	avctx		560987	0					
ANR	561098	Identifier	extradata		560987	1					
ANR	561099	ExpressionStatement	s -> compression_level = AV_RL16 ( avctx -> extradata + 2 )	41:4:671:723	560987	8	True				
ANR	561100	AssignmentExpression	s -> compression_level = AV_RL16 ( avctx -> extradata + 2 )		560987	0		=			
ANR	561101	PtrMemberAccess	s -> compression_level		560987	0					
ANR	561102	Identifier	s		560987	0					
ANR	561103	Identifier	compression_level		560987	1					
ANR	561104	CallExpression	AV_RL16 ( avctx -> extradata + 2 )		560987	1					
ANR	561105	Callee	AV_RL16		560987	0					
ANR	561106	Identifier	AV_RL16		560987	0					
ANR	561107	ArgumentList	avctx -> extradata + 2		560987	1					
ANR	561108	Argument	avctx -> extradata + 2		560987	0					
ANR	561109	AdditiveExpression	avctx -> extradata + 2		560987	0		+			
ANR	561110	PtrMemberAccess	avctx -> extradata		560987	0					
ANR	561111	Identifier	avctx		560987	0					
ANR	561112	Identifier	extradata		560987	1					
ANR	561113	PrimaryExpression	2		560987	1					
ANR	561114	ExpressionStatement	s -> flags = AV_RL16 ( avctx -> extradata + 4 )	43:4:730:782	560987	9	True				
ANR	561115	AssignmentExpression	s -> flags = AV_RL16 ( avctx -> extradata + 4 )		560987	0		=			
ANR	561116	PtrMemberAccess	s -> flags		560987	0					
ANR	561117	Identifier	s		560987	0					
ANR	561118	Identifier	flags		560987	1					
ANR	561119	CallExpression	AV_RL16 ( avctx -> extradata + 4 )		560987	1					
ANR	561120	Callee	AV_RL16		560987	0					
ANR	561121	Identifier	AV_RL16		560987	0					
ANR	561122	ArgumentList	avctx -> extradata + 4		560987	1					
ANR	561123	Argument	avctx -> extradata + 4		560987	0					
ANR	561124	AdditiveExpression	avctx -> extradata + 4		560987	0		+			
ANR	561125	PtrMemberAccess	avctx -> extradata		560987	0					
ANR	561126	Identifier	avctx		560987	0					
ANR	561127	Identifier	extradata		560987	1					
ANR	561128	PrimaryExpression	4		560987	1					
ANR	561129	ExpressionStatement	"av_log ( avctx , AV_LOG_DEBUG , ""Compression Level: %d - Flags: %d\\n"" , s -> compression_level , s -> flags )"	47:4:791:889	560987	10	True				
ANR	561130	CallExpression	"av_log ( avctx , AV_LOG_DEBUG , ""Compression Level: %d - Flags: %d\\n"" , s -> compression_level , s -> flags )"		560987	0					
ANR	561131	Callee	av_log		560987	0					
ANR	561132	Identifier	av_log		560987	0					
ANR	561133	ArgumentList	avctx		560987	1					
ANR	561134	Argument	avctx		560987	0					
ANR	561135	Identifier	avctx		560987	0					
ANR	561136	Argument	AV_LOG_DEBUG		560987	1					
ANR	561137	Identifier	AV_LOG_DEBUG		560987	0					
ANR	561138	Argument	"""Compression Level: %d - Flags: %d\\n"""		560987	2					
ANR	561139	PrimaryExpression	"""Compression Level: %d - Flags: %d\\n"""		560987	0					
ANR	561140	Argument	s -> compression_level		560987	3					
ANR	561141	PtrMemberAccess	s -> compression_level		560987	0					
ANR	561142	Identifier	s		560987	0					
ANR	561143	Identifier	compression_level		560987	1					
ANR	561144	Argument	s -> flags		560987	4					
ANR	561145	PtrMemberAccess	s -> flags		560987	0					
ANR	561146	Identifier	s		560987	0					
ANR	561147	Identifier	flags		560987	1					
ANR	561148	IfStatement	if ( s -> compression_level % 1000 || s -> compression_level > COMPRESSION_LEVEL_INSANE )		560987	11					
ANR	561149	Condition	s -> compression_level % 1000 || s -> compression_level > COMPRESSION_LEVEL_INSANE	49:8:900:977	560987	0	True				
ANR	561150	OrExpression	s -> compression_level % 1000 || s -> compression_level > COMPRESSION_LEVEL_INSANE		560987	0		||			
ANR	561151	MultiplicativeExpression	s -> compression_level % 1000		560987	0		%			
ANR	561152	PtrMemberAccess	s -> compression_level		560987	0					
ANR	561153	Identifier	s		560987	0					
ANR	561154	Identifier	compression_level		560987	1					
ANR	561155	PrimaryExpression	1000		560987	1					
ANR	561156	RelationalExpression	s -> compression_level > COMPRESSION_LEVEL_INSANE		560987	1		>			
ANR	561157	PtrMemberAccess	s -> compression_level		560987	0					
ANR	561158	Identifier	s		560987	0					
ANR	561159	Identifier	compression_level		560987	1					
ANR	561160	Identifier	COMPRESSION_LEVEL_INSANE		560987	1					
ANR	561161	CompoundStatement		47:88:919:919	560987	1					
ANR	561162	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Incorrect compression level %d\\n"" , s -> compression_level )"	51:8:991:1076	560987	0	True				
ANR	561163	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Incorrect compression level %d\\n"" , s -> compression_level )"		560987	0					
ANR	561164	Callee	av_log		560987	0					
ANR	561165	Identifier	av_log		560987	0					
ANR	561166	ArgumentList	avctx		560987	1					
ANR	561167	Argument	avctx		560987	0					
ANR	561168	Identifier	avctx		560987	0					
ANR	561169	Argument	AV_LOG_ERROR		560987	1					
ANR	561170	Identifier	AV_LOG_ERROR		560987	0					
ANR	561171	Argument	"""Incorrect compression level %d\\n"""		560987	2					
ANR	561172	PrimaryExpression	"""Incorrect compression level %d\\n"""		560987	0					
ANR	561173	Argument	s -> compression_level		560987	3					
ANR	561174	PtrMemberAccess	s -> compression_level		560987	0					
ANR	561175	Identifier	s		560987	0					
ANR	561176	Identifier	compression_level		560987	1					
ANR	561177	ReturnStatement	return - 1 ;	53:8:1087:1096	560987	1	True				
ANR	561178	UnaryOperationExpression	- 1		560987	0					
ANR	561179	UnaryOperator	-		560987	0					
ANR	561180	PrimaryExpression	1		560987	1					
ANR	561181	ExpressionStatement	s -> fset = s -> compression_level / 1000 - 1	57:4:1110:1151	560987	12	True				
ANR	561182	AssignmentExpression	s -> fset = s -> compression_level / 1000 - 1		560987	0		=			
ANR	561183	PtrMemberAccess	s -> fset		560987	0					
ANR	561184	Identifier	s		560987	0					
ANR	561185	Identifier	fset		560987	1					
ANR	561186	AdditiveExpression	s -> compression_level / 1000 - 1		560987	1		-			
ANR	561187	MultiplicativeExpression	s -> compression_level / 1000		560987	0		/			
ANR	561188	PtrMemberAccess	s -> compression_level		560987	0					
ANR	561189	Identifier	s		560987	0					
ANR	561190	Identifier	compression_level		560987	1					
ANR	561191	PrimaryExpression	1000		560987	1					
ANR	561192	PrimaryExpression	1		560987	1					
ANR	561193	ForStatement	for ( i = 0 ; i < APE_FILTER_LEVELS ; i ++ )		560987	13					
ANR	561194	ForInit	i = 0 ;	59:9:1163:1168	560987	0	True				
ANR	561195	AssignmentExpression	i = 0		560987	0		=			
ANR	561196	Identifier	i		560987	0					
ANR	561197	PrimaryExpression	0		560987	1					
ANR	561198	Condition	i < APE_FILTER_LEVELS	59:16:1170:1190	560987	1	True				
ANR	561199	RelationalExpression	i < APE_FILTER_LEVELS		560987	0		<			
ANR	561200	Identifier	i		560987	0					
ANR	561201	Identifier	APE_FILTER_LEVELS		560987	1					
ANR	561202	PostIncDecOperationExpression	i ++	59:39:1193:1195	560987	2	True				
ANR	561203	Identifier	i		560987	0					
ANR	561204	IncDec	++		560987	1					
ANR	561205	CompoundStatement		57:44:1137:1137	560987	3					
ANR	561206	IfStatement	if ( ! ape_filter_orders [ s -> fset ] [ i ] )		560987	0					
ANR	561207	Condition	! ape_filter_orders [ s -> fset ] [ i ]	61:12:1213:1242	560987	0	True				
ANR	561208	UnaryOperationExpression	! ape_filter_orders [ s -> fset ] [ i ]		560987	0					
ANR	561209	UnaryOperator	!		560987	0					
ANR	561210	ArrayIndexing	ape_filter_orders [ s -> fset ] [ i ]		560987	1					
ANR	561211	ArrayIndexing	ape_filter_orders [ s -> fset ]		560987	0					
ANR	561212	Identifier	ape_filter_orders		560987	0					
ANR	561213	PtrMemberAccess	s -> fset		560987	1					
ANR	561214	Identifier	s		560987	0					
ANR	561215	Identifier	fset		560987	1					
ANR	561216	Identifier	i		560987	1					
ANR	561217	BreakStatement	break ;	63:12:1258:1263	560987	1	True				
ANR	561218	ExpressionStatement	s -> filterbuf [ i ] = av_malloc ( ( ape_filter_orders [ s -> fset ] [ i ] * 3 + HISTORY_SIZE ) * 4 )	65:8:1274:1357	560987	1	True				
ANR	561219	AssignmentExpression	s -> filterbuf [ i ] = av_malloc ( ( ape_filter_orders [ s -> fset ] [ i ] * 3 + HISTORY_SIZE ) * 4 )		560987	0		=			
ANR	561220	ArrayIndexing	s -> filterbuf [ i ]		560987	0					
ANR	561221	PtrMemberAccess	s -> filterbuf		560987	0					
ANR	561222	Identifier	s		560987	0					
ANR	561223	Identifier	filterbuf		560987	1					
ANR	561224	Identifier	i		560987	1					
ANR	561225	CallExpression	av_malloc ( ( ape_filter_orders [ s -> fset ] [ i ] * 3 + HISTORY_SIZE ) * 4 )		560987	1					
ANR	561226	Callee	av_malloc		560987	0					
ANR	561227	Identifier	av_malloc		560987	0					
ANR	561228	ArgumentList	( ape_filter_orders [ s -> fset ] [ i ] * 3 + HISTORY_SIZE ) * 4		560987	1					
ANR	561229	Argument	( ape_filter_orders [ s -> fset ] [ i ] * 3 + HISTORY_SIZE ) * 4		560987	0					
ANR	561230	MultiplicativeExpression	( ape_filter_orders [ s -> fset ] [ i ] * 3 + HISTORY_SIZE ) * 4		560987	0		*			
ANR	561231	AdditiveExpression	ape_filter_orders [ s -> fset ] [ i ] * 3 + HISTORY_SIZE		560987	0		+			
ANR	561232	MultiplicativeExpression	ape_filter_orders [ s -> fset ] [ i ] * 3		560987	0		*			
ANR	561233	ArrayIndexing	ape_filter_orders [ s -> fset ] [ i ]		560987	0					
ANR	561234	ArrayIndexing	ape_filter_orders [ s -> fset ]		560987	0					
ANR	561235	Identifier	ape_filter_orders		560987	0					
ANR	561236	PtrMemberAccess	s -> fset		560987	1					
ANR	561237	Identifier	s		560987	0					
ANR	561238	Identifier	fset		560987	1					
ANR	561239	Identifier	i		560987	1					
ANR	561240	PrimaryExpression	3		560987	1					
ANR	561241	Identifier	HISTORY_SIZE		560987	1					
ANR	561242	PrimaryExpression	4		560987	1					
ANR	561243	ExpressionStatement	"dsputil_init ( & s -> dsp , avctx )"	71:4:1373:1401	560987	14	True				
ANR	561244	CallExpression	"dsputil_init ( & s -> dsp , avctx )"		560987	0					
ANR	561245	Callee	dsputil_init		560987	0					
ANR	561246	Identifier	dsputil_init		560987	0					
ANR	561247	ArgumentList	& s -> dsp		560987	1					
ANR	561248	Argument	& s -> dsp		560987	0					
ANR	561249	UnaryOperationExpression	& s -> dsp		560987	0					
ANR	561250	UnaryOperator	&		560987	0					
ANR	561251	PtrMemberAccess	s -> dsp		560987	1					
ANR	561252	Identifier	s		560987	0					
ANR	561253	Identifier	dsp		560987	1					
ANR	561254	Argument	avctx		560987	1					
ANR	561255	Identifier	avctx		560987	0					
ANR	561256	ExpressionStatement	avctx -> sample_fmt = AV_SAMPLE_FMT_S16	73:4:1408:1445	560987	15	True				
ANR	561257	AssignmentExpression	avctx -> sample_fmt = AV_SAMPLE_FMT_S16		560987	0		=			
ANR	561258	PtrMemberAccess	avctx -> sample_fmt		560987	0					
ANR	561259	Identifier	avctx		560987	0					
ANR	561260	Identifier	sample_fmt		560987	1					
ANR	561261	Identifier	AV_SAMPLE_FMT_S16		560987	1					
ANR	561262	ExpressionStatement	avctx -> channel_layout = ( avctx -> channels == 2 ) ? AV_CH_LAYOUT_STEREO : AV_CH_LAYOUT_MONO	75:4:1452:1538	560987	16	True				
ANR	561263	AssignmentExpression	avctx -> channel_layout = ( avctx -> channels == 2 ) ? AV_CH_LAYOUT_STEREO : AV_CH_LAYOUT_MONO		560987	0		=			
ANR	561264	PtrMemberAccess	avctx -> channel_layout		560987	0					
ANR	561265	Identifier	avctx		560987	0					
ANR	561266	Identifier	channel_layout		560987	1					
ANR	561267	ConditionalExpression	( avctx -> channels == 2 ) ? AV_CH_LAYOUT_STEREO : AV_CH_LAYOUT_MONO		560987	1					
ANR	561268	Condition	avctx -> channels == 2		560987	0					
ANR	561269	EqualityExpression	avctx -> channels == 2		560987	0		==			
ANR	561270	PtrMemberAccess	avctx -> channels		560987	0					
ANR	561271	Identifier	avctx		560987	0					
ANR	561272	Identifier	channels		560987	1					
ANR	561273	PrimaryExpression	2		560987	1					
ANR	561274	Identifier	AV_CH_LAYOUT_STEREO		560987	1					
ANR	561275	Identifier	AV_CH_LAYOUT_MONO		560987	2					
ANR	561276	ReturnStatement	return 0 ;	77:4:1545:1553	560987	17	True				
ANR	561277	PrimaryExpression	0		560987	0					
ANR	561278	ReturnType	static av_cold int		560987	1					
ANR	561279	Identifier	ape_decode_init		560987	2					
ANR	561280	ParameterList	AVCodecContext * avctx		560987	3					
ANR	561281	Parameter	AVCodecContext * avctx	1:35:35:56	560987	0	True				
ANR	561282	ParameterType	AVCodecContext *		560987	0					
ANR	561283	Identifier	avctx		560987	1					
ANR	561284	CFGEntryNode	ENTRY		560987		True				
ANR	561285	CFGExitNode	EXIT		560987		True				
ANR	561286	Symbol	av_malloc		560987						
ANR	561287	Symbol	avctx -> bits_per_coded_sample		560987						
ANR	561288	Symbol	HISTORY_SIZE		560987						
ANR	561289	Symbol	APE_FILTER_LEVELS		560987						
ANR	561290	Symbol	s -> fset		560987						
ANR	561291	Symbol	AV_CH_LAYOUT_STEREO		560987						
ANR	561292	Symbol	* ape_filter_orders		560987						
ANR	561293	Symbol	s -> channels		560987						
ANR	561294	Symbol	AV_SAMPLE_FMT_S16		560987						
ANR	561295	Symbol	* * ape_filter_orders		560987						
ANR	561296	Symbol	avctx -> channels		560987						
ANR	561297	Symbol	AV_CH_LAYOUT_MONO		560987						
ANR	561298	Symbol	COMPRESSION_LEVEL_INSANE		560987						
ANR	561299	Symbol	ape_filter_orders		560987						
ANR	561300	Symbol	s -> compression_level		560987						
ANR	561301	Symbol	* * s		560987						
ANR	561302	Symbol	avctx		560987						
ANR	561303	Symbol	s -> filterbuf		560987						
ANR	561304	Symbol	AV_LOG_DEBUG		560987						
ANR	561305	Symbol	avctx -> extradata		560987						
ANR	561306	Symbol	avctx -> sample_fmt		560987						
ANR	561307	Symbol	AV_LOG_ERROR		560987						
ANR	561308	Symbol	* s -> fset		560987						
ANR	561309	Symbol	avctx -> extradata_size		560987						
ANR	561310	Symbol	s -> flags		560987						
ANR	561311	Symbol	i		560987						
ANR	561312	Symbol	avctx -> channel_layout		560987						
ANR	561313	Symbol	avctx -> priv_data		560987						
ANR	561314	Symbol	* * * s		560987						
ANR	561315	Symbol	* s -> filterbuf		560987						
ANR	561316	Symbol	* * s -> fset		560987						
ANR	561317	Symbol	* avctx		560987						
ANR	561318	Symbol	s		560987						
ANR	561319	Symbol	s -> fileversion		560987						
ANR	561320	Symbol	* i		560987						
ANR	561321	Symbol	s -> avctx		560987						
ANR	561322	Symbol	* s		560987						
ANR	561323	Symbol	& s -> dsp		560987						
ANR	561324	Symbol	AV_RL16		560987						
