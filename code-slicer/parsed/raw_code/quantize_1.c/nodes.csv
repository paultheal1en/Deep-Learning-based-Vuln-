command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	7169455	File	/home/p4ultr4n/workplace/ReVeal/raw_code/quantize_1.c								
ANR	7169456	Function	quantize	1:0:0:1549							
ANR	7169457	FunctionDef	"quantize (SnowContext * s , SubBand * b , DWTELEM * src , int stride , int bias)"		7169456	0					
ANR	7169458	CompoundStatement		1:84:84:1549	7169456	0					
ANR	7169459	IdentifierDeclStatement	const int level = b -> level ;	3:4:91:116	7169456	0	True				
ANR	7169460	IdentifierDecl	level = b -> level		7169456	0					
ANR	7169461	IdentifierDeclType	const int		7169456	0					
ANR	7169462	Identifier	level		7169456	1					
ANR	7169463	AssignmentExpression	level = b -> level		7169456	2		=			
ANR	7169464	Identifier	level		7169456	0					
ANR	7169465	PtrMemberAccess	b -> level		7169456	1					
ANR	7169466	Identifier	b		7169456	0					
ANR	7169467	Identifier	level		7169456	1					
ANR	7169468	IdentifierDeclStatement	const int w = b -> width ;	5:4:123:144	7169456	1	True				
ANR	7169469	IdentifierDecl	w = b -> width		7169456	0					
ANR	7169470	IdentifierDeclType	const int		7169456	0					
ANR	7169471	Identifier	w		7169456	1					
ANR	7169472	AssignmentExpression	w = b -> width		7169456	2		=			
ANR	7169473	Identifier	w		7169456	0					
ANR	7169474	PtrMemberAccess	b -> width		7169456	1					
ANR	7169475	Identifier	b		7169456	0					
ANR	7169476	Identifier	width		7169456	1					
ANR	7169477	IdentifierDeclStatement	const int h = b -> height ;	7:4:151:173	7169456	2	True				
ANR	7169478	IdentifierDecl	h = b -> height		7169456	0					
ANR	7169479	IdentifierDeclType	const int		7169456	0					
ANR	7169480	Identifier	h		7169456	1					
ANR	7169481	AssignmentExpression	h = b -> height		7169456	2		=			
ANR	7169482	Identifier	h		7169456	0					
ANR	7169483	PtrMemberAccess	b -> height		7169456	1					
ANR	7169484	Identifier	b		7169456	0					
ANR	7169485	Identifier	height		7169456	1					
ANR	7169486	IdentifierDeclStatement	"const int qlog = clip ( s -> qlog + b -> qlog , 0 , 128 ) ;"	9:4:180:227	7169456	3	True				
ANR	7169487	IdentifierDecl	"qlog = clip ( s -> qlog + b -> qlog , 0 , 128 )"		7169456	0					
ANR	7169488	IdentifierDeclType	const int		7169456	0					
ANR	7169489	Identifier	qlog		7169456	1					
ANR	7169490	AssignmentExpression	"qlog = clip ( s -> qlog + b -> qlog , 0 , 128 )"		7169456	2		=			
ANR	7169491	Identifier	qlog		7169456	0					
ANR	7169492	CallExpression	"clip ( s -> qlog + b -> qlog , 0 , 128 )"		7169456	1					
ANR	7169493	Callee	clip		7169456	0					
ANR	7169494	Identifier	clip		7169456	0					
ANR	7169495	ArgumentList	s -> qlog + b -> qlog		7169456	1					
ANR	7169496	Argument	s -> qlog + b -> qlog		7169456	0					
ANR	7169497	AdditiveExpression	s -> qlog + b -> qlog		7169456	0		+			
ANR	7169498	PtrMemberAccess	s -> qlog		7169456	0					
ANR	7169499	Identifier	s		7169456	0					
ANR	7169500	Identifier	qlog		7169456	1					
ANR	7169501	PtrMemberAccess	b -> qlog		7169456	1					
ANR	7169502	Identifier	b		7169456	0					
ANR	7169503	Identifier	qlog		7169456	1					
ANR	7169504	Argument	0		7169456	1					
ANR	7169505	PrimaryExpression	0		7169456	0					
ANR	7169506	Argument	128		7169456	2					
ANR	7169507	PrimaryExpression	128		7169456	0					
ANR	7169508	IdentifierDeclStatement	const int qmul = qexp [ qlog & 7 ] << ( qlog >> 3 ) ;	11:4:234:273	7169456	4	True				
ANR	7169509	IdentifierDecl	qmul = qexp [ qlog & 7 ] << ( qlog >> 3 )		7169456	0					
ANR	7169510	IdentifierDeclType	const int		7169456	0					
ANR	7169511	Identifier	qmul		7169456	1					
ANR	7169512	AssignmentExpression	qmul = qexp [ qlog & 7 ] << ( qlog >> 3 )		7169456	2		=			
ANR	7169513	Identifier	qmul		7169456	0					
ANR	7169514	ShiftExpression	qexp [ qlog & 7 ] << ( qlog >> 3 )		7169456	1		<<			
ANR	7169515	ArrayIndexing	qexp [ qlog & 7 ]		7169456	0					
ANR	7169516	Identifier	qexp		7169456	0					
ANR	7169517	BitAndExpression	qlog & 7		7169456	1		&			
ANR	7169518	Identifier	qlog		7169456	0					
ANR	7169519	PrimaryExpression	7		7169456	1					
ANR	7169520	ShiftExpression	qlog >> 3		7169456	1		>>			
ANR	7169521	Identifier	qlog		7169456	0					
ANR	7169522	PrimaryExpression	3		7169456	1					
ANR	7169523	IdentifierDeclStatement	"int x , y ;"	13:4:280:287	7169456	5	True				
ANR	7169524	IdentifierDecl	x		7169456	0					
ANR	7169525	IdentifierDeclType	int		7169456	0					
ANR	7169526	Identifier	x		7169456	1					
ANR	7169527	IdentifierDecl	y		7169456	1					
ANR	7169528	IdentifierDeclType	int		7169456	0					
ANR	7169529	Identifier	y		7169456	1					
ANR	7169530	ExpressionStatement	assert ( QROOT == 8 )	17:4:296:312	7169456	6	True				
ANR	7169531	CallExpression	assert ( QROOT == 8 )		7169456	0					
ANR	7169532	Callee	assert		7169456	0					
ANR	7169533	Identifier	assert		7169456	0					
ANR	7169534	ArgumentList	QROOT == 8		7169456	1					
ANR	7169535	Argument	QROOT == 8		7169456	0					
ANR	7169536	EqualityExpression	QROOT == 8		7169456	0		==			
ANR	7169537	Identifier	QROOT		7169456	0					
ANR	7169538	PrimaryExpression	8		7169456	1					
ANR	7169539	ExpressionStatement	bias = bias ? 0 : ( 3 * qmul ) >> 3	21:4:321:349	7169456	7	True				
ANR	7169540	AssignmentExpression	bias = bias ? 0 : ( 3 * qmul ) >> 3		7169456	0		=			
ANR	7169541	Identifier	bias		7169456	0					
ANR	7169542	ConditionalExpression	bias ? 0 : ( 3 * qmul ) >> 3		7169456	1					
ANR	7169543	Condition	bias		7169456	0					
ANR	7169544	Identifier	bias		7169456	0					
ANR	7169545	PrimaryExpression	0		7169456	1					
ANR	7169546	ShiftExpression	( 3 * qmul ) >> 3		7169456	2		>>			
ANR	7169547	MultiplicativeExpression	3 * qmul		7169456	0		*			
ANR	7169548	PrimaryExpression	3		7169456	0					
ANR	7169549	Identifier	qmul		7169456	1					
ANR	7169550	PrimaryExpression	3		7169456	1					
ANR	7169551	IfStatement	if ( ! bias )		7169456	8					
ANR	7169552	Condition	! bias	25:7:365:369	7169456	0	True				
ANR	7169553	UnaryOperationExpression	! bias		7169456	0					
ANR	7169554	UnaryOperator	!		7169456	0					
ANR	7169555	Identifier	bias		7169456	1					
ANR	7169556	CompoundStatement		25:13:286:286	7169456	1					
ANR	7169557	ForStatement	for ( y = 0 ; y < h ; y ++ )		7169456	0					
ANR	7169558	ForInit	y = 0 ;	27:12:386:389	7169456	0	True				
ANR	7169559	AssignmentExpression	y = 0		7169456	0		=			
ANR	7169560	Identifier	y		7169456	0					
ANR	7169561	PrimaryExpression	0		7169456	1					
ANR	7169562	Condition	y < h	27:17:391:393	7169456	1	True				
ANR	7169563	RelationalExpression	y < h		7169456	0		<			
ANR	7169564	Identifier	y		7169456	0					
ANR	7169565	Identifier	h		7169456	1					
ANR	7169566	PostIncDecOperationExpression	y ++	27:22:396:398	7169456	2	True				
ANR	7169567	Identifier	y		7169456	0					
ANR	7169568	IncDec	++		7169456	1					
ANR	7169569	CompoundStatement		27:26:315:315	7169456	3					
ANR	7169570	ForStatement	for ( x = 0 ; x < w ; x ++ )		7169456	0					
ANR	7169571	ForInit	x = 0 ;	29:16:419:422	7169456	0	True				
ANR	7169572	AssignmentExpression	x = 0		7169456	0		=			
ANR	7169573	Identifier	x		7169456	0					
ANR	7169574	PrimaryExpression	0		7169456	1					
ANR	7169575	Condition	x < w	29:21:424:426	7169456	1	True				
ANR	7169576	RelationalExpression	x < w		7169456	0		<			
ANR	7169577	Identifier	x		7169456	0					
ANR	7169578	Identifier	w		7169456	1					
ANR	7169579	PostIncDecOperationExpression	x ++	29:26:429:431	7169456	2	True				
ANR	7169580	Identifier	x		7169456	0					
ANR	7169581	IncDec	++		7169456	1					
ANR	7169582	CompoundStatement		31:16:367:391	7169456	3					
ANR	7169583	IdentifierDeclStatement	int i = src [ x + y * stride ] ;	31:16:452:476	7169456	0	True				
ANR	7169584	IdentifierDecl	i = src [ x + y * stride ]		7169456	0					
ANR	7169585	IdentifierDeclType	int		7169456	0					
ANR	7169586	Identifier	i		7169456	1					
ANR	7169587	AssignmentExpression	i = src [ x + y * stride ]		7169456	2		=			
ANR	7169588	Identifier	i		7169456	0					
ANR	7169589	ArrayIndexing	src [ x + y * stride ]		7169456	1					
ANR	7169590	Identifier	src		7169456	0					
ANR	7169591	AdditiveExpression	x + y * stride		7169456	1		+			
ANR	7169592	Identifier	x		7169456	0					
ANR	7169593	MultiplicativeExpression	y * stride		7169456	1		*			
ANR	7169594	Identifier	y		7169456	0					
ANR	7169595	Identifier	stride		7169456	1					
ANR	7169596	IfStatement	if ( i >= 0 )		7169456	1					
ANR	7169597	Condition	i >= 0	39:19:602:605	7169456	0	True				
ANR	7169598	RelationalExpression	i >= 0		7169456	0		>=			
ANR	7169599	Identifier	i		7169456	0					
ANR	7169600	PrimaryExpression	0		7169456	1					
ANR	7169601	CompoundStatement		39:24:522:522	7169456	1					
ANR	7169602	ExpressionStatement	i <<= QEXPSHIFT	41:20:630:644	7169456	0	True				
ANR	7169603	AssignmentExpression	i <<= QEXPSHIFT		7169456	0		<<=			
ANR	7169604	Identifier	i		7169456	0					
ANR	7169605	Identifier	QEXPSHIFT		7169456	1					
ANR	7169606	ExpressionStatement	i /= qmul	43:20:667:675	7169456	1	True				
ANR	7169607	AssignmentExpression	i /= qmul		7169456	0		/=			
ANR	7169608	Identifier	i		7169456	0					
ANR	7169609	Identifier	qmul		7169456	1					
ANR	7169610	ExpressionStatement	src [ x + y * stride ] = i	45:20:698:719	7169456	2	True				
ANR	7169611	AssignmentExpression	src [ x + y * stride ] = i		7169456	0		=			
ANR	7169612	ArrayIndexing	src [ x + y * stride ]		7169456	0					
ANR	7169613	Identifier	src		7169456	0					
ANR	7169614	AdditiveExpression	x + y * stride		7169456	1		+			
ANR	7169615	Identifier	x		7169456	0					
ANR	7169616	MultiplicativeExpression	y * stride		7169456	1		*			
ANR	7169617	Identifier	y		7169456	0					
ANR	7169618	Identifier	stride		7169456	1					
ANR	7169619	Identifier	i		7169456	1					
ANR	7169620	ElseStatement	else		7169456	0					
ANR	7169621	CompoundStatement		47:21:658:658	7169456	0					
ANR	7169622	ExpressionStatement	i = - i	49:20:766:771	7169456	0	True				
ANR	7169623	AssignmentExpression	i = - i		7169456	0		=			
ANR	7169624	Identifier	i		7169456	0					
ANR	7169625	UnaryOperationExpression	- i		7169456	1					
ANR	7169626	UnaryOperator	-		7169456	0					
ANR	7169627	Identifier	i		7169456	1					
ANR	7169628	ExpressionStatement	i <<= QEXPSHIFT	51:20:794:808	7169456	1	True				
ANR	7169629	AssignmentExpression	i <<= QEXPSHIFT		7169456	0		<<=			
ANR	7169630	Identifier	i		7169456	0					
ANR	7169631	Identifier	QEXPSHIFT		7169456	1					
ANR	7169632	ExpressionStatement	i /= qmul	53:20:831:839	7169456	2	True				
ANR	7169633	AssignmentExpression	i /= qmul		7169456	0		/=			
ANR	7169634	Identifier	i		7169456	0					
ANR	7169635	Identifier	qmul		7169456	1					
ANR	7169636	ExpressionStatement	src [ x + y * stride ] = - i	55:20:862:883	7169456	3	True				
ANR	7169637	AssignmentExpression	src [ x + y * stride ] = - i		7169456	0		=			
ANR	7169638	ArrayIndexing	src [ x + y * stride ]		7169456	0					
ANR	7169639	Identifier	src		7169456	0					
ANR	7169640	AdditiveExpression	x + y * stride		7169456	1		+			
ANR	7169641	Identifier	x		7169456	0					
ANR	7169642	MultiplicativeExpression	y * stride		7169456	1		*			
ANR	7169643	Identifier	y		7169456	0					
ANR	7169644	Identifier	stride		7169456	1					
ANR	7169645	UnaryOperationExpression	- i		7169456	1					
ANR	7169646	UnaryOperator	-		7169456	0					
ANR	7169647	Identifier	i		7169456	1					
ANR	7169648	ElseStatement	else		7169456	0					
ANR	7169649	CompoundStatement		63:9:855:855	7169456	0					
ANR	7169650	ForStatement	for ( y = 0 ; y < h ; y ++ )		7169456	0					
ANR	7169651	ForInit	y = 0 ;	65:12:955:958	7169456	0	True				
ANR	7169652	AssignmentExpression	y = 0		7169456	0		=			
ANR	7169653	Identifier	y		7169456	0					
ANR	7169654	PrimaryExpression	0		7169456	1					
ANR	7169655	Condition	y < h	65:17:960:962	7169456	1	True				
ANR	7169656	RelationalExpression	y < h		7169456	0		<			
ANR	7169657	Identifier	y		7169456	0					
ANR	7169658	Identifier	h		7169456	1					
ANR	7169659	PostIncDecOperationExpression	y ++	65:22:965:967	7169456	2	True				
ANR	7169660	Identifier	y		7169456	0					
ANR	7169661	IncDec	++		7169456	1					
ANR	7169662	CompoundStatement		65:26:884:884	7169456	3					
ANR	7169663	ForStatement	for ( x = 0 ; x < w ; x ++ )		7169456	0					
ANR	7169664	ForInit	x = 0 ;	67:16:988:991	7169456	0	True				
ANR	7169665	AssignmentExpression	x = 0		7169456	0		=			
ANR	7169666	Identifier	x		7169456	0					
ANR	7169667	PrimaryExpression	0		7169456	1					
ANR	7169668	Condition	x < w	67:21:993:995	7169456	1	True				
ANR	7169669	RelationalExpression	x < w		7169456	0		<			
ANR	7169670	Identifier	x		7169456	0					
ANR	7169671	Identifier	w		7169456	1					
ANR	7169672	PostIncDecOperationExpression	x ++	67:26:998:1000	7169456	2	True				
ANR	7169673	Identifier	x		7169456	0					
ANR	7169674	IncDec	++		7169456	1					
ANR	7169675	CompoundStatement		69:16:936:960	7169456	3					
ANR	7169676	IdentifierDeclStatement	int i = src [ x + y * stride ] ;	69:16:1021:1045	7169456	0	True				
ANR	7169677	IdentifierDecl	i = src [ x + y * stride ]		7169456	0					
ANR	7169678	IdentifierDeclType	int		7169456	0					
ANR	7169679	Identifier	i		7169456	1					
ANR	7169680	AssignmentExpression	i = src [ x + y * stride ]		7169456	2		=			
ANR	7169681	Identifier	i		7169456	0					
ANR	7169682	ArrayIndexing	src [ x + y * stride ]		7169456	1					
ANR	7169683	Identifier	src		7169456	0					
ANR	7169684	AdditiveExpression	x + y * stride		7169456	1		+			
ANR	7169685	Identifier	x		7169456	0					
ANR	7169686	MultiplicativeExpression	y * stride		7169456	1		*			
ANR	7169687	Identifier	y		7169456	0					
ANR	7169688	Identifier	stride		7169456	1					
ANR	7169689	IfStatement	if ( i >= 0 )		7169456	1					
ANR	7169690	Condition	i >= 0	79:19:1189:1192	7169456	0	True				
ANR	7169691	RelationalExpression	i >= 0		7169456	0		>=			
ANR	7169692	Identifier	i		7169456	0					
ANR	7169693	PrimaryExpression	0		7169456	1					
ANR	7169694	CompoundStatement		79:24:1109:1109	7169456	1					
ANR	7169695	ExpressionStatement	i <<= QEXPSHIFT	81:20:1217:1231	7169456	0	True				
ANR	7169696	AssignmentExpression	i <<= QEXPSHIFT		7169456	0		<<=			
ANR	7169697	Identifier	i		7169456	0					
ANR	7169698	Identifier	QEXPSHIFT		7169456	1					
ANR	7169699	ExpressionStatement	i = ( i + bias ) / qmul	83:20:1254:1274	7169456	1	True				
ANR	7169700	AssignmentExpression	i = ( i + bias ) / qmul		7169456	0		=			
ANR	7169701	Identifier	i		7169456	0					
ANR	7169702	MultiplicativeExpression	( i + bias ) / qmul		7169456	1		/			
ANR	7169703	AdditiveExpression	i + bias		7169456	0		+			
ANR	7169704	Identifier	i		7169456	0					
ANR	7169705	Identifier	bias		7169456	1					
ANR	7169706	Identifier	qmul		7169456	1					
ANR	7169707	ExpressionStatement	src [ x + y * stride ] = i	85:20:1297:1318	7169456	2	True				
ANR	7169708	AssignmentExpression	src [ x + y * stride ] = i		7169456	0		=			
ANR	7169709	ArrayIndexing	src [ x + y * stride ]		7169456	0					
ANR	7169710	Identifier	src		7169456	0					
ANR	7169711	AdditiveExpression	x + y * stride		7169456	1		+			
ANR	7169712	Identifier	x		7169456	0					
ANR	7169713	MultiplicativeExpression	y * stride		7169456	1		*			
ANR	7169714	Identifier	y		7169456	0					
ANR	7169715	Identifier	stride		7169456	1					
ANR	7169716	Identifier	i		7169456	1					
ANR	7169717	ElseStatement	else		7169456	0					
ANR	7169718	CompoundStatement		87:21:1257:1257	7169456	0					
ANR	7169719	ExpressionStatement	i = - i	89:20:1365:1370	7169456	0	True				
ANR	7169720	AssignmentExpression	i = - i		7169456	0		=			
ANR	7169721	Identifier	i		7169456	0					
ANR	7169722	UnaryOperationExpression	- i		7169456	1					
ANR	7169723	UnaryOperator	-		7169456	0					
ANR	7169724	Identifier	i		7169456	1					
ANR	7169725	ExpressionStatement	i <<= QEXPSHIFT	91:20:1393:1407	7169456	1	True				
ANR	7169726	AssignmentExpression	i <<= QEXPSHIFT		7169456	0		<<=			
ANR	7169727	Identifier	i		7169456	0					
ANR	7169728	Identifier	QEXPSHIFT		7169456	1					
ANR	7169729	ExpressionStatement	i = ( i + bias ) / qmul	93:20:1430:1450	7169456	2	True				
ANR	7169730	AssignmentExpression	i = ( i + bias ) / qmul		7169456	0		=			
ANR	7169731	Identifier	i		7169456	0					
ANR	7169732	MultiplicativeExpression	( i + bias ) / qmul		7169456	1		/			
ANR	7169733	AdditiveExpression	i + bias		7169456	0		+			
ANR	7169734	Identifier	i		7169456	0					
ANR	7169735	Identifier	bias		7169456	1					
ANR	7169736	Identifier	qmul		7169456	1					
ANR	7169737	ExpressionStatement	src [ x + y * stride ] = - i	95:20:1473:1494	7169456	3	True				
ANR	7169738	AssignmentExpression	src [ x + y * stride ] = - i		7169456	0		=			
ANR	7169739	ArrayIndexing	src [ x + y * stride ]		7169456	0					
ANR	7169740	Identifier	src		7169456	0					
ANR	7169741	AdditiveExpression	x + y * stride		7169456	1		+			
ANR	7169742	Identifier	x		7169456	0					
ANR	7169743	MultiplicativeExpression	y * stride		7169456	1		*			
ANR	7169744	Identifier	y		7169456	0					
ANR	7169745	Identifier	stride		7169456	1					
ANR	7169746	UnaryOperationExpression	- i		7169456	1					
ANR	7169747	UnaryOperator	-		7169456	0					
ANR	7169748	Identifier	i		7169456	1					
ANR	7169749	ReturnType	static void		7169456	1					
ANR	7169750	Identifier	quantize		7169456	2					
ANR	7169751	ParameterList	"SnowContext * s , SubBand * b , DWTELEM * src , int stride , int bias"		7169456	3					
ANR	7169752	Parameter	SnowContext * s	1:21:21:34	7169456	0	True				
ANR	7169753	ParameterType	SnowContext *		7169456	0					
ANR	7169754	Identifier	s		7169456	1					
ANR	7169755	Parameter	SubBand * b	1:37:37:46	7169456	1	True				
ANR	7169756	ParameterType	SubBand *		7169456	0					
ANR	7169757	Identifier	b		7169456	1					
ANR	7169758	Parameter	DWTELEM * src	1:49:49:60	7169456	2	True				
ANR	7169759	ParameterType	DWTELEM *		7169456	0					
ANR	7169760	Identifier	src		7169456	1					
ANR	7169761	Parameter	int stride	1:63:63:72	7169456	3	True				
ANR	7169762	ParameterType	int		7169456	0					
ANR	7169763	Identifier	stride		7169456	1					
ANR	7169764	Parameter	int bias	1:75:75:82	7169456	4	True				
ANR	7169765	ParameterType	int		7169456	0					
ANR	7169766	Identifier	bias		7169456	1					
ANR	7169767	CFGEntryNode	ENTRY		7169456		True				
ANR	7169768	CFGExitNode	EXIT		7169456		True				
ANR	7169769	Symbol	* stride		7169456						
ANR	7169770	Symbol	* x		7169456						
ANR	7169771	Symbol	* y		7169456						
ANR	7169772	Symbol	qlog		7169456						
ANR	7169773	Symbol	qmul		7169456						
ANR	7169774	Symbol	* qlog		7169456						
ANR	7169775	Symbol	stride		7169456						
ANR	7169776	Symbol	b -> width		7169456						
ANR	7169777	Symbol	* src		7169456						
ANR	7169778	Symbol	b -> qlog		7169456						
ANR	7169779	Symbol	bias		7169456						
ANR	7169780	Symbol	* qexp		7169456						
ANR	7169781	Symbol	b		7169456						
ANR	7169782	Symbol	src		7169456						
ANR	7169783	Symbol	level		7169456						
ANR	7169784	Symbol	QEXPSHIFT		7169456						
ANR	7169785	Symbol	h		7169456						
ANR	7169786	Symbol	QROOT		7169456						
ANR	7169787	Symbol	i		7169456						
ANR	7169788	Symbol	* b		7169456						
ANR	7169789	Symbol	b -> level		7169456						
ANR	7169790	Symbol	b -> height		7169456						
ANR	7169791	Symbol	s		7169456						
ANR	7169792	Symbol	s -> qlog		7169456						
ANR	7169793	Symbol	w		7169456						
ANR	7169794	Symbol	qexp		7169456						
ANR	7169795	Symbol	x		7169456						
ANR	7169796	Symbol	y		7169456						
ANR	7169797	Symbol	* s		7169456						
ANR	7169798	Symbol	clip		7169456						
