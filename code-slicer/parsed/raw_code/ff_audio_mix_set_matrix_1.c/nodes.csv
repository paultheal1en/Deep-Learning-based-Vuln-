command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3200903	File	/home/p4ultr4n/workplace/ReVeal/raw_code/ff_audio_mix_set_matrix_1.c								
ANR	3200904	Function	ff_audio_mix_set_matrix	1:0:0:4170							
ANR	3200905	FunctionDef	"ff_audio_mix_set_matrix (AudioMix * am , const double * matrix , int stride)"		3200904	0					
ANR	3200906	CompoundStatement		3:0:77:4170	3200904	0					
ANR	3200907	IdentifierDeclStatement	"int i , o , i0 , o0 , ret ;"	5:4:84:105	3200904	0	True				
ANR	3200908	IdentifierDecl	i		3200904	0					
ANR	3200909	IdentifierDeclType	int		3200904	0					
ANR	3200910	Identifier	i		3200904	1					
ANR	3200911	IdentifierDecl	o		3200904	1					
ANR	3200912	IdentifierDeclType	int		3200904	0					
ANR	3200913	Identifier	o		3200904	1					
ANR	3200914	IdentifierDecl	i0		3200904	2					
ANR	3200915	IdentifierDeclType	int		3200904	0					
ANR	3200916	Identifier	i0		3200904	1					
ANR	3200917	IdentifierDecl	o0		3200904	3					
ANR	3200918	IdentifierDeclType	int		3200904	0					
ANR	3200919	Identifier	o0		3200904	1					
ANR	3200920	IdentifierDecl	ret		3200904	4					
ANR	3200921	IdentifierDeclType	int		3200904	0					
ANR	3200922	Identifier	ret		3200904	1					
ANR	3200923	IdentifierDeclStatement	char in_layout_name [ 128 ] ;	7:4:112:136	3200904	1	True				
ANR	3200924	IdentifierDecl	in_layout_name [ 128 ]		3200904	0					
ANR	3200925	IdentifierDeclType	char [ 128 ]		3200904	0					
ANR	3200926	Identifier	in_layout_name		3200904	1					
ANR	3200927	PrimaryExpression	128		3200904	2					
ANR	3200928	IdentifierDeclStatement	char out_layout_name [ 128 ] ;	9:4:143:168	3200904	2	True				
ANR	3200929	IdentifierDecl	out_layout_name [ 128 ]		3200904	0					
ANR	3200930	IdentifierDeclType	char [ 128 ]		3200904	0					
ANR	3200931	Identifier	out_layout_name		3200904	1					
ANR	3200932	PrimaryExpression	128		3200904	2					
ANR	3200933	IfStatement	if ( am -> in_channels <= 0 || am -> in_channels > AVRESAMPLE_MAX_CHANNELS || am -> out_channels <= 0 || am -> out_channels > AVRESAMPLE_MAX_CHANNELS )		3200904	3					
ANR	3200934	Condition	am -> in_channels <= 0 || am -> in_channels > AVRESAMPLE_MAX_CHANNELS || am -> out_channels <= 0 || am -> out_channels > AVRESAMPLE_MAX_CHANNELS	13:9:182:327	3200904	0	True				
ANR	3200935	OrExpression	am -> in_channels <= 0 || am -> in_channels > AVRESAMPLE_MAX_CHANNELS || am -> out_channels <= 0 || am -> out_channels > AVRESAMPLE_MAX_CHANNELS		3200904	0		||			
ANR	3200936	RelationalExpression	am -> in_channels <= 0		3200904	0		<=			
ANR	3200937	PtrMemberAccess	am -> in_channels		3200904	0					
ANR	3200938	Identifier	am		3200904	0					
ANR	3200939	Identifier	in_channels		3200904	1					
ANR	3200940	PrimaryExpression	0		3200904	1					
ANR	3200941	OrExpression	am -> in_channels > AVRESAMPLE_MAX_CHANNELS || am -> out_channels <= 0 || am -> out_channels > AVRESAMPLE_MAX_CHANNELS		3200904	1		||			
ANR	3200942	RelationalExpression	am -> in_channels > AVRESAMPLE_MAX_CHANNELS		3200904	0		>			
ANR	3200943	PtrMemberAccess	am -> in_channels		3200904	0					
ANR	3200944	Identifier	am		3200904	0					
ANR	3200945	Identifier	in_channels		3200904	1					
ANR	3200946	Identifier	AVRESAMPLE_MAX_CHANNELS		3200904	1					
ANR	3200947	OrExpression	am -> out_channels <= 0 || am -> out_channels > AVRESAMPLE_MAX_CHANNELS		3200904	1		||			
ANR	3200948	RelationalExpression	am -> out_channels <= 0		3200904	0		<=			
ANR	3200949	PtrMemberAccess	am -> out_channels		3200904	0					
ANR	3200950	Identifier	am		3200904	0					
ANR	3200951	Identifier	out_channels		3200904	1					
ANR	3200952	PrimaryExpression	0		3200904	1					
ANR	3200953	RelationalExpression	am -> out_channels > AVRESAMPLE_MAX_CHANNELS		3200904	1		>			
ANR	3200954	PtrMemberAccess	am -> out_channels		3200904	0					
ANR	3200955	Identifier	am		3200904	0					
ANR	3200956	Identifier	out_channels		3200904	1					
ANR	3200957	Identifier	AVRESAMPLE_MAX_CHANNELS		3200904	1					
ANR	3200958	CompoundStatement		13:77:252:252	3200904	1					
ANR	3200959	ExpressionStatement	"av_log ( am -> avr , AV_LOG_ERROR , ""Invalid channel counts\\n"" )"	17:8:341:398	3200904	0	True				
ANR	3200960	CallExpression	"av_log ( am -> avr , AV_LOG_ERROR , ""Invalid channel counts\\n"" )"		3200904	0					
ANR	3200961	Callee	av_log		3200904	0					
ANR	3200962	Identifier	av_log		3200904	0					
ANR	3200963	ArgumentList	am -> avr		3200904	1					
ANR	3200964	Argument	am -> avr		3200904	0					
ANR	3200965	PtrMemberAccess	am -> avr		3200904	0					
ANR	3200966	Identifier	am		3200904	0					
ANR	3200967	Identifier	avr		3200904	1					
ANR	3200968	Argument	AV_LOG_ERROR		3200904	1					
ANR	3200969	Identifier	AV_LOG_ERROR		3200904	0					
ANR	3200970	Argument	"""Invalid channel counts\\n"""		3200904	2					
ANR	3200971	PrimaryExpression	"""Invalid channel counts\\n"""		3200904	0					
ANR	3200972	ReturnStatement	return AVERROR ( EINVAL ) ;	19:8:409:431	3200904	1	True				
ANR	3200973	CallExpression	AVERROR ( EINVAL )		3200904	0					
ANR	3200974	Callee	AVERROR		3200904	0					
ANR	3200975	Identifier	AVERROR		3200904	0					
ANR	3200976	ArgumentList	EINVAL		3200904	1					
ANR	3200977	Argument	EINVAL		3200904	0					
ANR	3200978	Identifier	EINVAL		3200904	0					
ANR	3200979	IfStatement	if ( am -> matrix )		3200904	4					
ANR	3200980	Condition	am -> matrix	25:8:451:460	3200904	0	True				
ANR	3200981	PtrMemberAccess	am -> matrix		3200904	0					
ANR	3200982	Identifier	am		3200904	0					
ANR	3200983	Identifier	matrix		3200904	1					
ANR	3200984	CompoundStatement		23:20:385:385	3200904	1					
ANR	3200985	ExpressionStatement	av_free ( am -> matrix [ 0 ] )	27:8:474:496	3200904	0	True				
ANR	3200986	CallExpression	av_free ( am -> matrix [ 0 ] )		3200904	0					
ANR	3200987	Callee	av_free		3200904	0					
ANR	3200988	Identifier	av_free		3200904	0					
ANR	3200989	ArgumentList	am -> matrix [ 0 ]		3200904	1					
ANR	3200990	Argument	am -> matrix [ 0 ]		3200904	0					
ANR	3200991	ArrayIndexing	am -> matrix [ 0 ]		3200904	0					
ANR	3200992	PtrMemberAccess	am -> matrix		3200904	0					
ANR	3200993	Identifier	am		3200904	0					
ANR	3200994	Identifier	matrix		3200904	1					
ANR	3200995	PrimaryExpression	0		3200904	1					
ANR	3200996	ExpressionStatement	am -> matrix = NULL	29:8:507:524	3200904	1	True				
ANR	3200997	AssignmentExpression	am -> matrix = NULL		3200904	0		=			
ANR	3200998	PtrMemberAccess	am -> matrix		3200904	0					
ANR	3200999	Identifier	am		3200904	0					
ANR	3201000	Identifier	matrix		3200904	1					
ANR	3201001	Identifier	NULL		3200904	1					
ANR	3201002	ExpressionStatement	am -> in_matrix_channels = am -> in_channels	35:4:540:581	3200904	5	True				
ANR	3201003	AssignmentExpression	am -> in_matrix_channels = am -> in_channels		3200904	0		=			
ANR	3201004	PtrMemberAccess	am -> in_matrix_channels		3200904	0					
ANR	3201005	Identifier	am		3200904	0					
ANR	3201006	Identifier	in_matrix_channels		3200904	1					
ANR	3201007	PtrMemberAccess	am -> in_channels		3200904	1					
ANR	3201008	Identifier	am		3200904	0					
ANR	3201009	Identifier	in_channels		3200904	1					
ANR	3201010	ExpressionStatement	am -> out_matrix_channels = am -> out_channels	37:4:588:630	3200904	6	True				
ANR	3201011	AssignmentExpression	am -> out_matrix_channels = am -> out_channels		3200904	0		=			
ANR	3201012	PtrMemberAccess	am -> out_matrix_channels		3200904	0					
ANR	3201013	Identifier	am		3200904	0					
ANR	3201014	Identifier	out_matrix_channels		3200904	1					
ANR	3201015	PtrMemberAccess	am -> out_channels		3200904	1					
ANR	3201016	Identifier	am		3200904	0					
ANR	3201017	Identifier	out_channels		3200904	1					
ANR	3201018	ExpressionStatement	"reduce_matrix ( am , matrix , stride )"	41:4:639:672	3200904	7	True				
ANR	3201019	CallExpression	"reduce_matrix ( am , matrix , stride )"		3200904	0					
ANR	3201020	Callee	reduce_matrix		3200904	0					
ANR	3201021	Identifier	reduce_matrix		3200904	0					
ANR	3201022	ArgumentList	am		3200904	1					
ANR	3201023	Argument	am		3200904	0					
ANR	3201024	Identifier	am		3200904	0					
ANR	3201025	Argument	matrix		3200904	1					
ANR	3201026	Identifier	matrix		3200904	0					
ANR	3201027	Argument	stride		3200904	2					
ANR	3201028	Identifier	stride		3200904	0					
ANR	3201029	Statement	define	45:1:678:683	3200904	8	True				
ANR	3201030	Statement	CONVERT_MATRIX	45:8:685:698	3200904	9	True				
ANR	3201031	Statement	(	45:22:699:699	3200904	10	True				
ANR	3201032	Statement	type	45:23:700:703	3200904	11	True				
ANR	3201033	Statement	","	45:27:704:704	3200904	12	True				
ANR	3201034	Statement	expr	45:29:706:709	3200904	13	True				
ANR	3201035	Statement	)	45:33:710:710	3200904	14	True				
ANR	3201036	Statement	am	47:4:760:761	3200904	15	True				
ANR	3201037	Statement	->	47:6:762:763	3200904	16	True				
ANR	3201038	Statement	matrix_	47:8:764:770	3200904	17	True				
ANR	3201039	Statement	type	47:18:774:777	3200904	18	True				
ANR	3201040	Statement	[	47:22:778:778	3200904	19	True				
ANR	3201041	Statement	0	47:23:779:779	3200904	20	True				
ANR	3201042	Statement	]	47:24:780:780	3200904	21	True				
ANR	3201043	Statement	=	47:26:782:782	3200904	22	True				
ANR	3201044	Statement	av_mallocz	47:28:784:793	3200904	23	True				
ANR	3201045	Statement	(	47:38:794:794	3200904	24	True				
ANR	3201046	Statement	am	47:39:795:796	3200904	25	True				
ANR	3201047	Statement	->	47:41:797:798	3200904	26	True				
ANR	3201048	Statement	out_matrix_channels	47:43:799:817	3200904	27	True				
ANR	3201049	Statement	*	47:63:819:819	3200904	28	True				
ANR	3201050	Statement	am	49:39:874:875	3200904	29	True				
ANR	3201051	Statement	->	49:41:876:877	3200904	30	True				
ANR	3201052	Statement	in_matrix_channels	49:43:878:895	3200904	31	True				
ANR	3201053	Statement	*	49:63:898:898	3200904	32	True				
ANR	3201054	Statement	sizeof	51:39:953:958	3200904	33	True				
ANR	3201055	Statement	(	51:45:959:959	3200904	34	True				
ANR	3201056	Statement	*	51:46:960:960	3200904	35	True				
ANR	3201057	Statement	am	51:47:961:962	3200904	36	True				
ANR	3201058	Statement	->	51:49:963:964	3200904	37	True				
ANR	3201059	Statement	matrix_	51:51:965:971	3200904	38	True				
ANR	3201060	Statement	type	51:61:975:978	3200904	39	True				
ANR	3201061	Statement	[	51:65:979:979	3200904	40	True				
ANR	3201062	Statement	0	51:66:980:980	3200904	41	True				
ANR	3201063	Statement	]	51:67:981:981	3200904	42	True				
ANR	3201064	Statement	)	51:68:982:982	3200904	43	True				
ANR	3201065	Statement	)	51:69:983:983	3200904	44	True				
ANR	3201066	ExpressionStatement		51:70:984:984	3200904	45	True				
ANR	3201067	Statement	if	53:4:997:998	3200904	46	True				
ANR	3201068	Statement	(	53:7:1000:1000	3200904	47	True				
ANR	3201069	Statement	!	53:8:1001:1001	3200904	48	True				
ANR	3201070	Statement	am	53:9:1002:1003	3200904	49	True				
ANR	3201071	Statement	->	53:11:1004:1005	3200904	50	True				
ANR	3201072	Statement	matrix_	53:13:1006:1012	3200904	51	True				
ANR	3201073	Statement	type	53:23:1016:1019	3200904	52	True				
ANR	3201074	Statement	[	53:27:1020:1020	3200904	53	True				
ANR	3201075	Statement	0	53:28:1021:1021	3200904	54	True				
ANR	3201076	Statement	]	53:29:1022:1022	3200904	55	True				
ANR	3201077	Statement	)	53:30:1023:1023	3200904	56	True				
ANR	3201078	ReturnStatement	return AVERROR ( ENOMEM ) ;	55:8:1080:1102	3200904	57	True				
ANR	3201079	CallExpression	AVERROR ( ENOMEM )		3200904	0					
ANR	3201080	Callee	AVERROR		3200904	0					
ANR	3201081	Identifier	AVERROR		3200904	0					
ANR	3201082	ArgumentList	ENOMEM		3200904	1					
ANR	3201083	Argument	ENOMEM		3200904	0					
ANR	3201084	Identifier	ENOMEM		3200904	0					
ANR	3201085	ForStatement	"for ( o = 0 , o0 = 0 ; o < am -> out_channels ; o ++ )"		3200904	58					
ANR	3201086	ForInit	"o = 0 , o0 = 0 ;"	57:9:1160:1173	3200904	0	True				
ANR	3201087	Expression	"o = 0 , o0 = 0"		3200904	0					
ANR	3201088	AssignmentExpression	o = 0		3200904	0		=			
ANR	3201089	Identifier	o		3200904	0					
ANR	3201090	PrimaryExpression	0		3200904	1					
ANR	3201091	AssignmentExpression	o0 = 0		3200904	1		=			
ANR	3201092	Identifier	o0		3200904	0					
ANR	3201093	PrimaryExpression	0		3200904	1					
ANR	3201094	Condition	o < am -> out_channels	57:24:1175:1194	3200904	1	True				
ANR	3201095	RelationalExpression	o < am -> out_channels		3200904	0		<			
ANR	3201096	Identifier	o		3200904	0					
ANR	3201097	PtrMemberAccess	am -> out_channels		3200904	1					
ANR	3201098	Identifier	am		3200904	0					
ANR	3201099	Identifier	out_channels		3200904	1					
ANR	3201100	PostIncDecOperationExpression	o ++	57:46:1197:1199	3200904	2	True				
ANR	3201101	Identifier	o		3200904	0					
ANR	3201102	IncDec	++		3200904	1					
ANR	3201103	CompoundStatement		55:51:1124:1124	3200904	3					
ANR	3201104	IfStatement	if ( am -> output_zero [ o ] || am -> output_skip [ o ] )		3200904	0					
ANR	3201105	Condition	am -> output_zero [ o ] || am -> output_skip [ o ]	59:12:1242:1281	3200904	0	True				
ANR	3201106	OrExpression	am -> output_zero [ o ] || am -> output_skip [ o ]		3200904	0		||			
ANR	3201107	ArrayIndexing	am -> output_zero [ o ]		3200904	0					
ANR	3201108	PtrMemberAccess	am -> output_zero		3200904	0					
ANR	3201109	Identifier	am		3200904	0					
ANR	3201110	Identifier	output_zero		3200904	1					
ANR	3201111	Identifier	o		3200904	1					
ANR	3201112	ArrayIndexing	am -> output_skip [ o ]		3200904	1					
ANR	3201113	PtrMemberAccess	am -> output_skip		3200904	0					
ANR	3201114	Identifier	am		3200904	0					
ANR	3201115	Identifier	output_skip		3200904	1					
ANR	3201116	Identifier	o		3200904	1					
ANR	3201117	ContinueStatement	continue ;	61:12:1321:1329	3200904	1	True				
ANR	3201118	IfStatement	if ( o0 > 0 )		3200904	1					
ANR	3201119	Condition	o0 > 0	63:12:1400:1405	3200904	0	True				
ANR	3201120	RelationalExpression	o0 > 0		3200904	0		>			
ANR	3201121	Identifier	o0		3200904	0					
ANR	3201122	PrimaryExpression	0		3200904	1					
ANR	3201123	Statement	am	65:12:1479:1480	3200904	1	True				
ANR	3201124	Statement	->	65:14:1481:1482	3200904	2	True				
ANR	3201125	Statement	matrix_	65:16:1483:1489	3200904	3	True				
ANR	3201126	Statement	type	65:26:1493:1496	3200904	4	True				
ANR	3201127	Statement	[	65:30:1497:1497	3200904	5	True				
ANR	3201128	Statement	o0	65:31:1498:1499	3200904	6	True				
ANR	3201129	Statement	]	65:33:1500:1500	3200904	7	True				
ANR	3201130	Statement	=	65:35:1502:1502	3200904	8	True				
ANR	3201131	Statement	am	65:37:1504:1505	3200904	9	True				
ANR	3201132	Statement	->	65:39:1506:1507	3200904	10	True				
ANR	3201133	Statement	matrix_	65:41:1508:1514	3200904	11	True				
ANR	3201134	ExpressionStatement	type [ o0 - 1 ] + am -> in_matrix_channels	65:51:1518:1605	3200904	12	True				
ANR	3201135	AdditiveExpression	type [ o0 - 1 ] + am -> in_matrix_channels		3200904	0		+			
ANR	3201136	ArrayIndexing	type [ o0 - 1 ]		3200904	0					
ANR	3201137	Identifier	type		3200904	0					
ANR	3201138	AdditiveExpression	o0 - 1		3200904	1		-			
ANR	3201139	Identifier	o0		3200904	0					
ANR	3201140	PrimaryExpression	1		3200904	1					
ANR	3201141	PtrMemberAccess	am -> in_matrix_channels		3200904	1					
ANR	3201142	Identifier	am		3200904	0					
ANR	3201143	Identifier	in_matrix_channels		3200904	1					
ANR	3201144	ForStatement	"for ( i = 0 , i0 = 0 ; i < am -> in_channels ; i ++ )"		3200904	13					
ANR	3201145	ForInit	"i = 0 , i0 = 0 ;"	69:13:1638:1651	3200904	0	True				
ANR	3201146	Expression	"i = 0 , i0 = 0"		3200904	0					
ANR	3201147	AssignmentExpression	i = 0		3200904	0		=			
ANR	3201148	Identifier	i		3200904	0					
ANR	3201149	PrimaryExpression	0		3200904	1					
ANR	3201150	AssignmentExpression	i0 = 0		3200904	1		=			
ANR	3201151	Identifier	i0		3200904	0					
ANR	3201152	PrimaryExpression	0		3200904	1					
ANR	3201153	Condition	i < am -> in_channels	69:28:1653:1671	3200904	1	True				
ANR	3201154	RelationalExpression	i < am -> in_channels		3200904	0		<			
ANR	3201155	Identifier	i		3200904	0					
ANR	3201156	PtrMemberAccess	am -> in_channels		3200904	1					
ANR	3201157	Identifier	am		3200904	0					
ANR	3201158	Identifier	in_channels		3200904	1					
ANR	3201159	PostIncDecOperationExpression	i ++	69:49:1674:1676	3200904	2	True				
ANR	3201160	Identifier	i		3200904	0					
ANR	3201161	IncDec	++		3200904	1					
ANR	3201162	CompoundStatement		69:12:1638:1646	3200904	3					
ANR	3201163	IdentifierDeclStatement	double v ;	71:12:1716:1724	3200904	0	True				
ANR	3201164	IdentifierDecl	v		3200904	0					
ANR	3201165	IdentifierDeclType	double		3200904	0					
ANR	3201166	Identifier	v		3200904	1					
ANR	3201167	IfStatement	if ( am -> input_skip [ i ] )		3200904	1					
ANR	3201168	Condition	am -> input_skip [ i ]	73:16:1799:1815	3200904	0	True				
ANR	3201169	ArrayIndexing	am -> input_skip [ i ]		3200904	0					
ANR	3201170	PtrMemberAccess	am -> input_skip		3200904	0					
ANR	3201171	Identifier	am		3200904	0					
ANR	3201172	Identifier	input_skip		3200904	1					
ANR	3201173	Identifier	i		3200904	1					
ANR	3201174	ContinueStatement	continue ;	75:16:1878:1886	3200904	1	True				
ANR	3201175	ExpressionStatement	v = matrix [ o * stride + i ]	77:12:1953:1979	3200904	2	True				
ANR	3201176	AssignmentExpression	v = matrix [ o * stride + i ]		3200904	0		=			
ANR	3201177	Identifier	v		3200904	0					
ANR	3201178	ArrayIndexing	matrix [ o * stride + i ]		3200904	1					
ANR	3201179	Identifier	matrix		3200904	0					
ANR	3201180	AdditiveExpression	o * stride + i		3200904	1		+			
ANR	3201181	MultiplicativeExpression	o * stride		3200904	0		*			
ANR	3201182	Identifier	o		3200904	0					
ANR	3201183	Identifier	stride		3200904	1					
ANR	3201184	Identifier	i		3200904	1					
ANR	3201185	Statement	am	79:12:2032:2033	3200904	3	True				
ANR	3201186	Statement	->	79:14:2034:2035	3200904	4	True				
ANR	3201187	Statement	matrix_	79:16:2036:2042	3200904	5	True				
ANR	3201188	ExpressionStatement	type [ o0 ] [ i0 ] = expr	79:26:2046:2065	3200904	6	True				
ANR	3201189	AssignmentExpression	type [ o0 ] [ i0 ] = expr		3200904	0		=			
ANR	3201190	ArrayIndexing	type [ o0 ] [ i0 ]		3200904	0					
ANR	3201191	ArrayIndexing	type [ o0 ]		3200904	0					
ANR	3201192	Identifier	type		3200904	0					
ANR	3201193	Identifier	o0		3200904	1					
ANR	3201194	Identifier	i0		3200904	1					
ANR	3201195	Identifier	expr		3200904	1					
ANR	3201196	ExpressionStatement	i0 ++	81:12:2111:2115	3200904	7	True				
ANR	3201197	PostIncDecOperationExpression	i0 ++		3200904	0					
ANR	3201198	Identifier	i0		3200904	0					
ANR	3201199	IncDec	++		3200904	1					
ANR	3201200	ExpressionStatement	o0 ++	85:8:2265:2269	3200904	14	True				
ANR	3201201	PostIncDecOperationExpression	o0 ++		3200904	0					
ANR	3201202	Identifier	o0		3200904	0					
ANR	3201203	IncDec	++		3200904	1					
ANR	3201204	Statement	am	89:4:2419:2420	3200904	59	True				
ANR	3201205	Statement	->	89:6:2421:2422	3200904	60	True				
ANR	3201206	Statement	matrix	89:8:2423:2428	3200904	61	True				
ANR	3201207	Statement	=	89:15:2430:2430	3200904	62	True				
ANR	3201208	Statement	(	89:17:2432:2432	3200904	63	True				
ANR	3201209	Statement	void	89:18:2433:2436	3200904	64	True				
ANR	3201210	Statement	*	89:23:2438:2438	3200904	65	True				
ANR	3201211	Statement	*	89:24:2439:2439	3200904	66	True				
ANR	3201212	Statement	)	89:25:2440:2440	3200904	67	True				
ANR	3201213	Statement	am	89:26:2441:2442	3200904	68	True				
ANR	3201214	Statement	->	89:28:2443:2444	3200904	69	True				
ANR	3201215	IdentifierDeclStatement	matrix_ type ;	89:30:2445:2459	3200904	70	True				
ANR	3201216	IdentifierDecl	type		3200904	0					
ANR	3201217	IdentifierDeclType	matrix_		3200904	0					
ANR	3201218	Identifier	type		3200904	1					
ANR	3201219	IfStatement	if ( am -> in_matrix_channels && am -> out_matrix_channels )		3200904	71					
ANR	3201220	Condition	am -> in_matrix_channels && am -> out_matrix_channels	93:8:2472:2520	3200904	0	True				
ANR	3201221	AndExpression	am -> in_matrix_channels && am -> out_matrix_channels		3200904	0		&&			
ANR	3201222	PtrMemberAccess	am -> in_matrix_channels		3200904	0					
ANR	3201223	Identifier	am		3200904	0					
ANR	3201224	Identifier	in_matrix_channels		3200904	1					
ANR	3201225	PtrMemberAccess	am -> out_matrix_channels		3200904	1					
ANR	3201226	Identifier	am		3200904	0					
ANR	3201227	Identifier	out_matrix_channels		3200904	1					
ANR	3201228	CompoundStatement		91:59:2445:2445	3200904	1					
ANR	3201229	SwitchStatement	switch ( am -> coeff_type )		3200904	0					
ANR	3201230	Condition	am -> coeff_type	95:16:2542:2555	3200904	0	True				
ANR	3201231	PtrMemberAccess	am -> coeff_type		3200904	0					
ANR	3201232	Identifier	am		3200904	0					
ANR	3201233	Identifier	coeff_type		3200904	1					
ANR	3201234	CompoundStatement		93:32:2480:2480	3200904	1					
ANR	3201235	Label	case AV_MIX_COEFF_TYPE_Q8 :	97:8:2569:2594	3200904	0	True				
ANR	3201236	Identifier	AV_MIX_COEFF_TYPE_Q8		3200904	0					
ANR	3201237	Statement	CONVERT_MATRIX	99:12:2609:2622	3200904	1	True				
ANR	3201238	Statement	(	99:26:2623:2623	3200904	2	True				
ANR	3201239	Statement	q8	99:27:2624:2625	3200904	3	True				
ANR	3201240	Statement	","	99:29:2626:2626	3200904	4	True				
ANR	3201241	Statement	av_clip_int16	99:31:2628:2640	3200904	5	True				
ANR	3201242	Statement	(	99:44:2641:2641	3200904	6	True				
ANR	3201243	Statement	lrint	99:45:2642:2646	3200904	7	True				
ANR	3201244	Statement	(	99:50:2647:2647	3200904	8	True				
ANR	3201245	Statement	256.0	99:51:2648:2652	3200904	9	True				
ANR	3201246	Statement	*	99:57:2654:2654	3200904	10	True				
ANR	3201247	Statement	v	99:59:2656:2656	3200904	11	True				
ANR	3201248	Statement	)	99:60:2657:2657	3200904	12	True				
ANR	3201249	Statement	)	99:61:2658:2658	3200904	13	True				
ANR	3201250	Statement	)	99:62:2659:2659	3200904	14	True				
ANR	3201251	BreakStatement	break ;	101:12:2674:2679	3200904	15	True				
ANR	3201252	Label	case AV_MIX_COEFF_TYPE_Q15 :	103:8:2690:2716	3200904	16	True				
ANR	3201253	Identifier	AV_MIX_COEFF_TYPE_Q15		3200904	0					
ANR	3201254	Statement	CONVERT_MATRIX	105:12:2731:2744	3200904	17	True				
ANR	3201255	Statement	(	105:26:2745:2745	3200904	18	True				
ANR	3201256	Statement	q15	105:27:2746:2748	3200904	19	True				
ANR	3201257	Statement	","	105:30:2749:2749	3200904	20	True				
ANR	3201258	Statement	av_clipl_int32	105:32:2751:2764	3200904	21	True				
ANR	3201259	Statement	(	105:46:2765:2765	3200904	22	True				
ANR	3201260	Statement	llrint	105:47:2766:2771	3200904	23	True				
ANR	3201261	Statement	(	105:53:2772:2772	3200904	24	True				
ANR	3201262	Statement	32768.0	105:54:2773:2779	3200904	25	True				
ANR	3201263	Statement	*	105:62:2781:2781	3200904	26	True				
ANR	3201264	Statement	v	105:64:2783:2783	3200904	27	True				
ANR	3201265	Statement	)	105:65:2784:2784	3200904	28	True				
ANR	3201266	Statement	)	105:66:2785:2785	3200904	29	True				
ANR	3201267	Statement	)	105:67:2786:2786	3200904	30	True				
ANR	3201268	BreakStatement	break ;	107:12:2801:2806	3200904	31	True				
ANR	3201269	Label	case AV_MIX_COEFF_TYPE_FLT :	109:8:2817:2843	3200904	32	True				
ANR	3201270	Identifier	AV_MIX_COEFF_TYPE_FLT		3200904	0					
ANR	3201271	Statement	CONVERT_MATRIX	111:12:2858:2871	3200904	33	True				
ANR	3201272	Statement	(	111:26:2872:2872	3200904	34	True				
ANR	3201273	Statement	flt	111:27:2873:2875	3200904	35	True				
ANR	3201274	Statement	","	111:30:2876:2876	3200904	36	True				
ANR	3201275	Statement	v	111:32:2878:2878	3200904	37	True				
ANR	3201276	Statement	)	111:33:2879:2879	3200904	38	True				
ANR	3201277	BreakStatement	break ;	113:12:2894:2899	3200904	39	True				
ANR	3201278	Label	default :	115:8:2910:2917	3200904	40	True				
ANR	3201279	Identifier	default		3200904	0					
ANR	3201280	ExpressionStatement	"av_log ( am -> avr , AV_LOG_ERROR , ""Invalid mix coeff type\\n"" )"	117:12:2932:2989	3200904	41	True				
ANR	3201281	CallExpression	"av_log ( am -> avr , AV_LOG_ERROR , ""Invalid mix coeff type\\n"" )"		3200904	0					
ANR	3201282	Callee	av_log		3200904	0					
ANR	3201283	Identifier	av_log		3200904	0					
ANR	3201284	ArgumentList	am -> avr		3200904	1					
ANR	3201285	Argument	am -> avr		3200904	0					
ANR	3201286	PtrMemberAccess	am -> avr		3200904	0					
ANR	3201287	Identifier	am		3200904	0					
ANR	3201288	Identifier	avr		3200904	1					
ANR	3201289	Argument	AV_LOG_ERROR		3200904	1					
ANR	3201290	Identifier	AV_LOG_ERROR		3200904	0					
ANR	3201291	Argument	"""Invalid mix coeff type\\n"""		3200904	2					
ANR	3201292	PrimaryExpression	"""Invalid mix coeff type\\n"""		3200904	0					
ANR	3201293	ReturnStatement	return AVERROR ( EINVAL ) ;	119:12:3004:3026	3200904	42	True				
ANR	3201294	CallExpression	AVERROR ( EINVAL )		3200904	0					
ANR	3201295	Callee	AVERROR		3200904	0					
ANR	3201296	Identifier	AVERROR		3200904	0					
ANR	3201297	ArgumentList	EINVAL		3200904	1					
ANR	3201298	Argument	EINVAL		3200904	0					
ANR	3201299	Identifier	EINVAL		3200904	0					
ANR	3201300	ExpressionStatement	ret = mix_function_init ( am )	127:4:3053:3080	3200904	72	True				
ANR	3201301	AssignmentExpression	ret = mix_function_init ( am )		3200904	0		=			
ANR	3201302	Identifier	ret		3200904	0					
ANR	3201303	CallExpression	mix_function_init ( am )		3200904	1					
ANR	3201304	Callee	mix_function_init		3200904	0					
ANR	3201305	Identifier	mix_function_init		3200904	0					
ANR	3201306	ArgumentList	am		3200904	1					
ANR	3201307	Argument	am		3200904	0					
ANR	3201308	Identifier	am		3200904	0					
ANR	3201309	IfStatement	if ( ret < 0 )		3200904	73					
ANR	3201310	Condition	ret < 0	129:8:3091:3097	3200904	0	True				
ANR	3201311	RelationalExpression	ret < 0		3200904	0		<			
ANR	3201312	Identifier	ret		3200904	0					
ANR	3201313	PrimaryExpression	0		3200904	1					
ANR	3201314	ReturnStatement	return ret ;	131:8:3109:3119	3200904	1	True				
ANR	3201315	Identifier	ret		3200904	0					
ANR	3201316	ExpressionStatement	"av_get_channel_layout_string ( in_layout_name , sizeof ( in_layout_name ) , am -> in_channels , am -> in_layout )"	135:4:3128:3262	3200904	74	True				
ANR	3201317	CallExpression	"av_get_channel_layout_string ( in_layout_name , sizeof ( in_layout_name ) , am -> in_channels , am -> in_layout )"		3200904	0					
ANR	3201318	Callee	av_get_channel_layout_string		3200904	0					
ANR	3201319	Identifier	av_get_channel_layout_string		3200904	0					
ANR	3201320	ArgumentList	in_layout_name		3200904	1					
ANR	3201321	Argument	in_layout_name		3200904	0					
ANR	3201322	Identifier	in_layout_name		3200904	0					
ANR	3201323	Argument	sizeof ( in_layout_name )		3200904	1					
ANR	3201324	SizeofExpression	sizeof ( in_layout_name )		3200904	0					
ANR	3201325	Sizeof	sizeof		3200904	0					
ANR	3201326	SizeofOperand	in_layout_name		3200904	1					
ANR	3201327	Argument	am -> in_channels		3200904	2					
ANR	3201328	PtrMemberAccess	am -> in_channels		3200904	0					
ANR	3201329	Identifier	am		3200904	0					
ANR	3201330	Identifier	in_channels		3200904	1					
ANR	3201331	Argument	am -> in_layout		3200904	3					
ANR	3201332	PtrMemberAccess	am -> in_layout		3200904	0					
ANR	3201333	Identifier	am		3200904	0					
ANR	3201334	Identifier	in_layout		3200904	1					
ANR	3201335	ExpressionStatement	"av_get_channel_layout_string ( out_layout_name , sizeof ( out_layout_name ) , am -> out_channels , am -> out_layout )"	139:4:3269:3407	3200904	75	True				
ANR	3201336	CallExpression	"av_get_channel_layout_string ( out_layout_name , sizeof ( out_layout_name ) , am -> out_channels , am -> out_layout )"		3200904	0					
ANR	3201337	Callee	av_get_channel_layout_string		3200904	0					
ANR	3201338	Identifier	av_get_channel_layout_string		3200904	0					
ANR	3201339	ArgumentList	out_layout_name		3200904	1					
ANR	3201340	Argument	out_layout_name		3200904	0					
ANR	3201341	Identifier	out_layout_name		3200904	0					
ANR	3201342	Argument	sizeof ( out_layout_name )		3200904	1					
ANR	3201343	SizeofExpression	sizeof ( out_layout_name )		3200904	0					
ANR	3201344	Sizeof	sizeof		3200904	0					
ANR	3201345	SizeofOperand	out_layout_name		3200904	1					
ANR	3201346	Argument	am -> out_channels		3200904	2					
ANR	3201347	PtrMemberAccess	am -> out_channels		3200904	0					
ANR	3201348	Identifier	am		3200904	0					
ANR	3201349	Identifier	out_channels		3200904	1					
ANR	3201350	Argument	am -> out_layout		3200904	3					
ANR	3201351	PtrMemberAccess	am -> out_layout		3200904	0					
ANR	3201352	Identifier	am		3200904	0					
ANR	3201353	Identifier	out_layout		3200904	1					
ANR	3201354	ExpressionStatement	"av_log ( am -> avr , AV_LOG_DEBUG , ""audio_mix: %s to %s\\n"" , in_layout_name , out_layout_name )"	143:4:3414:3513	3200904	76	True				
ANR	3201355	CallExpression	"av_log ( am -> avr , AV_LOG_DEBUG , ""audio_mix: %s to %s\\n"" , in_layout_name , out_layout_name )"		3200904	0					
ANR	3201356	Callee	av_log		3200904	0					
ANR	3201357	Identifier	av_log		3200904	0					
ANR	3201358	ArgumentList	am -> avr		3200904	1					
ANR	3201359	Argument	am -> avr		3200904	0					
ANR	3201360	PtrMemberAccess	am -> avr		3200904	0					
ANR	3201361	Identifier	am		3200904	0					
ANR	3201362	Identifier	avr		3200904	1					
ANR	3201363	Argument	AV_LOG_DEBUG		3200904	1					
ANR	3201364	Identifier	AV_LOG_DEBUG		3200904	0					
ANR	3201365	Argument	"""audio_mix: %s to %s\\n"""		3200904	2					
ANR	3201366	PrimaryExpression	"""audio_mix: %s to %s\\n"""		3200904	0					
ANR	3201367	Argument	in_layout_name		3200904	3					
ANR	3201368	Identifier	in_layout_name		3200904	0					
ANR	3201369	Argument	out_layout_name		3200904	4					
ANR	3201370	Identifier	out_layout_name		3200904	0					
ANR	3201371	ExpressionStatement	"av_log ( am -> avr , AV_LOG_DEBUG , ""matrix size: %d x %d\\n"" , am -> in_matrix_channels , am -> out_matrix_channels )"	147:4:3520:3636	3200904	77	True				
ANR	3201372	CallExpression	"av_log ( am -> avr , AV_LOG_DEBUG , ""matrix size: %d x %d\\n"" , am -> in_matrix_channels , am -> out_matrix_channels )"		3200904	0					
ANR	3201373	Callee	av_log		3200904	0					
ANR	3201374	Identifier	av_log		3200904	0					
ANR	3201375	ArgumentList	am -> avr		3200904	1					
ANR	3201376	Argument	am -> avr		3200904	0					
ANR	3201377	PtrMemberAccess	am -> avr		3200904	0					
ANR	3201378	Identifier	am		3200904	0					
ANR	3201379	Identifier	avr		3200904	1					
ANR	3201380	Argument	AV_LOG_DEBUG		3200904	1					
ANR	3201381	Identifier	AV_LOG_DEBUG		3200904	0					
ANR	3201382	Argument	"""matrix size: %d x %d\\n"""		3200904	2					
ANR	3201383	PrimaryExpression	"""matrix size: %d x %d\\n"""		3200904	0					
ANR	3201384	Argument	am -> in_matrix_channels		3200904	3					
ANR	3201385	PtrMemberAccess	am -> in_matrix_channels		3200904	0					
ANR	3201386	Identifier	am		3200904	0					
ANR	3201387	Identifier	in_matrix_channels		3200904	1					
ANR	3201388	Argument	am -> out_matrix_channels		3200904	4					
ANR	3201389	PtrMemberAccess	am -> out_matrix_channels		3200904	0					
ANR	3201390	Identifier	am		3200904	0					
ANR	3201391	Identifier	out_matrix_channels		3200904	1					
ANR	3201392	ForStatement	for ( o = 0 ; o < am -> out_channels ; o ++ )		3200904	78					
ANR	3201393	ForInit	o = 0 ;	151:9:3648:3653	3200904	0	True				
ANR	3201394	AssignmentExpression	o = 0		3200904	0		=			
ANR	3201395	Identifier	o		3200904	0					
ANR	3201396	PrimaryExpression	0		3200904	1					
ANR	3201397	Condition	o < am -> out_channels	151:16:3655:3674	3200904	1	True				
ANR	3201398	RelationalExpression	o < am -> out_channels		3200904	0		<			
ANR	3201399	Identifier	o		3200904	0					
ANR	3201400	PtrMemberAccess	am -> out_channels		3200904	1					
ANR	3201401	Identifier	am		3200904	0					
ANR	3201402	Identifier	out_channels		3200904	1					
ANR	3201403	PostIncDecOperationExpression	o ++	151:38:3677:3679	3200904	2	True				
ANR	3201404	Identifier	o		3200904	0					
ANR	3201405	IncDec	++		3200904	1					
ANR	3201406	CompoundStatement		149:43:3604:3604	3200904	3					
ANR	3201407	ForStatement	for ( i = 0 ; i < am -> in_channels ; i ++ )		3200904	0					
ANR	3201408	ForInit	i = 0 ;	153:13:3698:3703	3200904	0	True				
ANR	3201409	AssignmentExpression	i = 0		3200904	0		=			
ANR	3201410	Identifier	i		3200904	0					
ANR	3201411	PrimaryExpression	0		3200904	1					
ANR	3201412	Condition	i < am -> in_channels	153:20:3705:3723	3200904	1	True				
ANR	3201413	RelationalExpression	i < am -> in_channels		3200904	0		<			
ANR	3201414	Identifier	i		3200904	0					
ANR	3201415	PtrMemberAccess	am -> in_channels		3200904	1					
ANR	3201416	Identifier	am		3200904	0					
ANR	3201417	Identifier	in_channels		3200904	1					
ANR	3201418	PostIncDecOperationExpression	i ++	153:41:3726:3728	3200904	2	True				
ANR	3201419	Identifier	i		3200904	0					
ANR	3201420	IncDec	++		3200904	1					
ANR	3201421	CompoundStatement		151:46:3653:3653	3200904	3					
ANR	3201422	IfStatement	if ( am -> output_zero [ o ] )		3200904	0					
ANR	3201423	Condition	am -> output_zero [ o ]	155:16:3750:3767	3200904	0	True				
ANR	3201424	ArrayIndexing	am -> output_zero [ o ]		3200904	0					
ANR	3201425	PtrMemberAccess	am -> output_zero		3200904	0					
ANR	3201426	Identifier	am		3200904	0					
ANR	3201427	Identifier	output_zero		3200904	1					
ANR	3201428	Identifier	o		3200904	1					
ANR	3201429	ExpressionStatement	"av_log ( am -> avr , AV_LOG_DEBUG , ""  (ZERO)"" )"	157:16:3787:3828	3200904	1	True				
ANR	3201430	CallExpression	"av_log ( am -> avr , AV_LOG_DEBUG , ""  (ZERO)"" )"		3200904	0					
ANR	3201431	Callee	av_log		3200904	0					
ANR	3201432	Identifier	av_log		3200904	0					
ANR	3201433	ArgumentList	am -> avr		3200904	1					
ANR	3201434	Argument	am -> avr		3200904	0					
ANR	3201435	PtrMemberAccess	am -> avr		3200904	0					
ANR	3201436	Identifier	am		3200904	0					
ANR	3201437	Identifier	avr		3200904	1					
ANR	3201438	Argument	AV_LOG_DEBUG		3200904	1					
ANR	3201439	Identifier	AV_LOG_DEBUG		3200904	0					
ANR	3201440	Argument	"""  (ZERO)"""		3200904	2					
ANR	3201441	PrimaryExpression	"""  (ZERO)"""		3200904	0					
ANR	3201442	ElseStatement	else		3200904	0					
ANR	3201443	IfStatement	if ( am -> input_skip [ i ] || am -> output_skip [ o ] )		3200904	0					
ANR	3201444	Condition	am -> input_skip [ i ] || am -> output_skip [ o ]	159:21:3852:3890	3200904	0	True				
ANR	3201445	OrExpression	am -> input_skip [ i ] || am -> output_skip [ o ]		3200904	0		||			
ANR	3201446	ArrayIndexing	am -> input_skip [ i ]		3200904	0					
ANR	3201447	PtrMemberAccess	am -> input_skip		3200904	0					
ANR	3201448	Identifier	am		3200904	0					
ANR	3201449	Identifier	input_skip		3200904	1					
ANR	3201450	Identifier	i		3200904	1					
ANR	3201451	ArrayIndexing	am -> output_skip [ o ]		3200904	1					
ANR	3201452	PtrMemberAccess	am -> output_skip		3200904	0					
ANR	3201453	Identifier	am		3200904	0					
ANR	3201454	Identifier	output_skip		3200904	1					
ANR	3201455	Identifier	o		3200904	1					
ANR	3201456	ExpressionStatement	"av_log ( am -> avr , AV_LOG_DEBUG , ""  (SKIP)"" )"	161:16:3910:3951	3200904	1	True				
ANR	3201457	CallExpression	"av_log ( am -> avr , AV_LOG_DEBUG , ""  (SKIP)"" )"		3200904	0					
ANR	3201458	Callee	av_log		3200904	0					
ANR	3201459	Identifier	av_log		3200904	0					
ANR	3201460	ArgumentList	am -> avr		3200904	1					
ANR	3201461	Argument	am -> avr		3200904	0					
ANR	3201462	PtrMemberAccess	am -> avr		3200904	0					
ANR	3201463	Identifier	am		3200904	0					
ANR	3201464	Identifier	avr		3200904	1					
ANR	3201465	Argument	AV_LOG_DEBUG		3200904	1					
ANR	3201466	Identifier	AV_LOG_DEBUG		3200904	0					
ANR	3201467	Argument	"""  (SKIP)"""		3200904	2					
ANR	3201468	PrimaryExpression	"""  (SKIP)"""		3200904	0					
ANR	3201469	ElseStatement	else		3200904	0					
ANR	3201470	ExpressionStatement	"av_log ( am -> avr , AV_LOG_DEBUG , ""  %0.3f "" , matrix [ o * am -> in_channels + i ] )"	165:16:3988:4086	3200904	0	True				
ANR	3201471	CallExpression	"av_log ( am -> avr , AV_LOG_DEBUG , ""  %0.3f "" , matrix [ o * am -> in_channels + i ] )"		3200904	0					
ANR	3201472	Callee	av_log		3200904	0					
ANR	3201473	Identifier	av_log		3200904	0					
ANR	3201474	ArgumentList	am -> avr		3200904	1					
ANR	3201475	Argument	am -> avr		3200904	0					
ANR	3201476	PtrMemberAccess	am -> avr		3200904	0					
ANR	3201477	Identifier	am		3200904	0					
ANR	3201478	Identifier	avr		3200904	1					
ANR	3201479	Argument	AV_LOG_DEBUG		3200904	1					
ANR	3201480	Identifier	AV_LOG_DEBUG		3200904	0					
ANR	3201481	Argument	"""  %0.3f """		3200904	2					
ANR	3201482	PrimaryExpression	"""  %0.3f """		3200904	0					
ANR	3201483	Argument	matrix [ o * am -> in_channels + i ]		3200904	3					
ANR	3201484	ArrayIndexing	matrix [ o * am -> in_channels + i ]		3200904	0					
ANR	3201485	Identifier	matrix		3200904	0					
ANR	3201486	AdditiveExpression	o * am -> in_channels + i		3200904	1		+			
ANR	3201487	MultiplicativeExpression	o * am -> in_channels		3200904	0		*			
ANR	3201488	Identifier	o		3200904	0					
ANR	3201489	PtrMemberAccess	am -> in_channels		3200904	1					
ANR	3201490	Identifier	am		3200904	0					
ANR	3201491	Identifier	in_channels		3200904	1					
ANR	3201492	Identifier	i		3200904	1					
ANR	3201493	ExpressionStatement	"av_log ( am -> avr , AV_LOG_DEBUG , ""\\n"" )"	171:8:4108:4143	3200904	1	True				
ANR	3201494	CallExpression	"av_log ( am -> avr , AV_LOG_DEBUG , ""\\n"" )"		3200904	0					
ANR	3201495	Callee	av_log		3200904	0					
ANR	3201496	Identifier	av_log		3200904	0					
ANR	3201497	ArgumentList	am -> avr		3200904	1					
ANR	3201498	Argument	am -> avr		3200904	0					
ANR	3201499	PtrMemberAccess	am -> avr		3200904	0					
ANR	3201500	Identifier	am		3200904	0					
ANR	3201501	Identifier	avr		3200904	1					
ANR	3201502	Argument	AV_LOG_DEBUG		3200904	1					
ANR	3201503	Identifier	AV_LOG_DEBUG		3200904	0					
ANR	3201504	Argument	"""\\n"""		3200904	2					
ANR	3201505	PrimaryExpression	"""\\n"""		3200904	0					
ANR	3201506	ReturnStatement	return 0 ;	177:4:4159:4167	3200904	79	True				
ANR	3201507	PrimaryExpression	0		3200904	0					
ANR	3201508	ReturnType	int		3200904	1					
ANR	3201509	Identifier	ff_audio_mix_set_matrix		3200904	2					
ANR	3201510	ParameterList	"AudioMix * am , const double * matrix , int stride"		3200904	3					
ANR	3201511	Parameter	AudioMix * am	1:28:28:39	3200904	0	True				
ANR	3201512	ParameterType	AudioMix *		3200904	0					
ANR	3201513	Identifier	am		3200904	1					
ANR	3201514	Parameter	const double * matrix	1:42:42:61	3200904	1	True				
ANR	3201515	ParameterType	const double *		3200904	0					
ANR	3201516	Identifier	matrix		3200904	1					
ANR	3201517	Parameter	int stride	1:64:64:73	3200904	2	True				
ANR	3201518	ParameterType	int		3200904	0					
ANR	3201519	Identifier	stride		3200904	1					
ANR	3201520	CFGEntryNode	ENTRY		3200904		True				
ANR	3201521	CFGExitNode	EXIT		3200904		True				
ANR	3201522	Symbol	ENOMEM		3200904						
ANR	3201523	Symbol	* stride		3200904						
ANR	3201524	Symbol	* am -> input_skip		3200904						
ANR	3201525	Symbol	stride		3200904						
ANR	3201526	Symbol	type		3200904						
ANR	3201527	Symbol	* i0		3200904						
ANR	3201528	Symbol	* * o0		3200904						
ANR	3201529	Symbol	* am -> in_channels		3200904						
ANR	3201530	Symbol	am -> in_layout		3200904						
ANR	3201531	Symbol	am -> out_layout		3200904						
ANR	3201532	Symbol	* * am		3200904						
ANR	3201533	Symbol	am -> output_zero		3200904						
ANR	3201534	Symbol	am -> input_skip		3200904						
ANR	3201535	Symbol	AV_LOG_DEBUG		3200904						
ANR	3201536	Symbol	ret		3200904						
ANR	3201537	Symbol	out_layout_name		3200904						
ANR	3201538	Symbol	am -> out_channels		3200904						
ANR	3201539	Symbol	o0		3200904						
ANR	3201540	Symbol	NULL		3200904						
ANR	3201541	Symbol	am -> coeff_type		3200904						
ANR	3201542	Symbol	am		3200904						
ANR	3201543	Symbol	am -> output_skip		3200904						
ANR	3201544	Symbol	am -> out_matrix_channels		3200904						
ANR	3201545	Symbol	* matrix		3200904						
ANR	3201546	Symbol	am -> avr		3200904						
ANR	3201547	Symbol	* o0		3200904						
ANR	3201548	Symbol	mix_function_init		3200904						
ANR	3201549	Symbol	matrix		3200904						
ANR	3201550	Symbol	* am -> output_skip		3200904						
ANR	3201551	Symbol	* am -> output_zero		3200904						
ANR	3201552	Symbol	* am -> matrix		3200904						
ANR	3201553	Symbol	* type		3200904						
ANR	3201554	Symbol	am -> in_channels		3200904						
ANR	3201555	Symbol	expr		3200904						
ANR	3201556	Symbol	am -> matrix		3200904						
ANR	3201557	Symbol	AV_LOG_ERROR		3200904						
ANR	3201558	Symbol	i0		3200904						
ANR	3201559	Symbol	i		3200904						
ANR	3201560	Symbol	o		3200904						
ANR	3201561	Symbol	EINVAL		3200904						
ANR	3201562	Symbol	* am		3200904						
ANR	3201563	Symbol	in_layout_name		3200904						
ANR	3201564	Symbol	* i		3200904						
ANR	3201565	Symbol	v		3200904						
ANR	3201566	Symbol	AVRESAMPLE_MAX_CHANNELS		3200904						
ANR	3201567	Symbol	am -> in_matrix_channels		3200904						
ANR	3201568	Symbol	* o		3200904						
ANR	3201569	Symbol	AVERROR		3200904						
ANR	3201570	Symbol	* * type		3200904						
