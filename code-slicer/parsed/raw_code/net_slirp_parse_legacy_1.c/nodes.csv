command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5999329	File	/home/p4ultr4n/workplace/ReVeal/raw_code/net_slirp_parse_legacy_1.c								
ANR	5999330	Function	net_slirp_parse_legacy	1:0:0:878							
ANR	5999331	FunctionDef	"net_slirp_parse_legacy (QemuOptsList * opts_list , const char * optarg , int * ret)"		5999330	0					
ANR	5999332	CompoundStatement		3:0:83:878	5999330	0					
ANR	5999333	IfStatement	"if ( strcmp ( opts_list -> name , ""net"" ) != 0 || strncmp ( optarg , ""channel,"" , strlen ( ""channel,"" ) ) != 0 )"		5999330	0					
ANR	5999334	Condition	"strcmp ( opts_list -> name , ""net"" ) != 0 || strncmp ( optarg , ""channel,"" , strlen ( ""channel,"" ) ) != 0"	5:8:94:193	5999330	0	True				
ANR	5999335	OrExpression	"strcmp ( opts_list -> name , ""net"" ) != 0 || strncmp ( optarg , ""channel,"" , strlen ( ""channel,"" ) ) != 0"		5999330	0		||			
ANR	5999336	EqualityExpression	"strcmp ( opts_list -> name , ""net"" ) != 0"		5999330	0		!=			
ANR	5999337	CallExpression	"strcmp ( opts_list -> name , ""net"" )"		5999330	0					
ANR	5999338	Callee	strcmp		5999330	0					
ANR	5999339	Identifier	strcmp		5999330	0					
ANR	5999340	ArgumentList	opts_list -> name		5999330	1					
ANR	5999341	Argument	opts_list -> name		5999330	0					
ANR	5999342	PtrMemberAccess	opts_list -> name		5999330	0					
ANR	5999343	Identifier	opts_list		5999330	0					
ANR	5999344	Identifier	name		5999330	1					
ANR	5999345	Argument	"""net"""		5999330	1					
ANR	5999346	PrimaryExpression	"""net"""		5999330	0					
ANR	5999347	PrimaryExpression	0		5999330	1					
ANR	5999348	EqualityExpression	"strncmp ( optarg , ""channel,"" , strlen ( ""channel,"" ) ) != 0"		5999330	1		!=			
ANR	5999349	CallExpression	"strncmp ( optarg , ""channel,"" , strlen ( ""channel,"" ) )"		5999330	0					
ANR	5999350	Callee	strncmp		5999330	0					
ANR	5999351	Identifier	strncmp		5999330	0					
ANR	5999352	ArgumentList	optarg		5999330	1					
ANR	5999353	Argument	optarg		5999330	0					
ANR	5999354	Identifier	optarg		5999330	0					
ANR	5999355	Argument	"""channel,"""		5999330	1					
ANR	5999356	PrimaryExpression	"""channel,"""		5999330	0					
ANR	5999357	Argument	"strlen ( ""channel,"" )"		5999330	2					
ANR	5999358	CallExpression	"strlen ( ""channel,"" )"		5999330	0					
ANR	5999359	Callee	strlen		5999330	0					
ANR	5999360	Identifier	strlen		5999330	0					
ANR	5999361	ArgumentList	"""channel,"""		5999330	1					
ANR	5999362	Argument	"""channel,"""		5999330	0					
ANR	5999363	PrimaryExpression	"""channel,"""		5999330	0					
ANR	5999364	PrimaryExpression	0		5999330	1					
ANR	5999365	CompoundStatement		5:62:112:112	5999330	1					
ANR	5999366	ReturnStatement	return 0 ;	9:8:207:215	5999330	0	True				
ANR	5999367	PrimaryExpression	0		5999330	0					
ANR	5999368	Statement	error_report	15:4:231:242	5999330	1	True				
ANR	5999369	Statement	(	15:16:243:243	5999330	2	True				
ANR	5999370	Statement	"""The '-net channel' option is deprecated. """	15:17:244:286	5999330	3	True				
ANR	5999371	Statement	"""Please use '-netdev user,guestfwd=...' instead."""	17:17:306:354	5999330	4	True				
ANR	5999372	Statement	)	17:66:355:355	5999330	5	True				
ANR	5999373	ExpressionStatement		17:67:356:356	5999330	6	True				
ANR	5999374	ExpressionStatement	"optarg += strlen ( ""channel,"" )"	23:4:412:440	5999330	7	True				
ANR	5999375	AssignmentExpression	"optarg += strlen ( ""channel,"" )"		5999330	0		+=			
ANR	5999376	Identifier	optarg		5999330	0					
ANR	5999377	CallExpression	"strlen ( ""channel,"" )"		5999330	1					
ANR	5999378	Callee	strlen		5999330	0					
ANR	5999379	Identifier	strlen		5999330	0					
ANR	5999380	ArgumentList	"""channel,"""		5999330	1					
ANR	5999381	Argument	"""channel,"""		5999330	0					
ANR	5999382	PrimaryExpression	"""channel,"""		5999330	0					
ANR	5999383	IfStatement	if ( QTAILQ_EMPTY ( & slirp_stacks ) )		5999330	8					
ANR	5999384	Condition	QTAILQ_EMPTY ( & slirp_stacks )	27:8:453:479	5999330	0	True				
ANR	5999385	CallExpression	QTAILQ_EMPTY ( & slirp_stacks )		5999330	0					
ANR	5999386	Callee	QTAILQ_EMPTY		5999330	0					
ANR	5999387	Identifier	QTAILQ_EMPTY		5999330	0					
ANR	5999388	ArgumentList	& slirp_stacks		5999330	1					
ANR	5999389	Argument	& slirp_stacks		5999330	0					
ANR	5999390	UnaryOperationExpression	& slirp_stacks		5999330	0					
ANR	5999391	UnaryOperator	&		5999330	0					
ANR	5999392	Identifier	slirp_stacks		5999330	1					
ANR	5999393	CompoundStatement		27:8:409:440	5999330	1					
ANR	5999394	IdentifierDeclStatement	struct slirp_config_str * config ;	29:8:493:524	5999330	0	True				
ANR	5999395	IdentifierDecl	* config		5999330	0					
ANR	5999396	IdentifierDeclType	struct slirp_config_str *		5999330	0					
ANR	5999397	Identifier	config		5999330	1					
ANR	5999398	ExpressionStatement	config = g_malloc ( sizeof ( * config ) )	33:8:537:571	5999330	1	True				
ANR	5999399	AssignmentExpression	config = g_malloc ( sizeof ( * config ) )		5999330	0		=			
ANR	5999400	Identifier	config		5999330	0					
ANR	5999401	CallExpression	g_malloc ( sizeof ( * config ) )		5999330	1					
ANR	5999402	Callee	g_malloc		5999330	0					
ANR	5999403	Identifier	g_malloc		5999330	0					
ANR	5999404	ArgumentList	sizeof ( * config )		5999330	1					
ANR	5999405	Argument	sizeof ( * config )		5999330	0					
ANR	5999406	SizeofExpression	sizeof ( * config )		5999330	0					
ANR	5999407	Sizeof	sizeof		5999330	0					
ANR	5999408	UnaryOperationExpression	* config		5999330	1					
ANR	5999409	UnaryOperator	*		5999330	0					
ANR	5999410	Identifier	config		5999330	1					
ANR	5999411	ExpressionStatement	"pstrcpy ( config -> str , sizeof ( config -> str ) , optarg )"	35:8:582:631	5999330	2	True				
ANR	5999412	CallExpression	"pstrcpy ( config -> str , sizeof ( config -> str ) , optarg )"		5999330	0					
ANR	5999413	Callee	pstrcpy		5999330	0					
ANR	5999414	Identifier	pstrcpy		5999330	0					
ANR	5999415	ArgumentList	config -> str		5999330	1					
ANR	5999416	Argument	config -> str		5999330	0					
ANR	5999417	PtrMemberAccess	config -> str		5999330	0					
ANR	5999418	Identifier	config		5999330	0					
ANR	5999419	Identifier	str		5999330	1					
ANR	5999420	Argument	sizeof ( config -> str )		5999330	1					
ANR	5999421	SizeofExpression	sizeof ( config -> str )		5999330	0					
ANR	5999422	Sizeof	sizeof		5999330	0					
ANR	5999423	PtrMemberAccess	config -> str		5999330	1					
ANR	5999424	Identifier	config		5999330	0					
ANR	5999425	Identifier	str		5999330	1					
ANR	5999426	Argument	optarg		5999330	2					
ANR	5999427	Identifier	optarg		5999330	0					
ANR	5999428	ExpressionStatement	config -> flags = SLIRP_CFG_LEGACY	37:8:642:674	5999330	3	True				
ANR	5999429	AssignmentExpression	config -> flags = SLIRP_CFG_LEGACY		5999330	0		=			
ANR	5999430	PtrMemberAccess	config -> flags		5999330	0					
ANR	5999431	Identifier	config		5999330	0					
ANR	5999432	Identifier	flags		5999330	1					
ANR	5999433	Identifier	SLIRP_CFG_LEGACY		5999330	1					
ANR	5999434	ExpressionStatement	config -> next = slirp_configs	39:8:685:713	5999330	4	True				
ANR	5999435	AssignmentExpression	config -> next = slirp_configs		5999330	0		=			
ANR	5999436	PtrMemberAccess	config -> next		5999330	0					
ANR	5999437	Identifier	config		5999330	0					
ANR	5999438	Identifier	next		5999330	1					
ANR	5999439	Identifier	slirp_configs		5999330	1					
ANR	5999440	ExpressionStatement	slirp_configs = config	41:8:724:746	5999330	5	True				
ANR	5999441	AssignmentExpression	slirp_configs = config		5999330	0		=			
ANR	5999442	Identifier	slirp_configs		5999330	0					
ANR	5999443	Identifier	config		5999330	1					
ANR	5999444	ExpressionStatement	* ret = 0	43:8:757:765	5999330	6	True				
ANR	5999445	AssignmentExpression	* ret = 0		5999330	0		=			
ANR	5999446	UnaryOperationExpression	* ret		5999330	0					
ANR	5999447	UnaryOperator	*		5999330	0					
ANR	5999448	Identifier	ret		5999330	1					
ANR	5999449	PrimaryExpression	0		5999330	1					
ANR	5999450	ElseStatement	else		5999330	0					
ANR	5999451	CompoundStatement		43:11:695:695	5999330	0					
ANR	5999452	ExpressionStatement	"* ret = slirp_guestfwd ( QTAILQ_FIRST ( & slirp_stacks ) , optarg , 1 )"	47:8:790:851	5999330	0	True				
ANR	5999453	AssignmentExpression	"* ret = slirp_guestfwd ( QTAILQ_FIRST ( & slirp_stacks ) , optarg , 1 )"		5999330	0		=			
ANR	5999454	UnaryOperationExpression	* ret		5999330	0					
ANR	5999455	UnaryOperator	*		5999330	0					
ANR	5999456	Identifier	ret		5999330	1					
ANR	5999457	CallExpression	"slirp_guestfwd ( QTAILQ_FIRST ( & slirp_stacks ) , optarg , 1 )"		5999330	1					
ANR	5999458	Callee	slirp_guestfwd		5999330	0					
ANR	5999459	Identifier	slirp_guestfwd		5999330	0					
ANR	5999460	ArgumentList	QTAILQ_FIRST ( & slirp_stacks )		5999330	1					
ANR	5999461	Argument	QTAILQ_FIRST ( & slirp_stacks )		5999330	0					
ANR	5999462	CallExpression	QTAILQ_FIRST ( & slirp_stacks )		5999330	0					
ANR	5999463	Callee	QTAILQ_FIRST		5999330	0					
ANR	5999464	Identifier	QTAILQ_FIRST		5999330	0					
ANR	5999465	ArgumentList	& slirp_stacks		5999330	1					
ANR	5999466	Argument	& slirp_stacks		5999330	0					
ANR	5999467	UnaryOperationExpression	& slirp_stacks		5999330	0					
ANR	5999468	UnaryOperator	&		5999330	0					
ANR	5999469	Identifier	slirp_stacks		5999330	1					
ANR	5999470	Argument	optarg		5999330	1					
ANR	5999471	Identifier	optarg		5999330	0					
ANR	5999472	Argument	1		5999330	2					
ANR	5999473	PrimaryExpression	1		5999330	0					
ANR	5999474	ReturnStatement	return 1 ;	53:4:867:875	5999330	9	True				
ANR	5999475	PrimaryExpression	1		5999330	0					
ANR	5999476	ReturnType	int		5999330	1					
ANR	5999477	Identifier	net_slirp_parse_legacy		5999330	2					
ANR	5999478	ParameterList	"QemuOptsList * opts_list , const char * optarg , int * ret"		5999330	3					
ANR	5999479	Parameter	QemuOptsList * opts_list	1:27:27:49	5999330	0	True				
ANR	5999480	ParameterType	QemuOptsList *		5999330	0					
ANR	5999481	Identifier	opts_list		5999330	1					
ANR	5999482	Parameter	const char * optarg	1:52:52:69	5999330	1	True				
ANR	5999483	ParameterType	const char *		5999330	0					
ANR	5999484	Identifier	optarg		5999330	1					
ANR	5999485	Parameter	int * ret	1:72:72:79	5999330	2	True				
ANR	5999486	ParameterType	int *		5999330	0					
ANR	5999487	Identifier	ret		5999330	1					
ANR	5999488	CFGEntryNode	ENTRY		5999330		True				
ANR	5999489	CFGExitNode	EXIT		5999330		True				
ANR	5999490	Symbol	ret		5999330						
ANR	5999491	Symbol	strcmp		5999330						
ANR	5999492	Symbol	* config		5999330						
ANR	5999493	Symbol	slirp_configs		5999330						
ANR	5999494	Symbol	SLIRP_CFG_LEGACY		5999330						
ANR	5999495	Symbol	* opts_list		5999330						
ANR	5999496	Symbol	optarg		5999330						
ANR	5999497	Symbol	* ret		5999330						
ANR	5999498	Symbol	opts_list		5999330						
ANR	5999499	Symbol	config -> str		5999330						
ANR	5999500	Symbol	strlen		5999330						
ANR	5999501	Symbol	strncmp		5999330						
ANR	5999502	Symbol	opts_list -> name		5999330						
ANR	5999503	Symbol	g_malloc		5999330						
ANR	5999504	Symbol	config -> flags		5999330						
ANR	5999505	Symbol	QTAILQ_FIRST		5999330						
ANR	5999506	Symbol	slirp_guestfwd		5999330						
ANR	5999507	Symbol	QTAILQ_EMPTY		5999330						
ANR	5999508	Symbol	config -> next		5999330						
ANR	5999509	Symbol	& slirp_stacks		5999330						
ANR	5999510	Symbol	config		5999330						
