command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6368612	File	/home/p4ultr4n/workplace/ReVeal/raw_code/parse_str_1.c								
ANR	6368613	Function	parse_str	1:0:0:3086							
ANR	6368614	FunctionDef	"parse_str (StringInputVisitor * siv , const char * name , Error * * errp)"		6368613	0					
ANR	6368615	CompoundStatement		3:0:79:3086	6368613	0					
ANR	6368616	IdentifierDeclStatement	char * str = ( char * ) siv -> string ;	5:4:86:118	6368613	0	True				
ANR	6368617	IdentifierDecl	* str = ( char * ) siv -> string		6368613	0					
ANR	6368618	IdentifierDeclType	char *		6368613	0					
ANR	6368619	Identifier	str		6368613	1					
ANR	6368620	AssignmentExpression	* str = ( char * ) siv -> string		6368613	2		=			
ANR	6368621	Identifier	str		6368613	0					
ANR	6368622	CastExpression	( char * ) siv -> string		6368613	1					
ANR	6368623	CastTarget	char *		6368613	0					
ANR	6368624	PtrMemberAccess	siv -> string		6368613	1					
ANR	6368625	Identifier	siv		6368613	0					
ANR	6368626	Identifier	string		6368613	1					
ANR	6368627	IdentifierDeclStatement	"long long start , end ;"	7:4:125:145	6368613	1	True				
ANR	6368628	IdentifierDecl	start		6368613	0					
ANR	6368629	IdentifierDeclType	long long		6368613	0					
ANR	6368630	Identifier	start		6368613	1					
ANR	6368631	IdentifierDecl	end		6368613	1					
ANR	6368632	IdentifierDeclType	long long		6368613	0					
ANR	6368633	Identifier	end		6368613	1					
ANR	6368634	IdentifierDeclStatement	Range * cur ;	9:4:152:162	6368613	2	True				
ANR	6368635	IdentifierDecl	* cur		6368613	0					
ANR	6368636	IdentifierDeclType	Range *		6368613	0					
ANR	6368637	Identifier	cur		6368613	1					
ANR	6368638	IdentifierDeclStatement	char * endptr ;	11:4:169:181	6368613	3	True				
ANR	6368639	IdentifierDecl	* endptr		6368613	0					
ANR	6368640	IdentifierDeclType	char *		6368613	0					
ANR	6368641	Identifier	endptr		6368613	1					
ANR	6368642	IfStatement	if ( siv -> ranges )		6368613	4					
ANR	6368643	Condition	siv -> ranges	15:8:194:204	6368613	0	True				
ANR	6368644	PtrMemberAccess	siv -> ranges		6368613	0					
ANR	6368645	Identifier	siv		6368613	0					
ANR	6368646	Identifier	ranges		6368613	1					
ANR	6368647	CompoundStatement		13:21:127:127	6368613	1					
ANR	6368648	ReturnStatement	return 0 ;	17:8:218:226	6368613	0	True				
ANR	6368649	PrimaryExpression	0		6368613	0					
ANR	6368650	DoStatement	do		6368613	5					
ANR	6368651	CompoundStatement		21:7:165:165	6368613	0					
ANR	6368652	ExpressionStatement	errno = 0	25:8:256:265	6368613	0	True				
ANR	6368653	AssignmentExpression	errno = 0		6368613	0		=			
ANR	6368654	Identifier	errno		6368613	0					
ANR	6368655	PrimaryExpression	0		6368613	1					
ANR	6368656	ExpressionStatement	"start = strtoll ( str , & endptr , 0 )"	27:8:276:308	6368613	1	True				
ANR	6368657	AssignmentExpression	"start = strtoll ( str , & endptr , 0 )"		6368613	0		=			
ANR	6368658	Identifier	start		6368613	0					
ANR	6368659	CallExpression	"strtoll ( str , & endptr , 0 )"		6368613	1					
ANR	6368660	Callee	strtoll		6368613	0					
ANR	6368661	Identifier	strtoll		6368613	0					
ANR	6368662	ArgumentList	str		6368613	1					
ANR	6368663	Argument	str		6368613	0					
ANR	6368664	Identifier	str		6368613	0					
ANR	6368665	Argument	& endptr		6368613	1					
ANR	6368666	UnaryOperationExpression	& endptr		6368613	0					
ANR	6368667	UnaryOperator	&		6368613	0					
ANR	6368668	Identifier	endptr		6368613	1					
ANR	6368669	Argument	0		6368613	2					
ANR	6368670	PrimaryExpression	0		6368613	0					
ANR	6368671	IfStatement	if ( errno == 0 && endptr > str )		6368613	2					
ANR	6368672	Condition	errno == 0 && endptr > str	29:12:323:348	6368613	0	True				
ANR	6368673	AndExpression	errno == 0 && endptr > str		6368613	0		&&			
ANR	6368674	EqualityExpression	errno == 0		6368613	0		==			
ANR	6368675	Identifier	errno		6368613	0					
ANR	6368676	PrimaryExpression	0		6368613	1					
ANR	6368677	RelationalExpression	endptr > str		6368613	1		>			
ANR	6368678	Identifier	endptr		6368613	0					
ANR	6368679	Identifier	str		6368613	1					
ANR	6368680	CompoundStatement		27:40:271:271	6368613	1					
ANR	6368681	IfStatement	if ( * endptr == '\\0' )		6368613	0					
ANR	6368682	Condition	* endptr == '\\0'	31:16:370:384	6368613	0	True				
ANR	6368683	EqualityExpression	* endptr == '\\0'		6368613	0		==			
ANR	6368684	UnaryOperationExpression	* endptr		6368613	0					
ANR	6368685	UnaryOperator	*		6368613	0					
ANR	6368686	Identifier	endptr		6368613	1					
ANR	6368687	PrimaryExpression	'\\0'		6368613	1					
ANR	6368688	CompoundStatement		29:33:307:307	6368613	1					
ANR	6368689	ExpressionStatement	cur = g_malloc0 ( sizeof ( * cur ) )	33:16:406:435	6368613	0	True				
ANR	6368690	AssignmentExpression	cur = g_malloc0 ( sizeof ( * cur ) )		6368613	0		=			
ANR	6368691	Identifier	cur		6368613	0					
ANR	6368692	CallExpression	g_malloc0 ( sizeof ( * cur ) )		6368613	1					
ANR	6368693	Callee	g_malloc0		6368613	0					
ANR	6368694	Identifier	g_malloc0		6368613	0					
ANR	6368695	ArgumentList	sizeof ( * cur )		6368613	1					
ANR	6368696	Argument	sizeof ( * cur )		6368613	0					
ANR	6368697	SizeofExpression	sizeof ( * cur )		6368613	0					
ANR	6368698	Sizeof	sizeof		6368613	0					
ANR	6368699	UnaryOperationExpression	* cur		6368613	1					
ANR	6368700	UnaryOperator	*		6368613	0					
ANR	6368701	Identifier	cur		6368613	1					
ANR	6368702	ExpressionStatement	cur -> begin = start	35:16:454:472	6368613	1	True				
ANR	6368703	AssignmentExpression	cur -> begin = start		6368613	0		=			
ANR	6368704	PtrMemberAccess	cur -> begin		6368613	0					
ANR	6368705	Identifier	cur		6368613	0					
ANR	6368706	Identifier	begin		6368613	1					
ANR	6368707	Identifier	start		6368613	1					
ANR	6368708	ExpressionStatement	cur -> end = start + 1	37:16:491:511	6368613	2	True				
ANR	6368709	AssignmentExpression	cur -> end = start + 1		6368613	0		=			
ANR	6368710	PtrMemberAccess	cur -> end		6368613	0					
ANR	6368711	Identifier	cur		6368613	0					
ANR	6368712	Identifier	end		6368613	1					
ANR	6368713	AdditiveExpression	start + 1		6368613	1		+			
ANR	6368714	Identifier	start		6368613	0					
ANR	6368715	PrimaryExpression	1		6368613	1					
ANR	6368716	ExpressionStatement	"siv -> ranges = g_list_insert_sorted_merged ( siv -> ranges , cur , range_compare )"	39:16:530:663	6368613	3	True				
ANR	6368717	AssignmentExpression	"siv -> ranges = g_list_insert_sorted_merged ( siv -> ranges , cur , range_compare )"		6368613	0		=			
ANR	6368718	PtrMemberAccess	siv -> ranges		6368613	0					
ANR	6368719	Identifier	siv		6368613	0					
ANR	6368720	Identifier	ranges		6368613	1					
ANR	6368721	CallExpression	"g_list_insert_sorted_merged ( siv -> ranges , cur , range_compare )"		6368613	1					
ANR	6368722	Callee	g_list_insert_sorted_merged		6368613	0					
ANR	6368723	Identifier	g_list_insert_sorted_merged		6368613	0					
ANR	6368724	ArgumentList	siv -> ranges		6368613	1					
ANR	6368725	Argument	siv -> ranges		6368613	0					
ANR	6368726	PtrMemberAccess	siv -> ranges		6368613	0					
ANR	6368727	Identifier	siv		6368613	0					
ANR	6368728	Identifier	ranges		6368613	1					
ANR	6368729	Argument	cur		6368613	1					
ANR	6368730	Identifier	cur		6368613	0					
ANR	6368731	Argument	range_compare		6368613	2					
ANR	6368732	Identifier	range_compare		6368613	0					
ANR	6368733	ExpressionStatement	cur = NULL	43:16:682:692	6368613	4	True				
ANR	6368734	AssignmentExpression	cur = NULL		6368613	0		=			
ANR	6368735	Identifier	cur		6368613	0					
ANR	6368736	Identifier	NULL		6368613	1					
ANR	6368737	ExpressionStatement	str = NULL	45:16:711:721	6368613	5	True				
ANR	6368738	AssignmentExpression	str = NULL		6368613	0		=			
ANR	6368739	Identifier	str		6368613	0					
ANR	6368740	Identifier	NULL		6368613	1					
ANR	6368741	ElseStatement	else		6368613	0					
ANR	6368742	IfStatement	if ( * endptr == '-' )		6368613	0					
ANR	6368743	Condition	* endptr == '-'	47:23:747:760	6368613	0	True				
ANR	6368744	EqualityExpression	* endptr == '-'		6368613	0		==			
ANR	6368745	UnaryOperationExpression	* endptr		6368613	0					
ANR	6368746	UnaryOperator	*		6368613	0					
ANR	6368747	Identifier	endptr		6368613	1					
ANR	6368748	PrimaryExpression	'-'		6368613	1					
ANR	6368749	CompoundStatement		45:39:683:683	6368613	1					
ANR	6368750	ExpressionStatement	str = endptr + 1	49:16:782:798	6368613	0	True				
ANR	6368751	AssignmentExpression	str = endptr + 1		6368613	0		=			
ANR	6368752	Identifier	str		6368613	0					
ANR	6368753	AdditiveExpression	endptr + 1		6368613	1		+			
ANR	6368754	Identifier	endptr		6368613	0					
ANR	6368755	PrimaryExpression	1		6368613	1					
ANR	6368756	ExpressionStatement	errno = 0	51:16:817:826	6368613	1	True				
ANR	6368757	AssignmentExpression	errno = 0		6368613	0		=			
ANR	6368758	Identifier	errno		6368613	0					
ANR	6368759	PrimaryExpression	0		6368613	1					
ANR	6368760	ExpressionStatement	"end = strtoll ( str , & endptr , 0 )"	53:16:845:875	6368613	2	True				
ANR	6368761	AssignmentExpression	"end = strtoll ( str , & endptr , 0 )"		6368613	0		=			
ANR	6368762	Identifier	end		6368613	0					
ANR	6368763	CallExpression	"strtoll ( str , & endptr , 0 )"		6368613	1					
ANR	6368764	Callee	strtoll		6368613	0					
ANR	6368765	Identifier	strtoll		6368613	0					
ANR	6368766	ArgumentList	str		6368613	1					
ANR	6368767	Argument	str		6368613	0					
ANR	6368768	Identifier	str		6368613	0					
ANR	6368769	Argument	& endptr		6368613	1					
ANR	6368770	UnaryOperationExpression	& endptr		6368613	0					
ANR	6368771	UnaryOperator	&		6368613	0					
ANR	6368772	Identifier	endptr		6368613	1					
ANR	6368773	Argument	0		6368613	2					
ANR	6368774	PrimaryExpression	0		6368613	0					
ANR	6368775	IfStatement	if ( errno == 0 && endptr > str && start <= end && ( start > INT64_MAX - 65536 || end < start + 65536 ) )		6368613	3					
ANR	6368776	Condition	errno == 0 && endptr > str && start <= end && ( start > INT64_MAX - 65536 || end < start + 65536 )	55:20:898:1036	6368613	0	True				
ANR	6368777	AndExpression	errno == 0 && endptr > str && start <= end && ( start > INT64_MAX - 65536 || end < start + 65536 )		6368613	0		&&			
ANR	6368778	EqualityExpression	errno == 0		6368613	0		==			
ANR	6368779	Identifier	errno		6368613	0					
ANR	6368780	PrimaryExpression	0		6368613	1					
ANR	6368781	AndExpression	endptr > str && start <= end && ( start > INT64_MAX - 65536 || end < start + 65536 )		6368613	1		&&			
ANR	6368782	RelationalExpression	endptr > str		6368613	0		>			
ANR	6368783	Identifier	endptr		6368613	0					
ANR	6368784	Identifier	str		6368613	1					
ANR	6368785	AndExpression	start <= end && ( start > INT64_MAX - 65536 || end < start + 65536 )		6368613	1		&&			
ANR	6368786	RelationalExpression	start <= end		6368613	0		<=			
ANR	6368787	Identifier	start		6368613	0					
ANR	6368788	Identifier	end		6368613	1					
ANR	6368789	OrExpression	start > INT64_MAX - 65536 || end < start + 65536		6368613	1		||			
ANR	6368790	RelationalExpression	start > INT64_MAX - 65536		6368613	0		>			
ANR	6368791	Identifier	start		6368613	0					
ANR	6368792	AdditiveExpression	INT64_MAX - 65536		6368613	1		-			
ANR	6368793	Identifier	INT64_MAX		6368613	0					
ANR	6368794	PrimaryExpression	65536		6368613	1					
ANR	6368795	RelationalExpression	end < start + 65536		6368613	1		<			
ANR	6368796	Identifier	end		6368613	0					
ANR	6368797	AdditiveExpression	start + 65536		6368613	1		+			
ANR	6368798	Identifier	start		6368613	0					
ANR	6368799	PrimaryExpression	65536		6368613	1					
ANR	6368800	CompoundStatement		57:43:959:959	6368613	1					
ANR	6368801	IfStatement	if ( * endptr == '\\0' )		6368613	0					
ANR	6368802	Condition	* endptr == '\\0'	61:24:1066:1080	6368613	0	True				
ANR	6368803	EqualityExpression	* endptr == '\\0'		6368613	0		==			
ANR	6368804	UnaryOperationExpression	* endptr		6368613	0					
ANR	6368805	UnaryOperator	*		6368613	0					
ANR	6368806	Identifier	endptr		6368613	1					
ANR	6368807	PrimaryExpression	'\\0'		6368613	1					
ANR	6368808	CompoundStatement		59:41:1003:1003	6368613	1					
ANR	6368809	ExpressionStatement	cur = g_malloc0 ( sizeof ( * cur ) )	63:24:1110:1139	6368613	0	True				
ANR	6368810	AssignmentExpression	cur = g_malloc0 ( sizeof ( * cur ) )		6368613	0		=			
ANR	6368811	Identifier	cur		6368613	0					
ANR	6368812	CallExpression	g_malloc0 ( sizeof ( * cur ) )		6368613	1					
ANR	6368813	Callee	g_malloc0		6368613	0					
ANR	6368814	Identifier	g_malloc0		6368613	0					
ANR	6368815	ArgumentList	sizeof ( * cur )		6368613	1					
ANR	6368816	Argument	sizeof ( * cur )		6368613	0					
ANR	6368817	SizeofExpression	sizeof ( * cur )		6368613	0					
ANR	6368818	Sizeof	sizeof		6368613	0					
ANR	6368819	UnaryOperationExpression	* cur		6368613	1					
ANR	6368820	UnaryOperator	*		6368613	0					
ANR	6368821	Identifier	cur		6368613	1					
ANR	6368822	ExpressionStatement	cur -> begin = start	65:24:1166:1184	6368613	1	True				
ANR	6368823	AssignmentExpression	cur -> begin = start		6368613	0		=			
ANR	6368824	PtrMemberAccess	cur -> begin		6368613	0					
ANR	6368825	Identifier	cur		6368613	0					
ANR	6368826	Identifier	begin		6368613	1					
ANR	6368827	Identifier	start		6368613	1					
ANR	6368828	ExpressionStatement	cur -> end = end + 1	67:24:1211:1229	6368613	2	True				
ANR	6368829	AssignmentExpression	cur -> end = end + 1		6368613	0		=			
ANR	6368830	PtrMemberAccess	cur -> end		6368613	0					
ANR	6368831	Identifier	cur		6368613	0					
ANR	6368832	Identifier	end		6368613	1					
ANR	6368833	AdditiveExpression	end + 1		6368613	1		+			
ANR	6368834	Identifier	end		6368613	0					
ANR	6368835	PrimaryExpression	1		6368613	1					
ANR	6368836	ExpressionStatement	"siv -> ranges = g_list_insert_sorted_merged ( siv -> ranges , cur , range_compare )"	69:24:1256:1473	6368613	3	True				
ANR	6368837	AssignmentExpression	"siv -> ranges = g_list_insert_sorted_merged ( siv -> ranges , cur , range_compare )"		6368613	0		=			
ANR	6368838	PtrMemberAccess	siv -> ranges		6368613	0					
ANR	6368839	Identifier	siv		6368613	0					
ANR	6368840	Identifier	ranges		6368613	1					
ANR	6368841	CallExpression	"g_list_insert_sorted_merged ( siv -> ranges , cur , range_compare )"		6368613	1					
ANR	6368842	Callee	g_list_insert_sorted_merged		6368613	0					
ANR	6368843	Identifier	g_list_insert_sorted_merged		6368613	0					
ANR	6368844	ArgumentList	siv -> ranges		6368613	1					
ANR	6368845	Argument	siv -> ranges		6368613	0					
ANR	6368846	PtrMemberAccess	siv -> ranges		6368613	0					
ANR	6368847	Identifier	siv		6368613	0					
ANR	6368848	Identifier	ranges		6368613	1					
ANR	6368849	Argument	cur		6368613	1					
ANR	6368850	Identifier	cur		6368613	0					
ANR	6368851	Argument	range_compare		6368613	2					
ANR	6368852	Identifier	range_compare		6368613	0					
ANR	6368853	ExpressionStatement	cur = NULL	77:24:1500:1510	6368613	4	True				
ANR	6368854	AssignmentExpression	cur = NULL		6368613	0		=			
ANR	6368855	Identifier	cur		6368613	0					
ANR	6368856	Identifier	NULL		6368613	1					
ANR	6368857	ExpressionStatement	str = NULL	79:24:1537:1547	6368613	5	True				
ANR	6368858	AssignmentExpression	str = NULL		6368613	0		=			
ANR	6368859	Identifier	str		6368613	0					
ANR	6368860	Identifier	NULL		6368613	1					
ANR	6368861	ElseStatement	else		6368613	0					
ANR	6368862	IfStatement	"if ( * endptr == ',' )"		6368613	0					
ANR	6368863	Condition	"* endptr == ','"	81:31:1581:1594	6368613	0	True				
ANR	6368864	EqualityExpression	"* endptr == ','"		6368613	0		==			
ANR	6368865	UnaryOperationExpression	* endptr		6368613	0					
ANR	6368866	UnaryOperator	*		6368613	0					
ANR	6368867	Identifier	endptr		6368613	1					
ANR	6368868	PrimaryExpression	"','"		6368613	1					
ANR	6368869	CompoundStatement		79:47:1517:1517	6368613	1					
ANR	6368870	ExpressionStatement	str = endptr + 1	83:24:1624:1640	6368613	0	True				
ANR	6368871	AssignmentExpression	str = endptr + 1		6368613	0		=			
ANR	6368872	Identifier	str		6368613	0					
ANR	6368873	AdditiveExpression	endptr + 1		6368613	1		+			
ANR	6368874	Identifier	endptr		6368613	0					
ANR	6368875	PrimaryExpression	1		6368613	1					
ANR	6368876	ExpressionStatement	cur = g_malloc0 ( sizeof ( * cur ) )	85:24:1667:1696	6368613	1	True				
ANR	6368877	AssignmentExpression	cur = g_malloc0 ( sizeof ( * cur ) )		6368613	0		=			
ANR	6368878	Identifier	cur		6368613	0					
ANR	6368879	CallExpression	g_malloc0 ( sizeof ( * cur ) )		6368613	1					
ANR	6368880	Callee	g_malloc0		6368613	0					
ANR	6368881	Identifier	g_malloc0		6368613	0					
ANR	6368882	ArgumentList	sizeof ( * cur )		6368613	1					
ANR	6368883	Argument	sizeof ( * cur )		6368613	0					
ANR	6368884	SizeofExpression	sizeof ( * cur )		6368613	0					
ANR	6368885	Sizeof	sizeof		6368613	0					
ANR	6368886	UnaryOperationExpression	* cur		6368613	1					
ANR	6368887	UnaryOperator	*		6368613	0					
ANR	6368888	Identifier	cur		6368613	1					
ANR	6368889	ExpressionStatement	cur -> begin = start	87:24:1723:1741	6368613	2	True				
ANR	6368890	AssignmentExpression	cur -> begin = start		6368613	0		=			
ANR	6368891	PtrMemberAccess	cur -> begin		6368613	0					
ANR	6368892	Identifier	cur		6368613	0					
ANR	6368893	Identifier	begin		6368613	1					
ANR	6368894	Identifier	start		6368613	1					
ANR	6368895	ExpressionStatement	cur -> end = end + 1	89:24:1768:1786	6368613	3	True				
ANR	6368896	AssignmentExpression	cur -> end = end + 1		6368613	0		=			
ANR	6368897	PtrMemberAccess	cur -> end		6368613	0					
ANR	6368898	Identifier	cur		6368613	0					
ANR	6368899	Identifier	end		6368613	1					
ANR	6368900	AdditiveExpression	end + 1		6368613	1		+			
ANR	6368901	Identifier	end		6368613	0					
ANR	6368902	PrimaryExpression	1		6368613	1					
ANR	6368903	ExpressionStatement	"siv -> ranges = g_list_insert_sorted_merged ( siv -> ranges , cur , range_compare )"	91:24:1813:2030	6368613	4	True				
ANR	6368904	AssignmentExpression	"siv -> ranges = g_list_insert_sorted_merged ( siv -> ranges , cur , range_compare )"		6368613	0		=			
ANR	6368905	PtrMemberAccess	siv -> ranges		6368613	0					
ANR	6368906	Identifier	siv		6368613	0					
ANR	6368907	Identifier	ranges		6368613	1					
ANR	6368908	CallExpression	"g_list_insert_sorted_merged ( siv -> ranges , cur , range_compare )"		6368613	1					
ANR	6368909	Callee	g_list_insert_sorted_merged		6368613	0					
ANR	6368910	Identifier	g_list_insert_sorted_merged		6368613	0					
ANR	6368911	ArgumentList	siv -> ranges		6368613	1					
ANR	6368912	Argument	siv -> ranges		6368613	0					
ANR	6368913	PtrMemberAccess	siv -> ranges		6368613	0					
ANR	6368914	Identifier	siv		6368613	0					
ANR	6368915	Identifier	ranges		6368613	1					
ANR	6368916	Argument	cur		6368613	1					
ANR	6368917	Identifier	cur		6368613	0					
ANR	6368918	Argument	range_compare		6368613	2					
ANR	6368919	Identifier	range_compare		6368613	0					
ANR	6368920	ExpressionStatement	cur = NULL	99:24:2057:2067	6368613	5	True				
ANR	6368921	AssignmentExpression	cur = NULL		6368613	0		=			
ANR	6368922	Identifier	cur		6368613	0					
ANR	6368923	Identifier	NULL		6368613	1					
ANR	6368924	ElseStatement	else		6368613	0					
ANR	6368925	CompoundStatement		99:27:2017:2017	6368613	0					
ANR	6368926	GotoStatement	goto error ;	103:24:2124:2134	6368613	0	True				
ANR	6368927	Identifier	error		6368613	0					
ANR	6368928	ElseStatement	else		6368613	0					
ANR	6368929	CompoundStatement		105:23:2103:2103	6368613	0					
ANR	6368930	GotoStatement	goto error ;	109:20:2206:2216	6368613	0	True				
ANR	6368931	Identifier	error		6368613	0					
ANR	6368932	ElseStatement	else		6368613	0					
ANR	6368933	IfStatement	"if ( * endptr == ',' )"		6368613	0					
ANR	6368934	Condition	"* endptr == ','"	113:23:2261:2274	6368613	0	True				
ANR	6368935	EqualityExpression	"* endptr == ','"		6368613	0		==			
ANR	6368936	UnaryOperationExpression	* endptr		6368613	0					
ANR	6368937	UnaryOperator	*		6368613	0					
ANR	6368938	Identifier	endptr		6368613	1					
ANR	6368939	PrimaryExpression	"','"		6368613	1					
ANR	6368940	CompoundStatement		111:39:2197:2197	6368613	1					
ANR	6368941	ExpressionStatement	str = endptr + 1	115:16:2296:2312	6368613	0	True				
ANR	6368942	AssignmentExpression	str = endptr + 1		6368613	0		=			
ANR	6368943	Identifier	str		6368613	0					
ANR	6368944	AdditiveExpression	endptr + 1		6368613	1		+			
ANR	6368945	Identifier	endptr		6368613	0					
ANR	6368946	PrimaryExpression	1		6368613	1					
ANR	6368947	ExpressionStatement	cur = g_malloc0 ( sizeof ( * cur ) )	117:16:2331:2360	6368613	1	True				
ANR	6368948	AssignmentExpression	cur = g_malloc0 ( sizeof ( * cur ) )		6368613	0		=			
ANR	6368949	Identifier	cur		6368613	0					
ANR	6368950	CallExpression	g_malloc0 ( sizeof ( * cur ) )		6368613	1					
ANR	6368951	Callee	g_malloc0		6368613	0					
ANR	6368952	Identifier	g_malloc0		6368613	0					
ANR	6368953	ArgumentList	sizeof ( * cur )		6368613	1					
ANR	6368954	Argument	sizeof ( * cur )		6368613	0					
ANR	6368955	SizeofExpression	sizeof ( * cur )		6368613	0					
ANR	6368956	Sizeof	sizeof		6368613	0					
ANR	6368957	UnaryOperationExpression	* cur		6368613	1					
ANR	6368958	UnaryOperator	*		6368613	0					
ANR	6368959	Identifier	cur		6368613	1					
ANR	6368960	ExpressionStatement	cur -> begin = start	119:16:2379:2397	6368613	2	True				
ANR	6368961	AssignmentExpression	cur -> begin = start		6368613	0		=			
ANR	6368962	PtrMemberAccess	cur -> begin		6368613	0					
ANR	6368963	Identifier	cur		6368613	0					
ANR	6368964	Identifier	begin		6368613	1					
ANR	6368965	Identifier	start		6368613	1					
ANR	6368966	ExpressionStatement	cur -> end = start + 1	121:16:2416:2436	6368613	3	True				
ANR	6368967	AssignmentExpression	cur -> end = start + 1		6368613	0		=			
ANR	6368968	PtrMemberAccess	cur -> end		6368613	0					
ANR	6368969	Identifier	cur		6368613	0					
ANR	6368970	Identifier	end		6368613	1					
ANR	6368971	AdditiveExpression	start + 1		6368613	1		+			
ANR	6368972	Identifier	start		6368613	0					
ANR	6368973	PrimaryExpression	1		6368613	1					
ANR	6368974	ExpressionStatement	"siv -> ranges = g_list_insert_sorted_merged ( siv -> ranges , cur , range_compare )"	123:16:2455:2647	6368613	4	True				
ANR	6368975	AssignmentExpression	"siv -> ranges = g_list_insert_sorted_merged ( siv -> ranges , cur , range_compare )"		6368613	0		=			
ANR	6368976	PtrMemberAccess	siv -> ranges		6368613	0					
ANR	6368977	Identifier	siv		6368613	0					
ANR	6368978	Identifier	ranges		6368613	1					
ANR	6368979	CallExpression	"g_list_insert_sorted_merged ( siv -> ranges , cur , range_compare )"		6368613	1					
ANR	6368980	Callee	g_list_insert_sorted_merged		6368613	0					
ANR	6368981	Identifier	g_list_insert_sorted_merged		6368613	0					
ANR	6368982	ArgumentList	siv -> ranges		6368613	1					
ANR	6368983	Argument	siv -> ranges		6368613	0					
ANR	6368984	PtrMemberAccess	siv -> ranges		6368613	0					
ANR	6368985	Identifier	siv		6368613	0					
ANR	6368986	Identifier	ranges		6368613	1					
ANR	6368987	Argument	cur		6368613	1					
ANR	6368988	Identifier	cur		6368613	0					
ANR	6368989	Argument	range_compare		6368613	2					
ANR	6368990	Identifier	range_compare		6368613	0					
ANR	6368991	ExpressionStatement	cur = NULL	129:16:2666:2676	6368613	5	True				
ANR	6368992	AssignmentExpression	cur = NULL		6368613	0		=			
ANR	6368993	Identifier	cur		6368613	0					
ANR	6368994	Identifier	NULL		6368613	1					
ANR	6368995	ElseStatement	else		6368613	0					
ANR	6368996	CompoundStatement		129:19:2618:2618	6368613	0					
ANR	6368997	GotoStatement	goto error ;	133:16:2717:2727	6368613	0	True				
ANR	6368998	Identifier	error		6368613	0					
ANR	6368999	ElseStatement	else		6368613	0					
ANR	6369000	CompoundStatement		135:15:2680:2680	6368613	0					
ANR	6369001	GotoStatement	goto error ;	139:12:2775:2785	6368613	0	True				
ANR	6369002	Identifier	error		6368613	0					
ANR	6369003	Condition	str	143:13:2812:2814	6368613	1	True				
ANR	6369004	Identifier	str		6368613	0					
ANR	6369005	ReturnStatement	return 0 ;	147:4:2825:2833	6368613	6	True				
ANR	6369006	PrimaryExpression	0		6368613	0					
ANR	6369007	Label	error :	149:0:2836:2841	6368613	7	True				
ANR	6369008	Identifier	error		6368613	0					
ANR	6369009	ExpressionStatement	"g_list_foreach ( siv -> ranges , free_range , NULL )"	151:4:2848:2893	6368613	8	True				
ANR	6369010	CallExpression	"g_list_foreach ( siv -> ranges , free_range , NULL )"		6368613	0					
ANR	6369011	Callee	g_list_foreach		6368613	0					
ANR	6369012	Identifier	g_list_foreach		6368613	0					
ANR	6369013	ArgumentList	siv -> ranges		6368613	1					
ANR	6369014	Argument	siv -> ranges		6368613	0					
ANR	6369015	PtrMemberAccess	siv -> ranges		6368613	0					
ANR	6369016	Identifier	siv		6368613	0					
ANR	6369017	Identifier	ranges		6368613	1					
ANR	6369018	Argument	free_range		6368613	1					
ANR	6369019	Identifier	free_range		6368613	0					
ANR	6369020	Argument	NULL		6368613	2					
ANR	6369021	Identifier	NULL		6368613	0					
ANR	6369022	ExpressionStatement	g_list_free ( siv -> ranges )	153:4:2900:2924	6368613	9	True				
ANR	6369023	CallExpression	g_list_free ( siv -> ranges )		6368613	0					
ANR	6369024	Callee	g_list_free		6368613	0					
ANR	6369025	Identifier	g_list_free		6368613	0					
ANR	6369026	ArgumentList	siv -> ranges		6368613	1					
ANR	6369027	Argument	siv -> ranges		6368613	0					
ANR	6369028	PtrMemberAccess	siv -> ranges		6368613	0					
ANR	6369029	Identifier	siv		6368613	0					
ANR	6369030	Identifier	ranges		6368613	1					
ANR	6369031	ExpressionStatement	siv -> ranges = NULL	155:4:2931:2949	6368613	10	True				
ANR	6369032	AssignmentExpression	siv -> ranges = NULL		6368613	0		=			
ANR	6369033	PtrMemberAccess	siv -> ranges		6368613	0					
ANR	6369034	Identifier	siv		6368613	0					
ANR	6369035	Identifier	ranges		6368613	1					
ANR	6369036	Identifier	NULL		6368613	1					
ANR	6369037	ExpressionStatement	"error_setg ( errp , QERR_INVALID_PARAMETER_VALUE , name ? name : ""null"" , ""an int64 value or range"" )"	157:4:2956:3067	6368613	11	True				
ANR	6369038	CallExpression	"error_setg ( errp , QERR_INVALID_PARAMETER_VALUE , name ? name : ""null"" , ""an int64 value or range"" )"		6368613	0					
ANR	6369039	Callee	error_setg		6368613	0					
ANR	6369040	Identifier	error_setg		6368613	0					
ANR	6369041	ArgumentList	errp		6368613	1					
ANR	6369042	Argument	errp		6368613	0					
ANR	6369043	Identifier	errp		6368613	0					
ANR	6369044	Argument	QERR_INVALID_PARAMETER_VALUE		6368613	1					
ANR	6369045	Identifier	QERR_INVALID_PARAMETER_VALUE		6368613	0					
ANR	6369046	Argument	"name ? name : ""null"""		6368613	2					
ANR	6369047	ConditionalExpression	"name ? name : ""null"""		6368613	0					
ANR	6369048	Condition	name		6368613	0					
ANR	6369049	Identifier	name		6368613	0					
ANR	6369050	Identifier	name		6368613	1					
ANR	6369051	PrimaryExpression	"""null"""		6368613	2					
ANR	6369052	Argument	"""an int64 value or range"""		6368613	3					
ANR	6369053	PrimaryExpression	"""an int64 value or range"""		6368613	0					
ANR	6369054	ReturnStatement	return - 1 ;	161:4:3074:3083	6368613	12	True				
ANR	6369055	UnaryOperationExpression	- 1		6368613	0					
ANR	6369056	UnaryOperator	-		6368613	0					
ANR	6369057	PrimaryExpression	1		6368613	1					
ANR	6369058	ReturnType	static int		6368613	1					
ANR	6369059	Identifier	parse_str		6368613	2					
ANR	6369060	ParameterList	"StringInputVisitor * siv , const char * name , Error * * errp"		6368613	3					
ANR	6369061	Parameter	StringInputVisitor * siv	1:21:21:43	6368613	0	True				
ANR	6369062	ParameterType	StringInputVisitor *		6368613	0					
ANR	6369063	Identifier	siv		6368613	1					
ANR	6369064	Parameter	const char * name	1:46:46:61	6368613	1	True				
ANR	6369065	ParameterType	const char *		6368613	0					
ANR	6369066	Identifier	name		6368613	1					
ANR	6369067	Parameter	Error * * errp	1:64:64:75	6368613	2	True				
ANR	6369068	ParameterType	Error * *		6368613	0					
ANR	6369069	Identifier	errp		6368613	1					
ANR	6369070	CFGEntryNode	ENTRY		6368613		True				
ANR	6369071	CFGExitNode	EXIT		6368613		True				
ANR	6369072	Symbol	cur		6368613						
ANR	6369073	Symbol	errp		6368613						
ANR	6369074	Symbol	* siv		6368613						
ANR	6369075	Symbol	INT64_MAX		6368613						
ANR	6369076	Symbol	range_compare		6368613						
ANR	6369077	Symbol	free_range		6368613						
ANR	6369078	Symbol	* cur		6368613						
ANR	6369079	Symbol	siv -> ranges		6368613						
ANR	6369080	Symbol	end		6368613						
ANR	6369081	Symbol	cur -> begin		6368613						
ANR	6369082	Symbol	siv -> string		6368613						
ANR	6369083	Symbol	QERR_INVALID_PARAMETER_VALUE		6368613						
ANR	6369084	Symbol	siv		6368613						
ANR	6369085	Symbol	errno		6368613						
ANR	6369086	Symbol	NULL		6368613						
ANR	6369087	Symbol	endptr		6368613						
ANR	6369088	Symbol	* endptr		6368613						
ANR	6369089	Symbol	& endptr		6368613						
ANR	6369090	Symbol	start		6368613						
ANR	6369091	Symbol	str		6368613						
ANR	6369092	Symbol	cur -> end		6368613						
ANR	6369093	Symbol	strtoll		6368613						
ANR	6369094	Symbol	name		6368613						
ANR	6369095	Symbol	g_list_insert_sorted_merged		6368613						
ANR	6369096	Symbol	g_malloc0		6368613						
