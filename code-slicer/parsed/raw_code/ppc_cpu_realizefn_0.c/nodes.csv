command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6604889	File	/home/p4ultr4n/workplace/ReVeal/raw_code/ppc_cpu_realizefn_0.c								
ANR	6604890	Function	ppc_cpu_realizefn	1:0:0:7891							
ANR	6604891	FunctionDef	"ppc_cpu_realizefn (DeviceState * dev , Error * * errp)"		6604890	0					
ANR	6604892	CompoundStatement		3:0:63:7891	6604890	0					
ANR	6604893	IdentifierDeclStatement	CPUState * cs = CPU ( dev ) ;	5:4:70:93	6604890	0	True				
ANR	6604894	IdentifierDecl	* cs = CPU ( dev )		6604890	0					
ANR	6604895	IdentifierDeclType	CPUState *		6604890	0					
ANR	6604896	Identifier	cs		6604890	1					
ANR	6604897	AssignmentExpression	* cs = CPU ( dev )		6604890	2		=			
ANR	6604898	Identifier	cs		6604890	0					
ANR	6604899	CallExpression	CPU ( dev )		6604890	1					
ANR	6604900	Callee	CPU		6604890	0					
ANR	6604901	Identifier	CPU		6604890	0					
ANR	6604902	ArgumentList	dev		6604890	1					
ANR	6604903	Argument	dev		6604890	0					
ANR	6604904	Identifier	dev		6604890	0					
ANR	6604905	IdentifierDeclStatement	PowerPCCPU * cpu = POWERPC_CPU ( dev ) ;	7:4:100:134	6604890	1	True				
ANR	6604906	IdentifierDecl	* cpu = POWERPC_CPU ( dev )		6604890	0					
ANR	6604907	IdentifierDeclType	PowerPCCPU *		6604890	0					
ANR	6604908	Identifier	cpu		6604890	1					
ANR	6604909	AssignmentExpression	* cpu = POWERPC_CPU ( dev )		6604890	2		=			
ANR	6604910	Identifier	cpu		6604890	0					
ANR	6604911	CallExpression	POWERPC_CPU ( dev )		6604890	1					
ANR	6604912	Callee	POWERPC_CPU		6604890	0					
ANR	6604913	Identifier	POWERPC_CPU		6604890	0					
ANR	6604914	ArgumentList	dev		6604890	1					
ANR	6604915	Argument	dev		6604890	0					
ANR	6604916	Identifier	dev		6604890	0					
ANR	6604917	IdentifierDeclStatement	PowerPCCPUClass * pcc = POWERPC_CPU_GET_CLASS ( cpu ) ;	9:4:141:190	6604890	2	True				
ANR	6604918	IdentifierDecl	* pcc = POWERPC_CPU_GET_CLASS ( cpu )		6604890	0					
ANR	6604919	IdentifierDeclType	PowerPCCPUClass *		6604890	0					
ANR	6604920	Identifier	pcc		6604890	1					
ANR	6604921	AssignmentExpression	* pcc = POWERPC_CPU_GET_CLASS ( cpu )		6604890	2		=			
ANR	6604922	Identifier	pcc		6604890	0					
ANR	6604923	CallExpression	POWERPC_CPU_GET_CLASS ( cpu )		6604890	1					
ANR	6604924	Callee	POWERPC_CPU_GET_CLASS		6604890	0					
ANR	6604925	Identifier	POWERPC_CPU_GET_CLASS		6604890	0					
ANR	6604926	ArgumentList	cpu		6604890	1					
ANR	6604927	Argument	cpu		6604890	0					
ANR	6604928	Identifier	cpu		6604890	0					
ANR	6604929	IdentifierDeclStatement	Error * local_err = NULL ;	11:4:197:220	6604890	3	True				
ANR	6604930	IdentifierDecl	* local_err = NULL		6604890	0					
ANR	6604931	IdentifierDeclType	Error *		6604890	0					
ANR	6604932	Identifier	local_err		6604890	1					
ANR	6604933	AssignmentExpression	* local_err = NULL		6604890	2		=			
ANR	6604934	Identifier	NULL		6604890	0					
ANR	6604935	Identifier	NULL		6604890	1					
ANR	6604936	IdentifierDeclStatement	int max_smt = kvm_enabled ( ) ? kvmppc_smt_threads ( ) : 1 ;	15:4:259:313	6604890	4	True				
ANR	6604937	IdentifierDecl	max_smt = kvm_enabled ( ) ? kvmppc_smt_threads ( ) : 1		6604890	0					
ANR	6604938	IdentifierDeclType	int		6604890	0					
ANR	6604939	Identifier	max_smt		6604890	1					
ANR	6604940	AssignmentExpression	max_smt = kvm_enabled ( ) ? kvmppc_smt_threads ( ) : 1		6604890	2		=			
ANR	6604941	Identifier	max_smt		6604890	0					
ANR	6604942	ConditionalExpression	kvm_enabled ( ) ? kvmppc_smt_threads ( ) : 1		6604890	1					
ANR	6604943	Condition	kvm_enabled ( )		6604890	0					
ANR	6604944	CallExpression	kvm_enabled ( )		6604890	0					
ANR	6604945	Callee	kvm_enabled		6604890	0					
ANR	6604946	Identifier	kvm_enabled		6604890	0					
ANR	6604947	ArgumentList			6604890	1					
ANR	6604948	CallExpression	kvmppc_smt_threads ( )		6604890	1					
ANR	6604949	Callee	kvmppc_smt_threads		6604890	0					
ANR	6604950	Identifier	kvmppc_smt_threads		6604890	0					
ANR	6604951	ArgumentList			6604890	1					
ANR	6604952	PrimaryExpression	1		6604890	2					
ANR	6604953	IfStatement	if ( smp_threads > max_smt )		6604890	5					
ANR	6604954	Condition	smp_threads > max_smt	23:8:366:386	6604890	0	True				
ANR	6604955	RelationalExpression	smp_threads > max_smt		6604890	0		>			
ANR	6604956	Identifier	smp_threads		6604890	0					
ANR	6604957	Identifier	max_smt		6604890	1					
ANR	6604958	CompoundStatement		21:31:325:325	6604890	1					
ANR	6604959	ExpressionStatement	"error_setg ( errp , ""Cannot support more than %d threads on PPC with %s"" , max_smt , kvm_enabled ( ) ? ""KVM"" : ""TCG"" )"	25:8:400:530	6604890	0	True				
ANR	6604960	CallExpression	"error_setg ( errp , ""Cannot support more than %d threads on PPC with %s"" , max_smt , kvm_enabled ( ) ? ""KVM"" : ""TCG"" )"		6604890	0					
ANR	6604961	Callee	error_setg		6604890	0					
ANR	6604962	Identifier	error_setg		6604890	0					
ANR	6604963	ArgumentList	errp		6604890	1					
ANR	6604964	Argument	errp		6604890	0					
ANR	6604965	Identifier	errp		6604890	0					
ANR	6604966	Argument	"""Cannot support more than %d threads on PPC with %s"""		6604890	1					
ANR	6604967	PrimaryExpression	"""Cannot support more than %d threads on PPC with %s"""		6604890	0					
ANR	6604968	Argument	max_smt		6604890	2					
ANR	6604969	Identifier	max_smt		6604890	0					
ANR	6604970	Argument	"kvm_enabled ( ) ? ""KVM"" : ""TCG"""		6604890	3					
ANR	6604971	ConditionalExpression	"kvm_enabled ( ) ? ""KVM"" : ""TCG"""		6604890	0					
ANR	6604972	Condition	kvm_enabled ( )		6604890	0					
ANR	6604973	CallExpression	kvm_enabled ( )		6604890	0					
ANR	6604974	Callee	kvm_enabled		6604890	0					
ANR	6604975	Identifier	kvm_enabled		6604890	0					
ANR	6604976	ArgumentList			6604890	1					
ANR	6604977	PrimaryExpression	"""KVM"""		6604890	1					
ANR	6604978	PrimaryExpression	"""TCG"""		6604890	2					
ANR	6604979	ReturnStatement	return ;	29:8:541:547	6604890	1	True				
ANR	6604980	IfStatement	if ( kvm_enabled ( ) )		6604890	6					
ANR	6604981	Condition	kvm_enabled ( )	37:8:575:587	6604890	0	True				
ANR	6604982	CallExpression	kvm_enabled ( )		6604890	0					
ANR	6604983	Callee	kvm_enabled		6604890	0					
ANR	6604984	Identifier	kvm_enabled		6604890	0					
ANR	6604985	ArgumentList			6604890	1					
ANR	6604986	CompoundStatement		35:23:526:526	6604890	1					
ANR	6604987	IfStatement	if ( kvmppc_fixup_cpu ( cpu ) != 0 )		6604890	0					
ANR	6604988	Condition	kvmppc_fixup_cpu ( cpu ) != 0	39:12:605:630	6604890	0	True				
ANR	6604989	EqualityExpression	kvmppc_fixup_cpu ( cpu ) != 0		6604890	0		!=			
ANR	6604990	CallExpression	kvmppc_fixup_cpu ( cpu )		6604890	0					
ANR	6604991	Callee	kvmppc_fixup_cpu		6604890	0					
ANR	6604992	Identifier	kvmppc_fixup_cpu		6604890	0					
ANR	6604993	ArgumentList	cpu		6604890	1					
ANR	6604994	Argument	cpu		6604890	0					
ANR	6604995	Identifier	cpu		6604890	0					
ANR	6604996	PrimaryExpression	0		6604890	1					
ANR	6604997	CompoundStatement		37:40:569:569	6604890	1					
ANR	6604998	ExpressionStatement	"error_setg ( errp , ""Unable to virtualize selected CPU with KVM"" )"	41:12:648:710	6604890	0	True				
ANR	6604999	CallExpression	"error_setg ( errp , ""Unable to virtualize selected CPU with KVM"" )"		6604890	0					
ANR	6605000	Callee	error_setg		6604890	0					
ANR	6605001	Identifier	error_setg		6604890	0					
ANR	6605002	ArgumentList	errp		6604890	1					
ANR	6605003	Argument	errp		6604890	0					
ANR	6605004	Identifier	errp		6604890	0					
ANR	6605005	Argument	"""Unable to virtualize selected CPU with KVM"""		6604890	1					
ANR	6605006	PrimaryExpression	"""Unable to virtualize selected CPU with KVM"""		6604890	0					
ANR	6605007	ReturnStatement	return ;	43:12:725:731	6604890	1	True				
ANR	6605008	ElseStatement	else		6604890	0					
ANR	6605009	IfStatement	if ( tcg_enabled ( ) )		6604890	0					
ANR	6605010	Condition	tcg_enabled ( )	47:15:760:772	6604890	0	True				
ANR	6605011	CallExpression	tcg_enabled ( )		6604890	0					
ANR	6605012	Callee	tcg_enabled		6604890	0					
ANR	6605013	Identifier	tcg_enabled		6604890	0					
ANR	6605014	ArgumentList			6604890	1					
ANR	6605015	CompoundStatement		45:30:711:711	6604890	1					
ANR	6605016	IfStatement	if ( ppc_fixup_cpu ( cpu ) != 0 )		6604890	0					
ANR	6605017	Condition	ppc_fixup_cpu ( cpu ) != 0	49:12:790:812	6604890	0	True				
ANR	6605018	EqualityExpression	ppc_fixup_cpu ( cpu ) != 0		6604890	0		!=			
ANR	6605019	CallExpression	ppc_fixup_cpu ( cpu )		6604890	0					
ANR	6605020	Callee	ppc_fixup_cpu		6604890	0					
ANR	6605021	Identifier	ppc_fixup_cpu		6604890	0					
ANR	6605022	ArgumentList	cpu		6604890	1					
ANR	6605023	Argument	cpu		6604890	0					
ANR	6605024	Identifier	cpu		6604890	0					
ANR	6605025	PrimaryExpression	0		6604890	1					
ANR	6605026	CompoundStatement		47:37:751:751	6604890	1					
ANR	6605027	ExpressionStatement	"error_setg ( errp , ""Unable to emulate selected CPU with TCG"" )"	51:12:830:889	6604890	0	True				
ANR	6605028	CallExpression	"error_setg ( errp , ""Unable to emulate selected CPU with TCG"" )"		6604890	0					
ANR	6605029	Callee	error_setg		6604890	0					
ANR	6605030	Identifier	error_setg		6604890	0					
ANR	6605031	ArgumentList	errp		6604890	1					
ANR	6605032	Argument	errp		6604890	0					
ANR	6605033	Identifier	errp		6604890	0					
ANR	6605034	Argument	"""Unable to emulate selected CPU with TCG"""		6604890	1					
ANR	6605035	PrimaryExpression	"""Unable to emulate selected CPU with TCG"""		6604890	0					
ANR	6605036	ReturnStatement	return ;	53:12:904:910	6604890	1	True				
ANR	6605037	IfStatement	if ( ! ppc_cpu_is_valid ( pcc ) )		6604890	7					
ANR	6605038	Condition	! ppc_cpu_is_valid ( pcc )	63:8:969:990	6604890	0	True				
ANR	6605039	UnaryOperationExpression	! ppc_cpu_is_valid ( pcc )		6604890	0					
ANR	6605040	UnaryOperator	!		6604890	0					
ANR	6605041	CallExpression	ppc_cpu_is_valid ( pcc )		6604890	1					
ANR	6605042	Callee	ppc_cpu_is_valid		6604890	0					
ANR	6605043	Identifier	ppc_cpu_is_valid		6604890	0					
ANR	6605044	ArgumentList	pcc		6604890	1					
ANR	6605045	Argument	pcc		6604890	0					
ANR	6605046	Identifier	pcc		6604890	0					
ANR	6605047	CompoundStatement		61:32:929:929	6604890	1					
ANR	6605048	Statement	error_setg	65:8:1004:1013	6604890	0	True				
ANR	6605049	Statement	(	65:18:1014:1014	6604890	1	True				
ANR	6605050	Statement	errp	65:19:1015:1018	6604890	2	True				
ANR	6605051	Statement	","	65:23:1019:1019	6604890	3	True				
ANR	6605052	Statement	"""CPU does not possess a BookE or 4xx MMU. """	65:25:1021:1063	6604890	4	True				
ANR	6605053	Statement	"""Please use qemu-system-ppc or qemu-system-ppc64 instead """	67:19:1085:1142	6604890	5	True				
ANR	6605054	Statement	"""or choose another CPU model."""	69:19:1164:1193	6604890	6	True				
ANR	6605055	Statement	)	69:49:1194:1194	6604890	7	True				
ANR	6605056	ExpressionStatement		69:50:1195:1195	6604890	8	True				
ANR	6605057	ReturnStatement	return ;	71:8:1206:1212	6604890	9	True				
ANR	6605058	ExpressionStatement	"create_ppc_opcodes ( cpu , & local_err )"	79:4:1236:1271	6604890	8	True				
ANR	6605059	CallExpression	"create_ppc_opcodes ( cpu , & local_err )"		6604890	0					
ANR	6605060	Callee	create_ppc_opcodes		6604890	0					
ANR	6605061	Identifier	create_ppc_opcodes		6604890	0					
ANR	6605062	ArgumentList	cpu		6604890	1					
ANR	6605063	Argument	cpu		6604890	0					
ANR	6605064	Identifier	cpu		6604890	0					
ANR	6605065	Argument	& local_err		6604890	1					
ANR	6605066	UnaryOperationExpression	& local_err		6604890	0					
ANR	6605067	UnaryOperator	&		6604890	0					
ANR	6605068	Identifier	local_err		6604890	1					
ANR	6605069	IfStatement	if ( local_err != NULL )		6604890	9					
ANR	6605070	Condition	local_err != NULL	81:8:1282:1298	6604890	0	True				
ANR	6605071	EqualityExpression	local_err != NULL		6604890	0		!=			
ANR	6605072	Identifier	local_err		6604890	0					
ANR	6605073	Identifier	NULL		6604890	1					
ANR	6605074	CompoundStatement		79:27:1237:1237	6604890	1					
ANR	6605075	ExpressionStatement	"error_propagate ( errp , local_err )"	83:8:1312:1344	6604890	0	True				
ANR	6605076	CallExpression	"error_propagate ( errp , local_err )"		6604890	0					
ANR	6605077	Callee	error_propagate		6604890	0					
ANR	6605078	Identifier	error_propagate		6604890	0					
ANR	6605079	ArgumentList	errp		6604890	1					
ANR	6605080	Argument	errp		6604890	0					
ANR	6605081	Identifier	errp		6604890	0					
ANR	6605082	Argument	local_err		6604890	1					
ANR	6605083	Identifier	local_err		6604890	0					
ANR	6605084	ReturnStatement	return ;	85:8:1355:1361	6604890	1	True				
ANR	6605085	ExpressionStatement	init_ppc_proc ( cpu )	89:4:1375:1393	6604890	10	True				
ANR	6605086	CallExpression	init_ppc_proc ( cpu )		6604890	0					
ANR	6605087	Callee	init_ppc_proc		6604890	0					
ANR	6605088	Identifier	init_ppc_proc		6604890	0					
ANR	6605089	ArgumentList	cpu		6604890	1					
ANR	6605090	Argument	cpu		6604890	0					
ANR	6605091	Identifier	cpu		6604890	0					
ANR	6605092	IfStatement	if ( pcc -> insns_flags & PPC_FLOAT )		6604890	11					
ANR	6605093	Condition	pcc -> insns_flags & PPC_FLOAT	93:8:1406:1433	6604890	0	True				
ANR	6605094	BitAndExpression	pcc -> insns_flags & PPC_FLOAT		6604890	0		&			
ANR	6605095	PtrMemberAccess	pcc -> insns_flags		6604890	0					
ANR	6605096	Identifier	pcc		6604890	0					
ANR	6605097	Identifier	insns_flags		6604890	1					
ANR	6605098	Identifier	PPC_FLOAT		6604890	1					
ANR	6605099	CompoundStatement		91:38:1372:1372	6604890	1					
ANR	6605100	ExpressionStatement	"gdb_register_coprocessor ( cs , gdb_get_float_reg , gdb_set_float_reg , 33 , ""power-fpu.xml"" , 0 )"	95:8:1447:1571	6604890	0	True				
ANR	6605101	CallExpression	"gdb_register_coprocessor ( cs , gdb_get_float_reg , gdb_set_float_reg , 33 , ""power-fpu.xml"" , 0 )"		6604890	0					
ANR	6605102	Callee	gdb_register_coprocessor		6604890	0					
ANR	6605103	Identifier	gdb_register_coprocessor		6604890	0					
ANR	6605104	ArgumentList	cs		6604890	1					
ANR	6605105	Argument	cs		6604890	0					
ANR	6605106	Identifier	cs		6604890	0					
ANR	6605107	Argument	gdb_get_float_reg		6604890	1					
ANR	6605108	Identifier	gdb_get_float_reg		6604890	0					
ANR	6605109	Argument	gdb_set_float_reg		6604890	2					
ANR	6605110	Identifier	gdb_set_float_reg		6604890	0					
ANR	6605111	Argument	33		6604890	3					
ANR	6605112	PrimaryExpression	33		6604890	0					
ANR	6605113	Argument	"""power-fpu.xml"""		6604890	4					
ANR	6605114	PrimaryExpression	"""power-fpu.xml"""		6604890	0					
ANR	6605115	Argument	0		6604890	5					
ANR	6605116	PrimaryExpression	0		6604890	0					
ANR	6605117	IfStatement	if ( pcc -> insns_flags & PPC_ALTIVEC )		6604890	12					
ANR	6605118	Condition	pcc -> insns_flags & PPC_ALTIVEC	101:8:1589:1618	6604890	0	True				
ANR	6605119	BitAndExpression	pcc -> insns_flags & PPC_ALTIVEC		6604890	0		&			
ANR	6605120	PtrMemberAccess	pcc -> insns_flags		6604890	0					
ANR	6605121	Identifier	pcc		6604890	0					
ANR	6605122	Identifier	insns_flags		6604890	1					
ANR	6605123	Identifier	PPC_ALTIVEC		6604890	1					
ANR	6605124	CompoundStatement		99:40:1557:1557	6604890	1					
ANR	6605125	ExpressionStatement	"gdb_register_coprocessor ( cs , gdb_get_avr_reg , gdb_set_avr_reg , 34 , ""power-altivec.xml"" , 0 )"	103:8:1632:1756	6604890	0	True				
ANR	6605126	CallExpression	"gdb_register_coprocessor ( cs , gdb_get_avr_reg , gdb_set_avr_reg , 34 , ""power-altivec.xml"" , 0 )"		6604890	0					
ANR	6605127	Callee	gdb_register_coprocessor		6604890	0					
ANR	6605128	Identifier	gdb_register_coprocessor		6604890	0					
ANR	6605129	ArgumentList	cs		6604890	1					
ANR	6605130	Argument	cs		6604890	0					
ANR	6605131	Identifier	cs		6604890	0					
ANR	6605132	Argument	gdb_get_avr_reg		6604890	1					
ANR	6605133	Identifier	gdb_get_avr_reg		6604890	0					
ANR	6605134	Argument	gdb_set_avr_reg		6604890	2					
ANR	6605135	Identifier	gdb_set_avr_reg		6604890	0					
ANR	6605136	Argument	34		6604890	3					
ANR	6605137	PrimaryExpression	34		6604890	0					
ANR	6605138	Argument	"""power-altivec.xml"""		6604890	4					
ANR	6605139	PrimaryExpression	"""power-altivec.xml"""		6604890	0					
ANR	6605140	Argument	0		6604890	5					
ANR	6605141	PrimaryExpression	0		6604890	0					
ANR	6605142	IfStatement	if ( pcc -> insns_flags & PPC_SPE )		6604890	13					
ANR	6605143	Condition	pcc -> insns_flags & PPC_SPE	109:8:1774:1799	6604890	0	True				
ANR	6605144	BitAndExpression	pcc -> insns_flags & PPC_SPE		6604890	0		&			
ANR	6605145	PtrMemberAccess	pcc -> insns_flags		6604890	0					
ANR	6605146	Identifier	pcc		6604890	0					
ANR	6605147	Identifier	insns_flags		6604890	1					
ANR	6605148	Identifier	PPC_SPE		6604890	1					
ANR	6605149	CompoundStatement		107:36:1738:1738	6604890	1					
ANR	6605150	ExpressionStatement	"gdb_register_coprocessor ( cs , gdb_get_spe_reg , gdb_set_spe_reg , 34 , ""power-spe.xml"" , 0 )"	111:8:1813:1933	6604890	0	True				
ANR	6605151	CallExpression	"gdb_register_coprocessor ( cs , gdb_get_spe_reg , gdb_set_spe_reg , 34 , ""power-spe.xml"" , 0 )"		6604890	0					
ANR	6605152	Callee	gdb_register_coprocessor		6604890	0					
ANR	6605153	Identifier	gdb_register_coprocessor		6604890	0					
ANR	6605154	ArgumentList	cs		6604890	1					
ANR	6605155	Argument	cs		6604890	0					
ANR	6605156	Identifier	cs		6604890	0					
ANR	6605157	Argument	gdb_get_spe_reg		6604890	1					
ANR	6605158	Identifier	gdb_get_spe_reg		6604890	0					
ANR	6605159	Argument	gdb_set_spe_reg		6604890	2					
ANR	6605160	Identifier	gdb_set_spe_reg		6604890	0					
ANR	6605161	Argument	34		6604890	3					
ANR	6605162	PrimaryExpression	34		6604890	0					
ANR	6605163	Argument	"""power-spe.xml"""		6604890	4					
ANR	6605164	PrimaryExpression	"""power-spe.xml"""		6604890	0					
ANR	6605165	Argument	0		6604890	5					
ANR	6605166	PrimaryExpression	0		6604890	0					
ANR	6605167	ExpressionStatement	qemu_init_vcpu ( cs )	119:4:1949:1967	6604890	14	True				
ANR	6605168	CallExpression	qemu_init_vcpu ( cs )		6604890	0					
ANR	6605169	Callee	qemu_init_vcpu		6604890	0					
ANR	6605170	Identifier	qemu_init_vcpu		6604890	0					
ANR	6605171	ArgumentList	cs		6604890	1					
ANR	6605172	Argument	cs		6604890	0					
ANR	6605173	Identifier	cs		6604890	0					
ANR	6605174	ExpressionStatement	"pcc -> parent_realize ( dev , errp )"	123:4:1976:2006	6604890	15	True				
ANR	6605175	CallExpression	"pcc -> parent_realize ( dev , errp )"		6604890	0					
ANR	6605176	Callee	pcc -> parent_realize		6604890	0					
ANR	6605177	PtrMemberAccess	pcc -> parent_realize		6604890	0					
ANR	6605178	Identifier	pcc		6604890	0					
ANR	6605179	Identifier	parent_realize		6604890	1					
ANR	6605180	ArgumentList	dev		6604890	1					
ANR	6605181	Argument	dev		6604890	0					
ANR	6605182	Identifier	dev		6604890	0					
ANR	6605183	Argument	errp		6604890	1					
ANR	6605184	Identifier	errp		6604890	0					
ANR	6605185	CompoundStatement		131:8:2028:2074	6604890	16					
ANR	6605186	IdentifierDeclStatement	CPUPPCState * env = & cpu -> env ;	131:8:2053:2081	6604890	0	True				
ANR	6605187	IdentifierDecl	* env = & cpu -> env		6604890	0					
ANR	6605188	IdentifierDeclType	CPUPPCState *		6604890	0					
ANR	6605189	Identifier	env		6604890	1					
ANR	6605190	AssignmentExpression	* env = & cpu -> env		6604890	2		=			
ANR	6605191	Identifier	env		6604890	0					
ANR	6605192	UnaryOperationExpression	& cpu -> env		6604890	1					
ANR	6605193	UnaryOperator	&		6604890	0					
ANR	6605194	PtrMemberAccess	cpu -> env		6604890	1					
ANR	6605195	Identifier	cpu		6604890	0					
ANR	6605196	Identifier	env		6604890	1					
ANR	6605197	IdentifierDeclStatement	"const char * mmu_model , * excp_model , * bus_model ;"	133:8:2092:2138	6604890	1	True				
ANR	6605198	IdentifierDecl	* mmu_model		6604890	0					
ANR	6605199	IdentifierDeclType	const char *		6604890	0					
ANR	6605200	Identifier	mmu_model		6604890	1					
ANR	6605201	IdentifierDecl	* excp_model		6604890	1					
ANR	6605202	IdentifierDeclType	const char *		6604890	0					
ANR	6605203	Identifier	excp_model		6604890	1					
ANR	6605204	IdentifierDecl	* bus_model		6604890	2					
ANR	6605205	IdentifierDeclType	const char *		6604890	0					
ANR	6605206	Identifier	bus_model		6604890	1					
ANR	6605207	SwitchStatement	switch ( env -> mmu_model )		6604890	2					
ANR	6605208	Condition	env -> mmu_model	135:16:2157:2170	6604890	0	True				
ANR	6605209	PtrMemberAccess	env -> mmu_model		6604890	0					
ANR	6605210	Identifier	env		6604890	0					
ANR	6605211	Identifier	mmu_model		6604890	1					
ANR	6605212	CompoundStatement		133:32:2109:2109	6604890	1					
ANR	6605213	Label	case POWERPC_MMU_32B :	137:8:2184:2204	6604890	0	True				
ANR	6605214	Identifier	POWERPC_MMU_32B		6604890	0					
ANR	6605215	ExpressionStatement	"mmu_model = ""PowerPC 32"""	139:12:2219:2243	6604890	1	True				
ANR	6605216	AssignmentExpression	"mmu_model = ""PowerPC 32"""		6604890	0		=			
ANR	6605217	Identifier	mmu_model		6604890	0					
ANR	6605218	PrimaryExpression	"""PowerPC 32"""		6604890	1					
ANR	6605219	BreakStatement	break ;	141:12:2258:2263	6604890	2	True				
ANR	6605220	Label	case POWERPC_MMU_SOFT_6xx :	143:8:2274:2299	6604890	3	True				
ANR	6605221	Identifier	POWERPC_MMU_SOFT_6xx		6604890	0					
ANR	6605222	ExpressionStatement	"mmu_model = ""PowerPC 6xx/7xx with software driven TLBs"""	145:12:2314:2369	6604890	4	True				
ANR	6605223	AssignmentExpression	"mmu_model = ""PowerPC 6xx/7xx with software driven TLBs"""		6604890	0		=			
ANR	6605224	Identifier	mmu_model		6604890	0					
ANR	6605225	PrimaryExpression	"""PowerPC 6xx/7xx with software driven TLBs"""		6604890	1					
ANR	6605226	BreakStatement	break ;	147:12:2384:2389	6604890	5	True				
ANR	6605227	Label	case POWERPC_MMU_SOFT_74xx :	149:8:2400:2426	6604890	6	True				
ANR	6605228	Identifier	POWERPC_MMU_SOFT_74xx		6604890	0					
ANR	6605229	ExpressionStatement	"mmu_model = ""PowerPC 74xx with software driven TLBs"""	151:12:2441:2493	6604890	7	True				
ANR	6605230	AssignmentExpression	"mmu_model = ""PowerPC 74xx with software driven TLBs"""		6604890	0		=			
ANR	6605231	Identifier	mmu_model		6604890	0					
ANR	6605232	PrimaryExpression	"""PowerPC 74xx with software driven TLBs"""		6604890	1					
ANR	6605233	BreakStatement	break ;	153:12:2508:2513	6604890	8	True				
ANR	6605234	Label	case POWERPC_MMU_SOFT_4xx :	155:8:2524:2549	6604890	9	True				
ANR	6605235	Identifier	POWERPC_MMU_SOFT_4xx		6604890	0					
ANR	6605236	ExpressionStatement	"mmu_model = ""PowerPC 4xx with software driven TLBs"""	157:12:2564:2615	6604890	10	True				
ANR	6605237	AssignmentExpression	"mmu_model = ""PowerPC 4xx with software driven TLBs"""		6604890	0		=			
ANR	6605238	Identifier	mmu_model		6604890	0					
ANR	6605239	PrimaryExpression	"""PowerPC 4xx with software driven TLBs"""		6604890	1					
ANR	6605240	BreakStatement	break ;	159:12:2630:2635	6604890	11	True				
ANR	6605241	Label	case POWERPC_MMU_SOFT_4xx_Z :	161:8:2646:2673	6604890	12	True				
ANR	6605242	Identifier	POWERPC_MMU_SOFT_4xx_Z		6604890	0					
ANR	6605243	Statement	mmu_model	163:12:2688:2696	6604890	13	True				
ANR	6605244	Statement	=	163:22:2698:2698	6604890	14	True				
ANR	6605245	Statement	"""PowerPC 4xx with software driven TLBs """	163:24:2700:2739	6604890	15	True				
ANR	6605246	ExpressionStatement	"""and zones protections"""	165:16:2758:2781	6604890	16	True				
ANR	6605247	PrimaryExpression	"""and zones protections"""		6604890	0					
ANR	6605248	BreakStatement	break ;	167:12:2796:2801	6604890	17	True				
ANR	6605249	Label	case POWERPC_MMU_REAL :	169:8:2812:2833	6604890	18	True				
ANR	6605250	Identifier	POWERPC_MMU_REAL		6604890	0					
ANR	6605251	ExpressionStatement	"mmu_model = ""PowerPC real mode only"""	171:12:2848:2884	6604890	19	True				
ANR	6605252	AssignmentExpression	"mmu_model = ""PowerPC real mode only"""		6604890	0		=			
ANR	6605253	Identifier	mmu_model		6604890	0					
ANR	6605254	PrimaryExpression	"""PowerPC real mode only"""		6604890	1					
ANR	6605255	BreakStatement	break ;	173:12:2899:2904	6604890	20	True				
ANR	6605256	Label	case POWERPC_MMU_MPC8xx :	175:8:2915:2938	6604890	21	True				
ANR	6605257	Identifier	POWERPC_MMU_MPC8xx		6604890	0					
ANR	6605258	ExpressionStatement	"mmu_model = ""PowerPC MPC8xx"""	177:12:2953:2981	6604890	22	True				
ANR	6605259	AssignmentExpression	"mmu_model = ""PowerPC MPC8xx"""		6604890	0		=			
ANR	6605260	Identifier	mmu_model		6604890	0					
ANR	6605261	PrimaryExpression	"""PowerPC MPC8xx"""		6604890	1					
ANR	6605262	BreakStatement	break ;	179:12:2996:3001	6604890	23	True				
ANR	6605263	Label	case POWERPC_MMU_BOOKE :	181:8:3012:3034	6604890	24	True				
ANR	6605264	Identifier	POWERPC_MMU_BOOKE		6604890	0					
ANR	6605265	ExpressionStatement	"mmu_model = ""PowerPC BookE"""	183:12:3049:3076	6604890	25	True				
ANR	6605266	AssignmentExpression	"mmu_model = ""PowerPC BookE"""		6604890	0		=			
ANR	6605267	Identifier	mmu_model		6604890	0					
ANR	6605268	PrimaryExpression	"""PowerPC BookE"""		6604890	1					
ANR	6605269	BreakStatement	break ;	185:12:3091:3096	6604890	26	True				
ANR	6605270	Label	case POWERPC_MMU_BOOKE206 :	187:8:3107:3132	6604890	27	True				
ANR	6605271	Identifier	POWERPC_MMU_BOOKE206		6604890	0					
ANR	6605272	ExpressionStatement	"mmu_model = ""PowerPC BookE 2.06"""	189:12:3147:3179	6604890	28	True				
ANR	6605273	AssignmentExpression	"mmu_model = ""PowerPC BookE 2.06"""		6604890	0		=			
ANR	6605274	Identifier	mmu_model		6604890	0					
ANR	6605275	PrimaryExpression	"""PowerPC BookE 2.06"""		6604890	1					
ANR	6605276	BreakStatement	break ;	191:12:3194:3199	6604890	29	True				
ANR	6605277	Label	case POWERPC_MMU_601 :	193:8:3210:3230	6604890	30	True				
ANR	6605278	Identifier	POWERPC_MMU_601		6604890	0					
ANR	6605279	ExpressionStatement	"mmu_model = ""PowerPC 601"""	195:12:3245:3270	6604890	31	True				
ANR	6605280	AssignmentExpression	"mmu_model = ""PowerPC 601"""		6604890	0		=			
ANR	6605281	Identifier	mmu_model		6604890	0					
ANR	6605282	PrimaryExpression	"""PowerPC 601"""		6604890	1					
ANR	6605283	BreakStatement	break ;	197:12:3285:3290	6604890	32	True				
ANR	6605284	Label	case POWERPC_MMU_64B :	201:8:3329:3349	6604890	33	True				
ANR	6605285	Identifier	POWERPC_MMU_64B		6604890	0					
ANR	6605286	ExpressionStatement	"mmu_model = ""PowerPC 64"""	203:12:3364:3388	6604890	34	True				
ANR	6605287	AssignmentExpression	"mmu_model = ""PowerPC 64"""		6604890	0		=			
ANR	6605288	Identifier	mmu_model		6604890	0					
ANR	6605289	PrimaryExpression	"""PowerPC 64"""		6604890	1					
ANR	6605290	BreakStatement	break ;	205:12:3403:3408	6604890	35	True				
ANR	6605291	Label	default :	209:8:3427:3434	6604890	36	True				
ANR	6605292	Identifier	default		6604890	0					
ANR	6605293	ExpressionStatement	"mmu_model = ""Unknown or invalid"""	211:12:3449:3481	6604890	37	True				
ANR	6605294	AssignmentExpression	"mmu_model = ""Unknown or invalid"""		6604890	0		=			
ANR	6605295	Identifier	mmu_model		6604890	0					
ANR	6605296	PrimaryExpression	"""Unknown or invalid"""		6604890	1					
ANR	6605297	BreakStatement	break ;	213:12:3496:3501	6604890	38	True				
ANR	6605298	SwitchStatement	switch ( env -> excp_model )		6604890	3					
ANR	6605299	Condition	env -> excp_model	217:16:3531:3545	6604890	0	True				
ANR	6605300	PtrMemberAccess	env -> excp_model		6604890	0					
ANR	6605301	Identifier	env		6604890	0					
ANR	6605302	Identifier	excp_model		6604890	1					
ANR	6605303	CompoundStatement		215:33:3484:3484	6604890	1					
ANR	6605304	Label	case POWERPC_EXCP_STD :	219:8:3559:3580	6604890	0	True				
ANR	6605305	Identifier	POWERPC_EXCP_STD		6604890	0					
ANR	6605306	ExpressionStatement	"excp_model = ""PowerPC"""	221:12:3595:3617	6604890	1	True				
ANR	6605307	AssignmentExpression	"excp_model = ""PowerPC"""		6604890	0		=			
ANR	6605308	Identifier	excp_model		6604890	0					
ANR	6605309	PrimaryExpression	"""PowerPC"""		6604890	1					
ANR	6605310	BreakStatement	break ;	223:12:3632:3637	6604890	2	True				
ANR	6605311	Label	case POWERPC_EXCP_40x :	225:8:3648:3669	6604890	3	True				
ANR	6605312	Identifier	POWERPC_EXCP_40x		6604890	0					
ANR	6605313	ExpressionStatement	"excp_model = ""PowerPC 40x"""	227:12:3684:3710	6604890	4	True				
ANR	6605314	AssignmentExpression	"excp_model = ""PowerPC 40x"""		6604890	0		=			
ANR	6605315	Identifier	excp_model		6604890	0					
ANR	6605316	PrimaryExpression	"""PowerPC 40x"""		6604890	1					
ANR	6605317	BreakStatement	break ;	229:12:3725:3730	6604890	5	True				
ANR	6605318	Label	case POWERPC_EXCP_601 :	231:8:3741:3762	6604890	6	True				
ANR	6605319	Identifier	POWERPC_EXCP_601		6604890	0					
ANR	6605320	ExpressionStatement	"excp_model = ""PowerPC 601"""	233:12:3777:3803	6604890	7	True				
ANR	6605321	AssignmentExpression	"excp_model = ""PowerPC 601"""		6604890	0		=			
ANR	6605322	Identifier	excp_model		6604890	0					
ANR	6605323	PrimaryExpression	"""PowerPC 601"""		6604890	1					
ANR	6605324	BreakStatement	break ;	235:12:3818:3823	6604890	8	True				
ANR	6605325	Label	case POWERPC_EXCP_602 :	237:8:3834:3855	6604890	9	True				
ANR	6605326	Identifier	POWERPC_EXCP_602		6604890	0					
ANR	6605327	ExpressionStatement	"excp_model = ""PowerPC 602"""	239:12:3870:3896	6604890	10	True				
ANR	6605328	AssignmentExpression	"excp_model = ""PowerPC 602"""		6604890	0		=			
ANR	6605329	Identifier	excp_model		6604890	0					
ANR	6605330	PrimaryExpression	"""PowerPC 602"""		6604890	1					
ANR	6605331	BreakStatement	break ;	241:12:3911:3916	6604890	11	True				
ANR	6605332	Label	case POWERPC_EXCP_603 :	243:8:3927:3948	6604890	12	True				
ANR	6605333	Identifier	POWERPC_EXCP_603		6604890	0					
ANR	6605334	ExpressionStatement	"excp_model = ""PowerPC 603"""	245:12:3963:3989	6604890	13	True				
ANR	6605335	AssignmentExpression	"excp_model = ""PowerPC 603"""		6604890	0		=			
ANR	6605336	Identifier	excp_model		6604890	0					
ANR	6605337	PrimaryExpression	"""PowerPC 603"""		6604890	1					
ANR	6605338	BreakStatement	break ;	247:12:4004:4009	6604890	14	True				
ANR	6605339	Label	case POWERPC_EXCP_603E :	249:8:4020:4042	6604890	15	True				
ANR	6605340	Identifier	POWERPC_EXCP_603E		6604890	0					
ANR	6605341	ExpressionStatement	"excp_model = ""PowerPC 603e"""	251:12:4057:4084	6604890	16	True				
ANR	6605342	AssignmentExpression	"excp_model = ""PowerPC 603e"""		6604890	0		=			
ANR	6605343	Identifier	excp_model		6604890	0					
ANR	6605344	PrimaryExpression	"""PowerPC 603e"""		6604890	1					
ANR	6605345	BreakStatement	break ;	253:12:4099:4104	6604890	17	True				
ANR	6605346	Label	case POWERPC_EXCP_604 :	255:8:4115:4136	6604890	18	True				
ANR	6605347	Identifier	POWERPC_EXCP_604		6604890	0					
ANR	6605348	ExpressionStatement	"excp_model = ""PowerPC 604"""	257:12:4151:4177	6604890	19	True				
ANR	6605349	AssignmentExpression	"excp_model = ""PowerPC 604"""		6604890	0		=			
ANR	6605350	Identifier	excp_model		6604890	0					
ANR	6605351	PrimaryExpression	"""PowerPC 604"""		6604890	1					
ANR	6605352	BreakStatement	break ;	259:12:4192:4197	6604890	20	True				
ANR	6605353	Label	case POWERPC_EXCP_7x0 :	261:8:4208:4229	6604890	21	True				
ANR	6605354	Identifier	POWERPC_EXCP_7x0		6604890	0					
ANR	6605355	ExpressionStatement	"excp_model = ""PowerPC 740/750"""	263:12:4244:4274	6604890	22	True				
ANR	6605356	AssignmentExpression	"excp_model = ""PowerPC 740/750"""		6604890	0		=			
ANR	6605357	Identifier	excp_model		6604890	0					
ANR	6605358	PrimaryExpression	"""PowerPC 740/750"""		6604890	1					
ANR	6605359	BreakStatement	break ;	265:12:4289:4294	6604890	23	True				
ANR	6605360	Label	case POWERPC_EXCP_7x5 :	267:8:4305:4326	6604890	24	True				
ANR	6605361	Identifier	POWERPC_EXCP_7x5		6604890	0					
ANR	6605362	ExpressionStatement	"excp_model = ""PowerPC 745/755"""	269:12:4341:4371	6604890	25	True				
ANR	6605363	AssignmentExpression	"excp_model = ""PowerPC 745/755"""		6604890	0		=			
ANR	6605364	Identifier	excp_model		6604890	0					
ANR	6605365	PrimaryExpression	"""PowerPC 745/755"""		6604890	1					
ANR	6605366	BreakStatement	break ;	271:12:4386:4391	6604890	26	True				
ANR	6605367	Label	case POWERPC_EXCP_74xx :	273:8:4402:4424	6604890	27	True				
ANR	6605368	Identifier	POWERPC_EXCP_74xx		6604890	0					
ANR	6605369	ExpressionStatement	"excp_model = ""PowerPC 74xx"""	275:12:4439:4466	6604890	28	True				
ANR	6605370	AssignmentExpression	"excp_model = ""PowerPC 74xx"""		6604890	0		=			
ANR	6605371	Identifier	excp_model		6604890	0					
ANR	6605372	PrimaryExpression	"""PowerPC 74xx"""		6604890	1					
ANR	6605373	BreakStatement	break ;	277:12:4481:4486	6604890	29	True				
ANR	6605374	Label	case POWERPC_EXCP_BOOKE :	279:8:4497:4520	6604890	30	True				
ANR	6605375	Identifier	POWERPC_EXCP_BOOKE		6604890	0					
ANR	6605376	ExpressionStatement	"excp_model = ""PowerPC BookE"""	281:12:4535:4563	6604890	31	True				
ANR	6605377	AssignmentExpression	"excp_model = ""PowerPC BookE"""		6604890	0		=			
ANR	6605378	Identifier	excp_model		6604890	0					
ANR	6605379	PrimaryExpression	"""PowerPC BookE"""		6604890	1					
ANR	6605380	BreakStatement	break ;	283:12:4578:4583	6604890	32	True				
ANR	6605381	Label	case POWERPC_EXCP_970 :	287:8:4622:4643	6604890	33	True				
ANR	6605382	Identifier	POWERPC_EXCP_970		6604890	0					
ANR	6605383	ExpressionStatement	"excp_model = ""PowerPC 970"""	289:12:4658:4684	6604890	34	True				
ANR	6605384	AssignmentExpression	"excp_model = ""PowerPC 970"""		6604890	0		=			
ANR	6605385	Identifier	excp_model		6604890	0					
ANR	6605386	PrimaryExpression	"""PowerPC 970"""		6604890	1					
ANR	6605387	BreakStatement	break ;	291:12:4699:4704	6604890	35	True				
ANR	6605388	Label	default :	295:8:4723:4730	6604890	36	True				
ANR	6605389	Identifier	default		6604890	0					
ANR	6605390	ExpressionStatement	"excp_model = ""Unknown or invalid"""	297:12:4745:4778	6604890	37	True				
ANR	6605391	AssignmentExpression	"excp_model = ""Unknown or invalid"""		6604890	0		=			
ANR	6605392	Identifier	excp_model		6604890	0					
ANR	6605393	PrimaryExpression	"""Unknown or invalid"""		6604890	1					
ANR	6605394	BreakStatement	break ;	299:12:4793:4798	6604890	38	True				
ANR	6605395	SwitchStatement	switch ( env -> bus_model )		6604890	4					
ANR	6605396	Condition	env -> bus_model	303:16:4828:4841	6604890	0	True				
ANR	6605397	PtrMemberAccess	env -> bus_model		6604890	0					
ANR	6605398	Identifier	env		6604890	0					
ANR	6605399	Identifier	bus_model		6604890	1					
ANR	6605400	CompoundStatement		301:32:4780:4780	6604890	1					
ANR	6605401	Label	case PPC_FLAGS_INPUT_6xx :	305:8:4855:4879	6604890	0	True				
ANR	6605402	Identifier	PPC_FLAGS_INPUT_6xx		6604890	0					
ANR	6605403	ExpressionStatement	"bus_model = ""PowerPC 6xx"""	307:12:4894:4919	6604890	1	True				
ANR	6605404	AssignmentExpression	"bus_model = ""PowerPC 6xx"""		6604890	0		=			
ANR	6605405	Identifier	bus_model		6604890	0					
ANR	6605406	PrimaryExpression	"""PowerPC 6xx"""		6604890	1					
ANR	6605407	BreakStatement	break ;	309:12:4934:4939	6604890	2	True				
ANR	6605408	Label	case PPC_FLAGS_INPUT_BookE :	311:8:4950:4976	6604890	3	True				
ANR	6605409	Identifier	PPC_FLAGS_INPUT_BookE		6604890	0					
ANR	6605410	ExpressionStatement	"bus_model = ""PowerPC BookE"""	313:12:4991:5018	6604890	4	True				
ANR	6605411	AssignmentExpression	"bus_model = ""PowerPC BookE"""		6604890	0		=			
ANR	6605412	Identifier	bus_model		6604890	0					
ANR	6605413	PrimaryExpression	"""PowerPC BookE"""		6604890	1					
ANR	6605414	BreakStatement	break ;	315:12:5033:5038	6604890	5	True				
ANR	6605415	Label	case PPC_FLAGS_INPUT_405 :	317:8:5049:5073	6604890	6	True				
ANR	6605416	Identifier	PPC_FLAGS_INPUT_405		6604890	0					
ANR	6605417	ExpressionStatement	"bus_model = ""PowerPC 405"""	319:12:5088:5113	6604890	7	True				
ANR	6605418	AssignmentExpression	"bus_model = ""PowerPC 405"""		6604890	0		=			
ANR	6605419	Identifier	bus_model		6604890	0					
ANR	6605420	PrimaryExpression	"""PowerPC 405"""		6604890	1					
ANR	6605421	BreakStatement	break ;	321:12:5128:5133	6604890	8	True				
ANR	6605422	Label	case PPC_FLAGS_INPUT_401 :	323:8:5144:5168	6604890	9	True				
ANR	6605423	Identifier	PPC_FLAGS_INPUT_401		6604890	0					
ANR	6605424	ExpressionStatement	"bus_model = ""PowerPC 401/403"""	325:12:5183:5212	6604890	10	True				
ANR	6605425	AssignmentExpression	"bus_model = ""PowerPC 401/403"""		6604890	0		=			
ANR	6605426	Identifier	bus_model		6604890	0					
ANR	6605427	PrimaryExpression	"""PowerPC 401/403"""		6604890	1					
ANR	6605428	BreakStatement	break ;	327:12:5227:5232	6604890	11	True				
ANR	6605429	Label	case PPC_FLAGS_INPUT_RCPU :	329:8:5243:5268	6604890	12	True				
ANR	6605430	Identifier	PPC_FLAGS_INPUT_RCPU		6604890	0					
ANR	6605431	ExpressionStatement	"bus_model = ""RCPU / MPC8xx"""	331:12:5283:5310	6604890	13	True				
ANR	6605432	AssignmentExpression	"bus_model = ""RCPU / MPC8xx"""		6604890	0		=			
ANR	6605433	Identifier	bus_model		6604890	0					
ANR	6605434	PrimaryExpression	"""RCPU / MPC8xx"""		6604890	1					
ANR	6605435	BreakStatement	break ;	333:12:5325:5330	6604890	14	True				
ANR	6605436	Label	case PPC_FLAGS_INPUT_970 :	337:8:5369:5393	6604890	15	True				
ANR	6605437	Identifier	PPC_FLAGS_INPUT_970		6604890	0					
ANR	6605438	ExpressionStatement	"bus_model = ""PowerPC 970"""	339:12:5408:5433	6604890	16	True				
ANR	6605439	AssignmentExpression	"bus_model = ""PowerPC 970"""		6604890	0		=			
ANR	6605440	Identifier	bus_model		6604890	0					
ANR	6605441	PrimaryExpression	"""PowerPC 970"""		6604890	1					
ANR	6605442	BreakStatement	break ;	341:12:5448:5453	6604890	17	True				
ANR	6605443	Label	default :	345:8:5472:5479	6604890	18	True				
ANR	6605444	Identifier	default		6604890	0					
ANR	6605445	ExpressionStatement	"bus_model = ""Unknown or invalid"""	347:12:5494:5526	6604890	19	True				
ANR	6605446	AssignmentExpression	"bus_model = ""Unknown or invalid"""		6604890	0		=			
ANR	6605447	Identifier	bus_model		6604890	0					
ANR	6605448	PrimaryExpression	"""Unknown or invalid"""		6604890	1					
ANR	6605449	BreakStatement	break ;	349:12:5541:5546	6604890	20	True				
ANR	6605450	Statement	printf	353:8:5568:5573	6604890	5	True				
ANR	6605451	Statement	(	353:14:5574:5574	6604890	6	True				
ANR	6605452	Statement	"""PowerPC %-12s : PVR %08x MSR %016"""	353:15:5575:5609	6604890	7	True				
ANR	6605453	Statement	PRIx64	353:51:5611:5616	6604890	8	True				
ANR	6605454	Statement	"""\\n"""	353:58:5618:5621	6604890	9	True				
ANR	6605455	Statement	"""    MMU model        : %s\\n"""	355:15:5639:5667	6604890	10	True				
ANR	6605456	Statement	","	355:44:5668:5668	6604890	11	True				
ANR	6605457	Statement	object_class_get_name	357:15:5686:5706	6604890	12	True				
ANR	6605458	Statement	(	357:36:5707:5707	6604890	13	True				
ANR	6605459	Statement	OBJECT_CLASS	357:37:5708:5719	6604890	14	True				
ANR	6605460	Statement	(	357:49:5720:5720	6604890	15	True				
ANR	6605461	Statement	pcc	357:50:5721:5723	6604890	16	True				
ANR	6605462	Statement	)	357:53:5724:5724	6604890	17	True				
ANR	6605463	Statement	)	357:54:5725:5725	6604890	18	True				
ANR	6605464	Statement	","	357:55:5726:5726	6604890	19	True				
ANR	6605465	Statement	pcc	359:15:5744:5746	6604890	20	True				
ANR	6605466	Statement	->	359:18:5747:5748	6604890	21	True				
ANR	6605467	Statement	pvr	359:20:5749:5751	6604890	22	True				
ANR	6605468	Statement	","	359:23:5752:5752	6604890	23	True				
ANR	6605469	Statement	pcc	359:25:5754:5756	6604890	24	True				
ANR	6605470	Statement	->	359:28:5757:5758	6604890	25	True				
ANR	6605471	Statement	msr_mask	359:30:5759:5766	6604890	26	True				
ANR	6605472	Statement	","	359:38:5767:5767	6604890	27	True				
ANR	6605473	Statement	mmu_model	359:40:5769:5777	6604890	28	True				
ANR	6605474	Statement	)	359:49:5778:5778	6604890	29	True				
ANR	6605475	ExpressionStatement		359:50:5779:5779	6604890	30	True				
ANR	6605476	IfStatement	if ( env -> tlb . tlb6 )		6604890	31					
ANR	6605477	Condition	env -> tlb . tlb6	363:12:5826:5838	6604890	0	True				
ANR	6605478	MemberAccess	env -> tlb . tlb6		6604890	0					
ANR	6605479	PtrMemberAccess	env -> tlb		6604890	0					
ANR	6605480	Identifier	env		6604890	0					
ANR	6605481	Identifier	tlb		6604890	1					
ANR	6605482	Identifier	tlb6		6604890	1					
ANR	6605483	CompoundStatement		361:27:5777:5777	6604890	1					
ANR	6605484	ExpressionStatement	"printf ( ""                       %d %s TLB in %d ways\\n"" , env -> nb_tlb , env -> id_tlbs ? ""splitted"" : ""merged"" , env -> nb_ways )"	365:12:5856:6016	6604890	0	True				
ANR	6605485	CallExpression	"printf ( ""                       %d %s TLB in %d ways\\n"" , env -> nb_tlb , env -> id_tlbs ? ""splitted"" : ""merged"" , env -> nb_ways )"		6604890	0					
ANR	6605486	Callee	printf		6604890	0					
ANR	6605487	Identifier	printf		6604890	0					
ANR	6605488	ArgumentList	"""                       %d %s TLB in %d ways\\n"""		6604890	1					
ANR	6605489	Argument	"""                       %d %s TLB in %d ways\\n"""		6604890	0					
ANR	6605490	PrimaryExpression	"""                       %d %s TLB in %d ways\\n"""		6604890	0					
ANR	6605491	Argument	env -> nb_tlb		6604890	1					
ANR	6605492	PtrMemberAccess	env -> nb_tlb		6604890	0					
ANR	6605493	Identifier	env		6604890	0					
ANR	6605494	Identifier	nb_tlb		6604890	1					
ANR	6605495	Argument	"env -> id_tlbs ? ""splitted"" : ""merged"""		6604890	2					
ANR	6605496	ConditionalExpression	"env -> id_tlbs ? ""splitted"" : ""merged"""		6604890	0					
ANR	6605497	Condition	env -> id_tlbs		6604890	0					
ANR	6605498	PtrMemberAccess	env -> id_tlbs		6604890	0					
ANR	6605499	Identifier	env		6604890	0					
ANR	6605500	Identifier	id_tlbs		6604890	1					
ANR	6605501	PrimaryExpression	"""splitted"""		6604890	1					
ANR	6605502	PrimaryExpression	"""merged"""		6604890	2					
ANR	6605503	Argument	env -> nb_ways		6604890	3					
ANR	6605504	PtrMemberAccess	env -> nb_ways		6604890	0					
ANR	6605505	Identifier	env		6604890	0					
ANR	6605506	Identifier	nb_ways		6604890	1					
ANR	6605507	Statement	printf	375:8:6046:6051	6604890	32	True				
ANR	6605508	Statement	(	375:14:6052:6052	6604890	33	True				
ANR	6605509	Statement	"""    Exceptions model : %s\\n"""	375:15:6053:6081	6604890	34	True				
ANR	6605510	Statement	"""    Bus model        : %s\\n"""	377:15:6099:6127	6604890	35	True				
ANR	6605511	Statement	","	377:44:6128:6128	6604890	36	True				
ANR	6605512	Statement	excp_model	379:15:6146:6155	6604890	37	True				
ANR	6605513	Statement	","	379:25:6156:6156	6604890	38	True				
ANR	6605514	Statement	bus_model	379:27:6158:6166	6604890	39	True				
ANR	6605515	Statement	)	379:36:6167:6167	6604890	40	True				
ANR	6605516	ExpressionStatement		379:37:6168:6168	6604890	41	True				
ANR	6605517	ExpressionStatement	"printf ( ""    MSR features     :\\n"" )"	381:8:6179:6213	6604890	42	True				
ANR	6605518	CallExpression	"printf ( ""    MSR features     :\\n"" )"		6604890	0					
ANR	6605519	Callee	printf		6604890	0					
ANR	6605520	Identifier	printf		6604890	0					
ANR	6605521	ArgumentList	"""    MSR features     :\\n"""		6604890	1					
ANR	6605522	Argument	"""    MSR features     :\\n"""		6604890	0					
ANR	6605523	PrimaryExpression	"""    MSR features     :\\n"""		6604890	0					
ANR	6605524	IfStatement	if ( env -> flags & POWERPC_FLAG_SPE )		6604890	43					
ANR	6605525	Condition	env -> flags & POWERPC_FLAG_SPE	383:12:6228:6256	6604890	0	True				
ANR	6605526	BitAndExpression	env -> flags & POWERPC_FLAG_SPE		6604890	0		&			
ANR	6605527	PtrMemberAccess	env -> flags		6604890	0					
ANR	6605528	Identifier	env		6604890	0					
ANR	6605529	Identifier	flags		6604890	1					
ANR	6605530	Identifier	POWERPC_FLAG_SPE		6604890	1					
ANR	6605531	Statement	printf	385:12:6272:6277	6604890	1	True				
ANR	6605532	ElseStatement	else		6604890	0					
ANR	6605533	IfStatement	if ( env -> flags & POWERPC_FLAG_VRE )		6604890	0					
ANR	6605534	Condition	env -> flags & POWERPC_FLAG_VRE	389:17:6382:6410	6604890	0	True				
ANR	6605535	BitAndExpression	env -> flags & POWERPC_FLAG_VRE		6604890	0		&			
ANR	6605536	PtrMemberAccess	env -> flags		6604890	0					
ANR	6605537	Identifier	env		6604890	0					
ANR	6605538	Identifier	flags		6604890	1					
ANR	6605539	Identifier	POWERPC_FLAG_VRE		6604890	1					
ANR	6605540	ExpressionStatement	"printf ( ""                        vector processor enable\\n"" )"	391:12:6426:6485	6604890	1	True				
ANR	6605541	CallExpression	"printf ( ""                        vector processor enable\\n"" )"		6604890	0					
ANR	6605542	Callee	printf		6604890	0					
ANR	6605543	Identifier	printf		6604890	0					
ANR	6605544	ArgumentList	"""                        vector processor enable\\n"""		6604890	1					
ANR	6605545	Argument	"""                        vector processor enable\\n"""		6604890	0					
ANR	6605546	PrimaryExpression	"""                        vector processor enable\\n"""		6604890	0					
ANR	6605547	Statement	(	385:18:6278:6278	6604890	44	True				
ANR	6605548	Statement	"""                        signal processing engine enable"""	385:19:6279:6335	6604890	45	True				
ANR	6605549	Statement	"""\\n"""	387:19:6357:6360	6604890	46	True				
ANR	6605550	Statement	)	387:23:6361:6361	6604890	47	True				
ANR	6605551	ExpressionStatement		387:24:6362:6362	6604890	48	True				
ANR	6605552	IfStatement	if ( env -> flags & POWERPC_FLAG_TGPR )		6604890	49					
ANR	6605553	Condition	env -> flags & POWERPC_FLAG_TGPR	393:12:6500:6529	6604890	0	True				
ANR	6605554	BitAndExpression	env -> flags & POWERPC_FLAG_TGPR		6604890	0		&			
ANR	6605555	PtrMemberAccess	env -> flags		6604890	0					
ANR	6605556	Identifier	env		6604890	0					
ANR	6605557	Identifier	flags		6604890	1					
ANR	6605558	Identifier	POWERPC_FLAG_TGPR		6604890	1					
ANR	6605559	ExpressionStatement	"printf ( ""                        temporary GPRs\\n"" )"	395:12:6545:6595	6604890	1	True				
ANR	6605560	CallExpression	"printf ( ""                        temporary GPRs\\n"" )"		6604890	0					
ANR	6605561	Callee	printf		6604890	0					
ANR	6605562	Identifier	printf		6604890	0					
ANR	6605563	ArgumentList	"""                        temporary GPRs\\n"""		6604890	1					
ANR	6605564	Argument	"""                        temporary GPRs\\n"""		6604890	0					
ANR	6605565	PrimaryExpression	"""                        temporary GPRs\\n"""		6604890	0					
ANR	6605566	ElseStatement	else		6604890	0					
ANR	6605567	IfStatement	if ( env -> flags & POWERPC_FLAG_CE )		6604890	0					
ANR	6605568	Condition	env -> flags & POWERPC_FLAG_CE	397:17:6615:6642	6604890	0	True				
ANR	6605569	BitAndExpression	env -> flags & POWERPC_FLAG_CE		6604890	0		&			
ANR	6605570	PtrMemberAccess	env -> flags		6604890	0					
ANR	6605571	Identifier	env		6604890	0					
ANR	6605572	Identifier	flags		6604890	1					
ANR	6605573	Identifier	POWERPC_FLAG_CE		6604890	1					
ANR	6605574	ExpressionStatement	"printf ( ""                        critical input enable\\n"" )"	399:12:6658:6715	6604890	1	True				
ANR	6605575	CallExpression	"printf ( ""                        critical input enable\\n"" )"		6604890	0					
ANR	6605576	Callee	printf		6604890	0					
ANR	6605577	Identifier	printf		6604890	0					
ANR	6605578	ArgumentList	"""                        critical input enable\\n"""		6604890	1					
ANR	6605579	Argument	"""                        critical input enable\\n"""		6604890	0					
ANR	6605580	PrimaryExpression	"""                        critical input enable\\n"""		6604890	0					
ANR	6605581	IfStatement	if ( env -> flags & POWERPC_FLAG_SE )		6604890	50					
ANR	6605582	Condition	env -> flags & POWERPC_FLAG_SE	401:12:6730:6757	6604890	0	True				
ANR	6605583	BitAndExpression	env -> flags & POWERPC_FLAG_SE		6604890	0		&			
ANR	6605584	PtrMemberAccess	env -> flags		6604890	0					
ANR	6605585	Identifier	env		6604890	0					
ANR	6605586	Identifier	flags		6604890	1					
ANR	6605587	Identifier	POWERPC_FLAG_SE		6604890	1					
ANR	6605588	ExpressionStatement	"printf ( ""                        single-step trace mode\\n"" )"	403:12:6773:6831	6604890	1	True				
ANR	6605589	CallExpression	"printf ( ""                        single-step trace mode\\n"" )"		6604890	0					
ANR	6605590	Callee	printf		6604890	0					
ANR	6605591	Identifier	printf		6604890	0					
ANR	6605592	ArgumentList	"""                        single-step trace mode\\n"""		6604890	1					
ANR	6605593	Argument	"""                        single-step trace mode\\n"""		6604890	0					
ANR	6605594	PrimaryExpression	"""                        single-step trace mode\\n"""		6604890	0					
ANR	6605595	ElseStatement	else		6604890	0					
ANR	6605596	IfStatement	if ( env -> flags & POWERPC_FLAG_DWE )		6604890	0					
ANR	6605597	Condition	env -> flags & POWERPC_FLAG_DWE	405:17:6851:6879	6604890	0	True				
ANR	6605598	BitAndExpression	env -> flags & POWERPC_FLAG_DWE		6604890	0		&			
ANR	6605599	PtrMemberAccess	env -> flags		6604890	0					
ANR	6605600	Identifier	env		6604890	0					
ANR	6605601	Identifier	flags		6604890	1					
ANR	6605602	Identifier	POWERPC_FLAG_DWE		6604890	1					
ANR	6605603	ExpressionStatement	"printf ( ""                        debug wait enable\\n"" )"	407:12:6895:6948	6604890	1	True				
ANR	6605604	CallExpression	"printf ( ""                        debug wait enable\\n"" )"		6604890	0					
ANR	6605605	Callee	printf		6604890	0					
ANR	6605606	Identifier	printf		6604890	0					
ANR	6605607	ArgumentList	"""                        debug wait enable\\n"""		6604890	1					
ANR	6605608	Argument	"""                        debug wait enable\\n"""		6604890	0					
ANR	6605609	PrimaryExpression	"""                        debug wait enable\\n"""		6604890	0					
ANR	6605610	ElseStatement	else		6604890	0					
ANR	6605611	IfStatement	if ( env -> flags & POWERPC_FLAG_UBLE )		6604890	0					
ANR	6605612	Condition	env -> flags & POWERPC_FLAG_UBLE	409:17:6968:6997	6604890	0	True				
ANR	6605613	BitAndExpression	env -> flags & POWERPC_FLAG_UBLE		6604890	0		&			
ANR	6605614	PtrMemberAccess	env -> flags		6604890	0					
ANR	6605615	Identifier	env		6604890	0					
ANR	6605616	Identifier	flags		6604890	1					
ANR	6605617	Identifier	POWERPC_FLAG_UBLE		6604890	1					
ANR	6605618	ExpressionStatement	"printf ( ""                        user BTB lock enable\\n"" )"	411:12:7013:7069	6604890	1	True				
ANR	6605619	CallExpression	"printf ( ""                        user BTB lock enable\\n"" )"		6604890	0					
ANR	6605620	Callee	printf		6604890	0					
ANR	6605621	Identifier	printf		6604890	0					
ANR	6605622	ArgumentList	"""                        user BTB lock enable\\n"""		6604890	1					
ANR	6605623	Argument	"""                        user BTB lock enable\\n"""		6604890	0					
ANR	6605624	PrimaryExpression	"""                        user BTB lock enable\\n"""		6604890	0					
ANR	6605625	IfStatement	if ( env -> flags & POWERPC_FLAG_BE )		6604890	51					
ANR	6605626	Condition	env -> flags & POWERPC_FLAG_BE	413:12:7084:7111	6604890	0	True				
ANR	6605627	BitAndExpression	env -> flags & POWERPC_FLAG_BE		6604890	0		&			
ANR	6605628	PtrMemberAccess	env -> flags		6604890	0					
ANR	6605629	Identifier	env		6604890	0					
ANR	6605630	Identifier	flags		6604890	1					
ANR	6605631	Identifier	POWERPC_FLAG_BE		6604890	1					
ANR	6605632	ExpressionStatement	"printf ( ""                        branch-step trace mode\\n"" )"	415:12:7127:7185	6604890	1	True				
ANR	6605633	CallExpression	"printf ( ""                        branch-step trace mode\\n"" )"		6604890	0					
ANR	6605634	Callee	printf		6604890	0					
ANR	6605635	Identifier	printf		6604890	0					
ANR	6605636	ArgumentList	"""                        branch-step trace mode\\n"""		6604890	1					
ANR	6605637	Argument	"""                        branch-step trace mode\\n"""		6604890	0					
ANR	6605638	PrimaryExpression	"""                        branch-step trace mode\\n"""		6604890	0					
ANR	6605639	ElseStatement	else		6604890	0					
ANR	6605640	IfStatement	if ( env -> flags & POWERPC_FLAG_DE )		6604890	0					
ANR	6605641	Condition	env -> flags & POWERPC_FLAG_DE	417:17:7205:7232	6604890	0	True				
ANR	6605642	BitAndExpression	env -> flags & POWERPC_FLAG_DE		6604890	0		&			
ANR	6605643	PtrMemberAccess	env -> flags		6604890	0					
ANR	6605644	Identifier	env		6604890	0					
ANR	6605645	Identifier	flags		6604890	1					
ANR	6605646	Identifier	POWERPC_FLAG_DE		6604890	1					
ANR	6605647	ExpressionStatement	"printf ( ""                        debug interrupt enable\\n"" )"	419:12:7248:7306	6604890	1	True				
ANR	6605648	CallExpression	"printf ( ""                        debug interrupt enable\\n"" )"		6604890	0					
ANR	6605649	Callee	printf		6604890	0					
ANR	6605650	Identifier	printf		6604890	0					
ANR	6605651	ArgumentList	"""                        debug interrupt enable\\n"""		6604890	1					
ANR	6605652	Argument	"""                        debug interrupt enable\\n"""		6604890	0					
ANR	6605653	PrimaryExpression	"""                        debug interrupt enable\\n"""		6604890	0					
ANR	6605654	IfStatement	if ( env -> flags & POWERPC_FLAG_PX )		6604890	52					
ANR	6605655	Condition	env -> flags & POWERPC_FLAG_PX	421:12:7321:7348	6604890	0	True				
ANR	6605656	BitAndExpression	env -> flags & POWERPC_FLAG_PX		6604890	0		&			
ANR	6605657	PtrMemberAccess	env -> flags		6604890	0					
ANR	6605658	Identifier	env		6604890	0					
ANR	6605659	Identifier	flags		6604890	1					
ANR	6605660	Identifier	POWERPC_FLAG_PX		6604890	1					
ANR	6605661	ExpressionStatement	"printf ( ""                        inclusive protection\\n"" )"	423:12:7364:7420	6604890	1	True				
ANR	6605662	CallExpression	"printf ( ""                        inclusive protection\\n"" )"		6604890	0					
ANR	6605663	Callee	printf		6604890	0					
ANR	6605664	Identifier	printf		6604890	0					
ANR	6605665	ArgumentList	"""                        inclusive protection\\n"""		6604890	1					
ANR	6605666	Argument	"""                        inclusive protection\\n"""		6604890	0					
ANR	6605667	PrimaryExpression	"""                        inclusive protection\\n"""		6604890	0					
ANR	6605668	ElseStatement	else		6604890	0					
ANR	6605669	IfStatement	if ( env -> flags & POWERPC_FLAG_PMM )		6604890	0					
ANR	6605670	Condition	env -> flags & POWERPC_FLAG_PMM	425:17:7440:7468	6604890	0	True				
ANR	6605671	BitAndExpression	env -> flags & POWERPC_FLAG_PMM		6604890	0		&			
ANR	6605672	PtrMemberAccess	env -> flags		6604890	0					
ANR	6605673	Identifier	env		6604890	0					
ANR	6605674	Identifier	flags		6604890	1					
ANR	6605675	Identifier	POWERPC_FLAG_PMM		6604890	1					
ANR	6605676	ExpressionStatement	"printf ( ""                        performance monitor mark\\n"" )"	427:12:7484:7544	6604890	1	True				
ANR	6605677	CallExpression	"printf ( ""                        performance monitor mark\\n"" )"		6604890	0					
ANR	6605678	Callee	printf		6604890	0					
ANR	6605679	Identifier	printf		6604890	0					
ANR	6605680	ArgumentList	"""                        performance monitor mark\\n"""		6604890	1					
ANR	6605681	Argument	"""                        performance monitor mark\\n"""		6604890	0					
ANR	6605682	PrimaryExpression	"""                        performance monitor mark\\n"""		6604890	0					
ANR	6605683	IfStatement	if ( env -> flags == POWERPC_FLAG_NONE )		6604890	53					
ANR	6605684	Condition	env -> flags == POWERPC_FLAG_NONE	429:12:7559:7589	6604890	0	True				
ANR	6605685	EqualityExpression	env -> flags == POWERPC_FLAG_NONE		6604890	0		==			
ANR	6605686	PtrMemberAccess	env -> flags		6604890	0					
ANR	6605687	Identifier	env		6604890	0					
ANR	6605688	Identifier	flags		6604890	1					
ANR	6605689	Identifier	POWERPC_FLAG_NONE		6604890	1					
ANR	6605690	ExpressionStatement	"printf ( ""                        none\\n"" )"	431:12:7605:7645	6604890	1	True				
ANR	6605691	CallExpression	"printf ( ""                        none\\n"" )"		6604890	0					
ANR	6605692	Callee	printf		6604890	0					
ANR	6605693	Identifier	printf		6604890	0					
ANR	6605694	ArgumentList	"""                        none\\n"""		6604890	1					
ANR	6605695	Argument	"""                        none\\n"""		6604890	0					
ANR	6605696	PrimaryExpression	"""                        none\\n"""		6604890	0					
ANR	6605697	ExpressionStatement	"printf ( ""    Time-base/decrementer clock source: %s\\n"" , env -> flags & POWERPC_FLAG_RTC_CLK ? ""RTC clock"" : ""bus clock"" )"	433:8:7656:7789	6604890	54	True				
ANR	6605698	CallExpression	"printf ( ""    Time-base/decrementer clock source: %s\\n"" , env -> flags & POWERPC_FLAG_RTC_CLK ? ""RTC clock"" : ""bus clock"" )"		6604890	0					
ANR	6605699	Callee	printf		6604890	0					
ANR	6605700	Identifier	printf		6604890	0					
ANR	6605701	ArgumentList	"""    Time-base/decrementer clock source: %s\\n"""		6604890	1					
ANR	6605702	Argument	"""    Time-base/decrementer clock source: %s\\n"""		6604890	0					
ANR	6605703	PrimaryExpression	"""    Time-base/decrementer clock source: %s\\n"""		6604890	0					
ANR	6605704	Argument	"env -> flags & POWERPC_FLAG_RTC_CLK ? ""RTC clock"" : ""bus clock"""		6604890	1					
ANR	6605705	ConditionalExpression	"env -> flags & POWERPC_FLAG_RTC_CLK ? ""RTC clock"" : ""bus clock"""		6604890	0					
ANR	6605706	Condition	env -> flags & POWERPC_FLAG_RTC_CLK		6604890	0					
ANR	6605707	BitAndExpression	env -> flags & POWERPC_FLAG_RTC_CLK		6604890	0		&			
ANR	6605708	PtrMemberAccess	env -> flags		6604890	0					
ANR	6605709	Identifier	env		6604890	0					
ANR	6605710	Identifier	flags		6604890	1					
ANR	6605711	Identifier	POWERPC_FLAG_RTC_CLK		6604890	1					
ANR	6605712	PrimaryExpression	"""RTC clock"""		6604890	1					
ANR	6605713	PrimaryExpression	"""bus clock"""		6604890	2					
ANR	6605714	ExpressionStatement	dump_ppc_insns ( env )	437:8:7800:7819	6604890	55	True				
ANR	6605715	CallExpression	dump_ppc_insns ( env )		6604890	0					
ANR	6605716	Callee	dump_ppc_insns		6604890	0					
ANR	6605717	Identifier	dump_ppc_insns		6604890	0					
ANR	6605718	ArgumentList	env		6604890	1					
ANR	6605719	Argument	env		6604890	0					
ANR	6605720	Identifier	env		6604890	0					
ANR	6605721	ExpressionStatement	dump_ppc_sprs ( env )	439:8:7830:7848	6604890	56	True				
ANR	6605722	CallExpression	dump_ppc_sprs ( env )		6604890	0					
ANR	6605723	Callee	dump_ppc_sprs		6604890	0					
ANR	6605724	Identifier	dump_ppc_sprs		6604890	0					
ANR	6605725	ArgumentList	env		6604890	1					
ANR	6605726	Argument	env		6604890	0					
ANR	6605727	Identifier	env		6604890	0					
ANR	6605728	ExpressionStatement	fflush ( stdout )	441:8:7859:7873	6604890	57	True				
ANR	6605729	CallExpression	fflush ( stdout )		6604890	0					
ANR	6605730	Callee	fflush		6604890	0					
ANR	6605731	Identifier	fflush		6604890	0					
ANR	6605732	ArgumentList	stdout		6604890	1					
ANR	6605733	Argument	stdout		6604890	0					
ANR	6605734	Identifier	stdout		6604890	0					
ANR	6605735	ReturnType	static void		6604890	1					
ANR	6605736	Identifier	ppc_cpu_realizefn		6604890	2					
ANR	6605737	ParameterList	"DeviceState * dev , Error * * errp"		6604890	3					
ANR	6605738	Parameter	DeviceState * dev	1:30:30:45	6604890	0	True				
ANR	6605739	ParameterType	DeviceState *		6604890	0					
ANR	6605740	Identifier	dev		6604890	1					
ANR	6605741	Parameter	Error * * errp	1:48:48:59	6604890	1	True				
ANR	6605742	ParameterType	Error * *		6604890	0					
ANR	6605743	Identifier	errp		6604890	1					
ANR	6605744	CFGEntryNode	ENTRY		6604890		True				
ANR	6605745	CFGExitNode	EXIT		6604890		True				
ANR	6605746	Symbol	smp_threads		6604890						
ANR	6605747	Symbol	errp		6604890						
ANR	6605748	Symbol	stdout		6604890						
ANR	6605749	Symbol	env -> nb_tlb		6604890						
ANR	6605750	Symbol	POWERPC_FLAG_PMM		6604890						
ANR	6605751	Symbol	gdb_set_spe_reg		6604890						
ANR	6605752	Symbol	CPU		6604890						
ANR	6605753	Symbol	kvmppc_fixup_cpu		6604890						
ANR	6605754	Symbol	kvmppc_smt_threads		6604890						
ANR	6605755	Symbol	dev		6604890						
ANR	6605756	Symbol	gdb_get_float_reg		6604890						
ANR	6605757	Symbol	POWERPC_FLAG_CE		6604890						
ANR	6605758	Symbol	POWERPC_FLAG_VRE		6604890						
ANR	6605759	Symbol	POWERPC_FLAG_SPE		6604890						
ANR	6605760	Symbol	NULL		6604890						
ANR	6605761	Symbol	pcc -> insns_flags		6604890						
ANR	6605762	Symbol	excp_model		6604890						
ANR	6605763	Symbol	* env		6604890						
ANR	6605764	Symbol	cpu		6604890						
ANR	6605765	Symbol	max_smt		6604890						
ANR	6605766	Symbol	env -> mmu_model		6604890						
ANR	6605767	Symbol	gdb_get_spe_reg		6604890						
ANR	6605768	Symbol	POWERPC_FLAG_SE		6604890						
ANR	6605769	Symbol	env -> flags		6604890						
ANR	6605770	Symbol	env -> nb_ways		6604890						
ANR	6605771	Symbol	mmu_model		6604890						
ANR	6605772	Symbol	gdb_get_avr_reg		6604890						
ANR	6605773	Symbol	env -> excp_model		6604890						
ANR	6605774	Symbol	env -> tlb		6604890						
ANR	6605775	Symbol	* pcc		6604890						
ANR	6605776	Symbol	ppc_fixup_cpu		6604890						
ANR	6605777	Symbol	POWERPC_FLAG_BE		6604890						
ANR	6605778	Symbol	local_err		6604890						
ANR	6605779	Symbol	ppc_cpu_is_valid		6604890						
ANR	6605780	Symbol	POWERPC_FLAG_UBLE		6604890						
ANR	6605781	Symbol	POWERPC_FLAG_NONE		6604890						
ANR	6605782	Symbol	pcc		6604890						
ANR	6605783	Symbol	POWERPC_CPU		6604890						
ANR	6605784	Symbol	PPC_ALTIVEC		6604890						
ANR	6605785	Symbol	POWERPC_FLAG_TGPR		6604890						
ANR	6605786	Symbol	kvm_enabled		6604890						
ANR	6605787	Symbol	& local_err		6604890						
ANR	6605788	Symbol	gdb_set_float_reg		6604890						
ANR	6605789	Symbol	env -> bus_model		6604890						
ANR	6605790	Symbol	env -> tlb . tlb6		6604890						
ANR	6605791	Symbol	PPC_FLOAT		6604890						
ANR	6605792	Symbol	PPC_SPE		6604890						
ANR	6605793	Symbol	POWERPC_FLAG_DWE		6604890						
ANR	6605794	Symbol	POWERPC_FLAG_PX		6604890						
ANR	6605795	Symbol	POWERPC_CPU_GET_CLASS		6604890						
ANR	6605796	Symbol	gdb_set_avr_reg		6604890						
ANR	6605797	Symbol	env		6604890						
ANR	6605798	Symbol	POWERPC_FLAG_RTC_CLK		6604890						
ANR	6605799	Symbol	cs		6604890						
ANR	6605800	Symbol	& cpu -> env		6604890						
ANR	6605801	Symbol	bus_model		6604890						
ANR	6605802	Symbol	tcg_enabled		6604890						
ANR	6605803	Symbol	env -> id_tlbs		6604890						
ANR	6605804	Symbol	POWERPC_FLAG_DE		6604890						
