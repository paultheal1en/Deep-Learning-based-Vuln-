command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6990074	File	/home/p4ultr4n/workplace/ReVeal/raw_code/qemu_gluster_parse_uri_0.c								
ANR	6990075	Function	qemu_gluster_parse_uri	1:0:0:2053							
ANR	6990076	FunctionDef	"qemu_gluster_parse_uri (BlockdevOptionsGluster * gconf , const char * filename)"		6990075	0					
ANR	6990077	CompoundStatement		5:0:123:2053	6990075	0					
ANR	6990078	IdentifierDeclStatement	SocketAddress * gsconf ;	7:4:130:151	6990075	0	True				
ANR	6990079	IdentifierDecl	* gsconf		6990075	0					
ANR	6990080	IdentifierDeclType	SocketAddress *		6990075	0					
ANR	6990081	Identifier	gsconf		6990075	1					
ANR	6990082	IdentifierDeclStatement	URI * uri ;	9:4:158:166	6990075	1	True				
ANR	6990083	IdentifierDecl	* uri		6990075	0					
ANR	6990084	IdentifierDeclType	URI *		6990075	0					
ANR	6990085	Identifier	uri		6990075	1					
ANR	6990086	IdentifierDeclStatement	QueryParams * qp = NULL ;	11:4:173:195	6990075	2	True				
ANR	6990087	IdentifierDecl	* qp = NULL		6990075	0					
ANR	6990088	IdentifierDeclType	QueryParams *		6990075	0					
ANR	6990089	Identifier	qp		6990075	1					
ANR	6990090	AssignmentExpression	* qp = NULL		6990075	2		=			
ANR	6990091	Identifier	NULL		6990075	0					
ANR	6990092	Identifier	NULL		6990075	1					
ANR	6990093	IdentifierDeclStatement	bool is_unix = false ;	13:4:202:222	6990075	3	True				
ANR	6990094	IdentifierDecl	is_unix = false		6990075	0					
ANR	6990095	IdentifierDeclType	bool		6990075	0					
ANR	6990096	Identifier	is_unix		6990075	1					
ANR	6990097	AssignmentExpression	is_unix = false		6990075	2		=			
ANR	6990098	Identifier	false		6990075	0					
ANR	6990099	Identifier	false		6990075	1					
ANR	6990100	IdentifierDeclStatement	int ret = 0 ;	15:4:229:240	6990075	4	True				
ANR	6990101	IdentifierDecl	ret = 0		6990075	0					
ANR	6990102	IdentifierDeclType	int		6990075	0					
ANR	6990103	Identifier	ret		6990075	1					
ANR	6990104	AssignmentExpression	ret = 0		6990075	2		=			
ANR	6990105	Identifier	ret		6990075	0					
ANR	6990106	PrimaryExpression	0		6990075	1					
ANR	6990107	ExpressionStatement	uri = uri_parse ( filename )	19:4:249:274	6990075	5	True				
ANR	6990108	AssignmentExpression	uri = uri_parse ( filename )		6990075	0		=			
ANR	6990109	Identifier	uri		6990075	0					
ANR	6990110	CallExpression	uri_parse ( filename )		6990075	1					
ANR	6990111	Callee	uri_parse		6990075	0					
ANR	6990112	Identifier	uri_parse		6990075	0					
ANR	6990113	ArgumentList	filename		6990075	1					
ANR	6990114	Argument	filename		6990075	0					
ANR	6990115	Identifier	filename		6990075	0					
ANR	6990116	IfStatement	if ( ! uri )		6990075	6					
ANR	6990117	Condition	! uri	21:8:285:288	6990075	0	True				
ANR	6990118	UnaryOperationExpression	! uri		6990075	0					
ANR	6990119	UnaryOperator	!		6990075	0					
ANR	6990120	Identifier	uri		6990075	1					
ANR	6990121	CompoundStatement		17:14:167:167	6990075	1					
ANR	6990122	ReturnStatement	return - EINVAL ;	23:8:302:316	6990075	0	True				
ANR	6990123	UnaryOperationExpression	- EINVAL		6990075	0					
ANR	6990124	UnaryOperator	-		6990075	0					
ANR	6990125	Identifier	EINVAL		6990075	1					
ANR	6990126	ExpressionStatement	"gconf -> server = g_new0 ( SocketAddressList , 1 )"	29:4:332:376	6990075	7	True				
ANR	6990127	AssignmentExpression	"gconf -> server = g_new0 ( SocketAddressList , 1 )"		6990075	0		=			
ANR	6990128	PtrMemberAccess	gconf -> server		6990075	0					
ANR	6990129	Identifier	gconf		6990075	0					
ANR	6990130	Identifier	server		6990075	1					
ANR	6990131	CallExpression	"g_new0 ( SocketAddressList , 1 )"		6990075	1					
ANR	6990132	Callee	g_new0		6990075	0					
ANR	6990133	Identifier	g_new0		6990075	0					
ANR	6990134	ArgumentList	SocketAddressList		6990075	1					
ANR	6990135	Argument	SocketAddressList		6990075	0					
ANR	6990136	Identifier	SocketAddressList		6990075	0					
ANR	6990137	Argument	1		6990075	1					
ANR	6990138	PrimaryExpression	1		6990075	0					
ANR	6990139	ExpressionStatement	"gconf -> server -> value = gsconf = g_new0 ( SocketAddress , 1 )"	31:4:383:439	6990075	8	True				
ANR	6990140	AssignmentExpression	"gconf -> server -> value = gsconf = g_new0 ( SocketAddress , 1 )"		6990075	0		=			
ANR	6990141	PtrMemberAccess	gconf -> server -> value		6990075	0					
ANR	6990142	PtrMemberAccess	gconf -> server		6990075	0					
ANR	6990143	Identifier	gconf		6990075	0					
ANR	6990144	Identifier	server		6990075	1					
ANR	6990145	Identifier	value		6990075	1					
ANR	6990146	AssignmentExpression	"gsconf = g_new0 ( SocketAddress , 1 )"		6990075	1		=			
ANR	6990147	Identifier	gsconf		6990075	0					
ANR	6990148	CallExpression	"g_new0 ( SocketAddress , 1 )"		6990075	1					
ANR	6990149	Callee	g_new0		6990075	0					
ANR	6990150	Identifier	g_new0		6990075	0					
ANR	6990151	ArgumentList	SocketAddress		6990075	1					
ANR	6990152	Argument	SocketAddress		6990075	0					
ANR	6990153	Identifier	SocketAddress		6990075	0					
ANR	6990154	Argument	1		6990075	1					
ANR	6990155	PrimaryExpression	1		6990075	0					
ANR	6990156	IfStatement	"if ( ! uri -> scheme || ! strcmp ( uri -> scheme , ""gluster"" ) )"		6990075	9					
ANR	6990157	Condition	"! uri -> scheme || ! strcmp ( uri -> scheme , ""gluster"" )"	37:8:473:519	6990075	0	True				
ANR	6990158	OrExpression	"! uri -> scheme || ! strcmp ( uri -> scheme , ""gluster"" )"		6990075	0		||			
ANR	6990159	UnaryOperationExpression	! uri -> scheme		6990075	0					
ANR	6990160	UnaryOperator	!		6990075	0					
ANR	6990161	PtrMemberAccess	uri -> scheme		6990075	1					
ANR	6990162	Identifier	uri		6990075	0					
ANR	6990163	Identifier	scheme		6990075	1					
ANR	6990164	UnaryOperationExpression	"! strcmp ( uri -> scheme , ""gluster"" )"		6990075	1					
ANR	6990165	UnaryOperator	!		6990075	0					
ANR	6990166	CallExpression	"strcmp ( uri -> scheme , ""gluster"" )"		6990075	1					
ANR	6990167	Callee	strcmp		6990075	0					
ANR	6990168	Identifier	strcmp		6990075	0					
ANR	6990169	ArgumentList	uri -> scheme		6990075	1					
ANR	6990170	Argument	uri -> scheme		6990075	0					
ANR	6990171	PtrMemberAccess	uri -> scheme		6990075	0					
ANR	6990172	Identifier	uri		6990075	0					
ANR	6990173	Identifier	scheme		6990075	1					
ANR	6990174	Argument	"""gluster"""		6990075	1					
ANR	6990175	PrimaryExpression	"""gluster"""		6990075	0					
ANR	6990176	CompoundStatement		33:57:398:398	6990075	1					
ANR	6990177	ExpressionStatement	gsconf -> type = SOCKET_ADDRESS_TYPE_INET	39:8:533:572	6990075	0	True				
ANR	6990178	AssignmentExpression	gsconf -> type = SOCKET_ADDRESS_TYPE_INET		6990075	0		=			
ANR	6990179	PtrMemberAccess	gsconf -> type		6990075	0					
ANR	6990180	Identifier	gsconf		6990075	0					
ANR	6990181	Identifier	type		6990075	1					
ANR	6990182	Identifier	SOCKET_ADDRESS_TYPE_INET		6990075	1					
ANR	6990183	ElseStatement	else		6990075	0					
ANR	6990184	IfStatement	"if ( ! strcmp ( uri -> scheme , ""gluster+tcp"" ) )"		6990075	0					
ANR	6990185	Condition	"! strcmp ( uri -> scheme , ""gluster+tcp"" )"	41:15:590:624	6990075	0	True				
ANR	6990186	UnaryOperationExpression	"! strcmp ( uri -> scheme , ""gluster+tcp"" )"		6990075	0					
ANR	6990187	UnaryOperator	!		6990075	0					
ANR	6990188	CallExpression	"strcmp ( uri -> scheme , ""gluster+tcp"" )"		6990075	1					
ANR	6990189	Callee	strcmp		6990075	0					
ANR	6990190	Identifier	strcmp		6990075	0					
ANR	6990191	ArgumentList	uri -> scheme		6990075	1					
ANR	6990192	Argument	uri -> scheme		6990075	0					
ANR	6990193	PtrMemberAccess	uri -> scheme		6990075	0					
ANR	6990194	Identifier	uri		6990075	0					
ANR	6990195	Identifier	scheme		6990075	1					
ANR	6990196	Argument	"""gluster+tcp"""		6990075	1					
ANR	6990197	PrimaryExpression	"""gluster+tcp"""		6990075	0					
ANR	6990198	CompoundStatement		37:52:503:503	6990075	1					
ANR	6990199	ExpressionStatement	gsconf -> type = SOCKET_ADDRESS_TYPE_INET	43:8:638:677	6990075	0	True				
ANR	6990200	AssignmentExpression	gsconf -> type = SOCKET_ADDRESS_TYPE_INET		6990075	0		=			
ANR	6990201	PtrMemberAccess	gsconf -> type		6990075	0					
ANR	6990202	Identifier	gsconf		6990075	0					
ANR	6990203	Identifier	type		6990075	1					
ANR	6990204	Identifier	SOCKET_ADDRESS_TYPE_INET		6990075	1					
ANR	6990205	ElseStatement	else		6990075	0					
ANR	6990206	IfStatement	"if ( ! strcmp ( uri -> scheme , ""gluster+unix"" ) )"		6990075	0					
ANR	6990207	Condition	"! strcmp ( uri -> scheme , ""gluster+unix"" )"	45:15:695:730	6990075	0	True				
ANR	6990208	UnaryOperationExpression	"! strcmp ( uri -> scheme , ""gluster+unix"" )"		6990075	0					
ANR	6990209	UnaryOperator	!		6990075	0					
ANR	6990210	CallExpression	"strcmp ( uri -> scheme , ""gluster+unix"" )"		6990075	1					
ANR	6990211	Callee	strcmp		6990075	0					
ANR	6990212	Identifier	strcmp		6990075	0					
ANR	6990213	ArgumentList	uri -> scheme		6990075	1					
ANR	6990214	Argument	uri -> scheme		6990075	0					
ANR	6990215	PtrMemberAccess	uri -> scheme		6990075	0					
ANR	6990216	Identifier	uri		6990075	0					
ANR	6990217	Identifier	scheme		6990075	1					
ANR	6990218	Argument	"""gluster+unix"""		6990075	1					
ANR	6990219	PrimaryExpression	"""gluster+unix"""		6990075	0					
ANR	6990220	CompoundStatement		41:53:609:609	6990075	1					
ANR	6990221	ExpressionStatement	gsconf -> type = SOCKET_ADDRESS_TYPE_UNIX	47:8:744:783	6990075	0	True				
ANR	6990222	AssignmentExpression	gsconf -> type = SOCKET_ADDRESS_TYPE_UNIX		6990075	0		=			
ANR	6990223	PtrMemberAccess	gsconf -> type		6990075	0					
ANR	6990224	Identifier	gsconf		6990075	0					
ANR	6990225	Identifier	type		6990075	1					
ANR	6990226	Identifier	SOCKET_ADDRESS_TYPE_UNIX		6990075	1					
ANR	6990227	ExpressionStatement	is_unix = true	49:8:794:808	6990075	1	True				
ANR	6990228	AssignmentExpression	is_unix = true		6990075	0		=			
ANR	6990229	Identifier	is_unix		6990075	0					
ANR	6990230	Identifier	true		6990075	1					
ANR	6990231	ElseStatement	else		6990075	0					
ANR	6990232	IfStatement	"if ( ! strcmp ( uri -> scheme , ""gluster+rdma"" ) )"		6990075	0					
ANR	6990233	Condition	"! strcmp ( uri -> scheme , ""gluster+rdma"" )"	51:15:826:861	6990075	0	True				
ANR	6990234	UnaryOperationExpression	"! strcmp ( uri -> scheme , ""gluster+rdma"" )"		6990075	0					
ANR	6990235	UnaryOperator	!		6990075	0					
ANR	6990236	CallExpression	"strcmp ( uri -> scheme , ""gluster+rdma"" )"		6990075	1					
ANR	6990237	Callee	strcmp		6990075	0					
ANR	6990238	Identifier	strcmp		6990075	0					
ANR	6990239	ArgumentList	uri -> scheme		6990075	1					
ANR	6990240	Argument	uri -> scheme		6990075	0					
ANR	6990241	PtrMemberAccess	uri -> scheme		6990075	0					
ANR	6990242	Identifier	uri		6990075	0					
ANR	6990243	Identifier	scheme		6990075	1					
ANR	6990244	Argument	"""gluster+rdma"""		6990075	1					
ANR	6990245	PrimaryExpression	"""gluster+rdma"""		6990075	0					
ANR	6990246	CompoundStatement		47:53:740:740	6990075	1					
ANR	6990247	ExpressionStatement	gsconf -> type = SOCKET_ADDRESS_TYPE_INET	53:8:875:914	6990075	0	True				
ANR	6990248	AssignmentExpression	gsconf -> type = SOCKET_ADDRESS_TYPE_INET		6990075	0		=			
ANR	6990249	PtrMemberAccess	gsconf -> type		6990075	0					
ANR	6990250	Identifier	gsconf		6990075	0					
ANR	6990251	Identifier	type		6990075	1					
ANR	6990252	Identifier	SOCKET_ADDRESS_TYPE_INET		6990075	1					
ANR	6990253	Statement	error_report	55:8:925:936	6990075	1	True				
ANR	6990254	Statement	(	55:20:937:937	6990075	2	True				
ANR	6990255	Statement	"""Warning: rdma feature is not supported, falling """	55:21:938:987	6990075	3	True				
ANR	6990256	Statement	"""back to tcp"""	57:21:1011:1023	6990075	4	True				
ANR	6990257	Statement	)	57:34:1024:1024	6990075	5	True				
ANR	6990258	ExpressionStatement		57:35:1025:1025	6990075	6	True				
ANR	6990259	ElseStatement	else		6990075	0					
ANR	6990260	CompoundStatement		55:11:915:915	6990075	0					
ANR	6990261	ExpressionStatement	ret = - EINVAL	61:8:1050:1063	6990075	0	True				
ANR	6990262	AssignmentExpression	ret = - EINVAL		6990075	0		=			
ANR	6990263	Identifier	ret		6990075	0					
ANR	6990264	UnaryOperationExpression	- EINVAL		6990075	1					
ANR	6990265	UnaryOperator	-		6990075	0					
ANR	6990266	Identifier	EINVAL		6990075	1					
ANR	6990267	GotoStatement	goto out ;	63:8:1074:1082	6990075	1	True				
ANR	6990268	Identifier	out		6990075	0					
ANR	6990269	ExpressionStatement	"ret = parse_volume_options ( gconf , uri -> path )"	69:4:1098:1142	6990075	10	True				
ANR	6990270	AssignmentExpression	"ret = parse_volume_options ( gconf , uri -> path )"		6990075	0		=			
ANR	6990271	Identifier	ret		6990075	0					
ANR	6990272	CallExpression	"parse_volume_options ( gconf , uri -> path )"		6990075	1					
ANR	6990273	Callee	parse_volume_options		6990075	0					
ANR	6990274	Identifier	parse_volume_options		6990075	0					
ANR	6990275	ArgumentList	gconf		6990075	1					
ANR	6990276	Argument	gconf		6990075	0					
ANR	6990277	Identifier	gconf		6990075	0					
ANR	6990278	Argument	uri -> path		6990075	1					
ANR	6990279	PtrMemberAccess	uri -> path		6990075	0					
ANR	6990280	Identifier	uri		6990075	0					
ANR	6990281	Identifier	path		6990075	1					
ANR	6990282	IfStatement	if ( ret < 0 )		6990075	11					
ANR	6990283	Condition	ret < 0	71:8:1153:1159	6990075	0	True				
ANR	6990284	RelationalExpression	ret < 0		6990075	0		<			
ANR	6990285	Identifier	ret		6990075	0					
ANR	6990286	PrimaryExpression	0		6990075	1					
ANR	6990287	CompoundStatement		67:17:1038:1038	6990075	1					
ANR	6990288	GotoStatement	goto out ;	73:8:1173:1181	6990075	0	True				
ANR	6990289	Identifier	out		6990075	0					
ANR	6990290	ExpressionStatement	qp = query_params_parse ( uri -> query )	79:4:1197:1232	6990075	12	True				
ANR	6990291	AssignmentExpression	qp = query_params_parse ( uri -> query )		6990075	0		=			
ANR	6990292	Identifier	qp		6990075	0					
ANR	6990293	CallExpression	query_params_parse ( uri -> query )		6990075	1					
ANR	6990294	Callee	query_params_parse		6990075	0					
ANR	6990295	Identifier	query_params_parse		6990075	0					
ANR	6990296	ArgumentList	uri -> query		6990075	1					
ANR	6990297	Argument	uri -> query		6990075	0					
ANR	6990298	PtrMemberAccess	uri -> query		6990075	0					
ANR	6990299	Identifier	uri		6990075	0					
ANR	6990300	Identifier	query		6990075	1					
ANR	6990301	IfStatement	if ( qp -> n > 1 || ( is_unix && ! qp -> n ) || ( ! is_unix && qp -> n ) )		6990075	13					
ANR	6990302	Condition	qp -> n > 1 || ( is_unix && ! qp -> n ) || ( ! is_unix && qp -> n )	81:8:1243:1297	6990075	0	True				
ANR	6990303	OrExpression	qp -> n > 1 || ( is_unix && ! qp -> n ) || ( ! is_unix && qp -> n )		6990075	0		||			
ANR	6990304	RelationalExpression	qp -> n > 1		6990075	0		>			
ANR	6990305	PtrMemberAccess	qp -> n		6990075	0					
ANR	6990306	Identifier	qp		6990075	0					
ANR	6990307	Identifier	n		6990075	1					
ANR	6990308	PrimaryExpression	1		6990075	1					
ANR	6990309	OrExpression	( is_unix && ! qp -> n ) || ( ! is_unix && qp -> n )		6990075	1		||			
ANR	6990310	AndExpression	is_unix && ! qp -> n		6990075	0		&&			
ANR	6990311	Identifier	is_unix		6990075	0					
ANR	6990312	UnaryOperationExpression	! qp -> n		6990075	1					
ANR	6990313	UnaryOperator	!		6990075	0					
ANR	6990314	PtrMemberAccess	qp -> n		6990075	1					
ANR	6990315	Identifier	qp		6990075	0					
ANR	6990316	Identifier	n		6990075	1					
ANR	6990317	AndExpression	! is_unix && qp -> n		6990075	1		&&			
ANR	6990318	UnaryOperationExpression	! is_unix		6990075	0					
ANR	6990319	UnaryOperator	!		6990075	0					
ANR	6990320	Identifier	is_unix		6990075	1					
ANR	6990321	PtrMemberAccess	qp -> n		6990075	1					
ANR	6990322	Identifier	qp		6990075	0					
ANR	6990323	Identifier	n		6990075	1					
ANR	6990324	CompoundStatement		77:65:1176:1176	6990075	1					
ANR	6990325	ExpressionStatement	ret = - EINVAL	83:8:1311:1324	6990075	0	True				
ANR	6990326	AssignmentExpression	ret = - EINVAL		6990075	0		=			
ANR	6990327	Identifier	ret		6990075	0					
ANR	6990328	UnaryOperationExpression	- EINVAL		6990075	1					
ANR	6990329	UnaryOperator	-		6990075	0					
ANR	6990330	Identifier	EINVAL		6990075	1					
ANR	6990331	GotoStatement	goto out ;	85:8:1335:1343	6990075	1	True				
ANR	6990332	Identifier	out		6990075	0					
ANR	6990333	IfStatement	if ( is_unix )		6990075	14					
ANR	6990334	Condition	is_unix	91:8:1363:1369	6990075	0	True				
ANR	6990335	Identifier	is_unix		6990075	0					
ANR	6990336	CompoundStatement		87:17:1248:1248	6990075	1					
ANR	6990337	IfStatement	if ( uri -> server || uri -> port )		6990075	0					
ANR	6990338	Condition	uri -> server || uri -> port	93:12:1387:1410	6990075	0	True				
ANR	6990339	OrExpression	uri -> server || uri -> port		6990075	0		||			
ANR	6990340	PtrMemberAccess	uri -> server		6990075	0					
ANR	6990341	Identifier	uri		6990075	0					
ANR	6990342	Identifier	server		6990075	1					
ANR	6990343	PtrMemberAccess	uri -> port		6990075	1					
ANR	6990344	Identifier	uri		6990075	0					
ANR	6990345	Identifier	port		6990075	1					
ANR	6990346	CompoundStatement		89:38:1289:1289	6990075	1					
ANR	6990347	ExpressionStatement	ret = - EINVAL	95:12:1428:1441	6990075	0	True				
ANR	6990348	AssignmentExpression	ret = - EINVAL		6990075	0		=			
ANR	6990349	Identifier	ret		6990075	0					
ANR	6990350	UnaryOperationExpression	- EINVAL		6990075	1					
ANR	6990351	UnaryOperator	-		6990075	0					
ANR	6990352	Identifier	EINVAL		6990075	1					
ANR	6990353	GotoStatement	goto out ;	97:12:1456:1464	6990075	1	True				
ANR	6990354	Identifier	out		6990075	0					
ANR	6990355	IfStatement	"if ( strcmp ( qp -> p [ 0 ] . name , ""socket"" ) )"		6990075	1					
ANR	6990356	Condition	"strcmp ( qp -> p [ 0 ] . name , ""socket"" )"	101:12:1490:1520	6990075	0	True				
ANR	6990357	CallExpression	"strcmp ( qp -> p [ 0 ] . name , ""socket"" )"		6990075	0					
ANR	6990358	Callee	strcmp		6990075	0					
ANR	6990359	Identifier	strcmp		6990075	0					
ANR	6990360	ArgumentList	qp -> p [ 0 ] . name		6990075	1					
ANR	6990361	Argument	qp -> p [ 0 ] . name		6990075	0					
ANR	6990362	MemberAccess	qp -> p [ 0 ] . name		6990075	0					
ANR	6990363	ArrayIndexing	qp -> p [ 0 ]		6990075	0					
ANR	6990364	PtrMemberAccess	qp -> p		6990075	0					
ANR	6990365	Identifier	qp		6990075	0					
ANR	6990366	Identifier	p		6990075	1					
ANR	6990367	PrimaryExpression	0		6990075	1					
ANR	6990368	Identifier	name		6990075	1					
ANR	6990369	Argument	"""socket"""		6990075	1					
ANR	6990370	PrimaryExpression	"""socket"""		6990075	0					
ANR	6990371	CompoundStatement		97:45:1399:1399	6990075	1					
ANR	6990372	ExpressionStatement	ret = - EINVAL	103:12:1538:1551	6990075	0	True				
ANR	6990373	AssignmentExpression	ret = - EINVAL		6990075	0		=			
ANR	6990374	Identifier	ret		6990075	0					
ANR	6990375	UnaryOperationExpression	- EINVAL		6990075	1					
ANR	6990376	UnaryOperator	-		6990075	0					
ANR	6990377	Identifier	EINVAL		6990075	1					
ANR	6990378	GotoStatement	goto out ;	105:12:1566:1574	6990075	1	True				
ANR	6990379	Identifier	out		6990075	0					
ANR	6990380	ExpressionStatement	gsconf -> u . q_unix . path = g_strdup ( qp -> p [ 0 ] . value )	109:8:1596:1644	6990075	2	True				
ANR	6990381	AssignmentExpression	gsconf -> u . q_unix . path = g_strdup ( qp -> p [ 0 ] . value )		6990075	0		=			
ANR	6990382	MemberAccess	gsconf -> u . q_unix . path		6990075	0					
ANR	6990383	MemberAccess	gsconf -> u . q_unix		6990075	0					
ANR	6990384	PtrMemberAccess	gsconf -> u		6990075	0					
ANR	6990385	Identifier	gsconf		6990075	0					
ANR	6990386	Identifier	u		6990075	1					
ANR	6990387	Identifier	q_unix		6990075	1					
ANR	6990388	Identifier	path		6990075	1					
ANR	6990389	CallExpression	g_strdup ( qp -> p [ 0 ] . value )		6990075	1					
ANR	6990390	Callee	g_strdup		6990075	0					
ANR	6990391	Identifier	g_strdup		6990075	0					
ANR	6990392	ArgumentList	qp -> p [ 0 ] . value		6990075	1					
ANR	6990393	Argument	qp -> p [ 0 ] . value		6990075	0					
ANR	6990394	MemberAccess	qp -> p [ 0 ] . value		6990075	0					
ANR	6990395	ArrayIndexing	qp -> p [ 0 ]		6990075	0					
ANR	6990396	PtrMemberAccess	qp -> p		6990075	0					
ANR	6990397	Identifier	qp		6990075	0					
ANR	6990398	Identifier	p		6990075	1					
ANR	6990399	PrimaryExpression	0		6990075	1					
ANR	6990400	Identifier	value		6990075	1					
ANR	6990401	ElseStatement	else		6990075	0					
ANR	6990402	CompoundStatement		107:11:1534:1534	6990075	0					
ANR	6990403	ExpressionStatement	"gsconf -> u . inet . host = g_strdup ( uri -> server ? uri -> server : ""localhost"" )"	113:8:1669:1740	6990075	0	True				
ANR	6990404	AssignmentExpression	"gsconf -> u . inet . host = g_strdup ( uri -> server ? uri -> server : ""localhost"" )"		6990075	0		=			
ANR	6990405	MemberAccess	gsconf -> u . inet . host		6990075	0					
ANR	6990406	MemberAccess	gsconf -> u . inet		6990075	0					
ANR	6990407	PtrMemberAccess	gsconf -> u		6990075	0					
ANR	6990408	Identifier	gsconf		6990075	0					
ANR	6990409	Identifier	u		6990075	1					
ANR	6990410	Identifier	inet		6990075	1					
ANR	6990411	Identifier	host		6990075	1					
ANR	6990412	CallExpression	"g_strdup ( uri -> server ? uri -> server : ""localhost"" )"		6990075	1					
ANR	6990413	Callee	g_strdup		6990075	0					
ANR	6990414	Identifier	g_strdup		6990075	0					
ANR	6990415	ArgumentList	"uri -> server ? uri -> server : ""localhost"""		6990075	1					
ANR	6990416	Argument	"uri -> server ? uri -> server : ""localhost"""		6990075	0					
ANR	6990417	ConditionalExpression	"uri -> server ? uri -> server : ""localhost"""		6990075	0					
ANR	6990418	Condition	uri -> server		6990075	0					
ANR	6990419	PtrMemberAccess	uri -> server		6990075	0					
ANR	6990420	Identifier	uri		6990075	0					
ANR	6990421	Identifier	server		6990075	1					
ANR	6990422	PtrMemberAccess	uri -> server		6990075	1					
ANR	6990423	Identifier	uri		6990075	0					
ANR	6990424	Identifier	server		6990075	1					
ANR	6990425	PrimaryExpression	"""localhost"""		6990075	2					
ANR	6990426	IfStatement	if ( uri -> port )		6990075	1					
ANR	6990427	Condition	uri -> port	115:12:1755:1763	6990075	0	True				
ANR	6990428	PtrMemberAccess	uri -> port		6990075	0					
ANR	6990429	Identifier	uri		6990075	0					
ANR	6990430	Identifier	port		6990075	1					
ANR	6990431	CompoundStatement		111:23:1642:1642	6990075	1					
ANR	6990432	ExpressionStatement	"gsconf -> u . inet . port = g_strdup_printf ( ""%d"" , uri -> port )"	117:12:1781:1835	6990075	0	True				
ANR	6990433	AssignmentExpression	"gsconf -> u . inet . port = g_strdup_printf ( ""%d"" , uri -> port )"		6990075	0		=			
ANR	6990434	MemberAccess	gsconf -> u . inet . port		6990075	0					
ANR	6990435	MemberAccess	gsconf -> u . inet		6990075	0					
ANR	6990436	PtrMemberAccess	gsconf -> u		6990075	0					
ANR	6990437	Identifier	gsconf		6990075	0					
ANR	6990438	Identifier	u		6990075	1					
ANR	6990439	Identifier	inet		6990075	1					
ANR	6990440	Identifier	port		6990075	1					
ANR	6990441	CallExpression	"g_strdup_printf ( ""%d"" , uri -> port )"		6990075	1					
ANR	6990442	Callee	g_strdup_printf		6990075	0					
ANR	6990443	Identifier	g_strdup_printf		6990075	0					
ANR	6990444	ArgumentList	"""%d"""		6990075	1					
ANR	6990445	Argument	"""%d"""		6990075	0					
ANR	6990446	PrimaryExpression	"""%d"""		6990075	0					
ANR	6990447	Argument	uri -> port		6990075	1					
ANR	6990448	PtrMemberAccess	uri -> port		6990075	0					
ANR	6990449	Identifier	uri		6990075	0					
ANR	6990450	Identifier	port		6990075	1					
ANR	6990451	ElseStatement	else		6990075	0					
ANR	6990452	CompoundStatement		115:15:1729:1729	6990075	0					
ANR	6990453	ExpressionStatement	"gsconf -> u . inet . port = g_strdup_printf ( ""%d"" , GLUSTER_DEFAULT_PORT )"	121:12:1868:1933	6990075	0	True				
ANR	6990454	AssignmentExpression	"gsconf -> u . inet . port = g_strdup_printf ( ""%d"" , GLUSTER_DEFAULT_PORT )"		6990075	0		=			
ANR	6990455	MemberAccess	gsconf -> u . inet . port		6990075	0					
ANR	6990456	MemberAccess	gsconf -> u . inet		6990075	0					
ANR	6990457	PtrMemberAccess	gsconf -> u		6990075	0					
ANR	6990458	Identifier	gsconf		6990075	0					
ANR	6990459	Identifier	u		6990075	1					
ANR	6990460	Identifier	inet		6990075	1					
ANR	6990461	Identifier	port		6990075	1					
ANR	6990462	CallExpression	"g_strdup_printf ( ""%d"" , GLUSTER_DEFAULT_PORT )"		6990075	1					
ANR	6990463	Callee	g_strdup_printf		6990075	0					
ANR	6990464	Identifier	g_strdup_printf		6990075	0					
ANR	6990465	ArgumentList	"""%d"""		6990075	1					
ANR	6990466	Argument	"""%d"""		6990075	0					
ANR	6990467	PrimaryExpression	"""%d"""		6990075	0					
ANR	6990468	Argument	GLUSTER_DEFAULT_PORT		6990075	1					
ANR	6990469	Identifier	GLUSTER_DEFAULT_PORT		6990075	0					
ANR	6990470	Label	out :	129:0:1956:1959	6990075	15	True				
ANR	6990471	Identifier	out		6990075	0					
ANR	6990472	IfStatement	if ( qp )		6990075	16					
ANR	6990473	Condition	qp	131:8:1970:1971	6990075	0	True				
ANR	6990474	Identifier	qp		6990075	0					
ANR	6990475	CompoundStatement		127:12:1850:1850	6990075	1					
ANR	6990476	ExpressionStatement	query_params_free ( qp )	133:8:1985:2006	6990075	0	True				
ANR	6990477	CallExpression	query_params_free ( qp )		6990075	0					
ANR	6990478	Callee	query_params_free		6990075	0					
ANR	6990479	Identifier	query_params_free		6990075	0					
ANR	6990480	ArgumentList	qp		6990075	1					
ANR	6990481	Argument	qp		6990075	0					
ANR	6990482	Identifier	qp		6990075	0					
ANR	6990483	ExpressionStatement	uri_free ( uri )	137:4:2020:2033	6990075	17	True				
ANR	6990484	CallExpression	uri_free ( uri )		6990075	0					
ANR	6990485	Callee	uri_free		6990075	0					
ANR	6990486	Identifier	uri_free		6990075	0					
ANR	6990487	ArgumentList	uri		6990075	1					
ANR	6990488	Argument	uri		6990075	0					
ANR	6990489	Identifier	uri		6990075	0					
ANR	6990490	ReturnStatement	return ret ;	139:4:2040:2050	6990075	18	True				
ANR	6990491	Identifier	ret		6990075	0					
ANR	6990492	ReturnType	static int		6990075	1					
ANR	6990493	Identifier	qemu_gluster_parse_uri		6990075	2					
ANR	6990494	ParameterList	"BlockdevOptionsGluster * gconf , const char * filename"		6990075	3					
ANR	6990495	Parameter	BlockdevOptionsGluster * gconf	1:34:34:62	6990075	0	True				
ANR	6990496	ParameterType	BlockdevOptionsGluster *		6990075	0					
ANR	6990497	Identifier	gconf		6990075	1					
ANR	6990498	Parameter	const char * filename	3:34:100:119	6990075	1	True				
ANR	6990499	ParameterType	const char *		6990075	0					
ANR	6990500	Identifier	filename		6990075	1					
ANR	6990501	CFGEntryNode	ENTRY		6990075		True				
ANR	6990502	CFGExitNode	EXIT		6990075		True				
ANR	6990503	Symbol	gsconf -> u . q_unix		6990075						
ANR	6990504	Symbol	* * gconf		6990075						
ANR	6990505	Symbol	* * qp		6990075						
ANR	6990506	Symbol	uri -> server		6990075						
ANR	6990507	Symbol	gsconf -> type		6990075						
ANR	6990508	Symbol	SOCKET_ADDRESS_TYPE_INET		6990075						
ANR	6990509	Symbol	* uri		6990075						
ANR	6990510	Symbol	gsconf -> u . inet . host		6990075						
ANR	6990511	Symbol	SocketAddress		6990075						
ANR	6990512	Symbol	gsconf -> u . q_unix . path		6990075						
ANR	6990513	Symbol	qp		6990075						
ANR	6990514	Symbol	ret		6990075						
ANR	6990515	Symbol	strcmp		6990075						
ANR	6990516	Symbol	gsconf -> u . inet		6990075						
ANR	6990517	Symbol	NULL		6990075						
ANR	6990518	Symbol	qp -> p [ 0 ] . name		6990075						
ANR	6990519	Symbol	uri -> path		6990075						
ANR	6990520	Symbol	* gconf		6990075						
ANR	6990521	Symbol	filename		6990075						
ANR	6990522	Symbol	* gconf -> server		6990075						
ANR	6990523	Symbol	qp -> p		6990075						
ANR	6990524	Symbol	qp -> n		6990075						
ANR	6990525	Symbol	gsconf -> u . inet . port		6990075						
ANR	6990526	Symbol	true		6990075						
ANR	6990527	Symbol	* gsconf		6990075						
ANR	6990528	Symbol	gsconf -> u		6990075						
ANR	6990529	Symbol	SocketAddressList		6990075						
ANR	6990530	Symbol	* qp		6990075						
ANR	6990531	Symbol	uri_parse		6990075						
ANR	6990532	Symbol	gconf		6990075						
ANR	6990533	Symbol	query_params_parse		6990075						
ANR	6990534	Symbol	qp -> p [ 0 ] . value		6990075						
ANR	6990535	Symbol	gsconf		6990075						
ANR	6990536	Symbol	g_strdup		6990075						
ANR	6990537	Symbol	g_new0		6990075						
ANR	6990538	Symbol	uri -> query		6990075						
ANR	6990539	Symbol	* qp -> p		6990075						
ANR	6990540	Symbol	is_unix		6990075						
ANR	6990541	Symbol	GLUSTER_DEFAULT_PORT		6990075						
ANR	6990542	Symbol	gconf -> server		6990075						
ANR	6990543	Symbol	false		6990075						
ANR	6990544	Symbol	SOCKET_ADDRESS_TYPE_UNIX		6990075						
ANR	6990545	Symbol	uri		6990075						
ANR	6990546	Symbol	EINVAL		6990075						
ANR	6990547	Symbol	uri -> port		6990075						
ANR	6990548	Symbol	uri -> scheme		6990075						
ANR	6990549	Symbol	g_strdup_printf		6990075						
ANR	6990550	Symbol	gconf -> server -> value		6990075						
ANR	6990551	Symbol	parse_volume_options		6990075						
