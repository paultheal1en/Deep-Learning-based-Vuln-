command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6773630	File	/home/p4ultr4n/workplace/ReVeal/raw_code/put_no_rnd_pixels8_xy2_altivec_0.c								
ANR	6773631	Function	put_no_rnd_pixels8_xy2_altivec	1:0:0:4259							
ANR	6773632	FunctionDef	"put_no_rnd_pixels8_xy2_altivec (uint8_t * block , const uint8_t * pixels , int line_size , int h)"		6773631	0					
ANR	6773633	CompoundStatement		3:0:98:4259	6773631	0					
ANR	6773634	ExpressionStatement	"POWERPC_TBL_DECLARE ( altivec_put_no_rnd_pixels8_xy2_num , 1 )"	5:0:101:159	6773631	0	True				
ANR	6773635	CallExpression	"POWERPC_TBL_DECLARE ( altivec_put_no_rnd_pixels8_xy2_num , 1 )"		6773631	0					
ANR	6773636	Callee	POWERPC_TBL_DECLARE		6773631	0					
ANR	6773637	Identifier	POWERPC_TBL_DECLARE		6773631	0					
ANR	6773638	ArgumentList	altivec_put_no_rnd_pixels8_xy2_num		6773631	1					
ANR	6773639	Argument	altivec_put_no_rnd_pixels8_xy2_num		6773631	0					
ANR	6773640	Identifier	altivec_put_no_rnd_pixels8_xy2_num		6773631	0					
ANR	6773641	Argument	1		6773631	1					
ANR	6773642	PrimaryExpression	1		6773631	0					
ANR	6773643	IdentifierDeclStatement	int j ;	9:4:203:208	6773631	1	True				
ANR	6773644	IdentifierDecl	j		6773631	0					
ANR	6773645	IdentifierDeclType	int		6773631	0					
ANR	6773646	Identifier	j		6773631	1					
ANR	6773647	ExpressionStatement	"POWERPC_TBL_START_COUNT ( altivec_put_no_rnd_pixels8_xy2_num , 1 )"	11:0:211:273	6773631	2	True				
ANR	6773648	CallExpression	"POWERPC_TBL_START_COUNT ( altivec_put_no_rnd_pixels8_xy2_num , 1 )"		6773631	0					
ANR	6773649	Callee	POWERPC_TBL_START_COUNT		6773631	0					
ANR	6773650	Identifier	POWERPC_TBL_START_COUNT		6773631	0					
ANR	6773651	ArgumentList	altivec_put_no_rnd_pixels8_xy2_num		6773631	1					
ANR	6773652	Argument	altivec_put_no_rnd_pixels8_xy2_num		6773631	0					
ANR	6773653	Identifier	altivec_put_no_rnd_pixels8_xy2_num		6773631	0					
ANR	6773654	Argument	1		6773631	1					
ANR	6773655	PrimaryExpression	1		6773631	0					
ANR	6773656	ForStatement	for ( j = 0 ; j < 2 ; j ++ )		6773631	3					
ANR	6773657	ForInit	j = 0 ;	13:9:285:290	6773631	0	True				
ANR	6773658	AssignmentExpression	j = 0		6773631	0		=			
ANR	6773659	Identifier	j		6773631	0					
ANR	6773660	PrimaryExpression	0		6773631	1					
ANR	6773661	Condition	j < 2	13:16:292:296	6773631	1	True				
ANR	6773662	RelationalExpression	j < 2		6773631	0		<			
ANR	6773663	Identifier	j		6773631	0					
ANR	6773664	PrimaryExpression	2		6773631	1					
ANR	6773665	PostIncDecOperationExpression	j ++	13:23:299:301	6773631	2	True				
ANR	6773666	Identifier	j		6773631	0					
ANR	6773667	IncDec	++		6773631	1					
ANR	6773668	CompoundStatement		29:6:558:573	6773631	3					
ANR	6773669	IdentifierDeclStatement	int i ;	15:6:313:318	6773631	0	True				
ANR	6773670	IdentifierDecl	i		6773631	0					
ANR	6773671	IdentifierDeclType	int		6773631	0					
ANR	6773672	Identifier	i		6773631	1					
ANR	6773673	IdentifierDeclStatement	const uint32_t a = ( ( ( const struct unaligned_32 * ) ( pixels ) ) -> l ) ;	17:6:327:391	6773631	1	True				
ANR	6773674	IdentifierDecl	a = ( ( ( const struct unaligned_32 * ) ( pixels ) ) -> l )		6773631	0					
ANR	6773675	IdentifierDeclType	const uint32_t		6773631	0					
ANR	6773676	Identifier	a		6773631	1					
ANR	6773677	AssignmentExpression	a = ( ( ( const struct unaligned_32 * ) ( pixels ) ) -> l )		6773631	2		=			
ANR	6773678	Identifier	a		6773631	0					
ANR	6773679	PtrMemberAccess	( ( const struct unaligned_32 * ) ( pixels ) ) -> l		6773631	1					
ANR	6773680	CastExpression	( const struct unaligned_32 * ) ( pixels )		6773631	0					
ANR	6773681	CastTarget	const struct unaligned_32 *		6773631	0					
ANR	6773682	Identifier	pixels		6773631	1					
ANR	6773683	Identifier	l		6773631	1					
ANR	6773684	IdentifierDeclStatement	const uint32_t b = ( ( ( const struct unaligned_32 * ) ( pixels + 1 ) ) -> l ) ;	19:6:400:477	6773631	2	True				
ANR	6773685	IdentifierDecl	b = ( ( ( const struct unaligned_32 * ) ( pixels + 1 ) ) -> l )		6773631	0					
ANR	6773686	IdentifierDeclType	const uint32_t		6773631	0					
ANR	6773687	Identifier	b		6773631	1					
ANR	6773688	AssignmentExpression	b = ( ( ( const struct unaligned_32 * ) ( pixels + 1 ) ) -> l )		6773631	2		=			
ANR	6773689	Identifier	b		6773631	0					
ANR	6773690	PtrMemberAccess	( ( const struct unaligned_32 * ) ( pixels + 1 ) ) -> l		6773631	1					
ANR	6773691	CastExpression	( const struct unaligned_32 * ) ( pixels + 1 )		6773631	0					
ANR	6773692	CastTarget	const struct unaligned_32 *		6773631	0					
ANR	6773693	AdditiveExpression	pixels + 1		6773631	1		+			
ANR	6773694	Identifier	pixels		6773631	0					
ANR	6773695	PrimaryExpression	1		6773631	1					
ANR	6773696	Identifier	l		6773631	1					
ANR	6773697	IdentifierDeclStatement	uint32_t l0 = ( a & 0x03030303UL ) + ( b & 0x03030303UL ) + 0x01010101UL ;	23:6:486:563	6773631	3	True				
ANR	6773698	IdentifierDecl	l0 = ( a & 0x03030303UL ) + ( b & 0x03030303UL ) + 0x01010101UL		6773631	0					
ANR	6773699	IdentifierDeclType	uint32_t		6773631	0					
ANR	6773700	Identifier	l0		6773631	1					
ANR	6773701	AssignmentExpression	l0 = ( a & 0x03030303UL ) + ( b & 0x03030303UL ) + 0x01010101UL		6773631	2		=			
ANR	6773702	Identifier	l0		6773631	0					
ANR	6773703	AdditiveExpression	( a & 0x03030303UL ) + ( b & 0x03030303UL ) + 0x01010101UL		6773631	1		+			
ANR	6773704	BitAndExpression	a & 0x03030303UL		6773631	0		&			
ANR	6773705	Identifier	a		6773631	0					
ANR	6773706	PrimaryExpression	0x03030303UL		6773631	1					
ANR	6773707	AdditiveExpression	( b & 0x03030303UL ) + 0x01010101UL		6773631	1		+			
ANR	6773708	BitAndExpression	b & 0x03030303UL		6773631	0		&			
ANR	6773709	Identifier	b		6773631	0					
ANR	6773710	PrimaryExpression	0x03030303UL		6773631	1					
ANR	6773711	PrimaryExpression	0x01010101UL		6773631	1					
ANR	6773712	IdentifierDeclStatement	uint32_t h0 = ( ( a & 0xFCFCFCFCUL ) >> 2 ) + ( ( b & 0xFCFCFCFCUL ) >> 2 ) ;	27:6:572:648	6773631	4	True				
ANR	6773713	IdentifierDecl	h0 = ( ( a & 0xFCFCFCFCUL ) >> 2 ) + ( ( b & 0xFCFCFCFCUL ) >> 2 )		6773631	0					
ANR	6773714	IdentifierDeclType	uint32_t		6773631	0					
ANR	6773715	Identifier	h0		6773631	1					
ANR	6773716	AssignmentExpression	h0 = ( ( a & 0xFCFCFCFCUL ) >> 2 ) + ( ( b & 0xFCFCFCFCUL ) >> 2 )		6773631	2		=			
ANR	6773717	Identifier	h0		6773631	0					
ANR	6773718	AdditiveExpression	( ( a & 0xFCFCFCFCUL ) >> 2 ) + ( ( b & 0xFCFCFCFCUL ) >> 2 )		6773631	1		+			
ANR	6773719	ShiftExpression	( a & 0xFCFCFCFCUL ) >> 2		6773631	0		>>			
ANR	6773720	BitAndExpression	a & 0xFCFCFCFCUL		6773631	0		&			
ANR	6773721	Identifier	a		6773631	0					
ANR	6773722	PrimaryExpression	0xFCFCFCFCUL		6773631	1					
ANR	6773723	PrimaryExpression	2		6773631	1					
ANR	6773724	ShiftExpression	( b & 0xFCFCFCFCUL ) >> 2		6773631	1		>>			
ANR	6773725	BitAndExpression	b & 0xFCFCFCFCUL		6773631	0		&			
ANR	6773726	Identifier	b		6773631	0					
ANR	6773727	PrimaryExpression	0xFCFCFCFCUL		6773631	1					
ANR	6773728	PrimaryExpression	2		6773631	1					
ANR	6773729	IdentifierDeclStatement	"uint32_t l1 , h1 ;"	31:6:657:672	6773631	5	True				
ANR	6773730	IdentifierDecl	l1		6773631	0					
ANR	6773731	IdentifierDeclType	uint32_t		6773631	0					
ANR	6773732	Identifier	l1		6773631	1					
ANR	6773733	IdentifierDecl	h1		6773631	1					
ANR	6773734	IdentifierDeclType	uint32_t		6773631	0					
ANR	6773735	Identifier	h1		6773631	1					
ANR	6773736	ExpressionStatement	pixels += line_size	33:6:681:700	6773631	6	True				
ANR	6773737	AssignmentExpression	pixels += line_size		6773631	0		+=			
ANR	6773738	Identifier	pixels		6773631	0					
ANR	6773739	Identifier	line_size		6773631	1					
ANR	6773740	ForStatement	for ( i = 0 ; i < h ; i += 2 )		6773631	7					
ANR	6773741	ForInit	i = 0 ;	35:11:714:719	6773631	0	True				
ANR	6773742	AssignmentExpression	i = 0		6773631	0		=			
ANR	6773743	Identifier	i		6773631	0					
ANR	6773744	PrimaryExpression	0		6773631	1					
ANR	6773745	Condition	i < h	35:18:721:725	6773631	1	True				
ANR	6773746	RelationalExpression	i < h		6773631	0		<			
ANR	6773747	Identifier	i		6773631	0					
ANR	6773748	Identifier	h		6773631	1					
ANR	6773749	AssignmentExpression	i += 2	35:25:728:733	6773631	2	True	+=			
ANR	6773750	Identifier	i		6773631	0					
ANR	6773751	PrimaryExpression	2		6773631	1					
ANR	6773752	CompoundStatement		37:8:717:779	6773631	3					
ANR	6773753	IdentifierDeclStatement	uint32_t a = ( ( ( const struct unaligned_32 * ) ( pixels ) ) -> l ) ;	37:8:747:805	6773631	0	True				
ANR	6773754	IdentifierDecl	a = ( ( ( const struct unaligned_32 * ) ( pixels ) ) -> l )		6773631	0					
ANR	6773755	IdentifierDeclType	uint32_t		6773631	0					
ANR	6773756	Identifier	a		6773631	1					
ANR	6773757	AssignmentExpression	a = ( ( ( const struct unaligned_32 * ) ( pixels ) ) -> l )		6773631	2		=			
ANR	6773758	Identifier	a		6773631	0					
ANR	6773759	PtrMemberAccess	( ( const struct unaligned_32 * ) ( pixels ) ) -> l		6773631	1					
ANR	6773760	CastExpression	( const struct unaligned_32 * ) ( pixels )		6773631	0					
ANR	6773761	CastTarget	const struct unaligned_32 *		6773631	0					
ANR	6773762	Identifier	pixels		6773631	1					
ANR	6773763	Identifier	l		6773631	1					
ANR	6773764	IdentifierDeclStatement	uint32_t b = ( ( ( const struct unaligned_32 * ) ( pixels + 1 ) ) -> l ) ;	39:8:816:878	6773631	1	True				
ANR	6773765	IdentifierDecl	b = ( ( ( const struct unaligned_32 * ) ( pixels + 1 ) ) -> l )		6773631	0					
ANR	6773766	IdentifierDeclType	uint32_t		6773631	0					
ANR	6773767	Identifier	b		6773631	1					
ANR	6773768	AssignmentExpression	b = ( ( ( const struct unaligned_32 * ) ( pixels + 1 ) ) -> l )		6773631	2		=			
ANR	6773769	Identifier	b		6773631	0					
ANR	6773770	PtrMemberAccess	( ( const struct unaligned_32 * ) ( pixels + 1 ) ) -> l		6773631	1					
ANR	6773771	CastExpression	( const struct unaligned_32 * ) ( pixels + 1 )		6773631	0					
ANR	6773772	CastTarget	const struct unaligned_32 *		6773631	0					
ANR	6773773	AdditiveExpression	pixels + 1		6773631	1		+			
ANR	6773774	Identifier	pixels		6773631	0					
ANR	6773775	PrimaryExpression	1		6773631	1					
ANR	6773776	Identifier	l		6773631	1					
ANR	6773777	ExpressionStatement	l1 = ( a & 0x03030303UL ) + ( b & 0x03030303UL )	41:8:889:933	6773631	2	True				
ANR	6773778	AssignmentExpression	l1 = ( a & 0x03030303UL ) + ( b & 0x03030303UL )		6773631	0		=			
ANR	6773779	Identifier	l1		6773631	0					
ANR	6773780	AdditiveExpression	( a & 0x03030303UL ) + ( b & 0x03030303UL )		6773631	1		+			
ANR	6773781	BitAndExpression	a & 0x03030303UL		6773631	0		&			
ANR	6773782	Identifier	a		6773631	0					
ANR	6773783	PrimaryExpression	0x03030303UL		6773631	1					
ANR	6773784	BitAndExpression	b & 0x03030303UL		6773631	1		&			
ANR	6773785	Identifier	b		6773631	0					
ANR	6773786	PrimaryExpression	0x03030303UL		6773631	1					
ANR	6773787	ExpressionStatement	h1 = ( ( a & 0xFCFCFCFCUL ) >> 2 ) + ( ( b & 0xFCFCFCFCUL ) >> 2 )	43:8:944:1002	6773631	3	True				
ANR	6773788	AssignmentExpression	h1 = ( ( a & 0xFCFCFCFCUL ) >> 2 ) + ( ( b & 0xFCFCFCFCUL ) >> 2 )		6773631	0		=			
ANR	6773789	Identifier	h1		6773631	0					
ANR	6773790	AdditiveExpression	( ( a & 0xFCFCFCFCUL ) >> 2 ) + ( ( b & 0xFCFCFCFCUL ) >> 2 )		6773631	1		+			
ANR	6773791	ShiftExpression	( a & 0xFCFCFCFCUL ) >> 2		6773631	0		>>			
ANR	6773792	BitAndExpression	a & 0xFCFCFCFCUL		6773631	0		&			
ANR	6773793	Identifier	a		6773631	0					
ANR	6773794	PrimaryExpression	0xFCFCFCFCUL		6773631	1					
ANR	6773795	PrimaryExpression	2		6773631	1					
ANR	6773796	ShiftExpression	( b & 0xFCFCFCFCUL ) >> 2		6773631	1		>>			
ANR	6773797	BitAndExpression	b & 0xFCFCFCFCUL		6773631	0		&			
ANR	6773798	Identifier	b		6773631	0					
ANR	6773799	PrimaryExpression	0xFCFCFCFCUL		6773631	1					
ANR	6773800	PrimaryExpression	2		6773631	1					
ANR	6773801	ExpressionStatement	* ( ( uint32_t * ) block ) = h0 + h1 + ( ( ( l0 + l1 ) >> 2 ) & 0x0F0F0F0FUL )	45:8:1013:1091	6773631	4	True				
ANR	6773802	AssignmentExpression	* ( ( uint32_t * ) block ) = h0 + h1 + ( ( ( l0 + l1 ) >> 2 ) & 0x0F0F0F0FUL )		6773631	0		=			
ANR	6773803	UnaryOperationExpression	* ( ( uint32_t * ) block )		6773631	0					
ANR	6773804	UnaryOperator	*		6773631	0					
ANR	6773805	CastExpression	( uint32_t * ) block		6773631	1					
ANR	6773806	CastTarget	uint32_t *		6773631	0					
ANR	6773807	Identifier	block		6773631	1					
ANR	6773808	AdditiveExpression	h0 + h1 + ( ( ( l0 + l1 ) >> 2 ) & 0x0F0F0F0FUL )		6773631	1		+			
ANR	6773809	Identifier	h0		6773631	0					
ANR	6773810	AdditiveExpression	h1 + ( ( ( l0 + l1 ) >> 2 ) & 0x0F0F0F0FUL )		6773631	1		+			
ANR	6773811	Identifier	h1		6773631	0					
ANR	6773812	BitAndExpression	( ( l0 + l1 ) >> 2 ) & 0x0F0F0F0FUL		6773631	1		&			
ANR	6773813	ShiftExpression	( l0 + l1 ) >> 2		6773631	0		>>			
ANR	6773814	AdditiveExpression	l0 + l1		6773631	0		+			
ANR	6773815	Identifier	l0		6773631	0					
ANR	6773816	Identifier	l1		6773631	1					
ANR	6773817	PrimaryExpression	2		6773631	1					
ANR	6773818	PrimaryExpression	0x0F0F0F0FUL		6773631	1					
ANR	6773819	ExpressionStatement	pixels += line_size	49:8:1102:1121	6773631	5	True				
ANR	6773820	AssignmentExpression	pixels += line_size		6773631	0		+=			
ANR	6773821	Identifier	pixels		6773631	0					
ANR	6773822	Identifier	line_size		6773631	1					
ANR	6773823	ExpressionStatement	block += line_size	51:8:1132:1150	6773631	6	True				
ANR	6773824	AssignmentExpression	block += line_size		6773631	0		+=			
ANR	6773825	Identifier	block		6773631	0					
ANR	6773826	Identifier	line_size		6773631	1					
ANR	6773827	ExpressionStatement	a = ( ( ( const struct unaligned_32 * ) ( pixels ) ) -> l )	53:8:1161:1210	6773631	7	True				
ANR	6773828	AssignmentExpression	a = ( ( ( const struct unaligned_32 * ) ( pixels ) ) -> l )		6773631	0		=			
ANR	6773829	Identifier	a		6773631	0					
ANR	6773830	PtrMemberAccess	( ( const struct unaligned_32 * ) ( pixels ) ) -> l		6773631	1					
ANR	6773831	CastExpression	( const struct unaligned_32 * ) ( pixels )		6773631	0					
ANR	6773832	CastTarget	const struct unaligned_32 *		6773631	0					
ANR	6773833	Identifier	pixels		6773631	1					
ANR	6773834	Identifier	l		6773631	1					
ANR	6773835	ExpressionStatement	b = ( ( ( const struct unaligned_32 * ) ( pixels + 1 ) ) -> l )	55:8:1221:1274	6773631	8	True				
ANR	6773836	AssignmentExpression	b = ( ( ( const struct unaligned_32 * ) ( pixels + 1 ) ) -> l )		6773631	0		=			
ANR	6773837	Identifier	b		6773631	0					
ANR	6773838	PtrMemberAccess	( ( const struct unaligned_32 * ) ( pixels + 1 ) ) -> l		6773631	1					
ANR	6773839	CastExpression	( const struct unaligned_32 * ) ( pixels + 1 )		6773631	0					
ANR	6773840	CastTarget	const struct unaligned_32 *		6773631	0					
ANR	6773841	AdditiveExpression	pixels + 1		6773631	1		+			
ANR	6773842	Identifier	pixels		6773631	0					
ANR	6773843	PrimaryExpression	1		6773631	1					
ANR	6773844	Identifier	l		6773631	1					
ANR	6773845	ExpressionStatement	l0 = ( a & 0x03030303UL ) + ( b & 0x03030303UL ) + 0x01010101UL	57:8:1285:1344	6773631	9	True				
ANR	6773846	AssignmentExpression	l0 = ( a & 0x03030303UL ) + ( b & 0x03030303UL ) + 0x01010101UL		6773631	0		=			
ANR	6773847	Identifier	l0		6773631	0					
ANR	6773848	AdditiveExpression	( a & 0x03030303UL ) + ( b & 0x03030303UL ) + 0x01010101UL		6773631	1		+			
ANR	6773849	BitAndExpression	a & 0x03030303UL		6773631	0		&			
ANR	6773850	Identifier	a		6773631	0					
ANR	6773851	PrimaryExpression	0x03030303UL		6773631	1					
ANR	6773852	AdditiveExpression	( b & 0x03030303UL ) + 0x01010101UL		6773631	1		+			
ANR	6773853	BitAndExpression	b & 0x03030303UL		6773631	0		&			
ANR	6773854	Identifier	b		6773631	0					
ANR	6773855	PrimaryExpression	0x03030303UL		6773631	1					
ANR	6773856	PrimaryExpression	0x01010101UL		6773631	1					
ANR	6773857	ExpressionStatement	h0 = ( ( a & 0xFCFCFCFCUL ) >> 2 ) + ( ( b & 0xFCFCFCFCUL ) >> 2 )	59:8:1355:1413	6773631	10	True				
ANR	6773858	AssignmentExpression	h0 = ( ( a & 0xFCFCFCFCUL ) >> 2 ) + ( ( b & 0xFCFCFCFCUL ) >> 2 )		6773631	0		=			
ANR	6773859	Identifier	h0		6773631	0					
ANR	6773860	AdditiveExpression	( ( a & 0xFCFCFCFCUL ) >> 2 ) + ( ( b & 0xFCFCFCFCUL ) >> 2 )		6773631	1		+			
ANR	6773861	ShiftExpression	( a & 0xFCFCFCFCUL ) >> 2		6773631	0		>>			
ANR	6773862	BitAndExpression	a & 0xFCFCFCFCUL		6773631	0		&			
ANR	6773863	Identifier	a		6773631	0					
ANR	6773864	PrimaryExpression	0xFCFCFCFCUL		6773631	1					
ANR	6773865	PrimaryExpression	2		6773631	1					
ANR	6773866	ShiftExpression	( b & 0xFCFCFCFCUL ) >> 2		6773631	1		>>			
ANR	6773867	BitAndExpression	b & 0xFCFCFCFCUL		6773631	0		&			
ANR	6773868	Identifier	b		6773631	0					
ANR	6773869	PrimaryExpression	0xFCFCFCFCUL		6773631	1					
ANR	6773870	PrimaryExpression	2		6773631	1					
ANR	6773871	ExpressionStatement	* ( ( uint32_t * ) block ) = h0 + h1 + ( ( ( l0 + l1 ) >> 2 ) & 0x0F0F0F0FUL )	61:8:1424:1502	6773631	11	True				
ANR	6773872	AssignmentExpression	* ( ( uint32_t * ) block ) = h0 + h1 + ( ( ( l0 + l1 ) >> 2 ) & 0x0F0F0F0FUL )		6773631	0		=			
ANR	6773873	UnaryOperationExpression	* ( ( uint32_t * ) block )		6773631	0					
ANR	6773874	UnaryOperator	*		6773631	0					
ANR	6773875	CastExpression	( uint32_t * ) block		6773631	1					
ANR	6773876	CastTarget	uint32_t *		6773631	0					
ANR	6773877	Identifier	block		6773631	1					
ANR	6773878	AdditiveExpression	h0 + h1 + ( ( ( l0 + l1 ) >> 2 ) & 0x0F0F0F0FUL )		6773631	1		+			
ANR	6773879	Identifier	h0		6773631	0					
ANR	6773880	AdditiveExpression	h1 + ( ( ( l0 + l1 ) >> 2 ) & 0x0F0F0F0FUL )		6773631	1		+			
ANR	6773881	Identifier	h1		6773631	0					
ANR	6773882	BitAndExpression	( ( l0 + l1 ) >> 2 ) & 0x0F0F0F0FUL		6773631	1		&			
ANR	6773883	ShiftExpression	( l0 + l1 ) >> 2		6773631	0		>>			
ANR	6773884	AdditiveExpression	l0 + l1		6773631	0		+			
ANR	6773885	Identifier	l0		6773631	0					
ANR	6773886	Identifier	l1		6773631	1					
ANR	6773887	PrimaryExpression	2		6773631	1					
ANR	6773888	PrimaryExpression	0x0F0F0F0FUL		6773631	1					
ANR	6773889	ExpressionStatement	pixels += line_size	65:8:1513:1532	6773631	12	True				
ANR	6773890	AssignmentExpression	pixels += line_size		6773631	0		+=			
ANR	6773891	Identifier	pixels		6773631	0					
ANR	6773892	Identifier	line_size		6773631	1					
ANR	6773893	ExpressionStatement	block += line_size	67:8:1543:1561	6773631	13	True				
ANR	6773894	AssignmentExpression	block += line_size		6773631	0		+=			
ANR	6773895	Identifier	block		6773631	0					
ANR	6773896	Identifier	line_size		6773631	1					
ANR	6773897	ExpressionStatement	pixels += 4 - line_size * ( h + 1 )	69:8:1572:1605	6773631	8	True				
ANR	6773898	AssignmentExpression	pixels += 4 - line_size * ( h + 1 )		6773631	0		+=			
ANR	6773899	Identifier	pixels		6773631	0					
ANR	6773900	AdditiveExpression	4 - line_size * ( h + 1 )		6773631	1		-			
ANR	6773901	PrimaryExpression	4		6773631	0					
ANR	6773902	MultiplicativeExpression	line_size * ( h + 1 )		6773631	1		*			
ANR	6773903	Identifier	line_size		6773631	0					
ANR	6773904	AdditiveExpression	h + 1		6773631	1		+			
ANR	6773905	Identifier	h		6773631	0					
ANR	6773906	PrimaryExpression	1		6773631	1					
ANR	6773907	ExpressionStatement	block += 4 - line_size * h	71:6:1614:1640	6773631	9	True				
ANR	6773908	AssignmentExpression	block += 4 - line_size * h		6773631	0		+=			
ANR	6773909	Identifier	block		6773631	0					
ANR	6773910	AdditiveExpression	4 - line_size * h		6773631	1		-			
ANR	6773911	PrimaryExpression	4		6773631	0					
ANR	6773912	MultiplicativeExpression	line_size * h		6773631	1		*			
ANR	6773913	Identifier	line_size		6773631	0					
ANR	6773914	Identifier	h		6773631	1					
ANR	6773915	ExpressionStatement	"POWERPC_TBL_STOP_COUNT ( altivec_put_no_rnd_pixels8_xy2_num , 1 )"	77:0:1656:1717	6773631	4	True				
ANR	6773916	CallExpression	"POWERPC_TBL_STOP_COUNT ( altivec_put_no_rnd_pixels8_xy2_num , 1 )"		6773631	0					
ANR	6773917	Callee	POWERPC_TBL_STOP_COUNT		6773631	0					
ANR	6773918	Identifier	POWERPC_TBL_STOP_COUNT		6773631	0					
ANR	6773919	ArgumentList	altivec_put_no_rnd_pixels8_xy2_num		6773631	1					
ANR	6773920	Argument	altivec_put_no_rnd_pixels8_xy2_num		6773631	0					
ANR	6773921	Identifier	altivec_put_no_rnd_pixels8_xy2_num		6773631	0					
ANR	6773922	Argument	1		6773631	1					
ANR	6773923	PrimaryExpression	1		6773631	0					
ANR	6773924	ReturnType	void		6773631	1					
ANR	6773925	Identifier	put_no_rnd_pixels8_xy2_altivec		6773631	2					
ANR	6773926	ParameterList	"uint8_t * block , const uint8_t * pixels , int line_size , int h"		6773631	3					
ANR	6773927	Parameter	uint8_t * block	1:36:36:49	6773631	0	True				
ANR	6773928	ParameterType	uint8_t *		6773631	0					
ANR	6773929	Identifier	block		6773631	1					
ANR	6773930	Parameter	const uint8_t * pixels	1:52:52:72	6773631	1	True				
ANR	6773931	ParameterType	const uint8_t *		6773631	0					
ANR	6773932	Identifier	pixels		6773631	1					
ANR	6773933	Parameter	int line_size	1:75:75:87	6773631	2	True				
ANR	6773934	ParameterType	int		6773631	0					
ANR	6773935	Identifier	line_size		6773631	1					
ANR	6773936	Parameter	int h	1:90:90:94	6773631	3	True				
ANR	6773937	ParameterType	int		6773631	0					
ANR	6773938	Identifier	h		6773631	1					
ANR	6773939	CFGEntryNode	ENTRY		6773631		True				
ANR	6773940	CFGExitNode	EXIT		6773631		True				
ANR	6773941	Symbol	a		6773631						
ANR	6773942	Symbol	b		6773631						
ANR	6773943	Symbol	( ( const struct unaligned_32 * ) ( pixels ) ) -> l		6773631						
ANR	6773944	Symbol	l0		6773631						
ANR	6773945	Symbol	l1		6773631						
ANR	6773946	Symbol	* ( ( uint32_t * ) block )		6773631						
ANR	6773947	Symbol	h		6773631						
ANR	6773948	Symbol	( ( const struct unaligned_32 * ) ( pixels + 1 ) ) -> l		6773631						
ANR	6773949	Symbol	h0		6773631						
ANR	6773950	Symbol	i		6773631						
ANR	6773951	Symbol	h1		6773631						
ANR	6773952	Symbol	j		6773631						
ANR	6773953	Symbol	* block		6773631						
ANR	6773954	Symbol	pixels		6773631						
ANR	6773955	Symbol	* pixels		6773631						
ANR	6773956	Symbol	altivec_put_no_rnd_pixels8_xy2_num		6773631						
ANR	6773957	Symbol	block		6773631						
ANR	6773958	Symbol	line_size		6773631						
