command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6758664	File	/home/p4ultr4n/workplace/ReVeal/raw_code/psy_lame_window_01_0.c								
ANR	6758665	Function	psy_lame_window	1:0:0:6870							
ANR	6758666	FunctionDef	"psy_lame_window (FFPsyContext * ctx , const float * audio , const float * la , int channel , int prev_type)"		6758665	0					
ANR	6758667	CompoundStatement		5:0:164:6870	6758665	0					
ANR	6758668	IdentifierDeclStatement	AacPsyContext * pctx = ( AacPsyContext * ) ctx -> model_priv_data ;	7:4:171:230	6758665	0	True				
ANR	6758669	IdentifierDecl	* pctx = ( AacPsyContext * ) ctx -> model_priv_data		6758665	0					
ANR	6758670	IdentifierDeclType	AacPsyContext *		6758665	0					
ANR	6758671	Identifier	pctx		6758665	1					
ANR	6758672	AssignmentExpression	* pctx = ( AacPsyContext * ) ctx -> model_priv_data		6758665	2		=			
ANR	6758673	Identifier	pctx		6758665	0					
ANR	6758674	CastExpression	( AacPsyContext * ) ctx -> model_priv_data		6758665	1					
ANR	6758675	CastTarget	AacPsyContext *		6758665	0					
ANR	6758676	PtrMemberAccess	ctx -> model_priv_data		6758665	1					
ANR	6758677	Identifier	ctx		6758665	0					
ANR	6758678	Identifier	model_priv_data		6758665	1					
ANR	6758679	IdentifierDeclStatement	AacPsyChannel * pch = & pctx -> ch [ channel ] ;	9:4:237:277	6758665	1	True				
ANR	6758680	IdentifierDecl	* pch = & pctx -> ch [ channel ]		6758665	0					
ANR	6758681	IdentifierDeclType	AacPsyChannel *		6758665	0					
ANR	6758682	Identifier	pch		6758665	1					
ANR	6758683	AssignmentExpression	* pch = & pctx -> ch [ channel ]		6758665	2		=			
ANR	6758684	Identifier	pch		6758665	0					
ANR	6758685	UnaryOperationExpression	& pctx -> ch [ channel ]		6758665	1					
ANR	6758686	UnaryOperator	&		6758665	0					
ANR	6758687	ArrayIndexing	pctx -> ch [ channel ]		6758665	1					
ANR	6758688	PtrMemberAccess	pctx -> ch		6758665	0					
ANR	6758689	Identifier	pctx		6758665	0					
ANR	6758690	Identifier	ch		6758665	1					
ANR	6758691	Identifier	channel		6758665	1					
ANR	6758692	IdentifierDeclStatement	int grouping = 0 ;	11:4:284:304	6758665	2	True				
ANR	6758693	IdentifierDecl	grouping = 0		6758665	0					
ANR	6758694	IdentifierDeclType	int		6758665	0					
ANR	6758695	Identifier	grouping		6758665	1					
ANR	6758696	AssignmentExpression	grouping = 0		6758665	2		=			
ANR	6758697	Identifier	grouping		6758665	0					
ANR	6758698	PrimaryExpression	0		6758665	1					
ANR	6758699	IdentifierDeclStatement	int uselongblock = 1 ;	13:4:311:331	6758665	3	True				
ANR	6758700	IdentifierDecl	uselongblock = 1		6758665	0					
ANR	6758701	IdentifierDeclType	int		6758665	0					
ANR	6758702	Identifier	uselongblock		6758665	1					
ANR	6758703	AssignmentExpression	uselongblock = 1		6758665	2		=			
ANR	6758704	Identifier	uselongblock		6758665	0					
ANR	6758705	PrimaryExpression	1		6758665	1					
ANR	6758706	IdentifierDeclStatement	int attacks [ AAC_NUM_BLOCKS_SHORT + 1 ] = { 0 } ;	15:4:338:383	6758665	4	True				
ANR	6758707	IdentifierDecl	attacks [ AAC_NUM_BLOCKS_SHORT + 1 ] = { 0 }		6758665	0					
ANR	6758708	IdentifierDeclType	int [ AAC_NUM_BLOCKS_SHORT + 1 ]		6758665	0					
ANR	6758709	Identifier	attacks		6758665	1					
ANR	6758710	AdditiveExpression	AAC_NUM_BLOCKS_SHORT + 1		6758665	2		+			
ANR	6758711	Identifier	AAC_NUM_BLOCKS_SHORT		6758665	0					
ANR	6758712	PrimaryExpression	1		6758665	1					
ANR	6758713	AssignmentExpression	attacks [ AAC_NUM_BLOCKS_SHORT + 1 ] = { 0 }		6758665	3		=			
ANR	6758714	Identifier	attacks		6758665	0					
ANR	6758715	InitializerList	0		6758665	1					
ANR	6758716	PrimaryExpression	0		6758665	0					
ANR	6758717	IdentifierDeclStatement	float clippings [ AAC_NUM_BLOCKS_SHORT ] ;	17:4:390:427	6758665	5	True				
ANR	6758718	IdentifierDecl	clippings [ AAC_NUM_BLOCKS_SHORT ]		6758665	0					
ANR	6758719	IdentifierDeclType	float [ AAC_NUM_BLOCKS_SHORT ]		6758665	0					
ANR	6758720	Identifier	clippings		6758665	1					
ANR	6758721	Identifier	AAC_NUM_BLOCKS_SHORT		6758665	2					
ANR	6758722	IdentifierDeclStatement	int i ;	19:4:434:439	6758665	6	True				
ANR	6758723	IdentifierDecl	i		6758665	0					
ANR	6758724	IdentifierDeclType	int		6758665	0					
ANR	6758725	Identifier	i		6758665	1					
ANR	6758726	IdentifierDeclStatement	FFPsyWindowInfo wi = { { 0 } } ;	21:4:446:476	6758665	7	True				
ANR	6758727	IdentifierDecl	wi = { { 0 } }		6758665	0					
ANR	6758728	IdentifierDeclType	FFPsyWindowInfo		6758665	0					
ANR	6758729	Identifier	wi		6758665	1					
ANR	6758730	AssignmentExpression	wi = { { 0 } }		6758665	2		=			
ANR	6758731	Identifier	wi		6758665	0					
ANR	6758732	InitializerList	0		6758665	1					
ANR	6758733	InitializerList	0		6758665	0					
ANR	6758734	PrimaryExpression	0		6758665	0					
ANR	6758735	IfStatement	if ( la )		6758665	8					
ANR	6758736	Condition	la	25:8:489:490	6758665	0	True				
ANR	6758737	Identifier	la		6758665	0					
ANR	6758738	CompoundStatement		35:8:735:750	6758665	1					
ANR	6758739	IdentifierDeclStatement	float hpfsmpl [ AAC_BLOCK_SIZE_LONG ] ;	27:8:504:538	6758665	0	True				
ANR	6758740	IdentifierDecl	hpfsmpl [ AAC_BLOCK_SIZE_LONG ]		6758665	0					
ANR	6758741	IdentifierDeclType	float [ AAC_BLOCK_SIZE_LONG ]		6758665	0					
ANR	6758742	Identifier	hpfsmpl		6758665	1					
ANR	6758743	Identifier	AAC_BLOCK_SIZE_LONG		6758665	2					
ANR	6758744	IdentifierDeclStatement	float const * pf = hpfsmpl ;	29:8:549:574	6758665	1	True				
ANR	6758745	IdentifierDecl	* pf = hpfsmpl		6758665	0					
ANR	6758746	IdentifierDeclType	float const *		6758665	0					
ANR	6758747	Identifier	pf		6758665	1					
ANR	6758748	AssignmentExpression	* pf = hpfsmpl		6758665	2		=			
ANR	6758749	Identifier	hpfsmpl		6758665	0					
ANR	6758750	Identifier	hpfsmpl		6758665	1					
ANR	6758751	IdentifierDeclStatement	float attack_intensity [ ( AAC_NUM_BLOCKS_SHORT + 1 ) * PSY_LAME_NUM_SUBBLOCKS ] ;	31:8:585:660	6758665	2	True				
ANR	6758752	IdentifierDecl	attack_intensity [ ( AAC_NUM_BLOCKS_SHORT + 1 ) * PSY_LAME_NUM_SUBBLOCKS ]		6758665	0					
ANR	6758753	IdentifierDeclType	float [ ( AAC_NUM_BLOCKS_SHORT + 1 ) * PSY_LAME_NUM_SUBBLOCKS ]		6758665	0					
ANR	6758754	Identifier	attack_intensity		6758665	1					
ANR	6758755	MultiplicativeExpression	( AAC_NUM_BLOCKS_SHORT + 1 ) * PSY_LAME_NUM_SUBBLOCKS		6758665	2		*			
ANR	6758756	AdditiveExpression	AAC_NUM_BLOCKS_SHORT + 1		6758665	0		+			
ANR	6758757	Identifier	AAC_NUM_BLOCKS_SHORT		6758665	0					
ANR	6758758	PrimaryExpression	1		6758665	1					
ANR	6758759	Identifier	PSY_LAME_NUM_SUBBLOCKS		6758665	1					
ANR	6758760	IdentifierDeclStatement	float energy_subshort [ ( AAC_NUM_BLOCKS_SHORT + 1 ) * PSY_LAME_NUM_SUBBLOCKS ] ;	33:8:671:745	6758665	3	True				
ANR	6758761	IdentifierDecl	energy_subshort [ ( AAC_NUM_BLOCKS_SHORT + 1 ) * PSY_LAME_NUM_SUBBLOCKS ]		6758665	0					
ANR	6758762	IdentifierDeclType	float [ ( AAC_NUM_BLOCKS_SHORT + 1 ) * PSY_LAME_NUM_SUBBLOCKS ]		6758665	0					
ANR	6758763	Identifier	energy_subshort		6758665	1					
ANR	6758764	MultiplicativeExpression	( AAC_NUM_BLOCKS_SHORT + 1 ) * PSY_LAME_NUM_SUBBLOCKS		6758665	2		*			
ANR	6758765	AdditiveExpression	AAC_NUM_BLOCKS_SHORT + 1		6758665	0		+			
ANR	6758766	Identifier	AAC_NUM_BLOCKS_SHORT		6758665	0					
ANR	6758767	PrimaryExpression	1		6758665	1					
ANR	6758768	Identifier	PSY_LAME_NUM_SUBBLOCKS		6758665	1					
ANR	6758769	IdentifierDeclStatement	float energy_short [ AAC_NUM_BLOCKS_SHORT + 1 ] = { 0 } ;	35:8:756:808	6758665	4	True				
ANR	6758770	IdentifierDecl	energy_short [ AAC_NUM_BLOCKS_SHORT + 1 ] = { 0 }		6758665	0					
ANR	6758771	IdentifierDeclType	float [ AAC_NUM_BLOCKS_SHORT + 1 ]		6758665	0					
ANR	6758772	Identifier	energy_short		6758665	1					
ANR	6758773	AdditiveExpression	AAC_NUM_BLOCKS_SHORT + 1		6758665	2		+			
ANR	6758774	Identifier	AAC_NUM_BLOCKS_SHORT		6758665	0					
ANR	6758775	PrimaryExpression	1		6758665	1					
ANR	6758776	AssignmentExpression	energy_short [ AAC_NUM_BLOCKS_SHORT + 1 ] = { 0 }		6758665	3		=			
ANR	6758777	Identifier	energy_short		6758665	0					
ANR	6758778	InitializerList	0		6758665	1					
ANR	6758779	PrimaryExpression	0		6758665	0					
ANR	6758780	IdentifierDeclStatement	const float * firbuf = la + ( AAC_BLOCK_SIZE_SHORT / 4 - PSY_LAME_FIR_LEN ) ;	37:8:819:889	6758665	5	True				
ANR	6758781	IdentifierDecl	* firbuf = la + ( AAC_BLOCK_SIZE_SHORT / 4 - PSY_LAME_FIR_LEN )		6758665	0					
ANR	6758782	IdentifierDeclType	const float *		6758665	0					
ANR	6758783	Identifier	firbuf		6758665	1					
ANR	6758784	AssignmentExpression	* firbuf = la + ( AAC_BLOCK_SIZE_SHORT / 4 - PSY_LAME_FIR_LEN )		6758665	2		=			
ANR	6758785	Identifier	firbuf		6758665	0					
ANR	6758786	AdditiveExpression	la + ( AAC_BLOCK_SIZE_SHORT / 4 - PSY_LAME_FIR_LEN )		6758665	1		+			
ANR	6758787	Identifier	la		6758665	0					
ANR	6758788	AdditiveExpression	AAC_BLOCK_SIZE_SHORT / 4 - PSY_LAME_FIR_LEN		6758665	1		-			
ANR	6758789	MultiplicativeExpression	AAC_BLOCK_SIZE_SHORT / 4		6758665	0		/			
ANR	6758790	Identifier	AAC_BLOCK_SIZE_SHORT		6758665	0					
ANR	6758791	PrimaryExpression	4		6758665	1					
ANR	6758792	Identifier	PSY_LAME_FIR_LEN		6758665	1					
ANR	6758793	IdentifierDeclStatement	int att_sum = 0 ;	39:8:900:915	6758665	6	True				
ANR	6758794	IdentifierDecl	att_sum = 0		6758665	0					
ANR	6758795	IdentifierDeclType	int		6758665	0					
ANR	6758796	Identifier	att_sum		6758665	1					
ANR	6758797	AssignmentExpression	att_sum = 0		6758665	2		=			
ANR	6758798	Identifier	att_sum		6758665	0					
ANR	6758799	PrimaryExpression	0		6758665	1					
ANR	6758800	ExpressionStatement	"psy_hp_filter ( firbuf , hpfsmpl , psy_fir_coeffs )"	45:8:988:1034	6758665	7	True				
ANR	6758801	CallExpression	"psy_hp_filter ( firbuf , hpfsmpl , psy_fir_coeffs )"		6758665	0					
ANR	6758802	Callee	psy_hp_filter		6758665	0					
ANR	6758803	Identifier	psy_hp_filter		6758665	0					
ANR	6758804	ArgumentList	firbuf		6758665	1					
ANR	6758805	Argument	firbuf		6758665	0					
ANR	6758806	Identifier	firbuf		6758665	0					
ANR	6758807	Argument	hpfsmpl		6758665	1					
ANR	6758808	Identifier	hpfsmpl		6758665	0					
ANR	6758809	Argument	psy_fir_coeffs		6758665	2					
ANR	6758810	Identifier	psy_fir_coeffs		6758665	0					
ANR	6758811	ForStatement	for ( i = 0 ; i < PSY_LAME_NUM_SUBBLOCKS ; i ++ )		6758665	8					
ANR	6758812	ForInit	i = 0 ;	51:13:1113:1118	6758665	0	True				
ANR	6758813	AssignmentExpression	i = 0		6758665	0		=			
ANR	6758814	Identifier	i		6758665	0					
ANR	6758815	PrimaryExpression	0		6758665	1					
ANR	6758816	Condition	i < PSY_LAME_NUM_SUBBLOCKS	51:20:1120:1145	6758665	1	True				
ANR	6758817	RelationalExpression	i < PSY_LAME_NUM_SUBBLOCKS		6758665	0		<			
ANR	6758818	Identifier	i		6758665	0					
ANR	6758819	Identifier	PSY_LAME_NUM_SUBBLOCKS		6758665	1					
ANR	6758820	PostIncDecOperationExpression	i ++	51:48:1148:1150	6758665	2	True				
ANR	6758821	Identifier	i		6758665	0					
ANR	6758822	IncDec	++		6758665	1					
ANR	6758823	CompoundStatement		47:53:988:988	6758665	3					
ANR	6758824	ExpressionStatement	energy_subshort [ i ] = pch -> prev_energy_subshort [ i + ( ( AAC_NUM_BLOCKS_SHORT - 1 ) * PSY_LAME_NUM_SUBBLOCKS ) ]	53:12:1168:1273	6758665	0	True				
ANR	6758825	AssignmentExpression	energy_subshort [ i ] = pch -> prev_energy_subshort [ i + ( ( AAC_NUM_BLOCKS_SHORT - 1 ) * PSY_LAME_NUM_SUBBLOCKS ) ]		6758665	0		=			
ANR	6758826	ArrayIndexing	energy_subshort [ i ]		6758665	0					
ANR	6758827	Identifier	energy_subshort		6758665	0					
ANR	6758828	Identifier	i		6758665	1					
ANR	6758829	ArrayIndexing	pch -> prev_energy_subshort [ i + ( ( AAC_NUM_BLOCKS_SHORT - 1 ) * PSY_LAME_NUM_SUBBLOCKS ) ]		6758665	1					
ANR	6758830	PtrMemberAccess	pch -> prev_energy_subshort		6758665	0					
ANR	6758831	Identifier	pch		6758665	0					
ANR	6758832	Identifier	prev_energy_subshort		6758665	1					
ANR	6758833	AdditiveExpression	i + ( ( AAC_NUM_BLOCKS_SHORT - 1 ) * PSY_LAME_NUM_SUBBLOCKS )		6758665	1		+			
ANR	6758834	Identifier	i		6758665	0					
ANR	6758835	MultiplicativeExpression	( AAC_NUM_BLOCKS_SHORT - 1 ) * PSY_LAME_NUM_SUBBLOCKS		6758665	1		*			
ANR	6758836	AdditiveExpression	AAC_NUM_BLOCKS_SHORT - 1		6758665	0		-			
ANR	6758837	Identifier	AAC_NUM_BLOCKS_SHORT		6758665	0					
ANR	6758838	PrimaryExpression	1		6758665	1					
ANR	6758839	Identifier	PSY_LAME_NUM_SUBBLOCKS		6758665	1					
ANR	6758840	ExpressionStatement	assert ( pch -> prev_energy_subshort [ i + ( ( AAC_NUM_BLOCKS_SHORT - 2 ) * PSY_LAME_NUM_SUBBLOCKS + 1 ) ] > 0 )	55:12:1288:1388	6758665	1	True				
ANR	6758841	CallExpression	assert ( pch -> prev_energy_subshort [ i + ( ( AAC_NUM_BLOCKS_SHORT - 2 ) * PSY_LAME_NUM_SUBBLOCKS + 1 ) ] > 0 )		6758665	0					
ANR	6758842	Callee	assert		6758665	0					
ANR	6758843	Identifier	assert		6758665	0					
ANR	6758844	ArgumentList	pch -> prev_energy_subshort [ i + ( ( AAC_NUM_BLOCKS_SHORT - 2 ) * PSY_LAME_NUM_SUBBLOCKS + 1 ) ] > 0		6758665	1					
ANR	6758845	Argument	pch -> prev_energy_subshort [ i + ( ( AAC_NUM_BLOCKS_SHORT - 2 ) * PSY_LAME_NUM_SUBBLOCKS + 1 ) ] > 0		6758665	0					
ANR	6758846	RelationalExpression	pch -> prev_energy_subshort [ i + ( ( AAC_NUM_BLOCKS_SHORT - 2 ) * PSY_LAME_NUM_SUBBLOCKS + 1 ) ] > 0		6758665	0		>			
ANR	6758847	ArrayIndexing	pch -> prev_energy_subshort [ i + ( ( AAC_NUM_BLOCKS_SHORT - 2 ) * PSY_LAME_NUM_SUBBLOCKS + 1 ) ]		6758665	0					
ANR	6758848	PtrMemberAccess	pch -> prev_energy_subshort		6758665	0					
ANR	6758849	Identifier	pch		6758665	0					
ANR	6758850	Identifier	prev_energy_subshort		6758665	1					
ANR	6758851	AdditiveExpression	i + ( ( AAC_NUM_BLOCKS_SHORT - 2 ) * PSY_LAME_NUM_SUBBLOCKS + 1 )		6758665	1		+			
ANR	6758852	Identifier	i		6758665	0					
ANR	6758853	AdditiveExpression	( AAC_NUM_BLOCKS_SHORT - 2 ) * PSY_LAME_NUM_SUBBLOCKS + 1		6758665	1		+			
ANR	6758854	MultiplicativeExpression	( AAC_NUM_BLOCKS_SHORT - 2 ) * PSY_LAME_NUM_SUBBLOCKS		6758665	0		*			
ANR	6758855	AdditiveExpression	AAC_NUM_BLOCKS_SHORT - 2		6758665	0		-			
ANR	6758856	Identifier	AAC_NUM_BLOCKS_SHORT		6758665	0					
ANR	6758857	PrimaryExpression	2		6758665	1					
ANR	6758858	Identifier	PSY_LAME_NUM_SUBBLOCKS		6758665	1					
ANR	6758859	PrimaryExpression	1		6758665	1					
ANR	6758860	PrimaryExpression	0		6758665	1					
ANR	6758861	ExpressionStatement	attack_intensity [ i ] = energy_subshort [ i ] / pch -> prev_energy_subshort [ i + ( ( AAC_NUM_BLOCKS_SHORT - 2 ) * PSY_LAME_NUM_SUBBLOCKS + 1 ) ]	57:12:1403:1534	6758665	2	True				
ANR	6758862	AssignmentExpression	attack_intensity [ i ] = energy_subshort [ i ] / pch -> prev_energy_subshort [ i + ( ( AAC_NUM_BLOCKS_SHORT - 2 ) * PSY_LAME_NUM_SUBBLOCKS + 1 ) ]		6758665	0		=			
ANR	6758863	ArrayIndexing	attack_intensity [ i ]		6758665	0					
ANR	6758864	Identifier	attack_intensity		6758665	0					
ANR	6758865	Identifier	i		6758665	1					
ANR	6758866	MultiplicativeExpression	energy_subshort [ i ] / pch -> prev_energy_subshort [ i + ( ( AAC_NUM_BLOCKS_SHORT - 2 ) * PSY_LAME_NUM_SUBBLOCKS + 1 ) ]		6758665	1		/			
ANR	6758867	ArrayIndexing	energy_subshort [ i ]		6758665	0					
ANR	6758868	Identifier	energy_subshort		6758665	0					
ANR	6758869	Identifier	i		6758665	1					
ANR	6758870	ArrayIndexing	pch -> prev_energy_subshort [ i + ( ( AAC_NUM_BLOCKS_SHORT - 2 ) * PSY_LAME_NUM_SUBBLOCKS + 1 ) ]		6758665	1					
ANR	6758871	PtrMemberAccess	pch -> prev_energy_subshort		6758665	0					
ANR	6758872	Identifier	pch		6758665	0					
ANR	6758873	Identifier	prev_energy_subshort		6758665	1					
ANR	6758874	AdditiveExpression	i + ( ( AAC_NUM_BLOCKS_SHORT - 2 ) * PSY_LAME_NUM_SUBBLOCKS + 1 )		6758665	1		+			
ANR	6758875	Identifier	i		6758665	0					
ANR	6758876	AdditiveExpression	( AAC_NUM_BLOCKS_SHORT - 2 ) * PSY_LAME_NUM_SUBBLOCKS + 1		6758665	1		+			
ANR	6758877	MultiplicativeExpression	( AAC_NUM_BLOCKS_SHORT - 2 ) * PSY_LAME_NUM_SUBBLOCKS		6758665	0		*			
ANR	6758878	AdditiveExpression	AAC_NUM_BLOCKS_SHORT - 2		6758665	0		-			
ANR	6758879	Identifier	AAC_NUM_BLOCKS_SHORT		6758665	0					
ANR	6758880	PrimaryExpression	2		6758665	1					
ANR	6758881	Identifier	PSY_LAME_NUM_SUBBLOCKS		6758665	1					
ANR	6758882	PrimaryExpression	1		6758665	1					
ANR	6758883	ExpressionStatement	energy_short [ 0 ] += energy_subshort [ i ]	59:12:1549:1586	6758665	3	True				
ANR	6758884	AssignmentExpression	energy_short [ 0 ] += energy_subshort [ i ]		6758665	0		+=			
ANR	6758885	ArrayIndexing	energy_short [ 0 ]		6758665	0					
ANR	6758886	Identifier	energy_short		6758665	0					
ANR	6758887	PrimaryExpression	0		6758665	1					
ANR	6758888	ArrayIndexing	energy_subshort [ i ]		6758665	1					
ANR	6758889	Identifier	energy_subshort		6758665	0					
ANR	6758890	Identifier	i		6758665	1					
ANR	6758891	ForStatement	for ( i = 0 ; i < AAC_NUM_BLOCKS_SHORT * PSY_LAME_NUM_SUBBLOCKS ; i ++ )		6758665	9					
ANR	6758892	ForInit	i = 0 ;	65:13:1615:1620	6758665	0	True				
ANR	6758893	AssignmentExpression	i = 0		6758665	0		=			
ANR	6758894	Identifier	i		6758665	0					
ANR	6758895	PrimaryExpression	0		6758665	1					
ANR	6758896	Condition	i < AAC_NUM_BLOCKS_SHORT * PSY_LAME_NUM_SUBBLOCKS	65:20:1622:1670	6758665	1	True				
ANR	6758897	RelationalExpression	i < AAC_NUM_BLOCKS_SHORT * PSY_LAME_NUM_SUBBLOCKS		6758665	0		<			
ANR	6758898	Identifier	i		6758665	0					
ANR	6758899	MultiplicativeExpression	AAC_NUM_BLOCKS_SHORT * PSY_LAME_NUM_SUBBLOCKS		6758665	1		*			
ANR	6758900	Identifier	AAC_NUM_BLOCKS_SHORT		6758665	0					
ANR	6758901	Identifier	PSY_LAME_NUM_SUBBLOCKS		6758665	1					
ANR	6758902	PostIncDecOperationExpression	i ++	65:71:1673:1675	6758665	2	True				
ANR	6758903	Identifier	i		6758665	0					
ANR	6758904	IncDec	++		6758665	1					
ANR	6758905	CompoundStatement		65:12:1642:1656	6758665	3					
ANR	6758906	Statement	float	67:12:1693:1697	6758665	0	True				
ANR	6758907	Statement	const	67:18:1699:1703	6758665	1	True				
ANR	6758908	Statement	*	67:24:1705:1705	6758665	2	True				
ANR	6758909	Statement	const	67:25:1706:1710	6758665	3	True				
ANR	6758910	ExpressionStatement	pfe = pf + AAC_BLOCK_SIZE_LONG / ( AAC_NUM_BLOCKS_SHORT * PSY_LAME_NUM_SUBBLOCKS )	67:31:1712:1792	6758665	4	True				
ANR	6758911	AssignmentExpression	pfe = pf + AAC_BLOCK_SIZE_LONG / ( AAC_NUM_BLOCKS_SHORT * PSY_LAME_NUM_SUBBLOCKS )		6758665	0		=			
ANR	6758912	Identifier	pfe		6758665	0					
ANR	6758913	AdditiveExpression	pf + AAC_BLOCK_SIZE_LONG / ( AAC_NUM_BLOCKS_SHORT * PSY_LAME_NUM_SUBBLOCKS )		6758665	1		+			
ANR	6758914	Identifier	pf		6758665	0					
ANR	6758915	MultiplicativeExpression	AAC_BLOCK_SIZE_LONG / ( AAC_NUM_BLOCKS_SHORT * PSY_LAME_NUM_SUBBLOCKS )		6758665	1		/			
ANR	6758916	Identifier	AAC_BLOCK_SIZE_LONG		6758665	0					
ANR	6758917	MultiplicativeExpression	AAC_NUM_BLOCKS_SHORT * PSY_LAME_NUM_SUBBLOCKS		6758665	1		*			
ANR	6758918	Identifier	AAC_NUM_BLOCKS_SHORT		6758665	0					
ANR	6758919	Identifier	PSY_LAME_NUM_SUBBLOCKS		6758665	1					
ANR	6758920	IdentifierDeclStatement	float p = 1.0f ;	69:12:1807:1821	6758665	5	True				
ANR	6758921	IdentifierDecl	p = 1.0f		6758665	0					
ANR	6758922	IdentifierDeclType	float		6758665	0					
ANR	6758923	Identifier	p		6758665	1					
ANR	6758924	AssignmentExpression	p = 1.0f		6758665	2		=			
ANR	6758925	Identifier	p		6758665	0					
ANR	6758926	PrimaryExpression	1.0f		6758665	1					
ANR	6758927	ForStatement	for ( ; pf < pfe ; pf ++ )		6758665	6					
ANR	6758928	Condition	pf < pfe	71:19:1843:1850	6758665	0	True				
ANR	6758929	RelationalExpression	pf < pfe		6758665	0		<			
ANR	6758930	Identifier	pf		6758665	0					
ANR	6758931	Identifier	pfe		6758665	1					
ANR	6758932	PostIncDecOperationExpression	pf ++	71:29:1853:1856	6758665	1	True				
ANR	6758933	Identifier	pf		6758665	0					
ANR	6758934	IncDec	++		6758665	1					
ANR	6758935	ExpressionStatement	"p = FFMAX ( p , fabsf ( * pf ) )"	73:16:1876:1900	6758665	2	True				
ANR	6758936	AssignmentExpression	"p = FFMAX ( p , fabsf ( * pf ) )"		6758665	0		=			
ANR	6758937	Identifier	p		6758665	0					
ANR	6758938	CallExpression	"FFMAX ( p , fabsf ( * pf ) )"		6758665	1					
ANR	6758939	Callee	FFMAX		6758665	0					
ANR	6758940	Identifier	FFMAX		6758665	0					
ANR	6758941	ArgumentList	p		6758665	1					
ANR	6758942	Argument	p		6758665	0					
ANR	6758943	Identifier	p		6758665	0					
ANR	6758944	Argument	fabsf ( * pf )		6758665	1					
ANR	6758945	CallExpression	fabsf ( * pf )		6758665	0					
ANR	6758946	Callee	fabsf		6758665	0					
ANR	6758947	Identifier	fabsf		6758665	0					
ANR	6758948	ArgumentList	* pf		6758665	1					
ANR	6758949	Argument	* pf		6758665	0					
ANR	6758950	UnaryOperationExpression	* pf		6758665	0					
ANR	6758951	UnaryOperator	*		6758665	0					
ANR	6758952	Identifier	pf		6758665	1					
ANR	6758953	ExpressionStatement	pch -> prev_energy_subshort [ i ] = energy_subshort [ i + PSY_LAME_NUM_SUBBLOCKS ] = p	75:12:1915:1993	6758665	7	True				
ANR	6758954	AssignmentExpression	pch -> prev_energy_subshort [ i ] = energy_subshort [ i + PSY_LAME_NUM_SUBBLOCKS ] = p		6758665	0		=			
ANR	6758955	ArrayIndexing	pch -> prev_energy_subshort [ i ]		6758665	0					
ANR	6758956	PtrMemberAccess	pch -> prev_energy_subshort		6758665	0					
ANR	6758957	Identifier	pch		6758665	0					
ANR	6758958	Identifier	prev_energy_subshort		6758665	1					
ANR	6758959	Identifier	i		6758665	1					
ANR	6758960	AssignmentExpression	energy_subshort [ i + PSY_LAME_NUM_SUBBLOCKS ] = p		6758665	1		=			
ANR	6758961	ArrayIndexing	energy_subshort [ i + PSY_LAME_NUM_SUBBLOCKS ]		6758665	0					
ANR	6758962	Identifier	energy_subshort		6758665	0					
ANR	6758963	AdditiveExpression	i + PSY_LAME_NUM_SUBBLOCKS		6758665	1		+			
ANR	6758964	Identifier	i		6758665	0					
ANR	6758965	Identifier	PSY_LAME_NUM_SUBBLOCKS		6758665	1					
ANR	6758966	Identifier	p		6758665	1					
ANR	6758967	ExpressionStatement	energy_short [ 1 + i / PSY_LAME_NUM_SUBBLOCKS ] += p	77:12:2008:2057	6758665	8	True				
ANR	6758968	AssignmentExpression	energy_short [ 1 + i / PSY_LAME_NUM_SUBBLOCKS ] += p		6758665	0		+=			
ANR	6758969	ArrayIndexing	energy_short [ 1 + i / PSY_LAME_NUM_SUBBLOCKS ]		6758665	0					
ANR	6758970	Identifier	energy_short		6758665	0					
ANR	6758971	AdditiveExpression	1 + i / PSY_LAME_NUM_SUBBLOCKS		6758665	1		+			
ANR	6758972	PrimaryExpression	1		6758665	0					
ANR	6758973	MultiplicativeExpression	i / PSY_LAME_NUM_SUBBLOCKS		6758665	1		/			
ANR	6758974	Identifier	i		6758665	0					
ANR	6758975	Identifier	PSY_LAME_NUM_SUBBLOCKS		6758665	1					
ANR	6758976	Identifier	p		6758665	1					
ANR	6758977	IfStatement	if ( p > energy_subshort [ i + 1 ] )		6758665	9					
ANR	6758978	Condition	p > energy_subshort [ i + 1 ]	93:16:2581:2606	6758665	0	True				
ANR	6758979	RelationalExpression	p > energy_subshort [ i + 1 ]		6758665	0		>			
ANR	6758980	Identifier	p		6758665	0					
ANR	6758981	ArrayIndexing	energy_subshort [ i + 1 ]		6758665	1					
ANR	6758982	Identifier	energy_subshort		6758665	0					
ANR	6758983	AdditiveExpression	i + 1		6758665	1		+			
ANR	6758984	Identifier	i		6758665	0					
ANR	6758985	PrimaryExpression	1		6758665	1					
ANR	6758986	ExpressionStatement	p = p / energy_subshort [ i + 1 ]	95:16:2626:2656	6758665	1	True				
ANR	6758987	AssignmentExpression	p = p / energy_subshort [ i + 1 ]		6758665	0		=			
ANR	6758988	Identifier	p		6758665	0					
ANR	6758989	MultiplicativeExpression	p / energy_subshort [ i + 1 ]		6758665	1		/			
ANR	6758990	Identifier	p		6758665	0					
ANR	6758991	ArrayIndexing	energy_subshort [ i + 1 ]		6758665	1					
ANR	6758992	Identifier	energy_subshort		6758665	0					
ANR	6758993	AdditiveExpression	i + 1		6758665	1		+			
ANR	6758994	Identifier	i		6758665	0					
ANR	6758995	PrimaryExpression	1		6758665	1					
ANR	6758996	ElseStatement	else		6758665	0					
ANR	6758997	IfStatement	if ( energy_subshort [ i + 1 ] > p * 10.0f )		6758665	0					
ANR	6758998	Condition	energy_subshort [ i + 1 ] > p * 10.0f	97:21:2680:2713	6758665	0	True				
ANR	6758999	RelationalExpression	energy_subshort [ i + 1 ] > p * 10.0f		6758665	0		>			
ANR	6759000	ArrayIndexing	energy_subshort [ i + 1 ]		6758665	0					
ANR	6759001	Identifier	energy_subshort		6758665	0					
ANR	6759002	AdditiveExpression	i + 1		6758665	1		+			
ANR	6759003	Identifier	i		6758665	0					
ANR	6759004	PrimaryExpression	1		6758665	1					
ANR	6759005	MultiplicativeExpression	p * 10.0f		6758665	1		*			
ANR	6759006	Identifier	p		6758665	0					
ANR	6759007	PrimaryExpression	10.0f		6758665	1					
ANR	6759008	ExpressionStatement	p = energy_subshort [ i + 1 ] / ( p * 10.0f )	99:16:2733:2773	6758665	1	True				
ANR	6759009	AssignmentExpression	p = energy_subshort [ i + 1 ] / ( p * 10.0f )		6758665	0		=			
ANR	6759010	Identifier	p		6758665	0					
ANR	6759011	MultiplicativeExpression	energy_subshort [ i + 1 ] / ( p * 10.0f )		6758665	1		/			
ANR	6759012	ArrayIndexing	energy_subshort [ i + 1 ]		6758665	0					
ANR	6759013	Identifier	energy_subshort		6758665	0					
ANR	6759014	AdditiveExpression	i + 1		6758665	1		+			
ANR	6759015	Identifier	i		6758665	0					
ANR	6759016	PrimaryExpression	1		6758665	1					
ANR	6759017	MultiplicativeExpression	p * 10.0f		6758665	1		*			
ANR	6759018	Identifier	p		6758665	0					
ANR	6759019	PrimaryExpression	10.0f		6758665	1					
ANR	6759020	ElseStatement	else		6758665	0					
ANR	6759021	ExpressionStatement	p = 0.0	103:16:2810:2817	6758665	0	True				
ANR	6759022	AssignmentExpression	p = 0.0		6758665	0		=			
ANR	6759023	Identifier	p		6758665	0					
ANR	6759024	PrimaryExpression	0.0		6758665	1					
ANR	6759025	ExpressionStatement	attack_intensity [ i + PSY_LAME_NUM_SUBBLOCKS ] = p	105:12:2832:2880	6758665	10	True				
ANR	6759026	AssignmentExpression	attack_intensity [ i + PSY_LAME_NUM_SUBBLOCKS ] = p		6758665	0		=			
ANR	6759027	ArrayIndexing	attack_intensity [ i + PSY_LAME_NUM_SUBBLOCKS ]		6758665	0					
ANR	6759028	Identifier	attack_intensity		6758665	0					
ANR	6759029	AdditiveExpression	i + PSY_LAME_NUM_SUBBLOCKS		6758665	1		+			
ANR	6759030	Identifier	i		6758665	0					
ANR	6759031	Identifier	PSY_LAME_NUM_SUBBLOCKS		6758665	1					
ANR	6759032	Identifier	p		6758665	1					
ANR	6759033	ForStatement	for ( i = 0 ; i < ( AAC_NUM_BLOCKS_SHORT + 1 ) * PSY_LAME_NUM_SUBBLOCKS ; i ++ )		6758665	10					
ANR	6759034	ForInit	i = 0 ;	113:13:2964:2969	6758665	0	True				
ANR	6759035	AssignmentExpression	i = 0		6758665	0		=			
ANR	6759036	Identifier	i		6758665	0					
ANR	6759037	PrimaryExpression	0		6758665	1					
ANR	6759038	Condition	i < ( AAC_NUM_BLOCKS_SHORT + 1 ) * PSY_LAME_NUM_SUBBLOCKS	113:20:2971:3025	6758665	1	True				
ANR	6759039	RelationalExpression	i < ( AAC_NUM_BLOCKS_SHORT + 1 ) * PSY_LAME_NUM_SUBBLOCKS		6758665	0		<			
ANR	6759040	Identifier	i		6758665	0					
ANR	6759041	MultiplicativeExpression	( AAC_NUM_BLOCKS_SHORT + 1 ) * PSY_LAME_NUM_SUBBLOCKS		6758665	1		*			
ANR	6759042	AdditiveExpression	AAC_NUM_BLOCKS_SHORT + 1		6758665	0		+			
ANR	6759043	Identifier	AAC_NUM_BLOCKS_SHORT		6758665	0					
ANR	6759044	PrimaryExpression	1		6758665	1					
ANR	6759045	Identifier	PSY_LAME_NUM_SUBBLOCKS		6758665	1					
ANR	6759046	PostIncDecOperationExpression	i ++	113:77:3028:3030	6758665	2	True				
ANR	6759047	Identifier	i		6758665	0					
ANR	6759048	IncDec	++		6758665	1					
ANR	6759049	IfStatement	if ( ! attacks [ i / PSY_LAME_NUM_SUBBLOCKS ] )		6758665	3					
ANR	6759050	Condition	! attacks [ i / PSY_LAME_NUM_SUBBLOCKS ]	115:16:3050:3085	6758665	0	True				
ANR	6759051	UnaryOperationExpression	! attacks [ i / PSY_LAME_NUM_SUBBLOCKS ]		6758665	0					
ANR	6759052	UnaryOperator	!		6758665	0					
ANR	6759053	ArrayIndexing	attacks [ i / PSY_LAME_NUM_SUBBLOCKS ]		6758665	1					
ANR	6759054	Identifier	attacks		6758665	0					
ANR	6759055	MultiplicativeExpression	i / PSY_LAME_NUM_SUBBLOCKS		6758665	1		/			
ANR	6759056	Identifier	i		6758665	0					
ANR	6759057	Identifier	PSY_LAME_NUM_SUBBLOCKS		6758665	1					
ANR	6759058	IfStatement	if ( attack_intensity [ i ] > pch -> attack_threshold )		6758665	1					
ANR	6759059	Condition	attack_intensity [ i ] > pch -> attack_threshold	117:20:3109:3151	6758665	0	True				
ANR	6759060	RelationalExpression	attack_intensity [ i ] > pch -> attack_threshold		6758665	0		>			
ANR	6759061	ArrayIndexing	attack_intensity [ i ]		6758665	0					
ANR	6759062	Identifier	attack_intensity		6758665	0					
ANR	6759063	Identifier	i		6758665	1					
ANR	6759064	PtrMemberAccess	pch -> attack_threshold		6758665	1					
ANR	6759065	Identifier	pch		6758665	0					
ANR	6759066	Identifier	attack_threshold		6758665	1					
ANR	6759067	ExpressionStatement	attacks [ i / PSY_LAME_NUM_SUBBLOCKS ] = ( i % PSY_LAME_NUM_SUBBLOCKS ) + 1	119:20:3175:3245	6758665	1	True				
ANR	6759068	AssignmentExpression	attacks [ i / PSY_LAME_NUM_SUBBLOCKS ] = ( i % PSY_LAME_NUM_SUBBLOCKS ) + 1		6758665	0		=			
ANR	6759069	ArrayIndexing	attacks [ i / PSY_LAME_NUM_SUBBLOCKS ]		6758665	0					
ANR	6759070	Identifier	attacks		6758665	0					
ANR	6759071	MultiplicativeExpression	i / PSY_LAME_NUM_SUBBLOCKS		6758665	1		/			
ANR	6759072	Identifier	i		6758665	0					
ANR	6759073	Identifier	PSY_LAME_NUM_SUBBLOCKS		6758665	1					
ANR	6759074	AdditiveExpression	( i % PSY_LAME_NUM_SUBBLOCKS ) + 1		6758665	1		+			
ANR	6759075	MultiplicativeExpression	i % PSY_LAME_NUM_SUBBLOCKS		6758665	0		%			
ANR	6759076	Identifier	i		6758665	0					
ANR	6759077	Identifier	PSY_LAME_NUM_SUBBLOCKS		6758665	1					
ANR	6759078	PrimaryExpression	1		6758665	1					
ANR	6759079	ForStatement	for ( i = 1 ; i < AAC_NUM_BLOCKS_SHORT + 1 ; i ++ )		6758665	11					
ANR	6759080	ForInit	i = 1 ;	131:13:3610:3615	6758665	0	True				
ANR	6759081	AssignmentExpression	i = 1		6758665	0		=			
ANR	6759082	Identifier	i		6758665	0					
ANR	6759083	PrimaryExpression	1		6758665	1					
ANR	6759084	Condition	i < AAC_NUM_BLOCKS_SHORT + 1	131:20:3617:3644	6758665	1	True				
ANR	6759085	RelationalExpression	i < AAC_NUM_BLOCKS_SHORT + 1		6758665	0		<			
ANR	6759086	Identifier	i		6758665	0					
ANR	6759087	AdditiveExpression	AAC_NUM_BLOCKS_SHORT + 1		6758665	1		+			
ANR	6759088	Identifier	AAC_NUM_BLOCKS_SHORT		6758665	0					
ANR	6759089	PrimaryExpression	1		6758665	1					
ANR	6759090	PostIncDecOperationExpression	i ++	131:50:3647:3649	6758665	2	True				
ANR	6759091	Identifier	i		6758665	0					
ANR	6759092	IncDec	++		6758665	1					
ANR	6759093	CompoundStatement		133:12:3598:3625	6758665	3					
ANR	6759094	IdentifierDeclStatement	float const u = energy_short [ i - 1 ] ;	133:12:3667:3702	6758665	0	True				
ANR	6759095	IdentifierDecl	u = energy_short [ i - 1 ]		6758665	0					
ANR	6759096	IdentifierDeclType	float const		6758665	0					
ANR	6759097	Identifier	u		6758665	1					
ANR	6759098	AssignmentExpression	u = energy_short [ i - 1 ]		6758665	2		=			
ANR	6759099	Identifier	u		6758665	0					
ANR	6759100	ArrayIndexing	energy_short [ i - 1 ]		6758665	1					
ANR	6759101	Identifier	energy_short		6758665	0					
ANR	6759102	AdditiveExpression	i - 1		6758665	1		-			
ANR	6759103	Identifier	i		6758665	0					
ANR	6759104	PrimaryExpression	1		6758665	1					
ANR	6759105	IdentifierDeclStatement	float const v = energy_short [ i ] ;	135:12:3717:3748	6758665	1	True				
ANR	6759106	IdentifierDecl	v = energy_short [ i ]		6758665	0					
ANR	6759107	IdentifierDeclType	float const		6758665	0					
ANR	6759108	Identifier	v		6758665	1					
ANR	6759109	AssignmentExpression	v = energy_short [ i ]		6758665	2		=			
ANR	6759110	Identifier	v		6758665	0					
ANR	6759111	ArrayIndexing	energy_short [ i ]		6758665	1					
ANR	6759112	Identifier	energy_short		6758665	0					
ANR	6759113	Identifier	i		6758665	1					
ANR	6759114	IdentifierDeclStatement	"float const m = FFMAX ( u , v ) ;"	137:12:3763:3790	6758665	2	True				
ANR	6759115	IdentifierDecl	"m = FFMAX ( u , v )"		6758665	0					
ANR	6759116	IdentifierDeclType	float const		6758665	0					
ANR	6759117	Identifier	m		6758665	1					
ANR	6759118	AssignmentExpression	"m = FFMAX ( u , v )"		6758665	2		=			
ANR	6759119	Identifier	m		6758665	0					
ANR	6759120	CallExpression	"FFMAX ( u , v )"		6758665	1					
ANR	6759121	Callee	FFMAX		6758665	0					
ANR	6759122	Identifier	FFMAX		6758665	0					
ANR	6759123	ArgumentList	u		6758665	1					
ANR	6759124	Argument	u		6758665	0					
ANR	6759125	Identifier	u		6758665	0					
ANR	6759126	Argument	v		6758665	1					
ANR	6759127	Identifier	v		6758665	0					
ANR	6759128	IfStatement	if ( m < 40000 )		6758665	3					
ANR	6759129	Condition	m < 40000	139:16:3809:3817	6758665	0	True				
ANR	6759130	RelationalExpression	m < 40000		6758665	0		<			
ANR	6759131	Identifier	m		6758665	0					
ANR	6759132	PrimaryExpression	40000		6758665	1					
ANR	6759133	CompoundStatement		135:27:3655:3655	6758665	1					
ANR	6759134	IfStatement	if ( u < 1.7f * v && v < 1.7f * u )		6758665	0					
ANR	6759135	Condition	u < 1.7f * v && v < 1.7f * u	141:20:3878:3905	6758665	0	True				
ANR	6759136	AndExpression	u < 1.7f * v && v < 1.7f * u		6758665	0		&&			
ANR	6759137	RelationalExpression	u < 1.7f * v		6758665	0		<			
ANR	6759138	Identifier	u		6758665	0					
ANR	6759139	MultiplicativeExpression	1.7f * v		6758665	1		*			
ANR	6759140	PrimaryExpression	1.7f		6758665	0					
ANR	6759141	Identifier	v		6758665	1					
ANR	6759142	RelationalExpression	v < 1.7f * u		6758665	1		<			
ANR	6759143	Identifier	v		6758665	0					
ANR	6759144	MultiplicativeExpression	1.7f * u		6758665	1		*			
ANR	6759145	PrimaryExpression	1.7f		6758665	0					
ANR	6759146	Identifier	u		6758665	1					
ANR	6759147	CompoundStatement		137:50:3743:3743	6758665	1					
ANR	6759148	IfStatement	if ( i == 1 && attacks [ 0 ] < attacks [ i ] )		6758665	0					
ANR	6759149	Condition	i == 1 && attacks [ 0 ] < attacks [ i ]	143:24:3947:3979	6758665	0	True				
ANR	6759150	AndExpression	i == 1 && attacks [ 0 ] < attacks [ i ]		6758665	0		&&			
ANR	6759151	EqualityExpression	i == 1		6758665	0		==			
ANR	6759152	Identifier	i		6758665	0					
ANR	6759153	PrimaryExpression	1		6758665	1					
ANR	6759154	RelationalExpression	attacks [ 0 ] < attacks [ i ]		6758665	1		<			
ANR	6759155	ArrayIndexing	attacks [ 0 ]		6758665	0					
ANR	6759156	Identifier	attacks		6758665	0					
ANR	6759157	PrimaryExpression	0		6758665	1					
ANR	6759158	ArrayIndexing	attacks [ i ]		6758665	1					
ANR	6759159	Identifier	attacks		6758665	0					
ANR	6759160	Identifier	i		6758665	1					
ANR	6759161	ExpressionStatement	attacks [ 0 ] = 0	145:24:4007:4021	6758665	1	True				
ANR	6759162	AssignmentExpression	attacks [ 0 ] = 0		6758665	0		=			
ANR	6759163	ArrayIndexing	attacks [ 0 ]		6758665	0					
ANR	6759164	Identifier	attacks		6758665	0					
ANR	6759165	PrimaryExpression	0		6758665	1					
ANR	6759166	PrimaryExpression	0		6758665	1					
ANR	6759167	ExpressionStatement	attacks [ i ] = 0	147:20:4044:4058	6758665	1	True				
ANR	6759168	AssignmentExpression	attacks [ i ] = 0		6758665	0		=			
ANR	6759169	ArrayIndexing	attacks [ i ]		6758665	0					
ANR	6759170	Identifier	attacks		6758665	0					
ANR	6759171	Identifier	i		6758665	1					
ANR	6759172	PrimaryExpression	0		6758665	1					
ANR	6759173	ExpressionStatement	att_sum += attacks [ i ]	153:12:4107:4128	6758665	4	True				
ANR	6759174	AssignmentExpression	att_sum += attacks [ i ]		6758665	0		+=			
ANR	6759175	Identifier	att_sum		6758665	0					
ANR	6759176	ArrayIndexing	attacks [ i ]		6758665	1					
ANR	6759177	Identifier	attacks		6758665	0					
ANR	6759178	Identifier	i		6758665	1					
ANR	6759179	IfStatement	if ( attacks [ 0 ] <= pch -> prev_attack )		6758665	12					
ANR	6759180	Condition	attacks [ 0 ] <= pch -> prev_attack	159:12:4156:4185	6758665	0	True				
ANR	6759181	RelationalExpression	attacks [ 0 ] <= pch -> prev_attack		6758665	0		<=			
ANR	6759182	ArrayIndexing	attacks [ 0 ]		6758665	0					
ANR	6759183	Identifier	attacks		6758665	0					
ANR	6759184	PrimaryExpression	0		6758665	1					
ANR	6759185	PtrMemberAccess	pch -> prev_attack		6758665	1					
ANR	6759186	Identifier	pch		6758665	0					
ANR	6759187	Identifier	prev_attack		6758665	1					
ANR	6759188	ExpressionStatement	attacks [ 0 ] = 0	161:12:4201:4215	6758665	1	True				
ANR	6759189	AssignmentExpression	attacks [ 0 ] = 0		6758665	0		=			
ANR	6759190	ArrayIndexing	attacks [ 0 ]		6758665	0					
ANR	6759191	Identifier	attacks		6758665	0					
ANR	6759192	PrimaryExpression	0		6758665	1					
ANR	6759193	PrimaryExpression	0		6758665	1					
ANR	6759194	ExpressionStatement	att_sum += attacks [ 0 ]	165:8:4228:4249	6758665	13	True				
ANR	6759195	AssignmentExpression	att_sum += attacks [ 0 ]		6758665	0		+=			
ANR	6759196	Identifier	att_sum		6758665	0					
ANR	6759197	ArrayIndexing	attacks [ 0 ]		6758665	1					
ANR	6759198	Identifier	attacks		6758665	0					
ANR	6759199	PrimaryExpression	0		6758665	1					
ANR	6759200	IfStatement	if ( pch -> prev_attack == 3 || att_sum )		6758665	14					
ANR	6759201	Condition	pch -> prev_attack == 3 || att_sum	169:12:4373:4404	6758665	0	True				
ANR	6759202	OrExpression	pch -> prev_attack == 3 || att_sum		6758665	0		||			
ANR	6759203	EqualityExpression	pch -> prev_attack == 3		6758665	0		==			
ANR	6759204	PtrMemberAccess	pch -> prev_attack		6758665	0					
ANR	6759205	Identifier	pch		6758665	0					
ANR	6759206	Identifier	prev_attack		6758665	1					
ANR	6759207	PrimaryExpression	3		6758665	1					
ANR	6759208	Identifier	att_sum		6758665	1					
ANR	6759209	CompoundStatement		165:46:4242:4242	6758665	1					
ANR	6759210	ExpressionStatement	uselongblock = 0	171:12:4422:4438	6758665	0	True				
ANR	6759211	AssignmentExpression	uselongblock = 0		6758665	0		=			
ANR	6759212	Identifier	uselongblock		6758665	0					
ANR	6759213	PrimaryExpression	0		6758665	1					
ANR	6759214	ForStatement	for ( i = 1 ; i < AAC_NUM_BLOCKS_SHORT + 1 ; i ++ )		6758665	1					
ANR	6759215	ForInit	i = 1 ;	175:17:4460:4465	6758665	0	True				
ANR	6759216	AssignmentExpression	i = 1		6758665	0		=			
ANR	6759217	Identifier	i		6758665	0					
ANR	6759218	PrimaryExpression	1		6758665	1					
ANR	6759219	Condition	i < AAC_NUM_BLOCKS_SHORT + 1	175:24:4467:4494	6758665	1	True				
ANR	6759220	RelationalExpression	i < AAC_NUM_BLOCKS_SHORT + 1		6758665	0		<			
ANR	6759221	Identifier	i		6758665	0					
ANR	6759222	AdditiveExpression	AAC_NUM_BLOCKS_SHORT + 1		6758665	1		+			
ANR	6759223	Identifier	AAC_NUM_BLOCKS_SHORT		6758665	0					
ANR	6759224	PrimaryExpression	1		6758665	1					
ANR	6759225	PostIncDecOperationExpression	i ++	175:54:4497:4499	6758665	2	True				
ANR	6759226	Identifier	i		6758665	0					
ANR	6759227	IncDec	++		6758665	1					
ANR	6759228	IfStatement	if ( attacks [ i ] && attacks [ i - 1 ] )		6758665	3					
ANR	6759229	Condition	attacks [ i ] && attacks [ i - 1 ]	177:20:4523:4548	6758665	0	True				
ANR	6759230	AndExpression	attacks [ i ] && attacks [ i - 1 ]		6758665	0		&&			
ANR	6759231	ArrayIndexing	attacks [ i ]		6758665	0					
ANR	6759232	Identifier	attacks		6758665	0					
ANR	6759233	Identifier	i		6758665	1					
ANR	6759234	ArrayIndexing	attacks [ i - 1 ]		6758665	1					
ANR	6759235	Identifier	attacks		6758665	0					
ANR	6759236	AdditiveExpression	i - 1		6758665	1		-			
ANR	6759237	Identifier	i		6758665	0					
ANR	6759238	PrimaryExpression	1		6758665	1					
ANR	6759239	ExpressionStatement	attacks [ i ] = 0	179:20:4572:4586	6758665	1	True				
ANR	6759240	AssignmentExpression	attacks [ i ] = 0		6758665	0		=			
ANR	6759241	ArrayIndexing	attacks [ i ]		6758665	0					
ANR	6759242	Identifier	attacks		6758665	0					
ANR	6759243	Identifier	i		6758665	1					
ANR	6759244	PrimaryExpression	0		6758665	1					
ANR	6759245	ElseStatement	else		6758665	0					
ANR	6759246	CompoundStatement		179:11:4446:4446	6758665	0					
ANR	6759247	ExpressionStatement	uselongblock = ! ( prev_type == EIGHT_SHORT_SEQUENCE )	187:8:4712:4763	6758665	0	True				
ANR	6759248	AssignmentExpression	uselongblock = ! ( prev_type == EIGHT_SHORT_SEQUENCE )		6758665	0		=			
ANR	6759249	Identifier	uselongblock		6758665	0					
ANR	6759250	UnaryOperationExpression	! ( prev_type == EIGHT_SHORT_SEQUENCE )		6758665	1					
ANR	6759251	UnaryOperator	!		6758665	0					
ANR	6759252	EqualityExpression	prev_type == EIGHT_SHORT_SEQUENCE		6758665	1		==			
ANR	6759253	Identifier	prev_type		6758665	0					
ANR	6759254	Identifier	EIGHT_SHORT_SEQUENCE		6758665	1					
ANR	6759255	ExpressionStatement	"lame_apply_block_type ( pch , & wi , uselongblock )"	193:4:4779:4824	6758665	9	True				
ANR	6759256	CallExpression	"lame_apply_block_type ( pch , & wi , uselongblock )"		6758665	0					
ANR	6759257	Callee	lame_apply_block_type		6758665	0					
ANR	6759258	Identifier	lame_apply_block_type		6758665	0					
ANR	6759259	ArgumentList	pch		6758665	1					
ANR	6759260	Argument	pch		6758665	0					
ANR	6759261	Identifier	pch		6758665	0					
ANR	6759262	Argument	& wi		6758665	1					
ANR	6759263	UnaryOperationExpression	& wi		6758665	0					
ANR	6759264	UnaryOperator	&		6758665	0					
ANR	6759265	Identifier	wi		6758665	1					
ANR	6759266	Argument	uselongblock		6758665	2					
ANR	6759267	Identifier	uselongblock		6758665	0					
ANR	6759268	IfStatement	if ( audio )		6758665	10					
ANR	6759269	Condition	audio	199:8:4907:4911	6758665	0	True				
ANR	6759270	Identifier	audio		6758665	0					
ANR	6759271	CompoundStatement		195:15:4749:4749	6758665	1					
ANR	6759272	ForStatement	for ( i = 0 ; i < AAC_NUM_BLOCKS_SHORT ; i ++ )		6758665	0					
ANR	6759273	ForInit	i = 0 ;	201:13:4930:4935	6758665	0	True				
ANR	6759274	AssignmentExpression	i = 0		6758665	0		=			
ANR	6759275	Identifier	i		6758665	0					
ANR	6759276	PrimaryExpression	0		6758665	1					
ANR	6759277	Condition	i < AAC_NUM_BLOCKS_SHORT	201:20:4937:4960	6758665	1	True				
ANR	6759278	RelationalExpression	i < AAC_NUM_BLOCKS_SHORT		6758665	0		<			
ANR	6759279	Identifier	i		6758665	0					
ANR	6759280	Identifier	AAC_NUM_BLOCKS_SHORT		6758665	1					
ANR	6759281	PostIncDecOperationExpression	i ++	201:46:4963:4965	6758665	2	True				
ANR	6759282	Identifier	i		6758665	0					
ANR	6759283	IncDec	++		6758665	1					
ANR	6759284	CompoundStatement		203:12:4913:4918	6758665	3					
ANR	6759285	IdentifierDeclStatement	const float * wbuf = audio + i * AAC_BLOCK_SIZE_SHORT ;	203:12:4983:5035	6758665	0	True				
ANR	6759286	IdentifierDecl	* wbuf = audio + i * AAC_BLOCK_SIZE_SHORT		6758665	0					
ANR	6759287	IdentifierDeclType	const float *		6758665	0					
ANR	6759288	Identifier	wbuf		6758665	1					
ANR	6759289	AssignmentExpression	* wbuf = audio + i * AAC_BLOCK_SIZE_SHORT		6758665	2		=			
ANR	6759290	Identifier	wbuf		6758665	0					
ANR	6759291	AdditiveExpression	audio + i * AAC_BLOCK_SIZE_SHORT		6758665	1		+			
ANR	6759292	Identifier	audio		6758665	0					
ANR	6759293	MultiplicativeExpression	i * AAC_BLOCK_SIZE_SHORT		6758665	1		*			
ANR	6759294	Identifier	i		6758665	0					
ANR	6759295	Identifier	AAC_BLOCK_SIZE_SHORT		6758665	1					
ANR	6759296	IdentifierDeclStatement	float max = 0 ;	205:12:5050:5063	6758665	1	True				
ANR	6759297	IdentifierDecl	max = 0		6758665	0					
ANR	6759298	IdentifierDeclType	float		6758665	0					
ANR	6759299	Identifier	max		6758665	1					
ANR	6759300	AssignmentExpression	max = 0		6758665	2		=			
ANR	6759301	Identifier	max		6758665	0					
ANR	6759302	PrimaryExpression	0		6758665	1					
ANR	6759303	IdentifierDeclStatement	int j ;	207:12:5078:5083	6758665	2	True				
ANR	6759304	IdentifierDecl	j		6758665	0					
ANR	6759305	IdentifierDeclType	int		6758665	0					
ANR	6759306	Identifier	j		6758665	1					
ANR	6759307	ForStatement	for ( j = 0 ; j < AAC_BLOCK_SIZE_SHORT ; j ++ )		6758665	3					
ANR	6759308	ForInit	j = 0 ;	209:17:5103:5108	6758665	0	True				
ANR	6759309	AssignmentExpression	j = 0		6758665	0		=			
ANR	6759310	Identifier	j		6758665	0					
ANR	6759311	PrimaryExpression	0		6758665	1					
ANR	6759312	Condition	j < AAC_BLOCK_SIZE_SHORT	209:24:5110:5133	6758665	1	True				
ANR	6759313	RelationalExpression	j < AAC_BLOCK_SIZE_SHORT		6758665	0		<			
ANR	6759314	Identifier	j		6758665	0					
ANR	6759315	Identifier	AAC_BLOCK_SIZE_SHORT		6758665	1					
ANR	6759316	PostIncDecOperationExpression	j ++	209:50:5136:5138	6758665	2	True				
ANR	6759317	Identifier	j		6758665	0					
ANR	6759318	IncDec	++		6758665	1					
ANR	6759319	ExpressionStatement	"max = FFMAX ( max , fabsf ( wbuf [ j ] ) )"	211:16:5158:5190	6758665	3	True				
ANR	6759320	AssignmentExpression	"max = FFMAX ( max , fabsf ( wbuf [ j ] ) )"		6758665	0		=			
ANR	6759321	Identifier	max		6758665	0					
ANR	6759322	CallExpression	"FFMAX ( max , fabsf ( wbuf [ j ] ) )"		6758665	1					
ANR	6759323	Callee	FFMAX		6758665	0					
ANR	6759324	Identifier	FFMAX		6758665	0					
ANR	6759325	ArgumentList	max		6758665	1					
ANR	6759326	Argument	max		6758665	0					
ANR	6759327	Identifier	max		6758665	0					
ANR	6759328	Argument	fabsf ( wbuf [ j ] )		6758665	1					
ANR	6759329	CallExpression	fabsf ( wbuf [ j ] )		6758665	0					
ANR	6759330	Callee	fabsf		6758665	0					
ANR	6759331	Identifier	fabsf		6758665	0					
ANR	6759332	ArgumentList	wbuf [ j ]		6758665	1					
ANR	6759333	Argument	wbuf [ j ]		6758665	0					
ANR	6759334	ArrayIndexing	wbuf [ j ]		6758665	0					
ANR	6759335	Identifier	wbuf		6758665	0					
ANR	6759336	Identifier	j		6758665	1					
ANR	6759337	ExpressionStatement	clippings [ i ] = max	213:12:5205:5223	6758665	4	True				
ANR	6759338	AssignmentExpression	clippings [ i ] = max		6758665	0		=			
ANR	6759339	ArrayIndexing	clippings [ i ]		6758665	0					
ANR	6759340	Identifier	clippings		6758665	0					
ANR	6759341	Identifier	i		6758665	1					
ANR	6759342	Identifier	max		6758665	1					
ANR	6759343	ElseStatement	else		6758665	0					
ANR	6759344	CompoundStatement		213:11:5083:5083	6758665	0					
ANR	6759345	ForStatement	for ( i = 0 ; i < 8 ; i ++ )		6758665	0					
ANR	6759346	ForInit	i = 0 ;	219:13:5264:5269	6758665	0	True				
ANR	6759347	AssignmentExpression	i = 0		6758665	0		=			
ANR	6759348	Identifier	i		6758665	0					
ANR	6759349	PrimaryExpression	0		6758665	1					
ANR	6759350	Condition	i < 8	219:20:5271:5275	6758665	1	True				
ANR	6759351	RelationalExpression	i < 8		6758665	0		<			
ANR	6759352	Identifier	i		6758665	0					
ANR	6759353	PrimaryExpression	8		6758665	1					
ANR	6759354	PostIncDecOperationExpression	i ++	219:27:5278:5280	6758665	2	True				
ANR	6759355	Identifier	i		6758665	0					
ANR	6759356	IncDec	++		6758665	1					
ANR	6759357	ExpressionStatement	clippings [ i ] = 0	221:12:5296:5312	6758665	3	True				
ANR	6759358	AssignmentExpression	clippings [ i ] = 0		6758665	0		=			
ANR	6759359	ArrayIndexing	clippings [ i ]		6758665	0					
ANR	6759360	Identifier	clippings		6758665	0					
ANR	6759361	Identifier	i		6758665	1					
ANR	6759362	PrimaryExpression	0		6758665	1					
ANR	6759363	ExpressionStatement	wi . window_type [ 1 ] = prev_type	227:4:5328:5357	6758665	11	True				
ANR	6759364	AssignmentExpression	wi . window_type [ 1 ] = prev_type		6758665	0		=			
ANR	6759365	ArrayIndexing	wi . window_type [ 1 ]		6758665	0					
ANR	6759366	MemberAccess	wi . window_type		6758665	0					
ANR	6759367	Identifier	wi		6758665	0					
ANR	6759368	Identifier	window_type		6758665	1					
ANR	6759369	PrimaryExpression	1		6758665	1					
ANR	6759370	Identifier	prev_type		6758665	1					
ANR	6759371	IfStatement	if ( wi . window_type [ 0 ] != EIGHT_SHORT_SEQUENCE )		6758665	12					
ANR	6759372	Condition	wi . window_type [ 0 ] != EIGHT_SHORT_SEQUENCE	229:8:5368:5408	6758665	0	True				
ANR	6759373	EqualityExpression	wi . window_type [ 0 ] != EIGHT_SHORT_SEQUENCE		6758665	0		!=			
ANR	6759374	ArrayIndexing	wi . window_type [ 0 ]		6758665	0					
ANR	6759375	MemberAccess	wi . window_type		6758665	0					
ANR	6759376	Identifier	wi		6758665	0					
ANR	6759377	Identifier	window_type		6758665	1					
ANR	6759378	PrimaryExpression	0		6758665	1					
ANR	6759379	Identifier	EIGHT_SHORT_SEQUENCE		6758665	1					
ANR	6759380	CompoundStatement		227:8:5257:5278	6758665	1					
ANR	6759381	IdentifierDeclStatement	float clipping = 0.0f ;	231:8:5422:5443	6758665	0	True				
ANR	6759382	IdentifierDecl	clipping = 0.0f		6758665	0					
ANR	6759383	IdentifierDeclType	float		6758665	0					
ANR	6759384	Identifier	clipping		6758665	1					
ANR	6759385	AssignmentExpression	clipping = 0.0f		6758665	2		=			
ANR	6759386	Identifier	clipping		6758665	0					
ANR	6759387	PrimaryExpression	0.0f		6758665	1					
ANR	6759388	ExpressionStatement	wi . num_windows = 1	235:8:5456:5475	6758665	1	True				
ANR	6759389	AssignmentExpression	wi . num_windows = 1		6758665	0		=			
ANR	6759390	MemberAccess	wi . num_windows		6758665	0					
ANR	6759391	Identifier	wi		6758665	0					
ANR	6759392	Identifier	num_windows		6758665	1					
ANR	6759393	PrimaryExpression	1		6758665	1					
ANR	6759394	ExpressionStatement	wi . grouping [ 0 ] = 1	237:8:5486:5505	6758665	2	True				
ANR	6759395	AssignmentExpression	wi . grouping [ 0 ] = 1		6758665	0		=			
ANR	6759396	ArrayIndexing	wi . grouping [ 0 ]		6758665	0					
ANR	6759397	MemberAccess	wi . grouping		6758665	0					
ANR	6759398	Identifier	wi		6758665	0					
ANR	6759399	Identifier	grouping		6758665	1					
ANR	6759400	PrimaryExpression	0		6758665	1					
ANR	6759401	PrimaryExpression	1		6758665	1					
ANR	6759402	IfStatement	if ( wi . window_type [ 0 ] == LONG_START_SEQUENCE )		6758665	3					
ANR	6759403	Condition	wi . window_type [ 0 ] == LONG_START_SEQUENCE	239:12:5520:5559	6758665	0	True				
ANR	6759404	EqualityExpression	wi . window_type [ 0 ] == LONG_START_SEQUENCE		6758665	0		==			
ANR	6759405	ArrayIndexing	wi . window_type [ 0 ]		6758665	0					
ANR	6759406	MemberAccess	wi . window_type		6758665	0					
ANR	6759407	Identifier	wi		6758665	0					
ANR	6759408	Identifier	window_type		6758665	1					
ANR	6759409	PrimaryExpression	0		6758665	1					
ANR	6759410	Identifier	LONG_START_SEQUENCE		6758665	1					
ANR	6759411	ExpressionStatement	wi . window_shape = 0	241:12:5575:5594	6758665	1	True				
ANR	6759412	AssignmentExpression	wi . window_shape = 0		6758665	0		=			
ANR	6759413	MemberAccess	wi . window_shape		6758665	0					
ANR	6759414	Identifier	wi		6758665	0					
ANR	6759415	Identifier	window_shape		6758665	1					
ANR	6759416	PrimaryExpression	0		6758665	1					
ANR	6759417	ElseStatement	else		6758665	0					
ANR	6759418	ExpressionStatement	wi . window_shape = 1	245:12:5623:5642	6758665	0	True				
ANR	6759419	AssignmentExpression	wi . window_shape = 1		6758665	0		=			
ANR	6759420	MemberAccess	wi . window_shape		6758665	0					
ANR	6759421	Identifier	wi		6758665	0					
ANR	6759422	Identifier	window_shape		6758665	1					
ANR	6759423	PrimaryExpression	1		6758665	1					
ANR	6759424	ForStatement	for ( i = 0 ; i < 8 ; i ++ )		6758665	4					
ANR	6759425	ForInit	i = 0 ;	249:13:5660:5665	6758665	0	True				
ANR	6759426	AssignmentExpression	i = 0		6758665	0		=			
ANR	6759427	Identifier	i		6758665	0					
ANR	6759428	PrimaryExpression	0		6758665	1					
ANR	6759429	Condition	i < 8	249:20:5667:5671	6758665	1	True				
ANR	6759430	RelationalExpression	i < 8		6758665	0		<			
ANR	6759431	Identifier	i		6758665	0					
ANR	6759432	PrimaryExpression	8		6758665	1					
ANR	6759433	PostIncDecOperationExpression	i ++	249:27:5674:5676	6758665	2	True				
ANR	6759434	Identifier	i		6758665	0					
ANR	6759435	IncDec	++		6758665	1					
ANR	6759436	ExpressionStatement	"clipping = FFMAX ( clipping , clippings [ i ] )"	251:12:5692:5732	6758665	3	True				
ANR	6759437	AssignmentExpression	"clipping = FFMAX ( clipping , clippings [ i ] )"		6758665	0		=			
ANR	6759438	Identifier	clipping		6758665	0					
ANR	6759439	CallExpression	"FFMAX ( clipping , clippings [ i ] )"		6758665	1					
ANR	6759440	Callee	FFMAX		6758665	0					
ANR	6759441	Identifier	FFMAX		6758665	0					
ANR	6759442	ArgumentList	clipping		6758665	1					
ANR	6759443	Argument	clipping		6758665	0					
ANR	6759444	Identifier	clipping		6758665	0					
ANR	6759445	Argument	clippings [ i ]		6758665	1					
ANR	6759446	ArrayIndexing	clippings [ i ]		6758665	0					
ANR	6759447	Identifier	clippings		6758665	0					
ANR	6759448	Identifier	i		6758665	1					
ANR	6759449	ExpressionStatement	wi . clipping [ 0 ] = clipping	253:8:5743:5768	6758665	5	True				
ANR	6759450	AssignmentExpression	wi . clipping [ 0 ] = clipping		6758665	0		=			
ANR	6759451	ArrayIndexing	wi . clipping [ 0 ]		6758665	0					
ANR	6759452	MemberAccess	wi . clipping		6758665	0					
ANR	6759453	Identifier	wi		6758665	0					
ANR	6759454	Identifier	clipping		6758665	1					
ANR	6759455	PrimaryExpression	0		6758665	1					
ANR	6759456	Identifier	clipping		6758665	1					
ANR	6759457	ElseStatement	else		6758665	0					
ANR	6759458	CompoundStatement		253:8:5628:5643	6758665	0					
ANR	6759459	IdentifierDeclStatement	int lastgrp = 0 ;	257:8:5793:5808	6758665	0	True				
ANR	6759460	IdentifierDecl	lastgrp = 0		6758665	0					
ANR	6759461	IdentifierDeclType	int		6758665	0					
ANR	6759462	Identifier	lastgrp		6758665	1					
ANR	6759463	AssignmentExpression	lastgrp = 0		6758665	2		=			
ANR	6759464	Identifier	lastgrp		6758665	0					
ANR	6759465	PrimaryExpression	0		6758665	1					
ANR	6759466	ExpressionStatement	wi . num_windows = 8	261:8:5821:5839	6758665	1	True				
ANR	6759467	AssignmentExpression	wi . num_windows = 8		6758665	0		=			
ANR	6759468	MemberAccess	wi . num_windows		6758665	0					
ANR	6759469	Identifier	wi		6758665	0					
ANR	6759470	Identifier	num_windows		6758665	1					
ANR	6759471	PrimaryExpression	8		6758665	1					
ANR	6759472	ExpressionStatement	wi . window_shape = 0	263:8:5850:5869	6758665	2	True				
ANR	6759473	AssignmentExpression	wi . window_shape = 0		6758665	0		=			
ANR	6759474	MemberAccess	wi . window_shape		6758665	0					
ANR	6759475	Identifier	wi		6758665	0					
ANR	6759476	Identifier	window_shape		6758665	1					
ANR	6759477	PrimaryExpression	0		6758665	1					
ANR	6759478	ForStatement	for ( i = 0 ; i < 8 ; i ++ )		6758665	3					
ANR	6759479	ForInit	i = 0 ;	265:13:5885:5890	6758665	0	True				
ANR	6759480	AssignmentExpression	i = 0		6758665	0		=			
ANR	6759481	Identifier	i		6758665	0					
ANR	6759482	PrimaryExpression	0		6758665	1					
ANR	6759483	Condition	i < 8	265:20:5892:5896	6758665	1	True				
ANR	6759484	RelationalExpression	i < 8		6758665	0		<			
ANR	6759485	Identifier	i		6758665	0					
ANR	6759486	PrimaryExpression	8		6758665	1					
ANR	6759487	PostIncDecOperationExpression	i ++	265:27:5899:5901	6758665	2	True				
ANR	6759488	Identifier	i		6758665	0					
ANR	6759489	IncDec	++		6758665	1					
ANR	6759490	CompoundStatement		261:32:5739:5739	6758665	3					
ANR	6759491	IfStatement	if ( ! ( ( pch -> next_grouping >> i ) & 1 ) )		6758665	0					
ANR	6759492	Condition	! ( ( pch -> next_grouping >> i ) & 1 )	267:16:5923:5954	6758665	0	True				
ANR	6759493	UnaryOperationExpression	! ( ( pch -> next_grouping >> i ) & 1 )		6758665	0					
ANR	6759494	UnaryOperator	!		6758665	0					
ANR	6759495	BitAndExpression	( pch -> next_grouping >> i ) & 1		6758665	1		&			
ANR	6759496	ShiftExpression	pch -> next_grouping >> i		6758665	0		>>			
ANR	6759497	PtrMemberAccess	pch -> next_grouping		6758665	0					
ANR	6759498	Identifier	pch		6758665	0					
ANR	6759499	Identifier	next_grouping		6758665	1					
ANR	6759500	Identifier	i		6758665	1					
ANR	6759501	PrimaryExpression	1		6758665	1					
ANR	6759502	ExpressionStatement	lastgrp = i	269:16:5974:5985	6758665	1	True				
ANR	6759503	AssignmentExpression	lastgrp = i		6758665	0		=			
ANR	6759504	Identifier	lastgrp		6758665	0					
ANR	6759505	Identifier	i		6758665	1					
ANR	6759506	ExpressionStatement	wi . grouping [ lastgrp ] ++	271:12:6000:6022	6758665	1	True				
ANR	6759507	PostIncDecOperationExpression	wi . grouping [ lastgrp ] ++		6758665	0					
ANR	6759508	ArrayIndexing	wi . grouping [ lastgrp ]		6758665	0					
ANR	6759509	MemberAccess	wi . grouping		6758665	0					
ANR	6759510	Identifier	wi		6758665	0					
ANR	6759511	Identifier	grouping		6758665	1					
ANR	6759512	Identifier	lastgrp		6758665	1					
ANR	6759513	IncDec	++		6758665	1					
ANR	6759514	ForStatement	for ( i = 0 ; i < 8 ; i += wi . grouping [ i ] )		6758665	4					
ANR	6759515	ForInit	i = 0 ;	277:13:6051:6056	6758665	0	True				
ANR	6759516	AssignmentExpression	i = 0		6758665	0		=			
ANR	6759517	Identifier	i		6758665	0					
ANR	6759518	PrimaryExpression	0		6758665	1					
ANR	6759519	Condition	i < 8	277:20:6058:6062	6758665	1	True				
ANR	6759520	RelationalExpression	i < 8		6758665	0		<			
ANR	6759521	Identifier	i		6758665	0					
ANR	6759522	PrimaryExpression	8		6758665	1					
ANR	6759523	AssignmentExpression	i += wi . grouping [ i ]	277:27:6065:6083	6758665	2	True	+=			
ANR	6759524	Identifier	i		6758665	0					
ANR	6759525	ArrayIndexing	wi . grouping [ i ]		6758665	1					
ANR	6759526	MemberAccess	wi . grouping		6758665	0					
ANR	6759527	Identifier	wi		6758665	0					
ANR	6759528	Identifier	grouping		6758665	1					
ANR	6759529	Identifier	i		6758665	1					
ANR	6759530	CompoundStatement		277:12:5956:5977	6758665	3					
ANR	6759531	IdentifierDeclStatement	int w ;	279:12:6101:6106	6758665	0	True				
ANR	6759532	IdentifierDecl	w		6758665	0					
ANR	6759533	IdentifierDeclType	int		6758665	0					
ANR	6759534	Identifier	w		6758665	1					
ANR	6759535	IdentifierDeclStatement	float clipping = 0.0f ;	281:12:6121:6142	6758665	1	True				
ANR	6759536	IdentifierDecl	clipping = 0.0f		6758665	0					
ANR	6759537	IdentifierDeclType	float		6758665	0					
ANR	6759538	Identifier	clipping		6758665	1					
ANR	6759539	AssignmentExpression	clipping = 0.0f		6758665	2		=			
ANR	6759540	Identifier	clipping		6758665	0					
ANR	6759541	PrimaryExpression	0.0f		6758665	1					
ANR	6759542	ForStatement	for ( w = 0 ; w < wi . grouping [ i ] ; w ++ )		6758665	2					
ANR	6759543	ForInit	w = 0 ;	283:17:6162:6167	6758665	0	True				
ANR	6759544	AssignmentExpression	w = 0		6758665	0		=			
ANR	6759545	Identifier	w		6758665	0					
ANR	6759546	PrimaryExpression	0		6758665	1					
ANR	6759547	Condition	w < wi . grouping [ i ]	283:24:6169:6186	6758665	1	True				
ANR	6759548	RelationalExpression	w < wi . grouping [ i ]		6758665	0		<			
ANR	6759549	Identifier	w		6758665	0					
ANR	6759550	ArrayIndexing	wi . grouping [ i ]		6758665	1					
ANR	6759551	MemberAccess	wi . grouping		6758665	0					
ANR	6759552	Identifier	wi		6758665	0					
ANR	6759553	Identifier	grouping		6758665	1					
ANR	6759554	Identifier	i		6758665	1					
ANR	6759555	PostIncDecOperationExpression	w ++	283:44:6189:6191	6758665	2	True				
ANR	6759556	Identifier	w		6758665	0					
ANR	6759557	IncDec	++		6758665	1					
ANR	6759558	ExpressionStatement	"clipping = FFMAX ( clipping , clippings [ i + w ] )"	285:16:6211:6253	6758665	3	True				
ANR	6759559	AssignmentExpression	"clipping = FFMAX ( clipping , clippings [ i + w ] )"		6758665	0		=			
ANR	6759560	Identifier	clipping		6758665	0					
ANR	6759561	CallExpression	"FFMAX ( clipping , clippings [ i + w ] )"		6758665	1					
ANR	6759562	Callee	FFMAX		6758665	0					
ANR	6759563	Identifier	FFMAX		6758665	0					
ANR	6759564	ArgumentList	clipping		6758665	1					
ANR	6759565	Argument	clipping		6758665	0					
ANR	6759566	Identifier	clipping		6758665	0					
ANR	6759567	Argument	clippings [ i + w ]		6758665	1					
ANR	6759568	ArrayIndexing	clippings [ i + w ]		6758665	0					
ANR	6759569	Identifier	clippings		6758665	0					
ANR	6759570	AdditiveExpression	i + w		6758665	1		+			
ANR	6759571	Identifier	i		6758665	0					
ANR	6759572	Identifier	w		6758665	1					
ANR	6759573	ForStatement	for ( w = 0 ; w < wi . grouping [ i ] ; w ++ )		6758665	3					
ANR	6759574	ForInit	w = 0 ;	287:17:6273:6278	6758665	0	True				
ANR	6759575	AssignmentExpression	w = 0		6758665	0		=			
ANR	6759576	Identifier	w		6758665	0					
ANR	6759577	PrimaryExpression	0		6758665	1					
ANR	6759578	Condition	w < wi . grouping [ i ]	287:24:6280:6297	6758665	1	True				
ANR	6759579	RelationalExpression	w < wi . grouping [ i ]		6758665	0		<			
ANR	6759580	Identifier	w		6758665	0					
ANR	6759581	ArrayIndexing	wi . grouping [ i ]		6758665	1					
ANR	6759582	MemberAccess	wi . grouping		6758665	0					
ANR	6759583	Identifier	wi		6758665	0					
ANR	6759584	Identifier	grouping		6758665	1					
ANR	6759585	Identifier	i		6758665	1					
ANR	6759586	PostIncDecOperationExpression	w ++	287:44:6300:6302	6758665	2	True				
ANR	6759587	Identifier	w		6758665	0					
ANR	6759588	IncDec	++		6758665	1					
ANR	6759589	ExpressionStatement	wi . clipping [ i + w ] = clipping	289:16:6322:6349	6758665	3	True				
ANR	6759590	AssignmentExpression	wi . clipping [ i + w ] = clipping		6758665	0		=			
ANR	6759591	ArrayIndexing	wi . clipping [ i + w ]		6758665	0					
ANR	6759592	MemberAccess	wi . clipping		6758665	0					
ANR	6759593	Identifier	wi		6758665	0					
ANR	6759594	Identifier	clipping		6758665	1					
ANR	6759595	AdditiveExpression	i + w		6758665	1		+			
ANR	6759596	Identifier	i		6758665	0					
ANR	6759597	Identifier	w		6758665	1					
ANR	6759598	Identifier	clipping		6758665	1					
ANR	6759599	ForStatement	for ( i = 0 ; i < 9 ; i ++ )		6758665	13					
ANR	6759600	ForInit	i = 0 ;	309:9:6647:6652	6758665	0	True				
ANR	6759601	AssignmentExpression	i = 0		6758665	0		=			
ANR	6759602	Identifier	i		6758665	0					
ANR	6759603	PrimaryExpression	0		6758665	1					
ANR	6759604	Condition	i < 9	309:16:6654:6658	6758665	1	True				
ANR	6759605	RelationalExpression	i < 9		6758665	0		<			
ANR	6759606	Identifier	i		6758665	0					
ANR	6759607	PrimaryExpression	9		6758665	1					
ANR	6759608	PostIncDecOperationExpression	i ++	309:23:6661:6663	6758665	2	True				
ANR	6759609	Identifier	i		6758665	0					
ANR	6759610	IncDec	++		6758665	1					
ANR	6759611	CompoundStatement		305:28:6501:6501	6758665	3					
ANR	6759612	IfStatement	if ( attacks [ i ] )		6758665	0					
ANR	6759613	Condition	attacks [ i ]	311:12:6681:6690	6758665	0	True				
ANR	6759614	ArrayIndexing	attacks [ i ]		6758665	0					
ANR	6759615	Identifier	attacks		6758665	0					
ANR	6759616	Identifier	i		6758665	1					
ANR	6759617	CompoundStatement		307:24:6528:6528	6758665	1					
ANR	6759618	ExpressionStatement	grouping = i	313:12:6708:6720	6758665	0	True				
ANR	6759619	AssignmentExpression	grouping = i		6758665	0		=			
ANR	6759620	Identifier	grouping		6758665	0					
ANR	6759621	Identifier	i		6758665	1					
ANR	6759622	BreakStatement	break ;	315:12:6735:6740	6758665	1	True				
ANR	6759623	ExpressionStatement	pch -> next_grouping = window_grouping [ grouping ]	321:4:6765:6811	6758665	14	True				
ANR	6759624	AssignmentExpression	pch -> next_grouping = window_grouping [ grouping ]		6758665	0		=			
ANR	6759625	PtrMemberAccess	pch -> next_grouping		6758665	0					
ANR	6759626	Identifier	pch		6758665	0					
ANR	6759627	Identifier	next_grouping		6758665	1					
ANR	6759628	ArrayIndexing	window_grouping [ grouping ]		6758665	1					
ANR	6759629	Identifier	window_grouping		6758665	0					
ANR	6759630	Identifier	grouping		6758665	1					
ANR	6759631	ExpressionStatement	pch -> prev_attack = attacks [ 8 ]	325:4:6820:6849	6758665	15	True				
ANR	6759632	AssignmentExpression	pch -> prev_attack = attacks [ 8 ]		6758665	0		=			
ANR	6759633	PtrMemberAccess	pch -> prev_attack		6758665	0					
ANR	6759634	Identifier	pch		6758665	0					
ANR	6759635	Identifier	prev_attack		6758665	1					
ANR	6759636	ArrayIndexing	attacks [ 8 ]		6758665	1					
ANR	6759637	Identifier	attacks		6758665	0					
ANR	6759638	PrimaryExpression	8		6758665	1					
ANR	6759639	ReturnStatement	return wi ;	329:4:6858:6867	6758665	16	True				
ANR	6759640	Identifier	wi		6758665	0					
ANR	6759641	ReturnType	static FFPsyWindowInfo		6758665	1					
ANR	6759642	Identifier	psy_lame_window		6758665	2					
ANR	6759643	ParameterList	"FFPsyContext * ctx , const float * audio , const float * la , int channel , int prev_type"		6758665	3					
ANR	6759644	Parameter	FFPsyContext * ctx	1:39:39:55	6758665	0	True				
ANR	6759645	ParameterType	FFPsyContext *		6758665	0					
ANR	6759646	Identifier	ctx		6758665	1					
ANR	6759647	Parameter	const float * audio	1:58:58:75	6758665	1	True				
ANR	6759648	ParameterType	const float *		6758665	0					
ANR	6759649	Identifier	audio		6758665	1					
ANR	6759650	Parameter	const float * la	3:39:118:132	6758665	2	True				
ANR	6759651	ParameterType	const float *		6758665	0					
ANR	6759652	Identifier	la		6758665	1					
ANR	6759653	Parameter	int channel	3:56:135:145	6758665	3	True				
ANR	6759654	ParameterType	int		6758665	0					
ANR	6759655	Identifier	channel		6758665	1					
ANR	6759656	Parameter	int prev_type	3:69:148:160	6758665	4	True				
ANR	6759657	ParameterType	int		6758665	0					
ANR	6759658	Identifier	prev_type		6758665	1					
ANR	6759659	CFGEntryNode	ENTRY		6758665		True				
ANR	6759660	CFGExitNode	EXIT		6758665		True				
ANR	6759661	Symbol	* w		6758665						
ANR	6759662	Symbol	clipping		6758665						
ANR	6759663	Symbol	pctx		6758665						
ANR	6759664	Symbol	channel		6758665						
ANR	6759665	Symbol	* lastgrp		6758665						
ANR	6759666	Symbol	wi . grouping		6758665						
ANR	6759667	Symbol	* pch -> prev_energy_subshort		6758665						
ANR	6759668	Symbol	PSY_LAME_FIR_LEN		6758665						
ANR	6759669	Symbol	* wi . window_type		6758665						
ANR	6759670	Symbol	wi . window_type		6758665						
ANR	6759671	Symbol	firbuf		6758665						
ANR	6759672	Symbol	PSY_LAME_NUM_SUBBLOCKS		6758665						
ANR	6759673	Symbol	att_sum		6758665						
ANR	6759674	Symbol	attacks		6758665						
ANR	6759675	Symbol	* energy_subshort		6758665						
ANR	6759676	Symbol	* wi . clipping		6758665						
ANR	6759677	Symbol	* AAC_NUM_BLOCKS_SHORT		6758665						
ANR	6759678	Symbol	* wi		6758665						
ANR	6759679	Symbol	AAC_BLOCK_SIZE_SHORT		6758665						
ANR	6759680	Symbol	& wi		6758665						
ANR	6759681	Symbol	prev_type		6758665						
ANR	6759682	Symbol	* energy_short		6758665						
ANR	6759683	Symbol	ctx		6758665						
ANR	6759684	Symbol	* * pch		6758665						
ANR	6759685	Symbol	* attacks		6758665						
ANR	6759686	Symbol	pch -> prev_attack		6758665						
ANR	6759687	Symbol	wbuf		6758665						
ANR	6759688	Symbol	psy_fir_coeffs		6758665						
ANR	6759689	Symbol	grouping		6758665						
ANR	6759690	Symbol	pfe		6758665						
ANR	6759691	Symbol	clippings		6758665						
ANR	6759692	Symbol	pch -> next_grouping		6758665						
ANR	6759693	Symbol	EIGHT_SHORT_SEQUENCE		6758665						
ANR	6759694	Symbol	* PSY_LAME_NUM_SUBBLOCKS		6758665						
ANR	6759695	Symbol	pctx -> ch		6758665						
ANR	6759696	Symbol	wi . window_shape		6758665						
ANR	6759697	Symbol	wi . num_windows		6758665						
ANR	6759698	Symbol	lastgrp		6758665						
ANR	6759699	Symbol	* pch		6758665						
ANR	6759700	Symbol	* pf		6758665						
ANR	6759701	Symbol	hpfsmpl		6758665						
ANR	6759702	Symbol	* pctx		6758665						
ANR	6759703	Symbol	* wi . grouping		6758665						
ANR	6759704	Symbol	fabsf		6758665						
ANR	6759705	Symbol	wi		6758665						
ANR	6759706	Symbol	LONG_START_SEQUENCE		6758665						
ANR	6759707	Symbol	pch		6758665						
ANR	6759708	Symbol	uselongblock		6758665						
ANR	6759709	Symbol	audio		6758665						
ANR	6759710	Symbol	AAC_NUM_BLOCKS_SHORT		6758665						
ANR	6759711	Symbol	energy_short		6758665						
ANR	6759712	Symbol	wi . clipping		6758665						
ANR	6759713	Symbol	* window_grouping		6758665						
ANR	6759714	Symbol	attack_intensity		6758665						
ANR	6759715	Symbol	AAC_BLOCK_SIZE_LONG		6758665						
ANR	6759716	Symbol	max		6758665						
ANR	6759717	Symbol	i		6758665						
ANR	6759718	Symbol	* clippings		6758665						
ANR	6759719	Symbol	pch -> prev_energy_subshort		6758665						
ANR	6759720	Symbol	j		6758665						
ANR	6759721	Symbol	m		6758665						
ANR	6759722	Symbol	* ctx		6758665						
ANR	6759723	Symbol	p		6758665						
ANR	6759724	Symbol	* grouping		6758665						
ANR	6759725	Symbol	* i		6758665						
ANR	6759726	Symbol	* j		6758665						
ANR	6759727	Symbol	* wbuf		6758665						
ANR	6759728	Symbol	la		6758665						
ANR	6759729	Symbol	u		6758665						
ANR	6759730	Symbol	pf		6758665						
ANR	6759731	Symbol	v		6758665						
ANR	6759732	Symbol	pch -> attack_threshold		6758665						
ANR	6759733	Symbol	w		6758665						
ANR	6759734	Symbol	energy_subshort		6758665						
ANR	6759735	Symbol	window_grouping		6758665						
ANR	6759736	Symbol	ctx -> model_priv_data		6758665						
ANR	6759737	Symbol	* attack_intensity		6758665						
ANR	6759738	Symbol	FFMAX		6758665						
