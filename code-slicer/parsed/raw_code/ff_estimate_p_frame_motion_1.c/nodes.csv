command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3266384	File	/home/p4ultr4n/workplace/ReVeal/raw_code/ff_estimate_p_frame_motion_1.c								
ANR	3266385	Function	ff_estimate_p_frame_motion	1:0:0:9049							
ANR	3266386	FunctionDef	"ff_estimate_p_frame_motion (MpegEncContext * s , int mb_x , int mb_y)"		3266385	0					
ANR	3266387	CompoundStatement		5:0:106:9049	3266385	0					
ANR	3266388	Statement	MotionEstContext	7:4:113:128	3266385	0	True				
ANR	3266389	Statement	*	7:21:130:130	3266385	1	True				
ANR	3266390	Statement	const	7:23:132:136	3266385	2	True				
ANR	3266391	ExpressionStatement	c = & s -> me	7:29:138:147	3266385	3	True				
ANR	3266392	AssignmentExpression	c = & s -> me		3266385	0		=			
ANR	3266393	Identifier	c		3266385	0					
ANR	3266394	UnaryOperationExpression	& s -> me		3266385	1					
ANR	3266395	UnaryOperator	&		3266385	0					
ANR	3266396	PtrMemberAccess	s -> me		3266385	1					
ANR	3266397	Identifier	s		3266385	0					
ANR	3266398	Identifier	me		3266385	1					
ANR	3266399	IdentifierDeclStatement	"uint8_t * pix , * ppix ;"	9:4:154:173	3266385	4	True				
ANR	3266400	IdentifierDecl	* pix		3266385	0					
ANR	3266401	IdentifierDeclType	uint8_t *		3266385	0					
ANR	3266402	Identifier	pix		3266385	1					
ANR	3266403	IdentifierDecl	* ppix		3266385	1					
ANR	3266404	IdentifierDeclType	uint8_t *		3266385	0					
ANR	3266405	Identifier	ppix		3266385	1					
ANR	3266406	IdentifierDeclStatement	"int sum , mx , my , dmin ;"	11:4:180:201	3266385	5	True				
ANR	3266407	IdentifierDecl	sum		3266385	0					
ANR	3266408	IdentifierDeclType	int		3266385	0					
ANR	3266409	Identifier	sum		3266385	1					
ANR	3266410	IdentifierDecl	mx		3266385	1					
ANR	3266411	IdentifierDeclType	int		3266385	0					
ANR	3266412	Identifier	mx		3266385	1					
ANR	3266413	IdentifierDecl	my		3266385	2					
ANR	3266414	IdentifierDeclType	int		3266385	0					
ANR	3266415	Identifier	my		3266385	1					
ANR	3266416	IdentifierDecl	dmin		3266385	3					
ANR	3266417	IdentifierDeclType	int		3266385	0					
ANR	3266418	Identifier	dmin		3266385	1					
ANR	3266419	IdentifierDeclStatement	int varc ;	13:4:208:216	3266385	6	True				
ANR	3266420	IdentifierDecl	varc		3266385	0					
ANR	3266421	IdentifierDeclType	int		3266385	0					
ANR	3266422	Identifier	varc		3266385	1					
ANR	3266423	IdentifierDeclStatement	int vard ;	15:4:300:308	3266385	7	True				
ANR	3266424	IdentifierDecl	vard		3266385	0					
ANR	3266425	IdentifierDeclType	int		3266385	0					
ANR	3266426	Identifier	vard		3266385	1					
ANR	3266427	Statement	int	17:4:391:393	3266385	8	True				
ANR	3266428	ExpressionStatement	P [ 10 ] [ 2 ]	17:8:395:403	3266385	9	True				
ANR	3266429	ArrayIndexing	P [ 10 ] [ 2 ]		3266385	0					
ANR	3266430	ArrayIndexing	P [ 10 ]		3266385	0					
ANR	3266431	Identifier	P		3266385	0					
ANR	3266432	PrimaryExpression	10		3266385	1					
ANR	3266433	PrimaryExpression	2		3266385	1					
ANR	3266434	IdentifierDeclStatement	const int shift = 1 + s -> quarter_sample ;	19:4:410:446	3266385	10	True				
ANR	3266435	IdentifierDecl	shift = 1 + s -> quarter_sample		3266385	0					
ANR	3266436	IdentifierDeclType	const int		3266385	0					
ANR	3266437	Identifier	shift		3266385	1					
ANR	3266438	AssignmentExpression	shift = 1 + s -> quarter_sample		3266385	2		=			
ANR	3266439	Identifier	shift		3266385	0					
ANR	3266440	AdditiveExpression	1 + s -> quarter_sample		3266385	1		+			
ANR	3266441	PrimaryExpression	1		3266385	0					
ANR	3266442	PtrMemberAccess	s -> quarter_sample		3266385	1					
ANR	3266443	Identifier	s		3266385	0					
ANR	3266444	Identifier	quarter_sample		3266385	1					
ANR	3266445	IdentifierDeclStatement	int mb_type = 0 ;	21:4:453:466	3266385	11	True				
ANR	3266446	IdentifierDecl	mb_type = 0		3266385	0					
ANR	3266447	IdentifierDeclType	int		3266385	0					
ANR	3266448	Identifier	mb_type		3266385	1					
ANR	3266449	AssignmentExpression	mb_type = 0		3266385	2		=			
ANR	3266450	Identifier	mb_type		3266385	0					
ANR	3266451	PrimaryExpression	0		3266385	1					
ANR	3266452	Statement	Picture	23:4:473:479	3266385	12	True				
ANR	3266453	Statement	*	23:12:481:481	3266385	13	True				
ANR	3266454	Statement	const	23:14:483:487	3266385	14	True				
ANR	3266455	ExpressionStatement	pic = & s -> current_picture	23:20:489:513	3266385	15	True				
ANR	3266456	AssignmentExpression	pic = & s -> current_picture		3266385	0		=			
ANR	3266457	Identifier	pic		3266385	0					
ANR	3266458	UnaryOperationExpression	& s -> current_picture		3266385	1					
ANR	3266459	UnaryOperator	&		3266385	0					
ANR	3266460	PtrMemberAccess	s -> current_picture		3266385	1					
ANR	3266461	Identifier	s		3266385	0					
ANR	3266462	Identifier	current_picture		3266385	1					
ANR	3266463	ExpressionStatement	"init_ref ( c , s -> new_picture . f . data , s -> last_picture . f . data , NULL , 16 * mb_x , 16 * mb_y , 0 )"	27:4:522:607	3266385	16	True				
ANR	3266464	CallExpression	"init_ref ( c , s -> new_picture . f . data , s -> last_picture . f . data , NULL , 16 * mb_x , 16 * mb_y , 0 )"		3266385	0					
ANR	3266465	Callee	init_ref		3266385	0					
ANR	3266466	Identifier	init_ref		3266385	0					
ANR	3266467	ArgumentList	c		3266385	1					
ANR	3266468	Argument	c		3266385	0					
ANR	3266469	Identifier	c		3266385	0					
ANR	3266470	Argument	s -> new_picture . f . data		3266385	1					
ANR	3266471	MemberAccess	s -> new_picture . f . data		3266385	0					
ANR	3266472	MemberAccess	s -> new_picture . f		3266385	0					
ANR	3266473	PtrMemberAccess	s -> new_picture		3266385	0					
ANR	3266474	Identifier	s		3266385	0					
ANR	3266475	Identifier	new_picture		3266385	1					
ANR	3266476	Identifier	f		3266385	1					
ANR	3266477	Identifier	data		3266385	1					
ANR	3266478	Argument	s -> last_picture . f . data		3266385	2					
ANR	3266479	MemberAccess	s -> last_picture . f . data		3266385	0					
ANR	3266480	MemberAccess	s -> last_picture . f		3266385	0					
ANR	3266481	PtrMemberAccess	s -> last_picture		3266385	0					
ANR	3266482	Identifier	s		3266385	0					
ANR	3266483	Identifier	last_picture		3266385	1					
ANR	3266484	Identifier	f		3266385	1					
ANR	3266485	Identifier	data		3266385	1					
ANR	3266486	Argument	NULL		3266385	3					
ANR	3266487	Identifier	NULL		3266385	0					
ANR	3266488	Argument	16 * mb_x		3266385	4					
ANR	3266489	MultiplicativeExpression	16 * mb_x		3266385	0		*			
ANR	3266490	PrimaryExpression	16		3266385	0					
ANR	3266491	Identifier	mb_x		3266385	1					
ANR	3266492	Argument	16 * mb_y		3266385	5					
ANR	3266493	MultiplicativeExpression	16 * mb_y		3266385	0		*			
ANR	3266494	PrimaryExpression	16		3266385	0					
ANR	3266495	Identifier	mb_y		3266385	1					
ANR	3266496	Argument	0		3266385	6					
ANR	3266497	PrimaryExpression	0		3266385	0					
ANR	3266498	ExpressionStatement	assert ( s -> quarter_sample == 0 || s -> quarter_sample == 1 )	31:4:616:668	3266385	17	True				
ANR	3266499	CallExpression	assert ( s -> quarter_sample == 0 || s -> quarter_sample == 1 )		3266385	0					
ANR	3266500	Callee	assert		3266385	0					
ANR	3266501	Identifier	assert		3266385	0					
ANR	3266502	ArgumentList	s -> quarter_sample == 0 || s -> quarter_sample == 1		3266385	1					
ANR	3266503	Argument	s -> quarter_sample == 0 || s -> quarter_sample == 1		3266385	0					
ANR	3266504	OrExpression	s -> quarter_sample == 0 || s -> quarter_sample == 1		3266385	0		||			
ANR	3266505	EqualityExpression	s -> quarter_sample == 0		3266385	0		==			
ANR	3266506	PtrMemberAccess	s -> quarter_sample		3266385	0					
ANR	3266507	Identifier	s		3266385	0					
ANR	3266508	Identifier	quarter_sample		3266385	1					
ANR	3266509	PrimaryExpression	0		3266385	1					
ANR	3266510	EqualityExpression	s -> quarter_sample == 1		3266385	1		==			
ANR	3266511	PtrMemberAccess	s -> quarter_sample		3266385	0					
ANR	3266512	Identifier	s		3266385	0					
ANR	3266513	Identifier	quarter_sample		3266385	1					
ANR	3266514	PrimaryExpression	1		3266385	1					
ANR	3266515	ExpressionStatement	assert ( s -> linesize == c -> stride )	33:4:675:707	3266385	18	True				
ANR	3266516	CallExpression	assert ( s -> linesize == c -> stride )		3266385	0					
ANR	3266517	Callee	assert		3266385	0					
ANR	3266518	Identifier	assert		3266385	0					
ANR	3266519	ArgumentList	s -> linesize == c -> stride		3266385	1					
ANR	3266520	Argument	s -> linesize == c -> stride		3266385	0					
ANR	3266521	EqualityExpression	s -> linesize == c -> stride		3266385	0		==			
ANR	3266522	PtrMemberAccess	s -> linesize		3266385	0					
ANR	3266523	Identifier	s		3266385	0					
ANR	3266524	Identifier	linesize		3266385	1					
ANR	3266525	PtrMemberAccess	c -> stride		3266385	1					
ANR	3266526	Identifier	c		3266385	0					
ANR	3266527	Identifier	stride		3266385	1					
ANR	3266528	ExpressionStatement	assert ( s -> uvlinesize == c -> uvstride )	35:4:714:750	3266385	19	True				
ANR	3266529	CallExpression	assert ( s -> uvlinesize == c -> uvstride )		3266385	0					
ANR	3266530	Callee	assert		3266385	0					
ANR	3266531	Identifier	assert		3266385	0					
ANR	3266532	ArgumentList	s -> uvlinesize == c -> uvstride		3266385	1					
ANR	3266533	Argument	s -> uvlinesize == c -> uvstride		3266385	0					
ANR	3266534	EqualityExpression	s -> uvlinesize == c -> uvstride		3266385	0		==			
ANR	3266535	PtrMemberAccess	s -> uvlinesize		3266385	0					
ANR	3266536	Identifier	s		3266385	0					
ANR	3266537	Identifier	uvlinesize		3266385	1					
ANR	3266538	PtrMemberAccess	c -> uvstride		3266385	1					
ANR	3266539	Identifier	c		3266385	0					
ANR	3266540	Identifier	uvstride		3266385	1					
ANR	3266541	ExpressionStatement	"c -> penalty_factor = get_penalty_factor ( s -> lambda , s -> lambda2 , c -> avctx -> me_cmp )"	39:4:759:841	3266385	20	True				
ANR	3266542	AssignmentExpression	"c -> penalty_factor = get_penalty_factor ( s -> lambda , s -> lambda2 , c -> avctx -> me_cmp )"		3266385	0		=			
ANR	3266543	PtrMemberAccess	c -> penalty_factor		3266385	0					
ANR	3266544	Identifier	c		3266385	0					
ANR	3266545	Identifier	penalty_factor		3266385	1					
ANR	3266546	CallExpression	"get_penalty_factor ( s -> lambda , s -> lambda2 , c -> avctx -> me_cmp )"		3266385	1					
ANR	3266547	Callee	get_penalty_factor		3266385	0					
ANR	3266548	Identifier	get_penalty_factor		3266385	0					
ANR	3266549	ArgumentList	s -> lambda		3266385	1					
ANR	3266550	Argument	s -> lambda		3266385	0					
ANR	3266551	PtrMemberAccess	s -> lambda		3266385	0					
ANR	3266552	Identifier	s		3266385	0					
ANR	3266553	Identifier	lambda		3266385	1					
ANR	3266554	Argument	s -> lambda2		3266385	1					
ANR	3266555	PtrMemberAccess	s -> lambda2		3266385	0					
ANR	3266556	Identifier	s		3266385	0					
ANR	3266557	Identifier	lambda2		3266385	1					
ANR	3266558	Argument	c -> avctx -> me_cmp		3266385	2					
ANR	3266559	PtrMemberAccess	c -> avctx -> me_cmp		3266385	0					
ANR	3266560	PtrMemberAccess	c -> avctx		3266385	0					
ANR	3266561	Identifier	c		3266385	0					
ANR	3266562	Identifier	avctx		3266385	1					
ANR	3266563	Identifier	me_cmp		3266385	1					
ANR	3266564	ExpressionStatement	"c -> sub_penalty_factor = get_penalty_factor ( s -> lambda , s -> lambda2 , c -> avctx -> me_sub_cmp )"	41:4:848:934	3266385	21	True				
ANR	3266565	AssignmentExpression	"c -> sub_penalty_factor = get_penalty_factor ( s -> lambda , s -> lambda2 , c -> avctx -> me_sub_cmp )"		3266385	0		=			
ANR	3266566	PtrMemberAccess	c -> sub_penalty_factor		3266385	0					
ANR	3266567	Identifier	c		3266385	0					
ANR	3266568	Identifier	sub_penalty_factor		3266385	1					
ANR	3266569	CallExpression	"get_penalty_factor ( s -> lambda , s -> lambda2 , c -> avctx -> me_sub_cmp )"		3266385	1					
ANR	3266570	Callee	get_penalty_factor		3266385	0					
ANR	3266571	Identifier	get_penalty_factor		3266385	0					
ANR	3266572	ArgumentList	s -> lambda		3266385	1					
ANR	3266573	Argument	s -> lambda		3266385	0					
ANR	3266574	PtrMemberAccess	s -> lambda		3266385	0					
ANR	3266575	Identifier	s		3266385	0					
ANR	3266576	Identifier	lambda		3266385	1					
ANR	3266577	Argument	s -> lambda2		3266385	1					
ANR	3266578	PtrMemberAccess	s -> lambda2		3266385	0					
ANR	3266579	Identifier	s		3266385	0					
ANR	3266580	Identifier	lambda2		3266385	1					
ANR	3266581	Argument	c -> avctx -> me_sub_cmp		3266385	2					
ANR	3266582	PtrMemberAccess	c -> avctx -> me_sub_cmp		3266385	0					
ANR	3266583	PtrMemberAccess	c -> avctx		3266385	0					
ANR	3266584	Identifier	c		3266385	0					
ANR	3266585	Identifier	avctx		3266385	1					
ANR	3266586	Identifier	me_sub_cmp		3266385	1					
ANR	3266587	ExpressionStatement	"c -> mb_penalty_factor = get_penalty_factor ( s -> lambda , s -> lambda2 , c -> avctx -> mb_cmp )"	43:4:941:1023	3266385	22	True				
ANR	3266588	AssignmentExpression	"c -> mb_penalty_factor = get_penalty_factor ( s -> lambda , s -> lambda2 , c -> avctx -> mb_cmp )"		3266385	0		=			
ANR	3266589	PtrMemberAccess	c -> mb_penalty_factor		3266385	0					
ANR	3266590	Identifier	c		3266385	0					
ANR	3266591	Identifier	mb_penalty_factor		3266385	1					
ANR	3266592	CallExpression	"get_penalty_factor ( s -> lambda , s -> lambda2 , c -> avctx -> mb_cmp )"		3266385	1					
ANR	3266593	Callee	get_penalty_factor		3266385	0					
ANR	3266594	Identifier	get_penalty_factor		3266385	0					
ANR	3266595	ArgumentList	s -> lambda		3266385	1					
ANR	3266596	Argument	s -> lambda		3266385	0					
ANR	3266597	PtrMemberAccess	s -> lambda		3266385	0					
ANR	3266598	Identifier	s		3266385	0					
ANR	3266599	Identifier	lambda		3266385	1					
ANR	3266600	Argument	s -> lambda2		3266385	1					
ANR	3266601	PtrMemberAccess	s -> lambda2		3266385	0					
ANR	3266602	Identifier	s		3266385	0					
ANR	3266603	Identifier	lambda2		3266385	1					
ANR	3266604	Argument	c -> avctx -> mb_cmp		3266385	2					
ANR	3266605	PtrMemberAccess	c -> avctx -> mb_cmp		3266385	0					
ANR	3266606	PtrMemberAccess	c -> avctx		3266385	0					
ANR	3266607	Identifier	c		3266385	0					
ANR	3266608	Identifier	avctx		3266385	1					
ANR	3266609	Identifier	mb_cmp		3266385	1					
ANR	3266610	ExpressionStatement	c -> current_mv_penalty = c -> mv_penalty [ s -> f_code ] + MAX_MV	45:4:1030:1086	3266385	23	True				
ANR	3266611	AssignmentExpression	c -> current_mv_penalty = c -> mv_penalty [ s -> f_code ] + MAX_MV		3266385	0		=			
ANR	3266612	PtrMemberAccess	c -> current_mv_penalty		3266385	0					
ANR	3266613	Identifier	c		3266385	0					
ANR	3266614	Identifier	current_mv_penalty		3266385	1					
ANR	3266615	AdditiveExpression	c -> mv_penalty [ s -> f_code ] + MAX_MV		3266385	1		+			
ANR	3266616	ArrayIndexing	c -> mv_penalty [ s -> f_code ]		3266385	0					
ANR	3266617	PtrMemberAccess	c -> mv_penalty		3266385	0					
ANR	3266618	Identifier	c		3266385	0					
ANR	3266619	Identifier	mv_penalty		3266385	1					
ANR	3266620	PtrMemberAccess	s -> f_code		3266385	1					
ANR	3266621	Identifier	s		3266385	0					
ANR	3266622	Identifier	f_code		3266385	1					
ANR	3266623	Identifier	MAX_MV		3266385	1					
ANR	3266624	ExpressionStatement	"get_limits ( s , 16 * mb_x , 16 * mb_y )"	49:4:1095:1126	3266385	24	True				
ANR	3266625	CallExpression	"get_limits ( s , 16 * mb_x , 16 * mb_y )"		3266385	0					
ANR	3266626	Callee	get_limits		3266385	0					
ANR	3266627	Identifier	get_limits		3266385	0					
ANR	3266628	ArgumentList	s		3266385	1					
ANR	3266629	Argument	s		3266385	0					
ANR	3266630	Identifier	s		3266385	0					
ANR	3266631	Argument	16 * mb_x		3266385	1					
ANR	3266632	MultiplicativeExpression	16 * mb_x		3266385	0		*			
ANR	3266633	PrimaryExpression	16		3266385	0					
ANR	3266634	Identifier	mb_x		3266385	1					
ANR	3266635	Argument	16 * mb_y		3266385	2					
ANR	3266636	MultiplicativeExpression	16 * mb_y		3266385	0		*			
ANR	3266637	PrimaryExpression	16		3266385	0					
ANR	3266638	Identifier	mb_y		3266385	1					
ANR	3266639	ExpressionStatement	c -> skip = 0	51:4:1133:1142	3266385	25	True				
ANR	3266640	AssignmentExpression	c -> skip = 0		3266385	0		=			
ANR	3266641	PtrMemberAccess	c -> skip		3266385	0					
ANR	3266642	Identifier	c		3266385	0					
ANR	3266643	Identifier	skip		3266385	1					
ANR	3266644	PrimaryExpression	0		3266385	1					
ANR	3266645	ExpressionStatement	pix = c -> src [ 0 ] [ 0 ]	57:4:1190:1208	3266385	26	True				
ANR	3266646	AssignmentExpression	pix = c -> src [ 0 ] [ 0 ]		3266385	0		=			
ANR	3266647	Identifier	pix		3266385	0					
ANR	3266648	ArrayIndexing	c -> src [ 0 ] [ 0 ]		3266385	1					
ANR	3266649	ArrayIndexing	c -> src [ 0 ]		3266385	0					
ANR	3266650	PtrMemberAccess	c -> src		3266385	0					
ANR	3266651	Identifier	c		3266385	0					
ANR	3266652	Identifier	src		3266385	1					
ANR	3266653	PrimaryExpression	0		3266385	1					
ANR	3266654	PrimaryExpression	0		3266385	1					
ANR	3266655	ExpressionStatement	"sum = s -> dsp . pix_sum ( pix , s -> linesize )"	59:4:1215:1253	3266385	27	True				
ANR	3266656	AssignmentExpression	"sum = s -> dsp . pix_sum ( pix , s -> linesize )"		3266385	0		=			
ANR	3266657	Identifier	sum		3266385	0					
ANR	3266658	CallExpression	"s -> dsp . pix_sum ( pix , s -> linesize )"		3266385	1					
ANR	3266659	Callee	s -> dsp . pix_sum		3266385	0					
ANR	3266660	MemberAccess	s -> dsp . pix_sum		3266385	0					
ANR	3266661	PtrMemberAccess	s -> dsp		3266385	0					
ANR	3266662	Identifier	s		3266385	0					
ANR	3266663	Identifier	dsp		3266385	1					
ANR	3266664	Identifier	pix_sum		3266385	1					
ANR	3266665	ArgumentList	pix		3266385	1					
ANR	3266666	Argument	pix		3266385	0					
ANR	3266667	Identifier	pix		3266385	0					
ANR	3266668	Argument	s -> linesize		3266385	1					
ANR	3266669	PtrMemberAccess	s -> linesize		3266385	0					
ANR	3266670	Identifier	s		3266385	0					
ANR	3266671	Identifier	linesize		3266385	1					
ANR	3266672	ExpressionStatement	"varc = s -> dsp . pix_norm1 ( pix , s -> linesize ) - ( ( ( unsigned ) ( sum * sum ) ) >> 8 ) + 500"	61:4:1260:1336	3266385	28	True				
ANR	3266673	AssignmentExpression	"varc = s -> dsp . pix_norm1 ( pix , s -> linesize ) - ( ( ( unsigned ) ( sum * sum ) ) >> 8 ) + 500"		3266385	0		=			
ANR	3266674	Identifier	varc		3266385	0					
ANR	3266675	AdditiveExpression	"s -> dsp . pix_norm1 ( pix , s -> linesize ) - ( ( ( unsigned ) ( sum * sum ) ) >> 8 ) + 500"		3266385	1		-			
ANR	3266676	CallExpression	"s -> dsp . pix_norm1 ( pix , s -> linesize )"		3266385	0					
ANR	3266677	Callee	s -> dsp . pix_norm1		3266385	0					
ANR	3266678	MemberAccess	s -> dsp . pix_norm1		3266385	0					
ANR	3266679	PtrMemberAccess	s -> dsp		3266385	0					
ANR	3266680	Identifier	s		3266385	0					
ANR	3266681	Identifier	dsp		3266385	1					
ANR	3266682	Identifier	pix_norm1		3266385	1					
ANR	3266683	ArgumentList	pix		3266385	1					
ANR	3266684	Argument	pix		3266385	0					
ANR	3266685	Identifier	pix		3266385	0					
ANR	3266686	Argument	s -> linesize		3266385	1					
ANR	3266687	PtrMemberAccess	s -> linesize		3266385	0					
ANR	3266688	Identifier	s		3266385	0					
ANR	3266689	Identifier	linesize		3266385	1					
ANR	3266690	AdditiveExpression	( ( ( unsigned ) ( sum * sum ) ) >> 8 ) + 500		3266385	1		+			
ANR	3266691	ShiftExpression	( ( unsigned ) ( sum * sum ) ) >> 8		3266385	0		>>			
ANR	3266692	CastExpression	( unsigned ) ( sum * sum )		3266385	0					
ANR	3266693	CastTarget	unsigned		3266385	0					
ANR	3266694	MultiplicativeExpression	sum * sum		3266385	1		*			
ANR	3266695	Identifier	sum		3266385	0					
ANR	3266696	Identifier	sum		3266385	1					
ANR	3266697	PrimaryExpression	8		3266385	1					
ANR	3266698	PrimaryExpression	500		3266385	1					
ANR	3266699	ExpressionStatement	pic -> mb_mean [ s -> mb_stride * mb_y + mb_x ] = ( sum + 128 ) >> 8	65:4:1345:1400	3266385	29	True				
ANR	3266700	AssignmentExpression	pic -> mb_mean [ s -> mb_stride * mb_y + mb_x ] = ( sum + 128 ) >> 8		3266385	0		=			
ANR	3266701	ArrayIndexing	pic -> mb_mean [ s -> mb_stride * mb_y + mb_x ]		3266385	0					
ANR	3266702	PtrMemberAccess	pic -> mb_mean		3266385	0					
ANR	3266703	Identifier	pic		3266385	0					
ANR	3266704	Identifier	mb_mean		3266385	1					
ANR	3266705	AdditiveExpression	s -> mb_stride * mb_y + mb_x		3266385	1		+			
ANR	3266706	MultiplicativeExpression	s -> mb_stride * mb_y		3266385	0		*			
ANR	3266707	PtrMemberAccess	s -> mb_stride		3266385	0					
ANR	3266708	Identifier	s		3266385	0					
ANR	3266709	Identifier	mb_stride		3266385	1					
ANR	3266710	Identifier	mb_y		3266385	1					
ANR	3266711	Identifier	mb_x		3266385	1					
ANR	3266712	ShiftExpression	( sum + 128 ) >> 8		3266385	1		>>			
ANR	3266713	AdditiveExpression	sum + 128		3266385	0		+			
ANR	3266714	Identifier	sum		3266385	0					
ANR	3266715	PrimaryExpression	128		3266385	1					
ANR	3266716	PrimaryExpression	8		3266385	1					
ANR	3266717	ExpressionStatement	pic -> mb_var [ s -> mb_stride * mb_y + mb_x ] = ( varc + 128 ) >> 8	67:4:1407:1463	3266385	30	True				
ANR	3266718	AssignmentExpression	pic -> mb_var [ s -> mb_stride * mb_y + mb_x ] = ( varc + 128 ) >> 8		3266385	0		=			
ANR	3266719	ArrayIndexing	pic -> mb_var [ s -> mb_stride * mb_y + mb_x ]		3266385	0					
ANR	3266720	PtrMemberAccess	pic -> mb_var		3266385	0					
ANR	3266721	Identifier	pic		3266385	0					
ANR	3266722	Identifier	mb_var		3266385	1					
ANR	3266723	AdditiveExpression	s -> mb_stride * mb_y + mb_x		3266385	1		+			
ANR	3266724	MultiplicativeExpression	s -> mb_stride * mb_y		3266385	0		*			
ANR	3266725	PtrMemberAccess	s -> mb_stride		3266385	0					
ANR	3266726	Identifier	s		3266385	0					
ANR	3266727	Identifier	mb_stride		3266385	1					
ANR	3266728	Identifier	mb_y		3266385	1					
ANR	3266729	Identifier	mb_x		3266385	1					
ANR	3266730	ShiftExpression	( varc + 128 ) >> 8		3266385	1		>>			
ANR	3266731	AdditiveExpression	varc + 128		3266385	0		+			
ANR	3266732	Identifier	varc		3266385	0					
ANR	3266733	PrimaryExpression	128		3266385	1					
ANR	3266734	PrimaryExpression	8		3266385	1					
ANR	3266735	ExpressionStatement	c -> mb_var_sum_temp += ( varc + 128 ) >> 8	69:4:1470:1505	3266385	31	True				
ANR	3266736	AssignmentExpression	c -> mb_var_sum_temp += ( varc + 128 ) >> 8		3266385	0		+=			
ANR	3266737	PtrMemberAccess	c -> mb_var_sum_temp		3266385	0					
ANR	3266738	Identifier	c		3266385	0					
ANR	3266739	Identifier	mb_var_sum_temp		3266385	1					
ANR	3266740	ShiftExpression	( varc + 128 ) >> 8		3266385	1		>>			
ANR	3266741	AdditiveExpression	varc + 128		3266385	0		+			
ANR	3266742	Identifier	varc		3266385	0					
ANR	3266743	PrimaryExpression	128		3266385	1					
ANR	3266744	PrimaryExpression	8		3266385	1					
ANR	3266745	IfStatement	if ( c -> avctx -> me_threshold )		3266385	32					
ANR	3266746	Condition	c -> avctx -> me_threshold	73:7:1517:1538	3266385	0	True				
ANR	3266747	PtrMemberAccess	c -> avctx -> me_threshold		3266385	0					
ANR	3266748	PtrMemberAccess	c -> avctx		3266385	0					
ANR	3266749	Identifier	c		3266385	0					
ANR	3266750	Identifier	avctx		3266385	1					
ANR	3266751	Identifier	me_threshold		3266385	1					
ANR	3266752	CompoundStatement		69:30:1433:1433	3266385	1					
ANR	3266753	ExpressionStatement	"vard = check_input_motion ( s , mb_x , mb_y , 1 )"	75:8:1551:1593	3266385	0	True				
ANR	3266754	AssignmentExpression	"vard = check_input_motion ( s , mb_x , mb_y , 1 )"		3266385	0		=			
ANR	3266755	Identifier	vard		3266385	0					
ANR	3266756	CallExpression	"check_input_motion ( s , mb_x , mb_y , 1 )"		3266385	1					
ANR	3266757	Callee	check_input_motion		3266385	0					
ANR	3266758	Identifier	check_input_motion		3266385	0					
ANR	3266759	ArgumentList	s		3266385	1					
ANR	3266760	Argument	s		3266385	0					
ANR	3266761	Identifier	s		3266385	0					
ANR	3266762	Argument	mb_x		3266385	1					
ANR	3266763	Identifier	mb_x		3266385	0					
ANR	3266764	Argument	mb_y		3266385	2					
ANR	3266765	Identifier	mb_y		3266385	0					
ANR	3266766	Argument	1		3266385	3					
ANR	3266767	PrimaryExpression	1		3266385	0					
ANR	3266768	IfStatement	if ( ( vard + 128 ) >> 8 < c -> avctx -> me_threshold )		3266385	1					
ANR	3266769	Condition	( vard + 128 ) >> 8 < c -> avctx -> me_threshold	79:11:1609:1646	3266385	0	True				
ANR	3266770	RelationalExpression	( vard + 128 ) >> 8 < c -> avctx -> me_threshold		3266385	0		<			
ANR	3266771	ShiftExpression	( vard + 128 ) >> 8		3266385	0		>>			
ANR	3266772	AdditiveExpression	vard + 128		3266385	0		+			
ANR	3266773	Identifier	vard		3266385	0					
ANR	3266774	PrimaryExpression	128		3266385	1					
ANR	3266775	PrimaryExpression	8		3266385	1					
ANR	3266776	PtrMemberAccess	c -> avctx -> me_threshold		3266385	1					
ANR	3266777	PtrMemberAccess	c -> avctx		3266385	0					
ANR	3266778	Identifier	c		3266385	0					
ANR	3266779	Identifier	avctx		3266385	1					
ANR	3266780	Identifier	me_threshold		3266385	1					
ANR	3266781	CompoundStatement		79:12:1639:1693	3266385	1					
ANR	3266782	IdentifierDeclStatement	"int p_score = FFMIN ( vard , varc - 500 + ( s -> lambda2 >> FF_LAMBDA_SHIFT ) * 100 ) ;"	81:12:1663:1731	3266385	0	True				
ANR	3266783	IdentifierDecl	"p_score = FFMIN ( vard , varc - 500 + ( s -> lambda2 >> FF_LAMBDA_SHIFT ) * 100 )"		3266385	0					
ANR	3266784	IdentifierDeclType	int		3266385	0					
ANR	3266785	Identifier	p_score		3266385	1					
ANR	3266786	AssignmentExpression	"p_score = FFMIN ( vard , varc - 500 + ( s -> lambda2 >> FF_LAMBDA_SHIFT ) * 100 )"		3266385	2		=			
ANR	3266787	Identifier	p_score		3266385	0					
ANR	3266788	CallExpression	"FFMIN ( vard , varc - 500 + ( s -> lambda2 >> FF_LAMBDA_SHIFT ) * 100 )"		3266385	1					
ANR	3266789	Callee	FFMIN		3266385	0					
ANR	3266790	Identifier	FFMIN		3266385	0					
ANR	3266791	ArgumentList	vard		3266385	1					
ANR	3266792	Argument	vard		3266385	0					
ANR	3266793	Identifier	vard		3266385	0					
ANR	3266794	Argument	varc - 500 + ( s -> lambda2 >> FF_LAMBDA_SHIFT ) * 100		3266385	1					
ANR	3266795	AdditiveExpression	varc - 500 + ( s -> lambda2 >> FF_LAMBDA_SHIFT ) * 100		3266385	0		-			
ANR	3266796	Identifier	varc		3266385	0					
ANR	3266797	AdditiveExpression	500 + ( s -> lambda2 >> FF_LAMBDA_SHIFT ) * 100		3266385	1		+			
ANR	3266798	PrimaryExpression	500		3266385	0					
ANR	3266799	MultiplicativeExpression	( s -> lambda2 >> FF_LAMBDA_SHIFT ) * 100		3266385	1		*			
ANR	3266800	ShiftExpression	s -> lambda2 >> FF_LAMBDA_SHIFT		3266385	0		>>			
ANR	3266801	PtrMemberAccess	s -> lambda2		3266385	0					
ANR	3266802	Identifier	s		3266385	0					
ANR	3266803	Identifier	lambda2		3266385	1					
ANR	3266804	Identifier	FF_LAMBDA_SHIFT		3266385	1					
ANR	3266805	PrimaryExpression	100		3266385	1					
ANR	3266806	IdentifierDeclStatement	int i_score = varc - 500 + ( s -> lambda2 >> FF_LAMBDA_SHIFT ) * 20 ;	83:12:1746:1800	3266385	1	True				
ANR	3266807	IdentifierDecl	i_score = varc - 500 + ( s -> lambda2 >> FF_LAMBDA_SHIFT ) * 20		3266385	0					
ANR	3266808	IdentifierDeclType	int		3266385	0					
ANR	3266809	Identifier	i_score		3266385	1					
ANR	3266810	AssignmentExpression	i_score = varc - 500 + ( s -> lambda2 >> FF_LAMBDA_SHIFT ) * 20		3266385	2		=			
ANR	3266811	Identifier	i_score		3266385	0					
ANR	3266812	AdditiveExpression	varc - 500 + ( s -> lambda2 >> FF_LAMBDA_SHIFT ) * 20		3266385	1		-			
ANR	3266813	Identifier	varc		3266385	0					
ANR	3266814	AdditiveExpression	500 + ( s -> lambda2 >> FF_LAMBDA_SHIFT ) * 20		3266385	1		+			
ANR	3266815	PrimaryExpression	500		3266385	0					
ANR	3266816	MultiplicativeExpression	( s -> lambda2 >> FF_LAMBDA_SHIFT ) * 20		3266385	1		*			
ANR	3266817	ShiftExpression	s -> lambda2 >> FF_LAMBDA_SHIFT		3266385	0		>>			
ANR	3266818	PtrMemberAccess	s -> lambda2		3266385	0					
ANR	3266819	Identifier	s		3266385	0					
ANR	3266820	Identifier	lambda2		3266385	1					
ANR	3266821	Identifier	FF_LAMBDA_SHIFT		3266385	1					
ANR	3266822	PrimaryExpression	20		3266385	1					
ANR	3266823	ExpressionStatement	pic -> mc_mb_var [ s -> mb_stride * mb_y + mb_x ] = ( vard + 128 ) >> 8	85:12:1815:1873	3266385	2	True				
ANR	3266824	AssignmentExpression	pic -> mc_mb_var [ s -> mb_stride * mb_y + mb_x ] = ( vard + 128 ) >> 8		3266385	0		=			
ANR	3266825	ArrayIndexing	pic -> mc_mb_var [ s -> mb_stride * mb_y + mb_x ]		3266385	0					
ANR	3266826	PtrMemberAccess	pic -> mc_mb_var		3266385	0					
ANR	3266827	Identifier	pic		3266385	0					
ANR	3266828	Identifier	mc_mb_var		3266385	1					
ANR	3266829	AdditiveExpression	s -> mb_stride * mb_y + mb_x		3266385	1		+			
ANR	3266830	MultiplicativeExpression	s -> mb_stride * mb_y		3266385	0		*			
ANR	3266831	PtrMemberAccess	s -> mb_stride		3266385	0					
ANR	3266832	Identifier	s		3266385	0					
ANR	3266833	Identifier	mb_stride		3266385	1					
ANR	3266834	Identifier	mb_y		3266385	1					
ANR	3266835	Identifier	mb_x		3266385	1					
ANR	3266836	ShiftExpression	( vard + 128 ) >> 8		3266385	1		>>			
ANR	3266837	AdditiveExpression	vard + 128		3266385	0		+			
ANR	3266838	Identifier	vard		3266385	0					
ANR	3266839	PrimaryExpression	128		3266385	1					
ANR	3266840	PrimaryExpression	8		3266385	1					
ANR	3266841	ExpressionStatement	c -> mc_mb_var_sum_temp += ( vard + 128 ) >> 8	87:12:1888:1926	3266385	3	True				
ANR	3266842	AssignmentExpression	c -> mc_mb_var_sum_temp += ( vard + 128 ) >> 8		3266385	0		+=			
ANR	3266843	PtrMemberAccess	c -> mc_mb_var_sum_temp		3266385	0					
ANR	3266844	Identifier	c		3266385	0					
ANR	3266845	Identifier	mc_mb_var_sum_temp		3266385	1					
ANR	3266846	ShiftExpression	( vard + 128 ) >> 8		3266385	1		>>			
ANR	3266847	AdditiveExpression	vard + 128		3266385	0		+			
ANR	3266848	Identifier	vard		3266385	0					
ANR	3266849	PrimaryExpression	128		3266385	1					
ANR	3266850	PrimaryExpression	8		3266385	1					
ANR	3266851	ExpressionStatement	c -> scene_change_score += ff_sqrt ( p_score ) - ff_sqrt ( i_score )	89:12:1941:2000	3266385	4	True				
ANR	3266852	AssignmentExpression	c -> scene_change_score += ff_sqrt ( p_score ) - ff_sqrt ( i_score )		3266385	0		+=			
ANR	3266853	PtrMemberAccess	c -> scene_change_score		3266385	0					
ANR	3266854	Identifier	c		3266385	0					
ANR	3266855	Identifier	scene_change_score		3266385	1					
ANR	3266856	AdditiveExpression	ff_sqrt ( p_score ) - ff_sqrt ( i_score )		3266385	1		-			
ANR	3266857	CallExpression	ff_sqrt ( p_score )		3266385	0					
ANR	3266858	Callee	ff_sqrt		3266385	0					
ANR	3266859	Identifier	ff_sqrt		3266385	0					
ANR	3266860	ArgumentList	p_score		3266385	1					
ANR	3266861	Argument	p_score		3266385	0					
ANR	3266862	Identifier	p_score		3266385	0					
ANR	3266863	CallExpression	ff_sqrt ( i_score )		3266385	1					
ANR	3266864	Callee	ff_sqrt		3266385	0					
ANR	3266865	Identifier	ff_sqrt		3266385	0					
ANR	3266866	ArgumentList	i_score		3266385	1					
ANR	3266867	Argument	i_score		3266385	0					
ANR	3266868	Identifier	i_score		3266385	0					
ANR	3266869	ReturnStatement	return ;	91:12:2015:2021	3266385	5	True				
ANR	3266870	IfStatement	if ( ( vard + 128 ) >> 8 < c -> avctx -> mb_threshold )		3266385	2					
ANR	3266871	Condition	( vard + 128 ) >> 8 < c -> avctx -> mb_threshold	95:11:2046:2083	3266385	0	True				
ANR	3266872	RelationalExpression	( vard + 128 ) >> 8 < c -> avctx -> mb_threshold		3266385	0		<			
ANR	3266873	ShiftExpression	( vard + 128 ) >> 8		3266385	0		>>			
ANR	3266874	AdditiveExpression	vard + 128		3266385	0		+			
ANR	3266875	Identifier	vard		3266385	0					
ANR	3266876	PrimaryExpression	128		3266385	1					
ANR	3266877	PrimaryExpression	8		3266385	1					
ANR	3266878	PtrMemberAccess	c -> avctx -> mb_threshold		3266385	1					
ANR	3266879	PtrMemberAccess	c -> avctx		3266385	0					
ANR	3266880	Identifier	c		3266385	0					
ANR	3266881	Identifier	avctx		3266385	1					
ANR	3266882	Identifier	mb_threshold		3266385	1					
ANR	3266883	ExpressionStatement	mb_type = s -> mb_type [ mb_x + mb_y * s -> mb_stride ]	97:12:2099:2144	3266385	1	True				
ANR	3266884	AssignmentExpression	mb_type = s -> mb_type [ mb_x + mb_y * s -> mb_stride ]		3266385	0		=			
ANR	3266885	Identifier	mb_type		3266385	0					
ANR	3266886	ArrayIndexing	s -> mb_type [ mb_x + mb_y * s -> mb_stride ]		3266385	1					
ANR	3266887	PtrMemberAccess	s -> mb_type		3266385	0					
ANR	3266888	Identifier	s		3266385	0					
ANR	3266889	Identifier	mb_type		3266385	1					
ANR	3266890	AdditiveExpression	mb_x + mb_y * s -> mb_stride		3266385	1		+			
ANR	3266891	Identifier	mb_x		3266385	0					
ANR	3266892	MultiplicativeExpression	mb_y * s -> mb_stride		3266385	1		*			
ANR	3266893	Identifier	mb_y		3266385	0					
ANR	3266894	PtrMemberAccess	s -> mb_stride		3266385	1					
ANR	3266895	Identifier	s		3266385	0					
ANR	3266896	Identifier	mb_stride		3266385	1					
ANR	3266897	SwitchStatement	switch ( s -> me_method )		3266385	33					
ANR	3266898	Condition	s -> me_method	103:11:2167:2178	3266385	0	True				
ANR	3266899	PtrMemberAccess	s -> me_method		3266385	0					
ANR	3266900	Identifier	s		3266385	0					
ANR	3266901	Identifier	me_method		3266385	1					
ANR	3266902	CompoundStatement		99:25:2074:2074	3266385	1					
ANR	3266903	Label	case ME_ZERO :	105:4:2188:2200	3266385	0	True				
ANR	3266904	Identifier	ME_ZERO		3266385	0					
ANR	3266905	Label	default :	107:4:2207:2214	3266385	1	True				
ANR	3266906	Identifier	default		3266385	0					
ANR	3266907	ExpressionStatement	"no_motion_search ( s , & mx , & my )"	109:8:2225:2254	3266385	2	True				
ANR	3266908	CallExpression	"no_motion_search ( s , & mx , & my )"		3266385	0					
ANR	3266909	Callee	no_motion_search		3266385	0					
ANR	3266910	Identifier	no_motion_search		3266385	0					
ANR	3266911	ArgumentList	s		3266385	1					
ANR	3266912	Argument	s		3266385	0					
ANR	3266913	Identifier	s		3266385	0					
ANR	3266914	Argument	& mx		3266385	1					
ANR	3266915	UnaryOperationExpression	& mx		3266385	0					
ANR	3266916	UnaryOperator	&		3266385	0					
ANR	3266917	Identifier	mx		3266385	1					
ANR	3266918	Argument	& my		3266385	2					
ANR	3266919	UnaryOperationExpression	& my		3266385	0					
ANR	3266920	UnaryOperator	&		3266385	0					
ANR	3266921	Identifier	my		3266385	1					
ANR	3266922	ExpressionStatement	mx -= mb_x * 16	111:8:2265:2277	3266385	3	True				
ANR	3266923	AssignmentExpression	mx -= mb_x * 16		3266385	0		-=			
ANR	3266924	Identifier	mx		3266385	0					
ANR	3266925	MultiplicativeExpression	mb_x * 16		3266385	1		*			
ANR	3266926	Identifier	mb_x		3266385	0					
ANR	3266927	PrimaryExpression	16		3266385	1					
ANR	3266928	ExpressionStatement	my -= mb_y * 16	113:8:2288:2300	3266385	4	True				
ANR	3266929	AssignmentExpression	my -= mb_y * 16		3266385	0		-=			
ANR	3266930	Identifier	my		3266385	0					
ANR	3266931	MultiplicativeExpression	mb_y * 16		3266385	1		*			
ANR	3266932	Identifier	mb_y		3266385	0					
ANR	3266933	PrimaryExpression	16		3266385	1					
ANR	3266934	ExpressionStatement	dmin = 0	115:8:2311:2319	3266385	5	True				
ANR	3266935	AssignmentExpression	dmin = 0		3266385	0		=			
ANR	3266936	Identifier	dmin		3266385	0					
ANR	3266937	PrimaryExpression	0		3266385	1					
ANR	3266938	BreakStatement	break ;	117:8:2330:2335	3266385	6	True				
ANR	3266939	Label	case ME_X1 :	119:4:2342:2352	3266385	7	True				
ANR	3266940	Identifier	ME_X1		3266385	0					
ANR	3266941	Label	case ME_EPZS :	121:4:2359:2371	3266385	8	True				
ANR	3266942	Identifier	ME_EPZS		3266385	0					
ANR	3266943	CompoundStatement		123:12:2339:2375	3266385	9					
ANR	3266944	IdentifierDeclStatement	const int mot_stride = s -> b8_stride ;	125:12:2396:2431	3266385	0	True				
ANR	3266945	IdentifierDecl	mot_stride = s -> b8_stride		3266385	0					
ANR	3266946	IdentifierDeclType	const int		3266385	0					
ANR	3266947	Identifier	mot_stride		3266385	1					
ANR	3266948	AssignmentExpression	mot_stride = s -> b8_stride		3266385	2		=			
ANR	3266949	Identifier	mot_stride		3266385	0					
ANR	3266950	PtrMemberAccess	s -> b8_stride		3266385	1					
ANR	3266951	Identifier	s		3266385	0					
ANR	3266952	Identifier	b8_stride		3266385	1					
ANR	3266953	IdentifierDeclStatement	const int mot_xy = s -> block_index [ 0 ] ;	127:12:2446:2482	3266385	1	True				
ANR	3266954	IdentifierDecl	mot_xy = s -> block_index [ 0 ]		3266385	0					
ANR	3266955	IdentifierDeclType	const int		3266385	0					
ANR	3266956	Identifier	mot_xy		3266385	1					
ANR	3266957	AssignmentExpression	mot_xy = s -> block_index [ 0 ]		3266385	2		=			
ANR	3266958	Identifier	mot_xy		3266385	0					
ANR	3266959	ArrayIndexing	s -> block_index [ 0 ]		3266385	1					
ANR	3266960	PtrMemberAccess	s -> block_index		3266385	0					
ANR	3266961	Identifier	s		3266385	0					
ANR	3266962	Identifier	block_index		3266385	1					
ANR	3266963	PrimaryExpression	0		3266385	1					
ANR	3266964	ExpressionStatement	P_LEFT [ 0 ] = s -> current_picture . f . motion_val [ 0 ] [ mot_xy - 1 ] [ 0 ]	131:12:2499:2560	3266385	2	True				
ANR	3266965	AssignmentExpression	P_LEFT [ 0 ] = s -> current_picture . f . motion_val [ 0 ] [ mot_xy - 1 ] [ 0 ]		3266385	0		=			
ANR	3266966	ArrayIndexing	P_LEFT [ 0 ]		3266385	0					
ANR	3266967	Identifier	P_LEFT		3266385	0					
ANR	3266968	PrimaryExpression	0		3266385	1					
ANR	3266969	ArrayIndexing	s -> current_picture . f . motion_val [ 0 ] [ mot_xy - 1 ] [ 0 ]		3266385	1					
ANR	3266970	ArrayIndexing	s -> current_picture . f . motion_val [ 0 ] [ mot_xy - 1 ]		3266385	0					
ANR	3266971	ArrayIndexing	s -> current_picture . f . motion_val [ 0 ]		3266385	0					
ANR	3266972	MemberAccess	s -> current_picture . f . motion_val		3266385	0					
ANR	3266973	MemberAccess	s -> current_picture . f		3266385	0					
ANR	3266974	PtrMemberAccess	s -> current_picture		3266385	0					
ANR	3266975	Identifier	s		3266385	0					
ANR	3266976	Identifier	current_picture		3266385	1					
ANR	3266977	Identifier	f		3266385	1					
ANR	3266978	Identifier	motion_val		3266385	1					
ANR	3266979	PrimaryExpression	0		3266385	1					
ANR	3266980	AdditiveExpression	mot_xy - 1		3266385	1		-			
ANR	3266981	Identifier	mot_xy		3266385	0					
ANR	3266982	PrimaryExpression	1		3266385	1					
ANR	3266983	PrimaryExpression	0		3266385	1					
ANR	3266984	ExpressionStatement	P_LEFT [ 1 ] = s -> current_picture . f . motion_val [ 0 ] [ mot_xy - 1 ] [ 1 ]	133:12:2575:2636	3266385	3	True				
ANR	3266985	AssignmentExpression	P_LEFT [ 1 ] = s -> current_picture . f . motion_val [ 0 ] [ mot_xy - 1 ] [ 1 ]		3266385	0		=			
ANR	3266986	ArrayIndexing	P_LEFT [ 1 ]		3266385	0					
ANR	3266987	Identifier	P_LEFT		3266385	0					
ANR	3266988	PrimaryExpression	1		3266385	1					
ANR	3266989	ArrayIndexing	s -> current_picture . f . motion_val [ 0 ] [ mot_xy - 1 ] [ 1 ]		3266385	1					
ANR	3266990	ArrayIndexing	s -> current_picture . f . motion_val [ 0 ] [ mot_xy - 1 ]		3266385	0					
ANR	3266991	ArrayIndexing	s -> current_picture . f . motion_val [ 0 ]		3266385	0					
ANR	3266992	MemberAccess	s -> current_picture . f . motion_val		3266385	0					
ANR	3266993	MemberAccess	s -> current_picture . f		3266385	0					
ANR	3266994	PtrMemberAccess	s -> current_picture		3266385	0					
ANR	3266995	Identifier	s		3266385	0					
ANR	3266996	Identifier	current_picture		3266385	1					
ANR	3266997	Identifier	f		3266385	1					
ANR	3266998	Identifier	motion_val		3266385	1					
ANR	3266999	PrimaryExpression	0		3266385	1					
ANR	3267000	AdditiveExpression	mot_xy - 1		3266385	1		-			
ANR	3267001	Identifier	mot_xy		3266385	0					
ANR	3267002	PrimaryExpression	1		3266385	1					
ANR	3267003	PrimaryExpression	1		3266385	1					
ANR	3267004	IfStatement	if ( P_LEFT [ 0 ] > ( c -> xmax << shift ) )		3266385	4					
ANR	3267005	Condition	P_LEFT [ 0 ] > ( c -> xmax << shift )	137:15:2656:2689	3266385	0	True				
ANR	3267006	RelationalExpression	P_LEFT [ 0 ] > ( c -> xmax << shift )		3266385	0		>			
ANR	3267007	ArrayIndexing	P_LEFT [ 0 ]		3266385	0					
ANR	3267008	Identifier	P_LEFT		3266385	0					
ANR	3267009	PrimaryExpression	0		3266385	1					
ANR	3267010	ShiftExpression	c -> xmax << shift		3266385	1		<<			
ANR	3267011	PtrMemberAccess	c -> xmax		3266385	0					
ANR	3267012	Identifier	c		3266385	0					
ANR	3267013	Identifier	xmax		3266385	1					
ANR	3267014	Identifier	shift		3266385	1					
ANR	3267015	ExpressionStatement	P_LEFT [ 0 ] = ( c -> xmax << shift )	137:51:2692:2726	3266385	1	True				
ANR	3267016	AssignmentExpression	P_LEFT [ 0 ] = ( c -> xmax << shift )		3266385	0		=			
ANR	3267017	ArrayIndexing	P_LEFT [ 0 ]		3266385	0					
ANR	3267018	Identifier	P_LEFT		3266385	0					
ANR	3267019	PrimaryExpression	0		3266385	1					
ANR	3267020	ShiftExpression	c -> xmax << shift		3266385	1		<<			
ANR	3267021	PtrMemberAccess	c -> xmax		3266385	0					
ANR	3267022	Identifier	c		3266385	0					
ANR	3267023	Identifier	xmax		3266385	1					
ANR	3267024	Identifier	shift		3266385	1					
ANR	3267025	IfStatement	if ( ! s -> first_slice_line )		3266385	5					
ANR	3267026	Condition	! s -> first_slice_line	141:15:2746:2765	3266385	0	True				
ANR	3267027	UnaryOperationExpression	! s -> first_slice_line		3266385	0					
ANR	3267028	UnaryOperator	!		3266385	0					
ANR	3267029	PtrMemberAccess	s -> first_slice_line		3266385	1					
ANR	3267030	Identifier	s		3266385	0					
ANR	3267031	Identifier	first_slice_line		3266385	1					
ANR	3267032	CompoundStatement		137:37:2661:2661	3266385	1					
ANR	3267033	ExpressionStatement	P_TOP [ 0 ] = s -> current_picture . f . motion_val [ 0 ] [ mot_xy - mot_stride ] [ 0 ]	143:16:2787:2865	3266385	0	True				
ANR	3267034	AssignmentExpression	P_TOP [ 0 ] = s -> current_picture . f . motion_val [ 0 ] [ mot_xy - mot_stride ] [ 0 ]		3266385	0		=			
ANR	3267035	ArrayIndexing	P_TOP [ 0 ]		3266385	0					
ANR	3267036	Identifier	P_TOP		3266385	0					
ANR	3267037	PrimaryExpression	0		3266385	1					
ANR	3267038	ArrayIndexing	s -> current_picture . f . motion_val [ 0 ] [ mot_xy - mot_stride ] [ 0 ]		3266385	1					
ANR	3267039	ArrayIndexing	s -> current_picture . f . motion_val [ 0 ] [ mot_xy - mot_stride ]		3266385	0					
ANR	3267040	ArrayIndexing	s -> current_picture . f . motion_val [ 0 ]		3266385	0					
ANR	3267041	MemberAccess	s -> current_picture . f . motion_val		3266385	0					
ANR	3267042	MemberAccess	s -> current_picture . f		3266385	0					
ANR	3267043	PtrMemberAccess	s -> current_picture		3266385	0					
ANR	3267044	Identifier	s		3266385	0					
ANR	3267045	Identifier	current_picture		3266385	1					
ANR	3267046	Identifier	f		3266385	1					
ANR	3267047	Identifier	motion_val		3266385	1					
ANR	3267048	PrimaryExpression	0		3266385	1					
ANR	3267049	AdditiveExpression	mot_xy - mot_stride		3266385	1		-			
ANR	3267050	Identifier	mot_xy		3266385	0					
ANR	3267051	Identifier	mot_stride		3266385	1					
ANR	3267052	PrimaryExpression	0		3266385	1					
ANR	3267053	ExpressionStatement	P_TOP [ 1 ] = s -> current_picture . f . motion_val [ 0 ] [ mot_xy - mot_stride ] [ 1 ]	145:16:2884:2962	3266385	1	True				
ANR	3267054	AssignmentExpression	P_TOP [ 1 ] = s -> current_picture . f . motion_val [ 0 ] [ mot_xy - mot_stride ] [ 1 ]		3266385	0		=			
ANR	3267055	ArrayIndexing	P_TOP [ 1 ]		3266385	0					
ANR	3267056	Identifier	P_TOP		3266385	0					
ANR	3267057	PrimaryExpression	1		3266385	1					
ANR	3267058	ArrayIndexing	s -> current_picture . f . motion_val [ 0 ] [ mot_xy - mot_stride ] [ 1 ]		3266385	1					
ANR	3267059	ArrayIndexing	s -> current_picture . f . motion_val [ 0 ] [ mot_xy - mot_stride ]		3266385	0					
ANR	3267060	ArrayIndexing	s -> current_picture . f . motion_val [ 0 ]		3266385	0					
ANR	3267061	MemberAccess	s -> current_picture . f . motion_val		3266385	0					
ANR	3267062	MemberAccess	s -> current_picture . f		3266385	0					
ANR	3267063	PtrMemberAccess	s -> current_picture		3266385	0					
ANR	3267064	Identifier	s		3266385	0					
ANR	3267065	Identifier	current_picture		3266385	1					
ANR	3267066	Identifier	f		3266385	1					
ANR	3267067	Identifier	motion_val		3266385	1					
ANR	3267068	PrimaryExpression	0		3266385	1					
ANR	3267069	AdditiveExpression	mot_xy - mot_stride		3266385	1		-			
ANR	3267070	Identifier	mot_xy		3266385	0					
ANR	3267071	Identifier	mot_stride		3266385	1					
ANR	3267072	PrimaryExpression	1		3266385	1					
ANR	3267073	ExpressionStatement	P_TOPRIGHT [ 0 ] = s -> current_picture . f . motion_val [ 0 ] [ mot_xy - mot_stride + 2 ] [ 0 ]	147:16:2981:3059	3266385	2	True				
ANR	3267074	AssignmentExpression	P_TOPRIGHT [ 0 ] = s -> current_picture . f . motion_val [ 0 ] [ mot_xy - mot_stride + 2 ] [ 0 ]		3266385	0		=			
ANR	3267075	ArrayIndexing	P_TOPRIGHT [ 0 ]		3266385	0					
ANR	3267076	Identifier	P_TOPRIGHT		3266385	0					
ANR	3267077	PrimaryExpression	0		3266385	1					
ANR	3267078	ArrayIndexing	s -> current_picture . f . motion_val [ 0 ] [ mot_xy - mot_stride + 2 ] [ 0 ]		3266385	1					
ANR	3267079	ArrayIndexing	s -> current_picture . f . motion_val [ 0 ] [ mot_xy - mot_stride + 2 ]		3266385	0					
ANR	3267080	ArrayIndexing	s -> current_picture . f . motion_val [ 0 ]		3266385	0					
ANR	3267081	MemberAccess	s -> current_picture . f . motion_val		3266385	0					
ANR	3267082	MemberAccess	s -> current_picture . f		3266385	0					
ANR	3267083	PtrMemberAccess	s -> current_picture		3266385	0					
ANR	3267084	Identifier	s		3266385	0					
ANR	3267085	Identifier	current_picture		3266385	1					
ANR	3267086	Identifier	f		3266385	1					
ANR	3267087	Identifier	motion_val		3266385	1					
ANR	3267088	PrimaryExpression	0		3266385	1					
ANR	3267089	AdditiveExpression	mot_xy - mot_stride + 2		3266385	1		-			
ANR	3267090	Identifier	mot_xy		3266385	0					
ANR	3267091	AdditiveExpression	mot_stride + 2		3266385	1		+			
ANR	3267092	Identifier	mot_stride		3266385	0					
ANR	3267093	PrimaryExpression	2		3266385	1					
ANR	3267094	PrimaryExpression	0		3266385	1					
ANR	3267095	ExpressionStatement	P_TOPRIGHT [ 1 ] = s -> current_picture . f . motion_val [ 0 ] [ mot_xy - mot_stride + 2 ] [ 1 ]	149:16:3078:3156	3266385	3	True				
ANR	3267096	AssignmentExpression	P_TOPRIGHT [ 1 ] = s -> current_picture . f . motion_val [ 0 ] [ mot_xy - mot_stride + 2 ] [ 1 ]		3266385	0		=			
ANR	3267097	ArrayIndexing	P_TOPRIGHT [ 1 ]		3266385	0					
ANR	3267098	Identifier	P_TOPRIGHT		3266385	0					
ANR	3267099	PrimaryExpression	1		3266385	1					
ANR	3267100	ArrayIndexing	s -> current_picture . f . motion_val [ 0 ] [ mot_xy - mot_stride + 2 ] [ 1 ]		3266385	1					
ANR	3267101	ArrayIndexing	s -> current_picture . f . motion_val [ 0 ] [ mot_xy - mot_stride + 2 ]		3266385	0					
ANR	3267102	ArrayIndexing	s -> current_picture . f . motion_val [ 0 ]		3266385	0					
ANR	3267103	MemberAccess	s -> current_picture . f . motion_val		3266385	0					
ANR	3267104	MemberAccess	s -> current_picture . f		3266385	0					
ANR	3267105	PtrMemberAccess	s -> current_picture		3266385	0					
ANR	3267106	Identifier	s		3266385	0					
ANR	3267107	Identifier	current_picture		3266385	1					
ANR	3267108	Identifier	f		3266385	1					
ANR	3267109	Identifier	motion_val		3266385	1					
ANR	3267110	PrimaryExpression	0		3266385	1					
ANR	3267111	AdditiveExpression	mot_xy - mot_stride + 2		3266385	1		-			
ANR	3267112	Identifier	mot_xy		3266385	0					
ANR	3267113	AdditiveExpression	mot_stride + 2		3266385	1		+			
ANR	3267114	Identifier	mot_stride		3266385	0					
ANR	3267115	PrimaryExpression	2		3266385	1					
ANR	3267116	PrimaryExpression	1		3266385	1					
ANR	3267117	IfStatement	if ( P_TOP [ 1 ] > ( c -> ymax << shift ) )		3266385	4					
ANR	3267118	Condition	P_TOP [ 1 ] > ( c -> ymax << shift )	151:19:3178:3209	3266385	0	True				
ANR	3267119	RelationalExpression	P_TOP [ 1 ] > ( c -> ymax << shift )		3266385	0		>			
ANR	3267120	ArrayIndexing	P_TOP [ 1 ]		3266385	0					
ANR	3267121	Identifier	P_TOP		3266385	0					
ANR	3267122	PrimaryExpression	1		3266385	1					
ANR	3267123	ShiftExpression	c -> ymax << shift		3266385	1		<<			
ANR	3267124	PtrMemberAccess	c -> ymax		3266385	0					
ANR	3267125	Identifier	c		3266385	0					
ANR	3267126	Identifier	ymax		3266385	1					
ANR	3267127	Identifier	shift		3266385	1					
ANR	3267128	ExpressionStatement	P_TOP [ 1 ] = ( c -> ymax << shift )	151:53:3212:3243	3266385	1	True				
ANR	3267129	AssignmentExpression	P_TOP [ 1 ] = ( c -> ymax << shift )		3266385	0		=			
ANR	3267130	ArrayIndexing	P_TOP [ 1 ]		3266385	0					
ANR	3267131	Identifier	P_TOP		3266385	0					
ANR	3267132	PrimaryExpression	1		3266385	1					
ANR	3267133	ShiftExpression	c -> ymax << shift		3266385	1		<<			
ANR	3267134	PtrMemberAccess	c -> ymax		3266385	0					
ANR	3267135	Identifier	c		3266385	0					
ANR	3267136	Identifier	ymax		3266385	1					
ANR	3267137	Identifier	shift		3266385	1					
ANR	3267138	IfStatement	if ( P_TOPRIGHT [ 0 ] < ( c -> xmin << shift ) )		3266385	5					
ANR	3267139	Condition	P_TOPRIGHT [ 0 ] < ( c -> xmin << shift )	153:19:3265:3296	3266385	0	True				
ANR	3267140	RelationalExpression	P_TOPRIGHT [ 0 ] < ( c -> xmin << shift )		3266385	0		<			
ANR	3267141	ArrayIndexing	P_TOPRIGHT [ 0 ]		3266385	0					
ANR	3267142	Identifier	P_TOPRIGHT		3266385	0					
ANR	3267143	PrimaryExpression	0		3266385	1					
ANR	3267144	ShiftExpression	c -> xmin << shift		3266385	1		<<			
ANR	3267145	PtrMemberAccess	c -> xmin		3266385	0					
ANR	3267146	Identifier	c		3266385	0					
ANR	3267147	Identifier	xmin		3266385	1					
ANR	3267148	Identifier	shift		3266385	1					
ANR	3267149	ExpressionStatement	P_TOPRIGHT [ 0 ] = ( c -> xmin << shift )	153:53:3299:3330	3266385	1	True				
ANR	3267150	AssignmentExpression	P_TOPRIGHT [ 0 ] = ( c -> xmin << shift )		3266385	0		=			
ANR	3267151	ArrayIndexing	P_TOPRIGHT [ 0 ]		3266385	0					
ANR	3267152	Identifier	P_TOPRIGHT		3266385	0					
ANR	3267153	PrimaryExpression	0		3266385	1					
ANR	3267154	ShiftExpression	c -> xmin << shift		3266385	1		<<			
ANR	3267155	PtrMemberAccess	c -> xmin		3266385	0					
ANR	3267156	Identifier	c		3266385	0					
ANR	3267157	Identifier	xmin		3266385	1					
ANR	3267158	Identifier	shift		3266385	1					
ANR	3267159	IfStatement	if ( P_TOPRIGHT [ 1 ] > ( c -> ymax << shift ) )		3266385	6					
ANR	3267160	Condition	P_TOPRIGHT [ 1 ] > ( c -> ymax << shift )	155:19:3352:3383	3266385	0	True				
ANR	3267161	RelationalExpression	P_TOPRIGHT [ 1 ] > ( c -> ymax << shift )		3266385	0		>			
ANR	3267162	ArrayIndexing	P_TOPRIGHT [ 1 ]		3266385	0					
ANR	3267163	Identifier	P_TOPRIGHT		3266385	0					
ANR	3267164	PrimaryExpression	1		3266385	1					
ANR	3267165	ShiftExpression	c -> ymax << shift		3266385	1		<<			
ANR	3267166	PtrMemberAccess	c -> ymax		3266385	0					
ANR	3267167	Identifier	c		3266385	0					
ANR	3267168	Identifier	ymax		3266385	1					
ANR	3267169	Identifier	shift		3266385	1					
ANR	3267170	ExpressionStatement	P_TOPRIGHT [ 1 ] = ( c -> ymax << shift )	155:53:3386:3417	3266385	1	True				
ANR	3267171	AssignmentExpression	P_TOPRIGHT [ 1 ] = ( c -> ymax << shift )		3266385	0		=			
ANR	3267172	ArrayIndexing	P_TOPRIGHT [ 1 ]		3266385	0					
ANR	3267173	Identifier	P_TOPRIGHT		3266385	0					
ANR	3267174	PrimaryExpression	1		3266385	1					
ANR	3267175	ShiftExpression	c -> ymax << shift		3266385	1		<<			
ANR	3267176	PtrMemberAccess	c -> ymax		3266385	0					
ANR	3267177	Identifier	c		3266385	0					
ANR	3267178	Identifier	ymax		3266385	1					
ANR	3267179	Identifier	shift		3266385	1					
ANR	3267180	ExpressionStatement	"P_MEDIAN [ 0 ] = mid_pred ( P_LEFT [ 0 ] , P_TOP [ 0 ] , P_TOPRIGHT [ 0 ] )"	159:16:3438:3495	3266385	7	True				
ANR	3267181	AssignmentExpression	"P_MEDIAN [ 0 ] = mid_pred ( P_LEFT [ 0 ] , P_TOP [ 0 ] , P_TOPRIGHT [ 0 ] )"		3266385	0		=			
ANR	3267182	ArrayIndexing	P_MEDIAN [ 0 ]		3266385	0					
ANR	3267183	Identifier	P_MEDIAN		3266385	0					
ANR	3267184	PrimaryExpression	0		3266385	1					
ANR	3267185	CallExpression	"mid_pred ( P_LEFT [ 0 ] , P_TOP [ 0 ] , P_TOPRIGHT [ 0 ] )"		3266385	1					
ANR	3267186	Callee	mid_pred		3266385	0					
ANR	3267187	Identifier	mid_pred		3266385	0					
ANR	3267188	ArgumentList	P_LEFT [ 0 ]		3266385	1					
ANR	3267189	Argument	P_LEFT [ 0 ]		3266385	0					
ANR	3267190	ArrayIndexing	P_LEFT [ 0 ]		3266385	0					
ANR	3267191	Identifier	P_LEFT		3266385	0					
ANR	3267192	PrimaryExpression	0		3266385	1					
ANR	3267193	Argument	P_TOP [ 0 ]		3266385	1					
ANR	3267194	ArrayIndexing	P_TOP [ 0 ]		3266385	0					
ANR	3267195	Identifier	P_TOP		3266385	0					
ANR	3267196	PrimaryExpression	0		3266385	1					
ANR	3267197	Argument	P_TOPRIGHT [ 0 ]		3266385	2					
ANR	3267198	ArrayIndexing	P_TOPRIGHT [ 0 ]		3266385	0					
ANR	3267199	Identifier	P_TOPRIGHT		3266385	0					
ANR	3267200	PrimaryExpression	0		3266385	1					
ANR	3267201	ExpressionStatement	"P_MEDIAN [ 1 ] = mid_pred ( P_LEFT [ 1 ] , P_TOP [ 1 ] , P_TOPRIGHT [ 1 ] )"	161:16:3514:3571	3266385	8	True				
ANR	3267202	AssignmentExpression	"P_MEDIAN [ 1 ] = mid_pred ( P_LEFT [ 1 ] , P_TOP [ 1 ] , P_TOPRIGHT [ 1 ] )"		3266385	0		=			
ANR	3267203	ArrayIndexing	P_MEDIAN [ 1 ]		3266385	0					
ANR	3267204	Identifier	P_MEDIAN		3266385	0					
ANR	3267205	PrimaryExpression	1		3266385	1					
ANR	3267206	CallExpression	"mid_pred ( P_LEFT [ 1 ] , P_TOP [ 1 ] , P_TOPRIGHT [ 1 ] )"		3266385	1					
ANR	3267207	Callee	mid_pred		3266385	0					
ANR	3267208	Identifier	mid_pred		3266385	0					
ANR	3267209	ArgumentList	P_LEFT [ 1 ]		3266385	1					
ANR	3267210	Argument	P_LEFT [ 1 ]		3266385	0					
ANR	3267211	ArrayIndexing	P_LEFT [ 1 ]		3266385	0					
ANR	3267212	Identifier	P_LEFT		3266385	0					
ANR	3267213	PrimaryExpression	1		3266385	1					
ANR	3267214	Argument	P_TOP [ 1 ]		3266385	1					
ANR	3267215	ArrayIndexing	P_TOP [ 1 ]		3266385	0					
ANR	3267216	Identifier	P_TOP		3266385	0					
ANR	3267217	PrimaryExpression	1		3266385	1					
ANR	3267218	Argument	P_TOPRIGHT [ 1 ]		3266385	2					
ANR	3267219	ArrayIndexing	P_TOPRIGHT [ 1 ]		3266385	0					
ANR	3267220	Identifier	P_TOPRIGHT		3266385	0					
ANR	3267221	PrimaryExpression	1		3266385	1					
ANR	3267222	IfStatement	if ( s -> out_format == FMT_H263 )		3266385	9					
ANR	3267223	Condition	s -> out_format == FMT_H263	165:19:3595:3619	3266385	0	True				
ANR	3267224	EqualityExpression	s -> out_format == FMT_H263		3266385	0		==			
ANR	3267225	PtrMemberAccess	s -> out_format		3266385	0					
ANR	3267226	Identifier	s		3266385	0					
ANR	3267227	Identifier	out_format		3266385	1					
ANR	3267228	Identifier	FMT_H263		3266385	1					
ANR	3267229	CompoundStatement		161:45:3514:3514	3266385	1					
ANR	3267230	ExpressionStatement	c -> pred_x = P_MEDIAN [ 0 ]	167:20:3644:3667	3266385	0	True				
ANR	3267231	AssignmentExpression	c -> pred_x = P_MEDIAN [ 0 ]		3266385	0		=			
ANR	3267232	PtrMemberAccess	c -> pred_x		3266385	0					
ANR	3267233	Identifier	c		3266385	0					
ANR	3267234	Identifier	pred_x		3266385	1					
ANR	3267235	ArrayIndexing	P_MEDIAN [ 0 ]		3266385	1					
ANR	3267236	Identifier	P_MEDIAN		3266385	0					
ANR	3267237	PrimaryExpression	0		3266385	1					
ANR	3267238	ExpressionStatement	c -> pred_y = P_MEDIAN [ 1 ]	169:20:3690:3713	3266385	1	True				
ANR	3267239	AssignmentExpression	c -> pred_y = P_MEDIAN [ 1 ]		3266385	0		=			
ANR	3267240	PtrMemberAccess	c -> pred_y		3266385	0					
ANR	3267241	Identifier	c		3266385	0					
ANR	3267242	Identifier	pred_y		3266385	1					
ANR	3267243	ArrayIndexing	P_MEDIAN [ 1 ]		3266385	1					
ANR	3267244	Identifier	P_MEDIAN		3266385	0					
ANR	3267245	PrimaryExpression	1		3266385	1					
ANR	3267246	ElseStatement	else		3266385	0					
ANR	3267247	CompoundStatement		167:22:3631:3631	3266385	0					
ANR	3267248	ExpressionStatement	c -> pred_x = P_LEFT [ 0 ]	173:20:3782:3802	3266385	0	True				
ANR	3267249	AssignmentExpression	c -> pred_x = P_LEFT [ 0 ]		3266385	0		=			
ANR	3267250	PtrMemberAccess	c -> pred_x		3266385	0					
ANR	3267251	Identifier	c		3266385	0					
ANR	3267252	Identifier	pred_x		3266385	1					
ANR	3267253	ArrayIndexing	P_LEFT [ 0 ]		3266385	1					
ANR	3267254	Identifier	P_LEFT		3266385	0					
ANR	3267255	PrimaryExpression	0		3266385	1					
ANR	3267256	ExpressionStatement	c -> pred_y = P_LEFT [ 1 ]	175:20:3825:3845	3266385	1	True				
ANR	3267257	AssignmentExpression	c -> pred_y = P_LEFT [ 1 ]		3266385	0		=			
ANR	3267258	PtrMemberAccess	c -> pred_y		3266385	0					
ANR	3267259	Identifier	c		3266385	0					
ANR	3267260	Identifier	pred_y		3266385	1					
ANR	3267261	ArrayIndexing	P_LEFT [ 1 ]		3266385	1					
ANR	3267262	Identifier	P_LEFT		3266385	0					
ANR	3267263	PrimaryExpression	1		3266385	1					
ANR	3267264	ElseStatement	else		3266385	0					
ANR	3267265	CompoundStatement		175:17:3777:3777	3266385	0					
ANR	3267266	ExpressionStatement	c -> pred_x = P_LEFT [ 0 ]	181:16:3903:3923	3266385	0	True				
ANR	3267267	AssignmentExpression	c -> pred_x = P_LEFT [ 0 ]		3266385	0		=			
ANR	3267268	PtrMemberAccess	c -> pred_x		3266385	0					
ANR	3267269	Identifier	c		3266385	0					
ANR	3267270	Identifier	pred_x		3266385	1					
ANR	3267271	ArrayIndexing	P_LEFT [ 0 ]		3266385	1					
ANR	3267272	Identifier	P_LEFT		3266385	0					
ANR	3267273	PrimaryExpression	0		3266385	1					
ANR	3267274	ExpressionStatement	c -> pred_y = P_LEFT [ 1 ]	183:16:3942:3962	3266385	1	True				
ANR	3267275	AssignmentExpression	c -> pred_y = P_LEFT [ 1 ]		3266385	0		=			
ANR	3267276	PtrMemberAccess	c -> pred_y		3266385	0					
ANR	3267277	Identifier	c		3266385	0					
ANR	3267278	Identifier	pred_y		3266385	1					
ANR	3267279	ArrayIndexing	P_LEFT [ 1 ]		3266385	1					
ANR	3267280	Identifier	P_LEFT		3266385	0					
ANR	3267281	PrimaryExpression	1		3266385	1					
ANR	3267282	ExpressionStatement	"dmin = ff_epzs_motion_search ( s , & mx , & my , P , 0 , 0 , s -> p_mv_table , ( 1 << 16 ) >> shift , 0 , 16 )"	191:8:4001:4089	3266385	10	True				
ANR	3267283	AssignmentExpression	"dmin = ff_epzs_motion_search ( s , & mx , & my , P , 0 , 0 , s -> p_mv_table , ( 1 << 16 ) >> shift , 0 , 16 )"		3266385	0		=			
ANR	3267284	Identifier	dmin		3266385	0					
ANR	3267285	CallExpression	"ff_epzs_motion_search ( s , & mx , & my , P , 0 , 0 , s -> p_mv_table , ( 1 << 16 ) >> shift , 0 , 16 )"		3266385	1					
ANR	3267286	Callee	ff_epzs_motion_search		3266385	0					
ANR	3267287	Identifier	ff_epzs_motion_search		3266385	0					
ANR	3267288	ArgumentList	s		3266385	1					
ANR	3267289	Argument	s		3266385	0					
ANR	3267290	Identifier	s		3266385	0					
ANR	3267291	Argument	& mx		3266385	1					
ANR	3267292	UnaryOperationExpression	& mx		3266385	0					
ANR	3267293	UnaryOperator	&		3266385	0					
ANR	3267294	Identifier	mx		3266385	1					
ANR	3267295	Argument	& my		3266385	2					
ANR	3267296	UnaryOperationExpression	& my		3266385	0					
ANR	3267297	UnaryOperator	&		3266385	0					
ANR	3267298	Identifier	my		3266385	1					
ANR	3267299	Argument	P		3266385	3					
ANR	3267300	Identifier	P		3266385	0					
ANR	3267301	Argument	0		3266385	4					
ANR	3267302	PrimaryExpression	0		3266385	0					
ANR	3267303	Argument	0		3266385	5					
ANR	3267304	PrimaryExpression	0		3266385	0					
ANR	3267305	Argument	s -> p_mv_table		3266385	6					
ANR	3267306	PtrMemberAccess	s -> p_mv_table		3266385	0					
ANR	3267307	Identifier	s		3266385	0					
ANR	3267308	Identifier	p_mv_table		3266385	1					
ANR	3267309	Argument	( 1 << 16 ) >> shift		3266385	7					
ANR	3267310	ShiftExpression	( 1 << 16 ) >> shift		3266385	0		>>			
ANR	3267311	ShiftExpression	1 << 16		3266385	0		<<			
ANR	3267312	PrimaryExpression	1		3266385	0					
ANR	3267313	PrimaryExpression	16		3266385	1					
ANR	3267314	Identifier	shift		3266385	1					
ANR	3267315	Argument	0		3266385	8					
ANR	3267316	PrimaryExpression	0		3266385	0					
ANR	3267317	Argument	16		3266385	9					
ANR	3267318	PrimaryExpression	16		3266385	0					
ANR	3267319	BreakStatement	break ;	195:8:4102:4107	3266385	11	True				
ANR	3267320	ExpressionStatement	ppix = c -> ref [ 0 ] [ 0 ] + ( my * s -> linesize ) + mx	203:4:4200:4245	3266385	34	True				
ANR	3267321	AssignmentExpression	ppix = c -> ref [ 0 ] [ 0 ] + ( my * s -> linesize ) + mx		3266385	0		=			
ANR	3267322	Identifier	ppix		3266385	0					
ANR	3267323	AdditiveExpression	c -> ref [ 0 ] [ 0 ] + ( my * s -> linesize ) + mx		3266385	1		+			
ANR	3267324	ArrayIndexing	c -> ref [ 0 ] [ 0 ]		3266385	0					
ANR	3267325	ArrayIndexing	c -> ref [ 0 ]		3266385	0					
ANR	3267326	PtrMemberAccess	c -> ref		3266385	0					
ANR	3267327	Identifier	c		3266385	0					
ANR	3267328	Identifier	ref		3266385	1					
ANR	3267329	PrimaryExpression	0		3266385	1					
ANR	3267330	PrimaryExpression	0		3266385	1					
ANR	3267331	AdditiveExpression	( my * s -> linesize ) + mx		3266385	1		+			
ANR	3267332	MultiplicativeExpression	my * s -> linesize		3266385	0		*			
ANR	3267333	Identifier	my		3266385	0					
ANR	3267334	PtrMemberAccess	s -> linesize		3266385	1					
ANR	3267335	Identifier	s		3266385	0					
ANR	3267336	Identifier	linesize		3266385	1					
ANR	3267337	Identifier	mx		3266385	1					
ANR	3267338	ExpressionStatement	"vard = s -> dsp . sse [ 0 ] ( NULL , pix , ppix , s -> linesize , 16 )"	207:4:4254:4308	3266385	35	True				
ANR	3267339	AssignmentExpression	"vard = s -> dsp . sse [ 0 ] ( NULL , pix , ppix , s -> linesize , 16 )"		3266385	0		=			
ANR	3267340	Identifier	vard		3266385	0					
ANR	3267341	CallExpression	"s -> dsp . sse [ 0 ] ( NULL , pix , ppix , s -> linesize , 16 )"		3266385	1					
ANR	3267342	Callee	s -> dsp . sse [ 0 ]		3266385	0					
ANR	3267343	ArrayIndexing	s -> dsp . sse [ 0 ]		3266385	0					
ANR	3267344	MemberAccess	s -> dsp . sse		3266385	0					
ANR	3267345	PtrMemberAccess	s -> dsp		3266385	0					
ANR	3267346	Identifier	s		3266385	0					
ANR	3267347	Identifier	dsp		3266385	1					
ANR	3267348	Identifier	sse		3266385	1					
ANR	3267349	PrimaryExpression	0		3266385	1					
ANR	3267350	ArgumentList	NULL		3266385	1					
ANR	3267351	Argument	NULL		3266385	0					
ANR	3267352	Identifier	NULL		3266385	0					
ANR	3267353	Argument	pix		3266385	1					
ANR	3267354	Identifier	pix		3266385	0					
ANR	3267355	Argument	ppix		3266385	2					
ANR	3267356	Identifier	ppix		3266385	0					
ANR	3267357	Argument	s -> linesize		3266385	3					
ANR	3267358	PtrMemberAccess	s -> linesize		3266385	0					
ANR	3267359	Identifier	s		3266385	0					
ANR	3267360	Identifier	linesize		3266385	1					
ANR	3267361	Argument	16		3266385	4					
ANR	3267362	PrimaryExpression	16		3266385	0					
ANR	3267363	ExpressionStatement	pic -> mc_mb_var [ s -> mb_stride * mb_y + mb_x ] = ( vard + 128 ) >> 8	211:4:4317:4375	3266385	36	True				
ANR	3267364	AssignmentExpression	pic -> mc_mb_var [ s -> mb_stride * mb_y + mb_x ] = ( vard + 128 ) >> 8		3266385	0		=			
ANR	3267365	ArrayIndexing	pic -> mc_mb_var [ s -> mb_stride * mb_y + mb_x ]		3266385	0					
ANR	3267366	PtrMemberAccess	pic -> mc_mb_var		3266385	0					
ANR	3267367	Identifier	pic		3266385	0					
ANR	3267368	Identifier	mc_mb_var		3266385	1					
ANR	3267369	AdditiveExpression	s -> mb_stride * mb_y + mb_x		3266385	1		+			
ANR	3267370	MultiplicativeExpression	s -> mb_stride * mb_y		3266385	0		*			
ANR	3267371	PtrMemberAccess	s -> mb_stride		3266385	0					
ANR	3267372	Identifier	s		3266385	0					
ANR	3267373	Identifier	mb_stride		3266385	1					
ANR	3267374	Identifier	mb_y		3266385	1					
ANR	3267375	Identifier	mb_x		3266385	1					
ANR	3267376	ShiftExpression	( vard + 128 ) >> 8		3266385	1		>>			
ANR	3267377	AdditiveExpression	vard + 128		3266385	0		+			
ANR	3267378	Identifier	vard		3266385	0					
ANR	3267379	PrimaryExpression	128		3266385	1					
ANR	3267380	PrimaryExpression	8		3266385	1					
ANR	3267381	ExpressionStatement	c -> mc_mb_var_sum_temp += ( vard + 128 ) >> 8	215:4:4443:4481	3266385	37	True				
ANR	3267382	AssignmentExpression	c -> mc_mb_var_sum_temp += ( vard + 128 ) >> 8		3266385	0		+=			
ANR	3267383	PtrMemberAccess	c -> mc_mb_var_sum_temp		3266385	0					
ANR	3267384	Identifier	c		3266385	0					
ANR	3267385	Identifier	mc_mb_var_sum_temp		3266385	1					
ANR	3267386	ShiftExpression	( vard + 128 ) >> 8		3266385	1		>>			
ANR	3267387	AdditiveExpression	vard + 128		3266385	0		+			
ANR	3267388	Identifier	vard		3266385	0					
ANR	3267389	PrimaryExpression	128		3266385	1					
ANR	3267390	PrimaryExpression	8		3266385	1					
ANR	3267391	IfStatement	if ( mb_type )		3266385	38					
ANR	3267392	Condition	mb_type	219:7:4493:4499	3266385	0	True				
ANR	3267393	Identifier	mb_type		3266385	0					
ANR	3267394	CompoundStatement		219:8:4484:4538	3266385	1					
ANR	3267395	IdentifierDeclStatement	"int p_score = FFMIN ( vard , varc - 500 + ( s -> lambda2 >> FF_LAMBDA_SHIFT ) * 100 ) ;"	221:8:4512:4580	3266385	0	True				
ANR	3267396	IdentifierDecl	"p_score = FFMIN ( vard , varc - 500 + ( s -> lambda2 >> FF_LAMBDA_SHIFT ) * 100 )"		3266385	0					
ANR	3267397	IdentifierDeclType	int		3266385	0					
ANR	3267398	Identifier	p_score		3266385	1					
ANR	3267399	AssignmentExpression	"p_score = FFMIN ( vard , varc - 500 + ( s -> lambda2 >> FF_LAMBDA_SHIFT ) * 100 )"		3266385	2		=			
ANR	3267400	Identifier	p_score		3266385	0					
ANR	3267401	CallExpression	"FFMIN ( vard , varc - 500 + ( s -> lambda2 >> FF_LAMBDA_SHIFT ) * 100 )"		3266385	1					
ANR	3267402	Callee	FFMIN		3266385	0					
ANR	3267403	Identifier	FFMIN		3266385	0					
ANR	3267404	ArgumentList	vard		3266385	1					
ANR	3267405	Argument	vard		3266385	0					
ANR	3267406	Identifier	vard		3266385	0					
ANR	3267407	Argument	varc - 500 + ( s -> lambda2 >> FF_LAMBDA_SHIFT ) * 100		3266385	1					
ANR	3267408	AdditiveExpression	varc - 500 + ( s -> lambda2 >> FF_LAMBDA_SHIFT ) * 100		3266385	0		-			
ANR	3267409	Identifier	varc		3266385	0					
ANR	3267410	AdditiveExpression	500 + ( s -> lambda2 >> FF_LAMBDA_SHIFT ) * 100		3266385	1		+			
ANR	3267411	PrimaryExpression	500		3266385	0					
ANR	3267412	MultiplicativeExpression	( s -> lambda2 >> FF_LAMBDA_SHIFT ) * 100		3266385	1		*			
ANR	3267413	ShiftExpression	s -> lambda2 >> FF_LAMBDA_SHIFT		3266385	0		>>			
ANR	3267414	PtrMemberAccess	s -> lambda2		3266385	0					
ANR	3267415	Identifier	s		3266385	0					
ANR	3267416	Identifier	lambda2		3266385	1					
ANR	3267417	Identifier	FF_LAMBDA_SHIFT		3266385	1					
ANR	3267418	PrimaryExpression	100		3266385	1					
ANR	3267419	IdentifierDeclStatement	int i_score = varc - 500 + ( s -> lambda2 >> FF_LAMBDA_SHIFT ) * 20 ;	223:8:4591:4645	3266385	1	True				
ANR	3267420	IdentifierDecl	i_score = varc - 500 + ( s -> lambda2 >> FF_LAMBDA_SHIFT ) * 20		3266385	0					
ANR	3267421	IdentifierDeclType	int		3266385	0					
ANR	3267422	Identifier	i_score		3266385	1					
ANR	3267423	AssignmentExpression	i_score = varc - 500 + ( s -> lambda2 >> FF_LAMBDA_SHIFT ) * 20		3266385	2		=			
ANR	3267424	Identifier	i_score		3266385	0					
ANR	3267425	AdditiveExpression	varc - 500 + ( s -> lambda2 >> FF_LAMBDA_SHIFT ) * 20		3266385	1		-			
ANR	3267426	Identifier	varc		3266385	0					
ANR	3267427	AdditiveExpression	500 + ( s -> lambda2 >> FF_LAMBDA_SHIFT ) * 20		3266385	1		+			
ANR	3267428	PrimaryExpression	500		3266385	0					
ANR	3267429	MultiplicativeExpression	( s -> lambda2 >> FF_LAMBDA_SHIFT ) * 20		3266385	1		*			
ANR	3267430	ShiftExpression	s -> lambda2 >> FF_LAMBDA_SHIFT		3266385	0		>>			
ANR	3267431	PtrMemberAccess	s -> lambda2		3266385	0					
ANR	3267432	Identifier	s		3266385	0					
ANR	3267433	Identifier	lambda2		3266385	1					
ANR	3267434	Identifier	FF_LAMBDA_SHIFT		3266385	1					
ANR	3267435	PrimaryExpression	20		3266385	1					
ANR	3267436	ExpressionStatement	c -> scene_change_score += ff_sqrt ( p_score ) - ff_sqrt ( i_score )	225:8:4656:4715	3266385	2	True				
ANR	3267437	AssignmentExpression	c -> scene_change_score += ff_sqrt ( p_score ) - ff_sqrt ( i_score )		3266385	0		+=			
ANR	3267438	PtrMemberAccess	c -> scene_change_score		3266385	0					
ANR	3267439	Identifier	c		3266385	0					
ANR	3267440	Identifier	scene_change_score		3266385	1					
ANR	3267441	AdditiveExpression	ff_sqrt ( p_score ) - ff_sqrt ( i_score )		3266385	1		-			
ANR	3267442	CallExpression	ff_sqrt ( p_score )		3266385	0					
ANR	3267443	Callee	ff_sqrt		3266385	0					
ANR	3267444	Identifier	ff_sqrt		3266385	0					
ANR	3267445	ArgumentList	p_score		3266385	1					
ANR	3267446	Argument	p_score		3266385	0					
ANR	3267447	Identifier	p_score		3266385	0					
ANR	3267448	CallExpression	ff_sqrt ( i_score )		3266385	1					
ANR	3267449	Callee	ff_sqrt		3266385	0					
ANR	3267450	Identifier	ff_sqrt		3266385	0					
ANR	3267451	ArgumentList	i_score		3266385	1					
ANR	3267452	Argument	i_score		3266385	0					
ANR	3267453	Identifier	i_score		3266385	0					
ANR	3267454	IfStatement	if ( mb_type == CANDIDATE_MB_TYPE_INTER )		3266385	3					
ANR	3267455	Condition	mb_type == CANDIDATE_MB_TYPE_INTER	229:11:4731:4764	3266385	0	True				
ANR	3267456	EqualityExpression	mb_type == CANDIDATE_MB_TYPE_INTER		3266385	0		==			
ANR	3267457	Identifier	mb_type		3266385	0					
ANR	3267458	Identifier	CANDIDATE_MB_TYPE_INTER		3266385	1					
ANR	3267459	CompoundStatement		225:46:4659:4659	3266385	1					
ANR	3267460	ExpressionStatement	"c -> sub_motion_search ( s , & mx , & my , dmin , 0 , 0 , 0 , 16 )"	231:12:4781:4833	3266385	0	True				
ANR	3267461	CallExpression	"c -> sub_motion_search ( s , & mx , & my , dmin , 0 , 0 , 0 , 16 )"		3266385	0					
ANR	3267462	Callee	c -> sub_motion_search		3266385	0					
ANR	3267463	PtrMemberAccess	c -> sub_motion_search		3266385	0					
ANR	3267464	Identifier	c		3266385	0					
ANR	3267465	Identifier	sub_motion_search		3266385	1					
ANR	3267466	ArgumentList	s		3266385	1					
ANR	3267467	Argument	s		3266385	0					
ANR	3267468	Identifier	s		3266385	0					
ANR	3267469	Argument	& mx		3266385	1					
ANR	3267470	UnaryOperationExpression	& mx		3266385	0					
ANR	3267471	UnaryOperator	&		3266385	0					
ANR	3267472	Identifier	mx		3266385	1					
ANR	3267473	Argument	& my		3266385	2					
ANR	3267474	UnaryOperationExpression	& my		3266385	0					
ANR	3267475	UnaryOperator	&		3266385	0					
ANR	3267476	Identifier	my		3266385	1					
ANR	3267477	Argument	dmin		3266385	3					
ANR	3267478	Identifier	dmin		3266385	0					
ANR	3267479	Argument	0		3266385	4					
ANR	3267480	PrimaryExpression	0		3266385	0					
ANR	3267481	Argument	0		3266385	5					
ANR	3267482	PrimaryExpression	0		3266385	0					
ANR	3267483	Argument	0		3266385	6					
ANR	3267484	PrimaryExpression	0		3266385	0					
ANR	3267485	Argument	16		3266385	7					
ANR	3267486	PrimaryExpression	16		3266385	0					
ANR	3267487	ExpressionStatement	"set_p_mv_tables ( s , mx , my , 1 )"	233:12:4848:4877	3266385	1	True				
ANR	3267488	CallExpression	"set_p_mv_tables ( s , mx , my , 1 )"		3266385	0					
ANR	3267489	Callee	set_p_mv_tables		3266385	0					
ANR	3267490	Identifier	set_p_mv_tables		3266385	0					
ANR	3267491	ArgumentList	s		3266385	1					
ANR	3267492	Argument	s		3266385	0					
ANR	3267493	Identifier	s		3266385	0					
ANR	3267494	Argument	mx		3266385	1					
ANR	3267495	Identifier	mx		3266385	0					
ANR	3267496	Argument	my		3266385	2					
ANR	3267497	Identifier	my		3266385	0					
ANR	3267498	Argument	1		3266385	3					
ANR	3267499	PrimaryExpression	1		3266385	0					
ANR	3267500	ElseStatement	else		3266385	0					
ANR	3267501	CompoundStatement		231:13:4786:4786	3266385	0					
ANR	3267502	ExpressionStatement	mx <<= shift	237:12:4908:4919	3266385	0	True				
ANR	3267503	AssignmentExpression	mx <<= shift		3266385	0		<<=			
ANR	3267504	Identifier	mx		3266385	0					
ANR	3267505	Identifier	shift		3266385	1					
ANR	3267506	ExpressionStatement	my <<= shift	239:12:4934:4945	3266385	1	True				
ANR	3267507	AssignmentExpression	my <<= shift		3266385	0		<<=			
ANR	3267508	Identifier	my		3266385	0					
ANR	3267509	Identifier	shift		3266385	1					
ANR	3267510	IfStatement	if ( mb_type == CANDIDATE_MB_TYPE_INTER4V )		3266385	4					
ANR	3267511	Condition	mb_type == CANDIDATE_MB_TYPE_INTER4V	243:11:4970:5005	3266385	0	True				
ANR	3267512	EqualityExpression	mb_type == CANDIDATE_MB_TYPE_INTER4V		3266385	0		==			
ANR	3267513	Identifier	mb_type		3266385	0					
ANR	3267514	Identifier	CANDIDATE_MB_TYPE_INTER4V		3266385	1					
ANR	3267515	CompoundStatement		239:48:4900:4900	3266385	1					
ANR	3267516	ExpressionStatement	"h263_mv4_search ( s , mx , my , shift )"	245:12:5022:5055	3266385	0	True				
ANR	3267517	CallExpression	"h263_mv4_search ( s , mx , my , shift )"		3266385	0					
ANR	3267518	Callee	h263_mv4_search		3266385	0					
ANR	3267519	Identifier	h263_mv4_search		3266385	0					
ANR	3267520	ArgumentList	s		3266385	1					
ANR	3267521	Argument	s		3266385	0					
ANR	3267522	Identifier	s		3266385	0					
ANR	3267523	Argument	mx		3266385	1					
ANR	3267524	Identifier	mx		3266385	0					
ANR	3267525	Argument	my		3266385	2					
ANR	3267526	Identifier	my		3266385	0					
ANR	3267527	Argument	shift		3266385	3					
ANR	3267528	Identifier	shift		3266385	0					
ANR	3267529	ExpressionStatement	"set_p_mv_tables ( s , mx , my , 0 )"	249:12:5072:5101	3266385	1	True				
ANR	3267530	CallExpression	"set_p_mv_tables ( s , mx , my , 0 )"		3266385	0					
ANR	3267531	Callee	set_p_mv_tables		3266385	0					
ANR	3267532	Identifier	set_p_mv_tables		3266385	0					
ANR	3267533	ArgumentList	s		3266385	1					
ANR	3267534	Argument	s		3266385	0					
ANR	3267535	Identifier	s		3266385	0					
ANR	3267536	Argument	mx		3266385	1					
ANR	3267537	Identifier	mx		3266385	0					
ANR	3267538	Argument	my		3266385	2					
ANR	3267539	Identifier	my		3266385	0					
ANR	3267540	Argument	0		3266385	3					
ANR	3267541	PrimaryExpression	0		3266385	0					
ANR	3267542	IfStatement	if ( mb_type == CANDIDATE_MB_TYPE_INTER_I )		3266385	5					
ANR	3267543	Condition	mb_type == CANDIDATE_MB_TYPE_INTER_I	253:11:5126:5161	3266385	0	True				
ANR	3267544	EqualityExpression	mb_type == CANDIDATE_MB_TYPE_INTER_I		3266385	0		==			
ANR	3267545	Identifier	mb_type		3266385	0					
ANR	3267546	Identifier	CANDIDATE_MB_TYPE_INTER_I		3266385	1					
ANR	3267547	CompoundStatement		249:48:5056:5056	3266385	1					
ANR	3267548	ExpressionStatement	"interlaced_search ( s , 0 , s -> p_field_mv_table , s -> p_field_select_table , mx , my , 1 )"	255:12:5178:5258	3266385	0	True				
ANR	3267549	CallExpression	"interlaced_search ( s , 0 , s -> p_field_mv_table , s -> p_field_select_table , mx , my , 1 )"		3266385	0					
ANR	3267550	Callee	interlaced_search		3266385	0					
ANR	3267551	Identifier	interlaced_search		3266385	0					
ANR	3267552	ArgumentList	s		3266385	1					
ANR	3267553	Argument	s		3266385	0					
ANR	3267554	Identifier	s		3266385	0					
ANR	3267555	Argument	0		3266385	1					
ANR	3267556	PrimaryExpression	0		3266385	0					
ANR	3267557	Argument	s -> p_field_mv_table		3266385	2					
ANR	3267558	PtrMemberAccess	s -> p_field_mv_table		3266385	0					
ANR	3267559	Identifier	s		3266385	0					
ANR	3267560	Identifier	p_field_mv_table		3266385	1					
ANR	3267561	Argument	s -> p_field_select_table		3266385	3					
ANR	3267562	PtrMemberAccess	s -> p_field_select_table		3266385	0					
ANR	3267563	Identifier	s		3266385	0					
ANR	3267564	Identifier	p_field_select_table		3266385	1					
ANR	3267565	Argument	mx		3266385	4					
ANR	3267566	Identifier	mx		3266385	0					
ANR	3267567	Argument	my		3266385	5					
ANR	3267568	Identifier	my		3266385	0					
ANR	3267569	Argument	1		3266385	6					
ANR	3267570	PrimaryExpression	1		3266385	0					
ANR	3267571	ElseStatement	else		3266385	0					
ANR	3267572	IfStatement	if ( c -> avctx -> mb_decision > FF_MB_DECISION_SIMPLE )		3266385	0					
ANR	3267573	Condition	c -> avctx -> mb_decision > FF_MB_DECISION_SIMPLE	259:13:5285:5329	3266385	0	True				
ANR	3267574	RelationalExpression	c -> avctx -> mb_decision > FF_MB_DECISION_SIMPLE		3266385	0		>			
ANR	3267575	PtrMemberAccess	c -> avctx -> mb_decision		3266385	0					
ANR	3267576	PtrMemberAccess	c -> avctx		3266385	0					
ANR	3267577	Identifier	c		3266385	0					
ANR	3267578	Identifier	avctx		3266385	1					
ANR	3267579	Identifier	mb_decision		3266385	1					
ANR	3267580	Identifier	FF_MB_DECISION_SIMPLE		3266385	1					
ANR	3267581	CompoundStatement		259:8:5314:5368	3266385	1					
ANR	3267582	IdentifierDeclStatement	"int p_score = FFMIN ( vard , varc - 500 + ( s -> lambda2 >> FF_LAMBDA_SHIFT ) * 100 ) ;"	261:8:5342:5410	3266385	0	True				
ANR	3267583	IdentifierDecl	"p_score = FFMIN ( vard , varc - 500 + ( s -> lambda2 >> FF_LAMBDA_SHIFT ) * 100 )"		3266385	0					
ANR	3267584	IdentifierDeclType	int		3266385	0					
ANR	3267585	Identifier	p_score		3266385	1					
ANR	3267586	AssignmentExpression	"p_score = FFMIN ( vard , varc - 500 + ( s -> lambda2 >> FF_LAMBDA_SHIFT ) * 100 )"		3266385	2		=			
ANR	3267587	Identifier	p_score		3266385	0					
ANR	3267588	CallExpression	"FFMIN ( vard , varc - 500 + ( s -> lambda2 >> FF_LAMBDA_SHIFT ) * 100 )"		3266385	1					
ANR	3267589	Callee	FFMIN		3266385	0					
ANR	3267590	Identifier	FFMIN		3266385	0					
ANR	3267591	ArgumentList	vard		3266385	1					
ANR	3267592	Argument	vard		3266385	0					
ANR	3267593	Identifier	vard		3266385	0					
ANR	3267594	Argument	varc - 500 + ( s -> lambda2 >> FF_LAMBDA_SHIFT ) * 100		3266385	1					
ANR	3267595	AdditiveExpression	varc - 500 + ( s -> lambda2 >> FF_LAMBDA_SHIFT ) * 100		3266385	0		-			
ANR	3267596	Identifier	varc		3266385	0					
ANR	3267597	AdditiveExpression	500 + ( s -> lambda2 >> FF_LAMBDA_SHIFT ) * 100		3266385	1		+			
ANR	3267598	PrimaryExpression	500		3266385	0					
ANR	3267599	MultiplicativeExpression	( s -> lambda2 >> FF_LAMBDA_SHIFT ) * 100		3266385	1		*			
ANR	3267600	ShiftExpression	s -> lambda2 >> FF_LAMBDA_SHIFT		3266385	0		>>			
ANR	3267601	PtrMemberAccess	s -> lambda2		3266385	0					
ANR	3267602	Identifier	s		3266385	0					
ANR	3267603	Identifier	lambda2		3266385	1					
ANR	3267604	Identifier	FF_LAMBDA_SHIFT		3266385	1					
ANR	3267605	PrimaryExpression	100		3266385	1					
ANR	3267606	IdentifierDeclStatement	int i_score = varc - 500 + ( s -> lambda2 >> FF_LAMBDA_SHIFT ) * 20 ;	263:8:5421:5475	3266385	1	True				
ANR	3267607	IdentifierDecl	i_score = varc - 500 + ( s -> lambda2 >> FF_LAMBDA_SHIFT ) * 20		3266385	0					
ANR	3267608	IdentifierDeclType	int		3266385	0					
ANR	3267609	Identifier	i_score		3266385	1					
ANR	3267610	AssignmentExpression	i_score = varc - 500 + ( s -> lambda2 >> FF_LAMBDA_SHIFT ) * 20		3266385	2		=			
ANR	3267611	Identifier	i_score		3266385	0					
ANR	3267612	AdditiveExpression	varc - 500 + ( s -> lambda2 >> FF_LAMBDA_SHIFT ) * 20		3266385	1		-			
ANR	3267613	Identifier	varc		3266385	0					
ANR	3267614	AdditiveExpression	500 + ( s -> lambda2 >> FF_LAMBDA_SHIFT ) * 20		3266385	1		+			
ANR	3267615	PrimaryExpression	500		3266385	0					
ANR	3267616	MultiplicativeExpression	( s -> lambda2 >> FF_LAMBDA_SHIFT ) * 20		3266385	1		*			
ANR	3267617	ShiftExpression	s -> lambda2 >> FF_LAMBDA_SHIFT		3266385	0		>>			
ANR	3267618	PtrMemberAccess	s -> lambda2		3266385	0					
ANR	3267619	Identifier	s		3266385	0					
ANR	3267620	Identifier	lambda2		3266385	1					
ANR	3267621	Identifier	FF_LAMBDA_SHIFT		3266385	1					
ANR	3267622	PrimaryExpression	20		3266385	1					
ANR	3267623	ExpressionStatement	c -> scene_change_score += ff_sqrt ( p_score ) - ff_sqrt ( i_score )	265:8:5486:5545	3266385	2	True				
ANR	3267624	AssignmentExpression	c -> scene_change_score += ff_sqrt ( p_score ) - ff_sqrt ( i_score )		3266385	0		+=			
ANR	3267625	PtrMemberAccess	c -> scene_change_score		3266385	0					
ANR	3267626	Identifier	c		3266385	0					
ANR	3267627	Identifier	scene_change_score		3266385	1					
ANR	3267628	AdditiveExpression	ff_sqrt ( p_score ) - ff_sqrt ( i_score )		3266385	1		-			
ANR	3267629	CallExpression	ff_sqrt ( p_score )		3266385	0					
ANR	3267630	Callee	ff_sqrt		3266385	0					
ANR	3267631	Identifier	ff_sqrt		3266385	0					
ANR	3267632	ArgumentList	p_score		3266385	1					
ANR	3267633	Argument	p_score		3266385	0					
ANR	3267634	Identifier	p_score		3266385	0					
ANR	3267635	CallExpression	ff_sqrt ( i_score )		3266385	1					
ANR	3267636	Callee	ff_sqrt		3266385	0					
ANR	3267637	Identifier	ff_sqrt		3266385	0					
ANR	3267638	ArgumentList	i_score		3266385	1					
ANR	3267639	Argument	i_score		3266385	0					
ANR	3267640	Identifier	i_score		3266385	0					
ANR	3267641	IfStatement	if ( vard * 2 + 200 * 256 > varc )		3266385	3					
ANR	3267642	Condition	vard * 2 + 200 * 256 > varc	269:12:5562:5584	3266385	0	True				
ANR	3267643	RelationalExpression	vard * 2 + 200 * 256 > varc		3266385	0		>			
ANR	3267644	AdditiveExpression	vard * 2 + 200 * 256		3266385	0		+			
ANR	3267645	MultiplicativeExpression	vard * 2		3266385	0		*			
ANR	3267646	Identifier	vard		3266385	0					
ANR	3267647	PrimaryExpression	2		3266385	1					
ANR	3267648	MultiplicativeExpression	200 * 256		3266385	1		*			
ANR	3267649	PrimaryExpression	200		3266385	0					
ANR	3267650	PrimaryExpression	256		3266385	1					
ANR	3267651	Identifier	varc		3266385	1					
ANR	3267652	ExpressionStatement	mb_type |= CANDIDATE_MB_TYPE_INTRA	271:12:5600:5633	3266385	1	True				
ANR	3267653	AssignmentExpression	mb_type |= CANDIDATE_MB_TYPE_INTRA		3266385	0		|=			
ANR	3267654	Identifier	mb_type		3266385	0					
ANR	3267655	Identifier	CANDIDATE_MB_TYPE_INTRA		3266385	1					
ANR	3267656	IfStatement	if ( varc * 2 + 200 * 256 > vard || s -> qscale > 24 )		3266385	4					
ANR	3267657	Condition	varc * 2 + 200 * 256 > vard || s -> qscale > 24	273:12:5648:5688	3266385	0	True				
ANR	3267658	OrExpression	varc * 2 + 200 * 256 > vard || s -> qscale > 24		3266385	0		||			
ANR	3267659	RelationalExpression	varc * 2 + 200 * 256 > vard		3266385	0		>			
ANR	3267660	AdditiveExpression	varc * 2 + 200 * 256		3266385	0		+			
ANR	3267661	MultiplicativeExpression	varc * 2		3266385	0		*			
ANR	3267662	Identifier	varc		3266385	0					
ANR	3267663	PrimaryExpression	2		3266385	1					
ANR	3267664	MultiplicativeExpression	200 * 256		3266385	1		*			
ANR	3267665	PrimaryExpression	200		3266385	0					
ANR	3267666	PrimaryExpression	256		3266385	1					
ANR	3267667	Identifier	vard		3266385	1					
ANR	3267668	RelationalExpression	s -> qscale > 24		3266385	1		>			
ANR	3267669	PtrMemberAccess	s -> qscale		3266385	0					
ANR	3267670	Identifier	s		3266385	0					
ANR	3267671	Identifier	qscale		3266385	1					
ANR	3267672	PrimaryExpression	24		3266385	1					
ANR	3267673	CompoundStatement		269:54:5583:5583	3266385	1					
ANR	3267674	ExpressionStatement	mb_type |= CANDIDATE_MB_TYPE_INTER	277:12:5781:5814	3266385	0	True				
ANR	3267675	AssignmentExpression	mb_type |= CANDIDATE_MB_TYPE_INTER		3266385	0		|=			
ANR	3267676	Identifier	mb_type		3266385	0					
ANR	3267677	Identifier	CANDIDATE_MB_TYPE_INTER		3266385	1					
ANR	3267678	ExpressionStatement	"c -> sub_motion_search ( s , & mx , & my , dmin , 0 , 0 , 0 , 16 )"	279:12:5829:5881	3266385	1	True				
ANR	3267679	CallExpression	"c -> sub_motion_search ( s , & mx , & my , dmin , 0 , 0 , 0 , 16 )"		3266385	0					
ANR	3267680	Callee	c -> sub_motion_search		3266385	0					
ANR	3267681	PtrMemberAccess	c -> sub_motion_search		3266385	0					
ANR	3267682	Identifier	c		3266385	0					
ANR	3267683	Identifier	sub_motion_search		3266385	1					
ANR	3267684	ArgumentList	s		3266385	1					
ANR	3267685	Argument	s		3266385	0					
ANR	3267686	Identifier	s		3266385	0					
ANR	3267687	Argument	& mx		3266385	1					
ANR	3267688	UnaryOperationExpression	& mx		3266385	0					
ANR	3267689	UnaryOperator	&		3266385	0					
ANR	3267690	Identifier	mx		3266385	1					
ANR	3267691	Argument	& my		3266385	2					
ANR	3267692	UnaryOperationExpression	& my		3266385	0					
ANR	3267693	UnaryOperator	&		3266385	0					
ANR	3267694	Identifier	my		3266385	1					
ANR	3267695	Argument	dmin		3266385	3					
ANR	3267696	Identifier	dmin		3266385	0					
ANR	3267697	Argument	0		3266385	4					
ANR	3267698	PrimaryExpression	0		3266385	0					
ANR	3267699	Argument	0		3266385	5					
ANR	3267700	PrimaryExpression	0		3266385	0					
ANR	3267701	Argument	0		3266385	6					
ANR	3267702	PrimaryExpression	0		3266385	0					
ANR	3267703	Argument	16		3266385	7					
ANR	3267704	PrimaryExpression	16		3266385	0					
ANR	3267705	IfStatement	if ( s -> flags & CODEC_FLAG_MV0 )		3266385	2					
ANR	3267706	Condition	s -> flags & CODEC_FLAG_MV0	281:15:5899:5921	3266385	0	True				
ANR	3267707	BitAndExpression	s -> flags & CODEC_FLAG_MV0		3266385	0		&			
ANR	3267708	PtrMemberAccess	s -> flags		3266385	0					
ANR	3267709	Identifier	s		3266385	0					
ANR	3267710	Identifier	flags		3266385	1					
ANR	3267711	Identifier	CODEC_FLAG_MV0		3266385	1					
ANR	3267712	IfStatement	if ( mx || my )		3266385	1					
ANR	3267713	Condition	mx || my	283:19:5944:5951	3266385	0	True				
ANR	3267714	OrExpression	mx || my		3266385	0		||			
ANR	3267715	Identifier	mx		3266385	0					
ANR	3267716	Identifier	my		3266385	1					
ANR	3267717	ExpressionStatement	mb_type |= CANDIDATE_MB_TYPE_SKIPPED	285:20:5975:6011	3266385	1	True				
ANR	3267718	AssignmentExpression	mb_type |= CANDIDATE_MB_TYPE_SKIPPED		3266385	0		|=			
ANR	3267719	Identifier	mb_type		3266385	0					
ANR	3267720	Identifier	CANDIDATE_MB_TYPE_SKIPPED		3266385	1					
ANR	3267721	ElseStatement	else		3266385	0					
ANR	3267722	CompoundStatement		283:13:5945:5945	3266385	0					
ANR	3267723	ExpressionStatement	mx <<= shift	289:12:6067:6078	3266385	0	True				
ANR	3267724	AssignmentExpression	mx <<= shift		3266385	0		<<=			
ANR	3267725	Identifier	mx		3266385	0					
ANR	3267726	Identifier	shift		3266385	1					
ANR	3267727	ExpressionStatement	my <<= shift	291:12:6093:6104	3266385	1	True				
ANR	3267728	AssignmentExpression	my <<= shift		3266385	0		<<=			
ANR	3267729	Identifier	my		3266385	0					
ANR	3267730	Identifier	shift		3266385	1					
ANR	3267731	IfStatement	if ( ( s -> flags & CODEC_FLAG_4MV ) && ! c -> skip && varc > 50 << 8 && vard > 10 << 8 )		3266385	5					
ANR	3267732	Condition	( s -> flags & CODEC_FLAG_4MV ) && ! c -> skip && varc > 50 << 8 && vard > 10 << 8	295:11:6129:6205	3266385	0	True				
ANR	3267733	AndExpression	( s -> flags & CODEC_FLAG_4MV ) && ! c -> skip && varc > 50 << 8 && vard > 10 << 8		3266385	0		&&			
ANR	3267734	BitAndExpression	s -> flags & CODEC_FLAG_4MV		3266385	0		&			
ANR	3267735	PtrMemberAccess	s -> flags		3266385	0					
ANR	3267736	Identifier	s		3266385	0					
ANR	3267737	Identifier	flags		3266385	1					
ANR	3267738	Identifier	CODEC_FLAG_4MV		3266385	1					
ANR	3267739	AndExpression	! c -> skip && varc > 50 << 8 && vard > 10 << 8		3266385	1		&&			
ANR	3267740	UnaryOperationExpression	! c -> skip		3266385	0					
ANR	3267741	UnaryOperator	!		3266385	0					
ANR	3267742	PtrMemberAccess	c -> skip		3266385	1					
ANR	3267743	Identifier	c		3266385	0					
ANR	3267744	Identifier	skip		3266385	1					
ANR	3267745	AndExpression	varc > 50 << 8 && vard > 10 << 8		3266385	1		&&			
ANR	3267746	RelationalExpression	varc > 50 << 8		3266385	0		>			
ANR	3267747	Identifier	varc		3266385	0					
ANR	3267748	ShiftExpression	50 << 8		3266385	1		<<			
ANR	3267749	PrimaryExpression	50		3266385	0					
ANR	3267750	PrimaryExpression	8		3266385	1					
ANR	3267751	RelationalExpression	vard > 10 << 8		3266385	1		>			
ANR	3267752	Identifier	vard		3266385	0					
ANR	3267753	ShiftExpression	10 << 8		3266385	1		<<			
ANR	3267754	PrimaryExpression	10		3266385	0					
ANR	3267755	PrimaryExpression	8		3266385	1					
ANR	3267756	CompoundStatement		293:51:6100:6100	3266385	1					
ANR	3267757	IfStatement	"if ( h263_mv4_search ( s , mx , my , shift ) < INT_MAX )"		3266385	0					
ANR	3267758	Condition	"h263_mv4_search ( s , mx , my , shift ) < INT_MAX"	299:15:6225:6267	3266385	0	True				
ANR	3267759	RelationalExpression	"h263_mv4_search ( s , mx , my , shift ) < INT_MAX"		3266385	0		<			
ANR	3267760	CallExpression	"h263_mv4_search ( s , mx , my , shift )"		3266385	0					
ANR	3267761	Callee	h263_mv4_search		3266385	0					
ANR	3267762	Identifier	h263_mv4_search		3266385	0					
ANR	3267763	ArgumentList	s		3266385	1					
ANR	3267764	Argument	s		3266385	0					
ANR	3267765	Identifier	s		3266385	0					
ANR	3267766	Argument	mx		3266385	1					
ANR	3267767	Identifier	mx		3266385	0					
ANR	3267768	Argument	my		3266385	2					
ANR	3267769	Identifier	my		3266385	0					
ANR	3267770	Argument	shift		3266385	3					
ANR	3267771	Identifier	shift		3266385	0					
ANR	3267772	Identifier	INT_MAX		3266385	1					
ANR	3267773	ExpressionStatement	mb_type |= CANDIDATE_MB_TYPE_INTER4V	301:16:6287:6321	3266385	1	True				
ANR	3267774	AssignmentExpression	mb_type |= CANDIDATE_MB_TYPE_INTER4V		3266385	0		|=			
ANR	3267775	Identifier	mb_type		3266385	0					
ANR	3267776	Identifier	CANDIDATE_MB_TYPE_INTER4V		3266385	1					
ANR	3267777	ExpressionStatement	"set_p_mv_tables ( s , mx , my , 0 )"	305:12:6338:6367	3266385	1	True				
ANR	3267778	CallExpression	"set_p_mv_tables ( s , mx , my , 0 )"		3266385	0					
ANR	3267779	Callee	set_p_mv_tables		3266385	0					
ANR	3267780	Identifier	set_p_mv_tables		3266385	0					
ANR	3267781	ArgumentList	s		3266385	1					
ANR	3267782	Argument	s		3266385	0					
ANR	3267783	Identifier	s		3266385	0					
ANR	3267784	Argument	mx		3266385	1					
ANR	3267785	Identifier	mx		3266385	0					
ANR	3267786	Argument	my		3266385	2					
ANR	3267787	Identifier	my		3266385	0					
ANR	3267788	Argument	0		3266385	3					
ANR	3267789	PrimaryExpression	0		3266385	0					
ANR	3267790	ElseStatement	else		3266385	0					
ANR	3267791	ExpressionStatement	"set_p_mv_tables ( s , mx , my , 1 )"	309:12:6397:6426	3266385	0	True				
ANR	3267792	CallExpression	"set_p_mv_tables ( s , mx , my , 1 )"		3266385	0					
ANR	3267793	Callee	set_p_mv_tables		3266385	0					
ANR	3267794	Identifier	set_p_mv_tables		3266385	0					
ANR	3267795	ArgumentList	s		3266385	1					
ANR	3267796	Argument	s		3266385	0					
ANR	3267797	Identifier	s		3266385	0					
ANR	3267798	Argument	mx		3266385	1					
ANR	3267799	Identifier	mx		3266385	0					
ANR	3267800	Argument	my		3266385	2					
ANR	3267801	Identifier	my		3266385	0					
ANR	3267802	Argument	1		3266385	3					
ANR	3267803	PrimaryExpression	1		3266385	0					
ANR	3267804	IfStatement	if ( ( s -> flags & CODEC_FLAG_INTERLACED_ME ) && ! c -> skip )		3266385	6					
ANR	3267805	Condition	( s -> flags & CODEC_FLAG_INTERLACED_ME ) && ! c -> skip	311:11:6440:6498	3266385	0	True				
ANR	3267806	AndExpression	( s -> flags & CODEC_FLAG_INTERLACED_ME ) && ! c -> skip		3266385	0		&&			
ANR	3267807	BitAndExpression	s -> flags & CODEC_FLAG_INTERLACED_ME		3266385	0		&			
ANR	3267808	PtrMemberAccess	s -> flags		3266385	0					
ANR	3267809	Identifier	s		3266385	0					
ANR	3267810	Identifier	flags		3266385	1					
ANR	3267811	Identifier	CODEC_FLAG_INTERLACED_ME		3266385	1					
ANR	3267812	UnaryOperationExpression	! c -> skip		3266385	1					
ANR	3267813	UnaryOperator	!		3266385	0					
ANR	3267814	PtrMemberAccess	c -> skip		3266385	1					
ANR	3267815	Identifier	c		3266385	0					
ANR	3267816	Identifier	skip		3266385	1					
ANR	3267817	CompoundStatement		309:23:6393:6393	3266385	1					
ANR	3267818	IfStatement	"if ( interlaced_search ( s , 0 , s -> p_field_mv_table , s -> p_field_select_table , mx , my , 0 ) < INT_MAX )"		3266385	0					
ANR	3267819	Condition	"interlaced_search ( s , 0 , s -> p_field_mv_table , s -> p_field_select_table , mx , my , 0 ) < INT_MAX"	315:15:6540:6629	3266385	0	True				
ANR	3267820	RelationalExpression	"interlaced_search ( s , 0 , s -> p_field_mv_table , s -> p_field_select_table , mx , my , 0 ) < INT_MAX"		3266385	0		<			
ANR	3267821	CallExpression	"interlaced_search ( s , 0 , s -> p_field_mv_table , s -> p_field_select_table , mx , my , 0 )"		3266385	0					
ANR	3267822	Callee	interlaced_search		3266385	0					
ANR	3267823	Identifier	interlaced_search		3266385	0					
ANR	3267824	ArgumentList	s		3266385	1					
ANR	3267825	Argument	s		3266385	0					
ANR	3267826	Identifier	s		3266385	0					
ANR	3267827	Argument	0		3266385	1					
ANR	3267828	PrimaryExpression	0		3266385	0					
ANR	3267829	Argument	s -> p_field_mv_table		3266385	2					
ANR	3267830	PtrMemberAccess	s -> p_field_mv_table		3266385	0					
ANR	3267831	Identifier	s		3266385	0					
ANR	3267832	Identifier	p_field_mv_table		3266385	1					
ANR	3267833	Argument	s -> p_field_select_table		3266385	3					
ANR	3267834	PtrMemberAccess	s -> p_field_select_table		3266385	0					
ANR	3267835	Identifier	s		3266385	0					
ANR	3267836	Identifier	p_field_select_table		3266385	1					
ANR	3267837	Argument	mx		3266385	4					
ANR	3267838	Identifier	mx		3266385	0					
ANR	3267839	Argument	my		3266385	5					
ANR	3267840	Identifier	my		3266385	0					
ANR	3267841	Argument	0		3266385	6					
ANR	3267842	PrimaryExpression	0		3266385	0					
ANR	3267843	Identifier	INT_MAX		3266385	1					
ANR	3267844	ExpressionStatement	mb_type |= CANDIDATE_MB_TYPE_INTER_I	317:16:6649:6685	3266385	1	True				
ANR	3267845	AssignmentExpression	mb_type |= CANDIDATE_MB_TYPE_INTER_I		3266385	0		|=			
ANR	3267846	Identifier	mb_type		3266385	0					
ANR	3267847	Identifier	CANDIDATE_MB_TYPE_INTER_I		3266385	1					
ANR	3267848	ElseStatement	else		3266385	0					
ANR	3267849	CompoundStatement		319:8:6612:6630	3266385	0					
ANR	3267850	IdentifierDeclStatement	"int intra_score , i ;"	323:8:6719:6737	3266385	0	True				
ANR	3267851	IdentifierDecl	intra_score		3266385	0					
ANR	3267852	IdentifierDeclType	int		3266385	0					
ANR	3267853	Identifier	intra_score		3266385	1					
ANR	3267854	IdentifierDecl	i		3266385	1					
ANR	3267855	IdentifierDeclType	int		3266385	0					
ANR	3267856	Identifier	i		3266385	1					
ANR	3267857	ExpressionStatement	mb_type = CANDIDATE_MB_TYPE_INTER	325:8:6748:6780	3266385	1	True				
ANR	3267858	AssignmentExpression	mb_type = CANDIDATE_MB_TYPE_INTER		3266385	0		=			
ANR	3267859	Identifier	mb_type		3266385	0					
ANR	3267860	Identifier	CANDIDATE_MB_TYPE_INTER		3266385	1					
ANR	3267861	ExpressionStatement	"dmin = c -> sub_motion_search ( s , & mx , & my , dmin , 0 , 0 , 0 , 16 )"	329:8:6793:6851	3266385	2	True				
ANR	3267862	AssignmentExpression	"dmin = c -> sub_motion_search ( s , & mx , & my , dmin , 0 , 0 , 0 , 16 )"		3266385	0		=			
ANR	3267863	Identifier	dmin		3266385	0					
ANR	3267864	CallExpression	"c -> sub_motion_search ( s , & mx , & my , dmin , 0 , 0 , 0 , 16 )"		3266385	1					
ANR	3267865	Callee	c -> sub_motion_search		3266385	0					
ANR	3267866	PtrMemberAccess	c -> sub_motion_search		3266385	0					
ANR	3267867	Identifier	c		3266385	0					
ANR	3267868	Identifier	sub_motion_search		3266385	1					
ANR	3267869	ArgumentList	s		3266385	1					
ANR	3267870	Argument	s		3266385	0					
ANR	3267871	Identifier	s		3266385	0					
ANR	3267872	Argument	& mx		3266385	1					
ANR	3267873	UnaryOperationExpression	& mx		3266385	0					
ANR	3267874	UnaryOperator	&		3266385	0					
ANR	3267875	Identifier	mx		3266385	1					
ANR	3267876	Argument	& my		3266385	2					
ANR	3267877	UnaryOperationExpression	& my		3266385	0					
ANR	3267878	UnaryOperator	&		3266385	0					
ANR	3267879	Identifier	my		3266385	1					
ANR	3267880	Argument	dmin		3266385	3					
ANR	3267881	Identifier	dmin		3266385	0					
ANR	3267882	Argument	0		3266385	4					
ANR	3267883	PrimaryExpression	0		3266385	0					
ANR	3267884	Argument	0		3266385	5					
ANR	3267885	PrimaryExpression	0		3266385	0					
ANR	3267886	Argument	0		3266385	6					
ANR	3267887	PrimaryExpression	0		3266385	0					
ANR	3267888	Argument	16		3266385	7					
ANR	3267889	PrimaryExpression	16		3266385	0					
ANR	3267890	IfStatement	if ( c -> avctx -> me_sub_cmp != c -> avctx -> mb_cmp && ! c -> skip )		3266385	3					
ANR	3267891	Condition	c -> avctx -> me_sub_cmp != c -> avctx -> mb_cmp && ! c -> skip	331:11:6865:6916	3266385	0	True				
ANR	3267892	AndExpression	c -> avctx -> me_sub_cmp != c -> avctx -> mb_cmp && ! c -> skip		3266385	0		&&			
ANR	3267893	EqualityExpression	c -> avctx -> me_sub_cmp != c -> avctx -> mb_cmp		3266385	0		!=			
ANR	3267894	PtrMemberAccess	c -> avctx -> me_sub_cmp		3266385	0					
ANR	3267895	PtrMemberAccess	c -> avctx		3266385	0					
ANR	3267896	Identifier	c		3266385	0					
ANR	3267897	Identifier	avctx		3266385	1					
ANR	3267898	Identifier	me_sub_cmp		3266385	1					
ANR	3267899	PtrMemberAccess	c -> avctx -> mb_cmp		3266385	1					
ANR	3267900	PtrMemberAccess	c -> avctx		3266385	0					
ANR	3267901	Identifier	c		3266385	0					
ANR	3267902	Identifier	avctx		3266385	1					
ANR	3267903	Identifier	mb_cmp		3266385	1					
ANR	3267904	UnaryOperationExpression	! c -> skip		3266385	1					
ANR	3267905	UnaryOperator	!		3266385	0					
ANR	3267906	PtrMemberAccess	c -> skip		3266385	1					
ANR	3267907	Identifier	c		3266385	0					
ANR	3267908	Identifier	skip		3266385	1					
ANR	3267909	ExpressionStatement	"dmin = ff_get_mb_score ( s , mx , my , 0 , 0 , 0 , 16 , 1 )"	333:12:6932:6980	3266385	1	True				
ANR	3267910	AssignmentExpression	"dmin = ff_get_mb_score ( s , mx , my , 0 , 0 , 0 , 16 , 1 )"		3266385	0		=			
ANR	3267911	Identifier	dmin		3266385	0					
ANR	3267912	CallExpression	"ff_get_mb_score ( s , mx , my , 0 , 0 , 0 , 16 , 1 )"		3266385	1					
ANR	3267913	Callee	ff_get_mb_score		3266385	0					
ANR	3267914	Identifier	ff_get_mb_score		3266385	0					
ANR	3267915	ArgumentList	s		3266385	1					
ANR	3267916	Argument	s		3266385	0					
ANR	3267917	Identifier	s		3266385	0					
ANR	3267918	Argument	mx		3266385	1					
ANR	3267919	Identifier	mx		3266385	0					
ANR	3267920	Argument	my		3266385	2					
ANR	3267921	Identifier	my		3266385	0					
ANR	3267922	Argument	0		3266385	3					
ANR	3267923	PrimaryExpression	0		3266385	0					
ANR	3267924	Argument	0		3266385	4					
ANR	3267925	PrimaryExpression	0		3266385	0					
ANR	3267926	Argument	0		3266385	5					
ANR	3267927	PrimaryExpression	0		3266385	0					
ANR	3267928	Argument	16		3266385	6					
ANR	3267929	PrimaryExpression	16		3266385	0					
ANR	3267930	Argument	1		3266385	7					
ANR	3267931	PrimaryExpression	1		3266385	0					
ANR	3267932	IfStatement	if ( ( s -> flags & CODEC_FLAG_4MV ) && ! c -> skip && varc > 50 << 8 && vard > 10 << 8 )		3266385	4					
ANR	3267933	Condition	( s -> flags & CODEC_FLAG_4MV ) && ! c -> skip && varc > 50 << 8 && vard > 10 << 8	337:11:6996:7072	3266385	0	True				
ANR	3267934	AndExpression	( s -> flags & CODEC_FLAG_4MV ) && ! c -> skip && varc > 50 << 8 && vard > 10 << 8		3266385	0		&&			
ANR	3267935	BitAndExpression	s -> flags & CODEC_FLAG_4MV		3266385	0		&			
ANR	3267936	PtrMemberAccess	s -> flags		3266385	0					
ANR	3267937	Identifier	s		3266385	0					
ANR	3267938	Identifier	flags		3266385	1					
ANR	3267939	Identifier	CODEC_FLAG_4MV		3266385	1					
ANR	3267940	AndExpression	! c -> skip && varc > 50 << 8 && vard > 10 << 8		3266385	1		&&			
ANR	3267941	UnaryOperationExpression	! c -> skip		3266385	0					
ANR	3267942	UnaryOperator	!		3266385	0					
ANR	3267943	PtrMemberAccess	c -> skip		3266385	1					
ANR	3267944	Identifier	c		3266385	0					
ANR	3267945	Identifier	skip		3266385	1					
ANR	3267946	AndExpression	varc > 50 << 8 && vard > 10 << 8		3266385	1		&&			
ANR	3267947	RelationalExpression	varc > 50 << 8		3266385	0		>			
ANR	3267948	Identifier	varc		3266385	0					
ANR	3267949	ShiftExpression	50 << 8		3266385	1		<<			
ANR	3267950	PrimaryExpression	50		3266385	0					
ANR	3267951	PrimaryExpression	8		3266385	1					
ANR	3267952	RelationalExpression	vard > 10 << 8		3266385	1		>			
ANR	3267953	Identifier	vard		3266385	0					
ANR	3267954	ShiftExpression	10 << 8		3266385	1		<<			
ANR	3267955	PrimaryExpression	10		3266385	0					
ANR	3267956	PrimaryExpression	8		3266385	1					
ANR	3267957	CompoundStatement		337:12:6982:7026	3266385	1					
ANR	3267958	IdentifierDeclStatement	"int dmin4 = h263_mv4_search ( s , mx , my , shift ) ;"	341:12:7089:7133	3266385	0	True				
ANR	3267959	IdentifierDecl	"dmin4 = h263_mv4_search ( s , mx , my , shift )"		3266385	0					
ANR	3267960	IdentifierDeclType	int		3266385	0					
ANR	3267961	Identifier	dmin4		3266385	1					
ANR	3267962	AssignmentExpression	"dmin4 = h263_mv4_search ( s , mx , my , shift )"		3266385	2		=			
ANR	3267963	Identifier	dmin4		3266385	0					
ANR	3267964	CallExpression	"h263_mv4_search ( s , mx , my , shift )"		3266385	1					
ANR	3267965	Callee	h263_mv4_search		3266385	0					
ANR	3267966	Identifier	h263_mv4_search		3266385	0					
ANR	3267967	ArgumentList	s		3266385	1					
ANR	3267968	Argument	s		3266385	0					
ANR	3267969	Identifier	s		3266385	0					
ANR	3267970	Argument	mx		3266385	1					
ANR	3267971	Identifier	mx		3266385	0					
ANR	3267972	Argument	my		3266385	2					
ANR	3267973	Identifier	my		3266385	0					
ANR	3267974	Argument	shift		3266385	3					
ANR	3267975	Identifier	shift		3266385	0					
ANR	3267976	IfStatement	if ( dmin4 < dmin )		3266385	1					
ANR	3267977	Condition	dmin4 < dmin	343:15:7151:7162	3266385	0	True				
ANR	3267978	RelationalExpression	dmin4 < dmin		3266385	0		<			
ANR	3267979	Identifier	dmin4		3266385	0					
ANR	3267980	Identifier	dmin		3266385	1					
ANR	3267981	CompoundStatement		339:28:7057:7057	3266385	1					
ANR	3267982	ExpressionStatement	mb_type = CANDIDATE_MB_TYPE_INTER4V	345:16:7183:7217	3266385	0	True				
ANR	3267983	AssignmentExpression	mb_type = CANDIDATE_MB_TYPE_INTER4V		3266385	0		=			
ANR	3267984	Identifier	mb_type		3266385	0					
ANR	3267985	Identifier	CANDIDATE_MB_TYPE_INTER4V		3266385	1					
ANR	3267986	ExpressionStatement	dmin = dmin4	347:16:7236:7246	3266385	1	True				
ANR	3267987	AssignmentExpression	dmin = dmin4		3266385	0		=			
ANR	3267988	Identifier	dmin		3266385	0					
ANR	3267989	Identifier	dmin4		3266385	1					
ANR	3267990	IfStatement	if ( ( s -> flags & CODEC_FLAG_INTERLACED_ME ) && ! c -> skip )		3266385	5					
ANR	3267991	Condition	( s -> flags & CODEC_FLAG_INTERLACED_ME ) && ! c -> skip	353:11:7286:7344	3266385	0	True				
ANR	3267992	AndExpression	( s -> flags & CODEC_FLAG_INTERLACED_ME ) && ! c -> skip		3266385	0		&&			
ANR	3267993	BitAndExpression	s -> flags & CODEC_FLAG_INTERLACED_ME		3266385	0		&			
ANR	3267994	PtrMemberAccess	s -> flags		3266385	0					
ANR	3267995	Identifier	s		3266385	0					
ANR	3267996	Identifier	flags		3266385	1					
ANR	3267997	Identifier	CODEC_FLAG_INTERLACED_ME		3266385	1					
ANR	3267998	UnaryOperationExpression	! c -> skip		3266385	1					
ANR	3267999	UnaryOperator	!		3266385	0					
ANR	3268000	PtrMemberAccess	c -> skip		3266385	1					
ANR	3268001	Identifier	c		3266385	0					
ANR	3268002	Identifier	skip		3266385	1					
ANR	3268003	CompoundStatement		353:12:7276:7368	3266385	1					
ANR	3268004	IdentifierDeclStatement	"int dmin_i = interlaced_search ( s , 0 , s -> p_field_mv_table , s -> p_field_select_table , mx , my , 0 ) ;"	357:12:7383:7475	3266385	0	True				
ANR	3268005	IdentifierDecl	"dmin_i = interlaced_search ( s , 0 , s -> p_field_mv_table , s -> p_field_select_table , mx , my , 0 )"		3266385	0					
ANR	3268006	IdentifierDeclType	int		3266385	0					
ANR	3268007	Identifier	dmin_i		3266385	1					
ANR	3268008	AssignmentExpression	"dmin_i = interlaced_search ( s , 0 , s -> p_field_mv_table , s -> p_field_select_table , mx , my , 0 )"		3266385	2		=			
ANR	3268009	Identifier	dmin_i		3266385	0					
ANR	3268010	CallExpression	"interlaced_search ( s , 0 , s -> p_field_mv_table , s -> p_field_select_table , mx , my , 0 )"		3266385	1					
ANR	3268011	Callee	interlaced_search		3266385	0					
ANR	3268012	Identifier	interlaced_search		3266385	0					
ANR	3268013	ArgumentList	s		3266385	1					
ANR	3268014	Argument	s		3266385	0					
ANR	3268015	Identifier	s		3266385	0					
ANR	3268016	Argument	0		3266385	1					
ANR	3268017	PrimaryExpression	0		3266385	0					
ANR	3268018	Argument	s -> p_field_mv_table		3266385	2					
ANR	3268019	PtrMemberAccess	s -> p_field_mv_table		3266385	0					
ANR	3268020	Identifier	s		3266385	0					
ANR	3268021	Identifier	p_field_mv_table		3266385	1					
ANR	3268022	Argument	s -> p_field_select_table		3266385	3					
ANR	3268023	PtrMemberAccess	s -> p_field_select_table		3266385	0					
ANR	3268024	Identifier	s		3266385	0					
ANR	3268025	Identifier	p_field_select_table		3266385	1					
ANR	3268026	Argument	mx		3266385	4					
ANR	3268027	Identifier	mx		3266385	0					
ANR	3268028	Argument	my		3266385	5					
ANR	3268029	Identifier	my		3266385	0					
ANR	3268030	Argument	0		3266385	6					
ANR	3268031	PrimaryExpression	0		3266385	0					
ANR	3268032	IfStatement	if ( dmin_i < dmin )		3266385	1					
ANR	3268033	Condition	dmin_i < dmin	359:15:7493:7505	3266385	0	True				
ANR	3268034	RelationalExpression	dmin_i < dmin		3266385	0		<			
ANR	3268035	Identifier	dmin_i		3266385	0					
ANR	3268036	Identifier	dmin		3266385	1					
ANR	3268037	CompoundStatement		355:29:7400:7400	3266385	1					
ANR	3268038	ExpressionStatement	mb_type = CANDIDATE_MB_TYPE_INTER_I	361:16:7526:7561	3266385	0	True				
ANR	3268039	AssignmentExpression	mb_type = CANDIDATE_MB_TYPE_INTER_I		3266385	0		=			
ANR	3268040	Identifier	mb_type		3266385	0					
ANR	3268041	Identifier	CANDIDATE_MB_TYPE_INTER_I		3266385	1					
ANR	3268042	ExpressionStatement	dmin = dmin_i	363:16:7580:7592	3266385	1	True				
ANR	3268043	AssignmentExpression	dmin = dmin_i		3266385	0		=			
ANR	3268044	Identifier	dmin		3266385	0					
ANR	3268045	Identifier	dmin_i		3266385	1					
ANR	3268046	ExpressionStatement	"set_p_mv_tables ( s , mx , my , mb_type != CANDIDATE_MB_TYPE_INTER4V )"	373:8:7696:7758	3266385	6	True				
ANR	3268047	CallExpression	"set_p_mv_tables ( s , mx , my , mb_type != CANDIDATE_MB_TYPE_INTER4V )"		3266385	0					
ANR	3268048	Callee	set_p_mv_tables		3266385	0					
ANR	3268049	Identifier	set_p_mv_tables		3266385	0					
ANR	3268050	ArgumentList	s		3266385	1					
ANR	3268051	Argument	s		3266385	0					
ANR	3268052	Identifier	s		3266385	0					
ANR	3268053	Argument	mx		3266385	1					
ANR	3268054	Identifier	mx		3266385	0					
ANR	3268055	Argument	my		3266385	2					
ANR	3268056	Identifier	my		3266385	0					
ANR	3268057	Argument	mb_type != CANDIDATE_MB_TYPE_INTER4V		3266385	3					
ANR	3268058	EqualityExpression	mb_type != CANDIDATE_MB_TYPE_INTER4V		3266385	0		!=			
ANR	3268059	Identifier	mb_type		3266385	0					
ANR	3268060	Identifier	CANDIDATE_MB_TYPE_INTER4V		3266385	1					
ANR	3268061	IfStatement	if ( ( c -> avctx -> mb_cmp & 0xFF ) == FF_CMP_SSE )		3266385	7					
ANR	3268062	Condition	( c -> avctx -> mb_cmp & 0xFF ) == FF_CMP_SSE	379:11:7810:7844	3266385	0	True				
ANR	3268063	EqualityExpression	( c -> avctx -> mb_cmp & 0xFF ) == FF_CMP_SSE		3266385	0		==			
ANR	3268064	BitAndExpression	c -> avctx -> mb_cmp & 0xFF		3266385	0		&			
ANR	3268065	PtrMemberAccess	c -> avctx -> mb_cmp		3266385	0					
ANR	3268066	PtrMemberAccess	c -> avctx		3266385	0					
ANR	3268067	Identifier	c		3266385	0					
ANR	3268068	Identifier	avctx		3266385	1					
ANR	3268069	Identifier	mb_cmp		3266385	1					
ANR	3268070	PrimaryExpression	0xFF		3266385	1					
ANR	3268071	Identifier	FF_CMP_SSE		3266385	1					
ANR	3268072	CompoundStatement		375:47:7739:7739	3266385	1					
ANR	3268073	ExpressionStatement	intra_score = varc - 500	381:12:7861:7884	3266385	0	True				
ANR	3268074	AssignmentExpression	intra_score = varc - 500		3266385	0		=			
ANR	3268075	Identifier	intra_score		3266385	0					
ANR	3268076	AdditiveExpression	varc - 500		3266385	1		-			
ANR	3268077	Identifier	varc		3266385	0					
ANR	3268078	PrimaryExpression	500		3266385	1					
ANR	3268079	ElseStatement	else		3266385	0					
ANR	3268080	CompoundStatement		381:12:7808:7830	3266385	0					
ANR	3268081	IdentifierDeclStatement	int mean = ( sum + 128 ) >> 8 ;	385:12:7915:7937	3266385	0	True				
ANR	3268082	IdentifierDecl	mean = ( sum + 128 ) >> 8		3266385	0					
ANR	3268083	IdentifierDeclType	int		3266385	0					
ANR	3268084	Identifier	mean		3266385	1					
ANR	3268085	AssignmentExpression	mean = ( sum + 128 ) >> 8		3266385	2		=			
ANR	3268086	Identifier	mean		3266385	0					
ANR	3268087	ShiftExpression	( sum + 128 ) >> 8		3266385	1		>>			
ANR	3268088	AdditiveExpression	sum + 128		3266385	0		+			
ANR	3268089	Identifier	sum		3266385	0					
ANR	3268090	PrimaryExpression	128		3266385	1					
ANR	3268091	PrimaryExpression	8		3266385	1					
ANR	3268092	ExpressionStatement	mean *= 0x01010101	387:12:7952:7969	3266385	1	True				
ANR	3268093	AssignmentExpression	mean *= 0x01010101		3266385	0		*=			
ANR	3268094	Identifier	mean		3266385	0					
ANR	3268095	PrimaryExpression	0x01010101		3266385	1					
ANR	3268096	ForStatement	for ( i = 0 ; i < 16 ; i ++ )		3266385	2					
ANR	3268097	ForInit	i = 0 ;	391:16:7990:7993	3266385	0	True				
ANR	3268098	AssignmentExpression	i = 0		3266385	0		=			
ANR	3268099	Identifier	i		3266385	0					
ANR	3268100	PrimaryExpression	0		3266385	1					
ANR	3268101	Condition	i < 16	391:21:7995:7998	3266385	1	True				
ANR	3268102	RelationalExpression	i < 16		3266385	0		<			
ANR	3268103	Identifier	i		3266385	0					
ANR	3268104	PrimaryExpression	16		3266385	1					
ANR	3268105	PostIncDecOperationExpression	i ++	391:27:8001:8003	3266385	2	True				
ANR	3268106	Identifier	i		3266385	0					
ANR	3268107	IncDec	++		3266385	1					
ANR	3268108	CompoundStatement		387:31:7898:7898	3266385	3					
ANR	3268109	ExpressionStatement	* ( uint32_t * ) ( & c -> scratchpad [ i * s -> linesize + 0 ] ) = mean	393:16:8024:8077	3266385	0	True				
ANR	3268110	AssignmentExpression	* ( uint32_t * ) ( & c -> scratchpad [ i * s -> linesize + 0 ] ) = mean		3266385	0		=			
ANR	3268111	UnaryOperationExpression	* ( uint32_t * ) ( & c -> scratchpad [ i * s -> linesize + 0 ] )		3266385	0					
ANR	3268112	UnaryOperator	*		3266385	0					
ANR	3268113	CastExpression	( uint32_t * ) ( & c -> scratchpad [ i * s -> linesize + 0 ] )		3266385	1					
ANR	3268114	CastTarget	uint32_t *		3266385	0					
ANR	3268115	UnaryOperationExpression	& c -> scratchpad [ i * s -> linesize + 0 ]		3266385	1					
ANR	3268116	UnaryOperator	&		3266385	0					
ANR	3268117	ArrayIndexing	c -> scratchpad [ i * s -> linesize + 0 ]		3266385	1					
ANR	3268118	PtrMemberAccess	c -> scratchpad		3266385	0					
ANR	3268119	Identifier	c		3266385	0					
ANR	3268120	Identifier	scratchpad		3266385	1					
ANR	3268121	AdditiveExpression	i * s -> linesize + 0		3266385	1		+			
ANR	3268122	MultiplicativeExpression	i * s -> linesize		3266385	0		*			
ANR	3268123	Identifier	i		3266385	0					
ANR	3268124	PtrMemberAccess	s -> linesize		3266385	1					
ANR	3268125	Identifier	s		3266385	0					
ANR	3268126	Identifier	linesize		3266385	1					
ANR	3268127	PrimaryExpression	0		3266385	1					
ANR	3268128	Identifier	mean		3266385	1					
ANR	3268129	ExpressionStatement	* ( uint32_t * ) ( & c -> scratchpad [ i * s -> linesize + 4 ] ) = mean	395:16:8096:8149	3266385	1	True				
ANR	3268130	AssignmentExpression	* ( uint32_t * ) ( & c -> scratchpad [ i * s -> linesize + 4 ] ) = mean		3266385	0		=			
ANR	3268131	UnaryOperationExpression	* ( uint32_t * ) ( & c -> scratchpad [ i * s -> linesize + 4 ] )		3266385	0					
ANR	3268132	UnaryOperator	*		3266385	0					
ANR	3268133	CastExpression	( uint32_t * ) ( & c -> scratchpad [ i * s -> linesize + 4 ] )		3266385	1					
ANR	3268134	CastTarget	uint32_t *		3266385	0					
ANR	3268135	UnaryOperationExpression	& c -> scratchpad [ i * s -> linesize + 4 ]		3266385	1					
ANR	3268136	UnaryOperator	&		3266385	0					
ANR	3268137	ArrayIndexing	c -> scratchpad [ i * s -> linesize + 4 ]		3266385	1					
ANR	3268138	PtrMemberAccess	c -> scratchpad		3266385	0					
ANR	3268139	Identifier	c		3266385	0					
ANR	3268140	Identifier	scratchpad		3266385	1					
ANR	3268141	AdditiveExpression	i * s -> linesize + 4		3266385	1		+			
ANR	3268142	MultiplicativeExpression	i * s -> linesize		3266385	0		*			
ANR	3268143	Identifier	i		3266385	0					
ANR	3268144	PtrMemberAccess	s -> linesize		3266385	1					
ANR	3268145	Identifier	s		3266385	0					
ANR	3268146	Identifier	linesize		3266385	1					
ANR	3268147	PrimaryExpression	4		3266385	1					
ANR	3268148	Identifier	mean		3266385	1					
ANR	3268149	ExpressionStatement	* ( uint32_t * ) ( & c -> scratchpad [ i * s -> linesize + 8 ] ) = mean	397:16:8168:8221	3266385	2	True				
ANR	3268150	AssignmentExpression	* ( uint32_t * ) ( & c -> scratchpad [ i * s -> linesize + 8 ] ) = mean		3266385	0		=			
ANR	3268151	UnaryOperationExpression	* ( uint32_t * ) ( & c -> scratchpad [ i * s -> linesize + 8 ] )		3266385	0					
ANR	3268152	UnaryOperator	*		3266385	0					
ANR	3268153	CastExpression	( uint32_t * ) ( & c -> scratchpad [ i * s -> linesize + 8 ] )		3266385	1					
ANR	3268154	CastTarget	uint32_t *		3266385	0					
ANR	3268155	UnaryOperationExpression	& c -> scratchpad [ i * s -> linesize + 8 ]		3266385	1					
ANR	3268156	UnaryOperator	&		3266385	0					
ANR	3268157	ArrayIndexing	c -> scratchpad [ i * s -> linesize + 8 ]		3266385	1					
ANR	3268158	PtrMemberAccess	c -> scratchpad		3266385	0					
ANR	3268159	Identifier	c		3266385	0					
ANR	3268160	Identifier	scratchpad		3266385	1					
ANR	3268161	AdditiveExpression	i * s -> linesize + 8		3266385	1		+			
ANR	3268162	MultiplicativeExpression	i * s -> linesize		3266385	0		*			
ANR	3268163	Identifier	i		3266385	0					
ANR	3268164	PtrMemberAccess	s -> linesize		3266385	1					
ANR	3268165	Identifier	s		3266385	0					
ANR	3268166	Identifier	linesize		3266385	1					
ANR	3268167	PrimaryExpression	8		3266385	1					
ANR	3268168	Identifier	mean		3266385	1					
ANR	3268169	ExpressionStatement	* ( uint32_t * ) ( & c -> scratchpad [ i * s -> linesize + 12 ] ) = mean	399:16:8240:8293	3266385	3	True				
ANR	3268170	AssignmentExpression	* ( uint32_t * ) ( & c -> scratchpad [ i * s -> linesize + 12 ] ) = mean		3266385	0		=			
ANR	3268171	UnaryOperationExpression	* ( uint32_t * ) ( & c -> scratchpad [ i * s -> linesize + 12 ] )		3266385	0					
ANR	3268172	UnaryOperator	*		3266385	0					
ANR	3268173	CastExpression	( uint32_t * ) ( & c -> scratchpad [ i * s -> linesize + 12 ] )		3266385	1					
ANR	3268174	CastTarget	uint32_t *		3266385	0					
ANR	3268175	UnaryOperationExpression	& c -> scratchpad [ i * s -> linesize + 12 ]		3266385	1					
ANR	3268176	UnaryOperator	&		3266385	0					
ANR	3268177	ArrayIndexing	c -> scratchpad [ i * s -> linesize + 12 ]		3266385	1					
ANR	3268178	PtrMemberAccess	c -> scratchpad		3266385	0					
ANR	3268179	Identifier	c		3266385	0					
ANR	3268180	Identifier	scratchpad		3266385	1					
ANR	3268181	AdditiveExpression	i * s -> linesize + 12		3266385	1		+			
ANR	3268182	MultiplicativeExpression	i * s -> linesize		3266385	0		*			
ANR	3268183	Identifier	i		3266385	0					
ANR	3268184	PtrMemberAccess	s -> linesize		3266385	1					
ANR	3268185	Identifier	s		3266385	0					
ANR	3268186	Identifier	linesize		3266385	1					
ANR	3268187	PrimaryExpression	12		3266385	1					
ANR	3268188	Identifier	mean		3266385	1					
ANR	3268189	ExpressionStatement	"intra_score = s -> dsp . mb_cmp [ 0 ] ( s , c -> scratchpad , pix , s -> linesize , 16 )"	405:12:8325:8394	3266385	3	True				
ANR	3268190	AssignmentExpression	"intra_score = s -> dsp . mb_cmp [ 0 ] ( s , c -> scratchpad , pix , s -> linesize , 16 )"		3266385	0		=			
ANR	3268191	Identifier	intra_score		3266385	0					
ANR	3268192	CallExpression	"s -> dsp . mb_cmp [ 0 ] ( s , c -> scratchpad , pix , s -> linesize , 16 )"		3266385	1					
ANR	3268193	Callee	s -> dsp . mb_cmp [ 0 ]		3266385	0					
ANR	3268194	ArrayIndexing	s -> dsp . mb_cmp [ 0 ]		3266385	0					
ANR	3268195	MemberAccess	s -> dsp . mb_cmp		3266385	0					
ANR	3268196	PtrMemberAccess	s -> dsp		3266385	0					
ANR	3268197	Identifier	s		3266385	0					
ANR	3268198	Identifier	dsp		3266385	1					
ANR	3268199	Identifier	mb_cmp		3266385	1					
ANR	3268200	PrimaryExpression	0		3266385	1					
ANR	3268201	ArgumentList	s		3266385	1					
ANR	3268202	Argument	s		3266385	0					
ANR	3268203	Identifier	s		3266385	0					
ANR	3268204	Argument	c -> scratchpad		3266385	1					
ANR	3268205	PtrMemberAccess	c -> scratchpad		3266385	0					
ANR	3268206	Identifier	c		3266385	0					
ANR	3268207	Identifier	scratchpad		3266385	1					
ANR	3268208	Argument	pix		3266385	2					
ANR	3268209	Identifier	pix		3266385	0					
ANR	3268210	Argument	s -> linesize		3266385	3					
ANR	3268211	PtrMemberAccess	s -> linesize		3266385	0					
ANR	3268212	Identifier	s		3266385	0					
ANR	3268213	Identifier	linesize		3266385	1					
ANR	3268214	Argument	16		3266385	4					
ANR	3268215	PrimaryExpression	16		3266385	0					
ANR	3268216	ExpressionStatement	intra_score += c -> mb_penalty_factor * 16	409:8:8416:8454	3266385	8	True				
ANR	3268217	AssignmentExpression	intra_score += c -> mb_penalty_factor * 16		3266385	0		+=			
ANR	3268218	Identifier	intra_score		3266385	0					
ANR	3268219	MultiplicativeExpression	c -> mb_penalty_factor * 16		3266385	1		*			
ANR	3268220	PtrMemberAccess	c -> mb_penalty_factor		3266385	0					
ANR	3268221	Identifier	c		3266385	0					
ANR	3268222	Identifier	mb_penalty_factor		3266385	1					
ANR	3268223	PrimaryExpression	16		3266385	1					
ANR	3268224	IfStatement	if ( intra_score < dmin )		3266385	9					
ANR	3268225	Condition	intra_score < dmin	413:11:8470:8487	3266385	0	True				
ANR	3268226	RelationalExpression	intra_score < dmin		3266385	0		<			
ANR	3268227	Identifier	intra_score		3266385	0					
ANR	3268228	Identifier	dmin		3266385	1					
ANR	3268229	CompoundStatement		409:30:8382:8382	3266385	1					
ANR	3268230	ExpressionStatement	mb_type = CANDIDATE_MB_TYPE_INTRA	415:12:8504:8536	3266385	0	True				
ANR	3268231	AssignmentExpression	mb_type = CANDIDATE_MB_TYPE_INTRA		3266385	0		=			
ANR	3268232	Identifier	mb_type		3266385	0					
ANR	3268233	Identifier	CANDIDATE_MB_TYPE_INTRA		3266385	1					
ANR	3268234	ExpressionStatement	s -> current_picture . f . mb_type [ mb_y * s -> mb_stride + mb_x ] = CANDIDATE_MB_TYPE_INTRA	417:12:8551:8631	3266385	1	True				
ANR	3268235	AssignmentExpression	s -> current_picture . f . mb_type [ mb_y * s -> mb_stride + mb_x ] = CANDIDATE_MB_TYPE_INTRA		3266385	0		=			
ANR	3268236	ArrayIndexing	s -> current_picture . f . mb_type [ mb_y * s -> mb_stride + mb_x ]		3266385	0					
ANR	3268237	MemberAccess	s -> current_picture . f . mb_type		3266385	0					
ANR	3268238	MemberAccess	s -> current_picture . f		3266385	0					
ANR	3268239	PtrMemberAccess	s -> current_picture		3266385	0					
ANR	3268240	Identifier	s		3266385	0					
ANR	3268241	Identifier	current_picture		3266385	1					
ANR	3268242	Identifier	f		3266385	1					
ANR	3268243	Identifier	mb_type		3266385	1					
ANR	3268244	AdditiveExpression	mb_y * s -> mb_stride + mb_x		3266385	1		+			
ANR	3268245	MultiplicativeExpression	mb_y * s -> mb_stride		3266385	0		*			
ANR	3268246	Identifier	mb_y		3266385	0					
ANR	3268247	PtrMemberAccess	s -> mb_stride		3266385	1					
ANR	3268248	Identifier	s		3266385	0					
ANR	3268249	Identifier	mb_stride		3266385	1					
ANR	3268250	Identifier	mb_x		3266385	1					
ANR	3268251	Identifier	CANDIDATE_MB_TYPE_INTRA		3266385	1					
ANR	3268252	ElseStatement	else		3266385	0					
ANR	3268253	ExpressionStatement	s -> current_picture . f . mb_type [ mb_y * s -> mb_stride + mb_x ] = 0	421:12:8677:8735	3266385	0	True				
ANR	3268254	AssignmentExpression	s -> current_picture . f . mb_type [ mb_y * s -> mb_stride + mb_x ] = 0		3266385	0		=			
ANR	3268255	ArrayIndexing	s -> current_picture . f . mb_type [ mb_y * s -> mb_stride + mb_x ]		3266385	0					
ANR	3268256	MemberAccess	s -> current_picture . f . mb_type		3266385	0					
ANR	3268257	MemberAccess	s -> current_picture . f		3266385	0					
ANR	3268258	PtrMemberAccess	s -> current_picture		3266385	0					
ANR	3268259	Identifier	s		3266385	0					
ANR	3268260	Identifier	current_picture		3266385	1					
ANR	3268261	Identifier	f		3266385	1					
ANR	3268262	Identifier	mb_type		3266385	1					
ANR	3268263	AdditiveExpression	mb_y * s -> mb_stride + mb_x		3266385	1		+			
ANR	3268264	MultiplicativeExpression	mb_y * s -> mb_stride		3266385	0		*			
ANR	3268265	Identifier	mb_y		3266385	0					
ANR	3268266	PtrMemberAccess	s -> mb_stride		3266385	1					
ANR	3268267	Identifier	s		3266385	0					
ANR	3268268	Identifier	mb_stride		3266385	1					
ANR	3268269	Identifier	mb_x		3266385	1					
ANR	3268270	PrimaryExpression	0		3266385	1					
ANR	3268271	CompoundStatement		425:12:8739:8793	3266385	10					
ANR	3268272	IdentifierDeclStatement	"int p_score = FFMIN ( vard , varc - 500 + ( s -> lambda2 >> FF_LAMBDA_SHIFT ) * 100 ) ;"	427:12:8763:8831	3266385	0	True				
ANR	3268273	IdentifierDecl	"p_score = FFMIN ( vard , varc - 500 + ( s -> lambda2 >> FF_LAMBDA_SHIFT ) * 100 )"		3266385	0					
ANR	3268274	IdentifierDeclType	int		3266385	0					
ANR	3268275	Identifier	p_score		3266385	1					
ANR	3268276	AssignmentExpression	"p_score = FFMIN ( vard , varc - 500 + ( s -> lambda2 >> FF_LAMBDA_SHIFT ) * 100 )"		3266385	2		=			
ANR	3268277	Identifier	p_score		3266385	0					
ANR	3268278	CallExpression	"FFMIN ( vard , varc - 500 + ( s -> lambda2 >> FF_LAMBDA_SHIFT ) * 100 )"		3266385	1					
ANR	3268279	Callee	FFMIN		3266385	0					
ANR	3268280	Identifier	FFMIN		3266385	0					
ANR	3268281	ArgumentList	vard		3266385	1					
ANR	3268282	Argument	vard		3266385	0					
ANR	3268283	Identifier	vard		3266385	0					
ANR	3268284	Argument	varc - 500 + ( s -> lambda2 >> FF_LAMBDA_SHIFT ) * 100		3266385	1					
ANR	3268285	AdditiveExpression	varc - 500 + ( s -> lambda2 >> FF_LAMBDA_SHIFT ) * 100		3266385	0		-			
ANR	3268286	Identifier	varc		3266385	0					
ANR	3268287	AdditiveExpression	500 + ( s -> lambda2 >> FF_LAMBDA_SHIFT ) * 100		3266385	1		+			
ANR	3268288	PrimaryExpression	500		3266385	0					
ANR	3268289	MultiplicativeExpression	( s -> lambda2 >> FF_LAMBDA_SHIFT ) * 100		3266385	1		*			
ANR	3268290	ShiftExpression	s -> lambda2 >> FF_LAMBDA_SHIFT		3266385	0		>>			
ANR	3268291	PtrMemberAccess	s -> lambda2		3266385	0					
ANR	3268292	Identifier	s		3266385	0					
ANR	3268293	Identifier	lambda2		3266385	1					
ANR	3268294	Identifier	FF_LAMBDA_SHIFT		3266385	1					
ANR	3268295	PrimaryExpression	100		3266385	1					
ANR	3268296	IdentifierDeclStatement	int i_score = varc - 500 + ( s -> lambda2 >> FF_LAMBDA_SHIFT ) * 20 ;	429:12:8846:8900	3266385	1	True				
ANR	3268297	IdentifierDecl	i_score = varc - 500 + ( s -> lambda2 >> FF_LAMBDA_SHIFT ) * 20		3266385	0					
ANR	3268298	IdentifierDeclType	int		3266385	0					
ANR	3268299	Identifier	i_score		3266385	1					
ANR	3268300	AssignmentExpression	i_score = varc - 500 + ( s -> lambda2 >> FF_LAMBDA_SHIFT ) * 20		3266385	2		=			
ANR	3268301	Identifier	i_score		3266385	0					
ANR	3268302	AdditiveExpression	varc - 500 + ( s -> lambda2 >> FF_LAMBDA_SHIFT ) * 20		3266385	1		-			
ANR	3268303	Identifier	varc		3266385	0					
ANR	3268304	AdditiveExpression	500 + ( s -> lambda2 >> FF_LAMBDA_SHIFT ) * 20		3266385	1		+			
ANR	3268305	PrimaryExpression	500		3266385	0					
ANR	3268306	MultiplicativeExpression	( s -> lambda2 >> FF_LAMBDA_SHIFT ) * 20		3266385	1		*			
ANR	3268307	ShiftExpression	s -> lambda2 >> FF_LAMBDA_SHIFT		3266385	0		>>			
ANR	3268308	PtrMemberAccess	s -> lambda2		3266385	0					
ANR	3268309	Identifier	s		3266385	0					
ANR	3268310	Identifier	lambda2		3266385	1					
ANR	3268311	Identifier	FF_LAMBDA_SHIFT		3266385	1					
ANR	3268312	PrimaryExpression	20		3266385	1					
ANR	3268313	ExpressionStatement	c -> scene_change_score += ff_sqrt ( p_score ) - ff_sqrt ( i_score )	431:12:8915:8974	3266385	2	True				
ANR	3268314	AssignmentExpression	c -> scene_change_score += ff_sqrt ( p_score ) - ff_sqrt ( i_score )		3266385	0		+=			
ANR	3268315	PtrMemberAccess	c -> scene_change_score		3266385	0					
ANR	3268316	Identifier	c		3266385	0					
ANR	3268317	Identifier	scene_change_score		3266385	1					
ANR	3268318	AdditiveExpression	ff_sqrt ( p_score ) - ff_sqrt ( i_score )		3266385	1		-			
ANR	3268319	CallExpression	ff_sqrt ( p_score )		3266385	0					
ANR	3268320	Callee	ff_sqrt		3266385	0					
ANR	3268321	Identifier	ff_sqrt		3266385	0					
ANR	3268322	ArgumentList	p_score		3266385	1					
ANR	3268323	Argument	p_score		3266385	0					
ANR	3268324	Identifier	p_score		3266385	0					
ANR	3268325	CallExpression	ff_sqrt ( i_score )		3266385	1					
ANR	3268326	Callee	ff_sqrt		3266385	0					
ANR	3268327	Identifier	ff_sqrt		3266385	0					
ANR	3268328	ArgumentList	i_score		3266385	1					
ANR	3268329	Argument	i_score		3266385	0					
ANR	3268330	Identifier	i_score		3266385	0					
ANR	3268331	ExpressionStatement	s -> mb_type [ mb_y * s -> mb_stride + mb_x ] = mb_type	439:4:9001:9046	3266385	39	True				
ANR	3268332	AssignmentExpression	s -> mb_type [ mb_y * s -> mb_stride + mb_x ] = mb_type		3266385	0		=			
ANR	3268333	ArrayIndexing	s -> mb_type [ mb_y * s -> mb_stride + mb_x ]		3266385	0					
ANR	3268334	PtrMemberAccess	s -> mb_type		3266385	0					
ANR	3268335	Identifier	s		3266385	0					
ANR	3268336	Identifier	mb_type		3266385	1					
ANR	3268337	AdditiveExpression	mb_y * s -> mb_stride + mb_x		3266385	1		+			
ANR	3268338	MultiplicativeExpression	mb_y * s -> mb_stride		3266385	0		*			
ANR	3268339	Identifier	mb_y		3266385	0					
ANR	3268340	PtrMemberAccess	s -> mb_stride		3266385	1					
ANR	3268341	Identifier	s		3266385	0					
ANR	3268342	Identifier	mb_stride		3266385	1					
ANR	3268343	Identifier	mb_x		3266385	1					
ANR	3268344	Identifier	mb_type		3266385	1					
ANR	3268345	ReturnType	void		3266385	1					
ANR	3268346	Identifier	ff_estimate_p_frame_motion		3266385	2					
ANR	3268347	ParameterList	"MpegEncContext * s , int mb_x , int mb_y"		3266385	3					
ANR	3268348	Parameter	MpegEncContext * s	1:32:32:49	3266385	0	True				
ANR	3268349	ParameterType	MpegEncContext *		3266385	0					
ANR	3268350	Identifier	s		3266385	1					
ANR	3268351	Parameter	int mb_x	3:32:85:92	3266385	1	True				
ANR	3268352	ParameterType	int		3266385	0					
ANR	3268353	Identifier	mb_x		3266385	1					
ANR	3268354	Parameter	int mb_y	3:42:95:102	3266385	2	True				
ANR	3268355	ParameterType	int		3266385	0					
ANR	3268356	Identifier	mb_y		3266385	1					
ANR	3268357	CFGEntryNode	ENTRY		3266385		True				
ANR	3268358	CFGExitNode	EXIT		3266385		True				
ANR	3268359	Symbol	ff_epzs_motion_search		3266385						
ANR	3268360	Symbol	ff_sqrt		3266385						
ANR	3268361	Symbol	shift		3266385						
ANR	3268362	Symbol	c -> skip		3266385						
ANR	3268363	Symbol	s -> current_picture		3266385						
ANR	3268364	Symbol	pic -> mb_var		3266385						
ANR	3268365	Symbol	dmin_i		3266385						
ANR	3268366	Symbol	* mot_xy		3266385						
ANR	3268367	Symbol	s -> out_format		3266385						
ANR	3268368	Symbol	s -> last_picture . f		3266385						
ANR	3268369	Symbol	c -> avctx -> me_threshold		3266385						
ANR	3268370	Symbol	* ( uint32_t * ) ( & c -> scratchpad [ i * s -> linesize + 4 ] )		3266385						
ANR	3268371	Symbol	mb_type		3266385						
ANR	3268372	Symbol	s -> new_picture . f . data		3266385						
ANR	3268373	Symbol	ppix		3266385						
ANR	3268374	Symbol	c -> mb_penalty_factor		3266385						
ANR	3268375	Symbol	c -> avctx -> mb_decision		3266385						
ANR	3268376	Symbol	mot_xy		3266385						
ANR	3268377	Symbol	c -> ref		3266385						
ANR	3268378	Symbol	* s -> current_picture . f		3266385						
ANR	3268379	Symbol	c -> mv_penalty		3266385						
ANR	3268380	Symbol	* mb_y		3266385						
ANR	3268381	Symbol	* mb_x		3266385						
ANR	3268382	Symbol	c -> pred_y		3266385						
ANR	3268383	Symbol	c -> pred_x		3266385						
ANR	3268384	Symbol	* ( uint32_t * ) ( & c -> scratchpad [ i * s -> linesize + 12 ] )		3266385						
ANR	3268385	Symbol	s -> flags		3266385						
ANR	3268386	Symbol	vard		3266385						
ANR	3268387	Symbol	varc		3266385						
ANR	3268388	Symbol	* * mot_stride		3266385						
ANR	3268389	Symbol	s -> dsp		3266385						
ANR	3268390	Symbol	* * * s		3266385						
ANR	3268391	Symbol	c -> avctx -> mb_cmp		3266385						
ANR	3268392	Symbol	* pic -> mb_var		3266385						
ANR	3268393	Symbol	i_score		3266385						
ANR	3268394	Symbol	* c -> src		3266385						
ANR	3268395	Symbol	dmin4		3266385						
ANR	3268396	Symbol	CANDIDATE_MB_TYPE_SKIPPED		3266385						
ANR	3268397	Symbol	* s -> dsp . mb_cmp		3266385						
ANR	3268398	Symbol	FMT_H263		3266385						
ANR	3268399	Symbol	ff_get_mb_score		3266385						
ANR	3268400	Symbol	* * * c		3266385						
ANR	3268401	Symbol	c -> ymax		3266385						
ANR	3268402	Symbol	dmin		3266385						
ANR	3268403	Symbol	* s -> mb_type		3266385						
ANR	3268404	Symbol	s -> first_slice_line		3266385						
ANR	3268405	Symbol	c -> uvstride		3266385						
ANR	3268406	Symbol	* c -> avctx		3266385						
ANR	3268407	Symbol	sum		3266385						
ANR	3268408	Symbol	* * c -> src		3266385						
ANR	3268409	Symbol	c -> src		3266385						
ANR	3268410	Symbol	s -> dsp . sse		3266385						
ANR	3268411	Symbol	s -> p_field_mv_table		3266385						
ANR	3268412	Symbol	P		3266385						
ANR	3268413	Symbol	s -> current_picture . f . mb_type		3266385						
ANR	3268414	Symbol	c -> avctx -> me_sub_cmp		3266385						
ANR	3268415	Symbol	P_TOP		3266385						
ANR	3268416	Symbol	* * s		3266385						
ANR	3268417	Symbol	INT_MAX		3266385						
ANR	3268418	Symbol	FF_CMP_SSE		3266385						
ANR	3268419	Symbol	s -> last_picture		3266385						
ANR	3268420	Symbol	p_score		3266385						
ANR	3268421	Symbol	c		3266385						
ANR	3268422	Symbol	s -> dsp . pix_sum		3266385						
ANR	3268423	Symbol	* s -> current_picture		3266385						
ANR	3268424	Symbol	c -> stride		3266385						
ANR	3268425	Symbol	s -> current_picture . f		3266385						
ANR	3268426	Symbol	* * * s -> current_picture		3266385						
ANR	3268427	Symbol	s -> quarter_sample		3266385						
ANR	3268428	Symbol	i		3266385						
ANR	3268429	Symbol	* ( uint32_t * ) ( & c -> scratchpad [ i * s -> linesize + 8 ] )		3266385						
ANR	3268430	Symbol	CODEC_FLAG_4MV		3266385						
ANR	3268431	Symbol	& s -> me		3266385						
ANR	3268432	Symbol	c -> mc_mb_var_sum_temp		3266385						
ANR	3268433	Symbol	CANDIDATE_MB_TYPE_INTER_I		3266385						
ANR	3268434	Symbol	* pic -> mb_mean		3266385						
ANR	3268435	Symbol	* s -> dsp . sse		3266385						
ANR	3268436	Symbol	s		3266385						
ANR	3268437	Symbol	s -> lambda2		3266385						
ANR	3268438	Symbol	CANDIDATE_MB_TYPE_INTER		3266385						
ANR	3268439	Symbol	s -> last_picture . f . data		3266385						
ANR	3268440	Symbol	c -> penalty_factor		3266385						
ANR	3268441	Symbol	P_LEFT		3266385						
ANR	3268442	Symbol	pic -> mb_mean		3266385						
ANR	3268443	Symbol	c -> mb_var_sum_temp		3266385						
ANR	3268444	Symbol	* * s -> current_picture . f		3266385						
ANR	3268445	Symbol	mb_y		3266385						
ANR	3268446	Symbol	s -> dsp . mb_cmp		3266385						
ANR	3268447	Symbol	mb_x		3266385						
ANR	3268448	Symbol	* s -> f_code		3266385						
ANR	3268449	Symbol	* P_TOPRIGHT		3266385						
ANR	3268450	Symbol	FF_MB_DECISION_SIMPLE		3266385						
ANR	3268451	Symbol	* * * * s		3266385						
ANR	3268452	Symbol	s -> block_index		3266385						
ANR	3268453	Symbol	* pic -> mc_mb_var		3266385						
ANR	3268454	Symbol	s -> b8_stride		3266385						
ANR	3268455	Symbol	P_TOPRIGHT		3266385						
ANR	3268456	Symbol	CANDIDATE_MB_TYPE_INTER4V		3266385						
ANR	3268457	Symbol	s -> uvlinesize		3266385						
ANR	3268458	Symbol	FFMIN		3266385						
ANR	3268459	Symbol	c -> avctx -> mb_threshold		3266385						
ANR	3268460	Symbol	pic		3266385						
ANR	3268461	Symbol	* c -> ref		3266385						
ANR	3268462	Symbol	* s -> mb_stride		3266385						
ANR	3268463	Symbol	* s -> block_index		3266385						
ANR	3268464	Symbol	* * * s -> current_picture . f . motion_val		3266385						
ANR	3268465	Symbol	* s -> current_picture . f . mb_type		3266385						
ANR	3268466	Symbol	pic -> mc_mb_var		3266385						
ANR	3268467	Symbol	mot_stride		3266385						
ANR	3268468	Symbol	* * c -> ref		3266385						
ANR	3268469	Symbol	* s -> dsp		3266385						
ANR	3268470	Symbol	c -> current_mv_penalty		3266385						
ANR	3268471	Symbol	* * s -> current_picture		3266385						
ANR	3268472	Symbol	pix		3266385						
ANR	3268473	Symbol	* * mot_xy		3266385						
ANR	3268474	Symbol	NULL		3266385						
ANR	3268475	Symbol	s -> current_picture . f . motion_val		3266385						
ANR	3268476	Symbol	* P_TOP		3266385						
ANR	3268477	Symbol	CODEC_FLAG_MV0		3266385						
ANR	3268478	Symbol	MAX_MV		3266385						
ANR	3268479	Symbol	* mot_stride		3266385						
ANR	3268480	Symbol	h263_mv4_search		3266385						
ANR	3268481	Symbol	* * c		3266385						
ANR	3268482	Symbol	s -> p_mv_table		3266385						
ANR	3268483	Symbol	interlaced_search		3266385						
ANR	3268484	Symbol	c -> sub_penalty_factor		3266385						
ANR	3268485	Symbol	* s -> current_picture . f . motion_val		3266385						
ANR	3268486	Symbol	mx		3266385						
ANR	3268487	Symbol	my		3266385						
ANR	3268488	Symbol	get_penalty_factor		3266385						
ANR	3268489	Symbol	s -> f_code		3266385						
ANR	3268490	Symbol	c -> scene_change_score		3266385						
ANR	3268491	Symbol	* * s -> current_picture . f . motion_val		3266385						
ANR	3268492	Symbol	s -> new_picture		3266385						
ANR	3268493	Symbol	c -> avctx		3266385						
ANR	3268494	Symbol	* P_MEDIAN		3266385						
ANR	3268495	Symbol	s -> mb_type		3266385						
ANR	3268496	Symbol	s -> me_method		3266385						
ANR	3268497	Symbol	s -> new_picture . f		3266385						
ANR	3268498	Symbol	s -> lambda		3266385						
ANR	3268499	Symbol	* ( uint32_t * ) ( & c -> scratchpad [ i * s -> linesize + 0 ] )		3266385						
ANR	3268500	Symbol	CODEC_FLAG_INTERLACED_ME		3266385						
ANR	3268501	Symbol	& s -> current_picture		3266385						
ANR	3268502	Symbol	s -> qscale		3266385						
ANR	3268503	Symbol	P_MEDIAN		3266385						
ANR	3268504	Symbol	s -> mb_stride		3266385						
ANR	3268505	Symbol	* c -> mv_penalty		3266385						
ANR	3268506	Symbol	s -> linesize		3266385						
ANR	3268507	Symbol	* P_LEFT		3266385						
ANR	3268508	Symbol	check_input_motion		3266385						
ANR	3268509	Symbol	* P		3266385						
ANR	3268510	Symbol	mid_pred		3266385						
ANR	3268511	Symbol	* s -> linesize		3266385						
ANR	3268512	Symbol	s -> dsp . pix_norm1		3266385						
ANR	3268513	Symbol	* * pic		3266385						
ANR	3268514	Symbol	c -> xmax		3266385						
ANR	3268515	Symbol	s -> p_field_select_table		3266385						
ANR	3268516	Symbol	c -> avctx -> me_cmp		3266385						
ANR	3268517	Symbol	* c -> scratchpad		3266385						
ANR	3268518	Symbol	FF_LAMBDA_SHIFT		3266385						
ANR	3268519	Symbol	* c		3266385						
ANR	3268520	Symbol	c -> scratchpad		3266385						
ANR	3268521	Symbol	c -> xmin		3266385						
ANR	3268522	Symbol	* * * s -> current_picture . f		3266385						
ANR	3268523	Symbol	CANDIDATE_MB_TYPE_INTRA		3266385						
ANR	3268524	Symbol	intra_score		3266385						
ANR	3268525	Symbol	* i		3266385						
ANR	3268526	Symbol	* pic		3266385						
ANR	3268527	Symbol	& mx		3266385						
ANR	3268528	Symbol	c -> sub_motion_search		3266385						
ANR	3268529	Symbol	mean		3266385						
ANR	3268530	Symbol	& my		3266385						
ANR	3268531	Symbol	* s		3266385						
