command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1101916	File	/home/p4ultr4n/workplace/ReVeal/raw_code/bmp_decode_frame_02_1.c								
ANR	1101917	Function	bmp_decode_frame	1:0:0:5301							
ANR	1101918	FunctionDef	"bmp_decode_frame (AVCodecContext * avctx , void * data , int * data_size , uint8_t * buf , int buf_size)"		1101917	0					
ANR	1101919	CompoundStatement		7:0:166:5301	1101917	0					
ANR	1101920	IdentifierDeclStatement	BMPContext * s = avctx -> priv_data ;	9:4:173:205	1101917	0	True				
ANR	1101921	IdentifierDecl	* s = avctx -> priv_data		1101917	0					
ANR	1101922	IdentifierDeclType	BMPContext *		1101917	0					
ANR	1101923	Identifier	s		1101917	1					
ANR	1101924	AssignmentExpression	* s = avctx -> priv_data		1101917	2		=			
ANR	1101925	Identifier	s		1101917	0					
ANR	1101926	PtrMemberAccess	avctx -> priv_data		1101917	1					
ANR	1101927	Identifier	avctx		1101917	0					
ANR	1101928	Identifier	priv_data		1101917	1					
ANR	1101929	IdentifierDeclStatement	AVFrame * picture = data ;	11:4:212:235	1101917	1	True				
ANR	1101930	IdentifierDecl	* picture = data		1101917	0					
ANR	1101931	IdentifierDeclType	AVFrame *		1101917	0					
ANR	1101932	Identifier	picture		1101917	1					
ANR	1101933	AssignmentExpression	* picture = data		1101917	2		=			
ANR	1101934	Identifier	data		1101917	0					
ANR	1101935	Identifier	data		1101917	1					
ANR	1101936	IdentifierDeclStatement	AVFrame * p = & s -> picture ;	13:4:242:266	1101917	2	True				
ANR	1101937	IdentifierDecl	* p = & s -> picture		1101917	0					
ANR	1101938	IdentifierDeclType	AVFrame *		1101917	0					
ANR	1101939	Identifier	p		1101917	1					
ANR	1101940	AssignmentExpression	* p = & s -> picture		1101917	2		=			
ANR	1101941	Identifier	p		1101917	0					
ANR	1101942	UnaryOperationExpression	& s -> picture		1101917	1					
ANR	1101943	UnaryOperator	&		1101917	0					
ANR	1101944	PtrMemberAccess	s -> picture		1101917	1					
ANR	1101945	Identifier	s		1101917	0					
ANR	1101946	Identifier	picture		1101917	1					
ANR	1101947	IdentifierDeclStatement	"unsigned int fsize , hsize ;"	15:4:273:298	1101917	3	True				
ANR	1101948	IdentifierDecl	fsize		1101917	0					
ANR	1101949	IdentifierDeclType	unsigned int		1101917	0					
ANR	1101950	Identifier	fsize		1101917	1					
ANR	1101951	IdentifierDecl	hsize		1101917	1					
ANR	1101952	IdentifierDeclType	unsigned int		1101917	0					
ANR	1101953	Identifier	hsize		1101917	1					
ANR	1101954	IdentifierDeclStatement	"int width , height ;"	17:4:305:322	1101917	4	True				
ANR	1101955	IdentifierDecl	width		1101917	0					
ANR	1101956	IdentifierDeclType	int		1101917	0					
ANR	1101957	Identifier	width		1101917	1					
ANR	1101958	IdentifierDecl	height		1101917	1					
ANR	1101959	IdentifierDeclType	int		1101917	0					
ANR	1101960	Identifier	height		1101917	1					
ANR	1101961	IdentifierDeclStatement	unsigned int depth ;	19:4:329:347	1101917	5	True				
ANR	1101962	IdentifierDecl	depth		1101917	0					
ANR	1101963	IdentifierDeclType	unsigned int		1101917	0					
ANR	1101964	Identifier	depth		1101917	1					
ANR	1101965	IdentifierDeclStatement	BiCompression comp ;	21:4:354:372	1101917	6	True				
ANR	1101966	IdentifierDecl	comp		1101917	0					
ANR	1101967	IdentifierDeclType	BiCompression		1101917	0					
ANR	1101968	Identifier	comp		1101917	1					
ANR	1101969	IdentifierDeclStatement	unsigned int ihsize ;	23:4:379:398	1101917	7	True				
ANR	1101970	IdentifierDecl	ihsize		1101917	0					
ANR	1101971	IdentifierDeclType	unsigned int		1101917	0					
ANR	1101972	Identifier	ihsize		1101917	1					
ANR	1101973	IdentifierDeclStatement	"int i , j , n , linesize ;"	25:4:405:426	1101917	8	True				
ANR	1101974	IdentifierDecl	i		1101917	0					
ANR	1101975	IdentifierDeclType	int		1101917	0					
ANR	1101976	Identifier	i		1101917	1					
ANR	1101977	IdentifierDecl	j		1101917	1					
ANR	1101978	IdentifierDeclType	int		1101917	0					
ANR	1101979	Identifier	j		1101917	1					
ANR	1101980	IdentifierDecl	n		1101917	2					
ANR	1101981	IdentifierDeclType	int		1101917	0					
ANR	1101982	Identifier	n		1101917	1					
ANR	1101983	IdentifierDecl	linesize		1101917	3					
ANR	1101984	IdentifierDeclType	int		1101917	0					
ANR	1101985	Identifier	linesize		1101917	1					
ANR	1101986	IdentifierDeclStatement	uint32_t rgb [ 3 ] ;	27:4:433:448	1101917	9	True				
ANR	1101987	IdentifierDecl	rgb [ 3 ]		1101917	0					
ANR	1101988	IdentifierDeclType	uint32_t [ 3 ]		1101917	0					
ANR	1101989	Identifier	rgb		1101917	1					
ANR	1101990	PrimaryExpression	3		1101917	2					
ANR	1101991	IdentifierDeclStatement	uint8_t * ptr ;	29:4:455:467	1101917	10	True				
ANR	1101992	IdentifierDecl	* ptr		1101917	0					
ANR	1101993	IdentifierDeclType	uint8_t *		1101917	0					
ANR	1101994	Identifier	ptr		1101917	1					
ANR	1101995	IdentifierDeclStatement	int dsize ;	31:4:474:483	1101917	11	True				
ANR	1101996	IdentifierDecl	dsize		1101917	0					
ANR	1101997	IdentifierDeclType	int		1101917	0					
ANR	1101998	Identifier	dsize		1101917	1					
ANR	1101999	IdentifierDeclStatement	uint8_t * buf0 = buf ;	33:4:490:509	1101917	12	True				
ANR	1102000	IdentifierDecl	* buf0 = buf		1101917	0					
ANR	1102001	IdentifierDeclType	uint8_t *		1101917	0					
ANR	1102002	Identifier	buf0		1101917	1					
ANR	1102003	AssignmentExpression	* buf0 = buf		1101917	2		=			
ANR	1102004	Identifier	buf		1101917	0					
ANR	1102005	Identifier	buf		1101917	1					
ANR	1102006	IfStatement	if ( buf_size < 14 )		1101917	13					
ANR	1102007	Condition	buf_size < 14	37:7:521:533	1101917	0	True				
ANR	1102008	RelationalExpression	buf_size < 14		1101917	0		<			
ANR	1102009	Identifier	buf_size		1101917	0					
ANR	1102010	PrimaryExpression	14		1101917	1					
ANR	1102011	CompoundStatement		31:21:368:368	1101917	1					
ANR	1102012	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""buf size too small (%d)\\n"" , buf_size )"	39:8:546:612	1101917	0	True				
ANR	1102013	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""buf size too small (%d)\\n"" , buf_size )"		1101917	0					
ANR	1102014	Callee	av_log		1101917	0					
ANR	1102015	Identifier	av_log		1101917	0					
ANR	1102016	ArgumentList	avctx		1101917	1					
ANR	1102017	Argument	avctx		1101917	0					
ANR	1102018	Identifier	avctx		1101917	0					
ANR	1102019	Argument	AV_LOG_ERROR		1101917	1					
ANR	1102020	Identifier	AV_LOG_ERROR		1101917	0					
ANR	1102021	Argument	"""buf size too small (%d)\\n"""		1101917	2					
ANR	1102022	PrimaryExpression	"""buf size too small (%d)\\n"""		1101917	0					
ANR	1102023	Argument	buf_size		1101917	3					
ANR	1102024	Identifier	buf_size		1101917	0					
ANR	1102025	ReturnStatement	return - 1 ;	41:8:623:632	1101917	1	True				
ANR	1102026	UnaryOperationExpression	- 1		1101917	0					
ANR	1102027	UnaryOperator	-		1101917	0					
ANR	1102028	PrimaryExpression	1		1101917	1					
ANR	1102029	IfStatement	if ( bytestream_get_byte ( & buf ) != 'B' || bytestream_get_byte ( & buf ) != 'M' )		1101917	14					
ANR	1102030	Condition	bytestream_get_byte ( & buf ) != 'B' || bytestream_get_byte ( & buf ) != 'M'	47:7:651:726	1101917	0	True				
ANR	1102031	OrExpression	bytestream_get_byte ( & buf ) != 'B' || bytestream_get_byte ( & buf ) != 'M'		1101917	0		||			
ANR	1102032	EqualityExpression	bytestream_get_byte ( & buf ) != 'B'		1101917	0		!=			
ANR	1102033	CallExpression	bytestream_get_byte ( & buf )		1101917	0					
ANR	1102034	Callee	bytestream_get_byte		1101917	0					
ANR	1102035	Identifier	bytestream_get_byte		1101917	0					
ANR	1102036	ArgumentList	& buf		1101917	1					
ANR	1102037	Argument	& buf		1101917	0					
ANR	1102038	UnaryOperationExpression	& buf		1101917	0					
ANR	1102039	UnaryOperator	&		1101917	0					
ANR	1102040	Identifier	buf		1101917	1					
ANR	1102041	PrimaryExpression	'B'		1101917	1					
ANR	1102042	EqualityExpression	bytestream_get_byte ( & buf ) != 'M'		1101917	1		!=			
ANR	1102043	CallExpression	bytestream_get_byte ( & buf )		1101917	0					
ANR	1102044	Callee	bytestream_get_byte		1101917	0					
ANR	1102045	Identifier	bytestream_get_byte		1101917	0					
ANR	1102046	ArgumentList	& buf		1101917	1					
ANR	1102047	Argument	& buf		1101917	0					
ANR	1102048	UnaryOperationExpression	& buf		1101917	0					
ANR	1102049	UnaryOperator	&		1101917	0					
ANR	1102050	Identifier	buf		1101917	1					
ANR	1102051	PrimaryExpression	'M'		1101917	1					
ANR	1102052	CompoundStatement		43:41:562:562	1101917	1					
ANR	1102053	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""bad magic number\\n"" )"	51:8:740:789	1101917	0	True				
ANR	1102054	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""bad magic number\\n"" )"		1101917	0					
ANR	1102055	Callee	av_log		1101917	0					
ANR	1102056	Identifier	av_log		1101917	0					
ANR	1102057	ArgumentList	avctx		1101917	1					
ANR	1102058	Argument	avctx		1101917	0					
ANR	1102059	Identifier	avctx		1101917	0					
ANR	1102060	Argument	AV_LOG_ERROR		1101917	1					
ANR	1102061	Identifier	AV_LOG_ERROR		1101917	0					
ANR	1102062	Argument	"""bad magic number\\n"""		1101917	2					
ANR	1102063	PrimaryExpression	"""bad magic number\\n"""		1101917	0					
ANR	1102064	ReturnStatement	return - 1 ;	53:8:800:809	1101917	1	True				
ANR	1102065	UnaryOperationExpression	- 1		1101917	0					
ANR	1102066	UnaryOperator	-		1101917	0					
ANR	1102067	PrimaryExpression	1		1101917	1					
ANR	1102068	ExpressionStatement	fsize = bytestream_get_le32 ( & buf )	59:4:825:858	1101917	15	True				
ANR	1102069	AssignmentExpression	fsize = bytestream_get_le32 ( & buf )		1101917	0		=			
ANR	1102070	Identifier	fsize		1101917	0					
ANR	1102071	CallExpression	bytestream_get_le32 ( & buf )		1101917	1					
ANR	1102072	Callee	bytestream_get_le32		1101917	0					
ANR	1102073	Identifier	bytestream_get_le32		1101917	0					
ANR	1102074	ArgumentList	& buf		1101917	1					
ANR	1102075	Argument	& buf		1101917	0					
ANR	1102076	UnaryOperationExpression	& buf		1101917	0					
ANR	1102077	UnaryOperator	&		1101917	0					
ANR	1102078	Identifier	buf		1101917	1					
ANR	1102079	IfStatement	if ( buf_size < fsize )		1101917	16					
ANR	1102080	Condition	buf_size < fsize	61:7:868:883	1101917	0	True				
ANR	1102081	RelationalExpression	buf_size < fsize		1101917	0		<			
ANR	1102082	Identifier	buf_size		1101917	0					
ANR	1102083	Identifier	fsize		1101917	1					
ANR	1102084	CompoundStatement		55:24:718:718	1101917	1					
ANR	1102085	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""not enough data (%d < %d)\\n"" , buf_size , fsize )"	63:8:896:987	1101917	0	True				
ANR	1102086	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""not enough data (%d < %d)\\n"" , buf_size , fsize )"		1101917	0					
ANR	1102087	Callee	av_log		1101917	0					
ANR	1102088	Identifier	av_log		1101917	0					
ANR	1102089	ArgumentList	avctx		1101917	1					
ANR	1102090	Argument	avctx		1101917	0					
ANR	1102091	Identifier	avctx		1101917	0					
ANR	1102092	Argument	AV_LOG_ERROR		1101917	1					
ANR	1102093	Identifier	AV_LOG_ERROR		1101917	0					
ANR	1102094	Argument	"""not enough data (%d < %d)\\n"""		1101917	2					
ANR	1102095	PrimaryExpression	"""not enough data (%d < %d)\\n"""		1101917	0					
ANR	1102096	Argument	buf_size		1101917	3					
ANR	1102097	Identifier	buf_size		1101917	0					
ANR	1102098	Argument	fsize		1101917	4					
ANR	1102099	Identifier	fsize		1101917	0					
ANR	1102100	ReturnStatement	return - 1 ;	67:8:998:1007	1101917	1	True				
ANR	1102101	UnaryOperationExpression	- 1		1101917	0					
ANR	1102102	UnaryOperator	-		1101917	0					
ANR	1102103	PrimaryExpression	1		1101917	1					
ANR	1102104	ExpressionStatement	buf += 2	73:4:1023:1031	1101917	17	True				
ANR	1102105	AssignmentExpression	buf += 2		1101917	0		+=			
ANR	1102106	Identifier	buf		1101917	0					
ANR	1102107	PrimaryExpression	2		1101917	1					
ANR	1102108	ExpressionStatement	buf += 2	75:4:1054:1062	1101917	18	True				
ANR	1102109	AssignmentExpression	buf += 2		1101917	0		+=			
ANR	1102110	Identifier	buf		1101917	0					
ANR	1102111	PrimaryExpression	2		1101917	1					
ANR	1102112	ExpressionStatement	hsize = bytestream_get_le32 ( & buf )	79:4:1087:1120	1101917	19	True				
ANR	1102113	AssignmentExpression	hsize = bytestream_get_le32 ( & buf )		1101917	0		=			
ANR	1102114	Identifier	hsize		1101917	0					
ANR	1102115	CallExpression	bytestream_get_le32 ( & buf )		1101917	1					
ANR	1102116	Callee	bytestream_get_le32		1101917	0					
ANR	1102117	Identifier	bytestream_get_le32		1101917	0					
ANR	1102118	ArgumentList	& buf		1101917	1					
ANR	1102119	Argument	& buf		1101917	0					
ANR	1102120	UnaryOperationExpression	& buf		1101917	0					
ANR	1102121	UnaryOperator	&		1101917	0					
ANR	1102122	Identifier	buf		1101917	1					
ANR	1102123	IfStatement	if ( fsize <= hsize )		1101917	20					
ANR	1102124	Condition	fsize <= hsize	81:7:1148:1161	1101917	0	True				
ANR	1102125	RelationalExpression	fsize <= hsize		1101917	0		<=			
ANR	1102126	Identifier	fsize		1101917	0					
ANR	1102127	Identifier	hsize		1101917	1					
ANR	1102128	CompoundStatement		75:22:996:996	1101917	1					
ANR	1102129	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""not enough data (%d < %d)\\n"" , fsize , hsize )"	83:8:1174:1262	1101917	0	True				
ANR	1102130	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""not enough data (%d < %d)\\n"" , fsize , hsize )"		1101917	0					
ANR	1102131	Callee	av_log		1101917	0					
ANR	1102132	Identifier	av_log		1101917	0					
ANR	1102133	ArgumentList	avctx		1101917	1					
ANR	1102134	Argument	avctx		1101917	0					
ANR	1102135	Identifier	avctx		1101917	0					
ANR	1102136	Argument	AV_LOG_ERROR		1101917	1					
ANR	1102137	Identifier	AV_LOG_ERROR		1101917	0					
ANR	1102138	Argument	"""not enough data (%d < %d)\\n"""		1101917	2					
ANR	1102139	PrimaryExpression	"""not enough data (%d < %d)\\n"""		1101917	0					
ANR	1102140	Argument	fsize		1101917	3					
ANR	1102141	Identifier	fsize		1101917	0					
ANR	1102142	Argument	hsize		1101917	4					
ANR	1102143	Identifier	hsize		1101917	0					
ANR	1102144	ReturnStatement	return - 1 ;	87:8:1273:1282	1101917	1	True				
ANR	1102145	UnaryOperationExpression	- 1		1101917	0					
ANR	1102146	UnaryOperator	-		1101917	0					
ANR	1102147	PrimaryExpression	1		1101917	1					
ANR	1102148	ExpressionStatement	ihsize = bytestream_get_le32 ( & buf )	93:4:1298:1332	1101917	21	True				
ANR	1102149	AssignmentExpression	ihsize = bytestream_get_le32 ( & buf )		1101917	0		=			
ANR	1102150	Identifier	ihsize		1101917	0					
ANR	1102151	CallExpression	bytestream_get_le32 ( & buf )		1101917	1					
ANR	1102152	Callee	bytestream_get_le32		1101917	0					
ANR	1102153	Identifier	bytestream_get_le32		1101917	0					
ANR	1102154	ArgumentList	& buf		1101917	1					
ANR	1102155	Argument	& buf		1101917	0					
ANR	1102156	UnaryOperationExpression	& buf		1101917	0					
ANR	1102157	UnaryOperator	&		1101917	0					
ANR	1102158	Identifier	buf		1101917	1					
ANR	1102159	IfStatement	if ( ihsize + 14 > hsize )		1101917	22					
ANR	1102160	Condition	ihsize + 14 > hsize	95:7:1371:1389	1101917	0	True				
ANR	1102161	RelationalExpression	ihsize + 14 > hsize		1101917	0		>			
ANR	1102162	AdditiveExpression	ihsize + 14		1101917	0		+			
ANR	1102163	Identifier	ihsize		1101917	0					
ANR	1102164	PrimaryExpression	14		1101917	1					
ANR	1102165	Identifier	hsize		1101917	1					
ANR	1102166	CompoundStatement		89:27:1224:1224	1101917	1					
ANR	1102167	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""invalid header size %d\\n"" , hsize )"	97:8:1402:1464	1101917	0	True				
ANR	1102168	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""invalid header size %d\\n"" , hsize )"		1101917	0					
ANR	1102169	Callee	av_log		1101917	0					
ANR	1102170	Identifier	av_log		1101917	0					
ANR	1102171	ArgumentList	avctx		1101917	1					
ANR	1102172	Argument	avctx		1101917	0					
ANR	1102173	Identifier	avctx		1101917	0					
ANR	1102174	Argument	AV_LOG_ERROR		1101917	1					
ANR	1102175	Identifier	AV_LOG_ERROR		1101917	0					
ANR	1102176	Argument	"""invalid header size %d\\n"""		1101917	2					
ANR	1102177	PrimaryExpression	"""invalid header size %d\\n"""		1101917	0					
ANR	1102178	Argument	hsize		1101917	3					
ANR	1102179	Identifier	hsize		1101917	0					
ANR	1102180	ReturnStatement	return - 1 ;	99:8:1475:1484	1101917	1	True				
ANR	1102181	UnaryOperationExpression	- 1		1101917	0					
ANR	1102182	UnaryOperator	-		1101917	0					
ANR	1102183	PrimaryExpression	1		1101917	1					
ANR	1102184	ExpressionStatement	width = bytestream_get_le32 ( & buf )	105:4:1500:1533	1101917	23	True				
ANR	1102185	AssignmentExpression	width = bytestream_get_le32 ( & buf )		1101917	0		=			
ANR	1102186	Identifier	width		1101917	0					
ANR	1102187	CallExpression	bytestream_get_le32 ( & buf )		1101917	1					
ANR	1102188	Callee	bytestream_get_le32		1101917	0					
ANR	1102189	Identifier	bytestream_get_le32		1101917	0					
ANR	1102190	ArgumentList	& buf		1101917	1					
ANR	1102191	Argument	& buf		1101917	0					
ANR	1102192	UnaryOperationExpression	& buf		1101917	0					
ANR	1102193	UnaryOperator	&		1101917	0					
ANR	1102194	Identifier	buf		1101917	1					
ANR	1102195	ExpressionStatement	height = bytestream_get_le32 ( & buf )	107:4:1540:1574	1101917	24	True				
ANR	1102196	AssignmentExpression	height = bytestream_get_le32 ( & buf )		1101917	0		=			
ANR	1102197	Identifier	height		1101917	0					
ANR	1102198	CallExpression	bytestream_get_le32 ( & buf )		1101917	1					
ANR	1102199	Callee	bytestream_get_le32		1101917	0					
ANR	1102200	Identifier	bytestream_get_le32		1101917	0					
ANR	1102201	ArgumentList	& buf		1101917	1					
ANR	1102202	Argument	& buf		1101917	0					
ANR	1102203	UnaryOperationExpression	& buf		1101917	0					
ANR	1102204	UnaryOperator	&		1101917	0					
ANR	1102205	Identifier	buf		1101917	1					
ANR	1102206	IfStatement	if ( bytestream_get_le16 ( & buf ) != 1 )		1101917	25					
ANR	1102207	Condition	bytestream_get_le16 ( & buf ) != 1	111:7:1586:1615	1101917	0	True				
ANR	1102208	EqualityExpression	bytestream_get_le16 ( & buf ) != 1		1101917	0		!=			
ANR	1102209	CallExpression	bytestream_get_le16 ( & buf )		1101917	0					
ANR	1102210	Callee	bytestream_get_le16		1101917	0					
ANR	1102211	Identifier	bytestream_get_le16		1101917	0					
ANR	1102212	ArgumentList	& buf		1101917	1					
ANR	1102213	Argument	& buf		1101917	0					
ANR	1102214	UnaryOperationExpression	& buf		1101917	0					
ANR	1102215	UnaryOperator	&		1101917	0					
ANR	1102216	Identifier	buf		1101917	1					
ANR	1102217	PrimaryExpression	1		1101917	1					
ANR	1102218	CompoundStatement		105:38:1450:1450	1101917	1					
ANR	1102219	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""invalid BMP header\\n"" )"	113:8:1641:1692	1101917	0	True				
ANR	1102220	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""invalid BMP header\\n"" )"		1101917	0					
ANR	1102221	Callee	av_log		1101917	0					
ANR	1102222	Identifier	av_log		1101917	0					
ANR	1102223	ArgumentList	avctx		1101917	1					
ANR	1102224	Argument	avctx		1101917	0					
ANR	1102225	Identifier	avctx		1101917	0					
ANR	1102226	Argument	AV_LOG_ERROR		1101917	1					
ANR	1102227	Identifier	AV_LOG_ERROR		1101917	0					
ANR	1102228	Argument	"""invalid BMP header\\n"""		1101917	2					
ANR	1102229	PrimaryExpression	"""invalid BMP header\\n"""		1101917	0					
ANR	1102230	ReturnStatement	return - 1 ;	115:8:1703:1712	1101917	1	True				
ANR	1102231	UnaryOperationExpression	- 1		1101917	0					
ANR	1102232	UnaryOperator	-		1101917	0					
ANR	1102233	PrimaryExpression	1		1101917	1					
ANR	1102234	ExpressionStatement	depth = bytestream_get_le16 ( & buf )	121:4:1728:1761	1101917	26	True				
ANR	1102235	AssignmentExpression	depth = bytestream_get_le16 ( & buf )		1101917	0		=			
ANR	1102236	Identifier	depth		1101917	0					
ANR	1102237	CallExpression	bytestream_get_le16 ( & buf )		1101917	1					
ANR	1102238	Callee	bytestream_get_le16		1101917	0					
ANR	1102239	Identifier	bytestream_get_le16		1101917	0					
ANR	1102240	ArgumentList	& buf		1101917	1					
ANR	1102241	Argument	& buf		1101917	0					
ANR	1102242	UnaryOperationExpression	& buf		1101917	0					
ANR	1102243	UnaryOperator	&		1101917	0					
ANR	1102244	Identifier	buf		1101917	1					
ANR	1102245	IfStatement	if ( ihsize > 16 )		1101917	27					
ANR	1102246	Condition	ihsize > 16	125:7:1773:1783	1101917	0	True				
ANR	1102247	RelationalExpression	ihsize > 16		1101917	0		>			
ANR	1102248	Identifier	ihsize		1101917	0					
ANR	1102249	PrimaryExpression	16		1101917	1					
ANR	1102250	ExpressionStatement	comp = bytestream_get_le32 ( & buf )	127:8:1795:1827	1101917	1	True				
ANR	1102251	AssignmentExpression	comp = bytestream_get_le32 ( & buf )		1101917	0		=			
ANR	1102252	Identifier	comp		1101917	0					
ANR	1102253	CallExpression	bytestream_get_le32 ( & buf )		1101917	1					
ANR	1102254	Callee	bytestream_get_le32		1101917	0					
ANR	1102255	Identifier	bytestream_get_le32		1101917	0					
ANR	1102256	ArgumentList	& buf		1101917	1					
ANR	1102257	Argument	& buf		1101917	0					
ANR	1102258	UnaryOperationExpression	& buf		1101917	0					
ANR	1102259	UnaryOperator	&		1101917	0					
ANR	1102260	Identifier	buf		1101917	1					
ANR	1102261	ElseStatement	else		1101917	0					
ANR	1102262	ExpressionStatement	comp = BMP_RGB	131:8:1848:1862	1101917	0	True				
ANR	1102263	AssignmentExpression	comp = BMP_RGB		1101917	0		=			
ANR	1102264	Identifier	comp		1101917	0					
ANR	1102265	Identifier	BMP_RGB		1101917	1					
ANR	1102266	IfStatement	if ( comp != BMP_RGB && comp != BMP_BITFIELDS )		1101917	28					
ANR	1102267	Condition	comp != BMP_RGB && comp != BMP_BITFIELDS	135:7:1874:1913	1101917	0	True				
ANR	1102268	AndExpression	comp != BMP_RGB && comp != BMP_BITFIELDS		1101917	0		&&			
ANR	1102269	EqualityExpression	comp != BMP_RGB		1101917	0		!=			
ANR	1102270	Identifier	comp		1101917	0					
ANR	1102271	Identifier	BMP_RGB		1101917	1					
ANR	1102272	EqualityExpression	comp != BMP_BITFIELDS		1101917	1		!=			
ANR	1102273	Identifier	comp		1101917	0					
ANR	1102274	Identifier	BMP_BITFIELDS		1101917	1					
ANR	1102275	CompoundStatement		129:48:1748:1748	1101917	1					
ANR	1102276	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""BMP coding %d not supported\\n"" , comp )"	137:8:1926:1992	1101917	0	True				
ANR	1102277	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""BMP coding %d not supported\\n"" , comp )"		1101917	0					
ANR	1102278	Callee	av_log		1101917	0					
ANR	1102279	Identifier	av_log		1101917	0					
ANR	1102280	ArgumentList	avctx		1101917	1					
ANR	1102281	Argument	avctx		1101917	0					
ANR	1102282	Identifier	avctx		1101917	0					
ANR	1102283	Argument	AV_LOG_ERROR		1101917	1					
ANR	1102284	Identifier	AV_LOG_ERROR		1101917	0					
ANR	1102285	Argument	"""BMP coding %d not supported\\n"""		1101917	2					
ANR	1102286	PrimaryExpression	"""BMP coding %d not supported\\n"""		1101917	0					
ANR	1102287	Argument	comp		1101917	3					
ANR	1102288	Identifier	comp		1101917	0					
ANR	1102289	ReturnStatement	return - 1 ;	139:8:2003:2012	1101917	1	True				
ANR	1102290	UnaryOperationExpression	- 1		1101917	0					
ANR	1102291	UnaryOperator	-		1101917	0					
ANR	1102292	PrimaryExpression	1		1101917	1					
ANR	1102293	IfStatement	if ( comp == BMP_BITFIELDS )		1101917	29					
ANR	1102294	Condition	comp == BMP_BITFIELDS	145:7:2031:2051	1101917	0	True				
ANR	1102295	EqualityExpression	comp == BMP_BITFIELDS		1101917	0		==			
ANR	1102296	Identifier	comp		1101917	0					
ANR	1102297	Identifier	BMP_BITFIELDS		1101917	1					
ANR	1102298	CompoundStatement		139:29:1886:1886	1101917	1					
ANR	1102299	ExpressionStatement	buf += 20	147:8:2064:2073	1101917	0	True				
ANR	1102300	AssignmentExpression	buf += 20		1101917	0		+=			
ANR	1102301	Identifier	buf		1101917	0					
ANR	1102302	PrimaryExpression	20		1101917	1					
ANR	1102303	ExpressionStatement	rgb [ 0 ] = bytestream_get_le32 ( & buf )	149:8:2084:2118	1101917	1	True				
ANR	1102304	AssignmentExpression	rgb [ 0 ] = bytestream_get_le32 ( & buf )		1101917	0		=			
ANR	1102305	ArrayIndexing	rgb [ 0 ]		1101917	0					
ANR	1102306	Identifier	rgb		1101917	0					
ANR	1102307	PrimaryExpression	0		1101917	1					
ANR	1102308	CallExpression	bytestream_get_le32 ( & buf )		1101917	1					
ANR	1102309	Callee	bytestream_get_le32		1101917	0					
ANR	1102310	Identifier	bytestream_get_le32		1101917	0					
ANR	1102311	ArgumentList	& buf		1101917	1					
ANR	1102312	Argument	& buf		1101917	0					
ANR	1102313	UnaryOperationExpression	& buf		1101917	0					
ANR	1102314	UnaryOperator	&		1101917	0					
ANR	1102315	Identifier	buf		1101917	1					
ANR	1102316	ExpressionStatement	rgb [ 1 ] = bytestream_get_le32 ( & buf )	151:8:2129:2163	1101917	2	True				
ANR	1102317	AssignmentExpression	rgb [ 1 ] = bytestream_get_le32 ( & buf )		1101917	0		=			
ANR	1102318	ArrayIndexing	rgb [ 1 ]		1101917	0					
ANR	1102319	Identifier	rgb		1101917	0					
ANR	1102320	PrimaryExpression	1		1101917	1					
ANR	1102321	CallExpression	bytestream_get_le32 ( & buf )		1101917	1					
ANR	1102322	Callee	bytestream_get_le32		1101917	0					
ANR	1102323	Identifier	bytestream_get_le32		1101917	0					
ANR	1102324	ArgumentList	& buf		1101917	1					
ANR	1102325	Argument	& buf		1101917	0					
ANR	1102326	UnaryOperationExpression	& buf		1101917	0					
ANR	1102327	UnaryOperator	&		1101917	0					
ANR	1102328	Identifier	buf		1101917	1					
ANR	1102329	ExpressionStatement	rgb [ 2 ] = bytestream_get_le32 ( & buf )	153:8:2174:2208	1101917	3	True				
ANR	1102330	AssignmentExpression	rgb [ 2 ] = bytestream_get_le32 ( & buf )		1101917	0		=			
ANR	1102331	ArrayIndexing	rgb [ 2 ]		1101917	0					
ANR	1102332	Identifier	rgb		1101917	0					
ANR	1102333	PrimaryExpression	2		1101917	1					
ANR	1102334	CallExpression	bytestream_get_le32 ( & buf )		1101917	1					
ANR	1102335	Callee	bytestream_get_le32		1101917	0					
ANR	1102336	Identifier	bytestream_get_le32		1101917	0					
ANR	1102337	ArgumentList	& buf		1101917	1					
ANR	1102338	Argument	& buf		1101917	0					
ANR	1102339	UnaryOperationExpression	& buf		1101917	0					
ANR	1102340	UnaryOperator	&		1101917	0					
ANR	1102341	Identifier	buf		1101917	1					
ANR	1102342	ExpressionStatement	avctx -> codec_id = CODEC_ID_BMP	159:4:2224:2254	1101917	30	True				
ANR	1102343	AssignmentExpression	avctx -> codec_id = CODEC_ID_BMP		1101917	0		=			
ANR	1102344	PtrMemberAccess	avctx -> codec_id		1101917	0					
ANR	1102345	Identifier	avctx		1101917	0					
ANR	1102346	Identifier	codec_id		1101917	1					
ANR	1102347	Identifier	CODEC_ID_BMP		1101917	1					
ANR	1102348	ExpressionStatement	avctx -> width = width	161:4:2261:2281	1101917	31	True				
ANR	1102349	AssignmentExpression	avctx -> width = width		1101917	0		=			
ANR	1102350	PtrMemberAccess	avctx -> width		1101917	0					
ANR	1102351	Identifier	avctx		1101917	0					
ANR	1102352	Identifier	width		1101917	1					
ANR	1102353	Identifier	width		1101917	1					
ANR	1102354	ExpressionStatement	avctx -> height = height > 0 ? height : - height	163:4:2288:2331	1101917	32	True				
ANR	1102355	AssignmentExpression	avctx -> height = height > 0 ? height : - height		1101917	0		=			
ANR	1102356	PtrMemberAccess	avctx -> height		1101917	0					
ANR	1102357	Identifier	avctx		1101917	0					
ANR	1102358	Identifier	height		1101917	1					
ANR	1102359	ConditionalExpression	height > 0 ? height : - height		1101917	1					
ANR	1102360	Condition	height > 0		1101917	0					
ANR	1102361	RelationalExpression	height > 0		1101917	0		>			
ANR	1102362	Identifier	height		1101917	0					
ANR	1102363	PrimaryExpression	0		1101917	1					
ANR	1102364	Identifier	height		1101917	1					
ANR	1102365	UnaryOperationExpression	- height		1101917	2					
ANR	1102366	UnaryOperator	-		1101917	0					
ANR	1102367	Identifier	height		1101917	1					
ANR	1102368	ExpressionStatement	avctx -> pix_fmt = PIX_FMT_NONE	167:4:2340:2369	1101917	33	True				
ANR	1102369	AssignmentExpression	avctx -> pix_fmt = PIX_FMT_NONE		1101917	0		=			
ANR	1102370	PtrMemberAccess	avctx -> pix_fmt		1101917	0					
ANR	1102371	Identifier	avctx		1101917	0					
ANR	1102372	Identifier	pix_fmt		1101917	1					
ANR	1102373	Identifier	PIX_FMT_NONE		1101917	1					
ANR	1102374	SwitchStatement	switch ( depth )		1101917	34					
ANR	1102375	Condition	depth	171:11:2385:2389	1101917	0	True				
ANR	1102376	Identifier	depth		1101917	0					
ANR	1102377	CompoundStatement		165:17:2224:2224	1101917	1					
ANR	1102378	Label	case 32 :	173:4:2398:2405	1101917	0	True				
ANR	1102379	IfStatement	if ( comp == BMP_BITFIELDS )		1101917	1					
ANR	1102380	Condition	comp == BMP_BITFIELDS	175:11:2419:2439	1101917	0	True				
ANR	1102381	EqualityExpression	comp == BMP_BITFIELDS		1101917	0		==			
ANR	1102382	Identifier	comp		1101917	0					
ANR	1102383	Identifier	BMP_BITFIELDS		1101917	1					
ANR	1102384	CompoundStatement		169:33:2274:2274	1101917	1					
ANR	1102385	ExpressionStatement	rgb [ 0 ] = ( rgb [ 0 ] >> 15 ) & 3	177:12:2456:2483	1101917	0	True				
ANR	1102386	AssignmentExpression	rgb [ 0 ] = ( rgb [ 0 ] >> 15 ) & 3		1101917	0		=			
ANR	1102387	ArrayIndexing	rgb [ 0 ]		1101917	0					
ANR	1102388	Identifier	rgb		1101917	0					
ANR	1102389	PrimaryExpression	0		1101917	1					
ANR	1102390	BitAndExpression	( rgb [ 0 ] >> 15 ) & 3		1101917	1		&			
ANR	1102391	ShiftExpression	rgb [ 0 ] >> 15		1101917	0		>>			
ANR	1102392	ArrayIndexing	rgb [ 0 ]		1101917	0					
ANR	1102393	Identifier	rgb		1101917	0					
ANR	1102394	PrimaryExpression	0		1101917	1					
ANR	1102395	PrimaryExpression	15		1101917	1					
ANR	1102396	PrimaryExpression	3		1101917	1					
ANR	1102397	ExpressionStatement	rgb [ 1 ] = ( rgb [ 1 ] >> 15 ) & 3	179:12:2498:2525	1101917	1	True				
ANR	1102398	AssignmentExpression	rgb [ 1 ] = ( rgb [ 1 ] >> 15 ) & 3		1101917	0		=			
ANR	1102399	ArrayIndexing	rgb [ 1 ]		1101917	0					
ANR	1102400	Identifier	rgb		1101917	0					
ANR	1102401	PrimaryExpression	1		1101917	1					
ANR	1102402	BitAndExpression	( rgb [ 1 ] >> 15 ) & 3		1101917	1		&			
ANR	1102403	ShiftExpression	rgb [ 1 ] >> 15		1101917	0		>>			
ANR	1102404	ArrayIndexing	rgb [ 1 ]		1101917	0					
ANR	1102405	Identifier	rgb		1101917	0					
ANR	1102406	PrimaryExpression	1		1101917	1					
ANR	1102407	PrimaryExpression	15		1101917	1					
ANR	1102408	PrimaryExpression	3		1101917	1					
ANR	1102409	ExpressionStatement	rgb [ 2 ] = ( rgb [ 2 ] >> 15 ) & 3	181:12:2540:2567	1101917	2	True				
ANR	1102410	AssignmentExpression	rgb [ 2 ] = ( rgb [ 2 ] >> 15 ) & 3		1101917	0		=			
ANR	1102411	ArrayIndexing	rgb [ 2 ]		1101917	0					
ANR	1102412	Identifier	rgb		1101917	0					
ANR	1102413	PrimaryExpression	2		1101917	1					
ANR	1102414	BitAndExpression	( rgb [ 2 ] >> 15 ) & 3		1101917	1		&			
ANR	1102415	ShiftExpression	rgb [ 2 ] >> 15		1101917	0		>>			
ANR	1102416	ArrayIndexing	rgb [ 2 ]		1101917	0					
ANR	1102417	Identifier	rgb		1101917	0					
ANR	1102418	PrimaryExpression	2		1101917	1					
ANR	1102419	PrimaryExpression	15		1101917	1					
ANR	1102420	PrimaryExpression	3		1101917	1					
ANR	1102421	IfStatement	if ( rgb [ 0 ] + rgb [ 1 ] + rgb [ 2 ] != 3 || rgb [ 0 ] == rgb [ 1 ] || rgb [ 0 ] == rgb [ 2 ] || rgb [ 1 ] == rgb [ 2 ] )		1101917	3					
ANR	1102422	Condition	rgb [ 0 ] + rgb [ 1 ] + rgb [ 2 ] != 3 || rgb [ 0 ] == rgb [ 1 ] || rgb [ 0 ] == rgb [ 2 ] || rgb [ 1 ] == rgb [ 2 ]	185:15:2587:2691	1101917	0	True				
ANR	1102423	OrExpression	rgb [ 0 ] + rgb [ 1 ] + rgb [ 2 ] != 3 || rgb [ 0 ] == rgb [ 1 ] || rgb [ 0 ] == rgb [ 2 ] || rgb [ 1 ] == rgb [ 2 ]		1101917	0		||			
ANR	1102424	EqualityExpression	rgb [ 0 ] + rgb [ 1 ] + rgb [ 2 ] != 3		1101917	0		!=			
ANR	1102425	AdditiveExpression	rgb [ 0 ] + rgb [ 1 ] + rgb [ 2 ]		1101917	0		+			
ANR	1102426	ArrayIndexing	rgb [ 0 ]		1101917	0					
ANR	1102427	Identifier	rgb		1101917	0					
ANR	1102428	PrimaryExpression	0		1101917	1					
ANR	1102429	AdditiveExpression	rgb [ 1 ] + rgb [ 2 ]		1101917	1		+			
ANR	1102430	ArrayIndexing	rgb [ 1 ]		1101917	0					
ANR	1102431	Identifier	rgb		1101917	0					
ANR	1102432	PrimaryExpression	1		1101917	1					
ANR	1102433	ArrayIndexing	rgb [ 2 ]		1101917	1					
ANR	1102434	Identifier	rgb		1101917	0					
ANR	1102435	PrimaryExpression	2		1101917	1					
ANR	1102436	PrimaryExpression	3		1101917	1					
ANR	1102437	OrExpression	rgb [ 0 ] == rgb [ 1 ] || rgb [ 0 ] == rgb [ 2 ] || rgb [ 1 ] == rgb [ 2 ]		1101917	1		||			
ANR	1102438	EqualityExpression	rgb [ 0 ] == rgb [ 1 ]		1101917	0		==			
ANR	1102439	ArrayIndexing	rgb [ 0 ]		1101917	0					
ANR	1102440	Identifier	rgb		1101917	0					
ANR	1102441	PrimaryExpression	0		1101917	1					
ANR	1102442	ArrayIndexing	rgb [ 1 ]		1101917	1					
ANR	1102443	Identifier	rgb		1101917	0					
ANR	1102444	PrimaryExpression	1		1101917	1					
ANR	1102445	OrExpression	rgb [ 0 ] == rgb [ 2 ] || rgb [ 1 ] == rgb [ 2 ]		1101917	1		||			
ANR	1102446	EqualityExpression	rgb [ 0 ] == rgb [ 2 ]		1101917	0		==			
ANR	1102447	ArrayIndexing	rgb [ 0 ]		1101917	0					
ANR	1102448	Identifier	rgb		1101917	0					
ANR	1102449	PrimaryExpression	0		1101917	1					
ANR	1102450	ArrayIndexing	rgb [ 2 ]		1101917	1					
ANR	1102451	Identifier	rgb		1101917	0					
ANR	1102452	PrimaryExpression	2		1101917	1					
ANR	1102453	EqualityExpression	rgb [ 1 ] == rgb [ 2 ]		1101917	1		==			
ANR	1102454	ArrayIndexing	rgb [ 1 ]		1101917	0					
ANR	1102455	Identifier	rgb		1101917	0					
ANR	1102456	PrimaryExpression	1		1101917	1					
ANR	1102457	ArrayIndexing	rgb [ 2 ]		1101917	1					
ANR	1102458	Identifier	rgb		1101917	0					
ANR	1102459	PrimaryExpression	2		1101917	1					
ANR	1102460	CompoundStatement		181:72:2526:2526	1101917	1					
ANR	1102461	BreakStatement	break ;	189:16:2712:2717	1101917	0	True				
ANR	1102462	ElseStatement	else		1101917	0					
ANR	1102463	CompoundStatement		187:15:2583:2583	1101917	0					
ANR	1102464	ExpressionStatement	rgb [ 0 ] = 2	195:12:2765:2775	1101917	0	True				
ANR	1102465	AssignmentExpression	rgb [ 0 ] = 2		1101917	0		=			
ANR	1102466	ArrayIndexing	rgb [ 0 ]		1101917	0					
ANR	1102467	Identifier	rgb		1101917	0					
ANR	1102468	PrimaryExpression	0		1101917	1					
ANR	1102469	PrimaryExpression	2		1101917	1					
ANR	1102470	ExpressionStatement	rgb [ 1 ] = 1	197:12:2790:2800	1101917	1	True				
ANR	1102471	AssignmentExpression	rgb [ 1 ] = 1		1101917	0		=			
ANR	1102472	ArrayIndexing	rgb [ 1 ]		1101917	0					
ANR	1102473	Identifier	rgb		1101917	0					
ANR	1102474	PrimaryExpression	1		1101917	1					
ANR	1102475	PrimaryExpression	1		1101917	1					
ANR	1102476	ExpressionStatement	rgb [ 2 ] = 0	199:12:2815:2825	1101917	2	True				
ANR	1102477	AssignmentExpression	rgb [ 2 ] = 0		1101917	0		=			
ANR	1102478	ArrayIndexing	rgb [ 2 ]		1101917	0					
ANR	1102479	Identifier	rgb		1101917	0					
ANR	1102480	PrimaryExpression	2		1101917	1					
ANR	1102481	PrimaryExpression	0		1101917	1					
ANR	1102482	ExpressionStatement	avctx -> pix_fmt = PIX_FMT_BGR24	205:8:2849:2879	1101917	2	True				
ANR	1102483	AssignmentExpression	avctx -> pix_fmt = PIX_FMT_BGR24		1101917	0		=			
ANR	1102484	PtrMemberAccess	avctx -> pix_fmt		1101917	0					
ANR	1102485	Identifier	avctx		1101917	0					
ANR	1102486	Identifier	pix_fmt		1101917	1					
ANR	1102487	Identifier	PIX_FMT_BGR24		1101917	1					
ANR	1102488	BreakStatement	break ;	207:8:2890:2895	1101917	3	True				
ANR	1102489	Label	case 24 :	209:4:2902:2909	1101917	4	True				
ANR	1102490	ExpressionStatement	avctx -> pix_fmt = PIX_FMT_BGR24	211:8:2920:2950	1101917	5	True				
ANR	1102491	AssignmentExpression	avctx -> pix_fmt = PIX_FMT_BGR24		1101917	0		=			
ANR	1102492	PtrMemberAccess	avctx -> pix_fmt		1101917	0					
ANR	1102493	Identifier	avctx		1101917	0					
ANR	1102494	Identifier	pix_fmt		1101917	1					
ANR	1102495	Identifier	PIX_FMT_BGR24		1101917	1					
ANR	1102496	BreakStatement	break ;	213:8:2961:2966	1101917	6	True				
ANR	1102497	Label	case 16 :	215:4:2973:2980	1101917	7	True				
ANR	1102498	IfStatement	if ( comp == BMP_RGB )		1101917	8					
ANR	1102499	Condition	comp == BMP_RGB	217:11:2994:3008	1101917	0	True				
ANR	1102500	EqualityExpression	comp == BMP_RGB		1101917	0		==			
ANR	1102501	Identifier	comp		1101917	0					
ANR	1102502	Identifier	BMP_RGB		1101917	1					
ANR	1102503	ExpressionStatement	avctx -> pix_fmt = PIX_FMT_RGB555	219:12:3024:3055	1101917	1	True				
ANR	1102504	AssignmentExpression	avctx -> pix_fmt = PIX_FMT_RGB555		1101917	0		=			
ANR	1102505	PtrMemberAccess	avctx -> pix_fmt		1101917	0					
ANR	1102506	Identifier	avctx		1101917	0					
ANR	1102507	Identifier	pix_fmt		1101917	1					
ANR	1102508	Identifier	PIX_FMT_RGB555		1101917	1					
ANR	1102509	BreakStatement	break ;	221:8:3066:3071	1101917	9	True				
ANR	1102510	Label	default :	223:4:3078:3085	1101917	10	True				
ANR	1102511	Identifier	default		1101917	0					
ANR	1102512	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""depth %d not supported\\n"" , depth )"	225:8:3096:3158	1101917	11	True				
ANR	1102513	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""depth %d not supported\\n"" , depth )"		1101917	0					
ANR	1102514	Callee	av_log		1101917	0					
ANR	1102515	Identifier	av_log		1101917	0					
ANR	1102516	ArgumentList	avctx		1101917	1					
ANR	1102517	Argument	avctx		1101917	0					
ANR	1102518	Identifier	avctx		1101917	0					
ANR	1102519	Argument	AV_LOG_ERROR		1101917	1					
ANR	1102520	Identifier	AV_LOG_ERROR		1101917	0					
ANR	1102521	Argument	"""depth %d not supported\\n"""		1101917	2					
ANR	1102522	PrimaryExpression	"""depth %d not supported\\n"""		1101917	0					
ANR	1102523	Argument	depth		1101917	3					
ANR	1102524	Identifier	depth		1101917	0					
ANR	1102525	ReturnStatement	return - 1 ;	227:8:3169:3178	1101917	12	True				
ANR	1102526	UnaryOperationExpression	- 1		1101917	0					
ANR	1102527	UnaryOperator	-		1101917	0					
ANR	1102528	PrimaryExpression	1		1101917	1					
ANR	1102529	IfStatement	if ( avctx -> pix_fmt == PIX_FMT_NONE )		1101917	35					
ANR	1102530	Condition	avctx -> pix_fmt == PIX_FMT_NONE	233:7:3197:3226	1101917	0	True				
ANR	1102531	EqualityExpression	avctx -> pix_fmt == PIX_FMT_NONE		1101917	0		==			
ANR	1102532	PtrMemberAccess	avctx -> pix_fmt		1101917	0					
ANR	1102533	Identifier	avctx		1101917	0					
ANR	1102534	Identifier	pix_fmt		1101917	1					
ANR	1102535	Identifier	PIX_FMT_NONE		1101917	1					
ANR	1102536	CompoundStatement		227:38:3061:3061	1101917	1					
ANR	1102537	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""unsupported pixel format\\n"" )"	235:8:3239:3296	1101917	0	True				
ANR	1102538	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""unsupported pixel format\\n"" )"		1101917	0					
ANR	1102539	Callee	av_log		1101917	0					
ANR	1102540	Identifier	av_log		1101917	0					
ANR	1102541	ArgumentList	avctx		1101917	1					
ANR	1102542	Argument	avctx		1101917	0					
ANR	1102543	Identifier	avctx		1101917	0					
ANR	1102544	Argument	AV_LOG_ERROR		1101917	1					
ANR	1102545	Identifier	AV_LOG_ERROR		1101917	0					
ANR	1102546	Argument	"""unsupported pixel format\\n"""		1101917	2					
ANR	1102547	PrimaryExpression	"""unsupported pixel format\\n"""		1101917	0					
ANR	1102548	ReturnStatement	return - 1 ;	237:8:3307:3316	1101917	1	True				
ANR	1102549	UnaryOperationExpression	- 1		1101917	0					
ANR	1102550	UnaryOperator	-		1101917	0					
ANR	1102551	PrimaryExpression	1		1101917	1					
ANR	1102552	IfStatement	if ( p -> data [ 0 ] )		1101917	36					
ANR	1102553	Condition	p -> data [ 0 ]	243:7:3335:3344	1101917	0	True				
ANR	1102554	ArrayIndexing	p -> data [ 0 ]		1101917	0					
ANR	1102555	PtrMemberAccess	p -> data		1101917	0					
ANR	1102556	Identifier	p		1101917	0					
ANR	1102557	Identifier	data		1101917	1					
ANR	1102558	PrimaryExpression	0		1101917	1					
ANR	1102559	ExpressionStatement	"avctx -> release_buffer ( avctx , p )"	245:8:3356:3387	1101917	1	True				
ANR	1102560	CallExpression	"avctx -> release_buffer ( avctx , p )"		1101917	0					
ANR	1102561	Callee	avctx -> release_buffer		1101917	0					
ANR	1102562	PtrMemberAccess	avctx -> release_buffer		1101917	0					
ANR	1102563	Identifier	avctx		1101917	0					
ANR	1102564	Identifier	release_buffer		1101917	1					
ANR	1102565	ArgumentList	avctx		1101917	1					
ANR	1102566	Argument	avctx		1101917	0					
ANR	1102567	Identifier	avctx		1101917	0					
ANR	1102568	Argument	p		1101917	1					
ANR	1102569	Identifier	p		1101917	0					
ANR	1102570	ExpressionStatement	p -> reference = 0	249:4:3396:3412	1101917	37	True				
ANR	1102571	AssignmentExpression	p -> reference = 0		1101917	0		=			
ANR	1102572	PtrMemberAccess	p -> reference		1101917	0					
ANR	1102573	Identifier	p		1101917	0					
ANR	1102574	Identifier	reference		1101917	1					
ANR	1102575	PrimaryExpression	0		1101917	1					
ANR	1102576	IfStatement	"if ( avctx -> get_buffer ( avctx , p ) < 0 )"		1101917	38					
ANR	1102577	Condition	"avctx -> get_buffer ( avctx , p ) < 0"	251:7:3422:3452	1101917	0	True				
ANR	1102578	RelationalExpression	"avctx -> get_buffer ( avctx , p ) < 0"		1101917	0		<			
ANR	1102579	CallExpression	"avctx -> get_buffer ( avctx , p )"		1101917	0					
ANR	1102580	Callee	avctx -> get_buffer		1101917	0					
ANR	1102581	PtrMemberAccess	avctx -> get_buffer		1101917	0					
ANR	1102582	Identifier	avctx		1101917	0					
ANR	1102583	Identifier	get_buffer		1101917	1					
ANR	1102584	ArgumentList	avctx		1101917	1					
ANR	1102585	Argument	avctx		1101917	0					
ANR	1102586	Identifier	avctx		1101917	0					
ANR	1102587	Argument	p		1101917	1					
ANR	1102588	Identifier	p		1101917	0					
ANR	1102589	PrimaryExpression	0		1101917	1					
ANR	1102590	CompoundStatement		245:39:3287:3287	1101917	1					
ANR	1102591	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""get_buffer() failed\\n"" )"	253:8:3465:3517	1101917	0	True				
ANR	1102592	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""get_buffer() failed\\n"" )"		1101917	0					
ANR	1102593	Callee	av_log		1101917	0					
ANR	1102594	Identifier	av_log		1101917	0					
ANR	1102595	ArgumentList	avctx		1101917	1					
ANR	1102596	Argument	avctx		1101917	0					
ANR	1102597	Identifier	avctx		1101917	0					
ANR	1102598	Argument	AV_LOG_ERROR		1101917	1					
ANR	1102599	Identifier	AV_LOG_ERROR		1101917	0					
ANR	1102600	Argument	"""get_buffer() failed\\n"""		1101917	2					
ANR	1102601	PrimaryExpression	"""get_buffer() failed\\n"""		1101917	0					
ANR	1102602	ReturnStatement	return - 1 ;	255:8:3528:3537	1101917	1	True				
ANR	1102603	UnaryOperationExpression	- 1		1101917	0					
ANR	1102604	UnaryOperator	-		1101917	0					
ANR	1102605	PrimaryExpression	1		1101917	1					
ANR	1102606	ExpressionStatement	p -> pict_type = FF_I_TYPE	259:4:3551:3575	1101917	39	True				
ANR	1102607	AssignmentExpression	p -> pict_type = FF_I_TYPE		1101917	0		=			
ANR	1102608	PtrMemberAccess	p -> pict_type		1101917	0					
ANR	1102609	Identifier	p		1101917	0					
ANR	1102610	Identifier	pict_type		1101917	1					
ANR	1102611	Identifier	FF_I_TYPE		1101917	1					
ANR	1102612	ExpressionStatement	p -> key_frame = 1	261:4:3582:3598	1101917	40	True				
ANR	1102613	AssignmentExpression	p -> key_frame = 1		1101917	0		=			
ANR	1102614	PtrMemberAccess	p -> key_frame		1101917	0					
ANR	1102615	Identifier	p		1101917	0					
ANR	1102616	Identifier	key_frame		1101917	1					
ANR	1102617	PrimaryExpression	1		1101917	1					
ANR	1102618	ExpressionStatement	buf = buf0 + hsize	265:4:3607:3625	1101917	41	True				
ANR	1102619	AssignmentExpression	buf = buf0 + hsize		1101917	0		=			
ANR	1102620	Identifier	buf		1101917	0					
ANR	1102621	AdditiveExpression	buf0 + hsize		1101917	1		+			
ANR	1102622	Identifier	buf0		1101917	0					
ANR	1102623	Identifier	hsize		1101917	1					
ANR	1102624	ExpressionStatement	dsize = buf_size - hsize	267:4:3632:3656	1101917	42	True				
ANR	1102625	AssignmentExpression	dsize = buf_size - hsize		1101917	0		=			
ANR	1102626	Identifier	dsize		1101917	0					
ANR	1102627	AdditiveExpression	buf_size - hsize		1101917	1		-			
ANR	1102628	Identifier	buf_size		1101917	0					
ANR	1102629	Identifier	hsize		1101917	1					
ANR	1102630	ExpressionStatement	n = ( avctx -> width * ( depth / 8 ) + 3 ) & ~3	273:4:3708:3749	1101917	43	True				
ANR	1102631	AssignmentExpression	n = ( avctx -> width * ( depth / 8 ) + 3 ) & ~3		1101917	0		=			
ANR	1102632	Identifier	n		1101917	0					
ANR	1102633	BitAndExpression	( avctx -> width * ( depth / 8 ) + 3 ) & ~3		1101917	1		&			
ANR	1102634	AdditiveExpression	avctx -> width * ( depth / 8 ) + 3		1101917	0		+			
ANR	1102635	MultiplicativeExpression	avctx -> width * ( depth / 8 )		1101917	0		*			
ANR	1102636	PtrMemberAccess	avctx -> width		1101917	0					
ANR	1102637	Identifier	avctx		1101917	0					
ANR	1102638	Identifier	width		1101917	1					
ANR	1102639	MultiplicativeExpression	depth / 8		1101917	1		/			
ANR	1102640	Identifier	depth		1101917	0					
ANR	1102641	PrimaryExpression	8		1101917	1					
ANR	1102642	PrimaryExpression	3		1101917	1					
ANR	1102643	Identifier	~3		1101917	1					
ANR	1102644	IfStatement	if ( n * avctx -> height > dsize )		1101917	44					
ANR	1102645	Condition	n * avctx -> height > dsize	277:7:3761:3785	1101917	0	True				
ANR	1102646	RelationalExpression	n * avctx -> height > dsize		1101917	0		>			
ANR	1102647	MultiplicativeExpression	n * avctx -> height		1101917	0		*			
ANR	1102648	Identifier	n		1101917	0					
ANR	1102649	PtrMemberAccess	avctx -> height		1101917	1					
ANR	1102650	Identifier	avctx		1101917	0					
ANR	1102651	Identifier	height		1101917	1					
ANR	1102652	Identifier	dsize		1101917	1					
ANR	1102653	CompoundStatement		271:33:3620:3620	1101917	1					
ANR	1102654	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""not enough data (%d < %d)\\n"" , dsize , n * avctx -> height )"	279:8:3798:3898	1101917	0	True				
ANR	1102655	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""not enough data (%d < %d)\\n"" , dsize , n * avctx -> height )"		1101917	0					
ANR	1102656	Callee	av_log		1101917	0					
ANR	1102657	Identifier	av_log		1101917	0					
ANR	1102658	ArgumentList	avctx		1101917	1					
ANR	1102659	Argument	avctx		1101917	0					
ANR	1102660	Identifier	avctx		1101917	0					
ANR	1102661	Argument	AV_LOG_ERROR		1101917	1					
ANR	1102662	Identifier	AV_LOG_ERROR		1101917	0					
ANR	1102663	Argument	"""not enough data (%d < %d)\\n"""		1101917	2					
ANR	1102664	PrimaryExpression	"""not enough data (%d < %d)\\n"""		1101917	0					
ANR	1102665	Argument	dsize		1101917	3					
ANR	1102666	Identifier	dsize		1101917	0					
ANR	1102667	Argument	n * avctx -> height		1101917	4					
ANR	1102668	MultiplicativeExpression	n * avctx -> height		1101917	0		*			
ANR	1102669	Identifier	n		1101917	0					
ANR	1102670	PtrMemberAccess	avctx -> height		1101917	1					
ANR	1102671	Identifier	avctx		1101917	0					
ANR	1102672	Identifier	height		1101917	1					
ANR	1102673	ReturnStatement	return - 1 ;	283:8:3909:3918	1101917	1	True				
ANR	1102674	UnaryOperationExpression	- 1		1101917	0					
ANR	1102675	UnaryOperator	-		1101917	0					
ANR	1102676	PrimaryExpression	1		1101917	1					
ANR	1102677	IfStatement	if ( height > 0 )		1101917	45					
ANR	1102678	Condition	height > 0	289:7:3937:3946	1101917	0	True				
ANR	1102679	RelationalExpression	height > 0		1101917	0		>			
ANR	1102680	Identifier	height		1101917	0					
ANR	1102681	PrimaryExpression	0		1101917	1					
ANR	1102682	CompoundStatement		283:18:3781:3781	1101917	1					
ANR	1102683	ExpressionStatement	ptr = p -> data [ 0 ] + ( avctx -> height - 1 ) * p -> linesize [ 0 ]	291:8:3959:4014	1101917	0	True				
ANR	1102684	AssignmentExpression	ptr = p -> data [ 0 ] + ( avctx -> height - 1 ) * p -> linesize [ 0 ]		1101917	0		=			
ANR	1102685	Identifier	ptr		1101917	0					
ANR	1102686	AdditiveExpression	p -> data [ 0 ] + ( avctx -> height - 1 ) * p -> linesize [ 0 ]		1101917	1		+			
ANR	1102687	ArrayIndexing	p -> data [ 0 ]		1101917	0					
ANR	1102688	PtrMemberAccess	p -> data		1101917	0					
ANR	1102689	Identifier	p		1101917	0					
ANR	1102690	Identifier	data		1101917	1					
ANR	1102691	PrimaryExpression	0		1101917	1					
ANR	1102692	MultiplicativeExpression	( avctx -> height - 1 ) * p -> linesize [ 0 ]		1101917	1		*			
ANR	1102693	AdditiveExpression	avctx -> height - 1		1101917	0		-			
ANR	1102694	PtrMemberAccess	avctx -> height		1101917	0					
ANR	1102695	Identifier	avctx		1101917	0					
ANR	1102696	Identifier	height		1101917	1					
ANR	1102697	PrimaryExpression	1		1101917	1					
ANR	1102698	ArrayIndexing	p -> linesize [ 0 ]		1101917	1					
ANR	1102699	PtrMemberAccess	p -> linesize		1101917	0					
ANR	1102700	Identifier	p		1101917	0					
ANR	1102701	Identifier	linesize		1101917	1					
ANR	1102702	PrimaryExpression	0		1101917	1					
ANR	1102703	ExpressionStatement	linesize = - p -> linesize [ 0 ]	293:8:4025:4051	1101917	1	True				
ANR	1102704	AssignmentExpression	linesize = - p -> linesize [ 0 ]		1101917	0		=			
ANR	1102705	Identifier	linesize		1101917	0					
ANR	1102706	UnaryOperationExpression	- p -> linesize [ 0 ]		1101917	1					
ANR	1102707	UnaryOperator	-		1101917	0					
ANR	1102708	ArrayIndexing	p -> linesize [ 0 ]		1101917	1					
ANR	1102709	PtrMemberAccess	p -> linesize		1101917	0					
ANR	1102710	Identifier	p		1101917	0					
ANR	1102711	Identifier	linesize		1101917	1					
ANR	1102712	PrimaryExpression	0		1101917	1					
ANR	1102713	ElseStatement	else		1101917	0					
ANR	1102714	CompoundStatement		289:11:3898:3898	1101917	0					
ANR	1102715	ExpressionStatement	ptr = p -> data [ 0 ]	297:8:4076:4092	1101917	0	True				
ANR	1102716	AssignmentExpression	ptr = p -> data [ 0 ]		1101917	0		=			
ANR	1102717	Identifier	ptr		1101917	0					
ANR	1102718	ArrayIndexing	p -> data [ 0 ]		1101917	1					
ANR	1102719	PtrMemberAccess	p -> data		1101917	0					
ANR	1102720	Identifier	p		1101917	0					
ANR	1102721	Identifier	data		1101917	1					
ANR	1102722	PrimaryExpression	0		1101917	1					
ANR	1102723	ExpressionStatement	linesize = p -> linesize [ 0 ]	299:8:4103:4128	1101917	1	True				
ANR	1102724	AssignmentExpression	linesize = p -> linesize [ 0 ]		1101917	0		=			
ANR	1102725	Identifier	linesize		1101917	0					
ANR	1102726	ArrayIndexing	p -> linesize [ 0 ]		1101917	1					
ANR	1102727	PtrMemberAccess	p -> linesize		1101917	0					
ANR	1102728	Identifier	p		1101917	0					
ANR	1102729	Identifier	linesize		1101917	1					
ANR	1102730	PrimaryExpression	0		1101917	1					
ANR	1102731	SwitchStatement	switch ( depth )		1101917	46					
ANR	1102732	Condition	depth	305:11:4151:4155	1101917	0	True				
ANR	1102733	Identifier	depth		1101917	0					
ANR	1102734	CompoundStatement		299:17:3990:3990	1101917	1					
ANR	1102735	Label	case 24 :	307:4:4164:4171	1101917	0	True				
ANR	1102736	ForStatement	for ( i = 0 ; i < avctx -> height ; i ++ )		1101917	1					
ANR	1102737	ForInit	i = 0 ;	309:12:4186:4191	1101917	0	True				
ANR	1102738	AssignmentExpression	i = 0		1101917	0		=			
ANR	1102739	Identifier	i		1101917	0					
ANR	1102740	PrimaryExpression	0		1101917	1					
ANR	1102741	Condition	i < avctx -> height	309:19:4193:4209	1101917	1	True				
ANR	1102742	RelationalExpression	i < avctx -> height		1101917	0		<			
ANR	1102743	Identifier	i		1101917	0					
ANR	1102744	PtrMemberAccess	avctx -> height		1101917	1					
ANR	1102745	Identifier	avctx		1101917	0					
ANR	1102746	Identifier	height		1101917	1					
ANR	1102747	PostIncDecOperationExpression	i ++	309:38:4212:4214	1101917	2	True				
ANR	1102748	Identifier	i		1101917	0					
ANR	1102749	IncDec	++		1101917	1					
ANR	1102750	CompoundStatement		303:42:4049:4049	1101917	3					
ANR	1102751	ExpressionStatement	"memcpy ( ptr , buf , n )"	311:12:4231:4250	1101917	0	True				
ANR	1102752	CallExpression	"memcpy ( ptr , buf , n )"		1101917	0					
ANR	1102753	Callee	memcpy		1101917	0					
ANR	1102754	Identifier	memcpy		1101917	0					
ANR	1102755	ArgumentList	ptr		1101917	1					
ANR	1102756	Argument	ptr		1101917	0					
ANR	1102757	Identifier	ptr		1101917	0					
ANR	1102758	Argument	buf		1101917	1					
ANR	1102759	Identifier	buf		1101917	0					
ANR	1102760	Argument	n		1101917	2					
ANR	1102761	Identifier	n		1101917	0					
ANR	1102762	ExpressionStatement	buf += n	313:12:4265:4273	1101917	1	True				
ANR	1102763	AssignmentExpression	buf += n		1101917	0		+=			
ANR	1102764	Identifier	buf		1101917	0					
ANR	1102765	Identifier	n		1101917	1					
ANR	1102766	ExpressionStatement	ptr += linesize	315:12:4288:4303	1101917	2	True				
ANR	1102767	AssignmentExpression	ptr += linesize		1101917	0		+=			
ANR	1102768	Identifier	ptr		1101917	0					
ANR	1102769	Identifier	linesize		1101917	1					
ANR	1102770	BreakStatement	break ;	319:8:4325:4330	1101917	2	True				
ANR	1102771	Label	case 16 :	321:4:4337:4344	1101917	3	True				
ANR	1102772	ForStatement	for ( i = 0 ; i < avctx -> height ; i ++ )		1101917	4					
ANR	1102773	ForInit	i = 0 ;	323:12:4359:4364	1101917	0	True				
ANR	1102774	AssignmentExpression	i = 0		1101917	0		=			
ANR	1102775	Identifier	i		1101917	0					
ANR	1102776	PrimaryExpression	0		1101917	1					
ANR	1102777	Condition	i < avctx -> height	323:19:4366:4382	1101917	1	True				
ANR	1102778	RelationalExpression	i < avctx -> height		1101917	0		<			
ANR	1102779	Identifier	i		1101917	0					
ANR	1102780	PtrMemberAccess	avctx -> height		1101917	1					
ANR	1102781	Identifier	avctx		1101917	0					
ANR	1102782	Identifier	height		1101917	1					
ANR	1102783	PostIncDecOperationExpression	i ++	323:38:4385:4387	1101917	2	True				
ANR	1102784	Identifier	i		1101917	0					
ANR	1102785	IncDec	++		1101917	1					
ANR	1102786	CompoundStatement		321:12:4284:4316	1101917	3					
ANR	1102787	IdentifierDeclStatement	uint16_t * src = ( uint16_t * ) buf ;	325:12:4404:4436	1101917	0	True				
ANR	1102788	IdentifierDecl	* src = ( uint16_t * ) buf		1101917	0					
ANR	1102789	IdentifierDeclType	uint16_t *		1101917	0					
ANR	1102790	Identifier	src		1101917	1					
ANR	1102791	AssignmentExpression	* src = ( uint16_t * ) buf		1101917	2		=			
ANR	1102792	Identifier	src		1101917	0					
ANR	1102793	CastExpression	( uint16_t * ) buf		1101917	1					
ANR	1102794	CastTarget	uint16_t *		1101917	0					
ANR	1102795	Identifier	buf		1101917	1					
ANR	1102796	IdentifierDeclStatement	uint16_t * dst = ( uint16_t * ) ptr ;	327:12:4451:4483	1101917	1	True				
ANR	1102797	IdentifierDecl	* dst = ( uint16_t * ) ptr		1101917	0					
ANR	1102798	IdentifierDeclType	uint16_t *		1101917	0					
ANR	1102799	Identifier	dst		1101917	1					
ANR	1102800	AssignmentExpression	* dst = ( uint16_t * ) ptr		1101917	2		=			
ANR	1102801	Identifier	dst		1101917	0					
ANR	1102802	CastExpression	( uint16_t * ) ptr		1101917	1					
ANR	1102803	CastTarget	uint16_t *		1101917	0					
ANR	1102804	Identifier	ptr		1101917	1					
ANR	1102805	ForStatement	for ( j = 0 ; j < avctx -> width ; j ++ )		1101917	2					
ANR	1102806	ForInit	j = 0 ;	331:16:4504:4509	1101917	0	True				
ANR	1102807	AssignmentExpression	j = 0		1101917	0		=			
ANR	1102808	Identifier	j		1101917	0					
ANR	1102809	PrimaryExpression	0		1101917	1					
ANR	1102810	Condition	j < avctx -> width	331:23:4511:4526	1101917	1	True				
ANR	1102811	RelationalExpression	j < avctx -> width		1101917	0		<			
ANR	1102812	Identifier	j		1101917	0					
ANR	1102813	PtrMemberAccess	avctx -> width		1101917	1					
ANR	1102814	Identifier	avctx		1101917	0					
ANR	1102815	Identifier	width		1101917	1					
ANR	1102816	PostIncDecOperationExpression	j ++	331:41:4529:4531	1101917	2	True				
ANR	1102817	Identifier	j		1101917	0					
ANR	1102818	IncDec	++		1101917	1					
ANR	1102819	ExpressionStatement	* dst ++ = le2me_16 ( * src ++ )	333:16:4551:4576	1101917	3	True				
ANR	1102820	AssignmentExpression	* dst ++ = le2me_16 ( * src ++ )		1101917	0		=			
ANR	1102821	UnaryOperationExpression	* dst ++		1101917	0					
ANR	1102822	UnaryOperator	*		1101917	0					
ANR	1102823	PostIncDecOperationExpression	dst ++		1101917	1					
ANR	1102824	Identifier	dst		1101917	0					
ANR	1102825	IncDec	++		1101917	1					
ANR	1102826	CallExpression	le2me_16 ( * src ++ )		1101917	1					
ANR	1102827	Callee	le2me_16		1101917	0					
ANR	1102828	Identifier	le2me_16		1101917	0					
ANR	1102829	ArgumentList	* src ++		1101917	1					
ANR	1102830	Argument	* src ++		1101917	0					
ANR	1102831	UnaryOperationExpression	* src ++		1101917	0					
ANR	1102832	UnaryOperator	*		1101917	0					
ANR	1102833	PostIncDecOperationExpression	src ++		1101917	1					
ANR	1102834	Identifier	src		1101917	0					
ANR	1102835	IncDec	++		1101917	1					
ANR	1102836	ExpressionStatement	buf += n	337:12:4593:4601	1101917	3	True				
ANR	1102837	AssignmentExpression	buf += n		1101917	0		+=			
ANR	1102838	Identifier	buf		1101917	0					
ANR	1102839	Identifier	n		1101917	1					
ANR	1102840	ExpressionStatement	ptr += linesize	339:12:4616:4631	1101917	4	True				
ANR	1102841	AssignmentExpression	ptr += linesize		1101917	0		+=			
ANR	1102842	Identifier	ptr		1101917	0					
ANR	1102843	Identifier	linesize		1101917	1					
ANR	1102844	BreakStatement	break ;	343:8:4653:4658	1101917	5	True				
ANR	1102845	Label	case 32 :	345:4:4665:4672	1101917	6	True				
ANR	1102846	ForStatement	for ( i = 0 ; i < avctx -> height ; i ++ )		1101917	7					
ANR	1102847	ForInit	i = 0 ;	347:12:4687:4692	1101917	0	True				
ANR	1102848	AssignmentExpression	i = 0		1101917	0		=			
ANR	1102849	Identifier	i		1101917	0					
ANR	1102850	PrimaryExpression	0		1101917	1					
ANR	1102851	Condition	i < avctx -> height	347:19:4694:4710	1101917	1	True				
ANR	1102852	RelationalExpression	i < avctx -> height		1101917	0		<			
ANR	1102853	Identifier	i		1101917	0					
ANR	1102854	PtrMemberAccess	avctx -> height		1101917	1					
ANR	1102855	Identifier	avctx		1101917	0					
ANR	1102856	Identifier	height		1101917	1					
ANR	1102857	PostIncDecOperationExpression	i ++	347:38:4713:4715	1101917	2	True				
ANR	1102858	Identifier	i		1101917	0					
ANR	1102859	IncDec	++		1101917	1					
ANR	1102860	CompoundStatement		345:12:4598:4616	1101917	3					
ANR	1102861	IdentifierDeclStatement	uint8_t * src = buf ;	349:12:4732:4750	1101917	0	True				
ANR	1102862	IdentifierDecl	* src = buf		1101917	0					
ANR	1102863	IdentifierDeclType	uint8_t *		1101917	0					
ANR	1102864	Identifier	src		1101917	1					
ANR	1102865	AssignmentExpression	* src = buf		1101917	2		=			
ANR	1102866	Identifier	buf		1101917	0					
ANR	1102867	Identifier	buf		1101917	1					
ANR	1102868	IdentifierDeclStatement	uint8_t * dst = ptr ;	351:12:4765:4783	1101917	1	True				
ANR	1102869	IdentifierDecl	* dst = ptr		1101917	0					
ANR	1102870	IdentifierDeclType	uint8_t *		1101917	0					
ANR	1102871	Identifier	dst		1101917	1					
ANR	1102872	AssignmentExpression	* dst = ptr		1101917	2		=			
ANR	1102873	Identifier	ptr		1101917	0					
ANR	1102874	Identifier	ptr		1101917	1					
ANR	1102875	ForStatement	for ( j = 0 ; j < avctx -> width ; j ++ )		1101917	2					
ANR	1102876	ForInit	j = 0 ;	355:16:4804:4809	1101917	0	True				
ANR	1102877	AssignmentExpression	j = 0		1101917	0		=			
ANR	1102878	Identifier	j		1101917	0					
ANR	1102879	PrimaryExpression	0		1101917	1					
ANR	1102880	Condition	j < avctx -> width	355:23:4811:4826	1101917	1	True				
ANR	1102881	RelationalExpression	j < avctx -> width		1101917	0		<			
ANR	1102882	Identifier	j		1101917	0					
ANR	1102883	PtrMemberAccess	avctx -> width		1101917	1					
ANR	1102884	Identifier	avctx		1101917	0					
ANR	1102885	Identifier	width		1101917	1					
ANR	1102886	PostIncDecOperationExpression	j ++	355:41:4829:4831	1101917	2	True				
ANR	1102887	Identifier	j		1101917	0					
ANR	1102888	IncDec	++		1101917	1					
ANR	1102889	CompoundStatement		349:45:4666:4666	1101917	3					
ANR	1102890	ExpressionStatement	dst [ 0 ] = src [ rgb [ 2 ] ]	357:16:4852:4872	1101917	0	True				
ANR	1102891	AssignmentExpression	dst [ 0 ] = src [ rgb [ 2 ] ]		1101917	0		=			
ANR	1102892	ArrayIndexing	dst [ 0 ]		1101917	0					
ANR	1102893	Identifier	dst		1101917	0					
ANR	1102894	PrimaryExpression	0		1101917	1					
ANR	1102895	ArrayIndexing	src [ rgb [ 2 ] ]		1101917	1					
ANR	1102896	Identifier	src		1101917	0					
ANR	1102897	ArrayIndexing	rgb [ 2 ]		1101917	1					
ANR	1102898	Identifier	rgb		1101917	0					
ANR	1102899	PrimaryExpression	2		1101917	1					
ANR	1102900	ExpressionStatement	dst [ 1 ] = src [ rgb [ 1 ] ]	359:16:4891:4911	1101917	1	True				
ANR	1102901	AssignmentExpression	dst [ 1 ] = src [ rgb [ 1 ] ]		1101917	0		=			
ANR	1102902	ArrayIndexing	dst [ 1 ]		1101917	0					
ANR	1102903	Identifier	dst		1101917	0					
ANR	1102904	PrimaryExpression	1		1101917	1					
ANR	1102905	ArrayIndexing	src [ rgb [ 1 ] ]		1101917	1					
ANR	1102906	Identifier	src		1101917	0					
ANR	1102907	ArrayIndexing	rgb [ 1 ]		1101917	1					
ANR	1102908	Identifier	rgb		1101917	0					
ANR	1102909	PrimaryExpression	1		1101917	1					
ANR	1102910	ExpressionStatement	dst [ 2 ] = src [ rgb [ 0 ] ]	361:16:4930:4950	1101917	2	True				
ANR	1102911	AssignmentExpression	dst [ 2 ] = src [ rgb [ 0 ] ]		1101917	0		=			
ANR	1102912	ArrayIndexing	dst [ 2 ]		1101917	0					
ANR	1102913	Identifier	dst		1101917	0					
ANR	1102914	PrimaryExpression	2		1101917	1					
ANR	1102915	ArrayIndexing	src [ rgb [ 0 ] ]		1101917	1					
ANR	1102916	Identifier	src		1101917	0					
ANR	1102917	ArrayIndexing	rgb [ 0 ]		1101917	1					
ANR	1102918	Identifier	rgb		1101917	0					
ANR	1102919	PrimaryExpression	0		1101917	1					
ANR	1102920	ExpressionStatement	dst += 3	363:16:4969:4977	1101917	3	True				
ANR	1102921	AssignmentExpression	dst += 3		1101917	0		+=			
ANR	1102922	Identifier	dst		1101917	0					
ANR	1102923	PrimaryExpression	3		1101917	1					
ANR	1102924	ExpressionStatement	src += 4	365:16:4996:5004	1101917	4	True				
ANR	1102925	AssignmentExpression	src += 4		1101917	0		+=			
ANR	1102926	Identifier	src		1101917	0					
ANR	1102927	PrimaryExpression	4		1101917	1					
ANR	1102928	ExpressionStatement	buf += n	371:12:5036:5044	1101917	3	True				
ANR	1102929	AssignmentExpression	buf += n		1101917	0		+=			
ANR	1102930	Identifier	buf		1101917	0					
ANR	1102931	Identifier	n		1101917	1					
ANR	1102932	ExpressionStatement	ptr += linesize	373:12:5059:5074	1101917	4	True				
ANR	1102933	AssignmentExpression	ptr += linesize		1101917	0		+=			
ANR	1102934	Identifier	ptr		1101917	0					
ANR	1102935	Identifier	linesize		1101917	1					
ANR	1102936	BreakStatement	break ;	377:8:5096:5101	1101917	8	True				
ANR	1102937	Label	default :	379:4:5108:5115	1101917	9	True				
ANR	1102938	Identifier	default		1101917	0					
ANR	1102939	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""BMP decoder is broken\\n"" )"	381:8:5126:5180	1101917	10	True				
ANR	1102940	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""BMP decoder is broken\\n"" )"		1101917	0					
ANR	1102941	Callee	av_log		1101917	0					
ANR	1102942	Identifier	av_log		1101917	0					
ANR	1102943	ArgumentList	avctx		1101917	1					
ANR	1102944	Argument	avctx		1101917	0					
ANR	1102945	Identifier	avctx		1101917	0					
ANR	1102946	Argument	AV_LOG_ERROR		1101917	1					
ANR	1102947	Identifier	AV_LOG_ERROR		1101917	0					
ANR	1102948	Argument	"""BMP decoder is broken\\n"""		1101917	2					
ANR	1102949	PrimaryExpression	"""BMP decoder is broken\\n"""		1101917	0					
ANR	1102950	ReturnStatement	return - 1 ;	383:8:5191:5200	1101917	11	True				
ANR	1102951	UnaryOperationExpression	- 1		1101917	0					
ANR	1102952	UnaryOperator	-		1101917	0					
ANR	1102953	PrimaryExpression	1		1101917	1					
ANR	1102954	ExpressionStatement	* picture = s -> picture	389:4:5216:5237	1101917	47	True				
ANR	1102955	AssignmentExpression	* picture = s -> picture		1101917	0		=			
ANR	1102956	UnaryOperationExpression	* picture		1101917	0					
ANR	1102957	UnaryOperator	*		1101917	0					
ANR	1102958	Identifier	picture		1101917	1					
ANR	1102959	PtrMemberAccess	s -> picture		1101917	1					
ANR	1102960	Identifier	s		1101917	0					
ANR	1102961	Identifier	picture		1101917	1					
ANR	1102962	ExpressionStatement	* data_size = sizeof ( AVPicture )	391:4:5244:5274	1101917	48	True				
ANR	1102963	AssignmentExpression	* data_size = sizeof ( AVPicture )		1101917	0		=			
ANR	1102964	UnaryOperationExpression	* data_size		1101917	0					
ANR	1102965	UnaryOperator	*		1101917	0					
ANR	1102966	Identifier	data_size		1101917	1					
ANR	1102967	SizeofExpression	sizeof ( AVPicture )		1101917	1					
ANR	1102968	Sizeof	sizeof		1101917	0					
ANR	1102969	SizeofOperand	AVPicture		1101917	1					
ANR	1102970	ReturnStatement	return buf_size ;	395:4:5283:5298	1101917	49	True				
ANR	1102971	Identifier	buf_size		1101917	0					
ANR	1102972	ReturnType	static int		1101917	1					
ANR	1102973	Identifier	bmp_decode_frame		1101917	2					
ANR	1102974	ParameterList	"AVCodecContext * avctx , void * data , int * data_size , uint8_t * buf , int buf_size"		1101917	3					
ANR	1102975	Parameter	AVCodecContext * avctx	1:28:28:48	1101917	0	True				
ANR	1102976	ParameterType	AVCodecContext *		1101917	0					
ANR	1102977	Identifier	avctx		1101917	1					
ANR	1102978	Parameter	void * data	3:28:80:89	1101917	1	True				
ANR	1102979	ParameterType	void *		1101917	0					
ANR	1102980	Identifier	data		1101917	1					
ANR	1102981	Parameter	int * data_size	3:40:92:105	1101917	2	True				
ANR	1102982	ParameterType	int *		1101917	0					
ANR	1102983	Identifier	data_size		1101917	1					
ANR	1102984	Parameter	uint8_t * buf	5:28:137:148	1101917	3	True				
ANR	1102985	ParameterType	uint8_t *		1101917	0					
ANR	1102986	Identifier	buf		1101917	1					
ANR	1102987	Parameter	int buf_size	5:42:151:162	1101917	4	True				
ANR	1102988	ParameterType	int		1101917	0					
ANR	1102989	Identifier	buf_size		1101917	1					
ANR	1102990	CFGEntryNode	ENTRY		1101917		True				
ANR	1102991	CFGExitNode	EXIT		1101917		True				
ANR	1102992	Symbol	data		1101917						
ANR	1102993	Symbol	hsize		1101917						
ANR	1102994	Symbol	BMP_RGB		1101917						
ANR	1102995	Symbol	* data_size		1101917						
ANR	1102996	Symbol	* src		1101917						
ANR	1102997	Symbol	* dst		1101917						
ANR	1102998	Symbol	linesize		1101917						
ANR	1102999	Symbol	* p -> data		1101917						
ANR	1103000	Symbol	PIX_FMT_RGB555		1101917						
ANR	1103001	Symbol	height		1101917						
ANR	1103002	Symbol	data_size		1101917						
ANR	1103003	Symbol	comp		1101917						
ANR	1103004	Symbol	* * rgb		1101917						
ANR	1103005	Symbol	buf_size		1101917						
ANR	1103006	Symbol	le2me_16		1101917						
ANR	1103007	Symbol	p -> linesize		1101917						
ANR	1103008	Symbol	bytestream_get_le16		1101917						
ANR	1103009	Symbol	* avctx		1101917						
ANR	1103010	Symbol	buf0		1101917						
ANR	1103011	Symbol	fsize		1101917						
ANR	1103012	Symbol	* dst ++		1101917						
ANR	1103013	Symbol	* rgb		1101917						
ANR	1103014	Symbol	* src ++		1101917						
ANR	1103015	Symbol	avctx -> pix_fmt		1101917						
ANR	1103016	Symbol	ihsize		1101917						
ANR	1103017	Symbol	avctx -> codec_id		1101917						
ANR	1103018	Symbol	p -> reference		1101917						
ANR	1103019	Symbol	dst		1101917						
ANR	1103020	Symbol	p -> data		1101917						
ANR	1103021	Symbol	avctx -> width		1101917						
ANR	1103022	Symbol	PIX_FMT_BGR24		1101917						
ANR	1103023	Symbol	s -> picture		1101917						
ANR	1103024	Symbol	CODEC_ID_BMP		1101917						
ANR	1103025	Symbol	rgb		1101917						
ANR	1103026	Symbol	dsize		1101917						
ANR	1103027	Symbol	avctx -> height		1101917						
ANR	1103028	Symbol	* * p		1101917						
ANR	1103029	Symbol	avctx		1101917						
ANR	1103030	Symbol	p -> pict_type		1101917						
ANR	1103031	Symbol	& buf		1101917						
ANR	1103032	Symbol	BMP_BITFIELDS		1101917						
ANR	1103033	Symbol	FF_I_TYPE		1101917						
ANR	1103034	Symbol	AV_LOG_ERROR		1101917						
ANR	1103035	Symbol	avctx -> get_buffer		1101917						
ANR	1103036	Symbol	bytestream_get_byte		1101917						
ANR	1103037	Symbol	src		1101917						
ANR	1103038	Symbol	p -> key_frame		1101917						
ANR	1103039	Symbol	i		1101917						
ANR	1103040	Symbol	bytestream_get_le32		1101917						
ANR	1103041	Symbol	j		1101917						
ANR	1103042	Symbol	avctx -> priv_data		1101917						
ANR	1103043	Symbol	* p -> linesize		1101917						
ANR	1103044	Symbol	PIX_FMT_NONE		1101917						
ANR	1103045	Symbol	picture		1101917						
ANR	1103046	Symbol	n		1101917						
ANR	1103047	Symbol	ptr		1101917						
ANR	1103048	Symbol	p		1101917						
ANR	1103049	Symbol	buf		1101917						
ANR	1103050	Symbol	s		1101917						
ANR	1103051	Symbol	depth		1101917						
ANR	1103052	Symbol	& s -> picture		1101917						
ANR	1103053	Symbol	~3		1101917						
ANR	1103054	Symbol	width		1101917						
ANR	1103055	Symbol	* picture		1101917						
ANR	1103056	Symbol	* p		1101917						
ANR	1103057	Symbol	* s		1101917						
