command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1261394	File	/home/p4ultr4n/workplace/ReVeal/raw_code/check_io_0.c								
ANR	1261395	Function	check_io	1:0:0:773							
ANR	1261396	FunctionDef	"check_io (CPUX86State * env , int addr , int size)"		1261395	0					
ANR	1261397	CompoundStatement		3:0:67:773	1261395	0					
ANR	1261398	IdentifierDeclStatement	"int io_offset , val , mask ;"	5:4:74:98	1261395	0	True				
ANR	1261399	IdentifierDecl	io_offset		1261395	0					
ANR	1261400	IdentifierDeclType	int		1261395	0					
ANR	1261401	Identifier	io_offset		1261395	1					
ANR	1261402	IdentifierDecl	val		1261395	1					
ANR	1261403	IdentifierDeclType	int		1261395	0					
ANR	1261404	Identifier	val		1261395	1					
ANR	1261405	IdentifierDecl	mask		1261395	2					
ANR	1261406	IdentifierDeclType	int		1261395	0					
ANR	1261407	Identifier	mask		1261395	1					
ANR	1261408	IfStatement	if ( ! ( env -> tr . flags & DESC_P_MASK ) || ( ( env -> tr . flags >> DESC_TYPE_SHIFT ) & 0xf ) != 9 || env -> tr . limit < 103 )		1261395	1					
ANR	1261409	Condition	! ( env -> tr . flags & DESC_P_MASK ) || ( ( env -> tr . flags >> DESC_TYPE_SHIFT ) & 0xf ) != 9 || env -> tr . limit < 103	11:8:153:274	1261395	0	True				
ANR	1261410	OrExpression	! ( env -> tr . flags & DESC_P_MASK ) || ( ( env -> tr . flags >> DESC_TYPE_SHIFT ) & 0xf ) != 9 || env -> tr . limit < 103		1261395	0		||			
ANR	1261411	UnaryOperationExpression	! ( env -> tr . flags & DESC_P_MASK )		1261395	0					
ANR	1261412	UnaryOperator	!		1261395	0					
ANR	1261413	BitAndExpression	env -> tr . flags & DESC_P_MASK		1261395	1		&			
ANR	1261414	MemberAccess	env -> tr . flags		1261395	0					
ANR	1261415	PtrMemberAccess	env -> tr		1261395	0					
ANR	1261416	Identifier	env		1261395	0					
ANR	1261417	Identifier	tr		1261395	1					
ANR	1261418	Identifier	flags		1261395	1					
ANR	1261419	Identifier	DESC_P_MASK		1261395	1					
ANR	1261420	OrExpression	( ( env -> tr . flags >> DESC_TYPE_SHIFT ) & 0xf ) != 9 || env -> tr . limit < 103		1261395	1		||			
ANR	1261421	EqualityExpression	( ( env -> tr . flags >> DESC_TYPE_SHIFT ) & 0xf ) != 9		1261395	0		!=			
ANR	1261422	BitAndExpression	( env -> tr . flags >> DESC_TYPE_SHIFT ) & 0xf		1261395	0		&			
ANR	1261423	ShiftExpression	env -> tr . flags >> DESC_TYPE_SHIFT		1261395	0		>>			
ANR	1261424	MemberAccess	env -> tr . flags		1261395	0					
ANR	1261425	PtrMemberAccess	env -> tr		1261395	0					
ANR	1261426	Identifier	env		1261395	0					
ANR	1261427	Identifier	tr		1261395	1					
ANR	1261428	Identifier	flags		1261395	1					
ANR	1261429	Identifier	DESC_TYPE_SHIFT		1261395	1					
ANR	1261430	PrimaryExpression	0xf		1261395	1					
ANR	1261431	PrimaryExpression	9		1261395	1					
ANR	1261432	RelationalExpression	env -> tr . limit < 103		1261395	1		<			
ANR	1261433	MemberAccess	env -> tr . limit		1261395	0					
ANR	1261434	PtrMemberAccess	env -> tr		1261395	0					
ANR	1261435	Identifier	env		1261395	0					
ANR	1261436	Identifier	tr		1261395	1					
ANR	1261437	Identifier	limit		1261395	1					
ANR	1261438	PrimaryExpression	103		1261395	1					
ANR	1261439	CompoundStatement		13:29:209:209	1261395	1					
ANR	1261440	GotoStatement	goto fail ;	17:8:288:297	1261395	0	True				
ANR	1261441	Identifier	fail		1261395	0					
ANR	1261442	ExpressionStatement	"io_offset = cpu_lduw_kernel ( env , env -> tr . base + 0x66 )"	21:4:311:364	1261395	2	True				
ANR	1261443	AssignmentExpression	"io_offset = cpu_lduw_kernel ( env , env -> tr . base + 0x66 )"		1261395	0		=			
ANR	1261444	Identifier	io_offset		1261395	0					
ANR	1261445	CallExpression	"cpu_lduw_kernel ( env , env -> tr . base + 0x66 )"		1261395	1					
ANR	1261446	Callee	cpu_lduw_kernel		1261395	0					
ANR	1261447	Identifier	cpu_lduw_kernel		1261395	0					
ANR	1261448	ArgumentList	env		1261395	1					
ANR	1261449	Argument	env		1261395	0					
ANR	1261450	Identifier	env		1261395	0					
ANR	1261451	Argument	env -> tr . base + 0x66		1261395	1					
ANR	1261452	AdditiveExpression	env -> tr . base + 0x66		1261395	0		+			
ANR	1261453	MemberAccess	env -> tr . base		1261395	0					
ANR	1261454	PtrMemberAccess	env -> tr		1261395	0					
ANR	1261455	Identifier	env		1261395	0					
ANR	1261456	Identifier	tr		1261395	1					
ANR	1261457	Identifier	base		1261395	1					
ANR	1261458	PrimaryExpression	0x66		1261395	1					
ANR	1261459	ExpressionStatement	io_offset += ( addr >> 3 )	23:4:371:395	1261395	3	True				
ANR	1261460	AssignmentExpression	io_offset += ( addr >> 3 )		1261395	0		+=			
ANR	1261461	Identifier	io_offset		1261395	0					
ANR	1261462	ShiftExpression	addr >> 3		1261395	1		>>			
ANR	1261463	Identifier	addr		1261395	0					
ANR	1261464	PrimaryExpression	3		1261395	1					
ANR	1261465	IfStatement	if ( ( io_offset + 1 ) > env -> tr . limit )		1261395	4					
ANR	1261466	Condition	( io_offset + 1 ) > env -> tr . limit	27:8:449:479	1261395	0	True				
ANR	1261467	RelationalExpression	( io_offset + 1 ) > env -> tr . limit		1261395	0		>			
ANR	1261468	AdditiveExpression	io_offset + 1		1261395	0		+			
ANR	1261469	Identifier	io_offset		1261395	0					
ANR	1261470	PrimaryExpression	1		1261395	1					
ANR	1261471	MemberAccess	env -> tr . limit		1261395	1					
ANR	1261472	PtrMemberAccess	env -> tr		1261395	0					
ANR	1261473	Identifier	env		1261395	0					
ANR	1261474	Identifier	tr		1261395	1					
ANR	1261475	Identifier	limit		1261395	1					
ANR	1261476	CompoundStatement		25:41:414:414	1261395	1					
ANR	1261477	GotoStatement	goto fail ;	29:8:493:502	1261395	0	True				
ANR	1261478	Identifier	fail		1261395	0					
ANR	1261479	ExpressionStatement	"val = cpu_lduw_kernel ( env , env -> tr . base + io_offset )"	33:4:516:568	1261395	5	True				
ANR	1261480	AssignmentExpression	"val = cpu_lduw_kernel ( env , env -> tr . base + io_offset )"		1261395	0		=			
ANR	1261481	Identifier	val		1261395	0					
ANR	1261482	CallExpression	"cpu_lduw_kernel ( env , env -> tr . base + io_offset )"		1261395	1					
ANR	1261483	Callee	cpu_lduw_kernel		1261395	0					
ANR	1261484	Identifier	cpu_lduw_kernel		1261395	0					
ANR	1261485	ArgumentList	env		1261395	1					
ANR	1261486	Argument	env		1261395	0					
ANR	1261487	Identifier	env		1261395	0					
ANR	1261488	Argument	env -> tr . base + io_offset		1261395	1					
ANR	1261489	AdditiveExpression	env -> tr . base + io_offset		1261395	0		+			
ANR	1261490	MemberAccess	env -> tr . base		1261395	0					
ANR	1261491	PtrMemberAccess	env -> tr		1261395	0					
ANR	1261492	Identifier	env		1261395	0					
ANR	1261493	Identifier	tr		1261395	1					
ANR	1261494	Identifier	base		1261395	1					
ANR	1261495	Identifier	io_offset		1261395	1					
ANR	1261496	ExpressionStatement	val >>= ( addr & 7 )	35:4:575:593	1261395	6	True				
ANR	1261497	AssignmentExpression	val >>= ( addr & 7 )		1261395	0		>>=			
ANR	1261498	Identifier	val		1261395	0					
ANR	1261499	BitAndExpression	addr & 7		1261395	1		&			
ANR	1261500	Identifier	addr		1261395	0					
ANR	1261501	PrimaryExpression	7		1261395	1					
ANR	1261502	ExpressionStatement	mask = ( 1 << size ) - 1	37:4:600:622	1261395	7	True				
ANR	1261503	AssignmentExpression	mask = ( 1 << size ) - 1		1261395	0		=			
ANR	1261504	Identifier	mask		1261395	0					
ANR	1261505	AdditiveExpression	( 1 << size ) - 1		1261395	1		-			
ANR	1261506	ShiftExpression	1 << size		1261395	0		<<			
ANR	1261507	PrimaryExpression	1		1261395	0					
ANR	1261508	Identifier	size		1261395	1					
ANR	1261509	PrimaryExpression	1		1261395	1					
ANR	1261510	IfStatement	if ( ( val & mask ) != 0 )		1261395	8					
ANR	1261511	Condition	( val & mask ) != 0	41:8:683:699	1261395	0	True				
ANR	1261512	EqualityExpression	( val & mask ) != 0		1261395	0		!=			
ANR	1261513	BitAndExpression	val & mask		1261395	0		&			
ANR	1261514	Identifier	val		1261395	0					
ANR	1261515	Identifier	mask		1261395	1					
ANR	1261516	PrimaryExpression	0		1261395	1					
ANR	1261517	CompoundStatement		39:27:634:634	1261395	1					
ANR	1261518	Label	fail :	43:4:709:713	1261395	0	True				
ANR	1261519	Identifier	fail		1261395	0					
ANR	1261520	ExpressionStatement	"raise_exception_err ( env , EXCP0D_GPF , 0 )"	45:8:724:763	1261395	1	True				
ANR	1261521	CallExpression	"raise_exception_err ( env , EXCP0D_GPF , 0 )"		1261395	0					
ANR	1261522	Callee	raise_exception_err		1261395	0					
ANR	1261523	Identifier	raise_exception_err		1261395	0					
ANR	1261524	ArgumentList	env		1261395	1					
ANR	1261525	Argument	env		1261395	0					
ANR	1261526	Identifier	env		1261395	0					
ANR	1261527	Argument	EXCP0D_GPF		1261395	1					
ANR	1261528	Identifier	EXCP0D_GPF		1261395	0					
ANR	1261529	Argument	0		1261395	2					
ANR	1261530	PrimaryExpression	0		1261395	0					
ANR	1261531	ReturnType	static inline void		1261395	1					
ANR	1261532	Identifier	check_io		1261395	2					
ANR	1261533	ParameterList	"CPUX86State * env , int addr , int size"		1261395	3					
ANR	1261534	Parameter	CPUX86State * env	1:28:28:43	1261395	0	True				
ANR	1261535	ParameterType	CPUX86State *		1261395	0					
ANR	1261536	Identifier	env		1261395	1					
ANR	1261537	Parameter	int addr	1:46:46:53	1261395	1	True				
ANR	1261538	ParameterType	int		1261395	0					
ANR	1261539	Identifier	addr		1261395	1					
ANR	1261540	Parameter	int size	1:56:56:63	1261395	2	True				
ANR	1261541	ParameterType	int		1261395	0					
ANR	1261542	Identifier	size		1261395	1					
ANR	1261543	CFGEntryNode	ENTRY		1261395		True				
ANR	1261544	CFGExitNode	EXIT		1261395		True				
ANR	1261545	Symbol	val		1261395						
ANR	1261546	Symbol	* env		1261395						
ANR	1261547	Symbol	env -> tr		1261395						
ANR	1261548	Symbol	env		1261395						
ANR	1261549	Symbol	DESC_TYPE_SHIFT		1261395						
ANR	1261550	Symbol	env -> tr . flags		1261395						
ANR	1261551	Symbol	cpu_lduw_kernel		1261395						
ANR	1261552	Symbol	env -> tr . base		1261395						
ANR	1261553	Symbol	size		1261395						
ANR	1261554	Symbol	EXCP0D_GPF		1261395						
ANR	1261555	Symbol	DESC_P_MASK		1261395						
ANR	1261556	Symbol	env -> tr . limit		1261395						
ANR	1261557	Symbol	io_offset		1261395						
ANR	1261558	Symbol	addr		1261395						
ANR	1261559	Symbol	mask		1261395						
