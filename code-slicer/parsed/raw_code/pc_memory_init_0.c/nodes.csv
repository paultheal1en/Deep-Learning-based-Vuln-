command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6416015	File	/home/p4ultr4n/workplace/ReVeal/raw_code/pc_memory_init_0.c								
ANR	6416016	Function	pc_memory_init	1:0:0:5077							
ANR	6416017	FunctionDef	"pc_memory_init (PCMachineState * pcms , MemoryRegion * system_memory , MemoryRegion * rom_memory , MemoryRegion * * ram_memory , PcGuestInfo * guest_info)"		6416016	0					
ANR	6416018	CompoundStatement		11:0:269:5077	6416016	0					
ANR	6416019	IdentifierDeclStatement	"int linux_boot , i ;"	13:4:276:293	6416016	0	True				
ANR	6416020	IdentifierDecl	linux_boot		6416016	0					
ANR	6416021	IdentifierDeclType	int		6416016	0					
ANR	6416022	Identifier	linux_boot		6416016	1					
ANR	6416023	IdentifierDecl	i		6416016	1					
ANR	6416024	IdentifierDeclType	int		6416016	0					
ANR	6416025	Identifier	i		6416016	1					
ANR	6416026	IdentifierDeclStatement	"MemoryRegion * ram , * option_rom_mr ;"	15:4:300:333	6416016	1	True				
ANR	6416027	IdentifierDecl	* ram		6416016	0					
ANR	6416028	IdentifierDeclType	MemoryRegion *		6416016	0					
ANR	6416029	Identifier	ram		6416016	1					
ANR	6416030	IdentifierDecl	* option_rom_mr		6416016	1					
ANR	6416031	IdentifierDeclType	MemoryRegion *		6416016	0					
ANR	6416032	Identifier	option_rom_mr		6416016	1					
ANR	6416033	IdentifierDeclStatement	"MemoryRegion * ram_below_4g , * ram_above_4g ;"	17:4:340:381	6416016	2	True				
ANR	6416034	IdentifierDecl	* ram_below_4g		6416016	0					
ANR	6416035	IdentifierDeclType	MemoryRegion *		6416016	0					
ANR	6416036	Identifier	ram_below_4g		6416016	1					
ANR	6416037	IdentifierDecl	* ram_above_4g		6416016	1					
ANR	6416038	IdentifierDeclType	MemoryRegion *		6416016	0					
ANR	6416039	Identifier	ram_above_4g		6416016	1					
ANR	6416040	IdentifierDeclStatement	FWCfgState * fw_cfg ;	19:4:388:406	6416016	3	True				
ANR	6416041	IdentifierDecl	* fw_cfg		6416016	0					
ANR	6416042	IdentifierDeclType	FWCfgState *		6416016	0					
ANR	6416043	Identifier	fw_cfg		6416016	1					
ANR	6416044	IdentifierDeclStatement	MachineState * machine = MACHINE ( pcms ) ;	21:4:413:450	6416016	4	True				
ANR	6416045	IdentifierDecl	* machine = MACHINE ( pcms )		6416016	0					
ANR	6416046	IdentifierDeclType	MachineState *		6416016	0					
ANR	6416047	Identifier	machine		6416016	1					
ANR	6416048	AssignmentExpression	* machine = MACHINE ( pcms )		6416016	2		=			
ANR	6416049	Identifier	machine		6416016	0					
ANR	6416050	CallExpression	MACHINE ( pcms )		6416016	1					
ANR	6416051	Callee	MACHINE		6416016	0					
ANR	6416052	Identifier	MACHINE		6416016	0					
ANR	6416053	ArgumentList	pcms		6416016	1					
ANR	6416054	Argument	pcms		6416016	0					
ANR	6416055	Identifier	pcms		6416016	0					
ANR	6416056	ExpressionStatement	assert ( machine -> ram_size == pcms -> below_4g_mem_size + pcms -> above_4g_mem_size )	25:4:459:570	6416016	5	True				
ANR	6416057	CallExpression	assert ( machine -> ram_size == pcms -> below_4g_mem_size + pcms -> above_4g_mem_size )		6416016	0					
ANR	6416058	Callee	assert		6416016	0					
ANR	6416059	Identifier	assert		6416016	0					
ANR	6416060	ArgumentList	machine -> ram_size == pcms -> below_4g_mem_size + pcms -> above_4g_mem_size		6416016	1					
ANR	6416061	Argument	machine -> ram_size == pcms -> below_4g_mem_size + pcms -> above_4g_mem_size		6416016	0					
ANR	6416062	EqualityExpression	machine -> ram_size == pcms -> below_4g_mem_size + pcms -> above_4g_mem_size		6416016	0		==			
ANR	6416063	PtrMemberAccess	machine -> ram_size		6416016	0					
ANR	6416064	Identifier	machine		6416016	0					
ANR	6416065	Identifier	ram_size		6416016	1					
ANR	6416066	AdditiveExpression	pcms -> below_4g_mem_size + pcms -> above_4g_mem_size		6416016	1		+			
ANR	6416067	PtrMemberAccess	pcms -> below_4g_mem_size		6416016	0					
ANR	6416068	Identifier	pcms		6416016	0					
ANR	6416069	Identifier	below_4g_mem_size		6416016	1					
ANR	6416070	PtrMemberAccess	pcms -> above_4g_mem_size		6416016	1					
ANR	6416071	Identifier	pcms		6416016	0					
ANR	6416072	Identifier	above_4g_mem_size		6416016	1					
ANR	6416073	ExpressionStatement	linux_boot = ( machine -> kernel_filename != NULL )	31:4:579:626	6416016	6	True				
ANR	6416074	AssignmentExpression	linux_boot = ( machine -> kernel_filename != NULL )		6416016	0		=			
ANR	6416075	Identifier	linux_boot		6416016	0					
ANR	6416076	EqualityExpression	machine -> kernel_filename != NULL		6416016	1		!=			
ANR	6416077	PtrMemberAccess	machine -> kernel_filename		6416016	0					
ANR	6416078	Identifier	machine		6416016	0					
ANR	6416079	Identifier	kernel_filename		6416016	1					
ANR	6416080	Identifier	NULL		6416016	1					
ANR	6416081	ExpressionStatement	ram = g_malloc ( sizeof ( * ram ) )	43:4:847:875	6416016	7	True				
ANR	6416082	AssignmentExpression	ram = g_malloc ( sizeof ( * ram ) )		6416016	0		=			
ANR	6416083	Identifier	ram		6416016	0					
ANR	6416084	CallExpression	g_malloc ( sizeof ( * ram ) )		6416016	1					
ANR	6416085	Callee	g_malloc		6416016	0					
ANR	6416086	Identifier	g_malloc		6416016	0					
ANR	6416087	ArgumentList	sizeof ( * ram )		6416016	1					
ANR	6416088	Argument	sizeof ( * ram )		6416016	0					
ANR	6416089	SizeofExpression	sizeof ( * ram )		6416016	0					
ANR	6416090	Sizeof	sizeof		6416016	0					
ANR	6416091	UnaryOperationExpression	* ram		6416016	1					
ANR	6416092	UnaryOperator	*		6416016	0					
ANR	6416093	Identifier	ram		6416016	1					
ANR	6416094	ExpressionStatement	"memory_region_allocate_system_memory ( ram , NULL , ""pc.ram"" , machine -> ram_size )"	45:4:882:1000	6416016	8	True				
ANR	6416095	CallExpression	"memory_region_allocate_system_memory ( ram , NULL , ""pc.ram"" , machine -> ram_size )"		6416016	0					
ANR	6416096	Callee	memory_region_allocate_system_memory		6416016	0					
ANR	6416097	Identifier	memory_region_allocate_system_memory		6416016	0					
ANR	6416098	ArgumentList	ram		6416016	1					
ANR	6416099	Argument	ram		6416016	0					
ANR	6416100	Identifier	ram		6416016	0					
ANR	6416101	Argument	NULL		6416016	1					
ANR	6416102	Identifier	NULL		6416016	0					
ANR	6416103	Argument	"""pc.ram"""		6416016	2					
ANR	6416104	PrimaryExpression	"""pc.ram"""		6416016	0					
ANR	6416105	Argument	machine -> ram_size		6416016	3					
ANR	6416106	PtrMemberAccess	machine -> ram_size		6416016	0					
ANR	6416107	Identifier	machine		6416016	0					
ANR	6416108	Identifier	ram_size		6416016	1					
ANR	6416109	ExpressionStatement	* ram_memory = ram	49:4:1007:1024	6416016	9	True				
ANR	6416110	AssignmentExpression	* ram_memory = ram		6416016	0		=			
ANR	6416111	UnaryOperationExpression	* ram_memory		6416016	0					
ANR	6416112	UnaryOperator	*		6416016	0					
ANR	6416113	Identifier	ram_memory		6416016	1					
ANR	6416114	Identifier	ram		6416016	1					
ANR	6416115	ExpressionStatement	ram_below_4g = g_malloc ( sizeof ( * ram_below_4g ) )	51:4:1031:1077	6416016	10	True				
ANR	6416116	AssignmentExpression	ram_below_4g = g_malloc ( sizeof ( * ram_below_4g ) )		6416016	0		=			
ANR	6416117	Identifier	ram_below_4g		6416016	0					
ANR	6416118	CallExpression	g_malloc ( sizeof ( * ram_below_4g ) )		6416016	1					
ANR	6416119	Callee	g_malloc		6416016	0					
ANR	6416120	Identifier	g_malloc		6416016	0					
ANR	6416121	ArgumentList	sizeof ( * ram_below_4g )		6416016	1					
ANR	6416122	Argument	sizeof ( * ram_below_4g )		6416016	0					
ANR	6416123	SizeofExpression	sizeof ( * ram_below_4g )		6416016	0					
ANR	6416124	Sizeof	sizeof		6416016	0					
ANR	6416125	UnaryOperationExpression	* ram_below_4g		6416016	1					
ANR	6416126	UnaryOperator	*		6416016	0					
ANR	6416127	Identifier	ram_below_4g		6416016	1					
ANR	6416128	ExpressionStatement	"memory_region_init_alias ( ram_below_4g , NULL , ""ram-below-4g"" , ram , 0 , pcms -> below_4g_mem_size )"	53:4:1084:1207	6416016	11	True				
ANR	6416129	CallExpression	"memory_region_init_alias ( ram_below_4g , NULL , ""ram-below-4g"" , ram , 0 , pcms -> below_4g_mem_size )"		6416016	0					
ANR	6416130	Callee	memory_region_init_alias		6416016	0					
ANR	6416131	Identifier	memory_region_init_alias		6416016	0					
ANR	6416132	ArgumentList	ram_below_4g		6416016	1					
ANR	6416133	Argument	ram_below_4g		6416016	0					
ANR	6416134	Identifier	ram_below_4g		6416016	0					
ANR	6416135	Argument	NULL		6416016	1					
ANR	6416136	Identifier	NULL		6416016	0					
ANR	6416137	Argument	"""ram-below-4g"""		6416016	2					
ANR	6416138	PrimaryExpression	"""ram-below-4g"""		6416016	0					
ANR	6416139	Argument	ram		6416016	3					
ANR	6416140	Identifier	ram		6416016	0					
ANR	6416141	Argument	0		6416016	4					
ANR	6416142	PrimaryExpression	0		6416016	0					
ANR	6416143	Argument	pcms -> below_4g_mem_size		6416016	5					
ANR	6416144	PtrMemberAccess	pcms -> below_4g_mem_size		6416016	0					
ANR	6416145	Identifier	pcms		6416016	0					
ANR	6416146	Identifier	below_4g_mem_size		6416016	1					
ANR	6416147	ExpressionStatement	"memory_region_add_subregion ( system_memory , 0 , ram_below_4g )"	57:4:1214:1273	6416016	12	True				
ANR	6416148	CallExpression	"memory_region_add_subregion ( system_memory , 0 , ram_below_4g )"		6416016	0					
ANR	6416149	Callee	memory_region_add_subregion		6416016	0					
ANR	6416150	Identifier	memory_region_add_subregion		6416016	0					
ANR	6416151	ArgumentList	system_memory		6416016	1					
ANR	6416152	Argument	system_memory		6416016	0					
ANR	6416153	Identifier	system_memory		6416016	0					
ANR	6416154	Argument	0		6416016	1					
ANR	6416155	PrimaryExpression	0		6416016	0					
ANR	6416156	Argument	ram_below_4g		6416016	2					
ANR	6416157	Identifier	ram_below_4g		6416016	0					
ANR	6416158	ExpressionStatement	"e820_add_entry ( 0 , pcms -> below_4g_mem_size , E820_RAM )"	59:4:1280:1332	6416016	13	True				
ANR	6416159	CallExpression	"e820_add_entry ( 0 , pcms -> below_4g_mem_size , E820_RAM )"		6416016	0					
ANR	6416160	Callee	e820_add_entry		6416016	0					
ANR	6416161	Identifier	e820_add_entry		6416016	0					
ANR	6416162	ArgumentList	0		6416016	1					
ANR	6416163	Argument	0		6416016	0					
ANR	6416164	PrimaryExpression	0		6416016	0					
ANR	6416165	Argument	pcms -> below_4g_mem_size		6416016	1					
ANR	6416166	PtrMemberAccess	pcms -> below_4g_mem_size		6416016	0					
ANR	6416167	Identifier	pcms		6416016	0					
ANR	6416168	Identifier	below_4g_mem_size		6416016	1					
ANR	6416169	Argument	E820_RAM		6416016	2					
ANR	6416170	Identifier	E820_RAM		6416016	0					
ANR	6416171	IfStatement	if ( pcms -> above_4g_mem_size > 0 )		6416016	14					
ANR	6416172	Condition	pcms -> above_4g_mem_size > 0	61:8:1343:1369	6416016	0	True				
ANR	6416173	RelationalExpression	pcms -> above_4g_mem_size > 0		6416016	0		>			
ANR	6416174	PtrMemberAccess	pcms -> above_4g_mem_size		6416016	0					
ANR	6416175	Identifier	pcms		6416016	0					
ANR	6416176	Identifier	above_4g_mem_size		6416016	1					
ANR	6416177	PrimaryExpression	0		6416016	1					
ANR	6416178	CompoundStatement		51:37:1102:1102	6416016	1					
ANR	6416179	ExpressionStatement	ram_above_4g = g_malloc ( sizeof ( * ram_above_4g ) )	63:8:1383:1429	6416016	0	True				
ANR	6416180	AssignmentExpression	ram_above_4g = g_malloc ( sizeof ( * ram_above_4g ) )		6416016	0		=			
ANR	6416181	Identifier	ram_above_4g		6416016	0					
ANR	6416182	CallExpression	g_malloc ( sizeof ( * ram_above_4g ) )		6416016	1					
ANR	6416183	Callee	g_malloc		6416016	0					
ANR	6416184	Identifier	g_malloc		6416016	0					
ANR	6416185	ArgumentList	sizeof ( * ram_above_4g )		6416016	1					
ANR	6416186	Argument	sizeof ( * ram_above_4g )		6416016	0					
ANR	6416187	SizeofExpression	sizeof ( * ram_above_4g )		6416016	0					
ANR	6416188	Sizeof	sizeof		6416016	0					
ANR	6416189	UnaryOperationExpression	* ram_above_4g		6416016	1					
ANR	6416190	UnaryOperator	*		6416016	0					
ANR	6416191	Identifier	ram_above_4g		6416016	1					
ANR	6416192	ExpressionStatement	"memory_region_init_alias ( ram_above_4g , NULL , ""ram-above-4g"" , ram , pcms -> below_4g_mem_size , pcms -> above_4g_mem_size )"	65:8:1440:1623	6416016	1	True				
ANR	6416193	CallExpression	"memory_region_init_alias ( ram_above_4g , NULL , ""ram-above-4g"" , ram , pcms -> below_4g_mem_size , pcms -> above_4g_mem_size )"		6416016	0					
ANR	6416194	Callee	memory_region_init_alias		6416016	0					
ANR	6416195	Identifier	memory_region_init_alias		6416016	0					
ANR	6416196	ArgumentList	ram_above_4g		6416016	1					
ANR	6416197	Argument	ram_above_4g		6416016	0					
ANR	6416198	Identifier	ram_above_4g		6416016	0					
ANR	6416199	Argument	NULL		6416016	1					
ANR	6416200	Identifier	NULL		6416016	0					
ANR	6416201	Argument	"""ram-above-4g"""		6416016	2					
ANR	6416202	PrimaryExpression	"""ram-above-4g"""		6416016	0					
ANR	6416203	Argument	ram		6416016	3					
ANR	6416204	Identifier	ram		6416016	0					
ANR	6416205	Argument	pcms -> below_4g_mem_size		6416016	4					
ANR	6416206	PtrMemberAccess	pcms -> below_4g_mem_size		6416016	0					
ANR	6416207	Identifier	pcms		6416016	0					
ANR	6416208	Identifier	below_4g_mem_size		6416016	1					
ANR	6416209	Argument	pcms -> above_4g_mem_size		6416016	5					
ANR	6416210	PtrMemberAccess	pcms -> above_4g_mem_size		6416016	0					
ANR	6416211	Identifier	pcms		6416016	0					
ANR	6416212	Identifier	above_4g_mem_size		6416016	1					
ANR	6416213	Statement	memory_region_add_subregion	71:8:1634:1660	6416016	2	True				
ANR	6416214	Statement	(	71:35:1661:1661	6416016	3	True				
ANR	6416215	Statement	system_memory	71:36:1662:1674	6416016	4	True				
ANR	6416216	Statement	","	71:49:1675:1675	6416016	5	True				
ANR	6416217	Statement	0x100000000UL	71:51:1677:1689	6416016	6	True				
ANR	6416218	Statement	L	71:64:1690:1690	6416016	7	True				
ANR	6416219	Statement	","	71:65:1691:1691	6416016	8	True				
ANR	6416220	Statement	ram_above_4g	73:36:1730:1741	6416016	9	True				
ANR	6416221	Statement	)	73:48:1742:1742	6416016	10	True				
ANR	6416222	ExpressionStatement		73:49:1743:1743	6416016	11	True				
ANR	6416223	Statement	e820_add_entry	75:8:1754:1767	6416016	12	True				
ANR	6416224	Statement	(	75:22:1768:1768	6416016	13	True				
ANR	6416225	Statement	0x100000000UL	75:23:1769:1781	6416016	14	True				
ANR	6416226	Statement	L	75:36:1782:1782	6416016	15	True				
ANR	6416227	Statement	","	75:37:1783:1783	6416016	16	True				
ANR	6416228	Statement	pcms	75:39:1785:1788	6416016	17	True				
ANR	6416229	Statement	->	75:43:1789:1790	6416016	18	True				
ANR	6416230	Statement	above_4g_mem_size	75:45:1791:1807	6416016	19	True				
ANR	6416231	Statement	","	75:62:1808:1808	6416016	20	True				
ANR	6416232	Statement	E820_RAM	75:64:1810:1817	6416016	21	True				
ANR	6416233	Statement	)	75:72:1818:1818	6416016	22	True				
ANR	6416234	ExpressionStatement		75:73:1819:1819	6416016	23	True				
ANR	6416235	IfStatement	if ( ! guest_info -> has_reserved_memory && ( machine -> ram_slots || ( machine -> maxram_size > machine -> ram_size ) ) )		6416016	15					
ANR	6416236	Condition	! guest_info -> has_reserved_memory && ( machine -> ram_slots || ( machine -> maxram_size > machine -> ram_size ) )	81:8:1839:1959	6416016	0	True				
ANR	6416237	AndExpression	! guest_info -> has_reserved_memory && ( machine -> ram_slots || ( machine -> maxram_size > machine -> ram_size ) )		6416016	0		&&			
ANR	6416238	UnaryOperationExpression	! guest_info -> has_reserved_memory		6416016	0					
ANR	6416239	UnaryOperator	!		6416016	0					
ANR	6416240	PtrMemberAccess	guest_info -> has_reserved_memory		6416016	1					
ANR	6416241	Identifier	guest_info		6416016	0					
ANR	6416242	Identifier	has_reserved_memory		6416016	1					
ANR	6416243	OrExpression	machine -> ram_slots || ( machine -> maxram_size > machine -> ram_size )		6416016	1		||			
ANR	6416244	PtrMemberAccess	machine -> ram_slots		6416016	0					
ANR	6416245	Identifier	machine		6416016	0					
ANR	6416246	Identifier	ram_slots		6416016	1					
ANR	6416247	RelationalExpression	machine -> maxram_size > machine -> ram_size		6416016	1		>			
ANR	6416248	PtrMemberAccess	machine -> maxram_size		6416016	0					
ANR	6416249	Identifier	machine		6416016	0					
ANR	6416250	Identifier	maxram_size		6416016	1					
ANR	6416251	PtrMemberAccess	machine -> ram_size		6416016	1					
ANR	6416252	Identifier	machine		6416016	0					
ANR	6416253	Identifier	ram_size		6416016	1					
ANR	6416254	CompoundStatement		77:8:1703:1748	6416016	1					
ANR	6416255	IdentifierDeclStatement	MachineClass * mc = MACHINE_GET_CLASS ( machine ) ;	87:8:1973:2018	6416016	0	True				
ANR	6416256	IdentifierDecl	* mc = MACHINE_GET_CLASS ( machine )		6416016	0					
ANR	6416257	IdentifierDeclType	MachineClass *		6416016	0					
ANR	6416258	Identifier	mc		6416016	1					
ANR	6416259	AssignmentExpression	* mc = MACHINE_GET_CLASS ( machine )		6416016	2		=			
ANR	6416260	Identifier	mc		6416016	0					
ANR	6416261	CallExpression	MACHINE_GET_CLASS ( machine )		6416016	1					
ANR	6416262	Callee	MACHINE_GET_CLASS		6416016	0					
ANR	6416263	Identifier	MACHINE_GET_CLASS		6416016	0					
ANR	6416264	ArgumentList	machine		6416016	1					
ANR	6416265	Argument	machine		6416016	0					
ANR	6416266	Identifier	machine		6416016	0					
ANR	6416267	ExpressionStatement	"error_report ( ""\\""-memory 'slots|maxmem'\\"" is not supported by: %s"" , mc -> name )"	91:8:2031:2129	6416016	1	True				
ANR	6416268	CallExpression	"error_report ( ""\\""-memory 'slots|maxmem'\\"" is not supported by: %s"" , mc -> name )"		6416016	0					
ANR	6416269	Callee	error_report		6416016	0					
ANR	6416270	Identifier	error_report		6416016	0					
ANR	6416271	ArgumentList	"""\\""-memory 'slots|maxmem'\\"" is not supported by: %s"""		6416016	1					
ANR	6416272	Argument	"""\\""-memory 'slots|maxmem'\\"" is not supported by: %s"""		6416016	0					
ANR	6416273	PrimaryExpression	"""\\""-memory 'slots|maxmem'\\"" is not supported by: %s"""		6416016	0					
ANR	6416274	Argument	mc -> name		6416016	1					
ANR	6416275	PtrMemberAccess	mc -> name		6416016	0					
ANR	6416276	Identifier	mc		6416016	0					
ANR	6416277	Identifier	name		6416016	1					
ANR	6416278	ExpressionStatement	exit ( EXIT_FAILURE )	95:8:2140:2158	6416016	2	True				
ANR	6416279	CallExpression	exit ( EXIT_FAILURE )		6416016	0					
ANR	6416280	Callee	exit		6416016	0					
ANR	6416281	Identifier	exit		6416016	0					
ANR	6416282	ArgumentList	EXIT_FAILURE		6416016	1					
ANR	6416283	Argument	EXIT_FAILURE		6416016	0					
ANR	6416284	Identifier	EXIT_FAILURE		6416016	0					
ANR	6416285	IfStatement	if ( guest_info -> has_reserved_memory && ( machine -> ram_size < machine -> maxram_size ) )		6416016	16					
ANR	6416286	Condition	guest_info -> has_reserved_memory && ( machine -> ram_size < machine -> maxram_size )	103:8:2229:2314	6416016	0	True				
ANR	6416287	AndExpression	guest_info -> has_reserved_memory && ( machine -> ram_size < machine -> maxram_size )		6416016	0		&&			
ANR	6416288	PtrMemberAccess	guest_info -> has_reserved_memory		6416016	0					
ANR	6416289	Identifier	guest_info		6416016	0					
ANR	6416290	Identifier	has_reserved_memory		6416016	1					
ANR	6416291	RelationalExpression	machine -> ram_size < machine -> maxram_size		6416016	1		<			
ANR	6416292	PtrMemberAccess	machine -> ram_size		6416016	0					
ANR	6416293	Identifier	machine		6416016	0					
ANR	6416294	Identifier	ram_size		6416016	1					
ANR	6416295	PtrMemberAccess	machine -> maxram_size		6416016	1					
ANR	6416296	Identifier	machine		6416016	0					
ANR	6416297	Identifier	maxram_size		6416016	1					
ANR	6416298	CompoundStatement		97:8:2058:2141	6416016	1					
ANR	6416299	IdentifierDeclStatement	ram_addr_t hotplug_mem_size = machine -> maxram_size - machine -> ram_size ;	107:8:2328:2411	6416016	0	True				
ANR	6416300	IdentifierDecl	hotplug_mem_size = machine -> maxram_size - machine -> ram_size		6416016	0					
ANR	6416301	IdentifierDeclType	ram_addr_t		6416016	0					
ANR	6416302	Identifier	hotplug_mem_size		6416016	1					
ANR	6416303	AssignmentExpression	hotplug_mem_size = machine -> maxram_size - machine -> ram_size		6416016	2		=			
ANR	6416304	Identifier	hotplug_mem_size		6416016	0					
ANR	6416305	AdditiveExpression	machine -> maxram_size - machine -> ram_size		6416016	1		-			
ANR	6416306	PtrMemberAccess	machine -> maxram_size		6416016	0					
ANR	6416307	Identifier	machine		6416016	0					
ANR	6416308	Identifier	maxram_size		6416016	1					
ANR	6416309	PtrMemberAccess	machine -> ram_size		6416016	1					
ANR	6416310	Identifier	machine		6416016	0					
ANR	6416311	Identifier	ram_size		6416016	1					
ANR	6416312	IfStatement	if ( machine -> ram_slots > ACPI_MAX_RAM_SLOTS )		6416016	1					
ANR	6416313	Condition	machine -> ram_slots > ACPI_MAX_RAM_SLOTS	113:12:2428:2466	6416016	0	True				
ANR	6416314	RelationalExpression	machine -> ram_slots > ACPI_MAX_RAM_SLOTS		6416016	0		>			
ANR	6416315	PtrMemberAccess	machine -> ram_slots		6416016	0					
ANR	6416316	Identifier	machine		6416016	0					
ANR	6416317	Identifier	ram_slots		6416016	1					
ANR	6416318	Identifier	ACPI_MAX_RAM_SLOTS		6416016	1					
ANR	6416319	CompoundStatement		103:53:2199:2199	6416016	1					
ANR	6416320	Statement	error_report	115:12:2484:2495	6416016	0	True				
ANR	6416321	Statement	(	115:24:2496:2496	6416016	1	True				
ANR	6416322	Statement	"""unsupported amount of memory slots: %"""	115:25:2497:2535	6416016	2	True				
ANR	6416323	Statement	PRIu64	115:64:2536:2541	6416016	3	True				
ANR	6416324	Statement	","	115:70:2542:2542	6416016	4	True				
ANR	6416325	Statement	machine	117:25:2570:2576	6416016	5	True				
ANR	6416326	Statement	->	117:32:2577:2578	6416016	6	True				
ANR	6416327	Statement	ram_slots	117:34:2579:2587	6416016	7	True				
ANR	6416328	Statement	)	117:43:2588:2588	6416016	8	True				
ANR	6416329	ExpressionStatement		117:44:2589:2589	6416016	9	True				
ANR	6416330	ExpressionStatement	exit ( EXIT_FAILURE )	119:12:2604:2622	6416016	10	True				
ANR	6416331	CallExpression	exit ( EXIT_FAILURE )		6416016	0					
ANR	6416332	Callee	exit		6416016	0					
ANR	6416333	Identifier	exit		6416016	0					
ANR	6416334	ArgumentList	EXIT_FAILURE		6416016	1					
ANR	6416335	Argument	EXIT_FAILURE		6416016	0					
ANR	6416336	Identifier	EXIT_FAILURE		6416016	0					
ANR	6416337	IfStatement	"if ( QEMU_ALIGN_UP ( machine -> maxram_size , TARGET_PAGE_SIZE ) != machine -> maxram_size )"		6416016	2					
ANR	6416338	Condition	"QEMU_ALIGN_UP ( machine -> maxram_size , TARGET_PAGE_SIZE ) != machine -> maxram_size"	125:12:2650:2753	6416016	0	True				
ANR	6416339	EqualityExpression	"QEMU_ALIGN_UP ( machine -> maxram_size , TARGET_PAGE_SIZE ) != machine -> maxram_size"		6416016	0		!=			
ANR	6416340	CallExpression	"QEMU_ALIGN_UP ( machine -> maxram_size , TARGET_PAGE_SIZE )"		6416016	0					
ANR	6416341	Callee	QEMU_ALIGN_UP		6416016	0					
ANR	6416342	Identifier	QEMU_ALIGN_UP		6416016	0					
ANR	6416343	ArgumentList	machine -> maxram_size		6416016	1					
ANR	6416344	Argument	machine -> maxram_size		6416016	0					
ANR	6416345	PtrMemberAccess	machine -> maxram_size		6416016	0					
ANR	6416346	Identifier	machine		6416016	0					
ANR	6416347	Identifier	maxram_size		6416016	1					
ANR	6416348	Argument	TARGET_PAGE_SIZE		6416016	1					
ANR	6416349	Identifier	TARGET_PAGE_SIZE		6416016	0					
ANR	6416350	PtrMemberAccess	machine -> maxram_size		6416016	1					
ANR	6416351	Identifier	machine		6416016	0					
ANR	6416352	Identifier	maxram_size		6416016	1					
ANR	6416353	CompoundStatement		117:69:2486:2486	6416016	1					
ANR	6416354	Statement	error_report	129:12:2771:2782	6416016	0	True				
ANR	6416355	Statement	(	129:24:2783:2783	6416016	1	True				
ANR	6416356	Statement	"""maximum memory size must by aligned to multiple of """	129:25:2784:2836	6416016	2	True				
ANR	6416357	Statement	"""%d bytes"""	131:25:2864:2873	6416016	3	True				
ANR	6416358	Statement	","	131:35:2874:2874	6416016	4	True				
ANR	6416359	Statement	TARGET_PAGE_SIZE	131:37:2876:2891	6416016	5	True				
ANR	6416360	Statement	)	131:53:2892:2892	6416016	6	True				
ANR	6416361	ExpressionStatement		131:54:2893:2893	6416016	7	True				
ANR	6416362	ExpressionStatement	exit ( EXIT_FAILURE )	133:12:2908:2926	6416016	8	True				
ANR	6416363	CallExpression	exit ( EXIT_FAILURE )		6416016	0					
ANR	6416364	Callee	exit		6416016	0					
ANR	6416365	Identifier	exit		6416016	0					
ANR	6416366	ArgumentList	EXIT_FAILURE		6416016	1					
ANR	6416367	Argument	EXIT_FAILURE		6416016	0					
ANR	6416368	Identifier	EXIT_FAILURE		6416016	0					
ANR	6416369	Statement	pcms	139:8:2950:2953	6416016	3	True				
ANR	6416370	Statement	->	139:12:2954:2955	6416016	4	True				
ANR	6416371	Statement	hotplug_memory	139:14:2956:2969	6416016	5	True				
ANR	6416372	Statement	.	139:28:2970:2970	6416016	6	True				
ANR	6416373	Statement	base	139:29:2971:2974	6416016	7	True				
ANR	6416374	Statement	=	139:34:2976:2976	6416016	8	True				
ANR	6416375	Statement	ROUND_UP	141:12:2991:2998	6416016	9	True				
ANR	6416376	Statement	(	141:20:2999:2999	6416016	10	True				
ANR	6416377	Statement	0x100000000UL	141:21:3000:3012	6416016	11	True				
ANR	6416378	Statement	L	141:34:3013:3013	6416016	12	True				
ANR	6416379	Statement	+	141:36:3015:3015	6416016	13	True				
ANR	6416380	Statement	pcms	141:38:3017:3020	6416016	14	True				
ANR	6416381	Statement	->	141:42:3021:3022	6416016	15	True				
ANR	6416382	Statement	above_4g_mem_size	141:44:3023:3039	6416016	16	True				
ANR	6416383	Statement	","	141:61:3040:3040	6416016	17	True				
ANR	6416384	Statement	1UL	141:63:3042:3044	6416016	18	True				
ANR	6416385	Statement	L	141:66:3045:3045	6416016	19	True				
ANR	6416386	Statement	<<	141:68:3047:3048	6416016	20	True				
ANR	6416387	Statement	30	141:71:3050:3051	6416016	21	True				
ANR	6416388	Statement	)	141:73:3052:3052	6416016	22	True				
ANR	6416389	ExpressionStatement		141:74:3053:3053	6416016	23	True				
ANR	6416390	IfStatement	if ( pcms -> enforce_aligned_dimm )		6416016	24					
ANR	6416391	Condition	pcms -> enforce_aligned_dimm	145:12:3070:3095	6416016	0	True				
ANR	6416392	PtrMemberAccess	pcms -> enforce_aligned_dimm		6416016	0					
ANR	6416393	Identifier	pcms		6416016	0					
ANR	6416394	Identifier	enforce_aligned_dimm		6416016	1					
ANR	6416395	CompoundStatement		135:40:2828:2828	6416016	1					
ANR	6416396	Statement	hotplug_mem_size	149:12:3192:3207	6416016	0	True				
ANR	6416397	Statement	+=	149:29:3209:3210	6416016	1	True				
ANR	6416398	Statement	(	149:32:3212:3212	6416016	2	True				
ANR	6416399	Statement	1UL	149:33:3213:3215	6416016	3	True				
ANR	6416400	Statement	L	149:36:3216:3216	6416016	4	True				
ANR	6416401	Statement	<<	149:38:3218:3219	6416016	5	True				
ANR	6416402	Statement	30	149:41:3221:3222	6416016	6	True				
ANR	6416403	Statement	)	149:43:3223:3223	6416016	7	True				
ANR	6416404	ExpressionStatement	* machine -> ram_slots	149:45:3225:3245	6416016	8	True				
ANR	6416405	UnaryOperationExpression	* machine -> ram_slots		6416016	0					
ANR	6416406	UnaryOperator	*		6416016	0					
ANR	6416407	PtrMemberAccess	machine -> ram_slots		6416016	1					
ANR	6416408	Identifier	machine		6416016	0					
ANR	6416409	Identifier	ram_slots		6416016	1					
ANR	6416410	IfStatement	if ( ( pcms -> hotplug_memory . base + hotplug_mem_size ) < hotplug_mem_size )		6416016	25					
ANR	6416411	Condition	( pcms -> hotplug_memory . base + hotplug_mem_size ) < hotplug_mem_size	155:12:3273:3350	6416016	0	True				
ANR	6416412	RelationalExpression	( pcms -> hotplug_memory . base + hotplug_mem_size ) < hotplug_mem_size		6416016	0		<			
ANR	6416413	AdditiveExpression	pcms -> hotplug_memory . base + hotplug_mem_size		6416016	0		+			
ANR	6416414	MemberAccess	pcms -> hotplug_memory . base		6416016	0					
ANR	6416415	PtrMemberAccess	pcms -> hotplug_memory		6416016	0					
ANR	6416416	Identifier	pcms		6416016	0					
ANR	6416417	Identifier	hotplug_memory		6416016	1					
ANR	6416418	Identifier	base		6416016	1					
ANR	6416419	Identifier	hotplug_mem_size		6416016	1					
ANR	6416420	Identifier	hotplug_mem_size		6416016	1					
ANR	6416421	CompoundStatement		147:30:3083:3083	6416016	1					
ANR	6416422	Statement	error_report	159:12:3368:3379	6416016	0	True				
ANR	6416423	Statement	(	159:24:3380:3380	6416016	1	True				
ANR	6416424	Statement	"""unsupported amount of maximum memory: """	159:25:3381:3420	6416016	2	True				
ANR	6416425	Statement	RAM_ADDR_FMT	159:66:3422:3433	6416016	3	True				
ANR	6416426	Statement	","	159:78:3434:3434	6416016	4	True				
ANR	6416427	Statement	machine	161:25:3462:3468	6416016	5	True				
ANR	6416428	Statement	->	161:32:3469:3470	6416016	6	True				
ANR	6416429	Statement	maxram_size	161:34:3471:3481	6416016	7	True				
ANR	6416430	Statement	)	161:45:3482:3482	6416016	8	True				
ANR	6416431	ExpressionStatement		161:46:3483:3483	6416016	9	True				
ANR	6416432	ExpressionStatement	exit ( EXIT_FAILURE )	163:12:3498:3516	6416016	10	True				
ANR	6416433	CallExpression	exit ( EXIT_FAILURE )		6416016	0					
ANR	6416434	Callee	exit		6416016	0					
ANR	6416435	Identifier	exit		6416016	0					
ANR	6416436	ArgumentList	EXIT_FAILURE		6416016	1					
ANR	6416437	Argument	EXIT_FAILURE		6416016	0					
ANR	6416438	Identifier	EXIT_FAILURE		6416016	0					
ANR	6416439	ExpressionStatement	"memory_region_init ( & pcms -> hotplug_memory . mr , OBJECT ( pcms ) , ""hotplug-memory"" , hotplug_mem_size )"	169:8:3540:3662	6416016	26	True				
ANR	6416440	CallExpression	"memory_region_init ( & pcms -> hotplug_memory . mr , OBJECT ( pcms ) , ""hotplug-memory"" , hotplug_mem_size )"		6416016	0					
ANR	6416441	Callee	memory_region_init		6416016	0					
ANR	6416442	Identifier	memory_region_init		6416016	0					
ANR	6416443	ArgumentList	& pcms -> hotplug_memory . mr		6416016	1					
ANR	6416444	Argument	& pcms -> hotplug_memory . mr		6416016	0					
ANR	6416445	UnaryOperationExpression	& pcms -> hotplug_memory . mr		6416016	0					
ANR	6416446	UnaryOperator	&		6416016	0					
ANR	6416447	MemberAccess	pcms -> hotplug_memory . mr		6416016	1					
ANR	6416448	PtrMemberAccess	pcms -> hotplug_memory		6416016	0					
ANR	6416449	Identifier	pcms		6416016	0					
ANR	6416450	Identifier	hotplug_memory		6416016	1					
ANR	6416451	Identifier	mr		6416016	1					
ANR	6416452	Argument	OBJECT ( pcms )		6416016	1					
ANR	6416453	CallExpression	OBJECT ( pcms )		6416016	0					
ANR	6416454	Callee	OBJECT		6416016	0					
ANR	6416455	Identifier	OBJECT		6416016	0					
ANR	6416456	ArgumentList	pcms		6416016	1					
ANR	6416457	Argument	pcms		6416016	0					
ANR	6416458	Identifier	pcms		6416016	0					
ANR	6416459	Argument	"""hotplug-memory"""		6416016	2					
ANR	6416460	PrimaryExpression	"""hotplug-memory"""		6416016	0					
ANR	6416461	Argument	hotplug_mem_size		6416016	3					
ANR	6416462	Identifier	hotplug_mem_size		6416016	0					
ANR	6416463	ExpressionStatement	"memory_region_add_subregion ( system_memory , pcms -> hotplug_memory . base , & pcms -> hotplug_memory . mr )"	173:8:3673:3805	6416016	27	True				
ANR	6416464	CallExpression	"memory_region_add_subregion ( system_memory , pcms -> hotplug_memory . base , & pcms -> hotplug_memory . mr )"		6416016	0					
ANR	6416465	Callee	memory_region_add_subregion		6416016	0					
ANR	6416466	Identifier	memory_region_add_subregion		6416016	0					
ANR	6416467	ArgumentList	system_memory		6416016	1					
ANR	6416468	Argument	system_memory		6416016	0					
ANR	6416469	Identifier	system_memory		6416016	0					
ANR	6416470	Argument	pcms -> hotplug_memory . base		6416016	1					
ANR	6416471	MemberAccess	pcms -> hotplug_memory . base		6416016	0					
ANR	6416472	PtrMemberAccess	pcms -> hotplug_memory		6416016	0					
ANR	6416473	Identifier	pcms		6416016	0					
ANR	6416474	Identifier	hotplug_memory		6416016	1					
ANR	6416475	Identifier	base		6416016	1					
ANR	6416476	Argument	& pcms -> hotplug_memory . mr		6416016	2					
ANR	6416477	UnaryOperationExpression	& pcms -> hotplug_memory . mr		6416016	0					
ANR	6416478	UnaryOperator	&		6416016	0					
ANR	6416479	MemberAccess	pcms -> hotplug_memory . mr		6416016	1					
ANR	6416480	PtrMemberAccess	pcms -> hotplug_memory		6416016	0					
ANR	6416481	Identifier	pcms		6416016	0					
ANR	6416482	Identifier	hotplug_memory		6416016	1					
ANR	6416483	Identifier	mr		6416016	1					
ANR	6416484	ExpressionStatement	"pc_system_firmware_init ( rom_memory , guest_info -> isapc_ram_fw )"	183:4:3862:3923	6416016	17	True				
ANR	6416485	CallExpression	"pc_system_firmware_init ( rom_memory , guest_info -> isapc_ram_fw )"		6416016	0					
ANR	6416486	Callee	pc_system_firmware_init		6416016	0					
ANR	6416487	Identifier	pc_system_firmware_init		6416016	0					
ANR	6416488	ArgumentList	rom_memory		6416016	1					
ANR	6416489	Argument	rom_memory		6416016	0					
ANR	6416490	Identifier	rom_memory		6416016	0					
ANR	6416491	Argument	guest_info -> isapc_ram_fw		6416016	1					
ANR	6416492	PtrMemberAccess	guest_info -> isapc_ram_fw		6416016	0					
ANR	6416493	Identifier	guest_info		6416016	0					
ANR	6416494	Identifier	isapc_ram_fw		6416016	1					
ANR	6416495	ExpressionStatement	option_rom_mr = g_malloc ( sizeof ( * option_rom_mr ) )	187:4:3932:3980	6416016	18	True				
ANR	6416496	AssignmentExpression	option_rom_mr = g_malloc ( sizeof ( * option_rom_mr ) )		6416016	0		=			
ANR	6416497	Identifier	option_rom_mr		6416016	0					
ANR	6416498	CallExpression	g_malloc ( sizeof ( * option_rom_mr ) )		6416016	1					
ANR	6416499	Callee	g_malloc		6416016	0					
ANR	6416500	Identifier	g_malloc		6416016	0					
ANR	6416501	ArgumentList	sizeof ( * option_rom_mr )		6416016	1					
ANR	6416502	Argument	sizeof ( * option_rom_mr )		6416016	0					
ANR	6416503	SizeofExpression	sizeof ( * option_rom_mr )		6416016	0					
ANR	6416504	Sizeof	sizeof		6416016	0					
ANR	6416505	UnaryOperationExpression	* option_rom_mr		6416016	1					
ANR	6416506	UnaryOperator	*		6416016	0					
ANR	6416507	Identifier	option_rom_mr		6416016	1					
ANR	6416508	ExpressionStatement	"memory_region_init_ram ( option_rom_mr , NULL , ""pc.rom"" , PC_ROM_SIZE , & error_abort )"	189:4:3987:4095	6416016	19	True				
ANR	6416509	CallExpression	"memory_region_init_ram ( option_rom_mr , NULL , ""pc.rom"" , PC_ROM_SIZE , & error_abort )"		6416016	0					
ANR	6416510	Callee	memory_region_init_ram		6416016	0					
ANR	6416511	Identifier	memory_region_init_ram		6416016	0					
ANR	6416512	ArgumentList	option_rom_mr		6416016	1					
ANR	6416513	Argument	option_rom_mr		6416016	0					
ANR	6416514	Identifier	option_rom_mr		6416016	0					
ANR	6416515	Argument	NULL		6416016	1					
ANR	6416516	Identifier	NULL		6416016	0					
ANR	6416517	Argument	"""pc.rom"""		6416016	2					
ANR	6416518	PrimaryExpression	"""pc.rom"""		6416016	0					
ANR	6416519	Argument	PC_ROM_SIZE		6416016	3					
ANR	6416520	Identifier	PC_ROM_SIZE		6416016	0					
ANR	6416521	Argument	& error_abort		6416016	4					
ANR	6416522	UnaryOperationExpression	& error_abort		6416016	0					
ANR	6416523	UnaryOperator	&		6416016	0					
ANR	6416524	Identifier	error_abort		6416016	1					
ANR	6416525	ExpressionStatement	vmstate_register_ram_global ( option_rom_mr )	193:4:4102:4144	6416016	20	True				
ANR	6416526	CallExpression	vmstate_register_ram_global ( option_rom_mr )		6416016	0					
ANR	6416527	Callee	vmstate_register_ram_global		6416016	0					
ANR	6416528	Identifier	vmstate_register_ram_global		6416016	0					
ANR	6416529	ArgumentList	option_rom_mr		6416016	1					
ANR	6416530	Argument	option_rom_mr		6416016	0					
ANR	6416531	Identifier	option_rom_mr		6416016	0					
ANR	6416532	ExpressionStatement	"memory_region_add_subregion_overlap ( rom_memory , PC_ROM_MIN_VGA , option_rom_mr , 1 )"	195:4:4151:4355	6416016	21	True				
ANR	6416533	CallExpression	"memory_region_add_subregion_overlap ( rom_memory , PC_ROM_MIN_VGA , option_rom_mr , 1 )"		6416016	0					
ANR	6416534	Callee	memory_region_add_subregion_overlap		6416016	0					
ANR	6416535	Identifier	memory_region_add_subregion_overlap		6416016	0					
ANR	6416536	ArgumentList	rom_memory		6416016	1					
ANR	6416537	Argument	rom_memory		6416016	0					
ANR	6416538	Identifier	rom_memory		6416016	0					
ANR	6416539	Argument	PC_ROM_MIN_VGA		6416016	1					
ANR	6416540	Identifier	PC_ROM_MIN_VGA		6416016	0					
ANR	6416541	Argument	option_rom_mr		6416016	2					
ANR	6416542	Identifier	option_rom_mr		6416016	0					
ANR	6416543	Argument	1		6416016	3					
ANR	6416544	PrimaryExpression	1		6416016	0					
ANR	6416545	ExpressionStatement	fw_cfg = bochs_bios_init ( )	205:4:4364:4390	6416016	22	True				
ANR	6416546	AssignmentExpression	fw_cfg = bochs_bios_init ( )		6416016	0		=			
ANR	6416547	Identifier	fw_cfg		6416016	0					
ANR	6416548	CallExpression	bochs_bios_init ( )		6416016	1					
ANR	6416549	Callee	bochs_bios_init		6416016	0					
ANR	6416550	Identifier	bochs_bios_init		6416016	0					
ANR	6416551	ArgumentList			6416016	1					
ANR	6416552	ExpressionStatement	rom_set_fw ( fw_cfg )	207:4:4397:4415	6416016	23	True				
ANR	6416553	CallExpression	rom_set_fw ( fw_cfg )		6416016	0					
ANR	6416554	Callee	rom_set_fw		6416016	0					
ANR	6416555	Identifier	rom_set_fw		6416016	0					
ANR	6416556	ArgumentList	fw_cfg		6416016	1					
ANR	6416557	Argument	fw_cfg		6416016	0					
ANR	6416558	Identifier	fw_cfg		6416016	0					
ANR	6416559	IfStatement	if ( guest_info -> has_reserved_memory && pcms -> hotplug_memory . base )		6416016	24					
ANR	6416560	Condition	guest_info -> has_reserved_memory && pcms -> hotplug_memory . base	211:8:4428:4487	6416016	0	True				
ANR	6416561	AndExpression	guest_info -> has_reserved_memory && pcms -> hotplug_memory . base		6416016	0		&&			
ANR	6416562	PtrMemberAccess	guest_info -> has_reserved_memory		6416016	0					
ANR	6416563	Identifier	guest_info		6416016	0					
ANR	6416564	Identifier	has_reserved_memory		6416016	1					
ANR	6416565	MemberAccess	pcms -> hotplug_memory . base		6416016	1					
ANR	6416566	PtrMemberAccess	pcms -> hotplug_memory		6416016	0					
ANR	6416567	Identifier	pcms		6416016	0					
ANR	6416568	Identifier	hotplug_memory		6416016	1					
ANR	6416569	Identifier	base		6416016	1					
ANR	6416570	CompoundStatement		205:8:4280:4407	6416016	1					
ANR	6416571	IdentifierDeclStatement	uint64_t * val = g_malloc ( sizeof ( * val ) ) ;	213:8:4501:4539	6416016	0	True				
ANR	6416572	IdentifierDecl	* val = g_malloc ( sizeof ( * val ) )		6416016	0					
ANR	6416573	IdentifierDeclType	uint64_t *		6416016	0					
ANR	6416574	Identifier	val		6416016	1					
ANR	6416575	AssignmentExpression	* val = g_malloc ( sizeof ( * val ) )		6416016	2		=			
ANR	6416576	Identifier	val		6416016	0					
ANR	6416577	CallExpression	g_malloc ( sizeof ( * val ) )		6416016	1					
ANR	6416578	Callee	g_malloc		6416016	0					
ANR	6416579	Identifier	g_malloc		6416016	0					
ANR	6416580	ArgumentList	sizeof ( * val )		6416016	1					
ANR	6416581	Argument	sizeof ( * val )		6416016	0					
ANR	6416582	SizeofExpression	sizeof ( * val )		6416016	0					
ANR	6416583	Sizeof	sizeof		6416016	0					
ANR	6416584	UnaryOperationExpression	* val		6416016	1					
ANR	6416585	UnaryOperator	*		6416016	0					
ANR	6416586	Identifier	val		6416016	1					
ANR	6416587	IdentifierDeclStatement	uint64_t res_mem_end = pcms -> hotplug_memory . base + memory_region_size ( & pcms -> hotplug_memory . mr ) ;	215:8:4550:4677	6416016	1	True				
ANR	6416588	IdentifierDecl	res_mem_end = pcms -> hotplug_memory . base + memory_region_size ( & pcms -> hotplug_memory . mr )		6416016	0					
ANR	6416589	IdentifierDeclType	uint64_t		6416016	0					
ANR	6416590	Identifier	res_mem_end		6416016	1					
ANR	6416591	AssignmentExpression	res_mem_end = pcms -> hotplug_memory . base + memory_region_size ( & pcms -> hotplug_memory . mr )		6416016	2		=			
ANR	6416592	Identifier	res_mem_end		6416016	0					
ANR	6416593	AdditiveExpression	pcms -> hotplug_memory . base + memory_region_size ( & pcms -> hotplug_memory . mr )		6416016	1		+			
ANR	6416594	MemberAccess	pcms -> hotplug_memory . base		6416016	0					
ANR	6416595	PtrMemberAccess	pcms -> hotplug_memory		6416016	0					
ANR	6416596	Identifier	pcms		6416016	0					
ANR	6416597	Identifier	hotplug_memory		6416016	1					
ANR	6416598	Identifier	base		6416016	1					
ANR	6416599	CallExpression	memory_region_size ( & pcms -> hotplug_memory . mr )		6416016	1					
ANR	6416600	Callee	memory_region_size		6416016	0					
ANR	6416601	Identifier	memory_region_size		6416016	0					
ANR	6416602	ArgumentList	& pcms -> hotplug_memory . mr		6416016	1					
ANR	6416603	Argument	& pcms -> hotplug_memory . mr		6416016	0					
ANR	6416604	UnaryOperationExpression	& pcms -> hotplug_memory . mr		6416016	0					
ANR	6416605	UnaryOperator	&		6416016	0					
ANR	6416606	MemberAccess	pcms -> hotplug_memory . mr		6416016	1					
ANR	6416607	PtrMemberAccess	pcms -> hotplug_memory		6416016	0					
ANR	6416608	Identifier	pcms		6416016	0					
ANR	6416609	Identifier	hotplug_memory		6416016	1					
ANR	6416610	Identifier	mr		6416016	1					
ANR	6416611	Statement	*	219:8:4688:4688	6416016	2	True				
ANR	6416612	Statement	val	219:9:4689:4691	6416016	3	True				
ANR	6416613	Statement	=	219:13:4693:4693	6416016	4	True				
ANR	6416614	Statement	cpu_to_le64	219:15:4695:4705	6416016	5	True				
ANR	6416615	Statement	(	219:26:4706:4706	6416016	6	True				
ANR	6416616	Statement	ROUND_UP	219:27:4707:4714	6416016	7	True				
ANR	6416617	Statement	(	219:35:4715:4715	6416016	8	True				
ANR	6416618	Statement	res_mem_end	219:36:4716:4726	6416016	9	True				
ANR	6416619	Statement	","	219:47:4727:4727	6416016	10	True				
ANR	6416620	Statement	0x1UL	219:49:4729:4733	6416016	11	True				
ANR	6416621	Statement	L	219:54:4734:4734	6416016	12	True				
ANR	6416622	Statement	<<	219:56:4736:4737	6416016	13	True				
ANR	6416623	Statement	30	219:59:4739:4740	6416016	14	True				
ANR	6416624	Statement	)	219:61:4741:4741	6416016	15	True				
ANR	6416625	Statement	)	219:62:4742:4742	6416016	16	True				
ANR	6416626	ExpressionStatement		219:63:4743:4743	6416016	17	True				
ANR	6416627	ExpressionStatement	"fw_cfg_add_file ( fw_cfg , ""etc/reserved-memory-end"" , val , sizeof ( * val ) )"	221:8:4754:4823	6416016	18	True				
ANR	6416628	CallExpression	"fw_cfg_add_file ( fw_cfg , ""etc/reserved-memory-end"" , val , sizeof ( * val ) )"		6416016	0					
ANR	6416629	Callee	fw_cfg_add_file		6416016	0					
ANR	6416630	Identifier	fw_cfg_add_file		6416016	0					
ANR	6416631	ArgumentList	fw_cfg		6416016	1					
ANR	6416632	Argument	fw_cfg		6416016	0					
ANR	6416633	Identifier	fw_cfg		6416016	0					
ANR	6416634	Argument	"""etc/reserved-memory-end"""		6416016	1					
ANR	6416635	PrimaryExpression	"""etc/reserved-memory-end"""		6416016	0					
ANR	6416636	Argument	val		6416016	2					
ANR	6416637	Identifier	val		6416016	0					
ANR	6416638	Argument	sizeof ( * val )		6416016	3					
ANR	6416639	SizeofExpression	sizeof ( * val )		6416016	0					
ANR	6416640	Sizeof	sizeof		6416016	0					
ANR	6416641	UnaryOperationExpression	* val		6416016	1					
ANR	6416642	UnaryOperator	*		6416016	0					
ANR	6416643	Identifier	val		6416016	1					
ANR	6416644	IfStatement	if ( linux_boot )		6416016	25					
ANR	6416645	Condition	linux_boot	227:8:4843:4852	6416016	0	True				
ANR	6416646	Identifier	linux_boot		6416016	0					
ANR	6416647	CompoundStatement		217:20:4585:4585	6416016	1					
ANR	6416648	ExpressionStatement	"load_linux ( pcms , fw_cfg )"	229:8:4866:4890	6416016	0	True				
ANR	6416649	CallExpression	"load_linux ( pcms , fw_cfg )"		6416016	0					
ANR	6416650	Callee	load_linux		6416016	0					
ANR	6416651	Identifier	load_linux		6416016	0					
ANR	6416652	ArgumentList	pcms		6416016	1					
ANR	6416653	Argument	pcms		6416016	0					
ANR	6416654	Identifier	pcms		6416016	0					
ANR	6416655	Argument	fw_cfg		6416016	1					
ANR	6416656	Identifier	fw_cfg		6416016	0					
ANR	6416657	ForStatement	for ( i = 0 ; i < nb_option_roms ; i ++ )		6416016	26					
ANR	6416658	ForInit	i = 0 ;	235:9:4911:4916	6416016	0	True				
ANR	6416659	AssignmentExpression	i = 0		6416016	0		=			
ANR	6416660	Identifier	i		6416016	0					
ANR	6416661	PrimaryExpression	0		6416016	1					
ANR	6416662	Condition	i < nb_option_roms	235:16:4918:4935	6416016	1	True				
ANR	6416663	RelationalExpression	i < nb_option_roms		6416016	0		<			
ANR	6416664	Identifier	i		6416016	0					
ANR	6416665	Identifier	nb_option_roms		6416016	1					
ANR	6416666	PostIncDecOperationExpression	i ++	235:36:4938:4940	6416016	2	True				
ANR	6416667	Identifier	i		6416016	0					
ANR	6416668	IncDec	++		6416016	1					
ANR	6416669	CompoundStatement		225:41:4673:4673	6416016	3					
ANR	6416670	ExpressionStatement	"rom_add_option ( option_rom [ i ] . name , option_rom [ i ] . bootindex )"	237:8:4954:5013	6416016	0	True				
ANR	6416671	CallExpression	"rom_add_option ( option_rom [ i ] . name , option_rom [ i ] . bootindex )"		6416016	0					
ANR	6416672	Callee	rom_add_option		6416016	0					
ANR	6416673	Identifier	rom_add_option		6416016	0					
ANR	6416674	ArgumentList	option_rom [ i ] . name		6416016	1					
ANR	6416675	Argument	option_rom [ i ] . name		6416016	0					
ANR	6416676	MemberAccess	option_rom [ i ] . name		6416016	0					
ANR	6416677	ArrayIndexing	option_rom [ i ]		6416016	0					
ANR	6416678	Identifier	option_rom		6416016	0					
ANR	6416679	Identifier	i		6416016	1					
ANR	6416680	Identifier	name		6416016	1					
ANR	6416681	Argument	option_rom [ i ] . bootindex		6416016	1					
ANR	6416682	MemberAccess	option_rom [ i ] . bootindex		6416016	0					
ANR	6416683	ArrayIndexing	option_rom [ i ]		6416016	0					
ANR	6416684	Identifier	option_rom		6416016	0					
ANR	6416685	Identifier	i		6416016	1					
ANR	6416686	Identifier	bootindex		6416016	1					
ANR	6416687	ExpressionStatement	guest_info -> fw_cfg = fw_cfg	241:4:5027:5054	6416016	27	True				
ANR	6416688	AssignmentExpression	guest_info -> fw_cfg = fw_cfg		6416016	0		=			
ANR	6416689	PtrMemberAccess	guest_info -> fw_cfg		6416016	0					
ANR	6416690	Identifier	guest_info		6416016	0					
ANR	6416691	Identifier	fw_cfg		6416016	1					
ANR	6416692	Identifier	fw_cfg		6416016	1					
ANR	6416693	ReturnStatement	return fw_cfg ;	243:4:5061:5074	6416016	28	True				
ANR	6416694	Identifier	fw_cfg		6416016	0					
ANR	6416695	ReturnType	FWCfgState *		6416016	1					
ANR	6416696	Identifier	pc_memory_init		6416016	2					
ANR	6416697	ParameterList	"PCMachineState * pcms , MemoryRegion * system_memory , MemoryRegion * rom_memory , MemoryRegion * * ram_memory , PcGuestInfo * guest_info"		6416016	3					
ANR	6416698	Parameter	PCMachineState * pcms	1:27:27:46	6416016	0	True				
ANR	6416699	ParameterType	PCMachineState *		6416016	0					
ANR	6416700	Identifier	pcms		6416016	1					
ANR	6416701	Parameter	MemoryRegion * system_memory	3:27:77:103	6416016	1	True				
ANR	6416702	ParameterType	MemoryRegion *		6416016	0					
ANR	6416703	Identifier	system_memory		6416016	1					
ANR	6416704	Parameter	MemoryRegion * rom_memory	5:27:134:157	6416016	2	True				
ANR	6416705	ParameterType	MemoryRegion *		6416016	0					
ANR	6416706	Identifier	rom_memory		6416016	1					
ANR	6416707	Parameter	MemoryRegion * * ram_memory	7:27:188:212	6416016	3	True				
ANR	6416708	ParameterType	MemoryRegion * *		6416016	0					
ANR	6416709	Identifier	ram_memory		6416016	1					
ANR	6416710	Parameter	PcGuestInfo * guest_info	9:27:243:265	6416016	4	True				
ANR	6416711	ParameterType	PcGuestInfo *		6416016	0					
ANR	6416712	Identifier	guest_info		6416016	1					
ANR	6416713	CFGEntryNode	ENTRY		6416016		True				
ANR	6416714	CFGExitNode	EXIT		6416016		True				
ANR	6416715	Symbol	& pcms -> hotplug_memory		6416016						
ANR	6416716	Symbol	option_rom_mr		6416016						
ANR	6416717	Symbol	memory_region_size		6416016						
ANR	6416718	Symbol	option_rom [ i ] . bootindex		6416016						
ANR	6416719	Symbol	* ram_memory		6416016						
ANR	6416720	Symbol	mc -> name		6416016						
ANR	6416721	Symbol	MACHINE_GET_CLASS		6416016						
ANR	6416722	Symbol	mc		6416016						
ANR	6416723	Symbol	ram_below_4g		6416016						
ANR	6416724	Symbol	guest_info -> isapc_ram_fw		6416016						
ANR	6416725	Symbol	PC_ROM_MIN_VGA		6416016						
ANR	6416726	Symbol	ram		6416016						
ANR	6416727	Symbol	val		6416016						
ANR	6416728	Symbol	nb_option_roms		6416016						
ANR	6416729	Symbol	rom_memory		6416016						
ANR	6416730	Symbol	NULL		6416016						
ANR	6416731	Symbol	* option_rom		6416016						
ANR	6416732	Symbol	pcms -> hotplug_memory . base		6416016						
ANR	6416733	Symbol	TARGET_PAGE_SIZE		6416016						
ANR	6416734	Symbol	OBJECT		6416016						
ANR	6416735	Symbol	* pcms		6416016						
ANR	6416736	Symbol	fw_cfg		6416016						
ANR	6416737	Symbol	pcms -> enforce_aligned_dimm		6416016						
ANR	6416738	Symbol	EXIT_FAILURE		6416016						
ANR	6416739	Symbol	* option_rom_mr		6416016						
ANR	6416740	Symbol	* machine		6416016						
ANR	6416741	Symbol	guest_info		6416016						
ANR	6416742	Symbol	* ram		6416016						
ANR	6416743	Symbol	hotplug_mem_size		6416016						
ANR	6416744	Symbol	ACPI_MAX_RAM_SLOTS		6416016						
ANR	6416745	Symbol	* val		6416016						
ANR	6416746	Symbol	pcms -> below_4g_mem_size		6416016						
ANR	6416747	Symbol	machine -> ram_size		6416016						
ANR	6416748	Symbol	guest_info -> has_reserved_memory		6416016						
ANR	6416749	Symbol	option_rom [ i ] . name		6416016						
ANR	6416750	Symbol	g_malloc		6416016						
ANR	6416751	Symbol	pcms -> hotplug_memory		6416016						
ANR	6416752	Symbol	machine -> kernel_filename		6416016						
ANR	6416753	Symbol	QEMU_ALIGN_UP		6416016						
ANR	6416754	Symbol	machine -> maxram_size		6416016						
ANR	6416755	Symbol	MACHINE		6416016						
ANR	6416756	Symbol	* guest_info		6416016						
ANR	6416757	Symbol	* mc		6416016						
ANR	6416758	Symbol	* ram_below_4g		6416016						
ANR	6416759	Symbol	E820_RAM		6416016						
ANR	6416760	Symbol	option_rom		6416016						
ANR	6416761	Symbol	& error_abort		6416016						
ANR	6416762	Symbol	i		6416016						
ANR	6416763	Symbol	linux_boot		6416016						
ANR	6416764	Symbol	ram_above_4g		6416016						
ANR	6416765	Symbol	pcms		6416016						
ANR	6416766	Symbol	bochs_bios_init		6416016						
ANR	6416767	Symbol	* ram_above_4g		6416016						
ANR	6416768	Symbol	* i		6416016						
ANR	6416769	Symbol	PC_ROM_SIZE		6416016						
ANR	6416770	Symbol	machine		6416016						
ANR	6416771	Symbol	ram_memory		6416016						
ANR	6416772	Symbol	pcms -> above_4g_mem_size		6416016						
ANR	6416773	Symbol	system_memory		6416016						
ANR	6416774	Symbol	& pcms -> hotplug_memory . mr		6416016						
ANR	6416775	Symbol	guest_info -> fw_cfg		6416016						
ANR	6416776	Symbol	machine -> ram_slots		6416016						
ANR	6416777	Symbol	res_mem_end		6416016						
