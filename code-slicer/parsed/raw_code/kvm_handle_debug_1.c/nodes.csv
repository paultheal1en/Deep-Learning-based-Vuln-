command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5121262	File	/home/p4ultr4n/workplace/ReVeal/raw_code/kvm_handle_debug_1.c								
ANR	5121263	Function	kvm_handle_debug	1:0:0:1176							
ANR	5121264	FunctionDef	"kvm_handle_debug (PowerPCCPU * cpu , struct kvm_run * run)"		5121263	0					
ANR	5121265	CompoundStatement		3:0:67:1176	5121263	0					
ANR	5121266	IdentifierDeclStatement	CPUState * cs = CPU ( cpu ) ;	5:4:74:97	5121263	0	True				
ANR	5121267	IdentifierDecl	* cs = CPU ( cpu )		5121263	0					
ANR	5121268	IdentifierDeclType	CPUState *		5121263	0					
ANR	5121269	Identifier	cs		5121263	1					
ANR	5121270	AssignmentExpression	* cs = CPU ( cpu )		5121263	2		=			
ANR	5121271	Identifier	cs		5121263	0					
ANR	5121272	CallExpression	CPU ( cpu )		5121263	1					
ANR	5121273	Callee	CPU		5121263	0					
ANR	5121274	Identifier	CPU		5121263	0					
ANR	5121275	ArgumentList	cpu		5121263	1					
ANR	5121276	Argument	cpu		5121263	0					
ANR	5121277	Identifier	cpu		5121263	0					
ANR	5121278	IdentifierDeclStatement	CPUPPCState * env = & cpu -> env ;	7:4:104:132	5121263	1	True				
ANR	5121279	IdentifierDecl	* env = & cpu -> env		5121263	0					
ANR	5121280	IdentifierDeclType	CPUPPCState *		5121263	0					
ANR	5121281	Identifier	env		5121263	1					
ANR	5121282	AssignmentExpression	* env = & cpu -> env		5121263	2		=			
ANR	5121283	Identifier	env		5121263	0					
ANR	5121284	UnaryOperationExpression	& cpu -> env		5121263	1					
ANR	5121285	UnaryOperator	&		5121263	0					
ANR	5121286	PtrMemberAccess	cpu -> env		5121263	1					
ANR	5121287	Identifier	cpu		5121263	0					
ANR	5121288	Identifier	env		5121263	1					
ANR	5121289	IdentifierDeclStatement	struct kvm_debug_exit_arch * arch_info = & run -> debug . arch ;	9:4:139:195	5121263	2	True				
ANR	5121290	IdentifierDecl	* arch_info = & run -> debug . arch		5121263	0					
ANR	5121291	IdentifierDeclType	struct kvm_debug_exit_arch *		5121263	0					
ANR	5121292	Identifier	arch_info		5121263	1					
ANR	5121293	AssignmentExpression	* arch_info = & run -> debug . arch		5121263	2		=			
ANR	5121294	Identifier	arch_info		5121263	0					
ANR	5121295	UnaryOperationExpression	& run -> debug . arch		5121263	1					
ANR	5121296	UnaryOperator	&		5121263	0					
ANR	5121297	MemberAccess	run -> debug . arch		5121263	1					
ANR	5121298	PtrMemberAccess	run -> debug		5121263	0					
ANR	5121299	Identifier	run		5121263	0					
ANR	5121300	Identifier	debug		5121263	1					
ANR	5121301	Identifier	arch		5121263	1					
ANR	5121302	IdentifierDeclStatement	int handle = 0 ;	11:4:202:216	5121263	3	True				
ANR	5121303	IdentifierDecl	handle = 0		5121263	0					
ANR	5121304	IdentifierDeclType	int		5121263	0					
ANR	5121305	Identifier	handle		5121263	1					
ANR	5121306	AssignmentExpression	handle = 0		5121263	2		=			
ANR	5121307	Identifier	handle		5121263	0					
ANR	5121308	PrimaryExpression	0		5121263	1					
ANR	5121309	IfStatement	"if ( kvm_find_sw_breakpoint ( cs , arch_info -> address ) )"		5121263	4					
ANR	5121310	Condition	"kvm_find_sw_breakpoint ( cs , arch_info -> address )"	15:8:229:274	5121263	0	True				
ANR	5121311	CallExpression	"kvm_find_sw_breakpoint ( cs , arch_info -> address )"		5121263	0					
ANR	5121312	Callee	kvm_find_sw_breakpoint		5121263	0					
ANR	5121313	Identifier	kvm_find_sw_breakpoint		5121263	0					
ANR	5121314	ArgumentList	cs		5121263	1					
ANR	5121315	Argument	cs		5121263	0					
ANR	5121316	Identifier	cs		5121263	0					
ANR	5121317	Argument	arch_info -> address		5121263	1					
ANR	5121318	PtrMemberAccess	arch_info -> address		5121263	0					
ANR	5121319	Identifier	arch_info		5121263	0					
ANR	5121320	Identifier	address		5121263	1					
ANR	5121321	CompoundStatement		13:56:209:209	5121263	1					
ANR	5121322	ExpressionStatement	handle = 1	17:8:288:298	5121263	0	True				
ANR	5121323	AssignmentExpression	handle = 1		5121263	0		=			
ANR	5121324	Identifier	handle		5121263	0					
ANR	5121325	PrimaryExpression	1		5121263	1					
ANR	5121326	ElseStatement	else		5121263	0					
ANR	5121327	CompoundStatement		17:11:244:244	5121263	0					
ANR	5121328	ExpressionStatement	cpu_synchronize_state ( cs )	41:8:822:847	5121263	0	True				
ANR	5121329	CallExpression	cpu_synchronize_state ( cs )		5121263	0					
ANR	5121330	Callee	cpu_synchronize_state		5121263	0					
ANR	5121331	Identifier	cpu_synchronize_state		5121263	0					
ANR	5121332	ArgumentList	cs		5121263	1					
ANR	5121333	Argument	cs		5121263	0					
ANR	5121334	Identifier	cs		5121263	0					
ANR	5121335	ExpressionStatement	env -> nip += 4	49:8:996:1009	5121263	1	True				
ANR	5121336	AssignmentExpression	env -> nip += 4		5121263	0		+=			
ANR	5121337	PtrMemberAccess	env -> nip		5121263	0					
ANR	5121338	Identifier	env		5121263	0					
ANR	5121339	Identifier	nip		5121263	1					
ANR	5121340	PrimaryExpression	4		5121263	1					
ANR	5121341	ExpressionStatement	cs -> exception_index = POWERPC_EXCP_PROGRAM	51:8:1020:1062	5121263	2	True				
ANR	5121342	AssignmentExpression	cs -> exception_index = POWERPC_EXCP_PROGRAM		5121263	0		=			
ANR	5121343	PtrMemberAccess	cs -> exception_index		5121263	0					
ANR	5121344	Identifier	cs		5121263	0					
ANR	5121345	Identifier	exception_index		5121263	1					
ANR	5121346	Identifier	POWERPC_EXCP_PROGRAM		5121263	1					
ANR	5121347	ExpressionStatement	env -> error_code = POWERPC_EXCP_INVAL	53:8:1073:1109	5121263	3	True				
ANR	5121348	AssignmentExpression	env -> error_code = POWERPC_EXCP_INVAL		5121263	0		=			
ANR	5121349	PtrMemberAccess	env -> error_code		5121263	0					
ANR	5121350	Identifier	env		5121263	0					
ANR	5121351	Identifier	error_code		5121263	1					
ANR	5121352	Identifier	POWERPC_EXCP_INVAL		5121263	1					
ANR	5121353	ExpressionStatement	ppc_cpu_do_interrupt ( cs )	55:8:1120:1144	5121263	4	True				
ANR	5121354	CallExpression	ppc_cpu_do_interrupt ( cs )		5121263	0					
ANR	5121355	Callee	ppc_cpu_do_interrupt		5121263	0					
ANR	5121356	Identifier	ppc_cpu_do_interrupt		5121263	0					
ANR	5121357	ArgumentList	cs		5121263	1					
ANR	5121358	Argument	cs		5121263	0					
ANR	5121359	Identifier	cs		5121263	0					
ANR	5121360	ReturnStatement	return handle ;	61:4:1160:1173	5121263	5	True				
ANR	5121361	Identifier	handle		5121263	0					
ANR	5121362	ReturnType	static int		5121263	1					
ANR	5121363	Identifier	kvm_handle_debug		5121263	2					
ANR	5121364	ParameterList	"PowerPCCPU * cpu , struct kvm_run * run"		5121263	3					
ANR	5121365	Parameter	PowerPCCPU * cpu	1:28:28:42	5121263	0	True				
ANR	5121366	ParameterType	PowerPCCPU *		5121263	0					
ANR	5121367	Identifier	cpu		5121263	1					
ANR	5121368	Parameter	struct kvm_run * run	1:45:45:63	5121263	1	True				
ANR	5121369	ParameterType	struct kvm_run *		5121263	0					
ANR	5121370	Identifier	run		5121263	1					
ANR	5121371	CFGEntryNode	ENTRY		5121263		True				
ANR	5121372	CFGExitNode	EXIT		5121263		True				
ANR	5121373	Symbol	cs -> exception_index		5121263						
ANR	5121374	Symbol	& run -> debug . arch		5121263						
ANR	5121375	Symbol	* env		5121263						
ANR	5121376	Symbol	cpu		5121263						
ANR	5121377	Symbol	CPU		5121263						
ANR	5121378	Symbol	run		5121263						
ANR	5121379	Symbol	handle		5121263						
ANR	5121380	Symbol	env		5121263						
ANR	5121381	Symbol	env -> nip		5121263						
ANR	5121382	Symbol	POWERPC_EXCP_INVAL		5121263						
ANR	5121383	Symbol	cs		5121263						
ANR	5121384	Symbol	& cpu -> env		5121263						
ANR	5121385	Symbol	kvm_find_sw_breakpoint		5121263						
ANR	5121386	Symbol	POWERPC_EXCP_PROGRAM		5121263						
ANR	5121387	Symbol	env -> error_code		5121263						
ANR	5121388	Symbol	* run		5121263						
ANR	5121389	Symbol	* arch_info		5121263						
ANR	5121390	Symbol	* cs		5121263						
ANR	5121391	Symbol	arch_info		5121263						
ANR	5121392	Symbol	run -> debug		5121263						
ANR	5121393	Symbol	arch_info -> address		5121263						
ANR	5121394	Symbol	& run -> debug		5121263						
