command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3062003	File	/home/p4ultr4n/workplace/ReVeal/raw_code/envelope_peak16_0.c								
ANR	3062004	Function	envelope_peak16	1:0:0:2660							
ANR	3062005	FunctionDef	"envelope_peak16 (WaveformContext * s , AVFrame * out , int plane , int component)"		3062004	0					
ANR	3062006	CompoundStatement		3:0:89:2660	3062004	0					
ANR	3062007	IdentifierDeclStatement	const int dst_linesize = out -> linesize [ component ] / 2 ;	5:4:96:149	3062004	0	True				
ANR	3062008	IdentifierDecl	dst_linesize = out -> linesize [ component ] / 2		3062004	0					
ANR	3062009	IdentifierDeclType	const int		3062004	0					
ANR	3062010	Identifier	dst_linesize		3062004	1					
ANR	3062011	AssignmentExpression	dst_linesize = out -> linesize [ component ] / 2		3062004	2		=			
ANR	3062012	Identifier	dst_linesize		3062004	0					
ANR	3062013	MultiplicativeExpression	out -> linesize [ component ] / 2		3062004	1		/			
ANR	3062014	ArrayIndexing	out -> linesize [ component ]		3062004	0					
ANR	3062015	PtrMemberAccess	out -> linesize		3062004	0					
ANR	3062016	Identifier	out		3062004	0					
ANR	3062017	Identifier	linesize		3062004	1					
ANR	3062018	Identifier	component		3062004	1					
ANR	3062019	PrimaryExpression	2		3062004	1					
ANR	3062020	IdentifierDeclStatement	const int bg = s -> bg_color [ component ] * ( s -> size / 256 ) ;	7:4:156:211	3062004	1	True				
ANR	3062021	IdentifierDecl	bg = s -> bg_color [ component ] * ( s -> size / 256 )		3062004	0					
ANR	3062022	IdentifierDeclType	const int		3062004	0					
ANR	3062023	Identifier	bg		3062004	1					
ANR	3062024	AssignmentExpression	bg = s -> bg_color [ component ] * ( s -> size / 256 )		3062004	2		=			
ANR	3062025	Identifier	bg		3062004	0					
ANR	3062026	MultiplicativeExpression	s -> bg_color [ component ] * ( s -> size / 256 )		3062004	1		*			
ANR	3062027	ArrayIndexing	s -> bg_color [ component ]		3062004	0					
ANR	3062028	PtrMemberAccess	s -> bg_color		3062004	0					
ANR	3062029	Identifier	s		3062004	0					
ANR	3062030	Identifier	bg_color		3062004	1					
ANR	3062031	Identifier	component		3062004	1					
ANR	3062032	MultiplicativeExpression	s -> size / 256		3062004	1		/			
ANR	3062033	PtrMemberAccess	s -> size		3062004	0					
ANR	3062034	Identifier	s		3062004	0					
ANR	3062035	Identifier	size		3062004	1					
ANR	3062036	PrimaryExpression	256		3062004	1					
ANR	3062037	IdentifierDeclStatement	const int limit = s -> size - 1 ;	9:4:218:247	3062004	2	True				
ANR	3062038	IdentifierDecl	limit = s -> size - 1		3062004	0					
ANR	3062039	IdentifierDeclType	const int		3062004	0					
ANR	3062040	Identifier	limit		3062004	1					
ANR	3062041	AssignmentExpression	limit = s -> size - 1		3062004	2		=			
ANR	3062042	Identifier	limit		3062004	0					
ANR	3062043	AdditiveExpression	s -> size - 1		3062004	1		-			
ANR	3062044	PtrMemberAccess	s -> size		3062004	0					
ANR	3062045	Identifier	s		3062004	0					
ANR	3062046	Identifier	size		3062004	1					
ANR	3062047	PrimaryExpression	1		3062004	1					
ANR	3062048	IdentifierDeclStatement	const int is_chroma = ( component == 1 || component == 2 ) ;	11:4:254:310	3062004	3	True				
ANR	3062049	IdentifierDecl	is_chroma = ( component == 1 || component == 2 )		3062004	0					
ANR	3062050	IdentifierDeclType	const int		3062004	0					
ANR	3062051	Identifier	is_chroma		3062004	1					
ANR	3062052	AssignmentExpression	is_chroma = ( component == 1 || component == 2 )		3062004	2		=			
ANR	3062053	Identifier	is_chroma		3062004	0					
ANR	3062054	OrExpression	component == 1 || component == 2		3062004	1		||			
ANR	3062055	EqualityExpression	component == 1		3062004	0		==			
ANR	3062056	Identifier	component		3062004	0					
ANR	3062057	PrimaryExpression	1		3062004	1					
ANR	3062058	EqualityExpression	component == 2		3062004	1		==			
ANR	3062059	Identifier	component		3062004	0					
ANR	3062060	PrimaryExpression	2		3062004	1					
ANR	3062061	IdentifierDeclStatement	const int shift_w = ( is_chroma ? s -> desc -> log2_chroma_w : 0 ) ;	13:4:317:377	3062004	4	True				
ANR	3062062	IdentifierDecl	shift_w = ( is_chroma ? s -> desc -> log2_chroma_w : 0 )		3062004	0					
ANR	3062063	IdentifierDeclType	const int		3062004	0					
ANR	3062064	Identifier	shift_w		3062004	1					
ANR	3062065	AssignmentExpression	shift_w = ( is_chroma ? s -> desc -> log2_chroma_w : 0 )		3062004	2		=			
ANR	3062066	Identifier	shift_w		3062004	0					
ANR	3062067	ConditionalExpression	is_chroma ? s -> desc -> log2_chroma_w : 0		3062004	1					
ANR	3062068	Condition	is_chroma		3062004	0					
ANR	3062069	Identifier	is_chroma		3062004	0					
ANR	3062070	PtrMemberAccess	s -> desc -> log2_chroma_w		3062004	1					
ANR	3062071	PtrMemberAccess	s -> desc		3062004	0					
ANR	3062072	Identifier	s		3062004	0					
ANR	3062073	Identifier	desc		3062004	1					
ANR	3062074	Identifier	log2_chroma_w		3062004	1					
ANR	3062075	PrimaryExpression	0		3062004	2					
ANR	3062076	IdentifierDeclStatement	const int shift_h = ( is_chroma ? s -> desc -> log2_chroma_h : 0 ) ;	15:4:384:444	3062004	5	True				
ANR	3062077	IdentifierDecl	shift_h = ( is_chroma ? s -> desc -> log2_chroma_h : 0 )		3062004	0					
ANR	3062078	IdentifierDeclType	const int		3062004	0					
ANR	3062079	Identifier	shift_h		3062004	1					
ANR	3062080	AssignmentExpression	shift_h = ( is_chroma ? s -> desc -> log2_chroma_h : 0 )		3062004	2		=			
ANR	3062081	Identifier	shift_h		3062004	0					
ANR	3062082	ConditionalExpression	is_chroma ? s -> desc -> log2_chroma_h : 0		3062004	1					
ANR	3062083	Condition	is_chroma		3062004	0					
ANR	3062084	Identifier	is_chroma		3062004	0					
ANR	3062085	PtrMemberAccess	s -> desc -> log2_chroma_h		3062004	1					
ANR	3062086	PtrMemberAccess	s -> desc		3062004	0					
ANR	3062087	Identifier	s		3062004	0					
ANR	3062088	Identifier	desc		3062004	1					
ANR	3062089	Identifier	log2_chroma_h		3062004	1					
ANR	3062090	PrimaryExpression	0		3062004	2					
ANR	3062091	IdentifierDeclStatement	"const int dst_h = FF_CEIL_RSHIFT ( out -> height , shift_h ) ;"	17:4:451:505	3062004	6	True				
ANR	3062092	IdentifierDecl	"dst_h = FF_CEIL_RSHIFT ( out -> height , shift_h )"		3062004	0					
ANR	3062093	IdentifierDeclType	const int		3062004	0					
ANR	3062094	Identifier	dst_h		3062004	1					
ANR	3062095	AssignmentExpression	"dst_h = FF_CEIL_RSHIFT ( out -> height , shift_h )"		3062004	2		=			
ANR	3062096	Identifier	dst_h		3062004	0					
ANR	3062097	CallExpression	"FF_CEIL_RSHIFT ( out -> height , shift_h )"		3062004	1					
ANR	3062098	Callee	FF_CEIL_RSHIFT		3062004	0					
ANR	3062099	Identifier	FF_CEIL_RSHIFT		3062004	0					
ANR	3062100	ArgumentList	out -> height		3062004	1					
ANR	3062101	Argument	out -> height		3062004	0					
ANR	3062102	PtrMemberAccess	out -> height		3062004	0					
ANR	3062103	Identifier	out		3062004	0					
ANR	3062104	Identifier	height		3062004	1					
ANR	3062105	Argument	shift_h		3062004	1					
ANR	3062106	Identifier	shift_h		3062004	0					
ANR	3062107	IdentifierDeclStatement	"const int dst_w = FF_CEIL_RSHIFT ( out -> width , shift_w ) ;"	19:4:512:565	3062004	7	True				
ANR	3062108	IdentifierDecl	"dst_w = FF_CEIL_RSHIFT ( out -> width , shift_w )"		3062004	0					
ANR	3062109	IdentifierDeclType	const int		3062004	0					
ANR	3062110	Identifier	dst_w		3062004	1					
ANR	3062111	AssignmentExpression	"dst_w = FF_CEIL_RSHIFT ( out -> width , shift_w )"		3062004	2		=			
ANR	3062112	Identifier	dst_w		3062004	0					
ANR	3062113	CallExpression	"FF_CEIL_RSHIFT ( out -> width , shift_w )"		3062004	1					
ANR	3062114	Callee	FF_CEIL_RSHIFT		3062004	0					
ANR	3062115	Identifier	FF_CEIL_RSHIFT		3062004	0					
ANR	3062116	ArgumentList	out -> width		3062004	1					
ANR	3062117	Argument	out -> width		3062004	0					
ANR	3062118	PtrMemberAccess	out -> width		3062004	0					
ANR	3062119	Identifier	out		3062004	0					
ANR	3062120	Identifier	width		3062004	1					
ANR	3062121	Argument	shift_w		3062004	1					
ANR	3062122	Identifier	shift_w		3062004	0					
ANR	3062123	IdentifierDeclStatement	const int start = s -> estart [ plane ] ;	21:4:572:606	3062004	8	True				
ANR	3062124	IdentifierDecl	start = s -> estart [ plane ]		3062004	0					
ANR	3062125	IdentifierDeclType	const int		3062004	0					
ANR	3062126	Identifier	start		3062004	1					
ANR	3062127	AssignmentExpression	start = s -> estart [ plane ]		3062004	2		=			
ANR	3062128	Identifier	start		3062004	0					
ANR	3062129	ArrayIndexing	s -> estart [ plane ]		3062004	1					
ANR	3062130	PtrMemberAccess	s -> estart		3062004	0					
ANR	3062131	Identifier	s		3062004	0					
ANR	3062132	Identifier	estart		3062004	1					
ANR	3062133	Identifier	plane		3062004	1					
ANR	3062134	IdentifierDeclStatement	const int end = s -> eend [ plane ] ;	23:4:613:643	3062004	9	True				
ANR	3062135	IdentifierDecl	end = s -> eend [ plane ]		3062004	0					
ANR	3062136	IdentifierDeclType	const int		3062004	0					
ANR	3062137	Identifier	end		3062004	1					
ANR	3062138	AssignmentExpression	end = s -> eend [ plane ]		3062004	2		=			
ANR	3062139	Identifier	end		3062004	0					
ANR	3062140	ArrayIndexing	s -> eend [ plane ]		3062004	1					
ANR	3062141	PtrMemberAccess	s -> eend		3062004	0					
ANR	3062142	Identifier	s		3062004	0					
ANR	3062143	Identifier	eend		3062004	1					
ANR	3062144	Identifier	plane		3062004	1					
ANR	3062145	IdentifierDeclStatement	int * emax = s -> emax [ plane ] [ component ] ;	25:4:650:687	3062004	10	True				
ANR	3062146	IdentifierDecl	* emax = s -> emax [ plane ] [ component ]		3062004	0					
ANR	3062147	IdentifierDeclType	int *		3062004	0					
ANR	3062148	Identifier	emax		3062004	1					
ANR	3062149	AssignmentExpression	* emax = s -> emax [ plane ] [ component ]		3062004	2		=			
ANR	3062150	Identifier	emax		3062004	0					
ANR	3062151	ArrayIndexing	s -> emax [ plane ] [ component ]		3062004	1					
ANR	3062152	ArrayIndexing	s -> emax [ plane ]		3062004	0					
ANR	3062153	PtrMemberAccess	s -> emax		3062004	0					
ANR	3062154	Identifier	s		3062004	0					
ANR	3062155	Identifier	emax		3062004	1					
ANR	3062156	Identifier	plane		3062004	1					
ANR	3062157	Identifier	component		3062004	1					
ANR	3062158	IdentifierDeclStatement	int * emin = s -> emin [ plane ] [ component ] ;	27:4:694:731	3062004	11	True				
ANR	3062159	IdentifierDecl	* emin = s -> emin [ plane ] [ component ]		3062004	0					
ANR	3062160	IdentifierDeclType	int *		3062004	0					
ANR	3062161	Identifier	emin		3062004	1					
ANR	3062162	AssignmentExpression	* emin = s -> emin [ plane ] [ component ]		3062004	2		=			
ANR	3062163	Identifier	emin		3062004	0					
ANR	3062164	ArrayIndexing	s -> emin [ plane ] [ component ]		3062004	1					
ANR	3062165	ArrayIndexing	s -> emin [ plane ]		3062004	0					
ANR	3062166	PtrMemberAccess	s -> emin		3062004	0					
ANR	3062167	Identifier	s		3062004	0					
ANR	3062168	Identifier	emin		3062004	1					
ANR	3062169	Identifier	plane		3062004	1					
ANR	3062170	Identifier	component		3062004	1					
ANR	3062171	IdentifierDeclStatement	uint16_t * dst ;	29:4:738:751	3062004	12	True				
ANR	3062172	IdentifierDecl	* dst		3062004	0					
ANR	3062173	IdentifierDeclType	uint16_t *		3062004	0					
ANR	3062174	Identifier	dst		3062004	1					
ANR	3062175	IdentifierDeclStatement	"int x , y ;"	31:4:758:766	3062004	13	True				
ANR	3062176	IdentifierDecl	x		3062004	0					
ANR	3062177	IdentifierDeclType	int		3062004	0					
ANR	3062178	Identifier	x		3062004	1					
ANR	3062179	IdentifierDecl	y		3062004	1					
ANR	3062180	IdentifierDeclType	int		3062004	0					
ANR	3062181	Identifier	y		3062004	1					
ANR	3062182	IfStatement	if ( s -> mode )		3062004	14					
ANR	3062183	Condition	s -> mode	35:8:779:785	3062004	0	True				
ANR	3062184	PtrMemberAccess	s -> mode		3062004	0					
ANR	3062185	Identifier	s		3062004	0					
ANR	3062186	Identifier	mode		3062004	1					
ANR	3062187	CompoundStatement		33:17:698:698	3062004	1					
ANR	3062188	ForStatement	for ( x = 0 ; x < dst_w ; x ++ )		3062004	0					
ANR	3062189	ForInit	x = 0 ;	37:13:804:809	3062004	0	True				
ANR	3062190	AssignmentExpression	x = 0		3062004	0		=			
ANR	3062191	Identifier	x		3062004	0					
ANR	3062192	PrimaryExpression	0		3062004	1					
ANR	3062193	Condition	x < dst_w	37:20:811:819	3062004	1	True				
ANR	3062194	RelationalExpression	x < dst_w		3062004	0		<			
ANR	3062195	Identifier	x		3062004	0					
ANR	3062196	Identifier	dst_w		3062004	1					
ANR	3062197	PostIncDecOperationExpression	x ++	37:31:822:824	3062004	2	True				
ANR	3062198	Identifier	x		3062004	0					
ANR	3062199	IncDec	++		3062004	1					
ANR	3062200	CompoundStatement		35:36:737:737	3062004	3					
ANR	3062201	ForStatement	for ( y = start ; y < end && y < emin [ x ] ; y ++ )		3062004	0					
ANR	3062202	ForInit	y = start ;	39:17:847:856	3062004	0	True				
ANR	3062203	AssignmentExpression	y = start		3062004	0		=			
ANR	3062204	Identifier	y		3062004	0					
ANR	3062205	Identifier	start		3062004	1					
ANR	3062206	Condition	y < end && y < emin [ x ]	39:28:858:879	3062004	1	True				
ANR	3062207	AndExpression	y < end && y < emin [ x ]		3062004	0		&&			
ANR	3062208	RelationalExpression	y < end		3062004	0		<			
ANR	3062209	Identifier	y		3062004	0					
ANR	3062210	Identifier	end		3062004	1					
ANR	3062211	RelationalExpression	y < emin [ x ]		3062004	1		<			
ANR	3062212	Identifier	y		3062004	0					
ANR	3062213	ArrayIndexing	emin [ x ]		3062004	1					
ANR	3062214	Identifier	emin		3062004	0					
ANR	3062215	Identifier	x		3062004	1					
ANR	3062216	PostIncDecOperationExpression	y ++	39:52:882:884	3062004	2	True				
ANR	3062217	Identifier	y		3062004	0					
ANR	3062218	IncDec	++		3062004	1					
ANR	3062219	CompoundStatement		37:57:797:797	3062004	3					
ANR	3062220	ExpressionStatement	dst = ( uint16_t * ) out -> data [ component ] + y * dst_linesize + x	41:16:906:967	3062004	0	True				
ANR	3062221	AssignmentExpression	dst = ( uint16_t * ) out -> data [ component ] + y * dst_linesize + x		3062004	0		=			
ANR	3062222	Identifier	dst		3062004	0					
ANR	3062223	AdditiveExpression	( uint16_t * ) out -> data [ component ] + y * dst_linesize + x		3062004	1		+			
ANR	3062224	CastExpression	( uint16_t * ) out -> data [ component ]		3062004	0					
ANR	3062225	CastTarget	uint16_t *		3062004	0					
ANR	3062226	ArrayIndexing	out -> data [ component ]		3062004	1					
ANR	3062227	PtrMemberAccess	out -> data		3062004	0					
ANR	3062228	Identifier	out		3062004	0					
ANR	3062229	Identifier	data		3062004	1					
ANR	3062230	Identifier	component		3062004	1					
ANR	3062231	AdditiveExpression	y * dst_linesize + x		3062004	1		+			
ANR	3062232	MultiplicativeExpression	y * dst_linesize		3062004	0		*			
ANR	3062233	Identifier	y		3062004	0					
ANR	3062234	Identifier	dst_linesize		3062004	1					
ANR	3062235	Identifier	x		3062004	1					
ANR	3062236	IfStatement	if ( dst [ 0 ] != bg )		3062004	1					
ANR	3062237	Condition	dst [ 0 ] != bg	43:20:990:1001	3062004	0	True				
ANR	3062238	EqualityExpression	dst [ 0 ] != bg		3062004	0		!=			
ANR	3062239	ArrayIndexing	dst [ 0 ]		3062004	0					
ANR	3062240	Identifier	dst		3062004	0					
ANR	3062241	PrimaryExpression	0		3062004	1					
ANR	3062242	Identifier	bg		3062004	1					
ANR	3062243	CompoundStatement		41:34:914:914	3062004	1					
ANR	3062244	ExpressionStatement	emin [ x ] = y	45:20:1027:1038	3062004	0	True				
ANR	3062245	AssignmentExpression	emin [ x ] = y		3062004	0		=			
ANR	3062246	ArrayIndexing	emin [ x ]		3062004	0					
ANR	3062247	Identifier	emin		3062004	0					
ANR	3062248	Identifier	x		3062004	1					
ANR	3062249	Identifier	y		3062004	1					
ANR	3062250	BreakStatement	break ;	47:20:1061:1066	3062004	1	True				
ANR	3062251	ForStatement	for ( y = end - 1 ; y >= start && y >= emax [ x ] ; y -- )		3062004	1					
ANR	3062252	ForInit	y = end - 1 ;	53:17:1120:1131	3062004	0	True				
ANR	3062253	AssignmentExpression	y = end - 1		3062004	0		=			
ANR	3062254	Identifier	y		3062004	0					
ANR	3062255	AdditiveExpression	end - 1		3062004	1		-			
ANR	3062256	Identifier	end		3062004	0					
ANR	3062257	PrimaryExpression	1		3062004	1					
ANR	3062258	Condition	y >= start && y >= emax [ x ]	53:30:1133:1158	3062004	1	True				
ANR	3062259	AndExpression	y >= start && y >= emax [ x ]		3062004	0		&&			
ANR	3062260	RelationalExpression	y >= start		3062004	0		>=			
ANR	3062261	Identifier	y		3062004	0					
ANR	3062262	Identifier	start		3062004	1					
ANR	3062263	RelationalExpression	y >= emax [ x ]		3062004	1		>=			
ANR	3062264	Identifier	y		3062004	0					
ANR	3062265	ArrayIndexing	emax [ x ]		3062004	1					
ANR	3062266	Identifier	emax		3062004	0					
ANR	3062267	Identifier	x		3062004	1					
ANR	3062268	PostIncDecOperationExpression	y --	53:58:1161:1163	3062004	2	True				
ANR	3062269	Identifier	y		3062004	0					
ANR	3062270	IncDec	--		3062004	1					
ANR	3062271	CompoundStatement		51:63:1076:1076	3062004	3					
ANR	3062272	ExpressionStatement	dst = ( uint16_t * ) out -> data [ component ] + y * dst_linesize + x	55:16:1185:1246	3062004	0	True				
ANR	3062273	AssignmentExpression	dst = ( uint16_t * ) out -> data [ component ] + y * dst_linesize + x		3062004	0		=			
ANR	3062274	Identifier	dst		3062004	0					
ANR	3062275	AdditiveExpression	( uint16_t * ) out -> data [ component ] + y * dst_linesize + x		3062004	1		+			
ANR	3062276	CastExpression	( uint16_t * ) out -> data [ component ]		3062004	0					
ANR	3062277	CastTarget	uint16_t *		3062004	0					
ANR	3062278	ArrayIndexing	out -> data [ component ]		3062004	1					
ANR	3062279	PtrMemberAccess	out -> data		3062004	0					
ANR	3062280	Identifier	out		3062004	0					
ANR	3062281	Identifier	data		3062004	1					
ANR	3062282	Identifier	component		3062004	1					
ANR	3062283	AdditiveExpression	y * dst_linesize + x		3062004	1		+			
ANR	3062284	MultiplicativeExpression	y * dst_linesize		3062004	0		*			
ANR	3062285	Identifier	y		3062004	0					
ANR	3062286	Identifier	dst_linesize		3062004	1					
ANR	3062287	Identifier	x		3062004	1					
ANR	3062288	IfStatement	if ( dst [ 0 ] != bg )		3062004	1					
ANR	3062289	Condition	dst [ 0 ] != bg	57:20:1269:1280	3062004	0	True				
ANR	3062290	EqualityExpression	dst [ 0 ] != bg		3062004	0		!=			
ANR	3062291	ArrayIndexing	dst [ 0 ]		3062004	0					
ANR	3062292	Identifier	dst		3062004	0					
ANR	3062293	PrimaryExpression	0		3062004	1					
ANR	3062294	Identifier	bg		3062004	1					
ANR	3062295	CompoundStatement		55:34:1193:1193	3062004	1					
ANR	3062296	ExpressionStatement	emax [ x ] = y	59:20:1306:1317	3062004	0	True				
ANR	3062297	AssignmentExpression	emax [ x ] = y		3062004	0		=			
ANR	3062298	ArrayIndexing	emax [ x ]		3062004	0					
ANR	3062299	Identifier	emax		3062004	0					
ANR	3062300	Identifier	x		3062004	1					
ANR	3062301	Identifier	y		3062004	1					
ANR	3062302	BreakStatement	break ;	61:20:1340:1345	3062004	1	True				
ANR	3062303	IfStatement	if ( s -> envelope == 3 )		3062004	1					
ANR	3062304	Condition	s -> envelope == 3	71:12:1407:1422	3062004	0	True				
ANR	3062305	EqualityExpression	s -> envelope == 3		3062004	0		==			
ANR	3062306	PtrMemberAccess	s -> envelope		3062004	0					
ANR	3062307	Identifier	s		3062004	0					
ANR	3062308	Identifier	envelope		3062004	1					
ANR	3062309	PrimaryExpression	3		3062004	1					
ANR	3062310	ExpressionStatement	"envelope_instant16 ( s , out , plane , component )"	73:12:1438:1482	3062004	1	True				
ANR	3062311	CallExpression	"envelope_instant16 ( s , out , plane , component )"		3062004	0					
ANR	3062312	Callee	envelope_instant16		3062004	0					
ANR	3062313	Identifier	envelope_instant16		3062004	0					
ANR	3062314	ArgumentList	s		3062004	1					
ANR	3062315	Argument	s		3062004	0					
ANR	3062316	Identifier	s		3062004	0					
ANR	3062317	Argument	out		3062004	1					
ANR	3062318	Identifier	out		3062004	0					
ANR	3062319	Argument	plane		3062004	2					
ANR	3062320	Identifier	plane		3062004	0					
ANR	3062321	Argument	component		3062004	3					
ANR	3062322	Identifier	component		3062004	0					
ANR	3062323	ForStatement	for ( x = 0 ; x < dst_w ; x ++ )		3062004	2					
ANR	3062324	ForInit	x = 0 ;	77:13:1500:1505	3062004	0	True				
ANR	3062325	AssignmentExpression	x = 0		3062004	0		=			
ANR	3062326	Identifier	x		3062004	0					
ANR	3062327	PrimaryExpression	0		3062004	1					
ANR	3062328	Condition	x < dst_w	77:20:1507:1515	3062004	1	True				
ANR	3062329	RelationalExpression	x < dst_w		3062004	0		<			
ANR	3062330	Identifier	x		3062004	0					
ANR	3062331	Identifier	dst_w		3062004	1					
ANR	3062332	PostIncDecOperationExpression	x ++	77:31:1518:1520	3062004	2	True				
ANR	3062333	Identifier	x		3062004	0					
ANR	3062334	IncDec	++		3062004	1					
ANR	3062335	CompoundStatement		75:36:1433:1433	3062004	3					
ANR	3062336	ExpressionStatement	dst = ( uint16_t * ) out -> data [ component ] + emin [ x ] * dst_linesize + x	79:12:1538:1605	3062004	0	True				
ANR	3062337	AssignmentExpression	dst = ( uint16_t * ) out -> data [ component ] + emin [ x ] * dst_linesize + x		3062004	0		=			
ANR	3062338	Identifier	dst		3062004	0					
ANR	3062339	AdditiveExpression	( uint16_t * ) out -> data [ component ] + emin [ x ] * dst_linesize + x		3062004	1		+			
ANR	3062340	CastExpression	( uint16_t * ) out -> data [ component ]		3062004	0					
ANR	3062341	CastTarget	uint16_t *		3062004	0					
ANR	3062342	ArrayIndexing	out -> data [ component ]		3062004	1					
ANR	3062343	PtrMemberAccess	out -> data		3062004	0					
ANR	3062344	Identifier	out		3062004	0					
ANR	3062345	Identifier	data		3062004	1					
ANR	3062346	Identifier	component		3062004	1					
ANR	3062347	AdditiveExpression	emin [ x ] * dst_linesize + x		3062004	1		+			
ANR	3062348	MultiplicativeExpression	emin [ x ] * dst_linesize		3062004	0		*			
ANR	3062349	ArrayIndexing	emin [ x ]		3062004	0					
ANR	3062350	Identifier	emin		3062004	0					
ANR	3062351	Identifier	x		3062004	1					
ANR	3062352	Identifier	dst_linesize		3062004	1					
ANR	3062353	Identifier	x		3062004	1					
ANR	3062354	ExpressionStatement	dst [ 0 ] = limit	81:12:1620:1634	3062004	1	True				
ANR	3062355	AssignmentExpression	dst [ 0 ] = limit		3062004	0		=			
ANR	3062356	ArrayIndexing	dst [ 0 ]		3062004	0					
ANR	3062357	Identifier	dst		3062004	0					
ANR	3062358	PrimaryExpression	0		3062004	1					
ANR	3062359	Identifier	limit		3062004	1					
ANR	3062360	ExpressionStatement	dst = ( uint16_t * ) out -> data [ component ] + emax [ x ] * dst_linesize + x	83:12:1649:1716	3062004	2	True				
ANR	3062361	AssignmentExpression	dst = ( uint16_t * ) out -> data [ component ] + emax [ x ] * dst_linesize + x		3062004	0		=			
ANR	3062362	Identifier	dst		3062004	0					
ANR	3062363	AdditiveExpression	( uint16_t * ) out -> data [ component ] + emax [ x ] * dst_linesize + x		3062004	1		+			
ANR	3062364	CastExpression	( uint16_t * ) out -> data [ component ]		3062004	0					
ANR	3062365	CastTarget	uint16_t *		3062004	0					
ANR	3062366	ArrayIndexing	out -> data [ component ]		3062004	1					
ANR	3062367	PtrMemberAccess	out -> data		3062004	0					
ANR	3062368	Identifier	out		3062004	0					
ANR	3062369	Identifier	data		3062004	1					
ANR	3062370	Identifier	component		3062004	1					
ANR	3062371	AdditiveExpression	emax [ x ] * dst_linesize + x		3062004	1		+			
ANR	3062372	MultiplicativeExpression	emax [ x ] * dst_linesize		3062004	0		*			
ANR	3062373	ArrayIndexing	emax [ x ]		3062004	0					
ANR	3062374	Identifier	emax		3062004	0					
ANR	3062375	Identifier	x		3062004	1					
ANR	3062376	Identifier	dst_linesize		3062004	1					
ANR	3062377	Identifier	x		3062004	1					
ANR	3062378	ExpressionStatement	dst [ 0 ] = limit	85:12:1731:1745	3062004	3	True				
ANR	3062379	AssignmentExpression	dst [ 0 ] = limit		3062004	0		=			
ANR	3062380	ArrayIndexing	dst [ 0 ]		3062004	0					
ANR	3062381	Identifier	dst		3062004	0					
ANR	3062382	PrimaryExpression	0		3062004	1					
ANR	3062383	Identifier	limit		3062004	1					
ANR	3062384	ElseStatement	else		3062004	0					
ANR	3062385	CompoundStatement		87:11:1680:1680	3062004	0					
ANR	3062386	ForStatement	for ( y = 0 ; y < dst_h ; y ++ )		3062004	0					
ANR	3062387	ForInit	y = 0 ;	91:13:1786:1791	3062004	0	True				
ANR	3062388	AssignmentExpression	y = 0		3062004	0		=			
ANR	3062389	Identifier	y		3062004	0					
ANR	3062390	PrimaryExpression	0		3062004	1					
ANR	3062391	Condition	y < dst_h	91:20:1793:1801	3062004	1	True				
ANR	3062392	RelationalExpression	y < dst_h		3062004	0		<			
ANR	3062393	Identifier	y		3062004	0					
ANR	3062394	Identifier	dst_h		3062004	1					
ANR	3062395	PostIncDecOperationExpression	y ++	91:31:1804:1806	3062004	2	True				
ANR	3062396	Identifier	y		3062004	0					
ANR	3062397	IncDec	++		3062004	1					
ANR	3062398	CompoundStatement		89:36:1719:1719	3062004	3					
ANR	3062399	ExpressionStatement	dst = ( uint16_t * ) out -> data [ component ] + y * dst_linesize	93:12:1824:1881	3062004	0	True				
ANR	3062400	AssignmentExpression	dst = ( uint16_t * ) out -> data [ component ] + y * dst_linesize		3062004	0		=			
ANR	3062401	Identifier	dst		3062004	0					
ANR	3062402	AdditiveExpression	( uint16_t * ) out -> data [ component ] + y * dst_linesize		3062004	1		+			
ANR	3062403	CastExpression	( uint16_t * ) out -> data [ component ]		3062004	0					
ANR	3062404	CastTarget	uint16_t *		3062004	0					
ANR	3062405	ArrayIndexing	out -> data [ component ]		3062004	1					
ANR	3062406	PtrMemberAccess	out -> data		3062004	0					
ANR	3062407	Identifier	out		3062004	0					
ANR	3062408	Identifier	data		3062004	1					
ANR	3062409	Identifier	component		3062004	1					
ANR	3062410	MultiplicativeExpression	y * dst_linesize		3062004	1		*			
ANR	3062411	Identifier	y		3062004	0					
ANR	3062412	Identifier	dst_linesize		3062004	1					
ANR	3062413	ForStatement	for ( x = start ; x < end && x < emin [ y ] ; x ++ )		3062004	1					
ANR	3062414	ForInit	x = start ;	95:17:1901:1910	3062004	0	True				
ANR	3062415	AssignmentExpression	x = start		3062004	0		=			
ANR	3062416	Identifier	x		3062004	0					
ANR	3062417	Identifier	start		3062004	1					
ANR	3062418	Condition	x < end && x < emin [ y ]	95:28:1912:1933	3062004	1	True				
ANR	3062419	AndExpression	x < end && x < emin [ y ]		3062004	0		&&			
ANR	3062420	RelationalExpression	x < end		3062004	0		<			
ANR	3062421	Identifier	x		3062004	0					
ANR	3062422	Identifier	end		3062004	1					
ANR	3062423	RelationalExpression	x < emin [ y ]		3062004	1		<			
ANR	3062424	Identifier	x		3062004	0					
ANR	3062425	ArrayIndexing	emin [ y ]		3062004	1					
ANR	3062426	Identifier	emin		3062004	0					
ANR	3062427	Identifier	y		3062004	1					
ANR	3062428	PostIncDecOperationExpression	x ++	95:52:1936:1938	3062004	2	True				
ANR	3062429	Identifier	x		3062004	0					
ANR	3062430	IncDec	++		3062004	1					
ANR	3062431	CompoundStatement		93:57:1851:1851	3062004	3					
ANR	3062432	IfStatement	if ( dst [ x ] != bg )		3062004	0					
ANR	3062433	Condition	dst [ x ] != bg	97:20:1964:1975	3062004	0	True				
ANR	3062434	EqualityExpression	dst [ x ] != bg		3062004	0		!=			
ANR	3062435	ArrayIndexing	dst [ x ]		3062004	0					
ANR	3062436	Identifier	dst		3062004	0					
ANR	3062437	Identifier	x		3062004	1					
ANR	3062438	Identifier	bg		3062004	1					
ANR	3062439	CompoundStatement		95:34:1888:1888	3062004	1					
ANR	3062440	ExpressionStatement	emin [ y ] = x	99:20:2001:2012	3062004	0	True				
ANR	3062441	AssignmentExpression	emin [ y ] = x		3062004	0		=			
ANR	3062442	ArrayIndexing	emin [ y ]		3062004	0					
ANR	3062443	Identifier	emin		3062004	0					
ANR	3062444	Identifier	y		3062004	1					
ANR	3062445	Identifier	x		3062004	1					
ANR	3062446	BreakStatement	break ;	101:20:2035:2040	3062004	1	True				
ANR	3062447	ForStatement	for ( x = end - 1 ; x >= start && x >= emax [ y ] ; x -- )		3062004	2					
ANR	3062448	ForInit	x = end - 1 ;	107:17:2094:2105	3062004	0	True				
ANR	3062449	AssignmentExpression	x = end - 1		3062004	0		=			
ANR	3062450	Identifier	x		3062004	0					
ANR	3062451	AdditiveExpression	end - 1		3062004	1		-			
ANR	3062452	Identifier	end		3062004	0					
ANR	3062453	PrimaryExpression	1		3062004	1					
ANR	3062454	Condition	x >= start && x >= emax [ y ]	107:30:2107:2132	3062004	1	True				
ANR	3062455	AndExpression	x >= start && x >= emax [ y ]		3062004	0		&&			
ANR	3062456	RelationalExpression	x >= start		3062004	0		>=			
ANR	3062457	Identifier	x		3062004	0					
ANR	3062458	Identifier	start		3062004	1					
ANR	3062459	RelationalExpression	x >= emax [ y ]		3062004	1		>=			
ANR	3062460	Identifier	x		3062004	0					
ANR	3062461	ArrayIndexing	emax [ y ]		3062004	1					
ANR	3062462	Identifier	emax		3062004	0					
ANR	3062463	Identifier	y		3062004	1					
ANR	3062464	PostIncDecOperationExpression	x --	107:58:2135:2137	3062004	2	True				
ANR	3062465	Identifier	x		3062004	0					
ANR	3062466	IncDec	--		3062004	1					
ANR	3062467	CompoundStatement		105:63:2050:2050	3062004	3					
ANR	3062468	IfStatement	if ( dst [ x ] != bg )		3062004	0					
ANR	3062469	Condition	dst [ x ] != bg	109:20:2163:2174	3062004	0	True				
ANR	3062470	EqualityExpression	dst [ x ] != bg		3062004	0		!=			
ANR	3062471	ArrayIndexing	dst [ x ]		3062004	0					
ANR	3062472	Identifier	dst		3062004	0					
ANR	3062473	Identifier	x		3062004	1					
ANR	3062474	Identifier	bg		3062004	1					
ANR	3062475	CompoundStatement		107:34:2087:2087	3062004	1					
ANR	3062476	ExpressionStatement	emax [ y ] = x	111:20:2200:2211	3062004	0	True				
ANR	3062477	AssignmentExpression	emax [ y ] = x		3062004	0		=			
ANR	3062478	ArrayIndexing	emax [ y ]		3062004	0					
ANR	3062479	Identifier	emax		3062004	0					
ANR	3062480	Identifier	y		3062004	1					
ANR	3062481	Identifier	x		3062004	1					
ANR	3062482	BreakStatement	break ;	113:20:2234:2239	3062004	1	True				
ANR	3062483	IfStatement	if ( s -> envelope == 3 )		3062004	1					
ANR	3062484	Condition	s -> envelope == 3	123:12:2301:2316	3062004	0	True				
ANR	3062485	EqualityExpression	s -> envelope == 3		3062004	0		==			
ANR	3062486	PtrMemberAccess	s -> envelope		3062004	0					
ANR	3062487	Identifier	s		3062004	0					
ANR	3062488	Identifier	envelope		3062004	1					
ANR	3062489	PrimaryExpression	3		3062004	1					
ANR	3062490	ExpressionStatement	"envelope_instant16 ( s , out , plane , component )"	125:12:2332:2376	3062004	1	True				
ANR	3062491	CallExpression	"envelope_instant16 ( s , out , plane , component )"		3062004	0					
ANR	3062492	Callee	envelope_instant16		3062004	0					
ANR	3062493	Identifier	envelope_instant16		3062004	0					
ANR	3062494	ArgumentList	s		3062004	1					
ANR	3062495	Argument	s		3062004	0					
ANR	3062496	Identifier	s		3062004	0					
ANR	3062497	Argument	out		3062004	1					
ANR	3062498	Identifier	out		3062004	0					
ANR	3062499	Argument	plane		3062004	2					
ANR	3062500	Identifier	plane		3062004	0					
ANR	3062501	Argument	component		3062004	3					
ANR	3062502	Identifier	component		3062004	0					
ANR	3062503	ForStatement	for ( y = 0 ; y < dst_h ; y ++ )		3062004	2					
ANR	3062504	ForInit	y = 0 ;	129:13:2394:2399	3062004	0	True				
ANR	3062505	AssignmentExpression	y = 0		3062004	0		=			
ANR	3062506	Identifier	y		3062004	0					
ANR	3062507	PrimaryExpression	0		3062004	1					
ANR	3062508	Condition	y < dst_h	129:20:2401:2409	3062004	1	True				
ANR	3062509	RelationalExpression	y < dst_h		3062004	0		<			
ANR	3062510	Identifier	y		3062004	0					
ANR	3062511	Identifier	dst_h		3062004	1					
ANR	3062512	PostIncDecOperationExpression	y ++	129:31:2412:2414	3062004	2	True				
ANR	3062513	Identifier	y		3062004	0					
ANR	3062514	IncDec	++		3062004	1					
ANR	3062515	CompoundStatement		127:36:2327:2327	3062004	3					
ANR	3062516	ExpressionStatement	dst = ( uint16_t * ) out -> data [ component ] + y * dst_linesize + emin [ y ]	131:12:2432:2499	3062004	0	True				
ANR	3062517	AssignmentExpression	dst = ( uint16_t * ) out -> data [ component ] + y * dst_linesize + emin [ y ]		3062004	0		=			
ANR	3062518	Identifier	dst		3062004	0					
ANR	3062519	AdditiveExpression	( uint16_t * ) out -> data [ component ] + y * dst_linesize + emin [ y ]		3062004	1		+			
ANR	3062520	CastExpression	( uint16_t * ) out -> data [ component ]		3062004	0					
ANR	3062521	CastTarget	uint16_t *		3062004	0					
ANR	3062522	ArrayIndexing	out -> data [ component ]		3062004	1					
ANR	3062523	PtrMemberAccess	out -> data		3062004	0					
ANR	3062524	Identifier	out		3062004	0					
ANR	3062525	Identifier	data		3062004	1					
ANR	3062526	Identifier	component		3062004	1					
ANR	3062527	AdditiveExpression	y * dst_linesize + emin [ y ]		3062004	1		+			
ANR	3062528	MultiplicativeExpression	y * dst_linesize		3062004	0		*			
ANR	3062529	Identifier	y		3062004	0					
ANR	3062530	Identifier	dst_linesize		3062004	1					
ANR	3062531	ArrayIndexing	emin [ y ]		3062004	1					
ANR	3062532	Identifier	emin		3062004	0					
ANR	3062533	Identifier	y		3062004	1					
ANR	3062534	ExpressionStatement	dst [ 0 ] = limit	133:12:2514:2528	3062004	1	True				
ANR	3062535	AssignmentExpression	dst [ 0 ] = limit		3062004	0		=			
ANR	3062536	ArrayIndexing	dst [ 0 ]		3062004	0					
ANR	3062537	Identifier	dst		3062004	0					
ANR	3062538	PrimaryExpression	0		3062004	1					
ANR	3062539	Identifier	limit		3062004	1					
ANR	3062540	ExpressionStatement	dst = ( uint16_t * ) out -> data [ component ] + y * dst_linesize + emax [ y ]	135:12:2543:2610	3062004	2	True				
ANR	3062541	AssignmentExpression	dst = ( uint16_t * ) out -> data [ component ] + y * dst_linesize + emax [ y ]		3062004	0		=			
ANR	3062542	Identifier	dst		3062004	0					
ANR	3062543	AdditiveExpression	( uint16_t * ) out -> data [ component ] + y * dst_linesize + emax [ y ]		3062004	1		+			
ANR	3062544	CastExpression	( uint16_t * ) out -> data [ component ]		3062004	0					
ANR	3062545	CastTarget	uint16_t *		3062004	0					
ANR	3062546	ArrayIndexing	out -> data [ component ]		3062004	1					
ANR	3062547	PtrMemberAccess	out -> data		3062004	0					
ANR	3062548	Identifier	out		3062004	0					
ANR	3062549	Identifier	data		3062004	1					
ANR	3062550	Identifier	component		3062004	1					
ANR	3062551	AdditiveExpression	y * dst_linesize + emax [ y ]		3062004	1		+			
ANR	3062552	MultiplicativeExpression	y * dst_linesize		3062004	0		*			
ANR	3062553	Identifier	y		3062004	0					
ANR	3062554	Identifier	dst_linesize		3062004	1					
ANR	3062555	ArrayIndexing	emax [ y ]		3062004	1					
ANR	3062556	Identifier	emax		3062004	0					
ANR	3062557	Identifier	y		3062004	1					
ANR	3062558	ExpressionStatement	dst [ 0 ] = limit	137:12:2625:2639	3062004	3	True				
ANR	3062559	AssignmentExpression	dst [ 0 ] = limit		3062004	0		=			
ANR	3062560	ArrayIndexing	dst [ 0 ]		3062004	0					
ANR	3062561	Identifier	dst		3062004	0					
ANR	3062562	PrimaryExpression	0		3062004	1					
ANR	3062563	Identifier	limit		3062004	1					
ANR	3062564	ReturnType	static void		3062004	1					
ANR	3062565	Identifier	envelope_peak16		3062004	2					
ANR	3062566	ParameterList	"WaveformContext * s , AVFrame * out , int plane , int component"		3062004	3					
ANR	3062567	Parameter	WaveformContext * s	1:28:28:45	3062004	0	True				
ANR	3062568	ParameterType	WaveformContext *		3062004	0					
ANR	3062569	Identifier	s		3062004	1					
ANR	3062570	Parameter	AVFrame * out	1:48:48:59	3062004	1	True				
ANR	3062571	ParameterType	AVFrame *		3062004	0					
ANR	3062572	Identifier	out		3062004	1					
ANR	3062573	Parameter	int plane	1:62:62:70	3062004	2	True				
ANR	3062574	ParameterType	int		3062004	0					
ANR	3062575	Identifier	plane		3062004	1					
ANR	3062576	Parameter	int component	1:73:73:85	3062004	3	True				
ANR	3062577	ParameterType	int		3062004	0					
ANR	3062578	Identifier	component		3062004	1					
ANR	3062579	CFGEntryNode	ENTRY		3062004		True				
ANR	3062580	CFGExitNode	EXIT		3062004		True				
ANR	3062581	Symbol	plane		3062004						
ANR	3062582	Symbol	* x		3062004						
ANR	3062583	Symbol	* y		3062004						
ANR	3062584	Symbol	* s -> emax		3062004						
ANR	3062585	Symbol	s -> desc -> log2_chroma_w		3062004						
ANR	3062586	Symbol	* emax		3062004						
ANR	3062587	Symbol	* s -> eend		3062004						
ANR	3062588	Symbol	* dst		3062004						
ANR	3062589	Symbol	limit		3062004						
ANR	3062590	Symbol	s -> desc -> log2_chroma_h		3062004						
ANR	3062591	Symbol	dst_linesize		3062004						
ANR	3062592	Symbol	s -> mode		3062004						
ANR	3062593	Symbol	* out -> linesize		3062004						
ANR	3062594	Symbol	* emin		3062004						
ANR	3062595	Symbol	* * out		3062004						
ANR	3062596	Symbol	s -> eend		3062004						
ANR	3062597	Symbol	shift_w		3062004						
ANR	3062598	Symbol	is_chroma		3062004						
ANR	3062599	Symbol	* * * s		3062004						
ANR	3062600	Symbol	* s -> desc		3062004						
ANR	3062601	Symbol	FF_CEIL_RSHIFT		3062004						
ANR	3062602	Symbol	s -> emin		3062004						
ANR	3062603	Symbol	out -> linesize		3062004						
ANR	3062604	Symbol	shift_h		3062004						
ANR	3062605	Symbol	* out		3062004						
ANR	3062606	Symbol	* s -> bg_color		3062004						
ANR	3062607	Symbol	out -> width		3062004						
ANR	3062608	Symbol	* out -> data		3062004						
ANR	3062609	Symbol	* * s -> emin		3062004						
ANR	3062610	Symbol	s -> size		3062004						
ANR	3062611	Symbol	dst		3062004						
ANR	3062612	Symbol	* component		3062004						
ANR	3062613	Symbol	bg		3062004						
ANR	3062614	Symbol	dst_w		3062004						
ANR	3062615	Symbol	out		3062004						
ANR	3062616	Symbol	s -> envelope		3062004						
ANR	3062617	Symbol	* s -> estart		3062004						
ANR	3062618	Symbol	* * s -> emax		3062004						
ANR	3062619	Symbol	* * s		3062004						
ANR	3062620	Symbol	dst_h		3062004						
ANR	3062621	Symbol	s -> estart		3062004						
ANR	3062622	Symbol	end		3062004						
ANR	3062623	Symbol	* plane		3062004						
ANR	3062624	Symbol	s -> emax		3062004						
ANR	3062625	Symbol	emin		3062004						
ANR	3062626	Symbol	start		3062004						
ANR	3062627	Symbol	s -> desc		3062004						
ANR	3062628	Symbol	* * plane		3062004						
ANR	3062629	Symbol	emax		3062004						
ANR	3062630	Symbol	component		3062004						
ANR	3062631	Symbol	s		3062004						
ANR	3062632	Symbol	* s -> emin		3062004						
ANR	3062633	Symbol	s -> bg_color		3062004						
ANR	3062634	Symbol	x		3062004						
ANR	3062635	Symbol	y		3062004						
ANR	3062636	Symbol	out -> height		3062004						
ANR	3062637	Symbol	* s		3062004						
ANR	3062638	Symbol	out -> data		3062004						
