command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6921811	File	/home/p4ultr4n/workplace/ReVeal/raw_code/qdev_print_devinfo_01_0.c								
ANR	6921812	Function	qdev_print_devinfo	1:0:0:696							
ANR	6921813	FunctionDef	"qdev_print_devinfo (ObjectClass * klass , void * opaque)"		6921812	0					
ANR	6921814	CompoundStatement		3:0:66:696	6921812	0					
ANR	6921815	IdentifierDeclStatement	DeviceClass * dc ;	5:4:73:88	6921812	0	True				
ANR	6921816	IdentifierDecl	* dc		6921812	0					
ANR	6921817	IdentifierDeclType	DeviceClass *		6921812	0					
ANR	6921818	Identifier	dc		6921812	1					
ANR	6921819	IdentifierDeclStatement	bool * show_no_user = opaque ;	7:4:95:122	6921812	1	True				
ANR	6921820	IdentifierDecl	* show_no_user = opaque		6921812	0					
ANR	6921821	IdentifierDeclType	bool *		6921812	0					
ANR	6921822	Identifier	show_no_user		6921812	1					
ANR	6921823	AssignmentExpression	* show_no_user = opaque		6921812	2		=			
ANR	6921824	Identifier	opaque		6921812	0					
ANR	6921825	Identifier	opaque		6921812	1					
ANR	6921826	ExpressionStatement	"dc = ( DeviceClass * ) object_class_dynamic_cast ( klass , TYPE_DEVICE )"	11:4:131:196	6921812	2	True				
ANR	6921827	AssignmentExpression	"dc = ( DeviceClass * ) object_class_dynamic_cast ( klass , TYPE_DEVICE )"		6921812	0		=			
ANR	6921828	Identifier	dc		6921812	0					
ANR	6921829	CastExpression	"( DeviceClass * ) object_class_dynamic_cast ( klass , TYPE_DEVICE )"		6921812	1					
ANR	6921830	CastTarget	DeviceClass *		6921812	0					
ANR	6921831	CallExpression	"object_class_dynamic_cast ( klass , TYPE_DEVICE )"		6921812	1					
ANR	6921832	Callee	object_class_dynamic_cast		6921812	0					
ANR	6921833	Identifier	object_class_dynamic_cast		6921812	0					
ANR	6921834	ArgumentList	klass		6921812	1					
ANR	6921835	Argument	klass		6921812	0					
ANR	6921836	Identifier	klass		6921812	0					
ANR	6921837	Argument	TYPE_DEVICE		6921812	1					
ANR	6921838	Identifier	TYPE_DEVICE		6921812	0					
ANR	6921839	IfStatement	if ( ! dc || ( show_no_user && ! * show_no_user && dc -> no_user ) )		6921812	3					
ANR	6921840	Condition	! dc || ( show_no_user && ! * show_no_user && dc -> no_user )	15:8:209:262	6921812	0	True				
ANR	6921841	OrExpression	! dc || ( show_no_user && ! * show_no_user && dc -> no_user )		6921812	0		||			
ANR	6921842	UnaryOperationExpression	! dc		6921812	0					
ANR	6921843	UnaryOperator	!		6921812	0					
ANR	6921844	Identifier	dc		6921812	1					
ANR	6921845	AndExpression	show_no_user && ! * show_no_user && dc -> no_user		6921812	1		&&			
ANR	6921846	Identifier	show_no_user		6921812	0					
ANR	6921847	AndExpression	! * show_no_user && dc -> no_user		6921812	1		&&			
ANR	6921848	UnaryOperationExpression	! * show_no_user		6921812	0					
ANR	6921849	UnaryOperator	!		6921812	0					
ANR	6921850	UnaryOperationExpression	* show_no_user		6921812	1					
ANR	6921851	UnaryOperator	*		6921812	0					
ANR	6921852	Identifier	show_no_user		6921812	1					
ANR	6921853	PtrMemberAccess	dc -> no_user		6921812	1					
ANR	6921854	Identifier	dc		6921812	0					
ANR	6921855	Identifier	no_user		6921812	1					
ANR	6921856	CompoundStatement		13:64:198:198	6921812	1					
ANR	6921857	ReturnStatement	return ;	17:8:276:282	6921812	0	True				
ANR	6921858	ExpressionStatement	"error_printf ( ""name \\""%s\\"""" , object_class_get_name ( klass ) )"	23:4:298:355	6921812	4	True				
ANR	6921859	CallExpression	"error_printf ( ""name \\""%s\\"""" , object_class_get_name ( klass ) )"		6921812	0					
ANR	6921860	Callee	error_printf		6921812	0					
ANR	6921861	Identifier	error_printf		6921812	0					
ANR	6921862	ArgumentList	"""name \\""%s\\"""""		6921812	1					
ANR	6921863	Argument	"""name \\""%s\\"""""		6921812	0					
ANR	6921864	PrimaryExpression	"""name \\""%s\\"""""		6921812	0					
ANR	6921865	Argument	object_class_get_name ( klass )		6921812	1					
ANR	6921866	CallExpression	object_class_get_name ( klass )		6921812	0					
ANR	6921867	Callee	object_class_get_name		6921812	0					
ANR	6921868	Identifier	object_class_get_name		6921812	0					
ANR	6921869	ArgumentList	klass		6921812	1					
ANR	6921870	Argument	klass		6921812	0					
ANR	6921871	Identifier	klass		6921812	0					
ANR	6921872	IfStatement	if ( dc -> bus_info )		6921812	5					
ANR	6921873	Condition	dc -> bus_info	25:8:366:377	6921812	0	True				
ANR	6921874	PtrMemberAccess	dc -> bus_info		6921812	0					
ANR	6921875	Identifier	dc		6921812	0					
ANR	6921876	Identifier	bus_info		6921812	1					
ANR	6921877	CompoundStatement		23:22:313:313	6921812	1					
ANR	6921878	ExpressionStatement	"error_printf ( "", bus %s"" , dc -> bus_info -> name )"	27:8:391:435	6921812	0	True				
ANR	6921879	CallExpression	"error_printf ( "", bus %s"" , dc -> bus_info -> name )"		6921812	0					
ANR	6921880	Callee	error_printf		6921812	0					
ANR	6921881	Identifier	error_printf		6921812	0					
ANR	6921882	ArgumentList	""", bus %s"""		6921812	1					
ANR	6921883	Argument	""", bus %s"""		6921812	0					
ANR	6921884	PrimaryExpression	""", bus %s"""		6921812	0					
ANR	6921885	Argument	dc -> bus_info -> name		6921812	1					
ANR	6921886	PtrMemberAccess	dc -> bus_info -> name		6921812	0					
ANR	6921887	PtrMemberAccess	dc -> bus_info		6921812	0					
ANR	6921888	Identifier	dc		6921812	0					
ANR	6921889	Identifier	bus_info		6921812	1					
ANR	6921890	Identifier	name		6921812	1					
ANR	6921891	IfStatement	if ( dc -> alias )		6921812	6					
ANR	6921892	Condition	dc -> alias	31:8:453:461	6921812	0	True				
ANR	6921893	PtrMemberAccess	dc -> alias		6921812	0					
ANR	6921894	Identifier	dc		6921812	0					
ANR	6921895	Identifier	alias		6921812	1					
ANR	6921896	CompoundStatement		29:19:397:397	6921812	1					
ANR	6921897	ExpressionStatement	"error_printf ( "", alias \\""%s\\"""" , dc -> alias )"	33:8:475:516	6921812	0	True				
ANR	6921898	CallExpression	"error_printf ( "", alias \\""%s\\"""" , dc -> alias )"		6921812	0					
ANR	6921899	Callee	error_printf		6921812	0					
ANR	6921900	Identifier	error_printf		6921812	0					
ANR	6921901	ArgumentList	""", alias \\""%s\\"""""		6921812	1					
ANR	6921902	Argument	""", alias \\""%s\\"""""		6921812	0					
ANR	6921903	PrimaryExpression	""", alias \\""%s\\"""""		6921812	0					
ANR	6921904	Argument	dc -> alias		6921812	1					
ANR	6921905	PtrMemberAccess	dc -> alias		6921812	0					
ANR	6921906	Identifier	dc		6921812	0					
ANR	6921907	Identifier	alias		6921812	1					
ANR	6921908	IfStatement	if ( dc -> desc )		6921812	7					
ANR	6921909	Condition	dc -> desc	37:8:534:541	6921812	0	True				
ANR	6921910	PtrMemberAccess	dc -> desc		6921812	0					
ANR	6921911	Identifier	dc		6921812	0					
ANR	6921912	Identifier	desc		6921812	1					
ANR	6921913	CompoundStatement		35:18:477:477	6921812	1					
ANR	6921914	ExpressionStatement	"error_printf ( "", desc \\""%s\\"""" , dc -> desc )"	39:8:555:594	6921812	0	True				
ANR	6921915	CallExpression	"error_printf ( "", desc \\""%s\\"""" , dc -> desc )"		6921812	0					
ANR	6921916	Callee	error_printf		6921812	0					
ANR	6921917	Identifier	error_printf		6921812	0					
ANR	6921918	ArgumentList	""", desc \\""%s\\"""""		6921812	1					
ANR	6921919	Argument	""", desc \\""%s\\"""""		6921812	0					
ANR	6921920	PrimaryExpression	""", desc \\""%s\\"""""		6921812	0					
ANR	6921921	Argument	dc -> desc		6921812	1					
ANR	6921922	PtrMemberAccess	dc -> desc		6921812	0					
ANR	6921923	Identifier	dc		6921812	0					
ANR	6921924	Identifier	desc		6921812	1					
ANR	6921925	IfStatement	if ( dc -> no_user )		6921812	8					
ANR	6921926	Condition	dc -> no_user	43:8:612:622	6921812	0	True				
ANR	6921927	PtrMemberAccess	dc -> no_user		6921812	0					
ANR	6921928	Identifier	dc		6921812	0					
ANR	6921929	Identifier	no_user		6921812	1					
ANR	6921930	CompoundStatement		41:21:558:558	6921812	1					
ANR	6921931	ExpressionStatement	"error_printf ( "", no-user"" )"	45:8:636:661	6921812	0	True				
ANR	6921932	CallExpression	"error_printf ( "", no-user"" )"		6921812	0					
ANR	6921933	Callee	error_printf		6921812	0					
ANR	6921934	Identifier	error_printf		6921812	0					
ANR	6921935	ArgumentList	""", no-user"""		6921812	1					
ANR	6921936	Argument	""", no-user"""		6921812	0					
ANR	6921937	PrimaryExpression	""", no-user"""		6921812	0					
ANR	6921938	ExpressionStatement	"error_printf ( ""\\n"" )"	49:4:675:693	6921812	9	True				
ANR	6921939	CallExpression	"error_printf ( ""\\n"" )"		6921812	0					
ANR	6921940	Callee	error_printf		6921812	0					
ANR	6921941	Identifier	error_printf		6921812	0					
ANR	6921942	ArgumentList	"""\\n"""		6921812	1					
ANR	6921943	Argument	"""\\n"""		6921812	0					
ANR	6921944	PrimaryExpression	"""\\n"""		6921812	0					
ANR	6921945	ReturnType	static void		6921812	1					
ANR	6921946	Identifier	qdev_print_devinfo		6921812	2					
ANR	6921947	ParameterList	"ObjectClass * klass , void * opaque"		6921812	3					
ANR	6921948	Parameter	ObjectClass * klass	1:31:31:48	6921812	0	True				
ANR	6921949	ParameterType	ObjectClass *		6921812	0					
ANR	6921950	Identifier	klass		6921812	1					
ANR	6921951	Parameter	void * opaque	1:51:51:62	6921812	1	True				
ANR	6921952	ParameterType	void *		6921812	0					
ANR	6921953	Identifier	opaque		6921812	1					
ANR	6921954	CFGEntryNode	ENTRY		6921812		True				
ANR	6921955	CFGExitNode	EXIT		6921812		True				
ANR	6921956	Symbol	opaque		6921812						
ANR	6921957	Symbol	dc -> alias		6921812						
ANR	6921958	Symbol	* dc		6921812						
ANR	6921959	Symbol	dc -> bus_info -> name		6921812						
ANR	6921960	Symbol	* show_no_user		6921812						
ANR	6921961	Symbol	* * dc		6921812						
ANR	6921962	Symbol	* dc -> bus_info		6921812						
ANR	6921963	Symbol	TYPE_DEVICE		6921812						
ANR	6921964	Symbol	show_no_user		6921812						
ANR	6921965	Symbol	klass		6921812						
ANR	6921966	Symbol	dc -> bus_info		6921812						
ANR	6921967	Symbol	dc -> no_user		6921812						
ANR	6921968	Symbol	object_class_get_name		6921812						
ANR	6921969	Symbol	dc -> desc		6921812						
ANR	6921970	Symbol	object_class_dynamic_cast		6921812						
ANR	6921971	Symbol	dc		6921812						
