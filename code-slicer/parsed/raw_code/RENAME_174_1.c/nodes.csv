command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	191537	File	/home/p4ultr4n/workplace/ReVeal/raw_code/RENAME_174_1.c								
ANR	191538	Function	decode_rgb_frame	1:0:0:2267							
ANR	191539	FunctionDef	"decode_rgb_frame (FFV1Context * s , uint8_t * src [ 3 ] , int w , int h , int stride [ 3 ])"		191538	0					
ANR	191540	CompoundStatement		3:0:100:2267	191538	0					
ANR	191541	IdentifierDeclStatement	"int x , y , p ;"	5:4:107:118	191538	0	True				
ANR	191542	IdentifierDecl	x		191538	0					
ANR	191543	IdentifierDeclType	int		191538	0					
ANR	191544	Identifier	x		191538	1					
ANR	191545	IdentifierDecl	y		191538	1					
ANR	191546	IdentifierDeclType	int		191538	0					
ANR	191547	Identifier	y		191538	1					
ANR	191548	IdentifierDecl	p		191538	2					
ANR	191549	IdentifierDeclType	int		191538	0					
ANR	191550	Identifier	p		191538	1					
ANR	191551	ExpressionStatement	TYPE * sample [ 4 ] [ 2 ]	7:4:125:143	191538	1	True				
ANR	191552	MultiplicativeExpression	TYPE * sample [ 4 ] [ 2 ]		191538	0		*			
ANR	191553	Identifier	TYPE		191538	0					
ANR	191554	ArrayIndexing	sample [ 4 ] [ 2 ]		191538	1					
ANR	191555	ArrayIndexing	sample [ 4 ]		191538	0					
ANR	191556	Identifier	sample		191538	0					
ANR	191557	PrimaryExpression	4		191538	1					
ANR	191558	PrimaryExpression	2		191538	1					
ANR	191559	IdentifierDeclStatement	int lbd = s -> avctx -> bits_per_raw_sample <= 8 ;	9:4:150:197	191538	2	True				
ANR	191560	IdentifierDecl	lbd = s -> avctx -> bits_per_raw_sample <= 8		191538	0					
ANR	191561	IdentifierDeclType	int		191538	0					
ANR	191562	Identifier	lbd		191538	1					
ANR	191563	AssignmentExpression	lbd = s -> avctx -> bits_per_raw_sample <= 8		191538	2		=			
ANR	191564	Identifier	lbd		191538	0					
ANR	191565	RelationalExpression	s -> avctx -> bits_per_raw_sample <= 8		191538	1		<=			
ANR	191566	PtrMemberAccess	s -> avctx -> bits_per_raw_sample		191538	0					
ANR	191567	PtrMemberAccess	s -> avctx		191538	0					
ANR	191568	Identifier	s		191538	0					
ANR	191569	Identifier	avctx		191538	1					
ANR	191570	Identifier	bits_per_raw_sample		191538	1					
ANR	191571	PrimaryExpression	8		191538	1					
ANR	191572	IdentifierDeclStatement	int bits = s -> avctx -> bits_per_raw_sample > 0 ? s -> avctx -> bits_per_raw_sample : 8 ;	11:4:204:286	191538	3	True				
ANR	191573	IdentifierDecl	bits = s -> avctx -> bits_per_raw_sample > 0 ? s -> avctx -> bits_per_raw_sample : 8		191538	0					
ANR	191574	IdentifierDeclType	int		191538	0					
ANR	191575	Identifier	bits		191538	1					
ANR	191576	AssignmentExpression	bits = s -> avctx -> bits_per_raw_sample > 0 ? s -> avctx -> bits_per_raw_sample : 8		191538	2		=			
ANR	191577	Identifier	bits		191538	0					
ANR	191578	ConditionalExpression	s -> avctx -> bits_per_raw_sample > 0 ? s -> avctx -> bits_per_raw_sample : 8		191538	1					
ANR	191579	Condition	s -> avctx -> bits_per_raw_sample > 0		191538	0					
ANR	191580	RelationalExpression	s -> avctx -> bits_per_raw_sample > 0		191538	0		>			
ANR	191581	PtrMemberAccess	s -> avctx -> bits_per_raw_sample		191538	0					
ANR	191582	PtrMemberAccess	s -> avctx		191538	0					
ANR	191583	Identifier	s		191538	0					
ANR	191584	Identifier	avctx		191538	1					
ANR	191585	Identifier	bits_per_raw_sample		191538	1					
ANR	191586	PrimaryExpression	0		191538	1					
ANR	191587	PtrMemberAccess	s -> avctx -> bits_per_raw_sample		191538	1					
ANR	191588	PtrMemberAccess	s -> avctx		191538	0					
ANR	191589	Identifier	s		191538	0					
ANR	191590	Identifier	avctx		191538	1					
ANR	191591	Identifier	bits_per_raw_sample		191538	1					
ANR	191592	PrimaryExpression	8		191538	2					
ANR	191593	IdentifierDeclStatement	int offset = 1 << bits ;	13:4:293:315	191538	4	True				
ANR	191594	IdentifierDecl	offset = 1 << bits		191538	0					
ANR	191595	IdentifierDeclType	int		191538	0					
ANR	191596	Identifier	offset		191538	1					
ANR	191597	AssignmentExpression	offset = 1 << bits		191538	2		=			
ANR	191598	Identifier	offset		191538	0					
ANR	191599	ShiftExpression	1 << bits		191538	1		<<			
ANR	191600	PrimaryExpression	1		191538	0					
ANR	191601	Identifier	bits		191538	1					
ANR	191602	ForStatement	for ( x = 0 ; x < 4 ; x ++ )		191538	5					
ANR	191603	ForInit	x = 0 ;	17:9:329:334	191538	0	True				
ANR	191604	AssignmentExpression	x = 0		191538	0		=			
ANR	191605	Identifier	x		191538	0					
ANR	191606	PrimaryExpression	0		191538	1					
ANR	191607	Condition	x < 4	17:16:336:340	191538	1	True				
ANR	191608	RelationalExpression	x < 4		191538	0		<			
ANR	191609	Identifier	x		191538	0					
ANR	191610	PrimaryExpression	4		191538	1					
ANR	191611	PostIncDecOperationExpression	x ++	17:23:343:345	191538	2	True				
ANR	191612	Identifier	x		191538	0					
ANR	191613	IncDec	++		191538	1					
ANR	191614	CompoundStatement		15:28:247:247	191538	3					
ANR	191615	ExpressionStatement	sample [ x ] [ 0 ] = RENAME ( s -> sample_buffer ) + x * 2 * ( w + 6 ) + 3	19:8:359:426	191538	0	True				
ANR	191616	AssignmentExpression	sample [ x ] [ 0 ] = RENAME ( s -> sample_buffer ) + x * 2 * ( w + 6 ) + 3		191538	0		=			
ANR	191617	ArrayIndexing	sample [ x ] [ 0 ]		191538	0					
ANR	191618	ArrayIndexing	sample [ x ]		191538	0					
ANR	191619	Identifier	sample		191538	0					
ANR	191620	Identifier	x		191538	1					
ANR	191621	PrimaryExpression	0		191538	1					
ANR	191622	AdditiveExpression	RENAME ( s -> sample_buffer ) + x * 2 * ( w + 6 ) + 3		191538	1		+			
ANR	191623	CallExpression	RENAME ( s -> sample_buffer )		191538	0					
ANR	191624	Callee	RENAME		191538	0					
ANR	191625	Identifier	RENAME		191538	0					
ANR	191626	ArgumentList	s -> sample_buffer		191538	1					
ANR	191627	Argument	s -> sample_buffer		191538	0					
ANR	191628	PtrMemberAccess	s -> sample_buffer		191538	0					
ANR	191629	Identifier	s		191538	0					
ANR	191630	Identifier	sample_buffer		191538	1					
ANR	191631	AdditiveExpression	x * 2 * ( w + 6 ) + 3		191538	1		+			
ANR	191632	MultiplicativeExpression	x * 2 * ( w + 6 )		191538	0		*			
ANR	191633	Identifier	x		191538	0					
ANR	191634	MultiplicativeExpression	2 * ( w + 6 )		191538	1		*			
ANR	191635	PrimaryExpression	2		191538	0					
ANR	191636	AdditiveExpression	w + 6		191538	1		+			
ANR	191637	Identifier	w		191538	0					
ANR	191638	PrimaryExpression	6		191538	1					
ANR	191639	PrimaryExpression	3		191538	1					
ANR	191640	ExpressionStatement	sample [ x ] [ 1 ] = RENAME ( s -> sample_buffer ) + ( x * 2 + 1 ) * ( w + 6 ) + 3	21:8:437:504	191538	1	True				
ANR	191641	AssignmentExpression	sample [ x ] [ 1 ] = RENAME ( s -> sample_buffer ) + ( x * 2 + 1 ) * ( w + 6 ) + 3		191538	0		=			
ANR	191642	ArrayIndexing	sample [ x ] [ 1 ]		191538	0					
ANR	191643	ArrayIndexing	sample [ x ]		191538	0					
ANR	191644	Identifier	sample		191538	0					
ANR	191645	Identifier	x		191538	1					
ANR	191646	PrimaryExpression	1		191538	1					
ANR	191647	AdditiveExpression	RENAME ( s -> sample_buffer ) + ( x * 2 + 1 ) * ( w + 6 ) + 3		191538	1		+			
ANR	191648	CallExpression	RENAME ( s -> sample_buffer )		191538	0					
ANR	191649	Callee	RENAME		191538	0					
ANR	191650	Identifier	RENAME		191538	0					
ANR	191651	ArgumentList	s -> sample_buffer		191538	1					
ANR	191652	Argument	s -> sample_buffer		191538	0					
ANR	191653	PtrMemberAccess	s -> sample_buffer		191538	0					
ANR	191654	Identifier	s		191538	0					
ANR	191655	Identifier	sample_buffer		191538	1					
ANR	191656	AdditiveExpression	( x * 2 + 1 ) * ( w + 6 ) + 3		191538	1		+			
ANR	191657	MultiplicativeExpression	( x * 2 + 1 ) * ( w + 6 )		191538	0		*			
ANR	191658	AdditiveExpression	x * 2 + 1		191538	0		+			
ANR	191659	MultiplicativeExpression	x * 2		191538	0		*			
ANR	191660	Identifier	x		191538	0					
ANR	191661	PrimaryExpression	2		191538	1					
ANR	191662	PrimaryExpression	1		191538	1					
ANR	191663	AdditiveExpression	w + 6		191538	1		+			
ANR	191664	Identifier	w		191538	0					
ANR	191665	PrimaryExpression	6		191538	1					
ANR	191666	PrimaryExpression	3		191538	1					
ANR	191667	ExpressionStatement	s -> run_index = 0	27:4:520:536	191538	6	True				
ANR	191668	AssignmentExpression	s -> run_index = 0		191538	0		=			
ANR	191669	PtrMemberAccess	s -> run_index		191538	0					
ANR	191670	Identifier	s		191538	0					
ANR	191671	Identifier	run_index		191538	1					
ANR	191672	PrimaryExpression	0		191538	1					
ANR	191673	ExpressionStatement	"memset ( RENAME ( s -> sample_buffer ) , 0 , 8 * ( w + 6 ) * sizeof ( * RENAME ( s -> sample_buffer ) ) )"	31:4:545:629	191538	7	True				
ANR	191674	CallExpression	"memset ( RENAME ( s -> sample_buffer ) , 0 , 8 * ( w + 6 ) * sizeof ( * RENAME ( s -> sample_buffer ) ) )"		191538	0					
ANR	191675	Callee	memset		191538	0					
ANR	191676	Identifier	memset		191538	0					
ANR	191677	ArgumentList	RENAME ( s -> sample_buffer )		191538	1					
ANR	191678	Argument	RENAME ( s -> sample_buffer )		191538	0					
ANR	191679	CallExpression	RENAME ( s -> sample_buffer )		191538	0					
ANR	191680	Callee	RENAME		191538	0					
ANR	191681	Identifier	RENAME		191538	0					
ANR	191682	ArgumentList	s -> sample_buffer		191538	1					
ANR	191683	Argument	s -> sample_buffer		191538	0					
ANR	191684	PtrMemberAccess	s -> sample_buffer		191538	0					
ANR	191685	Identifier	s		191538	0					
ANR	191686	Identifier	sample_buffer		191538	1					
ANR	191687	Argument	0		191538	1					
ANR	191688	PrimaryExpression	0		191538	0					
ANR	191689	Argument	8 * ( w + 6 ) * sizeof ( * RENAME ( s -> sample_buffer ) )		191538	2					
ANR	191690	MultiplicativeExpression	8 * ( w + 6 ) * sizeof ( * RENAME ( s -> sample_buffer ) )		191538	0		*			
ANR	191691	PrimaryExpression	8		191538	0					
ANR	191692	MultiplicativeExpression	( w + 6 ) * sizeof ( * RENAME ( s -> sample_buffer ) )		191538	1		*			
ANR	191693	AdditiveExpression	w + 6		191538	0		+			
ANR	191694	Identifier	w		191538	0					
ANR	191695	PrimaryExpression	6		191538	1					
ANR	191696	SizeofExpression	sizeof ( * RENAME ( s -> sample_buffer ) )		191538	1					
ANR	191697	Sizeof	sizeof		191538	0					
ANR	191698	UnaryOperationExpression	* RENAME ( s -> sample_buffer )		191538	1					
ANR	191699	UnaryOperator	*		191538	0					
ANR	191700	CallExpression	RENAME ( s -> sample_buffer )		191538	1					
ANR	191701	Callee	RENAME		191538	0					
ANR	191702	Identifier	RENAME		191538	0					
ANR	191703	ArgumentList	s -> sample_buffer		191538	1					
ANR	191704	Argument	s -> sample_buffer		191538	0					
ANR	191705	PtrMemberAccess	s -> sample_buffer		191538	0					
ANR	191706	Identifier	s		191538	0					
ANR	191707	Identifier	sample_buffer		191538	1					
ANR	191708	ForStatement	for ( y = 0 ; y < h ; y ++ )		191538	8					
ANR	191709	ForInit	y = 0 ;	35:9:643:648	191538	0	True				
ANR	191710	AssignmentExpression	y = 0		191538	0		=			
ANR	191711	Identifier	y		191538	0					
ANR	191712	PrimaryExpression	0		191538	1					
ANR	191713	Condition	y < h	35:16:650:654	191538	1	True				
ANR	191714	RelationalExpression	y < h		191538	0		<			
ANR	191715	Identifier	y		191538	0					
ANR	191716	Identifier	h		191538	1					
ANR	191717	PostIncDecOperationExpression	y ++	35:23:657:659	191538	2	True				
ANR	191718	Identifier	y		191538	0					
ANR	191719	IncDec	++		191538	1					
ANR	191720	CompoundStatement		33:28:561:561	191538	3					
ANR	191721	ForStatement	for ( p = 0 ; p < 3 + s -> transparency ; p ++ )		191538	0					
ANR	191722	ForInit	p = 0 ;	37:13:678:683	191538	0	True				
ANR	191723	AssignmentExpression	p = 0		191538	0		=			
ANR	191724	Identifier	p		191538	0					
ANR	191725	PrimaryExpression	0		191538	1					
ANR	191726	Condition	p < 3 + s -> transparency	37:20:685:707	191538	1	True				
ANR	191727	RelationalExpression	p < 3 + s -> transparency		191538	0		<			
ANR	191728	Identifier	p		191538	0					
ANR	191729	AdditiveExpression	3 + s -> transparency		191538	1		+			
ANR	191730	PrimaryExpression	3		191538	0					
ANR	191731	PtrMemberAccess	s -> transparency		191538	1					
ANR	191732	Identifier	s		191538	0					
ANR	191733	Identifier	transparency		191538	1					
ANR	191734	PostIncDecOperationExpression	p ++	37:45:710:712	191538	2	True				
ANR	191735	Identifier	p		191538	0					
ANR	191736	IncDec	++		191538	1					
ANR	191737	CompoundStatement		37:12:629:654	191538	3					
ANR	191738	IdentifierDeclStatement	TYPE * temp = sample [ p ] [ 0 ] ;	39:12:730:755	191538	0	True				
ANR	191739	IdentifierDecl	* temp = sample [ p ] [ 0 ]		191538	0					
ANR	191740	IdentifierDeclType	TYPE *		191538	0					
ANR	191741	Identifier	temp		191538	1					
ANR	191742	AssignmentExpression	* temp = sample [ p ] [ 0 ]		191538	2		=			
ANR	191743	Identifier	temp		191538	0					
ANR	191744	ArrayIndexing	sample [ p ] [ 0 ]		191538	1					
ANR	191745	ArrayIndexing	sample [ p ]		191538	0					
ANR	191746	Identifier	sample		191538	0					
ANR	191747	Identifier	p		191538	1					
ANR	191748	PrimaryExpression	0		191538	1					
ANR	191749	ExpressionStatement	sample [ p ] [ 0 ] = sample [ p ] [ 1 ]	43:12:802:829	191538	1	True				
ANR	191750	AssignmentExpression	sample [ p ] [ 0 ] = sample [ p ] [ 1 ]		191538	0		=			
ANR	191751	ArrayIndexing	sample [ p ] [ 0 ]		191538	0					
ANR	191752	ArrayIndexing	sample [ p ]		191538	0					
ANR	191753	Identifier	sample		191538	0					
ANR	191754	Identifier	p		191538	1					
ANR	191755	PrimaryExpression	0		191538	1					
ANR	191756	ArrayIndexing	sample [ p ] [ 1 ]		191538	1					
ANR	191757	ArrayIndexing	sample [ p ]		191538	0					
ANR	191758	Identifier	sample		191538	0					
ANR	191759	Identifier	p		191538	1					
ANR	191760	PrimaryExpression	1		191538	1					
ANR	191761	ExpressionStatement	sample [ p ] [ 1 ] = temp	45:12:844:863	191538	2	True				
ANR	191762	AssignmentExpression	sample [ p ] [ 1 ] = temp		191538	0		=			
ANR	191763	ArrayIndexing	sample [ p ] [ 1 ]		191538	0					
ANR	191764	ArrayIndexing	sample [ p ]		191538	0					
ANR	191765	Identifier	sample		191538	0					
ANR	191766	Identifier	p		191538	1					
ANR	191767	PrimaryExpression	1		191538	1					
ANR	191768	Identifier	temp		191538	1					
ANR	191769	ExpressionStatement	sample [ p ] [ 1 ] [ - 1 ] = sample [ p ] [ 0 ] [ 0 ]	49:12:880:915	191538	3	True				
ANR	191770	AssignmentExpression	sample [ p ] [ 1 ] [ - 1 ] = sample [ p ] [ 0 ] [ 0 ]		191538	0		=			
ANR	191771	ArrayIndexing	sample [ p ] [ 1 ] [ - 1 ]		191538	0					
ANR	191772	ArrayIndexing	sample [ p ] [ 1 ]		191538	0					
ANR	191773	ArrayIndexing	sample [ p ]		191538	0					
ANR	191774	Identifier	sample		191538	0					
ANR	191775	Identifier	p		191538	1					
ANR	191776	PrimaryExpression	1		191538	1					
ANR	191777	UnaryOperationExpression	- 1		191538	1					
ANR	191778	UnaryOperator	-		191538	0					
ANR	191779	PrimaryExpression	1		191538	1					
ANR	191780	ArrayIndexing	sample [ p ] [ 0 ] [ 0 ]		191538	1					
ANR	191781	ArrayIndexing	sample [ p ] [ 0 ]		191538	0					
ANR	191782	ArrayIndexing	sample [ p ]		191538	0					
ANR	191783	Identifier	sample		191538	0					
ANR	191784	Identifier	p		191538	1					
ANR	191785	PrimaryExpression	0		191538	1					
ANR	191786	PrimaryExpression	0		191538	1					
ANR	191787	ExpressionStatement	sample [ p ] [ 0 ] [ w ] = sample [ p ] [ 0 ] [ w - 1 ]	51:12:930:965	191538	4	True				
ANR	191788	AssignmentExpression	sample [ p ] [ 0 ] [ w ] = sample [ p ] [ 0 ] [ w - 1 ]		191538	0		=			
ANR	191789	ArrayIndexing	sample [ p ] [ 0 ] [ w ]		191538	0					
ANR	191790	ArrayIndexing	sample [ p ] [ 0 ]		191538	0					
ANR	191791	ArrayIndexing	sample [ p ]		191538	0					
ANR	191792	Identifier	sample		191538	0					
ANR	191793	Identifier	p		191538	1					
ANR	191794	PrimaryExpression	0		191538	1					
ANR	191795	Identifier	w		191538	1					
ANR	191796	ArrayIndexing	sample [ p ] [ 0 ] [ w - 1 ]		191538	1					
ANR	191797	ArrayIndexing	sample [ p ] [ 0 ]		191538	0					
ANR	191798	ArrayIndexing	sample [ p ]		191538	0					
ANR	191799	Identifier	sample		191538	0					
ANR	191800	Identifier	p		191538	1					
ANR	191801	PrimaryExpression	0		191538	1					
ANR	191802	AdditiveExpression	w - 1		191538	1		-			
ANR	191803	Identifier	w		191538	0					
ANR	191804	PrimaryExpression	1		191538	1					
ANR	191805	IfStatement	if ( lbd && s -> slice_coding_mode == 0 )		191538	5					
ANR	191806	Condition	lbd && s -> slice_coding_mode == 0	53:16:984:1015	191538	0	True				
ANR	191807	AndExpression	lbd && s -> slice_coding_mode == 0		191538	0		&&			
ANR	191808	Identifier	lbd		191538	0					
ANR	191809	EqualityExpression	s -> slice_coding_mode == 0		191538	1		==			
ANR	191810	PtrMemberAccess	s -> slice_coding_mode		191538	0					
ANR	191811	Identifier	s		191538	0					
ANR	191812	Identifier	slice_coding_mode		191538	1					
ANR	191813	PrimaryExpression	0		191538	1					
ANR	191814	ExpressionStatement	"RENAME ( decode_line ) ( s , w , sample [ p ] , ( p + 1 ) / 2 , 9 )"	55:16:1035:1085	191538	1	True				
ANR	191815	CallExpression	"RENAME ( decode_line ) ( s , w , sample [ p ] , ( p + 1 ) / 2 , 9 )"		191538	0					
ANR	191816	Callee	RENAME ( decode_line )		191538	0					
ANR	191817	CallExpression	RENAME ( decode_line )		191538	0					
ANR	191818	Callee	RENAME		191538	0					
ANR	191819	Identifier	RENAME		191538	0					
ANR	191820	ArgumentList	decode_line		191538	1					
ANR	191821	Argument	decode_line		191538	0					
ANR	191822	Identifier	decode_line		191538	0					
ANR	191823	ArgumentList	s		191538	1					
ANR	191824	Argument	s		191538	0					
ANR	191825	Identifier	s		191538	0					
ANR	191826	Argument	w		191538	1					
ANR	191827	Identifier	w		191538	0					
ANR	191828	Argument	sample [ p ]		191538	2					
ANR	191829	ArrayIndexing	sample [ p ]		191538	0					
ANR	191830	Identifier	sample		191538	0					
ANR	191831	Identifier	p		191538	1					
ANR	191832	Argument	( p + 1 ) / 2		191538	3					
ANR	191833	MultiplicativeExpression	( p + 1 ) / 2		191538	0		/			
ANR	191834	AdditiveExpression	p + 1		191538	0		+			
ANR	191835	Identifier	p		191538	0					
ANR	191836	PrimaryExpression	1		191538	1					
ANR	191837	PrimaryExpression	2		191538	1					
ANR	191838	Argument	9		191538	4					
ANR	191839	PrimaryExpression	9		191538	0					
ANR	191840	ElseStatement	else		191538	0					
ANR	191841	ExpressionStatement	"RENAME ( decode_line ) ( s , w , sample [ p ] , ( p + 1 ) / 2 , bits + ( s -> slice_coding_mode != 1 ) )"	59:16:1122:1205	191538	0	True				
ANR	191842	CallExpression	"RENAME ( decode_line ) ( s , w , sample [ p ] , ( p + 1 ) / 2 , bits + ( s -> slice_coding_mode != 1 ) )"		191538	0					
ANR	191843	Callee	RENAME ( decode_line )		191538	0					
ANR	191844	CallExpression	RENAME ( decode_line )		191538	0					
ANR	191845	Callee	RENAME		191538	0					
ANR	191846	Identifier	RENAME		191538	0					
ANR	191847	ArgumentList	decode_line		191538	1					
ANR	191848	Argument	decode_line		191538	0					
ANR	191849	Identifier	decode_line		191538	0					
ANR	191850	ArgumentList	s		191538	1					
ANR	191851	Argument	s		191538	0					
ANR	191852	Identifier	s		191538	0					
ANR	191853	Argument	w		191538	1					
ANR	191854	Identifier	w		191538	0					
ANR	191855	Argument	sample [ p ]		191538	2					
ANR	191856	ArrayIndexing	sample [ p ]		191538	0					
ANR	191857	Identifier	sample		191538	0					
ANR	191858	Identifier	p		191538	1					
ANR	191859	Argument	( p + 1 ) / 2		191538	3					
ANR	191860	MultiplicativeExpression	( p + 1 ) / 2		191538	0		/			
ANR	191861	AdditiveExpression	p + 1		191538	0		+			
ANR	191862	Identifier	p		191538	0					
ANR	191863	PrimaryExpression	1		191538	1					
ANR	191864	PrimaryExpression	2		191538	1					
ANR	191865	Argument	bits + ( s -> slice_coding_mode != 1 )		191538	4					
ANR	191866	AdditiveExpression	bits + ( s -> slice_coding_mode != 1 )		191538	0		+			
ANR	191867	Identifier	bits		191538	0					
ANR	191868	EqualityExpression	s -> slice_coding_mode != 1		191538	1		!=			
ANR	191869	PtrMemberAccess	s -> slice_coding_mode		191538	0					
ANR	191870	Identifier	s		191538	0					
ANR	191871	Identifier	slice_coding_mode		191538	1					
ANR	191872	PrimaryExpression	1		191538	1					
ANR	191873	ForStatement	for ( x = 0 ; x < w ; x ++ )		191538	1					
ANR	191874	ForInit	x = 0 ;	63:13:1232:1237	191538	0	True				
ANR	191875	AssignmentExpression	x = 0		191538	0		=			
ANR	191876	Identifier	x		191538	0					
ANR	191877	PrimaryExpression	0		191538	1					
ANR	191878	Condition	x < w	63:20:1239:1243	191538	1	True				
ANR	191879	RelationalExpression	x < w		191538	0		<			
ANR	191880	Identifier	x		191538	0					
ANR	191881	Identifier	w		191538	1					
ANR	191882	PostIncDecOperationExpression	x ++	63:27:1246:1248	191538	2	True				
ANR	191883	Identifier	x		191538	0					
ANR	191884	IncDec	++		191538	1					
ANR	191885	CompoundStatement		69:12:1279:1302	191538	3					
ANR	191886	IdentifierDeclStatement	int g = sample [ 0 ] [ 1 ] [ x ] ;	65:12:1266:1289	191538	0	True				
ANR	191887	IdentifierDecl	g = sample [ 0 ] [ 1 ] [ x ]		191538	0					
ANR	191888	IdentifierDeclType	int		191538	0					
ANR	191889	Identifier	g		191538	1					
ANR	191890	AssignmentExpression	g = sample [ 0 ] [ 1 ] [ x ]		191538	2		=			
ANR	191891	Identifier	g		191538	0					
ANR	191892	ArrayIndexing	sample [ 0 ] [ 1 ] [ x ]		191538	1					
ANR	191893	ArrayIndexing	sample [ 0 ] [ 1 ]		191538	0					
ANR	191894	ArrayIndexing	sample [ 0 ]		191538	0					
ANR	191895	Identifier	sample		191538	0					
ANR	191896	PrimaryExpression	0		191538	1					
ANR	191897	PrimaryExpression	1		191538	1					
ANR	191898	Identifier	x		191538	1					
ANR	191899	IdentifierDeclStatement	int b = sample [ 1 ] [ 1 ] [ x ] ;	67:12:1304:1327	191538	1	True				
ANR	191900	IdentifierDecl	b = sample [ 1 ] [ 1 ] [ x ]		191538	0					
ANR	191901	IdentifierDeclType	int		191538	0					
ANR	191902	Identifier	b		191538	1					
ANR	191903	AssignmentExpression	b = sample [ 1 ] [ 1 ] [ x ]		191538	2		=			
ANR	191904	Identifier	b		191538	0					
ANR	191905	ArrayIndexing	sample [ 1 ] [ 1 ] [ x ]		191538	1					
ANR	191906	ArrayIndexing	sample [ 1 ] [ 1 ]		191538	0					
ANR	191907	ArrayIndexing	sample [ 1 ]		191538	0					
ANR	191908	Identifier	sample		191538	0					
ANR	191909	PrimaryExpression	1		191538	1					
ANR	191910	PrimaryExpression	1		191538	1					
ANR	191911	Identifier	x		191538	1					
ANR	191912	IdentifierDeclStatement	int r = sample [ 2 ] [ 1 ] [ x ] ;	69:12:1342:1365	191538	2	True				
ANR	191913	IdentifierDecl	r = sample [ 2 ] [ 1 ] [ x ]		191538	0					
ANR	191914	IdentifierDeclType	int		191538	0					
ANR	191915	Identifier	r		191538	1					
ANR	191916	AssignmentExpression	r = sample [ 2 ] [ 1 ] [ x ]		191538	2		=			
ANR	191917	Identifier	r		191538	0					
ANR	191918	ArrayIndexing	sample [ 2 ] [ 1 ] [ x ]		191538	1					
ANR	191919	ArrayIndexing	sample [ 2 ] [ 1 ]		191538	0					
ANR	191920	ArrayIndexing	sample [ 2 ]		191538	0					
ANR	191921	Identifier	sample		191538	0					
ANR	191922	PrimaryExpression	2		191538	1					
ANR	191923	PrimaryExpression	1		191538	1					
ANR	191924	Identifier	x		191538	1					
ANR	191925	IdentifierDeclStatement	int a = sample [ 3 ] [ 1 ] [ x ] ;	71:12:1380:1403	191538	3	True				
ANR	191926	IdentifierDecl	a = sample [ 3 ] [ 1 ] [ x ]		191538	0					
ANR	191927	IdentifierDeclType	int		191538	0					
ANR	191928	Identifier	a		191538	1					
ANR	191929	AssignmentExpression	a = sample [ 3 ] [ 1 ] [ x ]		191538	2		=			
ANR	191930	Identifier	a		191538	0					
ANR	191931	ArrayIndexing	sample [ 3 ] [ 1 ] [ x ]		191538	1					
ANR	191932	ArrayIndexing	sample [ 3 ] [ 1 ]		191538	0					
ANR	191933	ArrayIndexing	sample [ 3 ]		191538	0					
ANR	191934	Identifier	sample		191538	0					
ANR	191935	PrimaryExpression	3		191538	1					
ANR	191936	PrimaryExpression	1		191538	1					
ANR	191937	Identifier	x		191538	1					
ANR	191938	IfStatement	if ( s -> slice_coding_mode != 1 )		191538	4					
ANR	191939	Condition	s -> slice_coding_mode != 1	75:16:1424:1448	191538	0	True				
ANR	191940	EqualityExpression	s -> slice_coding_mode != 1		191538	0		!=			
ANR	191941	PtrMemberAccess	s -> slice_coding_mode		191538	0					
ANR	191942	Identifier	s		191538	0					
ANR	191943	Identifier	slice_coding_mode		191538	1					
ANR	191944	PrimaryExpression	1		191538	1					
ANR	191945	CompoundStatement		73:43:1350:1350	191538	1					
ANR	191946	ExpressionStatement	b -= offset	77:16:1470:1481	191538	0	True				
ANR	191947	AssignmentExpression	b -= offset		191538	0		-=			
ANR	191948	Identifier	b		191538	0					
ANR	191949	Identifier	offset		191538	1					
ANR	191950	ExpressionStatement	r -= offset	79:16:1500:1511	191538	1	True				
ANR	191951	AssignmentExpression	r -= offset		191538	0		-=			
ANR	191952	Identifier	r		191538	0					
ANR	191953	Identifier	offset		191538	1					
ANR	191954	ExpressionStatement	g -= ( b * s -> slice_rct_by_coef + r * s -> slice_rct_ry_coef ) >> 2	81:16:1530:1593	191538	2	True				
ANR	191955	AssignmentExpression	g -= ( b * s -> slice_rct_by_coef + r * s -> slice_rct_ry_coef ) >> 2		191538	0		-=			
ANR	191956	Identifier	g		191538	0					
ANR	191957	ShiftExpression	( b * s -> slice_rct_by_coef + r * s -> slice_rct_ry_coef ) >> 2		191538	1		>>			
ANR	191958	AdditiveExpression	b * s -> slice_rct_by_coef + r * s -> slice_rct_ry_coef		191538	0		+			
ANR	191959	MultiplicativeExpression	b * s -> slice_rct_by_coef		191538	0		*			
ANR	191960	Identifier	b		191538	0					
ANR	191961	PtrMemberAccess	s -> slice_rct_by_coef		191538	1					
ANR	191962	Identifier	s		191538	0					
ANR	191963	Identifier	slice_rct_by_coef		191538	1					
ANR	191964	MultiplicativeExpression	r * s -> slice_rct_ry_coef		191538	1		*			
ANR	191965	Identifier	r		191538	0					
ANR	191966	PtrMemberAccess	s -> slice_rct_ry_coef		191538	1					
ANR	191967	Identifier	s		191538	0					
ANR	191968	Identifier	slice_rct_ry_coef		191538	1					
ANR	191969	PrimaryExpression	2		191538	1					
ANR	191970	ExpressionStatement	b += g	83:16:1612:1618	191538	3	True				
ANR	191971	AssignmentExpression	b += g		191538	0		+=			
ANR	191972	Identifier	b		191538	0					
ANR	191973	Identifier	g		191538	1					
ANR	191974	ExpressionStatement	r += g	85:16:1637:1643	191538	4	True				
ANR	191975	AssignmentExpression	r += g		191538	0		+=			
ANR	191976	Identifier	r		191538	0					
ANR	191977	Identifier	g		191538	1					
ANR	191978	IfStatement	if ( lbd )		191538	5					
ANR	191979	Condition	lbd	91:16:1679:1681	191538	0	True				
ANR	191980	Identifier	lbd		191538	0					
ANR	191981	ExpressionStatement	* ( ( uint32_t * ) ( src [ 0 ] + x * 4 + stride [ 0 ] * y ) ) = b + ( g << 8 ) + ( r << 16 ) + ( a << 24 )	93:16:1701:1776	191538	1	True				
ANR	191982	AssignmentExpression	* ( ( uint32_t * ) ( src [ 0 ] + x * 4 + stride [ 0 ] * y ) ) = b + ( g << 8 ) + ( r << 16 ) + ( a << 24 )		191538	0		=			
ANR	191983	UnaryOperationExpression	* ( ( uint32_t * ) ( src [ 0 ] + x * 4 + stride [ 0 ] * y ) )		191538	0					
ANR	191984	UnaryOperator	*		191538	0					
ANR	191985	CastExpression	( uint32_t * ) ( src [ 0 ] + x * 4 + stride [ 0 ] * y )		191538	1					
ANR	191986	CastTarget	uint32_t *		191538	0					
ANR	191987	AdditiveExpression	src [ 0 ] + x * 4 + stride [ 0 ] * y		191538	1		+			
ANR	191988	ArrayIndexing	src [ 0 ]		191538	0					
ANR	191989	Identifier	src		191538	0					
ANR	191990	PrimaryExpression	0		191538	1					
ANR	191991	AdditiveExpression	x * 4 + stride [ 0 ] * y		191538	1		+			
ANR	191992	MultiplicativeExpression	x * 4		191538	0		*			
ANR	191993	Identifier	x		191538	0					
ANR	191994	PrimaryExpression	4		191538	1					
ANR	191995	MultiplicativeExpression	stride [ 0 ] * y		191538	1		*			
ANR	191996	ArrayIndexing	stride [ 0 ]		191538	0					
ANR	191997	Identifier	stride		191538	0					
ANR	191998	PrimaryExpression	0		191538	1					
ANR	191999	Identifier	y		191538	1					
ANR	192000	AdditiveExpression	b + ( g << 8 ) + ( r << 16 ) + ( a << 24 )		191538	1		+			
ANR	192001	Identifier	b		191538	0					
ANR	192002	AdditiveExpression	( g << 8 ) + ( r << 16 ) + ( a << 24 )		191538	1		+			
ANR	192003	ShiftExpression	g << 8		191538	0		<<			
ANR	192004	Identifier	g		191538	0					
ANR	192005	PrimaryExpression	8		191538	1					
ANR	192006	AdditiveExpression	( r << 16 ) + ( a << 24 )		191538	1		+			
ANR	192007	ShiftExpression	r << 16		191538	0		<<			
ANR	192008	Identifier	r		191538	0					
ANR	192009	PrimaryExpression	16		191538	1					
ANR	192010	ShiftExpression	a << 24		191538	1		<<			
ANR	192011	Identifier	a		191538	0					
ANR	192012	PrimaryExpression	24		191538	1					
ANR	192013	ElseStatement	else		191538	0					
ANR	192014	IfStatement	if ( sizeof ( TYPE ) == 4 )		191538	0					
ANR	192015	Condition	sizeof ( TYPE ) == 4	95:21:1800:1816	191538	0	True				
ANR	192016	EqualityExpression	sizeof ( TYPE ) == 4		191538	0		==			
ANR	192017	SizeofExpression	sizeof ( TYPE )		191538	0					
ANR	192018	Sizeof	sizeof		191538	0					
ANR	192019	SizeofOperand	TYPE		191538	1					
ANR	192020	PrimaryExpression	4		191538	1					
ANR	192021	CompoundStatement		93:40:1718:1718	191538	1					
ANR	192022	ExpressionStatement	* ( ( uint16_t * ) ( src [ 0 ] + x * 2 + stride [ 0 ] * y ) ) = g	97:16:1838:1884	191538	0	True				
ANR	192023	AssignmentExpression	* ( ( uint16_t * ) ( src [ 0 ] + x * 2 + stride [ 0 ] * y ) ) = g		191538	0		=			
ANR	192024	UnaryOperationExpression	* ( ( uint16_t * ) ( src [ 0 ] + x * 2 + stride [ 0 ] * y ) )		191538	0					
ANR	192025	UnaryOperator	*		191538	0					
ANR	192026	CastExpression	( uint16_t * ) ( src [ 0 ] + x * 2 + stride [ 0 ] * y )		191538	1					
ANR	192027	CastTarget	uint16_t *		191538	0					
ANR	192028	AdditiveExpression	src [ 0 ] + x * 2 + stride [ 0 ] * y		191538	1		+			
ANR	192029	ArrayIndexing	src [ 0 ]		191538	0					
ANR	192030	Identifier	src		191538	0					
ANR	192031	PrimaryExpression	0		191538	1					
ANR	192032	AdditiveExpression	x * 2 + stride [ 0 ] * y		191538	1		+			
ANR	192033	MultiplicativeExpression	x * 2		191538	0		*			
ANR	192034	Identifier	x		191538	0					
ANR	192035	PrimaryExpression	2		191538	1					
ANR	192036	MultiplicativeExpression	stride [ 0 ] * y		191538	1		*			
ANR	192037	ArrayIndexing	stride [ 0 ]		191538	0					
ANR	192038	Identifier	stride		191538	0					
ANR	192039	PrimaryExpression	0		191538	1					
ANR	192040	Identifier	y		191538	1					
ANR	192041	Identifier	g		191538	1					
ANR	192042	ExpressionStatement	* ( ( uint16_t * ) ( src [ 1 ] + x * 2 + stride [ 1 ] * y ) ) = b	99:16:1903:1949	191538	1	True				
ANR	192043	AssignmentExpression	* ( ( uint16_t * ) ( src [ 1 ] + x * 2 + stride [ 1 ] * y ) ) = b		191538	0		=			
ANR	192044	UnaryOperationExpression	* ( ( uint16_t * ) ( src [ 1 ] + x * 2 + stride [ 1 ] * y ) )		191538	0					
ANR	192045	UnaryOperator	*		191538	0					
ANR	192046	CastExpression	( uint16_t * ) ( src [ 1 ] + x * 2 + stride [ 1 ] * y )		191538	1					
ANR	192047	CastTarget	uint16_t *		191538	0					
ANR	192048	AdditiveExpression	src [ 1 ] + x * 2 + stride [ 1 ] * y		191538	1		+			
ANR	192049	ArrayIndexing	src [ 1 ]		191538	0					
ANR	192050	Identifier	src		191538	0					
ANR	192051	PrimaryExpression	1		191538	1					
ANR	192052	AdditiveExpression	x * 2 + stride [ 1 ] * y		191538	1		+			
ANR	192053	MultiplicativeExpression	x * 2		191538	0		*			
ANR	192054	Identifier	x		191538	0					
ANR	192055	PrimaryExpression	2		191538	1					
ANR	192056	MultiplicativeExpression	stride [ 1 ] * y		191538	1		*			
ANR	192057	ArrayIndexing	stride [ 1 ]		191538	0					
ANR	192058	Identifier	stride		191538	0					
ANR	192059	PrimaryExpression	1		191538	1					
ANR	192060	Identifier	y		191538	1					
ANR	192061	Identifier	b		191538	1					
ANR	192062	ExpressionStatement	* ( ( uint16_t * ) ( src [ 2 ] + x * 2 + stride [ 2 ] * y ) ) = r	101:16:1968:2014	191538	2	True				
ANR	192063	AssignmentExpression	* ( ( uint16_t * ) ( src [ 2 ] + x * 2 + stride [ 2 ] * y ) ) = r		191538	0		=			
ANR	192064	UnaryOperationExpression	* ( ( uint16_t * ) ( src [ 2 ] + x * 2 + stride [ 2 ] * y ) )		191538	0					
ANR	192065	UnaryOperator	*		191538	0					
ANR	192066	CastExpression	( uint16_t * ) ( src [ 2 ] + x * 2 + stride [ 2 ] * y )		191538	1					
ANR	192067	CastTarget	uint16_t *		191538	0					
ANR	192068	AdditiveExpression	src [ 2 ] + x * 2 + stride [ 2 ] * y		191538	1		+			
ANR	192069	ArrayIndexing	src [ 2 ]		191538	0					
ANR	192070	Identifier	src		191538	0					
ANR	192071	PrimaryExpression	2		191538	1					
ANR	192072	AdditiveExpression	x * 2 + stride [ 2 ] * y		191538	1		+			
ANR	192073	MultiplicativeExpression	x * 2		191538	0		*			
ANR	192074	Identifier	x		191538	0					
ANR	192075	PrimaryExpression	2		191538	1					
ANR	192076	MultiplicativeExpression	stride [ 2 ] * y		191538	1		*			
ANR	192077	ArrayIndexing	stride [ 2 ]		191538	0					
ANR	192078	Identifier	stride		191538	0					
ANR	192079	PrimaryExpression	2		191538	1					
ANR	192080	Identifier	y		191538	1					
ANR	192081	Identifier	r		191538	1					
ANR	192082	ElseStatement	else		191538	0					
ANR	192083	CompoundStatement		101:19:1935:1935	191538	0					
ANR	192084	ExpressionStatement	* ( ( uint16_t * ) ( src [ 0 ] + x * 2 + stride [ 0 ] * y ) ) = b	105:16:2055:2101	191538	0	True				
ANR	192085	AssignmentExpression	* ( ( uint16_t * ) ( src [ 0 ] + x * 2 + stride [ 0 ] * y ) ) = b		191538	0		=			
ANR	192086	UnaryOperationExpression	* ( ( uint16_t * ) ( src [ 0 ] + x * 2 + stride [ 0 ] * y ) )		191538	0					
ANR	192087	UnaryOperator	*		191538	0					
ANR	192088	CastExpression	( uint16_t * ) ( src [ 0 ] + x * 2 + stride [ 0 ] * y )		191538	1					
ANR	192089	CastTarget	uint16_t *		191538	0					
ANR	192090	AdditiveExpression	src [ 0 ] + x * 2 + stride [ 0 ] * y		191538	1		+			
ANR	192091	ArrayIndexing	src [ 0 ]		191538	0					
ANR	192092	Identifier	src		191538	0					
ANR	192093	PrimaryExpression	0		191538	1					
ANR	192094	AdditiveExpression	x * 2 + stride [ 0 ] * y		191538	1		+			
ANR	192095	MultiplicativeExpression	x * 2		191538	0		*			
ANR	192096	Identifier	x		191538	0					
ANR	192097	PrimaryExpression	2		191538	1					
ANR	192098	MultiplicativeExpression	stride [ 0 ] * y		191538	1		*			
ANR	192099	ArrayIndexing	stride [ 0 ]		191538	0					
ANR	192100	Identifier	stride		191538	0					
ANR	192101	PrimaryExpression	0		191538	1					
ANR	192102	Identifier	y		191538	1					
ANR	192103	Identifier	b		191538	1					
ANR	192104	ExpressionStatement	* ( ( uint16_t * ) ( src [ 1 ] + x * 2 + stride [ 1 ] * y ) ) = g	107:16:2120:2166	191538	1	True				
ANR	192105	AssignmentExpression	* ( ( uint16_t * ) ( src [ 1 ] + x * 2 + stride [ 1 ] * y ) ) = g		191538	0		=			
ANR	192106	UnaryOperationExpression	* ( ( uint16_t * ) ( src [ 1 ] + x * 2 + stride [ 1 ] * y ) )		191538	0					
ANR	192107	UnaryOperator	*		191538	0					
ANR	192108	CastExpression	( uint16_t * ) ( src [ 1 ] + x * 2 + stride [ 1 ] * y )		191538	1					
ANR	192109	CastTarget	uint16_t *		191538	0					
ANR	192110	AdditiveExpression	src [ 1 ] + x * 2 + stride [ 1 ] * y		191538	1		+			
ANR	192111	ArrayIndexing	src [ 1 ]		191538	0					
ANR	192112	Identifier	src		191538	0					
ANR	192113	PrimaryExpression	1		191538	1					
ANR	192114	AdditiveExpression	x * 2 + stride [ 1 ] * y		191538	1		+			
ANR	192115	MultiplicativeExpression	x * 2		191538	0		*			
ANR	192116	Identifier	x		191538	0					
ANR	192117	PrimaryExpression	2		191538	1					
ANR	192118	MultiplicativeExpression	stride [ 1 ] * y		191538	1		*			
ANR	192119	ArrayIndexing	stride [ 1 ]		191538	0					
ANR	192120	Identifier	stride		191538	0					
ANR	192121	PrimaryExpression	1		191538	1					
ANR	192122	Identifier	y		191538	1					
ANR	192123	Identifier	g		191538	1					
ANR	192124	ExpressionStatement	* ( ( uint16_t * ) ( src [ 2 ] + x * 2 + stride [ 2 ] * y ) ) = r	109:16:2185:2231	191538	2	True				
ANR	192125	AssignmentExpression	* ( ( uint16_t * ) ( src [ 2 ] + x * 2 + stride [ 2 ] * y ) ) = r		191538	0		=			
ANR	192126	UnaryOperationExpression	* ( ( uint16_t * ) ( src [ 2 ] + x * 2 + stride [ 2 ] * y ) )		191538	0					
ANR	192127	UnaryOperator	*		191538	0					
ANR	192128	CastExpression	( uint16_t * ) ( src [ 2 ] + x * 2 + stride [ 2 ] * y )		191538	1					
ANR	192129	CastTarget	uint16_t *		191538	0					
ANR	192130	AdditiveExpression	src [ 2 ] + x * 2 + stride [ 2 ] * y		191538	1		+			
ANR	192131	ArrayIndexing	src [ 2 ]		191538	0					
ANR	192132	Identifier	src		191538	0					
ANR	192133	PrimaryExpression	2		191538	1					
ANR	192134	AdditiveExpression	x * 2 + stride [ 2 ] * y		191538	1		+			
ANR	192135	MultiplicativeExpression	x * 2		191538	0		*			
ANR	192136	Identifier	x		191538	0					
ANR	192137	PrimaryExpression	2		191538	1					
ANR	192138	MultiplicativeExpression	stride [ 2 ] * y		191538	1		*			
ANR	192139	ArrayIndexing	stride [ 2 ]		191538	0					
ANR	192140	Identifier	stride		191538	0					
ANR	192141	PrimaryExpression	2		191538	1					
ANR	192142	Identifier	y		191538	1					
ANR	192143	Identifier	r		191538	1					
ANR	192144	ReturnType	static void RENAME		191538	1					
ANR	192145	Identifier	( decode_rgb_frame )		191538	2					
ANR	192146	Identifier	decode_rgb_frame		191538	3					
ANR	192147	ParameterList	"FFV1Context * s , uint8_t * src [ 3 ] , int w , int h , int stride [ 3 ]"		191538	4					
ANR	192148	Parameter	FFV1Context * s	1:37:37:50	191538	0	True				
ANR	192149	ParameterType	FFV1Context *		191538	0					
ANR	192150	Identifier	s		191538	1					
ANR	192151	Parameter	uint8_t * src [ 3 ]	1:53:53:67	191538	1	True				
ANR	192152	ParameterType	uint8_t * [ 3 ]		191538	0					
ANR	192153	Identifier	src		191538	1					
ANR	192154	Parameter	int w	1:70:70:74	191538	2	True				
ANR	192155	ParameterType	int		191538	0					
ANR	192156	Identifier	w		191538	1					
ANR	192157	Parameter	int h	1:77:77:81	191538	3	True				
ANR	192158	ParameterType	int		191538	0					
ANR	192159	Identifier	h		191538	1					
ANR	192160	Parameter	int stride [ 3 ]	1:84:84:96	191538	4	True				
ANR	192161	ParameterType	int [ 3 ]		191538	0					
ANR	192162	Identifier	stride		191538	1					
ANR	192163	CFGEntryNode	ENTRY		191538		True				
ANR	192164	CFGExitNode	EXIT		191538		True				
ANR	192165	Symbol	* w		191538						
ANR	192166	Symbol	* stride		191538						
ANR	192167	Symbol	* x		191538						
ANR	192168	Symbol	* y		191538						
ANR	192169	Symbol	stride		191538						
ANR	192170	Symbol	* * sample		191538						
ANR	192171	Symbol	* ( ( uint16_t * ) ( src [ 1 ] + x * 2 + stride [ 1 ] * y ) )		191538						
ANR	192172	Symbol	* src		191538						
ANR	192173	Symbol	s -> transparency		191538						
ANR	192174	Symbol	* * * sample		191538						
ANR	192175	Symbol	* ( ( uint32_t * ) ( src [ 0 ] + x * 4 + stride [ 0 ] * y ) )		191538						
ANR	192176	Symbol	s -> sample_buffer		191538						
ANR	192177	Symbol	* ( ( uint16_t * ) ( src [ 2 ] + x * 2 + stride [ 2 ] * y ) )		191538						
ANR	192178	Symbol	* s -> avctx		191538						
ANR	192179	Symbol	offset		191538						
ANR	192180	Symbol	bits		191538						
ANR	192181	Symbol	lbd		191538						
ANR	192182	Symbol	* * * p		191538						
ANR	192183	Symbol	* * src		191538						
ANR	192184	Symbol	decode_line		191538						
ANR	192185	Symbol	s -> avctx		191538						
ANR	192186	Symbol	* RENAME ( s -> sample_buffer )		191538						
ANR	192187	Symbol	s -> slice_rct_ry_coef		191538						
ANR	192188	Symbol	s -> avctx -> bits_per_raw_sample		191538						
ANR	192189	Symbol	s -> run_index		191538						
ANR	192190	Symbol	* * x		191538						
ANR	192191	Symbol	s -> slice_coding_mode		191538						
ANR	192192	Symbol	* * s		191538						
ANR	192193	Symbol	* * p		191538						
ANR	192194	Symbol	* sample		191538						
ANR	192195	Symbol	RENAME		191538						
ANR	192196	Symbol	a		191538						
ANR	192197	Symbol	* RENAME		191538						
ANR	192198	Symbol	temp		191538						
ANR	192199	Symbol	b		191538						
ANR	192200	Symbol	src		191538						
ANR	192201	Symbol	g		191538						
ANR	192202	Symbol	h		191538						
ANR	192203	Symbol	* ( ( uint16_t * ) ( src [ 0 ] + x * 2 + stride [ 0 ] * y ) )		191538						
ANR	192204	Symbol	sample		191538						
ANR	192205	Symbol	* * stride		191538						
ANR	192206	Symbol	p		191538						
ANR	192207	Symbol	r		191538						
ANR	192208	Symbol	s		191538						
ANR	192209	Symbol	w		191538						
ANR	192210	Symbol	x		191538						
ANR	192211	Symbol	y		191538						
ANR	192212	Symbol	* p		191538						
ANR	192213	Symbol	* s		191538						
ANR	192214	Symbol	s -> slice_rct_by_coef		191538						
