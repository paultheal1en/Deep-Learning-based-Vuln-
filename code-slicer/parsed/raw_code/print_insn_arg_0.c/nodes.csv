command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6682265	File	/home/p4ultr4n/workplace/ReVeal/raw_code/print_insn_arg_0.c								
ANR	6682266	Function	print_insn_arg	1:0:0:15061							
ANR	6682267	FunctionDef	"print_insn_arg (const char * d , unsigned char * buffer , unsigned char * p0 , bfd_vma addr , disassemble_info * info)"		6682266	0					
ANR	6682268	CompoundStatement		11:0:124:15061	6682266	0					
ANR	6682269	IdentifierDeclStatement	int val = 0 ;	13:2:129:140	6682266	0	True				
ANR	6682270	IdentifierDecl	val = 0		6682266	0					
ANR	6682271	IdentifierDeclType	int		6682266	0					
ANR	6682272	Identifier	val		6682266	1					
ANR	6682273	AssignmentExpression	val = 0		6682266	2		=			
ANR	6682274	Identifier	val		6682266	0					
ANR	6682275	PrimaryExpression	0		6682266	1					
ANR	6682276	IdentifierDeclStatement	int place = d [ 1 ] ;	15:2:145:161	6682266	1	True				
ANR	6682277	IdentifierDecl	place = d [ 1 ]		6682266	0					
ANR	6682278	IdentifierDeclType	int		6682266	0					
ANR	6682279	Identifier	place		6682266	1					
ANR	6682280	AssignmentExpression	place = d [ 1 ]		6682266	2		=			
ANR	6682281	Identifier	place		6682266	0					
ANR	6682282	ArrayIndexing	d [ 1 ]		6682266	1					
ANR	6682283	Identifier	d		6682266	0					
ANR	6682284	PrimaryExpression	1		6682266	1					
ANR	6682285	IdentifierDeclStatement	unsigned char * p = p0 ;	17:2:166:187	6682266	2	True				
ANR	6682286	IdentifierDecl	* p = p0		6682266	0					
ANR	6682287	IdentifierDeclType	unsigned char *		6682266	0					
ANR	6682288	Identifier	p		6682266	1					
ANR	6682289	AssignmentExpression	* p = p0		6682266	2		=			
ANR	6682290	Identifier	p0		6682266	0					
ANR	6682291	Identifier	p0		6682266	1					
ANR	6682292	IdentifierDeclStatement	int regno ;	19:2:192:201	6682266	3	True				
ANR	6682293	IdentifierDecl	regno		6682266	0					
ANR	6682294	IdentifierDeclType	int		6682266	0					
ANR	6682295	Identifier	regno		6682266	1					
ANR	6682296	IdentifierDeclStatement	const char * regname ;	21:2:206:225	6682266	4	True				
ANR	6682297	IdentifierDecl	* regname		6682266	0					
ANR	6682298	IdentifierDeclType	const char *		6682266	0					
ANR	6682299	Identifier	regname		6682266	1					
ANR	6682300	IdentifierDeclStatement	unsigned char * p1 ;	23:2:230:247	6682266	5	True				
ANR	6682301	IdentifierDecl	* p1		6682266	0					
ANR	6682302	IdentifierDeclType	unsigned char *		6682266	0					
ANR	6682303	Identifier	p1		6682266	1					
ANR	6682304	IdentifierDeclStatement	double flval ;	25:2:252:264	6682266	6	True				
ANR	6682305	IdentifierDecl	flval		6682266	0					
ANR	6682306	IdentifierDeclType	double		6682266	0					
ANR	6682307	Identifier	flval		6682266	1					
ANR	6682308	IdentifierDeclStatement	int flt_p ;	27:2:269:278	6682266	7	True				
ANR	6682309	IdentifierDecl	flt_p		6682266	0					
ANR	6682310	IdentifierDeclType	int		6682266	0					
ANR	6682311	Identifier	flt_p		6682266	1					
ANR	6682312	IdentifierDeclStatement	bfd_signed_vma disp ;	29:2:283:302	6682266	8	True				
ANR	6682313	IdentifierDecl	disp		6682266	0					
ANR	6682314	IdentifierDeclType	bfd_signed_vma		6682266	0					
ANR	6682315	Identifier	disp		6682266	1					
ANR	6682316	IdentifierDeclStatement	unsigned int uval ;	31:2:307:324	6682266	9	True				
ANR	6682317	IdentifierDecl	uval		6682266	0					
ANR	6682318	IdentifierDeclType	unsigned int		6682266	0					
ANR	6682319	Identifier	uval		6682266	1					
ANR	6682320	SwitchStatement	switch ( * d )		6682266	10					
ANR	6682321	Condition	* d	35:10:339:340	6682266	0	True				
ANR	6682322	UnaryOperationExpression	* d		6682266	0					
ANR	6682323	UnaryOperator	*		6682266	0					
ANR	6682324	Identifier	d		6682266	1					
ANR	6682325	CompoundStatement		27:4:223:223	6682266	1					
ANR	6682326	Label	case 'c' :	39:4:355:363	6682266	0	True				
ANR	6682327	CompoundStatement		31:6:273:273	6682266	1					
ANR	6682328	Statement	static	43:8:409:414	6682266	0	True				
ANR	6682329	Statement	const	43:15:416:420	6682266	1	True				
ANR	6682330	Statement	char	43:21:422:425	6682266	2	True				
ANR	6682331	Statement	*	43:26:427:427	6682266	3	True				
ANR	6682332	Statement	const	43:27:428:432	6682266	4	True				
ANR	6682333	Statement	cacheFieldName	43:33:434:447	6682266	5	True				
ANR	6682334	Statement	[	43:47:448:448	6682266	6	True				
ANR	6682335	Statement	]	43:48:449:449	6682266	7	True				
ANR	6682336	Statement	=	43:50:451:451	6682266	8	True				
ANR	6682337	CompoundStatement		33:52:328:328	6682266	9					
ANR	6682338	Statement	"""nc"""	43:54:455:458	6682266	0	True				
ANR	6682339	Statement	","	43:58:459:459	6682266	1	True				
ANR	6682340	Statement	"""dc"""	43:60:461:464	6682266	2	True				
ANR	6682341	Statement	","	43:64:465:465	6682266	3	True				
ANR	6682342	Statement	"""ic"""	43:66:467:470	6682266	4	True				
ANR	6682343	Statement	","	43:70:471:471	6682266	5	True				
ANR	6682344	Statement	"""bc"""	43:72:473:476	6682266	6	True				
ANR	6682345	ExpressionStatement		43:78:479:479	6682266	10	True				
ANR	6682346	ExpressionStatement	"val = fetch_arg ( buffer , place , 2 , info )"	45:8:490:530	6682266	11	True				
ANR	6682347	AssignmentExpression	"val = fetch_arg ( buffer , place , 2 , info )"		6682266	0		=			
ANR	6682348	Identifier	val		6682266	0					
ANR	6682349	CallExpression	"fetch_arg ( buffer , place , 2 , info )"		6682266	1					
ANR	6682350	Callee	fetch_arg		6682266	0					
ANR	6682351	Identifier	fetch_arg		6682266	0					
ANR	6682352	ArgumentList	buffer		6682266	1					
ANR	6682353	Argument	buffer		6682266	0					
ANR	6682354	Identifier	buffer		6682266	0					
ANR	6682355	Argument	place		6682266	1					
ANR	6682356	Identifier	place		6682266	0					
ANR	6682357	Argument	2		6682266	2					
ANR	6682358	PrimaryExpression	2		6682266	0					
ANR	6682359	Argument	info		6682266	3					
ANR	6682360	Identifier	info		6682266	0					
ANR	6682361	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , cacheFieldName [ val ] )"	47:8:541:598	6682266	12	True				
ANR	6682362	CallExpression	"( * info -> fprintf_func ) ( info -> stream , cacheFieldName [ val ] )"		6682266	0					
ANR	6682363	Callee	* info -> fprintf_func		6682266	0					
ANR	6682364	UnaryOperationExpression	* info -> fprintf_func		6682266	0					
ANR	6682365	UnaryOperator	*		6682266	0					
ANR	6682366	PtrMemberAccess	info -> fprintf_func		6682266	1					
ANR	6682367	Identifier	info		6682266	0					
ANR	6682368	Identifier	fprintf_func		6682266	1					
ANR	6682369	ArgumentList	info -> stream		6682266	1					
ANR	6682370	Argument	info -> stream		6682266	0					
ANR	6682371	PtrMemberAccess	info -> stream		6682266	0					
ANR	6682372	Identifier	info		6682266	0					
ANR	6682373	Identifier	stream		6682266	1					
ANR	6682374	Argument	cacheFieldName [ val ]		6682266	1					
ANR	6682375	ArrayIndexing	cacheFieldName [ val ]		6682266	0					
ANR	6682376	Identifier	cacheFieldName		6682266	0					
ANR	6682377	Identifier	val		6682266	1					
ANR	6682378	BreakStatement	break ;	49:8:609:614	6682266	13	True				
ANR	6682379	Label	case 'a' :	55:4:632:640	6682266	2	True				
ANR	6682380	CompoundStatement		47:6:578:578	6682266	3					
ANR	6682381	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s@"" , reg_names [ fetch_arg ( buffer , place , 3 , info ) + 8 ] )"	59:8:714:822	6682266	0	True				
ANR	6682382	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s@"" , reg_names [ fetch_arg ( buffer , place , 3 , info ) + 8 ] )"		6682266	0					
ANR	6682383	Callee	* info -> fprintf_func		6682266	0					
ANR	6682384	UnaryOperationExpression	* info -> fprintf_func		6682266	0					
ANR	6682385	UnaryOperator	*		6682266	0					
ANR	6682386	PtrMemberAccess	info -> fprintf_func		6682266	1					
ANR	6682387	Identifier	info		6682266	0					
ANR	6682388	Identifier	fprintf_func		6682266	1					
ANR	6682389	ArgumentList	info -> stream		6682266	1					
ANR	6682390	Argument	info -> stream		6682266	0					
ANR	6682391	PtrMemberAccess	info -> stream		6682266	0					
ANR	6682392	Identifier	info		6682266	0					
ANR	6682393	Identifier	stream		6682266	1					
ANR	6682394	Argument	"""%s@"""		6682266	1					
ANR	6682395	PrimaryExpression	"""%s@"""		6682266	0					
ANR	6682396	Argument	"reg_names [ fetch_arg ( buffer , place , 3 , info ) + 8 ]"		6682266	2					
ANR	6682397	ArrayIndexing	"reg_names [ fetch_arg ( buffer , place , 3 , info ) + 8 ]"		6682266	0					
ANR	6682398	Identifier	reg_names		6682266	0					
ANR	6682399	AdditiveExpression	"fetch_arg ( buffer , place , 3 , info ) + 8"		6682266	1		+			
ANR	6682400	CallExpression	"fetch_arg ( buffer , place , 3 , info )"		6682266	0					
ANR	6682401	Callee	fetch_arg		6682266	0					
ANR	6682402	Identifier	fetch_arg		6682266	0					
ANR	6682403	ArgumentList	buffer		6682266	1					
ANR	6682404	Argument	buffer		6682266	0					
ANR	6682405	Identifier	buffer		6682266	0					
ANR	6682406	Argument	place		6682266	1					
ANR	6682407	Identifier	place		6682266	0					
ANR	6682408	Argument	3		6682266	2					
ANR	6682409	PrimaryExpression	3		6682266	0					
ANR	6682410	Argument	info		6682266	3					
ANR	6682411	Identifier	info		6682266	0					
ANR	6682412	PrimaryExpression	8		6682266	1					
ANR	6682413	BreakStatement	break ;	67:8:833:838	6682266	1	True				
ANR	6682414	Label	case '_' :	73:4:856:864	6682266	4	True				
ANR	6682415	CompoundStatement		65:6:792:792	6682266	5					
ANR	6682416	ExpressionStatement	uval = NEXTULONG ( p )	77:8:928:948	6682266	0	True				
ANR	6682417	AssignmentExpression	uval = NEXTULONG ( p )		6682266	0		=			
ANR	6682418	Identifier	uval		6682266	0					
ANR	6682419	CallExpression	NEXTULONG ( p )		6682266	1					
ANR	6682420	Callee	NEXTULONG		6682266	0					
ANR	6682421	Identifier	NEXTULONG		6682266	0					
ANR	6682422	ArgumentList	p		6682266	1					
ANR	6682423	Argument	p		6682266	0					
ANR	6682424	Identifier	p		6682266	0					
ANR	6682425	ExpressionStatement	"( * info -> print_address_func ) ( uval , info )"	79:1:952:992	6682266	1	True				
ANR	6682426	CallExpression	"( * info -> print_address_func ) ( uval , info )"		6682266	0					
ANR	6682427	Callee	* info -> print_address_func		6682266	0					
ANR	6682428	UnaryOperationExpression	* info -> print_address_func		6682266	0					
ANR	6682429	UnaryOperator	*		6682266	0					
ANR	6682430	PtrMemberAccess	info -> print_address_func		6682266	1					
ANR	6682431	Identifier	info		6682266	0					
ANR	6682432	Identifier	print_address_func		6682266	1					
ANR	6682433	ArgumentList	uval		6682266	1					
ANR	6682434	Argument	uval		6682266	0					
ANR	6682435	Identifier	uval		6682266	0					
ANR	6682436	Argument	info		6682266	1					
ANR	6682437	Identifier	info		6682266	0					
ANR	6682438	BreakStatement	break ;	81:8:1003:1008	6682266	2	True				
ANR	6682439	Label	case 'C' :	87:4:1026:1034	6682266	6	True				
ANR	6682440	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%%ccr"" )"	89:6:1043:1088	6682266	7	True				
ANR	6682441	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%%ccr"" )"		6682266	0					
ANR	6682442	Callee	* info -> fprintf_func		6682266	0					
ANR	6682443	UnaryOperationExpression	* info -> fprintf_func		6682266	0					
ANR	6682444	UnaryOperator	*		6682266	0					
ANR	6682445	PtrMemberAccess	info -> fprintf_func		6682266	1					
ANR	6682446	Identifier	info		6682266	0					
ANR	6682447	Identifier	fprintf_func		6682266	1					
ANR	6682448	ArgumentList	info -> stream		6682266	1					
ANR	6682449	Argument	info -> stream		6682266	0					
ANR	6682450	PtrMemberAccess	info -> stream		6682266	0					
ANR	6682451	Identifier	info		6682266	0					
ANR	6682452	Identifier	stream		6682266	1					
ANR	6682453	Argument	"""%%ccr"""		6682266	1					
ANR	6682454	PrimaryExpression	"""%%ccr"""		6682266	0					
ANR	6682455	BreakStatement	break ;	91:6:1097:1102	6682266	8	True				
ANR	6682456	Label	case 'S' :	95:4:1111:1119	6682266	9	True				
ANR	6682457	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%%sr"" )"	97:6:1128:1172	6682266	10	True				
ANR	6682458	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%%sr"" )"		6682266	0					
ANR	6682459	Callee	* info -> fprintf_func		6682266	0					
ANR	6682460	UnaryOperationExpression	* info -> fprintf_func		6682266	0					
ANR	6682461	UnaryOperator	*		6682266	0					
ANR	6682462	PtrMemberAccess	info -> fprintf_func		6682266	1					
ANR	6682463	Identifier	info		6682266	0					
ANR	6682464	Identifier	fprintf_func		6682266	1					
ANR	6682465	ArgumentList	info -> stream		6682266	1					
ANR	6682466	Argument	info -> stream		6682266	0					
ANR	6682467	PtrMemberAccess	info -> stream		6682266	0					
ANR	6682468	Identifier	info		6682266	0					
ANR	6682469	Identifier	stream		6682266	1					
ANR	6682470	Argument	"""%%sr"""		6682266	1					
ANR	6682471	PrimaryExpression	"""%%sr"""		6682266	0					
ANR	6682472	BreakStatement	break ;	99:6:1181:1186	6682266	11	True				
ANR	6682473	Label	case 'U' :	103:4:1195:1203	6682266	12	True				
ANR	6682474	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%%usp"" )"	105:6:1212:1257	6682266	13	True				
ANR	6682475	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%%usp"" )"		6682266	0					
ANR	6682476	Callee	* info -> fprintf_func		6682266	0					
ANR	6682477	UnaryOperationExpression	* info -> fprintf_func		6682266	0					
ANR	6682478	UnaryOperator	*		6682266	0					
ANR	6682479	PtrMemberAccess	info -> fprintf_func		6682266	1					
ANR	6682480	Identifier	info		6682266	0					
ANR	6682481	Identifier	fprintf_func		6682266	1					
ANR	6682482	ArgumentList	info -> stream		6682266	1					
ANR	6682483	Argument	info -> stream		6682266	0					
ANR	6682484	PtrMemberAccess	info -> stream		6682266	0					
ANR	6682485	Identifier	info		6682266	0					
ANR	6682486	Identifier	stream		6682266	1					
ANR	6682487	Argument	"""%%usp"""		6682266	1					
ANR	6682488	PrimaryExpression	"""%%usp"""		6682266	0					
ANR	6682489	BreakStatement	break ;	107:6:1266:1271	6682266	14	True				
ANR	6682490	Label	case 'E' :	111:4:1280:1288	6682266	15	True				
ANR	6682491	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%%acc"" )"	113:6:1297:1342	6682266	16	True				
ANR	6682492	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%%acc"" )"		6682266	0					
ANR	6682493	Callee	* info -> fprintf_func		6682266	0					
ANR	6682494	UnaryOperationExpression	* info -> fprintf_func		6682266	0					
ANR	6682495	UnaryOperator	*		6682266	0					
ANR	6682496	PtrMemberAccess	info -> fprintf_func		6682266	1					
ANR	6682497	Identifier	info		6682266	0					
ANR	6682498	Identifier	fprintf_func		6682266	1					
ANR	6682499	ArgumentList	info -> stream		6682266	1					
ANR	6682500	Argument	info -> stream		6682266	0					
ANR	6682501	PtrMemberAccess	info -> stream		6682266	0					
ANR	6682502	Identifier	info		6682266	0					
ANR	6682503	Identifier	stream		6682266	1					
ANR	6682504	Argument	"""%%acc"""		6682266	1					
ANR	6682505	PrimaryExpression	"""%%acc"""		6682266	0					
ANR	6682506	BreakStatement	break ;	115:6:1351:1356	6682266	17	True				
ANR	6682507	Label	case 'G' :	119:4:1365:1373	6682266	18	True				
ANR	6682508	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%%macsr"" )"	121:6:1382:1429	6682266	19	True				
ANR	6682509	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%%macsr"" )"		6682266	0					
ANR	6682510	Callee	* info -> fprintf_func		6682266	0					
ANR	6682511	UnaryOperationExpression	* info -> fprintf_func		6682266	0					
ANR	6682512	UnaryOperator	*		6682266	0					
ANR	6682513	PtrMemberAccess	info -> fprintf_func		6682266	1					
ANR	6682514	Identifier	info		6682266	0					
ANR	6682515	Identifier	fprintf_func		6682266	1					
ANR	6682516	ArgumentList	info -> stream		6682266	1					
ANR	6682517	Argument	info -> stream		6682266	0					
ANR	6682518	PtrMemberAccess	info -> stream		6682266	0					
ANR	6682519	Identifier	info		6682266	0					
ANR	6682520	Identifier	stream		6682266	1					
ANR	6682521	Argument	"""%%macsr"""		6682266	1					
ANR	6682522	PrimaryExpression	"""%%macsr"""		6682266	0					
ANR	6682523	BreakStatement	break ;	123:6:1438:1443	6682266	20	True				
ANR	6682524	Label	case 'H' :	127:4:1452:1460	6682266	21	True				
ANR	6682525	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%%mask"" )"	129:6:1469:1515	6682266	22	True				
ANR	6682526	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%%mask"" )"		6682266	0					
ANR	6682527	Callee	* info -> fprintf_func		6682266	0					
ANR	6682528	UnaryOperationExpression	* info -> fprintf_func		6682266	0					
ANR	6682529	UnaryOperator	*		6682266	0					
ANR	6682530	PtrMemberAccess	info -> fprintf_func		6682266	1					
ANR	6682531	Identifier	info		6682266	0					
ANR	6682532	Identifier	fprintf_func		6682266	1					
ANR	6682533	ArgumentList	info -> stream		6682266	1					
ANR	6682534	Argument	info -> stream		6682266	0					
ANR	6682535	PtrMemberAccess	info -> stream		6682266	0					
ANR	6682536	Identifier	info		6682266	0					
ANR	6682537	Identifier	stream		6682266	1					
ANR	6682538	Argument	"""%%mask"""		6682266	1					
ANR	6682539	PrimaryExpression	"""%%mask"""		6682266	0					
ANR	6682540	BreakStatement	break ;	131:6:1524:1529	6682266	23	True				
ANR	6682541	Label	case 'J' :	135:4:1538:1546	6682266	24	True				
ANR	6682542	CompoundStatement		135:14:1656:2226	6682266	25					
ANR	6682543	Statement	static	145:1:1768:1773	6682266	0	True				
ANR	6682544	Statement	const	145:8:1775:1779	6682266	1	True				
ANR	6682545	ClassDefStatement	"struct { const char * name ; int value ; } names [ ] = { { ""%sfc"" , 0x000 } , { ""%dfc"" , 0x001 } , { ""%cacr"" , 0x002 } , { ""%tc"" , 0x003 } , { ""%itt0"" , 0x004 } , { ""%itt1"" , 0x005 } , { ""%dtt0"" , 0x006 } , { ""%dtt1"" , 0x007 } , { ""%buscr"" , 0x008 } , { ""%usp"" , 0x800 } , { ""%vbr"" , 0x801 } , { ""%caar"" , 0x802 } , { ""%msp"" , 0x803 } , { ""%isp"" , 0x804 } , { ""%flashbar"" , 0xc04 } , { ""%rambar"" , 0xc05 } , { ""%mmusr"" , 0x805 } , { ""%urp"" , 0x806 } , { ""%srp"" , 0x807 } , { ""%pcr"" , 0x808 } } ;"	145:14:1781:2351	6682266	2	True				
ANR	6682546	IdentifierDecl	"names [ ] = { { ""%sfc"" , 0x000 } , { ""%dfc"" , 0x001 } , { ""%cacr"" , 0x002 } , { ""%tc"" , 0x003 } , { ""%itt0"" , 0x004 } , { ""%itt1"" , 0x005 } , { ""%dtt0"" , 0x006 } , { ""%dtt1"" , 0x007 } , { ""%buscr"" , 0x008 } , { ""%usp"" , 0x800 } , { ""%vbr"" , 0x801 } , { ""%caar"" , 0x802 } , { ""%msp"" , 0x803 } , { ""%isp"" , 0x804 } , { ""%flashbar"" , 0xc04 } , { ""%rambar"" , 0xc05 } , { ""%mmusr"" , 0x805 } , { ""%urp"" , 0x806 } , { ""%srp"" , 0x807 } , { ""%pcr"" , 0x808 } }"		6682266	0					
ANR	6682547	IdentifierDeclType	 [ ]		6682266	0					
ANR	6682548	Identifier	names		6682266	1					
ANR	6682549	AssignmentExpression	"names [ ] = { { ""%sfc"" , 0x000 } , { ""%dfc"" , 0x001 } , { ""%cacr"" , 0x002 } , { ""%tc"" , 0x003 } , { ""%itt0"" , 0x004 } , { ""%itt1"" , 0x005 } , { ""%dtt0"" , 0x006 } , { ""%dtt1"" , 0x007 } , { ""%buscr"" , 0x008 } , { ""%usp"" , 0x800 } , { ""%vbr"" , 0x801 } , { ""%caar"" , 0x802 } , { ""%msp"" , 0x803 } , { ""%isp"" , 0x804 } , { ""%flashbar"" , 0xc04 } , { ""%rambar"" , 0xc05 } , { ""%mmusr"" , 0x805 } , { ""%urp"" , 0x806 } , { ""%srp"" , 0x807 } , { ""%pcr"" , 0x808 } }"		6682266	2		=			
ANR	6682550	Identifier	names		6682266	0					
ANR	6682551	InitializerList	"""%sfc"""		6682266	1					
ANR	6682552	InitializerList	"""%sfc"""		6682266	0					
ANR	6682553	PrimaryExpression	"""%sfc"""		6682266	0					
ANR	6682554	PrimaryExpression	0x000		6682266	1					
ANR	6682555	InitializerList	"""%dfc"""		6682266	1					
ANR	6682556	PrimaryExpression	"""%dfc"""		6682266	0					
ANR	6682557	PrimaryExpression	0x001		6682266	1					
ANR	6682558	InitializerList	"""%cacr"""		6682266	2					
ANR	6682559	PrimaryExpression	"""%cacr"""		6682266	0					
ANR	6682560	PrimaryExpression	0x002		6682266	1					
ANR	6682561	InitializerList	"""%tc"""		6682266	3					
ANR	6682562	PrimaryExpression	"""%tc"""		6682266	0					
ANR	6682563	PrimaryExpression	0x003		6682266	1					
ANR	6682564	InitializerList	"""%itt0"""		6682266	4					
ANR	6682565	PrimaryExpression	"""%itt0"""		6682266	0					
ANR	6682566	PrimaryExpression	0x004		6682266	1					
ANR	6682567	InitializerList	"""%itt1"""		6682266	5					
ANR	6682568	PrimaryExpression	"""%itt1"""		6682266	0					
ANR	6682569	PrimaryExpression	0x005		6682266	1					
ANR	6682570	InitializerList	"""%dtt0"""		6682266	6					
ANR	6682571	PrimaryExpression	"""%dtt0"""		6682266	0					
ANR	6682572	PrimaryExpression	0x006		6682266	1					
ANR	6682573	InitializerList	"""%dtt1"""		6682266	7					
ANR	6682574	PrimaryExpression	"""%dtt1"""		6682266	0					
ANR	6682575	PrimaryExpression	0x007		6682266	1					
ANR	6682576	InitializerList	"""%buscr"""		6682266	8					
ANR	6682577	PrimaryExpression	"""%buscr"""		6682266	0					
ANR	6682578	PrimaryExpression	0x008		6682266	1					
ANR	6682579	InitializerList	"""%usp"""		6682266	9					
ANR	6682580	PrimaryExpression	"""%usp"""		6682266	0					
ANR	6682581	PrimaryExpression	0x800		6682266	1					
ANR	6682582	InitializerList	"""%vbr"""		6682266	10					
ANR	6682583	PrimaryExpression	"""%vbr"""		6682266	0					
ANR	6682584	PrimaryExpression	0x801		6682266	1					
ANR	6682585	InitializerList	"""%caar"""		6682266	11					
ANR	6682586	PrimaryExpression	"""%caar"""		6682266	0					
ANR	6682587	PrimaryExpression	0x802		6682266	1					
ANR	6682588	InitializerList	"""%msp"""		6682266	12					
ANR	6682589	PrimaryExpression	"""%msp"""		6682266	0					
ANR	6682590	PrimaryExpression	0x803		6682266	1					
ANR	6682591	InitializerList	"""%isp"""		6682266	13					
ANR	6682592	PrimaryExpression	"""%isp"""		6682266	0					
ANR	6682593	PrimaryExpression	0x804		6682266	1					
ANR	6682594	InitializerList	"""%flashbar"""		6682266	14					
ANR	6682595	PrimaryExpression	"""%flashbar"""		6682266	0					
ANR	6682596	PrimaryExpression	0xc04		6682266	1					
ANR	6682597	InitializerList	"""%rambar"""		6682266	15					
ANR	6682598	PrimaryExpression	"""%rambar"""		6682266	0					
ANR	6682599	PrimaryExpression	0xc05		6682266	1					
ANR	6682600	InitializerList	"""%mmusr"""		6682266	16					
ANR	6682601	PrimaryExpression	"""%mmusr"""		6682266	0					
ANR	6682602	PrimaryExpression	0x805		6682266	1					
ANR	6682603	InitializerList	"""%urp"""		6682266	17					
ANR	6682604	PrimaryExpression	"""%urp"""		6682266	0					
ANR	6682605	PrimaryExpression	0x806		6682266	1					
ANR	6682606	InitializerList	"""%srp"""		6682266	18					
ANR	6682607	PrimaryExpression	"""%srp"""		6682266	0					
ANR	6682608	PrimaryExpression	0x807		6682266	1					
ANR	6682609	InitializerList	"""%pcr"""		6682266	19					
ANR	6682610	PrimaryExpression	"""%pcr"""		6682266	0					
ANR	6682611	PrimaryExpression	0x808		6682266	1					
ANR	6682612	ExpressionStatement	"val = fetch_arg ( buffer , place , 12 , info )"	171:1:2357:2398	6682266	3	True				
ANR	6682613	AssignmentExpression	"val = fetch_arg ( buffer , place , 12 , info )"		6682266	0		=			
ANR	6682614	Identifier	val		6682266	0					
ANR	6682615	CallExpression	"fetch_arg ( buffer , place , 12 , info )"		6682266	1					
ANR	6682616	Callee	fetch_arg		6682266	0					
ANR	6682617	Identifier	fetch_arg		6682266	0					
ANR	6682618	ArgumentList	buffer		6682266	1					
ANR	6682619	Argument	buffer		6682266	0					
ANR	6682620	Identifier	buffer		6682266	0					
ANR	6682621	Argument	place		6682266	1					
ANR	6682622	Identifier	place		6682266	0					
ANR	6682623	Argument	12		6682266	2					
ANR	6682624	PrimaryExpression	12		6682266	0					
ANR	6682625	Argument	info		6682266	3					
ANR	6682626	Identifier	info		6682266	0					
ANR	6682627	ForStatement	for ( regno = sizeof names / sizeof names [ 0 ] - 1 ; regno >= 0 ; regno -- )		6682266	4					
ANR	6682628	ForInit	regno = sizeof names / sizeof names [ 0 ] - 1 ;	173:6:2407:2449	6682266	0	True				
ANR	6682629	AssignmentExpression	regno = sizeof names / sizeof names [ 0 ] - 1		6682266	0		=			
ANR	6682630	Identifier	regno		6682266	0					
ANR	6682631	AdditiveExpression	sizeof names / sizeof names [ 0 ] - 1		6682266	1		-			
ANR	6682632	MultiplicativeExpression	sizeof names / sizeof names [ 0 ]		6682266	0		/			
ANR	6682633	SizeofExpression	sizeof names		6682266	0					
ANR	6682634	Sizeof	sizeof		6682266	0					
ANR	6682635	Identifier	names		6682266	1					
ANR	6682636	SizeofExpression	sizeof names [ 0 ]		6682266	1					
ANR	6682637	Sizeof	sizeof		6682266	0					
ANR	6682638	ArrayIndexing	names [ 0 ]		6682266	1					
ANR	6682639	Identifier	names		6682266	0					
ANR	6682640	PrimaryExpression	0		6682266	1					
ANR	6682641	PrimaryExpression	1		6682266	1					
ANR	6682642	Condition	regno >= 0	173:50:2451:2460	6682266	1	True				
ANR	6682643	RelationalExpression	regno >= 0		6682266	0		>=			
ANR	6682644	Identifier	regno		6682266	0					
ANR	6682645	PrimaryExpression	0		6682266	1					
ANR	6682646	PostIncDecOperationExpression	regno --	173:62:2463:2469	6682266	2	True				
ANR	6682647	Identifier	regno		6682266	0					
ANR	6682648	IncDec	--		6682266	1					
ANR	6682649	IfStatement	if ( names [ regno ] . value == val )		6682266	3					
ANR	6682650	Condition	names [ regno ] . value == val	175:7:2480:2504	6682266	0	True				
ANR	6682651	EqualityExpression	names [ regno ] . value == val		6682266	0		==			
ANR	6682652	MemberAccess	names [ regno ] . value		6682266	0					
ANR	6682653	ArrayIndexing	names [ regno ]		6682266	0					
ANR	6682654	Identifier	names		6682266	0					
ANR	6682655	Identifier	regno		6682266	1					
ANR	6682656	Identifier	value		6682266	1					
ANR	6682657	Identifier	val		6682266	1					
ANR	6682658	CompoundStatement		167:5:2388:2388	6682266	1					
ANR	6682659	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , names [ regno ] . name )"	179:7:2523:2584	6682266	0	True				
ANR	6682660	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , names [ regno ] . name )"		6682266	0					
ANR	6682661	Callee	* info -> fprintf_func		6682266	0					
ANR	6682662	UnaryOperationExpression	* info -> fprintf_func		6682266	0					
ANR	6682663	UnaryOperator	*		6682266	0					
ANR	6682664	PtrMemberAccess	info -> fprintf_func		6682266	1					
ANR	6682665	Identifier	info		6682266	0					
ANR	6682666	Identifier	fprintf_func		6682266	1					
ANR	6682667	ArgumentList	info -> stream		6682266	1					
ANR	6682668	Argument	info -> stream		6682266	0					
ANR	6682669	PtrMemberAccess	info -> stream		6682266	0					
ANR	6682670	Identifier	info		6682266	0					
ANR	6682671	Identifier	stream		6682266	1					
ANR	6682672	Argument	"""%s"""		6682266	1					
ANR	6682673	PrimaryExpression	"""%s"""		6682266	0					
ANR	6682674	Argument	names [ regno ] . name		6682266	2					
ANR	6682675	MemberAccess	names [ regno ] . name		6682266	0					
ANR	6682676	ArrayIndexing	names [ regno ]		6682266	0					
ANR	6682677	Identifier	names		6682266	0					
ANR	6682678	Identifier	regno		6682266	1					
ANR	6682679	Identifier	name		6682266	1					
ANR	6682680	BreakStatement	break ;	181:7:2594:2599	6682266	1	True				
ANR	6682681	IfStatement	if ( regno < 0 )		6682266	5					
ANR	6682682	Condition	regno < 0	185:5:2615:2623	6682266	0	True				
ANR	6682683	RelationalExpression	regno < 0		6682266	0		<			
ANR	6682684	Identifier	regno		6682266	0					
ANR	6682685	PrimaryExpression	0		6682266	1					
ANR	6682686	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%d"" , val )"	187:3:2630:2677	6682266	1	True				
ANR	6682687	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%d"" , val )"		6682266	0					
ANR	6682688	Callee	* info -> fprintf_func		6682266	0					
ANR	6682689	UnaryOperationExpression	* info -> fprintf_func		6682266	0					
ANR	6682690	UnaryOperator	*		6682266	0					
ANR	6682691	PtrMemberAccess	info -> fprintf_func		6682266	1					
ANR	6682692	Identifier	info		6682266	0					
ANR	6682693	Identifier	fprintf_func		6682266	1					
ANR	6682694	ArgumentList	info -> stream		6682266	1					
ANR	6682695	Argument	info -> stream		6682266	0					
ANR	6682696	PtrMemberAccess	info -> stream		6682266	0					
ANR	6682697	Identifier	info		6682266	0					
ANR	6682698	Identifier	stream		6682266	1					
ANR	6682699	Argument	"""%d"""		6682266	1					
ANR	6682700	PrimaryExpression	"""%d"""		6682266	0					
ANR	6682701	Argument	val		6682266	2					
ANR	6682702	Identifier	val		6682266	0					
ANR	6682703	BreakStatement	break ;	191:6:2695:2700	6682266	26	True				
ANR	6682704	Label	case 'Q' :	195:4:2709:2717	6682266	27	True				
ANR	6682705	ExpressionStatement	"val = fetch_arg ( buffer , place , 3 , info )"	197:6:2726:2766	6682266	28	True				
ANR	6682706	AssignmentExpression	"val = fetch_arg ( buffer , place , 3 , info )"		6682266	0		=			
ANR	6682707	Identifier	val		6682266	0					
ANR	6682708	CallExpression	"fetch_arg ( buffer , place , 3 , info )"		6682266	1					
ANR	6682709	Callee	fetch_arg		6682266	0					
ANR	6682710	Identifier	fetch_arg		6682266	0					
ANR	6682711	ArgumentList	buffer		6682266	1					
ANR	6682712	Argument	buffer		6682266	0					
ANR	6682713	Identifier	buffer		6682266	0					
ANR	6682714	Argument	place		6682266	1					
ANR	6682715	Identifier	place		6682266	0					
ANR	6682716	Argument	3		6682266	2					
ANR	6682717	PrimaryExpression	3		6682266	0					
ANR	6682718	Argument	info		6682266	3					
ANR	6682719	Identifier	info		6682266	0					
ANR	6682720	IfStatement	if ( val == 0 && d [ 1 ] != 's' )		6682266	29					
ANR	6682721	Condition	val == 0 && d [ 1 ] != 's'	201:10:2838:2860	6682266	0	True				
ANR	6682722	AndExpression	val == 0 && d [ 1 ] != 's'		6682266	0		&&			
ANR	6682723	EqualityExpression	val == 0		6682266	0		==			
ANR	6682724	Identifier	val		6682266	0					
ANR	6682725	PrimaryExpression	0		6682266	1					
ANR	6682726	EqualityExpression	d [ 1 ] != 's'		6682266	1		!=			
ANR	6682727	ArrayIndexing	d [ 1 ]		6682266	0					
ANR	6682728	Identifier	d		6682266	0					
ANR	6682729	PrimaryExpression	1		6682266	1					
ANR	6682730	PrimaryExpression	's'		6682266	1					
ANR	6682731	ExpressionStatement	val = 8	203:1:2865:2872	6682266	1	True				
ANR	6682732	AssignmentExpression	val = 8		6682266	0		=			
ANR	6682733	Identifier	val		6682266	0					
ANR	6682734	PrimaryExpression	8		6682266	1					
ANR	6682735	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""#%d"" , val )"	205:6:2881:2929	6682266	30	True				
ANR	6682736	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""#%d"" , val )"		6682266	0					
ANR	6682737	Callee	* info -> fprintf_func		6682266	0					
ANR	6682738	UnaryOperationExpression	* info -> fprintf_func		6682266	0					
ANR	6682739	UnaryOperator	*		6682266	0					
ANR	6682740	PtrMemberAccess	info -> fprintf_func		6682266	1					
ANR	6682741	Identifier	info		6682266	0					
ANR	6682742	Identifier	fprintf_func		6682266	1					
ANR	6682743	ArgumentList	info -> stream		6682266	1					
ANR	6682744	Argument	info -> stream		6682266	0					
ANR	6682745	PtrMemberAccess	info -> stream		6682266	0					
ANR	6682746	Identifier	info		6682266	0					
ANR	6682747	Identifier	stream		6682266	1					
ANR	6682748	Argument	"""#%d"""		6682266	1					
ANR	6682749	PrimaryExpression	"""#%d"""		6682266	0					
ANR	6682750	Argument	val		6682266	2					
ANR	6682751	Identifier	val		6682266	0					
ANR	6682752	BreakStatement	break ;	207:6:2938:2943	6682266	31	True				
ANR	6682753	Label	case 'x' :	211:4:2952:2960	6682266	32	True				
ANR	6682754	ExpressionStatement	"val = fetch_arg ( buffer , place , 3 , info )"	213:6:2969:3009	6682266	33	True				
ANR	6682755	AssignmentExpression	"val = fetch_arg ( buffer , place , 3 , info )"		6682266	0		=			
ANR	6682756	Identifier	val		6682266	0					
ANR	6682757	CallExpression	"fetch_arg ( buffer , place , 3 , info )"		6682266	1					
ANR	6682758	Callee	fetch_arg		6682266	0					
ANR	6682759	Identifier	fetch_arg		6682266	0					
ANR	6682760	ArgumentList	buffer		6682266	1					
ANR	6682761	Argument	buffer		6682266	0					
ANR	6682762	Identifier	buffer		6682266	0					
ANR	6682763	Argument	place		6682266	1					
ANR	6682764	Identifier	place		6682266	0					
ANR	6682765	Argument	3		6682266	2					
ANR	6682766	PrimaryExpression	3		6682266	0					
ANR	6682767	Argument	info		6682266	3					
ANR	6682768	Identifier	info		6682266	0					
ANR	6682769	IfStatement	if ( val == 0 )		6682266	34					
ANR	6682770	Condition	val == 0	217:10:3048:3055	6682266	0	True				
ANR	6682771	EqualityExpression	val == 0		6682266	0		==			
ANR	6682772	Identifier	val		6682266	0					
ANR	6682773	PrimaryExpression	0		6682266	1					
ANR	6682774	ExpressionStatement	val = - 1	219:1:3060:3068	6682266	1	True				
ANR	6682775	AssignmentExpression	val = - 1		6682266	0		=			
ANR	6682776	Identifier	val		6682266	0					
ANR	6682777	UnaryOperationExpression	- 1		6682266	1					
ANR	6682778	UnaryOperator	-		6682266	0					
ANR	6682779	PrimaryExpression	1		6682266	1					
ANR	6682780	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""#%d"" , val )"	221:6:3077:3125	6682266	35	True				
ANR	6682781	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""#%d"" , val )"		6682266	0					
ANR	6682782	Callee	* info -> fprintf_func		6682266	0					
ANR	6682783	UnaryOperationExpression	* info -> fprintf_func		6682266	0					
ANR	6682784	UnaryOperator	*		6682266	0					
ANR	6682785	PtrMemberAccess	info -> fprintf_func		6682266	1					
ANR	6682786	Identifier	info		6682266	0					
ANR	6682787	Identifier	fprintf_func		6682266	1					
ANR	6682788	ArgumentList	info -> stream		6682266	1					
ANR	6682789	Argument	info -> stream		6682266	0					
ANR	6682790	PtrMemberAccess	info -> stream		6682266	0					
ANR	6682791	Identifier	info		6682266	0					
ANR	6682792	Identifier	stream		6682266	1					
ANR	6682793	Argument	"""#%d"""		6682266	1					
ANR	6682794	PrimaryExpression	"""#%d"""		6682266	0					
ANR	6682795	Argument	val		6682266	2					
ANR	6682796	Identifier	val		6682266	0					
ANR	6682797	BreakStatement	break ;	223:6:3134:3139	6682266	36	True				
ANR	6682798	Label	case 'M' :	227:4:3148:3156	6682266	37	True				
ANR	6682799	IfStatement	if ( place == 'h' )		6682266	38					
ANR	6682800	Condition	place == 'h'	229:10:3169:3180	6682266	0	True				
ANR	6682801	EqualityExpression	place == 'h'		6682266	0		==			
ANR	6682802	Identifier	place		6682266	0					
ANR	6682803	PrimaryExpression	'h'		6682266	1					
ANR	6682804	CompoundStatement		221:1:3060:3060	6682266	1					
ANR	6682805	Statement	static	233:3:3191:3196	6682266	0	True				
ANR	6682806	Statement	const	233:10:3198:3202	6682266	1	True				
ANR	6682807	Statement	char	233:16:3204:3207	6682266	2	True				
ANR	6682808	Statement	*	233:21:3209:3209	6682266	3	True				
ANR	6682809	Statement	const	233:22:3210:3214	6682266	4	True				
ANR	6682810	Statement	scalefactor_name	233:28:3216:3231	6682266	5	True				
ANR	6682811	Statement	[	233:44:3232:3232	6682266	6	True				
ANR	6682812	Statement	]	233:45:3233:3233	6682266	7	True				
ANR	6682813	Statement	=	233:47:3235:3235	6682266	8	True				
ANR	6682814	CompoundStatement		223:49:3112:3112	6682266	9					
ANR	6682815	Statement	"""<<"""	233:51:3239:3242	6682266	0	True				
ANR	6682816	Statement	","	233:55:3243:3243	6682266	1	True				
ANR	6682817	Statement	""">>"""	233:57:3245:3248	6682266	2	True				
ANR	6682818	ExpressionStatement		233:63:3251:3251	6682266	10	True				
ANR	6682819	ExpressionStatement	"val = fetch_arg ( buffer , place , 1 , info )"	235:3:3257:3297	6682266	11	True				
ANR	6682820	AssignmentExpression	"val = fetch_arg ( buffer , place , 1 , info )"		6682266	0		=			
ANR	6682821	Identifier	val		6682266	0					
ANR	6682822	CallExpression	"fetch_arg ( buffer , place , 1 , info )"		6682266	1					
ANR	6682823	Callee	fetch_arg		6682266	0					
ANR	6682824	Identifier	fetch_arg		6682266	0					
ANR	6682825	ArgumentList	buffer		6682266	1					
ANR	6682826	Argument	buffer		6682266	0					
ANR	6682827	Identifier	buffer		6682266	0					
ANR	6682828	Argument	place		6682266	1					
ANR	6682829	Identifier	place		6682266	0					
ANR	6682830	Argument	1		6682266	2					
ANR	6682831	PrimaryExpression	1		6682266	0					
ANR	6682832	Argument	info		6682266	3					
ANR	6682833	Identifier	info		6682266	0					
ANR	6682834	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , scalefactor_name [ val ] )"	237:3:3303:3362	6682266	12	True				
ANR	6682835	CallExpression	"( * info -> fprintf_func ) ( info -> stream , scalefactor_name [ val ] )"		6682266	0					
ANR	6682836	Callee	* info -> fprintf_func		6682266	0					
ANR	6682837	UnaryOperationExpression	* info -> fprintf_func		6682266	0					
ANR	6682838	UnaryOperator	*		6682266	0					
ANR	6682839	PtrMemberAccess	info -> fprintf_func		6682266	1					
ANR	6682840	Identifier	info		6682266	0					
ANR	6682841	Identifier	fprintf_func		6682266	1					
ANR	6682842	ArgumentList	info -> stream		6682266	1					
ANR	6682843	Argument	info -> stream		6682266	0					
ANR	6682844	PtrMemberAccess	info -> stream		6682266	0					
ANR	6682845	Identifier	info		6682266	0					
ANR	6682846	Identifier	stream		6682266	1					
ANR	6682847	Argument	scalefactor_name [ val ]		6682266	1					
ANR	6682848	ArrayIndexing	scalefactor_name [ val ]		6682266	0					
ANR	6682849	Identifier	scalefactor_name		6682266	0					
ANR	6682850	Identifier	val		6682266	1					
ANR	6682851	ElseStatement	else		6682266	0					
ANR	6682852	CompoundStatement		233:1:3257:3257	6682266	0					
ANR	6682853	ExpressionStatement	"val = fetch_arg ( buffer , place , 8 , info )"	245:3:3388:3428	6682266	0	True				
ANR	6682854	AssignmentExpression	"val = fetch_arg ( buffer , place , 8 , info )"		6682266	0		=			
ANR	6682855	Identifier	val		6682266	0					
ANR	6682856	CallExpression	"fetch_arg ( buffer , place , 8 , info )"		6682266	1					
ANR	6682857	Callee	fetch_arg		6682266	0					
ANR	6682858	Identifier	fetch_arg		6682266	0					
ANR	6682859	ArgumentList	buffer		6682266	1					
ANR	6682860	Argument	buffer		6682266	0					
ANR	6682861	Identifier	buffer		6682266	0					
ANR	6682862	Argument	place		6682266	1					
ANR	6682863	Identifier	place		6682266	0					
ANR	6682864	Argument	8		6682266	2					
ANR	6682865	PrimaryExpression	8		6682266	0					
ANR	6682866	Argument	info		6682266	3					
ANR	6682867	Identifier	info		6682266	0					
ANR	6682868	IfStatement	if ( val & 0x80 )		6682266	1					
ANR	6682869	Condition	val & 0x80	247:7:3438:3447	6682266	0	True				
ANR	6682870	BitAndExpression	val & 0x80		6682266	0		&			
ANR	6682871	Identifier	val		6682266	0					
ANR	6682872	PrimaryExpression	0x80		6682266	1					
ANR	6682873	ExpressionStatement	val = val - 0x100	249:5:3456:3473	6682266	1	True				
ANR	6682874	AssignmentExpression	val = val - 0x100		6682266	0		=			
ANR	6682875	Identifier	val		6682266	0					
ANR	6682876	AdditiveExpression	val - 0x100		6682266	1		-			
ANR	6682877	Identifier	val		6682266	0					
ANR	6682878	PrimaryExpression	0x100		6682266	1					
ANR	6682879	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""#%d"" , val )"	251:3:3479:3527	6682266	2	True				
ANR	6682880	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""#%d"" , val )"		6682266	0					
ANR	6682881	Callee	* info -> fprintf_func		6682266	0					
ANR	6682882	UnaryOperationExpression	* info -> fprintf_func		6682266	0					
ANR	6682883	UnaryOperator	*		6682266	0					
ANR	6682884	PtrMemberAccess	info -> fprintf_func		6682266	1					
ANR	6682885	Identifier	info		6682266	0					
ANR	6682886	Identifier	fprintf_func		6682266	1					
ANR	6682887	ArgumentList	info -> stream		6682266	1					
ANR	6682888	Argument	info -> stream		6682266	0					
ANR	6682889	PtrMemberAccess	info -> stream		6682266	0					
ANR	6682890	Identifier	info		6682266	0					
ANR	6682891	Identifier	stream		6682266	1					
ANR	6682892	Argument	"""#%d"""		6682266	1					
ANR	6682893	PrimaryExpression	"""#%d"""		6682266	0					
ANR	6682894	Argument	val		6682266	2					
ANR	6682895	Identifier	val		6682266	0					
ANR	6682896	BreakStatement	break ;	255:6:3540:3545	6682266	39	True				
ANR	6682897	Label	case 'T' :	259:4:3554:3562	6682266	40	True				
ANR	6682898	ExpressionStatement	"val = fetch_arg ( buffer , place , 4 , info )"	261:6:3571:3611	6682266	41	True				
ANR	6682899	AssignmentExpression	"val = fetch_arg ( buffer , place , 4 , info )"		6682266	0		=			
ANR	6682900	Identifier	val		6682266	0					
ANR	6682901	CallExpression	"fetch_arg ( buffer , place , 4 , info )"		6682266	1					
ANR	6682902	Callee	fetch_arg		6682266	0					
ANR	6682903	Identifier	fetch_arg		6682266	0					
ANR	6682904	ArgumentList	buffer		6682266	1					
ANR	6682905	Argument	buffer		6682266	0					
ANR	6682906	Identifier	buffer		6682266	0					
ANR	6682907	Argument	place		6682266	1					
ANR	6682908	Identifier	place		6682266	0					
ANR	6682909	Argument	4		6682266	2					
ANR	6682910	PrimaryExpression	4		6682266	0					
ANR	6682911	Argument	info		6682266	3					
ANR	6682912	Identifier	info		6682266	0					
ANR	6682913	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""#%d"" , val )"	263:6:3620:3668	6682266	42	True				
ANR	6682914	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""#%d"" , val )"		6682266	0					
ANR	6682915	Callee	* info -> fprintf_func		6682266	0					
ANR	6682916	UnaryOperationExpression	* info -> fprintf_func		6682266	0					
ANR	6682917	UnaryOperator	*		6682266	0					
ANR	6682918	PtrMemberAccess	info -> fprintf_func		6682266	1					
ANR	6682919	Identifier	info		6682266	0					
ANR	6682920	Identifier	fprintf_func		6682266	1					
ANR	6682921	ArgumentList	info -> stream		6682266	1					
ANR	6682922	Argument	info -> stream		6682266	0					
ANR	6682923	PtrMemberAccess	info -> stream		6682266	0					
ANR	6682924	Identifier	info		6682266	0					
ANR	6682925	Identifier	stream		6682266	1					
ANR	6682926	Argument	"""#%d"""		6682266	1					
ANR	6682927	PrimaryExpression	"""#%d"""		6682266	0					
ANR	6682928	Argument	val		6682266	2					
ANR	6682929	Identifier	val		6682266	0					
ANR	6682930	BreakStatement	break ;	265:6:3677:3682	6682266	43	True				
ANR	6682931	Label	case 'D' :	269:4:3691:3699	6682266	44	True				
ANR	6682932	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , reg_names [ fetch_arg ( buffer , place , 3 , info ) ] )"	271:6:3708:3806	6682266	45	True				
ANR	6682933	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , reg_names [ fetch_arg ( buffer , place , 3 , info ) ] )"		6682266	0					
ANR	6682934	Callee	* info -> fprintf_func		6682266	0					
ANR	6682935	UnaryOperationExpression	* info -> fprintf_func		6682266	0					
ANR	6682936	UnaryOperator	*		6682266	0					
ANR	6682937	PtrMemberAccess	info -> fprintf_func		6682266	1					
ANR	6682938	Identifier	info		6682266	0					
ANR	6682939	Identifier	fprintf_func		6682266	1					
ANR	6682940	ArgumentList	info -> stream		6682266	1					
ANR	6682941	Argument	info -> stream		6682266	0					
ANR	6682942	PtrMemberAccess	info -> stream		6682266	0					
ANR	6682943	Identifier	info		6682266	0					
ANR	6682944	Identifier	stream		6682266	1					
ANR	6682945	Argument	"""%s"""		6682266	1					
ANR	6682946	PrimaryExpression	"""%s"""		6682266	0					
ANR	6682947	Argument	"reg_names [ fetch_arg ( buffer , place , 3 , info ) ]"		6682266	2					
ANR	6682948	ArrayIndexing	"reg_names [ fetch_arg ( buffer , place , 3 , info ) ]"		6682266	0					
ANR	6682949	Identifier	reg_names		6682266	0					
ANR	6682950	CallExpression	"fetch_arg ( buffer , place , 3 , info )"		6682266	1					
ANR	6682951	Callee	fetch_arg		6682266	0					
ANR	6682952	Identifier	fetch_arg		6682266	0					
ANR	6682953	ArgumentList	buffer		6682266	1					
ANR	6682954	Argument	buffer		6682266	0					
ANR	6682955	Identifier	buffer		6682266	0					
ANR	6682956	Argument	place		6682266	1					
ANR	6682957	Identifier	place		6682266	0					
ANR	6682958	Argument	3		6682266	2					
ANR	6682959	PrimaryExpression	3		6682266	0					
ANR	6682960	Argument	info		6682266	3					
ANR	6682961	Identifier	info		6682266	0					
ANR	6682962	BreakStatement	break ;	275:6:3815:3820	6682266	46	True				
ANR	6682963	Label	case 'A' :	279:4:3829:3837	6682266	47	True				
ANR	6682964	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , reg_names [ fetch_arg ( buffer , place , 3 , info ) + 010 ] )"	281:6:3846:3946	6682266	48	True				
ANR	6682965	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , reg_names [ fetch_arg ( buffer , place , 3 , info ) + 010 ] )"		6682266	0					
ANR	6682966	Callee	* info -> fprintf_func		6682266	0					
ANR	6682967	UnaryOperationExpression	* info -> fprintf_func		6682266	0					
ANR	6682968	UnaryOperator	*		6682266	0					
ANR	6682969	PtrMemberAccess	info -> fprintf_func		6682266	1					
ANR	6682970	Identifier	info		6682266	0					
ANR	6682971	Identifier	fprintf_func		6682266	1					
ANR	6682972	ArgumentList	info -> stream		6682266	1					
ANR	6682973	Argument	info -> stream		6682266	0					
ANR	6682974	PtrMemberAccess	info -> stream		6682266	0					
ANR	6682975	Identifier	info		6682266	0					
ANR	6682976	Identifier	stream		6682266	1					
ANR	6682977	Argument	"""%s"""		6682266	1					
ANR	6682978	PrimaryExpression	"""%s"""		6682266	0					
ANR	6682979	Argument	"reg_names [ fetch_arg ( buffer , place , 3 , info ) + 010 ]"		6682266	2					
ANR	6682980	ArrayIndexing	"reg_names [ fetch_arg ( buffer , place , 3 , info ) + 010 ]"		6682266	0					
ANR	6682981	Identifier	reg_names		6682266	0					
ANR	6682982	AdditiveExpression	"fetch_arg ( buffer , place , 3 , info ) + 010"		6682266	1		+			
ANR	6682983	CallExpression	"fetch_arg ( buffer , place , 3 , info )"		6682266	0					
ANR	6682984	Callee	fetch_arg		6682266	0					
ANR	6682985	Identifier	fetch_arg		6682266	0					
ANR	6682986	ArgumentList	buffer		6682266	1					
ANR	6682987	Argument	buffer		6682266	0					
ANR	6682988	Identifier	buffer		6682266	0					
ANR	6682989	Argument	place		6682266	1					
ANR	6682990	Identifier	place		6682266	0					
ANR	6682991	Argument	3		6682266	2					
ANR	6682992	PrimaryExpression	3		6682266	0					
ANR	6682993	Argument	info		6682266	3					
ANR	6682994	Identifier	info		6682266	0					
ANR	6682995	PrimaryExpression	010		6682266	1					
ANR	6682996	BreakStatement	break ;	287:6:3955:3960	6682266	49	True				
ANR	6682997	Label	case 'R' :	291:4:3969:3977	6682266	50	True				
ANR	6682998	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , reg_names [ fetch_arg ( buffer , place , 4 , info ) ] )"	293:6:3986:4080	6682266	51	True				
ANR	6682999	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , reg_names [ fetch_arg ( buffer , place , 4 , info ) ] )"		6682266	0					
ANR	6683000	Callee	* info -> fprintf_func		6682266	0					
ANR	6683001	UnaryOperationExpression	* info -> fprintf_func		6682266	0					
ANR	6683002	UnaryOperator	*		6682266	0					
ANR	6683003	PtrMemberAccess	info -> fprintf_func		6682266	1					
ANR	6683004	Identifier	info		6682266	0					
ANR	6683005	Identifier	fprintf_func		6682266	1					
ANR	6683006	ArgumentList	info -> stream		6682266	1					
ANR	6683007	Argument	info -> stream		6682266	0					
ANR	6683008	PtrMemberAccess	info -> stream		6682266	0					
ANR	6683009	Identifier	info		6682266	0					
ANR	6683010	Identifier	stream		6682266	1					
ANR	6683011	Argument	"""%s"""		6682266	1					
ANR	6683012	PrimaryExpression	"""%s"""		6682266	0					
ANR	6683013	Argument	"reg_names [ fetch_arg ( buffer , place , 4 , info ) ]"		6682266	2					
ANR	6683014	ArrayIndexing	"reg_names [ fetch_arg ( buffer , place , 4 , info ) ]"		6682266	0					
ANR	6683015	Identifier	reg_names		6682266	0					
ANR	6683016	CallExpression	"fetch_arg ( buffer , place , 4 , info )"		6682266	1					
ANR	6683017	Callee	fetch_arg		6682266	0					
ANR	6683018	Identifier	fetch_arg		6682266	0					
ANR	6683019	ArgumentList	buffer		6682266	1					
ANR	6683020	Argument	buffer		6682266	0					
ANR	6683021	Identifier	buffer		6682266	0					
ANR	6683022	Argument	place		6682266	1					
ANR	6683023	Identifier	place		6682266	0					
ANR	6683024	Argument	4		6682266	2					
ANR	6683025	PrimaryExpression	4		6682266	0					
ANR	6683026	Argument	info		6682266	3					
ANR	6683027	Identifier	info		6682266	0					
ANR	6683028	BreakStatement	break ;	299:6:4089:4094	6682266	52	True				
ANR	6683029	Label	case 'r' :	303:4:4103:4111	6682266	53	True				
ANR	6683030	ExpressionStatement	"regno = fetch_arg ( buffer , place , 4 , info )"	305:6:4120:4162	6682266	54	True				
ANR	6683031	AssignmentExpression	"regno = fetch_arg ( buffer , place , 4 , info )"		6682266	0		=			
ANR	6683032	Identifier	regno		6682266	0					
ANR	6683033	CallExpression	"fetch_arg ( buffer , place , 4 , info )"		6682266	1					
ANR	6683034	Callee	fetch_arg		6682266	0					
ANR	6683035	Identifier	fetch_arg		6682266	0					
ANR	6683036	ArgumentList	buffer		6682266	1					
ANR	6683037	Argument	buffer		6682266	0					
ANR	6683038	Identifier	buffer		6682266	0					
ANR	6683039	Argument	place		6682266	1					
ANR	6683040	Identifier	place		6682266	0					
ANR	6683041	Argument	4		6682266	2					
ANR	6683042	PrimaryExpression	4		6682266	0					
ANR	6683043	Argument	info		6682266	3					
ANR	6683044	Identifier	info		6682266	0					
ANR	6683045	IfStatement	if ( regno > 7 )		6682266	55					
ANR	6683046	Condition	regno > 7	307:10:4175:4183	6682266	0	True				
ANR	6683047	RelationalExpression	regno > 7		6682266	0		>			
ANR	6683048	Identifier	regno		6682266	0					
ANR	6683049	PrimaryExpression	7		6682266	1					
ANR	6683050	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s@"" , reg_names [ regno ] )"	309:1:4188:4249	6682266	1	True				
ANR	6683051	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s@"" , reg_names [ regno ] )"		6682266	0					
ANR	6683052	Callee	* info -> fprintf_func		6682266	0					
ANR	6683053	UnaryOperationExpression	* info -> fprintf_func		6682266	0					
ANR	6683054	UnaryOperator	*		6682266	0					
ANR	6683055	PtrMemberAccess	info -> fprintf_func		6682266	1					
ANR	6683056	Identifier	info		6682266	0					
ANR	6683057	Identifier	fprintf_func		6682266	1					
ANR	6683058	ArgumentList	info -> stream		6682266	1					
ANR	6683059	Argument	info -> stream		6682266	0					
ANR	6683060	PtrMemberAccess	info -> stream		6682266	0					
ANR	6683061	Identifier	info		6682266	0					
ANR	6683062	Identifier	stream		6682266	1					
ANR	6683063	Argument	"""%s@"""		6682266	1					
ANR	6683064	PrimaryExpression	"""%s@"""		6682266	0					
ANR	6683065	Argument	reg_names [ regno ]		6682266	2					
ANR	6683066	ArrayIndexing	reg_names [ regno ]		6682266	0					
ANR	6683067	Identifier	reg_names		6682266	0					
ANR	6683068	Identifier	regno		6682266	1					
ANR	6683069	ElseStatement	else		6682266	0					
ANR	6683070	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""@(%s)"" , reg_names [ regno ] )"	313:1:4265:4328	6682266	0	True				
ANR	6683071	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""@(%s)"" , reg_names [ regno ] )"		6682266	0					
ANR	6683072	Callee	* info -> fprintf_func		6682266	0					
ANR	6683073	UnaryOperationExpression	* info -> fprintf_func		6682266	0					
ANR	6683074	UnaryOperator	*		6682266	0					
ANR	6683075	PtrMemberAccess	info -> fprintf_func		6682266	1					
ANR	6683076	Identifier	info		6682266	0					
ANR	6683077	Identifier	fprintf_func		6682266	1					
ANR	6683078	ArgumentList	info -> stream		6682266	1					
ANR	6683079	Argument	info -> stream		6682266	0					
ANR	6683080	PtrMemberAccess	info -> stream		6682266	0					
ANR	6683081	Identifier	info		6682266	0					
ANR	6683082	Identifier	stream		6682266	1					
ANR	6683083	Argument	"""@(%s)"""		6682266	1					
ANR	6683084	PrimaryExpression	"""@(%s)"""		6682266	0					
ANR	6683085	Argument	reg_names [ regno ]		6682266	2					
ANR	6683086	ArrayIndexing	reg_names [ regno ]		6682266	0					
ANR	6683087	Identifier	reg_names		6682266	0					
ANR	6683088	Identifier	regno		6682266	1					
ANR	6683089	BreakStatement	break ;	315:6:4337:4342	6682266	56	True				
ANR	6683090	Label	case 'F' :	319:4:4351:4359	6682266	57	True				
ANR	6683091	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%%fp%d"" , fetch_arg ( buffer , place , 3 , info ) )"	321:6:4368:4455	6682266	58	True				
ANR	6683092	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%%fp%d"" , fetch_arg ( buffer , place , 3 , info ) )"		6682266	0					
ANR	6683093	Callee	* info -> fprintf_func		6682266	0					
ANR	6683094	UnaryOperationExpression	* info -> fprintf_func		6682266	0					
ANR	6683095	UnaryOperator	*		6682266	0					
ANR	6683096	PtrMemberAccess	info -> fprintf_func		6682266	1					
ANR	6683097	Identifier	info		6682266	0					
ANR	6683098	Identifier	fprintf_func		6682266	1					
ANR	6683099	ArgumentList	info -> stream		6682266	1					
ANR	6683100	Argument	info -> stream		6682266	0					
ANR	6683101	PtrMemberAccess	info -> stream		6682266	0					
ANR	6683102	Identifier	info		6682266	0					
ANR	6683103	Identifier	stream		6682266	1					
ANR	6683104	Argument	"""%%fp%d"""		6682266	1					
ANR	6683105	PrimaryExpression	"""%%fp%d"""		6682266	0					
ANR	6683106	Argument	"fetch_arg ( buffer , place , 3 , info )"		6682266	2					
ANR	6683107	CallExpression	"fetch_arg ( buffer , place , 3 , info )"		6682266	0					
ANR	6683108	Callee	fetch_arg		6682266	0					
ANR	6683109	Identifier	fetch_arg		6682266	0					
ANR	6683110	ArgumentList	buffer		6682266	1					
ANR	6683111	Argument	buffer		6682266	0					
ANR	6683112	Identifier	buffer		6682266	0					
ANR	6683113	Argument	place		6682266	1					
ANR	6683114	Identifier	place		6682266	0					
ANR	6683115	Argument	3		6682266	2					
ANR	6683116	PrimaryExpression	3		6682266	0					
ANR	6683117	Argument	info		6682266	3					
ANR	6683118	Identifier	info		6682266	0					
ANR	6683119	BreakStatement	break ;	327:6:4464:4469	6682266	59	True				
ANR	6683120	Label	case 'O' :	331:4:4478:4486	6682266	60	True				
ANR	6683121	ExpressionStatement	"val = fetch_arg ( buffer , place , 6 , info )"	333:6:4495:4535	6682266	61	True				
ANR	6683122	AssignmentExpression	"val = fetch_arg ( buffer , place , 6 , info )"		6682266	0		=			
ANR	6683123	Identifier	val		6682266	0					
ANR	6683124	CallExpression	"fetch_arg ( buffer , place , 6 , info )"		6682266	1					
ANR	6683125	Callee	fetch_arg		6682266	0					
ANR	6683126	Identifier	fetch_arg		6682266	0					
ANR	6683127	ArgumentList	buffer		6682266	1					
ANR	6683128	Argument	buffer		6682266	0					
ANR	6683129	Identifier	buffer		6682266	0					
ANR	6683130	Argument	place		6682266	1					
ANR	6683131	Identifier	place		6682266	0					
ANR	6683132	Argument	6		6682266	2					
ANR	6683133	PrimaryExpression	6		6682266	0					
ANR	6683134	Argument	info		6682266	3					
ANR	6683135	Identifier	info		6682266	0					
ANR	6683136	IfStatement	if ( val & 0x20 )		6682266	62					
ANR	6683137	Condition	val & 0x20	335:10:4548:4557	6682266	0	True				
ANR	6683138	BitAndExpression	val & 0x20		6682266	0		&			
ANR	6683139	Identifier	val		6682266	0					
ANR	6683140	PrimaryExpression	0x20		6682266	1					
ANR	6683141	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , reg_names [ val & 7 ] )"	337:1:4562:4624	6682266	1	True				
ANR	6683142	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , reg_names [ val & 7 ] )"		6682266	0					
ANR	6683143	Callee	* info -> fprintf_func		6682266	0					
ANR	6683144	UnaryOperationExpression	* info -> fprintf_func		6682266	0					
ANR	6683145	UnaryOperator	*		6682266	0					
ANR	6683146	PtrMemberAccess	info -> fprintf_func		6682266	1					
ANR	6683147	Identifier	info		6682266	0					
ANR	6683148	Identifier	fprintf_func		6682266	1					
ANR	6683149	ArgumentList	info -> stream		6682266	1					
ANR	6683150	Argument	info -> stream		6682266	0					
ANR	6683151	PtrMemberAccess	info -> stream		6682266	0					
ANR	6683152	Identifier	info		6682266	0					
ANR	6683153	Identifier	stream		6682266	1					
ANR	6683154	Argument	"""%s"""		6682266	1					
ANR	6683155	PrimaryExpression	"""%s"""		6682266	0					
ANR	6683156	Argument	reg_names [ val & 7 ]		6682266	2					
ANR	6683157	ArrayIndexing	reg_names [ val & 7 ]		6682266	0					
ANR	6683158	Identifier	reg_names		6682266	0					
ANR	6683159	BitAndExpression	val & 7		6682266	1		&			
ANR	6683160	Identifier	val		6682266	0					
ANR	6683161	PrimaryExpression	7		6682266	1					
ANR	6683162	ElseStatement	else		6682266	0					
ANR	6683163	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%d"" , val )"	341:1:4640:4687	6682266	0	True				
ANR	6683164	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%d"" , val )"		6682266	0					
ANR	6683165	Callee	* info -> fprintf_func		6682266	0					
ANR	6683166	UnaryOperationExpression	* info -> fprintf_func		6682266	0					
ANR	6683167	UnaryOperator	*		6682266	0					
ANR	6683168	PtrMemberAccess	info -> fprintf_func		6682266	1					
ANR	6683169	Identifier	info		6682266	0					
ANR	6683170	Identifier	fprintf_func		6682266	1					
ANR	6683171	ArgumentList	info -> stream		6682266	1					
ANR	6683172	Argument	info -> stream		6682266	0					
ANR	6683173	PtrMemberAccess	info -> stream		6682266	0					
ANR	6683174	Identifier	info		6682266	0					
ANR	6683175	Identifier	stream		6682266	1					
ANR	6683176	Argument	"""%d"""		6682266	1					
ANR	6683177	PrimaryExpression	"""%d"""		6682266	0					
ANR	6683178	Argument	val		6682266	2					
ANR	6683179	Identifier	val		6682266	0					
ANR	6683180	BreakStatement	break ;	343:6:4696:4701	6682266	63	True				
ANR	6683181	Label	case '+' :	347:4:4710:4718	6682266	64	True				
ANR	6683182	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s@+"" , reg_names [ fetch_arg ( buffer , place , 3 , info ) + 8 ] )"	349:6:4727:4827	6682266	65	True				
ANR	6683183	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s@+"" , reg_names [ fetch_arg ( buffer , place , 3 , info ) + 8 ] )"		6682266	0					
ANR	6683184	Callee	* info -> fprintf_func		6682266	0					
ANR	6683185	UnaryOperationExpression	* info -> fprintf_func		6682266	0					
ANR	6683186	UnaryOperator	*		6682266	0					
ANR	6683187	PtrMemberAccess	info -> fprintf_func		6682266	1					
ANR	6683188	Identifier	info		6682266	0					
ANR	6683189	Identifier	fprintf_func		6682266	1					
ANR	6683190	ArgumentList	info -> stream		6682266	1					
ANR	6683191	Argument	info -> stream		6682266	0					
ANR	6683192	PtrMemberAccess	info -> stream		6682266	0					
ANR	6683193	Identifier	info		6682266	0					
ANR	6683194	Identifier	stream		6682266	1					
ANR	6683195	Argument	"""%s@+"""		6682266	1					
ANR	6683196	PrimaryExpression	"""%s@+"""		6682266	0					
ANR	6683197	Argument	"reg_names [ fetch_arg ( buffer , place , 3 , info ) + 8 ]"		6682266	2					
ANR	6683198	ArrayIndexing	"reg_names [ fetch_arg ( buffer , place , 3 , info ) + 8 ]"		6682266	0					
ANR	6683199	Identifier	reg_names		6682266	0					
ANR	6683200	AdditiveExpression	"fetch_arg ( buffer , place , 3 , info ) + 8"		6682266	1		+			
ANR	6683201	CallExpression	"fetch_arg ( buffer , place , 3 , info )"		6682266	0					
ANR	6683202	Callee	fetch_arg		6682266	0					
ANR	6683203	Identifier	fetch_arg		6682266	0					
ANR	6683204	ArgumentList	buffer		6682266	1					
ANR	6683205	Argument	buffer		6682266	0					
ANR	6683206	Identifier	buffer		6682266	0					
ANR	6683207	Argument	place		6682266	1					
ANR	6683208	Identifier	place		6682266	0					
ANR	6683209	Argument	3		6682266	2					
ANR	6683210	PrimaryExpression	3		6682266	0					
ANR	6683211	Argument	info		6682266	3					
ANR	6683212	Identifier	info		6682266	0					
ANR	6683213	PrimaryExpression	8		6682266	1					
ANR	6683214	BreakStatement	break ;	355:6:4836:4841	6682266	66	True				
ANR	6683215	Label	case '-' :	359:4:4850:4858	6682266	67	True				
ANR	6683216	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s@-"" , reg_names [ fetch_arg ( buffer , place , 3 , info ) + 8 ] )"	361:6:4867:4967	6682266	68	True				
ANR	6683217	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s@-"" , reg_names [ fetch_arg ( buffer , place , 3 , info ) + 8 ] )"		6682266	0					
ANR	6683218	Callee	* info -> fprintf_func		6682266	0					
ANR	6683219	UnaryOperationExpression	* info -> fprintf_func		6682266	0					
ANR	6683220	UnaryOperator	*		6682266	0					
ANR	6683221	PtrMemberAccess	info -> fprintf_func		6682266	1					
ANR	6683222	Identifier	info		6682266	0					
ANR	6683223	Identifier	fprintf_func		6682266	1					
ANR	6683224	ArgumentList	info -> stream		6682266	1					
ANR	6683225	Argument	info -> stream		6682266	0					
ANR	6683226	PtrMemberAccess	info -> stream		6682266	0					
ANR	6683227	Identifier	info		6682266	0					
ANR	6683228	Identifier	stream		6682266	1					
ANR	6683229	Argument	"""%s@-"""		6682266	1					
ANR	6683230	PrimaryExpression	"""%s@-"""		6682266	0					
ANR	6683231	Argument	"reg_names [ fetch_arg ( buffer , place , 3 , info ) + 8 ]"		6682266	2					
ANR	6683232	ArrayIndexing	"reg_names [ fetch_arg ( buffer , place , 3 , info ) + 8 ]"		6682266	0					
ANR	6683233	Identifier	reg_names		6682266	0					
ANR	6683234	AdditiveExpression	"fetch_arg ( buffer , place , 3 , info ) + 8"		6682266	1		+			
ANR	6683235	CallExpression	"fetch_arg ( buffer , place , 3 , info )"		6682266	0					
ANR	6683236	Callee	fetch_arg		6682266	0					
ANR	6683237	Identifier	fetch_arg		6682266	0					
ANR	6683238	ArgumentList	buffer		6682266	1					
ANR	6683239	Argument	buffer		6682266	0					
ANR	6683240	Identifier	buffer		6682266	0					
ANR	6683241	Argument	place		6682266	1					
ANR	6683242	Identifier	place		6682266	0					
ANR	6683243	Argument	3		6682266	2					
ANR	6683244	PrimaryExpression	3		6682266	0					
ANR	6683245	Argument	info		6682266	3					
ANR	6683246	Identifier	info		6682266	0					
ANR	6683247	PrimaryExpression	8		6682266	1					
ANR	6683248	BreakStatement	break ;	367:6:4976:4981	6682266	69	True				
ANR	6683249	Label	case 'k' :	371:4:4990:4998	6682266	70	True				
ANR	6683250	IfStatement	if ( place == 'k' )		6682266	71					
ANR	6683251	Condition	place == 'k'	373:10:5011:5022	6682266	0	True				
ANR	6683252	EqualityExpression	place == 'k'		6682266	0		==			
ANR	6683253	Identifier	place		6682266	0					
ANR	6683254	PrimaryExpression	'k'		6682266	1					
ANR	6683255	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""{%s}"" , reg_names [ fetch_arg ( buffer , place , 3 , info ) ] )"	375:1:5027:5127	6682266	1	True				
ANR	6683256	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""{%s}"" , reg_names [ fetch_arg ( buffer , place , 3 , info ) ] )"		6682266	0					
ANR	6683257	Callee	* info -> fprintf_func		6682266	0					
ANR	6683258	UnaryOperationExpression	* info -> fprintf_func		6682266	0					
ANR	6683259	UnaryOperator	*		6682266	0					
ANR	6683260	PtrMemberAccess	info -> fprintf_func		6682266	1					
ANR	6683261	Identifier	info		6682266	0					
ANR	6683262	Identifier	fprintf_func		6682266	1					
ANR	6683263	ArgumentList	info -> stream		6682266	1					
ANR	6683264	Argument	info -> stream		6682266	0					
ANR	6683265	PtrMemberAccess	info -> stream		6682266	0					
ANR	6683266	Identifier	info		6682266	0					
ANR	6683267	Identifier	stream		6682266	1					
ANR	6683268	Argument	"""{%s}"""		6682266	1					
ANR	6683269	PrimaryExpression	"""{%s}"""		6682266	0					
ANR	6683270	Argument	"reg_names [ fetch_arg ( buffer , place , 3 , info ) ]"		6682266	2					
ANR	6683271	ArrayIndexing	"reg_names [ fetch_arg ( buffer , place , 3 , info ) ]"		6682266	0					
ANR	6683272	Identifier	reg_names		6682266	0					
ANR	6683273	CallExpression	"fetch_arg ( buffer , place , 3 , info )"		6682266	1					
ANR	6683274	Callee	fetch_arg		6682266	0					
ANR	6683275	Identifier	fetch_arg		6682266	0					
ANR	6683276	ArgumentList	buffer		6682266	1					
ANR	6683277	Argument	buffer		6682266	0					
ANR	6683278	Identifier	buffer		6682266	0					
ANR	6683279	Argument	place		6682266	1					
ANR	6683280	Identifier	place		6682266	0					
ANR	6683281	Argument	3		6682266	2					
ANR	6683282	PrimaryExpression	3		6682266	0					
ANR	6683283	Argument	info		6682266	3					
ANR	6683284	Identifier	info		6682266	0					
ANR	6683285	ElseStatement	else		6682266	0					
ANR	6683286	IfStatement	if ( place == 'C' )		6682266	0					
ANR	6683287	Condition	place == 'C'	381:15:5145:5156	6682266	0	True				
ANR	6683288	EqualityExpression	place == 'C'		6682266	0		==			
ANR	6683289	Identifier	place		6682266	0					
ANR	6683290	PrimaryExpression	'C'		6682266	1					
ANR	6683291	CompoundStatement		373:1:5036:5036	6682266	1					
ANR	6683292	ExpressionStatement	"val = fetch_arg ( buffer , place , 7 , info )"	385:3:5167:5207	6682266	0	True				
ANR	6683293	AssignmentExpression	"val = fetch_arg ( buffer , place , 7 , info )"		6682266	0		=			
ANR	6683294	Identifier	val		6682266	0					
ANR	6683295	CallExpression	"fetch_arg ( buffer , place , 7 , info )"		6682266	1					
ANR	6683296	Callee	fetch_arg		6682266	0					
ANR	6683297	Identifier	fetch_arg		6682266	0					
ANR	6683298	ArgumentList	buffer		6682266	1					
ANR	6683299	Argument	buffer		6682266	0					
ANR	6683300	Identifier	buffer		6682266	0					
ANR	6683301	Argument	place		6682266	1					
ANR	6683302	Identifier	place		6682266	0					
ANR	6683303	Argument	7		6682266	2					
ANR	6683304	PrimaryExpression	7		6682266	0					
ANR	6683305	Argument	info		6682266	3					
ANR	6683306	Identifier	info		6682266	0					
ANR	6683307	IfStatement	if ( val > 63 )		6682266	1					
ANR	6683308	Condition	val > 63	387:7:5217:5224	6682266	0	True				
ANR	6683309	RelationalExpression	val > 63		6682266	0		>			
ANR	6683310	Identifier	val		6682266	0					
ANR	6683311	PrimaryExpression	63		6682266	1					
ANR	6683312	ExpressionStatement	val -= 128	389:5:5268:5278	6682266	1	True				
ANR	6683313	AssignmentExpression	val -= 128		6682266	0		-=			
ANR	6683314	Identifier	val		6682266	0					
ANR	6683315	PrimaryExpression	128		6682266	1					
ANR	6683316	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""{#%d}"" , val )"	391:3:5284:5334	6682266	2	True				
ANR	6683317	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""{#%d}"" , val )"		6682266	0					
ANR	6683318	Callee	* info -> fprintf_func		6682266	0					
ANR	6683319	UnaryOperationExpression	* info -> fprintf_func		6682266	0					
ANR	6683320	UnaryOperator	*		6682266	0					
ANR	6683321	PtrMemberAccess	info -> fprintf_func		6682266	1					
ANR	6683322	Identifier	info		6682266	0					
ANR	6683323	Identifier	fprintf_func		6682266	1					
ANR	6683324	ArgumentList	info -> stream		6682266	1					
ANR	6683325	Argument	info -> stream		6682266	0					
ANR	6683326	PtrMemberAccess	info -> stream		6682266	0					
ANR	6683327	Identifier	info		6682266	0					
ANR	6683328	Identifier	stream		6682266	1					
ANR	6683329	Argument	"""{#%d}"""		6682266	1					
ANR	6683330	PrimaryExpression	"""{#%d}"""		6682266	0					
ANR	6683331	Argument	val		6682266	2					
ANR	6683332	Identifier	val		6682266	0					
ANR	6683333	ElseStatement	else		6682266	0					
ANR	6683334	ReturnStatement	return - 2 ;	397:1:5354:5363	6682266	0	True				
ANR	6683335	UnaryOperationExpression	- 2		6682266	0					
ANR	6683336	UnaryOperator	-		6682266	0					
ANR	6683337	PrimaryExpression	2		6682266	1					
ANR	6683338	BreakStatement	break ;	399:6:5372:5377	6682266	72	True				
ANR	6683339	Label	case '#' :	403:4:5386:5394	6682266	73	True				
ANR	6683340	Label	case '^' :	405:4:5401:5409	6682266	74	True				
ANR	6683341	ExpressionStatement	p1 = buffer + ( * d == '#' ? 2 : 4 )	407:6:5418:5451	6682266	75	True				
ANR	6683342	AssignmentExpression	p1 = buffer + ( * d == '#' ? 2 : 4 )		6682266	0		=			
ANR	6683343	Identifier	p1		6682266	0					
ANR	6683344	AdditiveExpression	buffer + ( * d == '#' ? 2 : 4 )		6682266	1		+			
ANR	6683345	Identifier	buffer		6682266	0					
ANR	6683346	ConditionalExpression	* d == '#' ? 2 : 4		6682266	1					
ANR	6683347	Condition	* d == '#'		6682266	0					
ANR	6683348	EqualityExpression	* d == '#'		6682266	0		==			
ANR	6683349	UnaryOperationExpression	* d		6682266	0					
ANR	6683350	UnaryOperator	*		6682266	0					
ANR	6683351	Identifier	d		6682266	1					
ANR	6683352	PrimaryExpression	'#'		6682266	1					
ANR	6683353	PrimaryExpression	2		6682266	1					
ANR	6683354	PrimaryExpression	4		6682266	2					
ANR	6683355	IfStatement	if ( place == 's' )		6682266	76					
ANR	6683356	Condition	place == 's'	409:10:5464:5475	6682266	0	True				
ANR	6683357	EqualityExpression	place == 's'		6682266	0		==			
ANR	6683358	Identifier	place		6682266	0					
ANR	6683359	PrimaryExpression	's'		6682266	1					
ANR	6683360	ExpressionStatement	"val = fetch_arg ( buffer , place , 4 , info )"	411:1:5480:5520	6682266	1	True				
ANR	6683361	AssignmentExpression	"val = fetch_arg ( buffer , place , 4 , info )"		6682266	0		=			
ANR	6683362	Identifier	val		6682266	0					
ANR	6683363	CallExpression	"fetch_arg ( buffer , place , 4 , info )"		6682266	1					
ANR	6683364	Callee	fetch_arg		6682266	0					
ANR	6683365	Identifier	fetch_arg		6682266	0					
ANR	6683366	ArgumentList	buffer		6682266	1					
ANR	6683367	Argument	buffer		6682266	0					
ANR	6683368	Identifier	buffer		6682266	0					
ANR	6683369	Argument	place		6682266	1					
ANR	6683370	Identifier	place		6682266	0					
ANR	6683371	Argument	4		6682266	2					
ANR	6683372	PrimaryExpression	4		6682266	0					
ANR	6683373	Argument	info		6682266	3					
ANR	6683374	Identifier	info		6682266	0					
ANR	6683375	ElseStatement	else		6682266	0					
ANR	6683376	IfStatement	if ( place == 'C' )		6682266	0					
ANR	6683377	Condition	place == 'C'	413:15:5538:5549	6682266	0	True				
ANR	6683378	EqualityExpression	place == 'C'		6682266	0		==			
ANR	6683379	Identifier	place		6682266	0					
ANR	6683380	PrimaryExpression	'C'		6682266	1					
ANR	6683381	ExpressionStatement	"val = fetch_arg ( buffer , place , 7 , info )"	415:1:5554:5594	6682266	1	True				
ANR	6683382	AssignmentExpression	"val = fetch_arg ( buffer , place , 7 , info )"		6682266	0		=			
ANR	6683383	Identifier	val		6682266	0					
ANR	6683384	CallExpression	"fetch_arg ( buffer , place , 7 , info )"		6682266	1					
ANR	6683385	Callee	fetch_arg		6682266	0					
ANR	6683386	Identifier	fetch_arg		6682266	0					
ANR	6683387	ArgumentList	buffer		6682266	1					
ANR	6683388	Argument	buffer		6682266	0					
ANR	6683389	Identifier	buffer		6682266	0					
ANR	6683390	Argument	place		6682266	1					
ANR	6683391	Identifier	place		6682266	0					
ANR	6683392	Argument	7		6682266	2					
ANR	6683393	PrimaryExpression	7		6682266	0					
ANR	6683394	Argument	info		6682266	3					
ANR	6683395	Identifier	info		6682266	0					
ANR	6683396	ElseStatement	else		6682266	0					
ANR	6683397	IfStatement	if ( place == '8' )		6682266	0					
ANR	6683398	Condition	place == '8'	417:15:5612:5623	6682266	0	True				
ANR	6683399	EqualityExpression	place == '8'		6682266	0		==			
ANR	6683400	Identifier	place		6682266	0					
ANR	6683401	PrimaryExpression	'8'		6682266	1					
ANR	6683402	ExpressionStatement	"val = fetch_arg ( buffer , place , 3 , info )"	419:1:5628:5668	6682266	1	True				
ANR	6683403	AssignmentExpression	"val = fetch_arg ( buffer , place , 3 , info )"		6682266	0		=			
ANR	6683404	Identifier	val		6682266	0					
ANR	6683405	CallExpression	"fetch_arg ( buffer , place , 3 , info )"		6682266	1					
ANR	6683406	Callee	fetch_arg		6682266	0					
ANR	6683407	Identifier	fetch_arg		6682266	0					
ANR	6683408	ArgumentList	buffer		6682266	1					
ANR	6683409	Argument	buffer		6682266	0					
ANR	6683410	Identifier	buffer		6682266	0					
ANR	6683411	Argument	place		6682266	1					
ANR	6683412	Identifier	place		6682266	0					
ANR	6683413	Argument	3		6682266	2					
ANR	6683414	PrimaryExpression	3		6682266	0					
ANR	6683415	Argument	info		6682266	3					
ANR	6683416	Identifier	info		6682266	0					
ANR	6683417	ElseStatement	else		6682266	0					
ANR	6683418	IfStatement	if ( place == '3' )		6682266	0					
ANR	6683419	Condition	place == '3'	421:15:5686:5697	6682266	0	True				
ANR	6683420	EqualityExpression	place == '3'		6682266	0		==			
ANR	6683421	Identifier	place		6682266	0					
ANR	6683422	PrimaryExpression	'3'		6682266	1					
ANR	6683423	ExpressionStatement	"val = fetch_arg ( buffer , place , 8 , info )"	423:1:5702:5742	6682266	1	True				
ANR	6683424	AssignmentExpression	"val = fetch_arg ( buffer , place , 8 , info )"		6682266	0		=			
ANR	6683425	Identifier	val		6682266	0					
ANR	6683426	CallExpression	"fetch_arg ( buffer , place , 8 , info )"		6682266	1					
ANR	6683427	Callee	fetch_arg		6682266	0					
ANR	6683428	Identifier	fetch_arg		6682266	0					
ANR	6683429	ArgumentList	buffer		6682266	1					
ANR	6683430	Argument	buffer		6682266	0					
ANR	6683431	Identifier	buffer		6682266	0					
ANR	6683432	Argument	place		6682266	1					
ANR	6683433	Identifier	place		6682266	0					
ANR	6683434	Argument	8		6682266	2					
ANR	6683435	PrimaryExpression	8		6682266	0					
ANR	6683436	Argument	info		6682266	3					
ANR	6683437	Identifier	info		6682266	0					
ANR	6683438	ElseStatement	else		6682266	0					
ANR	6683439	IfStatement	if ( place == 'b' )		6682266	0					
ANR	6683440	Condition	place == 'b'	425:15:5760:5771	6682266	0	True				
ANR	6683441	EqualityExpression	place == 'b'		6682266	0		==			
ANR	6683442	Identifier	place		6682266	0					
ANR	6683443	PrimaryExpression	'b'		6682266	1					
ANR	6683444	ExpressionStatement	val = NEXTBYTE ( p1 )	427:1:5776:5795	6682266	1	True				
ANR	6683445	AssignmentExpression	val = NEXTBYTE ( p1 )		6682266	0		=			
ANR	6683446	Identifier	val		6682266	0					
ANR	6683447	CallExpression	NEXTBYTE ( p1 )		6682266	1					
ANR	6683448	Callee	NEXTBYTE		6682266	0					
ANR	6683449	Identifier	NEXTBYTE		6682266	0					
ANR	6683450	ArgumentList	p1		6682266	1					
ANR	6683451	Argument	p1		6682266	0					
ANR	6683452	Identifier	p1		6682266	0					
ANR	6683453	ElseStatement	else		6682266	0					
ANR	6683454	IfStatement	if ( place == 'w' || place == 'W' )		6682266	0					
ANR	6683455	Condition	place == 'w' || place == 'W'	429:15:5813:5840	6682266	0	True				
ANR	6683456	OrExpression	place == 'w' || place == 'W'		6682266	0		||			
ANR	6683457	EqualityExpression	place == 'w'		6682266	0		==			
ANR	6683458	Identifier	place		6682266	0					
ANR	6683459	PrimaryExpression	'w'		6682266	1					
ANR	6683460	EqualityExpression	place == 'W'		6682266	1		==			
ANR	6683461	Identifier	place		6682266	0					
ANR	6683462	PrimaryExpression	'W'		6682266	1					
ANR	6683463	ExpressionStatement	val = NEXTWORD ( p1 )	431:1:5845:5864	6682266	1	True				
ANR	6683464	AssignmentExpression	val = NEXTWORD ( p1 )		6682266	0		=			
ANR	6683465	Identifier	val		6682266	0					
ANR	6683466	CallExpression	NEXTWORD ( p1 )		6682266	1					
ANR	6683467	Callee	NEXTWORD		6682266	0					
ANR	6683468	Identifier	NEXTWORD		6682266	0					
ANR	6683469	ArgumentList	p1		6682266	1					
ANR	6683470	Argument	p1		6682266	0					
ANR	6683471	Identifier	p1		6682266	0					
ANR	6683472	ElseStatement	else		6682266	0					
ANR	6683473	IfStatement	if ( place == 'l' )		6682266	0					
ANR	6683474	Condition	place == 'l'	433:15:5882:5893	6682266	0	True				
ANR	6683475	EqualityExpression	place == 'l'		6682266	0		==			
ANR	6683476	Identifier	place		6682266	0					
ANR	6683477	PrimaryExpression	'l'		6682266	1					
ANR	6683478	ExpressionStatement	val = NEXTLONG ( p1 )	435:1:5898:5917	6682266	1	True				
ANR	6683479	AssignmentExpression	val = NEXTLONG ( p1 )		6682266	0		=			
ANR	6683480	Identifier	val		6682266	0					
ANR	6683481	CallExpression	NEXTLONG ( p1 )		6682266	1					
ANR	6683482	Callee	NEXTLONG		6682266	0					
ANR	6683483	Identifier	NEXTLONG		6682266	0					
ANR	6683484	ArgumentList	p1		6682266	1					
ANR	6683485	Argument	p1		6682266	0					
ANR	6683486	Identifier	p1		6682266	0					
ANR	6683487	ElseStatement	else		6682266	0					
ANR	6683488	ReturnStatement	return - 2 ;	439:1:5933:5942	6682266	0	True				
ANR	6683489	UnaryOperationExpression	- 2		6682266	0					
ANR	6683490	UnaryOperator	-		6682266	0					
ANR	6683491	PrimaryExpression	2		6682266	1					
ANR	6683492	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""#%d"" , val )"	441:6:5951:5999	6682266	77	True				
ANR	6683493	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""#%d"" , val )"		6682266	0					
ANR	6683494	Callee	* info -> fprintf_func		6682266	0					
ANR	6683495	UnaryOperationExpression	* info -> fprintf_func		6682266	0					
ANR	6683496	UnaryOperator	*		6682266	0					
ANR	6683497	PtrMemberAccess	info -> fprintf_func		6682266	1					
ANR	6683498	Identifier	info		6682266	0					
ANR	6683499	Identifier	fprintf_func		6682266	1					
ANR	6683500	ArgumentList	info -> stream		6682266	1					
ANR	6683501	Argument	info -> stream		6682266	0					
ANR	6683502	PtrMemberAccess	info -> stream		6682266	0					
ANR	6683503	Identifier	info		6682266	0					
ANR	6683504	Identifier	stream		6682266	1					
ANR	6683505	Argument	"""#%d"""		6682266	1					
ANR	6683506	PrimaryExpression	"""#%d"""		6682266	0					
ANR	6683507	Argument	val		6682266	2					
ANR	6683508	Identifier	val		6682266	0					
ANR	6683509	BreakStatement	break ;	443:6:6008:6013	6682266	78	True				
ANR	6683510	Label	case 'B' :	447:4:6022:6030	6682266	79	True				
ANR	6683511	IfStatement	if ( place == 'b' )		6682266	80					
ANR	6683512	Condition	place == 'b'	449:10:6043:6054	6682266	0	True				
ANR	6683513	EqualityExpression	place == 'b'		6682266	0		==			
ANR	6683514	Identifier	place		6682266	0					
ANR	6683515	PrimaryExpression	'b'		6682266	1					
ANR	6683516	ExpressionStatement	disp = NEXTBYTE ( p )	451:1:6059:6078	6682266	1	True				
ANR	6683517	AssignmentExpression	disp = NEXTBYTE ( p )		6682266	0		=			
ANR	6683518	Identifier	disp		6682266	0					
ANR	6683519	CallExpression	NEXTBYTE ( p )		6682266	1					
ANR	6683520	Callee	NEXTBYTE		6682266	0					
ANR	6683521	Identifier	NEXTBYTE		6682266	0					
ANR	6683522	ArgumentList	p		6682266	1					
ANR	6683523	Argument	p		6682266	0					
ANR	6683524	Identifier	p		6682266	0					
ANR	6683525	ElseStatement	else		6682266	0					
ANR	6683526	IfStatement	if ( place == 'B' )		6682266	0					
ANR	6683527	Condition	place == 'B'	453:15:6096:6107	6682266	0	True				
ANR	6683528	EqualityExpression	place == 'B'		6682266	0		==			
ANR	6683529	Identifier	place		6682266	0					
ANR	6683530	PrimaryExpression	'B'		6682266	1					
ANR	6683531	ExpressionStatement	disp = COERCE_SIGNED_CHAR ( buffer [ 1 ] )	455:1:6112:6149	6682266	1	True				
ANR	6683532	AssignmentExpression	disp = COERCE_SIGNED_CHAR ( buffer [ 1 ] )		6682266	0		=			
ANR	6683533	Identifier	disp		6682266	0					
ANR	6683534	CallExpression	COERCE_SIGNED_CHAR ( buffer [ 1 ] )		6682266	1					
ANR	6683535	Callee	COERCE_SIGNED_CHAR		6682266	0					
ANR	6683536	Identifier	COERCE_SIGNED_CHAR		6682266	0					
ANR	6683537	ArgumentList	buffer [ 1 ]		6682266	1					
ANR	6683538	Argument	buffer [ 1 ]		6682266	0					
ANR	6683539	ArrayIndexing	buffer [ 1 ]		6682266	0					
ANR	6683540	Identifier	buffer		6682266	0					
ANR	6683541	PrimaryExpression	1		6682266	1					
ANR	6683542	ElseStatement	else		6682266	0					
ANR	6683543	IfStatement	if ( place == 'w' || place == 'W' )		6682266	0					
ANR	6683544	Condition	place == 'w' || place == 'W'	457:15:6167:6194	6682266	0	True				
ANR	6683545	OrExpression	place == 'w' || place == 'W'		6682266	0		||			
ANR	6683546	EqualityExpression	place == 'w'		6682266	0		==			
ANR	6683547	Identifier	place		6682266	0					
ANR	6683548	PrimaryExpression	'w'		6682266	1					
ANR	6683549	EqualityExpression	place == 'W'		6682266	1		==			
ANR	6683550	Identifier	place		6682266	0					
ANR	6683551	PrimaryExpression	'W'		6682266	1					
ANR	6683552	ExpressionStatement	disp = NEXTWORD ( p )	459:1:6199:6218	6682266	1	True				
ANR	6683553	AssignmentExpression	disp = NEXTWORD ( p )		6682266	0		=			
ANR	6683554	Identifier	disp		6682266	0					
ANR	6683555	CallExpression	NEXTWORD ( p )		6682266	1					
ANR	6683556	Callee	NEXTWORD		6682266	0					
ANR	6683557	Identifier	NEXTWORD		6682266	0					
ANR	6683558	ArgumentList	p		6682266	1					
ANR	6683559	Argument	p		6682266	0					
ANR	6683560	Identifier	p		6682266	0					
ANR	6683561	ElseStatement	else		6682266	0					
ANR	6683562	IfStatement	if ( place == 'l' || place == 'L' || place == 'C' )		6682266	0					
ANR	6683563	Condition	place == 'l' || place == 'L' || place == 'C'	461:15:6236:6279	6682266	0	True				
ANR	6683564	OrExpression	place == 'l' || place == 'L' || place == 'C'		6682266	0		||			
ANR	6683565	EqualityExpression	place == 'l'		6682266	0		==			
ANR	6683566	Identifier	place		6682266	0					
ANR	6683567	PrimaryExpression	'l'		6682266	1					
ANR	6683568	OrExpression	place == 'L' || place == 'C'		6682266	1		||			
ANR	6683569	EqualityExpression	place == 'L'		6682266	0		==			
ANR	6683570	Identifier	place		6682266	0					
ANR	6683571	PrimaryExpression	'L'		6682266	1					
ANR	6683572	EqualityExpression	place == 'C'		6682266	1		==			
ANR	6683573	Identifier	place		6682266	0					
ANR	6683574	PrimaryExpression	'C'		6682266	1					
ANR	6683575	ExpressionStatement	disp = NEXTLONG ( p )	463:1:6284:6303	6682266	1	True				
ANR	6683576	AssignmentExpression	disp = NEXTLONG ( p )		6682266	0		=			
ANR	6683577	Identifier	disp		6682266	0					
ANR	6683578	CallExpression	NEXTLONG ( p )		6682266	1					
ANR	6683579	Callee	NEXTLONG		6682266	0					
ANR	6683580	Identifier	NEXTLONG		6682266	0					
ANR	6683581	ArgumentList	p		6682266	1					
ANR	6683582	Argument	p		6682266	0					
ANR	6683583	Identifier	p		6682266	0					
ANR	6683584	ElseStatement	else		6682266	0					
ANR	6683585	IfStatement	if ( place == 'g' )		6682266	0					
ANR	6683586	Condition	place == 'g'	465:15:6321:6332	6682266	0	True				
ANR	6683587	EqualityExpression	place == 'g'		6682266	0		==			
ANR	6683588	Identifier	place		6682266	0					
ANR	6683589	PrimaryExpression	'g'		6682266	1					
ANR	6683590	CompoundStatement		457:1:6212:6212	6682266	1					
ANR	6683591	ExpressionStatement	disp = NEXTBYTE ( buffer )	469:3:6343:6367	6682266	0	True				
ANR	6683592	AssignmentExpression	disp = NEXTBYTE ( buffer )		6682266	0		=			
ANR	6683593	Identifier	disp		6682266	0					
ANR	6683594	CallExpression	NEXTBYTE ( buffer )		6682266	1					
ANR	6683595	Callee	NEXTBYTE		6682266	0					
ANR	6683596	Identifier	NEXTBYTE		6682266	0					
ANR	6683597	ArgumentList	buffer		6682266	1					
ANR	6683598	Argument	buffer		6682266	0					
ANR	6683599	Identifier	buffer		6682266	0					
ANR	6683600	IfStatement	if ( disp == 0 )		6682266	1					
ANR	6683601	Condition	disp == 0	471:7:6377:6385	6682266	0	True				
ANR	6683602	EqualityExpression	disp == 0		6682266	0		==			
ANR	6683603	Identifier	disp		6682266	0					
ANR	6683604	PrimaryExpression	0		6682266	1					
ANR	6683605	ExpressionStatement	disp = NEXTWORD ( p )	473:5:6394:6413	6682266	1	True				
ANR	6683606	AssignmentExpression	disp = NEXTWORD ( p )		6682266	0		=			
ANR	6683607	Identifier	disp		6682266	0					
ANR	6683608	CallExpression	NEXTWORD ( p )		6682266	1					
ANR	6683609	Callee	NEXTWORD		6682266	0					
ANR	6683610	Identifier	NEXTWORD		6682266	0					
ANR	6683611	ArgumentList	p		6682266	1					
ANR	6683612	Argument	p		6682266	0					
ANR	6683613	Identifier	p		6682266	0					
ANR	6683614	ElseStatement	else		6682266	0					
ANR	6683615	IfStatement	if ( disp == - 1 )		6682266	0					
ANR	6683616	Condition	disp == - 1	475:12:6428:6437	6682266	0	True				
ANR	6683617	EqualityExpression	disp == - 1		6682266	0		==			
ANR	6683618	Identifier	disp		6682266	0					
ANR	6683619	UnaryOperationExpression	- 1		6682266	1					
ANR	6683620	UnaryOperator	-		6682266	0					
ANR	6683621	PrimaryExpression	1		6682266	1					
ANR	6683622	ExpressionStatement	disp = NEXTLONG ( p )	477:5:6446:6465	6682266	1	True				
ANR	6683623	AssignmentExpression	disp = NEXTLONG ( p )		6682266	0		=			
ANR	6683624	Identifier	disp		6682266	0					
ANR	6683625	CallExpression	NEXTLONG ( p )		6682266	1					
ANR	6683626	Callee	NEXTLONG		6682266	0					
ANR	6683627	Identifier	NEXTLONG		6682266	0					
ANR	6683628	ArgumentList	p		6682266	1					
ANR	6683629	Argument	p		6682266	0					
ANR	6683630	Identifier	p		6682266	0					
ANR	6683631	ElseStatement	else		6682266	0					
ANR	6683632	IfStatement	if ( place == 'c' )		6682266	0					
ANR	6683633	Condition	place == 'c'	481:15:6487:6498	6682266	0	True				
ANR	6683634	EqualityExpression	place == 'c'		6682266	0		==			
ANR	6683635	Identifier	place		6682266	0					
ANR	6683636	PrimaryExpression	'c'		6682266	1					
ANR	6683637	CompoundStatement		473:1:6378:6378	6682266	1					
ANR	6683638	IfStatement	if ( buffer [ 1 ] & 0x40 )		6682266	0					
ANR	6683639	Condition	buffer [ 1 ] & 0x40	485:7:6513:6528	6682266	0	True				
ANR	6683640	BitAndExpression	buffer [ 1 ] & 0x40		6682266	0		&			
ANR	6683641	ArrayIndexing	buffer [ 1 ]		6682266	0					
ANR	6683642	Identifier	buffer		6682266	0					
ANR	6683643	PrimaryExpression	1		6682266	1					
ANR	6683644	PrimaryExpression	0x40		6682266	1					
ANR	6683645	ExpressionStatement	disp = NEXTLONG ( p )	487:5:6577:6596	6682266	1	True				
ANR	6683646	AssignmentExpression	disp = NEXTLONG ( p )		6682266	0		=			
ANR	6683647	Identifier	disp		6682266	0					
ANR	6683648	CallExpression	NEXTLONG ( p )		6682266	1					
ANR	6683649	Callee	NEXTLONG		6682266	0					
ANR	6683650	Identifier	NEXTLONG		6682266	0					
ANR	6683651	ArgumentList	p		6682266	1					
ANR	6683652	Argument	p		6682266	0					
ANR	6683653	Identifier	p		6682266	0					
ANR	6683654	ElseStatement	else		6682266	0					
ANR	6683655	ExpressionStatement	disp = NEXTWORD ( p )	491:5:6613:6632	6682266	0	True				
ANR	6683656	AssignmentExpression	disp = NEXTWORD ( p )		6682266	0		=			
ANR	6683657	Identifier	disp		6682266	0					
ANR	6683658	CallExpression	NEXTWORD ( p )		6682266	1					
ANR	6683659	Callee	NEXTWORD		6682266	0					
ANR	6683660	Identifier	NEXTWORD		6682266	0					
ANR	6683661	ArgumentList	p		6682266	1					
ANR	6683662	Argument	p		6682266	0					
ANR	6683663	Identifier	p		6682266	0					
ANR	6683664	ElseStatement	else		6682266	0					
ANR	6683665	ReturnStatement	return - 2 ;	497:1:6652:6661	6682266	0	True				
ANR	6683666	UnaryOperationExpression	- 2		6682266	0					
ANR	6683667	UnaryOperator	-		6682266	0					
ANR	6683668	PrimaryExpression	2		6682266	1					
ANR	6683669	ExpressionStatement	"( * info -> print_address_func ) ( addr + disp , info )"	501:6:6672:6719	6682266	81	True				
ANR	6683670	CallExpression	"( * info -> print_address_func ) ( addr + disp , info )"		6682266	0					
ANR	6683671	Callee	* info -> print_address_func		6682266	0					
ANR	6683672	UnaryOperationExpression	* info -> print_address_func		6682266	0					
ANR	6683673	UnaryOperator	*		6682266	0					
ANR	6683674	PtrMemberAccess	info -> print_address_func		6682266	1					
ANR	6683675	Identifier	info		6682266	0					
ANR	6683676	Identifier	print_address_func		6682266	1					
ANR	6683677	ArgumentList	addr + disp		6682266	1					
ANR	6683678	Argument	addr + disp		6682266	0					
ANR	6683679	AdditiveExpression	addr + disp		6682266	0		+			
ANR	6683680	Identifier	addr		6682266	0					
ANR	6683681	Identifier	disp		6682266	1					
ANR	6683682	Argument	info		6682266	1					
ANR	6683683	Identifier	info		6682266	0					
ANR	6683684	BreakStatement	break ;	503:6:6728:6733	6682266	82	True				
ANR	6683685	Label	case 'd' :	507:4:6742:6750	6682266	83	True				
ANR	6683686	ExpressionStatement	val = NEXTWORD ( p )	509:6:6759:6777	6682266	84	True				
ANR	6683687	AssignmentExpression	val = NEXTWORD ( p )		6682266	0		=			
ANR	6683688	Identifier	val		6682266	0					
ANR	6683689	CallExpression	NEXTWORD ( p )		6682266	1					
ANR	6683690	Callee	NEXTWORD		6682266	0					
ANR	6683691	Identifier	NEXTWORD		6682266	0					
ANR	6683692	ArgumentList	p		6682266	1					
ANR	6683693	Argument	p		6682266	0					
ANR	6683694	Identifier	p		6682266	0					
ANR	6683695	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s@(%d)"" , reg_names [ fetch_arg ( buffer , place , 3 , info ) + 8 ] , val )"	511:6:6786:6894	6682266	85	True				
ANR	6683696	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s@(%d)"" , reg_names [ fetch_arg ( buffer , place , 3 , info ) + 8 ] , val )"		6682266	0					
ANR	6683697	Callee	* info -> fprintf_func		6682266	0					
ANR	6683698	UnaryOperationExpression	* info -> fprintf_func		6682266	0					
ANR	6683699	UnaryOperator	*		6682266	0					
ANR	6683700	PtrMemberAccess	info -> fprintf_func		6682266	1					
ANR	6683701	Identifier	info		6682266	0					
ANR	6683702	Identifier	fprintf_func		6682266	1					
ANR	6683703	ArgumentList	info -> stream		6682266	1					
ANR	6683704	Argument	info -> stream		6682266	0					
ANR	6683705	PtrMemberAccess	info -> stream		6682266	0					
ANR	6683706	Identifier	info		6682266	0					
ANR	6683707	Identifier	stream		6682266	1					
ANR	6683708	Argument	"""%s@(%d)"""		6682266	1					
ANR	6683709	PrimaryExpression	"""%s@(%d)"""		6682266	0					
ANR	6683710	Argument	"reg_names [ fetch_arg ( buffer , place , 3 , info ) + 8 ]"		6682266	2					
ANR	6683711	ArrayIndexing	"reg_names [ fetch_arg ( buffer , place , 3 , info ) + 8 ]"		6682266	0					
ANR	6683712	Identifier	reg_names		6682266	0					
ANR	6683713	AdditiveExpression	"fetch_arg ( buffer , place , 3 , info ) + 8"		6682266	1		+			
ANR	6683714	CallExpression	"fetch_arg ( buffer , place , 3 , info )"		6682266	0					
ANR	6683715	Callee	fetch_arg		6682266	0					
ANR	6683716	Identifier	fetch_arg		6682266	0					
ANR	6683717	ArgumentList	buffer		6682266	1					
ANR	6683718	Argument	buffer		6682266	0					
ANR	6683719	Identifier	buffer		6682266	0					
ANR	6683720	Argument	place		6682266	1					
ANR	6683721	Identifier	place		6682266	0					
ANR	6683722	Argument	3		6682266	2					
ANR	6683723	PrimaryExpression	3		6682266	0					
ANR	6683724	Argument	info		6682266	3					
ANR	6683725	Identifier	info		6682266	0					
ANR	6683726	PrimaryExpression	8		6682266	1					
ANR	6683727	Argument	val		6682266	3					
ANR	6683728	Identifier	val		6682266	0					
ANR	6683729	BreakStatement	break ;	517:6:6903:6908	6682266	86	True				
ANR	6683730	Label	case 's' :	521:4:6917:6925	6682266	87	True				
ANR	6683731	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , fpcr_names [ fetch_arg ( buffer , place , 3 , info ) ] )"	523:6:6934:7033	6682266	88	True				
ANR	6683732	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , fpcr_names [ fetch_arg ( buffer , place , 3 , info ) ] )"		6682266	0					
ANR	6683733	Callee	* info -> fprintf_func		6682266	0					
ANR	6683734	UnaryOperationExpression	* info -> fprintf_func		6682266	0					
ANR	6683735	UnaryOperator	*		6682266	0					
ANR	6683736	PtrMemberAccess	info -> fprintf_func		6682266	1					
ANR	6683737	Identifier	info		6682266	0					
ANR	6683738	Identifier	fprintf_func		6682266	1					
ANR	6683739	ArgumentList	info -> stream		6682266	1					
ANR	6683740	Argument	info -> stream		6682266	0					
ANR	6683741	PtrMemberAccess	info -> stream		6682266	0					
ANR	6683742	Identifier	info		6682266	0					
ANR	6683743	Identifier	stream		6682266	1					
ANR	6683744	Argument	"""%s"""		6682266	1					
ANR	6683745	PrimaryExpression	"""%s"""		6682266	0					
ANR	6683746	Argument	"fpcr_names [ fetch_arg ( buffer , place , 3 , info ) ]"		6682266	2					
ANR	6683747	ArrayIndexing	"fpcr_names [ fetch_arg ( buffer , place , 3 , info ) ]"		6682266	0					
ANR	6683748	Identifier	fpcr_names		6682266	0					
ANR	6683749	CallExpression	"fetch_arg ( buffer , place , 3 , info )"		6682266	1					
ANR	6683750	Callee	fetch_arg		6682266	0					
ANR	6683751	Identifier	fetch_arg		6682266	0					
ANR	6683752	ArgumentList	buffer		6682266	1					
ANR	6683753	Argument	buffer		6682266	0					
ANR	6683754	Identifier	buffer		6682266	0					
ANR	6683755	Argument	place		6682266	1					
ANR	6683756	Identifier	place		6682266	0					
ANR	6683757	Argument	3		6682266	2					
ANR	6683758	PrimaryExpression	3		6682266	0					
ANR	6683759	Argument	info		6682266	3					
ANR	6683760	Identifier	info		6682266	0					
ANR	6683761	BreakStatement	break ;	527:6:7042:7047	6682266	89	True				
ANR	6683762	Label	case 'e' :	531:4:7056:7064	6682266	90	True				
ANR	6683763	ExpressionStatement	"val = fetch_arg ( buffer , place , 2 , info )"	533:6:7073:7112	6682266	91	True				
ANR	6683764	AssignmentExpression	"val = fetch_arg ( buffer , place , 2 , info )"		6682266	0		=			
ANR	6683765	Identifier	val		6682266	0					
ANR	6683766	CallExpression	"fetch_arg ( buffer , place , 2 , info )"		6682266	1					
ANR	6683767	Callee	fetch_arg		6682266	0					
ANR	6683768	Identifier	fetch_arg		6682266	0					
ANR	6683769	ArgumentList	buffer		6682266	1					
ANR	6683770	Argument	buffer		6682266	0					
ANR	6683771	Identifier	buffer		6682266	0					
ANR	6683772	Argument	place		6682266	1					
ANR	6683773	Identifier	place		6682266	0					
ANR	6683774	Argument	2		6682266	2					
ANR	6683775	PrimaryExpression	2		6682266	0					
ANR	6683776	Argument	info		6682266	3					
ANR	6683777	Identifier	info		6682266	0					
ANR	6683778	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%%acc%d"" , val )"	535:6:7121:7173	6682266	92	True				
ANR	6683779	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%%acc%d"" , val )"		6682266	0					
ANR	6683780	Callee	* info -> fprintf_func		6682266	0					
ANR	6683781	UnaryOperationExpression	* info -> fprintf_func		6682266	0					
ANR	6683782	UnaryOperator	*		6682266	0					
ANR	6683783	PtrMemberAccess	info -> fprintf_func		6682266	1					
ANR	6683784	Identifier	info		6682266	0					
ANR	6683785	Identifier	fprintf_func		6682266	1					
ANR	6683786	ArgumentList	info -> stream		6682266	1					
ANR	6683787	Argument	info -> stream		6682266	0					
ANR	6683788	PtrMemberAccess	info -> stream		6682266	0					
ANR	6683789	Identifier	info		6682266	0					
ANR	6683790	Identifier	stream		6682266	1					
ANR	6683791	Argument	"""%%acc%d"""		6682266	1					
ANR	6683792	PrimaryExpression	"""%%acc%d"""		6682266	0					
ANR	6683793	Argument	val		6682266	2					
ANR	6683794	Identifier	val		6682266	0					
ANR	6683795	BreakStatement	break ;	537:6:7182:7187	6682266	93	True				
ANR	6683796	Label	case 'g' :	541:4:7196:7204	6682266	94	True				
ANR	6683797	ExpressionStatement	"val = fetch_arg ( buffer , place , 1 , info )"	543:6:7213:7252	6682266	95	True				
ANR	6683798	AssignmentExpression	"val = fetch_arg ( buffer , place , 1 , info )"		6682266	0		=			
ANR	6683799	Identifier	val		6682266	0					
ANR	6683800	CallExpression	"fetch_arg ( buffer , place , 1 , info )"		6682266	1					
ANR	6683801	Callee	fetch_arg		6682266	0					
ANR	6683802	Identifier	fetch_arg		6682266	0					
ANR	6683803	ArgumentList	buffer		6682266	1					
ANR	6683804	Argument	buffer		6682266	0					
ANR	6683805	Identifier	buffer		6682266	0					
ANR	6683806	Argument	place		6682266	1					
ANR	6683807	Identifier	place		6682266	0					
ANR	6683808	Argument	1		6682266	2					
ANR	6683809	PrimaryExpression	1		6682266	0					
ANR	6683810	Argument	info		6682266	3					
ANR	6683811	Identifier	info		6682266	0					
ANR	6683812	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%%accext%s"" , val == 0 ? ""01"" : ""23"" )"	545:6:7261:7333	6682266	96	True				
ANR	6683813	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%%accext%s"" , val == 0 ? ""01"" : ""23"" )"		6682266	0					
ANR	6683814	Callee	* info -> fprintf_func		6682266	0					
ANR	6683815	UnaryOperationExpression	* info -> fprintf_func		6682266	0					
ANR	6683816	UnaryOperator	*		6682266	0					
ANR	6683817	PtrMemberAccess	info -> fprintf_func		6682266	1					
ANR	6683818	Identifier	info		6682266	0					
ANR	6683819	Identifier	fprintf_func		6682266	1					
ANR	6683820	ArgumentList	info -> stream		6682266	1					
ANR	6683821	Argument	info -> stream		6682266	0					
ANR	6683822	PtrMemberAccess	info -> stream		6682266	0					
ANR	6683823	Identifier	info		6682266	0					
ANR	6683824	Identifier	stream		6682266	1					
ANR	6683825	Argument	"""%%accext%s"""		6682266	1					
ANR	6683826	PrimaryExpression	"""%%accext%s"""		6682266	0					
ANR	6683827	Argument	"val == 0 ? ""01"" : ""23"""		6682266	2					
ANR	6683828	ConditionalExpression	"val == 0 ? ""01"" : ""23"""		6682266	0					
ANR	6683829	Condition	val == 0		6682266	0					
ANR	6683830	EqualityExpression	val == 0		6682266	0		==			
ANR	6683831	Identifier	val		6682266	0					
ANR	6683832	PrimaryExpression	0		6682266	1					
ANR	6683833	PrimaryExpression	"""01"""		6682266	1					
ANR	6683834	PrimaryExpression	"""23"""		6682266	2					
ANR	6683835	BreakStatement	break ;	547:6:7342:7347	6682266	97	True				
ANR	6683836	Label	case 'i' :	551:4:7356:7364	6682266	98	True				
ANR	6683837	ExpressionStatement	"val = fetch_arg ( buffer , place , 2 , info )"	553:6:7373:7412	6682266	99	True				
ANR	6683838	AssignmentExpression	"val = fetch_arg ( buffer , place , 2 , info )"		6682266	0		=			
ANR	6683839	Identifier	val		6682266	0					
ANR	6683840	CallExpression	"fetch_arg ( buffer , place , 2 , info )"		6682266	1					
ANR	6683841	Callee	fetch_arg		6682266	0					
ANR	6683842	Identifier	fetch_arg		6682266	0					
ANR	6683843	ArgumentList	buffer		6682266	1					
ANR	6683844	Argument	buffer		6682266	0					
ANR	6683845	Identifier	buffer		6682266	0					
ANR	6683846	Argument	place		6682266	1					
ANR	6683847	Identifier	place		6682266	0					
ANR	6683848	Argument	2		6682266	2					
ANR	6683849	PrimaryExpression	2		6682266	0					
ANR	6683850	Argument	info		6682266	3					
ANR	6683851	Identifier	info		6682266	0					
ANR	6683852	IfStatement	if ( val == 1 )		6682266	100					
ANR	6683853	Condition	val == 1	555:10:7425:7432	6682266	0	True				
ANR	6683854	EqualityExpression	val == 1		6682266	0		==			
ANR	6683855	Identifier	val		6682266	0					
ANR	6683856	PrimaryExpression	1		6682266	1					
ANR	6683857	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""<<"" )"	557:1:7437:7479	6682266	1	True				
ANR	6683858	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""<<"" )"		6682266	0					
ANR	6683859	Callee	* info -> fprintf_func		6682266	0					
ANR	6683860	UnaryOperationExpression	* info -> fprintf_func		6682266	0					
ANR	6683861	UnaryOperator	*		6682266	0					
ANR	6683862	PtrMemberAccess	info -> fprintf_func		6682266	1					
ANR	6683863	Identifier	info		6682266	0					
ANR	6683864	Identifier	fprintf_func		6682266	1					
ANR	6683865	ArgumentList	info -> stream		6682266	1					
ANR	6683866	Argument	info -> stream		6682266	0					
ANR	6683867	PtrMemberAccess	info -> stream		6682266	0					
ANR	6683868	Identifier	info		6682266	0					
ANR	6683869	Identifier	stream		6682266	1					
ANR	6683870	Argument	"""<<"""		6682266	1					
ANR	6683871	PrimaryExpression	"""<<"""		6682266	0					
ANR	6683872	ElseStatement	else		6682266	0					
ANR	6683873	IfStatement	if ( val == 3 )		6682266	0					
ANR	6683874	Condition	val == 3	559:15:7497:7504	6682266	0	True				
ANR	6683875	EqualityExpression	val == 3		6682266	0		==			
ANR	6683876	Identifier	val		6682266	0					
ANR	6683877	PrimaryExpression	3		6682266	1					
ANR	6683878	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , "">>"" )"	561:1:7509:7551	6682266	1	True				
ANR	6683879	CallExpression	"( * info -> fprintf_func ) ( info -> stream , "">>"" )"		6682266	0					
ANR	6683880	Callee	* info -> fprintf_func		6682266	0					
ANR	6683881	UnaryOperationExpression	* info -> fprintf_func		6682266	0					
ANR	6683882	UnaryOperator	*		6682266	0					
ANR	6683883	PtrMemberAccess	info -> fprintf_func		6682266	1					
ANR	6683884	Identifier	info		6682266	0					
ANR	6683885	Identifier	fprintf_func		6682266	1					
ANR	6683886	ArgumentList	info -> stream		6682266	1					
ANR	6683887	Argument	info -> stream		6682266	0					
ANR	6683888	PtrMemberAccess	info -> stream		6682266	0					
ANR	6683889	Identifier	info		6682266	0					
ANR	6683890	Identifier	stream		6682266	1					
ANR	6683891	Argument	""">>"""		6682266	1					
ANR	6683892	PrimaryExpression	""">>"""		6682266	0					
ANR	6683893	ElseStatement	else		6682266	0					
ANR	6683894	ReturnStatement	return - 1 ;	565:1:7567:7576	6682266	0	True				
ANR	6683895	UnaryOperationExpression	- 1		6682266	0					
ANR	6683896	UnaryOperator	-		6682266	0					
ANR	6683897	PrimaryExpression	1		6682266	1					
ANR	6683898	BreakStatement	break ;	567:6:7585:7590	6682266	101	True				
ANR	6683899	Label	case 'I' :	571:4:7599:7607	6682266	102	True				
ANR	6683900	ExpressionStatement	"val = fetch_arg ( buffer , 'd' , 3 , info )"	575:6:7651:7689	6682266	103	True				
ANR	6683901	AssignmentExpression	"val = fetch_arg ( buffer , 'd' , 3 , info )"		6682266	0		=			
ANR	6683902	Identifier	val		6682266	0					
ANR	6683903	CallExpression	"fetch_arg ( buffer , 'd' , 3 , info )"		6682266	1					
ANR	6683904	Callee	fetch_arg		6682266	0					
ANR	6683905	Identifier	fetch_arg		6682266	0					
ANR	6683906	ArgumentList	buffer		6682266	1					
ANR	6683907	Argument	buffer		6682266	0					
ANR	6683908	Identifier	buffer		6682266	0					
ANR	6683909	Argument	'd'		6682266	1					
ANR	6683910	PrimaryExpression	'd'		6682266	0					
ANR	6683911	Argument	3		6682266	2					
ANR	6683912	PrimaryExpression	3		6682266	0					
ANR	6683913	Argument	info		6682266	3					
ANR	6683914	Identifier	info		6682266	0					
ANR	6683915	IfStatement	if ( val != 1 )		6682266	104					
ANR	6683916	Condition	val != 1	579:10:7704:7711	6682266	0	True				
ANR	6683917	EqualityExpression	val != 1		6682266	0		!=			
ANR	6683918	Identifier	val		6682266	0					
ANR	6683919	PrimaryExpression	1		6682266	1					
ANR	6683920	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""(cpid=%d) "" , val )"	581:1:7750:7805	6682266	1	True				
ANR	6683921	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""(cpid=%d) "" , val )"		6682266	0					
ANR	6683922	Callee	* info -> fprintf_func		6682266	0					
ANR	6683923	UnaryOperationExpression	* info -> fprintf_func		6682266	0					
ANR	6683924	UnaryOperator	*		6682266	0					
ANR	6683925	PtrMemberAccess	info -> fprintf_func		6682266	1					
ANR	6683926	Identifier	info		6682266	0					
ANR	6683927	Identifier	fprintf_func		6682266	1					
ANR	6683928	ArgumentList	info -> stream		6682266	1					
ANR	6683929	Argument	info -> stream		6682266	0					
ANR	6683930	PtrMemberAccess	info -> stream		6682266	0					
ANR	6683931	Identifier	info		6682266	0					
ANR	6683932	Identifier	stream		6682266	1					
ANR	6683933	Argument	"""(cpid=%d) """		6682266	1					
ANR	6683934	PrimaryExpression	"""(cpid=%d) """		6682266	0					
ANR	6683935	Argument	val		6682266	2					
ANR	6683936	Identifier	val		6682266	0					
ANR	6683937	BreakStatement	break ;	583:6:7814:7819	6682266	105	True				
ANR	6683938	Label	case '4' :	587:4:7828:7836	6682266	106	True				
ANR	6683939	Label	case '*' :	589:4:7843:7851	6682266	107	True				
ANR	6683940	Label	case '~' :	591:4:7858:7866	6682266	108	True				
ANR	6683941	Label	case '%' :	593:4:7873:7881	6682266	109	True				
ANR	6683942	Label	case ';' :	595:4:7888:7896	6682266	110	True				
ANR	6683943	Label	case '@' :	597:4:7903:7911	6682266	111	True				
ANR	6683944	Label	case '!' :	599:4:7918:7926	6682266	112	True				
ANR	6683945	Label	case '$' :	601:4:7933:7941	6682266	113	True				
ANR	6683946	Label	case '?' :	603:4:7948:7956	6682266	114	True				
ANR	6683947	Label	case '/' :	605:4:7963:7971	6682266	115	True				
ANR	6683948	Label	case '&' :	607:4:7978:7986	6682266	116	True				
ANR	6683949	Label	case '|' :	609:4:7993:8001	6682266	117	True				
ANR	6683950	Label	case '<' :	611:4:8008:8016	6682266	118	True				
ANR	6683951	Label	case '>' :	613:4:8023:8031	6682266	119	True				
ANR	6683952	Label	case 'm' :	615:4:8038:8046	6682266	120	True				
ANR	6683953	Label	case 'n' :	617:4:8053:8061	6682266	121	True				
ANR	6683954	Label	case 'o' :	619:4:8068:8076	6682266	122	True				
ANR	6683955	Label	case 'p' :	621:4:8083:8091	6682266	123	True				
ANR	6683956	Label	case 'q' :	623:4:8098:8106	6682266	124	True				
ANR	6683957	Label	case 'v' :	625:4:8113:8121	6682266	125	True				
ANR	6683958	Label	case 'b' :	627:4:8128:8136	6682266	126	True				
ANR	6683959	Label	case 'w' :	629:4:8143:8151	6682266	127	True				
ANR	6683960	Label	case 'y' :	631:4:8158:8166	6682266	128	True				
ANR	6683961	Label	case 'z' :	633:4:8173:8181	6682266	129	True				
ANR	6683962	IfStatement	if ( place == 'd' )		6682266	130					
ANR	6683963	Condition	place == 'd'	635:10:8194:8205	6682266	0	True				
ANR	6683964	EqualityExpression	place == 'd'		6682266	0		==			
ANR	6683965	Identifier	place		6682266	0					
ANR	6683966	PrimaryExpression	'd'		6682266	1					
ANR	6683967	CompoundStatement		627:1:8085:8085	6682266	1					
ANR	6683968	ExpressionStatement	"val = fetch_arg ( buffer , 'x' , 6 , info )"	639:3:8216:8254	6682266	0	True				
ANR	6683969	AssignmentExpression	"val = fetch_arg ( buffer , 'x' , 6 , info )"		6682266	0		=			
ANR	6683970	Identifier	val		6682266	0					
ANR	6683971	CallExpression	"fetch_arg ( buffer , 'x' , 6 , info )"		6682266	1					
ANR	6683972	Callee	fetch_arg		6682266	0					
ANR	6683973	Identifier	fetch_arg		6682266	0					
ANR	6683974	ArgumentList	buffer		6682266	1					
ANR	6683975	Argument	buffer		6682266	0					
ANR	6683976	Identifier	buffer		6682266	0					
ANR	6683977	Argument	'x'		6682266	1					
ANR	6683978	PrimaryExpression	'x'		6682266	0					
ANR	6683979	Argument	6		6682266	2					
ANR	6683980	PrimaryExpression	6		6682266	0					
ANR	6683981	Argument	info		6682266	3					
ANR	6683982	Identifier	info		6682266	0					
ANR	6683983	ExpressionStatement	val = ( ( val & 7 ) << 3 ) + ( ( val >> 3 ) & 7 )	641:3:8260:8301	6682266	1	True				
ANR	6683984	AssignmentExpression	val = ( ( val & 7 ) << 3 ) + ( ( val >> 3 ) & 7 )		6682266	0		=			
ANR	6683985	Identifier	val		6682266	0					
ANR	6683986	AdditiveExpression	( ( val & 7 ) << 3 ) + ( ( val >> 3 ) & 7 )		6682266	1		+			
ANR	6683987	ShiftExpression	( val & 7 ) << 3		6682266	0		<<			
ANR	6683988	BitAndExpression	val & 7		6682266	0		&			
ANR	6683989	Identifier	val		6682266	0					
ANR	6683990	PrimaryExpression	7		6682266	1					
ANR	6683991	PrimaryExpression	3		6682266	1					
ANR	6683992	BitAndExpression	( val >> 3 ) & 7		6682266	1		&			
ANR	6683993	ShiftExpression	val >> 3		6682266	0		>>			
ANR	6683994	Identifier	val		6682266	0					
ANR	6683995	PrimaryExpression	3		6682266	1					
ANR	6683996	PrimaryExpression	7		6682266	1					
ANR	6683997	ElseStatement	else		6682266	0					
ANR	6683998	ExpressionStatement	"val = fetch_arg ( buffer , 's' , 6 , info )"	647:1:8321:8359	6682266	0	True				
ANR	6683999	AssignmentExpression	"val = fetch_arg ( buffer , 's' , 6 , info )"		6682266	0		=			
ANR	6684000	Identifier	val		6682266	0					
ANR	6684001	CallExpression	"fetch_arg ( buffer , 's' , 6 , info )"		6682266	1					
ANR	6684002	Callee	fetch_arg		6682266	0					
ANR	6684003	Identifier	fetch_arg		6682266	0					
ANR	6684004	ArgumentList	buffer		6682266	1					
ANR	6684005	Argument	buffer		6682266	0					
ANR	6684006	Identifier	buffer		6682266	0					
ANR	6684007	Argument	's'		6682266	1					
ANR	6684008	PrimaryExpression	's'		6682266	0					
ANR	6684009	Argument	6		6682266	2					
ANR	6684010	PrimaryExpression	6		6682266	0					
ANR	6684011	Argument	info		6682266	3					
ANR	6684012	Identifier	info		6682266	0					
ANR	6684013	IfStatement	"if ( ! m68k_valid_ea ( * d , val ) )"		6682266	131					
ANR	6684014	Condition	"! m68k_valid_ea ( * d , val )"	653:10:8443:8466	6682266	0	True				
ANR	6684015	UnaryOperationExpression	"! m68k_valid_ea ( * d , val )"		6682266	0					
ANR	6684016	UnaryOperator	!		6682266	0					
ANR	6684017	CallExpression	"m68k_valid_ea ( * d , val )"		6682266	1					
ANR	6684018	Callee	m68k_valid_ea		6682266	0					
ANR	6684019	Identifier	m68k_valid_ea		6682266	0					
ANR	6684020	ArgumentList	* d		6682266	1					
ANR	6684021	Argument	* d		6682266	0					
ANR	6684022	UnaryOperationExpression	* d		6682266	0					
ANR	6684023	UnaryOperator	*		6682266	0					
ANR	6684024	Identifier	d		6682266	1					
ANR	6684025	Argument	val		6682266	1					
ANR	6684026	Identifier	val		6682266	0					
ANR	6684027	ReturnStatement	return - 1 ;	655:1:8471:8480	6682266	1	True				
ANR	6684028	UnaryOperationExpression	- 1		6682266	0					
ANR	6684029	UnaryOperator	-		6682266	0					
ANR	6684030	PrimaryExpression	1		6682266	1					
ANR	6684031	ExpressionStatement	regno = ( val & 7 ) + 8	661:6:8552:8573	6682266	132	True				
ANR	6684032	AssignmentExpression	regno = ( val & 7 ) + 8		6682266	0		=			
ANR	6684033	Identifier	regno		6682266	0					
ANR	6684034	AdditiveExpression	( val & 7 ) + 8		6682266	1		+			
ANR	6684035	BitAndExpression	val & 7		6682266	0		&			
ANR	6684036	Identifier	val		6682266	0					
ANR	6684037	PrimaryExpression	7		6682266	1					
ANR	6684038	PrimaryExpression	8		6682266	1					
ANR	6684039	ExpressionStatement	regname = reg_names [ regno ]	663:6:8582:8608	6682266	133	True				
ANR	6684040	AssignmentExpression	regname = reg_names [ regno ]		6682266	0		=			
ANR	6684041	Identifier	regname		6682266	0					
ANR	6684042	ArrayIndexing	reg_names [ regno ]		6682266	1					
ANR	6684043	Identifier	reg_names		6682266	0					
ANR	6684044	Identifier	regno		6682266	1					
ANR	6684045	SwitchStatement	switch ( val >> 3 )		6682266	134					
ANR	6684046	Condition	val >> 3	665:14:8625:8632	6682266	0	True				
ANR	6684047	ShiftExpression	val >> 3		6682266	0		>>			
ANR	6684048	Identifier	val		6682266	0					
ANR	6684049	PrimaryExpression	3		6682266	1					
ANR	6684050	CompoundStatement		657:1:8512:8512	6682266	1					
ANR	6684051	Label	case 0 :	669:1:8641:8647	6682266	0	True				
ANR	6684052	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , reg_names [ val ] )"	671:3:8653:8711	6682266	1	True				
ANR	6684053	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , reg_names [ val ] )"		6682266	0					
ANR	6684054	Callee	* info -> fprintf_func		6682266	0					
ANR	6684055	UnaryOperationExpression	* info -> fprintf_func		6682266	0					
ANR	6684056	UnaryOperator	*		6682266	0					
ANR	6684057	PtrMemberAccess	info -> fprintf_func		6682266	1					
ANR	6684058	Identifier	info		6682266	0					
ANR	6684059	Identifier	fprintf_func		6682266	1					
ANR	6684060	ArgumentList	info -> stream		6682266	1					
ANR	6684061	Argument	info -> stream		6682266	0					
ANR	6684062	PtrMemberAccess	info -> stream		6682266	0					
ANR	6684063	Identifier	info		6682266	0					
ANR	6684064	Identifier	stream		6682266	1					
ANR	6684065	Argument	"""%s"""		6682266	1					
ANR	6684066	PrimaryExpression	"""%s"""		6682266	0					
ANR	6684067	Argument	reg_names [ val ]		6682266	2					
ANR	6684068	ArrayIndexing	reg_names [ val ]		6682266	0					
ANR	6684069	Identifier	reg_names		6682266	0					
ANR	6684070	Identifier	val		6682266	1					
ANR	6684071	BreakStatement	break ;	673:3:8717:8722	6682266	2	True				
ANR	6684072	Label	case 1 :	677:1:8728:8734	6682266	3	True				
ANR	6684073	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , regname )"	679:3:8740:8791	6682266	4	True				
ANR	6684074	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , regname )"		6682266	0					
ANR	6684075	Callee	* info -> fprintf_func		6682266	0					
ANR	6684076	UnaryOperationExpression	* info -> fprintf_func		6682266	0					
ANR	6684077	UnaryOperator	*		6682266	0					
ANR	6684078	PtrMemberAccess	info -> fprintf_func		6682266	1					
ANR	6684079	Identifier	info		6682266	0					
ANR	6684080	Identifier	fprintf_func		6682266	1					
ANR	6684081	ArgumentList	info -> stream		6682266	1					
ANR	6684082	Argument	info -> stream		6682266	0					
ANR	6684083	PtrMemberAccess	info -> stream		6682266	0					
ANR	6684084	Identifier	info		6682266	0					
ANR	6684085	Identifier	stream		6682266	1					
ANR	6684086	Argument	"""%s"""		6682266	1					
ANR	6684087	PrimaryExpression	"""%s"""		6682266	0					
ANR	6684088	Argument	regname		6682266	2					
ANR	6684089	Identifier	regname		6682266	0					
ANR	6684090	BreakStatement	break ;	681:3:8797:8802	6682266	5	True				
ANR	6684091	Label	case 2 :	685:1:8808:8814	6682266	6	True				
ANR	6684092	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s@"" , regname )"	687:3:8820:8872	6682266	7	True				
ANR	6684093	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s@"" , regname )"		6682266	0					
ANR	6684094	Callee	* info -> fprintf_func		6682266	0					
ANR	6684095	UnaryOperationExpression	* info -> fprintf_func		6682266	0					
ANR	6684096	UnaryOperator	*		6682266	0					
ANR	6684097	PtrMemberAccess	info -> fprintf_func		6682266	1					
ANR	6684098	Identifier	info		6682266	0					
ANR	6684099	Identifier	fprintf_func		6682266	1					
ANR	6684100	ArgumentList	info -> stream		6682266	1					
ANR	6684101	Argument	info -> stream		6682266	0					
ANR	6684102	PtrMemberAccess	info -> stream		6682266	0					
ANR	6684103	Identifier	info		6682266	0					
ANR	6684104	Identifier	stream		6682266	1					
ANR	6684105	Argument	"""%s@"""		6682266	1					
ANR	6684106	PrimaryExpression	"""%s@"""		6682266	0					
ANR	6684107	Argument	regname		6682266	2					
ANR	6684108	Identifier	regname		6682266	0					
ANR	6684109	BreakStatement	break ;	689:3:8878:8883	6682266	8	True				
ANR	6684110	Label	case 3 :	693:1:8889:8895	6682266	9	True				
ANR	6684111	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s@+"" , regname )"	695:3:8901:8954	6682266	10	True				
ANR	6684112	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s@+"" , regname )"		6682266	0					
ANR	6684113	Callee	* info -> fprintf_func		6682266	0					
ANR	6684114	UnaryOperationExpression	* info -> fprintf_func		6682266	0					
ANR	6684115	UnaryOperator	*		6682266	0					
ANR	6684116	PtrMemberAccess	info -> fprintf_func		6682266	1					
ANR	6684117	Identifier	info		6682266	0					
ANR	6684118	Identifier	fprintf_func		6682266	1					
ANR	6684119	ArgumentList	info -> stream		6682266	1					
ANR	6684120	Argument	info -> stream		6682266	0					
ANR	6684121	PtrMemberAccess	info -> stream		6682266	0					
ANR	6684122	Identifier	info		6682266	0					
ANR	6684123	Identifier	stream		6682266	1					
ANR	6684124	Argument	"""%s@+"""		6682266	1					
ANR	6684125	PrimaryExpression	"""%s@+"""		6682266	0					
ANR	6684126	Argument	regname		6682266	2					
ANR	6684127	Identifier	regname		6682266	0					
ANR	6684128	BreakStatement	break ;	697:3:8960:8965	6682266	11	True				
ANR	6684129	Label	case 4 :	701:1:8971:8977	6682266	12	True				
ANR	6684130	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s@-"" , regname )"	703:3:8983:9036	6682266	13	True				
ANR	6684131	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s@-"" , regname )"		6682266	0					
ANR	6684132	Callee	* info -> fprintf_func		6682266	0					
ANR	6684133	UnaryOperationExpression	* info -> fprintf_func		6682266	0					
ANR	6684134	UnaryOperator	*		6682266	0					
ANR	6684135	PtrMemberAccess	info -> fprintf_func		6682266	1					
ANR	6684136	Identifier	info		6682266	0					
ANR	6684137	Identifier	fprintf_func		6682266	1					
ANR	6684138	ArgumentList	info -> stream		6682266	1					
ANR	6684139	Argument	info -> stream		6682266	0					
ANR	6684140	PtrMemberAccess	info -> stream		6682266	0					
ANR	6684141	Identifier	info		6682266	0					
ANR	6684142	Identifier	stream		6682266	1					
ANR	6684143	Argument	"""%s@-"""		6682266	1					
ANR	6684144	PrimaryExpression	"""%s@-"""		6682266	0					
ANR	6684145	Argument	regname		6682266	2					
ANR	6684146	Identifier	regname		6682266	0					
ANR	6684147	BreakStatement	break ;	705:3:9042:9047	6682266	14	True				
ANR	6684148	Label	case 5 :	709:1:9053:9059	6682266	15	True				
ANR	6684149	ExpressionStatement	val = NEXTWORD ( p )	711:3:9065:9083	6682266	16	True				
ANR	6684150	AssignmentExpression	val = NEXTWORD ( p )		6682266	0		=			
ANR	6684151	Identifier	val		6682266	0					
ANR	6684152	CallExpression	NEXTWORD ( p )		6682266	1					
ANR	6684153	Callee	NEXTWORD		6682266	0					
ANR	6684154	Identifier	NEXTWORD		6682266	0					
ANR	6684155	ArgumentList	p		6682266	1					
ANR	6684156	Argument	p		6682266	0					
ANR	6684157	Identifier	p		6682266	0					
ANR	6684158	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s@(%d)"" , regname , val )"	713:3:9089:9150	6682266	17	True				
ANR	6684159	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s@(%d)"" , regname , val )"		6682266	0					
ANR	6684160	Callee	* info -> fprintf_func		6682266	0					
ANR	6684161	UnaryOperationExpression	* info -> fprintf_func		6682266	0					
ANR	6684162	UnaryOperator	*		6682266	0					
ANR	6684163	PtrMemberAccess	info -> fprintf_func		6682266	1					
ANR	6684164	Identifier	info		6682266	0					
ANR	6684165	Identifier	fprintf_func		6682266	1					
ANR	6684166	ArgumentList	info -> stream		6682266	1					
ANR	6684167	Argument	info -> stream		6682266	0					
ANR	6684168	PtrMemberAccess	info -> stream		6682266	0					
ANR	6684169	Identifier	info		6682266	0					
ANR	6684170	Identifier	stream		6682266	1					
ANR	6684171	Argument	"""%s@(%d)"""		6682266	1					
ANR	6684172	PrimaryExpression	"""%s@(%d)"""		6682266	0					
ANR	6684173	Argument	regname		6682266	2					
ANR	6684174	Identifier	regname		6682266	0					
ANR	6684175	Argument	val		6682266	3					
ANR	6684176	Identifier	val		6682266	0					
ANR	6684177	BreakStatement	break ;	715:3:9156:9161	6682266	18	True				
ANR	6684178	Label	case 6 :	719:1:9167:9173	6682266	19	True				
ANR	6684179	ExpressionStatement	"p = print_indexed ( regno , p , addr , info )"	721:3:9179:9219	6682266	20	True				
ANR	6684180	AssignmentExpression	"p = print_indexed ( regno , p , addr , info )"		6682266	0		=			
ANR	6684181	Identifier	p		6682266	0					
ANR	6684182	CallExpression	"print_indexed ( regno , p , addr , info )"		6682266	1					
ANR	6684183	Callee	print_indexed		6682266	0					
ANR	6684184	Identifier	print_indexed		6682266	0					
ANR	6684185	ArgumentList	regno		6682266	1					
ANR	6684186	Argument	regno		6682266	0					
ANR	6684187	Identifier	regno		6682266	0					
ANR	6684188	Argument	p		6682266	1					
ANR	6684189	Identifier	p		6682266	0					
ANR	6684190	Argument	addr		6682266	2					
ANR	6684191	Identifier	addr		6682266	0					
ANR	6684192	Argument	info		6682266	3					
ANR	6684193	Identifier	info		6682266	0					
ANR	6684194	BreakStatement	break ;	723:3:9225:9230	6682266	21	True				
ANR	6684195	Label	case 7 :	727:1:9236:9242	6682266	22	True				
ANR	6684196	SwitchStatement	switch ( val & 7 )		6682266	23					
ANR	6684197	Condition	val & 7	729:11:9256:9262	6682266	0	True				
ANR	6684198	BitAndExpression	val & 7		6682266	0		&			
ANR	6684199	Identifier	val		6682266	0					
ANR	6684200	PrimaryExpression	7		6682266	1					
ANR	6684201	CompoundStatement		721:5:9146:9146	6682266	1					
ANR	6684202	Label	case 0 :	733:5:9279:9285	6682266	0	True				
ANR	6684203	ExpressionStatement	val = NEXTWORD ( p )	735:7:9295:9313	6682266	1	True				
ANR	6684204	AssignmentExpression	val = NEXTWORD ( p )		6682266	0		=			
ANR	6684205	Identifier	val		6682266	0					
ANR	6684206	CallExpression	NEXTWORD ( p )		6682266	1					
ANR	6684207	Callee	NEXTWORD		6682266	0					
ANR	6684208	Identifier	NEXTWORD		6682266	0					
ANR	6684209	ArgumentList	p		6682266	1					
ANR	6684210	Argument	p		6682266	0					
ANR	6684211	Identifier	p		6682266	0					
ANR	6684212	ExpressionStatement	"( * info -> print_address_func ) ( val , info )"	737:7:9323:9362	6682266	2	True				
ANR	6684213	CallExpression	"( * info -> print_address_func ) ( val , info )"		6682266	0					
ANR	6684214	Callee	* info -> print_address_func		6682266	0					
ANR	6684215	UnaryOperationExpression	* info -> print_address_func		6682266	0					
ANR	6684216	UnaryOperator	*		6682266	0					
ANR	6684217	PtrMemberAccess	info -> print_address_func		6682266	1					
ANR	6684218	Identifier	info		6682266	0					
ANR	6684219	Identifier	print_address_func		6682266	1					
ANR	6684220	ArgumentList	val		6682266	1					
ANR	6684221	Argument	val		6682266	0					
ANR	6684222	Identifier	val		6682266	0					
ANR	6684223	Argument	info		6682266	1					
ANR	6684224	Identifier	info		6682266	0					
ANR	6684225	BreakStatement	break ;	739:7:9372:9377	6682266	3	True				
ANR	6684226	Label	case 1 :	743:5:9387:9393	6682266	4	True				
ANR	6684227	ExpressionStatement	uval = NEXTULONG ( p )	745:7:9403:9423	6682266	5	True				
ANR	6684228	AssignmentExpression	uval = NEXTULONG ( p )		6682266	0		=			
ANR	6684229	Identifier	uval		6682266	0					
ANR	6684230	CallExpression	NEXTULONG ( p )		6682266	1					
ANR	6684231	Callee	NEXTULONG		6682266	0					
ANR	6684232	Identifier	NEXTULONG		6682266	0					
ANR	6684233	ArgumentList	p		6682266	1					
ANR	6684234	Argument	p		6682266	0					
ANR	6684235	Identifier	p		6682266	0					
ANR	6684236	ExpressionStatement	"( * info -> print_address_func ) ( uval , info )"	747:7:9433:9473	6682266	6	True				
ANR	6684237	CallExpression	"( * info -> print_address_func ) ( uval , info )"		6682266	0					
ANR	6684238	Callee	* info -> print_address_func		6682266	0					
ANR	6684239	UnaryOperationExpression	* info -> print_address_func		6682266	0					
ANR	6684240	UnaryOperator	*		6682266	0					
ANR	6684241	PtrMemberAccess	info -> print_address_func		6682266	1					
ANR	6684242	Identifier	info		6682266	0					
ANR	6684243	Identifier	print_address_func		6682266	1					
ANR	6684244	ArgumentList	uval		6682266	1					
ANR	6684245	Argument	uval		6682266	0					
ANR	6684246	Identifier	uval		6682266	0					
ANR	6684247	Argument	info		6682266	1					
ANR	6684248	Identifier	info		6682266	0					
ANR	6684249	BreakStatement	break ;	749:7:9483:9488	6682266	7	True				
ANR	6684250	Label	case 2 :	753:5:9498:9504	6682266	8	True				
ANR	6684251	ExpressionStatement	val = NEXTWORD ( p )	755:7:9514:9532	6682266	9	True				
ANR	6684252	AssignmentExpression	val = NEXTWORD ( p )		6682266	0		=			
ANR	6684253	Identifier	val		6682266	0					
ANR	6684254	CallExpression	NEXTWORD ( p )		6682266	1					
ANR	6684255	Callee	NEXTWORD		6682266	0					
ANR	6684256	Identifier	NEXTWORD		6682266	0					
ANR	6684257	ArgumentList	p		6682266	1					
ANR	6684258	Argument	p		6682266	0					
ANR	6684259	Identifier	p		6682266	0					
ANR	6684260	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%%pc@("" )"	757:7:9542:9588	6682266	10	True				
ANR	6684261	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%%pc@("" )"		6682266	0					
ANR	6684262	Callee	* info -> fprintf_func		6682266	0					
ANR	6684263	UnaryOperationExpression	* info -> fprintf_func		6682266	0					
ANR	6684264	UnaryOperator	*		6682266	0					
ANR	6684265	PtrMemberAccess	info -> fprintf_func		6682266	1					
ANR	6684266	Identifier	info		6682266	0					
ANR	6684267	Identifier	fprintf_func		6682266	1					
ANR	6684268	ArgumentList	info -> stream		6682266	1					
ANR	6684269	Argument	info -> stream		6682266	0					
ANR	6684270	PtrMemberAccess	info -> stream		6682266	0					
ANR	6684271	Identifier	info		6682266	0					
ANR	6684272	Identifier	stream		6682266	1					
ANR	6684273	Argument	"""%%pc@("""		6682266	1					
ANR	6684274	PrimaryExpression	"""%%pc@("""		6682266	0					
ANR	6684275	ExpressionStatement	"( * info -> print_address_func ) ( addr + val , info )"	759:7:9598:9644	6682266	11	True				
ANR	6684276	CallExpression	"( * info -> print_address_func ) ( addr + val , info )"		6682266	0					
ANR	6684277	Callee	* info -> print_address_func		6682266	0					
ANR	6684278	UnaryOperationExpression	* info -> print_address_func		6682266	0					
ANR	6684279	UnaryOperator	*		6682266	0					
ANR	6684280	PtrMemberAccess	info -> print_address_func		6682266	1					
ANR	6684281	Identifier	info		6682266	0					
ANR	6684282	Identifier	print_address_func		6682266	1					
ANR	6684283	ArgumentList	addr + val		6682266	1					
ANR	6684284	Argument	addr + val		6682266	0					
ANR	6684285	AdditiveExpression	addr + val		6682266	0		+			
ANR	6684286	Identifier	addr		6682266	0					
ANR	6684287	Identifier	val		6682266	1					
ANR	6684288	Argument	info		6682266	1					
ANR	6684289	Identifier	info		6682266	0					
ANR	6684290	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , "")"" )"	761:7:9654:9695	6682266	12	True				
ANR	6684291	CallExpression	"( * info -> fprintf_func ) ( info -> stream , "")"" )"		6682266	0					
ANR	6684292	Callee	* info -> fprintf_func		6682266	0					
ANR	6684293	UnaryOperationExpression	* info -> fprintf_func		6682266	0					
ANR	6684294	UnaryOperator	*		6682266	0					
ANR	6684295	PtrMemberAccess	info -> fprintf_func		6682266	1					
ANR	6684296	Identifier	info		6682266	0					
ANR	6684297	Identifier	fprintf_func		6682266	1					
ANR	6684298	ArgumentList	info -> stream		6682266	1					
ANR	6684299	Argument	info -> stream		6682266	0					
ANR	6684300	PtrMemberAccess	info -> stream		6682266	0					
ANR	6684301	Identifier	info		6682266	0					
ANR	6684302	Identifier	stream		6682266	1					
ANR	6684303	Argument	""")"""		6682266	1					
ANR	6684304	PrimaryExpression	""")"""		6682266	0					
ANR	6684305	BreakStatement	break ;	763:7:9705:9710	6682266	13	True				
ANR	6684306	Label	case 3 :	767:5:9720:9726	6682266	14	True				
ANR	6684307	ExpressionStatement	"p = print_indexed ( - 1 , p , addr , info )"	769:7:9736:9773	6682266	15	True				
ANR	6684308	AssignmentExpression	"p = print_indexed ( - 1 , p , addr , info )"		6682266	0		=			
ANR	6684309	Identifier	p		6682266	0					
ANR	6684310	CallExpression	"print_indexed ( - 1 , p , addr , info )"		6682266	1					
ANR	6684311	Callee	print_indexed		6682266	0					
ANR	6684312	Identifier	print_indexed		6682266	0					
ANR	6684313	ArgumentList	- 1		6682266	1					
ANR	6684314	Argument	- 1		6682266	0					
ANR	6684315	UnaryOperationExpression	- 1		6682266	0					
ANR	6684316	UnaryOperator	-		6682266	0					
ANR	6684317	PrimaryExpression	1		6682266	1					
ANR	6684318	Argument	p		6682266	1					
ANR	6684319	Identifier	p		6682266	0					
ANR	6684320	Argument	addr		6682266	2					
ANR	6684321	Identifier	addr		6682266	0					
ANR	6684322	Argument	info		6682266	3					
ANR	6684323	Identifier	info		6682266	0					
ANR	6684324	BreakStatement	break ;	771:7:9783:9788	6682266	16	True				
ANR	6684325	Label	case 4 :	775:5:9798:9804	6682266	17	True				
ANR	6684326	ExpressionStatement	flt_p = 1	777:7:9814:9823	6682266	18	True				
ANR	6684327	AssignmentExpression	flt_p = 1		6682266	0		=			
ANR	6684328	Identifier	flt_p		6682266	0					
ANR	6684329	PrimaryExpression	1		6682266	1					
ANR	6684330	SwitchStatement	switch ( place )		6682266	19					
ANR	6684331	Condition	place	779:15:9870:9874	6682266	0	True				
ANR	6684332	Identifier	place		6682266	0					
ANR	6684333	CompoundStatement		771:7:9760:9760	6682266	1					
ANR	6684334	Label	case 'b' :	783:2:9890:9898	6682266	0	True				
ANR	6684335	ExpressionStatement	val = NEXTBYTE ( p )	785:4:9905:9923	6682266	1	True				
ANR	6684336	AssignmentExpression	val = NEXTBYTE ( p )		6682266	0		=			
ANR	6684337	Identifier	val		6682266	0					
ANR	6684338	CallExpression	NEXTBYTE ( p )		6682266	1					
ANR	6684339	Callee	NEXTBYTE		6682266	0					
ANR	6684340	Identifier	NEXTBYTE		6682266	0					
ANR	6684341	ArgumentList	p		6682266	1					
ANR	6684342	Argument	p		6682266	0					
ANR	6684343	Identifier	p		6682266	0					
ANR	6684344	ExpressionStatement	flt_p = 0	787:4:9930:9939	6682266	2	True				
ANR	6684345	AssignmentExpression	flt_p = 0		6682266	0		=			
ANR	6684346	Identifier	flt_p		6682266	0					
ANR	6684347	PrimaryExpression	0		6682266	1					
ANR	6684348	BreakStatement	break ;	789:4:9946:9951	6682266	3	True				
ANR	6684349	Label	case 'w' :	793:2:9958:9966	6682266	4	True				
ANR	6684350	ExpressionStatement	val = NEXTWORD ( p )	795:4:9973:9991	6682266	5	True				
ANR	6684351	AssignmentExpression	val = NEXTWORD ( p )		6682266	0		=			
ANR	6684352	Identifier	val		6682266	0					
ANR	6684353	CallExpression	NEXTWORD ( p )		6682266	1					
ANR	6684354	Callee	NEXTWORD		6682266	0					
ANR	6684355	Identifier	NEXTWORD		6682266	0					
ANR	6684356	ArgumentList	p		6682266	1					
ANR	6684357	Argument	p		6682266	0					
ANR	6684358	Identifier	p		6682266	0					
ANR	6684359	ExpressionStatement	flt_p = 0	797:4:9998:10007	6682266	6	True				
ANR	6684360	AssignmentExpression	flt_p = 0		6682266	0		=			
ANR	6684361	Identifier	flt_p		6682266	0					
ANR	6684362	PrimaryExpression	0		6682266	1					
ANR	6684363	BreakStatement	break ;	799:4:10014:10019	6682266	7	True				
ANR	6684364	Label	case 'l' :	803:2:10026:10034	6682266	8	True				
ANR	6684365	ExpressionStatement	val = NEXTLONG ( p )	805:4:10041:10059	6682266	9	True				
ANR	6684366	AssignmentExpression	val = NEXTLONG ( p )		6682266	0		=			
ANR	6684367	Identifier	val		6682266	0					
ANR	6684368	CallExpression	NEXTLONG ( p )		6682266	1					
ANR	6684369	Callee	NEXTLONG		6682266	0					
ANR	6684370	Identifier	NEXTLONG		6682266	0					
ANR	6684371	ArgumentList	p		6682266	1					
ANR	6684372	Argument	p		6682266	0					
ANR	6684373	Identifier	p		6682266	0					
ANR	6684374	ExpressionStatement	flt_p = 0	807:4:10066:10075	6682266	10	True				
ANR	6684375	AssignmentExpression	flt_p = 0		6682266	0		=			
ANR	6684376	Identifier	flt_p		6682266	0					
ANR	6684377	PrimaryExpression	0		6682266	1					
ANR	6684378	BreakStatement	break ;	809:4:10082:10087	6682266	11	True				
ANR	6684379	Label	case 'f' :	813:2:10094:10102	6682266	12	True				
ANR	6684380	ExpressionStatement	"NEXTSINGLE ( flval , p )"	815:4:10109:10130	6682266	13	True				
ANR	6684381	CallExpression	"NEXTSINGLE ( flval , p )"		6682266	0					
ANR	6684382	Callee	NEXTSINGLE		6682266	0					
ANR	6684383	Identifier	NEXTSINGLE		6682266	0					
ANR	6684384	ArgumentList	flval		6682266	1					
ANR	6684385	Argument	flval		6682266	0					
ANR	6684386	Identifier	flval		6682266	0					
ANR	6684387	Argument	p		6682266	1					
ANR	6684388	Identifier	p		6682266	0					
ANR	6684389	BreakStatement	break ;	817:4:10137:10142	6682266	14	True				
ANR	6684390	Label	case 'F' :	821:2:10149:10157	6682266	15	True				
ANR	6684391	ExpressionStatement	"NEXTDOUBLE ( flval , p )"	823:4:10164:10185	6682266	16	True				
ANR	6684392	CallExpression	"NEXTDOUBLE ( flval , p )"		6682266	0					
ANR	6684393	Callee	NEXTDOUBLE		6682266	0					
ANR	6684394	Identifier	NEXTDOUBLE		6682266	0					
ANR	6684395	ArgumentList	flval		6682266	1					
ANR	6684396	Argument	flval		6682266	0					
ANR	6684397	Identifier	flval		6682266	0					
ANR	6684398	Argument	p		6682266	1					
ANR	6684399	Identifier	p		6682266	0					
ANR	6684400	BreakStatement	break ;	825:4:10192:10197	6682266	17	True				
ANR	6684401	Label	case 'x' :	829:2:10204:10212	6682266	18	True				
ANR	6684402	ExpressionStatement	"NEXTEXTEND ( flval , p )"	831:4:10219:10240	6682266	19	True				
ANR	6684403	CallExpression	"NEXTEXTEND ( flval , p )"		6682266	0					
ANR	6684404	Callee	NEXTEXTEND		6682266	0					
ANR	6684405	Identifier	NEXTEXTEND		6682266	0					
ANR	6684406	ArgumentList	flval		6682266	1					
ANR	6684407	Argument	flval		6682266	0					
ANR	6684408	Identifier	flval		6682266	0					
ANR	6684409	Argument	p		6682266	1					
ANR	6684410	Identifier	p		6682266	0					
ANR	6684411	BreakStatement	break ;	833:4:10247:10252	6682266	20	True				
ANR	6684412	Label	case 'p' :	837:2:10259:10267	6682266	21	True				
ANR	6684413	ExpressionStatement	flval = NEXTPACKED ( p )	839:4:10274:10296	6682266	22	True				
ANR	6684414	AssignmentExpression	flval = NEXTPACKED ( p )		6682266	0		=			
ANR	6684415	Identifier	flval		6682266	0					
ANR	6684416	CallExpression	NEXTPACKED ( p )		6682266	1					
ANR	6684417	Callee	NEXTPACKED		6682266	0					
ANR	6684418	Identifier	NEXTPACKED		6682266	0					
ANR	6684419	ArgumentList	p		6682266	1					
ANR	6684420	Argument	p		6682266	0					
ANR	6684421	Identifier	p		6682266	0					
ANR	6684422	BreakStatement	break ;	841:4:10303:10308	6682266	23	True				
ANR	6684423	Label	default :	845:2:10315:10322	6682266	24	True				
ANR	6684424	Identifier	default		6682266	0					
ANR	6684425	ReturnStatement	return - 1 ;	847:4:10329:10338	6682266	25	True				
ANR	6684426	UnaryOperationExpression	- 1		6682266	0					
ANR	6684427	UnaryOperator	-		6682266	0					
ANR	6684428	PrimaryExpression	1		6682266	1					
ANR	6684429	IfStatement	if ( flt_p )		6682266	20					
ANR	6684430	Condition	flt_p	851:11:10362:10366	6682266	0	True				
ANR	6684431	Identifier	flt_p		6682266	0					
ANR	6684432	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""#%g"" , flval )"	853:2:10393:10443	6682266	1	True				
ANR	6684433	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""#%g"" , flval )"		6682266	0					
ANR	6684434	Callee	* info -> fprintf_func		6682266	0					
ANR	6684435	UnaryOperationExpression	* info -> fprintf_func		6682266	0					
ANR	6684436	UnaryOperator	*		6682266	0					
ANR	6684437	PtrMemberAccess	info -> fprintf_func		6682266	1					
ANR	6684438	Identifier	info		6682266	0					
ANR	6684439	Identifier	fprintf_func		6682266	1					
ANR	6684440	ArgumentList	info -> stream		6682266	1					
ANR	6684441	Argument	info -> stream		6682266	0					
ANR	6684442	PtrMemberAccess	info -> stream		6682266	0					
ANR	6684443	Identifier	info		6682266	0					
ANR	6684444	Identifier	stream		6682266	1					
ANR	6684445	Argument	"""#%g"""		6682266	1					
ANR	6684446	PrimaryExpression	"""#%g"""		6682266	0					
ANR	6684447	Argument	flval		6682266	2					
ANR	6684448	Identifier	flval		6682266	0					
ANR	6684449	ElseStatement	else		6682266	0					
ANR	6684450	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""#%d"" , val )"	857:2:10461:10509	6682266	0	True				
ANR	6684451	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""#%d"" , val )"		6682266	0					
ANR	6684452	Callee	* info -> fprintf_func		6682266	0					
ANR	6684453	UnaryOperationExpression	* info -> fprintf_func		6682266	0					
ANR	6684454	UnaryOperator	*		6682266	0					
ANR	6684455	PtrMemberAccess	info -> fprintf_func		6682266	1					
ANR	6684456	Identifier	info		6682266	0					
ANR	6684457	Identifier	fprintf_func		6682266	1					
ANR	6684458	ArgumentList	info -> stream		6682266	1					
ANR	6684459	Argument	info -> stream		6682266	0					
ANR	6684460	PtrMemberAccess	info -> stream		6682266	0					
ANR	6684461	Identifier	info		6682266	0					
ANR	6684462	Identifier	stream		6682266	1					
ANR	6684463	Argument	"""#%d"""		6682266	1					
ANR	6684464	PrimaryExpression	"""#%d"""		6682266	0					
ANR	6684465	Argument	val		6682266	2					
ANR	6684466	Identifier	val		6682266	0					
ANR	6684467	BreakStatement	break ;	859:7:10519:10524	6682266	21	True				
ANR	6684468	Label	default :	863:5:10534:10541	6682266	22	True				
ANR	6684469	Identifier	default		6682266	0					
ANR	6684470	ReturnStatement	return - 1 ;	865:7:10551:10560	6682266	23	True				
ANR	6684471	UnaryOperationExpression	- 1		6682266	0					
ANR	6684472	UnaryOperator	-		6682266	0					
ANR	6684473	PrimaryExpression	1		6682266	1					
ANR	6684474	IfStatement	if ( place == '/' )		6682266	135					
ANR	6684475	Condition	place == '/'	879:10:10769:10780	6682266	0	True				
ANR	6684476	EqualityExpression	place == '/'		6682266	0		==			
ANR	6684477	Identifier	place		6682266	0					
ANR	6684478	PrimaryExpression	'/'		6682266	1					
ANR	6684479	CompoundStatement		871:1:10660:10660	6682266	1					
ANR	6684480	ExpressionStatement	"val = fetch_arg ( buffer , place , 1 , info )"	883:3:10791:10831	6682266	0	True				
ANR	6684481	AssignmentExpression	"val = fetch_arg ( buffer , place , 1 , info )"		6682266	0		=			
ANR	6684482	Identifier	val		6682266	0					
ANR	6684483	CallExpression	"fetch_arg ( buffer , place , 1 , info )"		6682266	1					
ANR	6684484	Callee	fetch_arg		6682266	0					
ANR	6684485	Identifier	fetch_arg		6682266	0					
ANR	6684486	ArgumentList	buffer		6682266	1					
ANR	6684487	Argument	buffer		6682266	0					
ANR	6684488	Identifier	buffer		6682266	0					
ANR	6684489	Argument	place		6682266	1					
ANR	6684490	Identifier	place		6682266	0					
ANR	6684491	Argument	1		6682266	2					
ANR	6684492	PrimaryExpression	1		6682266	0					
ANR	6684493	Argument	info		6682266	3					
ANR	6684494	Identifier	info		6682266	0					
ANR	6684495	IfStatement	if ( val )		6682266	1					
ANR	6684496	Condition	val	885:7:10841:10843	6682266	0	True				
ANR	6684497	Identifier	val		6682266	0					
ANR	6684498	ExpressionStatement	"info -> fprintf_func ( info -> stream , ""&"" )"	887:5:10852:10890	6682266	1	True				
ANR	6684499	CallExpression	"info -> fprintf_func ( info -> stream , ""&"" )"		6682266	0					
ANR	6684500	Callee	info -> fprintf_func		6682266	0					
ANR	6684501	PtrMemberAccess	info -> fprintf_func		6682266	0					
ANR	6684502	Identifier	info		6682266	0					
ANR	6684503	Identifier	fprintf_func		6682266	1					
ANR	6684504	ArgumentList	info -> stream		6682266	1					
ANR	6684505	Argument	info -> stream		6682266	0					
ANR	6684506	PtrMemberAccess	info -> stream		6682266	0					
ANR	6684507	Identifier	info		6682266	0					
ANR	6684508	Identifier	stream		6682266	1					
ANR	6684509	Argument	"""&"""		6682266	1					
ANR	6684510	PrimaryExpression	"""&"""		6682266	0					
ANR	6684511	BreakStatement	break ;	891:6:10903:10908	6682266	136	True				
ANR	6684512	Label	case 'L' :	895:4:10917:10925	6682266	137	True				
ANR	6684513	Label	case 'l' :	897:4:10932:10940	6682266	138	True				
ANR	6684514	IfStatement	if ( place == 'w' )		6682266	139					
ANR	6684515	Condition	place == 'w'	899:5:10948:10959	6682266	0	True				
ANR	6684516	EqualityExpression	place == 'w'		6682266	0		==			
ANR	6684517	Identifier	place		6682266	0					
ANR	6684518	PrimaryExpression	'w'		6682266	1					
ANR	6684519	CompoundStatement		893:5:10849:10861	6682266	1					
ANR	6684520	IdentifierDeclStatement	char doneany ;	903:5:10974:10986	6682266	0	True				
ANR	6684521	IdentifierDecl	doneany		6682266	0					
ANR	6684522	IdentifierDeclType	char		6682266	0					
ANR	6684523	Identifier	doneany		6682266	1					
ANR	6684524	ExpressionStatement	p1 = buffer + 2	905:5:10994:11009	6682266	1	True				
ANR	6684525	AssignmentExpression	p1 = buffer + 2		6682266	0		=			
ANR	6684526	Identifier	p1		6682266	0					
ANR	6684527	AdditiveExpression	buffer + 2		6682266	1		+			
ANR	6684528	Identifier	buffer		6682266	0					
ANR	6684529	PrimaryExpression	2		6682266	1					
ANR	6684530	ExpressionStatement	val = NEXTWORD ( p1 )	907:5:11017:11036	6682266	2	True				
ANR	6684531	AssignmentExpression	val = NEXTWORD ( p1 )		6682266	0		=			
ANR	6684532	Identifier	val		6682266	0					
ANR	6684533	CallExpression	NEXTWORD ( p1 )		6682266	1					
ANR	6684534	Callee	NEXTWORD		6682266	0					
ANR	6684535	Identifier	NEXTWORD		6682266	0					
ANR	6684536	ArgumentList	p1		6682266	1					
ANR	6684537	Argument	p1		6682266	0					
ANR	6684538	Identifier	p1		6682266	0					
ANR	6684539	ExpressionStatement	p = p1 > p ? p1 : p	913:5:11135:11154	6682266	3	True				
ANR	6684540	AssignmentExpression	p = p1 > p ? p1 : p		6682266	0		=			
ANR	6684541	Identifier	p		6682266	0					
ANR	6684542	ConditionalExpression	p1 > p ? p1 : p		6682266	1					
ANR	6684543	Condition	p1 > p		6682266	0					
ANR	6684544	RelationalExpression	p1 > p		6682266	0		>			
ANR	6684545	Identifier	p1		6682266	0					
ANR	6684546	Identifier	p		6682266	1					
ANR	6684547	Identifier	p1		6682266	1					
ANR	6684548	Identifier	p		6682266	2					
ANR	6684549	IfStatement	if ( val == 0 )		6682266	4					
ANR	6684550	Condition	val == 0	915:9:11166:11173	6682266	0	True				
ANR	6684551	EqualityExpression	val == 0		6682266	0		==			
ANR	6684552	Identifier	val		6682266	0					
ANR	6684553	PrimaryExpression	0		6682266	1					
ANR	6684554	CompoundStatement		907:7:11059:11059	6682266	1					
ANR	6684555	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""#0"" )"	919:2:11189:11231	6682266	0	True				
ANR	6684556	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""#0"" )"		6682266	0					
ANR	6684557	Callee	* info -> fprintf_func		6682266	0					
ANR	6684558	UnaryOperationExpression	* info -> fprintf_func		6682266	0					
ANR	6684559	UnaryOperator	*		6682266	0					
ANR	6684560	PtrMemberAccess	info -> fprintf_func		6682266	1					
ANR	6684561	Identifier	info		6682266	0					
ANR	6684562	Identifier	fprintf_func		6682266	1					
ANR	6684563	ArgumentList	info -> stream		6682266	1					
ANR	6684564	Argument	info -> stream		6682266	0					
ANR	6684565	PtrMemberAccess	info -> stream		6682266	0					
ANR	6684566	Identifier	info		6682266	0					
ANR	6684567	Identifier	stream		6682266	1					
ANR	6684568	Argument	"""#0"""		6682266	1					
ANR	6684569	PrimaryExpression	"""#0"""		6682266	0					
ANR	6684570	BreakStatement	break ;	921:2:11236:11241	6682266	1	True				
ANR	6684571	IfStatement	if ( * d == 'l' )		6682266	5					
ANR	6684572	Condition	* d == 'l'	925:9:11263:11271	6682266	0	True				
ANR	6684573	EqualityExpression	* d == 'l'		6682266	0		==			
ANR	6684574	UnaryOperationExpression	* d		6682266	0					
ANR	6684575	UnaryOperator	*		6682266	0					
ANR	6684576	Identifier	d		6682266	1					
ANR	6684577	PrimaryExpression	'l'		6682266	1					
ANR	6684578	CompoundStatement		919:2:11162:11176	6682266	1					
ANR	6684579	IdentifierDeclStatement	int newval = 0 ;	929:2:11287:11301	6682266	0	True				
ANR	6684580	IdentifierDecl	newval = 0		6682266	0					
ANR	6684581	IdentifierDeclType	int		6682266	0					
ANR	6684582	Identifier	newval		6682266	1					
ANR	6684583	AssignmentExpression	newval = 0		6682266	2		=			
ANR	6684584	Identifier	newval		6682266	0					
ANR	6684585	PrimaryExpression	0		6682266	1					
ANR	6684586	ForStatement	for ( regno = 0 ; regno < 16 ; ++ regno )		6682266	1					
ANR	6684587	ForInit	regno = 0 ;	933:7:11313:11322	6682266	0	True				
ANR	6684588	AssignmentExpression	regno = 0		6682266	0		=			
ANR	6684589	Identifier	regno		6682266	0					
ANR	6684590	PrimaryExpression	0		6682266	1					
ANR	6684591	Condition	regno < 16	933:18:11324:11333	6682266	1	True				
ANR	6684592	RelationalExpression	regno < 16		6682266	0		<			
ANR	6684593	Identifier	regno		6682266	0					
ANR	6684594	PrimaryExpression	16		6682266	1					
ANR	6684595	UnaryExpression	++ regno	933:30:11336:11342	6682266	2	True				
ANR	6684596	IncDec	++		6682266	0					
ANR	6684597	Identifier	regno		6682266	1					
ANR	6684598	IfStatement	if ( val & ( 0x8000 >> regno ) )		6682266	3					
ANR	6684599	Condition	val & ( 0x8000 >> regno )	935:8:11354:11376	6682266	0	True				
ANR	6684600	BitAndExpression	val & ( 0x8000 >> regno )		6682266	0		&			
ANR	6684601	Identifier	val		6682266	0					
ANR	6684602	ShiftExpression	0x8000 >> regno		6682266	1		>>			
ANR	6684603	PrimaryExpression	0x8000		6682266	0					
ANR	6684604	Identifier	regno		6682266	1					
ANR	6684605	ExpressionStatement	newval |= 1 << regno	937:6:11386:11406	6682266	1	True				
ANR	6684606	AssignmentExpression	newval |= 1 << regno		6682266	0		|=			
ANR	6684607	Identifier	newval		6682266	0					
ANR	6684608	ShiftExpression	1 << regno		6682266	1		<<			
ANR	6684609	PrimaryExpression	1		6682266	0					
ANR	6684610	Identifier	regno		6682266	1					
ANR	6684611	ExpressionStatement	val = newval	939:2:11411:11423	6682266	2	True				
ANR	6684612	AssignmentExpression	val = newval		6682266	0		=			
ANR	6684613	Identifier	val		6682266	0					
ANR	6684614	Identifier	newval		6682266	1					
ANR	6684615	ExpressionStatement	val &= 0xffff	943:5:11441:11454	6682266	6	True				
ANR	6684616	AssignmentExpression	val &= 0xffff		6682266	0		&=			
ANR	6684617	Identifier	val		6682266	0					
ANR	6684618	PrimaryExpression	0xffff		6682266	1					
ANR	6684619	ExpressionStatement	doneany = 0	945:5:11462:11473	6682266	7	True				
ANR	6684620	AssignmentExpression	doneany = 0		6682266	0		=			
ANR	6684621	Identifier	doneany		6682266	0					
ANR	6684622	PrimaryExpression	0		6682266	1					
ANR	6684623	ForStatement	for ( regno = 0 ; regno < 16 ; ++ regno )		6682266	8					
ANR	6684624	ForInit	regno = 0 ;	947:10:11486:11495	6682266	0	True				
ANR	6684625	AssignmentExpression	regno = 0		6682266	0		=			
ANR	6684626	Identifier	regno		6682266	0					
ANR	6684627	PrimaryExpression	0		6682266	1					
ANR	6684628	Condition	regno < 16	947:21:11497:11506	6682266	1	True				
ANR	6684629	RelationalExpression	regno < 16		6682266	0		<			
ANR	6684630	Identifier	regno		6682266	0					
ANR	6684631	PrimaryExpression	16		6682266	1					
ANR	6684632	UnaryExpression	++ regno	947:33:11509:11515	6682266	2	True				
ANR	6684633	IncDec	++		6682266	0					
ANR	6684634	Identifier	regno		6682266	1					
ANR	6684635	IfStatement	if ( val & ( 1 << regno ) )		6682266	3					
ANR	6684636	Condition	val & ( 1 << regno )	949:11:11530:11547	6682266	0	True				
ANR	6684637	BitAndExpression	val & ( 1 << regno )		6682266	0		&			
ANR	6684638	Identifier	val		6682266	0					
ANR	6684639	ShiftExpression	1 << regno		6682266	1		<<			
ANR	6684640	PrimaryExpression	1		6682266	0					
ANR	6684641	Identifier	regno		6682266	1					
ANR	6684642	CompoundStatement		943:4:11435:11450	6682266	1					
ANR	6684643	IdentifierDeclStatement	int first_regno ;	953:4:11560:11575	6682266	0	True				
ANR	6684644	IdentifierDecl	first_regno		6682266	0					
ANR	6684645	IdentifierDeclType	int		6682266	0					
ANR	6684646	Identifier	first_regno		6682266	1					
ANR	6684647	IfStatement	if ( doneany )		6682266	1					
ANR	6684648	Condition	doneany	957:8:11588:11594	6682266	0	True				
ANR	6684649	Identifier	doneany		6682266	0					
ANR	6684650	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""/"" )"	959:6:11604:11645	6682266	1	True				
ANR	6684651	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""/"" )"		6682266	0					
ANR	6684652	Callee	* info -> fprintf_func		6682266	0					
ANR	6684653	UnaryOperationExpression	* info -> fprintf_func		6682266	0					
ANR	6684654	UnaryOperator	*		6682266	0					
ANR	6684655	PtrMemberAccess	info -> fprintf_func		6682266	1					
ANR	6684656	Identifier	info		6682266	0					
ANR	6684657	Identifier	fprintf_func		6682266	1					
ANR	6684658	ArgumentList	info -> stream		6682266	1					
ANR	6684659	Argument	info -> stream		6682266	0					
ANR	6684660	PtrMemberAccess	info -> stream		6682266	0					
ANR	6684661	Identifier	info		6682266	0					
ANR	6684662	Identifier	stream		6682266	1					
ANR	6684663	Argument	"""/"""		6682266	1					
ANR	6684664	PrimaryExpression	"""/"""		6682266	0					
ANR	6684665	ExpressionStatement	doneany = 1	961:4:11652:11663	6682266	2	True				
ANR	6684666	AssignmentExpression	doneany = 1		6682266	0		=			
ANR	6684667	Identifier	doneany		6682266	0					
ANR	6684668	PrimaryExpression	1		6682266	1					
ANR	6684669	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , reg_names [ regno ] )"	963:4:11670:11730	6682266	3	True				
ANR	6684670	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , reg_names [ regno ] )"		6682266	0					
ANR	6684671	Callee	* info -> fprintf_func		6682266	0					
ANR	6684672	UnaryOperationExpression	* info -> fprintf_func		6682266	0					
ANR	6684673	UnaryOperator	*		6682266	0					
ANR	6684674	PtrMemberAccess	info -> fprintf_func		6682266	1					
ANR	6684675	Identifier	info		6682266	0					
ANR	6684676	Identifier	fprintf_func		6682266	1					
ANR	6684677	ArgumentList	info -> stream		6682266	1					
ANR	6684678	Argument	info -> stream		6682266	0					
ANR	6684679	PtrMemberAccess	info -> stream		6682266	0					
ANR	6684680	Identifier	info		6682266	0					
ANR	6684681	Identifier	stream		6682266	1					
ANR	6684682	Argument	"""%s"""		6682266	1					
ANR	6684683	PrimaryExpression	"""%s"""		6682266	0					
ANR	6684684	Argument	reg_names [ regno ]		6682266	2					
ANR	6684685	ArrayIndexing	reg_names [ regno ]		6682266	0					
ANR	6684686	Identifier	reg_names		6682266	0					
ANR	6684687	Identifier	regno		6682266	1					
ANR	6684688	ExpressionStatement	first_regno = regno	965:4:11737:11756	6682266	4	True				
ANR	6684689	AssignmentExpression	first_regno = regno		6682266	0		=			
ANR	6684690	Identifier	first_regno		6682266	0					
ANR	6684691	Identifier	regno		6682266	1					
ANR	6684692	WhileStatement	while ( val & ( 1 << ( regno + 1 ) ) )		6682266	5					
ANR	6684693	Condition	val & ( 1 << ( regno + 1 ) )	967:11:11770:11793	6682266	0	True				
ANR	6684694	BitAndExpression	val & ( 1 << ( regno + 1 ) )		6682266	0		&			
ANR	6684695	Identifier	val		6682266	0					
ANR	6684696	ShiftExpression	1 << ( regno + 1 )		6682266	1		<<			
ANR	6684697	PrimaryExpression	1		6682266	0					
ANR	6684698	AdditiveExpression	regno + 1		6682266	1		+			
ANR	6684699	Identifier	regno		6682266	0					
ANR	6684700	PrimaryExpression	1		6682266	1					
ANR	6684701	ExpressionStatement	++ regno	969:6:11803:11810	6682266	1	True				
ANR	6684702	UnaryExpression	++ regno		6682266	0					
ANR	6684703	IncDec	++		6682266	0					
ANR	6684704	Identifier	regno		6682266	1					
ANR	6684705	IfStatement	if ( regno > first_regno )		6682266	6					
ANR	6684706	Condition	regno > first_regno	971:8:11821:11839	6682266	0	True				
ANR	6684707	RelationalExpression	regno > first_regno		6682266	0		>			
ANR	6684708	Identifier	regno		6682266	0					
ANR	6684709	Identifier	first_regno		6682266	1					
ANR	6684710	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""-%s"" , reg_names [ regno ] )"	973:6:11849:11919	6682266	1	True				
ANR	6684711	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""-%s"" , reg_names [ regno ] )"		6682266	0					
ANR	6684712	Callee	* info -> fprintf_func		6682266	0					
ANR	6684713	UnaryOperationExpression	* info -> fprintf_func		6682266	0					
ANR	6684714	UnaryOperator	*		6682266	0					
ANR	6684715	PtrMemberAccess	info -> fprintf_func		6682266	1					
ANR	6684716	Identifier	info		6682266	0					
ANR	6684717	Identifier	fprintf_func		6682266	1					
ANR	6684718	ArgumentList	info -> stream		6682266	1					
ANR	6684719	Argument	info -> stream		6682266	0					
ANR	6684720	PtrMemberAccess	info -> stream		6682266	0					
ANR	6684721	Identifier	info		6682266	0					
ANR	6684722	Identifier	stream		6682266	1					
ANR	6684723	Argument	"""-%s"""		6682266	1					
ANR	6684724	PrimaryExpression	"""-%s"""		6682266	0					
ANR	6684725	Argument	reg_names [ regno ]		6682266	2					
ANR	6684726	ArrayIndexing	reg_names [ regno ]		6682266	0					
ANR	6684727	Identifier	reg_names		6682266	0					
ANR	6684728	Identifier	regno		6682266	1					
ANR	6684729	ElseStatement	else		6682266	0					
ANR	6684730	IfStatement	if ( place == '3' )		6682266	0					
ANR	6684731	Condition	place == '3'	981:10:11943:11954	6682266	0	True				
ANR	6684732	EqualityExpression	place == '3'		6682266	0		==			
ANR	6684733	Identifier	place		6682266	0					
ANR	6684734	PrimaryExpression	'3'		6682266	1					
ANR	6684735	CompoundStatement		977:5:11872:11884	6682266	1					
ANR	6684736	IdentifierDeclStatement	char doneany ;	987:5:11997:12009	6682266	0	True				
ANR	6684737	IdentifierDecl	doneany		6682266	0					
ANR	6684738	IdentifierDeclType	char		6682266	0					
ANR	6684739	Identifier	doneany		6682266	1					
ANR	6684740	ExpressionStatement	"val = fetch_arg ( buffer , place , 8 , info )"	989:5:12017:12057	6682266	1	True				
ANR	6684741	AssignmentExpression	"val = fetch_arg ( buffer , place , 8 , info )"		6682266	0		=			
ANR	6684742	Identifier	val		6682266	0					
ANR	6684743	CallExpression	"fetch_arg ( buffer , place , 8 , info )"		6682266	1					
ANR	6684744	Callee	fetch_arg		6682266	0					
ANR	6684745	Identifier	fetch_arg		6682266	0					
ANR	6684746	ArgumentList	buffer		6682266	1					
ANR	6684747	Argument	buffer		6682266	0					
ANR	6684748	Identifier	buffer		6682266	0					
ANR	6684749	Argument	place		6682266	1					
ANR	6684750	Identifier	place		6682266	0					
ANR	6684751	Argument	8		6682266	2					
ANR	6684752	PrimaryExpression	8		6682266	0					
ANR	6684753	Argument	info		6682266	3					
ANR	6684754	Identifier	info		6682266	0					
ANR	6684755	IfStatement	if ( val == 0 )		6682266	2					
ANR	6684756	Condition	val == 0	991:9:12069:12076	6682266	0	True				
ANR	6684757	EqualityExpression	val == 0		6682266	0		==			
ANR	6684758	Identifier	val		6682266	0					
ANR	6684759	PrimaryExpression	0		6682266	1					
ANR	6684760	CompoundStatement		983:7:11962:11962	6682266	1					
ANR	6684761	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""#0"" )"	995:2:12092:12134	6682266	0	True				
ANR	6684762	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""#0"" )"		6682266	0					
ANR	6684763	Callee	* info -> fprintf_func		6682266	0					
ANR	6684764	UnaryOperationExpression	* info -> fprintf_func		6682266	0					
ANR	6684765	UnaryOperator	*		6682266	0					
ANR	6684766	PtrMemberAccess	info -> fprintf_func		6682266	1					
ANR	6684767	Identifier	info		6682266	0					
ANR	6684768	Identifier	fprintf_func		6682266	1					
ANR	6684769	ArgumentList	info -> stream		6682266	1					
ANR	6684770	Argument	info -> stream		6682266	0					
ANR	6684771	PtrMemberAccess	info -> stream		6682266	0					
ANR	6684772	Identifier	info		6682266	0					
ANR	6684773	Identifier	stream		6682266	1					
ANR	6684774	Argument	"""#0"""		6682266	1					
ANR	6684775	PrimaryExpression	"""#0"""		6682266	0					
ANR	6684776	BreakStatement	break ;	997:2:12139:12144	6682266	1	True				
ANR	6684777	IfStatement	if ( * d == 'l' )		6682266	3					
ANR	6684778	Condition	* d == 'l'	1001:9:12166:12174	6682266	0	True				
ANR	6684779	EqualityExpression	* d == 'l'		6682266	0		==			
ANR	6684780	UnaryOperationExpression	* d		6682266	0					
ANR	6684781	UnaryOperator	*		6682266	0					
ANR	6684782	Identifier	d		6682266	1					
ANR	6684783	PrimaryExpression	'l'		6682266	1					
ANR	6684784	CompoundStatement		995:2:12065:12079	6682266	1					
ANR	6684785	IdentifierDeclStatement	int newval = 0 ;	1005:2:12190:12204	6682266	0	True				
ANR	6684786	IdentifierDecl	newval = 0		6682266	0					
ANR	6684787	IdentifierDeclType	int		6682266	0					
ANR	6684788	Identifier	newval		6682266	1					
ANR	6684789	AssignmentExpression	newval = 0		6682266	2		=			
ANR	6684790	Identifier	newval		6682266	0					
ANR	6684791	PrimaryExpression	0		6682266	1					
ANR	6684792	ForStatement	for ( regno = 0 ; regno < 8 ; ++ regno )		6682266	1					
ANR	6684793	ForInit	regno = 0 ;	1009:7:12216:12225	6682266	0	True				
ANR	6684794	AssignmentExpression	regno = 0		6682266	0		=			
ANR	6684795	Identifier	regno		6682266	0					
ANR	6684796	PrimaryExpression	0		6682266	1					
ANR	6684797	Condition	regno < 8	1009:18:12227:12235	6682266	1	True				
ANR	6684798	RelationalExpression	regno < 8		6682266	0		<			
ANR	6684799	Identifier	regno		6682266	0					
ANR	6684800	PrimaryExpression	8		6682266	1					
ANR	6684801	UnaryExpression	++ regno	1009:29:12238:12244	6682266	2	True				
ANR	6684802	IncDec	++		6682266	0					
ANR	6684803	Identifier	regno		6682266	1					
ANR	6684804	IfStatement	if ( val & ( 0x80 >> regno ) )		6682266	3					
ANR	6684805	Condition	val & ( 0x80 >> regno )	1011:8:12256:12276	6682266	0	True				
ANR	6684806	BitAndExpression	val & ( 0x80 >> regno )		6682266	0		&			
ANR	6684807	Identifier	val		6682266	0					
ANR	6684808	ShiftExpression	0x80 >> regno		6682266	1		>>			
ANR	6684809	PrimaryExpression	0x80		6682266	0					
ANR	6684810	Identifier	regno		6682266	1					
ANR	6684811	ExpressionStatement	newval |= 1 << regno	1013:6:12286:12306	6682266	1	True				
ANR	6684812	AssignmentExpression	newval |= 1 << regno		6682266	0		|=			
ANR	6684813	Identifier	newval		6682266	0					
ANR	6684814	ShiftExpression	1 << regno		6682266	1		<<			
ANR	6684815	PrimaryExpression	1		6682266	0					
ANR	6684816	Identifier	regno		6682266	1					
ANR	6684817	ExpressionStatement	val = newval	1015:2:12311:12323	6682266	2	True				
ANR	6684818	AssignmentExpression	val = newval		6682266	0		=			
ANR	6684819	Identifier	val		6682266	0					
ANR	6684820	Identifier	newval		6682266	1					
ANR	6684821	ExpressionStatement	val &= 0xff	1019:5:12341:12352	6682266	4	True				
ANR	6684822	AssignmentExpression	val &= 0xff		6682266	0		&=			
ANR	6684823	Identifier	val		6682266	0					
ANR	6684824	PrimaryExpression	0xff		6682266	1					
ANR	6684825	ExpressionStatement	doneany = 0	1021:5:12360:12371	6682266	5	True				
ANR	6684826	AssignmentExpression	doneany = 0		6682266	0		=			
ANR	6684827	Identifier	doneany		6682266	0					
ANR	6684828	PrimaryExpression	0		6682266	1					
ANR	6684829	ForStatement	for ( regno = 0 ; regno < 8 ; ++ regno )		6682266	6					
ANR	6684830	ForInit	regno = 0 ;	1023:10:12384:12393	6682266	0	True				
ANR	6684831	AssignmentExpression	regno = 0		6682266	0		=			
ANR	6684832	Identifier	regno		6682266	0					
ANR	6684833	PrimaryExpression	0		6682266	1					
ANR	6684834	Condition	regno < 8	1023:21:12395:12403	6682266	1	True				
ANR	6684835	RelationalExpression	regno < 8		6682266	0		<			
ANR	6684836	Identifier	regno		6682266	0					
ANR	6684837	PrimaryExpression	8		6682266	1					
ANR	6684838	UnaryExpression	++ regno	1023:32:12406:12412	6682266	2	True				
ANR	6684839	IncDec	++		6682266	0					
ANR	6684840	Identifier	regno		6682266	1					
ANR	6684841	IfStatement	if ( val & ( 1 << regno ) )		6682266	3					
ANR	6684842	Condition	val & ( 1 << regno )	1025:11:12427:12444	6682266	0	True				
ANR	6684843	BitAndExpression	val & ( 1 << regno )		6682266	0		&			
ANR	6684844	Identifier	val		6682266	0					
ANR	6684845	ShiftExpression	1 << regno		6682266	1		<<			
ANR	6684846	PrimaryExpression	1		6682266	0					
ANR	6684847	Identifier	regno		6682266	1					
ANR	6684848	CompoundStatement		1019:4:12332:12347	6682266	1					
ANR	6684849	IdentifierDeclStatement	int first_regno ;	1029:4:12457:12472	6682266	0	True				
ANR	6684850	IdentifierDecl	first_regno		6682266	0					
ANR	6684851	IdentifierDeclType	int		6682266	0					
ANR	6684852	Identifier	first_regno		6682266	1					
ANR	6684853	IfStatement	if ( doneany )		6682266	1					
ANR	6684854	Condition	doneany	1031:8:12483:12489	6682266	0	True				
ANR	6684855	Identifier	doneany		6682266	0					
ANR	6684856	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""/"" )"	1033:6:12499:12540	6682266	1	True				
ANR	6684857	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""/"" )"		6682266	0					
ANR	6684858	Callee	* info -> fprintf_func		6682266	0					
ANR	6684859	UnaryOperationExpression	* info -> fprintf_func		6682266	0					
ANR	6684860	UnaryOperator	*		6682266	0					
ANR	6684861	PtrMemberAccess	info -> fprintf_func		6682266	1					
ANR	6684862	Identifier	info		6682266	0					
ANR	6684863	Identifier	fprintf_func		6682266	1					
ANR	6684864	ArgumentList	info -> stream		6682266	1					
ANR	6684865	Argument	info -> stream		6682266	0					
ANR	6684866	PtrMemberAccess	info -> stream		6682266	0					
ANR	6684867	Identifier	info		6682266	0					
ANR	6684868	Identifier	stream		6682266	1					
ANR	6684869	Argument	"""/"""		6682266	1					
ANR	6684870	PrimaryExpression	"""/"""		6682266	0					
ANR	6684871	ExpressionStatement	doneany = 1	1035:4:12547:12558	6682266	2	True				
ANR	6684872	AssignmentExpression	doneany = 1		6682266	0		=			
ANR	6684873	Identifier	doneany		6682266	0					
ANR	6684874	PrimaryExpression	1		6682266	1					
ANR	6684875	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%%fp%d"" , regno )"	1037:4:12565:12618	6682266	3	True				
ANR	6684876	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%%fp%d"" , regno )"		6682266	0					
ANR	6684877	Callee	* info -> fprintf_func		6682266	0					
ANR	6684878	UnaryOperationExpression	* info -> fprintf_func		6682266	0					
ANR	6684879	UnaryOperator	*		6682266	0					
ANR	6684880	PtrMemberAccess	info -> fprintf_func		6682266	1					
ANR	6684881	Identifier	info		6682266	0					
ANR	6684882	Identifier	fprintf_func		6682266	1					
ANR	6684883	ArgumentList	info -> stream		6682266	1					
ANR	6684884	Argument	info -> stream		6682266	0					
ANR	6684885	PtrMemberAccess	info -> stream		6682266	0					
ANR	6684886	Identifier	info		6682266	0					
ANR	6684887	Identifier	stream		6682266	1					
ANR	6684888	Argument	"""%%fp%d"""		6682266	1					
ANR	6684889	PrimaryExpression	"""%%fp%d"""		6682266	0					
ANR	6684890	Argument	regno		6682266	2					
ANR	6684891	Identifier	regno		6682266	0					
ANR	6684892	ExpressionStatement	first_regno = regno	1039:4:12625:12644	6682266	4	True				
ANR	6684893	AssignmentExpression	first_regno = regno		6682266	0		=			
ANR	6684894	Identifier	first_regno		6682266	0					
ANR	6684895	Identifier	regno		6682266	1					
ANR	6684896	WhileStatement	while ( val & ( 1 << ( regno + 1 ) ) )		6682266	5					
ANR	6684897	Condition	val & ( 1 << ( regno + 1 ) )	1041:11:12658:12681	6682266	0	True				
ANR	6684898	BitAndExpression	val & ( 1 << ( regno + 1 ) )		6682266	0		&			
ANR	6684899	Identifier	val		6682266	0					
ANR	6684900	ShiftExpression	1 << ( regno + 1 )		6682266	1		<<			
ANR	6684901	PrimaryExpression	1		6682266	0					
ANR	6684902	AdditiveExpression	regno + 1		6682266	1		+			
ANR	6684903	Identifier	regno		6682266	0					
ANR	6684904	PrimaryExpression	1		6682266	1					
ANR	6684905	ExpressionStatement	++ regno	1043:6:12691:12698	6682266	1	True				
ANR	6684906	UnaryExpression	++ regno		6682266	0					
ANR	6684907	IncDec	++		6682266	0					
ANR	6684908	Identifier	regno		6682266	1					
ANR	6684909	IfStatement	if ( regno > first_regno )		6682266	6					
ANR	6684910	Condition	regno > first_regno	1045:8:12709:12727	6682266	0	True				
ANR	6684911	RelationalExpression	regno > first_regno		6682266	0		>			
ANR	6684912	Identifier	regno		6682266	0					
ANR	6684913	Identifier	first_regno		6682266	1					
ANR	6684914	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""-%%fp%d"" , regno )"	1047:6:12737:12791	6682266	1	True				
ANR	6684915	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""-%%fp%d"" , regno )"		6682266	0					
ANR	6684916	Callee	* info -> fprintf_func		6682266	0					
ANR	6684917	UnaryOperationExpression	* info -> fprintf_func		6682266	0					
ANR	6684918	UnaryOperator	*		6682266	0					
ANR	6684919	PtrMemberAccess	info -> fprintf_func		6682266	1					
ANR	6684920	Identifier	info		6682266	0					
ANR	6684921	Identifier	fprintf_func		6682266	1					
ANR	6684922	ArgumentList	info -> stream		6682266	1					
ANR	6684923	Argument	info -> stream		6682266	0					
ANR	6684924	PtrMemberAccess	info -> stream		6682266	0					
ANR	6684925	Identifier	info		6682266	0					
ANR	6684926	Identifier	stream		6682266	1					
ANR	6684927	Argument	"""-%%fp%d"""		6682266	1					
ANR	6684928	PrimaryExpression	"""-%%fp%d"""		6682266	0					
ANR	6684929	Argument	regno		6682266	2					
ANR	6684930	Identifier	regno		6682266	0					
ANR	6684931	ElseStatement	else		6682266	0					
ANR	6684932	IfStatement	if ( place == '8' )		6682266	0					
ANR	6684933	Condition	place == '8'	1053:10:12815:12826	6682266	0	True				
ANR	6684934	EqualityExpression	place == '8'		6682266	0		==			
ANR	6684935	Identifier	place		6682266	0					
ANR	6684936	PrimaryExpression	'8'		6682266	1					
ANR	6684937	CompoundStatement		1045:3:12708:12708	6682266	1					
ANR	6684938	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , fpcr_names [ fetch_arg ( buffer , place , 3 , info ) ] )"	1059:5:12887:12994	6682266	0	True				
ANR	6684939	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , fpcr_names [ fetch_arg ( buffer , place , 3 , info ) ] )"		6682266	0					
ANR	6684940	Callee	* info -> fprintf_func		6682266	0					
ANR	6684941	UnaryOperationExpression	* info -> fprintf_func		6682266	0					
ANR	6684942	UnaryOperator	*		6682266	0					
ANR	6684943	PtrMemberAccess	info -> fprintf_func		6682266	1					
ANR	6684944	Identifier	info		6682266	0					
ANR	6684945	Identifier	fprintf_func		6682266	1					
ANR	6684946	ArgumentList	info -> stream		6682266	1					
ANR	6684947	Argument	info -> stream		6682266	0					
ANR	6684948	PtrMemberAccess	info -> stream		6682266	0					
ANR	6684949	Identifier	info		6682266	0					
ANR	6684950	Identifier	stream		6682266	1					
ANR	6684951	Argument	"""%s"""		6682266	1					
ANR	6684952	PrimaryExpression	"""%s"""		6682266	0					
ANR	6684953	Argument	"fpcr_names [ fetch_arg ( buffer , place , 3 , info ) ]"		6682266	2					
ANR	6684954	ArrayIndexing	"fpcr_names [ fetch_arg ( buffer , place , 3 , info ) ]"		6682266	0					
ANR	6684955	Identifier	fpcr_names		6682266	0					
ANR	6684956	CallExpression	"fetch_arg ( buffer , place , 3 , info )"		6682266	1					
ANR	6684957	Callee	fetch_arg		6682266	0					
ANR	6684958	Identifier	fetch_arg		6682266	0					
ANR	6684959	ArgumentList	buffer		6682266	1					
ANR	6684960	Argument	buffer		6682266	0					
ANR	6684961	Identifier	buffer		6682266	0					
ANR	6684962	Argument	place		6682266	1					
ANR	6684963	Identifier	place		6682266	0					
ANR	6684964	Argument	3		6682266	2					
ANR	6684965	PrimaryExpression	3		6682266	0					
ANR	6684966	Argument	info		6682266	3					
ANR	6684967	Identifier	info		6682266	0					
ANR	6684968	ElseStatement	else		6682266	0					
ANR	6684969	ReturnStatement	return - 2 ;	1069:3:13013:13022	6682266	0	True				
ANR	6684970	UnaryOperationExpression	- 2		6682266	0					
ANR	6684971	UnaryOperator	-		6682266	0					
ANR	6684972	PrimaryExpression	2		6682266	1					
ANR	6684973	BreakStatement	break ;	1071:6:13031:13036	6682266	140	True				
ANR	6684974	Label	case 'X' :	1075:4:13045:13053	6682266	141	True				
ANR	6684975	ExpressionStatement	place = '8'	1077:6:13062:13073	6682266	142	True				
ANR	6684976	AssignmentExpression	place = '8'		6682266	0		=			
ANR	6684977	Identifier	place		6682266	0					
ANR	6684978	PrimaryExpression	'8'		6682266	1					
ANR	6684979	Label	case 'Y' :	1079:4:13080:13088	6682266	143	True				
ANR	6684980	Label	case 'Z' :	1081:4:13095:13103	6682266	144	True				
ANR	6684981	Label	case 'W' :	1083:4:13110:13118	6682266	145	True				
ANR	6684982	Label	case '0' :	1085:4:13125:13133	6682266	146	True				
ANR	6684983	Label	case '1' :	1087:4:13140:13148	6682266	147	True				
ANR	6684984	Label	case '2' :	1089:4:13155:13163	6682266	148	True				
ANR	6684985	Label	case '3' :	1091:4:13170:13178	6682266	149	True				
ANR	6684986	CompoundStatement		1087:8:13121:13141	6682266	150					
ANR	6684987	IdentifierDeclStatement	"int val = fetch_arg ( buffer , place , 5 , info ) ;"	1095:1:13191:13235	6682266	0	True				
ANR	6684988	IdentifierDecl	"val = fetch_arg ( buffer , place , 5 , info )"		6682266	0					
ANR	6684989	IdentifierDeclType	int		6682266	0					
ANR	6684990	Identifier	val		6682266	1					
ANR	6684991	AssignmentExpression	"val = fetch_arg ( buffer , place , 5 , info )"		6682266	2		=			
ANR	6684992	Identifier	val		6682266	0					
ANR	6684993	CallExpression	"fetch_arg ( buffer , place , 5 , info )"		6682266	1					
ANR	6684994	Callee	fetch_arg		6682266	0					
ANR	6684995	Identifier	fetch_arg		6682266	0					
ANR	6684996	ArgumentList	buffer		6682266	1					
ANR	6684997	Argument	buffer		6682266	0					
ANR	6684998	Identifier	buffer		6682266	0					
ANR	6684999	Argument	place		6682266	1					
ANR	6685000	Identifier	place		6682266	0					
ANR	6685001	Argument	5		6682266	2					
ANR	6685002	PrimaryExpression	5		6682266	0					
ANR	6685003	Argument	info		6682266	3					
ANR	6685004	Identifier	info		6682266	0					
ANR	6685005	IdentifierDeclStatement	const char * name = 0 ;	1097:8:13246:13266	6682266	1	True				
ANR	6685006	IdentifierDecl	* name = 0		6682266	0					
ANR	6685007	IdentifierDeclType	const char *		6682266	0					
ANR	6685008	Identifier	name		6682266	1					
ANR	6685009	AssignmentExpression	* name = 0		6682266	2		=			
ANR	6685010	Identifier	name		6682266	0					
ANR	6685011	PrimaryExpression	0		6682266	1					
ANR	6685012	SwitchStatement	switch ( val )		6682266	2					
ANR	6685013	Condition	val	1101:9:13280:13282	6682266	0	True				
ANR	6685014	Identifier	val		6682266	0					
ANR	6685015	CompoundStatement		1093:3:13164:13164	6682266	1					
ANR	6685016	Label	case 2 :	1105:3:13295:13301	6682266	0	True				
ANR	6685017	ExpressionStatement	"name = ""%tt0"""	1105:11:13303:13316	6682266	1	True				
ANR	6685018	AssignmentExpression	"name = ""%tt0"""		6682266	0		=			
ANR	6685019	Identifier	name		6682266	0					
ANR	6685020	PrimaryExpression	"""%tt0"""		6682266	1					
ANR	6685021	BreakStatement	break ;	1105:26:13318:13323	6682266	2	True				
ANR	6685022	Label	case 3 :	1107:3:13329:13335	6682266	3	True				
ANR	6685023	ExpressionStatement	"name = ""%tt1"""	1107:11:13337:13350	6682266	4	True				
ANR	6685024	AssignmentExpression	"name = ""%tt1"""		6682266	0		=			
ANR	6685025	Identifier	name		6682266	0					
ANR	6685026	PrimaryExpression	"""%tt1"""		6682266	1					
ANR	6685027	BreakStatement	break ;	1107:26:13352:13357	6682266	5	True				
ANR	6685028	Label	case 0x10 :	1109:3:13363:13372	6682266	6	True				
ANR	6685029	ExpressionStatement	"name = ""%tc"""	1109:14:13374:13386	6682266	7	True				
ANR	6685030	AssignmentExpression	"name = ""%tc"""		6682266	0		=			
ANR	6685031	Identifier	name		6682266	0					
ANR	6685032	PrimaryExpression	"""%tc"""		6682266	1					
ANR	6685033	BreakStatement	break ;	1109:28:13388:13393	6682266	8	True				
ANR	6685034	Label	case 0x11 :	1111:3:13399:13408	6682266	9	True				
ANR	6685035	ExpressionStatement	"name = ""%drp"""	1111:14:13410:13423	6682266	10	True				
ANR	6685036	AssignmentExpression	"name = ""%drp"""		6682266	0		=			
ANR	6685037	Identifier	name		6682266	0					
ANR	6685038	PrimaryExpression	"""%drp"""		6682266	1					
ANR	6685039	BreakStatement	break ;	1111:29:13425:13430	6682266	11	True				
ANR	6685040	Label	case 0x12 :	1113:3:13436:13445	6682266	12	True				
ANR	6685041	ExpressionStatement	"name = ""%srp"""	1113:14:13447:13460	6682266	13	True				
ANR	6685042	AssignmentExpression	"name = ""%srp"""		6682266	0		=			
ANR	6685043	Identifier	name		6682266	0					
ANR	6685044	PrimaryExpression	"""%srp"""		6682266	1					
ANR	6685045	BreakStatement	break ;	1113:29:13462:13467	6682266	14	True				
ANR	6685046	Label	case 0x13 :	1115:3:13473:13482	6682266	15	True				
ANR	6685047	ExpressionStatement	"name = ""%crp"""	1115:14:13484:13497	6682266	16	True				
ANR	6685048	AssignmentExpression	"name = ""%crp"""		6682266	0		=			
ANR	6685049	Identifier	name		6682266	0					
ANR	6685050	PrimaryExpression	"""%crp"""		6682266	1					
ANR	6685051	BreakStatement	break ;	1115:29:13499:13504	6682266	17	True				
ANR	6685052	Label	case 0x14 :	1117:3:13510:13519	6682266	18	True				
ANR	6685053	ExpressionStatement	"name = ""%cal"""	1117:14:13521:13534	6682266	19	True				
ANR	6685054	AssignmentExpression	"name = ""%cal"""		6682266	0		=			
ANR	6685055	Identifier	name		6682266	0					
ANR	6685056	PrimaryExpression	"""%cal"""		6682266	1					
ANR	6685057	BreakStatement	break ;	1117:29:13536:13541	6682266	20	True				
ANR	6685058	Label	case 0x15 :	1119:3:13547:13556	6682266	21	True				
ANR	6685059	ExpressionStatement	"name = ""%val"""	1119:14:13558:13571	6682266	22	True				
ANR	6685060	AssignmentExpression	"name = ""%val"""		6682266	0		=			
ANR	6685061	Identifier	name		6682266	0					
ANR	6685062	PrimaryExpression	"""%val"""		6682266	1					
ANR	6685063	BreakStatement	break ;	1119:29:13573:13578	6682266	23	True				
ANR	6685064	Label	case 0x16 :	1121:3:13584:13593	6682266	24	True				
ANR	6685065	ExpressionStatement	"name = ""%scc"""	1121:14:13595:13608	6682266	25	True				
ANR	6685066	AssignmentExpression	"name = ""%scc"""		6682266	0		=			
ANR	6685067	Identifier	name		6682266	0					
ANR	6685068	PrimaryExpression	"""%scc"""		6682266	1					
ANR	6685069	BreakStatement	break ;	1121:29:13610:13615	6682266	26	True				
ANR	6685070	Label	case 0x17 :	1123:3:13621:13630	6682266	27	True				
ANR	6685071	ExpressionStatement	"name = ""%ac"""	1123:14:13632:13644	6682266	28	True				
ANR	6685072	AssignmentExpression	"name = ""%ac"""		6682266	0		=			
ANR	6685073	Identifier	name		6682266	0					
ANR	6685074	PrimaryExpression	"""%ac"""		6682266	1					
ANR	6685075	BreakStatement	break ;	1123:28:13646:13651	6682266	29	True				
ANR	6685076	Label	case 0x18 :	1125:4:13658:13667	6682266	30	True				
ANR	6685077	ExpressionStatement	"name = ""%psr"""	1125:15:13669:13682	6682266	31	True				
ANR	6685078	AssignmentExpression	"name = ""%psr"""		6682266	0		=			
ANR	6685079	Identifier	name		6682266	0					
ANR	6685080	PrimaryExpression	"""%psr"""		6682266	1					
ANR	6685081	BreakStatement	break ;	1125:30:13684:13689	6682266	32	True				
ANR	6685082	Label	case 0x19 :	1127:3:13695:13704	6682266	33	True				
ANR	6685083	ExpressionStatement	"name = ""%pcsr"""	1127:14:13706:13720	6682266	34	True				
ANR	6685084	AssignmentExpression	"name = ""%pcsr"""		6682266	0		=			
ANR	6685085	Identifier	name		6682266	0					
ANR	6685086	PrimaryExpression	"""%pcsr"""		6682266	1					
ANR	6685087	BreakStatement	break ;	1127:30:13722:13727	6682266	35	True				
ANR	6685088	Label	case 0x1c :	1129:3:13733:13742	6682266	36	True				
ANR	6685089	Label	case 0x1d :	1131:3:13748:13757	6682266	37	True				
ANR	6685090	CompoundStatement		1125:7:13650:13688	6682266	38					
ANR	6685091	IdentifierDeclStatement	int break_reg = ( ( buffer [ 3 ] >> 2 ) & 7 ) ;	1135:7:13775:13813	6682266	0	True				
ANR	6685092	IdentifierDecl	break_reg = ( ( buffer [ 3 ] >> 2 ) & 7 )		6682266	0					
ANR	6685093	IdentifierDeclType	int		6682266	0					
ANR	6685094	Identifier	break_reg		6682266	1					
ANR	6685095	AssignmentExpression	break_reg = ( ( buffer [ 3 ] >> 2 ) & 7 )		6682266	2		=			
ANR	6685096	Identifier	break_reg		6682266	0					
ANR	6685097	BitAndExpression	( buffer [ 3 ] >> 2 ) & 7		6682266	1		&			
ANR	6685098	ShiftExpression	buffer [ 3 ] >> 2		6682266	0		>>			
ANR	6685099	ArrayIndexing	buffer [ 3 ]		6682266	0					
ANR	6685100	Identifier	buffer		6682266	0					
ANR	6685101	PrimaryExpression	3		6682266	1					
ANR	6685102	PrimaryExpression	2		6682266	1					
ANR	6685103	PrimaryExpression	7		6682266	1					
ANR	6685104	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , val == 0x1c ? ""%%bad%d"" : ""%%bac%d"" , break_reg )"	1139:7:13825:13916	6682266	1	True				
ANR	6685105	CallExpression	"( * info -> fprintf_func ) ( info -> stream , val == 0x1c ? ""%%bad%d"" : ""%%bac%d"" , break_reg )"		6682266	0					
ANR	6685106	Callee	* info -> fprintf_func		6682266	0					
ANR	6685107	UnaryOperationExpression	* info -> fprintf_func		6682266	0					
ANR	6685108	UnaryOperator	*		6682266	0					
ANR	6685109	PtrMemberAccess	info -> fprintf_func		6682266	1					
ANR	6685110	Identifier	info		6682266	0					
ANR	6685111	Identifier	fprintf_func		6682266	1					
ANR	6685112	ArgumentList	info -> stream		6682266	1					
ANR	6685113	Argument	info -> stream		6682266	0					
ANR	6685114	PtrMemberAccess	info -> stream		6682266	0					
ANR	6685115	Identifier	info		6682266	0					
ANR	6685116	Identifier	stream		6682266	1					
ANR	6685117	Argument	"val == 0x1c ? ""%%bad%d"" : ""%%bac%d"""		6682266	1					
ANR	6685118	ConditionalExpression	"val == 0x1c ? ""%%bad%d"" : ""%%bac%d"""		6682266	0					
ANR	6685119	Condition	val == 0x1c		6682266	0					
ANR	6685120	EqualityExpression	val == 0x1c		6682266	0		==			
ANR	6685121	Identifier	val		6682266	0					
ANR	6685122	PrimaryExpression	0x1c		6682266	1					
ANR	6685123	PrimaryExpression	"""%%bad%d"""		6682266	1					
ANR	6685124	PrimaryExpression	"""%%bac%d"""		6682266	2					
ANR	6685125	Argument	break_reg		6682266	2					
ANR	6685126	Identifier	break_reg		6682266	0					
ANR	6685127	BreakStatement	break ;	1147:5:13932:13937	6682266	39	True				
ANR	6685128	Label	default :	1149:3:13943:13950	6682266	40	True				
ANR	6685129	Identifier	default		6682266	0					
ANR	6685130	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""<mmu register %d>"" , val )"	1151:5:13958:14020	6682266	41	True				
ANR	6685131	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""<mmu register %d>"" , val )"		6682266	0					
ANR	6685132	Callee	* info -> fprintf_func		6682266	0					
ANR	6685133	UnaryOperationExpression	* info -> fprintf_func		6682266	0					
ANR	6685134	UnaryOperator	*		6682266	0					
ANR	6685135	PtrMemberAccess	info -> fprintf_func		6682266	1					
ANR	6685136	Identifier	info		6682266	0					
ANR	6685137	Identifier	fprintf_func		6682266	1					
ANR	6685138	ArgumentList	info -> stream		6682266	1					
ANR	6685139	Argument	info -> stream		6682266	0					
ANR	6685140	PtrMemberAccess	info -> stream		6682266	0					
ANR	6685141	Identifier	info		6682266	0					
ANR	6685142	Identifier	stream		6682266	1					
ANR	6685143	Argument	"""<mmu register %d>"""		6682266	1					
ANR	6685144	PrimaryExpression	"""<mmu register %d>"""		6682266	0					
ANR	6685145	Argument	val		6682266	2					
ANR	6685146	Identifier	val		6682266	0					
ANR	6685147	IfStatement	if ( name )		6682266	3					
ANR	6685148	Condition	name	1155:5:14034:14037	6682266	0	True				
ANR	6685149	Identifier	name		6682266	0					
ANR	6685150	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , name )"	1157:3:14044:14092	6682266	1	True				
ANR	6685151	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , name )"		6682266	0					
ANR	6685152	Callee	* info -> fprintf_func		6682266	0					
ANR	6685153	UnaryOperationExpression	* info -> fprintf_func		6682266	0					
ANR	6685154	UnaryOperator	*		6682266	0					
ANR	6685155	PtrMemberAccess	info -> fprintf_func		6682266	1					
ANR	6685156	Identifier	info		6682266	0					
ANR	6685157	Identifier	fprintf_func		6682266	1					
ANR	6685158	ArgumentList	info -> stream		6682266	1					
ANR	6685159	Argument	info -> stream		6682266	0					
ANR	6685160	PtrMemberAccess	info -> stream		6682266	0					
ANR	6685161	Identifier	info		6682266	0					
ANR	6685162	Identifier	stream		6682266	1					
ANR	6685163	Argument	"""%s"""		6682266	1					
ANR	6685164	PrimaryExpression	"""%s"""		6682266	0					
ANR	6685165	Argument	name		6682266	2					
ANR	6685166	Identifier	name		6682266	0					
ANR	6685167	BreakStatement	break ;	1161:6:14110:14115	6682266	151	True				
ANR	6685168	Label	case 'f' :	1165:4:14124:14132	6682266	152	True				
ANR	6685169	CompoundStatement		1159:1:14020:14063	6682266	153					
ANR	6685170	IdentifierDeclStatement	"int fc = fetch_arg ( buffer , place , 5 , info ) ;"	1169:1:14145:14188	6682266	0	True				
ANR	6685171	IdentifierDecl	"fc = fetch_arg ( buffer , place , 5 , info )"		6682266	0					
ANR	6685172	IdentifierDeclType	int		6682266	0					
ANR	6685173	Identifier	fc		6682266	1					
ANR	6685174	AssignmentExpression	"fc = fetch_arg ( buffer , place , 5 , info )"		6682266	2		=			
ANR	6685175	Identifier	fc		6682266	0					
ANR	6685176	CallExpression	"fetch_arg ( buffer , place , 5 , info )"		6682266	1					
ANR	6685177	Callee	fetch_arg		6682266	0					
ANR	6685178	Identifier	fetch_arg		6682266	0					
ANR	6685179	ArgumentList	buffer		6682266	1					
ANR	6685180	Argument	buffer		6682266	0					
ANR	6685181	Identifier	buffer		6682266	0					
ANR	6685182	Argument	place		6682266	1					
ANR	6685183	Identifier	place		6682266	0					
ANR	6685184	Argument	5		6682266	2					
ANR	6685185	PrimaryExpression	5		6682266	0					
ANR	6685186	Argument	info		6682266	3					
ANR	6685187	Identifier	info		6682266	0					
ANR	6685188	IfStatement	if ( fc == 1 )		6682266	1					
ANR	6685189	Condition	fc == 1	1173:5:14198:14204	6682266	0	True				
ANR	6685190	EqualityExpression	fc == 1		6682266	0		==			
ANR	6685191	Identifier	fc		6682266	0					
ANR	6685192	PrimaryExpression	1		6682266	1					
ANR	6685193	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%%dfc"" )"	1175:3:14211:14256	6682266	1	True				
ANR	6685194	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%%dfc"" )"		6682266	0					
ANR	6685195	Callee	* info -> fprintf_func		6682266	0					
ANR	6685196	UnaryOperationExpression	* info -> fprintf_func		6682266	0					
ANR	6685197	UnaryOperator	*		6682266	0					
ANR	6685198	PtrMemberAccess	info -> fprintf_func		6682266	1					
ANR	6685199	Identifier	info		6682266	0					
ANR	6685200	Identifier	fprintf_func		6682266	1					
ANR	6685201	ArgumentList	info -> stream		6682266	1					
ANR	6685202	Argument	info -> stream		6682266	0					
ANR	6685203	PtrMemberAccess	info -> stream		6682266	0					
ANR	6685204	Identifier	info		6682266	0					
ANR	6685205	Identifier	stream		6682266	1					
ANR	6685206	Argument	"""%%dfc"""		6682266	1					
ANR	6685207	PrimaryExpression	"""%%dfc"""		6682266	0					
ANR	6685208	ElseStatement	else		6682266	0					
ANR	6685209	IfStatement	if ( fc == 0 )		6682266	0					
ANR	6685210	Condition	fc == 0	1177:10:14269:14275	6682266	0	True				
ANR	6685211	EqualityExpression	fc == 0		6682266	0		==			
ANR	6685212	Identifier	fc		6682266	0					
ANR	6685213	PrimaryExpression	0		6682266	1					
ANR	6685214	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%%sfc"" )"	1179:3:14282:14327	6682266	1	True				
ANR	6685215	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%%sfc"" )"		6682266	0					
ANR	6685216	Callee	* info -> fprintf_func		6682266	0					
ANR	6685217	UnaryOperationExpression	* info -> fprintf_func		6682266	0					
ANR	6685218	UnaryOperator	*		6682266	0					
ANR	6685219	PtrMemberAccess	info -> fprintf_func		6682266	1					
ANR	6685220	Identifier	info		6682266	0					
ANR	6685221	Identifier	fprintf_func		6682266	1					
ANR	6685222	ArgumentList	info -> stream		6682266	1					
ANR	6685223	Argument	info -> stream		6682266	0					
ANR	6685224	PtrMemberAccess	info -> stream		6682266	0					
ANR	6685225	Identifier	info		6682266	0					
ANR	6685226	Identifier	stream		6682266	1					
ANR	6685227	Argument	"""%%sfc"""		6682266	1					
ANR	6685228	PrimaryExpression	"""%%sfc"""		6682266	0					
ANR	6685229	ElseStatement	else		6682266	0					
ANR	6685230	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , _ ( ""<function code %d>"" ) , fc )"	1185:3:14368:14433	6682266	0	True				
ANR	6685231	CallExpression	"( * info -> fprintf_func ) ( info -> stream , _ ( ""<function code %d>"" ) , fc )"		6682266	0					
ANR	6685232	Callee	* info -> fprintf_func		6682266	0					
ANR	6685233	UnaryOperationExpression	* info -> fprintf_func		6682266	0					
ANR	6685234	UnaryOperator	*		6682266	0					
ANR	6685235	PtrMemberAccess	info -> fprintf_func		6682266	1					
ANR	6685236	Identifier	info		6682266	0					
ANR	6685237	Identifier	fprintf_func		6682266	1					
ANR	6685238	ArgumentList	info -> stream		6682266	1					
ANR	6685239	Argument	info -> stream		6682266	0					
ANR	6685240	PtrMemberAccess	info -> stream		6682266	0					
ANR	6685241	Identifier	info		6682266	0					
ANR	6685242	Identifier	stream		6682266	1					
ANR	6685243	Argument	"_ ( ""<function code %d>"" )"		6682266	1					
ANR	6685244	CallExpression	"_ ( ""<function code %d>"" )"		6682266	0					
ANR	6685245	Callee	_		6682266	0					
ANR	6685246	Identifier	_		6682266	0					
ANR	6685247	ArgumentList	"""<function code %d>"""		6682266	1					
ANR	6685248	Argument	"""<function code %d>"""		6682266	0					
ANR	6685249	PrimaryExpression	"""<function code %d>"""		6682266	0					
ANR	6685250	Argument	fc		6682266	2					
ANR	6685251	Identifier	fc		6682266	0					
ANR	6685252	BreakStatement	break ;	1189:6:14451:14456	6682266	154	True				
ANR	6685253	Label	case 'V' :	1193:4:14465:14473	6682266	155	True				
ANR	6685254	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%%val"" )"	1195:6:14482:14527	6682266	156	True				
ANR	6685255	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%%val"" )"		6682266	0					
ANR	6685256	Callee	* info -> fprintf_func		6682266	0					
ANR	6685257	UnaryOperationExpression	* info -> fprintf_func		6682266	0					
ANR	6685258	UnaryOperator	*		6682266	0					
ANR	6685259	PtrMemberAccess	info -> fprintf_func		6682266	1					
ANR	6685260	Identifier	info		6682266	0					
ANR	6685261	Identifier	fprintf_func		6682266	1					
ANR	6685262	ArgumentList	info -> stream		6682266	1					
ANR	6685263	Argument	info -> stream		6682266	0					
ANR	6685264	PtrMemberAccess	info -> stream		6682266	0					
ANR	6685265	Identifier	info		6682266	0					
ANR	6685266	Identifier	stream		6682266	1					
ANR	6685267	Argument	"""%%val"""		6682266	1					
ANR	6685268	PrimaryExpression	"""%%val"""		6682266	0					
ANR	6685269	BreakStatement	break ;	1197:6:14536:14541	6682266	157	True				
ANR	6685270	Label	case 't' :	1201:4:14550:14558	6682266	158	True				
ANR	6685271	CompoundStatement		1195:1:14446:14492	6682266	159					
ANR	6685272	IdentifierDeclStatement	"int level = fetch_arg ( buffer , place , 3 , info ) ;"	1205:1:14571:14617	6682266	0	True				
ANR	6685273	IdentifierDecl	"level = fetch_arg ( buffer , place , 3 , info )"		6682266	0					
ANR	6685274	IdentifierDeclType	int		6682266	0					
ANR	6685275	Identifier	level		6682266	1					
ANR	6685276	AssignmentExpression	"level = fetch_arg ( buffer , place , 3 , info )"		6682266	2		=			
ANR	6685277	Identifier	level		6682266	0					
ANR	6685278	CallExpression	"fetch_arg ( buffer , place , 3 , info )"		6682266	1					
ANR	6685279	Callee	fetch_arg		6682266	0					
ANR	6685280	Identifier	fetch_arg		6682266	0					
ANR	6685281	ArgumentList	buffer		6682266	1					
ANR	6685282	Argument	buffer		6682266	0					
ANR	6685283	Identifier	buffer		6682266	0					
ANR	6685284	Argument	place		6682266	1					
ANR	6685285	Identifier	place		6682266	0					
ANR	6685286	Argument	3		6682266	2					
ANR	6685287	PrimaryExpression	3		6682266	0					
ANR	6685288	Argument	info		6682266	3					
ANR	6685289	Identifier	info		6682266	0					
ANR	6685290	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%d"" , level )"	1209:1:14623:14672	6682266	1	True				
ANR	6685291	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%d"" , level )"		6682266	0					
ANR	6685292	Callee	* info -> fprintf_func		6682266	0					
ANR	6685293	UnaryOperationExpression	* info -> fprintf_func		6682266	0					
ANR	6685294	UnaryOperator	*		6682266	0					
ANR	6685295	PtrMemberAccess	info -> fprintf_func		6682266	1					
ANR	6685296	Identifier	info		6682266	0					
ANR	6685297	Identifier	fprintf_func		6682266	1					
ANR	6685298	ArgumentList	info -> stream		6682266	1					
ANR	6685299	Argument	info -> stream		6682266	0					
ANR	6685300	PtrMemberAccess	info -> stream		6682266	0					
ANR	6685301	Identifier	info		6682266	0					
ANR	6685302	Identifier	stream		6682266	1					
ANR	6685303	Argument	"""%d"""		6682266	1					
ANR	6685304	PrimaryExpression	"""%d"""		6682266	0					
ANR	6685305	Argument	level		6682266	2					
ANR	6685306	Identifier	level		6682266	0					
ANR	6685307	BreakStatement	break ;	1213:6:14690:14695	6682266	160	True				
ANR	6685308	Label	case 'u' :	1217:4:14704:14712	6682266	161	True				
ANR	6685309	CompoundStatement		1213:1:14622:14666	6682266	162					
ANR	6685310	IdentifierDeclStatement	short is_upper = 0 ;	1221:1:14725:14743	6682266	0	True				
ANR	6685311	IdentifierDecl	is_upper = 0		6682266	0					
ANR	6685312	IdentifierDeclType	short		6682266	0					
ANR	6685313	Identifier	is_upper		6682266	1					
ANR	6685314	AssignmentExpression	is_upper = 0		6682266	2		=			
ANR	6685315	Identifier	is_upper		6682266	0					
ANR	6685316	PrimaryExpression	0		6682266	1					
ANR	6685317	IdentifierDeclStatement	"int reg = fetch_arg ( buffer , place , 5 , info ) ;"	1223:1:14747:14791	6682266	1	True				
ANR	6685318	IdentifierDecl	"reg = fetch_arg ( buffer , place , 5 , info )"		6682266	0					
ANR	6685319	IdentifierDeclType	int		6682266	0					
ANR	6685320	Identifier	reg		6682266	1					
ANR	6685321	AssignmentExpression	"reg = fetch_arg ( buffer , place , 5 , info )"		6682266	2		=			
ANR	6685322	Identifier	reg		6682266	0					
ANR	6685323	CallExpression	"fetch_arg ( buffer , place , 5 , info )"		6682266	1					
ANR	6685324	Callee	fetch_arg		6682266	0					
ANR	6685325	Identifier	fetch_arg		6682266	0					
ANR	6685326	ArgumentList	buffer		6682266	1					
ANR	6685327	Argument	buffer		6682266	0					
ANR	6685328	Identifier	buffer		6682266	0					
ANR	6685329	Argument	place		6682266	1					
ANR	6685330	Identifier	place		6682266	0					
ANR	6685331	Argument	5		6682266	2					
ANR	6685332	PrimaryExpression	5		6682266	0					
ANR	6685333	Argument	info		6682266	3					
ANR	6685334	Identifier	info		6682266	0					
ANR	6685335	IfStatement	if ( reg & 0x10 )		6682266	2					
ANR	6685336	Condition	reg & 0x10	1227:5:14801:14810	6682266	0	True				
ANR	6685337	BitAndExpression	reg & 0x10		6682266	0		&			
ANR	6685338	Identifier	reg		6682266	0					
ANR	6685339	PrimaryExpression	0x10		6682266	1					
ANR	6685340	CompoundStatement		1219:3:14692:14692	6682266	1					
ANR	6685341	ExpressionStatement	is_upper = 1	1231:5:14825:14837	6682266	0	True				
ANR	6685342	AssignmentExpression	is_upper = 1		6682266	0		=			
ANR	6685343	Identifier	is_upper		6682266	0					
ANR	6685344	PrimaryExpression	1		6682266	1					
ANR	6685345	ExpressionStatement	reg &= 0xf	1233:5:14845:14855	6682266	1	True				
ANR	6685346	AssignmentExpression	reg &= 0xf		6682266	0		&=			
ANR	6685347	Identifier	reg		6682266	0					
ANR	6685348	PrimaryExpression	0xf		6682266	1					
ANR	6685349	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s%s"" , reg_half_names [ reg ] , is_upper ? ""u"" : ""l"" )"	1237:1:14865:14974	6682266	3	True				
ANR	6685350	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s%s"" , reg_half_names [ reg ] , is_upper ? ""u"" : ""l"" )"		6682266	0					
ANR	6685351	Callee	* info -> fprintf_func		6682266	0					
ANR	6685352	UnaryOperationExpression	* info -> fprintf_func		6682266	0					
ANR	6685353	UnaryOperator	*		6682266	0					
ANR	6685354	PtrMemberAccess	info -> fprintf_func		6682266	1					
ANR	6685355	Identifier	info		6682266	0					
ANR	6685356	Identifier	fprintf_func		6682266	1					
ANR	6685357	ArgumentList	info -> stream		6682266	1					
ANR	6685358	Argument	info -> stream		6682266	0					
ANR	6685359	PtrMemberAccess	info -> stream		6682266	0					
ANR	6685360	Identifier	info		6682266	0					
ANR	6685361	Identifier	stream		6682266	1					
ANR	6685362	Argument	"""%s%s"""		6682266	1					
ANR	6685363	PrimaryExpression	"""%s%s"""		6682266	0					
ANR	6685364	Argument	reg_half_names [ reg ]		6682266	2					
ANR	6685365	ArrayIndexing	reg_half_names [ reg ]		6682266	0					
ANR	6685366	Identifier	reg_half_names		6682266	0					
ANR	6685367	Identifier	reg		6682266	1					
ANR	6685368	Argument	"is_upper ? ""u"" : ""l"""		6682266	3					
ANR	6685369	ConditionalExpression	"is_upper ? ""u"" : ""l"""		6682266	0					
ANR	6685370	Condition	is_upper		6682266	0					
ANR	6685371	Identifier	is_upper		6682266	0					
ANR	6685372	PrimaryExpression	"""u"""		6682266	1					
ANR	6685373	PrimaryExpression	"""l"""		6682266	2					
ANR	6685374	BreakStatement	break ;	1245:6:14992:14997	6682266	163	True				
ANR	6685375	Label	default :	1249:4:15006:15013	6682266	164	True				
ANR	6685376	Identifier	default		6682266	0					
ANR	6685377	ReturnStatement	return - 2 ;	1251:6:15022:15031	6682266	165	True				
ANR	6685378	UnaryOperationExpression	- 2		6682266	0					
ANR	6685379	UnaryOperator	-		6682266	0					
ANR	6685380	PrimaryExpression	2		6682266	1					
ANR	6685381	ReturnStatement	return p - p0 ;	1257:2:15045:15058	6682266	11	True				
ANR	6685382	AdditiveExpression	p - p0		6682266	0		-			
ANR	6685383	Identifier	p		6682266	0					
ANR	6685384	Identifier	p0		6682266	1					
ANR	6685385	Identifier	print_insn_arg		6682266	1					
ANR	6685386	ParameterList	"const char * d , unsigned char * buffer , unsigned char * p0 , bfd_vma addr , disassemble_info * info"		6682266	2					
ANR	6685387	Parameter	const char * d	1:16:16:28	6682266	0	True				
ANR	6685388	ParameterType	const char *		6682266	0					
ANR	6685389	Identifier	d		6682266	1					
ANR	6685390	Parameter	unsigned char * buffer	3:2:34:54	6682266	1	True				
ANR	6685391	ParameterType	unsigned char *		6682266	0					
ANR	6685392	Identifier	buffer		6682266	1					
ANR	6685393	Parameter	unsigned char * p0	5:2:60:76	6682266	2	True				
ANR	6685394	ParameterType	unsigned char *		6682266	0					
ANR	6685395	Identifier	p0		6682266	1					
ANR	6685396	Parameter	bfd_vma addr	7:2:82:93	6682266	3	True				
ANR	6685397	ParameterType	bfd_vma		6682266	0					
ANR	6685398	Identifier	addr		6682266	1					
ANR	6685399	Parameter	disassemble_info * info	9:2:99:120	6682266	4	True				
ANR	6685400	ParameterType	disassemble_info *		6682266	0					
ANR	6685401	Identifier	info		6682266	1					
ANR	6685402	CFGEntryNode	ENTRY		6682266		True				
ANR	6685403	CFGExitNode	EXIT		6682266		True				
ANR	6685404	Symbol	* reg_half_names		6682266						
ANR	6685405	Symbol	* regno		6682266						
ANR	6685406	Symbol	* scalefactor_name		6682266						
ANR	6685407	Symbol	disp		6682266						
ANR	6685408	Symbol	info -> fprintf_func		6682266						
ANR	6685409	Symbol	flt_p		6682266						
ANR	6685410	Symbol	names [ regno ] . value		6682266						
ANR	6685411	Symbol	COERCE_SIGNED_CHAR		6682266						
ANR	6685412	Symbol	fetch_arg		6682266						
ANR	6685413	Symbol	reg		6682266						
ANR	6685414	Symbol	reg_names		6682266						
ANR	6685415	Symbol	* reg_names		6682266						
ANR	6685416	Symbol	* fpcr_names		6682266						
ANR	6685417	Symbol	buffer		6682266						
ANR	6685418	Symbol	cacheFieldName		6682266						
ANR	6685419	Symbol	info		6682266						
ANR	6685420	Symbol	val		6682266						
ANR	6685421	Symbol	regno		6682266						
ANR	6685422	Symbol	regname		6682266						
ANR	6685423	Symbol	level		6682266						
ANR	6685424	Symbol	* fetch_arg		6682266						
ANR	6685425	Symbol	break_reg		6682266						
ANR	6685426	Symbol	names [ regno ] . name		6682266						
ANR	6685427	Symbol	name		6682266						
ANR	6685428	Symbol	uval		6682266						
ANR	6685429	Symbol	doneany		6682266						
ANR	6685430	Symbol	fc		6682266						
ANR	6685431	Symbol	p0		6682266						
ANR	6685432	Symbol	p1		6682266						
ANR	6685433	Symbol	first_regno		6682266						
ANR	6685434	Symbol	is_upper		6682266						
ANR	6685435	Symbol	* cacheFieldName		6682266						
ANR	6685436	Symbol	flval		6682266						
ANR	6685437	Symbol	* val		6682266						
ANR	6685438	Symbol	info -> stream		6682266						
ANR	6685439	Symbol	* names		6682266						
ANR	6685440	Symbol	info -> print_address_func		6682266						
ANR	6685441	Symbol	NEXTPACKED		6682266						
ANR	6685442	Symbol	place		6682266						
ANR	6685443	Symbol	addr		6682266						
ANR	6685444	Symbol	_		6682266						
ANR	6685445	Symbol	NEXTWORD		6682266						
ANR	6685446	Symbol	* buffer		6682266						
ANR	6685447	Symbol	reg_half_names		6682266						
ANR	6685448	Symbol	d		6682266						
ANR	6685449	Symbol	fpcr_names		6682266						
ANR	6685450	Symbol	NEXTBYTE		6682266						
ANR	6685451	Symbol	m68k_valid_ea		6682266						
ANR	6685452	Symbol	NEXTULONG		6682266						
ANR	6685453	Symbol	* d		6682266						
ANR	6685454	Symbol	print_indexed		6682266						
ANR	6685455	Symbol	p		6682266						
ANR	6685456	Symbol	scalefactor_name		6682266						
ANR	6685457	Symbol	names		6682266						
ANR	6685458	Symbol	NEXTLONG		6682266						
ANR	6685459	Symbol	* info		6682266						
ANR	6685460	Symbol	newval		6682266						
ANR	6685461	Symbol	* reg		6682266						
