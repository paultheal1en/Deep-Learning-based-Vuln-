command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2762100	File	/home/p4ultr4n/workplace/ReVeal/raw_code/doubles2str_1.c								
ANR	2762101	Function	doubles2str	1:0:0:538							
ANR	2762102	FunctionDef	"doubles2str (double * dp , int count , const char * sep)"		2762101	0					
ANR	2762103	CompoundStatement		3:0:66:538	2762101	0					
ANR	2762104	IdentifierDeclStatement	int i ;	5:4:73:78	2762101	0	True				
ANR	2762105	IdentifierDecl	i		2762101	0					
ANR	2762106	IdentifierDeclType	int		2762101	0					
ANR	2762107	Identifier	i		2762101	1					
ANR	2762108	IdentifierDeclStatement	"char * ap , * ap0 ;"	7:4:85:99	2762101	1	True				
ANR	2762109	IdentifierDecl	* ap		2762101	0					
ANR	2762110	IdentifierDeclType	char *		2762101	0					
ANR	2762111	Identifier	ap		2762101	1					
ANR	2762112	IdentifierDecl	* ap0		2762101	1					
ANR	2762113	IdentifierDeclType	char *		2762101	0					
ANR	2762114	Identifier	ap0		2762101	1					
ANR	2762115	IdentifierDeclStatement	int component_len = 15 + strlen ( sep ) ;	9:4:106:142	2762101	2	True				
ANR	2762116	IdentifierDecl	component_len = 15 + strlen ( sep )		2762101	0					
ANR	2762117	IdentifierDeclType	int		2762101	0					
ANR	2762118	Identifier	component_len		2762101	1					
ANR	2762119	AssignmentExpression	component_len = 15 + strlen ( sep )		2762101	2		=			
ANR	2762120	Identifier	component_len		2762101	0					
ANR	2762121	AdditiveExpression	15 + strlen ( sep )		2762101	1		+			
ANR	2762122	PrimaryExpression	15		2762101	0					
ANR	2762123	CallExpression	strlen ( sep )		2762101	1					
ANR	2762124	Callee	strlen		2762101	0					
ANR	2762125	Identifier	strlen		2762101	0					
ANR	2762126	ArgumentList	sep		2762101	1					
ANR	2762127	Argument	sep		2762101	0					
ANR	2762128	Identifier	sep		2762101	0					
ANR	2762129	IfStatement	if ( ! sep )		2762101	3					
ANR	2762130	Condition	! sep	11:8:153:156	2762101	0	True				
ANR	2762131	UnaryOperationExpression	! sep		2762101	0					
ANR	2762132	UnaryOperator	!		2762101	0					
ANR	2762133	Identifier	sep		2762101	1					
ANR	2762134	ExpressionStatement	"sep = "", """	11:14:159:169	2762101	1	True				
ANR	2762135	AssignmentExpression	"sep = "", """		2762101	0		=			
ANR	2762136	Identifier	sep		2762101	0					
ANR	2762137	PrimaryExpression	""", """		2762101	1					
ANR	2762138	ExpressionStatement	ap = av_malloc ( component_len * count )	13:4:176:213	2762101	4	True				
ANR	2762139	AssignmentExpression	ap = av_malloc ( component_len * count )		2762101	0		=			
ANR	2762140	Identifier	ap		2762101	0					
ANR	2762141	CallExpression	av_malloc ( component_len * count )		2762101	1					
ANR	2762142	Callee	av_malloc		2762101	0					
ANR	2762143	Identifier	av_malloc		2762101	0					
ANR	2762144	ArgumentList	component_len * count		2762101	1					
ANR	2762145	Argument	component_len * count		2762101	0					
ANR	2762146	MultiplicativeExpression	component_len * count		2762101	0		*			
ANR	2762147	Identifier	component_len		2762101	0					
ANR	2762148	Identifier	count		2762101	1					
ANR	2762149	IfStatement	if ( ! ap )		2762101	5					
ANR	2762150	Condition	! ap	15:8:224:226	2762101	0	True				
ANR	2762151	UnaryOperationExpression	! ap		2762101	0					
ANR	2762152	UnaryOperator	!		2762101	0					
ANR	2762153	Identifier	ap		2762101	1					
ANR	2762154	ReturnStatement	return NULL ;	17:8:238:249	2762101	1	True				
ANR	2762155	Identifier	NULL		2762101	0					
ANR	2762156	ExpressionStatement	ap0 = ap	19:4:256:266	2762101	6	True				
ANR	2762157	AssignmentExpression	ap0 = ap		2762101	0		=			
ANR	2762158	Identifier	ap0		2762101	0					
ANR	2762159	Identifier	ap		2762101	1					
ANR	2762160	ExpressionStatement	ap [ 0 ] = '\\0'	21:4:273:285	2762101	7	True				
ANR	2762161	AssignmentExpression	ap [ 0 ] = '\\0'		2762101	0		=			
ANR	2762162	ArrayIndexing	ap [ 0 ]		2762101	0					
ANR	2762163	Identifier	ap		2762101	0					
ANR	2762164	PrimaryExpression	0		2762101	1					
ANR	2762165	PrimaryExpression	'\\0'		2762101	1					
ANR	2762166	ForStatement	for ( i = 0 ; i < count ; i ++ )		2762101	8					
ANR	2762167	ForInit	i = 0 ;	23:9:297:302	2762101	0	True				
ANR	2762168	AssignmentExpression	i = 0		2762101	0		=			
ANR	2762169	Identifier	i		2762101	0					
ANR	2762170	PrimaryExpression	0		2762101	1					
ANR	2762171	Condition	i < count	23:16:304:312	2762101	1	True				
ANR	2762172	RelationalExpression	i < count		2762101	0		<			
ANR	2762173	Identifier	i		2762101	0					
ANR	2762174	Identifier	count		2762101	1					
ANR	2762175	PostIncDecOperationExpression	i ++	23:27:315:317	2762101	2	True				
ANR	2762176	Identifier	i		2762101	0					
ANR	2762177	IncDec	++		2762101	1					
ANR	2762178	CompoundStatement		23:8:264:324	2762101	3					
ANR	2762179	IdentifierDeclStatement	"unsigned l = snprintf ( ap , component_len , ""%f%s"" , dp [ i ] , sep ) ;"	25:8:331:391	2762101	0	True				
ANR	2762180	IdentifierDecl	"l = snprintf ( ap , component_len , ""%f%s"" , dp [ i ] , sep )"		2762101	0					
ANR	2762181	IdentifierDeclType	unsigned		2762101	0					
ANR	2762182	Identifier	l		2762101	1					
ANR	2762183	AssignmentExpression	"l = snprintf ( ap , component_len , ""%f%s"" , dp [ i ] , sep )"		2762101	2		=			
ANR	2762184	Identifier	l		2762101	0					
ANR	2762185	CallExpression	"snprintf ( ap , component_len , ""%f%s"" , dp [ i ] , sep )"		2762101	1					
ANR	2762186	Callee	snprintf		2762101	0					
ANR	2762187	Identifier	snprintf		2762101	0					
ANR	2762188	ArgumentList	ap		2762101	1					
ANR	2762189	Argument	ap		2762101	0					
ANR	2762190	Identifier	ap		2762101	0					
ANR	2762191	Argument	component_len		2762101	1					
ANR	2762192	Identifier	component_len		2762101	0					
ANR	2762193	Argument	"""%f%s"""		2762101	2					
ANR	2762194	PrimaryExpression	"""%f%s"""		2762101	0					
ANR	2762195	Argument	dp [ i ]		2762101	3					
ANR	2762196	ArrayIndexing	dp [ i ]		2762101	0					
ANR	2762197	Identifier	dp		2762101	0					
ANR	2762198	Identifier	i		2762101	1					
ANR	2762199	Argument	sep		2762101	4					
ANR	2762200	Identifier	sep		2762101	0					
ANR	2762201	IfStatement	if ( l >= component_len )		2762101	1					
ANR	2762202	Condition	l >= component_len	27:11:405:422	2762101	0	True				
ANR	2762203	RelationalExpression	l >= component_len		2762101	0		>=			
ANR	2762204	Identifier	l		2762101	0					
ANR	2762205	Identifier	component_len		2762101	1					
ANR	2762206	ReturnStatement	return NULL ;	29:12:438:449	2762101	1	True				
ANR	2762207	Identifier	NULL		2762101	0					
ANR	2762208	ExpressionStatement	ap += l	31:8:460:467	2762101	2	True				
ANR	2762209	AssignmentExpression	ap += l		2762101	0		+=			
ANR	2762210	Identifier	ap		2762101	0					
ANR	2762211	Identifier	l		2762101	1					
ANR	2762212	ExpressionStatement	ap0 [ strlen ( ap0 ) - strlen ( sep ) ] = '\\0'	35:4:481:518	2762101	9	True				
ANR	2762213	AssignmentExpression	ap0 [ strlen ( ap0 ) - strlen ( sep ) ] = '\\0'		2762101	0		=			
ANR	2762214	ArrayIndexing	ap0 [ strlen ( ap0 ) - strlen ( sep ) ]		2762101	0					
ANR	2762215	Identifier	ap0		2762101	0					
ANR	2762216	AdditiveExpression	strlen ( ap0 ) - strlen ( sep )		2762101	1		-			
ANR	2762217	CallExpression	strlen ( ap0 )		2762101	0					
ANR	2762218	Callee	strlen		2762101	0					
ANR	2762219	Identifier	strlen		2762101	0					
ANR	2762220	ArgumentList	ap0		2762101	1					
ANR	2762221	Argument	ap0		2762101	0					
ANR	2762222	Identifier	ap0		2762101	0					
ANR	2762223	CallExpression	strlen ( sep )		2762101	1					
ANR	2762224	Callee	strlen		2762101	0					
ANR	2762225	Identifier	strlen		2762101	0					
ANR	2762226	ArgumentList	sep		2762101	1					
ANR	2762227	Argument	sep		2762101	0					
ANR	2762228	Identifier	sep		2762101	0					
ANR	2762229	PrimaryExpression	'\\0'		2762101	1					
ANR	2762230	ReturnStatement	return ap0 ;	37:4:525:535	2762101	10	True				
ANR	2762231	Identifier	ap0		2762101	0					
ANR	2762232	ReturnType	static char *		2762101	1					
ANR	2762233	Identifier	doubles2str		2762101	2					
ANR	2762234	ParameterList	"double * dp , int count , const char * sep"		2762101	3					
ANR	2762235	Parameter	double * dp	1:25:25:34	2762101	0	True				
ANR	2762236	ParameterType	double *		2762101	0					
ANR	2762237	Identifier	dp		2762101	1					
ANR	2762238	Parameter	int count	1:37:37:45	2762101	1	True				
ANR	2762239	ParameterType	int		2762101	0					
ANR	2762240	Identifier	count		2762101	1					
ANR	2762241	Parameter	const char * sep	1:48:48:62	2762101	2	True				
ANR	2762242	ParameterType	const char *		2762101	0					
ANR	2762243	Identifier	sep		2762101	1					
ANR	2762244	CFGEntryNode	ENTRY		2762101		True				
ANR	2762245	CFGExitNode	EXIT		2762101		True				
ANR	2762246	Symbol	ap0		2762101						
ANR	2762247	Symbol	av_malloc		2762101						
ANR	2762248	Symbol	NULL		2762101						
ANR	2762249	Symbol	count		2762101						
ANR	2762250	Symbol	component_len		2762101						
ANR	2762251	Symbol	i		2762101						
ANR	2762252	Symbol	dp		2762101						
ANR	2762253	Symbol	l		2762101						
ANR	2762254	Symbol	ap		2762101						
ANR	2762255	Symbol	strlen		2762101						
ANR	2762256	Symbol	* dp		2762101						
ANR	2762257	Symbol	* i		2762101						
ANR	2762258	Symbol	* ap0		2762101						
ANR	2762259	Symbol	* strlen		2762101						
ANR	2762260	Symbol	* ap		2762101						
ANR	2762261	Symbol	sep		2762101						
ANR	2762262	Symbol	snprintf		2762101						
