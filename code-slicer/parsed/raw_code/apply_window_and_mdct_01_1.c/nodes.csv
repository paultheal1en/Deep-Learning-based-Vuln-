command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	588011	File	/home/p4ultr4n/workplace/ReVeal/raw_code/apply_window_and_mdct_01_1.c								
ANR	588012	Function	apply_window_and_mdct	1:0:0:2005							
ANR	588013	FunctionDef	"apply_window_and_mdct (vorbis_enc_context * venc , float * * audio , int samples)"		588012	0					
ANR	588014	CompoundStatement		5:0:122:2005	588012	0					
ANR	588015	IdentifierDeclStatement	int channel ;	7:4:129:140	588012	0	True				
ANR	588016	IdentifierDecl	channel		588012	0					
ANR	588017	IdentifierDeclType	int		588012	0					
ANR	588018	Identifier	channel		588012	1					
ANR	588019	IdentifierDeclStatement	const float * win = venc -> win [ 0 ] ;	9:4:147:179	588012	1	True				
ANR	588020	IdentifierDecl	* win = venc -> win [ 0 ]		588012	0					
ANR	588021	IdentifierDeclType	const float *		588012	0					
ANR	588022	Identifier	win		588012	1					
ANR	588023	AssignmentExpression	* win = venc -> win [ 0 ]		588012	2		=			
ANR	588024	Identifier	win		588012	0					
ANR	588025	ArrayIndexing	venc -> win [ 0 ]		588012	1					
ANR	588026	PtrMemberAccess	venc -> win		588012	0					
ANR	588027	Identifier	venc		588012	0					
ANR	588028	Identifier	win		588012	1					
ANR	588029	PrimaryExpression	0		588012	1					
ANR	588030	IdentifierDeclStatement	int window_len = 1 << ( venc -> log2_blocksize [ 0 ] - 1 ) ;	11:4:186:237	588012	2	True				
ANR	588031	IdentifierDecl	window_len = 1 << ( venc -> log2_blocksize [ 0 ] - 1 )		588012	0					
ANR	588032	IdentifierDeclType	int		588012	0					
ANR	588033	Identifier	window_len		588012	1					
ANR	588034	AssignmentExpression	window_len = 1 << ( venc -> log2_blocksize [ 0 ] - 1 )		588012	2		=			
ANR	588035	Identifier	window_len		588012	0					
ANR	588036	ShiftExpression	1 << ( venc -> log2_blocksize [ 0 ] - 1 )		588012	1		<<			
ANR	588037	PrimaryExpression	1		588012	0					
ANR	588038	AdditiveExpression	venc -> log2_blocksize [ 0 ] - 1		588012	1		-			
ANR	588039	ArrayIndexing	venc -> log2_blocksize [ 0 ]		588012	0					
ANR	588040	PtrMemberAccess	venc -> log2_blocksize		588012	0					
ANR	588041	Identifier	venc		588012	0					
ANR	588042	Identifier	log2_blocksize		588012	1					
ANR	588043	PrimaryExpression	0		588012	1					
ANR	588044	PrimaryExpression	1		588012	1					
ANR	588045	IdentifierDeclStatement	float n = ( float ) ( 1 << venc -> log2_blocksize [ 0 ] ) / 4.0 ;	13:4:244:297	588012	3	True				
ANR	588046	IdentifierDecl	n = ( float ) ( 1 << venc -> log2_blocksize [ 0 ] ) / 4.0		588012	0					
ANR	588047	IdentifierDeclType	float		588012	0					
ANR	588048	Identifier	n		588012	1					
ANR	588049	AssignmentExpression	n = ( float ) ( 1 << venc -> log2_blocksize [ 0 ] ) / 4.0		588012	2		=			
ANR	588050	Identifier	n		588012	0					
ANR	588051	MultiplicativeExpression	( float ) ( 1 << venc -> log2_blocksize [ 0 ] ) / 4.0		588012	1		/			
ANR	588052	CastExpression	( float ) ( 1 << venc -> log2_blocksize [ 0 ] )		588012	0					
ANR	588053	CastTarget	float		588012	0					
ANR	588054	ShiftExpression	1 << venc -> log2_blocksize [ 0 ]		588012	1		<<			
ANR	588055	PrimaryExpression	1		588012	0					
ANR	588056	ArrayIndexing	venc -> log2_blocksize [ 0 ]		588012	1					
ANR	588057	PtrMemberAccess	venc -> log2_blocksize		588012	0					
ANR	588058	Identifier	venc		588012	0					
ANR	588059	Identifier	log2_blocksize		588012	1					
ANR	588060	PrimaryExpression	0		588012	1					
ANR	588061	PrimaryExpression	4.0		588012	1					
ANR	588062	IdentifierDeclStatement	AVFloatDSPContext * fdsp = venc -> fdsp ;	15:4:304:340	588012	4	True				
ANR	588063	IdentifierDecl	* fdsp = venc -> fdsp		588012	0					
ANR	588064	IdentifierDeclType	AVFloatDSPContext *		588012	0					
ANR	588065	Identifier	fdsp		588012	1					
ANR	588066	AssignmentExpression	* fdsp = venc -> fdsp		588012	2		=			
ANR	588067	Identifier	fdsp		588012	0					
ANR	588068	PtrMemberAccess	venc -> fdsp		588012	1					
ANR	588069	Identifier	venc		588012	0					
ANR	588070	Identifier	fdsp		588012	1					
ANR	588071	IfStatement	if ( ! venc -> have_saved && ! samples )		588012	5					
ANR	588072	Condition	! venc -> have_saved && ! samples	19:8:353:381	588012	0	True				
ANR	588073	AndExpression	! venc -> have_saved && ! samples		588012	0		&&			
ANR	588074	UnaryOperationExpression	! venc -> have_saved		588012	0					
ANR	588075	UnaryOperator	!		588012	0					
ANR	588076	PtrMemberAccess	venc -> have_saved		588012	1					
ANR	588077	Identifier	venc		588012	0					
ANR	588078	Identifier	have_saved		588012	1					
ANR	588079	UnaryOperationExpression	! samples		588012	1					
ANR	588080	UnaryOperator	!		588012	0					
ANR	588081	Identifier	samples		588012	1					
ANR	588082	ReturnStatement	return 0 ;	21:8:393:401	588012	1	True				
ANR	588083	PrimaryExpression	0		588012	0					
ANR	588084	IfStatement	if ( venc -> have_saved )		588012	6					
ANR	588085	Condition	venc -> have_saved	25:8:414:429	588012	0	True				
ANR	588086	PtrMemberAccess	venc -> have_saved		588012	0					
ANR	588087	Identifier	venc		588012	0					
ANR	588088	Identifier	have_saved		588012	1					
ANR	588089	CompoundStatement		21:26:309:309	588012	1					
ANR	588090	ForStatement	for ( channel = 0 ; channel < venc -> channels ; channel ++ )		588012	0					
ANR	588091	ForInit	channel = 0 ;	27:13:448:459	588012	0	True				
ANR	588092	AssignmentExpression	channel = 0		588012	0		=			
ANR	588093	Identifier	channel		588012	0					
ANR	588094	PrimaryExpression	0		588012	1					
ANR	588095	Condition	channel < venc -> channels	27:26:461:484	588012	1	True				
ANR	588096	RelationalExpression	channel < venc -> channels		588012	0		<			
ANR	588097	Identifier	channel		588012	0					
ANR	588098	PtrMemberAccess	venc -> channels		588012	1					
ANR	588099	Identifier	venc		588012	0					
ANR	588100	Identifier	channels		588012	1					
ANR	588101	PostIncDecOperationExpression	channel ++	27:52:487:495	588012	2	True				
ANR	588102	Identifier	channel		588012	0					
ANR	588103	IncDec	++		588012	1					
ANR	588104	ExpressionStatement	"memcpy ( venc -> samples + channel * window_len * 2 , venc -> saved + channel * window_len , sizeof ( float ) * window_len )"	29:12:511:643	588012	3	True				
ANR	588105	CallExpression	"memcpy ( venc -> samples + channel * window_len * 2 , venc -> saved + channel * window_len , sizeof ( float ) * window_len )"		588012	0					
ANR	588106	Callee	memcpy		588012	0					
ANR	588107	Identifier	memcpy		588012	0					
ANR	588108	ArgumentList	venc -> samples + channel * window_len * 2		588012	1					
ANR	588109	Argument	venc -> samples + channel * window_len * 2		588012	0					
ANR	588110	AdditiveExpression	venc -> samples + channel * window_len * 2		588012	0		+			
ANR	588111	PtrMemberAccess	venc -> samples		588012	0					
ANR	588112	Identifier	venc		588012	0					
ANR	588113	Identifier	samples		588012	1					
ANR	588114	MultiplicativeExpression	channel * window_len * 2		588012	1		*			
ANR	588115	Identifier	channel		588012	0					
ANR	588116	MultiplicativeExpression	window_len * 2		588012	1		*			
ANR	588117	Identifier	window_len		588012	0					
ANR	588118	PrimaryExpression	2		588012	1					
ANR	588119	Argument	venc -> saved + channel * window_len		588012	1					
ANR	588120	AdditiveExpression	venc -> saved + channel * window_len		588012	0		+			
ANR	588121	PtrMemberAccess	venc -> saved		588012	0					
ANR	588122	Identifier	venc		588012	0					
ANR	588123	Identifier	saved		588012	1					
ANR	588124	MultiplicativeExpression	channel * window_len		588012	1		*			
ANR	588125	Identifier	channel		588012	0					
ANR	588126	Identifier	window_len		588012	1					
ANR	588127	Argument	sizeof ( float ) * window_len		588012	2					
ANR	588128	MultiplicativeExpression	sizeof ( float ) * window_len		588012	0		*			
ANR	588129	SizeofExpression	sizeof ( float )		588012	0					
ANR	588130	Sizeof	sizeof		588012	0					
ANR	588131	SizeofOperand	float		588012	1					
ANR	588132	Identifier	window_len		588012	1					
ANR	588133	ElseStatement	else		588012	0					
ANR	588134	CompoundStatement		29:11:534:534	588012	0					
ANR	588135	ForStatement	for ( channel = 0 ; channel < venc -> channels ; channel ++ )		588012	0					
ANR	588136	ForInit	channel = 0 ;	35:13:673:684	588012	0	True				
ANR	588137	AssignmentExpression	channel = 0		588012	0		=			
ANR	588138	Identifier	channel		588012	0					
ANR	588139	PrimaryExpression	0		588012	1					
ANR	588140	Condition	channel < venc -> channels	35:26:686:709	588012	1	True				
ANR	588141	RelationalExpression	channel < venc -> channels		588012	0		<			
ANR	588142	Identifier	channel		588012	0					
ANR	588143	PtrMemberAccess	venc -> channels		588012	1					
ANR	588144	Identifier	venc		588012	0					
ANR	588145	Identifier	channels		588012	1					
ANR	588146	PostIncDecOperationExpression	channel ++	35:52:712:720	588012	2	True				
ANR	588147	Identifier	channel		588012	0					
ANR	588148	IncDec	++		588012	1					
ANR	588149	ExpressionStatement	"memset ( venc -> samples + channel * window_len * 2 , 0 , sizeof ( float ) * window_len )"	37:12:736:835	588012	3	True				
ANR	588150	CallExpression	"memset ( venc -> samples + channel * window_len * 2 , 0 , sizeof ( float ) * window_len )"		588012	0					
ANR	588151	Callee	memset		588012	0					
ANR	588152	Identifier	memset		588012	0					
ANR	588153	ArgumentList	venc -> samples + channel * window_len * 2		588012	1					
ANR	588154	Argument	venc -> samples + channel * window_len * 2		588012	0					
ANR	588155	AdditiveExpression	venc -> samples + channel * window_len * 2		588012	0		+			
ANR	588156	PtrMemberAccess	venc -> samples		588012	0					
ANR	588157	Identifier	venc		588012	0					
ANR	588158	Identifier	samples		588012	1					
ANR	588159	MultiplicativeExpression	channel * window_len * 2		588012	1		*			
ANR	588160	Identifier	channel		588012	0					
ANR	588161	MultiplicativeExpression	window_len * 2		588012	1		*			
ANR	588162	Identifier	window_len		588012	0					
ANR	588163	PrimaryExpression	2		588012	1					
ANR	588164	Argument	0		588012	1					
ANR	588165	PrimaryExpression	0		588012	0					
ANR	588166	Argument	sizeof ( float ) * window_len		588012	2					
ANR	588167	MultiplicativeExpression	sizeof ( float ) * window_len		588012	0		*			
ANR	588168	SizeofExpression	sizeof ( float )		588012	0					
ANR	588169	Sizeof	sizeof		588012	0					
ANR	588170	SizeofOperand	float		588012	1					
ANR	588171	Identifier	window_len		588012	1					
ANR	588172	IfStatement	if ( samples )		588012	7					
ANR	588173	Condition	samples	45:8:855:861	588012	0	True				
ANR	588174	Identifier	samples		588012	0					
ANR	588175	CompoundStatement		41:17:741:741	588012	1					
ANR	588176	ForStatement	for ( channel = 0 ; channel < venc -> channels ; channel ++ )		588012	0					
ANR	588177	ForInit	channel = 0 ;	47:13:880:891	588012	0	True				
ANR	588178	AssignmentExpression	channel = 0		588012	0		=			
ANR	588179	Identifier	channel		588012	0					
ANR	588180	PrimaryExpression	0		588012	1					
ANR	588181	Condition	channel < venc -> channels	47:26:893:916	588012	1	True				
ANR	588182	RelationalExpression	channel < venc -> channels		588012	0		<			
ANR	588183	Identifier	channel		588012	0					
ANR	588184	PtrMemberAccess	venc -> channels		588012	1					
ANR	588185	Identifier	venc		588012	0					
ANR	588186	Identifier	channels		588012	1					
ANR	588187	PostIncDecOperationExpression	channel ++	47:52:919:927	588012	2	True				
ANR	588188	Identifier	channel		588012	0					
ANR	588189	IncDec	++		588012	1					
ANR	588190	CompoundStatement		45:12:822:891	588012	3					
ANR	588191	IdentifierDeclStatement	float * offset = venc -> samples + channel * window_len * 2 + window_len ;	49:12:945:1014	588012	0	True				
ANR	588192	IdentifierDecl	* offset = venc -> samples + channel * window_len * 2 + window_len		588012	0					
ANR	588193	IdentifierDeclType	float *		588012	0					
ANR	588194	Identifier	offset		588012	1					
ANR	588195	AssignmentExpression	* offset = venc -> samples + channel * window_len * 2 + window_len		588012	2		=			
ANR	588196	Identifier	offset		588012	0					
ANR	588197	AdditiveExpression	venc -> samples + channel * window_len * 2 + window_len		588012	1		+			
ANR	588198	PtrMemberAccess	venc -> samples		588012	0					
ANR	588199	Identifier	venc		588012	0					
ANR	588200	Identifier	samples		588012	1					
ANR	588201	AdditiveExpression	channel * window_len * 2 + window_len		588012	1		+			
ANR	588202	MultiplicativeExpression	channel * window_len * 2		588012	0		*			
ANR	588203	Identifier	channel		588012	0					
ANR	588204	MultiplicativeExpression	window_len * 2		588012	1		*			
ANR	588205	Identifier	window_len		588012	0					
ANR	588206	PrimaryExpression	2		588012	1					
ANR	588207	Identifier	window_len		588012	1					
ANR	588208	ExpressionStatement	"fdsp -> vector_fmul_reverse ( offset , audio [ channel ] , win , samples )"	53:12:1031:1094	588012	1	True				
ANR	588209	CallExpression	"fdsp -> vector_fmul_reverse ( offset , audio [ channel ] , win , samples )"		588012	0					
ANR	588210	Callee	fdsp -> vector_fmul_reverse		588012	0					
ANR	588211	PtrMemberAccess	fdsp -> vector_fmul_reverse		588012	0					
ANR	588212	Identifier	fdsp		588012	0					
ANR	588213	Identifier	vector_fmul_reverse		588012	1					
ANR	588214	ArgumentList	offset		588012	1					
ANR	588215	Argument	offset		588012	0					
ANR	588216	Identifier	offset		588012	0					
ANR	588217	Argument	audio [ channel ]		588012	1					
ANR	588218	ArrayIndexing	audio [ channel ]		588012	0					
ANR	588219	Identifier	audio		588012	0					
ANR	588220	Identifier	channel		588012	1					
ANR	588221	Argument	win		588012	2					
ANR	588222	Identifier	win		588012	0					
ANR	588223	Argument	samples		588012	3					
ANR	588224	Identifier	samples		588012	0					
ANR	588225	ExpressionStatement	"fdsp -> vector_fmul_scalar ( offset , offset , 1 / n , samples )"	55:12:1109:1163	588012	2	True				
ANR	588226	CallExpression	"fdsp -> vector_fmul_scalar ( offset , offset , 1 / n , samples )"		588012	0					
ANR	588227	Callee	fdsp -> vector_fmul_scalar		588012	0					
ANR	588228	PtrMemberAccess	fdsp -> vector_fmul_scalar		588012	0					
ANR	588229	Identifier	fdsp		588012	0					
ANR	588230	Identifier	vector_fmul_scalar		588012	1					
ANR	588231	ArgumentList	offset		588012	1					
ANR	588232	Argument	offset		588012	0					
ANR	588233	Identifier	offset		588012	0					
ANR	588234	Argument	offset		588012	1					
ANR	588235	Identifier	offset		588012	0					
ANR	588236	Argument	1 / n		588012	2					
ANR	588237	MultiplicativeExpression	1 / n		588012	0		/			
ANR	588238	PrimaryExpression	1		588012	0					
ANR	588239	Identifier	n		588012	1					
ANR	588240	Argument	samples		588012	3					
ANR	588241	Identifier	samples		588012	0					
ANR	588242	ElseStatement	else		588012	0					
ANR	588243	CompoundStatement		55:11:1065:1065	588012	0					
ANR	588244	ForStatement	for ( channel = 0 ; channel < venc -> channels ; channel ++ )		588012	0					
ANR	588245	ForInit	channel = 0 ;	61:13:1204:1215	588012	0	True				
ANR	588246	AssignmentExpression	channel = 0		588012	0		=			
ANR	588247	Identifier	channel		588012	0					
ANR	588248	PrimaryExpression	0		588012	1					
ANR	588249	Condition	channel < venc -> channels	61:26:1217:1240	588012	1	True				
ANR	588250	RelationalExpression	channel < venc -> channels		588012	0		<			
ANR	588251	Identifier	channel		588012	0					
ANR	588252	PtrMemberAccess	venc -> channels		588012	1					
ANR	588253	Identifier	venc		588012	0					
ANR	588254	Identifier	channels		588012	1					
ANR	588255	PostIncDecOperationExpression	channel ++	61:52:1243:1251	588012	2	True				
ANR	588256	Identifier	channel		588012	0					
ANR	588257	IncDec	++		588012	1					
ANR	588258	ExpressionStatement	"memset ( venc -> samples + channel * window_len * 2 + window_len , 0 , sizeof ( float ) * window_len )"	63:12:1267:1379	588012	3	True				
ANR	588259	CallExpression	"memset ( venc -> samples + channel * window_len * 2 + window_len , 0 , sizeof ( float ) * window_len )"		588012	0					
ANR	588260	Callee	memset		588012	0					
ANR	588261	Identifier	memset		588012	0					
ANR	588262	ArgumentList	venc -> samples + channel * window_len * 2 + window_len		588012	1					
ANR	588263	Argument	venc -> samples + channel * window_len * 2 + window_len		588012	0					
ANR	588264	AdditiveExpression	venc -> samples + channel * window_len * 2 + window_len		588012	0		+			
ANR	588265	PtrMemberAccess	venc -> samples		588012	0					
ANR	588266	Identifier	venc		588012	0					
ANR	588267	Identifier	samples		588012	1					
ANR	588268	AdditiveExpression	channel * window_len * 2 + window_len		588012	1		+			
ANR	588269	MultiplicativeExpression	channel * window_len * 2		588012	0		*			
ANR	588270	Identifier	channel		588012	0					
ANR	588271	MultiplicativeExpression	window_len * 2		588012	1		*			
ANR	588272	Identifier	window_len		588012	0					
ANR	588273	PrimaryExpression	2		588012	1					
ANR	588274	Identifier	window_len		588012	1					
ANR	588275	Argument	0		588012	1					
ANR	588276	PrimaryExpression	0		588012	0					
ANR	588277	Argument	sizeof ( float ) * window_len		588012	2					
ANR	588278	MultiplicativeExpression	sizeof ( float ) * window_len		588012	0		*			
ANR	588279	SizeofExpression	sizeof ( float )		588012	0					
ANR	588280	Sizeof	sizeof		588012	0					
ANR	588281	SizeofOperand	float		588012	1					
ANR	588282	Identifier	window_len		588012	1					
ANR	588283	ForStatement	for ( channel = 0 ; channel < venc -> channels ; channel ++ )		588012	8					
ANR	588284	ForInit	channel = 0 ;	71:9:1400:1411	588012	0	True				
ANR	588285	AssignmentExpression	channel = 0		588012	0		=			
ANR	588286	Identifier	channel		588012	0					
ANR	588287	PrimaryExpression	0		588012	1					
ANR	588288	Condition	channel < venc -> channels	71:22:1413:1436	588012	1	True				
ANR	588289	RelationalExpression	channel < venc -> channels		588012	0		<			
ANR	588290	Identifier	channel		588012	0					
ANR	588291	PtrMemberAccess	venc -> channels		588012	1					
ANR	588292	Identifier	venc		588012	0					
ANR	588293	Identifier	channels		588012	1					
ANR	588294	PostIncDecOperationExpression	channel ++	71:48:1439:1447	588012	2	True				
ANR	588295	Identifier	channel		588012	0					
ANR	588296	IncDec	++		588012	1					
ANR	588297	ExpressionStatement	"venc -> mdct [ 0 ] . mdct_calc ( & venc -> mdct [ 0 ] , venc -> coeffs + channel * window_len , venc -> samples + channel * window_len * 2 )"	73:8:1459:1599	588012	3	True				
ANR	588298	CallExpression	"venc -> mdct [ 0 ] . mdct_calc ( & venc -> mdct [ 0 ] , venc -> coeffs + channel * window_len , venc -> samples + channel * window_len * 2 )"		588012	0					
ANR	588299	Callee	venc -> mdct [ 0 ] . mdct_calc		588012	0					
ANR	588300	MemberAccess	venc -> mdct [ 0 ] . mdct_calc		588012	0					
ANR	588301	ArrayIndexing	venc -> mdct [ 0 ]		588012	0					
ANR	588302	PtrMemberAccess	venc -> mdct		588012	0					
ANR	588303	Identifier	venc		588012	0					
ANR	588304	Identifier	mdct		588012	1					
ANR	588305	PrimaryExpression	0		588012	1					
ANR	588306	Identifier	mdct_calc		588012	1					
ANR	588307	ArgumentList	& venc -> mdct [ 0 ]		588012	1					
ANR	588308	Argument	& venc -> mdct [ 0 ]		588012	0					
ANR	588309	UnaryOperationExpression	& venc -> mdct [ 0 ]		588012	0					
ANR	588310	UnaryOperator	&		588012	0					
ANR	588311	ArrayIndexing	venc -> mdct [ 0 ]		588012	1					
ANR	588312	PtrMemberAccess	venc -> mdct		588012	0					
ANR	588313	Identifier	venc		588012	0					
ANR	588314	Identifier	mdct		588012	1					
ANR	588315	PrimaryExpression	0		588012	1					
ANR	588316	Argument	venc -> coeffs + channel * window_len		588012	1					
ANR	588317	AdditiveExpression	venc -> coeffs + channel * window_len		588012	0		+			
ANR	588318	PtrMemberAccess	venc -> coeffs		588012	0					
ANR	588319	Identifier	venc		588012	0					
ANR	588320	Identifier	coeffs		588012	1					
ANR	588321	MultiplicativeExpression	channel * window_len		588012	1		*			
ANR	588322	Identifier	channel		588012	0					
ANR	588323	Identifier	window_len		588012	1					
ANR	588324	Argument	venc -> samples + channel * window_len * 2		588012	2					
ANR	588325	AdditiveExpression	venc -> samples + channel * window_len * 2		588012	0		+			
ANR	588326	PtrMemberAccess	venc -> samples		588012	0					
ANR	588327	Identifier	venc		588012	0					
ANR	588328	Identifier	samples		588012	1					
ANR	588329	MultiplicativeExpression	channel * window_len * 2		588012	1		*			
ANR	588330	Identifier	channel		588012	0					
ANR	588331	MultiplicativeExpression	window_len * 2		588012	1		*			
ANR	588332	Identifier	window_len		588012	0					
ANR	588333	PrimaryExpression	2		588012	1					
ANR	588334	IfStatement	if ( samples )		588012	9					
ANR	588335	Condition	samples	79:8:1612:1618	588012	0	True				
ANR	588336	Identifier	samples		588012	0					
ANR	588337	CompoundStatement		75:17:1498:1498	588012	1					
ANR	588338	ForStatement	for ( channel = 0 ; channel < venc -> channels ; channel ++ )		588012	0					
ANR	588339	ForInit	channel = 0 ;	81:13:1637:1648	588012	0	True				
ANR	588340	AssignmentExpression	channel = 0		588012	0		=			
ANR	588341	Identifier	channel		588012	0					
ANR	588342	PrimaryExpression	0		588012	1					
ANR	588343	Condition	channel < venc -> channels	81:26:1650:1673	588012	1	True				
ANR	588344	RelationalExpression	channel < venc -> channels		588012	0		<			
ANR	588345	Identifier	channel		588012	0					
ANR	588346	PtrMemberAccess	venc -> channels		588012	1					
ANR	588347	Identifier	venc		588012	0					
ANR	588348	Identifier	channels		588012	1					
ANR	588349	PostIncDecOperationExpression	channel ++	81:52:1676:1684	588012	2	True				
ANR	588350	Identifier	channel		588012	0					
ANR	588351	IncDec	++		588012	1					
ANR	588352	CompoundStatement		79:12:1579:1629	588012	3					
ANR	588353	IdentifierDeclStatement	float * offset = venc -> saved + channel * window_len ;	83:12:1702:1752	588012	0	True				
ANR	588354	IdentifierDecl	* offset = venc -> saved + channel * window_len		588012	0					
ANR	588355	IdentifierDeclType	float *		588012	0					
ANR	588356	Identifier	offset		588012	1					
ANR	588357	AssignmentExpression	* offset = venc -> saved + channel * window_len		588012	2		=			
ANR	588358	Identifier	offset		588012	0					
ANR	588359	AdditiveExpression	venc -> saved + channel * window_len		588012	1		+			
ANR	588360	PtrMemberAccess	venc -> saved		588012	0					
ANR	588361	Identifier	venc		588012	0					
ANR	588362	Identifier	saved		588012	1					
ANR	588363	MultiplicativeExpression	channel * window_len		588012	1		*			
ANR	588364	Identifier	channel		588012	0					
ANR	588365	Identifier	window_len		588012	1					
ANR	588366	ExpressionStatement	"fdsp -> vector_fmul ( offset , audio [ channel ] , win , samples )"	87:12:1769:1824	588012	1	True				
ANR	588367	CallExpression	"fdsp -> vector_fmul ( offset , audio [ channel ] , win , samples )"		588012	0					
ANR	588368	Callee	fdsp -> vector_fmul		588012	0					
ANR	588369	PtrMemberAccess	fdsp -> vector_fmul		588012	0					
ANR	588370	Identifier	fdsp		588012	0					
ANR	588371	Identifier	vector_fmul		588012	1					
ANR	588372	ArgumentList	offset		588012	1					
ANR	588373	Argument	offset		588012	0					
ANR	588374	Identifier	offset		588012	0					
ANR	588375	Argument	audio [ channel ]		588012	1					
ANR	588376	ArrayIndexing	audio [ channel ]		588012	0					
ANR	588377	Identifier	audio		588012	0					
ANR	588378	Identifier	channel		588012	1					
ANR	588379	Argument	win		588012	2					
ANR	588380	Identifier	win		588012	0					
ANR	588381	Argument	samples		588012	3					
ANR	588382	Identifier	samples		588012	0					
ANR	588383	ExpressionStatement	"fdsp -> vector_fmul_scalar ( offset , offset , 1 / n , samples )"	89:12:1839:1893	588012	2	True				
ANR	588384	CallExpression	"fdsp -> vector_fmul_scalar ( offset , offset , 1 / n , samples )"		588012	0					
ANR	588385	Callee	fdsp -> vector_fmul_scalar		588012	0					
ANR	588386	PtrMemberAccess	fdsp -> vector_fmul_scalar		588012	0					
ANR	588387	Identifier	fdsp		588012	0					
ANR	588388	Identifier	vector_fmul_scalar		588012	1					
ANR	588389	ArgumentList	offset		588012	1					
ANR	588390	Argument	offset		588012	0					
ANR	588391	Identifier	offset		588012	0					
ANR	588392	Argument	offset		588012	1					
ANR	588393	Identifier	offset		588012	0					
ANR	588394	Argument	1 / n		588012	2					
ANR	588395	MultiplicativeExpression	1 / n		588012	0		/			
ANR	588396	PrimaryExpression	1		588012	0					
ANR	588397	Identifier	n		588012	1					
ANR	588398	Argument	samples		588012	3					
ANR	588399	Identifier	samples		588012	0					
ANR	588400	ExpressionStatement	venc -> have_saved = 1	93:8:1915:1935	588012	1	True				
ANR	588401	AssignmentExpression	venc -> have_saved = 1		588012	0		=			
ANR	588402	PtrMemberAccess	venc -> have_saved		588012	0					
ANR	588403	Identifier	venc		588012	0					
ANR	588404	Identifier	have_saved		588012	1					
ANR	588405	PrimaryExpression	1		588012	1					
ANR	588406	ElseStatement	else		588012	0					
ANR	588407	CompoundStatement		91:11:1826:1826	588012	0					
ANR	588408	ExpressionStatement	venc -> have_saved = 0	97:8:1960:1980	588012	0	True				
ANR	588409	AssignmentExpression	venc -> have_saved = 0		588012	0		=			
ANR	588410	PtrMemberAccess	venc -> have_saved		588012	0					
ANR	588411	Identifier	venc		588012	0					
ANR	588412	Identifier	have_saved		588012	1					
ANR	588413	PrimaryExpression	0		588012	1					
ANR	588414	ReturnStatement	return 1 ;	101:4:1994:2002	588012	10	True				
ANR	588415	PrimaryExpression	1		588012	0					
ANR	588416	ReturnType	static int		588012	1					
ANR	588417	Identifier	apply_window_and_mdct		588012	2					
ANR	588418	ParameterList	"vorbis_enc_context * venc , float * * audio , int samples"		588012	3					
ANR	588419	Parameter	vorbis_enc_context * venc	1:33:33:56	588012	0	True				
ANR	588420	ParameterType	vorbis_enc_context *		588012	0					
ANR	588421	Identifier	venc		588012	1					
ANR	588422	Parameter	float * * audio	3:33:93:105	588012	1	True				
ANR	588423	ParameterType	float * *		588012	0					
ANR	588424	Identifier	audio		588012	1					
ANR	588425	Parameter	int samples	3:48:108:118	588012	2	True				
ANR	588426	ParameterType	int		588012	0					
ANR	588427	Identifier	samples		588012	1					
ANR	588428	CFGEntryNode	ENTRY		588012		True				
ANR	588429	CFGExitNode	EXIT		588012		True				
ANR	588430	Symbol	venc -> win		588012						
ANR	588431	Symbol	channel		588012						
ANR	588432	Symbol	venc -> log2_blocksize		588012						
ANR	588433	Symbol	* venc -> log2_blocksize		588012						
ANR	588434	Symbol	venc -> channels		588012						
ANR	588435	Symbol	* * venc		588012						
ANR	588436	Symbol	* audio		588012						
ANR	588437	Symbol	window_len		588012						
ANR	588438	Symbol	venc -> fdsp		588012						
ANR	588439	Symbol	venc		588012						
ANR	588440	Symbol	venc -> samples		588012						
ANR	588441	Symbol	* venc -> mdct		588012						
ANR	588442	Symbol	venc -> mdct		588012						
ANR	588443	Symbol	venc -> coeffs		588012						
ANR	588444	Symbol	audio		588012						
ANR	588445	Symbol	win		588012						
ANR	588446	Symbol	offset		588012						
ANR	588447	Symbol	* channel		588012						
ANR	588448	Symbol	venc -> have_saved		588012						
ANR	588449	Symbol	* venc -> win		588012						
ANR	588450	Symbol	samples		588012						
ANR	588451	Symbol	n		588012						
ANR	588452	Symbol	fdsp		588012						
ANR	588453	Symbol	venc -> saved		588012						
ANR	588454	Symbol	* venc		588012						
