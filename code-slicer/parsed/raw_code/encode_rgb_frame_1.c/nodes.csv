command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3037064	File	/home/p4ultr4n/workplace/ReVeal/raw_code/encode_rgb_frame_1.c								
ANR	3037065	Function	encode_rgb_frame	1:0:0:1858							
ANR	3037066	FunctionDef	"encode_rgb_frame (FFV1Context * s , uint8_t * src [ 3 ] , int w , int h , int stride [ 3 ])"		3037065	0					
ANR	3037067	CompoundStatement		1:90:90:1858	3037065	0					
ANR	3037068	IdentifierDeclStatement	"int x , y , p , i ;"	3:4:97:111	3037065	0	True				
ANR	3037069	IdentifierDecl	x		3037065	0					
ANR	3037070	IdentifierDeclType	int		3037065	0					
ANR	3037071	Identifier	x		3037065	1					
ANR	3037072	IdentifierDecl	y		3037065	1					
ANR	3037073	IdentifierDeclType	int		3037065	0					
ANR	3037074	Identifier	y		3037065	1					
ANR	3037075	IdentifierDecl	p		3037065	2					
ANR	3037076	IdentifierDeclType	int		3037065	0					
ANR	3037077	Identifier	p		3037065	1					
ANR	3037078	IdentifierDecl	i		3037065	3					
ANR	3037079	IdentifierDeclType	int		3037065	0					
ANR	3037080	Identifier	i		3037065	1					
ANR	3037081	IdentifierDeclStatement	const int ring_size = s -> avctx -> context_model ? 3 : 2 ;	5:4:118:170	3037065	1	True				
ANR	3037082	IdentifierDecl	ring_size = s -> avctx -> context_model ? 3 : 2		3037065	0					
ANR	3037083	IdentifierDeclType	const int		3037065	0					
ANR	3037084	Identifier	ring_size		3037065	1					
ANR	3037085	AssignmentExpression	ring_size = s -> avctx -> context_model ? 3 : 2		3037065	2		=			
ANR	3037086	Identifier	ring_size		3037065	0					
ANR	3037087	ConditionalExpression	s -> avctx -> context_model ? 3 : 2		3037065	1					
ANR	3037088	Condition	s -> avctx -> context_model		3037065	0					
ANR	3037089	PtrMemberAccess	s -> avctx -> context_model		3037065	0					
ANR	3037090	PtrMemberAccess	s -> avctx		3037065	0					
ANR	3037091	Identifier	s		3037065	0					
ANR	3037092	Identifier	avctx		3037065	1					
ANR	3037093	Identifier	context_model		3037065	1					
ANR	3037094	PrimaryExpression	3		3037065	1					
ANR	3037095	PrimaryExpression	2		3037065	2					
ANR	3037096	ExpressionStatement	int16_t * sample [ 4 ] [ 3 ]	7:4:177:198	3037065	2	True				
ANR	3037097	MultiplicativeExpression	int16_t * sample [ 4 ] [ 3 ]		3037065	0		*			
ANR	3037098	Identifier	int16_t		3037065	0					
ANR	3037099	ArrayIndexing	sample [ 4 ] [ 3 ]		3037065	1					
ANR	3037100	ArrayIndexing	sample [ 4 ]		3037065	0					
ANR	3037101	Identifier	sample		3037065	0					
ANR	3037102	PrimaryExpression	4		3037065	1					
ANR	3037103	PrimaryExpression	3		3037065	1					
ANR	3037104	IdentifierDeclStatement	int lbd = s -> avctx -> bits_per_raw_sample <= 8 ;	9:4:205:249	3037065	3	True				
ANR	3037105	IdentifierDecl	lbd = s -> avctx -> bits_per_raw_sample <= 8		3037065	0					
ANR	3037106	IdentifierDeclType	int		3037065	0					
ANR	3037107	Identifier	lbd		3037065	1					
ANR	3037108	AssignmentExpression	lbd = s -> avctx -> bits_per_raw_sample <= 8		3037065	2		=			
ANR	3037109	Identifier	lbd		3037065	0					
ANR	3037110	RelationalExpression	s -> avctx -> bits_per_raw_sample <= 8		3037065	1		<=			
ANR	3037111	PtrMemberAccess	s -> avctx -> bits_per_raw_sample		3037065	0					
ANR	3037112	PtrMemberAccess	s -> avctx		3037065	0					
ANR	3037113	Identifier	s		3037065	0					
ANR	3037114	Identifier	avctx		3037065	1					
ANR	3037115	Identifier	bits_per_raw_sample		3037065	1					
ANR	3037116	PrimaryExpression	8		3037065	1					
ANR	3037117	IdentifierDeclStatement	int bits = s -> avctx -> bits_per_raw_sample > 0 ? s -> avctx -> bits_per_raw_sample : 8 ;	11:4:256:335	3037065	4	True				
ANR	3037118	IdentifierDecl	bits = s -> avctx -> bits_per_raw_sample > 0 ? s -> avctx -> bits_per_raw_sample : 8		3037065	0					
ANR	3037119	IdentifierDeclType	int		3037065	0					
ANR	3037120	Identifier	bits		3037065	1					
ANR	3037121	AssignmentExpression	bits = s -> avctx -> bits_per_raw_sample > 0 ? s -> avctx -> bits_per_raw_sample : 8		3037065	2		=			
ANR	3037122	Identifier	bits		3037065	0					
ANR	3037123	ConditionalExpression	s -> avctx -> bits_per_raw_sample > 0 ? s -> avctx -> bits_per_raw_sample : 8		3037065	1					
ANR	3037124	Condition	s -> avctx -> bits_per_raw_sample > 0		3037065	0					
ANR	3037125	RelationalExpression	s -> avctx -> bits_per_raw_sample > 0		3037065	0		>			
ANR	3037126	PtrMemberAccess	s -> avctx -> bits_per_raw_sample		3037065	0					
ANR	3037127	PtrMemberAccess	s -> avctx		3037065	0					
ANR	3037128	Identifier	s		3037065	0					
ANR	3037129	Identifier	avctx		3037065	1					
ANR	3037130	Identifier	bits_per_raw_sample		3037065	1					
ANR	3037131	PrimaryExpression	0		3037065	1					
ANR	3037132	PtrMemberAccess	s -> avctx -> bits_per_raw_sample		3037065	1					
ANR	3037133	PtrMemberAccess	s -> avctx		3037065	0					
ANR	3037134	Identifier	s		3037065	0					
ANR	3037135	Identifier	avctx		3037065	1					
ANR	3037136	Identifier	bits_per_raw_sample		3037065	1					
ANR	3037137	PrimaryExpression	8		3037065	2					
ANR	3037138	IdentifierDeclStatement	int offset = 1 << bits ;	13:4:342:363	3037065	5	True				
ANR	3037139	IdentifierDecl	offset = 1 << bits		3037065	0					
ANR	3037140	IdentifierDeclType	int		3037065	0					
ANR	3037141	Identifier	offset		3037065	1					
ANR	3037142	AssignmentExpression	offset = 1 << bits		3037065	2		=			
ANR	3037143	Identifier	offset		3037065	0					
ANR	3037144	ShiftExpression	1 << bits		3037065	1		<<			
ANR	3037145	PrimaryExpression	1		3037065	0					
ANR	3037146	Identifier	bits		3037065	1					
ANR	3037147	ExpressionStatement	s -> run_index = 0	15:4:370:384	3037065	6	True				
ANR	3037148	AssignmentExpression	s -> run_index = 0		3037065	0		=			
ANR	3037149	PtrMemberAccess	s -> run_index		3037065	0					
ANR	3037150	Identifier	s		3037065	0					
ANR	3037151	Identifier	run_index		3037065	1					
ANR	3037152	PrimaryExpression	0		3037065	1					
ANR	3037153	ExpressionStatement	"memset ( s -> sample_buffer , 0 , ring_size * 4 * ( w + 6 ) * sizeof ( * s -> sample_buffer ) )"	19:4:393:465	3037065	7	True				
ANR	3037154	CallExpression	"memset ( s -> sample_buffer , 0 , ring_size * 4 * ( w + 6 ) * sizeof ( * s -> sample_buffer ) )"		3037065	0					
ANR	3037155	Callee	memset		3037065	0					
ANR	3037156	Identifier	memset		3037065	0					
ANR	3037157	ArgumentList	s -> sample_buffer		3037065	1					
ANR	3037158	Argument	s -> sample_buffer		3037065	0					
ANR	3037159	PtrMemberAccess	s -> sample_buffer		3037065	0					
ANR	3037160	Identifier	s		3037065	0					
ANR	3037161	Identifier	sample_buffer		3037065	1					
ANR	3037162	Argument	0		3037065	1					
ANR	3037163	PrimaryExpression	0		3037065	0					
ANR	3037164	Argument	ring_size * 4 * ( w + 6 ) * sizeof ( * s -> sample_buffer )		3037065	2					
ANR	3037165	MultiplicativeExpression	ring_size * 4 * ( w + 6 ) * sizeof ( * s -> sample_buffer )		3037065	0		*			
ANR	3037166	Identifier	ring_size		3037065	0					
ANR	3037167	MultiplicativeExpression	4 * ( w + 6 ) * sizeof ( * s -> sample_buffer )		3037065	1		*			
ANR	3037168	PrimaryExpression	4		3037065	0					
ANR	3037169	MultiplicativeExpression	( w + 6 ) * sizeof ( * s -> sample_buffer )		3037065	1		*			
ANR	3037170	AdditiveExpression	w + 6		3037065	0		+			
ANR	3037171	Identifier	w		3037065	0					
ANR	3037172	PrimaryExpression	6		3037065	1					
ANR	3037173	SizeofExpression	sizeof ( * s -> sample_buffer )		3037065	1					
ANR	3037174	Sizeof	sizeof		3037065	0					
ANR	3037175	UnaryOperationExpression	* s -> sample_buffer		3037065	1					
ANR	3037176	UnaryOperator	*		3037065	0					
ANR	3037177	PtrMemberAccess	s -> sample_buffer		3037065	1					
ANR	3037178	Identifier	s		3037065	0					
ANR	3037179	Identifier	sample_buffer		3037065	1					
ANR	3037180	ForStatement	for ( y = 0 ; y < h ; y ++ )		3037065	8					
ANR	3037181	ForInit	y = 0 ;	23:8:478:481	3037065	0	True				
ANR	3037182	AssignmentExpression	y = 0		3037065	0		=			
ANR	3037183	Identifier	y		3037065	0					
ANR	3037184	PrimaryExpression	0		3037065	1					
ANR	3037185	Condition	y < h	23:13:483:485	3037065	1	True				
ANR	3037186	RelationalExpression	y < h		3037065	0		<			
ANR	3037187	Identifier	y		3037065	0					
ANR	3037188	Identifier	h		3037065	1					
ANR	3037189	PostIncDecOperationExpression	y ++	23:18:488:490	3037065	2	True				
ANR	3037190	Identifier	y		3037065	0					
ANR	3037191	IncDec	++		3037065	1					
ANR	3037192	CompoundStatement		23:22:401:401	3037065	3					
ANR	3037193	ForStatement	for ( i = 0 ; i < ring_size ; i ++ )		3037065	0					
ANR	3037194	ForInit	i = 0 ;	25:12:507:510	3037065	0	True				
ANR	3037195	AssignmentExpression	i = 0		3037065	0		=			
ANR	3037196	Identifier	i		3037065	0					
ANR	3037197	PrimaryExpression	0		3037065	1					
ANR	3037198	Condition	i < ring_size	25:17:512:522	3037065	1	True				
ANR	3037199	RelationalExpression	i < ring_size		3037065	0		<			
ANR	3037200	Identifier	i		3037065	0					
ANR	3037201	Identifier	ring_size		3037065	1					
ANR	3037202	PostIncDecOperationExpression	i ++	25:30:525:527	3037065	2	True				
ANR	3037203	Identifier	i		3037065	0					
ANR	3037204	IncDec	++		3037065	1					
ANR	3037205	ForStatement	for ( p = 0 ; p < 4 ; p ++ )		3037065	3					
ANR	3037206	ForInit	p = 0 ;	27:16:547:550	3037065	0	True				
ANR	3037207	AssignmentExpression	p = 0		3037065	0		=			
ANR	3037208	Identifier	p		3037065	0					
ANR	3037209	PrimaryExpression	0		3037065	1					
ANR	3037210	Condition	p < 4	27:21:552:554	3037065	1	True				
ANR	3037211	RelationalExpression	p < 4		3037065	0		<			
ANR	3037212	Identifier	p		3037065	0					
ANR	3037213	PrimaryExpression	4		3037065	1					
ANR	3037214	PostIncDecOperationExpression	p ++	27:26:557:559	3037065	2	True				
ANR	3037215	Identifier	p		3037065	0					
ANR	3037216	IncDec	++		3037065	1					
ANR	3037217	ExpressionStatement	sample [ p ] [ i ] = s -> sample_buffer + p * ring_size * ( w + 6 ) + ( ( h + i - y ) % ring_size ) * ( w + 6 ) + 3	29:16:579:661	3037065	3	True				
ANR	3037218	AssignmentExpression	sample [ p ] [ i ] = s -> sample_buffer + p * ring_size * ( w + 6 ) + ( ( h + i - y ) % ring_size ) * ( w + 6 ) + 3		3037065	0		=			
ANR	3037219	ArrayIndexing	sample [ p ] [ i ]		3037065	0					
ANR	3037220	ArrayIndexing	sample [ p ]		3037065	0					
ANR	3037221	Identifier	sample		3037065	0					
ANR	3037222	Identifier	p		3037065	1					
ANR	3037223	Identifier	i		3037065	1					
ANR	3037224	AdditiveExpression	s -> sample_buffer + p * ring_size * ( w + 6 ) + ( ( h + i - y ) % ring_size ) * ( w + 6 ) + 3		3037065	1		+			
ANR	3037225	PtrMemberAccess	s -> sample_buffer		3037065	0					
ANR	3037226	Identifier	s		3037065	0					
ANR	3037227	Identifier	sample_buffer		3037065	1					
ANR	3037228	AdditiveExpression	p * ring_size * ( w + 6 ) + ( ( h + i - y ) % ring_size ) * ( w + 6 ) + 3		3037065	1		+			
ANR	3037229	MultiplicativeExpression	p * ring_size * ( w + 6 )		3037065	0		*			
ANR	3037230	Identifier	p		3037065	0					
ANR	3037231	MultiplicativeExpression	ring_size * ( w + 6 )		3037065	1		*			
ANR	3037232	Identifier	ring_size		3037065	0					
ANR	3037233	AdditiveExpression	w + 6		3037065	1		+			
ANR	3037234	Identifier	w		3037065	0					
ANR	3037235	PrimaryExpression	6		3037065	1					
ANR	3037236	AdditiveExpression	( ( h + i - y ) % ring_size ) * ( w + 6 ) + 3		3037065	1		+			
ANR	3037237	MultiplicativeExpression	( ( h + i - y ) % ring_size ) * ( w + 6 )		3037065	0		*			
ANR	3037238	MultiplicativeExpression	( h + i - y ) % ring_size		3037065	0		%			
ANR	3037239	AdditiveExpression	h + i - y		3037065	0		+			
ANR	3037240	Identifier	h		3037065	0					
ANR	3037241	AdditiveExpression	i - y		3037065	1		-			
ANR	3037242	Identifier	i		3037065	0					
ANR	3037243	Identifier	y		3037065	1					
ANR	3037244	Identifier	ring_size		3037065	1					
ANR	3037245	AdditiveExpression	w + 6		3037065	1		+			
ANR	3037246	Identifier	w		3037065	0					
ANR	3037247	PrimaryExpression	6		3037065	1					
ANR	3037248	PrimaryExpression	3		3037065	1					
ANR	3037249	ForStatement	for ( x = 0 ; x < w ; x ++ )		3037065	1					
ANR	3037250	ForInit	x = 0 ;	33:12:678:681	3037065	0	True				
ANR	3037251	AssignmentExpression	x = 0		3037065	0		=			
ANR	3037252	Identifier	x		3037065	0					
ANR	3037253	PrimaryExpression	0		3037065	1					
ANR	3037254	Condition	x < w	33:17:683:685	3037065	1	True				
ANR	3037255	RelationalExpression	x < w		3037065	0		<			
ANR	3037256	Identifier	x		3037065	0					
ANR	3037257	Identifier	w		3037065	1					
ANR	3037258	PostIncDecOperationExpression	x ++	33:22:688:690	3037065	2	True				
ANR	3037259	Identifier	x		3037065	0					
ANR	3037260	IncDec	++		3037065	1					
ANR	3037261	CompoundStatement		35:12:616:627	3037065	3					
ANR	3037262	IdentifierDeclStatement	"int b , g , r , a ;"	35:12:707:718	3037065	0	True				
ANR	3037263	IdentifierDecl	b		3037065	0					
ANR	3037264	IdentifierDeclType	int		3037065	0					
ANR	3037265	Identifier	b		3037065	1					
ANR	3037266	IdentifierDecl	g		3037065	1					
ANR	3037267	IdentifierDeclType	int		3037065	0					
ANR	3037268	Identifier	g		3037065	1					
ANR	3037269	IdentifierDecl	r		3037065	2					
ANR	3037270	IdentifierDeclType	int		3037065	0					
ANR	3037271	Identifier	r		3037065	1					
ANR	3037272	IdentifierDecl	a		3037065	3					
ANR	3037273	IdentifierDeclType	int		3037065	0					
ANR	3037274	Identifier	a		3037065	1					
ANR	3037275	IfStatement	if ( lbd )		3037065	1					
ANR	3037276	Condition	lbd	37:15:736:738	3037065	0	True				
ANR	3037277	Identifier	lbd		3037065	0					
ANR	3037278	CompoundStatement		39:16:668:722	3037065	1					
ANR	3037279	IdentifierDeclStatement	unsigned v = * ( ( uint32_t * ) ( src [ 0 ] + x * 4 + stride [ 0 ] * y ) ) ;	39:16:759:813	3037065	0	True				
ANR	3037280	IdentifierDecl	v = * ( ( uint32_t * ) ( src [ 0 ] + x * 4 + stride [ 0 ] * y ) )		3037065	0					
ANR	3037281	IdentifierDeclType	unsigned		3037065	0					
ANR	3037282	Identifier	v		3037065	1					
ANR	3037283	AssignmentExpression	v = * ( ( uint32_t * ) ( src [ 0 ] + x * 4 + stride [ 0 ] * y ) )		3037065	2		=			
ANR	3037284	Identifier	v		3037065	0					
ANR	3037285	UnaryOperationExpression	* ( ( uint32_t * ) ( src [ 0 ] + x * 4 + stride [ 0 ] * y ) )		3037065	1					
ANR	3037286	UnaryOperator	*		3037065	0					
ANR	3037287	CastExpression	( uint32_t * ) ( src [ 0 ] + x * 4 + stride [ 0 ] * y )		3037065	1					
ANR	3037288	CastTarget	uint32_t *		3037065	0					
ANR	3037289	AdditiveExpression	src [ 0 ] + x * 4 + stride [ 0 ] * y		3037065	1		+			
ANR	3037290	ArrayIndexing	src [ 0 ]		3037065	0					
ANR	3037291	Identifier	src		3037065	0					
ANR	3037292	PrimaryExpression	0		3037065	1					
ANR	3037293	AdditiveExpression	x * 4 + stride [ 0 ] * y		3037065	1		+			
ANR	3037294	MultiplicativeExpression	x * 4		3037065	0		*			
ANR	3037295	Identifier	x		3037065	0					
ANR	3037296	PrimaryExpression	4		3037065	1					
ANR	3037297	MultiplicativeExpression	stride [ 0 ] * y		3037065	1		*			
ANR	3037298	ArrayIndexing	stride [ 0 ]		3037065	0					
ANR	3037299	Identifier	stride		3037065	0					
ANR	3037300	PrimaryExpression	0		3037065	1					
ANR	3037301	Identifier	y		3037065	1					
ANR	3037302	ExpressionStatement	b = v & 0xFF	41:16:832:841	3037065	1	True				
ANR	3037303	AssignmentExpression	b = v & 0xFF		3037065	0		=			
ANR	3037304	Identifier	b		3037065	0					
ANR	3037305	BitAndExpression	v & 0xFF		3037065	1		&			
ANR	3037306	Identifier	v		3037065	0					
ANR	3037307	PrimaryExpression	0xFF		3037065	1					
ANR	3037308	ExpressionStatement	g = ( v >> 8 ) & 0xFF	43:16:860:874	3037065	2	True				
ANR	3037309	AssignmentExpression	g = ( v >> 8 ) & 0xFF		3037065	0		=			
ANR	3037310	Identifier	g		3037065	0					
ANR	3037311	BitAndExpression	( v >> 8 ) & 0xFF		3037065	1		&			
ANR	3037312	ShiftExpression	v >> 8		3037065	0		>>			
ANR	3037313	Identifier	v		3037065	0					
ANR	3037314	PrimaryExpression	8		3037065	1					
ANR	3037315	PrimaryExpression	0xFF		3037065	1					
ANR	3037316	ExpressionStatement	r = ( v >> 16 ) & 0xFF	45:16:893:908	3037065	3	True				
ANR	3037317	AssignmentExpression	r = ( v >> 16 ) & 0xFF		3037065	0		=			
ANR	3037318	Identifier	r		3037065	0					
ANR	3037319	BitAndExpression	( v >> 16 ) & 0xFF		3037065	1		&			
ANR	3037320	ShiftExpression	v >> 16		3037065	0		>>			
ANR	3037321	Identifier	v		3037065	0					
ANR	3037322	PrimaryExpression	16		3037065	1					
ANR	3037323	PrimaryExpression	0xFF		3037065	1					
ANR	3037324	ExpressionStatement	a = v >> 24	47:16:927:936	3037065	4	True				
ANR	3037325	AssignmentExpression	a = v >> 24		3037065	0		=			
ANR	3037326	Identifier	a		3037065	0					
ANR	3037327	ShiftExpression	v >> 24		3037065	1		>>			
ANR	3037328	Identifier	v		3037065	0					
ANR	3037329	PrimaryExpression	24		3037065	1					
ANR	3037330	ElseStatement	else		3037065	0					
ANR	3037331	CompoundStatement		49:17:865:865	3037065	0					
ANR	3037332	ExpressionStatement	b = * ( ( uint16_t * ) ( src [ 0 ] + x * 2 + stride [ 0 ] * y ) )	51:16:975:1020	3037065	0	True				
ANR	3037333	AssignmentExpression	b = * ( ( uint16_t * ) ( src [ 0 ] + x * 2 + stride [ 0 ] * y ) )		3037065	0		=			
ANR	3037334	Identifier	b		3037065	0					
ANR	3037335	UnaryOperationExpression	* ( ( uint16_t * ) ( src [ 0 ] + x * 2 + stride [ 0 ] * y ) )		3037065	1					
ANR	3037336	UnaryOperator	*		3037065	0					
ANR	3037337	CastExpression	( uint16_t * ) ( src [ 0 ] + x * 2 + stride [ 0 ] * y )		3037065	1					
ANR	3037338	CastTarget	uint16_t *		3037065	0					
ANR	3037339	AdditiveExpression	src [ 0 ] + x * 2 + stride [ 0 ] * y		3037065	1		+			
ANR	3037340	ArrayIndexing	src [ 0 ]		3037065	0					
ANR	3037341	Identifier	src		3037065	0					
ANR	3037342	PrimaryExpression	0		3037065	1					
ANR	3037343	AdditiveExpression	x * 2 + stride [ 0 ] * y		3037065	1		+			
ANR	3037344	MultiplicativeExpression	x * 2		3037065	0		*			
ANR	3037345	Identifier	x		3037065	0					
ANR	3037346	PrimaryExpression	2		3037065	1					
ANR	3037347	MultiplicativeExpression	stride [ 0 ] * y		3037065	1		*			
ANR	3037348	ArrayIndexing	stride [ 0 ]		3037065	0					
ANR	3037349	Identifier	stride		3037065	0					
ANR	3037350	PrimaryExpression	0		3037065	1					
ANR	3037351	Identifier	y		3037065	1					
ANR	3037352	ExpressionStatement	g = * ( ( uint16_t * ) ( src [ 1 ] + x * 2 + stride [ 1 ] * y ) )	53:16:1039:1084	3037065	1	True				
ANR	3037353	AssignmentExpression	g = * ( ( uint16_t * ) ( src [ 1 ] + x * 2 + stride [ 1 ] * y ) )		3037065	0		=			
ANR	3037354	Identifier	g		3037065	0					
ANR	3037355	UnaryOperationExpression	* ( ( uint16_t * ) ( src [ 1 ] + x * 2 + stride [ 1 ] * y ) )		3037065	1					
ANR	3037356	UnaryOperator	*		3037065	0					
ANR	3037357	CastExpression	( uint16_t * ) ( src [ 1 ] + x * 2 + stride [ 1 ] * y )		3037065	1					
ANR	3037358	CastTarget	uint16_t *		3037065	0					
ANR	3037359	AdditiveExpression	src [ 1 ] + x * 2 + stride [ 1 ] * y		3037065	1		+			
ANR	3037360	ArrayIndexing	src [ 1 ]		3037065	0					
ANR	3037361	Identifier	src		3037065	0					
ANR	3037362	PrimaryExpression	1		3037065	1					
ANR	3037363	AdditiveExpression	x * 2 + stride [ 1 ] * y		3037065	1		+			
ANR	3037364	MultiplicativeExpression	x * 2		3037065	0		*			
ANR	3037365	Identifier	x		3037065	0					
ANR	3037366	PrimaryExpression	2		3037065	1					
ANR	3037367	MultiplicativeExpression	stride [ 1 ] * y		3037065	1		*			
ANR	3037368	ArrayIndexing	stride [ 1 ]		3037065	0					
ANR	3037369	Identifier	stride		3037065	0					
ANR	3037370	PrimaryExpression	1		3037065	1					
ANR	3037371	Identifier	y		3037065	1					
ANR	3037372	ExpressionStatement	r = * ( ( uint16_t * ) ( src [ 2 ] + x * 2 + stride [ 2 ] * y ) )	55:16:1103:1148	3037065	2	True				
ANR	3037373	AssignmentExpression	r = * ( ( uint16_t * ) ( src [ 2 ] + x * 2 + stride [ 2 ] * y ) )		3037065	0		=			
ANR	3037374	Identifier	r		3037065	0					
ANR	3037375	UnaryOperationExpression	* ( ( uint16_t * ) ( src [ 2 ] + x * 2 + stride [ 2 ] * y ) )		3037065	1					
ANR	3037376	UnaryOperator	*		3037065	0					
ANR	3037377	CastExpression	( uint16_t * ) ( src [ 2 ] + x * 2 + stride [ 2 ] * y )		3037065	1					
ANR	3037378	CastTarget	uint16_t *		3037065	0					
ANR	3037379	AdditiveExpression	src [ 2 ] + x * 2 + stride [ 2 ] * y		3037065	1		+			
ANR	3037380	ArrayIndexing	src [ 2 ]		3037065	0					
ANR	3037381	Identifier	src		3037065	0					
ANR	3037382	PrimaryExpression	2		3037065	1					
ANR	3037383	AdditiveExpression	x * 2 + stride [ 2 ] * y		3037065	1		+			
ANR	3037384	MultiplicativeExpression	x * 2		3037065	0		*			
ANR	3037385	Identifier	x		3037065	0					
ANR	3037386	PrimaryExpression	2		3037065	1					
ANR	3037387	MultiplicativeExpression	stride [ 2 ] * y		3037065	1		*			
ANR	3037388	ArrayIndexing	stride [ 2 ]		3037065	0					
ANR	3037389	Identifier	stride		3037065	0					
ANR	3037390	PrimaryExpression	2		3037065	1					
ANR	3037391	Identifier	y		3037065	1					
ANR	3037392	ExpressionStatement	b -= g	61:12:1180:1186	3037065	2	True				
ANR	3037393	AssignmentExpression	b -= g		3037065	0		-=			
ANR	3037394	Identifier	b		3037065	0					
ANR	3037395	Identifier	g		3037065	1					
ANR	3037396	ExpressionStatement	r -= g	63:12:1201:1207	3037065	3	True				
ANR	3037397	AssignmentExpression	r -= g		3037065	0		-=			
ANR	3037398	Identifier	r		3037065	0					
ANR	3037399	Identifier	g		3037065	1					
ANR	3037400	ExpressionStatement	g += ( b + r ) >> 2	65:12:1222:1237	3037065	4	True				
ANR	3037401	AssignmentExpression	g += ( b + r ) >> 2		3037065	0		+=			
ANR	3037402	Identifier	g		3037065	0					
ANR	3037403	ShiftExpression	( b + r ) >> 2		3037065	1		>>			
ANR	3037404	AdditiveExpression	b + r		3037065	0		+			
ANR	3037405	Identifier	b		3037065	0					
ANR	3037406	Identifier	r		3037065	1					
ANR	3037407	PrimaryExpression	2		3037065	1					
ANR	3037408	ExpressionStatement	b += offset	67:12:1252:1263	3037065	5	True				
ANR	3037409	AssignmentExpression	b += offset		3037065	0		+=			
ANR	3037410	Identifier	b		3037065	0					
ANR	3037411	Identifier	offset		3037065	1					
ANR	3037412	ExpressionStatement	r += offset	69:12:1278:1289	3037065	6	True				
ANR	3037413	AssignmentExpression	r += offset		3037065	0		+=			
ANR	3037414	Identifier	r		3037065	0					
ANR	3037415	Identifier	offset		3037065	1					
ANR	3037416	ExpressionStatement	sample [ 0 ] [ 0 ] [ x ] = g	77:12:1399:1417	3037065	7	True				
ANR	3037417	AssignmentExpression	sample [ 0 ] [ 0 ] [ x ] = g		3037065	0		=			
ANR	3037418	ArrayIndexing	sample [ 0 ] [ 0 ] [ x ]		3037065	0					
ANR	3037419	ArrayIndexing	sample [ 0 ] [ 0 ]		3037065	0					
ANR	3037420	ArrayIndexing	sample [ 0 ]		3037065	0					
ANR	3037421	Identifier	sample		3037065	0					
ANR	3037422	PrimaryExpression	0		3037065	1					
ANR	3037423	PrimaryExpression	0		3037065	1					
ANR	3037424	Identifier	x		3037065	1					
ANR	3037425	Identifier	g		3037065	1					
ANR	3037426	ExpressionStatement	sample [ 1 ] [ 0 ] [ x ] = b	79:12:1432:1450	3037065	8	True				
ANR	3037427	AssignmentExpression	sample [ 1 ] [ 0 ] [ x ] = b		3037065	0		=			
ANR	3037428	ArrayIndexing	sample [ 1 ] [ 0 ] [ x ]		3037065	0					
ANR	3037429	ArrayIndexing	sample [ 1 ] [ 0 ]		3037065	0					
ANR	3037430	ArrayIndexing	sample [ 1 ]		3037065	0					
ANR	3037431	Identifier	sample		3037065	0					
ANR	3037432	PrimaryExpression	1		3037065	1					
ANR	3037433	PrimaryExpression	0		3037065	1					
ANR	3037434	Identifier	x		3037065	1					
ANR	3037435	Identifier	b		3037065	1					
ANR	3037436	ExpressionStatement	sample [ 2 ] [ 0 ] [ x ] = r	81:12:1465:1483	3037065	9	True				
ANR	3037437	AssignmentExpression	sample [ 2 ] [ 0 ] [ x ] = r		3037065	0		=			
ANR	3037438	ArrayIndexing	sample [ 2 ] [ 0 ] [ x ]		3037065	0					
ANR	3037439	ArrayIndexing	sample [ 2 ] [ 0 ]		3037065	0					
ANR	3037440	ArrayIndexing	sample [ 2 ]		3037065	0					
ANR	3037441	Identifier	sample		3037065	0					
ANR	3037442	PrimaryExpression	2		3037065	1					
ANR	3037443	PrimaryExpression	0		3037065	1					
ANR	3037444	Identifier	x		3037065	1					
ANR	3037445	Identifier	r		3037065	1					
ANR	3037446	ExpressionStatement	sample [ 3 ] [ 0 ] [ x ] = a	83:12:1498:1516	3037065	10	True				
ANR	3037447	AssignmentExpression	sample [ 3 ] [ 0 ] [ x ] = a		3037065	0		=			
ANR	3037448	ArrayIndexing	sample [ 3 ] [ 0 ] [ x ]		3037065	0					
ANR	3037449	ArrayIndexing	sample [ 3 ] [ 0 ]		3037065	0					
ANR	3037450	ArrayIndexing	sample [ 3 ]		3037065	0					
ANR	3037451	Identifier	sample		3037065	0					
ANR	3037452	PrimaryExpression	3		3037065	1					
ANR	3037453	PrimaryExpression	0		3037065	1					
ANR	3037454	Identifier	x		3037065	1					
ANR	3037455	Identifier	a		3037065	1					
ANR	3037456	ForStatement	for ( p = 0 ; p < 3 + s -> transparency ; p ++ )		3037065	2					
ANR	3037457	ForInit	p = 0 ;	87:12:1542:1545	3037065	0	True				
ANR	3037458	AssignmentExpression	p = 0		3037065	0		=			
ANR	3037459	Identifier	p		3037065	0					
ANR	3037460	PrimaryExpression	0		3037065	1					
ANR	3037461	Condition	p < 3 + s -> transparency	87:17:1547:1567	3037065	1	True				
ANR	3037462	RelationalExpression	p < 3 + s -> transparency		3037065	0		<			
ANR	3037463	Identifier	p		3037065	0					
ANR	3037464	AdditiveExpression	3 + s -> transparency		3037065	1		+			
ANR	3037465	PrimaryExpression	3		3037065	0					
ANR	3037466	PtrMemberAccess	s -> transparency		3037065	1					
ANR	3037467	Identifier	s		3037065	0					
ANR	3037468	Identifier	transparency		3037065	1					
ANR	3037469	PostIncDecOperationExpression	p ++	87:40:1570:1572	3037065	2	True				
ANR	3037470	Identifier	p		3037065	0					
ANR	3037471	IncDec	++		3037065	1					
ANR	3037472	CompoundStatement		87:44:1483:1483	3037065	3					
ANR	3037473	ExpressionStatement	sample [ p ] [ 0 ] [ - 1 ] = sample [ p ] [ 1 ] [ 0 ]	89:12:1589:1624	3037065	0	True				
ANR	3037474	AssignmentExpression	sample [ p ] [ 0 ] [ - 1 ] = sample [ p ] [ 1 ] [ 0 ]		3037065	0		=			
ANR	3037475	ArrayIndexing	sample [ p ] [ 0 ] [ - 1 ]		3037065	0					
ANR	3037476	ArrayIndexing	sample [ p ] [ 0 ]		3037065	0					
ANR	3037477	ArrayIndexing	sample [ p ]		3037065	0					
ANR	3037478	Identifier	sample		3037065	0					
ANR	3037479	Identifier	p		3037065	1					
ANR	3037480	PrimaryExpression	0		3037065	1					
ANR	3037481	UnaryOperationExpression	- 1		3037065	1					
ANR	3037482	UnaryOperator	-		3037065	0					
ANR	3037483	PrimaryExpression	1		3037065	1					
ANR	3037484	ArrayIndexing	sample [ p ] [ 1 ] [ 0 ]		3037065	1					
ANR	3037485	ArrayIndexing	sample [ p ] [ 1 ]		3037065	0					
ANR	3037486	ArrayIndexing	sample [ p ]		3037065	0					
ANR	3037487	Identifier	sample		3037065	0					
ANR	3037488	Identifier	p		3037065	1					
ANR	3037489	PrimaryExpression	1		3037065	1					
ANR	3037490	PrimaryExpression	0		3037065	1					
ANR	3037491	ExpressionStatement	sample [ p ] [ 1 ] [ w ] = sample [ p ] [ 1 ] [ w - 1 ]	91:12:1639:1674	3037065	1	True				
ANR	3037492	AssignmentExpression	sample [ p ] [ 1 ] [ w ] = sample [ p ] [ 1 ] [ w - 1 ]		3037065	0		=			
ANR	3037493	ArrayIndexing	sample [ p ] [ 1 ] [ w ]		3037065	0					
ANR	3037494	ArrayIndexing	sample [ p ] [ 1 ]		3037065	0					
ANR	3037495	ArrayIndexing	sample [ p ]		3037065	0					
ANR	3037496	Identifier	sample		3037065	0					
ANR	3037497	Identifier	p		3037065	1					
ANR	3037498	PrimaryExpression	1		3037065	1					
ANR	3037499	Identifier	w		3037065	1					
ANR	3037500	ArrayIndexing	sample [ p ] [ 1 ] [ w - 1 ]		3037065	1					
ANR	3037501	ArrayIndexing	sample [ p ] [ 1 ]		3037065	0					
ANR	3037502	ArrayIndexing	sample [ p ]		3037065	0					
ANR	3037503	Identifier	sample		3037065	0					
ANR	3037504	Identifier	p		3037065	1					
ANR	3037505	PrimaryExpression	1		3037065	1					
ANR	3037506	AdditiveExpression	w - 1		3037065	1		-			
ANR	3037507	Identifier	w		3037065	0					
ANR	3037508	PrimaryExpression	1		3037065	1					
ANR	3037509	IfStatement	if ( lbd )		3037065	2					
ANR	3037510	Condition	lbd	93:16:1693:1695	3037065	0	True				
ANR	3037511	Identifier	lbd		3037065	0					
ANR	3037512	ExpressionStatement	"encode_line ( s , w , sample [ p ] , ( p + 1 ) / 2 , 9 )"	95:16:1715:1755	3037065	1	True				
ANR	3037513	CallExpression	"encode_line ( s , w , sample [ p ] , ( p + 1 ) / 2 , 9 )"		3037065	0					
ANR	3037514	Callee	encode_line		3037065	0					
ANR	3037515	Identifier	encode_line		3037065	0					
ANR	3037516	ArgumentList	s		3037065	1					
ANR	3037517	Argument	s		3037065	0					
ANR	3037518	Identifier	s		3037065	0					
ANR	3037519	Argument	w		3037065	1					
ANR	3037520	Identifier	w		3037065	0					
ANR	3037521	Argument	sample [ p ]		3037065	2					
ANR	3037522	ArrayIndexing	sample [ p ]		3037065	0					
ANR	3037523	Identifier	sample		3037065	0					
ANR	3037524	Identifier	p		3037065	1					
ANR	3037525	Argument	( p + 1 ) / 2		3037065	3					
ANR	3037526	MultiplicativeExpression	( p + 1 ) / 2		3037065	0		/			
ANR	3037527	AdditiveExpression	p + 1		3037065	0		+			
ANR	3037528	Identifier	p		3037065	0					
ANR	3037529	PrimaryExpression	1		3037065	1					
ANR	3037530	PrimaryExpression	2		3037065	1					
ANR	3037531	Argument	9		3037065	4					
ANR	3037532	PrimaryExpression	9		3037065	0					
ANR	3037533	ElseStatement	else		3037065	0					
ANR	3037534	ExpressionStatement	"encode_line ( s , w , sample [ p ] , ( p + 1 ) / 2 , bits + 1 )"	99:16:1792:1837	3037065	0	True				
ANR	3037535	CallExpression	"encode_line ( s , w , sample [ p ] , ( p + 1 ) / 2 , bits + 1 )"		3037065	0					
ANR	3037536	Callee	encode_line		3037065	0					
ANR	3037537	Identifier	encode_line		3037065	0					
ANR	3037538	ArgumentList	s		3037065	1					
ANR	3037539	Argument	s		3037065	0					
ANR	3037540	Identifier	s		3037065	0					
ANR	3037541	Argument	w		3037065	1					
ANR	3037542	Identifier	w		3037065	0					
ANR	3037543	Argument	sample [ p ]		3037065	2					
ANR	3037544	ArrayIndexing	sample [ p ]		3037065	0					
ANR	3037545	Identifier	sample		3037065	0					
ANR	3037546	Identifier	p		3037065	1					
ANR	3037547	Argument	( p + 1 ) / 2		3037065	3					
ANR	3037548	MultiplicativeExpression	( p + 1 ) / 2		3037065	0		/			
ANR	3037549	AdditiveExpression	p + 1		3037065	0		+			
ANR	3037550	Identifier	p		3037065	0					
ANR	3037551	PrimaryExpression	1		3037065	1					
ANR	3037552	PrimaryExpression	2		3037065	1					
ANR	3037553	Argument	bits + 1		3037065	4					
ANR	3037554	AdditiveExpression	bits + 1		3037065	0		+			
ANR	3037555	Identifier	bits		3037065	0					
ANR	3037556	PrimaryExpression	1		3037065	1					
ANR	3037557	ReturnType	static void		3037065	1					
ANR	3037558	Identifier	encode_rgb_frame		3037065	2					
ANR	3037559	ParameterList	"FFV1Context * s , uint8_t * src [ 3 ] , int w , int h , int stride [ 3 ]"		3037065	3					
ANR	3037560	Parameter	FFV1Context * s	1:29:29:42	3037065	0	True				
ANR	3037561	ParameterType	FFV1Context *		3037065	0					
ANR	3037562	Identifier	s		3037065	1					
ANR	3037563	Parameter	uint8_t * src [ 3 ]	1:45:45:59	3037065	1	True				
ANR	3037564	ParameterType	uint8_t * [ 3 ]		3037065	0					
ANR	3037565	Identifier	src		3037065	1					
ANR	3037566	Parameter	int w	1:62:62:66	3037065	2	True				
ANR	3037567	ParameterType	int		3037065	0					
ANR	3037568	Identifier	w		3037065	1					
ANR	3037569	Parameter	int h	1:69:69:73	3037065	3	True				
ANR	3037570	ParameterType	int		3037065	0					
ANR	3037571	Identifier	h		3037065	1					
ANR	3037572	Parameter	int stride [ 3 ]	1:76:76:88	3037065	4	True				
ANR	3037573	ParameterType	int [ 3 ]		3037065	0					
ANR	3037574	Identifier	stride		3037065	1					
ANR	3037575	CFGEntryNode	ENTRY		3037065		True				
ANR	3037576	CFGExitNode	EXIT		3037065		True				
ANR	3037577	Symbol	* stride		3037065						
ANR	3037578	Symbol	* w		3037065						
ANR	3037579	Symbol	* x		3037065						
ANR	3037580	Symbol	* y		3037065						
ANR	3037581	Symbol	* s -> sample_buffer		3037065						
ANR	3037582	Symbol	ring_size		3037065						
ANR	3037583	Symbol	s -> avctx -> bits_per_raw_sample		3037065						
ANR	3037584	Symbol	s -> run_index		3037065						
ANR	3037585	Symbol	stride		3037065						
ANR	3037586	Symbol	* * sample		3037065						
ANR	3037587	Symbol	* ( ( uint16_t * ) ( src [ 1 ] + x * 2 + stride [ 1 ] * y ) )		3037065						
ANR	3037588	Symbol	* src		3037065						
ANR	3037589	Symbol	* * s		3037065						
ANR	3037590	Symbol	s -> transparency		3037065						
ANR	3037591	Symbol	* ( ( uint32_t * ) ( src [ 0 ] + x * 4 + stride [ 0 ] * y ) )		3037065						
ANR	3037592	Symbol	* * * sample		3037065						
ANR	3037593	Symbol	* * p		3037065						
ANR	3037594	Symbol	* sample		3037065						
ANR	3037595	Symbol	s -> sample_buffer		3037065						
ANR	3037596	Symbol	* ( ( uint16_t * ) ( src [ 2 ] + x * 2 + stride [ 2 ] * y ) )		3037065						
ANR	3037597	Symbol	* s -> avctx		3037065						
ANR	3037598	Symbol	a		3037065						
ANR	3037599	Symbol	b		3037065						
ANR	3037600	Symbol	offset		3037065						
ANR	3037601	Symbol	src		3037065						
ANR	3037602	Symbol	g		3037065						
ANR	3037603	Symbol	h		3037065						
ANR	3037604	Symbol	bits		3037065						
ANR	3037605	Symbol	i		3037065						
ANR	3037606	Symbol	* ( ( uint16_t * ) ( src [ 0 ] + x * 2 + stride [ 0 ] * y ) )		3037065						
ANR	3037607	Symbol	sample		3037065						
ANR	3037608	Symbol	* * stride		3037065						
ANR	3037609	Symbol	lbd		3037065						
ANR	3037610	Symbol	p		3037065						
ANR	3037611	Symbol	s -> avctx -> context_model		3037065						
ANR	3037612	Symbol	* * * p		3037065						
ANR	3037613	Symbol	r		3037065						
ANR	3037614	Symbol	s		3037065						
ANR	3037615	Symbol	* i		3037065						
ANR	3037616	Symbol	v		3037065						
ANR	3037617	Symbol	w		3037065						
ANR	3037618	Symbol	x		3037065						
ANR	3037619	Symbol	* * src		3037065						
ANR	3037620	Symbol	y		3037065						
ANR	3037621	Symbol	* p		3037065						
ANR	3037622	Symbol	s -> avctx		3037065						
ANR	3037623	Symbol	* s		3037065						
