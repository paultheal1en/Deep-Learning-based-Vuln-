command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5606691	File	/home/p4ultr4n/workplace/ReVeal/raw_code/mov_read_hdlr_02_1.c								
ANR	5606692	Function	mov_read_hdlr	1:0:0:1356							
ANR	5606693	FunctionDef	"mov_read_hdlr (MOVContext * c , ByteIOContext * pb , MOVAtom atom)"		5606692	0					
ANR	5606694	CompoundStatement		3:0:74:1356	5606692	0					
ANR	5606695	IdentifierDeclStatement	AVStream * st = c -> fc -> streams [ c -> fc -> nb_streams - 1 ] ;	5:4:81:131	5606692	0	True				
ANR	5606696	IdentifierDecl	* st = c -> fc -> streams [ c -> fc -> nb_streams - 1 ]		5606692	0					
ANR	5606697	IdentifierDeclType	AVStream *		5606692	0					
ANR	5606698	Identifier	st		5606692	1					
ANR	5606699	AssignmentExpression	* st = c -> fc -> streams [ c -> fc -> nb_streams - 1 ]		5606692	2		=			
ANR	5606700	Identifier	st		5606692	0					
ANR	5606701	ArrayIndexing	c -> fc -> streams [ c -> fc -> nb_streams - 1 ]		5606692	1					
ANR	5606702	PtrMemberAccess	c -> fc -> streams		5606692	0					
ANR	5606703	PtrMemberAccess	c -> fc		5606692	0					
ANR	5606704	Identifier	c		5606692	0					
ANR	5606705	Identifier	fc		5606692	1					
ANR	5606706	Identifier	streams		5606692	1					
ANR	5606707	AdditiveExpression	c -> fc -> nb_streams - 1		5606692	1		-			
ANR	5606708	PtrMemberAccess	c -> fc -> nb_streams		5606692	0					
ANR	5606709	PtrMemberAccess	c -> fc		5606692	0					
ANR	5606710	Identifier	c		5606692	0					
ANR	5606711	Identifier	fc		5606692	1					
ANR	5606712	Identifier	nb_streams		5606692	1					
ANR	5606713	PrimaryExpression	1		5606692	1					
ANR	5606714	IdentifierDeclStatement	uint32_t type ;	7:4:138:151	5606692	1	True				
ANR	5606715	IdentifierDecl	type		5606692	0					
ANR	5606716	IdentifierDeclType	uint32_t		5606692	0					
ANR	5606717	Identifier	type		5606692	1					
ANR	5606718	IdentifierDeclStatement	uint32_t ctype ;	9:4:158:172	5606692	2	True				
ANR	5606719	IdentifierDecl	ctype		5606692	0					
ANR	5606720	IdentifierDeclType	uint32_t		5606692	0					
ANR	5606721	Identifier	ctype		5606692	1					
ANR	5606722	ExpressionStatement	get_byte ( pb )	13:4:181:193	5606692	3	True				
ANR	5606723	CallExpression	get_byte ( pb )		5606692	0					
ANR	5606724	Callee	get_byte		5606692	0					
ANR	5606725	Identifier	get_byte		5606692	0					
ANR	5606726	ArgumentList	pb		5606692	1					
ANR	5606727	Argument	pb		5606692	0					
ANR	5606728	Identifier	pb		5606692	0					
ANR	5606729	ExpressionStatement	get_be24 ( pb )	15:4:214:226	5606692	4	True				
ANR	5606730	CallExpression	get_be24 ( pb )		5606692	0					
ANR	5606731	Callee	get_be24		5606692	0					
ANR	5606732	Identifier	get_be24		5606692	0					
ANR	5606733	ArgumentList	pb		5606692	1					
ANR	5606734	Argument	pb		5606692	0					
ANR	5606735	Identifier	pb		5606692	0					
ANR	5606736	ExpressionStatement	ctype = get_le32 ( pb )	21:4:273:293	5606692	5	True				
ANR	5606737	AssignmentExpression	ctype = get_le32 ( pb )		5606692	0		=			
ANR	5606738	Identifier	ctype		5606692	0					
ANR	5606739	CallExpression	get_le32 ( pb )		5606692	1					
ANR	5606740	Callee	get_le32		5606692	0					
ANR	5606741	Identifier	get_le32		5606692	0					
ANR	5606742	ArgumentList	pb		5606692	1					
ANR	5606743	Argument	pb		5606692	0					
ANR	5606744	Identifier	pb		5606692	0					
ANR	5606745	ExpressionStatement	type = get_le32 ( pb )	23:4:300:319	5606692	6	True				
ANR	5606746	AssignmentExpression	type = get_le32 ( pb )		5606692	0		=			
ANR	5606747	Identifier	type		5606692	0					
ANR	5606748	CallExpression	get_le32 ( pb )		5606692	1					
ANR	5606749	Callee	get_le32		5606692	0					
ANR	5606750	Identifier	get_le32		5606692	0					
ANR	5606751	ArgumentList	pb		5606692	1					
ANR	5606752	Argument	pb		5606692	0					
ANR	5606753	Identifier	pb		5606692	0					
ANR	5606754	ExpressionStatement	"dprintf ( c -> fc , ""ctype= %c%c%c%c (0x%08x)\\n"" , * ( ( char * ) & ctype ) , ( ( char * ) & ctype ) [ 1 ] , ( ( char * ) & ctype ) [ 2 ] , ( ( char * ) & ctype ) [ 3 ] , ( int ) ctype )"	27:4:352:504	5606692	7	True				
ANR	5606755	CallExpression	"dprintf ( c -> fc , ""ctype= %c%c%c%c (0x%08x)\\n"" , * ( ( char * ) & ctype ) , ( ( char * ) & ctype ) [ 1 ] , ( ( char * ) & ctype ) [ 2 ] , ( ( char * ) & ctype ) [ 3 ] , ( int ) ctype )"		5606692	0					
ANR	5606756	Callee	dprintf		5606692	0					
ANR	5606757	Identifier	dprintf		5606692	0					
ANR	5606758	ArgumentList	c -> fc		5606692	1					
ANR	5606759	Argument	c -> fc		5606692	0					
ANR	5606760	PtrMemberAccess	c -> fc		5606692	0					
ANR	5606761	Identifier	c		5606692	0					
ANR	5606762	Identifier	fc		5606692	1					
ANR	5606763	Argument	"""ctype= %c%c%c%c (0x%08x)\\n"""		5606692	1					
ANR	5606764	PrimaryExpression	"""ctype= %c%c%c%c (0x%08x)\\n"""		5606692	0					
ANR	5606765	Argument	* ( ( char * ) & ctype )		5606692	2					
ANR	5606766	UnaryOperationExpression	* ( ( char * ) & ctype )		5606692	0					
ANR	5606767	UnaryOperator	*		5606692	0					
ANR	5606768	CastExpression	( char * ) & ctype		5606692	1					
ANR	5606769	CastTarget	char *		5606692	0					
ANR	5606770	UnaryOperationExpression	& ctype		5606692	1					
ANR	5606771	UnaryOperator	&		5606692	0					
ANR	5606772	Identifier	ctype		5606692	1					
ANR	5606773	Argument	( ( char * ) & ctype ) [ 1 ]		5606692	3					
ANR	5606774	ArrayIndexing	( ( char * ) & ctype ) [ 1 ]		5606692	0					
ANR	5606775	CastExpression	( char * ) & ctype		5606692	0					
ANR	5606776	CastTarget	char *		5606692	0					
ANR	5606777	UnaryOperationExpression	& ctype		5606692	1					
ANR	5606778	UnaryOperator	&		5606692	0					
ANR	5606779	Identifier	ctype		5606692	1					
ANR	5606780	PrimaryExpression	1		5606692	1					
ANR	5606781	Argument	( ( char * ) & ctype ) [ 2 ]		5606692	4					
ANR	5606782	ArrayIndexing	( ( char * ) & ctype ) [ 2 ]		5606692	0					
ANR	5606783	CastExpression	( char * ) & ctype		5606692	0					
ANR	5606784	CastTarget	char *		5606692	0					
ANR	5606785	UnaryOperationExpression	& ctype		5606692	1					
ANR	5606786	UnaryOperator	&		5606692	0					
ANR	5606787	Identifier	ctype		5606692	1					
ANR	5606788	PrimaryExpression	2		5606692	1					
ANR	5606789	Argument	( ( char * ) & ctype ) [ 3 ]		5606692	5					
ANR	5606790	ArrayIndexing	( ( char * ) & ctype ) [ 3 ]		5606692	0					
ANR	5606791	CastExpression	( char * ) & ctype		5606692	0					
ANR	5606792	CastTarget	char *		5606692	0					
ANR	5606793	UnaryOperationExpression	& ctype		5606692	1					
ANR	5606794	UnaryOperator	&		5606692	0					
ANR	5606795	Identifier	ctype		5606692	1					
ANR	5606796	PrimaryExpression	3		5606692	1					
ANR	5606797	Argument	( int ) ctype		5606692	6					
ANR	5606798	CastExpression	( int ) ctype		5606692	0					
ANR	5606799	CastTarget	int		5606692	0					
ANR	5606800	Identifier	ctype		5606692	1					
ANR	5606801	ExpressionStatement	"dprintf ( c -> fc , ""stype= %c%c%c%c\\n"" , * ( ( char * ) & type ) , ( ( char * ) & type ) [ 1 ] , ( ( char * ) & type ) [ 2 ] , ( ( char * ) & type ) [ 3 ] )"	31:4:511:637	5606692	8	True				
ANR	5606802	CallExpression	"dprintf ( c -> fc , ""stype= %c%c%c%c\\n"" , * ( ( char * ) & type ) , ( ( char * ) & type ) [ 1 ] , ( ( char * ) & type ) [ 2 ] , ( ( char * ) & type ) [ 3 ] )"		5606692	0					
ANR	5606803	Callee	dprintf		5606692	0					
ANR	5606804	Identifier	dprintf		5606692	0					
ANR	5606805	ArgumentList	c -> fc		5606692	1					
ANR	5606806	Argument	c -> fc		5606692	0					
ANR	5606807	PtrMemberAccess	c -> fc		5606692	0					
ANR	5606808	Identifier	c		5606692	0					
ANR	5606809	Identifier	fc		5606692	1					
ANR	5606810	Argument	"""stype= %c%c%c%c\\n"""		5606692	1					
ANR	5606811	PrimaryExpression	"""stype= %c%c%c%c\\n"""		5606692	0					
ANR	5606812	Argument	* ( ( char * ) & type )		5606692	2					
ANR	5606813	UnaryOperationExpression	* ( ( char * ) & type )		5606692	0					
ANR	5606814	UnaryOperator	*		5606692	0					
ANR	5606815	CastExpression	( char * ) & type		5606692	1					
ANR	5606816	CastTarget	char *		5606692	0					
ANR	5606817	UnaryOperationExpression	& type		5606692	1					
ANR	5606818	UnaryOperator	&		5606692	0					
ANR	5606819	Identifier	type		5606692	1					
ANR	5606820	Argument	( ( char * ) & type ) [ 1 ]		5606692	3					
ANR	5606821	ArrayIndexing	( ( char * ) & type ) [ 1 ]		5606692	0					
ANR	5606822	CastExpression	( char * ) & type		5606692	0					
ANR	5606823	CastTarget	char *		5606692	0					
ANR	5606824	UnaryOperationExpression	& type		5606692	1					
ANR	5606825	UnaryOperator	&		5606692	0					
ANR	5606826	Identifier	type		5606692	1					
ANR	5606827	PrimaryExpression	1		5606692	1					
ANR	5606828	Argument	( ( char * ) & type ) [ 2 ]		5606692	4					
ANR	5606829	ArrayIndexing	( ( char * ) & type ) [ 2 ]		5606692	0					
ANR	5606830	CastExpression	( char * ) & type		5606692	0					
ANR	5606831	CastTarget	char *		5606692	0					
ANR	5606832	UnaryOperationExpression	& type		5606692	1					
ANR	5606833	UnaryOperator	&		5606692	0					
ANR	5606834	Identifier	type		5606692	1					
ANR	5606835	PrimaryExpression	2		5606692	1					
ANR	5606836	Argument	( ( char * ) & type ) [ 3 ]		5606692	5					
ANR	5606837	ArrayIndexing	( ( char * ) & type ) [ 3 ]		5606692	0					
ANR	5606838	CastExpression	( char * ) & type		5606692	0					
ANR	5606839	CastTarget	char *		5606692	0					
ANR	5606840	UnaryOperationExpression	& type		5606692	1					
ANR	5606841	UnaryOperator	&		5606692	0					
ANR	5606842	Identifier	type		5606692	1					
ANR	5606843	PrimaryExpression	3		5606692	1					
ANR	5606844	IfStatement	if ( ! ctype )		5606692	9					
ANR	5606845	Condition	! ctype	35:7:647:652	5606692	0	True				
ANR	5606846	UnaryOperationExpression	! ctype		5606692	0					
ANR	5606847	UnaryOperator	!		5606692	0					
ANR	5606848	Identifier	ctype		5606692	1					
ANR	5606849	ExpressionStatement	c -> isom = 1	37:8:664:675	5606692	1	True				
ANR	5606850	AssignmentExpression	c -> isom = 1		5606692	0		=			
ANR	5606851	PtrMemberAccess	c -> isom		5606692	0					
ANR	5606852	Identifier	c		5606692	0					
ANR	5606853	Identifier	isom		5606692	1					
ANR	5606854	PrimaryExpression	1		5606692	1					
ANR	5606855	IfStatement	"if ( type == MKTAG ( 'v' , 'i' , 'd' , 'e' ) )"		5606692	10					
ANR	5606856	Condition	"type == MKTAG ( 'v' , 'i' , 'd' , 'e' )"	39:12:690:719	5606692	0	True				
ANR	5606857	EqualityExpression	"type == MKTAG ( 'v' , 'i' , 'd' , 'e' )"		5606692	0		==			
ANR	5606858	Identifier	type		5606692	0					
ANR	5606859	CallExpression	"MKTAG ( 'v' , 'i' , 'd' , 'e' )"		5606692	1					
ANR	5606860	Callee	MKTAG		5606692	0					
ANR	5606861	Identifier	MKTAG		5606692	0					
ANR	5606862	ArgumentList	'v'		5606692	1					
ANR	5606863	Argument	'v'		5606692	0					
ANR	5606864	PrimaryExpression	'v'		5606692	0					
ANR	5606865	Argument	'i'		5606692	1					
ANR	5606866	PrimaryExpression	'i'		5606692	0					
ANR	5606867	Argument	'd'		5606692	2					
ANR	5606868	PrimaryExpression	'd'		5606692	0					
ANR	5606869	Argument	'e'		5606692	3					
ANR	5606870	PrimaryExpression	'e'		5606692	0					
ANR	5606871	ExpressionStatement	st -> codec -> codec_type = CODEC_TYPE_VIDEO	41:8:731:771	5606692	1	True				
ANR	5606872	AssignmentExpression	st -> codec -> codec_type = CODEC_TYPE_VIDEO		5606692	0		=			
ANR	5606873	PtrMemberAccess	st -> codec -> codec_type		5606692	0					
ANR	5606874	PtrMemberAccess	st -> codec		5606692	0					
ANR	5606875	Identifier	st		5606692	0					
ANR	5606876	Identifier	codec		5606692	1					
ANR	5606877	Identifier	codec_type		5606692	1					
ANR	5606878	Identifier	CODEC_TYPE_VIDEO		5606692	1					
ANR	5606879	ElseStatement	else		5606692	0					
ANR	5606880	IfStatement	"if ( type == MKTAG ( 's' , 'o' , 'u' , 'n' ) )"		5606692	0					
ANR	5606881	Condition	"type == MKTAG ( 's' , 'o' , 'u' , 'n' )"	43:12:786:815	5606692	0	True				
ANR	5606882	EqualityExpression	"type == MKTAG ( 's' , 'o' , 'u' , 'n' )"		5606692	0		==			
ANR	5606883	Identifier	type		5606692	0					
ANR	5606884	CallExpression	"MKTAG ( 's' , 'o' , 'u' , 'n' )"		5606692	1					
ANR	5606885	Callee	MKTAG		5606692	0					
ANR	5606886	Identifier	MKTAG		5606692	0					
ANR	5606887	ArgumentList	's'		5606692	1					
ANR	5606888	Argument	's'		5606692	0					
ANR	5606889	PrimaryExpression	's'		5606692	0					
ANR	5606890	Argument	'o'		5606692	1					
ANR	5606891	PrimaryExpression	'o'		5606692	0					
ANR	5606892	Argument	'u'		5606692	2					
ANR	5606893	PrimaryExpression	'u'		5606692	0					
ANR	5606894	Argument	'n'		5606692	3					
ANR	5606895	PrimaryExpression	'n'		5606692	0					
ANR	5606896	ExpressionStatement	st -> codec -> codec_type = CODEC_TYPE_AUDIO	45:8:827:867	5606692	1	True				
ANR	5606897	AssignmentExpression	st -> codec -> codec_type = CODEC_TYPE_AUDIO		5606692	0		=			
ANR	5606898	PtrMemberAccess	st -> codec -> codec_type		5606692	0					
ANR	5606899	PtrMemberAccess	st -> codec		5606692	0					
ANR	5606900	Identifier	st		5606692	0					
ANR	5606901	Identifier	codec		5606692	1					
ANR	5606902	Identifier	codec_type		5606692	1					
ANR	5606903	Identifier	CODEC_TYPE_AUDIO		5606692	1					
ANR	5606904	ElseStatement	else		5606692	0					
ANR	5606905	IfStatement	"if ( type == MKTAG ( 'm' , '1' , 'a' , ' ' ) )"		5606692	0					
ANR	5606906	Condition	"type == MKTAG ( 'm' , '1' , 'a' , ' ' )"	47:12:882:911	5606692	0	True				
ANR	5606907	EqualityExpression	"type == MKTAG ( 'm' , '1' , 'a' , ' ' )"		5606692	0		==			
ANR	5606908	Identifier	type		5606692	0					
ANR	5606909	CallExpression	"MKTAG ( 'm' , '1' , 'a' , ' ' )"		5606692	1					
ANR	5606910	Callee	MKTAG		5606692	0					
ANR	5606911	Identifier	MKTAG		5606692	0					
ANR	5606912	ArgumentList	'm'		5606692	1					
ANR	5606913	Argument	'm'		5606692	0					
ANR	5606914	PrimaryExpression	'm'		5606692	0					
ANR	5606915	Argument	'1'		5606692	1					
ANR	5606916	PrimaryExpression	'1'		5606692	0					
ANR	5606917	Argument	'a'		5606692	2					
ANR	5606918	PrimaryExpression	'a'		5606692	0					
ANR	5606919	Argument	' '		5606692	3					
ANR	5606920	PrimaryExpression	' '		5606692	0					
ANR	5606921	ExpressionStatement	st -> codec -> codec_id = CODEC_ID_MP2	49:8:923:957	5606692	1	True				
ANR	5606922	AssignmentExpression	st -> codec -> codec_id = CODEC_ID_MP2		5606692	0		=			
ANR	5606923	PtrMemberAccess	st -> codec -> codec_id		5606692	0					
ANR	5606924	PtrMemberAccess	st -> codec		5606692	0					
ANR	5606925	Identifier	st		5606692	0					
ANR	5606926	Identifier	codec		5606692	1					
ANR	5606927	Identifier	codec_id		5606692	1					
ANR	5606928	Identifier	CODEC_ID_MP2		5606692	1					
ANR	5606929	ElseStatement	else		5606692	0					
ANR	5606930	IfStatement	"if ( type == MKTAG ( 's' , 'u' , 'b' , 'p' ) )"		5606692	0					
ANR	5606931	Condition	"type == MKTAG ( 's' , 'u' , 'b' , 'p' )"	51:12:972:1001	5606692	0	True				
ANR	5606932	EqualityExpression	"type == MKTAG ( 's' , 'u' , 'b' , 'p' )"		5606692	0		==			
ANR	5606933	Identifier	type		5606692	0					
ANR	5606934	CallExpression	"MKTAG ( 's' , 'u' , 'b' , 'p' )"		5606692	1					
ANR	5606935	Callee	MKTAG		5606692	0					
ANR	5606936	Identifier	MKTAG		5606692	0					
ANR	5606937	ArgumentList	's'		5606692	1					
ANR	5606938	Argument	's'		5606692	0					
ANR	5606939	PrimaryExpression	's'		5606692	0					
ANR	5606940	Argument	'u'		5606692	1					
ANR	5606941	PrimaryExpression	'u'		5606692	0					
ANR	5606942	Argument	'b'		5606692	2					
ANR	5606943	PrimaryExpression	'b'		5606692	0					
ANR	5606944	Argument	'p'		5606692	3					
ANR	5606945	PrimaryExpression	'p'		5606692	0					
ANR	5606946	CompoundStatement		49:44:929:929	5606692	1					
ANR	5606947	ExpressionStatement	st -> codec -> codec_type = CODEC_TYPE_SUBTITLE	53:8:1015:1058	5606692	0	True				
ANR	5606948	AssignmentExpression	st -> codec -> codec_type = CODEC_TYPE_SUBTITLE		5606692	0		=			
ANR	5606949	PtrMemberAccess	st -> codec -> codec_type		5606692	0					
ANR	5606950	PtrMemberAccess	st -> codec		5606692	0					
ANR	5606951	Identifier	st		5606692	0					
ANR	5606952	Identifier	codec		5606692	1					
ANR	5606953	Identifier	codec_type		5606692	1					
ANR	5606954	Identifier	CODEC_TYPE_SUBTITLE		5606692	1					
ANR	5606955	ExpressionStatement	get_be32 ( pb )	57:4:1072:1084	5606692	11	True				
ANR	5606956	CallExpression	get_be32 ( pb )		5606692	0					
ANR	5606957	Callee	get_be32		5606692	0					
ANR	5606958	Identifier	get_be32		5606692	0					
ANR	5606959	ArgumentList	pb		5606692	1					
ANR	5606960	Argument	pb		5606692	0					
ANR	5606961	Identifier	pb		5606692	0					
ANR	5606962	ExpressionStatement	get_be32 ( pb )	59:4:1120:1132	5606692	12	True				
ANR	5606963	CallExpression	get_be32 ( pb )		5606692	0					
ANR	5606964	Callee	get_be32		5606692	0					
ANR	5606965	Identifier	get_be32		5606692	0					
ANR	5606966	ArgumentList	pb		5606692	1					
ANR	5606967	Argument	pb		5606692	0					
ANR	5606968	Identifier	pb		5606692	0					
ANR	5606969	ExpressionStatement	get_be32 ( pb )	61:4:1161:1173	5606692	13	True				
ANR	5606970	CallExpression	get_be32 ( pb )		5606692	0					
ANR	5606971	Callee	get_be32		5606692	0					
ANR	5606972	Identifier	get_be32		5606692	0					
ANR	5606973	ArgumentList	pb		5606692	1					
ANR	5606974	Argument	pb		5606692	0					
ANR	5606975	Identifier	pb		5606692	0					
ANR	5606976	IfStatement	if ( atom . size <= 24 )		5606692	14					
ANR	5606977	Condition	atom . size <= 24	65:7:1212:1226	5606692	0	True				
ANR	5606978	RelationalExpression	atom . size <= 24		5606692	0		<=			
ANR	5606979	MemberAccess	atom . size		5606692	0					
ANR	5606980	Identifier	atom		5606692	0					
ANR	5606981	Identifier	size		5606692	1					
ANR	5606982	PrimaryExpression	24		5606692	1					
ANR	5606983	ReturnStatement	return 0 ;	67:8:1238:1246	5606692	1	True				
ANR	5606984	PrimaryExpression	0		5606692	0					
ANR	5606985	ExpressionStatement	"url_fskip ( pb , atom . size - ( url_ftell ( pb ) - atom . offset ) )"	71:4:1282:1338	5606692	15	True				
ANR	5606986	CallExpression	"url_fskip ( pb , atom . size - ( url_ftell ( pb ) - atom . offset ) )"		5606692	0					
ANR	5606987	Callee	url_fskip		5606692	0					
ANR	5606988	Identifier	url_fskip		5606692	0					
ANR	5606989	ArgumentList	pb		5606692	1					
ANR	5606990	Argument	pb		5606692	0					
ANR	5606991	Identifier	pb		5606692	0					
ANR	5606992	Argument	atom . size - ( url_ftell ( pb ) - atom . offset )		5606692	1					
ANR	5606993	AdditiveExpression	atom . size - ( url_ftell ( pb ) - atom . offset )		5606692	0		-			
ANR	5606994	MemberAccess	atom . size		5606692	0					
ANR	5606995	Identifier	atom		5606692	0					
ANR	5606996	Identifier	size		5606692	1					
ANR	5606997	AdditiveExpression	url_ftell ( pb ) - atom . offset		5606692	1		-			
ANR	5606998	CallExpression	url_ftell ( pb )		5606692	0					
ANR	5606999	Callee	url_ftell		5606692	0					
ANR	5607000	Identifier	url_ftell		5606692	0					
ANR	5607001	ArgumentList	pb		5606692	1					
ANR	5607002	Argument	pb		5606692	0					
ANR	5607003	Identifier	pb		5606692	0					
ANR	5607004	MemberAccess	atom . offset		5606692	1					
ANR	5607005	Identifier	atom		5606692	0					
ANR	5607006	Identifier	offset		5606692	1					
ANR	5607007	ReturnStatement	return 0 ;	73:4:1345:1353	5606692	16	True				
ANR	5607008	PrimaryExpression	0		5606692	0					
ANR	5607009	ReturnType	static int		5606692	1					
ANR	5607010	Identifier	mov_read_hdlr		5606692	2					
ANR	5607011	ParameterList	"MOVContext * c , ByteIOContext * pb , MOVAtom atom"		5606692	3					
ANR	5607012	Parameter	MOVContext * c	1:25:25:37	5606692	0	True				
ANR	5607013	ParameterType	MOVContext *		5606692	0					
ANR	5607014	Identifier	c		5606692	1					
ANR	5607015	Parameter	ByteIOContext * pb	1:40:40:56	5606692	1	True				
ANR	5607016	ParameterType	ByteIOContext *		5606692	0					
ANR	5607017	Identifier	pb		5606692	1					
ANR	5607018	Parameter	MOVAtom atom	1:59:59:70	5606692	2	True				
ANR	5607019	ParameterType	MOVAtom		5606692	0					
ANR	5607020	Identifier	atom		5606692	1					
ANR	5607021	CFGEntryNode	ENTRY		5606692		True				
ANR	5607022	CFGExitNode	EXIT		5606692		True				
ANR	5607023	Symbol	* c -> fc		5606692						
ANR	5607024	Symbol	* st		5606692						
ANR	5607025	Symbol	c -> fc -> nb_streams		5606692						
ANR	5607026	Symbol	* c -> fc -> nb_streams		5606692						
ANR	5607027	Symbol	type		5606692						
ANR	5607028	Symbol	* ( ( char * ) & ctype )		5606692						
ANR	5607029	Symbol	* ( ( char * ) & type )		5606692						
ANR	5607030	Symbol	* st -> codec		5606692						
ANR	5607031	Symbol	c -> isom		5606692						
ANR	5607032	Symbol	* * st		5606692						
ANR	5607033	Symbol	& ctype		5606692						
ANR	5607034	Symbol	st -> codec -> codec_id		5606692						
ANR	5607035	Symbol	CODEC_ID_MP2		5606692						
ANR	5607036	Symbol	atom . size		5606692						
ANR	5607037	Symbol	url_ftell		5606692						
ANR	5607038	Symbol	st -> codec -> codec_type		5606692						
ANR	5607039	Symbol	* c -> fc -> streams		5606692						
ANR	5607040	Symbol	st		5606692						
ANR	5607041	Symbol	atom . offset		5606692						
ANR	5607042	Symbol	c		5606692						
ANR	5607043	Symbol	& type		5606692						
ANR	5607044	Symbol	* * c		5606692						
ANR	5607045	Symbol	get_le32		5606692						
ANR	5607046	Symbol	st -> codec		5606692						
ANR	5607047	Symbol	* c		5606692						
ANR	5607048	Symbol	* * c -> fc		5606692						
ANR	5607049	Symbol	c -> fc -> streams		5606692						
ANR	5607050	Symbol	CODEC_TYPE_SUBTITLE		5606692						
ANR	5607051	Symbol	pb		5606692						
ANR	5607052	Symbol	ctype		5606692						
ANR	5607053	Symbol	c -> fc		5606692						
ANR	5607054	Symbol	CODEC_TYPE_AUDIO		5606692						
ANR	5607055	Symbol	atom		5606692						
ANR	5607056	Symbol	MKTAG		5606692						
ANR	5607057	Symbol	CODEC_TYPE_VIDEO		5606692						
ANR	5607058	Symbol	* * * c		5606692						
