command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1042434	File	/home/p4ultr4n/workplace/ReVeal/raw_code/bit_allocation_0.c								
ANR	1042435	Function	bit_allocation	1:0:0:5017							
ANR	1042436	FunctionDef	"bit_allocation (IMCContext * q , IMCChannel * chctx , int stream_format_code , int freebits , int flag)"		1042435	0					
ANR	1042437	CompoundStatement		5:0:136:5017	1042435	0					
ANR	1042438	IdentifierDeclStatement	"int i , j ;"	7:4:143:151	1042435	0	True				
ANR	1042439	IdentifierDecl	i		1042435	0					
ANR	1042440	IdentifierDeclType	int		1042435	0					
ANR	1042441	Identifier	i		1042435	1					
ANR	1042442	IdentifierDecl	j		1042435	1					
ANR	1042443	IdentifierDeclType	int		1042435	0					
ANR	1042444	Identifier	j		1042435	1					
ANR	1042445	IdentifierDeclStatement	const float limit = - 1.e20 ;	9:4:158:184	1042435	1	True				
ANR	1042446	IdentifierDecl	limit = - 1.e20		1042435	0					
ANR	1042447	IdentifierDeclType	const float		1042435	0					
ANR	1042448	Identifier	limit		1042435	1					
ANR	1042449	AssignmentExpression	limit = - 1.e20		1042435	2		=			
ANR	1042450	Identifier	limit		1042435	0					
ANR	1042451	UnaryOperationExpression	- 1.e20		1042435	1					
ANR	1042452	UnaryOperator	-		1042435	0					
ANR	1042453	PrimaryExpression	1.e20		1042435	1					
ANR	1042454	IdentifierDeclStatement	float highest = 0.0 ;	11:4:191:210	1042435	2	True				
ANR	1042455	IdentifierDecl	highest = 0.0		1042435	0					
ANR	1042456	IdentifierDeclType	float		1042435	0					
ANR	1042457	Identifier	highest		1042435	1					
ANR	1042458	AssignmentExpression	highest = 0.0		1042435	2		=			
ANR	1042459	Identifier	highest		1042435	0					
ANR	1042460	PrimaryExpression	0.0		1042435	1					
ANR	1042461	IdentifierDeclStatement	int indx ;	13:4:217:225	1042435	3	True				
ANR	1042462	IdentifierDecl	indx		1042435	0					
ANR	1042463	IdentifierDeclType	int		1042435	0					
ANR	1042464	Identifier	indx		1042435	1					
ANR	1042465	IdentifierDeclStatement	int t1 = 0 ;	15:4:232:242	1042435	4	True				
ANR	1042466	IdentifierDecl	t1 = 0		1042435	0					
ANR	1042467	IdentifierDeclType	int		1042435	0					
ANR	1042468	Identifier	t1		1042435	1					
ANR	1042469	AssignmentExpression	t1 = 0		1042435	2		=			
ANR	1042470	Identifier	t1		1042435	0					
ANR	1042471	PrimaryExpression	0		1042435	1					
ANR	1042472	IdentifierDeclStatement	int t2 = 1 ;	17:4:249:259	1042435	5	True				
ANR	1042473	IdentifierDecl	t2 = 1		1042435	0					
ANR	1042474	IdentifierDeclType	int		1042435	0					
ANR	1042475	Identifier	t2		1042435	1					
ANR	1042476	AssignmentExpression	t2 = 1		1042435	2		=			
ANR	1042477	Identifier	t2		1042435	0					
ANR	1042478	PrimaryExpression	1		1042435	1					
ANR	1042479	IdentifierDeclStatement	float summa = 0.0 ;	19:4:266:283	1042435	6	True				
ANR	1042480	IdentifierDecl	summa = 0.0		1042435	0					
ANR	1042481	IdentifierDeclType	float		1042435	0					
ANR	1042482	Identifier	summa		1042435	1					
ANR	1042483	AssignmentExpression	summa = 0.0		1042435	2		=			
ANR	1042484	Identifier	summa		1042435	0					
ANR	1042485	PrimaryExpression	0.0		1042435	1					
ANR	1042486	IdentifierDeclStatement	int iacc = 0 ;	21:4:290:302	1042435	7	True				
ANR	1042487	IdentifierDecl	iacc = 0		1042435	0					
ANR	1042488	IdentifierDeclType	int		1042435	0					
ANR	1042489	Identifier	iacc		1042435	1					
ANR	1042490	AssignmentExpression	iacc = 0		1042435	2		=			
ANR	1042491	Identifier	iacc		1042435	0					
ANR	1042492	PrimaryExpression	0		1042435	1					
ANR	1042493	IdentifierDeclStatement	int summer = 0 ;	23:4:309:323	1042435	8	True				
ANR	1042494	IdentifierDecl	summer = 0		1042435	0					
ANR	1042495	IdentifierDeclType	int		1042435	0					
ANR	1042496	Identifier	summer		1042435	1					
ANR	1042497	AssignmentExpression	summer = 0		1042435	2		=			
ANR	1042498	Identifier	summer		1042435	0					
ANR	1042499	PrimaryExpression	0		1042435	1					
ANR	1042500	IdentifierDeclStatement	"int rres , cwlen ;"	25:4:330:345	1042435	9	True				
ANR	1042501	IdentifierDecl	rres		1042435	0					
ANR	1042502	IdentifierDeclType	int		1042435	0					
ANR	1042503	Identifier	rres		1042435	1					
ANR	1042504	IdentifierDecl	cwlen		1042435	1					
ANR	1042505	IdentifierDeclType	int		1042435	0					
ANR	1042506	Identifier	cwlen		1042435	1					
ANR	1042507	IdentifierDeclStatement	float lowest = 1.e10 ;	27:4:352:372	1042435	10	True				
ANR	1042508	IdentifierDecl	lowest = 1.e10		1042435	0					
ANR	1042509	IdentifierDeclType	float		1042435	0					
ANR	1042510	Identifier	lowest		1042435	1					
ANR	1042511	AssignmentExpression	lowest = 1.e10		1042435	2		=			
ANR	1042512	Identifier	lowest		1042435	0					
ANR	1042513	PrimaryExpression	1.e10		1042435	1					
ANR	1042514	IdentifierDeclStatement	int low_indx = 0 ;	29:4:379:395	1042435	11	True				
ANR	1042515	IdentifierDecl	low_indx = 0		1042435	0					
ANR	1042516	IdentifierDeclType	int		1042435	0					
ANR	1042517	Identifier	low_indx		1042435	1					
ANR	1042518	AssignmentExpression	low_indx = 0		1042435	2		=			
ANR	1042519	Identifier	low_indx		1042435	0					
ANR	1042520	PrimaryExpression	0		1042435	1					
ANR	1042521	IdentifierDeclStatement	float workT [ 32 ] ;	31:4:402:417	1042435	12	True				
ANR	1042522	IdentifierDecl	workT [ 32 ]		1042435	0					
ANR	1042523	IdentifierDeclType	float [ 32 ]		1042435	0					
ANR	1042524	Identifier	workT		1042435	1					
ANR	1042525	PrimaryExpression	32		1042435	2					
ANR	1042526	IdentifierDeclStatement	int flg ;	33:4:424:431	1042435	13	True				
ANR	1042527	IdentifierDecl	flg		1042435	0					
ANR	1042528	IdentifierDeclType	int		1042435	0					
ANR	1042529	Identifier	flg		1042435	1					
ANR	1042530	IdentifierDeclStatement	int found_indx = 0 ;	35:4:438:456	1042435	14	True				
ANR	1042531	IdentifierDecl	found_indx = 0		1042435	0					
ANR	1042532	IdentifierDeclType	int		1042435	0					
ANR	1042533	Identifier	found_indx		1042435	1					
ANR	1042534	AssignmentExpression	found_indx = 0		1042435	2		=			
ANR	1042535	Identifier	found_indx		1042435	0					
ANR	1042536	PrimaryExpression	0		1042435	1					
ANR	1042537	ForStatement	for ( i = 0 ; i < BANDS ; i ++ )		1042435	15					
ANR	1042538	ForInit	i = 0 ;	39:9:470:475	1042435	0	True				
ANR	1042539	AssignmentExpression	i = 0		1042435	0		=			
ANR	1042540	Identifier	i		1042435	0					
ANR	1042541	PrimaryExpression	0		1042435	1					
ANR	1042542	Condition	i < BANDS	39:16:477:485	1042435	1	True				
ANR	1042543	RelationalExpression	i < BANDS		1042435	0		<			
ANR	1042544	Identifier	i		1042435	0					
ANR	1042545	Identifier	BANDS		1042435	1					
ANR	1042546	PostIncDecOperationExpression	i ++	39:27:488:490	1042435	2	True				
ANR	1042547	Identifier	i		1042435	0					
ANR	1042548	IncDec	++		1042435	1					
ANR	1042549	ExpressionStatement	"highest = FFMAX ( highest , chctx -> flcoeffs1 [ i ] )"	41:8:502:547	1042435	3	True				
ANR	1042550	AssignmentExpression	"highest = FFMAX ( highest , chctx -> flcoeffs1 [ i ] )"		1042435	0		=			
ANR	1042551	Identifier	highest		1042435	0					
ANR	1042552	CallExpression	"FFMAX ( highest , chctx -> flcoeffs1 [ i ] )"		1042435	1					
ANR	1042553	Callee	FFMAX		1042435	0					
ANR	1042554	Identifier	FFMAX		1042435	0					
ANR	1042555	ArgumentList	highest		1042435	1					
ANR	1042556	Argument	highest		1042435	0					
ANR	1042557	Identifier	highest		1042435	0					
ANR	1042558	Argument	chctx -> flcoeffs1 [ i ]		1042435	1					
ANR	1042559	ArrayIndexing	chctx -> flcoeffs1 [ i ]		1042435	0					
ANR	1042560	PtrMemberAccess	chctx -> flcoeffs1		1042435	0					
ANR	1042561	Identifier	chctx		1042435	0					
ANR	1042562	Identifier	flcoeffs1		1042435	1					
ANR	1042563	Identifier	i		1042435	1					
ANR	1042564	ForStatement	for ( i = 0 ; i < BANDS - 1 ; i ++ )		1042435	16					
ANR	1042565	ForInit	i = 0 ;	45:9:561:566	1042435	0	True				
ANR	1042566	AssignmentExpression	i = 0		1042435	0		=			
ANR	1042567	Identifier	i		1042435	0					
ANR	1042568	PrimaryExpression	0		1042435	1					
ANR	1042569	Condition	i < BANDS - 1	45:16:568:580	1042435	1	True				
ANR	1042570	RelationalExpression	i < BANDS - 1		1042435	0		<			
ANR	1042571	Identifier	i		1042435	0					
ANR	1042572	AdditiveExpression	BANDS - 1		1042435	1		-			
ANR	1042573	Identifier	BANDS		1042435	0					
ANR	1042574	PrimaryExpression	1		1042435	1					
ANR	1042575	PostIncDecOperationExpression	i ++	45:31:583:585	1042435	2	True				
ANR	1042576	Identifier	i		1042435	0					
ANR	1042577	IncDec	++		1042435	1					
ANR	1042578	ExpressionStatement	chctx -> flcoeffs4 [ i ] = chctx -> flcoeffs3 [ i ] - log2f ( chctx -> flcoeffs5 [ i ] )	47:8:597:667	1042435	3	True				
ANR	1042579	AssignmentExpression	chctx -> flcoeffs4 [ i ] = chctx -> flcoeffs3 [ i ] - log2f ( chctx -> flcoeffs5 [ i ] )		1042435	0		=			
ANR	1042580	ArrayIndexing	chctx -> flcoeffs4 [ i ]		1042435	0					
ANR	1042581	PtrMemberAccess	chctx -> flcoeffs4		1042435	0					
ANR	1042582	Identifier	chctx		1042435	0					
ANR	1042583	Identifier	flcoeffs4		1042435	1					
ANR	1042584	Identifier	i		1042435	1					
ANR	1042585	AdditiveExpression	chctx -> flcoeffs3 [ i ] - log2f ( chctx -> flcoeffs5 [ i ] )		1042435	1		-			
ANR	1042586	ArrayIndexing	chctx -> flcoeffs3 [ i ]		1042435	0					
ANR	1042587	PtrMemberAccess	chctx -> flcoeffs3		1042435	0					
ANR	1042588	Identifier	chctx		1042435	0					
ANR	1042589	Identifier	flcoeffs3		1042435	1					
ANR	1042590	Identifier	i		1042435	1					
ANR	1042591	CallExpression	log2f ( chctx -> flcoeffs5 [ i ] )		1042435	1					
ANR	1042592	Callee	log2f		1042435	0					
ANR	1042593	Identifier	log2f		1042435	0					
ANR	1042594	ArgumentList	chctx -> flcoeffs5 [ i ]		1042435	1					
ANR	1042595	Argument	chctx -> flcoeffs5 [ i ]		1042435	0					
ANR	1042596	ArrayIndexing	chctx -> flcoeffs5 [ i ]		1042435	0					
ANR	1042597	PtrMemberAccess	chctx -> flcoeffs5		1042435	0					
ANR	1042598	Identifier	chctx		1042435	0					
ANR	1042599	Identifier	flcoeffs5		1042435	1					
ANR	1042600	Identifier	i		1042435	1					
ANR	1042601	ExpressionStatement	chctx -> flcoeffs4 [ BANDS - 1 ] = limit	49:4:674:709	1042435	17	True				
ANR	1042602	AssignmentExpression	chctx -> flcoeffs4 [ BANDS - 1 ] = limit		1042435	0		=			
ANR	1042603	ArrayIndexing	chctx -> flcoeffs4 [ BANDS - 1 ]		1042435	0					
ANR	1042604	PtrMemberAccess	chctx -> flcoeffs4		1042435	0					
ANR	1042605	Identifier	chctx		1042435	0					
ANR	1042606	Identifier	flcoeffs4		1042435	1					
ANR	1042607	AdditiveExpression	BANDS - 1		1042435	1		-			
ANR	1042608	Identifier	BANDS		1042435	0					
ANR	1042609	PrimaryExpression	1		1042435	1					
ANR	1042610	Identifier	limit		1042435	1					
ANR	1042611	ExpressionStatement	highest = highest * 0.25	53:4:718:742	1042435	18	True				
ANR	1042612	AssignmentExpression	highest = highest * 0.25		1042435	0		=			
ANR	1042613	Identifier	highest		1042435	0					
ANR	1042614	MultiplicativeExpression	highest * 0.25		1042435	1		*			
ANR	1042615	Identifier	highest		1042435	0					
ANR	1042616	PrimaryExpression	0.25		1042435	1					
ANR	1042617	ForStatement	for ( i = 0 ; i < BANDS ; i ++ )		1042435	19					
ANR	1042618	ForInit	i = 0 ;	57:9:756:761	1042435	0	True				
ANR	1042619	AssignmentExpression	i = 0		1042435	0		=			
ANR	1042620	Identifier	i		1042435	0					
ANR	1042621	PrimaryExpression	0		1042435	1					
ANR	1042622	Condition	i < BANDS	57:16:763:771	1042435	1	True				
ANR	1042623	RelationalExpression	i < BANDS		1042435	0		<			
ANR	1042624	Identifier	i		1042435	0					
ANR	1042625	Identifier	BANDS		1042435	1					
ANR	1042626	PostIncDecOperationExpression	i ++	57:27:774:776	1042435	2	True				
ANR	1042627	Identifier	i		1042435	0					
ANR	1042628	IncDec	++		1042435	1					
ANR	1042629	CompoundStatement		53:32:642:642	1042435	3					
ANR	1042630	ExpressionStatement	indx = - 1	59:8:790:799	1042435	0	True				
ANR	1042631	AssignmentExpression	indx = - 1		1042435	0		=			
ANR	1042632	Identifier	indx		1042435	0					
ANR	1042633	UnaryOperationExpression	- 1		1042435	1					
ANR	1042634	UnaryOperator	-		1042435	0					
ANR	1042635	PrimaryExpression	1		1042435	1					
ANR	1042636	IfStatement	if ( ( band_tab [ i + 1 ] - band_tab [ i ] ) == chctx -> bandWidthT [ i ] )		1042435	1					
ANR	1042637	Condition	( band_tab [ i + 1 ] - band_tab [ i ] ) == chctx -> bandWidthT [ i ]	61:12:814:868	1042435	0	True				
ANR	1042638	EqualityExpression	( band_tab [ i + 1 ] - band_tab [ i ] ) == chctx -> bandWidthT [ i ]		1042435	0		==			
ANR	1042639	AdditiveExpression	band_tab [ i + 1 ] - band_tab [ i ]		1042435	0		-			
ANR	1042640	ArrayIndexing	band_tab [ i + 1 ]		1042435	0					
ANR	1042641	Identifier	band_tab		1042435	0					
ANR	1042642	AdditiveExpression	i + 1		1042435	1		+			
ANR	1042643	Identifier	i		1042435	0					
ANR	1042644	PrimaryExpression	1		1042435	1					
ANR	1042645	ArrayIndexing	band_tab [ i ]		1042435	1					
ANR	1042646	Identifier	band_tab		1042435	0					
ANR	1042647	Identifier	i		1042435	1					
ANR	1042648	ArrayIndexing	chctx -> bandWidthT [ i ]		1042435	1					
ANR	1042649	PtrMemberAccess	chctx -> bandWidthT		1042435	0					
ANR	1042650	Identifier	chctx		1042435	0					
ANR	1042651	Identifier	bandWidthT		1042435	1					
ANR	1042652	Identifier	i		1042435	1					
ANR	1042653	ExpressionStatement	indx = 0	63:12:884:892	1042435	1	True				
ANR	1042654	AssignmentExpression	indx = 0		1042435	0		=			
ANR	1042655	Identifier	indx		1042435	0					
ANR	1042656	PrimaryExpression	0		1042435	1					
ANR	1042657	IfStatement	if ( ( band_tab [ i + 1 ] - band_tab [ i ] ) > chctx -> bandWidthT [ i ] )		1042435	2					
ANR	1042658	Condition	( band_tab [ i + 1 ] - band_tab [ i ] ) > chctx -> bandWidthT [ i ]	67:12:909:962	1042435	0	True				
ANR	1042659	RelationalExpression	( band_tab [ i + 1 ] - band_tab [ i ] ) > chctx -> bandWidthT [ i ]		1042435	0		>			
ANR	1042660	AdditiveExpression	band_tab [ i + 1 ] - band_tab [ i ]		1042435	0		-			
ANR	1042661	ArrayIndexing	band_tab [ i + 1 ]		1042435	0					
ANR	1042662	Identifier	band_tab		1042435	0					
ANR	1042663	AdditiveExpression	i + 1		1042435	1		+			
ANR	1042664	Identifier	i		1042435	0					
ANR	1042665	PrimaryExpression	1		1042435	1					
ANR	1042666	ArrayIndexing	band_tab [ i ]		1042435	1					
ANR	1042667	Identifier	band_tab		1042435	0					
ANR	1042668	Identifier	i		1042435	1					
ANR	1042669	ArrayIndexing	chctx -> bandWidthT [ i ]		1042435	1					
ANR	1042670	PtrMemberAccess	chctx -> bandWidthT		1042435	0					
ANR	1042671	Identifier	chctx		1042435	0					
ANR	1042672	Identifier	bandWidthT		1042435	1					
ANR	1042673	Identifier	i		1042435	1					
ANR	1042674	ExpressionStatement	indx = 1	69:12:978:986	1042435	1	True				
ANR	1042675	AssignmentExpression	indx = 1		1042435	0		=			
ANR	1042676	Identifier	indx		1042435	0					
ANR	1042677	PrimaryExpression	1		1042435	1					
ANR	1042678	IfStatement	if ( ( ( band_tab [ i + 1 ] - band_tab [ i ] ) / 2 ) >= chctx -> bandWidthT [ i ] )		1042435	3					
ANR	1042679	Condition	( ( band_tab [ i + 1 ] - band_tab [ i ] ) / 2 ) >= chctx -> bandWidthT [ i ]	73:12:1003:1063	1042435	0	True				
ANR	1042680	RelationalExpression	( ( band_tab [ i + 1 ] - band_tab [ i ] ) / 2 ) >= chctx -> bandWidthT [ i ]		1042435	0		>=			
ANR	1042681	MultiplicativeExpression	( band_tab [ i + 1 ] - band_tab [ i ] ) / 2		1042435	0		/			
ANR	1042682	AdditiveExpression	band_tab [ i + 1 ] - band_tab [ i ]		1042435	0		-			
ANR	1042683	ArrayIndexing	band_tab [ i + 1 ]		1042435	0					
ANR	1042684	Identifier	band_tab		1042435	0					
ANR	1042685	AdditiveExpression	i + 1		1042435	1		+			
ANR	1042686	Identifier	i		1042435	0					
ANR	1042687	PrimaryExpression	1		1042435	1					
ANR	1042688	ArrayIndexing	band_tab [ i ]		1042435	1					
ANR	1042689	Identifier	band_tab		1042435	0					
ANR	1042690	Identifier	i		1042435	1					
ANR	1042691	PrimaryExpression	2		1042435	1					
ANR	1042692	ArrayIndexing	chctx -> bandWidthT [ i ]		1042435	1					
ANR	1042693	PtrMemberAccess	chctx -> bandWidthT		1042435	0					
ANR	1042694	Identifier	chctx		1042435	0					
ANR	1042695	Identifier	bandWidthT		1042435	1					
ANR	1042696	Identifier	i		1042435	1					
ANR	1042697	ExpressionStatement	indx = 2	75:12:1079:1087	1042435	1	True				
ANR	1042698	AssignmentExpression	indx = 2		1042435	0		=			
ANR	1042699	Identifier	indx		1042435	0					
ANR	1042700	PrimaryExpression	2		1042435	1					
ANR	1042701	IfStatement	if ( indx == - 1 )		1042435	4					
ANR	1042702	Condition	indx == - 1	79:12:1104:1113	1042435	0	True				
ANR	1042703	EqualityExpression	indx == - 1		1042435	0		==			
ANR	1042704	Identifier	indx		1042435	0					
ANR	1042705	UnaryOperationExpression	- 1		1042435	1					
ANR	1042706	UnaryOperator	-		1042435	0					
ANR	1042707	PrimaryExpression	1		1042435	1					
ANR	1042708	ReturnStatement	return AVERROR_INVALIDDATA ;	81:12:1129:1155	1042435	1	True				
ANR	1042709	Identifier	AVERROR_INVALIDDATA		1042435	0					
ANR	1042710	ExpressionStatement	chctx -> flcoeffs4 [ i ] += xTab [ ( indx * 2 + ( chctx -> flcoeffs1 [ i ] < highest ) ) * 2 + flag ]	85:8:1168:1252	1042435	5	True				
ANR	1042711	AssignmentExpression	chctx -> flcoeffs4 [ i ] += xTab [ ( indx * 2 + ( chctx -> flcoeffs1 [ i ] < highest ) ) * 2 + flag ]		1042435	0		+=			
ANR	1042712	ArrayIndexing	chctx -> flcoeffs4 [ i ]		1042435	0					
ANR	1042713	PtrMemberAccess	chctx -> flcoeffs4		1042435	0					
ANR	1042714	Identifier	chctx		1042435	0					
ANR	1042715	Identifier	flcoeffs4		1042435	1					
ANR	1042716	Identifier	i		1042435	1					
ANR	1042717	ArrayIndexing	xTab [ ( indx * 2 + ( chctx -> flcoeffs1 [ i ] < highest ) ) * 2 + flag ]		1042435	1					
ANR	1042718	Identifier	xTab		1042435	0					
ANR	1042719	AdditiveExpression	( indx * 2 + ( chctx -> flcoeffs1 [ i ] < highest ) ) * 2 + flag		1042435	1		+			
ANR	1042720	MultiplicativeExpression	( indx * 2 + ( chctx -> flcoeffs1 [ i ] < highest ) ) * 2		1042435	0		*			
ANR	1042721	AdditiveExpression	indx * 2 + ( chctx -> flcoeffs1 [ i ] < highest )		1042435	0		+			
ANR	1042722	MultiplicativeExpression	indx * 2		1042435	0		*			
ANR	1042723	Identifier	indx		1042435	0					
ANR	1042724	PrimaryExpression	2		1042435	1					
ANR	1042725	RelationalExpression	chctx -> flcoeffs1 [ i ] < highest		1042435	1		<			
ANR	1042726	ArrayIndexing	chctx -> flcoeffs1 [ i ]		1042435	0					
ANR	1042727	PtrMemberAccess	chctx -> flcoeffs1		1042435	0					
ANR	1042728	Identifier	chctx		1042435	0					
ANR	1042729	Identifier	flcoeffs1		1042435	1					
ANR	1042730	Identifier	i		1042435	1					
ANR	1042731	Identifier	highest		1042435	1					
ANR	1042732	PrimaryExpression	2		1042435	1					
ANR	1042733	Identifier	flag		1042435	1					
ANR	1042734	IfStatement	if ( stream_format_code & 0x2 )		1042435	20					
ANR	1042735	Condition	stream_format_code & 0x2	91:8:1272:1295	1042435	0	True				
ANR	1042736	BitAndExpression	stream_format_code & 0x2		1042435	0		&			
ANR	1042737	Identifier	stream_format_code		1042435	0					
ANR	1042738	PrimaryExpression	0x2		1042435	1					
ANR	1042739	CompoundStatement		87:34:1161:1161	1042435	1					
ANR	1042740	ExpressionStatement	chctx -> flcoeffs4 [ 0 ] = limit	93:8:1309:1336	1042435	0	True				
ANR	1042741	AssignmentExpression	chctx -> flcoeffs4 [ 0 ] = limit		1042435	0		=			
ANR	1042742	ArrayIndexing	chctx -> flcoeffs4 [ 0 ]		1042435	0					
ANR	1042743	PtrMemberAccess	chctx -> flcoeffs4		1042435	0					
ANR	1042744	Identifier	chctx		1042435	0					
ANR	1042745	Identifier	flcoeffs4		1042435	1					
ANR	1042746	PrimaryExpression	0		1042435	1					
ANR	1042747	Identifier	limit		1042435	1					
ANR	1042748	ExpressionStatement	chctx -> flcoeffs4 [ 1 ] = limit	95:8:1347:1374	1042435	1	True				
ANR	1042749	AssignmentExpression	chctx -> flcoeffs4 [ 1 ] = limit		1042435	0		=			
ANR	1042750	ArrayIndexing	chctx -> flcoeffs4 [ 1 ]		1042435	0					
ANR	1042751	PtrMemberAccess	chctx -> flcoeffs4		1042435	0					
ANR	1042752	Identifier	chctx		1042435	0					
ANR	1042753	Identifier	flcoeffs4		1042435	1					
ANR	1042754	PrimaryExpression	1		1042435	1					
ANR	1042755	Identifier	limit		1042435	1					
ANR	1042756	ExpressionStatement	chctx -> flcoeffs4 [ 2 ] = limit	97:8:1385:1412	1042435	2	True				
ANR	1042757	AssignmentExpression	chctx -> flcoeffs4 [ 2 ] = limit		1042435	0		=			
ANR	1042758	ArrayIndexing	chctx -> flcoeffs4 [ 2 ]		1042435	0					
ANR	1042759	PtrMemberAccess	chctx -> flcoeffs4		1042435	0					
ANR	1042760	Identifier	chctx		1042435	0					
ANR	1042761	Identifier	flcoeffs4		1042435	1					
ANR	1042762	PrimaryExpression	2		1042435	1					
ANR	1042763	Identifier	limit		1042435	1					
ANR	1042764	ExpressionStatement	chctx -> flcoeffs4 [ 3 ] = limit	99:8:1423:1450	1042435	3	True				
ANR	1042765	AssignmentExpression	chctx -> flcoeffs4 [ 3 ] = limit		1042435	0		=			
ANR	1042766	ArrayIndexing	chctx -> flcoeffs4 [ 3 ]		1042435	0					
ANR	1042767	PtrMemberAccess	chctx -> flcoeffs4		1042435	0					
ANR	1042768	Identifier	chctx		1042435	0					
ANR	1042769	Identifier	flcoeffs4		1042435	1					
ANR	1042770	PrimaryExpression	3		1042435	1					
ANR	1042771	Identifier	limit		1042435	1					
ANR	1042772	ForStatement	for ( i = ( stream_format_code & 0x2 ) ? 4 : 0 ; i < BANDS - 1 ; i ++ )		1042435	21					
ANR	1042773	ForInit	i = ( stream_format_code & 0x2 ) ? 4 : 0 ;	105:9:1471:1509	1042435	0	True				
ANR	1042774	AssignmentExpression	i = ( stream_format_code & 0x2 ) ? 4 : 0		1042435	0		=			
ANR	1042775	Identifier	i		1042435	0					
ANR	1042776	ConditionalExpression	( stream_format_code & 0x2 ) ? 4 : 0		1042435	1					
ANR	1042777	Condition	stream_format_code & 0x2		1042435	0					
ANR	1042778	BitAndExpression	stream_format_code & 0x2		1042435	0		&			
ANR	1042779	Identifier	stream_format_code		1042435	0					
ANR	1042780	PrimaryExpression	0x2		1042435	1					
ANR	1042781	PrimaryExpression	4		1042435	1					
ANR	1042782	PrimaryExpression	0		1042435	2					
ANR	1042783	Condition	i < BANDS - 1	105:49:1511:1523	1042435	1	True				
ANR	1042784	RelationalExpression	i < BANDS - 1		1042435	0		<			
ANR	1042785	Identifier	i		1042435	0					
ANR	1042786	AdditiveExpression	BANDS - 1		1042435	1		-			
ANR	1042787	Identifier	BANDS		1042435	0					
ANR	1042788	PrimaryExpression	1		1042435	1					
ANR	1042789	PostIncDecOperationExpression	i ++	105:64:1526:1528	1042435	2	True				
ANR	1042790	Identifier	i		1042435	0					
ANR	1042791	IncDec	++		1042435	1					
ANR	1042792	CompoundStatement		101:69:1394:1394	1042435	3					
ANR	1042793	ExpressionStatement	iacc += chctx -> bandWidthT [ i ]	107:8:1542:1571	1042435	0	True				
ANR	1042794	AssignmentExpression	iacc += chctx -> bandWidthT [ i ]		1042435	0		+=			
ANR	1042795	Identifier	iacc		1042435	0					
ANR	1042796	ArrayIndexing	chctx -> bandWidthT [ i ]		1042435	1					
ANR	1042797	PtrMemberAccess	chctx -> bandWidthT		1042435	0					
ANR	1042798	Identifier	chctx		1042435	0					
ANR	1042799	Identifier	bandWidthT		1042435	1					
ANR	1042800	Identifier	i		1042435	1					
ANR	1042801	ExpressionStatement	summa += chctx -> bandWidthT [ i ] * chctx -> flcoeffs4 [ i ]	109:8:1582:1633	1042435	1	True				
ANR	1042802	AssignmentExpression	summa += chctx -> bandWidthT [ i ] * chctx -> flcoeffs4 [ i ]		1042435	0		+=			
ANR	1042803	Identifier	summa		1042435	0					
ANR	1042804	MultiplicativeExpression	chctx -> bandWidthT [ i ] * chctx -> flcoeffs4 [ i ]		1042435	1		*			
ANR	1042805	ArrayIndexing	chctx -> bandWidthT [ i ]		1042435	0					
ANR	1042806	PtrMemberAccess	chctx -> bandWidthT		1042435	0					
ANR	1042807	Identifier	chctx		1042435	0					
ANR	1042808	Identifier	bandWidthT		1042435	1					
ANR	1042809	Identifier	i		1042435	1					
ANR	1042810	ArrayIndexing	chctx -> flcoeffs4 [ i ]		1042435	1					
ANR	1042811	PtrMemberAccess	chctx -> flcoeffs4		1042435	0					
ANR	1042812	Identifier	chctx		1042435	0					
ANR	1042813	Identifier	flcoeffs4		1042435	1					
ANR	1042814	Identifier	i		1042435	1					
ANR	1042815	IfStatement	if ( ! iacc )		1042435	22					
ANR	1042816	Condition	! iacc	115:8:1653:1657	1042435	0	True				
ANR	1042817	UnaryOperationExpression	! iacc		1042435	0					
ANR	1042818	UnaryOperator	!		1042435	0					
ANR	1042819	Identifier	iacc		1042435	1					
ANR	1042820	ReturnStatement	return AVERROR_INVALIDDATA ;	117:8:1669:1695	1042435	1	True				
ANR	1042821	Identifier	AVERROR_INVALIDDATA		1042435	0					
ANR	1042822	ExpressionStatement	chctx -> bandWidthT [ BANDS - 1 ] = 0	121:4:1704:1736	1042435	23	True				
ANR	1042823	AssignmentExpression	chctx -> bandWidthT [ BANDS - 1 ] = 0		1042435	0		=			
ANR	1042824	ArrayIndexing	chctx -> bandWidthT [ BANDS - 1 ]		1042435	0					
ANR	1042825	PtrMemberAccess	chctx -> bandWidthT		1042435	0					
ANR	1042826	Identifier	chctx		1042435	0					
ANR	1042827	Identifier	bandWidthT		1042435	1					
ANR	1042828	AdditiveExpression	BANDS - 1		1042435	1		-			
ANR	1042829	Identifier	BANDS		1042435	0					
ANR	1042830	PrimaryExpression	1		1042435	1					
ANR	1042831	PrimaryExpression	0		1042435	1					
ANR	1042832	ExpressionStatement	summa = ( summa * 0.5 - freebits ) / iacc	123:4:1743:1782	1042435	24	True				
ANR	1042833	AssignmentExpression	summa = ( summa * 0.5 - freebits ) / iacc		1042435	0		=			
ANR	1042834	Identifier	summa		1042435	0					
ANR	1042835	MultiplicativeExpression	( summa * 0.5 - freebits ) / iacc		1042435	1		/			
ANR	1042836	AdditiveExpression	summa * 0.5 - freebits		1042435	0		-			
ANR	1042837	MultiplicativeExpression	summa * 0.5		1042435	0		*			
ANR	1042838	Identifier	summa		1042435	0					
ANR	1042839	PrimaryExpression	0.5		1042435	1					
ANR	1042840	Identifier	freebits		1042435	1					
ANR	1042841	Identifier	iacc		1042435	1					
ANR	1042842	ForStatement	for ( i = 0 ; i < BANDS / 2 ; i ++ )		1042435	25					
ANR	1042843	ForInit	i = 0 ;	129:9:1798:1803	1042435	0	True				
ANR	1042844	AssignmentExpression	i = 0		1042435	0		=			
ANR	1042845	Identifier	i		1042435	0					
ANR	1042846	PrimaryExpression	0		1042435	1					
ANR	1042847	Condition	i < BANDS / 2	129:16:1805:1817	1042435	1	True				
ANR	1042848	RelationalExpression	i < BANDS / 2		1042435	0		<			
ANR	1042849	Identifier	i		1042435	0					
ANR	1042850	MultiplicativeExpression	BANDS / 2		1042435	1		/			
ANR	1042851	Identifier	BANDS		1042435	0					
ANR	1042852	PrimaryExpression	2		1042435	1					
ANR	1042853	PostIncDecOperationExpression	i ++	129:31:1820:1822	1042435	2	True				
ANR	1042854	Identifier	i		1042435	0					
ANR	1042855	IncDec	++		1042435	1					
ANR	1042856	CompoundStatement		125:36:1688:1688	1042435	3					
ANR	1042857	ExpressionStatement	rres = summer - freebits	131:8:1836:1860	1042435	0	True				
ANR	1042858	AssignmentExpression	rres = summer - freebits		1042435	0		=			
ANR	1042859	Identifier	rres		1042435	0					
ANR	1042860	AdditiveExpression	summer - freebits		1042435	1		-			
ANR	1042861	Identifier	summer		1042435	0					
ANR	1042862	Identifier	freebits		1042435	1					
ANR	1042863	IfStatement	if ( ( rres >= - 8 ) && ( rres <= 8 ) )		1042435	1					
ANR	1042864	Condition	( rres >= - 8 ) && ( rres <= 8 )	133:12:1875:1901	1042435	0	True				
ANR	1042865	AndExpression	( rres >= - 8 ) && ( rres <= 8 )		1042435	0		&&			
ANR	1042866	RelationalExpression	rres >= - 8		1042435	0		>=			
ANR	1042867	Identifier	rres		1042435	0					
ANR	1042868	UnaryOperationExpression	- 8		1042435	1					
ANR	1042869	UnaryOperator	-		1042435	0					
ANR	1042870	PrimaryExpression	8		1042435	1					
ANR	1042871	RelationalExpression	rres <= 8		1042435	1		<=			
ANR	1042872	Identifier	rres		1042435	0					
ANR	1042873	PrimaryExpression	8		1042435	1					
ANR	1042874	BreakStatement	break ;	135:12:1917:1922	1042435	1	True				
ANR	1042875	ExpressionStatement	summer = 0	139:8:1935:1945	1042435	2	True				
ANR	1042876	AssignmentExpression	summer = 0		1042435	0		=			
ANR	1042877	Identifier	summer		1042435	0					
ANR	1042878	PrimaryExpression	0		1042435	1					
ANR	1042879	ExpressionStatement	iacc = 0	141:8:1956:1966	1042435	3	True				
ANR	1042880	AssignmentExpression	iacc = 0		1042435	0		=			
ANR	1042881	Identifier	iacc		1042435	0					
ANR	1042882	PrimaryExpression	0		1042435	1					
ANR	1042883	ForStatement	for ( j = ( stream_format_code & 0x2 ) ? 4 : 0 ; j < BANDS ; j ++ )		1042435	4					
ANR	1042884	ForInit	j = ( stream_format_code & 0x2 ) ? 4 : 0 ;	145:13:1984:2022	1042435	0	True				
ANR	1042885	AssignmentExpression	j = ( stream_format_code & 0x2 ) ? 4 : 0		1042435	0		=			
ANR	1042886	Identifier	j		1042435	0					
ANR	1042887	ConditionalExpression	( stream_format_code & 0x2 ) ? 4 : 0		1042435	1					
ANR	1042888	Condition	stream_format_code & 0x2		1042435	0					
ANR	1042889	BitAndExpression	stream_format_code & 0x2		1042435	0		&			
ANR	1042890	Identifier	stream_format_code		1042435	0					
ANR	1042891	PrimaryExpression	0x2		1042435	1					
ANR	1042892	PrimaryExpression	4		1042435	1					
ANR	1042893	PrimaryExpression	0		1042435	2					
ANR	1042894	Condition	j < BANDS	145:53:2024:2032	1042435	1	True				
ANR	1042895	RelationalExpression	j < BANDS		1042435	0		<			
ANR	1042896	Identifier	j		1042435	0					
ANR	1042897	Identifier	BANDS		1042435	1					
ANR	1042898	PostIncDecOperationExpression	j ++	145:64:2035:2037	1042435	2	True				
ANR	1042899	Identifier	j		1042435	0					
ANR	1042900	IncDec	++		1042435	1					
ANR	1042901	CompoundStatement		141:69:1903:1903	1042435	3					
ANR	1042902	ExpressionStatement	"cwlen = av_clipf ( ( ( chctx -> flcoeffs4 [ j ] * 0.5 ) - summa + 0.5 ) , 0 , 6 )"	147:12:2055:2122	1042435	0	True				
ANR	1042903	AssignmentExpression	"cwlen = av_clipf ( ( ( chctx -> flcoeffs4 [ j ] * 0.5 ) - summa + 0.5 ) , 0 , 6 )"		1042435	0		=			
ANR	1042904	Identifier	cwlen		1042435	0					
ANR	1042905	CallExpression	"av_clipf ( ( ( chctx -> flcoeffs4 [ j ] * 0.5 ) - summa + 0.5 ) , 0 , 6 )"		1042435	1					
ANR	1042906	Callee	av_clipf		1042435	0					
ANR	1042907	Identifier	av_clipf		1042435	0					
ANR	1042908	ArgumentList	( chctx -> flcoeffs4 [ j ] * 0.5 ) - summa + 0.5		1042435	1					
ANR	1042909	Argument	( chctx -> flcoeffs4 [ j ] * 0.5 ) - summa + 0.5		1042435	0					
ANR	1042910	AdditiveExpression	( chctx -> flcoeffs4 [ j ] * 0.5 ) - summa + 0.5		1042435	0		-			
ANR	1042911	MultiplicativeExpression	chctx -> flcoeffs4 [ j ] * 0.5		1042435	0		*			
ANR	1042912	ArrayIndexing	chctx -> flcoeffs4 [ j ]		1042435	0					
ANR	1042913	PtrMemberAccess	chctx -> flcoeffs4		1042435	0					
ANR	1042914	Identifier	chctx		1042435	0					
ANR	1042915	Identifier	flcoeffs4		1042435	1					
ANR	1042916	Identifier	j		1042435	1					
ANR	1042917	PrimaryExpression	0.5		1042435	1					
ANR	1042918	AdditiveExpression	summa + 0.5		1042435	1		+			
ANR	1042919	Identifier	summa		1042435	0					
ANR	1042920	PrimaryExpression	0.5		1042435	1					
ANR	1042921	Argument	0		1042435	1					
ANR	1042922	PrimaryExpression	0		1042435	0					
ANR	1042923	Argument	6		1042435	2					
ANR	1042924	PrimaryExpression	6		1042435	0					
ANR	1042925	ExpressionStatement	chctx -> bitsBandT [ j ] = cwlen	151:12:2139:2166	1042435	1	True				
ANR	1042926	AssignmentExpression	chctx -> bitsBandT [ j ] = cwlen		1042435	0		=			
ANR	1042927	ArrayIndexing	chctx -> bitsBandT [ j ]		1042435	0					
ANR	1042928	PtrMemberAccess	chctx -> bitsBandT		1042435	0					
ANR	1042929	Identifier	chctx		1042435	0					
ANR	1042930	Identifier	bitsBandT		1042435	1					
ANR	1042931	Identifier	j		1042435	1					
ANR	1042932	Identifier	cwlen		1042435	1					
ANR	1042933	ExpressionStatement	summer += chctx -> bandWidthT [ j ] * cwlen	153:12:2181:2219	1042435	2	True				
ANR	1042934	AssignmentExpression	summer += chctx -> bandWidthT [ j ] * cwlen		1042435	0		+=			
ANR	1042935	Identifier	summer		1042435	0					
ANR	1042936	MultiplicativeExpression	chctx -> bandWidthT [ j ] * cwlen		1042435	1		*			
ANR	1042937	ArrayIndexing	chctx -> bandWidthT [ j ]		1042435	0					
ANR	1042938	PtrMemberAccess	chctx -> bandWidthT		1042435	0					
ANR	1042939	Identifier	chctx		1042435	0					
ANR	1042940	Identifier	bandWidthT		1042435	1					
ANR	1042941	Identifier	j		1042435	1					
ANR	1042942	Identifier	cwlen		1042435	1					
ANR	1042943	IfStatement	if ( cwlen > 0 )		1042435	3					
ANR	1042944	Condition	cwlen > 0	157:16:2240:2248	1042435	0	True				
ANR	1042945	RelationalExpression	cwlen > 0		1042435	0		>			
ANR	1042946	Identifier	cwlen		1042435	0					
ANR	1042947	PrimaryExpression	0		1042435	1					
ANR	1042948	ExpressionStatement	iacc += chctx -> bandWidthT [ j ]	159:16:2268:2296	1042435	1	True				
ANR	1042949	AssignmentExpression	iacc += chctx -> bandWidthT [ j ]		1042435	0		+=			
ANR	1042950	Identifier	iacc		1042435	0					
ANR	1042951	ArrayIndexing	chctx -> bandWidthT [ j ]		1042435	1					
ANR	1042952	PtrMemberAccess	chctx -> bandWidthT		1042435	0					
ANR	1042953	Identifier	chctx		1042435	0					
ANR	1042954	Identifier	bandWidthT		1042435	1					
ANR	1042955	Identifier	j		1042435	1					
ANR	1042956	ExpressionStatement	flg = t2	165:8:2320:2328	1042435	5	True				
ANR	1042957	AssignmentExpression	flg = t2		1042435	0		=			
ANR	1042958	Identifier	flg		1042435	0					
ANR	1042959	Identifier	t2		1042435	1					
ANR	1042960	ExpressionStatement	t2 = 1	167:8:2339:2345	1042435	6	True				
ANR	1042961	AssignmentExpression	t2 = 1		1042435	0		=			
ANR	1042962	Identifier	t2		1042435	0					
ANR	1042963	PrimaryExpression	1		1042435	1					
ANR	1042964	IfStatement	if ( freebits < summer )		1042435	7					
ANR	1042965	Condition	freebits < summer	169:12:2360:2376	1042435	0	True				
ANR	1042966	RelationalExpression	freebits < summer		1042435	0		<			
ANR	1042967	Identifier	freebits		1042435	0					
ANR	1042968	Identifier	summer		1042435	1					
ANR	1042969	ExpressionStatement	t2 = - 1	171:12:2392:2399	1042435	1	True				
ANR	1042970	AssignmentExpression	t2 = - 1		1042435	0		=			
ANR	1042971	Identifier	t2		1042435	0					
ANR	1042972	UnaryOperationExpression	- 1		1042435	1					
ANR	1042973	UnaryOperator	-		1042435	0					
ANR	1042974	PrimaryExpression	1		1042435	1					
ANR	1042975	IfStatement	if ( i == 0 )		1042435	8					
ANR	1042976	Condition	i == 0	173:12:2414:2419	1042435	0	True				
ANR	1042977	EqualityExpression	i == 0		1042435	0		==			
ANR	1042978	Identifier	i		1042435	0					
ANR	1042979	PrimaryExpression	0		1042435	1					
ANR	1042980	ExpressionStatement	flg = t2	175:12:2435:2443	1042435	1	True				
ANR	1042981	AssignmentExpression	flg = t2		1042435	0		=			
ANR	1042982	Identifier	flg		1042435	0					
ANR	1042983	Identifier	t2		1042435	1					
ANR	1042984	IfStatement	if ( flg != t2 )		1042435	9					
ANR	1042985	Condition	flg != t2	177:12:2458:2466	1042435	0	True				
ANR	1042986	EqualityExpression	flg != t2		1042435	0		!=			
ANR	1042987	Identifier	flg		1042435	0					
ANR	1042988	Identifier	t2		1042435	1					
ANR	1042989	ExpressionStatement	t1 ++	179:12:2482:2486	1042435	1	True				
ANR	1042990	PostIncDecOperationExpression	t1 ++		1042435	0					
ANR	1042991	Identifier	t1		1042435	0					
ANR	1042992	IncDec	++		1042435	1					
ANR	1042993	ExpressionStatement	summa = ( float ) ( summer - freebits ) / ( ( t1 + 1 ) * iacc ) + summa	183:8:2499:2561	1042435	10	True				
ANR	1042994	AssignmentExpression	summa = ( float ) ( summer - freebits ) / ( ( t1 + 1 ) * iacc ) + summa		1042435	0		=			
ANR	1042995	Identifier	summa		1042435	0					
ANR	1042996	AdditiveExpression	( float ) ( summer - freebits ) / ( ( t1 + 1 ) * iacc ) + summa		1042435	1		+			
ANR	1042997	MultiplicativeExpression	( float ) ( summer - freebits ) / ( ( t1 + 1 ) * iacc )		1042435	0		/			
ANR	1042998	CastExpression	( float ) ( summer - freebits )		1042435	0					
ANR	1042999	CastTarget	float		1042435	0					
ANR	1043000	AdditiveExpression	summer - freebits		1042435	1		-			
ANR	1043001	Identifier	summer		1042435	0					
ANR	1043002	Identifier	freebits		1042435	1					
ANR	1043003	MultiplicativeExpression	( t1 + 1 ) * iacc		1042435	1		*			
ANR	1043004	AdditiveExpression	t1 + 1		1042435	0		+			
ANR	1043005	Identifier	t1		1042435	0					
ANR	1043006	PrimaryExpression	1		1042435	1					
ANR	1043007	Identifier	iacc		1042435	1					
ANR	1043008	Identifier	summa		1042435	1					
ANR	1043009	ForStatement	for ( i = ( stream_format_code & 0x2 ) ? 4 : 0 ; i < BANDS ; i ++ )		1042435	26					
ANR	1043010	ForInit	i = ( stream_format_code & 0x2 ) ? 4 : 0 ;	189:9:2582:2620	1042435	0	True				
ANR	1043011	AssignmentExpression	i = ( stream_format_code & 0x2 ) ? 4 : 0		1042435	0		=			
ANR	1043012	Identifier	i		1042435	0					
ANR	1043013	ConditionalExpression	( stream_format_code & 0x2 ) ? 4 : 0		1042435	1					
ANR	1043014	Condition	stream_format_code & 0x2		1042435	0					
ANR	1043015	BitAndExpression	stream_format_code & 0x2		1042435	0		&			
ANR	1043016	Identifier	stream_format_code		1042435	0					
ANR	1043017	PrimaryExpression	0x2		1042435	1					
ANR	1043018	PrimaryExpression	4		1042435	1					
ANR	1043019	PrimaryExpression	0		1042435	2					
ANR	1043020	Condition	i < BANDS	189:49:2622:2630	1042435	1	True				
ANR	1043021	RelationalExpression	i < BANDS		1042435	0		<			
ANR	1043022	Identifier	i		1042435	0					
ANR	1043023	Identifier	BANDS		1042435	1					
ANR	1043024	PostIncDecOperationExpression	i ++	189:60:2633:2635	1042435	2	True				
ANR	1043025	Identifier	i		1042435	0					
ANR	1043026	IncDec	++		1042435	1					
ANR	1043027	CompoundStatement		185:65:2501:2501	1042435	3					
ANR	1043028	ForStatement	for ( j = band_tab [ i ] ; j < band_tab [ i + 1 ] ; j ++ )		1042435	0					
ANR	1043029	ForInit	j = band_tab [ i ] ;	191:13:2654:2669	1042435	0	True				
ANR	1043030	AssignmentExpression	j = band_tab [ i ]		1042435	0		=			
ANR	1043031	Identifier	j		1042435	0					
ANR	1043032	ArrayIndexing	band_tab [ i ]		1042435	1					
ANR	1043033	Identifier	band_tab		1042435	0					
ANR	1043034	Identifier	i		1042435	1					
ANR	1043035	Condition	j < band_tab [ i + 1 ]	191:30:2671:2689	1042435	1	True				
ANR	1043036	RelationalExpression	j < band_tab [ i + 1 ]		1042435	0		<			
ANR	1043037	Identifier	j		1042435	0					
ANR	1043038	ArrayIndexing	band_tab [ i + 1 ]		1042435	1					
ANR	1043039	Identifier	band_tab		1042435	0					
ANR	1043040	AdditiveExpression	i + 1		1042435	1		+			
ANR	1043041	Identifier	i		1042435	0					
ANR	1043042	PrimaryExpression	1		1042435	1					
ANR	1043043	PostIncDecOperationExpression	j ++	191:51:2692:2694	1042435	2	True				
ANR	1043044	Identifier	j		1042435	0					
ANR	1043045	IncDec	++		1042435	1					
ANR	1043046	ExpressionStatement	chctx -> CWlengthT [ j ] = chctx -> bitsBandT [ i ]	193:12:2710:2751	1042435	3	True				
ANR	1043047	AssignmentExpression	chctx -> CWlengthT [ j ] = chctx -> bitsBandT [ i ]		1042435	0		=			
ANR	1043048	ArrayIndexing	chctx -> CWlengthT [ j ]		1042435	0					
ANR	1043049	PtrMemberAccess	chctx -> CWlengthT		1042435	0					
ANR	1043050	Identifier	chctx		1042435	0					
ANR	1043051	Identifier	CWlengthT		1042435	1					
ANR	1043052	Identifier	j		1042435	1					
ANR	1043053	ArrayIndexing	chctx -> bitsBandT [ i ]		1042435	1					
ANR	1043054	PtrMemberAccess	chctx -> bitsBandT		1042435	0					
ANR	1043055	Identifier	chctx		1042435	0					
ANR	1043056	Identifier	bitsBandT		1042435	1					
ANR	1043057	Identifier	i		1042435	1					
ANR	1043058	IfStatement	if ( freebits > summer )		1042435	27					
ANR	1043059	Condition	freebits > summer	199:8:2771:2787	1042435	0	True				
ANR	1043060	RelationalExpression	freebits > summer		1042435	0		>			
ANR	1043061	Identifier	freebits		1042435	0					
ANR	1043062	Identifier	summer		1042435	1					
ANR	1043063	CompoundStatement		195:27:2653:2653	1042435	1					
ANR	1043064	ForStatement	for ( i = 0 ; i < BANDS ; i ++ )		1042435	0					
ANR	1043065	ForInit	i = 0 ;	201:13:2806:2811	1042435	0	True				
ANR	1043066	AssignmentExpression	i = 0		1042435	0		=			
ANR	1043067	Identifier	i		1042435	0					
ANR	1043068	PrimaryExpression	0		1042435	1					
ANR	1043069	Condition	i < BANDS	201:20:2813:2821	1042435	1	True				
ANR	1043070	RelationalExpression	i < BANDS		1042435	0		<			
ANR	1043071	Identifier	i		1042435	0					
ANR	1043072	Identifier	BANDS		1042435	1					
ANR	1043073	PostIncDecOperationExpression	i ++	201:31:2824:2826	1042435	2	True				
ANR	1043074	Identifier	i		1042435	0					
ANR	1043075	IncDec	++		1042435	1					
ANR	1043076	CompoundStatement		197:36:2692:2692	1042435	3					
ANR	1043077	ExpressionStatement	workT [ i ] = ( chctx -> bitsBandT [ i ] == 6 ) ? - 1.e20 : ( chctx -> bitsBandT [ i ] * - 2 + chctx -> flcoeffs4 [ i ] - 0.415 )	203:12:2844:2996	1042435	0	True				
ANR	1043078	AssignmentExpression	workT [ i ] = ( chctx -> bitsBandT [ i ] == 6 ) ? - 1.e20 : ( chctx -> bitsBandT [ i ] * - 2 + chctx -> flcoeffs4 [ i ] - 0.415 )		1042435	0		=			
ANR	1043079	ArrayIndexing	workT [ i ]		1042435	0					
ANR	1043080	Identifier	workT		1042435	0					
ANR	1043081	Identifier	i		1042435	1					
ANR	1043082	ConditionalExpression	( chctx -> bitsBandT [ i ] == 6 ) ? - 1.e20 : ( chctx -> bitsBandT [ i ] * - 2 + chctx -> flcoeffs4 [ i ] - 0.415 )		1042435	1					
ANR	1043083	Condition	chctx -> bitsBandT [ i ] == 6		1042435	0					
ANR	1043084	EqualityExpression	chctx -> bitsBandT [ i ] == 6		1042435	0		==			
ANR	1043085	ArrayIndexing	chctx -> bitsBandT [ i ]		1042435	0					
ANR	1043086	PtrMemberAccess	chctx -> bitsBandT		1042435	0					
ANR	1043087	Identifier	chctx		1042435	0					
ANR	1043088	Identifier	bitsBandT		1042435	1					
ANR	1043089	Identifier	i		1042435	1					
ANR	1043090	PrimaryExpression	6		1042435	1					
ANR	1043091	UnaryOperationExpression	- 1.e20		1042435	1					
ANR	1043092	UnaryOperator	-		1042435	0					
ANR	1043093	PrimaryExpression	1.e20		1042435	1					
ANR	1043094	AdditiveExpression	chctx -> bitsBandT [ i ] * - 2 + chctx -> flcoeffs4 [ i ] - 0.415		1042435	2		+			
ANR	1043095	MultiplicativeExpression	chctx -> bitsBandT [ i ] * - 2		1042435	0		*			
ANR	1043096	ArrayIndexing	chctx -> bitsBandT [ i ]		1042435	0					
ANR	1043097	PtrMemberAccess	chctx -> bitsBandT		1042435	0					
ANR	1043098	Identifier	chctx		1042435	0					
ANR	1043099	Identifier	bitsBandT		1042435	1					
ANR	1043100	Identifier	i		1042435	1					
ANR	1043101	UnaryOperationExpression	- 2		1042435	1					
ANR	1043102	UnaryOperator	-		1042435	0					
ANR	1043103	PrimaryExpression	2		1042435	1					
ANR	1043104	AdditiveExpression	chctx -> flcoeffs4 [ i ] - 0.415		1042435	1		-			
ANR	1043105	ArrayIndexing	chctx -> flcoeffs4 [ i ]		1042435	0					
ANR	1043106	PtrMemberAccess	chctx -> flcoeffs4		1042435	0					
ANR	1043107	Identifier	chctx		1042435	0					
ANR	1043108	Identifier	flcoeffs4		1042435	1					
ANR	1043109	Identifier	i		1042435	1					
ANR	1043110	PrimaryExpression	0.415		1042435	1					
ANR	1043111	ExpressionStatement	highest = 0.0	211:8:3020:3033	1042435	1	True				
ANR	1043112	AssignmentExpression	highest = 0.0		1042435	0		=			
ANR	1043113	Identifier	highest		1042435	0					
ANR	1043114	PrimaryExpression	0.0		1042435	1					
ANR	1043115	DoStatement	do		1042435	2					
ANR	1043116	CompoundStatement		211:11:2912:2912	1042435	0					
ANR	1043117	IfStatement	if ( highest <= - 1.e20 )		1042435	0					
ANR	1043118	Condition	highest <= - 1.e20	217:16:3068:3084	1042435	0	True				
ANR	1043119	RelationalExpression	highest <= - 1.e20		1042435	0		<=			
ANR	1043120	Identifier	highest		1042435	0					
ANR	1043121	UnaryOperationExpression	- 1.e20		1042435	1					
ANR	1043122	UnaryOperator	-		1042435	0					
ANR	1043123	PrimaryExpression	1.e20		1042435	1					
ANR	1043124	BreakStatement	break ;	219:16:3104:3109	1042435	1	True				
ANR	1043125	ExpressionStatement	found_indx = 0	223:12:3126:3140	1042435	1	True				
ANR	1043126	AssignmentExpression	found_indx = 0		1042435	0		=			
ANR	1043127	Identifier	found_indx		1042435	0					
ANR	1043128	PrimaryExpression	0		1042435	1					
ANR	1043129	ExpressionStatement	highest = - 1.e20	225:12:3155:3171	1042435	2	True				
ANR	1043130	AssignmentExpression	highest = - 1.e20		1042435	0		=			
ANR	1043131	Identifier	highest		1042435	0					
ANR	1043132	UnaryOperationExpression	- 1.e20		1042435	1					
ANR	1043133	UnaryOperator	-		1042435	0					
ANR	1043134	PrimaryExpression	1.e20		1042435	1					
ANR	1043135	ForStatement	for ( i = 0 ; i < BANDS ; i ++ )		1042435	3					
ANR	1043136	ForInit	i = 0 ;	229:17:3193:3198	1042435	0	True				
ANR	1043137	AssignmentExpression	i = 0		1042435	0		=			
ANR	1043138	Identifier	i		1042435	0					
ANR	1043139	PrimaryExpression	0		1042435	1					
ANR	1043140	Condition	i < BANDS	229:24:3200:3208	1042435	1	True				
ANR	1043141	RelationalExpression	i < BANDS		1042435	0		<			
ANR	1043142	Identifier	i		1042435	0					
ANR	1043143	Identifier	BANDS		1042435	1					
ANR	1043144	PostIncDecOperationExpression	i ++	229:35:3211:3213	1042435	2	True				
ANR	1043145	Identifier	i		1042435	0					
ANR	1043146	IncDec	++		1042435	1					
ANR	1043147	CompoundStatement		225:40:3079:3079	1042435	3					
ANR	1043148	IfStatement	if ( workT [ i ] > highest )		1042435	0					
ANR	1043149	Condition	workT [ i ] > highest	231:20:3239:3256	1042435	0	True				
ANR	1043150	RelationalExpression	workT [ i ] > highest		1042435	0		>			
ANR	1043151	ArrayIndexing	workT [ i ]		1042435	0					
ANR	1043152	Identifier	workT		1042435	0					
ANR	1043153	Identifier	i		1042435	1					
ANR	1043154	Identifier	highest		1042435	1					
ANR	1043155	CompoundStatement		227:40:3122:3122	1042435	1					
ANR	1043156	ExpressionStatement	highest = workT [ i ]	233:20:3282:3300	1042435	0	True				
ANR	1043157	AssignmentExpression	highest = workT [ i ]		1042435	0		=			
ANR	1043158	Identifier	highest		1042435	0					
ANR	1043159	ArrayIndexing	workT [ i ]		1042435	1					
ANR	1043160	Identifier	workT		1042435	0					
ANR	1043161	Identifier	i		1042435	1					
ANR	1043162	ExpressionStatement	found_indx = i	235:20:3323:3337	1042435	1	True				
ANR	1043163	AssignmentExpression	found_indx = i		1042435	0		=			
ANR	1043164	Identifier	found_indx		1042435	0					
ANR	1043165	Identifier	i		1042435	1					
ANR	1043166	IfStatement	if ( highest > - 1.e20 )		1042435	4					
ANR	1043167	Condition	highest > - 1.e20	243:16:3392:3407	1042435	0	True				
ANR	1043168	RelationalExpression	highest > - 1.e20		1042435	0		>			
ANR	1043169	Identifier	highest		1042435	0					
ANR	1043170	UnaryOperationExpression	- 1.e20		1042435	1					
ANR	1043171	UnaryOperator	-		1042435	0					
ANR	1043172	PrimaryExpression	1.e20		1042435	1					
ANR	1043173	CompoundStatement		239:34:3273:3273	1042435	1					
ANR	1043174	ExpressionStatement	workT [ found_indx ] -= 2.0	245:16:3429:3453	1042435	0	True				
ANR	1043175	AssignmentExpression	workT [ found_indx ] -= 2.0		1042435	0		-=			
ANR	1043176	ArrayIndexing	workT [ found_indx ]		1042435	0					
ANR	1043177	Identifier	workT		1042435	0					
ANR	1043178	Identifier	found_indx		1042435	1					
ANR	1043179	PrimaryExpression	2.0		1042435	1					
ANR	1043180	IfStatement	if ( ++ chctx -> bitsBandT [ found_indx ] == 6 )		1042435	1					
ANR	1043181	Condition	++ chctx -> bitsBandT [ found_indx ] == 6	247:20:3476:3510	1042435	0	True				
ANR	1043182	EqualityExpression	++ chctx -> bitsBandT [ found_indx ] == 6		1042435	0		==			
ANR	1043183	UnaryExpression	++ chctx -> bitsBandT [ found_indx ]		1042435	0					
ANR	1043184	IncDec	++		1042435	0					
ANR	1043185	ArrayIndexing	chctx -> bitsBandT [ found_indx ]		1042435	1					
ANR	1043186	PtrMemberAccess	chctx -> bitsBandT		1042435	0					
ANR	1043187	Identifier	chctx		1042435	0					
ANR	1043188	Identifier	bitsBandT		1042435	1					
ANR	1043189	Identifier	found_indx		1042435	1					
ANR	1043190	PrimaryExpression	6		1042435	1					
ANR	1043191	ExpressionStatement	workT [ found_indx ] = - 1.e20	249:20:3534:3560	1042435	1	True				
ANR	1043192	AssignmentExpression	workT [ found_indx ] = - 1.e20		1042435	0		=			
ANR	1043193	ArrayIndexing	workT [ found_indx ]		1042435	0					
ANR	1043194	Identifier	workT		1042435	0					
ANR	1043195	Identifier	found_indx		1042435	1					
ANR	1043196	UnaryOperationExpression	- 1.e20		1042435	1					
ANR	1043197	UnaryOperator	-		1042435	0					
ANR	1043198	PrimaryExpression	1.e20		1042435	1					
ANR	1043199	ForStatement	for ( j = band_tab [ found_indx ] ; j < band_tab [ found_indx + 1 ] && ( freebits > summer ) ; j ++ )		1042435	2					
ANR	1043200	ForInit	j = band_tab [ found_indx ] ;	253:21:3586:3610	1042435	0	True				
ANR	1043201	AssignmentExpression	j = band_tab [ found_indx ]		1042435	0		=			
ANR	1043202	Identifier	j		1042435	0					
ANR	1043203	ArrayIndexing	band_tab [ found_indx ]		1042435	1					
ANR	1043204	Identifier	band_tab		1042435	0					
ANR	1043205	Identifier	found_indx		1042435	1					
ANR	1043206	Condition	j < band_tab [ found_indx + 1 ] && ( freebits > summer )	253:47:3612:3662	1042435	1	True				
ANR	1043207	AndExpression	j < band_tab [ found_indx + 1 ] && ( freebits > summer )		1042435	0		&&			
ANR	1043208	RelationalExpression	j < band_tab [ found_indx + 1 ]		1042435	0		<			
ANR	1043209	Identifier	j		1042435	0					
ANR	1043210	ArrayIndexing	band_tab [ found_indx + 1 ]		1042435	1					
ANR	1043211	Identifier	band_tab		1042435	0					
ANR	1043212	AdditiveExpression	found_indx + 1		1042435	1		+			
ANR	1043213	Identifier	found_indx		1042435	0					
ANR	1043214	PrimaryExpression	1		1042435	1					
ANR	1043215	RelationalExpression	freebits > summer		1042435	1		>			
ANR	1043216	Identifier	freebits		1042435	0					
ANR	1043217	Identifier	summer		1042435	1					
ANR	1043218	PostIncDecOperationExpression	j ++	253:100:3665:3667	1042435	2	True				
ANR	1043219	Identifier	j		1042435	0					
ANR	1043220	IncDec	++		1042435	1					
ANR	1043221	CompoundStatement		249:105:3533:3533	1042435	3					
ANR	1043222	ExpressionStatement	chctx -> CWlengthT [ j ] ++	255:20:3693:3714	1042435	0	True				
ANR	1043223	PostIncDecOperationExpression	chctx -> CWlengthT [ j ] ++		1042435	0					
ANR	1043224	ArrayIndexing	chctx -> CWlengthT [ j ]		1042435	0					
ANR	1043225	PtrMemberAccess	chctx -> CWlengthT		1042435	0					
ANR	1043226	Identifier	chctx		1042435	0					
ANR	1043227	Identifier	CWlengthT		1042435	1					
ANR	1043228	Identifier	j		1042435	1					
ANR	1043229	IncDec	++		1042435	1					
ANR	1043230	ExpressionStatement	summer ++	257:20:3737:3745	1042435	1	True				
ANR	1043231	PostIncDecOperationExpression	summer ++		1042435	0					
ANR	1043232	Identifier	summer		1042435	0					
ANR	1043233	IncDec	++		1042435	1					
ANR	1043234	Condition	freebits > summer	263:17:3799:3815	1042435	1	True				
ANR	1043235	RelationalExpression	freebits > summer		1042435	0		>			
ANR	1043236	Identifier	freebits		1042435	0					
ANR	1043237	Identifier	summer		1042435	1					
ANR	1043238	IfStatement	if ( freebits < summer )		1042435	28					
ANR	1043239	Condition	freebits < summer	267:8:3835:3851	1042435	0	True				
ANR	1043240	RelationalExpression	freebits < summer		1042435	0		<			
ANR	1043241	Identifier	freebits		1042435	0					
ANR	1043242	Identifier	summer		1042435	1					
ANR	1043243	CompoundStatement		263:27:3717:3717	1042435	1					
ANR	1043244	ForStatement	for ( i = 0 ; i < BANDS ; i ++ )		1042435	0					
ANR	1043245	ForInit	i = 0 ;	269:13:3870:3875	1042435	0	True				
ANR	1043246	AssignmentExpression	i = 0		1042435	0		=			
ANR	1043247	Identifier	i		1042435	0					
ANR	1043248	PrimaryExpression	0		1042435	1					
ANR	1043249	Condition	i < BANDS	269:20:3877:3885	1042435	1	True				
ANR	1043250	RelationalExpression	i < BANDS		1042435	0		<			
ANR	1043251	Identifier	i		1042435	0					
ANR	1043252	Identifier	BANDS		1042435	1					
ANR	1043253	PostIncDecOperationExpression	i ++	269:31:3888:3890	1042435	2	True				
ANR	1043254	Identifier	i		1042435	0					
ANR	1043255	IncDec	++		1042435	1					
ANR	1043256	CompoundStatement		265:36:3756:3756	1042435	3					
ANR	1043257	ExpressionStatement	workT [ i ] = chctx -> bitsBandT [ i ] ? ( chctx -> bitsBandT [ i ] * - 2 + chctx -> flcoeffs4 [ i ] + 1.585 ) : 1.e20	271:12:3908:4045	1042435	0	True				
ANR	1043258	AssignmentExpression	workT [ i ] = chctx -> bitsBandT [ i ] ? ( chctx -> bitsBandT [ i ] * - 2 + chctx -> flcoeffs4 [ i ] + 1.585 ) : 1.e20		1042435	0		=			
ANR	1043259	ArrayIndexing	workT [ i ]		1042435	0					
ANR	1043260	Identifier	workT		1042435	0					
ANR	1043261	Identifier	i		1042435	1					
ANR	1043262	ConditionalExpression	chctx -> bitsBandT [ i ] ? ( chctx -> bitsBandT [ i ] * - 2 + chctx -> flcoeffs4 [ i ] + 1.585 ) : 1.e20		1042435	1					
ANR	1043263	Condition	chctx -> bitsBandT [ i ]		1042435	0					
ANR	1043264	ArrayIndexing	chctx -> bitsBandT [ i ]		1042435	0					
ANR	1043265	PtrMemberAccess	chctx -> bitsBandT		1042435	0					
ANR	1043266	Identifier	chctx		1042435	0					
ANR	1043267	Identifier	bitsBandT		1042435	1					
ANR	1043268	Identifier	i		1042435	1					
ANR	1043269	AdditiveExpression	chctx -> bitsBandT [ i ] * - 2 + chctx -> flcoeffs4 [ i ] + 1.585		1042435	1		+			
ANR	1043270	MultiplicativeExpression	chctx -> bitsBandT [ i ] * - 2		1042435	0		*			
ANR	1043271	ArrayIndexing	chctx -> bitsBandT [ i ]		1042435	0					
ANR	1043272	PtrMemberAccess	chctx -> bitsBandT		1042435	0					
ANR	1043273	Identifier	chctx		1042435	0					
ANR	1043274	Identifier	bitsBandT		1042435	1					
ANR	1043275	Identifier	i		1042435	1					
ANR	1043276	UnaryOperationExpression	- 2		1042435	1					
ANR	1043277	UnaryOperator	-		1042435	0					
ANR	1043278	PrimaryExpression	2		1042435	1					
ANR	1043279	AdditiveExpression	chctx -> flcoeffs4 [ i ] + 1.585		1042435	1		+			
ANR	1043280	ArrayIndexing	chctx -> flcoeffs4 [ i ]		1042435	0					
ANR	1043281	PtrMemberAccess	chctx -> flcoeffs4		1042435	0					
ANR	1043282	Identifier	chctx		1042435	0					
ANR	1043283	Identifier	flcoeffs4		1042435	1					
ANR	1043284	Identifier	i		1042435	1					
ANR	1043285	PrimaryExpression	1.585		1042435	1					
ANR	1043286	PrimaryExpression	1.e20		1042435	2					
ANR	1043287	IfStatement	if ( stream_format_code & 0x2 )		1042435	1					
ANR	1043288	Condition	stream_format_code & 0x2	277:12:4071:4094	1042435	0	True				
ANR	1043289	BitAndExpression	stream_format_code & 0x2		1042435	0		&			
ANR	1043290	Identifier	stream_format_code		1042435	0					
ANR	1043291	PrimaryExpression	0x2		1042435	1					
ANR	1043292	CompoundStatement		273:38:3960:3960	1042435	1					
ANR	1043293	ExpressionStatement	workT [ 0 ] = 1.e20	279:12:4112:4128	1042435	0	True				
ANR	1043294	AssignmentExpression	workT [ 0 ] = 1.e20		1042435	0		=			
ANR	1043295	ArrayIndexing	workT [ 0 ]		1042435	0					
ANR	1043296	Identifier	workT		1042435	0					
ANR	1043297	PrimaryExpression	0		1042435	1					
ANR	1043298	PrimaryExpression	1.e20		1042435	1					
ANR	1043299	ExpressionStatement	workT [ 1 ] = 1.e20	281:12:4143:4159	1042435	1	True				
ANR	1043300	AssignmentExpression	workT [ 1 ] = 1.e20		1042435	0		=			
ANR	1043301	ArrayIndexing	workT [ 1 ]		1042435	0					
ANR	1043302	Identifier	workT		1042435	0					
ANR	1043303	PrimaryExpression	1		1042435	1					
ANR	1043304	PrimaryExpression	1.e20		1042435	1					
ANR	1043305	ExpressionStatement	workT [ 2 ] = 1.e20	283:12:4174:4190	1042435	2	True				
ANR	1043306	AssignmentExpression	workT [ 2 ] = 1.e20		1042435	0		=			
ANR	1043307	ArrayIndexing	workT [ 2 ]		1042435	0					
ANR	1043308	Identifier	workT		1042435	0					
ANR	1043309	PrimaryExpression	2		1042435	1					
ANR	1043310	PrimaryExpression	1.e20		1042435	1					
ANR	1043311	ExpressionStatement	workT [ 3 ] = 1.e20	285:12:4205:4221	1042435	3	True				
ANR	1043312	AssignmentExpression	workT [ 3 ] = 1.e20		1042435	0		=			
ANR	1043313	ArrayIndexing	workT [ 3 ]		1042435	0					
ANR	1043314	Identifier	workT		1042435	0					
ANR	1043315	PrimaryExpression	3		1042435	1					
ANR	1043316	PrimaryExpression	1.e20		1042435	1					
ANR	1043317	WhileStatement	while ( freebits < summer )		1042435	2					
ANR	1043318	Condition	freebits < summer	289:15:4250:4266	1042435	0	True				
ANR	1043319	RelationalExpression	freebits < summer		1042435	0		<			
ANR	1043320	Identifier	freebits		1042435	0					
ANR	1043321	Identifier	summer		1042435	1					
ANR	1043322	CompoundStatement		285:34:4132:4132	1042435	1					
ANR	1043323	ExpressionStatement	lowest = 1.e10	291:12:4284:4300	1042435	0	True				
ANR	1043324	AssignmentExpression	lowest = 1.e10		1042435	0		=			
ANR	1043325	Identifier	lowest		1042435	0					
ANR	1043326	PrimaryExpression	1.e10		1042435	1					
ANR	1043327	ExpressionStatement	low_indx = 0	293:12:4315:4327	1042435	1	True				
ANR	1043328	AssignmentExpression	low_indx = 0		1042435	0		=			
ANR	1043329	Identifier	low_indx		1042435	0					
ANR	1043330	PrimaryExpression	0		1042435	1					
ANR	1043331	ForStatement	for ( i = 0 ; i < BANDS ; i ++ )		1042435	2					
ANR	1043332	ForInit	i = 0 ;	295:17:4347:4352	1042435	0	True				
ANR	1043333	AssignmentExpression	i = 0		1042435	0		=			
ANR	1043334	Identifier	i		1042435	0					
ANR	1043335	PrimaryExpression	0		1042435	1					
ANR	1043336	Condition	i < BANDS	295:24:4354:4362	1042435	1	True				
ANR	1043337	RelationalExpression	i < BANDS		1042435	0		<			
ANR	1043338	Identifier	i		1042435	0					
ANR	1043339	Identifier	BANDS		1042435	1					
ANR	1043340	PostIncDecOperationExpression	i ++	295:35:4365:4367	1042435	2	True				
ANR	1043341	Identifier	i		1042435	0					
ANR	1043342	IncDec	++		1042435	1					
ANR	1043343	CompoundStatement		291:40:4233:4233	1042435	3					
ANR	1043344	IfStatement	if ( workT [ i ] < lowest )		1042435	0					
ANR	1043345	Condition	workT [ i ] < lowest	297:20:4393:4409	1042435	0	True				
ANR	1043346	RelationalExpression	workT [ i ] < lowest		1042435	0		<			
ANR	1043347	ArrayIndexing	workT [ i ]		1042435	0					
ANR	1043348	Identifier	workT		1042435	0					
ANR	1043349	Identifier	i		1042435	1					
ANR	1043350	Identifier	lowest		1042435	1					
ANR	1043351	CompoundStatement		293:39:4275:4275	1042435	1					
ANR	1043352	ExpressionStatement	lowest = workT [ i ]	299:20:4435:4454	1042435	0	True				
ANR	1043353	AssignmentExpression	lowest = workT [ i ]		1042435	0		=			
ANR	1043354	Identifier	lowest		1042435	0					
ANR	1043355	ArrayIndexing	workT [ i ]		1042435	1					
ANR	1043356	Identifier	workT		1042435	0					
ANR	1043357	Identifier	i		1042435	1					
ANR	1043358	ExpressionStatement	low_indx = i	301:20:4477:4489	1042435	1	True				
ANR	1043359	AssignmentExpression	low_indx = i		1042435	0		=			
ANR	1043360	Identifier	low_indx		1042435	0					
ANR	1043361	Identifier	i		1042435	1					
ANR	1043362	ExpressionStatement	workT [ low_indx ] = lowest + 2.0	311:12:4602:4632	1042435	3	True				
ANR	1043363	AssignmentExpression	workT [ low_indx ] = lowest + 2.0		1042435	0		=			
ANR	1043364	ArrayIndexing	workT [ low_indx ]		1042435	0					
ANR	1043365	Identifier	workT		1042435	0					
ANR	1043366	Identifier	low_indx		1042435	1					
ANR	1043367	AdditiveExpression	lowest + 2.0		1042435	1		+			
ANR	1043368	Identifier	lowest		1042435	0					
ANR	1043369	PrimaryExpression	2.0		1042435	1					
ANR	1043370	IfStatement	if ( ! -- chctx -> bitsBandT [ low_indx ] )		1042435	4					
ANR	1043371	Condition	! -- chctx -> bitsBandT [ low_indx ]	315:16:4653:4681	1042435	0	True				
ANR	1043372	UnaryOperationExpression	! -- chctx -> bitsBandT [ low_indx ]		1042435	0					
ANR	1043373	UnaryOperator	!		1042435	0					
ANR	1043374	UnaryExpression	-- chctx -> bitsBandT [ low_indx ]		1042435	1					
ANR	1043375	IncDec	--		1042435	0					
ANR	1043376	ArrayIndexing	chctx -> bitsBandT [ low_indx ]		1042435	1					
ANR	1043377	PtrMemberAccess	chctx -> bitsBandT		1042435	0					
ANR	1043378	Identifier	chctx		1042435	0					
ANR	1043379	Identifier	bitsBandT		1042435	1					
ANR	1043380	Identifier	low_indx		1042435	1					
ANR	1043381	ExpressionStatement	workT [ low_indx ] = 1.e20	317:16:4701:4724	1042435	1	True				
ANR	1043382	AssignmentExpression	workT [ low_indx ] = 1.e20		1042435	0		=			
ANR	1043383	ArrayIndexing	workT [ low_indx ]		1042435	0					
ANR	1043384	Identifier	workT		1042435	0					
ANR	1043385	Identifier	low_indx		1042435	1					
ANR	1043386	PrimaryExpression	1.e20		1042435	1					
ANR	1043387	ForStatement	for ( j = band_tab [ low_indx ] ; j < band_tab [ low_indx + 1 ] && ( freebits < summer ) ; j ++ )		1042435	5					
ANR	1043388	ForInit	j = band_tab [ low_indx ] ;	321:17:4746:4768	1042435	0	True				
ANR	1043389	AssignmentExpression	j = band_tab [ low_indx ]		1042435	0		=			
ANR	1043390	Identifier	j		1042435	0					
ANR	1043391	ArrayIndexing	band_tab [ low_indx ]		1042435	1					
ANR	1043392	Identifier	band_tab		1042435	0					
ANR	1043393	Identifier	low_indx		1042435	1					
ANR	1043394	Condition	j < band_tab [ low_indx + 1 ] && ( freebits < summer )	321:41:4770:4816	1042435	1	True				
ANR	1043395	AndExpression	j < band_tab [ low_indx + 1 ] && ( freebits < summer )		1042435	0		&&			
ANR	1043396	RelationalExpression	j < band_tab [ low_indx + 1 ]		1042435	0		<			
ANR	1043397	Identifier	j		1042435	0					
ANR	1043398	ArrayIndexing	band_tab [ low_indx + 1 ]		1042435	1					
ANR	1043399	Identifier	band_tab		1042435	0					
ANR	1043400	AdditiveExpression	low_indx + 1		1042435	1		+			
ANR	1043401	Identifier	low_indx		1042435	0					
ANR	1043402	PrimaryExpression	1		1042435	1					
ANR	1043403	RelationalExpression	freebits < summer		1042435	1		<			
ANR	1043404	Identifier	freebits		1042435	0					
ANR	1043405	Identifier	summer		1042435	1					
ANR	1043406	PostIncDecOperationExpression	j ++	321:90:4819:4821	1042435	2	True				
ANR	1043407	Identifier	j		1042435	0					
ANR	1043408	IncDec	++		1042435	1					
ANR	1043409	CompoundStatement		317:95:4687:4687	1042435	3					
ANR	1043410	IfStatement	if ( chctx -> CWlengthT [ j ] > 0 )		1042435	0					
ANR	1043411	Condition	chctx -> CWlengthT [ j ] > 0	323:20:4847:4869	1042435	0	True				
ANR	1043412	RelationalExpression	chctx -> CWlengthT [ j ] > 0		1042435	0		>			
ANR	1043413	ArrayIndexing	chctx -> CWlengthT [ j ]		1042435	0					
ANR	1043414	PtrMemberAccess	chctx -> CWlengthT		1042435	0					
ANR	1043415	Identifier	chctx		1042435	0					
ANR	1043416	Identifier	CWlengthT		1042435	1					
ANR	1043417	Identifier	j		1042435	1					
ANR	1043418	PrimaryExpression	0		1042435	1					
ANR	1043419	CompoundStatement		319:45:4735:4735	1042435	1					
ANR	1043420	ExpressionStatement	chctx -> CWlengthT [ j ] --	325:20:4895:4916	1042435	0	True				
ANR	1043421	PostIncDecOperationExpression	chctx -> CWlengthT [ j ] --		1042435	0					
ANR	1043422	ArrayIndexing	chctx -> CWlengthT [ j ]		1042435	0					
ANR	1043423	PtrMemberAccess	chctx -> CWlengthT		1042435	0					
ANR	1043424	Identifier	chctx		1042435	0					
ANR	1043425	Identifier	CWlengthT		1042435	1					
ANR	1043426	Identifier	j		1042435	1					
ANR	1043427	IncDec	--		1042435	1					
ANR	1043428	ExpressionStatement	summer --	327:20:4939:4947	1042435	1	True				
ANR	1043429	PostIncDecOperationExpression	summer --		1042435	0					
ANR	1043430	Identifier	summer		1042435	0					
ANR	1043431	IncDec	--		1042435	1					
ANR	1043432	ReturnStatement	return 0 ;	337:4:5006:5014	1042435	29	True				
ANR	1043433	PrimaryExpression	0		1042435	0					
ANR	1043434	ReturnType	static int		1042435	1					
ANR	1043435	Identifier	bit_allocation		1042435	2					
ANR	1043436	ParameterList	"IMCContext * q , IMCChannel * chctx , int stream_format_code , int freebits , int flag"		1042435	3					
ANR	1043437	Parameter	IMCContext * q	1:26:26:38	1042435	0	True				
ANR	1043438	ParameterType	IMCContext *		1042435	0					
ANR	1043439	Identifier	q		1042435	1					
ANR	1043440	Parameter	IMCChannel * chctx	1:41:41:57	1042435	1	True				
ANR	1043441	ParameterType	IMCChannel *		1042435	0					
ANR	1043442	Identifier	chctx		1042435	1					
ANR	1043443	Parameter	int stream_format_code	3:26:87:108	1042435	2	True				
ANR	1043444	ParameterType	int		1042435	0					
ANR	1043445	Identifier	stream_format_code		1042435	1					
ANR	1043446	Parameter	int freebits	3:50:111:122	1042435	3	True				
ANR	1043447	ParameterType	int		1042435	0					
ANR	1043448	Identifier	freebits		1042435	1					
ANR	1043449	Parameter	int flag	3:64:125:132	1042435	4	True				
ANR	1043450	ParameterType	int		1042435	0					
ANR	1043451	Identifier	flag		1042435	1					
ANR	1043452	CFGEntryNode	ENTRY		1042435		True				
ANR	1043453	CFGExitNode	EXIT		1042435		True				
ANR	1043454	Symbol	chctx		1042435						
ANR	1043455	Symbol	cwlen		1042435						
ANR	1043456	Symbol	* * chctx -> flcoeffs1		1042435						
ANR	1043457	Symbol	summa		1042435						
ANR	1043458	Symbol	* xTab		1042435						
ANR	1043459	Symbol	limit		1042435						
ANR	1043460	Symbol	* chctx -> CWlengthT		1042435						
ANR	1043461	Symbol	log2f		1042435						
ANR	1043462	Symbol	* chctx -> bandWidthT		1042435						
ANR	1043463	Symbol	workT		1042435						
ANR	1043464	Symbol	* * i		1042435						
ANR	1043465	Symbol	* chctx -> flcoeffs1		1042435						
ANR	1043466	Symbol	freebits		1042435						
ANR	1043467	Symbol	* chctx		1042435						
ANR	1043468	Symbol	* chctx -> flcoeffs5		1042435						
ANR	1043469	Symbol	* chctx -> flcoeffs3		1042435						
ANR	1043470	Symbol	* chctx -> flcoeffs4		1042435						
ANR	1043471	Symbol	* band_tab		1042435						
ANR	1043472	Symbol	lowest		1042435						
ANR	1043473	Symbol	* indx		1042435						
ANR	1043474	Symbol	highest		1042435						
ANR	1043475	Symbol	* chctx -> bitsBandT		1042435						
ANR	1043476	Symbol	chctx -> flcoeffs1		1042435						
ANR	1043477	Symbol	chctx -> flcoeffs4		1042435						
ANR	1043478	Symbol	chctx -> bitsBandT		1042435						
ANR	1043479	Symbol	chctx -> flcoeffs3		1042435						
ANR	1043480	Symbol	* flag		1042435						
ANR	1043481	Symbol	t1		1042435						
ANR	1043482	Symbol	chctx -> flcoeffs5		1042435						
ANR	1043483	Symbol	t2		1042435						
ANR	1043484	Symbol	av_clipf		1042435						
ANR	1043485	Symbol	found_indx		1042435						
ANR	1043486	Symbol	flag		1042435						
ANR	1043487	Symbol	chctx -> CWlengthT		1042435						
ANR	1043488	Symbol	indx		1042435						
ANR	1043489	Symbol	iacc		1042435						
ANR	1043490	Symbol	xTab		1042435						
ANR	1043491	Symbol	low_indx		1042435						
ANR	1043492	Symbol	* workT		1042435						
ANR	1043493	Symbol	summer		1042435						
ANR	1043494	Symbol	* * chctx		1042435						
ANR	1043495	Symbol	* low_indx		1042435						
ANR	1043496	Symbol	* * * chctx		1042435						
ANR	1043497	Symbol	stream_format_code		1042435						
ANR	1043498	Symbol	band_tab		1042435						
ANR	1043499	Symbol	rres		1042435						
ANR	1043500	Symbol	* found_indx		1042435						
ANR	1043501	Symbol	* highest		1042435						
ANR	1043502	Symbol	flg		1042435						
ANR	1043503	Symbol	chctx -> bandWidthT		1042435						
ANR	1043504	Symbol	i		1042435						
ANR	1043505	Symbol	* BANDS		1042435						
ANR	1043506	Symbol	j		1042435						
ANR	1043507	Symbol	q		1042435						
ANR	1043508	Symbol	* i		1042435						
ANR	1043509	Symbol	* j		1042435						
ANR	1043510	Symbol	AVERROR_INVALIDDATA		1042435						
ANR	1043511	Symbol	BANDS		1042435						
ANR	1043512	Symbol	FFMAX		1042435						
