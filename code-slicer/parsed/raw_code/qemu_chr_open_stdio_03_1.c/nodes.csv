command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6961247	File	/home/p4ultr4n/workplace/ReVeal/raw_code/qemu_chr_open_stdio_03_1.c								
ANR	6961248	Function	qemu_chr_open_stdio	1:0:0:602							
ANR	6961249	FunctionDef	qemu_chr_open_stdio (ChardevStdio * opts)		6961248	0					
ANR	6961250	CompoundStatement		3:0:65:602	6961248	0					
ANR	6961251	IdentifierDeclStatement	CharDriverState * chr ;	5:4:72:92	6961248	0	True				
ANR	6961252	IdentifierDecl	* chr		6961248	0					
ANR	6961253	IdentifierDeclType	CharDriverState *		6961248	0					
ANR	6961254	Identifier	chr		6961248	1					
ANR	6961255	IfStatement	if ( is_daemonized ( ) )		6961248	1					
ANR	6961256	Condition	is_daemonized ( )	9:8:105:119	6961248	0	True				
ANR	6961257	CallExpression	is_daemonized ( )		6961248	0					
ANR	6961258	Callee	is_daemonized		6961248	0					
ANR	6961259	Identifier	is_daemonized		6961248	0					
ANR	6961260	ArgumentList			6961248	1					
ANR	6961261	CompoundStatement		7:25:56:56	6961248	1					
ANR	6961262	ExpressionStatement	"error_report ( ""cannot use stdio with -daemonize"" )"	11:8:133:181	6961248	0	True				
ANR	6961263	CallExpression	"error_report ( ""cannot use stdio with -daemonize"" )"		6961248	0					
ANR	6961264	Callee	error_report		6961248	0					
ANR	6961265	Identifier	error_report		6961248	0					
ANR	6961266	ArgumentList	"""cannot use stdio with -daemonize"""		6961248	1					
ANR	6961267	Argument	"""cannot use stdio with -daemonize"""		6961248	0					
ANR	6961268	PrimaryExpression	"""cannot use stdio with -daemonize"""		6961248	0					
ANR	6961269	ReturnStatement	return NULL ;	13:8:192:203	6961248	1	True				
ANR	6961270	Identifier	NULL		6961248	0					
ANR	6961271	ExpressionStatement	"old_fd0_flags = fcntl ( 0 , F_GETFL )"	17:4:217:250	6961248	2	True				
ANR	6961272	AssignmentExpression	"old_fd0_flags = fcntl ( 0 , F_GETFL )"		6961248	0		=			
ANR	6961273	Identifier	old_fd0_flags		6961248	0					
ANR	6961274	CallExpression	"fcntl ( 0 , F_GETFL )"		6961248	1					
ANR	6961275	Callee	fcntl		6961248	0					
ANR	6961276	Identifier	fcntl		6961248	0					
ANR	6961277	ArgumentList	0		6961248	1					
ANR	6961278	Argument	0		6961248	0					
ANR	6961279	PrimaryExpression	0		6961248	0					
ANR	6961280	Argument	F_GETFL		6961248	1					
ANR	6961281	Identifier	F_GETFL		6961248	0					
ANR	6961282	ExpressionStatement	"tcgetattr ( 0 , & oldtty )"	19:4:257:279	6961248	3	True				
ANR	6961283	CallExpression	"tcgetattr ( 0 , & oldtty )"		6961248	0					
ANR	6961284	Callee	tcgetattr		6961248	0					
ANR	6961285	Identifier	tcgetattr		6961248	0					
ANR	6961286	ArgumentList	0		6961248	1					
ANR	6961287	Argument	0		6961248	0					
ANR	6961288	PrimaryExpression	0		6961248	0					
ANR	6961289	Argument	& oldtty		6961248	1					
ANR	6961290	UnaryOperationExpression	& oldtty		6961248	0					
ANR	6961291	UnaryOperator	&		6961248	0					
ANR	6961292	Identifier	oldtty		6961248	1					
ANR	6961293	ExpressionStatement	qemu_set_nonblock ( 0 )	21:4:286:306	6961248	4	True				
ANR	6961294	CallExpression	qemu_set_nonblock ( 0 )		6961248	0					
ANR	6961295	Callee	qemu_set_nonblock		6961248	0					
ANR	6961296	Identifier	qemu_set_nonblock		6961248	0					
ANR	6961297	ArgumentList	0		6961248	1					
ANR	6961298	Argument	0		6961248	0					
ANR	6961299	PrimaryExpression	0		6961248	0					
ANR	6961300	ExpressionStatement	atexit ( term_exit )	23:4:313:330	6961248	5	True				
ANR	6961301	CallExpression	atexit ( term_exit )		6961248	0					
ANR	6961302	Callee	atexit		6961248	0					
ANR	6961303	Identifier	atexit		6961248	0					
ANR	6961304	ArgumentList	term_exit		6961248	1					
ANR	6961305	Argument	term_exit		6961248	0					
ANR	6961306	Identifier	term_exit		6961248	0					
ANR	6961307	ExpressionStatement	"chr = qemu_chr_open_fd ( 0 , 1 )"	27:4:339:367	6961248	6	True				
ANR	6961308	AssignmentExpression	"chr = qemu_chr_open_fd ( 0 , 1 )"		6961248	0		=			
ANR	6961309	Identifier	chr		6961248	0					
ANR	6961310	CallExpression	"qemu_chr_open_fd ( 0 , 1 )"		6961248	1					
ANR	6961311	Callee	qemu_chr_open_fd		6961248	0					
ANR	6961312	Identifier	qemu_chr_open_fd		6961248	0					
ANR	6961313	ArgumentList	0		6961248	1					
ANR	6961314	Argument	0		6961248	0					
ANR	6961315	PrimaryExpression	0		6961248	0					
ANR	6961316	Argument	1		6961248	1					
ANR	6961317	PrimaryExpression	1		6961248	0					
ANR	6961318	ExpressionStatement	chr -> chr_close = qemu_chr_close_stdio	29:4:374:411	6961248	7	True				
ANR	6961319	AssignmentExpression	chr -> chr_close = qemu_chr_close_stdio		6961248	0		=			
ANR	6961320	PtrMemberAccess	chr -> chr_close		6961248	0					
ANR	6961321	Identifier	chr		6961248	0					
ANR	6961322	Identifier	chr_close		6961248	1					
ANR	6961323	Identifier	qemu_chr_close_stdio		6961248	1					
ANR	6961324	ExpressionStatement	chr -> chr_set_echo = qemu_chr_set_echo_stdio	31:4:418:461	6961248	8	True				
ANR	6961325	AssignmentExpression	chr -> chr_set_echo = qemu_chr_set_echo_stdio		6961248	0		=			
ANR	6961326	PtrMemberAccess	chr -> chr_set_echo		6961248	0					
ANR	6961327	Identifier	chr		6961248	0					
ANR	6961328	Identifier	chr_set_echo		6961248	1					
ANR	6961329	Identifier	qemu_chr_set_echo_stdio		6961248	1					
ANR	6961330	IfStatement	if ( opts -> has_signal )		6961248	9					
ANR	6961331	Condition	opts -> has_signal	33:8:472:487	6961248	0	True				
ANR	6961332	PtrMemberAccess	opts -> has_signal		6961248	0					
ANR	6961333	Identifier	opts		6961248	0					
ANR	6961334	Identifier	has_signal		6961248	1					
ANR	6961335	CompoundStatement		31:26:424:424	6961248	1					
ANR	6961336	ExpressionStatement	stdio_allow_signal = opts -> signal	35:8:501:534	6961248	0	True				
ANR	6961337	AssignmentExpression	stdio_allow_signal = opts -> signal		6961248	0		=			
ANR	6961338	Identifier	stdio_allow_signal		6961248	0					
ANR	6961339	PtrMemberAccess	opts -> signal		6961248	1					
ANR	6961340	Identifier	opts		6961248	0					
ANR	6961341	Identifier	signal		6961248	1					
ANR	6961342	ExpressionStatement	"qemu_chr_fe_set_echo ( chr , false )"	39:4:548:580	6961248	10	True				
ANR	6961343	CallExpression	"qemu_chr_fe_set_echo ( chr , false )"		6961248	0					
ANR	6961344	Callee	qemu_chr_fe_set_echo		6961248	0					
ANR	6961345	Identifier	qemu_chr_fe_set_echo		6961248	0					
ANR	6961346	ArgumentList	chr		6961248	1					
ANR	6961347	Argument	chr		6961248	0					
ANR	6961348	Identifier	chr		6961248	0					
ANR	6961349	Argument	false		6961248	1					
ANR	6961350	Identifier	false		6961248	0					
ANR	6961351	ReturnStatement	return chr ;	43:4:589:599	6961248	11	True				
ANR	6961352	Identifier	chr		6961248	0					
ANR	6961353	ReturnType	static CharDriverState *		6961248	1					
ANR	6961354	Identifier	qemu_chr_open_stdio		6961248	2					
ANR	6961355	ParameterList	ChardevStdio * opts		6961248	3					
ANR	6961356	Parameter	ChardevStdio * opts	1:44:44:61	6961248	0	True				
ANR	6961357	ParameterType	ChardevStdio *		6961248	0					
ANR	6961358	Identifier	opts		6961248	1					
ANR	6961359	CFGEntryNode	ENTRY		6961248		True				
ANR	6961360	CFGExitNode	EXIT		6961248		True				
ANR	6961361	Symbol	NULL		6961248						
ANR	6961362	Symbol	opts -> signal		6961248						
ANR	6961363	Symbol	fcntl		6961248						
ANR	6961364	Symbol	is_daemonized		6961248						
ANR	6961365	Symbol	qemu_chr_open_fd		6961248						
ANR	6961366	Symbol	* chr		6961248						
ANR	6961367	Symbol	false		6961248						
ANR	6961368	Symbol	old_fd0_flags		6961248						
ANR	6961369	Symbol	chr		6961248						
ANR	6961370	Symbol	chr -> chr_set_echo		6961248						
ANR	6961371	Symbol	qemu_chr_close_stdio		6961248						
ANR	6961372	Symbol	& oldtty		6961248						
ANR	6961373	Symbol	opts		6961248						
ANR	6961374	Symbol	* opts		6961248						
ANR	6961375	Symbol	opts -> has_signal		6961248						
ANR	6961376	Symbol	F_GETFL		6961248						
ANR	6961377	Symbol	term_exit		6961248						
ANR	6961378	Symbol	qemu_chr_set_echo_stdio		6961248						
ANR	6961379	Symbol	stdio_allow_signal		6961248						
ANR	6961380	Symbol	chr -> chr_close		6961248						
