command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8513436	File	/home/p4ultr4n/workplace/ReVeal/raw_code/transcode_audio_1.c								
ANR	8513437	Function	transcode_audio	1:0:0:3538							
ANR	8513438	FunctionDef	"transcode_audio (InputStream * ist , AVPacket * pkt , int * got_output)"		8513437	0					
ANR	8513439	CompoundStatement		3:0:78:3538	8513437	0					
ANR	8513440	IdentifierDeclStatement	AVFrame * decoded_frame ;	5:4:85:107	8513437	0	True				
ANR	8513441	IdentifierDecl	* decoded_frame		8513437	0					
ANR	8513442	IdentifierDeclType	AVFrame *		8513437	0					
ANR	8513443	Identifier	decoded_frame		8513437	1					
ANR	8513444	IdentifierDeclStatement	AVCodecContext * avctx = ist -> st -> codec ;	7:4:114:152	8513437	1	True				
ANR	8513445	IdentifierDecl	* avctx = ist -> st -> codec		8513437	0					
ANR	8513446	IdentifierDeclType	AVCodecContext *		8513437	0					
ANR	8513447	Identifier	avctx		8513437	1					
ANR	8513448	AssignmentExpression	* avctx = ist -> st -> codec		8513437	2		=			
ANR	8513449	Identifier	avctx		8513437	0					
ANR	8513450	PtrMemberAccess	ist -> st -> codec		8513437	1					
ANR	8513451	PtrMemberAccess	ist -> st		8513437	0					
ANR	8513452	Identifier	ist		8513437	0					
ANR	8513453	Identifier	st		8513437	1					
ANR	8513454	Identifier	codec		8513437	1					
ANR	8513455	IdentifierDeclStatement	int bps = av_get_bytes_per_sample ( ist -> st -> codec -> sample_fmt ) ;	9:4:159:220	8513437	2	True				
ANR	8513456	IdentifierDecl	bps = av_get_bytes_per_sample ( ist -> st -> codec -> sample_fmt )		8513437	0					
ANR	8513457	IdentifierDeclType	int		8513437	0					
ANR	8513458	Identifier	bps		8513437	1					
ANR	8513459	AssignmentExpression	bps = av_get_bytes_per_sample ( ist -> st -> codec -> sample_fmt )		8513437	2		=			
ANR	8513460	Identifier	bps		8513437	0					
ANR	8513461	CallExpression	av_get_bytes_per_sample ( ist -> st -> codec -> sample_fmt )		8513437	1					
ANR	8513462	Callee	av_get_bytes_per_sample		8513437	0					
ANR	8513463	Identifier	av_get_bytes_per_sample		8513437	0					
ANR	8513464	ArgumentList	ist -> st -> codec -> sample_fmt		8513437	1					
ANR	8513465	Argument	ist -> st -> codec -> sample_fmt		8513437	0					
ANR	8513466	PtrMemberAccess	ist -> st -> codec -> sample_fmt		8513437	0					
ANR	8513467	PtrMemberAccess	ist -> st -> codec		8513437	0					
ANR	8513468	PtrMemberAccess	ist -> st		8513437	0					
ANR	8513469	Identifier	ist		8513437	0					
ANR	8513470	Identifier	st		8513437	1					
ANR	8513471	Identifier	codec		8513437	1					
ANR	8513472	Identifier	sample_fmt		8513437	1					
ANR	8513473	IdentifierDeclStatement	"int i , ret ;"	11:4:227:237	8513437	3	True				
ANR	8513474	IdentifierDecl	i		8513437	0					
ANR	8513475	IdentifierDeclType	int		8513437	0					
ANR	8513476	Identifier	i		8513437	1					
ANR	8513477	IdentifierDecl	ret		8513437	1					
ANR	8513478	IdentifierDeclType	int		8513437	0					
ANR	8513479	Identifier	ret		8513437	1					
ANR	8513480	IfStatement	if ( ! ist -> decoded_frame && ! ( ist -> decoded_frame = avcodec_alloc_frame ( ) ) )		8513437	4					
ANR	8513481	Condition	! ist -> decoded_frame && ! ( ist -> decoded_frame = avcodec_alloc_frame ( ) )	15:8:250:317	8513437	0	True				
ANR	8513482	AndExpression	! ist -> decoded_frame && ! ( ist -> decoded_frame = avcodec_alloc_frame ( ) )		8513437	0		&&			
ANR	8513483	UnaryOperationExpression	! ist -> decoded_frame		8513437	0					
ANR	8513484	UnaryOperator	!		8513437	0					
ANR	8513485	PtrMemberAccess	ist -> decoded_frame		8513437	1					
ANR	8513486	Identifier	ist		8513437	0					
ANR	8513487	Identifier	decoded_frame		8513437	1					
ANR	8513488	UnaryOperationExpression	! ( ist -> decoded_frame = avcodec_alloc_frame ( ) )		8513437	1					
ANR	8513489	UnaryOperator	!		8513437	0					
ANR	8513490	AssignmentExpression	ist -> decoded_frame = avcodec_alloc_frame ( )		8513437	1		=			
ANR	8513491	PtrMemberAccess	ist -> decoded_frame		8513437	0					
ANR	8513492	Identifier	ist		8513437	0					
ANR	8513493	Identifier	decoded_frame		8513437	1					
ANR	8513494	CallExpression	avcodec_alloc_frame ( )		8513437	1					
ANR	8513495	Callee	avcodec_alloc_frame		8513437	0					
ANR	8513496	Identifier	avcodec_alloc_frame		8513437	0					
ANR	8513497	ArgumentList			8513437	1					
ANR	8513498	ReturnStatement	return AVERROR ( ENOMEM ) ;	17:8:329:351	8513437	1	True				
ANR	8513499	CallExpression	AVERROR ( ENOMEM )		8513437	0					
ANR	8513500	Callee	AVERROR		8513437	0					
ANR	8513501	Identifier	AVERROR		8513437	0					
ANR	8513502	ArgumentList	ENOMEM		8513437	1					
ANR	8513503	Argument	ENOMEM		8513437	0					
ANR	8513504	Identifier	ENOMEM		8513437	0					
ANR	8513505	ElseStatement	else		8513437	0					
ANR	8513506	ExpressionStatement	avcodec_get_frame_defaults ( ist -> decoded_frame )	21:8:372:418	8513437	0	True				
ANR	8513507	CallExpression	avcodec_get_frame_defaults ( ist -> decoded_frame )		8513437	0					
ANR	8513508	Callee	avcodec_get_frame_defaults		8513437	0					
ANR	8513509	Identifier	avcodec_get_frame_defaults		8513437	0					
ANR	8513510	ArgumentList	ist -> decoded_frame		8513437	1					
ANR	8513511	Argument	ist -> decoded_frame		8513437	0					
ANR	8513512	PtrMemberAccess	ist -> decoded_frame		8513437	0					
ANR	8513513	Identifier	ist		8513437	0					
ANR	8513514	Identifier	decoded_frame		8513437	1					
ANR	8513515	ExpressionStatement	decoded_frame = ist -> decoded_frame	23:4:425:459	8513437	5	True				
ANR	8513516	AssignmentExpression	decoded_frame = ist -> decoded_frame		8513437	0		=			
ANR	8513517	Identifier	decoded_frame		8513437	0					
ANR	8513518	PtrMemberAccess	ist -> decoded_frame		8513437	1					
ANR	8513519	Identifier	ist		8513437	0					
ANR	8513520	Identifier	decoded_frame		8513437	1					
ANR	8513521	ExpressionStatement	"ret = avcodec_decode_audio4 ( avctx , decoded_frame , got_output , pkt )"	27:4:468:534	8513437	6	True				
ANR	8513522	AssignmentExpression	"ret = avcodec_decode_audio4 ( avctx , decoded_frame , got_output , pkt )"		8513437	0		=			
ANR	8513523	Identifier	ret		8513437	0					
ANR	8513524	CallExpression	"avcodec_decode_audio4 ( avctx , decoded_frame , got_output , pkt )"		8513437	1					
ANR	8513525	Callee	avcodec_decode_audio4		8513437	0					
ANR	8513526	Identifier	avcodec_decode_audio4		8513437	0					
ANR	8513527	ArgumentList	avctx		8513437	1					
ANR	8513528	Argument	avctx		8513437	0					
ANR	8513529	Identifier	avctx		8513437	0					
ANR	8513530	Argument	decoded_frame		8513437	1					
ANR	8513531	Identifier	decoded_frame		8513437	0					
ANR	8513532	Argument	got_output		8513437	2					
ANR	8513533	Identifier	got_output		8513437	0					
ANR	8513534	Argument	pkt		8513437	3					
ANR	8513535	Identifier	pkt		8513437	0					
ANR	8513536	IfStatement	if ( ret < 0 )		8513437	7					
ANR	8513537	Condition	ret < 0	29:8:545:551	8513437	0	True				
ANR	8513538	RelationalExpression	ret < 0		8513437	0		<			
ANR	8513539	Identifier	ret		8513437	0					
ANR	8513540	PrimaryExpression	0		8513437	1					
ANR	8513541	CompoundStatement		27:17:475:475	8513437	1					
ANR	8513542	ReturnStatement	return ret ;	31:8:565:575	8513437	0	True				
ANR	8513543	Identifier	ret		8513437	0					
ANR	8513544	IfStatement	if ( ! * got_output )		8513437	8					
ANR	8513545	Condition	! * got_output	37:8:595:606	8513437	0	True				
ANR	8513546	UnaryOperationExpression	! * got_output		8513437	0					
ANR	8513547	UnaryOperator	!		8513437	0					
ANR	8513548	UnaryOperationExpression	* got_output		8513437	1					
ANR	8513549	UnaryOperator	*		8513437	0					
ANR	8513550	Identifier	got_output		8513437	1					
ANR	8513551	CompoundStatement		35:22:530:530	8513437	1					
ANR	8513552	ReturnStatement	return ret ;	41:8:650:660	8513437	0	True				
ANR	8513553	Identifier	ret		8513437	0					
ANR	8513554	IfStatement	if ( decoded_frame -> pts != AV_NOPTS_VALUE )		8513437	9					
ANR	8513555	Condition	decoded_frame -> pts != AV_NOPTS_VALUE	51:8:827:862	8513437	0	True				
ANR	8513556	EqualityExpression	decoded_frame -> pts != AV_NOPTS_VALUE		8513437	0		!=			
ANR	8513557	PtrMemberAccess	decoded_frame -> pts		8513437	0					
ANR	8513558	Identifier	decoded_frame		8513437	0					
ANR	8513559	Identifier	pts		8513437	1					
ANR	8513560	Identifier	AV_NOPTS_VALUE		8513437	1					
ANR	8513561	ExpressionStatement	ist -> next_dts = decoded_frame -> pts	53:8:874:908	8513437	1	True				
ANR	8513562	AssignmentExpression	ist -> next_dts = decoded_frame -> pts		8513437	0		=			
ANR	8513563	PtrMemberAccess	ist -> next_dts		8513437	0					
ANR	8513564	Identifier	ist		8513437	0					
ANR	8513565	Identifier	next_dts		8513437	1					
ANR	8513566	PtrMemberAccess	decoded_frame -> pts		8513437	1					
ANR	8513567	Identifier	decoded_frame		8513437	0					
ANR	8513568	Identifier	pts		8513437	1					
ANR	8513569	ExpressionStatement	ist -> next_dts += ( ( int64_t ) AV_TIME_BASE * decoded_frame -> nb_samples ) / avctx -> sample_rate	61:4:1066:1177	8513437	10	True				
ANR	8513570	AssignmentExpression	ist -> next_dts += ( ( int64_t ) AV_TIME_BASE * decoded_frame -> nb_samples ) / avctx -> sample_rate		8513437	0		+=			
ANR	8513571	PtrMemberAccess	ist -> next_dts		8513437	0					
ANR	8513572	Identifier	ist		8513437	0					
ANR	8513573	Identifier	next_dts		8513437	1					
ANR	8513574	MultiplicativeExpression	( ( int64_t ) AV_TIME_BASE * decoded_frame -> nb_samples ) / avctx -> sample_rate		8513437	1		/			
ANR	8513575	MultiplicativeExpression	( int64_t ) AV_TIME_BASE * decoded_frame -> nb_samples		8513437	0		*			
ANR	8513576	CastExpression	( int64_t ) AV_TIME_BASE		8513437	0					
ANR	8513577	CastTarget	int64_t		8513437	0					
ANR	8513578	Identifier	AV_TIME_BASE		8513437	1					
ANR	8513579	PtrMemberAccess	decoded_frame -> nb_samples		8513437	1					
ANR	8513580	Identifier	decoded_frame		8513437	0					
ANR	8513581	Identifier	nb_samples		8513437	1					
ANR	8513582	PtrMemberAccess	avctx -> sample_rate		8513437	1					
ANR	8513583	Identifier	avctx		8513437	0					
ANR	8513584	Identifier	sample_rate		8513437	1					
ANR	8513585	IfStatement	if ( audio_volume != 256 )		8513437	11					
ANR	8513586	Condition	audio_volume != 256	69:8:1224:1242	8513437	0	True				
ANR	8513587	EqualityExpression	audio_volume != 256		8513437	0		!=			
ANR	8513588	Identifier	audio_volume		8513437	0					
ANR	8513589	PrimaryExpression	256		8513437	1					
ANR	8513590	CompoundStatement		71:8:1261:1299	8513437	1					
ANR	8513591	IdentifierDeclStatement	int decoded_data_size = decoded_frame -> nb_samples * avctx -> channels * bps ;	71:8:1256:1329	8513437	0	True				
ANR	8513592	IdentifierDecl	decoded_data_size = decoded_frame -> nb_samples * avctx -> channels * bps		8513437	0					
ANR	8513593	IdentifierDeclType	int		8513437	0					
ANR	8513594	Identifier	decoded_data_size		8513437	1					
ANR	8513595	AssignmentExpression	decoded_data_size = decoded_frame -> nb_samples * avctx -> channels * bps		8513437	2		=			
ANR	8513596	Identifier	decoded_data_size		8513437	0					
ANR	8513597	MultiplicativeExpression	decoded_frame -> nb_samples * avctx -> channels * bps		8513437	1		*			
ANR	8513598	PtrMemberAccess	decoded_frame -> nb_samples		8513437	0					
ANR	8513599	Identifier	decoded_frame		8513437	0					
ANR	8513600	Identifier	nb_samples		8513437	1					
ANR	8513601	MultiplicativeExpression	avctx -> channels * bps		8513437	1		*			
ANR	8513602	PtrMemberAccess	avctx -> channels		8513437	0					
ANR	8513603	Identifier	avctx		8513437	0					
ANR	8513604	Identifier	channels		8513437	1					
ANR	8513605	Identifier	bps		8513437	1					
ANR	8513606	IdentifierDeclStatement	void * samples = decoded_frame -> data [ 0 ] ;	73:8:1340:1378	8513437	1	True				
ANR	8513607	IdentifierDecl	* samples = decoded_frame -> data [ 0 ]		8513437	0					
ANR	8513608	IdentifierDeclType	void *		8513437	0					
ANR	8513609	Identifier	samples		8513437	1					
ANR	8513610	AssignmentExpression	* samples = decoded_frame -> data [ 0 ]		8513437	2		=			
ANR	8513611	Identifier	samples		8513437	0					
ANR	8513612	ArrayIndexing	decoded_frame -> data [ 0 ]		8513437	1					
ANR	8513613	PtrMemberAccess	decoded_frame -> data		8513437	0					
ANR	8513614	Identifier	decoded_frame		8513437	0					
ANR	8513615	Identifier	data		8513437	1					
ANR	8513616	PrimaryExpression	0		8513437	1					
ANR	8513617	SwitchStatement	switch ( avctx -> sample_fmt )		8513437	2					
ANR	8513618	Condition	avctx -> sample_fmt	75:16:1397:1413	8513437	0	True				
ANR	8513619	PtrMemberAccess	avctx -> sample_fmt		8513437	0					
ANR	8513620	Identifier	avctx		8513437	0					
ANR	8513621	Identifier	sample_fmt		8513437	1					
ANR	8513622	CompoundStatement		73:35:1337:1337	8513437	1					
ANR	8513623	Label	case AV_SAMPLE_FMT_U8 :	77:8:1427:1448	8513437	0	True				
ANR	8513624	Identifier	AV_SAMPLE_FMT_U8		8513437	0					
ANR	8513625	CompoundStatement		79:12:1395:1418	8513437	1					
ANR	8513626	IdentifierDeclStatement	uint8_t * volp = samples ;	81:12:1474:1497	8513437	0	True				
ANR	8513627	IdentifierDecl	* volp = samples		8513437	0					
ANR	8513628	IdentifierDeclType	uint8_t *		8513437	0					
ANR	8513629	Identifier	volp		8513437	1					
ANR	8513630	AssignmentExpression	* volp = samples		8513437	2		=			
ANR	8513631	Identifier	samples		8513437	0					
ANR	8513632	Identifier	samples		8513437	1					
ANR	8513633	ForStatement	for ( i = 0 ; i < ( decoded_data_size / sizeof ( * volp ) ) ; i ++ )		8513437	1					
ANR	8513634	ForInit	i = 0 ;	83:17:1517:1522	8513437	0	True				
ANR	8513635	AssignmentExpression	i = 0		8513437	0		=			
ANR	8513636	Identifier	i		8513437	0					
ANR	8513637	PrimaryExpression	0		8513437	1					
ANR	8513638	Condition	i < ( decoded_data_size / sizeof ( * volp ) )	83:24:1524:1562	8513437	1	True				
ANR	8513639	RelationalExpression	i < ( decoded_data_size / sizeof ( * volp ) )		8513437	0		<			
ANR	8513640	Identifier	i		8513437	0					
ANR	8513641	MultiplicativeExpression	decoded_data_size / sizeof ( * volp )		8513437	1		/			
ANR	8513642	Identifier	decoded_data_size		8513437	0					
ANR	8513643	SizeofExpression	sizeof ( * volp )		8513437	1					
ANR	8513644	Sizeof	sizeof		8513437	0					
ANR	8513645	UnaryOperationExpression	* volp		8513437	1					
ANR	8513646	UnaryOperator	*		8513437	0					
ANR	8513647	Identifier	volp		8513437	1					
ANR	8513648	PostIncDecOperationExpression	i ++	83:65:1565:1567	8513437	2	True				
ANR	8513649	Identifier	i		8513437	0					
ANR	8513650	IncDec	++		8513437	1					
ANR	8513651	CompoundStatement		83:16:1510:1567	8513437	3					
ANR	8513652	IdentifierDeclStatement	int v = ( ( ( * volp - 128 ) * audio_volume + 128 ) >> 8 ) + 128 ;	85:16:1589:1646	8513437	0	True				
ANR	8513653	IdentifierDecl	v = ( ( ( * volp - 128 ) * audio_volume + 128 ) >> 8 ) + 128		8513437	0					
ANR	8513654	IdentifierDeclType	int		8513437	0					
ANR	8513655	Identifier	v		8513437	1					
ANR	8513656	AssignmentExpression	v = ( ( ( * volp - 128 ) * audio_volume + 128 ) >> 8 ) + 128		8513437	2		=			
ANR	8513657	Identifier	v		8513437	0					
ANR	8513658	AdditiveExpression	( ( ( * volp - 128 ) * audio_volume + 128 ) >> 8 ) + 128		8513437	1		+			
ANR	8513659	ShiftExpression	( ( * volp - 128 ) * audio_volume + 128 ) >> 8		8513437	0		>>			
ANR	8513660	AdditiveExpression	( * volp - 128 ) * audio_volume + 128		8513437	0		+			
ANR	8513661	MultiplicativeExpression	( * volp - 128 ) * audio_volume		8513437	0		*			
ANR	8513662	AdditiveExpression	* volp - 128		8513437	0		-			
ANR	8513663	UnaryOperationExpression	* volp		8513437	0					
ANR	8513664	UnaryOperator	*		8513437	0					
ANR	8513665	Identifier	volp		8513437	1					
ANR	8513666	PrimaryExpression	128		8513437	1					
ANR	8513667	Identifier	audio_volume		8513437	1					
ANR	8513668	PrimaryExpression	128		8513437	1					
ANR	8513669	PrimaryExpression	8		8513437	1					
ANR	8513670	PrimaryExpression	128		8513437	1					
ANR	8513671	ExpressionStatement	* volp ++ = av_clip_uint8 ( v )	87:16:1665:1691	8513437	1	True				
ANR	8513672	AssignmentExpression	* volp ++ = av_clip_uint8 ( v )		8513437	0		=			
ANR	8513673	UnaryOperationExpression	* volp ++		8513437	0					
ANR	8513674	UnaryOperator	*		8513437	0					
ANR	8513675	PostIncDecOperationExpression	volp ++		8513437	1					
ANR	8513676	Identifier	volp		8513437	0					
ANR	8513677	IncDec	++		8513437	1					
ANR	8513678	CallExpression	av_clip_uint8 ( v )		8513437	1					
ANR	8513679	Callee	av_clip_uint8		8513437	0					
ANR	8513680	Identifier	av_clip_uint8		8513437	0					
ANR	8513681	ArgumentList	v		8513437	1					
ANR	8513682	Argument	v		8513437	0					
ANR	8513683	Identifier	v		8513437	0					
ANR	8513684	BreakStatement	break ;	91:12:1721:1726	8513437	2	True				
ANR	8513685	Label	case AV_SAMPLE_FMT_S16 :	95:8:1748:1770	8513437	2	True				
ANR	8513686	Identifier	AV_SAMPLE_FMT_S16		8513437	0					
ANR	8513687	CompoundStatement		97:12:1717:1740	8513437	3					
ANR	8513688	IdentifierDeclStatement	int16_t * volp = samples ;	99:12:1796:1819	8513437	0	True				
ANR	8513689	IdentifierDecl	* volp = samples		8513437	0					
ANR	8513690	IdentifierDeclType	int16_t *		8513437	0					
ANR	8513691	Identifier	volp		8513437	1					
ANR	8513692	AssignmentExpression	* volp = samples		8513437	2		=			
ANR	8513693	Identifier	samples		8513437	0					
ANR	8513694	Identifier	samples		8513437	1					
ANR	8513695	ForStatement	for ( i = 0 ; i < ( decoded_data_size / sizeof ( * volp ) ) ; i ++ )		8513437	1					
ANR	8513696	ForInit	i = 0 ;	101:17:1839:1844	8513437	0	True				
ANR	8513697	AssignmentExpression	i = 0		8513437	0		=			
ANR	8513698	Identifier	i		8513437	0					
ANR	8513699	PrimaryExpression	0		8513437	1					
ANR	8513700	Condition	i < ( decoded_data_size / sizeof ( * volp ) )	101:24:1846:1884	8513437	1	True				
ANR	8513701	RelationalExpression	i < ( decoded_data_size / sizeof ( * volp ) )		8513437	0		<			
ANR	8513702	Identifier	i		8513437	0					
ANR	8513703	MultiplicativeExpression	decoded_data_size / sizeof ( * volp )		8513437	1		/			
ANR	8513704	Identifier	decoded_data_size		8513437	0					
ANR	8513705	SizeofExpression	sizeof ( * volp )		8513437	1					
ANR	8513706	Sizeof	sizeof		8513437	0					
ANR	8513707	UnaryOperationExpression	* volp		8513437	1					
ANR	8513708	UnaryOperator	*		8513437	0					
ANR	8513709	Identifier	volp		8513437	1					
ANR	8513710	PostIncDecOperationExpression	i ++	101:65:1887:1889	8513437	2	True				
ANR	8513711	Identifier	i		8513437	0					
ANR	8513712	IncDec	++		8513437	1					
ANR	8513713	CompoundStatement		101:16:1832:1875	8513437	3					
ANR	8513714	IdentifierDeclStatement	int v = ( ( * volp ) * audio_volume + 128 ) >> 8 ;	103:16:1911:1954	8513437	0	True				
ANR	8513715	IdentifierDecl	v = ( ( * volp ) * audio_volume + 128 ) >> 8		8513437	0					
ANR	8513716	IdentifierDeclType	int		8513437	0					
ANR	8513717	Identifier	v		8513437	1					
ANR	8513718	AssignmentExpression	v = ( ( * volp ) * audio_volume + 128 ) >> 8		8513437	2		=			
ANR	8513719	Identifier	v		8513437	0					
ANR	8513720	ShiftExpression	( ( * volp ) * audio_volume + 128 ) >> 8		8513437	1		>>			
ANR	8513721	AdditiveExpression	( * volp ) * audio_volume + 128		8513437	0		+			
ANR	8513722	MultiplicativeExpression	( * volp ) * audio_volume		8513437	0		*			
ANR	8513723	UnaryOperationExpression	* volp		8513437	0					
ANR	8513724	UnaryOperator	*		8513437	0					
ANR	8513725	Identifier	volp		8513437	1					
ANR	8513726	Identifier	audio_volume		8513437	1					
ANR	8513727	PrimaryExpression	128		8513437	1					
ANR	8513728	PrimaryExpression	8		8513437	1					
ANR	8513729	ExpressionStatement	* volp ++ = av_clip_int16 ( v )	105:16:1973:1999	8513437	1	True				
ANR	8513730	AssignmentExpression	* volp ++ = av_clip_int16 ( v )		8513437	0		=			
ANR	8513731	UnaryOperationExpression	* volp ++		8513437	0					
ANR	8513732	UnaryOperator	*		8513437	0					
ANR	8513733	PostIncDecOperationExpression	volp ++		8513437	1					
ANR	8513734	Identifier	volp		8513437	0					
ANR	8513735	IncDec	++		8513437	1					
ANR	8513736	CallExpression	av_clip_int16 ( v )		8513437	1					
ANR	8513737	Callee	av_clip_int16		8513437	0					
ANR	8513738	Identifier	av_clip_int16		8513437	0					
ANR	8513739	ArgumentList	v		8513437	1					
ANR	8513740	Argument	v		8513437	0					
ANR	8513741	Identifier	v		8513437	0					
ANR	8513742	BreakStatement	break ;	109:12:2029:2034	8513437	2	True				
ANR	8513743	Label	case AV_SAMPLE_FMT_S32 :	113:8:2056:2078	8513437	4	True				
ANR	8513744	Identifier	AV_SAMPLE_FMT_S32		8513437	0					
ANR	8513745	CompoundStatement		115:12:2025:2048	8513437	5					
ANR	8513746	IdentifierDeclStatement	int32_t * volp = samples ;	117:12:2104:2127	8513437	0	True				
ANR	8513747	IdentifierDecl	* volp = samples		8513437	0					
ANR	8513748	IdentifierDeclType	int32_t *		8513437	0					
ANR	8513749	Identifier	volp		8513437	1					
ANR	8513750	AssignmentExpression	* volp = samples		8513437	2		=			
ANR	8513751	Identifier	samples		8513437	0					
ANR	8513752	Identifier	samples		8513437	1					
ANR	8513753	ForStatement	for ( i = 0 ; i < ( decoded_data_size / sizeof ( * volp ) ) ; i ++ )		8513437	1					
ANR	8513754	ForInit	i = 0 ;	119:17:2147:2152	8513437	0	True				
ANR	8513755	AssignmentExpression	i = 0		8513437	0		=			
ANR	8513756	Identifier	i		8513437	0					
ANR	8513757	PrimaryExpression	0		8513437	1					
ANR	8513758	Condition	i < ( decoded_data_size / sizeof ( * volp ) )	119:24:2154:2192	8513437	1	True				
ANR	8513759	RelationalExpression	i < ( decoded_data_size / sizeof ( * volp ) )		8513437	0		<			
ANR	8513760	Identifier	i		8513437	0					
ANR	8513761	MultiplicativeExpression	decoded_data_size / sizeof ( * volp )		8513437	1		/			
ANR	8513762	Identifier	decoded_data_size		8513437	0					
ANR	8513763	SizeofExpression	sizeof ( * volp )		8513437	1					
ANR	8513764	Sizeof	sizeof		8513437	0					
ANR	8513765	UnaryOperationExpression	* volp		8513437	1					
ANR	8513766	UnaryOperator	*		8513437	0					
ANR	8513767	Identifier	volp		8513437	1					
ANR	8513768	PostIncDecOperationExpression	i ++	119:65:2195:2197	8513437	2	True				
ANR	8513769	Identifier	i		8513437	0					
ANR	8513770	IncDec	++		8513437	1					
ANR	8513771	CompoundStatement		119:16:2140:2196	8513437	3					
ANR	8513772	IdentifierDeclStatement	int64_t v = ( ( ( int64_t ) * volp * audio_volume + 128 ) >> 8 ) ;	121:16:2219:2275	8513437	0	True				
ANR	8513773	IdentifierDecl	v = ( ( ( int64_t ) * volp * audio_volume + 128 ) >> 8 )		8513437	0					
ANR	8513774	IdentifierDeclType	int64_t		8513437	0					
ANR	8513775	Identifier	v		8513437	1					
ANR	8513776	AssignmentExpression	v = ( ( ( int64_t ) * volp * audio_volume + 128 ) >> 8 )		8513437	2		=			
ANR	8513777	Identifier	v		8513437	0					
ANR	8513778	ShiftExpression	( ( int64_t ) * volp * audio_volume + 128 ) >> 8		8513437	1		>>			
ANR	8513779	AdditiveExpression	( int64_t ) * volp * audio_volume + 128		8513437	0		+			
ANR	8513780	MultiplicativeExpression	( int64_t ) * volp * audio_volume		8513437	0		*			
ANR	8513781	CastExpression	( int64_t ) * volp		8513437	0					
ANR	8513782	CastTarget	int64_t		8513437	0					
ANR	8513783	UnaryOperationExpression	* volp		8513437	1					
ANR	8513784	UnaryOperator	*		8513437	0					
ANR	8513785	Identifier	volp		8513437	1					
ANR	8513786	Identifier	audio_volume		8513437	1					
ANR	8513787	PrimaryExpression	128		8513437	1					
ANR	8513788	PrimaryExpression	8		8513437	1					
ANR	8513789	ExpressionStatement	* volp ++ = av_clipl_int32 ( v )	123:16:2294:2321	8513437	1	True				
ANR	8513790	AssignmentExpression	* volp ++ = av_clipl_int32 ( v )		8513437	0		=			
ANR	8513791	UnaryOperationExpression	* volp ++		8513437	0					
ANR	8513792	UnaryOperator	*		8513437	0					
ANR	8513793	PostIncDecOperationExpression	volp ++		8513437	1					
ANR	8513794	Identifier	volp		8513437	0					
ANR	8513795	IncDec	++		8513437	1					
ANR	8513796	CallExpression	av_clipl_int32 ( v )		8513437	1					
ANR	8513797	Callee	av_clipl_int32		8513437	0					
ANR	8513798	Identifier	av_clipl_int32		8513437	0					
ANR	8513799	ArgumentList	v		8513437	1					
ANR	8513800	Argument	v		8513437	0					
ANR	8513801	Identifier	v		8513437	0					
ANR	8513802	BreakStatement	break ;	127:12:2351:2356	8513437	2	True				
ANR	8513803	Label	case AV_SAMPLE_FMT_FLT :	131:8:2378:2400	8513437	6	True				
ANR	8513804	Identifier	AV_SAMPLE_FMT_FLT		8513437	0					
ANR	8513805	CompoundStatement		135:12:2383:2417	8513437	7					
ANR	8513806	IdentifierDeclStatement	float * volp = samples ;	135:12:2426:2447	8513437	0	True				
ANR	8513807	IdentifierDecl	* volp = samples		8513437	0					
ANR	8513808	IdentifierDeclType	float *		8513437	0					
ANR	8513809	Identifier	volp		8513437	1					
ANR	8513810	AssignmentExpression	* volp = samples		8513437	2		=			
ANR	8513811	Identifier	samples		8513437	0					
ANR	8513812	Identifier	samples		8513437	1					
ANR	8513813	IdentifierDeclStatement	float scale = audio_volume / 256.f ;	137:12:2462:2496	8513437	1	True				
ANR	8513814	IdentifierDecl	scale = audio_volume / 256.f		8513437	0					
ANR	8513815	IdentifierDeclType	float		8513437	0					
ANR	8513816	Identifier	scale		8513437	1					
ANR	8513817	AssignmentExpression	scale = audio_volume / 256.f		8513437	2		=			
ANR	8513818	Identifier	scale		8513437	0					
ANR	8513819	MultiplicativeExpression	audio_volume / 256.f		8513437	1		/			
ANR	8513820	Identifier	audio_volume		8513437	0					
ANR	8513821	PrimaryExpression	256.f		8513437	1					
ANR	8513822	ForStatement	for ( i = 0 ; i < ( decoded_data_size / sizeof ( * volp ) ) ; i ++ )		8513437	2					
ANR	8513823	ForInit	i = 0 ;	139:17:2516:2521	8513437	0	True				
ANR	8513824	AssignmentExpression	i = 0		8513437	0		=			
ANR	8513825	Identifier	i		8513437	0					
ANR	8513826	PrimaryExpression	0		8513437	1					
ANR	8513827	Condition	i < ( decoded_data_size / sizeof ( * volp ) )	139:24:2523:2561	8513437	1	True				
ANR	8513828	RelationalExpression	i < ( decoded_data_size / sizeof ( * volp ) )		8513437	0		<			
ANR	8513829	Identifier	i		8513437	0					
ANR	8513830	MultiplicativeExpression	decoded_data_size / sizeof ( * volp )		8513437	1		/			
ANR	8513831	Identifier	decoded_data_size		8513437	0					
ANR	8513832	SizeofExpression	sizeof ( * volp )		8513437	1					
ANR	8513833	Sizeof	sizeof		8513437	0					
ANR	8513834	UnaryOperationExpression	* volp		8513437	1					
ANR	8513835	UnaryOperator	*		8513437	0					
ANR	8513836	Identifier	volp		8513437	1					
ANR	8513837	PostIncDecOperationExpression	i ++	139:65:2564:2566	8513437	2	True				
ANR	8513838	Identifier	i		8513437	0					
ANR	8513839	IncDec	++		8513437	1					
ANR	8513840	CompoundStatement		137:70:2490:2490	8513437	3					
ANR	8513841	ExpressionStatement	* volp ++ *= scale	141:16:2588:2604	8513437	0	True				
ANR	8513842	AssignmentExpression	* volp ++ *= scale		8513437	0		*=			
ANR	8513843	UnaryOperationExpression	* volp ++		8513437	0					
ANR	8513844	UnaryOperator	*		8513437	0					
ANR	8513845	PostIncDecOperationExpression	volp ++		8513437	1					
ANR	8513846	Identifier	volp		8513437	0					
ANR	8513847	IncDec	++		8513437	1					
ANR	8513848	Identifier	scale		8513437	1					
ANR	8513849	BreakStatement	break ;	145:12:2634:2639	8513437	3	True				
ANR	8513850	Label	case AV_SAMPLE_FMT_DBL :	149:8:2661:2683	8513437	8	True				
ANR	8513851	Identifier	AV_SAMPLE_FMT_DBL		8513437	0					
ANR	8513852	CompoundStatement		153:12:2667:2701	8513437	9					
ANR	8513853	IdentifierDeclStatement	double * volp = samples ;	153:12:2709:2731	8513437	0	True				
ANR	8513854	IdentifierDecl	* volp = samples		8513437	0					
ANR	8513855	IdentifierDeclType	double *		8513437	0					
ANR	8513856	Identifier	volp		8513437	1					
ANR	8513857	AssignmentExpression	* volp = samples		8513437	2		=			
ANR	8513858	Identifier	samples		8513437	0					
ANR	8513859	Identifier	samples		8513437	1					
ANR	8513860	IdentifierDeclStatement	double scale = audio_volume / 256. ;	155:12:2746:2780	8513437	1	True				
ANR	8513861	IdentifierDecl	scale = audio_volume / 256.		8513437	0					
ANR	8513862	IdentifierDeclType	double		8513437	0					
ANR	8513863	Identifier	scale		8513437	1					
ANR	8513864	AssignmentExpression	scale = audio_volume / 256.		8513437	2		=			
ANR	8513865	Identifier	scale		8513437	0					
ANR	8513866	MultiplicativeExpression	audio_volume / 256.		8513437	1		/			
ANR	8513867	Identifier	audio_volume		8513437	0					
ANR	8513868	PrimaryExpression	256.		8513437	1					
ANR	8513869	ForStatement	for ( i = 0 ; i < ( decoded_data_size / sizeof ( * volp ) ) ; i ++ )		8513437	2					
ANR	8513870	ForInit	i = 0 ;	157:17:2800:2805	8513437	0	True				
ANR	8513871	AssignmentExpression	i = 0		8513437	0		=			
ANR	8513872	Identifier	i		8513437	0					
ANR	8513873	PrimaryExpression	0		8513437	1					
ANR	8513874	Condition	i < ( decoded_data_size / sizeof ( * volp ) )	157:24:2807:2845	8513437	1	True				
ANR	8513875	RelationalExpression	i < ( decoded_data_size / sizeof ( * volp ) )		8513437	0		<			
ANR	8513876	Identifier	i		8513437	0					
ANR	8513877	MultiplicativeExpression	decoded_data_size / sizeof ( * volp )		8513437	1		/			
ANR	8513878	Identifier	decoded_data_size		8513437	0					
ANR	8513879	SizeofExpression	sizeof ( * volp )		8513437	1					
ANR	8513880	Sizeof	sizeof		8513437	0					
ANR	8513881	UnaryOperationExpression	* volp		8513437	1					
ANR	8513882	UnaryOperator	*		8513437	0					
ANR	8513883	Identifier	volp		8513437	1					
ANR	8513884	PostIncDecOperationExpression	i ++	157:65:2848:2850	8513437	2	True				
ANR	8513885	Identifier	i		8513437	0					
ANR	8513886	IncDec	++		8513437	1					
ANR	8513887	CompoundStatement		155:70:2774:2774	8513437	3					
ANR	8513888	ExpressionStatement	* volp ++ *= scale	159:16:2872:2888	8513437	0	True				
ANR	8513889	AssignmentExpression	* volp ++ *= scale		8513437	0		*=			
ANR	8513890	UnaryOperationExpression	* volp ++		8513437	0					
ANR	8513891	UnaryOperator	*		8513437	0					
ANR	8513892	PostIncDecOperationExpression	volp ++		8513437	1					
ANR	8513893	Identifier	volp		8513437	0					
ANR	8513894	IncDec	++		8513437	1					
ANR	8513895	Identifier	scale		8513437	1					
ANR	8513896	BreakStatement	break ;	163:12:2918:2923	8513437	3	True				
ANR	8513897	Label	default :	167:8:2945:2952	8513437	10	True				
ANR	8513898	Identifier	default		8513437	0					
ANR	8513899	ExpressionStatement	"av_log ( NULL , AV_LOG_FATAL , ""Audio volume adjustment on sample format %s is not supported.\\n"" , av_get_sample_fmt_name ( ist -> st -> codec -> sample_fmt ) )"	169:12:2967:3152	8513437	11	True				
ANR	8513900	CallExpression	"av_log ( NULL , AV_LOG_FATAL , ""Audio volume adjustment on sample format %s is not supported.\\n"" , av_get_sample_fmt_name ( ist -> st -> codec -> sample_fmt ) )"		8513437	0					
ANR	8513901	Callee	av_log		8513437	0					
ANR	8513902	Identifier	av_log		8513437	0					
ANR	8513903	ArgumentList	NULL		8513437	1					
ANR	8513904	Argument	NULL		8513437	0					
ANR	8513905	Identifier	NULL		8513437	0					
ANR	8513906	Argument	AV_LOG_FATAL		8513437	1					
ANR	8513907	Identifier	AV_LOG_FATAL		8513437	0					
ANR	8513908	Argument	"""Audio volume adjustment on sample format %s is not supported.\\n"""		8513437	2					
ANR	8513909	PrimaryExpression	"""Audio volume adjustment on sample format %s is not supported.\\n"""		8513437	0					
ANR	8513910	Argument	av_get_sample_fmt_name ( ist -> st -> codec -> sample_fmt )		8513437	3					
ANR	8513911	CallExpression	av_get_sample_fmt_name ( ist -> st -> codec -> sample_fmt )		8513437	0					
ANR	8513912	Callee	av_get_sample_fmt_name		8513437	0					
ANR	8513913	Identifier	av_get_sample_fmt_name		8513437	0					
ANR	8513914	ArgumentList	ist -> st -> codec -> sample_fmt		8513437	1					
ANR	8513915	Argument	ist -> st -> codec -> sample_fmt		8513437	0					
ANR	8513916	PtrMemberAccess	ist -> st -> codec -> sample_fmt		8513437	0					
ANR	8513917	PtrMemberAccess	ist -> st -> codec		8513437	0					
ANR	8513918	PtrMemberAccess	ist -> st		8513437	0					
ANR	8513919	Identifier	ist		8513437	0					
ANR	8513920	Identifier	st		8513437	1					
ANR	8513921	Identifier	codec		8513437	1					
ANR	8513922	Identifier	sample_fmt		8513437	1					
ANR	8513923	ExpressionStatement	exit_program ( 1 )	175:12:3167:3182	8513437	12	True				
ANR	8513924	CallExpression	exit_program ( 1 )		8513437	0					
ANR	8513925	Callee	exit_program		8513437	0					
ANR	8513926	Identifier	exit_program		8513437	0					
ANR	8513927	ArgumentList	1		8513437	1					
ANR	8513928	Argument	1		8513437	0					
ANR	8513929	PrimaryExpression	1		8513437	0					
ANR	8513930	ExpressionStatement	rate_emu_sleep ( ist )	183:4:3209:3228	8513437	12	True				
ANR	8513931	CallExpression	rate_emu_sleep ( ist )		8513437	0					
ANR	8513932	Callee	rate_emu_sleep		8513437	0					
ANR	8513933	Identifier	rate_emu_sleep		8513437	0					
ANR	8513934	ArgumentList	ist		8513437	1					
ANR	8513935	Argument	ist		8513437	0					
ANR	8513936	Identifier	ist		8513437	0					
ANR	8513937	ForStatement	for ( i = 0 ; i < nb_output_streams ; i ++ )		8513437	13					
ANR	8513938	ForInit	i = 0 ;	187:9:3242:3247	8513437	0	True				
ANR	8513939	AssignmentExpression	i = 0		8513437	0		=			
ANR	8513940	Identifier	i		8513437	0					
ANR	8513941	PrimaryExpression	0		8513437	1					
ANR	8513942	Condition	i < nb_output_streams	187:16:3249:3269	8513437	1	True				
ANR	8513943	RelationalExpression	i < nb_output_streams		8513437	0		<			
ANR	8513944	Identifier	i		8513437	0					
ANR	8513945	Identifier	nb_output_streams		8513437	1					
ANR	8513946	PostIncDecOperationExpression	i ++	187:39:3272:3274	8513437	2	True				
ANR	8513947	Identifier	i		8513437	0					
ANR	8513948	IncDec	++		8513437	1					
ANR	8513949	CompoundStatement		187:8:3209:3246	8513437	3					
ANR	8513950	IdentifierDeclStatement	OutputStream * ost = output_streams [ i ] ;	189:8:3288:3325	8513437	0	True				
ANR	8513951	IdentifierDecl	* ost = output_streams [ i ]		8513437	0					
ANR	8513952	IdentifierDeclType	OutputStream *		8513437	0					
ANR	8513953	Identifier	ost		8513437	1					
ANR	8513954	AssignmentExpression	* ost = output_streams [ i ]		8513437	2		=			
ANR	8513955	Identifier	ost		8513437	0					
ANR	8513956	ArrayIndexing	output_streams [ i ]		8513437	1					
ANR	8513957	Identifier	output_streams		8513437	0					
ANR	8513958	Identifier	i		8513437	1					
ANR	8513959	IfStatement	"if ( ! check_output_constraints ( ist , ost ) || ! ost -> encoding_needed )"		8513437	1					
ANR	8513960	Condition	"! check_output_constraints ( ist , ost ) || ! ost -> encoding_needed"	193:12:3342:3401	8513437	0	True				
ANR	8513961	OrExpression	"! check_output_constraints ( ist , ost ) || ! ost -> encoding_needed"		8513437	0		||			
ANR	8513962	UnaryOperationExpression	"! check_output_constraints ( ist , ost )"		8513437	0					
ANR	8513963	UnaryOperator	!		8513437	0					
ANR	8513964	CallExpression	"check_output_constraints ( ist , ost )"		8513437	1					
ANR	8513965	Callee	check_output_constraints		8513437	0					
ANR	8513966	Identifier	check_output_constraints		8513437	0					
ANR	8513967	ArgumentList	ist		8513437	1					
ANR	8513968	Argument	ist		8513437	0					
ANR	8513969	Identifier	ist		8513437	0					
ANR	8513970	Argument	ost		8513437	1					
ANR	8513971	Identifier	ost		8513437	0					
ANR	8513972	UnaryOperationExpression	! ost -> encoding_needed		8513437	1					
ANR	8513973	UnaryOperator	!		8513437	0					
ANR	8513974	PtrMemberAccess	ost -> encoding_needed		8513437	1					
ANR	8513975	Identifier	ost		8513437	0					
ANR	8513976	Identifier	encoding_needed		8513437	1					
ANR	8513977	ContinueStatement	continue ;	195:12:3417:3425	8513437	1	True				
ANR	8513978	ExpressionStatement	"do_audio_out ( output_files [ ost -> file_index ] -> ctx , ost , ist , decoded_frame )"	197:8:3436:3509	8513437	2	True				
ANR	8513979	CallExpression	"do_audio_out ( output_files [ ost -> file_index ] -> ctx , ost , ist , decoded_frame )"		8513437	0					
ANR	8513980	Callee	do_audio_out		8513437	0					
ANR	8513981	Identifier	do_audio_out		8513437	0					
ANR	8513982	ArgumentList	output_files [ ost -> file_index ] -> ctx		8513437	1					
ANR	8513983	Argument	output_files [ ost -> file_index ] -> ctx		8513437	0					
ANR	8513984	PtrMemberAccess	output_files [ ost -> file_index ] -> ctx		8513437	0					
ANR	8513985	ArrayIndexing	output_files [ ost -> file_index ]		8513437	0					
ANR	8513986	Identifier	output_files		8513437	0					
ANR	8513987	PtrMemberAccess	ost -> file_index		8513437	1					
ANR	8513988	Identifier	ost		8513437	0					
ANR	8513989	Identifier	file_index		8513437	1					
ANR	8513990	Identifier	ctx		8513437	1					
ANR	8513991	Argument	ost		8513437	1					
ANR	8513992	Identifier	ost		8513437	0					
ANR	8513993	Argument	ist		8513437	2					
ANR	8513994	Identifier	ist		8513437	0					
ANR	8513995	Argument	decoded_frame		8513437	3					
ANR	8513996	Identifier	decoded_frame		8513437	0					
ANR	8513997	ReturnStatement	return ret ;	203:4:3525:3535	8513437	14	True				
ANR	8513998	Identifier	ret		8513437	0					
ANR	8513999	ReturnType	static int		8513437	1					
ANR	8514000	Identifier	transcode_audio		8513437	2					
ANR	8514001	ParameterList	"InputStream * ist , AVPacket * pkt , int * got_output"		8513437	3					
ANR	8514002	Parameter	InputStream * ist	1:27:27:42	8513437	0	True				
ANR	8514003	ParameterType	InputStream *		8513437	0					
ANR	8514004	Identifier	ist		8513437	1					
ANR	8514005	Parameter	AVPacket * pkt	1:45:45:57	8513437	1	True				
ANR	8514006	ParameterType	AVPacket *		8513437	0					
ANR	8514007	Identifier	pkt		8513437	1					
ANR	8514008	Parameter	int * got_output	1:60:60:74	8513437	2	True				
ANR	8514009	ParameterType	int *		8513437	0					
ANR	8514010	Identifier	got_output		8513437	1					
ANR	8514011	CFGEntryNode	ENTRY		8513437		True				
ANR	8514012	CFGExitNode	EXIT		8513437		True				
ANR	8514013	Symbol	ENOMEM		8513437						
ANR	8514014	Symbol	avcodec_alloc_frame		8513437						
ANR	8514015	Symbol	ost -> encoding_needed		8513437						
ANR	8514016	Symbol	* output_streams		8513437						
ANR	8514017	Symbol	* * * ist		8513437						
ANR	8514018	Symbol	* * ist -> st		8513437						
ANR	8514019	Symbol	ist		8513437						
ANR	8514020	Symbol	ist -> decoded_frame		8513437						
ANR	8514021	Symbol	* * * ost		8513437						
ANR	8514022	Symbol	avctx -> channels		8513437						
ANR	8514023	Symbol	ost		8513437						
ANR	8514024	Symbol	AV_LOG_FATAL		8513437						
ANR	8514025	Symbol	* volp		8513437						
ANR	8514026	Symbol	* decoded_frame		8513437						
ANR	8514027	Symbol	* * ost -> file_index		8513437						
ANR	8514028	Symbol	output_files [ ost -> file_index ] -> ctx		8513437						
ANR	8514029	Symbol	ret		8513437						
ANR	8514030	Symbol	avctx -> sample_fmt		8513437						
ANR	8514031	Symbol	NULL		8513437						
ANR	8514032	Symbol	output_streams		8513437						
ANR	8514033	Symbol	avcodec_decode_audio4		8513437						
ANR	8514034	Symbol	ist -> st		8513437						
ANR	8514035	Symbol	samples		8513437						
ANR	8514036	Symbol	* * output_files		8513437						
ANR	8514037	Symbol	* avctx		8513437						
ANR	8514038	Symbol	decoded_data_size		8513437						
ANR	8514039	Symbol	decoded_frame -> pts		8513437						
ANR	8514040	Symbol	av_clipl_int32		8513437						
ANR	8514041	Symbol	ost -> file_index		8513437						
ANR	8514042	Symbol	* got_output		8513437						
ANR	8514043	Symbol	av_clip_int16		8513437						
ANR	8514044	Symbol	ist -> next_dts		8513437						
ANR	8514045	Symbol	decoded_frame -> nb_samples		8513437						
ANR	8514046	Symbol	av_get_bytes_per_sample		8513437						
ANR	8514047	Symbol	* output_files		8513437						
ANR	8514048	Symbol	ist -> st -> codec -> sample_fmt		8513437						
ANR	8514049	Symbol	av_clip_uint8		8513437						
ANR	8514050	Symbol	scale		8513437						
ANR	8514051	Symbol	volp		8513437						
ANR	8514052	Symbol	* ist		8513437						
ANR	8514053	Symbol	AV_TIME_BASE		8513437						
ANR	8514054	Symbol	AV_NOPTS_VALUE		8513437						
ANR	8514055	Symbol	output_files		8513437						
ANR	8514056	Symbol	* ist -> st		8513437						
ANR	8514057	Symbol	got_output		8513437						
ANR	8514058	Symbol	pkt		8513437						
ANR	8514059	Symbol	decoded_frame		8513437						
ANR	8514060	Symbol	* decoded_frame -> data		8513437						
ANR	8514061	Symbol	avctx		8513437						
ANR	8514062	Symbol	* * ist		8513437						
ANR	8514063	Symbol	* volp ++		8513437						
ANR	8514064	Symbol	bps		8513437						
ANR	8514065	Symbol	* * ost		8513437						
ANR	8514066	Symbol	check_output_constraints		8513437						
ANR	8514067	Symbol	i		8513437						
ANR	8514068	Symbol	* * decoded_frame		8513437						
ANR	8514069	Symbol	ist -> st -> codec		8513437						
ANR	8514070	Symbol	avctx -> sample_rate		8513437						
ANR	8514071	Symbol	* ost -> file_index		8513437						
ANR	8514072	Symbol	nb_output_streams		8513437						
ANR	8514073	Symbol	* i		8513437						
ANR	8514074	Symbol	v		8513437						
ANR	8514075	Symbol	audio_volume		8513437						
ANR	8514076	Symbol	* ist -> st -> codec		8513437						
ANR	8514077	Symbol	av_get_sample_fmt_name		8513437						
ANR	8514078	Symbol	* ost		8513437						
ANR	8514079	Symbol	AVERROR		8513437						
ANR	8514080	Symbol	decoded_frame -> data		8513437						
