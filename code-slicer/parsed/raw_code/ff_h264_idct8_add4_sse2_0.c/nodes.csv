command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3426719	File	/home/p4ultr4n/workplace/ReVeal/raw_code/ff_h264_idct8_add4_sse2_0.c								
ANR	3426720	Function	ff_h264_idct8_add4_sse2	1:0:0:464							
ANR	3426721	FunctionDef	"ff_h264_idct8_add4_sse2 (uint8_t * dst , const int * block_offset , DCTELEM * block , int stride , const uint8_t nnzc [ 6 * 8 ])"		3426720	0					
ANR	3426722	CompoundStatement		1:127:127:464	3426720	0					
ANR	3426723	IdentifierDeclStatement	int i ;	3:4:134:139	3426720	0	True				
ANR	3426724	IdentifierDecl	i		3426720	0					
ANR	3426725	IdentifierDeclType	int		3426720	0					
ANR	3426726	Identifier	i		3426720	1					
ANR	3426727	ForStatement	for ( i = 0 ; i < 16 ; i += 4 )		3426720	1					
ANR	3426728	ForInit	i = 0 ;	5:8:150:153	3426720	0	True				
ANR	3426729	AssignmentExpression	i = 0		3426720	0		=			
ANR	3426730	Identifier	i		3426720	0					
ANR	3426731	PrimaryExpression	0		3426720	1					
ANR	3426732	Condition	i < 16	5:13:155:158	3426720	1	True				
ANR	3426733	RelationalExpression	i < 16		3426720	0		<			
ANR	3426734	Identifier	i		3426720	0					
ANR	3426735	PrimaryExpression	16		3426720	1					
ANR	3426736	AssignmentExpression	i += 4	5:19:161:164	3426720	2	True	+=			
ANR	3426737	Identifier	i		3426720	0					
ANR	3426738	PrimaryExpression	4		3426720	1					
ANR	3426739	CompoundStatement		7:8:49:75	3426720	3					
ANR	3426740	IdentifierDeclStatement	int nnz = nnzc [ scan8 [ i ] ] ;	7:8:177:203	3426720	0	True				
ANR	3426741	IdentifierDecl	nnz = nnzc [ scan8 [ i ] ]		3426720	0					
ANR	3426742	IdentifierDeclType	int		3426720	0					
ANR	3426743	Identifier	nnz		3426720	1					
ANR	3426744	AssignmentExpression	nnz = nnzc [ scan8 [ i ] ]		3426720	2		=			
ANR	3426745	Identifier	nnz		3426720	0					
ANR	3426746	ArrayIndexing	nnzc [ scan8 [ i ] ]		3426720	1					
ANR	3426747	Identifier	nnzc		3426720	0					
ANR	3426748	ArrayIndexing	scan8 [ i ]		3426720	1					
ANR	3426749	Identifier	scan8		3426720	0					
ANR	3426750	Identifier	i		3426720	1					
ANR	3426751	IfStatement	if ( nnz )		3426720	1					
ANR	3426752	Condition	nnz	9:11:217:219	3426720	0	True				
ANR	3426753	Identifier	nnz		3426720	0					
ANR	3426754	CompoundStatement		9:15:93:93	3426720	1					
ANR	3426755	IfStatement	if ( nnz == 1 && block [ i * 16 ] )		3426720	0					
ANR	3426756	Condition	nnz == 1 && block [ i * 16 ]	11:15:239:259	3426720	0	True				
ANR	3426757	AndExpression	nnz == 1 && block [ i * 16 ]		3426720	0		&&			
ANR	3426758	EqualityExpression	nnz == 1		3426720	0		==			
ANR	3426759	Identifier	nnz		3426720	0					
ANR	3426760	PrimaryExpression	1		3426720	1					
ANR	3426761	ArrayIndexing	block [ i * 16 ]		3426720	1					
ANR	3426762	Identifier	block		3426720	0					
ANR	3426763	MultiplicativeExpression	i * 16		3426720	1		*			
ANR	3426764	Identifier	i		3426720	0					
ANR	3426765	PrimaryExpression	16		3426720	1					
ANR	3426766	ExpressionStatement	"ff_h264_idct8_dc_add_mmx2 ( dst + block_offset [ i ] , block + i * 16 , stride )"	11:38:262:332	3426720	1	True				
ANR	3426767	CallExpression	"ff_h264_idct8_dc_add_mmx2 ( dst + block_offset [ i ] , block + i * 16 , stride )"		3426720	0					
ANR	3426768	Callee	ff_h264_idct8_dc_add_mmx2		3426720	0					
ANR	3426769	Identifier	ff_h264_idct8_dc_add_mmx2		3426720	0					
ANR	3426770	ArgumentList	dst + block_offset [ i ]		3426720	1					
ANR	3426771	Argument	dst + block_offset [ i ]		3426720	0					
ANR	3426772	AdditiveExpression	dst + block_offset [ i ]		3426720	0		+			
ANR	3426773	Identifier	dst		3426720	0					
ANR	3426774	ArrayIndexing	block_offset [ i ]		3426720	1					
ANR	3426775	Identifier	block_offset		3426720	0					
ANR	3426776	Identifier	i		3426720	1					
ANR	3426777	Argument	block + i * 16		3426720	1					
ANR	3426778	AdditiveExpression	block + i * 16		3426720	0		+			
ANR	3426779	Identifier	block		3426720	0					
ANR	3426780	MultiplicativeExpression	i * 16		3426720	1		*			
ANR	3426781	Identifier	i		3426720	0					
ANR	3426782	PrimaryExpression	16		3426720	1					
ANR	3426783	Argument	stride		3426720	2					
ANR	3426784	Identifier	stride		3426720	0					
ANR	3426785	ElseStatement	else		3426720	0					
ANR	3426786	ExpressionStatement	"ff_h264_idct8_add_sse2 ( dst + block_offset [ i ] , block + i * 16 , stride )"	13:38:373:443	3426720	0	True				
ANR	3426787	CallExpression	"ff_h264_idct8_add_sse2 ( dst + block_offset [ i ] , block + i * 16 , stride )"		3426720	0					
ANR	3426788	Callee	ff_h264_idct8_add_sse2		3426720	0					
ANR	3426789	Identifier	ff_h264_idct8_add_sse2		3426720	0					
ANR	3426790	ArgumentList	dst + block_offset [ i ]		3426720	1					
ANR	3426791	Argument	dst + block_offset [ i ]		3426720	0					
ANR	3426792	AdditiveExpression	dst + block_offset [ i ]		3426720	0		+			
ANR	3426793	Identifier	dst		3426720	0					
ANR	3426794	ArrayIndexing	block_offset [ i ]		3426720	1					
ANR	3426795	Identifier	block_offset		3426720	0					
ANR	3426796	Identifier	i		3426720	1					
ANR	3426797	Argument	block + i * 16		3426720	1					
ANR	3426798	AdditiveExpression	block + i * 16		3426720	0		+			
ANR	3426799	Identifier	block		3426720	0					
ANR	3426800	MultiplicativeExpression	i * 16		3426720	1		*			
ANR	3426801	Identifier	i		3426720	0					
ANR	3426802	PrimaryExpression	16		3426720	1					
ANR	3426803	Argument	stride		3426720	2					
ANR	3426804	Identifier	stride		3426720	0					
ANR	3426805	ReturnType	static void		3426720	1					
ANR	3426806	Identifier	ff_h264_idct8_add4_sse2		3426720	2					
ANR	3426807	ParameterList	"uint8_t * dst , const int * block_offset , DCTELEM * block , int stride , const uint8_t nnzc [ 6 * 8 ]"		3426720	3					
ANR	3426808	Parameter	uint8_t * dst	1:36:36:47	3426720	0	True				
ANR	3426809	ParameterType	uint8_t *		3426720	0					
ANR	3426810	Identifier	dst		3426720	1					
ANR	3426811	Parameter	const int * block_offset	1:50:50:72	3426720	1	True				
ANR	3426812	ParameterType	const int *		3426720	0					
ANR	3426813	Identifier	block_offset		3426720	1					
ANR	3426814	Parameter	DCTELEM * block	1:75:75:88	3426720	2	True				
ANR	3426815	ParameterType	DCTELEM *		3426720	0					
ANR	3426816	Identifier	block		3426720	1					
ANR	3426817	Parameter	int stride	1:91:91:100	3426720	3	True				
ANR	3426818	ParameterType	int		3426720	0					
ANR	3426819	Identifier	stride		3426720	1					
ANR	3426820	Parameter	const uint8_t nnzc [ 6 * 8 ]	1:103:103:125	3426720	4	True				
ANR	3426821	ParameterType	const uint8_t [ 6 * 8 ]		3426720	0					
ANR	3426822	Identifier	nnzc		3426720	1					
ANR	3426823	CFGEntryNode	ENTRY		3426720		True				
ANR	3426824	CFGExitNode	EXIT		3426720		True				
ANR	3426825	Symbol	* * i		3426720						
ANR	3426826	Symbol	dst		3426720						
ANR	3426827	Symbol	* scan8		3426720						
ANR	3426828	Symbol	i		3426720						
ANR	3426829	Symbol	stride		3426720						
ANR	3426830	Symbol	* * scan8		3426720						
ANR	3426831	Symbol	* block		3426720						
ANR	3426832	Symbol	* block_offset		3426720						
ANR	3426833	Symbol	* i		3426720						
ANR	3426834	Symbol	block_offset		3426720						
ANR	3426835	Symbol	scan8		3426720						
ANR	3426836	Symbol	block		3426720						
ANR	3426837	Symbol	nnzc		3426720						
ANR	3426838	Symbol	nnz		3426720						
ANR	3426839	Symbol	* nnzc		3426720						
