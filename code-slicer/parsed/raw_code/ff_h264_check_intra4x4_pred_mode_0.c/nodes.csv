command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3324468	File	/home/p4ultr4n/workplace/ReVeal/raw_code/ff_h264_check_intra4x4_pred_mode_0.c								
ANR	3324469	Function	ff_h264_check_intra4x4_pred_mode	1:0:0:1424							
ANR	3324470	FunctionDef	ff_h264_check_intra4x4_pred_mode (H264Context * h)		3324469	0					
ANR	3324471	CompoundStatement		1:52:52:1424	3324469	0					
ANR	3324472	Statement	MpegEncContext	3:4:59:72	3324469	0	True				
ANR	3324473	Statement	*	3:19:74:74	3324469	1	True				
ANR	3324474	Statement	const	3:21:76:80	3324469	2	True				
ANR	3324475	ExpressionStatement	s = & h -> s	3:27:82:91	3324469	3	True				
ANR	3324476	AssignmentExpression	s = & h -> s		3324469	0		=			
ANR	3324477	Identifier	s		3324469	0					
ANR	3324478	UnaryOperationExpression	& h -> s		3324469	1					
ANR	3324479	UnaryOperator	&		3324469	0					
ANR	3324480	PtrMemberAccess	h -> s		3324469	1					
ANR	3324481	Identifier	h		3324469	0					
ANR	3324482	Identifier	s		3324469	1					
ANR	3324483	Statement	static	5:4:98:103	3324469	4	True				
ANR	3324484	IdentifierDeclStatement	"const int8_t top [ 12 ] = { - 1 , 0 , LEFT_DC_PRED , - 1 , - 1 , - 1 , - 1 , - 1 , 0 } ;"	5:11:105:166	3324469	5	True				
ANR	3324485	IdentifierDecl	"top [ 12 ] = { - 1 , 0 , LEFT_DC_PRED , - 1 , - 1 , - 1 , - 1 , - 1 , 0 }"		3324469	0					
ANR	3324486	IdentifierDeclType	const int8_t [ 12 ]		3324469	0					
ANR	3324487	Identifier	top		3324469	1					
ANR	3324488	PrimaryExpression	12		3324469	2					
ANR	3324489	AssignmentExpression	"top [ 12 ] = { - 1 , 0 , LEFT_DC_PRED , - 1 , - 1 , - 1 , - 1 , - 1 , 0 }"		3324469	3		=			
ANR	3324490	Identifier	top		3324469	0					
ANR	3324491	InitializerList	- 1		3324469	1					
ANR	3324492	UnaryOperationExpression	- 1		3324469	0					
ANR	3324493	UnaryOperator	-		3324469	0					
ANR	3324494	PrimaryExpression	1		3324469	1					
ANR	3324495	PrimaryExpression	0		3324469	1					
ANR	3324496	Identifier	LEFT_DC_PRED		3324469	2					
ANR	3324497	UnaryOperationExpression	- 1		3324469	3					
ANR	3324498	UnaryOperator	-		3324469	0					
ANR	3324499	PrimaryExpression	1		3324469	1					
ANR	3324500	UnaryOperationExpression	- 1		3324469	4					
ANR	3324501	UnaryOperator	-		3324469	0					
ANR	3324502	PrimaryExpression	1		3324469	1					
ANR	3324503	UnaryOperationExpression	- 1		3324469	5					
ANR	3324504	UnaryOperator	-		3324469	0					
ANR	3324505	PrimaryExpression	1		3324469	1					
ANR	3324506	UnaryOperationExpression	- 1		3324469	6					
ANR	3324507	UnaryOperator	-		3324469	0					
ANR	3324508	PrimaryExpression	1		3324469	1					
ANR	3324509	UnaryOperationExpression	- 1		3324469	7					
ANR	3324510	UnaryOperator	-		3324469	0					
ANR	3324511	PrimaryExpression	1		3324469	1					
ANR	3324512	PrimaryExpression	0		3324469	8					
ANR	3324513	Statement	static	7:4:173:178	3324469	6	True				
ANR	3324514	IdentifierDeclStatement	"const int8_t left [ 12 ] = { 0 , - 1 , TOP_DC_PRED , 0 , - 1 , - 1 , - 1 , 0 , - 1 , DC_128_PRED } ;"	7:11:180:253	3324469	7	True				
ANR	3324515	IdentifierDecl	"left [ 12 ] = { 0 , - 1 , TOP_DC_PRED , 0 , - 1 , - 1 , - 1 , 0 , - 1 , DC_128_PRED }"		3324469	0					
ANR	3324516	IdentifierDeclType	const int8_t [ 12 ]		3324469	0					
ANR	3324517	Identifier	left		3324469	1					
ANR	3324518	PrimaryExpression	12		3324469	2					
ANR	3324519	AssignmentExpression	"left [ 12 ] = { 0 , - 1 , TOP_DC_PRED , 0 , - 1 , - 1 , - 1 , 0 , - 1 , DC_128_PRED }"		3324469	3		=			
ANR	3324520	Identifier	left		3324469	0					
ANR	3324521	InitializerList	0		3324469	1					
ANR	3324522	PrimaryExpression	0		3324469	0					
ANR	3324523	UnaryOperationExpression	- 1		3324469	1					
ANR	3324524	UnaryOperator	-		3324469	0					
ANR	3324525	PrimaryExpression	1		3324469	1					
ANR	3324526	Identifier	TOP_DC_PRED		3324469	2					
ANR	3324527	PrimaryExpression	0		3324469	3					
ANR	3324528	UnaryOperationExpression	- 1		3324469	4					
ANR	3324529	UnaryOperator	-		3324469	0					
ANR	3324530	PrimaryExpression	1		3324469	1					
ANR	3324531	UnaryOperationExpression	- 1		3324469	5					
ANR	3324532	UnaryOperator	-		3324469	0					
ANR	3324533	PrimaryExpression	1		3324469	1					
ANR	3324534	UnaryOperationExpression	- 1		3324469	6					
ANR	3324535	UnaryOperator	-		3324469	0					
ANR	3324536	PrimaryExpression	1		3324469	1					
ANR	3324537	PrimaryExpression	0		3324469	7					
ANR	3324538	UnaryOperationExpression	- 1		3324469	8					
ANR	3324539	UnaryOperator	-		3324469	0					
ANR	3324540	PrimaryExpression	1		3324469	1					
ANR	3324541	Identifier	DC_128_PRED		3324469	9					
ANR	3324542	IdentifierDeclStatement	int i ;	9:4:260:265	3324469	8	True				
ANR	3324543	IdentifierDecl	i		3324469	0					
ANR	3324544	IdentifierDeclType	int		3324469	0					
ANR	3324545	Identifier	i		3324469	1					
ANR	3324546	IfStatement	if ( ! ( h -> top_samples_available & 0x8000 ) )		3324469	9					
ANR	3324547	Condition	! ( h -> top_samples_available & 0x8000 )	13:7:277:310	3324469	0	True				
ANR	3324548	UnaryOperationExpression	! ( h -> top_samples_available & 0x8000 )		3324469	0					
ANR	3324549	UnaryOperator	!		3324469	0					
ANR	3324550	BitAndExpression	h -> top_samples_available & 0x8000		3324469	1		&			
ANR	3324551	PtrMemberAccess	h -> top_samples_available		3324469	0					
ANR	3324552	Identifier	h		3324469	0					
ANR	3324553	Identifier	top_samples_available		3324469	1					
ANR	3324554	PrimaryExpression	0x8000		3324469	1					
ANR	3324555	CompoundStatement		13:42:259:259	3324469	1					
ANR	3324556	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		3324469	0					
ANR	3324557	ForInit	i = 0 ;	15:12:327:330	3324469	0	True				
ANR	3324558	AssignmentExpression	i = 0		3324469	0		=			
ANR	3324559	Identifier	i		3324469	0					
ANR	3324560	PrimaryExpression	0		3324469	1					
ANR	3324561	Condition	i < 4	15:17:332:334	3324469	1	True				
ANR	3324562	RelationalExpression	i < 4		3324469	0		<			
ANR	3324563	Identifier	i		3324469	0					
ANR	3324564	PrimaryExpression	4		3324469	1					
ANR	3324565	PostIncDecOperationExpression	i ++	15:22:337:339	3324469	2	True				
ANR	3324566	Identifier	i		3324469	0					
ANR	3324567	IncDec	++		3324469	1					
ANR	3324568	CompoundStatement		17:12:303:363	3324469	3					
ANR	3324569	IdentifierDeclStatement	int status = top [ h -> intra4x4_pred_mode_cache [ scan8 [ 0 ] + i ] ] ;	17:12:356:416	3324469	0	True				
ANR	3324570	IdentifierDecl	status = top [ h -> intra4x4_pred_mode_cache [ scan8 [ 0 ] + i ] ]		3324469	0					
ANR	3324571	IdentifierDeclType	int		3324469	0					
ANR	3324572	Identifier	status		3324469	1					
ANR	3324573	AssignmentExpression	status = top [ h -> intra4x4_pred_mode_cache [ scan8 [ 0 ] + i ] ]		3324469	2		=			
ANR	3324574	Identifier	status		3324469	0					
ANR	3324575	ArrayIndexing	top [ h -> intra4x4_pred_mode_cache [ scan8 [ 0 ] + i ] ]		3324469	1					
ANR	3324576	Identifier	top		3324469	0					
ANR	3324577	ArrayIndexing	h -> intra4x4_pred_mode_cache [ scan8 [ 0 ] + i ]		3324469	1					
ANR	3324578	PtrMemberAccess	h -> intra4x4_pred_mode_cache		3324469	0					
ANR	3324579	Identifier	h		3324469	0					
ANR	3324580	Identifier	intra4x4_pred_mode_cache		3324469	1					
ANR	3324581	AdditiveExpression	scan8 [ 0 ] + i		3324469	1		+			
ANR	3324582	ArrayIndexing	scan8 [ 0 ]		3324469	0					
ANR	3324583	Identifier	scan8		3324469	0					
ANR	3324584	PrimaryExpression	0		3324469	1					
ANR	3324585	Identifier	i		3324469	1					
ANR	3324586	IfStatement	if ( status < 0 )		3324469	1					
ANR	3324587	Condition	status < 0	19:15:434:441	3324469	0	True				
ANR	3324588	RelationalExpression	status < 0		3324469	0		<			
ANR	3324589	Identifier	status		3324469	0					
ANR	3324590	PrimaryExpression	0		3324469	1					
ANR	3324591	CompoundStatement		19:24:390:390	3324469	1					
ANR	3324592	ExpressionStatement	"av_log ( h -> s . avctx , AV_LOG_ERROR , ""top block unavailable for requested intra4x4 mode %d at %d %d\\n"" , status , s -> mb_x , s -> mb_y )"	21:16:462:587	3324469	0	True				
ANR	3324593	CallExpression	"av_log ( h -> s . avctx , AV_LOG_ERROR , ""top block unavailable for requested intra4x4 mode %d at %d %d\\n"" , status , s -> mb_x , s -> mb_y )"		3324469	0					
ANR	3324594	Callee	av_log		3324469	0					
ANR	3324595	Identifier	av_log		3324469	0					
ANR	3324596	ArgumentList	h -> s . avctx		3324469	1					
ANR	3324597	Argument	h -> s . avctx		3324469	0					
ANR	3324598	MemberAccess	h -> s . avctx		3324469	0					
ANR	3324599	PtrMemberAccess	h -> s		3324469	0					
ANR	3324600	Identifier	h		3324469	0					
ANR	3324601	Identifier	s		3324469	1					
ANR	3324602	Identifier	avctx		3324469	1					
ANR	3324603	Argument	AV_LOG_ERROR		3324469	1					
ANR	3324604	Identifier	AV_LOG_ERROR		3324469	0					
ANR	3324605	Argument	"""top block unavailable for requested intra4x4 mode %d at %d %d\\n"""		3324469	2					
ANR	3324606	PrimaryExpression	"""top block unavailable for requested intra4x4 mode %d at %d %d\\n"""		3324469	0					
ANR	3324607	Argument	status		3324469	3					
ANR	3324608	Identifier	status		3324469	0					
ANR	3324609	Argument	s -> mb_x		3324469	4					
ANR	3324610	PtrMemberAccess	s -> mb_x		3324469	0					
ANR	3324611	Identifier	s		3324469	0					
ANR	3324612	Identifier	mb_x		3324469	1					
ANR	3324613	Argument	s -> mb_y		3324469	5					
ANR	3324614	PtrMemberAccess	s -> mb_y		3324469	0					
ANR	3324615	Identifier	s		3324469	0					
ANR	3324616	Identifier	mb_y		3324469	1					
ANR	3324617	ReturnStatement	return - 1 ;	23:16:606:615	3324469	1	True				
ANR	3324618	UnaryOperationExpression	- 1		3324469	0					
ANR	3324619	UnaryOperator	-		3324469	0					
ANR	3324620	PrimaryExpression	1		3324469	1					
ANR	3324621	ElseStatement	else		3324469	0					
ANR	3324622	IfStatement	if ( status )		3324469	0					
ANR	3324623	Condition	status	25:22:640:645	3324469	0	True				
ANR	3324624	Identifier	status		3324469	0					
ANR	3324625	CompoundStatement		25:29:594:594	3324469	1					
ANR	3324626	ExpressionStatement	h -> intra4x4_pred_mode_cache [ scan8 [ 0 ] + i ] = status	27:16:666:715	3324469	0	True				
ANR	3324627	AssignmentExpression	h -> intra4x4_pred_mode_cache [ scan8 [ 0 ] + i ] = status		3324469	0		=			
ANR	3324628	ArrayIndexing	h -> intra4x4_pred_mode_cache [ scan8 [ 0 ] + i ]		3324469	0					
ANR	3324629	PtrMemberAccess	h -> intra4x4_pred_mode_cache		3324469	0					
ANR	3324630	Identifier	h		3324469	0					
ANR	3324631	Identifier	intra4x4_pred_mode_cache		3324469	1					
ANR	3324632	AdditiveExpression	scan8 [ 0 ] + i		3324469	1		+			
ANR	3324633	ArrayIndexing	scan8 [ 0 ]		3324469	0					
ANR	3324634	Identifier	scan8		3324469	0					
ANR	3324635	PrimaryExpression	0		3324469	1					
ANR	3324636	Identifier	i		3324469	1					
ANR	3324637	Identifier	status		3324469	1					
ANR	3324638	IfStatement	if ( ( h -> left_samples_available & 0x8888 ) != 0x8888 )		3324469	10					
ANR	3324639	Condition	( h -> left_samples_available & 0x8888 ) != 0x8888	37:7:760:801	3324469	0	True				
ANR	3324640	EqualityExpression	( h -> left_samples_available & 0x8888 ) != 0x8888		3324469	0		!=			
ANR	3324641	BitAndExpression	h -> left_samples_available & 0x8888		3324469	0		&			
ANR	3324642	PtrMemberAccess	h -> left_samples_available		3324469	0					
ANR	3324643	Identifier	h		3324469	0					
ANR	3324644	Identifier	left_samples_available		3324469	1					
ANR	3324645	PrimaryExpression	0x8888		3324469	1					
ANR	3324646	PrimaryExpression	0x8888		3324469	1					
ANR	3324647	CompoundStatement		39:15:768:811	3324469	1					
ANR	3324648	Statement	static	39:8:814:819	3324469	0	True				
ANR	3324649	IdentifierDeclStatement	"const int mask [ 4 ] = { 0x8000 , 0x2000 , 0x80 , 0x20 } ;"	39:15:821:864	3324469	1	True				
ANR	3324650	IdentifierDecl	"mask [ 4 ] = { 0x8000 , 0x2000 , 0x80 , 0x20 }"		3324469	0					
ANR	3324651	IdentifierDeclType	const int [ 4 ]		3324469	0					
ANR	3324652	Identifier	mask		3324469	1					
ANR	3324653	PrimaryExpression	4		3324469	2					
ANR	3324654	AssignmentExpression	"mask [ 4 ] = { 0x8000 , 0x2000 , 0x80 , 0x20 }"		3324469	3		=			
ANR	3324655	Identifier	mask		3324469	0					
ANR	3324656	InitializerList	0x8000		3324469	1					
ANR	3324657	PrimaryExpression	0x8000		3324469	0					
ANR	3324658	PrimaryExpression	0x2000		3324469	1					
ANR	3324659	PrimaryExpression	0x80		3324469	2					
ANR	3324660	PrimaryExpression	0x20		3324469	3					
ANR	3324661	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		3324469	2					
ANR	3324662	ForInit	i = 0 ;	41:12:879:882	3324469	0	True				
ANR	3324663	AssignmentExpression	i = 0		3324469	0		=			
ANR	3324664	Identifier	i		3324469	0					
ANR	3324665	PrimaryExpression	0		3324469	1					
ANR	3324666	Condition	i < 4	41:17:884:886	3324469	1	True				
ANR	3324667	RelationalExpression	i < 4		3324469	0		<			
ANR	3324668	Identifier	i		3324469	0					
ANR	3324669	PrimaryExpression	4		3324469	1					
ANR	3324670	PostIncDecOperationExpression	i ++	41:22:889:891	3324469	2	True				
ANR	3324671	Identifier	i		3324469	0					
ANR	3324672	IncDec	++		3324469	1					
ANR	3324673	CompoundStatement		41:26:840:840	3324469	3					
ANR	3324674	IfStatement	if ( ! ( h -> left_samples_available & mask [ i ] ) )		3324469	0					
ANR	3324675	Condition	! ( h -> left_samples_available & mask [ i ] )	43:15:911:946	3324469	0	True				
ANR	3324676	UnaryOperationExpression	! ( h -> left_samples_available & mask [ i ] )		3324469	0					
ANR	3324677	UnaryOperator	!		3324469	0					
ANR	3324678	BitAndExpression	h -> left_samples_available & mask [ i ]		3324469	1		&			
ANR	3324679	PtrMemberAccess	h -> left_samples_available		3324469	0					
ANR	3324680	Identifier	h		3324469	0					
ANR	3324681	Identifier	left_samples_available		3324469	1					
ANR	3324682	ArrayIndexing	mask [ i ]		3324469	1					
ANR	3324683	Identifier	mask		3324469	0					
ANR	3324684	Identifier	i		3324469	1					
ANR	3324685	CompoundStatement		45:16:914:977	3324469	1					
ANR	3324686	IdentifierDeclStatement	int status = left [ h -> intra4x4_pred_mode_cache [ scan8 [ 0 ] + 8 * i ] ] ;	45:16:967:1030	3324469	0	True				
ANR	3324687	IdentifierDecl	status = left [ h -> intra4x4_pred_mode_cache [ scan8 [ 0 ] + 8 * i ] ]		3324469	0					
ANR	3324688	IdentifierDeclType	int		3324469	0					
ANR	3324689	Identifier	status		3324469	1					
ANR	3324690	AssignmentExpression	status = left [ h -> intra4x4_pred_mode_cache [ scan8 [ 0 ] + 8 * i ] ]		3324469	2		=			
ANR	3324691	Identifier	status		3324469	0					
ANR	3324692	ArrayIndexing	left [ h -> intra4x4_pred_mode_cache [ scan8 [ 0 ] + 8 * i ] ]		3324469	1					
ANR	3324693	Identifier	left		3324469	0					
ANR	3324694	ArrayIndexing	h -> intra4x4_pred_mode_cache [ scan8 [ 0 ] + 8 * i ]		3324469	1					
ANR	3324695	PtrMemberAccess	h -> intra4x4_pred_mode_cache		3324469	0					
ANR	3324696	Identifier	h		3324469	0					
ANR	3324697	Identifier	intra4x4_pred_mode_cache		3324469	1					
ANR	3324698	AdditiveExpression	scan8 [ 0 ] + 8 * i		3324469	1		+			
ANR	3324699	ArrayIndexing	scan8 [ 0 ]		3324469	0					
ANR	3324700	Identifier	scan8		3324469	0					
ANR	3324701	PrimaryExpression	0		3324469	1					
ANR	3324702	MultiplicativeExpression	8 * i		3324469	1		*			
ANR	3324703	PrimaryExpression	8		3324469	0					
ANR	3324704	Identifier	i		3324469	1					
ANR	3324705	IfStatement	if ( status < 0 )		3324469	1					
ANR	3324706	Condition	status < 0	47:19:1052:1059	3324469	0	True				
ANR	3324707	RelationalExpression	status < 0		3324469	0		<			
ANR	3324708	Identifier	status		3324469	0					
ANR	3324709	PrimaryExpression	0		3324469	1					
ANR	3324710	CompoundStatement		47:28:1008:1008	3324469	1					
ANR	3324711	ExpressionStatement	"av_log ( h -> s . avctx , AV_LOG_ERROR , ""left block unavailable for requested intra4x4 mode %d at %d %d\\n"" , status , s -> mb_x , s -> mb_y )"	49:20:1084:1210	3324469	0	True				
ANR	3324712	CallExpression	"av_log ( h -> s . avctx , AV_LOG_ERROR , ""left block unavailable for requested intra4x4 mode %d at %d %d\\n"" , status , s -> mb_x , s -> mb_y )"		3324469	0					
ANR	3324713	Callee	av_log		3324469	0					
ANR	3324714	Identifier	av_log		3324469	0					
ANR	3324715	ArgumentList	h -> s . avctx		3324469	1					
ANR	3324716	Argument	h -> s . avctx		3324469	0					
ANR	3324717	MemberAccess	h -> s . avctx		3324469	0					
ANR	3324718	PtrMemberAccess	h -> s		3324469	0					
ANR	3324719	Identifier	h		3324469	0					
ANR	3324720	Identifier	s		3324469	1					
ANR	3324721	Identifier	avctx		3324469	1					
ANR	3324722	Argument	AV_LOG_ERROR		3324469	1					
ANR	3324723	Identifier	AV_LOG_ERROR		3324469	0					
ANR	3324724	Argument	"""left block unavailable for requested intra4x4 mode %d at %d %d\\n"""		3324469	2					
ANR	3324725	PrimaryExpression	"""left block unavailable for requested intra4x4 mode %d at %d %d\\n"""		3324469	0					
ANR	3324726	Argument	status		3324469	3					
ANR	3324727	Identifier	status		3324469	0					
ANR	3324728	Argument	s -> mb_x		3324469	4					
ANR	3324729	PtrMemberAccess	s -> mb_x		3324469	0					
ANR	3324730	Identifier	s		3324469	0					
ANR	3324731	Identifier	mb_x		3324469	1					
ANR	3324732	Argument	s -> mb_y		3324469	5					
ANR	3324733	PtrMemberAccess	s -> mb_y		3324469	0					
ANR	3324734	Identifier	s		3324469	0					
ANR	3324735	Identifier	mb_y		3324469	1					
ANR	3324736	ReturnStatement	return - 1 ;	51:20:1233:1242	3324469	1	True				
ANR	3324737	UnaryOperationExpression	- 1		3324469	0					
ANR	3324738	UnaryOperator	-		3324469	0					
ANR	3324739	PrimaryExpression	1		3324469	1					
ANR	3324740	ElseStatement	else		3324469	0					
ANR	3324741	IfStatement	if ( status )		3324469	0					
ANR	3324742	Condition	status	53:26:1271:1276	3324469	0	True				
ANR	3324743	Identifier	status		3324469	0					
ANR	3324744	CompoundStatement		53:33:1225:1225	3324469	1					
ANR	3324745	ExpressionStatement	h -> intra4x4_pred_mode_cache [ scan8 [ 0 ] + 8 * i ] = status	55:20:1301:1352	3324469	0	True				
ANR	3324746	AssignmentExpression	h -> intra4x4_pred_mode_cache [ scan8 [ 0 ] + 8 * i ] = status		3324469	0		=			
ANR	3324747	ArrayIndexing	h -> intra4x4_pred_mode_cache [ scan8 [ 0 ] + 8 * i ]		3324469	0					
ANR	3324748	PtrMemberAccess	h -> intra4x4_pred_mode_cache		3324469	0					
ANR	3324749	Identifier	h		3324469	0					
ANR	3324750	Identifier	intra4x4_pred_mode_cache		3324469	1					
ANR	3324751	AdditiveExpression	scan8 [ 0 ] + 8 * i		3324469	1		+			
ANR	3324752	ArrayIndexing	scan8 [ 0 ]		3324469	0					
ANR	3324753	Identifier	scan8		3324469	0					
ANR	3324754	PrimaryExpression	0		3324469	1					
ANR	3324755	MultiplicativeExpression	8 * i		3324469	1		*			
ANR	3324756	PrimaryExpression	8		3324469	0					
ANR	3324757	Identifier	i		3324469	1					
ANR	3324758	Identifier	status		3324469	1					
ANR	3324759	ReturnStatement	return 0 ;	67:4:1413:1421	3324469	11	True				
ANR	3324760	PrimaryExpression	0		3324469	0					
ANR	3324761	ReturnType	int		3324469	1					
ANR	3324762	Identifier	ff_h264_check_intra4x4_pred_mode		3324469	2					
ANR	3324763	ParameterList	H264Context * h		3324469	3					
ANR	3324764	Parameter	H264Context * h	1:37:37:50	3324469	0	True				
ANR	3324765	ParameterType	H264Context *		3324469	0					
ANR	3324766	Identifier	h		3324469	1					
ANR	3324767	CFGEntryNode	ENTRY		3324469		True				
ANR	3324768	CFGExitNode	EXIT		3324469		True				
ANR	3324769	Symbol	* * h -> intra4x4_pred_mode_cache		3324469						
ANR	3324770	Symbol	* mask		3324469						
ANR	3324771	Symbol	* scan8		3324469						
ANR	3324772	Symbol	h -> s . avctx		3324469						
ANR	3324773	Symbol	* * * scan8		3324469						
ANR	3324774	Symbol	h -> top_samples_available		3324469						
ANR	3324775	Symbol	top		3324469						
ANR	3324776	Symbol	TOP_DC_PRED		3324469						
ANR	3324777	Symbol	h -> left_samples_available		3324469						
ANR	3324778	Symbol	scan8		3324469						
ANR	3324779	Symbol	* left		3324469						
ANR	3324780	Symbol	mask		3324469						
ANR	3324781	Symbol	* * i		3324469						
ANR	3324782	Symbol	* * h		3324469						
ANR	3324783	Symbol	h -> intra4x4_pred_mode_cache		3324469						
ANR	3324784	Symbol	AV_LOG_ERROR		3324469						
ANR	3324785	Symbol	h		3324469						
ANR	3324786	Symbol	i		3324469						
ANR	3324787	Symbol	* h -> intra4x4_pred_mode_cache		3324469						
ANR	3324788	Symbol	* * scan8		3324469						
ANR	3324789	Symbol	h -> s		3324469						
ANR	3324790	Symbol	s -> mb_x		3324469						
ANR	3324791	Symbol	s -> mb_y		3324469						
ANR	3324792	Symbol	& h -> s		3324469						
ANR	3324793	Symbol	* h		3324469						
ANR	3324794	Symbol	s		3324469						
ANR	3324795	Symbol	* i		3324469						
ANR	3324796	Symbol	left		3324469						
ANR	3324797	Symbol	DC_128_PRED		3324469						
ANR	3324798	Symbol	* * * h		3324469						
ANR	3324799	Symbol	* s		3324469						
ANR	3324800	Symbol	LEFT_DC_PRED		3324469						
ANR	3324801	Symbol	status		3324469						
ANR	3324802	Symbol	* top		3324469						
