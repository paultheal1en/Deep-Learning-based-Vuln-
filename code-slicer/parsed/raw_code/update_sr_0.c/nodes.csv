command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8654608	File	/home/p4ultr4n/workplace/ReVeal/raw_code/update_sr_0.c								
ANR	8654609	Function	update_sr	1:0:0:1293							
ANR	8654610	FunctionDef	"update_sr (AC97LinkState * s , AC97BusMasterRegs * r , uint32_t new_sr)"		8654609	0					
ANR	8654611	CompoundStatement		3:0:81:1293	8654609	0					
ANR	8654612	IdentifierDeclStatement	int event = 0 ;	5:4:88:101	8654609	0	True				
ANR	8654613	IdentifierDecl	event = 0		8654609	0					
ANR	8654614	IdentifierDeclType	int		8654609	0					
ANR	8654615	Identifier	event		8654609	1					
ANR	8654616	AssignmentExpression	event = 0		8654609	2		=			
ANR	8654617	Identifier	event		8654609	0					
ANR	8654618	PrimaryExpression	0		8654609	1					
ANR	8654619	IdentifierDeclStatement	int level = 0 ;	7:4:108:121	8654609	1	True				
ANR	8654620	IdentifierDecl	level = 0		8654609	0					
ANR	8654621	IdentifierDeclType	int		8654609	0					
ANR	8654622	Identifier	level		8654609	1					
ANR	8654623	AssignmentExpression	level = 0		8654609	2		=			
ANR	8654624	Identifier	level		8654609	0					
ANR	8654625	PrimaryExpression	0		8654609	1					
ANR	8654626	IdentifierDeclStatement	uint32_t new_mask = new_sr & SR_INT_MASK ;	9:4:128:168	8654609	2	True				
ANR	8654627	IdentifierDecl	new_mask = new_sr & SR_INT_MASK		8654609	0					
ANR	8654628	IdentifierDeclType	uint32_t		8654609	0					
ANR	8654629	Identifier	new_mask		8654609	1					
ANR	8654630	AssignmentExpression	new_mask = new_sr & SR_INT_MASK		8654609	2		=			
ANR	8654631	Identifier	new_mask		8654609	0					
ANR	8654632	BitAndExpression	new_sr & SR_INT_MASK		8654609	1		&			
ANR	8654633	Identifier	new_sr		8654609	0					
ANR	8654634	Identifier	SR_INT_MASK		8654609	1					
ANR	8654635	IdentifierDeclStatement	uint32_t old_mask = r -> sr & SR_INT_MASK ;	11:4:175:214	8654609	3	True				
ANR	8654636	IdentifierDecl	old_mask = r -> sr & SR_INT_MASK		8654609	0					
ANR	8654637	IdentifierDeclType	uint32_t		8654609	0					
ANR	8654638	Identifier	old_mask		8654609	1					
ANR	8654639	AssignmentExpression	old_mask = r -> sr & SR_INT_MASK		8654609	2		=			
ANR	8654640	Identifier	old_mask		8654609	0					
ANR	8654641	BitAndExpression	r -> sr & SR_INT_MASK		8654609	1		&			
ANR	8654642	PtrMemberAccess	r -> sr		8654609	0					
ANR	8654643	Identifier	r		8654609	0					
ANR	8654644	Identifier	sr		8654609	1					
ANR	8654645	Identifier	SR_INT_MASK		8654609	1					
ANR	8654646	IdentifierDeclStatement	"uint32_t masks [ ] = { GS_PIINT , GS_POINT , GS_MINT } ;"	13:4:221:269	8654609	4	True				
ANR	8654647	IdentifierDecl	"masks [ ] = { GS_PIINT , GS_POINT , GS_MINT }"		8654609	0					
ANR	8654648	IdentifierDeclType	uint32_t [ ]		8654609	0					
ANR	8654649	Identifier	masks		8654609	1					
ANR	8654650	AssignmentExpression	"masks [ ] = { GS_PIINT , GS_POINT , GS_MINT }"		8654609	2		=			
ANR	8654651	Identifier	masks		8654609	0					
ANR	8654652	InitializerList	GS_PIINT		8654609	1					
ANR	8654653	Identifier	GS_PIINT		8654609	0					
ANR	8654654	Identifier	GS_POINT		8654609	1					
ANR	8654655	Identifier	GS_MINT		8654609	2					
ANR	8654656	IfStatement	if ( new_mask ^ old_mask )		8654609	5					
ANR	8654657	Condition	new_mask ^ old_mask	17:8:282:300	8654609	0	True				
ANR	8654658	ExclusiveOrExpression	new_mask ^ old_mask		8654609	0		^			
ANR	8654659	Identifier	new_mask		8654609	0					
ANR	8654660	Identifier	old_mask		8654609	1					
ANR	8654661	CompoundStatement		15:29:221:221	8654609	1					
ANR	8654662	IfStatement	if ( ! new_mask )		8654609	0					
ANR	8654663	Condition	! new_mask	21:12:399:407	8654609	0	True				
ANR	8654664	UnaryOperationExpression	! new_mask		8654609	0					
ANR	8654665	UnaryOperator	!		8654609	0					
ANR	8654666	Identifier	new_mask		8654609	1					
ANR	8654667	CompoundStatement		19:23:328:328	8654609	1					
ANR	8654668	ExpressionStatement	event = 1	23:12:425:434	8654609	0	True				
ANR	8654669	AssignmentExpression	event = 1		8654609	0		=			
ANR	8654670	Identifier	event		8654609	0					
ANR	8654671	PrimaryExpression	1		8654609	1					
ANR	8654672	ExpressionStatement	level = 0	25:12:449:458	8654609	1	True				
ANR	8654673	AssignmentExpression	level = 0		8654609	0		=			
ANR	8654674	Identifier	level		8654609	0					
ANR	8654675	PrimaryExpression	0		8654609	1					
ANR	8654676	ElseStatement	else		8654609	0					
ANR	8654677	CompoundStatement		27:13:403:403	8654609	0					
ANR	8654678	IfStatement	if ( ( new_mask & SR_LVBCI ) && ( r -> cr & CR_LVBIE ) )		8654609	0					
ANR	8654679	Condition	( new_mask & SR_LVBCI ) && ( r -> cr & CR_LVBIE )	31:16:504:546	8654609	0	True				
ANR	8654680	AndExpression	( new_mask & SR_LVBCI ) && ( r -> cr & CR_LVBIE )		8654609	0		&&			
ANR	8654681	BitAndExpression	new_mask & SR_LVBCI		8654609	0		&			
ANR	8654682	Identifier	new_mask		8654609	0					
ANR	8654683	Identifier	SR_LVBCI		8654609	1					
ANR	8654684	BitAndExpression	r -> cr & CR_LVBIE		8654609	1		&			
ANR	8654685	PtrMemberAccess	r -> cr		8654609	0					
ANR	8654686	Identifier	r		8654609	0					
ANR	8654687	Identifier	cr		8654609	1					
ANR	8654688	Identifier	CR_LVBIE		8654609	1					
ANR	8654689	CompoundStatement		29:61:467:467	8654609	1					
ANR	8654690	ExpressionStatement	event = 1	33:16:568:577	8654609	0	True				
ANR	8654691	AssignmentExpression	event = 1		8654609	0		=			
ANR	8654692	Identifier	event		8654609	0					
ANR	8654693	PrimaryExpression	1		8654609	1					
ANR	8654694	ExpressionStatement	level = 1	35:16:596:605	8654609	1	True				
ANR	8654695	AssignmentExpression	level = 1		8654609	0		=			
ANR	8654696	Identifier	level		8654609	0					
ANR	8654697	PrimaryExpression	1		8654609	1					
ANR	8654698	IfStatement	if ( ( new_mask & SR_BCIS ) && ( r -> cr & CR_IOCE ) )		8654609	1					
ANR	8654699	Condition	( new_mask & SR_BCIS ) && ( r -> cr & CR_IOCE )	39:16:639:679	8654609	0	True				
ANR	8654700	AndExpression	( new_mask & SR_BCIS ) && ( r -> cr & CR_IOCE )		8654609	0		&&			
ANR	8654701	BitAndExpression	new_mask & SR_BCIS		8654609	0		&			
ANR	8654702	Identifier	new_mask		8654609	0					
ANR	8654703	Identifier	SR_BCIS		8654609	1					
ANR	8654704	BitAndExpression	r -> cr & CR_IOCE		8654609	1		&			
ANR	8654705	PtrMemberAccess	r -> cr		8654609	0					
ANR	8654706	Identifier	r		8654609	0					
ANR	8654707	Identifier	cr		8654609	1					
ANR	8654708	Identifier	CR_IOCE		8654609	1					
ANR	8654709	CompoundStatement		37:59:600:600	8654609	1					
ANR	8654710	ExpressionStatement	event = 1	41:16:701:710	8654609	0	True				
ANR	8654711	AssignmentExpression	event = 1		8654609	0		=			
ANR	8654712	Identifier	event		8654609	0					
ANR	8654713	PrimaryExpression	1		8654609	1					
ANR	8654714	ExpressionStatement	level = 1	43:16:729:738	8654609	1	True				
ANR	8654715	AssignmentExpression	level = 1		8654609	0		=			
ANR	8654716	Identifier	level		8654609	0					
ANR	8654717	PrimaryExpression	1		8654609	1					
ANR	8654718	ExpressionStatement	r -> sr = new_sr	53:4:780:794	8654609	6	True				
ANR	8654719	AssignmentExpression	r -> sr = new_sr		8654609	0		=			
ANR	8654720	PtrMemberAccess	r -> sr		8654609	0					
ANR	8654721	Identifier	r		8654609	0					
ANR	8654722	Identifier	sr		8654609	1					
ANR	8654723	Identifier	new_sr		8654609	1					
ANR	8654724	ExpressionStatement	"dolog ( ""IOC%d LVB%d sr=%#x event=%d level=%d\\n"" , r -> sr & SR_BCIS , r -> sr & SR_LVBCI , r -> sr , event , level )"	57:4:803:943	8654609	7	True				
ANR	8654725	CallExpression	"dolog ( ""IOC%d LVB%d sr=%#x event=%d level=%d\\n"" , r -> sr & SR_BCIS , r -> sr & SR_LVBCI , r -> sr , event , level )"		8654609	0					
ANR	8654726	Callee	dolog		8654609	0					
ANR	8654727	Identifier	dolog		8654609	0					
ANR	8654728	ArgumentList	"""IOC%d LVB%d sr=%#x event=%d level=%d\\n"""		8654609	1					
ANR	8654729	Argument	"""IOC%d LVB%d sr=%#x event=%d level=%d\\n"""		8654609	0					
ANR	8654730	PrimaryExpression	"""IOC%d LVB%d sr=%#x event=%d level=%d\\n"""		8654609	0					
ANR	8654731	Argument	r -> sr & SR_BCIS		8654609	1					
ANR	8654732	BitAndExpression	r -> sr & SR_BCIS		8654609	0		&			
ANR	8654733	PtrMemberAccess	r -> sr		8654609	0					
ANR	8654734	Identifier	r		8654609	0					
ANR	8654735	Identifier	sr		8654609	1					
ANR	8654736	Identifier	SR_BCIS		8654609	1					
ANR	8654737	Argument	r -> sr & SR_LVBCI		8654609	2					
ANR	8654738	BitAndExpression	r -> sr & SR_LVBCI		8654609	0		&			
ANR	8654739	PtrMemberAccess	r -> sr		8654609	0					
ANR	8654740	Identifier	r		8654609	0					
ANR	8654741	Identifier	sr		8654609	1					
ANR	8654742	Identifier	SR_LVBCI		8654609	1					
ANR	8654743	Argument	r -> sr		8654609	3					
ANR	8654744	PtrMemberAccess	r -> sr		8654609	0					
ANR	8654745	Identifier	r		8654609	0					
ANR	8654746	Identifier	sr		8654609	1					
ANR	8654747	Argument	event		8654609	4					
ANR	8654748	Identifier	event		8654609	0					
ANR	8654749	Argument	level		8654609	5					
ANR	8654750	Identifier	level		8654609	0					
ANR	8654751	IfStatement	if ( ! event )		8654609	8					
ANR	8654752	Condition	! event	67:8:956:961	8654609	0	True				
ANR	8654753	UnaryOperationExpression	! event		8654609	0					
ANR	8654754	UnaryOperator	!		8654609	0					
ANR	8654755	Identifier	event		8654609	1					
ANR	8654756	ReturnStatement	return ;	69:8:973:979	8654609	1	True				
ANR	8654757	IfStatement	if ( level )		8654609	9					
ANR	8654758	Condition	level	73:8:992:996	8654609	0	True				
ANR	8654759	Identifier	level		8654609	0					
ANR	8654760	CompoundStatement		71:15:917:917	8654609	1					
ANR	8654761	ExpressionStatement	s -> glob_sta |= masks [ r - s -> bm_regs ]	75:8:1010:1046	8654609	0	True				
ANR	8654762	AssignmentExpression	s -> glob_sta |= masks [ r - s -> bm_regs ]		8654609	0		|=			
ANR	8654763	PtrMemberAccess	s -> glob_sta		8654609	0					
ANR	8654764	Identifier	s		8654609	0					
ANR	8654765	Identifier	glob_sta		8654609	1					
ANR	8654766	ArrayIndexing	masks [ r - s -> bm_regs ]		8654609	1					
ANR	8654767	Identifier	masks		8654609	0					
ANR	8654768	AdditiveExpression	r - s -> bm_regs		8654609	1		-			
ANR	8654769	Identifier	r		8654609	0					
ANR	8654770	PtrMemberAccess	s -> bm_regs		8654609	1					
ANR	8654771	Identifier	s		8654609	0					
ANR	8654772	Identifier	bm_regs		8654609	1					
ANR	8654773	ExpressionStatement	"dolog ( ""set irq level=1\\n"" )"	77:8:1057:1084	8654609	1	True				
ANR	8654774	CallExpression	"dolog ( ""set irq level=1\\n"" )"		8654609	0					
ANR	8654775	Callee	dolog		8654609	0					
ANR	8654776	Identifier	dolog		8654609	0					
ANR	8654777	ArgumentList	"""set irq level=1\\n"""		8654609	1					
ANR	8654778	Argument	"""set irq level=1\\n"""		8654609	0					
ANR	8654779	PrimaryExpression	"""set irq level=1\\n"""		8654609	0					
ANR	8654780	ExpressionStatement	"qemu_set_irq ( s -> pci_dev -> irq [ 0 ] , 1 )"	79:8:1095:1131	8654609	2	True				
ANR	8654781	CallExpression	"qemu_set_irq ( s -> pci_dev -> irq [ 0 ] , 1 )"		8654609	0					
ANR	8654782	Callee	qemu_set_irq		8654609	0					
ANR	8654783	Identifier	qemu_set_irq		8654609	0					
ANR	8654784	ArgumentList	s -> pci_dev -> irq [ 0 ]		8654609	1					
ANR	8654785	Argument	s -> pci_dev -> irq [ 0 ]		8654609	0					
ANR	8654786	ArrayIndexing	s -> pci_dev -> irq [ 0 ]		8654609	0					
ANR	8654787	PtrMemberAccess	s -> pci_dev -> irq		8654609	0					
ANR	8654788	PtrMemberAccess	s -> pci_dev		8654609	0					
ANR	8654789	Identifier	s		8654609	0					
ANR	8654790	Identifier	pci_dev		8654609	1					
ANR	8654791	Identifier	irq		8654609	1					
ANR	8654792	PrimaryExpression	0		8654609	1					
ANR	8654793	Argument	1		8654609	1					
ANR	8654794	PrimaryExpression	1		8654609	0					
ANR	8654795	ElseStatement	else		8654609	0					
ANR	8654796	CompoundStatement		81:9:1068:1068	8654609	0					
ANR	8654797	ExpressionStatement	s -> glob_sta &= ~masks [ r - s -> bm_regs ]	85:8:1161:1198	8654609	0	True				
ANR	8654798	AssignmentExpression	s -> glob_sta &= ~masks [ r - s -> bm_regs ]		8654609	0		&=			
ANR	8654799	PtrMemberAccess	s -> glob_sta		8654609	0					
ANR	8654800	Identifier	s		8654609	0					
ANR	8654801	Identifier	glob_sta		8654609	1					
ANR	8654802	ArrayIndexing	~masks [ r - s -> bm_regs ]		8654609	1					
ANR	8654803	Identifier	~masks		8654609	0					
ANR	8654804	AdditiveExpression	r - s -> bm_regs		8654609	1		-			
ANR	8654805	Identifier	r		8654609	0					
ANR	8654806	PtrMemberAccess	s -> bm_regs		8654609	1					
ANR	8654807	Identifier	s		8654609	0					
ANR	8654808	Identifier	bm_regs		8654609	1					
ANR	8654809	ExpressionStatement	"dolog ( ""set irq level=0\\n"" )"	87:8:1209:1236	8654609	1	True				
ANR	8654810	CallExpression	"dolog ( ""set irq level=0\\n"" )"		8654609	0					
ANR	8654811	Callee	dolog		8654609	0					
ANR	8654812	Identifier	dolog		8654609	0					
ANR	8654813	ArgumentList	"""set irq level=0\\n"""		8654609	1					
ANR	8654814	Argument	"""set irq level=0\\n"""		8654609	0					
ANR	8654815	PrimaryExpression	"""set irq level=0\\n"""		8654609	0					
ANR	8654816	ExpressionStatement	"qemu_set_irq ( s -> pci_dev -> irq [ 0 ] , 0 )"	89:8:1247:1283	8654609	2	True				
ANR	8654817	CallExpression	"qemu_set_irq ( s -> pci_dev -> irq [ 0 ] , 0 )"		8654609	0					
ANR	8654818	Callee	qemu_set_irq		8654609	0					
ANR	8654819	Identifier	qemu_set_irq		8654609	0					
ANR	8654820	ArgumentList	s -> pci_dev -> irq [ 0 ]		8654609	1					
ANR	8654821	Argument	s -> pci_dev -> irq [ 0 ]		8654609	0					
ANR	8654822	ArrayIndexing	s -> pci_dev -> irq [ 0 ]		8654609	0					
ANR	8654823	PtrMemberAccess	s -> pci_dev -> irq		8654609	0					
ANR	8654824	PtrMemberAccess	s -> pci_dev		8654609	0					
ANR	8654825	Identifier	s		8654609	0					
ANR	8654826	Identifier	pci_dev		8654609	1					
ANR	8654827	Identifier	irq		8654609	1					
ANR	8654828	PrimaryExpression	0		8654609	1					
ANR	8654829	Argument	0		8654609	1					
ANR	8654830	PrimaryExpression	0		8654609	0					
ANR	8654831	ReturnType	static void		8654609	1					
ANR	8654832	Identifier	update_sr		8654609	2					
ANR	8654833	ParameterList	"AC97LinkState * s , AC97BusMasterRegs * r , uint32_t new_sr"		8654609	3					
ANR	8654834	Parameter	AC97LinkState * s	1:23:23:38	8654609	0	True				
ANR	8654835	ParameterType	AC97LinkState *		8654609	0					
ANR	8654836	Identifier	s		8654609	1					
ANR	8654837	Parameter	AC97BusMasterRegs * r	1:41:41:60	8654609	1	True				
ANR	8654838	ParameterType	AC97BusMasterRegs *		8654609	0					
ANR	8654839	Identifier	r		8654609	1					
ANR	8654840	Parameter	uint32_t new_sr	1:63:63:77	8654609	2	True				
ANR	8654841	ParameterType	uint32_t		8654609	0					
ANR	8654842	Identifier	new_sr		8654609	1					
ANR	8654843	CFGEntryNode	ENTRY		8654609		True				
ANR	8654844	CFGExitNode	EXIT		8654609		True				
ANR	8654845	Symbol	SR_LVBCI		8654609						
ANR	8654846	Symbol	GS_MINT		8654609						
ANR	8654847	Symbol	old_mask		8654609						
ANR	8654848	Symbol	CR_IOCE		8654609						
ANR	8654849	Symbol	* ~masks		8654609						
ANR	8654850	Symbol	s -> pci_dev -> irq		8654609						
ANR	8654851	Symbol	* * s		8654609						
ANR	8654852	Symbol	event		8654609						
ANR	8654853	Symbol	GS_POINT		8654609						
ANR	8654854	Symbol	GS_PIINT		8654609						
ANR	8654855	Symbol	SR_INT_MASK		8654609						
ANR	8654856	Symbol	* masks		8654609						
ANR	8654857	Symbol	new_sr		8654609						
ANR	8654858	Symbol	level		8654609						
ANR	8654859	Symbol	CR_LVBIE		8654609						
ANR	8654860	Symbol	* s -> pci_dev		8654609						
ANR	8654861	Symbol	SR_BCIS		8654609						
ANR	8654862	Symbol	r -> cr		8654609						
ANR	8654863	Symbol	s -> bm_regs		8654609						
ANR	8654864	Symbol	s -> pci_dev		8654609						
ANR	8654865	Symbol	masks		8654609						
ANR	8654866	Symbol	s -> glob_sta		8654609						
ANR	8654867	Symbol	* * * s		8654609						
ANR	8654868	Symbol	r		8654609						
ANR	8654869	Symbol	* s -> pci_dev -> irq		8654609						
ANR	8654870	Symbol	s		8654609						
ANR	8654871	Symbol	* * s -> pci_dev		8654609						
ANR	8654872	Symbol	r -> sr		8654609						
ANR	8654873	Symbol	~masks		8654609						
ANR	8654874	Symbol	* r		8654609						
ANR	8654875	Symbol	* s -> bm_regs		8654609						
ANR	8654876	Symbol	* s		8654609						
ANR	8654877	Symbol	new_mask		8654609						
