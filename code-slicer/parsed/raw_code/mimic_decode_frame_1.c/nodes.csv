command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5456565	File	/home/p4ultr4n/workplace/ReVeal/raw_code/mimic_decode_frame_1.c								
ANR	5456566	Function	mimic_decode_frame	1:0:0:3691							
ANR	5456567	FunctionDef	"mimic_decode_frame (AVCodecContext * avctx , void * data , int * got_frame , AVPacket * avpkt)"		5456566	0					
ANR	5456568	CompoundStatement		5:0:130:3691	5456566	0					
ANR	5456569	IdentifierDeclStatement	const uint8_t * buf = avpkt -> data ;	7:4:137:169	5456566	0	True				
ANR	5456570	IdentifierDecl	* buf = avpkt -> data		5456566	0					
ANR	5456571	IdentifierDeclType	const uint8_t *		5456566	0					
ANR	5456572	Identifier	buf		5456566	1					
ANR	5456573	AssignmentExpression	* buf = avpkt -> data		5456566	2		=			
ANR	5456574	Identifier	buf		5456566	0					
ANR	5456575	PtrMemberAccess	avpkt -> data		5456566	1					
ANR	5456576	Identifier	avpkt		5456566	0					
ANR	5456577	Identifier	data		5456566	1					
ANR	5456578	IdentifierDeclStatement	int buf_size = avpkt -> size ;	9:4:176:208	5456566	1	True				
ANR	5456579	IdentifierDecl	buf_size = avpkt -> size		5456566	0					
ANR	5456580	IdentifierDeclType	int		5456566	0					
ANR	5456581	Identifier	buf_size		5456566	1					
ANR	5456582	AssignmentExpression	buf_size = avpkt -> size		5456566	2		=			
ANR	5456583	Identifier	buf_size		5456566	0					
ANR	5456584	PtrMemberAccess	avpkt -> size		5456566	1					
ANR	5456585	Identifier	avpkt		5456566	0					
ANR	5456586	Identifier	size		5456566	1					
ANR	5456587	IdentifierDeclStatement	int swap_buf_size = buf_size - MIMIC_HEADER_SIZE ;	11:4:215:264	5456566	2	True				
ANR	5456588	IdentifierDecl	swap_buf_size = buf_size - MIMIC_HEADER_SIZE		5456566	0					
ANR	5456589	IdentifierDeclType	int		5456566	0					
ANR	5456590	Identifier	swap_buf_size		5456566	1					
ANR	5456591	AssignmentExpression	swap_buf_size = buf_size - MIMIC_HEADER_SIZE		5456566	2		=			
ANR	5456592	Identifier	swap_buf_size		5456566	0					
ANR	5456593	AdditiveExpression	buf_size - MIMIC_HEADER_SIZE		5456566	1		-			
ANR	5456594	Identifier	buf_size		5456566	0					
ANR	5456595	Identifier	MIMIC_HEADER_SIZE		5456566	1					
ANR	5456596	IdentifierDeclStatement	MimicContext * ctx = avctx -> priv_data ;	13:4:271:308	5456566	3	True				
ANR	5456597	IdentifierDecl	* ctx = avctx -> priv_data		5456566	0					
ANR	5456598	IdentifierDeclType	MimicContext *		5456566	0					
ANR	5456599	Identifier	ctx		5456566	1					
ANR	5456600	AssignmentExpression	* ctx = avctx -> priv_data		5456566	2		=			
ANR	5456601	Identifier	ctx		5456566	0					
ANR	5456602	PtrMemberAccess	avctx -> priv_data		5456566	1					
ANR	5456603	Identifier	avctx		5456566	0					
ANR	5456604	Identifier	priv_data		5456566	1					
ANR	5456605	IdentifierDeclStatement	GetByteContext gb ;	15:4:315:332	5456566	4	True				
ANR	5456606	IdentifierDecl	gb		5456566	0					
ANR	5456607	IdentifierDeclType	GetByteContext		5456566	0					
ANR	5456608	Identifier	gb		5456566	1					
ANR	5456609	IdentifierDeclStatement	int is_pframe ;	17:4:339:352	5456566	5	True				
ANR	5456610	IdentifierDecl	is_pframe		5456566	0					
ANR	5456611	IdentifierDeclType	int		5456566	0					
ANR	5456612	Identifier	is_pframe		5456566	1					
ANR	5456613	IdentifierDeclStatement	"int width , height ;"	19:4:359:376	5456566	6	True				
ANR	5456614	IdentifierDecl	width		5456566	0					
ANR	5456615	IdentifierDeclType	int		5456566	0					
ANR	5456616	Identifier	width		5456566	1					
ANR	5456617	IdentifierDecl	height		5456566	1					
ANR	5456618	IdentifierDeclType	int		5456566	0					
ANR	5456619	Identifier	height		5456566	1					
ANR	5456620	IdentifierDeclStatement	"int quality , num_coeffs ;"	21:4:383:406	5456566	7	True				
ANR	5456621	IdentifierDecl	quality		5456566	0					
ANR	5456622	IdentifierDeclType	int		5456566	0					
ANR	5456623	Identifier	quality		5456566	1					
ANR	5456624	IdentifierDecl	num_coeffs		5456566	1					
ANR	5456625	IdentifierDeclType	int		5456566	0					
ANR	5456626	Identifier	num_coeffs		5456566	1					
ANR	5456627	IdentifierDeclStatement	int res ;	23:4:413:420	5456566	8	True				
ANR	5456628	IdentifierDecl	res		5456566	0					
ANR	5456629	IdentifierDeclType	int		5456566	0					
ANR	5456630	Identifier	res		5456566	1					
ANR	5456631	IfStatement	if ( buf_size <= MIMIC_HEADER_SIZE )		5456566	9					
ANR	5456632	Condition	buf_size <= MIMIC_HEADER_SIZE	27:8:433:461	5456566	0	True				
ANR	5456633	RelationalExpression	buf_size <= MIMIC_HEADER_SIZE		5456566	0		<=			
ANR	5456634	Identifier	buf_size		5456566	0					
ANR	5456635	Identifier	MIMIC_HEADER_SIZE		5456566	1					
ANR	5456636	CompoundStatement		23:39:333:333	5456566	1					
ANR	5456637	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""insufficient data\\n"" )"	29:8:475:525	5456566	0	True				
ANR	5456638	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""insufficient data\\n"" )"		5456566	0					
ANR	5456639	Callee	av_log		5456566	0					
ANR	5456640	Identifier	av_log		5456566	0					
ANR	5456641	ArgumentList	avctx		5456566	1					
ANR	5456642	Argument	avctx		5456566	0					
ANR	5456643	Identifier	avctx		5456566	0					
ANR	5456644	Argument	AV_LOG_ERROR		5456566	1					
ANR	5456645	Identifier	AV_LOG_ERROR		5456566	0					
ANR	5456646	Argument	"""insufficient data\\n"""		5456566	2					
ANR	5456647	PrimaryExpression	"""insufficient data\\n"""		5456566	0					
ANR	5456648	ReturnStatement	return AVERROR_INVALIDDATA ;	31:8:536:562	5456566	1	True				
ANR	5456649	Identifier	AVERROR_INVALIDDATA		5456566	0					
ANR	5456650	ExpressionStatement	"bytestream2_init ( & gb , buf , MIMIC_HEADER_SIZE )"	37:4:578:623	5456566	10	True				
ANR	5456651	CallExpression	"bytestream2_init ( & gb , buf , MIMIC_HEADER_SIZE )"		5456566	0					
ANR	5456652	Callee	bytestream2_init		5456566	0					
ANR	5456653	Identifier	bytestream2_init		5456566	0					
ANR	5456654	ArgumentList	& gb		5456566	1					
ANR	5456655	Argument	& gb		5456566	0					
ANR	5456656	UnaryOperationExpression	& gb		5456566	0					
ANR	5456657	UnaryOperator	&		5456566	0					
ANR	5456658	Identifier	gb		5456566	1					
ANR	5456659	Argument	buf		5456566	1					
ANR	5456660	Identifier	buf		5456566	0					
ANR	5456661	Argument	MIMIC_HEADER_SIZE		5456566	2					
ANR	5456662	Identifier	MIMIC_HEADER_SIZE		5456566	0					
ANR	5456663	ExpressionStatement	"bytestream2_skip ( & gb , 2 )"	39:4:630:654	5456566	11	True				
ANR	5456664	CallExpression	"bytestream2_skip ( & gb , 2 )"		5456566	0					
ANR	5456665	Callee	bytestream2_skip		5456566	0					
ANR	5456666	Identifier	bytestream2_skip		5456566	0					
ANR	5456667	ArgumentList	& gb		5456566	1					
ANR	5456668	Argument	& gb		5456566	0					
ANR	5456669	UnaryOperationExpression	& gb		5456566	0					
ANR	5456670	UnaryOperator	&		5456566	0					
ANR	5456671	Identifier	gb		5456566	1					
ANR	5456672	Argument	2		5456566	1					
ANR	5456673	PrimaryExpression	2		5456566	0					
ANR	5456674	ExpressionStatement	quality = bytestream2_get_le16u ( & gb )	41:4:694:733	5456566	12	True				
ANR	5456675	AssignmentExpression	quality = bytestream2_get_le16u ( & gb )		5456566	0		=			
ANR	5456676	Identifier	quality		5456566	0					
ANR	5456677	CallExpression	bytestream2_get_le16u ( & gb )		5456566	1					
ANR	5456678	Callee	bytestream2_get_le16u		5456566	0					
ANR	5456679	Identifier	bytestream2_get_le16u		5456566	0					
ANR	5456680	ArgumentList	& gb		5456566	1					
ANR	5456681	Argument	& gb		5456566	0					
ANR	5456682	UnaryOperationExpression	& gb		5456566	0					
ANR	5456683	UnaryOperator	&		5456566	0					
ANR	5456684	Identifier	gb		5456566	1					
ANR	5456685	ExpressionStatement	width = bytestream2_get_le16u ( & gb )	43:4:740:779	5456566	13	True				
ANR	5456686	AssignmentExpression	width = bytestream2_get_le16u ( & gb )		5456566	0		=			
ANR	5456687	Identifier	width		5456566	0					
ANR	5456688	CallExpression	bytestream2_get_le16u ( & gb )		5456566	1					
ANR	5456689	Callee	bytestream2_get_le16u		5456566	0					
ANR	5456690	Identifier	bytestream2_get_le16u		5456566	0					
ANR	5456691	ArgumentList	& gb		5456566	1					
ANR	5456692	Argument	& gb		5456566	0					
ANR	5456693	UnaryOperationExpression	& gb		5456566	0					
ANR	5456694	UnaryOperator	&		5456566	0					
ANR	5456695	Identifier	gb		5456566	1					
ANR	5456696	ExpressionStatement	height = bytestream2_get_le16u ( & gb )	45:4:786:825	5456566	14	True				
ANR	5456697	AssignmentExpression	height = bytestream2_get_le16u ( & gb )		5456566	0		=			
ANR	5456698	Identifier	height		5456566	0					
ANR	5456699	CallExpression	bytestream2_get_le16u ( & gb )		5456566	1					
ANR	5456700	Callee	bytestream2_get_le16u		5456566	0					
ANR	5456701	Identifier	bytestream2_get_le16u		5456566	0					
ANR	5456702	ArgumentList	& gb		5456566	1					
ANR	5456703	Argument	& gb		5456566	0					
ANR	5456704	UnaryOperationExpression	& gb		5456566	0					
ANR	5456705	UnaryOperator	&		5456566	0					
ANR	5456706	Identifier	gb		5456566	1					
ANR	5456707	ExpressionStatement	"bytestream2_skip ( & gb , 4 )"	47:4:832:856	5456566	15	True				
ANR	5456708	CallExpression	"bytestream2_skip ( & gb , 4 )"		5456566	0					
ANR	5456709	Callee	bytestream2_skip		5456566	0					
ANR	5456710	Identifier	bytestream2_skip		5456566	0					
ANR	5456711	ArgumentList	& gb		5456566	1					
ANR	5456712	Argument	& gb		5456566	0					
ANR	5456713	UnaryOperationExpression	& gb		5456566	0					
ANR	5456714	UnaryOperator	&		5456566	0					
ANR	5456715	Identifier	gb		5456566	1					
ANR	5456716	Argument	4		5456566	1					
ANR	5456717	PrimaryExpression	4		5456566	0					
ANR	5456718	ExpressionStatement	is_pframe = bytestream2_get_le32u ( & gb )	49:4:883:922	5456566	16	True				
ANR	5456719	AssignmentExpression	is_pframe = bytestream2_get_le32u ( & gb )		5456566	0		=			
ANR	5456720	Identifier	is_pframe		5456566	0					
ANR	5456721	CallExpression	bytestream2_get_le32u ( & gb )		5456566	1					
ANR	5456722	Callee	bytestream2_get_le32u		5456566	0					
ANR	5456723	Identifier	bytestream2_get_le32u		5456566	0					
ANR	5456724	ArgumentList	& gb		5456566	1					
ANR	5456725	Argument	& gb		5456566	0					
ANR	5456726	UnaryOperationExpression	& gb		5456566	0					
ANR	5456727	UnaryOperator	&		5456566	0					
ANR	5456728	Identifier	gb		5456566	1					
ANR	5456729	ExpressionStatement	num_coeffs = bytestream2_get_byteu ( & gb )	51:4:929:968	5456566	17	True				
ANR	5456730	AssignmentExpression	num_coeffs = bytestream2_get_byteu ( & gb )		5456566	0		=			
ANR	5456731	Identifier	num_coeffs		5456566	0					
ANR	5456732	CallExpression	bytestream2_get_byteu ( & gb )		5456566	1					
ANR	5456733	Callee	bytestream2_get_byteu		5456566	0					
ANR	5456734	Identifier	bytestream2_get_byteu		5456566	0					
ANR	5456735	ArgumentList	& gb		5456566	1					
ANR	5456736	Argument	& gb		5456566	0					
ANR	5456737	UnaryOperationExpression	& gb		5456566	0					
ANR	5456738	UnaryOperator	&		5456566	0					
ANR	5456739	Identifier	gb		5456566	1					
ANR	5456740	ExpressionStatement	"bytestream2_skip ( & gb , 3 )"	53:4:975:999	5456566	18	True				
ANR	5456741	CallExpression	"bytestream2_skip ( & gb , 3 )"		5456566	0					
ANR	5456742	Callee	bytestream2_skip		5456566	0					
ANR	5456743	Identifier	bytestream2_skip		5456566	0					
ANR	5456744	ArgumentList	& gb		5456566	1					
ANR	5456745	Argument	& gb		5456566	0					
ANR	5456746	UnaryOperationExpression	& gb		5456566	0					
ANR	5456747	UnaryOperator	&		5456566	0					
ANR	5456748	Identifier	gb		5456566	1					
ANR	5456749	Argument	3		5456566	1					
ANR	5456750	PrimaryExpression	3		5456566	0					
ANR	5456751	IfStatement	if ( ! ctx -> avctx )		5456566	19					
ANR	5456752	Condition	! ctx -> avctx	57:8:1032:1042	5456566	0	True				
ANR	5456753	UnaryOperationExpression	! ctx -> avctx		5456566	0					
ANR	5456754	UnaryOperator	!		5456566	0					
ANR	5456755	PtrMemberAccess	ctx -> avctx		5456566	1					
ANR	5456756	Identifier	ctx		5456566	0					
ANR	5456757	Identifier	avctx		5456566	1					
ANR	5456758	CompoundStatement		55:8:925:930	5456566	1					
ANR	5456759	IdentifierDeclStatement	int i ;	59:8:1056:1061	5456566	0	True				
ANR	5456760	IdentifierDecl	i		5456566	0					
ANR	5456761	IdentifierDeclType	int		5456566	0					
ANR	5456762	Identifier	i		5456566	1					
ANR	5456763	IfStatement	if ( ! ( width == 160 && height == 120 ) && ! ( width == 320 && height == 240 ) )		5456566	1					
ANR	5456764	Condition	! ( width == 160 && height == 120 ) && ! ( width == 320 && height == 240 )	63:12:1078:1158	5456566	0	True				
ANR	5456765	AndExpression	! ( width == 160 && height == 120 ) && ! ( width == 320 && height == 240 )		5456566	0		&&			
ANR	5456766	UnaryOperationExpression	! ( width == 160 && height == 120 )		5456566	0					
ANR	5456767	UnaryOperator	!		5456566	0					
ANR	5456768	AndExpression	width == 160 && height == 120		5456566	1		&&			
ANR	5456769	EqualityExpression	width == 160		5456566	0		==			
ANR	5456770	Identifier	width		5456566	0					
ANR	5456771	PrimaryExpression	160		5456566	1					
ANR	5456772	EqualityExpression	height == 120		5456566	1		==			
ANR	5456773	Identifier	height		5456566	0					
ANR	5456774	PrimaryExpression	120		5456566	1					
ANR	5456775	UnaryOperationExpression	! ( width == 320 && height == 240 )		5456566	1					
ANR	5456776	UnaryOperator	!		5456566	0					
ANR	5456777	AndExpression	width == 320 && height == 240		5456566	1		&&			
ANR	5456778	EqualityExpression	width == 320		5456566	0		==			
ANR	5456779	Identifier	width		5456566	0					
ANR	5456780	PrimaryExpression	320		5456566	1					
ANR	5456781	EqualityExpression	height == 240		5456566	1		==			
ANR	5456782	Identifier	height		5456566	0					
ANR	5456783	PrimaryExpression	240		5456566	1					
ANR	5456784	CompoundStatement		61:46:1030:1030	5456566	1					
ANR	5456785	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""invalid width/height!\\n"" )"	67:12:1176:1230	5456566	0	True				
ANR	5456786	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""invalid width/height!\\n"" )"		5456566	0					
ANR	5456787	Callee	av_log		5456566	0					
ANR	5456788	Identifier	av_log		5456566	0					
ANR	5456789	ArgumentList	avctx		5456566	1					
ANR	5456790	Argument	avctx		5456566	0					
ANR	5456791	Identifier	avctx		5456566	0					
ANR	5456792	Argument	AV_LOG_ERROR		5456566	1					
ANR	5456793	Identifier	AV_LOG_ERROR		5456566	0					
ANR	5456794	Argument	"""invalid width/height!\\n"""		5456566	2					
ANR	5456795	PrimaryExpression	"""invalid width/height!\\n"""		5456566	0					
ANR	5456796	ReturnStatement	return AVERROR_INVALIDDATA ;	69:12:1245:1271	5456566	1	True				
ANR	5456797	Identifier	AVERROR_INVALIDDATA		5456566	0					
ANR	5456798	ExpressionStatement	ctx -> avctx = avctx	75:8:1295:1317	5456566	2	True				
ANR	5456799	AssignmentExpression	ctx -> avctx = avctx		5456566	0		=			
ANR	5456800	PtrMemberAccess	ctx -> avctx		5456566	0					
ANR	5456801	Identifier	ctx		5456566	0					
ANR	5456802	Identifier	avctx		5456566	1					
ANR	5456803	Identifier	avctx		5456566	1					
ANR	5456804	ExpressionStatement	avctx -> width = width	77:8:1328:1350	5456566	3	True				
ANR	5456805	AssignmentExpression	avctx -> width = width		5456566	0		=			
ANR	5456806	PtrMemberAccess	avctx -> width		5456566	0					
ANR	5456807	Identifier	avctx		5456566	0					
ANR	5456808	Identifier	width		5456566	1					
ANR	5456809	Identifier	width		5456566	1					
ANR	5456810	ExpressionStatement	avctx -> height = height	79:8:1361:1384	5456566	4	True				
ANR	5456811	AssignmentExpression	avctx -> height = height		5456566	0		=			
ANR	5456812	PtrMemberAccess	avctx -> height		5456566	0					
ANR	5456813	Identifier	avctx		5456566	0					
ANR	5456814	Identifier	height		5456566	1					
ANR	5456815	Identifier	height		5456566	1					
ANR	5456816	ExpressionStatement	avctx -> pix_fmt = AV_PIX_FMT_YUV420P	81:8:1395:1430	5456566	5	True				
ANR	5456817	AssignmentExpression	avctx -> pix_fmt = AV_PIX_FMT_YUV420P		5456566	0		=			
ANR	5456818	PtrMemberAccess	avctx -> pix_fmt		5456566	0					
ANR	5456819	Identifier	avctx		5456566	0					
ANR	5456820	Identifier	pix_fmt		5456566	1					
ANR	5456821	Identifier	AV_PIX_FMT_YUV420P		5456566	1					
ANR	5456822	ForStatement	for ( i = 0 ; i < 3 ; i ++ )		5456566	6					
ANR	5456823	ForInit	i = 0 ;	83:13:1446:1451	5456566	0	True				
ANR	5456824	AssignmentExpression	i = 0		5456566	0		=			
ANR	5456825	Identifier	i		5456566	0					
ANR	5456826	PrimaryExpression	0		5456566	1					
ANR	5456827	Condition	i < 3	83:20:1453:1457	5456566	1	True				
ANR	5456828	RelationalExpression	i < 3		5456566	0		<			
ANR	5456829	Identifier	i		5456566	0					
ANR	5456830	PrimaryExpression	3		5456566	1					
ANR	5456831	PostIncDecOperationExpression	i ++	83:27:1460:1462	5456566	2	True				
ANR	5456832	Identifier	i		5456566	0					
ANR	5456833	IncDec	++		5456566	1					
ANR	5456834	CompoundStatement		79:32:1334:1334	5456566	3					
ANR	5456835	ExpressionStatement	"ctx -> num_vblocks [ i ] = AV_CEIL_RSHIFT ( height , 3 + ! ! i )"	85:12:1480:1535	5456566	0	True				
ANR	5456836	AssignmentExpression	"ctx -> num_vblocks [ i ] = AV_CEIL_RSHIFT ( height , 3 + ! ! i )"		5456566	0		=			
ANR	5456837	ArrayIndexing	ctx -> num_vblocks [ i ]		5456566	0					
ANR	5456838	PtrMemberAccess	ctx -> num_vblocks		5456566	0					
ANR	5456839	Identifier	ctx		5456566	0					
ANR	5456840	Identifier	num_vblocks		5456566	1					
ANR	5456841	Identifier	i		5456566	1					
ANR	5456842	CallExpression	"AV_CEIL_RSHIFT ( height , 3 + ! ! i )"		5456566	1					
ANR	5456843	Callee	AV_CEIL_RSHIFT		5456566	0					
ANR	5456844	Identifier	AV_CEIL_RSHIFT		5456566	0					
ANR	5456845	ArgumentList	height		5456566	1					
ANR	5456846	Argument	height		5456566	0					
ANR	5456847	Identifier	height		5456566	0					
ANR	5456848	Argument	3 + ! ! i		5456566	1					
ANR	5456849	AdditiveExpression	3 + ! ! i		5456566	0		+			
ANR	5456850	PrimaryExpression	3		5456566	0					
ANR	5456851	UnaryOperationExpression	! ! i		5456566	1					
ANR	5456852	UnaryOperator	!		5456566	0					
ANR	5456853	UnaryOperationExpression	! i		5456566	1					
ANR	5456854	UnaryOperator	!		5456566	0					
ANR	5456855	Identifier	i		5456566	1					
ANR	5456856	ExpressionStatement	ctx -> num_hblocks [ i ] = width >> ( 3 + ! ! i )	87:12:1550:1605	5456566	1	True				
ANR	5456857	AssignmentExpression	ctx -> num_hblocks [ i ] = width >> ( 3 + ! ! i )		5456566	0		=			
ANR	5456858	ArrayIndexing	ctx -> num_hblocks [ i ]		5456566	0					
ANR	5456859	PtrMemberAccess	ctx -> num_hblocks		5456566	0					
ANR	5456860	Identifier	ctx		5456566	0					
ANR	5456861	Identifier	num_hblocks		5456566	1					
ANR	5456862	Identifier	i		5456566	1					
ANR	5456863	ShiftExpression	width >> ( 3 + ! ! i )		5456566	1		>>			
ANR	5456864	Identifier	width		5456566	0					
ANR	5456865	AdditiveExpression	3 + ! ! i		5456566	1		+			
ANR	5456866	PrimaryExpression	3		5456566	0					
ANR	5456867	UnaryOperationExpression	! ! i		5456566	1					
ANR	5456868	UnaryOperator	!		5456566	0					
ANR	5456869	UnaryOperationExpression	! i		5456566	1					
ANR	5456870	UnaryOperator	!		5456566	0					
ANR	5456871	Identifier	i		5456566	1					
ANR	5456872	ElseStatement	else		5456566	0					
ANR	5456873	IfStatement	if ( width != ctx -> avctx -> width || height != ctx -> avctx -> height )		5456566	0					
ANR	5456874	Condition	width != ctx -> avctx -> width || height != ctx -> avctx -> height	91:15:1634:1691	5456566	0	True				
ANR	5456875	OrExpression	width != ctx -> avctx -> width || height != ctx -> avctx -> height		5456566	0		||			
ANR	5456876	EqualityExpression	width != ctx -> avctx -> width		5456566	0		!=			
ANR	5456877	Identifier	width		5456566	0					
ANR	5456878	PtrMemberAccess	ctx -> avctx -> width		5456566	1					
ANR	5456879	PtrMemberAccess	ctx -> avctx		5456566	0					
ANR	5456880	Identifier	ctx		5456566	0					
ANR	5456881	Identifier	avctx		5456566	1					
ANR	5456882	Identifier	width		5456566	1					
ANR	5456883	EqualityExpression	height != ctx -> avctx -> height		5456566	1		!=			
ANR	5456884	Identifier	height		5456566	0					
ANR	5456885	PtrMemberAccess	ctx -> avctx -> height		5456566	1					
ANR	5456886	PtrMemberAccess	ctx -> avctx		5456566	0					
ANR	5456887	Identifier	ctx		5456566	0					
ANR	5456888	Identifier	avctx		5456566	1					
ANR	5456889	Identifier	height		5456566	1					
ANR	5456890	CompoundStatement		87:75:1563:1563	5456566	1					
ANR	5456891	ExpressionStatement	"avpriv_request_sample ( avctx , ""Resolution changing"" )"	93:8:1705:1756	5456566	0	True				
ANR	5456892	CallExpression	"avpriv_request_sample ( avctx , ""Resolution changing"" )"		5456566	0					
ANR	5456893	Callee	avpriv_request_sample		5456566	0					
ANR	5456894	Identifier	avpriv_request_sample		5456566	0					
ANR	5456895	ArgumentList	avctx		5456566	1					
ANR	5456896	Argument	avctx		5456566	0					
ANR	5456897	Identifier	avctx		5456566	0					
ANR	5456898	Argument	"""Resolution changing"""		5456566	1					
ANR	5456899	PrimaryExpression	"""Resolution changing"""		5456566	0					
ANR	5456900	ReturnStatement	return AVERROR_PATCHWELCOME ;	95:8:1767:1794	5456566	1	True				
ANR	5456901	Identifier	AVERROR_PATCHWELCOME		5456566	0					
ANR	5456902	IfStatement	if ( is_pframe && ! ctx -> frames [ ctx -> prev_index ] . f -> data [ 0 ] )		5456566	20					
ANR	5456903	Condition	is_pframe && ! ctx -> frames [ ctx -> prev_index ] . f -> data [ 0 ]	101:8:1814:1866	5456566	0	True				
ANR	5456904	AndExpression	is_pframe && ! ctx -> frames [ ctx -> prev_index ] . f -> data [ 0 ]		5456566	0		&&			
ANR	5456905	Identifier	is_pframe		5456566	0					
ANR	5456906	UnaryOperationExpression	! ctx -> frames [ ctx -> prev_index ] . f -> data [ 0 ]		5456566	1					
ANR	5456907	UnaryOperator	!		5456566	0					
ANR	5456908	ArrayIndexing	ctx -> frames [ ctx -> prev_index ] . f -> data [ 0 ]		5456566	1					
ANR	5456909	PtrMemberAccess	ctx -> frames [ ctx -> prev_index ] . f -> data		5456566	0					
ANR	5456910	MemberAccess	ctx -> frames [ ctx -> prev_index ] . f		5456566	0					
ANR	5456911	ArrayIndexing	ctx -> frames [ ctx -> prev_index ]		5456566	0					
ANR	5456912	PtrMemberAccess	ctx -> frames		5456566	0					
ANR	5456913	Identifier	ctx		5456566	0					
ANR	5456914	Identifier	frames		5456566	1					
ANR	5456915	PtrMemberAccess	ctx -> prev_index		5456566	1					
ANR	5456916	Identifier	ctx		5456566	0					
ANR	5456917	Identifier	prev_index		5456566	1					
ANR	5456918	Identifier	f		5456566	1					
ANR	5456919	Identifier	data		5456566	1					
ANR	5456920	PrimaryExpression	0		5456566	1					
ANR	5456921	CompoundStatement		97:63:1738:1738	5456566	1					
ANR	5456922	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""decoding must start with keyframe\\n"" )"	103:8:1880:1946	5456566	0	True				
ANR	5456923	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""decoding must start with keyframe\\n"" )"		5456566	0					
ANR	5456924	Callee	av_log		5456566	0					
ANR	5456925	Identifier	av_log		5456566	0					
ANR	5456926	ArgumentList	avctx		5456566	1					
ANR	5456927	Argument	avctx		5456566	0					
ANR	5456928	Identifier	avctx		5456566	0					
ANR	5456929	Argument	AV_LOG_ERROR		5456566	1					
ANR	5456930	Identifier	AV_LOG_ERROR		5456566	0					
ANR	5456931	Argument	"""decoding must start with keyframe\\n"""		5456566	2					
ANR	5456932	PrimaryExpression	"""decoding must start with keyframe\\n"""		5456566	0					
ANR	5456933	ReturnStatement	return AVERROR_INVALIDDATA ;	105:8:1957:1983	5456566	1	True				
ANR	5456934	Identifier	AVERROR_INVALIDDATA		5456566	0					
ANR	5456935	ExpressionStatement	"ff_thread_release_buffer ( avctx , & ctx -> frames [ ctx -> cur_index ] )"	111:4:1999:2060	5456566	21	True				
ANR	5456936	CallExpression	"ff_thread_release_buffer ( avctx , & ctx -> frames [ ctx -> cur_index ] )"		5456566	0					
ANR	5456937	Callee	ff_thread_release_buffer		5456566	0					
ANR	5456938	Identifier	ff_thread_release_buffer		5456566	0					
ANR	5456939	ArgumentList	avctx		5456566	1					
ANR	5456940	Argument	avctx		5456566	0					
ANR	5456941	Identifier	avctx		5456566	0					
ANR	5456942	Argument	& ctx -> frames [ ctx -> cur_index ]		5456566	1					
ANR	5456943	UnaryOperationExpression	& ctx -> frames [ ctx -> cur_index ]		5456566	0					
ANR	5456944	UnaryOperator	&		5456566	0					
ANR	5456945	ArrayIndexing	ctx -> frames [ ctx -> cur_index ]		5456566	1					
ANR	5456946	PtrMemberAccess	ctx -> frames		5456566	0					
ANR	5456947	Identifier	ctx		5456566	0					
ANR	5456948	Identifier	frames		5456566	1					
ANR	5456949	PtrMemberAccess	ctx -> cur_index		5456566	1					
ANR	5456950	Identifier	ctx		5456566	0					
ANR	5456951	Identifier	cur_index		5456566	1					
ANR	5456952	ExpressionStatement	ctx -> frames [ ctx -> cur_index ] . f -> pict_type = is_pframe ? AV_PICTURE_TYPE_P : AV_PICTURE_TYPE_I	113:4:2067:2219	5456566	22	True				
ANR	5456953	AssignmentExpression	ctx -> frames [ ctx -> cur_index ] . f -> pict_type = is_pframe ? AV_PICTURE_TYPE_P : AV_PICTURE_TYPE_I		5456566	0		=			
ANR	5456954	PtrMemberAccess	ctx -> frames [ ctx -> cur_index ] . f -> pict_type		5456566	0					
ANR	5456955	MemberAccess	ctx -> frames [ ctx -> cur_index ] . f		5456566	0					
ANR	5456956	ArrayIndexing	ctx -> frames [ ctx -> cur_index ]		5456566	0					
ANR	5456957	PtrMemberAccess	ctx -> frames		5456566	0					
ANR	5456958	Identifier	ctx		5456566	0					
ANR	5456959	Identifier	frames		5456566	1					
ANR	5456960	PtrMemberAccess	ctx -> cur_index		5456566	1					
ANR	5456961	Identifier	ctx		5456566	0					
ANR	5456962	Identifier	cur_index		5456566	1					
ANR	5456963	Identifier	f		5456566	1					
ANR	5456964	Identifier	pict_type		5456566	1					
ANR	5456965	ConditionalExpression	is_pframe ? AV_PICTURE_TYPE_P : AV_PICTURE_TYPE_I		5456566	1					
ANR	5456966	Condition	is_pframe		5456566	0					
ANR	5456967	Identifier	is_pframe		5456566	0					
ANR	5456968	Identifier	AV_PICTURE_TYPE_P		5456566	1					
ANR	5456969	Identifier	AV_PICTURE_TYPE_I		5456566	2					
ANR	5456970	IfStatement	"if ( ( res = ff_thread_get_buffer ( avctx , & ctx -> frames [ ctx -> cur_index ] , AV_GET_BUFFER_FLAG_REF ) ) < 0 )"		5456566	23					
ANR	5456971	Condition	"( res = ff_thread_get_buffer ( avctx , & ctx -> frames [ ctx -> cur_index ] , AV_GET_BUFFER_FLAG_REF ) ) < 0"	117:8:2230:2359	5456566	0	True				
ANR	5456972	RelationalExpression	"( res = ff_thread_get_buffer ( avctx , & ctx -> frames [ ctx -> cur_index ] , AV_GET_BUFFER_FLAG_REF ) ) < 0"		5456566	0		<			
ANR	5456973	AssignmentExpression	"res = ff_thread_get_buffer ( avctx , & ctx -> frames [ ctx -> cur_index ] , AV_GET_BUFFER_FLAG_REF )"		5456566	0		=			
ANR	5456974	Identifier	res		5456566	0					
ANR	5456975	CallExpression	"ff_thread_get_buffer ( avctx , & ctx -> frames [ ctx -> cur_index ] , AV_GET_BUFFER_FLAG_REF )"		5456566	1					
ANR	5456976	Callee	ff_thread_get_buffer		5456566	0					
ANR	5456977	Identifier	ff_thread_get_buffer		5456566	0					
ANR	5456978	ArgumentList	avctx		5456566	1					
ANR	5456979	Argument	avctx		5456566	0					
ANR	5456980	Identifier	avctx		5456566	0					
ANR	5456981	Argument	& ctx -> frames [ ctx -> cur_index ]		5456566	1					
ANR	5456982	UnaryOperationExpression	& ctx -> frames [ ctx -> cur_index ]		5456566	0					
ANR	5456983	UnaryOperator	&		5456566	0					
ANR	5456984	ArrayIndexing	ctx -> frames [ ctx -> cur_index ]		5456566	1					
ANR	5456985	PtrMemberAccess	ctx -> frames		5456566	0					
ANR	5456986	Identifier	ctx		5456566	0					
ANR	5456987	Identifier	frames		5456566	1					
ANR	5456988	PtrMemberAccess	ctx -> cur_index		5456566	1					
ANR	5456989	Identifier	ctx		5456566	0					
ANR	5456990	Identifier	cur_index		5456566	1					
ANR	5456991	Argument	AV_GET_BUFFER_FLAG_REF		5456566	2					
ANR	5456992	Identifier	AV_GET_BUFFER_FLAG_REF		5456566	0					
ANR	5456993	PrimaryExpression	0		5456566	1					
ANR	5456994	CompoundStatement		115:66:2231:2231	5456566	1					
ANR	5456995	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""get_buffer() failed\\n"" )"	121:8:2373:2425	5456566	0	True				
ANR	5456996	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""get_buffer() failed\\n"" )"		5456566	0					
ANR	5456997	Callee	av_log		5456566	0					
ANR	5456998	Identifier	av_log		5456566	0					
ANR	5456999	ArgumentList	avctx		5456566	1					
ANR	5457000	Argument	avctx		5456566	0					
ANR	5457001	Identifier	avctx		5456566	0					
ANR	5457002	Argument	AV_LOG_ERROR		5456566	1					
ANR	5457003	Identifier	AV_LOG_ERROR		5456566	0					
ANR	5457004	Argument	"""get_buffer() failed\\n"""		5456566	2					
ANR	5457005	PrimaryExpression	"""get_buffer() failed\\n"""		5456566	0					
ANR	5457006	ReturnStatement	return res ;	123:8:2436:2446	5456566	1	True				
ANR	5457007	Identifier	res		5456566	0					
ANR	5457008	ExpressionStatement	ctx -> next_prev_index = ctx -> cur_index	129:4:2462:2499	5456566	24	True				
ANR	5457009	AssignmentExpression	ctx -> next_prev_index = ctx -> cur_index		5456566	0		=			
ANR	5457010	PtrMemberAccess	ctx -> next_prev_index		5456566	0					
ANR	5457011	Identifier	ctx		5456566	0					
ANR	5457012	Identifier	next_prev_index		5456566	1					
ANR	5457013	PtrMemberAccess	ctx -> cur_index		5456566	1					
ANR	5457014	Identifier	ctx		5456566	0					
ANR	5457015	Identifier	cur_index		5456566	1					
ANR	5457016	ExpressionStatement	ctx -> next_cur_index = ( ctx -> cur_index - 1 ) & 15	131:4:2506:2554	5456566	25	True				
ANR	5457017	AssignmentExpression	ctx -> next_cur_index = ( ctx -> cur_index - 1 ) & 15		5456566	0		=			
ANR	5457018	PtrMemberAccess	ctx -> next_cur_index		5456566	0					
ANR	5457019	Identifier	ctx		5456566	0					
ANR	5457020	Identifier	next_cur_index		5456566	1					
ANR	5457021	BitAndExpression	( ctx -> cur_index - 1 ) & 15		5456566	1		&			
ANR	5457022	AdditiveExpression	ctx -> cur_index - 1		5456566	0		-			
ANR	5457023	PtrMemberAccess	ctx -> cur_index		5456566	0					
ANR	5457024	Identifier	ctx		5456566	0					
ANR	5457025	Identifier	cur_index		5456566	1					
ANR	5457026	PrimaryExpression	1		5456566	1					
ANR	5457027	PrimaryExpression	15		5456566	1					
ANR	5457028	ExpressionStatement	ff_thread_finish_setup ( avctx )	135:4:2563:2592	5456566	26	True				
ANR	5457029	CallExpression	ff_thread_finish_setup ( avctx )		5456566	0					
ANR	5457030	Callee	ff_thread_finish_setup		5456566	0					
ANR	5457031	Identifier	ff_thread_finish_setup		5456566	0					
ANR	5457032	ArgumentList	avctx		5456566	1					
ANR	5457033	Argument	avctx		5456566	0					
ANR	5457034	Identifier	avctx		5456566	0					
ANR	5457035	ExpressionStatement	"av_fast_padded_malloc ( & ctx -> swap_buf , & ctx -> swap_buf_size , swap_buf_size )"	139:4:2601:2674	5456566	27	True				
ANR	5457036	CallExpression	"av_fast_padded_malloc ( & ctx -> swap_buf , & ctx -> swap_buf_size , swap_buf_size )"		5456566	0					
ANR	5457037	Callee	av_fast_padded_malloc		5456566	0					
ANR	5457038	Identifier	av_fast_padded_malloc		5456566	0					
ANR	5457039	ArgumentList	& ctx -> swap_buf		5456566	1					
ANR	5457040	Argument	& ctx -> swap_buf		5456566	0					
ANR	5457041	UnaryOperationExpression	& ctx -> swap_buf		5456566	0					
ANR	5457042	UnaryOperator	&		5456566	0					
ANR	5457043	PtrMemberAccess	ctx -> swap_buf		5456566	1					
ANR	5457044	Identifier	ctx		5456566	0					
ANR	5457045	Identifier	swap_buf		5456566	1					
ANR	5457046	Argument	& ctx -> swap_buf_size		5456566	1					
ANR	5457047	UnaryOperationExpression	& ctx -> swap_buf_size		5456566	0					
ANR	5457048	UnaryOperator	&		5456566	0					
ANR	5457049	PtrMemberAccess	ctx -> swap_buf_size		5456566	1					
ANR	5457050	Identifier	ctx		5456566	0					
ANR	5457051	Identifier	swap_buf_size		5456566	1					
ANR	5457052	Argument	swap_buf_size		5456566	2					
ANR	5457053	Identifier	swap_buf_size		5456566	0					
ANR	5457054	IfStatement	if ( ! ctx -> swap_buf )		5456566	28					
ANR	5457055	Condition	! ctx -> swap_buf	141:8:2685:2698	5456566	0	True				
ANR	5457056	UnaryOperationExpression	! ctx -> swap_buf		5456566	0					
ANR	5457057	UnaryOperator	!		5456566	0					
ANR	5457058	PtrMemberAccess	ctx -> swap_buf		5456566	1					
ANR	5457059	Identifier	ctx		5456566	0					
ANR	5457060	Identifier	swap_buf		5456566	1					
ANR	5457061	ReturnStatement	return AVERROR ( ENOMEM ) ;	143:8:2710:2732	5456566	1	True				
ANR	5457062	CallExpression	AVERROR ( ENOMEM )		5456566	0					
ANR	5457063	Callee	AVERROR		5456566	0					
ANR	5457064	Identifier	AVERROR		5456566	0					
ANR	5457065	ArgumentList	ENOMEM		5456566	1					
ANR	5457066	Argument	ENOMEM		5456566	0					
ANR	5457067	Identifier	ENOMEM		5456566	0					
ANR	5457068	ExpressionStatement	"ctx -> bbdsp . bswap_buf ( ctx -> swap_buf , ( const uint32_t * ) ( buf + MIMIC_HEADER_SIZE ) , swap_buf_size >> 2 )"	147:4:2741:2894	5456566	29	True				
ANR	5457069	CallExpression	"ctx -> bbdsp . bswap_buf ( ctx -> swap_buf , ( const uint32_t * ) ( buf + MIMIC_HEADER_SIZE ) , swap_buf_size >> 2 )"		5456566	0					
ANR	5457070	Callee	ctx -> bbdsp . bswap_buf		5456566	0					
ANR	5457071	MemberAccess	ctx -> bbdsp . bswap_buf		5456566	0					
ANR	5457072	PtrMemberAccess	ctx -> bbdsp		5456566	0					
ANR	5457073	Identifier	ctx		5456566	0					
ANR	5457074	Identifier	bbdsp		5456566	1					
ANR	5457075	Identifier	bswap_buf		5456566	1					
ANR	5457076	ArgumentList	ctx -> swap_buf		5456566	1					
ANR	5457077	Argument	ctx -> swap_buf		5456566	0					
ANR	5457078	PtrMemberAccess	ctx -> swap_buf		5456566	0					
ANR	5457079	Identifier	ctx		5456566	0					
ANR	5457080	Identifier	swap_buf		5456566	1					
ANR	5457081	Argument	( const uint32_t * ) ( buf + MIMIC_HEADER_SIZE )		5456566	1					
ANR	5457082	CastExpression	( const uint32_t * ) ( buf + MIMIC_HEADER_SIZE )		5456566	0					
ANR	5457083	CastTarget	const uint32_t *		5456566	0					
ANR	5457084	AdditiveExpression	buf + MIMIC_HEADER_SIZE		5456566	1		+			
ANR	5457085	Identifier	buf		5456566	0					
ANR	5457086	Identifier	MIMIC_HEADER_SIZE		5456566	1					
ANR	5457087	Argument	swap_buf_size >> 2		5456566	2					
ANR	5457088	ShiftExpression	swap_buf_size >> 2		5456566	0		>>			
ANR	5457089	Identifier	swap_buf_size		5456566	0					
ANR	5457090	PrimaryExpression	2		5456566	1					
ANR	5457091	ExpressionStatement	"init_get_bits ( & ctx -> gb , ctx -> swap_buf , swap_buf_size << 3 )"	153:4:2901:2959	5456566	30	True				
ANR	5457092	CallExpression	"init_get_bits ( & ctx -> gb , ctx -> swap_buf , swap_buf_size << 3 )"		5456566	0					
ANR	5457093	Callee	init_get_bits		5456566	0					
ANR	5457094	Identifier	init_get_bits		5456566	0					
ANR	5457095	ArgumentList	& ctx -> gb		5456566	1					
ANR	5457096	Argument	& ctx -> gb		5456566	0					
ANR	5457097	UnaryOperationExpression	& ctx -> gb		5456566	0					
ANR	5457098	UnaryOperator	&		5456566	0					
ANR	5457099	PtrMemberAccess	ctx -> gb		5456566	1					
ANR	5457100	Identifier	ctx		5456566	0					
ANR	5457101	Identifier	gb		5456566	1					
ANR	5457102	Argument	ctx -> swap_buf		5456566	1					
ANR	5457103	PtrMemberAccess	ctx -> swap_buf		5456566	0					
ANR	5457104	Identifier	ctx		5456566	0					
ANR	5457105	Identifier	swap_buf		5456566	1					
ANR	5457106	Argument	swap_buf_size << 3		5456566	2					
ANR	5457107	ShiftExpression	swap_buf_size << 3		5456566	0		<<			
ANR	5457108	Identifier	swap_buf_size		5456566	0					
ANR	5457109	PrimaryExpression	3		5456566	1					
ANR	5457110	ExpressionStatement	"res = decode ( ctx , quality , num_coeffs , ! is_pframe )"	157:4:2968:3018	5456566	31	True				
ANR	5457111	AssignmentExpression	"res = decode ( ctx , quality , num_coeffs , ! is_pframe )"		5456566	0		=			
ANR	5457112	Identifier	res		5456566	0					
ANR	5457113	CallExpression	"decode ( ctx , quality , num_coeffs , ! is_pframe )"		5456566	1					
ANR	5457114	Callee	decode		5456566	0					
ANR	5457115	Identifier	decode		5456566	0					
ANR	5457116	ArgumentList	ctx		5456566	1					
ANR	5457117	Argument	ctx		5456566	0					
ANR	5457118	Identifier	ctx		5456566	0					
ANR	5457119	Argument	quality		5456566	1					
ANR	5457120	Identifier	quality		5456566	0					
ANR	5457121	Argument	num_coeffs		5456566	2					
ANR	5457122	Identifier	num_coeffs		5456566	0					
ANR	5457123	Argument	! is_pframe		5456566	3					
ANR	5457124	UnaryOperationExpression	! is_pframe		5456566	0					
ANR	5457125	UnaryOperator	!		5456566	0					
ANR	5457126	Identifier	is_pframe		5456566	1					
ANR	5457127	ExpressionStatement	"ff_thread_report_progress ( & ctx -> frames [ ctx -> cur_index ] , INT_MAX , 0 )"	159:4:3025:3092	5456566	32	True				
ANR	5457128	CallExpression	"ff_thread_report_progress ( & ctx -> frames [ ctx -> cur_index ] , INT_MAX , 0 )"		5456566	0					
ANR	5457129	Callee	ff_thread_report_progress		5456566	0					
ANR	5457130	Identifier	ff_thread_report_progress		5456566	0					
ANR	5457131	ArgumentList	& ctx -> frames [ ctx -> cur_index ]		5456566	1					
ANR	5457132	Argument	& ctx -> frames [ ctx -> cur_index ]		5456566	0					
ANR	5457133	UnaryOperationExpression	& ctx -> frames [ ctx -> cur_index ]		5456566	0					
ANR	5457134	UnaryOperator	&		5456566	0					
ANR	5457135	ArrayIndexing	ctx -> frames [ ctx -> cur_index ]		5456566	1					
ANR	5457136	PtrMemberAccess	ctx -> frames		5456566	0					
ANR	5457137	Identifier	ctx		5456566	0					
ANR	5457138	Identifier	frames		5456566	1					
ANR	5457139	PtrMemberAccess	ctx -> cur_index		5456566	1					
ANR	5457140	Identifier	ctx		5456566	0					
ANR	5457141	Identifier	cur_index		5456566	1					
ANR	5457142	Argument	INT_MAX		5456566	1					
ANR	5457143	Identifier	INT_MAX		5456566	0					
ANR	5457144	Argument	0		5456566	2					
ANR	5457145	PrimaryExpression	0		5456566	0					
ANR	5457146	IfStatement	if ( res < 0 )		5456566	33					
ANR	5457147	Condition	res < 0	161:8:3103:3109	5456566	0	True				
ANR	5457148	RelationalExpression	res < 0		5456566	0		<			
ANR	5457149	Identifier	res		5456566	0					
ANR	5457150	PrimaryExpression	0		5456566	1					
ANR	5457151	CompoundStatement		157:17:2981:2981	5456566	1					
ANR	5457152	IfStatement	if ( ! ( avctx -> active_thread_type & FF_THREAD_FRAME ) )		5456566	0					
ANR	5457153	Condition	! ( avctx -> active_thread_type & FF_THREAD_FRAME )	163:12:3127:3172	5456566	0	True				
ANR	5457154	UnaryOperationExpression	! ( avctx -> active_thread_type & FF_THREAD_FRAME )		5456566	0					
ANR	5457155	UnaryOperator	!		5456566	0					
ANR	5457156	BitAndExpression	avctx -> active_thread_type & FF_THREAD_FRAME		5456566	1		&			
ANR	5457157	PtrMemberAccess	avctx -> active_thread_type		5456566	0					
ANR	5457158	Identifier	avctx		5456566	0					
ANR	5457159	Identifier	active_thread_type		5456566	1					
ANR	5457160	Identifier	FF_THREAD_FRAME		5456566	1					
ANR	5457161	ExpressionStatement	"ff_thread_release_buffer ( avctx , & ctx -> frames [ ctx -> cur_index ] )"	165:12:3188:3249	5456566	1	True				
ANR	5457162	CallExpression	"ff_thread_release_buffer ( avctx , & ctx -> frames [ ctx -> cur_index ] )"		5456566	0					
ANR	5457163	Callee	ff_thread_release_buffer		5456566	0					
ANR	5457164	Identifier	ff_thread_release_buffer		5456566	0					
ANR	5457165	ArgumentList	avctx		5456566	1					
ANR	5457166	Argument	avctx		5456566	0					
ANR	5457167	Identifier	avctx		5456566	0					
ANR	5457168	Argument	& ctx -> frames [ ctx -> cur_index ]		5456566	1					
ANR	5457169	UnaryOperationExpression	& ctx -> frames [ ctx -> cur_index ]		5456566	0					
ANR	5457170	UnaryOperator	&		5456566	0					
ANR	5457171	ArrayIndexing	ctx -> frames [ ctx -> cur_index ]		5456566	1					
ANR	5457172	PtrMemberAccess	ctx -> frames		5456566	0					
ANR	5457173	Identifier	ctx		5456566	0					
ANR	5457174	Identifier	frames		5456566	1					
ANR	5457175	PtrMemberAccess	ctx -> cur_index		5456566	1					
ANR	5457176	Identifier	ctx		5456566	0					
ANR	5457177	Identifier	cur_index		5456566	1					
ANR	5457178	ReturnStatement	return res ;	167:8:3260:3270	5456566	1	True				
ANR	5457179	Identifier	res		5456566	0					
ANR	5457180	IfStatement	"if ( ( res = av_frame_ref ( data , ctx -> frames [ ctx -> cur_index ] . f ) ) < 0 )"		5456566	34					
ANR	5457181	Condition	"( res = av_frame_ref ( data , ctx -> frames [ ctx -> cur_index ] . f ) ) < 0"	173:8:3290:3350	5456566	0	True				
ANR	5457182	RelationalExpression	"( res = av_frame_ref ( data , ctx -> frames [ ctx -> cur_index ] . f ) ) < 0"		5456566	0		<			
ANR	5457183	AssignmentExpression	"res = av_frame_ref ( data , ctx -> frames [ ctx -> cur_index ] . f )"		5456566	0		=			
ANR	5457184	Identifier	res		5456566	0					
ANR	5457185	CallExpression	"av_frame_ref ( data , ctx -> frames [ ctx -> cur_index ] . f )"		5456566	1					
ANR	5457186	Callee	av_frame_ref		5456566	0					
ANR	5457187	Identifier	av_frame_ref		5456566	0					
ANR	5457188	ArgumentList	data		5456566	1					
ANR	5457189	Argument	data		5456566	0					
ANR	5457190	Identifier	data		5456566	0					
ANR	5457191	Argument	ctx -> frames [ ctx -> cur_index ] . f		5456566	1					
ANR	5457192	MemberAccess	ctx -> frames [ ctx -> cur_index ] . f		5456566	0					
ANR	5457193	ArrayIndexing	ctx -> frames [ ctx -> cur_index ]		5456566	0					
ANR	5457194	PtrMemberAccess	ctx -> frames		5456566	0					
ANR	5457195	Identifier	ctx		5456566	0					
ANR	5457196	Identifier	frames		5456566	1					
ANR	5457197	PtrMemberAccess	ctx -> cur_index		5456566	1					
ANR	5457198	Identifier	ctx		5456566	0					
ANR	5457199	Identifier	cur_index		5456566	1					
ANR	5457200	Identifier	f		5456566	1					
ANR	5457201	PrimaryExpression	0		5456566	1					
ANR	5457202	ReturnStatement	return res ;	175:8:3362:3372	5456566	1	True				
ANR	5457203	Identifier	res		5456566	0					
ANR	5457204	ExpressionStatement	* got_frame = 1	177:4:3379:3398	5456566	35	True				
ANR	5457205	AssignmentExpression	* got_frame = 1		5456566	0		=			
ANR	5457206	UnaryOperationExpression	* got_frame		5456566	0					
ANR	5457207	UnaryOperator	*		5456566	0					
ANR	5457208	Identifier	got_frame		5456566	1					
ANR	5457209	PrimaryExpression	1		5456566	1					
ANR	5457210	ExpressionStatement	flip_swap_frame ( data )	181:4:3407:3428	5456566	36	True				
ANR	5457211	CallExpression	flip_swap_frame ( data )		5456566	0					
ANR	5457212	Callee	flip_swap_frame		5456566	0					
ANR	5457213	Identifier	flip_swap_frame		5456566	0					
ANR	5457214	ArgumentList	data		5456566	1					
ANR	5457215	Argument	data		5456566	0					
ANR	5457216	Identifier	data		5456566	0					
ANR	5457217	ExpressionStatement	ctx -> prev_index = ctx -> next_prev_index	185:4:3437:3475	5456566	37	True				
ANR	5457218	AssignmentExpression	ctx -> prev_index = ctx -> next_prev_index		5456566	0		=			
ANR	5457219	PtrMemberAccess	ctx -> prev_index		5456566	0					
ANR	5457220	Identifier	ctx		5456566	0					
ANR	5457221	Identifier	prev_index		5456566	1					
ANR	5457222	PtrMemberAccess	ctx -> next_prev_index		5456566	1					
ANR	5457223	Identifier	ctx		5456566	0					
ANR	5457224	Identifier	next_prev_index		5456566	1					
ANR	5457225	ExpressionStatement	ctx -> cur_index = ctx -> next_cur_index	187:4:3482:3519	5456566	38	True				
ANR	5457226	AssignmentExpression	ctx -> cur_index = ctx -> next_cur_index		5456566	0		=			
ANR	5457227	PtrMemberAccess	ctx -> cur_index		5456566	0					
ANR	5457228	Identifier	ctx		5456566	0					
ANR	5457229	Identifier	cur_index		5456566	1					
ANR	5457230	PtrMemberAccess	ctx -> next_cur_index		5456566	1					
ANR	5457231	Identifier	ctx		5456566	0					
ANR	5457232	Identifier	next_cur_index		5456566	1					
ANR	5457233	ExpressionStatement	"ff_thread_release_buffer ( avctx , & ctx -> frames [ ctx -> cur_index ] )"	193:4:3603:3664	5456566	39	True				
ANR	5457234	CallExpression	"ff_thread_release_buffer ( avctx , & ctx -> frames [ ctx -> cur_index ] )"		5456566	0					
ANR	5457235	Callee	ff_thread_release_buffer		5456566	0					
ANR	5457236	Identifier	ff_thread_release_buffer		5456566	0					
ANR	5457237	ArgumentList	avctx		5456566	1					
ANR	5457238	Argument	avctx		5456566	0					
ANR	5457239	Identifier	avctx		5456566	0					
ANR	5457240	Argument	& ctx -> frames [ ctx -> cur_index ]		5456566	1					
ANR	5457241	UnaryOperationExpression	& ctx -> frames [ ctx -> cur_index ]		5456566	0					
ANR	5457242	UnaryOperator	&		5456566	0					
ANR	5457243	ArrayIndexing	ctx -> frames [ ctx -> cur_index ]		5456566	1					
ANR	5457244	PtrMemberAccess	ctx -> frames		5456566	0					
ANR	5457245	Identifier	ctx		5456566	0					
ANR	5457246	Identifier	frames		5456566	1					
ANR	5457247	PtrMemberAccess	ctx -> cur_index		5456566	1					
ANR	5457248	Identifier	ctx		5456566	0					
ANR	5457249	Identifier	cur_index		5456566	1					
ANR	5457250	ReturnStatement	return buf_size ;	197:4:3673:3688	5456566	40	True				
ANR	5457251	Identifier	buf_size		5456566	0					
ANR	5457252	ReturnType	static int		5456566	1					
ANR	5457253	Identifier	mimic_decode_frame		5456566	2					
ANR	5457254	ParameterList	"AVCodecContext * avctx , void * data , int * got_frame , AVPacket * avpkt"		5456566	3					
ANR	5457255	Parameter	AVCodecContext * avctx	1:30:30:50	5456566	0	True				
ANR	5457256	ParameterType	AVCodecContext *		5456566	0					
ANR	5457257	Identifier	avctx		5456566	1					
ANR	5457258	Parameter	void * data	1:53:53:62	5456566	1	True				
ANR	5457259	ParameterType	void *		5456566	0					
ANR	5457260	Identifier	data		5456566	1					
ANR	5457261	Parameter	int * got_frame	3:30:96:109	5456566	2	True				
ANR	5457262	ParameterType	int *		5456566	0					
ANR	5457263	Identifier	got_frame		5456566	1					
ANR	5457264	Parameter	AVPacket * avpkt	3:46:112:126	5456566	3	True				
ANR	5457265	ParameterType	AVPacket *		5456566	0					
ANR	5457266	Identifier	avpkt		5456566	1					
ANR	5457267	CFGEntryNode	ENTRY		5456566		True				
ANR	5457268	CFGExitNode	EXIT		5456566		True				
ANR	5457269	Symbol	ENOMEM		5456566						
ANR	5457270	Symbol	data		5456566						
ANR	5457271	Symbol	& gb		5456566						
ANR	5457272	Symbol	avctx -> active_thread_type		5456566						
ANR	5457273	Symbol	avpkt		5456566						
ANR	5457274	Symbol	ctx -> next_cur_index		5456566						
ANR	5457275	Symbol	decode		5456566						
ANR	5457276	Symbol	num_coeffs		5456566						
ANR	5457277	Symbol	AV_CEIL_RSHIFT		5456566						
ANR	5457278	Symbol	got_frame		5456566						
ANR	5457279	Symbol	ctx -> avctx -> width		5456566						
ANR	5457280	Symbol	* * * * ctx		5456566						
ANR	5457281	Symbol	* ctx -> frames [ ctx -> prev_index ] . f -> data		5456566						
ANR	5457282	Symbol	height		5456566						
ANR	5457283	Symbol	ctx -> frames [ ctx -> cur_index ] . f -> pict_type		5456566						
ANR	5457284	Symbol	res		5456566						
ANR	5457285	Symbol	* ctx -> avctx		5456566						
ANR	5457286	Symbol	* * ctx -> frames [ ctx -> prev_index ] . f		5456566						
ANR	5457287	Symbol	* got_frame		5456566						
ANR	5457288	Symbol	buf_size		5456566						
ANR	5457289	Symbol	ctx		5456566						
ANR	5457290	Symbol	is_pframe		5456566						
ANR	5457291	Symbol	AV_PIX_FMT_YUV420P		5456566						
ANR	5457292	Symbol	quality		5456566						
ANR	5457293	Symbol	* avctx		5456566						
ANR	5457294	Symbol	ctx -> avctx		5456566						
ANR	5457295	Symbol	* * * ctx -> frames		5456566						
ANR	5457296	Symbol	& ctx -> swap_buf_size		5456566						
ANR	5457297	Symbol	avpkt -> data		5456566						
ANR	5457298	Symbol	avctx -> pix_fmt		5456566						
ANR	5457299	Symbol	FF_THREAD_FRAME		5456566						
ANR	5457300	Symbol	* ctx -> prev_index		5456566						
ANR	5457301	Symbol	AV_GET_BUFFER_FLAG_REF		5456566						
ANR	5457302	Symbol	AV_PICTURE_TYPE_P		5456566						
ANR	5457303	Symbol	avctx -> width		5456566						
ANR	5457304	Symbol	ctx -> num_vblocks		5456566						
ANR	5457305	Symbol	av_frame_ref		5456566						
ANR	5457306	Symbol	& ctx -> gb		5456566						
ANR	5457307	Symbol	ctx -> cur_index		5456566						
ANR	5457308	Symbol	* ctx -> frames [ ctx -> cur_index ] . f		5456566						
ANR	5457309	Symbol	ctx -> frames [ ctx -> prev_index ] . f -> data		5456566						
ANR	5457310	Symbol	bytestream2_get_le32u		5456566						
ANR	5457311	Symbol	ctx -> frames [ ctx -> prev_index ] . f		5456566						
ANR	5457312	Symbol	ctx -> next_prev_index		5456566						
ANR	5457313	Symbol	ctx -> swap_buf		5456566						
ANR	5457314	Symbol	ctx -> num_hblocks		5456566						
ANR	5457315	Symbol	avctx -> height		5456566						
ANR	5457316	Symbol	* ctx -> cur_index		5456566						
ANR	5457317	Symbol	* * ctx -> cur_index		5456566						
ANR	5457318	Symbol	bytestream2_get_le16u		5456566						
ANR	5457319	Symbol	* ctx -> frames [ ctx -> prev_index ] . f		5456566						
ANR	5457320	Symbol	INT_MAX		5456566						
ANR	5457321	Symbol	avpkt -> size		5456566						
ANR	5457322	Symbol	AVERROR_PATCHWELCOME		5456566						
ANR	5457323	Symbol	* ctx -> frames		5456566						
ANR	5457324	Symbol	ctx -> frames		5456566						
ANR	5457325	Symbol	AV_PICTURE_TYPE_I		5456566						
ANR	5457326	Symbol	gb		5456566						
ANR	5457327	Symbol	avctx		5456566						
ANR	5457328	Symbol	* * ctx -> prev_index		5456566						
ANR	5457329	Symbol	* ctx -> num_vblocks		5456566						
ANR	5457330	Symbol	* avpkt		5456566						
ANR	5457331	Symbol	bytestream2_get_byteu		5456566						
ANR	5457332	Symbol	& ctx -> swap_buf		5456566						
ANR	5457333	Symbol	AV_LOG_ERROR		5456566						
ANR	5457334	Symbol	* * * ctx		5456566						
ANR	5457335	Symbol	ff_thread_get_buffer		5456566						
ANR	5457336	Symbol	i		5456566						
ANR	5457337	Symbol	* * ctx -> frames		5456566						
ANR	5457338	Symbol	avctx -> priv_data		5456566						
ANR	5457339	Symbol	* ctx		5456566						
ANR	5457340	Symbol	ctx -> frames [ ctx -> cur_index ] . f		5456566						
ANR	5457341	Symbol	swap_buf_size		5456566						
ANR	5457342	Symbol	MIMIC_HEADER_SIZE		5456566						
ANR	5457343	Symbol	buf		5456566						
ANR	5457344	Symbol	* ctx -> num_hblocks		5456566						
ANR	5457345	Symbol	* i		5456566						
ANR	5457346	Symbol	ctx -> prev_index		5456566						
ANR	5457347	Symbol	width		5456566						
ANR	5457348	Symbol	AVERROR_INVALIDDATA		5456566						
ANR	5457349	Symbol	* * ctx		5456566						
ANR	5457350	Symbol	AVERROR		5456566						
ANR	5457351	Symbol	ctx -> avctx -> height		5456566						
ANR	5457352	Symbol	* * * ctx -> prev_index		5456566						
ANR	5457353	Symbol	ctx -> bbdsp		5456566						
