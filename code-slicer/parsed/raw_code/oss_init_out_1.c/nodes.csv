command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6264753	File	/home/p4ultr4n/workplace/ReVeal/raw_code/oss_init_out_1.c								
ANR	6264754	Function	oss_init_out	1:0:0:3118							
ANR	6264755	FunctionDef	"oss_init_out (HWVoiceOut * hw , struct audsettings * as)"		6264754	0					
ANR	6264756	CompoundStatement		3:0:66:3118	6264754	0					
ANR	6264757	IdentifierDeclStatement	OSSVoiceOut * oss = ( OSSVoiceOut * ) hw ;	5:4:73:110	6264754	0	True				
ANR	6264758	IdentifierDecl	* oss = ( OSSVoiceOut * ) hw		6264754	0					
ANR	6264759	IdentifierDeclType	OSSVoiceOut *		6264754	0					
ANR	6264760	Identifier	oss		6264754	1					
ANR	6264761	AssignmentExpression	* oss = ( OSSVoiceOut * ) hw		6264754	2		=			
ANR	6264762	Identifier	oss		6264754	0					
ANR	6264763	CastExpression	( OSSVoiceOut * ) hw		6264754	1					
ANR	6264764	CastTarget	OSSVoiceOut *		6264754	0					
ANR	6264765	Identifier	hw		6264754	1					
ANR	6264766	IdentifierDeclStatement	"struct oss_params req , obt ;"	7:4:117:143	6264754	1	True				
ANR	6264767	IdentifierDecl	req		6264754	0					
ANR	6264768	IdentifierDeclType	struct oss_params		6264754	0					
ANR	6264769	Identifier	req		6264754	1					
ANR	6264770	IdentifierDecl	obt		6264754	1					
ANR	6264771	IdentifierDeclType	struct oss_params		6264754	0					
ANR	6264772	Identifier	obt		6264754	1					
ANR	6264773	IdentifierDeclStatement	int endianness ;	9:4:150:164	6264754	2	True				
ANR	6264774	IdentifierDecl	endianness		6264754	0					
ANR	6264775	IdentifierDeclType	int		6264754	0					
ANR	6264776	Identifier	endianness		6264754	1					
ANR	6264777	IdentifierDeclStatement	int err ;	11:4:171:178	6264754	3	True				
ANR	6264778	IdentifierDecl	err		6264754	0					
ANR	6264779	IdentifierDeclType	int		6264754	0					
ANR	6264780	Identifier	err		6264754	1					
ANR	6264781	IdentifierDeclStatement	int fd ;	13:4:185:191	6264754	4	True				
ANR	6264782	IdentifierDecl	fd		6264754	0					
ANR	6264783	IdentifierDeclType	int		6264754	0					
ANR	6264784	Identifier	fd		6264754	1					
ANR	6264785	IdentifierDeclStatement	audfmt_e effective_fmt ;	15:4:198:220	6264754	5	True				
ANR	6264786	IdentifierDecl	effective_fmt		6264754	0					
ANR	6264787	IdentifierDeclType	audfmt_e		6264754	0					
ANR	6264788	Identifier	effective_fmt		6264754	1					
ANR	6264789	IdentifierDeclStatement	struct audsettings obt_as ;	17:4:227:252	6264754	6	True				
ANR	6264790	IdentifierDecl	obt_as		6264754	0					
ANR	6264791	IdentifierDeclType	struct audsettings		6264754	0					
ANR	6264792	Identifier	obt_as		6264754	1					
ANR	6264793	ExpressionStatement	oss -> fd = - 1	21:4:261:273	6264754	7	True				
ANR	6264794	AssignmentExpression	oss -> fd = - 1		6264754	0		=			
ANR	6264795	PtrMemberAccess	oss -> fd		6264754	0					
ANR	6264796	Identifier	oss		6264754	0					
ANR	6264797	Identifier	fd		6264754	1					
ANR	6264798	UnaryOperationExpression	- 1		6264754	1					
ANR	6264799	UnaryOperator	-		6264754	0					
ANR	6264800	PrimaryExpression	1		6264754	1					
ANR	6264801	ExpressionStatement	"req . fmt = aud_to_ossfmt ( as -> fmt , as -> endianness )"	25:4:282:331	6264754	8	True				
ANR	6264802	AssignmentExpression	"req . fmt = aud_to_ossfmt ( as -> fmt , as -> endianness )"		6264754	0		=			
ANR	6264803	MemberAccess	req . fmt		6264754	0					
ANR	6264804	Identifier	req		6264754	0					
ANR	6264805	Identifier	fmt		6264754	1					
ANR	6264806	CallExpression	"aud_to_ossfmt ( as -> fmt , as -> endianness )"		6264754	1					
ANR	6264807	Callee	aud_to_ossfmt		6264754	0					
ANR	6264808	Identifier	aud_to_ossfmt		6264754	0					
ANR	6264809	ArgumentList	as -> fmt		6264754	1					
ANR	6264810	Argument	as -> fmt		6264754	0					
ANR	6264811	PtrMemberAccess	as -> fmt		6264754	0					
ANR	6264812	Identifier	as		6264754	0					
ANR	6264813	Identifier	fmt		6264754	1					
ANR	6264814	Argument	as -> endianness		6264754	1					
ANR	6264815	PtrMemberAccess	as -> endianness		6264754	0					
ANR	6264816	Identifier	as		6264754	0					
ANR	6264817	Identifier	endianness		6264754	1					
ANR	6264818	ExpressionStatement	req . freq = as -> freq	27:4:338:357	6264754	9	True				
ANR	6264819	AssignmentExpression	req . freq = as -> freq		6264754	0		=			
ANR	6264820	MemberAccess	req . freq		6264754	0					
ANR	6264821	Identifier	req		6264754	0					
ANR	6264822	Identifier	freq		6264754	1					
ANR	6264823	PtrMemberAccess	as -> freq		6264754	1					
ANR	6264824	Identifier	as		6264754	0					
ANR	6264825	Identifier	freq		6264754	1					
ANR	6264826	ExpressionStatement	req . nchannels = as -> nchannels	29:4:364:393	6264754	10	True				
ANR	6264827	AssignmentExpression	req . nchannels = as -> nchannels		6264754	0		=			
ANR	6264828	MemberAccess	req . nchannels		6264754	0					
ANR	6264829	Identifier	req		6264754	0					
ANR	6264830	Identifier	nchannels		6264754	1					
ANR	6264831	PtrMemberAccess	as -> nchannels		6264754	1					
ANR	6264832	Identifier	as		6264754	0					
ANR	6264833	Identifier	nchannels		6264754	1					
ANR	6264834	ExpressionStatement	req . fragsize = conf . fragsize	31:4:400:428	6264754	11	True				
ANR	6264835	AssignmentExpression	req . fragsize = conf . fragsize		6264754	0		=			
ANR	6264836	MemberAccess	req . fragsize		6264754	0					
ANR	6264837	Identifier	req		6264754	0					
ANR	6264838	Identifier	fragsize		6264754	1					
ANR	6264839	MemberAccess	conf . fragsize		6264754	1					
ANR	6264840	Identifier	conf		6264754	0					
ANR	6264841	Identifier	fragsize		6264754	1					
ANR	6264842	ExpressionStatement	req . nfrags = conf . nfrags	33:4:435:459	6264754	12	True				
ANR	6264843	AssignmentExpression	req . nfrags = conf . nfrags		6264754	0		=			
ANR	6264844	MemberAccess	req . nfrags		6264754	0					
ANR	6264845	Identifier	req		6264754	0					
ANR	6264846	Identifier	nfrags		6264754	1					
ANR	6264847	MemberAccess	conf . nfrags		6264754	1					
ANR	6264848	Identifier	conf		6264754	0					
ANR	6264849	Identifier	nfrags		6264754	1					
ANR	6264850	IfStatement	"if ( oss_open ( 0 , & req , & obt , & fd ) )"		6264754	13					
ANR	6264851	Condition	"oss_open ( 0 , & req , & obt , & fd )"	37:8:472:500	6264754	0	True				
ANR	6264852	CallExpression	"oss_open ( 0 , & req , & obt , & fd )"		6264754	0					
ANR	6264853	Callee	oss_open		6264754	0					
ANR	6264854	Identifier	oss_open		6264754	0					
ANR	6264855	ArgumentList	0		6264754	1					
ANR	6264856	Argument	0		6264754	0					
ANR	6264857	PrimaryExpression	0		6264754	0					
ANR	6264858	Argument	& req		6264754	1					
ANR	6264859	UnaryOperationExpression	& req		6264754	0					
ANR	6264860	UnaryOperator	&		6264754	0					
ANR	6264861	Identifier	req		6264754	1					
ANR	6264862	Argument	& obt		6264754	2					
ANR	6264863	UnaryOperationExpression	& obt		6264754	0					
ANR	6264864	UnaryOperator	&		6264754	0					
ANR	6264865	Identifier	obt		6264754	1					
ANR	6264866	Argument	& fd		6264754	3					
ANR	6264867	UnaryOperationExpression	& fd		6264754	0					
ANR	6264868	UnaryOperator	&		6264754	0					
ANR	6264869	Identifier	fd		6264754	1					
ANR	6264870	CompoundStatement		35:39:436:436	6264754	1					
ANR	6264871	ReturnStatement	return - 1 ;	39:8:514:523	6264754	0	True				
ANR	6264872	UnaryOperationExpression	- 1		6264754	0					
ANR	6264873	UnaryOperator	-		6264754	0					
ANR	6264874	PrimaryExpression	1		6264754	1					
ANR	6264875	ExpressionStatement	"err = oss_to_audfmt ( obt . fmt , & effective_fmt , & endianness )"	45:4:539:597	6264754	14	True				
ANR	6264876	AssignmentExpression	"err = oss_to_audfmt ( obt . fmt , & effective_fmt , & endianness )"		6264754	0		=			
ANR	6264877	Identifier	err		6264754	0					
ANR	6264878	CallExpression	"oss_to_audfmt ( obt . fmt , & effective_fmt , & endianness )"		6264754	1					
ANR	6264879	Callee	oss_to_audfmt		6264754	0					
ANR	6264880	Identifier	oss_to_audfmt		6264754	0					
ANR	6264881	ArgumentList	obt . fmt		6264754	1					
ANR	6264882	Argument	obt . fmt		6264754	0					
ANR	6264883	MemberAccess	obt . fmt		6264754	0					
ANR	6264884	Identifier	obt		6264754	0					
ANR	6264885	Identifier	fmt		6264754	1					
ANR	6264886	Argument	& effective_fmt		6264754	1					
ANR	6264887	UnaryOperationExpression	& effective_fmt		6264754	0					
ANR	6264888	UnaryOperator	&		6264754	0					
ANR	6264889	Identifier	effective_fmt		6264754	1					
ANR	6264890	Argument	& endianness		6264754	2					
ANR	6264891	UnaryOperationExpression	& endianness		6264754	0					
ANR	6264892	UnaryOperator	&		6264754	0					
ANR	6264893	Identifier	endianness		6264754	1					
ANR	6264894	IfStatement	if ( err )		6264754	15					
ANR	6264895	Condition	err	47:8:608:610	6264754	0	True				
ANR	6264896	Identifier	err		6264754	0					
ANR	6264897	CompoundStatement		45:13:546:546	6264754	1					
ANR	6264898	ExpressionStatement	oss_anal_close ( & fd )	49:8:624:644	6264754	0	True				
ANR	6264899	CallExpression	oss_anal_close ( & fd )		6264754	0					
ANR	6264900	Callee	oss_anal_close		6264754	0					
ANR	6264901	Identifier	oss_anal_close		6264754	0					
ANR	6264902	ArgumentList	& fd		6264754	1					
ANR	6264903	Argument	& fd		6264754	0					
ANR	6264904	UnaryOperationExpression	& fd		6264754	0					
ANR	6264905	UnaryOperator	&		6264754	0					
ANR	6264906	Identifier	fd		6264754	1					
ANR	6264907	ReturnStatement	return - 1 ;	51:8:655:664	6264754	1	True				
ANR	6264908	UnaryOperationExpression	- 1		6264754	0					
ANR	6264909	UnaryOperator	-		6264754	0					
ANR	6264910	PrimaryExpression	1		6264754	1					
ANR	6264911	ExpressionStatement	obt_as . freq = obt . freq	57:4:680:702	6264754	16	True				
ANR	6264912	AssignmentExpression	obt_as . freq = obt . freq		6264754	0		=			
ANR	6264913	MemberAccess	obt_as . freq		6264754	0					
ANR	6264914	Identifier	obt_as		6264754	0					
ANR	6264915	Identifier	freq		6264754	1					
ANR	6264916	MemberAccess	obt . freq		6264754	1					
ANR	6264917	Identifier	obt		6264754	0					
ANR	6264918	Identifier	freq		6264754	1					
ANR	6264919	ExpressionStatement	obt_as . nchannels = obt . nchannels	59:4:709:741	6264754	17	True				
ANR	6264920	AssignmentExpression	obt_as . nchannels = obt . nchannels		6264754	0		=			
ANR	6264921	MemberAccess	obt_as . nchannels		6264754	0					
ANR	6264922	Identifier	obt_as		6264754	0					
ANR	6264923	Identifier	nchannels		6264754	1					
ANR	6264924	MemberAccess	obt . nchannels		6264754	1					
ANR	6264925	Identifier	obt		6264754	0					
ANR	6264926	Identifier	nchannels		6264754	1					
ANR	6264927	ExpressionStatement	obt_as . fmt = effective_fmt	61:4:748:774	6264754	18	True				
ANR	6264928	AssignmentExpression	obt_as . fmt = effective_fmt		6264754	0		=			
ANR	6264929	MemberAccess	obt_as . fmt		6264754	0					
ANR	6264930	Identifier	obt_as		6264754	0					
ANR	6264931	Identifier	fmt		6264754	1					
ANR	6264932	Identifier	effective_fmt		6264754	1					
ANR	6264933	ExpressionStatement	obt_as . endianness = endianness	63:4:781:811	6264754	19	True				
ANR	6264934	AssignmentExpression	obt_as . endianness = endianness		6264754	0		=			
ANR	6264935	MemberAccess	obt_as . endianness		6264754	0					
ANR	6264936	Identifier	obt_as		6264754	0					
ANR	6264937	Identifier	endianness		6264754	1					
ANR	6264938	Identifier	endianness		6264754	1					
ANR	6264939	ExpressionStatement	"audio_pcm_init_info ( & hw -> info , & obt_as )"	67:4:820:860	6264754	20	True				
ANR	6264940	CallExpression	"audio_pcm_init_info ( & hw -> info , & obt_as )"		6264754	0					
ANR	6264941	Callee	audio_pcm_init_info		6264754	0					
ANR	6264942	Identifier	audio_pcm_init_info		6264754	0					
ANR	6264943	ArgumentList	& hw -> info		6264754	1					
ANR	6264944	Argument	& hw -> info		6264754	0					
ANR	6264945	UnaryOperationExpression	& hw -> info		6264754	0					
ANR	6264946	UnaryOperator	&		6264754	0					
ANR	6264947	PtrMemberAccess	hw -> info		6264754	1					
ANR	6264948	Identifier	hw		6264754	0					
ANR	6264949	Identifier	info		6264754	1					
ANR	6264950	Argument	& obt_as		6264754	1					
ANR	6264951	UnaryOperationExpression	& obt_as		6264754	0					
ANR	6264952	UnaryOperator	&		6264754	0					
ANR	6264953	Identifier	obt_as		6264754	1					
ANR	6264954	ExpressionStatement	oss -> nfrags = obt . nfrags	69:4:867:891	6264754	21	True				
ANR	6264955	AssignmentExpression	oss -> nfrags = obt . nfrags		6264754	0		=			
ANR	6264956	PtrMemberAccess	oss -> nfrags		6264754	0					
ANR	6264957	Identifier	oss		6264754	0					
ANR	6264958	Identifier	nfrags		6264754	1					
ANR	6264959	MemberAccess	obt . nfrags		6264754	1					
ANR	6264960	Identifier	obt		6264754	0					
ANR	6264961	Identifier	nfrags		6264754	1					
ANR	6264962	ExpressionStatement	oss -> fragsize = obt . fragsize	71:4:898:926	6264754	22	True				
ANR	6264963	AssignmentExpression	oss -> fragsize = obt . fragsize		6264754	0		=			
ANR	6264964	PtrMemberAccess	oss -> fragsize		6264754	0					
ANR	6264965	Identifier	oss		6264754	0					
ANR	6264966	Identifier	fragsize		6264754	1					
ANR	6264967	MemberAccess	obt . fragsize		6264754	1					
ANR	6264968	Identifier	obt		6264754	0					
ANR	6264969	Identifier	fragsize		6264754	1					
ANR	6264970	IfStatement	if ( obt . nfrags * obt . fragsize & hw -> info . align )		6264754	23					
ANR	6264971	Condition	obt . nfrags * obt . fragsize & hw -> info . align	75:8:939:980	6264754	0	True				
ANR	6264972	BitAndExpression	obt . nfrags * obt . fragsize & hw -> info . align		6264754	0		&			
ANR	6264973	MultiplicativeExpression	obt . nfrags * obt . fragsize		6264754	0		*			
ANR	6264974	MemberAccess	obt . nfrags		6264754	0					
ANR	6264975	Identifier	obt		6264754	0					
ANR	6264976	Identifier	nfrags		6264754	1					
ANR	6264977	MemberAccess	obt . fragsize		6264754	1					
ANR	6264978	Identifier	obt		6264754	0					
ANR	6264979	Identifier	fragsize		6264754	1					
ANR	6264980	MemberAccess	hw -> info . align		6264754	1					
ANR	6264981	PtrMemberAccess	hw -> info		6264754	0					
ANR	6264982	Identifier	hw		6264754	0					
ANR	6264983	Identifier	info		6264754	1					
ANR	6264984	Identifier	align		6264754	1					
ANR	6264985	CompoundStatement		73:52:916:916	6264754	1					
ANR	6264986	ExpressionStatement	"dolog ( ""warning: Misaligned DAC buffer, size %d, alignment %d\\n"" , obt . nfrags * obt . fragsize , hw -> info . align + 1 )"	77:8:994:1122	6264754	0	True				
ANR	6264987	CallExpression	"dolog ( ""warning: Misaligned DAC buffer, size %d, alignment %d\\n"" , obt . nfrags * obt . fragsize , hw -> info . align + 1 )"		6264754	0					
ANR	6264988	Callee	dolog		6264754	0					
ANR	6264989	Identifier	dolog		6264754	0					
ANR	6264990	ArgumentList	"""warning: Misaligned DAC buffer, size %d, alignment %d\\n"""		6264754	1					
ANR	6264991	Argument	"""warning: Misaligned DAC buffer, size %d, alignment %d\\n"""		6264754	0					
ANR	6264992	PrimaryExpression	"""warning: Misaligned DAC buffer, size %d, alignment %d\\n"""		6264754	0					
ANR	6264993	Argument	obt . nfrags * obt . fragsize		6264754	1					
ANR	6264994	MultiplicativeExpression	obt . nfrags * obt . fragsize		6264754	0		*			
ANR	6264995	MemberAccess	obt . nfrags		6264754	0					
ANR	6264996	Identifier	obt		6264754	0					
ANR	6264997	Identifier	nfrags		6264754	1					
ANR	6264998	MemberAccess	obt . fragsize		6264754	1					
ANR	6264999	Identifier	obt		6264754	0					
ANR	6265000	Identifier	fragsize		6264754	1					
ANR	6265001	Argument	hw -> info . align + 1		6264754	2					
ANR	6265002	AdditiveExpression	hw -> info . align + 1		6264754	0		+			
ANR	6265003	MemberAccess	hw -> info . align		6264754	0					
ANR	6265004	PtrMemberAccess	hw -> info		6264754	0					
ANR	6265005	Identifier	hw		6264754	0					
ANR	6265006	Identifier	info		6264754	1					
ANR	6265007	Identifier	align		6264754	1					
ANR	6265008	PrimaryExpression	1		6264754	1					
ANR	6265009	ExpressionStatement	hw -> samples = ( obt . nfrags * obt . fragsize ) >> hw -> info . shift	85:4:1138:1197	6264754	24	True				
ANR	6265010	AssignmentExpression	hw -> samples = ( obt . nfrags * obt . fragsize ) >> hw -> info . shift		6264754	0		=			
ANR	6265011	PtrMemberAccess	hw -> samples		6264754	0					
ANR	6265012	Identifier	hw		6264754	0					
ANR	6265013	Identifier	samples		6264754	1					
ANR	6265014	ShiftExpression	( obt . nfrags * obt . fragsize ) >> hw -> info . shift		6264754	1		>>			
ANR	6265015	MultiplicativeExpression	obt . nfrags * obt . fragsize		6264754	0		*			
ANR	6265016	MemberAccess	obt . nfrags		6264754	0					
ANR	6265017	Identifier	obt		6264754	0					
ANR	6265018	Identifier	nfrags		6264754	1					
ANR	6265019	MemberAccess	obt . fragsize		6264754	1					
ANR	6265020	Identifier	obt		6264754	0					
ANR	6265021	Identifier	fragsize		6264754	1					
ANR	6265022	MemberAccess	hw -> info . shift		6264754	1					
ANR	6265023	PtrMemberAccess	hw -> info		6264754	0					
ANR	6265024	Identifier	hw		6264754	0					
ANR	6265025	Identifier	info		6264754	1					
ANR	6265026	Identifier	shift		6264754	1					
ANR	6265027	ExpressionStatement	oss -> mmapped = 0	89:4:1206:1222	6264754	25	True				
ANR	6265028	AssignmentExpression	oss -> mmapped = 0		6264754	0		=			
ANR	6265029	PtrMemberAccess	oss -> mmapped		6264754	0					
ANR	6265030	Identifier	oss		6264754	0					
ANR	6265031	Identifier	mmapped		6264754	1					
ANR	6265032	PrimaryExpression	0		6264754	1					
ANR	6265033	IfStatement	if ( conf . try_mmap )		6264754	26					
ANR	6265034	Condition	conf . try_mmap	91:8:1233:1245	6264754	0	True				
ANR	6265035	MemberAccess	conf . try_mmap		6264754	0					
ANR	6265036	Identifier	conf		6264754	0					
ANR	6265037	Identifier	try_mmap		6264754	1					
ANR	6265038	CompoundStatement		89:23:1181:1181	6264754	1					
ANR	6265039	ExpressionStatement	"oss -> pcm_buf = mmap ( NULL , hw -> samples << hw -> info . shift , PROT_READ | PROT_WRITE , MAP_SHARED , fd , 0 )"	93:8:1259:1452	6264754	0	True				
ANR	6265040	AssignmentExpression	"oss -> pcm_buf = mmap ( NULL , hw -> samples << hw -> info . shift , PROT_READ | PROT_WRITE , MAP_SHARED , fd , 0 )"		6264754	0		=			
ANR	6265041	PtrMemberAccess	oss -> pcm_buf		6264754	0					
ANR	6265042	Identifier	oss		6264754	0					
ANR	6265043	Identifier	pcm_buf		6264754	1					
ANR	6265044	CallExpression	"mmap ( NULL , hw -> samples << hw -> info . shift , PROT_READ | PROT_WRITE , MAP_SHARED , fd , 0 )"		6264754	1					
ANR	6265045	Callee	mmap		6264754	0					
ANR	6265046	Identifier	mmap		6264754	0					
ANR	6265047	ArgumentList	NULL		6264754	1					
ANR	6265048	Argument	NULL		6264754	0					
ANR	6265049	Identifier	NULL		6264754	0					
ANR	6265050	Argument	hw -> samples << hw -> info . shift		6264754	1					
ANR	6265051	ShiftExpression	hw -> samples << hw -> info . shift		6264754	0		<<			
ANR	6265052	PtrMemberAccess	hw -> samples		6264754	0					
ANR	6265053	Identifier	hw		6264754	0					
ANR	6265054	Identifier	samples		6264754	1					
ANR	6265055	MemberAccess	hw -> info . shift		6264754	1					
ANR	6265056	PtrMemberAccess	hw -> info		6264754	0					
ANR	6265057	Identifier	hw		6264754	0					
ANR	6265058	Identifier	info		6264754	1					
ANR	6265059	Identifier	shift		6264754	1					
ANR	6265060	Argument	PROT_READ | PROT_WRITE		6264754	2					
ANR	6265061	InclusiveOrExpression	PROT_READ | PROT_WRITE		6264754	0		|			
ANR	6265062	Identifier	PROT_READ		6264754	0					
ANR	6265063	Identifier	PROT_WRITE		6264754	1					
ANR	6265064	Argument	MAP_SHARED		6264754	3					
ANR	6265065	Identifier	MAP_SHARED		6264754	0					
ANR	6265066	Argument	fd		6264754	4					
ANR	6265067	Identifier	fd		6264754	0					
ANR	6265068	Argument	0		6264754	5					
ANR	6265069	PrimaryExpression	0		6264754	0					
ANR	6265070	IfStatement	if ( oss -> pcm_buf == MAP_FAILED )		6264754	1					
ANR	6265071	Condition	oss -> pcm_buf == MAP_FAILED	109:12:1467:1492	6264754	0	True				
ANR	6265072	EqualityExpression	oss -> pcm_buf == MAP_FAILED		6264754	0		==			
ANR	6265073	PtrMemberAccess	oss -> pcm_buf		6264754	0					
ANR	6265074	Identifier	oss		6264754	0					
ANR	6265075	Identifier	pcm_buf		6264754	1					
ANR	6265076	Identifier	MAP_FAILED		6264754	1					
ANR	6265077	CompoundStatement		107:40:1428:1428	6264754	1					
ANR	6265078	ExpressionStatement	"oss_logerr ( errno , ""Failed to map %d bytes of DAC\\n"" , hw -> samples << hw -> info . shift )"	111:12:1510:1619	6264754	0	True				
ANR	6265079	CallExpression	"oss_logerr ( errno , ""Failed to map %d bytes of DAC\\n"" , hw -> samples << hw -> info . shift )"		6264754	0					
ANR	6265080	Callee	oss_logerr		6264754	0					
ANR	6265081	Identifier	oss_logerr		6264754	0					
ANR	6265082	ArgumentList	errno		6264754	1					
ANR	6265083	Argument	errno		6264754	0					
ANR	6265084	Identifier	errno		6264754	0					
ANR	6265085	Argument	"""Failed to map %d bytes of DAC\\n"""		6264754	1					
ANR	6265086	PrimaryExpression	"""Failed to map %d bytes of DAC\\n"""		6264754	0					
ANR	6265087	Argument	hw -> samples << hw -> info . shift		6264754	2					
ANR	6265088	ShiftExpression	hw -> samples << hw -> info . shift		6264754	0		<<			
ANR	6265089	PtrMemberAccess	hw -> samples		6264754	0					
ANR	6265090	Identifier	hw		6264754	0					
ANR	6265091	Identifier	samples		6264754	1					
ANR	6265092	MemberAccess	hw -> info . shift		6264754	1					
ANR	6265093	PtrMemberAccess	hw -> info		6264754	0					
ANR	6265094	Identifier	hw		6264754	0					
ANR	6265095	Identifier	info		6264754	1					
ANR	6265096	Identifier	shift		6264754	1					
ANR	6265097	ElseStatement	else		6264754	0					
ANR	6265098	CompoundStatement		119:12:1616:1628	6264754	0					
ANR	6265099	IdentifierDeclStatement	int err ;	119:12:1661:1668	6264754	0	True				
ANR	6265100	IdentifierDecl	err		6264754	0					
ANR	6265101	IdentifierDeclType	int		6264754	0					
ANR	6265102	Identifier	err		6264754	1					
ANR	6265103	IdentifierDeclStatement	int trig = 0 ;	121:12:1683:1695	6264754	1	True				
ANR	6265104	IdentifierDecl	trig = 0		6264754	0					
ANR	6265105	IdentifierDeclType	int		6264754	0					
ANR	6265106	Identifier	trig		6264754	1					
ANR	6265107	AssignmentExpression	trig = 0		6264754	2		=			
ANR	6265108	Identifier	trig		6264754	0					
ANR	6265109	PrimaryExpression	0		6264754	1					
ANR	6265110	IfStatement	"if ( ioctl ( fd , SNDCTL_DSP_SETTRIGGER , & trig ) < 0 )"		6264754	2					
ANR	6265111	Condition	"ioctl ( fd , SNDCTL_DSP_SETTRIGGER , & trig ) < 0"	123:16:1714:1757	6264754	0	True				
ANR	6265112	RelationalExpression	"ioctl ( fd , SNDCTL_DSP_SETTRIGGER , & trig ) < 0"		6264754	0		<			
ANR	6265113	CallExpression	"ioctl ( fd , SNDCTL_DSP_SETTRIGGER , & trig )"		6264754	0					
ANR	6265114	Callee	ioctl		6264754	0					
ANR	6265115	Identifier	ioctl		6264754	0					
ANR	6265116	ArgumentList	fd		6264754	1					
ANR	6265117	Argument	fd		6264754	0					
ANR	6265118	Identifier	fd		6264754	0					
ANR	6265119	Argument	SNDCTL_DSP_SETTRIGGER		6264754	1					
ANR	6265120	Identifier	SNDCTL_DSP_SETTRIGGER		6264754	0					
ANR	6265121	Argument	& trig		6264754	2					
ANR	6265122	UnaryOperationExpression	& trig		6264754	0					
ANR	6265123	UnaryOperator	&		6264754	0					
ANR	6265124	Identifier	trig		6264754	1					
ANR	6265125	PrimaryExpression	0		6264754	1					
ANR	6265126	CompoundStatement		121:62:1693:1693	6264754	1					
ANR	6265127	ExpressionStatement	"oss_logerr ( errno , ""SNDCTL_DSP_SETTRIGGER 0 failed\\n"" )"	125:16:1779:1833	6264754	0	True				
ANR	6265128	CallExpression	"oss_logerr ( errno , ""SNDCTL_DSP_SETTRIGGER 0 failed\\n"" )"		6264754	0					
ANR	6265129	Callee	oss_logerr		6264754	0					
ANR	6265130	Identifier	oss_logerr		6264754	0					
ANR	6265131	ArgumentList	errno		6264754	1					
ANR	6265132	Argument	errno		6264754	0					
ANR	6265133	Identifier	errno		6264754	0					
ANR	6265134	Argument	"""SNDCTL_DSP_SETTRIGGER 0 failed\\n"""		6264754	1					
ANR	6265135	PrimaryExpression	"""SNDCTL_DSP_SETTRIGGER 0 failed\\n"""		6264754	0					
ANR	6265136	ElseStatement	else		6264754	0					
ANR	6265137	CompoundStatement		127:17:1801:1801	6264754	0					
ANR	6265138	ExpressionStatement	trig = PCM_ENABLE_OUTPUT	131:16:1887:1911	6264754	0	True				
ANR	6265139	AssignmentExpression	trig = PCM_ENABLE_OUTPUT		6264754	0		=			
ANR	6265140	Identifier	trig		6264754	0					
ANR	6265141	Identifier	PCM_ENABLE_OUTPUT		6264754	1					
ANR	6265142	IfStatement	"if ( ioctl ( fd , SNDCTL_DSP_SETTRIGGER , & trig ) < 0 )"		6264754	1					
ANR	6265143	Condition	"ioctl ( fd , SNDCTL_DSP_SETTRIGGER , & trig ) < 0"	133:20:1934:1977	6264754	0	True				
ANR	6265144	RelationalExpression	"ioctl ( fd , SNDCTL_DSP_SETTRIGGER , & trig ) < 0"		6264754	0		<			
ANR	6265145	CallExpression	"ioctl ( fd , SNDCTL_DSP_SETTRIGGER , & trig )"		6264754	0					
ANR	6265146	Callee	ioctl		6264754	0					
ANR	6265147	Identifier	ioctl		6264754	0					
ANR	6265148	ArgumentList	fd		6264754	1					
ANR	6265149	Argument	fd		6264754	0					
ANR	6265150	Identifier	fd		6264754	0					
ANR	6265151	Argument	SNDCTL_DSP_SETTRIGGER		6264754	1					
ANR	6265152	Identifier	SNDCTL_DSP_SETTRIGGER		6264754	0					
ANR	6265153	Argument	& trig		6264754	2					
ANR	6265154	UnaryOperationExpression	& trig		6264754	0					
ANR	6265155	UnaryOperator	&		6264754	0					
ANR	6265156	Identifier	trig		6264754	1					
ANR	6265157	PrimaryExpression	0		6264754	1					
ANR	6265158	CompoundStatement		131:66:1913:1913	6264754	1					
ANR	6265159	ExpressionStatement	"oss_logerr ( errno , ""SNDCTL_DSP_SETTRIGGER PCM_ENABLE_OUTPUT failed\\n"" )"	135:20:2003:2150	6264754	0	True				
ANR	6265160	CallExpression	"oss_logerr ( errno , ""SNDCTL_DSP_SETTRIGGER PCM_ENABLE_OUTPUT failed\\n"" )"		6264754	0					
ANR	6265161	Callee	oss_logerr		6264754	0					
ANR	6265162	Identifier	oss_logerr		6264754	0					
ANR	6265163	ArgumentList	errno		6264754	1					
ANR	6265164	Argument	errno		6264754	0					
ANR	6265165	Identifier	errno		6264754	0					
ANR	6265166	Argument	"""SNDCTL_DSP_SETTRIGGER PCM_ENABLE_OUTPUT failed\\n"""		6264754	1					
ANR	6265167	PrimaryExpression	"""SNDCTL_DSP_SETTRIGGER PCM_ENABLE_OUTPUT failed\\n"""		6264754	0					
ANR	6265168	ElseStatement	else		6264754	0					
ANR	6265169	CompoundStatement		143:21:2126:2126	6264754	0					
ANR	6265170	ExpressionStatement	oss -> mmapped = 1	147:20:2216:2232	6264754	0	True				
ANR	6265171	AssignmentExpression	oss -> mmapped = 1		6264754	0		=			
ANR	6265172	PtrMemberAccess	oss -> mmapped		6264754	0					
ANR	6265173	Identifier	oss		6264754	0					
ANR	6265174	Identifier	mmapped		6264754	1					
ANR	6265175	PrimaryExpression	1		6264754	1					
ANR	6265176	IfStatement	if ( ! oss -> mmapped )		6264754	3					
ANR	6265177	Condition	! oss -> mmapped	155:16:2287:2299	6264754	0	True				
ANR	6265178	UnaryOperationExpression	! oss -> mmapped		6264754	0					
ANR	6265179	UnaryOperator	!		6264754	0					
ANR	6265180	PtrMemberAccess	oss -> mmapped		6264754	1					
ANR	6265181	Identifier	oss		6264754	0					
ANR	6265182	Identifier	mmapped		6264754	1					
ANR	6265183	CompoundStatement		153:31:2235:2235	6264754	1					
ANR	6265184	ExpressionStatement	"err = munmap ( oss -> pcm_buf , hw -> samples << hw -> info . shift )"	157:16:2321:2379	6264754	0	True				
ANR	6265185	AssignmentExpression	"err = munmap ( oss -> pcm_buf , hw -> samples << hw -> info . shift )"		6264754	0		=			
ANR	6265186	Identifier	err		6264754	0					
ANR	6265187	CallExpression	"munmap ( oss -> pcm_buf , hw -> samples << hw -> info . shift )"		6264754	1					
ANR	6265188	Callee	munmap		6264754	0					
ANR	6265189	Identifier	munmap		6264754	0					
ANR	6265190	ArgumentList	oss -> pcm_buf		6264754	1					
ANR	6265191	Argument	oss -> pcm_buf		6264754	0					
ANR	6265192	PtrMemberAccess	oss -> pcm_buf		6264754	0					
ANR	6265193	Identifier	oss		6264754	0					
ANR	6265194	Identifier	pcm_buf		6264754	1					
ANR	6265195	Argument	hw -> samples << hw -> info . shift		6264754	1					
ANR	6265196	ShiftExpression	hw -> samples << hw -> info . shift		6264754	0		<<			
ANR	6265197	PtrMemberAccess	hw -> samples		6264754	0					
ANR	6265198	Identifier	hw		6264754	0					
ANR	6265199	Identifier	samples		6264754	1					
ANR	6265200	MemberAccess	hw -> info . shift		6264754	1					
ANR	6265201	PtrMemberAccess	hw -> info		6264754	0					
ANR	6265202	Identifier	hw		6264754	0					
ANR	6265203	Identifier	info		6264754	1					
ANR	6265204	Identifier	shift		6264754	1					
ANR	6265205	IfStatement	if ( err )		6264754	1					
ANR	6265206	Condition	err	159:20:2402:2404	6264754	0	True				
ANR	6265207	Identifier	err		6264754	0					
ANR	6265208	CompoundStatement		157:25:2340:2340	6264754	1					
ANR	6265209	ExpressionStatement	"oss_logerr ( errno , ""Failed to unmap buffer %p size %d\\n"" , oss -> pcm_buf , hw -> samples << hw -> info . shift )"	161:20:2430:2565	6264754	0	True				
ANR	6265210	CallExpression	"oss_logerr ( errno , ""Failed to unmap buffer %p size %d\\n"" , oss -> pcm_buf , hw -> samples << hw -> info . shift )"		6264754	0					
ANR	6265211	Callee	oss_logerr		6264754	0					
ANR	6265212	Identifier	oss_logerr		6264754	0					
ANR	6265213	ArgumentList	errno		6264754	1					
ANR	6265214	Argument	errno		6264754	0					
ANR	6265215	Identifier	errno		6264754	0					
ANR	6265216	Argument	"""Failed to unmap buffer %p size %d\\n"""		6264754	1					
ANR	6265217	PrimaryExpression	"""Failed to unmap buffer %p size %d\\n"""		6264754	0					
ANR	6265218	Argument	oss -> pcm_buf		6264754	2					
ANR	6265219	PtrMemberAccess	oss -> pcm_buf		6264754	0					
ANR	6265220	Identifier	oss		6264754	0					
ANR	6265221	Identifier	pcm_buf		6264754	1					
ANR	6265222	Argument	hw -> samples << hw -> info . shift		6264754	3					
ANR	6265223	ShiftExpression	hw -> samples << hw -> info . shift		6264754	0		<<			
ANR	6265224	PtrMemberAccess	hw -> samples		6264754	0					
ANR	6265225	Identifier	hw		6264754	0					
ANR	6265226	Identifier	samples		6264754	1					
ANR	6265227	MemberAccess	hw -> info . shift		6264754	1					
ANR	6265228	PtrMemberAccess	hw -> info		6264754	0					
ANR	6265229	Identifier	hw		6264754	0					
ANR	6265230	Identifier	info		6264754	1					
ANR	6265231	Identifier	shift		6264754	1					
ANR	6265232	IfStatement	if ( ! oss -> mmapped )		6264754	27					
ANR	6265233	Condition	! oss -> mmapped	175:8:2630:2642	6264754	0	True				
ANR	6265234	UnaryOperationExpression	! oss -> mmapped		6264754	0					
ANR	6265235	UnaryOperator	!		6264754	0					
ANR	6265236	PtrMemberAccess	oss -> mmapped		6264754	1					
ANR	6265237	Identifier	oss		6264754	0					
ANR	6265238	Identifier	mmapped		6264754	1					
ANR	6265239	CompoundStatement		173:23:2578:2578	6264754	1					
ANR	6265240	ExpressionStatement	"oss -> pcm_buf = audio_calloc ( AUDIO_FUNC , hw -> samples , 1 << hw -> info . shift )"	177:8:2656:2784	6264754	0	True				
ANR	6265241	AssignmentExpression	"oss -> pcm_buf = audio_calloc ( AUDIO_FUNC , hw -> samples , 1 << hw -> info . shift )"		6264754	0		=			
ANR	6265242	PtrMemberAccess	oss -> pcm_buf		6264754	0					
ANR	6265243	Identifier	oss		6264754	0					
ANR	6265244	Identifier	pcm_buf		6264754	1					
ANR	6265245	CallExpression	"audio_calloc ( AUDIO_FUNC , hw -> samples , 1 << hw -> info . shift )"		6264754	1					
ANR	6265246	Callee	audio_calloc		6264754	0					
ANR	6265247	Identifier	audio_calloc		6264754	0					
ANR	6265248	ArgumentList	AUDIO_FUNC		6264754	1					
ANR	6265249	Argument	AUDIO_FUNC		6264754	0					
ANR	6265250	Identifier	AUDIO_FUNC		6264754	0					
ANR	6265251	Argument	hw -> samples		6264754	1					
ANR	6265252	PtrMemberAccess	hw -> samples		6264754	0					
ANR	6265253	Identifier	hw		6264754	0					
ANR	6265254	Identifier	samples		6264754	1					
ANR	6265255	Argument	1 << hw -> info . shift		6264754	2					
ANR	6265256	ShiftExpression	1 << hw -> info . shift		6264754	0		<<			
ANR	6265257	PrimaryExpression	1		6264754	0					
ANR	6265258	MemberAccess	hw -> info . shift		6264754	1					
ANR	6265259	PtrMemberAccess	hw -> info		6264754	0					
ANR	6265260	Identifier	hw		6264754	0					
ANR	6265261	Identifier	info		6264754	1					
ANR	6265262	Identifier	shift		6264754	1					
ANR	6265263	IfStatement	if ( ! oss -> pcm_buf )		6264754	1					
ANR	6265264	Condition	! oss -> pcm_buf	187:12:2799:2811	6264754	0	True				
ANR	6265265	UnaryOperationExpression	! oss -> pcm_buf		6264754	0					
ANR	6265266	UnaryOperator	!		6264754	0					
ANR	6265267	PtrMemberAccess	oss -> pcm_buf		6264754	1					
ANR	6265268	Identifier	oss		6264754	0					
ANR	6265269	Identifier	pcm_buf		6264754	1					
ANR	6265270	CompoundStatement		185:27:2747:2747	6264754	1					
ANR	6265271	ExpressionStatement	"dolog ( ""Could not allocate DAC buffer (%d samples, each %d bytes)\\n"" , hw -> samples , 1 << hw -> info . shift )"	189:12:2829:3002	6264754	0	True				
ANR	6265272	CallExpression	"dolog ( ""Could not allocate DAC buffer (%d samples, each %d bytes)\\n"" , hw -> samples , 1 << hw -> info . shift )"		6264754	0					
ANR	6265273	Callee	dolog		6264754	0					
ANR	6265274	Identifier	dolog		6264754	0					
ANR	6265275	ArgumentList	"""Could not allocate DAC buffer (%d samples, each %d bytes)\\n"""		6264754	1					
ANR	6265276	Argument	"""Could not allocate DAC buffer (%d samples, each %d bytes)\\n"""		6264754	0					
ANR	6265277	PrimaryExpression	"""Could not allocate DAC buffer (%d samples, each %d bytes)\\n"""		6264754	0					
ANR	6265278	Argument	hw -> samples		6264754	1					
ANR	6265279	PtrMemberAccess	hw -> samples		6264754	0					
ANR	6265280	Identifier	hw		6264754	0					
ANR	6265281	Identifier	samples		6264754	1					
ANR	6265282	Argument	1 << hw -> info . shift		6264754	2					
ANR	6265283	ShiftExpression	1 << hw -> info . shift		6264754	0		<<			
ANR	6265284	PrimaryExpression	1		6264754	0					
ANR	6265285	MemberAccess	hw -> info . shift		6264754	1					
ANR	6265286	PtrMemberAccess	hw -> info		6264754	0					
ANR	6265287	Identifier	hw		6264754	0					
ANR	6265288	Identifier	info		6264754	1					
ANR	6265289	Identifier	shift		6264754	1					
ANR	6265290	ExpressionStatement	oss_anal_close ( & fd )	199:12:3017:3037	6264754	1	True				
ANR	6265291	CallExpression	oss_anal_close ( & fd )		6264754	0					
ANR	6265292	Callee	oss_anal_close		6264754	0					
ANR	6265293	Identifier	oss_anal_close		6264754	0					
ANR	6265294	ArgumentList	& fd		6264754	1					
ANR	6265295	Argument	& fd		6264754	0					
ANR	6265296	UnaryOperationExpression	& fd		6264754	0					
ANR	6265297	UnaryOperator	&		6264754	0					
ANR	6265298	Identifier	fd		6264754	1					
ANR	6265299	ReturnStatement	return - 1 ;	201:12:3052:3061	6264754	2	True				
ANR	6265300	UnaryOperationExpression	- 1		6264754	0					
ANR	6265301	UnaryOperator	-		6264754	0					
ANR	6265302	PrimaryExpression	1		6264754	1					
ANR	6265303	ExpressionStatement	oss -> fd = fd	209:4:3088:3100	6264754	28	True				
ANR	6265304	AssignmentExpression	oss -> fd = fd		6264754	0		=			
ANR	6265305	PtrMemberAccess	oss -> fd		6264754	0					
ANR	6265306	Identifier	oss		6264754	0					
ANR	6265307	Identifier	fd		6264754	1					
ANR	6265308	Identifier	fd		6264754	1					
ANR	6265309	ReturnStatement	return 0 ;	211:4:3107:3115	6264754	29	True				
ANR	6265310	PrimaryExpression	0		6264754	0					
ANR	6265311	ReturnType	static int		6264754	1					
ANR	6265312	Identifier	oss_init_out		6264754	2					
ANR	6265313	ParameterList	"HWVoiceOut * hw , struct audsettings * as"		6264754	3					
ANR	6265314	Parameter	HWVoiceOut * hw	1:25:25:38	6264754	0	True				
ANR	6265315	ParameterType	HWVoiceOut *		6264754	0					
ANR	6265316	Identifier	hw		6264754	1					
ANR	6265317	Parameter	struct audsettings * as	1:41:41:62	6264754	1	True				
ANR	6265318	ParameterType	struct audsettings *		6264754	0					
ANR	6265319	Identifier	as		6264754	1					
ANR	6265320	CFGEntryNode	ENTRY		6264754		True				
ANR	6265321	CFGExitNode	EXIT		6264754		True				
ANR	6265322	Symbol	obt		6264754						
ANR	6265323	Symbol	as -> nchannels		6264754						
ANR	6265324	Symbol	obt . nchannels		6264754						
ANR	6265325	Symbol	& req		6264754						
ANR	6265326	Symbol	& trig		6264754						
ANR	6265327	Symbol	conf		6264754						
ANR	6265328	Symbol	oss		6264754						
ANR	6265329	Symbol	hw		6264754						
ANR	6265330	Symbol	as -> endianness		6264754						
ANR	6265331	Symbol	req . nfrags		6264754						
ANR	6265332	Symbol	obt_as . endianness		6264754						
ANR	6265333	Symbol	PROT_WRITE		6264754						
ANR	6265334	Symbol	req . nchannels		6264754						
ANR	6265335	Symbol	& effective_fmt		6264754						
ANR	6265336	Symbol	SNDCTL_DSP_SETTRIGGER		6264754						
ANR	6265337	Symbol	audio_calloc		6264754						
ANR	6265338	Symbol	obt_as . fmt		6264754						
ANR	6265339	Symbol	obt_as . freq		6264754						
ANR	6265340	Symbol	req		6264754						
ANR	6265341	Symbol	& hw -> info		6264754						
ANR	6265342	Symbol	& obt		6264754						
ANR	6265343	Symbol	errno		6264754						
ANR	6265344	Symbol	NULL		6264754						
ANR	6265345	Symbol	oss_to_audfmt		6264754						
ANR	6265346	Symbol	obt_as . nchannels		6264754						
ANR	6265347	Symbol	hw -> info		6264754						
ANR	6265348	Symbol	obt . nfrags		6264754						
ANR	6265349	Symbol	PROT_READ		6264754						
ANR	6265350	Symbol	trig		6264754						
ANR	6265351	Symbol	& endianness		6264754						
ANR	6265352	Symbol	AUDIO_FUNC		6264754						
ANR	6265353	Symbol	oss -> pcm_buf		6264754						
ANR	6265354	Symbol	as		6264754						
ANR	6265355	Symbol	conf . fragsize		6264754						
ANR	6265356	Symbol	MAP_SHARED		6264754						
ANR	6265357	Symbol	obt_as		6264754						
ANR	6265358	Symbol	req . fmt		6264754						
ANR	6265359	Symbol	req . fragsize		6264754						
ANR	6265360	Symbol	oss -> mmapped		6264754						
ANR	6265361	Symbol	fd		6264754						
ANR	6265362	Symbol	req . freq		6264754						
ANR	6265363	Symbol	oss_open		6264754						
ANR	6265364	Symbol	hw -> info . align		6264754						
ANR	6265365	Symbol	hw -> info . shift		6264754						
ANR	6265366	Symbol	conf . nfrags		6264754						
ANR	6265367	Symbol	oss -> fd		6264754						
ANR	6265368	Symbol	MAP_FAILED		6264754						
ANR	6265369	Symbol	ioctl		6264754						
ANR	6265370	Symbol	& obt_as		6264754						
ANR	6265371	Symbol	* hw		6264754						
ANR	6265372	Symbol	obt . fmt		6264754						
ANR	6265373	Symbol	effective_fmt		6264754						
ANR	6265374	Symbol	err		6264754						
ANR	6265375	Symbol	obt . freq		6264754						
ANR	6265376	Symbol	aud_to_ossfmt		6264754						
ANR	6265377	Symbol	hw -> samples		6264754						
ANR	6265378	Symbol	conf . try_mmap		6264754						
ANR	6265379	Symbol	& fd		6264754						
ANR	6265380	Symbol	obt . fragsize		6264754						
ANR	6265381	Symbol	as -> fmt		6264754						
ANR	6265382	Symbol	PCM_ENABLE_OUTPUT		6264754						
ANR	6265383	Symbol	munmap		6264754						
ANR	6265384	Symbol	oss -> fragsize		6264754						
ANR	6265385	Symbol	as -> freq		6264754						
ANR	6265386	Symbol	oss -> nfrags		6264754						
ANR	6265387	Symbol	* oss		6264754						
ANR	6265388	Symbol	* as		6264754						
ANR	6265389	Symbol	mmap		6264754						
ANR	6265390	Symbol	endianness		6264754						
