command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1907123	File	/home/p4ultr4n/workplace/ReVeal/raw_code/decode_mb_coeffs_1.c								
ANR	1907124	Function	decode_mb_coeffs	1:0:0:2657							
ANR	1907125	FunctionDef	"decode_mb_coeffs (VP8Context * s , VP8ThreadData * td , VP56RangeCoder * c , VP8Macroblock * mb , uint8_t t_nnz [ 9 ] , uint8_t l_nnz [ 9 ])"		1907124	0					
ANR	1907126	CompoundStatement		5:0:154:2657	1907124	0					
ANR	1907127	IdentifierDeclStatement	"int i , x , y , luma_start = 0 , luma_ctx = 3 ;"	7:4:161:202	1907124	0	True				
ANR	1907128	IdentifierDecl	i		1907124	0					
ANR	1907129	IdentifierDeclType	int		1907124	0					
ANR	1907130	Identifier	i		1907124	1					
ANR	1907131	IdentifierDecl	x		1907124	1					
ANR	1907132	IdentifierDeclType	int		1907124	0					
ANR	1907133	Identifier	x		1907124	1					
ANR	1907134	IdentifierDecl	y		1907124	2					
ANR	1907135	IdentifierDeclType	int		1907124	0					
ANR	1907136	Identifier	y		1907124	1					
ANR	1907137	IdentifierDecl	luma_start = 0		1907124	3					
ANR	1907138	IdentifierDeclType	int		1907124	0					
ANR	1907139	Identifier	luma_start		1907124	1					
ANR	1907140	AssignmentExpression	luma_start = 0		1907124	2		=			
ANR	1907141	Identifier	luma_start		1907124	0					
ANR	1907142	PrimaryExpression	0		1907124	1					
ANR	1907143	IdentifierDecl	luma_ctx = 3		1907124	4					
ANR	1907144	IdentifierDeclType	int		1907124	0					
ANR	1907145	Identifier	luma_ctx		1907124	1					
ANR	1907146	AssignmentExpression	luma_ctx = 3		1907124	2		=			
ANR	1907147	Identifier	luma_ctx		1907124	0					
ANR	1907148	PrimaryExpression	3		1907124	1					
ANR	1907149	IdentifierDeclStatement	"int nnz_pred , nnz , nnz_total = 0 ;"	9:4:209:241	1907124	1	True				
ANR	1907150	IdentifierDecl	nnz_pred		1907124	0					
ANR	1907151	IdentifierDeclType	int		1907124	0					
ANR	1907152	Identifier	nnz_pred		1907124	1					
ANR	1907153	IdentifierDecl	nnz		1907124	1					
ANR	1907154	IdentifierDeclType	int		1907124	0					
ANR	1907155	Identifier	nnz		1907124	1					
ANR	1907156	IdentifierDecl	nnz_total = 0		1907124	2					
ANR	1907157	IdentifierDeclType	int		1907124	0					
ANR	1907158	Identifier	nnz_total		1907124	1					
ANR	1907159	AssignmentExpression	nnz_total = 0		1907124	2		=			
ANR	1907160	Identifier	nnz_total		1907124	0					
ANR	1907161	PrimaryExpression	0		1907124	1					
ANR	1907162	IdentifierDeclStatement	int segment = mb -> segment ;	11:4:248:273	1907124	2	True				
ANR	1907163	IdentifierDecl	segment = mb -> segment		1907124	0					
ANR	1907164	IdentifierDeclType	int		1907124	0					
ANR	1907165	Identifier	segment		1907124	1					
ANR	1907166	AssignmentExpression	segment = mb -> segment		1907124	2		=			
ANR	1907167	Identifier	segment		1907124	0					
ANR	1907168	PtrMemberAccess	mb -> segment		1907124	1					
ANR	1907169	Identifier	mb		1907124	0					
ANR	1907170	Identifier	segment		1907124	1					
ANR	1907171	IdentifierDeclStatement	int block_dc = 0 ;	13:4:280:296	1907124	3	True				
ANR	1907172	IdentifierDecl	block_dc = 0		1907124	0					
ANR	1907173	IdentifierDeclType	int		1907124	0					
ANR	1907174	Identifier	block_dc		1907124	1					
ANR	1907175	AssignmentExpression	block_dc = 0		1907124	2		=			
ANR	1907176	Identifier	block_dc		1907124	0					
ANR	1907177	PrimaryExpression	0		1907124	1					
ANR	1907178	IfStatement	if ( mb -> mode != MODE_I4x4 && mb -> mode != VP8_MVMODE_SPLIT )		1907124	4					
ANR	1907179	Condition	mb -> mode != MODE_I4x4 && mb -> mode != VP8_MVMODE_SPLIT	17:8:309:361	1907124	0	True				
ANR	1907180	AndExpression	mb -> mode != MODE_I4x4 && mb -> mode != VP8_MVMODE_SPLIT		1907124	0		&&			
ANR	1907181	EqualityExpression	mb -> mode != MODE_I4x4		1907124	0		!=			
ANR	1907182	PtrMemberAccess	mb -> mode		1907124	0					
ANR	1907183	Identifier	mb		1907124	0					
ANR	1907184	Identifier	mode		1907124	1					
ANR	1907185	Identifier	MODE_I4x4		1907124	1					
ANR	1907186	EqualityExpression	mb -> mode != VP8_MVMODE_SPLIT		1907124	1		!=			
ANR	1907187	PtrMemberAccess	mb -> mode		1907124	0					
ANR	1907188	Identifier	mb		1907124	0					
ANR	1907189	Identifier	mode		1907124	1					
ANR	1907190	Identifier	VP8_MVMODE_SPLIT		1907124	1					
ANR	1907191	CompoundStatement		13:63:209:209	1907124	1					
ANR	1907192	ExpressionStatement	nnz_pred = t_nnz [ 8 ] + l_nnz [ 8 ]	19:8:375:405	1907124	0	True				
ANR	1907193	AssignmentExpression	nnz_pred = t_nnz [ 8 ] + l_nnz [ 8 ]		1907124	0		=			
ANR	1907194	Identifier	nnz_pred		1907124	0					
ANR	1907195	AdditiveExpression	t_nnz [ 8 ] + l_nnz [ 8 ]		1907124	1		+			
ANR	1907196	ArrayIndexing	t_nnz [ 8 ]		1907124	0					
ANR	1907197	Identifier	t_nnz		1907124	0					
ANR	1907198	PrimaryExpression	8		1907124	1					
ANR	1907199	ArrayIndexing	l_nnz [ 8 ]		1907124	1					
ANR	1907200	Identifier	l_nnz		1907124	0					
ANR	1907201	PrimaryExpression	8		1907124	1					
ANR	1907202	ExpressionStatement	"nnz = decode_block_coeffs ( c , td -> block_dc , s -> prob -> token [ 1 ] , 0 , nnz_pred , s -> qmat [ segment ] . luma_dc_qmul )"	25:8:463:603	1907124	1	True				
ANR	1907203	AssignmentExpression	"nnz = decode_block_coeffs ( c , td -> block_dc , s -> prob -> token [ 1 ] , 0 , nnz_pred , s -> qmat [ segment ] . luma_dc_qmul )"		1907124	0		=			
ANR	1907204	Identifier	nnz		1907124	0					
ANR	1907205	CallExpression	"decode_block_coeffs ( c , td -> block_dc , s -> prob -> token [ 1 ] , 0 , nnz_pred , s -> qmat [ segment ] . luma_dc_qmul )"		1907124	1					
ANR	1907206	Callee	decode_block_coeffs		1907124	0					
ANR	1907207	Identifier	decode_block_coeffs		1907124	0					
ANR	1907208	ArgumentList	c		1907124	1					
ANR	1907209	Argument	c		1907124	0					
ANR	1907210	Identifier	c		1907124	0					
ANR	1907211	Argument	td -> block_dc		1907124	1					
ANR	1907212	PtrMemberAccess	td -> block_dc		1907124	0					
ANR	1907213	Identifier	td		1907124	0					
ANR	1907214	Identifier	block_dc		1907124	1					
ANR	1907215	Argument	s -> prob -> token [ 1 ]		1907124	2					
ANR	1907216	ArrayIndexing	s -> prob -> token [ 1 ]		1907124	0					
ANR	1907217	PtrMemberAccess	s -> prob -> token		1907124	0					
ANR	1907218	PtrMemberAccess	s -> prob		1907124	0					
ANR	1907219	Identifier	s		1907124	0					
ANR	1907220	Identifier	prob		1907124	1					
ANR	1907221	Identifier	token		1907124	1					
ANR	1907222	PrimaryExpression	1		1907124	1					
ANR	1907223	Argument	0		1907124	3					
ANR	1907224	PrimaryExpression	0		1907124	0					
ANR	1907225	Argument	nnz_pred		1907124	4					
ANR	1907226	Identifier	nnz_pred		1907124	0					
ANR	1907227	Argument	s -> qmat [ segment ] . luma_dc_qmul		1907124	5					
ANR	1907228	MemberAccess	s -> qmat [ segment ] . luma_dc_qmul		1907124	0					
ANR	1907229	ArrayIndexing	s -> qmat [ segment ]		1907124	0					
ANR	1907230	PtrMemberAccess	s -> qmat		1907124	0					
ANR	1907231	Identifier	s		1907124	0					
ANR	1907232	Identifier	qmat		1907124	1					
ANR	1907233	Identifier	segment		1907124	1					
ANR	1907234	Identifier	luma_dc_qmul		1907124	1					
ANR	1907235	ExpressionStatement	l_nnz [ 8 ] = t_nnz [ 8 ] = ! ! nnz	29:8:614:641	1907124	2	True				
ANR	1907236	AssignmentExpression	l_nnz [ 8 ] = t_nnz [ 8 ] = ! ! nnz		1907124	0		=			
ANR	1907237	ArrayIndexing	l_nnz [ 8 ]		1907124	0					
ANR	1907238	Identifier	l_nnz		1907124	0					
ANR	1907239	PrimaryExpression	8		1907124	1					
ANR	1907240	AssignmentExpression	t_nnz [ 8 ] = ! ! nnz		1907124	1		=			
ANR	1907241	ArrayIndexing	t_nnz [ 8 ]		1907124	0					
ANR	1907242	Identifier	t_nnz		1907124	0					
ANR	1907243	PrimaryExpression	8		1907124	1					
ANR	1907244	UnaryOperationExpression	! ! nnz		1907124	1					
ANR	1907245	UnaryOperator	!		1907124	0					
ANR	1907246	UnaryOperationExpression	! nnz		1907124	1					
ANR	1907247	UnaryOperator	!		1907124	0					
ANR	1907248	Identifier	nnz		1907124	1					
ANR	1907249	IfStatement	if ( nnz )		1907124	3					
ANR	1907250	Condition	nnz	31:12:656:658	1907124	0	True				
ANR	1907251	Identifier	nnz		1907124	0					
ANR	1907252	CompoundStatement		27:17:506:506	1907124	1					
ANR	1907253	ExpressionStatement	nnz_total += nnz	33:12:676:692	1907124	0	True				
ANR	1907254	AssignmentExpression	nnz_total += nnz		1907124	0		+=			
ANR	1907255	Identifier	nnz_total		1907124	0					
ANR	1907256	Identifier	nnz		1907124	1					
ANR	1907257	ExpressionStatement	block_dc = 1	35:12:707:721	1907124	1	True				
ANR	1907258	AssignmentExpression	block_dc = 1		1907124	0		=			
ANR	1907259	Identifier	block_dc		1907124	0					
ANR	1907260	PrimaryExpression	1		1907124	1					
ANR	1907261	IfStatement	if ( nnz == 1 )		1907124	2					
ANR	1907262	Condition	nnz == 1	37:16:740:747	1907124	0	True				
ANR	1907263	EqualityExpression	nnz == 1		1907124	0		==			
ANR	1907264	Identifier	nnz		1907124	0					
ANR	1907265	PrimaryExpression	1		1907124	1					
ANR	1907266	ExpressionStatement	"s -> vp8dsp . vp8_luma_dc_wht_dc ( td -> block , td -> block_dc )"	39:16:767:820	1907124	1	True				
ANR	1907267	CallExpression	"s -> vp8dsp . vp8_luma_dc_wht_dc ( td -> block , td -> block_dc )"		1907124	0					
ANR	1907268	Callee	s -> vp8dsp . vp8_luma_dc_wht_dc		1907124	0					
ANR	1907269	MemberAccess	s -> vp8dsp . vp8_luma_dc_wht_dc		1907124	0					
ANR	1907270	PtrMemberAccess	s -> vp8dsp		1907124	0					
ANR	1907271	Identifier	s		1907124	0					
ANR	1907272	Identifier	vp8dsp		1907124	1					
ANR	1907273	Identifier	vp8_luma_dc_wht_dc		1907124	1					
ANR	1907274	ArgumentList	td -> block		1907124	1					
ANR	1907275	Argument	td -> block		1907124	0					
ANR	1907276	PtrMemberAccess	td -> block		1907124	0					
ANR	1907277	Identifier	td		1907124	0					
ANR	1907278	Identifier	block		1907124	1					
ANR	1907279	Argument	td -> block_dc		1907124	1					
ANR	1907280	PtrMemberAccess	td -> block_dc		1907124	0					
ANR	1907281	Identifier	td		1907124	0					
ANR	1907282	Identifier	block_dc		1907124	1					
ANR	1907283	ElseStatement	else		1907124	0					
ANR	1907284	ExpressionStatement	"s -> vp8dsp . vp8_luma_dc_wht ( td -> block , td -> block_dc )"	43:16:857:907	1907124	0	True				
ANR	1907285	CallExpression	"s -> vp8dsp . vp8_luma_dc_wht ( td -> block , td -> block_dc )"		1907124	0					
ANR	1907286	Callee	s -> vp8dsp . vp8_luma_dc_wht		1907124	0					
ANR	1907287	MemberAccess	s -> vp8dsp . vp8_luma_dc_wht		1907124	0					
ANR	1907288	PtrMemberAccess	s -> vp8dsp		1907124	0					
ANR	1907289	Identifier	s		1907124	0					
ANR	1907290	Identifier	vp8dsp		1907124	1					
ANR	1907291	Identifier	vp8_luma_dc_wht		1907124	1					
ANR	1907292	ArgumentList	td -> block		1907124	1					
ANR	1907293	Argument	td -> block		1907124	0					
ANR	1907294	PtrMemberAccess	td -> block		1907124	0					
ANR	1907295	Identifier	td		1907124	0					
ANR	1907296	Identifier	block		1907124	1					
ANR	1907297	Argument	td -> block_dc		1907124	1					
ANR	1907298	PtrMemberAccess	td -> block_dc		1907124	0					
ANR	1907299	Identifier	td		1907124	0					
ANR	1907300	Identifier	block_dc		1907124	1					
ANR	1907301	ExpressionStatement	luma_start = 1	47:8:929:943	1907124	4	True				
ANR	1907302	AssignmentExpression	luma_start = 1		1907124	0		=			
ANR	1907303	Identifier	luma_start		1907124	0					
ANR	1907304	PrimaryExpression	1		1907124	1					
ANR	1907305	ExpressionStatement	luma_ctx = 0	49:8:954:968	1907124	5	True				
ANR	1907306	AssignmentExpression	luma_ctx = 0		1907124	0		=			
ANR	1907307	Identifier	luma_ctx		1907124	0					
ANR	1907308	PrimaryExpression	0		1907124	1					
ANR	1907309	ForStatement	for ( y = 0 ; y < 4 ; y ++ )		1907124	5					
ANR	1907310	ForInit	y = 0 ;	57:9:1009:1014	1907124	0	True				
ANR	1907311	AssignmentExpression	y = 0		1907124	0		=			
ANR	1907312	Identifier	y		1907124	0					
ANR	1907313	PrimaryExpression	0		1907124	1					
ANR	1907314	Condition	y < 4	57:16:1016:1020	1907124	1	True				
ANR	1907315	RelationalExpression	y < 4		1907124	0		<			
ANR	1907316	Identifier	y		1907124	0					
ANR	1907317	PrimaryExpression	4		1907124	1					
ANR	1907318	PostIncDecOperationExpression	y ++	57:23:1023:1025	1907124	2	True				
ANR	1907319	Identifier	y		1907124	0					
ANR	1907320	IncDec	++		1907124	1					
ANR	1907321	ForStatement	for ( x = 0 ; x < 4 ; x ++ )		1907124	3					
ANR	1907322	ForInit	x = 0 ;	59:13:1042:1047	1907124	0	True				
ANR	1907323	AssignmentExpression	x = 0		1907124	0		=			
ANR	1907324	Identifier	x		1907124	0					
ANR	1907325	PrimaryExpression	0		1907124	1					
ANR	1907326	Condition	x < 4	59:20:1049:1053	1907124	1	True				
ANR	1907327	RelationalExpression	x < 4		1907124	0		<			
ANR	1907328	Identifier	x		1907124	0					
ANR	1907329	PrimaryExpression	4		1907124	1					
ANR	1907330	PostIncDecOperationExpression	x ++	59:27:1056:1058	1907124	2	True				
ANR	1907331	Identifier	x		1907124	0					
ANR	1907332	IncDec	++		1907124	1					
ANR	1907333	CompoundStatement		55:32:906:906	1907124	3					
ANR	1907334	ExpressionStatement	nnz_pred = l_nnz [ y ] + t_nnz [ x ]	61:12:1076:1106	1907124	0	True				
ANR	1907335	AssignmentExpression	nnz_pred = l_nnz [ y ] + t_nnz [ x ]		1907124	0		=			
ANR	1907336	Identifier	nnz_pred		1907124	0					
ANR	1907337	AdditiveExpression	l_nnz [ y ] + t_nnz [ x ]		1907124	1		+			
ANR	1907338	ArrayIndexing	l_nnz [ y ]		1907124	0					
ANR	1907339	Identifier	l_nnz		1907124	0					
ANR	1907340	Identifier	y		1907124	1					
ANR	1907341	ArrayIndexing	t_nnz [ x ]		1907124	1					
ANR	1907342	Identifier	t_nnz		1907124	0					
ANR	1907343	Identifier	x		1907124	1					
ANR	1907344	ExpressionStatement	"nnz = decode_block_coeffs ( c , td -> block [ y ] [ x ] , s -> prob -> token [ luma_ctx ] , luma_start , nnz_pred , s -> qmat [ segment ] . luma_qmul )"	63:12:1121:1359	1907124	1	True				
ANR	1907345	AssignmentExpression	"nnz = decode_block_coeffs ( c , td -> block [ y ] [ x ] , s -> prob -> token [ luma_ctx ] , luma_start , nnz_pred , s -> qmat [ segment ] . luma_qmul )"		1907124	0		=			
ANR	1907346	Identifier	nnz		1907124	0					
ANR	1907347	CallExpression	"decode_block_coeffs ( c , td -> block [ y ] [ x ] , s -> prob -> token [ luma_ctx ] , luma_start , nnz_pred , s -> qmat [ segment ] . luma_qmul )"		1907124	1					
ANR	1907348	Callee	decode_block_coeffs		1907124	0					
ANR	1907349	Identifier	decode_block_coeffs		1907124	0					
ANR	1907350	ArgumentList	c		1907124	1					
ANR	1907351	Argument	c		1907124	0					
ANR	1907352	Identifier	c		1907124	0					
ANR	1907353	Argument	td -> block [ y ] [ x ]		1907124	1					
ANR	1907354	ArrayIndexing	td -> block [ y ] [ x ]		1907124	0					
ANR	1907355	ArrayIndexing	td -> block [ y ]		1907124	0					
ANR	1907356	PtrMemberAccess	td -> block		1907124	0					
ANR	1907357	Identifier	td		1907124	0					
ANR	1907358	Identifier	block		1907124	1					
ANR	1907359	Identifier	y		1907124	1					
ANR	1907360	Identifier	x		1907124	1					
ANR	1907361	Argument	s -> prob -> token [ luma_ctx ]		1907124	2					
ANR	1907362	ArrayIndexing	s -> prob -> token [ luma_ctx ]		1907124	0					
ANR	1907363	PtrMemberAccess	s -> prob -> token		1907124	0					
ANR	1907364	PtrMemberAccess	s -> prob		1907124	0					
ANR	1907365	Identifier	s		1907124	0					
ANR	1907366	Identifier	prob		1907124	1					
ANR	1907367	Identifier	token		1907124	1					
ANR	1907368	Identifier	luma_ctx		1907124	1					
ANR	1907369	Argument	luma_start		1907124	3					
ANR	1907370	Identifier	luma_start		1907124	0					
ANR	1907371	Argument	nnz_pred		1907124	4					
ANR	1907372	Identifier	nnz_pred		1907124	0					
ANR	1907373	Argument	s -> qmat [ segment ] . luma_qmul		1907124	5					
ANR	1907374	MemberAccess	s -> qmat [ segment ] . luma_qmul		1907124	0					
ANR	1907375	ArrayIndexing	s -> qmat [ segment ]		1907124	0					
ANR	1907376	PtrMemberAccess	s -> qmat		1907124	0					
ANR	1907377	Identifier	s		1907124	0					
ANR	1907378	Identifier	qmat		1907124	1					
ANR	1907379	Identifier	segment		1907124	1					
ANR	1907380	Identifier	luma_qmul		1907124	1					
ANR	1907381	ExpressionStatement	td -> non_zero_count_cache [ y ] [ x ] = nnz + block_dc	75:12:1484:1531	1907124	2	True				
ANR	1907382	AssignmentExpression	td -> non_zero_count_cache [ y ] [ x ] = nnz + block_dc		1907124	0		=			
ANR	1907383	ArrayIndexing	td -> non_zero_count_cache [ y ] [ x ]		1907124	0					
ANR	1907384	ArrayIndexing	td -> non_zero_count_cache [ y ]		1907124	0					
ANR	1907385	PtrMemberAccess	td -> non_zero_count_cache		1907124	0					
ANR	1907386	Identifier	td		1907124	0					
ANR	1907387	Identifier	non_zero_count_cache		1907124	1					
ANR	1907388	Identifier	y		1907124	1					
ANR	1907389	Identifier	x		1907124	1					
ANR	1907390	AdditiveExpression	nnz + block_dc		1907124	1		+			
ANR	1907391	Identifier	nnz		1907124	0					
ANR	1907392	Identifier	block_dc		1907124	1					
ANR	1907393	ExpressionStatement	t_nnz [ x ] = l_nnz [ y ] = ! ! nnz	77:12:1546:1573	1907124	3	True				
ANR	1907394	AssignmentExpression	t_nnz [ x ] = l_nnz [ y ] = ! ! nnz		1907124	0		=			
ANR	1907395	ArrayIndexing	t_nnz [ x ]		1907124	0					
ANR	1907396	Identifier	t_nnz		1907124	0					
ANR	1907397	Identifier	x		1907124	1					
ANR	1907398	AssignmentExpression	l_nnz [ y ] = ! ! nnz		1907124	1		=			
ANR	1907399	ArrayIndexing	l_nnz [ y ]		1907124	0					
ANR	1907400	Identifier	l_nnz		1907124	0					
ANR	1907401	Identifier	y		1907124	1					
ANR	1907402	UnaryOperationExpression	! ! nnz		1907124	1					
ANR	1907403	UnaryOperator	!		1907124	0					
ANR	1907404	UnaryOperationExpression	! nnz		1907124	1					
ANR	1907405	UnaryOperator	!		1907124	0					
ANR	1907406	Identifier	nnz		1907124	1					
ANR	1907407	ExpressionStatement	nnz_total += nnz	79:12:1588:1604	1907124	4	True				
ANR	1907408	AssignmentExpression	nnz_total += nnz		1907124	0		+=			
ANR	1907409	Identifier	nnz_total		1907124	0					
ANR	1907410	Identifier	nnz		1907124	1					
ANR	1907411	ForStatement	for ( i = 4 ; i < 6 ; i ++ )		1907124	6					
ANR	1907412	ForInit	i = 4 ;	91:9:1754:1759	1907124	0	True				
ANR	1907413	AssignmentExpression	i = 4		1907124	0		=			
ANR	1907414	Identifier	i		1907124	0					
ANR	1907415	PrimaryExpression	4		1907124	1					
ANR	1907416	Condition	i < 6	91:16:1761:1765	1907124	1	True				
ANR	1907417	RelationalExpression	i < 6		1907124	0		<			
ANR	1907418	Identifier	i		1907124	0					
ANR	1907419	PrimaryExpression	6		1907124	1					
ANR	1907420	PostIncDecOperationExpression	i ++	91:23:1768:1770	1907124	2	True				
ANR	1907421	Identifier	i		1907124	0					
ANR	1907422	IncDec	++		1907124	1					
ANR	1907423	ForStatement	for ( y = 0 ; y < 2 ; y ++ )		1907124	3					
ANR	1907424	ForInit	y = 0 ;	93:13:1787:1792	1907124	0	True				
ANR	1907425	AssignmentExpression	y = 0		1907124	0		=			
ANR	1907426	Identifier	y		1907124	0					
ANR	1907427	PrimaryExpression	0		1907124	1					
ANR	1907428	Condition	y < 2	93:20:1794:1798	1907124	1	True				
ANR	1907429	RelationalExpression	y < 2		1907124	0		<			
ANR	1907430	Identifier	y		1907124	0					
ANR	1907431	PrimaryExpression	2		1907124	1					
ANR	1907432	PostIncDecOperationExpression	y ++	93:27:1801:1803	1907124	2	True				
ANR	1907433	Identifier	y		1907124	0					
ANR	1907434	IncDec	++		1907124	1					
ANR	1907435	ForStatement	for ( x = 0 ; x < 2 ; x ++ )		1907124	3					
ANR	1907436	ForInit	x = 0 ;	95:17:1824:1829	1907124	0	True				
ANR	1907437	AssignmentExpression	x = 0		1907124	0		=			
ANR	1907438	Identifier	x		1907124	0					
ANR	1907439	PrimaryExpression	0		1907124	1					
ANR	1907440	Condition	x < 2	95:24:1831:1835	1907124	1	True				
ANR	1907441	RelationalExpression	x < 2		1907124	0		<			
ANR	1907442	Identifier	x		1907124	0					
ANR	1907443	PrimaryExpression	2		1907124	1					
ANR	1907444	PostIncDecOperationExpression	x ++	95:31:1838:1840	1907124	2	True				
ANR	1907445	Identifier	x		1907124	0					
ANR	1907446	IncDec	++		1907124	1					
ANR	1907447	CompoundStatement		91:36:1688:1688	1907124	3					
ANR	1907448	ExpressionStatement	nnz_pred = l_nnz [ i + 2 * y ] + t_nnz [ i + 2 * x ]	97:16:1862:1908	1907124	0	True				
ANR	1907449	AssignmentExpression	nnz_pred = l_nnz [ i + 2 * y ] + t_nnz [ i + 2 * x ]		1907124	0		=			
ANR	1907450	Identifier	nnz_pred		1907124	0					
ANR	1907451	AdditiveExpression	l_nnz [ i + 2 * y ] + t_nnz [ i + 2 * x ]		1907124	1		+			
ANR	1907452	ArrayIndexing	l_nnz [ i + 2 * y ]		1907124	0					
ANR	1907453	Identifier	l_nnz		1907124	0					
ANR	1907454	AdditiveExpression	i + 2 * y		1907124	1		+			
ANR	1907455	Identifier	i		1907124	0					
ANR	1907456	MultiplicativeExpression	2 * y		1907124	1		*			
ANR	1907457	PrimaryExpression	2		1907124	0					
ANR	1907458	Identifier	y		1907124	1					
ANR	1907459	ArrayIndexing	t_nnz [ i + 2 * x ]		1907124	1					
ANR	1907460	Identifier	t_nnz		1907124	0					
ANR	1907461	AdditiveExpression	i + 2 * x		1907124	1		+			
ANR	1907462	Identifier	i		1907124	0					
ANR	1907463	MultiplicativeExpression	2 * x		1907124	1		*			
ANR	1907464	PrimaryExpression	2		1907124	0					
ANR	1907465	Identifier	x		1907124	1					
ANR	1907466	ExpressionStatement	"nnz = decode_block_coeffs ( c , td -> block [ i ] [ ( y << 1 ) + x ] , s -> prob -> token [ 2 ] , 0 , nnz_pred , s -> qmat [ segment ] . chroma_qmul )"	99:16:1927:2194	1907124	1	True				
ANR	1907467	AssignmentExpression	"nnz = decode_block_coeffs ( c , td -> block [ i ] [ ( y << 1 ) + x ] , s -> prob -> token [ 2 ] , 0 , nnz_pred , s -> qmat [ segment ] . chroma_qmul )"		1907124	0		=			
ANR	1907468	Identifier	nnz		1907124	0					
ANR	1907469	CallExpression	"decode_block_coeffs ( c , td -> block [ i ] [ ( y << 1 ) + x ] , s -> prob -> token [ 2 ] , 0 , nnz_pred , s -> qmat [ segment ] . chroma_qmul )"		1907124	1					
ANR	1907470	Callee	decode_block_coeffs		1907124	0					
ANR	1907471	Identifier	decode_block_coeffs		1907124	0					
ANR	1907472	ArgumentList	c		1907124	1					
ANR	1907473	Argument	c		1907124	0					
ANR	1907474	Identifier	c		1907124	0					
ANR	1907475	Argument	td -> block [ i ] [ ( y << 1 ) + x ]		1907124	1					
ANR	1907476	ArrayIndexing	td -> block [ i ] [ ( y << 1 ) + x ]		1907124	0					
ANR	1907477	ArrayIndexing	td -> block [ i ]		1907124	0					
ANR	1907478	PtrMemberAccess	td -> block		1907124	0					
ANR	1907479	Identifier	td		1907124	0					
ANR	1907480	Identifier	block		1907124	1					
ANR	1907481	Identifier	i		1907124	1					
ANR	1907482	AdditiveExpression	( y << 1 ) + x		1907124	1		+			
ANR	1907483	ShiftExpression	y << 1		1907124	0		<<			
ANR	1907484	Identifier	y		1907124	0					
ANR	1907485	PrimaryExpression	1		1907124	1					
ANR	1907486	Identifier	x		1907124	1					
ANR	1907487	Argument	s -> prob -> token [ 2 ]		1907124	2					
ANR	1907488	ArrayIndexing	s -> prob -> token [ 2 ]		1907124	0					
ANR	1907489	PtrMemberAccess	s -> prob -> token		1907124	0					
ANR	1907490	PtrMemberAccess	s -> prob		1907124	0					
ANR	1907491	Identifier	s		1907124	0					
ANR	1907492	Identifier	prob		1907124	1					
ANR	1907493	Identifier	token		1907124	1					
ANR	1907494	PrimaryExpression	2		1907124	1					
ANR	1907495	Argument	0		1907124	3					
ANR	1907496	PrimaryExpression	0		1907124	0					
ANR	1907497	Argument	nnz_pred		1907124	4					
ANR	1907498	Identifier	nnz_pred		1907124	0					
ANR	1907499	Argument	s -> qmat [ segment ] . chroma_qmul		1907124	5					
ANR	1907500	MemberAccess	s -> qmat [ segment ] . chroma_qmul		1907124	0					
ANR	1907501	ArrayIndexing	s -> qmat [ segment ]		1907124	0					
ANR	1907502	PtrMemberAccess	s -> qmat		1907124	0					
ANR	1907503	Identifier	s		1907124	0					
ANR	1907504	Identifier	qmat		1907124	1					
ANR	1907505	Identifier	segment		1907124	1					
ANR	1907506	Identifier	chroma_qmul		1907124	1					
ANR	1907507	ExpressionStatement	td -> non_zero_count_cache [ i ] [ ( y << 1 ) + x ] = nnz	107:16:2213:2260	1907124	2	True				
ANR	1907508	AssignmentExpression	td -> non_zero_count_cache [ i ] [ ( y << 1 ) + x ] = nnz		1907124	0		=			
ANR	1907509	ArrayIndexing	td -> non_zero_count_cache [ i ] [ ( y << 1 ) + x ]		1907124	0					
ANR	1907510	ArrayIndexing	td -> non_zero_count_cache [ i ]		1907124	0					
ANR	1907511	PtrMemberAccess	td -> non_zero_count_cache		1907124	0					
ANR	1907512	Identifier	td		1907124	0					
ANR	1907513	Identifier	non_zero_count_cache		1907124	1					
ANR	1907514	Identifier	i		1907124	1					
ANR	1907515	AdditiveExpression	( y << 1 ) + x		1907124	1		+			
ANR	1907516	ShiftExpression	y << 1		1907124	0		<<			
ANR	1907517	Identifier	y		1907124	0					
ANR	1907518	PrimaryExpression	1		1907124	1					
ANR	1907519	Identifier	x		1907124	1					
ANR	1907520	Identifier	nnz		1907124	1					
ANR	1907521	ExpressionStatement	t_nnz [ i + 2 * x ] = l_nnz [ i + 2 * y ] = ! ! nnz	109:16:2279:2322	1907124	3	True				
ANR	1907522	AssignmentExpression	t_nnz [ i + 2 * x ] = l_nnz [ i + 2 * y ] = ! ! nnz		1907124	0		=			
ANR	1907523	ArrayIndexing	t_nnz [ i + 2 * x ]		1907124	0					
ANR	1907524	Identifier	t_nnz		1907124	0					
ANR	1907525	AdditiveExpression	i + 2 * x		1907124	1		+			
ANR	1907526	Identifier	i		1907124	0					
ANR	1907527	MultiplicativeExpression	2 * x		1907124	1		*			
ANR	1907528	PrimaryExpression	2		1907124	0					
ANR	1907529	Identifier	x		1907124	1					
ANR	1907530	AssignmentExpression	l_nnz [ i + 2 * y ] = ! ! nnz		1907124	1		=			
ANR	1907531	ArrayIndexing	l_nnz [ i + 2 * y ]		1907124	0					
ANR	1907532	Identifier	l_nnz		1907124	0					
ANR	1907533	AdditiveExpression	i + 2 * y		1907124	1		+			
ANR	1907534	Identifier	i		1907124	0					
ANR	1907535	MultiplicativeExpression	2 * y		1907124	1		*			
ANR	1907536	PrimaryExpression	2		1907124	0					
ANR	1907537	Identifier	y		1907124	1					
ANR	1907538	UnaryOperationExpression	! ! nnz		1907124	1					
ANR	1907539	UnaryOperator	!		1907124	0					
ANR	1907540	UnaryOperationExpression	! nnz		1907124	1					
ANR	1907541	UnaryOperator	!		1907124	0					
ANR	1907542	Identifier	nnz		1907124	1					
ANR	1907543	ExpressionStatement	nnz_total += nnz	111:16:2341:2363	1907124	4	True				
ANR	1907544	AssignmentExpression	nnz_total += nnz		1907124	0		+=			
ANR	1907545	Identifier	nnz_total		1907124	0					
ANR	1907546	Identifier	nnz		1907124	1					
ANR	1907547	IfStatement	if ( ! nnz_total )		1907124	7					
ANR	1907548	Condition	! nnz_total	123:8:2621:2630	1907124	0	True				
ANR	1907549	UnaryOperationExpression	! nnz_total		1907124	0					
ANR	1907550	UnaryOperator	!		1907124	0					
ANR	1907551	Identifier	nnz_total		1907124	1					
ANR	1907552	ExpressionStatement	mb -> skip = 1	125:8:2642:2654	1907124	1	True				
ANR	1907553	AssignmentExpression	mb -> skip = 1		1907124	0		=			
ANR	1907554	PtrMemberAccess	mb -> skip		1907124	0					
ANR	1907555	Identifier	mb		1907124	0					
ANR	1907556	Identifier	skip		1907124	1					
ANR	1907557	PrimaryExpression	1		1907124	1					
ANR	1907558	ReturnType	void		1907124	1					
ANR	1907559	Identifier	decode_mb_coeffs		1907124	2					
ANR	1907560	ParameterList	"VP8Context * s , VP8ThreadData * td , VP56RangeCoder * c , VP8Macroblock * mb , uint8_t t_nnz [ 9 ] , uint8_t l_nnz [ 9 ]"		1907124	3					
ANR	1907561	Parameter	VP8Context * s	1:22:22:34	1907124	0	True				
ANR	1907562	ParameterType	VP8Context *		1907124	0					
ANR	1907563	Identifier	s		1907124	1					
ANR	1907564	Parameter	VP8ThreadData * td	1:37:37:53	1907124	1	True				
ANR	1907565	ParameterType	VP8ThreadData *		1907124	0					
ANR	1907566	Identifier	td		1907124	1					
ANR	1907567	Parameter	VP56RangeCoder * c	1:56:56:72	1907124	2	True				
ANR	1907568	ParameterType	VP56RangeCoder *		1907124	0					
ANR	1907569	Identifier	c		1907124	1					
ANR	1907570	Parameter	VP8Macroblock * mb	3:22:98:114	1907124	3	True				
ANR	1907571	ParameterType	VP8Macroblock *		1907124	0					
ANR	1907572	Identifier	mb		1907124	1					
ANR	1907573	Parameter	uint8_t t_nnz [ 9 ]	3:41:117:132	1907124	4	True				
ANR	1907574	ParameterType	uint8_t [ 9 ]		1907124	0					
ANR	1907575	Identifier	t_nnz		1907124	1					
ANR	1907576	Parameter	uint8_t l_nnz [ 9 ]	3:59:135:150	1907124	5	True				
ANR	1907577	ParameterType	uint8_t [ 9 ]		1907124	0					
ANR	1907578	Identifier	l_nnz		1907124	1					
ANR	1907579	CFGEntryNode	ENTRY		1907124		True				
ANR	1907580	CFGExitNode	EXIT		1907124		True				
ANR	1907581	Symbol	td -> block_dc		1907124						
ANR	1907582	Symbol	s -> prob -> token		1907124						
ANR	1907583	Symbol	* x		1907124						
ANR	1907584	Symbol	* y		1907124						
ANR	1907585	Symbol	* td -> block		1907124						
ANR	1907586	Symbol	luma_start		1907124						
ANR	1907587	Symbol	mb -> segment		1907124						
ANR	1907588	Symbol	* t_nnz		1907124						
ANR	1907589	Symbol	* l_nnz		1907124						
ANR	1907590	Symbol	td -> non_zero_count_cache		1907124						
ANR	1907591	Symbol	s -> qmat		1907124						
ANR	1907592	Symbol	block_dc		1907124						
ANR	1907593	Symbol	* s -> prob		1907124						
ANR	1907594	Symbol	mb		1907124						
ANR	1907595	Symbol	segment		1907124						
ANR	1907596	Symbol	* * td -> non_zero_count_cache		1907124						
ANR	1907597	Symbol	* * i		1907124						
ANR	1907598	Symbol	* s -> prob -> token		1907124						
ANR	1907599	Symbol	s -> prob		1907124						
ANR	1907600	Symbol	* * * td		1907124						
ANR	1907601	Symbol	* luma_ctx		1907124						
ANR	1907602	Symbol	* * * s		1907124						
ANR	1907603	Symbol	* td		1907124						
ANR	1907604	Symbol	* segment		1907124						
ANR	1907605	Symbol	nnz		1907124						
ANR	1907606	Symbol	s -> vp8dsp		1907124						
ANR	1907607	Symbol	nnz_pred		1907124						
ANR	1907608	Symbol	decode_block_coeffs		1907124						
ANR	1907609	Symbol	* td -> non_zero_count_cache		1907124						
ANR	1907610	Symbol	* * s -> prob		1907124						
ANR	1907611	Symbol	* * y		1907124						
ANR	1907612	Symbol	* mb		1907124						
ANR	1907613	Symbol	* * s		1907124						
ANR	1907614	Symbol	mb -> skip		1907124						
ANR	1907615	Symbol	s -> qmat [ segment ] . luma_qmul		1907124						
ANR	1907616	Symbol	* * td		1907124						
ANR	1907617	Symbol	t_nnz		1907124						
ANR	1907618	Symbol	s -> qmat [ segment ] . chroma_qmul		1907124						
ANR	1907619	Symbol	c		1907124						
ANR	1907620	Symbol	td -> block		1907124						
ANR	1907621	Symbol	* s -> qmat		1907124						
ANR	1907622	Symbol	i		1907124						
ANR	1907623	Symbol	nnz_total		1907124						
ANR	1907624	Symbol	td		1907124						
ANR	1907625	Symbol	s		1907124						
ANR	1907626	Symbol	* i		1907124						
ANR	1907627	Symbol	MODE_I4x4		1907124						
ANR	1907628	Symbol	VP8_MVMODE_SPLIT		1907124						
ANR	1907629	Symbol	s -> qmat [ segment ] . luma_dc_qmul		1907124						
ANR	1907630	Symbol	* * td -> block		1907124						
ANR	1907631	Symbol	x		1907124						
ANR	1907632	Symbol	l_nnz		1907124						
ANR	1907633	Symbol	y		1907124						
ANR	1907634	Symbol	* s		1907124						
ANR	1907635	Symbol	luma_ctx		1907124						
ANR	1907636	Symbol	mb -> mode		1907124						
