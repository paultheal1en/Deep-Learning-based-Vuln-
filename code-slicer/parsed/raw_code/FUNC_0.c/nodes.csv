command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	22120	File	/home/p4ultr4n/workplace/ReVeal/raw_code/FUNC_0.c								
ANR	22121	Function	hl_decode_mb_444	1:0:0:4189							
ANR	22122	FunctionDef	"hl_decode_mb_444 (const H264Context * h , H264SliceContext * sl)"		22121	0					
ANR	22123	CompoundStatement		3:0:92:4189	22121	0					
ANR	22124	IdentifierDeclStatement	const int mb_x = sl -> mb_x ;	5:4:99:127	22121	0	True				
ANR	22125	IdentifierDecl	mb_x = sl -> mb_x		22121	0					
ANR	22126	IdentifierDeclType	const int		22121	0					
ANR	22127	Identifier	mb_x		22121	1					
ANR	22128	AssignmentExpression	mb_x = sl -> mb_x		22121	2		=			
ANR	22129	Identifier	mb_x		22121	0					
ANR	22130	PtrMemberAccess	sl -> mb_x		22121	1					
ANR	22131	Identifier	sl		22121	0					
ANR	22132	Identifier	mb_x		22121	1					
ANR	22133	IdentifierDeclStatement	const int mb_y = sl -> mb_y ;	7:4:134:162	22121	1	True				
ANR	22134	IdentifierDecl	mb_y = sl -> mb_y		22121	0					
ANR	22135	IdentifierDeclType	const int		22121	0					
ANR	22136	Identifier	mb_y		22121	1					
ANR	22137	AssignmentExpression	mb_y = sl -> mb_y		22121	2		=			
ANR	22138	Identifier	mb_y		22121	0					
ANR	22139	PtrMemberAccess	sl -> mb_y		22121	1					
ANR	22140	Identifier	sl		22121	0					
ANR	22141	Identifier	mb_y		22121	1					
ANR	22142	IdentifierDeclStatement	const int mb_xy = sl -> mb_xy ;	9:4:169:198	22121	2	True				
ANR	22143	IdentifierDecl	mb_xy = sl -> mb_xy		22121	0					
ANR	22144	IdentifierDeclType	const int		22121	0					
ANR	22145	Identifier	mb_xy		22121	1					
ANR	22146	AssignmentExpression	mb_xy = sl -> mb_xy		22121	2		=			
ANR	22147	Identifier	mb_xy		22121	0					
ANR	22148	PtrMemberAccess	sl -> mb_xy		22121	1					
ANR	22149	Identifier	sl		22121	0					
ANR	22150	Identifier	mb_xy		22121	1					
ANR	22151	IdentifierDeclStatement	const int mb_type = h -> cur_pic . mb_type [ mb_xy ] ;	11:4:205:250	22121	3	True				
ANR	22152	IdentifierDecl	mb_type = h -> cur_pic . mb_type [ mb_xy ]		22121	0					
ANR	22153	IdentifierDeclType	const int		22121	0					
ANR	22154	Identifier	mb_type		22121	1					
ANR	22155	AssignmentExpression	mb_type = h -> cur_pic . mb_type [ mb_xy ]		22121	2		=			
ANR	22156	Identifier	mb_type		22121	0					
ANR	22157	ArrayIndexing	h -> cur_pic . mb_type [ mb_xy ]		22121	1					
ANR	22158	MemberAccess	h -> cur_pic . mb_type		22121	0					
ANR	22159	PtrMemberAccess	h -> cur_pic		22121	0					
ANR	22160	Identifier	h		22121	0					
ANR	22161	Identifier	cur_pic		22121	1					
ANR	22162	Identifier	mb_type		22121	1					
ANR	22163	Identifier	mb_xy		22121	1					
ANR	22164	IdentifierDeclStatement	uint8_t * dest [ 3 ] ;	13:4:257:273	22121	4	True				
ANR	22165	IdentifierDecl	* dest [ 3 ]		22121	0					
ANR	22166	IdentifierDeclType	uint8_t * [ 3 ]		22121	0					
ANR	22167	Identifier	dest		22121	1					
ANR	22168	PrimaryExpression	3		22121	2					
ANR	22169	IdentifierDeclStatement	int linesize ;	15:4:280:292	22121	5	True				
ANR	22170	IdentifierDecl	linesize		22121	0					
ANR	22171	IdentifierDeclType	int		22121	0					
ANR	22172	Identifier	linesize		22121	1					
ANR	22173	IdentifierDeclStatement	"int i , j , p ;"	17:4:299:310	22121	6	True				
ANR	22174	IdentifierDecl	i		22121	0					
ANR	22175	IdentifierDeclType	int		22121	0					
ANR	22176	Identifier	i		22121	1					
ANR	22177	IdentifierDecl	j		22121	1					
ANR	22178	IdentifierDeclType	int		22121	0					
ANR	22179	Identifier	j		22121	1					
ANR	22180	IdentifierDecl	p		22121	2					
ANR	22181	IdentifierDeclType	int		22121	0					
ANR	22182	Identifier	p		22121	1					
ANR	22183	IdentifierDeclStatement	const int * block_offset = & h -> block_offset [ 0 ] ;	19:4:317:362	22121	7	True				
ANR	22184	IdentifierDecl	* block_offset = & h -> block_offset [ 0 ]		22121	0					
ANR	22185	IdentifierDeclType	const int *		22121	0					
ANR	22186	Identifier	block_offset		22121	1					
ANR	22187	AssignmentExpression	* block_offset = & h -> block_offset [ 0 ]		22121	2		=			
ANR	22188	Identifier	block_offset		22121	0					
ANR	22189	UnaryOperationExpression	& h -> block_offset [ 0 ]		22121	1					
ANR	22190	UnaryOperator	&		22121	0					
ANR	22191	ArrayIndexing	h -> block_offset [ 0 ]		22121	1					
ANR	22192	PtrMemberAccess	h -> block_offset		22121	0					
ANR	22193	Identifier	h		22121	0					
ANR	22194	Identifier	block_offset		22121	1					
ANR	22195	PrimaryExpression	0		22121	1					
ANR	22196	IdentifierDeclStatement	const int transform_bypass = ! SIMPLE && ( sl -> qscale == 0 && h -> sps . transform_bypass ) ;	21:4:369:453	22121	8	True				
ANR	22197	IdentifierDecl	transform_bypass = ! SIMPLE && ( sl -> qscale == 0 && h -> sps . transform_bypass )		22121	0					
ANR	22198	IdentifierDeclType	const int		22121	0					
ANR	22199	Identifier	transform_bypass		22121	1					
ANR	22200	AssignmentExpression	transform_bypass = ! SIMPLE && ( sl -> qscale == 0 && h -> sps . transform_bypass )		22121	2		=			
ANR	22201	Identifier	transform_bypass		22121	0					
ANR	22202	AndExpression	! SIMPLE && ( sl -> qscale == 0 && h -> sps . transform_bypass )		22121	1		&&			
ANR	22203	UnaryOperationExpression	! SIMPLE		22121	0					
ANR	22204	UnaryOperator	!		22121	0					
ANR	22205	Identifier	SIMPLE		22121	1					
ANR	22206	AndExpression	sl -> qscale == 0 && h -> sps . transform_bypass		22121	1		&&			
ANR	22207	EqualityExpression	sl -> qscale == 0		22121	0		==			
ANR	22208	PtrMemberAccess	sl -> qscale		22121	0					
ANR	22209	Identifier	sl		22121	0					
ANR	22210	Identifier	qscale		22121	1					
ANR	22211	PrimaryExpression	0		22121	1					
ANR	22212	MemberAccess	h -> sps . transform_bypass		22121	1					
ANR	22213	PtrMemberAccess	h -> sps		22121	0					
ANR	22214	Identifier	h		22121	0					
ANR	22215	Identifier	sps		22121	1					
ANR	22216	Identifier	transform_bypass		22121	1					
ANR	22217	IdentifierDeclStatement	const int plane_count = ( SIMPLE || ! CONFIG_GRAY || ! ( h -> flags & AV_CODEC_FLAG_GRAY ) ) ? 3 : 1 ;	23:4:460:557	22121	9	True				
ANR	22218	IdentifierDecl	plane_count = ( SIMPLE || ! CONFIG_GRAY || ! ( h -> flags & AV_CODEC_FLAG_GRAY ) ) ? 3 : 1		22121	0					
ANR	22219	IdentifierDeclType	const int		22121	0					
ANR	22220	Identifier	plane_count		22121	1					
ANR	22221	AssignmentExpression	plane_count = ( SIMPLE || ! CONFIG_GRAY || ! ( h -> flags & AV_CODEC_FLAG_GRAY ) ) ? 3 : 1		22121	2		=			
ANR	22222	Identifier	plane_count		22121	0					
ANR	22223	ConditionalExpression	( SIMPLE || ! CONFIG_GRAY || ! ( h -> flags & AV_CODEC_FLAG_GRAY ) ) ? 3 : 1		22121	1					
ANR	22224	Condition	SIMPLE || ! CONFIG_GRAY || ! ( h -> flags & AV_CODEC_FLAG_GRAY )		22121	0					
ANR	22225	OrExpression	SIMPLE || ! CONFIG_GRAY || ! ( h -> flags & AV_CODEC_FLAG_GRAY )		22121	0		||			
ANR	22226	Identifier	SIMPLE		22121	0					
ANR	22227	OrExpression	! CONFIG_GRAY || ! ( h -> flags & AV_CODEC_FLAG_GRAY )		22121	1		||			
ANR	22228	UnaryOperationExpression	! CONFIG_GRAY		22121	0					
ANR	22229	UnaryOperator	!		22121	0					
ANR	22230	Identifier	CONFIG_GRAY		22121	1					
ANR	22231	UnaryOperationExpression	! ( h -> flags & AV_CODEC_FLAG_GRAY )		22121	1					
ANR	22232	UnaryOperator	!		22121	0					
ANR	22233	BitAndExpression	h -> flags & AV_CODEC_FLAG_GRAY		22121	1		&			
ANR	22234	PtrMemberAccess	h -> flags		22121	0					
ANR	22235	Identifier	h		22121	0					
ANR	22236	Identifier	flags		22121	1					
ANR	22237	Identifier	AV_CODEC_FLAG_GRAY		22121	1					
ANR	22238	PrimaryExpression	3		22121	1					
ANR	22239	PrimaryExpression	1		22121	2					
ANR	22240	ForStatement	for ( p = 0 ; p < plane_count ; p ++ )		22121	10					
ANR	22241	ForInit	p = 0 ;	27:9:571:576	22121	0	True				
ANR	22242	AssignmentExpression	p = 0		22121	0		=			
ANR	22243	Identifier	p		22121	0					
ANR	22244	PrimaryExpression	0		22121	1					
ANR	22245	Condition	p < plane_count	27:16:578:592	22121	1	True				
ANR	22246	RelationalExpression	p < plane_count		22121	0		<			
ANR	22247	Identifier	p		22121	0					
ANR	22248	Identifier	plane_count		22121	1					
ANR	22249	PostIncDecOperationExpression	p ++	27:33:595:597	22121	2	True				
ANR	22250	Identifier	p		22121	0					
ANR	22251	IncDec	++		22121	1					
ANR	22252	CompoundStatement		25:38:507:507	22121	3					
ANR	22253	ExpressionStatement	dest [ p ] = h -> cur_pic . f -> data [ p ] + ( ( mb_x << PIXEL_SHIFT ) + mb_y * sl -> linesize ) * 16	29:8:611:714	22121	0	True				
ANR	22254	AssignmentExpression	dest [ p ] = h -> cur_pic . f -> data [ p ] + ( ( mb_x << PIXEL_SHIFT ) + mb_y * sl -> linesize ) * 16		22121	0		=			
ANR	22255	ArrayIndexing	dest [ p ]		22121	0					
ANR	22256	Identifier	dest		22121	0					
ANR	22257	Identifier	p		22121	1					
ANR	22258	AdditiveExpression	h -> cur_pic . f -> data [ p ] + ( ( mb_x << PIXEL_SHIFT ) + mb_y * sl -> linesize ) * 16		22121	1		+			
ANR	22259	ArrayIndexing	h -> cur_pic . f -> data [ p ]		22121	0					
ANR	22260	PtrMemberAccess	h -> cur_pic . f -> data		22121	0					
ANR	22261	MemberAccess	h -> cur_pic . f		22121	0					
ANR	22262	PtrMemberAccess	h -> cur_pic		22121	0					
ANR	22263	Identifier	h		22121	0					
ANR	22264	Identifier	cur_pic		22121	1					
ANR	22265	Identifier	f		22121	1					
ANR	22266	Identifier	data		22121	1					
ANR	22267	Identifier	p		22121	1					
ANR	22268	MultiplicativeExpression	( ( mb_x << PIXEL_SHIFT ) + mb_y * sl -> linesize ) * 16		22121	1		*			
ANR	22269	AdditiveExpression	( mb_x << PIXEL_SHIFT ) + mb_y * sl -> linesize		22121	0		+			
ANR	22270	ShiftExpression	mb_x << PIXEL_SHIFT		22121	0		<<			
ANR	22271	Identifier	mb_x		22121	0					
ANR	22272	Identifier	PIXEL_SHIFT		22121	1					
ANR	22273	MultiplicativeExpression	mb_y * sl -> linesize		22121	1		*			
ANR	22274	Identifier	mb_y		22121	0					
ANR	22275	PtrMemberAccess	sl -> linesize		22121	1					
ANR	22276	Identifier	sl		22121	0					
ANR	22277	Identifier	linesize		22121	1					
ANR	22278	PrimaryExpression	16		22121	1					
ANR	22279	ExpressionStatement	"h -> vdsp . prefetch ( dest [ p ] + ( sl -> mb_x & 3 ) * 4 * sl -> linesize + ( 64 << PIXEL_SHIFT ) , sl -> linesize , 4 )"	33:8:725:851	22121	1	True				
ANR	22280	CallExpression	"h -> vdsp . prefetch ( dest [ p ] + ( sl -> mb_x & 3 ) * 4 * sl -> linesize + ( 64 << PIXEL_SHIFT ) , sl -> linesize , 4 )"		22121	0					
ANR	22281	Callee	h -> vdsp . prefetch		22121	0					
ANR	22282	MemberAccess	h -> vdsp . prefetch		22121	0					
ANR	22283	PtrMemberAccess	h -> vdsp		22121	0					
ANR	22284	Identifier	h		22121	0					
ANR	22285	Identifier	vdsp		22121	1					
ANR	22286	Identifier	prefetch		22121	1					
ANR	22287	ArgumentList	dest [ p ] + ( sl -> mb_x & 3 ) * 4 * sl -> linesize + ( 64 << PIXEL_SHIFT )		22121	1					
ANR	22288	Argument	dest [ p ] + ( sl -> mb_x & 3 ) * 4 * sl -> linesize + ( 64 << PIXEL_SHIFT )		22121	0					
ANR	22289	AdditiveExpression	dest [ p ] + ( sl -> mb_x & 3 ) * 4 * sl -> linesize + ( 64 << PIXEL_SHIFT )		22121	0		+			
ANR	22290	ArrayIndexing	dest [ p ]		22121	0					
ANR	22291	Identifier	dest		22121	0					
ANR	22292	Identifier	p		22121	1					
ANR	22293	AdditiveExpression	( sl -> mb_x & 3 ) * 4 * sl -> linesize + ( 64 << PIXEL_SHIFT )		22121	1		+			
ANR	22294	MultiplicativeExpression	( sl -> mb_x & 3 ) * 4 * sl -> linesize		22121	0		*			
ANR	22295	BitAndExpression	sl -> mb_x & 3		22121	0		&			
ANR	22296	PtrMemberAccess	sl -> mb_x		22121	0					
ANR	22297	Identifier	sl		22121	0					
ANR	22298	Identifier	mb_x		22121	1					
ANR	22299	PrimaryExpression	3		22121	1					
ANR	22300	MultiplicativeExpression	4 * sl -> linesize		22121	1		*			
ANR	22301	PrimaryExpression	4		22121	0					
ANR	22302	PtrMemberAccess	sl -> linesize		22121	1					
ANR	22303	Identifier	sl		22121	0					
ANR	22304	Identifier	linesize		22121	1					
ANR	22305	ShiftExpression	64 << PIXEL_SHIFT		22121	1		<<			
ANR	22306	PrimaryExpression	64		22121	0					
ANR	22307	Identifier	PIXEL_SHIFT		22121	1					
ANR	22308	Argument	sl -> linesize		22121	1					
ANR	22309	PtrMemberAccess	sl -> linesize		22121	0					
ANR	22310	Identifier	sl		22121	0					
ANR	22311	Identifier	linesize		22121	1					
ANR	22312	Argument	4		22121	2					
ANR	22313	PrimaryExpression	4		22121	0					
ANR	22314	ExpressionStatement	h -> list_counts [ mb_xy ] = sl -> list_count	41:4:867:905	22121	11	True				
ANR	22315	AssignmentExpression	h -> list_counts [ mb_xy ] = sl -> list_count		22121	0		=			
ANR	22316	ArrayIndexing	h -> list_counts [ mb_xy ]		22121	0					
ANR	22317	PtrMemberAccess	h -> list_counts		22121	0					
ANR	22318	Identifier	h		22121	0					
ANR	22319	Identifier	list_counts		22121	1					
ANR	22320	Identifier	mb_xy		22121	1					
ANR	22321	PtrMemberAccess	sl -> list_count		22121	1					
ANR	22322	Identifier	sl		22121	0					
ANR	22323	Identifier	list_count		22121	1					
ANR	22324	IfStatement	if ( ! SIMPLE && MB_FIELD ( sl ) )		22121	12					
ANR	22325	Condition	! SIMPLE && MB_FIELD ( sl )	45:8:918:940	22121	0	True				
ANR	22326	AndExpression	! SIMPLE && MB_FIELD ( sl )		22121	0		&&			
ANR	22327	UnaryOperationExpression	! SIMPLE		22121	0					
ANR	22328	UnaryOperator	!		22121	0					
ANR	22329	Identifier	SIMPLE		22121	1					
ANR	22330	CallExpression	MB_FIELD ( sl )		22121	1					
ANR	22331	Callee	MB_FIELD		22121	0					
ANR	22332	Identifier	MB_FIELD		22121	0					
ANR	22333	ArgumentList	sl		22121	1					
ANR	22334	Argument	sl		22121	0					
ANR	22335	Identifier	sl		22121	0					
ANR	22336	CompoundStatement		43:33:850:850	22121	1					
ANR	22337	ExpressionStatement	linesize = sl -> mb_linesize = sl -> mb_uvlinesize = sl -> linesize * 2	47:8:954:1023	22121	0	True				
ANR	22338	AssignmentExpression	linesize = sl -> mb_linesize = sl -> mb_uvlinesize = sl -> linesize * 2		22121	0		=			
ANR	22339	Identifier	linesize		22121	0					
ANR	22340	AssignmentExpression	sl -> mb_linesize = sl -> mb_uvlinesize = sl -> linesize * 2		22121	1		=			
ANR	22341	PtrMemberAccess	sl -> mb_linesize		22121	0					
ANR	22342	Identifier	sl		22121	0					
ANR	22343	Identifier	mb_linesize		22121	1					
ANR	22344	AssignmentExpression	sl -> mb_uvlinesize = sl -> linesize * 2		22121	1		=			
ANR	22345	PtrMemberAccess	sl -> mb_uvlinesize		22121	0					
ANR	22346	Identifier	sl		22121	0					
ANR	22347	Identifier	mb_uvlinesize		22121	1					
ANR	22348	MultiplicativeExpression	sl -> linesize * 2		22121	1		*			
ANR	22349	PtrMemberAccess	sl -> linesize		22121	0					
ANR	22350	Identifier	sl		22121	0					
ANR	22351	Identifier	linesize		22121	1					
ANR	22352	PrimaryExpression	2		22121	1					
ANR	22353	ExpressionStatement	block_offset = & h -> block_offset [ 48 ]	49:8:1034:1069	22121	1	True				
ANR	22354	AssignmentExpression	block_offset = & h -> block_offset [ 48 ]		22121	0		=			
ANR	22355	Identifier	block_offset		22121	0					
ANR	22356	UnaryOperationExpression	& h -> block_offset [ 48 ]		22121	1					
ANR	22357	UnaryOperator	&		22121	0					
ANR	22358	ArrayIndexing	h -> block_offset [ 48 ]		22121	1					
ANR	22359	PtrMemberAccess	h -> block_offset		22121	0					
ANR	22360	Identifier	h		22121	0					
ANR	22361	Identifier	block_offset		22121	1					
ANR	22362	PrimaryExpression	48		22121	1					
ANR	22363	IfStatement	if ( mb_y & 1 )		22121	2					
ANR	22364	Condition	mb_y & 1	51:12:1084:1091	22121	0	True				
ANR	22365	BitAndExpression	mb_y & 1		22121	0		&			
ANR	22366	Identifier	mb_y		22121	0					
ANR	22367	PrimaryExpression	1		22121	1					
ANR	22368	ForStatement	for ( p = 0 ; p < 3 ; p ++ )		22121	1					
ANR	22369	ForInit	p = 0 ;	53:17:1148:1153	22121	0	True				
ANR	22370	AssignmentExpression	p = 0		22121	0		=			
ANR	22371	Identifier	p		22121	0					
ANR	22372	PrimaryExpression	0		22121	1					
ANR	22373	Condition	p < 3	53:24:1155:1159	22121	1	True				
ANR	22374	RelationalExpression	p < 3		22121	0		<			
ANR	22375	Identifier	p		22121	0					
ANR	22376	PrimaryExpression	3		22121	1					
ANR	22377	PostIncDecOperationExpression	p ++	53:31:1162:1164	22121	2	True				
ANR	22378	Identifier	p		22121	0					
ANR	22379	IncDec	++		22121	1					
ANR	22380	ExpressionStatement	dest [ p ] -= sl -> linesize * 15	55:16:1184:1212	22121	3	True				
ANR	22381	AssignmentExpression	dest [ p ] -= sl -> linesize * 15		22121	0		-=			
ANR	22382	ArrayIndexing	dest [ p ]		22121	0					
ANR	22383	Identifier	dest		22121	0					
ANR	22384	Identifier	p		22121	1					
ANR	22385	MultiplicativeExpression	sl -> linesize * 15		22121	1		*			
ANR	22386	PtrMemberAccess	sl -> linesize		22121	0					
ANR	22387	Identifier	sl		22121	0					
ANR	22388	Identifier	linesize		22121	1					
ANR	22389	PrimaryExpression	15		22121	1					
ANR	22390	IfStatement	if ( FRAME_MBAFF ( h ) )		22121	3					
ANR	22391	Condition	FRAME_MBAFF ( h )	57:12:1227:1240	22121	0	True				
ANR	22392	CallExpression	FRAME_MBAFF ( h )		22121	0					
ANR	22393	Callee	FRAME_MBAFF		22121	0					
ANR	22394	Identifier	FRAME_MBAFF		22121	0					
ANR	22395	ArgumentList	h		22121	1					
ANR	22396	Argument	h		22121	0					
ANR	22397	Identifier	h		22121	0					
ANR	22398	CompoundStatement		57:12:1165:1173	22121	1					
ANR	22399	IdentifierDeclStatement	int list ;	59:12:1258:1266	22121	0	True				
ANR	22400	IdentifierDecl	list		22121	0					
ANR	22401	IdentifierDeclType	int		22121	0					
ANR	22402	Identifier	list		22121	1					
ANR	22403	ForStatement	for ( list = 0 ; list < sl -> list_count ; list ++ )		22121	1					
ANR	22404	ForInit	list = 0 ;	61:17:1286:1294	22121	0	True				
ANR	22405	AssignmentExpression	list = 0		22121	0		=			
ANR	22406	Identifier	list		22121	0					
ANR	22407	PrimaryExpression	0		22121	1					
ANR	22408	Condition	list < sl -> list_count	61:27:1296:1316	22121	1	True				
ANR	22409	RelationalExpression	list < sl -> list_count		22121	0		<			
ANR	22410	Identifier	list		22121	0					
ANR	22411	PtrMemberAccess	sl -> list_count		22121	1					
ANR	22412	Identifier	sl		22121	0					
ANR	22413	Identifier	list_count		22121	1					
ANR	22414	PostIncDecOperationExpression	list ++	61:50:1319:1324	22121	2	True				
ANR	22415	Identifier	list		22121	0					
ANR	22416	IncDec	++		22121	1					
ANR	22417	CompoundStatement		59:58:1234:1234	22121	3					
ANR	22418	IfStatement	"if ( ! USES_LIST ( mb_type , list ) )"		22121	0					
ANR	22419	Condition	"! USES_LIST ( mb_type , list )"	63:20:1350:1374	22121	0	True				
ANR	22420	UnaryOperationExpression	"! USES_LIST ( mb_type , list )"		22121	0					
ANR	22421	UnaryOperator	!		22121	0					
ANR	22422	CallExpression	"USES_LIST ( mb_type , list )"		22121	1					
ANR	22423	Callee	USES_LIST		22121	0					
ANR	22424	Identifier	USES_LIST		22121	0					
ANR	22425	ArgumentList	mb_type		22121	1					
ANR	22426	Argument	mb_type		22121	0					
ANR	22427	Identifier	mb_type		22121	0					
ANR	22428	Argument	list		22121	1					
ANR	22429	Identifier	list		22121	0					
ANR	22430	ContinueStatement	continue ;	65:20:1398:1406	22121	1	True				
ANR	22431	IfStatement	if ( IS_16X16 ( mb_type ) )		22121	1					
ANR	22432	Condition	IS_16X16 ( mb_type )	67:20:1429:1445	22121	0	True				
ANR	22433	CallExpression	IS_16X16 ( mb_type )		22121	0					
ANR	22434	Callee	IS_16X16		22121	0					
ANR	22435	Identifier	IS_16X16		22121	0					
ANR	22436	ArgumentList	mb_type		22121	1					
ANR	22437	Argument	mb_type		22121	0					
ANR	22438	Identifier	mb_type		22121	0					
ANR	22439	CompoundStatement		67:20:1378:1422	22121	1					
ANR	22440	IdentifierDeclStatement	int8_t * ref = & sl -> ref_cache [ list ] [ scan8 [ 0 ] ] ;	69:20:1471:1515	22121	0	True				
ANR	22441	IdentifierDecl	* ref = & sl -> ref_cache [ list ] [ scan8 [ 0 ] ]		22121	0					
ANR	22442	IdentifierDeclType	int8_t *		22121	0					
ANR	22443	Identifier	ref		22121	1					
ANR	22444	AssignmentExpression	* ref = & sl -> ref_cache [ list ] [ scan8 [ 0 ] ]		22121	2		=			
ANR	22445	Identifier	ref		22121	0					
ANR	22446	UnaryOperationExpression	& sl -> ref_cache [ list ] [ scan8 [ 0 ] ]		22121	1					
ANR	22447	UnaryOperator	&		22121	0					
ANR	22448	ArrayIndexing	sl -> ref_cache [ list ] [ scan8 [ 0 ] ]		22121	1					
ANR	22449	ArrayIndexing	sl -> ref_cache [ list ]		22121	0					
ANR	22450	PtrMemberAccess	sl -> ref_cache		22121	0					
ANR	22451	Identifier	sl		22121	0					
ANR	22452	Identifier	ref_cache		22121	1					
ANR	22453	Identifier	list		22121	1					
ANR	22454	ArrayIndexing	scan8 [ 0 ]		22121	1					
ANR	22455	Identifier	scan8		22121	0					
ANR	22456	PrimaryExpression	0		22121	1					
ANR	22457	ExpressionStatement	"fill_rectangle ( ref , 4 , 4 , 8 , ( 16 + * ref ) ^ ( sl -> mb_y & 1 ) , 1 )"	71:20:1538:1599	22121	1	True				
ANR	22458	CallExpression	"fill_rectangle ( ref , 4 , 4 , 8 , ( 16 + * ref ) ^ ( sl -> mb_y & 1 ) , 1 )"		22121	0					
ANR	22459	Callee	fill_rectangle		22121	0					
ANR	22460	Identifier	fill_rectangle		22121	0					
ANR	22461	ArgumentList	ref		22121	1					
ANR	22462	Argument	ref		22121	0					
ANR	22463	Identifier	ref		22121	0					
ANR	22464	Argument	4		22121	1					
ANR	22465	PrimaryExpression	4		22121	0					
ANR	22466	Argument	4		22121	2					
ANR	22467	PrimaryExpression	4		22121	0					
ANR	22468	Argument	8		22121	3					
ANR	22469	PrimaryExpression	8		22121	0					
ANR	22470	Argument	( 16 + * ref ) ^ ( sl -> mb_y & 1 )		22121	4					
ANR	22471	ExclusiveOrExpression	( 16 + * ref ) ^ ( sl -> mb_y & 1 )		22121	0		^			
ANR	22472	AdditiveExpression	16 + * ref		22121	0		+			
ANR	22473	PrimaryExpression	16		22121	0					
ANR	22474	UnaryOperationExpression	* ref		22121	1					
ANR	22475	UnaryOperator	*		22121	0					
ANR	22476	Identifier	ref		22121	1					
ANR	22477	BitAndExpression	sl -> mb_y & 1		22121	1		&			
ANR	22478	PtrMemberAccess	sl -> mb_y		22121	0					
ANR	22479	Identifier	sl		22121	0					
ANR	22480	Identifier	mb_y		22121	1					
ANR	22481	PrimaryExpression	1		22121	1					
ANR	22482	Argument	1		22121	5					
ANR	22483	PrimaryExpression	1		22121	0					
ANR	22484	ElseStatement	else		22121	0					
ANR	22485	CompoundStatement		71:23:1532:1532	22121	0					
ANR	22486	ForStatement	for ( i = 0 ; i < 16 ; i += 4 )		22121	0					
ANR	22487	ForInit	i = 0 ;	75:25:1653:1658	22121	0	True				
ANR	22488	AssignmentExpression	i = 0		22121	0		=			
ANR	22489	Identifier	i		22121	0					
ANR	22490	PrimaryExpression	0		22121	1					
ANR	22491	Condition	i < 16	75:32:1660:1665	22121	1	True				
ANR	22492	RelationalExpression	i < 16		22121	0		<			
ANR	22493	Identifier	i		22121	0					
ANR	22494	PrimaryExpression	16		22121	1					
ANR	22495	AssignmentExpression	i += 4	75:40:1668:1673	22121	2	True	+=			
ANR	22496	Identifier	i		22121	0					
ANR	22497	PrimaryExpression	4		22121	1					
ANR	22498	CompoundStatement		75:24:1610:1649	22121	3					
ANR	22499	IdentifierDeclStatement	int ref = sl -> ref_cache [ list ] [ scan8 [ i ] ] ;	77:24:1703:1742	22121	0	True				
ANR	22500	IdentifierDecl	ref = sl -> ref_cache [ list ] [ scan8 [ i ] ]		22121	0					
ANR	22501	IdentifierDeclType	int		22121	0					
ANR	22502	Identifier	ref		22121	1					
ANR	22503	AssignmentExpression	ref = sl -> ref_cache [ list ] [ scan8 [ i ] ]		22121	2		=			
ANR	22504	Identifier	ref		22121	0					
ANR	22505	ArrayIndexing	sl -> ref_cache [ list ] [ scan8 [ i ] ]		22121	1					
ANR	22506	ArrayIndexing	sl -> ref_cache [ list ]		22121	0					
ANR	22507	PtrMemberAccess	sl -> ref_cache		22121	0					
ANR	22508	Identifier	sl		22121	0					
ANR	22509	Identifier	ref_cache		22121	1					
ANR	22510	Identifier	list		22121	1					
ANR	22511	ArrayIndexing	scan8 [ i ]		22121	1					
ANR	22512	Identifier	scan8		22121	0					
ANR	22513	Identifier	i		22121	1					
ANR	22514	IfStatement	if ( ref >= 0 )		22121	1					
ANR	22515	Condition	ref >= 0	79:28:1773:1780	22121	0	True				
ANR	22516	RelationalExpression	ref >= 0		22121	0		>=			
ANR	22517	Identifier	ref		22121	0					
ANR	22518	PrimaryExpression	0		22121	1					
ANR	22519	ExpressionStatement	"fill_rectangle ( & sl -> ref_cache [ list ] [ scan8 [ i ] ] , 2 , 2 , 8 , ( 16 + ref ) ^ ( sl -> mb_y & 1 ) , 1 )"	81:28:1812:1943	22121	1	True				
ANR	22520	CallExpression	"fill_rectangle ( & sl -> ref_cache [ list ] [ scan8 [ i ] ] , 2 , 2 , 8 , ( 16 + ref ) ^ ( sl -> mb_y & 1 ) , 1 )"		22121	0					
ANR	22521	Callee	fill_rectangle		22121	0					
ANR	22522	Identifier	fill_rectangle		22121	0					
ANR	22523	ArgumentList	& sl -> ref_cache [ list ] [ scan8 [ i ] ]		22121	1					
ANR	22524	Argument	& sl -> ref_cache [ list ] [ scan8 [ i ] ]		22121	0					
ANR	22525	UnaryOperationExpression	& sl -> ref_cache [ list ] [ scan8 [ i ] ]		22121	0					
ANR	22526	UnaryOperator	&		22121	0					
ANR	22527	ArrayIndexing	sl -> ref_cache [ list ] [ scan8 [ i ] ]		22121	1					
ANR	22528	ArrayIndexing	sl -> ref_cache [ list ]		22121	0					
ANR	22529	PtrMemberAccess	sl -> ref_cache		22121	0					
ANR	22530	Identifier	sl		22121	0					
ANR	22531	Identifier	ref_cache		22121	1					
ANR	22532	Identifier	list		22121	1					
ANR	22533	ArrayIndexing	scan8 [ i ]		22121	1					
ANR	22534	Identifier	scan8		22121	0					
ANR	22535	Identifier	i		22121	1					
ANR	22536	Argument	2		22121	1					
ANR	22537	PrimaryExpression	2		22121	0					
ANR	22538	Argument	2		22121	2					
ANR	22539	PrimaryExpression	2		22121	0					
ANR	22540	Argument	8		22121	3					
ANR	22541	PrimaryExpression	8		22121	0					
ANR	22542	Argument	( 16 + ref ) ^ ( sl -> mb_y & 1 )		22121	4					
ANR	22543	ExclusiveOrExpression	( 16 + ref ) ^ ( sl -> mb_y & 1 )		22121	0		^			
ANR	22544	AdditiveExpression	16 + ref		22121	0		+			
ANR	22545	PrimaryExpression	16		22121	0					
ANR	22546	Identifier	ref		22121	1					
ANR	22547	BitAndExpression	sl -> mb_y & 1		22121	1		&			
ANR	22548	PtrMemberAccess	sl -> mb_y		22121	0					
ANR	22549	Identifier	sl		22121	0					
ANR	22550	Identifier	mb_y		22121	1					
ANR	22551	PrimaryExpression	1		22121	1					
ANR	22552	Argument	1		22121	5					
ANR	22553	PrimaryExpression	1		22121	0					
ANR	22554	ElseStatement	else		22121	0					
ANR	22555	CompoundStatement		91:11:1932:1932	22121	0					
ANR	22556	ExpressionStatement	linesize = sl -> mb_linesize = sl -> mb_uvlinesize = sl -> linesize	95:8:2036:2097	22121	0	True				
ANR	22557	AssignmentExpression	linesize = sl -> mb_linesize = sl -> mb_uvlinesize = sl -> linesize		22121	0		=			
ANR	22558	Identifier	linesize		22121	0					
ANR	22559	AssignmentExpression	sl -> mb_linesize = sl -> mb_uvlinesize = sl -> linesize		22121	1		=			
ANR	22560	PtrMemberAccess	sl -> mb_linesize		22121	0					
ANR	22561	Identifier	sl		22121	0					
ANR	22562	Identifier	mb_linesize		22121	1					
ANR	22563	AssignmentExpression	sl -> mb_uvlinesize = sl -> linesize		22121	1		=			
ANR	22564	PtrMemberAccess	sl -> mb_uvlinesize		22121	0					
ANR	22565	Identifier	sl		22121	0					
ANR	22566	Identifier	mb_uvlinesize		22121	1					
ANR	22567	PtrMemberAccess	sl -> linesize		22121	1					
ANR	22568	Identifier	sl		22121	0					
ANR	22569	Identifier	linesize		22121	1					
ANR	22570	IfStatement	if ( ! SIMPLE && IS_INTRA_PCM ( mb_type ) )		22121	13					
ANR	22571	Condition	! SIMPLE && IS_INTRA_PCM ( mb_type )	101:8:2117:2148	22121	0	True				
ANR	22572	AndExpression	! SIMPLE && IS_INTRA_PCM ( mb_type )		22121	0		&&			
ANR	22573	UnaryOperationExpression	! SIMPLE		22121	0					
ANR	22574	UnaryOperator	!		22121	0					
ANR	22575	Identifier	SIMPLE		22121	1					
ANR	22576	CallExpression	IS_INTRA_PCM ( mb_type )		22121	1					
ANR	22577	Callee	IS_INTRA_PCM		22121	0					
ANR	22578	Identifier	IS_INTRA_PCM		22121	0					
ANR	22579	ArgumentList	mb_type		22121	1					
ANR	22580	Argument	mb_type		22121	0					
ANR	22581	Identifier	mb_type		22121	0					
ANR	22582	CompoundStatement		99:42:2058:2058	22121	1					
ANR	22583	IfStatement	if ( PIXEL_SHIFT )		22121	0					
ANR	22584	Condition	PIXEL_SHIFT	103:12:2166:2176	22121	0	True				
ANR	22585	Identifier	PIXEL_SHIFT		22121	0					
ANR	22586	CompoundStatement		105:12:2159:2175	22121	1					
ANR	22587	IdentifierDeclStatement	const int bit_depth = h -> sps . bit_depth_luma ;	105:12:2194:2237	22121	0	True				
ANR	22588	IdentifierDecl	bit_depth = h -> sps . bit_depth_luma		22121	0					
ANR	22589	IdentifierDeclType	const int		22121	0					
ANR	22590	Identifier	bit_depth		22121	1					
ANR	22591	AssignmentExpression	bit_depth = h -> sps . bit_depth_luma		22121	2		=			
ANR	22592	Identifier	bit_depth		22121	0					
ANR	22593	MemberAccess	h -> sps . bit_depth_luma		22121	1					
ANR	22594	PtrMemberAccess	h -> sps		22121	0					
ANR	22595	Identifier	h		22121	0					
ANR	22596	Identifier	sps		22121	1					
ANR	22597	Identifier	bit_depth_luma		22121	1					
ANR	22598	IdentifierDeclStatement	GetBitContext gb ;	107:12:2252:2268	22121	1	True				
ANR	22599	IdentifierDecl	gb		22121	0					
ANR	22600	IdentifierDeclType	GetBitContext		22121	0					
ANR	22601	Identifier	gb		22121	1					
ANR	22602	ExpressionStatement	"init_get_bits ( & gb , sl -> intra_pcm_ptr , 768 * bit_depth )"	109:12:2283:2337	22121	2	True				
ANR	22603	CallExpression	"init_get_bits ( & gb , sl -> intra_pcm_ptr , 768 * bit_depth )"		22121	0					
ANR	22604	Callee	init_get_bits		22121	0					
ANR	22605	Identifier	init_get_bits		22121	0					
ANR	22606	ArgumentList	& gb		22121	1					
ANR	22607	Argument	& gb		22121	0					
ANR	22608	UnaryOperationExpression	& gb		22121	0					
ANR	22609	UnaryOperator	&		22121	0					
ANR	22610	Identifier	gb		22121	1					
ANR	22611	Argument	sl -> intra_pcm_ptr		22121	1					
ANR	22612	PtrMemberAccess	sl -> intra_pcm_ptr		22121	0					
ANR	22613	Identifier	sl		22121	0					
ANR	22614	Identifier	intra_pcm_ptr		22121	1					
ANR	22615	Argument	768 * bit_depth		22121	2					
ANR	22616	MultiplicativeExpression	768 * bit_depth		22121	0		*			
ANR	22617	PrimaryExpression	768		22121	0					
ANR	22618	Identifier	bit_depth		22121	1					
ANR	22619	ForStatement	for ( p = 0 ; p < plane_count ; p ++ )		22121	3					
ANR	22620	ForInit	p = 0 ;	113:17:2359:2364	22121	0	True				
ANR	22621	AssignmentExpression	p = 0		22121	0		=			
ANR	22622	Identifier	p		22121	0					
ANR	22623	PrimaryExpression	0		22121	1					
ANR	22624	Condition	p < plane_count	113:24:2366:2380	22121	1	True				
ANR	22625	RelationalExpression	p < plane_count		22121	0		<			
ANR	22626	Identifier	p		22121	0					
ANR	22627	Identifier	plane_count		22121	1					
ANR	22628	PostIncDecOperationExpression	p ++	113:41:2383:2385	22121	2	True				
ANR	22629	Identifier	p		22121	0					
ANR	22630	IncDec	++		22121	1					
ANR	22631	ForStatement	for ( i = 0 ; i < 16 ; i ++ )		22121	3					
ANR	22632	ForInit	i = 0 ;	115:21:2410:2415	22121	0	True				
ANR	22633	AssignmentExpression	i = 0		22121	0		=			
ANR	22634	Identifier	i		22121	0					
ANR	22635	PrimaryExpression	0		22121	1					
ANR	22636	Condition	i < 16	115:28:2417:2422	22121	1	True				
ANR	22637	RelationalExpression	i < 16		22121	0		<			
ANR	22638	Identifier	i		22121	0					
ANR	22639	PrimaryExpression	16		22121	1					
ANR	22640	PostIncDecOperationExpression	i ++	115:36:2425:2427	22121	2	True				
ANR	22641	Identifier	i		22121	0					
ANR	22642	IncDec	++		22121	1					
ANR	22643	CompoundStatement		115:20:2360:2412	22121	3					
ANR	22644	IdentifierDeclStatement	uint16_t * tmp = ( uint16_t * ) ( dest [ p ] + i * linesize ) ;	117:20:2453:2505	22121	0	True				
ANR	22645	IdentifierDecl	* tmp = ( uint16_t * ) ( dest [ p ] + i * linesize )		22121	0					
ANR	22646	IdentifierDeclType	uint16_t *		22121	0					
ANR	22647	Identifier	tmp		22121	1					
ANR	22648	AssignmentExpression	* tmp = ( uint16_t * ) ( dest [ p ] + i * linesize )		22121	2		=			
ANR	22649	Identifier	tmp		22121	0					
ANR	22650	CastExpression	( uint16_t * ) ( dest [ p ] + i * linesize )		22121	1					
ANR	22651	CastTarget	uint16_t *		22121	0					
ANR	22652	AdditiveExpression	dest [ p ] + i * linesize		22121	1		+			
ANR	22653	ArrayIndexing	dest [ p ]		22121	0					
ANR	22654	Identifier	dest		22121	0					
ANR	22655	Identifier	p		22121	1					
ANR	22656	MultiplicativeExpression	i * linesize		22121	1		*			
ANR	22657	Identifier	i		22121	0					
ANR	22658	Identifier	linesize		22121	1					
ANR	22659	ForStatement	for ( j = 0 ; j < 16 ; j ++ )		22121	1					
ANR	22660	ForInit	j = 0 ;	119:25:2533:2538	22121	0	True				
ANR	22661	AssignmentExpression	j = 0		22121	0		=			
ANR	22662	Identifier	j		22121	0					
ANR	22663	PrimaryExpression	0		22121	1					
ANR	22664	Condition	j < 16	119:32:2540:2545	22121	1	True				
ANR	22665	RelationalExpression	j < 16		22121	0		<			
ANR	22666	Identifier	j		22121	0					
ANR	22667	PrimaryExpression	16		22121	1					
ANR	22668	PostIncDecOperationExpression	j ++	119:40:2548:2550	22121	2	True				
ANR	22669	Identifier	j		22121	0					
ANR	22670	IncDec	++		22121	1					
ANR	22671	ExpressionStatement	"tmp [ j ] = get_bits ( & gb , bit_depth )"	121:24:2578:2611	22121	3	True				
ANR	22672	AssignmentExpression	"tmp [ j ] = get_bits ( & gb , bit_depth )"		22121	0		=			
ANR	22673	ArrayIndexing	tmp [ j ]		22121	0					
ANR	22674	Identifier	tmp		22121	0					
ANR	22675	Identifier	j		22121	1					
ANR	22676	CallExpression	"get_bits ( & gb , bit_depth )"		22121	1					
ANR	22677	Callee	get_bits		22121	0					
ANR	22678	Identifier	get_bits		22121	0					
ANR	22679	ArgumentList	& gb		22121	1					
ANR	22680	Argument	& gb		22121	0					
ANR	22681	UnaryOperationExpression	& gb		22121	0					
ANR	22682	UnaryOperator	&		22121	0					
ANR	22683	Identifier	gb		22121	1					
ANR	22684	Argument	bit_depth		22121	1					
ANR	22685	Identifier	bit_depth		22121	0					
ANR	22686	ElseStatement	else		22121	0					
ANR	22687	CompoundStatement		123:15:2555:2555	22121	0					
ANR	22688	ForStatement	for ( p = 0 ; p < plane_count ; p ++ )		22121	0					
ANR	22689	ForInit	p = 0 ;	127:17:2668:2673	22121	0	True				
ANR	22690	AssignmentExpression	p = 0		22121	0		=			
ANR	22691	Identifier	p		22121	0					
ANR	22692	PrimaryExpression	0		22121	1					
ANR	22693	Condition	p < plane_count	127:24:2675:2689	22121	1	True				
ANR	22694	RelationalExpression	p < plane_count		22121	0		<			
ANR	22695	Identifier	p		22121	0					
ANR	22696	Identifier	plane_count		22121	1					
ANR	22697	PostIncDecOperationExpression	p ++	127:41:2692:2694	22121	2	True				
ANR	22698	Identifier	p		22121	0					
ANR	22699	IncDec	++		22121	1					
ANR	22700	ForStatement	for ( i = 0 ; i < 16 ; i ++ )		22121	3					
ANR	22701	ForInit	i = 0 ;	129:21:2719:2724	22121	0	True				
ANR	22702	AssignmentExpression	i = 0		22121	0		=			
ANR	22703	Identifier	i		22121	0					
ANR	22704	PrimaryExpression	0		22121	1					
ANR	22705	Condition	i < 16	129:28:2726:2731	22121	1	True				
ANR	22706	RelationalExpression	i < 16		22121	0		<			
ANR	22707	Identifier	i		22121	0					
ANR	22708	PrimaryExpression	16		22121	1					
ANR	22709	PostIncDecOperationExpression	i ++	129:36:2734:2736	22121	2	True				
ANR	22710	Identifier	i		22121	0					
ANR	22711	IncDec	++		22121	1					
ANR	22712	ExpressionStatement	"memcpy ( dest [ p ] + i * linesize , sl -> intra_pcm_ptr + p * 256 + i * 16 , 16 )"	131:20:2760:2860	22121	3	True				
ANR	22713	CallExpression	"memcpy ( dest [ p ] + i * linesize , sl -> intra_pcm_ptr + p * 256 + i * 16 , 16 )"		22121	0					
ANR	22714	Callee	memcpy		22121	0					
ANR	22715	Identifier	memcpy		22121	0					
ANR	22716	ArgumentList	dest [ p ] + i * linesize		22121	1					
ANR	22717	Argument	dest [ p ] + i * linesize		22121	0					
ANR	22718	AdditiveExpression	dest [ p ] + i * linesize		22121	0		+			
ANR	22719	ArrayIndexing	dest [ p ]		22121	0					
ANR	22720	Identifier	dest		22121	0					
ANR	22721	Identifier	p		22121	1					
ANR	22722	MultiplicativeExpression	i * linesize		22121	1		*			
ANR	22723	Identifier	i		22121	0					
ANR	22724	Identifier	linesize		22121	1					
ANR	22725	Argument	sl -> intra_pcm_ptr + p * 256 + i * 16		22121	1					
ANR	22726	AdditiveExpression	sl -> intra_pcm_ptr + p * 256 + i * 16		22121	0		+			
ANR	22727	PtrMemberAccess	sl -> intra_pcm_ptr		22121	0					
ANR	22728	Identifier	sl		22121	0					
ANR	22729	Identifier	intra_pcm_ptr		22121	1					
ANR	22730	AdditiveExpression	p * 256 + i * 16		22121	1		+			
ANR	22731	MultiplicativeExpression	p * 256		22121	0		*			
ANR	22732	Identifier	p		22121	0					
ANR	22733	PrimaryExpression	256		22121	1					
ANR	22734	MultiplicativeExpression	i * 16		22121	1		*			
ANR	22735	Identifier	i		22121	0					
ANR	22736	PrimaryExpression	16		22121	1					
ANR	22737	Argument	16		22121	2					
ANR	22738	PrimaryExpression	16		22121	0					
ANR	22739	ElseStatement	else		22121	0					
ANR	22740	CompoundStatement		135:11:2792:2792	22121	0					
ANR	22741	IfStatement	if ( IS_INTRA ( mb_type ) )		22121	0					
ANR	22742	Condition	IS_INTRA ( mb_type )	139:12:2900:2916	22121	0	True				
ANR	22743	CallExpression	IS_INTRA ( mb_type )		22121	0					
ANR	22744	Callee	IS_INTRA		22121	0					
ANR	22745	Identifier	IS_INTRA		22121	0					
ANR	22746	ArgumentList	mb_type		22121	1					
ANR	22747	Argument	mb_type		22121	0					
ANR	22748	Identifier	mb_type		22121	0					
ANR	22749	CompoundStatement		137:31:2826:2826	22121	1					
ANR	22750	IfStatement	if ( sl -> deblocking_filter )		22121	0					
ANR	22751	Condition	sl -> deblocking_filter	141:16:2938:2958	22121	0	True				
ANR	22752	PtrMemberAccess	sl -> deblocking_filter		22121	0					
ANR	22753	Identifier	sl		22121	0					
ANR	22754	Identifier	deblocking_filter		22121	1					
ANR	22755	ExpressionStatement	"xchg_mb_border ( h , sl , dest [ 0 ] , dest [ 1 ] , dest [ 2 ] , linesize , linesize , 1 , 1 , SIMPLE , PIXEL_SHIFT )"	143:16:2978:3105	22121	1	True				
ANR	22756	CallExpression	"xchg_mb_border ( h , sl , dest [ 0 ] , dest [ 1 ] , dest [ 2 ] , linesize , linesize , 1 , 1 , SIMPLE , PIXEL_SHIFT )"		22121	0					
ANR	22757	Callee	xchg_mb_border		22121	0					
ANR	22758	Identifier	xchg_mb_border		22121	0					
ANR	22759	ArgumentList	h		22121	1					
ANR	22760	Argument	h		22121	0					
ANR	22761	Identifier	h		22121	0					
ANR	22762	Argument	sl		22121	1					
ANR	22763	Identifier	sl		22121	0					
ANR	22764	Argument	dest [ 0 ]		22121	2					
ANR	22765	ArrayIndexing	dest [ 0 ]		22121	0					
ANR	22766	Identifier	dest		22121	0					
ANR	22767	PrimaryExpression	0		22121	1					
ANR	22768	Argument	dest [ 1 ]		22121	3					
ANR	22769	ArrayIndexing	dest [ 1 ]		22121	0					
ANR	22770	Identifier	dest		22121	0					
ANR	22771	PrimaryExpression	1		22121	1					
ANR	22772	Argument	dest [ 2 ]		22121	4					
ANR	22773	ArrayIndexing	dest [ 2 ]		22121	0					
ANR	22774	Identifier	dest		22121	0					
ANR	22775	PrimaryExpression	2		22121	1					
ANR	22776	Argument	linesize		22121	5					
ANR	22777	Identifier	linesize		22121	0					
ANR	22778	Argument	linesize		22121	6					
ANR	22779	Identifier	linesize		22121	0					
ANR	22780	Argument	1		22121	7					
ANR	22781	PrimaryExpression	1		22121	0					
ANR	22782	Argument	1		22121	8					
ANR	22783	PrimaryExpression	1		22121	0					
ANR	22784	Argument	SIMPLE		22121	9					
ANR	22785	Identifier	SIMPLE		22121	0					
ANR	22786	Argument	PIXEL_SHIFT		22121	10					
ANR	22787	Identifier	PIXEL_SHIFT		22121	0					
ANR	22788	ForStatement	for ( p = 0 ; p < plane_count ; p ++ )		22121	1					
ANR	22789	ForInit	p = 0 ;	149:17:3127:3132	22121	0	True				
ANR	22790	AssignmentExpression	p = 0		22121	0		=			
ANR	22791	Identifier	p		22121	0					
ANR	22792	PrimaryExpression	0		22121	1					
ANR	22793	Condition	p < plane_count	149:24:3134:3148	22121	1	True				
ANR	22794	RelationalExpression	p < plane_count		22121	0		<			
ANR	22795	Identifier	p		22121	0					
ANR	22796	Identifier	plane_count		22121	1					
ANR	22797	PostIncDecOperationExpression	p ++	149:41:3151:3153	22121	2	True				
ANR	22798	Identifier	p		22121	0					
ANR	22799	IncDec	++		22121	1					
ANR	22800	ExpressionStatement	"hl_decode_mb_predict_luma ( h , sl , mb_type , SIMPLE , transform_bypass , PIXEL_SHIFT , block_offset , linesize , dest [ p ] , p )"	151:16:3173:3375	22121	3	True				
ANR	22801	CallExpression	"hl_decode_mb_predict_luma ( h , sl , mb_type , SIMPLE , transform_bypass , PIXEL_SHIFT , block_offset , linesize , dest [ p ] , p )"		22121	0					
ANR	22802	Callee	hl_decode_mb_predict_luma		22121	0					
ANR	22803	Identifier	hl_decode_mb_predict_luma		22121	0					
ANR	22804	ArgumentList	h		22121	1					
ANR	22805	Argument	h		22121	0					
ANR	22806	Identifier	h		22121	0					
ANR	22807	Argument	sl		22121	1					
ANR	22808	Identifier	sl		22121	0					
ANR	22809	Argument	mb_type		22121	2					
ANR	22810	Identifier	mb_type		22121	0					
ANR	22811	Argument	SIMPLE		22121	3					
ANR	22812	Identifier	SIMPLE		22121	0					
ANR	22813	Argument	transform_bypass		22121	4					
ANR	22814	Identifier	transform_bypass		22121	0					
ANR	22815	Argument	PIXEL_SHIFT		22121	5					
ANR	22816	Identifier	PIXEL_SHIFT		22121	0					
ANR	22817	Argument	block_offset		22121	6					
ANR	22818	Identifier	block_offset		22121	0					
ANR	22819	Argument	linesize		22121	7					
ANR	22820	Identifier	linesize		22121	0					
ANR	22821	Argument	dest [ p ]		22121	8					
ANR	22822	ArrayIndexing	dest [ p ]		22121	0					
ANR	22823	Identifier	dest		22121	0					
ANR	22824	Identifier	p		22121	1					
ANR	22825	Argument	p		22121	9					
ANR	22826	Identifier	p		22121	0					
ANR	22827	IfStatement	if ( sl -> deblocking_filter )		22121	2					
ANR	22828	Condition	sl -> deblocking_filter	159:16:3396:3416	22121	0	True				
ANR	22829	PtrMemberAccess	sl -> deblocking_filter		22121	0					
ANR	22830	Identifier	sl		22121	0					
ANR	22831	Identifier	deblocking_filter		22121	1					
ANR	22832	ExpressionStatement	"xchg_mb_border ( h , sl , dest [ 0 ] , dest [ 1 ] , dest [ 2 ] , linesize , linesize , 0 , 1 , SIMPLE , PIXEL_SHIFT )"	161:16:3436:3563	22121	1	True				
ANR	22833	CallExpression	"xchg_mb_border ( h , sl , dest [ 0 ] , dest [ 1 ] , dest [ 2 ] , linesize , linesize , 0 , 1 , SIMPLE , PIXEL_SHIFT )"		22121	0					
ANR	22834	Callee	xchg_mb_border		22121	0					
ANR	22835	Identifier	xchg_mb_border		22121	0					
ANR	22836	ArgumentList	h		22121	1					
ANR	22837	Argument	h		22121	0					
ANR	22838	Identifier	h		22121	0					
ANR	22839	Argument	sl		22121	1					
ANR	22840	Identifier	sl		22121	0					
ANR	22841	Argument	dest [ 0 ]		22121	2					
ANR	22842	ArrayIndexing	dest [ 0 ]		22121	0					
ANR	22843	Identifier	dest		22121	0					
ANR	22844	PrimaryExpression	0		22121	1					
ANR	22845	Argument	dest [ 1 ]		22121	3					
ANR	22846	ArrayIndexing	dest [ 1 ]		22121	0					
ANR	22847	Identifier	dest		22121	0					
ANR	22848	PrimaryExpression	1		22121	1					
ANR	22849	Argument	dest [ 2 ]		22121	4					
ANR	22850	ArrayIndexing	dest [ 2 ]		22121	0					
ANR	22851	Identifier	dest		22121	0					
ANR	22852	PrimaryExpression	2		22121	1					
ANR	22853	Argument	linesize		22121	5					
ANR	22854	Identifier	linesize		22121	0					
ANR	22855	Argument	linesize		22121	6					
ANR	22856	Identifier	linesize		22121	0					
ANR	22857	Argument	0		22121	7					
ANR	22858	PrimaryExpression	0		22121	0					
ANR	22859	Argument	1		22121	8					
ANR	22860	PrimaryExpression	1		22121	0					
ANR	22861	Argument	SIMPLE		22121	9					
ANR	22862	Identifier	SIMPLE		22121	0					
ANR	22863	Argument	PIXEL_SHIFT		22121	10					
ANR	22864	Identifier	PIXEL_SHIFT		22121	0					
ANR	22865	ElseStatement	else		22121	0					
ANR	22866	CompoundStatement		163:15:3488:3488	22121	0					
ANR	22867	ExpressionStatement	"FUNC ( hl_motion_444 ) ( h , sl , dest [ 0 ] , dest [ 1 ] , dest [ 2 ] , h -> qpel_put , h -> h264chroma . put_h264_chroma_pixels_tab , h -> qpel_avg , h -> h264chroma . avg_h264_chroma_pixels_tab , h -> h264dsp . weight_h264_pixels_tab , h -> h264dsp . biweight_h264_pixels_tab )"	167:12:3596:3923	22121	0	True				
ANR	22868	CallExpression	"FUNC ( hl_motion_444 ) ( h , sl , dest [ 0 ] , dest [ 1 ] , dest [ 2 ] , h -> qpel_put , h -> h264chroma . put_h264_chroma_pixels_tab , h -> qpel_avg , h -> h264chroma . avg_h264_chroma_pixels_tab , h -> h264dsp . weight_h264_pixels_tab , h -> h264dsp . biweight_h264_pixels_tab )"		22121	0					
ANR	22869	Callee	FUNC ( hl_motion_444 )		22121	0					
ANR	22870	CallExpression	FUNC ( hl_motion_444 )		22121	0					
ANR	22871	Callee	FUNC		22121	0					
ANR	22872	Identifier	FUNC		22121	0					
ANR	22873	ArgumentList	hl_motion_444		22121	1					
ANR	22874	Argument	hl_motion_444		22121	0					
ANR	22875	Identifier	hl_motion_444		22121	0					
ANR	22876	ArgumentList	h		22121	1					
ANR	22877	Argument	h		22121	0					
ANR	22878	Identifier	h		22121	0					
ANR	22879	Argument	sl		22121	1					
ANR	22880	Identifier	sl		22121	0					
ANR	22881	Argument	dest [ 0 ]		22121	2					
ANR	22882	ArrayIndexing	dest [ 0 ]		22121	0					
ANR	22883	Identifier	dest		22121	0					
ANR	22884	PrimaryExpression	0		22121	1					
ANR	22885	Argument	dest [ 1 ]		22121	3					
ANR	22886	ArrayIndexing	dest [ 1 ]		22121	0					
ANR	22887	Identifier	dest		22121	0					
ANR	22888	PrimaryExpression	1		22121	1					
ANR	22889	Argument	dest [ 2 ]		22121	4					
ANR	22890	ArrayIndexing	dest [ 2 ]		22121	0					
ANR	22891	Identifier	dest		22121	0					
ANR	22892	PrimaryExpression	2		22121	1					
ANR	22893	Argument	h -> qpel_put		22121	5					
ANR	22894	PtrMemberAccess	h -> qpel_put		22121	0					
ANR	22895	Identifier	h		22121	0					
ANR	22896	Identifier	qpel_put		22121	1					
ANR	22897	Argument	h -> h264chroma . put_h264_chroma_pixels_tab		22121	6					
ANR	22898	MemberAccess	h -> h264chroma . put_h264_chroma_pixels_tab		22121	0					
ANR	22899	PtrMemberAccess	h -> h264chroma		22121	0					
ANR	22900	Identifier	h		22121	0					
ANR	22901	Identifier	h264chroma		22121	1					
ANR	22902	Identifier	put_h264_chroma_pixels_tab		22121	1					
ANR	22903	Argument	h -> qpel_avg		22121	7					
ANR	22904	PtrMemberAccess	h -> qpel_avg		22121	0					
ANR	22905	Identifier	h		22121	0					
ANR	22906	Identifier	qpel_avg		22121	1					
ANR	22907	Argument	h -> h264chroma . avg_h264_chroma_pixels_tab		22121	8					
ANR	22908	MemberAccess	h -> h264chroma . avg_h264_chroma_pixels_tab		22121	0					
ANR	22909	PtrMemberAccess	h -> h264chroma		22121	0					
ANR	22910	Identifier	h		22121	0					
ANR	22911	Identifier	h264chroma		22121	1					
ANR	22912	Identifier	avg_h264_chroma_pixels_tab		22121	1					
ANR	22913	Argument	h -> h264dsp . weight_h264_pixels_tab		22121	9					
ANR	22914	MemberAccess	h -> h264dsp . weight_h264_pixels_tab		22121	0					
ANR	22915	PtrMemberAccess	h -> h264dsp		22121	0					
ANR	22916	Identifier	h		22121	0					
ANR	22917	Identifier	h264dsp		22121	1					
ANR	22918	Identifier	weight_h264_pixels_tab		22121	1					
ANR	22919	Argument	h -> h264dsp . biweight_h264_pixels_tab		22121	10					
ANR	22920	MemberAccess	h -> h264dsp . biweight_h264_pixels_tab		22121	0					
ANR	22921	PtrMemberAccess	h -> h264dsp		22121	0					
ANR	22922	Identifier	h		22121	0					
ANR	22923	Identifier	h264dsp		22121	1					
ANR	22924	Identifier	biweight_h264_pixels_tab		22121	1					
ANR	22925	ForStatement	for ( p = 0 ; p < plane_count ; p ++ )		22121	1					
ANR	22926	ForInit	p = 0 ;	181:13:3952:3957	22121	0	True				
ANR	22927	AssignmentExpression	p = 0		22121	0		=			
ANR	22928	Identifier	p		22121	0					
ANR	22929	PrimaryExpression	0		22121	1					
ANR	22930	Condition	p < plane_count	181:20:3959:3973	22121	1	True				
ANR	22931	RelationalExpression	p < plane_count		22121	0		<			
ANR	22932	Identifier	p		22121	0					
ANR	22933	Identifier	plane_count		22121	1					
ANR	22934	PostIncDecOperationExpression	p ++	181:37:3976:3978	22121	2	True				
ANR	22935	Identifier	p		22121	0					
ANR	22936	IncDec	++		22121	1					
ANR	22937	ExpressionStatement	"hl_decode_mb_idct_luma ( h , sl , mb_type , SIMPLE , transform_bypass , PIXEL_SHIFT , block_offset , linesize , dest [ p ] , p )"	183:12:3994:4179	22121	3	True				
ANR	22938	CallExpression	"hl_decode_mb_idct_luma ( h , sl , mb_type , SIMPLE , transform_bypass , PIXEL_SHIFT , block_offset , linesize , dest [ p ] , p )"		22121	0					
ANR	22939	Callee	hl_decode_mb_idct_luma		22121	0					
ANR	22940	Identifier	hl_decode_mb_idct_luma		22121	0					
ANR	22941	ArgumentList	h		22121	1					
ANR	22942	Argument	h		22121	0					
ANR	22943	Identifier	h		22121	0					
ANR	22944	Argument	sl		22121	1					
ANR	22945	Identifier	sl		22121	0					
ANR	22946	Argument	mb_type		22121	2					
ANR	22947	Identifier	mb_type		22121	0					
ANR	22948	Argument	SIMPLE		22121	3					
ANR	22949	Identifier	SIMPLE		22121	0					
ANR	22950	Argument	transform_bypass		22121	4					
ANR	22951	Identifier	transform_bypass		22121	0					
ANR	22952	Argument	PIXEL_SHIFT		22121	5					
ANR	22953	Identifier	PIXEL_SHIFT		22121	0					
ANR	22954	Argument	block_offset		22121	6					
ANR	22955	Identifier	block_offset		22121	0					
ANR	22956	Argument	linesize		22121	7					
ANR	22957	Identifier	linesize		22121	0					
ANR	22958	Argument	dest [ p ]		22121	8					
ANR	22959	ArrayIndexing	dest [ p ]		22121	0					
ANR	22960	Identifier	dest		22121	0					
ANR	22961	Identifier	p		22121	1					
ANR	22962	Argument	p		22121	9					
ANR	22963	Identifier	p		22121	0					
ANR	22964	ReturnType	static av_noinline void FUNC		22121	1					
ANR	22965	Identifier	( hl_decode_mb_444 )		22121	2					
ANR	22966	Identifier	hl_decode_mb_444		22121	3					
ANR	22967	ParameterList	"const H264Context * h , H264SliceContext * sl"		22121	4					
ANR	22968	Parameter	const H264Context * h	1:47:47:66	22121	0	True				
ANR	22969	ParameterType	const H264Context *		22121	0					
ANR	22970	Identifier	h		22121	1					
ANR	22971	Parameter	H264SliceContext * sl	1:69:69:88	22121	1	True				
ANR	22972	ParameterType	H264SliceContext *		22121	0					
ANR	22973	Identifier	sl		22121	1					
ANR	22974	CFGEntryNode	ENTRY		22121		True				
ANR	22975	CFGExitNode	EXIT		22121		True				
ANR	22976	Symbol	* * h -> cur_pic . f		22121						
ANR	22977	Symbol	PIXEL_SHIFT		22121						
ANR	22978	Symbol	IS_INTRA_PCM		22121						
ANR	22979	Symbol	& gb		22121						
ANR	22980	Symbol	* scan8		22121						
ANR	22981	Symbol	get_bits		22121						
ANR	22982	Symbol	dest		22121						
ANR	22983	Symbol	linesize		22121						
ANR	22984	Symbol	ref		22121						
ANR	22985	Symbol	block_offset		22121						
ANR	22986	Symbol	* h -> cur_pic . f -> data		22121						
ANR	22987	Symbol	h -> h264dsp . weight_h264_pixels_tab		22121						
ANR	22988	Symbol	tmp		22121						
ANR	22989	Symbol	mb_type		22121						
ANR	22990	Symbol	sl -> ref_cache		22121						
ANR	22991	Symbol	* sl		22121						
ANR	22992	Symbol	MB_FIELD		22121						
ANR	22993	Symbol	IS_16X16		22121						
ANR	22994	Symbol	* * i		22121						
ANR	22995	Symbol	* * h		22121						
ANR	22996	Symbol	h -> block_offset		22121						
ANR	22997	Symbol	* sl -> ref_cache		22121						
ANR	22998	Symbol	sl -> mb_y		22121						
ANR	22999	Symbol	FRAME_MBAFF		22121						
ANR	23000	Symbol	sl -> mb_x		22121						
ANR	23001	Symbol	list		22121						
ANR	23002	Symbol	* * scan8		22121						
ANR	23003	Symbol	AV_CODEC_FLAG_GRAY		22121						
ANR	23004	Symbol	* h -> cur_pic . mb_type		22121						
ANR	23005	Symbol	sl -> linesize		22121						
ANR	23006	Symbol	sl -> deblocking_filter		22121						
ANR	23007	Symbol	h -> flags		22121						
ANR	23008	Symbol	sl -> list_count		22121						
ANR	23009	Symbol	h -> cur_pic . f		22121						
ANR	23010	Symbol	* * * h		22121						
ANR	23011	Symbol	h -> h264dsp . biweight_h264_pixels_tab		22121						
ANR	23012	Symbol	bit_depth		22121						
ANR	23013	Symbol	h -> qpel_put		22121						
ANR	23014	Symbol	plane_count		22121						
ANR	23015	Symbol	* h -> cur_pic		22121						
ANR	23016	Symbol	* * * sl		22121						
ANR	23017	Symbol	* tmp		22121						
ANR	23018	Symbol	* * sl -> ref_cache		22121						
ANR	23019	Symbol	h -> h264chroma		22121						
ANR	23020	Symbol	h -> h264chroma . put_h264_chroma_pixels_tab		22121						
ANR	23021	Symbol	sl -> mb_xy		22121						
ANR	23022	Symbol	mb_xy		22121						
ANR	23023	Symbol	* dest		22121						
ANR	23024	Symbol	sl -> mb_uvlinesize		22121						
ANR	23025	Symbol	* * sl		22121						
ANR	23026	Symbol	IS_INTRA		22121						
ANR	23027	Symbol	h -> h264dsp		22121						
ANR	23028	Symbol	hl_motion_444		22121						
ANR	23029	Symbol	h -> cur_pic . mb_type		22121						
ANR	23030	Symbol	transform_bypass		22121						
ANR	23031	Symbol	h -> cur_pic		22121						
ANR	23032	Symbol	h -> vdsp		22121						
ANR	23033	Symbol	* * list		22121						
ANR	23034	Symbol	scan8		22121						
ANR	23035	Symbol	sl		22121						
ANR	23036	Symbol	CONFIG_GRAY		22121						
ANR	23037	Symbol	gb		22121						
ANR	23038	Symbol	* h -> list_counts		22121						
ANR	23039	Symbol	h -> sps . bit_depth_luma		22121						
ANR	23040	Symbol	h -> qpel_avg		22121						
ANR	23041	Symbol	h -> list_counts		22121						
ANR	23042	Symbol	sl -> qscale		22121						
ANR	23043	Symbol	* h -> cur_pic . f		22121						
ANR	23044	Symbol	* * h -> cur_pic		22121						
ANR	23045	Symbol	h		22121						
ANR	23046	Symbol	i		22121						
ANR	23047	Symbol	j		22121						
ANR	23048	Symbol	h -> sps . transform_bypass		22121						
ANR	23049	Symbol	sl -> mb_linesize		22121						
ANR	23050	Symbol	sl -> intra_pcm_ptr		22121						
ANR	23051	Symbol	p		22121						
ANR	23052	Symbol	h -> cur_pic . f -> data		22121						
ANR	23053	Symbol	* h		22121						
ANR	23054	Symbol	* i		22121						
ANR	23055	Symbol	* j		22121						
ANR	23056	Symbol	* list		22121						
ANR	23057	Symbol	h -> h264chroma . avg_h264_chroma_pixels_tab		22121						
ANR	23058	Symbol	SIMPLE		22121						
ANR	23059	Symbol	USES_LIST		22121						
ANR	23060	Symbol	h -> sps		22121						
ANR	23061	Symbol	* p		22121						
ANR	23062	Symbol	* mb_xy		22121						
ANR	23063	Symbol	mb_y		22121						
ANR	23064	Symbol	mb_x		22121						
ANR	23065	Symbol	* ref		22121						
