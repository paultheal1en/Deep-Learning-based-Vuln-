command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3844809	File	/home/p4ultr4n/workplace/ReVeal/raw_code/filter_01_1.c								
ANR	3844810	Function	filter	1:0:0:4368							
ANR	3844811	FunctionDef	"filter (FSPPContext * p , uint8_t * dst , uint8_t * src , int dst_stride , int src_stride , int width , int height , uint8_t * qp_store , int qp_stride , int is_luma)"		3844810	0					
ANR	3844812	CompoundStatement		9:0:226:4368	3844810	0					
ANR	3844813	IdentifierDeclStatement	"int x , x0 , y , es , qy , t ;"	11:4:233:256	3844810	0	True				
ANR	3844814	IdentifierDecl	x		3844810	0					
ANR	3844815	IdentifierDeclType	int		3844810	0					
ANR	3844816	Identifier	x		3844810	1					
ANR	3844817	IdentifierDecl	x0		3844810	1					
ANR	3844818	IdentifierDeclType	int		3844810	0					
ANR	3844819	Identifier	x0		3844810	1					
ANR	3844820	IdentifierDecl	y		3844810	2					
ANR	3844821	IdentifierDeclType	int		3844810	0					
ANR	3844822	Identifier	y		3844810	1					
ANR	3844823	IdentifierDecl	es		3844810	3					
ANR	3844824	IdentifierDeclType	int		3844810	0					
ANR	3844825	Identifier	es		3844810	1					
ANR	3844826	IdentifierDecl	qy		3844810	4					
ANR	3844827	IdentifierDeclType	int		3844810	0					
ANR	3844828	Identifier	qy		3844810	1					
ANR	3844829	IdentifierDecl	t		3844810	5					
ANR	3844830	IdentifierDeclType	int		3844810	0					
ANR	3844831	Identifier	t		3844810	1					
ANR	3844832	IdentifierDeclStatement	const int stride = is_luma ? p -> temp_stride : ( width + 16 ) ;	15:4:265:323	3844810	1	True				
ANR	3844833	IdentifierDecl	stride = is_luma ? p -> temp_stride : ( width + 16 )		3844810	0					
ANR	3844834	IdentifierDeclType	const int		3844810	0					
ANR	3844835	Identifier	stride		3844810	1					
ANR	3844836	AssignmentExpression	stride = is_luma ? p -> temp_stride : ( width + 16 )		3844810	2		=			
ANR	3844837	Identifier	stride		3844810	0					
ANR	3844838	ConditionalExpression	is_luma ? p -> temp_stride : ( width + 16 )		3844810	1					
ANR	3844839	Condition	is_luma		3844810	0					
ANR	3844840	Identifier	is_luma		3844810	0					
ANR	3844841	PtrMemberAccess	p -> temp_stride		3844810	1					
ANR	3844842	Identifier	p		3844810	0					
ANR	3844843	Identifier	temp_stride		3844810	1					
ANR	3844844	AdditiveExpression	width + 16		3844810	2		+			
ANR	3844845	Identifier	width		3844810	0					
ANR	3844846	PrimaryExpression	16		3844810	1					
ANR	3844847	IdentifierDeclStatement	const int step = 6 - p -> log2_count ;	17:4:330:364	3844810	2	True				
ANR	3844848	IdentifierDecl	step = 6 - p -> log2_count		3844810	0					
ANR	3844849	IdentifierDeclType	const int		3844810	0					
ANR	3844850	Identifier	step		3844810	1					
ANR	3844851	AssignmentExpression	step = 6 - p -> log2_count		3844810	2		=			
ANR	3844852	Identifier	step		3844810	0					
ANR	3844853	AdditiveExpression	6 - p -> log2_count		3844810	1		-			
ANR	3844854	PrimaryExpression	6		3844810	0					
ANR	3844855	PtrMemberAccess	p -> log2_count		3844810	1					
ANR	3844856	Identifier	p		3844810	0					
ANR	3844857	Identifier	log2_count		3844810	1					
ANR	3844858	IdentifierDeclStatement	const int qpsh = 4 - p -> hsub * ! is_luma ;	19:4:371:410	3844810	3	True				
ANR	3844859	IdentifierDecl	qpsh = 4 - p -> hsub * ! is_luma		3844810	0					
ANR	3844860	IdentifierDeclType	const int		3844810	0					
ANR	3844861	Identifier	qpsh		3844810	1					
ANR	3844862	AssignmentExpression	qpsh = 4 - p -> hsub * ! is_luma		3844810	2		=			
ANR	3844863	Identifier	qpsh		3844810	0					
ANR	3844864	AdditiveExpression	4 - p -> hsub * ! is_luma		3844810	1		-			
ANR	3844865	PrimaryExpression	4		3844810	0					
ANR	3844866	MultiplicativeExpression	p -> hsub * ! is_luma		3844810	1		*			
ANR	3844867	PtrMemberAccess	p -> hsub		3844810	0					
ANR	3844868	Identifier	p		3844810	0					
ANR	3844869	Identifier	hsub		3844810	1					
ANR	3844870	UnaryOperationExpression	! is_luma		3844810	1					
ANR	3844871	UnaryOperator	!		3844810	0					
ANR	3844872	Identifier	is_luma		3844810	1					
ANR	3844873	IdentifierDeclStatement	const int qpsv = 4 - p -> vsub * ! is_luma ;	21:4:417:456	3844810	4	True				
ANR	3844874	IdentifierDecl	qpsv = 4 - p -> vsub * ! is_luma		3844810	0					
ANR	3844875	IdentifierDeclType	const int		3844810	0					
ANR	3844876	Identifier	qpsv		3844810	1					
ANR	3844877	AssignmentExpression	qpsv = 4 - p -> vsub * ! is_luma		3844810	2		=			
ANR	3844878	Identifier	qpsv		3844810	0					
ANR	3844879	AdditiveExpression	4 - p -> vsub * ! is_luma		3844810	1		-			
ANR	3844880	PrimaryExpression	4		3844810	0					
ANR	3844881	MultiplicativeExpression	p -> vsub * ! is_luma		3844810	1		*			
ANR	3844882	PtrMemberAccess	p -> vsub		3844810	0					
ANR	3844883	Identifier	p		3844810	0					
ANR	3844884	Identifier	vsub		3844810	1					
ANR	3844885	UnaryOperationExpression	! is_luma		3844810	1					
ANR	3844886	UnaryOperator	!		3844810	0					
ANR	3844887	Identifier	is_luma		3844810	1					
ANR	3844888	ExpressionStatement	"DECLARE_ALIGNED ( 32 , int32_t , block_align ) [ 4 * 8 * BLOCKSZ + 4 * 8 * BLOCKSZ ]"	25:4:465:541	3844810	5	True				
ANR	3844889	ArrayIndexing	"DECLARE_ALIGNED ( 32 , int32_t , block_align ) [ 4 * 8 * BLOCKSZ + 4 * 8 * BLOCKSZ ]"		3844810	0					
ANR	3844890	CallExpression	"DECLARE_ALIGNED ( 32 , int32_t , block_align )"		3844810	0					
ANR	3844891	Callee	DECLARE_ALIGNED		3844810	0					
ANR	3844892	Identifier	DECLARE_ALIGNED		3844810	0					
ANR	3844893	ArgumentList	32		3844810	1					
ANR	3844894	Argument	32		3844810	0					
ANR	3844895	PrimaryExpression	32		3844810	0					
ANR	3844896	Argument	int32_t		3844810	1					
ANR	3844897	Identifier	int32_t		3844810	0					
ANR	3844898	Argument	block_align		3844810	2					
ANR	3844899	Identifier	block_align		3844810	0					
ANR	3844900	AdditiveExpression	4 * 8 * BLOCKSZ + 4 * 8 * BLOCKSZ		3844810	1		+			
ANR	3844901	MultiplicativeExpression	4 * 8 * BLOCKSZ		3844810	0		*			
ANR	3844902	PrimaryExpression	4		3844810	0					
ANR	3844903	MultiplicativeExpression	8 * BLOCKSZ		3844810	1		*			
ANR	3844904	PrimaryExpression	8		3844810	0					
ANR	3844905	Identifier	BLOCKSZ		3844810	1					
ANR	3844906	MultiplicativeExpression	4 * 8 * BLOCKSZ		3844810	1		*			
ANR	3844907	PrimaryExpression	4		3844810	0					
ANR	3844908	MultiplicativeExpression	8 * BLOCKSZ		3844810	1		*			
ANR	3844909	PrimaryExpression	8		3844810	0					
ANR	3844910	Identifier	BLOCKSZ		3844810	1					
ANR	3844911	IdentifierDeclStatement	int16_t * block = ( int16_t * ) block_align ;	27:4:548:588	3844810	6	True				
ANR	3844912	IdentifierDecl	* block = ( int16_t * ) block_align		3844810	0					
ANR	3844913	IdentifierDeclType	int16_t *		3844810	0					
ANR	3844914	Identifier	block		3844810	1					
ANR	3844915	AssignmentExpression	* block = ( int16_t * ) block_align		3844810	2		=			
ANR	3844916	Identifier	block		3844810	0					
ANR	3844917	CastExpression	( int16_t * ) block_align		3844810	1					
ANR	3844918	CastTarget	int16_t *		3844810	0					
ANR	3844919	Identifier	block_align		3844810	1					
ANR	3844920	IdentifierDeclStatement	int16_t * block3 = ( int16_t * ) ( block_align + 4 * 8 * BLOCKSZ ) ;	29:4:595:655	3844810	7	True				
ANR	3844921	IdentifierDecl	* block3 = ( int16_t * ) ( block_align + 4 * 8 * BLOCKSZ )		3844810	0					
ANR	3844922	IdentifierDeclType	int16_t *		3844810	0					
ANR	3844923	Identifier	block3		3844810	1					
ANR	3844924	AssignmentExpression	* block3 = ( int16_t * ) ( block_align + 4 * 8 * BLOCKSZ )		3844810	2		=			
ANR	3844925	Identifier	block3		3844810	0					
ANR	3844926	CastExpression	( int16_t * ) ( block_align + 4 * 8 * BLOCKSZ )		3844810	1					
ANR	3844927	CastTarget	int16_t *		3844810	0					
ANR	3844928	AdditiveExpression	block_align + 4 * 8 * BLOCKSZ		3844810	1		+			
ANR	3844929	Identifier	block_align		3844810	0					
ANR	3844930	MultiplicativeExpression	4 * 8 * BLOCKSZ		3844810	1		*			
ANR	3844931	PrimaryExpression	4		3844810	0					
ANR	3844932	MultiplicativeExpression	8 * BLOCKSZ		3844810	1		*			
ANR	3844933	PrimaryExpression	8		3844810	0					
ANR	3844934	Identifier	BLOCKSZ		3844810	1					
ANR	3844935	ExpressionStatement	"memset ( block3 , 0 , 4 * 8 * BLOCKSZ )"	33:4:664:698	3844810	8	True				
ANR	3844936	CallExpression	"memset ( block3 , 0 , 4 * 8 * BLOCKSZ )"		3844810	0					
ANR	3844937	Callee	memset		3844810	0					
ANR	3844938	Identifier	memset		3844810	0					
ANR	3844939	ArgumentList	block3		3844810	1					
ANR	3844940	Argument	block3		3844810	0					
ANR	3844941	Identifier	block3		3844810	0					
ANR	3844942	Argument	0		3844810	1					
ANR	3844943	PrimaryExpression	0		3844810	0					
ANR	3844944	Argument	4 * 8 * BLOCKSZ		3844810	2					
ANR	3844945	MultiplicativeExpression	4 * 8 * BLOCKSZ		3844810	0		*			
ANR	3844946	PrimaryExpression	4		3844810	0					
ANR	3844947	MultiplicativeExpression	8 * BLOCKSZ		3844810	1		*			
ANR	3844948	PrimaryExpression	8		3844810	0					
ANR	3844949	Identifier	BLOCKSZ		3844810	1					
ANR	3844950	IfStatement	if ( ! src || ! dst )		3844810	9					
ANR	3844951	Condition	! src || ! dst	37:8:711:722	3844810	0	True				
ANR	3844952	OrExpression	! src || ! dst		3844810	0		||			
ANR	3844953	UnaryOperationExpression	! src		3844810	0					
ANR	3844954	UnaryOperator	!		3844810	0					
ANR	3844955	Identifier	src		3844810	1					
ANR	3844956	UnaryOperationExpression	! dst		3844810	1					
ANR	3844957	UnaryOperator	!		3844810	0					
ANR	3844958	Identifier	dst		3844810	1					
ANR	3844959	ReturnStatement	return ;	37:22:725:731	3844810	1	True				
ANR	3844960	ForStatement	for ( y = 0 ; y < height ; y ++ )		3844810	10					
ANR	3844961	ForInit	y = 0 ;	41:9:745:750	3844810	0	True				
ANR	3844962	AssignmentExpression	y = 0		3844810	0		=			
ANR	3844963	Identifier	y		3844810	0					
ANR	3844964	PrimaryExpression	0		3844810	1					
ANR	3844965	Condition	y < height	41:16:752:761	3844810	1	True				
ANR	3844966	RelationalExpression	y < height		3844810	0		<			
ANR	3844967	Identifier	y		3844810	0					
ANR	3844968	Identifier	height		3844810	1					
ANR	3844969	PostIncDecOperationExpression	y ++	41:28:764:766	3844810	2	True				
ANR	3844970	Identifier	y		3844810	0					
ANR	3844971	IncDec	++		3844810	1					
ANR	3844972	CompoundStatement		35:8:553:592	3844810	3					
ANR	3844973	IdentifierDeclStatement	int index = 8 + 8 * stride + y * stride ;	43:8:780:819	3844810	0	True				
ANR	3844974	IdentifierDecl	index = 8 + 8 * stride + y * stride		3844810	0					
ANR	3844975	IdentifierDeclType	int		3844810	0					
ANR	3844976	Identifier	index		3844810	1					
ANR	3844977	AssignmentExpression	index = 8 + 8 * stride + y * stride		3844810	2		=			
ANR	3844978	Identifier	index		3844810	0					
ANR	3844979	AdditiveExpression	8 + 8 * stride + y * stride		3844810	1		+			
ANR	3844980	PrimaryExpression	8		3844810	0					
ANR	3844981	AdditiveExpression	8 * stride + y * stride		3844810	1		+			
ANR	3844982	MultiplicativeExpression	8 * stride		3844810	0		*			
ANR	3844983	PrimaryExpression	8		3844810	0					
ANR	3844984	Identifier	stride		3844810	1					
ANR	3844985	MultiplicativeExpression	y * stride		3844810	1		*			
ANR	3844986	Identifier	y		3844810	0					
ANR	3844987	Identifier	stride		3844810	1					
ANR	3844988	ExpressionStatement	"memcpy ( p -> src + index , src + y * src_stride , width )"	45:8:830:881	3844810	1	True				
ANR	3844989	CallExpression	"memcpy ( p -> src + index , src + y * src_stride , width )"		3844810	0					
ANR	3844990	Callee	memcpy		3844810	0					
ANR	3844991	Identifier	memcpy		3844810	0					
ANR	3844992	ArgumentList	p -> src + index		3844810	1					
ANR	3844993	Argument	p -> src + index		3844810	0					
ANR	3844994	AdditiveExpression	p -> src + index		3844810	0		+			
ANR	3844995	PtrMemberAccess	p -> src		3844810	0					
ANR	3844996	Identifier	p		3844810	0					
ANR	3844997	Identifier	src		3844810	1					
ANR	3844998	Identifier	index		3844810	1					
ANR	3844999	Argument	src + y * src_stride		3844810	1					
ANR	3845000	AdditiveExpression	src + y * src_stride		3844810	0		+			
ANR	3845001	Identifier	src		3844810	0					
ANR	3845002	MultiplicativeExpression	y * src_stride		3844810	1		*			
ANR	3845003	Identifier	y		3844810	0					
ANR	3845004	Identifier	src_stride		3844810	1					
ANR	3845005	Argument	width		3844810	2					
ANR	3845006	Identifier	width		3844810	0					
ANR	3845007	ForStatement	for ( x = 0 ; x < 8 ; x ++ )		3844810	2					
ANR	3845008	ForInit	x = 0 ;	47:13:897:902	3844810	0	True				
ANR	3845009	AssignmentExpression	x = 0		3844810	0		=			
ANR	3845010	Identifier	x		3844810	0					
ANR	3845011	PrimaryExpression	0		3844810	1					
ANR	3845012	Condition	x < 8	47:20:904:908	3844810	1	True				
ANR	3845013	RelationalExpression	x < 8		3844810	0		<			
ANR	3845014	Identifier	x		3844810	0					
ANR	3845015	PrimaryExpression	8		3844810	1					
ANR	3845016	PostIncDecOperationExpression	x ++	47:27:911:913	3844810	2	True				
ANR	3845017	Identifier	x		3844810	0					
ANR	3845018	IncDec	++		3844810	1					
ANR	3845019	CompoundStatement		39:32:689:689	3844810	3					
ANR	3845020	ExpressionStatement	p -> src [ index - x - 1 ] = p -> src [ index + x ]	49:12:931:992	3844810	0	True				
ANR	3845021	AssignmentExpression	p -> src [ index - x - 1 ] = p -> src [ index + x ]		3844810	0		=			
ANR	3845022	ArrayIndexing	p -> src [ index - x - 1 ]		3844810	0					
ANR	3845023	PtrMemberAccess	p -> src		3844810	0					
ANR	3845024	Identifier	p		3844810	0					
ANR	3845025	Identifier	src		3844810	1					
ANR	3845026	AdditiveExpression	index - x - 1		3844810	1		-			
ANR	3845027	Identifier	index		3844810	0					
ANR	3845028	AdditiveExpression	x - 1		3844810	1		-			
ANR	3845029	Identifier	x		3844810	0					
ANR	3845030	PrimaryExpression	1		3844810	1					
ANR	3845031	ArrayIndexing	p -> src [ index + x ]		3844810	1					
ANR	3845032	PtrMemberAccess	p -> src		3844810	0					
ANR	3845033	Identifier	p		3844810	0					
ANR	3845034	Identifier	src		3844810	1					
ANR	3845035	AdditiveExpression	index + x		3844810	1		+			
ANR	3845036	Identifier	index		3844810	0					
ANR	3845037	Identifier	x		3844810	1					
ANR	3845038	ExpressionStatement	p -> src [ index + width + x ] = p -> src [ index + width - x - 1 ]	51:12:1007:1068	3844810	1	True				
ANR	3845039	AssignmentExpression	p -> src [ index + width + x ] = p -> src [ index + width - x - 1 ]		3844810	0		=			
ANR	3845040	ArrayIndexing	p -> src [ index + width + x ]		3844810	0					
ANR	3845041	PtrMemberAccess	p -> src		3844810	0					
ANR	3845042	Identifier	p		3844810	0					
ANR	3845043	Identifier	src		3844810	1					
ANR	3845044	AdditiveExpression	index + width + x		3844810	1		+			
ANR	3845045	Identifier	index		3844810	0					
ANR	3845046	AdditiveExpression	width + x		3844810	1		+			
ANR	3845047	Identifier	width		3844810	0					
ANR	3845048	Identifier	x		3844810	1					
ANR	3845049	ArrayIndexing	p -> src [ index + width - x - 1 ]		3844810	1					
ANR	3845050	PtrMemberAccess	p -> src		3844810	0					
ANR	3845051	Identifier	p		3844810	0					
ANR	3845052	Identifier	src		3844810	1					
ANR	3845053	AdditiveExpression	index + width - x - 1		3844810	1		+			
ANR	3845054	Identifier	index		3844810	0					
ANR	3845055	AdditiveExpression	width - x - 1		3844810	1		-			
ANR	3845056	Identifier	width		3844810	0					
ANR	3845057	AdditiveExpression	x - 1		3844810	1		-			
ANR	3845058	Identifier	x		3844810	0					
ANR	3845059	PrimaryExpression	1		3844810	1					
ANR	3845060	ForStatement	for ( y = 0 ; y < 8 ; y ++ )		3844810	11					
ANR	3845061	ForInit	y = 0 ;	59:9:1100:1105	3844810	0	True				
ANR	3845062	AssignmentExpression	y = 0		3844810	0		=			
ANR	3845063	Identifier	y		3844810	0					
ANR	3845064	PrimaryExpression	0		3844810	1					
ANR	3845065	Condition	y < 8	59:16:1107:1111	3844810	1	True				
ANR	3845066	RelationalExpression	y < 8		3844810	0		<			
ANR	3845067	Identifier	y		3844810	0					
ANR	3845068	PrimaryExpression	8		3844810	1					
ANR	3845069	PostIncDecOperationExpression	y ++	59:23:1114:1116	3844810	2	True				
ANR	3845070	Identifier	y		3844810	0					
ANR	3845071	IncDec	++		3844810	1					
ANR	3845072	CompoundStatement		51:28:892:892	3844810	3					
ANR	3845073	ExpressionStatement	"memcpy ( p -> src + ( 7 - y ) * stride , p -> src + ( y + 8 ) * stride , stride )"	61:8:1130:1216	3844810	0	True				
ANR	3845074	CallExpression	"memcpy ( p -> src + ( 7 - y ) * stride , p -> src + ( y + 8 ) * stride , stride )"		3844810	0					
ANR	3845075	Callee	memcpy		3844810	0					
ANR	3845076	Identifier	memcpy		3844810	0					
ANR	3845077	ArgumentList	p -> src + ( 7 - y ) * stride		3844810	1					
ANR	3845078	Argument	p -> src + ( 7 - y ) * stride		3844810	0					
ANR	3845079	AdditiveExpression	p -> src + ( 7 - y ) * stride		3844810	0		+			
ANR	3845080	PtrMemberAccess	p -> src		3844810	0					
ANR	3845081	Identifier	p		3844810	0					
ANR	3845082	Identifier	src		3844810	1					
ANR	3845083	MultiplicativeExpression	( 7 - y ) * stride		3844810	1		*			
ANR	3845084	AdditiveExpression	7 - y		3844810	0		-			
ANR	3845085	PrimaryExpression	7		3844810	0					
ANR	3845086	Identifier	y		3844810	1					
ANR	3845087	Identifier	stride		3844810	1					
ANR	3845088	Argument	p -> src + ( y + 8 ) * stride		3844810	1					
ANR	3845089	AdditiveExpression	p -> src + ( y + 8 ) * stride		3844810	0		+			
ANR	3845090	PtrMemberAccess	p -> src		3844810	0					
ANR	3845091	Identifier	p		3844810	0					
ANR	3845092	Identifier	src		3844810	1					
ANR	3845093	MultiplicativeExpression	( y + 8 ) * stride		3844810	1		*			
ANR	3845094	AdditiveExpression	y + 8		3844810	0		+			
ANR	3845095	Identifier	y		3844810	0					
ANR	3845096	PrimaryExpression	8		3844810	1					
ANR	3845097	Identifier	stride		3844810	1					
ANR	3845098	Argument	stride		3844810	2					
ANR	3845099	Identifier	stride		3844810	0					
ANR	3845100	ExpressionStatement	"memcpy ( p -> src + ( height + 8 + y ) * stride , p -> src + ( height - y + 7 ) * stride , stride )"	63:8:1227:1313	3844810	1	True				
ANR	3845101	CallExpression	"memcpy ( p -> src + ( height + 8 + y ) * stride , p -> src + ( height - y + 7 ) * stride , stride )"		3844810	0					
ANR	3845102	Callee	memcpy		3844810	0					
ANR	3845103	Identifier	memcpy		3844810	0					
ANR	3845104	ArgumentList	p -> src + ( height + 8 + y ) * stride		3844810	1					
ANR	3845105	Argument	p -> src + ( height + 8 + y ) * stride		3844810	0					
ANR	3845106	AdditiveExpression	p -> src + ( height + 8 + y ) * stride		3844810	0		+			
ANR	3845107	PtrMemberAccess	p -> src		3844810	0					
ANR	3845108	Identifier	p		3844810	0					
ANR	3845109	Identifier	src		3844810	1					
ANR	3845110	MultiplicativeExpression	( height + 8 + y ) * stride		3844810	1		*			
ANR	3845111	AdditiveExpression	height + 8 + y		3844810	0		+			
ANR	3845112	Identifier	height		3844810	0					
ANR	3845113	AdditiveExpression	8 + y		3844810	1		+			
ANR	3845114	PrimaryExpression	8		3844810	0					
ANR	3845115	Identifier	y		3844810	1					
ANR	3845116	Identifier	stride		3844810	1					
ANR	3845117	Argument	p -> src + ( height - y + 7 ) * stride		3844810	1					
ANR	3845118	AdditiveExpression	p -> src + ( height - y + 7 ) * stride		3844810	0		+			
ANR	3845119	PtrMemberAccess	p -> src		3844810	0					
ANR	3845120	Identifier	p		3844810	0					
ANR	3845121	Identifier	src		3844810	1					
ANR	3845122	MultiplicativeExpression	( height - y + 7 ) * stride		3844810	1		*			
ANR	3845123	AdditiveExpression	height - y + 7		3844810	0		-			
ANR	3845124	Identifier	height		3844810	0					
ANR	3845125	AdditiveExpression	y + 7		3844810	1		+			
ANR	3845126	Identifier	y		3844810	0					
ANR	3845127	PrimaryExpression	7		3844810	1					
ANR	3845128	Identifier	stride		3844810	1					
ANR	3845129	Argument	stride		3844810	2					
ANR	3845130	Identifier	stride		3844810	0					
ANR	3845131	ForStatement	for ( y = 8 ; y < 24 ; y ++ )		3844810	12					
ANR	3845132	ForInit	y = 8 ;	71:9:1362:1367	3844810	0	True				
ANR	3845133	AssignmentExpression	y = 8		3844810	0		=			
ANR	3845134	Identifier	y		3844810	0					
ANR	3845135	PrimaryExpression	8		3844810	1					
ANR	3845136	Condition	y < 24	71:16:1369:1374	3844810	1	True				
ANR	3845137	RelationalExpression	y < 24		3844810	0		<			
ANR	3845138	Identifier	y		3844810	0					
ANR	3845139	PrimaryExpression	24		3844810	1					
ANR	3845140	PostIncDecOperationExpression	y ++	71:24:1377:1379	3844810	2	True				
ANR	3845141	Identifier	y		3844810	0					
ANR	3845142	IncDec	++		3844810	1					
ANR	3845143	ExpressionStatement	"memset ( p -> temp + 8 + y * stride , 0 , width * sizeof ( int16_t ) )"	73:8:1391:1451	3844810	3	True				
ANR	3845144	CallExpression	"memset ( p -> temp + 8 + y * stride , 0 , width * sizeof ( int16_t ) )"		3844810	0					
ANR	3845145	Callee	memset		3844810	0					
ANR	3845146	Identifier	memset		3844810	0					
ANR	3845147	ArgumentList	p -> temp + 8 + y * stride		3844810	1					
ANR	3845148	Argument	p -> temp + 8 + y * stride		3844810	0					
ANR	3845149	AdditiveExpression	p -> temp + 8 + y * stride		3844810	0		+			
ANR	3845150	PtrMemberAccess	p -> temp		3844810	0					
ANR	3845151	Identifier	p		3844810	0					
ANR	3845152	Identifier	temp		3844810	1					
ANR	3845153	AdditiveExpression	8 + y * stride		3844810	1		+			
ANR	3845154	PrimaryExpression	8		3844810	0					
ANR	3845155	MultiplicativeExpression	y * stride		3844810	1		*			
ANR	3845156	Identifier	y		3844810	0					
ANR	3845157	Identifier	stride		3844810	1					
ANR	3845158	Argument	0		3844810	1					
ANR	3845159	PrimaryExpression	0		3844810	0					
ANR	3845160	Argument	width * sizeof ( int16_t )		3844810	2					
ANR	3845161	MultiplicativeExpression	width * sizeof ( int16_t )		3844810	0		*			
ANR	3845162	Identifier	width		3844810	0					
ANR	3845163	SizeofExpression	sizeof ( int16_t )		3844810	1					
ANR	3845164	Sizeof	sizeof		3844810	0					
ANR	3845165	SizeofOperand	int16_t		3844810	1					
ANR	3845166	ForStatement	for ( y = step ; y < height + 8 ; y += step )		3844810	13					
ANR	3845167	ForInit	y = step ;	77:9:1465:1473	3844810	0	True				
ANR	3845168	AssignmentExpression	y = step		3844810	0		=			
ANR	3845169	Identifier	y		3844810	0					
ANR	3845170	Identifier	step		3844810	1					
ANR	3845171	Condition	y < height + 8	77:19:1475:1488	3844810	1	True				
ANR	3845172	RelationalExpression	y < height + 8		3844810	0		<			
ANR	3845173	Identifier	y		3844810	0					
ANR	3845174	AdditiveExpression	height + 8		3844810	1		+			
ANR	3845175	Identifier	height		3844810	0					
ANR	3845176	PrimaryExpression	8		3844810	1					
ANR	3845177	AssignmentExpression	y += step	77:35:1491:1499	3844810	2	True	+=			
ANR	3845178	Identifier	y		3844810	0					
ANR	3845179	Identifier	step		3844810	1					
ANR	3845180	CompoundStatement		71:8:1301:1328	3844810	3					
ANR	3845181	IdentifierDeclStatement	const int y1 = y - 8 + step ;	79:8:1528:1555	3844810	0	True				
ANR	3845182	IdentifierDecl	y1 = y - 8 + step		3844810	0					
ANR	3845183	IdentifierDeclType	const int		3844810	0					
ANR	3845184	Identifier	y1		3844810	1					
ANR	3845185	AssignmentExpression	y1 = y - 8 + step		3844810	2		=			
ANR	3845186	Identifier	y1		3844810	0					
ANR	3845187	AdditiveExpression	y - 8 + step		3844810	1		-			
ANR	3845188	Identifier	y		3844810	0					
ANR	3845189	AdditiveExpression	8 + step		3844810	1		+			
ANR	3845190	PrimaryExpression	8		3844810	0					
ANR	3845191	Identifier	step		3844810	1					
ANR	3845192	ExpressionStatement	qy = y - 4	81:8:1596:1606	3844810	1	True				
ANR	3845193	AssignmentExpression	qy = y - 4		3844810	0		=			
ANR	3845194	Identifier	qy		3844810	0					
ANR	3845195	AdditiveExpression	y - 4		3844810	1		-			
ANR	3845196	Identifier	y		3844810	0					
ANR	3845197	PrimaryExpression	4		3844810	1					
ANR	3845198	IfStatement	if ( qy > height - 1 )		3844810	2					
ANR	3845199	Condition	qy > height - 1	85:12:1623:1637	3844810	0	True				
ANR	3845200	RelationalExpression	qy > height - 1		3844810	0		>			
ANR	3845201	Identifier	qy		3844810	0					
ANR	3845202	AdditiveExpression	height - 1		3844810	1		-			
ANR	3845203	Identifier	height		3844810	0					
ANR	3845204	PrimaryExpression	1		3844810	1					
ANR	3845205	ExpressionStatement	qy = height - 1	85:29:1640:1655	3844810	1	True				
ANR	3845206	AssignmentExpression	qy = height - 1		3844810	0		=			
ANR	3845207	Identifier	qy		3844810	0					
ANR	3845208	AdditiveExpression	height - 1		3844810	1		-			
ANR	3845209	Identifier	height		3844810	0					
ANR	3845210	PrimaryExpression	1		3844810	1					
ANR	3845211	IfStatement	if ( qy < 0 )		3844810	3					
ANR	3845212	Condition	qy < 0	87:12:1670:1675	3844810	0	True				
ANR	3845213	RelationalExpression	qy < 0		3844810	0		<			
ANR	3845214	Identifier	qy		3844810	0					
ANR	3845215	PrimaryExpression	0		3844810	1					
ANR	3845216	ExpressionStatement	qy = 0	87:20:1678:1684	3844810	1	True				
ANR	3845217	AssignmentExpression	qy = 0		3844810	0		=			
ANR	3845218	Identifier	qy		3844810	0					
ANR	3845219	PrimaryExpression	0		3844810	1					
ANR	3845220	ExpressionStatement	qy = ( qy >> qpsv ) * qp_stride	91:8:1697:1726	3844810	4	True				
ANR	3845221	AssignmentExpression	qy = ( qy >> qpsv ) * qp_stride		3844810	0		=			
ANR	3845222	Identifier	qy		3844810	0					
ANR	3845223	MultiplicativeExpression	( qy >> qpsv ) * qp_stride		3844810	1		*			
ANR	3845224	ShiftExpression	qy >> qpsv		3844810	0		>>			
ANR	3845225	Identifier	qy		3844810	0					
ANR	3845226	Identifier	qpsv		3844810	1					
ANR	3845227	Identifier	qp_stride		3844810	1					
ANR	3845228	ExpressionStatement	"p -> row_fdct ( block , p -> src + y * stride + 2 - ( y & 1 ) , stride , 2 )"	93:8:1737:1799	3844810	5	True				
ANR	3845229	CallExpression	"p -> row_fdct ( block , p -> src + y * stride + 2 - ( y & 1 ) , stride , 2 )"		3844810	0					
ANR	3845230	Callee	p -> row_fdct		3844810	0					
ANR	3845231	PtrMemberAccess	p -> row_fdct		3844810	0					
ANR	3845232	Identifier	p		3844810	0					
ANR	3845233	Identifier	row_fdct		3844810	1					
ANR	3845234	ArgumentList	block		3844810	1					
ANR	3845235	Argument	block		3844810	0					
ANR	3845236	Identifier	block		3844810	0					
ANR	3845237	Argument	p -> src + y * stride + 2 - ( y & 1 )		3844810	1					
ANR	3845238	AdditiveExpression	p -> src + y * stride + 2 - ( y & 1 )		3844810	0		+			
ANR	3845239	PtrMemberAccess	p -> src		3844810	0					
ANR	3845240	Identifier	p		3844810	0					
ANR	3845241	Identifier	src		3844810	1					
ANR	3845242	AdditiveExpression	y * stride + 2 - ( y & 1 )		3844810	1		+			
ANR	3845243	MultiplicativeExpression	y * stride		3844810	0		*			
ANR	3845244	Identifier	y		3844810	0					
ANR	3845245	Identifier	stride		3844810	1					
ANR	3845246	AdditiveExpression	2 - ( y & 1 )		3844810	1		-			
ANR	3845247	PrimaryExpression	2		3844810	0					
ANR	3845248	BitAndExpression	y & 1		3844810	1		&			
ANR	3845249	Identifier	y		3844810	0					
ANR	3845250	PrimaryExpression	1		3844810	1					
ANR	3845251	Argument	stride		3844810	2					
ANR	3845252	Identifier	stride		3844810	0					
ANR	3845253	Argument	2		3844810	3					
ANR	3845254	PrimaryExpression	2		3844810	0					
ANR	3845255	ForStatement	for ( x0 = 0 ; x0 < width + 8 - 8 * ( BLOCKSZ - 1 ) ; x0 += 8 * ( BLOCKSZ - 1 ) )		3844810	6					
ANR	3845256	ForInit	x0 = 0 ;	97:13:1817:1823	3844810	0	True				
ANR	3845257	AssignmentExpression	x0 = 0		3844810	0		=			
ANR	3845258	Identifier	x0		3844810	0					
ANR	3845259	PrimaryExpression	0		3844810	1					
ANR	3845260	Condition	x0 < width + 8 - 8 * ( BLOCKSZ - 1 )	97:21:1825:1858	3844810	1	True				
ANR	3845261	RelationalExpression	x0 < width + 8 - 8 * ( BLOCKSZ - 1 )		3844810	0		<			
ANR	3845262	Identifier	x0		3844810	0					
ANR	3845263	AdditiveExpression	width + 8 - 8 * ( BLOCKSZ - 1 )		3844810	1		+			
ANR	3845264	Identifier	width		3844810	0					
ANR	3845265	AdditiveExpression	8 - 8 * ( BLOCKSZ - 1 )		3844810	1		-			
ANR	3845266	PrimaryExpression	8		3844810	0					
ANR	3845267	MultiplicativeExpression	8 * ( BLOCKSZ - 1 )		3844810	1		*			
ANR	3845268	PrimaryExpression	8		3844810	0					
ANR	3845269	AdditiveExpression	BLOCKSZ - 1		3844810	1		-			
ANR	3845270	Identifier	BLOCKSZ		3844810	0					
ANR	3845271	PrimaryExpression	1		3844810	1					
ANR	3845272	AssignmentExpression	x0 += 8 * ( BLOCKSZ - 1 )	97:57:1861:1883	3844810	2	True	+=			
ANR	3845273	Identifier	x0		3844810	0					
ANR	3845274	MultiplicativeExpression	8 * ( BLOCKSZ - 1 )		3844810	1		*			
ANR	3845275	PrimaryExpression	8		3844810	0					
ANR	3845276	AdditiveExpression	BLOCKSZ - 1		3844810	1		-			
ANR	3845277	Identifier	BLOCKSZ		3844810	0					
ANR	3845278	PrimaryExpression	1		3844810	1					
ANR	3845279	CompoundStatement		89:82:1659:1659	3844810	3					
ANR	3845280	ExpressionStatement	"p -> row_fdct ( block + 8 * 8 , p -> src + y * stride + 8 + x0 + 2 - ( y & 1 ) , stride , 2 * ( BLOCKSZ - 1 ) )"	99:12:1901:1996	3844810	0	True				
ANR	3845281	CallExpression	"p -> row_fdct ( block + 8 * 8 , p -> src + y * stride + 8 + x0 + 2 - ( y & 1 ) , stride , 2 * ( BLOCKSZ - 1 ) )"		3844810	0					
ANR	3845282	Callee	p -> row_fdct		3844810	0					
ANR	3845283	PtrMemberAccess	p -> row_fdct		3844810	0					
ANR	3845284	Identifier	p		3844810	0					
ANR	3845285	Identifier	row_fdct		3844810	1					
ANR	3845286	ArgumentList	block + 8 * 8		3844810	1					
ANR	3845287	Argument	block + 8 * 8		3844810	0					
ANR	3845288	AdditiveExpression	block + 8 * 8		3844810	0		+			
ANR	3845289	Identifier	block		3844810	0					
ANR	3845290	MultiplicativeExpression	8 * 8		3844810	1		*			
ANR	3845291	PrimaryExpression	8		3844810	0					
ANR	3845292	PrimaryExpression	8		3844810	1					
ANR	3845293	Argument	p -> src + y * stride + 8 + x0 + 2 - ( y & 1 )		3844810	1					
ANR	3845294	AdditiveExpression	p -> src + y * stride + 8 + x0 + 2 - ( y & 1 )		3844810	0		+			
ANR	3845295	PtrMemberAccess	p -> src		3844810	0					
ANR	3845296	Identifier	p		3844810	0					
ANR	3845297	Identifier	src		3844810	1					
ANR	3845298	AdditiveExpression	y * stride + 8 + x0 + 2 - ( y & 1 )		3844810	1		+			
ANR	3845299	MultiplicativeExpression	y * stride		3844810	0		*			
ANR	3845300	Identifier	y		3844810	0					
ANR	3845301	Identifier	stride		3844810	1					
ANR	3845302	AdditiveExpression	8 + x0 + 2 - ( y & 1 )		3844810	1		+			
ANR	3845303	PrimaryExpression	8		3844810	0					
ANR	3845304	AdditiveExpression	x0 + 2 - ( y & 1 )		3844810	1		+			
ANR	3845305	Identifier	x0		3844810	0					
ANR	3845306	AdditiveExpression	2 - ( y & 1 )		3844810	1		-			
ANR	3845307	PrimaryExpression	2		3844810	0					
ANR	3845308	BitAndExpression	y & 1		3844810	1		&			
ANR	3845309	Identifier	y		3844810	0					
ANR	3845310	PrimaryExpression	1		3844810	1					
ANR	3845311	Argument	stride		3844810	2					
ANR	3845312	Identifier	stride		3844810	0					
ANR	3845313	Argument	2 * ( BLOCKSZ - 1 )		3844810	3					
ANR	3845314	MultiplicativeExpression	2 * ( BLOCKSZ - 1 )		3844810	0		*			
ANR	3845315	PrimaryExpression	2		3844810	0					
ANR	3845316	AdditiveExpression	BLOCKSZ - 1		3844810	1		-			
ANR	3845317	Identifier	BLOCKSZ		3844810	0					
ANR	3845318	PrimaryExpression	1		3844810	1					
ANR	3845319	IfStatement	if ( p -> qp )		3844810	1					
ANR	3845320	Condition	p -> qp	103:16:2017:2021	3844810	0	True				
ANR	3845321	PtrMemberAccess	p -> qp		3844810	0					
ANR	3845322	Identifier	p		3844810	0					
ANR	3845323	Identifier	qp		3844810	1					
ANR	3845324	ExpressionStatement	"p -> column_fidct ( ( int16_t * ) ( & p -> threshold_mtx [ 0 ] ) , block + 0 * 8 , block3 + 0 * 8 , 8 * ( BLOCKSZ - 1 ) )"	105:16:2041:2141	3844810	1	True				
ANR	3845325	CallExpression	"p -> column_fidct ( ( int16_t * ) ( & p -> threshold_mtx [ 0 ] ) , block + 0 * 8 , block3 + 0 * 8 , 8 * ( BLOCKSZ - 1 ) )"		3844810	0					
ANR	3845326	Callee	p -> column_fidct		3844810	0					
ANR	3845327	PtrMemberAccess	p -> column_fidct		3844810	0					
ANR	3845328	Identifier	p		3844810	0					
ANR	3845329	Identifier	column_fidct		3844810	1					
ANR	3845330	ArgumentList	( int16_t * ) ( & p -> threshold_mtx [ 0 ] )		3844810	1					
ANR	3845331	Argument	( int16_t * ) ( & p -> threshold_mtx [ 0 ] )		3844810	0					
ANR	3845332	CastExpression	( int16_t * ) ( & p -> threshold_mtx [ 0 ] )		3844810	0					
ANR	3845333	CastTarget	int16_t *		3844810	0					
ANR	3845334	UnaryOperationExpression	& p -> threshold_mtx [ 0 ]		3844810	1					
ANR	3845335	UnaryOperator	&		3844810	0					
ANR	3845336	ArrayIndexing	p -> threshold_mtx [ 0 ]		3844810	1					
ANR	3845337	PtrMemberAccess	p -> threshold_mtx		3844810	0					
ANR	3845338	Identifier	p		3844810	0					
ANR	3845339	Identifier	threshold_mtx		3844810	1					
ANR	3845340	PrimaryExpression	0		3844810	1					
ANR	3845341	Argument	block + 0 * 8		3844810	1					
ANR	3845342	AdditiveExpression	block + 0 * 8		3844810	0		+			
ANR	3845343	Identifier	block		3844810	0					
ANR	3845344	MultiplicativeExpression	0 * 8		3844810	1		*			
ANR	3845345	PrimaryExpression	0		3844810	0					
ANR	3845346	PrimaryExpression	8		3844810	1					
ANR	3845347	Argument	block3 + 0 * 8		3844810	2					
ANR	3845348	AdditiveExpression	block3 + 0 * 8		3844810	0		+			
ANR	3845349	Identifier	block3		3844810	0					
ANR	3845350	MultiplicativeExpression	0 * 8		3844810	1		*			
ANR	3845351	PrimaryExpression	0		3844810	0					
ANR	3845352	PrimaryExpression	8		3844810	1					
ANR	3845353	Argument	8 * ( BLOCKSZ - 1 )		3844810	3					
ANR	3845354	MultiplicativeExpression	8 * ( BLOCKSZ - 1 )		3844810	0		*			
ANR	3845355	PrimaryExpression	8		3844810	0					
ANR	3845356	AdditiveExpression	BLOCKSZ - 1		3844810	1		-			
ANR	3845357	Identifier	BLOCKSZ		3844810	0					
ANR	3845358	PrimaryExpression	1		3844810	1					
ANR	3845359	ElseStatement	else		3844810	0					
ANR	3845360	ForStatement	for ( x = 0 ; x < 8 * ( BLOCKSZ - 1 ) ; x += 8 )		3844810	0					
ANR	3845361	ForInit	x = 0 ;	109:21:2208:2213	3844810	0	True				
ANR	3845362	AssignmentExpression	x = 0		3844810	0		=			
ANR	3845363	Identifier	x		3844810	0					
ANR	3845364	PrimaryExpression	0		3844810	1					
ANR	3845365	Condition	x < 8 * ( BLOCKSZ - 1 )	109:28:2215:2235	3844810	1	True				
ANR	3845366	RelationalExpression	x < 8 * ( BLOCKSZ - 1 )		3844810	0		<			
ANR	3845367	Identifier	x		3844810	0					
ANR	3845368	MultiplicativeExpression	8 * ( BLOCKSZ - 1 )		3844810	1		*			
ANR	3845369	PrimaryExpression	8		3844810	0					
ANR	3845370	AdditiveExpression	BLOCKSZ - 1		3844810	1		-			
ANR	3845371	Identifier	BLOCKSZ		3844810	0					
ANR	3845372	PrimaryExpression	1		3844810	1					
ANR	3845373	AssignmentExpression	x += 8	109:51:2238:2243	3844810	2	True	+=			
ANR	3845374	Identifier	x		3844810	0					
ANR	3845375	PrimaryExpression	8		3844810	1					
ANR	3845376	CompoundStatement		101:59:2019:2019	3844810	3					
ANR	3845377	ExpressionStatement	t = x + x0 - 2	111:20:2269:2283	3844810	0	True				
ANR	3845378	AssignmentExpression	t = x + x0 - 2		3844810	0		=			
ANR	3845379	Identifier	t		3844810	0					
ANR	3845380	AdditiveExpression	x + x0 - 2		3844810	1		+			
ANR	3845381	Identifier	x		3844810	0					
ANR	3845382	AdditiveExpression	x0 - 2		3844810	1		-			
ANR	3845383	Identifier	x0		3844810	0					
ANR	3845384	PrimaryExpression	2		3844810	1					
ANR	3845385	IfStatement	if ( t < 0 )		3844810	1					
ANR	3845386	Condition	t < 0	115:24:2374:2378	3844810	0	True				
ANR	3845387	RelationalExpression	t < 0		3844810	0		<			
ANR	3845388	Identifier	t		3844810	0					
ANR	3845389	PrimaryExpression	0		3844810	1					
ANR	3845390	ExpressionStatement	t = 0	115:31:2381:2386	3844810	1	True				
ANR	3845391	AssignmentExpression	t = 0		3844810	0		=			
ANR	3845392	Identifier	t		3844810	0					
ANR	3845393	PrimaryExpression	0		3844810	1					
ANR	3845394	ExpressionStatement	t = qp_store [ qy + ( t >> qpsh ) ]	119:20:2450:2480	3844810	2	True				
ANR	3845395	AssignmentExpression	t = qp_store [ qy + ( t >> qpsh ) ]		3844810	0		=			
ANR	3845396	Identifier	t		3844810	0					
ANR	3845397	ArrayIndexing	qp_store [ qy + ( t >> qpsh ) ]		3844810	1					
ANR	3845398	Identifier	qp_store		3844810	0					
ANR	3845399	AdditiveExpression	qy + ( t >> qpsh )		3844810	1		+			
ANR	3845400	Identifier	qy		3844810	0					
ANR	3845401	ShiftExpression	t >> qpsh		3844810	1		>>			
ANR	3845402	Identifier	t		3844810	0					
ANR	3845403	Identifier	qpsh		3844810	1					
ANR	3845404	ExpressionStatement	"t = ff_norm_qscale ( t , p -> qscale_type )"	121:20:2503:2540	3844810	3	True				
ANR	3845405	AssignmentExpression	"t = ff_norm_qscale ( t , p -> qscale_type )"		3844810	0		=			
ANR	3845406	Identifier	t		3844810	0					
ANR	3845407	CallExpression	"ff_norm_qscale ( t , p -> qscale_type )"		3844810	1					
ANR	3845408	Callee	ff_norm_qscale		3844810	0					
ANR	3845409	Identifier	ff_norm_qscale		3844810	0					
ANR	3845410	ArgumentList	t		3844810	1					
ANR	3845411	Argument	t		3844810	0					
ANR	3845412	Identifier	t		3844810	0					
ANR	3845413	Argument	p -> qscale_type		3844810	1					
ANR	3845414	PtrMemberAccess	p -> qscale_type		3844810	0					
ANR	3845415	Identifier	p		3844810	0					
ANR	3845416	Identifier	qscale_type		3844810	1					
ANR	3845417	IfStatement	if ( t != p -> prev_q )		3844810	4					
ANR	3845418	Condition	t != p -> prev_q	125:24:2569:2582	3844810	0	True				
ANR	3845419	EqualityExpression	t != p -> prev_q		3844810	0		!=			
ANR	3845420	Identifier	t		3844810	0					
ANR	3845421	PtrMemberAccess	p -> prev_q		3844810	1					
ANR	3845422	Identifier	p		3844810	0					
ANR	3845423	Identifier	prev_q		3844810	1					
ANR	3845424	ExpressionStatement	"p -> prev_q = t , p -> mul_thrmat ( ( int16_t * ) ( & p -> threshold_mtx_noq [ 0 ] ) , ( int16_t * ) ( & p -> threshold_mtx [ 0 ] ) , t )"	125:40:2585:2690	3844810	1	True				
ANR	3845425	Expression	"p -> prev_q = t , p -> mul_thrmat ( ( int16_t * ) ( & p -> threshold_mtx_noq [ 0 ] ) , ( int16_t * ) ( & p -> threshold_mtx [ 0 ] ) , t )"		3844810	0					
ANR	3845426	AssignmentExpression	p -> prev_q = t		3844810	0		=			
ANR	3845427	PtrMemberAccess	p -> prev_q		3844810	0					
ANR	3845428	Identifier	p		3844810	0					
ANR	3845429	Identifier	prev_q		3844810	1					
ANR	3845430	Identifier	t		3844810	1					
ANR	3845431	CallExpression	"p -> mul_thrmat ( ( int16_t * ) ( & p -> threshold_mtx_noq [ 0 ] ) , ( int16_t * ) ( & p -> threshold_mtx [ 0 ] ) , t )"		3844810	1					
ANR	3845432	Callee	p -> mul_thrmat		3844810	0					
ANR	3845433	PtrMemberAccess	p -> mul_thrmat		3844810	0					
ANR	3845434	Identifier	p		3844810	0					
ANR	3845435	Identifier	mul_thrmat		3844810	1					
ANR	3845436	ArgumentList	( int16_t * ) ( & p -> threshold_mtx_noq [ 0 ] )		3844810	1					
ANR	3845437	Argument	( int16_t * ) ( & p -> threshold_mtx_noq [ 0 ] )		3844810	0					
ANR	3845438	CastExpression	( int16_t * ) ( & p -> threshold_mtx_noq [ 0 ] )		3844810	0					
ANR	3845439	CastTarget	int16_t *		3844810	0					
ANR	3845440	UnaryOperationExpression	& p -> threshold_mtx_noq [ 0 ]		3844810	1					
ANR	3845441	UnaryOperator	&		3844810	0					
ANR	3845442	ArrayIndexing	p -> threshold_mtx_noq [ 0 ]		3844810	1					
ANR	3845443	PtrMemberAccess	p -> threshold_mtx_noq		3844810	0					
ANR	3845444	Identifier	p		3844810	0					
ANR	3845445	Identifier	threshold_mtx_noq		3844810	1					
ANR	3845446	PrimaryExpression	0		3844810	1					
ANR	3845447	Argument	( int16_t * ) ( & p -> threshold_mtx [ 0 ] )		3844810	1					
ANR	3845448	CastExpression	( int16_t * ) ( & p -> threshold_mtx [ 0 ] )		3844810	0					
ANR	3845449	CastTarget	int16_t *		3844810	0					
ANR	3845450	UnaryOperationExpression	& p -> threshold_mtx [ 0 ]		3844810	1					
ANR	3845451	UnaryOperator	&		3844810	0					
ANR	3845452	ArrayIndexing	p -> threshold_mtx [ 0 ]		3844810	1					
ANR	3845453	PtrMemberAccess	p -> threshold_mtx		3844810	0					
ANR	3845454	Identifier	p		3844810	0					
ANR	3845455	Identifier	threshold_mtx		3844810	1					
ANR	3845456	PrimaryExpression	0		3844810	1					
ANR	3845457	Argument	t		3844810	2					
ANR	3845458	Identifier	t		3844810	0					
ANR	3845459	ExpressionStatement	"p -> column_fidct ( ( int16_t * ) ( & p -> threshold_mtx [ 0 ] ) , block + x * 8 , block3 + x * 8 , 8 )"	127:20:2713:2797	3844810	5	True				
ANR	3845460	CallExpression	"p -> column_fidct ( ( int16_t * ) ( & p -> threshold_mtx [ 0 ] ) , block + x * 8 , block3 + x * 8 , 8 )"		3844810	0					
ANR	3845461	Callee	p -> column_fidct		3844810	0					
ANR	3845462	PtrMemberAccess	p -> column_fidct		3844810	0					
ANR	3845463	Identifier	p		3844810	0					
ANR	3845464	Identifier	column_fidct		3844810	1					
ANR	3845465	ArgumentList	( int16_t * ) ( & p -> threshold_mtx [ 0 ] )		3844810	1					
ANR	3845466	Argument	( int16_t * ) ( & p -> threshold_mtx [ 0 ] )		3844810	0					
ANR	3845467	CastExpression	( int16_t * ) ( & p -> threshold_mtx [ 0 ] )		3844810	0					
ANR	3845468	CastTarget	int16_t *		3844810	0					
ANR	3845469	UnaryOperationExpression	& p -> threshold_mtx [ 0 ]		3844810	1					
ANR	3845470	UnaryOperator	&		3844810	0					
ANR	3845471	ArrayIndexing	p -> threshold_mtx [ 0 ]		3844810	1					
ANR	3845472	PtrMemberAccess	p -> threshold_mtx		3844810	0					
ANR	3845473	Identifier	p		3844810	0					
ANR	3845474	Identifier	threshold_mtx		3844810	1					
ANR	3845475	PrimaryExpression	0		3844810	1					
ANR	3845476	Argument	block + x * 8		3844810	1					
ANR	3845477	AdditiveExpression	block + x * 8		3844810	0		+			
ANR	3845478	Identifier	block		3844810	0					
ANR	3845479	MultiplicativeExpression	x * 8		3844810	1		*			
ANR	3845480	Identifier	x		3844810	0					
ANR	3845481	PrimaryExpression	8		3844810	1					
ANR	3845482	Argument	block3 + x * 8		3844810	2					
ANR	3845483	AdditiveExpression	block3 + x * 8		3844810	0		+			
ANR	3845484	Identifier	block3		3844810	0					
ANR	3845485	MultiplicativeExpression	x * 8		3844810	1		*			
ANR	3845486	Identifier	x		3844810	0					
ANR	3845487	PrimaryExpression	8		3844810	1					
ANR	3845488	Argument	8		3844810	3					
ANR	3845489	PrimaryExpression	8		3844810	0					
ANR	3845490	ExpressionStatement	"p -> row_idct ( block3 + 0 * 8 , p -> temp + ( y & 15 ) * stride + x0 + 2 - ( y & 1 ) , stride , 2 * ( BLOCKSZ - 1 ) )"	131:12:2856:2958	3844810	2	True				
ANR	3845491	CallExpression	"p -> row_idct ( block3 + 0 * 8 , p -> temp + ( y & 15 ) * stride + x0 + 2 - ( y & 1 ) , stride , 2 * ( BLOCKSZ - 1 ) )"		3844810	0					
ANR	3845492	Callee	p -> row_idct		3844810	0					
ANR	3845493	PtrMemberAccess	p -> row_idct		3844810	0					
ANR	3845494	Identifier	p		3844810	0					
ANR	3845495	Identifier	row_idct		3844810	1					
ANR	3845496	ArgumentList	block3 + 0 * 8		3844810	1					
ANR	3845497	Argument	block3 + 0 * 8		3844810	0					
ANR	3845498	AdditiveExpression	block3 + 0 * 8		3844810	0		+			
ANR	3845499	Identifier	block3		3844810	0					
ANR	3845500	MultiplicativeExpression	0 * 8		3844810	1		*			
ANR	3845501	PrimaryExpression	0		3844810	0					
ANR	3845502	PrimaryExpression	8		3844810	1					
ANR	3845503	Argument	p -> temp + ( y & 15 ) * stride + x0 + 2 - ( y & 1 )		3844810	1					
ANR	3845504	AdditiveExpression	p -> temp + ( y & 15 ) * stride + x0 + 2 - ( y & 1 )		3844810	0		+			
ANR	3845505	PtrMemberAccess	p -> temp		3844810	0					
ANR	3845506	Identifier	p		3844810	0					
ANR	3845507	Identifier	temp		3844810	1					
ANR	3845508	AdditiveExpression	( y & 15 ) * stride + x0 + 2 - ( y & 1 )		3844810	1		+			
ANR	3845509	MultiplicativeExpression	( y & 15 ) * stride		3844810	0		*			
ANR	3845510	BitAndExpression	y & 15		3844810	0		&			
ANR	3845511	Identifier	y		3844810	0					
ANR	3845512	PrimaryExpression	15		3844810	1					
ANR	3845513	Identifier	stride		3844810	1					
ANR	3845514	AdditiveExpression	x0 + 2 - ( y & 1 )		3844810	1		+			
ANR	3845515	Identifier	x0		3844810	0					
ANR	3845516	AdditiveExpression	2 - ( y & 1 )		3844810	1		-			
ANR	3845517	PrimaryExpression	2		3844810	0					
ANR	3845518	BitAndExpression	y & 1		3844810	1		&			
ANR	3845519	Identifier	y		3844810	0					
ANR	3845520	PrimaryExpression	1		3844810	1					
ANR	3845521	Argument	stride		3844810	2					
ANR	3845522	Identifier	stride		3844810	0					
ANR	3845523	Argument	2 * ( BLOCKSZ - 1 )		3844810	3					
ANR	3845524	MultiplicativeExpression	2 * ( BLOCKSZ - 1 )		3844810	0		*			
ANR	3845525	PrimaryExpression	2		3844810	0					
ANR	3845526	AdditiveExpression	BLOCKSZ - 1		3844810	1		-			
ANR	3845527	Identifier	BLOCKSZ		3844810	0					
ANR	3845528	PrimaryExpression	1		3844810	1					
ANR	3845529	ExpressionStatement	"memmove ( block , block + ( BLOCKSZ - 1 ) * 64 , 8 * 8 * sizeof ( int16_t ) )"	133:12:2973:3042	3844810	3	True				
ANR	3845530	CallExpression	"memmove ( block , block + ( BLOCKSZ - 1 ) * 64 , 8 * 8 * sizeof ( int16_t ) )"		3844810	0					
ANR	3845531	Callee	memmove		3844810	0					
ANR	3845532	Identifier	memmove		3844810	0					
ANR	3845533	ArgumentList	block		3844810	1					
ANR	3845534	Argument	block		3844810	0					
ANR	3845535	Identifier	block		3844810	0					
ANR	3845536	Argument	block + ( BLOCKSZ - 1 ) * 64		3844810	1					
ANR	3845537	AdditiveExpression	block + ( BLOCKSZ - 1 ) * 64		3844810	0		+			
ANR	3845538	Identifier	block		3844810	0					
ANR	3845539	MultiplicativeExpression	( BLOCKSZ - 1 ) * 64		3844810	1		*			
ANR	3845540	AdditiveExpression	BLOCKSZ - 1		3844810	0		-			
ANR	3845541	Identifier	BLOCKSZ		3844810	0					
ANR	3845542	PrimaryExpression	1		3844810	1					
ANR	3845543	PrimaryExpression	64		3844810	1					
ANR	3845544	Argument	8 * 8 * sizeof ( int16_t )		3844810	2					
ANR	3845545	MultiplicativeExpression	8 * 8 * sizeof ( int16_t )		3844810	0		*			
ANR	3845546	PrimaryExpression	8		3844810	0					
ANR	3845547	MultiplicativeExpression	8 * sizeof ( int16_t )		3844810	1		*			
ANR	3845548	PrimaryExpression	8		3844810	0					
ANR	3845549	SizeofExpression	sizeof ( int16_t )		3844810	1					
ANR	3845550	Sizeof	sizeof		3844810	0					
ANR	3845551	SizeofOperand	int16_t		3844810	1					
ANR	3845552	ExpressionStatement	"memmove ( block3 , block3 + ( BLOCKSZ - 1 ) * 64 , 6 * 8 * sizeof ( int16_t ) )"	135:12:3067:3136	3844810	4	True				
ANR	3845553	CallExpression	"memmove ( block3 , block3 + ( BLOCKSZ - 1 ) * 64 , 6 * 8 * sizeof ( int16_t ) )"		3844810	0					
ANR	3845554	Callee	memmove		3844810	0					
ANR	3845555	Identifier	memmove		3844810	0					
ANR	3845556	ArgumentList	block3		3844810	1					
ANR	3845557	Argument	block3		3844810	0					
ANR	3845558	Identifier	block3		3844810	0					
ANR	3845559	Argument	block3 + ( BLOCKSZ - 1 ) * 64		3844810	1					
ANR	3845560	AdditiveExpression	block3 + ( BLOCKSZ - 1 ) * 64		3844810	0		+			
ANR	3845561	Identifier	block3		3844810	0					
ANR	3845562	MultiplicativeExpression	( BLOCKSZ - 1 ) * 64		3844810	1		*			
ANR	3845563	AdditiveExpression	BLOCKSZ - 1		3844810	0		-			
ANR	3845564	Identifier	BLOCKSZ		3844810	0					
ANR	3845565	PrimaryExpression	1		3844810	1					
ANR	3845566	PrimaryExpression	64		3844810	1					
ANR	3845567	Argument	6 * 8 * sizeof ( int16_t )		3844810	2					
ANR	3845568	MultiplicativeExpression	6 * 8 * sizeof ( int16_t )		3844810	0		*			
ANR	3845569	PrimaryExpression	6		3844810	0					
ANR	3845570	MultiplicativeExpression	8 * sizeof ( int16_t )		3844810	1		*			
ANR	3845571	PrimaryExpression	8		3844810	0					
ANR	3845572	SizeofExpression	sizeof ( int16_t )		3844810	1					
ANR	3845573	Sizeof	sizeof		3844810	0					
ANR	3845574	SizeofOperand	int16_t		3844810	1					
ANR	3845575	ExpressionStatement	es = width + 8 - x0	141:8:3160:3179	3844810	7	True				
ANR	3845576	AssignmentExpression	es = width + 8 - x0		3844810	0		=			
ANR	3845577	Identifier	es		3844810	0					
ANR	3845578	AdditiveExpression	width + 8 - x0		3844810	1		+			
ANR	3845579	Identifier	width		3844810	0					
ANR	3845580	AdditiveExpression	8 - x0		3844810	1		-			
ANR	3845581	PrimaryExpression	8		3844810	0					
ANR	3845582	Identifier	x0		3844810	1					
ANR	3845583	IfStatement	if ( es > 8 )		3844810	8					
ANR	3845584	Condition	es > 8	143:12:3205:3210	3844810	0	True				
ANR	3845585	RelationalExpression	es > 8		3844810	0		>			
ANR	3845586	Identifier	es		3844810	0					
ANR	3845587	PrimaryExpression	8		3844810	1					
ANR	3845588	ExpressionStatement	"p -> row_fdct ( block + 8 * 8 , p -> src + y * stride + 8 + x0 + 2 - ( y & 1 ) , stride , ( es - 4 ) >> 2 )"	145:12:3226:3319	3844810	1	True				
ANR	3845589	CallExpression	"p -> row_fdct ( block + 8 * 8 , p -> src + y * stride + 8 + x0 + 2 - ( y & 1 ) , stride , ( es - 4 ) >> 2 )"		3844810	0					
ANR	3845590	Callee	p -> row_fdct		3844810	0					
ANR	3845591	PtrMemberAccess	p -> row_fdct		3844810	0					
ANR	3845592	Identifier	p		3844810	0					
ANR	3845593	Identifier	row_fdct		3844810	1					
ANR	3845594	ArgumentList	block + 8 * 8		3844810	1					
ANR	3845595	Argument	block + 8 * 8		3844810	0					
ANR	3845596	AdditiveExpression	block + 8 * 8		3844810	0		+			
ANR	3845597	Identifier	block		3844810	0					
ANR	3845598	MultiplicativeExpression	8 * 8		3844810	1		*			
ANR	3845599	PrimaryExpression	8		3844810	0					
ANR	3845600	PrimaryExpression	8		3844810	1					
ANR	3845601	Argument	p -> src + y * stride + 8 + x0 + 2 - ( y & 1 )		3844810	1					
ANR	3845602	AdditiveExpression	p -> src + y * stride + 8 + x0 + 2 - ( y & 1 )		3844810	0		+			
ANR	3845603	PtrMemberAccess	p -> src		3844810	0					
ANR	3845604	Identifier	p		3844810	0					
ANR	3845605	Identifier	src		3844810	1					
ANR	3845606	AdditiveExpression	y * stride + 8 + x0 + 2 - ( y & 1 )		3844810	1		+			
ANR	3845607	MultiplicativeExpression	y * stride		3844810	0		*			
ANR	3845608	Identifier	y		3844810	0					
ANR	3845609	Identifier	stride		3844810	1					
ANR	3845610	AdditiveExpression	8 + x0 + 2 - ( y & 1 )		3844810	1		+			
ANR	3845611	PrimaryExpression	8		3844810	0					
ANR	3845612	AdditiveExpression	x0 + 2 - ( y & 1 )		3844810	1		+			
ANR	3845613	Identifier	x0		3844810	0					
ANR	3845614	AdditiveExpression	2 - ( y & 1 )		3844810	1		-			
ANR	3845615	PrimaryExpression	2		3844810	0					
ANR	3845616	BitAndExpression	y & 1		3844810	1		&			
ANR	3845617	Identifier	y		3844810	0					
ANR	3845618	PrimaryExpression	1		3844810	1					
ANR	3845619	Argument	stride		3844810	2					
ANR	3845620	Identifier	stride		3844810	0					
ANR	3845621	Argument	( es - 4 ) >> 2		3844810	3					
ANR	3845622	ShiftExpression	( es - 4 ) >> 2		3844810	0		>>			
ANR	3845623	AdditiveExpression	es - 4		3844810	0		-			
ANR	3845624	Identifier	es		3844810	0					
ANR	3845625	PrimaryExpression	4		3844810	1					
ANR	3845626	PrimaryExpression	2		3844810	1					
ANR	3845627	ExpressionStatement	"p -> column_fidct ( ( int16_t * ) ( & p -> threshold_mtx [ 0 ] ) , block , block3 , es & ( ~1 ) )"	149:8:3332:3406	3844810	9	True				
ANR	3845628	CallExpression	"p -> column_fidct ( ( int16_t * ) ( & p -> threshold_mtx [ 0 ] ) , block , block3 , es & ( ~1 ) )"		3844810	0					
ANR	3845629	Callee	p -> column_fidct		3844810	0					
ANR	3845630	PtrMemberAccess	p -> column_fidct		3844810	0					
ANR	3845631	Identifier	p		3844810	0					
ANR	3845632	Identifier	column_fidct		3844810	1					
ANR	3845633	ArgumentList	( int16_t * ) ( & p -> threshold_mtx [ 0 ] )		3844810	1					
ANR	3845634	Argument	( int16_t * ) ( & p -> threshold_mtx [ 0 ] )		3844810	0					
ANR	3845635	CastExpression	( int16_t * ) ( & p -> threshold_mtx [ 0 ] )		3844810	0					
ANR	3845636	CastTarget	int16_t *		3844810	0					
ANR	3845637	UnaryOperationExpression	& p -> threshold_mtx [ 0 ]		3844810	1					
ANR	3845638	UnaryOperator	&		3844810	0					
ANR	3845639	ArrayIndexing	p -> threshold_mtx [ 0 ]		3844810	1					
ANR	3845640	PtrMemberAccess	p -> threshold_mtx		3844810	0					
ANR	3845641	Identifier	p		3844810	0					
ANR	3845642	Identifier	threshold_mtx		3844810	1					
ANR	3845643	PrimaryExpression	0		3844810	1					
ANR	3845644	Argument	block		3844810	1					
ANR	3845645	Identifier	block		3844810	0					
ANR	3845646	Argument	block3		3844810	2					
ANR	3845647	Identifier	block3		3844810	0					
ANR	3845648	Argument	es & ( ~1 )		3844810	3					
ANR	3845649	BitAndExpression	es & ( ~1 )		3844810	0		&			
ANR	3845650	Identifier	es		3844810	0					
ANR	3845651	Identifier	~1		3844810	1					
ANR	3845652	ExpressionStatement	"p -> row_idct ( block3 + 0 * 8 , p -> temp + ( y & 15 ) * stride + x0 + 2 - ( y & 1 ) , stride , es >> 2 )"	151:8:3417:3509	3844810	10	True				
ANR	3845653	CallExpression	"p -> row_idct ( block3 + 0 * 8 , p -> temp + ( y & 15 ) * stride + x0 + 2 - ( y & 1 ) , stride , es >> 2 )"		3844810	0					
ANR	3845654	Callee	p -> row_idct		3844810	0					
ANR	3845655	PtrMemberAccess	p -> row_idct		3844810	0					
ANR	3845656	Identifier	p		3844810	0					
ANR	3845657	Identifier	row_idct		3844810	1					
ANR	3845658	ArgumentList	block3 + 0 * 8		3844810	1					
ANR	3845659	Argument	block3 + 0 * 8		3844810	0					
ANR	3845660	AdditiveExpression	block3 + 0 * 8		3844810	0		+			
ANR	3845661	Identifier	block3		3844810	0					
ANR	3845662	MultiplicativeExpression	0 * 8		3844810	1		*			
ANR	3845663	PrimaryExpression	0		3844810	0					
ANR	3845664	PrimaryExpression	8		3844810	1					
ANR	3845665	Argument	p -> temp + ( y & 15 ) * stride + x0 + 2 - ( y & 1 )		3844810	1					
ANR	3845666	AdditiveExpression	p -> temp + ( y & 15 ) * stride + x0 + 2 - ( y & 1 )		3844810	0		+			
ANR	3845667	PtrMemberAccess	p -> temp		3844810	0					
ANR	3845668	Identifier	p		3844810	0					
ANR	3845669	Identifier	temp		3844810	1					
ANR	3845670	AdditiveExpression	( y & 15 ) * stride + x0 + 2 - ( y & 1 )		3844810	1		+			
ANR	3845671	MultiplicativeExpression	( y & 15 ) * stride		3844810	0		*			
ANR	3845672	BitAndExpression	y & 15		3844810	0		&			
ANR	3845673	Identifier	y		3844810	0					
ANR	3845674	PrimaryExpression	15		3844810	1					
ANR	3845675	Identifier	stride		3844810	1					
ANR	3845676	AdditiveExpression	x0 + 2 - ( y & 1 )		3844810	1		+			
ANR	3845677	Identifier	x0		3844810	0					
ANR	3845678	AdditiveExpression	2 - ( y & 1 )		3844810	1		-			
ANR	3845679	PrimaryExpression	2		3844810	0					
ANR	3845680	BitAndExpression	y & 1		3844810	1		&			
ANR	3845681	Identifier	y		3844810	0					
ANR	3845682	PrimaryExpression	1		3844810	1					
ANR	3845683	Argument	stride		3844810	2					
ANR	3845684	Identifier	stride		3844810	0					
ANR	3845685	Argument	es >> 2		3844810	3					
ANR	3845686	ShiftExpression	es >> 2		3844810	0		>>			
ANR	3845687	Identifier	es		3844810	0					
ANR	3845688	PrimaryExpression	2		3844810	1					
ANR	3845689	IfStatement	if ( ! ( y1 & 7 ) && y1 )		3844810	11					
ANR	3845690	Condition	! ( y1 & 7 ) && y1	155:12:3526:3540	3844810	0	True				
ANR	3845691	AndExpression	! ( y1 & 7 ) && y1		3844810	0		&&			
ANR	3845692	UnaryOperationExpression	! ( y1 & 7 )		3844810	0					
ANR	3845693	UnaryOperator	!		3844810	0					
ANR	3845694	BitAndExpression	y1 & 7		3844810	1		&			
ANR	3845695	Identifier	y1		3844810	0					
ANR	3845696	PrimaryExpression	7		3844810	1					
ANR	3845697	Identifier	y1		3844810	1					
ANR	3845698	CompoundStatement		147:29:3316:3316	3844810	1					
ANR	3845699	IfStatement	if ( y1 & 8 )		3844810	0					
ANR	3845700	Condition	y1 & 8	157:16:3562:3567	3844810	0	True				
ANR	3845701	BitAndExpression	y1 & 8		3844810	0		&			
ANR	3845702	Identifier	y1		3844810	0					
ANR	3845703	PrimaryExpression	8		3844810	1					
ANR	3845704	ExpressionStatement	"p -> store_slice ( dst + ( y1 - 8 ) * dst_stride , p -> temp + 8 + 8 * stride , dst_stride , stride , width , 8 , 5 - p -> log2_count )"	159:16:3587:3737	3844810	1	True				
ANR	3845705	CallExpression	"p -> store_slice ( dst + ( y1 - 8 ) * dst_stride , p -> temp + 8 + 8 * stride , dst_stride , stride , width , 8 , 5 - p -> log2_count )"		3844810	0					
ANR	3845706	Callee	p -> store_slice		3844810	0					
ANR	3845707	PtrMemberAccess	p -> store_slice		3844810	0					
ANR	3845708	Identifier	p		3844810	0					
ANR	3845709	Identifier	store_slice		3844810	1					
ANR	3845710	ArgumentList	dst + ( y1 - 8 ) * dst_stride		3844810	1					
ANR	3845711	Argument	dst + ( y1 - 8 ) * dst_stride		3844810	0					
ANR	3845712	AdditiveExpression	dst + ( y1 - 8 ) * dst_stride		3844810	0		+			
ANR	3845713	Identifier	dst		3844810	0					
ANR	3845714	MultiplicativeExpression	( y1 - 8 ) * dst_stride		3844810	1		*			
ANR	3845715	AdditiveExpression	y1 - 8		3844810	0		-			
ANR	3845716	Identifier	y1		3844810	0					
ANR	3845717	PrimaryExpression	8		3844810	1					
ANR	3845718	Identifier	dst_stride		3844810	1					
ANR	3845719	Argument	p -> temp + 8 + 8 * stride		3844810	1					
ANR	3845720	AdditiveExpression	p -> temp + 8 + 8 * stride		3844810	0		+			
ANR	3845721	PtrMemberAccess	p -> temp		3844810	0					
ANR	3845722	Identifier	p		3844810	0					
ANR	3845723	Identifier	temp		3844810	1					
ANR	3845724	AdditiveExpression	8 + 8 * stride		3844810	1		+			
ANR	3845725	PrimaryExpression	8		3844810	0					
ANR	3845726	MultiplicativeExpression	8 * stride		3844810	1		*			
ANR	3845727	PrimaryExpression	8		3844810	0					
ANR	3845728	Identifier	stride		3844810	1					
ANR	3845729	Argument	dst_stride		3844810	2					
ANR	3845730	Identifier	dst_stride		3844810	0					
ANR	3845731	Argument	stride		3844810	3					
ANR	3845732	Identifier	stride		3844810	0					
ANR	3845733	Argument	width		3844810	4					
ANR	3845734	Identifier	width		3844810	0					
ANR	3845735	Argument	8		3844810	5					
ANR	3845736	PrimaryExpression	8		3844810	0					
ANR	3845737	Argument	5 - p -> log2_count		3844810	6					
ANR	3845738	AdditiveExpression	5 - p -> log2_count		3844810	0		-			
ANR	3845739	PrimaryExpression	5		3844810	0					
ANR	3845740	PtrMemberAccess	p -> log2_count		3844810	1					
ANR	3845741	Identifier	p		3844810	0					
ANR	3845742	Identifier	log2_count		3844810	1					
ANR	3845743	ElseStatement	else		3844810	0					
ANR	3845744	ExpressionStatement	"p -> store_slice2 ( dst + ( y1 - 8 ) * dst_stride , p -> temp + 8 + 0 * stride , dst_stride , stride , width , 8 , 5 - p -> log2_count )"	165:16:3774:3926	3844810	0	True				
ANR	3845745	CallExpression	"p -> store_slice2 ( dst + ( y1 - 8 ) * dst_stride , p -> temp + 8 + 0 * stride , dst_stride , stride , width , 8 , 5 - p -> log2_count )"		3844810	0					
ANR	3845746	Callee	p -> store_slice2		3844810	0					
ANR	3845747	PtrMemberAccess	p -> store_slice2		3844810	0					
ANR	3845748	Identifier	p		3844810	0					
ANR	3845749	Identifier	store_slice2		3844810	1					
ANR	3845750	ArgumentList	dst + ( y1 - 8 ) * dst_stride		3844810	1					
ANR	3845751	Argument	dst + ( y1 - 8 ) * dst_stride		3844810	0					
ANR	3845752	AdditiveExpression	dst + ( y1 - 8 ) * dst_stride		3844810	0		+			
ANR	3845753	Identifier	dst		3844810	0					
ANR	3845754	MultiplicativeExpression	( y1 - 8 ) * dst_stride		3844810	1		*			
ANR	3845755	AdditiveExpression	y1 - 8		3844810	0		-			
ANR	3845756	Identifier	y1		3844810	0					
ANR	3845757	PrimaryExpression	8		3844810	1					
ANR	3845758	Identifier	dst_stride		3844810	1					
ANR	3845759	Argument	p -> temp + 8 + 0 * stride		3844810	1					
ANR	3845760	AdditiveExpression	p -> temp + 8 + 0 * stride		3844810	0		+			
ANR	3845761	PtrMemberAccess	p -> temp		3844810	0					
ANR	3845762	Identifier	p		3844810	0					
ANR	3845763	Identifier	temp		3844810	1					
ANR	3845764	AdditiveExpression	8 + 0 * stride		3844810	1		+			
ANR	3845765	PrimaryExpression	8		3844810	0					
ANR	3845766	MultiplicativeExpression	0 * stride		3844810	1		*			
ANR	3845767	PrimaryExpression	0		3844810	0					
ANR	3845768	Identifier	stride		3844810	1					
ANR	3845769	Argument	dst_stride		3844810	2					
ANR	3845770	Identifier	dst_stride		3844810	0					
ANR	3845771	Argument	stride		3844810	3					
ANR	3845772	Identifier	stride		3844810	0					
ANR	3845773	Argument	width		3844810	4					
ANR	3845774	Identifier	width		3844810	0					
ANR	3845775	Argument	8		3844810	5					
ANR	3845776	PrimaryExpression	8		3844810	0					
ANR	3845777	Argument	5 - p -> log2_count		3844810	6					
ANR	3845778	AdditiveExpression	5 - p -> log2_count		3844810	0		-			
ANR	3845779	PrimaryExpression	5		3844810	0					
ANR	3845780	PtrMemberAccess	p -> log2_count		3844810	1					
ANR	3845781	Identifier	p		3844810	0					
ANR	3845782	Identifier	log2_count		3844810	1					
ANR	3845783	IfStatement	if ( y & 7 )		3844810	14					
ANR	3845784	Condition	y & 7	175:8:3957:3961	3844810	0	True				
ANR	3845785	BitAndExpression	y & 7		3844810	0		&			
ANR	3845786	Identifier	y		3844810	0					
ANR	3845787	PrimaryExpression	7		3844810	1					
ANR	3845788	CompoundStatement		167:15:3737:3737	3844810	1					
ANR	3845789	IfStatement	if ( y & 8 )		3844810	0					
ANR	3845790	Condition	y & 8	177:12:3999:4003	3844810	0	True				
ANR	3845791	BitAndExpression	y & 8		3844810	0		&			
ANR	3845792	Identifier	y		3844810	0					
ANR	3845793	PrimaryExpression	8		3844810	1					
ANR	3845794	ExpressionStatement	"p -> store_slice ( dst + ( ( y - 8 ) & ~7 ) * dst_stride , p -> temp + 8 + 8 * stride , dst_stride , stride , width , y & 7 , 5 - p -> log2_count )"	179:12:4019:4173	3844810	1	True				
ANR	3845795	CallExpression	"p -> store_slice ( dst + ( ( y - 8 ) & ~7 ) * dst_stride , p -> temp + 8 + 8 * stride , dst_stride , stride , width , y & 7 , 5 - p -> log2_count )"		3844810	0					
ANR	3845796	Callee	p -> store_slice		3844810	0					
ANR	3845797	PtrMemberAccess	p -> store_slice		3844810	0					
ANR	3845798	Identifier	p		3844810	0					
ANR	3845799	Identifier	store_slice		3844810	1					
ANR	3845800	ArgumentList	dst + ( ( y - 8 ) & ~7 ) * dst_stride		3844810	1					
ANR	3845801	Argument	dst + ( ( y - 8 ) & ~7 ) * dst_stride		3844810	0					
ANR	3845802	AdditiveExpression	dst + ( ( y - 8 ) & ~7 ) * dst_stride		3844810	0		+			
ANR	3845803	Identifier	dst		3844810	0					
ANR	3845804	MultiplicativeExpression	( ( y - 8 ) & ~7 ) * dst_stride		3844810	1		*			
ANR	3845805	BitAndExpression	( y - 8 ) & ~7		3844810	0		&			
ANR	3845806	AdditiveExpression	y - 8		3844810	0		-			
ANR	3845807	Identifier	y		3844810	0					
ANR	3845808	PrimaryExpression	8		3844810	1					
ANR	3845809	Identifier	~7		3844810	1					
ANR	3845810	Identifier	dst_stride		3844810	1					
ANR	3845811	Argument	p -> temp + 8 + 8 * stride		3844810	1					
ANR	3845812	AdditiveExpression	p -> temp + 8 + 8 * stride		3844810	0		+			
ANR	3845813	PtrMemberAccess	p -> temp		3844810	0					
ANR	3845814	Identifier	p		3844810	0					
ANR	3845815	Identifier	temp		3844810	1					
ANR	3845816	AdditiveExpression	8 + 8 * stride		3844810	1		+			
ANR	3845817	PrimaryExpression	8		3844810	0					
ANR	3845818	MultiplicativeExpression	8 * stride		3844810	1		*			
ANR	3845819	PrimaryExpression	8		3844810	0					
ANR	3845820	Identifier	stride		3844810	1					
ANR	3845821	Argument	dst_stride		3844810	2					
ANR	3845822	Identifier	dst_stride		3844810	0					
ANR	3845823	Argument	stride		3844810	3					
ANR	3845824	Identifier	stride		3844810	0					
ANR	3845825	Argument	width		3844810	4					
ANR	3845826	Identifier	width		3844810	0					
ANR	3845827	Argument	y & 7		3844810	5					
ANR	3845828	BitAndExpression	y & 7		3844810	0		&			
ANR	3845829	Identifier	y		3844810	0					
ANR	3845830	PrimaryExpression	7		3844810	1					
ANR	3845831	Argument	5 - p -> log2_count		3844810	6					
ANR	3845832	AdditiveExpression	5 - p -> log2_count		3844810	0		-			
ANR	3845833	PrimaryExpression	5		3844810	0					
ANR	3845834	PtrMemberAccess	p -> log2_count		3844810	1					
ANR	3845835	Identifier	p		3844810	0					
ANR	3845836	Identifier	log2_count		3844810	1					
ANR	3845837	ElseStatement	else		3844810	0					
ANR	3845838	ExpressionStatement	"p -> store_slice2 ( dst + ( ( y - 8 ) & ~7 ) * dst_stride , p -> temp + 8 + 0 * stride , dst_stride , stride , width , y & 7 , 5 - p -> log2_count )"	185:12:4202:4358	3844810	0	True				
ANR	3845839	CallExpression	"p -> store_slice2 ( dst + ( ( y - 8 ) & ~7 ) * dst_stride , p -> temp + 8 + 0 * stride , dst_stride , stride , width , y & 7 , 5 - p -> log2_count )"		3844810	0					
ANR	3845840	Callee	p -> store_slice2		3844810	0					
ANR	3845841	PtrMemberAccess	p -> store_slice2		3844810	0					
ANR	3845842	Identifier	p		3844810	0					
ANR	3845843	Identifier	store_slice2		3844810	1					
ANR	3845844	ArgumentList	dst + ( ( y - 8 ) & ~7 ) * dst_stride		3844810	1					
ANR	3845845	Argument	dst + ( ( y - 8 ) & ~7 ) * dst_stride		3844810	0					
ANR	3845846	AdditiveExpression	dst + ( ( y - 8 ) & ~7 ) * dst_stride		3844810	0		+			
ANR	3845847	Identifier	dst		3844810	0					
ANR	3845848	MultiplicativeExpression	( ( y - 8 ) & ~7 ) * dst_stride		3844810	1		*			
ANR	3845849	BitAndExpression	( y - 8 ) & ~7		3844810	0		&			
ANR	3845850	AdditiveExpression	y - 8		3844810	0		-			
ANR	3845851	Identifier	y		3844810	0					
ANR	3845852	PrimaryExpression	8		3844810	1					
ANR	3845853	Identifier	~7		3844810	1					
ANR	3845854	Identifier	dst_stride		3844810	1					
ANR	3845855	Argument	p -> temp + 8 + 0 * stride		3844810	1					
ANR	3845856	AdditiveExpression	p -> temp + 8 + 0 * stride		3844810	0		+			
ANR	3845857	PtrMemberAccess	p -> temp		3844810	0					
ANR	3845858	Identifier	p		3844810	0					
ANR	3845859	Identifier	temp		3844810	1					
ANR	3845860	AdditiveExpression	8 + 0 * stride		3844810	1		+			
ANR	3845861	PrimaryExpression	8		3844810	0					
ANR	3845862	MultiplicativeExpression	0 * stride		3844810	1		*			
ANR	3845863	PrimaryExpression	0		3844810	0					
ANR	3845864	Identifier	stride		3844810	1					
ANR	3845865	Argument	dst_stride		3844810	2					
ANR	3845866	Identifier	dst_stride		3844810	0					
ANR	3845867	Argument	stride		3844810	3					
ANR	3845868	Identifier	stride		3844810	0					
ANR	3845869	Argument	width		3844810	4					
ANR	3845870	Identifier	width		3844810	0					
ANR	3845871	Argument	y & 7		3844810	5					
ANR	3845872	BitAndExpression	y & 7		3844810	0		&			
ANR	3845873	Identifier	y		3844810	0					
ANR	3845874	PrimaryExpression	7		3844810	1					
ANR	3845875	Argument	5 - p -> log2_count		3844810	6					
ANR	3845876	AdditiveExpression	5 - p -> log2_count		3844810	0		-			
ANR	3845877	PrimaryExpression	5		3844810	0					
ANR	3845878	PtrMemberAccess	p -> log2_count		3844810	1					
ANR	3845879	Identifier	p		3844810	0					
ANR	3845880	Identifier	log2_count		3844810	1					
ANR	3845881	ReturnType	static void		3844810	1					
ANR	3845882	Identifier	filter		3844810	2					
ANR	3845883	ParameterList	"FSPPContext * p , uint8_t * dst , uint8_t * src , int dst_stride , int src_stride , int width , int height , uint8_t * qp_store , int qp_stride , int is_luma"		3844810	3					
ANR	3845884	Parameter	FSPPContext * p	1:19:19:32	3844810	0	True				
ANR	3845885	ParameterType	FSPPContext *		3844810	0					
ANR	3845886	Identifier	p		3844810	1					
ANR	3845887	Parameter	uint8_t * dst	1:35:35:46	3844810	1	True				
ANR	3845888	ParameterType	uint8_t *		3844810	0					
ANR	3845889	Identifier	dst		3844810	1					
ANR	3845890	Parameter	uint8_t * src	1:49:49:60	3844810	2	True				
ANR	3845891	ParameterType	uint8_t *		3844810	0					
ANR	3845892	Identifier	src		3844810	1					
ANR	3845893	Parameter	int dst_stride	3:19:83:96	3844810	3	True				
ANR	3845894	ParameterType	int		3844810	0					
ANR	3845895	Identifier	dst_stride		3844810	1					
ANR	3845896	Parameter	int src_stride	3:35:99:112	3844810	4	True				
ANR	3845897	ParameterType	int		3844810	0					
ANR	3845898	Identifier	src_stride		3844810	1					
ANR	3845899	Parameter	int width	5:19:135:143	3844810	5	True				
ANR	3845900	ParameterType	int		3844810	0					
ANR	3845901	Identifier	width		3844810	1					
ANR	3845902	Parameter	int height	5:30:146:155	3844810	6	True				
ANR	3845903	ParameterType	int		3844810	0					
ANR	3845904	Identifier	height		3844810	1					
ANR	3845905	Parameter	uint8_t * qp_store	7:19:178:194	3844810	7	True				
ANR	3845906	ParameterType	uint8_t *		3844810	0					
ANR	3845907	Identifier	qp_store		3844810	1					
ANR	3845908	Parameter	int qp_stride	7:38:197:209	3844810	8	True				
ANR	3845909	ParameterType	int		3844810	0					
ANR	3845910	Identifier	qp_stride		3844810	1					
ANR	3845911	Parameter	int is_luma	7:53:212:222	3844810	9	True				
ANR	3845912	ParameterType	int		3844810	0					
ANR	3845913	Identifier	is_luma		3844810	1					
ANR	3845914	CFGEntryNode	ENTRY		3844810		True				
ANR	3845915	CFGExitNode	EXIT		3844810		True				
ANR	3845916	Symbol	qpsh		3844810						
ANR	3845917	Symbol	* x		3844810						
ANR	3845918	Symbol	qp_stride		3844810						
ANR	3845919	Symbol	qp_store		3844810						
ANR	3845920	Symbol	* index		3844810						
ANR	3845921	Symbol	stride		3844810						
ANR	3845922	Symbol	BLOCKSZ		3844810						
ANR	3845923	Symbol	* qp_store		3844810						
ANR	3845924	Symbol	block		3844810						
ANR	3845925	Symbol	int32_t		3844810						
ANR	3845926	Symbol	height		3844810						
ANR	3845927	Symbol	block3		3844810						
ANR	3845928	Symbol	dst_stride		3844810						
ANR	3845929	Symbol	qy		3844810						
ANR	3845930	Symbol	index		3844810						
ANR	3845931	Symbol	p -> src		3844810						
ANR	3845932	Symbol	p -> prev_q		3844810						
ANR	3845933	Symbol	es		3844810						
ANR	3845934	Symbol	p -> threshold_mtx		3844810						
ANR	3845935	Symbol	DECLARE_ALIGNED		3844810						
ANR	3845936	Symbol	x0		3844810						
ANR	3845937	Symbol	p -> vsub		3844810						
ANR	3845938	Symbol	dst		3844810						
ANR	3845939	Symbol	src_stride		3844810						
ANR	3845940	Symbol	p -> log2_count		3844810						
ANR	3845941	Symbol	* qpsh		3844810						
ANR	3845942	Symbol	is_luma		3844810						
ANR	3845943	Symbol	* qy		3844810						
ANR	3845944	Symbol	* width		3844810						
ANR	3845945	Symbol	p -> qscale_type		3844810						
ANR	3845946	Symbol	p -> threshold_mtx_noq		3844810						
ANR	3845947	Symbol	p -> temp_stride		3844810						
ANR	3845948	Symbol	p -> qp		3844810						
ANR	3845949	Symbol	y1		3844810						
ANR	3845950	Symbol	* * p		3844810						
ANR	3845951	Symbol	ff_norm_qscale		3844810						
ANR	3845952	Symbol	src		3844810						
ANR	3845953	Symbol	p -> temp		3844810						
ANR	3845954	Symbol	p		3844810						
ANR	3845955	Symbol	* p -> src		3844810						
ANR	3845956	Symbol	~1		3844810						
ANR	3845957	Symbol	t		3844810						
ANR	3845958	Symbol	qpsv		3844810						
ANR	3845959	Symbol	width		3844810						
ANR	3845960	Symbol	x		3844810						
ANR	3845961	Symbol	p -> hsub		3844810						
ANR	3845962	Symbol	y		3844810						
ANR	3845963	Symbol	~7		3844810						
ANR	3845964	Symbol	* p		3844810						
ANR	3845965	Symbol	step		3844810						
ANR	3845966	Symbol	block_align		3844810						
ANR	3845967	Symbol	* t		3844810						
