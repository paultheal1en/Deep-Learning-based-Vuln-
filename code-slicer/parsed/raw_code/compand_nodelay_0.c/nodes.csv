command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1361566	File	/home/p4ultr4n/workplace/ReVeal/raw_code/compand_nodelay_0.c								
ANR	1361567	Function	compand_nodelay	1:0:0:1133							
ANR	1361568	FunctionDef	"compand_nodelay (AVFilterContext * ctx , AVFrame * frame)"		1361567	0					
ANR	1361569	CompoundStatement		3:0:66:1133	1361567	0					
ANR	1361570	IdentifierDeclStatement	CompandContext * s = ctx -> priv ;	5:4:73:105	1361567	0	True				
ANR	1361571	IdentifierDecl	* s = ctx -> priv		1361567	0					
ANR	1361572	IdentifierDeclType	CompandContext *		1361567	0					
ANR	1361573	Identifier	s		1361567	1					
ANR	1361574	AssignmentExpression	* s = ctx -> priv		1361567	2		=			
ANR	1361575	Identifier	s		1361567	0					
ANR	1361576	PtrMemberAccess	ctx -> priv		1361567	1					
ANR	1361577	Identifier	ctx		1361567	0					
ANR	1361578	Identifier	priv		1361567	1					
ANR	1361579	IdentifierDeclStatement	AVFilterLink * inlink = ctx -> inputs [ 0 ] ;	7:4:112:149	1361567	1	True				
ANR	1361580	IdentifierDecl	* inlink = ctx -> inputs [ 0 ]		1361567	0					
ANR	1361581	IdentifierDeclType	AVFilterLink *		1361567	0					
ANR	1361582	Identifier	inlink		1361567	1					
ANR	1361583	AssignmentExpression	* inlink = ctx -> inputs [ 0 ]		1361567	2		=			
ANR	1361584	Identifier	inlink		1361567	0					
ANR	1361585	ArrayIndexing	ctx -> inputs [ 0 ]		1361567	1					
ANR	1361586	PtrMemberAccess	ctx -> inputs		1361567	0					
ANR	1361587	Identifier	ctx		1361567	0					
ANR	1361588	Identifier	inputs		1361567	1					
ANR	1361589	PrimaryExpression	0		1361567	1					
ANR	1361590	IdentifierDeclStatement	const int channels = inlink -> channels ;	9:4:156:193	1361567	2	True				
ANR	1361591	IdentifierDecl	channels = inlink -> channels		1361567	0					
ANR	1361592	IdentifierDeclType	const int		1361567	0					
ANR	1361593	Identifier	channels		1361567	1					
ANR	1361594	AssignmentExpression	channels = inlink -> channels		1361567	2		=			
ANR	1361595	Identifier	channels		1361567	0					
ANR	1361596	PtrMemberAccess	inlink -> channels		1361567	1					
ANR	1361597	Identifier	inlink		1361567	0					
ANR	1361598	Identifier	channels		1361567	1					
ANR	1361599	IdentifierDeclStatement	const int nb_samples = frame -> nb_samples ;	11:4:200:240	1361567	3	True				
ANR	1361600	IdentifierDecl	nb_samples = frame -> nb_samples		1361567	0					
ANR	1361601	IdentifierDeclType	const int		1361567	0					
ANR	1361602	Identifier	nb_samples		1361567	1					
ANR	1361603	AssignmentExpression	nb_samples = frame -> nb_samples		1361567	2		=			
ANR	1361604	Identifier	nb_samples		1361567	0					
ANR	1361605	PtrMemberAccess	frame -> nb_samples		1361567	1					
ANR	1361606	Identifier	frame		1361567	0					
ANR	1361607	Identifier	nb_samples		1361567	1					
ANR	1361608	IdentifierDeclStatement	AVFrame * out_frame ;	13:4:247:265	1361567	4	True				
ANR	1361609	IdentifierDecl	* out_frame		1361567	0					
ANR	1361610	IdentifierDeclType	AVFrame *		1361567	0					
ANR	1361611	Identifier	out_frame		1361567	1					
ANR	1361612	IdentifierDeclStatement	"int chan , i ;"	15:4:272:283	1361567	5	True				
ANR	1361613	IdentifierDecl	chan		1361567	0					
ANR	1361614	IdentifierDeclType	int		1361567	0					
ANR	1361615	Identifier	chan		1361567	1					
ANR	1361616	IdentifierDecl	i		1361567	1					
ANR	1361617	IdentifierDeclType	int		1361567	0					
ANR	1361618	Identifier	i		1361567	1					
ANR	1361619	IfStatement	if ( av_frame_is_writable ( frame ) )		1361567	6					
ANR	1361620	Condition	av_frame_is_writable ( frame )	19:8:296:322	1361567	0	True				
ANR	1361621	CallExpression	av_frame_is_writable ( frame )		1361567	0					
ANR	1361622	Callee	av_frame_is_writable		1361567	0					
ANR	1361623	Identifier	av_frame_is_writable		1361567	0					
ANR	1361624	ArgumentList	frame		1361567	1					
ANR	1361625	Argument	frame		1361567	0					
ANR	1361626	Identifier	frame		1361567	0					
ANR	1361627	CompoundStatement		17:37:258:258	1361567	1					
ANR	1361628	ExpressionStatement	out_frame = frame	21:8:336:353	1361567	0	True				
ANR	1361629	AssignmentExpression	out_frame = frame		1361567	0		=			
ANR	1361630	Identifier	out_frame		1361567	0					
ANR	1361631	Identifier	frame		1361567	1					
ANR	1361632	ElseStatement	else		1361567	0					
ANR	1361633	CompoundStatement		21:11:300:300	1361567	0					
ANR	1361634	ExpressionStatement	"out_frame = ff_get_audio_buffer ( inlink , nb_samples )"	25:8:378:429	1361567	0	True				
ANR	1361635	AssignmentExpression	"out_frame = ff_get_audio_buffer ( inlink , nb_samples )"		1361567	0		=			
ANR	1361636	Identifier	out_frame		1361567	0					
ANR	1361637	CallExpression	"ff_get_audio_buffer ( inlink , nb_samples )"		1361567	1					
ANR	1361638	Callee	ff_get_audio_buffer		1361567	0					
ANR	1361639	Identifier	ff_get_audio_buffer		1361567	0					
ANR	1361640	ArgumentList	inlink		1361567	1					
ANR	1361641	Argument	inlink		1361567	0					
ANR	1361642	Identifier	inlink		1361567	0					
ANR	1361643	Argument	nb_samples		1361567	1					
ANR	1361644	Identifier	nb_samples		1361567	0					
ANR	1361645	IfStatement	if ( ! out_frame )		1361567	1					
ANR	1361646	Condition	! out_frame	27:12:444:453	1361567	0	True				
ANR	1361647	UnaryOperationExpression	! out_frame		1361567	0					
ANR	1361648	UnaryOperator	!		1361567	0					
ANR	1361649	Identifier	out_frame		1361567	1					
ANR	1361650	CompoundStatement		25:24:389:389	1361567	1					
ANR	1361651	ExpressionStatement	av_frame_free ( & frame )	29:12:471:492	1361567	0	True				
ANR	1361652	CallExpression	av_frame_free ( & frame )		1361567	0					
ANR	1361653	Callee	av_frame_free		1361567	0					
ANR	1361654	Identifier	av_frame_free		1361567	0					
ANR	1361655	ArgumentList	& frame		1361567	1					
ANR	1361656	Argument	& frame		1361567	0					
ANR	1361657	UnaryOperationExpression	& frame		1361567	0					
ANR	1361658	UnaryOperator	&		1361567	0					
ANR	1361659	Identifier	frame		1361567	1					
ANR	1361660	ReturnStatement	return AVERROR ( ENOMEM ) ;	31:12:507:529	1361567	1	True				
ANR	1361661	CallExpression	AVERROR ( ENOMEM )		1361567	0					
ANR	1361662	Callee	AVERROR		1361567	0					
ANR	1361663	Identifier	AVERROR		1361567	0					
ANR	1361664	ArgumentList	ENOMEM		1361567	1					
ANR	1361665	Argument	ENOMEM		1361567	0					
ANR	1361666	Identifier	ENOMEM		1361567	0					
ANR	1361667	ExpressionStatement	"av_frame_copy_props ( out_frame , frame )"	35:8:551:588	1361567	2	True				
ANR	1361668	CallExpression	"av_frame_copy_props ( out_frame , frame )"		1361567	0					
ANR	1361669	Callee	av_frame_copy_props		1361567	0					
ANR	1361670	Identifier	av_frame_copy_props		1361567	0					
ANR	1361671	ArgumentList	out_frame		1361567	1					
ANR	1361672	Argument	out_frame		1361567	0					
ANR	1361673	Identifier	out_frame		1361567	0					
ANR	1361674	Argument	frame		1361567	1					
ANR	1361675	Identifier	frame		1361567	0					
ANR	1361676	ForStatement	for ( chan = 0 ; chan < channels ; chan ++ )		1361567	7					
ANR	1361677	ForInit	chan = 0 ;	41:9:609:617	1361567	0	True				
ANR	1361678	AssignmentExpression	chan = 0		1361567	0		=			
ANR	1361679	Identifier	chan		1361567	0					
ANR	1361680	PrimaryExpression	0		1361567	1					
ANR	1361681	Condition	chan < channels	41:19:619:633	1361567	1	True				
ANR	1361682	RelationalExpression	chan < channels		1361567	0		<			
ANR	1361683	Identifier	chan		1361567	0					
ANR	1361684	Identifier	channels		1361567	1					
ANR	1361685	PostIncDecOperationExpression	chan ++	41:36:636:641	1361567	2	True				
ANR	1361686	Identifier	chan		1361567	0					
ANR	1361687	IncDec	++		1361567	1					
ANR	1361688	CompoundStatement		45:8:720:754	1361567	3					
ANR	1361689	IdentifierDeclStatement	const double * src = ( double * ) frame -> extended_data [ chan ] ;	43:8:655:711	1361567	0	True				
ANR	1361690	IdentifierDecl	* src = ( double * ) frame -> extended_data [ chan ]		1361567	0					
ANR	1361691	IdentifierDeclType	const double *		1361567	0					
ANR	1361692	Identifier	src		1361567	1					
ANR	1361693	AssignmentExpression	* src = ( double * ) frame -> extended_data [ chan ]		1361567	2		=			
ANR	1361694	Identifier	src		1361567	0					
ANR	1361695	CastExpression	( double * ) frame -> extended_data [ chan ]		1361567	1					
ANR	1361696	CastTarget	double *		1361567	0					
ANR	1361697	ArrayIndexing	frame -> extended_data [ chan ]		1361567	1					
ANR	1361698	PtrMemberAccess	frame -> extended_data		1361567	0					
ANR	1361699	Identifier	frame		1361567	0					
ANR	1361700	Identifier	extended_data		1361567	1					
ANR	1361701	Identifier	chan		1361567	1					
ANR	1361702	IdentifierDeclStatement	double * dst = ( double * ) out_frame -> extended_data [ chan ] ;	45:8:722:776	1361567	1	True				
ANR	1361703	IdentifierDecl	* dst = ( double * ) out_frame -> extended_data [ chan ]		1361567	0					
ANR	1361704	IdentifierDeclType	double *		1361567	0					
ANR	1361705	Identifier	dst		1361567	1					
ANR	1361706	AssignmentExpression	* dst = ( double * ) out_frame -> extended_data [ chan ]		1361567	2		=			
ANR	1361707	Identifier	dst		1361567	0					
ANR	1361708	CastExpression	( double * ) out_frame -> extended_data [ chan ]		1361567	1					
ANR	1361709	CastTarget	double *		1361567	0					
ANR	1361710	ArrayIndexing	out_frame -> extended_data [ chan ]		1361567	1					
ANR	1361711	PtrMemberAccess	out_frame -> extended_data		1361567	0					
ANR	1361712	Identifier	out_frame		1361567	0					
ANR	1361713	Identifier	extended_data		1361567	1					
ANR	1361714	Identifier	chan		1361567	1					
ANR	1361715	IdentifierDeclStatement	ChanParam * cp = & s -> channels [ chan ] ;	47:8:787:821	1361567	2	True				
ANR	1361716	IdentifierDecl	* cp = & s -> channels [ chan ]		1361567	0					
ANR	1361717	IdentifierDeclType	ChanParam *		1361567	0					
ANR	1361718	Identifier	cp		1361567	1					
ANR	1361719	AssignmentExpression	* cp = & s -> channels [ chan ]		1361567	2		=			
ANR	1361720	Identifier	cp		1361567	0					
ANR	1361721	UnaryOperationExpression	& s -> channels [ chan ]		1361567	1					
ANR	1361722	UnaryOperator	&		1361567	0					
ANR	1361723	ArrayIndexing	s -> channels [ chan ]		1361567	1					
ANR	1361724	PtrMemberAccess	s -> channels		1361567	0					
ANR	1361725	Identifier	s		1361567	0					
ANR	1361726	Identifier	channels		1361567	1					
ANR	1361727	Identifier	chan		1361567	1					
ANR	1361728	ForStatement	for ( i = 0 ; i < nb_samples ; i ++ )		1361567	3					
ANR	1361729	ForInit	i = 0 ;	51:13:839:844	1361567	0	True				
ANR	1361730	AssignmentExpression	i = 0		1361567	0		=			
ANR	1361731	Identifier	i		1361567	0					
ANR	1361732	PrimaryExpression	0		1361567	1					
ANR	1361733	Condition	i < nb_samples	51:20:846:859	1361567	1	True				
ANR	1361734	RelationalExpression	i < nb_samples		1361567	0		<			
ANR	1361735	Identifier	i		1361567	0					
ANR	1361736	Identifier	nb_samples		1361567	1					
ANR	1361737	PostIncDecOperationExpression	i ++	51:36:862:864	1361567	2	True				
ANR	1361738	Identifier	i		1361567	0					
ANR	1361739	IncDec	++		1361567	1					
ANR	1361740	CompoundStatement		49:41:800:800	1361567	3					
ANR	1361741	ExpressionStatement	"update_volume ( cp , fabs ( src [ i ] ) )"	53:12:882:913	1361567	0	True				
ANR	1361742	CallExpression	"update_volume ( cp , fabs ( src [ i ] ) )"		1361567	0					
ANR	1361743	Callee	update_volume		1361567	0					
ANR	1361744	Identifier	update_volume		1361567	0					
ANR	1361745	ArgumentList	cp		1361567	1					
ANR	1361746	Argument	cp		1361567	0					
ANR	1361747	Identifier	cp		1361567	0					
ANR	1361748	Argument	fabs ( src [ i ] )		1361567	1					
ANR	1361749	CallExpression	fabs ( src [ i ] )		1361567	0					
ANR	1361750	Callee	fabs		1361567	0					
ANR	1361751	Identifier	fabs		1361567	0					
ANR	1361752	ArgumentList	src [ i ]		1361567	1					
ANR	1361753	Argument	src [ i ]		1361567	0					
ANR	1361754	ArrayIndexing	src [ i ]		1361567	0					
ANR	1361755	Identifier	src		1361567	0					
ANR	1361756	Identifier	i		1361567	1					
ANR	1361757	ExpressionStatement	"dst [ i ] = av_clipd ( src [ i ] * get_volume ( s , cp -> volume ) , - 1 , 1 )"	57:12:930:990	1361567	1	True				
ANR	1361758	AssignmentExpression	"dst [ i ] = av_clipd ( src [ i ] * get_volume ( s , cp -> volume ) , - 1 , 1 )"		1361567	0		=			
ANR	1361759	ArrayIndexing	dst [ i ]		1361567	0					
ANR	1361760	Identifier	dst		1361567	0					
ANR	1361761	Identifier	i		1361567	1					
ANR	1361762	CallExpression	"av_clipd ( src [ i ] * get_volume ( s , cp -> volume ) , - 1 , 1 )"		1361567	1					
ANR	1361763	Callee	av_clipd		1361567	0					
ANR	1361764	Identifier	av_clipd		1361567	0					
ANR	1361765	ArgumentList	"src [ i ] * get_volume ( s , cp -> volume )"		1361567	1					
ANR	1361766	Argument	"src [ i ] * get_volume ( s , cp -> volume )"		1361567	0					
ANR	1361767	MultiplicativeExpression	"src [ i ] * get_volume ( s , cp -> volume )"		1361567	0		*			
ANR	1361768	ArrayIndexing	src [ i ]		1361567	0					
ANR	1361769	Identifier	src		1361567	0					
ANR	1361770	Identifier	i		1361567	1					
ANR	1361771	CallExpression	"get_volume ( s , cp -> volume )"		1361567	1					
ANR	1361772	Callee	get_volume		1361567	0					
ANR	1361773	Identifier	get_volume		1361567	0					
ANR	1361774	ArgumentList	s		1361567	1					
ANR	1361775	Argument	s		1361567	0					
ANR	1361776	Identifier	s		1361567	0					
ANR	1361777	Argument	cp -> volume		1361567	1					
ANR	1361778	PtrMemberAccess	cp -> volume		1361567	0					
ANR	1361779	Identifier	cp		1361567	0					
ANR	1361780	Identifier	volume		1361567	1					
ANR	1361781	Argument	- 1		1361567	1					
ANR	1361782	UnaryOperationExpression	- 1		1361567	0					
ANR	1361783	UnaryOperator	-		1361567	0					
ANR	1361784	PrimaryExpression	1		1361567	1					
ANR	1361785	Argument	1		1361567	2					
ANR	1361786	PrimaryExpression	1		1361567	0					
ANR	1361787	IfStatement	if ( frame != out_frame )		1361567	8					
ANR	1361788	Condition	frame != out_frame	65:8:1021:1038	1361567	0	True				
ANR	1361789	EqualityExpression	frame != out_frame		1361567	0		!=			
ANR	1361790	Identifier	frame		1361567	0					
ANR	1361791	Identifier	out_frame		1361567	1					
ANR	1361792	ExpressionStatement	av_frame_free ( & frame )	67:8:1050:1071	1361567	1	True				
ANR	1361793	CallExpression	av_frame_free ( & frame )		1361567	0					
ANR	1361794	Callee	av_frame_free		1361567	0					
ANR	1361795	Identifier	av_frame_free		1361567	0					
ANR	1361796	ArgumentList	& frame		1361567	1					
ANR	1361797	Argument	& frame		1361567	0					
ANR	1361798	UnaryOperationExpression	& frame		1361567	0					
ANR	1361799	UnaryOperator	&		1361567	0					
ANR	1361800	Identifier	frame		1361567	1					
ANR	1361801	ReturnStatement	"return ff_filter_frame ( ctx -> outputs [ 0 ] , out_frame ) ;"	71:4:1080:1130	1361567	9	True				
ANR	1361802	CallExpression	"ff_filter_frame ( ctx -> outputs [ 0 ] , out_frame )"		1361567	0					
ANR	1361803	Callee	ff_filter_frame		1361567	0					
ANR	1361804	Identifier	ff_filter_frame		1361567	0					
ANR	1361805	ArgumentList	ctx -> outputs [ 0 ]		1361567	1					
ANR	1361806	Argument	ctx -> outputs [ 0 ]		1361567	0					
ANR	1361807	ArrayIndexing	ctx -> outputs [ 0 ]		1361567	0					
ANR	1361808	PtrMemberAccess	ctx -> outputs		1361567	0					
ANR	1361809	Identifier	ctx		1361567	0					
ANR	1361810	Identifier	outputs		1361567	1					
ANR	1361811	PrimaryExpression	0		1361567	1					
ANR	1361812	Argument	out_frame		1361567	1					
ANR	1361813	Identifier	out_frame		1361567	0					
ANR	1361814	ReturnType	static int		1361567	1					
ANR	1361815	Identifier	compand_nodelay		1361567	2					
ANR	1361816	ParameterList	"AVFilterContext * ctx , AVFrame * frame"		1361567	3					
ANR	1361817	Parameter	AVFilterContext * ctx	1:27:27:46	1361567	0	True				
ANR	1361818	ParameterType	AVFilterContext *		1361567	0					
ANR	1361819	Identifier	ctx		1361567	1					
ANR	1361820	Parameter	AVFrame * frame	1:49:49:62	1361567	1	True				
ANR	1361821	ParameterType	AVFrame *		1361567	0					
ANR	1361822	Identifier	frame		1361567	1					
ANR	1361823	CFGEntryNode	ENTRY		1361567		True				
ANR	1361824	CFGExitNode	EXIT		1361567		True				
ANR	1361825	Symbol	ff_get_audio_buffer		1361567						
ANR	1361826	Symbol	ENOMEM		1361567						
ANR	1361827	Symbol	* frame		1361567						
ANR	1361828	Symbol	dst		1361567						
ANR	1361829	Symbol	* ctx -> inputs		1361567						
ANR	1361830	Symbol	nb_samples		1361567						
ANR	1361831	Symbol	cp -> volume		1361567						
ANR	1361832	Symbol	av_frame_is_writable		1361567						
ANR	1361833	Symbol	get_volume		1361567						
ANR	1361834	Symbol	ff_filter_frame		1361567						
ANR	1361835	Symbol	* out_frame		1361567						
ANR	1361836	Symbol	s -> channels		1361567						
ANR	1361837	Symbol	* src		1361567						
ANR	1361838	Symbol	ctx -> outputs		1361567						
ANR	1361839	Symbol	* dst		1361567						
ANR	1361840	Symbol	inlink -> channels		1361567						
ANR	1361841	Symbol	* * frame		1361567						
ANR	1361842	Symbol	* chan		1361567						
ANR	1361843	Symbol	* frame -> extended_data		1361567						
ANR	1361844	Symbol	frame -> nb_samples		1361567						
ANR	1361845	Symbol	* out_frame -> extended_data		1361567						
ANR	1361846	Symbol	fabs		1361567						
ANR	1361847	Symbol	src		1361567						
ANR	1361848	Symbol	ctx		1361567						
ANR	1361849	Symbol	i		1361567						
ANR	1361850	Symbol	& frame		1361567						
ANR	1361851	Symbol	ctx -> priv		1361567						
ANR	1361852	Symbol	out_frame		1361567						
ANR	1361853	Symbol	ctx -> inputs		1361567						
ANR	1361854	Symbol	cp		1361567						
ANR	1361855	Symbol	* ctx		1361567						
ANR	1361856	Symbol	* * out_frame		1361567						
ANR	1361857	Symbol	out_frame -> extended_data		1361567						
ANR	1361858	Symbol	* cp		1361567						
ANR	1361859	Symbol	inlink		1361567						
ANR	1361860	Symbol	s		1361567						
ANR	1361861	Symbol	* inlink		1361567						
ANR	1361862	Symbol	* i		1361567						
ANR	1361863	Symbol	channels		1361567						
ANR	1361864	Symbol	frame -> extended_data		1361567						
ANR	1361865	Symbol	av_clipd		1361567						
ANR	1361866	Symbol	* * ctx		1361567						
ANR	1361867	Symbol	AVERROR		1361567						
ANR	1361868	Symbol	chan		1361567						
ANR	1361869	Symbol	* ctx -> outputs		1361567						
ANR	1361870	Symbol	* s		1361567						
ANR	1361871	Symbol	frame		1361567						
