command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1720999	File	/home/p4ultr4n/workplace/ReVeal/raw_code/decode_cabac_intra_mb_type_0.c								
ANR	1721000	Function	decode_cabac_intra_mb_type	1:0:0:1346							
ANR	1721001	FunctionDef	"decode_cabac_intra_mb_type (H264Context * h , int ctx_base , int intra_slice)"		1721000	0					
ANR	1721002	CompoundStatement		1:85:85:1346	1721000	0					
ANR	1721003	IdentifierDeclStatement	uint8_t * state = & h -> cabac_state [ ctx_base ] ;	3:4:92:133	1721000	0	True				
ANR	1721004	IdentifierDecl	* state = & h -> cabac_state [ ctx_base ]		1721000	0					
ANR	1721005	IdentifierDeclType	uint8_t *		1721000	0					
ANR	1721006	Identifier	state		1721000	1					
ANR	1721007	AssignmentExpression	* state = & h -> cabac_state [ ctx_base ]		1721000	2		=			
ANR	1721008	Identifier	state		1721000	0					
ANR	1721009	UnaryOperationExpression	& h -> cabac_state [ ctx_base ]		1721000	1					
ANR	1721010	UnaryOperator	&		1721000	0					
ANR	1721011	ArrayIndexing	h -> cabac_state [ ctx_base ]		1721000	1					
ANR	1721012	PtrMemberAccess	h -> cabac_state		1721000	0					
ANR	1721013	Identifier	h		1721000	0					
ANR	1721014	Identifier	cabac_state		1721000	1					
ANR	1721015	Identifier	ctx_base		1721000	1					
ANR	1721016	IdentifierDeclStatement	int mb_type ;	5:4:140:151	1721000	1	True				
ANR	1721017	IdentifierDecl	mb_type		1721000	0					
ANR	1721018	IdentifierDeclType	int		1721000	0					
ANR	1721019	Identifier	mb_type		1721000	1					
ANR	1721020	IfStatement	if ( intra_slice )		1721000	2					
ANR	1721021	Condition	intra_slice	9:7:163:173	1721000	0	True				
ANR	1721022	Identifier	intra_slice		1721000	0					
ANR	1721023	CompoundStatement		17:8:231:240	1721000	1					
ANR	1721024	Statement	MpegEncContext	11:8:186:199	1721000	0	True				
ANR	1721025	Statement	*	11:23:201:201	1721000	1	True				
ANR	1721026	Statement	const	11:25:203:207	1721000	2	True				
ANR	1721027	ExpressionStatement	s = & h -> s	11:31:209:218	1721000	3	True				
ANR	1721028	AssignmentExpression	s = & h -> s		1721000	0		=			
ANR	1721029	Identifier	s		1721000	0					
ANR	1721030	UnaryOperationExpression	& h -> s		1721000	1					
ANR	1721031	UnaryOperator	&		1721000	0					
ANR	1721032	PtrMemberAccess	h -> s		1721000	1					
ANR	1721033	Identifier	h		1721000	0					
ANR	1721034	Identifier	s		1721000	1					
ANR	1721035	IdentifierDeclStatement	const int mba_xy = h -> left_mb_xy [ 0 ] ;	13:8:229:264	1721000	4	True				
ANR	1721036	IdentifierDecl	mba_xy = h -> left_mb_xy [ 0 ]		1721000	0					
ANR	1721037	IdentifierDeclType	const int		1721000	0					
ANR	1721038	Identifier	mba_xy		1721000	1					
ANR	1721039	AssignmentExpression	mba_xy = h -> left_mb_xy [ 0 ]		1721000	2		=			
ANR	1721040	Identifier	mba_xy		1721000	0					
ANR	1721041	ArrayIndexing	h -> left_mb_xy [ 0 ]		1721000	1					
ANR	1721042	PtrMemberAccess	h -> left_mb_xy		1721000	0					
ANR	1721043	Identifier	h		1721000	0					
ANR	1721044	Identifier	left_mb_xy		1721000	1					
ANR	1721045	PrimaryExpression	0		1721000	1					
ANR	1721046	IdentifierDeclStatement	const int mbb_xy = h -> top_mb_xy ;	15:8:275:306	1721000	5	True				
ANR	1721047	IdentifierDecl	mbb_xy = h -> top_mb_xy		1721000	0					
ANR	1721048	IdentifierDeclType	const int		1721000	0					
ANR	1721049	Identifier	mbb_xy		1721000	1					
ANR	1721050	AssignmentExpression	mbb_xy = h -> top_mb_xy		1721000	2		=			
ANR	1721051	Identifier	mbb_xy		1721000	0					
ANR	1721052	PtrMemberAccess	h -> top_mb_xy		1721000	1					
ANR	1721053	Identifier	h		1721000	0					
ANR	1721054	Identifier	top_mb_xy		1721000	1					
ANR	1721055	IdentifierDeclStatement	int ctx = 0 ;	17:8:317:326	1721000	6	True				
ANR	1721056	IdentifierDecl	ctx = 0		1721000	0					
ANR	1721057	IdentifierDeclType	int		1721000	0					
ANR	1721058	Identifier	ctx		1721000	1					
ANR	1721059	AssignmentExpression	ctx = 0		1721000	2		=			
ANR	1721060	Identifier	ctx		1721000	0					
ANR	1721061	PrimaryExpression	0		1721000	1					
ANR	1721062	IfStatement	if ( h -> slice_table [ mba_xy ] == h -> slice_num && ! IS_INTRA4x4 ( s -> current_picture . mb_type [ mba_xy ] ) )		1721000	7					
ANR	1721063	Condition	h -> slice_table [ mba_xy ] == h -> slice_num && ! IS_INTRA4x4 ( s -> current_picture . mb_type [ mba_xy ] )	19:12:341:432	1721000	0	True				
ANR	1721064	AndExpression	h -> slice_table [ mba_xy ] == h -> slice_num && ! IS_INTRA4x4 ( s -> current_picture . mb_type [ mba_xy ] )		1721000	0		&&			
ANR	1721065	EqualityExpression	h -> slice_table [ mba_xy ] == h -> slice_num		1721000	0		==			
ANR	1721066	ArrayIndexing	h -> slice_table [ mba_xy ]		1721000	0					
ANR	1721067	PtrMemberAccess	h -> slice_table		1721000	0					
ANR	1721068	Identifier	h		1721000	0					
ANR	1721069	Identifier	slice_table		1721000	1					
ANR	1721070	Identifier	mba_xy		1721000	1					
ANR	1721071	PtrMemberAccess	h -> slice_num		1721000	1					
ANR	1721072	Identifier	h		1721000	0					
ANR	1721073	Identifier	slice_num		1721000	1					
ANR	1721074	UnaryOperationExpression	! IS_INTRA4x4 ( s -> current_picture . mb_type [ mba_xy ] )		1721000	1					
ANR	1721075	UnaryOperator	!		1721000	0					
ANR	1721076	CallExpression	IS_INTRA4x4 ( s -> current_picture . mb_type [ mba_xy ] )		1721000	1					
ANR	1721077	Callee	IS_INTRA4x4		1721000	0					
ANR	1721078	Identifier	IS_INTRA4x4		1721000	0					
ANR	1721079	ArgumentList	s -> current_picture . mb_type [ mba_xy ]		1721000	1					
ANR	1721080	Argument	s -> current_picture . mb_type [ mba_xy ]		1721000	0					
ANR	1721081	ArrayIndexing	s -> current_picture . mb_type [ mba_xy ]		1721000	0					
ANR	1721082	MemberAccess	s -> current_picture . mb_type		1721000	0					
ANR	1721083	PtrMemberAccess	s -> current_picture		1721000	0					
ANR	1721084	Identifier	s		1721000	0					
ANR	1721085	Identifier	current_picture		1721000	1					
ANR	1721086	Identifier	mb_type		1721000	1					
ANR	1721087	Identifier	mba_xy		1721000	1					
ANR	1721088	ExpressionStatement	ctx ++	21:12:449:454	1721000	1	True				
ANR	1721089	PostIncDecOperationExpression	ctx ++		1721000	0					
ANR	1721090	Identifier	ctx		1721000	0					
ANR	1721091	IncDec	++		1721000	1					
ANR	1721092	IfStatement	if ( h -> slice_table [ mbb_xy ] == h -> slice_num && ! IS_INTRA4x4 ( s -> current_picture . mb_type [ mbb_xy ] ) )		1721000	8					
ANR	1721093	Condition	h -> slice_table [ mbb_xy ] == h -> slice_num && ! IS_INTRA4x4 ( s -> current_picture . mb_type [ mbb_xy ] )	23:12:469:560	1721000	0	True				
ANR	1721094	AndExpression	h -> slice_table [ mbb_xy ] == h -> slice_num && ! IS_INTRA4x4 ( s -> current_picture . mb_type [ mbb_xy ] )		1721000	0		&&			
ANR	1721095	EqualityExpression	h -> slice_table [ mbb_xy ] == h -> slice_num		1721000	0		==			
ANR	1721096	ArrayIndexing	h -> slice_table [ mbb_xy ]		1721000	0					
ANR	1721097	PtrMemberAccess	h -> slice_table		1721000	0					
ANR	1721098	Identifier	h		1721000	0					
ANR	1721099	Identifier	slice_table		1721000	1					
ANR	1721100	Identifier	mbb_xy		1721000	1					
ANR	1721101	PtrMemberAccess	h -> slice_num		1721000	1					
ANR	1721102	Identifier	h		1721000	0					
ANR	1721103	Identifier	slice_num		1721000	1					
ANR	1721104	UnaryOperationExpression	! IS_INTRA4x4 ( s -> current_picture . mb_type [ mbb_xy ] )		1721000	1					
ANR	1721105	UnaryOperator	!		1721000	0					
ANR	1721106	CallExpression	IS_INTRA4x4 ( s -> current_picture . mb_type [ mbb_xy ] )		1721000	1					
ANR	1721107	Callee	IS_INTRA4x4		1721000	0					
ANR	1721108	Identifier	IS_INTRA4x4		1721000	0					
ANR	1721109	ArgumentList	s -> current_picture . mb_type [ mbb_xy ]		1721000	1					
ANR	1721110	Argument	s -> current_picture . mb_type [ mbb_xy ]		1721000	0					
ANR	1721111	ArrayIndexing	s -> current_picture . mb_type [ mbb_xy ]		1721000	0					
ANR	1721112	MemberAccess	s -> current_picture . mb_type		1721000	0					
ANR	1721113	PtrMemberAccess	s -> current_picture		1721000	0					
ANR	1721114	Identifier	s		1721000	0					
ANR	1721115	Identifier	current_picture		1721000	1					
ANR	1721116	Identifier	mb_type		1721000	1					
ANR	1721117	Identifier	mbb_xy		1721000	1					
ANR	1721118	ExpressionStatement	ctx ++	25:12:577:582	1721000	1	True				
ANR	1721119	PostIncDecOperationExpression	ctx ++		1721000	0					
ANR	1721120	Identifier	ctx		1721000	0					
ANR	1721121	IncDec	++		1721000	1					
ANR	1721122	IfStatement	"if ( get_cabac_noinline ( & h -> cabac , & state [ ctx ] ) == 0 )"		1721000	9					
ANR	1721123	Condition	"get_cabac_noinline ( & h -> cabac , & state [ ctx ] ) == 0"	27:12:597:645	1721000	0	True				
ANR	1721124	EqualityExpression	"get_cabac_noinline ( & h -> cabac , & state [ ctx ] ) == 0"		1721000	0		==			
ANR	1721125	CallExpression	"get_cabac_noinline ( & h -> cabac , & state [ ctx ] )"		1721000	0					
ANR	1721126	Callee	get_cabac_noinline		1721000	0					
ANR	1721127	Identifier	get_cabac_noinline		1721000	0					
ANR	1721128	ArgumentList	& h -> cabac		1721000	1					
ANR	1721129	Argument	& h -> cabac		1721000	0					
ANR	1721130	UnaryOperationExpression	& h -> cabac		1721000	0					
ANR	1721131	UnaryOperator	&		1721000	0					
ANR	1721132	PtrMemberAccess	h -> cabac		1721000	1					
ANR	1721133	Identifier	h		1721000	0					
ANR	1721134	Identifier	cabac		1721000	1					
ANR	1721135	Argument	& state [ ctx ]		1721000	1					
ANR	1721136	UnaryOperationExpression	& state [ ctx ]		1721000	0					
ANR	1721137	UnaryOperator	&		1721000	0					
ANR	1721138	ArrayIndexing	state [ ctx ]		1721000	1					
ANR	1721139	Identifier	state		1721000	0					
ANR	1721140	Identifier	ctx		1721000	1					
ANR	1721141	PrimaryExpression	0		1721000	1					
ANR	1721142	ReturnStatement	return 0 ;	29:12:662:670	1721000	1	True				
ANR	1721143	PrimaryExpression	0		1721000	0					
ANR	1721144	ExpressionStatement	state += 2	31:8:694:704	1721000	10	True				
ANR	1721145	AssignmentExpression	state += 2		1721000	0		+=			
ANR	1721146	Identifier	state		1721000	0					
ANR	1721147	PrimaryExpression	2		1721000	1					
ANR	1721148	ElseStatement	else		1721000	0					
ANR	1721149	CompoundStatement		33:9:630:630	1721000	0					
ANR	1721150	IfStatement	"if ( get_cabac_noinline ( & h -> cabac , state ) == 0 )"		1721000	0					
ANR	1721151	Condition	"get_cabac_noinline ( & h -> cabac , state ) == 0"	35:12:731:773	1721000	0	True				
ANR	1721152	EqualityExpression	"get_cabac_noinline ( & h -> cabac , state ) == 0"		1721000	0		==			
ANR	1721153	CallExpression	"get_cabac_noinline ( & h -> cabac , state )"		1721000	0					
ANR	1721154	Callee	get_cabac_noinline		1721000	0					
ANR	1721155	Identifier	get_cabac_noinline		1721000	0					
ANR	1721156	ArgumentList	& h -> cabac		1721000	1					
ANR	1721157	Argument	& h -> cabac		1721000	0					
ANR	1721158	UnaryOperationExpression	& h -> cabac		1721000	0					
ANR	1721159	UnaryOperator	&		1721000	0					
ANR	1721160	PtrMemberAccess	h -> cabac		1721000	1					
ANR	1721161	Identifier	h		1721000	0					
ANR	1721162	Identifier	cabac		1721000	1					
ANR	1721163	Argument	state		1721000	1					
ANR	1721164	Identifier	state		1721000	0					
ANR	1721165	PrimaryExpression	0		1721000	1					
ANR	1721166	ReturnStatement	return 0 ;	37:12:790:798	1721000	1	True				
ANR	1721167	PrimaryExpression	0		1721000	0					
ANR	1721168	IfStatement	if ( get_cabac_terminate ( & h -> cabac ) )		1721000	3					
ANR	1721169	Condition	get_cabac_terminate ( & h -> cabac )	43:8:831:862	1721000	0	True				
ANR	1721170	CallExpression	get_cabac_terminate ( & h -> cabac )		1721000	0					
ANR	1721171	Callee	get_cabac_terminate		1721000	0					
ANR	1721172	Identifier	get_cabac_terminate		1721000	0					
ANR	1721173	ArgumentList	& h -> cabac		1721000	1					
ANR	1721174	Argument	& h -> cabac		1721000	0					
ANR	1721175	UnaryOperationExpression	& h -> cabac		1721000	0					
ANR	1721176	UnaryOperator	&		1721000	0					
ANR	1721177	PtrMemberAccess	h -> cabac		1721000	1					
ANR	1721178	Identifier	h		1721000	0					
ANR	1721179	Identifier	cabac		1721000	1					
ANR	1721180	ReturnStatement	return 25 ;	45:8:875:884	1721000	1	True				
ANR	1721181	PrimaryExpression	25		1721000	0					
ANR	1721182	ExpressionStatement	mb_type = 1	49:4:904:915	1721000	4	True				
ANR	1721183	AssignmentExpression	mb_type = 1		1721000	0		=			
ANR	1721184	Identifier	mb_type		1721000	0					
ANR	1721185	PrimaryExpression	1		1721000	1					
ANR	1721186	ExpressionStatement	"mb_type += 12 * get_cabac_noinline ( & h -> cabac , & state [ 1 ] )"	51:4:935:993	1721000	5	True				
ANR	1721187	AssignmentExpression	"mb_type += 12 * get_cabac_noinline ( & h -> cabac , & state [ 1 ] )"		1721000	0		+=			
ANR	1721188	Identifier	mb_type		1721000	0					
ANR	1721189	MultiplicativeExpression	"12 * get_cabac_noinline ( & h -> cabac , & state [ 1 ] )"		1721000	1		*			
ANR	1721190	PrimaryExpression	12		1721000	0					
ANR	1721191	CallExpression	"get_cabac_noinline ( & h -> cabac , & state [ 1 ] )"		1721000	1					
ANR	1721192	Callee	get_cabac_noinline		1721000	0					
ANR	1721193	Identifier	get_cabac_noinline		1721000	0					
ANR	1721194	ArgumentList	& h -> cabac		1721000	1					
ANR	1721195	Argument	& h -> cabac		1721000	0					
ANR	1721196	UnaryOperationExpression	& h -> cabac		1721000	0					
ANR	1721197	UnaryOperator	&		1721000	0					
ANR	1721198	PtrMemberAccess	h -> cabac		1721000	1					
ANR	1721199	Identifier	h		1721000	0					
ANR	1721200	Identifier	cabac		1721000	1					
ANR	1721201	Argument	& state [ 1 ]		1721000	1					
ANR	1721202	UnaryOperationExpression	& state [ 1 ]		1721000	0					
ANR	1721203	UnaryOperator	&		1721000	0					
ANR	1721204	ArrayIndexing	state [ 1 ]		1721000	1					
ANR	1721205	Identifier	state		1721000	0					
ANR	1721206	PrimaryExpression	1		1721000	1					
ANR	1721207	IfStatement	"if ( get_cabac_noinline ( & h -> cabac , & state [ 2 ] ) )"		1721000	6					
ANR	1721208	Condition	"get_cabac_noinline ( & h -> cabac , & state [ 2 ] )"	53:8:1024:1065	1721000	0	True				
ANR	1721209	CallExpression	"get_cabac_noinline ( & h -> cabac , & state [ 2 ] )"		1721000	0					
ANR	1721210	Callee	get_cabac_noinline		1721000	0					
ANR	1721211	Identifier	get_cabac_noinline		1721000	0					
ANR	1721212	ArgumentList	& h -> cabac		1721000	1					
ANR	1721213	Argument	& h -> cabac		1721000	0					
ANR	1721214	UnaryOperationExpression	& h -> cabac		1721000	0					
ANR	1721215	UnaryOperator	&		1721000	0					
ANR	1721216	PtrMemberAccess	h -> cabac		1721000	1					
ANR	1721217	Identifier	h		1721000	0					
ANR	1721218	Identifier	cabac		1721000	1					
ANR	1721219	Argument	& state [ 2 ]		1721000	1					
ANR	1721220	UnaryOperationExpression	& state [ 2 ]		1721000	0					
ANR	1721221	UnaryOperator	&		1721000	0					
ANR	1721222	ArrayIndexing	state [ 2 ]		1721000	1					
ANR	1721223	Identifier	state		1721000	0					
ANR	1721224	PrimaryExpression	2		1721000	1					
ANR	1721225	ExpressionStatement	"mb_type += 4 + 4 * get_cabac_noinline ( & h -> cabac , & state [ 2 + intra_slice ] )"	55:8:1095:1168	1721000	1	True				
ANR	1721226	AssignmentExpression	"mb_type += 4 + 4 * get_cabac_noinline ( & h -> cabac , & state [ 2 + intra_slice ] )"		1721000	0		+=			
ANR	1721227	Identifier	mb_type		1721000	0					
ANR	1721228	AdditiveExpression	"4 + 4 * get_cabac_noinline ( & h -> cabac , & state [ 2 + intra_slice ] )"		1721000	1		+			
ANR	1721229	PrimaryExpression	4		1721000	0					
ANR	1721230	MultiplicativeExpression	"4 * get_cabac_noinline ( & h -> cabac , & state [ 2 + intra_slice ] )"		1721000	1		*			
ANR	1721231	PrimaryExpression	4		1721000	0					
ANR	1721232	CallExpression	"get_cabac_noinline ( & h -> cabac , & state [ 2 + intra_slice ] )"		1721000	1					
ANR	1721233	Callee	get_cabac_noinline		1721000	0					
ANR	1721234	Identifier	get_cabac_noinline		1721000	0					
ANR	1721235	ArgumentList	& h -> cabac		1721000	1					
ANR	1721236	Argument	& h -> cabac		1721000	0					
ANR	1721237	UnaryOperationExpression	& h -> cabac		1721000	0					
ANR	1721238	UnaryOperator	&		1721000	0					
ANR	1721239	PtrMemberAccess	h -> cabac		1721000	1					
ANR	1721240	Identifier	h		1721000	0					
ANR	1721241	Identifier	cabac		1721000	1					
ANR	1721242	Argument	& state [ 2 + intra_slice ]		1721000	1					
ANR	1721243	UnaryOperationExpression	& state [ 2 + intra_slice ]		1721000	0					
ANR	1721244	UnaryOperator	&		1721000	0					
ANR	1721245	ArrayIndexing	state [ 2 + intra_slice ]		1721000	1					
ANR	1721246	Identifier	state		1721000	0					
ANR	1721247	AdditiveExpression	2 + intra_slice		1721000	1		+			
ANR	1721248	PrimaryExpression	2		1721000	0					
ANR	1721249	Identifier	intra_slice		1721000	1					
ANR	1721250	ExpressionStatement	"mb_type += 2 * get_cabac_noinline ( & h -> cabac , & state [ 3 + intra_slice ] )"	57:4:1175:1244	1721000	7	True				
ANR	1721251	AssignmentExpression	"mb_type += 2 * get_cabac_noinline ( & h -> cabac , & state [ 3 + intra_slice ] )"		1721000	0		+=			
ANR	1721252	Identifier	mb_type		1721000	0					
ANR	1721253	MultiplicativeExpression	"2 * get_cabac_noinline ( & h -> cabac , & state [ 3 + intra_slice ] )"		1721000	1		*			
ANR	1721254	PrimaryExpression	2		1721000	0					
ANR	1721255	CallExpression	"get_cabac_noinline ( & h -> cabac , & state [ 3 + intra_slice ] )"		1721000	1					
ANR	1721256	Callee	get_cabac_noinline		1721000	0					
ANR	1721257	Identifier	get_cabac_noinline		1721000	0					
ANR	1721258	ArgumentList	& h -> cabac		1721000	1					
ANR	1721259	Argument	& h -> cabac		1721000	0					
ANR	1721260	UnaryOperationExpression	& h -> cabac		1721000	0					
ANR	1721261	UnaryOperator	&		1721000	0					
ANR	1721262	PtrMemberAccess	h -> cabac		1721000	1					
ANR	1721263	Identifier	h		1721000	0					
ANR	1721264	Identifier	cabac		1721000	1					
ANR	1721265	Argument	& state [ 3 + intra_slice ]		1721000	1					
ANR	1721266	UnaryOperationExpression	& state [ 3 + intra_slice ]		1721000	0					
ANR	1721267	UnaryOperator	&		1721000	0					
ANR	1721268	ArrayIndexing	state [ 3 + intra_slice ]		1721000	1					
ANR	1721269	Identifier	state		1721000	0					
ANR	1721270	AdditiveExpression	3 + intra_slice		1721000	1		+			
ANR	1721271	PrimaryExpression	3		1721000	0					
ANR	1721272	Identifier	intra_slice		1721000	1					
ANR	1721273	ExpressionStatement	"mb_type += 1 * get_cabac_noinline ( & h -> cabac , & state [ 3 + 2 * intra_slice ] )"	59:4:1251:1322	1721000	8	True				
ANR	1721274	AssignmentExpression	"mb_type += 1 * get_cabac_noinline ( & h -> cabac , & state [ 3 + 2 * intra_slice ] )"		1721000	0		+=			
ANR	1721275	Identifier	mb_type		1721000	0					
ANR	1721276	MultiplicativeExpression	"1 * get_cabac_noinline ( & h -> cabac , & state [ 3 + 2 * intra_slice ] )"		1721000	1		*			
ANR	1721277	PrimaryExpression	1		1721000	0					
ANR	1721278	CallExpression	"get_cabac_noinline ( & h -> cabac , & state [ 3 + 2 * intra_slice ] )"		1721000	1					
ANR	1721279	Callee	get_cabac_noinline		1721000	0					
ANR	1721280	Identifier	get_cabac_noinline		1721000	0					
ANR	1721281	ArgumentList	& h -> cabac		1721000	1					
ANR	1721282	Argument	& h -> cabac		1721000	0					
ANR	1721283	UnaryOperationExpression	& h -> cabac		1721000	0					
ANR	1721284	UnaryOperator	&		1721000	0					
ANR	1721285	PtrMemberAccess	h -> cabac		1721000	1					
ANR	1721286	Identifier	h		1721000	0					
ANR	1721287	Identifier	cabac		1721000	1					
ANR	1721288	Argument	& state [ 3 + 2 * intra_slice ]		1721000	1					
ANR	1721289	UnaryOperationExpression	& state [ 3 + 2 * intra_slice ]		1721000	0					
ANR	1721290	UnaryOperator	&		1721000	0					
ANR	1721291	ArrayIndexing	state [ 3 + 2 * intra_slice ]		1721000	1					
ANR	1721292	Identifier	state		1721000	0					
ANR	1721293	AdditiveExpression	3 + 2 * intra_slice		1721000	1		+			
ANR	1721294	PrimaryExpression	3		1721000	0					
ANR	1721295	MultiplicativeExpression	2 * intra_slice		1721000	1		*			
ANR	1721296	PrimaryExpression	2		1721000	0					
ANR	1721297	Identifier	intra_slice		1721000	1					
ANR	1721298	ReturnStatement	return mb_type ;	61:4:1329:1343	1721000	9	True				
ANR	1721299	Identifier	mb_type		1721000	0					
ANR	1721300	ReturnType	static int		1721000	1					
ANR	1721301	Identifier	decode_cabac_intra_mb_type		1721000	2					
ANR	1721302	ParameterList	"H264Context * h , int ctx_base , int intra_slice"		1721000	3					
ANR	1721303	Parameter	H264Context * h	1:38:38:51	1721000	0	True				
ANR	1721304	ParameterType	H264Context *		1721000	0					
ANR	1721305	Identifier	h		1721000	1					
ANR	1721306	Parameter	int ctx_base	1:54:54:65	1721000	1	True				
ANR	1721307	ParameterType	int		1721000	0					
ANR	1721308	Identifier	ctx_base		1721000	1					
ANR	1721309	Parameter	int intra_slice	1:68:68:82	1721000	2	True				
ANR	1721310	ParameterType	int		1721000	0					
ANR	1721311	Identifier	intra_slice		1721000	1					
ANR	1721312	CFGEntryNode	ENTRY		1721000		True				
ANR	1721313	CFGExitNode	EXIT		1721000		True				
ANR	1721314	Symbol	mbb_xy		1721000						
ANR	1721315	Symbol	get_cabac_noinline		1721000						
ANR	1721316	Symbol	* mbb_xy		1721000						
ANR	1721317	Symbol	& h -> cabac		1721000						
ANR	1721318	Symbol	get_cabac_terminate		1721000						
ANR	1721319	Symbol	* h -> slice_table		1721000						
ANR	1721320	Symbol	s -> current_picture . mb_type		1721000						
ANR	1721321	Symbol	s -> current_picture		1721000						
ANR	1721322	Symbol	h -> cabac_state		1721000						
ANR	1721323	Symbol	h -> slice_table		1721000						
ANR	1721324	Symbol	mb_type		1721000						
ANR	1721325	Symbol	* * s		1721000						
ANR	1721326	Symbol	state		1721000						
ANR	1721327	Symbol	h -> left_mb_xy		1721000						
ANR	1721328	Symbol	* mba_xy		1721000						
ANR	1721329	Symbol	* * h		1721000						
ANR	1721330	Symbol	h -> top_mb_xy		1721000						
ANR	1721331	Symbol	mba_xy		1721000						
ANR	1721332	Symbol	ctx		1721000						
ANR	1721333	Symbol	* s -> current_picture		1721000						
ANR	1721334	Symbol	IS_INTRA4x4		1721000						
ANR	1721335	Symbol	h		1721000						
ANR	1721336	Symbol	* h		1721000						
ANR	1721337	Symbol	& h -> s		1721000						
ANR	1721338	Symbol	s		1721000						
ANR	1721339	Symbol	intra_slice		1721000						
ANR	1721340	Symbol	* s -> current_picture . mb_type		1721000						
ANR	1721341	Symbol	ctx_base		1721000						
ANR	1721342	Symbol	* s		1721000						
ANR	1721343	Symbol	* h -> left_mb_xy		1721000						
ANR	1721344	Symbol	h -> slice_num		1721000						
