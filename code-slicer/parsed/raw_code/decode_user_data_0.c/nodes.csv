command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2100848	File	/home/p4ultr4n/workplace/ReVeal/raw_code/decode_user_data_0.c								
ANR	2100849	Function	decode_user_data	1:0:0:1728							
ANR	2100850	FunctionDef	"decode_user_data (Mpeg4DecContext * ctx , GetBitContext * gb)"		2100849	0					
ANR	2100851	CompoundStatement		3:0:70:1728	2100849	0					
ANR	2100852	IdentifierDeclStatement	MpegEncContext * s = & ctx -> m ;	5:4:77:104	2100849	0	True				
ANR	2100853	IdentifierDecl	* s = & ctx -> m		2100849	0					
ANR	2100854	IdentifierDeclType	MpegEncContext *		2100849	0					
ANR	2100855	Identifier	s		2100849	1					
ANR	2100856	AssignmentExpression	* s = & ctx -> m		2100849	2		=			
ANR	2100857	Identifier	s		2100849	0					
ANR	2100858	UnaryOperationExpression	& ctx -> m		2100849	1					
ANR	2100859	UnaryOperator	&		2100849	0					
ANR	2100860	PtrMemberAccess	ctx -> m		2100849	1					
ANR	2100861	Identifier	ctx		2100849	0					
ANR	2100862	Identifier	m		2100849	1					
ANR	2100863	IdentifierDeclStatement	char buf [ 256 ] ;	7:4:111:124	2100849	1	True				
ANR	2100864	IdentifierDecl	buf [ 256 ]		2100849	0					
ANR	2100865	IdentifierDeclType	char [ 256 ]		2100849	0					
ANR	2100866	Identifier	buf		2100849	1					
ANR	2100867	PrimaryExpression	256		2100849	2					
ANR	2100868	IdentifierDeclStatement	int i ;	9:4:131:136	2100849	2	True				
ANR	2100869	IdentifierDecl	i		2100849	0					
ANR	2100870	IdentifierDeclType	int		2100849	0					
ANR	2100871	Identifier	i		2100849	1					
ANR	2100872	IdentifierDeclStatement	int e ;	11:4:143:148	2100849	3	True				
ANR	2100873	IdentifierDecl	e		2100849	0					
ANR	2100874	IdentifierDeclType	int		2100849	0					
ANR	2100875	Identifier	e		2100849	1					
ANR	2100876	IdentifierDeclStatement	"int ver = 0 , build = 0 , ver2 = 0 , ver3 = 0 ;"	13:4:155:197	2100849	4	True				
ANR	2100877	IdentifierDecl	ver = 0		2100849	0					
ANR	2100878	IdentifierDeclType	int		2100849	0					
ANR	2100879	Identifier	ver		2100849	1					
ANR	2100880	AssignmentExpression	ver = 0		2100849	2		=			
ANR	2100881	Identifier	ver		2100849	0					
ANR	2100882	PrimaryExpression	0		2100849	1					
ANR	2100883	IdentifierDecl	build = 0		2100849	1					
ANR	2100884	IdentifierDeclType	int		2100849	0					
ANR	2100885	Identifier	build		2100849	1					
ANR	2100886	AssignmentExpression	build = 0		2100849	2		=			
ANR	2100887	Identifier	build		2100849	0					
ANR	2100888	PrimaryExpression	0		2100849	1					
ANR	2100889	IdentifierDecl	ver2 = 0		2100849	2					
ANR	2100890	IdentifierDeclType	int		2100849	0					
ANR	2100891	Identifier	ver2		2100849	1					
ANR	2100892	AssignmentExpression	ver2 = 0		2100849	2		=			
ANR	2100893	Identifier	ver2		2100849	0					
ANR	2100894	PrimaryExpression	0		2100849	1					
ANR	2100895	IdentifierDecl	ver3 = 0		2100849	3					
ANR	2100896	IdentifierDeclType	int		2100849	0					
ANR	2100897	Identifier	ver3		2100849	1					
ANR	2100898	AssignmentExpression	ver3 = 0		2100849	2		=			
ANR	2100899	Identifier	ver3		2100849	0					
ANR	2100900	PrimaryExpression	0		2100849	1					
ANR	2100901	IdentifierDeclStatement	char last ;	15:4:204:213	2100849	5	True				
ANR	2100902	IdentifierDecl	last		2100849	0					
ANR	2100903	IdentifierDeclType	char		2100849	0					
ANR	2100904	Identifier	last		2100849	1					
ANR	2100905	ForStatement	for ( i = 0 ; i < 255 && get_bits_count ( gb ) < gb -> size_in_bits ; i ++ )		2100849	6					
ANR	2100906	ForInit	i = 0 ;	19:9:227:232	2100849	0	True				
ANR	2100907	AssignmentExpression	i = 0		2100849	0		=			
ANR	2100908	Identifier	i		2100849	0					
ANR	2100909	PrimaryExpression	0		2100849	1					
ANR	2100910	Condition	i < 255 && get_bits_count ( gb ) < gb -> size_in_bits	19:16:234:281	2100849	1	True				
ANR	2100911	AndExpression	i < 255 && get_bits_count ( gb ) < gb -> size_in_bits		2100849	0		&&			
ANR	2100912	RelationalExpression	i < 255		2100849	0		<			
ANR	2100913	Identifier	i		2100849	0					
ANR	2100914	PrimaryExpression	255		2100849	1					
ANR	2100915	RelationalExpression	get_bits_count ( gb ) < gb -> size_in_bits		2100849	1		<			
ANR	2100916	CallExpression	get_bits_count ( gb )		2100849	0					
ANR	2100917	Callee	get_bits_count		2100849	0					
ANR	2100918	Identifier	get_bits_count		2100849	0					
ANR	2100919	ArgumentList	gb		2100849	1					
ANR	2100920	Argument	gb		2100849	0					
ANR	2100921	Identifier	gb		2100849	0					
ANR	2100922	PtrMemberAccess	gb -> size_in_bits		2100849	1					
ANR	2100923	Identifier	gb		2100849	0					
ANR	2100924	Identifier	size_in_bits		2100849	1					
ANR	2100925	PostIncDecOperationExpression	i ++	19:66:284:286	2100849	2	True				
ANR	2100926	Identifier	i		2100849	0					
ANR	2100927	IncDec	++		2100849	1					
ANR	2100928	CompoundStatement		17:71:218:218	2100849	3					
ANR	2100929	IfStatement	"if ( show_bits ( gb , 23 ) == 0 )"		2100849	0					
ANR	2100930	Condition	"show_bits ( gb , 23 ) == 0"	21:12:304:325	2100849	0	True				
ANR	2100931	EqualityExpression	"show_bits ( gb , 23 ) == 0"		2100849	0		==			
ANR	2100932	CallExpression	"show_bits ( gb , 23 )"		2100849	0					
ANR	2100933	Callee	show_bits		2100849	0					
ANR	2100934	Identifier	show_bits		2100849	0					
ANR	2100935	ArgumentList	gb		2100849	1					
ANR	2100936	Argument	gb		2100849	0					
ANR	2100937	Identifier	gb		2100849	0					
ANR	2100938	Argument	23		2100849	1					
ANR	2100939	PrimaryExpression	23		2100849	0					
ANR	2100940	PrimaryExpression	0		2100849	1					
ANR	2100941	BreakStatement	break ;	23:12:341:346	2100849	1	True				
ANR	2100942	ExpressionStatement	"buf [ i ] = get_bits ( gb , 8 )"	25:8:357:381	2100849	1	True				
ANR	2100943	AssignmentExpression	"buf [ i ] = get_bits ( gb , 8 )"		2100849	0		=			
ANR	2100944	ArrayIndexing	buf [ i ]		2100849	0					
ANR	2100945	Identifier	buf		2100849	0					
ANR	2100946	Identifier	i		2100849	1					
ANR	2100947	CallExpression	"get_bits ( gb , 8 )"		2100849	1					
ANR	2100948	Callee	get_bits		2100849	0					
ANR	2100949	Identifier	get_bits		2100849	0					
ANR	2100950	ArgumentList	gb		2100849	1					
ANR	2100951	Argument	gb		2100849	0					
ANR	2100952	Identifier	gb		2100849	0					
ANR	2100953	Argument	8		2100849	1					
ANR	2100954	PrimaryExpression	8		2100849	0					
ANR	2100955	ExpressionStatement	buf [ i ] = 0	29:4:395:405	2100849	7	True				
ANR	2100956	AssignmentExpression	buf [ i ] = 0		2100849	0		=			
ANR	2100957	ArrayIndexing	buf [ i ]		2100849	0					
ANR	2100958	Identifier	buf		2100849	0					
ANR	2100959	Identifier	i		2100849	1					
ANR	2100960	PrimaryExpression	0		2100849	1					
ANR	2100961	ExpressionStatement	"e = sscanf ( buf , ""DivX%dBuild%d%c"" , & ver , & build , & last )"	35:4:440:495	2100849	8	True				
ANR	2100962	AssignmentExpression	"e = sscanf ( buf , ""DivX%dBuild%d%c"" , & ver , & build , & last )"		2100849	0		=			
ANR	2100963	Identifier	e		2100849	0					
ANR	2100964	CallExpression	"sscanf ( buf , ""DivX%dBuild%d%c"" , & ver , & build , & last )"		2100849	1					
ANR	2100965	Callee	sscanf		2100849	0					
ANR	2100966	Identifier	sscanf		2100849	0					
ANR	2100967	ArgumentList	buf		2100849	1					
ANR	2100968	Argument	buf		2100849	0					
ANR	2100969	Identifier	buf		2100849	0					
ANR	2100970	Argument	"""DivX%dBuild%d%c"""		2100849	1					
ANR	2100971	PrimaryExpression	"""DivX%dBuild%d%c"""		2100849	0					
ANR	2100972	Argument	& ver		2100849	2					
ANR	2100973	UnaryOperationExpression	& ver		2100849	0					
ANR	2100974	UnaryOperator	&		2100849	0					
ANR	2100975	Identifier	ver		2100849	1					
ANR	2100976	Argument	& build		2100849	3					
ANR	2100977	UnaryOperationExpression	& build		2100849	0					
ANR	2100978	UnaryOperator	&		2100849	0					
ANR	2100979	Identifier	build		2100849	1					
ANR	2100980	Argument	& last		2100849	4					
ANR	2100981	UnaryOperationExpression	& last		2100849	0					
ANR	2100982	UnaryOperator	&		2100849	0					
ANR	2100983	Identifier	last		2100849	1					
ANR	2100984	IfStatement	if ( e < 2 )		2100849	9					
ANR	2100985	Condition	e < 2	37:8:506:510	2100849	0	True				
ANR	2100986	RelationalExpression	e < 2		2100849	0		<			
ANR	2100987	Identifier	e		2100849	0					
ANR	2100988	PrimaryExpression	2		2100849	1					
ANR	2100989	ExpressionStatement	"e = sscanf ( buf , ""DivX%db%d%c"" , & ver , & build , & last )"	39:8:522:573	2100849	1	True				
ANR	2100990	AssignmentExpression	"e = sscanf ( buf , ""DivX%db%d%c"" , & ver , & build , & last )"		2100849	0		=			
ANR	2100991	Identifier	e		2100849	0					
ANR	2100992	CallExpression	"sscanf ( buf , ""DivX%db%d%c"" , & ver , & build , & last )"		2100849	1					
ANR	2100993	Callee	sscanf		2100849	0					
ANR	2100994	Identifier	sscanf		2100849	0					
ANR	2100995	ArgumentList	buf		2100849	1					
ANR	2100996	Argument	buf		2100849	0					
ANR	2100997	Identifier	buf		2100849	0					
ANR	2100998	Argument	"""DivX%db%d%c"""		2100849	1					
ANR	2100999	PrimaryExpression	"""DivX%db%d%c"""		2100849	0					
ANR	2101000	Argument	& ver		2100849	2					
ANR	2101001	UnaryOperationExpression	& ver		2100849	0					
ANR	2101002	UnaryOperator	&		2100849	0					
ANR	2101003	Identifier	ver		2100849	1					
ANR	2101004	Argument	& build		2100849	3					
ANR	2101005	UnaryOperationExpression	& build		2100849	0					
ANR	2101006	UnaryOperator	&		2100849	0					
ANR	2101007	Identifier	build		2100849	1					
ANR	2101008	Argument	& last		2100849	4					
ANR	2101009	UnaryOperationExpression	& last		2100849	0					
ANR	2101010	UnaryOperator	&		2100849	0					
ANR	2101011	Identifier	last		2100849	1					
ANR	2101012	IfStatement	if ( e >= 2 )		2100849	10					
ANR	2101013	Condition	e >= 2	41:8:584:589	2100849	0	True				
ANR	2101014	RelationalExpression	e >= 2		2100849	0		>=			
ANR	2101015	Identifier	e		2100849	0					
ANR	2101016	PrimaryExpression	2		2100849	1					
ANR	2101017	CompoundStatement		39:16:521:521	2100849	1					
ANR	2101018	ExpressionStatement	ctx -> divx_version = ver	43:8:603:626	2100849	0	True				
ANR	2101019	AssignmentExpression	ctx -> divx_version = ver		2100849	0		=			
ANR	2101020	PtrMemberAccess	ctx -> divx_version		2100849	0					
ANR	2101021	Identifier	ctx		2100849	0					
ANR	2101022	Identifier	divx_version		2100849	1					
ANR	2101023	Identifier	ver		2100849	1					
ANR	2101024	ExpressionStatement	ctx -> divx_build = build	45:8:637:662	2100849	1	True				
ANR	2101025	AssignmentExpression	ctx -> divx_build = build		2100849	0		=			
ANR	2101026	PtrMemberAccess	ctx -> divx_build		2100849	0					
ANR	2101027	Identifier	ctx		2100849	0					
ANR	2101028	Identifier	divx_build		2100849	1					
ANR	2101029	Identifier	build		2100849	1					
ANR	2101030	ExpressionStatement	s -> divx_packed = e == 3 && last == 'p'	47:8:673:712	2100849	2	True				
ANR	2101031	AssignmentExpression	s -> divx_packed = e == 3 && last == 'p'		2100849	0		=			
ANR	2101032	PtrMemberAccess	s -> divx_packed		2100849	0					
ANR	2101033	Identifier	s		2100849	0					
ANR	2101034	Identifier	divx_packed		2100849	1					
ANR	2101035	AndExpression	e == 3 && last == 'p'		2100849	1		&&			
ANR	2101036	EqualityExpression	e == 3		2100849	0		==			
ANR	2101037	Identifier	e		2100849	0					
ANR	2101038	PrimaryExpression	3		2100849	1					
ANR	2101039	EqualityExpression	last == 'p'		2100849	1		==			
ANR	2101040	Identifier	last		2100849	0					
ANR	2101041	PrimaryExpression	'p'		2100849	1					
ANR	2101042	ExpressionStatement	"e = sscanf ( buf , ""FFmpe%*[^b]b%d"" , & build ) + 3"	55:4:760:805	2100849	11	True				
ANR	2101043	AssignmentExpression	"e = sscanf ( buf , ""FFmpe%*[^b]b%d"" , & build ) + 3"		2100849	0		=			
ANR	2101044	Identifier	e		2100849	0					
ANR	2101045	AdditiveExpression	"sscanf ( buf , ""FFmpe%*[^b]b%d"" , & build ) + 3"		2100849	1		+			
ANR	2101046	CallExpression	"sscanf ( buf , ""FFmpe%*[^b]b%d"" , & build )"		2100849	0					
ANR	2101047	Callee	sscanf		2100849	0					
ANR	2101048	Identifier	sscanf		2100849	0					
ANR	2101049	ArgumentList	buf		2100849	1					
ANR	2101050	Argument	buf		2100849	0					
ANR	2101051	Identifier	buf		2100849	0					
ANR	2101052	Argument	"""FFmpe%*[^b]b%d"""		2100849	1					
ANR	2101053	PrimaryExpression	"""FFmpe%*[^b]b%d"""		2100849	0					
ANR	2101054	Argument	& build		2100849	2					
ANR	2101055	UnaryOperationExpression	& build		2100849	0					
ANR	2101056	UnaryOperator	&		2100849	0					
ANR	2101057	Identifier	build		2100849	1					
ANR	2101058	PrimaryExpression	3		2100849	1					
ANR	2101059	IfStatement	if ( e != 4 )		2100849	12					
ANR	2101060	Condition	e != 4	57:8:816:821	2100849	0	True				
ANR	2101061	EqualityExpression	e != 4		2100849	0		!=			
ANR	2101062	Identifier	e		2100849	0					
ANR	2101063	PrimaryExpression	4		2100849	1					
ANR	2101064	ExpressionStatement	"e = sscanf ( buf , ""FFmpeg v%d.%d.%d / libavcodec build: %d"" , & ver , & ver2 , & ver3 , & build )"	59:8:833:919	2100849	1	True				
ANR	2101065	AssignmentExpression	"e = sscanf ( buf , ""FFmpeg v%d.%d.%d / libavcodec build: %d"" , & ver , & ver2 , & ver3 , & build )"		2100849	0		=			
ANR	2101066	Identifier	e		2100849	0					
ANR	2101067	CallExpression	"sscanf ( buf , ""FFmpeg v%d.%d.%d / libavcodec build: %d"" , & ver , & ver2 , & ver3 , & build )"		2100849	1					
ANR	2101068	Callee	sscanf		2100849	0					
ANR	2101069	Identifier	sscanf		2100849	0					
ANR	2101070	ArgumentList	buf		2100849	1					
ANR	2101071	Argument	buf		2100849	0					
ANR	2101072	Identifier	buf		2100849	0					
ANR	2101073	Argument	"""FFmpeg v%d.%d.%d / libavcodec build: %d"""		2100849	1					
ANR	2101074	PrimaryExpression	"""FFmpeg v%d.%d.%d / libavcodec build: %d"""		2100849	0					
ANR	2101075	Argument	& ver		2100849	2					
ANR	2101076	UnaryOperationExpression	& ver		2100849	0					
ANR	2101077	UnaryOperator	&		2100849	0					
ANR	2101078	Identifier	ver		2100849	1					
ANR	2101079	Argument	& ver2		2100849	3					
ANR	2101080	UnaryOperationExpression	& ver2		2100849	0					
ANR	2101081	UnaryOperator	&		2100849	0					
ANR	2101082	Identifier	ver2		2100849	1					
ANR	2101083	Argument	& ver3		2100849	4					
ANR	2101084	UnaryOperationExpression	& ver3		2100849	0					
ANR	2101085	UnaryOperator	&		2100849	0					
ANR	2101086	Identifier	ver3		2100849	1					
ANR	2101087	Argument	& build		2100849	5					
ANR	2101088	UnaryOperationExpression	& build		2100849	0					
ANR	2101089	UnaryOperator	&		2100849	0					
ANR	2101090	Identifier	build		2100849	1					
ANR	2101091	IfStatement	if ( e != 4 )		2100849	13					
ANR	2101092	Condition	e != 4	61:8:930:935	2100849	0	True				
ANR	2101093	EqualityExpression	e != 4		2100849	0		!=			
ANR	2101094	Identifier	e		2100849	0					
ANR	2101095	PrimaryExpression	4		2100849	1					
ANR	2101096	CompoundStatement		59:16:867:867	2100849	1					
ANR	2101097	ExpressionStatement	"e = sscanf ( buf , ""Lavc%d.%d.%d"" , & ver , & ver2 , & ver3 ) + 1"	63:8:949:1004	2100849	0	True				
ANR	2101098	AssignmentExpression	"e = sscanf ( buf , ""Lavc%d.%d.%d"" , & ver , & ver2 , & ver3 ) + 1"		2100849	0		=			
ANR	2101099	Identifier	e		2100849	0					
ANR	2101100	AdditiveExpression	"sscanf ( buf , ""Lavc%d.%d.%d"" , & ver , & ver2 , & ver3 ) + 1"		2100849	1		+			
ANR	2101101	CallExpression	"sscanf ( buf , ""Lavc%d.%d.%d"" , & ver , & ver2 , & ver3 )"		2100849	0					
ANR	2101102	Callee	sscanf		2100849	0					
ANR	2101103	Identifier	sscanf		2100849	0					
ANR	2101104	ArgumentList	buf		2100849	1					
ANR	2101105	Argument	buf		2100849	0					
ANR	2101106	Identifier	buf		2100849	0					
ANR	2101107	Argument	"""Lavc%d.%d.%d"""		2100849	1					
ANR	2101108	PrimaryExpression	"""Lavc%d.%d.%d"""		2100849	0					
ANR	2101109	Argument	& ver		2100849	2					
ANR	2101110	UnaryOperationExpression	& ver		2100849	0					
ANR	2101111	UnaryOperator	&		2100849	0					
ANR	2101112	Identifier	ver		2100849	1					
ANR	2101113	Argument	& ver2		2100849	3					
ANR	2101114	UnaryOperationExpression	& ver2		2100849	0					
ANR	2101115	UnaryOperator	&		2100849	0					
ANR	2101116	Identifier	ver2		2100849	1					
ANR	2101117	Argument	& ver3		2100849	4					
ANR	2101118	UnaryOperationExpression	& ver3		2100849	0					
ANR	2101119	UnaryOperator	&		2100849	0					
ANR	2101120	Identifier	ver3		2100849	1					
ANR	2101121	PrimaryExpression	1		2100849	1					
ANR	2101122	IfStatement	if ( e > 1 )		2100849	1					
ANR	2101123	Condition	e > 1	65:12:1019:1023	2100849	0	True				
ANR	2101124	RelationalExpression	e > 1		2100849	0		>			
ANR	2101125	Identifier	e		2100849	0					
ANR	2101126	PrimaryExpression	1		2100849	1					
ANR	2101127	CompoundStatement		63:19:955:955	2100849	1					
ANR	2101128	IfStatement	if ( ver > 0xFF || ver2 > 0xFF || ver3 > 0xFF )		2100849	0					
ANR	2101129	Condition	ver > 0xFF || ver2 > 0xFF || ver3 > 0xFF	67:16:1045:1084	2100849	0	True				
ANR	2101130	OrExpression	ver > 0xFF || ver2 > 0xFF || ver3 > 0xFF		2100849	0		||			
ANR	2101131	RelationalExpression	ver > 0xFF		2100849	0		>			
ANR	2101132	Identifier	ver		2100849	0					
ANR	2101133	PrimaryExpression	0xFF		2100849	1					
ANR	2101134	OrExpression	ver2 > 0xFF || ver3 > 0xFF		2100849	1		||			
ANR	2101135	RelationalExpression	ver2 > 0xFF		2100849	0		>			
ANR	2101136	Identifier	ver2		2100849	0					
ANR	2101137	PrimaryExpression	0xFF		2100849	1					
ANR	2101138	RelationalExpression	ver3 > 0xFF		2100849	1		>			
ANR	2101139	Identifier	ver3		2100849	0					
ANR	2101140	PrimaryExpression	0xFF		2100849	1					
ANR	2101141	CompoundStatement		65:58:1016:1016	2100849	1					
ANR	2101142	Statement	av_log	69:16:1106:1111	2100849	0	True				
ANR	2101143	Statement	(	69:22:1112:1112	2100849	1	True				
ANR	2101144	Statement	s	69:23:1113:1113	2100849	2	True				
ANR	2101145	Statement	->	69:24:1114:1115	2100849	3	True				
ANR	2101146	Statement	avctx	69:26:1116:1120	2100849	4	True				
ANR	2101147	Statement	","	69:31:1121:1121	2100849	5	True				
ANR	2101148	Statement	AV_LOG_WARNING	69:33:1123:1136	2100849	6	True				
ANR	2101149	Statement	","	69:47:1137:1137	2100849	7	True				
ANR	2101150	Statement	"""Unknown Lavc version string encountered, %d.%d.%d; """	71:21:1161:1213	2100849	8	True				
ANR	2101151	Statement	"""clamping sub-version values to 8-bits.\\n"""	73:21:1237:1278	2100849	9	True				
ANR	2101152	Statement	","	73:63:1279:1279	2100849	10	True				
ANR	2101153	Statement	ver	75:21:1303:1305	2100849	11	True				
ANR	2101154	Statement	","	75:24:1306:1306	2100849	12	True				
ANR	2101155	Statement	ver2	75:26:1308:1311	2100849	13	True				
ANR	2101156	Statement	","	75:30:1312:1312	2100849	14	True				
ANR	2101157	Statement	ver3	75:32:1314:1317	2100849	15	True				
ANR	2101158	Statement	)	75:36:1318:1318	2100849	16	True				
ANR	2101159	ExpressionStatement		75:37:1319:1319	2100849	17	True				
ANR	2101160	ExpressionStatement	build = ( ( ver & 0xFF ) << 16 ) + ( ( ver2 & 0xFF ) << 8 ) + ( ver3 & 0xFF )	79:12:1349:1416	2100849	1	True				
ANR	2101161	AssignmentExpression	build = ( ( ver & 0xFF ) << 16 ) + ( ( ver2 & 0xFF ) << 8 ) + ( ver3 & 0xFF )		2100849	0		=			
ANR	2101162	Identifier	build		2100849	0					
ANR	2101163	AdditiveExpression	( ( ver & 0xFF ) << 16 ) + ( ( ver2 & 0xFF ) << 8 ) + ( ver3 & 0xFF )		2100849	1		+			
ANR	2101164	ShiftExpression	( ver & 0xFF ) << 16		2100849	0		<<			
ANR	2101165	BitAndExpression	ver & 0xFF		2100849	0		&			
ANR	2101166	Identifier	ver		2100849	0					
ANR	2101167	PrimaryExpression	0xFF		2100849	1					
ANR	2101168	PrimaryExpression	16		2100849	1					
ANR	2101169	AdditiveExpression	( ( ver2 & 0xFF ) << 8 ) + ( ver3 & 0xFF )		2100849	1		+			
ANR	2101170	ShiftExpression	( ver2 & 0xFF ) << 8		2100849	0		<<			
ANR	2101171	BitAndExpression	ver2 & 0xFF		2100849	0		&			
ANR	2101172	Identifier	ver2		2100849	0					
ANR	2101173	PrimaryExpression	0xFF		2100849	1					
ANR	2101174	PrimaryExpression	8		2100849	1					
ANR	2101175	BitAndExpression	ver3 & 0xFF		2100849	1		&			
ANR	2101176	Identifier	ver3		2100849	0					
ANR	2101177	PrimaryExpression	0xFF		2100849	1					
ANR	2101178	IfStatement	if ( e != 4 )		2100849	14					
ANR	2101179	Condition	e != 4	85:8:1445:1450	2100849	0	True				
ANR	2101180	EqualityExpression	e != 4		2100849	0		!=			
ANR	2101181	Identifier	e		2100849	0					
ANR	2101182	PrimaryExpression	4		2100849	1					
ANR	2101183	CompoundStatement		83:16:1382:1382	2100849	1					
ANR	2101184	IfStatement	"if ( strcmp ( buf , ""ffmpeg"" ) == 0 )"		2100849	0					
ANR	2101185	Condition	"strcmp ( buf , ""ffmpeg"" ) == 0"	87:12:1468:1493	2100849	0	True				
ANR	2101186	EqualityExpression	"strcmp ( buf , ""ffmpeg"" ) == 0"		2100849	0		==			
ANR	2101187	CallExpression	"strcmp ( buf , ""ffmpeg"" )"		2100849	0					
ANR	2101188	Callee	strcmp		2100849	0					
ANR	2101189	Identifier	strcmp		2100849	0					
ANR	2101190	ArgumentList	buf		2100849	1					
ANR	2101191	Argument	buf		2100849	0					
ANR	2101192	Identifier	buf		2100849	0					
ANR	2101193	Argument	"""ffmpeg"""		2100849	1					
ANR	2101194	PrimaryExpression	"""ffmpeg"""		2100849	0					
ANR	2101195	PrimaryExpression	0		2100849	1					
ANR	2101196	ExpressionStatement	ctx -> lavc_build = 4600	89:12:1509:1531	2100849	1	True				
ANR	2101197	AssignmentExpression	ctx -> lavc_build = 4600		2100849	0		=			
ANR	2101198	PtrMemberAccess	ctx -> lavc_build		2100849	0					
ANR	2101199	Identifier	ctx		2100849	0					
ANR	2101200	Identifier	lavc_build		2100849	1					
ANR	2101201	PrimaryExpression	4600		2100849	1					
ANR	2101202	IfStatement	if ( e == 4 )		2100849	15					
ANR	2101203	Condition	e == 4	93:8:1549:1554	2100849	0	True				
ANR	2101204	EqualityExpression	e == 4		2100849	0		==			
ANR	2101205	Identifier	e		2100849	0					
ANR	2101206	PrimaryExpression	4		2100849	1					
ANR	2101207	ExpressionStatement	ctx -> lavc_build = build	95:8:1566:1589	2100849	1	True				
ANR	2101208	AssignmentExpression	ctx -> lavc_build = build		2100849	0		=			
ANR	2101209	PtrMemberAccess	ctx -> lavc_build		2100849	0					
ANR	2101210	Identifier	ctx		2100849	0					
ANR	2101211	Identifier	lavc_build		2100849	1					
ANR	2101212	Identifier	build		2100849	1					
ANR	2101213	ExpressionStatement	"e = sscanf ( buf , ""XviD%d"" , & build )"	101:4:1624:1657	2100849	16	True				
ANR	2101214	AssignmentExpression	"e = sscanf ( buf , ""XviD%d"" , & build )"		2100849	0		=			
ANR	2101215	Identifier	e		2100849	0					
ANR	2101216	CallExpression	"sscanf ( buf , ""XviD%d"" , & build )"		2100849	1					
ANR	2101217	Callee	sscanf		2100849	0					
ANR	2101218	Identifier	sscanf		2100849	0					
ANR	2101219	ArgumentList	buf		2100849	1					
ANR	2101220	Argument	buf		2100849	0					
ANR	2101221	Identifier	buf		2100849	0					
ANR	2101222	Argument	"""XviD%d"""		2100849	1					
ANR	2101223	PrimaryExpression	"""XviD%d"""		2100849	0					
ANR	2101224	Argument	& build		2100849	2					
ANR	2101225	UnaryOperationExpression	& build		2100849	0					
ANR	2101226	UnaryOperator	&		2100849	0					
ANR	2101227	Identifier	build		2100849	1					
ANR	2101228	IfStatement	if ( e == 1 )		2100849	17					
ANR	2101229	Condition	e == 1	103:8:1668:1673	2100849	0	True				
ANR	2101230	EqualityExpression	e == 1		2100849	0		==			
ANR	2101231	Identifier	e		2100849	0					
ANR	2101232	PrimaryExpression	1		2100849	1					
ANR	2101233	ExpressionStatement	ctx -> xvid_build = build	105:8:1685:1708	2100849	1	True				
ANR	2101234	AssignmentExpression	ctx -> xvid_build = build		2100849	0		=			
ANR	2101235	PtrMemberAccess	ctx -> xvid_build		2100849	0					
ANR	2101236	Identifier	ctx		2100849	0					
ANR	2101237	Identifier	xvid_build		2100849	1					
ANR	2101238	Identifier	build		2100849	1					
ANR	2101239	ReturnStatement	return 0 ;	109:4:1717:1725	2100849	18	True				
ANR	2101240	PrimaryExpression	0		2100849	0					
ANR	2101241	ReturnType	static int		2100849	1					
ANR	2101242	Identifier	decode_user_data		2100849	2					
ANR	2101243	ParameterList	"Mpeg4DecContext * ctx , GetBitContext * gb"		2100849	3					
ANR	2101244	Parameter	Mpeg4DecContext * ctx	1:28:28:47	2100849	0	True				
ANR	2101245	ParameterType	Mpeg4DecContext *		2100849	0					
ANR	2101246	Identifier	ctx		2100849	1					
ANR	2101247	Parameter	GetBitContext * gb	1:50:50:66	2100849	1	True				
ANR	2101248	ParameterType	GetBitContext *		2100849	0					
ANR	2101249	Identifier	gb		2100849	1					
ANR	2101250	CFGEntryNode	ENTRY		2100849		True				
ANR	2101251	CFGExitNode	EXIT		2100849		True				
ANR	2101252	Symbol	* gb		2100849						
ANR	2101253	Symbol	get_bits		2100849						
ANR	2101254	Symbol	ver3		2100849						
ANR	2101255	Symbol	s -> divx_packed		2100849						
ANR	2101256	Symbol	show_bits		2100849						
ANR	2101257	Symbol	& ver		2100849						
ANR	2101258	Symbol	ctx -> lavc_build		2100849						
ANR	2101259	Symbol	& build		2100849						
ANR	2101260	Symbol	ver2		2100849						
ANR	2101261	Symbol	gb		2100849						
ANR	2101262	Symbol	& last		2100849						
ANR	2101263	Symbol	ctx -> divx_version		2100849						
ANR	2101264	Symbol	strcmp		2100849						
ANR	2101265	Symbol	ver		2100849						
ANR	2101266	Symbol	* buf		2100849						
ANR	2101267	Symbol	last		2100849						
ANR	2101268	Symbol	e		2100849						
ANR	2101269	Symbol	ctx -> xvid_build		2100849						
ANR	2101270	Symbol	ctx		2100849						
ANR	2101271	Symbol	& ctx -> m		2100849						
ANR	2101272	Symbol	i		2100849						
ANR	2101273	Symbol	get_bits_count		2100849						
ANR	2101274	Symbol	* ctx		2100849						
ANR	2101275	Symbol	buf		2100849						
ANR	2101276	Symbol	s		2100849						
ANR	2101277	Symbol	* i		2100849						
ANR	2101278	Symbol	build		2100849						
ANR	2101279	Symbol	sscanf		2100849						
ANR	2101280	Symbol	gb -> size_in_bits		2100849						
ANR	2101281	Symbol	& ver3		2100849						
ANR	2101282	Symbol	& ver2		2100849						
ANR	2101283	Symbol	ctx -> divx_build		2100849						
ANR	2101284	Symbol	* s		2100849						
