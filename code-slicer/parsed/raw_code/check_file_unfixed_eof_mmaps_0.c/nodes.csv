command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1255202	File	/home/p4ultr4n/workplace/ReVeal/raw_code/check_file_unfixed_eof_mmaps_0.c								
ANR	1255203	Function	check_file_unfixed_eof_mmaps	1:0:0:847							
ANR	1255204	FunctionDef	check_file_unfixed_eof_mmaps ()		1255203	0					
ANR	1255205	CompoundStatement		3:0:41:847	1255203	0					
ANR	1255206	IdentifierDeclStatement	char * cp ;	5:1:45:53	1255203	0	True				
ANR	1255207	IdentifierDecl	* cp		1255203	0					
ANR	1255208	IdentifierDeclType	char *		1255203	0					
ANR	1255209	Identifier	cp		1255203	1					
ANR	1255210	IdentifierDeclStatement	unsigned int * p1 ;	7:1:57:73	1255203	1	True				
ANR	1255211	IdentifierDecl	* p1		1255203	0					
ANR	1255212	IdentifierDeclType	unsigned int *		1255203	0					
ANR	1255213	Identifier	p1		1255203	1					
ANR	1255214	IdentifierDeclStatement	uintptr_t p ;	9:1:77:88	1255203	2	True				
ANR	1255215	IdentifierDecl	p		1255203	0					
ANR	1255216	IdentifierDeclType	uintptr_t		1255203	0					
ANR	1255217	Identifier	p		1255203	1					
ANR	1255218	IdentifierDeclStatement	int i ;	11:1:92:97	1255203	3	True				
ANR	1255219	IdentifierDecl	i		1255203	0					
ANR	1255220	IdentifierDeclType	int		1255203	0					
ANR	1255221	Identifier	i		1255203	1					
ANR	1255222	ExpressionStatement	"fprintf ( stderr , ""%s"" , __func__ )"	15:1:103:135	1255203	4	True				
ANR	1255223	CallExpression	"fprintf ( stderr , ""%s"" , __func__ )"		1255203	0					
ANR	1255224	Callee	fprintf		1255203	0					
ANR	1255225	Identifier	fprintf		1255203	0					
ANR	1255226	ArgumentList	stderr		1255203	1					
ANR	1255227	Argument	stderr		1255203	0					
ANR	1255228	Identifier	stderr		1255203	0					
ANR	1255229	Argument	"""%s"""		1255203	1					
ANR	1255230	PrimaryExpression	"""%s"""		1255203	0					
ANR	1255231	Argument	__func__		1255203	2					
ANR	1255232	Identifier	__func__		1255203	0					
ANR	1255233	ForStatement	for ( i = 0 ; i < 0x10 ; i ++ )		1255203	5					
ANR	1255234	ForInit	i = 0 ;	17:6:144:149	1255203	0	True				
ANR	1255235	AssignmentExpression	i = 0		1255203	0		=			
ANR	1255236	Identifier	i		1255203	0					
ANR	1255237	PrimaryExpression	0		1255203	1					
ANR	1255238	Condition	i < 0x10	17:13:151:158	1255203	1	True				
ANR	1255239	RelationalExpression	i < 0x10		1255203	0		<			
ANR	1255240	Identifier	i		1255203	0					
ANR	1255241	PrimaryExpression	0x10		1255203	1					
ANR	1255242	PostIncDecOperationExpression	i ++	17:23:161:163	1255203	2	True				
ANR	1255243	Identifier	i		1255203	0					
ANR	1255244	IncDec	++		1255203	1					
ANR	1255245	CompoundStatement		17:1:126:126	1255203	3					
ANR	1255246	ExpressionStatement	"p1 = mmap ( NULL , pagesize , PROT_READ , MAP_PRIVATE , test_fd , ( test_fsize - sizeof * p1 ) & ~pagemask )"	21:2:173:291	1255203	0	True				
ANR	1255247	AssignmentExpression	"p1 = mmap ( NULL , pagesize , PROT_READ , MAP_PRIVATE , test_fd , ( test_fsize - sizeof * p1 ) & ~pagemask )"		1255203	0		=			
ANR	1255248	Identifier	p1		1255203	0					
ANR	1255249	CallExpression	"mmap ( NULL , pagesize , PROT_READ , MAP_PRIVATE , test_fd , ( test_fsize - sizeof * p1 ) & ~pagemask )"		1255203	1					
ANR	1255250	Callee	mmap		1255203	0					
ANR	1255251	Identifier	mmap		1255203	0					
ANR	1255252	ArgumentList	NULL		1255203	1					
ANR	1255253	Argument	NULL		1255203	0					
ANR	1255254	Identifier	NULL		1255203	0					
ANR	1255255	Argument	pagesize		1255203	1					
ANR	1255256	Identifier	pagesize		1255203	0					
ANR	1255257	Argument	PROT_READ		1255203	2					
ANR	1255258	Identifier	PROT_READ		1255203	0					
ANR	1255259	Argument	MAP_PRIVATE		1255203	3					
ANR	1255260	Identifier	MAP_PRIVATE		1255203	0					
ANR	1255261	Argument	test_fd		1255203	4					
ANR	1255262	Identifier	test_fd		1255203	0					
ANR	1255263	Argument	( test_fsize - sizeof * p1 ) & ~pagemask		1255203	5					
ANR	1255264	BitAndExpression	( test_fsize - sizeof * p1 ) & ~pagemask		1255203	0		&			
ANR	1255265	AdditiveExpression	test_fsize - sizeof * p1		1255203	0		-			
ANR	1255266	Identifier	test_fsize		1255203	0					
ANR	1255267	SizeofExpression	sizeof * p1		1255203	1					
ANR	1255268	Sizeof	sizeof		1255203	0					
ANR	1255269	UnaryOperationExpression	* p1		1255203	1					
ANR	1255270	UnaryOperator	*		1255203	0					
ANR	1255271	Identifier	p1		1255203	1					
ANR	1255272	Identifier	~pagemask		1255203	1					
ANR	1255273	ExpressionStatement	fail_unless ( p1 != MAP_FAILED )	31:2:298:328	1255203	1	True				
ANR	1255274	CallExpression	fail_unless ( p1 != MAP_FAILED )		1255203	0					
ANR	1255275	Callee	fail_unless		1255203	0					
ANR	1255276	Identifier	fail_unless		1255203	0					
ANR	1255277	ArgumentList	p1 != MAP_FAILED		1255203	1					
ANR	1255278	Argument	p1 != MAP_FAILED		1255203	0					
ANR	1255279	EqualityExpression	p1 != MAP_FAILED		1255203	0		!=			
ANR	1255280	Identifier	p1		1255203	0					
ANR	1255281	Identifier	MAP_FAILED		1255203	1					
ANR	1255282	ExpressionStatement	p = ( uintptr_t ) p1	39:2:426:444	1255203	2	True				
ANR	1255283	AssignmentExpression	p = ( uintptr_t ) p1		1255203	0		=			
ANR	1255284	Identifier	p		1255203	0					
ANR	1255285	CastExpression	( uintptr_t ) p1		1255203	1					
ANR	1255286	CastTarget	uintptr_t		1255203	0					
ANR	1255287	Identifier	p1		1255203	1					
ANR	1255288	ExpressionStatement	fail_unless ( ( p & pagemask ) == 0 )	41:2:449:482	1255203	3	True				
ANR	1255289	CallExpression	fail_unless ( ( p & pagemask ) == 0 )		1255203	0					
ANR	1255290	Callee	fail_unless		1255203	0					
ANR	1255291	Identifier	fail_unless		1255203	0					
ANR	1255292	ArgumentList	( p & pagemask ) == 0		1255203	1					
ANR	1255293	Argument	( p & pagemask ) == 0		1255203	0					
ANR	1255294	EqualityExpression	( p & pagemask ) == 0		1255203	0		==			
ANR	1255295	BitAndExpression	p & pagemask		1255203	0		&			
ANR	1255296	Identifier	p		1255203	0					
ANR	1255297	Identifier	pagemask		1255203	1					
ANR	1255298	PrimaryExpression	0		1255203	1					
ANR	1255299	ExpressionStatement	fail_unless ( p1 [ ( test_fsize & pagemask ) / sizeof * p1 - 1 ] == ( ( test_fsize - sizeof * p1 ) / sizeof * p1 ) )	45:2:543:654	1255203	4	True				
ANR	1255300	CallExpression	fail_unless ( p1 [ ( test_fsize & pagemask ) / sizeof * p1 - 1 ] == ( ( test_fsize - sizeof * p1 ) / sizeof * p1 ) )		1255203	0					
ANR	1255301	Callee	fail_unless		1255203	0					
ANR	1255302	Identifier	fail_unless		1255203	0					
ANR	1255303	ArgumentList	p1 [ ( test_fsize & pagemask ) / sizeof * p1 - 1 ] == ( ( test_fsize - sizeof * p1 ) / sizeof * p1 )		1255203	1					
ANR	1255304	Argument	p1 [ ( test_fsize & pagemask ) / sizeof * p1 - 1 ] == ( ( test_fsize - sizeof * p1 ) / sizeof * p1 )		1255203	0					
ANR	1255305	EqualityExpression	p1 [ ( test_fsize & pagemask ) / sizeof * p1 - 1 ] == ( ( test_fsize - sizeof * p1 ) / sizeof * p1 )		1255203	0		==			
ANR	1255306	ArrayIndexing	p1 [ ( test_fsize & pagemask ) / sizeof * p1 - 1 ]		1255203	0					
ANR	1255307	Identifier	p1		1255203	0					
ANR	1255308	AdditiveExpression	( test_fsize & pagemask ) / sizeof * p1 - 1		1255203	1		-			
ANR	1255309	MultiplicativeExpression	( test_fsize & pagemask ) / sizeof * p1		1255203	0		/			
ANR	1255310	BitAndExpression	test_fsize & pagemask		1255203	0		&			
ANR	1255311	Identifier	test_fsize		1255203	0					
ANR	1255312	Identifier	pagemask		1255203	1					
ANR	1255313	SizeofExpression	sizeof * p1		1255203	1					
ANR	1255314	Sizeof	sizeof		1255203	0					
ANR	1255315	UnaryOperationExpression	* p1		1255203	1					
ANR	1255316	UnaryOperator	*		1255203	0					
ANR	1255317	Identifier	p1		1255203	1					
ANR	1255318	PrimaryExpression	1		1255203	1					
ANR	1255319	MultiplicativeExpression	( test_fsize - sizeof * p1 ) / sizeof * p1		1255203	1		/			
ANR	1255320	AdditiveExpression	test_fsize - sizeof * p1		1255203	0		-			
ANR	1255321	Identifier	test_fsize		1255203	0					
ANR	1255322	SizeofExpression	sizeof * p1		1255203	1					
ANR	1255323	Sizeof	sizeof		1255203	0					
ANR	1255324	UnaryOperationExpression	* p1		1255203	1					
ANR	1255325	UnaryOperator	*		1255203	0					
ANR	1255326	Identifier	p1		1255203	1					
ANR	1255327	SizeofExpression	sizeof * p1		1255203	1					
ANR	1255328	Sizeof	sizeof		1255203	0					
ANR	1255329	UnaryOperationExpression	* p1		1255203	1					
ANR	1255330	UnaryOperator	*		1255203	0					
ANR	1255331	Identifier	p1		1255203	1					
ANR	1255332	ExpressionStatement	cp = ( void * ) p1	53:2:725:741	1255203	5	True				
ANR	1255333	AssignmentExpression	cp = ( void * ) p1		1255203	0		=			
ANR	1255334	Identifier	cp		1255203	0					
ANR	1255335	CastExpression	( void * ) p1		1255203	1					
ANR	1255336	CastTarget	void *		1255203	0					
ANR	1255337	Identifier	p1		1255203	1					
ANR	1255338	ExpressionStatement	fail_unless ( cp [ pagesize - 4 ] == 0 )	55:2:746:781	1255203	6	True				
ANR	1255339	CallExpression	fail_unless ( cp [ pagesize - 4 ] == 0 )		1255203	0					
ANR	1255340	Callee	fail_unless		1255203	0					
ANR	1255341	Identifier	fail_unless		1255203	0					
ANR	1255342	ArgumentList	cp [ pagesize - 4 ] == 0		1255203	1					
ANR	1255343	Argument	cp [ pagesize - 4 ] == 0		1255203	0					
ANR	1255344	EqualityExpression	cp [ pagesize - 4 ] == 0		1255203	0		==			
ANR	1255345	ArrayIndexing	cp [ pagesize - 4 ]		1255203	0					
ANR	1255346	Identifier	cp		1255203	0					
ANR	1255347	AdditiveExpression	pagesize - 4		1255203	1		-			
ANR	1255348	Identifier	pagesize		1255203	0					
ANR	1255349	PrimaryExpression	4		1255203	1					
ANR	1255350	PrimaryExpression	0		1255203	1					
ANR	1255351	ExpressionStatement	"munmap ( p1 , pagesize )"	57:2:786:807	1255203	7	True				
ANR	1255352	CallExpression	"munmap ( p1 , pagesize )"		1255203	0					
ANR	1255353	Callee	munmap		1255203	0					
ANR	1255354	Identifier	munmap		1255203	0					
ANR	1255355	ArgumentList	p1		1255203	1					
ANR	1255356	Argument	p1		1255203	0					
ANR	1255357	Identifier	p1		1255203	0					
ANR	1255358	Argument	pagesize		1255203	1					
ANR	1255359	Identifier	pagesize		1255203	0					
ANR	1255360	ExpressionStatement	"fprintf ( stderr , "" passed\\n"" )"	61:1:815:844	1255203	6	True				
ANR	1255361	CallExpression	"fprintf ( stderr , "" passed\\n"" )"		1255203	0					
ANR	1255362	Callee	fprintf		1255203	0					
ANR	1255363	Identifier	fprintf		1255203	0					
ANR	1255364	ArgumentList	stderr		1255203	1					
ANR	1255365	Argument	stderr		1255203	0					
ANR	1255366	Identifier	stderr		1255203	0					
ANR	1255367	Argument	""" passed\\n"""		1255203	1					
ANR	1255368	PrimaryExpression	""" passed\\n"""		1255203	0					
ANR	1255369	ReturnType	void		1255203	1					
ANR	1255370	Identifier	check_file_unfixed_eof_mmaps		1255203	2					
ANR	1255371	ParameterList			1255203	3					
ANR	1255372	CFGEntryNode	ENTRY		1255203		True				
ANR	1255373	CFGExitNode	EXIT		1255203		True				
ANR	1255374	Symbol	p1		1255203						
ANR	1255375	Symbol	NULL		1255203						
ANR	1255376	Symbol	* p1		1255203						
ANR	1255377	Symbol	* pagesize		1255203						
ANR	1255378	Symbol	i		1255203						
ANR	1255379	Symbol	PROT_READ		1255203						
ANR	1255380	Symbol	test_fsize		1255203						
ANR	1255381	Symbol	stderr		1255203						
ANR	1255382	Symbol	cp		1255203						
ANR	1255383	Symbol	~pagemask		1255203						
ANR	1255384	Symbol	MAP_PRIVATE		1255203						
ANR	1255385	Symbol	MAP_FAILED		1255203						
ANR	1255386	Symbol	* pagemask		1255203						
ANR	1255387	Symbol	* * p1		1255203						
ANR	1255388	Symbol	p		1255203						
ANR	1255389	Symbol	* cp		1255203						
ANR	1255390	Symbol	__func__		1255203						
ANR	1255391	Symbol	pagesize		1255203						
ANR	1255392	Symbol	test_fd		1255203						
ANR	1255393	Symbol	mmap		1255203						
ANR	1255394	Symbol	* test_fsize		1255203						
ANR	1255395	Symbol	pagemask		1255203						
