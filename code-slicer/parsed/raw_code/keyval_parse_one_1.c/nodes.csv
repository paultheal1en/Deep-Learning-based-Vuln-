command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5073737	File	/home/p4ultr4n/workplace/ReVeal/raw_code/keyval_parse_one_1.c								
ANR	5073738	Function	keyval_parse_one	1:0:0:2567							
ANR	5073739	FunctionDef	"keyval_parse_one (QDict * qdict , const char * params , const char * implied_key , Error * * errp)"		5073738	0					
ANR	5073740	CompoundStatement		7:0:184:2567	5073738	0					
ANR	5073741	IdentifierDeclStatement	"const char * key , * key_end , * s ;"	9:4:191:220	5073738	0	True				
ANR	5073742	IdentifierDecl	* key		5073738	0					
ANR	5073743	IdentifierDeclType	const char *		5073738	0					
ANR	5073744	Identifier	key		5073738	1					
ANR	5073745	IdentifierDecl	* key_end		5073738	1					
ANR	5073746	IdentifierDeclType	const char *		5073738	0					
ANR	5073747	Identifier	key_end		5073738	1					
ANR	5073748	IdentifierDecl	* s		5073738	2					
ANR	5073749	IdentifierDeclType	const char *		5073738	0					
ANR	5073750	Identifier	s		5073738	1					
ANR	5073751	IdentifierDeclStatement	size_t len ;	11:4:227:237	5073738	1	True				
ANR	5073752	IdentifierDecl	len		5073738	0					
ANR	5073753	IdentifierDeclType	size_t		5073738	0					
ANR	5073754	Identifier	len		5073738	1					
ANR	5073755	IdentifierDeclStatement	char key_in_cur [ 128 ] ;	13:4:244:264	5073738	2	True				
ANR	5073756	IdentifierDecl	key_in_cur [ 128 ]		5073738	0					
ANR	5073757	IdentifierDeclType	char [ 128 ]		5073738	0					
ANR	5073758	Identifier	key_in_cur		5073738	1					
ANR	5073759	PrimaryExpression	128		5073738	2					
ANR	5073760	IdentifierDeclStatement	QDict * cur ;	15:4:271:281	5073738	3	True				
ANR	5073761	IdentifierDecl	* cur		5073738	0					
ANR	5073762	IdentifierDeclType	QDict *		5073738	0					
ANR	5073763	Identifier	cur		5073738	1					
ANR	5073764	IdentifierDeclStatement	int ret ;	17:4:288:295	5073738	4	True				
ANR	5073765	IdentifierDecl	ret		5073738	0					
ANR	5073766	IdentifierDeclType	int		5073738	0					
ANR	5073767	Identifier	ret		5073738	1					
ANR	5073768	IdentifierDeclStatement	QObject * next ;	19:4:302:315	5073738	5	True				
ANR	5073769	IdentifierDecl	* next		5073738	0					
ANR	5073770	IdentifierDeclType	QObject *		5073738	0					
ANR	5073771	Identifier	next		5073738	1					
ANR	5073772	IdentifierDeclStatement	QString * val ;	21:4:322:334	5073738	6	True				
ANR	5073773	IdentifierDecl	* val		5073738	0					
ANR	5073774	IdentifierDeclType	QString *		5073738	0					
ANR	5073775	Identifier	val		5073738	1					
ANR	5073776	ExpressionStatement	key = params	25:4:343:355	5073738	7	True				
ANR	5073777	AssignmentExpression	key = params		5073738	0		=			
ANR	5073778	Identifier	key		5073738	0					
ANR	5073779	Identifier	params		5073738	1					
ANR	5073780	ExpressionStatement	"len = strcspn ( params , ""=,"" )"	27:4:362:389	5073738	8	True				
ANR	5073781	AssignmentExpression	"len = strcspn ( params , ""=,"" )"		5073738	0		=			
ANR	5073782	Identifier	len		5073738	0					
ANR	5073783	CallExpression	"strcspn ( params , ""=,"" )"		5073738	1					
ANR	5073784	Callee	strcspn		5073738	0					
ANR	5073785	Identifier	strcspn		5073738	0					
ANR	5073786	ArgumentList	params		5073738	1					
ANR	5073787	Argument	params		5073738	0					
ANR	5073788	Identifier	params		5073738	0					
ANR	5073789	Argument	"""=,"""		5073738	1					
ANR	5073790	PrimaryExpression	"""=,"""		5073738	0					
ANR	5073791	IfStatement	if ( implied_key && len && key [ len ] != '=' )		5073738	9					
ANR	5073792	Condition	implied_key && len && key [ len ] != '='	29:8:400:436	5073738	0	True				
ANR	5073793	AndExpression	implied_key && len && key [ len ] != '='		5073738	0		&&			
ANR	5073794	Identifier	implied_key		5073738	0					
ANR	5073795	AndExpression	len && key [ len ] != '='		5073738	1		&&			
ANR	5073796	Identifier	len		5073738	0					
ANR	5073797	EqualityExpression	key [ len ] != '='		5073738	1		!=			
ANR	5073798	ArrayIndexing	key [ len ]		5073738	0					
ANR	5073799	Identifier	key		5073738	0					
ANR	5073800	Identifier	len		5073738	1					
ANR	5073801	PrimaryExpression	'='		5073738	1					
ANR	5073802	CompoundStatement		23:47:254:254	5073738	1					
ANR	5073803	ExpressionStatement	key = implied_key	33:8:485:502	5073738	0	True				
ANR	5073804	AssignmentExpression	key = implied_key		5073738	0		=			
ANR	5073805	Identifier	key		5073738	0					
ANR	5073806	Identifier	implied_key		5073738	1					
ANR	5073807	ExpressionStatement	len = strlen ( implied_key )	35:8:513:538	5073738	1	True				
ANR	5073808	AssignmentExpression	len = strlen ( implied_key )		5073738	0		=			
ANR	5073809	Identifier	len		5073738	0					
ANR	5073810	CallExpression	strlen ( implied_key )		5073738	1					
ANR	5073811	Callee	strlen		5073738	0					
ANR	5073812	Identifier	strlen		5073738	0					
ANR	5073813	ArgumentList	implied_key		5073738	1					
ANR	5073814	Argument	implied_key		5073738	0					
ANR	5073815	Identifier	implied_key		5073738	0					
ANR	5073816	ExpressionStatement	key_end = key + len	39:4:552:571	5073738	10	True				
ANR	5073817	AssignmentExpression	key_end = key + len		5073738	0		=			
ANR	5073818	Identifier	key_end		5073738	0					
ANR	5073819	AdditiveExpression	key + len		5073738	1		+			
ANR	5073820	Identifier	key		5073738	0					
ANR	5073821	Identifier	len		5073738	1					
ANR	5073822	ExpressionStatement	cur = qdict	51:4:733:744	5073738	11	True				
ANR	5073823	AssignmentExpression	cur = qdict		5073738	0		=			
ANR	5073824	Identifier	cur		5073738	0					
ANR	5073825	Identifier	qdict		5073738	1					
ANR	5073826	ExpressionStatement	s = key	53:4:751:758	5073738	12	True				
ANR	5073827	AssignmentExpression	s = key		5073738	0		=			
ANR	5073828	Identifier	s		5073738	0					
ANR	5073829	Identifier	key		5073738	1					
ANR	5073830	ForStatement	for ( ; ; )		5073738	13					
ANR	5073831	CompoundStatement		49:13:589:589	5073738	0					
ANR	5073832	ExpressionStatement	"ret = parse_qapi_name ( s , false )"	57:8:785:816	5073738	0	True				
ANR	5073833	AssignmentExpression	"ret = parse_qapi_name ( s , false )"		5073738	0		=			
ANR	5073834	Identifier	ret		5073738	0					
ANR	5073835	CallExpression	"parse_qapi_name ( s , false )"		5073738	1					
ANR	5073836	Callee	parse_qapi_name		5073738	0					
ANR	5073837	Identifier	parse_qapi_name		5073738	0					
ANR	5073838	ArgumentList	s		5073738	1					
ANR	5073839	Argument	s		5073738	0					
ANR	5073840	Identifier	s		5073738	0					
ANR	5073841	Argument	false		5073738	1					
ANR	5073842	Identifier	false		5073738	0					
ANR	5073843	ExpressionStatement	len = ret < 0 ? 0 : ret	59:8:827:850	5073738	1	True				
ANR	5073844	AssignmentExpression	len = ret < 0 ? 0 : ret		5073738	0		=			
ANR	5073845	Identifier	len		5073738	0					
ANR	5073846	ConditionalExpression	ret < 0 ? 0 : ret		5073738	1					
ANR	5073847	Condition	ret < 0		5073738	0					
ANR	5073848	RelationalExpression	ret < 0		5073738	0		<			
ANR	5073849	Identifier	ret		5073738	0					
ANR	5073850	PrimaryExpression	0		5073738	1					
ANR	5073851	PrimaryExpression	0		5073738	1					
ANR	5073852	Identifier	ret		5073738	2					
ANR	5073853	ExpressionStatement	assert ( s + len <= key_end )	61:8:861:887	5073738	2	True				
ANR	5073854	CallExpression	assert ( s + len <= key_end )		5073738	0					
ANR	5073855	Callee	assert		5073738	0					
ANR	5073856	Identifier	assert		5073738	0					
ANR	5073857	ArgumentList	s + len <= key_end		5073738	1					
ANR	5073858	Argument	s + len <= key_end		5073738	0					
ANR	5073859	RelationalExpression	s + len <= key_end		5073738	0		<=			
ANR	5073860	AdditiveExpression	s + len		5073738	0		+			
ANR	5073861	Identifier	s		5073738	0					
ANR	5073862	Identifier	len		5073738	1					
ANR	5073863	Identifier	key_end		5073738	1					
ANR	5073864	IfStatement	if ( ! len || ( s + len < key_end && s [ len ] != '.' ) )		5073738	3					
ANR	5073865	Condition	! len || ( s + len < key_end && s [ len ] != '.' )	63:12:902:945	5073738	0	True				
ANR	5073866	OrExpression	! len || ( s + len < key_end && s [ len ] != '.' )		5073738	0		||			
ANR	5073867	UnaryOperationExpression	! len		5073738	0					
ANR	5073868	UnaryOperator	!		5073738	0					
ANR	5073869	Identifier	len		5073738	1					
ANR	5073870	AndExpression	s + len < key_end && s [ len ] != '.'		5073738	1		&&			
ANR	5073871	RelationalExpression	s + len < key_end		5073738	0		<			
ANR	5073872	AdditiveExpression	s + len		5073738	0		+			
ANR	5073873	Identifier	s		5073738	0					
ANR	5073874	Identifier	len		5073738	1					
ANR	5073875	Identifier	key_end		5073738	1					
ANR	5073876	EqualityExpression	s [ len ] != '.'		5073738	1		!=			
ANR	5073877	ArrayIndexing	s [ len ]		5073738	0					
ANR	5073878	Identifier	s		5073738	0					
ANR	5073879	Identifier	len		5073738	1					
ANR	5073880	PrimaryExpression	'.'		5073738	1					
ANR	5073881	CompoundStatement		57:58:763:763	5073738	1					
ANR	5073882	ExpressionStatement	assert ( key != implied_key )	65:12:963:989	5073738	0	True				
ANR	5073883	CallExpression	assert ( key != implied_key )		5073738	0					
ANR	5073884	Callee	assert		5073738	0					
ANR	5073885	Identifier	assert		5073738	0					
ANR	5073886	ArgumentList	key != implied_key		5073738	1					
ANR	5073887	Argument	key != implied_key		5073738	0					
ANR	5073888	EqualityExpression	key != implied_key		5073738	0		!=			
ANR	5073889	Identifier	key		5073738	0					
ANR	5073890	Identifier	implied_key		5073738	1					
ANR	5073891	ExpressionStatement	"error_setg ( errp , ""Invalid parameter '%.*s'"" , ( int ) ( key_end - key ) , key )"	67:12:1004:1099	5073738	1	True				
ANR	5073892	CallExpression	"error_setg ( errp , ""Invalid parameter '%.*s'"" , ( int ) ( key_end - key ) , key )"		5073738	0					
ANR	5073893	Callee	error_setg		5073738	0					
ANR	5073894	Identifier	error_setg		5073738	0					
ANR	5073895	ArgumentList	errp		5073738	1					
ANR	5073896	Argument	errp		5073738	0					
ANR	5073897	Identifier	errp		5073738	0					
ANR	5073898	Argument	"""Invalid parameter '%.*s'"""		5073738	1					
ANR	5073899	PrimaryExpression	"""Invalid parameter '%.*s'"""		5073738	0					
ANR	5073900	Argument	( int ) ( key_end - key )		5073738	2					
ANR	5073901	CastExpression	( int ) ( key_end - key )		5073738	0					
ANR	5073902	CastTarget	int		5073738	0					
ANR	5073903	AdditiveExpression	key_end - key		5073738	1		-			
ANR	5073904	Identifier	key_end		5073738	0					
ANR	5073905	Identifier	key		5073738	1					
ANR	5073906	Argument	key		5073738	3					
ANR	5073907	Identifier	key		5073738	0					
ANR	5073908	ReturnStatement	return NULL ;	71:12:1114:1125	5073738	2	True				
ANR	5073909	Identifier	NULL		5073738	0					
ANR	5073910	IfStatement	if ( len >= sizeof ( key_in_cur ) )		5073738	4					
ANR	5073911	Condition	len >= sizeof ( key_in_cur )	75:12:1151:1175	5073738	0	True				
ANR	5073912	RelationalExpression	len >= sizeof ( key_in_cur )		5073738	0		>=			
ANR	5073913	Identifier	len		5073738	0					
ANR	5073914	SizeofExpression	sizeof ( key_in_cur )		5073738	1					
ANR	5073915	Sizeof	sizeof		5073738	0					
ANR	5073916	SizeofOperand	key_in_cur		5073738	1					
ANR	5073917	CompoundStatement		69:39:993:993	5073738	1					
ANR	5073918	ExpressionStatement	assert ( key != implied_key )	77:12:1193:1219	5073738	0	True				
ANR	5073919	CallExpression	assert ( key != implied_key )		5073738	0					
ANR	5073920	Callee	assert		5073738	0					
ANR	5073921	Identifier	assert		5073738	0					
ANR	5073922	ArgumentList	key != implied_key		5073738	1					
ANR	5073923	Argument	key != implied_key		5073738	0					
ANR	5073924	EqualityExpression	key != implied_key		5073738	0		!=			
ANR	5073925	Identifier	key		5073738	0					
ANR	5073926	Identifier	implied_key		5073738	1					
ANR	5073927	ExpressionStatement	"error_setg ( errp , ""Parameter%s '%.*s' is too long"" , s != key || s + len != key_end ? "" fragment"" : """" , ( int ) len , s )"	79:12:1234:1396	5073738	1	True				
ANR	5073928	CallExpression	"error_setg ( errp , ""Parameter%s '%.*s' is too long"" , s != key || s + len != key_end ? "" fragment"" : """" , ( int ) len , s )"		5073738	0					
ANR	5073929	Callee	error_setg		5073738	0					
ANR	5073930	Identifier	error_setg		5073738	0					
ANR	5073931	ArgumentList	errp		5073738	1					
ANR	5073932	Argument	errp		5073738	0					
ANR	5073933	Identifier	errp		5073738	0					
ANR	5073934	Argument	"""Parameter%s '%.*s' is too long"""		5073738	1					
ANR	5073935	PrimaryExpression	"""Parameter%s '%.*s' is too long"""		5073738	0					
ANR	5073936	Argument	"s != key || s + len != key_end ? "" fragment"" : """""		5073738	2					
ANR	5073937	ConditionalExpression	"s != key || s + len != key_end ? "" fragment"" : """""		5073738	0					
ANR	5073938	Condition	s != key || s + len != key_end		5073738	0					
ANR	5073939	OrExpression	s != key || s + len != key_end		5073738	0		||			
ANR	5073940	EqualityExpression	s != key		5073738	0		!=			
ANR	5073941	Identifier	s		5073738	0					
ANR	5073942	Identifier	key		5073738	1					
ANR	5073943	EqualityExpression	s + len != key_end		5073738	1		!=			
ANR	5073944	AdditiveExpression	s + len		5073738	0		+			
ANR	5073945	Identifier	s		5073738	0					
ANR	5073946	Identifier	len		5073738	1					
ANR	5073947	Identifier	key_end		5073738	1					
ANR	5073948	PrimaryExpression	""" fragment"""		5073738	1					
ANR	5073949	PrimaryExpression	""""""		5073738	2					
ANR	5073950	Argument	( int ) len		5073738	3					
ANR	5073951	CastExpression	( int ) len		5073738	0					
ANR	5073952	CastTarget	int		5073738	0					
ANR	5073953	Identifier	len		5073738	1					
ANR	5073954	Argument	s		5073738	4					
ANR	5073955	Identifier	s		5073738	0					
ANR	5073956	ReturnStatement	return NULL ;	85:12:1411:1422	5073738	2	True				
ANR	5073957	Identifier	NULL		5073738	0					
ANR	5073958	IfStatement	if ( s != key )		5073738	5					
ANR	5073959	Condition	s != key	91:12:1450:1457	5073738	0	True				
ANR	5073960	EqualityExpression	s != key		5073738	0		!=			
ANR	5073961	Identifier	s		5073738	0					
ANR	5073962	Identifier	key		5073738	1					
ANR	5073963	CompoundStatement		85:22:1275:1275	5073738	1					
ANR	5073964	ExpressionStatement	"next = keyval_parse_put ( cur , key_in_cur , NULL , key , s - 1 , errp )"	93:12:1475:1576	5073738	0	True				
ANR	5073965	AssignmentExpression	"next = keyval_parse_put ( cur , key_in_cur , NULL , key , s - 1 , errp )"		5073738	0		=			
ANR	5073966	Identifier	next		5073738	0					
ANR	5073967	CallExpression	"keyval_parse_put ( cur , key_in_cur , NULL , key , s - 1 , errp )"		5073738	1					
ANR	5073968	Callee	keyval_parse_put		5073738	0					
ANR	5073969	Identifier	keyval_parse_put		5073738	0					
ANR	5073970	ArgumentList	cur		5073738	1					
ANR	5073971	Argument	cur		5073738	0					
ANR	5073972	Identifier	cur		5073738	0					
ANR	5073973	Argument	key_in_cur		5073738	1					
ANR	5073974	Identifier	key_in_cur		5073738	0					
ANR	5073975	Argument	NULL		5073738	2					
ANR	5073976	Identifier	NULL		5073738	0					
ANR	5073977	Argument	key		5073738	3					
ANR	5073978	Identifier	key		5073738	0					
ANR	5073979	Argument	s - 1		5073738	4					
ANR	5073980	AdditiveExpression	s - 1		5073738	0		-			
ANR	5073981	Identifier	s		5073738	0					
ANR	5073982	PrimaryExpression	1		5073738	1					
ANR	5073983	Argument	errp		5073738	5					
ANR	5073984	Identifier	errp		5073738	0					
ANR	5073985	IfStatement	if ( ! next )		5073738	1					
ANR	5073986	Condition	! next	97:16:1595:1599	5073738	0	True				
ANR	5073987	UnaryOperationExpression	! next		5073738	0					
ANR	5073988	UnaryOperator	!		5073738	0					
ANR	5073989	Identifier	next		5073738	1					
ANR	5073990	CompoundStatement		91:23:1417:1417	5073738	1					
ANR	5073991	ReturnStatement	return NULL ;	99:16:1621:1632	5073738	0	True				
ANR	5073992	Identifier	NULL		5073738	0					
ANR	5073993	ExpressionStatement	cur = qobject_to_qdict ( next )	103:12:1662:1690	5073738	2	True				
ANR	5073994	AssignmentExpression	cur = qobject_to_qdict ( next )		5073738	0		=			
ANR	5073995	Identifier	cur		5073738	0					
ANR	5073996	CallExpression	qobject_to_qdict ( next )		5073738	1					
ANR	5073997	Callee	qobject_to_qdict		5073738	0					
ANR	5073998	Identifier	qobject_to_qdict		5073738	0					
ANR	5073999	ArgumentList	next		5073738	1					
ANR	5074000	Argument	next		5073738	0					
ANR	5074001	Identifier	next		5073738	0					
ANR	5074002	ExpressionStatement	assert ( cur )	105:12:1705:1716	5073738	3	True				
ANR	5074003	CallExpression	assert ( cur )		5073738	0					
ANR	5074004	Callee	assert		5073738	0					
ANR	5074005	Identifier	assert		5073738	0					
ANR	5074006	ArgumentList	cur		5073738	1					
ANR	5074007	Argument	cur		5073738	0					
ANR	5074008	Identifier	cur		5073738	0					
ANR	5074009	ExpressionStatement	"memcpy ( key_in_cur , s , len )"	111:8:1740:1766	5073738	6	True				
ANR	5074010	CallExpression	"memcpy ( key_in_cur , s , len )"		5073738	0					
ANR	5074011	Callee	memcpy		5073738	0					
ANR	5074012	Identifier	memcpy		5073738	0					
ANR	5074013	ArgumentList	key_in_cur		5073738	1					
ANR	5074014	Argument	key_in_cur		5073738	0					
ANR	5074015	Identifier	key_in_cur		5073738	0					
ANR	5074016	Argument	s		5073738	1					
ANR	5074017	Identifier	s		5073738	0					
ANR	5074018	Argument	len		5073738	2					
ANR	5074019	Identifier	len		5073738	0					
ANR	5074020	ExpressionStatement	key_in_cur [ len ] = 0	113:8:1777:1796	5073738	7	True				
ANR	5074021	AssignmentExpression	key_in_cur [ len ] = 0		5073738	0		=			
ANR	5074022	ArrayIndexing	key_in_cur [ len ]		5073738	0					
ANR	5074023	Identifier	key_in_cur		5073738	0					
ANR	5074024	Identifier	len		5073738	1					
ANR	5074025	PrimaryExpression	0		5073738	1					
ANR	5074026	ExpressionStatement	s += len	115:8:1807:1815	5073738	8	True				
ANR	5074027	AssignmentExpression	s += len		5073738	0		+=			
ANR	5074028	Identifier	s		5073738	0					
ANR	5074029	Identifier	len		5073738	1					
ANR	5074030	IfStatement	if ( * s != '.' )		5073738	9					
ANR	5074031	Condition	* s != '.'	119:12:1832:1840	5073738	0	True				
ANR	5074032	EqualityExpression	* s != '.'		5073738	0		!=			
ANR	5074033	UnaryOperationExpression	* s		5073738	0					
ANR	5074034	UnaryOperator	*		5073738	0					
ANR	5074035	Identifier	s		5073738	1					
ANR	5074036	PrimaryExpression	'.'		5073738	1					
ANR	5074037	CompoundStatement		113:23:1658:1658	5073738	1					
ANR	5074038	BreakStatement	break ;	121:12:1858:1863	5073738	0	True				
ANR	5074039	ExpressionStatement	s ++	125:8:1885:1888	5073738	10	True				
ANR	5074040	PostIncDecOperationExpression	s ++		5073738	0					
ANR	5074041	Identifier	s		5073738	0					
ANR	5074042	IncDec	++		5073738	1					
ANR	5074043	IfStatement	if ( key == implied_key )		5073738	14					
ANR	5074044	Condition	key == implied_key	131:8:1908:1925	5073738	0	True				
ANR	5074045	EqualityExpression	key == implied_key		5073738	0		==			
ANR	5074046	Identifier	key		5073738	0					
ANR	5074047	Identifier	implied_key		5073738	1					
ANR	5074048	CompoundStatement		125:28:1743:1743	5073738	1					
ANR	5074049	ExpressionStatement	assert ( ! * s )	133:8:1939:1950	5073738	0	True				
ANR	5074050	CallExpression	assert ( ! * s )		5073738	0					
ANR	5074051	Callee	assert		5073738	0					
ANR	5074052	Identifier	assert		5073738	0					
ANR	5074053	ArgumentList	! * s		5073738	1					
ANR	5074054	Argument	! * s		5073738	0					
ANR	5074055	UnaryOperationExpression	! * s		5073738	0					
ANR	5074056	UnaryOperator	!		5073738	0					
ANR	5074057	UnaryOperationExpression	* s		5073738	1					
ANR	5074058	UnaryOperator	*		5073738	0					
ANR	5074059	Identifier	s		5073738	1					
ANR	5074060	ExpressionStatement	s = params	135:8:1961:1971	5073738	1	True				
ANR	5074061	AssignmentExpression	s = params		5073738	0		=			
ANR	5074062	Identifier	s		5073738	0					
ANR	5074063	Identifier	params		5073738	1					
ANR	5074064	ElseStatement	else		5073738	0					
ANR	5074065	CompoundStatement		131:11:1800:1800	5073738	0					
ANR	5074066	IfStatement	if ( * s != '=' )		5073738	0					
ANR	5074067	Condition	* s != '='	139:12:2000:2008	5073738	0	True				
ANR	5074068	EqualityExpression	* s != '='		5073738	0		!=			
ANR	5074069	UnaryOperationExpression	* s		5073738	0					
ANR	5074070	UnaryOperator	*		5073738	0					
ANR	5074071	Identifier	s		5073738	1					
ANR	5074072	PrimaryExpression	'='		5073738	1					
ANR	5074073	CompoundStatement		133:23:1826:1826	5073738	1					
ANR	5074074	ExpressionStatement	"error_setg ( errp , ""Expected '=' after parameter '%.*s'"" , ( int ) ( s - key ) , key )"	141:12:2026:2126	5073738	0	True				
ANR	5074075	CallExpression	"error_setg ( errp , ""Expected '=' after parameter '%.*s'"" , ( int ) ( s - key ) , key )"		5073738	0					
ANR	5074076	Callee	error_setg		5073738	0					
ANR	5074077	Identifier	error_setg		5073738	0					
ANR	5074078	ArgumentList	errp		5073738	1					
ANR	5074079	Argument	errp		5073738	0					
ANR	5074080	Identifier	errp		5073738	0					
ANR	5074081	Argument	"""Expected '=' after parameter '%.*s'"""		5073738	1					
ANR	5074082	PrimaryExpression	"""Expected '=' after parameter '%.*s'"""		5073738	0					
ANR	5074083	Argument	( int ) ( s - key )		5073738	2					
ANR	5074084	CastExpression	( int ) ( s - key )		5073738	0					
ANR	5074085	CastTarget	int		5073738	0					
ANR	5074086	AdditiveExpression	s - key		5073738	1		-			
ANR	5074087	Identifier	s		5073738	0					
ANR	5074088	Identifier	key		5073738	1					
ANR	5074089	Argument	key		5073738	3					
ANR	5074090	Identifier	key		5073738	0					
ANR	5074091	ReturnStatement	return NULL ;	145:12:2141:2152	5073738	1	True				
ANR	5074092	Identifier	NULL		5073738	0					
ANR	5074093	ExpressionStatement	s ++	149:8:2174:2177	5073738	1	True				
ANR	5074094	PostIncDecOperationExpression	s ++		5073738	0					
ANR	5074095	Identifier	s		5073738	0					
ANR	5074096	IncDec	++		5073738	1					
ANR	5074097	ExpressionStatement	val = qstring_new ( )	155:4:2193:2212	5073738	15	True				
ANR	5074098	AssignmentExpression	val = qstring_new ( )		5073738	0		=			
ANR	5074099	Identifier	val		5073738	0					
ANR	5074100	CallExpression	qstring_new ( )		5073738	1					
ANR	5074101	Callee	qstring_new		5073738	0					
ANR	5074102	Identifier	qstring_new		5073738	0					
ANR	5074103	ArgumentList			5073738	1					
ANR	5074104	ForStatement	for ( ; ; )		5073738	16					
ANR	5074105	CompoundStatement		151:13:2043:2043	5073738	0					
ANR	5074106	IfStatement	if ( ! * s )		5073738	0					
ANR	5074107	Condition	! * s	159:12:2243:2245	5073738	0	True				
ANR	5074108	UnaryOperationExpression	! * s		5073738	0					
ANR	5074109	UnaryOperator	!		5073738	0					
ANR	5074110	UnaryOperationExpression	* s		5073738	1					
ANR	5074111	UnaryOperator	*		5073738	0					
ANR	5074112	Identifier	s		5073738	1					
ANR	5074113	CompoundStatement		153:17:2063:2063	5073738	1					
ANR	5074114	BreakStatement	break ;	161:12:2263:2268	5073738	0	True				
ANR	5074115	ElseStatement	else		5073738	0					
ANR	5074116	IfStatement	"if ( * s == ',' )"		5073738	0					
ANR	5074117	Condition	"* s == ','"	163:19:2290:2298	5073738	0	True				
ANR	5074118	EqualityExpression	"* s == ','"		5073738	0		==			
ANR	5074119	UnaryOperationExpression	* s		5073738	0					
ANR	5074120	UnaryOperator	*		5073738	0					
ANR	5074121	Identifier	s		5073738	1					
ANR	5074122	PrimaryExpression	"','"		5073738	1					
ANR	5074123	CompoundStatement		157:30:2116:2116	5073738	1					
ANR	5074124	ExpressionStatement	s ++	165:12:2316:2319	5073738	0	True				
ANR	5074125	PostIncDecOperationExpression	s ++		5073738	0					
ANR	5074126	Identifier	s		5073738	0					
ANR	5074127	IncDec	++		5073738	1					
ANR	5074128	IfStatement	"if ( * s != ',' )"		5073738	1					
ANR	5074129	Condition	"* s != ','"	167:16:2338:2346	5073738	0	True				
ANR	5074130	EqualityExpression	"* s != ','"		5073738	0		!=			
ANR	5074131	UnaryOperationExpression	* s		5073738	0					
ANR	5074132	UnaryOperator	*		5073738	0					
ANR	5074133	Identifier	s		5073738	1					
ANR	5074134	PrimaryExpression	"','"		5073738	1					
ANR	5074135	CompoundStatement		161:27:2164:2164	5073738	1					
ANR	5074136	BreakStatement	break ;	169:16:2368:2373	5073738	0	True				
ANR	5074137	ExpressionStatement	"qstring_append_chr ( val , * s ++ )"	175:8:2410:2439	5073738	1	True				
ANR	5074138	CallExpression	"qstring_append_chr ( val , * s ++ )"		5073738	0					
ANR	5074139	Callee	qstring_append_chr		5073738	0					
ANR	5074140	Identifier	qstring_append_chr		5073738	0					
ANR	5074141	ArgumentList	val		5073738	1					
ANR	5074142	Argument	val		5073738	0					
ANR	5074143	Identifier	val		5073738	0					
ANR	5074144	Argument	* s ++		5073738	1					
ANR	5074145	UnaryOperationExpression	* s ++		5073738	0					
ANR	5074146	UnaryOperator	*		5073738	0					
ANR	5074147	PostIncDecOperationExpression	s ++		5073738	1					
ANR	5074148	Identifier	s		5073738	0					
ANR	5074149	IncDec	++		5073738	1					
ANR	5074150	IfStatement	"if ( ! keyval_parse_put ( cur , key_in_cur , val , key , key_end , errp ) )"		5073738	17					
ANR	5074151	Condition	"! keyval_parse_put ( cur , key_in_cur , val , key , key_end , errp )"	181:8:2459:2517	5073738	0	True				
ANR	5074152	UnaryOperationExpression	"! keyval_parse_put ( cur , key_in_cur , val , key , key_end , errp )"		5073738	0					
ANR	5074153	UnaryOperator	!		5073738	0					
ANR	5074154	CallExpression	"keyval_parse_put ( cur , key_in_cur , val , key , key_end , errp )"		5073738	1					
ANR	5074155	Callee	keyval_parse_put		5073738	0					
ANR	5074156	Identifier	keyval_parse_put		5073738	0					
ANR	5074157	ArgumentList	cur		5073738	1					
ANR	5074158	Argument	cur		5073738	0					
ANR	5074159	Identifier	cur		5073738	0					
ANR	5074160	Argument	key_in_cur		5073738	1					
ANR	5074161	Identifier	key_in_cur		5073738	0					
ANR	5074162	Argument	val		5073738	2					
ANR	5074163	Identifier	val		5073738	0					
ANR	5074164	Argument	key		5073738	3					
ANR	5074165	Identifier	key		5073738	0					
ANR	5074166	Argument	key_end		5073738	4					
ANR	5074167	Identifier	key_end		5073738	0					
ANR	5074168	Argument	errp		5073738	5					
ANR	5074169	Identifier	errp		5073738	0					
ANR	5074170	CompoundStatement		175:69:2335:2335	5073738	1					
ANR	5074171	ReturnStatement	return NULL ;	183:8:2531:2542	5073738	0	True				
ANR	5074172	Identifier	NULL		5073738	0					
ANR	5074173	ReturnStatement	return s ;	187:4:2556:2564	5073738	18	True				
ANR	5074174	Identifier	s		5073738	0					
ANR	5074175	ReturnType	static const char *		5073738	1					
ANR	5074176	Identifier	keyval_parse_one		5073738	2					
ANR	5074177	ParameterList	"QDict * qdict , const char * params , const char * implied_key , Error * * errp"		5073738	3					
ANR	5074178	Parameter	QDict * qdict	1:36:36:47	5073738	0	True				
ANR	5074179	ParameterType	QDict *		5073738	0					
ANR	5074180	Identifier	qdict		5073738	1					
ANR	5074181	Parameter	const char * params	1:50:50:67	5073738	1	True				
ANR	5074182	ParameterType	const char *		5073738	0					
ANR	5074183	Identifier	params		5073738	1					
ANR	5074184	Parameter	const char * implied_key	3:36:107:129	5073738	2	True				
ANR	5074185	ParameterType	const char *		5073738	0					
ANR	5074186	Identifier	implied_key		5073738	1					
ANR	5074187	Parameter	Error * * errp	5:36:169:180	5073738	3	True				
ANR	5074188	ParameterType	Error * *		5073738	0					
ANR	5074189	Identifier	errp		5073738	1					
ANR	5074190	CFGEntryNode	ENTRY		5073738		True				
ANR	5074191	CFGExitNode	EXIT		5073738		True				
ANR	5074192	InfiniteForNode	true		5073738		True				
ANR	5074193	InfiniteForNode	true		5073738		True				
ANR	5074194	Symbol	qdict		5073738						
ANR	5074195	Symbol	next		5073738						
ANR	5074196	Symbol	* s ++		5073738						
ANR	5074197	Symbol	cur		5073738						
ANR	5074198	Symbol	errp		5073738						
ANR	5074199	Symbol	* key		5073738						
ANR	5074200	Symbol	strcspn		5073738						
ANR	5074201	Symbol	* key_in_cur		5073738						
ANR	5074202	Symbol	key_end		5073738						
ANR	5074203	Symbol	strlen		5073738						
ANR	5074204	Symbol	qobject_to_qdict		5073738						
ANR	5074205	Symbol	len		5073738						
ANR	5074206	Symbol	qstring_new		5073738						
ANR	5074207	Symbol	key		5073738						
ANR	5074208	Symbol	ret		5073738						
ANR	5074209	Symbol	val		5073738						
ANR	5074210	Symbol	NULL		5073738						
ANR	5074211	Symbol	false		5073738						
ANR	5074212	Symbol	params		5073738						
ANR	5074213	Symbol	parse_qapi_name		5073738						
ANR	5074214	Symbol	key_in_cur		5073738						
ANR	5074215	Symbol	s		5073738						
ANR	5074216	Symbol	keyval_parse_put		5073738						
ANR	5074217	Symbol	* s		5073738						
ANR	5074218	Symbol	implied_key		5073738						
ANR	5074219	Symbol	* len		5073738						
