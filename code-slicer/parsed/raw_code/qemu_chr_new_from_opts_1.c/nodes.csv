command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6951016	File	/home/p4ultr4n/workplace/ReVeal/raw_code/qemu_chr_new_from_opts_1.c								
ANR	6951017	Function	qemu_chr_new_from_opts	1:0:0:1784							
ANR	6951018	FunctionDef	"qemu_chr_new_from_opts (QemuOpts * opts , void ( * init ) ( struct CharDriverState * s ))"		6951017	0					
ANR	6951019	CompoundStatement		5:0:135:1784	6951017	0					
ANR	6951020	IdentifierDeclStatement	CharDriverState * chr ;	7:4:142:162	6951017	0	True				
ANR	6951021	IdentifierDecl	* chr		6951017	0					
ANR	6951022	IdentifierDeclType	CharDriverState *		6951017	0					
ANR	6951023	Identifier	chr		6951017	1					
ANR	6951024	IdentifierDeclStatement	int i ;	9:4:169:174	6951017	1	True				
ANR	6951025	IdentifierDecl	i		6951017	0					
ANR	6951026	IdentifierDeclType	int		6951017	0					
ANR	6951027	Identifier	i		6951017	1					
ANR	6951028	IdentifierDeclStatement	int ret ;	11:4:181:188	6951017	2	True				
ANR	6951029	IdentifierDecl	ret		6951017	0					
ANR	6951030	IdentifierDeclType	int		6951017	0					
ANR	6951031	Identifier	ret		6951017	1					
ANR	6951032	IfStatement	if ( qemu_opts_id ( opts ) == NULL )		6951017	3					
ANR	6951033	Condition	qemu_opts_id ( opts ) == NULL	15:8:201:226	6951017	0	True				
ANR	6951034	EqualityExpression	qemu_opts_id ( opts ) == NULL		6951017	0		==			
ANR	6951035	CallExpression	qemu_opts_id ( opts )		6951017	0					
ANR	6951036	Callee	qemu_opts_id		6951017	0					
ANR	6951037	Identifier	qemu_opts_id		6951017	0					
ANR	6951038	ArgumentList	opts		6951017	1					
ANR	6951039	Argument	opts		6951017	0					
ANR	6951040	Identifier	opts		6951017	0					
ANR	6951041	Identifier	NULL		6951017	1					
ANR	6951042	CompoundStatement		11:36:93:93	6951017	1					
ANR	6951043	ExpressionStatement	"fprintf ( stderr , ""chardev: no id specified\\n"" )"	17:8:240:285	6951017	0	True				
ANR	6951044	CallExpression	"fprintf ( stderr , ""chardev: no id specified\\n"" )"		6951017	0					
ANR	6951045	Callee	fprintf		6951017	0					
ANR	6951046	Identifier	fprintf		6951017	0					
ANR	6951047	ArgumentList	stderr		6951017	1					
ANR	6951048	Argument	stderr		6951017	0					
ANR	6951049	Identifier	stderr		6951017	0					
ANR	6951050	Argument	"""chardev: no id specified\\n"""		6951017	1					
ANR	6951051	PrimaryExpression	"""chardev: no id specified\\n"""		6951017	0					
ANR	6951052	ReturnStatement	return NULL ;	19:8:296:307	6951017	1	True				
ANR	6951053	Identifier	NULL		6951017	0					
ANR	6951054	IfStatement	"if ( qemu_opt_get ( opts , ""backend"" ) == NULL )"		6951017	4					
ANR	6951055	Condition	"qemu_opt_get ( opts , ""backend"" ) == NULL"	25:8:327:363	6951017	0	True				
ANR	6951056	EqualityExpression	"qemu_opt_get ( opts , ""backend"" ) == NULL"		6951017	0		==			
ANR	6951057	CallExpression	"qemu_opt_get ( opts , ""backend"" )"		6951017	0					
ANR	6951058	Callee	qemu_opt_get		6951017	0					
ANR	6951059	Identifier	qemu_opt_get		6951017	0					
ANR	6951060	ArgumentList	opts		6951017	1					
ANR	6951061	Argument	opts		6951017	0					
ANR	6951062	Identifier	opts		6951017	0					
ANR	6951063	Argument	"""backend"""		6951017	1					
ANR	6951064	PrimaryExpression	"""backend"""		6951017	0					
ANR	6951065	Identifier	NULL		6951017	1					
ANR	6951066	CompoundStatement		21:47:230:230	6951017	1					
ANR	6951067	ExpressionStatement	"fprintf ( stderr , ""chardev: \\""%s\\"" missing backend\\n"" , qemu_opts_id ( opts ) )"	27:8:377:466	6951017	0	True				
ANR	6951068	CallExpression	"fprintf ( stderr , ""chardev: \\""%s\\"" missing backend\\n"" , qemu_opts_id ( opts ) )"		6951017	0					
ANR	6951069	Callee	fprintf		6951017	0					
ANR	6951070	Identifier	fprintf		6951017	0					
ANR	6951071	ArgumentList	stderr		6951017	1					
ANR	6951072	Argument	stderr		6951017	0					
ANR	6951073	Identifier	stderr		6951017	0					
ANR	6951074	Argument	"""chardev: \\""%s\\"" missing backend\\n"""		6951017	1					
ANR	6951075	PrimaryExpression	"""chardev: \\""%s\\"" missing backend\\n"""		6951017	0					
ANR	6951076	Argument	qemu_opts_id ( opts )		6951017	2					
ANR	6951077	CallExpression	qemu_opts_id ( opts )		6951017	0					
ANR	6951078	Callee	qemu_opts_id		6951017	0					
ANR	6951079	Identifier	qemu_opts_id		6951017	0					
ANR	6951080	ArgumentList	opts		6951017	1					
ANR	6951081	Argument	opts		6951017	0					
ANR	6951082	Identifier	opts		6951017	0					
ANR	6951083	ReturnStatement	return NULL ;	31:8:477:488	6951017	1	True				
ANR	6951084	Identifier	NULL		6951017	0					
ANR	6951085	ForStatement	for ( i = 0 ; i < ARRAY_SIZE ( backend_table ) ; i ++ )		6951017	5					
ANR	6951086	ForInit	i = 0 ;	35:9:507:512	6951017	0	True				
ANR	6951087	AssignmentExpression	i = 0		6951017	0		=			
ANR	6951088	Identifier	i		6951017	0					
ANR	6951089	PrimaryExpression	0		6951017	1					
ANR	6951090	Condition	i < ARRAY_SIZE ( backend_table )	35:16:514:542	6951017	1	True				
ANR	6951091	RelationalExpression	i < ARRAY_SIZE ( backend_table )		6951017	0		<			
ANR	6951092	Identifier	i		6951017	0					
ANR	6951093	CallExpression	ARRAY_SIZE ( backend_table )		6951017	1					
ANR	6951094	Callee	ARRAY_SIZE		6951017	0					
ANR	6951095	Identifier	ARRAY_SIZE		6951017	0					
ANR	6951096	ArgumentList	backend_table		6951017	1					
ANR	6951097	Argument	backend_table		6951017	0					
ANR	6951098	Identifier	backend_table		6951017	0					
ANR	6951099	PostIncDecOperationExpression	i ++	35:47:545:547	6951017	2	True				
ANR	6951100	Identifier	i		6951017	0					
ANR	6951101	IncDec	++		6951017	1					
ANR	6951102	CompoundStatement		31:52:414:414	6951017	3					
ANR	6951103	IfStatement	"if ( strcmp ( backend_table [ i ] . name , qemu_opt_get ( opts , ""backend"" ) ) == 0 )"		6951017	0					
ANR	6951104	Condition	"strcmp ( backend_table [ i ] . name , qemu_opt_get ( opts , ""backend"" ) ) == 0"	37:12:565:629	6951017	0	True				
ANR	6951105	EqualityExpression	"strcmp ( backend_table [ i ] . name , qemu_opt_get ( opts , ""backend"" ) ) == 0"		6951017	0		==			
ANR	6951106	CallExpression	"strcmp ( backend_table [ i ] . name , qemu_opt_get ( opts , ""backend"" ) )"		6951017	0					
ANR	6951107	Callee	strcmp		6951017	0					
ANR	6951108	Identifier	strcmp		6951017	0					
ANR	6951109	ArgumentList	backend_table [ i ] . name		6951017	1					
ANR	6951110	Argument	backend_table [ i ] . name		6951017	0					
ANR	6951111	MemberAccess	backend_table [ i ] . name		6951017	0					
ANR	6951112	ArrayIndexing	backend_table [ i ]		6951017	0					
ANR	6951113	Identifier	backend_table		6951017	0					
ANR	6951114	Identifier	i		6951017	1					
ANR	6951115	Identifier	name		6951017	1					
ANR	6951116	Argument	"qemu_opt_get ( opts , ""backend"" )"		6951017	1					
ANR	6951117	CallExpression	"qemu_opt_get ( opts , ""backend"" )"		6951017	0					
ANR	6951118	Callee	qemu_opt_get		6951017	0					
ANR	6951119	Identifier	qemu_opt_get		6951017	0					
ANR	6951120	ArgumentList	opts		6951017	1					
ANR	6951121	Argument	opts		6951017	0					
ANR	6951122	Identifier	opts		6951017	0					
ANR	6951123	Argument	"""backend"""		6951017	1					
ANR	6951124	PrimaryExpression	"""backend"""		6951017	0					
ANR	6951125	PrimaryExpression	0		6951017	1					
ANR	6951126	BreakStatement	break ;	39:12:645:650	6951017	1	True				
ANR	6951127	IfStatement	if ( i == ARRAY_SIZE ( backend_table ) )		6951017	6					
ANR	6951128	Condition	i == ARRAY_SIZE ( backend_table )	43:8:668:697	6951017	0	True				
ANR	6951129	EqualityExpression	i == ARRAY_SIZE ( backend_table )		6951017	0		==			
ANR	6951130	Identifier	i		6951017	0					
ANR	6951131	CallExpression	ARRAY_SIZE ( backend_table )		6951017	1					
ANR	6951132	Callee	ARRAY_SIZE		6951017	0					
ANR	6951133	Identifier	ARRAY_SIZE		6951017	0					
ANR	6951134	ArgumentList	backend_table		6951017	1					
ANR	6951135	Argument	backend_table		6951017	0					
ANR	6951136	Identifier	backend_table		6951017	0					
ANR	6951137	CompoundStatement		39:40:564:564	6951017	1					
ANR	6951138	ExpressionStatement	"fprintf ( stderr , ""chardev: backend \\""%s\\"" not found\\n"" , qemu_opt_get ( opts , ""backend"" ) )"	45:8:711:813	6951017	0	True				
ANR	6951139	CallExpression	"fprintf ( stderr , ""chardev: backend \\""%s\\"" not found\\n"" , qemu_opt_get ( opts , ""backend"" ) )"		6951017	0					
ANR	6951140	Callee	fprintf		6951017	0					
ANR	6951141	Identifier	fprintf		6951017	0					
ANR	6951142	ArgumentList	stderr		6951017	1					
ANR	6951143	Argument	stderr		6951017	0					
ANR	6951144	Identifier	stderr		6951017	0					
ANR	6951145	Argument	"""chardev: backend \\""%s\\"" not found\\n"""		6951017	1					
ANR	6951146	PrimaryExpression	"""chardev: backend \\""%s\\"" not found\\n"""		6951017	0					
ANR	6951147	Argument	"qemu_opt_get ( opts , ""backend"" )"		6951017	2					
ANR	6951148	CallExpression	"qemu_opt_get ( opts , ""backend"" )"		6951017	0					
ANR	6951149	Callee	qemu_opt_get		6951017	0					
ANR	6951150	Identifier	qemu_opt_get		6951017	0					
ANR	6951151	ArgumentList	opts		6951017	1					
ANR	6951152	Argument	opts		6951017	0					
ANR	6951153	Identifier	opts		6951017	0					
ANR	6951154	Argument	"""backend"""		6951017	1					
ANR	6951155	PrimaryExpression	"""backend"""		6951017	0					
ANR	6951156	ReturnStatement	return NULL ;	49:8:824:835	6951017	1	True				
ANR	6951157	Identifier	NULL		6951017	0					
ANR	6951158	ExpressionStatement	"ret = backend_table [ i ] . open ( opts , & chr )"	55:4:851:890	6951017	7	True				
ANR	6951159	AssignmentExpression	"ret = backend_table [ i ] . open ( opts , & chr )"		6951017	0		=			
ANR	6951160	Identifier	ret		6951017	0					
ANR	6951161	CallExpression	"backend_table [ i ] . open ( opts , & chr )"		6951017	1					
ANR	6951162	Callee	backend_table [ i ] . open		6951017	0					
ANR	6951163	MemberAccess	backend_table [ i ] . open		6951017	0					
ANR	6951164	ArrayIndexing	backend_table [ i ]		6951017	0					
ANR	6951165	Identifier	backend_table		6951017	0					
ANR	6951166	Identifier	i		6951017	1					
ANR	6951167	Identifier	open		6951017	1					
ANR	6951168	ArgumentList	opts		6951017	1					
ANR	6951169	Argument	opts		6951017	0					
ANR	6951170	Identifier	opts		6951017	0					
ANR	6951171	Argument	& chr		6951017	1					
ANR	6951172	UnaryOperationExpression	& chr		6951017	0					
ANR	6951173	UnaryOperator	&		6951017	0					
ANR	6951174	Identifier	chr		6951017	1					
ANR	6951175	IfStatement	if ( ret < 0 )		6951017	8					
ANR	6951176	Condition	ret < 0	57:8:901:907	6951017	0	True				
ANR	6951177	RelationalExpression	ret < 0		6951017	0		<			
ANR	6951178	Identifier	ret		6951017	0					
ANR	6951179	PrimaryExpression	0		6951017	1					
ANR	6951180	CompoundStatement		53:17:774:774	6951017	1					
ANR	6951181	ExpressionStatement	"fprintf ( stderr , ""chardev: opening backend \\""%s\\"" failed: %s\\n"" , qemu_opt_get ( opts , ""backend"" ) , strerror ( - ret ) )"	59:8:921:1048	6951017	0	True				
ANR	6951182	CallExpression	"fprintf ( stderr , ""chardev: opening backend \\""%s\\"" failed: %s\\n"" , qemu_opt_get ( opts , ""backend"" ) , strerror ( - ret ) )"		6951017	0					
ANR	6951183	Callee	fprintf		6951017	0					
ANR	6951184	Identifier	fprintf		6951017	0					
ANR	6951185	ArgumentList	stderr		6951017	1					
ANR	6951186	Argument	stderr		6951017	0					
ANR	6951187	Identifier	stderr		6951017	0					
ANR	6951188	Argument	"""chardev: opening backend \\""%s\\"" failed: %s\\n"""		6951017	1					
ANR	6951189	PrimaryExpression	"""chardev: opening backend \\""%s\\"" failed: %s\\n"""		6951017	0					
ANR	6951190	Argument	"qemu_opt_get ( opts , ""backend"" )"		6951017	2					
ANR	6951191	CallExpression	"qemu_opt_get ( opts , ""backend"" )"		6951017	0					
ANR	6951192	Callee	qemu_opt_get		6951017	0					
ANR	6951193	Identifier	qemu_opt_get		6951017	0					
ANR	6951194	ArgumentList	opts		6951017	1					
ANR	6951195	Argument	opts		6951017	0					
ANR	6951196	Identifier	opts		6951017	0					
ANR	6951197	Argument	"""backend"""		6951017	1					
ANR	6951198	PrimaryExpression	"""backend"""		6951017	0					
ANR	6951199	Argument	strerror ( - ret )		6951017	3					
ANR	6951200	CallExpression	strerror ( - ret )		6951017	0					
ANR	6951201	Callee	strerror		6951017	0					
ANR	6951202	Identifier	strerror		6951017	0					
ANR	6951203	ArgumentList	- ret		6951017	1					
ANR	6951204	Argument	- ret		6951017	0					
ANR	6951205	UnaryOperationExpression	- ret		6951017	0					
ANR	6951206	UnaryOperator	-		6951017	0					
ANR	6951207	Identifier	ret		6951017	1					
ANR	6951208	ReturnStatement	return NULL ;	63:8:1059:1070	6951017	1	True				
ANR	6951209	Identifier	NULL		6951017	0					
ANR	6951210	IfStatement	if ( ! chr -> filename )		6951017	9					
ANR	6951211	Condition	! chr -> filename	69:8:1090:1103	6951017	0	True				
ANR	6951212	UnaryOperationExpression	! chr -> filename		6951017	0					
ANR	6951213	UnaryOperator	!		6951017	0					
ANR	6951214	PtrMemberAccess	chr -> filename		6951017	1					
ANR	6951215	Identifier	chr		6951017	0					
ANR	6951216	Identifier	filename		6951017	1					
ANR	6951217	ExpressionStatement	"chr -> filename = g_strdup ( qemu_opt_get ( opts , ""backend"" ) )"	71:8:1115:1170	6951017	1	True				
ANR	6951218	AssignmentExpression	"chr -> filename = g_strdup ( qemu_opt_get ( opts , ""backend"" ) )"		6951017	0		=			
ANR	6951219	PtrMemberAccess	chr -> filename		6951017	0					
ANR	6951220	Identifier	chr		6951017	0					
ANR	6951221	Identifier	filename		6951017	1					
ANR	6951222	CallExpression	"g_strdup ( qemu_opt_get ( opts , ""backend"" ) )"		6951017	1					
ANR	6951223	Callee	g_strdup		6951017	0					
ANR	6951224	Identifier	g_strdup		6951017	0					
ANR	6951225	ArgumentList	"qemu_opt_get ( opts , ""backend"" )"		6951017	1					
ANR	6951226	Argument	"qemu_opt_get ( opts , ""backend"" )"		6951017	0					
ANR	6951227	CallExpression	"qemu_opt_get ( opts , ""backend"" )"		6951017	0					
ANR	6951228	Callee	qemu_opt_get		6951017	0					
ANR	6951229	Identifier	qemu_opt_get		6951017	0					
ANR	6951230	ArgumentList	opts		6951017	1					
ANR	6951231	Argument	opts		6951017	0					
ANR	6951232	Identifier	opts		6951017	0					
ANR	6951233	Argument	"""backend"""		6951017	1					
ANR	6951234	PrimaryExpression	"""backend"""		6951017	0					
ANR	6951235	ExpressionStatement	chr -> init = init	73:4:1177:1193	6951017	10	True				
ANR	6951236	AssignmentExpression	chr -> init = init		6951017	0		=			
ANR	6951237	PtrMemberAccess	chr -> init		6951017	0					
ANR	6951238	Identifier	chr		6951017	0					
ANR	6951239	Identifier	init		6951017	1					
ANR	6951240	Identifier	init		6951017	1					
ANR	6951241	ExpressionStatement	"QTAILQ_INSERT_TAIL ( & chardevs , chr , next )"	75:4:1200:1240	6951017	11	True				
ANR	6951242	CallExpression	"QTAILQ_INSERT_TAIL ( & chardevs , chr , next )"		6951017	0					
ANR	6951243	Callee	QTAILQ_INSERT_TAIL		6951017	0					
ANR	6951244	Identifier	QTAILQ_INSERT_TAIL		6951017	0					
ANR	6951245	ArgumentList	& chardevs		6951017	1					
ANR	6951246	Argument	& chardevs		6951017	0					
ANR	6951247	UnaryOperationExpression	& chardevs		6951017	0					
ANR	6951248	UnaryOperator	&		6951017	0					
ANR	6951249	Identifier	chardevs		6951017	1					
ANR	6951250	Argument	chr		6951017	1					
ANR	6951251	Identifier	chr		6951017	0					
ANR	6951252	Argument	next		6951017	2					
ANR	6951253	Identifier	next		6951017	0					
ANR	6951254	IfStatement	"if ( qemu_opt_get_bool ( opts , ""mux"" , 0 ) )"		6951017	12					
ANR	6951255	Condition	"qemu_opt_get_bool ( opts , ""mux"" , 0 )"	79:8:1253:1285	6951017	0	True				
ANR	6951256	CallExpression	"qemu_opt_get_bool ( opts , ""mux"" , 0 )"		6951017	0					
ANR	6951257	Callee	qemu_opt_get_bool		6951017	0					
ANR	6951258	Identifier	qemu_opt_get_bool		6951017	0					
ANR	6951259	ArgumentList	opts		6951017	1					
ANR	6951260	Argument	opts		6951017	0					
ANR	6951261	Identifier	opts		6951017	0					
ANR	6951262	Argument	"""mux"""		6951017	1					
ANR	6951263	PrimaryExpression	"""mux"""		6951017	0					
ANR	6951264	Argument	0		6951017	2					
ANR	6951265	PrimaryExpression	0		6951017	0					
ANR	6951266	CompoundStatement		79:8:1201:1241	6951017	1					
ANR	6951267	IdentifierDeclStatement	CharDriverState * base = chr ;	81:8:1299:1326	6951017	0	True				
ANR	6951268	IdentifierDecl	* base = chr		6951017	0					
ANR	6951269	IdentifierDeclType	CharDriverState *		6951017	0					
ANR	6951270	Identifier	base		6951017	1					
ANR	6951271	AssignmentExpression	* base = chr		6951017	2		=			
ANR	6951272	Identifier	chr		6951017	0					
ANR	6951273	Identifier	chr		6951017	1					
ANR	6951274	IdentifierDeclStatement	int len = strlen ( qemu_opts_id ( opts ) ) + 6 ;	83:8:1337:1377	6951017	1	True				
ANR	6951275	IdentifierDecl	len = strlen ( qemu_opts_id ( opts ) ) + 6		6951017	0					
ANR	6951276	IdentifierDeclType	int		6951017	0					
ANR	6951277	Identifier	len		6951017	1					
ANR	6951278	AssignmentExpression	len = strlen ( qemu_opts_id ( opts ) ) + 6		6951017	2		=			
ANR	6951279	Identifier	len		6951017	0					
ANR	6951280	AdditiveExpression	strlen ( qemu_opts_id ( opts ) ) + 6		6951017	1		+			
ANR	6951281	CallExpression	strlen ( qemu_opts_id ( opts ) )		6951017	0					
ANR	6951282	Callee	strlen		6951017	0					
ANR	6951283	Identifier	strlen		6951017	0					
ANR	6951284	ArgumentList	qemu_opts_id ( opts )		6951017	1					
ANR	6951285	Argument	qemu_opts_id ( opts )		6951017	0					
ANR	6951286	CallExpression	qemu_opts_id ( opts )		6951017	0					
ANR	6951287	Callee	qemu_opts_id		6951017	0					
ANR	6951288	Identifier	qemu_opts_id		6951017	0					
ANR	6951289	ArgumentList	opts		6951017	1					
ANR	6951290	Argument	opts		6951017	0					
ANR	6951291	Identifier	opts		6951017	0					
ANR	6951292	PrimaryExpression	6		6951017	1					
ANR	6951293	ExpressionStatement	base -> label = g_malloc ( len )	85:8:1388:1415	6951017	2	True				
ANR	6951294	AssignmentExpression	base -> label = g_malloc ( len )		6951017	0		=			
ANR	6951295	PtrMemberAccess	base -> label		6951017	0					
ANR	6951296	Identifier	base		6951017	0					
ANR	6951297	Identifier	label		6951017	1					
ANR	6951298	CallExpression	g_malloc ( len )		6951017	1					
ANR	6951299	Callee	g_malloc		6951017	0					
ANR	6951300	Identifier	g_malloc		6951017	0					
ANR	6951301	ArgumentList	len		6951017	1					
ANR	6951302	Argument	len		6951017	0					
ANR	6951303	Identifier	len		6951017	0					
ANR	6951304	ExpressionStatement	"snprintf ( base -> label , len , ""%s-base"" , qemu_opts_id ( opts ) )"	87:8:1426:1483	6951017	3	True				
ANR	6951305	CallExpression	"snprintf ( base -> label , len , ""%s-base"" , qemu_opts_id ( opts ) )"		6951017	0					
ANR	6951306	Callee	snprintf		6951017	0					
ANR	6951307	Identifier	snprintf		6951017	0					
ANR	6951308	ArgumentList	base -> label		6951017	1					
ANR	6951309	Argument	base -> label		6951017	0					
ANR	6951310	PtrMemberAccess	base -> label		6951017	0					
ANR	6951311	Identifier	base		6951017	0					
ANR	6951312	Identifier	label		6951017	1					
ANR	6951313	Argument	len		6951017	1					
ANR	6951314	Identifier	len		6951017	0					
ANR	6951315	Argument	"""%s-base"""		6951017	2					
ANR	6951316	PrimaryExpression	"""%s-base"""		6951017	0					
ANR	6951317	Argument	qemu_opts_id ( opts )		6951017	3					
ANR	6951318	CallExpression	qemu_opts_id ( opts )		6951017	0					
ANR	6951319	Callee	qemu_opts_id		6951017	0					
ANR	6951320	Identifier	qemu_opts_id		6951017	0					
ANR	6951321	ArgumentList	opts		6951017	1					
ANR	6951322	Argument	opts		6951017	0					
ANR	6951323	Identifier	opts		6951017	0					
ANR	6951324	ExpressionStatement	chr = qemu_chr_open_mux ( base )	89:8:1494:1523	6951017	4	True				
ANR	6951325	AssignmentExpression	chr = qemu_chr_open_mux ( base )		6951017	0		=			
ANR	6951326	Identifier	chr		6951017	0					
ANR	6951327	CallExpression	qemu_chr_open_mux ( base )		6951017	1					
ANR	6951328	Callee	qemu_chr_open_mux		6951017	0					
ANR	6951329	Identifier	qemu_chr_open_mux		6951017	0					
ANR	6951330	ArgumentList	base		6951017	1					
ANR	6951331	Argument	base		6951017	0					
ANR	6951332	Identifier	base		6951017	0					
ANR	6951333	ExpressionStatement	chr -> filename = base -> filename	91:8:1534:1564	6951017	5	True				
ANR	6951334	AssignmentExpression	chr -> filename = base -> filename		6951017	0		=			
ANR	6951335	PtrMemberAccess	chr -> filename		6951017	0					
ANR	6951336	Identifier	chr		6951017	0					
ANR	6951337	Identifier	filename		6951017	1					
ANR	6951338	PtrMemberAccess	base -> filename		6951017	1					
ANR	6951339	Identifier	base		6951017	0					
ANR	6951340	Identifier	filename		6951017	1					
ANR	6951341	ExpressionStatement	chr -> avail_connections = MAX_MUX	93:8:1575:1607	6951017	6	True				
ANR	6951342	AssignmentExpression	chr -> avail_connections = MAX_MUX		6951017	0		=			
ANR	6951343	PtrMemberAccess	chr -> avail_connections		6951017	0					
ANR	6951344	Identifier	chr		6951017	0					
ANR	6951345	Identifier	avail_connections		6951017	1					
ANR	6951346	Identifier	MAX_MUX		6951017	1					
ANR	6951347	ExpressionStatement	"QTAILQ_INSERT_TAIL ( & chardevs , chr , next )"	95:8:1618:1658	6951017	7	True				
ANR	6951348	CallExpression	"QTAILQ_INSERT_TAIL ( & chardevs , chr , next )"		6951017	0					
ANR	6951349	Callee	QTAILQ_INSERT_TAIL		6951017	0					
ANR	6951350	Identifier	QTAILQ_INSERT_TAIL		6951017	0					
ANR	6951351	ArgumentList	& chardevs		6951017	1					
ANR	6951352	Argument	& chardevs		6951017	0					
ANR	6951353	UnaryOperationExpression	& chardevs		6951017	0					
ANR	6951354	UnaryOperator	&		6951017	0					
ANR	6951355	Identifier	chardevs		6951017	1					
ANR	6951356	Argument	chr		6951017	1					
ANR	6951357	Identifier	chr		6951017	0					
ANR	6951358	Argument	next		6951017	2					
ANR	6951359	Identifier	next		6951017	0					
ANR	6951360	ElseStatement	else		6951017	0					
ANR	6951361	CompoundStatement		93:11:1536:1536	6951017	0					
ANR	6951362	ExpressionStatement	chr -> avail_connections = 1	99:8:1683:1709	6951017	0	True				
ANR	6951363	AssignmentExpression	chr -> avail_connections = 1		6951017	0		=			
ANR	6951364	PtrMemberAccess	chr -> avail_connections		6951017	0					
ANR	6951365	Identifier	chr		6951017	0					
ANR	6951366	Identifier	avail_connections		6951017	1					
ANR	6951367	PrimaryExpression	1		6951017	1					
ANR	6951368	ExpressionStatement	chr -> label = g_strdup ( qemu_opts_id ( opts ) )	103:4:1723:1764	6951017	13	True				
ANR	6951369	AssignmentExpression	chr -> label = g_strdup ( qemu_opts_id ( opts ) )		6951017	0		=			
ANR	6951370	PtrMemberAccess	chr -> label		6951017	0					
ANR	6951371	Identifier	chr		6951017	0					
ANR	6951372	Identifier	label		6951017	1					
ANR	6951373	CallExpression	g_strdup ( qemu_opts_id ( opts ) )		6951017	1					
ANR	6951374	Callee	g_strdup		6951017	0					
ANR	6951375	Identifier	g_strdup		6951017	0					
ANR	6951376	ArgumentList	qemu_opts_id ( opts )		6951017	1					
ANR	6951377	Argument	qemu_opts_id ( opts )		6951017	0					
ANR	6951378	CallExpression	qemu_opts_id ( opts )		6951017	0					
ANR	6951379	Callee	qemu_opts_id		6951017	0					
ANR	6951380	Identifier	qemu_opts_id		6951017	0					
ANR	6951381	ArgumentList	opts		6951017	1					
ANR	6951382	Argument	opts		6951017	0					
ANR	6951383	Identifier	opts		6951017	0					
ANR	6951384	ReturnStatement	return chr ;	105:4:1771:1781	6951017	14	True				
ANR	6951385	Identifier	chr		6951017	0					
ANR	6951386	ReturnType	CharDriverState *		6951017	1					
ANR	6951387	Identifier	qemu_chr_new_from_opts		6951017	2					
ANR	6951388	ParameterList	"QemuOpts * opts , void ( * init ) ( struct CharDriverState * s )"		6951017	3					
ANR	6951389	Parameter	QemuOpts * opts	1:40:40:53	6951017	0	True				
ANR	6951390	ParameterType	QemuOpts *		6951017	0					
ANR	6951391	Identifier	opts		6951017	1					
ANR	6951392	Parameter	void ( * init ) ( struct CharDriverState * s )	3:36:93:131	6951017	1	True				
ANR	6951393	ParameterType	(( struct CharDriverState * s ) void) *		6951017	0					
ANR	6951394	Identifier	init		6951017	1					
ANR	6951395	CFGEntryNode	ENTRY		6951017		True				
ANR	6951396	CFGExitNode	EXIT		6951017		True				
ANR	6951397	Symbol	next		6951017						
ANR	6951398	Symbol	& chardevs		6951017						
ANR	6951399	Symbol	qemu_opt_get		6951017						
ANR	6951400	Symbol	qemu_chr_open_mux		6951017						
ANR	6951401	Symbol	base -> filename		6951017						
ANR	6951402	Symbol	backend_table [ i ] . name		6951017						
ANR	6951403	Symbol	backend_table [ i ] . open		6951017						
ANR	6951404	Symbol	strlen		6951017						
ANR	6951405	Symbol	g_malloc		6951017						
ANR	6951406	Symbol	opts		6951017						
ANR	6951407	Symbol	& chr		6951017						
ANR	6951408	Symbol	len		6951017						
ANR	6951409	Symbol	g_strdup		6951017						
ANR	6951410	Symbol	qemu_opt_get_bool		6951017						
ANR	6951411	Symbol	MAX_MUX		6951017						
ANR	6951412	Symbol	backend_table		6951017						
ANR	6951413	Symbol	* base		6951017						
ANR	6951414	Symbol	* backend_table		6951017						
ANR	6951415	Symbol	qemu_opts_id		6951017						
ANR	6951416	Symbol	ret		6951017						
ANR	6951417	Symbol	ARRAY_SIZE		6951017						
ANR	6951418	Symbol	strcmp		6951017						
ANR	6951419	Symbol	init		6951017						
ANR	6951420	Symbol	NULL		6951017						
ANR	6951421	Symbol	chr -> filename		6951017						
ANR	6951422	Symbol	* chr		6951017						
ANR	6951423	Symbol	i		6951017						
ANR	6951424	Symbol	chr		6951017						
ANR	6951425	Symbol	stderr		6951017						
ANR	6951426	Symbol	strerror		6951017						
ANR	6951427	Symbol	* i		6951017						
ANR	6951428	Symbol	chr -> init		6951017						
ANR	6951429	Symbol	chr -> label		6951017						
ANR	6951430	Symbol	chr -> avail_connections		6951017						
ANR	6951431	Symbol	base -> label		6951017						
ANR	6951432	Symbol	base		6951017						
