command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6968572	File	/home/p4ultr4n/workplace/ReVeal/raw_code/qemu_chr_parse_vc_0.c								
ANR	6968573	Function	qemu_chr_parse_vc	1:0:0:794							
ANR	6968574	FunctionDef	"qemu_chr_parse_vc (QemuOpts * opts , ChardevBackend * backend , Error * * errp)"		6968573	0					
ANR	6968575	CompoundStatement		5:0:117:794	6968573	0					
ANR	6968576	IdentifierDeclStatement	int val ;	7:4:124:131	6968573	0	True				
ANR	6968577	IdentifierDecl	val		6968573	0					
ANR	6968578	IdentifierDeclType	int		6968573	0					
ANR	6968579	Identifier	val		6968573	1					
ANR	6968580	ExpressionStatement	"backend -> vc = g_new0 ( ChardevVC , 1 )"	11:4:140:174	6968573	1	True				
ANR	6968581	AssignmentExpression	"backend -> vc = g_new0 ( ChardevVC , 1 )"		6968573	0		=			
ANR	6968582	PtrMemberAccess	backend -> vc		6968573	0					
ANR	6968583	Identifier	backend		6968573	0					
ANR	6968584	Identifier	vc		6968573	1					
ANR	6968585	CallExpression	"g_new0 ( ChardevVC , 1 )"		6968573	1					
ANR	6968586	Callee	g_new0		6968573	0					
ANR	6968587	Identifier	g_new0		6968573	0					
ANR	6968588	ArgumentList	ChardevVC		6968573	1					
ANR	6968589	Argument	ChardevVC		6968573	0					
ANR	6968590	Identifier	ChardevVC		6968573	0					
ANR	6968591	Argument	1		6968573	1					
ANR	6968592	PrimaryExpression	1		6968573	0					
ANR	6968593	ExpressionStatement	"val = qemu_opt_get_number ( opts , ""width"" , 0 )"	15:4:183:226	6968573	2	True				
ANR	6968594	AssignmentExpression	"val = qemu_opt_get_number ( opts , ""width"" , 0 )"		6968573	0		=			
ANR	6968595	Identifier	val		6968573	0					
ANR	6968596	CallExpression	"qemu_opt_get_number ( opts , ""width"" , 0 )"		6968573	1					
ANR	6968597	Callee	qemu_opt_get_number		6968573	0					
ANR	6968598	Identifier	qemu_opt_get_number		6968573	0					
ANR	6968599	ArgumentList	opts		6968573	1					
ANR	6968600	Argument	opts		6968573	0					
ANR	6968601	Identifier	opts		6968573	0					
ANR	6968602	Argument	"""width"""		6968573	1					
ANR	6968603	PrimaryExpression	"""width"""		6968573	0					
ANR	6968604	Argument	0		6968573	2					
ANR	6968605	PrimaryExpression	0		6968573	0					
ANR	6968606	IfStatement	if ( val != 0 )		6968573	3					
ANR	6968607	Condition	val != 0	17:8:237:244	6968573	0	True				
ANR	6968608	EqualityExpression	val != 0		6968573	0		!=			
ANR	6968609	Identifier	val		6968573	0					
ANR	6968610	PrimaryExpression	0		6968573	1					
ANR	6968611	CompoundStatement		13:18:129:129	6968573	1					
ANR	6968612	ExpressionStatement	backend -> vc -> has_width = true	19:8:258:287	6968573	0	True				
ANR	6968613	AssignmentExpression	backend -> vc -> has_width = true		6968573	0		=			
ANR	6968614	PtrMemberAccess	backend -> vc -> has_width		6968573	0					
ANR	6968615	PtrMemberAccess	backend -> vc		6968573	0					
ANR	6968616	Identifier	backend		6968573	0					
ANR	6968617	Identifier	vc		6968573	1					
ANR	6968618	Identifier	has_width		6968573	1					
ANR	6968619	Identifier	true		6968573	1					
ANR	6968620	ExpressionStatement	backend -> vc -> width = val	21:8:298:322	6968573	1	True				
ANR	6968621	AssignmentExpression	backend -> vc -> width = val		6968573	0		=			
ANR	6968622	PtrMemberAccess	backend -> vc -> width		6968573	0					
ANR	6968623	PtrMemberAccess	backend -> vc		6968573	0					
ANR	6968624	Identifier	backend		6968573	0					
ANR	6968625	Identifier	vc		6968573	1					
ANR	6968626	Identifier	width		6968573	1					
ANR	6968627	Identifier	val		6968573	1					
ANR	6968628	ExpressionStatement	"val = qemu_opt_get_number ( opts , ""height"" , 0 )"	27:4:338:382	6968573	4	True				
ANR	6968629	AssignmentExpression	"val = qemu_opt_get_number ( opts , ""height"" , 0 )"		6968573	0		=			
ANR	6968630	Identifier	val		6968573	0					
ANR	6968631	CallExpression	"qemu_opt_get_number ( opts , ""height"" , 0 )"		6968573	1					
ANR	6968632	Callee	qemu_opt_get_number		6968573	0					
ANR	6968633	Identifier	qemu_opt_get_number		6968573	0					
ANR	6968634	ArgumentList	opts		6968573	1					
ANR	6968635	Argument	opts		6968573	0					
ANR	6968636	Identifier	opts		6968573	0					
ANR	6968637	Argument	"""height"""		6968573	1					
ANR	6968638	PrimaryExpression	"""height"""		6968573	0					
ANR	6968639	Argument	0		6968573	2					
ANR	6968640	PrimaryExpression	0		6968573	0					
ANR	6968641	IfStatement	if ( val != 0 )		6968573	5					
ANR	6968642	Condition	val != 0	29:8:393:400	6968573	0	True				
ANR	6968643	EqualityExpression	val != 0		6968573	0		!=			
ANR	6968644	Identifier	val		6968573	0					
ANR	6968645	PrimaryExpression	0		6968573	1					
ANR	6968646	CompoundStatement		25:18:285:285	6968573	1					
ANR	6968647	ExpressionStatement	backend -> vc -> has_height = true	31:8:414:444	6968573	0	True				
ANR	6968648	AssignmentExpression	backend -> vc -> has_height = true		6968573	0		=			
ANR	6968649	PtrMemberAccess	backend -> vc -> has_height		6968573	0					
ANR	6968650	PtrMemberAccess	backend -> vc		6968573	0					
ANR	6968651	Identifier	backend		6968573	0					
ANR	6968652	Identifier	vc		6968573	1					
ANR	6968653	Identifier	has_height		6968573	1					
ANR	6968654	Identifier	true		6968573	1					
ANR	6968655	ExpressionStatement	backend -> vc -> height = val	33:8:455:480	6968573	1	True				
ANR	6968656	AssignmentExpression	backend -> vc -> height = val		6968573	0		=			
ANR	6968657	PtrMemberAccess	backend -> vc -> height		6968573	0					
ANR	6968658	PtrMemberAccess	backend -> vc		6968573	0					
ANR	6968659	Identifier	backend		6968573	0					
ANR	6968660	Identifier	vc		6968573	1					
ANR	6968661	Identifier	height		6968573	1					
ANR	6968662	Identifier	val		6968573	1					
ANR	6968663	ExpressionStatement	"val = qemu_opt_get_number ( opts , ""cols"" , 0 )"	39:4:496:538	6968573	6	True				
ANR	6968664	AssignmentExpression	"val = qemu_opt_get_number ( opts , ""cols"" , 0 )"		6968573	0		=			
ANR	6968665	Identifier	val		6968573	0					
ANR	6968666	CallExpression	"qemu_opt_get_number ( opts , ""cols"" , 0 )"		6968573	1					
ANR	6968667	Callee	qemu_opt_get_number		6968573	0					
ANR	6968668	Identifier	qemu_opt_get_number		6968573	0					
ANR	6968669	ArgumentList	opts		6968573	1					
ANR	6968670	Argument	opts		6968573	0					
ANR	6968671	Identifier	opts		6968573	0					
ANR	6968672	Argument	"""cols"""		6968573	1					
ANR	6968673	PrimaryExpression	"""cols"""		6968573	0					
ANR	6968674	Argument	0		6968573	2					
ANR	6968675	PrimaryExpression	0		6968573	0					
ANR	6968676	IfStatement	if ( val != 0 )		6968573	7					
ANR	6968677	Condition	val != 0	41:8:549:556	6968573	0	True				
ANR	6968678	EqualityExpression	val != 0		6968573	0		!=			
ANR	6968679	Identifier	val		6968573	0					
ANR	6968680	PrimaryExpression	0		6968573	1					
ANR	6968681	CompoundStatement		37:18:441:441	6968573	1					
ANR	6968682	ExpressionStatement	backend -> vc -> has_cols = true	43:8:570:598	6968573	0	True				
ANR	6968683	AssignmentExpression	backend -> vc -> has_cols = true		6968573	0		=			
ANR	6968684	PtrMemberAccess	backend -> vc -> has_cols		6968573	0					
ANR	6968685	PtrMemberAccess	backend -> vc		6968573	0					
ANR	6968686	Identifier	backend		6968573	0					
ANR	6968687	Identifier	vc		6968573	1					
ANR	6968688	Identifier	has_cols		6968573	1					
ANR	6968689	Identifier	true		6968573	1					
ANR	6968690	ExpressionStatement	backend -> vc -> cols = val	45:8:609:632	6968573	1	True				
ANR	6968691	AssignmentExpression	backend -> vc -> cols = val		6968573	0		=			
ANR	6968692	PtrMemberAccess	backend -> vc -> cols		6968573	0					
ANR	6968693	PtrMemberAccess	backend -> vc		6968573	0					
ANR	6968694	Identifier	backend		6968573	0					
ANR	6968695	Identifier	vc		6968573	1					
ANR	6968696	Identifier	cols		6968573	1					
ANR	6968697	Identifier	val		6968573	1					
ANR	6968698	ExpressionStatement	"val = qemu_opt_get_number ( opts , ""rows"" , 0 )"	51:4:648:690	6968573	8	True				
ANR	6968699	AssignmentExpression	"val = qemu_opt_get_number ( opts , ""rows"" , 0 )"		6968573	0		=			
ANR	6968700	Identifier	val		6968573	0					
ANR	6968701	CallExpression	"qemu_opt_get_number ( opts , ""rows"" , 0 )"		6968573	1					
ANR	6968702	Callee	qemu_opt_get_number		6968573	0					
ANR	6968703	Identifier	qemu_opt_get_number		6968573	0					
ANR	6968704	ArgumentList	opts		6968573	1					
ANR	6968705	Argument	opts		6968573	0					
ANR	6968706	Identifier	opts		6968573	0					
ANR	6968707	Argument	"""rows"""		6968573	1					
ANR	6968708	PrimaryExpression	"""rows"""		6968573	0					
ANR	6968709	Argument	0		6968573	2					
ANR	6968710	PrimaryExpression	0		6968573	0					
ANR	6968711	IfStatement	if ( val != 0 )		6968573	9					
ANR	6968712	Condition	val != 0	53:8:701:708	6968573	0	True				
ANR	6968713	EqualityExpression	val != 0		6968573	0		!=			
ANR	6968714	Identifier	val		6968573	0					
ANR	6968715	PrimaryExpression	0		6968573	1					
ANR	6968716	CompoundStatement		49:18:593:593	6968573	1					
ANR	6968717	ExpressionStatement	backend -> vc -> has_rows = true	55:8:722:750	6968573	0	True				
ANR	6968718	AssignmentExpression	backend -> vc -> has_rows = true		6968573	0		=			
ANR	6968719	PtrMemberAccess	backend -> vc -> has_rows		6968573	0					
ANR	6968720	PtrMemberAccess	backend -> vc		6968573	0					
ANR	6968721	Identifier	backend		6968573	0					
ANR	6968722	Identifier	vc		6968573	1					
ANR	6968723	Identifier	has_rows		6968573	1					
ANR	6968724	Identifier	true		6968573	1					
ANR	6968725	ExpressionStatement	backend -> vc -> rows = val	57:8:761:784	6968573	1	True				
ANR	6968726	AssignmentExpression	backend -> vc -> rows = val		6968573	0		=			
ANR	6968727	PtrMemberAccess	backend -> vc -> rows		6968573	0					
ANR	6968728	PtrMemberAccess	backend -> vc		6968573	0					
ANR	6968729	Identifier	backend		6968573	0					
ANR	6968730	Identifier	vc		6968573	1					
ANR	6968731	Identifier	rows		6968573	1					
ANR	6968732	Identifier	val		6968573	1					
ANR	6968733	ReturnType	static void		6968573	1					
ANR	6968734	Identifier	qemu_chr_parse_vc		6968573	2					
ANR	6968735	ParameterList	"QemuOpts * opts , ChardevBackend * backend , Error * * errp"		6968573	3					
ANR	6968736	Parameter	QemuOpts * opts	1:30:30:43	6968573	0	True				
ANR	6968737	ParameterType	QemuOpts *		6968573	0					
ANR	6968738	Identifier	opts		6968573	1					
ANR	6968739	Parameter	ChardevBackend * backend	1:46:46:68	6968573	1	True				
ANR	6968740	ParameterType	ChardevBackend *		6968573	0					
ANR	6968741	Identifier	backend		6968573	1					
ANR	6968742	Parameter	Error * * errp	3:30:102:113	6968573	2	True				
ANR	6968743	ParameterType	Error * *		6968573	0					
ANR	6968744	Identifier	errp		6968573	1					
ANR	6968745	CFGEntryNode	ENTRY		6968573		True				
ANR	6968746	CFGExitNode	EXIT		6968573		True				
ANR	6968747	Symbol	val		6968573						
ANR	6968748	Symbol	backend -> vc -> has_rows		6968573						
ANR	6968749	Symbol	backend -> vc -> has_cols		6968573						
ANR	6968750	Symbol	errp		6968573						
ANR	6968751	Symbol	qemu_opt_get_number		6968573						
ANR	6968752	Symbol	backend -> vc -> width		6968573						
ANR	6968753	Symbol	backend -> vc -> has_height		6968573						
ANR	6968754	Symbol	* * backend		6968573						
ANR	6968755	Symbol	backend -> vc -> height		6968573						
ANR	6968756	Symbol	* backend -> vc		6968573						
ANR	6968757	Symbol	backend -> vc		6968573						
ANR	6968758	Symbol	backend -> vc -> rows		6968573						
ANR	6968759	Symbol	backend -> vc -> has_width		6968573						
ANR	6968760	Symbol	* backend		6968573						
ANR	6968761	Symbol	opts		6968573						
ANR	6968762	Symbol	ChardevVC		6968573						
ANR	6968763	Symbol	true		6968573						
ANR	6968764	Symbol	g_new0		6968573						
ANR	6968765	Symbol	backend		6968573						
ANR	6968766	Symbol	backend -> vc -> cols		6968573						
