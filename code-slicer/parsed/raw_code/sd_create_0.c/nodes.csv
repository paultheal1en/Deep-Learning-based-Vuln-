command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	7665709	File	/home/p4ultr4n/workplace/ReVeal/raw_code/sd_create_0.c								
ANR	7665710	Function	sd_create	1:0:0:2850							
ANR	7665711	FunctionDef	"sd_create (const char * filename , QEMUOptionParameter * options , Error * * errp)"		7665710	0					
ANR	7665712	CompoundStatement		5:0:110:2850	7665710	0					
ANR	7665713	IdentifierDeclStatement	int ret = 0 ;	7:4:117:128	7665710	0	True				
ANR	7665714	IdentifierDecl	ret = 0		7665710	0					
ANR	7665715	IdentifierDeclType	int		7665710	0					
ANR	7665716	Identifier	ret		7665710	1					
ANR	7665717	AssignmentExpression	ret = 0		7665710	2		=			
ANR	7665718	Identifier	ret		7665710	0					
ANR	7665719	PrimaryExpression	0		7665710	1					
ANR	7665720	IdentifierDeclStatement	uint32_t vid = 0 ;	9:4:135:151	7665710	1	True				
ANR	7665721	IdentifierDecl	vid = 0		7665710	0					
ANR	7665722	IdentifierDeclType	uint32_t		7665710	0					
ANR	7665723	Identifier	vid		7665710	1					
ANR	7665724	AssignmentExpression	vid = 0		7665710	2		=			
ANR	7665725	Identifier	vid		7665710	0					
ANR	7665726	PrimaryExpression	0		7665710	1					
ANR	7665727	IdentifierDeclStatement	char * backing_file = NULL ;	11:4:158:183	7665710	2	True				
ANR	7665728	IdentifierDecl	* backing_file = NULL		7665710	0					
ANR	7665729	IdentifierDeclType	char *		7665710	0					
ANR	7665730	Identifier	backing_file		7665710	1					
ANR	7665731	AssignmentExpression	* backing_file = NULL		7665710	2		=			
ANR	7665732	Identifier	NULL		7665710	0					
ANR	7665733	Identifier	NULL		7665710	1					
ANR	7665734	IdentifierDeclStatement	BDRVSheepdogState * s ;	13:4:190:210	7665710	3	True				
ANR	7665735	IdentifierDecl	* s		7665710	0					
ANR	7665736	IdentifierDeclType	BDRVSheepdogState *		7665710	0					
ANR	7665737	Identifier	s		7665710	1					
ANR	7665738	IdentifierDeclStatement	char tag [ SD_MAX_VDI_TAG_LEN ] ;	15:4:217:245	7665710	4	True				
ANR	7665739	IdentifierDecl	tag [ SD_MAX_VDI_TAG_LEN ]		7665710	0					
ANR	7665740	IdentifierDeclType	char [ SD_MAX_VDI_TAG_LEN ]		7665710	0					
ANR	7665741	Identifier	tag		7665710	1					
ANR	7665742	Identifier	SD_MAX_VDI_TAG_LEN		7665710	2					
ANR	7665743	IdentifierDeclStatement	uint32_t snapid ;	17:4:252:267	7665710	5	True				
ANR	7665744	IdentifierDecl	snapid		7665710	0					
ANR	7665745	IdentifierDeclType	uint32_t		7665710	0					
ANR	7665746	Identifier	snapid		7665710	1					
ANR	7665747	IdentifierDeclStatement	bool prealloc = false ;	19:4:274:295	7665710	6	True				
ANR	7665748	IdentifierDecl	prealloc = false		7665710	0					
ANR	7665749	IdentifierDeclType	bool		7665710	0					
ANR	7665750	Identifier	prealloc		7665710	1					
ANR	7665751	AssignmentExpression	prealloc = false		7665710	2		=			
ANR	7665752	Identifier	false		7665710	0					
ANR	7665753	Identifier	false		7665710	1					
ANR	7665754	IdentifierDeclStatement	Error * local_err = NULL ;	21:4:302:325	7665710	7	True				
ANR	7665755	IdentifierDecl	* local_err = NULL		7665710	0					
ANR	7665756	IdentifierDeclType	Error *		7665710	0					
ANR	7665757	Identifier	local_err		7665710	1					
ANR	7665758	AssignmentExpression	* local_err = NULL		7665710	2		=			
ANR	7665759	Identifier	NULL		7665710	0					
ANR	7665760	Identifier	NULL		7665710	1					
ANR	7665761	ExpressionStatement	s = g_malloc0 ( sizeof ( BDRVSheepdogState ) )	25:4:334:374	7665710	8	True				
ANR	7665762	AssignmentExpression	s = g_malloc0 ( sizeof ( BDRVSheepdogState ) )		7665710	0		=			
ANR	7665763	Identifier	s		7665710	0					
ANR	7665764	CallExpression	g_malloc0 ( sizeof ( BDRVSheepdogState ) )		7665710	1					
ANR	7665765	Callee	g_malloc0		7665710	0					
ANR	7665766	Identifier	g_malloc0		7665710	0					
ANR	7665767	ArgumentList	sizeof ( BDRVSheepdogState )		7665710	1					
ANR	7665768	Argument	sizeof ( BDRVSheepdogState )		7665710	0					
ANR	7665769	SizeofExpression	sizeof ( BDRVSheepdogState )		7665710	0					
ANR	7665770	Sizeof	sizeof		7665710	0					
ANR	7665771	SizeofOperand	BDRVSheepdogState		7665710	1					
ANR	7665772	ExpressionStatement	"memset ( tag , 0 , sizeof ( tag ) )"	29:4:383:410	7665710	9	True				
ANR	7665773	CallExpression	"memset ( tag , 0 , sizeof ( tag ) )"		7665710	0					
ANR	7665774	Callee	memset		7665710	0					
ANR	7665775	Identifier	memset		7665710	0					
ANR	7665776	ArgumentList	tag		7665710	1					
ANR	7665777	Argument	tag		7665710	0					
ANR	7665778	Identifier	tag		7665710	0					
ANR	7665779	Argument	0		7665710	1					
ANR	7665780	PrimaryExpression	0		7665710	0					
ANR	7665781	Argument	sizeof ( tag )		7665710	2					
ANR	7665782	SizeofExpression	sizeof ( tag )		7665710	0					
ANR	7665783	Sizeof	sizeof		7665710	0					
ANR	7665784	SizeofOperand	tag		7665710	1					
ANR	7665785	IfStatement	"if ( strstr ( filename , ""://"" ) )"		7665710	10					
ANR	7665786	Condition	"strstr ( filename , ""://"" )"	31:8:421:443	7665710	0	True				
ANR	7665787	CallExpression	"strstr ( filename , ""://"" )"		7665710	0					
ANR	7665788	Callee	strstr		7665710	0					
ANR	7665789	Identifier	strstr		7665710	0					
ANR	7665790	ArgumentList	filename		7665710	1					
ANR	7665791	Argument	filename		7665710	0					
ANR	7665792	Identifier	filename		7665710	0					
ANR	7665793	Argument	"""://"""		7665710	1					
ANR	7665794	PrimaryExpression	"""://"""		7665710	0					
ANR	7665795	CompoundStatement		27:33:335:335	7665710	1					
ANR	7665796	ExpressionStatement	"ret = sd_parse_uri ( s , filename , s -> name , & snapid , tag )"	33:8:457:511	7665710	0	True				
ANR	7665797	AssignmentExpression	"ret = sd_parse_uri ( s , filename , s -> name , & snapid , tag )"		7665710	0		=			
ANR	7665798	Identifier	ret		7665710	0					
ANR	7665799	CallExpression	"sd_parse_uri ( s , filename , s -> name , & snapid , tag )"		7665710	1					
ANR	7665800	Callee	sd_parse_uri		7665710	0					
ANR	7665801	Identifier	sd_parse_uri		7665710	0					
ANR	7665802	ArgumentList	s		7665710	1					
ANR	7665803	Argument	s		7665710	0					
ANR	7665804	Identifier	s		7665710	0					
ANR	7665805	Argument	filename		7665710	1					
ANR	7665806	Identifier	filename		7665710	0					
ANR	7665807	Argument	s -> name		7665710	2					
ANR	7665808	PtrMemberAccess	s -> name		7665710	0					
ANR	7665809	Identifier	s		7665710	0					
ANR	7665810	Identifier	name		7665710	1					
ANR	7665811	Argument	& snapid		7665710	3					
ANR	7665812	UnaryOperationExpression	& snapid		7665710	0					
ANR	7665813	UnaryOperator	&		7665710	0					
ANR	7665814	Identifier	snapid		7665710	1					
ANR	7665815	Argument	tag		7665710	4					
ANR	7665816	Identifier	tag		7665710	0					
ANR	7665817	ElseStatement	else		7665710	0					
ANR	7665818	CompoundStatement		31:11:414:414	7665710	0					
ANR	7665819	ExpressionStatement	"ret = parse_vdiname ( s , filename , s -> name , & snapid , tag )"	37:8:536:591	7665710	0	True				
ANR	7665820	AssignmentExpression	"ret = parse_vdiname ( s , filename , s -> name , & snapid , tag )"		7665710	0		=			
ANR	7665821	Identifier	ret		7665710	0					
ANR	7665822	CallExpression	"parse_vdiname ( s , filename , s -> name , & snapid , tag )"		7665710	1					
ANR	7665823	Callee	parse_vdiname		7665710	0					
ANR	7665824	Identifier	parse_vdiname		7665710	0					
ANR	7665825	ArgumentList	s		7665710	1					
ANR	7665826	Argument	s		7665710	0					
ANR	7665827	Identifier	s		7665710	0					
ANR	7665828	Argument	filename		7665710	1					
ANR	7665829	Identifier	filename		7665710	0					
ANR	7665830	Argument	s -> name		7665710	2					
ANR	7665831	PtrMemberAccess	s -> name		7665710	0					
ANR	7665832	Identifier	s		7665710	0					
ANR	7665833	Identifier	name		7665710	1					
ANR	7665834	Argument	& snapid		7665710	3					
ANR	7665835	UnaryOperationExpression	& snapid		7665710	0					
ANR	7665836	UnaryOperator	&		7665710	0					
ANR	7665837	Identifier	snapid		7665710	1					
ANR	7665838	Argument	tag		7665710	4					
ANR	7665839	Identifier	tag		7665710	0					
ANR	7665840	IfStatement	if ( ret < 0 )		7665710	11					
ANR	7665841	Condition	ret < 0	41:8:609:615	7665710	0	True				
ANR	7665842	RelationalExpression	ret < 0		7665710	0		<			
ANR	7665843	Identifier	ret		7665710	0					
ANR	7665844	PrimaryExpression	0		7665710	1					
ANR	7665845	CompoundStatement		37:17:507:507	7665710	1					
ANR	7665846	GotoStatement	goto out ;	43:8:629:637	7665710	0	True				
ANR	7665847	Identifier	out		7665710	0					
ANR	7665848	WhileStatement	while ( options && options -> name )		7665710	12					
ANR	7665849	Condition	options && options -> name	49:11:660:683	7665710	0	True				
ANR	7665850	AndExpression	options && options -> name		7665710	0		&&			
ANR	7665851	Identifier	options		7665710	0					
ANR	7665852	PtrMemberAccess	options -> name		7665710	1					
ANR	7665853	Identifier	options		7665710	0					
ANR	7665854	Identifier	name		7665710	1					
ANR	7665855	CompoundStatement		45:37:575:575	7665710	1					
ANR	7665856	IfStatement	"if ( ! strcmp ( options -> name , BLOCK_OPT_SIZE ) )"		7665710	0					
ANR	7665857	Condition	"! strcmp ( options -> name , BLOCK_OPT_SIZE )"	51:12:701:738	7665710	0	True				
ANR	7665858	UnaryOperationExpression	"! strcmp ( options -> name , BLOCK_OPT_SIZE )"		7665710	0					
ANR	7665859	UnaryOperator	!		7665710	0					
ANR	7665860	CallExpression	"strcmp ( options -> name , BLOCK_OPT_SIZE )"		7665710	1					
ANR	7665861	Callee	strcmp		7665710	0					
ANR	7665862	Identifier	strcmp		7665710	0					
ANR	7665863	ArgumentList	options -> name		7665710	1					
ANR	7665864	Argument	options -> name		7665710	0					
ANR	7665865	PtrMemberAccess	options -> name		7665710	0					
ANR	7665866	Identifier	options		7665710	0					
ANR	7665867	Identifier	name		7665710	1					
ANR	7665868	Argument	BLOCK_OPT_SIZE		7665710	1					
ANR	7665869	Identifier	BLOCK_OPT_SIZE		7665710	0					
ANR	7665870	CompoundStatement		47:52:630:630	7665710	1					
ANR	7665871	ExpressionStatement	s -> inode . vdi_size = options -> value . n	53:12:756:792	7665710	0	True				
ANR	7665872	AssignmentExpression	s -> inode . vdi_size = options -> value . n		7665710	0		=			
ANR	7665873	MemberAccess	s -> inode . vdi_size		7665710	0					
ANR	7665874	PtrMemberAccess	s -> inode		7665710	0					
ANR	7665875	Identifier	s		7665710	0					
ANR	7665876	Identifier	inode		7665710	1					
ANR	7665877	Identifier	vdi_size		7665710	1					
ANR	7665878	MemberAccess	options -> value . n		7665710	1					
ANR	7665879	PtrMemberAccess	options -> value		7665710	0					
ANR	7665880	Identifier	options		7665710	0					
ANR	7665881	Identifier	value		7665710	1					
ANR	7665882	Identifier	n		7665710	1					
ANR	7665883	ElseStatement	else		7665710	0					
ANR	7665884	IfStatement	"if ( ! strcmp ( options -> name , BLOCK_OPT_BACKING_FILE ) )"		7665710	0					
ANR	7665885	Condition	"! strcmp ( options -> name , BLOCK_OPT_BACKING_FILE )"	55:19:814:859	7665710	0	True				
ANR	7665886	UnaryOperationExpression	"! strcmp ( options -> name , BLOCK_OPT_BACKING_FILE )"		7665710	0					
ANR	7665887	UnaryOperator	!		7665710	0					
ANR	7665888	CallExpression	"strcmp ( options -> name , BLOCK_OPT_BACKING_FILE )"		7665710	1					
ANR	7665889	Callee	strcmp		7665710	0					
ANR	7665890	Identifier	strcmp		7665710	0					
ANR	7665891	ArgumentList	options -> name		7665710	1					
ANR	7665892	Argument	options -> name		7665710	0					
ANR	7665893	PtrMemberAccess	options -> name		7665710	0					
ANR	7665894	Identifier	options		7665710	0					
ANR	7665895	Identifier	name		7665710	1					
ANR	7665896	Argument	BLOCK_OPT_BACKING_FILE		7665710	1					
ANR	7665897	Identifier	BLOCK_OPT_BACKING_FILE		7665710	0					
ANR	7665898	CompoundStatement		51:67:751:751	7665710	1					
ANR	7665899	ExpressionStatement	backing_file = options -> value . s	57:12:877:908	7665710	0	True				
ANR	7665900	AssignmentExpression	backing_file = options -> value . s		7665710	0		=			
ANR	7665901	Identifier	backing_file		7665710	0					
ANR	7665902	MemberAccess	options -> value . s		7665710	1					
ANR	7665903	PtrMemberAccess	options -> value		7665710	0					
ANR	7665904	Identifier	options		7665710	0					
ANR	7665905	Identifier	value		7665710	1					
ANR	7665906	Identifier	s		7665710	1					
ANR	7665907	ElseStatement	else		7665710	0					
ANR	7665908	IfStatement	"if ( ! strcmp ( options -> name , BLOCK_OPT_PREALLOC ) )"		7665710	0					
ANR	7665909	Condition	"! strcmp ( options -> name , BLOCK_OPT_PREALLOC )"	59:19:930:971	7665710	0	True				
ANR	7665910	UnaryOperationExpression	"! strcmp ( options -> name , BLOCK_OPT_PREALLOC )"		7665710	0					
ANR	7665911	UnaryOperator	!		7665710	0					
ANR	7665912	CallExpression	"strcmp ( options -> name , BLOCK_OPT_PREALLOC )"		7665710	1					
ANR	7665913	Callee	strcmp		7665710	0					
ANR	7665914	Identifier	strcmp		7665710	0					
ANR	7665915	ArgumentList	options -> name		7665710	1					
ANR	7665916	Argument	options -> name		7665710	0					
ANR	7665917	PtrMemberAccess	options -> name		7665710	0					
ANR	7665918	Identifier	options		7665710	0					
ANR	7665919	Identifier	name		7665710	1					
ANR	7665920	Argument	BLOCK_OPT_PREALLOC		7665710	1					
ANR	7665921	Identifier	BLOCK_OPT_PREALLOC		7665710	0					
ANR	7665922	CompoundStatement		55:63:863:863	7665710	1					
ANR	7665923	IfStatement	"if ( ! options -> value . s || ! strcmp ( options -> value . s , ""off"" ) )"		7665710	0					
ANR	7665924	Condition	"! options -> value . s || ! strcmp ( options -> value . s , ""off"" )"	61:16:993:1045	7665710	0	True				
ANR	7665925	OrExpression	"! options -> value . s || ! strcmp ( options -> value . s , ""off"" )"		7665710	0		||			
ANR	7665926	UnaryOperationExpression	! options -> value . s		7665710	0					
ANR	7665927	UnaryOperator	!		7665710	0					
ANR	7665928	MemberAccess	options -> value . s		7665710	1					
ANR	7665929	PtrMemberAccess	options -> value		7665710	0					
ANR	7665930	Identifier	options		7665710	0					
ANR	7665931	Identifier	value		7665710	1					
ANR	7665932	Identifier	s		7665710	1					
ANR	7665933	UnaryOperationExpression	"! strcmp ( options -> value . s , ""off"" )"		7665710	1					
ANR	7665934	UnaryOperator	!		7665710	0					
ANR	7665935	CallExpression	"strcmp ( options -> value . s , ""off"" )"		7665710	1					
ANR	7665936	Callee	strcmp		7665710	0					
ANR	7665937	Identifier	strcmp		7665710	0					
ANR	7665938	ArgumentList	options -> value . s		7665710	1					
ANR	7665939	Argument	options -> value . s		7665710	0					
ANR	7665940	MemberAccess	options -> value . s		7665710	0					
ANR	7665941	PtrMemberAccess	options -> value		7665710	0					
ANR	7665942	Identifier	options		7665710	0					
ANR	7665943	Identifier	value		7665710	1					
ANR	7665944	Identifier	s		7665710	1					
ANR	7665945	Argument	"""off"""		7665710	1					
ANR	7665946	PrimaryExpression	"""off"""		7665710	0					
ANR	7665947	CompoundStatement		57:71:937:937	7665710	1					
ANR	7665948	ExpressionStatement	prealloc = false	63:16:1067:1083	7665710	0	True				
ANR	7665949	AssignmentExpression	prealloc = false		7665710	0		=			
ANR	7665950	Identifier	prealloc		7665710	0					
ANR	7665951	Identifier	false		7665710	1					
ANR	7665952	ElseStatement	else		7665710	0					
ANR	7665953	IfStatement	"if ( ! strcmp ( options -> value . s , ""full"" ) )"		7665710	0					
ANR	7665954	Condition	"! strcmp ( options -> value . s , ""full"" )"	65:23:1109:1141	7665710	0	True				
ANR	7665955	UnaryOperationExpression	"! strcmp ( options -> value . s , ""full"" )"		7665710	0					
ANR	7665956	UnaryOperator	!		7665710	0					
ANR	7665957	CallExpression	"strcmp ( options -> value . s , ""full"" )"		7665710	1					
ANR	7665958	Callee	strcmp		7665710	0					
ANR	7665959	Identifier	strcmp		7665710	0					
ANR	7665960	ArgumentList	options -> value . s		7665710	1					
ANR	7665961	Argument	options -> value . s		7665710	0					
ANR	7665962	MemberAccess	options -> value . s		7665710	0					
ANR	7665963	PtrMemberAccess	options -> value		7665710	0					
ANR	7665964	Identifier	options		7665710	0					
ANR	7665965	Identifier	value		7665710	1					
ANR	7665966	Identifier	s		7665710	1					
ANR	7665967	Argument	"""full"""		7665710	1					
ANR	7665968	PrimaryExpression	"""full"""		7665710	0					
ANR	7665969	CompoundStatement		61:58:1033:1033	7665710	1					
ANR	7665970	ExpressionStatement	prealloc = true	67:16:1163:1178	7665710	0	True				
ANR	7665971	AssignmentExpression	prealloc = true		7665710	0		=			
ANR	7665972	Identifier	prealloc		7665710	0					
ANR	7665973	Identifier	true		7665710	1					
ANR	7665974	ElseStatement	else		7665710	0					
ANR	7665975	CompoundStatement		65:19:1089:1089	7665710	0					
ANR	7665976	ExpressionStatement	"error_report ( ""Invalid preallocation mode: '%s'"" , options -> value . s )"	71:16:1219:1315	7665710	0	True				
ANR	7665977	CallExpression	"error_report ( ""Invalid preallocation mode: '%s'"" , options -> value . s )"		7665710	0					
ANR	7665978	Callee	error_report		7665710	0					
ANR	7665979	Identifier	error_report		7665710	0					
ANR	7665980	ArgumentList	"""Invalid preallocation mode: '%s'"""		7665710	1					
ANR	7665981	Argument	"""Invalid preallocation mode: '%s'"""		7665710	0					
ANR	7665982	PrimaryExpression	"""Invalid preallocation mode: '%s'"""		7665710	0					
ANR	7665983	Argument	options -> value . s		7665710	1					
ANR	7665984	MemberAccess	options -> value . s		7665710	0					
ANR	7665985	PtrMemberAccess	options -> value		7665710	0					
ANR	7665986	Identifier	options		7665710	0					
ANR	7665987	Identifier	value		7665710	1					
ANR	7665988	Identifier	s		7665710	1					
ANR	7665989	ExpressionStatement	ret = - EINVAL	75:16:1334:1347	7665710	1	True				
ANR	7665990	AssignmentExpression	ret = - EINVAL		7665710	0		=			
ANR	7665991	Identifier	ret		7665710	0					
ANR	7665992	UnaryOperationExpression	- EINVAL		7665710	1					
ANR	7665993	UnaryOperator	-		7665710	0					
ANR	7665994	Identifier	EINVAL		7665710	1					
ANR	7665995	GotoStatement	goto out ;	77:16:1366:1374	7665710	2	True				
ANR	7665996	Identifier	out		7665710	0					
ANR	7665997	ElseStatement	else		7665710	0					
ANR	7665998	IfStatement	"if ( ! strcmp ( options -> name , BLOCK_OPT_REDUNDANCY ) )"		7665710	0					
ANR	7665999	Condition	"! strcmp ( options -> name , BLOCK_OPT_REDUNDANCY )"	81:19:1411:1454	7665710	0	True				
ANR	7666000	UnaryOperationExpression	"! strcmp ( options -> name , BLOCK_OPT_REDUNDANCY )"		7665710	0					
ANR	7666001	UnaryOperator	!		7665710	0					
ANR	7666002	CallExpression	"strcmp ( options -> name , BLOCK_OPT_REDUNDANCY )"		7665710	1					
ANR	7666003	Callee	strcmp		7665710	0					
ANR	7666004	Identifier	strcmp		7665710	0					
ANR	7666005	ArgumentList	options -> name		7665710	1					
ANR	7666006	Argument	options -> name		7665710	0					
ANR	7666007	PtrMemberAccess	options -> name		7665710	0					
ANR	7666008	Identifier	options		7665710	0					
ANR	7666009	Identifier	name		7665710	1					
ANR	7666010	Argument	BLOCK_OPT_REDUNDANCY		7665710	1					
ANR	7666011	Identifier	BLOCK_OPT_REDUNDANCY		7665710	0					
ANR	7666012	CompoundStatement		77:65:1346:1346	7665710	1					
ANR	7666013	ExpressionStatement	"ret = parse_redundancy ( s , options -> value . s )"	83:12:1472:1515	7665710	0	True				
ANR	7666014	AssignmentExpression	"ret = parse_redundancy ( s , options -> value . s )"		7665710	0		=			
ANR	7666015	Identifier	ret		7665710	0					
ANR	7666016	CallExpression	"parse_redundancy ( s , options -> value . s )"		7665710	1					
ANR	7666017	Callee	parse_redundancy		7665710	0					
ANR	7666018	Identifier	parse_redundancy		7665710	0					
ANR	7666019	ArgumentList	s		7665710	1					
ANR	7666020	Argument	s		7665710	0					
ANR	7666021	Identifier	s		7665710	0					
ANR	7666022	Argument	options -> value . s		7665710	1					
ANR	7666023	MemberAccess	options -> value . s		7665710	0					
ANR	7666024	PtrMemberAccess	options -> value		7665710	0					
ANR	7666025	Identifier	options		7665710	0					
ANR	7666026	Identifier	value		7665710	1					
ANR	7666027	Identifier	s		7665710	1					
ANR	7666028	IfStatement	if ( ret < 0 )		7665710	1					
ANR	7666029	Condition	ret < 0	85:16:1534:1540	7665710	0	True				
ANR	7666030	RelationalExpression	ret < 0		7665710	0		<			
ANR	7666031	Identifier	ret		7665710	0					
ANR	7666032	PrimaryExpression	0		7665710	1					
ANR	7666033	CompoundStatement		81:25:1432:1432	7665710	1					
ANR	7666034	GotoStatement	goto out ;	87:16:1562:1570	7665710	0	True				
ANR	7666035	Identifier	out		7665710	0					
ANR	7666036	ExpressionStatement	options ++	93:8:1607:1616	7665710	1	True				
ANR	7666037	PostIncDecOperationExpression	options ++		7665710	0					
ANR	7666038	Identifier	options		7665710	0					
ANR	7666039	IncDec	++		7665710	1					
ANR	7666040	IfStatement	if ( s -> inode . vdi_size > SD_MAX_VDI_SIZE )		7665710	13					
ANR	7666041	Condition	s -> inode . vdi_size > SD_MAX_VDI_SIZE	99:8:1636:1670	7665710	0	True				
ANR	7666042	RelationalExpression	s -> inode . vdi_size > SD_MAX_VDI_SIZE		7665710	0		>			
ANR	7666043	MemberAccess	s -> inode . vdi_size		7665710	0					
ANR	7666044	PtrMemberAccess	s -> inode		7665710	0					
ANR	7666045	Identifier	s		7665710	0					
ANR	7666046	Identifier	inode		7665710	1					
ANR	7666047	Identifier	vdi_size		7665710	1					
ANR	7666048	Identifier	SD_MAX_VDI_SIZE		7665710	1					
ANR	7666049	CompoundStatement		95:45:1562:1562	7665710	1					
ANR	7666050	ExpressionStatement	"error_report ( ""too big image size"" )"	101:8:1684:1718	7665710	0	True				
ANR	7666051	CallExpression	"error_report ( ""too big image size"" )"		7665710	0					
ANR	7666052	Callee	error_report		7665710	0					
ANR	7666053	Identifier	error_report		7665710	0					
ANR	7666054	ArgumentList	"""too big image size"""		7665710	1					
ANR	7666055	Argument	"""too big image size"""		7665710	0					
ANR	7666056	PrimaryExpression	"""too big image size"""		7665710	0					
ANR	7666057	ExpressionStatement	ret = - EINVAL	103:8:1729:1742	7665710	1	True				
ANR	7666058	AssignmentExpression	ret = - EINVAL		7665710	0		=			
ANR	7666059	Identifier	ret		7665710	0					
ANR	7666060	UnaryOperationExpression	- EINVAL		7665710	1					
ANR	7666061	UnaryOperator	-		7665710	0					
ANR	7666062	Identifier	EINVAL		7665710	1					
ANR	7666063	GotoStatement	goto out ;	105:8:1753:1761	7665710	2	True				
ANR	7666064	Identifier	out		7665710	0					
ANR	7666065	IfStatement	if ( backing_file )		7665710	14					
ANR	7666066	Condition	backing_file	111:8:1781:1792	7665710	0	True				
ANR	7666067	Identifier	backing_file		7665710	0					
ANR	7666068	CompoundStatement		113:8:1757:1773	7665710	1					
ANR	7666069	IdentifierDeclStatement	BlockDriverState * bs ;	113:8:1806:1826	7665710	0	True				
ANR	7666070	IdentifierDecl	* bs		7665710	0					
ANR	7666071	IdentifierDeclType	BlockDriverState *		7665710	0					
ANR	7666072	Identifier	bs		7665710	1					
ANR	7666073	IdentifierDeclStatement	BDRVSheepdogState * s ;	115:8:1837:1857	7665710	1	True				
ANR	7666074	IdentifierDecl	* s		7665710	0					
ANR	7666075	IdentifierDeclType	BDRVSheepdogState *		7665710	0					
ANR	7666076	Identifier	s		7665710	1					
ANR	7666077	IdentifierDeclStatement	BlockDriver * drv ;	117:8:1868:1884	7665710	2	True				
ANR	7666078	IdentifierDecl	* drv		7665710	0					
ANR	7666079	IdentifierDeclType	BlockDriver *		7665710	0					
ANR	7666080	Identifier	drv		7665710	1					
ANR	7666081	ExpressionStatement	"drv = bdrv_find_protocol ( backing_file , true )"	123:8:1965:2009	7665710	3	True				
ANR	7666082	AssignmentExpression	"drv = bdrv_find_protocol ( backing_file , true )"		7665710	0		=			
ANR	7666083	Identifier	drv		7665710	0					
ANR	7666084	CallExpression	"bdrv_find_protocol ( backing_file , true )"		7665710	1					
ANR	7666085	Callee	bdrv_find_protocol		7665710	0					
ANR	7666086	Identifier	bdrv_find_protocol		7665710	0					
ANR	7666087	ArgumentList	backing_file		7665710	1					
ANR	7666088	Argument	backing_file		7665710	0					
ANR	7666089	Identifier	backing_file		7665710	0					
ANR	7666090	Argument	true		7665710	1					
ANR	7666091	Identifier	true		7665710	0					
ANR	7666092	IfStatement	"if ( ! drv || strcmp ( drv -> protocol_name , ""sheepdog"" ) != 0 )"		7665710	4					
ANR	7666093	Condition	"! drv || strcmp ( drv -> protocol_name , ""sheepdog"" ) != 0"	125:12:2024:2074	7665710	0	True				
ANR	7666094	OrExpression	"! drv || strcmp ( drv -> protocol_name , ""sheepdog"" ) != 0"		7665710	0		||			
ANR	7666095	UnaryOperationExpression	! drv		7665710	0					
ANR	7666096	UnaryOperator	!		7665710	0					
ANR	7666097	Identifier	drv		7665710	1					
ANR	7666098	EqualityExpression	"strcmp ( drv -> protocol_name , ""sheepdog"" ) != 0"		7665710	1		!=			
ANR	7666099	CallExpression	"strcmp ( drv -> protocol_name , ""sheepdog"" )"		7665710	0					
ANR	7666100	Callee	strcmp		7665710	0					
ANR	7666101	Identifier	strcmp		7665710	0					
ANR	7666102	ArgumentList	drv -> protocol_name		7665710	1					
ANR	7666103	Argument	drv -> protocol_name		7665710	0					
ANR	7666104	PtrMemberAccess	drv -> protocol_name		7665710	0					
ANR	7666105	Identifier	drv		7665710	0					
ANR	7666106	Identifier	protocol_name		7665710	1					
ANR	7666107	Argument	"""sheepdog"""		7665710	1					
ANR	7666108	PrimaryExpression	"""sheepdog"""		7665710	0					
ANR	7666109	PrimaryExpression	0		7665710	1					
ANR	7666110	CompoundStatement		121:65:1966:1966	7665710	1					
ANR	7666111	ExpressionStatement	"error_report ( ""backing_file must be a sheepdog image"" )"	127:12:2092:2145	7665710	0	True				
ANR	7666112	CallExpression	"error_report ( ""backing_file must be a sheepdog image"" )"		7665710	0					
ANR	7666113	Callee	error_report		7665710	0					
ANR	7666114	Identifier	error_report		7665710	0					
ANR	7666115	ArgumentList	"""backing_file must be a sheepdog image"""		7665710	1					
ANR	7666116	Argument	"""backing_file must be a sheepdog image"""		7665710	0					
ANR	7666117	PrimaryExpression	"""backing_file must be a sheepdog image"""		7665710	0					
ANR	7666118	ExpressionStatement	ret = - EINVAL	129:12:2160:2173	7665710	1	True				
ANR	7666119	AssignmentExpression	ret = - EINVAL		7665710	0		=			
ANR	7666120	Identifier	ret		7665710	0					
ANR	7666121	UnaryOperationExpression	- EINVAL		7665710	1					
ANR	7666122	UnaryOperator	-		7665710	0					
ANR	7666123	Identifier	EINVAL		7665710	1					
ANR	7666124	GotoStatement	goto out ;	131:12:2188:2196	7665710	2	True				
ANR	7666125	Identifier	out		7665710	0					
ANR	7666126	ExpressionStatement	"ret = bdrv_file_open ( & bs , backing_file , NULL , 0 , & local_err )"	137:8:2220:2280	7665710	5	True				
ANR	7666127	AssignmentExpression	"ret = bdrv_file_open ( & bs , backing_file , NULL , 0 , & local_err )"		7665710	0		=			
ANR	7666128	Identifier	ret		7665710	0					
ANR	7666129	CallExpression	"bdrv_file_open ( & bs , backing_file , NULL , 0 , & local_err )"		7665710	1					
ANR	7666130	Callee	bdrv_file_open		7665710	0					
ANR	7666131	Identifier	bdrv_file_open		7665710	0					
ANR	7666132	ArgumentList	& bs		7665710	1					
ANR	7666133	Argument	& bs		7665710	0					
ANR	7666134	UnaryOperationExpression	& bs		7665710	0					
ANR	7666135	UnaryOperator	&		7665710	0					
ANR	7666136	Identifier	bs		7665710	1					
ANR	7666137	Argument	backing_file		7665710	1					
ANR	7666138	Identifier	backing_file		7665710	0					
ANR	7666139	Argument	NULL		7665710	2					
ANR	7666140	Identifier	NULL		7665710	0					
ANR	7666141	Argument	0		7665710	3					
ANR	7666142	PrimaryExpression	0		7665710	0					
ANR	7666143	Argument	& local_err		7665710	4					
ANR	7666144	UnaryOperationExpression	& local_err		7665710	0					
ANR	7666145	UnaryOperator	&		7665710	0					
ANR	7666146	Identifier	local_err		7665710	1					
ANR	7666147	IfStatement	if ( ret < 0 )		7665710	6					
ANR	7666148	Condition	ret < 0	139:12:2295:2301	7665710	0	True				
ANR	7666149	RelationalExpression	ret < 0		7665710	0		<			
ANR	7666150	Identifier	ret		7665710	0					
ANR	7666151	PrimaryExpression	0		7665710	1					
ANR	7666152	CompoundStatement		135:21:2193:2193	7665710	1					
ANR	7666153	ExpressionStatement	qerror_report_err ( local_err )	141:12:2319:2347	7665710	0	True				
ANR	7666154	CallExpression	qerror_report_err ( local_err )		7665710	0					
ANR	7666155	Callee	qerror_report_err		7665710	0					
ANR	7666156	Identifier	qerror_report_err		7665710	0					
ANR	7666157	ArgumentList	local_err		7665710	1					
ANR	7666158	Argument	local_err		7665710	0					
ANR	7666159	Identifier	local_err		7665710	0					
ANR	7666160	ExpressionStatement	error_free ( local_err )	143:12:2362:2383	7665710	1	True				
ANR	7666161	CallExpression	error_free ( local_err )		7665710	0					
ANR	7666162	Callee	error_free		7665710	0					
ANR	7666163	Identifier	error_free		7665710	0					
ANR	7666164	ArgumentList	local_err		7665710	1					
ANR	7666165	Argument	local_err		7665710	0					
ANR	7666166	Identifier	local_err		7665710	0					
ANR	7666167	GotoStatement	goto out ;	145:12:2398:2406	7665710	2	True				
ANR	7666168	Identifier	out		7665710	0					
ANR	7666169	ExpressionStatement	s = bs -> opaque	151:8:2430:2444	7665710	7	True				
ANR	7666170	AssignmentExpression	s = bs -> opaque		7665710	0		=			
ANR	7666171	Identifier	s		7665710	0					
ANR	7666172	PtrMemberAccess	bs -> opaque		7665710	1					
ANR	7666173	Identifier	bs		7665710	0					
ANR	7666174	Identifier	opaque		7665710	1					
ANR	7666175	IfStatement	if ( ! is_snapshot ( & s -> inode ) )		7665710	8					
ANR	7666176	Condition	! is_snapshot ( & s -> inode )	155:12:2461:2483	7665710	0	True				
ANR	7666177	UnaryOperationExpression	! is_snapshot ( & s -> inode )		7665710	0					
ANR	7666178	UnaryOperator	!		7665710	0					
ANR	7666179	CallExpression	is_snapshot ( & s -> inode )		7665710	1					
ANR	7666180	Callee	is_snapshot		7665710	0					
ANR	7666181	Identifier	is_snapshot		7665710	0					
ANR	7666182	ArgumentList	& s -> inode		7665710	1					
ANR	7666183	Argument	& s -> inode		7665710	0					
ANR	7666184	UnaryOperationExpression	& s -> inode		7665710	0					
ANR	7666185	UnaryOperator	&		7665710	0					
ANR	7666186	PtrMemberAccess	s -> inode		7665710	1					
ANR	7666187	Identifier	s		7665710	0					
ANR	7666188	Identifier	inode		7665710	1					
ANR	7666189	CompoundStatement		151:37:2375:2375	7665710	1					
ANR	7666190	ExpressionStatement	"error_report ( ""cannot clone from a non snapshot vdi"" )"	157:12:2501:2553	7665710	0	True				
ANR	7666191	CallExpression	"error_report ( ""cannot clone from a non snapshot vdi"" )"		7665710	0					
ANR	7666192	Callee	error_report		7665710	0					
ANR	7666193	Identifier	error_report		7665710	0					
ANR	7666194	ArgumentList	"""cannot clone from a non snapshot vdi"""		7665710	1					
ANR	7666195	Argument	"""cannot clone from a non snapshot vdi"""		7665710	0					
ANR	7666196	PrimaryExpression	"""cannot clone from a non snapshot vdi"""		7665710	0					
ANR	7666197	ExpressionStatement	bdrv_unref ( bs )	159:12:2568:2582	7665710	1	True				
ANR	7666198	CallExpression	bdrv_unref ( bs )		7665710	0					
ANR	7666199	Callee	bdrv_unref		7665710	0					
ANR	7666200	Identifier	bdrv_unref		7665710	0					
ANR	7666201	ArgumentList	bs		7665710	1					
ANR	7666202	Argument	bs		7665710	0					
ANR	7666203	Identifier	bs		7665710	0					
ANR	7666204	ExpressionStatement	ret = - EINVAL	161:12:2597:2610	7665710	2	True				
ANR	7666205	AssignmentExpression	ret = - EINVAL		7665710	0		=			
ANR	7666206	Identifier	ret		7665710	0					
ANR	7666207	UnaryOperationExpression	- EINVAL		7665710	1					
ANR	7666208	UnaryOperator	-		7665710	0					
ANR	7666209	Identifier	EINVAL		7665710	1					
ANR	7666210	GotoStatement	goto out ;	163:12:2625:2633	7665710	3	True				
ANR	7666211	Identifier	out		7665710	0					
ANR	7666212	ExpressionStatement	bdrv_unref ( bs )	169:8:2657:2671	7665710	9	True				
ANR	7666213	CallExpression	bdrv_unref ( bs )		7665710	0					
ANR	7666214	Callee	bdrv_unref		7665710	0					
ANR	7666215	Identifier	bdrv_unref		7665710	0					
ANR	7666216	ArgumentList	bs		7665710	1					
ANR	7666217	Argument	bs		7665710	0					
ANR	7666218	Identifier	bs		7665710	0					
ANR	7666219	ExpressionStatement	"ret = do_sd_create ( s , & vid , 0 )"	175:4:2687:2717	7665710	15	True				
ANR	7666220	AssignmentExpression	"ret = do_sd_create ( s , & vid , 0 )"		7665710	0		=			
ANR	7666221	Identifier	ret		7665710	0					
ANR	7666222	CallExpression	"do_sd_create ( s , & vid , 0 )"		7665710	1					
ANR	7666223	Callee	do_sd_create		7665710	0					
ANR	7666224	Identifier	do_sd_create		7665710	0					
ANR	7666225	ArgumentList	s		7665710	1					
ANR	7666226	Argument	s		7665710	0					
ANR	7666227	Identifier	s		7665710	0					
ANR	7666228	Argument	& vid		7665710	1					
ANR	7666229	UnaryOperationExpression	& vid		7665710	0					
ANR	7666230	UnaryOperator	&		7665710	0					
ANR	7666231	Identifier	vid		7665710	1					
ANR	7666232	Argument	0		7665710	2					
ANR	7666233	PrimaryExpression	0		7665710	0					
ANR	7666234	IfStatement	if ( ! prealloc || ret )		7665710	16					
ANR	7666235	Condition	! prealloc || ret	177:8:2728:2743	7665710	0	True				
ANR	7666236	OrExpression	! prealloc || ret		7665710	0		||			
ANR	7666237	UnaryOperationExpression	! prealloc		7665710	0					
ANR	7666238	UnaryOperator	!		7665710	0					
ANR	7666239	Identifier	prealloc		7665710	1					
ANR	7666240	Identifier	ret		7665710	1					
ANR	7666241	CompoundStatement		173:26:2635:2635	7665710	1					
ANR	7666242	GotoStatement	goto out ;	179:8:2757:2765	7665710	0	True				
ANR	7666243	Identifier	out		7665710	0					
ANR	7666244	ExpressionStatement	ret = sd_prealloc ( filename )	185:4:2781:2808	7665710	17	True				
ANR	7666245	AssignmentExpression	ret = sd_prealloc ( filename )		7665710	0		=			
ANR	7666246	Identifier	ret		7665710	0					
ANR	7666247	CallExpression	sd_prealloc ( filename )		7665710	1					
ANR	7666248	Callee	sd_prealloc		7665710	0					
ANR	7666249	Identifier	sd_prealloc		7665710	0					
ANR	7666250	ArgumentList	filename		7665710	1					
ANR	7666251	Argument	filename		7665710	0					
ANR	7666252	Identifier	filename		7665710	0					
ANR	7666253	Label	out :	187:0:2811:2814	7665710	18	True				
ANR	7666254	Identifier	out		7665710	0					
ANR	7666255	ExpressionStatement	g_free ( s )	189:4:2821:2830	7665710	19	True				
ANR	7666256	CallExpression	g_free ( s )		7665710	0					
ANR	7666257	Callee	g_free		7665710	0					
ANR	7666258	Identifier	g_free		7665710	0					
ANR	7666259	ArgumentList	s		7665710	1					
ANR	7666260	Argument	s		7665710	0					
ANR	7666261	Identifier	s		7665710	0					
ANR	7666262	ReturnStatement	return ret ;	191:4:2837:2847	7665710	20	True				
ANR	7666263	Identifier	ret		7665710	0					
ANR	7666264	ReturnType	static int		7665710	1					
ANR	7666265	Identifier	sd_create		7665710	2					
ANR	7666266	ParameterList	"const char * filename , QEMUOptionParameter * options , Error * * errp"		7665710	3					
ANR	7666267	Parameter	const char * filename	1:21:21:40	7665710	0	True				
ANR	7666268	ParameterType	const char *		7665710	0					
ANR	7666269	Identifier	filename		7665710	1					
ANR	7666270	Parameter	QEMUOptionParameter * options	1:43:43:70	7665710	1	True				
ANR	7666271	ParameterType	QEMUOptionParameter *		7665710	0					
ANR	7666272	Identifier	options		7665710	1					
ANR	7666273	Parameter	Error * * errp	3:21:95:106	7665710	2	True				
ANR	7666274	ParameterType	Error * *		7665710	0					
ANR	7666275	Identifier	errp		7665710	1					
ANR	7666276	CFGEntryNode	ENTRY		7665710		True				
ANR	7666277	CFGExitNode	EXIT		7665710		True				
ANR	7666278	Symbol	backing_file		7665710						
ANR	7666279	Symbol	s -> inode . vdi_size		7665710						
ANR	7666280	Symbol	errp		7665710						
ANR	7666281	Symbol	vid		7665710						
ANR	7666282	Symbol	is_snapshot		7665710						
ANR	7666283	Symbol	* bs		7665710						
ANR	7666284	Symbol	options		7665710						
ANR	7666285	Symbol	& bs		7665710						
ANR	7666286	Symbol	tag		7665710						
ANR	7666287	Symbol	snapid		7665710						
ANR	7666288	Symbol	sd_prealloc		7665710						
ANR	7666289	Symbol	prealloc		7665710						
ANR	7666290	Symbol	ret		7665710						
ANR	7666291	Symbol	strcmp		7665710						
ANR	7666292	Symbol	NULL		7665710						
ANR	7666293	Symbol	drv -> protocol_name		7665710						
ANR	7666294	Symbol	options -> name		7665710						
ANR	7666295	Symbol	drv		7665710						
ANR	7666296	Symbol	do_sd_create		7665710						
ANR	7666297	Symbol	s -> inode		7665710						
ANR	7666298	Symbol	& vid		7665710						
ANR	7666299	Symbol	& snapid		7665710						
ANR	7666300	Symbol	filename		7665710						
ANR	7666301	Symbol	strstr		7665710						
ANR	7666302	Symbol	true		7665710						
ANR	7666303	Symbol	g_malloc0		7665710						
ANR	7666304	Symbol	parse_vdiname		7665710						
ANR	7666305	Symbol	SD_MAX_VDI_SIZE		7665710						
ANR	7666306	Symbol	local_err		7665710						
ANR	7666307	Symbol	* options		7665710						
ANR	7666308	Symbol	BLOCK_OPT_BACKING_FILE		7665710						
ANR	7666309	Symbol	bs		7665710						
ANR	7666310	Symbol	bdrv_file_open		7665710						
ANR	7666311	Symbol	sd_parse_uri		7665710						
ANR	7666312	Symbol	& local_err		7665710						
ANR	7666313	Symbol	BLOCK_OPT_PREALLOC		7665710						
ANR	7666314	Symbol	bs -> opaque		7665710						
ANR	7666315	Symbol	parse_redundancy		7665710						
ANR	7666316	Symbol	false		7665710						
ANR	7666317	Symbol	bdrv_find_protocol		7665710						
ANR	7666318	Symbol	BLOCK_OPT_SIZE		7665710						
ANR	7666319	Symbol	* drv		7665710						
ANR	7666320	Symbol	& s -> inode		7665710						
ANR	7666321	Symbol	options -> value . s		7665710						
ANR	7666322	Symbol	EINVAL		7665710						
ANR	7666323	Symbol	s		7665710						
ANR	7666324	Symbol	s -> name		7665710						
ANR	7666325	Symbol	options -> value		7665710						
ANR	7666326	Symbol	options -> value . n		7665710						
ANR	7666327	Symbol	BLOCK_OPT_REDUNDANCY		7665710						
ANR	7666328	Symbol	* s		7665710						
