command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5302524	File	/home/p4ultr4n/workplace/ReVeal/raw_code/lsp2lpc_1.c								
ANR	5302525	Function	lsp2lpc	1:0:0:2067							
ANR	5302526	FunctionDef	lsp2lpc (int16_t * lpc)		5302525	0					
ANR	5302527	CompoundStatement		3:0:35:2067	5302525	0					
ANR	5302528	IdentifierDeclStatement	int f1 [ LPC_ORDER / 2 + 1 ] ;	5:4:42:67	5302525	0	True				
ANR	5302529	IdentifierDecl	f1 [ LPC_ORDER / 2 + 1 ]		5302525	0					
ANR	5302530	IdentifierDeclType	int [ LPC_ORDER / 2 + 1 ]		5302525	0					
ANR	5302531	Identifier	f1		5302525	1					
ANR	5302532	AdditiveExpression	LPC_ORDER / 2 + 1		5302525	2		+			
ANR	5302533	MultiplicativeExpression	LPC_ORDER / 2		5302525	0		/			
ANR	5302534	Identifier	LPC_ORDER		5302525	0					
ANR	5302535	PrimaryExpression	2		5302525	1					
ANR	5302536	PrimaryExpression	1		5302525	1					
ANR	5302537	IdentifierDeclStatement	int f2 [ LPC_ORDER / 2 + 1 ] ;	7:4:74:99	5302525	1	True				
ANR	5302538	IdentifierDecl	f2 [ LPC_ORDER / 2 + 1 ]		5302525	0					
ANR	5302539	IdentifierDeclType	int [ LPC_ORDER / 2 + 1 ]		5302525	0					
ANR	5302540	Identifier	f2		5302525	1					
ANR	5302541	AdditiveExpression	LPC_ORDER / 2 + 1		5302525	2		+			
ANR	5302542	MultiplicativeExpression	LPC_ORDER / 2		5302525	0		/			
ANR	5302543	Identifier	LPC_ORDER		5302525	0					
ANR	5302544	PrimaryExpression	2		5302525	1					
ANR	5302545	PrimaryExpression	1		5302525	1					
ANR	5302546	IdentifierDeclStatement	"int i , j ;"	9:4:106:114	5302525	2	True				
ANR	5302547	IdentifierDecl	i		5302525	0					
ANR	5302548	IdentifierDeclType	int		5302525	0					
ANR	5302549	Identifier	i		5302525	1					
ANR	5302550	IdentifierDecl	j		5302525	1					
ANR	5302551	IdentifierDeclType	int		5302525	0					
ANR	5302552	Identifier	j		5302525	1					
ANR	5302553	ForStatement	for ( j = 0 ; j < LPC_ORDER ; j ++ )		5302525	3					
ANR	5302554	ForInit	j = 0 ;	15:9:165:170	5302525	0	True				
ANR	5302555	AssignmentExpression	j = 0		5302525	0		=			
ANR	5302556	Identifier	j		5302525	0					
ANR	5302557	PrimaryExpression	0		5302525	1					
ANR	5302558	Condition	j < LPC_ORDER	15:16:172:184	5302525	1	True				
ANR	5302559	RelationalExpression	j < LPC_ORDER		5302525	0		<			
ANR	5302560	Identifier	j		5302525	0					
ANR	5302561	Identifier	LPC_ORDER		5302525	1					
ANR	5302562	PostIncDecOperationExpression	j ++	15:31:187:189	5302525	2	True				
ANR	5302563	Identifier	j		5302525	0					
ANR	5302564	IncDec	++		5302525	1					
ANR	5302565	CompoundStatement		21:8:302:412	5302525	3					
ANR	5302566	IdentifierDeclStatement	int index = ( lpc [ j ] >> 7 ) & 0x1FF ;	17:8:203:240	5302525	0	True				
ANR	5302567	IdentifierDecl	index = ( lpc [ j ] >> 7 ) & 0x1FF		5302525	0					
ANR	5302568	IdentifierDeclType	int		5302525	0					
ANR	5302569	Identifier	index		5302525	1					
ANR	5302570	AssignmentExpression	index = ( lpc [ j ] >> 7 ) & 0x1FF		5302525	2		=			
ANR	5302571	Identifier	index		5302525	0					
ANR	5302572	BitAndExpression	( lpc [ j ] >> 7 ) & 0x1FF		5302525	1		&			
ANR	5302573	ShiftExpression	lpc [ j ] >> 7		5302525	0		>>			
ANR	5302574	ArrayIndexing	lpc [ j ]		5302525	0					
ANR	5302575	Identifier	lpc		5302525	0					
ANR	5302576	Identifier	j		5302525	1					
ANR	5302577	PrimaryExpression	7		5302525	1					
ANR	5302578	PrimaryExpression	0x1FF		5302525	1					
ANR	5302579	IdentifierDeclStatement	int offset = lpc [ j ] & 0x7f ;	19:8:251:280	5302525	1	True				
ANR	5302580	IdentifierDecl	offset = lpc [ j ] & 0x7f		5302525	0					
ANR	5302581	IdentifierDeclType	int		5302525	0					
ANR	5302582	Identifier	offset		5302525	1					
ANR	5302583	AssignmentExpression	offset = lpc [ j ] & 0x7f		5302525	2		=			
ANR	5302584	Identifier	offset		5302525	0					
ANR	5302585	BitAndExpression	lpc [ j ] & 0x7f		5302525	1		&			
ANR	5302586	ArrayIndexing	lpc [ j ]		5302525	0					
ANR	5302587	Identifier	lpc		5302525	0					
ANR	5302588	Identifier	j		5302525	1					
ANR	5302589	PrimaryExpression	0x7f		5302525	1					
ANR	5302590	IdentifierDeclStatement	int temp1 = cos_tab [ index ] << 16 ;	21:8:291:327	5302525	2	True				
ANR	5302591	IdentifierDecl	temp1 = cos_tab [ index ] << 16		5302525	0					
ANR	5302592	IdentifierDeclType	int		5302525	0					
ANR	5302593	Identifier	temp1		5302525	1					
ANR	5302594	AssignmentExpression	temp1 = cos_tab [ index ] << 16		5302525	2		=			
ANR	5302595	Identifier	temp1		5302525	0					
ANR	5302596	ShiftExpression	cos_tab [ index ] << 16		5302525	1		<<			
ANR	5302597	ArrayIndexing	cos_tab [ index ]		5302525	0					
ANR	5302598	Identifier	cos_tab		5302525	0					
ANR	5302599	Identifier	index		5302525	1					
ANR	5302600	PrimaryExpression	16		5302525	1					
ANR	5302601	IdentifierDeclStatement	int temp2 = ( cos_tab [ index + 1 ] - cos_tab [ index ] ) * ( ( offset << 8 ) + 0x80 ) << 1 ;	23:8:338:448	5302525	3	True				
ANR	5302602	IdentifierDecl	temp2 = ( cos_tab [ index + 1 ] - cos_tab [ index ] ) * ( ( offset << 8 ) + 0x80 ) << 1		5302525	0					
ANR	5302603	IdentifierDeclType	int		5302525	0					
ANR	5302604	Identifier	temp2		5302525	1					
ANR	5302605	AssignmentExpression	temp2 = ( cos_tab [ index + 1 ] - cos_tab [ index ] ) * ( ( offset << 8 ) + 0x80 ) << 1		5302525	2		=			
ANR	5302606	Identifier	temp2		5302525	0					
ANR	5302607	ShiftExpression	( cos_tab [ index + 1 ] - cos_tab [ index ] ) * ( ( offset << 8 ) + 0x80 ) << 1		5302525	1		<<			
ANR	5302608	MultiplicativeExpression	( cos_tab [ index + 1 ] - cos_tab [ index ] ) * ( ( offset << 8 ) + 0x80 )		5302525	0		*			
ANR	5302609	AdditiveExpression	cos_tab [ index + 1 ] - cos_tab [ index ]		5302525	0		-			
ANR	5302610	ArrayIndexing	cos_tab [ index + 1 ]		5302525	0					
ANR	5302611	Identifier	cos_tab		5302525	0					
ANR	5302612	AdditiveExpression	index + 1		5302525	1		+			
ANR	5302613	Identifier	index		5302525	0					
ANR	5302614	PrimaryExpression	1		5302525	1					
ANR	5302615	ArrayIndexing	cos_tab [ index ]		5302525	1					
ANR	5302616	Identifier	cos_tab		5302525	0					
ANR	5302617	Identifier	index		5302525	1					
ANR	5302618	AdditiveExpression	( offset << 8 ) + 0x80		5302525	1		+			
ANR	5302619	ShiftExpression	offset << 8		5302525	0		<<			
ANR	5302620	Identifier	offset		5302525	0					
ANR	5302621	PrimaryExpression	8		5302525	1					
ANR	5302622	PrimaryExpression	0x80		5302525	1					
ANR	5302623	PrimaryExpression	1		5302525	1					
ANR	5302624	ExpressionStatement	"lpc [ j ] = - ( av_sat_dadd32 ( 1 << 15 , temp1 + temp2 ) >> 16 )"	29:8:461:516	5302525	4	True				
ANR	5302625	AssignmentExpression	"lpc [ j ] = - ( av_sat_dadd32 ( 1 << 15 , temp1 + temp2 ) >> 16 )"		5302525	0		=			
ANR	5302626	ArrayIndexing	lpc [ j ]		5302525	0					
ANR	5302627	Identifier	lpc		5302525	0					
ANR	5302628	Identifier	j		5302525	1					
ANR	5302629	UnaryOperationExpression	"- ( av_sat_dadd32 ( 1 << 15 , temp1 + temp2 ) >> 16 )"		5302525	1					
ANR	5302630	UnaryOperator	-		5302525	0					
ANR	5302631	ShiftExpression	"av_sat_dadd32 ( 1 << 15 , temp1 + temp2 ) >> 16"		5302525	1		>>			
ANR	5302632	CallExpression	"av_sat_dadd32 ( 1 << 15 , temp1 + temp2 )"		5302525	0					
ANR	5302633	Callee	av_sat_dadd32		5302525	0					
ANR	5302634	Identifier	av_sat_dadd32		5302525	0					
ANR	5302635	ArgumentList	1 << 15		5302525	1					
ANR	5302636	Argument	1 << 15		5302525	0					
ANR	5302637	ShiftExpression	1 << 15		5302525	0		<<			
ANR	5302638	PrimaryExpression	1		5302525	0					
ANR	5302639	PrimaryExpression	15		5302525	1					
ANR	5302640	Argument	temp1 + temp2		5302525	1					
ANR	5302641	AdditiveExpression	temp1 + temp2		5302525	0		+			
ANR	5302642	Identifier	temp1		5302525	0					
ANR	5302643	Identifier	temp2		5302525	1					
ANR	5302644	PrimaryExpression	16		5302525	1					
ANR	5302645	ExpressionStatement	f1 [ 0 ] = 1 << 28	45:4:703:718	5302525	4	True				
ANR	5302646	AssignmentExpression	f1 [ 0 ] = 1 << 28		5302525	0		=			
ANR	5302647	ArrayIndexing	f1 [ 0 ]		5302525	0					
ANR	5302648	Identifier	f1		5302525	0					
ANR	5302649	PrimaryExpression	0		5302525	1					
ANR	5302650	ShiftExpression	1 << 28		5302525	1		<<			
ANR	5302651	PrimaryExpression	1		5302525	0					
ANR	5302652	PrimaryExpression	28		5302525	1					
ANR	5302653	ExpressionStatement	f1 [ 1 ] = ( lpc [ 0 ] << 14 ) + ( lpc [ 2 ] << 14 )	47:4:725:764	5302525	5	True				
ANR	5302654	AssignmentExpression	f1 [ 1 ] = ( lpc [ 0 ] << 14 ) + ( lpc [ 2 ] << 14 )		5302525	0		=			
ANR	5302655	ArrayIndexing	f1 [ 1 ]		5302525	0					
ANR	5302656	Identifier	f1		5302525	0					
ANR	5302657	PrimaryExpression	1		5302525	1					
ANR	5302658	AdditiveExpression	( lpc [ 0 ] << 14 ) + ( lpc [ 2 ] << 14 )		5302525	1		+			
ANR	5302659	ShiftExpression	lpc [ 0 ] << 14		5302525	0		<<			
ANR	5302660	ArrayIndexing	lpc [ 0 ]		5302525	0					
ANR	5302661	Identifier	lpc		5302525	0					
ANR	5302662	PrimaryExpression	0		5302525	1					
ANR	5302663	PrimaryExpression	14		5302525	1					
ANR	5302664	ShiftExpression	lpc [ 2 ] << 14		5302525	1		<<			
ANR	5302665	ArrayIndexing	lpc [ 2 ]		5302525	0					
ANR	5302666	Identifier	lpc		5302525	0					
ANR	5302667	PrimaryExpression	2		5302525	1					
ANR	5302668	PrimaryExpression	14		5302525	1					
ANR	5302669	ExpressionStatement	f1 [ 2 ] = lpc [ 0 ] * lpc [ 2 ] + ( 2 << 28 )	49:4:771:806	5302525	6	True				
ANR	5302670	AssignmentExpression	f1 [ 2 ] = lpc [ 0 ] * lpc [ 2 ] + ( 2 << 28 )		5302525	0		=			
ANR	5302671	ArrayIndexing	f1 [ 2 ]		5302525	0					
ANR	5302672	Identifier	f1		5302525	0					
ANR	5302673	PrimaryExpression	2		5302525	1					
ANR	5302674	AdditiveExpression	lpc [ 0 ] * lpc [ 2 ] + ( 2 << 28 )		5302525	1		+			
ANR	5302675	MultiplicativeExpression	lpc [ 0 ] * lpc [ 2 ]		5302525	0		*			
ANR	5302676	ArrayIndexing	lpc [ 0 ]		5302525	0					
ANR	5302677	Identifier	lpc		5302525	0					
ANR	5302678	PrimaryExpression	0		5302525	1					
ANR	5302679	ArrayIndexing	lpc [ 2 ]		5302525	1					
ANR	5302680	Identifier	lpc		5302525	0					
ANR	5302681	PrimaryExpression	2		5302525	1					
ANR	5302682	ShiftExpression	2 << 28		5302525	1		<<			
ANR	5302683	PrimaryExpression	2		5302525	0					
ANR	5302684	PrimaryExpression	28		5302525	1					
ANR	5302685	ExpressionStatement	f2 [ 0 ] = 1 << 28	53:4:815:830	5302525	7	True				
ANR	5302686	AssignmentExpression	f2 [ 0 ] = 1 << 28		5302525	0		=			
ANR	5302687	ArrayIndexing	f2 [ 0 ]		5302525	0					
ANR	5302688	Identifier	f2		5302525	0					
ANR	5302689	PrimaryExpression	0		5302525	1					
ANR	5302690	ShiftExpression	1 << 28		5302525	1		<<			
ANR	5302691	PrimaryExpression	1		5302525	0					
ANR	5302692	PrimaryExpression	28		5302525	1					
ANR	5302693	ExpressionStatement	f2 [ 1 ] = ( lpc [ 1 ] << 14 ) + ( lpc [ 3 ] << 14 )	55:4:837:876	5302525	8	True				
ANR	5302694	AssignmentExpression	f2 [ 1 ] = ( lpc [ 1 ] << 14 ) + ( lpc [ 3 ] << 14 )		5302525	0		=			
ANR	5302695	ArrayIndexing	f2 [ 1 ]		5302525	0					
ANR	5302696	Identifier	f2		5302525	0					
ANR	5302697	PrimaryExpression	1		5302525	1					
ANR	5302698	AdditiveExpression	( lpc [ 1 ] << 14 ) + ( lpc [ 3 ] << 14 )		5302525	1		+			
ANR	5302699	ShiftExpression	lpc [ 1 ] << 14		5302525	0		<<			
ANR	5302700	ArrayIndexing	lpc [ 1 ]		5302525	0					
ANR	5302701	Identifier	lpc		5302525	0					
ANR	5302702	PrimaryExpression	1		5302525	1					
ANR	5302703	PrimaryExpression	14		5302525	1					
ANR	5302704	ShiftExpression	lpc [ 3 ] << 14		5302525	1		<<			
ANR	5302705	ArrayIndexing	lpc [ 3 ]		5302525	0					
ANR	5302706	Identifier	lpc		5302525	0					
ANR	5302707	PrimaryExpression	3		5302525	1					
ANR	5302708	PrimaryExpression	14		5302525	1					
ANR	5302709	ExpressionStatement	f2 [ 2 ] = lpc [ 1 ] * lpc [ 3 ] + ( 2 << 28 )	57:4:883:918	5302525	9	True				
ANR	5302710	AssignmentExpression	f2 [ 2 ] = lpc [ 1 ] * lpc [ 3 ] + ( 2 << 28 )		5302525	0		=			
ANR	5302711	ArrayIndexing	f2 [ 2 ]		5302525	0					
ANR	5302712	Identifier	f2		5302525	0					
ANR	5302713	PrimaryExpression	2		5302525	1					
ANR	5302714	AdditiveExpression	lpc [ 1 ] * lpc [ 3 ] + ( 2 << 28 )		5302525	1		+			
ANR	5302715	MultiplicativeExpression	lpc [ 1 ] * lpc [ 3 ]		5302525	0		*			
ANR	5302716	ArrayIndexing	lpc [ 1 ]		5302525	0					
ANR	5302717	Identifier	lpc		5302525	0					
ANR	5302718	PrimaryExpression	1		5302525	1					
ANR	5302719	ArrayIndexing	lpc [ 3 ]		5302525	1					
ANR	5302720	Identifier	lpc		5302525	0					
ANR	5302721	PrimaryExpression	3		5302525	1					
ANR	5302722	ShiftExpression	2 << 28		5302525	1		<<			
ANR	5302723	PrimaryExpression	2		5302525	0					
ANR	5302724	PrimaryExpression	28		5302525	1					
ANR	5302725	ForStatement	for ( i = 2 ; i < LPC_ORDER / 2 ; i ++ )		5302525	10					
ANR	5302726	ForInit	i = 2 ;	69:9:1061:1066	5302525	0	True				
ANR	5302727	AssignmentExpression	i = 2		5302525	0		=			
ANR	5302728	Identifier	i		5302525	0					
ANR	5302729	PrimaryExpression	2		5302525	1					
ANR	5302730	Condition	i < LPC_ORDER / 2	69:16:1068:1084	5302525	1	True				
ANR	5302731	RelationalExpression	i < LPC_ORDER / 2		5302525	0		<			
ANR	5302732	Identifier	i		5302525	0					
ANR	5302733	MultiplicativeExpression	LPC_ORDER / 2		5302525	1		/			
ANR	5302734	Identifier	LPC_ORDER		5302525	0					
ANR	5302735	PrimaryExpression	2		5302525	1					
ANR	5302736	PostIncDecOperationExpression	i ++	69:35:1087:1089	5302525	2	True				
ANR	5302737	Identifier	i		5302525	0					
ANR	5302738	IncDec	++		5302525	1					
ANR	5302739	CompoundStatement		67:40:1056:1056	5302525	3					
ANR	5302740	ExpressionStatement	"f1 [ i + 1 ] = f1 [ i - 1 ] + MULL2 ( f1 [ i ] , lpc [ 2 * i ] )"	71:8:1103:1151	5302525	0	True				
ANR	5302741	AssignmentExpression	"f1 [ i + 1 ] = f1 [ i - 1 ] + MULL2 ( f1 [ i ] , lpc [ 2 * i ] )"		5302525	0		=			
ANR	5302742	ArrayIndexing	f1 [ i + 1 ]		5302525	0					
ANR	5302743	Identifier	f1		5302525	0					
ANR	5302744	AdditiveExpression	i + 1		5302525	1		+			
ANR	5302745	Identifier	i		5302525	0					
ANR	5302746	PrimaryExpression	1		5302525	1					
ANR	5302747	AdditiveExpression	"f1 [ i - 1 ] + MULL2 ( f1 [ i ] , lpc [ 2 * i ] )"		5302525	1		+			
ANR	5302748	ArrayIndexing	f1 [ i - 1 ]		5302525	0					
ANR	5302749	Identifier	f1		5302525	0					
ANR	5302750	AdditiveExpression	i - 1		5302525	1		-			
ANR	5302751	Identifier	i		5302525	0					
ANR	5302752	PrimaryExpression	1		5302525	1					
ANR	5302753	CallExpression	"MULL2 ( f1 [ i ] , lpc [ 2 * i ] )"		5302525	1					
ANR	5302754	Callee	MULL2		5302525	0					
ANR	5302755	Identifier	MULL2		5302525	0					
ANR	5302756	ArgumentList	f1 [ i ]		5302525	1					
ANR	5302757	Argument	f1 [ i ]		5302525	0					
ANR	5302758	ArrayIndexing	f1 [ i ]		5302525	0					
ANR	5302759	Identifier	f1		5302525	0					
ANR	5302760	Identifier	i		5302525	1					
ANR	5302761	Argument	lpc [ 2 * i ]		5302525	1					
ANR	5302762	ArrayIndexing	lpc [ 2 * i ]		5302525	0					
ANR	5302763	Identifier	lpc		5302525	0					
ANR	5302764	MultiplicativeExpression	2 * i		5302525	1		*			
ANR	5302765	PrimaryExpression	2		5302525	0					
ANR	5302766	Identifier	i		5302525	1					
ANR	5302767	ExpressionStatement	"f2 [ i + 1 ] = f2 [ i - 1 ] + MULL2 ( f2 [ i ] , lpc [ 2 * i + 1 ] )"	73:8:1162:1214	5302525	1	True				
ANR	5302768	AssignmentExpression	"f2 [ i + 1 ] = f2 [ i - 1 ] + MULL2 ( f2 [ i ] , lpc [ 2 * i + 1 ] )"		5302525	0		=			
ANR	5302769	ArrayIndexing	f2 [ i + 1 ]		5302525	0					
ANR	5302770	Identifier	f2		5302525	0					
ANR	5302771	AdditiveExpression	i + 1		5302525	1		+			
ANR	5302772	Identifier	i		5302525	0					
ANR	5302773	PrimaryExpression	1		5302525	1					
ANR	5302774	AdditiveExpression	"f2 [ i - 1 ] + MULL2 ( f2 [ i ] , lpc [ 2 * i + 1 ] )"		5302525	1		+			
ANR	5302775	ArrayIndexing	f2 [ i - 1 ]		5302525	0					
ANR	5302776	Identifier	f2		5302525	0					
ANR	5302777	AdditiveExpression	i - 1		5302525	1		-			
ANR	5302778	Identifier	i		5302525	0					
ANR	5302779	PrimaryExpression	1		5302525	1					
ANR	5302780	CallExpression	"MULL2 ( f2 [ i ] , lpc [ 2 * i + 1 ] )"		5302525	1					
ANR	5302781	Callee	MULL2		5302525	0					
ANR	5302782	Identifier	MULL2		5302525	0					
ANR	5302783	ArgumentList	f2 [ i ]		5302525	1					
ANR	5302784	Argument	f2 [ i ]		5302525	0					
ANR	5302785	ArrayIndexing	f2 [ i ]		5302525	0					
ANR	5302786	Identifier	f2		5302525	0					
ANR	5302787	Identifier	i		5302525	1					
ANR	5302788	Argument	lpc [ 2 * i + 1 ]		5302525	1					
ANR	5302789	ArrayIndexing	lpc [ 2 * i + 1 ]		5302525	0					
ANR	5302790	Identifier	lpc		5302525	0					
ANR	5302791	AdditiveExpression	2 * i + 1		5302525	1		+			
ANR	5302792	MultiplicativeExpression	2 * i		5302525	0		*			
ANR	5302793	PrimaryExpression	2		5302525	0					
ANR	5302794	Identifier	i		5302525	1					
ANR	5302795	PrimaryExpression	1		5302525	1					
ANR	5302796	ForStatement	for ( j = i ; j >= 2 ; j -- )		5302525	2					
ANR	5302797	ForInit	j = i ;	77:13:1232:1237	5302525	0	True				
ANR	5302798	AssignmentExpression	j = i		5302525	0		=			
ANR	5302799	Identifier	j		5302525	0					
ANR	5302800	Identifier	i		5302525	1					
ANR	5302801	Condition	j >= 2	77:20:1239:1244	5302525	1	True				
ANR	5302802	RelationalExpression	j >= 2		5302525	0		>=			
ANR	5302803	Identifier	j		5302525	0					
ANR	5302804	PrimaryExpression	2		5302525	1					
ANR	5302805	PostIncDecOperationExpression	j --	77:28:1247:1249	5302525	2	True				
ANR	5302806	Identifier	j		5302525	0					
ANR	5302807	IncDec	--		5302525	1					
ANR	5302808	CompoundStatement		75:33:1216:1216	5302525	3					
ANR	5302809	ExpressionStatement	"f1 [ j ] = MULL2 ( f1 [ j - 1 ] , lpc [ 2 * i ] ) + ( f1 [ j ] >> 1 ) + ( f1 [ j - 2 ] >> 1 )"	79:12:1267:1358	5302525	0	True				
ANR	5302810	AssignmentExpression	"f1 [ j ] = MULL2 ( f1 [ j - 1 ] , lpc [ 2 * i ] ) + ( f1 [ j ] >> 1 ) + ( f1 [ j - 2 ] >> 1 )"		5302525	0		=			
ANR	5302811	ArrayIndexing	f1 [ j ]		5302525	0					
ANR	5302812	Identifier	f1		5302525	0					
ANR	5302813	Identifier	j		5302525	1					
ANR	5302814	AdditiveExpression	"MULL2 ( f1 [ j - 1 ] , lpc [ 2 * i ] ) + ( f1 [ j ] >> 1 ) + ( f1 [ j - 2 ] >> 1 )"		5302525	1		+			
ANR	5302815	CallExpression	"MULL2 ( f1 [ j - 1 ] , lpc [ 2 * i ] )"		5302525	0					
ANR	5302816	Callee	MULL2		5302525	0					
ANR	5302817	Identifier	MULL2		5302525	0					
ANR	5302818	ArgumentList	f1 [ j - 1 ]		5302525	1					
ANR	5302819	Argument	f1 [ j - 1 ]		5302525	0					
ANR	5302820	ArrayIndexing	f1 [ j - 1 ]		5302525	0					
ANR	5302821	Identifier	f1		5302525	0					
ANR	5302822	AdditiveExpression	j - 1		5302525	1		-			
ANR	5302823	Identifier	j		5302525	0					
ANR	5302824	PrimaryExpression	1		5302525	1					
ANR	5302825	Argument	lpc [ 2 * i ]		5302525	1					
ANR	5302826	ArrayIndexing	lpc [ 2 * i ]		5302525	0					
ANR	5302827	Identifier	lpc		5302525	0					
ANR	5302828	MultiplicativeExpression	2 * i		5302525	1		*			
ANR	5302829	PrimaryExpression	2		5302525	0					
ANR	5302830	Identifier	i		5302525	1					
ANR	5302831	AdditiveExpression	( f1 [ j ] >> 1 ) + ( f1 [ j - 2 ] >> 1 )		5302525	1		+			
ANR	5302832	ShiftExpression	f1 [ j ] >> 1		5302525	0		>>			
ANR	5302833	ArrayIndexing	f1 [ j ]		5302525	0					
ANR	5302834	Identifier	f1		5302525	0					
ANR	5302835	Identifier	j		5302525	1					
ANR	5302836	PrimaryExpression	1		5302525	1					
ANR	5302837	ShiftExpression	f1 [ j - 2 ] >> 1		5302525	1		>>			
ANR	5302838	ArrayIndexing	f1 [ j - 2 ]		5302525	0					
ANR	5302839	Identifier	f1		5302525	0					
ANR	5302840	AdditiveExpression	j - 2		5302525	1		-			
ANR	5302841	Identifier	j		5302525	0					
ANR	5302842	PrimaryExpression	2		5302525	1					
ANR	5302843	PrimaryExpression	1		5302525	1					
ANR	5302844	ExpressionStatement	"f2 [ j ] = MULL2 ( f2 [ j - 1 ] , lpc [ 2 * i + 1 ] ) + ( f2 [ j ] >> 1 ) + ( f2 [ j - 2 ] >> 1 )"	83:12:1373:1468	5302525	1	True				
ANR	5302845	AssignmentExpression	"f2 [ j ] = MULL2 ( f2 [ j - 1 ] , lpc [ 2 * i + 1 ] ) + ( f2 [ j ] >> 1 ) + ( f2 [ j - 2 ] >> 1 )"		5302525	0		=			
ANR	5302846	ArrayIndexing	f2 [ j ]		5302525	0					
ANR	5302847	Identifier	f2		5302525	0					
ANR	5302848	Identifier	j		5302525	1					
ANR	5302849	AdditiveExpression	"MULL2 ( f2 [ j - 1 ] , lpc [ 2 * i + 1 ] ) + ( f2 [ j ] >> 1 ) + ( f2 [ j - 2 ] >> 1 )"		5302525	1		+			
ANR	5302850	CallExpression	"MULL2 ( f2 [ j - 1 ] , lpc [ 2 * i + 1 ] )"		5302525	0					
ANR	5302851	Callee	MULL2		5302525	0					
ANR	5302852	Identifier	MULL2		5302525	0					
ANR	5302853	ArgumentList	f2 [ j - 1 ]		5302525	1					
ANR	5302854	Argument	f2 [ j - 1 ]		5302525	0					
ANR	5302855	ArrayIndexing	f2 [ j - 1 ]		5302525	0					
ANR	5302856	Identifier	f2		5302525	0					
ANR	5302857	AdditiveExpression	j - 1		5302525	1		-			
ANR	5302858	Identifier	j		5302525	0					
ANR	5302859	PrimaryExpression	1		5302525	1					
ANR	5302860	Argument	lpc [ 2 * i + 1 ]		5302525	1					
ANR	5302861	ArrayIndexing	lpc [ 2 * i + 1 ]		5302525	0					
ANR	5302862	Identifier	lpc		5302525	0					
ANR	5302863	AdditiveExpression	2 * i + 1		5302525	1		+			
ANR	5302864	MultiplicativeExpression	2 * i		5302525	0		*			
ANR	5302865	PrimaryExpression	2		5302525	0					
ANR	5302866	Identifier	i		5302525	1					
ANR	5302867	PrimaryExpression	1		5302525	1					
ANR	5302868	AdditiveExpression	( f2 [ j ] >> 1 ) + ( f2 [ j - 2 ] >> 1 )		5302525	1		+			
ANR	5302869	ShiftExpression	f2 [ j ] >> 1		5302525	0		>>			
ANR	5302870	ArrayIndexing	f2 [ j ]		5302525	0					
ANR	5302871	Identifier	f2		5302525	0					
ANR	5302872	Identifier	j		5302525	1					
ANR	5302873	PrimaryExpression	1		5302525	1					
ANR	5302874	ShiftExpression	f2 [ j - 2 ] >> 1		5302525	1		>>			
ANR	5302875	ArrayIndexing	f2 [ j - 2 ]		5302525	0					
ANR	5302876	Identifier	f2		5302525	0					
ANR	5302877	AdditiveExpression	j - 2		5302525	1		-			
ANR	5302878	Identifier	j		5302525	0					
ANR	5302879	PrimaryExpression	2		5302525	1					
ANR	5302880	PrimaryExpression	1		5302525	1					
ANR	5302881	ExpressionStatement	f1 [ 0 ] >>= 1	91:8:1492:1503	5302525	3	True				
ANR	5302882	AssignmentExpression	f1 [ 0 ] >>= 1		5302525	0		>>=			
ANR	5302883	ArrayIndexing	f1 [ 0 ]		5302525	0					
ANR	5302884	Identifier	f1		5302525	0					
ANR	5302885	PrimaryExpression	0		5302525	1					
ANR	5302886	PrimaryExpression	1		5302525	1					
ANR	5302887	ExpressionStatement	f2 [ 0 ] >>= 1	93:8:1514:1525	5302525	4	True				
ANR	5302888	AssignmentExpression	f2 [ 0 ] >>= 1		5302525	0		>>=			
ANR	5302889	ArrayIndexing	f2 [ 0 ]		5302525	0					
ANR	5302890	Identifier	f2		5302525	0					
ANR	5302891	PrimaryExpression	0		5302525	1					
ANR	5302892	PrimaryExpression	1		5302525	1					
ANR	5302893	ExpressionStatement	f1 [ 1 ] = ( ( lpc [ 2 * i ] << 16 >> i ) + f1 [ 1 ] ) >> 1	95:8:1536:1586	5302525	5	True				
ANR	5302894	AssignmentExpression	f1 [ 1 ] = ( ( lpc [ 2 * i ] << 16 >> i ) + f1 [ 1 ] ) >> 1		5302525	0		=			
ANR	5302895	ArrayIndexing	f1 [ 1 ]		5302525	0					
ANR	5302896	Identifier	f1		5302525	0					
ANR	5302897	PrimaryExpression	1		5302525	1					
ANR	5302898	ShiftExpression	( ( lpc [ 2 * i ] << 16 >> i ) + f1 [ 1 ] ) >> 1		5302525	1		>>			
ANR	5302899	AdditiveExpression	( lpc [ 2 * i ] << 16 >> i ) + f1 [ 1 ]		5302525	0		+			
ANR	5302900	ShiftExpression	lpc [ 2 * i ] << 16 >> i		5302525	0		<<			
ANR	5302901	ArrayIndexing	lpc [ 2 * i ]		5302525	0					
ANR	5302902	Identifier	lpc		5302525	0					
ANR	5302903	MultiplicativeExpression	2 * i		5302525	1		*			
ANR	5302904	PrimaryExpression	2		5302525	0					
ANR	5302905	Identifier	i		5302525	1					
ANR	5302906	ShiftExpression	16 >> i		5302525	1		>>			
ANR	5302907	PrimaryExpression	16		5302525	0					
ANR	5302908	Identifier	i		5302525	1					
ANR	5302909	ArrayIndexing	f1 [ 1 ]		5302525	1					
ANR	5302910	Identifier	f1		5302525	0					
ANR	5302911	PrimaryExpression	1		5302525	1					
ANR	5302912	PrimaryExpression	1		5302525	1					
ANR	5302913	ExpressionStatement	f2 [ 1 ] = ( ( lpc [ 2 * i + 1 ] << 16 >> i ) + f2 [ 1 ] ) >> 1	97:8:1597:1647	5302525	6	True				
ANR	5302914	AssignmentExpression	f2 [ 1 ] = ( ( lpc [ 2 * i + 1 ] << 16 >> i ) + f2 [ 1 ] ) >> 1		5302525	0		=			
ANR	5302915	ArrayIndexing	f2 [ 1 ]		5302525	0					
ANR	5302916	Identifier	f2		5302525	0					
ANR	5302917	PrimaryExpression	1		5302525	1					
ANR	5302918	ShiftExpression	( ( lpc [ 2 * i + 1 ] << 16 >> i ) + f2 [ 1 ] ) >> 1		5302525	1		>>			
ANR	5302919	AdditiveExpression	( lpc [ 2 * i + 1 ] << 16 >> i ) + f2 [ 1 ]		5302525	0		+			
ANR	5302920	ShiftExpression	lpc [ 2 * i + 1 ] << 16 >> i		5302525	0		<<			
ANR	5302921	ArrayIndexing	lpc [ 2 * i + 1 ]		5302525	0					
ANR	5302922	Identifier	lpc		5302525	0					
ANR	5302923	AdditiveExpression	2 * i + 1		5302525	1		+			
ANR	5302924	MultiplicativeExpression	2 * i		5302525	0		*			
ANR	5302925	PrimaryExpression	2		5302525	0					
ANR	5302926	Identifier	i		5302525	1					
ANR	5302927	PrimaryExpression	1		5302525	1					
ANR	5302928	ShiftExpression	16 >> i		5302525	1		>>			
ANR	5302929	PrimaryExpression	16		5302525	0					
ANR	5302930	Identifier	i		5302525	1					
ANR	5302931	ArrayIndexing	f2 [ 1 ]		5302525	1					
ANR	5302932	Identifier	f2		5302525	0					
ANR	5302933	PrimaryExpression	1		5302525	1					
ANR	5302934	PrimaryExpression	1		5302525	1					
ANR	5302935	ForStatement	for ( i = 0 ; i < LPC_ORDER / 2 ; i ++ )		5302525	11					
ANR	5302936	ForInit	i = 0 ;	105:9:1731:1736	5302525	0	True				
ANR	5302937	AssignmentExpression	i = 0		5302525	0		=			
ANR	5302938	Identifier	i		5302525	0					
ANR	5302939	PrimaryExpression	0		5302525	1					
ANR	5302940	Condition	i < LPC_ORDER / 2	105:16:1738:1754	5302525	1	True				
ANR	5302941	RelationalExpression	i < LPC_ORDER / 2		5302525	0		<			
ANR	5302942	Identifier	i		5302525	0					
ANR	5302943	MultiplicativeExpression	LPC_ORDER / 2		5302525	1		/			
ANR	5302944	Identifier	LPC_ORDER		5302525	0					
ANR	5302945	PrimaryExpression	2		5302525	1					
ANR	5302946	PostIncDecOperationExpression	i ++	105:35:1757:1759	5302525	2	True				
ANR	5302947	Identifier	i		5302525	0					
ANR	5302948	IncDec	++		5302525	1					
ANR	5302949	CompoundStatement		107:8:1779:1810	5302525	3					
ANR	5302950	IdentifierDeclStatement	int64_t ff1 = f1 [ i + 1 ] + f1 [ i ] ;	107:8:1773:1804	5302525	0	True				
ANR	5302951	IdentifierDecl	ff1 = f1 [ i + 1 ] + f1 [ i ]		5302525	0					
ANR	5302952	IdentifierDeclType	int64_t		5302525	0					
ANR	5302953	Identifier	ff1		5302525	1					
ANR	5302954	AssignmentExpression	ff1 = f1 [ i + 1 ] + f1 [ i ]		5302525	2		=			
ANR	5302955	Identifier	ff1		5302525	0					
ANR	5302956	AdditiveExpression	f1 [ i + 1 ] + f1 [ i ]		5302525	1		+			
ANR	5302957	ArrayIndexing	f1 [ i + 1 ]		5302525	0					
ANR	5302958	Identifier	f1		5302525	0					
ANR	5302959	AdditiveExpression	i + 1		5302525	1		+			
ANR	5302960	Identifier	i		5302525	0					
ANR	5302961	PrimaryExpression	1		5302525	1					
ANR	5302962	ArrayIndexing	f1 [ i ]		5302525	1					
ANR	5302963	Identifier	f1		5302525	0					
ANR	5302964	Identifier	i		5302525	1					
ANR	5302965	IdentifierDeclStatement	int64_t ff2 = f2 [ i + 1 ] - f2 [ i ] ;	109:8:1815:1846	5302525	1	True				
ANR	5302966	IdentifierDecl	ff2 = f2 [ i + 1 ] - f2 [ i ]		5302525	0					
ANR	5302967	IdentifierDeclType	int64_t		5302525	0					
ANR	5302968	Identifier	ff2		5302525	1					
ANR	5302969	AssignmentExpression	ff2 = f2 [ i + 1 ] - f2 [ i ]		5302525	2		=			
ANR	5302970	Identifier	ff2		5302525	0					
ANR	5302971	AdditiveExpression	f2 [ i + 1 ] - f2 [ i ]		5302525	1		-			
ANR	5302972	ArrayIndexing	f2 [ i + 1 ]		5302525	0					
ANR	5302973	Identifier	f2		5302525	0					
ANR	5302974	AdditiveExpression	i + 1		5302525	1		+			
ANR	5302975	Identifier	i		5302525	0					
ANR	5302976	PrimaryExpression	1		5302525	1					
ANR	5302977	ArrayIndexing	f2 [ i ]		5302525	1					
ANR	5302978	Identifier	f2		5302525	0					
ANR	5302979	Identifier	i		5302525	1					
ANR	5302980	ExpressionStatement	lpc [ i ] = av_clipl_int32 ( ( ( ff1 + ff2 ) << 3 ) + ( 1 << 15 ) ) >> 16	113:8:1859:1920	5302525	2	True				
ANR	5302981	AssignmentExpression	lpc [ i ] = av_clipl_int32 ( ( ( ff1 + ff2 ) << 3 ) + ( 1 << 15 ) ) >> 16		5302525	0		=			
ANR	5302982	ArrayIndexing	lpc [ i ]		5302525	0					
ANR	5302983	Identifier	lpc		5302525	0					
ANR	5302984	Identifier	i		5302525	1					
ANR	5302985	ShiftExpression	av_clipl_int32 ( ( ( ff1 + ff2 ) << 3 ) + ( 1 << 15 ) ) >> 16		5302525	1		>>			
ANR	5302986	CallExpression	av_clipl_int32 ( ( ( ff1 + ff2 ) << 3 ) + ( 1 << 15 ) )		5302525	0					
ANR	5302987	Callee	av_clipl_int32		5302525	0					
ANR	5302988	Identifier	av_clipl_int32		5302525	0					
ANR	5302989	ArgumentList	( ( ff1 + ff2 ) << 3 ) + ( 1 << 15 )		5302525	1					
ANR	5302990	Argument	( ( ff1 + ff2 ) << 3 ) + ( 1 << 15 )		5302525	0					
ANR	5302991	AdditiveExpression	( ( ff1 + ff2 ) << 3 ) + ( 1 << 15 )		5302525	0		+			
ANR	5302992	ShiftExpression	( ff1 + ff2 ) << 3		5302525	0		<<			
ANR	5302993	AdditiveExpression	ff1 + ff2		5302525	0		+			
ANR	5302994	Identifier	ff1		5302525	0					
ANR	5302995	Identifier	ff2		5302525	1					
ANR	5302996	PrimaryExpression	3		5302525	1					
ANR	5302997	ShiftExpression	1 << 15		5302525	1		<<			
ANR	5302998	PrimaryExpression	1		5302525	0					
ANR	5302999	PrimaryExpression	15		5302525	1					
ANR	5303000	PrimaryExpression	16		5302525	1					
ANR	5303001	ExpressionStatement	lpc [ LPC_ORDER - i - 1 ] = av_clipl_int32 ( ( ( ff1 - ff2 ) << 3 ) + ( 1 << 15 ) ) >> 16	115:8:1931:2057	5302525	3	True				
ANR	5303002	AssignmentExpression	lpc [ LPC_ORDER - i - 1 ] = av_clipl_int32 ( ( ( ff1 - ff2 ) << 3 ) + ( 1 << 15 ) ) >> 16		5302525	0		=			
ANR	5303003	ArrayIndexing	lpc [ LPC_ORDER - i - 1 ]		5302525	0					
ANR	5303004	Identifier	lpc		5302525	0					
ANR	5303005	AdditiveExpression	LPC_ORDER - i - 1		5302525	1		-			
ANR	5303006	Identifier	LPC_ORDER		5302525	0					
ANR	5303007	AdditiveExpression	i - 1		5302525	1		-			
ANR	5303008	Identifier	i		5302525	0					
ANR	5303009	PrimaryExpression	1		5302525	1					
ANR	5303010	ShiftExpression	av_clipl_int32 ( ( ( ff1 - ff2 ) << 3 ) + ( 1 << 15 ) ) >> 16		5302525	1		>>			
ANR	5303011	CallExpression	av_clipl_int32 ( ( ( ff1 - ff2 ) << 3 ) + ( 1 << 15 ) )		5302525	0					
ANR	5303012	Callee	av_clipl_int32		5302525	0					
ANR	5303013	Identifier	av_clipl_int32		5302525	0					
ANR	5303014	ArgumentList	( ( ff1 - ff2 ) << 3 ) + ( 1 << 15 )		5302525	1					
ANR	5303015	Argument	( ( ff1 - ff2 ) << 3 ) + ( 1 << 15 )		5302525	0					
ANR	5303016	AdditiveExpression	( ( ff1 - ff2 ) << 3 ) + ( 1 << 15 )		5302525	0		+			
ANR	5303017	ShiftExpression	( ff1 - ff2 ) << 3		5302525	0		<<			
ANR	5303018	AdditiveExpression	ff1 - ff2		5302525	0		-			
ANR	5303019	Identifier	ff1		5302525	0					
ANR	5303020	Identifier	ff2		5302525	1					
ANR	5303021	PrimaryExpression	3		5302525	1					
ANR	5303022	ShiftExpression	1 << 15		5302525	1		<<			
ANR	5303023	PrimaryExpression	1		5302525	0					
ANR	5303024	PrimaryExpression	15		5302525	1					
ANR	5303025	PrimaryExpression	16		5302525	1					
ANR	5303026	ReturnType	static void		5302525	1					
ANR	5303027	Identifier	lsp2lpc		5302525	2					
ANR	5303028	ParameterList	int16_t * lpc		5302525	3					
ANR	5303029	Parameter	int16_t * lpc	1:20:20:31	5302525	0	True				
ANR	5303030	ParameterType	int16_t *		5302525	0					
ANR	5303031	Identifier	lpc		5302525	1					
ANR	5303032	CFGEntryNode	ENTRY		5302525		True				
ANR	5303033	CFGExitNode	EXIT		5302525		True				
ANR	5303034	Symbol	LPC_ORDER		5302525						
ANR	5303035	Symbol	offset		5302525						
ANR	5303036	Symbol	* index		5302525						
ANR	5303037	Symbol	* LPC_ORDER		5302525						
ANR	5303038	Symbol	i		5302525						
ANR	5303039	Symbol	index		5302525						
ANR	5303040	Symbol	* lpc		5302525						
ANR	5303041	Symbol	cos_tab		5302525						
ANR	5303042	Symbol	j		5302525						
ANR	5303043	Symbol	f1		5302525						
ANR	5303044	Symbol	av_sat_dadd32		5302525						
ANR	5303045	Symbol	f2		5302525						
ANR	5303046	Symbol	temp2		5302525						
ANR	5303047	Symbol	MULL2		5302525						
ANR	5303048	Symbol	temp1		5302525						
ANR	5303049	Symbol	ff1		5302525						
ANR	5303050	Symbol	* f2		5302525						
ANR	5303051	Symbol	* f1		5302525						
ANR	5303052	Symbol	* cos_tab		5302525						
ANR	5303053	Symbol	* i		5302525						
ANR	5303054	Symbol	ff2		5302525						
ANR	5303055	Symbol	* j		5302525						
ANR	5303056	Symbol	av_clipl_int32		5302525						
ANR	5303057	Symbol	lpc		5302525						
