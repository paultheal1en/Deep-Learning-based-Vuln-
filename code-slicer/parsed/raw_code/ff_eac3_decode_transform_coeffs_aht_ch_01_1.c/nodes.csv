command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3243055	File	/home/p4ultr4n/workplace/ReVeal/raw_code/ff_eac3_decode_transform_coeffs_aht_ch_01_1.c								
ANR	3243056	Function	ff_eac3_decode_transform_coeffs_aht_ch	1:0:0:3847							
ANR	3243057	FunctionDef	"ff_eac3_decode_transform_coeffs_aht_ch (AC3DecodeContext * s , int ch)"		3243056	0					
ANR	3243058	CompoundStatement		3:0:81:3847	3243056	0					
ANR	3243059	IdentifierDeclStatement	"int bin , blk , gs ;"	5:4:88:104	3243056	0	True				
ANR	3243060	IdentifierDecl	bin		3243056	0					
ANR	3243061	IdentifierDeclType	int		3243056	0					
ANR	3243062	Identifier	bin		3243056	1					
ANR	3243063	IdentifierDecl	blk		3243056	1					
ANR	3243064	IdentifierDeclType	int		3243056	0					
ANR	3243065	Identifier	blk		3243056	1					
ANR	3243066	IdentifierDecl	gs		3243056	2					
ANR	3243067	IdentifierDeclType	int		3243056	0					
ANR	3243068	Identifier	gs		3243056	1					
ANR	3243069	IdentifierDeclStatement	"int end_bap , gaq_mode ;"	7:4:111:132	3243056	1	True				
ANR	3243070	IdentifierDecl	end_bap		3243056	0					
ANR	3243071	IdentifierDeclType	int		3243056	0					
ANR	3243072	Identifier	end_bap		3243056	1					
ANR	3243073	IdentifierDecl	gaq_mode		3243056	1					
ANR	3243074	IdentifierDeclType	int		3243056	0					
ANR	3243075	Identifier	gaq_mode		3243056	1					
ANR	3243076	IdentifierDeclStatement	GetBitContext * gbc = & s -> gbc ;	9:4:139:167	3243056	2	True				
ANR	3243077	IdentifierDecl	* gbc = & s -> gbc		3243056	0					
ANR	3243078	IdentifierDeclType	GetBitContext *		3243056	0					
ANR	3243079	Identifier	gbc		3243056	1					
ANR	3243080	AssignmentExpression	* gbc = & s -> gbc		3243056	2		=			
ANR	3243081	Identifier	gbc		3243056	0					
ANR	3243082	UnaryOperationExpression	& s -> gbc		3243056	1					
ANR	3243083	UnaryOperator	&		3243056	0					
ANR	3243084	PtrMemberAccess	s -> gbc		3243056	1					
ANR	3243085	Identifier	s		3243056	0					
ANR	3243086	Identifier	gbc		3243056	1					
ANR	3243087	IdentifierDeclStatement	int gaq_gain [ AC3_MAX_COEFS ] ;	11:4:174:201	3243056	3	True				
ANR	3243088	IdentifierDecl	gaq_gain [ AC3_MAX_COEFS ]		3243056	0					
ANR	3243089	IdentifierDeclType	int [ AC3_MAX_COEFS ]		3243056	0					
ANR	3243090	Identifier	gaq_gain		3243056	1					
ANR	3243091	Identifier	AC3_MAX_COEFS		3243056	2					
ANR	3243092	ExpressionStatement	"gaq_mode = get_bits ( gbc , 2 )"	15:4:210:237	3243056	4	True				
ANR	3243093	AssignmentExpression	"gaq_mode = get_bits ( gbc , 2 )"		3243056	0		=			
ANR	3243094	Identifier	gaq_mode		3243056	0					
ANR	3243095	CallExpression	"get_bits ( gbc , 2 )"		3243056	1					
ANR	3243096	Callee	get_bits		3243056	0					
ANR	3243097	Identifier	get_bits		3243056	0					
ANR	3243098	ArgumentList	gbc		3243056	1					
ANR	3243099	Argument	gbc		3243056	0					
ANR	3243100	Identifier	gbc		3243056	0					
ANR	3243101	Argument	2		3243056	1					
ANR	3243102	PrimaryExpression	2		3243056	0					
ANR	3243103	ExpressionStatement	end_bap = ( gaq_mode < 2 ) ? 12 : 17	17:4:244:278	3243056	5	True				
ANR	3243104	AssignmentExpression	end_bap = ( gaq_mode < 2 ) ? 12 : 17		3243056	0		=			
ANR	3243105	Identifier	end_bap		3243056	0					
ANR	3243106	ConditionalExpression	( gaq_mode < 2 ) ? 12 : 17		3243056	1					
ANR	3243107	Condition	gaq_mode < 2		3243056	0					
ANR	3243108	RelationalExpression	gaq_mode < 2		3243056	0		<			
ANR	3243109	Identifier	gaq_mode		3243056	0					
ANR	3243110	PrimaryExpression	2		3243056	1					
ANR	3243111	PrimaryExpression	12		3243056	1					
ANR	3243112	PrimaryExpression	17		3243056	2					
ANR	3243113	ExpressionStatement	gs = 0	25:4:387:393	3243056	6	True				
ANR	3243114	AssignmentExpression	gs = 0		3243056	0		=			
ANR	3243115	Identifier	gs		3243056	0					
ANR	3243116	PrimaryExpression	0		3243056	1					
ANR	3243117	IfStatement	if ( gaq_mode == EAC3_GAQ_12 || gaq_mode == EAC3_GAQ_14 )		3243056	7					
ANR	3243118	Condition	gaq_mode == EAC3_GAQ_12 || gaq_mode == EAC3_GAQ_14	27:8:404:453	3243056	0	True				
ANR	3243119	OrExpression	gaq_mode == EAC3_GAQ_12 || gaq_mode == EAC3_GAQ_14		3243056	0		||			
ANR	3243120	EqualityExpression	gaq_mode == EAC3_GAQ_12		3243056	0		==			
ANR	3243121	Identifier	gaq_mode		3243056	0					
ANR	3243122	Identifier	EAC3_GAQ_12		3243056	1					
ANR	3243123	EqualityExpression	gaq_mode == EAC3_GAQ_14		3243056	1		==			
ANR	3243124	Identifier	gaq_mode		3243056	0					
ANR	3243125	Identifier	EAC3_GAQ_14		3243056	1					
ANR	3243126	CompoundStatement		25:60:374:374	3243056	1					
ANR	3243127	ForStatement	for ( bin = s -> start_freq [ ch ] ; bin < s -> end_freq [ ch ] ; bin ++ )		3243056	0					
ANR	3243128	ForInit	bin = s -> start_freq [ ch ] ;	31:13:513:536	3243056	0	True				
ANR	3243129	AssignmentExpression	bin = s -> start_freq [ ch ]		3243056	0		=			
ANR	3243130	Identifier	bin		3243056	0					
ANR	3243131	ArrayIndexing	s -> start_freq [ ch ]		3243056	1					
ANR	3243132	PtrMemberAccess	s -> start_freq		3243056	0					
ANR	3243133	Identifier	s		3243056	0					
ANR	3243134	Identifier	start_freq		3243056	1					
ANR	3243135	Identifier	ch		3243056	1					
ANR	3243136	Condition	bin < s -> end_freq [ ch ]	31:38:538:558	3243056	1	True				
ANR	3243137	RelationalExpression	bin < s -> end_freq [ ch ]		3243056	0		<			
ANR	3243138	Identifier	bin		3243056	0					
ANR	3243139	ArrayIndexing	s -> end_freq [ ch ]		3243056	1					
ANR	3243140	PtrMemberAccess	s -> end_freq		3243056	0					
ANR	3243141	Identifier	s		3243056	0					
ANR	3243142	Identifier	end_freq		3243056	1					
ANR	3243143	Identifier	ch		3243056	1					
ANR	3243144	PostIncDecOperationExpression	bin ++	31:61:561:565	3243056	2	True				
ANR	3243145	Identifier	bin		3243056	0					
ANR	3243146	IncDec	++		3243056	1					
ANR	3243147	CompoundStatement		29:68:486:486	3243056	3					
ANR	3243148	IfStatement	if ( s -> bap [ ch ] [ bin ] > 7 && s -> bap [ ch ] [ bin ] < end_bap )		3243056	0					
ANR	3243149	Condition	s -> bap [ ch ] [ bin ] > 7 && s -> bap [ ch ] [ bin ] < end_bap	33:16:587:634	3243056	0	True				
ANR	3243150	AndExpression	s -> bap [ ch ] [ bin ] > 7 && s -> bap [ ch ] [ bin ] < end_bap		3243056	0		&&			
ANR	3243151	RelationalExpression	s -> bap [ ch ] [ bin ] > 7		3243056	0		>			
ANR	3243152	ArrayIndexing	s -> bap [ ch ] [ bin ]		3243056	0					
ANR	3243153	ArrayIndexing	s -> bap [ ch ]		3243056	0					
ANR	3243154	PtrMemberAccess	s -> bap		3243056	0					
ANR	3243155	Identifier	s		3243056	0					
ANR	3243156	Identifier	bap		3243056	1					
ANR	3243157	Identifier	ch		3243056	1					
ANR	3243158	Identifier	bin		3243056	1					
ANR	3243159	PrimaryExpression	7		3243056	1					
ANR	3243160	RelationalExpression	s -> bap [ ch ] [ bin ] < end_bap		3243056	1		<			
ANR	3243161	ArrayIndexing	s -> bap [ ch ] [ bin ]		3243056	0					
ANR	3243162	ArrayIndexing	s -> bap [ ch ]		3243056	0					
ANR	3243163	PtrMemberAccess	s -> bap		3243056	0					
ANR	3243164	Identifier	s		3243056	0					
ANR	3243165	Identifier	bap		3243056	1					
ANR	3243166	Identifier	ch		3243056	1					
ANR	3243167	Identifier	bin		3243056	1					
ANR	3243168	Identifier	end_bap		3243056	1					
ANR	3243169	ExpressionStatement	gaq_gain [ gs ++ ] = get_bits1 ( gbc ) << ( gaq_mode - 1 )	35:16:654:701	3243056	1	True				
ANR	3243170	AssignmentExpression	gaq_gain [ gs ++ ] = get_bits1 ( gbc ) << ( gaq_mode - 1 )		3243056	0		=			
ANR	3243171	ArrayIndexing	gaq_gain [ gs ++ ]		3243056	0					
ANR	3243172	Identifier	gaq_gain		3243056	0					
ANR	3243173	PostIncDecOperationExpression	gs ++		3243056	1					
ANR	3243174	Identifier	gs		3243056	0					
ANR	3243175	IncDec	++		3243056	1					
ANR	3243176	ShiftExpression	get_bits1 ( gbc ) << ( gaq_mode - 1 )		3243056	1		<<			
ANR	3243177	CallExpression	get_bits1 ( gbc )		3243056	0					
ANR	3243178	Callee	get_bits1		3243056	0					
ANR	3243179	Identifier	get_bits1		3243056	0					
ANR	3243180	ArgumentList	gbc		3243056	1					
ANR	3243181	Argument	gbc		3243056	0					
ANR	3243182	Identifier	gbc		3243056	0					
ANR	3243183	AdditiveExpression	gaq_mode - 1		3243056	1		-			
ANR	3243184	Identifier	gaq_mode		3243056	0					
ANR	3243185	PrimaryExpression	1		3243056	1					
ANR	3243186	ElseStatement	else		3243056	0					
ANR	3243187	IfStatement	if ( gaq_mode == EAC3_GAQ_124 )		3243056	0					
ANR	3243188	Condition	gaq_mode == EAC3_GAQ_124	39:15:730:753	3243056	0	True				
ANR	3243189	EqualityExpression	gaq_mode == EAC3_GAQ_124		3243056	0		==			
ANR	3243190	Identifier	gaq_mode		3243056	0					
ANR	3243191	Identifier	EAC3_GAQ_124		3243056	1					
ANR	3243192	CompoundStatement		41:8:749:759	3243056	1					
ANR	3243193	IdentifierDeclStatement	int gc = 2 ;	43:8:831:841	3243056	0	True				
ANR	3243194	IdentifierDecl	gc = 2		3243056	0					
ANR	3243195	IdentifierDeclType	int		3243056	0					
ANR	3243196	Identifier	gc		3243056	1					
ANR	3243197	AssignmentExpression	gc = 2		3243056	2		=			
ANR	3243198	Identifier	gc		3243056	0					
ANR	3243199	PrimaryExpression	2		3243056	1					
ANR	3243200	ForStatement	for ( bin = s -> start_freq [ ch ] ; bin < s -> end_freq [ ch ] ; bin ++ )		3243056	1					
ANR	3243201	ForInit	bin = s -> start_freq [ ch ] ;	45:13:857:880	3243056	0	True				
ANR	3243202	AssignmentExpression	bin = s -> start_freq [ ch ]		3243056	0		=			
ANR	3243203	Identifier	bin		3243056	0					
ANR	3243204	ArrayIndexing	s -> start_freq [ ch ]		3243056	1					
ANR	3243205	PtrMemberAccess	s -> start_freq		3243056	0					
ANR	3243206	Identifier	s		3243056	0					
ANR	3243207	Identifier	start_freq		3243056	1					
ANR	3243208	Identifier	ch		3243056	1					
ANR	3243209	Condition	bin < s -> end_freq [ ch ]	45:38:882:902	3243056	1	True				
ANR	3243210	RelationalExpression	bin < s -> end_freq [ ch ]		3243056	0		<			
ANR	3243211	Identifier	bin		3243056	0					
ANR	3243212	ArrayIndexing	s -> end_freq [ ch ]		3243056	1					
ANR	3243213	PtrMemberAccess	s -> end_freq		3243056	0					
ANR	3243214	Identifier	s		3243056	0					
ANR	3243215	Identifier	end_freq		3243056	1					
ANR	3243216	Identifier	ch		3243056	1					
ANR	3243217	PostIncDecOperationExpression	bin ++	45:61:905:909	3243056	2	True				
ANR	3243218	Identifier	bin		3243056	0					
ANR	3243219	IncDec	++		3243056	1					
ANR	3243220	CompoundStatement		43:68:830:830	3243056	3					
ANR	3243221	IfStatement	if ( s -> bap [ ch ] [ bin ] > 7 && s -> bap [ ch ] [ bin ] < 17 )		3243056	0					
ANR	3243222	Condition	s -> bap [ ch ] [ bin ] > 7 && s -> bap [ ch ] [ bin ] < 17	47:16:931:973	3243056	0	True				
ANR	3243223	AndExpression	s -> bap [ ch ] [ bin ] > 7 && s -> bap [ ch ] [ bin ] < 17		3243056	0		&&			
ANR	3243224	RelationalExpression	s -> bap [ ch ] [ bin ] > 7		3243056	0		>			
ANR	3243225	ArrayIndexing	s -> bap [ ch ] [ bin ]		3243056	0					
ANR	3243226	ArrayIndexing	s -> bap [ ch ]		3243056	0					
ANR	3243227	PtrMemberAccess	s -> bap		3243056	0					
ANR	3243228	Identifier	s		3243056	0					
ANR	3243229	Identifier	bap		3243056	1					
ANR	3243230	Identifier	ch		3243056	1					
ANR	3243231	Identifier	bin		3243056	1					
ANR	3243232	PrimaryExpression	7		3243056	1					
ANR	3243233	RelationalExpression	s -> bap [ ch ] [ bin ] < 17		3243056	1		<			
ANR	3243234	ArrayIndexing	s -> bap [ ch ] [ bin ]		3243056	0					
ANR	3243235	ArrayIndexing	s -> bap [ ch ]		3243056	0					
ANR	3243236	PtrMemberAccess	s -> bap		3243056	0					
ANR	3243237	Identifier	s		3243056	0					
ANR	3243238	Identifier	bap		3243056	1					
ANR	3243239	Identifier	ch		3243056	1					
ANR	3243240	Identifier	bin		3243056	1					
ANR	3243241	PrimaryExpression	17		3243056	1					
ANR	3243242	CompoundStatement		45:61:894:894	3243056	1					
ANR	3243243	IfStatement	if ( gc ++ == 2 )		3243056	0					
ANR	3243244	Condition	gc ++ == 2	49:20:999:1007	3243056	0	True				
ANR	3243245	EqualityExpression	gc ++ == 2		3243056	0		==			
ANR	3243246	PostIncDecOperationExpression	gc ++		3243056	0					
ANR	3243247	Identifier	gc		3243056	0					
ANR	3243248	IncDec	++		3243056	1					
ANR	3243249	PrimaryExpression	2		3243056	1					
ANR	3243250	CompoundStatement		49:20:951:984	3243056	1					
ANR	3243251	IdentifierDeclStatement	"int group_code = get_bits ( gbc , 5 ) ;"	51:20:1033:1066	3243056	0	True				
ANR	3243252	IdentifierDecl	"group_code = get_bits ( gbc , 5 )"		3243056	0					
ANR	3243253	IdentifierDeclType	int		3243056	0					
ANR	3243254	Identifier	group_code		3243056	1					
ANR	3243255	AssignmentExpression	"group_code = get_bits ( gbc , 5 )"		3243056	2		=			
ANR	3243256	Identifier	group_code		3243056	0					
ANR	3243257	CallExpression	"get_bits ( gbc , 5 )"		3243056	1					
ANR	3243258	Callee	get_bits		3243056	0					
ANR	3243259	Identifier	get_bits		3243056	0					
ANR	3243260	ArgumentList	gbc		3243056	1					
ANR	3243261	Argument	gbc		3243056	0					
ANR	3243262	Identifier	gbc		3243056	0					
ANR	3243263	Argument	5		3243056	1					
ANR	3243264	PrimaryExpression	5		3243056	0					
ANR	3243265	IfStatement	if ( group_code > 26 )		3243056	1					
ANR	3243266	Condition	group_code > 26	53:24:1093:1107	3243056	0	True				
ANR	3243267	RelationalExpression	group_code > 26		3243056	0		>			
ANR	3243268	Identifier	group_code		3243056	0					
ANR	3243269	PrimaryExpression	26		3243056	1					
ANR	3243270	CompoundStatement		51:41:1028:1028	3243056	1					
ANR	3243271	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_WARNING , ""GAQ gain group code out-of-range\\n"" )"	55:24:1137:1207	3243056	0	True				
ANR	3243272	CallExpression	"av_log ( s -> avctx , AV_LOG_WARNING , ""GAQ gain group code out-of-range\\n"" )"		3243056	0					
ANR	3243273	Callee	av_log		3243056	0					
ANR	3243274	Identifier	av_log		3243056	0					
ANR	3243275	ArgumentList	s -> avctx		3243056	1					
ANR	3243276	Argument	s -> avctx		3243056	0					
ANR	3243277	PtrMemberAccess	s -> avctx		3243056	0					
ANR	3243278	Identifier	s		3243056	0					
ANR	3243279	Identifier	avctx		3243056	1					
ANR	3243280	Argument	AV_LOG_WARNING		3243056	1					
ANR	3243281	Identifier	AV_LOG_WARNING		3243056	0					
ANR	3243282	Argument	"""GAQ gain group code out-of-range\\n"""		3243056	2					
ANR	3243283	PrimaryExpression	"""GAQ gain group code out-of-range\\n"""		3243056	0					
ANR	3243284	ExpressionStatement	group_code = 26	57:24:1234:1249	3243056	1	True				
ANR	3243285	AssignmentExpression	group_code = 26		3243056	0		=			
ANR	3243286	Identifier	group_code		3243056	0					
ANR	3243287	PrimaryExpression	26		3243056	1					
ANR	3243288	ExpressionStatement	gaq_gain [ gs ++ ] = ff_ac3_ungroup_3_in_5_bits_tab [ group_code ] [ 0 ]	61:20:1295:1357	3243056	2	True				
ANR	3243289	AssignmentExpression	gaq_gain [ gs ++ ] = ff_ac3_ungroup_3_in_5_bits_tab [ group_code ] [ 0 ]		3243056	0		=			
ANR	3243290	ArrayIndexing	gaq_gain [ gs ++ ]		3243056	0					
ANR	3243291	Identifier	gaq_gain		3243056	0					
ANR	3243292	PostIncDecOperationExpression	gs ++		3243056	1					
ANR	3243293	Identifier	gs		3243056	0					
ANR	3243294	IncDec	++		3243056	1					
ANR	3243295	ArrayIndexing	ff_ac3_ungroup_3_in_5_bits_tab [ group_code ] [ 0 ]		3243056	1					
ANR	3243296	ArrayIndexing	ff_ac3_ungroup_3_in_5_bits_tab [ group_code ]		3243056	0					
ANR	3243297	Identifier	ff_ac3_ungroup_3_in_5_bits_tab		3243056	0					
ANR	3243298	Identifier	group_code		3243056	1					
ANR	3243299	PrimaryExpression	0		3243056	1					
ANR	3243300	ExpressionStatement	gaq_gain [ gs ++ ] = ff_ac3_ungroup_3_in_5_bits_tab [ group_code ] [ 1 ]	63:20:1380:1442	3243056	3	True				
ANR	3243301	AssignmentExpression	gaq_gain [ gs ++ ] = ff_ac3_ungroup_3_in_5_bits_tab [ group_code ] [ 1 ]		3243056	0		=			
ANR	3243302	ArrayIndexing	gaq_gain [ gs ++ ]		3243056	0					
ANR	3243303	Identifier	gaq_gain		3243056	0					
ANR	3243304	PostIncDecOperationExpression	gs ++		3243056	1					
ANR	3243305	Identifier	gs		3243056	0					
ANR	3243306	IncDec	++		3243056	1					
ANR	3243307	ArrayIndexing	ff_ac3_ungroup_3_in_5_bits_tab [ group_code ] [ 1 ]		3243056	1					
ANR	3243308	ArrayIndexing	ff_ac3_ungroup_3_in_5_bits_tab [ group_code ]		3243056	0					
ANR	3243309	Identifier	ff_ac3_ungroup_3_in_5_bits_tab		3243056	0					
ANR	3243310	Identifier	group_code		3243056	1					
ANR	3243311	PrimaryExpression	1		3243056	1					
ANR	3243312	ExpressionStatement	gaq_gain [ gs ++ ] = ff_ac3_ungroup_3_in_5_bits_tab [ group_code ] [ 2 ]	65:20:1465:1527	3243056	4	True				
ANR	3243313	AssignmentExpression	gaq_gain [ gs ++ ] = ff_ac3_ungroup_3_in_5_bits_tab [ group_code ] [ 2 ]		3243056	0		=			
ANR	3243314	ArrayIndexing	gaq_gain [ gs ++ ]		3243056	0					
ANR	3243315	Identifier	gaq_gain		3243056	0					
ANR	3243316	PostIncDecOperationExpression	gs ++		3243056	1					
ANR	3243317	Identifier	gs		3243056	0					
ANR	3243318	IncDec	++		3243056	1					
ANR	3243319	ArrayIndexing	ff_ac3_ungroup_3_in_5_bits_tab [ group_code ] [ 2 ]		3243056	1					
ANR	3243320	ArrayIndexing	ff_ac3_ungroup_3_in_5_bits_tab [ group_code ]		3243056	0					
ANR	3243321	Identifier	ff_ac3_ungroup_3_in_5_bits_tab		3243056	0					
ANR	3243322	Identifier	group_code		3243056	1					
ANR	3243323	PrimaryExpression	2		3243056	1					
ANR	3243324	ExpressionStatement	gc = 0	67:20:1550:1556	3243056	5	True				
ANR	3243325	AssignmentExpression	gc = 0		3243056	0		=			
ANR	3243326	Identifier	gc		3243056	0					
ANR	3243327	PrimaryExpression	0		3243056	1					
ANR	3243328	ExpressionStatement	gs = 0	79:4:1617:1621	3243056	8	True				
ANR	3243329	AssignmentExpression	gs = 0		3243056	0		=			
ANR	3243330	Identifier	gs		3243056	0					
ANR	3243331	PrimaryExpression	0		3243056	1					
ANR	3243332	ForStatement	for ( bin = s -> start_freq [ ch ] ; bin < s -> end_freq [ ch ] ; bin ++ )		3243056	9					
ANR	3243333	ForInit	bin = s -> start_freq [ ch ] ;	81:9:1633:1656	3243056	0	True				
ANR	3243334	AssignmentExpression	bin = s -> start_freq [ ch ]		3243056	0		=			
ANR	3243335	Identifier	bin		3243056	0					
ANR	3243336	ArrayIndexing	s -> start_freq [ ch ]		3243056	1					
ANR	3243337	PtrMemberAccess	s -> start_freq		3243056	0					
ANR	3243338	Identifier	s		3243056	0					
ANR	3243339	Identifier	start_freq		3243056	1					
ANR	3243340	Identifier	ch		3243056	1					
ANR	3243341	Condition	bin < s -> end_freq [ ch ]	81:34:1658:1678	3243056	1	True				
ANR	3243342	RelationalExpression	bin < s -> end_freq [ ch ]		3243056	0		<			
ANR	3243343	Identifier	bin		3243056	0					
ANR	3243344	ArrayIndexing	s -> end_freq [ ch ]		3243056	1					
ANR	3243345	PtrMemberAccess	s -> end_freq		3243056	0					
ANR	3243346	Identifier	s		3243056	0					
ANR	3243347	Identifier	end_freq		3243056	1					
ANR	3243348	Identifier	ch		3243056	1					
ANR	3243349	PostIncDecOperationExpression	bin ++	81:57:1681:1685	3243056	2	True				
ANR	3243350	Identifier	bin		3243056	0					
ANR	3243351	IncDec	++		3243056	1					
ANR	3243352	CompoundStatement		83:8:1655:1694	3243056	3					
ANR	3243353	IdentifierDeclStatement	int hebap = s -> bap [ ch ] [ bin ] ;	83:8:1699:1726	3243056	0	True				
ANR	3243354	IdentifierDecl	hebap = s -> bap [ ch ] [ bin ]		3243056	0					
ANR	3243355	IdentifierDeclType	int		3243056	0					
ANR	3243356	Identifier	hebap		3243056	1					
ANR	3243357	AssignmentExpression	hebap = s -> bap [ ch ] [ bin ]		3243056	2		=			
ANR	3243358	Identifier	hebap		3243056	0					
ANR	3243359	ArrayIndexing	s -> bap [ ch ] [ bin ]		3243056	1					
ANR	3243360	ArrayIndexing	s -> bap [ ch ]		3243056	0					
ANR	3243361	PtrMemberAccess	s -> bap		3243056	0					
ANR	3243362	Identifier	s		3243056	0					
ANR	3243363	Identifier	bap		3243056	1					
ANR	3243364	Identifier	ch		3243056	1					
ANR	3243365	Identifier	bin		3243056	1					
ANR	3243366	IdentifierDeclStatement	int bits = ff_eac3_bits_vs_hebap [ hebap ] ;	85:8:1737:1776	3243056	1	True				
ANR	3243367	IdentifierDecl	bits = ff_eac3_bits_vs_hebap [ hebap ]		3243056	0					
ANR	3243368	IdentifierDeclType	int		3243056	0					
ANR	3243369	Identifier	bits		3243056	1					
ANR	3243370	AssignmentExpression	bits = ff_eac3_bits_vs_hebap [ hebap ]		3243056	2		=			
ANR	3243371	Identifier	bits		3243056	0					
ANR	3243372	ArrayIndexing	ff_eac3_bits_vs_hebap [ hebap ]		3243056	1					
ANR	3243373	Identifier	ff_eac3_bits_vs_hebap		3243056	0					
ANR	3243374	Identifier	hebap		3243056	1					
ANR	3243375	IfStatement	if ( ! hebap )		3243056	2					
ANR	3243376	Condition	! hebap	87:12:1791:1796	3243056	0	True				
ANR	3243377	UnaryOperationExpression	! hebap		3243056	0					
ANR	3243378	UnaryOperator	!		3243056	0					
ANR	3243379	Identifier	hebap		3243056	1					
ANR	3243380	CompoundStatement		85:20:1717:1717	3243056	1					
ANR	3243381	ForStatement	for ( blk = 0 ; blk < 6 ; blk ++ )		3243056	0					
ANR	3243382	ForInit	blk = 0 ;	91:17:1862:1869	3243056	0	True				
ANR	3243383	AssignmentExpression	blk = 0		3243056	0		=			
ANR	3243384	Identifier	blk		3243056	0					
ANR	3243385	PrimaryExpression	0		3243056	1					
ANR	3243386	Condition	blk < 6	91:26:1871:1877	3243056	1	True				
ANR	3243387	RelationalExpression	blk < 6		3243056	0		<			
ANR	3243388	Identifier	blk		3243056	0					
ANR	3243389	PrimaryExpression	6		3243056	1					
ANR	3243390	PostIncDecOperationExpression	blk ++	91:35:1880:1884	3243056	2	True				
ANR	3243391	Identifier	blk		3243056	0					
ANR	3243392	IncDec	++		3243056	1					
ANR	3243393	CompoundStatement		89:42:1805:1805	3243056	3					
ANR	3243394	ExpressionStatement	s -> pre_mantissa [ ch ] [ bin ] [ blk ] = ( av_lfg_get ( & s -> dith_state ) & 0x7FFFFF ) - 0x400000	93:16:1906:1988	3243056	0	True				
ANR	3243395	AssignmentExpression	s -> pre_mantissa [ ch ] [ bin ] [ blk ] = ( av_lfg_get ( & s -> dith_state ) & 0x7FFFFF ) - 0x400000		3243056	0		=			
ANR	3243396	ArrayIndexing	s -> pre_mantissa [ ch ] [ bin ] [ blk ]		3243056	0					
ANR	3243397	ArrayIndexing	s -> pre_mantissa [ ch ] [ bin ]		3243056	0					
ANR	3243398	ArrayIndexing	s -> pre_mantissa [ ch ]		3243056	0					
ANR	3243399	PtrMemberAccess	s -> pre_mantissa		3243056	0					
ANR	3243400	Identifier	s		3243056	0					
ANR	3243401	Identifier	pre_mantissa		3243056	1					
ANR	3243402	Identifier	ch		3243056	1					
ANR	3243403	Identifier	bin		3243056	1					
ANR	3243404	Identifier	blk		3243056	1					
ANR	3243405	AdditiveExpression	( av_lfg_get ( & s -> dith_state ) & 0x7FFFFF ) - 0x400000		3243056	1		-			
ANR	3243406	BitAndExpression	av_lfg_get ( & s -> dith_state ) & 0x7FFFFF		3243056	0		&			
ANR	3243407	CallExpression	av_lfg_get ( & s -> dith_state )		3243056	0					
ANR	3243408	Callee	av_lfg_get		3243056	0					
ANR	3243409	Identifier	av_lfg_get		3243056	0					
ANR	3243410	ArgumentList	& s -> dith_state		3243056	1					
ANR	3243411	Argument	& s -> dith_state		3243056	0					
ANR	3243412	UnaryOperationExpression	& s -> dith_state		3243056	0					
ANR	3243413	UnaryOperator	&		3243056	0					
ANR	3243414	PtrMemberAccess	s -> dith_state		3243056	1					
ANR	3243415	Identifier	s		3243056	0					
ANR	3243416	Identifier	dith_state		3243056	1					
ANR	3243417	PrimaryExpression	0x7FFFFF		3243056	1					
ANR	3243418	PrimaryExpression	0x400000		3243056	1					
ANR	3243419	ElseStatement	else		3243056	0					
ANR	3243420	IfStatement	if ( hebap < 8 )		3243056	0					
ANR	3243421	Condition	hebap < 8	97:19:2025:2033	3243056	0	True				
ANR	3243422	RelationalExpression	hebap < 8		3243056	0		<			
ANR	3243423	Identifier	hebap		3243056	0					
ANR	3243424	PrimaryExpression	8		3243056	1					
ANR	3243425	CompoundStatement		99:12:2008:2035	3243056	1					
ANR	3243426	IdentifierDeclStatement	"int v = get_bits ( gbc , bits ) ;"	101:12:2090:2117	3243056	0	True				
ANR	3243427	IdentifierDecl	"v = get_bits ( gbc , bits )"		3243056	0					
ANR	3243428	IdentifierDeclType	int		3243056	0					
ANR	3243429	Identifier	v		3243056	1					
ANR	3243430	AssignmentExpression	"v = get_bits ( gbc , bits )"		3243056	2		=			
ANR	3243431	Identifier	v		3243056	0					
ANR	3243432	CallExpression	"get_bits ( gbc , bits )"		3243056	1					
ANR	3243433	Callee	get_bits		3243056	0					
ANR	3243434	Identifier	get_bits		3243056	0					
ANR	3243435	ArgumentList	gbc		3243056	1					
ANR	3243436	Argument	gbc		3243056	0					
ANR	3243437	Identifier	gbc		3243056	0					
ANR	3243438	Argument	bits		3243056	1					
ANR	3243439	Identifier	bits		3243056	0					
ANR	3243440	ForStatement	for ( blk = 0 ; blk < 6 ; blk ++ )		3243056	1					
ANR	3243441	ForInit	blk = 0 ;	103:17:2137:2144	3243056	0	True				
ANR	3243442	AssignmentExpression	blk = 0		3243056	0		=			
ANR	3243443	Identifier	blk		3243056	0					
ANR	3243444	PrimaryExpression	0		3243056	1					
ANR	3243445	Condition	blk < 6	103:26:2146:2152	3243056	1	True				
ANR	3243446	RelationalExpression	blk < 6		3243056	0		<			
ANR	3243447	Identifier	blk		3243056	0					
ANR	3243448	PrimaryExpression	6		3243056	1					
ANR	3243449	PostIncDecOperationExpression	blk ++	103:35:2155:2159	3243056	2	True				
ANR	3243450	Identifier	blk		3243056	0					
ANR	3243451	IncDec	++		3243056	1					
ANR	3243452	CompoundStatement		101:42:2080:2080	3243056	3					
ANR	3243453	ExpressionStatement	s -> pre_mantissa [ ch ] [ bin ] [ blk ] = ff_eac3_mantissa_vq [ hebap ] [ v ] [ blk ] << 8	105:16:2181:2252	3243056	0	True				
ANR	3243454	AssignmentExpression	s -> pre_mantissa [ ch ] [ bin ] [ blk ] = ff_eac3_mantissa_vq [ hebap ] [ v ] [ blk ] << 8		3243056	0		=			
ANR	3243455	ArrayIndexing	s -> pre_mantissa [ ch ] [ bin ] [ blk ]		3243056	0					
ANR	3243456	ArrayIndexing	s -> pre_mantissa [ ch ] [ bin ]		3243056	0					
ANR	3243457	ArrayIndexing	s -> pre_mantissa [ ch ]		3243056	0					
ANR	3243458	PtrMemberAccess	s -> pre_mantissa		3243056	0					
ANR	3243459	Identifier	s		3243056	0					
ANR	3243460	Identifier	pre_mantissa		3243056	1					
ANR	3243461	Identifier	ch		3243056	1					
ANR	3243462	Identifier	bin		3243056	1					
ANR	3243463	Identifier	blk		3243056	1					
ANR	3243464	ShiftExpression	ff_eac3_mantissa_vq [ hebap ] [ v ] [ blk ] << 8		3243056	1		<<			
ANR	3243465	ArrayIndexing	ff_eac3_mantissa_vq [ hebap ] [ v ] [ blk ]		3243056	0					
ANR	3243466	ArrayIndexing	ff_eac3_mantissa_vq [ hebap ] [ v ]		3243056	0					
ANR	3243467	ArrayIndexing	ff_eac3_mantissa_vq [ hebap ]		3243056	0					
ANR	3243468	Identifier	ff_eac3_mantissa_vq		3243056	0					
ANR	3243469	Identifier	hebap		3243056	1					
ANR	3243470	Identifier	v		3243056	1					
ANR	3243471	Identifier	blk		3243056	1					
ANR	3243472	PrimaryExpression	8		3243056	1					
ANR	3243473	ElseStatement	else		3243056	0					
ANR	3243474	CompoundStatement		111:12:2264:2283	3243056	0					
ANR	3243475	IdentifierDeclStatement	"int gbits , log_gain ;"	113:12:2346:2365	3243056	0	True				
ANR	3243476	IdentifierDecl	gbits		3243056	0					
ANR	3243477	IdentifierDeclType	int		3243056	0					
ANR	3243478	Identifier	gbits		3243056	1					
ANR	3243479	IdentifierDecl	log_gain		3243056	1					
ANR	3243480	IdentifierDeclType	int		3243056	0					
ANR	3243481	Identifier	log_gain		3243056	1					
ANR	3243482	IfStatement	if ( gaq_mode != EAC3_GAQ_NO && hebap < end_bap )		3243056	1					
ANR	3243483	Condition	gaq_mode != EAC3_GAQ_NO && hebap < end_bap	115:16:2384:2425	3243056	0	True				
ANR	3243484	AndExpression	gaq_mode != EAC3_GAQ_NO && hebap < end_bap		3243056	0		&&			
ANR	3243485	EqualityExpression	gaq_mode != EAC3_GAQ_NO		3243056	0		!=			
ANR	3243486	Identifier	gaq_mode		3243056	0					
ANR	3243487	Identifier	EAC3_GAQ_NO		3243056	1					
ANR	3243488	RelationalExpression	hebap < end_bap		3243056	1		<			
ANR	3243489	Identifier	hebap		3243056	0					
ANR	3243490	Identifier	end_bap		3243056	1					
ANR	3243491	CompoundStatement		113:60:2346:2346	3243056	1					
ANR	3243492	ExpressionStatement	log_gain = gaq_gain [ gs ++ ]	117:16:2447:2472	3243056	0	True				
ANR	3243493	AssignmentExpression	log_gain = gaq_gain [ gs ++ ]		3243056	0		=			
ANR	3243494	Identifier	log_gain		3243056	0					
ANR	3243495	ArrayIndexing	gaq_gain [ gs ++ ]		3243056	1					
ANR	3243496	Identifier	gaq_gain		3243056	0					
ANR	3243497	PostIncDecOperationExpression	gs ++		3243056	1					
ANR	3243498	Identifier	gs		3243056	0					
ANR	3243499	IncDec	++		3243056	1					
ANR	3243500	ElseStatement	else		3243056	0					
ANR	3243501	CompoundStatement		117:19:2412:2412	3243056	0					
ANR	3243502	ExpressionStatement	log_gain = 0	121:16:2513:2525	3243056	0	True				
ANR	3243503	AssignmentExpression	log_gain = 0		3243056	0		=			
ANR	3243504	Identifier	log_gain		3243056	0					
ANR	3243505	PrimaryExpression	0		3243056	1					
ANR	3243506	ExpressionStatement	gbits = bits - log_gain	125:12:2555:2578	3243056	2	True				
ANR	3243507	AssignmentExpression	gbits = bits - log_gain		3243056	0		=			
ANR	3243508	Identifier	gbits		3243056	0					
ANR	3243509	AdditiveExpression	bits - log_gain		3243056	1		-			
ANR	3243510	Identifier	bits		3243056	0					
ANR	3243511	Identifier	log_gain		3243056	1					
ANR	3243512	ForStatement	for ( blk = 0 ; blk < 6 ; blk ++ )		3243056	3					
ANR	3243513	ForInit	blk = 0 ;	129:17:2600:2607	3243056	0	True				
ANR	3243514	AssignmentExpression	blk = 0		3243056	0		=			
ANR	3243515	Identifier	blk		3243056	0					
ANR	3243516	PrimaryExpression	0		3243056	1					
ANR	3243517	Condition	blk < 6	129:26:2609:2615	3243056	1	True				
ANR	3243518	RelationalExpression	blk < 6		3243056	0		<			
ANR	3243519	Identifier	blk		3243056	0					
ANR	3243520	PrimaryExpression	6		3243056	1					
ANR	3243521	PostIncDecOperationExpression	blk ++	129:35:2618:2622	3243056	2	True				
ANR	3243522	Identifier	blk		3243056	0					
ANR	3243523	IncDec	++		3243056	1					
ANR	3243524	CompoundStatement		129:16:2562:2594	3243056	3					
ANR	3243525	IdentifierDeclStatement	"int mant = get_sbits ( gbc , gbits ) ;"	131:16:2644:2676	3243056	0	True				
ANR	3243526	IdentifierDecl	"mant = get_sbits ( gbc , gbits )"		3243056	0					
ANR	3243527	IdentifierDeclType	int		3243056	0					
ANR	3243528	Identifier	mant		3243056	1					
ANR	3243529	AssignmentExpression	"mant = get_sbits ( gbc , gbits )"		3243056	2		=			
ANR	3243530	Identifier	mant		3243056	0					
ANR	3243531	CallExpression	"get_sbits ( gbc , gbits )"		3243056	1					
ANR	3243532	Callee	get_sbits		3243056	0					
ANR	3243533	Identifier	get_sbits		3243056	0					
ANR	3243534	ArgumentList	gbc		3243056	1					
ANR	3243535	Argument	gbc		3243056	0					
ANR	3243536	Identifier	gbc		3243056	0					
ANR	3243537	Argument	gbits		3243056	1					
ANR	3243538	Identifier	gbits		3243056	0					
ANR	3243539	IfStatement	if ( log_gain && mant == - ( 1 << ( gbits - 1 ) ) )		3243056	1					
ANR	3243540	Condition	log_gain && mant == - ( 1 << ( gbits - 1 ) )	133:20:2699:2735	3243056	0	True				
ANR	3243541	AndExpression	log_gain && mant == - ( 1 << ( gbits - 1 ) )		3243056	0		&&			
ANR	3243542	Identifier	log_gain		3243056	0					
ANR	3243543	EqualityExpression	mant == - ( 1 << ( gbits - 1 ) )		3243056	1		==			
ANR	3243544	Identifier	mant		3243056	0					
ANR	3243545	UnaryOperationExpression	- ( 1 << ( gbits - 1 ) )		3243056	1					
ANR	3243546	UnaryOperator	-		3243056	0					
ANR	3243547	ShiftExpression	1 << ( gbits - 1 )		3243056	1		<<			
ANR	3243548	PrimaryExpression	1		3243056	0					
ANR	3243549	AdditiveExpression	gbits - 1		3243056	1		-			
ANR	3243550	Identifier	gbits		3243056	0					
ANR	3243551	PrimaryExpression	1		3243056	1					
ANR	3243552	CompoundStatement		137:20:2749:2782	3243056	1					
ANR	3243553	IdentifierDeclStatement	int b ;	137:20:2803:2808	3243056	0	True				
ANR	3243554	IdentifierDecl	b		3243056	0					
ANR	3243555	IdentifierDeclType	int		3243056	0					
ANR	3243556	Identifier	b		3243056	1					
ANR	3243557	IdentifierDeclStatement	int mbits = bits - ( 2 - log_gain ) ;	139:20:2831:2864	3243056	1	True				
ANR	3243558	IdentifierDecl	mbits = bits - ( 2 - log_gain )		3243056	0					
ANR	3243559	IdentifierDeclType	int		3243056	0					
ANR	3243560	Identifier	mbits		3243056	1					
ANR	3243561	AssignmentExpression	mbits = bits - ( 2 - log_gain )		3243056	2		=			
ANR	3243562	Identifier	mbits		3243056	0					
ANR	3243563	AdditiveExpression	bits - ( 2 - log_gain )		3243056	1		-			
ANR	3243564	Identifier	bits		3243056	0					
ANR	3243565	AdditiveExpression	2 - log_gain		3243056	1		-			
ANR	3243566	PrimaryExpression	2		3243056	0					
ANR	3243567	Identifier	log_gain		3243056	1					
ANR	3243568	ExpressionStatement	"mant = get_sbits ( gbc , mbits )"	141:20:2887:2915	3243056	2	True				
ANR	3243569	AssignmentExpression	"mant = get_sbits ( gbc , mbits )"		3243056	0		=			
ANR	3243570	Identifier	mant		3243056	0					
ANR	3243571	CallExpression	"get_sbits ( gbc , mbits )"		3243056	1					
ANR	3243572	Callee	get_sbits		3243056	0					
ANR	3243573	Identifier	get_sbits		3243056	0					
ANR	3243574	ArgumentList	gbc		3243056	1					
ANR	3243575	Argument	gbc		3243056	0					
ANR	3243576	Identifier	gbc		3243056	0					
ANR	3243577	Argument	mbits		3243056	1					
ANR	3243578	Identifier	mbits		3243056	0					
ANR	3243579	ExpressionStatement	mant <<= ( 23 - ( mbits - 1 ) )	143:20:2938:2965	3243056	3	True				
ANR	3243580	AssignmentExpression	mant <<= ( 23 - ( mbits - 1 ) )		3243056	0		<<=			
ANR	3243581	Identifier	mant		3243056	0					
ANR	3243582	AdditiveExpression	23 - ( mbits - 1 )		3243056	1		-			
ANR	3243583	PrimaryExpression	23		3243056	0					
ANR	3243584	AdditiveExpression	mbits - 1		3243056	1		-			
ANR	3243585	Identifier	mbits		3243056	0					
ANR	3243586	PrimaryExpression	1		3243056	1					
ANR	3243587	IfStatement	if ( mant >= 0 )		3243056	4					
ANR	3243588	Condition	mant >= 0	147:24:3079:3087	3243056	0	True				
ANR	3243589	RelationalExpression	mant >= 0		3243056	0		>=			
ANR	3243590	Identifier	mant		3243056	0					
ANR	3243591	PrimaryExpression	0		3243056	1					
ANR	3243592	ExpressionStatement	b = 1 << ( 23 - log_gain )	149:24:3115:3139	3243056	1	True				
ANR	3243593	AssignmentExpression	b = 1 << ( 23 - log_gain )		3243056	0		=			
ANR	3243594	Identifier	b		3243056	0					
ANR	3243595	ShiftExpression	1 << ( 23 - log_gain )		3243056	1		<<			
ANR	3243596	PrimaryExpression	1		3243056	0					
ANR	3243597	AdditiveExpression	23 - log_gain		3243056	1		-			
ANR	3243598	PrimaryExpression	23		3243056	0					
ANR	3243599	Identifier	log_gain		3243056	1					
ANR	3243600	ElseStatement	else		3243056	0					
ANR	3243601	ExpressionStatement	b = ff_eac3_gaq_remap_2_4_b [ hebap - 8 ] [ log_gain - 1 ] << 8	153:24:3192:3245	3243056	0	True				
ANR	3243602	AssignmentExpression	b = ff_eac3_gaq_remap_2_4_b [ hebap - 8 ] [ log_gain - 1 ] << 8		3243056	0		=			
ANR	3243603	Identifier	b		3243056	0					
ANR	3243604	ShiftExpression	ff_eac3_gaq_remap_2_4_b [ hebap - 8 ] [ log_gain - 1 ] << 8		3243056	1		<<			
ANR	3243605	ArrayIndexing	ff_eac3_gaq_remap_2_4_b [ hebap - 8 ] [ log_gain - 1 ]		3243056	0					
ANR	3243606	ArrayIndexing	ff_eac3_gaq_remap_2_4_b [ hebap - 8 ]		3243056	0					
ANR	3243607	Identifier	ff_eac3_gaq_remap_2_4_b		3243056	0					
ANR	3243608	AdditiveExpression	hebap - 8		3243056	1		-			
ANR	3243609	Identifier	hebap		3243056	0					
ANR	3243610	PrimaryExpression	8		3243056	1					
ANR	3243611	AdditiveExpression	log_gain - 1		3243056	1		-			
ANR	3243612	Identifier	log_gain		3243056	0					
ANR	3243613	PrimaryExpression	1		3243056	1					
ANR	3243614	PrimaryExpression	8		3243056	1					
ANR	3243615	ExpressionStatement	mant += ( ( ff_eac3_gaq_remap_2_4_a [ hebap - 8 ] [ log_gain - 1 ] * ( int64_t ) mant ) >> 15 ) + b	155:20:3268:3350	3243056	5	True				
ANR	3243616	AssignmentExpression	mant += ( ( ff_eac3_gaq_remap_2_4_a [ hebap - 8 ] [ log_gain - 1 ] * ( int64_t ) mant ) >> 15 ) + b		3243056	0		+=			
ANR	3243617	Identifier	mant		3243056	0					
ANR	3243618	AdditiveExpression	( ( ff_eac3_gaq_remap_2_4_a [ hebap - 8 ] [ log_gain - 1 ] * ( int64_t ) mant ) >> 15 ) + b		3243056	1		+			
ANR	3243619	ShiftExpression	( ff_eac3_gaq_remap_2_4_a [ hebap - 8 ] [ log_gain - 1 ] * ( int64_t ) mant ) >> 15		3243056	0		>>			
ANR	3243620	MultiplicativeExpression	ff_eac3_gaq_remap_2_4_a [ hebap - 8 ] [ log_gain - 1 ] * ( int64_t ) mant		3243056	0		*			
ANR	3243621	ArrayIndexing	ff_eac3_gaq_remap_2_4_a [ hebap - 8 ] [ log_gain - 1 ]		3243056	0					
ANR	3243622	ArrayIndexing	ff_eac3_gaq_remap_2_4_a [ hebap - 8 ]		3243056	0					
ANR	3243623	Identifier	ff_eac3_gaq_remap_2_4_a		3243056	0					
ANR	3243624	AdditiveExpression	hebap - 8		3243056	1		-			
ANR	3243625	Identifier	hebap		3243056	0					
ANR	3243626	PrimaryExpression	8		3243056	1					
ANR	3243627	AdditiveExpression	log_gain - 1		3243056	1		-			
ANR	3243628	Identifier	log_gain		3243056	0					
ANR	3243629	PrimaryExpression	1		3243056	1					
ANR	3243630	CastExpression	( int64_t ) mant		3243056	1					
ANR	3243631	CastTarget	int64_t		3243056	0					
ANR	3243632	Identifier	mant		3243056	1					
ANR	3243633	PrimaryExpression	15		3243056	1					
ANR	3243634	Identifier	b		3243056	1					
ANR	3243635	ElseStatement	else		3243056	0					
ANR	3243636	CompoundStatement		155:23:3294:3294	3243056	0					
ANR	3243637	ExpressionStatement	mant <<= 24 - bits	161:20:3458:3476	3243056	0	True				
ANR	3243638	AssignmentExpression	mant <<= 24 - bits		3243056	0		<<=			
ANR	3243639	Identifier	mant		3243056	0					
ANR	3243640	AdditiveExpression	24 - bits		3243056	1		-			
ANR	3243641	PrimaryExpression	24		3243056	0					
ANR	3243642	Identifier	bits		3243056	1					
ANR	3243643	IfStatement	if ( ! log_gain )		3243056	1					
ANR	3243644	Condition	! log_gain	163:24:3503:3511	3243056	0	True				
ANR	3243645	UnaryOperationExpression	! log_gain		3243056	0					
ANR	3243646	UnaryOperator	!		3243056	0					
ANR	3243647	Identifier	log_gain		3243056	1					
ANR	3243648	CompoundStatement		161:35:3432:3432	3243056	1					
ANR	3243649	ExpressionStatement	mant += ( ff_eac3_gaq_remap_1 [ hebap - 8 ] * ( int64_t ) mant ) >> 15	167:24:3612:3672	3243056	0	True				
ANR	3243650	AssignmentExpression	mant += ( ff_eac3_gaq_remap_1 [ hebap - 8 ] * ( int64_t ) mant ) >> 15		3243056	0		+=			
ANR	3243651	Identifier	mant		3243056	0					
ANR	3243652	ShiftExpression	( ff_eac3_gaq_remap_1 [ hebap - 8 ] * ( int64_t ) mant ) >> 15		3243056	1		>>			
ANR	3243653	MultiplicativeExpression	ff_eac3_gaq_remap_1 [ hebap - 8 ] * ( int64_t ) mant		3243056	0		*			
ANR	3243654	ArrayIndexing	ff_eac3_gaq_remap_1 [ hebap - 8 ]		3243056	0					
ANR	3243655	Identifier	ff_eac3_gaq_remap_1		3243056	0					
ANR	3243656	AdditiveExpression	hebap - 8		3243056	1		-			
ANR	3243657	Identifier	hebap		3243056	0					
ANR	3243658	PrimaryExpression	8		3243056	1					
ANR	3243659	CastExpression	( int64_t ) mant		3243056	1					
ANR	3243660	CastTarget	int64_t		3243056	0					
ANR	3243661	Identifier	mant		3243056	1					
ANR	3243662	PrimaryExpression	15		3243056	1					
ANR	3243663	ExpressionStatement	s -> pre_mantissa [ ch ] [ bin ] [ blk ] = mant	173:16:3733:3769	3243056	2	True				
ANR	3243664	AssignmentExpression	s -> pre_mantissa [ ch ] [ bin ] [ blk ] = mant		3243056	0		=			
ANR	3243665	ArrayIndexing	s -> pre_mantissa [ ch ] [ bin ] [ blk ]		3243056	0					
ANR	3243666	ArrayIndexing	s -> pre_mantissa [ ch ] [ bin ]		3243056	0					
ANR	3243667	ArrayIndexing	s -> pre_mantissa [ ch ]		3243056	0					
ANR	3243668	PtrMemberAccess	s -> pre_mantissa		3243056	0					
ANR	3243669	Identifier	s		3243056	0					
ANR	3243670	Identifier	pre_mantissa		3243056	1					
ANR	3243671	Identifier	ch		3243056	1					
ANR	3243672	Identifier	bin		3243056	1					
ANR	3243673	Identifier	blk		3243056	1					
ANR	3243674	Identifier	mant		3243056	1					
ANR	3243675	ExpressionStatement	idct6 ( s -> pre_mantissa [ ch ] [ bin ] )	179:8:3806:3837	3243056	3	True				
ANR	3243676	CallExpression	idct6 ( s -> pre_mantissa [ ch ] [ bin ] )		3243056	0					
ANR	3243677	Callee	idct6		3243056	0					
ANR	3243678	Identifier	idct6		3243056	0					
ANR	3243679	ArgumentList	s -> pre_mantissa [ ch ] [ bin ]		3243056	1					
ANR	3243680	Argument	s -> pre_mantissa [ ch ] [ bin ]		3243056	0					
ANR	3243681	ArrayIndexing	s -> pre_mantissa [ ch ] [ bin ]		3243056	0					
ANR	3243682	ArrayIndexing	s -> pre_mantissa [ ch ]		3243056	0					
ANR	3243683	PtrMemberAccess	s -> pre_mantissa		3243056	0					
ANR	3243684	Identifier	s		3243056	0					
ANR	3243685	Identifier	pre_mantissa		3243056	1					
ANR	3243686	Identifier	ch		3243056	1					
ANR	3243687	Identifier	bin		3243056	1					
ANR	3243688	ReturnType	static void		3243056	1					
ANR	3243689	Identifier	ff_eac3_decode_transform_coeffs_aht_ch		3243056	2					
ANR	3243690	ParameterList	"AC3DecodeContext * s , int ch"		3243056	3					
ANR	3243691	Parameter	AC3DecodeContext * s	1:51:51:69	3243056	0	True				
ANR	3243692	ParameterType	AC3DecodeContext *		3243056	0					
ANR	3243693	Identifier	s		3243056	1					
ANR	3243694	Parameter	int ch	1:72:72:77	3243056	1	True				
ANR	3243695	ParameterType	int		3243056	0					
ANR	3243696	Identifier	ch		3243056	1					
ANR	3243697	CFGEntryNode	ENTRY		3243056		True				
ANR	3243698	CFGExitNode	EXIT		3243056		True				
ANR	3243699	Symbol	* * ff_ac3_ungroup_3_in_5_bits_tab		3243056						
ANR	3243700	Symbol	* v		3243056						
ANR	3243701	Symbol	get_sbits		3243056						
ANR	3243702	Symbol	* * * * s		3243056						
ANR	3243703	Symbol	bin		3243056						
ANR	3243704	Symbol	get_bits		3243056						
ANR	3243705	Symbol	* ch		3243056						
ANR	3243706	Symbol	* ff_ac3_ungroup_3_in_5_bits_tab		3243056						
ANR	3243707	Symbol	* * * s -> pre_mantissa		3243056						
ANR	3243708	Symbol	* ff_eac3_gaq_remap_1		3243056						
ANR	3243709	Symbol	* * ff_eac3_mantissa_vq		3243056						
ANR	3243710	Symbol	end_bap		3243056						
ANR	3243711	Symbol	log_gain		3243056						
ANR	3243712	Symbol	gaq_mode		3243056						
ANR	3243713	Symbol	EAC3_GAQ_124		3243056						
ANR	3243714	Symbol	hebap		3243056						
ANR	3243715	Symbol	EAC3_GAQ_NO		3243056						
ANR	3243716	Symbol	* s -> start_freq		3243056						
ANR	3243717	Symbol	* * ff_eac3_gaq_remap_2_4_b		3243056						
ANR	3243718	Symbol	* * hebap		3243056						
ANR	3243719	Symbol	& s -> gbc		3243056						
ANR	3243720	Symbol	get_bits1		3243056						
ANR	3243721	Symbol	* * ff_eac3_gaq_remap_2_4_a		3243056						
ANR	3243722	Symbol	bits		3243056						
ANR	3243723	Symbol	& s -> dith_state		3243056						
ANR	3243724	Symbol	ff_eac3_mantissa_vq		3243056						
ANR	3243725	Symbol	* * * s		3243056						
ANR	3243726	Symbol	* gaq_gain		3243056						
ANR	3243727	Symbol	s -> start_freq		3243056						
ANR	3243728	Symbol	* blk		3243056						
ANR	3243729	Symbol	gbits		3243056						
ANR	3243730	Symbol	* ff_eac3_gaq_remap_2_4_a		3243056						
ANR	3243731	Symbol	* hebap		3243056						
ANR	3243732	Symbol	* * * ff_eac3_mantissa_vq		3243056						
ANR	3243733	Symbol	* ff_eac3_gaq_remap_2_4_b		3243056						
ANR	3243734	Symbol	s -> avctx		3243056						
ANR	3243735	Symbol	EAC3_GAQ_12		3243056						
ANR	3243736	Symbol	* * * ch		3243056						
ANR	3243737	Symbol	EAC3_GAQ_14		3243056						
ANR	3243738	Symbol	group_code		3243056						
ANR	3243739	Symbol	* group_code		3243056						
ANR	3243740	Symbol	ff_ac3_ungroup_3_in_5_bits_tab		3243056						
ANR	3243741	Symbol	* log_gain		3243056						
ANR	3243742	Symbol	av_lfg_get		3243056						
ANR	3243743	Symbol	* bin		3243056						
ANR	3243744	Symbol	ff_eac3_gaq_remap_1		3243056						
ANR	3243745	Symbol	* * * hebap		3243056						
ANR	3243746	Symbol	s -> end_freq		3243056						
ANR	3243747	Symbol	* ff_eac3_mantissa_vq		3243056						
ANR	3243748	Symbol	* * s -> bap		3243056						
ANR	3243749	Symbol	* * ch		3243056						
ANR	3243750	Symbol	* * v		3243056						
ANR	3243751	Symbol	* * s		3243056						
ANR	3243752	Symbol	s -> pre_mantissa		3243056						
ANR	3243753	Symbol	* * bin		3243056						
ANR	3243754	Symbol	gc		3243056						
ANR	3243755	Symbol	s -> bap		3243056						
ANR	3243756	Symbol	mbits		3243056						
ANR	3243757	Symbol	blk		3243056						
ANR	3243758	Symbol	* ff_eac3_bits_vs_hebap		3243056						
ANR	3243759	Symbol	ff_eac3_gaq_remap_2_4_a		3243056						
ANR	3243760	Symbol	* s -> pre_mantissa		3243056						
ANR	3243761	Symbol	b		3243056						
ANR	3243762	Symbol	ch		3243056						
ANR	3243763	Symbol	gbc		3243056						
ANR	3243764	Symbol	* s -> bap		3243056						
ANR	3243765	Symbol	mant		3243056						
ANR	3243766	Symbol	gs		3243056						
ANR	3243767	Symbol	ff_eac3_gaq_remap_2_4_b		3243056						
ANR	3243768	Symbol	* s -> end_freq		3243056						
ANR	3243769	Symbol	* * s -> pre_mantissa		3243056						
ANR	3243770	Symbol	* * group_code		3243056						
ANR	3243771	Symbol	ff_eac3_bits_vs_hebap		3243056						
ANR	3243772	Symbol	s		3243056						
ANR	3243773	Symbol	gaq_gain		3243056						
ANR	3243774	Symbol	v		3243056						
ANR	3243775	Symbol	AV_LOG_WARNING		3243056						
ANR	3243776	Symbol	* s		3243056						
