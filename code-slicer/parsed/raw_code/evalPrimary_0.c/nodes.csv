command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3085149	File	/home/p4ultr4n/workplace/ReVeal/raw_code/evalPrimary_0.c								
ANR	3085150	Function	evalPrimary	1:0:0:2693							
ANR	3085151	FunctionDef	evalPrimary (Parser * p)		3085150	0					
ANR	3085152	CompoundStatement		1:34:34:2693	3085150	0					
ANR	3085153	IdentifierDeclStatement	"double d , d2 = NAN ;"	3:4:41:57	3085150	0	True				
ANR	3085154	IdentifierDecl	d		3085150	0					
ANR	3085155	IdentifierDeclType	double		3085150	0					
ANR	3085156	Identifier	d		3085150	1					
ANR	3085157	IdentifierDecl	d2 = NAN		3085150	1					
ANR	3085158	IdentifierDeclType	double		3085150	0					
ANR	3085159	Identifier	d2		3085150	1					
ANR	3085160	AssignmentExpression	d2 = NAN		3085150	2		=			
ANR	3085161	Identifier	NAN		3085150	0					
ANR	3085162	Identifier	NAN		3085150	1					
ANR	3085163	IdentifierDeclStatement	char * next = p -> s ;	5:4:64:80	3085150	1	True				
ANR	3085164	IdentifierDecl	* next = p -> s		3085150	0					
ANR	3085165	IdentifierDeclType	char *		3085150	0					
ANR	3085166	Identifier	next		3085150	1					
ANR	3085167	AssignmentExpression	* next = p -> s		3085150	2		=			
ANR	3085168	Identifier	next		3085150	0					
ANR	3085169	PtrMemberAccess	p -> s		3085150	1					
ANR	3085170	Identifier	p		3085150	0					
ANR	3085171	Identifier	s		3085150	1					
ANR	3085172	IdentifierDeclStatement	int i ;	7:4:87:92	3085150	2	True				
ANR	3085173	IdentifierDecl	i		3085150	0					
ANR	3085174	IdentifierDeclType	int		3085150	0					
ANR	3085175	Identifier	i		3085150	1					
ANR	3085176	ExpressionStatement	"d = strtod ( p -> s , & next )"	13:4:119:141	3085150	3	True				
ANR	3085177	AssignmentExpression	"d = strtod ( p -> s , & next )"		3085150	0		=			
ANR	3085178	Identifier	d		3085150	0					
ANR	3085179	CallExpression	"strtod ( p -> s , & next )"		3085150	1					
ANR	3085180	Callee	strtod		3085150	0					
ANR	3085181	Identifier	strtod		3085150	0					
ANR	3085182	ArgumentList	p -> s		3085150	1					
ANR	3085183	Argument	p -> s		3085150	0					
ANR	3085184	PtrMemberAccess	p -> s		3085150	0					
ANR	3085185	Identifier	p		3085150	0					
ANR	3085186	Identifier	s		3085150	1					
ANR	3085187	Argument	& next		3085150	1					
ANR	3085188	UnaryOperationExpression	& next		3085150	0					
ANR	3085189	UnaryOperator	&		3085150	0					
ANR	3085190	Identifier	next		3085150	1					
ANR	3085191	IfStatement	if ( next != p -> s )		3085150	4					
ANR	3085192	Condition	next != p -> s	15:7:151:162	3085150	0	True				
ANR	3085193	EqualityExpression	next != p -> s		3085150	0		!=			
ANR	3085194	Identifier	next		3085150	0					
ANR	3085195	PtrMemberAccess	p -> s		3085150	1					
ANR	3085196	Identifier	p		3085150	0					
ANR	3085197	Identifier	s		3085150	1					
ANR	3085198	CompoundStatement		15:20:129:129	3085150	1					
ANR	3085199	ExpressionStatement	"push ( p , d )"	17:8:175:185	3085150	0	True				
ANR	3085200	CallExpression	"push ( p , d )"		3085150	0					
ANR	3085201	Callee	push		3085150	0					
ANR	3085202	Identifier	push		3085150	0					
ANR	3085203	ArgumentList	p		3085150	1					
ANR	3085204	Argument	p		3085150	0					
ANR	3085205	Identifier	p		3085150	0					
ANR	3085206	Argument	d		3085150	1					
ANR	3085207	Identifier	d		3085150	0					
ANR	3085208	ExpressionStatement	p -> s = next	19:8:196:206	3085150	1	True				
ANR	3085209	AssignmentExpression	p -> s = next		3085150	0		=			
ANR	3085210	PtrMemberAccess	p -> s		3085150	0					
ANR	3085211	Identifier	p		3085150	0					
ANR	3085212	Identifier	s		3085150	1					
ANR	3085213	Identifier	next		3085150	1					
ANR	3085214	ReturnStatement	return ;	21:8:217:223	3085150	2	True				
ANR	3085215	ForStatement	for ( i = 0 ; p -> const_name [ i ] ; i ++ )		3085150	5					
ANR	3085216	ForInit	i = 0 ;	29:8:274:277	3085150	0	True				
ANR	3085217	AssignmentExpression	i = 0		3085150	0		=			
ANR	3085218	Identifier	i		3085150	0					
ANR	3085219	PrimaryExpression	0		3085150	1					
ANR	3085220	Condition	p -> const_name [ i ]	29:13:279:294	3085150	1	True				
ANR	3085221	ArrayIndexing	p -> const_name [ i ]		3085150	0					
ANR	3085222	PtrMemberAccess	p -> const_name		3085150	0					
ANR	3085223	Identifier	p		3085150	0					
ANR	3085224	Identifier	const_name		3085150	1					
ANR	3085225	Identifier	i		3085150	1					
ANR	3085226	PostIncDecOperationExpression	i ++	29:31:297:299	3085150	2	True				
ANR	3085227	Identifier	i		3085150	0					
ANR	3085228	IncDec	++		3085150	1					
ANR	3085229	CompoundStatement		29:35:266:266	3085150	3					
ANR	3085230	IfStatement	"if ( strmatch ( p -> s , p -> const_name [ i ] ) )"		3085150	0					
ANR	3085231	Condition	"strmatch ( p -> s , p -> const_name [ i ] )"	31:11:315:346	3085150	0	True				
ANR	3085232	CallExpression	"strmatch ( p -> s , p -> const_name [ i ] )"		3085150	0					
ANR	3085233	Callee	strmatch		3085150	0					
ANR	3085234	Identifier	strmatch		3085150	0					
ANR	3085235	ArgumentList	p -> s		3085150	1					
ANR	3085236	Argument	p -> s		3085150	0					
ANR	3085237	PtrMemberAccess	p -> s		3085150	0					
ANR	3085238	Identifier	p		3085150	0					
ANR	3085239	Identifier	s		3085150	1					
ANR	3085240	Argument	p -> const_name [ i ]		3085150	1					
ANR	3085241	ArrayIndexing	p -> const_name [ i ]		3085150	0					
ANR	3085242	PtrMemberAccess	p -> const_name		3085150	0					
ANR	3085243	Identifier	p		3085150	0					
ANR	3085244	Identifier	const_name		3085150	1					
ANR	3085245	Identifier	i		3085150	1					
ANR	3085246	CompoundStatement		31:44:313:313	3085150	1					
ANR	3085247	ExpressionStatement	"push ( p , p -> const_value [ i ] )"	33:12:363:389	3085150	0	True				
ANR	3085248	CallExpression	"push ( p , p -> const_value [ i ] )"		3085150	0					
ANR	3085249	Callee	push		3085150	0					
ANR	3085250	Identifier	push		3085150	0					
ANR	3085251	ArgumentList	p		3085150	1					
ANR	3085252	Argument	p		3085150	0					
ANR	3085253	Identifier	p		3085150	0					
ANR	3085254	Argument	p -> const_value [ i ]		3085150	1					
ANR	3085255	ArrayIndexing	p -> const_value [ i ]		3085150	0					
ANR	3085256	PtrMemberAccess	p -> const_value		3085150	0					
ANR	3085257	Identifier	p		3085150	0					
ANR	3085258	Identifier	const_value		3085150	1					
ANR	3085259	Identifier	i		3085150	1					
ANR	3085260	ExpressionStatement	p -> s += strlen ( p -> const_name [ i ] )	35:12:404:435	3085150	1	True				
ANR	3085261	AssignmentExpression	p -> s += strlen ( p -> const_name [ i ] )		3085150	0		+=			
ANR	3085262	PtrMemberAccess	p -> s		3085150	0					
ANR	3085263	Identifier	p		3085150	0					
ANR	3085264	Identifier	s		3085150	1					
ANR	3085265	CallExpression	strlen ( p -> const_name [ i ] )		3085150	1					
ANR	3085266	Callee	strlen		3085150	0					
ANR	3085267	Identifier	strlen		3085150	0					
ANR	3085268	ArgumentList	p -> const_name [ i ]		3085150	1					
ANR	3085269	Argument	p -> const_name [ i ]		3085150	0					
ANR	3085270	ArrayIndexing	p -> const_name [ i ]		3085150	0					
ANR	3085271	PtrMemberAccess	p -> const_name		3085150	0					
ANR	3085272	Identifier	p		3085150	0					
ANR	3085273	Identifier	const_name		3085150	1					
ANR	3085274	Identifier	i		3085150	1					
ANR	3085275	ReturnStatement	return ;	37:12:450:456	3085150	2	True				
ANR	3085276	ExpressionStatement	"p -> s = strchr ( p -> s , '(' )"	45:4:487:510	3085150	6	True				
ANR	3085277	AssignmentExpression	"p -> s = strchr ( p -> s , '(' )"		3085150	0		=			
ANR	3085278	PtrMemberAccess	p -> s		3085150	0					
ANR	3085279	Identifier	p		3085150	0					
ANR	3085280	Identifier	s		3085150	1					
ANR	3085281	CallExpression	"strchr ( p -> s , '(' )"		3085150	1					
ANR	3085282	Callee	strchr		3085150	0					
ANR	3085283	Identifier	strchr		3085150	0					
ANR	3085284	ArgumentList	p -> s		3085150	1					
ANR	3085285	Argument	p -> s		3085150	0					
ANR	3085286	PtrMemberAccess	p -> s		3085150	0					
ANR	3085287	Identifier	p		3085150	0					
ANR	3085288	Identifier	s		3085150	1					
ANR	3085289	Argument	'('		3085150	1					
ANR	3085290	PrimaryExpression	'('		3085150	0					
ANR	3085291	IfStatement	if ( p -> s == NULL )		3085150	7					
ANR	3085292	Condition	p -> s == NULL	47:7:520:529	3085150	0	True				
ANR	3085293	EqualityExpression	p -> s == NULL		3085150	0		==			
ANR	3085294	PtrMemberAccess	p -> s		3085150	0					
ANR	3085295	Identifier	p		3085150	0					
ANR	3085296	Identifier	s		3085150	1					
ANR	3085297	Identifier	NULL		3085150	1					
ANR	3085298	CompoundStatement		47:18:496:496	3085150	1					
ANR	3085299	ExpressionStatement	"av_log ( NULL , AV_LOG_ERROR , ""Parser: missing ( in \\""%s\\""\\n"" , next )"	49:8:542:607	3085150	0	True				
ANR	3085300	CallExpression	"av_log ( NULL , AV_LOG_ERROR , ""Parser: missing ( in \\""%s\\""\\n"" , next )"		3085150	0					
ANR	3085301	Callee	av_log		3085150	0					
ANR	3085302	Identifier	av_log		3085150	0					
ANR	3085303	ArgumentList	NULL		3085150	1					
ANR	3085304	Argument	NULL		3085150	0					
ANR	3085305	Identifier	NULL		3085150	0					
ANR	3085306	Argument	AV_LOG_ERROR		3085150	1					
ANR	3085307	Identifier	AV_LOG_ERROR		3085150	0					
ANR	3085308	Argument	"""Parser: missing ( in \\""%s\\""\\n"""		3085150	2					
ANR	3085309	PrimaryExpression	"""Parser: missing ( in \\""%s\\""\\n"""		3085150	0					
ANR	3085310	Argument	next		3085150	3					
ANR	3085311	Identifier	next		3085150	0					
ANR	3085312	ReturnStatement	return ;	51:8:618:624	3085150	1	True				
ANR	3085313	ExpressionStatement	p -> s ++	55:4:638:644	3085150	8	True				
ANR	3085314	PostIncDecOperationExpression	p -> s ++		3085150	0					
ANR	3085315	PtrMemberAccess	p -> s		3085150	0					
ANR	3085316	Identifier	p		3085150	0					
ANR	3085317	Identifier	s		3085150	1					
ANR	3085318	IncDec	++		3085150	1					
ANR	3085319	ExpressionStatement	evalExpression ( p )	57:4:658:675	3085150	9	True				
ANR	3085320	CallExpression	evalExpression ( p )		3085150	0					
ANR	3085321	Callee	evalExpression		3085150	0					
ANR	3085322	Identifier	evalExpression		3085150	0					
ANR	3085323	ArgumentList	p		3085150	1					
ANR	3085324	Argument	p		3085150	0					
ANR	3085325	Identifier	p		3085150	0					
ANR	3085326	ExpressionStatement	d = pop ( p )	59:4:682:691	3085150	10	True				
ANR	3085327	AssignmentExpression	d = pop ( p )		3085150	0		=			
ANR	3085328	Identifier	d		3085150	0					
ANR	3085329	CallExpression	pop ( p )		3085150	1					
ANR	3085330	Callee	pop		3085150	0					
ANR	3085331	Identifier	pop		3085150	0					
ANR	3085332	ArgumentList	p		3085150	1					
ANR	3085333	Argument	p		3085150	0					
ANR	3085334	Identifier	p		3085150	0					
ANR	3085335	ExpressionStatement	p -> s ++	61:4:698:704	3085150	11	True				
ANR	3085336	PostIncDecOperationExpression	p -> s ++		3085150	0					
ANR	3085337	PtrMemberAccess	p -> s		3085150	0					
ANR	3085338	Identifier	p		3085150	0					
ANR	3085339	Identifier	s		3085150	1					
ANR	3085340	IncDec	++		3085150	1					
ANR	3085341	IfStatement	"if ( p -> s [ - 1 ] == ',' )"		3085150	12					
ANR	3085342	Condition	"p -> s [ - 1 ] == ','"	63:7:728:741	3085150	0	True				
ANR	3085343	EqualityExpression	"p -> s [ - 1 ] == ','"		3085150	0		==			
ANR	3085344	ArrayIndexing	p -> s [ - 1 ]		3085150	0					
ANR	3085345	PtrMemberAccess	p -> s		3085150	0					
ANR	3085346	Identifier	p		3085150	0					
ANR	3085347	Identifier	s		3085150	1					
ANR	3085348	UnaryOperationExpression	- 1		3085150	1					
ANR	3085349	UnaryOperator	-		3085150	0					
ANR	3085350	PrimaryExpression	1		3085150	1					
ANR	3085351	PrimaryExpression	"','"		3085150	1					
ANR	3085352	CompoundStatement		63:22:708:708	3085150	1					
ANR	3085353	ExpressionStatement	evalExpression ( p )	65:8:754:771	3085150	0	True				
ANR	3085354	CallExpression	evalExpression ( p )		3085150	0					
ANR	3085355	Callee	evalExpression		3085150	0					
ANR	3085356	Identifier	evalExpression		3085150	0					
ANR	3085357	ArgumentList	p		3085150	1					
ANR	3085358	Argument	p		3085150	0					
ANR	3085359	Identifier	p		3085150	0					
ANR	3085360	ExpressionStatement	d2 = pop ( p )	67:8:782:792	3085150	1	True				
ANR	3085361	AssignmentExpression	d2 = pop ( p )		3085150	0		=			
ANR	3085362	Identifier	d2		3085150	0					
ANR	3085363	CallExpression	pop ( p )		3085150	1					
ANR	3085364	Callee	pop		3085150	0					
ANR	3085365	Identifier	pop		3085150	0					
ANR	3085366	ArgumentList	p		3085150	1					
ANR	3085367	Argument	p		3085150	0					
ANR	3085368	Identifier	p		3085150	0					
ANR	3085369	ExpressionStatement	p -> s ++	69:8:803:809	3085150	2	True				
ANR	3085370	PostIncDecOperationExpression	p -> s ++		3085150	0					
ANR	3085371	PtrMemberAccess	p -> s		3085150	0					
ANR	3085372	Identifier	p		3085150	0					
ANR	3085373	Identifier	s		3085150	1					
ANR	3085374	IncDec	++		3085150	1					
ANR	3085375	IfStatement	"if ( strmatch ( next , ""sinh"" ) )"		3085150	13					
ANR	3085376	Condition	"strmatch ( next , ""sinh"" )"	75:13:845:868	3085150	0	True				
ANR	3085377	CallExpression	"strmatch ( next , ""sinh"" )"		3085150	0					
ANR	3085378	Callee	strmatch		3085150	0					
ANR	3085379	Identifier	strmatch		3085150	0					
ANR	3085380	ArgumentList	next		3085150	1					
ANR	3085381	Argument	next		3085150	0					
ANR	3085382	Identifier	next		3085150	0					
ANR	3085383	Argument	"""sinh"""		3085150	1					
ANR	3085384	PrimaryExpression	"""sinh"""		3085150	0					
ANR	3085385	ExpressionStatement	d = sinh ( d )	75:40:872:882	3085150	1	True				
ANR	3085386	AssignmentExpression	d = sinh ( d )		3085150	0		=			
ANR	3085387	Identifier	d		3085150	0					
ANR	3085388	CallExpression	sinh ( d )		3085150	1					
ANR	3085389	Callee	sinh		3085150	0					
ANR	3085390	Identifier	sinh		3085150	0					
ANR	3085391	ArgumentList	d		3085150	1					
ANR	3085392	Argument	d		3085150	0					
ANR	3085393	Identifier	d		3085150	0					
ANR	3085394	ElseStatement	else		3085150	0					
ANR	3085395	IfStatement	"if ( strmatch ( next , ""cosh"" ) )"		3085150	0					
ANR	3085396	Condition	"strmatch ( next , ""cosh"" )"	77:13:898:921	3085150	0	True				
ANR	3085397	CallExpression	"strmatch ( next , ""cosh"" )"		3085150	0					
ANR	3085398	Callee	strmatch		3085150	0					
ANR	3085399	Identifier	strmatch		3085150	0					
ANR	3085400	ArgumentList	next		3085150	1					
ANR	3085401	Argument	next		3085150	0					
ANR	3085402	Identifier	next		3085150	0					
ANR	3085403	Argument	"""cosh"""		3085150	1					
ANR	3085404	PrimaryExpression	"""cosh"""		3085150	0					
ANR	3085405	ExpressionStatement	d = cosh ( d )	77:40:925:935	3085150	1	True				
ANR	3085406	AssignmentExpression	d = cosh ( d )		3085150	0		=			
ANR	3085407	Identifier	d		3085150	0					
ANR	3085408	CallExpression	cosh ( d )		3085150	1					
ANR	3085409	Callee	cosh		3085150	0					
ANR	3085410	Identifier	cosh		3085150	0					
ANR	3085411	ArgumentList	d		3085150	1					
ANR	3085412	Argument	d		3085150	0					
ANR	3085413	Identifier	d		3085150	0					
ANR	3085414	ElseStatement	else		3085150	0					
ANR	3085415	IfStatement	"if ( strmatch ( next , ""tanh"" ) )"		3085150	0					
ANR	3085416	Condition	"strmatch ( next , ""tanh"" )"	79:13:951:974	3085150	0	True				
ANR	3085417	CallExpression	"strmatch ( next , ""tanh"" )"		3085150	0					
ANR	3085418	Callee	strmatch		3085150	0					
ANR	3085419	Identifier	strmatch		3085150	0					
ANR	3085420	ArgumentList	next		3085150	1					
ANR	3085421	Argument	next		3085150	0					
ANR	3085422	Identifier	next		3085150	0					
ANR	3085423	Argument	"""tanh"""		3085150	1					
ANR	3085424	PrimaryExpression	"""tanh"""		3085150	0					
ANR	3085425	ExpressionStatement	d = tanh ( d )	79:40:978:988	3085150	1	True				
ANR	3085426	AssignmentExpression	d = tanh ( d )		3085150	0		=			
ANR	3085427	Identifier	d		3085150	0					
ANR	3085428	CallExpression	tanh ( d )		3085150	1					
ANR	3085429	Callee	tanh		3085150	0					
ANR	3085430	Identifier	tanh		3085150	0					
ANR	3085431	ArgumentList	d		3085150	1					
ANR	3085432	Argument	d		3085150	0					
ANR	3085433	Identifier	d		3085150	0					
ANR	3085434	ElseStatement	else		3085150	0					
ANR	3085435	IfStatement	"if ( strmatch ( next , ""sin"" ) )"		3085150	0					
ANR	3085436	Condition	"strmatch ( next , ""sin"" )"	81:13:1004:1027	3085150	0	True				
ANR	3085437	CallExpression	"strmatch ( next , ""sin"" )"		3085150	0					
ANR	3085438	Callee	strmatch		3085150	0					
ANR	3085439	Identifier	strmatch		3085150	0					
ANR	3085440	ArgumentList	next		3085150	1					
ANR	3085441	Argument	next		3085150	0					
ANR	3085442	Identifier	next		3085150	0					
ANR	3085443	Argument	"""sin"""		3085150	1					
ANR	3085444	PrimaryExpression	"""sin"""		3085150	0					
ANR	3085445	ExpressionStatement	d = sin ( d )	81:40:1031:1040	3085150	1	True				
ANR	3085446	AssignmentExpression	d = sin ( d )		3085150	0		=			
ANR	3085447	Identifier	d		3085150	0					
ANR	3085448	CallExpression	sin ( d )		3085150	1					
ANR	3085449	Callee	sin		3085150	0					
ANR	3085450	Identifier	sin		3085150	0					
ANR	3085451	ArgumentList	d		3085150	1					
ANR	3085452	Argument	d		3085150	0					
ANR	3085453	Identifier	d		3085150	0					
ANR	3085454	ElseStatement	else		3085150	0					
ANR	3085455	IfStatement	"if ( strmatch ( next , ""cos"" ) )"		3085150	0					
ANR	3085456	Condition	"strmatch ( next , ""cos"" )"	83:13:1056:1079	3085150	0	True				
ANR	3085457	CallExpression	"strmatch ( next , ""cos"" )"		3085150	0					
ANR	3085458	Callee	strmatch		3085150	0					
ANR	3085459	Identifier	strmatch		3085150	0					
ANR	3085460	ArgumentList	next		3085150	1					
ANR	3085461	Argument	next		3085150	0					
ANR	3085462	Identifier	next		3085150	0					
ANR	3085463	Argument	"""cos"""		3085150	1					
ANR	3085464	PrimaryExpression	"""cos"""		3085150	0					
ANR	3085465	ExpressionStatement	d = cos ( d )	83:40:1083:1092	3085150	1	True				
ANR	3085466	AssignmentExpression	d = cos ( d )		3085150	0		=			
ANR	3085467	Identifier	d		3085150	0					
ANR	3085468	CallExpression	cos ( d )		3085150	1					
ANR	3085469	Callee	cos		3085150	0					
ANR	3085470	Identifier	cos		3085150	0					
ANR	3085471	ArgumentList	d		3085150	1					
ANR	3085472	Argument	d		3085150	0					
ANR	3085473	Identifier	d		3085150	0					
ANR	3085474	ElseStatement	else		3085150	0					
ANR	3085475	IfStatement	"if ( strmatch ( next , ""tan"" ) )"		3085150	0					
ANR	3085476	Condition	"strmatch ( next , ""tan"" )"	85:13:1108:1131	3085150	0	True				
ANR	3085477	CallExpression	"strmatch ( next , ""tan"" )"		3085150	0					
ANR	3085478	Callee	strmatch		3085150	0					
ANR	3085479	Identifier	strmatch		3085150	0					
ANR	3085480	ArgumentList	next		3085150	1					
ANR	3085481	Argument	next		3085150	0					
ANR	3085482	Identifier	next		3085150	0					
ANR	3085483	Argument	"""tan"""		3085150	1					
ANR	3085484	PrimaryExpression	"""tan"""		3085150	0					
ANR	3085485	ExpressionStatement	d = tan ( d )	85:40:1135:1144	3085150	1	True				
ANR	3085486	AssignmentExpression	d = tan ( d )		3085150	0		=			
ANR	3085487	Identifier	d		3085150	0					
ANR	3085488	CallExpression	tan ( d )		3085150	1					
ANR	3085489	Callee	tan		3085150	0					
ANR	3085490	Identifier	tan		3085150	0					
ANR	3085491	ArgumentList	d		3085150	1					
ANR	3085492	Argument	d		3085150	0					
ANR	3085493	Identifier	d		3085150	0					
ANR	3085494	ElseStatement	else		3085150	0					
ANR	3085495	IfStatement	"if ( strmatch ( next , ""exp"" ) )"		3085150	0					
ANR	3085496	Condition	"strmatch ( next , ""exp"" )"	87:13:1160:1183	3085150	0	True				
ANR	3085497	CallExpression	"strmatch ( next , ""exp"" )"		3085150	0					
ANR	3085498	Callee	strmatch		3085150	0					
ANR	3085499	Identifier	strmatch		3085150	0					
ANR	3085500	ArgumentList	next		3085150	1					
ANR	3085501	Argument	next		3085150	0					
ANR	3085502	Identifier	next		3085150	0					
ANR	3085503	Argument	"""exp"""		3085150	1					
ANR	3085504	PrimaryExpression	"""exp"""		3085150	0					
ANR	3085505	ExpressionStatement	d = exp ( d )	87:40:1187:1196	3085150	1	True				
ANR	3085506	AssignmentExpression	d = exp ( d )		3085150	0		=			
ANR	3085507	Identifier	d		3085150	0					
ANR	3085508	CallExpression	exp ( d )		3085150	1					
ANR	3085509	Callee	exp		3085150	0					
ANR	3085510	Identifier	exp		3085150	0					
ANR	3085511	ArgumentList	d		3085150	1					
ANR	3085512	Argument	d		3085150	0					
ANR	3085513	Identifier	d		3085150	0					
ANR	3085514	ElseStatement	else		3085150	0					
ANR	3085515	IfStatement	"if ( strmatch ( next , ""log"" ) )"		3085150	0					
ANR	3085516	Condition	"strmatch ( next , ""log"" )"	89:13:1212:1235	3085150	0	True				
ANR	3085517	CallExpression	"strmatch ( next , ""log"" )"		3085150	0					
ANR	3085518	Callee	strmatch		3085150	0					
ANR	3085519	Identifier	strmatch		3085150	0					
ANR	3085520	ArgumentList	next		3085150	1					
ANR	3085521	Argument	next		3085150	0					
ANR	3085522	Identifier	next		3085150	0					
ANR	3085523	Argument	"""log"""		3085150	1					
ANR	3085524	PrimaryExpression	"""log"""		3085150	0					
ANR	3085525	ExpressionStatement	d = log ( d )	89:40:1239:1248	3085150	1	True				
ANR	3085526	AssignmentExpression	d = log ( d )		3085150	0		=			
ANR	3085527	Identifier	d		3085150	0					
ANR	3085528	CallExpression	log ( d )		3085150	1					
ANR	3085529	Callee	log		3085150	0					
ANR	3085530	Identifier	log		3085150	0					
ANR	3085531	ArgumentList	d		3085150	1					
ANR	3085532	Argument	d		3085150	0					
ANR	3085533	Identifier	d		3085150	0					
ANR	3085534	ElseStatement	else		3085150	0					
ANR	3085535	IfStatement	"if ( strmatch ( next , ""squish"" ) )"		3085150	0					
ANR	3085536	Condition	"strmatch ( next , ""squish"" )"	91:13:1264:1287	3085150	0	True				
ANR	3085537	CallExpression	"strmatch ( next , ""squish"" )"		3085150	0					
ANR	3085538	Callee	strmatch		3085150	0					
ANR	3085539	Identifier	strmatch		3085150	0					
ANR	3085540	ArgumentList	next		3085150	1					
ANR	3085541	Argument	next		3085150	0					
ANR	3085542	Identifier	next		3085150	0					
ANR	3085543	Argument	"""squish"""		3085150	1					
ANR	3085544	PrimaryExpression	"""squish"""		3085150	0					
ANR	3085545	ExpressionStatement	d = 1 / ( 1 + exp ( 4 * d ) )	91:40:1291:1308	3085150	1	True				
ANR	3085546	AssignmentExpression	d = 1 / ( 1 + exp ( 4 * d ) )		3085150	0		=			
ANR	3085547	Identifier	d		3085150	0					
ANR	3085548	MultiplicativeExpression	1 / ( 1 + exp ( 4 * d ) )		3085150	1		/			
ANR	3085549	PrimaryExpression	1		3085150	0					
ANR	3085550	AdditiveExpression	1 + exp ( 4 * d )		3085150	1		+			
ANR	3085551	PrimaryExpression	1		3085150	0					
ANR	3085552	CallExpression	exp ( 4 * d )		3085150	1					
ANR	3085553	Callee	exp		3085150	0					
ANR	3085554	Identifier	exp		3085150	0					
ANR	3085555	ArgumentList	4 * d		3085150	1					
ANR	3085556	Argument	4 * d		3085150	0					
ANR	3085557	MultiplicativeExpression	4 * d		3085150	0		*			
ANR	3085558	PrimaryExpression	4		3085150	0					
ANR	3085559	Identifier	d		3085150	1					
ANR	3085560	ElseStatement	else		3085150	0					
ANR	3085561	IfStatement	"if ( strmatch ( next , ""gauss"" ) )"		3085150	0					
ANR	3085562	Condition	"strmatch ( next , ""gauss"" )"	93:13:1324:1347	3085150	0	True				
ANR	3085563	CallExpression	"strmatch ( next , ""gauss"" )"		3085150	0					
ANR	3085564	Callee	strmatch		3085150	0					
ANR	3085565	Identifier	strmatch		3085150	0					
ANR	3085566	ArgumentList	next		3085150	1					
ANR	3085567	Argument	next		3085150	0					
ANR	3085568	Identifier	next		3085150	0					
ANR	3085569	Argument	"""gauss"""		3085150	1					
ANR	3085570	PrimaryExpression	"""gauss"""		3085150	0					
ANR	3085571	ExpressionStatement	d = exp ( - d * d / 2 ) / sqrt ( 2 * M_PI )	93:40:1351:1378	3085150	1	True				
ANR	3085572	AssignmentExpression	d = exp ( - d * d / 2 ) / sqrt ( 2 * M_PI )		3085150	0		=			
ANR	3085573	Identifier	d		3085150	0					
ANR	3085574	MultiplicativeExpression	exp ( - d * d / 2 ) / sqrt ( 2 * M_PI )		3085150	1		/			
ANR	3085575	CallExpression	exp ( - d * d / 2 )		3085150	0					
ANR	3085576	Callee	exp		3085150	0					
ANR	3085577	Identifier	exp		3085150	0					
ANR	3085578	ArgumentList	- d * d / 2		3085150	1					
ANR	3085579	Argument	- d * d / 2		3085150	0					
ANR	3085580	MultiplicativeExpression	- d * d / 2		3085150	0		*			
ANR	3085581	UnaryOperationExpression	- d		3085150	0					
ANR	3085582	UnaryOperator	-		3085150	0					
ANR	3085583	Identifier	d		3085150	1					
ANR	3085584	MultiplicativeExpression	d / 2		3085150	1		/			
ANR	3085585	Identifier	d		3085150	0					
ANR	3085586	PrimaryExpression	2		3085150	1					
ANR	3085587	CallExpression	sqrt ( 2 * M_PI )		3085150	1					
ANR	3085588	Callee	sqrt		3085150	0					
ANR	3085589	Identifier	sqrt		3085150	0					
ANR	3085590	ArgumentList	2 * M_PI		3085150	1					
ANR	3085591	Argument	2 * M_PI		3085150	0					
ANR	3085592	MultiplicativeExpression	2 * M_PI		3085150	0		*			
ANR	3085593	PrimaryExpression	2		3085150	0					
ANR	3085594	Identifier	M_PI		3085150	1					
ANR	3085595	ElseStatement	else		3085150	0					
ANR	3085596	IfStatement	"if ( strmatch ( next , ""abs"" ) )"		3085150	0					
ANR	3085597	Condition	"strmatch ( next , ""abs"" )"	95:13:1394:1417	3085150	0	True				
ANR	3085598	CallExpression	"strmatch ( next , ""abs"" )"		3085150	0					
ANR	3085599	Callee	strmatch		3085150	0					
ANR	3085600	Identifier	strmatch		3085150	0					
ANR	3085601	ArgumentList	next		3085150	1					
ANR	3085602	Argument	next		3085150	0					
ANR	3085603	Identifier	next		3085150	0					
ANR	3085604	Argument	"""abs"""		3085150	1					
ANR	3085605	PrimaryExpression	"""abs"""		3085150	0					
ANR	3085606	ExpressionStatement	d = fabs ( d )	95:40:1421:1431	3085150	1	True				
ANR	3085607	AssignmentExpression	d = fabs ( d )		3085150	0		=			
ANR	3085608	Identifier	d		3085150	0					
ANR	3085609	CallExpression	fabs ( d )		3085150	1					
ANR	3085610	Callee	fabs		3085150	0					
ANR	3085611	Identifier	fabs		3085150	0					
ANR	3085612	ArgumentList	d		3085150	1					
ANR	3085613	Argument	d		3085150	0					
ANR	3085614	Identifier	d		3085150	0					
ANR	3085615	ElseStatement	else		3085150	0					
ANR	3085616	IfStatement	"if ( strmatch ( next , ""max"" ) )"		3085150	0					
ANR	3085617	Condition	"strmatch ( next , ""max"" )"	97:13:1447:1470	3085150	0	True				
ANR	3085618	CallExpression	"strmatch ( next , ""max"" )"		3085150	0					
ANR	3085619	Callee	strmatch		3085150	0					
ANR	3085620	Identifier	strmatch		3085150	0					
ANR	3085621	ArgumentList	next		3085150	1					
ANR	3085622	Argument	next		3085150	0					
ANR	3085623	Identifier	next		3085150	0					
ANR	3085624	Argument	"""max"""		3085150	1					
ANR	3085625	PrimaryExpression	"""max"""		3085150	0					
ANR	3085626	ExpressionStatement	d = d > d2 ? d : d2	97:40:1474:1492	3085150	1	True				
ANR	3085627	AssignmentExpression	d = d > d2 ? d : d2		3085150	0		=			
ANR	3085628	Identifier	d		3085150	0					
ANR	3085629	ConditionalExpression	d > d2 ? d : d2		3085150	1					
ANR	3085630	Condition	d > d2		3085150	0					
ANR	3085631	RelationalExpression	d > d2		3085150	0		>			
ANR	3085632	Identifier	d		3085150	0					
ANR	3085633	Identifier	d2		3085150	1					
ANR	3085634	Identifier	d		3085150	1					
ANR	3085635	Identifier	d2		3085150	2					
ANR	3085636	ElseStatement	else		3085150	0					
ANR	3085637	IfStatement	"if ( strmatch ( next , ""min"" ) )"		3085150	0					
ANR	3085638	Condition	"strmatch ( next , ""min"" )"	99:13:1508:1531	3085150	0	True				
ANR	3085639	CallExpression	"strmatch ( next , ""min"" )"		3085150	0					
ANR	3085640	Callee	strmatch		3085150	0					
ANR	3085641	Identifier	strmatch		3085150	0					
ANR	3085642	ArgumentList	next		3085150	1					
ANR	3085643	Argument	next		3085150	0					
ANR	3085644	Identifier	next		3085150	0					
ANR	3085645	Argument	"""min"""		3085150	1					
ANR	3085646	PrimaryExpression	"""min"""		3085150	0					
ANR	3085647	ExpressionStatement	d = d < d2 ? d : d2	99:40:1535:1553	3085150	1	True				
ANR	3085648	AssignmentExpression	d = d < d2 ? d : d2		3085150	0		=			
ANR	3085649	Identifier	d		3085150	0					
ANR	3085650	ConditionalExpression	d < d2 ? d : d2		3085150	1					
ANR	3085651	Condition	d < d2		3085150	0					
ANR	3085652	RelationalExpression	d < d2		3085150	0		<			
ANR	3085653	Identifier	d		3085150	0					
ANR	3085654	Identifier	d2		3085150	1					
ANR	3085655	Identifier	d		3085150	1					
ANR	3085656	Identifier	d2		3085150	2					
ANR	3085657	ElseStatement	else		3085150	0					
ANR	3085658	IfStatement	"if ( strmatch ( next , ""gt"" ) )"		3085150	0					
ANR	3085659	Condition	"strmatch ( next , ""gt"" )"	101:13:1569:1592	3085150	0	True				
ANR	3085660	CallExpression	"strmatch ( next , ""gt"" )"		3085150	0					
ANR	3085661	Callee	strmatch		3085150	0					
ANR	3085662	Identifier	strmatch		3085150	0					
ANR	3085663	ArgumentList	next		3085150	1					
ANR	3085664	Argument	next		3085150	0					
ANR	3085665	Identifier	next		3085150	0					
ANR	3085666	Argument	"""gt"""		3085150	1					
ANR	3085667	PrimaryExpression	"""gt"""		3085150	0					
ANR	3085668	ExpressionStatement	d = d > d2 ? 1.0 : 0.0	101:40:1596:1617	3085150	1	True				
ANR	3085669	AssignmentExpression	d = d > d2 ? 1.0 : 0.0		3085150	0		=			
ANR	3085670	Identifier	d		3085150	0					
ANR	3085671	ConditionalExpression	d > d2 ? 1.0 : 0.0		3085150	1					
ANR	3085672	Condition	d > d2		3085150	0					
ANR	3085673	RelationalExpression	d > d2		3085150	0		>			
ANR	3085674	Identifier	d		3085150	0					
ANR	3085675	Identifier	d2		3085150	1					
ANR	3085676	PrimaryExpression	1.0		3085150	1					
ANR	3085677	PrimaryExpression	0.0		3085150	2					
ANR	3085678	ElseStatement	else		3085150	0					
ANR	3085679	IfStatement	"if ( strmatch ( next , ""lt"" ) )"		3085150	0					
ANR	3085680	Condition	"strmatch ( next , ""lt"" )"	103:13:1633:1656	3085150	0	True				
ANR	3085681	CallExpression	"strmatch ( next , ""lt"" )"		3085150	0					
ANR	3085682	Callee	strmatch		3085150	0					
ANR	3085683	Identifier	strmatch		3085150	0					
ANR	3085684	ArgumentList	next		3085150	1					
ANR	3085685	Argument	next		3085150	0					
ANR	3085686	Identifier	next		3085150	0					
ANR	3085687	Argument	"""lt"""		3085150	1					
ANR	3085688	PrimaryExpression	"""lt"""		3085150	0					
ANR	3085689	ExpressionStatement	d = d > d2 ? 0.0 : 1.0	103:40:1660:1681	3085150	1	True				
ANR	3085690	AssignmentExpression	d = d > d2 ? 0.0 : 1.0		3085150	0		=			
ANR	3085691	Identifier	d		3085150	0					
ANR	3085692	ConditionalExpression	d > d2 ? 0.0 : 1.0		3085150	1					
ANR	3085693	Condition	d > d2		3085150	0					
ANR	3085694	RelationalExpression	d > d2		3085150	0		>			
ANR	3085695	Identifier	d		3085150	0					
ANR	3085696	Identifier	d2		3085150	1					
ANR	3085697	PrimaryExpression	0.0		3085150	1					
ANR	3085698	PrimaryExpression	1.0		3085150	2					
ANR	3085699	ElseStatement	else		3085150	0					
ANR	3085700	IfStatement	"if ( strmatch ( next , ""eq"" ) )"		3085150	0					
ANR	3085701	Condition	"strmatch ( next , ""eq"" )"	105:13:1697:1720	3085150	0	True				
ANR	3085702	CallExpression	"strmatch ( next , ""eq"" )"		3085150	0					
ANR	3085703	Callee	strmatch		3085150	0					
ANR	3085704	Identifier	strmatch		3085150	0					
ANR	3085705	ArgumentList	next		3085150	1					
ANR	3085706	Argument	next		3085150	0					
ANR	3085707	Identifier	next		3085150	0					
ANR	3085708	Argument	"""eq"""		3085150	1					
ANR	3085709	PrimaryExpression	"""eq"""		3085150	0					
ANR	3085710	ExpressionStatement	d = d == d2 ? 1.0 : 0.0	105:40:1724:1746	3085150	1	True				
ANR	3085711	AssignmentExpression	d = d == d2 ? 1.0 : 0.0		3085150	0		=			
ANR	3085712	Identifier	d		3085150	0					
ANR	3085713	ConditionalExpression	d == d2 ? 1.0 : 0.0		3085150	1					
ANR	3085714	Condition	d == d2		3085150	0					
ANR	3085715	EqualityExpression	d == d2		3085150	0		==			
ANR	3085716	Identifier	d		3085150	0					
ANR	3085717	Identifier	d2		3085150	1					
ANR	3085718	PrimaryExpression	1.0		3085150	1					
ANR	3085719	PrimaryExpression	0.0		3085150	2					
ANR	3085720	ElseStatement	else		3085150	0					
ANR	3085721	CompoundStatement		113:8:1876:1887	3085150	0					
ANR	3085722	IdentifierDeclStatement	int error = 1 ;	113:8:1911:1922	3085150	0	True				
ANR	3085723	IdentifierDecl	error = 1		3085150	0					
ANR	3085724	IdentifierDeclType	int		3085150	0					
ANR	3085725	Identifier	error		3085150	1					
ANR	3085726	AssignmentExpression	error = 1		3085150	2		=			
ANR	3085727	Identifier	error		3085150	0					
ANR	3085728	PrimaryExpression	1		3085150	1					
ANR	3085729	ForStatement	for ( i = 0 ; p -> func1_name && p -> func1_name [ i ] ; i ++ )		3085150	1					
ANR	3085730	ForInit	i = 0 ;	115:12:1937:1940	3085150	0	True				
ANR	3085731	AssignmentExpression	i = 0		3085150	0		=			
ANR	3085732	Identifier	i		3085150	0					
ANR	3085733	PrimaryExpression	0		3085150	1					
ANR	3085734	Condition	p -> func1_name && p -> func1_name [ i ]	115:17:1942:1974	3085150	1	True				
ANR	3085735	AndExpression	p -> func1_name && p -> func1_name [ i ]		3085150	0		&&			
ANR	3085736	PtrMemberAccess	p -> func1_name		3085150	0					
ANR	3085737	Identifier	p		3085150	0					
ANR	3085738	Identifier	func1_name		3085150	1					
ANR	3085739	ArrayIndexing	p -> func1_name [ i ]		3085150	1					
ANR	3085740	PtrMemberAccess	p -> func1_name		3085150	0					
ANR	3085741	Identifier	p		3085150	0					
ANR	3085742	Identifier	func1_name		3085150	1					
ANR	3085743	Identifier	i		3085150	1					
ANR	3085744	PostIncDecOperationExpression	i ++	115:52:1977:1979	3085150	2	True				
ANR	3085745	Identifier	i		3085150	0					
ANR	3085746	IncDec	++		3085150	1					
ANR	3085747	CompoundStatement		115:56:1946:1946	3085150	3					
ANR	3085748	IfStatement	"if ( strmatch ( next , p -> func1_name [ i ] ) )"		3085150	0					
ANR	3085749	Condition	"strmatch ( next , p -> func1_name [ i ] )"	117:15:1999:2030	3085150	0	True				
ANR	3085750	CallExpression	"strmatch ( next , p -> func1_name [ i ] )"		3085150	0					
ANR	3085751	Callee	strmatch		3085150	0					
ANR	3085752	Identifier	strmatch		3085150	0					
ANR	3085753	ArgumentList	next		3085150	1					
ANR	3085754	Argument	next		3085150	0					
ANR	3085755	Identifier	next		3085150	0					
ANR	3085756	Argument	p -> func1_name [ i ]		3085150	1					
ANR	3085757	ArrayIndexing	p -> func1_name [ i ]		3085150	0					
ANR	3085758	PtrMemberAccess	p -> func1_name		3085150	0					
ANR	3085759	Identifier	p		3085150	0					
ANR	3085760	Identifier	func1_name		3085150	1					
ANR	3085761	Identifier	i		3085150	1					
ANR	3085762	CompoundStatement		117:48:1997:1997	3085150	1					
ANR	3085763	ExpressionStatement	"d = p -> func1 [ i ] ( p -> opaque , d )"	119:16:2051:2079	3085150	0	True				
ANR	3085764	AssignmentExpression	"d = p -> func1 [ i ] ( p -> opaque , d )"		3085150	0		=			
ANR	3085765	Identifier	d		3085150	0					
ANR	3085766	CallExpression	"p -> func1 [ i ] ( p -> opaque , d )"		3085150	1					
ANR	3085767	Callee	p -> func1 [ i ]		3085150	0					
ANR	3085768	ArrayIndexing	p -> func1 [ i ]		3085150	0					
ANR	3085769	PtrMemberAccess	p -> func1		3085150	0					
ANR	3085770	Identifier	p		3085150	0					
ANR	3085771	Identifier	func1		3085150	1					
ANR	3085772	Identifier	i		3085150	1					
ANR	3085773	ArgumentList	p -> opaque		3085150	1					
ANR	3085774	Argument	p -> opaque		3085150	0					
ANR	3085775	PtrMemberAccess	p -> opaque		3085150	0					
ANR	3085776	Identifier	p		3085150	0					
ANR	3085777	Identifier	opaque		3085150	1					
ANR	3085778	Argument	d		3085150	1					
ANR	3085779	Identifier	d		3085150	0					
ANR	3085780	ExpressionStatement	error = 0	121:16:2098:2105	3085150	1	True				
ANR	3085781	AssignmentExpression	error = 0		3085150	0		=			
ANR	3085782	Identifier	error		3085150	0					
ANR	3085783	PrimaryExpression	0		3085150	1					
ANR	3085784	BreakStatement	break ;	123:16:2124:2129	3085150	2	True				
ANR	3085785	ForStatement	for ( i = 0 ; p -> func2_name && p -> func2_name [ i ] ; i ++ )		3085150	2					
ANR	3085786	ForInit	i = 0 ;	131:12:2172:2175	3085150	0	True				
ANR	3085787	AssignmentExpression	i = 0		3085150	0		=			
ANR	3085788	Identifier	i		3085150	0					
ANR	3085789	PrimaryExpression	0		3085150	1					
ANR	3085790	Condition	p -> func2_name && p -> func2_name [ i ]	131:17:2177:2209	3085150	1	True				
ANR	3085791	AndExpression	p -> func2_name && p -> func2_name [ i ]		3085150	0		&&			
ANR	3085792	PtrMemberAccess	p -> func2_name		3085150	0					
ANR	3085793	Identifier	p		3085150	0					
ANR	3085794	Identifier	func2_name		3085150	1					
ANR	3085795	ArrayIndexing	p -> func2_name [ i ]		3085150	1					
ANR	3085796	PtrMemberAccess	p -> func2_name		3085150	0					
ANR	3085797	Identifier	p		3085150	0					
ANR	3085798	Identifier	func2_name		3085150	1					
ANR	3085799	Identifier	i		3085150	1					
ANR	3085800	PostIncDecOperationExpression	i ++	131:52:2212:2214	3085150	2	True				
ANR	3085801	Identifier	i		3085150	0					
ANR	3085802	IncDec	++		3085150	1					
ANR	3085803	CompoundStatement		131:56:2181:2181	3085150	3					
ANR	3085804	IfStatement	"if ( strmatch ( next , p -> func2_name [ i ] ) )"		3085150	0					
ANR	3085805	Condition	"strmatch ( next , p -> func2_name [ i ] )"	133:15:2234:2265	3085150	0	True				
ANR	3085806	CallExpression	"strmatch ( next , p -> func2_name [ i ] )"		3085150	0					
ANR	3085807	Callee	strmatch		3085150	0					
ANR	3085808	Identifier	strmatch		3085150	0					
ANR	3085809	ArgumentList	next		3085150	1					
ANR	3085810	Argument	next		3085150	0					
ANR	3085811	Identifier	next		3085150	0					
ANR	3085812	Argument	p -> func2_name [ i ]		3085150	1					
ANR	3085813	ArrayIndexing	p -> func2_name [ i ]		3085150	0					
ANR	3085814	PtrMemberAccess	p -> func2_name		3085150	0					
ANR	3085815	Identifier	p		3085150	0					
ANR	3085816	Identifier	func2_name		3085150	1					
ANR	3085817	Identifier	i		3085150	1					
ANR	3085818	CompoundStatement		133:48:2232:2232	3085150	1					
ANR	3085819	ExpressionStatement	"d = p -> func2 [ i ] ( p -> opaque , d , d2 )"	135:16:2286:2318	3085150	0	True				
ANR	3085820	AssignmentExpression	"d = p -> func2 [ i ] ( p -> opaque , d , d2 )"		3085150	0		=			
ANR	3085821	Identifier	d		3085150	0					
ANR	3085822	CallExpression	"p -> func2 [ i ] ( p -> opaque , d , d2 )"		3085150	1					
ANR	3085823	Callee	p -> func2 [ i ]		3085150	0					
ANR	3085824	ArrayIndexing	p -> func2 [ i ]		3085150	0					
ANR	3085825	PtrMemberAccess	p -> func2		3085150	0					
ANR	3085826	Identifier	p		3085150	0					
ANR	3085827	Identifier	func2		3085150	1					
ANR	3085828	Identifier	i		3085150	1					
ANR	3085829	ArgumentList	p -> opaque		3085150	1					
ANR	3085830	Argument	p -> opaque		3085150	0					
ANR	3085831	PtrMemberAccess	p -> opaque		3085150	0					
ANR	3085832	Identifier	p		3085150	0					
ANR	3085833	Identifier	opaque		3085150	1					
ANR	3085834	Argument	d		3085150	1					
ANR	3085835	Identifier	d		3085150	0					
ANR	3085836	Argument	d2		3085150	2					
ANR	3085837	Identifier	d2		3085150	0					
ANR	3085838	ExpressionStatement	error = 0	137:16:2337:2344	3085150	1	True				
ANR	3085839	AssignmentExpression	error = 0		3085150	0		=			
ANR	3085840	Identifier	error		3085150	0					
ANR	3085841	PrimaryExpression	0		3085150	1					
ANR	3085842	BreakStatement	break ;	139:16:2363:2368	3085150	2	True				
ANR	3085843	IfStatement	if ( error )		3085150	3					
ANR	3085844	Condition	error	147:11:2410:2414	3085150	0	True				
ANR	3085845	Identifier	error		3085150	0					
ANR	3085846	CompoundStatement		147:17:2381:2381	3085150	1					
ANR	3085847	ExpressionStatement	"av_log ( NULL , AV_LOG_ERROR , ""Parser: unknown function in \\""%s\\""\\n"" , next )"	149:12:2431:2503	3085150	0	True				
ANR	3085848	CallExpression	"av_log ( NULL , AV_LOG_ERROR , ""Parser: unknown function in \\""%s\\""\\n"" , next )"		3085150	0					
ANR	3085849	Callee	av_log		3085150	0					
ANR	3085850	Identifier	av_log		3085150	0					
ANR	3085851	ArgumentList	NULL		3085150	1					
ANR	3085852	Argument	NULL		3085150	0					
ANR	3085853	Identifier	NULL		3085150	0					
ANR	3085854	Argument	AV_LOG_ERROR		3085150	1					
ANR	3085855	Identifier	AV_LOG_ERROR		3085150	0					
ANR	3085856	Argument	"""Parser: unknown function in \\""%s\\""\\n"""		3085150	2					
ANR	3085857	PrimaryExpression	"""Parser: unknown function in \\""%s\\""\\n"""		3085150	0					
ANR	3085858	Argument	next		3085150	3					
ANR	3085859	Identifier	next		3085150	0					
ANR	3085860	ReturnStatement	return ;	151:12:2518:2524	3085150	1	True				
ANR	3085861	IfStatement	if ( p -> s [ - 1 ] != ')' )		3085150	14					
ANR	3085862	Condition	p -> s [ - 1 ] != ')'	159:7:2558:2571	3085150	0	True				
ANR	3085863	EqualityExpression	p -> s [ - 1 ] != ')'		3085150	0		!=			
ANR	3085864	ArrayIndexing	p -> s [ - 1 ]		3085150	0					
ANR	3085865	PtrMemberAccess	p -> s		3085150	0					
ANR	3085866	Identifier	p		3085150	0					
ANR	3085867	Identifier	s		3085150	1					
ANR	3085868	UnaryOperationExpression	- 1		3085150	1					
ANR	3085869	UnaryOperator	-		3085150	0					
ANR	3085870	PrimaryExpression	1		3085150	1					
ANR	3085871	PrimaryExpression	')'		3085150	1					
ANR	3085872	CompoundStatement		159:22:2538:2538	3085150	1					
ANR	3085873	ExpressionStatement	"av_log ( NULL , AV_LOG_ERROR , ""Parser: missing ) in \\""%s\\""\\n"" , next )"	161:8:2584:2649	3085150	0	True				
ANR	3085874	CallExpression	"av_log ( NULL , AV_LOG_ERROR , ""Parser: missing ) in \\""%s\\""\\n"" , next )"		3085150	0					
ANR	3085875	Callee	av_log		3085150	0					
ANR	3085876	Identifier	av_log		3085150	0					
ANR	3085877	ArgumentList	NULL		3085150	1					
ANR	3085878	Argument	NULL		3085150	0					
ANR	3085879	Identifier	NULL		3085150	0					
ANR	3085880	Argument	AV_LOG_ERROR		3085150	1					
ANR	3085881	Identifier	AV_LOG_ERROR		3085150	0					
ANR	3085882	Argument	"""Parser: missing ) in \\""%s\\""\\n"""		3085150	2					
ANR	3085883	PrimaryExpression	"""Parser: missing ) in \\""%s\\""\\n"""		3085150	0					
ANR	3085884	Argument	next		3085150	3					
ANR	3085885	Identifier	next		3085150	0					
ANR	3085886	ReturnStatement	return ;	163:8:2660:2666	3085150	1	True				
ANR	3085887	ExpressionStatement	"push ( p , d )"	167:4:2680:2690	3085150	15	True				
ANR	3085888	CallExpression	"push ( p , d )"		3085150	0					
ANR	3085889	Callee	push		3085150	0					
ANR	3085890	Identifier	push		3085150	0					
ANR	3085891	ArgumentList	p		3085150	1					
ANR	3085892	Argument	p		3085150	0					
ANR	3085893	Identifier	p		3085150	0					
ANR	3085894	Argument	d		3085150	1					
ANR	3085895	Identifier	d		3085150	0					
ANR	3085896	ReturnType	static void		3085150	1					
ANR	3085897	Identifier	evalPrimary		3085150	2					
ANR	3085898	ParameterList	Parser * p		3085150	3					
ANR	3085899	Parameter	Parser * p	1:24:24:32	3085150	0	True				
ANR	3085900	ParameterType	Parser *		3085150	0					
ANR	3085901	Identifier	p		3085150	1					
ANR	3085902	CFGEntryNode	ENTRY		3085150		True				
ANR	3085903	CFGExitNode	EXIT		3085150		True				
ANR	3085904	Symbol	next		3085150						
ANR	3085905	Symbol	p -> s		3085150						
ANR	3085906	Symbol	strmatch		3085150						
ANR	3085907	Symbol	* p -> const_value		3085150						
ANR	3085908	Symbol	* p -> s		3085150						
ANR	3085909	Symbol	log		3085150						
ANR	3085910	Symbol	cos		3085150						
ANR	3085911	Symbol	* p -> const_name		3085150						
ANR	3085912	Symbol	p -> func1_name		3085150						
ANR	3085913	Symbol	p -> const_value		3085150						
ANR	3085914	Symbol	strchr		3085150						
ANR	3085915	Symbol	error		3085150						
ANR	3085916	Symbol	d2		3085150						
ANR	3085917	Symbol	M_PI		3085150						
ANR	3085918	Symbol	pop		3085150						
ANR	3085919	Symbol	* p -> func1_name		3085150						
ANR	3085920	Symbol	strlen		3085150						
ANR	3085921	Symbol	tanh		3085150						
ANR	3085922	Symbol	* p -> func2		3085150						
ANR	3085923	Symbol	sqrt		3085150						
ANR	3085924	Symbol	* p -> func1		3085150						
ANR	3085925	Symbol	p -> opaque		3085150						
ANR	3085926	Symbol	sin		3085150						
ANR	3085927	Symbol	p -> func2		3085150						
ANR	3085928	Symbol	* * p		3085150						
ANR	3085929	Symbol	p -> func1		3085150						
ANR	3085930	Symbol	exp		3085150						
ANR	3085931	Symbol	tan		3085150						
ANR	3085932	Symbol	& next		3085150						
ANR	3085933	Symbol	NULL		3085150						
ANR	3085934	Symbol	fabs		3085150						
ANR	3085935	Symbol	d		3085150						
ANR	3085936	Symbol	AV_LOG_ERROR		3085150						
ANR	3085937	Symbol	sinh		3085150						
ANR	3085938	Symbol	i		3085150						
ANR	3085939	Symbol	p -> func2_name		3085150						
ANR	3085940	Symbol	strtod		3085150						
ANR	3085941	Symbol	cosh		3085150						
ANR	3085942	Symbol	* p -> func2_name		3085150						
ANR	3085943	Symbol	p		3085150						
ANR	3085944	Symbol	* i		3085150						
ANR	3085945	Symbol	NAN		3085150						
ANR	3085946	Symbol	* p		3085150						
ANR	3085947	Symbol	p -> const_name		3085150						
