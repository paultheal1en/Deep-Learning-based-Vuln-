command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6310333	File	/home/p4ultr4n/workplace/ReVeal/raw_code/parse_cmdline_1.c								
ANR	6310334	Function	parse_cmdline	1:0:0:608							
ANR	6310335	FunctionDef	"parse_cmdline (const char * cmdline , int * pnb_args , char * * args)"		6310334	0					
ANR	6310336	CompoundStatement		5:0:103:608	6310334	0					
ANR	6310337	IdentifierDeclStatement	const char * p ;	7:4:110:123	6310334	0	True				
ANR	6310338	IdentifierDecl	* p		6310334	0					
ANR	6310339	IdentifierDeclType	const char *		6310334	0					
ANR	6310340	Identifier	p		6310334	1					
ANR	6310341	IdentifierDeclStatement	"int nb_args , ret ;"	9:4:130:146	6310334	1	True				
ANR	6310342	IdentifierDecl	nb_args		6310334	0					
ANR	6310343	IdentifierDeclType	int		6310334	0					
ANR	6310344	Identifier	nb_args		6310334	1					
ANR	6310345	IdentifierDecl	ret		6310334	1					
ANR	6310346	IdentifierDeclType	int		6310334	0					
ANR	6310347	Identifier	ret		6310334	1					
ANR	6310348	IdentifierDeclStatement	char buf [ 1024 ] ;	11:4:153:167	6310334	2	True				
ANR	6310349	IdentifierDecl	buf [ 1024 ]		6310334	0					
ANR	6310350	IdentifierDeclType	char [ 1024 ]		6310334	0					
ANR	6310351	Identifier	buf		6310334	1					
ANR	6310352	PrimaryExpression	1024		6310334	2					
ANR	6310353	ExpressionStatement	p = cmdline	15:4:176:187	6310334	3	True				
ANR	6310354	AssignmentExpression	p = cmdline		6310334	0		=			
ANR	6310355	Identifier	p		6310334	0					
ANR	6310356	Identifier	cmdline		6310334	1					
ANR	6310357	ExpressionStatement	nb_args = 0	17:4:194:205	6310334	4	True				
ANR	6310358	AssignmentExpression	nb_args = 0		6310334	0		=			
ANR	6310359	Identifier	nb_args		6310334	0					
ANR	6310360	PrimaryExpression	0		6310334	1					
ANR	6310361	ForStatement	for ( ; ; )		6310334	5					
ANR	6310362	CompoundStatement		15:13:117:117	6310334	0					
ANR	6310363	WhileStatement	while ( qemu_isspace ( * p ) )		6310334	0					
ANR	6310364	Condition	qemu_isspace ( * p )	21:15:239:254	6310334	0	True				
ANR	6310365	CallExpression	qemu_isspace ( * p )		6310334	0					
ANR	6310366	Callee	qemu_isspace		6310334	0					
ANR	6310367	Identifier	qemu_isspace		6310334	0					
ANR	6310368	ArgumentList	* p		6310334	1					
ANR	6310369	Argument	* p		6310334	0					
ANR	6310370	UnaryOperationExpression	* p		6310334	0					
ANR	6310371	UnaryOperator	*		6310334	0					
ANR	6310372	Identifier	p		6310334	1					
ANR	6310373	CompoundStatement		17:33:153:153	6310334	1					
ANR	6310374	ExpressionStatement	p ++	23:12:272:275	6310334	0	True				
ANR	6310375	PostIncDecOperationExpression	p ++		6310334	0					
ANR	6310376	Identifier	p		6310334	0					
ANR	6310377	IncDec	++		6310334	1					
ANR	6310378	IfStatement	if ( * p == '\\0' )		6310334	1					
ANR	6310379	Condition	* p == '\\0'	27:12:301:310	6310334	0	True				
ANR	6310380	EqualityExpression	* p == '\\0'		6310334	0		==			
ANR	6310381	UnaryOperationExpression	* p		6310334	0					
ANR	6310382	UnaryOperator	*		6310334	0					
ANR	6310383	Identifier	p		6310334	1					
ANR	6310384	PrimaryExpression	'\\0'		6310334	1					
ANR	6310385	CompoundStatement		23:24:209:209	6310334	1					
ANR	6310386	BreakStatement	break ;	29:12:328:333	6310334	0	True				
ANR	6310387	IfStatement	if ( nb_args >= MAX_ARGS )		6310334	2					
ANR	6310388	Condition	nb_args >= MAX_ARGS	33:12:359:377	6310334	0	True				
ANR	6310389	RelationalExpression	nb_args >= MAX_ARGS		6310334	0		>=			
ANR	6310390	Identifier	nb_args		6310334	0					
ANR	6310391	Identifier	MAX_ARGS		6310334	1					
ANR	6310392	CompoundStatement		29:33:276:276	6310334	1					
ANR	6310393	BreakStatement	break ;	35:12:395:400	6310334	0	True				
ANR	6310394	ExpressionStatement	"ret = get_str ( buf , sizeof ( buf ) , & p )"	39:8:422:457	6310334	3	True				
ANR	6310395	AssignmentExpression	"ret = get_str ( buf , sizeof ( buf ) , & p )"		6310334	0		=			
ANR	6310396	Identifier	ret		6310334	0					
ANR	6310397	CallExpression	"get_str ( buf , sizeof ( buf ) , & p )"		6310334	1					
ANR	6310398	Callee	get_str		6310334	0					
ANR	6310399	Identifier	get_str		6310334	0					
ANR	6310400	ArgumentList	buf		6310334	1					
ANR	6310401	Argument	buf		6310334	0					
ANR	6310402	Identifier	buf		6310334	0					
ANR	6310403	Argument	sizeof ( buf )		6310334	1					
ANR	6310404	SizeofExpression	sizeof ( buf )		6310334	0					
ANR	6310405	Sizeof	sizeof		6310334	0					
ANR	6310406	SizeofOperand	buf		6310334	1					
ANR	6310407	Argument	& p		6310334	2					
ANR	6310408	UnaryOperationExpression	& p		6310334	0					
ANR	6310409	UnaryOperator	&		6310334	0					
ANR	6310410	Identifier	p		6310334	1					
ANR	6310411	ExpressionStatement	args [ nb_args ] = g_strdup ( buf )	41:8:468:497	6310334	4	True				
ANR	6310412	AssignmentExpression	args [ nb_args ] = g_strdup ( buf )		6310334	0		=			
ANR	6310413	ArrayIndexing	args [ nb_args ]		6310334	0					
ANR	6310414	Identifier	args		6310334	0					
ANR	6310415	Identifier	nb_args		6310334	1					
ANR	6310416	CallExpression	g_strdup ( buf )		6310334	1					
ANR	6310417	Callee	g_strdup		6310334	0					
ANR	6310418	Identifier	g_strdup		6310334	0					
ANR	6310419	ArgumentList	buf		6310334	1					
ANR	6310420	Argument	buf		6310334	0					
ANR	6310421	Identifier	buf		6310334	0					
ANR	6310422	ExpressionStatement	nb_args ++	43:8:508:517	6310334	5	True				
ANR	6310423	PostIncDecOperationExpression	nb_args ++		6310334	0					
ANR	6310424	Identifier	nb_args		6310334	0					
ANR	6310425	IncDec	++		6310334	1					
ANR	6310426	IfStatement	if ( ret < 0 )		6310334	6					
ANR	6310427	Condition	ret < 0	45:12:532:538	6310334	0	True				
ANR	6310428	RelationalExpression	ret < 0		6310334	0		<			
ANR	6310429	Identifier	ret		6310334	0					
ANR	6310430	PrimaryExpression	0		6310334	1					
ANR	6310431	CompoundStatement		41:21:437:437	6310334	1					
ANR	6310432	BreakStatement	break ;	47:12:556:561	6310334	0	True				
ANR	6310433	ExpressionStatement	* pnb_args = nb_args	53:4:586:605	6310334	6	True				
ANR	6310434	AssignmentExpression	* pnb_args = nb_args		6310334	0		=			
ANR	6310435	UnaryOperationExpression	* pnb_args		6310334	0					
ANR	6310436	UnaryOperator	*		6310334	0					
ANR	6310437	Identifier	pnb_args		6310334	1					
ANR	6310438	Identifier	nb_args		6310334	1					
ANR	6310439	ReturnType	static void		6310334	1					
ANR	6310440	Identifier	parse_cmdline		6310334	2					
ANR	6310441	ParameterList	"const char * cmdline , int * pnb_args , char * * args"		6310334	3					
ANR	6310442	Parameter	const char * cmdline	1:26:26:44	6310334	0	True				
ANR	6310443	ParameterType	const char *		6310334	0					
ANR	6310444	Identifier	cmdline		6310334	1					
ANR	6310445	Parameter	int * pnb_args	3:26:74:86	6310334	1	True				
ANR	6310446	ParameterType	int *		6310334	0					
ANR	6310447	Identifier	pnb_args		6310334	1					
ANR	6310448	Parameter	char * * args	3:41:89:99	6310334	2	True				
ANR	6310449	ParameterType	char * *		6310334	0					
ANR	6310450	Identifier	args		6310334	1					
ANR	6310451	CFGEntryNode	ENTRY		6310334		True				
ANR	6310452	CFGExitNode	EXIT		6310334		True				
ANR	6310453	InfiniteForNode	true		6310334		True				
ANR	6310454	Symbol	ret		6310334						
ANR	6310455	Symbol	* pnb_args		6310334						
ANR	6310456	Symbol	get_str		6310334						
ANR	6310457	Symbol	* nb_args		6310334						
ANR	6310458	Symbol	MAX_ARGS		6310334						
ANR	6310459	Symbol	pnb_args		6310334						
ANR	6310460	Symbol	qemu_isspace		6310334						
ANR	6310461	Symbol	* args		6310334						
ANR	6310462	Symbol	args		6310334						
ANR	6310463	Symbol	p		6310334						
ANR	6310464	Symbol	buf		6310334						
ANR	6310465	Symbol	cmdline		6310334						
ANR	6310466	Symbol	& p		6310334						
ANR	6310467	Symbol	nb_args		6310334						
ANR	6310468	Symbol	g_strdup		6310334						
ANR	6310469	Symbol	* p		6310334						
