command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	320684	File	/home/p4ultr4n/workplace/ReVeal/raw_code/a64multi_encode_init_1.c								
ANR	320685	Function	a64multi_encode_init	1:0:0:2151							
ANR	320686	FunctionDef	a64multi_encode_init (AVCodecContext * avctx)		320685	0					
ANR	320687	CompoundStatement		3:0:64:2151	320685	0					
ANR	320688	IdentifierDeclStatement	A64Context * c = avctx -> priv_data ;	5:4:71:103	320685	0	True				
ANR	320689	IdentifierDecl	* c = avctx -> priv_data		320685	0					
ANR	320690	IdentifierDeclType	A64Context *		320685	0					
ANR	320691	Identifier	c		320685	1					
ANR	320692	AssignmentExpression	* c = avctx -> priv_data		320685	2		=			
ANR	320693	Identifier	c		320685	0					
ANR	320694	PtrMemberAccess	avctx -> priv_data		320685	1					
ANR	320695	Identifier	avctx		320685	0					
ANR	320696	Identifier	priv_data		320685	1					
ANR	320697	IdentifierDeclStatement	int a ;	7:4:110:115	320685	1	True				
ANR	320698	IdentifierDecl	a		320685	0					
ANR	320699	IdentifierDeclType	int		320685	0					
ANR	320700	Identifier	a		320685	1					
ANR	320701	ExpressionStatement	"av_lfg_init ( & c -> randctx , 1 )"	9:4:122:149	320685	2	True				
ANR	320702	CallExpression	"av_lfg_init ( & c -> randctx , 1 )"		320685	0					
ANR	320703	Callee	av_lfg_init		320685	0					
ANR	320704	Identifier	av_lfg_init		320685	0					
ANR	320705	ArgumentList	& c -> randctx		320685	1					
ANR	320706	Argument	& c -> randctx		320685	0					
ANR	320707	UnaryOperationExpression	& c -> randctx		320685	0					
ANR	320708	UnaryOperator	&		320685	0					
ANR	320709	PtrMemberAccess	c -> randctx		320685	1					
ANR	320710	Identifier	c		320685	0					
ANR	320711	Identifier	randctx		320685	1					
ANR	320712	Argument	1		320685	1					
ANR	320713	PrimaryExpression	1		320685	0					
ANR	320714	IfStatement	if ( avctx -> global_quality < 1 )		320685	3					
ANR	320715	Condition	avctx -> global_quality < 1	13:8:162:186	320685	0	True				
ANR	320716	RelationalExpression	avctx -> global_quality < 1		320685	0		<			
ANR	320717	PtrMemberAccess	avctx -> global_quality		320685	0					
ANR	320718	Identifier	avctx		320685	0					
ANR	320719	Identifier	global_quality		320685	1					
ANR	320720	PrimaryExpression	1		320685	1					
ANR	320721	CompoundStatement		11:35:124:124	320685	1					
ANR	320722	ExpressionStatement	c -> mc_lifetime = 4	15:8:200:218	320685	0	True				
ANR	320723	AssignmentExpression	c -> mc_lifetime = 4		320685	0		=			
ANR	320724	PtrMemberAccess	c -> mc_lifetime		320685	0					
ANR	320725	Identifier	c		320685	0					
ANR	320726	Identifier	mc_lifetime		320685	1					
ANR	320727	PrimaryExpression	4		320685	1					
ANR	320728	ElseStatement	else		320685	0					
ANR	320729	CompoundStatement		15:11:167:167	320685	0					
ANR	320730	ExpressionStatement	c -> mc_lifetime = avctx -> global_quality /= FF_QP2LAMBDA	19:8:243:297	320685	0	True				
ANR	320731	AssignmentExpression	c -> mc_lifetime = avctx -> global_quality /= FF_QP2LAMBDA		320685	0		=			
ANR	320732	PtrMemberAccess	c -> mc_lifetime		320685	0					
ANR	320733	Identifier	c		320685	0					
ANR	320734	Identifier	mc_lifetime		320685	1					
ANR	320735	AssignmentExpression	avctx -> global_quality /= FF_QP2LAMBDA		320685	1		/=			
ANR	320736	PtrMemberAccess	avctx -> global_quality		320685	0					
ANR	320737	Identifier	avctx		320685	0					
ANR	320738	Identifier	global_quality		320685	1					
ANR	320739	Identifier	FF_QP2LAMBDA		320685	1					
ANR	320740	ExpressionStatement	"av_log ( avctx , AV_LOG_INFO , ""charset lifetime set to %d frame(s)\\n"" , c -> mc_lifetime )"	25:4:313:396	320685	4	True				
ANR	320741	CallExpression	"av_log ( avctx , AV_LOG_INFO , ""charset lifetime set to %d frame(s)\\n"" , c -> mc_lifetime )"		320685	0					
ANR	320742	Callee	av_log		320685	0					
ANR	320743	Identifier	av_log		320685	0					
ANR	320744	ArgumentList	avctx		320685	1					
ANR	320745	Argument	avctx		320685	0					
ANR	320746	Identifier	avctx		320685	0					
ANR	320747	Argument	AV_LOG_INFO		320685	1					
ANR	320748	Identifier	AV_LOG_INFO		320685	0					
ANR	320749	Argument	"""charset lifetime set to %d frame(s)\\n"""		320685	2					
ANR	320750	PrimaryExpression	"""charset lifetime set to %d frame(s)\\n"""		320685	0					
ANR	320751	Argument	c -> mc_lifetime		320685	3					
ANR	320752	PtrMemberAccess	c -> mc_lifetime		320685	0					
ANR	320753	Identifier	c		320685	0					
ANR	320754	Identifier	mc_lifetime		320685	1					
ANR	320755	ExpressionStatement	c -> mc_frame_counter = 0	29:4:405:428	320685	5	True				
ANR	320756	AssignmentExpression	c -> mc_frame_counter = 0		320685	0		=			
ANR	320757	PtrMemberAccess	c -> mc_frame_counter		320685	0					
ANR	320758	Identifier	c		320685	0					
ANR	320759	Identifier	mc_frame_counter		320685	1					
ANR	320760	PrimaryExpression	0		320685	1					
ANR	320761	ExpressionStatement	c -> mc_use_5col = avctx -> codec -> id == AV_CODEC_ID_A64_MULTI5	31:4:435:499	320685	6	True				
ANR	320762	AssignmentExpression	c -> mc_use_5col = avctx -> codec -> id == AV_CODEC_ID_A64_MULTI5		320685	0		=			
ANR	320763	PtrMemberAccess	c -> mc_use_5col		320685	0					
ANR	320764	Identifier	c		320685	0					
ANR	320765	Identifier	mc_use_5col		320685	1					
ANR	320766	EqualityExpression	avctx -> codec -> id == AV_CODEC_ID_A64_MULTI5		320685	1		==			
ANR	320767	PtrMemberAccess	avctx -> codec -> id		320685	0					
ANR	320768	PtrMemberAccess	avctx -> codec		320685	0					
ANR	320769	Identifier	avctx		320685	0					
ANR	320770	Identifier	codec		320685	1					
ANR	320771	Identifier	id		320685	1					
ANR	320772	Identifier	AV_CODEC_ID_A64_MULTI5		320685	1					
ANR	320773	ExpressionStatement	c -> mc_pal_size = 4 + c -> mc_use_5col	33:4:506:546	320685	7	True				
ANR	320774	AssignmentExpression	c -> mc_pal_size = 4 + c -> mc_use_5col		320685	0		=			
ANR	320775	PtrMemberAccess	c -> mc_pal_size		320685	0					
ANR	320776	Identifier	c		320685	0					
ANR	320777	Identifier	mc_pal_size		320685	1					
ANR	320778	AdditiveExpression	4 + c -> mc_use_5col		320685	1		+			
ANR	320779	PrimaryExpression	4		320685	0					
ANR	320780	PtrMemberAccess	c -> mc_use_5col		320685	1					
ANR	320781	Identifier	c		320685	0					
ANR	320782	Identifier	mc_use_5col		320685	1					
ANR	320783	ForStatement	for ( a = 0 ; a < c -> mc_pal_size ; a ++ )		320685	8					
ANR	320784	ForInit	a = 0 ;	39:9:605:610	320685	0	True				
ANR	320785	AssignmentExpression	a = 0		320685	0		=			
ANR	320786	Identifier	a		320685	0					
ANR	320787	PrimaryExpression	0		320685	1					
ANR	320788	Condition	a < c -> mc_pal_size	39:16:612:629	320685	1	True				
ANR	320789	RelationalExpression	a < c -> mc_pal_size		320685	0		<			
ANR	320790	Identifier	a		320685	0					
ANR	320791	PtrMemberAccess	c -> mc_pal_size		320685	1					
ANR	320792	Identifier	c		320685	0					
ANR	320793	Identifier	mc_pal_size		320685	1					
ANR	320794	PostIncDecOperationExpression	a ++	39:36:632:634	320685	2	True				
ANR	320795	Identifier	a		320685	0					
ANR	320796	IncDec	++		320685	1					
ANR	320797	CompoundStatement		37:41:572:572	320685	3					
ANR	320798	ExpressionStatement	c -> mc_luma_vals [ a ] = a64_palette [ mc_colors [ a ] ] [ 0 ] * 0.30 + a64_palette [ mc_colors [ a ] ] [ 1 ] * 0.59 + a64_palette [ mc_colors [ a ] ] [ 2 ] * 0.11	41:8:648:834	320685	0	True				
ANR	320799	AssignmentExpression	c -> mc_luma_vals [ a ] = a64_palette [ mc_colors [ a ] ] [ 0 ] * 0.30 + a64_palette [ mc_colors [ a ] ] [ 1 ] * 0.59 + a64_palette [ mc_colors [ a ] ] [ 2 ] * 0.11		320685	0		=			
ANR	320800	ArrayIndexing	c -> mc_luma_vals [ a ]		320685	0					
ANR	320801	PtrMemberAccess	c -> mc_luma_vals		320685	0					
ANR	320802	Identifier	c		320685	0					
ANR	320803	Identifier	mc_luma_vals		320685	1					
ANR	320804	Identifier	a		320685	1					
ANR	320805	AdditiveExpression	a64_palette [ mc_colors [ a ] ] [ 0 ] * 0.30 + a64_palette [ mc_colors [ a ] ] [ 1 ] * 0.59 + a64_palette [ mc_colors [ a ] ] [ 2 ] * 0.11		320685	1		+			
ANR	320806	MultiplicativeExpression	a64_palette [ mc_colors [ a ] ] [ 0 ] * 0.30		320685	0		*			
ANR	320807	ArrayIndexing	a64_palette [ mc_colors [ a ] ] [ 0 ]		320685	0					
ANR	320808	ArrayIndexing	a64_palette [ mc_colors [ a ] ]		320685	0					
ANR	320809	Identifier	a64_palette		320685	0					
ANR	320810	ArrayIndexing	mc_colors [ a ]		320685	1					
ANR	320811	Identifier	mc_colors		320685	0					
ANR	320812	Identifier	a		320685	1					
ANR	320813	PrimaryExpression	0		320685	1					
ANR	320814	PrimaryExpression	0.30		320685	1					
ANR	320815	AdditiveExpression	a64_palette [ mc_colors [ a ] ] [ 1 ] * 0.59 + a64_palette [ mc_colors [ a ] ] [ 2 ] * 0.11		320685	1		+			
ANR	320816	MultiplicativeExpression	a64_palette [ mc_colors [ a ] ] [ 1 ] * 0.59		320685	0		*			
ANR	320817	ArrayIndexing	a64_palette [ mc_colors [ a ] ] [ 1 ]		320685	0					
ANR	320818	ArrayIndexing	a64_palette [ mc_colors [ a ] ]		320685	0					
ANR	320819	Identifier	a64_palette		320685	0					
ANR	320820	ArrayIndexing	mc_colors [ a ]		320685	1					
ANR	320821	Identifier	mc_colors		320685	0					
ANR	320822	Identifier	a		320685	1					
ANR	320823	PrimaryExpression	1		320685	1					
ANR	320824	PrimaryExpression	0.59		320685	1					
ANR	320825	MultiplicativeExpression	a64_palette [ mc_colors [ a ] ] [ 2 ] * 0.11		320685	1		*			
ANR	320826	ArrayIndexing	a64_palette [ mc_colors [ a ] ] [ 2 ]		320685	0					
ANR	320827	ArrayIndexing	a64_palette [ mc_colors [ a ] ]		320685	0					
ANR	320828	Identifier	a64_palette		320685	0					
ANR	320829	ArrayIndexing	mc_colors [ a ]		320685	1					
ANR	320830	Identifier	mc_colors		320685	0					
ANR	320831	Identifier	a		320685	1					
ANR	320832	PrimaryExpression	2		320685	1					
ANR	320833	PrimaryExpression	0.11		320685	1					
ANR	320834	IfStatement	"if ( ! ( c -> mc_meta_charset = av_malloc_array ( c -> mc_lifetime , 32000 * sizeof ( int ) ) ) || ! ( c -> mc_best_cb = av_malloc ( CHARSET_CHARS * 32 * sizeof ( int ) ) ) || ! ( c -> mc_charmap = av_mallocz_array ( c -> mc_lifetime , 1000 * sizeof ( int ) ) ) || ! ( c -> mc_colram = av_mallocz ( CHARSET_CHARS * sizeof ( uint8_t ) ) ) || ! ( c -> mc_charset = av_malloc ( 0x800 * ( INTERLACED + 1 ) * sizeof ( uint8_t ) ) ) )"		320685	9					
ANR	320835	Condition	"! ( c -> mc_meta_charset = av_malloc_array ( c -> mc_lifetime , 32000 * sizeof ( int ) ) ) || ! ( c -> mc_best_cb = av_malloc ( CHARSET_CHARS * 32 * sizeof ( int ) ) ) || ! ( c -> mc_charmap = av_mallocz_array ( c -> mc_lifetime , 1000 * sizeof ( int ) ) ) || ! ( c -> mc_colram = av_mallocz ( CHARSET_CHARS * sizeof ( uint8_t ) ) ) || ! ( c -> mc_charset = av_malloc ( 0x800 * ( INTERLACED + 1 ) * sizeof ( uint8_t ) ) )"	51:8:854:1274	320685	0	True				
ANR	320836	OrExpression	"! ( c -> mc_meta_charset = av_malloc_array ( c -> mc_lifetime , 32000 * sizeof ( int ) ) ) || ! ( c -> mc_best_cb = av_malloc ( CHARSET_CHARS * 32 * sizeof ( int ) ) ) || ! ( c -> mc_charmap = av_mallocz_array ( c -> mc_lifetime , 1000 * sizeof ( int ) ) ) || ! ( c -> mc_colram = av_mallocz ( CHARSET_CHARS * sizeof ( uint8_t ) ) ) || ! ( c -> mc_charset = av_malloc ( 0x800 * ( INTERLACED + 1 ) * sizeof ( uint8_t ) ) )"		320685	0		||			
ANR	320837	UnaryOperationExpression	"! ( c -> mc_meta_charset = av_malloc_array ( c -> mc_lifetime , 32000 * sizeof ( int ) ) )"		320685	0					
ANR	320838	UnaryOperator	!		320685	0					
ANR	320839	AssignmentExpression	"c -> mc_meta_charset = av_malloc_array ( c -> mc_lifetime , 32000 * sizeof ( int ) )"		320685	1		=			
ANR	320840	PtrMemberAccess	c -> mc_meta_charset		320685	0					
ANR	320841	Identifier	c		320685	0					
ANR	320842	Identifier	mc_meta_charset		320685	1					
ANR	320843	CallExpression	"av_malloc_array ( c -> mc_lifetime , 32000 * sizeof ( int ) )"		320685	1					
ANR	320844	Callee	av_malloc_array		320685	0					
ANR	320845	Identifier	av_malloc_array		320685	0					
ANR	320846	ArgumentList	c -> mc_lifetime		320685	1					
ANR	320847	Argument	c -> mc_lifetime		320685	0					
ANR	320848	PtrMemberAccess	c -> mc_lifetime		320685	0					
ANR	320849	Identifier	c		320685	0					
ANR	320850	Identifier	mc_lifetime		320685	1					
ANR	320851	Argument	32000 * sizeof ( int )		320685	1					
ANR	320852	MultiplicativeExpression	32000 * sizeof ( int )		320685	0		*			
ANR	320853	PrimaryExpression	32000		320685	0					
ANR	320854	SizeofExpression	sizeof ( int )		320685	1					
ANR	320855	Sizeof	sizeof		320685	0					
ANR	320856	SizeofOperand	int		320685	1					
ANR	320857	OrExpression	"! ( c -> mc_best_cb = av_malloc ( CHARSET_CHARS * 32 * sizeof ( int ) ) ) || ! ( c -> mc_charmap = av_mallocz_array ( c -> mc_lifetime , 1000 * sizeof ( int ) ) ) || ! ( c -> mc_colram = av_mallocz ( CHARSET_CHARS * sizeof ( uint8_t ) ) ) || ! ( c -> mc_charset = av_malloc ( 0x800 * ( INTERLACED + 1 ) * sizeof ( uint8_t ) ) )"		320685	1		||			
ANR	320858	UnaryOperationExpression	! ( c -> mc_best_cb = av_malloc ( CHARSET_CHARS * 32 * sizeof ( int ) ) )		320685	0					
ANR	320859	UnaryOperator	!		320685	0					
ANR	320860	AssignmentExpression	c -> mc_best_cb = av_malloc ( CHARSET_CHARS * 32 * sizeof ( int ) )		320685	1		=			
ANR	320861	PtrMemberAccess	c -> mc_best_cb		320685	0					
ANR	320862	Identifier	c		320685	0					
ANR	320863	Identifier	mc_best_cb		320685	1					
ANR	320864	CallExpression	av_malloc ( CHARSET_CHARS * 32 * sizeof ( int ) )		320685	1					
ANR	320865	Callee	av_malloc		320685	0					
ANR	320866	Identifier	av_malloc		320685	0					
ANR	320867	ArgumentList	CHARSET_CHARS * 32 * sizeof ( int )		320685	1					
ANR	320868	Argument	CHARSET_CHARS * 32 * sizeof ( int )		320685	0					
ANR	320869	MultiplicativeExpression	CHARSET_CHARS * 32 * sizeof ( int )		320685	0		*			
ANR	320870	Identifier	CHARSET_CHARS		320685	0					
ANR	320871	MultiplicativeExpression	32 * sizeof ( int )		320685	1		*			
ANR	320872	PrimaryExpression	32		320685	0					
ANR	320873	SizeofExpression	sizeof ( int )		320685	1					
ANR	320874	Sizeof	sizeof		320685	0					
ANR	320875	SizeofOperand	int		320685	1					
ANR	320876	OrExpression	"! ( c -> mc_charmap = av_mallocz_array ( c -> mc_lifetime , 1000 * sizeof ( int ) ) ) || ! ( c -> mc_colram = av_mallocz ( CHARSET_CHARS * sizeof ( uint8_t ) ) ) || ! ( c -> mc_charset = av_malloc ( 0x800 * ( INTERLACED + 1 ) * sizeof ( uint8_t ) ) )"		320685	1		||			
ANR	320877	UnaryOperationExpression	"! ( c -> mc_charmap = av_mallocz_array ( c -> mc_lifetime , 1000 * sizeof ( int ) ) )"		320685	0					
ANR	320878	UnaryOperator	!		320685	0					
ANR	320879	AssignmentExpression	"c -> mc_charmap = av_mallocz_array ( c -> mc_lifetime , 1000 * sizeof ( int ) )"		320685	1		=			
ANR	320880	PtrMemberAccess	c -> mc_charmap		320685	0					
ANR	320881	Identifier	c		320685	0					
ANR	320882	Identifier	mc_charmap		320685	1					
ANR	320883	CallExpression	"av_mallocz_array ( c -> mc_lifetime , 1000 * sizeof ( int ) )"		320685	1					
ANR	320884	Callee	av_mallocz_array		320685	0					
ANR	320885	Identifier	av_mallocz_array		320685	0					
ANR	320886	ArgumentList	c -> mc_lifetime		320685	1					
ANR	320887	Argument	c -> mc_lifetime		320685	0					
ANR	320888	PtrMemberAccess	c -> mc_lifetime		320685	0					
ANR	320889	Identifier	c		320685	0					
ANR	320890	Identifier	mc_lifetime		320685	1					
ANR	320891	Argument	1000 * sizeof ( int )		320685	1					
ANR	320892	MultiplicativeExpression	1000 * sizeof ( int )		320685	0		*			
ANR	320893	PrimaryExpression	1000		320685	0					
ANR	320894	SizeofExpression	sizeof ( int )		320685	1					
ANR	320895	Sizeof	sizeof		320685	0					
ANR	320896	SizeofOperand	int		320685	1					
ANR	320897	OrExpression	! ( c -> mc_colram = av_mallocz ( CHARSET_CHARS * sizeof ( uint8_t ) ) ) || ! ( c -> mc_charset = av_malloc ( 0x800 * ( INTERLACED + 1 ) * sizeof ( uint8_t ) ) )		320685	1		||			
ANR	320898	UnaryOperationExpression	! ( c -> mc_colram = av_mallocz ( CHARSET_CHARS * sizeof ( uint8_t ) ) )		320685	0					
ANR	320899	UnaryOperator	!		320685	0					
ANR	320900	AssignmentExpression	c -> mc_colram = av_mallocz ( CHARSET_CHARS * sizeof ( uint8_t ) )		320685	1		=			
ANR	320901	PtrMemberAccess	c -> mc_colram		320685	0					
ANR	320902	Identifier	c		320685	0					
ANR	320903	Identifier	mc_colram		320685	1					
ANR	320904	CallExpression	av_mallocz ( CHARSET_CHARS * sizeof ( uint8_t ) )		320685	1					
ANR	320905	Callee	av_mallocz		320685	0					
ANR	320906	Identifier	av_mallocz		320685	0					
ANR	320907	ArgumentList	CHARSET_CHARS * sizeof ( uint8_t )		320685	1					
ANR	320908	Argument	CHARSET_CHARS * sizeof ( uint8_t )		320685	0					
ANR	320909	MultiplicativeExpression	CHARSET_CHARS * sizeof ( uint8_t )		320685	0		*			
ANR	320910	Identifier	CHARSET_CHARS		320685	0					
ANR	320911	SizeofExpression	sizeof ( uint8_t )		320685	1					
ANR	320912	Sizeof	sizeof		320685	0					
ANR	320913	SizeofOperand	uint8_t		320685	1					
ANR	320914	UnaryOperationExpression	! ( c -> mc_charset = av_malloc ( 0x800 * ( INTERLACED + 1 ) * sizeof ( uint8_t ) ) )		320685	1					
ANR	320915	UnaryOperator	!		320685	0					
ANR	320916	AssignmentExpression	c -> mc_charset = av_malloc ( 0x800 * ( INTERLACED + 1 ) * sizeof ( uint8_t ) )		320685	1		=			
ANR	320917	PtrMemberAccess	c -> mc_charset		320685	0					
ANR	320918	Identifier	c		320685	0					
ANR	320919	Identifier	mc_charset		320685	1					
ANR	320920	CallExpression	av_malloc ( 0x800 * ( INTERLACED + 1 ) * sizeof ( uint8_t ) )		320685	1					
ANR	320921	Callee	av_malloc		320685	0					
ANR	320922	Identifier	av_malloc		320685	0					
ANR	320923	ArgumentList	0x800 * ( INTERLACED + 1 ) * sizeof ( uint8_t )		320685	1					
ANR	320924	Argument	0x800 * ( INTERLACED + 1 ) * sizeof ( uint8_t )		320685	0					
ANR	320925	MultiplicativeExpression	0x800 * ( INTERLACED + 1 ) * sizeof ( uint8_t )		320685	0		*			
ANR	320926	PrimaryExpression	0x800		320685	0					
ANR	320927	MultiplicativeExpression	( INTERLACED + 1 ) * sizeof ( uint8_t )		320685	1		*			
ANR	320928	AdditiveExpression	INTERLACED + 1		320685	0		+			
ANR	320929	Identifier	INTERLACED		320685	0					
ANR	320930	PrimaryExpression	1		320685	1					
ANR	320931	SizeofExpression	sizeof ( uint8_t )		320685	1					
ANR	320932	Sizeof	sizeof		320685	0					
ANR	320933	SizeofOperand	uint8_t		320685	1					
ANR	320934	CompoundStatement		57:85:1212:1212	320685	1					
ANR	320935	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Failed to allocate buffer memory.\\n"" )"	61:8:1288:1354	320685	0	True				
ANR	320936	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Failed to allocate buffer memory.\\n"" )"		320685	0					
ANR	320937	Callee	av_log		320685	0					
ANR	320938	Identifier	av_log		320685	0					
ANR	320939	ArgumentList	avctx		320685	1					
ANR	320940	Argument	avctx		320685	0					
ANR	320941	Identifier	avctx		320685	0					
ANR	320942	Argument	AV_LOG_ERROR		320685	1					
ANR	320943	Identifier	AV_LOG_ERROR		320685	0					
ANR	320944	Argument	"""Failed to allocate buffer memory.\\n"""		320685	2					
ANR	320945	PrimaryExpression	"""Failed to allocate buffer memory.\\n"""		320685	0					
ANR	320946	ReturnStatement	return AVERROR ( ENOMEM ) ;	63:8:1365:1387	320685	1	True				
ANR	320947	CallExpression	AVERROR ( ENOMEM )		320685	0					
ANR	320948	Callee	AVERROR		320685	0					
ANR	320949	Identifier	AVERROR		320685	0					
ANR	320950	ArgumentList	ENOMEM		320685	1					
ANR	320951	Argument	ENOMEM		320685	0					
ANR	320952	Identifier	ENOMEM		320685	0					
ANR	320953	IfStatement	if ( ! ( avctx -> extradata = av_mallocz ( 8 * 4 + FF_INPUT_BUFFER_PADDING_SIZE ) ) )		320685	10					
ANR	320954	Condition	! ( avctx -> extradata = av_mallocz ( 8 * 4 + FF_INPUT_BUFFER_PADDING_SIZE ) )	71:8:1435:1504	320685	0	True				
ANR	320955	UnaryOperationExpression	! ( avctx -> extradata = av_mallocz ( 8 * 4 + FF_INPUT_BUFFER_PADDING_SIZE ) )		320685	0					
ANR	320956	UnaryOperator	!		320685	0					
ANR	320957	AssignmentExpression	avctx -> extradata = av_mallocz ( 8 * 4 + FF_INPUT_BUFFER_PADDING_SIZE )		320685	1		=			
ANR	320958	PtrMemberAccess	avctx -> extradata		320685	0					
ANR	320959	Identifier	avctx		320685	0					
ANR	320960	Identifier	extradata		320685	1					
ANR	320961	CallExpression	av_mallocz ( 8 * 4 + FF_INPUT_BUFFER_PADDING_SIZE )		320685	1					
ANR	320962	Callee	av_mallocz		320685	0					
ANR	320963	Identifier	av_mallocz		320685	0					
ANR	320964	ArgumentList	8 * 4 + FF_INPUT_BUFFER_PADDING_SIZE		320685	1					
ANR	320965	Argument	8 * 4 + FF_INPUT_BUFFER_PADDING_SIZE		320685	0					
ANR	320966	AdditiveExpression	8 * 4 + FF_INPUT_BUFFER_PADDING_SIZE		320685	0		+			
ANR	320967	MultiplicativeExpression	8 * 4		320685	0		*			
ANR	320968	PrimaryExpression	8		320685	0					
ANR	320969	PrimaryExpression	4		320685	1					
ANR	320970	Identifier	FF_INPUT_BUFFER_PADDING_SIZE		320685	1					
ANR	320971	CompoundStatement		69:80:1442:1442	320685	1					
ANR	320972	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Failed to allocate memory for extradata.\\n"" )"	73:8:1518:1591	320685	0	True				
ANR	320973	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Failed to allocate memory for extradata.\\n"" )"		320685	0					
ANR	320974	Callee	av_log		320685	0					
ANR	320975	Identifier	av_log		320685	0					
ANR	320976	ArgumentList	avctx		320685	1					
ANR	320977	Argument	avctx		320685	0					
ANR	320978	Identifier	avctx		320685	0					
ANR	320979	Argument	AV_LOG_ERROR		320685	1					
ANR	320980	Identifier	AV_LOG_ERROR		320685	0					
ANR	320981	Argument	"""Failed to allocate memory for extradata.\\n"""		320685	2					
ANR	320982	PrimaryExpression	"""Failed to allocate memory for extradata.\\n"""		320685	0					
ANR	320983	ReturnStatement	return AVERROR ( ENOMEM ) ;	75:8:1602:1624	320685	1	True				
ANR	320984	CallExpression	AVERROR ( ENOMEM )		320685	0					
ANR	320985	Callee	AVERROR		320685	0					
ANR	320986	Identifier	AVERROR		320685	0					
ANR	320987	ArgumentList	ENOMEM		320685	1					
ANR	320988	Argument	ENOMEM		320685	0					
ANR	320989	Identifier	ENOMEM		320685	0					
ANR	320990	ExpressionStatement	avctx -> extradata_size = 8 * 4	79:4:1638:1667	320685	11	True				
ANR	320991	AssignmentExpression	avctx -> extradata_size = 8 * 4		320685	0		=			
ANR	320992	PtrMemberAccess	avctx -> extradata_size		320685	0					
ANR	320993	Identifier	avctx		320685	0					
ANR	320994	Identifier	extradata_size		320685	1					
ANR	320995	MultiplicativeExpression	8 * 4		320685	1		*			
ANR	320996	PrimaryExpression	8		320685	0					
ANR	320997	PrimaryExpression	4		320685	1					
ANR	320998	ExpressionStatement	"AV_WB32 ( avctx -> extradata , c -> mc_lifetime )"	81:4:1674:1715	320685	12	True				
ANR	320999	CallExpression	"AV_WB32 ( avctx -> extradata , c -> mc_lifetime )"		320685	0					
ANR	321000	Callee	AV_WB32		320685	0					
ANR	321001	Identifier	AV_WB32		320685	0					
ANR	321002	ArgumentList	avctx -> extradata		320685	1					
ANR	321003	Argument	avctx -> extradata		320685	0					
ANR	321004	PtrMemberAccess	avctx -> extradata		320685	0					
ANR	321005	Identifier	avctx		320685	0					
ANR	321006	Identifier	extradata		320685	1					
ANR	321007	Argument	c -> mc_lifetime		320685	1					
ANR	321008	PtrMemberAccess	c -> mc_lifetime		320685	0					
ANR	321009	Identifier	c		320685	0					
ANR	321010	Identifier	mc_lifetime		320685	1					
ANR	321011	ExpressionStatement	"AV_WB32 ( avctx -> extradata + 16 , INTERLACED )"	83:4:1722:1764	320685	13	True				
ANR	321012	CallExpression	"AV_WB32 ( avctx -> extradata + 16 , INTERLACED )"		320685	0					
ANR	321013	Callee	AV_WB32		320685	0					
ANR	321014	Identifier	AV_WB32		320685	0					
ANR	321015	ArgumentList	avctx -> extradata + 16		320685	1					
ANR	321016	Argument	avctx -> extradata + 16		320685	0					
ANR	321017	AdditiveExpression	avctx -> extradata + 16		320685	0		+			
ANR	321018	PtrMemberAccess	avctx -> extradata		320685	0					
ANR	321019	Identifier	avctx		320685	0					
ANR	321020	Identifier	extradata		320685	1					
ANR	321021	PrimaryExpression	16		320685	1					
ANR	321022	Argument	INTERLACED		320685	1					
ANR	321023	Identifier	INTERLACED		320685	0					
ANR	321024	ExpressionStatement	avctx -> coded_frame = av_frame_alloc ( )	87:4:1773:1810	320685	14	True				
ANR	321025	AssignmentExpression	avctx -> coded_frame = av_frame_alloc ( )		320685	0		=			
ANR	321026	PtrMemberAccess	avctx -> coded_frame		320685	0					
ANR	321027	Identifier	avctx		320685	0					
ANR	321028	Identifier	coded_frame		320685	1					
ANR	321029	CallExpression	av_frame_alloc ( )		320685	1					
ANR	321030	Callee	av_frame_alloc		320685	0					
ANR	321031	Identifier	av_frame_alloc		320685	0					
ANR	321032	ArgumentList			320685	1					
ANR	321033	IfStatement	if ( ! avctx -> coded_frame )		320685	15					
ANR	321034	Condition	! avctx -> coded_frame	89:8:1821:1839	320685	0	True				
ANR	321035	UnaryOperationExpression	! avctx -> coded_frame		320685	0					
ANR	321036	UnaryOperator	!		320685	0					
ANR	321037	PtrMemberAccess	avctx -> coded_frame		320685	1					
ANR	321038	Identifier	avctx		320685	0					
ANR	321039	Identifier	coded_frame		320685	1					
ANR	321040	CompoundStatement		87:29:1777:1777	320685	1					
ANR	321041	ExpressionStatement	a64multi_close_encoder ( avctx )	91:8:1853:1882	320685	0	True				
ANR	321042	CallExpression	a64multi_close_encoder ( avctx )		320685	0					
ANR	321043	Callee	a64multi_close_encoder		320685	0					
ANR	321044	Identifier	a64multi_close_encoder		320685	0					
ANR	321045	ArgumentList	avctx		320685	1					
ANR	321046	Argument	avctx		320685	0					
ANR	321047	Identifier	avctx		320685	0					
ANR	321048	ReturnStatement	return AVERROR ( ENOMEM ) ;	93:8:1893:1915	320685	1	True				
ANR	321049	CallExpression	AVERROR ( ENOMEM )		320685	0					
ANR	321050	Callee	AVERROR		320685	0					
ANR	321051	Identifier	AVERROR		320685	0					
ANR	321052	ArgumentList	ENOMEM		320685	1					
ANR	321053	Argument	ENOMEM		320685	0					
ANR	321054	Identifier	ENOMEM		320685	0					
ANR	321055	ExpressionStatement	avctx -> coded_frame -> pict_type = AV_PICTURE_TYPE_I	99:4:1931:1980	320685	16	True				
ANR	321056	AssignmentExpression	avctx -> coded_frame -> pict_type = AV_PICTURE_TYPE_I		320685	0		=			
ANR	321057	PtrMemberAccess	avctx -> coded_frame -> pict_type		320685	0					
ANR	321058	PtrMemberAccess	avctx -> coded_frame		320685	0					
ANR	321059	Identifier	avctx		320685	0					
ANR	321060	Identifier	coded_frame		320685	1					
ANR	321061	Identifier	pict_type		320685	1					
ANR	321062	Identifier	AV_PICTURE_TYPE_I		320685	1					
ANR	321063	ExpressionStatement	avctx -> coded_frame -> key_frame = 1	101:4:1987:2020	320685	17	True				
ANR	321064	AssignmentExpression	avctx -> coded_frame -> key_frame = 1		320685	0		=			
ANR	321065	PtrMemberAccess	avctx -> coded_frame -> key_frame		320685	0					
ANR	321066	PtrMemberAccess	avctx -> coded_frame		320685	0					
ANR	321067	Identifier	avctx		320685	0					
ANR	321068	Identifier	coded_frame		320685	1					
ANR	321069	Identifier	key_frame		320685	1					
ANR	321070	PrimaryExpression	1		320685	1					
ANR	321071	IfStatement	if ( ! avctx -> codec_tag )		320685	18					
ANR	321072	Condition	! avctx -> codec_tag	103:8:2031:2047	320685	0	True				
ANR	321073	UnaryOperationExpression	! avctx -> codec_tag		320685	0					
ANR	321074	UnaryOperator	!		320685	0					
ANR	321075	PtrMemberAccess	avctx -> codec_tag		320685	1					
ANR	321076	Identifier	avctx		320685	0					
ANR	321077	Identifier	codec_tag		320685	1					
ANR	321078	ExpressionStatement	"avctx -> codec_tag = AV_RL32 ( ""a64m"" )"	105:9:2060:2094	320685	1	True				
ANR	321079	AssignmentExpression	"avctx -> codec_tag = AV_RL32 ( ""a64m"" )"		320685	0		=			
ANR	321080	PtrMemberAccess	avctx -> codec_tag		320685	0					
ANR	321081	Identifier	avctx		320685	0					
ANR	321082	Identifier	codec_tag		320685	1					
ANR	321083	CallExpression	"AV_RL32 ( ""a64m"" )"		320685	1					
ANR	321084	Callee	AV_RL32		320685	0					
ANR	321085	Identifier	AV_RL32		320685	0					
ANR	321086	ArgumentList	"""a64m"""		320685	1					
ANR	321087	Argument	"""a64m"""		320685	0					
ANR	321088	PrimaryExpression	"""a64m"""		320685	0					
ANR	321089	ExpressionStatement	c -> next_pts = AV_NOPTS_VALUE	109:4:2103:2131	320685	19	True				
ANR	321090	AssignmentExpression	c -> next_pts = AV_NOPTS_VALUE		320685	0		=			
ANR	321091	PtrMemberAccess	c -> next_pts		320685	0					
ANR	321092	Identifier	c		320685	0					
ANR	321093	Identifier	next_pts		320685	1					
ANR	321094	Identifier	AV_NOPTS_VALUE		320685	1					
ANR	321095	ReturnStatement	return 0 ;	113:4:2140:2148	320685	20	True				
ANR	321096	PrimaryExpression	0		320685	0					
ANR	321097	ReturnType	static av_cold int		320685	1					
ANR	321098	Identifier	a64multi_encode_init		320685	2					
ANR	321099	ParameterList	AVCodecContext * avctx		320685	3					
ANR	321100	Parameter	AVCodecContext * avctx	1:40:40:60	320685	0	True				
ANR	321101	ParameterType	AVCodecContext *		320685	0					
ANR	321102	Identifier	avctx		320685	1					
ANR	321103	CFGEntryNode	ENTRY		320685		True				
ANR	321104	CFGExitNode	EXIT		320685		True				
ANR	321105	Symbol	* * mc_colors		320685						
ANR	321106	Symbol	av_malloc		320685						
ANR	321107	Symbol	ENOMEM		320685						
ANR	321108	Symbol	avctx -> coded_frame -> pict_type		320685						
ANR	321109	Symbol	c -> mc_colram		320685						
ANR	321110	Symbol	av_mallocz_array		320685						
ANR	321111	Symbol	& c -> randctx		320685						
ANR	321112	Symbol	* a64_palette		320685						
ANR	321113	Symbol	* avctx -> codec		320685						
ANR	321114	Symbol	c -> mc_frame_counter		320685						
ANR	321115	Symbol	avctx -> codec		320685						
ANR	321116	Symbol	c -> next_pts		320685						
ANR	321117	Symbol	INTERLACED		320685						
ANR	321118	Symbol	* * avctx		320685						
ANR	321119	Symbol	c -> mc_use_5col		320685						
ANR	321120	Symbol	* * c		320685						
ANR	321121	Symbol	av_mallocz		320685						
ANR	321122	Symbol	* * a		320685						
ANR	321123	Symbol	avctx -> coded_frame -> key_frame		320685						
ANR	321124	Symbol	av_frame_alloc		320685						
ANR	321125	Symbol	avctx -> global_quality		320685						
ANR	321126	Symbol	* avctx		320685						
ANR	321127	Symbol	AV_LOG_INFO		320685						
ANR	321128	Symbol	* * * a		320685						
ANR	321129	Symbol	* * a64_palette		320685						
ANR	321130	Symbol	c -> mc_best_cb		320685						
ANR	321131	Symbol	AV_NOPTS_VALUE		320685						
ANR	321132	Symbol	c -> mc_luma_vals		320685						
ANR	321133	Symbol	* * * mc_colors		320685						
ANR	321134	Symbol	FF_INPUT_BUFFER_PADDING_SIZE		320685						
ANR	321135	Symbol	avctx -> coded_frame		320685						
ANR	321136	Symbol	CHARSET_CHARS		320685						
ANR	321137	Symbol	* mc_colors		320685						
ANR	321138	Symbol	AV_PICTURE_TYPE_I		320685						
ANR	321139	Symbol	* avctx -> coded_frame		320685						
ANR	321140	Symbol	avctx		320685						
ANR	321141	Symbol	avctx -> codec_tag		320685						
ANR	321142	Symbol	AV_CODEC_ID_A64_MULTI5		320685						
ANR	321143	Symbol	mc_colors		320685						
ANR	321144	Symbol	a		320685						
ANR	321145	Symbol	avctx -> extradata		320685						
ANR	321146	Symbol	c		320685						
ANR	321147	Symbol	* c -> mc_luma_vals		320685						
ANR	321148	Symbol	AV_LOG_ERROR		320685						
ANR	321149	Symbol	c -> mc_charset		320685						
ANR	321150	Symbol	a64_palette		320685						
ANR	321151	Symbol	avctx -> extradata_size		320685						
ANR	321152	Symbol	* a		320685						
ANR	321153	Symbol	avctx -> priv_data		320685						
ANR	321154	Symbol	* c		320685						
ANR	321155	Symbol	c -> mc_meta_charset		320685						
ANR	321156	Symbol	c -> mc_lifetime		320685						
ANR	321157	Symbol	avctx -> codec -> id		320685						
ANR	321158	Symbol	AV_RL32		320685						
ANR	321159	Symbol	c -> mc_pal_size		320685						
ANR	321160	Symbol	FF_QP2LAMBDA		320685						
ANR	321161	Symbol	av_malloc_array		320685						
ANR	321162	Symbol	AVERROR		320685						
ANR	321163	Symbol	c -> mc_charmap		320685						
