command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8046461	File	/home/p4ultr4n/workplace/ReVeal/raw_code/svq1_decode_frame_0.c								
ANR	8046462	Function	svq1_decode_frame	1:0:0:2930							
ANR	8046463	FunctionDef	"svq1_decode_frame (AVCodecContext * avctx , void * data , int * data_size , UINT8 * buf , int buf_size)"		8046462	0					
ANR	8046464	CompoundStatement		7:0:168:2930	8046462	0					
ANR	8046465	IdentifierDeclStatement	MpegEncContext * s = avctx -> priv_data ;	9:2:173:207	8046462	0	True				
ANR	8046466	IdentifierDecl	* s = avctx -> priv_data		8046462	0					
ANR	8046467	IdentifierDeclType	MpegEncContext *		8046462	0					
ANR	8046468	Identifier	s		8046462	1					
ANR	8046469	AssignmentExpression	* s = avctx -> priv_data		8046462	2		=			
ANR	8046470	Identifier	s		8046462	0					
ANR	8046471	PtrMemberAccess	avctx -> priv_data		8046462	1					
ANR	8046472	Identifier	avctx		8046462	0					
ANR	8046473	Identifier	priv_data		8046462	1					
ANR	8046474	IdentifierDeclStatement	"uint8_t * current , * previous ;"	11:2:212:244	8046462	1	True				
ANR	8046475	IdentifierDecl	* current		8046462	0					
ANR	8046476	IdentifierDeclType	uint8_t *		8046462	0					
ANR	8046477	Identifier	current		8046462	1					
ANR	8046478	IdentifierDecl	* previous		8046462	1					
ANR	8046479	IdentifierDeclType	uint8_t *		8046462	0					
ANR	8046480	Identifier	previous		8046462	1					
ANR	8046481	IdentifierDeclStatement	"int result , i , x , y , width , height ;"	13:2:249:284	8046462	2	True				
ANR	8046482	IdentifierDecl	result		8046462	0					
ANR	8046483	IdentifierDeclType	int		8046462	0					
ANR	8046484	Identifier	result		8046462	1					
ANR	8046485	IdentifierDecl	i		8046462	1					
ANR	8046486	IdentifierDeclType	int		8046462	0					
ANR	8046487	Identifier	i		8046462	1					
ANR	8046488	IdentifierDecl	x		8046462	2					
ANR	8046489	IdentifierDeclType	int		8046462	0					
ANR	8046490	Identifier	x		8046462	1					
ANR	8046491	IdentifierDecl	y		8046462	3					
ANR	8046492	IdentifierDeclType	int		8046462	0					
ANR	8046493	Identifier	y		8046462	1					
ANR	8046494	IdentifierDecl	width		8046462	4					
ANR	8046495	IdentifierDeclType	int		8046462	0					
ANR	8046496	Identifier	width		8046462	1					
ANR	8046497	IdentifierDecl	height		8046462	5					
ANR	8046498	IdentifierDeclType	int		8046462	0					
ANR	8046499	Identifier	height		8046462	1					
ANR	8046500	IdentifierDeclStatement	AVFrame * pict = data ;	15:2:289:309	8046462	3	True				
ANR	8046501	IdentifierDecl	* pict = data		8046462	0					
ANR	8046502	IdentifierDeclType	AVFrame *		8046462	0					
ANR	8046503	Identifier	pict		8046462	1					
ANR	8046504	AssignmentExpression	* pict = data		8046462	2		=			
ANR	8046505	Identifier	data		8046462	0					
ANR	8046506	Identifier	data		8046462	1					
ANR	8046507	ExpressionStatement	"init_get_bits ( & s -> gb , buf , buf_size )"	21:2:348:382	8046462	4	True				
ANR	8046508	CallExpression	"init_get_bits ( & s -> gb , buf , buf_size )"		8046462	0					
ANR	8046509	Callee	init_get_bits		8046462	0					
ANR	8046510	Identifier	init_get_bits		8046462	0					
ANR	8046511	ArgumentList	& s -> gb		8046462	1					
ANR	8046512	Argument	& s -> gb		8046462	0					
ANR	8046513	UnaryOperationExpression	& s -> gb		8046462	0					
ANR	8046514	UnaryOperator	&		8046462	0					
ANR	8046515	PtrMemberAccess	s -> gb		8046462	1					
ANR	8046516	Identifier	s		8046462	0					
ANR	8046517	Identifier	gb		8046462	1					
ANR	8046518	Argument	buf		8046462	1					
ANR	8046519	Identifier	buf		8046462	0					
ANR	8046520	Argument	buf_size		8046462	2					
ANR	8046521	Identifier	buf_size		8046462	0					
ANR	8046522	ExpressionStatement	"s -> f_code = get_bits ( & s -> gb , 22 )"	27:2:418:451	8046462	5	True				
ANR	8046523	AssignmentExpression	"s -> f_code = get_bits ( & s -> gb , 22 )"		8046462	0		=			
ANR	8046524	PtrMemberAccess	s -> f_code		8046462	0					
ANR	8046525	Identifier	s		8046462	0					
ANR	8046526	Identifier	f_code		8046462	1					
ANR	8046527	CallExpression	"get_bits ( & s -> gb , 22 )"		8046462	1					
ANR	8046528	Callee	get_bits		8046462	0					
ANR	8046529	Identifier	get_bits		8046462	0					
ANR	8046530	ArgumentList	& s -> gb		8046462	1					
ANR	8046531	Argument	& s -> gb		8046462	0					
ANR	8046532	UnaryOperationExpression	& s -> gb		8046462	0					
ANR	8046533	UnaryOperator	&		8046462	0					
ANR	8046534	PtrMemberAccess	s -> gb		8046462	1					
ANR	8046535	Identifier	s		8046462	0					
ANR	8046536	Identifier	gb		8046462	1					
ANR	8046537	Argument	22		8046462	1					
ANR	8046538	PrimaryExpression	22		8046462	0					
ANR	8046539	IfStatement	if ( ( s -> f_code & ~0x70 ) || ! ( s -> f_code & 0x60 ) )		8046462	6					
ANR	8046540	Condition	( s -> f_code & ~0x70 ) || ! ( s -> f_code & 0x60 )	31:6:462:503	8046462	0	True				
ANR	8046541	OrExpression	( s -> f_code & ~0x70 ) || ! ( s -> f_code & 0x60 )		8046462	0		||			
ANR	8046542	BitAndExpression	s -> f_code & ~0x70		8046462	0		&			
ANR	8046543	PtrMemberAccess	s -> f_code		8046462	0					
ANR	8046544	Identifier	s		8046462	0					
ANR	8046545	Identifier	f_code		8046462	1					
ANR	8046546	Identifier	~0x70		8046462	1					
ANR	8046547	UnaryOperationExpression	! ( s -> f_code & 0x60 )		8046462	1					
ANR	8046548	UnaryOperator	!		8046462	0					
ANR	8046549	BitAndExpression	s -> f_code & 0x60		8046462	1		&			
ANR	8046550	PtrMemberAccess	s -> f_code		8046462	0					
ANR	8046551	Identifier	s		8046462	0					
ANR	8046552	Identifier	f_code		8046462	1					
ANR	8046553	PrimaryExpression	0x60		8046462	1					
ANR	8046554	ReturnStatement	return - 1 ;	33:4:511:520	8046462	1	True				
ANR	8046555	UnaryOperationExpression	- 1		8046462	0					
ANR	8046556	UnaryOperator	-		8046462	0					
ANR	8046557	PrimaryExpression	1		8046462	1					
ANR	8046558	IfStatement	if ( s -> f_code != 0x20 )		8046462	7					
ANR	8046559	Condition	s -> f_code != 0x20	39:6:570:586	8046462	0	True				
ANR	8046560	EqualityExpression	s -> f_code != 0x20		8046462	0		!=			
ANR	8046561	PtrMemberAccess	s -> f_code		8046462	0					
ANR	8046562	Identifier	s		8046462	0					
ANR	8046563	Identifier	f_code		8046462	1					
ANR	8046564	PrimaryExpression	0x20		8046462	1					
ANR	8046565	CompoundStatement		35:4:427:465	8046462	1					
ANR	8046566	IdentifierDeclStatement	uint32_t * src = ( uint32_t * ) ( buf + 4 ) ;	41:4:596:634	8046462	0	True				
ANR	8046567	IdentifierDecl	* src = ( uint32_t * ) ( buf + 4 )		8046462	0					
ANR	8046568	IdentifierDeclType	uint32_t *		8046462	0					
ANR	8046569	Identifier	src		8046462	1					
ANR	8046570	AssignmentExpression	* src = ( uint32_t * ) ( buf + 4 )		8046462	2		=			
ANR	8046571	Identifier	src		8046462	0					
ANR	8046572	CastExpression	( uint32_t * ) ( buf + 4 )		8046462	1					
ANR	8046573	CastTarget	uint32_t *		8046462	0					
ANR	8046574	AdditiveExpression	buf + 4		8046462	1		+			
ANR	8046575	Identifier	buf		8046462	0					
ANR	8046576	PrimaryExpression	4		8046462	1					
ANR	8046577	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		8046462	1					
ANR	8046578	ForInit	i = 0 ;	45:9:648:651	8046462	0	True				
ANR	8046579	AssignmentExpression	i = 0		8046462	0		=			
ANR	8046580	Identifier	i		8046462	0					
ANR	8046581	PrimaryExpression	0		8046462	1					
ANR	8046582	Condition	i < 4	45:14:653:657	8046462	1	True				
ANR	8046583	RelationalExpression	i < 4		8046462	0		<			
ANR	8046584	Identifier	i		8046462	0					
ANR	8046585	PrimaryExpression	4		8046462	1					
ANR	8046586	PostIncDecOperationExpression	i ++	45:21:660:662	8046462	2	True				
ANR	8046587	Identifier	i		8046462	0					
ANR	8046588	IncDec	++		8046462	1					
ANR	8046589	CompoundStatement		39:26:496:496	8046462	3					
ANR	8046590	ExpressionStatement	src [ i ] = ( ( src [ i ] << 16 ) | ( src [ i ] >> 16 ) ) ^ src [ 7 - i ]	47:6:674:729	8046462	0	True				
ANR	8046591	AssignmentExpression	src [ i ] = ( ( src [ i ] << 16 ) | ( src [ i ] >> 16 ) ) ^ src [ 7 - i ]		8046462	0		=			
ANR	8046592	ArrayIndexing	src [ i ]		8046462	0					
ANR	8046593	Identifier	src		8046462	0					
ANR	8046594	Identifier	i		8046462	1					
ANR	8046595	ExclusiveOrExpression	( ( src [ i ] << 16 ) | ( src [ i ] >> 16 ) ) ^ src [ 7 - i ]		8046462	1		^			
ANR	8046596	InclusiveOrExpression	( src [ i ] << 16 ) | ( src [ i ] >> 16 )		8046462	0		|			
ANR	8046597	ShiftExpression	src [ i ] << 16		8046462	0		<<			
ANR	8046598	ArrayIndexing	src [ i ]		8046462	0					
ANR	8046599	Identifier	src		8046462	0					
ANR	8046600	Identifier	i		8046462	1					
ANR	8046601	PrimaryExpression	16		8046462	1					
ANR	8046602	ShiftExpression	src [ i ] >> 16		8046462	1		>>			
ANR	8046603	ArrayIndexing	src [ i ]		8046462	0					
ANR	8046604	Identifier	src		8046462	0					
ANR	8046605	Identifier	i		8046462	1					
ANR	8046606	PrimaryExpression	16		8046462	1					
ANR	8046607	ArrayIndexing	src [ 7 - i ]		8046462	1					
ANR	8046608	Identifier	src		8046462	0					
ANR	8046609	AdditiveExpression	7 - i		8046462	1		-			
ANR	8046610	PrimaryExpression	7		8046462	0					
ANR	8046611	Identifier	i		8046462	1					
ANR	8046612	ExpressionStatement	"result = svq1_decode_frame_header ( & s -> gb , s )"	55:2:748:793	8046462	8	True				
ANR	8046613	AssignmentExpression	"result = svq1_decode_frame_header ( & s -> gb , s )"		8046462	0		=			
ANR	8046614	Identifier	result		8046462	0					
ANR	8046615	CallExpression	"svq1_decode_frame_header ( & s -> gb , s )"		8046462	1					
ANR	8046616	Callee	svq1_decode_frame_header		8046462	0					
ANR	8046617	Identifier	svq1_decode_frame_header		8046462	0					
ANR	8046618	ArgumentList	& s -> gb		8046462	1					
ANR	8046619	Argument	& s -> gb		8046462	0					
ANR	8046620	UnaryOperationExpression	& s -> gb		8046462	0					
ANR	8046621	UnaryOperator	&		8046462	0					
ANR	8046622	PtrMemberAccess	s -> gb		8046462	1					
ANR	8046623	Identifier	s		8046462	0					
ANR	8046624	Identifier	gb		8046462	1					
ANR	8046625	Argument	s		8046462	1					
ANR	8046626	Identifier	s		8046462	0					
ANR	8046627	IfStatement	if ( result != 0 )		8046462	9					
ANR	8046628	Condition	result != 0	59:6:804:814	8046462	0	True				
ANR	8046629	EqualityExpression	result != 0		8046462	0		!=			
ANR	8046630	Identifier	result		8046462	0					
ANR	8046631	PrimaryExpression	0		8046462	1					
ANR	8046632	CompoundStatement		55:2:651:651	8046462	1					
ANR	8046633	ExpressionStatement	"printf ( ""Error in svq1_decode_frame_header %i\\n"" , result )"	65:4:846:901	8046462	0	True				
ANR	8046634	CallExpression	"printf ( ""Error in svq1_decode_frame_header %i\\n"" , result )"		8046462	0					
ANR	8046635	Callee	printf		8046462	0					
ANR	8046636	Identifier	printf		8046462	0					
ANR	8046637	ArgumentList	"""Error in svq1_decode_frame_header %i\\n"""		8046462	1					
ANR	8046638	Argument	"""Error in svq1_decode_frame_header %i\\n"""		8046462	0					
ANR	8046639	PrimaryExpression	"""Error in svq1_decode_frame_header %i\\n"""		8046462	0					
ANR	8046640	Argument	result		8046462	1					
ANR	8046641	Identifier	result		8046462	0					
ANR	8046642	ReturnStatement	return result ;	69:4:916:929	8046462	1	True				
ANR	8046643	Identifier	result		8046462	0					
ANR	8046644	IfStatement	if ( s -> pict_type == B_TYPE && s -> last_picture . data [ 0 ] == NULL )		8046462	10					
ANR	8046645	Condition	s -> pict_type == B_TYPE && s -> last_picture . data [ 0 ] == NULL	79:5:1115:1167	8046462	0	True				
ANR	8046646	AndExpression	s -> pict_type == B_TYPE && s -> last_picture . data [ 0 ] == NULL		8046462	0		&&			
ANR	8046647	EqualityExpression	s -> pict_type == B_TYPE		8046462	0		==			
ANR	8046648	PtrMemberAccess	s -> pict_type		8046462	0					
ANR	8046649	Identifier	s		8046462	0					
ANR	8046650	Identifier	pict_type		8046462	1					
ANR	8046651	Identifier	B_TYPE		8046462	1					
ANR	8046652	EqualityExpression	s -> last_picture . data [ 0 ] == NULL		8046462	1		==			
ANR	8046653	ArrayIndexing	s -> last_picture . data [ 0 ]		8046462	0					
ANR	8046654	MemberAccess	s -> last_picture . data		8046462	0					
ANR	8046655	PtrMemberAccess	s -> last_picture		8046462	0					
ANR	8046656	Identifier	s		8046462	0					
ANR	8046657	Identifier	last_picture		8046462	1					
ANR	8046658	Identifier	data		8046462	1					
ANR	8046659	PrimaryExpression	0		8046462	1					
ANR	8046660	Identifier	NULL		8046462	1					
ANR	8046661	ReturnStatement	return buf_size ;	79:60:1170:1185	8046462	1	True				
ANR	8046662	Identifier	buf_size		8046462	0					
ANR	8046663	IfStatement	if ( avctx -> hurry_up && s -> pict_type == B_TYPE )		8046462	11					
ANR	8046664	Condition	avctx -> hurry_up && s -> pict_type == B_TYPE	83:5:1197:1235	8046462	0	True				
ANR	8046665	AndExpression	avctx -> hurry_up && s -> pict_type == B_TYPE		8046462	0		&&			
ANR	8046666	PtrMemberAccess	avctx -> hurry_up		8046462	0					
ANR	8046667	Identifier	avctx		8046462	0					
ANR	8046668	Identifier	hurry_up		8046462	1					
ANR	8046669	EqualityExpression	s -> pict_type == B_TYPE		8046462	1		==			
ANR	8046670	PtrMemberAccess	s -> pict_type		8046462	0					
ANR	8046671	Identifier	s		8046462	0					
ANR	8046672	Identifier	pict_type		8046462	1					
ANR	8046673	Identifier	B_TYPE		8046462	1					
ANR	8046674	ReturnStatement	return buf_size ;	83:46:1238:1253	8046462	1	True				
ANR	8046675	Identifier	buf_size		8046462	0					
ANR	8046676	IfStatement	"if ( MPV_frame_start ( s , avctx ) < 0 )"		8046462	12					
ANR	8046677	Condition	"MPV_frame_start ( s , avctx ) < 0"	87:5:1263:1291	8046462	0	True				
ANR	8046678	RelationalExpression	"MPV_frame_start ( s , avctx ) < 0"		8046462	0		<			
ANR	8046679	CallExpression	"MPV_frame_start ( s , avctx )"		8046462	0					
ANR	8046680	Callee	MPV_frame_start		8046462	0					
ANR	8046681	Identifier	MPV_frame_start		8046462	0					
ANR	8046682	ArgumentList	s		8046462	1					
ANR	8046683	Argument	s		8046462	0					
ANR	8046684	Identifier	s		8046462	0					
ANR	8046685	Argument	avctx		8046462	1					
ANR	8046686	Identifier	avctx		8046462	0					
ANR	8046687	PrimaryExpression	0		8046462	1					
ANR	8046688	ReturnStatement	return - 1 ;	89:6:1301:1310	8046462	1	True				
ANR	8046689	UnaryOperationExpression	- 1		8046462	0					
ANR	8046690	UnaryOperator	-		8046462	0					
ANR	8046691	PrimaryExpression	1		8046462	1					
ANR	8046692	ForStatement	for ( i = 0 ; i < 3 ; i ++ )		8046462	13					
ANR	8046693	ForInit	i = 0 ;	95:7:1360:1363	8046462	0	True				
ANR	8046694	AssignmentExpression	i = 0		8046462	0		=			
ANR	8046695	Identifier	i		8046462	0					
ANR	8046696	PrimaryExpression	0		8046462	1					
ANR	8046697	Condition	i < 3	95:12:1365:1369	8046462	1	True				
ANR	8046698	RelationalExpression	i < 3		8046462	0		<			
ANR	8046699	Identifier	i		8046462	0					
ANR	8046700	PrimaryExpression	3		8046462	1					
ANR	8046701	PostIncDecOperationExpression	i ++	95:19:1372:1374	8046462	2	True				
ANR	8046702	Identifier	i		8046462	0					
ANR	8046703	IncDec	++		8046462	1					
ANR	8046704	CompoundStatement		91:4:1215:1227	8046462	3					
ANR	8046705	IdentifierDeclStatement	int linesize ;	97:4:1384:1396	8046462	0	True				
ANR	8046706	IdentifierDecl	linesize		8046462	0					
ANR	8046707	IdentifierDeclType	int		8046462	0					
ANR	8046708	Identifier	linesize		8046462	1					
ANR	8046709	IfStatement	if ( i == 0 )		8046462	1					
ANR	8046710	Condition	i == 0	99:8:1407:1412	8046462	0	True				
ANR	8046711	EqualityExpression	i == 0		8046462	0		==			
ANR	8046712	Identifier	i		8046462	0					
ANR	8046713	PrimaryExpression	0		8046462	1					
ANR	8046714	CompoundStatement		93:16:1246:1246	8046462	1					
ANR	8046715	ExpressionStatement	width = ( s -> width + 15 ) & ~15	101:6:1424:1450	8046462	0	True				
ANR	8046716	AssignmentExpression	width = ( s -> width + 15 ) & ~15		8046462	0		=			
ANR	8046717	Identifier	width		8046462	0					
ANR	8046718	BitAndExpression	( s -> width + 15 ) & ~15		8046462	1		&			
ANR	8046719	AdditiveExpression	s -> width + 15		8046462	0		+			
ANR	8046720	PtrMemberAccess	s -> width		8046462	0					
ANR	8046721	Identifier	s		8046462	0					
ANR	8046722	Identifier	width		8046462	1					
ANR	8046723	PrimaryExpression	15		8046462	1					
ANR	8046724	Identifier	~15		8046462	1					
ANR	8046725	ExpressionStatement	height = ( s -> height + 15 ) & ~15	103:6:1459:1486	8046462	1	True				
ANR	8046726	AssignmentExpression	height = ( s -> height + 15 ) & ~15		8046462	0		=			
ANR	8046727	Identifier	height		8046462	0					
ANR	8046728	BitAndExpression	( s -> height + 15 ) & ~15		8046462	1		&			
ANR	8046729	AdditiveExpression	s -> height + 15		8046462	0		+			
ANR	8046730	PtrMemberAccess	s -> height		8046462	0					
ANR	8046731	Identifier	s		8046462	0					
ANR	8046732	Identifier	height		8046462	1					
ANR	8046733	PrimaryExpression	15		8046462	1					
ANR	8046734	Identifier	~15		8046462	1					
ANR	8046735	ExpressionStatement	linesize = s -> linesize	105:6:1495:1516	8046462	2	True				
ANR	8046736	AssignmentExpression	linesize = s -> linesize		8046462	0		=			
ANR	8046737	Identifier	linesize		8046462	0					
ANR	8046738	PtrMemberAccess	s -> linesize		8046462	1					
ANR	8046739	Identifier	s		8046462	0					
ANR	8046740	Identifier	linesize		8046462	1					
ANR	8046741	ElseStatement	else		8046462	0					
ANR	8046742	CompoundStatement		101:11:1361:1361	8046462	0					
ANR	8046743	IfStatement	if ( s -> flags & CODEC_FLAG_GRAY )		8046462	0					
ANR	8046744	Condition	s -> flags & CODEC_FLAG_GRAY	109:9:1542:1565	8046462	0	True				
ANR	8046745	BitAndExpression	s -> flags & CODEC_FLAG_GRAY		8046462	0		&			
ANR	8046746	PtrMemberAccess	s -> flags		8046462	0					
ANR	8046747	Identifier	s		8046462	0					
ANR	8046748	Identifier	flags		8046462	1					
ANR	8046749	Identifier	CODEC_FLAG_GRAY		8046462	1					
ANR	8046750	BreakStatement	break ;	109:35:1568:1573	8046462	1	True				
ANR	8046751	ExpressionStatement	width = ( s -> width / 4 + 15 ) & ~15	111:6:1582:1610	8046462	1	True				
ANR	8046752	AssignmentExpression	width = ( s -> width / 4 + 15 ) & ~15		8046462	0		=			
ANR	8046753	Identifier	width		8046462	0					
ANR	8046754	BitAndExpression	( s -> width / 4 + 15 ) & ~15		8046462	1		&			
ANR	8046755	AdditiveExpression	s -> width / 4 + 15		8046462	0		+			
ANR	8046756	MultiplicativeExpression	s -> width / 4		8046462	0		/			
ANR	8046757	PtrMemberAccess	s -> width		8046462	0					
ANR	8046758	Identifier	s		8046462	0					
ANR	8046759	Identifier	width		8046462	1					
ANR	8046760	PrimaryExpression	4		8046462	1					
ANR	8046761	PrimaryExpression	15		8046462	1					
ANR	8046762	Identifier	~15		8046462	1					
ANR	8046763	ExpressionStatement	height = ( s -> height / 4 + 15 ) & ~15	113:6:1619:1648	8046462	2	True				
ANR	8046764	AssignmentExpression	height = ( s -> height / 4 + 15 ) & ~15		8046462	0		=			
ANR	8046765	Identifier	height		8046462	0					
ANR	8046766	BitAndExpression	( s -> height / 4 + 15 ) & ~15		8046462	1		&			
ANR	8046767	AdditiveExpression	s -> height / 4 + 15		8046462	0		+			
ANR	8046768	MultiplicativeExpression	s -> height / 4		8046462	0		/			
ANR	8046769	PtrMemberAccess	s -> height		8046462	0					
ANR	8046770	Identifier	s		8046462	0					
ANR	8046771	Identifier	height		8046462	1					
ANR	8046772	PrimaryExpression	4		8046462	1					
ANR	8046773	PrimaryExpression	15		8046462	1					
ANR	8046774	Identifier	~15		8046462	1					
ANR	8046775	ExpressionStatement	linesize = s -> uvlinesize	115:6:1657:1680	8046462	3	True				
ANR	8046776	AssignmentExpression	linesize = s -> uvlinesize		8046462	0		=			
ANR	8046777	Identifier	linesize		8046462	0					
ANR	8046778	PtrMemberAccess	s -> uvlinesize		8046462	1					
ANR	8046779	Identifier	s		8046462	0					
ANR	8046780	Identifier	uvlinesize		8046462	1					
ANR	8046781	ExpressionStatement	current = s -> current_picture . data [ i ]	121:4:1696:1733	8046462	2	True				
ANR	8046782	AssignmentExpression	current = s -> current_picture . data [ i ]		8046462	0		=			
ANR	8046783	Identifier	current		8046462	0					
ANR	8046784	ArrayIndexing	s -> current_picture . data [ i ]		8046462	1					
ANR	8046785	MemberAccess	s -> current_picture . data		8046462	0					
ANR	8046786	PtrMemberAccess	s -> current_picture		8046462	0					
ANR	8046787	Identifier	s		8046462	0					
ANR	8046788	Identifier	current_picture		8046462	1					
ANR	8046789	Identifier	data		8046462	1					
ANR	8046790	Identifier	i		8046462	1					
ANR	8046791	IfStatement	if ( s -> pict_type == B_TYPE )		8046462	3					
ANR	8046792	Condition	s -> pict_type == B_TYPE	125:7:1745:1764	8046462	0	True				
ANR	8046793	EqualityExpression	s -> pict_type == B_TYPE		8046462	0		==			
ANR	8046794	PtrMemberAccess	s -> pict_type		8046462	0					
ANR	8046795	Identifier	s		8046462	0					
ANR	8046796	Identifier	pict_type		8046462	1					
ANR	8046797	Identifier	B_TYPE		8046462	1					
ANR	8046798	CompoundStatement		119:28:1597:1597	8046462	1					
ANR	8046799	ExpressionStatement	previous = s -> next_picture . data [ i ]	127:8:1777:1811	8046462	0	True				
ANR	8046800	AssignmentExpression	previous = s -> next_picture . data [ i ]		8046462	0		=			
ANR	8046801	Identifier	previous		8046462	0					
ANR	8046802	ArrayIndexing	s -> next_picture . data [ i ]		8046462	1					
ANR	8046803	MemberAccess	s -> next_picture . data		8046462	0					
ANR	8046804	PtrMemberAccess	s -> next_picture		8046462	0					
ANR	8046805	Identifier	s		8046462	0					
ANR	8046806	Identifier	next_picture		8046462	1					
ANR	8046807	Identifier	data		8046462	1					
ANR	8046808	Identifier	i		8046462	1					
ANR	8046809	ElseStatement	else		8046462	0					
ANR	8046810	CompoundStatement		123:9:1654:1654	8046462	0					
ANR	8046811	ExpressionStatement	previous = s -> last_picture . data [ i ]	131:8:1834:1868	8046462	0	True				
ANR	8046812	AssignmentExpression	previous = s -> last_picture . data [ i ]		8046462	0		=			
ANR	8046813	Identifier	previous		8046462	0					
ANR	8046814	ArrayIndexing	s -> last_picture . data [ i ]		8046462	1					
ANR	8046815	MemberAccess	s -> last_picture . data		8046462	0					
ANR	8046816	PtrMemberAccess	s -> last_picture		8046462	0					
ANR	8046817	Identifier	s		8046462	0					
ANR	8046818	Identifier	last_picture		8046462	1					
ANR	8046819	Identifier	data		8046462	1					
ANR	8046820	Identifier	i		8046462	1					
ANR	8046821	IfStatement	if ( s -> pict_type == I_TYPE )		8046462	4					
ANR	8046822	Condition	s -> pict_type == I_TYPE	137:8:1888:1909	8046462	0	True				
ANR	8046823	EqualityExpression	s -> pict_type == I_TYPE		8046462	0		==			
ANR	8046824	PtrMemberAccess	s -> pict_type		8046462	0					
ANR	8046825	Identifier	s		8046462	0					
ANR	8046826	Identifier	pict_type		8046462	1					
ANR	8046827	Identifier	I_TYPE		8046462	1					
ANR	8046828	CompoundStatement		131:32:1743:1743	8046462	1					
ANR	8046829	ForStatement	for ( y = 0 ; y < height ; y += 16 )		8046462	0					
ANR	8046830	ForInit	y = 0 ;	141:11:1948:1951	8046462	0	True				
ANR	8046831	AssignmentExpression	y = 0		8046462	0		=			
ANR	8046832	Identifier	y		8046462	0					
ANR	8046833	PrimaryExpression	0		8046462	1					
ANR	8046834	Condition	y < height	141:16:1953:1962	8046462	1	True				
ANR	8046835	RelationalExpression	y < height		8046462	0		<			
ANR	8046836	Identifier	y		8046462	0					
ANR	8046837	Identifier	height		8046462	1					
ANR	8046838	AssignmentExpression	y += 16	141:28:1965:1969	8046462	2	True	+=			
ANR	8046839	Identifier	y		8046462	0					
ANR	8046840	PrimaryExpression	16		8046462	1					
ANR	8046841	CompoundStatement		135:35:1803:1803	8046462	3					
ANR	8046842	ForStatement	for ( x = 0 ; x < width ; x += 16 )		8046462	0					
ANR	8046843	ForInit	x = 0 ;	143:6:1981:1984	8046462	0	True				
ANR	8046844	AssignmentExpression	x = 0		8046462	0		=			
ANR	8046845	Identifier	x		8046462	0					
ANR	8046846	PrimaryExpression	0		8046462	1					
ANR	8046847	Condition	x < width	143:11:1986:1994	8046462	1	True				
ANR	8046848	RelationalExpression	x < width		8046462	0		<			
ANR	8046849	Identifier	x		8046462	0					
ANR	8046850	Identifier	width		8046462	1					
ANR	8046851	AssignmentExpression	x += 16	143:22:1997:2001	8046462	2	True	+=			
ANR	8046852	Identifier	x		8046462	0					
ANR	8046853	PrimaryExpression	16		8046462	1					
ANR	8046854	CompoundStatement		137:29:1835:1835	8046462	3					
ANR	8046855	ExpressionStatement	"result = svq1_decode_block_intra ( & s -> gb , & current [ x ] , linesize )"	145:3:2010:2074	8046462	0	True				
ANR	8046856	AssignmentExpression	"result = svq1_decode_block_intra ( & s -> gb , & current [ x ] , linesize )"		8046462	0		=			
ANR	8046857	Identifier	result		8046462	0					
ANR	8046858	CallExpression	"svq1_decode_block_intra ( & s -> gb , & current [ x ] , linesize )"		8046462	1					
ANR	8046859	Callee	svq1_decode_block_intra		8046462	0					
ANR	8046860	Identifier	svq1_decode_block_intra		8046462	0					
ANR	8046861	ArgumentList	& s -> gb		8046462	1					
ANR	8046862	Argument	& s -> gb		8046462	0					
ANR	8046863	UnaryOperationExpression	& s -> gb		8046462	0					
ANR	8046864	UnaryOperator	&		8046462	0					
ANR	8046865	PtrMemberAccess	s -> gb		8046462	1					
ANR	8046866	Identifier	s		8046462	0					
ANR	8046867	Identifier	gb		8046462	1					
ANR	8046868	Argument	& current [ x ]		8046462	1					
ANR	8046869	UnaryOperationExpression	& current [ x ]		8046462	0					
ANR	8046870	UnaryOperator	&		8046462	0					
ANR	8046871	ArrayIndexing	current [ x ]		8046462	1					
ANR	8046872	Identifier	current		8046462	0					
ANR	8046873	Identifier	x		8046462	1					
ANR	8046874	Argument	linesize		8046462	2					
ANR	8046875	Identifier	linesize		8046462	0					
ANR	8046876	IfStatement	if ( result != 0 )		8046462	1					
ANR	8046877	Condition	result != 0	147:7:2084:2094	8046462	0	True				
ANR	8046878	EqualityExpression	result != 0		8046462	0		!=			
ANR	8046879	Identifier	result		8046462	0					
ANR	8046880	PrimaryExpression	0		8046462	1					
ANR	8046881	CompoundStatement		143:3:1932:1932	8046462	1					
ANR	8046882	ExpressionStatement	"printf ( ""Error in svq1_decode_block %i (keyframe)\\n"" , result )"	153:5:2128:2187	8046462	0	True				
ANR	8046883	CallExpression	"printf ( ""Error in svq1_decode_block %i (keyframe)\\n"" , result )"		8046462	0					
ANR	8046884	Callee	printf		8046462	0					
ANR	8046885	Identifier	printf		8046462	0					
ANR	8046886	ArgumentList	"""Error in svq1_decode_block %i (keyframe)\\n"""		8046462	1					
ANR	8046887	Argument	"""Error in svq1_decode_block %i (keyframe)\\n"""		8046462	0					
ANR	8046888	PrimaryExpression	"""Error in svq1_decode_block %i (keyframe)\\n"""		8046462	0					
ANR	8046889	Argument	result		8046462	1					
ANR	8046890	Identifier	result		8046462	0					
ANR	8046891	ReturnStatement	return result ;	157:5:2203:2216	8046462	1	True				
ANR	8046892	Identifier	result		8046462	0					
ANR	8046893	ExpressionStatement	current += 16 * linesize	163:1:2230:2252	8046462	1	True				
ANR	8046894	AssignmentExpression	current += 16 * linesize		8046462	0		+=			
ANR	8046895	Identifier	current		8046462	0					
ANR	8046896	MultiplicativeExpression	16 * linesize		8046462	1		*			
ANR	8046897	PrimaryExpression	16		8046462	0					
ANR	8046898	Identifier	linesize		8046462	1					
ANR	8046899	ElseStatement	else		8046462	0					
ANR	8046900	CompoundStatement		163:6:2115:2140	8046462	0					
ANR	8046901	IdentifierDeclStatement	svq1_pmv_t pmv [ width / 8 + 3 ] ;	169:6:2284:2309	8046462	0	True				
ANR	8046902	IdentifierDecl	pmv [ width / 8 + 3 ]		8046462	0					
ANR	8046903	IdentifierDeclType	svq1_pmv_t [ width / 8 + 3 ]		8046462	0					
ANR	8046904	Identifier	pmv		8046462	1					
ANR	8046905	AdditiveExpression	width / 8 + 3		8046462	2		+			
ANR	8046906	MultiplicativeExpression	width / 8		8046462	0		/			
ANR	8046907	Identifier	width		8046462	0					
ANR	8046908	PrimaryExpression	8		8046462	1					
ANR	8046909	PrimaryExpression	3		8046462	1					
ANR	8046910	ExpressionStatement	"memset ( pmv , 0 , ( ( width / 8 ) + 3 ) * sizeof ( svq1_pmv_t ) )"	173:6:2343:2398	8046462	1	True				
ANR	8046911	CallExpression	"memset ( pmv , 0 , ( ( width / 8 ) + 3 ) * sizeof ( svq1_pmv_t ) )"		8046462	0					
ANR	8046912	Callee	memset		8046462	0					
ANR	8046913	Identifier	memset		8046462	0					
ANR	8046914	ArgumentList	pmv		8046462	1					
ANR	8046915	Argument	pmv		8046462	0					
ANR	8046916	Identifier	pmv		8046462	0					
ANR	8046917	Argument	0		8046462	1					
ANR	8046918	PrimaryExpression	0		8046462	0					
ANR	8046919	Argument	( ( width / 8 ) + 3 ) * sizeof ( svq1_pmv_t )		8046462	2					
ANR	8046920	MultiplicativeExpression	( ( width / 8 ) + 3 ) * sizeof ( svq1_pmv_t )		8046462	0		*			
ANR	8046921	AdditiveExpression	( width / 8 ) + 3		8046462	0		+			
ANR	8046922	MultiplicativeExpression	width / 8		8046462	0		/			
ANR	8046923	Identifier	width		8046462	0					
ANR	8046924	PrimaryExpression	8		8046462	1					
ANR	8046925	PrimaryExpression	3		8046462	1					
ANR	8046926	SizeofExpression	sizeof ( svq1_pmv_t )		8046462	1					
ANR	8046927	Sizeof	sizeof		8046462	0					
ANR	8046928	SizeofOperand	svq1_pmv_t		8046462	1					
ANR	8046929	ForStatement	for ( y = 0 ; y < height ; y += 16 )		8046462	2					
ANR	8046930	ForInit	y = 0 ;	177:11:2414:2417	8046462	0	True				
ANR	8046931	AssignmentExpression	y = 0		8046462	0		=			
ANR	8046932	Identifier	y		8046462	0					
ANR	8046933	PrimaryExpression	0		8046462	1					
ANR	8046934	Condition	y < height	177:16:2419:2428	8046462	1	True				
ANR	8046935	RelationalExpression	y < height		8046462	0		<			
ANR	8046936	Identifier	y		8046462	0					
ANR	8046937	Identifier	height		8046462	1					
ANR	8046938	AssignmentExpression	y += 16	177:28:2431:2435	8046462	2	True	+=			
ANR	8046939	Identifier	y		8046462	0					
ANR	8046940	PrimaryExpression	16		8046462	1					
ANR	8046941	CompoundStatement		171:35:2269:2269	8046462	3					
ANR	8046942	ForStatement	for ( x = 0 ; x < width ; x += 16 )		8046462	0					
ANR	8046943	ForInit	x = 0 ;	179:6:2447:2450	8046462	0	True				
ANR	8046944	AssignmentExpression	x = 0		8046462	0		=			
ANR	8046945	Identifier	x		8046462	0					
ANR	8046946	PrimaryExpression	0		8046462	1					
ANR	8046947	Condition	x < width	179:11:2452:2460	8046462	1	True				
ANR	8046948	RelationalExpression	x < width		8046462	0		<			
ANR	8046949	Identifier	x		8046462	0					
ANR	8046950	Identifier	width		8046462	1					
ANR	8046951	AssignmentExpression	x += 16	179:22:2463:2467	8046462	2	True	+=			
ANR	8046952	Identifier	x		8046462	0					
ANR	8046953	PrimaryExpression	16		8046462	1					
ANR	8046954	CompoundStatement		173:29:2301:2301	8046462	3					
ANR	8046955	ExpressionStatement	"result = svq1_decode_delta_block ( s , & s -> gb , & current [ x ] , previous , linesize , pmv , x , y )"	181:3:2476:2574	8046462	0	True				
ANR	8046956	AssignmentExpression	"result = svq1_decode_delta_block ( s , & s -> gb , & current [ x ] , previous , linesize , pmv , x , y )"		8046462	0		=			
ANR	8046957	Identifier	result		8046462	0					
ANR	8046958	CallExpression	"svq1_decode_delta_block ( s , & s -> gb , & current [ x ] , previous , linesize , pmv , x , y )"		8046462	1					
ANR	8046959	Callee	svq1_decode_delta_block		8046462	0					
ANR	8046960	Identifier	svq1_decode_delta_block		8046462	0					
ANR	8046961	ArgumentList	s		8046462	1					
ANR	8046962	Argument	s		8046462	0					
ANR	8046963	Identifier	s		8046462	0					
ANR	8046964	Argument	& s -> gb		8046462	1					
ANR	8046965	UnaryOperationExpression	& s -> gb		8046462	0					
ANR	8046966	UnaryOperator	&		8046462	0					
ANR	8046967	PtrMemberAccess	s -> gb		8046462	1					
ANR	8046968	Identifier	s		8046462	0					
ANR	8046969	Identifier	gb		8046462	1					
ANR	8046970	Argument	& current [ x ]		8046462	2					
ANR	8046971	UnaryOperationExpression	& current [ x ]		8046462	0					
ANR	8046972	UnaryOperator	&		8046462	0					
ANR	8046973	ArrayIndexing	current [ x ]		8046462	1					
ANR	8046974	Identifier	current		8046462	0					
ANR	8046975	Identifier	x		8046462	1					
ANR	8046976	Argument	previous		8046462	3					
ANR	8046977	Identifier	previous		8046462	0					
ANR	8046978	Argument	linesize		8046462	4					
ANR	8046979	Identifier	linesize		8046462	0					
ANR	8046980	Argument	pmv		8046462	5					
ANR	8046981	Identifier	pmv		8046462	0					
ANR	8046982	Argument	x		8046462	6					
ANR	8046983	Identifier	x		8046462	0					
ANR	8046984	Argument	y		8046462	7					
ANR	8046985	Identifier	y		8046462	0					
ANR	8046986	IfStatement	if ( result != 0 )		8046462	1					
ANR	8046987	Condition	result != 0	185:7:2584:2594	8046462	0	True				
ANR	8046988	EqualityExpression	result != 0		8046462	0		!=			
ANR	8046989	Identifier	result		8046462	0					
ANR	8046990	PrimaryExpression	0		8046462	1					
ANR	8046991	CompoundStatement		181:3:2432:2432	8046462	1					
ANR	8046992	ExpressionStatement	"printf ( ""Error in svq1_decode_delta_block %i\\n"" , result )"	191:4:2627:2681	8046462	0	True				
ANR	8046993	CallExpression	"printf ( ""Error in svq1_decode_delta_block %i\\n"" , result )"		8046462	0					
ANR	8046994	Callee	printf		8046462	0					
ANR	8046995	Identifier	printf		8046462	0					
ANR	8046996	ArgumentList	"""Error in svq1_decode_delta_block %i\\n"""		8046462	1					
ANR	8046997	Argument	"""Error in svq1_decode_delta_block %i\\n"""		8046462	0					
ANR	8046998	PrimaryExpression	"""Error in svq1_decode_delta_block %i\\n"""		8046462	0					
ANR	8046999	Argument	result		8046462	1					
ANR	8047000	Identifier	result		8046462	0					
ANR	8047001	ReturnStatement	return result ;	195:5:2697:2710	8046462	1	True				
ANR	8047002	Identifier	result		8046462	0					
ANR	8047003	ExpressionStatement	pmv [ 0 ] . x = pmv [ 0 ] . y = 0	203:1:2726:2751	8046462	1	True				
ANR	8047004	AssignmentExpression	pmv [ 0 ] . x = pmv [ 0 ] . y = 0		8046462	0		=			
ANR	8047005	MemberAccess	pmv [ 0 ] . x		8046462	0					
ANR	8047006	ArrayIndexing	pmv [ 0 ]		8046462	0					
ANR	8047007	Identifier	pmv		8046462	0					
ANR	8047008	PrimaryExpression	0		8046462	1					
ANR	8047009	Identifier	x		8046462	1					
ANR	8047010	AssignmentExpression	pmv [ 0 ] . y = 0		8046462	1		=			
ANR	8047011	MemberAccess	pmv [ 0 ] . y		8046462	0					
ANR	8047012	ArrayIndexing	pmv [ 0 ]		8046462	0					
ANR	8047013	Identifier	pmv		8046462	0					
ANR	8047014	PrimaryExpression	0		8046462	1					
ANR	8047015	Identifier	y		8046462	1					
ANR	8047016	PrimaryExpression	0		8046462	1					
ANR	8047017	ExpressionStatement	current += 16 * linesize	209:1:2757:2779	8046462	2	True				
ANR	8047018	AssignmentExpression	current += 16 * linesize		8046462	0		+=			
ANR	8047019	Identifier	current		8046462	0					
ANR	8047020	MultiplicativeExpression	16 * linesize		8046462	1		*			
ANR	8047021	PrimaryExpression	16		8046462	0					
ANR	8047022	Identifier	linesize		8046462	1					
ANR	8047023	ExpressionStatement	* pict = * ( AVFrame * ) & s -> current_picture	219:2:2809:2847	8046462	14	True				
ANR	8047024	AssignmentExpression	* pict = * ( AVFrame * ) & s -> current_picture		8046462	0		=			
ANR	8047025	UnaryOperationExpression	* pict		8046462	0					
ANR	8047026	UnaryOperator	*		8046462	0					
ANR	8047027	Identifier	pict		8046462	1					
ANR	8047028	UnaryOperationExpression	* ( AVFrame * ) & s -> current_picture		8046462	1					
ANR	8047029	UnaryOperator	*		8046462	0					
ANR	8047030	CastExpression	( AVFrame * ) & s -> current_picture		8046462	1					
ANR	8047031	CastTarget	AVFrame *		8046462	0					
ANR	8047032	UnaryOperationExpression	& s -> current_picture		8046462	1					
ANR	8047033	UnaryOperator	&		8046462	0					
ANR	8047034	PtrMemberAccess	s -> current_picture		8046462	1					
ANR	8047035	Identifier	s		8046462	0					
ANR	8047036	Identifier	current_picture		8046462	1					
ANR	8047037	ExpressionStatement	MPV_frame_end ( s )	225:2:2856:2872	8046462	15	True				
ANR	8047038	CallExpression	MPV_frame_end ( s )		8046462	0					
ANR	8047039	Callee	MPV_frame_end		8046462	0					
ANR	8047040	Identifier	MPV_frame_end		8046462	0					
ANR	8047041	ArgumentList	s		8046462	1					
ANR	8047042	Argument	s		8046462	0					
ANR	8047043	Identifier	s		8046462	0					
ANR	8047044	ExpressionStatement	* data_size = sizeof ( AVFrame )	229:2:2881:2907	8046462	16	True				
ANR	8047045	AssignmentExpression	* data_size = sizeof ( AVFrame )		8046462	0		=			
ANR	8047046	UnaryOperationExpression	* data_size		8046462	0					
ANR	8047047	UnaryOperator	*		8046462	0					
ANR	8047048	Identifier	data_size		8046462	1					
ANR	8047049	SizeofExpression	sizeof ( AVFrame )		8046462	1					
ANR	8047050	Sizeof	sizeof		8046462	0					
ANR	8047051	SizeofOperand	AVFrame		8046462	1					
ANR	8047052	ReturnStatement	return buf_size ;	231:2:2912:2927	8046462	17	True				
ANR	8047053	Identifier	buf_size		8046462	0					
ANR	8047054	ReturnType	static int		8046462	1					
ANR	8047055	Identifier	svq1_decode_frame		8046462	2					
ANR	8047056	ParameterList	"AVCodecContext * avctx , void * data , int * data_size , UINT8 * buf , int buf_size"		8046462	3					
ANR	8047057	Parameter	AVCodecContext * avctx	1:29:29:49	8046462	0	True				
ANR	8047058	ParameterType	AVCodecContext *		8046462	0					
ANR	8047059	Identifier	avctx		8046462	1					
ANR	8047060	Parameter	void * data	3:29:83:92	8046462	1	True				
ANR	8047061	ParameterType	void *		8046462	0					
ANR	8047062	Identifier	data		8046462	1					
ANR	8047063	Parameter	int * data_size	3:41:95:108	8046462	2	True				
ANR	8047064	ParameterType	int *		8046462	0					
ANR	8047065	Identifier	data_size		8046462	1					
ANR	8047066	Parameter	UINT8 * buf	5:29:141:150	8046462	3	True				
ANR	8047067	ParameterType	UINT8 *		8046462	0					
ANR	8047068	Identifier	buf		8046462	1					
ANR	8047069	Parameter	int buf_size	5:41:153:164	8046462	4	True				
ANR	8047070	ParameterType	int		8046462	0					
ANR	8047071	Identifier	buf_size		8046462	1					
ANR	8047072	CFGEntryNode	ENTRY		8046462		True				
ANR	8047073	CFGExitNode	EXIT		8046462		True				
ANR	8047074	Symbol	data		8046462						
ANR	8047075	Symbol	I_TYPE		8046462						
ANR	8047076	Symbol	get_bits		8046462						
ANR	8047077	Symbol	* s -> current_picture . data		8046462						
ANR	8047078	Symbol	s -> uvlinesize		8046462						
ANR	8047079	Symbol	* data_size		8046462						
ANR	8047080	Symbol	s -> pict_type		8046462						
ANR	8047081	Symbol	s -> current_picture		8046462						
ANR	8047082	Symbol	* src		8046462						
ANR	8047083	Symbol	linesize		8046462						
ANR	8047084	Symbol	* s -> last_picture . data		8046462						
ANR	8047085	Symbol	B_TYPE		8046462						
ANR	8047086	Symbol	~0x70		8046462						
ANR	8047087	Symbol	s -> width		8046462						
ANR	8047088	Symbol	pmv		8046462						
ANR	8047089	Symbol	svq1_decode_block_intra		8046462						
ANR	8047090	Symbol	* s -> next_picture		8046462						
ANR	8047091	Symbol	pict		8046462						
ANR	8047092	Symbol	height		8046462						
ANR	8047093	Symbol	data_size		8046462						
ANR	8047094	Symbol	s -> next_picture . data		8046462						
ANR	8047095	Symbol	NULL		8046462						
ANR	8047096	Symbol	~15		8046462						
ANR	8047097	Symbol	buf_size		8046462						
ANR	8047098	Symbol	s -> flags		8046462						
ANR	8047099	Symbol	svq1_decode_delta_block		8046462						
ANR	8047100	Symbol	& s -> gb		8046462						
ANR	8047101	Symbol	s -> f_code		8046462						
ANR	8047102	Symbol	* avctx		8046462						
ANR	8047103	Symbol	pmv [ 0 ] . y		8046462						
ANR	8047104	Symbol	avctx -> hurry_up		8046462						
ANR	8047105	Symbol	MPV_frame_start		8046462						
ANR	8047106	Symbol	s -> last_picture . data		8046462						
ANR	8047107	Symbol	pmv [ 0 ] . x		8046462						
ANR	8047108	Symbol	* pict		8046462						
ANR	8047109	Symbol	* pmv		8046462						
ANR	8047110	Symbol	& s -> current_picture		8046462						
ANR	8047111	Symbol	s -> next_picture		8046462						
ANR	8047112	Symbol	result		8046462						
ANR	8047113	Symbol	current		8046462						
ANR	8047114	Symbol	s -> linesize		8046462						
ANR	8047115	Symbol	* * s		8046462						
ANR	8047116	Symbol	s -> last_picture		8046462						
ANR	8047117	Symbol	* ( AVFrame * ) & s -> current_picture		8046462						
ANR	8047118	Symbol	avctx		8046462						
ANR	8047119	Symbol	* s -> last_picture		8046462						
ANR	8047120	Symbol	s -> current_picture . data		8046462						
ANR	8047121	Symbol	previous		8046462						
ANR	8047122	Symbol	src		8046462						
ANR	8047123	Symbol	* s -> next_picture . data		8046462						
ANR	8047124	Symbol	* s -> current_picture		8046462						
ANR	8047125	Symbol	i		8046462						
ANR	8047126	Symbol	avctx -> priv_data		8046462						
ANR	8047127	Symbol	buf		8046462						
ANR	8047128	Symbol	s		8046462						
ANR	8047129	Symbol	* i		8046462						
ANR	8047130	Symbol	s -> height		8046462						
ANR	8047131	Symbol	svq1_decode_frame_header		8046462						
ANR	8047132	Symbol	width		8046462						
ANR	8047133	Symbol	x		8046462						
ANR	8047134	Symbol	y		8046462						
ANR	8047135	Symbol	* s		8046462						
ANR	8047136	Symbol	CODEC_FLAG_GRAY		8046462						
