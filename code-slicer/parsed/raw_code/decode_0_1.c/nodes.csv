command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1681072	File	/home/p4ultr4n/workplace/ReVeal/raw_code/decode_0_1.c								
ANR	1681073	Function	decode_0	1:0:0:3489							
ANR	1681074	FunctionDef	"decode_0 (PAFVideoDecContext * c , uint8_t * pkt , uint8_t code)"		1681073	0					
ANR	1681075	CompoundStatement		3:0:72:3489	1681073	0					
ANR	1681076	IdentifierDeclStatement	"uint32_t opcode_size , offset ;"	5:4:79:107	1681073	0	True				
ANR	1681077	IdentifierDecl	opcode_size		1681073	0					
ANR	1681078	IdentifierDeclType	uint32_t		1681073	0					
ANR	1681079	Identifier	opcode_size		1681073	1					
ANR	1681080	IdentifierDecl	offset		1681073	1					
ANR	1681081	IdentifierDeclType	uint32_t		1681073	0					
ANR	1681082	Identifier	offset		1681073	1					
ANR	1681083	IdentifierDeclStatement	"uint8_t * dst , * dend , mask = 0 , color = 0 ;"	7:4:114:154	1681073	1	True				
ANR	1681084	IdentifierDecl	* dst		1681073	0					
ANR	1681085	IdentifierDeclType	uint8_t *		1681073	0					
ANR	1681086	Identifier	dst		1681073	1					
ANR	1681087	IdentifierDecl	* dend		1681073	1					
ANR	1681088	IdentifierDeclType	uint8_t *		1681073	0					
ANR	1681089	Identifier	dend		1681073	1					
ANR	1681090	IdentifierDecl	mask = 0		1681073	2					
ANR	1681091	IdentifierDeclType	uint8_t		1681073	0					
ANR	1681092	Identifier	mask		1681073	1					
ANR	1681093	AssignmentExpression	mask = 0		1681073	2		=			
ANR	1681094	Identifier	mask		1681073	0					
ANR	1681095	PrimaryExpression	0		1681073	1					
ANR	1681096	IdentifierDecl	color = 0		1681073	3					
ANR	1681097	IdentifierDeclType	uint8_t		1681073	0					
ANR	1681098	Identifier	color		1681073	1					
ANR	1681099	AssignmentExpression	color = 0		1681073	2		=			
ANR	1681100	Identifier	color		1681073	0					
ANR	1681101	PrimaryExpression	0		1681073	1					
ANR	1681102	IdentifierDeclStatement	"const uint8_t * src , * send , * opcodes ;"	9:4:161:196	1681073	2	True				
ANR	1681103	IdentifierDecl	* src		1681073	0					
ANR	1681104	IdentifierDeclType	const uint8_t *		1681073	0					
ANR	1681105	Identifier	src		1681073	1					
ANR	1681106	IdentifierDecl	* send		1681073	1					
ANR	1681107	IdentifierDeclType	const uint8_t *		1681073	0					
ANR	1681108	Identifier	send		1681073	1					
ANR	1681109	IdentifierDecl	* opcodes		1681073	2					
ANR	1681110	IdentifierDeclType	const uint8_t *		1681073	0					
ANR	1681111	Identifier	opcodes		1681073	1					
ANR	1681112	IdentifierDeclStatement	"int i , j , op = 0 ;"	11:4:203:219	1681073	3	True				
ANR	1681113	IdentifierDecl	i		1681073	0					
ANR	1681114	IdentifierDeclType	int		1681073	0					
ANR	1681115	Identifier	i		1681073	1					
ANR	1681116	IdentifierDecl	j		1681073	1					
ANR	1681117	IdentifierDeclType	int		1681073	0					
ANR	1681118	Identifier	j		1681073	1					
ANR	1681119	IdentifierDecl	op = 0		1681073	2					
ANR	1681120	IdentifierDeclType	int		1681073	0					
ANR	1681121	Identifier	op		1681073	1					
ANR	1681122	AssignmentExpression	op = 0		1681073	2		=			
ANR	1681123	Identifier	op		1681073	0					
ANR	1681124	PrimaryExpression	0		1681073	1					
ANR	1681125	ExpressionStatement	i = bytestream2_get_byte ( & c -> gb )	15:4:228:260	1681073	4	True				
ANR	1681126	AssignmentExpression	i = bytestream2_get_byte ( & c -> gb )		1681073	0		=			
ANR	1681127	Identifier	i		1681073	0					
ANR	1681128	CallExpression	bytestream2_get_byte ( & c -> gb )		1681073	1					
ANR	1681129	Callee	bytestream2_get_byte		1681073	0					
ANR	1681130	Identifier	bytestream2_get_byte		1681073	0					
ANR	1681131	ArgumentList	& c -> gb		1681073	1					
ANR	1681132	Argument	& c -> gb		1681073	0					
ANR	1681133	UnaryOperationExpression	& c -> gb		1681073	0					
ANR	1681134	UnaryOperator	&		1681073	0					
ANR	1681135	PtrMemberAccess	c -> gb		1681073	1					
ANR	1681136	Identifier	c		1681073	0					
ANR	1681137	Identifier	gb		1681073	1					
ANR	1681138	IfStatement	if ( i )		1681073	5					
ANR	1681139	Condition	i	17:8:271:271	1681073	0	True				
ANR	1681140	Identifier	i		1681073	0					
ANR	1681141	CompoundStatement		15:11:201:201	1681073	1					
ANR	1681142	IfStatement	if ( code & 0x10 )		1681073	0					
ANR	1681143	Condition	code & 0x10	19:12:289:299	1681073	0	True				
ANR	1681144	BitAndExpression	code & 0x10		1681073	0		&			
ANR	1681145	Identifier	code		1681073	0					
ANR	1681146	PrimaryExpression	0x10		1681073	1					
ANR	1681147	CompoundStatement		19:12:244:253	1681073	1					
ANR	1681148	IdentifierDeclStatement	int align ;	21:12:317:326	1681073	0	True				
ANR	1681149	IdentifierDecl	align		1681073	0					
ANR	1681150	IdentifierDeclType	int		1681073	0					
ANR	1681151	Identifier	align		1681073	1					
ANR	1681152	ExpressionStatement	align = bytestream2_tell ( & c -> gb ) & 3	25:12:343:379	1681073	1	True				
ANR	1681153	AssignmentExpression	align = bytestream2_tell ( & c -> gb ) & 3		1681073	0		=			
ANR	1681154	Identifier	align		1681073	0					
ANR	1681155	BitAndExpression	bytestream2_tell ( & c -> gb ) & 3		1681073	1		&			
ANR	1681156	CallExpression	bytestream2_tell ( & c -> gb )		1681073	0					
ANR	1681157	Callee	bytestream2_tell		1681073	0					
ANR	1681158	Identifier	bytestream2_tell		1681073	0					
ANR	1681159	ArgumentList	& c -> gb		1681073	1					
ANR	1681160	Argument	& c -> gb		1681073	0					
ANR	1681161	UnaryOperationExpression	& c -> gb		1681073	0					
ANR	1681162	UnaryOperator	&		1681073	0					
ANR	1681163	PtrMemberAccess	c -> gb		1681073	1					
ANR	1681164	Identifier	c		1681073	0					
ANR	1681165	Identifier	gb		1681073	1					
ANR	1681166	PrimaryExpression	3		1681073	1					
ANR	1681167	IfStatement	if ( align )		1681073	2					
ANR	1681168	Condition	align	27:16:398:402	1681073	0	True				
ANR	1681169	Identifier	align		1681073	0					
ANR	1681170	ExpressionStatement	"bytestream2_skip ( & c -> gb , 4 - align )"	29:16:422:457	1681073	1	True				
ANR	1681171	CallExpression	"bytestream2_skip ( & c -> gb , 4 - align )"		1681073	0					
ANR	1681172	Callee	bytestream2_skip		1681073	0					
ANR	1681173	Identifier	bytestream2_skip		1681073	0					
ANR	1681174	ArgumentList	& c -> gb		1681073	1					
ANR	1681175	Argument	& c -> gb		1681073	0					
ANR	1681176	UnaryOperationExpression	& c -> gb		1681073	0					
ANR	1681177	UnaryOperator	&		1681073	0					
ANR	1681178	PtrMemberAccess	c -> gb		1681073	1					
ANR	1681179	Identifier	c		1681073	0					
ANR	1681180	Identifier	gb		1681073	1					
ANR	1681181	Argument	4 - align		1681073	1					
ANR	1681182	AdditiveExpression	4 - align		1681073	0		-			
ANR	1681183	PrimaryExpression	4		1681073	0					
ANR	1681184	Identifier	align		1681073	1					
ANR	1681185	DoStatement	do		1681073	1					
ANR	1681186	CompoundStatement		33:12:424:443	1681073	0					
ANR	1681187	IdentifierDeclStatement	"int page , val , x , y ;"	35:12:497:516	1681073	0	True				
ANR	1681188	IdentifierDecl	page		1681073	0					
ANR	1681189	IdentifierDeclType	int		1681073	0					
ANR	1681190	Identifier	page		1681073	1					
ANR	1681191	IdentifierDecl	val		1681073	1					
ANR	1681192	IdentifierDeclType	int		1681073	0					
ANR	1681193	Identifier	val		1681073	1					
ANR	1681194	IdentifierDecl	x		1681073	2					
ANR	1681195	IdentifierDeclType	int		1681073	0					
ANR	1681196	Identifier	x		1681073	1					
ANR	1681197	IdentifierDecl	y		1681073	3					
ANR	1681198	IdentifierDeclType	int		1681073	0					
ANR	1681199	Identifier	y		1681073	1					
ANR	1681200	ExpressionStatement	val = bytestream2_get_be16 ( & c -> gb )	37:12:531:568	1681073	1	True				
ANR	1681201	AssignmentExpression	val = bytestream2_get_be16 ( & c -> gb )		1681073	0		=			
ANR	1681202	Identifier	val		1681073	0					
ANR	1681203	CallExpression	bytestream2_get_be16 ( & c -> gb )		1681073	1					
ANR	1681204	Callee	bytestream2_get_be16		1681073	0					
ANR	1681205	Identifier	bytestream2_get_be16		1681073	0					
ANR	1681206	ArgumentList	& c -> gb		1681073	1					
ANR	1681207	Argument	& c -> gb		1681073	0					
ANR	1681208	UnaryOperationExpression	& c -> gb		1681073	0					
ANR	1681209	UnaryOperator	&		1681073	0					
ANR	1681210	PtrMemberAccess	c -> gb		1681073	1					
ANR	1681211	Identifier	c		1681073	0					
ANR	1681212	Identifier	gb		1681073	1					
ANR	1681213	ExpressionStatement	page = val >> 14	39:12:583:601	1681073	2	True				
ANR	1681214	AssignmentExpression	page = val >> 14		1681073	0		=			
ANR	1681215	Identifier	page		1681073	0					
ANR	1681216	ShiftExpression	val >> 14		1681073	1		>>			
ANR	1681217	Identifier	val		1681073	0					
ANR	1681218	PrimaryExpression	14		1681073	1					
ANR	1681219	ExpressionStatement	x = ( val & 0x7F ) * 2	41:12:616:641	1681073	3	True				
ANR	1681220	AssignmentExpression	x = ( val & 0x7F ) * 2		1681073	0		=			
ANR	1681221	Identifier	x		1681073	0					
ANR	1681222	MultiplicativeExpression	( val & 0x7F ) * 2		1681073	1		*			
ANR	1681223	BitAndExpression	val & 0x7F		1681073	0		&			
ANR	1681224	Identifier	val		1681073	0					
ANR	1681225	PrimaryExpression	0x7F		1681073	1					
ANR	1681226	PrimaryExpression	2		1681073	1					
ANR	1681227	ExpressionStatement	y = ( ( val >> 7 ) & 0x7F ) * 2	43:12:656:688	1681073	4	True				
ANR	1681228	AssignmentExpression	y = ( ( val >> 7 ) & 0x7F ) * 2		1681073	0		=			
ANR	1681229	Identifier	y		1681073	0					
ANR	1681230	MultiplicativeExpression	( ( val >> 7 ) & 0x7F ) * 2		1681073	1		*			
ANR	1681231	BitAndExpression	( val >> 7 ) & 0x7F		1681073	0		&			
ANR	1681232	ShiftExpression	val >> 7		1681073	0		>>			
ANR	1681233	Identifier	val		1681073	0					
ANR	1681234	PrimaryExpression	7		1681073	1					
ANR	1681235	PrimaryExpression	0x7F		1681073	1					
ANR	1681236	PrimaryExpression	2		1681073	1					
ANR	1681237	ExpressionStatement	dst = c -> frame [ page ] + x + y * c -> width	45:12:703:745	1681073	5	True				
ANR	1681238	AssignmentExpression	dst = c -> frame [ page ] + x + y * c -> width		1681073	0		=			
ANR	1681239	Identifier	dst		1681073	0					
ANR	1681240	AdditiveExpression	c -> frame [ page ] + x + y * c -> width		1681073	1		+			
ANR	1681241	ArrayIndexing	c -> frame [ page ]		1681073	0					
ANR	1681242	PtrMemberAccess	c -> frame		1681073	0					
ANR	1681243	Identifier	c		1681073	0					
ANR	1681244	Identifier	frame		1681073	1					
ANR	1681245	Identifier	page		1681073	1					
ANR	1681246	AdditiveExpression	x + y * c -> width		1681073	1		+			
ANR	1681247	Identifier	x		1681073	0					
ANR	1681248	MultiplicativeExpression	y * c -> width		1681073	1		*			
ANR	1681249	Identifier	y		1681073	0					
ANR	1681250	PtrMemberAccess	c -> width		1681073	1					
ANR	1681251	Identifier	c		1681073	0					
ANR	1681252	Identifier	width		1681073	1					
ANR	1681253	ExpressionStatement	dend = c -> frame [ page ] + c -> frame_size	47:12:760:799	1681073	6	True				
ANR	1681254	AssignmentExpression	dend = c -> frame [ page ] + c -> frame_size		1681073	0		=			
ANR	1681255	Identifier	dend		1681073	0					
ANR	1681256	AdditiveExpression	c -> frame [ page ] + c -> frame_size		1681073	1		+			
ANR	1681257	ArrayIndexing	c -> frame [ page ]		1681073	0					
ANR	1681258	PtrMemberAccess	c -> frame		1681073	0					
ANR	1681259	Identifier	c		1681073	0					
ANR	1681260	Identifier	frame		1681073	1					
ANR	1681261	Identifier	page		1681073	1					
ANR	1681262	PtrMemberAccess	c -> frame_size		1681073	1					
ANR	1681263	Identifier	c		1681073	0					
ANR	1681264	Identifier	frame_size		1681073	1					
ANR	1681265	ExpressionStatement	offset = ( x & 0x7F ) * 2	49:12:814:837	1681073	7	True				
ANR	1681266	AssignmentExpression	offset = ( x & 0x7F ) * 2		1681073	0		=			
ANR	1681267	Identifier	offset		1681073	0					
ANR	1681268	MultiplicativeExpression	( x & 0x7F ) * 2		1681073	1		*			
ANR	1681269	BitAndExpression	x & 0x7F		1681073	0		&			
ANR	1681270	Identifier	x		1681073	0					
ANR	1681271	PrimaryExpression	0x7F		1681073	1					
ANR	1681272	PrimaryExpression	2		1681073	1					
ANR	1681273	ExpressionStatement	j = bytestream2_get_le16 ( & c -> gb ) + offset	51:12:852:898	1681073	8	True				
ANR	1681274	AssignmentExpression	j = bytestream2_get_le16 ( & c -> gb ) + offset		1681073	0		=			
ANR	1681275	Identifier	j		1681073	0					
ANR	1681276	AdditiveExpression	bytestream2_get_le16 ( & c -> gb ) + offset		1681073	1		+			
ANR	1681277	CallExpression	bytestream2_get_le16 ( & c -> gb )		1681073	0					
ANR	1681278	Callee	bytestream2_get_le16		1681073	0					
ANR	1681279	Identifier	bytestream2_get_le16		1681073	0					
ANR	1681280	ArgumentList	& c -> gb		1681073	1					
ANR	1681281	Argument	& c -> gb		1681073	0					
ANR	1681282	UnaryOperationExpression	& c -> gb		1681073	0					
ANR	1681283	UnaryOperator	&		1681073	0					
ANR	1681284	PtrMemberAccess	c -> gb		1681073	1					
ANR	1681285	Identifier	c		1681073	0					
ANR	1681286	Identifier	gb		1681073	1					
ANR	1681287	Identifier	offset		1681073	1					
ANR	1681288	DoStatement	do		1681073	9					
ANR	1681289	CompoundStatement		51:15:843:843	1681073	0					
ANR	1681290	ExpressionStatement	offset ++	55:16:935:943	1681073	0	True				
ANR	1681291	PostIncDecOperationExpression	offset ++		1681073	0					
ANR	1681292	Identifier	offset		1681073	0					
ANR	1681293	IncDec	++		1681073	1					
ANR	1681294	IfStatement	if ( dst + 3 * c -> width + 4 > dend )		1681073	1					
ANR	1681295	Condition	dst + 3 * c -> width + 4 > dend	57:20:966:994	1681073	0	True				
ANR	1681296	RelationalExpression	dst + 3 * c -> width + 4 > dend		1681073	0		>			
ANR	1681297	AdditiveExpression	dst + 3 * c -> width + 4		1681073	0		+			
ANR	1681298	Identifier	dst		1681073	0					
ANR	1681299	AdditiveExpression	3 * c -> width + 4		1681073	1		+			
ANR	1681300	MultiplicativeExpression	3 * c -> width		1681073	0		*			
ANR	1681301	PrimaryExpression	3		1681073	0					
ANR	1681302	PtrMemberAccess	c -> width		1681073	1					
ANR	1681303	Identifier	c		1681073	0					
ANR	1681304	Identifier	width		1681073	1					
ANR	1681305	PrimaryExpression	4		1681073	1					
ANR	1681306	Identifier	dend		1681073	1					
ANR	1681307	ReturnStatement	return AVERROR_INVALIDDATA ;	59:20:1018:1044	1681073	1	True				
ANR	1681308	Identifier	AVERROR_INVALIDDATA		1681073	0					
ANR	1681309	ExpressionStatement	"read4x4block ( c , dst , c -> width )"	61:16:1063:1093	1681073	2	True				
ANR	1681310	CallExpression	"read4x4block ( c , dst , c -> width )"		1681073	0					
ANR	1681311	Callee	read4x4block		1681073	0					
ANR	1681312	Identifier	read4x4block		1681073	0					
ANR	1681313	ArgumentList	c		1681073	1					
ANR	1681314	Argument	c		1681073	0					
ANR	1681315	Identifier	c		1681073	0					
ANR	1681316	Argument	dst		1681073	1					
ANR	1681317	Identifier	dst		1681073	0					
ANR	1681318	Argument	c -> width		1681073	2					
ANR	1681319	PtrMemberAccess	c -> width		1681073	0					
ANR	1681320	Identifier	c		1681073	0					
ANR	1681321	Identifier	width		1681073	1					
ANR	1681322	IfStatement	if ( ( offset & 0x3F ) == 0 )		1681073	3					
ANR	1681323	Condition	( offset & 0x3F ) == 0	63:20:1116:1135	1681073	0	True				
ANR	1681324	EqualityExpression	( offset & 0x3F ) == 0		1681073	0		==			
ANR	1681325	BitAndExpression	offset & 0x3F		1681073	0		&			
ANR	1681326	Identifier	offset		1681073	0					
ANR	1681327	PrimaryExpression	0x3F		1681073	1					
ANR	1681328	PrimaryExpression	0		1681073	1					
ANR	1681329	ExpressionStatement	dst += c -> width * 3	65:20:1159:1178	1681073	1	True				
ANR	1681330	AssignmentExpression	dst += c -> width * 3		1681073	0		+=			
ANR	1681331	Identifier	dst		1681073	0					
ANR	1681332	MultiplicativeExpression	c -> width * 3		1681073	1		*			
ANR	1681333	PtrMemberAccess	c -> width		1681073	0					
ANR	1681334	Identifier	c		1681073	0					
ANR	1681335	Identifier	width		1681073	1					
ANR	1681336	PrimaryExpression	3		1681073	1					
ANR	1681337	ExpressionStatement	dst += 4	67:16:1197:1205	1681073	4	True				
ANR	1681338	AssignmentExpression	dst += 4		1681073	0		+=			
ANR	1681339	Identifier	dst		1681073	0					
ANR	1681340	PrimaryExpression	4		1681073	1					
ANR	1681341	Condition	offset < j	69:21:1229:1238	1681073	1	True				
ANR	1681342	RelationalExpression	offset < j		1681073	0		<			
ANR	1681343	Identifier	offset		1681073	0					
ANR	1681344	Identifier	j		1681073	1					
ANR	1681345	Condition	-- i	71:17:1260:1262	1681073	1	True				
ANR	1681346	UnaryExpression	-- i		1681073	0					
ANR	1681347	IncDec	--		1681073	0					
ANR	1681348	Identifier	i		1681073	1					
ANR	1681349	ExpressionStatement	dst = c -> frame [ c -> current_frame ]	77:4:1280:1313	1681073	6	True				
ANR	1681350	AssignmentExpression	dst = c -> frame [ c -> current_frame ]		1681073	0		=			
ANR	1681351	Identifier	dst		1681073	0					
ANR	1681352	ArrayIndexing	c -> frame [ c -> current_frame ]		1681073	1					
ANR	1681353	PtrMemberAccess	c -> frame		1681073	0					
ANR	1681354	Identifier	c		1681073	0					
ANR	1681355	Identifier	frame		1681073	1					
ANR	1681356	PtrMemberAccess	c -> current_frame		1681073	1					
ANR	1681357	Identifier	c		1681073	0					
ANR	1681358	Identifier	current_frame		1681073	1					
ANR	1681359	ExpressionStatement	dend = c -> frame [ c -> current_frame ] + c -> frame_size	79:4:1320:1369	1681073	7	True				
ANR	1681360	AssignmentExpression	dend = c -> frame [ c -> current_frame ] + c -> frame_size		1681073	0		=			
ANR	1681361	Identifier	dend		1681073	0					
ANR	1681362	AdditiveExpression	c -> frame [ c -> current_frame ] + c -> frame_size		1681073	1		+			
ANR	1681363	ArrayIndexing	c -> frame [ c -> current_frame ]		1681073	0					
ANR	1681364	PtrMemberAccess	c -> frame		1681073	0					
ANR	1681365	Identifier	c		1681073	0					
ANR	1681366	Identifier	frame		1681073	1					
ANR	1681367	PtrMemberAccess	c -> current_frame		1681073	1					
ANR	1681368	Identifier	c		1681073	0					
ANR	1681369	Identifier	current_frame		1681073	1					
ANR	1681370	PtrMemberAccess	c -> frame_size		1681073	1					
ANR	1681371	Identifier	c		1681073	0					
ANR	1681372	Identifier	frame_size		1681073	1					
ANR	1681373	DoStatement	do		1681073	8					
ANR	1681374	CompoundStatement		79:7:1306:1306	1681073	0					
ANR	1681375	ExpressionStatement	"set_src_position ( c , & src , & send )"	83:8:1390:1422	1681073	0	True				
ANR	1681376	CallExpression	"set_src_position ( c , & src , & send )"		1681073	0					
ANR	1681377	Callee	set_src_position		1681073	0					
ANR	1681378	Identifier	set_src_position		1681073	0					
ANR	1681379	ArgumentList	c		1681073	1					
ANR	1681380	Argument	c		1681073	0					
ANR	1681381	Identifier	c		1681073	0					
ANR	1681382	Argument	& src		1681073	1					
ANR	1681383	UnaryOperationExpression	& src		1681073	0					
ANR	1681384	UnaryOperator	&		1681073	0					
ANR	1681385	Identifier	src		1681073	1					
ANR	1681386	Argument	& send		1681073	2					
ANR	1681387	UnaryOperationExpression	& send		1681073	0					
ANR	1681388	UnaryOperator	&		1681073	0					
ANR	1681389	Identifier	send		1681073	1					
ANR	1681390	IfStatement	if ( ( src + 3 * c -> width + 4 > send ) || ( dst + 3 * c -> width + 4 > dend ) )		1681073	1					
ANR	1681391	Condition	( src + 3 * c -> width + 4 > send ) || ( dst + 3 * c -> width + 4 > dend )	85:12:1437:1515	1681073	0	True				
ANR	1681392	OrExpression	( src + 3 * c -> width + 4 > send ) || ( dst + 3 * c -> width + 4 > dend )		1681073	0		||			
ANR	1681393	RelationalExpression	src + 3 * c -> width + 4 > send		1681073	0		>			
ANR	1681394	AdditiveExpression	src + 3 * c -> width + 4		1681073	0		+			
ANR	1681395	Identifier	src		1681073	0					
ANR	1681396	AdditiveExpression	3 * c -> width + 4		1681073	1		+			
ANR	1681397	MultiplicativeExpression	3 * c -> width		1681073	0		*			
ANR	1681398	PrimaryExpression	3		1681073	0					
ANR	1681399	PtrMemberAccess	c -> width		1681073	1					
ANR	1681400	Identifier	c		1681073	0					
ANR	1681401	Identifier	width		1681073	1					
ANR	1681402	PrimaryExpression	4		1681073	1					
ANR	1681403	Identifier	send		1681073	1					
ANR	1681404	RelationalExpression	dst + 3 * c -> width + 4 > dend		1681073	1		>			
ANR	1681405	AdditiveExpression	dst + 3 * c -> width + 4		1681073	0		+			
ANR	1681406	Identifier	dst		1681073	0					
ANR	1681407	AdditiveExpression	3 * c -> width + 4		1681073	1		+			
ANR	1681408	MultiplicativeExpression	3 * c -> width		1681073	0		*			
ANR	1681409	PrimaryExpression	3		1681073	0					
ANR	1681410	PtrMemberAccess	c -> width		1681073	1					
ANR	1681411	Identifier	c		1681073	0					
ANR	1681412	Identifier	width		1681073	1					
ANR	1681413	PrimaryExpression	4		1681073	1					
ANR	1681414	Identifier	dend		1681073	1					
ANR	1681415	ReturnStatement	return AVERROR_INVALIDDATA ;	89:12:1531:1557	1681073	1	True				
ANR	1681416	Identifier	AVERROR_INVALIDDATA		1681073	0					
ANR	1681417	ExpressionStatement	"copy_block4 ( dst , src , c -> width , c -> width , 4 )"	91:8:1568:1612	1681073	2	True				
ANR	1681418	CallExpression	"copy_block4 ( dst , src , c -> width , c -> width , 4 )"		1681073	0					
ANR	1681419	Callee	copy_block4		1681073	0					
ANR	1681420	Identifier	copy_block4		1681073	0					
ANR	1681421	ArgumentList	dst		1681073	1					
ANR	1681422	Argument	dst		1681073	0					
ANR	1681423	Identifier	dst		1681073	0					
ANR	1681424	Argument	src		1681073	1					
ANR	1681425	Identifier	src		1681073	0					
ANR	1681426	Argument	c -> width		1681073	2					
ANR	1681427	PtrMemberAccess	c -> width		1681073	0					
ANR	1681428	Identifier	c		1681073	0					
ANR	1681429	Identifier	width		1681073	1					
ANR	1681430	Argument	c -> width		1681073	3					
ANR	1681431	PtrMemberAccess	c -> width		1681073	0					
ANR	1681432	Identifier	c		1681073	0					
ANR	1681433	Identifier	width		1681073	1					
ANR	1681434	Argument	4		1681073	4					
ANR	1681435	PrimaryExpression	4		1681073	0					
ANR	1681436	ExpressionStatement	i ++	93:8:1623:1626	1681073	3	True				
ANR	1681437	PostIncDecOperationExpression	i ++		1681073	0					
ANR	1681438	Identifier	i		1681073	0					
ANR	1681439	IncDec	++		1681073	1					
ANR	1681440	IfStatement	if ( ( i & 0x3F ) == 0 )		1681073	4					
ANR	1681441	Condition	( i & 0x3F ) == 0	95:12:1641:1655	1681073	0	True				
ANR	1681442	EqualityExpression	( i & 0x3F ) == 0		1681073	0		==			
ANR	1681443	BitAndExpression	i & 0x3F		1681073	0		&			
ANR	1681444	Identifier	i		1681073	0					
ANR	1681445	PrimaryExpression	0x3F		1681073	1					
ANR	1681446	PrimaryExpression	0		1681073	1					
ANR	1681447	ExpressionStatement	dst += c -> width * 3	97:12:1671:1690	1681073	1	True				
ANR	1681448	AssignmentExpression	dst += c -> width * 3		1681073	0		+=			
ANR	1681449	Identifier	dst		1681073	0					
ANR	1681450	MultiplicativeExpression	c -> width * 3		1681073	1		*			
ANR	1681451	PtrMemberAccess	c -> width		1681073	0					
ANR	1681452	Identifier	c		1681073	0					
ANR	1681453	Identifier	width		1681073	1					
ANR	1681454	PrimaryExpression	3		1681073	1					
ANR	1681455	ExpressionStatement	dst += 4	99:8:1701:1709	1681073	5	True				
ANR	1681456	AssignmentExpression	dst += 4		1681073	0		+=			
ANR	1681457	Identifier	dst		1681073	0					
ANR	1681458	PrimaryExpression	4		1681073	1					
ANR	1681459	Condition	i < c -> video_size / 16	101:13:1725:1746	1681073	1	True				
ANR	1681460	RelationalExpression	i < c -> video_size / 16		1681073	0		<			
ANR	1681461	Identifier	i		1681073	0					
ANR	1681462	MultiplicativeExpression	c -> video_size / 16		1681073	1		/			
ANR	1681463	PtrMemberAccess	c -> video_size		1681073	0					
ANR	1681464	Identifier	c		1681073	0					
ANR	1681465	Identifier	video_size		1681073	1					
ANR	1681466	PrimaryExpression	16		1681073	1					
ANR	1681467	ExpressionStatement	opcode_size = bytestream2_get_le16 ( & c -> gb )	105:4:1757:1799	1681073	9	True				
ANR	1681468	AssignmentExpression	opcode_size = bytestream2_get_le16 ( & c -> gb )		1681073	0		=			
ANR	1681469	Identifier	opcode_size		1681073	0					
ANR	1681470	CallExpression	bytestream2_get_le16 ( & c -> gb )		1681073	1					
ANR	1681471	Callee	bytestream2_get_le16		1681073	0					
ANR	1681472	Identifier	bytestream2_get_le16		1681073	0					
ANR	1681473	ArgumentList	& c -> gb		1681073	1					
ANR	1681474	Argument	& c -> gb		1681073	0					
ANR	1681475	UnaryOperationExpression	& c -> gb		1681073	0					
ANR	1681476	UnaryOperator	&		1681073	0					
ANR	1681477	PtrMemberAccess	c -> gb		1681073	1					
ANR	1681478	Identifier	c		1681073	0					
ANR	1681479	Identifier	gb		1681073	1					
ANR	1681480	ExpressionStatement	"bytestream2_skip ( & c -> gb , 2 )"	107:4:1806:1833	1681073	10	True				
ANR	1681481	CallExpression	"bytestream2_skip ( & c -> gb , 2 )"		1681073	0					
ANR	1681482	Callee	bytestream2_skip		1681073	0					
ANR	1681483	Identifier	bytestream2_skip		1681073	0					
ANR	1681484	ArgumentList	& c -> gb		1681073	1					
ANR	1681485	Argument	& c -> gb		1681073	0					
ANR	1681486	UnaryOperationExpression	& c -> gb		1681073	0					
ANR	1681487	UnaryOperator	&		1681073	0					
ANR	1681488	PtrMemberAccess	c -> gb		1681073	1					
ANR	1681489	Identifier	c		1681073	0					
ANR	1681490	Identifier	gb		1681073	1					
ANR	1681491	Argument	2		1681073	1					
ANR	1681492	PrimaryExpression	2		1681073	0					
ANR	1681493	IfStatement	if ( bytestream2_get_bytes_left ( & c -> gb ) < opcode_size )		1681073	11					
ANR	1681494	Condition	bytestream2_get_bytes_left ( & c -> gb ) < opcode_size	111:8:1846:1893	1681073	0	True				
ANR	1681495	RelationalExpression	bytestream2_get_bytes_left ( & c -> gb ) < opcode_size		1681073	0		<			
ANR	1681496	CallExpression	bytestream2_get_bytes_left ( & c -> gb )		1681073	0					
ANR	1681497	Callee	bytestream2_get_bytes_left		1681073	0					
ANR	1681498	Identifier	bytestream2_get_bytes_left		1681073	0					
ANR	1681499	ArgumentList	& c -> gb		1681073	1					
ANR	1681500	Argument	& c -> gb		1681073	0					
ANR	1681501	UnaryOperationExpression	& c -> gb		1681073	0					
ANR	1681502	UnaryOperator	&		1681073	0					
ANR	1681503	PtrMemberAccess	c -> gb		1681073	1					
ANR	1681504	Identifier	c		1681073	0					
ANR	1681505	Identifier	gb		1681073	1					
ANR	1681506	Identifier	opcode_size		1681073	1					
ANR	1681507	ReturnStatement	return AVERROR_INVALIDDATA ;	113:8:1905:1931	1681073	1	True				
ANR	1681508	Identifier	AVERROR_INVALIDDATA		1681073	0					
ANR	1681509	ExpressionStatement	opcodes = pkt + bytestream2_tell ( & c -> gb )	117:4:1940:1980	1681073	12	True				
ANR	1681510	AssignmentExpression	opcodes = pkt + bytestream2_tell ( & c -> gb )		1681073	0		=			
ANR	1681511	Identifier	opcodes		1681073	0					
ANR	1681512	AdditiveExpression	pkt + bytestream2_tell ( & c -> gb )		1681073	1		+			
ANR	1681513	Identifier	pkt		1681073	0					
ANR	1681514	CallExpression	bytestream2_tell ( & c -> gb )		1681073	1					
ANR	1681515	Callee	bytestream2_tell		1681073	0					
ANR	1681516	Identifier	bytestream2_tell		1681073	0					
ANR	1681517	ArgumentList	& c -> gb		1681073	1					
ANR	1681518	Argument	& c -> gb		1681073	0					
ANR	1681519	UnaryOperationExpression	& c -> gb		1681073	0					
ANR	1681520	UnaryOperator	&		1681073	0					
ANR	1681521	PtrMemberAccess	c -> gb		1681073	1					
ANR	1681522	Identifier	c		1681073	0					
ANR	1681523	Identifier	gb		1681073	1					
ANR	1681524	ExpressionStatement	"bytestream2_skipu ( & c -> gb , opcode_size )"	119:4:1987:2025	1681073	13	True				
ANR	1681525	CallExpression	"bytestream2_skipu ( & c -> gb , opcode_size )"		1681073	0					
ANR	1681526	Callee	bytestream2_skipu		1681073	0					
ANR	1681527	Identifier	bytestream2_skipu		1681073	0					
ANR	1681528	ArgumentList	& c -> gb		1681073	1					
ANR	1681529	Argument	& c -> gb		1681073	0					
ANR	1681530	UnaryOperationExpression	& c -> gb		1681073	0					
ANR	1681531	UnaryOperator	&		1681073	0					
ANR	1681532	PtrMemberAccess	c -> gb		1681073	1					
ANR	1681533	Identifier	c		1681073	0					
ANR	1681534	Identifier	gb		1681073	1					
ANR	1681535	Argument	opcode_size		1681073	1					
ANR	1681536	Identifier	opcode_size		1681073	0					
ANR	1681537	ExpressionStatement	dst = c -> frame [ c -> current_frame ]	123:4:2034:2066	1681073	14	True				
ANR	1681538	AssignmentExpression	dst = c -> frame [ c -> current_frame ]		1681073	0		=			
ANR	1681539	Identifier	dst		1681073	0					
ANR	1681540	ArrayIndexing	c -> frame [ c -> current_frame ]		1681073	1					
ANR	1681541	PtrMemberAccess	c -> frame		1681073	0					
ANR	1681542	Identifier	c		1681073	0					
ANR	1681543	Identifier	frame		1681073	1					
ANR	1681544	PtrMemberAccess	c -> current_frame		1681073	1					
ANR	1681545	Identifier	c		1681073	0					
ANR	1681546	Identifier	current_frame		1681073	1					
ANR	1681547	ForStatement	"for ( i = 0 ; i < c -> height ; i += 4 , dst += c -> width * 3 )"		1681073	15					
ANR	1681548	ForInit	i = 0 ;	127:9:2080:2085	1681073	0	True				
ANR	1681549	AssignmentExpression	i = 0		1681073	0		=			
ANR	1681550	Identifier	i		1681073	0					
ANR	1681551	PrimaryExpression	0		1681073	1					
ANR	1681552	Condition	i < c -> height	127:16:2087:2099	1681073	1	True				
ANR	1681553	RelationalExpression	i < c -> height		1681073	0		<			
ANR	1681554	Identifier	i		1681073	0					
ANR	1681555	PtrMemberAccess	c -> height		1681073	1					
ANR	1681556	Identifier	c		1681073	0					
ANR	1681557	Identifier	height		1681073	1					
ANR	1681558	Expression	"i += 4 , dst += c -> width * 3"	127:31:2102:2128	1681073	2	True				
ANR	1681559	AssignmentExpression	i += 4		1681073	0		+=			
ANR	1681560	Identifier	i		1681073	0					
ANR	1681561	PrimaryExpression	4		1681073	1					
ANR	1681562	AssignmentExpression	dst += c -> width * 3		1681073	1		+=			
ANR	1681563	Identifier	dst		1681073	0					
ANR	1681564	MultiplicativeExpression	c -> width * 3		1681073	1		*			
ANR	1681565	PtrMemberAccess	c -> width		1681073	0					
ANR	1681566	Identifier	c		1681073	0					
ANR	1681567	Identifier	width		1681073	1					
ANR	1681568	PrimaryExpression	3		1681073	1					
ANR	1681569	ForStatement	"for ( j = 0 ; j < c -> width ; j += 4 , dst += 4 )"		1681073	3					
ANR	1681570	ForInit	j = 0 ;	129:13:2145:2150	1681073	0	True				
ANR	1681571	AssignmentExpression	j = 0		1681073	0		=			
ANR	1681572	Identifier	j		1681073	0					
ANR	1681573	PrimaryExpression	0		1681073	1					
ANR	1681574	Condition	j < c -> width	129:20:2152:2163	1681073	1	True				
ANR	1681575	RelationalExpression	j < c -> width		1681073	0		<			
ANR	1681576	Identifier	j		1681073	0					
ANR	1681577	PtrMemberAccess	c -> width		1681073	1					
ANR	1681578	Identifier	c		1681073	0					
ANR	1681579	Identifier	width		1681073	1					
ANR	1681580	Expression	"j += 4 , dst += 4"	129:34:2166:2181	1681073	2	True				
ANR	1681581	AssignmentExpression	j += 4		1681073	0		+=			
ANR	1681582	Identifier	j		1681073	0					
ANR	1681583	PrimaryExpression	4		1681073	1					
ANR	1681584	AssignmentExpression	dst += 4		1681073	1		+=			
ANR	1681585	Identifier	dst		1681073	0					
ANR	1681586	PrimaryExpression	4		1681073	1					
ANR	1681587	CompoundStatement		129:12:2126:2143	1681073	3					
ANR	1681588	IdentifierDeclStatement	"int opcode , k = 0 ;"	131:12:2199:2216	1681073	0	True				
ANR	1681589	IdentifierDecl	opcode		1681073	0					
ANR	1681590	IdentifierDeclType	int		1681073	0					
ANR	1681591	Identifier	opcode		1681073	1					
ANR	1681592	IdentifierDecl	k = 0		1681073	1					
ANR	1681593	IdentifierDeclType	int		1681073	0					
ANR	1681594	Identifier	k		1681073	1					
ANR	1681595	AssignmentExpression	k = 0		1681073	2		=			
ANR	1681596	Identifier	k		1681073	0					
ANR	1681597	PrimaryExpression	0		1681073	1					
ANR	1681598	IfStatement	if ( op > opcode_size )		1681073	1					
ANR	1681599	Condition	op > opcode_size	133:16:2235:2250	1681073	0	True				
ANR	1681600	RelationalExpression	op > opcode_size		1681073	0		>			
ANR	1681601	Identifier	op		1681073	0					
ANR	1681602	Identifier	opcode_size		1681073	1					
ANR	1681603	ReturnStatement	return AVERROR_INVALIDDATA ;	135:16:2270:2296	1681073	1	True				
ANR	1681604	Identifier	AVERROR_INVALIDDATA		1681073	0					
ANR	1681605	IfStatement	if ( j & 4 )		1681073	2					
ANR	1681606	Condition	j & 4	137:16:2315:2319	1681073	0	True				
ANR	1681607	BitAndExpression	j & 4		1681073	0		&			
ANR	1681608	Identifier	j		1681073	0					
ANR	1681609	PrimaryExpression	4		1681073	1					
ANR	1681610	CompoundStatement		135:23:2249:2249	1681073	1					
ANR	1681611	ExpressionStatement	opcode = opcodes [ op ] & 15	139:16:2341:2366	1681073	0	True				
ANR	1681612	AssignmentExpression	opcode = opcodes [ op ] & 15		1681073	0		=			
ANR	1681613	Identifier	opcode		1681073	0					
ANR	1681614	BitAndExpression	opcodes [ op ] & 15		1681073	1		&			
ANR	1681615	ArrayIndexing	opcodes [ op ]		1681073	0					
ANR	1681616	Identifier	opcodes		1681073	0					
ANR	1681617	Identifier	op		1681073	1					
ANR	1681618	PrimaryExpression	15		1681073	1					
ANR	1681619	ExpressionStatement	op ++	141:16:2385:2389	1681073	1	True				
ANR	1681620	PostIncDecOperationExpression	op ++		1681073	0					
ANR	1681621	Identifier	op		1681073	0					
ANR	1681622	IncDec	++		1681073	1					
ANR	1681623	ElseStatement	else		1681073	0					
ANR	1681624	CompoundStatement		141:19:2338:2338	1681073	0					
ANR	1681625	ExpressionStatement	opcode = opcodes [ op ] >> 4	145:16:2430:2455	1681073	0	True				
ANR	1681626	AssignmentExpression	opcode = opcodes [ op ] >> 4		1681073	0		=			
ANR	1681627	Identifier	opcode		1681073	0					
ANR	1681628	ShiftExpression	opcodes [ op ] >> 4		1681073	1		>>			
ANR	1681629	ArrayIndexing	opcodes [ op ]		1681073	0					
ANR	1681630	Identifier	opcodes		1681073	0					
ANR	1681631	Identifier	op		1681073	1					
ANR	1681632	PrimaryExpression	4		1681073	1					
ANR	1681633	WhileStatement	while ( block_sequences [ opcode ] [ k ] )		1681073	3					
ANR	1681634	Condition	block_sequences [ opcode ] [ k ]	151:19:2494:2519	1681073	0	True				
ANR	1681635	ArrayIndexing	block_sequences [ opcode ] [ k ]		1681073	0					
ANR	1681636	ArrayIndexing	block_sequences [ opcode ]		1681073	0					
ANR	1681637	Identifier	block_sequences		1681073	0					
ANR	1681638	Identifier	opcode		1681073	1					
ANR	1681639	Identifier	k		1681073	1					
ANR	1681640	CompoundStatement		149:47:2449:2449	1681073	1					
ANR	1681641	ExpressionStatement	offset = c -> width * 2	153:16:2541:2562	1681073	0	True				
ANR	1681642	AssignmentExpression	offset = c -> width * 2		1681073	0		=			
ANR	1681643	Identifier	offset		1681073	0					
ANR	1681644	MultiplicativeExpression	c -> width * 2		1681073	1		*			
ANR	1681645	PtrMemberAccess	c -> width		1681073	0					
ANR	1681646	Identifier	c		1681073	0					
ANR	1681647	Identifier	width		1681073	1					
ANR	1681648	PrimaryExpression	2		1681073	1					
ANR	1681649	ExpressionStatement	code = block_sequences [ opcode ] [ k ++ ]	155:16:2581:2618	1681073	1	True				
ANR	1681650	AssignmentExpression	code = block_sequences [ opcode ] [ k ++ ]		1681073	0		=			
ANR	1681651	Identifier	code		1681073	0					
ANR	1681652	ArrayIndexing	block_sequences [ opcode ] [ k ++ ]		1681073	1					
ANR	1681653	ArrayIndexing	block_sequences [ opcode ]		1681073	0					
ANR	1681654	Identifier	block_sequences		1681073	0					
ANR	1681655	Identifier	opcode		1681073	1					
ANR	1681656	PostIncDecOperationExpression	k ++		1681073	1					
ANR	1681657	Identifier	k		1681073	0					
ANR	1681658	IncDec	++		1681073	1					
ANR	1681659	SwitchStatement	switch ( code )		1681073	2					
ANR	1681660	Condition	code	159:24:2647:2650	1681073	0	True				
ANR	1681661	Identifier	code		1681073	0					
ANR	1681662	CompoundStatement		157:30:2580:2580	1681073	1					
ANR	1681663	Label	case 2 :	161:16:2672:2678	1681073	0	True				
ANR	1681664	ExpressionStatement	offset = 0	163:20:2701:2711	1681073	1	True				
ANR	1681665	AssignmentExpression	offset = 0		1681073	0		=			
ANR	1681666	Identifier	offset		1681073	0					
ANR	1681667	PrimaryExpression	0		1681073	1					
ANR	1681668	Label	case 3 :	165:16:2730:2736	1681073	2	True				
ANR	1681669	ExpressionStatement	color = bytestream2_get_byte ( & c -> gb )	167:20:2759:2795	1681073	3	True				
ANR	1681670	AssignmentExpression	color = bytestream2_get_byte ( & c -> gb )		1681073	0		=			
ANR	1681671	Identifier	color		1681073	0					
ANR	1681672	CallExpression	bytestream2_get_byte ( & c -> gb )		1681073	1					
ANR	1681673	Callee	bytestream2_get_byte		1681073	0					
ANR	1681674	Identifier	bytestream2_get_byte		1681073	0					
ANR	1681675	ArgumentList	& c -> gb		1681073	1					
ANR	1681676	Argument	& c -> gb		1681073	0					
ANR	1681677	UnaryOperationExpression	& c -> gb		1681073	0					
ANR	1681678	UnaryOperator	&		1681073	0					
ANR	1681679	PtrMemberAccess	c -> gb		1681073	1					
ANR	1681680	Identifier	c		1681073	0					
ANR	1681681	Identifier	gb		1681073	1					
ANR	1681682	Label	case 4 :	169:16:2814:2820	1681073	4	True				
ANR	1681683	ExpressionStatement	mask = bytestream2_get_byte ( & c -> gb )	171:20:2843:2878	1681073	5	True				
ANR	1681684	AssignmentExpression	mask = bytestream2_get_byte ( & c -> gb )		1681073	0		=			
ANR	1681685	Identifier	mask		1681073	0					
ANR	1681686	CallExpression	bytestream2_get_byte ( & c -> gb )		1681073	1					
ANR	1681687	Callee	bytestream2_get_byte		1681073	0					
ANR	1681688	Identifier	bytestream2_get_byte		1681073	0					
ANR	1681689	ArgumentList	& c -> gb		1681073	1					
ANR	1681690	Argument	& c -> gb		1681073	0					
ANR	1681691	UnaryOperationExpression	& c -> gb		1681073	0					
ANR	1681692	UnaryOperator	&		1681073	0					
ANR	1681693	PtrMemberAccess	c -> gb		1681073	1					
ANR	1681694	Identifier	c		1681073	0					
ANR	1681695	Identifier	gb		1681073	1					
ANR	1681696	ExpressionStatement	"copy_color_mask ( dst + offset , c -> width , mask , color )"	173:20:2901:2953	1681073	6	True				
ANR	1681697	CallExpression	"copy_color_mask ( dst + offset , c -> width , mask , color )"		1681073	0					
ANR	1681698	Callee	copy_color_mask		1681073	0					
ANR	1681699	Identifier	copy_color_mask		1681073	0					
ANR	1681700	ArgumentList	dst + offset		1681073	1					
ANR	1681701	Argument	dst + offset		1681073	0					
ANR	1681702	AdditiveExpression	dst + offset		1681073	0		+			
ANR	1681703	Identifier	dst		1681073	0					
ANR	1681704	Identifier	offset		1681073	1					
ANR	1681705	Argument	c -> width		1681073	1					
ANR	1681706	PtrMemberAccess	c -> width		1681073	0					
ANR	1681707	Identifier	c		1681073	0					
ANR	1681708	Identifier	width		1681073	1					
ANR	1681709	Argument	mask		1681073	2					
ANR	1681710	Identifier	mask		1681073	0					
ANR	1681711	Argument	color		1681073	3					
ANR	1681712	Identifier	color		1681073	0					
ANR	1681713	BreakStatement	break ;	175:20:2976:2981	1681073	7	True				
ANR	1681714	Label	case 5 :	177:16:3000:3006	1681073	8	True				
ANR	1681715	ExpressionStatement	offset = 0	179:20:3029:3039	1681073	9	True				
ANR	1681716	AssignmentExpression	offset = 0		1681073	0		=			
ANR	1681717	Identifier	offset		1681073	0					
ANR	1681718	PrimaryExpression	0		1681073	1					
ANR	1681719	Label	case 6 :	181:16:3058:3064	1681073	10	True				
ANR	1681720	ExpressionStatement	"set_src_position ( c , & src , & send )"	183:20:3087:3119	1681073	11	True				
ANR	1681721	CallExpression	"set_src_position ( c , & src , & send )"		1681073	0					
ANR	1681722	Callee	set_src_position		1681073	0					
ANR	1681723	Identifier	set_src_position		1681073	0					
ANR	1681724	ArgumentList	c		1681073	1					
ANR	1681725	Argument	c		1681073	0					
ANR	1681726	Identifier	c		1681073	0					
ANR	1681727	Argument	& src		1681073	1					
ANR	1681728	UnaryOperationExpression	& src		1681073	0					
ANR	1681729	UnaryOperator	&		1681073	0					
ANR	1681730	Identifier	src		1681073	1					
ANR	1681731	Argument	& send		1681073	2					
ANR	1681732	UnaryOperationExpression	& send		1681073	0					
ANR	1681733	UnaryOperator	&		1681073	0					
ANR	1681734	Identifier	send		1681073	1					
ANR	1681735	Label	case 7 :	185:16:3138:3144	1681073	12	True				
ANR	1681736	IfStatement	if ( src + offset + c -> width + 4 > send )		1681073	13					
ANR	1681737	Condition	src + offset + c -> width + 4 > send	187:24:3171:3204	1681073	0	True				
ANR	1681738	RelationalExpression	src + offset + c -> width + 4 > send		1681073	0		>			
ANR	1681739	AdditiveExpression	src + offset + c -> width + 4		1681073	0		+			
ANR	1681740	Identifier	src		1681073	0					
ANR	1681741	AdditiveExpression	offset + c -> width + 4		1681073	1		+			
ANR	1681742	Identifier	offset		1681073	0					
ANR	1681743	AdditiveExpression	c -> width + 4		1681073	1		+			
ANR	1681744	PtrMemberAccess	c -> width		1681073	0					
ANR	1681745	Identifier	c		1681073	0					
ANR	1681746	Identifier	width		1681073	1					
ANR	1681747	PrimaryExpression	4		1681073	1					
ANR	1681748	Identifier	send		1681073	1					
ANR	1681749	ReturnStatement	return AVERROR_INVALIDDATA ;	189:24:3232:3258	1681073	1	True				
ANR	1681750	Identifier	AVERROR_INVALIDDATA		1681073	0					
ANR	1681751	ExpressionStatement	mask = bytestream2_get_byte ( & c -> gb )	191:20:3281:3316	1681073	14	True				
ANR	1681752	AssignmentExpression	mask = bytestream2_get_byte ( & c -> gb )		1681073	0		=			
ANR	1681753	Identifier	mask		1681073	0					
ANR	1681754	CallExpression	bytestream2_get_byte ( & c -> gb )		1681073	1					
ANR	1681755	Callee	bytestream2_get_byte		1681073	0					
ANR	1681756	Identifier	bytestream2_get_byte		1681073	0					
ANR	1681757	ArgumentList	& c -> gb		1681073	1					
ANR	1681758	Argument	& c -> gb		1681073	0					
ANR	1681759	UnaryOperationExpression	& c -> gb		1681073	0					
ANR	1681760	UnaryOperator	&		1681073	0					
ANR	1681761	PtrMemberAccess	c -> gb		1681073	1					
ANR	1681762	Identifier	c		1681073	0					
ANR	1681763	Identifier	gb		1681073	1					
ANR	1681764	ExpressionStatement	"copy_src_mask ( dst + offset , c -> width , mask , src + offset )"	193:20:3339:3396	1681073	15	True				
ANR	1681765	CallExpression	"copy_src_mask ( dst + offset , c -> width , mask , src + offset )"		1681073	0					
ANR	1681766	Callee	copy_src_mask		1681073	0					
ANR	1681767	Identifier	copy_src_mask		1681073	0					
ANR	1681768	ArgumentList	dst + offset		1681073	1					
ANR	1681769	Argument	dst + offset		1681073	0					
ANR	1681770	AdditiveExpression	dst + offset		1681073	0		+			
ANR	1681771	Identifier	dst		1681073	0					
ANR	1681772	Identifier	offset		1681073	1					
ANR	1681773	Argument	c -> width		1681073	1					
ANR	1681774	PtrMemberAccess	c -> width		1681073	0					
ANR	1681775	Identifier	c		1681073	0					
ANR	1681776	Identifier	width		1681073	1					
ANR	1681777	Argument	mask		1681073	2					
ANR	1681778	Identifier	mask		1681073	0					
ANR	1681779	Argument	src + offset		1681073	3					
ANR	1681780	AdditiveExpression	src + offset		1681073	0		+			
ANR	1681781	Identifier	src		1681073	0					
ANR	1681782	Identifier	offset		1681073	1					
ANR	1681783	BreakStatement	break ;	195:20:3419:3424	1681073	16	True				
ANR	1681784	ReturnStatement	return 0 ;	205:4:3478:3486	1681073	16	True				
ANR	1681785	PrimaryExpression	0		1681073	0					
ANR	1681786	ReturnType	static int		1681073	1					
ANR	1681787	Identifier	decode_0		1681073	2					
ANR	1681788	ParameterList	"PAFVideoDecContext * c , uint8_t * pkt , uint8_t code"		1681073	3					
ANR	1681789	Parameter	PAFVideoDecContext * c	1:20:20:40	1681073	0	True				
ANR	1681790	ParameterType	PAFVideoDecContext *		1681073	0					
ANR	1681791	Identifier	c		1681073	1					
ANR	1681792	Parameter	uint8_t * pkt	1:43:43:54	1681073	1	True				
ANR	1681793	ParameterType	uint8_t *		1681073	0					
ANR	1681794	Identifier	pkt		1681073	1					
ANR	1681795	Parameter	uint8_t code	1:57:57:68	1681073	2	True				
ANR	1681796	ParameterType	uint8_t		1681073	0					
ANR	1681797	Identifier	code		1681073	1					
ANR	1681798	CFGEntryNode	ENTRY		1681073		True				
ANR	1681799	CFGExitNode	EXIT		1681073		True				
ANR	1681800	Symbol	* op		1681073						
ANR	1681801	Symbol	c -> current_frame		1681073						
ANR	1681802	Symbol	* block_sequences		1681073						
ANR	1681803	Symbol	align		1681073						
ANR	1681804	Symbol	opcode		1681073						
ANR	1681805	Symbol	c -> width		1681073						
ANR	1681806	Symbol	& send		1681073						
ANR	1681807	Symbol	* opcodes		1681073						
ANR	1681808	Symbol	val		1681073						
ANR	1681809	Symbol	* c -> current_frame		1681073						
ANR	1681810	Symbol	bytestream2_get_le16		1681073						
ANR	1681811	Symbol	offset		1681073						
ANR	1681812	Symbol	* * c		1681073						
ANR	1681813	Symbol	block_sequences		1681073						
ANR	1681814	Symbol	* * opcode		1681073						
ANR	1681815	Symbol	& c -> gb		1681073						
ANR	1681816	Symbol	page		1681073						
ANR	1681817	Symbol	send		1681073						
ANR	1681818	Symbol	code		1681073						
ANR	1681819	Symbol	color		1681073						
ANR	1681820	Symbol	dst		1681073						
ANR	1681821	Symbol	& src		1681073						
ANR	1681822	Symbol	opcode_size		1681073						
ANR	1681823	Symbol	c -> height		1681073						
ANR	1681824	Symbol	pkt		1681073						
ANR	1681825	Symbol	dend		1681073						
ANR	1681826	Symbol	bytestream2_tell		1681073						
ANR	1681827	Symbol	bytestream2_get_bytes_left		1681073						
ANR	1681828	Symbol	mask		1681073						
ANR	1681829	Symbol	bytestream2_get_be16		1681073						
ANR	1681830	Symbol	c -> video_size		1681073						
ANR	1681831	Symbol	op		1681073						
ANR	1681832	Symbol	c -> frame		1681073						
ANR	1681833	Symbol	c		1681073						
ANR	1681834	Symbol	* c -> frame		1681073						
ANR	1681835	Symbol	src		1681073						
ANR	1681836	Symbol	* page		1681073						
ANR	1681837	Symbol	* * block_sequences		1681073						
ANR	1681838	Symbol	i		1681073						
ANR	1681839	Symbol	j		1681073						
ANR	1681840	Symbol	k		1681073						
ANR	1681841	Symbol	* c		1681073						
ANR	1681842	Symbol	c -> frame_size		1681073						
ANR	1681843	Symbol	* k		1681073						
ANR	1681844	Symbol	x		1681073						
ANR	1681845	Symbol	y		1681073						
ANR	1681846	Symbol	AVERROR_INVALIDDATA		1681073						
ANR	1681847	Symbol	opcodes		1681073						
ANR	1681848	Symbol	bytestream2_get_byte		1681073						
ANR	1681849	Symbol	* opcode		1681073						
