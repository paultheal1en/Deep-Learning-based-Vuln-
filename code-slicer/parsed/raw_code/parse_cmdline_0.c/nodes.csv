command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6310200	File	/home/p4ultr4n/workplace/ReVeal/raw_code/parse_cmdline_0.c								
ANR	6310201	Function	parse_cmdline	1:0:0:554							
ANR	6310202	FunctionDef	"parse_cmdline (const char * cmdline , int * pnb_args , char * * args)"		6310201	0					
ANR	6310203	CompoundStatement		5:0:102:554	6310201	0					
ANR	6310204	IdentifierDeclStatement	const char * p ;	7:4:109:122	6310201	0	True				
ANR	6310205	IdentifierDecl	* p		6310201	0					
ANR	6310206	IdentifierDeclType	const char *		6310201	0					
ANR	6310207	Identifier	p		6310201	1					
ANR	6310208	IdentifierDeclStatement	"int nb_args , ret ;"	9:4:129:145	6310201	1	True				
ANR	6310209	IdentifierDecl	nb_args		6310201	0					
ANR	6310210	IdentifierDeclType	int		6310201	0					
ANR	6310211	Identifier	nb_args		6310201	1					
ANR	6310212	IdentifierDecl	ret		6310201	1					
ANR	6310213	IdentifierDeclType	int		6310201	0					
ANR	6310214	Identifier	ret		6310201	1					
ANR	6310215	IdentifierDeclStatement	char buf [ 1024 ] ;	11:4:152:166	6310201	2	True				
ANR	6310216	IdentifierDecl	buf [ 1024 ]		6310201	0					
ANR	6310217	IdentifierDeclType	char [ 1024 ]		6310201	0					
ANR	6310218	Identifier	buf		6310201	1					
ANR	6310219	PrimaryExpression	1024		6310201	2					
ANR	6310220	ExpressionStatement	p = cmdline	15:4:175:186	6310201	3	True				
ANR	6310221	AssignmentExpression	p = cmdline		6310201	0		=			
ANR	6310222	Identifier	p		6310201	0					
ANR	6310223	Identifier	cmdline		6310201	1					
ANR	6310224	ExpressionStatement	nb_args = 0	17:4:193:204	6310201	4	True				
ANR	6310225	AssignmentExpression	nb_args = 0		6310201	0		=			
ANR	6310226	Identifier	nb_args		6310201	0					
ANR	6310227	PrimaryExpression	0		6310201	1					
ANR	6310228	ForStatement	for ( ; ; )		6310201	5					
ANR	6310229	CompoundStatement		15:12:116:116	6310201	0					
ANR	6310230	WhileStatement	while ( qemu_isspace ( * p ) )		6310201	0					
ANR	6310231	Condition	qemu_isspace ( * p )	21:15:237:252	6310201	0	True				
ANR	6310232	CallExpression	qemu_isspace ( * p )		6310201	0					
ANR	6310233	Callee	qemu_isspace		6310201	0					
ANR	6310234	Identifier	qemu_isspace		6310201	0					
ANR	6310235	ArgumentList	* p		6310201	1					
ANR	6310236	Argument	* p		6310201	0					
ANR	6310237	UnaryOperationExpression	* p		6310201	0					
ANR	6310238	UnaryOperator	*		6310201	0					
ANR	6310239	Identifier	p		6310201	1					
ANR	6310240	ExpressionStatement	p ++	23:12:268:271	6310201	1	True				
ANR	6310241	PostIncDecOperationExpression	p ++		6310201	0					
ANR	6310242	Identifier	p		6310201	0					
ANR	6310243	IncDec	++		6310201	1					
ANR	6310244	IfStatement	if ( * p == '\\0' )		6310201	1					
ANR	6310245	Condition	* p == '\\0'	25:12:286:295	6310201	0	True				
ANR	6310246	EqualityExpression	* p == '\\0'		6310201	0		==			
ANR	6310247	UnaryOperationExpression	* p		6310201	0					
ANR	6310248	UnaryOperator	*		6310201	0					
ANR	6310249	Identifier	p		6310201	1					
ANR	6310250	PrimaryExpression	'\\0'		6310201	1					
ANR	6310251	BreakStatement	break ;	27:12:311:316	6310201	1	True				
ANR	6310252	IfStatement	if ( nb_args >= MAX_ARGS )		6310201	2					
ANR	6310253	Condition	nb_args >= MAX_ARGS	29:12:331:349	6310201	0	True				
ANR	6310254	RelationalExpression	nb_args >= MAX_ARGS		6310201	0		>=			
ANR	6310255	Identifier	nb_args		6310201	0					
ANR	6310256	Identifier	MAX_ARGS		6310201	1					
ANR	6310257	BreakStatement	break ;	31:12:365:370	6310201	1	True				
ANR	6310258	ExpressionStatement	"ret = get_str ( buf , sizeof ( buf ) , & p )"	33:8:381:416	6310201	3	True				
ANR	6310259	AssignmentExpression	"ret = get_str ( buf , sizeof ( buf ) , & p )"		6310201	0		=			
ANR	6310260	Identifier	ret		6310201	0					
ANR	6310261	CallExpression	"get_str ( buf , sizeof ( buf ) , & p )"		6310201	1					
ANR	6310262	Callee	get_str		6310201	0					
ANR	6310263	Identifier	get_str		6310201	0					
ANR	6310264	ArgumentList	buf		6310201	1					
ANR	6310265	Argument	buf		6310201	0					
ANR	6310266	Identifier	buf		6310201	0					
ANR	6310267	Argument	sizeof ( buf )		6310201	1					
ANR	6310268	SizeofExpression	sizeof ( buf )		6310201	0					
ANR	6310269	Sizeof	sizeof		6310201	0					
ANR	6310270	SizeofOperand	buf		6310201	1					
ANR	6310271	Argument	& p		6310201	2					
ANR	6310272	UnaryOperationExpression	& p		6310201	0					
ANR	6310273	UnaryOperator	&		6310201	0					
ANR	6310274	Identifier	p		6310201	1					
ANR	6310275	ExpressionStatement	args [ nb_args ] = g_strdup ( buf )	35:8:427:456	6310201	4	True				
ANR	6310276	AssignmentExpression	args [ nb_args ] = g_strdup ( buf )		6310201	0		=			
ANR	6310277	ArrayIndexing	args [ nb_args ]		6310201	0					
ANR	6310278	Identifier	args		6310201	0					
ANR	6310279	Identifier	nb_args		6310201	1					
ANR	6310280	CallExpression	g_strdup ( buf )		6310201	1					
ANR	6310281	Callee	g_strdup		6310201	0					
ANR	6310282	Identifier	g_strdup		6310201	0					
ANR	6310283	ArgumentList	buf		6310201	1					
ANR	6310284	Argument	buf		6310201	0					
ANR	6310285	Identifier	buf		6310201	0					
ANR	6310286	ExpressionStatement	nb_args ++	37:8:467:476	6310201	5	True				
ANR	6310287	PostIncDecOperationExpression	nb_args ++		6310201	0					
ANR	6310288	Identifier	nb_args		6310201	0					
ANR	6310289	IncDec	++		6310201	1					
ANR	6310290	IfStatement	if ( ret < 0 )		6310201	6					
ANR	6310291	Condition	ret < 0	39:12:491:497	6310201	0	True				
ANR	6310292	RelationalExpression	ret < 0		6310201	0		<			
ANR	6310293	Identifier	ret		6310201	0					
ANR	6310294	PrimaryExpression	0		6310201	1					
ANR	6310295	BreakStatement	break ;	41:12:513:518	6310201	1	True				
ANR	6310296	ExpressionStatement	* pnb_args = nb_args	45:4:532:551	6310201	6	True				
ANR	6310297	AssignmentExpression	* pnb_args = nb_args		6310201	0		=			
ANR	6310298	UnaryOperationExpression	* pnb_args		6310201	0					
ANR	6310299	UnaryOperator	*		6310201	0					
ANR	6310300	Identifier	pnb_args		6310201	1					
ANR	6310301	Identifier	nb_args		6310201	1					
ANR	6310302	ReturnType	static void		6310201	1					
ANR	6310303	Identifier	parse_cmdline		6310201	2					
ANR	6310304	ParameterList	"const char * cmdline , int * pnb_args , char * * args"		6310201	3					
ANR	6310305	Parameter	const char * cmdline	1:26:26:44	6310201	0	True				
ANR	6310306	ParameterType	const char *		6310201	0					
ANR	6310307	Identifier	cmdline		6310201	1					
ANR	6310308	Parameter	int * pnb_args	3:25:73:85	6310201	1	True				
ANR	6310309	ParameterType	int *		6310201	0					
ANR	6310310	Identifier	pnb_args		6310201	1					
ANR	6310311	Parameter	char * * args	3:40:88:98	6310201	2	True				
ANR	6310312	ParameterType	char * *		6310201	0					
ANR	6310313	Identifier	args		6310201	1					
ANR	6310314	CFGEntryNode	ENTRY		6310201		True				
ANR	6310315	CFGExitNode	EXIT		6310201		True				
ANR	6310316	InfiniteForNode	true		6310201		True				
ANR	6310317	Symbol	ret		6310201						
ANR	6310318	Symbol	* pnb_args		6310201						
ANR	6310319	Symbol	get_str		6310201						
ANR	6310320	Symbol	* nb_args		6310201						
ANR	6310321	Symbol	MAX_ARGS		6310201						
ANR	6310322	Symbol	pnb_args		6310201						
ANR	6310323	Symbol	qemu_isspace		6310201						
ANR	6310324	Symbol	* args		6310201						
ANR	6310325	Symbol	args		6310201						
ANR	6310326	Symbol	p		6310201						
ANR	6310327	Symbol	buf		6310201						
ANR	6310328	Symbol	cmdline		6310201						
ANR	6310329	Symbol	& p		6310201						
ANR	6310330	Symbol	nb_args		6310201						
ANR	6310331	Symbol	g_strdup		6310201						
ANR	6310332	Symbol	* p		6310201						
