command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6819624	File	/home/p4ultr4n/workplace/ReVeal/raw_code/qbus_find_recursive_0.c								
ANR	6819625	Function	qbus_find_recursive	1:0:0:669							
ANR	6819626	FunctionDef	"qbus_find_recursive (BusState * bus , const char * name , const BusInfo * info)"		6819625	0					
ANR	6819627	CompoundStatement		5:0:130:669	6819625	0					
ANR	6819628	IdentifierDeclStatement	DeviceState * dev ;	7:4:137:153	6819625	0	True				
ANR	6819629	IdentifierDecl	* dev		6819625	0					
ANR	6819630	IdentifierDeclType	DeviceState *		6819625	0					
ANR	6819631	Identifier	dev		6819625	1					
ANR	6819632	IdentifierDeclStatement	"BusState * child , * ret ;"	9:4:160:181	6819625	1	True				
ANR	6819633	IdentifierDecl	* child		6819625	0					
ANR	6819634	IdentifierDeclType	BusState *		6819625	0					
ANR	6819635	Identifier	child		6819625	1					
ANR	6819636	IdentifierDecl	* ret		6819625	1					
ANR	6819637	IdentifierDeclType	BusState *		6819625	0					
ANR	6819638	Identifier	ret		6819625	1					
ANR	6819639	IdentifierDeclStatement	int match = 1 ;	11:4:188:201	6819625	2	True				
ANR	6819640	IdentifierDecl	match = 1		6819625	0					
ANR	6819641	IdentifierDeclType	int		6819625	0					
ANR	6819642	Identifier	match		6819625	1					
ANR	6819643	AssignmentExpression	match = 1		6819625	2		=			
ANR	6819644	Identifier	match		6819625	0					
ANR	6819645	PrimaryExpression	1		6819625	1					
ANR	6819646	IfStatement	"if ( name && ( strcmp ( bus -> name , name ) != 0 ) )"		6819625	3					
ANR	6819647	Condition	"name && ( strcmp ( bus -> name , name ) != 0 )"	15:8:214:251	6819625	0	True				
ANR	6819648	AndExpression	"name && ( strcmp ( bus -> name , name ) != 0 )"		6819625	0		&&			
ANR	6819649	Identifier	name		6819625	0					
ANR	6819650	EqualityExpression	"strcmp ( bus -> name , name ) != 0"		6819625	1		!=			
ANR	6819651	CallExpression	"strcmp ( bus -> name , name )"		6819625	0					
ANR	6819652	Callee	strcmp		6819625	0					
ANR	6819653	Identifier	strcmp		6819625	0					
ANR	6819654	ArgumentList	bus -> name		6819625	1					
ANR	6819655	Argument	bus -> name		6819625	0					
ANR	6819656	PtrMemberAccess	bus -> name		6819625	0					
ANR	6819657	Identifier	bus		6819625	0					
ANR	6819658	Identifier	name		6819625	1					
ANR	6819659	Argument	name		6819625	1					
ANR	6819660	Identifier	name		6819625	0					
ANR	6819661	PrimaryExpression	0		6819625	1					
ANR	6819662	CompoundStatement		11:48:123:123	6819625	1					
ANR	6819663	ExpressionStatement	match = 0	17:8:265:274	6819625	0	True				
ANR	6819664	AssignmentExpression	match = 0		6819625	0		=			
ANR	6819665	Identifier	match		6819625	0					
ANR	6819666	PrimaryExpression	0		6819625	1					
ANR	6819667	IfStatement	if ( info && ( bus -> info != info ) )		6819625	4					
ANR	6819668	Condition	info && ( bus -> info != info )	21:8:292:318	6819625	0	True				
ANR	6819669	AndExpression	info && ( bus -> info != info )		6819625	0		&&			
ANR	6819670	Identifier	info		6819625	0					
ANR	6819671	EqualityExpression	bus -> info != info		6819625	1		!=			
ANR	6819672	PtrMemberAccess	bus -> info		6819625	0					
ANR	6819673	Identifier	bus		6819625	0					
ANR	6819674	Identifier	info		6819625	1					
ANR	6819675	Identifier	info		6819625	1					
ANR	6819676	CompoundStatement		17:37:190:190	6819625	1					
ANR	6819677	ExpressionStatement	match = 0	23:8:332:341	6819625	0	True				
ANR	6819678	AssignmentExpression	match = 0		6819625	0		=			
ANR	6819679	Identifier	match		6819625	0					
ANR	6819680	PrimaryExpression	0		6819625	1					
ANR	6819681	IfStatement	if ( match )		6819625	5					
ANR	6819682	Condition	match	27:8:359:363	6819625	0	True				
ANR	6819683	Identifier	match		6819625	0					
ANR	6819684	CompoundStatement		23:15:235:235	6819625	1					
ANR	6819685	ReturnStatement	return bus ;	29:8:377:387	6819625	0	True				
ANR	6819686	Identifier	bus		6819625	0					
ANR	6819687	Statement	LIST_FOREACH	35:4:403:414	6819625	6	True				
ANR	6819688	Statement	(	35:16:415:415	6819625	7	True				
ANR	6819689	Statement	dev	35:17:416:418	6819625	8	True				
ANR	6819690	Statement	","	35:20:419:419	6819625	9	True				
ANR	6819691	Statement	&	35:22:421:421	6819625	10	True				
ANR	6819692	Statement	bus	35:23:422:424	6819625	11	True				
ANR	6819693	Statement	->	35:26:425:426	6819625	12	True				
ANR	6819694	Statement	children	35:28:427:434	6819625	13	True				
ANR	6819695	Statement	","	35:36:435:435	6819625	14	True				
ANR	6819696	Statement	sibling	35:38:437:443	6819625	15	True				
ANR	6819697	Statement	)	35:45:444:444	6819625	16	True				
ANR	6819698	CompoundStatement		31:47:315:315	6819625	17					
ANR	6819699	Statement	LIST_FOREACH	37:8:457:468	6819625	0	True				
ANR	6819700	Statement	(	37:20:469:469	6819625	1	True				
ANR	6819701	Statement	child	37:21:470:474	6819625	2	True				
ANR	6819702	Statement	","	37:26:475:475	6819625	3	True				
ANR	6819703	Statement	&	37:28:477:477	6819625	4	True				
ANR	6819704	Statement	dev	37:29:478:480	6819625	5	True				
ANR	6819705	Statement	->	37:32:481:482	6819625	6	True				
ANR	6819706	Statement	child_bus	37:34:483:491	6819625	7	True				
ANR	6819707	Statement	","	37:43:492:492	6819625	8	True				
ANR	6819708	Statement	sibling	37:45:494:500	6819625	9	True				
ANR	6819709	Statement	)	37:52:501:501	6819625	10	True				
ANR	6819710	CompoundStatement		33:54:372:372	6819625	11					
ANR	6819711	ExpressionStatement	"ret = qbus_find_recursive ( child , name , info )"	39:12:518:562	6819625	0	True				
ANR	6819712	AssignmentExpression	"ret = qbus_find_recursive ( child , name , info )"		6819625	0		=			
ANR	6819713	Identifier	ret		6819625	0					
ANR	6819714	CallExpression	"qbus_find_recursive ( child , name , info )"		6819625	1					
ANR	6819715	Callee	qbus_find_recursive		6819625	0					
ANR	6819716	Identifier	qbus_find_recursive		6819625	0					
ANR	6819717	ArgumentList	child		6819625	1					
ANR	6819718	Argument	child		6819625	0					
ANR	6819719	Identifier	child		6819625	0					
ANR	6819720	Argument	name		6819625	1					
ANR	6819721	Identifier	name		6819625	0					
ANR	6819722	Argument	info		6819625	2					
ANR	6819723	Identifier	info		6819625	0					
ANR	6819724	IfStatement	if ( ret )		6819625	1					
ANR	6819725	Condition	ret	41:16:581:583	6819625	0	True				
ANR	6819726	Identifier	ret		6819625	0					
ANR	6819727	CompoundStatement		37:21:455:455	6819625	1					
ANR	6819728	ReturnStatement	return ret ;	43:16:605:615	6819625	0	True				
ANR	6819729	Identifier	ret		6819625	0					
ANR	6819730	ReturnStatement	return NULL ;	51:4:655:666	6819625	18	True				
ANR	6819731	Identifier	NULL		6819625	0					
ANR	6819732	ReturnType	static BusState *		6819625	1					
ANR	6819733	Identifier	qbus_find_recursive		6819625	2					
ANR	6819734	ParameterList	"BusState * bus , const char * name , const BusInfo * info"		6819625	3					
ANR	6819735	Parameter	BusState * bus	1:37:37:49	6819625	0	True				
ANR	6819736	ParameterType	BusState *		6819625	0					
ANR	6819737	Identifier	bus		6819625	1					
ANR	6819738	Parameter	const char * name	1:52:52:67	6819625	1	True				
ANR	6819739	ParameterType	const char *		6819625	0					
ANR	6819740	Identifier	name		6819625	1					
ANR	6819741	Parameter	const BusInfo * info	3:37:108:126	6819625	2	True				
ANR	6819742	ParameterType	const BusInfo *		6819625	0					
ANR	6819743	Identifier	info		6819625	1					
ANR	6819744	CFGEntryNode	ENTRY		6819625		True				
ANR	6819745	CFGExitNode	EXIT		6819625		True				
ANR	6819746	Symbol	ret		6819625						
ANR	6819747	Symbol	strcmp		6819625						
ANR	6819748	Symbol	bus		6819625						
ANR	6819749	Symbol	bus -> name		6819625						
ANR	6819750	Symbol	NULL		6819625						
ANR	6819751	Symbol	bus -> info		6819625						
ANR	6819752	Symbol	match		6819625						
ANR	6819753	Symbol	dev		6819625						
ANR	6819754	Symbol	* bus		6819625						
ANR	6819755	Symbol	name		6819625						
ANR	6819756	Symbol	qbus_find_recursive		6819625						
ANR	6819757	Symbol	info		6819625						
ANR	6819758	Symbol	child		6819625						
