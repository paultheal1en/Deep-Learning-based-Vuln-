command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1252673	File	/home/p4ultr4n/workplace/ReVeal/raw_code/check_directory_consistency_1.c								
ANR	1252674	Function	check_directory_consistency	1:0:0:3738							
ANR	1252675	FunctionDef	"check_directory_consistency (BDRVVVFATState * s , int cluster_num , const char * path)"		1252674	0					
ANR	1252676	CompoundStatement		5:0:96:3738	1252674	0					
ANR	1252677	IdentifierDeclStatement	int ret = 0 ;	7:4:103:114	1252674	0	True				
ANR	1252678	IdentifierDecl	ret = 0		1252674	0					
ANR	1252679	IdentifierDeclType	int		1252674	0					
ANR	1252680	Identifier	ret		1252674	1					
ANR	1252681	AssignmentExpression	ret = 0		1252674	2		=			
ANR	1252682	Identifier	ret		1252674	0					
ANR	1252683	PrimaryExpression	0		1252674	1					
ANR	1252684	IdentifierDeclStatement	unsigned char * cluster = qemu_malloc ( s -> cluster_size ) ;	9:4:121:174	1252674	1	True				
ANR	1252685	IdentifierDecl	* cluster = qemu_malloc ( s -> cluster_size )		1252674	0					
ANR	1252686	IdentifierDeclType	unsigned char *		1252674	0					
ANR	1252687	Identifier	cluster		1252674	1					
ANR	1252688	AssignmentExpression	* cluster = qemu_malloc ( s -> cluster_size )		1252674	2		=			
ANR	1252689	Identifier	cluster		1252674	0					
ANR	1252690	CallExpression	qemu_malloc ( s -> cluster_size )		1252674	1					
ANR	1252691	Callee	qemu_malloc		1252674	0					
ANR	1252692	Identifier	qemu_malloc		1252674	0					
ANR	1252693	ArgumentList	s -> cluster_size		1252674	1					
ANR	1252694	Argument	s -> cluster_size		1252674	0					
ANR	1252695	PtrMemberAccess	s -> cluster_size		1252674	0					
ANR	1252696	Identifier	s		1252674	0					
ANR	1252697	Identifier	cluster_size		1252674	1					
ANR	1252698	IdentifierDeclStatement	direntry_t * direntries = ( direntry_t * ) cluster ;	11:4:181:226	1252674	2	True				
ANR	1252699	IdentifierDecl	* direntries = ( direntry_t * ) cluster		1252674	0					
ANR	1252700	IdentifierDeclType	direntry_t *		1252674	0					
ANR	1252701	Identifier	direntries		1252674	1					
ANR	1252702	AssignmentExpression	* direntries = ( direntry_t * ) cluster		1252674	2		=			
ANR	1252703	Identifier	direntries		1252674	0					
ANR	1252704	CastExpression	( direntry_t * ) cluster		1252674	1					
ANR	1252705	CastTarget	direntry_t *		1252674	0					
ANR	1252706	Identifier	cluster		1252674	1					
ANR	1252707	IdentifierDeclStatement	"mapping_t * mapping = find_mapping_for_cluster ( s , cluster_num ) ;"	13:4:233:294	1252674	3	True				
ANR	1252708	IdentifierDecl	"* mapping = find_mapping_for_cluster ( s , cluster_num )"		1252674	0					
ANR	1252709	IdentifierDeclType	mapping_t *		1252674	0					
ANR	1252710	Identifier	mapping		1252674	1					
ANR	1252711	AssignmentExpression	"* mapping = find_mapping_for_cluster ( s , cluster_num )"		1252674	2		=			
ANR	1252712	Identifier	mapping		1252674	0					
ANR	1252713	CallExpression	"find_mapping_for_cluster ( s , cluster_num )"		1252674	1					
ANR	1252714	Callee	find_mapping_for_cluster		1252674	0					
ANR	1252715	Identifier	find_mapping_for_cluster		1252674	0					
ANR	1252716	ArgumentList	s		1252674	1					
ANR	1252717	Argument	s		1252674	0					
ANR	1252718	Identifier	s		1252674	0					
ANR	1252719	Argument	cluster_num		1252674	1					
ANR	1252720	Identifier	cluster_num		1252674	0					
ANR	1252721	IdentifierDeclStatement	long_file_name lfn ;	17:4:303:321	1252674	4	True				
ANR	1252722	IdentifierDecl	lfn		1252674	0					
ANR	1252723	IdentifierDeclType	long_file_name		1252674	0					
ANR	1252724	Identifier	lfn		1252674	1					
ANR	1252725	IdentifierDeclStatement	int path_len = strlen ( path ) ;	19:4:328:355	1252674	5	True				
ANR	1252726	IdentifierDecl	path_len = strlen ( path )		1252674	0					
ANR	1252727	IdentifierDeclType	int		1252674	0					
ANR	1252728	Identifier	path_len		1252674	1					
ANR	1252729	AssignmentExpression	path_len = strlen ( path )		1252674	2		=			
ANR	1252730	Identifier	path_len		1252674	0					
ANR	1252731	CallExpression	strlen ( path )		1252674	1					
ANR	1252732	Callee	strlen		1252674	0					
ANR	1252733	Identifier	strlen		1252674	0					
ANR	1252734	ArgumentList	path		1252674	1					
ANR	1252735	Argument	path		1252674	0					
ANR	1252736	Identifier	path		1252674	0					
ANR	1252737	IdentifierDeclStatement	char path2 [ PATH_MAX ] ;	21:4:362:382	1252674	6	True				
ANR	1252738	IdentifierDecl	path2 [ PATH_MAX ]		1252674	0					
ANR	1252739	IdentifierDeclType	char [ PATH_MAX ]		1252674	0					
ANR	1252740	Identifier	path2		1252674	1					
ANR	1252741	Identifier	PATH_MAX		1252674	2					
ANR	1252742	ExpressionStatement	assert ( path_len < PATH_MAX )	25:4:391:418	1252674	7	True				
ANR	1252743	CallExpression	assert ( path_len < PATH_MAX )		1252674	0					
ANR	1252744	Callee	assert		1252674	0					
ANR	1252745	Identifier	assert		1252674	0					
ANR	1252746	ArgumentList	path_len < PATH_MAX		1252674	1					
ANR	1252747	Argument	path_len < PATH_MAX		1252674	0					
ANR	1252748	RelationalExpression	path_len < PATH_MAX		1252674	0		<			
ANR	1252749	Identifier	path_len		1252674	0					
ANR	1252750	Identifier	PATH_MAX		1252674	1					
ANR	1252751	ExpressionStatement	"pstrcpy ( path2 , sizeof ( path2 ) , path )"	27:4:454:489	1252674	8	True				
ANR	1252752	CallExpression	"pstrcpy ( path2 , sizeof ( path2 ) , path )"		1252674	0					
ANR	1252753	Callee	pstrcpy		1252674	0					
ANR	1252754	Identifier	pstrcpy		1252674	0					
ANR	1252755	ArgumentList	path2		1252674	1					
ANR	1252756	Argument	path2		1252674	0					
ANR	1252757	Identifier	path2		1252674	0					
ANR	1252758	Argument	sizeof ( path2 )		1252674	1					
ANR	1252759	SizeofExpression	sizeof ( path2 )		1252674	0					
ANR	1252760	Sizeof	sizeof		1252674	0					
ANR	1252761	SizeofOperand	path2		1252674	1					
ANR	1252762	Argument	path		1252674	2					
ANR	1252763	Identifier	path		1252674	0					
ANR	1252764	ExpressionStatement	path2 [ path_len ] = '/'	29:4:496:517	1252674	9	True				
ANR	1252765	AssignmentExpression	path2 [ path_len ] = '/'		1252674	0		=			
ANR	1252766	ArrayIndexing	path2 [ path_len ]		1252674	0					
ANR	1252767	Identifier	path2		1252674	0					
ANR	1252768	Identifier	path_len		1252674	1					
ANR	1252769	PrimaryExpression	'/'		1252674	1					
ANR	1252770	ExpressionStatement	path2 [ path_len + 1 ] = '\\0'	31:4:524:550	1252674	10	True				
ANR	1252771	AssignmentExpression	path2 [ path_len + 1 ] = '\\0'		1252674	0		=			
ANR	1252772	ArrayIndexing	path2 [ path_len + 1 ]		1252674	0					
ANR	1252773	Identifier	path2		1252674	0					
ANR	1252774	AdditiveExpression	path_len + 1		1252674	1		+			
ANR	1252775	Identifier	path_len		1252674	0					
ANR	1252776	PrimaryExpression	1		1252674	1					
ANR	1252777	PrimaryExpression	'\\0'		1252674	1					
ANR	1252778	IfStatement	if ( mapping )		1252674	11					
ANR	1252779	Condition	mapping	35:8:563:569	1252674	0	True				
ANR	1252780	Identifier	mapping		1252674	0					
ANR	1252781	CompoundStatement		35:1:533:575	1252674	1					
ANR	1252782	IdentifierDeclStatement	const char * basename = get_basename ( mapping -> path ) ;	37:1:576:626	1252674	0	True				
ANR	1252783	IdentifierDecl	* basename = get_basename ( mapping -> path )		1252674	0					
ANR	1252784	IdentifierDeclType	const char *		1252674	0					
ANR	1252785	Identifier	basename		1252674	1					
ANR	1252786	AssignmentExpression	* basename = get_basename ( mapping -> path )		1252674	2		=			
ANR	1252787	Identifier	basename		1252674	0					
ANR	1252788	CallExpression	get_basename ( mapping -> path )		1252674	1					
ANR	1252789	Callee	get_basename		1252674	0					
ANR	1252790	Identifier	get_basename		1252674	0					
ANR	1252791	ArgumentList	mapping -> path		1252674	1					
ANR	1252792	Argument	mapping -> path		1252674	0					
ANR	1252793	PtrMemberAccess	mapping -> path		1252674	0					
ANR	1252794	Identifier	mapping		1252674	0					
ANR	1252795	Identifier	path		1252674	1					
ANR	1252796	IdentifierDeclStatement	const char * basename2 = get_basename ( path ) ;	39:1:630:672	1252674	1	True				
ANR	1252797	IdentifierDecl	* basename2 = get_basename ( path )		1252674	0					
ANR	1252798	IdentifierDeclType	const char *		1252674	0					
ANR	1252799	Identifier	basename2		1252674	1					
ANR	1252800	AssignmentExpression	* basename2 = get_basename ( path )		1252674	2		=			
ANR	1252801	Identifier	basename2		1252674	0					
ANR	1252802	CallExpression	get_basename ( path )		1252674	1					
ANR	1252803	Callee	get_basename		1252674	0					
ANR	1252804	Identifier	get_basename		1252674	0					
ANR	1252805	ArgumentList	path		1252674	1					
ANR	1252806	Argument	path		1252674	0					
ANR	1252807	Identifier	path		1252674	0					
ANR	1252808	ExpressionStatement	assert ( mapping -> mode & MODE_DIRECTORY )	43:1:678:716	1252674	2	True				
ANR	1252809	CallExpression	assert ( mapping -> mode & MODE_DIRECTORY )		1252674	0					
ANR	1252810	Callee	assert		1252674	0					
ANR	1252811	Identifier	assert		1252674	0					
ANR	1252812	ArgumentList	mapping -> mode & MODE_DIRECTORY		1252674	1					
ANR	1252813	Argument	mapping -> mode & MODE_DIRECTORY		1252674	0					
ANR	1252814	BitAndExpression	mapping -> mode & MODE_DIRECTORY		1252674	0		&			
ANR	1252815	PtrMemberAccess	mapping -> mode		1252674	0					
ANR	1252816	Identifier	mapping		1252674	0					
ANR	1252817	Identifier	mode		1252674	1					
ANR	1252818	Identifier	MODE_DIRECTORY		1252674	1					
ANR	1252819	ExpressionStatement	assert ( mapping -> mode & MODE_DELETED )	47:1:722:758	1252674	3	True				
ANR	1252820	CallExpression	assert ( mapping -> mode & MODE_DELETED )		1252674	0					
ANR	1252821	Callee	assert		1252674	0					
ANR	1252822	Identifier	assert		1252674	0					
ANR	1252823	ArgumentList	mapping -> mode & MODE_DELETED		1252674	1					
ANR	1252824	Argument	mapping -> mode & MODE_DELETED		1252674	0					
ANR	1252825	BitAndExpression	mapping -> mode & MODE_DELETED		1252674	0		&			
ANR	1252826	PtrMemberAccess	mapping -> mode		1252674	0					
ANR	1252827	Identifier	mapping		1252674	0					
ANR	1252828	Identifier	mode		1252674	1					
ANR	1252829	Identifier	MODE_DELETED		1252674	1					
ANR	1252830	ExpressionStatement	mapping -> mode &= ~MODE_DELETED	49:1:762:792	1252674	4	True				
ANR	1252831	AssignmentExpression	mapping -> mode &= ~MODE_DELETED		1252674	0		&=			
ANR	1252832	PtrMemberAccess	mapping -> mode		1252674	0					
ANR	1252833	Identifier	mapping		1252674	0					
ANR	1252834	Identifier	mode		1252674	1					
ANR	1252835	Identifier	~MODE_DELETED		1252674	1					
ANR	1252836	IfStatement	"if ( strcmp ( basename , basename2 ) )"		1252674	5					
ANR	1252837	Condition	"strcmp ( basename , basename2 )"	53:5:802:828	1252674	0	True				
ANR	1252838	CallExpression	"strcmp ( basename , basename2 )"		1252674	0					
ANR	1252839	Callee	strcmp		1252674	0					
ANR	1252840	Identifier	strcmp		1252674	0					
ANR	1252841	ArgumentList	basename		1252674	1					
ANR	1252842	Argument	basename		1252674	0					
ANR	1252843	Identifier	basename		1252674	0					
ANR	1252844	Argument	basename2		1252674	1					
ANR	1252845	Identifier	basename2		1252674	0					
ANR	1252846	ExpressionStatement	"schedule_rename ( s , cluster_num , strdup ( path ) )"	55:5:837:882	1252674	1	True				
ANR	1252847	CallExpression	"schedule_rename ( s , cluster_num , strdup ( path ) )"		1252674	0					
ANR	1252848	Callee	schedule_rename		1252674	0					
ANR	1252849	Identifier	schedule_rename		1252674	0					
ANR	1252850	ArgumentList	s		1252674	1					
ANR	1252851	Argument	s		1252674	0					
ANR	1252852	Identifier	s		1252674	0					
ANR	1252853	Argument	cluster_num		1252674	1					
ANR	1252854	Identifier	cluster_num		1252674	0					
ANR	1252855	Argument	strdup ( path )		1252674	2					
ANR	1252856	CallExpression	strdup ( path )		1252674	0					
ANR	1252857	Callee	strdup		1252674	0					
ANR	1252858	Identifier	strdup		1252674	0					
ANR	1252859	ArgumentList	path		1252674	1					
ANR	1252860	Argument	path		1252674	0					
ANR	1252861	Identifier	path		1252674	0					
ANR	1252862	ElseStatement	else		1252674	0					
ANR	1252863	ExpressionStatement	"schedule_mkdir ( s , cluster_num , strdup ( path ) )"	61:1:920:964	1252674	0	True				
ANR	1252864	CallExpression	"schedule_mkdir ( s , cluster_num , strdup ( path ) )"		1252674	0					
ANR	1252865	Callee	schedule_mkdir		1252674	0					
ANR	1252866	Identifier	schedule_mkdir		1252674	0					
ANR	1252867	ArgumentList	s		1252674	1					
ANR	1252868	Argument	s		1252674	0					
ANR	1252869	Identifier	s		1252674	0					
ANR	1252870	Argument	cluster_num		1252674	1					
ANR	1252871	Identifier	cluster_num		1252674	0					
ANR	1252872	Argument	strdup ( path )		1252674	2					
ANR	1252873	CallExpression	strdup ( path )		1252674	0					
ANR	1252874	Callee	strdup		1252674	0					
ANR	1252875	Identifier	strdup		1252674	0					
ANR	1252876	ArgumentList	path		1252674	1					
ANR	1252877	Argument	path		1252674	0					
ANR	1252878	Identifier	path		1252674	0					
ANR	1252879	ExpressionStatement	lfn_init ( & lfn )	65:4:973:987	1252674	12	True				
ANR	1252880	CallExpression	lfn_init ( & lfn )		1252674	0					
ANR	1252881	Callee	lfn_init		1252674	0					
ANR	1252882	Identifier	lfn_init		1252674	0					
ANR	1252883	ArgumentList	& lfn		1252674	1					
ANR	1252884	Argument	& lfn		1252674	0					
ANR	1252885	UnaryOperationExpression	& lfn		1252674	0					
ANR	1252886	UnaryOperator	&		1252674	0					
ANR	1252887	Identifier	lfn		1252674	1					
ANR	1252888	DoStatement	do		1252674	13					
ANR	1252889	CompoundStatement		67:1:913:927	1252674	0					
ANR	1252890	IdentifierDeclStatement	int i ;	69:1:1001:1006	1252674	0	True				
ANR	1252891	IdentifierDecl	i		1252674	0					
ANR	1252892	IdentifierDeclType	int		1252674	0					
ANR	1252893	Identifier	i		1252674	1					
ANR	1252894	IdentifierDeclStatement	int subret = 0 ;	71:1:1010:1024	1252674	1	True				
ANR	1252895	IdentifierDecl	subret = 0		1252674	0					
ANR	1252896	IdentifierDeclType	int		1252674	0					
ANR	1252897	Identifier	subret		1252674	1					
ANR	1252898	AssignmentExpression	subret = 0		1252674	2		=			
ANR	1252899	Identifier	subret		1252674	0					
ANR	1252900	PrimaryExpression	0		1252674	1					
ANR	1252901	ExpressionStatement	ret ++	75:1:1030:1035	1252674	2	True				
ANR	1252902	PostIncDecOperationExpression	ret ++		1252674	0					
ANR	1252903	Identifier	ret		1252674	0					
ANR	1252904	IncDec	++		1252674	1					
ANR	1252905	IfStatement	if ( s -> used_clusters [ cluster_num ] & USED_ANY )		1252674	3					
ANR	1252906	Condition	s -> used_clusters [ cluster_num ] & USED_ANY	79:5:1045:1084	1252674	0	True				
ANR	1252907	BitAndExpression	s -> used_clusters [ cluster_num ] & USED_ANY		1252674	0		&			
ANR	1252908	ArrayIndexing	s -> used_clusters [ cluster_num ]		1252674	0					
ANR	1252909	PtrMemberAccess	s -> used_clusters		1252674	0					
ANR	1252910	Identifier	s		1252674	0					
ANR	1252911	Identifier	used_clusters		1252674	1					
ANR	1252912	Identifier	cluster_num		1252674	1					
ANR	1252913	Identifier	USED_ANY		1252674	1					
ANR	1252914	CompoundStatement		75:47:990:990	1252674	1					
ANR	1252915	ExpressionStatement	"fprintf ( stderr , ""cluster %d used more than once\\n"" , ( int ) cluster_num )"	81:5:1095:1164	1252674	0	True				
ANR	1252916	CallExpression	"fprintf ( stderr , ""cluster %d used more than once\\n"" , ( int ) cluster_num )"		1252674	0					
ANR	1252917	Callee	fprintf		1252674	0					
ANR	1252918	Identifier	fprintf		1252674	0					
ANR	1252919	ArgumentList	stderr		1252674	1					
ANR	1252920	Argument	stderr		1252674	0					
ANR	1252921	Identifier	stderr		1252674	0					
ANR	1252922	Argument	"""cluster %d used more than once\\n"""		1252674	1					
ANR	1252923	PrimaryExpression	"""cluster %d used more than once\\n"""		1252674	0					
ANR	1252924	Argument	( int ) cluster_num		1252674	2					
ANR	1252925	CastExpression	( int ) cluster_num		1252674	0					
ANR	1252926	CastTarget	int		1252674	0					
ANR	1252927	Identifier	cluster_num		1252674	1					
ANR	1252928	ReturnStatement	return 0 ;	83:5:1172:1180	1252674	1	True				
ANR	1252929	PrimaryExpression	0		1252674	0					
ANR	1252930	ExpressionStatement	s -> used_clusters [ cluster_num ] = USED_DIRECTORY	87:1:1188:1234	1252674	4	True				
ANR	1252931	AssignmentExpression	s -> used_clusters [ cluster_num ] = USED_DIRECTORY		1252674	0		=			
ANR	1252932	ArrayIndexing	s -> used_clusters [ cluster_num ]		1252674	0					
ANR	1252933	PtrMemberAccess	s -> used_clusters		1252674	0					
ANR	1252934	Identifier	s		1252674	0					
ANR	1252935	Identifier	used_clusters		1252674	1					
ANR	1252936	Identifier	cluster_num		1252674	1					
ANR	1252937	Identifier	USED_DIRECTORY		1252674	1					
ANR	1252938	ExpressionStatement	"DLOG ( fprintf ( stderr , ""read cluster %d (sector %d)\\n"" , ( int ) cluster_num , ( int ) cluster2sector ( s , cluster_num ) ) )"	91:0:1239:1348	1252674	5	True				
ANR	1252939	CallExpression	"DLOG ( fprintf ( stderr , ""read cluster %d (sector %d)\\n"" , ( int ) cluster_num , ( int ) cluster2sector ( s , cluster_num ) ) )"		1252674	0					
ANR	1252940	Callee	DLOG		1252674	0					
ANR	1252941	Identifier	DLOG		1252674	0					
ANR	1252942	ArgumentList	"fprintf ( stderr , ""read cluster %d (sector %d)\\n"" , ( int ) cluster_num , ( int ) cluster2sector ( s , cluster_num ) )"		1252674	1					
ANR	1252943	Argument	"fprintf ( stderr , ""read cluster %d (sector %d)\\n"" , ( int ) cluster_num , ( int ) cluster2sector ( s , cluster_num ) )"		1252674	0					
ANR	1252944	CallExpression	"fprintf ( stderr , ""read cluster %d (sector %d)\\n"" , ( int ) cluster_num , ( int ) cluster2sector ( s , cluster_num ) )"		1252674	0					
ANR	1252945	Callee	fprintf		1252674	0					
ANR	1252946	Identifier	fprintf		1252674	0					
ANR	1252947	ArgumentList	stderr		1252674	1					
ANR	1252948	Argument	stderr		1252674	0					
ANR	1252949	Identifier	stderr		1252674	0					
ANR	1252950	Argument	"""read cluster %d (sector %d)\\n"""		1252674	1					
ANR	1252951	PrimaryExpression	"""read cluster %d (sector %d)\\n"""		1252674	0					
ANR	1252952	Argument	( int ) cluster_num		1252674	2					
ANR	1252953	CastExpression	( int ) cluster_num		1252674	0					
ANR	1252954	CastTarget	int		1252674	0					
ANR	1252955	Identifier	cluster_num		1252674	1					
ANR	1252956	Argument	"( int ) cluster2sector ( s , cluster_num )"		1252674	3					
ANR	1252957	CastExpression	"( int ) cluster2sector ( s , cluster_num )"		1252674	0					
ANR	1252958	CastTarget	int		1252674	0					
ANR	1252959	CallExpression	"cluster2sector ( s , cluster_num )"		1252674	1					
ANR	1252960	Callee	cluster2sector		1252674	0					
ANR	1252961	Identifier	cluster2sector		1252674	0					
ANR	1252962	ArgumentList	s		1252674	1					
ANR	1252963	Argument	s		1252674	0					
ANR	1252964	Identifier	s		1252674	0					
ANR	1252965	Argument	cluster_num		1252674	1					
ANR	1252966	Identifier	cluster_num		1252674	0					
ANR	1252967	ExpressionStatement	"subret = vvfat_read ( s -> bs , cluster2sector ( s , cluster_num ) , cluster , s -> sectors_per_cluster )"	93:1:1352:1446	1252674	6	True				
ANR	1252968	AssignmentExpression	"subret = vvfat_read ( s -> bs , cluster2sector ( s , cluster_num ) , cluster , s -> sectors_per_cluster )"		1252674	0		=			
ANR	1252969	Identifier	subret		1252674	0					
ANR	1252970	CallExpression	"vvfat_read ( s -> bs , cluster2sector ( s , cluster_num ) , cluster , s -> sectors_per_cluster )"		1252674	1					
ANR	1252971	Callee	vvfat_read		1252674	0					
ANR	1252972	Identifier	vvfat_read		1252674	0					
ANR	1252973	ArgumentList	s -> bs		1252674	1					
ANR	1252974	Argument	s -> bs		1252674	0					
ANR	1252975	PtrMemberAccess	s -> bs		1252674	0					
ANR	1252976	Identifier	s		1252674	0					
ANR	1252977	Identifier	bs		1252674	1					
ANR	1252978	Argument	"cluster2sector ( s , cluster_num )"		1252674	1					
ANR	1252979	CallExpression	"cluster2sector ( s , cluster_num )"		1252674	0					
ANR	1252980	Callee	cluster2sector		1252674	0					
ANR	1252981	Identifier	cluster2sector		1252674	0					
ANR	1252982	ArgumentList	s		1252674	1					
ANR	1252983	Argument	s		1252674	0					
ANR	1252984	Identifier	s		1252674	0					
ANR	1252985	Argument	cluster_num		1252674	1					
ANR	1252986	Identifier	cluster_num		1252674	0					
ANR	1252987	Argument	cluster		1252674	2					
ANR	1252988	Identifier	cluster		1252674	0					
ANR	1252989	Argument	s -> sectors_per_cluster		1252674	3					
ANR	1252990	PtrMemberAccess	s -> sectors_per_cluster		1252674	0					
ANR	1252991	Identifier	s		1252674	0					
ANR	1252992	Identifier	sectors_per_cluster		1252674	1					
ANR	1252993	IfStatement	if ( subret )		1252674	7					
ANR	1252994	Condition	subret	97:5:1454:1459	1252674	0	True				
ANR	1252995	Identifier	subret		1252674	0					
ANR	1252996	CompoundStatement		93:13:1365:1365	1252674	1					
ANR	1252997	ExpressionStatement	"fprintf ( stderr , ""Error fetching direntries\\n"" )"	99:5:1470:1516	1252674	0	True				
ANR	1252998	CallExpression	"fprintf ( stderr , ""Error fetching direntries\\n"" )"		1252674	0					
ANR	1252999	Callee	fprintf		1252674	0					
ANR	1253000	Identifier	fprintf		1252674	0					
ANR	1253001	ArgumentList	stderr		1252674	1					
ANR	1253002	Argument	stderr		1252674	0					
ANR	1253003	Identifier	stderr		1252674	0					
ANR	1253004	Argument	"""Error fetching direntries\\n"""		1252674	1					
ANR	1253005	PrimaryExpression	"""Error fetching direntries\\n"""		1252674	0					
ANR	1253006	Label	fail :	101:1:1520:1524	1252674	1	True				
ANR	1253007	Identifier	fail		1252674	0					
ANR	1253008	ExpressionStatement	free ( cluster )	103:5:1532:1545	1252674	2	True				
ANR	1253009	CallExpression	free ( cluster )		1252674	0					
ANR	1253010	Callee	free		1252674	0					
ANR	1253011	Identifier	free		1252674	0					
ANR	1253012	ArgumentList	cluster		1252674	1					
ANR	1253013	Argument	cluster		1252674	0					
ANR	1253014	Identifier	cluster		1252674	0					
ANR	1253015	ReturnStatement	return 0 ;	105:5:1553:1561	1252674	3	True				
ANR	1253016	PrimaryExpression	0		1252674	0					
ANR	1253017	ForStatement	for ( i = 0 ; i < 0x10 * s -> sectors_per_cluster ; i ++ )		1252674	8					
ANR	1253018	ForInit	i = 0 ;	111:6:1576:1581	1252674	0	True				
ANR	1253019	AssignmentExpression	i = 0		1252674	0		=			
ANR	1253020	Identifier	i		1252674	0					
ANR	1253021	PrimaryExpression	0		1252674	1					
ANR	1253022	Condition	i < 0x10 * s -> sectors_per_cluster	111:13:1583:1615	1252674	1	True				
ANR	1253023	RelationalExpression	i < 0x10 * s -> sectors_per_cluster		1252674	0		<			
ANR	1253024	Identifier	i		1252674	0					
ANR	1253025	MultiplicativeExpression	0x10 * s -> sectors_per_cluster		1252674	1		*			
ANR	1253026	PrimaryExpression	0x10		1252674	0					
ANR	1253027	PtrMemberAccess	s -> sectors_per_cluster		1252674	1					
ANR	1253028	Identifier	s		1252674	0					
ANR	1253029	Identifier	sectors_per_cluster		1252674	1					
ANR	1253030	PostIncDecOperationExpression	i ++	111:48:1618:1620	1252674	2	True				
ANR	1253031	Identifier	i		1252674	0					
ANR	1253032	IncDec	++		1252674	1					
ANR	1253033	CompoundStatement		109:5:1534:1555	1252674	3					
ANR	1253034	IdentifierDeclStatement	int cluster_count = 0 ;	113:5:1631:1652	1252674	0	True				
ANR	1253035	IdentifierDecl	cluster_count = 0		1252674	0					
ANR	1253036	IdentifierDeclType	int		1252674	0					
ANR	1253037	Identifier	cluster_count		1252674	1					
ANR	1253038	AssignmentExpression	cluster_count = 0		1252674	2		=			
ANR	1253039	Identifier	cluster_count		1252674	0					
ANR	1253040	PrimaryExpression	0		1252674	1					
ANR	1253041	Statement	DLOG	117:0:1657:1660	1252674	1	True				
ANR	1253042	Statement	(	117:4:1661:1661	1252674	2	True				
ANR	1253043	ExpressionStatement	"fprintf ( stderr , ""check direntry %d: \\n"" , i )"	117:5:1662:1705	1252674	3	True				
ANR	1253044	CallExpression	"fprintf ( stderr , ""check direntry %d: \\n"" , i )"		1252674	0					
ANR	1253045	Callee	fprintf		1252674	0					
ANR	1253046	Identifier	fprintf		1252674	0					
ANR	1253047	ArgumentList	stderr		1252674	1					
ANR	1253048	Argument	stderr		1252674	0					
ANR	1253049	Identifier	stderr		1252674	0					
ANR	1253050	Argument	"""check direntry %d: \\n"""		1252674	1					
ANR	1253051	PrimaryExpression	"""check direntry %d: \\n"""		1252674	0					
ANR	1253052	Argument	i		1252674	2					
ANR	1253053	Identifier	i		1252674	0					
ANR	1253054	Statement	print_direntry	117:50:1707:1720	1252674	4	True				
ANR	1253055	Statement	(	117:64:1721:1721	1252674	5	True				
ANR	1253056	Statement	direntries	117:65:1722:1731	1252674	6	True				
ANR	1253057	Statement	+	117:76:1733:1733	1252674	7	True				
ANR	1253058	Statement	i	117:78:1735:1735	1252674	8	True				
ANR	1253059	Statement	)	117:79:1736:1736	1252674	9	True				
ANR	1253060	Statement	)	117:80:1737:1737	1252674	10	True				
ANR	1253061	ExpressionStatement		117:81:1738:1738	1252674	11	True				
ANR	1253062	IfStatement	if ( is_volume_label ( direntries + i ) || is_dot ( direntries + i ) || is_free ( direntries + i ) )		1252674	12					
ANR	1253063	Condition	is_volume_label ( direntries + i ) || is_dot ( direntries + i ) || is_free ( direntries + i )	119:9:1750:1840	1252674	0	True				
ANR	1253064	OrExpression	is_volume_label ( direntries + i ) || is_dot ( direntries + i ) || is_free ( direntries + i )		1252674	0		||			
ANR	1253065	CallExpression	is_volume_label ( direntries + i )		1252674	0					
ANR	1253066	Callee	is_volume_label		1252674	0					
ANR	1253067	Identifier	is_volume_label		1252674	0					
ANR	1253068	ArgumentList	direntries + i		1252674	1					
ANR	1253069	Argument	direntries + i		1252674	0					
ANR	1253070	AdditiveExpression	direntries + i		1252674	0		+			
ANR	1253071	Identifier	direntries		1252674	0					
ANR	1253072	Identifier	i		1252674	1					
ANR	1253073	OrExpression	is_dot ( direntries + i ) || is_free ( direntries + i )		1252674	1		||			
ANR	1253074	CallExpression	is_dot ( direntries + i )		1252674	0					
ANR	1253075	Callee	is_dot		1252674	0					
ANR	1253076	Identifier	is_dot		1252674	0					
ANR	1253077	ArgumentList	direntries + i		1252674	1					
ANR	1253078	Argument	direntries + i		1252674	0					
ANR	1253079	AdditiveExpression	direntries + i		1252674	0		+			
ANR	1253080	Identifier	direntries		1252674	0					
ANR	1253081	Identifier	i		1252674	1					
ANR	1253082	CallExpression	is_free ( direntries + i )		1252674	1					
ANR	1253083	Callee	is_free		1252674	0					
ANR	1253084	Identifier	is_free		1252674	0					
ANR	1253085	ArgumentList	direntries + i		1252674	1					
ANR	1253086	Argument	direntries + i		1252674	0					
ANR	1253087	AdditiveExpression	direntries + i		1252674	0		+			
ANR	1253088	Identifier	direntries		1252674	0					
ANR	1253089	Identifier	i		1252674	1					
ANR	1253090	ContinueStatement	continue ;	123:2:1846:1854	1252674	1	True				
ANR	1253091	ExpressionStatement	"subret = parse_long_name ( & lfn , direntries + i )"	127:5:1864:1910	1252674	13	True				
ANR	1253092	AssignmentExpression	"subret = parse_long_name ( & lfn , direntries + i )"		1252674	0		=			
ANR	1253093	Identifier	subret		1252674	0					
ANR	1253094	CallExpression	"parse_long_name ( & lfn , direntries + i )"		1252674	1					
ANR	1253095	Callee	parse_long_name		1252674	0					
ANR	1253096	Identifier	parse_long_name		1252674	0					
ANR	1253097	ArgumentList	& lfn		1252674	1					
ANR	1253098	Argument	& lfn		1252674	0					
ANR	1253099	UnaryOperationExpression	& lfn		1252674	0					
ANR	1253100	UnaryOperator	&		1252674	0					
ANR	1253101	Identifier	lfn		1252674	1					
ANR	1253102	Argument	direntries + i		1252674	1					
ANR	1253103	AdditiveExpression	direntries + i		1252674	0		+			
ANR	1253104	Identifier	direntries		1252674	0					
ANR	1253105	Identifier	i		1252674	1					
ANR	1253106	IfStatement	if ( subret < 0 )		1252674	14					
ANR	1253107	Condition	subret < 0	129:9:1922:1931	1252674	0	True				
ANR	1253108	RelationalExpression	subret < 0		1252674	0		<			
ANR	1253109	Identifier	subret		1252674	0					
ANR	1253110	PrimaryExpression	0		1252674	1					
ANR	1253111	CompoundStatement		125:21:1837:1837	1252674	1					
ANR	1253112	ExpressionStatement	"fprintf ( stderr , ""Error in long name\\n"" )"	131:2:1939:1978	1252674	0	True				
ANR	1253113	CallExpression	"fprintf ( stderr , ""Error in long name\\n"" )"		1252674	0					
ANR	1253114	Callee	fprintf		1252674	0					
ANR	1253115	Identifier	fprintf		1252674	0					
ANR	1253116	ArgumentList	stderr		1252674	1					
ANR	1253117	Argument	stderr		1252674	0					
ANR	1253118	Identifier	stderr		1252674	0					
ANR	1253119	Argument	"""Error in long name\\n"""		1252674	1					
ANR	1253120	PrimaryExpression	"""Error in long name\\n"""		1252674	0					
ANR	1253121	GotoStatement	goto fail ;	133:2:1983:1992	1252674	1	True				
ANR	1253122	Identifier	fail		1252674	0					
ANR	1253123	IfStatement	if ( subret == 0 || is_free ( direntries + i ) )		1252674	15					
ANR	1253124	Condition	subret == 0 || is_free ( direntries + i )	137:9:2012:2049	1252674	0	True				
ANR	1253125	OrExpression	subret == 0 || is_free ( direntries + i )		1252674	0		||			
ANR	1253126	EqualityExpression	subret == 0		1252674	0		==			
ANR	1253127	Identifier	subret		1252674	0					
ANR	1253128	PrimaryExpression	0		1252674	1					
ANR	1253129	CallExpression	is_free ( direntries + i )		1252674	1					
ANR	1253130	Callee	is_free		1252674	0					
ANR	1253131	Identifier	is_free		1252674	0					
ANR	1253132	ArgumentList	direntries + i		1252674	1					
ANR	1253133	Argument	direntries + i		1252674	0					
ANR	1253134	AdditiveExpression	direntries + i		1252674	0		+			
ANR	1253135	Identifier	direntries		1252674	0					
ANR	1253136	Identifier	i		1252674	1					
ANR	1253137	ContinueStatement	continue ;	139:2:2055:2063	1252674	1	True				
ANR	1253138	IfStatement	if ( fat_chksum ( direntries + i ) != lfn . checksum )		1252674	16					
ANR	1253139	Condition	fat_chksum ( direntries + i ) != lfn . checksum	143:9:2077:2116	1252674	0	True				
ANR	1253140	EqualityExpression	fat_chksum ( direntries + i ) != lfn . checksum		1252674	0		!=			
ANR	1253141	CallExpression	fat_chksum ( direntries + i )		1252674	0					
ANR	1253142	Callee	fat_chksum		1252674	0					
ANR	1253143	Identifier	fat_chksum		1252674	0					
ANR	1253144	ArgumentList	direntries + i		1252674	1					
ANR	1253145	Argument	direntries + i		1252674	0					
ANR	1253146	AdditiveExpression	direntries + i		1252674	0		+			
ANR	1253147	Identifier	direntries		1252674	0					
ANR	1253148	Identifier	i		1252674	1					
ANR	1253149	MemberAccess	lfn . checksum		1252674	1					
ANR	1253150	Identifier	lfn		1252674	0					
ANR	1253151	Identifier	checksum		1252674	1					
ANR	1253152	CompoundStatement		139:51:2022:2022	1252674	1					
ANR	1253153	ExpressionStatement	"subret = parse_short_name ( s , & lfn , direntries + i )"	145:2:2124:2174	1252674	0	True				
ANR	1253154	AssignmentExpression	"subret = parse_short_name ( s , & lfn , direntries + i )"		1252674	0		=			
ANR	1253155	Identifier	subret		1252674	0					
ANR	1253156	CallExpression	"parse_short_name ( s , & lfn , direntries + i )"		1252674	1					
ANR	1253157	Callee	parse_short_name		1252674	0					
ANR	1253158	Identifier	parse_short_name		1252674	0					
ANR	1253159	ArgumentList	s		1252674	1					
ANR	1253160	Argument	s		1252674	0					
ANR	1253161	Identifier	s		1252674	0					
ANR	1253162	Argument	& lfn		1252674	1					
ANR	1253163	UnaryOperationExpression	& lfn		1252674	0					
ANR	1253164	UnaryOperator	&		1252674	0					
ANR	1253165	Identifier	lfn		1252674	1					
ANR	1253166	Argument	direntries + i		1252674	2					
ANR	1253167	AdditiveExpression	direntries + i		1252674	0		+			
ANR	1253168	Identifier	direntries		1252674	0					
ANR	1253169	Identifier	i		1252674	1					
ANR	1253170	IfStatement	if ( subret < 0 )		1252674	1					
ANR	1253171	Condition	subret < 0	147:6:2183:2192	1252674	0	True				
ANR	1253172	RelationalExpression	subret < 0		1252674	0		<			
ANR	1253173	Identifier	subret		1252674	0					
ANR	1253174	PrimaryExpression	0		1252674	1					
ANR	1253175	CompoundStatement		143:18:2098:2098	1252674	1					
ANR	1253176	ExpressionStatement	"fprintf ( stderr , ""Error in short name (%d)\\n"" , subret )"	149:6:2204:2257	1252674	0	True				
ANR	1253177	CallExpression	"fprintf ( stderr , ""Error in short name (%d)\\n"" , subret )"		1252674	0					
ANR	1253178	Callee	fprintf		1252674	0					
ANR	1253179	Identifier	fprintf		1252674	0					
ANR	1253180	ArgumentList	stderr		1252674	1					
ANR	1253181	Argument	stderr		1252674	0					
ANR	1253182	Identifier	stderr		1252674	0					
ANR	1253183	Argument	"""Error in short name (%d)\\n"""		1252674	1					
ANR	1253184	PrimaryExpression	"""Error in short name (%d)\\n"""		1252674	0					
ANR	1253185	Argument	subret		1252674	2					
ANR	1253186	Identifier	subret		1252674	0					
ANR	1253187	GotoStatement	goto fail ;	151:6:2266:2275	1252674	1	True				
ANR	1253188	Identifier	fail		1252674	0					
ANR	1253189	IfStatement	"if ( subret > 0 || ! strcmp ( ( char * ) lfn . name , ""."" ) || ! strcmp ( ( char * ) lfn . name , "".."" ) )"		1252674	2					
ANR	1253190	Condition	"subret > 0 || ! strcmp ( ( char * ) lfn . name , ""."" ) || ! strcmp ( ( char * ) lfn . name , "".."" )"	155:6:2289:2369	1252674	0	True				
ANR	1253191	OrExpression	"subret > 0 || ! strcmp ( ( char * ) lfn . name , ""."" ) || ! strcmp ( ( char * ) lfn . name , "".."" )"		1252674	0		||			
ANR	1253192	RelationalExpression	subret > 0		1252674	0		>			
ANR	1253193	Identifier	subret		1252674	0					
ANR	1253194	PrimaryExpression	0		1252674	1					
ANR	1253195	OrExpression	"! strcmp ( ( char * ) lfn . name , ""."" ) || ! strcmp ( ( char * ) lfn . name , "".."" )"		1252674	1		||			
ANR	1253196	UnaryOperationExpression	"! strcmp ( ( char * ) lfn . name , ""."" )"		1252674	0					
ANR	1253197	UnaryOperator	!		1252674	0					
ANR	1253198	CallExpression	"strcmp ( ( char * ) lfn . name , ""."" )"		1252674	1					
ANR	1253199	Callee	strcmp		1252674	0					
ANR	1253200	Identifier	strcmp		1252674	0					
ANR	1253201	ArgumentList	( char * ) lfn . name		1252674	1					
ANR	1253202	Argument	( char * ) lfn . name		1252674	0					
ANR	1253203	CastExpression	( char * ) lfn . name		1252674	0					
ANR	1253204	CastTarget	char *		1252674	0					
ANR	1253205	MemberAccess	lfn . name		1252674	1					
ANR	1253206	Identifier	lfn		1252674	0					
ANR	1253207	Identifier	name		1252674	1					
ANR	1253208	Argument	"""."""		1252674	1					
ANR	1253209	PrimaryExpression	"""."""		1252674	0					
ANR	1253210	UnaryOperationExpression	"! strcmp ( ( char * ) lfn . name , "".."" )"		1252674	1					
ANR	1253211	UnaryOperator	!		1252674	0					
ANR	1253212	CallExpression	"strcmp ( ( char * ) lfn . name , "".."" )"		1252674	1					
ANR	1253213	Callee	strcmp		1252674	0					
ANR	1253214	Identifier	strcmp		1252674	0					
ANR	1253215	ArgumentList	( char * ) lfn . name		1252674	1					
ANR	1253216	Argument	( char * ) lfn . name		1252674	0					
ANR	1253217	CastExpression	( char * ) lfn . name		1252674	0					
ANR	1253218	CastTarget	char *		1252674	0					
ANR	1253219	MemberAccess	lfn . name		1252674	1					
ANR	1253220	Identifier	lfn		1252674	0					
ANR	1253221	Identifier	name		1252674	1					
ANR	1253222	Argument	""".."""		1252674	1					
ANR	1253223	PrimaryExpression	""".."""		1252674	0					
ANR	1253224	ContinueStatement	continue ;	159:6:2379:2387	1252674	1	True				
ANR	1253225	ExpressionStatement	lfn . checksum = 0x100	163:5:2403:2423	1252674	17	True				
ANR	1253226	AssignmentExpression	lfn . checksum = 0x100		1252674	0		=			
ANR	1253227	MemberAccess	lfn . checksum		1252674	0					
ANR	1253228	Identifier	lfn		1252674	0					
ANR	1253229	Identifier	checksum		1252674	1					
ANR	1253230	PrimaryExpression	0x100		1252674	1					
ANR	1253231	IfStatement	if ( path_len + 1 + lfn . len >= PATH_MAX )		1252674	18					
ANR	1253232	Condition	path_len + 1 + lfn . len >= PATH_MAX	167:9:2470:2503	1252674	0	True				
ANR	1253233	RelationalExpression	path_len + 1 + lfn . len >= PATH_MAX		1252674	0		>=			
ANR	1253234	AdditiveExpression	path_len + 1 + lfn . len		1252674	0		+			
ANR	1253235	Identifier	path_len		1252674	0					
ANR	1253236	AdditiveExpression	1 + lfn . len		1252674	1		+			
ANR	1253237	PrimaryExpression	1		1252674	0					
ANR	1253238	MemberAccess	lfn . len		1252674	1					
ANR	1253239	Identifier	lfn		1252674	0					
ANR	1253240	Identifier	len		1252674	1					
ANR	1253241	Identifier	PATH_MAX		1252674	1					
ANR	1253242	CompoundStatement		163:45:2409:2409	1252674	1					
ANR	1253243	ExpressionStatement	"fprintf ( stderr , ""Name too long: %s/%s\\n"" , path , lfn . name )"	169:2:2511:2568	1252674	0	True				
ANR	1253244	CallExpression	"fprintf ( stderr , ""Name too long: %s/%s\\n"" , path , lfn . name )"		1252674	0					
ANR	1253245	Callee	fprintf		1252674	0					
ANR	1253246	Identifier	fprintf		1252674	0					
ANR	1253247	ArgumentList	stderr		1252674	1					
ANR	1253248	Argument	stderr		1252674	0					
ANR	1253249	Identifier	stderr		1252674	0					
ANR	1253250	Argument	"""Name too long: %s/%s\\n"""		1252674	1					
ANR	1253251	PrimaryExpression	"""Name too long: %s/%s\\n"""		1252674	0					
ANR	1253252	Argument	path		1252674	2					
ANR	1253253	Identifier	path		1252674	0					
ANR	1253254	Argument	lfn . name		1252674	3					
ANR	1253255	MemberAccess	lfn . name		1252674	0					
ANR	1253256	Identifier	lfn		1252674	0					
ANR	1253257	Identifier	name		1252674	1					
ANR	1253258	GotoStatement	goto fail ;	171:2:2573:2582	1252674	1	True				
ANR	1253259	Identifier	fail		1252674	0					
ANR	1253260	ExpressionStatement	"pstrcpy ( path2 + path_len + 1 , sizeof ( path2 ) - path_len - 1 , ( char * ) lfn . name )"	175:12:2605:2702	1252674	19	True				
ANR	1253261	CallExpression	"pstrcpy ( path2 + path_len + 1 , sizeof ( path2 ) - path_len - 1 , ( char * ) lfn . name )"		1252674	0					
ANR	1253262	Callee	pstrcpy		1252674	0					
ANR	1253263	Identifier	pstrcpy		1252674	0					
ANR	1253264	ArgumentList	path2 + path_len + 1		1252674	1					
ANR	1253265	Argument	path2 + path_len + 1		1252674	0					
ANR	1253266	AdditiveExpression	path2 + path_len + 1		1252674	0		+			
ANR	1253267	Identifier	path2		1252674	0					
ANR	1253268	AdditiveExpression	path_len + 1		1252674	1		+			
ANR	1253269	Identifier	path_len		1252674	0					
ANR	1253270	PrimaryExpression	1		1252674	1					
ANR	1253271	Argument	sizeof ( path2 ) - path_len - 1		1252674	1					
ANR	1253272	AdditiveExpression	sizeof ( path2 ) - path_len - 1		1252674	0		-			
ANR	1253273	SizeofExpression	sizeof ( path2 )		1252674	0					
ANR	1253274	Sizeof	sizeof		1252674	0					
ANR	1253275	SizeofOperand	path2		1252674	1					
ANR	1253276	AdditiveExpression	path_len - 1		1252674	1		-			
ANR	1253277	Identifier	path_len		1252674	0					
ANR	1253278	PrimaryExpression	1		1252674	1					
ANR	1253279	Argument	( char * ) lfn . name		1252674	2					
ANR	1253280	CastExpression	( char * ) lfn . name		1252674	0					
ANR	1253281	CastTarget	char *		1252674	0					
ANR	1253282	MemberAccess	lfn . name		1252674	1					
ANR	1253283	Identifier	lfn		1252674	0					
ANR	1253284	Identifier	name		1252674	1					
ANR	1253285	IfStatement	if ( is_directory ( direntries + i ) )		1252674	20					
ANR	1253286	Condition	is_directory ( direntries + i )	181:9:2716:2743	1252674	0	True				
ANR	1253287	CallExpression	is_directory ( direntries + i )		1252674	0					
ANR	1253288	Callee	is_directory		1252674	0					
ANR	1253289	Identifier	is_directory		1252674	0					
ANR	1253290	ArgumentList	direntries + i		1252674	1					
ANR	1253291	Argument	direntries + i		1252674	0					
ANR	1253292	AdditiveExpression	direntries + i		1252674	0		+			
ANR	1253293	Identifier	direntries		1252674	0					
ANR	1253294	Identifier	i		1252674	1					
ANR	1253295	CompoundStatement		177:39:2649:2649	1252674	1					
ANR	1253296	IfStatement	if ( begin_of_direntry ( direntries + i ) == 0 )		1252674	0					
ANR	1253297	Condition	begin_of_direntry ( direntries + i ) == 0	183:6:2755:2792	1252674	0	True				
ANR	1253298	EqualityExpression	begin_of_direntry ( direntries + i ) == 0		1252674	0		==			
ANR	1253299	CallExpression	begin_of_direntry ( direntries + i )		1252674	0					
ANR	1253300	Callee	begin_of_direntry		1252674	0					
ANR	1253301	Identifier	begin_of_direntry		1252674	0					
ANR	1253302	ArgumentList	direntries + i		1252674	1					
ANR	1253303	Argument	direntries + i		1252674	0					
ANR	1253304	AdditiveExpression	direntries + i		1252674	0		+			
ANR	1253305	Identifier	direntries		1252674	0					
ANR	1253306	Identifier	i		1252674	1					
ANR	1253307	PrimaryExpression	0		1252674	1					
ANR	1253308	CompoundStatement		179:46:2698:2698	1252674	1					
ANR	1253309	Statement	DLOG	185:6:2804:2807	1252674	0	True				
ANR	1253310	Statement	(	185:10:2808:2808	1252674	1	True				
ANR	1253311	ExpressionStatement	"fprintf ( stderr , ""invalid begin for directory: %s\\n"" , path2 )"	185:11:2809:2868	1252674	2	True				
ANR	1253312	CallExpression	"fprintf ( stderr , ""invalid begin for directory: %s\\n"" , path2 )"		1252674	0					
ANR	1253313	Callee	fprintf		1252674	0					
ANR	1253314	Identifier	fprintf		1252674	0					
ANR	1253315	ArgumentList	stderr		1252674	1					
ANR	1253316	Argument	stderr		1252674	0					
ANR	1253317	Identifier	stderr		1252674	0					
ANR	1253318	Argument	"""invalid begin for directory: %s\\n"""		1252674	1					
ANR	1253319	PrimaryExpression	"""invalid begin for directory: %s\\n"""		1252674	0					
ANR	1253320	Argument	path2		1252674	2					
ANR	1253321	Identifier	path2		1252674	0					
ANR	1253322	Statement	print_direntry	185:72:2870:2883	1252674	3	True				
ANR	1253323	Statement	(	185:86:2884:2884	1252674	4	True				
ANR	1253324	Statement	direntries	185:87:2885:2894	1252674	5	True				
ANR	1253325	Statement	+	185:98:2896:2896	1252674	6	True				
ANR	1253326	Statement	i	185:100:2898:2898	1252674	7	True				
ANR	1253327	Statement	)	185:101:2899:2899	1252674	8	True				
ANR	1253328	Statement	)	185:102:2900:2900	1252674	9	True				
ANR	1253329	ExpressionStatement		185:103:2901:2901	1252674	10	True				
ANR	1253330	GotoStatement	goto fail ;	187:6:2910:2919	1252674	11	True				
ANR	1253331	Identifier	fail		1252674	0					
ANR	1253332	ExpressionStatement	"cluster_count = check_directory_consistency ( s , begin_of_direntry ( direntries + i ) , path2 )"	191:2:2929:3021	1252674	1	True				
ANR	1253333	AssignmentExpression	"cluster_count = check_directory_consistency ( s , begin_of_direntry ( direntries + i ) , path2 )"		1252674	0		=			
ANR	1253334	Identifier	cluster_count		1252674	0					
ANR	1253335	CallExpression	"check_directory_consistency ( s , begin_of_direntry ( direntries + i ) , path2 )"		1252674	1					
ANR	1253336	Callee	check_directory_consistency		1252674	0					
ANR	1253337	Identifier	check_directory_consistency		1252674	0					
ANR	1253338	ArgumentList	s		1252674	1					
ANR	1253339	Argument	s		1252674	0					
ANR	1253340	Identifier	s		1252674	0					
ANR	1253341	Argument	begin_of_direntry ( direntries + i )		1252674	1					
ANR	1253342	CallExpression	begin_of_direntry ( direntries + i )		1252674	0					
ANR	1253343	Callee	begin_of_direntry		1252674	0					
ANR	1253344	Identifier	begin_of_direntry		1252674	0					
ANR	1253345	ArgumentList	direntries + i		1252674	1					
ANR	1253346	Argument	direntries + i		1252674	0					
ANR	1253347	AdditiveExpression	direntries + i		1252674	0		+			
ANR	1253348	Identifier	direntries		1252674	0					
ANR	1253349	Identifier	i		1252674	1					
ANR	1253350	Argument	path2		1252674	2					
ANR	1253351	Identifier	path2		1252674	0					
ANR	1253352	IfStatement	if ( cluster_count == 0 )		1252674	2					
ANR	1253353	Condition	cluster_count == 0	195:6:3030:3047	1252674	0	True				
ANR	1253354	EqualityExpression	cluster_count == 0		1252674	0		==			
ANR	1253355	Identifier	cluster_count		1252674	0					
ANR	1253356	PrimaryExpression	0		1252674	1					
ANR	1253357	CompoundStatement		191:26:2953:2953	1252674	1					
ANR	1253358	Statement	DLOG	197:6:3059:3062	1252674	0	True				
ANR	1253359	Statement	(	197:10:3063:3063	1252674	1	True				
ANR	1253360	ExpressionStatement	"fprintf ( stderr , ""problem in directory %s:\\n"" , path2 )"	197:11:3064:3116	1252674	2	True				
ANR	1253361	CallExpression	"fprintf ( stderr , ""problem in directory %s:\\n"" , path2 )"		1252674	0					
ANR	1253362	Callee	fprintf		1252674	0					
ANR	1253363	Identifier	fprintf		1252674	0					
ANR	1253364	ArgumentList	stderr		1252674	1					
ANR	1253365	Argument	stderr		1252674	0					
ANR	1253366	Identifier	stderr		1252674	0					
ANR	1253367	Argument	"""problem in directory %s:\\n"""		1252674	1					
ANR	1253368	PrimaryExpression	"""problem in directory %s:\\n"""		1252674	0					
ANR	1253369	Argument	path2		1252674	2					
ANR	1253370	Identifier	path2		1252674	0					
ANR	1253371	Statement	print_direntry	197:65:3118:3131	1252674	3	True				
ANR	1253372	Statement	(	197:79:3132:3132	1252674	4	True				
ANR	1253373	Statement	direntries	197:80:3133:3142	1252674	5	True				
ANR	1253374	Statement	+	197:91:3144:3144	1252674	6	True				
ANR	1253375	Statement	i	197:93:3146:3146	1252674	7	True				
ANR	1253376	Statement	)	197:94:3147:3147	1252674	8	True				
ANR	1253377	Statement	)	197:95:3148:3148	1252674	9	True				
ANR	1253378	ExpressionStatement		197:96:3149:3149	1252674	10	True				
ANR	1253379	GotoStatement	goto fail ;	199:6:3158:3167	1252674	11	True				
ANR	1253380	Identifier	fail		1252674	0					
ANR	1253381	ElseStatement	else		1252674	0					
ANR	1253382	IfStatement	if ( is_file ( direntries + i ) )		1252674	0					
ANR	1253383	Condition	is_file ( direntries + i )	203:16:3191:3213	1252674	0	True				
ANR	1253384	CallExpression	is_file ( direntries + i )		1252674	0					
ANR	1253385	Callee	is_file		1252674	0					
ANR	1253386	Identifier	is_file		1252674	0					
ANR	1253387	ArgumentList	direntries + i		1252674	1					
ANR	1253388	Argument	direntries + i		1252674	0					
ANR	1253389	AdditiveExpression	direntries + i		1252674	0		+			
ANR	1253390	Identifier	direntries		1252674	0					
ANR	1253391	Identifier	i		1252674	1					
ANR	1253392	CompoundStatement		199:41:3119:3119	1252674	1					
ANR	1253393	ExpressionStatement	"cluster_count = get_cluster_count_for_direntry ( s , direntries + i , path2 )"	207:2:3255:3327	1252674	0	True				
ANR	1253394	AssignmentExpression	"cluster_count = get_cluster_count_for_direntry ( s , direntries + i , path2 )"		1252674	0		=			
ANR	1253395	Identifier	cluster_count		1252674	0					
ANR	1253396	CallExpression	"get_cluster_count_for_direntry ( s , direntries + i , path2 )"		1252674	1					
ANR	1253397	Callee	get_cluster_count_for_direntry		1252674	0					
ANR	1253398	Identifier	get_cluster_count_for_direntry		1252674	0					
ANR	1253399	ArgumentList	s		1252674	1					
ANR	1253400	Argument	s		1252674	0					
ANR	1253401	Identifier	s		1252674	0					
ANR	1253402	Argument	direntries + i		1252674	1					
ANR	1253403	AdditiveExpression	direntries + i		1252674	0		+			
ANR	1253404	Identifier	direntries		1252674	0					
ANR	1253405	Identifier	i		1252674	1					
ANR	1253406	Argument	path2		1252674	2					
ANR	1253407	Identifier	path2		1252674	0					
ANR	1253408	IfStatement	if ( cluster_count != ( le32_to_cpu ( direntries [ i ] . size ) + s -> cluster_size - 1 ) / s -> cluster_size )		1252674	1					
ANR	1253409	Condition	cluster_count != ( le32_to_cpu ( direntries [ i ] . size ) + s -> cluster_size - 1 ) / s -> cluster_size	209:6:3336:3434	1252674	0	True				
ANR	1253410	EqualityExpression	cluster_count != ( le32_to_cpu ( direntries [ i ] . size ) + s -> cluster_size - 1 ) / s -> cluster_size		1252674	0		!=			
ANR	1253411	Identifier	cluster_count		1252674	0					
ANR	1253412	MultiplicativeExpression	( le32_to_cpu ( direntries [ i ] . size ) + s -> cluster_size - 1 ) / s -> cluster_size		1252674	1		/			
ANR	1253413	AdditiveExpression	le32_to_cpu ( direntries [ i ] . size ) + s -> cluster_size - 1		1252674	0		+			
ANR	1253414	CallExpression	le32_to_cpu ( direntries [ i ] . size )		1252674	0					
ANR	1253415	Callee	le32_to_cpu		1252674	0					
ANR	1253416	Identifier	le32_to_cpu		1252674	0					
ANR	1253417	ArgumentList	direntries [ i ] . size		1252674	1					
ANR	1253418	Argument	direntries [ i ] . size		1252674	0					
ANR	1253419	MemberAccess	direntries [ i ] . size		1252674	0					
ANR	1253420	ArrayIndexing	direntries [ i ]		1252674	0					
ANR	1253421	Identifier	direntries		1252674	0					
ANR	1253422	Identifier	i		1252674	1					
ANR	1253423	Identifier	size		1252674	1					
ANR	1253424	AdditiveExpression	s -> cluster_size - 1		1252674	1		-			
ANR	1253425	PtrMemberAccess	s -> cluster_size		1252674	0					
ANR	1253426	Identifier	s		1252674	0					
ANR	1253427	Identifier	cluster_size		1252674	1					
ANR	1253428	PrimaryExpression	1		1252674	1					
ANR	1253429	PtrMemberAccess	s -> cluster_size		1252674	1					
ANR	1253430	Identifier	s		1252674	0					
ANR	1253431	Identifier	cluster_size		1252674	1					
ANR	1253432	CompoundStatement		209:28:3340:3340	1252674	1					
ANR	1253433	ExpressionStatement	"DLOG ( fprintf ( stderr , ""Cluster count mismatch\\n"" ) )"	215:6:3446:3495	1252674	0	True				
ANR	1253434	CallExpression	"DLOG ( fprintf ( stderr , ""Cluster count mismatch\\n"" ) )"		1252674	0					
ANR	1253435	Callee	DLOG		1252674	0					
ANR	1253436	Identifier	DLOG		1252674	0					
ANR	1253437	ArgumentList	"fprintf ( stderr , ""Cluster count mismatch\\n"" )"		1252674	1					
ANR	1253438	Argument	"fprintf ( stderr , ""Cluster count mismatch\\n"" )"		1252674	0					
ANR	1253439	CallExpression	"fprintf ( stderr , ""Cluster count mismatch\\n"" )"		1252674	0					
ANR	1253440	Callee	fprintf		1252674	0					
ANR	1253441	Identifier	fprintf		1252674	0					
ANR	1253442	ArgumentList	stderr		1252674	1					
ANR	1253443	Argument	stderr		1252674	0					
ANR	1253444	Identifier	stderr		1252674	0					
ANR	1253445	Argument	"""Cluster count mismatch\\n"""		1252674	1					
ANR	1253446	PrimaryExpression	"""Cluster count mismatch\\n"""		1252674	0					
ANR	1253447	GotoStatement	goto fail ;	217:6:3504:3513	1252674	1	True				
ANR	1253448	Identifier	fail		1252674	0					
ANR	1253449	ElseStatement	else		1252674	0					
ANR	1253450	ExpressionStatement	assert ( 0 )	223:2:3536:3545	1252674	0	True				
ANR	1253451	CallExpression	assert ( 0 )		1252674	0					
ANR	1253452	Callee	assert		1252674	0					
ANR	1253453	Identifier	assert		1252674	0					
ANR	1253454	ArgumentList	0		1252674	1					
ANR	1253455	Argument	0		1252674	0					
ANR	1253456	PrimaryExpression	0		1252674	0					
ANR	1253457	ExpressionStatement	ret += cluster_count	227:5:3580:3600	1252674	21	True				
ANR	1253458	AssignmentExpression	ret += cluster_count		1252674	0		+=			
ANR	1253459	Identifier	ret		1252674	0					
ANR	1253460	Identifier	cluster_count		1252674	1					
ANR	1253461	ExpressionStatement	"cluster_num = modified_fat_get ( s , cluster_num )"	233:1:3610:3656	1252674	9	True				
ANR	1253462	AssignmentExpression	"cluster_num = modified_fat_get ( s , cluster_num )"		1252674	0		=			
ANR	1253463	Identifier	cluster_num		1252674	0					
ANR	1253464	CallExpression	"modified_fat_get ( s , cluster_num )"		1252674	1					
ANR	1253465	Callee	modified_fat_get		1252674	0					
ANR	1253466	Identifier	modified_fat_get		1252674	0					
ANR	1253467	ArgumentList	s		1252674	1					
ANR	1253468	Argument	s		1252674	0					
ANR	1253469	Identifier	s		1252674	0					
ANR	1253470	Argument	cluster_num		1252674	1					
ANR	1253471	Identifier	cluster_num		1252674	0					
ANR	1253472	Condition	"! fat_eof ( s , cluster_num )"	235:12:3671:3694	1252674	1	True				
ANR	1253473	UnaryOperationExpression	"! fat_eof ( s , cluster_num )"		1252674	0					
ANR	1253474	UnaryOperator	!		1252674	0					
ANR	1253475	CallExpression	"fat_eof ( s , cluster_num )"		1252674	1					
ANR	1253476	Callee	fat_eof		1252674	0					
ANR	1253477	Identifier	fat_eof		1252674	0					
ANR	1253478	ArgumentList	s		1252674	1					
ANR	1253479	Argument	s		1252674	0					
ANR	1253480	Identifier	s		1252674	0					
ANR	1253481	Argument	cluster_num		1252674	1					
ANR	1253482	Identifier	cluster_num		1252674	0					
ANR	1253483	ExpressionStatement	free ( cluster )	239:4:3705:3718	1252674	14	True				
ANR	1253484	CallExpression	free ( cluster )		1252674	0					
ANR	1253485	Callee	free		1252674	0					
ANR	1253486	Identifier	free		1252674	0					
ANR	1253487	ArgumentList	cluster		1252674	1					
ANR	1253488	Argument	cluster		1252674	0					
ANR	1253489	Identifier	cluster		1252674	0					
ANR	1253490	ReturnStatement	return ret ;	241:4:3725:3735	1252674	15	True				
ANR	1253491	Identifier	ret		1252674	0					
ANR	1253492	ReturnType	static int		1252674	1					
ANR	1253493	Identifier	check_directory_consistency		1252674	2					
ANR	1253494	ParameterList	"BDRVVVFATState * s , int cluster_num , const char * path"		1252674	3					
ANR	1253495	Parameter	BDRVVVFATState * s	1:39:39:55	1252674	0	True				
ANR	1253496	ParameterType	BDRVVVFATState *		1252674	0					
ANR	1253497	Identifier	s		1252674	1					
ANR	1253498	Parameter	int cluster_num	3:1:60:74	1252674	1	True				
ANR	1253499	ParameterType	int		1252674	0					
ANR	1253500	Identifier	cluster_num		1252674	1					
ANR	1253501	Parameter	const char * path	3:18:77:92	1252674	2	True				
ANR	1253502	ParameterType	const char *		1252674	0					
ANR	1253503	Identifier	path		1252674	1					
ANR	1253504	CFGEntryNode	ENTRY		1252674		True				
ANR	1253505	CFGExitNode	EXIT		1252674		True				
ANR	1253506	Symbol	lfn . len		1252674						
ANR	1253507	Symbol	cluster		1252674						
ANR	1253508	Symbol	* path_len		1252674						
ANR	1253509	Symbol	fat_eof		1252674						
ANR	1253510	Symbol	vvfat_read		1252674						
ANR	1253511	Symbol	* s -> used_clusters		1252674						
ANR	1253512	Symbol	s -> cluster_size		1252674						
ANR	1253513	Symbol	* path2		1252674						
ANR	1253514	Symbol	s -> sectors_per_cluster		1252674						
ANR	1253515	Symbol	path		1252674						
ANR	1253516	Symbol	strlen		1252674						
ANR	1253517	Symbol	* mapping		1252674						
ANR	1253518	Symbol	lfn . name		1252674						
ANR	1253519	Symbol	find_mapping_for_cluster		1252674						
ANR	1253520	Symbol	get_cluster_count_for_direntry		1252674						
ANR	1253521	Symbol	check_directory_consistency		1252674						
ANR	1253522	Symbol	is_dot		1252674						
ANR	1253523	Symbol	& lfn		1252674						
ANR	1253524	Symbol	ret		1252674						
ANR	1253525	Symbol	strcmp		1252674						
ANR	1253526	Symbol	mapping		1252674						
ANR	1253527	Symbol	mapping -> path		1252674						
ANR	1253528	Symbol	mapping -> mode		1252674						
ANR	1253529	Symbol	cluster2sector		1252674						
ANR	1253530	Symbol	parse_short_name		1252674						
ANR	1253531	Symbol	parse_long_name		1252674						
ANR	1253532	Symbol	stderr		1252674						
ANR	1253533	Symbol	s -> bs		1252674						
ANR	1253534	Symbol	direntries [ i ] . size		1252674						
ANR	1253535	Symbol	basename		1252674						
ANR	1253536	Symbol	lfn		1252674						
ANR	1253537	Symbol	qemu_malloc		1252674						
ANR	1253538	Symbol	cluster_num		1252674						
ANR	1253539	Symbol	subret		1252674						
ANR	1253540	Symbol	MODE_DIRECTORY		1252674						
ANR	1253541	Symbol	direntries		1252674						
ANR	1253542	Symbol	cluster_count		1252674						
ANR	1253543	Symbol	fat_chksum		1252674						
ANR	1253544	Symbol	basename2		1252674						
ANR	1253545	Symbol	le32_to_cpu		1252674						
ANR	1253546	Symbol	* * s		1252674						
ANR	1253547	Symbol	begin_of_direntry		1252674						
ANR	1253548	Symbol	USED_ANY		1252674						
ANR	1253549	Symbol	is_directory		1252674						
ANR	1253550	Symbol	path_len		1252674						
ANR	1253551	Symbol	~MODE_DELETED		1252674						
ANR	1253552	Symbol	* cluster_num		1252674						
ANR	1253553	Symbol	MODE_DELETED		1252674						
ANR	1253554	Symbol	PATH_MAX		1252674						
ANR	1253555	Symbol	is_file		1252674						
ANR	1253556	Symbol	i		1252674						
ANR	1253557	Symbol	fprintf		1252674						
ANR	1253558	Symbol	lfn . checksum		1252674						
ANR	1253559	Symbol	s -> used_clusters		1252674						
ANR	1253560	Symbol	USED_DIRECTORY		1252674						
ANR	1253561	Symbol	s		1252674						
ANR	1253562	Symbol	* i		1252674						
ANR	1253563	Symbol	modified_fat_get		1252674						
ANR	1253564	Symbol	path2		1252674						
ANR	1253565	Symbol	get_basename		1252674						
ANR	1253566	Symbol	is_free		1252674						
ANR	1253567	Symbol	strdup		1252674						
ANR	1253568	Symbol	is_volume_label		1252674						
ANR	1253569	Symbol	* direntries		1252674						
ANR	1253570	Symbol	* s		1252674						
