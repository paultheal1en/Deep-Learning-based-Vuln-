command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1226863	File	/home/p4ultr4n/workplace/ReVeal/raw_code/celt_decode_band_0.c								
ANR	1226864	Function	celt_decode_band	1:0:0:13734							
ANR	1226865	FunctionDef	"celt_decode_band (CeltContext * s , OpusRangeCoder * rc , const int band , float * X , float * Y , int N , int b , unsigned int blocks , float * lowband , int duration , float * lowband_out , int level , float gain , float * lowband_scratch , int fill)"		1226864	0					
ANR	1226866	CompoundStatement		15:0:480:13734	1226864	0					
ANR	1226867	IdentifierDeclStatement	const uint8_t * cache ;	17:4:487:507	1226864	0	True				
ANR	1226868	IdentifierDecl	* cache		1226864	0					
ANR	1226869	IdentifierDeclType	const uint8_t *		1226864	0					
ANR	1226870	Identifier	cache		1226864	1					
ANR	1226871	IdentifierDeclStatement	"int dualstereo , split ;"	19:4:514:535	1226864	1	True				
ANR	1226872	IdentifierDecl	dualstereo		1226864	0					
ANR	1226873	IdentifierDeclType	int		1226864	0					
ANR	1226874	Identifier	dualstereo		1226864	1					
ANR	1226875	IdentifierDecl	split		1226864	1					
ANR	1226876	IdentifierDeclType	int		1226864	0					
ANR	1226877	Identifier	split		1226864	1					
ANR	1226878	IdentifierDeclStatement	"int imid = 0 , iside = 0 ;"	21:4:542:565	1226864	2	True				
ANR	1226879	IdentifierDecl	imid = 0		1226864	0					
ANR	1226880	IdentifierDeclType	int		1226864	0					
ANR	1226881	Identifier	imid		1226864	1					
ANR	1226882	AssignmentExpression	imid = 0		1226864	2		=			
ANR	1226883	Identifier	imid		1226864	0					
ANR	1226884	PrimaryExpression	0		1226864	1					
ANR	1226885	IdentifierDecl	iside = 0		1226864	1					
ANR	1226886	IdentifierDeclType	int		1226864	0					
ANR	1226887	Identifier	iside		1226864	1					
ANR	1226888	AssignmentExpression	iside = 0		1226864	2		=			
ANR	1226889	Identifier	iside		1226864	0					
ANR	1226890	PrimaryExpression	0		1226864	1					
ANR	1226891	IdentifierDeclStatement	unsigned int N0 = N ;	23:4:572:591	1226864	3	True				
ANR	1226892	IdentifierDecl	N0 = N		1226864	0					
ANR	1226893	IdentifierDeclType	unsigned int		1226864	0					
ANR	1226894	Identifier	N0		1226864	1					
ANR	1226895	AssignmentExpression	N0 = N		1226864	2		=			
ANR	1226896	Identifier	N		1226864	0					
ANR	1226897	Identifier	N		1226864	1					
ANR	1226898	IdentifierDeclStatement	int N_B ;	25:4:598:605	1226864	4	True				
ANR	1226899	IdentifierDecl	N_B		1226864	0					
ANR	1226900	IdentifierDeclType	int		1226864	0					
ANR	1226901	Identifier	N_B		1226864	1					
ANR	1226902	IdentifierDeclStatement	int N_B0 ;	27:4:612:620	1226864	5	True				
ANR	1226903	IdentifierDecl	N_B0		1226864	0					
ANR	1226904	IdentifierDeclType	int		1226864	0					
ANR	1226905	Identifier	N_B0		1226864	1					
ANR	1226906	IdentifierDeclStatement	int B0 = blocks ;	29:4:627:642	1226864	6	True				
ANR	1226907	IdentifierDecl	B0 = blocks		1226864	0					
ANR	1226908	IdentifierDeclType	int		1226864	0					
ANR	1226909	Identifier	B0		1226864	1					
ANR	1226910	AssignmentExpression	B0 = blocks		1226864	2		=			
ANR	1226911	Identifier	blocks		1226864	0					
ANR	1226912	Identifier	blocks		1226864	1					
ANR	1226913	IdentifierDeclStatement	int time_divide = 0 ;	31:4:649:668	1226864	7	True				
ANR	1226914	IdentifierDecl	time_divide = 0		1226864	0					
ANR	1226915	IdentifierDeclType	int		1226864	0					
ANR	1226916	Identifier	time_divide		1226864	1					
ANR	1226917	AssignmentExpression	time_divide = 0		1226864	2		=			
ANR	1226918	Identifier	time_divide		1226864	0					
ANR	1226919	PrimaryExpression	0		1226864	1					
ANR	1226920	IdentifierDeclStatement	int recombine = 0 ;	33:4:675:692	1226864	8	True				
ANR	1226921	IdentifierDecl	recombine = 0		1226864	0					
ANR	1226922	IdentifierDeclType	int		1226864	0					
ANR	1226923	Identifier	recombine		1226864	1					
ANR	1226924	AssignmentExpression	recombine = 0		1226864	2		=			
ANR	1226925	Identifier	recombine		1226864	0					
ANR	1226926	PrimaryExpression	0		1226864	1					
ANR	1226927	IdentifierDeclStatement	int inv = 0 ;	35:4:699:710	1226864	9	True				
ANR	1226928	IdentifierDecl	inv = 0		1226864	0					
ANR	1226929	IdentifierDeclType	int		1226864	0					
ANR	1226930	Identifier	inv		1226864	1					
ANR	1226931	AssignmentExpression	inv = 0		1226864	2		=			
ANR	1226932	Identifier	inv		1226864	0					
ANR	1226933	PrimaryExpression	0		1226864	1					
ANR	1226934	IdentifierDeclStatement	"float mid = 0 , side = 0 ;"	37:4:717:740	1226864	10	True				
ANR	1226935	IdentifierDecl	mid = 0		1226864	0					
ANR	1226936	IdentifierDeclType	float		1226864	0					
ANR	1226937	Identifier	mid		1226864	1					
ANR	1226938	AssignmentExpression	mid = 0		1226864	2		=			
ANR	1226939	Identifier	mid		1226864	0					
ANR	1226940	PrimaryExpression	0		1226864	1					
ANR	1226941	IdentifierDecl	side = 0		1226864	1					
ANR	1226942	IdentifierDeclType	float		1226864	0					
ANR	1226943	Identifier	side		1226864	1					
ANR	1226944	AssignmentExpression	side = 0		1226864	2		=			
ANR	1226945	Identifier	side		1226864	0					
ANR	1226946	PrimaryExpression	0		1226864	1					
ANR	1226947	IdentifierDeclStatement	int longblocks = ( B0 == 1 ) ;	39:4:747:773	1226864	11	True				
ANR	1226948	IdentifierDecl	longblocks = ( B0 == 1 )		1226864	0					
ANR	1226949	IdentifierDeclType	int		1226864	0					
ANR	1226950	Identifier	longblocks		1226864	1					
ANR	1226951	AssignmentExpression	longblocks = ( B0 == 1 )		1226864	2		=			
ANR	1226952	Identifier	longblocks		1226864	0					
ANR	1226953	EqualityExpression	B0 == 1		1226864	1		==			
ANR	1226954	Identifier	B0		1226864	0					
ANR	1226955	PrimaryExpression	1		1226864	1					
ANR	1226956	IdentifierDeclStatement	unsigned int cm = 0 ;	41:4:780:799	1226864	12	True				
ANR	1226957	IdentifierDecl	cm = 0		1226864	0					
ANR	1226958	IdentifierDeclType	unsigned int		1226864	0					
ANR	1226959	Identifier	cm		1226864	1					
ANR	1226960	AssignmentExpression	cm = 0		1226864	2		=			
ANR	1226961	Identifier	cm		1226864	0					
ANR	1226962	PrimaryExpression	0		1226864	1					
ANR	1226963	ExpressionStatement	N_B0 = N_B = N / blocks	45:4:808:831	1226864	13	True				
ANR	1226964	AssignmentExpression	N_B0 = N_B = N / blocks		1226864	0		=			
ANR	1226965	Identifier	N_B0		1226864	0					
ANR	1226966	AssignmentExpression	N_B = N / blocks		1226864	1		=			
ANR	1226967	Identifier	N_B		1226864	0					
ANR	1226968	MultiplicativeExpression	N / blocks		1226864	1		/			
ANR	1226969	Identifier	N		1226864	0					
ANR	1226970	Identifier	blocks		1226864	1					
ANR	1226971	ExpressionStatement	split = dualstereo = ( Y != NULL )	47:4:838:870	1226864	14	True				
ANR	1226972	AssignmentExpression	split = dualstereo = ( Y != NULL )		1226864	0		=			
ANR	1226973	Identifier	split		1226864	0					
ANR	1226974	AssignmentExpression	dualstereo = ( Y != NULL )		1226864	1		=			
ANR	1226975	Identifier	dualstereo		1226864	0					
ANR	1226976	EqualityExpression	Y != NULL		1226864	1		!=			
ANR	1226977	Identifier	Y		1226864	0					
ANR	1226978	Identifier	NULL		1226864	1					
ANR	1226979	IfStatement	if ( N == 1 )		1226864	15					
ANR	1226980	Condition	N == 1	51:8:883:888	1226864	0	True				
ANR	1226981	EqualityExpression	N == 1		1226864	0		==			
ANR	1226982	Identifier	N		1226864	0					
ANR	1226983	PrimaryExpression	1		1226864	1					
ANR	1226984	CompoundStatement		43:8:480:492	1226864	1					
ANR	1226985	IdentifierDeclStatement	int i ;	55:8:945:950	1226864	0	True				
ANR	1226986	IdentifierDecl	i		1226864	0					
ANR	1226987	IdentifierDeclType	int		1226864	0					
ANR	1226988	Identifier	i		1226864	1					
ANR	1226989	IdentifierDeclStatement	float * x = X ;	57:8:961:973	1226864	1	True				
ANR	1226990	IdentifierDecl	* x = X		1226864	0					
ANR	1226991	IdentifierDeclType	float *		1226864	0					
ANR	1226992	Identifier	x		1226864	1					
ANR	1226993	AssignmentExpression	* x = X		1226864	2		=			
ANR	1226994	Identifier	X		1226864	0					
ANR	1226995	Identifier	X		1226864	1					
ANR	1226996	ForStatement	for ( i = 0 ; i <= dualstereo ; i ++ )		1226864	2					
ANR	1226997	ForInit	i = 0 ;	59:13:989:994	1226864	0	True				
ANR	1226998	AssignmentExpression	i = 0		1226864	0		=			
ANR	1226999	Identifier	i		1226864	0					
ANR	1227000	PrimaryExpression	0		1226864	1					
ANR	1227001	Condition	i <= dualstereo	59:20:996:1010	1226864	1	True				
ANR	1227002	RelationalExpression	i <= dualstereo		1226864	0		<=			
ANR	1227003	Identifier	i		1226864	0					
ANR	1227004	Identifier	dualstereo		1226864	1					
ANR	1227005	PostIncDecOperationExpression	i ++	59:37:1013:1015	1226864	2	True				
ANR	1227006	Identifier	i		1226864	0					
ANR	1227007	IncDec	++		1226864	1					
ANR	1227008	CompoundStatement		47:12:552:564	1226864	3					
ANR	1227009	IdentifierDeclStatement	int sign = 0 ;	61:12:1033:1045	1226864	0	True				
ANR	1227010	IdentifierDecl	sign = 0		1226864	0					
ANR	1227011	IdentifierDeclType	int		1226864	0					
ANR	1227012	Identifier	sign		1226864	1					
ANR	1227013	AssignmentExpression	sign = 0		1226864	2		=			
ANR	1227014	Identifier	sign		1226864	0					
ANR	1227015	PrimaryExpression	0		1226864	1					
ANR	1227016	IfStatement	if ( s -> remaining2 >= 1 << 3 )		1226864	1					
ANR	1227017	Condition	s -> remaining2 >= 1 << 3	63:16:1064:1084	1226864	0	True				
ANR	1227018	RelationalExpression	s -> remaining2 >= 1 << 3		1226864	0		>=			
ANR	1227019	PtrMemberAccess	s -> remaining2		1226864	0					
ANR	1227020	Identifier	s		1226864	0					
ANR	1227021	Identifier	remaining2		1226864	1					
ANR	1227022	ShiftExpression	1 << 3		1226864	1		<<			
ANR	1227023	PrimaryExpression	1		1226864	0					
ANR	1227024	PrimaryExpression	3		1226864	1					
ANR	1227025	CompoundStatement		49:39:606:606	1226864	1					
ANR	1227026	ExpressionStatement	"sign = opus_getrawbits ( rc , 1 )"	65:16:1106:1145	1226864	0	True				
ANR	1227027	AssignmentExpression	"sign = opus_getrawbits ( rc , 1 )"		1226864	0		=			
ANR	1227028	Identifier	sign		1226864	0					
ANR	1227029	CallExpression	"opus_getrawbits ( rc , 1 )"		1226864	1					
ANR	1227030	Callee	opus_getrawbits		1226864	0					
ANR	1227031	Identifier	opus_getrawbits		1226864	0					
ANR	1227032	ArgumentList	rc		1226864	1					
ANR	1227033	Argument	rc		1226864	0					
ANR	1227034	Identifier	rc		1226864	0					
ANR	1227035	Argument	1		1226864	1					
ANR	1227036	PrimaryExpression	1		1226864	0					
ANR	1227037	ExpressionStatement	s -> remaining2 -= 1 << 3	67:16:1164:1187	1226864	1	True				
ANR	1227038	AssignmentExpression	s -> remaining2 -= 1 << 3		1226864	0		-=			
ANR	1227039	PtrMemberAccess	s -> remaining2		1226864	0					
ANR	1227040	Identifier	s		1226864	0					
ANR	1227041	Identifier	remaining2		1226864	1					
ANR	1227042	ShiftExpression	1 << 3		1226864	1		<<			
ANR	1227043	PrimaryExpression	1		1226864	0					
ANR	1227044	PrimaryExpression	3		1226864	1					
ANR	1227045	ExpressionStatement	b -= 1 << 3	69:16:1206:1229	1226864	2	True				
ANR	1227046	AssignmentExpression	b -= 1 << 3		1226864	0		-=			
ANR	1227047	Identifier	b		1226864	0					
ANR	1227048	ShiftExpression	1 << 3		1226864	1		<<			
ANR	1227049	PrimaryExpression	1		1226864	0					
ANR	1227050	PrimaryExpression	3		1226864	1					
ANR	1227051	ExpressionStatement	x [ 0 ] = sign ? - 1.0f : 1.0f	73:12:1259:1285	1226864	2	True				
ANR	1227052	AssignmentExpression	x [ 0 ] = sign ? - 1.0f : 1.0f		1226864	0		=			
ANR	1227053	ArrayIndexing	x [ 0 ]		1226864	0					
ANR	1227054	Identifier	x		1226864	0					
ANR	1227055	PrimaryExpression	0		1226864	1					
ANR	1227056	ConditionalExpression	sign ? - 1.0f : 1.0f		1226864	1					
ANR	1227057	Condition	sign		1226864	0					
ANR	1227058	Identifier	sign		1226864	0					
ANR	1227059	UnaryOperationExpression	- 1.0f		1226864	1					
ANR	1227060	UnaryOperator	-		1226864	0					
ANR	1227061	PrimaryExpression	1.0f		1226864	1					
ANR	1227062	PrimaryExpression	1.0f		1226864	2					
ANR	1227063	ExpressionStatement	x = Y	75:12:1300:1305	1226864	3	True				
ANR	1227064	AssignmentExpression	x = Y		1226864	0		=			
ANR	1227065	Identifier	x		1226864	0					
ANR	1227066	Identifier	Y		1226864	1					
ANR	1227067	IfStatement	if ( lowband_out )		1226864	3					
ANR	1227068	Condition	lowband_out	79:12:1331:1341	1226864	0	True				
ANR	1227069	Identifier	lowband_out		1226864	0					
ANR	1227070	ExpressionStatement	lowband_out [ 0 ] = X [ 0 ]	81:12:1357:1378	1226864	1	True				
ANR	1227071	AssignmentExpression	lowband_out [ 0 ] = X [ 0 ]		1226864	0		=			
ANR	1227072	ArrayIndexing	lowband_out [ 0 ]		1226864	0					
ANR	1227073	Identifier	lowband_out		1226864	0					
ANR	1227074	PrimaryExpression	0		1226864	1					
ANR	1227075	ArrayIndexing	X [ 0 ]		1226864	1					
ANR	1227076	Identifier	X		1226864	0					
ANR	1227077	PrimaryExpression	0		1226864	1					
ANR	1227078	ReturnStatement	return 1 ;	83:8:1389:1397	1226864	4	True				
ANR	1227079	PrimaryExpression	1		1226864	0					
ANR	1227080	IfStatement	if ( ! dualstereo && level == 0 )		1226864	16					
ANR	1227081	Condition	! dualstereo && level == 0	89:8:1417:1441	1226864	0	True				
ANR	1227082	AndExpression	! dualstereo && level == 0		1226864	0		&&			
ANR	1227083	UnaryOperationExpression	! dualstereo		1226864	0					
ANR	1227084	UnaryOperator	!		1226864	0					
ANR	1227085	Identifier	dualstereo		1226864	1					
ANR	1227086	EqualityExpression	level == 0		1226864	1		==			
ANR	1227087	Identifier	level		1226864	0					
ANR	1227088	PrimaryExpression	0		1226864	1					
ANR	1227089	CompoundStatement		79:8:1019:1024	1226864	1					
ANR	1227090	IdentifierDeclStatement	int tf_change = s -> tf_change [ band ] ;	91:8:1455:1489	1226864	0	True				
ANR	1227091	IdentifierDecl	tf_change = s -> tf_change [ band ]		1226864	0					
ANR	1227092	IdentifierDeclType	int		1226864	0					
ANR	1227093	Identifier	tf_change		1226864	1					
ANR	1227094	AssignmentExpression	tf_change = s -> tf_change [ band ]		1226864	2		=			
ANR	1227095	Identifier	tf_change		1226864	0					
ANR	1227096	ArrayIndexing	s -> tf_change [ band ]		1226864	1					
ANR	1227097	PtrMemberAccess	s -> tf_change		1226864	0					
ANR	1227098	Identifier	s		1226864	0					
ANR	1227099	Identifier	tf_change		1226864	1					
ANR	1227100	Identifier	band		1226864	1					
ANR	1227101	IdentifierDeclStatement	int k ;	93:8:1500:1505	1226864	1	True				
ANR	1227102	IdentifierDecl	k		1226864	0					
ANR	1227103	IdentifierDeclType	int		1226864	0					
ANR	1227104	Identifier	k		1226864	1					
ANR	1227105	IfStatement	if ( tf_change > 0 )		1226864	2					
ANR	1227106	Condition	tf_change > 0	95:12:1520:1532	1226864	0	True				
ANR	1227107	RelationalExpression	tf_change > 0		1226864	0		>			
ANR	1227108	Identifier	tf_change		1226864	0					
ANR	1227109	PrimaryExpression	0		1226864	1					
ANR	1227110	ExpressionStatement	recombine = tf_change	97:12:1548:1569	1226864	1	True				
ANR	1227111	AssignmentExpression	recombine = tf_change		1226864	0		=			
ANR	1227112	Identifier	recombine		1226864	0					
ANR	1227113	Identifier	tf_change		1226864	1					
ANR	1227114	IfStatement	if ( lowband && ( recombine || ( ( N_B & 1 ) == 0 && tf_change < 0 ) || B0 > 1 ) )		1226864	3					
ANR	1227115	Condition	lowband && ( recombine || ( ( N_B & 1 ) == 0 && tf_change < 0 ) || B0 > 1 )	103:12:1651:1732	1226864	0	True				
ANR	1227116	AndExpression	lowband && ( recombine || ( ( N_B & 1 ) == 0 && tf_change < 0 ) || B0 > 1 )		1226864	0		&&			
ANR	1227117	Identifier	lowband		1226864	0					
ANR	1227118	OrExpression	recombine || ( ( N_B & 1 ) == 0 && tf_change < 0 ) || B0 > 1		1226864	1		||			
ANR	1227119	Identifier	recombine		1226864	0					
ANR	1227120	OrExpression	( ( N_B & 1 ) == 0 && tf_change < 0 ) || B0 > 1		1226864	1		||			
ANR	1227121	AndExpression	( N_B & 1 ) == 0 && tf_change < 0		1226864	0		&&			
ANR	1227122	EqualityExpression	( N_B & 1 ) == 0		1226864	0		==			
ANR	1227123	BitAndExpression	N_B & 1		1226864	0		&			
ANR	1227124	Identifier	N_B		1226864	0					
ANR	1227125	PrimaryExpression	1		1226864	1					
ANR	1227126	PrimaryExpression	0		1226864	1					
ANR	1227127	RelationalExpression	tf_change < 0		1226864	1		<			
ANR	1227128	Identifier	tf_change		1226864	0					
ANR	1227129	PrimaryExpression	0		1226864	1					
ANR	1227130	RelationalExpression	B0 > 1		1226864	1		>			
ANR	1227131	Identifier	B0		1226864	0					
ANR	1227132	PrimaryExpression	1		1226864	1					
ANR	1227133	CompoundStatement		93:12:1269:1274	1226864	1					
ANR	1227134	IdentifierDeclStatement	int j ;	107:12:1750:1755	1226864	0	True				
ANR	1227135	IdentifierDecl	j		1226864	0					
ANR	1227136	IdentifierDeclType	int		1226864	0					
ANR	1227137	Identifier	j		1226864	1					
ANR	1227138	ForStatement	for ( j = 0 ; j < N ; j ++ )		1226864	1					
ANR	1227139	ForInit	j = 0 ;	109:17:1775:1780	1226864	0	True				
ANR	1227140	AssignmentExpression	j = 0		1226864	0		=			
ANR	1227141	Identifier	j		1226864	0					
ANR	1227142	PrimaryExpression	0		1226864	1					
ANR	1227143	Condition	j < N	109:24:1782:1786	1226864	1	True				
ANR	1227144	RelationalExpression	j < N		1226864	0		<			
ANR	1227145	Identifier	j		1226864	0					
ANR	1227146	Identifier	N		1226864	1					
ANR	1227147	PostIncDecOperationExpression	j ++	109:31:1789:1791	1226864	2	True				
ANR	1227148	Identifier	j		1226864	0					
ANR	1227149	IncDec	++		1226864	1					
ANR	1227150	ExpressionStatement	lowband_scratch [ j ] = lowband [ j ]	111:16:1811:1842	1226864	3	True				
ANR	1227151	AssignmentExpression	lowband_scratch [ j ] = lowband [ j ]		1226864	0		=			
ANR	1227152	ArrayIndexing	lowband_scratch [ j ]		1226864	0					
ANR	1227153	Identifier	lowband_scratch		1226864	0					
ANR	1227154	Identifier	j		1226864	1					
ANR	1227155	ArrayIndexing	lowband [ j ]		1226864	1					
ANR	1227156	Identifier	lowband		1226864	0					
ANR	1227157	Identifier	j		1226864	1					
ANR	1227158	ExpressionStatement	lowband = lowband_scratch	113:12:1857:1882	1226864	2	True				
ANR	1227159	AssignmentExpression	lowband = lowband_scratch		1226864	0		=			
ANR	1227160	Identifier	lowband		1226864	0					
ANR	1227161	Identifier	lowband_scratch		1226864	1					
ANR	1227162	ForStatement	for ( k = 0 ; k < recombine ; k ++ )		1226864	4					
ANR	1227163	ForInit	k = 0 ;	119:13:1911:1916	1226864	0	True				
ANR	1227164	AssignmentExpression	k = 0		1226864	0		=			
ANR	1227165	Identifier	k		1226864	0					
ANR	1227166	PrimaryExpression	0		1226864	1					
ANR	1227167	Condition	k < recombine	119:20:1918:1930	1226864	1	True				
ANR	1227168	RelationalExpression	k < recombine		1226864	0		<			
ANR	1227169	Identifier	k		1226864	0					
ANR	1227170	Identifier	recombine		1226864	1					
ANR	1227171	PostIncDecOperationExpression	k ++	119:35:1933:1935	1226864	2	True				
ANR	1227172	Identifier	k		1226864	0					
ANR	1227173	IncDec	++		1226864	1					
ANR	1227174	CompoundStatement		105:40:1457:1457	1226864	3					
ANR	1227175	IfStatement	if ( lowband )		1226864	0					
ANR	1227176	Condition	lowband	121:16:1957:1963	1226864	0	True				
ANR	1227177	Identifier	lowband		1226864	0					
ANR	1227178	ExpressionStatement	"celt_haar1 ( lowband , N >> k , 1 << k )"	123:16:1983:2018	1226864	1	True				
ANR	1227179	CallExpression	"celt_haar1 ( lowband , N >> k , 1 << k )"		1226864	0					
ANR	1227180	Callee	celt_haar1		1226864	0					
ANR	1227181	Identifier	celt_haar1		1226864	0					
ANR	1227182	ArgumentList	lowband		1226864	1					
ANR	1227183	Argument	lowband		1226864	0					
ANR	1227184	Identifier	lowband		1226864	0					
ANR	1227185	Argument	N >> k		1226864	1					
ANR	1227186	ShiftExpression	N >> k		1226864	0		>>			
ANR	1227187	Identifier	N		1226864	0					
ANR	1227188	Identifier	k		1226864	1					
ANR	1227189	Argument	1 << k		1226864	2					
ANR	1227190	ShiftExpression	1 << k		1226864	0		<<			
ANR	1227191	PrimaryExpression	1		1226864	0					
ANR	1227192	Identifier	k		1226864	1					
ANR	1227193	ExpressionStatement	fill = celt_bit_interleave [ fill & 0xF ] | celt_bit_interleave [ fill >> 4 ] << 2	125:12:2033:2109	1226864	1	True				
ANR	1227194	AssignmentExpression	fill = celt_bit_interleave [ fill & 0xF ] | celt_bit_interleave [ fill >> 4 ] << 2		1226864	0		=			
ANR	1227195	Identifier	fill		1226864	0					
ANR	1227196	InclusiveOrExpression	celt_bit_interleave [ fill & 0xF ] | celt_bit_interleave [ fill >> 4 ] << 2		1226864	1		|			
ANR	1227197	ArrayIndexing	celt_bit_interleave [ fill & 0xF ]		1226864	0					
ANR	1227198	Identifier	celt_bit_interleave		1226864	0					
ANR	1227199	BitAndExpression	fill & 0xF		1226864	1		&			
ANR	1227200	Identifier	fill		1226864	0					
ANR	1227201	PrimaryExpression	0xF		1226864	1					
ANR	1227202	ShiftExpression	celt_bit_interleave [ fill >> 4 ] << 2		1226864	1		<<			
ANR	1227203	ArrayIndexing	celt_bit_interleave [ fill >> 4 ]		1226864	0					
ANR	1227204	Identifier	celt_bit_interleave		1226864	0					
ANR	1227205	ShiftExpression	fill >> 4		1226864	1		>>			
ANR	1227206	Identifier	fill		1226864	0					
ANR	1227207	PrimaryExpression	4		1226864	1					
ANR	1227208	PrimaryExpression	2		1226864	1					
ANR	1227209	ExpressionStatement	blocks >>= recombine	129:8:2131:2151	1226864	5	True				
ANR	1227210	AssignmentExpression	blocks >>= recombine		1226864	0		>>=			
ANR	1227211	Identifier	blocks		1226864	0					
ANR	1227212	Identifier	recombine		1226864	1					
ANR	1227213	ExpressionStatement	N_B <<= recombine	131:8:2162:2179	1226864	6	True				
ANR	1227214	AssignmentExpression	N_B <<= recombine		1226864	0		<<=			
ANR	1227215	Identifier	N_B		1226864	0					
ANR	1227216	Identifier	recombine		1226864	1					
ANR	1227217	WhileStatement	while ( ( N_B & 1 ) == 0 && tf_change < 0 )		1226864	7					
ANR	1227218	Condition	( N_B & 1 ) == 0 && tf_change < 0	137:15:2245:2275	1226864	0	True				
ANR	1227219	AndExpression	( N_B & 1 ) == 0 && tf_change < 0		1226864	0		&&			
ANR	1227220	EqualityExpression	( N_B & 1 ) == 0		1226864	0		==			
ANR	1227221	BitAndExpression	N_B & 1		1226864	0		&			
ANR	1227222	Identifier	N_B		1226864	0					
ANR	1227223	PrimaryExpression	1		1226864	1					
ANR	1227224	PrimaryExpression	0		1226864	1					
ANR	1227225	RelationalExpression	tf_change < 0		1226864	1		<			
ANR	1227226	Identifier	tf_change		1226864	0					
ANR	1227227	PrimaryExpression	0		1226864	1					
ANR	1227228	CompoundStatement		123:48:1797:1797	1226864	1					
ANR	1227229	IfStatement	if ( lowband )		1226864	0					
ANR	1227230	Condition	lowband	139:16:2297:2303	1226864	0	True				
ANR	1227231	Identifier	lowband		1226864	0					
ANR	1227232	ExpressionStatement	"celt_haar1 ( lowband , N_B , blocks )"	141:16:2323:2355	1226864	1	True				
ANR	1227233	CallExpression	"celt_haar1 ( lowband , N_B , blocks )"		1226864	0					
ANR	1227234	Callee	celt_haar1		1226864	0					
ANR	1227235	Identifier	celt_haar1		1226864	0					
ANR	1227236	ArgumentList	lowband		1226864	1					
ANR	1227237	Argument	lowband		1226864	0					
ANR	1227238	Identifier	lowband		1226864	0					
ANR	1227239	Argument	N_B		1226864	1					
ANR	1227240	Identifier	N_B		1226864	0					
ANR	1227241	Argument	blocks		1226864	2					
ANR	1227242	Identifier	blocks		1226864	0					
ANR	1227243	ExpressionStatement	fill |= fill << blocks	143:12:2370:2392	1226864	1	True				
ANR	1227244	AssignmentExpression	fill |= fill << blocks		1226864	0		|=			
ANR	1227245	Identifier	fill		1226864	0					
ANR	1227246	ShiftExpression	fill << blocks		1226864	1		<<			
ANR	1227247	Identifier	fill		1226864	0					
ANR	1227248	Identifier	blocks		1226864	1					
ANR	1227249	ExpressionStatement	blocks <<= 1	145:12:2407:2419	1226864	2	True				
ANR	1227250	AssignmentExpression	blocks <<= 1		1226864	0		<<=			
ANR	1227251	Identifier	blocks		1226864	0					
ANR	1227252	PrimaryExpression	1		1226864	1					
ANR	1227253	ExpressionStatement	N_B >>= 1	147:12:2434:2443	1226864	3	True				
ANR	1227254	AssignmentExpression	N_B >>= 1		1226864	0		>>=			
ANR	1227255	Identifier	N_B		1226864	0					
ANR	1227256	PrimaryExpression	1		1226864	1					
ANR	1227257	ExpressionStatement	time_divide ++	149:12:2458:2471	1226864	4	True				
ANR	1227258	PostIncDecOperationExpression	time_divide ++		1226864	0					
ANR	1227259	Identifier	time_divide		1226864	0					
ANR	1227260	IncDec	++		1226864	1					
ANR	1227261	ExpressionStatement	tf_change ++	151:12:2486:2497	1226864	5	True				
ANR	1227262	PostIncDecOperationExpression	tf_change ++		1226864	0					
ANR	1227263	Identifier	tf_change		1226864	0					
ANR	1227264	IncDec	++		1226864	1					
ANR	1227265	ExpressionStatement	B0 = blocks	155:8:2519:2530	1226864	8	True				
ANR	1227266	AssignmentExpression	B0 = blocks		1226864	0		=			
ANR	1227267	Identifier	B0		1226864	0					
ANR	1227268	Identifier	blocks		1226864	1					
ANR	1227269	ExpressionStatement	N_B0 = N_B	157:8:2541:2551	1226864	9	True				
ANR	1227270	AssignmentExpression	N_B0 = N_B		1226864	0		=			
ANR	1227271	Identifier	N_B0		1226864	0					
ANR	1227272	Identifier	N_B		1226864	1					
ANR	1227273	IfStatement	if ( B0 > 1 && lowband )		1226864	10					
ANR	1227274	Condition	B0 > 1 && lowband	163:12:2647:2663	1226864	0	True				
ANR	1227275	AndExpression	B0 > 1 && lowband		1226864	0		&&			
ANR	1227276	RelationalExpression	B0 > 1		1226864	0		>			
ANR	1227277	Identifier	B0		1226864	0					
ANR	1227278	PrimaryExpression	1		1226864	1					
ANR	1227279	Identifier	lowband		1226864	1					
ANR	1227280	ExpressionStatement	"celt_deinterleave_hadamard ( s -> scratch , lowband , N_B >> recombine , B0 << recombine , longblocks )"	165:12:2679:2813	1226864	1	True				
ANR	1227281	CallExpression	"celt_deinterleave_hadamard ( s -> scratch , lowband , N_B >> recombine , B0 << recombine , longblocks )"		1226864	0					
ANR	1227282	Callee	celt_deinterleave_hadamard		1226864	0					
ANR	1227283	Identifier	celt_deinterleave_hadamard		1226864	0					
ANR	1227284	ArgumentList	s -> scratch		1226864	1					
ANR	1227285	Argument	s -> scratch		1226864	0					
ANR	1227286	PtrMemberAccess	s -> scratch		1226864	0					
ANR	1227287	Identifier	s		1226864	0					
ANR	1227288	Identifier	scratch		1226864	1					
ANR	1227289	Argument	lowband		1226864	1					
ANR	1227290	Identifier	lowband		1226864	0					
ANR	1227291	Argument	N_B >> recombine		1226864	2					
ANR	1227292	ShiftExpression	N_B >> recombine		1226864	0		>>			
ANR	1227293	Identifier	N_B		1226864	0					
ANR	1227294	Identifier	recombine		1226864	1					
ANR	1227295	Argument	B0 << recombine		1226864	3					
ANR	1227296	ShiftExpression	B0 << recombine		1226864	0		<<			
ANR	1227297	Identifier	B0		1226864	0					
ANR	1227298	Identifier	recombine		1226864	1					
ANR	1227299	Argument	longblocks		1226864	4					
ANR	1227300	Identifier	longblocks		1226864	0					
ANR	1227301	ExpressionStatement	cache = celt_cache_bits + celt_cache_index [ ( duration + 1 ) * CELT_MAX_BANDS + band ]	175:4:2908:3003	1226864	17	True				
ANR	1227302	AssignmentExpression	cache = celt_cache_bits + celt_cache_index [ ( duration + 1 ) * CELT_MAX_BANDS + band ]		1226864	0		=			
ANR	1227303	Identifier	cache		1226864	0					
ANR	1227304	AdditiveExpression	celt_cache_bits + celt_cache_index [ ( duration + 1 ) * CELT_MAX_BANDS + band ]		1226864	1		+			
ANR	1227305	Identifier	celt_cache_bits		1226864	0					
ANR	1227306	ArrayIndexing	celt_cache_index [ ( duration + 1 ) * CELT_MAX_BANDS + band ]		1226864	1					
ANR	1227307	Identifier	celt_cache_index		1226864	0					
ANR	1227308	AdditiveExpression	( duration + 1 ) * CELT_MAX_BANDS + band		1226864	1		+			
ANR	1227309	MultiplicativeExpression	( duration + 1 ) * CELT_MAX_BANDS		1226864	0		*			
ANR	1227310	AdditiveExpression	duration + 1		1226864	0		+			
ANR	1227311	Identifier	duration		1226864	0					
ANR	1227312	PrimaryExpression	1		1226864	1					
ANR	1227313	Identifier	CELT_MAX_BANDS		1226864	1					
ANR	1227314	Identifier	band		1226864	1					
ANR	1227315	IfStatement	if ( ! dualstereo && duration >= 0 && b > cache [ cache [ 0 ] ] + 12 && N > 2 )		1226864	18					
ANR	1227316	Condition	! dualstereo && duration >= 0 && b > cache [ cache [ 0 ] ] + 12 && N > 2	179:8:3014:3078	1226864	0	True				
ANR	1227317	AndExpression	! dualstereo && duration >= 0 && b > cache [ cache [ 0 ] ] + 12 && N > 2		1226864	0		&&			
ANR	1227318	UnaryOperationExpression	! dualstereo		1226864	0					
ANR	1227319	UnaryOperator	!		1226864	0					
ANR	1227320	Identifier	dualstereo		1226864	1					
ANR	1227321	AndExpression	duration >= 0 && b > cache [ cache [ 0 ] ] + 12 && N > 2		1226864	1		&&			
ANR	1227322	RelationalExpression	duration >= 0		1226864	0		>=			
ANR	1227323	Identifier	duration		1226864	0					
ANR	1227324	PrimaryExpression	0		1226864	1					
ANR	1227325	AndExpression	b > cache [ cache [ 0 ] ] + 12 && N > 2		1226864	1		&&			
ANR	1227326	RelationalExpression	b > cache [ cache [ 0 ] ] + 12		1226864	0		>			
ANR	1227327	Identifier	b		1226864	0					
ANR	1227328	AdditiveExpression	cache [ cache [ 0 ] ] + 12		1226864	1		+			
ANR	1227329	ArrayIndexing	cache [ cache [ 0 ] ]		1226864	0					
ANR	1227330	Identifier	cache		1226864	0					
ANR	1227331	ArrayIndexing	cache [ 0 ]		1226864	1					
ANR	1227332	Identifier	cache		1226864	0					
ANR	1227333	PrimaryExpression	0		1226864	1					
ANR	1227334	PrimaryExpression	12		1226864	1					
ANR	1227335	RelationalExpression	N > 2		1226864	1		>			
ANR	1227336	Identifier	N		1226864	0					
ANR	1227337	PrimaryExpression	2		1226864	1					
ANR	1227338	CompoundStatement		165:75:2600:2600	1226864	1					
ANR	1227339	ExpressionStatement	N >>= 1	181:8:3092:3099	1226864	0	True				
ANR	1227340	AssignmentExpression	N >>= 1		1226864	0		>>=			
ANR	1227341	Identifier	N		1226864	0					
ANR	1227342	PrimaryExpression	1		1226864	1					
ANR	1227343	ExpressionStatement	Y = X + N	183:8:3110:3119	1226864	1	True				
ANR	1227344	AssignmentExpression	Y = X + N		1226864	0		=			
ANR	1227345	Identifier	Y		1226864	0					
ANR	1227346	AdditiveExpression	X + N		1226864	1		+			
ANR	1227347	Identifier	X		1226864	0					
ANR	1227348	Identifier	N		1226864	1					
ANR	1227349	ExpressionStatement	split = 1	185:8:3130:3139	1226864	2	True				
ANR	1227350	AssignmentExpression	split = 1		1226864	0		=			
ANR	1227351	Identifier	split		1226864	0					
ANR	1227352	PrimaryExpression	1		1226864	1					
ANR	1227353	ExpressionStatement	duration -= 1	187:8:3150:3163	1226864	3	True				
ANR	1227354	AssignmentExpression	duration -= 1		1226864	0		-=			
ANR	1227355	Identifier	duration		1226864	0					
ANR	1227356	PrimaryExpression	1		1226864	1					
ANR	1227357	IfStatement	if ( blocks == 1 )		1226864	4					
ANR	1227358	Condition	blocks == 1	189:12:3178:3188	1226864	0	True				
ANR	1227359	EqualityExpression	blocks == 1		1226864	0		==			
ANR	1227360	Identifier	blocks		1226864	0					
ANR	1227361	PrimaryExpression	1		1226864	1					
ANR	1227362	ExpressionStatement	fill = ( fill & 1 ) | ( fill << 1 )	191:12:3204:3235	1226864	1	True				
ANR	1227363	AssignmentExpression	fill = ( fill & 1 ) | ( fill << 1 )		1226864	0		=			
ANR	1227364	Identifier	fill		1226864	0					
ANR	1227365	InclusiveOrExpression	( fill & 1 ) | ( fill << 1 )		1226864	1		|			
ANR	1227366	BitAndExpression	fill & 1		1226864	0		&			
ANR	1227367	Identifier	fill		1226864	0					
ANR	1227368	PrimaryExpression	1		1226864	1					
ANR	1227369	ShiftExpression	fill << 1		1226864	1		<<			
ANR	1227370	Identifier	fill		1226864	0					
ANR	1227371	PrimaryExpression	1		1226864	1					
ANR	1227372	ExpressionStatement	blocks = ( blocks + 1 ) >> 1	193:8:3246:3272	1226864	5	True				
ANR	1227373	AssignmentExpression	blocks = ( blocks + 1 ) >> 1		1226864	0		=			
ANR	1227374	Identifier	blocks		1226864	0					
ANR	1227375	ShiftExpression	( blocks + 1 ) >> 1		1226864	1		>>			
ANR	1227376	AdditiveExpression	blocks + 1		1226864	0		+			
ANR	1227377	Identifier	blocks		1226864	0					
ANR	1227378	PrimaryExpression	1		1226864	1					
ANR	1227379	PrimaryExpression	1		1226864	1					
ANR	1227380	IfStatement	if ( split )		1226864	19					
ANR	1227381	Condition	split	199:8:3292:3296	1226864	0	True				
ANR	1227382	Identifier	split		1226864	0					
ANR	1227383	CompoundStatement		201:8:2995:3003	1226864	1					
ANR	1227384	IdentifierDeclStatement	int qn ;	201:8:3310:3316	1226864	0	True				
ANR	1227385	IdentifierDecl	qn		1226864	0					
ANR	1227386	IdentifierDeclType	int		1226864	0					
ANR	1227387	Identifier	qn		1226864	1					
ANR	1227388	IdentifierDeclStatement	int itheta = 0 ;	203:8:3327:3341	1226864	1	True				
ANR	1227389	IdentifierDecl	itheta = 0		1226864	0					
ANR	1227390	IdentifierDeclType	int		1226864	0					
ANR	1227391	Identifier	itheta		1226864	1					
ANR	1227392	AssignmentExpression	itheta = 0		1226864	2		=			
ANR	1227393	Identifier	itheta		1226864	0					
ANR	1227394	PrimaryExpression	0		1226864	1					
ANR	1227395	IdentifierDeclStatement	"int mbits , sbits , delta ;"	205:8:3352:3375	1226864	2	True				
ANR	1227396	IdentifierDecl	mbits		1226864	0					
ANR	1227397	IdentifierDeclType	int		1226864	0					
ANR	1227398	Identifier	mbits		1226864	1					
ANR	1227399	IdentifierDecl	sbits		1226864	1					
ANR	1227400	IdentifierDeclType	int		1226864	0					
ANR	1227401	Identifier	sbits		1226864	1					
ANR	1227402	IdentifierDecl	delta		1226864	2					
ANR	1227403	IdentifierDeclType	int		1226864	0					
ANR	1227404	Identifier	delta		1226864	1					
ANR	1227405	IdentifierDeclStatement	int qalloc ;	207:8:3386:3396	1226864	3	True				
ANR	1227406	IdentifierDecl	qalloc		1226864	0					
ANR	1227407	IdentifierDeclType	int		1226864	0					
ANR	1227408	Identifier	qalloc		1226864	1					
ANR	1227409	IdentifierDeclStatement	int pulse_cap ;	209:8:3407:3420	1226864	4	True				
ANR	1227410	IdentifierDecl	pulse_cap		1226864	0					
ANR	1227411	IdentifierDeclType	int		1226864	0					
ANR	1227412	Identifier	pulse_cap		1226864	1					
ANR	1227413	IdentifierDeclStatement	int offset ;	211:8:3431:3441	1226864	5	True				
ANR	1227414	IdentifierDecl	offset		1226864	0					
ANR	1227415	IdentifierDeclType	int		1226864	0					
ANR	1227416	Identifier	offset		1226864	1					
ANR	1227417	IdentifierDeclStatement	int orig_fill ;	213:8:3452:3465	1226864	6	True				
ANR	1227418	IdentifierDecl	orig_fill		1226864	0					
ANR	1227419	IdentifierDeclType	int		1226864	0					
ANR	1227420	Identifier	orig_fill		1226864	1					
ANR	1227421	IdentifierDeclStatement	int tell ;	215:8:3476:3484	1226864	7	True				
ANR	1227422	IdentifierDecl	tell		1226864	0					
ANR	1227423	IdentifierDeclType	int		1226864	0					
ANR	1227424	Identifier	tell		1226864	1					
ANR	1227425	ExpressionStatement	pulse_cap = celt_log_freq_range [ band ] + duration * 8	221:8:3574:3626	1226864	8	True				
ANR	1227426	AssignmentExpression	pulse_cap = celt_log_freq_range [ band ] + duration * 8		1226864	0		=			
ANR	1227427	Identifier	pulse_cap		1226864	0					
ANR	1227428	AdditiveExpression	celt_log_freq_range [ band ] + duration * 8		1226864	1		+			
ANR	1227429	ArrayIndexing	celt_log_freq_range [ band ]		1226864	0					
ANR	1227430	Identifier	celt_log_freq_range		1226864	0					
ANR	1227431	Identifier	band		1226864	1					
ANR	1227432	MultiplicativeExpression	duration * 8		1226864	1		*			
ANR	1227433	Identifier	duration		1226864	0					
ANR	1227434	PrimaryExpression	8		1226864	1					
ANR	1227435	ExpressionStatement	offset = ( pulse_cap >> 1 ) - ( dualstereo && N == 2 ? CELT_QTHETA_OFFSET_TWOPHASE : CELT_QTHETA_OFFSET )	223:8:3637:3797	1226864	9	True				
ANR	1227436	AssignmentExpression	offset = ( pulse_cap >> 1 ) - ( dualstereo && N == 2 ? CELT_QTHETA_OFFSET_TWOPHASE : CELT_QTHETA_OFFSET )		1226864	0		=			
ANR	1227437	Identifier	offset		1226864	0					
ANR	1227438	AdditiveExpression	( pulse_cap >> 1 ) - ( dualstereo && N == 2 ? CELT_QTHETA_OFFSET_TWOPHASE : CELT_QTHETA_OFFSET )		1226864	1		-			
ANR	1227439	ShiftExpression	pulse_cap >> 1		1226864	0		>>			
ANR	1227440	Identifier	pulse_cap		1226864	0					
ANR	1227441	PrimaryExpression	1		1226864	1					
ANR	1227442	ConditionalExpression	dualstereo && N == 2 ? CELT_QTHETA_OFFSET_TWOPHASE : CELT_QTHETA_OFFSET		1226864	1					
ANR	1227443	Condition	dualstereo && N == 2		1226864	0					
ANR	1227444	AndExpression	dualstereo && N == 2		1226864	0		&&			
ANR	1227445	Identifier	dualstereo		1226864	0					
ANR	1227446	EqualityExpression	N == 2		1226864	1		==			
ANR	1227447	Identifier	N		1226864	0					
ANR	1227448	PrimaryExpression	2		1226864	1					
ANR	1227449	Identifier	CELT_QTHETA_OFFSET_TWOPHASE		1226864	1					
ANR	1227450	Identifier	CELT_QTHETA_OFFSET		1226864	2					
ANR	1227451	ExpressionStatement	"qn = ( dualstereo && band >= s -> intensitystereo ) ? 1 : celt_compute_qn ( N , b , offset , pulse_cap , dualstereo )"	227:8:3808:3928	1226864	10	True				
ANR	1227452	AssignmentExpression	"qn = ( dualstereo && band >= s -> intensitystereo ) ? 1 : celt_compute_qn ( N , b , offset , pulse_cap , dualstereo )"		1226864	0		=			
ANR	1227453	Identifier	qn		1226864	0					
ANR	1227454	ConditionalExpression	"( dualstereo && band >= s -> intensitystereo ) ? 1 : celt_compute_qn ( N , b , offset , pulse_cap , dualstereo )"		1226864	1					
ANR	1227455	Condition	dualstereo && band >= s -> intensitystereo		1226864	0					
ANR	1227456	AndExpression	dualstereo && band >= s -> intensitystereo		1226864	0		&&			
ANR	1227457	Identifier	dualstereo		1226864	0					
ANR	1227458	RelationalExpression	band >= s -> intensitystereo		1226864	1		>=			
ANR	1227459	Identifier	band		1226864	0					
ANR	1227460	PtrMemberAccess	s -> intensitystereo		1226864	1					
ANR	1227461	Identifier	s		1226864	0					
ANR	1227462	Identifier	intensitystereo		1226864	1					
ANR	1227463	PrimaryExpression	1		1226864	1					
ANR	1227464	CallExpression	"celt_compute_qn ( N , b , offset , pulse_cap , dualstereo )"		1226864	2					
ANR	1227465	Callee	celt_compute_qn		1226864	0					
ANR	1227466	Identifier	celt_compute_qn		1226864	0					
ANR	1227467	ArgumentList	N		1226864	1					
ANR	1227468	Argument	N		1226864	0					
ANR	1227469	Identifier	N		1226864	0					
ANR	1227470	Argument	b		1226864	1					
ANR	1227471	Identifier	b		1226864	0					
ANR	1227472	Argument	offset		1226864	2					
ANR	1227473	Identifier	offset		1226864	0					
ANR	1227474	Argument	pulse_cap		1226864	3					
ANR	1227475	Identifier	pulse_cap		1226864	0					
ANR	1227476	Argument	dualstereo		1226864	4					
ANR	1227477	Identifier	dualstereo		1226864	0					
ANR	1227478	ExpressionStatement	tell = opus_rc_tell_frac ( rc )	231:8:3939:3967	1226864	11	True				
ANR	1227479	AssignmentExpression	tell = opus_rc_tell_frac ( rc )		1226864	0		=			
ANR	1227480	Identifier	tell		1226864	0					
ANR	1227481	CallExpression	opus_rc_tell_frac ( rc )		1226864	1					
ANR	1227482	Callee	opus_rc_tell_frac		1226864	0					
ANR	1227483	Identifier	opus_rc_tell_frac		1226864	0					
ANR	1227484	ArgumentList	rc		1226864	1					
ANR	1227485	Argument	rc		1226864	0					
ANR	1227486	Identifier	rc		1226864	0					
ANR	1227487	IfStatement	if ( qn != 1 )		1226864	12					
ANR	1227488	Condition	qn != 1	233:12:3982:3988	1226864	0	True				
ANR	1227489	EqualityExpression	qn != 1		1226864	0		!=			
ANR	1227490	Identifier	qn		1226864	0					
ANR	1227491	PrimaryExpression	1		1226864	1					
ANR	1227492	CompoundStatement		219:21:3510:3510	1226864	1					
ANR	1227493	IfStatement	if ( dualstereo && N > 2 )		1226864	0					
ANR	1227494	Condition	dualstereo && N > 2	239:16:4166:4184	1226864	0	True				
ANR	1227495	AndExpression	dualstereo && N > 2		1226864	0		&&			
ANR	1227496	Identifier	dualstereo		1226864	0					
ANR	1227497	RelationalExpression	N > 2		1226864	1		>			
ANR	1227498	Identifier	N		1226864	0					
ANR	1227499	PrimaryExpression	2		1226864	1					
ANR	1227500	ExpressionStatement	"itheta = opus_rc_stepmodel ( rc , qn / 2 )"	241:16:4204:4240	1226864	1	True				
ANR	1227501	AssignmentExpression	"itheta = opus_rc_stepmodel ( rc , qn / 2 )"		1226864	0		=			
ANR	1227502	Identifier	itheta		1226864	0					
ANR	1227503	CallExpression	"opus_rc_stepmodel ( rc , qn / 2 )"		1226864	1					
ANR	1227504	Callee	opus_rc_stepmodel		1226864	0					
ANR	1227505	Identifier	opus_rc_stepmodel		1226864	0					
ANR	1227506	ArgumentList	rc		1226864	1					
ANR	1227507	Argument	rc		1226864	0					
ANR	1227508	Identifier	rc		1226864	0					
ANR	1227509	Argument	qn / 2		1226864	1					
ANR	1227510	MultiplicativeExpression	qn / 2		1226864	0		/			
ANR	1227511	Identifier	qn		1226864	0					
ANR	1227512	PrimaryExpression	2		1226864	1					
ANR	1227513	ElseStatement	else		1226864	0					
ANR	1227514	IfStatement	if ( dualstereo || B0 > 1 )		1226864	0					
ANR	1227515	Condition	dualstereo || B0 > 1	243:21:4264:4283	1226864	0	True				
ANR	1227516	OrExpression	dualstereo || B0 > 1		1226864	0		||			
ANR	1227517	Identifier	dualstereo		1226864	0					
ANR	1227518	RelationalExpression	B0 > 1		1226864	1		>			
ANR	1227519	Identifier	B0		1226864	0					
ANR	1227520	PrimaryExpression	1		1226864	1					
ANR	1227521	ExpressionStatement	"itheta = opus_rc_unimodel ( rc , qn + 1 )"	245:16:4303:4338	1226864	1	True				
ANR	1227522	AssignmentExpression	"itheta = opus_rc_unimodel ( rc , qn + 1 )"		1226864	0		=			
ANR	1227523	Identifier	itheta		1226864	0					
ANR	1227524	CallExpression	"opus_rc_unimodel ( rc , qn + 1 )"		1226864	1					
ANR	1227525	Callee	opus_rc_unimodel		1226864	0					
ANR	1227526	Identifier	opus_rc_unimodel		1226864	0					
ANR	1227527	ArgumentList	rc		1226864	1					
ANR	1227528	Argument	rc		1226864	0					
ANR	1227529	Identifier	rc		1226864	0					
ANR	1227530	Argument	qn + 1		1226864	1					
ANR	1227531	AdditiveExpression	qn + 1		1226864	0		+			
ANR	1227532	Identifier	qn		1226864	0					
ANR	1227533	PrimaryExpression	1		1226864	1					
ANR	1227534	ElseStatement	else		1226864	0					
ANR	1227535	ExpressionStatement	"itheta = opus_rc_trimodel ( rc , qn )"	249:16:4375:4408	1226864	0	True				
ANR	1227536	AssignmentExpression	"itheta = opus_rc_trimodel ( rc , qn )"		1226864	0		=			
ANR	1227537	Identifier	itheta		1226864	0					
ANR	1227538	CallExpression	"opus_rc_trimodel ( rc , qn )"		1226864	1					
ANR	1227539	Callee	opus_rc_trimodel		1226864	0					
ANR	1227540	Identifier	opus_rc_trimodel		1226864	0					
ANR	1227541	ArgumentList	rc		1226864	1					
ANR	1227542	Argument	rc		1226864	0					
ANR	1227543	Identifier	rc		1226864	0					
ANR	1227544	Argument	qn		1226864	1					
ANR	1227545	Identifier	qn		1226864	0					
ANR	1227546	ExpressionStatement	itheta = itheta * 16384 / qn	251:12:4423:4451	1226864	1	True				
ANR	1227547	AssignmentExpression	itheta = itheta * 16384 / qn		1226864	0		=			
ANR	1227548	Identifier	itheta		1226864	0					
ANR	1227549	MultiplicativeExpression	itheta * 16384 / qn		1226864	1		*			
ANR	1227550	Identifier	itheta		1226864	0					
ANR	1227551	MultiplicativeExpression	16384 / qn		1226864	1		/			
ANR	1227552	PrimaryExpression	16384		1226864	0					
ANR	1227553	Identifier	qn		1226864	1					
ANR	1227554	ElseStatement	else		1226864	0					
ANR	1227555	IfStatement	if ( dualstereo )		1226864	0					
ANR	1227556	Condition	dualstereo	257:19:4616:4625	1226864	0	True				
ANR	1227557	Identifier	dualstereo		1226864	0					
ANR	1227558	CompoundStatement		243:31:4147:4147	1226864	1					
ANR	1227559	ExpressionStatement	"inv = ( b > 2 << 3 && s -> remaining2 > 2 << 3 ) ? opus_rc_p2model ( rc , 2 ) : 0"	259:12:4643:4716	1226864	0	True				
ANR	1227560	AssignmentExpression	"inv = ( b > 2 << 3 && s -> remaining2 > 2 << 3 ) ? opus_rc_p2model ( rc , 2 ) : 0"		1226864	0		=			
ANR	1227561	Identifier	inv		1226864	0					
ANR	1227562	ConditionalExpression	"( b > 2 << 3 && s -> remaining2 > 2 << 3 ) ? opus_rc_p2model ( rc , 2 ) : 0"		1226864	1					
ANR	1227563	Condition	b > 2 << 3 && s -> remaining2 > 2 << 3		1226864	0					
ANR	1227564	AndExpression	b > 2 << 3 && s -> remaining2 > 2 << 3		1226864	0		&&			
ANR	1227565	RelationalExpression	b > 2 << 3		1226864	0		>			
ANR	1227566	Identifier	b		1226864	0					
ANR	1227567	ShiftExpression	2 << 3		1226864	1		<<			
ANR	1227568	PrimaryExpression	2		1226864	0					
ANR	1227569	PrimaryExpression	3		1226864	1					
ANR	1227570	RelationalExpression	s -> remaining2 > 2 << 3		1226864	1		>			
ANR	1227571	PtrMemberAccess	s -> remaining2		1226864	0					
ANR	1227572	Identifier	s		1226864	0					
ANR	1227573	Identifier	remaining2		1226864	1					
ANR	1227574	ShiftExpression	2 << 3		1226864	1		<<			
ANR	1227575	PrimaryExpression	2		1226864	0					
ANR	1227576	PrimaryExpression	3		1226864	1					
ANR	1227577	CallExpression	"opus_rc_p2model ( rc , 2 )"		1226864	1					
ANR	1227578	Callee	opus_rc_p2model		1226864	0					
ANR	1227579	Identifier	opus_rc_p2model		1226864	0					
ANR	1227580	ArgumentList	rc		1226864	1					
ANR	1227581	Argument	rc		1226864	0					
ANR	1227582	Identifier	rc		1226864	0					
ANR	1227583	Argument	2		1226864	1					
ANR	1227584	PrimaryExpression	2		1226864	0					
ANR	1227585	PrimaryExpression	0		1226864	2					
ANR	1227586	ExpressionStatement	itheta = 0	261:12:4731:4741	1226864	1	True				
ANR	1227587	AssignmentExpression	itheta = 0		1226864	0		=			
ANR	1227588	Identifier	itheta		1226864	0					
ANR	1227589	PrimaryExpression	0		1226864	1					
ANR	1227590	ExpressionStatement	qalloc = opus_rc_tell_frac ( rc ) - tell	265:8:4763:4800	1226864	13	True				
ANR	1227591	AssignmentExpression	qalloc = opus_rc_tell_frac ( rc ) - tell		1226864	0		=			
ANR	1227592	Identifier	qalloc		1226864	0					
ANR	1227593	AdditiveExpression	opus_rc_tell_frac ( rc ) - tell		1226864	1		-			
ANR	1227594	CallExpression	opus_rc_tell_frac ( rc )		1226864	0					
ANR	1227595	Callee	opus_rc_tell_frac		1226864	0					
ANR	1227596	Identifier	opus_rc_tell_frac		1226864	0					
ANR	1227597	ArgumentList	rc		1226864	1					
ANR	1227598	Argument	rc		1226864	0					
ANR	1227599	Identifier	rc		1226864	0					
ANR	1227600	Identifier	tell		1226864	1					
ANR	1227601	ExpressionStatement	b -= qalloc	267:8:4811:4822	1226864	14	True				
ANR	1227602	AssignmentExpression	b -= qalloc		1226864	0		-=			
ANR	1227603	Identifier	b		1226864	0					
ANR	1227604	Identifier	qalloc		1226864	1					
ANR	1227605	ExpressionStatement	orig_fill = fill	271:8:4835:4851	1226864	15	True				
ANR	1227606	AssignmentExpression	orig_fill = fill		1226864	0		=			
ANR	1227607	Identifier	orig_fill		1226864	0					
ANR	1227608	Identifier	fill		1226864	1					
ANR	1227609	IfStatement	if ( itheta == 0 )		1226864	16					
ANR	1227610	Condition	itheta == 0	273:12:4866:4876	1226864	0	True				
ANR	1227611	EqualityExpression	itheta == 0		1226864	0		==			
ANR	1227612	Identifier	itheta		1226864	0					
ANR	1227613	PrimaryExpression	0		1226864	1					
ANR	1227614	CompoundStatement		259:25:4398:4398	1226864	1					
ANR	1227615	ExpressionStatement	imid = 32767	275:12:4894:4906	1226864	0	True				
ANR	1227616	AssignmentExpression	imid = 32767		1226864	0		=			
ANR	1227617	Identifier	imid		1226864	0					
ANR	1227618	PrimaryExpression	32767		1226864	1					
ANR	1227619	ExpressionStatement	iside = 0	277:12:4921:4930	1226864	1	True				
ANR	1227620	AssignmentExpression	iside = 0		1226864	0		=			
ANR	1227621	Identifier	iside		1226864	0					
ANR	1227622	PrimaryExpression	0		1226864	1					
ANR	1227623	ExpressionStatement	fill &= ( 1 << blocks ) - 1	279:12:4945:4970	1226864	2	True				
ANR	1227624	AssignmentExpression	fill &= ( 1 << blocks ) - 1		1226864	0		&=			
ANR	1227625	Identifier	fill		1226864	0					
ANR	1227626	AdditiveExpression	( 1 << blocks ) - 1		1226864	1		-			
ANR	1227627	ShiftExpression	1 << blocks		1226864	0		<<			
ANR	1227628	PrimaryExpression	1		1226864	0					
ANR	1227629	Identifier	blocks		1226864	1					
ANR	1227630	PrimaryExpression	1		1226864	1					
ANR	1227631	ExpressionStatement	delta = - 16384	281:12:4985:4999	1226864	3	True				
ANR	1227632	AssignmentExpression	delta = - 16384		1226864	0		=			
ANR	1227633	Identifier	delta		1226864	0					
ANR	1227634	UnaryOperationExpression	- 16384		1226864	1					
ANR	1227635	UnaryOperator	-		1226864	0					
ANR	1227636	PrimaryExpression	16384		1226864	1					
ANR	1227637	ElseStatement	else		1226864	0					
ANR	1227638	IfStatement	if ( itheta == 16384 )		1226864	0					
ANR	1227639	Condition	itheta == 16384	283:19:5021:5035	1226864	0	True				
ANR	1227640	EqualityExpression	itheta == 16384		1226864	0		==			
ANR	1227641	Identifier	itheta		1226864	0					
ANR	1227642	PrimaryExpression	16384		1226864	1					
ANR	1227643	CompoundStatement		269:36:4557:4557	1226864	1					
ANR	1227644	ExpressionStatement	imid = 0	285:12:5053:5061	1226864	0	True				
ANR	1227645	AssignmentExpression	imid = 0		1226864	0		=			
ANR	1227646	Identifier	imid		1226864	0					
ANR	1227647	PrimaryExpression	0		1226864	1					
ANR	1227648	ExpressionStatement	iside = 32767	287:12:5076:5089	1226864	1	True				
ANR	1227649	AssignmentExpression	iside = 32767		1226864	0		=			
ANR	1227650	Identifier	iside		1226864	0					
ANR	1227651	PrimaryExpression	32767		1226864	1					
ANR	1227652	ExpressionStatement	fill &= ( ( 1 << blocks ) - 1 ) << blocks	289:12:5104:5141	1226864	2	True				
ANR	1227653	AssignmentExpression	fill &= ( ( 1 << blocks ) - 1 ) << blocks		1226864	0		&=			
ANR	1227654	Identifier	fill		1226864	0					
ANR	1227655	ShiftExpression	( ( 1 << blocks ) - 1 ) << blocks		1226864	1		<<			
ANR	1227656	AdditiveExpression	( 1 << blocks ) - 1		1226864	0		-			
ANR	1227657	ShiftExpression	1 << blocks		1226864	0		<<			
ANR	1227658	PrimaryExpression	1		1226864	0					
ANR	1227659	Identifier	blocks		1226864	1					
ANR	1227660	PrimaryExpression	1		1226864	1					
ANR	1227661	Identifier	blocks		1226864	1					
ANR	1227662	ExpressionStatement	delta = 16384	291:12:5156:5169	1226864	3	True				
ANR	1227663	AssignmentExpression	delta = 16384		1226864	0		=			
ANR	1227664	Identifier	delta		1226864	0					
ANR	1227665	PrimaryExpression	16384		1226864	1					
ANR	1227666	ElseStatement	else		1226864	0					
ANR	1227667	CompoundStatement		279:15:4706:4706	1226864	0					
ANR	1227668	ExpressionStatement	imid = celt_cos ( itheta )	295:12:5202:5225	1226864	0	True				
ANR	1227669	AssignmentExpression	imid = celt_cos ( itheta )		1226864	0		=			
ANR	1227670	Identifier	imid		1226864	0					
ANR	1227671	CallExpression	celt_cos ( itheta )		1226864	1					
ANR	1227672	Callee	celt_cos		1226864	0					
ANR	1227673	Identifier	celt_cos		1226864	0					
ANR	1227674	ArgumentList	itheta		1226864	1					
ANR	1227675	Argument	itheta		1226864	0					
ANR	1227676	Identifier	itheta		1226864	0					
ANR	1227677	ExpressionStatement	iside = celt_cos ( 16384 - itheta )	297:12:5240:5270	1226864	1	True				
ANR	1227678	AssignmentExpression	iside = celt_cos ( 16384 - itheta )		1226864	0		=			
ANR	1227679	Identifier	iside		1226864	0					
ANR	1227680	CallExpression	celt_cos ( 16384 - itheta )		1226864	1					
ANR	1227681	Callee	celt_cos		1226864	0					
ANR	1227682	Identifier	celt_cos		1226864	0					
ANR	1227683	ArgumentList	16384 - itheta		1226864	1					
ANR	1227684	Argument	16384 - itheta		1226864	0					
ANR	1227685	AdditiveExpression	16384 - itheta		1226864	0		-			
ANR	1227686	PrimaryExpression	16384		1226864	0					
ANR	1227687	Identifier	itheta		1226864	1					
ANR	1227688	ExpressionStatement	"delta = ROUND_MUL16 ( ( N - 1 ) << 7 , celt_log2tan ( iside , imid ) )"	303:12:5395:5455	1226864	2	True				
ANR	1227689	AssignmentExpression	"delta = ROUND_MUL16 ( ( N - 1 ) << 7 , celt_log2tan ( iside , imid ) )"		1226864	0		=			
ANR	1227690	Identifier	delta		1226864	0					
ANR	1227691	CallExpression	"ROUND_MUL16 ( ( N - 1 ) << 7 , celt_log2tan ( iside , imid ) )"		1226864	1					
ANR	1227692	Callee	ROUND_MUL16		1226864	0					
ANR	1227693	Identifier	ROUND_MUL16		1226864	0					
ANR	1227694	ArgumentList	( N - 1 ) << 7		1226864	1					
ANR	1227695	Argument	( N - 1 ) << 7		1226864	0					
ANR	1227696	ShiftExpression	( N - 1 ) << 7		1226864	0		<<			
ANR	1227697	AdditiveExpression	N - 1		1226864	0		-			
ANR	1227698	Identifier	N		1226864	0					
ANR	1227699	PrimaryExpression	1		1226864	1					
ANR	1227700	PrimaryExpression	7		1226864	1					
ANR	1227701	Argument	"celt_log2tan ( iside , imid )"		1226864	1					
ANR	1227702	CallExpression	"celt_log2tan ( iside , imid )"		1226864	0					
ANR	1227703	Callee	celt_log2tan		1226864	0					
ANR	1227704	Identifier	celt_log2tan		1226864	0					
ANR	1227705	ArgumentList	iside		1226864	1					
ANR	1227706	Argument	iside		1226864	0					
ANR	1227707	Identifier	iside		1226864	0					
ANR	1227708	Argument	imid		1226864	1					
ANR	1227709	Identifier	imid		1226864	0					
ANR	1227710	ExpressionStatement	mid = imid / 32768.0f	309:8:5479:5502	1226864	17	True				
ANR	1227711	AssignmentExpression	mid = imid / 32768.0f		1226864	0		=			
ANR	1227712	Identifier	mid		1226864	0					
ANR	1227713	MultiplicativeExpression	imid / 32768.0f		1226864	1		/			
ANR	1227714	Identifier	imid		1226864	0					
ANR	1227715	PrimaryExpression	32768.0f		1226864	1					
ANR	1227716	ExpressionStatement	side = iside / 32768.0f	311:8:5513:5536	1226864	18	True				
ANR	1227717	AssignmentExpression	side = iside / 32768.0f		1226864	0		=			
ANR	1227718	Identifier	side		1226864	0					
ANR	1227719	MultiplicativeExpression	iside / 32768.0f		1226864	1		/			
ANR	1227720	Identifier	iside		1226864	0					
ANR	1227721	PrimaryExpression	32768.0f		1226864	1					
ANR	1227722	IfStatement	if ( N == 2 && dualstereo )		1226864	19					
ANR	1227723	Condition	N == 2 && dualstereo	321:12:5747:5766	1226864	0	True				
ANR	1227724	AndExpression	N == 2 && dualstereo		1226864	0		&&			
ANR	1227725	EqualityExpression	N == 2		1226864	0		==			
ANR	1227726	Identifier	N		1226864	0					
ANR	1227727	PrimaryExpression	2		1226864	1					
ANR	1227728	Identifier	dualstereo		1226864	1					
ANR	1227729	CompoundStatement		315:12:5374:5388	1226864	1					
ANR	1227730	IdentifierDeclStatement	int c ;	323:12:5784:5789	1226864	0	True				
ANR	1227731	IdentifierDecl	c		1226864	0					
ANR	1227732	IdentifierDeclType	int		1226864	0					
ANR	1227733	Identifier	c		1226864	1					
ANR	1227734	IdentifierDeclStatement	int sign = 0 ;	325:12:5804:5816	1226864	1	True				
ANR	1227735	IdentifierDecl	sign = 0		1226864	0					
ANR	1227736	IdentifierDeclType	int		1226864	0					
ANR	1227737	Identifier	sign		1226864	1					
ANR	1227738	AssignmentExpression	sign = 0		1226864	2		=			
ANR	1227739	Identifier	sign		1226864	0					
ANR	1227740	PrimaryExpression	0		1226864	1					
ANR	1227741	IdentifierDeclStatement	float tmp ;	327:12:5831:5840	1226864	2	True				
ANR	1227742	IdentifierDecl	tmp		1226864	0					
ANR	1227743	IdentifierDeclType	float		1226864	0					
ANR	1227744	Identifier	tmp		1226864	1					
ANR	1227745	IdentifierDeclStatement	"float * x2 , * y2 ;"	329:12:5855:5869	1226864	3	True				
ANR	1227746	IdentifierDecl	* x2		1226864	0					
ANR	1227747	IdentifierDeclType	float *		1226864	0					
ANR	1227748	Identifier	x2		1226864	1					
ANR	1227749	IdentifierDecl	* y2		1226864	1					
ANR	1227750	IdentifierDeclType	float *		1226864	0					
ANR	1227751	Identifier	y2		1226864	1					
ANR	1227752	ExpressionStatement	mbits = b	331:12:5884:5893	1226864	4	True				
ANR	1227753	AssignmentExpression	mbits = b		1226864	0		=			
ANR	1227754	Identifier	mbits		1226864	0					
ANR	1227755	Identifier	b		1226864	1					
ANR	1227756	ExpressionStatement	sbits = ( itheta != 0 && itheta != 16384 ) ? 1 << 3 : 0	335:12:5958:6011	1226864	5	True				
ANR	1227757	AssignmentExpression	sbits = ( itheta != 0 && itheta != 16384 ) ? 1 << 3 : 0		1226864	0		=			
ANR	1227758	Identifier	sbits		1226864	0					
ANR	1227759	ConditionalExpression	( itheta != 0 && itheta != 16384 ) ? 1 << 3 : 0		1226864	1					
ANR	1227760	Condition	itheta != 0 && itheta != 16384		1226864	0					
ANR	1227761	AndExpression	itheta != 0 && itheta != 16384		1226864	0		&&			
ANR	1227762	EqualityExpression	itheta != 0		1226864	0		!=			
ANR	1227763	Identifier	itheta		1226864	0					
ANR	1227764	PrimaryExpression	0		1226864	1					
ANR	1227765	EqualityExpression	itheta != 16384		1226864	1		!=			
ANR	1227766	Identifier	itheta		1226864	0					
ANR	1227767	PrimaryExpression	16384		1226864	1					
ANR	1227768	ShiftExpression	1 << 3		1226864	1		<<			
ANR	1227769	PrimaryExpression	1		1226864	0					
ANR	1227770	PrimaryExpression	3		1226864	1					
ANR	1227771	PrimaryExpression	0		1226864	2					
ANR	1227772	ExpressionStatement	mbits -= sbits	337:12:6026:6040	1226864	6	True				
ANR	1227773	AssignmentExpression	mbits -= sbits		1226864	0		-=			
ANR	1227774	Identifier	mbits		1226864	0					
ANR	1227775	Identifier	sbits		1226864	1					
ANR	1227776	ExpressionStatement	c = ( itheta > 8192 )	339:12:6055:6074	1226864	7	True				
ANR	1227777	AssignmentExpression	c = ( itheta > 8192 )		1226864	0		=			
ANR	1227778	Identifier	c		1226864	0					
ANR	1227779	RelationalExpression	itheta > 8192		1226864	1		>			
ANR	1227780	Identifier	itheta		1226864	0					
ANR	1227781	PrimaryExpression	8192		1226864	1					
ANR	1227782	ExpressionStatement	s -> remaining2 -= qalloc + sbits	341:12:6089:6118	1226864	8	True				
ANR	1227783	AssignmentExpression	s -> remaining2 -= qalloc + sbits		1226864	0		-=			
ANR	1227784	PtrMemberAccess	s -> remaining2		1226864	0					
ANR	1227785	Identifier	s		1226864	0					
ANR	1227786	Identifier	remaining2		1226864	1					
ANR	1227787	AdditiveExpression	qalloc + sbits		1226864	1		+			
ANR	1227788	Identifier	qalloc		1226864	0					
ANR	1227789	Identifier	sbits		1226864	1					
ANR	1227790	ExpressionStatement	x2 = c ? Y : X	345:12:6135:6149	1226864	9	True				
ANR	1227791	AssignmentExpression	x2 = c ? Y : X		1226864	0		=			
ANR	1227792	Identifier	x2		1226864	0					
ANR	1227793	ConditionalExpression	c ? Y : X		1226864	1					
ANR	1227794	Condition	c		1226864	0					
ANR	1227795	Identifier	c		1226864	0					
ANR	1227796	Identifier	Y		1226864	1					
ANR	1227797	Identifier	X		1226864	2					
ANR	1227798	ExpressionStatement	y2 = c ? X : Y	347:12:6164:6178	1226864	10	True				
ANR	1227799	AssignmentExpression	y2 = c ? X : Y		1226864	0		=			
ANR	1227800	Identifier	y2		1226864	0					
ANR	1227801	ConditionalExpression	c ? X : Y		1226864	1					
ANR	1227802	Condition	c		1226864	0					
ANR	1227803	Identifier	c		1226864	0					
ANR	1227804	Identifier	X		1226864	1					
ANR	1227805	Identifier	Y		1226864	2					
ANR	1227806	IfStatement	if ( sbits )		1226864	11					
ANR	1227807	Condition	sbits	349:16:6197:6201	1226864	0	True				
ANR	1227808	Identifier	sbits		1226864	0					
ANR	1227809	ExpressionStatement	"sign = opus_getrawbits ( rc , 1 )"	351:16:6221:6250	1226864	1	True				
ANR	1227810	AssignmentExpression	"sign = opus_getrawbits ( rc , 1 )"		1226864	0		=			
ANR	1227811	Identifier	sign		1226864	0					
ANR	1227812	CallExpression	"opus_getrawbits ( rc , 1 )"		1226864	1					
ANR	1227813	Callee	opus_getrawbits		1226864	0					
ANR	1227814	Identifier	opus_getrawbits		1226864	0					
ANR	1227815	ArgumentList	rc		1226864	1					
ANR	1227816	Argument	rc		1226864	0					
ANR	1227817	Identifier	rc		1226864	0					
ANR	1227818	Argument	1		1226864	1					
ANR	1227819	PrimaryExpression	1		1226864	0					
ANR	1227820	ExpressionStatement	sign = 1 - 2 * sign	353:12:6265:6284	1226864	12	True				
ANR	1227821	AssignmentExpression	sign = 1 - 2 * sign		1226864	0		=			
ANR	1227822	Identifier	sign		1226864	0					
ANR	1227823	AdditiveExpression	1 - 2 * sign		1226864	1		-			
ANR	1227824	PrimaryExpression	1		1226864	0					
ANR	1227825	MultiplicativeExpression	2 * sign		1226864	1		*			
ANR	1227826	PrimaryExpression	2		1226864	0					
ANR	1227827	Identifier	sign		1226864	1					
ANR	1227828	ExpressionStatement	"cm = celt_decode_band ( s , rc , band , x2 , NULL , N , mbits , blocks , lowband , duration , lowband_out , level , gain , lowband_scratch , orig_fill )"	359:12:6450:6655	1226864	13	True				
ANR	1227829	AssignmentExpression	"cm = celt_decode_band ( s , rc , band , x2 , NULL , N , mbits , blocks , lowband , duration , lowband_out , level , gain , lowband_scratch , orig_fill )"		1226864	0		=			
ANR	1227830	Identifier	cm		1226864	0					
ANR	1227831	CallExpression	"celt_decode_band ( s , rc , band , x2 , NULL , N , mbits , blocks , lowband , duration , lowband_out , level , gain , lowband_scratch , orig_fill )"		1226864	1					
ANR	1227832	Callee	celt_decode_band		1226864	0					
ANR	1227833	Identifier	celt_decode_band		1226864	0					
ANR	1227834	ArgumentList	s		1226864	1					
ANR	1227835	Argument	s		1226864	0					
ANR	1227836	Identifier	s		1226864	0					
ANR	1227837	Argument	rc		1226864	1					
ANR	1227838	Identifier	rc		1226864	0					
ANR	1227839	Argument	band		1226864	2					
ANR	1227840	Identifier	band		1226864	0					
ANR	1227841	Argument	x2		1226864	3					
ANR	1227842	Identifier	x2		1226864	0					
ANR	1227843	Argument	NULL		1226864	4					
ANR	1227844	Identifier	NULL		1226864	0					
ANR	1227845	Argument	N		1226864	5					
ANR	1227846	Identifier	N		1226864	0					
ANR	1227847	Argument	mbits		1226864	6					
ANR	1227848	Identifier	mbits		1226864	0					
ANR	1227849	Argument	blocks		1226864	7					
ANR	1227850	Identifier	blocks		1226864	0					
ANR	1227851	Argument	lowband		1226864	8					
ANR	1227852	Identifier	lowband		1226864	0					
ANR	1227853	Argument	duration		1226864	9					
ANR	1227854	Identifier	duration		1226864	0					
ANR	1227855	Argument	lowband_out		1226864	10					
ANR	1227856	Identifier	lowband_out		1226864	0					
ANR	1227857	Argument	level		1226864	11					
ANR	1227858	Identifier	level		1226864	0					
ANR	1227859	Argument	gain		1226864	12					
ANR	1227860	Identifier	gain		1226864	0					
ANR	1227861	Argument	lowband_scratch		1226864	13					
ANR	1227862	Identifier	lowband_scratch		1226864	0					
ANR	1227863	Argument	orig_fill		1226864	14					
ANR	1227864	Identifier	orig_fill		1226864	0					
ANR	1227865	ExpressionStatement	y2 [ 0 ] = - sign * x2 [ 1 ]	369:12:6840:6861	1226864	14	True				
ANR	1227866	AssignmentExpression	y2 [ 0 ] = - sign * x2 [ 1 ]		1226864	0		=			
ANR	1227867	ArrayIndexing	y2 [ 0 ]		1226864	0					
ANR	1227868	Identifier	y2		1226864	0					
ANR	1227869	PrimaryExpression	0		1226864	1					
ANR	1227870	MultiplicativeExpression	- sign * x2 [ 1 ]		1226864	1		*			
ANR	1227871	UnaryOperationExpression	- sign		1226864	0					
ANR	1227872	UnaryOperator	-		1226864	0					
ANR	1227873	Identifier	sign		1226864	1					
ANR	1227874	ArrayIndexing	x2 [ 1 ]		1226864	1					
ANR	1227875	Identifier	x2		1226864	0					
ANR	1227876	PrimaryExpression	1		1226864	1					
ANR	1227877	ExpressionStatement	y2 [ 1 ] = sign * x2 [ 0 ]	371:12:6876:6897	1226864	15	True				
ANR	1227878	AssignmentExpression	y2 [ 1 ] = sign * x2 [ 0 ]		1226864	0		=			
ANR	1227879	ArrayIndexing	y2 [ 1 ]		1226864	0					
ANR	1227880	Identifier	y2		1226864	0					
ANR	1227881	PrimaryExpression	1		1226864	1					
ANR	1227882	MultiplicativeExpression	sign * x2 [ 0 ]		1226864	1		*			
ANR	1227883	Identifier	sign		1226864	0					
ANR	1227884	ArrayIndexing	x2 [ 0 ]		1226864	1					
ANR	1227885	Identifier	x2		1226864	0					
ANR	1227886	PrimaryExpression	0		1226864	1					
ANR	1227887	ExpressionStatement	X [ 0 ] *= mid	373:12:6912:6923	1226864	16	True				
ANR	1227888	AssignmentExpression	X [ 0 ] *= mid		1226864	0		*=			
ANR	1227889	ArrayIndexing	X [ 0 ]		1226864	0					
ANR	1227890	Identifier	X		1226864	0					
ANR	1227891	PrimaryExpression	0		1226864	1					
ANR	1227892	Identifier	mid		1226864	1					
ANR	1227893	ExpressionStatement	X [ 1 ] *= mid	375:12:6938:6949	1226864	17	True				
ANR	1227894	AssignmentExpression	X [ 1 ] *= mid		1226864	0		*=			
ANR	1227895	ArrayIndexing	X [ 1 ]		1226864	0					
ANR	1227896	Identifier	X		1226864	0					
ANR	1227897	PrimaryExpression	1		1226864	1					
ANR	1227898	Identifier	mid		1226864	1					
ANR	1227899	ExpressionStatement	Y [ 0 ] *= side	377:12:6964:6976	1226864	18	True				
ANR	1227900	AssignmentExpression	Y [ 0 ] *= side		1226864	0		*=			
ANR	1227901	ArrayIndexing	Y [ 0 ]		1226864	0					
ANR	1227902	Identifier	Y		1226864	0					
ANR	1227903	PrimaryExpression	0		1226864	1					
ANR	1227904	Identifier	side		1226864	1					
ANR	1227905	ExpressionStatement	Y [ 1 ] *= side	379:12:6991:7003	1226864	19	True				
ANR	1227906	AssignmentExpression	Y [ 1 ] *= side		1226864	0		*=			
ANR	1227907	ArrayIndexing	Y [ 1 ]		1226864	0					
ANR	1227908	Identifier	Y		1226864	0					
ANR	1227909	PrimaryExpression	1		1226864	1					
ANR	1227910	Identifier	side		1226864	1					
ANR	1227911	ExpressionStatement	tmp = X [ 0 ]	381:12:7018:7028	1226864	20	True				
ANR	1227912	AssignmentExpression	tmp = X [ 0 ]		1226864	0		=			
ANR	1227913	Identifier	tmp		1226864	0					
ANR	1227914	ArrayIndexing	X [ 0 ]		1226864	1					
ANR	1227915	Identifier	X		1226864	0					
ANR	1227916	PrimaryExpression	0		1226864	1					
ANR	1227917	ExpressionStatement	X [ 0 ] = tmp - Y [ 0 ]	383:12:7043:7060	1226864	21	True				
ANR	1227918	AssignmentExpression	X [ 0 ] = tmp - Y [ 0 ]		1226864	0		=			
ANR	1227919	ArrayIndexing	X [ 0 ]		1226864	0					
ANR	1227920	Identifier	X		1226864	0					
ANR	1227921	PrimaryExpression	0		1226864	1					
ANR	1227922	AdditiveExpression	tmp - Y [ 0 ]		1226864	1		-			
ANR	1227923	Identifier	tmp		1226864	0					
ANR	1227924	ArrayIndexing	Y [ 0 ]		1226864	1					
ANR	1227925	Identifier	Y		1226864	0					
ANR	1227926	PrimaryExpression	0		1226864	1					
ANR	1227927	ExpressionStatement	Y [ 0 ] = tmp + Y [ 0 ]	385:12:7075:7092	1226864	22	True				
ANR	1227928	AssignmentExpression	Y [ 0 ] = tmp + Y [ 0 ]		1226864	0		=			
ANR	1227929	ArrayIndexing	Y [ 0 ]		1226864	0					
ANR	1227930	Identifier	Y		1226864	0					
ANR	1227931	PrimaryExpression	0		1226864	1					
ANR	1227932	AdditiveExpression	tmp + Y [ 0 ]		1226864	1		+			
ANR	1227933	Identifier	tmp		1226864	0					
ANR	1227934	ArrayIndexing	Y [ 0 ]		1226864	1					
ANR	1227935	Identifier	Y		1226864	0					
ANR	1227936	PrimaryExpression	0		1226864	1					
ANR	1227937	ExpressionStatement	tmp = X [ 1 ]	387:12:7107:7117	1226864	23	True				
ANR	1227938	AssignmentExpression	tmp = X [ 1 ]		1226864	0		=			
ANR	1227939	Identifier	tmp		1226864	0					
ANR	1227940	ArrayIndexing	X [ 1 ]		1226864	1					
ANR	1227941	Identifier	X		1226864	0					
ANR	1227942	PrimaryExpression	1		1226864	1					
ANR	1227943	ExpressionStatement	X [ 1 ] = tmp - Y [ 1 ]	389:12:7132:7149	1226864	24	True				
ANR	1227944	AssignmentExpression	X [ 1 ] = tmp - Y [ 1 ]		1226864	0		=			
ANR	1227945	ArrayIndexing	X [ 1 ]		1226864	0					
ANR	1227946	Identifier	X		1226864	0					
ANR	1227947	PrimaryExpression	1		1226864	1					
ANR	1227948	AdditiveExpression	tmp - Y [ 1 ]		1226864	1		-			
ANR	1227949	Identifier	tmp		1226864	0					
ANR	1227950	ArrayIndexing	Y [ 1 ]		1226864	1					
ANR	1227951	Identifier	Y		1226864	0					
ANR	1227952	PrimaryExpression	1		1226864	1					
ANR	1227953	ExpressionStatement	Y [ 1 ] = tmp + Y [ 1 ]	391:12:7164:7181	1226864	25	True				
ANR	1227954	AssignmentExpression	Y [ 1 ] = tmp + Y [ 1 ]		1226864	0		=			
ANR	1227955	ArrayIndexing	Y [ 1 ]		1226864	0					
ANR	1227956	Identifier	Y		1226864	0					
ANR	1227957	PrimaryExpression	1		1226864	1					
ANR	1227958	AdditiveExpression	tmp + Y [ 1 ]		1226864	1		+			
ANR	1227959	Identifier	tmp		1226864	0					
ANR	1227960	ArrayIndexing	Y [ 1 ]		1226864	1					
ANR	1227961	Identifier	Y		1226864	0					
ANR	1227962	PrimaryExpression	1		1226864	1					
ANR	1227963	ElseStatement	else		1226864	0					
ANR	1227964	CompoundStatement		389:12:6897:6910	1226864	0					
ANR	1227965	IdentifierDeclStatement	float * next_lowband2 = NULL ;	397:12:7253:7284	1226864	0	True				
ANR	1227966	IdentifierDecl	* next_lowband2 = NULL		1226864	0					
ANR	1227967	IdentifierDeclType	float *		1226864	0					
ANR	1227968	Identifier	next_lowband2		1226864	1					
ANR	1227969	AssignmentExpression	* next_lowband2 = NULL		1226864	2		=			
ANR	1227970	Identifier	NULL		1226864	0					
ANR	1227971	Identifier	NULL		1226864	1					
ANR	1227972	IdentifierDeclStatement	float * next_lowband_out1 = NULL ;	399:12:7299:7330	1226864	1	True				
ANR	1227973	IdentifierDecl	* next_lowband_out1 = NULL		1226864	0					
ANR	1227974	IdentifierDeclType	float *		1226864	0					
ANR	1227975	Identifier	next_lowband_out1		1226864	1					
ANR	1227976	AssignmentExpression	* next_lowband_out1 = NULL		1226864	2		=			
ANR	1227977	Identifier	NULL		1226864	0					
ANR	1227978	Identifier	NULL		1226864	1					
ANR	1227979	IdentifierDeclStatement	int next_level = 0 ;	401:12:7345:7363	1226864	2	True				
ANR	1227980	IdentifierDecl	next_level = 0		1226864	0					
ANR	1227981	IdentifierDeclType	int		1226864	0					
ANR	1227982	Identifier	next_level		1226864	1					
ANR	1227983	AssignmentExpression	next_level = 0		1226864	2		=			
ANR	1227984	Identifier	next_level		1226864	0					
ANR	1227985	PrimaryExpression	0		1226864	1					
ANR	1227986	IdentifierDeclStatement	int rebalance ;	403:12:7378:7391	1226864	3	True				
ANR	1227987	IdentifierDecl	rebalance		1226864	0					
ANR	1227988	IdentifierDeclType	int		1226864	0					
ANR	1227989	Identifier	rebalance		1226864	1					
ANR	1227990	IfStatement	if ( B0 > 1 && ! dualstereo && ( itheta & 0x3fff ) )		1226864	4					
ANR	1227991	Condition	B0 > 1 && ! dualstereo && ( itheta & 0x3fff )	411:16:7516:7557	1226864	0	True				
ANR	1227992	AndExpression	B0 > 1 && ! dualstereo && ( itheta & 0x3fff )		1226864	0		&&			
ANR	1227993	RelationalExpression	B0 > 1		1226864	0		>			
ANR	1227994	Identifier	B0		1226864	0					
ANR	1227995	PrimaryExpression	1		1226864	1					
ANR	1227996	AndExpression	! dualstereo && ( itheta & 0x3fff )		1226864	1		&&			
ANR	1227997	UnaryOperationExpression	! dualstereo		1226864	0					
ANR	1227998	UnaryOperator	!		1226864	0					
ANR	1227999	Identifier	dualstereo		1226864	1					
ANR	1228000	BitAndExpression	itheta & 0x3fff		1226864	1		&			
ANR	1228001	Identifier	itheta		1226864	0					
ANR	1228002	PrimaryExpression	0x3fff		1226864	1					
ANR	1228003	CompoundStatement		397:60:7079:7079	1226864	1					
ANR	1228004	IfStatement	if ( itheta > 8192 )		1226864	0					
ANR	1228005	Condition	itheta > 8192	413:20:7583:7595	1226864	0	True				
ANR	1228006	RelationalExpression	itheta > 8192		1226864	0		>			
ANR	1228007	Identifier	itheta		1226864	0					
ANR	1228008	PrimaryExpression	8192		1226864	1					
ANR	1228009	ExpressionStatement	delta -= delta >> ( 4 - duration )	417:20:7687:7719	1226864	1	True				
ANR	1228010	AssignmentExpression	delta -= delta >> ( 4 - duration )		1226864	0		-=			
ANR	1228011	Identifier	delta		1226864	0					
ANR	1228012	ShiftExpression	delta >> ( 4 - duration )		1226864	1		>>			
ANR	1228013	Identifier	delta		1226864	0					
ANR	1228014	AdditiveExpression	4 - duration		1226864	1		-			
ANR	1228015	PrimaryExpression	4		1226864	0					
ANR	1228016	Identifier	duration		1226864	1					
ANR	1228017	ElseStatement	else		1226864	0					
ANR	1228018	ExpressionStatement	"delta = FFMIN ( 0 , delta + ( N << 3 >> ( 5 - duration ) ) )"	425:20:7874:7926	1226864	0	True				
ANR	1228019	AssignmentExpression	"delta = FFMIN ( 0 , delta + ( N << 3 >> ( 5 - duration ) ) )"		1226864	0		=			
ANR	1228020	Identifier	delta		1226864	0					
ANR	1228021	CallExpression	"FFMIN ( 0 , delta + ( N << 3 >> ( 5 - duration ) ) )"		1226864	1					
ANR	1228022	Callee	FFMIN		1226864	0					
ANR	1228023	Identifier	FFMIN		1226864	0					
ANR	1228024	ArgumentList	0		1226864	1					
ANR	1228025	Argument	0		1226864	0					
ANR	1228026	PrimaryExpression	0		1226864	0					
ANR	1228027	Argument	delta + ( N << 3 >> ( 5 - duration ) )		1226864	1					
ANR	1228028	AdditiveExpression	delta + ( N << 3 >> ( 5 - duration ) )		1226864	0		+			
ANR	1228029	Identifier	delta		1226864	0					
ANR	1228030	ShiftExpression	N << 3 >> ( 5 - duration )		1226864	1		<<			
ANR	1228031	Identifier	N		1226864	0					
ANR	1228032	ShiftExpression	3 >> ( 5 - duration )		1226864	1		>>			
ANR	1228033	PrimaryExpression	3		1226864	0					
ANR	1228034	AdditiveExpression	5 - duration		1226864	1		-			
ANR	1228035	PrimaryExpression	5		1226864	0					
ANR	1228036	Identifier	duration		1226864	1					
ANR	1228037	ExpressionStatement	"mbits = av_clip ( ( b - delta ) / 2 , 0 , b )"	429:12:7956:7994	1226864	5	True				
ANR	1228038	AssignmentExpression	"mbits = av_clip ( ( b - delta ) / 2 , 0 , b )"		1226864	0		=			
ANR	1228039	Identifier	mbits		1226864	0					
ANR	1228040	CallExpression	"av_clip ( ( b - delta ) / 2 , 0 , b )"		1226864	1					
ANR	1228041	Callee	av_clip		1226864	0					
ANR	1228042	Identifier	av_clip		1226864	0					
ANR	1228043	ArgumentList	( b - delta ) / 2		1226864	1					
ANR	1228044	Argument	( b - delta ) / 2		1226864	0					
ANR	1228045	MultiplicativeExpression	( b - delta ) / 2		1226864	0		/			
ANR	1228046	AdditiveExpression	b - delta		1226864	0		-			
ANR	1228047	Identifier	b		1226864	0					
ANR	1228048	Identifier	delta		1226864	1					
ANR	1228049	PrimaryExpression	2		1226864	1					
ANR	1228050	Argument	0		1226864	1					
ANR	1228051	PrimaryExpression	0		1226864	0					
ANR	1228052	Argument	b		1226864	2					
ANR	1228053	Identifier	b		1226864	0					
ANR	1228054	ExpressionStatement	sbits = b - mbits	431:12:8009:8026	1226864	6	True				
ANR	1228055	AssignmentExpression	sbits = b - mbits		1226864	0		=			
ANR	1228056	Identifier	sbits		1226864	0					
ANR	1228057	AdditiveExpression	b - mbits		1226864	1		-			
ANR	1228058	Identifier	b		1226864	0					
ANR	1228059	Identifier	mbits		1226864	1					
ANR	1228060	ExpressionStatement	s -> remaining2 -= qalloc	433:12:8041:8064	1226864	7	True				
ANR	1228061	AssignmentExpression	s -> remaining2 -= qalloc		1226864	0		-=			
ANR	1228062	PtrMemberAccess	s -> remaining2		1226864	0					
ANR	1228063	Identifier	s		1226864	0					
ANR	1228064	Identifier	remaining2		1226864	1					
ANR	1228065	Identifier	qalloc		1226864	1					
ANR	1228066	IfStatement	if ( lowband && ! dualstereo )		1226864	8					
ANR	1228067	Condition	lowband && ! dualstereo	437:16:8085:8106	1226864	0	True				
ANR	1228068	AndExpression	lowband && ! dualstereo		1226864	0		&&			
ANR	1228069	Identifier	lowband		1226864	0					
ANR	1228070	UnaryOperationExpression	! dualstereo		1226864	1					
ANR	1228071	UnaryOperator	!		1226864	0					
ANR	1228072	Identifier	dualstereo		1226864	1					
ANR	1228073	ExpressionStatement	next_lowband2 = lowband + N	439:16:8126:8153	1226864	1	True				
ANR	1228074	AssignmentExpression	next_lowband2 = lowband + N		1226864	0		=			
ANR	1228075	Identifier	next_lowband2		1226864	0					
ANR	1228076	AdditiveExpression	lowband + N		1226864	1		+			
ANR	1228077	Identifier	lowband		1226864	0					
ANR	1228078	Identifier	N		1226864	1					
ANR	1228079	IfStatement	if ( dualstereo )		1226864	9					
ANR	1228080	Condition	dualstereo	447:16:8311:8320	1226864	0	True				
ANR	1228081	Identifier	dualstereo		1226864	0					
ANR	1228082	ExpressionStatement	next_lowband_out1 = lowband_out	449:16:8340:8371	1226864	1	True				
ANR	1228083	AssignmentExpression	next_lowband_out1 = lowband_out		1226864	0		=			
ANR	1228084	Identifier	next_lowband_out1		1226864	0					
ANR	1228085	Identifier	lowband_out		1226864	1					
ANR	1228086	ElseStatement	else		1226864	0					
ANR	1228087	ExpressionStatement	next_level = level + 1	453:16:8408:8430	1226864	0	True				
ANR	1228088	AssignmentExpression	next_level = level + 1		1226864	0		=			
ANR	1228089	Identifier	next_level		1226864	0					
ANR	1228090	AdditiveExpression	level + 1		1226864	1		+			
ANR	1228091	Identifier	level		1226864	0					
ANR	1228092	PrimaryExpression	1		1226864	1					
ANR	1228093	ExpressionStatement	rebalance = s -> remaining2	457:12:8447:8472	1226864	10	True				
ANR	1228094	AssignmentExpression	rebalance = s -> remaining2		1226864	0		=			
ANR	1228095	Identifier	rebalance		1226864	0					
ANR	1228096	PtrMemberAccess	s -> remaining2		1226864	1					
ANR	1228097	Identifier	s		1226864	0					
ANR	1228098	Identifier	remaining2		1226864	1					
ANR	1228099	IfStatement	if ( mbits >= sbits )		1226864	11					
ANR	1228100	Condition	mbits >= sbits	459:16:8491:8504	1226864	0	True				
ANR	1228101	RelationalExpression	mbits >= sbits		1226864	0		>=			
ANR	1228102	Identifier	mbits		1226864	0					
ANR	1228103	Identifier	sbits		1226864	1					
ANR	1228104	CompoundStatement		445:32:8026:8026	1226864	1					
ANR	1228105	ExpressionStatement	"cm = celt_decode_band ( s , rc , band , X , NULL , N , mbits , blocks , lowband , duration , next_lowband_out1 , next_level , dualstereo ? 1.0f : ( gain * mid ) , lowband_scratch , fill )"	465:16:8675:8960	1226864	0	True				
ANR	1228106	AssignmentExpression	"cm = celt_decode_band ( s , rc , band , X , NULL , N , mbits , blocks , lowband , duration , next_lowband_out1 , next_level , dualstereo ? 1.0f : ( gain * mid ) , lowband_scratch , fill )"		1226864	0		=			
ANR	1228107	Identifier	cm		1226864	0					
ANR	1228108	CallExpression	"celt_decode_band ( s , rc , band , X , NULL , N , mbits , blocks , lowband , duration , next_lowband_out1 , next_level , dualstereo ? 1.0f : ( gain * mid ) , lowband_scratch , fill )"		1226864	1					
ANR	1228109	Callee	celt_decode_band		1226864	0					
ANR	1228110	Identifier	celt_decode_band		1226864	0					
ANR	1228111	ArgumentList	s		1226864	1					
ANR	1228112	Argument	s		1226864	0					
ANR	1228113	Identifier	s		1226864	0					
ANR	1228114	Argument	rc		1226864	1					
ANR	1228115	Identifier	rc		1226864	0					
ANR	1228116	Argument	band		1226864	2					
ANR	1228117	Identifier	band		1226864	0					
ANR	1228118	Argument	X		1226864	3					
ANR	1228119	Identifier	X		1226864	0					
ANR	1228120	Argument	NULL		1226864	4					
ANR	1228121	Identifier	NULL		1226864	0					
ANR	1228122	Argument	N		1226864	5					
ANR	1228123	Identifier	N		1226864	0					
ANR	1228124	Argument	mbits		1226864	6					
ANR	1228125	Identifier	mbits		1226864	0					
ANR	1228126	Argument	blocks		1226864	7					
ANR	1228127	Identifier	blocks		1226864	0					
ANR	1228128	Argument	lowband		1226864	8					
ANR	1228129	Identifier	lowband		1226864	0					
ANR	1228130	Argument	duration		1226864	9					
ANR	1228131	Identifier	duration		1226864	0					
ANR	1228132	Argument	next_lowband_out1		1226864	10					
ANR	1228133	Identifier	next_lowband_out1		1226864	0					
ANR	1228134	Argument	next_level		1226864	11					
ANR	1228135	Identifier	next_level		1226864	0					
ANR	1228136	Argument	dualstereo ? 1.0f : ( gain * mid )		1226864	12					
ANR	1228137	ConditionalExpression	dualstereo ? 1.0f : ( gain * mid )		1226864	0					
ANR	1228138	Condition	dualstereo		1226864	0					
ANR	1228139	Identifier	dualstereo		1226864	0					
ANR	1228140	PrimaryExpression	1.0f		1226864	1					
ANR	1228141	MultiplicativeExpression	gain * mid		1226864	2		*			
ANR	1228142	Identifier	gain		1226864	0					
ANR	1228143	Identifier	mid		1226864	1					
ANR	1228144	Argument	lowband_scratch		1226864	13					
ANR	1228145	Identifier	lowband_scratch		1226864	0					
ANR	1228146	Argument	fill		1226864	14					
ANR	1228147	Identifier	fill		1226864	0					
ANR	1228148	ExpressionStatement	rebalance = mbits - ( rebalance - s -> remaining2 )	475:16:8981:9028	1226864	1	True				
ANR	1228149	AssignmentExpression	rebalance = mbits - ( rebalance - s -> remaining2 )		1226864	0		=			
ANR	1228150	Identifier	rebalance		1226864	0					
ANR	1228151	AdditiveExpression	mbits - ( rebalance - s -> remaining2 )		1226864	1		-			
ANR	1228152	Identifier	mbits		1226864	0					
ANR	1228153	AdditiveExpression	rebalance - s -> remaining2		1226864	1		-			
ANR	1228154	Identifier	rebalance		1226864	0					
ANR	1228155	PtrMemberAccess	s -> remaining2		1226864	1					
ANR	1228156	Identifier	s		1226864	0					
ANR	1228157	Identifier	remaining2		1226864	1					
ANR	1228158	IfStatement	if ( rebalance > 3 << 3 && itheta != 0 )		1226864	2					
ANR	1228159	Condition	rebalance > 3 << 3 && itheta != 0	477:20:9051:9083	1226864	0	True				
ANR	1228160	AndExpression	rebalance > 3 << 3 && itheta != 0		1226864	0		&&			
ANR	1228161	RelationalExpression	rebalance > 3 << 3		1226864	0		>			
ANR	1228162	Identifier	rebalance		1226864	0					
ANR	1228163	ShiftExpression	3 << 3		1226864	1		<<			
ANR	1228164	PrimaryExpression	3		1226864	0					
ANR	1228165	PrimaryExpression	3		1226864	1					
ANR	1228166	EqualityExpression	itheta != 0		1226864	1		!=			
ANR	1228167	Identifier	itheta		1226864	0					
ANR	1228168	PrimaryExpression	0		1226864	1					
ANR	1228169	ExpressionStatement	sbits += rebalance - ( 3 << 3 )	479:20:9107:9136	1226864	1	True				
ANR	1228170	AssignmentExpression	sbits += rebalance - ( 3 << 3 )		1226864	0		+=			
ANR	1228171	Identifier	sbits		1226864	0					
ANR	1228172	AdditiveExpression	rebalance - ( 3 << 3 )		1226864	1		-			
ANR	1228173	Identifier	rebalance		1226864	0					
ANR	1228174	ShiftExpression	3 << 3		1226864	1		<<			
ANR	1228175	PrimaryExpression	3		1226864	0					
ANR	1228176	PrimaryExpression	3		1226864	1					
ANR	1228177	ExpressionStatement	"cm |= celt_decode_band ( s , rc , band , Y , NULL , N , sbits , blocks , next_lowband2 , duration , NULL , next_level , gain * side , NULL , fill >> blocks ) << ( ( B0 >> 1 ) & ( dualstereo - 1 ) )"	487:16:9299:9593	1226864	3	True				
ANR	1228178	AssignmentExpression	"cm |= celt_decode_band ( s , rc , band , Y , NULL , N , sbits , blocks , next_lowband2 , duration , NULL , next_level , gain * side , NULL , fill >> blocks ) << ( ( B0 >> 1 ) & ( dualstereo - 1 ) )"		1226864	0		|=			
ANR	1228179	Identifier	cm		1226864	0					
ANR	1228180	ShiftExpression	"celt_decode_band ( s , rc , band , Y , NULL , N , sbits , blocks , next_lowband2 , duration , NULL , next_level , gain * side , NULL , fill >> blocks ) << ( ( B0 >> 1 ) & ( dualstereo - 1 ) )"		1226864	1		<<			
ANR	1228181	CallExpression	"celt_decode_band ( s , rc , band , Y , NULL , N , sbits , blocks , next_lowband2 , duration , NULL , next_level , gain * side , NULL , fill >> blocks )"		1226864	0					
ANR	1228182	Callee	celt_decode_band		1226864	0					
ANR	1228183	Identifier	celt_decode_band		1226864	0					
ANR	1228184	ArgumentList	s		1226864	1					
ANR	1228185	Argument	s		1226864	0					
ANR	1228186	Identifier	s		1226864	0					
ANR	1228187	Argument	rc		1226864	1					
ANR	1228188	Identifier	rc		1226864	0					
ANR	1228189	Argument	band		1226864	2					
ANR	1228190	Identifier	band		1226864	0					
ANR	1228191	Argument	Y		1226864	3					
ANR	1228192	Identifier	Y		1226864	0					
ANR	1228193	Argument	NULL		1226864	4					
ANR	1228194	Identifier	NULL		1226864	0					
ANR	1228195	Argument	N		1226864	5					
ANR	1228196	Identifier	N		1226864	0					
ANR	1228197	Argument	sbits		1226864	6					
ANR	1228198	Identifier	sbits		1226864	0					
ANR	1228199	Argument	blocks		1226864	7					
ANR	1228200	Identifier	blocks		1226864	0					
ANR	1228201	Argument	next_lowband2		1226864	8					
ANR	1228202	Identifier	next_lowband2		1226864	0					
ANR	1228203	Argument	duration		1226864	9					
ANR	1228204	Identifier	duration		1226864	0					
ANR	1228205	Argument	NULL		1226864	10					
ANR	1228206	Identifier	NULL		1226864	0					
ANR	1228207	Argument	next_level		1226864	11					
ANR	1228208	Identifier	next_level		1226864	0					
ANR	1228209	Argument	gain * side		1226864	12					
ANR	1228210	MultiplicativeExpression	gain * side		1226864	0		*			
ANR	1228211	Identifier	gain		1226864	0					
ANR	1228212	Identifier	side		1226864	1					
ANR	1228213	Argument	NULL		1226864	13					
ANR	1228214	Identifier	NULL		1226864	0					
ANR	1228215	Argument	fill >> blocks		1226864	14					
ANR	1228216	ShiftExpression	fill >> blocks		1226864	0		>>			
ANR	1228217	Identifier	fill		1226864	0					
ANR	1228218	Identifier	blocks		1226864	1					
ANR	1228219	BitAndExpression	( B0 >> 1 ) & ( dualstereo - 1 )		1226864	1		&			
ANR	1228220	ShiftExpression	B0 >> 1		1226864	0		>>			
ANR	1228221	Identifier	B0		1226864	0					
ANR	1228222	PrimaryExpression	1		1226864	1					
ANR	1228223	AdditiveExpression	dualstereo - 1		1226864	1		-			
ANR	1228224	Identifier	dualstereo		1226864	0					
ANR	1228225	PrimaryExpression	1		1226864	1					
ANR	1228226	ElseStatement	else		1226864	0					
ANR	1228227	CompoundStatement		481:19:9134:9134	1226864	0					
ANR	1228228	ExpressionStatement	"cm = celt_decode_band ( s , rc , band , Y , NULL , N , sbits , blocks , next_lowband2 , duration , NULL , next_level , gain * side , NULL , fill >> blocks ) << ( ( B0 >> 1 ) & ( dualstereo - 1 ) )"	501:16:9776:10066	1226864	0	True				
ANR	1228229	AssignmentExpression	"cm = celt_decode_band ( s , rc , band , Y , NULL , N , sbits , blocks , next_lowband2 , duration , NULL , next_level , gain * side , NULL , fill >> blocks ) << ( ( B0 >> 1 ) & ( dualstereo - 1 ) )"		1226864	0		=			
ANR	1228230	Identifier	cm		1226864	0					
ANR	1228231	ShiftExpression	"celt_decode_band ( s , rc , band , Y , NULL , N , sbits , blocks , next_lowband2 , duration , NULL , next_level , gain * side , NULL , fill >> blocks ) << ( ( B0 >> 1 ) & ( dualstereo - 1 ) )"		1226864	1		<<			
ANR	1228232	CallExpression	"celt_decode_band ( s , rc , band , Y , NULL , N , sbits , blocks , next_lowband2 , duration , NULL , next_level , gain * side , NULL , fill >> blocks )"		1226864	0					
ANR	1228233	Callee	celt_decode_band		1226864	0					
ANR	1228234	Identifier	celt_decode_band		1226864	0					
ANR	1228235	ArgumentList	s		1226864	1					
ANR	1228236	Argument	s		1226864	0					
ANR	1228237	Identifier	s		1226864	0					
ANR	1228238	Argument	rc		1226864	1					
ANR	1228239	Identifier	rc		1226864	0					
ANR	1228240	Argument	band		1226864	2					
ANR	1228241	Identifier	band		1226864	0					
ANR	1228242	Argument	Y		1226864	3					
ANR	1228243	Identifier	Y		1226864	0					
ANR	1228244	Argument	NULL		1226864	4					
ANR	1228245	Identifier	NULL		1226864	0					
ANR	1228246	Argument	N		1226864	5					
ANR	1228247	Identifier	N		1226864	0					
ANR	1228248	Argument	sbits		1226864	6					
ANR	1228249	Identifier	sbits		1226864	0					
ANR	1228250	Argument	blocks		1226864	7					
ANR	1228251	Identifier	blocks		1226864	0					
ANR	1228252	Argument	next_lowband2		1226864	8					
ANR	1228253	Identifier	next_lowband2		1226864	0					
ANR	1228254	Argument	duration		1226864	9					
ANR	1228255	Identifier	duration		1226864	0					
ANR	1228256	Argument	NULL		1226864	10					
ANR	1228257	Identifier	NULL		1226864	0					
ANR	1228258	Argument	next_level		1226864	11					
ANR	1228259	Identifier	next_level		1226864	0					
ANR	1228260	Argument	gain * side		1226864	12					
ANR	1228261	MultiplicativeExpression	gain * side		1226864	0		*			
ANR	1228262	Identifier	gain		1226864	0					
ANR	1228263	Identifier	side		1226864	1					
ANR	1228264	Argument	NULL		1226864	13					
ANR	1228265	Identifier	NULL		1226864	0					
ANR	1228266	Argument	fill >> blocks		1226864	14					
ANR	1228267	ShiftExpression	fill >> blocks		1226864	0		>>			
ANR	1228268	Identifier	fill		1226864	0					
ANR	1228269	Identifier	blocks		1226864	1					
ANR	1228270	BitAndExpression	( B0 >> 1 ) & ( dualstereo - 1 )		1226864	1		&			
ANR	1228271	ShiftExpression	B0 >> 1		1226864	0		>>			
ANR	1228272	Identifier	B0		1226864	0					
ANR	1228273	PrimaryExpression	1		1226864	1					
ANR	1228274	AdditiveExpression	dualstereo - 1		1226864	1		-			
ANR	1228275	Identifier	dualstereo		1226864	0					
ANR	1228276	PrimaryExpression	1		1226864	1					
ANR	1228277	ExpressionStatement	rebalance = sbits - ( rebalance - s -> remaining2 )	511:16:10087:10134	1226864	1	True				
ANR	1228278	AssignmentExpression	rebalance = sbits - ( rebalance - s -> remaining2 )		1226864	0		=			
ANR	1228279	Identifier	rebalance		1226864	0					
ANR	1228280	AdditiveExpression	sbits - ( rebalance - s -> remaining2 )		1226864	1		-			
ANR	1228281	Identifier	sbits		1226864	0					
ANR	1228282	AdditiveExpression	rebalance - s -> remaining2		1226864	1		-			
ANR	1228283	Identifier	rebalance		1226864	0					
ANR	1228284	PtrMemberAccess	s -> remaining2		1226864	1					
ANR	1228285	Identifier	s		1226864	0					
ANR	1228286	Identifier	remaining2		1226864	1					
ANR	1228287	IfStatement	if ( rebalance > 3 << 3 && itheta != 16384 )		1226864	2					
ANR	1228288	Condition	rebalance > 3 << 3 && itheta != 16384	513:20:10157:10193	1226864	0	True				
ANR	1228289	AndExpression	rebalance > 3 << 3 && itheta != 16384		1226864	0		&&			
ANR	1228290	RelationalExpression	rebalance > 3 << 3		1226864	0		>			
ANR	1228291	Identifier	rebalance		1226864	0					
ANR	1228292	ShiftExpression	3 << 3		1226864	1		<<			
ANR	1228293	PrimaryExpression	3		1226864	0					
ANR	1228294	PrimaryExpression	3		1226864	1					
ANR	1228295	EqualityExpression	itheta != 16384		1226864	1		!=			
ANR	1228296	Identifier	itheta		1226864	0					
ANR	1228297	PrimaryExpression	16384		1226864	1					
ANR	1228298	ExpressionStatement	mbits += rebalance - ( 3 << 3 )	515:20:10217:10246	1226864	1	True				
ANR	1228299	AssignmentExpression	mbits += rebalance - ( 3 << 3 )		1226864	0		+=			
ANR	1228300	Identifier	mbits		1226864	0					
ANR	1228301	AdditiveExpression	rebalance - ( 3 << 3 )		1226864	1		-			
ANR	1228302	Identifier	rebalance		1226864	0					
ANR	1228303	ShiftExpression	3 << 3		1226864	1		<<			
ANR	1228304	PrimaryExpression	3		1226864	0					
ANR	1228305	PrimaryExpression	3		1226864	1					
ANR	1228306	ExpressionStatement	"cm |= celt_decode_band ( s , rc , band , X , NULL , N , mbits , blocks , lowband , duration , next_lowband_out1 , next_level , dualstereo ? 1.0f : ( gain * mid ) , lowband_scratch , fill )"	523:16:10416:10705	1226864	3	True				
ANR	1228307	AssignmentExpression	"cm |= celt_decode_band ( s , rc , band , X , NULL , N , mbits , blocks , lowband , duration , next_lowband_out1 , next_level , dualstereo ? 1.0f : ( gain * mid ) , lowband_scratch , fill )"		1226864	0		|=			
ANR	1228308	Identifier	cm		1226864	0					
ANR	1228309	CallExpression	"celt_decode_band ( s , rc , band , X , NULL , N , mbits , blocks , lowband , duration , next_lowband_out1 , next_level , dualstereo ? 1.0f : ( gain * mid ) , lowband_scratch , fill )"		1226864	1					
ANR	1228310	Callee	celt_decode_band		1226864	0					
ANR	1228311	Identifier	celt_decode_band		1226864	0					
ANR	1228312	ArgumentList	s		1226864	1					
ANR	1228313	Argument	s		1226864	0					
ANR	1228314	Identifier	s		1226864	0					
ANR	1228315	Argument	rc		1226864	1					
ANR	1228316	Identifier	rc		1226864	0					
ANR	1228317	Argument	band		1226864	2					
ANR	1228318	Identifier	band		1226864	0					
ANR	1228319	Argument	X		1226864	3					
ANR	1228320	Identifier	X		1226864	0					
ANR	1228321	Argument	NULL		1226864	4					
ANR	1228322	Identifier	NULL		1226864	0					
ANR	1228323	Argument	N		1226864	5					
ANR	1228324	Identifier	N		1226864	0					
ANR	1228325	Argument	mbits		1226864	6					
ANR	1228326	Identifier	mbits		1226864	0					
ANR	1228327	Argument	blocks		1226864	7					
ANR	1228328	Identifier	blocks		1226864	0					
ANR	1228329	Argument	lowband		1226864	8					
ANR	1228330	Identifier	lowband		1226864	0					
ANR	1228331	Argument	duration		1226864	9					
ANR	1228332	Identifier	duration		1226864	0					
ANR	1228333	Argument	next_lowband_out1		1226864	10					
ANR	1228334	Identifier	next_lowband_out1		1226864	0					
ANR	1228335	Argument	next_level		1226864	11					
ANR	1228336	Identifier	next_level		1226864	0					
ANR	1228337	Argument	dualstereo ? 1.0f : ( gain * mid )		1226864	12					
ANR	1228338	ConditionalExpression	dualstereo ? 1.0f : ( gain * mid )		1226864	0					
ANR	1228339	Condition	dualstereo		1226864	0					
ANR	1228340	Identifier	dualstereo		1226864	0					
ANR	1228341	PrimaryExpression	1.0f		1226864	1					
ANR	1228342	MultiplicativeExpression	gain * mid		1226864	2		*			
ANR	1228343	Identifier	gain		1226864	0					
ANR	1228344	Identifier	mid		1226864	1					
ANR	1228345	Argument	lowband_scratch		1226864	13					
ANR	1228346	Identifier	lowband_scratch		1226864	0					
ANR	1228347	Argument	fill		1226864	14					
ANR	1228348	Identifier	fill		1226864	0					
ANR	1228349	ElseStatement	else		1226864	0					
ANR	1228350	CompoundStatement		527:8:10384:10435	1226864	0					
ANR	1228351	IdentifierDeclStatement	"unsigned int q = celt_bits2pulses ( cache , b ) ;"	539:8:10803:10854	1226864	0	True				
ANR	1228352	IdentifierDecl	"q = celt_bits2pulses ( cache , b )"		1226864	0					
ANR	1228353	IdentifierDeclType	unsigned int		1226864	0					
ANR	1228354	Identifier	q		1226864	1					
ANR	1228355	AssignmentExpression	"q = celt_bits2pulses ( cache , b )"		1226864	2		=			
ANR	1228356	Identifier	q		1226864	0					
ANR	1228357	CallExpression	"celt_bits2pulses ( cache , b )"		1226864	1					
ANR	1228358	Callee	celt_bits2pulses		1226864	0					
ANR	1228359	Identifier	celt_bits2pulses		1226864	0					
ANR	1228360	ArgumentList	cache		1226864	1					
ANR	1228361	Argument	cache		1226864	0					
ANR	1228362	Identifier	cache		1226864	0					
ANR	1228363	Argument	b		1226864	1					
ANR	1228364	Identifier	b		1226864	0					
ANR	1228365	IdentifierDeclStatement	"unsigned int curr_bits = celt_pulses2bits ( cache , q ) ;"	541:8:10865:10916	1226864	1	True				
ANR	1228366	IdentifierDecl	"curr_bits = celt_pulses2bits ( cache , q )"		1226864	0					
ANR	1228367	IdentifierDeclType	unsigned int		1226864	0					
ANR	1228368	Identifier	curr_bits		1226864	1					
ANR	1228369	AssignmentExpression	"curr_bits = celt_pulses2bits ( cache , q )"		1226864	2		=			
ANR	1228370	Identifier	curr_bits		1226864	0					
ANR	1228371	CallExpression	"celt_pulses2bits ( cache , q )"		1226864	1					
ANR	1228372	Callee	celt_pulses2bits		1226864	0					
ANR	1228373	Identifier	celt_pulses2bits		1226864	0					
ANR	1228374	ArgumentList	cache		1226864	1					
ANR	1228375	Argument	cache		1226864	0					
ANR	1228376	Identifier	cache		1226864	0					
ANR	1228377	Argument	q		1226864	1					
ANR	1228378	Identifier	q		1226864	0					
ANR	1228379	ExpressionStatement	s -> remaining2 -= curr_bits	543:8:10927:10953	1226864	2	True				
ANR	1228380	AssignmentExpression	s -> remaining2 -= curr_bits		1226864	0		-=			
ANR	1228381	PtrMemberAccess	s -> remaining2		1226864	0					
ANR	1228382	Identifier	s		1226864	0					
ANR	1228383	Identifier	remaining2		1226864	1					
ANR	1228384	Identifier	curr_bits		1226864	1					
ANR	1228385	WhileStatement	while ( s -> remaining2 < 0 && q > 0 )		1226864	3					
ANR	1228386	Condition	s -> remaining2 < 0 && q > 0	549:15:11025:11050	1226864	0	True				
ANR	1228387	AndExpression	s -> remaining2 < 0 && q > 0		1226864	0		&&			
ANR	1228388	RelationalExpression	s -> remaining2 < 0		1226864	0		<			
ANR	1228389	PtrMemberAccess	s -> remaining2		1226864	0					
ANR	1228390	Identifier	s		1226864	0					
ANR	1228391	Identifier	remaining2		1226864	1					
ANR	1228392	PrimaryExpression	0		1226864	1					
ANR	1228393	RelationalExpression	q > 0		1226864	1		>			
ANR	1228394	Identifier	q		1226864	0					
ANR	1228395	PrimaryExpression	0		1226864	1					
ANR	1228396	CompoundStatement		535:43:10572:10572	1226864	1					
ANR	1228397	ExpressionStatement	s -> remaining2 += curr_bits	551:12:11068:11094	1226864	0	True				
ANR	1228398	AssignmentExpression	s -> remaining2 += curr_bits		1226864	0		+=			
ANR	1228399	PtrMemberAccess	s -> remaining2		1226864	0					
ANR	1228400	Identifier	s		1226864	0					
ANR	1228401	Identifier	remaining2		1226864	1					
ANR	1228402	Identifier	curr_bits		1226864	1					
ANR	1228403	ExpressionStatement	"curr_bits = celt_pulses2bits ( cache , -- q )"	553:12:11109:11154	1226864	1	True				
ANR	1228404	AssignmentExpression	"curr_bits = celt_pulses2bits ( cache , -- q )"		1226864	0		=			
ANR	1228405	Identifier	curr_bits		1226864	0					
ANR	1228406	CallExpression	"celt_pulses2bits ( cache , -- q )"		1226864	1					
ANR	1228407	Callee	celt_pulses2bits		1226864	0					
ANR	1228408	Identifier	celt_pulses2bits		1226864	0					
ANR	1228409	ArgumentList	cache		1226864	1					
ANR	1228410	Argument	cache		1226864	0					
ANR	1228411	Identifier	cache		1226864	0					
ANR	1228412	Argument	-- q		1226864	1					
ANR	1228413	UnaryExpression	-- q		1226864	0					
ANR	1228414	IncDec	--		1226864	0					
ANR	1228415	Identifier	q		1226864	1					
ANR	1228416	ExpressionStatement	s -> remaining2 -= curr_bits	555:12:11169:11195	1226864	2	True				
ANR	1228417	AssignmentExpression	s -> remaining2 -= curr_bits		1226864	0		-=			
ANR	1228418	PtrMemberAccess	s -> remaining2		1226864	0					
ANR	1228419	Identifier	s		1226864	0					
ANR	1228420	Identifier	remaining2		1226864	1					
ANR	1228421	Identifier	curr_bits		1226864	1					
ANR	1228422	IfStatement	if ( q != 0 )		1226864	4					
ANR	1228423	Condition	q != 0	561:12:11223:11228	1226864	0	True				
ANR	1228424	EqualityExpression	q != 0		1226864	0		!=			
ANR	1228425	Identifier	q		1226864	0					
ANR	1228426	PrimaryExpression	0		1226864	1					
ANR	1228427	CompoundStatement		547:20:10750:10750	1226864	1					
ANR	1228428	ExpressionStatement	"cm = celt_alg_unquant ( rc , X , N , ( q < 8 ) ? q : ( 8 + ( q & 7 ) ) << ( ( q >> 3 ) - 1 ) , s -> spread , blocks , gain )"	565:12:11300:11438	1226864	0	True				
ANR	1228429	AssignmentExpression	"cm = celt_alg_unquant ( rc , X , N , ( q < 8 ) ? q : ( 8 + ( q & 7 ) ) << ( ( q >> 3 ) - 1 ) , s -> spread , blocks , gain )"		1226864	0		=			
ANR	1228430	Identifier	cm		1226864	0					
ANR	1228431	CallExpression	"celt_alg_unquant ( rc , X , N , ( q < 8 ) ? q : ( 8 + ( q & 7 ) ) << ( ( q >> 3 ) - 1 ) , s -> spread , blocks , gain )"		1226864	1					
ANR	1228432	Callee	celt_alg_unquant		1226864	0					
ANR	1228433	Identifier	celt_alg_unquant		1226864	0					
ANR	1228434	ArgumentList	rc		1226864	1					
ANR	1228435	Argument	rc		1226864	0					
ANR	1228436	Identifier	rc		1226864	0					
ANR	1228437	Argument	X		1226864	1					
ANR	1228438	Identifier	X		1226864	0					
ANR	1228439	Argument	N		1226864	2					
ANR	1228440	Identifier	N		1226864	0					
ANR	1228441	Argument	( q < 8 ) ? q : ( 8 + ( q & 7 ) ) << ( ( q >> 3 ) - 1 )		1226864	3					
ANR	1228442	ConditionalExpression	( q < 8 ) ? q : ( 8 + ( q & 7 ) ) << ( ( q >> 3 ) - 1 )		1226864	0					
ANR	1228443	Condition	q < 8		1226864	0					
ANR	1228444	RelationalExpression	q < 8		1226864	0		<			
ANR	1228445	Identifier	q		1226864	0					
ANR	1228446	PrimaryExpression	8		1226864	1					
ANR	1228447	Identifier	q		1226864	1					
ANR	1228448	ShiftExpression	( 8 + ( q & 7 ) ) << ( ( q >> 3 ) - 1 )		1226864	2		<<			
ANR	1228449	AdditiveExpression	8 + ( q & 7 )		1226864	0		+			
ANR	1228450	PrimaryExpression	8		1226864	0					
ANR	1228451	BitAndExpression	q & 7		1226864	1		&			
ANR	1228452	Identifier	q		1226864	0					
ANR	1228453	PrimaryExpression	7		1226864	1					
ANR	1228454	AdditiveExpression	( q >> 3 ) - 1		1226864	1		-			
ANR	1228455	ShiftExpression	q >> 3		1226864	0		>>			
ANR	1228456	Identifier	q		1226864	0					
ANR	1228457	PrimaryExpression	3		1226864	1					
ANR	1228458	PrimaryExpression	1		1226864	1					
ANR	1228459	Argument	s -> spread		1226864	4					
ANR	1228460	PtrMemberAccess	s -> spread		1226864	0					
ANR	1228461	Identifier	s		1226864	0					
ANR	1228462	Identifier	spread		1226864	1					
ANR	1228463	Argument	blocks		1226864	5					
ANR	1228464	Identifier	blocks		1226864	0					
ANR	1228465	Argument	gain		1226864	6					
ANR	1228466	Identifier	gain		1226864	0					
ANR	1228467	ElseStatement	else		1226864	0					
ANR	1228468	CompoundStatement		561:12:11071:11111	1226864	0					
ANR	1228469	IdentifierDeclStatement	int j ;	573:12:11532:11537	1226864	0	True				
ANR	1228470	IdentifierDecl	j		1226864	0					
ANR	1228471	IdentifierDeclType	int		1226864	0					
ANR	1228472	Identifier	j		1226864	1					
ANR	1228473	IdentifierDeclStatement	unsigned int cm_mask = ( 1 << blocks ) - 1 ;	575:12:11552:11592	1226864	1	True				
ANR	1228474	IdentifierDecl	cm_mask = ( 1 << blocks ) - 1		1226864	0					
ANR	1228475	IdentifierDeclType	unsigned int		1226864	0					
ANR	1228476	Identifier	cm_mask		1226864	1					
ANR	1228477	AssignmentExpression	cm_mask = ( 1 << blocks ) - 1		1226864	2		=			
ANR	1228478	Identifier	cm_mask		1226864	0					
ANR	1228479	AdditiveExpression	( 1 << blocks ) - 1		1226864	1		-			
ANR	1228480	ShiftExpression	1 << blocks		1226864	0		<<			
ANR	1228481	PrimaryExpression	1		1226864	0					
ANR	1228482	Identifier	blocks		1226864	1					
ANR	1228483	PrimaryExpression	1		1226864	1					
ANR	1228484	ExpressionStatement	fill &= cm_mask	577:12:11607:11622	1226864	2	True				
ANR	1228485	AssignmentExpression	fill &= cm_mask		1226864	0		&=			
ANR	1228486	Identifier	fill		1226864	0					
ANR	1228487	Identifier	cm_mask		1226864	1					
ANR	1228488	IfStatement	if ( ! fill )		1226864	3					
ANR	1228489	Condition	! fill	579:16:11641:11645	1226864	0	True				
ANR	1228490	UnaryOperationExpression	! fill		1226864	0					
ANR	1228491	UnaryOperator	!		1226864	0					
ANR	1228492	Identifier	fill		1226864	1					
ANR	1228493	CompoundStatement		565:23:11167:11167	1226864	1					
ANR	1228494	ForStatement	for ( j = 0 ; j < N ; j ++ )		1226864	0					
ANR	1228495	ForInit	j = 0 ;	581:21:11672:11677	1226864	0	True				
ANR	1228496	AssignmentExpression	j = 0		1226864	0		=			
ANR	1228497	Identifier	j		1226864	0					
ANR	1228498	PrimaryExpression	0		1226864	1					
ANR	1228499	Condition	j < N	581:28:11679:11683	1226864	1	True				
ANR	1228500	RelationalExpression	j < N		1226864	0		<			
ANR	1228501	Identifier	j		1226864	0					
ANR	1228502	Identifier	N		1226864	1					
ANR	1228503	PostIncDecOperationExpression	j ++	581:35:11686:11688	1226864	2	True				
ANR	1228504	Identifier	j		1226864	0					
ANR	1228505	IncDec	++		1226864	1					
ANR	1228506	ExpressionStatement	X [ j ] = 0.0f	583:20:11712:11723	1226864	3	True				
ANR	1228507	AssignmentExpression	X [ j ] = 0.0f		1226864	0		=			
ANR	1228508	ArrayIndexing	X [ j ]		1226864	0					
ANR	1228509	Identifier	X		1226864	0					
ANR	1228510	Identifier	j		1226864	1					
ANR	1228511	PrimaryExpression	0.0f		1226864	1					
ANR	1228512	ElseStatement	else		1226864	0					
ANR	1228513	CompoundStatement		571:19:11264:11264	1226864	0					
ANR	1228514	IfStatement	if ( lowband == NULL )		1226864	0					
ANR	1228515	Condition	lowband == NULL	587:20:11768:11782	1226864	0	True				
ANR	1228516	EqualityExpression	lowband == NULL		1226864	0		==			
ANR	1228517	Identifier	lowband		1226864	0					
ANR	1228518	Identifier	NULL		1226864	1					
ANR	1228519	CompoundStatement		573:37:11304:11304	1226864	1					
ANR	1228520	ForStatement	for ( j = 0 ; j < N ; j ++ )		1226864	0					
ANR	1228521	ForInit	j = 0 ;	591:25:11846:11851	1226864	0	True				
ANR	1228522	AssignmentExpression	j = 0		1226864	0		=			
ANR	1228523	Identifier	j		1226864	0					
ANR	1228524	PrimaryExpression	0		1226864	1					
ANR	1228525	Condition	j < N	591:32:11853:11857	1226864	1	True				
ANR	1228526	RelationalExpression	j < N		1226864	0		<			
ANR	1228527	Identifier	j		1226864	0					
ANR	1228528	Identifier	N		1226864	1					
ANR	1228529	PostIncDecOperationExpression	j ++	591:39:11860:11862	1226864	2	True				
ANR	1228530	Identifier	j		1226864	0					
ANR	1228531	IncDec	++		1226864	1					
ANR	1228532	ExpressionStatement	X [ j ] = ( ( ( int32_t ) celt_rng ( s ) ) >> 20 )	593:24:11890:11927	1226864	3	True				
ANR	1228533	AssignmentExpression	X [ j ] = ( ( ( int32_t ) celt_rng ( s ) ) >> 20 )		1226864	0		=			
ANR	1228534	ArrayIndexing	X [ j ]		1226864	0					
ANR	1228535	Identifier	X		1226864	0					
ANR	1228536	Identifier	j		1226864	1					
ANR	1228537	ShiftExpression	( ( int32_t ) celt_rng ( s ) ) >> 20		1226864	1		>>			
ANR	1228538	CastExpression	( int32_t ) celt_rng ( s )		1226864	0					
ANR	1228539	CastTarget	int32_t		1226864	0					
ANR	1228540	CallExpression	celt_rng ( s )		1226864	1					
ANR	1228541	Callee	celt_rng		1226864	0					
ANR	1228542	Identifier	celt_rng		1226864	0					
ANR	1228543	ArgumentList	s		1226864	1					
ANR	1228544	Argument	s		1226864	0					
ANR	1228545	Identifier	s		1226864	0					
ANR	1228546	PrimaryExpression	20		1226864	1					
ANR	1228547	ExpressionStatement	cm = cm_mask	595:20:11950:11962	1226864	1	True				
ANR	1228548	AssignmentExpression	cm = cm_mask		1226864	0		=			
ANR	1228549	Identifier	cm		1226864	0					
ANR	1228550	Identifier	cm_mask		1226864	1					
ANR	1228551	ElseStatement	else		1226864	0					
ANR	1228552	CompoundStatement		583:23:11507:11507	1226864	0					
ANR	1228553	ForStatement	for ( j = 0 ; j < N ; j ++ )		1226864	0					
ANR	1228554	ForInit	j = 0 ;	601:25:12059:12064	1226864	0	True				
ANR	1228555	AssignmentExpression	j = 0		1226864	0		=			
ANR	1228556	Identifier	j		1226864	0					
ANR	1228557	PrimaryExpression	0		1226864	1					
ANR	1228558	Condition	j < N	601:32:12066:12070	1226864	1	True				
ANR	1228559	RelationalExpression	j < N		1226864	0		<			
ANR	1228560	Identifier	j		1226864	0					
ANR	1228561	Identifier	N		1226864	1					
ANR	1228562	PostIncDecOperationExpression	j ++	601:39:12073:12075	1226864	2	True				
ANR	1228563	Identifier	j		1226864	0					
ANR	1228564	IncDec	++		1226864	1					
ANR	1228565	CompoundStatement		587:44:11597:11597	1226864	3					
ANR	1228566	ExpressionStatement	X [ j ] = lowband [ j ] + ( ( ( celt_rng ( s ) ) & 0x8000 ) ? 1.0f / 256 : - 1.0f / 256 )	605:24:12181:12254	1226864	0	True				
ANR	1228567	AssignmentExpression	X [ j ] = lowband [ j ] + ( ( ( celt_rng ( s ) ) & 0x8000 ) ? 1.0f / 256 : - 1.0f / 256 )		1226864	0		=			
ANR	1228568	ArrayIndexing	X [ j ]		1226864	0					
ANR	1228569	Identifier	X		1226864	0					
ANR	1228570	Identifier	j		1226864	1					
ANR	1228571	AdditiveExpression	lowband [ j ] + ( ( ( celt_rng ( s ) ) & 0x8000 ) ? 1.0f / 256 : - 1.0f / 256 )		1226864	1		+			
ANR	1228572	ArrayIndexing	lowband [ j ]		1226864	0					
ANR	1228573	Identifier	lowband		1226864	0					
ANR	1228574	Identifier	j		1226864	1					
ANR	1228575	ConditionalExpression	( ( celt_rng ( s ) ) & 0x8000 ) ? 1.0f / 256 : - 1.0f / 256		1226864	1					
ANR	1228576	Condition	( celt_rng ( s ) ) & 0x8000		1226864	0					
ANR	1228577	BitAndExpression	( celt_rng ( s ) ) & 0x8000		1226864	0		&			
ANR	1228578	CallExpression	celt_rng ( s )		1226864	0					
ANR	1228579	Callee	celt_rng		1226864	0					
ANR	1228580	Identifier	celt_rng		1226864	0					
ANR	1228581	ArgumentList	s		1226864	1					
ANR	1228582	Argument	s		1226864	0					
ANR	1228583	Identifier	s		1226864	0					
ANR	1228584	PrimaryExpression	0x8000		1226864	1					
ANR	1228585	MultiplicativeExpression	1.0f / 256		1226864	1		/			
ANR	1228586	PrimaryExpression	1.0f		1226864	0					
ANR	1228587	PrimaryExpression	256		1226864	1					
ANR	1228588	MultiplicativeExpression	- 1.0f / 256		1226864	2		/			
ANR	1228589	UnaryOperationExpression	- 1.0f		1226864	0					
ANR	1228590	UnaryOperator	-		1226864	0					
ANR	1228591	PrimaryExpression	1.0f		1226864	1					
ANR	1228592	PrimaryExpression	256		1226864	1					
ANR	1228593	ExpressionStatement	cm = fill	609:20:12300:12309	1226864	1	True				
ANR	1228594	AssignmentExpression	cm = fill		1226864	0		=			
ANR	1228595	Identifier	cm		1226864	0					
ANR	1228596	Identifier	fill		1226864	1					
ANR	1228597	ExpressionStatement	"celt_renormalize_vector ( X , N , gain )"	613:16:12347:12382	1226864	1	True				
ANR	1228598	CallExpression	"celt_renormalize_vector ( X , N , gain )"		1226864	0					
ANR	1228599	Callee	celt_renormalize_vector		1226864	0					
ANR	1228600	Identifier	celt_renormalize_vector		1226864	0					
ANR	1228601	ArgumentList	X		1226864	1					
ANR	1228602	Argument	X		1226864	0					
ANR	1228603	Identifier	X		1226864	0					
ANR	1228604	Argument	N		1226864	1					
ANR	1228605	Identifier	N		1226864	0					
ANR	1228606	Argument	gain		1226864	2					
ANR	1228607	Identifier	gain		1226864	0					
ANR	1228608	IfStatement	if ( dualstereo )		1226864	20					
ANR	1228609	Condition	dualstereo	625:8:12511:12520	1226864	0	True				
ANR	1228610	Identifier	dualstereo		1226864	0					
ANR	1228611	CompoundStatement		613:8:12053:12058	1226864	1					
ANR	1228612	IdentifierDeclStatement	int j ;	627:8:12534:12539	1226864	0	True				
ANR	1228613	IdentifierDecl	j		1226864	0					
ANR	1228614	IdentifierDeclType	int		1226864	0					
ANR	1228615	Identifier	j		1226864	1					
ANR	1228616	IfStatement	if ( N != 2 )		1226864	1					
ANR	1228617	Condition	N != 2	629:12:12554:12559	1226864	0	True				
ANR	1228618	EqualityExpression	N != 2		1226864	0		!=			
ANR	1228619	Identifier	N		1226864	0					
ANR	1228620	PrimaryExpression	2		1226864	1					
ANR	1228621	ExpressionStatement	"celt_stereo_merge ( X , Y , mid , N )"	631:12:12575:12606	1226864	1	True				
ANR	1228622	CallExpression	"celt_stereo_merge ( X , Y , mid , N )"		1226864	0					
ANR	1228623	Callee	celt_stereo_merge		1226864	0					
ANR	1228624	Identifier	celt_stereo_merge		1226864	0					
ANR	1228625	ArgumentList	X		1226864	1					
ANR	1228626	Argument	X		1226864	0					
ANR	1228627	Identifier	X		1226864	0					
ANR	1228628	Argument	Y		1226864	1					
ANR	1228629	Identifier	Y		1226864	0					
ANR	1228630	Argument	mid		1226864	2					
ANR	1228631	Identifier	mid		1226864	0					
ANR	1228632	Argument	N		1226864	3					
ANR	1228633	Identifier	N		1226864	0					
ANR	1228634	IfStatement	if ( inv )		1226864	2					
ANR	1228635	Condition	inv	633:12:12621:12623	1226864	0	True				
ANR	1228636	Identifier	inv		1226864	0					
ANR	1228637	CompoundStatement		619:17:12145:12145	1226864	1					
ANR	1228638	ForStatement	for ( j = 0 ; j < N ; j ++ )		1226864	0					
ANR	1228639	ForInit	j = 0 ;	635:17:12646:12651	1226864	0	True				
ANR	1228640	AssignmentExpression	j = 0		1226864	0		=			
ANR	1228641	Identifier	j		1226864	0					
ANR	1228642	PrimaryExpression	0		1226864	1					
ANR	1228643	Condition	j < N	635:24:12653:12657	1226864	1	True				
ANR	1228644	RelationalExpression	j < N		1226864	0		<			
ANR	1228645	Identifier	j		1226864	0					
ANR	1228646	Identifier	N		1226864	1					
ANR	1228647	PostIncDecOperationExpression	j ++	635:31:12660:12662	1226864	2	True				
ANR	1228648	Identifier	j		1226864	0					
ANR	1228649	IncDec	++		1226864	1					
ANR	1228650	ExpressionStatement	Y [ j ] *= - 1	637:16:12682:12692	1226864	3	True				
ANR	1228651	AssignmentExpression	Y [ j ] *= - 1		1226864	0		*=			
ANR	1228652	ArrayIndexing	Y [ j ]		1226864	0					
ANR	1228653	Identifier	Y		1226864	0					
ANR	1228654	Identifier	j		1226864	1					
ANR	1228655	UnaryOperationExpression	- 1		1226864	1					
ANR	1228656	UnaryOperator	-		1226864	0					
ANR	1228657	PrimaryExpression	1		1226864	1					
ANR	1228658	ElseStatement	else		1226864	0					
ANR	1228659	IfStatement	if ( level == 0 )		1226864	0					
ANR	1228660	Condition	level == 0	641:15:12721:12730	1226864	0	True				
ANR	1228661	EqualityExpression	level == 0		1226864	0		==			
ANR	1228662	Identifier	level		1226864	0					
ANR	1228663	PrimaryExpression	0		1226864	1					
ANR	1228664	CompoundStatement		629:8:12263:12268	1226864	1					
ANR	1228665	IdentifierDeclStatement	int k ;	643:8:12744:12749	1226864	0	True				
ANR	1228666	IdentifierDecl	k		1226864	0					
ANR	1228667	IdentifierDeclType	int		1226864	0					
ANR	1228668	Identifier	k		1226864	1					
ANR	1228669	IfStatement	if ( B0 > 1 )		1226864	1					
ANR	1228670	Condition	B0 > 1	649:12:12853:12858	1226864	0	True				
ANR	1228671	RelationalExpression	B0 > 1		1226864	0		>			
ANR	1228672	Identifier	B0		1226864	0					
ANR	1228673	PrimaryExpression	1		1226864	1					
ANR	1228674	ExpressionStatement	"celt_interleave_hadamard ( s -> scratch , X , N_B >> recombine , B0 << recombine , longblocks )"	651:12:12874:12994	1226864	1	True				
ANR	1228675	CallExpression	"celt_interleave_hadamard ( s -> scratch , X , N_B >> recombine , B0 << recombine , longblocks )"		1226864	0					
ANR	1228676	Callee	celt_interleave_hadamard		1226864	0					
ANR	1228677	Identifier	celt_interleave_hadamard		1226864	0					
ANR	1228678	ArgumentList	s -> scratch		1226864	1					
ANR	1228679	Argument	s -> scratch		1226864	0					
ANR	1228680	PtrMemberAccess	s -> scratch		1226864	0					
ANR	1228681	Identifier	s		1226864	0					
ANR	1228682	Identifier	scratch		1226864	1					
ANR	1228683	Argument	X		1226864	1					
ANR	1228684	Identifier	X		1226864	0					
ANR	1228685	Argument	N_B >> recombine		1226864	2					
ANR	1228686	ShiftExpression	N_B >> recombine		1226864	0		>>			
ANR	1228687	Identifier	N_B		1226864	0					
ANR	1228688	Identifier	recombine		1226864	1					
ANR	1228689	Argument	B0 << recombine		1226864	3					
ANR	1228690	ShiftExpression	B0 << recombine		1226864	0		<<			
ANR	1228691	Identifier	B0		1226864	0					
ANR	1228692	Identifier	recombine		1226864	1					
ANR	1228693	Argument	longblocks		1226864	4					
ANR	1228694	Identifier	longblocks		1226864	0					
ANR	1228695	ExpressionStatement	N_B = N_B0	659:8:13065:13075	1226864	2	True				
ANR	1228696	AssignmentExpression	N_B = N_B0		1226864	0		=			
ANR	1228697	Identifier	N_B		1226864	0					
ANR	1228698	Identifier	N_B0		1226864	1					
ANR	1228699	ExpressionStatement	blocks = B0	661:8:13086:13097	1226864	3	True				
ANR	1228700	AssignmentExpression	blocks = B0		1226864	0		=			
ANR	1228701	Identifier	blocks		1226864	0					
ANR	1228702	Identifier	B0		1226864	1					
ANR	1228703	ForStatement	for ( k = 0 ; k < time_divide ; k ++ )		1226864	4					
ANR	1228704	ForInit	k = 0 ;	663:13:13113:13118	1226864	0	True				
ANR	1228705	AssignmentExpression	k = 0		1226864	0		=			
ANR	1228706	Identifier	k		1226864	0					
ANR	1228707	PrimaryExpression	0		1226864	1					
ANR	1228708	Condition	k < time_divide	663:20:13120:13134	1226864	1	True				
ANR	1228709	RelationalExpression	k < time_divide		1226864	0		<			
ANR	1228710	Identifier	k		1226864	0					
ANR	1228711	Identifier	time_divide		1226864	1					
ANR	1228712	PostIncDecOperationExpression	k ++	663:37:13137:13139	1226864	2	True				
ANR	1228713	Identifier	k		1226864	0					
ANR	1228714	IncDec	++		1226864	1					
ANR	1228715	CompoundStatement		649:42:12661:12661	1226864	3					
ANR	1228716	ExpressionStatement	blocks >>= 1	665:12:13157:13169	1226864	0	True				
ANR	1228717	AssignmentExpression	blocks >>= 1		1226864	0		>>=			
ANR	1228718	Identifier	blocks		1226864	0					
ANR	1228719	PrimaryExpression	1		1226864	1					
ANR	1228720	ExpressionStatement	N_B <<= 1	667:12:13184:13193	1226864	1	True				
ANR	1228721	AssignmentExpression	N_B <<= 1		1226864	0		<<=			
ANR	1228722	Identifier	N_B		1226864	0					
ANR	1228723	PrimaryExpression	1		1226864	1					
ANR	1228724	ExpressionStatement	cm |= cm >> blocks	669:12:13208:13226	1226864	2	True				
ANR	1228725	AssignmentExpression	cm |= cm >> blocks		1226864	0		|=			
ANR	1228726	Identifier	cm		1226864	0					
ANR	1228727	ShiftExpression	cm >> blocks		1226864	1		>>			
ANR	1228728	Identifier	cm		1226864	0					
ANR	1228729	Identifier	blocks		1226864	1					
ANR	1228730	ExpressionStatement	"celt_haar1 ( X , N_B , blocks )"	671:12:13241:13267	1226864	3	True				
ANR	1228731	CallExpression	"celt_haar1 ( X , N_B , blocks )"		1226864	0					
ANR	1228732	Callee	celt_haar1		1226864	0					
ANR	1228733	Identifier	celt_haar1		1226864	0					
ANR	1228734	ArgumentList	X		1226864	1					
ANR	1228735	Argument	X		1226864	0					
ANR	1228736	Identifier	X		1226864	0					
ANR	1228737	Argument	N_B		1226864	1					
ANR	1228738	Identifier	N_B		1226864	0					
ANR	1228739	Argument	blocks		1226864	2					
ANR	1228740	Identifier	blocks		1226864	0					
ANR	1228741	ForStatement	for ( k = 0 ; k < recombine ; k ++ )		1226864	5					
ANR	1228742	ForInit	k = 0 ;	677:13:13296:13301	1226864	0	True				
ANR	1228743	AssignmentExpression	k = 0		1226864	0		=			
ANR	1228744	Identifier	k		1226864	0					
ANR	1228745	PrimaryExpression	0		1226864	1					
ANR	1228746	Condition	k < recombine	677:20:13303:13315	1226864	1	True				
ANR	1228747	RelationalExpression	k < recombine		1226864	0		<			
ANR	1228748	Identifier	k		1226864	0					
ANR	1228749	Identifier	recombine		1226864	1					
ANR	1228750	PostIncDecOperationExpression	k ++	677:35:13318:13320	1226864	2	True				
ANR	1228751	Identifier	k		1226864	0					
ANR	1228752	IncDec	++		1226864	1					
ANR	1228753	CompoundStatement		663:40:12842:12842	1226864	3					
ANR	1228754	ExpressionStatement	cm = celt_bit_deinterleave [ cm ]	679:12:13338:13368	1226864	0	True				
ANR	1228755	AssignmentExpression	cm = celt_bit_deinterleave [ cm ]		1226864	0		=			
ANR	1228756	Identifier	cm		1226864	0					
ANR	1228757	ArrayIndexing	celt_bit_deinterleave [ cm ]		1226864	1					
ANR	1228758	Identifier	celt_bit_deinterleave		1226864	0					
ANR	1228759	Identifier	cm		1226864	1					
ANR	1228760	ExpressionStatement	"celt_haar1 ( X , N0 >> k , 1 << k )"	681:12:13383:13409	1226864	1	True				
ANR	1228761	CallExpression	"celt_haar1 ( X , N0 >> k , 1 << k )"		1226864	0					
ANR	1228762	Callee	celt_haar1		1226864	0					
ANR	1228763	Identifier	celt_haar1		1226864	0					
ANR	1228764	ArgumentList	X		1226864	1					
ANR	1228765	Argument	X		1226864	0					
ANR	1228766	Identifier	X		1226864	0					
ANR	1228767	Argument	N0 >> k		1226864	1					
ANR	1228768	ShiftExpression	N0 >> k		1226864	0		>>			
ANR	1228769	Identifier	N0		1226864	0					
ANR	1228770	Identifier	k		1226864	1					
ANR	1228771	Argument	1 << k		1226864	2					
ANR	1228772	ShiftExpression	1 << k		1226864	0		<<			
ANR	1228773	PrimaryExpression	1		1226864	0					
ANR	1228774	Identifier	k		1226864	1					
ANR	1228775	ExpressionStatement	blocks <<= recombine	685:8:13431:13451	1226864	6	True				
ANR	1228776	AssignmentExpression	blocks <<= recombine		1226864	0		<<=			
ANR	1228777	Identifier	blocks		1226864	0					
ANR	1228778	Identifier	recombine		1226864	1					
ANR	1228779	IfStatement	if ( lowband_out )		1226864	7					
ANR	1228780	Condition	lowband_out	691:12:13514:13524	1226864	0	True				
ANR	1228781	Identifier	lowband_out		1226864	0					
ANR	1228782	CompoundStatement		681:12:13081:13100	1226864	1					
ANR	1228783	IdentifierDeclStatement	int j ;	693:12:13542:13547	1226864	0	True				
ANR	1228784	IdentifierDecl	j		1226864	0					
ANR	1228785	IdentifierDeclType	int		1226864	0					
ANR	1228786	Identifier	j		1226864	1					
ANR	1228787	IdentifierDeclStatement	float n = sqrtf ( N0 ) ;	695:12:13562:13581	1226864	1	True				
ANR	1228788	IdentifierDecl	n = sqrtf ( N0 )		1226864	0					
ANR	1228789	IdentifierDeclType	float		1226864	0					
ANR	1228790	Identifier	n		1226864	1					
ANR	1228791	AssignmentExpression	n = sqrtf ( N0 )		1226864	2		=			
ANR	1228792	Identifier	n		1226864	0					
ANR	1228793	CallExpression	sqrtf ( N0 )		1226864	1					
ANR	1228794	Callee	sqrtf		1226864	0					
ANR	1228795	Identifier	sqrtf		1226864	0					
ANR	1228796	ArgumentList	N0		1226864	1					
ANR	1228797	Argument	N0		1226864	0					
ANR	1228798	Identifier	N0		1226864	0					
ANR	1228799	ForStatement	for ( j = 0 ; j < N0 ; j ++ )		1226864	2					
ANR	1228800	ForInit	j = 0 ;	697:17:13601:13606	1226864	0	True				
ANR	1228801	AssignmentExpression	j = 0		1226864	0		=			
ANR	1228802	Identifier	j		1226864	0					
ANR	1228803	PrimaryExpression	0		1226864	1					
ANR	1228804	Condition	j < N0	697:24:13608:13613	1226864	1	True				
ANR	1228805	RelationalExpression	j < N0		1226864	0		<			
ANR	1228806	Identifier	j		1226864	0					
ANR	1228807	Identifier	N0		1226864	1					
ANR	1228808	PostIncDecOperationExpression	j ++	697:32:13616:13618	1226864	2	True				
ANR	1228809	Identifier	j		1226864	0					
ANR	1228810	IncDec	++		1226864	1					
ANR	1228811	ExpressionStatement	lowband_out [ j ] = n * X [ j ]	699:16:13638:13663	1226864	3	True				
ANR	1228812	AssignmentExpression	lowband_out [ j ] = n * X [ j ]		1226864	0		=			
ANR	1228813	ArrayIndexing	lowband_out [ j ]		1226864	0					
ANR	1228814	Identifier	lowband_out		1226864	0					
ANR	1228815	Identifier	j		1226864	1					
ANR	1228816	MultiplicativeExpression	n * X [ j ]		1226864	1		*			
ANR	1228817	Identifier	n		1226864	0					
ANR	1228818	ArrayIndexing	X [ j ]		1226864	1					
ANR	1228819	Identifier	X		1226864	0					
ANR	1228820	Identifier	j		1226864	1					
ANR	1228821	ExpressionStatement	cm &= ( 1 << blocks ) - 1	703:8:13685:13708	1226864	8	True				
ANR	1228822	AssignmentExpression	cm &= ( 1 << blocks ) - 1		1226864	0		&=			
ANR	1228823	Identifier	cm		1226864	0					
ANR	1228824	AdditiveExpression	( 1 << blocks ) - 1		1226864	1		-			
ANR	1228825	ShiftExpression	1 << blocks		1226864	0		<<			
ANR	1228826	PrimaryExpression	1		1226864	0					
ANR	1228827	Identifier	blocks		1226864	1					
ANR	1228828	PrimaryExpression	1		1226864	1					
ANR	1228829	ReturnStatement	return cm ;	707:4:13722:13731	1226864	21	True				
ANR	1228830	Identifier	cm		1226864	0					
ANR	1228831	ReturnType	static unsigned int		1226864	1					
ANR	1228832	Identifier	celt_decode_band		1226864	2					
ANR	1228833	ParameterList	"CeltContext * s , OpusRangeCoder * rc , const int band , float * X , float * Y , int N , int b , unsigned int blocks , float * lowband , int duration , float * lowband_out , int level , float gain , float * lowband_scratch , int fill"		1226864	3					
ANR	1228834	Parameter	CeltContext * s	1:37:37:50	1226864	0	True				
ANR	1228835	ParameterType	CeltContext *		1226864	0					
ANR	1228836	Identifier	s		1226864	1					
ANR	1228837	Parameter	OpusRangeCoder * rc	1:53:53:70	1226864	1	True				
ANR	1228838	ParameterType	OpusRangeCoder *		1226864	0					
ANR	1228839	Identifier	rc		1226864	1					
ANR	1228840	Parameter	const int band	3:37:111:124	1226864	2	True				
ANR	1228841	ParameterType	const int		1226864	0					
ANR	1228842	Identifier	band		1226864	1					
ANR	1228843	Parameter	float * X	3:53:127:134	1226864	3	True				
ANR	1228844	ParameterType	float *		1226864	0					
ANR	1228845	Identifier	X		1226864	1					
ANR	1228846	Parameter	float * Y	3:63:137:144	1226864	4	True				
ANR	1228847	ParameterType	float *		1226864	0					
ANR	1228848	Identifier	Y		1226864	1					
ANR	1228849	Parameter	int N	5:37:185:189	1226864	5	True				
ANR	1228850	ParameterType	int		1226864	0					
ANR	1228851	Identifier	N		1226864	1					
ANR	1228852	Parameter	int b	5:44:192:196	1226864	6	True				
ANR	1228853	ParameterType	int		1226864	0					
ANR	1228854	Identifier	b		1226864	1					
ANR	1228855	Parameter	unsigned int blocks	5:51:199:217	1226864	7	True				
ANR	1228856	ParameterType	unsigned int		1226864	0					
ANR	1228857	Identifier	blocks		1226864	1					
ANR	1228858	Parameter	float * lowband	7:37:258:271	1226864	8	True				
ANR	1228859	ParameterType	float *		1226864	0					
ANR	1228860	Identifier	lowband		1226864	1					
ANR	1228861	Parameter	int duration	7:53:274:285	1226864	9	True				
ANR	1228862	ParameterType	int		1226864	0					
ANR	1228863	Identifier	duration		1226864	1					
ANR	1228864	Parameter	float * lowband_out	9:37:326:343	1226864	10	True				
ANR	1228865	ParameterType	float *		1226864	0					
ANR	1228866	Identifier	lowband_out		1226864	1					
ANR	1228867	Parameter	int level	9:57:346:354	1226864	11	True				
ANR	1228868	ParameterType	int		1226864	0					
ANR	1228869	Identifier	level		1226864	1					
ANR	1228870	Parameter	float gain	11:37:395:404	1226864	12	True				
ANR	1228871	ParameterType	float		1226864	0					
ANR	1228872	Identifier	gain		1226864	1					
ANR	1228873	Parameter	float * lowband_scratch	11:49:407:428	1226864	13	True				
ANR	1228874	ParameterType	float *		1226864	0					
ANR	1228875	Identifier	lowband_scratch		1226864	1					
ANR	1228876	Parameter	int fill	13:37:469:476	1226864	14	True				
ANR	1228877	ParameterType	int		1226864	0					
ANR	1228878	Identifier	fill		1226864	1					
ANR	1228879	CFGEntryNode	ENTRY		1226864		True				
ANR	1228880	CFGExitNode	EXIT		1226864		True				
ANR	1228881	Symbol	* x		1226864						
ANR	1228882	Symbol	delta		1226864						
ANR	1228883	Symbol	* lowband_out		1226864						
ANR	1228884	Symbol	opus_getrawbits		1226864						
ANR	1228885	Symbol	* cache		1226864						
ANR	1228886	Symbol	imid		1226864						
ANR	1228887	Symbol	* duration		1226864						
ANR	1228888	Symbol	itheta		1226864						
ANR	1228889	Symbol	tmp		1226864						
ANR	1228890	Symbol	band		1226864						
ANR	1228891	Symbol	celt_log_freq_range		1226864						
ANR	1228892	Symbol	av_clip		1226864						
ANR	1228893	Symbol	tf_change		1226864						
ANR	1228894	Symbol	qn		1226864						
ANR	1228895	Symbol	cache		1226864						
ANR	1228896	Symbol	next_lowband_out1		1226864						
ANR	1228897	Symbol	* fill		1226864						
ANR	1228898	Symbol	celt_cache_bits		1226864						
ANR	1228899	Symbol	curr_bits		1226864						
ANR	1228900	Symbol	next_lowband2		1226864						
ANR	1228901	Symbol	opus_rc_p2model		1226864						
ANR	1228902	Symbol	B0		1226864						
ANR	1228903	Symbol	rc		1226864						
ANR	1228904	Symbol	* cm		1226864						
ANR	1228905	Symbol	s -> tf_change		1226864						
ANR	1228906	Symbol	* lowband		1226864						
ANR	1228907	Symbol	qalloc		1226864						
ANR	1228908	Symbol	CELT_MAX_BANDS		1226864						
ANR	1228909	Symbol	* celt_bit_interleave		1226864						
ANR	1228910	Symbol	mid		1226864						
ANR	1228911	Symbol	dualstereo		1226864						
ANR	1228912	Symbol	N		1226864						
ANR	1228913	Symbol	gain		1226864						
ANR	1228914	Symbol	orig_fill		1226864						
ANR	1228915	Symbol	opus_rc_tell_frac		1226864						
ANR	1228916	Symbol	ROUND_MUL16		1226864						
ANR	1228917	Symbol	rebalance		1226864						
ANR	1228918	Symbol	celt_log2tan		1226864						
ANR	1228919	Symbol	celt_pulses2bits		1226864						
ANR	1228920	Symbol	X		1226864						
ANR	1228921	Symbol	* * s		1226864						
ANR	1228922	Symbol	Y		1226864						
ANR	1228923	Symbol	opus_rc_trimodel		1226864						
ANR	1228924	Symbol	recombine		1226864						
ANR	1228925	Symbol	* lowband_scratch		1226864						
ANR	1228926	Symbol	CELT_QTHETA_OFFSET_TWOPHASE		1226864						
ANR	1228927	Symbol	* celt_log_freq_range		1226864						
ANR	1228928	Symbol	celt_decode_band		1226864						
ANR	1228929	Symbol	b		1226864						
ANR	1228930	Symbol	side		1226864						
ANR	1228931	Symbol	c		1226864						
ANR	1228932	Symbol	* x2		1226864						
ANR	1228933	Symbol	celt_bit_deinterleave		1226864						
ANR	1228934	Symbol	longblocks		1226864						
ANR	1228935	Symbol	i		1226864						
ANR	1228936	Symbol	cm		1226864						
ANR	1228937	Symbol	j		1226864						
ANR	1228938	Symbol	k		1226864						
ANR	1228939	Symbol	lowband_out		1226864						
ANR	1228940	Symbol	n		1226864						
ANR	1228941	Symbol	q		1226864						
ANR	1228942	Symbol	s		1226864						
ANR	1228943	Symbol	* * cache		1226864						
ANR	1228944	Symbol	x		1226864						
ANR	1228945	Symbol	celt_cache_index		1226864						
ANR	1228946	Symbol	CELT_QTHETA_OFFSET		1226864						
ANR	1228947	Symbol	sbits		1226864						
ANR	1228948	Symbol	tell		1226864						
ANR	1228949	Symbol	sign		1226864						
ANR	1228950	Symbol	FFMIN		1226864						
ANR	1228951	Symbol	s -> spread		1226864						
ANR	1228952	Symbol	s -> intensitystereo		1226864						
ANR	1228953	Symbol	s -> scratch		1226864						
ANR	1228954	Symbol	N_B		1226864						
ANR	1228955	Symbol	* celt_cache_index		1226864						
ANR	1228956	Symbol	celt_rng		1226864						
ANR	1228957	Symbol	split		1226864						
ANR	1228958	Symbol	next_level		1226864						
ANR	1228959	Symbol	N_B0		1226864						
ANR	1228960	Symbol	* s -> tf_change		1226864						
ANR	1228961	Symbol	* y2		1226864						
ANR	1228962	Symbol	* CELT_MAX_BANDS		1226864						
ANR	1228963	Symbol	N0		1226864						
ANR	1228964	Symbol	NULL		1226864						
ANR	1228965	Symbol	offset		1226864						
ANR	1228966	Symbol	level		1226864						
ANR	1228967	Symbol	fill		1226864						
ANR	1228968	Symbol	lowband_scratch		1226864						
ANR	1228969	Symbol	opus_rc_unimodel		1226864						
ANR	1228970	Symbol	x2		1226864						
ANR	1228971	Symbol	iside		1226864						
ANR	1228972	Symbol	celt_alg_unquant		1226864						
ANR	1228973	Symbol	lowband		1226864						
ANR	1228974	Symbol	* celt_bit_deinterleave		1226864						
ANR	1228975	Symbol	sqrtf		1226864						
ANR	1228976	Symbol	duration		1226864						
ANR	1228977	Symbol	cm_mask		1226864						
ANR	1228978	Symbol	pulse_cap		1226864						
ANR	1228979	Symbol	y2		1226864						
ANR	1228980	Symbol	mbits		1226864						
ANR	1228981	Symbol	* X		1226864						
ANR	1228982	Symbol	* Y		1226864						
ANR	1228983	Symbol	blocks		1226864						
ANR	1228984	Symbol	time_divide		1226864						
ANR	1228985	Symbol	inv		1226864						
ANR	1228986	Symbol	celt_bit_interleave		1226864						
ANR	1228987	Symbol	opus_rc_stepmodel		1226864						
ANR	1228988	Symbol	* j		1226864						
ANR	1228989	Symbol	celt_bits2pulses		1226864						
ANR	1228990	Symbol	s -> remaining2		1226864						
ANR	1228991	Symbol	celt_cos		1226864						
ANR	1228992	Symbol	* band		1226864						
ANR	1228993	Symbol	* s		1226864						
ANR	1228994	Symbol	celt_compute_qn		1226864						
