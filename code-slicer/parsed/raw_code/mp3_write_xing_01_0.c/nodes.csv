command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5686499	File	/home/p4ultr4n/workplace/ReVeal/raw_code/mp3_write_xing_01_0.c								
ANR	5686500	Function	mp3_write_xing	1:0:0:5101							
ANR	5686501	FunctionDef	mp3_write_xing (AVFormatContext * s)		5686500	0					
ANR	5686502	CompoundStatement		3:0:47:5101	5686500	0					
ANR	5686503	IdentifierDeclStatement	MP3Context * mp3 = s -> priv_data ;	5:4:54:90	5686500	0	True				
ANR	5686504	IdentifierDecl	* mp3 = s -> priv_data		5686500	0					
ANR	5686505	IdentifierDeclType	MP3Context *		5686500	0					
ANR	5686506	Identifier	mp3		5686500	1					
ANR	5686507	AssignmentExpression	* mp3 = s -> priv_data		5686500	2		=			
ANR	5686508	Identifier	mp3		5686500	0					
ANR	5686509	PtrMemberAccess	s -> priv_data		5686500	1					
ANR	5686510	Identifier	s		5686500	0					
ANR	5686511	Identifier	priv_data		5686500	1					
ANR	5686512	IdentifierDeclStatement	AVCodecContext * codec = s -> streams [ mp3 -> audio_stream_idx ] -> codec ;	7:4:97:161	5686500	1	True				
ANR	5686513	IdentifierDecl	* codec = s -> streams [ mp3 -> audio_stream_idx ] -> codec		5686500	0					
ANR	5686514	IdentifierDeclType	AVCodecContext *		5686500	0					
ANR	5686515	Identifier	codec		5686500	1					
ANR	5686516	AssignmentExpression	* codec = s -> streams [ mp3 -> audio_stream_idx ] -> codec		5686500	2		=			
ANR	5686517	Identifier	codec		5686500	0					
ANR	5686518	PtrMemberAccess	s -> streams [ mp3 -> audio_stream_idx ] -> codec		5686500	1					
ANR	5686519	ArrayIndexing	s -> streams [ mp3 -> audio_stream_idx ]		5686500	0					
ANR	5686520	PtrMemberAccess	s -> streams		5686500	0					
ANR	5686521	Identifier	s		5686500	0					
ANR	5686522	Identifier	streams		5686500	1					
ANR	5686523	PtrMemberAccess	mp3 -> audio_stream_idx		5686500	1					
ANR	5686524	Identifier	mp3		5686500	0					
ANR	5686525	Identifier	audio_stream_idx		5686500	1					
ANR	5686526	Identifier	codec		5686500	1					
ANR	5686527	IdentifierDeclStatement	"AVDictionaryEntry * enc = av_dict_get ( s -> streams [ mp3 -> audio_stream_idx ] -> metadata , ""encoder"" , NULL , 0 ) ;"	9:4:168:269	5686500	2	True				
ANR	5686528	IdentifierDecl	"* enc = av_dict_get ( s -> streams [ mp3 -> audio_stream_idx ] -> metadata , ""encoder"" , NULL , 0 )"		5686500	0					
ANR	5686529	IdentifierDeclType	AVDictionaryEntry *		5686500	0					
ANR	5686530	Identifier	enc		5686500	1					
ANR	5686531	AssignmentExpression	"* enc = av_dict_get ( s -> streams [ mp3 -> audio_stream_idx ] -> metadata , ""encoder"" , NULL , 0 )"		5686500	2		=			
ANR	5686532	Identifier	enc		5686500	0					
ANR	5686533	CallExpression	"av_dict_get ( s -> streams [ mp3 -> audio_stream_idx ] -> metadata , ""encoder"" , NULL , 0 )"		5686500	1					
ANR	5686534	Callee	av_dict_get		5686500	0					
ANR	5686535	Identifier	av_dict_get		5686500	0					
ANR	5686536	ArgumentList	s -> streams [ mp3 -> audio_stream_idx ] -> metadata		5686500	1					
ANR	5686537	Argument	s -> streams [ mp3 -> audio_stream_idx ] -> metadata		5686500	0					
ANR	5686538	PtrMemberAccess	s -> streams [ mp3 -> audio_stream_idx ] -> metadata		5686500	0					
ANR	5686539	ArrayIndexing	s -> streams [ mp3 -> audio_stream_idx ]		5686500	0					
ANR	5686540	PtrMemberAccess	s -> streams		5686500	0					
ANR	5686541	Identifier	s		5686500	0					
ANR	5686542	Identifier	streams		5686500	1					
ANR	5686543	PtrMemberAccess	mp3 -> audio_stream_idx		5686500	1					
ANR	5686544	Identifier	mp3		5686500	0					
ANR	5686545	Identifier	audio_stream_idx		5686500	1					
ANR	5686546	Identifier	metadata		5686500	1					
ANR	5686547	Argument	"""encoder"""		5686500	1					
ANR	5686548	PrimaryExpression	"""encoder"""		5686500	0					
ANR	5686549	Argument	NULL		5686500	2					
ANR	5686550	Identifier	NULL		5686500	0					
ANR	5686551	Argument	0		5686500	3					
ANR	5686552	PrimaryExpression	0		5686500	0					
ANR	5686553	IdentifierDeclStatement	AVIOContext * dyn_ctx ;	11:4:276:296	5686500	3	True				
ANR	5686554	IdentifierDecl	* dyn_ctx		5686500	0					
ANR	5686555	IdentifierDeclType	AVIOContext *		5686500	0					
ANR	5686556	Identifier	dyn_ctx		5686500	1					
ANR	5686557	IdentifierDeclStatement	int32_t header ;	13:4:303:324	5686500	4	True				
ANR	5686558	IdentifierDecl	header		5686500	0					
ANR	5686559	IdentifierDeclType	int32_t		5686500	0					
ANR	5686560	Identifier	header		5686500	1					
ANR	5686561	IdentifierDeclStatement	MPADecodeHeader mpah ;	15:4:331:352	5686500	5	True				
ANR	5686562	IdentifierDecl	mpah		5686500	0					
ANR	5686563	IdentifierDeclType	MPADecodeHeader		5686500	0					
ANR	5686564	Identifier	mpah		5686500	1					
ANR	5686565	IdentifierDeclStatement	"int srate_idx , i , channels ;"	17:4:359:385	5686500	6	True				
ANR	5686566	IdentifierDecl	srate_idx		5686500	0					
ANR	5686567	IdentifierDeclType	int		5686500	0					
ANR	5686568	Identifier	srate_idx		5686500	1					
ANR	5686569	IdentifierDecl	i		5686500	1					
ANR	5686570	IdentifierDeclType	int		5686500	0					
ANR	5686571	Identifier	i		5686500	1					
ANR	5686572	IdentifierDecl	channels		5686500	2					
ANR	5686573	IdentifierDeclType	int		5686500	0					
ANR	5686574	Identifier	channels		5686500	1					
ANR	5686575	IdentifierDeclStatement	int bitrate_idx ;	19:4:392:407	5686500	7	True				
ANR	5686576	IdentifierDecl	bitrate_idx		5686500	0					
ANR	5686577	IdentifierDeclType	int		5686500	0					
ANR	5686578	Identifier	bitrate_idx		5686500	1					
ANR	5686579	IdentifierDeclStatement	int best_bitrate_idx = - 1 ;	21:4:414:439	5686500	8	True				
ANR	5686580	IdentifierDecl	best_bitrate_idx = - 1		5686500	0					
ANR	5686581	IdentifierDeclType	int		5686500	0					
ANR	5686582	Identifier	best_bitrate_idx		5686500	1					
ANR	5686583	AssignmentExpression	best_bitrate_idx = - 1		5686500	2		=			
ANR	5686584	Identifier	best_bitrate_idx		5686500	0					
ANR	5686585	UnaryOperationExpression	- 1		5686500	1					
ANR	5686586	UnaryOperator	-		5686500	0					
ANR	5686587	PrimaryExpression	1		5686500	1					
ANR	5686588	IdentifierDeclStatement	int best_bitrate_error = INT_MAX ;	23:4:446:478	5686500	9	True				
ANR	5686589	IdentifierDecl	best_bitrate_error = INT_MAX		5686500	0					
ANR	5686590	IdentifierDeclType	int		5686500	0					
ANR	5686591	Identifier	best_bitrate_error		5686500	1					
ANR	5686592	AssignmentExpression	best_bitrate_error = INT_MAX		5686500	2		=			
ANR	5686593	Identifier	INT_MAX		5686500	0					
ANR	5686594	Identifier	INT_MAX		5686500	1					
ANR	5686595	IdentifierDeclStatement	int ret ;	25:4:485:492	5686500	10	True				
ANR	5686596	IdentifierDecl	ret		5686500	0					
ANR	5686597	IdentifierDeclType	int		5686500	0					
ANR	5686598	Identifier	ret		5686500	1					
ANR	5686599	IdentifierDeclStatement	int ver = 0 ;	27:4:499:510	5686500	11	True				
ANR	5686600	IdentifierDecl	ver = 0		5686500	0					
ANR	5686601	IdentifierDeclType	int		5686500	0					
ANR	5686602	Identifier	ver		5686500	1					
ANR	5686603	AssignmentExpression	ver = 0		5686500	2		=			
ANR	5686604	Identifier	ver		5686500	0					
ANR	5686605	PrimaryExpression	0		5686500	1					
ANR	5686606	IdentifierDeclStatement	int bytes_needed ;	29:4:517:533	5686500	12	True				
ANR	5686607	IdentifierDecl	bytes_needed		5686500	0					
ANR	5686608	IdentifierDeclType	int		5686500	0					
ANR	5686609	Identifier	bytes_needed		5686500	1					
ANR	5686610	IfStatement	if ( ! s -> pb -> seekable || ! mp3 -> write_xing )		5686500	13					
ANR	5686611	Condition	! s -> pb -> seekable || ! mp3 -> write_xing	33:8:546:581	5686500	0	True				
ANR	5686612	OrExpression	! s -> pb -> seekable || ! mp3 -> write_xing		5686500	0		||			
ANR	5686613	UnaryOperationExpression	! s -> pb -> seekable		5686500	0					
ANR	5686614	UnaryOperator	!		5686500	0					
ANR	5686615	PtrMemberAccess	s -> pb -> seekable		5686500	1					
ANR	5686616	PtrMemberAccess	s -> pb		5686500	0					
ANR	5686617	Identifier	s		5686500	0					
ANR	5686618	Identifier	pb		5686500	1					
ANR	5686619	Identifier	seekable		5686500	1					
ANR	5686620	UnaryOperationExpression	! mp3 -> write_xing		5686500	1					
ANR	5686621	UnaryOperator	!		5686500	0					
ANR	5686622	PtrMemberAccess	mp3 -> write_xing		5686500	1					
ANR	5686623	Identifier	mp3		5686500	0					
ANR	5686624	Identifier	write_xing		5686500	1					
ANR	5686625	ReturnStatement	return 0 ;	35:8:593:601	5686500	1	True				
ANR	5686626	PrimaryExpression	0		5686500	0					
ANR	5686627	ForStatement	for ( i = 0 ; i < FF_ARRAY_ELEMS ( avpriv_mpa_freq_tab ) ; i ++ )		5686500	14					
ANR	5686628	ForInit	i = 0 ;	39:9:615:620	5686500	0	True				
ANR	5686629	AssignmentExpression	i = 0		5686500	0		=			
ANR	5686630	Identifier	i		5686500	0					
ANR	5686631	PrimaryExpression	0		5686500	1					
ANR	5686632	Condition	i < FF_ARRAY_ELEMS ( avpriv_mpa_freq_tab )	39:16:622:660	5686500	1	True				
ANR	5686633	RelationalExpression	i < FF_ARRAY_ELEMS ( avpriv_mpa_freq_tab )		5686500	0		<			
ANR	5686634	Identifier	i		5686500	0					
ANR	5686635	CallExpression	FF_ARRAY_ELEMS ( avpriv_mpa_freq_tab )		5686500	1					
ANR	5686636	Callee	FF_ARRAY_ELEMS		5686500	0					
ANR	5686637	Identifier	FF_ARRAY_ELEMS		5686500	0					
ANR	5686638	ArgumentList	avpriv_mpa_freq_tab		5686500	1					
ANR	5686639	Argument	avpriv_mpa_freq_tab		5686500	0					
ANR	5686640	Identifier	avpriv_mpa_freq_tab		5686500	0					
ANR	5686641	PostIncDecOperationExpression	i ++	39:57:663:665	5686500	2	True				
ANR	5686642	Identifier	i		5686500	0					
ANR	5686643	IncDec	++		5686500	1					
ANR	5686644	CompoundStatement		39:8:631:680	5686500	3					
ANR	5686645	IdentifierDeclStatement	const uint16_t base_freq = avpriv_mpa_freq_tab [ i ] ;	41:8:679:728	5686500	0	True				
ANR	5686646	IdentifierDecl	base_freq = avpriv_mpa_freq_tab [ i ]		5686500	0					
ANR	5686647	IdentifierDeclType	const uint16_t		5686500	0					
ANR	5686648	Identifier	base_freq		5686500	1					
ANR	5686649	AssignmentExpression	base_freq = avpriv_mpa_freq_tab [ i ]		5686500	2		=			
ANR	5686650	Identifier	base_freq		5686500	0					
ANR	5686651	ArrayIndexing	avpriv_mpa_freq_tab [ i ]		5686500	1					
ANR	5686652	Identifier	avpriv_mpa_freq_tab		5686500	0					
ANR	5686653	Identifier	i		5686500	1					
ANR	5686654	IfStatement	if ( codec -> sample_rate == base_freq )		5686500	1					
ANR	5686655	Condition	codec -> sample_rate == base_freq	45:17:750:780	5686500	0	True				
ANR	5686656	EqualityExpression	codec -> sample_rate == base_freq		5686500	0		==			
ANR	5686657	PtrMemberAccess	codec -> sample_rate		5686500	0					
ANR	5686658	Identifier	codec		5686500	0					
ANR	5686659	Identifier	sample_rate		5686500	1					
ANR	5686660	Identifier	base_freq		5686500	1					
ANR	5686661	ExpressionStatement	ver = 0x3	45:54:787:796	5686500	1	True				
ANR	5686662	AssignmentExpression	ver = 0x3		5686500	0		=			
ANR	5686663	Identifier	ver		5686500	0					
ANR	5686664	PrimaryExpression	0x3		5686500	1					
ANR	5686665	ElseStatement	else		5686500	0					
ANR	5686666	IfStatement	if ( codec -> sample_rate == base_freq / 2 )		5686500	0					
ANR	5686667	Condition	codec -> sample_rate == base_freq / 2	47:17:826:860	5686500	0	True				
ANR	5686668	EqualityExpression	codec -> sample_rate == base_freq / 2		5686500	0		==			
ANR	5686669	PtrMemberAccess	codec -> sample_rate		5686500	0					
ANR	5686670	Identifier	codec		5686500	0					
ANR	5686671	Identifier	sample_rate		5686500	1					
ANR	5686672	MultiplicativeExpression	base_freq / 2		5686500	1		/			
ANR	5686673	Identifier	base_freq		5686500	0					
ANR	5686674	PrimaryExpression	2		5686500	1					
ANR	5686675	ExpressionStatement	ver = 0x2	47:54:863:872	5686500	1	True				
ANR	5686676	AssignmentExpression	ver = 0x2		5686500	0		=			
ANR	5686677	Identifier	ver		5686500	0					
ANR	5686678	PrimaryExpression	0x2		5686500	1					
ANR	5686679	ElseStatement	else		5686500	0					
ANR	5686680	IfStatement	if ( codec -> sample_rate == base_freq / 4 )		5686500	0					
ANR	5686681	Condition	codec -> sample_rate == base_freq / 4	49:17:902:936	5686500	0	True				
ANR	5686682	EqualityExpression	codec -> sample_rate == base_freq / 4		5686500	0		==			
ANR	5686683	PtrMemberAccess	codec -> sample_rate		5686500	0					
ANR	5686684	Identifier	codec		5686500	0					
ANR	5686685	Identifier	sample_rate		5686500	1					
ANR	5686686	MultiplicativeExpression	base_freq / 4		5686500	1		/			
ANR	5686687	Identifier	base_freq		5686500	0					
ANR	5686688	PrimaryExpression	4		5686500	1					
ANR	5686689	ExpressionStatement	ver = 0x0	49:54:939:948	5686500	1	True				
ANR	5686690	AssignmentExpression	ver = 0x0		5686500	0		=			
ANR	5686691	Identifier	ver		5686500	0					
ANR	5686692	PrimaryExpression	0x0		5686500	1					
ANR	5686693	ElseStatement	else		5686500	0					
ANR	5686694	ContinueStatement	continue ;	51:13:976:984	5686500	0	True				
ANR	5686695	ExpressionStatement	srate_idx = i	55:8:997:1010	5686500	2	True				
ANR	5686696	AssignmentExpression	srate_idx = i		5686500	0		=			
ANR	5686697	Identifier	srate_idx		5686500	0					
ANR	5686698	Identifier	i		5686500	1					
ANR	5686699	BreakStatement	break ;	57:8:1021:1026	5686500	3	True				
ANR	5686700	IfStatement	if ( i == FF_ARRAY_ELEMS ( avpriv_mpa_freq_tab ) )		5686500	15					
ANR	5686701	Condition	i == FF_ARRAY_ELEMS ( avpriv_mpa_freq_tab )	61:8:1044:1083	5686500	0	True				
ANR	5686702	EqualityExpression	i == FF_ARRAY_ELEMS ( avpriv_mpa_freq_tab )		5686500	0		==			
ANR	5686703	Identifier	i		5686500	0					
ANR	5686704	CallExpression	FF_ARRAY_ELEMS ( avpriv_mpa_freq_tab )		5686500	1					
ANR	5686705	Callee	FF_ARRAY_ELEMS		5686500	0					
ANR	5686706	Identifier	FF_ARRAY_ELEMS		5686500	0					
ANR	5686707	ArgumentList	avpriv_mpa_freq_tab		5686500	1					
ANR	5686708	Argument	avpriv_mpa_freq_tab		5686500	0					
ANR	5686709	Identifier	avpriv_mpa_freq_tab		5686500	0					
ANR	5686710	CompoundStatement		59:50:1038:1038	5686500	1					
ANR	5686711	ExpressionStatement	"av_log ( s , AV_LOG_WARNING , ""Unsupported sample rate, not writing Xing header.\\n"" )"	63:8:1097:1177	5686500	0	True				
ANR	5686712	CallExpression	"av_log ( s , AV_LOG_WARNING , ""Unsupported sample rate, not writing Xing header.\\n"" )"		5686500	0					
ANR	5686713	Callee	av_log		5686500	0					
ANR	5686714	Identifier	av_log		5686500	0					
ANR	5686715	ArgumentList	s		5686500	1					
ANR	5686716	Argument	s		5686500	0					
ANR	5686717	Identifier	s		5686500	0					
ANR	5686718	Argument	AV_LOG_WARNING		5686500	1					
ANR	5686719	Identifier	AV_LOG_WARNING		5686500	0					
ANR	5686720	Argument	"""Unsupported sample rate, not writing Xing header.\\n"""		5686500	2					
ANR	5686721	PrimaryExpression	"""Unsupported sample rate, not writing Xing header.\\n"""		5686500	0					
ANR	5686722	ReturnStatement	return - 1 ;	65:8:1188:1197	5686500	1	True				
ANR	5686723	UnaryOperationExpression	- 1		5686500	0					
ANR	5686724	UnaryOperator	-		5686500	0					
ANR	5686725	PrimaryExpression	1		5686500	1					
ANR	5686726	SwitchStatement	switch ( codec -> channels )		5686500	16					
ANR	5686727	Condition	codec -> channels	71:12:1221:1235	5686500	0	True				
ANR	5686728	PtrMemberAccess	codec -> channels		5686500	0					
ANR	5686729	Identifier	codec		5686500	0					
ANR	5686730	Identifier	channels		5686500	1					
ANR	5686731	CompoundStatement		69:29:1190:1190	5686500	1					
ANR	5686732	Label	case 1 :	73:4:1245:1251	5686500	0	True				
ANR	5686733	ExpressionStatement	channels = MPA_MONO	73:13:1254:1273	5686500	1	True				
ANR	5686734	AssignmentExpression	channels = MPA_MONO		5686500	0		=			
ANR	5686735	Identifier	channels		5686500	0					
ANR	5686736	Identifier	MPA_MONO		5686500	1					
ANR	5686737	BreakStatement	break ;	73:75:1316:1321	5686500	2	True				
ANR	5686738	Label	case 2 :	75:4:1328:1334	5686500	3	True				
ANR	5686739	ExpressionStatement	channels = MPA_STEREO	75:13:1337:1358	5686500	4	True				
ANR	5686740	AssignmentExpression	channels = MPA_STEREO		5686500	0		=			
ANR	5686741	Identifier	channels		5686500	0					
ANR	5686742	Identifier	MPA_STEREO		5686500	1					
ANR	5686743	BreakStatement	break ;	75:75:1399:1404	5686500	5	True				
ANR	5686744	Label	default :	77:4:1411:1418	5686500	6	True				
ANR	5686745	Identifier	default		5686500	0					
ANR	5686746	Statement	av_log	77:13:1420:1425	5686500	7	True				
ANR	5686747	Statement	(	77:19:1426:1426	5686500	8	True				
ANR	5686748	Statement	s	77:20:1427:1427	5686500	9	True				
ANR	5686749	Statement	","	77:21:1428:1428	5686500	10	True				
ANR	5686750	Statement	AV_LOG_WARNING	77:23:1430:1443	5686500	11	True				
ANR	5686751	Statement	","	77:37:1444:1444	5686500	12	True				
ANR	5686752	Statement	"""Unsupported number of channels, """	77:39:1446:1479	5686500	13	True				
ANR	5686753	Statement	"""not writing Xing header.\\n"""	79:20:1502:1529	5686500	14	True				
ANR	5686754	Statement	)	79:48:1530:1530	5686500	15	True				
ANR	5686755	ExpressionStatement		79:49:1531:1531	5686500	16	True				
ANR	5686756	ReturnStatement	return - 1 ;	81:13:1547:1556	5686500	17	True				
ANR	5686757	UnaryOperationExpression	- 1		5686500	0					
ANR	5686758	UnaryOperator	-		5686500	0					
ANR	5686759	PrimaryExpression	1		5686500	1					
ANR	5686760	ExpressionStatement	header = 0xffU << 24	89:4:1607:1661	5686500	17	True				
ANR	5686761	AssignmentExpression	header = 0xffU << 24		5686500	0		=			
ANR	5686762	Identifier	header		5686500	0					
ANR	5686763	ShiftExpression	0xffU << 24		5686500	1		<<			
ANR	5686764	PrimaryExpression	0xffU		5686500	0					
ANR	5686765	PrimaryExpression	24		5686500	1					
ANR	5686766	ExpressionStatement	header |= ( 0x7 << 5 | ver << 3 | 0x1 << 1 | 0x1 ) << 16	91:4:1676:1730	5686500	18	True				
ANR	5686767	AssignmentExpression	header |= ( 0x7 << 5 | ver << 3 | 0x1 << 1 | 0x1 ) << 16		5686500	0		|=			
ANR	5686768	Identifier	header		5686500	0					
ANR	5686769	ShiftExpression	( 0x7 << 5 | ver << 3 | 0x1 << 1 | 0x1 ) << 16		5686500	1		<<			
ANR	5686770	InclusiveOrExpression	0x7 << 5 | ver << 3 | 0x1 << 1 | 0x1		5686500	0		|			
ANR	5686771	ShiftExpression	0x7 << 5		5686500	0		<<			
ANR	5686772	PrimaryExpression	0x7		5686500	0					
ANR	5686773	PrimaryExpression	5		5686500	1					
ANR	5686774	InclusiveOrExpression	ver << 3 | 0x1 << 1 | 0x1		5686500	1		|			
ANR	5686775	ShiftExpression	ver << 3		5686500	0		<<			
ANR	5686776	Identifier	ver		5686500	0					
ANR	5686777	PrimaryExpression	3		5686500	1					
ANR	5686778	InclusiveOrExpression	0x1 << 1 | 0x1		5686500	1		|			
ANR	5686779	ShiftExpression	0x1 << 1		5686500	0		<<			
ANR	5686780	PrimaryExpression	0x1		5686500	0					
ANR	5686781	PrimaryExpression	1		5686500	1					
ANR	5686782	PrimaryExpression	0x1		5686500	1					
ANR	5686783	PrimaryExpression	16		5686500	1					
ANR	5686784	ExpressionStatement	header |= ( srate_idx << 2 ) << 8	93:4:1776:1807	5686500	19	True				
ANR	5686785	AssignmentExpression	header |= ( srate_idx << 2 ) << 8		5686500	0		|=			
ANR	5686786	Identifier	header		5686500	0					
ANR	5686787	ShiftExpression	( srate_idx << 2 ) << 8		5686500	1		<<			
ANR	5686788	ShiftExpression	srate_idx << 2		5686500	0		<<			
ANR	5686789	Identifier	srate_idx		5686500	0					
ANR	5686790	PrimaryExpression	2		5686500	1					
ANR	5686791	PrimaryExpression	8		5686500	1					
ANR	5686792	ExpressionStatement	header |= channels << 6	95:4:1814:1837	5686500	20	True				
ANR	5686793	AssignmentExpression	header |= channels << 6		5686500	0		|=			
ANR	5686794	Identifier	header		5686500	0					
ANR	5686795	ShiftExpression	channels << 6		5686500	1		<<			
ANR	5686796	Identifier	channels		5686500	0					
ANR	5686797	PrimaryExpression	6		5686500	1					
ANR	5686798	ForStatement	for ( bitrate_idx = 1 ; bitrate_idx < 15 ; bitrate_idx ++ )		5686500	21					
ANR	5686799	ForInit	bitrate_idx = 1 ;	99:9:1851:1866	5686500	0	True				
ANR	5686800	AssignmentExpression	bitrate_idx = 1		5686500	0		=			
ANR	5686801	Identifier	bitrate_idx		5686500	0					
ANR	5686802	PrimaryExpression	1		5686500	1					
ANR	5686803	Condition	bitrate_idx < 15	99:26:1868:1883	5686500	1	True				
ANR	5686804	RelationalExpression	bitrate_idx < 15		5686500	0		<			
ANR	5686805	Identifier	bitrate_idx		5686500	0					
ANR	5686806	PrimaryExpression	15		5686500	1					
ANR	5686807	PostIncDecOperationExpression	bitrate_idx ++	99:44:1886:1898	5686500	2	True				
ANR	5686808	Identifier	bitrate_idx		5686500	0					
ANR	5686809	IncDec	++		5686500	1					
ANR	5686810	CompoundStatement		101:8:1949:1997	5686500	3					
ANR	5686811	IdentifierDeclStatement	int bit_rate = 1000 * avpriv_mpa_bitrate_tab [ ver != 3 ] [ 3 - 1 ] [ bitrate_idx ] ;	101:8:1912:1986	5686500	0	True				
ANR	5686812	IdentifierDecl	bit_rate = 1000 * avpriv_mpa_bitrate_tab [ ver != 3 ] [ 3 - 1 ] [ bitrate_idx ]		5686500	0					
ANR	5686813	IdentifierDeclType	int		5686500	0					
ANR	5686814	Identifier	bit_rate		5686500	1					
ANR	5686815	AssignmentExpression	bit_rate = 1000 * avpriv_mpa_bitrate_tab [ ver != 3 ] [ 3 - 1 ] [ bitrate_idx ]		5686500	2		=			
ANR	5686816	Identifier	bit_rate		5686500	0					
ANR	5686817	MultiplicativeExpression	1000 * avpriv_mpa_bitrate_tab [ ver != 3 ] [ 3 - 1 ] [ bitrate_idx ]		5686500	1		*			
ANR	5686818	PrimaryExpression	1000		5686500	0					
ANR	5686819	ArrayIndexing	avpriv_mpa_bitrate_tab [ ver != 3 ] [ 3 - 1 ] [ bitrate_idx ]		5686500	1					
ANR	5686820	ArrayIndexing	avpriv_mpa_bitrate_tab [ ver != 3 ] [ 3 - 1 ]		5686500	0					
ANR	5686821	ArrayIndexing	avpriv_mpa_bitrate_tab [ ver != 3 ]		5686500	0					
ANR	5686822	Identifier	avpriv_mpa_bitrate_tab		5686500	0					
ANR	5686823	EqualityExpression	ver != 3		5686500	1		!=			
ANR	5686824	Identifier	ver		5686500	0					
ANR	5686825	PrimaryExpression	3		5686500	1					
ANR	5686826	AdditiveExpression	3 - 1		5686500	1		-			
ANR	5686827	PrimaryExpression	3		5686500	0					
ANR	5686828	PrimaryExpression	1		5686500	1					
ANR	5686829	Identifier	bitrate_idx		5686500	1					
ANR	5686830	IdentifierDeclStatement	int error = FFABS ( bit_rate - codec -> bit_rate ) ;	103:8:1997:2045	5686500	1	True				
ANR	5686831	IdentifierDecl	error = FFABS ( bit_rate - codec -> bit_rate )		5686500	0					
ANR	5686832	IdentifierDeclType	int		5686500	0					
ANR	5686833	Identifier	error		5686500	1					
ANR	5686834	AssignmentExpression	error = FFABS ( bit_rate - codec -> bit_rate )		5686500	2		=			
ANR	5686835	Identifier	error		5686500	0					
ANR	5686836	CallExpression	FFABS ( bit_rate - codec -> bit_rate )		5686500	1					
ANR	5686837	Callee	FFABS		5686500	0					
ANR	5686838	Identifier	FFABS		5686500	0					
ANR	5686839	ArgumentList	bit_rate - codec -> bit_rate		5686500	1					
ANR	5686840	Argument	bit_rate - codec -> bit_rate		5686500	0					
ANR	5686841	AdditiveExpression	bit_rate - codec -> bit_rate		5686500	0		-			
ANR	5686842	Identifier	bit_rate		5686500	0					
ANR	5686843	PtrMemberAccess	codec -> bit_rate		5686500	1					
ANR	5686844	Identifier	codec		5686500	0					
ANR	5686845	Identifier	bit_rate		5686500	1					
ANR	5686846	IfStatement	if ( error < best_bitrate_error )		5686500	2					
ANR	5686847	Condition	error < best_bitrate_error	107:12:2062:2087	5686500	0	True				
ANR	5686848	RelationalExpression	error < best_bitrate_error		5686500	0		<			
ANR	5686849	Identifier	error		5686500	0					
ANR	5686850	Identifier	best_bitrate_error		5686500	1					
ANR	5686851	CompoundStatement		105:40:2042:2042	5686500	1					
ANR	5686852	ExpressionStatement	best_bitrate_error = error	109:12:2105:2131	5686500	0	True				
ANR	5686853	AssignmentExpression	best_bitrate_error = error		5686500	0		=			
ANR	5686854	Identifier	best_bitrate_error		5686500	0					
ANR	5686855	Identifier	error		5686500	1					
ANR	5686856	ExpressionStatement	best_bitrate_idx = bitrate_idx	111:12:2146:2178	5686500	1	True				
ANR	5686857	AssignmentExpression	best_bitrate_idx = bitrate_idx		5686500	0		=			
ANR	5686858	Identifier	best_bitrate_idx		5686500	0					
ANR	5686859	Identifier	bitrate_idx		5686500	1					
ANR	5686860	ExpressionStatement	av_assert0 ( best_bitrate_idx >= 0 )	117:4:2203:2236	5686500	22	True				
ANR	5686861	CallExpression	av_assert0 ( best_bitrate_idx >= 0 )		5686500	0					
ANR	5686862	Callee	av_assert0		5686500	0					
ANR	5686863	Identifier	av_assert0		5686500	0					
ANR	5686864	ArgumentList	best_bitrate_idx >= 0		5686500	1					
ANR	5686865	Argument	best_bitrate_idx >= 0		5686500	0					
ANR	5686866	RelationalExpression	best_bitrate_idx >= 0		5686500	0		>=			
ANR	5686867	Identifier	best_bitrate_idx		5686500	0					
ANR	5686868	PrimaryExpression	0		5686500	1					
ANR	5686869	ForStatement	for ( bitrate_idx = best_bitrate_idx ; ; bitrate_idx ++ )		5686500	23					
ANR	5686870	ForInit	bitrate_idx = best_bitrate_idx ;	121:9:2250:2280	5686500	0	True				
ANR	5686871	AssignmentExpression	bitrate_idx = best_bitrate_idx		5686500	0		=			
ANR	5686872	Identifier	bitrate_idx		5686500	0					
ANR	5686873	Identifier	best_bitrate_idx		5686500	1					
ANR	5686874	PostIncDecOperationExpression	bitrate_idx ++	121:43:2284:2296	5686500	1	True				
ANR	5686875	Identifier	bitrate_idx		5686500	0					
ANR	5686876	IncDec	++		5686500	1					
ANR	5686877	CompoundStatement		121:8:2262:2299	5686500	2					
ANR	5686878	IdentifierDeclStatement	int32_t mask = bitrate_idx << ( 4 + 8 ) ;	123:8:2310:2347	5686500	0	True				
ANR	5686879	IdentifierDecl	mask = bitrate_idx << ( 4 + 8 )		5686500	0					
ANR	5686880	IdentifierDeclType	int32_t		5686500	0					
ANR	5686881	Identifier	mask		5686500	1					
ANR	5686882	AssignmentExpression	mask = bitrate_idx << ( 4 + 8 )		5686500	2		=			
ANR	5686883	Identifier	mask		5686500	0					
ANR	5686884	ShiftExpression	bitrate_idx << ( 4 + 8 )		5686500	1		<<			
ANR	5686885	Identifier	bitrate_idx		5686500	0					
ANR	5686886	AdditiveExpression	4 + 8		5686500	1		+			
ANR	5686887	PrimaryExpression	4		5686500	0					
ANR	5686888	PrimaryExpression	8		5686500	1					
ANR	5686889	IfStatement	if ( 15 == bitrate_idx )		5686500	1					
ANR	5686890	Condition	15 == bitrate_idx	125:12:2362:2378	5686500	0	True				
ANR	5686891	EqualityExpression	15 == bitrate_idx		5686500	0		==			
ANR	5686892	PrimaryExpression	15		5686500	0					
ANR	5686893	Identifier	bitrate_idx		5686500	1					
ANR	5686894	ReturnStatement	return - 1 ;	127:12:2394:2403	5686500	1	True				
ANR	5686895	UnaryOperationExpression	- 1		5686500	0					
ANR	5686896	UnaryOperator	-		5686500	0					
ANR	5686897	PrimaryExpression	1		5686500	1					
ANR	5686898	ExpressionStatement	header |= mask	129:8:2414:2428	5686500	2	True				
ANR	5686899	AssignmentExpression	header |= mask		5686500	0		|=			
ANR	5686900	Identifier	header		5686500	0					
ANR	5686901	Identifier	mask		5686500	1					
ANR	5686902	ExpressionStatement	"avpriv_mpegaudio_decode_header ( & mpah , header )"	133:8:2441:2486	5686500	3	True				
ANR	5686903	CallExpression	"avpriv_mpegaudio_decode_header ( & mpah , header )"		5686500	0					
ANR	5686904	Callee	avpriv_mpegaudio_decode_header		5686500	0					
ANR	5686905	Identifier	avpriv_mpegaudio_decode_header		5686500	0					
ANR	5686906	ArgumentList	& mpah		5686500	1					
ANR	5686907	Argument	& mpah		5686500	0					
ANR	5686908	UnaryOperationExpression	& mpah		5686500	0					
ANR	5686909	UnaryOperator	&		5686500	0					
ANR	5686910	Identifier	mpah		5686500	1					
ANR	5686911	Argument	header		5686500	1					
ANR	5686912	Identifier	header		5686500	0					
ANR	5686913	ExpressionStatement	mp3 -> xing_offset = xing_offtbl [ mpah . lsf == 1 ] [ mpah . nb_channels == 1 ] + 4	135:8:2497:2569	5686500	4	True				
ANR	5686914	AssignmentExpression	mp3 -> xing_offset = xing_offtbl [ mpah . lsf == 1 ] [ mpah . nb_channels == 1 ] + 4		5686500	0		=			
ANR	5686915	PtrMemberAccess	mp3 -> xing_offset		5686500	0					
ANR	5686916	Identifier	mp3		5686500	0					
ANR	5686917	Identifier	xing_offset		5686500	1					
ANR	5686918	AdditiveExpression	xing_offtbl [ mpah . lsf == 1 ] [ mpah . nb_channels == 1 ] + 4		5686500	1		+			
ANR	5686919	ArrayIndexing	xing_offtbl [ mpah . lsf == 1 ] [ mpah . nb_channels == 1 ]		5686500	0					
ANR	5686920	ArrayIndexing	xing_offtbl [ mpah . lsf == 1 ]		5686500	0					
ANR	5686921	Identifier	xing_offtbl		5686500	0					
ANR	5686922	EqualityExpression	mpah . lsf == 1		5686500	1		==			
ANR	5686923	MemberAccess	mpah . lsf		5686500	0					
ANR	5686924	Identifier	mpah		5686500	0					
ANR	5686925	Identifier	lsf		5686500	1					
ANR	5686926	PrimaryExpression	1		5686500	1					
ANR	5686927	EqualityExpression	mpah . nb_channels == 1		5686500	1		==			
ANR	5686928	MemberAccess	mpah . nb_channels		5686500	0					
ANR	5686929	Identifier	mpah		5686500	0					
ANR	5686930	Identifier	nb_channels		5686500	1					
ANR	5686931	PrimaryExpression	1		5686500	1					
ANR	5686932	PrimaryExpression	4		5686500	1					
ANR	5686933	ExpressionStatement	bytes_needed = mp3 -> xing_offset + XING_SIZE	137:8:2580:2627	5686500	5	True				
ANR	5686934	AssignmentExpression	bytes_needed = mp3 -> xing_offset + XING_SIZE		5686500	0		=			
ANR	5686935	Identifier	bytes_needed		5686500	0					
ANR	5686936	AdditiveExpression	mp3 -> xing_offset + XING_SIZE		5686500	1		+			
ANR	5686937	PtrMemberAccess	mp3 -> xing_offset		5686500	0					
ANR	5686938	Identifier	mp3		5686500	0					
ANR	5686939	Identifier	xing_offset		5686500	1					
ANR	5686940	Identifier	XING_SIZE		5686500	1					
ANR	5686941	IfStatement	if ( bytes_needed <= mpah . frame_size )		5686500	6					
ANR	5686942	Condition	bytes_needed <= mpah . frame_size	141:12:2644:2674	5686500	0	True				
ANR	5686943	RelationalExpression	bytes_needed <= mpah . frame_size		5686500	0		<=			
ANR	5686944	Identifier	bytes_needed		5686500	0					
ANR	5686945	MemberAccess	mpah . frame_size		5686500	1					
ANR	5686946	Identifier	mpah		5686500	0					
ANR	5686947	Identifier	frame_size		5686500	1					
ANR	5686948	BreakStatement	break ;	143:12:2690:2695	5686500	1	True				
ANR	5686949	ExpressionStatement	header &= ~mask	147:8:2708:2723	5686500	7	True				
ANR	5686950	AssignmentExpression	header &= ~mask		5686500	0		&=			
ANR	5686951	Identifier	header		5686500	0					
ANR	5686952	Identifier	~mask		5686500	1					
ANR	5686953	ExpressionStatement	ret = avio_open_dyn_buf ( & dyn_ctx )	153:4:2739:2772	5686500	24	True				
ANR	5686954	AssignmentExpression	ret = avio_open_dyn_buf ( & dyn_ctx )		5686500	0		=			
ANR	5686955	Identifier	ret		5686500	0					
ANR	5686956	CallExpression	avio_open_dyn_buf ( & dyn_ctx )		5686500	1					
ANR	5686957	Callee	avio_open_dyn_buf		5686500	0					
ANR	5686958	Identifier	avio_open_dyn_buf		5686500	0					
ANR	5686959	ArgumentList	& dyn_ctx		5686500	1					
ANR	5686960	Argument	& dyn_ctx		5686500	0					
ANR	5686961	UnaryOperationExpression	& dyn_ctx		5686500	0					
ANR	5686962	UnaryOperator	&		5686500	0					
ANR	5686963	Identifier	dyn_ctx		5686500	1					
ANR	5686964	IfStatement	if ( ret < 0 )		5686500	25					
ANR	5686965	Condition	ret < 0	155:8:2783:2789	5686500	0	True				
ANR	5686966	RelationalExpression	ret < 0		5686500	0		<			
ANR	5686967	Identifier	ret		5686500	0					
ANR	5686968	PrimaryExpression	0		5686500	1					
ANR	5686969	ReturnStatement	return ret ;	157:8:2801:2811	5686500	1	True				
ANR	5686970	Identifier	ret		5686500	0					
ANR	5686971	ExpressionStatement	"avio_wb32 ( dyn_ctx , header )"	161:4:2820:2846	5686500	26	True				
ANR	5686972	CallExpression	"avio_wb32 ( dyn_ctx , header )"		5686500	0					
ANR	5686973	Callee	avio_wb32		5686500	0					
ANR	5686974	Identifier	avio_wb32		5686500	0					
ANR	5686975	ArgumentList	dyn_ctx		5686500	1					
ANR	5686976	Argument	dyn_ctx		5686500	0					
ANR	5686977	Identifier	dyn_ctx		5686500	0					
ANR	5686978	Argument	header		5686500	1					
ANR	5686979	Identifier	header		5686500	0					
ANR	5686980	ExpressionStatement	"ffio_fill ( dyn_ctx , 0 , mp3 -> xing_offset - 4 )"	165:4:2855:2898	5686500	27	True				
ANR	5686981	CallExpression	"ffio_fill ( dyn_ctx , 0 , mp3 -> xing_offset - 4 )"		5686500	0					
ANR	5686982	Callee	ffio_fill		5686500	0					
ANR	5686983	Identifier	ffio_fill		5686500	0					
ANR	5686984	ArgumentList	dyn_ctx		5686500	1					
ANR	5686985	Argument	dyn_ctx		5686500	0					
ANR	5686986	Identifier	dyn_ctx		5686500	0					
ANR	5686987	Argument	0		5686500	1					
ANR	5686988	PrimaryExpression	0		5686500	0					
ANR	5686989	Argument	mp3 -> xing_offset - 4		5686500	2					
ANR	5686990	AdditiveExpression	mp3 -> xing_offset - 4		5686500	0		-			
ANR	5686991	PtrMemberAccess	mp3 -> xing_offset		5686500	0					
ANR	5686992	Identifier	mp3		5686500	0					
ANR	5686993	Identifier	xing_offset		5686500	1					
ANR	5686994	PrimaryExpression	4		5686500	1					
ANR	5686995	ExpressionStatement	"ffio_wfourcc ( dyn_ctx , ""Xing"" )"	167:4:2905:2934	5686500	28	True				
ANR	5686996	CallExpression	"ffio_wfourcc ( dyn_ctx , ""Xing"" )"		5686500	0					
ANR	5686997	Callee	ffio_wfourcc		5686500	0					
ANR	5686998	Identifier	ffio_wfourcc		5686500	0					
ANR	5686999	ArgumentList	dyn_ctx		5686500	1					
ANR	5687000	Argument	dyn_ctx		5686500	0					
ANR	5687001	Identifier	dyn_ctx		5686500	0					
ANR	5687002	Argument	"""Xing"""		5686500	1					
ANR	5687003	PrimaryExpression	"""Xing"""		5686500	0					
ANR	5687004	ExpressionStatement	"avio_wb32 ( dyn_ctx , 0x01 | 0x02 | 0x04 | 0x08 )"	169:4:2941:2986	5686500	29	True				
ANR	5687005	CallExpression	"avio_wb32 ( dyn_ctx , 0x01 | 0x02 | 0x04 | 0x08 )"		5686500	0					
ANR	5687006	Callee	avio_wb32		5686500	0					
ANR	5687007	Identifier	avio_wb32		5686500	0					
ANR	5687008	ArgumentList	dyn_ctx		5686500	1					
ANR	5687009	Argument	dyn_ctx		5686500	0					
ANR	5687010	Identifier	dyn_ctx		5686500	0					
ANR	5687011	Argument	0x01 | 0x02 | 0x04 | 0x08		5686500	1					
ANR	5687012	InclusiveOrExpression	0x01 | 0x02 | 0x04 | 0x08		5686500	0		|			
ANR	5687013	PrimaryExpression	0x01		5686500	0					
ANR	5687014	InclusiveOrExpression	0x02 | 0x04 | 0x08		5686500	1		|			
ANR	5687015	PrimaryExpression	0x02		5686500	0					
ANR	5687016	InclusiveOrExpression	0x04 | 0x08		5686500	1		|			
ANR	5687017	PrimaryExpression	0x04		5686500	0					
ANR	5687018	PrimaryExpression	0x08		5686500	1					
ANR	5687019	ExpressionStatement	mp3 -> size = mpah . frame_size	173:4:3031:3058	5686500	30	True				
ANR	5687020	AssignmentExpression	mp3 -> size = mpah . frame_size		5686500	0		=			
ANR	5687021	PtrMemberAccess	mp3 -> size		5686500	0					
ANR	5687022	Identifier	mp3		5686500	0					
ANR	5687023	Identifier	size		5686500	1					
ANR	5687024	MemberAccess	mpah . frame_size		5686500	1					
ANR	5687025	Identifier	mpah		5686500	0					
ANR	5687026	Identifier	frame_size		5686500	1					
ANR	5687027	ExpressionStatement	mp3 -> want = 1	175:4:3065:3076	5686500	31	True				
ANR	5687028	AssignmentExpression	mp3 -> want = 1		5686500	0		=			
ANR	5687029	PtrMemberAccess	mp3 -> want		5686500	0					
ANR	5687030	Identifier	mp3		5686500	0					
ANR	5687031	Identifier	want		5686500	1					
ANR	5687032	PrimaryExpression	1		5686500	1					
ANR	5687033	ExpressionStatement	mp3 -> seen = 0	177:4:3083:3094	5686500	32	True				
ANR	5687034	AssignmentExpression	mp3 -> seen = 0		5686500	0		=			
ANR	5687035	PtrMemberAccess	mp3 -> seen		5686500	0					
ANR	5687036	Identifier	mp3		5686500	0					
ANR	5687037	Identifier	seen		5686500	1					
ANR	5687038	PrimaryExpression	0		5686500	1					
ANR	5687039	ExpressionStatement	mp3 -> pos = 0	179:4:3101:3111	5686500	33	True				
ANR	5687040	AssignmentExpression	mp3 -> pos = 0		5686500	0		=			
ANR	5687041	PtrMemberAccess	mp3 -> pos		5686500	0					
ANR	5687042	Identifier	mp3		5686500	0					
ANR	5687043	Identifier	pos		5686500	1					
ANR	5687044	PrimaryExpression	0		5686500	1					
ANR	5687045	ExpressionStatement	"avio_wb32 ( dyn_ctx , 0 )"	183:4:3120:3141	5686500	34	True				
ANR	5687046	CallExpression	"avio_wb32 ( dyn_ctx , 0 )"		5686500	0					
ANR	5687047	Callee	avio_wb32		5686500	0					
ANR	5687048	Identifier	avio_wb32		5686500	0					
ANR	5687049	ArgumentList	dyn_ctx		5686500	1					
ANR	5687050	Argument	dyn_ctx		5686500	0					
ANR	5687051	Identifier	dyn_ctx		5686500	0					
ANR	5687052	Argument	0		5686500	1					
ANR	5687053	PrimaryExpression	0		5686500	0					
ANR	5687054	ExpressionStatement	"avio_wb32 ( dyn_ctx , 0 )"	185:4:3159:3180	5686500	35	True				
ANR	5687055	CallExpression	"avio_wb32 ( dyn_ctx , 0 )"		5686500	0					
ANR	5687056	Callee	avio_wb32		5686500	0					
ANR	5687057	Identifier	avio_wb32		5686500	0					
ANR	5687058	ArgumentList	dyn_ctx		5686500	1					
ANR	5687059	Argument	dyn_ctx		5686500	0					
ANR	5687060	Identifier	dyn_ctx		5686500	0					
ANR	5687061	Argument	0		5686500	1					
ANR	5687062	PrimaryExpression	0		5686500	0					
ANR	5687063	ForStatement	for ( i = 0 ; i < XING_TOC_SIZE ; i ++ )		5686500	36					
ANR	5687064	ForInit	i = 0 ;	191:9:3215:3220	5686500	0	True				
ANR	5687065	AssignmentExpression	i = 0		5686500	0		=			
ANR	5687066	Identifier	i		5686500	0					
ANR	5687067	PrimaryExpression	0		5686500	1					
ANR	5687068	Condition	i < XING_TOC_SIZE	191:16:3222:3238	5686500	1	True				
ANR	5687069	RelationalExpression	i < XING_TOC_SIZE		5686500	0		<			
ANR	5687070	Identifier	i		5686500	0					
ANR	5687071	Identifier	XING_TOC_SIZE		5686500	1					
ANR	5687072	PostIncDecOperationExpression	i ++	191:35:3241:3243	5686500	2	True				
ANR	5687073	Identifier	i		5686500	0					
ANR	5687074	IncDec	++		5686500	1					
ANR	5687075	ExpressionStatement	"avio_w8 ( dyn_ctx , ( uint8_t ) ( 255 * i / XING_TOC_SIZE ) )"	193:8:3255:3307	5686500	3	True				
ANR	5687076	CallExpression	"avio_w8 ( dyn_ctx , ( uint8_t ) ( 255 * i / XING_TOC_SIZE ) )"		5686500	0					
ANR	5687077	Callee	avio_w8		5686500	0					
ANR	5687078	Identifier	avio_w8		5686500	0					
ANR	5687079	ArgumentList	dyn_ctx		5686500	1					
ANR	5687080	Argument	dyn_ctx		5686500	0					
ANR	5687081	Identifier	dyn_ctx		5686500	0					
ANR	5687082	Argument	( uint8_t ) ( 255 * i / XING_TOC_SIZE )		5686500	1					
ANR	5687083	CastExpression	( uint8_t ) ( 255 * i / XING_TOC_SIZE )		5686500	0					
ANR	5687084	CastTarget	uint8_t		5686500	0					
ANR	5687085	MultiplicativeExpression	255 * i / XING_TOC_SIZE		5686500	1		*			
ANR	5687086	PrimaryExpression	255		5686500	0					
ANR	5687087	MultiplicativeExpression	i / XING_TOC_SIZE		5686500	1		/			
ANR	5687088	Identifier	i		5686500	0					
ANR	5687089	Identifier	XING_TOC_SIZE		5686500	1					
ANR	5687090	ExpressionStatement	"avio_wb32 ( dyn_ctx , 0 )"	201:4:3416:3437	5686500	37	True				
ANR	5687091	CallExpression	"avio_wb32 ( dyn_ctx , 0 )"		5686500	0					
ANR	5687092	Callee	avio_wb32		5686500	0					
ANR	5687093	Identifier	avio_wb32		5686500	0					
ANR	5687094	ArgumentList	dyn_ctx		5686500	1					
ANR	5687095	Argument	dyn_ctx		5686500	0					
ANR	5687096	Identifier	dyn_ctx		5686500	0					
ANR	5687097	Argument	0		5686500	1					
ANR	5687098	PrimaryExpression	0		5686500	0					
ANR	5687099	IfStatement	if ( enc )		5686500	38					
ANR	5687100	Condition	enc	207:8:3487:3489	5686500	0	True				
ANR	5687101	Identifier	enc		5686500	0					
ANR	5687102	CompoundStatement		207:8:3455:3485	5686500	1					
ANR	5687103	IdentifierDeclStatement	uint8_t encoder_str [ 9 ] = { 0 } ;	209:8:3503:3533	5686500	0	True				
ANR	5687104	IdentifierDecl	encoder_str [ 9 ] = { 0 }		5686500	0					
ANR	5687105	IdentifierDeclType	uint8_t [ 9 ]		5686500	0					
ANR	5687106	Identifier	encoder_str		5686500	1					
ANR	5687107	PrimaryExpression	9		5686500	2					
ANR	5687108	AssignmentExpression	encoder_str [ 9 ] = { 0 }		5686500	3		=			
ANR	5687109	Identifier	encoder_str		5686500	0					
ANR	5687110	InitializerList	0		5686500	1					
ANR	5687111	PrimaryExpression	0		5686500	0					
ANR	5687112	IfStatement	"if ( strlen ( enc -> value ) > sizeof ( encoder_str ) && ! strcmp ( ""Lavc libmp3lame"" , enc -> value ) )"		5686500	1					
ANR	5687113	Condition	"strlen ( enc -> value ) > sizeof ( encoder_str ) && ! strcmp ( ""Lavc libmp3lame"" , enc -> value )"	211:15:3551:3645	5686500	0	True				
ANR	5687114	AndExpression	"strlen ( enc -> value ) > sizeof ( encoder_str ) && ! strcmp ( ""Lavc libmp3lame"" , enc -> value )"		5686500	0		&&			
ANR	5687115	RelationalExpression	strlen ( enc -> value ) > sizeof ( encoder_str )		5686500	0		>			
ANR	5687116	CallExpression	strlen ( enc -> value )		5686500	0					
ANR	5687117	Callee	strlen		5686500	0					
ANR	5687118	Identifier	strlen		5686500	0					
ANR	5687119	ArgumentList	enc -> value		5686500	1					
ANR	5687120	Argument	enc -> value		5686500	0					
ANR	5687121	PtrMemberAccess	enc -> value		5686500	0					
ANR	5687122	Identifier	enc		5686500	0					
ANR	5687123	Identifier	value		5686500	1					
ANR	5687124	SizeofExpression	sizeof ( encoder_str )		5686500	1					
ANR	5687125	Sizeof	sizeof		5686500	0					
ANR	5687126	SizeofOperand	encoder_str		5686500	1					
ANR	5687127	UnaryOperationExpression	"! strcmp ( ""Lavc libmp3lame"" , enc -> value )"		5686500	1					
ANR	5687128	UnaryOperator	!		5686500	0					
ANR	5687129	CallExpression	"strcmp ( ""Lavc libmp3lame"" , enc -> value )"		5686500	1					
ANR	5687130	Callee	strcmp		5686500	0					
ANR	5687131	Identifier	strcmp		5686500	0					
ANR	5687132	ArgumentList	"""Lavc libmp3lame"""		5686500	1					
ANR	5687133	Argument	"""Lavc libmp3lame"""		5686500	0					
ANR	5687134	PrimaryExpression	"""Lavc libmp3lame"""		5686500	0					
ANR	5687135	Argument	enc -> value		5686500	1					
ANR	5687136	PtrMemberAccess	enc -> value		5686500	0					
ANR	5687137	Identifier	enc		5686500	0					
ANR	5687138	Identifier	value		5686500	1					
ANR	5687139	CompoundStatement		211:55:3600:3600	5686500	1					
ANR	5687140	ExpressionStatement	"memcpy ( encoder_str , ""Lavf lame"" , 9 )"	215:12:3663:3698	5686500	0	True				
ANR	5687141	CallExpression	"memcpy ( encoder_str , ""Lavf lame"" , 9 )"		5686500	0					
ANR	5687142	Callee	memcpy		5686500	0					
ANR	5687143	Identifier	memcpy		5686500	0					
ANR	5687144	ArgumentList	encoder_str		5686500	1					
ANR	5687145	Argument	encoder_str		5686500	0					
ANR	5687146	Identifier	encoder_str		5686500	0					
ANR	5687147	Argument	"""Lavf lame"""		5686500	1					
ANR	5687148	PrimaryExpression	"""Lavf lame"""		5686500	0					
ANR	5687149	Argument	9		5686500	2					
ANR	5687150	PrimaryExpression	9		5686500	0					
ANR	5687151	ElseStatement	else		5686500	0					
ANR	5687152	ExpressionStatement	"memcpy ( encoder_str , enc -> value , FFMIN ( strlen ( enc -> value ) , sizeof ( encoder_str ) ) )"	219:12:3729:3808	5686500	0	True				
ANR	5687153	CallExpression	"memcpy ( encoder_str , enc -> value , FFMIN ( strlen ( enc -> value ) , sizeof ( encoder_str ) ) )"		5686500	0					
ANR	5687154	Callee	memcpy		5686500	0					
ANR	5687155	Identifier	memcpy		5686500	0					
ANR	5687156	ArgumentList	encoder_str		5686500	1					
ANR	5687157	Argument	encoder_str		5686500	0					
ANR	5687158	Identifier	encoder_str		5686500	0					
ANR	5687159	Argument	enc -> value		5686500	1					
ANR	5687160	PtrMemberAccess	enc -> value		5686500	0					
ANR	5687161	Identifier	enc		5686500	0					
ANR	5687162	Identifier	value		5686500	1					
ANR	5687163	Argument	"FFMIN ( strlen ( enc -> value ) , sizeof ( encoder_str ) )"		5686500	2					
ANR	5687164	CallExpression	"FFMIN ( strlen ( enc -> value ) , sizeof ( encoder_str ) )"		5686500	0					
ANR	5687165	Callee	FFMIN		5686500	0					
ANR	5687166	Identifier	FFMIN		5686500	0					
ANR	5687167	ArgumentList	strlen ( enc -> value )		5686500	1					
ANR	5687168	Argument	strlen ( enc -> value )		5686500	0					
ANR	5687169	CallExpression	strlen ( enc -> value )		5686500	0					
ANR	5687170	Callee	strlen		5686500	0					
ANR	5687171	Identifier	strlen		5686500	0					
ANR	5687172	ArgumentList	enc -> value		5686500	1					
ANR	5687173	Argument	enc -> value		5686500	0					
ANR	5687174	PtrMemberAccess	enc -> value		5686500	0					
ANR	5687175	Identifier	enc		5686500	0					
ANR	5687176	Identifier	value		5686500	1					
ANR	5687177	Argument	sizeof ( encoder_str )		5686500	1					
ANR	5687178	SizeofExpression	sizeof ( encoder_str )		5686500	0					
ANR	5687179	Sizeof	sizeof		5686500	0					
ANR	5687180	SizeofOperand	encoder_str		5686500	1					
ANR	5687181	ExpressionStatement	"avio_write ( dyn_ctx , encoder_str , sizeof ( encoder_str ) )"	223:8:3821:3874	5686500	2	True				
ANR	5687182	CallExpression	"avio_write ( dyn_ctx , encoder_str , sizeof ( encoder_str ) )"		5686500	0					
ANR	5687183	Callee	avio_write		5686500	0					
ANR	5687184	Identifier	avio_write		5686500	0					
ANR	5687185	ArgumentList	dyn_ctx		5686500	1					
ANR	5687186	Argument	dyn_ctx		5686500	0					
ANR	5687187	Identifier	dyn_ctx		5686500	0					
ANR	5687188	Argument	encoder_str		5686500	1					
ANR	5687189	Identifier	encoder_str		5686500	0					
ANR	5687190	Argument	sizeof ( encoder_str )		5686500	2					
ANR	5687191	SizeofExpression	sizeof ( encoder_str )		5686500	0					
ANR	5687192	Sizeof	sizeof		5686500	0					
ANR	5687193	SizeofOperand	encoder_str		5686500	1					
ANR	5687194	ElseStatement	else		5686500	0					
ANR	5687195	ExpressionStatement	"avio_write ( dyn_ctx , ""Lavf\\0\\0\\0\\0\\0"" , 9 )"	227:8:3897:3937	5686500	0	True				
ANR	5687196	CallExpression	"avio_write ( dyn_ctx , ""Lavf\\0\\0\\0\\0\\0"" , 9 )"		5686500	0					
ANR	5687197	Callee	avio_write		5686500	0					
ANR	5687198	Identifier	avio_write		5686500	0					
ANR	5687199	ArgumentList	dyn_ctx		5686500	1					
ANR	5687200	Argument	dyn_ctx		5686500	0					
ANR	5687201	Identifier	dyn_ctx		5686500	0					
ANR	5687202	Argument	"""Lavf\\0\\0\\0\\0\\0"""		5686500	1					
ANR	5687203	PrimaryExpression	"""Lavf\\0\\0\\0\\0\\0"""		5686500	0					
ANR	5687204	Argument	9		5686500	2					
ANR	5687205	PrimaryExpression	9		5686500	0					
ANR	5687206	ExpressionStatement	"avio_w8 ( dyn_ctx , 0 )"	231:4:3946:3965	5686500	39	True				
ANR	5687207	CallExpression	"avio_w8 ( dyn_ctx , 0 )"		5686500	0					
ANR	5687208	Callee	avio_w8		5686500	0					
ANR	5687209	Identifier	avio_w8		5686500	0					
ANR	5687210	ArgumentList	dyn_ctx		5686500	1					
ANR	5687211	Argument	dyn_ctx		5686500	0					
ANR	5687212	Identifier	dyn_ctx		5686500	0					
ANR	5687213	Argument	0		5686500	1					
ANR	5687214	PrimaryExpression	0		5686500	0					
ANR	5687215	ExpressionStatement	"avio_w8 ( dyn_ctx , 0 )"	233:4:4016:4035	5686500	40	True				
ANR	5687216	CallExpression	"avio_w8 ( dyn_ctx , 0 )"		5686500	0					
ANR	5687217	Callee	avio_w8		5686500	0					
ANR	5687218	Identifier	avio_w8		5686500	0					
ANR	5687219	ArgumentList	dyn_ctx		5686500	1					
ANR	5687220	Argument	dyn_ctx		5686500	0					
ANR	5687221	Identifier	dyn_ctx		5686500	0					
ANR	5687222	Argument	0		5686500	1					
ANR	5687223	PrimaryExpression	0		5686500	0					
ANR	5687224	ExpressionStatement	"ffio_fill ( dyn_ctx , 0 , 8 )"	235:4:4079:4103	5686500	41	True				
ANR	5687225	CallExpression	"ffio_fill ( dyn_ctx , 0 , 8 )"		5686500	0					
ANR	5687226	Callee	ffio_fill		5686500	0					
ANR	5687227	Identifier	ffio_fill		5686500	0					
ANR	5687228	ArgumentList	dyn_ctx		5686500	1					
ANR	5687229	Argument	dyn_ctx		5686500	0					
ANR	5687230	Identifier	dyn_ctx		5686500	0					
ANR	5687231	Argument	0		5686500	1					
ANR	5687232	PrimaryExpression	0		5686500	0					
ANR	5687233	Argument	8		5686500	2					
ANR	5687234	PrimaryExpression	8		5686500	0					
ANR	5687235	ExpressionStatement	"avio_w8 ( dyn_ctx , 0 )"	237:4:4137:4156	5686500	42	True				
ANR	5687236	CallExpression	"avio_w8 ( dyn_ctx , 0 )"		5686500	0					
ANR	5687237	Callee	avio_w8		5686500	0					
ANR	5687238	Identifier	avio_w8		5686500	0					
ANR	5687239	ArgumentList	dyn_ctx		5686500	1					
ANR	5687240	Argument	dyn_ctx		5686500	0					
ANR	5687241	Identifier	dyn_ctx		5686500	0					
ANR	5687242	Argument	0		5686500	1					
ANR	5687243	PrimaryExpression	0		5686500	0					
ANR	5687244	ExpressionStatement	"avio_w8 ( dyn_ctx , 0 )"	239:4:4194:4213	5686500	43	True				
ANR	5687245	CallExpression	"avio_w8 ( dyn_ctx , 0 )"		5686500	0					
ANR	5687246	Callee	avio_w8		5686500	0					
ANR	5687247	Identifier	avio_w8		5686500	0					
ANR	5687248	ArgumentList	dyn_ctx		5686500	1					
ANR	5687249	Argument	dyn_ctx		5686500	0					
ANR	5687250	Identifier	dyn_ctx		5686500	0					
ANR	5687251	Argument	0		5686500	1					
ANR	5687252	PrimaryExpression	0		5686500	0					
ANR	5687253	IfStatement	if ( codec -> initial_padding - 528 - 1 >= 1 << 12 )		5686500	44					
ANR	5687254	Condition	codec -> initial_padding - 528 - 1 >= 1 << 12	245:8:4284:4326	5686500	0	True				
ANR	5687255	RelationalExpression	codec -> initial_padding - 528 - 1 >= 1 << 12		5686500	0		>=			
ANR	5687256	AdditiveExpression	codec -> initial_padding - 528 - 1		5686500	0		-			
ANR	5687257	PtrMemberAccess	codec -> initial_padding		5686500	0					
ANR	5687258	Identifier	codec		5686500	0					
ANR	5687259	Identifier	initial_padding		5686500	1					
ANR	5687260	AdditiveExpression	528 - 1		5686500	1		-			
ANR	5687261	PrimaryExpression	528		5686500	0					
ANR	5687262	PrimaryExpression	1		5686500	1					
ANR	5687263	ShiftExpression	1 << 12		5686500	1		<<			
ANR	5687264	PrimaryExpression	1		5686500	0					
ANR	5687265	PrimaryExpression	12		5686500	1					
ANR	5687266	CompoundStatement		243:53:4281:4281	5686500	1					
ANR	5687267	ExpressionStatement	"av_log ( s , AV_LOG_WARNING , ""Too many samples of initial padding.\\n"" )"	247:8:4340:4407	5686500	0	True				
ANR	5687268	CallExpression	"av_log ( s , AV_LOG_WARNING , ""Too many samples of initial padding.\\n"" )"		5686500	0					
ANR	5687269	Callee	av_log		5686500	0					
ANR	5687270	Identifier	av_log		5686500	0					
ANR	5687271	ArgumentList	s		5686500	1					
ANR	5687272	Argument	s		5686500	0					
ANR	5687273	Identifier	s		5686500	0					
ANR	5687274	Argument	AV_LOG_WARNING		5686500	1					
ANR	5687275	Identifier	AV_LOG_WARNING		5686500	0					
ANR	5687276	Argument	"""Too many samples of initial padding.\\n"""		5686500	2					
ANR	5687277	PrimaryExpression	"""Too many samples of initial padding.\\n"""		5686500	0					
ANR	5687278	ExpressionStatement	"avio_wb24 ( dyn_ctx , FFMAX ( codec -> initial_padding - 528 - 1 , 0 ) << 12 )"	251:4:4421:4487	5686500	45	True				
ANR	5687279	CallExpression	"avio_wb24 ( dyn_ctx , FFMAX ( codec -> initial_padding - 528 - 1 , 0 ) << 12 )"		5686500	0					
ANR	5687280	Callee	avio_wb24		5686500	0					
ANR	5687281	Identifier	avio_wb24		5686500	0					
ANR	5687282	ArgumentList	dyn_ctx		5686500	1					
ANR	5687283	Argument	dyn_ctx		5686500	0					
ANR	5687284	Identifier	dyn_ctx		5686500	0					
ANR	5687285	Argument	"FFMAX ( codec -> initial_padding - 528 - 1 , 0 ) << 12"		5686500	1					
ANR	5687286	ShiftExpression	"FFMAX ( codec -> initial_padding - 528 - 1 , 0 ) << 12"		5686500	0		<<			
ANR	5687287	CallExpression	"FFMAX ( codec -> initial_padding - 528 - 1 , 0 )"		5686500	0					
ANR	5687288	Callee	FFMAX		5686500	0					
ANR	5687289	Identifier	FFMAX		5686500	0					
ANR	5687290	ArgumentList	codec -> initial_padding - 528 - 1		5686500	1					
ANR	5687291	Argument	codec -> initial_padding - 528 - 1		5686500	0					
ANR	5687292	AdditiveExpression	codec -> initial_padding - 528 - 1		5686500	0		-			
ANR	5687293	PtrMemberAccess	codec -> initial_padding		5686500	0					
ANR	5687294	Identifier	codec		5686500	0					
ANR	5687295	Identifier	initial_padding		5686500	1					
ANR	5687296	AdditiveExpression	528 - 1		5686500	1		-			
ANR	5687297	PrimaryExpression	528		5686500	0					
ANR	5687298	PrimaryExpression	1		5686500	1					
ANR	5687299	Argument	0		5686500	1					
ANR	5687300	PrimaryExpression	0		5686500	0					
ANR	5687301	PrimaryExpression	12		5686500	1					
ANR	5687302	ExpressionStatement	"avio_w8 ( dyn_ctx , 0 )"	255:4:4496:4517	5686500	46	True				
ANR	5687303	CallExpression	"avio_w8 ( dyn_ctx , 0 )"		5686500	0					
ANR	5687304	Callee	avio_w8		5686500	0					
ANR	5687305	Identifier	avio_w8		5686500	0					
ANR	5687306	ArgumentList	dyn_ctx		5686500	1					
ANR	5687307	Argument	dyn_ctx		5686500	0					
ANR	5687308	Identifier	dyn_ctx		5686500	0					
ANR	5687309	Argument	0		5686500	1					
ANR	5687310	PrimaryExpression	0		5686500	0					
ANR	5687311	ExpressionStatement	"avio_w8 ( dyn_ctx , 0 )"	257:4:4532:4553	5686500	47	True				
ANR	5687312	CallExpression	"avio_w8 ( dyn_ctx , 0 )"		5686500	0					
ANR	5687313	Callee	avio_w8		5686500	0					
ANR	5687314	Identifier	avio_w8		5686500	0					
ANR	5687315	ArgumentList	dyn_ctx		5686500	1					
ANR	5687316	Argument	dyn_ctx		5686500	0					
ANR	5687317	Identifier	dyn_ctx		5686500	0					
ANR	5687318	Argument	0		5686500	1					
ANR	5687319	PrimaryExpression	0		5686500	0					
ANR	5687320	ExpressionStatement	"avio_wb16 ( dyn_ctx , 0 )"	259:4:4571:4592	5686500	48	True				
ANR	5687321	CallExpression	"avio_wb16 ( dyn_ctx , 0 )"		5686500	0					
ANR	5687322	Callee	avio_wb16		5686500	0					
ANR	5687323	Identifier	avio_wb16		5686500	0					
ANR	5687324	ArgumentList	dyn_ctx		5686500	1					
ANR	5687325	Argument	dyn_ctx		5686500	0					
ANR	5687326	Identifier	dyn_ctx		5686500	0					
ANR	5687327	Argument	0		5686500	1					
ANR	5687328	PrimaryExpression	0		5686500	0					
ANR	5687329	ExpressionStatement	"avio_wb32 ( dyn_ctx , 0 )"	265:4:4665:4686	5686500	49	True				
ANR	5687330	CallExpression	"avio_wb32 ( dyn_ctx , 0 )"		5686500	0					
ANR	5687331	Callee	avio_wb32		5686500	0					
ANR	5687332	Identifier	avio_wb32		5686500	0					
ANR	5687333	ArgumentList	dyn_ctx		5686500	1					
ANR	5687334	Argument	dyn_ctx		5686500	0					
ANR	5687335	Identifier	dyn_ctx		5686500	0					
ANR	5687336	Argument	0		5686500	1					
ANR	5687337	PrimaryExpression	0		5686500	0					
ANR	5687338	ExpressionStatement	"avio_wb16 ( dyn_ctx , 0 )"	267:4:4709:4730	5686500	50	True				
ANR	5687339	CallExpression	"avio_wb16 ( dyn_ctx , 0 )"		5686500	0					
ANR	5687340	Callee	avio_wb16		5686500	0					
ANR	5687341	Identifier	avio_wb16		5686500	0					
ANR	5687342	ArgumentList	dyn_ctx		5686500	1					
ANR	5687343	Argument	dyn_ctx		5686500	0					
ANR	5687344	Identifier	dyn_ctx		5686500	0					
ANR	5687345	Argument	0		5686500	1					
ANR	5687346	PrimaryExpression	0		5686500	0					
ANR	5687347	ExpressionStatement	"avio_wb16 ( dyn_ctx , 0 )"	269:4:4750:4771	5686500	51	True				
ANR	5687348	CallExpression	"avio_wb16 ( dyn_ctx , 0 )"		5686500	0					
ANR	5687349	Callee	avio_wb16		5686500	0					
ANR	5687350	Identifier	avio_wb16		5686500	0					
ANR	5687351	ArgumentList	dyn_ctx		5686500	1					
ANR	5687352	Argument	dyn_ctx		5686500	0					
ANR	5687353	Identifier	dyn_ctx		5686500	0					
ANR	5687354	Argument	0		5686500	1					
ANR	5687355	PrimaryExpression	0		5686500	0					
ANR	5687356	ExpressionStatement	"ffio_fill ( dyn_ctx , 0 , mpah . frame_size - bytes_needed )"	273:4:4791:4844	5686500	52	True				
ANR	5687357	CallExpression	"ffio_fill ( dyn_ctx , 0 , mpah . frame_size - bytes_needed )"		5686500	0					
ANR	5687358	Callee	ffio_fill		5686500	0					
ANR	5687359	Identifier	ffio_fill		5686500	0					
ANR	5687360	ArgumentList	dyn_ctx		5686500	1					
ANR	5687361	Argument	dyn_ctx		5686500	0					
ANR	5687362	Identifier	dyn_ctx		5686500	0					
ANR	5687363	Argument	0		5686500	1					
ANR	5687364	PrimaryExpression	0		5686500	0					
ANR	5687365	Argument	mpah . frame_size - bytes_needed		5686500	2					
ANR	5687366	AdditiveExpression	mpah . frame_size - bytes_needed		5686500	0		-			
ANR	5687367	MemberAccess	mpah . frame_size		5686500	0					
ANR	5687368	Identifier	mpah		5686500	0					
ANR	5687369	Identifier	frame_size		5686500	1					
ANR	5687370	Identifier	bytes_needed		5686500	1					
ANR	5687371	ExpressionStatement	"mp3 -> xing_frame_size = avio_close_dyn_buf ( dyn_ctx , & mp3 -> xing_frame )"	277:4:4853:4923	5686500	53	True				
ANR	5687372	AssignmentExpression	"mp3 -> xing_frame_size = avio_close_dyn_buf ( dyn_ctx , & mp3 -> xing_frame )"		5686500	0		=			
ANR	5687373	PtrMemberAccess	mp3 -> xing_frame_size		5686500	0					
ANR	5687374	Identifier	mp3		5686500	0					
ANR	5687375	Identifier	xing_frame_size		5686500	1					
ANR	5687376	CallExpression	"avio_close_dyn_buf ( dyn_ctx , & mp3 -> xing_frame )"		5686500	1					
ANR	5687377	Callee	avio_close_dyn_buf		5686500	0					
ANR	5687378	Identifier	avio_close_dyn_buf		5686500	0					
ANR	5687379	ArgumentList	dyn_ctx		5686500	1					
ANR	5687380	Argument	dyn_ctx		5686500	0					
ANR	5687381	Identifier	dyn_ctx		5686500	0					
ANR	5687382	Argument	& mp3 -> xing_frame		5686500	1					
ANR	5687383	UnaryOperationExpression	& mp3 -> xing_frame		5686500	0					
ANR	5687384	UnaryOperator	&		5686500	0					
ANR	5687385	PtrMemberAccess	mp3 -> xing_frame		5686500	1					
ANR	5687386	Identifier	mp3		5686500	0					
ANR	5687387	Identifier	xing_frame		5686500	1					
ANR	5687388	ExpressionStatement	mp3 -> xing_frame_offset = avio_tell ( s -> pb )	279:4:4930:4971	5686500	54	True				
ANR	5687389	AssignmentExpression	mp3 -> xing_frame_offset = avio_tell ( s -> pb )		5686500	0		=			
ANR	5687390	PtrMemberAccess	mp3 -> xing_frame_offset		5686500	0					
ANR	5687391	Identifier	mp3		5686500	0					
ANR	5687392	Identifier	xing_frame_offset		5686500	1					
ANR	5687393	CallExpression	avio_tell ( s -> pb )		5686500	1					
ANR	5687394	Callee	avio_tell		5686500	0					
ANR	5687395	Identifier	avio_tell		5686500	0					
ANR	5687396	ArgumentList	s -> pb		5686500	1					
ANR	5687397	Argument	s -> pb		5686500	0					
ANR	5687398	PtrMemberAccess	s -> pb		5686500	0					
ANR	5687399	Identifier	s		5686500	0					
ANR	5687400	Identifier	pb		5686500	1					
ANR	5687401	ExpressionStatement	"avio_write ( s -> pb , mp3 -> xing_frame , mp3 -> xing_frame_size )"	281:4:4978:5034	5686500	55	True				
ANR	5687402	CallExpression	"avio_write ( s -> pb , mp3 -> xing_frame , mp3 -> xing_frame_size )"		5686500	0					
ANR	5687403	Callee	avio_write		5686500	0					
ANR	5687404	Identifier	avio_write		5686500	0					
ANR	5687405	ArgumentList	s -> pb		5686500	1					
ANR	5687406	Argument	s -> pb		5686500	0					
ANR	5687407	PtrMemberAccess	s -> pb		5686500	0					
ANR	5687408	Identifier	s		5686500	0					
ANR	5687409	Identifier	pb		5686500	1					
ANR	5687410	Argument	mp3 -> xing_frame		5686500	1					
ANR	5687411	PtrMemberAccess	mp3 -> xing_frame		5686500	0					
ANR	5687412	Identifier	mp3		5686500	0					
ANR	5687413	Identifier	xing_frame		5686500	1					
ANR	5687414	Argument	mp3 -> xing_frame_size		5686500	2					
ANR	5687415	PtrMemberAccess	mp3 -> xing_frame_size		5686500	0					
ANR	5687416	Identifier	mp3		5686500	0					
ANR	5687417	Identifier	xing_frame_size		5686500	1					
ANR	5687418	ExpressionStatement	mp3 -> audio_size = mp3 -> xing_frame_size	285:4:5043:5081	5686500	56	True				
ANR	5687419	AssignmentExpression	mp3 -> audio_size = mp3 -> xing_frame_size		5686500	0		=			
ANR	5687420	PtrMemberAccess	mp3 -> audio_size		5686500	0					
ANR	5687421	Identifier	mp3		5686500	0					
ANR	5687422	Identifier	audio_size		5686500	1					
ANR	5687423	PtrMemberAccess	mp3 -> xing_frame_size		5686500	1					
ANR	5687424	Identifier	mp3		5686500	0					
ANR	5687425	Identifier	xing_frame_size		5686500	1					
ANR	5687426	ReturnStatement	return 0 ;	289:4:5090:5098	5686500	57	True				
ANR	5687427	PrimaryExpression	0		5686500	0					
ANR	5687428	ReturnType	static int		5686500	1					
ANR	5687429	Identifier	mp3_write_xing		5686500	2					
ANR	5687430	ParameterList	AVFormatContext * s		5686500	3					
ANR	5687431	Parameter	AVFormatContext * s	1:26:26:43	5686500	0	True				
ANR	5687432	ParameterType	AVFormatContext *		5686500	0					
ANR	5687433	Identifier	s		5686500	1					
ANR	5687434	CFGEntryNode	ENTRY		5686500		True				
ANR	5687435	CFGExitNode	EXIT		5686500		True				
ANR	5687436	InfiniteForNode	true		5686500		True				
ANR	5687437	Symbol	mpah . nb_channels		5686500						
ANR	5687438	Symbol	& mpah		5686500						
ANR	5687439	Symbol	encoder_str		5686500						
ANR	5687440	Symbol	* mpah . lsf		5686500						
ANR	5687441	Symbol	* s -> streams		5686500						
ANR	5687442	Symbol	* * avpriv_mpa_bitrate_tab		5686500						
ANR	5687443	Symbol	s -> priv_data		5686500						
ANR	5687444	Symbol	* s -> pb		5686500						
ANR	5687445	Symbol	MPA_STEREO		5686500						
ANR	5687446	Symbol	best_bitrate_idx		5686500						
ANR	5687447	Symbol	XING_TOC_SIZE		5686500						
ANR	5687448	Symbol	enc -> value		5686500						
ANR	5687449	Symbol	* * * s		5686500						
ANR	5687450	Symbol	FF_ARRAY_ELEMS		5686500						
ANR	5687451	Symbol	bitrate_idx		5686500						
ANR	5687452	Symbol	mpah		5686500						
ANR	5687453	Symbol	mp3 -> write_xing		5686500						
ANR	5687454	Symbol	mpah . frame_size		5686500						
ANR	5687455	Symbol	* * mp3		5686500						
ANR	5687456	Symbol	avpriv_mpa_bitrate_tab		5686500						
ANR	5687457	Symbol	~mask		5686500						
ANR	5687458	Symbol	s -> pb		5686500						
ANR	5687459	Symbol	avio_open_dyn_buf		5686500						
ANR	5687460	Symbol	avio_tell		5686500						
ANR	5687461	Symbol	* * s		5686500						
ANR	5687462	Symbol	INT_MAX		5686500						
ANR	5687463	Symbol	* * * ver		5686500						
ANR	5687464	Symbol	bytes_needed		5686500						
ANR	5687465	Symbol	mp3 -> xing_frame_offset		5686500						
ANR	5687466	Symbol	* mp3 -> audio_stream_idx		5686500						
ANR	5687467	Symbol	* bitrate_idx		5686500						
ANR	5687468	Symbol	mp3 -> size		5686500						
ANR	5687469	Symbol	mp3 -> want		5686500						
ANR	5687470	Symbol	i		5686500						
ANR	5687471	Symbol	FFABS		5686500						
ANR	5687472	Symbol	* avpriv_mpa_freq_tab		5686500						
ANR	5687473	Symbol	MPA_MONO		5686500						
ANR	5687474	Symbol	s		5686500						
ANR	5687475	Symbol	mpah . lsf		5686500						
ANR	5687476	Symbol	* * mp3 -> audio_stream_idx		5686500						
ANR	5687477	Symbol	AV_LOG_WARNING		5686500						
ANR	5687478	Symbol	* * * avpriv_mpa_bitrate_tab		5686500						
ANR	5687479	Symbol	* mpah . nb_channels		5686500						
ANR	5687480	Symbol	FFMAX		5686500						
ANR	5687481	Symbol	s -> streams		5686500						
ANR	5687482	Symbol	mp3 -> pos		5686500						
ANR	5687483	Symbol	FFMIN		5686500						
ANR	5687484	Symbol	mp3 -> xing_frame_size		5686500						
ANR	5687485	Symbol	* avpriv_mpa_bitrate_tab		5686500						
ANR	5687486	Symbol	mp3 -> audio_stream_idx		5686500						
ANR	5687487	Symbol	strlen		5686500						
ANR	5687488	Symbol	avio_close_dyn_buf		5686500						
ANR	5687489	Symbol	base_freq		5686500						
ANR	5687490	Symbol	& dyn_ctx		5686500						
ANR	5687491	Symbol	avpriv_mpa_freq_tab		5686500						
ANR	5687492	Symbol	* mp3		5686500						
ANR	5687493	Symbol	mp3 -> xing_offset		5686500						
ANR	5687494	Symbol	s -> streams [ mp3 -> audio_stream_idx ] -> codec		5686500						
ANR	5687495	Symbol	xing_offtbl		5686500						
ANR	5687496	Symbol	* * xing_offtbl		5686500						
ANR	5687497	Symbol	ret		5686500						
ANR	5687498	Symbol	codec -> channels		5686500						
ANR	5687499	Symbol	strcmp		5686500						
ANR	5687500	Symbol	ver		5686500						
ANR	5687501	Symbol	NULL		5686500						
ANR	5687502	Symbol	* codec		5686500						
ANR	5687503	Symbol	* * mpah		5686500						
ANR	5687504	Symbol	* * * mp3		5686500						
ANR	5687505	Symbol	s -> pb -> seekable		5686500						
ANR	5687506	Symbol	codec		5686500						
ANR	5687507	Symbol	channels		5686500						
ANR	5687508	Symbol	header		5686500						
ANR	5687509	Symbol	* enc		5686500						
ANR	5687510	Symbol	best_bitrate_error		5686500						
ANR	5687511	Symbol	srate_idx		5686500						
ANR	5687512	Symbol	* xing_offtbl		5686500						
ANR	5687513	Symbol	codec -> bit_rate		5686500						
ANR	5687514	Symbol	* * s -> streams		5686500						
ANR	5687515	Symbol	dyn_ctx		5686500						
ANR	5687516	Symbol	error		5686500						
ANR	5687517	Symbol	* ver		5686500						
ANR	5687518	Symbol	bit_rate		5686500						
ANR	5687519	Symbol	enc		5686500						
ANR	5687520	Symbol	mp3 -> seen		5686500						
ANR	5687521	Symbol	av_dict_get		5686500						
ANR	5687522	Symbol	XING_SIZE		5686500						
ANR	5687523	Symbol	mask		5686500						
ANR	5687524	Symbol	* * mpah . lsf		5686500						
ANR	5687525	Symbol	* mpah		5686500						
ANR	5687526	Symbol	codec -> sample_rate		5686500						
ANR	5687527	Symbol	& mp3 -> xing_frame		5686500						
ANR	5687528	Symbol	codec -> initial_padding		5686500						
ANR	5687529	Symbol	mp3		5686500						
ANR	5687530	Symbol	s -> streams [ mp3 -> audio_stream_idx ] -> metadata		5686500						
ANR	5687531	Symbol	* i		5686500						
ANR	5687532	Symbol	* * ver		5686500						
ANR	5687533	Symbol	mp3 -> audio_size		5686500						
ANR	5687534	Symbol	* s		5686500						
ANR	5687535	Symbol	mp3 -> xing_frame		5686500						
