command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	7701536	File	/home/p4ultr4n/workplace/ReVeal/raw_code/sdp_parse_0.c								
ANR	7701537	Function	sdp_parse	1:0:0:1249							
ANR	7701538	FunctionDef	"sdp_parse (AVFormatContext * s , const char * content)"		7701537	0					
ANR	7701539	CompoundStatement		3:0:63:1249	7701537	0					
ANR	7701540	IdentifierDeclStatement	const char * p ;	5:4:70:83	7701537	0	True				
ANR	7701541	IdentifierDecl	* p		7701537	0					
ANR	7701542	IdentifierDeclType	const char *		7701537	0					
ANR	7701543	Identifier	p		7701537	1					
ANR	7701544	IdentifierDeclStatement	int letter ;	7:4:90:100	7701537	1	True				
ANR	7701545	IdentifierDecl	letter		7701537	0					
ANR	7701546	IdentifierDeclType	int		7701537	0					
ANR	7701547	Identifier	letter		7701537	1					
ANR	7701548	IdentifierDeclStatement	"char buf [ 16384 ] , * q ;"	23:4:495:514	7701537	2	True				
ANR	7701549	IdentifierDecl	buf [ 16384 ]		7701537	0					
ANR	7701550	IdentifierDeclType	char [ 16384 ]		7701537	0					
ANR	7701551	Identifier	buf		7701537	1					
ANR	7701552	PrimaryExpression	16384		7701537	2					
ANR	7701553	IdentifierDecl	* q		7701537	1					
ANR	7701554	IdentifierDeclType	char *		7701537	0					
ANR	7701555	Identifier	q		7701537	1					
ANR	7701556	IdentifierDeclStatement	"SDPParseState sdp_parse_state , * s1 = & sdp_parse_state ;"	25:4:521:574	7701537	3	True				
ANR	7701557	IdentifierDecl	sdp_parse_state		7701537	0					
ANR	7701558	IdentifierDeclType	SDPParseState		7701537	0					
ANR	7701559	Identifier	sdp_parse_state		7701537	1					
ANR	7701560	IdentifierDecl	* s1 = & sdp_parse_state		7701537	1					
ANR	7701561	IdentifierDeclType	SDPParseState *		7701537	0					
ANR	7701562	Identifier	s1		7701537	1					
ANR	7701563	AssignmentExpression	* s1 = & sdp_parse_state		7701537	2		=			
ANR	7701564	Identifier	s1		7701537	0					
ANR	7701565	UnaryOperationExpression	& sdp_parse_state		7701537	1					
ANR	7701566	UnaryOperator	&		7701537	0					
ANR	7701567	Identifier	sdp_parse_state		7701537	1					
ANR	7701568	ExpressionStatement	"memset ( s1 , 0 , sizeof ( SDPParseState ) )"	29:4:583:619	7701537	4	True				
ANR	7701569	CallExpression	"memset ( s1 , 0 , sizeof ( SDPParseState ) )"		7701537	0					
ANR	7701570	Callee	memset		7701537	0					
ANR	7701571	Identifier	memset		7701537	0					
ANR	7701572	ArgumentList	s1		7701537	1					
ANR	7701573	Argument	s1		7701537	0					
ANR	7701574	Identifier	s1		7701537	0					
ANR	7701575	Argument	0		7701537	1					
ANR	7701576	PrimaryExpression	0		7701537	0					
ANR	7701577	Argument	sizeof ( SDPParseState )		7701537	2					
ANR	7701578	SizeofExpression	sizeof ( SDPParseState )		7701537	0					
ANR	7701579	Sizeof	sizeof		7701537	0					
ANR	7701580	SizeofOperand	SDPParseState		7701537	1					
ANR	7701581	ExpressionStatement	p = content	31:4:626:637	7701537	5	True				
ANR	7701582	AssignmentExpression	p = content		7701537	0		=			
ANR	7701583	Identifier	p		7701537	0					
ANR	7701584	Identifier	content		7701537	1					
ANR	7701585	ForStatement	for ( ; ; )		7701537	6					
ANR	7701586	CompoundStatement		31:12:588:588	7701537	0					
ANR	7701587	ExpressionStatement	skip_spaces ( & p )	35:8:663:678	7701537	0	True				
ANR	7701588	CallExpression	skip_spaces ( & p )		7701537	0					
ANR	7701589	Callee	skip_spaces		7701537	0					
ANR	7701590	Identifier	skip_spaces		7701537	0					
ANR	7701591	ArgumentList	& p		7701537	1					
ANR	7701592	Argument	& p		7701537	0					
ANR	7701593	UnaryOperationExpression	& p		7701537	0					
ANR	7701594	UnaryOperator	&		7701537	0					
ANR	7701595	Identifier	p		7701537	1					
ANR	7701596	ExpressionStatement	letter = * p	37:8:689:700	7701537	1	True				
ANR	7701597	AssignmentExpression	letter = * p		7701537	0		=			
ANR	7701598	Identifier	letter		7701537	0					
ANR	7701599	UnaryOperationExpression	* p		7701537	1					
ANR	7701600	UnaryOperator	*		7701537	0					
ANR	7701601	Identifier	p		7701537	1					
ANR	7701602	IfStatement	if ( letter == '\\0' )		7701537	2					
ANR	7701603	Condition	letter == '\\0'	39:12:715:728	7701537	0	True				
ANR	7701604	EqualityExpression	letter == '\\0'		7701537	0		==			
ANR	7701605	Identifier	letter		7701537	0					
ANR	7701606	PrimaryExpression	'\\0'		7701537	1					
ANR	7701607	BreakStatement	break ;	41:12:744:749	7701537	1	True				
ANR	7701608	ExpressionStatement	p ++	43:8:760:763	7701537	3	True				
ANR	7701609	PostIncDecOperationExpression	p ++		7701537	0					
ANR	7701610	Identifier	p		7701537	0					
ANR	7701611	IncDec	++		7701537	1					
ANR	7701612	IfStatement	if ( * p != '=' )		7701537	4					
ANR	7701613	Condition	* p != '='	45:12:778:786	7701537	0	True				
ANR	7701614	EqualityExpression	* p != '='		7701537	0		!=			
ANR	7701615	UnaryOperationExpression	* p		7701537	0					
ANR	7701616	UnaryOperator	*		7701537	0					
ANR	7701617	Identifier	p		7701537	1					
ANR	7701618	PrimaryExpression	'='		7701537	1					
ANR	7701619	GotoStatement	goto next_line ;	47:12:802:816	7701537	1	True				
ANR	7701620	Identifier	next_line		7701537	0					
ANR	7701621	ExpressionStatement	p ++	49:8:827:830	7701537	5	True				
ANR	7701622	PostIncDecOperationExpression	p ++		7701537	0					
ANR	7701623	Identifier	p		7701537	0					
ANR	7701624	IncDec	++		7701537	1					
ANR	7701625	ExpressionStatement	q = buf	53:8:872:879	7701537	6	True				
ANR	7701626	AssignmentExpression	q = buf		7701537	0		=			
ANR	7701627	Identifier	q		7701537	0					
ANR	7701628	Identifier	buf		7701537	1					
ANR	7701629	WhileStatement	while ( * p != '\\n' && * p != '\\r' && * p != '\\0' )		7701537	7					
ANR	7701630	Condition	* p != '\\n' && * p != '\\r' && * p != '\\0'	55:15:897:934	7701537	0	True				
ANR	7701631	AndExpression	* p != '\\n' && * p != '\\r' && * p != '\\0'		7701537	0		&&			
ANR	7701632	EqualityExpression	* p != '\\n'		7701537	0		!=			
ANR	7701633	UnaryOperationExpression	* p		7701537	0					
ANR	7701634	UnaryOperator	*		7701537	0					
ANR	7701635	Identifier	p		7701537	1					
ANR	7701636	PrimaryExpression	'\\n'		7701537	1					
ANR	7701637	AndExpression	* p != '\\r' && * p != '\\0'		7701537	1		&&			
ANR	7701638	EqualityExpression	* p != '\\r'		7701537	0		!=			
ANR	7701639	UnaryOperationExpression	* p		7701537	0					
ANR	7701640	UnaryOperator	*		7701537	0					
ANR	7701641	Identifier	p		7701537	1					
ANR	7701642	PrimaryExpression	'\\r'		7701537	1					
ANR	7701643	EqualityExpression	* p != '\\0'		7701537	1		!=			
ANR	7701644	UnaryOperationExpression	* p		7701537	0					
ANR	7701645	UnaryOperator	*		7701537	0					
ANR	7701646	Identifier	p		7701537	1					
ANR	7701647	PrimaryExpression	'\\0'		7701537	1					
ANR	7701648	CompoundStatement		53:55:873:873	7701537	1					
ANR	7701649	IfStatement	if ( ( q - buf ) < sizeof ( buf ) - 1 )		7701537	0					
ANR	7701650	Condition	( q - buf ) < sizeof ( buf ) - 1	57:16:956:982	7701537	0	True				
ANR	7701651	RelationalExpression	( q - buf ) < sizeof ( buf ) - 1		7701537	0		<			
ANR	7701652	AdditiveExpression	q - buf		7701537	0		-			
ANR	7701653	Identifier	q		7701537	0					
ANR	7701654	Identifier	buf		7701537	1					
ANR	7701655	AdditiveExpression	sizeof ( buf ) - 1		7701537	1		-			
ANR	7701656	SizeofExpression	sizeof ( buf )		7701537	0					
ANR	7701657	Sizeof	sizeof		7701537	0					
ANR	7701658	SizeofOperand	buf		7701537	1					
ANR	7701659	PrimaryExpression	1		7701537	1					
ANR	7701660	ExpressionStatement	* q ++ = * p	59:16:1002:1011	7701537	1	True				
ANR	7701661	AssignmentExpression	* q ++ = * p		7701537	0		=			
ANR	7701662	UnaryOperationExpression	* q ++		7701537	0					
ANR	7701663	UnaryOperator	*		7701537	0					
ANR	7701664	PostIncDecOperationExpression	q ++		7701537	1					
ANR	7701665	Identifier	q		7701537	0					
ANR	7701666	IncDec	++		7701537	1					
ANR	7701667	UnaryOperationExpression	* p		7701537	1					
ANR	7701668	UnaryOperator	*		7701537	0					
ANR	7701669	Identifier	p		7701537	1					
ANR	7701670	ExpressionStatement	p ++	61:12:1026:1029	7701537	1	True				
ANR	7701671	PostIncDecOperationExpression	p ++		7701537	0					
ANR	7701672	Identifier	p		7701537	0					
ANR	7701673	IncDec	++		7701537	1					
ANR	7701674	ExpressionStatement	* q = '\\0'	65:8:1051:1060	7701537	8	True				
ANR	7701675	AssignmentExpression	* q = '\\0'		7701537	0		=			
ANR	7701676	UnaryOperationExpression	* q		7701537	0					
ANR	7701677	UnaryOperator	*		7701537	0					
ANR	7701678	Identifier	q		7701537	1					
ANR	7701679	PrimaryExpression	'\\0'		7701537	1					
ANR	7701680	ExpressionStatement	"sdp_parse_line ( s , s1 , letter , buf )"	67:8:1071:1105	7701537	9	True				
ANR	7701681	CallExpression	"sdp_parse_line ( s , s1 , letter , buf )"		7701537	0					
ANR	7701682	Callee	sdp_parse_line		7701537	0					
ANR	7701683	Identifier	sdp_parse_line		7701537	0					
ANR	7701684	ArgumentList	s		7701537	1					
ANR	7701685	Argument	s		7701537	0					
ANR	7701686	Identifier	s		7701537	0					
ANR	7701687	Argument	s1		7701537	1					
ANR	7701688	Identifier	s1		7701537	0					
ANR	7701689	Argument	letter		7701537	2					
ANR	7701690	Identifier	letter		7701537	0					
ANR	7701691	Argument	buf		7701537	3					
ANR	7701692	Identifier	buf		7701537	0					
ANR	7701693	Label	next_line :	69:4:1112:1121	7701537	10	True				
ANR	7701694	Identifier	next_line		7701537	0					
ANR	7701695	WhileStatement	while ( * p != '\\n' && * p != '\\0' )		7701537	11					
ANR	7701696	Condition	* p != '\\n' && * p != '\\0'	71:15:1139:1162	7701537	0	True				
ANR	7701697	AndExpression	* p != '\\n' && * p != '\\0'		7701537	0		&&			
ANR	7701698	EqualityExpression	* p != '\\n'		7701537	0		!=			
ANR	7701699	UnaryOperationExpression	* p		7701537	0					
ANR	7701700	UnaryOperator	*		7701537	0					
ANR	7701701	Identifier	p		7701537	1					
ANR	7701702	PrimaryExpression	'\\n'		7701537	1					
ANR	7701703	EqualityExpression	* p != '\\0'		7701537	1		!=			
ANR	7701704	UnaryOperationExpression	* p		7701537	0					
ANR	7701705	UnaryOperator	*		7701537	0					
ANR	7701706	Identifier	p		7701537	1					
ANR	7701707	PrimaryExpression	'\\0'		7701537	1					
ANR	7701708	ExpressionStatement	p ++	73:12:1178:1181	7701537	1	True				
ANR	7701709	PostIncDecOperationExpression	p ++		7701537	0					
ANR	7701710	Identifier	p		7701537	0					
ANR	7701711	IncDec	++		7701537	1					
ANR	7701712	IfStatement	if ( * p == '\\n' )		7701537	12					
ANR	7701713	Condition	* p == '\\n'	75:12:1196:1205	7701537	0	True				
ANR	7701714	EqualityExpression	* p == '\\n'		7701537	0		==			
ANR	7701715	UnaryOperationExpression	* p		7701537	0					
ANR	7701716	UnaryOperator	*		7701537	0					
ANR	7701717	Identifier	p		7701537	1					
ANR	7701718	PrimaryExpression	'\\n'		7701537	1					
ANR	7701719	ExpressionStatement	p ++	77:12:1221:1224	7701537	1	True				
ANR	7701720	PostIncDecOperationExpression	p ++		7701537	0					
ANR	7701721	Identifier	p		7701537	0					
ANR	7701722	IncDec	++		7701537	1					
ANR	7701723	ReturnStatement	return 0 ;	81:4:1238:1246	7701537	7	True				
ANR	7701724	PrimaryExpression	0		7701537	0					
ANR	7701725	ReturnType	static int		7701537	1					
ANR	7701726	Identifier	sdp_parse		7701537	2					
ANR	7701727	ParameterList	"AVFormatContext * s , const char * content"		7701537	3					
ANR	7701728	Parameter	AVFormatContext * s	1:21:21:38	7701537	0	True				
ANR	7701729	ParameterType	AVFormatContext *		7701537	0					
ANR	7701730	Identifier	s		7701537	1					
ANR	7701731	Parameter	const char * content	1:41:41:59	7701537	1	True				
ANR	7701732	ParameterType	const char *		7701537	0					
ANR	7701733	Identifier	content		7701537	1					
ANR	7701734	CFGEntryNode	ENTRY		7701537		True				
ANR	7701735	CFGExitNode	EXIT		7701537		True				
ANR	7701736	InfiniteForNode	true		7701537		True				
ANR	7701737	Symbol	* q ++		7701537						
ANR	7701738	Symbol	content		7701537						
ANR	7701739	Symbol	& sdp_parse_state		7701537						
ANR	7701740	Symbol	p		7701537						
ANR	7701741	Symbol	q		7701537						
ANR	7701742	Symbol	buf		7701537						
ANR	7701743	Symbol	s		7701537						
ANR	7701744	Symbol	sdp_parse_state		7701537						
ANR	7701745	Symbol	& p		7701537						
ANR	7701746	Symbol	letter		7701537						
ANR	7701747	Symbol	* p		7701537						
ANR	7701748	Symbol	* q		7701537						
ANR	7701749	Symbol	s1		7701537						
