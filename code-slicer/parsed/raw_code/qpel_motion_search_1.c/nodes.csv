command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	7147488	File	/home/p4ultr4n/workplace/ReVeal/raw_code/qpel_motion_search_1.c								
ANR	7147489	Function	qpel_motion_search	1:0:0:8985							
ANR	7147490	FunctionDef	"qpel_motion_search (MpegEncContext * s , int * mx_ptr , int * my_ptr , int dmin , int src_index , int ref_index , int size , int h)"		7147489	0					
ANR	7147491	CompoundStatement		9:0:245:8985	7147489	0					
ANR	7147492	Statement	MotionEstContext	11:4:252:267	7147489	0	True				
ANR	7147493	Statement	*	11:21:269:269	7147489	1	True				
ANR	7147494	Statement	const	11:23:271:275	7147489	2	True				
ANR	7147495	ExpressionStatement	c = & s -> me	11:29:277:286	7147489	3	True				
ANR	7147496	AssignmentExpression	c = & s -> me		7147489	0		=			
ANR	7147497	Identifier	c		7147489	0					
ANR	7147498	UnaryOperationExpression	& s -> me		7147489	1					
ANR	7147499	UnaryOperator	&		7147489	0					
ANR	7147500	PtrMemberAccess	s -> me		7147489	1					
ANR	7147501	Identifier	s		7147489	0					
ANR	7147502	Identifier	me		7147489	1					
ANR	7147503	IdentifierDeclStatement	const int mx = * mx_ptr ;	13:4:293:315	7147489	4	True				
ANR	7147504	IdentifierDecl	mx = * mx_ptr		7147489	0					
ANR	7147505	IdentifierDeclType	const int		7147489	0					
ANR	7147506	Identifier	mx		7147489	1					
ANR	7147507	AssignmentExpression	mx = * mx_ptr		7147489	2		=			
ANR	7147508	Identifier	mx		7147489	0					
ANR	7147509	UnaryOperationExpression	* mx_ptr		7147489	1					
ANR	7147510	UnaryOperator	*		7147489	0					
ANR	7147511	Identifier	mx_ptr		7147489	1					
ANR	7147512	IdentifierDeclStatement	const int my = * my_ptr ;	15:4:322:344	7147489	5	True				
ANR	7147513	IdentifierDecl	my = * my_ptr		7147489	0					
ANR	7147514	IdentifierDeclType	const int		7147489	0					
ANR	7147515	Identifier	my		7147489	1					
ANR	7147516	AssignmentExpression	my = * my_ptr		7147489	2		=			
ANR	7147517	Identifier	my		7147489	0					
ANR	7147518	UnaryOperationExpression	* my_ptr		7147489	1					
ANR	7147519	UnaryOperator	*		7147489	0					
ANR	7147520	Identifier	my_ptr		7147489	1					
ANR	7147521	IdentifierDeclStatement	const int penalty_factor = c -> sub_penalty_factor ;	17:4:354:401	7147489	6	True				
ANR	7147522	IdentifierDecl	penalty_factor = c -> sub_penalty_factor		7147489	0					
ANR	7147523	IdentifierDeclType	const int		7147489	0					
ANR	7147524	Identifier	penalty_factor		7147489	1					
ANR	7147525	AssignmentExpression	penalty_factor = c -> sub_penalty_factor		7147489	2		=			
ANR	7147526	Identifier	penalty_factor		7147489	0					
ANR	7147527	PtrMemberAccess	c -> sub_penalty_factor		7147489	1					
ANR	7147528	Identifier	c		7147489	0					
ANR	7147529	Identifier	sub_penalty_factor		7147489	1					
ANR	7147530	IdentifierDeclStatement	const int map_generation = c -> map_generation ;	19:4:408:451	7147489	7	True				
ANR	7147531	IdentifierDecl	map_generation = c -> map_generation		7147489	0					
ANR	7147532	IdentifierDeclType	const int		7147489	0					
ANR	7147533	Identifier	map_generation		7147489	1					
ANR	7147534	AssignmentExpression	map_generation = c -> map_generation		7147489	2		=			
ANR	7147535	Identifier	map_generation		7147489	0					
ANR	7147536	PtrMemberAccess	c -> map_generation		7147489	1					
ANR	7147537	Identifier	c		7147489	0					
ANR	7147538	Identifier	map_generation		7147489	1					
ANR	7147539	IdentifierDeclStatement	const int subpel_quality = c -> avctx -> me_subpel_quality ;	21:4:458:511	7147489	8	True				
ANR	7147540	IdentifierDecl	subpel_quality = c -> avctx -> me_subpel_quality		7147489	0					
ANR	7147541	IdentifierDeclType	const int		7147489	0					
ANR	7147542	Identifier	subpel_quality		7147489	1					
ANR	7147543	AssignmentExpression	subpel_quality = c -> avctx -> me_subpel_quality		7147489	2		=			
ANR	7147544	Identifier	subpel_quality		7147489	0					
ANR	7147545	PtrMemberAccess	c -> avctx -> me_subpel_quality		7147489	1					
ANR	7147546	PtrMemberAccess	c -> avctx		7147489	0					
ANR	7147547	Identifier	c		7147489	0					
ANR	7147548	Identifier	avctx		7147489	1					
ANR	7147549	Identifier	me_subpel_quality		7147489	1					
ANR	7147550	IdentifierDeclStatement	uint32_t * map = c -> map ;	23:4:518:539	7147489	9	True				
ANR	7147551	IdentifierDecl	* map = c -> map		7147489	0					
ANR	7147552	IdentifierDeclType	uint32_t *		7147489	0					
ANR	7147553	Identifier	map		7147489	1					
ANR	7147554	AssignmentExpression	* map = c -> map		7147489	2		=			
ANR	7147555	Identifier	map		7147489	0					
ANR	7147556	PtrMemberAccess	c -> map		7147489	1					
ANR	7147557	Identifier	c		7147489	0					
ANR	7147558	Identifier	map		7147489	1					
ANR	7147559	IdentifierDeclStatement	"me_cmp_func cmpf , chroma_cmpf ;"	25:4:546:575	7147489	10	True				
ANR	7147560	IdentifierDecl	cmpf		7147489	0					
ANR	7147561	IdentifierDeclType	me_cmp_func		7147489	0					
ANR	7147562	Identifier	cmpf		7147489	1					
ANR	7147563	IdentifierDecl	chroma_cmpf		7147489	1					
ANR	7147564	IdentifierDeclType	me_cmp_func		7147489	0					
ANR	7147565	Identifier	chroma_cmpf		7147489	1					
ANR	7147566	IdentifierDeclStatement	"me_cmp_func cmp_sub , chroma_cmp_sub ;"	27:4:582:617	7147489	11	True				
ANR	7147567	IdentifierDecl	cmp_sub		7147489	0					
ANR	7147568	IdentifierDeclType	me_cmp_func		7147489	0					
ANR	7147569	Identifier	cmp_sub		7147489	1					
ANR	7147570	IdentifierDecl	chroma_cmp_sub		7147489	1					
ANR	7147571	IdentifierDeclType	me_cmp_func		7147489	0					
ANR	7147572	Identifier	chroma_cmp_sub		7147489	1					
ANR	7147573	IdentifierDeclStatement	LOAD_COMMON int flags = c -> sub_flags ;	31:4:626:666	7147489	12	True				
ANR	7147574	IdentifierDecl	flags = c -> sub_flags		7147489	0					
ANR	7147575	IdentifierDeclType	LOAD_COMMON int		7147489	0					
ANR	7147576	Identifier	flags		7147489	1					
ANR	7147577	AssignmentExpression	flags = c -> sub_flags		7147489	2		=			
ANR	7147578	Identifier	flags		7147489	0					
ANR	7147579	PtrMemberAccess	c -> sub_flags		7147489	1					
ANR	7147580	Identifier	c		7147489	0					
ANR	7147581	Identifier	sub_flags		7147489	1					
ANR	7147582	ExpressionStatement	cmpf = s -> dsp . me_cmp [ size ]	37:4:679:704	7147489	13	True				
ANR	7147583	AssignmentExpression	cmpf = s -> dsp . me_cmp [ size ]		7147489	0		=			
ANR	7147584	Identifier	cmpf		7147489	0					
ANR	7147585	ArrayIndexing	s -> dsp . me_cmp [ size ]		7147489	1					
ANR	7147586	MemberAccess	s -> dsp . me_cmp		7147489	0					
ANR	7147587	PtrMemberAccess	s -> dsp		7147489	0					
ANR	7147588	Identifier	s		7147489	0					
ANR	7147589	Identifier	dsp		7147489	1					
ANR	7147590	Identifier	me_cmp		7147489	1					
ANR	7147591	Identifier	size		7147489	1					
ANR	7147592	ExpressionStatement	chroma_cmpf = s -> dsp . me_cmp [ size + 1 ]	39:4:711:745	7147489	14	True				
ANR	7147593	AssignmentExpression	chroma_cmpf = s -> dsp . me_cmp [ size + 1 ]		7147489	0		=			
ANR	7147594	Identifier	chroma_cmpf		7147489	0					
ANR	7147595	ArrayIndexing	s -> dsp . me_cmp [ size + 1 ]		7147489	1					
ANR	7147596	MemberAccess	s -> dsp . me_cmp		7147489	0					
ANR	7147597	PtrMemberAccess	s -> dsp		7147489	0					
ANR	7147598	Identifier	s		7147489	0					
ANR	7147599	Identifier	dsp		7147489	1					
ANR	7147600	Identifier	me_cmp		7147489	1					
ANR	7147601	AdditiveExpression	size + 1		7147489	1		+			
ANR	7147602	Identifier	size		7147489	0					
ANR	7147603	PrimaryExpression	1		7147489	1					
ANR	7147604	ExpressionStatement	cmp_sub = s -> dsp . me_sub_cmp [ size ]	45:4:792:824	7147489	15	True				
ANR	7147605	AssignmentExpression	cmp_sub = s -> dsp . me_sub_cmp [ size ]		7147489	0		=			
ANR	7147606	Identifier	cmp_sub		7147489	0					
ANR	7147607	ArrayIndexing	s -> dsp . me_sub_cmp [ size ]		7147489	1					
ANR	7147608	MemberAccess	s -> dsp . me_sub_cmp		7147489	0					
ANR	7147609	PtrMemberAccess	s -> dsp		7147489	0					
ANR	7147610	Identifier	s		7147489	0					
ANR	7147611	Identifier	dsp		7147489	1					
ANR	7147612	Identifier	me_sub_cmp		7147489	1					
ANR	7147613	Identifier	size		7147489	1					
ANR	7147614	ExpressionStatement	chroma_cmp_sub = s -> dsp . me_sub_cmp [ size + 1 ]	47:4:831:872	7147489	16	True				
ANR	7147615	AssignmentExpression	chroma_cmp_sub = s -> dsp . me_sub_cmp [ size + 1 ]		7147489	0		=			
ANR	7147616	Identifier	chroma_cmp_sub		7147489	0					
ANR	7147617	ArrayIndexing	s -> dsp . me_sub_cmp [ size + 1 ]		7147489	1					
ANR	7147618	MemberAccess	s -> dsp . me_sub_cmp		7147489	0					
ANR	7147619	PtrMemberAccess	s -> dsp		7147489	0					
ANR	7147620	Identifier	s		7147489	0					
ANR	7147621	Identifier	dsp		7147489	1					
ANR	7147622	Identifier	me_sub_cmp		7147489	1					
ANR	7147623	AdditiveExpression	size + 1		7147489	1		+			
ANR	7147624	Identifier	size		7147489	0					
ANR	7147625	PrimaryExpression	1		7147489	1					
ANR	7147626	IfStatement	if ( c -> skip )		7147489	17					
ANR	7147627	Condition	c -> skip	51:7:884:890	7147489	0	True				
ANR	7147628	PtrMemberAccess	c -> skip		7147489	0					
ANR	7147629	Identifier	c		7147489	0					
ANR	7147630	Identifier	skip		7147489	1					
ANR	7147631	CompoundStatement		43:15:646:646	7147489	1					
ANR	7147632	ExpressionStatement	* mx_ptr = 0	53:8:939:950	7147489	0	True				
ANR	7147633	AssignmentExpression	* mx_ptr = 0		7147489	0		=			
ANR	7147634	UnaryOperationExpression	* mx_ptr		7147489	0					
ANR	7147635	UnaryOperator	*		7147489	0					
ANR	7147636	Identifier	mx_ptr		7147489	1					
ANR	7147637	PrimaryExpression	0		7147489	1					
ANR	7147638	ExpressionStatement	* my_ptr = 0	55:8:961:972	7147489	1	True				
ANR	7147639	AssignmentExpression	* my_ptr = 0		7147489	0		=			
ANR	7147640	UnaryOperationExpression	* my_ptr		7147489	0					
ANR	7147641	UnaryOperator	*		7147489	0					
ANR	7147642	Identifier	my_ptr		7147489	1					
ANR	7147643	PrimaryExpression	0		7147489	1					
ANR	7147644	ReturnStatement	return dmin ;	57:8:983:994	7147489	2	True				
ANR	7147645	Identifier	dmin		7147489	0					
ANR	7147646	IfStatement	if ( c -> avctx -> me_cmp != c -> avctx -> me_sub_cmp )		7147489	18					
ANR	7147647	Condition	c -> avctx -> me_cmp != c -> avctx -> me_sub_cmp	63:7:1021:1060	7147489	0	True				
ANR	7147648	EqualityExpression	c -> avctx -> me_cmp != c -> avctx -> me_sub_cmp		7147489	0		!=			
ANR	7147649	PtrMemberAccess	c -> avctx -> me_cmp		7147489	0					
ANR	7147650	PtrMemberAccess	c -> avctx		7147489	0					
ANR	7147651	Identifier	c		7147489	0					
ANR	7147652	Identifier	avctx		7147489	1					
ANR	7147653	Identifier	me_cmp		7147489	1					
ANR	7147654	PtrMemberAccess	c -> avctx -> me_sub_cmp		7147489	1					
ANR	7147655	PtrMemberAccess	c -> avctx		7147489	0					
ANR	7147656	Identifier	c		7147489	0					
ANR	7147657	Identifier	avctx		7147489	1					
ANR	7147658	Identifier	me_sub_cmp		7147489	1					
ANR	7147659	CompoundStatement		55:48:816:816	7147489	1					
ANR	7147660	ExpressionStatement	"dmin = cmp ( s , mx , my , 0 , 0 , size , h , ref_index , src_index , cmp_sub , chroma_cmp_sub , flags )"	65:8:1073:1162	7147489	0	True				
ANR	7147661	AssignmentExpression	"dmin = cmp ( s , mx , my , 0 , 0 , size , h , ref_index , src_index , cmp_sub , chroma_cmp_sub , flags )"		7147489	0		=			
ANR	7147662	Identifier	dmin		7147489	0					
ANR	7147663	CallExpression	"cmp ( s , mx , my , 0 , 0 , size , h , ref_index , src_index , cmp_sub , chroma_cmp_sub , flags )"		7147489	1					
ANR	7147664	Callee	cmp		7147489	0					
ANR	7147665	Identifier	cmp		7147489	0					
ANR	7147666	ArgumentList	s		7147489	1					
ANR	7147667	Argument	s		7147489	0					
ANR	7147668	Identifier	s		7147489	0					
ANR	7147669	Argument	mx		7147489	1					
ANR	7147670	Identifier	mx		7147489	0					
ANR	7147671	Argument	my		7147489	2					
ANR	7147672	Identifier	my		7147489	0					
ANR	7147673	Argument	0		7147489	3					
ANR	7147674	PrimaryExpression	0		7147489	0					
ANR	7147675	Argument	0		7147489	4					
ANR	7147676	PrimaryExpression	0		7147489	0					
ANR	7147677	Argument	size		7147489	5					
ANR	7147678	Identifier	size		7147489	0					
ANR	7147679	Argument	h		7147489	6					
ANR	7147680	Identifier	h		7147489	0					
ANR	7147681	Argument	ref_index		7147489	7					
ANR	7147682	Identifier	ref_index		7147489	0					
ANR	7147683	Argument	src_index		7147489	8					
ANR	7147684	Identifier	src_index		7147489	0					
ANR	7147685	Argument	cmp_sub		7147489	9					
ANR	7147686	Identifier	cmp_sub		7147489	0					
ANR	7147687	Argument	chroma_cmp_sub		7147489	10					
ANR	7147688	Identifier	chroma_cmp_sub		7147489	0					
ANR	7147689	Argument	flags		7147489	11					
ANR	7147690	Identifier	flags		7147489	0					
ANR	7147691	IfStatement	if ( mx || my || size > 0 )		7147489	1					
ANR	7147692	Condition	mx || my || size > 0	67:11:1176:1193	7147489	0	True				
ANR	7147693	OrExpression	mx || my || size > 0		7147489	0		||			
ANR	7147694	Identifier	mx		7147489	0					
ANR	7147695	OrExpression	my || size > 0		7147489	1		||			
ANR	7147696	Identifier	my		7147489	0					
ANR	7147697	RelationalExpression	size > 0		7147489	1		>			
ANR	7147698	Identifier	size		7147489	0					
ANR	7147699	PrimaryExpression	0		7147489	1					
ANR	7147700	ExpressionStatement	dmin += ( mv_penalty [ 4 * mx - pred_x ] + mv_penalty [ 4 * my - pred_y ] ) * penalty_factor	69:12:1209:1287	7147489	1	True				
ANR	7147701	AssignmentExpression	dmin += ( mv_penalty [ 4 * mx - pred_x ] + mv_penalty [ 4 * my - pred_y ] ) * penalty_factor		7147489	0		+=			
ANR	7147702	Identifier	dmin		7147489	0					
ANR	7147703	MultiplicativeExpression	( mv_penalty [ 4 * mx - pred_x ] + mv_penalty [ 4 * my - pred_y ] ) * penalty_factor		7147489	1		*			
ANR	7147704	AdditiveExpression	mv_penalty [ 4 * mx - pred_x ] + mv_penalty [ 4 * my - pred_y ]		7147489	0		+			
ANR	7147705	ArrayIndexing	mv_penalty [ 4 * mx - pred_x ]		7147489	0					
ANR	7147706	Identifier	mv_penalty		7147489	0					
ANR	7147707	AdditiveExpression	4 * mx - pred_x		7147489	1		-			
ANR	7147708	MultiplicativeExpression	4 * mx		7147489	0		*			
ANR	7147709	PrimaryExpression	4		7147489	0					
ANR	7147710	Identifier	mx		7147489	1					
ANR	7147711	Identifier	pred_x		7147489	1					
ANR	7147712	ArrayIndexing	mv_penalty [ 4 * my - pred_y ]		7147489	1					
ANR	7147713	Identifier	mv_penalty		7147489	0					
ANR	7147714	AdditiveExpression	4 * my - pred_y		7147489	1		-			
ANR	7147715	MultiplicativeExpression	4 * my		7147489	0		*			
ANR	7147716	PrimaryExpression	4		7147489	0					
ANR	7147717	Identifier	my		7147489	1					
ANR	7147718	Identifier	pred_y		7147489	1					
ANR	7147719	Identifier	penalty_factor		7147489	1					
ANR	7147720	IfStatement	if ( mx > xmin && mx < xmax && my > ymin && my < ymax )		7147489	19					
ANR	7147721	Condition	mx > xmin && mx < xmax && my > ymin && my < ymax	75:8:1315:1372	7147489	0	True				
ANR	7147722	AndExpression	mx > xmin && mx < xmax && my > ymin && my < ymax		7147489	0		&&			
ANR	7147723	RelationalExpression	mx > xmin		7147489	0		>			
ANR	7147724	Identifier	mx		7147489	0					
ANR	7147725	Identifier	xmin		7147489	1					
ANR	7147726	AndExpression	mx < xmax && my > ymin && my < ymax		7147489	1		&&			
ANR	7147727	RelationalExpression	mx < xmax		7147489	0		<			
ANR	7147728	Identifier	mx		7147489	0					
ANR	7147729	Identifier	xmax		7147489	1					
ANR	7147730	AndExpression	my > ymin && my < ymax		7147489	1		&&			
ANR	7147731	RelationalExpression	my > ymin		7147489	0		>			
ANR	7147732	Identifier	my		7147489	0					
ANR	7147733	Identifier	ymin		7147489	1					
ANR	7147734	RelationalExpression	my < ymax		7147489	1		<			
ANR	7147735	Identifier	my		7147489	0					
ANR	7147736	Identifier	ymax		7147489	1					
ANR	7147737	CompoundStatement		277:12:6076:6144	7147489	1					
ANR	7147738	IdentifierDeclStatement	"int bx = 4 * mx , by = 4 * my ;"	79:8:1386:1406	7147489	0	True				
ANR	7147739	IdentifierDecl	bx = 4 * mx		7147489	0					
ANR	7147740	IdentifierDeclType	int		7147489	0					
ANR	7147741	Identifier	bx		7147489	1					
ANR	7147742	AssignmentExpression	bx = 4 * mx		7147489	2		=			
ANR	7147743	Identifier	bx		7147489	0					
ANR	7147744	MultiplicativeExpression	4 * mx		7147489	1		*			
ANR	7147745	PrimaryExpression	4		7147489	0					
ANR	7147746	Identifier	mx		7147489	1					
ANR	7147747	IdentifierDecl	by = 4 * my		7147489	1					
ANR	7147748	IdentifierDeclType	int		7147489	0					
ANR	7147749	Identifier	by		7147489	1					
ANR	7147750	AssignmentExpression	by = 4 * my		7147489	2		=			
ANR	7147751	Identifier	by		7147489	0					
ANR	7147752	MultiplicativeExpression	4 * my		7147489	1		*			
ANR	7147753	PrimaryExpression	4		7147489	0					
ANR	7147754	Identifier	my		7147489	1					
ANR	7147755	IdentifierDeclStatement	int d = dmin ;	81:8:1417:1428	7147489	1	True				
ANR	7147756	IdentifierDecl	d = dmin		7147489	0					
ANR	7147757	IdentifierDeclType	int		7147489	0					
ANR	7147758	Identifier	d		7147489	1					
ANR	7147759	AssignmentExpression	d = dmin		7147489	2		=			
ANR	7147760	Identifier	dmin		7147489	0					
ANR	7147761	Identifier	dmin		7147489	1					
ANR	7147762	IdentifierDeclStatement	"int i , nx , ny ;"	83:8:1439:1452	7147489	2	True				
ANR	7147763	IdentifierDecl	i		7147489	0					
ANR	7147764	IdentifierDeclType	int		7147489	0					
ANR	7147765	Identifier	i		7147489	1					
ANR	7147766	IdentifierDecl	nx		7147489	1					
ANR	7147767	IdentifierDeclType	int		7147489	0					
ANR	7147768	Identifier	nx		7147489	1					
ANR	7147769	IdentifierDecl	ny		7147489	2					
ANR	7147770	IdentifierDeclType	int		7147489	0					
ANR	7147771	Identifier	ny		7147489	1					
ANR	7147772	IdentifierDeclStatement	const int index = ( my << ME_MAP_SHIFT ) + mx ;	85:8:1463:1503	7147489	3	True				
ANR	7147773	IdentifierDecl	index = ( my << ME_MAP_SHIFT ) + mx		7147489	0					
ANR	7147774	IdentifierDeclType	const int		7147489	0					
ANR	7147775	Identifier	index		7147489	1					
ANR	7147776	AssignmentExpression	index = ( my << ME_MAP_SHIFT ) + mx		7147489	2		=			
ANR	7147777	Identifier	index		7147489	0					
ANR	7147778	AdditiveExpression	( my << ME_MAP_SHIFT ) + mx		7147489	1		+			
ANR	7147779	ShiftExpression	my << ME_MAP_SHIFT		7147489	0		<<			
ANR	7147780	Identifier	my		7147489	0					
ANR	7147781	Identifier	ME_MAP_SHIFT		7147489	1					
ANR	7147782	Identifier	mx		7147489	1					
ANR	7147783	IdentifierDeclStatement	const int t = score_map [ ( index - ( 1 << ME_MAP_SHIFT ) ) & ( ME_MAP_SIZE - 1 ) ] ;	87:8:1514:1581	7147489	4	True				
ANR	7147784	IdentifierDecl	t = score_map [ ( index - ( 1 << ME_MAP_SHIFT ) ) & ( ME_MAP_SIZE - 1 ) ]		7147489	0					
ANR	7147785	IdentifierDeclType	const int		7147489	0					
ANR	7147786	Identifier	t		7147489	1					
ANR	7147787	AssignmentExpression	t = score_map [ ( index - ( 1 << ME_MAP_SHIFT ) ) & ( ME_MAP_SIZE - 1 ) ]		7147489	2		=			
ANR	7147788	Identifier	t		7147489	0					
ANR	7147789	ArrayIndexing	score_map [ ( index - ( 1 << ME_MAP_SHIFT ) ) & ( ME_MAP_SIZE - 1 ) ]		7147489	1					
ANR	7147790	Identifier	score_map		7147489	0					
ANR	7147791	BitAndExpression	( index - ( 1 << ME_MAP_SHIFT ) ) & ( ME_MAP_SIZE - 1 )		7147489	1		&			
ANR	7147792	AdditiveExpression	index - ( 1 << ME_MAP_SHIFT )		7147489	0		-			
ANR	7147793	Identifier	index		7147489	0					
ANR	7147794	ShiftExpression	1 << ME_MAP_SHIFT		7147489	1		<<			
ANR	7147795	PrimaryExpression	1		7147489	0					
ANR	7147796	Identifier	ME_MAP_SHIFT		7147489	1					
ANR	7147797	AdditiveExpression	ME_MAP_SIZE - 1		7147489	1		-			
ANR	7147798	Identifier	ME_MAP_SIZE		7147489	0					
ANR	7147799	PrimaryExpression	1		7147489	1					
ANR	7147800	IdentifierDeclStatement	const int l = score_map [ ( index - 1 ) & ( ME_MAP_SIZE - 1 ) ] ;	89:8:1592:1659	7147489	5	True				
ANR	7147801	IdentifierDecl	l = score_map [ ( index - 1 ) & ( ME_MAP_SIZE - 1 ) ]		7147489	0					
ANR	7147802	IdentifierDeclType	const int		7147489	0					
ANR	7147803	Identifier	l		7147489	1					
ANR	7147804	AssignmentExpression	l = score_map [ ( index - 1 ) & ( ME_MAP_SIZE - 1 ) ]		7147489	2		=			
ANR	7147805	Identifier	l		7147489	0					
ANR	7147806	ArrayIndexing	score_map [ ( index - 1 ) & ( ME_MAP_SIZE - 1 ) ]		7147489	1					
ANR	7147807	Identifier	score_map		7147489	0					
ANR	7147808	BitAndExpression	( index - 1 ) & ( ME_MAP_SIZE - 1 )		7147489	1		&			
ANR	7147809	AdditiveExpression	index - 1		7147489	0		-			
ANR	7147810	Identifier	index		7147489	0					
ANR	7147811	PrimaryExpression	1		7147489	1					
ANR	7147812	AdditiveExpression	ME_MAP_SIZE - 1		7147489	1		-			
ANR	7147813	Identifier	ME_MAP_SIZE		7147489	0					
ANR	7147814	PrimaryExpression	1		7147489	1					
ANR	7147815	IdentifierDeclStatement	const int r = score_map [ ( index + 1 ) & ( ME_MAP_SIZE - 1 ) ] ;	91:8:1670:1737	7147489	6	True				
ANR	7147816	IdentifierDecl	r = score_map [ ( index + 1 ) & ( ME_MAP_SIZE - 1 ) ]		7147489	0					
ANR	7147817	IdentifierDeclType	const int		7147489	0					
ANR	7147818	Identifier	r		7147489	1					
ANR	7147819	AssignmentExpression	r = score_map [ ( index + 1 ) & ( ME_MAP_SIZE - 1 ) ]		7147489	2		=			
ANR	7147820	Identifier	r		7147489	0					
ANR	7147821	ArrayIndexing	score_map [ ( index + 1 ) & ( ME_MAP_SIZE - 1 ) ]		7147489	1					
ANR	7147822	Identifier	score_map		7147489	0					
ANR	7147823	BitAndExpression	( index + 1 ) & ( ME_MAP_SIZE - 1 )		7147489	1		&			
ANR	7147824	AdditiveExpression	index + 1		7147489	0		+			
ANR	7147825	Identifier	index		7147489	0					
ANR	7147826	PrimaryExpression	1		7147489	1					
ANR	7147827	AdditiveExpression	ME_MAP_SIZE - 1		7147489	1		-			
ANR	7147828	Identifier	ME_MAP_SIZE		7147489	0					
ANR	7147829	PrimaryExpression	1		7147489	1					
ANR	7147830	IdentifierDeclStatement	const int b = score_map [ ( index + ( 1 << ME_MAP_SHIFT ) ) & ( ME_MAP_SIZE - 1 ) ] ;	93:8:1748:1815	7147489	7	True				
ANR	7147831	IdentifierDecl	b = score_map [ ( index + ( 1 << ME_MAP_SHIFT ) ) & ( ME_MAP_SIZE - 1 ) ]		7147489	0					
ANR	7147832	IdentifierDeclType	const int		7147489	0					
ANR	7147833	Identifier	b		7147489	1					
ANR	7147834	AssignmentExpression	b = score_map [ ( index + ( 1 << ME_MAP_SHIFT ) ) & ( ME_MAP_SIZE - 1 ) ]		7147489	2		=			
ANR	7147835	Identifier	b		7147489	0					
ANR	7147836	ArrayIndexing	score_map [ ( index + ( 1 << ME_MAP_SHIFT ) ) & ( ME_MAP_SIZE - 1 ) ]		7147489	1					
ANR	7147837	Identifier	score_map		7147489	0					
ANR	7147838	BitAndExpression	( index + ( 1 << ME_MAP_SHIFT ) ) & ( ME_MAP_SIZE - 1 )		7147489	1		&			
ANR	7147839	AdditiveExpression	index + ( 1 << ME_MAP_SHIFT )		7147489	0		+			
ANR	7147840	Identifier	index		7147489	0					
ANR	7147841	ShiftExpression	1 << ME_MAP_SHIFT		7147489	1		<<			
ANR	7147842	PrimaryExpression	1		7147489	0					
ANR	7147843	Identifier	ME_MAP_SHIFT		7147489	1					
ANR	7147844	AdditiveExpression	ME_MAP_SIZE - 1		7147489	1		-			
ANR	7147845	Identifier	ME_MAP_SIZE		7147489	0					
ANR	7147846	PrimaryExpression	1		7147489	1					
ANR	7147847	IdentifierDeclStatement	const int c = score_map [ ( index ) & ( ME_MAP_SIZE - 1 ) ] ;	95:8:1826:1893	7147489	8	True				
ANR	7147848	IdentifierDecl	c = score_map [ ( index ) & ( ME_MAP_SIZE - 1 ) ]		7147489	0					
ANR	7147849	IdentifierDeclType	const int		7147489	0					
ANR	7147850	Identifier	c		7147489	1					
ANR	7147851	AssignmentExpression	c = score_map [ ( index ) & ( ME_MAP_SIZE - 1 ) ]		7147489	2		=			
ANR	7147852	Identifier	c		7147489	0					
ANR	7147853	ArrayIndexing	score_map [ ( index ) & ( ME_MAP_SIZE - 1 ) ]		7147489	1					
ANR	7147854	Identifier	score_map		7147489	0					
ANR	7147855	CastExpression	( index ) & ( ME_MAP_SIZE - 1 )		7147489	1					
ANR	7147856	CastTarget	index		7147489	0					
ANR	7147857	UnaryOperationExpression	& ( ME_MAP_SIZE - 1 )		7147489	1					
ANR	7147858	UnaryOperator	&		7147489	0					
ANR	7147859	AdditiveExpression	ME_MAP_SIZE - 1		7147489	1		-			
ANR	7147860	Identifier	ME_MAP_SIZE		7147489	0					
ANR	7147861	PrimaryExpression	1		7147489	1					
ANR	7147862	IdentifierDeclStatement	int best [ 8 ] ;	97:8:1904:1915	7147489	9	True				
ANR	7147863	IdentifierDecl	best [ 8 ]		7147489	0					
ANR	7147864	IdentifierDeclType	int [ 8 ]		7147489	0					
ANR	7147865	Identifier	best		7147489	1					
ANR	7147866	PrimaryExpression	8		7147489	2					
ANR	7147867	Statement	int	99:8:1926:1928	7147489	10	True				
ANR	7147868	ExpressionStatement	best_pos [ 8 ] [ 2 ]	99:12:1930:1944	7147489	11	True				
ANR	7147869	ArrayIndexing	best_pos [ 8 ] [ 2 ]		7147489	0					
ANR	7147870	ArrayIndexing	best_pos [ 8 ]		7147489	0					
ANR	7147871	Identifier	best_pos		7147489	0					
ANR	7147872	PrimaryExpression	8		7147489	1					
ANR	7147873	PrimaryExpression	2		7147489	1					
ANR	7147874	ExpressionStatement	"memset ( best , 64 , sizeof ( int ) * 8 )"	103:8:1965:1996	7147489	12	True				
ANR	7147875	CallExpression	"memset ( best , 64 , sizeof ( int ) * 8 )"		7147489	0					
ANR	7147876	Callee	memset		7147489	0					
ANR	7147877	Identifier	memset		7147489	0					
ANR	7147878	ArgumentList	best		7147489	1					
ANR	7147879	Argument	best		7147489	0					
ANR	7147880	Identifier	best		7147489	0					
ANR	7147881	Argument	64		7147489	1					
ANR	7147882	PrimaryExpression	64		7147489	0					
ANR	7147883	Argument	sizeof ( int ) * 8		7147489	2					
ANR	7147884	MultiplicativeExpression	sizeof ( int ) * 8		7147489	0		*			
ANR	7147885	SizeofExpression	sizeof ( int )		7147489	0					
ANR	7147886	Sizeof	sizeof		7147489	0					
ANR	7147887	SizeofOperand	int		7147489	1					
ANR	7147888	PrimaryExpression	8		7147489	1					
ANR	7147889	IfStatement	if ( s -> me . dia_size >= 2 )		7147489	13					
ANR	7147890	Condition	s -> me . dia_size >= 2	107:11:2017:2033	7147489	0	True				
ANR	7147891	RelationalExpression	s -> me . dia_size >= 2		7147489	0		>=			
ANR	7147892	MemberAccess	s -> me . dia_size		7147489	0					
ANR	7147893	PtrMemberAccess	s -> me		7147489	0					
ANR	7147894	Identifier	s		7147489	0					
ANR	7147895	Identifier	me		7147489	1					
ANR	7147896	Identifier	dia_size		7147489	1					
ANR	7147897	PrimaryExpression	2		7147489	1					
ANR	7147898	CompoundStatement		107:12:2061:2129	7147489	1					
ANR	7147899	IdentifierDeclStatement	const int tl = score_map [ ( index - ( 1 << ME_MAP_SHIFT ) - 1 ) & ( ME_MAP_SIZE - 1 ) ] ;	109:12:2058:2126	7147489	0	True				
ANR	7147900	IdentifierDecl	tl = score_map [ ( index - ( 1 << ME_MAP_SHIFT ) - 1 ) & ( ME_MAP_SIZE - 1 ) ]		7147489	0					
ANR	7147901	IdentifierDeclType	const int		7147489	0					
ANR	7147902	Identifier	tl		7147489	1					
ANR	7147903	AssignmentExpression	tl = score_map [ ( index - ( 1 << ME_MAP_SHIFT ) - 1 ) & ( ME_MAP_SIZE - 1 ) ]		7147489	2		=			
ANR	7147904	Identifier	tl		7147489	0					
ANR	7147905	ArrayIndexing	score_map [ ( index - ( 1 << ME_MAP_SHIFT ) - 1 ) & ( ME_MAP_SIZE - 1 ) ]		7147489	1					
ANR	7147906	Identifier	score_map		7147489	0					
ANR	7147907	BitAndExpression	( index - ( 1 << ME_MAP_SHIFT ) - 1 ) & ( ME_MAP_SIZE - 1 )		7147489	1		&			
ANR	7147908	AdditiveExpression	index - ( 1 << ME_MAP_SHIFT ) - 1		7147489	0		-			
ANR	7147909	Identifier	index		7147489	0					
ANR	7147910	AdditiveExpression	( 1 << ME_MAP_SHIFT ) - 1		7147489	1		-			
ANR	7147911	ShiftExpression	1 << ME_MAP_SHIFT		7147489	0		<<			
ANR	7147912	PrimaryExpression	1		7147489	0					
ANR	7147913	Identifier	ME_MAP_SHIFT		7147489	1					
ANR	7147914	PrimaryExpression	1		7147489	1					
ANR	7147915	AdditiveExpression	ME_MAP_SIZE - 1		7147489	1		-			
ANR	7147916	Identifier	ME_MAP_SIZE		7147489	0					
ANR	7147917	PrimaryExpression	1		7147489	1					
ANR	7147918	IdentifierDeclStatement	const int bl = score_map [ ( index + ( 1 << ME_MAP_SHIFT ) - 1 ) & ( ME_MAP_SIZE - 1 ) ] ;	111:12:2141:2209	7147489	1	True				
ANR	7147919	IdentifierDecl	bl = score_map [ ( index + ( 1 << ME_MAP_SHIFT ) - 1 ) & ( ME_MAP_SIZE - 1 ) ]		7147489	0					
ANR	7147920	IdentifierDeclType	const int		7147489	0					
ANR	7147921	Identifier	bl		7147489	1					
ANR	7147922	AssignmentExpression	bl = score_map [ ( index + ( 1 << ME_MAP_SHIFT ) - 1 ) & ( ME_MAP_SIZE - 1 ) ]		7147489	2		=			
ANR	7147923	Identifier	bl		7147489	0					
ANR	7147924	ArrayIndexing	score_map [ ( index + ( 1 << ME_MAP_SHIFT ) - 1 ) & ( ME_MAP_SIZE - 1 ) ]		7147489	1					
ANR	7147925	Identifier	score_map		7147489	0					
ANR	7147926	BitAndExpression	( index + ( 1 << ME_MAP_SHIFT ) - 1 ) & ( ME_MAP_SIZE - 1 )		7147489	1		&			
ANR	7147927	AdditiveExpression	index + ( 1 << ME_MAP_SHIFT ) - 1		7147489	0		+			
ANR	7147928	Identifier	index		7147489	0					
ANR	7147929	AdditiveExpression	( 1 << ME_MAP_SHIFT ) - 1		7147489	1		-			
ANR	7147930	ShiftExpression	1 << ME_MAP_SHIFT		7147489	0		<<			
ANR	7147931	PrimaryExpression	1		7147489	0					
ANR	7147932	Identifier	ME_MAP_SHIFT		7147489	1					
ANR	7147933	PrimaryExpression	1		7147489	1					
ANR	7147934	AdditiveExpression	ME_MAP_SIZE - 1		7147489	1		-			
ANR	7147935	Identifier	ME_MAP_SIZE		7147489	0					
ANR	7147936	PrimaryExpression	1		7147489	1					
ANR	7147937	IdentifierDeclStatement	const int tr = score_map [ ( index - ( 1 << ME_MAP_SHIFT ) + 1 ) & ( ME_MAP_SIZE - 1 ) ] ;	113:12:2224:2292	7147489	2	True				
ANR	7147938	IdentifierDecl	tr = score_map [ ( index - ( 1 << ME_MAP_SHIFT ) + 1 ) & ( ME_MAP_SIZE - 1 ) ]		7147489	0					
ANR	7147939	IdentifierDeclType	const int		7147489	0					
ANR	7147940	Identifier	tr		7147489	1					
ANR	7147941	AssignmentExpression	tr = score_map [ ( index - ( 1 << ME_MAP_SHIFT ) + 1 ) & ( ME_MAP_SIZE - 1 ) ]		7147489	2		=			
ANR	7147942	Identifier	tr		7147489	0					
ANR	7147943	ArrayIndexing	score_map [ ( index - ( 1 << ME_MAP_SHIFT ) + 1 ) & ( ME_MAP_SIZE - 1 ) ]		7147489	1					
ANR	7147944	Identifier	score_map		7147489	0					
ANR	7147945	BitAndExpression	( index - ( 1 << ME_MAP_SHIFT ) + 1 ) & ( ME_MAP_SIZE - 1 )		7147489	1		&			
ANR	7147946	AdditiveExpression	index - ( 1 << ME_MAP_SHIFT ) + 1		7147489	0		-			
ANR	7147947	Identifier	index		7147489	0					
ANR	7147948	AdditiveExpression	( 1 << ME_MAP_SHIFT ) + 1		7147489	1		+			
ANR	7147949	ShiftExpression	1 << ME_MAP_SHIFT		7147489	0		<<			
ANR	7147950	PrimaryExpression	1		7147489	0					
ANR	7147951	Identifier	ME_MAP_SHIFT		7147489	1					
ANR	7147952	PrimaryExpression	1		7147489	1					
ANR	7147953	AdditiveExpression	ME_MAP_SIZE - 1		7147489	1		-			
ANR	7147954	Identifier	ME_MAP_SIZE		7147489	0					
ANR	7147955	PrimaryExpression	1		7147489	1					
ANR	7147956	IdentifierDeclStatement	const int br = score_map [ ( index + ( 1 << ME_MAP_SHIFT ) + 1 ) & ( ME_MAP_SIZE - 1 ) ] ;	115:12:2307:2375	7147489	3	True				
ANR	7147957	IdentifierDecl	br = score_map [ ( index + ( 1 << ME_MAP_SHIFT ) + 1 ) & ( ME_MAP_SIZE - 1 ) ]		7147489	0					
ANR	7147958	IdentifierDeclType	const int		7147489	0					
ANR	7147959	Identifier	br		7147489	1					
ANR	7147960	AssignmentExpression	br = score_map [ ( index + ( 1 << ME_MAP_SHIFT ) + 1 ) & ( ME_MAP_SIZE - 1 ) ]		7147489	2		=			
ANR	7147961	Identifier	br		7147489	0					
ANR	7147962	ArrayIndexing	score_map [ ( index + ( 1 << ME_MAP_SHIFT ) + 1 ) & ( ME_MAP_SIZE - 1 ) ]		7147489	1					
ANR	7147963	Identifier	score_map		7147489	0					
ANR	7147964	BitAndExpression	( index + ( 1 << ME_MAP_SHIFT ) + 1 ) & ( ME_MAP_SIZE - 1 )		7147489	1		&			
ANR	7147965	AdditiveExpression	index + ( 1 << ME_MAP_SHIFT ) + 1		7147489	0		+			
ANR	7147966	Identifier	index		7147489	0					
ANR	7147967	AdditiveExpression	( 1 << ME_MAP_SHIFT ) + 1		7147489	1		+			
ANR	7147968	ShiftExpression	1 << ME_MAP_SHIFT		7147489	0		<<			
ANR	7147969	PrimaryExpression	1		7147489	0					
ANR	7147970	Identifier	ME_MAP_SHIFT		7147489	1					
ANR	7147971	PrimaryExpression	1		7147489	1					
ANR	7147972	AdditiveExpression	ME_MAP_SIZE - 1		7147489	1		-			
ANR	7147973	Identifier	ME_MAP_SIZE		7147489	0					
ANR	7147974	PrimaryExpression	1		7147489	1					
ANR	7147975	ForStatement	for ( ny = - 3 ; ny <= 3 ; ny ++ )		7147489	4					
ANR	7147976	ForInit	ny = - 3 ;	119:16:2396:2402	7147489	0	True				
ANR	7147977	AssignmentExpression	ny = - 3		7147489	0		=			
ANR	7147978	Identifier	ny		7147489	0					
ANR	7147979	UnaryOperationExpression	- 3		7147489	1					
ANR	7147980	UnaryOperator	-		7147489	0					
ANR	7147981	PrimaryExpression	3		7147489	1					
ANR	7147982	Condition	ny <= 3	119:24:2404:2410	7147489	1	True				
ANR	7147983	RelationalExpression	ny <= 3		7147489	0		<=			
ANR	7147984	Identifier	ny		7147489	0					
ANR	7147985	PrimaryExpression	3		7147489	1					
ANR	7147986	PostIncDecOperationExpression	ny ++	119:33:2413:2416	7147489	2	True				
ANR	7147987	Identifier	ny		7147489	0					
ANR	7147988	IncDec	++		7147489	1					
ANR	7147989	CompoundStatement		111:38:2172:2172	7147489	3					
ANR	7147990	ForStatement	for ( nx = - 3 ; nx <= 3 ; nx ++ )		7147489	0					
ANR	7147991	ForInit	nx = - 3 ;	121:20:2441:2447	7147489	0	True				
ANR	7147992	AssignmentExpression	nx = - 3		7147489	0		=			
ANR	7147993	Identifier	nx		7147489	0					
ANR	7147994	UnaryOperationExpression	- 3		7147489	1					
ANR	7147995	UnaryOperator	-		7147489	0					
ANR	7147996	PrimaryExpression	3		7147489	1					
ANR	7147997	Condition	nx <= 3	121:28:2449:2455	7147489	1	True				
ANR	7147998	RelationalExpression	nx <= 3		7147489	0		<=			
ANR	7147999	Identifier	nx		7147489	0					
ANR	7148000	PrimaryExpression	3		7147489	1					
ANR	7148001	PostIncDecOperationExpression	nx ++	121:37:2458:2461	7147489	2	True				
ANR	7148002	Identifier	nx		7147489	0					
ANR	7148003	IncDec	++		7147489	1					
ANR	7148004	CompoundStatement		123:20:2561:2566	7147489	3					
ANR	7148005	IdentifierDeclStatement	const int t2 = nx * nx * ( tr + tl - 2 * t ) + 4 * nx * ( tr - tl ) + 32 * t ;	123:20:2486:2543	7147489	0	True				
ANR	7148006	IdentifierDecl	t2 = nx * nx * ( tr + tl - 2 * t ) + 4 * nx * ( tr - tl ) + 32 * t		7147489	0					
ANR	7148007	IdentifierDeclType	const int		7147489	0					
ANR	7148008	Identifier	t2		7147489	1					
ANR	7148009	AssignmentExpression	t2 = nx * nx * ( tr + tl - 2 * t ) + 4 * nx * ( tr - tl ) + 32 * t		7147489	2		=			
ANR	7148010	Identifier	t2		7147489	0					
ANR	7148011	AdditiveExpression	nx * nx * ( tr + tl - 2 * t ) + 4 * nx * ( tr - tl ) + 32 * t		7147489	1		+			
ANR	7148012	MultiplicativeExpression	nx * nx * ( tr + tl - 2 * t )		7147489	0		*			
ANR	7148013	Identifier	nx		7147489	0					
ANR	7148014	MultiplicativeExpression	nx * ( tr + tl - 2 * t )		7147489	1		*			
ANR	7148015	Identifier	nx		7147489	0					
ANR	7148016	AdditiveExpression	tr + tl - 2 * t		7147489	1		+			
ANR	7148017	Identifier	tr		7147489	0					
ANR	7148018	AdditiveExpression	tl - 2 * t		7147489	1		-			
ANR	7148019	Identifier	tl		7147489	0					
ANR	7148020	MultiplicativeExpression	2 * t		7147489	1		*			
ANR	7148021	PrimaryExpression	2		7147489	0					
ANR	7148022	Identifier	t		7147489	1					
ANR	7148023	AdditiveExpression	4 * nx * ( tr - tl ) + 32 * t		7147489	1		+			
ANR	7148024	MultiplicativeExpression	4 * nx * ( tr - tl )		7147489	0		*			
ANR	7148025	PrimaryExpression	4		7147489	0					
ANR	7148026	MultiplicativeExpression	nx * ( tr - tl )		7147489	1		*			
ANR	7148027	Identifier	nx		7147489	0					
ANR	7148028	AdditiveExpression	tr - tl		7147489	1		-			
ANR	7148029	Identifier	tr		7147489	0					
ANR	7148030	Identifier	tl		7147489	1					
ANR	7148031	MultiplicativeExpression	32 * t		7147489	1		*			
ANR	7148032	PrimaryExpression	32		7147489	0					
ANR	7148033	Identifier	t		7147489	1					
ANR	7148034	IdentifierDeclStatement	const int c2 = nx * nx * ( r + l - 2 * c ) + 4 * nx * ( r - l ) + 32 * c ;	125:20:2566:2623	7147489	1	True				
ANR	7148035	IdentifierDecl	c2 = nx * nx * ( r + l - 2 * c ) + 4 * nx * ( r - l ) + 32 * c		7147489	0					
ANR	7148036	IdentifierDeclType	const int		7147489	0					
ANR	7148037	Identifier	c2		7147489	1					
ANR	7148038	AssignmentExpression	c2 = nx * nx * ( r + l - 2 * c ) + 4 * nx * ( r - l ) + 32 * c		7147489	2		=			
ANR	7148039	Identifier	c2		7147489	0					
ANR	7148040	AdditiveExpression	nx * nx * ( r + l - 2 * c ) + 4 * nx * ( r - l ) + 32 * c		7147489	1		+			
ANR	7148041	MultiplicativeExpression	nx * nx * ( r + l - 2 * c )		7147489	0		*			
ANR	7148042	Identifier	nx		7147489	0					
ANR	7148043	MultiplicativeExpression	nx * ( r + l - 2 * c )		7147489	1		*			
ANR	7148044	Identifier	nx		7147489	0					
ANR	7148045	AdditiveExpression	r + l - 2 * c		7147489	1		+			
ANR	7148046	Identifier	r		7147489	0					
ANR	7148047	AdditiveExpression	l - 2 * c		7147489	1		-			
ANR	7148048	Identifier	l		7147489	0					
ANR	7148049	MultiplicativeExpression	2 * c		7147489	1		*			
ANR	7148050	PrimaryExpression	2		7147489	0					
ANR	7148051	Identifier	c		7147489	1					
ANR	7148052	AdditiveExpression	4 * nx * ( r - l ) + 32 * c		7147489	1		+			
ANR	7148053	MultiplicativeExpression	4 * nx * ( r - l )		7147489	0		*			
ANR	7148054	PrimaryExpression	4		7147489	0					
ANR	7148055	MultiplicativeExpression	nx * ( r - l )		7147489	1		*			
ANR	7148056	Identifier	nx		7147489	0					
ANR	7148057	AdditiveExpression	r - l		7147489	1		-			
ANR	7148058	Identifier	r		7147489	0					
ANR	7148059	Identifier	l		7147489	1					
ANR	7148060	MultiplicativeExpression	32 * c		7147489	1		*			
ANR	7148061	PrimaryExpression	32		7147489	0					
ANR	7148062	Identifier	c		7147489	1					
ANR	7148063	IdentifierDeclStatement	const int b2 = nx * nx * ( br + bl - 2 * b ) + 4 * nx * ( br - bl ) + 32 * b ;	127:20:2646:2703	7147489	2	True				
ANR	7148064	IdentifierDecl	b2 = nx * nx * ( br + bl - 2 * b ) + 4 * nx * ( br - bl ) + 32 * b		7147489	0					
ANR	7148065	IdentifierDeclType	const int		7147489	0					
ANR	7148066	Identifier	b2		7147489	1					
ANR	7148067	AssignmentExpression	b2 = nx * nx * ( br + bl - 2 * b ) + 4 * nx * ( br - bl ) + 32 * b		7147489	2		=			
ANR	7148068	Identifier	b2		7147489	0					
ANR	7148069	AdditiveExpression	nx * nx * ( br + bl - 2 * b ) + 4 * nx * ( br - bl ) + 32 * b		7147489	1		+			
ANR	7148070	MultiplicativeExpression	nx * nx * ( br + bl - 2 * b )		7147489	0		*			
ANR	7148071	Identifier	nx		7147489	0					
ANR	7148072	MultiplicativeExpression	nx * ( br + bl - 2 * b )		7147489	1		*			
ANR	7148073	Identifier	nx		7147489	0					
ANR	7148074	AdditiveExpression	br + bl - 2 * b		7147489	1		+			
ANR	7148075	Identifier	br		7147489	0					
ANR	7148076	AdditiveExpression	bl - 2 * b		7147489	1		-			
ANR	7148077	Identifier	bl		7147489	0					
ANR	7148078	MultiplicativeExpression	2 * b		7147489	1		*			
ANR	7148079	PrimaryExpression	2		7147489	0					
ANR	7148080	Identifier	b		7147489	1					
ANR	7148081	AdditiveExpression	4 * nx * ( br - bl ) + 32 * b		7147489	1		+			
ANR	7148082	MultiplicativeExpression	4 * nx * ( br - bl )		7147489	0		*			
ANR	7148083	PrimaryExpression	4		7147489	0					
ANR	7148084	MultiplicativeExpression	nx * ( br - bl )		7147489	1		*			
ANR	7148085	Identifier	nx		7147489	0					
ANR	7148086	AdditiveExpression	br - bl		7147489	1		-			
ANR	7148087	Identifier	br		7147489	0					
ANR	7148088	Identifier	bl		7147489	1					
ANR	7148089	MultiplicativeExpression	32 * b		7147489	1		*			
ANR	7148090	PrimaryExpression	32		7147489	0					
ANR	7148091	Identifier	b		7147489	1					
ANR	7148092	IdentifierDeclStatement	int score = ny * ny * ( b2 + t2 - 2 * c2 ) + 4 * ny * ( b2 - t2 ) + 32 * c2 ;	129:20:2726:2784	7147489	3	True				
ANR	7148093	IdentifierDecl	score = ny * ny * ( b2 + t2 - 2 * c2 ) + 4 * ny * ( b2 - t2 ) + 32 * c2		7147489	0					
ANR	7148094	IdentifierDeclType	int		7147489	0					
ANR	7148095	Identifier	score		7147489	1					
ANR	7148096	AssignmentExpression	score = ny * ny * ( b2 + t2 - 2 * c2 ) + 4 * ny * ( b2 - t2 ) + 32 * c2		7147489	2		=			
ANR	7148097	Identifier	score		7147489	0					
ANR	7148098	AdditiveExpression	ny * ny * ( b2 + t2 - 2 * c2 ) + 4 * ny * ( b2 - t2 ) + 32 * c2		7147489	1		+			
ANR	7148099	MultiplicativeExpression	ny * ny * ( b2 + t2 - 2 * c2 )		7147489	0		*			
ANR	7148100	Identifier	ny		7147489	0					
ANR	7148101	MultiplicativeExpression	ny * ( b2 + t2 - 2 * c2 )		7147489	1		*			
ANR	7148102	Identifier	ny		7147489	0					
ANR	7148103	AdditiveExpression	b2 + t2 - 2 * c2		7147489	1		+			
ANR	7148104	Identifier	b2		7147489	0					
ANR	7148105	AdditiveExpression	t2 - 2 * c2		7147489	1		-			
ANR	7148106	Identifier	t2		7147489	0					
ANR	7148107	MultiplicativeExpression	2 * c2		7147489	1		*			
ANR	7148108	PrimaryExpression	2		7147489	0					
ANR	7148109	Identifier	c2		7147489	1					
ANR	7148110	AdditiveExpression	4 * ny * ( b2 - t2 ) + 32 * c2		7147489	1		+			
ANR	7148111	MultiplicativeExpression	4 * ny * ( b2 - t2 )		7147489	0		*			
ANR	7148112	PrimaryExpression	4		7147489	0					
ANR	7148113	MultiplicativeExpression	ny * ( b2 - t2 )		7147489	1		*			
ANR	7148114	Identifier	ny		7147489	0					
ANR	7148115	AdditiveExpression	b2 - t2		7147489	1		-			
ANR	7148116	Identifier	b2		7147489	0					
ANR	7148117	Identifier	t2		7147489	1					
ANR	7148118	MultiplicativeExpression	32 * c2		7147489	1		*			
ANR	7148119	PrimaryExpression	32		7147489	0					
ANR	7148120	Identifier	c2		7147489	1					
ANR	7148121	IdentifierDeclStatement	int i ;	131:20:2807:2812	7147489	4	True				
ANR	7148122	IdentifierDecl	i		7147489	0					
ANR	7148123	IdentifierDeclType	int		7147489	0					
ANR	7148124	Identifier	i		7147489	1					
ANR	7148125	IfStatement	if ( ( nx & 3 ) == 0 && ( ny & 3 ) == 0 )		7147489	5					
ANR	7148126	Condition	( nx & 3 ) == 0 && ( ny & 3 ) == 0	135:23:2860:2881	7147489	0	True				
ANR	7148127	AndExpression	( nx & 3 ) == 0 && ( ny & 3 ) == 0		7147489	0		&&			
ANR	7148128	EqualityExpression	( nx & 3 ) == 0		7147489	0		==			
ANR	7148129	BitAndExpression	nx & 3		7147489	0		&			
ANR	7148130	Identifier	nx		7147489	0					
ANR	7148131	PrimaryExpression	3		7147489	1					
ANR	7148132	PrimaryExpression	0		7147489	1					
ANR	7148133	EqualityExpression	( ny & 3 ) == 0		7147489	1		==			
ANR	7148134	BitAndExpression	ny & 3		7147489	0		&			
ANR	7148135	Identifier	ny		7147489	0					
ANR	7148136	PrimaryExpression	3		7147489	1					
ANR	7148137	PrimaryExpression	0		7147489	1					
ANR	7148138	ContinueStatement	continue ;	135:47:2884:2892	7147489	1	True				
ANR	7148139	ExpressionStatement	score += 1024 * ( mv_penalty [ 4 * mx + nx - pred_x ] + mv_penalty [ 4 * my + ny - pred_y ] ) * penalty_factor	139:20:2937:3031	7147489	6	True				
ANR	7148140	AssignmentExpression	score += 1024 * ( mv_penalty [ 4 * mx + nx - pred_x ] + mv_penalty [ 4 * my + ny - pred_y ] ) * penalty_factor		7147489	0		+=			
ANR	7148141	Identifier	score		7147489	0					
ANR	7148142	MultiplicativeExpression	1024 * ( mv_penalty [ 4 * mx + nx - pred_x ] + mv_penalty [ 4 * my + ny - pred_y ] ) * penalty_factor		7147489	1		*			
ANR	7148143	PrimaryExpression	1024		7147489	0					
ANR	7148144	MultiplicativeExpression	( mv_penalty [ 4 * mx + nx - pred_x ] + mv_penalty [ 4 * my + ny - pred_y ] ) * penalty_factor		7147489	1		*			
ANR	7148145	AdditiveExpression	mv_penalty [ 4 * mx + nx - pred_x ] + mv_penalty [ 4 * my + ny - pred_y ]		7147489	0		+			
ANR	7148146	ArrayIndexing	mv_penalty [ 4 * mx + nx - pred_x ]		7147489	0					
ANR	7148147	Identifier	mv_penalty		7147489	0					
ANR	7148148	AdditiveExpression	4 * mx + nx - pred_x		7147489	1		+			
ANR	7148149	MultiplicativeExpression	4 * mx		7147489	0		*			
ANR	7148150	PrimaryExpression	4		7147489	0					
ANR	7148151	Identifier	mx		7147489	1					
ANR	7148152	AdditiveExpression	nx - pred_x		7147489	1		-			
ANR	7148153	Identifier	nx		7147489	0					
ANR	7148154	Identifier	pred_x		7147489	1					
ANR	7148155	ArrayIndexing	mv_penalty [ 4 * my + ny - pred_y ]		7147489	1					
ANR	7148156	Identifier	mv_penalty		7147489	0					
ANR	7148157	AdditiveExpression	4 * my + ny - pred_y		7147489	1		+			
ANR	7148158	MultiplicativeExpression	4 * my		7147489	0		*			
ANR	7148159	PrimaryExpression	4		7147489	0					
ANR	7148160	Identifier	my		7147489	1					
ANR	7148161	AdditiveExpression	ny - pred_y		7147489	1		-			
ANR	7148162	Identifier	ny		7147489	0					
ANR	7148163	Identifier	pred_y		7147489	1					
ANR	7148164	Identifier	penalty_factor		7147489	1					
ANR	7148165	ForStatement	for ( i = 0 ; i < 8 ; i ++ )		7147489	7					
ANR	7148166	ForInit	i = 0 ;	149:24:3228:3231	7147489	0	True				
ANR	7148167	AssignmentExpression	i = 0		7147489	0		=			
ANR	7148168	Identifier	i		7147489	0					
ANR	7148169	PrimaryExpression	0		7147489	1					
ANR	7148170	Condition	i < 8	149:29:3233:3235	7147489	1	True				
ANR	7148171	RelationalExpression	i < 8		7147489	0		<			
ANR	7148172	Identifier	i		7147489	0					
ANR	7148173	PrimaryExpression	8		7147489	1					
ANR	7148174	PostIncDecOperationExpression	i ++	149:34:3238:3240	7147489	2	True				
ANR	7148175	Identifier	i		7147489	0					
ANR	7148176	IncDec	++		7147489	1					
ANR	7148177	CompoundStatement		141:38:2996:2996	7147489	3					
ANR	7148178	IfStatement	if ( score < best [ i ] )		7147489	0					
ANR	7148179	Condition	score < best [ i ]	151:27:3272:3286	7147489	0	True				
ANR	7148180	RelationalExpression	score < best [ i ]		7147489	0		<			
ANR	7148181	Identifier	score		7147489	0					
ANR	7148182	ArrayIndexing	best [ i ]		7147489	1					
ANR	7148183	Identifier	best		7147489	0					
ANR	7148184	Identifier	i		7147489	1					
ANR	7148185	CompoundStatement		143:43:3042:3042	7147489	1					
ANR	7148186	ExpressionStatement	"memmove ( & best [ i + 1 ] , & best [ i ] , sizeof ( int ) * ( 7 - i ) )"	153:28:3319:3367	7147489	0	True				
ANR	7148187	CallExpression	"memmove ( & best [ i + 1 ] , & best [ i ] , sizeof ( int ) * ( 7 - i ) )"		7147489	0					
ANR	7148188	Callee	memmove		7147489	0					
ANR	7148189	Identifier	memmove		7147489	0					
ANR	7148190	ArgumentList	& best [ i + 1 ]		7147489	1					
ANR	7148191	Argument	& best [ i + 1 ]		7147489	0					
ANR	7148192	UnaryOperationExpression	& best [ i + 1 ]		7147489	0					
ANR	7148193	UnaryOperator	&		7147489	0					
ANR	7148194	ArrayIndexing	best [ i + 1 ]		7147489	1					
ANR	7148195	Identifier	best		7147489	0					
ANR	7148196	AdditiveExpression	i + 1		7147489	1		+			
ANR	7148197	Identifier	i		7147489	0					
ANR	7148198	PrimaryExpression	1		7147489	1					
ANR	7148199	Argument	& best [ i ]		7147489	1					
ANR	7148200	UnaryOperationExpression	& best [ i ]		7147489	0					
ANR	7148201	UnaryOperator	&		7147489	0					
ANR	7148202	ArrayIndexing	best [ i ]		7147489	1					
ANR	7148203	Identifier	best		7147489	0					
ANR	7148204	Identifier	i		7147489	1					
ANR	7148205	Argument	sizeof ( int ) * ( 7 - i )		7147489	2					
ANR	7148206	MultiplicativeExpression	sizeof ( int ) * ( 7 - i )		7147489	0		*			
ANR	7148207	SizeofExpression	sizeof ( int )		7147489	0					
ANR	7148208	Sizeof	sizeof		7147489	0					
ANR	7148209	SizeofOperand	int		7147489	1					
ANR	7148210	AdditiveExpression	7 - i		7147489	1		-			
ANR	7148211	PrimaryExpression	7		7147489	0					
ANR	7148212	Identifier	i		7147489	1					
ANR	7148213	ExpressionStatement	"memmove ( & best_pos [ i + 1 ] [ 0 ] , & best_pos [ i ] [ 0 ] , sizeof ( int ) * 2 * ( 7 - i ) )"	155:28:3398:3462	7147489	1	True				
ANR	7148214	CallExpression	"memmove ( & best_pos [ i + 1 ] [ 0 ] , & best_pos [ i ] [ 0 ] , sizeof ( int ) * 2 * ( 7 - i ) )"		7147489	0					
ANR	7148215	Callee	memmove		7147489	0					
ANR	7148216	Identifier	memmove		7147489	0					
ANR	7148217	ArgumentList	& best_pos [ i + 1 ] [ 0 ]		7147489	1					
ANR	7148218	Argument	& best_pos [ i + 1 ] [ 0 ]		7147489	0					
ANR	7148219	UnaryOperationExpression	& best_pos [ i + 1 ] [ 0 ]		7147489	0					
ANR	7148220	UnaryOperator	&		7147489	0					
ANR	7148221	ArrayIndexing	best_pos [ i + 1 ] [ 0 ]		7147489	1					
ANR	7148222	ArrayIndexing	best_pos [ i + 1 ]		7147489	0					
ANR	7148223	Identifier	best_pos		7147489	0					
ANR	7148224	AdditiveExpression	i + 1		7147489	1		+			
ANR	7148225	Identifier	i		7147489	0					
ANR	7148226	PrimaryExpression	1		7147489	1					
ANR	7148227	PrimaryExpression	0		7147489	1					
ANR	7148228	Argument	& best_pos [ i ] [ 0 ]		7147489	1					
ANR	7148229	UnaryOperationExpression	& best_pos [ i ] [ 0 ]		7147489	0					
ANR	7148230	UnaryOperator	&		7147489	0					
ANR	7148231	ArrayIndexing	best_pos [ i ] [ 0 ]		7147489	1					
ANR	7148232	ArrayIndexing	best_pos [ i ]		7147489	0					
ANR	7148233	Identifier	best_pos		7147489	0					
ANR	7148234	Identifier	i		7147489	1					
ANR	7148235	PrimaryExpression	0		7147489	1					
ANR	7148236	Argument	sizeof ( int ) * 2 * ( 7 - i )		7147489	2					
ANR	7148237	MultiplicativeExpression	sizeof ( int ) * 2 * ( 7 - i )		7147489	0		*			
ANR	7148238	SizeofExpression	sizeof ( int )		7147489	0					
ANR	7148239	Sizeof	sizeof		7147489	0					
ANR	7148240	SizeofOperand	int		7147489	1					
ANR	7148241	MultiplicativeExpression	2 * ( 7 - i )		7147489	1		*			
ANR	7148242	PrimaryExpression	2		7147489	0					
ANR	7148243	AdditiveExpression	7 - i		7147489	1		-			
ANR	7148244	PrimaryExpression	7		7147489	0					
ANR	7148245	Identifier	i		7147489	1					
ANR	7148246	ExpressionStatement	best [ i ] = score	157:28:3493:3507	7147489	2	True				
ANR	7148247	AssignmentExpression	best [ i ] = score		7147489	0		=			
ANR	7148248	ArrayIndexing	best [ i ]		7147489	0					
ANR	7148249	Identifier	best		7147489	0					
ANR	7148250	Identifier	i		7147489	1					
ANR	7148251	Identifier	score		7147489	1					
ANR	7148252	ExpressionStatement	best_pos [ i ] [ 0 ] = nx + 4 * mx	159:28:3538:3563	7147489	3	True				
ANR	7148253	AssignmentExpression	best_pos [ i ] [ 0 ] = nx + 4 * mx		7147489	0		=			
ANR	7148254	ArrayIndexing	best_pos [ i ] [ 0 ]		7147489	0					
ANR	7148255	ArrayIndexing	best_pos [ i ]		7147489	0					
ANR	7148256	Identifier	best_pos		7147489	0					
ANR	7148257	Identifier	i		7147489	1					
ANR	7148258	PrimaryExpression	0		7147489	1					
ANR	7148259	AdditiveExpression	nx + 4 * mx		7147489	1		+			
ANR	7148260	Identifier	nx		7147489	0					
ANR	7148261	MultiplicativeExpression	4 * mx		7147489	1		*			
ANR	7148262	PrimaryExpression	4		7147489	0					
ANR	7148263	Identifier	mx		7147489	1					
ANR	7148264	ExpressionStatement	best_pos [ i ] [ 1 ] = ny + 4 * my	161:28:3594:3619	7147489	4	True				
ANR	7148265	AssignmentExpression	best_pos [ i ] [ 1 ] = ny + 4 * my		7147489	0		=			
ANR	7148266	ArrayIndexing	best_pos [ i ] [ 1 ]		7147489	0					
ANR	7148267	ArrayIndexing	best_pos [ i ]		7147489	0					
ANR	7148268	Identifier	best_pos		7147489	0					
ANR	7148269	Identifier	i		7147489	1					
ANR	7148270	PrimaryExpression	1		7147489	1					
ANR	7148271	AdditiveExpression	ny + 4 * my		7147489	1		+			
ANR	7148272	Identifier	ny		7147489	0					
ANR	7148273	MultiplicativeExpression	4 * my		7147489	1		*			
ANR	7148274	PrimaryExpression	4		7147489	0					
ANR	7148275	Identifier	my		7147489	1					
ANR	7148276	BreakStatement	break ;	163:28:3650:3655	7147489	5	True				
ANR	7148277	ElseStatement	else		7147489	0					
ANR	7148278	CompoundStatement		177:12:3706:3713	7147489	0					
ANR	7148279	IdentifierDeclStatement	int tl ;	175:12:3770:3776	7147489	0	True				
ANR	7148280	IdentifierDecl	tl		7147489	0					
ANR	7148281	IdentifierDeclType	int		7147489	0					
ANR	7148282	Identifier	tl		7147489	1					
ANR	7148283	IdentifierDeclStatement	const int cx = 4 * ( r - l ) ;	177:12:3791:3815	7147489	1	True				
ANR	7148284	IdentifierDecl	cx = 4 * ( r - l )		7147489	0					
ANR	7148285	IdentifierDeclType	const int		7147489	0					
ANR	7148286	Identifier	cx		7147489	1					
ANR	7148287	AssignmentExpression	cx = 4 * ( r - l )		7147489	2		=			
ANR	7148288	Identifier	cx		7147489	0					
ANR	7148289	MultiplicativeExpression	4 * ( r - l )		7147489	1		*			
ANR	7148290	PrimaryExpression	4		7147489	0					
ANR	7148291	AdditiveExpression	r - l		7147489	1		-			
ANR	7148292	Identifier	r		7147489	0					
ANR	7148293	Identifier	l		7147489	1					
ANR	7148294	IdentifierDeclStatement	const int cx2 = r + l - 2 * c ;	179:12:3830:3856	7147489	2	True				
ANR	7148295	IdentifierDecl	cx2 = r + l - 2 * c		7147489	0					
ANR	7148296	IdentifierDeclType	const int		7147489	0					
ANR	7148297	Identifier	cx2		7147489	1					
ANR	7148298	AssignmentExpression	cx2 = r + l - 2 * c		7147489	2		=			
ANR	7148299	Identifier	cx2		7147489	0					
ANR	7148300	AdditiveExpression	r + l - 2 * c		7147489	1		+			
ANR	7148301	Identifier	r		7147489	0					
ANR	7148302	AdditiveExpression	l - 2 * c		7147489	1		-			
ANR	7148303	Identifier	l		7147489	0					
ANR	7148304	MultiplicativeExpression	2 * c		7147489	1		*			
ANR	7148305	PrimaryExpression	2		7147489	0					
ANR	7148306	Identifier	c		7147489	1					
ANR	7148307	IdentifierDeclStatement	const int cy = 4 * ( b - t ) ;	181:12:3872:3896	7147489	3	True				
ANR	7148308	IdentifierDecl	cy = 4 * ( b - t )		7147489	0					
ANR	7148309	IdentifierDeclType	const int		7147489	0					
ANR	7148310	Identifier	cy		7147489	1					
ANR	7148311	AssignmentExpression	cy = 4 * ( b - t )		7147489	2		=			
ANR	7148312	Identifier	cy		7147489	0					
ANR	7148313	MultiplicativeExpression	4 * ( b - t )		7147489	1		*			
ANR	7148314	PrimaryExpression	4		7147489	0					
ANR	7148315	AdditiveExpression	b - t		7147489	1		-			
ANR	7148316	Identifier	b		7147489	0					
ANR	7148317	Identifier	t		7147489	1					
ANR	7148318	IdentifierDeclStatement	const int cy2 = b + t - 2 * c ;	183:12:3911:3937	7147489	4	True				
ANR	7148319	IdentifierDecl	cy2 = b + t - 2 * c		7147489	0					
ANR	7148320	IdentifierDeclType	const int		7147489	0					
ANR	7148321	Identifier	cy2		7147489	1					
ANR	7148322	AssignmentExpression	cy2 = b + t - 2 * c		7147489	2		=			
ANR	7148323	Identifier	cy2		7147489	0					
ANR	7148324	AdditiveExpression	b + t - 2 * c		7147489	1		+			
ANR	7148325	Identifier	b		7147489	0					
ANR	7148326	AdditiveExpression	t - 2 * c		7147489	1		-			
ANR	7148327	Identifier	t		7147489	0					
ANR	7148328	MultiplicativeExpression	2 * c		7147489	1		*			
ANR	7148329	PrimaryExpression	2		7147489	0					
ANR	7148330	Identifier	c		7147489	1					
ANR	7148331	IdentifierDeclStatement	int cxy ;	185:12:3952:3959	7147489	5	True				
ANR	7148332	IdentifierDecl	cxy		7147489	0					
ANR	7148333	IdentifierDeclType	int		7147489	0					
ANR	7148334	Identifier	cxy		7147489	1					
ANR	7148335	IfStatement	if ( map [ ( index - ( 1 << ME_MAP_SHIFT ) - 1 ) & ( ME_MAP_SIZE - 1 ) ] == ( my << ME_MAP_MV_BITS ) + mx + map_generation && 0 )		7147489	6					
ANR	7148336	Condition	map [ ( index - ( 1 << ME_MAP_SHIFT ) - 1 ) & ( ME_MAP_SIZE - 1 ) ] == ( my << ME_MAP_MV_BITS ) + mx + map_generation && 0	189:15:3993:4091	7147489	0	True				
ANR	7148337	AndExpression	map [ ( index - ( 1 << ME_MAP_SHIFT ) - 1 ) & ( ME_MAP_SIZE - 1 ) ] == ( my << ME_MAP_MV_BITS ) + mx + map_generation && 0		7147489	0		&&			
ANR	7148338	EqualityExpression	map [ ( index - ( 1 << ME_MAP_SHIFT ) - 1 ) & ( ME_MAP_SIZE - 1 ) ] == ( my << ME_MAP_MV_BITS ) + mx + map_generation		7147489	0		==			
ANR	7148339	ArrayIndexing	map [ ( index - ( 1 << ME_MAP_SHIFT ) - 1 ) & ( ME_MAP_SIZE - 1 ) ]		7147489	0					
ANR	7148340	Identifier	map		7147489	0					
ANR	7148341	BitAndExpression	( index - ( 1 << ME_MAP_SHIFT ) - 1 ) & ( ME_MAP_SIZE - 1 )		7147489	1		&			
ANR	7148342	AdditiveExpression	index - ( 1 << ME_MAP_SHIFT ) - 1		7147489	0		-			
ANR	7148343	Identifier	index		7147489	0					
ANR	7148344	AdditiveExpression	( 1 << ME_MAP_SHIFT ) - 1		7147489	1		-			
ANR	7148345	ShiftExpression	1 << ME_MAP_SHIFT		7147489	0		<<			
ANR	7148346	PrimaryExpression	1		7147489	0					
ANR	7148347	Identifier	ME_MAP_SHIFT		7147489	1					
ANR	7148348	PrimaryExpression	1		7147489	1					
ANR	7148349	AdditiveExpression	ME_MAP_SIZE - 1		7147489	1		-			
ANR	7148350	Identifier	ME_MAP_SIZE		7147489	0					
ANR	7148351	PrimaryExpression	1		7147489	1					
ANR	7148352	AdditiveExpression	( my << ME_MAP_MV_BITS ) + mx + map_generation		7147489	1		+			
ANR	7148353	ShiftExpression	my << ME_MAP_MV_BITS		7147489	0		<<			
ANR	7148354	Identifier	my		7147489	0					
ANR	7148355	Identifier	ME_MAP_MV_BITS		7147489	1					
ANR	7148356	AdditiveExpression	mx + map_generation		7147489	1		+			
ANR	7148357	Identifier	mx		7147489	0					
ANR	7148358	Identifier	map_generation		7147489	1					
ANR	7148359	PrimaryExpression	0		7147489	1					
ANR	7148360	CompoundStatement		181:115:3847:3847	7147489	1					
ANR	7148361	ExpressionStatement	tl = score_map [ ( index - ( 1 << ME_MAP_SHIFT ) - 1 ) & ( ME_MAP_SIZE - 1 ) ]	191:16:4120:4178	7147489	0	True				
ANR	7148362	AssignmentExpression	tl = score_map [ ( index - ( 1 << ME_MAP_SHIFT ) - 1 ) & ( ME_MAP_SIZE - 1 ) ]		7147489	0		=			
ANR	7148363	Identifier	tl		7147489	0					
ANR	7148364	ArrayIndexing	score_map [ ( index - ( 1 << ME_MAP_SHIFT ) - 1 ) & ( ME_MAP_SIZE - 1 ) ]		7147489	1					
ANR	7148365	Identifier	score_map		7147489	0					
ANR	7148366	BitAndExpression	( index - ( 1 << ME_MAP_SHIFT ) - 1 ) & ( ME_MAP_SIZE - 1 )		7147489	1		&			
ANR	7148367	AdditiveExpression	index - ( 1 << ME_MAP_SHIFT ) - 1		7147489	0		-			
ANR	7148368	Identifier	index		7147489	0					
ANR	7148369	AdditiveExpression	( 1 << ME_MAP_SHIFT ) - 1		7147489	1		-			
ANR	7148370	ShiftExpression	1 << ME_MAP_SHIFT		7147489	0		<<			
ANR	7148371	PrimaryExpression	1		7147489	0					
ANR	7148372	Identifier	ME_MAP_SHIFT		7147489	1					
ANR	7148373	PrimaryExpression	1		7147489	1					
ANR	7148374	AdditiveExpression	ME_MAP_SIZE - 1		7147489	1		-			
ANR	7148375	Identifier	ME_MAP_SIZE		7147489	0					
ANR	7148376	PrimaryExpression	1		7147489	1					
ANR	7148377	ElseStatement	else		7147489	0					
ANR	7148378	CompoundStatement		185:17:3952:3952	7147489	0					
ANR	7148379	ExpressionStatement	"tl = cmp ( s , mx - 1 , my - 1 , 0 , 0 , size , h , ref_index , src_index , cmpf , chroma_cmpf , flags )"	195:16:4217:4302	7147489	0	True				
ANR	7148380	AssignmentExpression	"tl = cmp ( s , mx - 1 , my - 1 , 0 , 0 , size , h , ref_index , src_index , cmpf , chroma_cmpf , flags )"		7147489	0		=			
ANR	7148381	Identifier	tl		7147489	0					
ANR	7148382	CallExpression	"cmp ( s , mx - 1 , my - 1 , 0 , 0 , size , h , ref_index , src_index , cmpf , chroma_cmpf , flags )"		7147489	1					
ANR	7148383	Callee	cmp		7147489	0					
ANR	7148384	Identifier	cmp		7147489	0					
ANR	7148385	ArgumentList	s		7147489	1					
ANR	7148386	Argument	s		7147489	0					
ANR	7148387	Identifier	s		7147489	0					
ANR	7148388	Argument	mx - 1		7147489	1					
ANR	7148389	AdditiveExpression	mx - 1		7147489	0		-			
ANR	7148390	Identifier	mx		7147489	0					
ANR	7148391	PrimaryExpression	1		7147489	1					
ANR	7148392	Argument	my - 1		7147489	2					
ANR	7148393	AdditiveExpression	my - 1		7147489	0		-			
ANR	7148394	Identifier	my		7147489	0					
ANR	7148395	PrimaryExpression	1		7147489	1					
ANR	7148396	Argument	0		7147489	3					
ANR	7148397	PrimaryExpression	0		7147489	0					
ANR	7148398	Argument	0		7147489	4					
ANR	7148399	PrimaryExpression	0		7147489	0					
ANR	7148400	Argument	size		7147489	5					
ANR	7148401	Identifier	size		7147489	0					
ANR	7148402	Argument	h		7147489	6					
ANR	7148403	Identifier	h		7147489	0					
ANR	7148404	Argument	ref_index		7147489	7					
ANR	7148405	Identifier	ref_index		7147489	0					
ANR	7148406	Argument	src_index		7147489	8					
ANR	7148407	Identifier	src_index		7147489	0					
ANR	7148408	Argument	cmpf		7147489	9					
ANR	7148409	Identifier	cmpf		7147489	0					
ANR	7148410	Argument	chroma_cmpf		7147489	10					
ANR	7148411	Identifier	chroma_cmpf		7147489	0					
ANR	7148412	Argument	flags		7147489	11					
ANR	7148413	Identifier	flags		7147489	0					
ANR	7148414	ExpressionStatement	cxy = 2 * tl + ( cx + cy ) / 4 - ( cx2 + cy2 ) - 2 * c	201:12:4385:4428	7147489	7	True				
ANR	7148415	AssignmentExpression	cxy = 2 * tl + ( cx + cy ) / 4 - ( cx2 + cy2 ) - 2 * c		7147489	0		=			
ANR	7148416	Identifier	cxy		7147489	0					
ANR	7148417	AdditiveExpression	2 * tl + ( cx + cy ) / 4 - ( cx2 + cy2 ) - 2 * c		7147489	1		+			
ANR	7148418	MultiplicativeExpression	2 * tl		7147489	0		*			
ANR	7148419	PrimaryExpression	2		7147489	0					
ANR	7148420	Identifier	tl		7147489	1					
ANR	7148421	AdditiveExpression	( cx + cy ) / 4 - ( cx2 + cy2 ) - 2 * c		7147489	1		-			
ANR	7148422	MultiplicativeExpression	( cx + cy ) / 4		7147489	0		/			
ANR	7148423	AdditiveExpression	cx + cy		7147489	0		+			
ANR	7148424	Identifier	cx		7147489	0					
ANR	7148425	Identifier	cy		7147489	1					
ANR	7148426	PrimaryExpression	4		7147489	1					
ANR	7148427	AdditiveExpression	( cx2 + cy2 ) - 2 * c		7147489	1		-			
ANR	7148428	AdditiveExpression	cx2 + cy2		7147489	0		+			
ANR	7148429	Identifier	cx2		7147489	0					
ANR	7148430	Identifier	cy2		7147489	1					
ANR	7148431	MultiplicativeExpression	2 * c		7147489	1		*			
ANR	7148432	PrimaryExpression	2		7147489	0					
ANR	7148433	Identifier	c		7147489	1					
ANR	7148434	ExpressionStatement	assert ( 16 * cx2 + 4 * cx + 32 * c == 32 * r )	205:12:4457:4493	7147489	8	True				
ANR	7148435	CallExpression	assert ( 16 * cx2 + 4 * cx + 32 * c == 32 * r )		7147489	0					
ANR	7148436	Callee	assert		7147489	0					
ANR	7148437	Identifier	assert		7147489	0					
ANR	7148438	ArgumentList	16 * cx2 + 4 * cx + 32 * c == 32 * r		7147489	1					
ANR	7148439	Argument	16 * cx2 + 4 * cx + 32 * c == 32 * r		7147489	0					
ANR	7148440	EqualityExpression	16 * cx2 + 4 * cx + 32 * c == 32 * r		7147489	0		==			
ANR	7148441	AdditiveExpression	16 * cx2 + 4 * cx + 32 * c		7147489	0		+			
ANR	7148442	MultiplicativeExpression	16 * cx2		7147489	0		*			
ANR	7148443	PrimaryExpression	16		7147489	0					
ANR	7148444	Identifier	cx2		7147489	1					
ANR	7148445	AdditiveExpression	4 * cx + 32 * c		7147489	1		+			
ANR	7148446	MultiplicativeExpression	4 * cx		7147489	0		*			
ANR	7148447	PrimaryExpression	4		7147489	0					
ANR	7148448	Identifier	cx		7147489	1					
ANR	7148449	MultiplicativeExpression	32 * c		7147489	1		*			
ANR	7148450	PrimaryExpression	32		7147489	0					
ANR	7148451	Identifier	c		7147489	1					
ANR	7148452	MultiplicativeExpression	32 * r		7147489	1		*			
ANR	7148453	PrimaryExpression	32		7147489	0					
ANR	7148454	Identifier	r		7147489	1					
ANR	7148455	ExpressionStatement	assert ( 16 * cx2 - 4 * cx + 32 * c == 32 * l )	207:12:4508:4544	7147489	9	True				
ANR	7148456	CallExpression	assert ( 16 * cx2 - 4 * cx + 32 * c == 32 * l )		7147489	0					
ANR	7148457	Callee	assert		7147489	0					
ANR	7148458	Identifier	assert		7147489	0					
ANR	7148459	ArgumentList	16 * cx2 - 4 * cx + 32 * c == 32 * l		7147489	1					
ANR	7148460	Argument	16 * cx2 - 4 * cx + 32 * c == 32 * l		7147489	0					
ANR	7148461	EqualityExpression	16 * cx2 - 4 * cx + 32 * c == 32 * l		7147489	0		==			
ANR	7148462	AdditiveExpression	16 * cx2 - 4 * cx + 32 * c		7147489	0		-			
ANR	7148463	MultiplicativeExpression	16 * cx2		7147489	0		*			
ANR	7148464	PrimaryExpression	16		7147489	0					
ANR	7148465	Identifier	cx2		7147489	1					
ANR	7148466	AdditiveExpression	4 * cx + 32 * c		7147489	1		+			
ANR	7148467	MultiplicativeExpression	4 * cx		7147489	0		*			
ANR	7148468	PrimaryExpression	4		7147489	0					
ANR	7148469	Identifier	cx		7147489	1					
ANR	7148470	MultiplicativeExpression	32 * c		7147489	1		*			
ANR	7148471	PrimaryExpression	32		7147489	0					
ANR	7148472	Identifier	c		7147489	1					
ANR	7148473	MultiplicativeExpression	32 * l		7147489	1		*			
ANR	7148474	PrimaryExpression	32		7147489	0					
ANR	7148475	Identifier	l		7147489	1					
ANR	7148476	ExpressionStatement	assert ( 16 * cy2 + 4 * cy + 32 * c == 32 * b )	209:12:4559:4595	7147489	10	True				
ANR	7148477	CallExpression	assert ( 16 * cy2 + 4 * cy + 32 * c == 32 * b )		7147489	0					
ANR	7148478	Callee	assert		7147489	0					
ANR	7148479	Identifier	assert		7147489	0					
ANR	7148480	ArgumentList	16 * cy2 + 4 * cy + 32 * c == 32 * b		7147489	1					
ANR	7148481	Argument	16 * cy2 + 4 * cy + 32 * c == 32 * b		7147489	0					
ANR	7148482	EqualityExpression	16 * cy2 + 4 * cy + 32 * c == 32 * b		7147489	0		==			
ANR	7148483	AdditiveExpression	16 * cy2 + 4 * cy + 32 * c		7147489	0		+			
ANR	7148484	MultiplicativeExpression	16 * cy2		7147489	0		*			
ANR	7148485	PrimaryExpression	16		7147489	0					
ANR	7148486	Identifier	cy2		7147489	1					
ANR	7148487	AdditiveExpression	4 * cy + 32 * c		7147489	1		+			
ANR	7148488	MultiplicativeExpression	4 * cy		7147489	0		*			
ANR	7148489	PrimaryExpression	4		7147489	0					
ANR	7148490	Identifier	cy		7147489	1					
ANR	7148491	MultiplicativeExpression	32 * c		7147489	1		*			
ANR	7148492	PrimaryExpression	32		7147489	0					
ANR	7148493	Identifier	c		7147489	1					
ANR	7148494	MultiplicativeExpression	32 * b		7147489	1		*			
ANR	7148495	PrimaryExpression	32		7147489	0					
ANR	7148496	Identifier	b		7147489	1					
ANR	7148497	ExpressionStatement	assert ( 16 * cy2 - 4 * cy + 32 * c == 32 * t )	211:12:4610:4646	7147489	11	True				
ANR	7148498	CallExpression	assert ( 16 * cy2 - 4 * cy + 32 * c == 32 * t )		7147489	0					
ANR	7148499	Callee	assert		7147489	0					
ANR	7148500	Identifier	assert		7147489	0					
ANR	7148501	ArgumentList	16 * cy2 - 4 * cy + 32 * c == 32 * t		7147489	1					
ANR	7148502	Argument	16 * cy2 - 4 * cy + 32 * c == 32 * t		7147489	0					
ANR	7148503	EqualityExpression	16 * cy2 - 4 * cy + 32 * c == 32 * t		7147489	0		==			
ANR	7148504	AdditiveExpression	16 * cy2 - 4 * cy + 32 * c		7147489	0		-			
ANR	7148505	MultiplicativeExpression	16 * cy2		7147489	0		*			
ANR	7148506	PrimaryExpression	16		7147489	0					
ANR	7148507	Identifier	cy2		7147489	1					
ANR	7148508	AdditiveExpression	4 * cy + 32 * c		7147489	1		+			
ANR	7148509	MultiplicativeExpression	4 * cy		7147489	0		*			
ANR	7148510	PrimaryExpression	4		7147489	0					
ANR	7148511	Identifier	cy		7147489	1					
ANR	7148512	MultiplicativeExpression	32 * c		7147489	1		*			
ANR	7148513	PrimaryExpression	32		7147489	0					
ANR	7148514	Identifier	c		7147489	1					
ANR	7148515	MultiplicativeExpression	32 * t		7147489	1		*			
ANR	7148516	PrimaryExpression	32		7147489	0					
ANR	7148517	Identifier	t		7147489	1					
ANR	7148518	ExpressionStatement	assert ( 16 * cxy + 16 * cy2 + 16 * cx2 - 4 * cy - 4 * cx + 32 * c == 32 * tl )	213:12:4661:4723	7147489	12	True				
ANR	7148519	CallExpression	assert ( 16 * cxy + 16 * cy2 + 16 * cx2 - 4 * cy - 4 * cx + 32 * c == 32 * tl )		7147489	0					
ANR	7148520	Callee	assert		7147489	0					
ANR	7148521	Identifier	assert		7147489	0					
ANR	7148522	ArgumentList	16 * cxy + 16 * cy2 + 16 * cx2 - 4 * cy - 4 * cx + 32 * c == 32 * tl		7147489	1					
ANR	7148523	Argument	16 * cxy + 16 * cy2 + 16 * cx2 - 4 * cy - 4 * cx + 32 * c == 32 * tl		7147489	0					
ANR	7148524	EqualityExpression	16 * cxy + 16 * cy2 + 16 * cx2 - 4 * cy - 4 * cx + 32 * c == 32 * tl		7147489	0		==			
ANR	7148525	AdditiveExpression	16 * cxy + 16 * cy2 + 16 * cx2 - 4 * cy - 4 * cx + 32 * c		7147489	0		+			
ANR	7148526	MultiplicativeExpression	16 * cxy		7147489	0		*			
ANR	7148527	PrimaryExpression	16		7147489	0					
ANR	7148528	Identifier	cxy		7147489	1					
ANR	7148529	AdditiveExpression	16 * cy2 + 16 * cx2 - 4 * cy - 4 * cx + 32 * c		7147489	1		+			
ANR	7148530	MultiplicativeExpression	16 * cy2		7147489	0		*			
ANR	7148531	PrimaryExpression	16		7147489	0					
ANR	7148532	Identifier	cy2		7147489	1					
ANR	7148533	AdditiveExpression	16 * cx2 - 4 * cy - 4 * cx + 32 * c		7147489	1		-			
ANR	7148534	MultiplicativeExpression	16 * cx2		7147489	0		*			
ANR	7148535	PrimaryExpression	16		7147489	0					
ANR	7148536	Identifier	cx2		7147489	1					
ANR	7148537	AdditiveExpression	4 * cy - 4 * cx + 32 * c		7147489	1		-			
ANR	7148538	MultiplicativeExpression	4 * cy		7147489	0		*			
ANR	7148539	PrimaryExpression	4		7147489	0					
ANR	7148540	Identifier	cy		7147489	1					
ANR	7148541	AdditiveExpression	4 * cx + 32 * c		7147489	1		+			
ANR	7148542	MultiplicativeExpression	4 * cx		7147489	0		*			
ANR	7148543	PrimaryExpression	4		7147489	0					
ANR	7148544	Identifier	cx		7147489	1					
ANR	7148545	MultiplicativeExpression	32 * c		7147489	1		*			
ANR	7148546	PrimaryExpression	32		7147489	0					
ANR	7148547	Identifier	c		7147489	1					
ANR	7148548	MultiplicativeExpression	32 * tl		7147489	1		*			
ANR	7148549	PrimaryExpression	32		7147489	0					
ANR	7148550	Identifier	tl		7147489	1					
ANR	7148551	ForStatement	for ( ny = - 3 ; ny <= 3 ; ny ++ )		7147489	13					
ANR	7148552	ForInit	ny = - 3 ;	217:16:4756:4762	7147489	0	True				
ANR	7148553	AssignmentExpression	ny = - 3		7147489	0		=			
ANR	7148554	Identifier	ny		7147489	0					
ANR	7148555	UnaryOperationExpression	- 3		7147489	1					
ANR	7148556	UnaryOperator	-		7147489	0					
ANR	7148557	PrimaryExpression	3		7147489	1					
ANR	7148558	Condition	ny <= 3	217:24:4764:4770	7147489	1	True				
ANR	7148559	RelationalExpression	ny <= 3		7147489	0		<=			
ANR	7148560	Identifier	ny		7147489	0					
ANR	7148561	PrimaryExpression	3		7147489	1					
ANR	7148562	PostIncDecOperationExpression	ny ++	217:33:4773:4776	7147489	2	True				
ANR	7148563	Identifier	ny		7147489	0					
ANR	7148564	IncDec	++		7147489	1					
ANR	7148565	CompoundStatement		209:38:4532:4532	7147489	3					
ANR	7148566	ForStatement	for ( nx = - 3 ; nx <= 3 ; nx ++ )		7147489	0					
ANR	7148567	ForInit	nx = - 3 ;	219:20:4801:4807	7147489	0	True				
ANR	7148568	AssignmentExpression	nx = - 3		7147489	0		=			
ANR	7148569	Identifier	nx		7147489	0					
ANR	7148570	UnaryOperationExpression	- 3		7147489	1					
ANR	7148571	UnaryOperator	-		7147489	0					
ANR	7148572	PrimaryExpression	3		7147489	1					
ANR	7148573	Condition	nx <= 3	219:28:4809:4815	7147489	1	True				
ANR	7148574	RelationalExpression	nx <= 3		7147489	0		<=			
ANR	7148575	Identifier	nx		7147489	0					
ANR	7148576	PrimaryExpression	3		7147489	1					
ANR	7148577	PostIncDecOperationExpression	nx ++	219:37:4818:4821	7147489	2	True				
ANR	7148578	Identifier	nx		7147489	0					
ANR	7148579	IncDec	++		7147489	1					
ANR	7148580	CompoundStatement		215:20:4705:4710	7147489	3					
ANR	7148581	IdentifierDeclStatement	int score = ny * nx * cxy + nx * nx * cx2 + ny * ny * cy2 + nx * cx + ny * cy + 32 * c ;	221:20:4846:4913	7147489	0	True				
ANR	7148582	IdentifierDecl	score = ny * nx * cxy + nx * nx * cx2 + ny * ny * cy2 + nx * cx + ny * cy + 32 * c		7147489	0					
ANR	7148583	IdentifierDeclType	int		7147489	0					
ANR	7148584	Identifier	score		7147489	1					
ANR	7148585	AssignmentExpression	score = ny * nx * cxy + nx * nx * cx2 + ny * ny * cy2 + nx * cx + ny * cy + 32 * c		7147489	2		=			
ANR	7148586	Identifier	score		7147489	0					
ANR	7148587	AdditiveExpression	ny * nx * cxy + nx * nx * cx2 + ny * ny * cy2 + nx * cx + ny * cy + 32 * c		7147489	1		+			
ANR	7148588	MultiplicativeExpression	ny * nx * cxy		7147489	0		*			
ANR	7148589	Identifier	ny		7147489	0					
ANR	7148590	MultiplicativeExpression	nx * cxy		7147489	1		*			
ANR	7148591	Identifier	nx		7147489	0					
ANR	7148592	Identifier	cxy		7147489	1					
ANR	7148593	AdditiveExpression	nx * nx * cx2 + ny * ny * cy2 + nx * cx + ny * cy + 32 * c		7147489	1		+			
ANR	7148594	MultiplicativeExpression	nx * nx * cx2		7147489	0		*			
ANR	7148595	Identifier	nx		7147489	0					
ANR	7148596	MultiplicativeExpression	nx * cx2		7147489	1		*			
ANR	7148597	Identifier	nx		7147489	0					
ANR	7148598	Identifier	cx2		7147489	1					
ANR	7148599	AdditiveExpression	ny * ny * cy2 + nx * cx + ny * cy + 32 * c		7147489	1		+			
ANR	7148600	MultiplicativeExpression	ny * ny * cy2		7147489	0		*			
ANR	7148601	Identifier	ny		7147489	0					
ANR	7148602	MultiplicativeExpression	ny * cy2		7147489	1		*			
ANR	7148603	Identifier	ny		7147489	0					
ANR	7148604	Identifier	cy2		7147489	1					
ANR	7148605	AdditiveExpression	nx * cx + ny * cy + 32 * c		7147489	1		+			
ANR	7148606	MultiplicativeExpression	nx * cx		7147489	0		*			
ANR	7148607	Identifier	nx		7147489	0					
ANR	7148608	Identifier	cx		7147489	1					
ANR	7148609	AdditiveExpression	ny * cy + 32 * c		7147489	1		+			
ANR	7148610	MultiplicativeExpression	ny * cy		7147489	0		*			
ANR	7148611	Identifier	ny		7147489	0					
ANR	7148612	Identifier	cy		7147489	1					
ANR	7148613	MultiplicativeExpression	32 * c		7147489	1		*			
ANR	7148614	PrimaryExpression	32		7147489	0					
ANR	7148615	Identifier	c		7147489	1					
ANR	7148616	IdentifierDeclStatement	int i ;	223:20:4951:4956	7147489	1	True				
ANR	7148617	IdentifierDecl	i		7147489	0					
ANR	7148618	IdentifierDeclType	int		7147489	0					
ANR	7148619	Identifier	i		7147489	1					
ANR	7148620	IfStatement	if ( ( nx & 3 ) == 0 && ( ny & 3 ) == 0 )		7147489	2					
ANR	7148621	Condition	( nx & 3 ) == 0 && ( ny & 3 ) == 0	227:23:5004:5025	7147489	0	True				
ANR	7148622	AndExpression	( nx & 3 ) == 0 && ( ny & 3 ) == 0		7147489	0		&&			
ANR	7148623	EqualityExpression	( nx & 3 ) == 0		7147489	0		==			
ANR	7148624	BitAndExpression	nx & 3		7147489	0		&			
ANR	7148625	Identifier	nx		7147489	0					
ANR	7148626	PrimaryExpression	3		7147489	1					
ANR	7148627	PrimaryExpression	0		7147489	1					
ANR	7148628	EqualityExpression	( ny & 3 ) == 0		7147489	1		==			
ANR	7148629	BitAndExpression	ny & 3		7147489	0		&			
ANR	7148630	Identifier	ny		7147489	0					
ANR	7148631	PrimaryExpression	3		7147489	1					
ANR	7148632	PrimaryExpression	0		7147489	1					
ANR	7148633	ContinueStatement	continue ;	227:47:5028:5036	7147489	1	True				
ANR	7148634	ExpressionStatement	score += 32 * ( mv_penalty [ 4 * mx + nx - pred_x ] + mv_penalty [ 4 * my + ny - pred_y ] ) * penalty_factor	231:20:5077:5169	7147489	3	True				
ANR	7148635	AssignmentExpression	score += 32 * ( mv_penalty [ 4 * mx + nx - pred_x ] + mv_penalty [ 4 * my + ny - pred_y ] ) * penalty_factor		7147489	0		+=			
ANR	7148636	Identifier	score		7147489	0					
ANR	7148637	MultiplicativeExpression	32 * ( mv_penalty [ 4 * mx + nx - pred_x ] + mv_penalty [ 4 * my + ny - pred_y ] ) * penalty_factor		7147489	1		*			
ANR	7148638	PrimaryExpression	32		7147489	0					
ANR	7148639	MultiplicativeExpression	( mv_penalty [ 4 * mx + nx - pred_x ] + mv_penalty [ 4 * my + ny - pred_y ] ) * penalty_factor		7147489	1		*			
ANR	7148640	AdditiveExpression	mv_penalty [ 4 * mx + nx - pred_x ] + mv_penalty [ 4 * my + ny - pred_y ]		7147489	0		+			
ANR	7148641	ArrayIndexing	mv_penalty [ 4 * mx + nx - pred_x ]		7147489	0					
ANR	7148642	Identifier	mv_penalty		7147489	0					
ANR	7148643	AdditiveExpression	4 * mx + nx - pred_x		7147489	1		+			
ANR	7148644	MultiplicativeExpression	4 * mx		7147489	0		*			
ANR	7148645	PrimaryExpression	4		7147489	0					
ANR	7148646	Identifier	mx		7147489	1					
ANR	7148647	AdditiveExpression	nx - pred_x		7147489	1		-			
ANR	7148648	Identifier	nx		7147489	0					
ANR	7148649	Identifier	pred_x		7147489	1					
ANR	7148650	ArrayIndexing	mv_penalty [ 4 * my + ny - pred_y ]		7147489	1					
ANR	7148651	Identifier	mv_penalty		7147489	0					
ANR	7148652	AdditiveExpression	4 * my + ny - pred_y		7147489	1		+			
ANR	7148653	MultiplicativeExpression	4 * my		7147489	0		*			
ANR	7148654	PrimaryExpression	4		7147489	0					
ANR	7148655	Identifier	my		7147489	1					
ANR	7148656	AdditiveExpression	ny - pred_y		7147489	1		-			
ANR	7148657	Identifier	ny		7147489	0					
ANR	7148658	Identifier	pred_y		7147489	1					
ANR	7148659	Identifier	penalty_factor		7147489	1					
ANR	7148660	ForStatement	for ( i = 0 ; i < 8 ; i ++ )		7147489	4					
ANR	7148661	ForInit	i = 0 ;	239:24:5340:5343	7147489	0	True				
ANR	7148662	AssignmentExpression	i = 0		7147489	0		=			
ANR	7148663	Identifier	i		7147489	0					
ANR	7148664	PrimaryExpression	0		7147489	1					
ANR	7148665	Condition	i < 8	239:29:5345:5347	7147489	1	True				
ANR	7148666	RelationalExpression	i < 8		7147489	0		<			
ANR	7148667	Identifier	i		7147489	0					
ANR	7148668	PrimaryExpression	8		7147489	1					
ANR	7148669	PostIncDecOperationExpression	i ++	239:34:5350:5352	7147489	2	True				
ANR	7148670	Identifier	i		7147489	0					
ANR	7148671	IncDec	++		7147489	1					
ANR	7148672	CompoundStatement		231:38:5108:5108	7147489	3					
ANR	7148673	IfStatement	if ( score < best [ i ] )		7147489	0					
ANR	7148674	Condition	score < best [ i ]	241:27:5384:5398	7147489	0	True				
ANR	7148675	RelationalExpression	score < best [ i ]		7147489	0		<			
ANR	7148676	Identifier	score		7147489	0					
ANR	7148677	ArrayIndexing	best [ i ]		7147489	1					
ANR	7148678	Identifier	best		7147489	0					
ANR	7148679	Identifier	i		7147489	1					
ANR	7148680	CompoundStatement		233:43:5154:5154	7147489	1					
ANR	7148681	ExpressionStatement	"memmove ( & best [ i + 1 ] , & best [ i ] , sizeof ( int ) * ( 7 - i ) )"	243:28:5431:5479	7147489	0	True				
ANR	7148682	CallExpression	"memmove ( & best [ i + 1 ] , & best [ i ] , sizeof ( int ) * ( 7 - i ) )"		7147489	0					
ANR	7148683	Callee	memmove		7147489	0					
ANR	7148684	Identifier	memmove		7147489	0					
ANR	7148685	ArgumentList	& best [ i + 1 ]		7147489	1					
ANR	7148686	Argument	& best [ i + 1 ]		7147489	0					
ANR	7148687	UnaryOperationExpression	& best [ i + 1 ]		7147489	0					
ANR	7148688	UnaryOperator	&		7147489	0					
ANR	7148689	ArrayIndexing	best [ i + 1 ]		7147489	1					
ANR	7148690	Identifier	best		7147489	0					
ANR	7148691	AdditiveExpression	i + 1		7147489	1		+			
ANR	7148692	Identifier	i		7147489	0					
ANR	7148693	PrimaryExpression	1		7147489	1					
ANR	7148694	Argument	& best [ i ]		7147489	1					
ANR	7148695	UnaryOperationExpression	& best [ i ]		7147489	0					
ANR	7148696	UnaryOperator	&		7147489	0					
ANR	7148697	ArrayIndexing	best [ i ]		7147489	1					
ANR	7148698	Identifier	best		7147489	0					
ANR	7148699	Identifier	i		7147489	1					
ANR	7148700	Argument	sizeof ( int ) * ( 7 - i )		7147489	2					
ANR	7148701	MultiplicativeExpression	sizeof ( int ) * ( 7 - i )		7147489	0		*			
ANR	7148702	SizeofExpression	sizeof ( int )		7147489	0					
ANR	7148703	Sizeof	sizeof		7147489	0					
ANR	7148704	SizeofOperand	int		7147489	1					
ANR	7148705	AdditiveExpression	7 - i		7147489	1		-			
ANR	7148706	PrimaryExpression	7		7147489	0					
ANR	7148707	Identifier	i		7147489	1					
ANR	7148708	ExpressionStatement	"memmove ( & best_pos [ i + 1 ] [ 0 ] , & best_pos [ i ] [ 0 ] , sizeof ( int ) * 2 * ( 7 - i ) )"	245:28:5510:5574	7147489	1	True				
ANR	7148709	CallExpression	"memmove ( & best_pos [ i + 1 ] [ 0 ] , & best_pos [ i ] [ 0 ] , sizeof ( int ) * 2 * ( 7 - i ) )"		7147489	0					
ANR	7148710	Callee	memmove		7147489	0					
ANR	7148711	Identifier	memmove		7147489	0					
ANR	7148712	ArgumentList	& best_pos [ i + 1 ] [ 0 ]		7147489	1					
ANR	7148713	Argument	& best_pos [ i + 1 ] [ 0 ]		7147489	0					
ANR	7148714	UnaryOperationExpression	& best_pos [ i + 1 ] [ 0 ]		7147489	0					
ANR	7148715	UnaryOperator	&		7147489	0					
ANR	7148716	ArrayIndexing	best_pos [ i + 1 ] [ 0 ]		7147489	1					
ANR	7148717	ArrayIndexing	best_pos [ i + 1 ]		7147489	0					
ANR	7148718	Identifier	best_pos		7147489	0					
ANR	7148719	AdditiveExpression	i + 1		7147489	1		+			
ANR	7148720	Identifier	i		7147489	0					
ANR	7148721	PrimaryExpression	1		7147489	1					
ANR	7148722	PrimaryExpression	0		7147489	1					
ANR	7148723	Argument	& best_pos [ i ] [ 0 ]		7147489	1					
ANR	7148724	UnaryOperationExpression	& best_pos [ i ] [ 0 ]		7147489	0					
ANR	7148725	UnaryOperator	&		7147489	0					
ANR	7148726	ArrayIndexing	best_pos [ i ] [ 0 ]		7147489	1					
ANR	7148727	ArrayIndexing	best_pos [ i ]		7147489	0					
ANR	7148728	Identifier	best_pos		7147489	0					
ANR	7148729	Identifier	i		7147489	1					
ANR	7148730	PrimaryExpression	0		7147489	1					
ANR	7148731	Argument	sizeof ( int ) * 2 * ( 7 - i )		7147489	2					
ANR	7148732	MultiplicativeExpression	sizeof ( int ) * 2 * ( 7 - i )		7147489	0		*			
ANR	7148733	SizeofExpression	sizeof ( int )		7147489	0					
ANR	7148734	Sizeof	sizeof		7147489	0					
ANR	7148735	SizeofOperand	int		7147489	1					
ANR	7148736	MultiplicativeExpression	2 * ( 7 - i )		7147489	1		*			
ANR	7148737	PrimaryExpression	2		7147489	0					
ANR	7148738	AdditiveExpression	7 - i		7147489	1		-			
ANR	7148739	PrimaryExpression	7		7147489	0					
ANR	7148740	Identifier	i		7147489	1					
ANR	7148741	ExpressionStatement	best [ i ] = score	247:28:5605:5619	7147489	2	True				
ANR	7148742	AssignmentExpression	best [ i ] = score		7147489	0		=			
ANR	7148743	ArrayIndexing	best [ i ]		7147489	0					
ANR	7148744	Identifier	best		7147489	0					
ANR	7148745	Identifier	i		7147489	1					
ANR	7148746	Identifier	score		7147489	1					
ANR	7148747	ExpressionStatement	best_pos [ i ] [ 0 ] = nx + 4 * mx	249:28:5650:5675	7147489	3	True				
ANR	7148748	AssignmentExpression	best_pos [ i ] [ 0 ] = nx + 4 * mx		7147489	0		=			
ANR	7148749	ArrayIndexing	best_pos [ i ] [ 0 ]		7147489	0					
ANR	7148750	ArrayIndexing	best_pos [ i ]		7147489	0					
ANR	7148751	Identifier	best_pos		7147489	0					
ANR	7148752	Identifier	i		7147489	1					
ANR	7148753	PrimaryExpression	0		7147489	1					
ANR	7148754	AdditiveExpression	nx + 4 * mx		7147489	1		+			
ANR	7148755	Identifier	nx		7147489	0					
ANR	7148756	MultiplicativeExpression	4 * mx		7147489	1		*			
ANR	7148757	PrimaryExpression	4		7147489	0					
ANR	7148758	Identifier	mx		7147489	1					
ANR	7148759	ExpressionStatement	best_pos [ i ] [ 1 ] = ny + 4 * my	251:28:5706:5731	7147489	4	True				
ANR	7148760	AssignmentExpression	best_pos [ i ] [ 1 ] = ny + 4 * my		7147489	0		=			
ANR	7148761	ArrayIndexing	best_pos [ i ] [ 1 ]		7147489	0					
ANR	7148762	ArrayIndexing	best_pos [ i ]		7147489	0					
ANR	7148763	Identifier	best_pos		7147489	0					
ANR	7148764	Identifier	i		7147489	1					
ANR	7148765	PrimaryExpression	1		7147489	1					
ANR	7148766	AdditiveExpression	ny + 4 * my		7147489	1		+			
ANR	7148767	Identifier	ny		7147489	0					
ANR	7148768	MultiplicativeExpression	4 * my		7147489	1		*			
ANR	7148769	PrimaryExpression	4		7147489	0					
ANR	7148770	Identifier	my		7147489	1					
ANR	7148771	BreakStatement	break ;	253:28:5762:5767	7147489	5	True				
ANR	7148772	ForStatement	for ( i = 0 ; i < subpel_quality ; i ++ )		7147489	14					
ANR	7148773	ForInit	i = 0 ;	265:12:5889:5892	7147489	0	True				
ANR	7148774	AssignmentExpression	i = 0		7147489	0		=			
ANR	7148775	Identifier	i		7147489	0					
ANR	7148776	PrimaryExpression	0		7147489	1					
ANR	7148777	Condition	i < subpel_quality	265:17:5894:5909	7147489	1	True				
ANR	7148778	RelationalExpression	i < subpel_quality		7147489	0		<			
ANR	7148779	Identifier	i		7147489	0					
ANR	7148780	Identifier	subpel_quality		7147489	1					
ANR	7148781	PostIncDecOperationExpression	i ++	265:35:5912:5914	7147489	2	True				
ANR	7148782	Identifier	i		7147489	0					
ANR	7148783	IncDec	++		7147489	1					
ANR	7148784	CompoundStatement		257:39:5670:5670	7147489	3					
ANR	7148785	ExpressionStatement	nx = best_pos [ i ] [ 0 ]	267:12:5931:5949	7147489	0	True				
ANR	7148786	AssignmentExpression	nx = best_pos [ i ] [ 0 ]		7147489	0		=			
ANR	7148787	Identifier	nx		7147489	0					
ANR	7148788	ArrayIndexing	best_pos [ i ] [ 0 ]		7147489	1					
ANR	7148789	ArrayIndexing	best_pos [ i ]		7147489	0					
ANR	7148790	Identifier	best_pos		7147489	0					
ANR	7148791	Identifier	i		7147489	1					
ANR	7148792	PrimaryExpression	0		7147489	1					
ANR	7148793	ExpressionStatement	ny = best_pos [ i ] [ 1 ]	269:12:5964:5982	7147489	1	True				
ANR	7148794	AssignmentExpression	ny = best_pos [ i ] [ 1 ]		7147489	0		=			
ANR	7148795	Identifier	ny		7147489	0					
ANR	7148796	ArrayIndexing	best_pos [ i ] [ 1 ]		7147489	1					
ANR	7148797	ArrayIndexing	best_pos [ i ]		7147489	0					
ANR	7148798	Identifier	best_pos		7147489	0					
ANR	7148799	Identifier	i		7147489	1					
ANR	7148800	PrimaryExpression	1		7147489	1					
ANR	7148801	Statement	CHECK_QUARTER_MV	271:12:5997:6012	7147489	2	True				
ANR	7148802	Statement	(	271:28:6013:6013	7147489	3	True				
ANR	7148803	Statement	nx	271:29:6014:6015	7147489	4	True				
ANR	7148804	Statement	&	271:31:6016:6016	7147489	5	True				
ANR	7148805	Statement	3	271:32:6017:6017	7147489	6	True				
ANR	7148806	Statement	","	271:33:6018:6018	7147489	7	True				
ANR	7148807	Statement	ny	271:35:6020:6021	7147489	8	True				
ANR	7148808	Statement	&	271:37:6022:6022	7147489	9	True				
ANR	7148809	Statement	3	271:38:6023:6023	7147489	10	True				
ANR	7148810	Statement	","	271:39:6024:6024	7147489	11	True				
ANR	7148811	Statement	nx	271:41:6026:6027	7147489	12	True				
ANR	7148812	Statement	>>	271:43:6028:6029	7147489	13	True				
ANR	7148813	Statement	2	271:45:6030:6030	7147489	14	True				
ANR	7148814	Statement	","	271:46:6031:6031	7147489	15	True				
ANR	7148815	Statement	ny	271:48:6033:6034	7147489	16	True				
ANR	7148816	Statement	>>	271:50:6035:6036	7147489	17	True				
ANR	7148817	Statement	2	271:52:6037:6037	7147489	18	True				
ANR	7148818	Statement	)	271:53:6038:6038	7147489	19	True				
ANR	7148819	IdentifierDeclStatement	const int tl = score_map [ ( index - ( 1 << ME_MAP_SHIFT ) - 1 ) & ( ME_MAP_SIZE - 1 ) ] ;	279:12:6073:6141	7147489	15	True				
ANR	7148820	IdentifierDecl	tl = score_map [ ( index - ( 1 << ME_MAP_SHIFT ) - 1 ) & ( ME_MAP_SIZE - 1 ) ]		7147489	0					
ANR	7148821	IdentifierDeclType	const int		7147489	0					
ANR	7148822	Identifier	tl		7147489	1					
ANR	7148823	AssignmentExpression	tl = score_map [ ( index - ( 1 << ME_MAP_SHIFT ) - 1 ) & ( ME_MAP_SIZE - 1 ) ]		7147489	2		=			
ANR	7148824	Identifier	tl		7147489	0					
ANR	7148825	ArrayIndexing	score_map [ ( index - ( 1 << ME_MAP_SHIFT ) - 1 ) & ( ME_MAP_SIZE - 1 ) ]		7147489	1					
ANR	7148826	Identifier	score_map		7147489	0					
ANR	7148827	BitAndExpression	( index - ( 1 << ME_MAP_SHIFT ) - 1 ) & ( ME_MAP_SIZE - 1 )		7147489	1		&			
ANR	7148828	AdditiveExpression	index - ( 1 << ME_MAP_SHIFT ) - 1		7147489	0		-			
ANR	7148829	Identifier	index		7147489	0					
ANR	7148830	AdditiveExpression	( 1 << ME_MAP_SHIFT ) - 1		7147489	1		-			
ANR	7148831	ShiftExpression	1 << ME_MAP_SHIFT		7147489	0		<<			
ANR	7148832	PrimaryExpression	1		7147489	0					
ANR	7148833	Identifier	ME_MAP_SHIFT		7147489	1					
ANR	7148834	PrimaryExpression	1		7147489	1					
ANR	7148835	AdditiveExpression	ME_MAP_SIZE - 1		7147489	1		-			
ANR	7148836	Identifier	ME_MAP_SIZE		7147489	0					
ANR	7148837	PrimaryExpression	1		7147489	1					
ANR	7148838	IdentifierDeclStatement	const int bl = score_map [ ( index + ( 1 << ME_MAP_SHIFT ) - 1 ) & ( ME_MAP_SIZE - 1 ) ] ;	281:12:6156:6224	7147489	16	True				
ANR	7148839	IdentifierDecl	bl = score_map [ ( index + ( 1 << ME_MAP_SHIFT ) - 1 ) & ( ME_MAP_SIZE - 1 ) ]		7147489	0					
ANR	7148840	IdentifierDeclType	const int		7147489	0					
ANR	7148841	Identifier	bl		7147489	1					
ANR	7148842	AssignmentExpression	bl = score_map [ ( index + ( 1 << ME_MAP_SHIFT ) - 1 ) & ( ME_MAP_SIZE - 1 ) ]		7147489	2		=			
ANR	7148843	Identifier	bl		7147489	0					
ANR	7148844	ArrayIndexing	score_map [ ( index + ( 1 << ME_MAP_SHIFT ) - 1 ) & ( ME_MAP_SIZE - 1 ) ]		7147489	1					
ANR	7148845	Identifier	score_map		7147489	0					
ANR	7148846	BitAndExpression	( index + ( 1 << ME_MAP_SHIFT ) - 1 ) & ( ME_MAP_SIZE - 1 )		7147489	1		&			
ANR	7148847	AdditiveExpression	index + ( 1 << ME_MAP_SHIFT ) - 1		7147489	0		+			
ANR	7148848	Identifier	index		7147489	0					
ANR	7148849	AdditiveExpression	( 1 << ME_MAP_SHIFT ) - 1		7147489	1		-			
ANR	7148850	ShiftExpression	1 << ME_MAP_SHIFT		7147489	0		<<			
ANR	7148851	PrimaryExpression	1		7147489	0					
ANR	7148852	Identifier	ME_MAP_SHIFT		7147489	1					
ANR	7148853	PrimaryExpression	1		7147489	1					
ANR	7148854	AdditiveExpression	ME_MAP_SIZE - 1		7147489	1		-			
ANR	7148855	Identifier	ME_MAP_SIZE		7147489	0					
ANR	7148856	PrimaryExpression	1		7147489	1					
ANR	7148857	IdentifierDeclStatement	const int tr = score_map [ ( index - ( 1 << ME_MAP_SHIFT ) + 1 ) & ( ME_MAP_SIZE - 1 ) ] ;	283:12:6239:6307	7147489	17	True				
ANR	7148858	IdentifierDecl	tr = score_map [ ( index - ( 1 << ME_MAP_SHIFT ) + 1 ) & ( ME_MAP_SIZE - 1 ) ]		7147489	0					
ANR	7148859	IdentifierDeclType	const int		7147489	0					
ANR	7148860	Identifier	tr		7147489	1					
ANR	7148861	AssignmentExpression	tr = score_map [ ( index - ( 1 << ME_MAP_SHIFT ) + 1 ) & ( ME_MAP_SIZE - 1 ) ]		7147489	2		=			
ANR	7148862	Identifier	tr		7147489	0					
ANR	7148863	ArrayIndexing	score_map [ ( index - ( 1 << ME_MAP_SHIFT ) + 1 ) & ( ME_MAP_SIZE - 1 ) ]		7147489	1					
ANR	7148864	Identifier	score_map		7147489	0					
ANR	7148865	BitAndExpression	( index - ( 1 << ME_MAP_SHIFT ) + 1 ) & ( ME_MAP_SIZE - 1 )		7147489	1		&			
ANR	7148866	AdditiveExpression	index - ( 1 << ME_MAP_SHIFT ) + 1		7147489	0		-			
ANR	7148867	Identifier	index		7147489	0					
ANR	7148868	AdditiveExpression	( 1 << ME_MAP_SHIFT ) + 1		7147489	1		+			
ANR	7148869	ShiftExpression	1 << ME_MAP_SHIFT		7147489	0		<<			
ANR	7148870	PrimaryExpression	1		7147489	0					
ANR	7148871	Identifier	ME_MAP_SHIFT		7147489	1					
ANR	7148872	PrimaryExpression	1		7147489	1					
ANR	7148873	AdditiveExpression	ME_MAP_SIZE - 1		7147489	1		-			
ANR	7148874	Identifier	ME_MAP_SIZE		7147489	0					
ANR	7148875	PrimaryExpression	1		7147489	1					
ANR	7148876	IdentifierDeclStatement	const int br = score_map [ ( index + ( 1 << ME_MAP_SHIFT ) + 1 ) & ( ME_MAP_SIZE - 1 ) ] ;	285:12:6322:6390	7147489	18	True				
ANR	7148877	IdentifierDecl	br = score_map [ ( index + ( 1 << ME_MAP_SHIFT ) + 1 ) & ( ME_MAP_SIZE - 1 ) ]		7147489	0					
ANR	7148878	IdentifierDeclType	const int		7147489	0					
ANR	7148879	Identifier	br		7147489	1					
ANR	7148880	AssignmentExpression	br = score_map [ ( index + ( 1 << ME_MAP_SHIFT ) + 1 ) & ( ME_MAP_SIZE - 1 ) ]		7147489	2		=			
ANR	7148881	Identifier	br		7147489	0					
ANR	7148882	ArrayIndexing	score_map [ ( index + ( 1 << ME_MAP_SHIFT ) + 1 ) & ( ME_MAP_SIZE - 1 ) ]		7147489	1					
ANR	7148883	Identifier	score_map		7147489	0					
ANR	7148884	BitAndExpression	( index + ( 1 << ME_MAP_SHIFT ) + 1 ) & ( ME_MAP_SIZE - 1 )		7147489	1		&			
ANR	7148885	AdditiveExpression	index + ( 1 << ME_MAP_SHIFT ) + 1		7147489	0		+			
ANR	7148886	Identifier	index		7147489	0					
ANR	7148887	AdditiveExpression	( 1 << ME_MAP_SHIFT ) + 1		7147489	1		+			
ANR	7148888	ShiftExpression	1 << ME_MAP_SHIFT		7147489	0		<<			
ANR	7148889	PrimaryExpression	1		7147489	0					
ANR	7148890	Identifier	ME_MAP_SHIFT		7147489	1					
ANR	7148891	PrimaryExpression	1		7147489	1					
ANR	7148892	AdditiveExpression	ME_MAP_SIZE - 1		7147489	1		-			
ANR	7148893	Identifier	ME_MAP_SIZE		7147489	0					
ANR	7148894	PrimaryExpression	1		7147489	1					
ANR	7148895	IfStatement	if ( tl < br )		7147489	19					
ANR	7148896	Condition	tl < br	289:15:6503:6507	7147489	0	True				
ANR	7148897	RelationalExpression	tl < br		7147489	0		<			
ANR	7148898	Identifier	tl		7147489	0					
ANR	7148899	Identifier	br		7147489	1					
ANR	7148900	CompoundStatement		281:21:6263:6263	7147489	1					
ANR	7148901	Statement	static	299:12:6636:6641	7147489	0	True				
ANR	7148902	Statement	int	299:19:6643:6645	7147489	1	True				
ANR	7148903	ExpressionStatement	"stats [ 7 ] [ 7 ] , count"	299:23:6647:6665	7147489	2	True				
ANR	7148904	Expression	"stats [ 7 ] [ 7 ] , count"		7147489	0					
ANR	7148905	ArrayIndexing	stats [ 7 ] [ 7 ]		7147489	0					
ANR	7148906	ArrayIndexing	stats [ 7 ]		7147489	0					
ANR	7148907	Identifier	stats		7147489	0					
ANR	7148908	PrimaryExpression	7		7147489	1					
ANR	7148909	PrimaryExpression	7		7147489	1					
ANR	7148910	Identifier	count		7147489	1					
ANR	7148911	ExpressionStatement	count ++	301:12:6680:6687	7147489	3	True				
ANR	7148912	PostIncDecOperationExpression	count ++		7147489	0					
ANR	7148913	Identifier	count		7147489	0					
ANR	7148914	IncDec	++		7147489	1					
ANR	7148915	ExpressionStatement	stats [ 4 * mx - bx + 3 ] [ 4 * my - by + 3 ] ++	303:12:6702:6739	7147489	4	True				
ANR	7148916	PostIncDecOperationExpression	stats [ 4 * mx - bx + 3 ] [ 4 * my - by + 3 ] ++		7147489	0					
ANR	7148917	ArrayIndexing	stats [ 4 * mx - bx + 3 ] [ 4 * my - by + 3 ]		7147489	0					
ANR	7148918	ArrayIndexing	stats [ 4 * mx - bx + 3 ]		7147489	0					
ANR	7148919	Identifier	stats		7147489	0					
ANR	7148920	AdditiveExpression	4 * mx - bx + 3		7147489	1		-			
ANR	7148921	MultiplicativeExpression	4 * mx		7147489	0		*			
ANR	7148922	PrimaryExpression	4		7147489	0					
ANR	7148923	Identifier	mx		7147489	1					
ANR	7148924	AdditiveExpression	bx + 3		7147489	1		+			
ANR	7148925	Identifier	bx		7147489	0					
ANR	7148926	PrimaryExpression	3		7147489	1					
ANR	7148927	AdditiveExpression	4 * my - by + 3		7147489	1		-			
ANR	7148928	MultiplicativeExpression	4 * my		7147489	0		*			
ANR	7148929	PrimaryExpression	4		7147489	0					
ANR	7148930	Identifier	my		7147489	1					
ANR	7148931	AdditiveExpression	by + 3		7147489	1		+			
ANR	7148932	Identifier	by		7147489	0					
ANR	7148933	PrimaryExpression	3		7147489	1					
ANR	7148934	IncDec	++		7147489	1					
ANR	7148935	IfStatement	if ( 256 * 256 * 256 * 64 % count == 0 )		7147489	5					
ANR	7148936	Condition	256 * 256 * 256 * 64 % count == 0	305:15:6757:6782	7147489	0	True				
ANR	7148937	EqualityExpression	256 * 256 * 256 * 64 % count == 0		7147489	0		==			
ANR	7148938	MultiplicativeExpression	256 * 256 * 256 * 64 % count		7147489	0		*			
ANR	7148939	PrimaryExpression	256		7147489	0					
ANR	7148940	MultiplicativeExpression	256 * 256 * 64 % count		7147489	1		*			
ANR	7148941	PrimaryExpression	256		7147489	0					
ANR	7148942	MultiplicativeExpression	256 * 64 % count		7147489	1		*			
ANR	7148943	PrimaryExpression	256		7147489	0					
ANR	7148944	MultiplicativeExpression	64 % count		7147489	1		%			
ANR	7148945	PrimaryExpression	64		7147489	0					
ANR	7148946	Identifier	count		7147489	1					
ANR	7148947	PrimaryExpression	0		7147489	1					
ANR	7148948	CompoundStatement		297:42:6538:6538	7147489	1					
ANR	7148949	ForStatement	for ( i = 0 ; i < 49 ; i ++ )		7147489	0					
ANR	7148950	ForInit	i = 0 ;	307:20:6807:6810	7147489	0	True				
ANR	7148951	AssignmentExpression	i = 0		7147489	0		=			
ANR	7148952	Identifier	i		7147489	0					
ANR	7148953	PrimaryExpression	0		7147489	1					
ANR	7148954	Condition	i < 49	307:25:6812:6815	7147489	1	True				
ANR	7148955	RelationalExpression	i < 49		7147489	0		<			
ANR	7148956	Identifier	i		7147489	0					
ANR	7148957	PrimaryExpression	49		7147489	1					
ANR	7148958	PostIncDecOperationExpression	i ++	307:31:6818:6820	7147489	2	True				
ANR	7148959	Identifier	i		7147489	0					
ANR	7148960	IncDec	++		7147489	1					
ANR	7148961	CompoundStatement		299:35:6576:6576	7147489	3					
ANR	7148962	IfStatement	if ( ( i % 7 ) == 0 )		7147489	0					
ANR	7148963	Condition	( i % 7 ) == 0	309:23:6848:6855	7147489	0	True				
ANR	7148964	EqualityExpression	( i % 7 ) == 0		7147489	0		==			
ANR	7148965	MultiplicativeExpression	i % 7		7147489	0		%			
ANR	7148966	Identifier	i		7147489	0					
ANR	7148967	PrimaryExpression	7		7147489	1					
ANR	7148968	PrimaryExpression	0		7147489	1					
ANR	7148969	ExpressionStatement	"printf ( ""\\n"" )"	309:33:6858:6870	7147489	1	True				
ANR	7148970	CallExpression	"printf ( ""\\n"" )"		7147489	0					
ANR	7148971	Callee	printf		7147489	0					
ANR	7148972	Identifier	printf		7147489	0					
ANR	7148973	ArgumentList	"""\\n"""		7147489	1					
ANR	7148974	Argument	"""\\n"""		7147489	0					
ANR	7148975	PrimaryExpression	"""\\n"""		7147489	0					
ANR	7148976	ExpressionStatement	"printf ( ""%6d "" , stats [ 0 ] [ i ] )"	311:20:6893:6920	7147489	1	True				
ANR	7148977	CallExpression	"printf ( ""%6d "" , stats [ 0 ] [ i ] )"		7147489	0					
ANR	7148978	Callee	printf		7147489	0					
ANR	7148979	Identifier	printf		7147489	0					
ANR	7148980	ArgumentList	"""%6d """		7147489	1					
ANR	7148981	Argument	"""%6d """		7147489	0					
ANR	7148982	PrimaryExpression	"""%6d """		7147489	0					
ANR	7148983	Argument	stats [ 0 ] [ i ]		7147489	1					
ANR	7148984	ArrayIndexing	stats [ 0 ] [ i ]		7147489	0					
ANR	7148985	ArrayIndexing	stats [ 0 ]		7147489	0					
ANR	7148986	Identifier	stats		7147489	0					
ANR	7148987	PrimaryExpression	0		7147489	1					
ANR	7148988	Identifier	i		7147489	1					
ANR	7148989	ExpressionStatement	"printf ( ""\\n"" )"	315:16:6958:6970	7147489	1	True				
ANR	7148990	CallExpression	"printf ( ""\\n"" )"		7147489	0					
ANR	7148991	Callee	printf		7147489	0					
ANR	7148992	Identifier	printf		7147489	0					
ANR	7148993	ArgumentList	"""\\n"""		7147489	1					
ANR	7148994	Argument	"""\\n"""		7147489	0					
ANR	7148995	PrimaryExpression	"""\\n"""		7147489	0					
ANR	7148996	Statement	CHECK_QUARTER_MV	367:8:7715:7730	7147489	20	True				
ANR	7148997	Statement	(	367:24:7731:7731	7147489	21	True				
ANR	7148998	Statement	1	367:25:7732:7732	7147489	22	True				
ANR	7148999	Statement	","	367:26:7733:7733	7147489	23	True				
ANR	7149000	Statement	3	367:28:7735:7735	7147489	24	True				
ANR	7149001	Statement	","	367:29:7736:7736	7147489	25	True				
ANR	7149002	Statement	mx	367:31:7738:7739	7147489	26	True				
ANR	7149003	Statement	-	367:33:7740:7740	7147489	27	True				
ANR	7149004	Statement	1	367:34:7741:7741	7147489	28	True				
ANR	7149005	Statement	","	367:35:7742:7742	7147489	29	True				
ANR	7149006	Statement	my	367:37:7744:7745	7147489	30	True				
ANR	7149007	Statement	-	367:39:7746:7746	7147489	31	True				
ANR	7149008	Statement	1	367:40:7747:7747	7147489	32	True				
ANR	7149009	Statement	)	367:41:7748:7748	7147489	33	True				
ANR	7149010	Statement	CHECK_QUARTER_MV	369:8:7759:7774	7147489	34	True				
ANR	7149011	Statement	(	369:24:7775:7775	7147489	35	True				
ANR	7149012	Statement	1	369:25:7776:7776	7147489	36	True				
ANR	7149013	Statement	","	369:26:7777:7777	7147489	37	True				
ANR	7149014	Statement	2	369:28:7779:7779	7147489	38	True				
ANR	7149015	Statement	","	369:29:7780:7780	7147489	39	True				
ANR	7149016	Statement	mx	369:31:7782:7783	7147489	40	True				
ANR	7149017	Statement	-	369:33:7784:7784	7147489	41	True				
ANR	7149018	Statement	1	369:34:7785:7785	7147489	42	True				
ANR	7149019	Statement	","	369:35:7786:7786	7147489	43	True				
ANR	7149020	Statement	my	369:37:7788:7789	7147489	44	True				
ANR	7149021	Statement	-	369:39:7790:7790	7147489	45	True				
ANR	7149022	Statement	1	369:40:7791:7791	7147489	46	True				
ANR	7149023	Statement	)	369:41:7792:7792	7147489	47	True				
ANR	7149024	Statement	CHECK_QUARTER_MV	371:8:7803:7818	7147489	48	True				
ANR	7149025	Statement	(	371:24:7819:7819	7147489	49	True				
ANR	7149026	Statement	1	371:25:7820:7820	7147489	50	True				
ANR	7149027	Statement	","	371:26:7821:7821	7147489	51	True				
ANR	7149028	Statement	1	371:28:7823:7823	7147489	52	True				
ANR	7149029	Statement	","	371:29:7824:7824	7147489	53	True				
ANR	7149030	Statement	mx	371:31:7826:7827	7147489	54	True				
ANR	7149031	Statement	-	371:33:7828:7828	7147489	55	True				
ANR	7149032	Statement	1	371:34:7829:7829	7147489	56	True				
ANR	7149033	Statement	","	371:35:7830:7830	7147489	57	True				
ANR	7149034	Statement	my	371:37:7832:7833	7147489	58	True				
ANR	7149035	Statement	-	371:39:7834:7834	7147489	59	True				
ANR	7149036	Statement	1	371:40:7835:7835	7147489	60	True				
ANR	7149037	Statement	)	371:41:7836:7836	7147489	61	True				
ANR	7149038	Statement	CHECK_QUARTER_MV	373:8:7847:7862	7147489	62	True				
ANR	7149039	Statement	(	373:24:7863:7863	7147489	63	True				
ANR	7149040	Statement	2	373:25:7864:7864	7147489	64	True				
ANR	7149041	Statement	","	373:26:7865:7865	7147489	65	True				
ANR	7149042	Statement	1	373:28:7867:7867	7147489	66	True				
ANR	7149043	Statement	","	373:29:7868:7868	7147489	67	True				
ANR	7149044	Statement	mx	373:31:7870:7871	7147489	68	True				
ANR	7149045	Statement	-	373:33:7872:7872	7147489	69	True				
ANR	7149046	Statement	1	373:34:7873:7873	7147489	70	True				
ANR	7149047	Statement	","	373:35:7874:7874	7147489	71	True				
ANR	7149048	Statement	my	373:37:7876:7877	7147489	72	True				
ANR	7149049	Statement	-	373:39:7878:7878	7147489	73	True				
ANR	7149050	Statement	1	373:40:7879:7879	7147489	74	True				
ANR	7149051	Statement	)	373:41:7880:7880	7147489	75	True				
ANR	7149052	Statement	CHECK_QUARTER_MV	375:8:7891:7906	7147489	76	True				
ANR	7149053	Statement	(	375:24:7907:7907	7147489	77	True				
ANR	7149054	Statement	3	375:25:7908:7908	7147489	78	True				
ANR	7149055	Statement	","	375:26:7909:7909	7147489	79	True				
ANR	7149056	Statement	1	375:28:7911:7911	7147489	80	True				
ANR	7149057	Statement	","	375:29:7912:7912	7147489	81	True				
ANR	7149058	Statement	mx	375:31:7914:7915	7147489	82	True				
ANR	7149059	Statement	-	375:33:7916:7916	7147489	83	True				
ANR	7149060	Statement	1	375:34:7917:7917	7147489	84	True				
ANR	7149061	Statement	","	375:35:7918:7918	7147489	85	True				
ANR	7149062	Statement	my	375:37:7920:7921	7147489	86	True				
ANR	7149063	Statement	-	375:39:7922:7922	7147489	87	True				
ANR	7149064	Statement	1	375:40:7923:7923	7147489	88	True				
ANR	7149065	Statement	)	375:41:7924:7924	7147489	89	True				
ANR	7149066	Statement	CHECK_QUARTER_MV	377:8:7935:7950	7147489	90	True				
ANR	7149067	Statement	(	377:24:7951:7951	7147489	91	True				
ANR	7149068	Statement	0	377:25:7952:7952	7147489	92	True				
ANR	7149069	Statement	","	377:26:7953:7953	7147489	93	True				
ANR	7149070	Statement	1	377:28:7955:7955	7147489	94	True				
ANR	7149071	Statement	","	377:29:7956:7956	7147489	95	True				
ANR	7149072	Statement	mx	377:31:7958:7959	7147489	96	True				
ANR	7149073	Statement	","	377:35:7962:7962	7147489	97	True				
ANR	7149074	Statement	my	377:37:7964:7965	7147489	98	True				
ANR	7149075	Statement	-	377:39:7966:7966	7147489	99	True				
ANR	7149076	Statement	1	377:40:7967:7967	7147489	100	True				
ANR	7149077	Statement	)	377:41:7968:7968	7147489	101	True				
ANR	7149078	Statement	CHECK_QUARTER_MV	379:8:7979:7994	7147489	102	True				
ANR	7149079	Statement	(	379:24:7995:7995	7147489	103	True				
ANR	7149080	Statement	1	379:25:7996:7996	7147489	104	True				
ANR	7149081	Statement	","	379:26:7997:7997	7147489	105	True				
ANR	7149082	Statement	1	379:28:7999:7999	7147489	106	True				
ANR	7149083	Statement	","	379:29:8000:8000	7147489	107	True				
ANR	7149084	Statement	mx	379:31:8002:8003	7147489	108	True				
ANR	7149085	Statement	","	379:35:8006:8006	7147489	109	True				
ANR	7149086	Statement	my	379:37:8008:8009	7147489	110	True				
ANR	7149087	Statement	-	379:39:8010:8010	7147489	111	True				
ANR	7149088	Statement	1	379:40:8011:8011	7147489	112	True				
ANR	7149089	Statement	)	379:41:8012:8012	7147489	113	True				
ANR	7149090	Statement	CHECK_QUARTER_MV	381:8:8023:8038	7147489	114	True				
ANR	7149091	Statement	(	381:24:8039:8039	7147489	115	True				
ANR	7149092	Statement	2	381:25:8040:8040	7147489	116	True				
ANR	7149093	Statement	","	381:26:8041:8041	7147489	117	True				
ANR	7149094	Statement	1	381:28:8043:8043	7147489	118	True				
ANR	7149095	Statement	","	381:29:8044:8044	7147489	119	True				
ANR	7149096	Statement	mx	381:31:8046:8047	7147489	120	True				
ANR	7149097	Statement	","	381:35:8050:8050	7147489	121	True				
ANR	7149098	Statement	my	381:37:8052:8053	7147489	122	True				
ANR	7149099	Statement	-	381:39:8054:8054	7147489	123	True				
ANR	7149100	Statement	1	381:40:8055:8055	7147489	124	True				
ANR	7149101	Statement	)	381:41:8056:8056	7147489	125	True				
ANR	7149102	Statement	CHECK_QUARTER_MV	383:8:8067:8082	7147489	126	True				
ANR	7149103	Statement	(	383:24:8083:8083	7147489	127	True				
ANR	7149104	Statement	3	383:25:8084:8084	7147489	128	True				
ANR	7149105	Statement	","	383:26:8085:8085	7147489	129	True				
ANR	7149106	Statement	1	383:28:8087:8087	7147489	130	True				
ANR	7149107	Statement	","	383:29:8088:8088	7147489	131	True				
ANR	7149108	Statement	mx	383:31:8090:8091	7147489	132	True				
ANR	7149109	Statement	","	383:35:8094:8094	7147489	133	True				
ANR	7149110	Statement	my	383:37:8096:8097	7147489	134	True				
ANR	7149111	Statement	-	383:39:8098:8098	7147489	135	True				
ANR	7149112	Statement	1	383:40:8099:8099	7147489	136	True				
ANR	7149113	Statement	)	383:41:8100:8100	7147489	137	True				
ANR	7149114	Statement	CHECK_QUARTER_MV	385:8:8111:8126	7147489	138	True				
ANR	7149115	Statement	(	385:24:8127:8127	7147489	139	True				
ANR	7149116	Statement	3	385:25:8128:8128	7147489	140	True				
ANR	7149117	Statement	","	385:26:8129:8129	7147489	141	True				
ANR	7149118	Statement	2	385:28:8131:8131	7147489	142	True				
ANR	7149119	Statement	","	385:29:8132:8132	7147489	143	True				
ANR	7149120	Statement	mx	385:31:8134:8135	7147489	144	True				
ANR	7149121	Statement	","	385:35:8138:8138	7147489	145	True				
ANR	7149122	Statement	my	385:37:8140:8141	7147489	146	True				
ANR	7149123	Statement	-	385:39:8142:8142	7147489	147	True				
ANR	7149124	Statement	1	385:40:8143:8143	7147489	148	True				
ANR	7149125	Statement	)	385:41:8144:8144	7147489	149	True				
ANR	7149126	Statement	CHECK_QUARTER_MV	387:8:8155:8170	7147489	150	True				
ANR	7149127	Statement	(	387:24:8171:8171	7147489	151	True				
ANR	7149128	Statement	3	387:25:8172:8172	7147489	152	True				
ANR	7149129	Statement	","	387:26:8173:8173	7147489	153	True				
ANR	7149130	Statement	3	387:28:8175:8175	7147489	154	True				
ANR	7149131	Statement	","	387:29:8176:8176	7147489	155	True				
ANR	7149132	Statement	mx	387:31:8178:8179	7147489	156	True				
ANR	7149133	Statement	","	387:35:8182:8182	7147489	157	True				
ANR	7149134	Statement	my	387:37:8184:8185	7147489	158	True				
ANR	7149135	Statement	-	387:39:8186:8186	7147489	159	True				
ANR	7149136	Statement	1	387:40:8187:8187	7147489	160	True				
ANR	7149137	Statement	)	387:41:8188:8188	7147489	161	True				
ANR	7149138	Statement	CHECK_QUARTER_MV	389:8:8199:8214	7147489	162	True				
ANR	7149139	Statement	(	389:24:8215:8215	7147489	163	True				
ANR	7149140	Statement	3	389:25:8216:8216	7147489	164	True				
ANR	7149141	Statement	","	389:26:8217:8217	7147489	165	True				
ANR	7149142	Statement	0	389:28:8219:8219	7147489	166	True				
ANR	7149143	Statement	","	389:29:8220:8220	7147489	167	True				
ANR	7149144	Statement	mx	389:31:8222:8223	7147489	168	True				
ANR	7149145	Statement	","	389:35:8226:8226	7147489	169	True				
ANR	7149146	Statement	my	389:37:8228:8229	7147489	170	True				
ANR	7149147	Statement	)	389:41:8232:8232	7147489	171	True				
ANR	7149148	Statement	CHECK_QUARTER_MV	391:8:8243:8258	7147489	172	True				
ANR	7149149	Statement	(	391:24:8259:8259	7147489	173	True				
ANR	7149150	Statement	3	391:25:8260:8260	7147489	174	True				
ANR	7149151	Statement	","	391:26:8261:8261	7147489	175	True				
ANR	7149152	Statement	1	391:28:8263:8263	7147489	176	True				
ANR	7149153	Statement	","	391:29:8264:8264	7147489	177	True				
ANR	7149154	Statement	mx	391:31:8266:8267	7147489	178	True				
ANR	7149155	Statement	","	391:35:8270:8270	7147489	179	True				
ANR	7149156	Statement	my	391:37:8272:8273	7147489	180	True				
ANR	7149157	Statement	)	391:41:8276:8276	7147489	181	True				
ANR	7149158	Statement	CHECK_QUARTER_MV	393:8:8287:8302	7147489	182	True				
ANR	7149159	Statement	(	393:24:8303:8303	7147489	183	True				
ANR	7149160	Statement	3	393:25:8304:8304	7147489	184	True				
ANR	7149161	Statement	","	393:26:8305:8305	7147489	185	True				
ANR	7149162	Statement	2	393:28:8307:8307	7147489	186	True				
ANR	7149163	Statement	","	393:29:8308:8308	7147489	187	True				
ANR	7149164	Statement	mx	393:31:8310:8311	7147489	188	True				
ANR	7149165	Statement	","	393:35:8314:8314	7147489	189	True				
ANR	7149166	Statement	my	393:37:8316:8317	7147489	190	True				
ANR	7149167	Statement	)	393:41:8320:8320	7147489	191	True				
ANR	7149168	Statement	CHECK_QUARTER_MV	395:8:8331:8346	7147489	192	True				
ANR	7149169	Statement	(	395:24:8347:8347	7147489	193	True				
ANR	7149170	Statement	3	395:25:8348:8348	7147489	194	True				
ANR	7149171	Statement	","	395:26:8349:8349	7147489	195	True				
ANR	7149172	Statement	3	395:28:8351:8351	7147489	196	True				
ANR	7149173	Statement	","	395:29:8352:8352	7147489	197	True				
ANR	7149174	Statement	mx	395:31:8354:8355	7147489	198	True				
ANR	7149175	Statement	","	395:35:8358:8358	7147489	199	True				
ANR	7149176	Statement	my	395:37:8360:8361	7147489	200	True				
ANR	7149177	Statement	)	395:41:8364:8364	7147489	201	True				
ANR	7149178	Statement	CHECK_QUARTER_MV	397:8:8375:8390	7147489	202	True				
ANR	7149179	Statement	(	397:24:8391:8391	7147489	203	True				
ANR	7149180	Statement	2	397:25:8392:8392	7147489	204	True				
ANR	7149181	Statement	","	397:26:8393:8393	7147489	205	True				
ANR	7149182	Statement	3	397:28:8395:8395	7147489	206	True				
ANR	7149183	Statement	","	397:29:8396:8396	7147489	207	True				
ANR	7149184	Statement	mx	397:31:8398:8399	7147489	208	True				
ANR	7149185	Statement	","	397:35:8402:8402	7147489	209	True				
ANR	7149186	Statement	my	397:37:8404:8405	7147489	210	True				
ANR	7149187	Statement	)	397:41:8408:8408	7147489	211	True				
ANR	7149188	Statement	CHECK_QUARTER_MV	399:8:8419:8434	7147489	212	True				
ANR	7149189	Statement	(	399:24:8435:8435	7147489	213	True				
ANR	7149190	Statement	1	399:25:8436:8436	7147489	214	True				
ANR	7149191	Statement	","	399:26:8437:8437	7147489	215	True				
ANR	7149192	Statement	3	399:28:8439:8439	7147489	216	True				
ANR	7149193	Statement	","	399:29:8440:8440	7147489	217	True				
ANR	7149194	Statement	mx	399:31:8442:8443	7147489	218	True				
ANR	7149195	Statement	","	399:35:8446:8446	7147489	219	True				
ANR	7149196	Statement	my	399:37:8448:8449	7147489	220	True				
ANR	7149197	Statement	)	399:41:8452:8452	7147489	221	True				
ANR	7149198	Statement	CHECK_QUARTER_MV	401:8:8463:8478	7147489	222	True				
ANR	7149199	Statement	(	401:24:8479:8479	7147489	223	True				
ANR	7149200	Statement	0	401:25:8480:8480	7147489	224	True				
ANR	7149201	Statement	","	401:26:8481:8481	7147489	225	True				
ANR	7149202	Statement	3	401:28:8483:8483	7147489	226	True				
ANR	7149203	Statement	","	401:29:8484:8484	7147489	227	True				
ANR	7149204	Statement	mx	401:31:8486:8487	7147489	228	True				
ANR	7149205	Statement	","	401:35:8490:8490	7147489	229	True				
ANR	7149206	Statement	my	401:37:8492:8493	7147489	230	True				
ANR	7149207	Statement	)	401:41:8496:8496	7147489	231	True				
ANR	7149208	Statement	CHECK_QUARTER_MV	403:8:8507:8522	7147489	232	True				
ANR	7149209	Statement	(	403:24:8523:8523	7147489	233	True				
ANR	7149210	Statement	3	403:25:8524:8524	7147489	234	True				
ANR	7149211	Statement	","	403:26:8525:8525	7147489	235	True				
ANR	7149212	Statement	3	403:28:8527:8527	7147489	236	True				
ANR	7149213	Statement	","	403:29:8528:8528	7147489	237	True				
ANR	7149214	Statement	mx	403:31:8530:8531	7147489	238	True				
ANR	7149215	Statement	-	403:33:8532:8532	7147489	239	True				
ANR	7149216	Statement	1	403:34:8533:8533	7147489	240	True				
ANR	7149217	Statement	","	403:35:8534:8534	7147489	241	True				
ANR	7149218	Statement	my	403:37:8536:8537	7147489	242	True				
ANR	7149219	Statement	)	403:41:8540:8540	7147489	243	True				
ANR	7149220	Statement	CHECK_QUARTER_MV	405:8:8551:8566	7147489	244	True				
ANR	7149221	Statement	(	405:24:8567:8567	7147489	245	True				
ANR	7149222	Statement	2	405:25:8568:8568	7147489	246	True				
ANR	7149223	Statement	","	405:26:8569:8569	7147489	247	True				
ANR	7149224	Statement	3	405:28:8571:8571	7147489	248	True				
ANR	7149225	Statement	","	405:29:8572:8572	7147489	249	True				
ANR	7149226	Statement	mx	405:31:8574:8575	7147489	250	True				
ANR	7149227	Statement	-	405:33:8576:8576	7147489	251	True				
ANR	7149228	Statement	1	405:34:8577:8577	7147489	252	True				
ANR	7149229	Statement	","	405:35:8578:8578	7147489	253	True				
ANR	7149230	Statement	my	405:37:8580:8581	7147489	254	True				
ANR	7149231	Statement	)	405:41:8584:8584	7147489	255	True				
ANR	7149232	Statement	CHECK_QUARTER_MV	407:8:8595:8610	7147489	256	True				
ANR	7149233	Statement	(	407:24:8611:8611	7147489	257	True				
ANR	7149234	Statement	1	407:25:8612:8612	7147489	258	True				
ANR	7149235	Statement	","	407:26:8613:8613	7147489	259	True				
ANR	7149236	Statement	3	407:28:8615:8615	7147489	260	True				
ANR	7149237	Statement	","	407:29:8616:8616	7147489	261	True				
ANR	7149238	Statement	mx	407:31:8618:8619	7147489	262	True				
ANR	7149239	Statement	-	407:33:8620:8620	7147489	263	True				
ANR	7149240	Statement	1	407:34:8621:8621	7147489	264	True				
ANR	7149241	Statement	","	407:35:8622:8622	7147489	265	True				
ANR	7149242	Statement	my	407:37:8624:8625	7147489	266	True				
ANR	7149243	Statement	)	407:41:8628:8628	7147489	267	True				
ANR	7149244	Statement	CHECK_QUARTER_MV	409:8:8639:8654	7147489	268	True				
ANR	7149245	Statement	(	409:24:8655:8655	7147489	269	True				
ANR	7149246	Statement	1	409:25:8656:8656	7147489	270	True				
ANR	7149247	Statement	","	409:26:8657:8657	7147489	271	True				
ANR	7149248	Statement	2	409:28:8659:8659	7147489	272	True				
ANR	7149249	Statement	","	409:29:8660:8660	7147489	273	True				
ANR	7149250	Statement	mx	409:31:8662:8663	7147489	274	True				
ANR	7149251	Statement	-	409:33:8664:8664	7147489	275	True				
ANR	7149252	Statement	1	409:34:8665:8665	7147489	276	True				
ANR	7149253	Statement	","	409:35:8666:8666	7147489	277	True				
ANR	7149254	Statement	my	409:37:8668:8669	7147489	278	True				
ANR	7149255	Statement	)	409:41:8672:8672	7147489	279	True				
ANR	7149256	Statement	CHECK_QUARTER_MV	411:8:8683:8698	7147489	280	True				
ANR	7149257	Statement	(	411:24:8699:8699	7147489	281	True				
ANR	7149258	Statement	1	411:25:8700:8700	7147489	282	True				
ANR	7149259	Statement	","	411:26:8701:8701	7147489	283	True				
ANR	7149260	Statement	1	411:28:8703:8703	7147489	284	True				
ANR	7149261	Statement	","	411:29:8704:8704	7147489	285	True				
ANR	7149262	Statement	mx	411:31:8706:8707	7147489	286	True				
ANR	7149263	Statement	-	411:33:8708:8708	7147489	287	True				
ANR	7149264	Statement	1	411:34:8709:8709	7147489	288	True				
ANR	7149265	Statement	","	411:35:8710:8710	7147489	289	True				
ANR	7149266	Statement	my	411:37:8712:8713	7147489	290	True				
ANR	7149267	Statement	)	411:41:8716:8716	7147489	291	True				
ANR	7149268	Statement	CHECK_QUARTER_MV	413:8:8727:8742	7147489	292	True				
ANR	7149269	Statement	(	413:24:8743:8743	7147489	293	True				
ANR	7149270	Statement	1	413:25:8744:8744	7147489	294	True				
ANR	7149271	Statement	","	413:26:8745:8745	7147489	295	True				
ANR	7149272	Statement	0	413:28:8747:8747	7147489	296	True				
ANR	7149273	Statement	","	413:29:8748:8748	7147489	297	True				
ANR	7149274	Statement	mx	413:31:8750:8751	7147489	298	True				
ANR	7149275	Statement	-	413:33:8752:8752	7147489	299	True				
ANR	7149276	Statement	1	413:34:8753:8753	7147489	300	True				
ANR	7149277	Statement	","	413:35:8754:8754	7147489	301	True				
ANR	7149278	Statement	my	413:37:8756:8757	7147489	302	True				
ANR	7149279	Statement	)	413:41:8760:8760	7147489	303	True				
ANR	7149280	ExpressionStatement	assert ( bx >= xmin * 4 && bx <= xmax * 4 && by >= ymin * 4 && by <= ymax * 4 )	417:8:8779:8847	7147489	304	True				
ANR	7149281	CallExpression	assert ( bx >= xmin * 4 && bx <= xmax * 4 && by >= ymin * 4 && by <= ymax * 4 )		7147489	0					
ANR	7149282	Callee	assert		7147489	0					
ANR	7149283	Identifier	assert		7147489	0					
ANR	7149284	ArgumentList	bx >= xmin * 4 && bx <= xmax * 4 && by >= ymin * 4 && by <= ymax * 4		7147489	1					
ANR	7149285	Argument	bx >= xmin * 4 && bx <= xmax * 4 && by >= ymin * 4 && by <= ymax * 4		7147489	0					
ANR	7149286	AndExpression	bx >= xmin * 4 && bx <= xmax * 4 && by >= ymin * 4 && by <= ymax * 4		7147489	0		&&			
ANR	7149287	RelationalExpression	bx >= xmin * 4		7147489	0		>=			
ANR	7149288	Identifier	bx		7147489	0					
ANR	7149289	MultiplicativeExpression	xmin * 4		7147489	1		*			
ANR	7149290	Identifier	xmin		7147489	0					
ANR	7149291	PrimaryExpression	4		7147489	1					
ANR	7149292	AndExpression	bx <= xmax * 4 && by >= ymin * 4 && by <= ymax * 4		7147489	1		&&			
ANR	7149293	RelationalExpression	bx <= xmax * 4		7147489	0		<=			
ANR	7149294	Identifier	bx		7147489	0					
ANR	7149295	MultiplicativeExpression	xmax * 4		7147489	1		*			
ANR	7149296	Identifier	xmax		7147489	0					
ANR	7149297	PrimaryExpression	4		7147489	1					
ANR	7149298	AndExpression	by >= ymin * 4 && by <= ymax * 4		7147489	1		&&			
ANR	7149299	RelationalExpression	by >= ymin * 4		7147489	0		>=			
ANR	7149300	Identifier	by		7147489	0					
ANR	7149301	MultiplicativeExpression	ymin * 4		7147489	1		*			
ANR	7149302	Identifier	ymin		7147489	0					
ANR	7149303	PrimaryExpression	4		7147489	1					
ANR	7149304	RelationalExpression	by <= ymax * 4		7147489	1		<=			
ANR	7149305	Identifier	by		7147489	0					
ANR	7149306	MultiplicativeExpression	ymax * 4		7147489	1		*			
ANR	7149307	Identifier	ymax		7147489	0					
ANR	7149308	PrimaryExpression	4		7147489	1					
ANR	7149309	ExpressionStatement	* mx_ptr = bx	421:8:8860:8872	7147489	305	True				
ANR	7149310	AssignmentExpression	* mx_ptr = bx		7147489	0		=			
ANR	7149311	UnaryOperationExpression	* mx_ptr		7147489	0					
ANR	7149312	UnaryOperator	*		7147489	0					
ANR	7149313	Identifier	mx_ptr		7147489	1					
ANR	7149314	Identifier	bx		7147489	1					
ANR	7149315	ExpressionStatement	* my_ptr = by	423:8:8883:8895	7147489	306	True				
ANR	7149316	AssignmentExpression	* my_ptr = by		7147489	0		=			
ANR	7149317	UnaryOperationExpression	* my_ptr		7147489	0					
ANR	7149318	UnaryOperator	*		7147489	0					
ANR	7149319	Identifier	my_ptr		7147489	1					
ANR	7149320	Identifier	by		7147489	1					
ANR	7149321	ElseStatement	else		7147489	0					
ANR	7149322	CompoundStatement		417:9:8661:8661	7147489	0					
ANR	7149323	ExpressionStatement	* mx_ptr = 4 * mx	427:8:8918:8931	7147489	0	True				
ANR	7149324	AssignmentExpression	* mx_ptr = 4 * mx		7147489	0		=			
ANR	7149325	UnaryOperationExpression	* mx_ptr		7147489	0					
ANR	7149326	UnaryOperator	*		7147489	0					
ANR	7149327	Identifier	mx_ptr		7147489	1					
ANR	7149328	MultiplicativeExpression	4 * mx		7147489	1		*			
ANR	7149329	PrimaryExpression	4		7147489	0					
ANR	7149330	Identifier	mx		7147489	1					
ANR	7149331	ExpressionStatement	* my_ptr = 4 * my	429:8:8942:8955	7147489	1	True				
ANR	7149332	AssignmentExpression	* my_ptr = 4 * my		7147489	0		=			
ANR	7149333	UnaryOperationExpression	* my_ptr		7147489	0					
ANR	7149334	UnaryOperator	*		7147489	0					
ANR	7149335	Identifier	my_ptr		7147489	1					
ANR	7149336	MultiplicativeExpression	4 * my		7147489	1		*			
ANR	7149337	PrimaryExpression	4		7147489	0					
ANR	7149338	Identifier	my		7147489	1					
ANR	7149339	ReturnStatement	return dmin ;	435:4:8971:8982	7147489	20	True				
ANR	7149340	Identifier	dmin		7147489	0					
ANR	7149341	ReturnType	static int		7147489	1					
ANR	7149342	Identifier	qpel_motion_search		7147489	2					
ANR	7149343	ParameterList	"MpegEncContext * s , int * mx_ptr , int * my_ptr , int dmin , int src_index , int ref_index , int size , int h"		7147489	3					
ANR	7149344	Parameter	MpegEncContext * s	1:30:30:47	7147489	0	True				
ANR	7149345	ParameterType	MpegEncContext *		7147489	0					
ANR	7149346	Identifier	s		7147489	1					
ANR	7149347	Parameter	int * mx_ptr	3:6:57:67	7147489	1	True				
ANR	7149348	ParameterType	int *		7147489	0					
ANR	7149349	Identifier	mx_ptr		7147489	1					
ANR	7149350	Parameter	int * my_ptr	3:19:70:80	7147489	2	True				
ANR	7149351	ParameterType	int *		7147489	0					
ANR	7149352	Identifier	my_ptr		7147489	1					
ANR	7149353	Parameter	int dmin	3:32:83:90	7147489	3	True				
ANR	7149354	ParameterType	int		7147489	0					
ANR	7149355	Identifier	dmin		7147489	1					
ANR	7149356	Parameter	int src_index	5:34:128:140	7147489	4	True				
ANR	7149357	ParameterType	int		7147489	0					
ANR	7149358	Identifier	src_index		7147489	1					
ANR	7149359	Parameter	int ref_index	5:49:143:155	7147489	5	True				
ANR	7149360	ParameterType	int		7147489	0					
ANR	7149361	Identifier	ref_index		7147489	1					
ANR	7149362	Parameter	int size	7:34:227:234	7147489	6	True				
ANR	7149363	ParameterType	int		7147489	0					
ANR	7149364	Identifier	size		7147489	1					
ANR	7149365	Parameter	int h	7:44:237:241	7147489	7	True				
ANR	7149366	ParameterType	int		7147489	0					
ANR	7149367	Identifier	h		7147489	1					
ANR	7149368	CFGEntryNode	ENTRY		7147489		True				
ANR	7149369	CFGExitNode	EXIT		7147489		True				
ANR	7149370	Symbol	ymin		7147489						
ANR	7149371	Symbol	* s -> dsp . me_sub_cmp		7147489						
ANR	7149372	Symbol	ref_index		7147489						
ANR	7149373	Symbol	* map		7147489						
ANR	7149374	Symbol	* index		7147489						
ANR	7149375	Symbol	c -> skip		7147489						
ANR	7149376	Symbol	my_ptr		7147489						
ANR	7149377	Symbol	c -> map_generation		7147489						
ANR	7149378	Symbol	b2		7147489						
ANR	7149379	Symbol	c -> sub_flags		7147489						
ANR	7149380	Symbol	score		7147489						
ANR	7149381	Symbol	stats		7147489						
ANR	7149382	Symbol	* * mx		7147489						
ANR	7149383	Symbol	ME_MAP_MV_BITS		7147489						
ANR	7149384	Symbol	* by		7147489						
ANR	7149385	Symbol	* my_ptr		7147489						
ANR	7149386	Symbol	* bx		7147489						
ANR	7149387	Symbol	* score_map		7147489						
ANR	7149388	Symbol	index		7147489						
ANR	7149389	Symbol	s -> me . dia_size		7147489						
ANR	7149390	Symbol	s -> dsp		7147489						
ANR	7149391	Symbol	c2		7147489						
ANR	7149392	Symbol	size		7147489						
ANR	7149393	Symbol	* ME_MAP_SIZE		7147489						
ANR	7149394	Symbol	map_generation		7147489						
ANR	7149395	Symbol	t2		7147489						
ANR	7149396	Symbol	c -> avctx -> me_subpel_quality		7147489						
ANR	7149397	Symbol	dmin		7147489						
ANR	7149398	Symbol	* c -> avctx		7147489						
ANR	7149399	Symbol	cmp		7147489						
ANR	7149400	Symbol	& ME_MAP_SIZE		7147489						
ANR	7149401	Symbol	flags		7147489						
ANR	7149402	Symbol	bl		7147489						
ANR	7149403	Symbol	pred_x		7147489						
ANR	7149404	Symbol	* * best_pos		7147489						
ANR	7149405	Symbol	pred_y		7147489						
ANR	7149406	Symbol	chroma_cmpf		7147489						
ANR	7149407	Symbol	br		7147489						
ANR	7149408	Symbol	c -> avctx -> me_sub_cmp		7147489						
ANR	7149409	Symbol	bx		7147489						
ANR	7149410	Symbol	by		7147489						
ANR	7149411	Symbol	* * s		7147489						
ANR	7149412	Symbol	subpel_quality		7147489						
ANR	7149413	Symbol	mv_penalty		7147489						
ANR	7149414	Symbol	cx2		7147489						
ANR	7149415	Symbol	map		7147489						
ANR	7149416	Symbol	ME_MAP_SHIFT		7147489						
ANR	7149417	Symbol	b		7147489						
ANR	7149418	Symbol	c		7147489						
ANR	7149419	Symbol	d		7147489						
ANR	7149420	Symbol	h		7147489						
ANR	7149421	Symbol	i		7147489						
ANR	7149422	Symbol	& s -> me		7147489						
ANR	7149423	Symbol	l		7147489						
ANR	7149424	Symbol	* my		7147489						
ANR	7149425	Symbol	* mx		7147489						
ANR	7149426	Symbol	r		7147489						
ANR	7149427	Symbol	s		7147489						
ANR	7149428	Symbol	ymax		7147489						
ANR	7149429	Symbol	t		7147489						
ANR	7149430	Symbol	* ME_MAP_SHIFT		7147489						
ANR	7149431	Symbol	cx		7147489						
ANR	7149432	Symbol	cy		7147489						
ANR	7149433	Symbol	tl		7147489						
ANR	7149434	Symbol	* * stats		7147489						
ANR	7149435	Symbol	cy2		7147489						
ANR	7149436	Symbol	tr		7147489						
ANR	7149437	Symbol	* best		7147489						
ANR	7149438	Symbol	* mx_ptr		7147489						
ANR	7149439	Symbol	mx_ptr		7147489						
ANR	7149440	Symbol	* s -> dsp . me_cmp		7147489						
ANR	7149441	Symbol	* ny		7147489						
ANR	7149442	Symbol	src_index		7147489						
ANR	7149443	Symbol	* size		7147489						
ANR	7149444	Symbol	* nx		7147489						
ANR	7149445	Symbol	chroma_cmp_sub		7147489						
ANR	7149446	Symbol	* s -> dsp		7147489						
ANR	7149447	Symbol	* * i		7147489						
ANR	7149448	Symbol	cxy		7147489						
ANR	7149449	Symbol	cmp_sub		7147489						
ANR	7149450	Symbol	* * c		7147489						
ANR	7149451	Symbol	count		7147489						
ANR	7149452	Symbol	c -> sub_penalty_factor		7147489						
ANR	7149453	Symbol	mx		7147489						
ANR	7149454	Symbol	my		7147489						
ANR	7149455	Symbol	best_pos		7147489						
ANR	7149456	Symbol	c -> avctx		7147489						
ANR	7149457	Symbol	* best_pos		7147489						
ANR	7149458	Symbol	* * bx		7147489						
ANR	7149459	Symbol	* stats		7147489						
ANR	7149460	Symbol	* mv_penalty		7147489						
ANR	7149461	Symbol	score_map		7147489						
ANR	7149462	Symbol	nx		7147489						
ANR	7149463	Symbol	best		7147489						
ANR	7149464	Symbol	ny		7147489						
ANR	7149465	Symbol	cmpf		7147489						
ANR	7149466	Symbol	s -> dsp . me_cmp		7147489						
ANR	7149467	Symbol	xmax		7147489						
ANR	7149468	Symbol	c -> map		7147489						
ANR	7149469	Symbol	s -> dsp . me_sub_cmp		7147489						
ANR	7149470	Symbol	* pred_y		7147489						
ANR	7149471	Symbol	* pred_x		7147489						
ANR	7149472	Symbol	xmin		7147489						
ANR	7149473	Symbol	penalty_factor		7147489						
ANR	7149474	Symbol	ME_MAP_SIZE		7147489						
ANR	7149475	Symbol	s -> me		7147489						
ANR	7149476	Symbol	c -> avctx -> me_cmp		7147489						
ANR	7149477	Symbol	* c		7147489						
ANR	7149478	Symbol	* i		7147489						
ANR	7149479	Symbol	* s		7147489						
