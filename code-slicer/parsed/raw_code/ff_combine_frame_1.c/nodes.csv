command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3212519	File	/home/p4ultr4n/workplace/ReVeal/raw_code/ff_combine_frame_1.c								
ANR	3212520	Function	ff_combine_frame	1:0:0:2116							
ANR	3212521	FunctionDef	"ff_combine_frame (ParseContext * pc , int next , const uint8_t * * buf , int * buf_size)"		3212520	0					
ANR	3212522	CompoundStatement		3:0:86:2116	3212520	0					
ANR	3212523	IfStatement	if ( pc -> overread )		3212520	0					
ANR	3212524	Condition	pc -> overread	5:7:96:107	3212520	0	True				
ANR	3212525	PtrMemberAccess	pc -> overread		3212520	0					
ANR	3212526	Identifier	pc		3212520	0					
ANR	3212527	Identifier	overread		3212520	1					
ANR	3212528	CompoundStatement		3:20:22:22	3212520	1					
ANR	3212529	ExpressionStatement	"av_dlog ( NULL , ""overread %d, state:%X next:%d index:%d o_index:%d\\n"" , pc -> overread , pc -> state , next , pc -> index , pc -> overread_index )"	7:8:120:267	3212520	0	True				
ANR	3212530	CallExpression	"av_dlog ( NULL , ""overread %d, state:%X next:%d index:%d o_index:%d\\n"" , pc -> overread , pc -> state , next , pc -> index , pc -> overread_index )"		3212520	0					
ANR	3212531	Callee	av_dlog		3212520	0					
ANR	3212532	Identifier	av_dlog		3212520	0					
ANR	3212533	ArgumentList	NULL		3212520	1					
ANR	3212534	Argument	NULL		3212520	0					
ANR	3212535	Identifier	NULL		3212520	0					
ANR	3212536	Argument	"""overread %d, state:%X next:%d index:%d o_index:%d\\n"""		3212520	1					
ANR	3212537	PrimaryExpression	"""overread %d, state:%X next:%d index:%d o_index:%d\\n"""		3212520	0					
ANR	3212538	Argument	pc -> overread		3212520	2					
ANR	3212539	PtrMemberAccess	pc -> overread		3212520	0					
ANR	3212540	Identifier	pc		3212520	0					
ANR	3212541	Identifier	overread		3212520	1					
ANR	3212542	Argument	pc -> state		3212520	3					
ANR	3212543	PtrMemberAccess	pc -> state		3212520	0					
ANR	3212544	Identifier	pc		3212520	0					
ANR	3212545	Identifier	state		3212520	1					
ANR	3212546	Argument	next		3212520	4					
ANR	3212547	Identifier	next		3212520	0					
ANR	3212548	Argument	pc -> index		3212520	5					
ANR	3212549	PtrMemberAccess	pc -> index		3212520	0					
ANR	3212550	Identifier	pc		3212520	0					
ANR	3212551	Identifier	index		3212520	1					
ANR	3212552	Argument	pc -> overread_index		3212520	6					
ANR	3212553	PtrMemberAccess	pc -> overread_index		3212520	0					
ANR	3212554	Identifier	pc		3212520	0					
ANR	3212555	Identifier	overread_index		3212520	1					
ANR	3212556	ExpressionStatement	"av_dlog ( NULL , ""%X %X %X %X\\n"" , ( * buf ) [ 0 ] , ( * buf ) [ 1 ] , ( * buf ) [ 2 ] , ( * buf ) [ 3 ] )"	11:8:278:352	3212520	1	True				
ANR	3212557	CallExpression	"av_dlog ( NULL , ""%X %X %X %X\\n"" , ( * buf ) [ 0 ] , ( * buf ) [ 1 ] , ( * buf ) [ 2 ] , ( * buf ) [ 3 ] )"		3212520	0					
ANR	3212558	Callee	av_dlog		3212520	0					
ANR	3212559	Identifier	av_dlog		3212520	0					
ANR	3212560	ArgumentList	NULL		3212520	1					
ANR	3212561	Argument	NULL		3212520	0					
ANR	3212562	Identifier	NULL		3212520	0					
ANR	3212563	Argument	"""%X %X %X %X\\n"""		3212520	1					
ANR	3212564	PrimaryExpression	"""%X %X %X %X\\n"""		3212520	0					
ANR	3212565	Argument	( * buf ) [ 0 ]		3212520	2					
ANR	3212566	ArrayIndexing	( * buf ) [ 0 ]		3212520	0					
ANR	3212567	UnaryOperationExpression	* buf		3212520	0					
ANR	3212568	UnaryOperator	*		3212520	0					
ANR	3212569	Identifier	buf		3212520	1					
ANR	3212570	PrimaryExpression	0		3212520	1					
ANR	3212571	Argument	( * buf ) [ 1 ]		3212520	3					
ANR	3212572	ArrayIndexing	( * buf ) [ 1 ]		3212520	0					
ANR	3212573	UnaryOperationExpression	* buf		3212520	0					
ANR	3212574	UnaryOperator	*		3212520	0					
ANR	3212575	Identifier	buf		3212520	1					
ANR	3212576	PrimaryExpression	1		3212520	1					
ANR	3212577	Argument	( * buf ) [ 2 ]		3212520	4					
ANR	3212578	ArrayIndexing	( * buf ) [ 2 ]		3212520	0					
ANR	3212579	UnaryOperationExpression	* buf		3212520	0					
ANR	3212580	UnaryOperator	*		3212520	0					
ANR	3212581	Identifier	buf		3212520	1					
ANR	3212582	PrimaryExpression	2		3212520	1					
ANR	3212583	Argument	( * buf ) [ 3 ]		3212520	5					
ANR	3212584	ArrayIndexing	( * buf ) [ 3 ]		3212520	0					
ANR	3212585	UnaryOperationExpression	* buf		3212520	0					
ANR	3212586	UnaryOperator	*		3212520	0					
ANR	3212587	Identifier	buf		3212520	1					
ANR	3212588	PrimaryExpression	3		3212520	1					
ANR	3212589	ForStatement	for ( ; pc -> overread > 0 ; pc -> overread -- )		3212520	1					
ANR	3212590	Condition	pc -> overread > 0	19:10:434:447	3212520	0	True				
ANR	3212591	RelationalExpression	pc -> overread > 0		3212520	0		>			
ANR	3212592	PtrMemberAccess	pc -> overread		3212520	0					
ANR	3212593	Identifier	pc		3212520	0					
ANR	3212594	Identifier	overread		3212520	1					
ANR	3212595	PrimaryExpression	0		3212520	1					
ANR	3212596	PostIncDecOperationExpression	pc -> overread --	19:26:450:463	3212520	1	True				
ANR	3212597	PtrMemberAccess	pc -> overread		3212520	0					
ANR	3212598	Identifier	pc		3212520	0					
ANR	3212599	Identifier	overread		3212520	1					
ANR	3212600	IncDec	--		3212520	1					
ANR	3212601	CompoundStatement		17:41:378:378	3212520	2					
ANR	3212602	ExpressionStatement	pc -> buffer [ pc -> index ++ ] = pc -> buffer [ pc -> overread_index ++ ]	21:8:476:533	3212520	0	True				
ANR	3212603	AssignmentExpression	pc -> buffer [ pc -> index ++ ] = pc -> buffer [ pc -> overread_index ++ ]		3212520	0		=			
ANR	3212604	ArrayIndexing	pc -> buffer [ pc -> index ++ ]		3212520	0					
ANR	3212605	PtrMemberAccess	pc -> buffer		3212520	0					
ANR	3212606	Identifier	pc		3212520	0					
ANR	3212607	Identifier	buffer		3212520	1					
ANR	3212608	PostIncDecOperationExpression	pc -> index ++		3212520	1					
ANR	3212609	PtrMemberAccess	pc -> index		3212520	0					
ANR	3212610	Identifier	pc		3212520	0					
ANR	3212611	Identifier	index		3212520	1					
ANR	3212612	IncDec	++		3212520	1					
ANR	3212613	ArrayIndexing	pc -> buffer [ pc -> overread_index ++ ]		3212520	1					
ANR	3212614	PtrMemberAccess	pc -> buffer		3212520	0					
ANR	3212615	Identifier	pc		3212520	0					
ANR	3212616	Identifier	buffer		3212520	1					
ANR	3212617	PostIncDecOperationExpression	pc -> overread_index ++		3212520	1					
ANR	3212618	PtrMemberAccess	pc -> overread_index		3212520	0					
ANR	3212619	Identifier	pc		3212520	0					
ANR	3212620	Identifier	overread_index		3212520	1					
ANR	3212621	IncDec	++		3212520	1					
ANR	3212622	IfStatement	if ( ! * buf_size && next == END_NOT_FOUND )		3212520	2					
ANR	3212623	Condition	! * buf_size && next == END_NOT_FOUND	29:7:586:620	3212520	0	True				
ANR	3212624	AndExpression	! * buf_size && next == END_NOT_FOUND		3212520	0		&&			
ANR	3212625	UnaryOperationExpression	! * buf_size		3212520	0					
ANR	3212626	UnaryOperator	!		3212520	0					
ANR	3212627	UnaryOperationExpression	* buf_size		3212520	1					
ANR	3212628	UnaryOperator	*		3212520	0					
ANR	3212629	Identifier	buf_size		3212520	1					
ANR	3212630	EqualityExpression	next == END_NOT_FOUND		3212520	1		==			
ANR	3212631	Identifier	next		3212520	0					
ANR	3212632	Identifier	END_NOT_FOUND		3212520	1					
ANR	3212633	CompoundStatement		27:43:535:535	3212520	1					
ANR	3212634	ExpressionStatement	next = 0	31:8:633:640	3212520	0	True				
ANR	3212635	AssignmentExpression	next = 0		3212520	0		=			
ANR	3212636	Identifier	next		3212520	0					
ANR	3212637	PrimaryExpression	0		3212520	1					
ANR	3212638	ExpressionStatement	pc -> last_index = pc -> index	37:4:656:681	3212520	3	True				
ANR	3212639	AssignmentExpression	pc -> last_index = pc -> index		3212520	0		=			
ANR	3212640	PtrMemberAccess	pc -> last_index		3212520	0					
ANR	3212641	Identifier	pc		3212520	0					
ANR	3212642	Identifier	last_index		3212520	1					
ANR	3212643	PtrMemberAccess	pc -> index		3212520	1					
ANR	3212644	Identifier	pc		3212520	0					
ANR	3212645	Identifier	index		3212520	1					
ANR	3212646	IfStatement	if ( next == END_NOT_FOUND )		3212520	4					
ANR	3212647	Condition	next == END_NOT_FOUND	43:7:732:752	3212520	0	True				
ANR	3212648	EqualityExpression	next == END_NOT_FOUND		3212520	0		==			
ANR	3212649	Identifier	next		3212520	0					
ANR	3212650	Identifier	END_NOT_FOUND		3212520	1					
ANR	3212651	CompoundStatement		43:8:678:798	3212520	1					
ANR	3212652	IdentifierDeclStatement	"void * new_buffer = av_fast_realloc ( pc -> buffer , & pc -> buffer_size , ( * buf_size ) + pc -> index + FF_INPUT_BUFFER_PADDING_SIZE ) ;"	45:8:765:885	3212520	0	True				
ANR	3212653	IdentifierDecl	"* new_buffer = av_fast_realloc ( pc -> buffer , & pc -> buffer_size , ( * buf_size ) + pc -> index + FF_INPUT_BUFFER_PADDING_SIZE )"		3212520	0					
ANR	3212654	IdentifierDeclType	void *		3212520	0					
ANR	3212655	Identifier	new_buffer		3212520	1					
ANR	3212656	AssignmentExpression	"* new_buffer = av_fast_realloc ( pc -> buffer , & pc -> buffer_size , ( * buf_size ) + pc -> index + FF_INPUT_BUFFER_PADDING_SIZE )"		3212520	2		=			
ANR	3212657	Identifier	new_buffer		3212520	0					
ANR	3212658	CallExpression	"av_fast_realloc ( pc -> buffer , & pc -> buffer_size , ( * buf_size ) + pc -> index + FF_INPUT_BUFFER_PADDING_SIZE )"		3212520	1					
ANR	3212659	Callee	av_fast_realloc		3212520	0					
ANR	3212660	Identifier	av_fast_realloc		3212520	0					
ANR	3212661	ArgumentList	pc -> buffer		3212520	1					
ANR	3212662	Argument	pc -> buffer		3212520	0					
ANR	3212663	PtrMemberAccess	pc -> buffer		3212520	0					
ANR	3212664	Identifier	pc		3212520	0					
ANR	3212665	Identifier	buffer		3212520	1					
ANR	3212666	Argument	& pc -> buffer_size		3212520	1					
ANR	3212667	UnaryOperationExpression	& pc -> buffer_size		3212520	0					
ANR	3212668	UnaryOperator	&		3212520	0					
ANR	3212669	PtrMemberAccess	pc -> buffer_size		3212520	1					
ANR	3212670	Identifier	pc		3212520	0					
ANR	3212671	Identifier	buffer_size		3212520	1					
ANR	3212672	Argument	( * buf_size ) + pc -> index + FF_INPUT_BUFFER_PADDING_SIZE		3212520	2					
ANR	3212673	AdditiveExpression	( * buf_size ) + pc -> index + FF_INPUT_BUFFER_PADDING_SIZE		3212520	0		+			
ANR	3212674	UnaryOperationExpression	* buf_size		3212520	0					
ANR	3212675	UnaryOperator	*		3212520	0					
ANR	3212676	Identifier	buf_size		3212520	1					
ANR	3212677	AdditiveExpression	pc -> index + FF_INPUT_BUFFER_PADDING_SIZE		3212520	1		+			
ANR	3212678	PtrMemberAccess	pc -> index		3212520	0					
ANR	3212679	Identifier	pc		3212520	0					
ANR	3212680	Identifier	index		3212520	1					
ANR	3212681	Identifier	FF_INPUT_BUFFER_PADDING_SIZE		3212520	1					
ANR	3212682	IfStatement	if ( ! new_buffer )		3212520	1					
ANR	3212683	Condition	! new_buffer	49:11:901:911	3212520	0	True				
ANR	3212684	UnaryOperationExpression	! new_buffer		3212520	0					
ANR	3212685	UnaryOperator	!		3212520	0					
ANR	3212686	Identifier	new_buffer		3212520	1					
ANR	3212687	ReturnStatement	return AVERROR ( ENOMEM ) ;	51:12:927:949	3212520	1	True				
ANR	3212688	CallExpression	AVERROR ( ENOMEM )		3212520	0					
ANR	3212689	Callee	AVERROR		3212520	0					
ANR	3212690	Identifier	AVERROR		3212520	0					
ANR	3212691	ArgumentList	ENOMEM		3212520	1					
ANR	3212692	Argument	ENOMEM		3212520	0					
ANR	3212693	Identifier	ENOMEM		3212520	0					
ANR	3212694	ExpressionStatement	pc -> buffer = new_buffer	53:8:960:983	3212520	2	True				
ANR	3212695	AssignmentExpression	pc -> buffer = new_buffer		3212520	0		=			
ANR	3212696	PtrMemberAccess	pc -> buffer		3212520	0					
ANR	3212697	Identifier	pc		3212520	0					
ANR	3212698	Identifier	buffer		3212520	1					
ANR	3212699	Identifier	new_buffer		3212520	1					
ANR	3212700	ExpressionStatement	"memcpy ( & pc -> buffer [ pc -> index ] , * buf , * buf_size )"	55:8:994:1041	3212520	3	True				
ANR	3212701	CallExpression	"memcpy ( & pc -> buffer [ pc -> index ] , * buf , * buf_size )"		3212520	0					
ANR	3212702	Callee	memcpy		3212520	0					
ANR	3212703	Identifier	memcpy		3212520	0					
ANR	3212704	ArgumentList	& pc -> buffer [ pc -> index ]		3212520	1					
ANR	3212705	Argument	& pc -> buffer [ pc -> index ]		3212520	0					
ANR	3212706	UnaryOperationExpression	& pc -> buffer [ pc -> index ]		3212520	0					
ANR	3212707	UnaryOperator	&		3212520	0					
ANR	3212708	ArrayIndexing	pc -> buffer [ pc -> index ]		3212520	1					
ANR	3212709	PtrMemberAccess	pc -> buffer		3212520	0					
ANR	3212710	Identifier	pc		3212520	0					
ANR	3212711	Identifier	buffer		3212520	1					
ANR	3212712	PtrMemberAccess	pc -> index		3212520	1					
ANR	3212713	Identifier	pc		3212520	0					
ANR	3212714	Identifier	index		3212520	1					
ANR	3212715	Argument	* buf		3212520	1					
ANR	3212716	UnaryOperationExpression	* buf		3212520	0					
ANR	3212717	UnaryOperator	*		3212520	0					
ANR	3212718	Identifier	buf		3212520	1					
ANR	3212719	Argument	* buf_size		3212520	2					
ANR	3212720	UnaryOperationExpression	* buf_size		3212520	0					
ANR	3212721	UnaryOperator	*		3212520	0					
ANR	3212722	Identifier	buf_size		3212520	1					
ANR	3212723	ExpressionStatement	pc -> index += * buf_size	57:8:1052:1074	3212520	4	True				
ANR	3212724	AssignmentExpression	pc -> index += * buf_size		3212520	0		+=			
ANR	3212725	PtrMemberAccess	pc -> index		3212520	0					
ANR	3212726	Identifier	pc		3212520	0					
ANR	3212727	Identifier	index		3212520	1					
ANR	3212728	UnaryOperationExpression	* buf_size		3212520	1					
ANR	3212729	UnaryOperator	*		3212520	0					
ANR	3212730	Identifier	buf_size		3212520	1					
ANR	3212731	ReturnStatement	return - 1 ;	59:8:1085:1094	3212520	5	True				
ANR	3212732	UnaryOperationExpression	- 1		3212520	0					
ANR	3212733	UnaryOperator	-		3212520	0					
ANR	3212734	PrimaryExpression	1		3212520	1					
ANR	3212735	ExpressionStatement	* buf_size = pc -> overread_index = pc -> index + next	65:4:1110:1162	3212520	5	True				
ANR	3212736	AssignmentExpression	* buf_size = pc -> overread_index = pc -> index + next		3212520	0		=			
ANR	3212737	UnaryOperationExpression	* buf_size		3212520	0					
ANR	3212738	UnaryOperator	*		3212520	0					
ANR	3212739	Identifier	buf_size		3212520	1					
ANR	3212740	AssignmentExpression	pc -> overread_index = pc -> index + next		3212520	1		=			
ANR	3212741	PtrMemberAccess	pc -> overread_index		3212520	0					
ANR	3212742	Identifier	pc		3212520	0					
ANR	3212743	Identifier	overread_index		3212520	1					
ANR	3212744	AdditiveExpression	pc -> index + next		3212520	1		+			
ANR	3212745	PtrMemberAccess	pc -> index		3212520	0					
ANR	3212746	Identifier	pc		3212520	0					
ANR	3212747	Identifier	index		3212520	1					
ANR	3212748	Identifier	next		3212520	1					
ANR	3212749	IfStatement	if ( pc -> index )		3212520	6					
ANR	3212750	Condition	pc -> index	73:7:1202:1210	3212520	0	True				
ANR	3212751	PtrMemberAccess	pc -> index		3212520	0					
ANR	3212752	Identifier	pc		3212520	0					
ANR	3212753	Identifier	index		3212520	1					
ANR	3212754	CompoundStatement		73:8:1136:1249	3212520	1					
ANR	3212755	IdentifierDeclStatement	"void * new_buffer = av_fast_realloc ( pc -> buffer , & pc -> buffer_size , next + pc -> index + FF_INPUT_BUFFER_PADDING_SIZE ) ;"	75:8:1223:1336	3212520	0	True				
ANR	3212756	IdentifierDecl	"* new_buffer = av_fast_realloc ( pc -> buffer , & pc -> buffer_size , next + pc -> index + FF_INPUT_BUFFER_PADDING_SIZE )"		3212520	0					
ANR	3212757	IdentifierDeclType	void *		3212520	0					
ANR	3212758	Identifier	new_buffer		3212520	1					
ANR	3212759	AssignmentExpression	"* new_buffer = av_fast_realloc ( pc -> buffer , & pc -> buffer_size , next + pc -> index + FF_INPUT_BUFFER_PADDING_SIZE )"		3212520	2		=			
ANR	3212760	Identifier	new_buffer		3212520	0					
ANR	3212761	CallExpression	"av_fast_realloc ( pc -> buffer , & pc -> buffer_size , next + pc -> index + FF_INPUT_BUFFER_PADDING_SIZE )"		3212520	1					
ANR	3212762	Callee	av_fast_realloc		3212520	0					
ANR	3212763	Identifier	av_fast_realloc		3212520	0					
ANR	3212764	ArgumentList	pc -> buffer		3212520	1					
ANR	3212765	Argument	pc -> buffer		3212520	0					
ANR	3212766	PtrMemberAccess	pc -> buffer		3212520	0					
ANR	3212767	Identifier	pc		3212520	0					
ANR	3212768	Identifier	buffer		3212520	1					
ANR	3212769	Argument	& pc -> buffer_size		3212520	1					
ANR	3212770	UnaryOperationExpression	& pc -> buffer_size		3212520	0					
ANR	3212771	UnaryOperator	&		3212520	0					
ANR	3212772	PtrMemberAccess	pc -> buffer_size		3212520	1					
ANR	3212773	Identifier	pc		3212520	0					
ANR	3212774	Identifier	buffer_size		3212520	1					
ANR	3212775	Argument	next + pc -> index + FF_INPUT_BUFFER_PADDING_SIZE		3212520	2					
ANR	3212776	AdditiveExpression	next + pc -> index + FF_INPUT_BUFFER_PADDING_SIZE		3212520	0		+			
ANR	3212777	Identifier	next		3212520	0					
ANR	3212778	AdditiveExpression	pc -> index + FF_INPUT_BUFFER_PADDING_SIZE		3212520	1		+			
ANR	3212779	PtrMemberAccess	pc -> index		3212520	0					
ANR	3212780	Identifier	pc		3212520	0					
ANR	3212781	Identifier	index		3212520	1					
ANR	3212782	Identifier	FF_INPUT_BUFFER_PADDING_SIZE		3212520	1					
ANR	3212783	IfStatement	if ( ! new_buffer )		3212520	1					
ANR	3212784	Condition	! new_buffer	79:11:1352:1362	3212520	0	True				
ANR	3212785	UnaryOperationExpression	! new_buffer		3212520	0					
ANR	3212786	UnaryOperator	!		3212520	0					
ANR	3212787	Identifier	new_buffer		3212520	1					
ANR	3212788	ReturnStatement	return AVERROR ( ENOMEM ) ;	81:12:1378:1400	3212520	1	True				
ANR	3212789	CallExpression	AVERROR ( ENOMEM )		3212520	0					
ANR	3212790	Callee	AVERROR		3212520	0					
ANR	3212791	Identifier	AVERROR		3212520	0					
ANR	3212792	ArgumentList	ENOMEM		3212520	1					
ANR	3212793	Argument	ENOMEM		3212520	0					
ANR	3212794	Identifier	ENOMEM		3212520	0					
ANR	3212795	ExpressionStatement	pc -> buffer = new_buffer	83:8:1411:1434	3212520	2	True				
ANR	3212796	AssignmentExpression	pc -> buffer = new_buffer		3212520	0		=			
ANR	3212797	PtrMemberAccess	pc -> buffer		3212520	0					
ANR	3212798	Identifier	pc		3212520	0					
ANR	3212799	Identifier	buffer		3212520	1					
ANR	3212800	Identifier	new_buffer		3212520	1					
ANR	3212801	ExpressionStatement	"memcpy ( & pc -> buffer [ pc -> index ] , * buf , next + FF_INPUT_BUFFER_PADDING_SIZE )"	86:8:1446:1520	3212520	3	True				
ANR	3212802	CallExpression	"memcpy ( & pc -> buffer [ pc -> index ] , * buf , next + FF_INPUT_BUFFER_PADDING_SIZE )"		3212520	0					
ANR	3212803	Callee	memcpy		3212520	0					
ANR	3212804	Identifier	memcpy		3212520	0					
ANR	3212805	ArgumentList	& pc -> buffer [ pc -> index ]		3212520	1					
ANR	3212806	Argument	& pc -> buffer [ pc -> index ]		3212520	0					
ANR	3212807	UnaryOperationExpression	& pc -> buffer [ pc -> index ]		3212520	0					
ANR	3212808	UnaryOperator	&		3212520	0					
ANR	3212809	ArrayIndexing	pc -> buffer [ pc -> index ]		3212520	1					
ANR	3212810	PtrMemberAccess	pc -> buffer		3212520	0					
ANR	3212811	Identifier	pc		3212520	0					
ANR	3212812	Identifier	buffer		3212520	1					
ANR	3212813	PtrMemberAccess	pc -> index		3212520	1					
ANR	3212814	Identifier	pc		3212520	0					
ANR	3212815	Identifier	index		3212520	1					
ANR	3212816	Argument	* buf		3212520	1					
ANR	3212817	UnaryOperationExpression	* buf		3212520	0					
ANR	3212818	UnaryOperator	*		3212520	0					
ANR	3212819	Identifier	buf		3212520	1					
ANR	3212820	Argument	next + FF_INPUT_BUFFER_PADDING_SIZE		3212520	2					
ANR	3212821	AdditiveExpression	next + FF_INPUT_BUFFER_PADDING_SIZE		3212520	0		+			
ANR	3212822	Identifier	next		3212520	0					
ANR	3212823	Identifier	FF_INPUT_BUFFER_PADDING_SIZE		3212520	1					
ANR	3212824	ExpressionStatement	pc -> index = 0	88:8:1531:1544	3212520	4	True				
ANR	3212825	AssignmentExpression	pc -> index = 0		3212520	0		=			
ANR	3212826	PtrMemberAccess	pc -> index		3212520	0					
ANR	3212827	Identifier	pc		3212520	0					
ANR	3212828	Identifier	index		3212520	1					
ANR	3212829	PrimaryExpression	0		3212520	1					
ANR	3212830	ExpressionStatement	* buf = pc -> buffer	90:8:1555:1571	3212520	5	True				
ANR	3212831	AssignmentExpression	* buf = pc -> buffer		3212520	0		=			
ANR	3212832	UnaryOperationExpression	* buf		3212520	0					
ANR	3212833	UnaryOperator	*		3212520	0					
ANR	3212834	Identifier	buf		3212520	1					
ANR	3212835	PtrMemberAccess	pc -> buffer		3212520	1					
ANR	3212836	Identifier	pc		3212520	0					
ANR	3212837	Identifier	buffer		3212520	1					
ANR	3212838	ForStatement	for ( ; next < 0 ; next ++ )		3212520	7					
ANR	3212839	Condition	next < 0	98:9:1624:1631	3212520	0	True				
ANR	3212840	RelationalExpression	next < 0		3212520	0		<			
ANR	3212841	Identifier	next		3212520	0					
ANR	3212842	PrimaryExpression	0		3212520	1					
ANR	3212843	PostIncDecOperationExpression	next ++	98:19:1634:1639	3212520	1	True				
ANR	3212844	Identifier	next		3212520	0					
ANR	3212845	IncDec	++		3212520	1					
ANR	3212846	CompoundStatement		96:26:1554:1554	3212520	2					
ANR	3212847	ExpressionStatement	pc -> state = ( pc -> state << 8 ) | pc -> buffer [ pc -> last_index + next ]	100:8:1652:1714	3212520	0	True				
ANR	3212848	AssignmentExpression	pc -> state = ( pc -> state << 8 ) | pc -> buffer [ pc -> last_index + next ]		3212520	0		=			
ANR	3212849	PtrMemberAccess	pc -> state		3212520	0					
ANR	3212850	Identifier	pc		3212520	0					
ANR	3212851	Identifier	state		3212520	1					
ANR	3212852	InclusiveOrExpression	( pc -> state << 8 ) | pc -> buffer [ pc -> last_index + next ]		3212520	1		|			
ANR	3212853	ShiftExpression	pc -> state << 8		3212520	0		<<			
ANR	3212854	PtrMemberAccess	pc -> state		3212520	0					
ANR	3212855	Identifier	pc		3212520	0					
ANR	3212856	Identifier	state		3212520	1					
ANR	3212857	PrimaryExpression	8		3212520	1					
ANR	3212858	ArrayIndexing	pc -> buffer [ pc -> last_index + next ]		3212520	1					
ANR	3212859	PtrMemberAccess	pc -> buffer		3212520	0					
ANR	3212860	Identifier	pc		3212520	0					
ANR	3212861	Identifier	buffer		3212520	1					
ANR	3212862	AdditiveExpression	pc -> last_index + next		3212520	1		+			
ANR	3212863	PtrMemberAccess	pc -> last_index		3212520	0					
ANR	3212864	Identifier	pc		3212520	0					
ANR	3212865	Identifier	last_index		3212520	1					
ANR	3212866	Identifier	next		3212520	1					
ANR	3212867	ExpressionStatement	pc -> state64 = ( pc -> state64 << 8 ) | pc -> buffer [ pc -> last_index + next ]	102:8:1725:1791	3212520	1	True				
ANR	3212868	AssignmentExpression	pc -> state64 = ( pc -> state64 << 8 ) | pc -> buffer [ pc -> last_index + next ]		3212520	0		=			
ANR	3212869	PtrMemberAccess	pc -> state64		3212520	0					
ANR	3212870	Identifier	pc		3212520	0					
ANR	3212871	Identifier	state64		3212520	1					
ANR	3212872	InclusiveOrExpression	( pc -> state64 << 8 ) | pc -> buffer [ pc -> last_index + next ]		3212520	1		|			
ANR	3212873	ShiftExpression	pc -> state64 << 8		3212520	0		<<			
ANR	3212874	PtrMemberAccess	pc -> state64		3212520	0					
ANR	3212875	Identifier	pc		3212520	0					
ANR	3212876	Identifier	state64		3212520	1					
ANR	3212877	PrimaryExpression	8		3212520	1					
ANR	3212878	ArrayIndexing	pc -> buffer [ pc -> last_index + next ]		3212520	1					
ANR	3212879	PtrMemberAccess	pc -> buffer		3212520	0					
ANR	3212880	Identifier	pc		3212520	0					
ANR	3212881	Identifier	buffer		3212520	1					
ANR	3212882	AdditiveExpression	pc -> last_index + next		3212520	1		+			
ANR	3212883	PtrMemberAccess	pc -> last_index		3212520	0					
ANR	3212884	Identifier	pc		3212520	0					
ANR	3212885	Identifier	last_index		3212520	1					
ANR	3212886	Identifier	next		3212520	1					
ANR	3212887	ExpressionStatement	pc -> overread ++	104:8:1802:1816	3212520	2	True				
ANR	3212888	PostIncDecOperationExpression	pc -> overread ++		3212520	0					
ANR	3212889	PtrMemberAccess	pc -> overread		3212520	0					
ANR	3212890	Identifier	pc		3212520	0					
ANR	3212891	Identifier	overread		3212520	1					
ANR	3212892	IncDec	++		3212520	1					
ANR	3212893	IfStatement	if ( pc -> overread )		3212520	8					
ANR	3212894	Condition	pc -> overread	110:7:1835:1846	3212520	0	True				
ANR	3212895	PtrMemberAccess	pc -> overread		3212520	0					
ANR	3212896	Identifier	pc		3212520	0					
ANR	3212897	Identifier	overread		3212520	1					
ANR	3212898	CompoundStatement		108:20:1761:1761	3212520	1					
ANR	3212899	ExpressionStatement	"av_dlog ( NULL , ""overread %d, state:%X next:%d index:%d o_index:%d\\n"" , pc -> overread , pc -> state , next , pc -> index , pc -> overread_index )"	112:8:1859:2006	3212520	0	True				
ANR	3212900	CallExpression	"av_dlog ( NULL , ""overread %d, state:%X next:%d index:%d o_index:%d\\n"" , pc -> overread , pc -> state , next , pc -> index , pc -> overread_index )"		3212520	0					
ANR	3212901	Callee	av_dlog		3212520	0					
ANR	3212902	Identifier	av_dlog		3212520	0					
ANR	3212903	ArgumentList	NULL		3212520	1					
ANR	3212904	Argument	NULL		3212520	0					
ANR	3212905	Identifier	NULL		3212520	0					
ANR	3212906	Argument	"""overread %d, state:%X next:%d index:%d o_index:%d\\n"""		3212520	1					
ANR	3212907	PrimaryExpression	"""overread %d, state:%X next:%d index:%d o_index:%d\\n"""		3212520	0					
ANR	3212908	Argument	pc -> overread		3212520	2					
ANR	3212909	PtrMemberAccess	pc -> overread		3212520	0					
ANR	3212910	Identifier	pc		3212520	0					
ANR	3212911	Identifier	overread		3212520	1					
ANR	3212912	Argument	pc -> state		3212520	3					
ANR	3212913	PtrMemberAccess	pc -> state		3212520	0					
ANR	3212914	Identifier	pc		3212520	0					
ANR	3212915	Identifier	state		3212520	1					
ANR	3212916	Argument	next		3212520	4					
ANR	3212917	Identifier	next		3212520	0					
ANR	3212918	Argument	pc -> index		3212520	5					
ANR	3212919	PtrMemberAccess	pc -> index		3212520	0					
ANR	3212920	Identifier	pc		3212520	0					
ANR	3212921	Identifier	index		3212520	1					
ANR	3212922	Argument	pc -> overread_index		3212520	6					
ANR	3212923	PtrMemberAccess	pc -> overread_index		3212520	0					
ANR	3212924	Identifier	pc		3212520	0					
ANR	3212925	Identifier	overread_index		3212520	1					
ANR	3212926	ExpressionStatement	"av_dlog ( NULL , ""%X %X %X %X\\n"" , ( * buf ) [ 0 ] , ( * buf ) [ 1 ] , ( * buf ) [ 2 ] , ( * buf ) [ 3 ] )"	116:8:2017:2089	3212520	1	True				
ANR	3212927	CallExpression	"av_dlog ( NULL , ""%X %X %X %X\\n"" , ( * buf ) [ 0 ] , ( * buf ) [ 1 ] , ( * buf ) [ 2 ] , ( * buf ) [ 3 ] )"		3212520	0					
ANR	3212928	Callee	av_dlog		3212520	0					
ANR	3212929	Identifier	av_dlog		3212520	0					
ANR	3212930	ArgumentList	NULL		3212520	1					
ANR	3212931	Argument	NULL		3212520	0					
ANR	3212932	Identifier	NULL		3212520	0					
ANR	3212933	Argument	"""%X %X %X %X\\n"""		3212520	1					
ANR	3212934	PrimaryExpression	"""%X %X %X %X\\n"""		3212520	0					
ANR	3212935	Argument	( * buf ) [ 0 ]		3212520	2					
ANR	3212936	ArrayIndexing	( * buf ) [ 0 ]		3212520	0					
ANR	3212937	UnaryOperationExpression	* buf		3212520	0					
ANR	3212938	UnaryOperator	*		3212520	0					
ANR	3212939	Identifier	buf		3212520	1					
ANR	3212940	PrimaryExpression	0		3212520	1					
ANR	3212941	Argument	( * buf ) [ 1 ]		3212520	3					
ANR	3212942	ArrayIndexing	( * buf ) [ 1 ]		3212520	0					
ANR	3212943	UnaryOperationExpression	* buf		3212520	0					
ANR	3212944	UnaryOperator	*		3212520	0					
ANR	3212945	Identifier	buf		3212520	1					
ANR	3212946	PrimaryExpression	1		3212520	1					
ANR	3212947	Argument	( * buf ) [ 2 ]		3212520	4					
ANR	3212948	ArrayIndexing	( * buf ) [ 2 ]		3212520	0					
ANR	3212949	UnaryOperationExpression	* buf		3212520	0					
ANR	3212950	UnaryOperator	*		3212520	0					
ANR	3212951	Identifier	buf		3212520	1					
ANR	3212952	PrimaryExpression	2		3212520	1					
ANR	3212953	Argument	( * buf ) [ 3 ]		3212520	5					
ANR	3212954	ArrayIndexing	( * buf ) [ 3 ]		3212520	0					
ANR	3212955	UnaryOperationExpression	* buf		3212520	0					
ANR	3212956	UnaryOperator	*		3212520	0					
ANR	3212957	Identifier	buf		3212520	1					
ANR	3212958	PrimaryExpression	3		3212520	1					
ANR	3212959	ReturnStatement	return 0 ;	122:4:2105:2113	3212520	9	True				
ANR	3212960	PrimaryExpression	0		3212520	0					
ANR	3212961	ReturnType	int		3212520	1					
ANR	3212962	Identifier	ff_combine_frame		3212520	2					
ANR	3212963	ParameterList	"ParseContext * pc , int next , const uint8_t * * buf , int * buf_size"		3212520	3					
ANR	3212964	Parameter	ParseContext * pc	1:21:21:36	3212520	0	True				
ANR	3212965	ParameterType	ParseContext *		3212520	0					
ANR	3212966	Identifier	pc		3212520	1					
ANR	3212967	Parameter	int next	1:39:39:46	3212520	1	True				
ANR	3212968	ParameterType	int		3212520	0					
ANR	3212969	Identifier	next		3212520	1					
ANR	3212970	Parameter	const uint8_t * * buf	1:49:49:67	3212520	2	True				
ANR	3212971	ParameterType	const uint8_t * *		3212520	0					
ANR	3212972	Identifier	buf		3212520	1					
ANR	3212973	Parameter	int * buf_size	1:70:70:82	3212520	3	True				
ANR	3212974	ParameterType	int *		3212520	0					
ANR	3212975	Identifier	buf_size		3212520	1					
ANR	3212976	CFGEntryNode	ENTRY		3212520		True				
ANR	3212977	CFGExitNode	EXIT		3212520		True				
ANR	3212978	Symbol	next		3212520						
ANR	3212979	Symbol	pc -> index		3212520						
ANR	3212980	Symbol	ENOMEM		3212520						
ANR	3212981	Symbol	pc -> state64		3212520						
ANR	3212982	Symbol	pc -> overread		3212520						
ANR	3212983	Symbol	* buf_size		3212520						
ANR	3212984	Symbol	& pc -> buffer_size		3212520						
ANR	3212985	Symbol	* * buf		3212520						
ANR	3212986	Symbol	pc -> overread_index		3212520						
ANR	3212987	Symbol	* next		3212520						
ANR	3212988	Symbol	pc -> last_index		3212520						
ANR	3212989	Symbol	pc -> state		3212520						
ANR	3212990	Symbol	FF_INPUT_BUFFER_PADDING_SIZE		3212520						
ANR	3212991	Symbol	* pc -> buffer		3212520						
ANR	3212992	Symbol	* * pc		3212520						
ANR	3212993	Symbol	* buf		3212520						
ANR	3212994	Symbol	NULL		3212520						
ANR	3212995	Symbol	buf_size		3212520						
ANR	3212996	Symbol	pc -> buffer		3212520						
ANR	3212997	Symbol	* pc -> last_index		3212520						
ANR	3212998	Symbol	av_fast_realloc		3212520						
ANR	3212999	Symbol	buf		3212520						
ANR	3213000	Symbol	pc		3212520						
ANR	3213001	Symbol	* pc		3212520						
ANR	3213002	Symbol	new_buffer		3212520						
ANR	3213003	Symbol	AVERROR		3212520						
ANR	3213004	Symbol	END_NOT_FOUND		3212520						
