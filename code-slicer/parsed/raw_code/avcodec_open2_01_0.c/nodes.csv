command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	830795	File	/home/p4ultr4n/workplace/ReVeal/raw_code/avcodec_open2_01_0.c								
ANR	830796	Function	avcodec_open2	1:0:0:9307							
ANR	830797	FunctionDef	"avcodec_open2 (AVCodecContext * avctx , AVCodec * codec , AVDictionary * * options)"		830796	0					
ANR	830798	CompoundStatement		3:0:102:9307	830796	0					
ANR	830799	IdentifierDeclStatement	int ret = 0 ;	5:4:109:120	830796	0	True				
ANR	830800	IdentifierDecl	ret = 0		830796	0					
ANR	830801	IdentifierDeclType	int		830796	0					
ANR	830802	Identifier	ret		830796	1					
ANR	830803	AssignmentExpression	ret = 0		830796	2		=			
ANR	830804	Identifier	ret		830796	0					
ANR	830805	PrimaryExpression	0		830796	1					
ANR	830806	IdentifierDeclStatement	AVDictionary * tmp = NULL ;	7:4:127:151	830796	1	True				
ANR	830807	IdentifierDecl	* tmp = NULL		830796	0					
ANR	830808	IdentifierDeclType	AVDictionary *		830796	0					
ANR	830809	Identifier	tmp		830796	1					
ANR	830810	AssignmentExpression	* tmp = NULL		830796	2		=			
ANR	830811	Identifier	NULL		830796	0					
ANR	830812	Identifier	NULL		830796	1					
ANR	830813	IfStatement	if ( avcodec_is_open ( avctx ) )		830796	2					
ANR	830814	Condition	avcodec_is_open ( avctx )	11:8:164:185	830796	0	True				
ANR	830815	CallExpression	avcodec_is_open ( avctx )		830796	0					
ANR	830816	Callee	avcodec_is_open		830796	0					
ANR	830817	Identifier	avcodec_is_open		830796	0					
ANR	830818	ArgumentList	avctx		830796	1					
ANR	830819	Argument	avctx		830796	0					
ANR	830820	Identifier	avctx		830796	0					
ANR	830821	ReturnStatement	return 0 ;	13:8:197:205	830796	1	True				
ANR	830822	PrimaryExpression	0		830796	0					
ANR	830823	IfStatement	if ( ( ! codec && ! avctx -> codec ) )		830796	3					
ANR	830824	Condition	! codec && ! avctx -> codec	17:8:218:242	830796	0	True				
ANR	830825	AndExpression	! codec && ! avctx -> codec		830796	0		&&			
ANR	830826	UnaryOperationExpression	! codec		830796	0					
ANR	830827	UnaryOperator	!		830796	0					
ANR	830828	Identifier	codec		830796	1					
ANR	830829	UnaryOperationExpression	! avctx -> codec		830796	1					
ANR	830830	UnaryOperator	!		830796	0					
ANR	830831	PtrMemberAccess	avctx -> codec		830796	1					
ANR	830832	Identifier	avctx		830796	0					
ANR	830833	Identifier	codec		830796	1					
ANR	830834	CompoundStatement		15:35:142:142	830796	1					
ANR	830835	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""No codec provided to avcodec_open2().\\n"" )"	19:8:256:326	830796	0	True				
ANR	830836	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""No codec provided to avcodec_open2().\\n"" )"		830796	0					
ANR	830837	Callee	av_log		830796	0					
ANR	830838	Identifier	av_log		830796	0					
ANR	830839	ArgumentList	avctx		830796	1					
ANR	830840	Argument	avctx		830796	0					
ANR	830841	Identifier	avctx		830796	0					
ANR	830842	Argument	AV_LOG_ERROR		830796	1					
ANR	830843	Identifier	AV_LOG_ERROR		830796	0					
ANR	830844	Argument	"""No codec provided to avcodec_open2().\\n"""		830796	2					
ANR	830845	PrimaryExpression	"""No codec provided to avcodec_open2().\\n"""		830796	0					
ANR	830846	ReturnStatement	return AVERROR ( EINVAL ) ;	21:8:337:359	830796	1	True				
ANR	830847	CallExpression	AVERROR ( EINVAL )		830796	0					
ANR	830848	Callee	AVERROR		830796	0					
ANR	830849	Identifier	AVERROR		830796	0					
ANR	830850	ArgumentList	EINVAL		830796	1					
ANR	830851	Argument	EINVAL		830796	0					
ANR	830852	Identifier	EINVAL		830796	0					
ANR	830853	IfStatement	if ( ( codec && avctx -> codec && codec != avctx -> codec ) )		830796	4					
ANR	830854	Condition	codec && avctx -> codec && codec != avctx -> codec	25:8:377:424	830796	0	True				
ANR	830855	AndExpression	codec && avctx -> codec && codec != avctx -> codec		830796	0		&&			
ANR	830856	Identifier	codec		830796	0					
ANR	830857	AndExpression	avctx -> codec && codec != avctx -> codec		830796	1		&&			
ANR	830858	PtrMemberAccess	avctx -> codec		830796	0					
ANR	830859	Identifier	avctx		830796	0					
ANR	830860	Identifier	codec		830796	1					
ANR	830861	EqualityExpression	codec != avctx -> codec		830796	1		!=			
ANR	830862	Identifier	codec		830796	0					
ANR	830863	PtrMemberAccess	avctx -> codec		830796	1					
ANR	830864	Identifier	avctx		830796	0					
ANR	830865	Identifier	codec		830796	1					
ANR	830866	CompoundStatement		23:58:324:324	830796	1					
ANR	830867	Statement	av_log	27:8:438:443	830796	0	True				
ANR	830868	Statement	(	27:14:444:444	830796	1	True				
ANR	830869	Statement	avctx	27:15:445:449	830796	2	True				
ANR	830870	Statement	","	27:20:450:450	830796	3	True				
ANR	830871	Statement	AV_LOG_ERROR	27:22:452:463	830796	4	True				
ANR	830872	Statement	","	27:34:464:464	830796	5	True				
ANR	830873	Statement	"""This AVCodecContext was allocated for %s, """	27:36:466:509	830796	6	True				
ANR	830874	Statement	"""but %s passed to avcodec_open2().\\n"""	29:15:527:563	830796	7	True				
ANR	830875	Statement	","	29:52:564:564	830796	8	True				
ANR	830876	Statement	avctx	29:54:566:570	830796	9	True				
ANR	830877	Statement	->	29:59:571:572	830796	10	True				
ANR	830878	Statement	codec	29:61:573:577	830796	11	True				
ANR	830879	Statement	->	29:66:578:579	830796	12	True				
ANR	830880	Statement	name	29:68:580:583	830796	13	True				
ANR	830881	Statement	","	29:72:584:584	830796	14	True				
ANR	830882	Statement	codec	29:74:586:590	830796	15	True				
ANR	830883	Statement	->	29:79:591:592	830796	16	True				
ANR	830884	Statement	name	29:81:593:596	830796	17	True				
ANR	830885	Statement	)	29:85:597:597	830796	18	True				
ANR	830886	ExpressionStatement		29:86:598:598	830796	19	True				
ANR	830887	ReturnStatement	return AVERROR ( EINVAL ) ;	31:8:609:631	830796	20	True				
ANR	830888	CallExpression	AVERROR ( EINVAL )		830796	0					
ANR	830889	Callee	AVERROR		830796	0					
ANR	830890	Identifier	AVERROR		830796	0					
ANR	830891	ArgumentList	EINVAL		830796	1					
ANR	830892	Argument	EINVAL		830796	0					
ANR	830893	Identifier	EINVAL		830796	0					
ANR	830894	IfStatement	if ( ! codec )		830796	5					
ANR	830895	Condition	! codec	35:8:649:654	830796	0	True				
ANR	830896	UnaryOperationExpression	! codec		830796	0					
ANR	830897	UnaryOperator	!		830796	0					
ANR	830898	Identifier	codec		830796	1					
ANR	830899	ExpressionStatement	codec = avctx -> codec	37:8:666:686	830796	1	True				
ANR	830900	AssignmentExpression	codec = avctx -> codec		830796	0		=			
ANR	830901	Identifier	codec		830796	0					
ANR	830902	PtrMemberAccess	avctx -> codec		830796	1					
ANR	830903	Identifier	avctx		830796	0					
ANR	830904	Identifier	codec		830796	1					
ANR	830905	IfStatement	if ( avctx -> extradata_size < 0 || avctx -> extradata_size >= FF_MAX_EXTRADATA_SIZE )		830796	6					
ANR	830906	Condition	avctx -> extradata_size < 0 || avctx -> extradata_size >= FF_MAX_EXTRADATA_SIZE	41:8:699:773	830796	0	True				
ANR	830907	OrExpression	avctx -> extradata_size < 0 || avctx -> extradata_size >= FF_MAX_EXTRADATA_SIZE		830796	0		||			
ANR	830908	RelationalExpression	avctx -> extradata_size < 0		830796	0		<			
ANR	830909	PtrMemberAccess	avctx -> extradata_size		830796	0					
ANR	830910	Identifier	avctx		830796	0					
ANR	830911	Identifier	extradata_size		830796	1					
ANR	830912	PrimaryExpression	0		830796	1					
ANR	830913	RelationalExpression	avctx -> extradata_size >= FF_MAX_EXTRADATA_SIZE		830796	1		>=			
ANR	830914	PtrMemberAccess	avctx -> extradata_size		830796	0					
ANR	830915	Identifier	avctx		830796	0					
ANR	830916	Identifier	extradata_size		830796	1					
ANR	830917	Identifier	FF_MAX_EXTRADATA_SIZE		830796	1					
ANR	830918	ReturnStatement	return AVERROR ( EINVAL ) ;	43:8:785:807	830796	1	True				
ANR	830919	CallExpression	AVERROR ( EINVAL )		830796	0					
ANR	830920	Callee	AVERROR		830796	0					
ANR	830921	Identifier	AVERROR		830796	0					
ANR	830922	ArgumentList	EINVAL		830796	1					
ANR	830923	Argument	EINVAL		830796	0					
ANR	830924	Identifier	EINVAL		830796	0					
ANR	830925	IfStatement	if ( options )		830796	7					
ANR	830926	Condition	options	47:8:820:826	830796	0	True				
ANR	830927	Identifier	options		830796	0					
ANR	830928	ExpressionStatement	"av_dict_copy ( & tmp , * options , 0 )"	49:8:838:869	830796	1	True				
ANR	830929	CallExpression	"av_dict_copy ( & tmp , * options , 0 )"		830796	0					
ANR	830930	Callee	av_dict_copy		830796	0					
ANR	830931	Identifier	av_dict_copy		830796	0					
ANR	830932	ArgumentList	& tmp		830796	1					
ANR	830933	Argument	& tmp		830796	0					
ANR	830934	UnaryOperationExpression	& tmp		830796	0					
ANR	830935	UnaryOperator	&		830796	0					
ANR	830936	Identifier	tmp		830796	1					
ANR	830937	Argument	* options		830796	1					
ANR	830938	UnaryOperationExpression	* options		830796	0					
ANR	830939	UnaryOperator	*		830796	0					
ANR	830940	Identifier	options		830796	1					
ANR	830941	Argument	0		830796	2					
ANR	830942	PrimaryExpression	0		830796	0					
ANR	830943	IfStatement	if ( ff_lockmgr_cb )		830796	8					
ANR	830944	Condition	ff_lockmgr_cb	55:8:953:965	830796	0	True				
ANR	830945	Identifier	ff_lockmgr_cb		830796	0					
ANR	830946	CompoundStatement		53:23:865:865	830796	1					
ANR	830947	IfStatement	"if ( ( * ff_lockmgr_cb ) ( & codec_mutex , AV_LOCK_OBTAIN ) )"		830796	0					
ANR	830948	Condition	"( * ff_lockmgr_cb ) ( & codec_mutex , AV_LOCK_OBTAIN )"	57:12:983:1028	830796	0	True				
ANR	830949	CallExpression	"( * ff_lockmgr_cb ) ( & codec_mutex , AV_LOCK_OBTAIN )"		830796	0					
ANR	830950	Callee	* ff_lockmgr_cb		830796	0					
ANR	830951	UnaryOperationExpression	* ff_lockmgr_cb		830796	0					
ANR	830952	UnaryOperator	*		830796	0					
ANR	830953	Identifier	ff_lockmgr_cb		830796	1					
ANR	830954	ArgumentList	& codec_mutex		830796	1					
ANR	830955	Argument	& codec_mutex		830796	0					
ANR	830956	UnaryOperationExpression	& codec_mutex		830796	0					
ANR	830957	UnaryOperator	&		830796	0					
ANR	830958	Identifier	codec_mutex		830796	1					
ANR	830959	Argument	AV_LOCK_OBTAIN		830796	1					
ANR	830960	Identifier	AV_LOCK_OBTAIN		830796	0					
ANR	830961	ReturnStatement	return - 1 ;	59:12:1044:1053	830796	1	True				
ANR	830962	UnaryOperationExpression	- 1		830796	0					
ANR	830963	UnaryOperator	-		830796	0					
ANR	830964	PrimaryExpression	1		830796	1					
ANR	830965	ExpressionStatement	entangled_thread_counter ++	65:4:1069:1095	830796	9	True				
ANR	830966	PostIncDecOperationExpression	entangled_thread_counter ++		830796	0					
ANR	830967	Identifier	entangled_thread_counter		830796	0					
ANR	830968	IncDec	++		830796	1					
ANR	830969	IfStatement	if ( entangled_thread_counter != 1 )		830796	10					
ANR	830970	Condition	entangled_thread_counter != 1	67:7:1105:1133	830796	0	True				
ANR	830971	EqualityExpression	entangled_thread_counter != 1		830796	0		!=			
ANR	830972	Identifier	entangled_thread_counter		830796	0					
ANR	830973	PrimaryExpression	1		830796	1					
ANR	830974	CompoundStatement		65:37:1032:1032	830796	1					
ANR	830975	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""insufficient thread locking around avcodec_open/close()\\n"" )"	69:8:1146:1234	830796	0	True				
ANR	830976	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""insufficient thread locking around avcodec_open/close()\\n"" )"		830796	0					
ANR	830977	Callee	av_log		830796	0					
ANR	830978	Identifier	av_log		830796	0					
ANR	830979	ArgumentList	avctx		830796	1					
ANR	830980	Argument	avctx		830796	0					
ANR	830981	Identifier	avctx		830796	0					
ANR	830982	Argument	AV_LOG_ERROR		830796	1					
ANR	830983	Identifier	AV_LOG_ERROR		830796	0					
ANR	830984	Argument	"""insufficient thread locking around avcodec_open/close()\\n"""		830796	2					
ANR	830985	PrimaryExpression	"""insufficient thread locking around avcodec_open/close()\\n"""		830796	0					
ANR	830986	ExpressionStatement	ret = - 1	71:8:1245:1253	830796	1	True				
ANR	830987	AssignmentExpression	ret = - 1		830796	0		=			
ANR	830988	Identifier	ret		830796	0					
ANR	830989	UnaryOperationExpression	- 1		830796	1					
ANR	830990	UnaryOperator	-		830796	0					
ANR	830991	PrimaryExpression	1		830796	1					
ANR	830992	GotoStatement	goto end ;	73:8:1264:1272	830796	2	True				
ANR	830993	Identifier	end		830796	0					
ANR	830994	ExpressionStatement	avctx -> internal = av_mallocz ( sizeof ( AVCodecInternal ) )	79:4:1288:1341	830796	11	True				
ANR	830995	AssignmentExpression	avctx -> internal = av_mallocz ( sizeof ( AVCodecInternal ) )		830796	0		=			
ANR	830996	PtrMemberAccess	avctx -> internal		830796	0					
ANR	830997	Identifier	avctx		830796	0					
ANR	830998	Identifier	internal		830796	1					
ANR	830999	CallExpression	av_mallocz ( sizeof ( AVCodecInternal ) )		830796	1					
ANR	831000	Callee	av_mallocz		830796	0					
ANR	831001	Identifier	av_mallocz		830796	0					
ANR	831002	ArgumentList	sizeof ( AVCodecInternal )		830796	1					
ANR	831003	Argument	sizeof ( AVCodecInternal )		830796	0					
ANR	831004	SizeofExpression	sizeof ( AVCodecInternal )		830796	0					
ANR	831005	Sizeof	sizeof		830796	0					
ANR	831006	SizeofOperand	AVCodecInternal		830796	1					
ANR	831007	IfStatement	if ( ! avctx -> internal )		830796	12					
ANR	831008	Condition	! avctx -> internal	81:8:1352:1367	830796	0	True				
ANR	831009	UnaryOperationExpression	! avctx -> internal		830796	0					
ANR	831010	UnaryOperator	!		830796	0					
ANR	831011	PtrMemberAccess	avctx -> internal		830796	1					
ANR	831012	Identifier	avctx		830796	0					
ANR	831013	Identifier	internal		830796	1					
ANR	831014	CompoundStatement		79:26:1267:1267	830796	1					
ANR	831015	ExpressionStatement	ret = AVERROR ( ENOMEM )	83:8:1381:1402	830796	0	True				
ANR	831016	AssignmentExpression	ret = AVERROR ( ENOMEM )		830796	0		=			
ANR	831017	Identifier	ret		830796	0					
ANR	831018	CallExpression	AVERROR ( ENOMEM )		830796	1					
ANR	831019	Callee	AVERROR		830796	0					
ANR	831020	Identifier	AVERROR		830796	0					
ANR	831021	ArgumentList	ENOMEM		830796	1					
ANR	831022	Argument	ENOMEM		830796	0					
ANR	831023	Identifier	ENOMEM		830796	0					
ANR	831024	GotoStatement	goto end ;	85:8:1413:1421	830796	1	True				
ANR	831025	Identifier	end		830796	0					
ANR	831026	IfStatement	if ( codec -> priv_data_size > 0 )		830796	13					
ANR	831027	Condition	codec -> priv_data_size > 0	91:8:1441:1465	830796	0	True				
ANR	831028	RelationalExpression	codec -> priv_data_size > 0		830796	0		>			
ANR	831029	PtrMemberAccess	codec -> priv_data_size		830796	0					
ANR	831030	Identifier	codec		830796	0					
ANR	831031	Identifier	priv_data_size		830796	1					
ANR	831032	PrimaryExpression	0		830796	1					
ANR	831033	CompoundStatement		89:35:1365:1365	830796	1					
ANR	831034	IfStatement	if ( ! avctx -> priv_data )		830796	0					
ANR	831035	Condition	! avctx -> priv_data	93:9:1480:1496	830796	0	True				
ANR	831036	UnaryOperationExpression	! avctx -> priv_data		830796	0					
ANR	831037	UnaryOperator	!		830796	0					
ANR	831038	PtrMemberAccess	avctx -> priv_data		830796	1					
ANR	831039	Identifier	avctx		830796	0					
ANR	831040	Identifier	priv_data		830796	1					
ANR	831041	CompoundStatement		91:27:1395:1395	830796	1					
ANR	831042	ExpressionStatement	avctx -> priv_data = av_mallocz ( codec -> priv_data_size )	95:8:1509:1561	830796	0	True				
ANR	831043	AssignmentExpression	avctx -> priv_data = av_mallocz ( codec -> priv_data_size )		830796	0		=			
ANR	831044	PtrMemberAccess	avctx -> priv_data		830796	0					
ANR	831045	Identifier	avctx		830796	0					
ANR	831046	Identifier	priv_data		830796	1					
ANR	831047	CallExpression	av_mallocz ( codec -> priv_data_size )		830796	1					
ANR	831048	Callee	av_mallocz		830796	0					
ANR	831049	Identifier	av_mallocz		830796	0					
ANR	831050	ArgumentList	codec -> priv_data_size		830796	1					
ANR	831051	Argument	codec -> priv_data_size		830796	0					
ANR	831052	PtrMemberAccess	codec -> priv_data_size		830796	0					
ANR	831053	Identifier	codec		830796	0					
ANR	831054	Identifier	priv_data_size		830796	1					
ANR	831055	IfStatement	if ( ! avctx -> priv_data )		830796	1					
ANR	831056	Condition	! avctx -> priv_data	97:12:1576:1592	830796	0	True				
ANR	831057	UnaryOperationExpression	! avctx -> priv_data		830796	0					
ANR	831058	UnaryOperator	!		830796	0					
ANR	831059	PtrMemberAccess	avctx -> priv_data		830796	1					
ANR	831060	Identifier	avctx		830796	0					
ANR	831061	Identifier	priv_data		830796	1					
ANR	831062	CompoundStatement		95:31:1492:1492	830796	1					
ANR	831063	ExpressionStatement	ret = AVERROR ( ENOMEM )	99:12:1610:1631	830796	0	True				
ANR	831064	AssignmentExpression	ret = AVERROR ( ENOMEM )		830796	0		=			
ANR	831065	Identifier	ret		830796	0					
ANR	831066	CallExpression	AVERROR ( ENOMEM )		830796	1					
ANR	831067	Callee	AVERROR		830796	0					
ANR	831068	Identifier	AVERROR		830796	0					
ANR	831069	ArgumentList	ENOMEM		830796	1					
ANR	831070	Argument	ENOMEM		830796	0					
ANR	831071	Identifier	ENOMEM		830796	0					
ANR	831072	GotoStatement	goto end ;	101:12:1646:1654	830796	1	True				
ANR	831073	Identifier	end		830796	0					
ANR	831074	IfStatement	if ( codec -> priv_class )		830796	2					
ANR	831075	Condition	codec -> priv_class	105:12:1680:1696	830796	0	True				
ANR	831076	PtrMemberAccess	codec -> priv_class		830796	0					
ANR	831077	Identifier	codec		830796	0					
ANR	831078	Identifier	priv_class		830796	1					
ANR	831079	CompoundStatement		103:31:1596:1596	830796	1					
ANR	831080	ExpressionStatement	* ( const AVClass * * ) avctx -> priv_data = codec -> priv_class	107:12:1714:1767	830796	0	True				
ANR	831081	AssignmentExpression	* ( const AVClass * * ) avctx -> priv_data = codec -> priv_class		830796	0		=			
ANR	831082	UnaryOperationExpression	* ( const AVClass * * ) avctx -> priv_data		830796	0					
ANR	831083	UnaryOperator	*		830796	0					
ANR	831084	CastExpression	( const AVClass * * ) avctx -> priv_data		830796	1					
ANR	831085	CastTarget	const AVClass * *		830796	0					
ANR	831086	PtrMemberAccess	avctx -> priv_data		830796	1					
ANR	831087	Identifier	avctx		830796	0					
ANR	831088	Identifier	priv_data		830796	1					
ANR	831089	PtrMemberAccess	codec -> priv_class		830796	1					
ANR	831090	Identifier	codec		830796	0					
ANR	831091	Identifier	priv_class		830796	1					
ANR	831092	ExpressionStatement	av_opt_set_defaults ( avctx -> priv_data )	109:12:1782:1819	830796	1	True				
ANR	831093	CallExpression	av_opt_set_defaults ( avctx -> priv_data )		830796	0					
ANR	831094	Callee	av_opt_set_defaults		830796	0					
ANR	831095	Identifier	av_opt_set_defaults		830796	0					
ANR	831096	ArgumentList	avctx -> priv_data		830796	1					
ANR	831097	Argument	avctx -> priv_data		830796	0					
ANR	831098	PtrMemberAccess	avctx -> priv_data		830796	0					
ANR	831099	Identifier	avctx		830796	0					
ANR	831100	Identifier	priv_data		830796	1					
ANR	831101	IfStatement	"if ( codec -> priv_class && ( ret = av_opt_set_dict ( avctx -> priv_data , & tmp ) ) < 0 )"		830796	1					
ANR	831102	Condition	"codec -> priv_class && ( ret = av_opt_set_dict ( avctx -> priv_data , & tmp ) ) < 0"	115:10:1852:1923	830796	0	True				
ANR	831103	AndExpression	"codec -> priv_class && ( ret = av_opt_set_dict ( avctx -> priv_data , & tmp ) ) < 0"		830796	0		&&			
ANR	831104	PtrMemberAccess	codec -> priv_class		830796	0					
ANR	831105	Identifier	codec		830796	0					
ANR	831106	Identifier	priv_class		830796	1					
ANR	831107	RelationalExpression	"( ret = av_opt_set_dict ( avctx -> priv_data , & tmp ) ) < 0"		830796	1		<			
ANR	831108	AssignmentExpression	"ret = av_opt_set_dict ( avctx -> priv_data , & tmp )"		830796	0		=			
ANR	831109	Identifier	ret		830796	0					
ANR	831110	CallExpression	"av_opt_set_dict ( avctx -> priv_data , & tmp )"		830796	1					
ANR	831111	Callee	av_opt_set_dict		830796	0					
ANR	831112	Identifier	av_opt_set_dict		830796	0					
ANR	831113	ArgumentList	avctx -> priv_data		830796	1					
ANR	831114	Argument	avctx -> priv_data		830796	0					
ANR	831115	PtrMemberAccess	avctx -> priv_data		830796	0					
ANR	831116	Identifier	avctx		830796	0					
ANR	831117	Identifier	priv_data		830796	1					
ANR	831118	Argument	& tmp		830796	1					
ANR	831119	UnaryOperationExpression	& tmp		830796	0					
ANR	831120	UnaryOperator	&		830796	0					
ANR	831121	Identifier	tmp		830796	1					
ANR	831122	PrimaryExpression	0		830796	1					
ANR	831123	GotoStatement	goto free_and_end ;	117:10:1937:1954	830796	1	True				
ANR	831124	Identifier	free_and_end		830796	0					
ANR	831125	ElseStatement	else		830796	0					
ANR	831126	CompoundStatement		117:11:1865:1865	830796	0					
ANR	831127	ExpressionStatement	avctx -> priv_data = NULL	121:8:1979:2002	830796	0	True				
ANR	831128	AssignmentExpression	avctx -> priv_data = NULL		830796	0		=			
ANR	831129	PtrMemberAccess	avctx -> priv_data		830796	0					
ANR	831130	Identifier	avctx		830796	0					
ANR	831131	Identifier	priv_data		830796	1					
ANR	831132	Identifier	NULL		830796	1					
ANR	831133	IfStatement	"if ( ( ret = av_opt_set_dict ( avctx , & tmp ) ) < 0 )"		830796	14					
ANR	831134	Condition	"( ret = av_opt_set_dict ( avctx , & tmp ) ) < 0"	125:8:2020:2059	830796	0	True				
ANR	831135	RelationalExpression	"( ret = av_opt_set_dict ( avctx , & tmp ) ) < 0"		830796	0		<			
ANR	831136	AssignmentExpression	"ret = av_opt_set_dict ( avctx , & tmp )"		830796	0		=			
ANR	831137	Identifier	ret		830796	0					
ANR	831138	CallExpression	"av_opt_set_dict ( avctx , & tmp )"		830796	1					
ANR	831139	Callee	av_opt_set_dict		830796	0					
ANR	831140	Identifier	av_opt_set_dict		830796	0					
ANR	831141	ArgumentList	avctx		830796	1					
ANR	831142	Argument	avctx		830796	0					
ANR	831143	Identifier	avctx		830796	0					
ANR	831144	Argument	& tmp		830796	1					
ANR	831145	UnaryOperationExpression	& tmp		830796	0					
ANR	831146	UnaryOperator	&		830796	0					
ANR	831147	Identifier	tmp		830796	1					
ANR	831148	PrimaryExpression	0		830796	1					
ANR	831149	GotoStatement	goto free_and_end ;	127:8:2071:2088	830796	1	True				
ANR	831150	Identifier	free_and_end		830796	0					
ANR	831151	IfStatement	if ( codec -> capabilities & CODEC_CAP_EXPERIMENTAL )		830796	15					
ANR	831152	Condition	codec -> capabilities & CODEC_CAP_EXPERIMENTAL	131:8:2101:2144	830796	0	True				
ANR	831153	BitAndExpression	codec -> capabilities & CODEC_CAP_EXPERIMENTAL		830796	0		&			
ANR	831154	PtrMemberAccess	codec -> capabilities		830796	0					
ANR	831155	Identifier	codec		830796	0					
ANR	831156	Identifier	capabilities		830796	1					
ANR	831157	Identifier	CODEC_CAP_EXPERIMENTAL		830796	1					
ANR	831158	IfStatement	if ( avctx -> strict_std_compliance > FF_COMPLIANCE_EXPERIMENTAL )		830796	1					
ANR	831159	Condition	avctx -> strict_std_compliance > FF_COMPLIANCE_EXPERIMENTAL	133:12:2160:2216	830796	0	True				
ANR	831160	RelationalExpression	avctx -> strict_std_compliance > FF_COMPLIANCE_EXPERIMENTAL		830796	0		>			
ANR	831161	PtrMemberAccess	avctx -> strict_std_compliance		830796	0					
ANR	831162	Identifier	avctx		830796	0					
ANR	831163	Identifier	strict_std_compliance		830796	1					
ANR	831164	Identifier	FF_COMPLIANCE_EXPERIMENTAL		830796	1					
ANR	831165	CompoundStatement		131:71:2116:2116	830796	1					
ANR	831166	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Codec is experimental but experimental codecs are not enabled, try -strict -2\\n"" )"	135:12:2234:2344	830796	0	True				
ANR	831167	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Codec is experimental but experimental codecs are not enabled, try -strict -2\\n"" )"		830796	0					
ANR	831168	Callee	av_log		830796	0					
ANR	831169	Identifier	av_log		830796	0					
ANR	831170	ArgumentList	avctx		830796	1					
ANR	831171	Argument	avctx		830796	0					
ANR	831172	Identifier	avctx		830796	0					
ANR	831173	Argument	AV_LOG_ERROR		830796	1					
ANR	831174	Identifier	AV_LOG_ERROR		830796	0					
ANR	831175	Argument	"""Codec is experimental but experimental codecs are not enabled, try -strict -2\\n"""		830796	2					
ANR	831176	PrimaryExpression	"""Codec is experimental but experimental codecs are not enabled, try -strict -2\\n"""		830796	0					
ANR	831177	ExpressionStatement	ret = - 1	137:12:2359:2367	830796	1	True				
ANR	831178	AssignmentExpression	ret = - 1		830796	0		=			
ANR	831179	Identifier	ret		830796	0					
ANR	831180	UnaryOperationExpression	- 1		830796	1					
ANR	831181	UnaryOperator	-		830796	0					
ANR	831182	PrimaryExpression	1		830796	1					
ANR	831183	GotoStatement	goto free_and_end ;	139:12:2382:2399	830796	2	True				
ANR	831184	Identifier	free_and_end		830796	0					
ANR	831185	IfStatement	if ( ! ( avctx -> coded_width && avctx -> coded_height && avctx -> width && avctx -> height && avctx -> codec_id == CODEC_ID_H264 ) )		830796	16					
ANR	831186	Condition	! ( avctx -> coded_width && avctx -> coded_height && avctx -> width && avctx -> height && avctx -> codec_id == CODEC_ID_H264 )	147:7:2538:2651	830796	0	True				
ANR	831187	UnaryOperationExpression	! ( avctx -> coded_width && avctx -> coded_height && avctx -> width && avctx -> height && avctx -> codec_id == CODEC_ID_H264 )		830796	0					
ANR	831188	UnaryOperator	!		830796	0					
ANR	831189	AndExpression	avctx -> coded_width && avctx -> coded_height && avctx -> width && avctx -> height && avctx -> codec_id == CODEC_ID_H264		830796	1		&&			
ANR	831190	PtrMemberAccess	avctx -> coded_width		830796	0					
ANR	831191	Identifier	avctx		830796	0					
ANR	831192	Identifier	coded_width		830796	1					
ANR	831193	AndExpression	avctx -> coded_height && avctx -> width && avctx -> height && avctx -> codec_id == CODEC_ID_H264		830796	1		&&			
ANR	831194	PtrMemberAccess	avctx -> coded_height		830796	0					
ANR	831195	Identifier	avctx		830796	0					
ANR	831196	Identifier	coded_height		830796	1					
ANR	831197	AndExpression	avctx -> width && avctx -> height && avctx -> codec_id == CODEC_ID_H264		830796	1		&&			
ANR	831198	PtrMemberAccess	avctx -> width		830796	0					
ANR	831199	Identifier	avctx		830796	0					
ANR	831200	Identifier	width		830796	1					
ANR	831201	AndExpression	avctx -> height && avctx -> codec_id == CODEC_ID_H264		830796	1		&&			
ANR	831202	PtrMemberAccess	avctx -> height		830796	0					
ANR	831203	Identifier	avctx		830796	0					
ANR	831204	Identifier	height		830796	1					
ANR	831205	EqualityExpression	avctx -> codec_id == CODEC_ID_H264		830796	1		==			
ANR	831206	PtrMemberAccess	avctx -> codec_id		830796	0					
ANR	831207	Identifier	avctx		830796	0					
ANR	831208	Identifier	codec_id		830796	1					
ANR	831209	Identifier	CODEC_ID_H264		830796	1					
ANR	831210	CompoundStatement		145:122:2550:2550	830796	1					
ANR	831211	IfStatement	if ( avctx -> coded_width && avctx -> coded_height )		830796	0					
ANR	831212	Condition	avctx -> coded_width && avctx -> coded_height	149:7:2663:2703	830796	0	True				
ANR	831213	AndExpression	avctx -> coded_width && avctx -> coded_height		830796	0		&&			
ANR	831214	PtrMemberAccess	avctx -> coded_width		830796	0					
ANR	831215	Identifier	avctx		830796	0					
ANR	831216	Identifier	coded_width		830796	1					
ANR	831217	PtrMemberAccess	avctx -> coded_height		830796	1					
ANR	831218	Identifier	avctx		830796	0					
ANR	831219	Identifier	coded_height		830796	1					
ANR	831220	ExpressionStatement	"avcodec_set_dimensions ( avctx , avctx -> coded_width , avctx -> coded_height )"	151:8:2715:2785	830796	1	True				
ANR	831221	CallExpression	"avcodec_set_dimensions ( avctx , avctx -> coded_width , avctx -> coded_height )"		830796	0					
ANR	831222	Callee	avcodec_set_dimensions		830796	0					
ANR	831223	Identifier	avcodec_set_dimensions		830796	0					
ANR	831224	ArgumentList	avctx		830796	1					
ANR	831225	Argument	avctx		830796	0					
ANR	831226	Identifier	avctx		830796	0					
ANR	831227	Argument	avctx -> coded_width		830796	1					
ANR	831228	PtrMemberAccess	avctx -> coded_width		830796	0					
ANR	831229	Identifier	avctx		830796	0					
ANR	831230	Identifier	coded_width		830796	1					
ANR	831231	Argument	avctx -> coded_height		830796	2					
ANR	831232	PtrMemberAccess	avctx -> coded_height		830796	0					
ANR	831233	Identifier	avctx		830796	0					
ANR	831234	Identifier	coded_height		830796	1					
ANR	831235	ElseStatement	else		830796	0					
ANR	831236	IfStatement	if ( avctx -> width && avctx -> height )		830796	0					
ANR	831237	Condition	avctx -> width && avctx -> height	153:12:2800:2828	830796	0	True				
ANR	831238	AndExpression	avctx -> width && avctx -> height		830796	0		&&			
ANR	831239	PtrMemberAccess	avctx -> width		830796	0					
ANR	831240	Identifier	avctx		830796	0					
ANR	831241	Identifier	width		830796	1					
ANR	831242	PtrMemberAccess	avctx -> height		830796	1					
ANR	831243	Identifier	avctx		830796	0					
ANR	831244	Identifier	height		830796	1					
ANR	831245	ExpressionStatement	"avcodec_set_dimensions ( avctx , avctx -> width , avctx -> height )"	155:8:2840:2898	830796	1	True				
ANR	831246	CallExpression	"avcodec_set_dimensions ( avctx , avctx -> width , avctx -> height )"		830796	0					
ANR	831247	Callee	avcodec_set_dimensions		830796	0					
ANR	831248	Identifier	avcodec_set_dimensions		830796	0					
ANR	831249	ArgumentList	avctx		830796	1					
ANR	831250	Argument	avctx		830796	0					
ANR	831251	Identifier	avctx		830796	0					
ANR	831252	Argument	avctx -> width		830796	1					
ANR	831253	PtrMemberAccess	avctx -> width		830796	0					
ANR	831254	Identifier	avctx		830796	0					
ANR	831255	Identifier	width		830796	1					
ANR	831256	Argument	avctx -> height		830796	2					
ANR	831257	PtrMemberAccess	avctx -> height		830796	0					
ANR	831258	Identifier	avctx		830796	0					
ANR	831259	Identifier	height		830796	1					
ANR	831260	IfStatement	"if ( ( avctx -> coded_width || avctx -> coded_height || avctx -> width || avctx -> height ) && ( av_image_check_size ( avctx -> coded_width , avctx -> coded_height , 0 , avctx ) < 0 || av_image_check_size ( avctx -> width , avctx -> height , 0 , avctx ) < 0 ) )"		830796	17					
ANR	831261	Condition	"( avctx -> coded_width || avctx -> coded_height || avctx -> width || avctx -> height ) && ( av_image_check_size ( avctx -> coded_width , avctx -> coded_height , 0 , avctx ) < 0 || av_image_check_size ( avctx -> width , avctx -> height , 0 , avctx ) < 0 )"	161:8:2918:3174	830796	0	True				
ANR	831262	AndExpression	"( avctx -> coded_width || avctx -> coded_height || avctx -> width || avctx -> height ) && ( av_image_check_size ( avctx -> coded_width , avctx -> coded_height , 0 , avctx ) < 0 || av_image_check_size ( avctx -> width , avctx -> height , 0 , avctx ) < 0 )"		830796	0		&&			
ANR	831263	OrExpression	avctx -> coded_width || avctx -> coded_height || avctx -> width || avctx -> height		830796	0		||			
ANR	831264	PtrMemberAccess	avctx -> coded_width		830796	0					
ANR	831265	Identifier	avctx		830796	0					
ANR	831266	Identifier	coded_width		830796	1					
ANR	831267	OrExpression	avctx -> coded_height || avctx -> width || avctx -> height		830796	1		||			
ANR	831268	PtrMemberAccess	avctx -> coded_height		830796	0					
ANR	831269	Identifier	avctx		830796	0					
ANR	831270	Identifier	coded_height		830796	1					
ANR	831271	OrExpression	avctx -> width || avctx -> height		830796	1		||			
ANR	831272	PtrMemberAccess	avctx -> width		830796	0					
ANR	831273	Identifier	avctx		830796	0					
ANR	831274	Identifier	width		830796	1					
ANR	831275	PtrMemberAccess	avctx -> height		830796	1					
ANR	831276	Identifier	avctx		830796	0					
ANR	831277	Identifier	height		830796	1					
ANR	831278	OrExpression	"av_image_check_size ( avctx -> coded_width , avctx -> coded_height , 0 , avctx ) < 0 || av_image_check_size ( avctx -> width , avctx -> height , 0 , avctx ) < 0"		830796	1		||			
ANR	831279	RelationalExpression	"av_image_check_size ( avctx -> coded_width , avctx -> coded_height , 0 , avctx ) < 0"		830796	0		<			
ANR	831280	CallExpression	"av_image_check_size ( avctx -> coded_width , avctx -> coded_height , 0 , avctx )"		830796	0					
ANR	831281	Callee	av_image_check_size		830796	0					
ANR	831282	Identifier	av_image_check_size		830796	0					
ANR	831283	ArgumentList	avctx -> coded_width		830796	1					
ANR	831284	Argument	avctx -> coded_width		830796	0					
ANR	831285	PtrMemberAccess	avctx -> coded_width		830796	0					
ANR	831286	Identifier	avctx		830796	0					
ANR	831287	Identifier	coded_width		830796	1					
ANR	831288	Argument	avctx -> coded_height		830796	1					
ANR	831289	PtrMemberAccess	avctx -> coded_height		830796	0					
ANR	831290	Identifier	avctx		830796	0					
ANR	831291	Identifier	coded_height		830796	1					
ANR	831292	Argument	0		830796	2					
ANR	831293	PrimaryExpression	0		830796	0					
ANR	831294	Argument	avctx		830796	3					
ANR	831295	Identifier	avctx		830796	0					
ANR	831296	PrimaryExpression	0		830796	1					
ANR	831297	RelationalExpression	"av_image_check_size ( avctx -> width , avctx -> height , 0 , avctx ) < 0"		830796	1		<			
ANR	831298	CallExpression	"av_image_check_size ( avctx -> width , avctx -> height , 0 , avctx )"		830796	0					
ANR	831299	Callee	av_image_check_size		830796	0					
ANR	831300	Identifier	av_image_check_size		830796	0					
ANR	831301	ArgumentList	avctx -> width		830796	1					
ANR	831302	Argument	avctx -> width		830796	0					
ANR	831303	PtrMemberAccess	avctx -> width		830796	0					
ANR	831304	Identifier	avctx		830796	0					
ANR	831305	Identifier	width		830796	1					
ANR	831306	Argument	avctx -> height		830796	1					
ANR	831307	PtrMemberAccess	avctx -> height		830796	0					
ANR	831308	Identifier	avctx		830796	0					
ANR	831309	Identifier	height		830796	1					
ANR	831310	Argument	0		830796	2					
ANR	831311	PrimaryExpression	0		830796	0					
ANR	831312	Argument	avctx		830796	3					
ANR	831313	Identifier	avctx		830796	0					
ANR	831314	PrimaryExpression	0		830796	1					
ANR	831315	CompoundStatement		163:91:3074:3074	830796	1					
ANR	831316	ExpressionStatement	"av_log ( avctx , AV_LOG_WARNING , ""ignoring invalid width/height values\\n"" )"	167:8:3188:3259	830796	0	True				
ANR	831317	CallExpression	"av_log ( avctx , AV_LOG_WARNING , ""ignoring invalid width/height values\\n"" )"		830796	0					
ANR	831318	Callee	av_log		830796	0					
ANR	831319	Identifier	av_log		830796	0					
ANR	831320	ArgumentList	avctx		830796	1					
ANR	831321	Argument	avctx		830796	0					
ANR	831322	Identifier	avctx		830796	0					
ANR	831323	Argument	AV_LOG_WARNING		830796	1					
ANR	831324	Identifier	AV_LOG_WARNING		830796	0					
ANR	831325	Argument	"""ignoring invalid width/height values\\n"""		830796	2					
ANR	831326	PrimaryExpression	"""ignoring invalid width/height values\\n"""		830796	0					
ANR	831327	ExpressionStatement	"avcodec_set_dimensions ( avctx , 0 , 0 )"	169:8:3270:3305	830796	1	True				
ANR	831328	CallExpression	"avcodec_set_dimensions ( avctx , 0 , 0 )"		830796	0					
ANR	831329	Callee	avcodec_set_dimensions		830796	0					
ANR	831330	Identifier	avcodec_set_dimensions		830796	0					
ANR	831331	ArgumentList	avctx		830796	1					
ANR	831332	Argument	avctx		830796	0					
ANR	831333	Identifier	avctx		830796	0					
ANR	831334	Argument	0		830796	1					
ANR	831335	PrimaryExpression	0		830796	0					
ANR	831336	Argument	0		830796	2					
ANR	831337	PrimaryExpression	0		830796	0					
ANR	831338	IfStatement	if ( av_codec_is_decoder ( codec ) )		830796	18					
ANR	831339	Condition	av_codec_is_decoder ( codec )	179:8:3469:3494	830796	0	True				
ANR	831340	CallExpression	av_codec_is_decoder ( codec )		830796	0					
ANR	831341	Callee	av_codec_is_decoder		830796	0					
ANR	831342	Identifier	av_codec_is_decoder		830796	0					
ANR	831343	ArgumentList	codec		830796	1					
ANR	831344	Argument	codec		830796	0					
ANR	831345	Identifier	codec		830796	0					
ANR	831346	ExpressionStatement	av_freep ( & avctx -> subtitle_header )	181:8:3506:3539	830796	1	True				
ANR	831347	CallExpression	av_freep ( & avctx -> subtitle_header )		830796	0					
ANR	831348	Callee	av_freep		830796	0					
ANR	831349	Identifier	av_freep		830796	0					
ANR	831350	ArgumentList	& avctx -> subtitle_header		830796	1					
ANR	831351	Argument	& avctx -> subtitle_header		830796	0					
ANR	831352	UnaryOperationExpression	& avctx -> subtitle_header		830796	0					
ANR	831353	UnaryOperator	&		830796	0					
ANR	831354	PtrMemberAccess	avctx -> subtitle_header		830796	1					
ANR	831355	Identifier	avctx		830796	0					
ANR	831356	Identifier	subtitle_header		830796	1					
ANR	831357	Statement	define	185:1:3545:3550	830796	19	True				
ANR	831358	Statement	SANE_NB_CHANNELS	185:8:3552:3567	830796	20	True				
ANR	831359	Statement	128U	185:25:3569:3572	830796	21	True				
ANR	831360	IfStatement	if ( avctx -> channels > SANE_NB_CHANNELS )		830796	22					
ANR	831361	Condition	avctx -> channels > SANE_NB_CHANNELS	187:8:3583:3616	830796	0	True				
ANR	831362	RelationalExpression	avctx -> channels > SANE_NB_CHANNELS		830796	0		>			
ANR	831363	PtrMemberAccess	avctx -> channels		830796	0					
ANR	831364	Identifier	avctx		830796	0					
ANR	831365	Identifier	channels		830796	1					
ANR	831366	Identifier	SANE_NB_CHANNELS		830796	1					
ANR	831367	CompoundStatement		185:44:3516:3516	830796	1					
ANR	831368	ExpressionStatement	ret = AVERROR ( EINVAL )	189:8:3630:3651	830796	0	True				
ANR	831369	AssignmentExpression	ret = AVERROR ( EINVAL )		830796	0		=			
ANR	831370	Identifier	ret		830796	0					
ANR	831371	CallExpression	AVERROR ( EINVAL )		830796	1					
ANR	831372	Callee	AVERROR		830796	0					
ANR	831373	Identifier	AVERROR		830796	0					
ANR	831374	ArgumentList	EINVAL		830796	1					
ANR	831375	Argument	EINVAL		830796	0					
ANR	831376	Identifier	EINVAL		830796	0					
ANR	831377	GotoStatement	goto free_and_end ;	191:8:3662:3679	830796	1	True				
ANR	831378	Identifier	free_and_end		830796	0					
ANR	831379	ExpressionStatement	avctx -> codec = codec	197:4:3695:3715	830796	23	True				
ANR	831380	AssignmentExpression	avctx -> codec = codec		830796	0		=			
ANR	831381	PtrMemberAccess	avctx -> codec		830796	0					
ANR	831382	Identifier	avctx		830796	0					
ANR	831383	Identifier	codec		830796	1					
ANR	831384	Identifier	codec		830796	1					
ANR	831385	IfStatement	if ( ( avctx -> codec_type == AVMEDIA_TYPE_UNKNOWN || avctx -> codec_type == codec -> type ) && avctx -> codec_id == CODEC_ID_NONE )		830796	24					
ANR	831386	Condition	( avctx -> codec_type == AVMEDIA_TYPE_UNKNOWN || avctx -> codec_type == codec -> type ) && avctx -> codec_id == CODEC_ID_NONE	199:8:3726:3849	830796	0	True				
ANR	831387	AndExpression	( avctx -> codec_type == AVMEDIA_TYPE_UNKNOWN || avctx -> codec_type == codec -> type ) && avctx -> codec_id == CODEC_ID_NONE		830796	0		&&			
ANR	831388	OrExpression	avctx -> codec_type == AVMEDIA_TYPE_UNKNOWN || avctx -> codec_type == codec -> type		830796	0		||			
ANR	831389	EqualityExpression	avctx -> codec_type == AVMEDIA_TYPE_UNKNOWN		830796	0		==			
ANR	831390	PtrMemberAccess	avctx -> codec_type		830796	0					
ANR	831391	Identifier	avctx		830796	0					
ANR	831392	Identifier	codec_type		830796	1					
ANR	831393	Identifier	AVMEDIA_TYPE_UNKNOWN		830796	1					
ANR	831394	EqualityExpression	avctx -> codec_type == codec -> type		830796	1		==			
ANR	831395	PtrMemberAccess	avctx -> codec_type		830796	0					
ANR	831396	Identifier	avctx		830796	0					
ANR	831397	Identifier	codec_type		830796	1					
ANR	831398	PtrMemberAccess	codec -> type		830796	1					
ANR	831399	Identifier	codec		830796	0					
ANR	831400	Identifier	type		830796	1					
ANR	831401	EqualityExpression	avctx -> codec_id == CODEC_ID_NONE		830796	1		==			
ANR	831402	PtrMemberAccess	avctx -> codec_id		830796	0					
ANR	831403	Identifier	avctx		830796	0					
ANR	831404	Identifier	codec_id		830796	1					
ANR	831405	Identifier	CODEC_ID_NONE		830796	1					
ANR	831406	CompoundStatement		199:42:3749:3749	830796	1					
ANR	831407	ExpressionStatement	avctx -> codec_type = codec -> type	203:8:3863:3894	830796	0	True				
ANR	831408	AssignmentExpression	avctx -> codec_type = codec -> type		830796	0		=			
ANR	831409	PtrMemberAccess	avctx -> codec_type		830796	0					
ANR	831410	Identifier	avctx		830796	0					
ANR	831411	Identifier	codec_type		830796	1					
ANR	831412	PtrMemberAccess	codec -> type		830796	1					
ANR	831413	Identifier	codec		830796	0					
ANR	831414	Identifier	type		830796	1					
ANR	831415	ExpressionStatement	avctx -> codec_id = codec -> id	205:8:3905:3934	830796	1	True				
ANR	831416	AssignmentExpression	avctx -> codec_id = codec -> id		830796	0		=			
ANR	831417	PtrMemberAccess	avctx -> codec_id		830796	0					
ANR	831418	Identifier	avctx		830796	0					
ANR	831419	Identifier	codec_id		830796	1					
ANR	831420	PtrMemberAccess	codec -> id		830796	1					
ANR	831421	Identifier	codec		830796	0					
ANR	831422	Identifier	id		830796	1					
ANR	831423	IfStatement	if ( avctx -> codec_id != codec -> id || ( avctx -> codec_type != codec -> type && avctx -> codec_type != AVMEDIA_TYPE_ATTACHMENT ) )		830796	25					
ANR	831424	Condition	avctx -> codec_id != codec -> id || ( avctx -> codec_type != codec -> type && avctx -> codec_type != AVMEDIA_TYPE_ATTACHMENT )	209:8:3952:4093	830796	0	True				
ANR	831425	OrExpression	avctx -> codec_id != codec -> id || ( avctx -> codec_type != codec -> type && avctx -> codec_type != AVMEDIA_TYPE_ATTACHMENT )		830796	0		||			
ANR	831426	EqualityExpression	avctx -> codec_id != codec -> id		830796	0		!=			
ANR	831427	PtrMemberAccess	avctx -> codec_id		830796	0					
ANR	831428	Identifier	avctx		830796	0					
ANR	831429	Identifier	codec_id		830796	1					
ANR	831430	PtrMemberAccess	codec -> id		830796	1					
ANR	831431	Identifier	codec		830796	0					
ANR	831432	Identifier	id		830796	1					
ANR	831433	AndExpression	avctx -> codec_type != codec -> type && avctx -> codec_type != AVMEDIA_TYPE_ATTACHMENT		830796	1		&&			
ANR	831434	EqualityExpression	avctx -> codec_type != codec -> type		830796	0		!=			
ANR	831435	PtrMemberAccess	avctx -> codec_type		830796	0					
ANR	831436	Identifier	avctx		830796	0					
ANR	831437	Identifier	codec_type		830796	1					
ANR	831438	PtrMemberAccess	codec -> type		830796	1					
ANR	831439	Identifier	codec		830796	0					
ANR	831440	Identifier	type		830796	1					
ANR	831441	EqualityExpression	avctx -> codec_type != AVMEDIA_TYPE_ATTACHMENT		830796	1		!=			
ANR	831442	PtrMemberAccess	avctx -> codec_type		830796	0					
ANR	831443	Identifier	avctx		830796	0					
ANR	831444	Identifier	codec_type		830796	1					
ANR	831445	Identifier	AVMEDIA_TYPE_ATTACHMENT		830796	1					
ANR	831446	CompoundStatement		209:77:3993:3993	830796	1					
ANR	831447	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""codec type or id mismatches\\n"" )"	213:8:4107:4167	830796	0	True				
ANR	831448	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""codec type or id mismatches\\n"" )"		830796	0					
ANR	831449	Callee	av_log		830796	0					
ANR	831450	Identifier	av_log		830796	0					
ANR	831451	ArgumentList	avctx		830796	1					
ANR	831452	Argument	avctx		830796	0					
ANR	831453	Identifier	avctx		830796	0					
ANR	831454	Argument	AV_LOG_ERROR		830796	1					
ANR	831455	Identifier	AV_LOG_ERROR		830796	0					
ANR	831456	Argument	"""codec type or id mismatches\\n"""		830796	2					
ANR	831457	PrimaryExpression	"""codec type or id mismatches\\n"""		830796	0					
ANR	831458	ExpressionStatement	ret = AVERROR ( EINVAL )	215:8:4178:4199	830796	1	True				
ANR	831459	AssignmentExpression	ret = AVERROR ( EINVAL )		830796	0		=			
ANR	831460	Identifier	ret		830796	0					
ANR	831461	CallExpression	AVERROR ( EINVAL )		830796	1					
ANR	831462	Callee	AVERROR		830796	0					
ANR	831463	Identifier	AVERROR		830796	0					
ANR	831464	ArgumentList	EINVAL		830796	1					
ANR	831465	Argument	EINVAL		830796	0					
ANR	831466	Identifier	EINVAL		830796	0					
ANR	831467	GotoStatement	goto free_and_end ;	217:8:4210:4227	830796	2	True				
ANR	831468	Identifier	free_and_end		830796	0					
ANR	831469	ExpressionStatement	avctx -> frame_number = 0	221:4:4241:4264	830796	26	True				
ANR	831470	AssignmentExpression	avctx -> frame_number = 0		830796	0		=			
ANR	831471	PtrMemberAccess	avctx -> frame_number		830796	0					
ANR	831472	Identifier	avctx		830796	0					
ANR	831473	Identifier	frame_number		830796	1					
ANR	831474	PrimaryExpression	0		830796	1					
ANR	831475	IfStatement	if ( avctx -> codec_type == AVMEDIA_TYPE_AUDIO && ( ! avctx -> time_base . num || ! avctx -> time_base . den ) )		830796	27					
ANR	831476	Condition	avctx -> codec_type == AVMEDIA_TYPE_AUDIO && ( ! avctx -> time_base . num || ! avctx -> time_base . den )	225:8:4277:4376	830796	0	True				
ANR	831477	AndExpression	avctx -> codec_type == AVMEDIA_TYPE_AUDIO && ( ! avctx -> time_base . num || ! avctx -> time_base . den )		830796	0		&&			
ANR	831478	EqualityExpression	avctx -> codec_type == AVMEDIA_TYPE_AUDIO		830796	0		==			
ANR	831479	PtrMemberAccess	avctx -> codec_type		830796	0					
ANR	831480	Identifier	avctx		830796	0					
ANR	831481	Identifier	codec_type		830796	1					
ANR	831482	Identifier	AVMEDIA_TYPE_AUDIO		830796	1					
ANR	831483	OrExpression	! avctx -> time_base . num || ! avctx -> time_base . den		830796	1		||			
ANR	831484	UnaryOperationExpression	! avctx -> time_base . num		830796	0					
ANR	831485	UnaryOperator	!		830796	0					
ANR	831486	MemberAccess	avctx -> time_base . num		830796	1					
ANR	831487	PtrMemberAccess	avctx -> time_base		830796	0					
ANR	831488	Identifier	avctx		830796	0					
ANR	831489	Identifier	time_base		830796	1					
ANR	831490	Identifier	num		830796	1					
ANR	831491	UnaryOperationExpression	! avctx -> time_base . den		830796	1					
ANR	831492	UnaryOperator	!		830796	0					
ANR	831493	MemberAccess	avctx -> time_base . den		830796	1					
ANR	831494	PtrMemberAccess	avctx -> time_base		830796	0					
ANR	831495	Identifier	avctx		830796	0					
ANR	831496	Identifier	time_base		830796	1					
ANR	831497	Identifier	den		830796	1					
ANR	831498	CompoundStatement		225:58:4276:4276	830796	1					
ANR	831499	ExpressionStatement	avctx -> time_base . num = 1	229:8:4390:4414	830796	0	True				
ANR	831500	AssignmentExpression	avctx -> time_base . num = 1		830796	0		=			
ANR	831501	MemberAccess	avctx -> time_base . num		830796	0					
ANR	831502	PtrMemberAccess	avctx -> time_base		830796	0					
ANR	831503	Identifier	avctx		830796	0					
ANR	831504	Identifier	time_base		830796	1					
ANR	831505	Identifier	num		830796	1					
ANR	831506	PrimaryExpression	1		830796	1					
ANR	831507	ExpressionStatement	avctx -> time_base . den = avctx -> sample_rate	231:8:4425:4466	830796	1	True				
ANR	831508	AssignmentExpression	avctx -> time_base . den = avctx -> sample_rate		830796	0		=			
ANR	831509	MemberAccess	avctx -> time_base . den		830796	0					
ANR	831510	PtrMemberAccess	avctx -> time_base		830796	0					
ANR	831511	Identifier	avctx		830796	0					
ANR	831512	Identifier	time_base		830796	1					
ANR	831513	Identifier	den		830796	1					
ANR	831514	PtrMemberAccess	avctx -> sample_rate		830796	1					
ANR	831515	Identifier	avctx		830796	0					
ANR	831516	Identifier	sample_rate		830796	1					
ANR	831517	IfStatement	if ( ! HAVE_THREADS )		830796	28					
ANR	831518	Condition	! HAVE_THREADS	237:8:4486:4498	830796	0	True				
ANR	831519	UnaryOperationExpression	! HAVE_THREADS		830796	0					
ANR	831520	UnaryOperator	!		830796	0					
ANR	831521	Identifier	HAVE_THREADS		830796	1					
ANR	831522	ExpressionStatement	"av_log ( avctx , AV_LOG_WARNING , ""Warning: not compiled with thread support, using thread emulation\\n"" )"	239:8:4510:4610	830796	1	True				
ANR	831523	CallExpression	"av_log ( avctx , AV_LOG_WARNING , ""Warning: not compiled with thread support, using thread emulation\\n"" )"		830796	0					
ANR	831524	Callee	av_log		830796	0					
ANR	831525	Identifier	av_log		830796	0					
ANR	831526	ArgumentList	avctx		830796	1					
ANR	831527	Argument	avctx		830796	0					
ANR	831528	Identifier	avctx		830796	0					
ANR	831529	Argument	AV_LOG_WARNING		830796	1					
ANR	831530	Identifier	AV_LOG_WARNING		830796	0					
ANR	831531	Argument	"""Warning: not compiled with thread support, using thread emulation\\n"""		830796	2					
ANR	831532	PrimaryExpression	"""Warning: not compiled with thread support, using thread emulation\\n"""		830796	0					
ANR	831533	IfStatement	if ( HAVE_THREADS && ! avctx -> thread_opaque )		830796	29					
ANR	831534	Condition	HAVE_THREADS && ! avctx -> thread_opaque	243:8:4623:4659	830796	0	True				
ANR	831535	AndExpression	HAVE_THREADS && ! avctx -> thread_opaque		830796	0		&&			
ANR	831536	Identifier	HAVE_THREADS		830796	0					
ANR	831537	UnaryOperationExpression	! avctx -> thread_opaque		830796	1					
ANR	831538	UnaryOperator	!		830796	0					
ANR	831539	PtrMemberAccess	avctx -> thread_opaque		830796	1					
ANR	831540	Identifier	avctx		830796	0					
ANR	831541	Identifier	thread_opaque		830796	1					
ANR	831542	CompoundStatement		241:47:4559:4559	830796	1					
ANR	831543	ExpressionStatement	ret = ff_thread_init ( avctx )	245:8:4673:4700	830796	0	True				
ANR	831544	AssignmentExpression	ret = ff_thread_init ( avctx )		830796	0		=			
ANR	831545	Identifier	ret		830796	0					
ANR	831546	CallExpression	ff_thread_init ( avctx )		830796	1					
ANR	831547	Callee	ff_thread_init		830796	0					
ANR	831548	Identifier	ff_thread_init		830796	0					
ANR	831549	ArgumentList	avctx		830796	1					
ANR	831550	Argument	avctx		830796	0					
ANR	831551	Identifier	avctx		830796	0					
ANR	831552	IfStatement	if ( ret < 0 )		830796	1					
ANR	831553	Condition	ret < 0	247:12:4715:4721	830796	0	True				
ANR	831554	RelationalExpression	ret < 0		830796	0		<			
ANR	831555	Identifier	ret		830796	0					
ANR	831556	PrimaryExpression	0		830796	1					
ANR	831557	CompoundStatement		245:21:4621:4621	830796	1					
ANR	831558	GotoStatement	goto free_and_end ;	249:12:4739:4756	830796	0	True				
ANR	831559	Identifier	free_and_end		830796	0					
ANR	831560	IfStatement	if ( ! HAVE_THREADS && ! ( codec -> capabilities & CODEC_CAP_AUTO_THREADS ) )		830796	30					
ANR	831561	Condition	! HAVE_THREADS && ! ( codec -> capabilities & CODEC_CAP_AUTO_THREADS )	255:8:4785:4848	830796	0	True				
ANR	831562	AndExpression	! HAVE_THREADS && ! ( codec -> capabilities & CODEC_CAP_AUTO_THREADS )		830796	0		&&			
ANR	831563	UnaryOperationExpression	! HAVE_THREADS		830796	0					
ANR	831564	UnaryOperator	!		830796	0					
ANR	831565	Identifier	HAVE_THREADS		830796	1					
ANR	831566	UnaryOperationExpression	! ( codec -> capabilities & CODEC_CAP_AUTO_THREADS )		830796	1					
ANR	831567	UnaryOperator	!		830796	0					
ANR	831568	BitAndExpression	codec -> capabilities & CODEC_CAP_AUTO_THREADS		830796	1		&			
ANR	831569	PtrMemberAccess	codec -> capabilities		830796	0					
ANR	831570	Identifier	codec		830796	0					
ANR	831571	Identifier	capabilities		830796	1					
ANR	831572	Identifier	CODEC_CAP_AUTO_THREADS		830796	1					
ANR	831573	ExpressionStatement	avctx -> thread_count = 1	257:8:4860:4883	830796	1	True				
ANR	831574	AssignmentExpression	avctx -> thread_count = 1		830796	0		=			
ANR	831575	PtrMemberAccess	avctx -> thread_count		830796	0					
ANR	831576	Identifier	avctx		830796	0					
ANR	831577	Identifier	thread_count		830796	1					
ANR	831578	PrimaryExpression	1		830796	1					
ANR	831579	IfStatement	if ( avctx -> codec -> max_lowres < avctx -> lowres || avctx -> lowres < 0 )		830796	31					
ANR	831580	Condition	avctx -> codec -> max_lowres < avctx -> lowres || avctx -> lowres < 0	261:8:4896:4956	830796	0	True				
ANR	831581	OrExpression	avctx -> codec -> max_lowres < avctx -> lowres || avctx -> lowres < 0		830796	0		||			
ANR	831582	RelationalExpression	avctx -> codec -> max_lowres < avctx -> lowres		830796	0		<			
ANR	831583	PtrMemberAccess	avctx -> codec -> max_lowres		830796	0					
ANR	831584	PtrMemberAccess	avctx -> codec		830796	0					
ANR	831585	Identifier	avctx		830796	0					
ANR	831586	Identifier	codec		830796	1					
ANR	831587	Identifier	max_lowres		830796	1					
ANR	831588	PtrMemberAccess	avctx -> lowres		830796	1					
ANR	831589	Identifier	avctx		830796	0					
ANR	831590	Identifier	lowres		830796	1					
ANR	831591	RelationalExpression	avctx -> lowres < 0		830796	1		<			
ANR	831592	PtrMemberAccess	avctx -> lowres		830796	0					
ANR	831593	Identifier	avctx		830796	0					
ANR	831594	Identifier	lowres		830796	1					
ANR	831595	PrimaryExpression	0		830796	1					
ANR	831596	CompoundStatement		259:71:4856:4856	830796	1					
ANR	831597	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""The maximum value for lowres supported by the decoder is %d\\n"" , avctx -> codec -> max_lowres )"	263:8:4970:5104	830796	0	True				
ANR	831598	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""The maximum value for lowres supported by the decoder is %d\\n"" , avctx -> codec -> max_lowres )"		830796	0					
ANR	831599	Callee	av_log		830796	0					
ANR	831600	Identifier	av_log		830796	0					
ANR	831601	ArgumentList	avctx		830796	1					
ANR	831602	Argument	avctx		830796	0					
ANR	831603	Identifier	avctx		830796	0					
ANR	831604	Argument	AV_LOG_ERROR		830796	1					
ANR	831605	Identifier	AV_LOG_ERROR		830796	0					
ANR	831606	Argument	"""The maximum value for lowres supported by the decoder is %d\\n"""		830796	2					
ANR	831607	PrimaryExpression	"""The maximum value for lowres supported by the decoder is %d\\n"""		830796	0					
ANR	831608	Argument	avctx -> codec -> max_lowres		830796	3					
ANR	831609	PtrMemberAccess	avctx -> codec -> max_lowres		830796	0					
ANR	831610	PtrMemberAccess	avctx -> codec		830796	0					
ANR	831611	Identifier	avctx		830796	0					
ANR	831612	Identifier	codec		830796	1					
ANR	831613	Identifier	max_lowres		830796	1					
ANR	831614	ExpressionStatement	ret = AVERROR ( EINVAL )	267:8:5115:5136	830796	1	True				
ANR	831615	AssignmentExpression	ret = AVERROR ( EINVAL )		830796	0		=			
ANR	831616	Identifier	ret		830796	0					
ANR	831617	CallExpression	AVERROR ( EINVAL )		830796	1					
ANR	831618	Callee	AVERROR		830796	0					
ANR	831619	Identifier	AVERROR		830796	0					
ANR	831620	ArgumentList	EINVAL		830796	1					
ANR	831621	Argument	EINVAL		830796	0					
ANR	831622	Identifier	EINVAL		830796	0					
ANR	831623	GotoStatement	goto free_and_end ;	269:8:5147:5164	830796	2	True				
ANR	831624	Identifier	free_and_end		830796	0					
ANR	831625	IfStatement	if ( av_codec_is_encoder ( avctx -> codec ) )		830796	32					
ANR	831626	Condition	av_codec_is_encoder ( avctx -> codec )	275:8:5184:5216	830796	0	True				
ANR	831627	CallExpression	av_codec_is_encoder ( avctx -> codec )		830796	0					
ANR	831628	Callee	av_codec_is_encoder		830796	0					
ANR	831629	Identifier	av_codec_is_encoder		830796	0					
ANR	831630	ArgumentList	avctx -> codec		830796	1					
ANR	831631	Argument	avctx -> codec		830796	0					
ANR	831632	PtrMemberAccess	avctx -> codec		830796	0					
ANR	831633	Identifier	avctx		830796	0					
ANR	831634	Identifier	codec		830796	1					
ANR	831635	CompoundStatement		275:8:5127:5132	830796	1					
ANR	831636	IdentifierDeclStatement	int i ;	277:8:5230:5235	830796	0	True				
ANR	831637	IdentifierDecl	i		830796	0					
ANR	831638	IdentifierDeclType	int		830796	0					
ANR	831639	Identifier	i		830796	1					
ANR	831640	IfStatement	if ( avctx -> codec -> sample_fmts )		830796	1					
ANR	831641	Condition	avctx -> codec -> sample_fmts	279:12:5250:5274	830796	0	True				
ANR	831642	PtrMemberAccess	avctx -> codec -> sample_fmts		830796	0					
ANR	831643	PtrMemberAccess	avctx -> codec		830796	0					
ANR	831644	Identifier	avctx		830796	0					
ANR	831645	Identifier	codec		830796	1					
ANR	831646	Identifier	sample_fmts		830796	1					
ANR	831647	CompoundStatement		277:39:5174:5174	830796	1					
ANR	831648	ForStatement	for ( i = 0 ; avctx -> codec -> sample_fmts [ i ] != AV_SAMPLE_FMT_NONE ; i ++ )		830796	0					
ANR	831649	ForInit	i = 0 ;	281:17:5297:5302	830796	0	True				
ANR	831650	AssignmentExpression	i = 0		830796	0		=			
ANR	831651	Identifier	i		830796	0					
ANR	831652	PrimaryExpression	0		830796	1					
ANR	831653	Condition	avctx -> codec -> sample_fmts [ i ] != AV_SAMPLE_FMT_NONE	281:24:5304:5353	830796	1	True				
ANR	831654	EqualityExpression	avctx -> codec -> sample_fmts [ i ] != AV_SAMPLE_FMT_NONE		830796	0		!=			
ANR	831655	ArrayIndexing	avctx -> codec -> sample_fmts [ i ]		830796	0					
ANR	831656	PtrMemberAccess	avctx -> codec -> sample_fmts		830796	0					
ANR	831657	PtrMemberAccess	avctx -> codec		830796	0					
ANR	831658	Identifier	avctx		830796	0					
ANR	831659	Identifier	codec		830796	1					
ANR	831660	Identifier	sample_fmts		830796	1					
ANR	831661	Identifier	i		830796	1					
ANR	831662	Identifier	AV_SAMPLE_FMT_NONE		830796	1					
ANR	831663	PostIncDecOperationExpression	i ++	281:76:5356:5358	830796	2	True				
ANR	831664	Identifier	i		830796	0					
ANR	831665	IncDec	++		830796	1					
ANR	831666	IfStatement	if ( avctx -> sample_fmt == avctx -> codec -> sample_fmts [ i ] )		830796	3					
ANR	831667	Condition	avctx -> sample_fmt == avctx -> codec -> sample_fmts [ i ]	283:20:5382:5430	830796	0	True				
ANR	831668	EqualityExpression	avctx -> sample_fmt == avctx -> codec -> sample_fmts [ i ]		830796	0		==			
ANR	831669	PtrMemberAccess	avctx -> sample_fmt		830796	0					
ANR	831670	Identifier	avctx		830796	0					
ANR	831671	Identifier	sample_fmt		830796	1					
ANR	831672	ArrayIndexing	avctx -> codec -> sample_fmts [ i ]		830796	1					
ANR	831673	PtrMemberAccess	avctx -> codec -> sample_fmts		830796	0					
ANR	831674	PtrMemberAccess	avctx -> codec		830796	0					
ANR	831675	Identifier	avctx		830796	0					
ANR	831676	Identifier	codec		830796	1					
ANR	831677	Identifier	sample_fmts		830796	1					
ANR	831678	Identifier	i		830796	1					
ANR	831679	BreakStatement	break ;	285:20:5454:5459	830796	1	True				
ANR	831680	IfStatement	if ( avctx -> codec -> sample_fmts [ i ] == AV_SAMPLE_FMT_NONE )		830796	1					
ANR	831681	Condition	avctx -> codec -> sample_fmts [ i ] == AV_SAMPLE_FMT_NONE	287:16:5478:5527	830796	0	True				
ANR	831682	EqualityExpression	avctx -> codec -> sample_fmts [ i ] == AV_SAMPLE_FMT_NONE		830796	0		==			
ANR	831683	ArrayIndexing	avctx -> codec -> sample_fmts [ i ]		830796	0					
ANR	831684	PtrMemberAccess	avctx -> codec -> sample_fmts		830796	0					
ANR	831685	PtrMemberAccess	avctx -> codec		830796	0					
ANR	831686	Identifier	avctx		830796	0					
ANR	831687	Identifier	codec		830796	1					
ANR	831688	Identifier	sample_fmts		830796	1					
ANR	831689	Identifier	i		830796	1					
ANR	831690	Identifier	AV_SAMPLE_FMT_NONE		830796	1					
ANR	831691	CompoundStatement		285:68:5427:5427	830796	1					
ANR	831692	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Specified sample_fmt is not supported.\\n"" )"	289:16:5549:5620	830796	0	True				
ANR	831693	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Specified sample_fmt is not supported.\\n"" )"		830796	0					
ANR	831694	Callee	av_log		830796	0					
ANR	831695	Identifier	av_log		830796	0					
ANR	831696	ArgumentList	avctx		830796	1					
ANR	831697	Argument	avctx		830796	0					
ANR	831698	Identifier	avctx		830796	0					
ANR	831699	Argument	AV_LOG_ERROR		830796	1					
ANR	831700	Identifier	AV_LOG_ERROR		830796	0					
ANR	831701	Argument	"""Specified sample_fmt is not supported.\\n"""		830796	2					
ANR	831702	PrimaryExpression	"""Specified sample_fmt is not supported.\\n"""		830796	0					
ANR	831703	ExpressionStatement	ret = AVERROR ( EINVAL )	291:16:5639:5660	830796	1	True				
ANR	831704	AssignmentExpression	ret = AVERROR ( EINVAL )		830796	0		=			
ANR	831705	Identifier	ret		830796	0					
ANR	831706	CallExpression	AVERROR ( EINVAL )		830796	1					
ANR	831707	Callee	AVERROR		830796	0					
ANR	831708	Identifier	AVERROR		830796	0					
ANR	831709	ArgumentList	EINVAL		830796	1					
ANR	831710	Argument	EINVAL		830796	0					
ANR	831711	Identifier	EINVAL		830796	0					
ANR	831712	GotoStatement	goto free_and_end ;	293:16:5679:5696	830796	2	True				
ANR	831713	Identifier	free_and_end		830796	0					
ANR	831714	IfStatement	if ( avctx -> codec -> pix_fmts )		830796	2					
ANR	831715	Condition	avctx -> codec -> pix_fmts	299:12:5737:5758	830796	0	True				
ANR	831716	PtrMemberAccess	avctx -> codec -> pix_fmts		830796	0					
ANR	831717	PtrMemberAccess	avctx -> codec		830796	0					
ANR	831718	Identifier	avctx		830796	0					
ANR	831719	Identifier	codec		830796	1					
ANR	831720	Identifier	pix_fmts		830796	1					
ANR	831721	CompoundStatement		297:36:5658:5658	830796	1					
ANR	831722	ForStatement	for ( i = 0 ; avctx -> codec -> pix_fmts [ i ] != PIX_FMT_NONE ; i ++ )		830796	0					
ANR	831723	ForInit	i = 0 ;	301:17:5781:5786	830796	0	True				
ANR	831724	AssignmentExpression	i = 0		830796	0		=			
ANR	831725	Identifier	i		830796	0					
ANR	831726	PrimaryExpression	0		830796	1					
ANR	831727	Condition	avctx -> codec -> pix_fmts [ i ] != PIX_FMT_NONE	301:24:5788:5828	830796	1	True				
ANR	831728	EqualityExpression	avctx -> codec -> pix_fmts [ i ] != PIX_FMT_NONE		830796	0		!=			
ANR	831729	ArrayIndexing	avctx -> codec -> pix_fmts [ i ]		830796	0					
ANR	831730	PtrMemberAccess	avctx -> codec -> pix_fmts		830796	0					
ANR	831731	PtrMemberAccess	avctx -> codec		830796	0					
ANR	831732	Identifier	avctx		830796	0					
ANR	831733	Identifier	codec		830796	1					
ANR	831734	Identifier	pix_fmts		830796	1					
ANR	831735	Identifier	i		830796	1					
ANR	831736	Identifier	PIX_FMT_NONE		830796	1					
ANR	831737	PostIncDecOperationExpression	i ++	301:67:5831:5833	830796	2	True				
ANR	831738	Identifier	i		830796	0					
ANR	831739	IncDec	++		830796	1					
ANR	831740	IfStatement	if ( avctx -> pix_fmt == avctx -> codec -> pix_fmts [ i ] )		830796	3					
ANR	831741	Condition	avctx -> pix_fmt == avctx -> codec -> pix_fmts [ i ]	303:20:5857:5899	830796	0	True				
ANR	831742	EqualityExpression	avctx -> pix_fmt == avctx -> codec -> pix_fmts [ i ]		830796	0		==			
ANR	831743	PtrMemberAccess	avctx -> pix_fmt		830796	0					
ANR	831744	Identifier	avctx		830796	0					
ANR	831745	Identifier	pix_fmt		830796	1					
ANR	831746	ArrayIndexing	avctx -> codec -> pix_fmts [ i ]		830796	1					
ANR	831747	PtrMemberAccess	avctx -> codec -> pix_fmts		830796	0					
ANR	831748	PtrMemberAccess	avctx -> codec		830796	0					
ANR	831749	Identifier	avctx		830796	0					
ANR	831750	Identifier	codec		830796	1					
ANR	831751	Identifier	pix_fmts		830796	1					
ANR	831752	Identifier	i		830796	1					
ANR	831753	BreakStatement	break ;	305:20:5923:5928	830796	1	True				
ANR	831754	IfStatement	if ( avctx -> codec -> pix_fmts [ i ] == PIX_FMT_NONE && ! ( ( avctx -> codec_id == CODEC_ID_MJPEG || avctx -> codec_id == CODEC_ID_LJPEG ) && avctx -> strict_std_compliance <= FF_COMPLIANCE_UNOFFICIAL ) )		830796	1					
ANR	831755	Condition	avctx -> codec -> pix_fmts [ i ] == PIX_FMT_NONE && ! ( ( avctx -> codec_id == CODEC_ID_MJPEG || avctx -> codec_id == CODEC_ID_LJPEG ) && avctx -> strict_std_compliance <= FF_COMPLIANCE_UNOFFICIAL )	307:16:5947:6165	830796	0	True				
ANR	831756	AndExpression	avctx -> codec -> pix_fmts [ i ] == PIX_FMT_NONE && ! ( ( avctx -> codec_id == CODEC_ID_MJPEG || avctx -> codec_id == CODEC_ID_LJPEG ) && avctx -> strict_std_compliance <= FF_COMPLIANCE_UNOFFICIAL )		830796	0		&&			
ANR	831757	EqualityExpression	avctx -> codec -> pix_fmts [ i ] == PIX_FMT_NONE		830796	0		==			
ANR	831758	ArrayIndexing	avctx -> codec -> pix_fmts [ i ]		830796	0					
ANR	831759	PtrMemberAccess	avctx -> codec -> pix_fmts		830796	0					
ANR	831760	PtrMemberAccess	avctx -> codec		830796	0					
ANR	831761	Identifier	avctx		830796	0					
ANR	831762	Identifier	codec		830796	1					
ANR	831763	Identifier	pix_fmts		830796	1					
ANR	831764	Identifier	i		830796	1					
ANR	831765	Identifier	PIX_FMT_NONE		830796	1					
ANR	831766	UnaryOperationExpression	! ( ( avctx -> codec_id == CODEC_ID_MJPEG || avctx -> codec_id == CODEC_ID_LJPEG ) && avctx -> strict_std_compliance <= FF_COMPLIANCE_UNOFFICIAL )		830796	1					
ANR	831767	UnaryOperator	!		830796	0					
ANR	831768	AndExpression	( avctx -> codec_id == CODEC_ID_MJPEG || avctx -> codec_id == CODEC_ID_LJPEG ) && avctx -> strict_std_compliance <= FF_COMPLIANCE_UNOFFICIAL		830796	1		&&			
ANR	831769	OrExpression	avctx -> codec_id == CODEC_ID_MJPEG || avctx -> codec_id == CODEC_ID_LJPEG		830796	0		||			
ANR	831770	EqualityExpression	avctx -> codec_id == CODEC_ID_MJPEG		830796	0		==			
ANR	831771	PtrMemberAccess	avctx -> codec_id		830796	0					
ANR	831772	Identifier	avctx		830796	0					
ANR	831773	Identifier	codec_id		830796	1					
ANR	831774	Identifier	CODEC_ID_MJPEG		830796	1					
ANR	831775	EqualityExpression	avctx -> codec_id == CODEC_ID_LJPEG		830796	1		==			
ANR	831776	PtrMemberAccess	avctx -> codec_id		830796	0					
ANR	831777	Identifier	avctx		830796	0					
ANR	831778	Identifier	codec_id		830796	1					
ANR	831779	Identifier	CODEC_ID_LJPEG		830796	1					
ANR	831780	RelationalExpression	avctx -> strict_std_compliance <= FF_COMPLIANCE_UNOFFICIAL		830796	1		<=			
ANR	831781	PtrMemberAccess	avctx -> strict_std_compliance		830796	0					
ANR	831782	Identifier	avctx		830796	0					
ANR	831783	Identifier	strict_std_compliance		830796	1					
ANR	831784	Identifier	FF_COMPLIANCE_UNOFFICIAL		830796	1					
ANR	831785	CompoundStatement		309:83:6065:6065	830796	1					
ANR	831786	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Specified pix_fmt is not supported\\n"" )"	313:16:6187:6254	830796	0	True				
ANR	831787	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Specified pix_fmt is not supported\\n"" )"		830796	0					
ANR	831788	Callee	av_log		830796	0					
ANR	831789	Identifier	av_log		830796	0					
ANR	831790	ArgumentList	avctx		830796	1					
ANR	831791	Argument	avctx		830796	0					
ANR	831792	Identifier	avctx		830796	0					
ANR	831793	Argument	AV_LOG_ERROR		830796	1					
ANR	831794	Identifier	AV_LOG_ERROR		830796	0					
ANR	831795	Argument	"""Specified pix_fmt is not supported\\n"""		830796	2					
ANR	831796	PrimaryExpression	"""Specified pix_fmt is not supported\\n"""		830796	0					
ANR	831797	ExpressionStatement	ret = AVERROR ( EINVAL )	315:16:6273:6294	830796	1	True				
ANR	831798	AssignmentExpression	ret = AVERROR ( EINVAL )		830796	0		=			
ANR	831799	Identifier	ret		830796	0					
ANR	831800	CallExpression	AVERROR ( EINVAL )		830796	1					
ANR	831801	Callee	AVERROR		830796	0					
ANR	831802	Identifier	AVERROR		830796	0					
ANR	831803	ArgumentList	EINVAL		830796	1					
ANR	831804	Argument	EINVAL		830796	0					
ANR	831805	Identifier	EINVAL		830796	0					
ANR	831806	GotoStatement	goto free_and_end ;	317:16:6313:6330	830796	2	True				
ANR	831807	Identifier	free_and_end		830796	0					
ANR	831808	IfStatement	if ( avctx -> codec -> supported_samplerates )		830796	3					
ANR	831809	Condition	avctx -> codec -> supported_samplerates	323:12:6371:6405	830796	0	True				
ANR	831810	PtrMemberAccess	avctx -> codec -> supported_samplerates		830796	0					
ANR	831811	PtrMemberAccess	avctx -> codec		830796	0					
ANR	831812	Identifier	avctx		830796	0					
ANR	831813	Identifier	codec		830796	1					
ANR	831814	Identifier	supported_samplerates		830796	1					
ANR	831815	CompoundStatement		321:49:6305:6305	830796	1					
ANR	831816	ForStatement	for ( i = 0 ; avctx -> codec -> supported_samplerates [ i ] != 0 ; i ++ )		830796	0					
ANR	831817	ForInit	i = 0 ;	325:17:6428:6433	830796	0	True				
ANR	831818	AssignmentExpression	i = 0		830796	0		=			
ANR	831819	Identifier	i		830796	0					
ANR	831820	PrimaryExpression	0		830796	1					
ANR	831821	Condition	avctx -> codec -> supported_samplerates [ i ] != 0	325:24:6435:6477	830796	1	True				
ANR	831822	EqualityExpression	avctx -> codec -> supported_samplerates [ i ] != 0		830796	0		!=			
ANR	831823	ArrayIndexing	avctx -> codec -> supported_samplerates [ i ]		830796	0					
ANR	831824	PtrMemberAccess	avctx -> codec -> supported_samplerates		830796	0					
ANR	831825	PtrMemberAccess	avctx -> codec		830796	0					
ANR	831826	Identifier	avctx		830796	0					
ANR	831827	Identifier	codec		830796	1					
ANR	831828	Identifier	supported_samplerates		830796	1					
ANR	831829	Identifier	i		830796	1					
ANR	831830	PrimaryExpression	0		830796	1					
ANR	831831	PostIncDecOperationExpression	i ++	325:69:6480:6482	830796	2	True				
ANR	831832	Identifier	i		830796	0					
ANR	831833	IncDec	++		830796	1					
ANR	831834	IfStatement	if ( avctx -> sample_rate == avctx -> codec -> supported_samplerates [ i ] )		830796	3					
ANR	831835	Condition	avctx -> sample_rate == avctx -> codec -> supported_samplerates [ i ]	327:20:6506:6565	830796	0	True				
ANR	831836	EqualityExpression	avctx -> sample_rate == avctx -> codec -> supported_samplerates [ i ]		830796	0		==			
ANR	831837	PtrMemberAccess	avctx -> sample_rate		830796	0					
ANR	831838	Identifier	avctx		830796	0					
ANR	831839	Identifier	sample_rate		830796	1					
ANR	831840	ArrayIndexing	avctx -> codec -> supported_samplerates [ i ]		830796	1					
ANR	831841	PtrMemberAccess	avctx -> codec -> supported_samplerates		830796	0					
ANR	831842	PtrMemberAccess	avctx -> codec		830796	0					
ANR	831843	Identifier	avctx		830796	0					
ANR	831844	Identifier	codec		830796	1					
ANR	831845	Identifier	supported_samplerates		830796	1					
ANR	831846	Identifier	i		830796	1					
ANR	831847	BreakStatement	break ;	329:20:6589:6594	830796	1	True				
ANR	831848	IfStatement	if ( avctx -> codec -> supported_samplerates [ i ] == 0 )		830796	1					
ANR	831849	Condition	avctx -> codec -> supported_samplerates [ i ] == 0	331:16:6613:6655	830796	0	True				
ANR	831850	EqualityExpression	avctx -> codec -> supported_samplerates [ i ] == 0		830796	0		==			
ANR	831851	ArrayIndexing	avctx -> codec -> supported_samplerates [ i ]		830796	0					
ANR	831852	PtrMemberAccess	avctx -> codec -> supported_samplerates		830796	0					
ANR	831853	PtrMemberAccess	avctx -> codec		830796	0					
ANR	831854	Identifier	avctx		830796	0					
ANR	831855	Identifier	codec		830796	1					
ANR	831856	Identifier	supported_samplerates		830796	1					
ANR	831857	Identifier	i		830796	1					
ANR	831858	PrimaryExpression	0		830796	1					
ANR	831859	CompoundStatement		329:61:6555:6555	830796	1					
ANR	831860	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Specified sample_rate is not supported\\n"" )"	333:16:6677:6748	830796	0	True				
ANR	831861	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Specified sample_rate is not supported\\n"" )"		830796	0					
ANR	831862	Callee	av_log		830796	0					
ANR	831863	Identifier	av_log		830796	0					
ANR	831864	ArgumentList	avctx		830796	1					
ANR	831865	Argument	avctx		830796	0					
ANR	831866	Identifier	avctx		830796	0					
ANR	831867	Argument	AV_LOG_ERROR		830796	1					
ANR	831868	Identifier	AV_LOG_ERROR		830796	0					
ANR	831869	Argument	"""Specified sample_rate is not supported\\n"""		830796	2					
ANR	831870	PrimaryExpression	"""Specified sample_rate is not supported\\n"""		830796	0					
ANR	831871	ExpressionStatement	ret = AVERROR ( EINVAL )	335:16:6767:6788	830796	1	True				
ANR	831872	AssignmentExpression	ret = AVERROR ( EINVAL )		830796	0		=			
ANR	831873	Identifier	ret		830796	0					
ANR	831874	CallExpression	AVERROR ( EINVAL )		830796	1					
ANR	831875	Callee	AVERROR		830796	0					
ANR	831876	Identifier	AVERROR		830796	0					
ANR	831877	ArgumentList	EINVAL		830796	1					
ANR	831878	Argument	EINVAL		830796	0					
ANR	831879	Identifier	EINVAL		830796	0					
ANR	831880	GotoStatement	goto free_and_end ;	337:16:6807:6824	830796	2	True				
ANR	831881	Identifier	free_and_end		830796	0					
ANR	831882	IfStatement	if ( avctx -> codec -> channel_layouts )		830796	4					
ANR	831883	Condition	avctx -> codec -> channel_layouts	343:12:6865:6893	830796	0	True				
ANR	831884	PtrMemberAccess	avctx -> codec -> channel_layouts		830796	0					
ANR	831885	PtrMemberAccess	avctx -> codec		830796	0					
ANR	831886	Identifier	avctx		830796	0					
ANR	831887	Identifier	codec		830796	1					
ANR	831888	Identifier	channel_layouts		830796	1					
ANR	831889	CompoundStatement		341:43:6793:6793	830796	1					
ANR	831890	IfStatement	if ( ! avctx -> channel_layout )		830796	0					
ANR	831891	Condition	! avctx -> channel_layout	345:16:6915:6936	830796	0	True				
ANR	831892	UnaryOperationExpression	! avctx -> channel_layout		830796	0					
ANR	831893	UnaryOperator	!		830796	0					
ANR	831894	PtrMemberAccess	avctx -> channel_layout		830796	1					
ANR	831895	Identifier	avctx		830796	0					
ANR	831896	Identifier	channel_layout		830796	1					
ANR	831897	CompoundStatement		343:40:6836:6836	830796	1					
ANR	831898	ExpressionStatement	"av_log ( avctx , AV_LOG_WARNING , ""channel_layout not specified\\n"" )"	347:16:6958:7021	830796	0	True				
ANR	831899	CallExpression	"av_log ( avctx , AV_LOG_WARNING , ""channel_layout not specified\\n"" )"		830796	0					
ANR	831900	Callee	av_log		830796	0					
ANR	831901	Identifier	av_log		830796	0					
ANR	831902	ArgumentList	avctx		830796	1					
ANR	831903	Argument	avctx		830796	0					
ANR	831904	Identifier	avctx		830796	0					
ANR	831905	Argument	AV_LOG_WARNING		830796	1					
ANR	831906	Identifier	AV_LOG_WARNING		830796	0					
ANR	831907	Argument	"""channel_layout not specified\\n"""		830796	2					
ANR	831908	PrimaryExpression	"""channel_layout not specified\\n"""		830796	0					
ANR	831909	ElseStatement	else		830796	0					
ANR	831910	CompoundStatement		347:19:6940:6940	830796	0					
ANR	831911	ForStatement	for ( i = 0 ; avctx -> codec -> channel_layouts [ i ] != 0 ; i ++ )		830796	0					
ANR	831912	ForInit	i = 0 ;	351:21:7067:7072	830796	0	True				
ANR	831913	AssignmentExpression	i = 0		830796	0		=			
ANR	831914	Identifier	i		830796	0					
ANR	831915	PrimaryExpression	0		830796	1					
ANR	831916	Condition	avctx -> codec -> channel_layouts [ i ] != 0	351:28:7074:7110	830796	1	True				
ANR	831917	EqualityExpression	avctx -> codec -> channel_layouts [ i ] != 0		830796	0		!=			
ANR	831918	ArrayIndexing	avctx -> codec -> channel_layouts [ i ]		830796	0					
ANR	831919	PtrMemberAccess	avctx -> codec -> channel_layouts		830796	0					
ANR	831920	PtrMemberAccess	avctx -> codec		830796	0					
ANR	831921	Identifier	avctx		830796	0					
ANR	831922	Identifier	codec		830796	1					
ANR	831923	Identifier	channel_layouts		830796	1					
ANR	831924	Identifier	i		830796	1					
ANR	831925	PrimaryExpression	0		830796	1					
ANR	831926	PostIncDecOperationExpression	i ++	351:67:7113:7115	830796	2	True				
ANR	831927	Identifier	i		830796	0					
ANR	831928	IncDec	++		830796	1					
ANR	831929	IfStatement	if ( avctx -> channel_layout == avctx -> codec -> channel_layouts [ i ] )		830796	3					
ANR	831930	Condition	avctx -> channel_layout == avctx -> codec -> channel_layouts [ i ]	353:24:7143:7199	830796	0	True				
ANR	831931	EqualityExpression	avctx -> channel_layout == avctx -> codec -> channel_layouts [ i ]		830796	0		==			
ANR	831932	PtrMemberAccess	avctx -> channel_layout		830796	0					
ANR	831933	Identifier	avctx		830796	0					
ANR	831934	Identifier	channel_layout		830796	1					
ANR	831935	ArrayIndexing	avctx -> codec -> channel_layouts [ i ]		830796	1					
ANR	831936	PtrMemberAccess	avctx -> codec -> channel_layouts		830796	0					
ANR	831937	PtrMemberAccess	avctx -> codec		830796	0					
ANR	831938	Identifier	avctx		830796	0					
ANR	831939	Identifier	codec		830796	1					
ANR	831940	Identifier	channel_layouts		830796	1					
ANR	831941	Identifier	i		830796	1					
ANR	831942	BreakStatement	break ;	355:24:7227:7232	830796	1	True				
ANR	831943	IfStatement	if ( avctx -> codec -> channel_layouts [ i ] == 0 )		830796	1					
ANR	831944	Condition	avctx -> codec -> channel_layouts [ i ] == 0	357:20:7255:7291	830796	0	True				
ANR	831945	EqualityExpression	avctx -> codec -> channel_layouts [ i ] == 0		830796	0		==			
ANR	831946	ArrayIndexing	avctx -> codec -> channel_layouts [ i ]		830796	0					
ANR	831947	PtrMemberAccess	avctx -> codec -> channel_layouts		830796	0					
ANR	831948	PtrMemberAccess	avctx -> codec		830796	0					
ANR	831949	Identifier	avctx		830796	0					
ANR	831950	Identifier	codec		830796	1					
ANR	831951	Identifier	channel_layouts		830796	1					
ANR	831952	Identifier	i		830796	1					
ANR	831953	PrimaryExpression	0		830796	1					
ANR	831954	CompoundStatement		355:59:7191:7191	830796	1					
ANR	831955	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Specified channel_layout is not supported\\n"" )"	359:20:7317:7391	830796	0	True				
ANR	831956	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Specified channel_layout is not supported\\n"" )"		830796	0					
ANR	831957	Callee	av_log		830796	0					
ANR	831958	Identifier	av_log		830796	0					
ANR	831959	ArgumentList	avctx		830796	1					
ANR	831960	Argument	avctx		830796	0					
ANR	831961	Identifier	avctx		830796	0					
ANR	831962	Argument	AV_LOG_ERROR		830796	1					
ANR	831963	Identifier	AV_LOG_ERROR		830796	0					
ANR	831964	Argument	"""Specified channel_layout is not supported\\n"""		830796	2					
ANR	831965	PrimaryExpression	"""Specified channel_layout is not supported\\n"""		830796	0					
ANR	831966	ExpressionStatement	ret = AVERROR ( EINVAL )	361:20:7414:7435	830796	1	True				
ANR	831967	AssignmentExpression	ret = AVERROR ( EINVAL )		830796	0		=			
ANR	831968	Identifier	ret		830796	0					
ANR	831969	CallExpression	AVERROR ( EINVAL )		830796	1					
ANR	831970	Callee	AVERROR		830796	0					
ANR	831971	Identifier	AVERROR		830796	0					
ANR	831972	ArgumentList	EINVAL		830796	1					
ANR	831973	Argument	EINVAL		830796	0					
ANR	831974	Identifier	EINVAL		830796	0					
ANR	831975	GotoStatement	goto free_and_end ;	363:20:7458:7475	830796	2	True				
ANR	831976	Identifier	free_and_end		830796	0					
ANR	831977	IfStatement	if ( avctx -> channel_layout && avctx -> channels )		830796	5					
ANR	831978	Condition	avctx -> channel_layout && avctx -> channels	371:12:7535:7574	830796	0	True				
ANR	831979	AndExpression	avctx -> channel_layout && avctx -> channels		830796	0		&&			
ANR	831980	PtrMemberAccess	avctx -> channel_layout		830796	0					
ANR	831981	Identifier	avctx		830796	0					
ANR	831982	Identifier	channel_layout		830796	1					
ANR	831983	PtrMemberAccess	avctx -> channels		830796	1					
ANR	831984	Identifier	avctx		830796	0					
ANR	831985	Identifier	channels		830796	1					
ANR	831986	CompoundStatement		369:54:7474:7474	830796	1					
ANR	831987	IfStatement	if ( av_get_channel_layout_nb_channels ( avctx -> channel_layout ) != avctx -> channels )		830796	0					
ANR	831988	Condition	av_get_channel_layout_nb_channels ( avctx -> channel_layout ) != avctx -> channels	373:16:7596:7670	830796	0	True				
ANR	831989	EqualityExpression	av_get_channel_layout_nb_channels ( avctx -> channel_layout ) != avctx -> channels		830796	0		!=			
ANR	831990	CallExpression	av_get_channel_layout_nb_channels ( avctx -> channel_layout )		830796	0					
ANR	831991	Callee	av_get_channel_layout_nb_channels		830796	0					
ANR	831992	Identifier	av_get_channel_layout_nb_channels		830796	0					
ANR	831993	ArgumentList	avctx -> channel_layout		830796	1					
ANR	831994	Argument	avctx -> channel_layout		830796	0					
ANR	831995	PtrMemberAccess	avctx -> channel_layout		830796	0					
ANR	831996	Identifier	avctx		830796	0					
ANR	831997	Identifier	channel_layout		830796	1					
ANR	831998	PtrMemberAccess	avctx -> channels		830796	1					
ANR	831999	Identifier	avctx		830796	0					
ANR	832000	Identifier	channels		830796	1					
ANR	832001	CompoundStatement		371:93:7570:7570	830796	1					
ANR	832002	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""channel layout does not match number of channels\\n"" )"	375:16:7692:7773	830796	0	True				
ANR	832003	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""channel layout does not match number of channels\\n"" )"		830796	0					
ANR	832004	Callee	av_log		830796	0					
ANR	832005	Identifier	av_log		830796	0					
ANR	832006	ArgumentList	avctx		830796	1					
ANR	832007	Argument	avctx		830796	0					
ANR	832008	Identifier	avctx		830796	0					
ANR	832009	Argument	AV_LOG_ERROR		830796	1					
ANR	832010	Identifier	AV_LOG_ERROR		830796	0					
ANR	832011	Argument	"""channel layout does not match number of channels\\n"""		830796	2					
ANR	832012	PrimaryExpression	"""channel layout does not match number of channels\\n"""		830796	0					
ANR	832013	ExpressionStatement	ret = AVERROR ( EINVAL )	377:16:7792:7813	830796	1	True				
ANR	832014	AssignmentExpression	ret = AVERROR ( EINVAL )		830796	0		=			
ANR	832015	Identifier	ret		830796	0					
ANR	832016	CallExpression	AVERROR ( EINVAL )		830796	1					
ANR	832017	Callee	AVERROR		830796	0					
ANR	832018	Identifier	AVERROR		830796	0					
ANR	832019	ArgumentList	EINVAL		830796	1					
ANR	832020	Argument	EINVAL		830796	0					
ANR	832021	Identifier	EINVAL		830796	0					
ANR	832022	GotoStatement	goto free_and_end ;	379:16:7832:7849	830796	2	True				
ANR	832023	Identifier	free_and_end		830796	0					
ANR	832024	ElseStatement	else		830796	0					
ANR	832025	IfStatement	if ( avctx -> channel_layout )		830796	0					
ANR	832026	Condition	avctx -> channel_layout	383:19:7886:7906	830796	0	True				
ANR	832027	PtrMemberAccess	avctx -> channel_layout		830796	0					
ANR	832028	Identifier	avctx		830796	0					
ANR	832029	Identifier	channel_layout		830796	1					
ANR	832030	CompoundStatement		381:42:7806:7806	830796	1					
ANR	832031	ExpressionStatement	avctx -> channels = av_get_channel_layout_nb_channels ( avctx -> channel_layout )	385:12:7924:7998	830796	0	True				
ANR	832032	AssignmentExpression	avctx -> channels = av_get_channel_layout_nb_channels ( avctx -> channel_layout )		830796	0		=			
ANR	832033	PtrMemberAccess	avctx -> channels		830796	0					
ANR	832034	Identifier	avctx		830796	0					
ANR	832035	Identifier	channels		830796	1					
ANR	832036	CallExpression	av_get_channel_layout_nb_channels ( avctx -> channel_layout )		830796	1					
ANR	832037	Callee	av_get_channel_layout_nb_channels		830796	0					
ANR	832038	Identifier	av_get_channel_layout_nb_channels		830796	0					
ANR	832039	ArgumentList	avctx -> channel_layout		830796	1					
ANR	832040	Argument	avctx -> channel_layout		830796	0					
ANR	832041	PtrMemberAccess	avctx -> channel_layout		830796	0					
ANR	832042	Identifier	avctx		830796	0					
ANR	832043	Identifier	channel_layout		830796	1					
ANR	832044	ExpressionStatement	avctx -> pts_correction_num_faulty_pts = avctx -> pts_correction_num_faulty_dts = 0	393:4:8025:8109	830796	33	True				
ANR	832045	AssignmentExpression	avctx -> pts_correction_num_faulty_pts = avctx -> pts_correction_num_faulty_dts = 0		830796	0		=			
ANR	832046	PtrMemberAccess	avctx -> pts_correction_num_faulty_pts		830796	0					
ANR	832047	Identifier	avctx		830796	0					
ANR	832048	Identifier	pts_correction_num_faulty_pts		830796	1					
ANR	832049	AssignmentExpression	avctx -> pts_correction_num_faulty_dts = 0		830796	1		=			
ANR	832050	PtrMemberAccess	avctx -> pts_correction_num_faulty_dts		830796	0					
ANR	832051	Identifier	avctx		830796	0					
ANR	832052	Identifier	pts_correction_num_faulty_dts		830796	1					
ANR	832053	PrimaryExpression	0		830796	1					
ANR	832054	ExpressionStatement	avctx -> pts_correction_last_pts = avctx -> pts_correction_last_dts = INT64_MIN	397:4:8116:8196	830796	34	True				
ANR	832055	AssignmentExpression	avctx -> pts_correction_last_pts = avctx -> pts_correction_last_dts = INT64_MIN		830796	0		=			
ANR	832056	PtrMemberAccess	avctx -> pts_correction_last_pts		830796	0					
ANR	832057	Identifier	avctx		830796	0					
ANR	832058	Identifier	pts_correction_last_pts		830796	1					
ANR	832059	AssignmentExpression	avctx -> pts_correction_last_dts = INT64_MIN		830796	1		=			
ANR	832060	PtrMemberAccess	avctx -> pts_correction_last_dts		830796	0					
ANR	832061	Identifier	avctx		830796	0					
ANR	832062	Identifier	pts_correction_last_dts		830796	1					
ANR	832063	Identifier	INT64_MIN		830796	1					
ANR	832064	IfStatement	if ( avctx -> codec -> init && ! ( avctx -> active_thread_type & FF_THREAD_FRAME ) )		830796	35					
ANR	832065	Condition	avctx -> codec -> init && ! ( avctx -> active_thread_type & FF_THREAD_FRAME )	403:7:8208:8273	830796	0	True				
ANR	832066	AndExpression	avctx -> codec -> init && ! ( avctx -> active_thread_type & FF_THREAD_FRAME )		830796	0		&&			
ANR	832067	PtrMemberAccess	avctx -> codec -> init		830796	0					
ANR	832068	PtrMemberAccess	avctx -> codec		830796	0					
ANR	832069	Identifier	avctx		830796	0					
ANR	832070	Identifier	codec		830796	1					
ANR	832071	Identifier	init		830796	1					
ANR	832072	UnaryOperationExpression	! ( avctx -> active_thread_type & FF_THREAD_FRAME )		830796	1					
ANR	832073	UnaryOperator	!		830796	0					
ANR	832074	BitAndExpression	avctx -> active_thread_type & FF_THREAD_FRAME		830796	1		&			
ANR	832075	PtrMemberAccess	avctx -> active_thread_type		830796	0					
ANR	832076	Identifier	avctx		830796	0					
ANR	832077	Identifier	active_thread_type		830796	1					
ANR	832078	Identifier	FF_THREAD_FRAME		830796	1					
ANR	832079	CompoundStatement		401:74:8172:8172	830796	1					
ANR	832080	ExpressionStatement	ret = avctx -> codec -> init ( avctx )	405:8:8286:8317	830796	0	True				
ANR	832081	AssignmentExpression	ret = avctx -> codec -> init ( avctx )		830796	0		=			
ANR	832082	Identifier	ret		830796	0					
ANR	832083	CallExpression	avctx -> codec -> init ( avctx )		830796	1					
ANR	832084	Callee	avctx -> codec -> init		830796	0					
ANR	832085	PtrMemberAccess	avctx -> codec -> init		830796	0					
ANR	832086	PtrMemberAccess	avctx -> codec		830796	0					
ANR	832087	Identifier	avctx		830796	0					
ANR	832088	Identifier	codec		830796	1					
ANR	832089	Identifier	init		830796	1					
ANR	832090	ArgumentList	avctx		830796	1					
ANR	832091	Argument	avctx		830796	0					
ANR	832092	Identifier	avctx		830796	0					
ANR	832093	IfStatement	if ( ret < 0 )		830796	1					
ANR	832094	Condition	ret < 0	407:12:8332:8338	830796	0	True				
ANR	832095	RelationalExpression	ret < 0		830796	0		<			
ANR	832096	Identifier	ret		830796	0					
ANR	832097	PrimaryExpression	0		830796	1					
ANR	832098	CompoundStatement		405:21:8238:8238	830796	1					
ANR	832099	GotoStatement	goto free_and_end ;	409:12:8356:8373	830796	0	True				
ANR	832100	Identifier	free_and_end		830796	0					
ANR	832101	ExpressionStatement	ret = 0	417:4:8400:8405	830796	36	True				
ANR	832102	AssignmentExpression	ret = 0		830796	0		=			
ANR	832103	Identifier	ret		830796	0					
ANR	832104	PrimaryExpression	0		830796	1					
ANR	832105	IfStatement	if ( av_codec_is_decoder ( avctx -> codec ) )		830796	37					
ANR	832106	Condition	av_codec_is_decoder ( avctx -> codec )	421:8:8418:8450	830796	0	True				
ANR	832107	CallExpression	av_codec_is_decoder ( avctx -> codec )		830796	0					
ANR	832108	Callee	av_codec_is_decoder		830796	0					
ANR	832109	Identifier	av_codec_is_decoder		830796	0					
ANR	832110	ArgumentList	avctx -> codec		830796	1					
ANR	832111	Argument	avctx -> codec		830796	0					
ANR	832112	PtrMemberAccess	avctx -> codec		830796	0					
ANR	832113	Identifier	avctx		830796	0					
ANR	832114	Identifier	codec		830796	1					
ANR	832115	CompoundStatement		419:43:8350:8350	830796	1					
ANR	832116	IfStatement	if ( ! avctx -> bit_rate )		830796	0					
ANR	832117	Condition	! avctx -> bit_rate	423:12:8468:8483	830796	0	True				
ANR	832118	UnaryOperationExpression	! avctx -> bit_rate		830796	0					
ANR	832119	UnaryOperator	!		830796	0					
ANR	832120	PtrMemberAccess	avctx -> bit_rate		830796	1					
ANR	832121	Identifier	avctx		830796	0					
ANR	832122	Identifier	bit_rate		830796	1					
ANR	832123	ExpressionStatement	avctx -> bit_rate = get_bit_rate ( avctx )	425:12:8499:8536	830796	1	True				
ANR	832124	AssignmentExpression	avctx -> bit_rate = get_bit_rate ( avctx )		830796	0		=			
ANR	832125	PtrMemberAccess	avctx -> bit_rate		830796	0					
ANR	832126	Identifier	avctx		830796	0					
ANR	832127	Identifier	bit_rate		830796	1					
ANR	832128	CallExpression	get_bit_rate ( avctx )		830796	1					
ANR	832129	Callee	get_bit_rate		830796	0					
ANR	832130	Identifier	get_bit_rate		830796	0					
ANR	832131	ArgumentList	avctx		830796	1					
ANR	832132	Argument	avctx		830796	0					
ANR	832133	Identifier	avctx		830796	0					
ANR	832134	IfStatement	if ( avctx -> channel_layout && av_get_channel_layout_nb_channels ( avctx -> channel_layout ) != avctx -> channels )		830796	1					
ANR	832135	Condition	avctx -> channel_layout && av_get_channel_layout_nb_channels ( avctx -> channel_layout ) != avctx -> channels	429:12:8607:8719	830796	0	True				
ANR	832136	AndExpression	avctx -> channel_layout && av_get_channel_layout_nb_channels ( avctx -> channel_layout ) != avctx -> channels		830796	0		&&			
ANR	832137	PtrMemberAccess	avctx -> channel_layout		830796	0					
ANR	832138	Identifier	avctx		830796	0					
ANR	832139	Identifier	channel_layout		830796	1					
ANR	832140	EqualityExpression	av_get_channel_layout_nb_channels ( avctx -> channel_layout ) != avctx -> channels		830796	1		!=			
ANR	832141	CallExpression	av_get_channel_layout_nb_channels ( avctx -> channel_layout )		830796	0					
ANR	832142	Callee	av_get_channel_layout_nb_channels		830796	0					
ANR	832143	Identifier	av_get_channel_layout_nb_channels		830796	0					
ANR	832144	ArgumentList	avctx -> channel_layout		830796	1					
ANR	832145	Argument	avctx -> channel_layout		830796	0					
ANR	832146	PtrMemberAccess	avctx -> channel_layout		830796	0					
ANR	832147	Identifier	avctx		830796	0					
ANR	832148	Identifier	channel_layout		830796	1					
ANR	832149	PtrMemberAccess	avctx -> channels		830796	1					
ANR	832150	Identifier	avctx		830796	0					
ANR	832151	Identifier	channels		830796	1					
ANR	832152	CompoundStatement		429:89:8619:8619	830796	1					
ANR	832153	ExpressionStatement	"av_log ( avctx , AV_LOG_WARNING , ""channel layout does not match number of channels\\n"" )"	433:12:8737:8820	830796	0	True				
ANR	832154	CallExpression	"av_log ( avctx , AV_LOG_WARNING , ""channel layout does not match number of channels\\n"" )"		830796	0					
ANR	832155	Callee	av_log		830796	0					
ANR	832156	Identifier	av_log		830796	0					
ANR	832157	ArgumentList	avctx		830796	1					
ANR	832158	Argument	avctx		830796	0					
ANR	832159	Identifier	avctx		830796	0					
ANR	832160	Argument	AV_LOG_WARNING		830796	1					
ANR	832161	Identifier	AV_LOG_WARNING		830796	0					
ANR	832162	Argument	"""channel layout does not match number of channels\\n"""		830796	2					
ANR	832163	PrimaryExpression	"""channel layout does not match number of channels\\n"""		830796	0					
ANR	832164	ExpressionStatement	avctx -> channel_layout = 0	435:12:8835:8860	830796	1	True				
ANR	832165	AssignmentExpression	avctx -> channel_layout = 0		830796	0		=			
ANR	832166	PtrMemberAccess	avctx -> channel_layout		830796	0					
ANR	832167	Identifier	avctx		830796	0					
ANR	832168	Identifier	channel_layout		830796	1					
ANR	832169	PrimaryExpression	0		830796	1					
ANR	832170	Label	end :	441:0:8881:8884	830796	38	True				
ANR	832171	Identifier	end		830796	0					
ANR	832172	ExpressionStatement	entangled_thread_counter --	443:4:8891:8917	830796	39	True				
ANR	832173	PostIncDecOperationExpression	entangled_thread_counter --		830796	0					
ANR	832174	Identifier	entangled_thread_counter		830796	0					
ANR	832175	IncDec	--		830796	1					
ANR	832176	IfStatement	if ( ff_lockmgr_cb )		830796	40					
ANR	832177	Condition	ff_lockmgr_cb	449:8:8974:8986	830796	0	True				
ANR	832178	Identifier	ff_lockmgr_cb		830796	0					
ANR	832179	CompoundStatement		447:23:8886:8886	830796	1					
ANR	832180	ExpressionStatement	"( * ff_lockmgr_cb ) ( & codec_mutex , AV_LOCK_RELEASE )"	451:8:9000:9047	830796	0	True				
ANR	832181	CallExpression	"( * ff_lockmgr_cb ) ( & codec_mutex , AV_LOCK_RELEASE )"		830796	0					
ANR	832182	Callee	* ff_lockmgr_cb		830796	0					
ANR	832183	UnaryOperationExpression	* ff_lockmgr_cb		830796	0					
ANR	832184	UnaryOperator	*		830796	0					
ANR	832185	Identifier	ff_lockmgr_cb		830796	1					
ANR	832186	ArgumentList	& codec_mutex		830796	1					
ANR	832187	Argument	& codec_mutex		830796	0					
ANR	832188	UnaryOperationExpression	& codec_mutex		830796	0					
ANR	832189	UnaryOperator	&		830796	0					
ANR	832190	Identifier	codec_mutex		830796	1					
ANR	832191	Argument	AV_LOCK_RELEASE		830796	1					
ANR	832192	Identifier	AV_LOCK_RELEASE		830796	0					
ANR	832193	IfStatement	if ( options )		830796	41					
ANR	832194	Condition	options	455:8:9065:9071	830796	0	True				
ANR	832195	Identifier	options		830796	0					
ANR	832196	CompoundStatement		453:17:8971:8971	830796	1					
ANR	832197	ExpressionStatement	av_dict_free ( options )	457:8:9085:9106	830796	0	True				
ANR	832198	CallExpression	av_dict_free ( options )		830796	0					
ANR	832199	Callee	av_dict_free		830796	0					
ANR	832200	Identifier	av_dict_free		830796	0					
ANR	832201	ArgumentList	options		830796	1					
ANR	832202	Argument	options		830796	0					
ANR	832203	Identifier	options		830796	0					
ANR	832204	ExpressionStatement	* options = tmp	459:8:9117:9131	830796	1	True				
ANR	832205	AssignmentExpression	* options = tmp		830796	0		=			
ANR	832206	UnaryOperationExpression	* options		830796	0					
ANR	832207	UnaryOperator	*		830796	0					
ANR	832208	Identifier	options		830796	1					
ANR	832209	Identifier	tmp		830796	1					
ANR	832210	ReturnStatement	return ret ;	465:4:9147:9157	830796	42	True				
ANR	832211	Identifier	ret		830796	0					
ANR	832212	Label	free_and_end :	467:0:9160:9172	830796	43	True				
ANR	832213	Identifier	free_and_end		830796	0					
ANR	832214	ExpressionStatement	av_dict_free ( & tmp )	469:4:9179:9197	830796	44	True				
ANR	832215	CallExpression	av_dict_free ( & tmp )		830796	0					
ANR	832216	Callee	av_dict_free		830796	0					
ANR	832217	Identifier	av_dict_free		830796	0					
ANR	832218	ArgumentList	& tmp		830796	1					
ANR	832219	Argument	& tmp		830796	0					
ANR	832220	UnaryOperationExpression	& tmp		830796	0					
ANR	832221	UnaryOperator	&		830796	0					
ANR	832222	Identifier	tmp		830796	1					
ANR	832223	ExpressionStatement	av_freep ( & avctx -> priv_data )	471:4:9204:9231	830796	45	True				
ANR	832224	CallExpression	av_freep ( & avctx -> priv_data )		830796	0					
ANR	832225	Callee	av_freep		830796	0					
ANR	832226	Identifier	av_freep		830796	0					
ANR	832227	ArgumentList	& avctx -> priv_data		830796	1					
ANR	832228	Argument	& avctx -> priv_data		830796	0					
ANR	832229	UnaryOperationExpression	& avctx -> priv_data		830796	0					
ANR	832230	UnaryOperator	&		830796	0					
ANR	832231	PtrMemberAccess	avctx -> priv_data		830796	1					
ANR	832232	Identifier	avctx		830796	0					
ANR	832233	Identifier	priv_data		830796	1					
ANR	832234	ExpressionStatement	av_freep ( & avctx -> internal )	473:4:9238:9264	830796	46	True				
ANR	832235	CallExpression	av_freep ( & avctx -> internal )		830796	0					
ANR	832236	Callee	av_freep		830796	0					
ANR	832237	Identifier	av_freep		830796	0					
ANR	832238	ArgumentList	& avctx -> internal		830796	1					
ANR	832239	Argument	& avctx -> internal		830796	0					
ANR	832240	UnaryOperationExpression	& avctx -> internal		830796	0					
ANR	832241	UnaryOperator	&		830796	0					
ANR	832242	PtrMemberAccess	avctx -> internal		830796	1					
ANR	832243	Identifier	avctx		830796	0					
ANR	832244	Identifier	internal		830796	1					
ANR	832245	ExpressionStatement	avctx -> codec = NULL	475:4:9271:9289	830796	47	True				
ANR	832246	AssignmentExpression	avctx -> codec = NULL		830796	0		=			
ANR	832247	PtrMemberAccess	avctx -> codec		830796	0					
ANR	832248	Identifier	avctx		830796	0					
ANR	832249	Identifier	codec		830796	1					
ANR	832250	Identifier	NULL		830796	1					
ANR	832251	GotoStatement	goto end ;	477:4:9296:9304	830796	48	True				
ANR	832252	Identifier	end		830796	0					
ANR	832253	ReturnType	int attribute_align_arg		830796	1					
ANR	832254	Identifier	avcodec_open2		830796	2					
ANR	832255	ParameterList	"AVCodecContext * avctx , AVCodec * codec , AVDictionary * * options"		830796	3					
ANR	832256	Parameter	AVCodecContext * avctx	1:38:38:58	830796	0	True				
ANR	832257	ParameterType	AVCodecContext *		830796	0					
ANR	832258	Identifier	avctx		830796	1					
ANR	832259	Parameter	AVCodec * codec	1:61:61:74	830796	1	True				
ANR	832260	ParameterType	AVCodec *		830796	0					
ANR	832261	Identifier	codec		830796	1					
ANR	832262	Parameter	AVDictionary * * options	1:77:77:98	830796	2	True				
ANR	832263	ParameterType	AVDictionary * *		830796	0					
ANR	832264	Identifier	options		830796	1					
ANR	832265	CFGEntryNode	ENTRY		830796		True				
ANR	832266	CFGExitNode	EXIT		830796		True				
ANR	832267	Symbol	ENOMEM		830796						
ANR	832268	Symbol	* avctx -> priv_data		830796						
ANR	832269	Symbol	CODEC_ID_LJPEG		830796						
ANR	832270	Symbol	ff_lockmgr_cb		830796						
ANR	832271	Symbol	entangled_thread_counter		830796						
ANR	832272	Symbol	avctx -> active_thread_type		830796						
ANR	832273	Symbol	* avctx -> codec -> channel_layouts		830796						
ANR	832274	Symbol	avctx -> codec -> supported_samplerates		830796						
ANR	832275	Symbol	& avctx -> priv_data		830796						
ANR	832276	Symbol	tmp		830796						
ANR	832277	Symbol	options		830796						
ANR	832278	Symbol	INT64_MIN		830796						
ANR	832279	Symbol	& avctx -> subtitle_header		830796						
ANR	832280	Symbol	avctx -> codec -> channel_layouts		830796						
ANR	832281	Symbol	avctx -> coded_width		830796						
ANR	832282	Symbol	avctx -> codec -> max_lowres		830796						
ANR	832283	Symbol	avctx -> sample_fmt		830796						
ANR	832284	Symbol	avctx -> codec		830796						
ANR	832285	Symbol	& avctx -> internal		830796						
ANR	832286	Symbol	av_mallocz		830796						
ANR	832287	Symbol	* * avctx		830796						
ANR	832288	Symbol	avctx -> coded_height		830796						
ANR	832289	Symbol	av_get_channel_layout_nb_channels		830796						
ANR	832290	Symbol	avctx -> bit_rate		830796						
ANR	832291	Symbol	codec -> priv_class		830796						
ANR	832292	Symbol	& tmp		830796						
ANR	832293	Symbol	avctx -> pix_fmt		830796						
ANR	832294	Symbol	* avctx -> codec -> sample_fmts		830796						
ANR	832295	Symbol	avctx -> codec_id		830796						
ANR	832296	Symbol	avctx -> width		830796						
ANR	832297	Symbol	AVMEDIA_TYPE_ATTACHMENT		830796						
ANR	832298	Symbol	* options		830796						
ANR	832299	Symbol	* ff_lockmgr_cb		830796						
ANR	832300	Symbol	avctx -> time_base		830796						
ANR	832301	Symbol	AV_LOCK_RELEASE		830796						
ANR	832302	Symbol	CODEC_CAP_EXPERIMENTAL		830796						
ANR	832303	Symbol	avctx -> time_base . den		830796						
ANR	832304	Symbol	avctx -> frame_number		830796						
ANR	832305	Symbol	avctx		830796						
ANR	832306	Symbol	av_opt_set_dict		830796						
ANR	832307	Symbol	avctx -> pts_correction_num_faulty_dts		830796						
ANR	832308	Symbol	AV_LOG_ERROR		830796						
ANR	832309	Symbol	AVMEDIA_TYPE_UNKNOWN		830796						
ANR	832310	Symbol	av_codec_is_decoder		830796						
ANR	832311	Symbol	i		830796						
ANR	832312	Symbol	avctx -> channel_layout		830796						
ANR	832313	Symbol	avctx -> thread_count		830796						
ANR	832314	Symbol	codec -> priv_data_size		830796						
ANR	832315	Symbol	avctx -> sample_rate		830796						
ANR	832316	Symbol	PIX_FMT_NONE		830796						
ANR	832317	Symbol	EINVAL		830796						
ANR	832318	Symbol	HAVE_THREADS		830796						
ANR	832319	Symbol	codec -> id		830796						
ANR	832320	Symbol	avctx -> pts_correction_num_faulty_pts		830796						
ANR	832321	Symbol	AV_LOG_WARNING		830796						
ANR	832322	Symbol	av_codec_is_encoder		830796						
ANR	832323	Symbol	* avctx -> codec -> supported_samplerates		830796						
ANR	832324	Symbol	avctx -> pts_correction_last_dts		830796						
ANR	832325	Symbol	avcodec_is_open		830796						
ANR	832326	Symbol	AVMEDIA_TYPE_AUDIO		830796						
ANR	832327	Symbol	CODEC_CAP_AUTO_THREADS		830796						
ANR	832328	Symbol	AV_SAMPLE_FMT_NONE		830796						
ANR	832329	Symbol	avctx -> channels		830796						
ANR	832330	Symbol	AV_LOCK_OBTAIN		830796						
ANR	832331	Symbol	* avctx -> codec		830796						
ANR	832332	Symbol	avctx -> codec -> init		830796						
ANR	832333	Symbol	avctx -> pts_correction_last_pts		830796						
ANR	832334	Symbol	SANE_NB_CHANNELS		830796						
ANR	832335	Symbol	ret		830796						
ANR	832336	Symbol	NULL		830796						
ANR	832337	Symbol	CODEC_ID_NONE		830796						
ANR	832338	Symbol	* codec		830796						
ANR	832339	Symbol	avctx -> codec -> pix_fmts		830796						
ANR	832340	Symbol	FF_COMPLIANCE_EXPERIMENTAL		830796						
ANR	832341	Symbol	avctx -> lowres		830796						
ANR	832342	Symbol	avctx -> strict_std_compliance		830796						
ANR	832343	Symbol	CODEC_ID_H264		830796						
ANR	832344	Symbol	codec		830796						
ANR	832345	Symbol	* avctx		830796						
ANR	832346	Symbol	ff_thread_init		830796						
ANR	832347	Symbol	* * avctx -> codec		830796						
ANR	832348	Symbol	* ( const AVClass * * ) avctx -> priv_data		830796						
ANR	832349	Symbol	FF_THREAD_FRAME		830796						
ANR	832350	Symbol	& codec_mutex		830796						
ANR	832351	Symbol	avctx -> codec_type		830796						
ANR	832352	Symbol	avctx -> codec -> sample_fmts		830796						
ANR	832353	Symbol	* avctx -> codec -> pix_fmts		830796						
ANR	832354	Symbol	avctx -> height		830796						
ANR	832355	Symbol	avctx -> time_base . num		830796						
ANR	832356	Symbol	avctx -> thread_opaque		830796						
ANR	832357	Symbol	FF_MAX_EXTRADATA_SIZE		830796						
ANR	832358	Symbol	codec -> capabilities		830796						
ANR	832359	Symbol	av_image_check_size		830796						
ANR	832360	Symbol	FF_COMPLIANCE_UNOFFICIAL		830796						
ANR	832361	Symbol	avctx -> internal		830796						
ANR	832362	Symbol	codec -> type		830796						
ANR	832363	Symbol	avctx -> extradata_size		830796						
ANR	832364	Symbol	avctx -> priv_data		830796						
ANR	832365	Symbol	* * * avctx		830796						
ANR	832366	Symbol	* i		830796						
ANR	832367	Symbol	AVERROR		830796						
ANR	832368	Symbol	CODEC_ID_MJPEG		830796						
ANR	832369	Symbol	get_bit_rate		830796						
