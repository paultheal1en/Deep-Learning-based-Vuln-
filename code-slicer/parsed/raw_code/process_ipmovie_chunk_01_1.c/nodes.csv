command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6723592	File	/home/p4ultr4n/workplace/ReVeal/raw_code/process_ipmovie_chunk_01_1.c								
ANR	6723593	Function	process_ipmovie_chunk	1:0:0:10843							
ANR	6723594	FunctionDef	"process_ipmovie_chunk (IPMVEContext * s , AVIOContext * pb , AVPacket * pkt)"		6723593	0					
ANR	6723595	CompoundStatement		5:0:88:10843	6723593	0					
ANR	6723596	IdentifierDeclStatement	unsigned char chunk_preamble [ CHUNK_PREAMBLE_SIZE ] ;	7:4:95:144	6723593	0	True				
ANR	6723597	IdentifierDecl	chunk_preamble [ CHUNK_PREAMBLE_SIZE ]		6723593	0					
ANR	6723598	IdentifierDeclType	unsigned char [ CHUNK_PREAMBLE_SIZE ]		6723593	0					
ANR	6723599	Identifier	chunk_preamble		6723593	1					
ANR	6723600	Identifier	CHUNK_PREAMBLE_SIZE		6723593	2					
ANR	6723601	IdentifierDeclStatement	int chunk_type ;	9:4:151:165	6723593	1	True				
ANR	6723602	IdentifierDecl	chunk_type		6723593	0					
ANR	6723603	IdentifierDeclType	int		6723593	0					
ANR	6723604	Identifier	chunk_type		6723593	1					
ANR	6723605	IdentifierDeclStatement	int chunk_size ;	11:4:172:186	6723593	2	True				
ANR	6723606	IdentifierDecl	chunk_size		6723593	0					
ANR	6723607	IdentifierDeclType	int		6723593	0					
ANR	6723608	Identifier	chunk_size		6723593	1					
ANR	6723609	IdentifierDeclStatement	unsigned char opcode_preamble [ OPCODE_PREAMBLE_SIZE ] ;	13:4:193:244	6723593	3	True				
ANR	6723610	IdentifierDecl	opcode_preamble [ OPCODE_PREAMBLE_SIZE ]		6723593	0					
ANR	6723611	IdentifierDeclType	unsigned char [ OPCODE_PREAMBLE_SIZE ]		6723593	0					
ANR	6723612	Identifier	opcode_preamble		6723593	1					
ANR	6723613	Identifier	OPCODE_PREAMBLE_SIZE		6723593	2					
ANR	6723614	IdentifierDeclStatement	unsigned char opcode_type ;	15:4:251:276	6723593	4	True				
ANR	6723615	IdentifierDecl	opcode_type		6723593	0					
ANR	6723616	IdentifierDeclType	unsigned char		6723593	0					
ANR	6723617	Identifier	opcode_type		6723593	1					
ANR	6723618	IdentifierDeclStatement	unsigned char opcode_version ;	17:4:283:311	6723593	5	True				
ANR	6723619	IdentifierDecl	opcode_version		6723593	0					
ANR	6723620	IdentifierDeclType	unsigned char		6723593	0					
ANR	6723621	Identifier	opcode_version		6723593	1					
ANR	6723622	IdentifierDeclStatement	int opcode_size ;	19:4:318:333	6723593	6	True				
ANR	6723623	IdentifierDecl	opcode_size		6723593	0					
ANR	6723624	IdentifierDeclType	int		6723593	0					
ANR	6723625	Identifier	opcode_size		6723593	1					
ANR	6723626	IdentifierDeclStatement	unsigned char scratch [ 1024 ] ;	21:4:340:367	6723593	7	True				
ANR	6723627	IdentifierDecl	scratch [ 1024 ]		6723593	0					
ANR	6723628	IdentifierDeclType	unsigned char [ 1024 ]		6723593	0					
ANR	6723629	Identifier	scratch		6723593	1					
ANR	6723630	PrimaryExpression	1024		6723593	2					
ANR	6723631	IdentifierDeclStatement	"int i , j ;"	23:4:374:382	6723593	8	True				
ANR	6723632	IdentifierDecl	i		6723593	0					
ANR	6723633	IdentifierDeclType	int		6723593	0					
ANR	6723634	Identifier	i		6723593	1					
ANR	6723635	IdentifierDecl	j		6723593	1					
ANR	6723636	IdentifierDeclType	int		6723593	0					
ANR	6723637	Identifier	j		6723593	1					
ANR	6723638	IdentifierDeclStatement	"int first_color , last_color ;"	25:4:389:416	6723593	9	True				
ANR	6723639	IdentifierDecl	first_color		6723593	0					
ANR	6723640	IdentifierDeclType	int		6723593	0					
ANR	6723641	Identifier	first_color		6723593	1					
ANR	6723642	IdentifierDecl	last_color		6723593	1					
ANR	6723643	IdentifierDeclType	int		6723593	0					
ANR	6723644	Identifier	last_color		6723593	1					
ANR	6723645	IdentifierDeclStatement	int audio_flags ;	27:4:423:438	6723593	10	True				
ANR	6723646	IdentifierDecl	audio_flags		6723593	0					
ANR	6723647	IdentifierDeclType	int		6723593	0					
ANR	6723648	Identifier	audio_flags		6723593	1					
ANR	6723649	IdentifierDeclStatement	"unsigned char r , g , b ;"	29:4:445:466	6723593	11	True				
ANR	6723650	IdentifierDecl	r		6723593	0					
ANR	6723651	IdentifierDeclType	unsigned char		6723593	0					
ANR	6723652	Identifier	r		6723593	1					
ANR	6723653	IdentifierDecl	g		6723593	1					
ANR	6723654	IdentifierDeclType	unsigned char		6723593	0					
ANR	6723655	Identifier	g		6723593	1					
ANR	6723656	IdentifierDecl	b		6723593	2					
ANR	6723657	IdentifierDeclType	unsigned char		6723593	0					
ANR	6723658	Identifier	b		6723593	1					
ANR	6723659	IdentifierDeclStatement	"unsigned int width , height ;"	31:4:473:499	6723593	12	True				
ANR	6723660	IdentifierDecl	width		6723593	0					
ANR	6723661	IdentifierDeclType	unsigned int		6723593	0					
ANR	6723662	Identifier	width		6723593	1					
ANR	6723663	IdentifierDecl	height		6723593	1					
ANR	6723664	IdentifierDeclType	unsigned int		6723593	0					
ANR	6723665	Identifier	height		6723593	1					
ANR	6723666	ExpressionStatement	"chunk_type = load_ipmovie_packet ( s , pb , pkt )"	37:4:556:600	6723593	13	True				
ANR	6723667	AssignmentExpression	"chunk_type = load_ipmovie_packet ( s , pb , pkt )"		6723593	0		=			
ANR	6723668	Identifier	chunk_type		6723593	0					
ANR	6723669	CallExpression	"load_ipmovie_packet ( s , pb , pkt )"		6723593	1					
ANR	6723670	Callee	load_ipmovie_packet		6723593	0					
ANR	6723671	Identifier	load_ipmovie_packet		6723593	0					
ANR	6723672	ArgumentList	s		6723593	1					
ANR	6723673	Argument	s		6723593	0					
ANR	6723674	Identifier	s		6723593	0					
ANR	6723675	Argument	pb		6723593	1					
ANR	6723676	Identifier	pb		6723593	0					
ANR	6723677	Argument	pkt		6723593	2					
ANR	6723678	Identifier	pkt		6723593	0					
ANR	6723679	IfStatement	if ( chunk_type != CHUNK_DONE )		6723593	14					
ANR	6723680	Condition	chunk_type != CHUNK_DONE	39:8:611:634	6723593	0	True				
ANR	6723681	EqualityExpression	chunk_type != CHUNK_DONE		6723593	0		!=			
ANR	6723682	Identifier	chunk_type		6723593	0					
ANR	6723683	Identifier	CHUNK_DONE		6723593	1					
ANR	6723684	ReturnStatement	return chunk_type ;	41:8:646:663	6723593	1	True				
ANR	6723685	Identifier	chunk_type		6723593	0					
ANR	6723686	IfStatement	if ( url_feof ( pb ) )		6723593	15					
ANR	6723687	Condition	url_feof ( pb )	47:8:749:760	6723593	0	True				
ANR	6723688	CallExpression	url_feof ( pb )		6723593	0					
ANR	6723689	Callee	url_feof		6723593	0					
ANR	6723690	Identifier	url_feof		6723593	0					
ANR	6723691	ArgumentList	pb		6723593	1					
ANR	6723692	Argument	pb		6723593	0					
ANR	6723693	Identifier	pb		6723593	0					
ANR	6723694	ReturnStatement	return CHUNK_EOF ;	49:8:772:788	6723593	1	True				
ANR	6723695	Identifier	CHUNK_EOF		6723593	0					
ANR	6723696	IfStatement	"if ( avio_read ( pb , chunk_preamble , CHUNK_PREAMBLE_SIZE ) != CHUNK_PREAMBLE_SIZE )"		6723593	16					
ANR	6723697	Condition	"avio_read ( pb , chunk_preamble , CHUNK_PREAMBLE_SIZE ) != CHUNK_PREAMBLE_SIZE"	51:8:799:880	6723593	0	True				
ANR	6723698	EqualityExpression	"avio_read ( pb , chunk_preamble , CHUNK_PREAMBLE_SIZE ) != CHUNK_PREAMBLE_SIZE"		6723593	0		!=			
ANR	6723699	CallExpression	"avio_read ( pb , chunk_preamble , CHUNK_PREAMBLE_SIZE )"		6723593	0					
ANR	6723700	Callee	avio_read		6723593	0					
ANR	6723701	Identifier	avio_read		6723593	0					
ANR	6723702	ArgumentList	pb		6723593	1					
ANR	6723703	Argument	pb		6723593	0					
ANR	6723704	Identifier	pb		6723593	0					
ANR	6723705	Argument	chunk_preamble		6723593	1					
ANR	6723706	Identifier	chunk_preamble		6723593	0					
ANR	6723707	Argument	CHUNK_PREAMBLE_SIZE		6723593	2					
ANR	6723708	Identifier	CHUNK_PREAMBLE_SIZE		6723593	0					
ANR	6723709	Identifier	CHUNK_PREAMBLE_SIZE		6723593	1					
ANR	6723710	ReturnStatement	return CHUNK_BAD ;	55:8:892:908	6723593	1	True				
ANR	6723711	Identifier	CHUNK_BAD		6723593	0					
ANR	6723712	ExpressionStatement	chunk_size = AV_RL16 ( & chunk_preamble [ 0 ] )	57:4:915:955	6723593	17	True				
ANR	6723713	AssignmentExpression	chunk_size = AV_RL16 ( & chunk_preamble [ 0 ] )		6723593	0		=			
ANR	6723714	Identifier	chunk_size		6723593	0					
ANR	6723715	CallExpression	AV_RL16 ( & chunk_preamble [ 0 ] )		6723593	1					
ANR	6723716	Callee	AV_RL16		6723593	0					
ANR	6723717	Identifier	AV_RL16		6723593	0					
ANR	6723718	ArgumentList	& chunk_preamble [ 0 ]		6723593	1					
ANR	6723719	Argument	& chunk_preamble [ 0 ]		6723593	0					
ANR	6723720	UnaryOperationExpression	& chunk_preamble [ 0 ]		6723593	0					
ANR	6723721	UnaryOperator	&		6723593	0					
ANR	6723722	ArrayIndexing	chunk_preamble [ 0 ]		6723593	1					
ANR	6723723	Identifier	chunk_preamble		6723593	0					
ANR	6723724	PrimaryExpression	0		6723593	1					
ANR	6723725	ExpressionStatement	chunk_type = AV_RL16 ( & chunk_preamble [ 2 ] )	59:4:962:1002	6723593	18	True				
ANR	6723726	AssignmentExpression	chunk_type = AV_RL16 ( & chunk_preamble [ 2 ] )		6723593	0		=			
ANR	6723727	Identifier	chunk_type		6723593	0					
ANR	6723728	CallExpression	AV_RL16 ( & chunk_preamble [ 2 ] )		6723593	1					
ANR	6723729	Callee	AV_RL16		6723593	0					
ANR	6723730	Identifier	AV_RL16		6723593	0					
ANR	6723731	ArgumentList	& chunk_preamble [ 2 ]		6723593	1					
ANR	6723732	Argument	& chunk_preamble [ 2 ]		6723593	0					
ANR	6723733	UnaryOperationExpression	& chunk_preamble [ 2 ]		6723593	0					
ANR	6723734	UnaryOperator	&		6723593	0					
ANR	6723735	ArrayIndexing	chunk_preamble [ 2 ]		6723593	1					
ANR	6723736	Identifier	chunk_preamble		6723593	0					
ANR	6723737	PrimaryExpression	2		6723593	1					
ANR	6723738	ExpressionStatement	"av_dlog ( NULL , ""chunk type 0x%04X, 0x%04X bytes: "" , chunk_type , chunk_size )"	63:4:1011:1085	6723593	19	True				
ANR	6723739	CallExpression	"av_dlog ( NULL , ""chunk type 0x%04X, 0x%04X bytes: "" , chunk_type , chunk_size )"		6723593	0					
ANR	6723740	Callee	av_dlog		6723593	0					
ANR	6723741	Identifier	av_dlog		6723593	0					
ANR	6723742	ArgumentList	NULL		6723593	1					
ANR	6723743	Argument	NULL		6723593	0					
ANR	6723744	Identifier	NULL		6723593	0					
ANR	6723745	Argument	"""chunk type 0x%04X, 0x%04X bytes: """		6723593	1					
ANR	6723746	PrimaryExpression	"""chunk type 0x%04X, 0x%04X bytes: """		6723593	0					
ANR	6723747	Argument	chunk_type		6723593	2					
ANR	6723748	Identifier	chunk_type		6723593	0					
ANR	6723749	Argument	chunk_size		6723593	3					
ANR	6723750	Identifier	chunk_size		6723593	0					
ANR	6723751	SwitchStatement	switch ( chunk_type )		6723593	20					
ANR	6723752	Condition	chunk_type	67:12:1102:1111	6723593	0	True				
ANR	6723753	Identifier	chunk_type		6723593	0					
ANR	6723754	CompoundStatement		63:24:1025:1025	6723593	1					
ANR	6723755	Label	case CHUNK_INIT_AUDIO :	71:4:1123:1144	6723593	0	True				
ANR	6723756	Identifier	CHUNK_INIT_AUDIO		6723593	0					
ANR	6723757	ExpressionStatement	"av_dlog ( NULL , ""initialize audio\\n"" )"	73:8:1155:1190	6723593	1	True				
ANR	6723758	CallExpression	"av_dlog ( NULL , ""initialize audio\\n"" )"		6723593	0					
ANR	6723759	Callee	av_dlog		6723593	0					
ANR	6723760	Identifier	av_dlog		6723593	0					
ANR	6723761	ArgumentList	NULL		6723593	1					
ANR	6723762	Argument	NULL		6723593	0					
ANR	6723763	Identifier	NULL		6723593	0					
ANR	6723764	Argument	"""initialize audio\\n"""		6723593	1					
ANR	6723765	PrimaryExpression	"""initialize audio\\n"""		6723593	0					
ANR	6723766	BreakStatement	break ;	75:8:1201:1206	6723593	2	True				
ANR	6723767	Label	case CHUNK_AUDIO_ONLY :	79:4:1215:1236	6723593	3	True				
ANR	6723768	Identifier	CHUNK_AUDIO_ONLY		6723593	0					
ANR	6723769	ExpressionStatement	"av_dlog ( NULL , ""audio only\\n"" )"	81:8:1247:1276	6723593	4	True				
ANR	6723770	CallExpression	"av_dlog ( NULL , ""audio only\\n"" )"		6723593	0					
ANR	6723771	Callee	av_dlog		6723593	0					
ANR	6723772	Identifier	av_dlog		6723593	0					
ANR	6723773	ArgumentList	NULL		6723593	1					
ANR	6723774	Argument	NULL		6723593	0					
ANR	6723775	Identifier	NULL		6723593	0					
ANR	6723776	Argument	"""audio only\\n"""		6723593	1					
ANR	6723777	PrimaryExpression	"""audio only\\n"""		6723593	0					
ANR	6723778	BreakStatement	break ;	83:8:1287:1292	6723593	5	True				
ANR	6723779	Label	case CHUNK_INIT_VIDEO :	87:4:1301:1322	6723593	6	True				
ANR	6723780	Identifier	CHUNK_INIT_VIDEO		6723593	0					
ANR	6723781	ExpressionStatement	"av_dlog ( NULL , ""initialize video\\n"" )"	89:8:1333:1368	6723593	7	True				
ANR	6723782	CallExpression	"av_dlog ( NULL , ""initialize video\\n"" )"		6723593	0					
ANR	6723783	Callee	av_dlog		6723593	0					
ANR	6723784	Identifier	av_dlog		6723593	0					
ANR	6723785	ArgumentList	NULL		6723593	1					
ANR	6723786	Argument	NULL		6723593	0					
ANR	6723787	Identifier	NULL		6723593	0					
ANR	6723788	Argument	"""initialize video\\n"""		6723593	1					
ANR	6723789	PrimaryExpression	"""initialize video\\n"""		6723593	0					
ANR	6723790	BreakStatement	break ;	91:8:1379:1384	6723593	8	True				
ANR	6723791	Label	case CHUNK_VIDEO :	95:4:1393:1409	6723593	9	True				
ANR	6723792	Identifier	CHUNK_VIDEO		6723593	0					
ANR	6723793	ExpressionStatement	"av_dlog ( NULL , ""video (and audio)\\n"" )"	97:8:1420:1456	6723593	10	True				
ANR	6723794	CallExpression	"av_dlog ( NULL , ""video (and audio)\\n"" )"		6723593	0					
ANR	6723795	Callee	av_dlog		6723593	0					
ANR	6723796	Identifier	av_dlog		6723593	0					
ANR	6723797	ArgumentList	NULL		6723593	1					
ANR	6723798	Argument	NULL		6723593	0					
ANR	6723799	Identifier	NULL		6723593	0					
ANR	6723800	Argument	"""video (and audio)\\n"""		6723593	1					
ANR	6723801	PrimaryExpression	"""video (and audio)\\n"""		6723593	0					
ANR	6723802	BreakStatement	break ;	99:8:1467:1472	6723593	11	True				
ANR	6723803	Label	case CHUNK_SHUTDOWN :	103:4:1481:1500	6723593	12	True				
ANR	6723804	Identifier	CHUNK_SHUTDOWN		6723593	0					
ANR	6723805	ExpressionStatement	"av_dlog ( NULL , ""shutdown\\n"" )"	105:8:1511:1538	6723593	13	True				
ANR	6723806	CallExpression	"av_dlog ( NULL , ""shutdown\\n"" )"		6723593	0					
ANR	6723807	Callee	av_dlog		6723593	0					
ANR	6723808	Identifier	av_dlog		6723593	0					
ANR	6723809	ArgumentList	NULL		6723593	1					
ANR	6723810	Argument	NULL		6723593	0					
ANR	6723811	Identifier	NULL		6723593	0					
ANR	6723812	Argument	"""shutdown\\n"""		6723593	1					
ANR	6723813	PrimaryExpression	"""shutdown\\n"""		6723593	0					
ANR	6723814	BreakStatement	break ;	107:8:1549:1554	6723593	14	True				
ANR	6723815	Label	case CHUNK_END :	111:4:1563:1577	6723593	15	True				
ANR	6723816	Identifier	CHUNK_END		6723593	0					
ANR	6723817	ExpressionStatement	"av_dlog ( NULL , ""end\\n"" )"	113:8:1588:1610	6723593	16	True				
ANR	6723818	CallExpression	"av_dlog ( NULL , ""end\\n"" )"		6723593	0					
ANR	6723819	Callee	av_dlog		6723593	0					
ANR	6723820	Identifier	av_dlog		6723593	0					
ANR	6723821	ArgumentList	NULL		6723593	1					
ANR	6723822	Argument	NULL		6723593	0					
ANR	6723823	Identifier	NULL		6723593	0					
ANR	6723824	Argument	"""end\\n"""		6723593	1					
ANR	6723825	PrimaryExpression	"""end\\n"""		6723593	0					
ANR	6723826	BreakStatement	break ;	115:8:1621:1626	6723593	17	True				
ANR	6723827	Label	default :	119:4:1635:1642	6723593	18	True				
ANR	6723828	Identifier	default		6723593	0					
ANR	6723829	ExpressionStatement	"av_dlog ( NULL , ""invalid chunk\\n"" )"	121:8:1653:1685	6723593	19	True				
ANR	6723830	CallExpression	"av_dlog ( NULL , ""invalid chunk\\n"" )"		6723593	0					
ANR	6723831	Callee	av_dlog		6723593	0					
ANR	6723832	Identifier	av_dlog		6723593	0					
ANR	6723833	ArgumentList	NULL		6723593	1					
ANR	6723834	Argument	NULL		6723593	0					
ANR	6723835	Identifier	NULL		6723593	0					
ANR	6723836	Argument	"""invalid chunk\\n"""		6723593	1					
ANR	6723837	PrimaryExpression	"""invalid chunk\\n"""		6723593	0					
ANR	6723838	ExpressionStatement	chunk_type = CHUNK_BAD	123:8:1696:1718	6723593	20	True				
ANR	6723839	AssignmentExpression	chunk_type = CHUNK_BAD		6723593	0		=			
ANR	6723840	Identifier	chunk_type		6723593	0					
ANR	6723841	Identifier	CHUNK_BAD		6723593	1					
ANR	6723842	BreakStatement	break ;	125:8:1729:1734	6723593	21	True				
ANR	6723843	WhileStatement	while ( ( chunk_size > 0 ) && ( chunk_type != CHUNK_BAD ) )		6723593	21					
ANR	6723844	Condition	( chunk_size > 0 ) && ( chunk_type != CHUNK_BAD )	133:11:1759:1803	6723593	0	True				
ANR	6723845	AndExpression	( chunk_size > 0 ) && ( chunk_type != CHUNK_BAD )		6723593	0		&&			
ANR	6723846	RelationalExpression	chunk_size > 0		6723593	0		>			
ANR	6723847	Identifier	chunk_size		6723593	0					
ANR	6723848	PrimaryExpression	0		6723593	1					
ANR	6723849	EqualityExpression	chunk_type != CHUNK_BAD		6723593	1		!=			
ANR	6723850	Identifier	chunk_type		6723593	0					
ANR	6723851	Identifier	CHUNK_BAD		6723593	1					
ANR	6723852	CompoundStatement		129:58:1717:1717	6723593	1					
ANR	6723853	IfStatement	if ( url_feof ( pb ) )		6723593	0					
ANR	6723854	Condition	url_feof ( pb )	139:12:1900:1911	6723593	0	True				
ANR	6723855	CallExpression	url_feof ( pb )		6723593	0					
ANR	6723856	Callee	url_feof		6723593	0					
ANR	6723857	Identifier	url_feof		6723593	0					
ANR	6723858	ArgumentList	pb		6723593	1					
ANR	6723859	Argument	pb		6723593	0					
ANR	6723860	Identifier	pb		6723593	0					
ANR	6723861	CompoundStatement		135:26:1825:1825	6723593	1					
ANR	6723862	ExpressionStatement	chunk_type = CHUNK_EOF	141:12:1929:1951	6723593	0	True				
ANR	6723863	AssignmentExpression	chunk_type = CHUNK_EOF		6723593	0		=			
ANR	6723864	Identifier	chunk_type		6723593	0					
ANR	6723865	Identifier	CHUNK_EOF		6723593	1					
ANR	6723866	BreakStatement	break ;	143:12:1966:1971	6723593	1	True				
ANR	6723867	IfStatement	"if ( avio_read ( pb , opcode_preamble , CHUNK_PREAMBLE_SIZE ) != CHUNK_PREAMBLE_SIZE )"		6723593	1					
ANR	6723868	Condition	"avio_read ( pb , opcode_preamble , CHUNK_PREAMBLE_SIZE ) != CHUNK_PREAMBLE_SIZE"	147:12:1997:2083	6723593	0	True				
ANR	6723869	EqualityExpression	"avio_read ( pb , opcode_preamble , CHUNK_PREAMBLE_SIZE ) != CHUNK_PREAMBLE_SIZE"		6723593	0		!=			
ANR	6723870	CallExpression	"avio_read ( pb , opcode_preamble , CHUNK_PREAMBLE_SIZE )"		6723593	0					
ANR	6723871	Callee	avio_read		6723593	0					
ANR	6723872	Identifier	avio_read		6723593	0					
ANR	6723873	ArgumentList	pb		6723593	1					
ANR	6723874	Argument	pb		6723593	0					
ANR	6723875	Identifier	pb		6723593	0					
ANR	6723876	Argument	opcode_preamble		6723593	1					
ANR	6723877	Identifier	opcode_preamble		6723593	0					
ANR	6723878	Argument	CHUNK_PREAMBLE_SIZE		6723593	2					
ANR	6723879	Identifier	CHUNK_PREAMBLE_SIZE		6723593	0					
ANR	6723880	Identifier	CHUNK_PREAMBLE_SIZE		6723593	1					
ANR	6723881	CompoundStatement		145:33:1997:1997	6723593	1					
ANR	6723882	ExpressionStatement	chunk_type = CHUNK_BAD	151:12:2101:2123	6723593	0	True				
ANR	6723883	AssignmentExpression	chunk_type = CHUNK_BAD		6723593	0		=			
ANR	6723884	Identifier	chunk_type		6723593	0					
ANR	6723885	Identifier	CHUNK_BAD		6723593	1					
ANR	6723886	BreakStatement	break ;	153:12:2138:2143	6723593	1	True				
ANR	6723887	ExpressionStatement	opcode_size = AV_RL16 ( & opcode_preamble [ 0 ] )	159:8:2167:2209	6723593	2	True				
ANR	6723888	AssignmentExpression	opcode_size = AV_RL16 ( & opcode_preamble [ 0 ] )		6723593	0		=			
ANR	6723889	Identifier	opcode_size		6723593	0					
ANR	6723890	CallExpression	AV_RL16 ( & opcode_preamble [ 0 ] )		6723593	1					
ANR	6723891	Callee	AV_RL16		6723593	0					
ANR	6723892	Identifier	AV_RL16		6723593	0					
ANR	6723893	ArgumentList	& opcode_preamble [ 0 ]		6723593	1					
ANR	6723894	Argument	& opcode_preamble [ 0 ]		6723593	0					
ANR	6723895	UnaryOperationExpression	& opcode_preamble [ 0 ]		6723593	0					
ANR	6723896	UnaryOperator	&		6723593	0					
ANR	6723897	ArrayIndexing	opcode_preamble [ 0 ]		6723593	1					
ANR	6723898	Identifier	opcode_preamble		6723593	0					
ANR	6723899	PrimaryExpression	0		6723593	1					
ANR	6723900	ExpressionStatement	opcode_type = opcode_preamble [ 2 ]	161:8:2220:2252	6723593	3	True				
ANR	6723901	AssignmentExpression	opcode_type = opcode_preamble [ 2 ]		6723593	0		=			
ANR	6723902	Identifier	opcode_type		6723593	0					
ANR	6723903	ArrayIndexing	opcode_preamble [ 2 ]		6723593	1					
ANR	6723904	Identifier	opcode_preamble		6723593	0					
ANR	6723905	PrimaryExpression	2		6723593	1					
ANR	6723906	ExpressionStatement	opcode_version = opcode_preamble [ 3 ]	163:8:2263:2298	6723593	4	True				
ANR	6723907	AssignmentExpression	opcode_version = opcode_preamble [ 3 ]		6723593	0		=			
ANR	6723908	Identifier	opcode_version		6723593	0					
ANR	6723909	ArrayIndexing	opcode_preamble [ 3 ]		6723593	1					
ANR	6723910	Identifier	opcode_preamble		6723593	0					
ANR	6723911	PrimaryExpression	3		6723593	1					
ANR	6723912	ExpressionStatement	chunk_size -= OPCODE_PREAMBLE_SIZE	167:8:2311:2345	6723593	5	True				
ANR	6723913	AssignmentExpression	chunk_size -= OPCODE_PREAMBLE_SIZE		6723593	0		-=			
ANR	6723914	Identifier	chunk_size		6723593	0					
ANR	6723915	Identifier	OPCODE_PREAMBLE_SIZE		6723593	1					
ANR	6723916	ExpressionStatement	chunk_size -= opcode_size	169:8:2356:2381	6723593	6	True				
ANR	6723917	AssignmentExpression	chunk_size -= opcode_size		6723593	0		-=			
ANR	6723918	Identifier	chunk_size		6723593	0					
ANR	6723919	Identifier	opcode_size		6723593	1					
ANR	6723920	IfStatement	if ( chunk_size < 0 )		6723593	7					
ANR	6723921	Condition	chunk_size < 0	171:12:2396:2409	6723593	0	True				
ANR	6723922	RelationalExpression	chunk_size < 0		6723593	0		<			
ANR	6723923	Identifier	chunk_size		6723593	0					
ANR	6723924	PrimaryExpression	0		6723593	1					
ANR	6723925	CompoundStatement		167:28:2323:2323	6723593	1					
ANR	6723926	ExpressionStatement	"av_dlog ( NULL , ""chunk_size countdown just went negative\\n"" )"	173:12:2427:2485	6723593	0	True				
ANR	6723927	CallExpression	"av_dlog ( NULL , ""chunk_size countdown just went negative\\n"" )"		6723593	0					
ANR	6723928	Callee	av_dlog		6723593	0					
ANR	6723929	Identifier	av_dlog		6723593	0					
ANR	6723930	ArgumentList	NULL		6723593	1					
ANR	6723931	Argument	NULL		6723593	0					
ANR	6723932	Identifier	NULL		6723593	0					
ANR	6723933	Argument	"""chunk_size countdown just went negative\\n"""		6723593	1					
ANR	6723934	PrimaryExpression	"""chunk_size countdown just went negative\\n"""		6723593	0					
ANR	6723935	ExpressionStatement	chunk_type = CHUNK_BAD	175:12:2500:2522	6723593	1	True				
ANR	6723936	AssignmentExpression	chunk_type = CHUNK_BAD		6723593	0		=			
ANR	6723937	Identifier	chunk_type		6723593	0					
ANR	6723938	Identifier	CHUNK_BAD		6723593	1					
ANR	6723939	BreakStatement	break ;	177:12:2537:2542	6723593	2	True				
ANR	6723940	ExpressionStatement	"av_dlog ( NULL , ""  opcode type %02X, version %d, 0x%04X bytes: "" , opcode_type , opcode_version , opcode_size )"	183:8:2566:2688	6723593	8	True				
ANR	6723941	CallExpression	"av_dlog ( NULL , ""  opcode type %02X, version %d, 0x%04X bytes: "" , opcode_type , opcode_version , opcode_size )"		6723593	0					
ANR	6723942	Callee	av_dlog		6723593	0					
ANR	6723943	Identifier	av_dlog		6723593	0					
ANR	6723944	ArgumentList	NULL		6723593	1					
ANR	6723945	Argument	NULL		6723593	0					
ANR	6723946	Identifier	NULL		6723593	0					
ANR	6723947	Argument	"""  opcode type %02X, version %d, 0x%04X bytes: """		6723593	1					
ANR	6723948	PrimaryExpression	"""  opcode type %02X, version %d, 0x%04X bytes: """		6723593	0					
ANR	6723949	Argument	opcode_type		6723593	2					
ANR	6723950	Identifier	opcode_type		6723593	0					
ANR	6723951	Argument	opcode_version		6723593	3					
ANR	6723952	Identifier	opcode_version		6723593	0					
ANR	6723953	Argument	opcode_size		6723593	4					
ANR	6723954	Identifier	opcode_size		6723593	0					
ANR	6723955	SwitchStatement	switch ( opcode_type )		6723593	9					
ANR	6723956	Condition	opcode_type	187:16:2707:2717	6723593	0	True				
ANR	6723957	Identifier	opcode_type		6723593	0					
ANR	6723958	CompoundStatement		183:29:2631:2631	6723593	1					
ANR	6723959	Label	case OPCODE_END_OF_STREAM :	191:8:2733:2758	6723593	0	True				
ANR	6723960	Identifier	OPCODE_END_OF_STREAM		6723593	0					
ANR	6723961	ExpressionStatement	"av_dlog ( NULL , ""end of stream\\n"" )"	193:12:2773:2805	6723593	1	True				
ANR	6723962	CallExpression	"av_dlog ( NULL , ""end of stream\\n"" )"		6723593	0					
ANR	6723963	Callee	av_dlog		6723593	0					
ANR	6723964	Identifier	av_dlog		6723593	0					
ANR	6723965	ArgumentList	NULL		6723593	1					
ANR	6723966	Argument	NULL		6723593	0					
ANR	6723967	Identifier	NULL		6723593	0					
ANR	6723968	Argument	"""end of stream\\n"""		6723593	1					
ANR	6723969	PrimaryExpression	"""end of stream\\n"""		6723593	0					
ANR	6723970	ExpressionStatement	"avio_skip ( pb , opcode_size )"	195:12:2820:2846	6723593	2	True				
ANR	6723971	CallExpression	"avio_skip ( pb , opcode_size )"		6723593	0					
ANR	6723972	Callee	avio_skip		6723593	0					
ANR	6723973	Identifier	avio_skip		6723593	0					
ANR	6723974	ArgumentList	pb		6723593	1					
ANR	6723975	Argument	pb		6723593	0					
ANR	6723976	Identifier	pb		6723593	0					
ANR	6723977	Argument	opcode_size		6723593	1					
ANR	6723978	Identifier	opcode_size		6723593	0					
ANR	6723979	BreakStatement	break ;	197:12:2861:2866	6723593	3	True				
ANR	6723980	Label	case OPCODE_END_OF_CHUNK :	201:8:2879:2903	6723593	4	True				
ANR	6723981	Identifier	OPCODE_END_OF_CHUNK		6723593	0					
ANR	6723982	ExpressionStatement	"av_dlog ( NULL , ""end of chunk\\n"" )"	203:12:2918:2949	6723593	5	True				
ANR	6723983	CallExpression	"av_dlog ( NULL , ""end of chunk\\n"" )"		6723593	0					
ANR	6723984	Callee	av_dlog		6723593	0					
ANR	6723985	Identifier	av_dlog		6723593	0					
ANR	6723986	ArgumentList	NULL		6723593	1					
ANR	6723987	Argument	NULL		6723593	0					
ANR	6723988	Identifier	NULL		6723593	0					
ANR	6723989	Argument	"""end of chunk\\n"""		6723593	1					
ANR	6723990	PrimaryExpression	"""end of chunk\\n"""		6723593	0					
ANR	6723991	ExpressionStatement	"avio_skip ( pb , opcode_size )"	205:12:2964:2990	6723593	6	True				
ANR	6723992	CallExpression	"avio_skip ( pb , opcode_size )"		6723593	0					
ANR	6723993	Callee	avio_skip		6723593	0					
ANR	6723994	Identifier	avio_skip		6723593	0					
ANR	6723995	ArgumentList	pb		6723593	1					
ANR	6723996	Argument	pb		6723593	0					
ANR	6723997	Identifier	pb		6723593	0					
ANR	6723998	Argument	opcode_size		6723593	1					
ANR	6723999	Identifier	opcode_size		6723593	0					
ANR	6724000	BreakStatement	break ;	207:12:3005:3010	6723593	7	True				
ANR	6724001	Label	case OPCODE_CREATE_TIMER :	211:8:3023:3047	6723593	8	True				
ANR	6724002	Identifier	OPCODE_CREATE_TIMER		6723593	0					
ANR	6724003	ExpressionStatement	"av_dlog ( NULL , ""create timer\\n"" )"	213:12:3062:3093	6723593	9	True				
ANR	6724004	CallExpression	"av_dlog ( NULL , ""create timer\\n"" )"		6723593	0					
ANR	6724005	Callee	av_dlog		6723593	0					
ANR	6724006	Identifier	av_dlog		6723593	0					
ANR	6724007	ArgumentList	NULL		6723593	1					
ANR	6724008	Argument	NULL		6723593	0					
ANR	6724009	Identifier	NULL		6723593	0					
ANR	6724010	Argument	"""create timer\\n"""		6723593	1					
ANR	6724011	PrimaryExpression	"""create timer\\n"""		6723593	0					
ANR	6724012	IfStatement	if ( ( opcode_version > 0 ) || ( opcode_size != 6 ) )		6723593	10					
ANR	6724013	Condition	( opcode_version > 0 ) || ( opcode_size != 6 )	215:16:3112:3153	6723593	0	True				
ANR	6724014	OrExpression	( opcode_version > 0 ) || ( opcode_size != 6 )		6723593	0		||			
ANR	6724015	RelationalExpression	opcode_version > 0		6723593	0		>			
ANR	6724016	Identifier	opcode_version		6723593	0					
ANR	6724017	PrimaryExpression	0		6723593	1					
ANR	6724018	EqualityExpression	opcode_size != 6		6723593	1		!=			
ANR	6724019	Identifier	opcode_size		6723593	0					
ANR	6724020	PrimaryExpression	6		6723593	1					
ANR	6724021	CompoundStatement		211:60:3067:3067	6723593	1					
ANR	6724022	ExpressionStatement	"av_dlog ( NULL , ""bad create_timer opcode\\n"" )"	217:16:3175:3217	6723593	0	True				
ANR	6724023	CallExpression	"av_dlog ( NULL , ""bad create_timer opcode\\n"" )"		6723593	0					
ANR	6724024	Callee	av_dlog		6723593	0					
ANR	6724025	Identifier	av_dlog		6723593	0					
ANR	6724026	ArgumentList	NULL		6723593	1					
ANR	6724027	Argument	NULL		6723593	0					
ANR	6724028	Identifier	NULL		6723593	0					
ANR	6724029	Argument	"""bad create_timer opcode\\n"""		6723593	1					
ANR	6724030	PrimaryExpression	"""bad create_timer opcode\\n"""		6723593	0					
ANR	6724031	ExpressionStatement	chunk_type = CHUNK_BAD	219:16:3236:3258	6723593	1	True				
ANR	6724032	AssignmentExpression	chunk_type = CHUNK_BAD		6723593	0		=			
ANR	6724033	Identifier	chunk_type		6723593	0					
ANR	6724034	Identifier	CHUNK_BAD		6723593	1					
ANR	6724035	BreakStatement	break ;	221:16:3277:3282	6723593	2	True				
ANR	6724036	IfStatement	"if ( avio_read ( pb , scratch , opcode_size ) != opcode_size )"		6723593	11					
ANR	6724037	Condition	"avio_read ( pb , scratch , opcode_size ) != opcode_size"	225:16:3316:3382	6723593	0	True				
ANR	6724038	EqualityExpression	"avio_read ( pb , scratch , opcode_size ) != opcode_size"		6723593	0		!=			
ANR	6724039	CallExpression	"avio_read ( pb , scratch , opcode_size )"		6723593	0					
ANR	6724040	Callee	avio_read		6723593	0					
ANR	6724041	Identifier	avio_read		6723593	0					
ANR	6724042	ArgumentList	pb		6723593	1					
ANR	6724043	Argument	pb		6723593	0					
ANR	6724044	Identifier	pb		6723593	0					
ANR	6724045	Argument	scratch		6723593	1					
ANR	6724046	Identifier	scratch		6723593	0					
ANR	6724047	Argument	opcode_size		6723593	2					
ANR	6724048	Identifier	opcode_size		6723593	0					
ANR	6724049	Identifier	opcode_size		6723593	1					
ANR	6724050	CompoundStatement		223:29:3296:3296	6723593	1					
ANR	6724051	ExpressionStatement	chunk_type = CHUNK_BAD	229:16:3404:3426	6723593	0	True				
ANR	6724052	AssignmentExpression	chunk_type = CHUNK_BAD		6723593	0		=			
ANR	6724053	Identifier	chunk_type		6723593	0					
ANR	6724054	Identifier	CHUNK_BAD		6723593	1					
ANR	6724055	BreakStatement	break ;	231:16:3445:3450	6723593	1	True				
ANR	6724056	ExpressionStatement	s -> frame_pts_inc = ( ( uint64_t ) AV_RL32 ( & scratch [ 0 ] ) ) * AV_RL16 ( & scratch [ 4 ] )	235:12:3480:3554	6723593	12	True				
ANR	6724057	AssignmentExpression	s -> frame_pts_inc = ( ( uint64_t ) AV_RL32 ( & scratch [ 0 ] ) ) * AV_RL16 ( & scratch [ 4 ] )		6723593	0		=			
ANR	6724058	PtrMemberAccess	s -> frame_pts_inc		6723593	0					
ANR	6724059	Identifier	s		6723593	0					
ANR	6724060	Identifier	frame_pts_inc		6723593	1					
ANR	6724061	MultiplicativeExpression	( ( uint64_t ) AV_RL32 ( & scratch [ 0 ] ) ) * AV_RL16 ( & scratch [ 4 ] )		6723593	1		*			
ANR	6724062	CastExpression	( uint64_t ) AV_RL32 ( & scratch [ 0 ] )		6723593	0					
ANR	6724063	CastTarget	uint64_t		6723593	0					
ANR	6724064	CallExpression	AV_RL32 ( & scratch [ 0 ] )		6723593	1					
ANR	6724065	Callee	AV_RL32		6723593	0					
ANR	6724066	Identifier	AV_RL32		6723593	0					
ANR	6724067	ArgumentList	& scratch [ 0 ]		6723593	1					
ANR	6724068	Argument	& scratch [ 0 ]		6723593	0					
ANR	6724069	UnaryOperationExpression	& scratch [ 0 ]		6723593	0					
ANR	6724070	UnaryOperator	&		6723593	0					
ANR	6724071	ArrayIndexing	scratch [ 0 ]		6723593	1					
ANR	6724072	Identifier	scratch		6723593	0					
ANR	6724073	PrimaryExpression	0		6723593	1					
ANR	6724074	CallExpression	AV_RL16 ( & scratch [ 4 ] )		6723593	1					
ANR	6724075	Callee	AV_RL16		6723593	0					
ANR	6724076	Identifier	AV_RL16		6723593	0					
ANR	6724077	ArgumentList	& scratch [ 4 ]		6723593	1					
ANR	6724078	Argument	& scratch [ 4 ]		6723593	0					
ANR	6724079	UnaryOperationExpression	& scratch [ 4 ]		6723593	0					
ANR	6724080	UnaryOperator	&		6723593	0					
ANR	6724081	ArrayIndexing	scratch [ 4 ]		6723593	1					
ANR	6724082	Identifier	scratch		6723593	0					
ANR	6724083	PrimaryExpression	4		6723593	1					
ANR	6724084	ExpressionStatement	"av_dlog ( NULL , ""  %.2f frames/second (timer div = %d, subdiv = %d)\\n"" , 1000000.0 / s -> frame_pts_inc , AV_RL32 ( & scratch [ 0 ] ) , AV_RL16 ( & scratch [ 4 ] ) )"	237:12:3569:3754	6723593	13	True				
ANR	6724085	CallExpression	"av_dlog ( NULL , ""  %.2f frames/second (timer div = %d, subdiv = %d)\\n"" , 1000000.0 / s -> frame_pts_inc , AV_RL32 ( & scratch [ 0 ] ) , AV_RL16 ( & scratch [ 4 ] ) )"		6723593	0					
ANR	6724086	Callee	av_dlog		6723593	0					
ANR	6724087	Identifier	av_dlog		6723593	0					
ANR	6724088	ArgumentList	NULL		6723593	1					
ANR	6724089	Argument	NULL		6723593	0					
ANR	6724090	Identifier	NULL		6723593	0					
ANR	6724091	Argument	"""  %.2f frames/second (timer div = %d, subdiv = %d)\\n"""		6723593	1					
ANR	6724092	PrimaryExpression	"""  %.2f frames/second (timer div = %d, subdiv = %d)\\n"""		6723593	0					
ANR	6724093	Argument	1000000.0 / s -> frame_pts_inc		6723593	2					
ANR	6724094	MultiplicativeExpression	1000000.0 / s -> frame_pts_inc		6723593	0		/			
ANR	6724095	PrimaryExpression	1000000.0		6723593	0					
ANR	6724096	PtrMemberAccess	s -> frame_pts_inc		6723593	1					
ANR	6724097	Identifier	s		6723593	0					
ANR	6724098	Identifier	frame_pts_inc		6723593	1					
ANR	6724099	Argument	AV_RL32 ( & scratch [ 0 ] )		6723593	3					
ANR	6724100	CallExpression	AV_RL32 ( & scratch [ 0 ] )		6723593	0					
ANR	6724101	Callee	AV_RL32		6723593	0					
ANR	6724102	Identifier	AV_RL32		6723593	0					
ANR	6724103	ArgumentList	& scratch [ 0 ]		6723593	1					
ANR	6724104	Argument	& scratch [ 0 ]		6723593	0					
ANR	6724105	UnaryOperationExpression	& scratch [ 0 ]		6723593	0					
ANR	6724106	UnaryOperator	&		6723593	0					
ANR	6724107	ArrayIndexing	scratch [ 0 ]		6723593	1					
ANR	6724108	Identifier	scratch		6723593	0					
ANR	6724109	PrimaryExpression	0		6723593	1					
ANR	6724110	Argument	AV_RL16 ( & scratch [ 4 ] )		6723593	4					
ANR	6724111	CallExpression	AV_RL16 ( & scratch [ 4 ] )		6723593	0					
ANR	6724112	Callee	AV_RL16		6723593	0					
ANR	6724113	Identifier	AV_RL16		6723593	0					
ANR	6724114	ArgumentList	& scratch [ 4 ]		6723593	1					
ANR	6724115	Argument	& scratch [ 4 ]		6723593	0					
ANR	6724116	UnaryOperationExpression	& scratch [ 4 ]		6723593	0					
ANR	6724117	UnaryOperator	&		6723593	0					
ANR	6724118	ArrayIndexing	scratch [ 4 ]		6723593	1					
ANR	6724119	Identifier	scratch		6723593	0					
ANR	6724120	PrimaryExpression	4		6723593	1					
ANR	6724121	BreakStatement	break ;	243:12:3769:3774	6723593	14	True				
ANR	6724122	Label	case OPCODE_INIT_AUDIO_BUFFERS :	247:8:3787:3817	6723593	15	True				
ANR	6724123	Identifier	OPCODE_INIT_AUDIO_BUFFERS		6723593	0					
ANR	6724124	ExpressionStatement	"av_dlog ( NULL , ""initialize audio buffers\\n"" )"	249:12:3832:3875	6723593	16	True				
ANR	6724125	CallExpression	"av_dlog ( NULL , ""initialize audio buffers\\n"" )"		6723593	0					
ANR	6724126	Callee	av_dlog		6723593	0					
ANR	6724127	Identifier	av_dlog		6723593	0					
ANR	6724128	ArgumentList	NULL		6723593	1					
ANR	6724129	Argument	NULL		6723593	0					
ANR	6724130	Identifier	NULL		6723593	0					
ANR	6724131	Argument	"""initialize audio buffers\\n"""		6723593	1					
ANR	6724132	PrimaryExpression	"""initialize audio buffers\\n"""		6723593	0					
ANR	6724133	IfStatement	if ( ( opcode_version > 1 ) || ( opcode_size > 10 ) )		6723593	17					
ANR	6724134	Condition	( opcode_version > 1 ) || ( opcode_size > 10 )	251:16:3894:3935	6723593	0	True				
ANR	6724135	OrExpression	( opcode_version > 1 ) || ( opcode_size > 10 )		6723593	0		||			
ANR	6724136	RelationalExpression	opcode_version > 1		6723593	0		>			
ANR	6724137	Identifier	opcode_version		6723593	0					
ANR	6724138	PrimaryExpression	1		6723593	1					
ANR	6724139	RelationalExpression	opcode_size > 10		6723593	1		>			
ANR	6724140	Identifier	opcode_size		6723593	0					
ANR	6724141	PrimaryExpression	10		6723593	1					
ANR	6724142	CompoundStatement		247:60:3849:3849	6723593	1					
ANR	6724143	ExpressionStatement	"av_dlog ( NULL , ""bad init_audio_buffers opcode\\n"" )"	253:16:3957:4005	6723593	0	True				
ANR	6724144	CallExpression	"av_dlog ( NULL , ""bad init_audio_buffers opcode\\n"" )"		6723593	0					
ANR	6724145	Callee	av_dlog		6723593	0					
ANR	6724146	Identifier	av_dlog		6723593	0					
ANR	6724147	ArgumentList	NULL		6723593	1					
ANR	6724148	Argument	NULL		6723593	0					
ANR	6724149	Identifier	NULL		6723593	0					
ANR	6724150	Argument	"""bad init_audio_buffers opcode\\n"""		6723593	1					
ANR	6724151	PrimaryExpression	"""bad init_audio_buffers opcode\\n"""		6723593	0					
ANR	6724152	ExpressionStatement	chunk_type = CHUNK_BAD	255:16:4024:4046	6723593	1	True				
ANR	6724153	AssignmentExpression	chunk_type = CHUNK_BAD		6723593	0		=			
ANR	6724154	Identifier	chunk_type		6723593	0					
ANR	6724155	Identifier	CHUNK_BAD		6723593	1					
ANR	6724156	BreakStatement	break ;	257:16:4065:4070	6723593	2	True				
ANR	6724157	IfStatement	"if ( avio_read ( pb , scratch , opcode_size ) != opcode_size )"		6723593	18					
ANR	6724158	Condition	"avio_read ( pb , scratch , opcode_size ) != opcode_size"	261:16:4104:4170	6723593	0	True				
ANR	6724159	EqualityExpression	"avio_read ( pb , scratch , opcode_size ) != opcode_size"		6723593	0		!=			
ANR	6724160	CallExpression	"avio_read ( pb , scratch , opcode_size )"		6723593	0					
ANR	6724161	Callee	avio_read		6723593	0					
ANR	6724162	Identifier	avio_read		6723593	0					
ANR	6724163	ArgumentList	pb		6723593	1					
ANR	6724164	Argument	pb		6723593	0					
ANR	6724165	Identifier	pb		6723593	0					
ANR	6724166	Argument	scratch		6723593	1					
ANR	6724167	Identifier	scratch		6723593	0					
ANR	6724168	Argument	opcode_size		6723593	2					
ANR	6724169	Identifier	opcode_size		6723593	0					
ANR	6724170	Identifier	opcode_size		6723593	1					
ANR	6724171	CompoundStatement		259:29:4084:4084	6723593	1					
ANR	6724172	ExpressionStatement	chunk_type = CHUNK_BAD	265:16:4192:4214	6723593	0	True				
ANR	6724173	AssignmentExpression	chunk_type = CHUNK_BAD		6723593	0		=			
ANR	6724174	Identifier	chunk_type		6723593	0					
ANR	6724175	Identifier	CHUNK_BAD		6723593	1					
ANR	6724176	BreakStatement	break ;	267:16:4233:4238	6723593	1	True				
ANR	6724177	ExpressionStatement	s -> audio_sample_rate = AV_RL16 ( & scratch [ 4 ] )	271:12:4268:4311	6723593	19	True				
ANR	6724178	AssignmentExpression	s -> audio_sample_rate = AV_RL16 ( & scratch [ 4 ] )		6723593	0		=			
ANR	6724179	PtrMemberAccess	s -> audio_sample_rate		6723593	0					
ANR	6724180	Identifier	s		6723593	0					
ANR	6724181	Identifier	audio_sample_rate		6723593	1					
ANR	6724182	CallExpression	AV_RL16 ( & scratch [ 4 ] )		6723593	1					
ANR	6724183	Callee	AV_RL16		6723593	0					
ANR	6724184	Identifier	AV_RL16		6723593	0					
ANR	6724185	ArgumentList	& scratch [ 4 ]		6723593	1					
ANR	6724186	Argument	& scratch [ 4 ]		6723593	0					
ANR	6724187	UnaryOperationExpression	& scratch [ 4 ]		6723593	0					
ANR	6724188	UnaryOperator	&		6723593	0					
ANR	6724189	ArrayIndexing	scratch [ 4 ]		6723593	1					
ANR	6724190	Identifier	scratch		6723593	0					
ANR	6724191	PrimaryExpression	4		6723593	1					
ANR	6724192	ExpressionStatement	audio_flags = AV_RL16 ( & scratch [ 2 ] )	273:12:4326:4360	6723593	20	True				
ANR	6724193	AssignmentExpression	audio_flags = AV_RL16 ( & scratch [ 2 ] )		6723593	0		=			
ANR	6724194	Identifier	audio_flags		6723593	0					
ANR	6724195	CallExpression	AV_RL16 ( & scratch [ 2 ] )		6723593	1					
ANR	6724196	Callee	AV_RL16		6723593	0					
ANR	6724197	Identifier	AV_RL16		6723593	0					
ANR	6724198	ArgumentList	& scratch [ 2 ]		6723593	1					
ANR	6724199	Argument	& scratch [ 2 ]		6723593	0					
ANR	6724200	UnaryOperationExpression	& scratch [ 2 ]		6723593	0					
ANR	6724201	UnaryOperator	&		6723593	0					
ANR	6724202	ArrayIndexing	scratch [ 2 ]		6723593	1					
ANR	6724203	Identifier	scratch		6723593	0					
ANR	6724204	PrimaryExpression	2		6723593	1					
ANR	6724205	ExpressionStatement	s -> audio_channels = ( audio_flags & 1 ) + 1	277:12:4435:4476	6723593	21	True				
ANR	6724206	AssignmentExpression	s -> audio_channels = ( audio_flags & 1 ) + 1		6723593	0		=			
ANR	6724207	PtrMemberAccess	s -> audio_channels		6723593	0					
ANR	6724208	Identifier	s		6723593	0					
ANR	6724209	Identifier	audio_channels		6723593	1					
ANR	6724210	AdditiveExpression	( audio_flags & 1 ) + 1		6723593	1		+			
ANR	6724211	BitAndExpression	audio_flags & 1		6723593	0		&			
ANR	6724212	Identifier	audio_flags		6723593	0					
ANR	6724213	PrimaryExpression	1		6723593	1					
ANR	6724214	PrimaryExpression	1		6723593	1					
ANR	6724215	ExpressionStatement	s -> audio_bits = ( ( ( audio_flags >> 1 ) & 1 ) + 1 ) * 8	281:12:4552:4602	6723593	22	True				
ANR	6724216	AssignmentExpression	s -> audio_bits = ( ( ( audio_flags >> 1 ) & 1 ) + 1 ) * 8		6723593	0		=			
ANR	6724217	PtrMemberAccess	s -> audio_bits		6723593	0					
ANR	6724218	Identifier	s		6723593	0					
ANR	6724219	Identifier	audio_bits		6723593	1					
ANR	6724220	MultiplicativeExpression	( ( ( audio_flags >> 1 ) & 1 ) + 1 ) * 8		6723593	1		*			
ANR	6724221	AdditiveExpression	( ( audio_flags >> 1 ) & 1 ) + 1		6723593	0		+			
ANR	6724222	BitAndExpression	( audio_flags >> 1 ) & 1		6723593	0		&			
ANR	6724223	ShiftExpression	audio_flags >> 1		6723593	0		>>			
ANR	6724224	Identifier	audio_flags		6723593	0					
ANR	6724225	PrimaryExpression	1		6723593	1					
ANR	6724226	PrimaryExpression	1		6723593	1					
ANR	6724227	PrimaryExpression	1		6723593	1					
ANR	6724228	PrimaryExpression	8		6723593	1					
ANR	6724229	IfStatement	if ( ( opcode_version == 1 ) && ( audio_flags & 0x4 ) )		6723593	23					
ANR	6724230	Condition	( opcode_version == 1 ) && ( audio_flags & 0x4 )	285:16:4693:4736	6723593	0	True				
ANR	6724231	AndExpression	( opcode_version == 1 ) && ( audio_flags & 0x4 )		6723593	0		&&			
ANR	6724232	EqualityExpression	opcode_version == 1		6723593	0		==			
ANR	6724233	Identifier	opcode_version		6723593	0					
ANR	6724234	PrimaryExpression	1		6723593	1					
ANR	6724235	BitAndExpression	audio_flags & 0x4		6723593	1		&			
ANR	6724236	Identifier	audio_flags		6723593	0					
ANR	6724237	PrimaryExpression	0x4		6723593	1					
ANR	6724238	ExpressionStatement	s -> audio_type = AV_CODEC_ID_INTERPLAY_DPCM	287:16:4756:4798	6723593	1	True				
ANR	6724239	AssignmentExpression	s -> audio_type = AV_CODEC_ID_INTERPLAY_DPCM		6723593	0		=			
ANR	6724240	PtrMemberAccess	s -> audio_type		6723593	0					
ANR	6724241	Identifier	s		6723593	0					
ANR	6724242	Identifier	audio_type		6723593	1					
ANR	6724243	Identifier	AV_CODEC_ID_INTERPLAY_DPCM		6723593	1					
ANR	6724244	ElseStatement	else		6723593	0					
ANR	6724245	IfStatement	if ( s -> audio_bits == 16 )		6723593	0					
ANR	6724246	Condition	s -> audio_bits == 16	289:21:4822:4840	6723593	0	True				
ANR	6724247	EqualityExpression	s -> audio_bits == 16		6723593	0		==			
ANR	6724248	PtrMemberAccess	s -> audio_bits		6723593	0					
ANR	6724249	Identifier	s		6723593	0					
ANR	6724250	Identifier	audio_bits		6723593	1					
ANR	6724251	PrimaryExpression	16		6723593	1					
ANR	6724252	ExpressionStatement	s -> audio_type = AV_CODEC_ID_PCM_S16LE	291:16:4860:4897	6723593	1	True				
ANR	6724253	AssignmentExpression	s -> audio_type = AV_CODEC_ID_PCM_S16LE		6723593	0		=			
ANR	6724254	PtrMemberAccess	s -> audio_type		6723593	0					
ANR	6724255	Identifier	s		6723593	0					
ANR	6724256	Identifier	audio_type		6723593	1					
ANR	6724257	Identifier	AV_CODEC_ID_PCM_S16LE		6723593	1					
ANR	6724258	ElseStatement	else		6723593	0					
ANR	6724259	ExpressionStatement	s -> audio_type = AV_CODEC_ID_PCM_U8	295:16:4934:4968	6723593	0	True				
ANR	6724260	AssignmentExpression	s -> audio_type = AV_CODEC_ID_PCM_U8		6723593	0		=			
ANR	6724261	PtrMemberAccess	s -> audio_type		6723593	0					
ANR	6724262	Identifier	s		6723593	0					
ANR	6724263	Identifier	audio_type		6723593	1					
ANR	6724264	Identifier	AV_CODEC_ID_PCM_U8		6723593	1					
ANR	6724265	ExpressionStatement	"av_dlog ( NULL , ""audio: %d bits, %d Hz, %s, %s format\\n"" , s -> audio_bits , s -> audio_sample_rate , ( s -> audio_channels == 2 ) ? ""stereo"" : ""mono"" , ( s -> audio_type == AV_CODEC_ID_INTERPLAY_DPCM ) ? ""Interplay audio"" : ""PCM"" )"	297:12:4983:5280	6723593	24	True				
ANR	6724266	CallExpression	"av_dlog ( NULL , ""audio: %d bits, %d Hz, %s, %s format\\n"" , s -> audio_bits , s -> audio_sample_rate , ( s -> audio_channels == 2 ) ? ""stereo"" : ""mono"" , ( s -> audio_type == AV_CODEC_ID_INTERPLAY_DPCM ) ? ""Interplay audio"" : ""PCM"" )"		6723593	0					
ANR	6724267	Callee	av_dlog		6723593	0					
ANR	6724268	Identifier	av_dlog		6723593	0					
ANR	6724269	ArgumentList	NULL		6723593	1					
ANR	6724270	Argument	NULL		6723593	0					
ANR	6724271	Identifier	NULL		6723593	0					
ANR	6724272	Argument	"""audio: %d bits, %d Hz, %s, %s format\\n"""		6723593	1					
ANR	6724273	PrimaryExpression	"""audio: %d bits, %d Hz, %s, %s format\\n"""		6723593	0					
ANR	6724274	Argument	s -> audio_bits		6723593	2					
ANR	6724275	PtrMemberAccess	s -> audio_bits		6723593	0					
ANR	6724276	Identifier	s		6723593	0					
ANR	6724277	Identifier	audio_bits		6723593	1					
ANR	6724278	Argument	s -> audio_sample_rate		6723593	3					
ANR	6724279	PtrMemberAccess	s -> audio_sample_rate		6723593	0					
ANR	6724280	Identifier	s		6723593	0					
ANR	6724281	Identifier	audio_sample_rate		6723593	1					
ANR	6724282	Argument	"( s -> audio_channels == 2 ) ? ""stereo"" : ""mono"""		6723593	4					
ANR	6724283	ConditionalExpression	"( s -> audio_channels == 2 ) ? ""stereo"" : ""mono"""		6723593	0					
ANR	6724284	Condition	s -> audio_channels == 2		6723593	0					
ANR	6724285	EqualityExpression	s -> audio_channels == 2		6723593	0		==			
ANR	6724286	PtrMemberAccess	s -> audio_channels		6723593	0					
ANR	6724287	Identifier	s		6723593	0					
ANR	6724288	Identifier	audio_channels		6723593	1					
ANR	6724289	PrimaryExpression	2		6723593	1					
ANR	6724290	PrimaryExpression	"""stereo"""		6723593	1					
ANR	6724291	PrimaryExpression	"""mono"""		6723593	2					
ANR	6724292	Argument	"( s -> audio_type == AV_CODEC_ID_INTERPLAY_DPCM ) ? ""Interplay audio"" : ""PCM"""		6723593	5					
ANR	6724293	ConditionalExpression	"( s -> audio_type == AV_CODEC_ID_INTERPLAY_DPCM ) ? ""Interplay audio"" : ""PCM"""		6723593	0					
ANR	6724294	Condition	s -> audio_type == AV_CODEC_ID_INTERPLAY_DPCM		6723593	0					
ANR	6724295	EqualityExpression	s -> audio_type == AV_CODEC_ID_INTERPLAY_DPCM		6723593	0		==			
ANR	6724296	PtrMemberAccess	s -> audio_type		6723593	0					
ANR	6724297	Identifier	s		6723593	0					
ANR	6724298	Identifier	audio_type		6723593	1					
ANR	6724299	Identifier	AV_CODEC_ID_INTERPLAY_DPCM		6723593	1					
ANR	6724300	PrimaryExpression	"""Interplay audio"""		6723593	1					
ANR	6724301	PrimaryExpression	"""PCM"""		6723593	2					
ANR	6724302	BreakStatement	break ;	307:12:5295:5300	6723593	25	True				
ANR	6724303	Label	case OPCODE_START_STOP_AUDIO :	311:8:5313:5341	6723593	26	True				
ANR	6724304	Identifier	OPCODE_START_STOP_AUDIO		6723593	0					
ANR	6724305	ExpressionStatement	"av_dlog ( NULL , ""start/stop audio\\n"" )"	313:12:5356:5391	6723593	27	True				
ANR	6724306	CallExpression	"av_dlog ( NULL , ""start/stop audio\\n"" )"		6723593	0					
ANR	6724307	Callee	av_dlog		6723593	0					
ANR	6724308	Identifier	av_dlog		6723593	0					
ANR	6724309	ArgumentList	NULL		6723593	1					
ANR	6724310	Argument	NULL		6723593	0					
ANR	6724311	Identifier	NULL		6723593	0					
ANR	6724312	Argument	"""start/stop audio\\n"""		6723593	1					
ANR	6724313	PrimaryExpression	"""start/stop audio\\n"""		6723593	0					
ANR	6724314	ExpressionStatement	"avio_skip ( pb , opcode_size )"	315:12:5406:5432	6723593	28	True				
ANR	6724315	CallExpression	"avio_skip ( pb , opcode_size )"		6723593	0					
ANR	6724316	Callee	avio_skip		6723593	0					
ANR	6724317	Identifier	avio_skip		6723593	0					
ANR	6724318	ArgumentList	pb		6723593	1					
ANR	6724319	Argument	pb		6723593	0					
ANR	6724320	Identifier	pb		6723593	0					
ANR	6724321	Argument	opcode_size		6723593	1					
ANR	6724322	Identifier	opcode_size		6723593	0					
ANR	6724323	BreakStatement	break ;	317:12:5447:5452	6723593	29	True				
ANR	6724324	Label	case OPCODE_INIT_VIDEO_BUFFERS :	321:8:5465:5495	6723593	30	True				
ANR	6724325	Identifier	OPCODE_INIT_VIDEO_BUFFERS		6723593	0					
ANR	6724326	ExpressionStatement	"av_dlog ( NULL , ""initialize video buffers\\n"" )"	323:12:5510:5553	6723593	31	True				
ANR	6724327	CallExpression	"av_dlog ( NULL , ""initialize video buffers\\n"" )"		6723593	0					
ANR	6724328	Callee	av_dlog		6723593	0					
ANR	6724329	Identifier	av_dlog		6723593	0					
ANR	6724330	ArgumentList	NULL		6723593	1					
ANR	6724331	Argument	NULL		6723593	0					
ANR	6724332	Identifier	NULL		6723593	0					
ANR	6724333	Argument	"""initialize video buffers\\n"""		6723593	1					
ANR	6724334	PrimaryExpression	"""initialize video buffers\\n"""		6723593	0					
ANR	6724335	IfStatement	if ( ( opcode_version > 2 ) || ( opcode_size > 8 ) || opcode_size < 4 || opcode_version == 2 && opcode_size < 8 )		6723593	32					
ANR	6724336	Condition	( opcode_version > 2 ) || ( opcode_size > 8 ) || opcode_size < 4 || opcode_version == 2 && opcode_size < 8	325:16:5572:5690	6723593	0	True				
ANR	6724337	OrExpression	( opcode_version > 2 ) || ( opcode_size > 8 ) || opcode_size < 4 || opcode_version == 2 && opcode_size < 8		6723593	0		||			
ANR	6724338	RelationalExpression	opcode_version > 2		6723593	0		>			
ANR	6724339	Identifier	opcode_version		6723593	0					
ANR	6724340	PrimaryExpression	2		6723593	1					
ANR	6724341	OrExpression	( opcode_size > 8 ) || opcode_size < 4 || opcode_version == 2 && opcode_size < 8		6723593	1		||			
ANR	6724342	RelationalExpression	opcode_size > 8		6723593	0		>			
ANR	6724343	Identifier	opcode_size		6723593	0					
ANR	6724344	PrimaryExpression	8		6723593	1					
ANR	6724345	OrExpression	opcode_size < 4 || opcode_version == 2 && opcode_size < 8		6723593	1		||			
ANR	6724346	RelationalExpression	opcode_size < 4		6723593	0		<			
ANR	6724347	Identifier	opcode_size		6723593	0					
ANR	6724348	PrimaryExpression	4		6723593	1					
ANR	6724349	AndExpression	opcode_version == 2 && opcode_size < 8		6723593	1		&&			
ANR	6724350	EqualityExpression	opcode_version == 2		6723593	0		==			
ANR	6724351	Identifier	opcode_version		6723593	0					
ANR	6724352	PrimaryExpression	2		6723593	1					
ANR	6724353	RelationalExpression	opcode_size < 8		6723593	1		<			
ANR	6724354	Identifier	opcode_size		6723593	0					
ANR	6724355	PrimaryExpression	8		6723593	1					
ANR	6724356	CompoundStatement		325:14:5618:5618	6723593	1					
ANR	6724357	ExpressionStatement	"av_dlog ( NULL , ""bad init_video_buffers opcode\\n"" )"	331:16:5726:5774	6723593	0	True				
ANR	6724358	CallExpression	"av_dlog ( NULL , ""bad init_video_buffers opcode\\n"" )"		6723593	0					
ANR	6724359	Callee	av_dlog		6723593	0					
ANR	6724360	Identifier	av_dlog		6723593	0					
ANR	6724361	ArgumentList	NULL		6723593	1					
ANR	6724362	Argument	NULL		6723593	0					
ANR	6724363	Identifier	NULL		6723593	0					
ANR	6724364	Argument	"""bad init_video_buffers opcode\\n"""		6723593	1					
ANR	6724365	PrimaryExpression	"""bad init_video_buffers opcode\\n"""		6723593	0					
ANR	6724366	ExpressionStatement	chunk_type = CHUNK_BAD	333:16:5793:5815	6723593	1	True				
ANR	6724367	AssignmentExpression	chunk_type = CHUNK_BAD		6723593	0		=			
ANR	6724368	Identifier	chunk_type		6723593	0					
ANR	6724369	Identifier	CHUNK_BAD		6723593	1					
ANR	6724370	BreakStatement	break ;	335:16:5834:5839	6723593	2	True				
ANR	6724371	IfStatement	"if ( avio_read ( pb , scratch , opcode_size ) != opcode_size )"		6723593	33					
ANR	6724372	Condition	"avio_read ( pb , scratch , opcode_size ) != opcode_size"	339:16:5873:5939	6723593	0	True				
ANR	6724373	EqualityExpression	"avio_read ( pb , scratch , opcode_size ) != opcode_size"		6723593	0		!=			
ANR	6724374	CallExpression	"avio_read ( pb , scratch , opcode_size )"		6723593	0					
ANR	6724375	Callee	avio_read		6723593	0					
ANR	6724376	Identifier	avio_read		6723593	0					
ANR	6724377	ArgumentList	pb		6723593	1					
ANR	6724378	Argument	pb		6723593	0					
ANR	6724379	Identifier	pb		6723593	0					
ANR	6724380	Argument	scratch		6723593	1					
ANR	6724381	Identifier	scratch		6723593	0					
ANR	6724382	Argument	opcode_size		6723593	2					
ANR	6724383	Identifier	opcode_size		6723593	0					
ANR	6724384	Identifier	opcode_size		6723593	1					
ANR	6724385	CompoundStatement		337:29:5853:5853	6723593	1					
ANR	6724386	ExpressionStatement	chunk_type = CHUNK_BAD	343:16:5961:5983	6723593	0	True				
ANR	6724387	AssignmentExpression	chunk_type = CHUNK_BAD		6723593	0		=			
ANR	6724388	Identifier	chunk_type		6723593	0					
ANR	6724389	Identifier	CHUNK_BAD		6723593	1					
ANR	6724390	BreakStatement	break ;	345:16:6002:6007	6723593	1	True				
ANR	6724391	ExpressionStatement	width = AV_RL16 ( & scratch [ 0 ] ) * 8	349:12:6037:6070	6723593	34	True				
ANR	6724392	AssignmentExpression	width = AV_RL16 ( & scratch [ 0 ] ) * 8		6723593	0		=			
ANR	6724393	Identifier	width		6723593	0					
ANR	6724394	MultiplicativeExpression	AV_RL16 ( & scratch [ 0 ] ) * 8		6723593	1		*			
ANR	6724395	CallExpression	AV_RL16 ( & scratch [ 0 ] )		6723593	0					
ANR	6724396	Callee	AV_RL16		6723593	0					
ANR	6724397	Identifier	AV_RL16		6723593	0					
ANR	6724398	ArgumentList	& scratch [ 0 ]		6723593	1					
ANR	6724399	Argument	& scratch [ 0 ]		6723593	0					
ANR	6724400	UnaryOperationExpression	& scratch [ 0 ]		6723593	0					
ANR	6724401	UnaryOperator	&		6723593	0					
ANR	6724402	ArrayIndexing	scratch [ 0 ]		6723593	1					
ANR	6724403	Identifier	scratch		6723593	0					
ANR	6724404	PrimaryExpression	0		6723593	1					
ANR	6724405	PrimaryExpression	8		6723593	1					
ANR	6724406	ExpressionStatement	height = AV_RL16 ( & scratch [ 2 ] ) * 8	351:12:6085:6118	6723593	35	True				
ANR	6724407	AssignmentExpression	height = AV_RL16 ( & scratch [ 2 ] ) * 8		6723593	0		=			
ANR	6724408	Identifier	height		6723593	0					
ANR	6724409	MultiplicativeExpression	AV_RL16 ( & scratch [ 2 ] ) * 8		6723593	1		*			
ANR	6724410	CallExpression	AV_RL16 ( & scratch [ 2 ] )		6723593	0					
ANR	6724411	Callee	AV_RL16		6723593	0					
ANR	6724412	Identifier	AV_RL16		6723593	0					
ANR	6724413	ArgumentList	& scratch [ 2 ]		6723593	1					
ANR	6724414	Argument	& scratch [ 2 ]		6723593	0					
ANR	6724415	UnaryOperationExpression	& scratch [ 2 ]		6723593	0					
ANR	6724416	UnaryOperator	&		6723593	0					
ANR	6724417	ArrayIndexing	scratch [ 2 ]		6723593	1					
ANR	6724418	Identifier	scratch		6723593	0					
ANR	6724419	PrimaryExpression	2		6723593	1					
ANR	6724420	PrimaryExpression	8		6723593	1					
ANR	6724421	IfStatement	if ( width != s -> video_width )		6723593	36					
ANR	6724422	Condition	width != s -> video_width	353:16:6137:6159	6723593	0	True				
ANR	6724423	EqualityExpression	width != s -> video_width		6723593	0		!=			
ANR	6724424	Identifier	width		6723593	0					
ANR	6724425	PtrMemberAccess	s -> video_width		6723593	1					
ANR	6724426	Identifier	s		6723593	0					
ANR	6724427	Identifier	video_width		6723593	1					
ANR	6724428	CompoundStatement		349:41:6073:6073	6723593	1					
ANR	6724429	ExpressionStatement	s -> video_width = width	355:16:6181:6203	6723593	0	True				
ANR	6724430	AssignmentExpression	s -> video_width = width		6723593	0		=			
ANR	6724431	PtrMemberAccess	s -> video_width		6723593	0					
ANR	6724432	Identifier	s		6723593	0					
ANR	6724433	Identifier	video_width		6723593	1					
ANR	6724434	Identifier	width		6723593	1					
ANR	6724435	ExpressionStatement	s -> changed ++	357:16:6222:6234	6723593	1	True				
ANR	6724436	PostIncDecOperationExpression	s -> changed ++		6723593	0					
ANR	6724437	PtrMemberAccess	s -> changed		6723593	0					
ANR	6724438	Identifier	s		6723593	0					
ANR	6724439	Identifier	changed		6723593	1					
ANR	6724440	IncDec	++		6723593	1					
ANR	6724441	IfStatement	if ( height != s -> video_height )		6723593	37					
ANR	6724442	Condition	height != s -> video_height	361:16:6268:6292	6723593	0	True				
ANR	6724443	EqualityExpression	height != s -> video_height		6723593	0		!=			
ANR	6724444	Identifier	height		6723593	0					
ANR	6724445	PtrMemberAccess	s -> video_height		6723593	1					
ANR	6724446	Identifier	s		6723593	0					
ANR	6724447	Identifier	video_height		6723593	1					
ANR	6724448	CompoundStatement		357:43:6206:6206	6723593	1					
ANR	6724449	ExpressionStatement	s -> video_height = height	363:16:6314:6338	6723593	0	True				
ANR	6724450	AssignmentExpression	s -> video_height = height		6723593	0		=			
ANR	6724451	PtrMemberAccess	s -> video_height		6723593	0					
ANR	6724452	Identifier	s		6723593	0					
ANR	6724453	Identifier	video_height		6723593	1					
ANR	6724454	Identifier	height		6723593	1					
ANR	6724455	ExpressionStatement	s -> changed ++	365:16:6357:6369	6723593	1	True				
ANR	6724456	PostIncDecOperationExpression	s -> changed ++		6723593	0					
ANR	6724457	PtrMemberAccess	s -> changed		6723593	0					
ANR	6724458	Identifier	s		6723593	0					
ANR	6724459	Identifier	changed		6723593	1					
ANR	6724460	IncDec	++		6723593	1					
ANR	6724461	IfStatement	if ( opcode_version < 2 || ! AV_RL16 ( & scratch [ 6 ] ) )		6723593	38					
ANR	6724462	Condition	opcode_version < 2 || ! AV_RL16 ( & scratch [ 6 ] )	369:16:6403:6445	6723593	0	True				
ANR	6724463	OrExpression	opcode_version < 2 || ! AV_RL16 ( & scratch [ 6 ] )		6723593	0		||			
ANR	6724464	RelationalExpression	opcode_version < 2		6723593	0		<			
ANR	6724465	Identifier	opcode_version		6723593	0					
ANR	6724466	PrimaryExpression	2		6723593	1					
ANR	6724467	UnaryOperationExpression	! AV_RL16 ( & scratch [ 6 ] )		6723593	1					
ANR	6724468	UnaryOperator	!		6723593	0					
ANR	6724469	CallExpression	AV_RL16 ( & scratch [ 6 ] )		6723593	1					
ANR	6724470	Callee	AV_RL16		6723593	0					
ANR	6724471	Identifier	AV_RL16		6723593	0					
ANR	6724472	ArgumentList	& scratch [ 6 ]		6723593	1					
ANR	6724473	Argument	& scratch [ 6 ]		6723593	0					
ANR	6724474	UnaryOperationExpression	& scratch [ 6 ]		6723593	0					
ANR	6724475	UnaryOperator	&		6723593	0					
ANR	6724476	ArrayIndexing	scratch [ 6 ]		6723593	1					
ANR	6724477	Identifier	scratch		6723593	0					
ANR	6724478	PrimaryExpression	6		6723593	1					
ANR	6724479	CompoundStatement		365:61:6359:6359	6723593	1					
ANR	6724480	ExpressionStatement	s -> video_bpp = 8	371:16:6467:6483	6723593	0	True				
ANR	6724481	AssignmentExpression	s -> video_bpp = 8		6723593	0		=			
ANR	6724482	PtrMemberAccess	s -> video_bpp		6723593	0					
ANR	6724483	Identifier	s		6723593	0					
ANR	6724484	Identifier	video_bpp		6723593	1					
ANR	6724485	PrimaryExpression	8		6723593	1					
ANR	6724486	ElseStatement	else		6723593	0					
ANR	6724487	CompoundStatement		369:19:6416:6416	6723593	0					
ANR	6724488	ExpressionStatement	s -> video_bpp = 16	375:16:6524:6541	6723593	0	True				
ANR	6724489	AssignmentExpression	s -> video_bpp = 16		6723593	0		=			
ANR	6724490	PtrMemberAccess	s -> video_bpp		6723593	0					
ANR	6724491	Identifier	s		6723593	0					
ANR	6724492	Identifier	video_bpp		6723593	1					
ANR	6724493	PrimaryExpression	16		6723593	1					
ANR	6724494	ExpressionStatement	"av_dlog ( NULL , ""video resolution: %d x %d\\n"" , s -> video_width , s -> video_height )"	379:12:6571:6669	6723593	39	True				
ANR	6724495	CallExpression	"av_dlog ( NULL , ""video resolution: %d x %d\\n"" , s -> video_width , s -> video_height )"		6723593	0					
ANR	6724496	Callee	av_dlog		6723593	0					
ANR	6724497	Identifier	av_dlog		6723593	0					
ANR	6724498	ArgumentList	NULL		6723593	1					
ANR	6724499	Argument	NULL		6723593	0					
ANR	6724500	Identifier	NULL		6723593	0					
ANR	6724501	Argument	"""video resolution: %d x %d\\n"""		6723593	1					
ANR	6724502	PrimaryExpression	"""video resolution: %d x %d\\n"""		6723593	0					
ANR	6724503	Argument	s -> video_width		6723593	2					
ANR	6724504	PtrMemberAccess	s -> video_width		6723593	0					
ANR	6724505	Identifier	s		6723593	0					
ANR	6724506	Identifier	video_width		6723593	1					
ANR	6724507	Argument	s -> video_height		6723593	3					
ANR	6724508	PtrMemberAccess	s -> video_height		6723593	0					
ANR	6724509	Identifier	s		6723593	0					
ANR	6724510	Identifier	video_height		6723593	1					
ANR	6724511	BreakStatement	break ;	383:12:6684:6689	6723593	40	True				
ANR	6724512	Label	case OPCODE_UNKNOWN_06 :	387:8:6702:6724	6723593	41	True				
ANR	6724513	Identifier	OPCODE_UNKNOWN_06		6723593	0					
ANR	6724514	Label	case OPCODE_UNKNOWN_0E :	389:8:6735:6757	6723593	42	True				
ANR	6724515	Identifier	OPCODE_UNKNOWN_0E		6723593	0					
ANR	6724516	Label	case OPCODE_UNKNOWN_10 :	391:8:6768:6790	6723593	43	True				
ANR	6724517	Identifier	OPCODE_UNKNOWN_10		6723593	0					
ANR	6724518	Label	case OPCODE_UNKNOWN_12 :	393:8:6801:6823	6723593	44	True				
ANR	6724519	Identifier	OPCODE_UNKNOWN_12		6723593	0					
ANR	6724520	Label	case OPCODE_UNKNOWN_13 :	395:8:6834:6856	6723593	45	True				
ANR	6724521	Identifier	OPCODE_UNKNOWN_13		6723593	0					
ANR	6724522	Label	case OPCODE_UNKNOWN_14 :	397:8:6867:6889	6723593	46	True				
ANR	6724523	Identifier	OPCODE_UNKNOWN_14		6723593	0					
ANR	6724524	Label	case OPCODE_UNKNOWN_15 :	399:8:6900:6922	6723593	47	True				
ANR	6724525	Identifier	OPCODE_UNKNOWN_15		6723593	0					
ANR	6724526	ExpressionStatement	"av_dlog ( NULL , ""unknown (but documented) opcode %02X\\n"" , opcode_type )"	401:12:6937:7005	6723593	48	True				
ANR	6724527	CallExpression	"av_dlog ( NULL , ""unknown (but documented) opcode %02X\\n"" , opcode_type )"		6723593	0					
ANR	6724528	Callee	av_dlog		6723593	0					
ANR	6724529	Identifier	av_dlog		6723593	0					
ANR	6724530	ArgumentList	NULL		6723593	1					
ANR	6724531	Argument	NULL		6723593	0					
ANR	6724532	Identifier	NULL		6723593	0					
ANR	6724533	Argument	"""unknown (but documented) opcode %02X\\n"""		6723593	1					
ANR	6724534	PrimaryExpression	"""unknown (but documented) opcode %02X\\n"""		6723593	0					
ANR	6724535	Argument	opcode_type		6723593	2					
ANR	6724536	Identifier	opcode_type		6723593	0					
ANR	6724537	ExpressionStatement	"avio_skip ( pb , opcode_size )"	403:12:7020:7046	6723593	49	True				
ANR	6724538	CallExpression	"avio_skip ( pb , opcode_size )"		6723593	0					
ANR	6724539	Callee	avio_skip		6723593	0					
ANR	6724540	Identifier	avio_skip		6723593	0					
ANR	6724541	ArgumentList	pb		6723593	1					
ANR	6724542	Argument	pb		6723593	0					
ANR	6724543	Identifier	pb		6723593	0					
ANR	6724544	Argument	opcode_size		6723593	1					
ANR	6724545	Identifier	opcode_size		6723593	0					
ANR	6724546	BreakStatement	break ;	405:12:7061:7066	6723593	50	True				
ANR	6724547	Label	case OPCODE_SEND_BUFFER :	409:8:7079:7102	6723593	51	True				
ANR	6724548	Identifier	OPCODE_SEND_BUFFER		6723593	0					
ANR	6724549	ExpressionStatement	"av_dlog ( NULL , ""send buffer\\n"" )"	411:12:7117:7147	6723593	52	True				
ANR	6724550	CallExpression	"av_dlog ( NULL , ""send buffer\\n"" )"		6723593	0					
ANR	6724551	Callee	av_dlog		6723593	0					
ANR	6724552	Identifier	av_dlog		6723593	0					
ANR	6724553	ArgumentList	NULL		6723593	1					
ANR	6724554	Argument	NULL		6723593	0					
ANR	6724555	Identifier	NULL		6723593	0					
ANR	6724556	Argument	"""send buffer\\n"""		6723593	1					
ANR	6724557	PrimaryExpression	"""send buffer\\n"""		6723593	0					
ANR	6724558	ExpressionStatement	"avio_skip ( pb , opcode_size )"	413:12:7162:7188	6723593	53	True				
ANR	6724559	CallExpression	"avio_skip ( pb , opcode_size )"		6723593	0					
ANR	6724560	Callee	avio_skip		6723593	0					
ANR	6724561	Identifier	avio_skip		6723593	0					
ANR	6724562	ArgumentList	pb		6723593	1					
ANR	6724563	Argument	pb		6723593	0					
ANR	6724564	Identifier	pb		6723593	0					
ANR	6724565	Argument	opcode_size		6723593	1					
ANR	6724566	Identifier	opcode_size		6723593	0					
ANR	6724567	BreakStatement	break ;	415:12:7203:7208	6723593	54	True				
ANR	6724568	Label	case OPCODE_AUDIO_FRAME :	419:8:7221:7244	6723593	55	True				
ANR	6724569	Identifier	OPCODE_AUDIO_FRAME		6723593	0					
ANR	6724570	ExpressionStatement	"av_dlog ( NULL , ""audio frame\\n"" )"	421:12:7259:7289	6723593	56	True				
ANR	6724571	CallExpression	"av_dlog ( NULL , ""audio frame\\n"" )"		6723593	0					
ANR	6724572	Callee	av_dlog		6723593	0					
ANR	6724573	Identifier	av_dlog		6723593	0					
ANR	6724574	ArgumentList	NULL		6723593	1					
ANR	6724575	Argument	NULL		6723593	0					
ANR	6724576	Identifier	NULL		6723593	0					
ANR	6724577	Argument	"""audio frame\\n"""		6723593	1					
ANR	6724578	PrimaryExpression	"""audio frame\\n"""		6723593	0					
ANR	6724579	ExpressionStatement	s -> audio_chunk_offset = avio_tell ( pb )	427:12:7358:7395	6723593	57	True				
ANR	6724580	AssignmentExpression	s -> audio_chunk_offset = avio_tell ( pb )		6723593	0		=			
ANR	6724581	PtrMemberAccess	s -> audio_chunk_offset		6723593	0					
ANR	6724582	Identifier	s		6723593	0					
ANR	6724583	Identifier	audio_chunk_offset		6723593	1					
ANR	6724584	CallExpression	avio_tell ( pb )		6723593	1					
ANR	6724585	Callee	avio_tell		6723593	0					
ANR	6724586	Identifier	avio_tell		6723593	0					
ANR	6724587	ArgumentList	pb		6723593	1					
ANR	6724588	Argument	pb		6723593	0					
ANR	6724589	Identifier	pb		6723593	0					
ANR	6724590	ExpressionStatement	s -> audio_chunk_size = opcode_size	429:12:7410:7443	6723593	58	True				
ANR	6724591	AssignmentExpression	s -> audio_chunk_size = opcode_size		6723593	0		=			
ANR	6724592	PtrMemberAccess	s -> audio_chunk_size		6723593	0					
ANR	6724593	Identifier	s		6723593	0					
ANR	6724594	Identifier	audio_chunk_size		6723593	1					
ANR	6724595	Identifier	opcode_size		6723593	1					
ANR	6724596	ExpressionStatement	"avio_skip ( pb , opcode_size )"	431:12:7458:7484	6723593	59	True				
ANR	6724597	CallExpression	"avio_skip ( pb , opcode_size )"		6723593	0					
ANR	6724598	Callee	avio_skip		6723593	0					
ANR	6724599	Identifier	avio_skip		6723593	0					
ANR	6724600	ArgumentList	pb		6723593	1					
ANR	6724601	Argument	pb		6723593	0					
ANR	6724602	Identifier	pb		6723593	0					
ANR	6724603	Argument	opcode_size		6723593	1					
ANR	6724604	Identifier	opcode_size		6723593	0					
ANR	6724605	BreakStatement	break ;	433:12:7499:7504	6723593	60	True				
ANR	6724606	Label	case OPCODE_SILENCE_FRAME :	437:8:7517:7542	6723593	61	True				
ANR	6724607	Identifier	OPCODE_SILENCE_FRAME		6723593	0					
ANR	6724608	ExpressionStatement	"av_dlog ( NULL , ""silence frame\\n"" )"	439:12:7557:7589	6723593	62	True				
ANR	6724609	CallExpression	"av_dlog ( NULL , ""silence frame\\n"" )"		6723593	0					
ANR	6724610	Callee	av_dlog		6723593	0					
ANR	6724611	Identifier	av_dlog		6723593	0					
ANR	6724612	ArgumentList	NULL		6723593	1					
ANR	6724613	Argument	NULL		6723593	0					
ANR	6724614	Identifier	NULL		6723593	0					
ANR	6724615	Argument	"""silence frame\\n"""		6723593	1					
ANR	6724616	PrimaryExpression	"""silence frame\\n"""		6723593	0					
ANR	6724617	ExpressionStatement	"avio_skip ( pb , opcode_size )"	441:12:7604:7630	6723593	63	True				
ANR	6724618	CallExpression	"avio_skip ( pb , opcode_size )"		6723593	0					
ANR	6724619	Callee	avio_skip		6723593	0					
ANR	6724620	Identifier	avio_skip		6723593	0					
ANR	6724621	ArgumentList	pb		6723593	1					
ANR	6724622	Argument	pb		6723593	0					
ANR	6724623	Identifier	pb		6723593	0					
ANR	6724624	Argument	opcode_size		6723593	1					
ANR	6724625	Identifier	opcode_size		6723593	0					
ANR	6724626	BreakStatement	break ;	443:12:7645:7650	6723593	64	True				
ANR	6724627	Label	case OPCODE_INIT_VIDEO_MODE :	447:8:7663:7690	6723593	65	True				
ANR	6724628	Identifier	OPCODE_INIT_VIDEO_MODE		6723593	0					
ANR	6724629	ExpressionStatement	"av_dlog ( NULL , ""initialize video mode\\n"" )"	449:12:7705:7745	6723593	66	True				
ANR	6724630	CallExpression	"av_dlog ( NULL , ""initialize video mode\\n"" )"		6723593	0					
ANR	6724631	Callee	av_dlog		6723593	0					
ANR	6724632	Identifier	av_dlog		6723593	0					
ANR	6724633	ArgumentList	NULL		6723593	1					
ANR	6724634	Argument	NULL		6723593	0					
ANR	6724635	Identifier	NULL		6723593	0					
ANR	6724636	Argument	"""initialize video mode\\n"""		6723593	1					
ANR	6724637	PrimaryExpression	"""initialize video mode\\n"""		6723593	0					
ANR	6724638	ExpressionStatement	"avio_skip ( pb , opcode_size )"	451:12:7760:7786	6723593	67	True				
ANR	6724639	CallExpression	"avio_skip ( pb , opcode_size )"		6723593	0					
ANR	6724640	Callee	avio_skip		6723593	0					
ANR	6724641	Identifier	avio_skip		6723593	0					
ANR	6724642	ArgumentList	pb		6723593	1					
ANR	6724643	Argument	pb		6723593	0					
ANR	6724644	Identifier	pb		6723593	0					
ANR	6724645	Argument	opcode_size		6723593	1					
ANR	6724646	Identifier	opcode_size		6723593	0					
ANR	6724647	BreakStatement	break ;	453:12:7801:7806	6723593	68	True				
ANR	6724648	Label	case OPCODE_CREATE_GRADIENT :	457:8:7819:7846	6723593	69	True				
ANR	6724649	Identifier	OPCODE_CREATE_GRADIENT		6723593	0					
ANR	6724650	ExpressionStatement	"av_dlog ( NULL , ""create gradient\\n"" )"	459:12:7861:7895	6723593	70	True				
ANR	6724651	CallExpression	"av_dlog ( NULL , ""create gradient\\n"" )"		6723593	0					
ANR	6724652	Callee	av_dlog		6723593	0					
ANR	6724653	Identifier	av_dlog		6723593	0					
ANR	6724654	ArgumentList	NULL		6723593	1					
ANR	6724655	Argument	NULL		6723593	0					
ANR	6724656	Identifier	NULL		6723593	0					
ANR	6724657	Argument	"""create gradient\\n"""		6723593	1					
ANR	6724658	PrimaryExpression	"""create gradient\\n"""		6723593	0					
ANR	6724659	ExpressionStatement	"avio_skip ( pb , opcode_size )"	461:12:7910:7936	6723593	71	True				
ANR	6724660	CallExpression	"avio_skip ( pb , opcode_size )"		6723593	0					
ANR	6724661	Callee	avio_skip		6723593	0					
ANR	6724662	Identifier	avio_skip		6723593	0					
ANR	6724663	ArgumentList	pb		6723593	1					
ANR	6724664	Argument	pb		6723593	0					
ANR	6724665	Identifier	pb		6723593	0					
ANR	6724666	Argument	opcode_size		6723593	1					
ANR	6724667	Identifier	opcode_size		6723593	0					
ANR	6724668	BreakStatement	break ;	463:12:7951:7956	6723593	72	True				
ANR	6724669	Label	case OPCODE_SET_PALETTE :	467:8:7969:7992	6723593	73	True				
ANR	6724670	Identifier	OPCODE_SET_PALETTE		6723593	0					
ANR	6724671	ExpressionStatement	"av_dlog ( NULL , ""set palette\\n"" )"	469:12:8007:8037	6723593	74	True				
ANR	6724672	CallExpression	"av_dlog ( NULL , ""set palette\\n"" )"		6723593	0					
ANR	6724673	Callee	av_dlog		6723593	0					
ANR	6724674	Identifier	av_dlog		6723593	0					
ANR	6724675	ArgumentList	NULL		6723593	1					
ANR	6724676	Argument	NULL		6723593	0					
ANR	6724677	Identifier	NULL		6723593	0					
ANR	6724678	Argument	"""set palette\\n"""		6723593	1					
ANR	6724679	PrimaryExpression	"""set palette\\n"""		6723593	0					
ANR	6724680	IfStatement	if ( opcode_size > 0x304 )		6723593	75					
ANR	6724681	Condition	opcode_size > 0x304	475:16:8154:8172	6723593	0	True				
ANR	6724682	RelationalExpression	opcode_size > 0x304		6723593	0		>			
ANR	6724683	Identifier	opcode_size		6723593	0					
ANR	6724684	PrimaryExpression	0x304		6723593	1					
ANR	6724685	CompoundStatement		471:37:8086:8086	6723593	1					
ANR	6724686	ExpressionStatement	"av_dlog ( NULL , ""demux_ipmovie: set_palette opcode too large\\n"" )"	477:16:8194:8256	6723593	0	True				
ANR	6724687	CallExpression	"av_dlog ( NULL , ""demux_ipmovie: set_palette opcode too large\\n"" )"		6723593	0					
ANR	6724688	Callee	av_dlog		6723593	0					
ANR	6724689	Identifier	av_dlog		6723593	0					
ANR	6724690	ArgumentList	NULL		6723593	1					
ANR	6724691	Argument	NULL		6723593	0					
ANR	6724692	Identifier	NULL		6723593	0					
ANR	6724693	Argument	"""demux_ipmovie: set_palette opcode too large\\n"""		6723593	1					
ANR	6724694	PrimaryExpression	"""demux_ipmovie: set_palette opcode too large\\n"""		6723593	0					
ANR	6724695	ExpressionStatement	chunk_type = CHUNK_BAD	479:16:8275:8297	6723593	1	True				
ANR	6724696	AssignmentExpression	chunk_type = CHUNK_BAD		6723593	0		=			
ANR	6724697	Identifier	chunk_type		6723593	0					
ANR	6724698	Identifier	CHUNK_BAD		6723593	1					
ANR	6724699	BreakStatement	break ;	481:16:8316:8321	6723593	2	True				
ANR	6724700	IfStatement	"if ( avio_read ( pb , scratch , opcode_size ) != opcode_size )"		6723593	76					
ANR	6724701	Condition	"avio_read ( pb , scratch , opcode_size ) != opcode_size"	485:16:8355:8404	6723593	0	True				
ANR	6724702	EqualityExpression	"avio_read ( pb , scratch , opcode_size ) != opcode_size"		6723593	0		!=			
ANR	6724703	CallExpression	"avio_read ( pb , scratch , opcode_size )"		6723593	0					
ANR	6724704	Callee	avio_read		6723593	0					
ANR	6724705	Identifier	avio_read		6723593	0					
ANR	6724706	ArgumentList	pb		6723593	1					
ANR	6724707	Argument	pb		6723593	0					
ANR	6724708	Identifier	pb		6723593	0					
ANR	6724709	Argument	scratch		6723593	1					
ANR	6724710	Identifier	scratch		6723593	0					
ANR	6724711	Argument	opcode_size		6723593	2					
ANR	6724712	Identifier	opcode_size		6723593	0					
ANR	6724713	Identifier	opcode_size		6723593	1					
ANR	6724714	CompoundStatement		481:68:8318:8318	6723593	1					
ANR	6724715	ExpressionStatement	chunk_type = CHUNK_BAD	487:16:8426:8448	6723593	0	True				
ANR	6724716	AssignmentExpression	chunk_type = CHUNK_BAD		6723593	0		=			
ANR	6724717	Identifier	chunk_type		6723593	0					
ANR	6724718	Identifier	CHUNK_BAD		6723593	1					
ANR	6724719	BreakStatement	break ;	489:16:8467:8472	6723593	1	True				
ANR	6724720	ExpressionStatement	first_color = AV_RL16 ( & scratch [ 0 ] )	497:12:8569:8603	6723593	77	True				
ANR	6724721	AssignmentExpression	first_color = AV_RL16 ( & scratch [ 0 ] )		6723593	0		=			
ANR	6724722	Identifier	first_color		6723593	0					
ANR	6724723	CallExpression	AV_RL16 ( & scratch [ 0 ] )		6723593	1					
ANR	6724724	Callee	AV_RL16		6723593	0					
ANR	6724725	Identifier	AV_RL16		6723593	0					
ANR	6724726	ArgumentList	& scratch [ 0 ]		6723593	1					
ANR	6724727	Argument	& scratch [ 0 ]		6723593	0					
ANR	6724728	UnaryOperationExpression	& scratch [ 0 ]		6723593	0					
ANR	6724729	UnaryOperator	&		6723593	0					
ANR	6724730	ArrayIndexing	scratch [ 0 ]		6723593	1					
ANR	6724731	Identifier	scratch		6723593	0					
ANR	6724732	PrimaryExpression	0		6723593	1					
ANR	6724733	ExpressionStatement	last_color = first_color + AV_RL16 ( & scratch [ 2 ] ) - 1	499:12:8618:8669	6723593	78	True				
ANR	6724734	AssignmentExpression	last_color = first_color + AV_RL16 ( & scratch [ 2 ] ) - 1		6723593	0		=			
ANR	6724735	Identifier	last_color		6723593	0					
ANR	6724736	AdditiveExpression	first_color + AV_RL16 ( & scratch [ 2 ] ) - 1		6723593	1		+			
ANR	6724737	Identifier	first_color		6723593	0					
ANR	6724738	AdditiveExpression	AV_RL16 ( & scratch [ 2 ] ) - 1		6723593	1		-			
ANR	6724739	CallExpression	AV_RL16 ( & scratch [ 2 ] )		6723593	0					
ANR	6724740	Callee	AV_RL16		6723593	0					
ANR	6724741	Identifier	AV_RL16		6723593	0					
ANR	6724742	ArgumentList	& scratch [ 2 ]		6723593	1					
ANR	6724743	Argument	& scratch [ 2 ]		6723593	0					
ANR	6724744	UnaryOperationExpression	& scratch [ 2 ]		6723593	0					
ANR	6724745	UnaryOperator	&		6723593	0					
ANR	6724746	ArrayIndexing	scratch [ 2 ]		6723593	1					
ANR	6724747	Identifier	scratch		6723593	0					
ANR	6724748	PrimaryExpression	2		6723593	1					
ANR	6724749	PrimaryExpression	1		6723593	1					
ANR	6724750	IfStatement	if ( ( first_color > 0xFF ) || ( last_color > 0xFF ) )		6723593	79					
ANR	6724751	Condition	( first_color > 0xFF ) || ( last_color > 0xFF )	503:16:8751:8793	6723593	0	True				
ANR	6724752	OrExpression	( first_color > 0xFF ) || ( last_color > 0xFF )		6723593	0		||			
ANR	6724753	RelationalExpression	first_color > 0xFF		6723593	0		>			
ANR	6724754	Identifier	first_color		6723593	0					
ANR	6724755	PrimaryExpression	0xFF		6723593	1					
ANR	6724756	RelationalExpression	last_color > 0xFF		6723593	1		>			
ANR	6724757	Identifier	last_color		6723593	0					
ANR	6724758	PrimaryExpression	0xFF		6723593	1					
ANR	6724759	CompoundStatement		499:61:8707:8707	6723593	1					
ANR	6724760	ExpressionStatement	"av_dlog ( NULL , ""demux_ipmovie: set_palette indexes out of range (%d -> %d)\\n"" , first_color , last_color )"	505:16:8815:8938	6723593	0	True				
ANR	6724761	CallExpression	"av_dlog ( NULL , ""demux_ipmovie: set_palette indexes out of range (%d -> %d)\\n"" , first_color , last_color )"		6723593	0					
ANR	6724762	Callee	av_dlog		6723593	0					
ANR	6724763	Identifier	av_dlog		6723593	0					
ANR	6724764	ArgumentList	NULL		6723593	1					
ANR	6724765	Argument	NULL		6723593	0					
ANR	6724766	Identifier	NULL		6723593	0					
ANR	6724767	Argument	"""demux_ipmovie: set_palette indexes out of range (%d -> %d)\\n"""		6723593	1					
ANR	6724768	PrimaryExpression	"""demux_ipmovie: set_palette indexes out of range (%d -> %d)\\n"""		6723593	0					
ANR	6724769	Argument	first_color		6723593	2					
ANR	6724770	Identifier	first_color		6723593	0					
ANR	6724771	Argument	last_color		6723593	3					
ANR	6724772	Identifier	last_color		6723593	0					
ANR	6724773	ExpressionStatement	chunk_type = CHUNK_BAD	509:16:8957:8979	6723593	1	True				
ANR	6724774	AssignmentExpression	chunk_type = CHUNK_BAD		6723593	0		=			
ANR	6724775	Identifier	chunk_type		6723593	0					
ANR	6724776	Identifier	CHUNK_BAD		6723593	1					
ANR	6724777	BreakStatement	break ;	511:16:8998:9003	6723593	2	True				
ANR	6724778	ExpressionStatement	j = 4	515:12:9033:9038	6723593	80	True				
ANR	6724779	AssignmentExpression	j = 4		6723593	0		=			
ANR	6724780	Identifier	j		6723593	0					
ANR	6724781	PrimaryExpression	4		6723593	1					
ANR	6724782	ForStatement	for ( i = first_color ; i <= last_color ; i ++ )		6723593	81					
ANR	6724783	ForInit	i = first_color ;	517:17:9094:9109	6723593	0	True				
ANR	6724784	AssignmentExpression	i = first_color		6723593	0		=			
ANR	6724785	Identifier	i		6723593	0					
ANR	6724786	Identifier	first_color		6723593	1					
ANR	6724787	Condition	i <= last_color	517:34:9111:9125	6723593	1	True				
ANR	6724788	RelationalExpression	i <= last_color		6723593	0		<=			
ANR	6724789	Identifier	i		6723593	0					
ANR	6724790	Identifier	last_color		6723593	1					
ANR	6724791	PostIncDecOperationExpression	i ++	517:51:9128:9130	6723593	2	True				
ANR	6724792	Identifier	i		6723593	0					
ANR	6724793	IncDec	++		6723593	1					
ANR	6724794	CompoundStatement		513:56:9044:9044	6723593	3					
ANR	6724795	ExpressionStatement	r = scratch [ j ++ ] * 4	523:16:9292:9312	6723593	0	True				
ANR	6724796	AssignmentExpression	r = scratch [ j ++ ] * 4		6723593	0		=			
ANR	6724797	Identifier	r		6723593	0					
ANR	6724798	MultiplicativeExpression	scratch [ j ++ ] * 4		6723593	1		*			
ANR	6724799	ArrayIndexing	scratch [ j ++ ]		6723593	0					
ANR	6724800	Identifier	scratch		6723593	0					
ANR	6724801	PostIncDecOperationExpression	j ++		6723593	1					
ANR	6724802	Identifier	j		6723593	0					
ANR	6724803	IncDec	++		6723593	1					
ANR	6724804	PrimaryExpression	4		6723593	1					
ANR	6724805	ExpressionStatement	g = scratch [ j ++ ] * 4	525:16:9331:9351	6723593	1	True				
ANR	6724806	AssignmentExpression	g = scratch [ j ++ ] * 4		6723593	0		=			
ANR	6724807	Identifier	g		6723593	0					
ANR	6724808	MultiplicativeExpression	scratch [ j ++ ] * 4		6723593	1		*			
ANR	6724809	ArrayIndexing	scratch [ j ++ ]		6723593	0					
ANR	6724810	Identifier	scratch		6723593	0					
ANR	6724811	PostIncDecOperationExpression	j ++		6723593	1					
ANR	6724812	Identifier	j		6723593	0					
ANR	6724813	IncDec	++		6723593	1					
ANR	6724814	PrimaryExpression	4		6723593	1					
ANR	6724815	ExpressionStatement	b = scratch [ j ++ ] * 4	527:16:9370:9390	6723593	2	True				
ANR	6724816	AssignmentExpression	b = scratch [ j ++ ] * 4		6723593	0		=			
ANR	6724817	Identifier	b		6723593	0					
ANR	6724818	MultiplicativeExpression	scratch [ j ++ ] * 4		6723593	1		*			
ANR	6724819	ArrayIndexing	scratch [ j ++ ]		6723593	0					
ANR	6724820	Identifier	scratch		6723593	0					
ANR	6724821	PostIncDecOperationExpression	j ++		6723593	1					
ANR	6724822	Identifier	j		6723593	0					
ANR	6724823	IncDec	++		6723593	1					
ANR	6724824	PrimaryExpression	4		6723593	1					
ANR	6724825	ExpressionStatement	s -> palette [ i ] = ( 0xFFU << 24 ) | ( r << 16 ) | ( g << 8 ) | ( b )	529:16:9409:9467	6723593	3	True				
ANR	6724826	AssignmentExpression	s -> palette [ i ] = ( 0xFFU << 24 ) | ( r << 16 ) | ( g << 8 ) | ( b )		6723593	0		=			
ANR	6724827	ArrayIndexing	s -> palette [ i ]		6723593	0					
ANR	6724828	PtrMemberAccess	s -> palette		6723593	0					
ANR	6724829	Identifier	s		6723593	0					
ANR	6724830	Identifier	palette		6723593	1					
ANR	6724831	Identifier	i		6723593	1					
ANR	6724832	InclusiveOrExpression	( 0xFFU << 24 ) | ( r << 16 ) | ( g << 8 ) | ( b )		6723593	1		|			
ANR	6724833	ShiftExpression	0xFFU << 24		6723593	0		<<			
ANR	6724834	PrimaryExpression	0xFFU		6723593	0					
ANR	6724835	PrimaryExpression	24		6723593	1					
ANR	6724836	InclusiveOrExpression	( r << 16 ) | ( g << 8 ) | ( b )		6723593	1		|			
ANR	6724837	ShiftExpression	r << 16		6723593	0		<<			
ANR	6724838	Identifier	r		6723593	0					
ANR	6724839	PrimaryExpression	16		6723593	1					
ANR	6724840	InclusiveOrExpression	( g << 8 ) | ( b )		6723593	1		|			
ANR	6724841	ShiftExpression	g << 8		6723593	0		<<			
ANR	6724842	Identifier	g		6723593	0					
ANR	6724843	PrimaryExpression	8		6723593	1					
ANR	6724844	Identifier	b		6723593	1					
ANR	6724845	ExpressionStatement	s -> palette [ i ] |= s -> palette [ i ] >> 6 & 0x30303	531:16:9486:9531	6723593	4	True				
ANR	6724846	AssignmentExpression	s -> palette [ i ] |= s -> palette [ i ] >> 6 & 0x30303		6723593	0		|=			
ANR	6724847	ArrayIndexing	s -> palette [ i ]		6723593	0					
ANR	6724848	PtrMemberAccess	s -> palette		6723593	0					
ANR	6724849	Identifier	s		6723593	0					
ANR	6724850	Identifier	palette		6723593	1					
ANR	6724851	Identifier	i		6723593	1					
ANR	6724852	BitAndExpression	s -> palette [ i ] >> 6 & 0x30303		6723593	1		&			
ANR	6724853	ShiftExpression	s -> palette [ i ] >> 6		6723593	0		>>			
ANR	6724854	ArrayIndexing	s -> palette [ i ]		6723593	0					
ANR	6724855	PtrMemberAccess	s -> palette		6723593	0					
ANR	6724856	Identifier	s		6723593	0					
ANR	6724857	Identifier	palette		6723593	1					
ANR	6724858	Identifier	i		6723593	1					
ANR	6724859	PrimaryExpression	6		6723593	1					
ANR	6724860	PrimaryExpression	0x30303		6723593	1					
ANR	6724861	ExpressionStatement	s -> has_palette = 1	535:12:9561:9579	6723593	82	True				
ANR	6724862	AssignmentExpression	s -> has_palette = 1		6723593	0		=			
ANR	6724863	PtrMemberAccess	s -> has_palette		6723593	0					
ANR	6724864	Identifier	s		6723593	0					
ANR	6724865	Identifier	has_palette		6723593	1					
ANR	6724866	PrimaryExpression	1		6723593	1					
ANR	6724867	BreakStatement	break ;	537:12:9594:9599	6723593	83	True				
ANR	6724868	Label	case OPCODE_SET_PALETTE_COMPRESSED :	541:8:9612:9646	6723593	84	True				
ANR	6724869	Identifier	OPCODE_SET_PALETTE_COMPRESSED		6723593	0					
ANR	6724870	ExpressionStatement	"av_dlog ( NULL , ""set palette compressed\\n"" )"	543:12:9661:9702	6723593	85	True				
ANR	6724871	CallExpression	"av_dlog ( NULL , ""set palette compressed\\n"" )"		6723593	0					
ANR	6724872	Callee	av_dlog		6723593	0					
ANR	6724873	Identifier	av_dlog		6723593	0					
ANR	6724874	ArgumentList	NULL		6723593	1					
ANR	6724875	Argument	NULL		6723593	0					
ANR	6724876	Identifier	NULL		6723593	0					
ANR	6724877	Argument	"""set palette compressed\\n"""		6723593	1					
ANR	6724878	PrimaryExpression	"""set palette compressed\\n"""		6723593	0					
ANR	6724879	ExpressionStatement	"avio_skip ( pb , opcode_size )"	545:12:9717:9743	6723593	86	True				
ANR	6724880	CallExpression	"avio_skip ( pb , opcode_size )"		6723593	0					
ANR	6724881	Callee	avio_skip		6723593	0					
ANR	6724882	Identifier	avio_skip		6723593	0					
ANR	6724883	ArgumentList	pb		6723593	1					
ANR	6724884	Argument	pb		6723593	0					
ANR	6724885	Identifier	pb		6723593	0					
ANR	6724886	Argument	opcode_size		6723593	1					
ANR	6724887	Identifier	opcode_size		6723593	0					
ANR	6724888	BreakStatement	break ;	547:12:9758:9763	6723593	87	True				
ANR	6724889	Label	case OPCODE_SET_DECODING_MAP :	551:8:9776:9804	6723593	88	True				
ANR	6724890	Identifier	OPCODE_SET_DECODING_MAP		6723593	0					
ANR	6724891	ExpressionStatement	"av_dlog ( NULL , ""set decoding map\\n"" )"	553:12:9819:9854	6723593	89	True				
ANR	6724892	CallExpression	"av_dlog ( NULL , ""set decoding map\\n"" )"		6723593	0					
ANR	6724893	Callee	av_dlog		6723593	0					
ANR	6724894	Identifier	av_dlog		6723593	0					
ANR	6724895	ArgumentList	NULL		6723593	1					
ANR	6724896	Argument	NULL		6723593	0					
ANR	6724897	Identifier	NULL		6723593	0					
ANR	6724898	Argument	"""set decoding map\\n"""		6723593	1					
ANR	6724899	PrimaryExpression	"""set decoding map\\n"""		6723593	0					
ANR	6724900	ExpressionStatement	s -> decode_map_chunk_offset = avio_tell ( pb )	559:12:9923:9965	6723593	90	True				
ANR	6724901	AssignmentExpression	s -> decode_map_chunk_offset = avio_tell ( pb )		6723593	0		=			
ANR	6724902	PtrMemberAccess	s -> decode_map_chunk_offset		6723593	0					
ANR	6724903	Identifier	s		6723593	0					
ANR	6724904	Identifier	decode_map_chunk_offset		6723593	1					
ANR	6724905	CallExpression	avio_tell ( pb )		6723593	1					
ANR	6724906	Callee	avio_tell		6723593	0					
ANR	6724907	Identifier	avio_tell		6723593	0					
ANR	6724908	ArgumentList	pb		6723593	1					
ANR	6724909	Argument	pb		6723593	0					
ANR	6724910	Identifier	pb		6723593	0					
ANR	6724911	ExpressionStatement	s -> decode_map_chunk_size = opcode_size	561:12:9980:10018	6723593	91	True				
ANR	6724912	AssignmentExpression	s -> decode_map_chunk_size = opcode_size		6723593	0		=			
ANR	6724913	PtrMemberAccess	s -> decode_map_chunk_size		6723593	0					
ANR	6724914	Identifier	s		6723593	0					
ANR	6724915	Identifier	decode_map_chunk_size		6723593	1					
ANR	6724916	Identifier	opcode_size		6723593	1					
ANR	6724917	ExpressionStatement	"avio_skip ( pb , opcode_size )"	563:12:10033:10059	6723593	92	True				
ANR	6724918	CallExpression	"avio_skip ( pb , opcode_size )"		6723593	0					
ANR	6724919	Callee	avio_skip		6723593	0					
ANR	6724920	Identifier	avio_skip		6723593	0					
ANR	6724921	ArgumentList	pb		6723593	1					
ANR	6724922	Argument	pb		6723593	0					
ANR	6724923	Identifier	pb		6723593	0					
ANR	6724924	Argument	opcode_size		6723593	1					
ANR	6724925	Identifier	opcode_size		6723593	0					
ANR	6724926	BreakStatement	break ;	565:12:10074:10079	6723593	93	True				
ANR	6724927	Label	case OPCODE_VIDEO_DATA :	569:8:10092:10114	6723593	94	True				
ANR	6724928	Identifier	OPCODE_VIDEO_DATA		6723593	0					
ANR	6724929	ExpressionStatement	"av_dlog ( NULL , ""set video data\\n"" )"	571:12:10129:10162	6723593	95	True				
ANR	6724930	CallExpression	"av_dlog ( NULL , ""set video data\\n"" )"		6723593	0					
ANR	6724931	Callee	av_dlog		6723593	0					
ANR	6724932	Identifier	av_dlog		6723593	0					
ANR	6724933	ArgumentList	NULL		6723593	1					
ANR	6724934	Argument	NULL		6723593	0					
ANR	6724935	Identifier	NULL		6723593	0					
ANR	6724936	Argument	"""set video data\\n"""		6723593	1					
ANR	6724937	PrimaryExpression	"""set video data\\n"""		6723593	0					
ANR	6724938	ExpressionStatement	s -> video_chunk_offset = avio_tell ( pb )	577:12:10231:10268	6723593	96	True				
ANR	6724939	AssignmentExpression	s -> video_chunk_offset = avio_tell ( pb )		6723593	0		=			
ANR	6724940	PtrMemberAccess	s -> video_chunk_offset		6723593	0					
ANR	6724941	Identifier	s		6723593	0					
ANR	6724942	Identifier	video_chunk_offset		6723593	1					
ANR	6724943	CallExpression	avio_tell ( pb )		6723593	1					
ANR	6724944	Callee	avio_tell		6723593	0					
ANR	6724945	Identifier	avio_tell		6723593	0					
ANR	6724946	ArgumentList	pb		6723593	1					
ANR	6724947	Argument	pb		6723593	0					
ANR	6724948	Identifier	pb		6723593	0					
ANR	6724949	ExpressionStatement	s -> video_chunk_size = opcode_size	579:12:10283:10316	6723593	97	True				
ANR	6724950	AssignmentExpression	s -> video_chunk_size = opcode_size		6723593	0		=			
ANR	6724951	PtrMemberAccess	s -> video_chunk_size		6723593	0					
ANR	6724952	Identifier	s		6723593	0					
ANR	6724953	Identifier	video_chunk_size		6723593	1					
ANR	6724954	Identifier	opcode_size		6723593	1					
ANR	6724955	ExpressionStatement	"avio_skip ( pb , opcode_size )"	581:12:10331:10357	6723593	98	True				
ANR	6724956	CallExpression	"avio_skip ( pb , opcode_size )"		6723593	0					
ANR	6724957	Callee	avio_skip		6723593	0					
ANR	6724958	Identifier	avio_skip		6723593	0					
ANR	6724959	ArgumentList	pb		6723593	1					
ANR	6724960	Argument	pb		6723593	0					
ANR	6724961	Identifier	pb		6723593	0					
ANR	6724962	Argument	opcode_size		6723593	1					
ANR	6724963	Identifier	opcode_size		6723593	0					
ANR	6724964	BreakStatement	break ;	583:12:10372:10377	6723593	99	True				
ANR	6724965	Label	default :	587:8:10390:10397	6723593	100	True				
ANR	6724966	Identifier	default		6723593	0					
ANR	6724967	ExpressionStatement	"av_dlog ( NULL , ""*** unknown opcode type\\n"" )"	589:12:10412:10454	6723593	101	True				
ANR	6724968	CallExpression	"av_dlog ( NULL , ""*** unknown opcode type\\n"" )"		6723593	0					
ANR	6724969	Callee	av_dlog		6723593	0					
ANR	6724970	Identifier	av_dlog		6723593	0					
ANR	6724971	ArgumentList	NULL		6723593	1					
ANR	6724972	Argument	NULL		6723593	0					
ANR	6724973	Identifier	NULL		6723593	0					
ANR	6724974	Argument	"""*** unknown opcode type\\n"""		6723593	1					
ANR	6724975	PrimaryExpression	"""*** unknown opcode type\\n"""		6723593	0					
ANR	6724976	ExpressionStatement	chunk_type = CHUNK_BAD	591:12:10469:10491	6723593	102	True				
ANR	6724977	AssignmentExpression	chunk_type = CHUNK_BAD		6723593	0		=			
ANR	6724978	Identifier	chunk_type		6723593	0					
ANR	6724979	Identifier	CHUNK_BAD		6723593	1					
ANR	6724980	BreakStatement	break ;	593:12:10506:10511	6723593	103	True				
ANR	6724981	ExpressionStatement	s -> next_chunk_offset = avio_tell ( pb )	605:4:10594:10630	6723593	22	True				
ANR	6724982	AssignmentExpression	s -> next_chunk_offset = avio_tell ( pb )		6723593	0		=			
ANR	6724983	PtrMemberAccess	s -> next_chunk_offset		6723593	0					
ANR	6724984	Identifier	s		6723593	0					
ANR	6724985	Identifier	next_chunk_offset		6723593	1					
ANR	6724986	CallExpression	avio_tell ( pb )		6723593	1					
ANR	6724987	Callee	avio_tell		6723593	0					
ANR	6724988	Identifier	avio_tell		6723593	0					
ANR	6724989	ArgumentList	pb		6723593	1					
ANR	6724990	Argument	pb		6723593	0					
ANR	6724991	Identifier	pb		6723593	0					
ANR	6724992	IfStatement	if ( ( chunk_type == CHUNK_VIDEO ) || ( chunk_type == CHUNK_AUDIO_ONLY ) )		6723593	23					
ANR	6724993	Condition	( chunk_type == CHUNK_VIDEO ) || ( chunk_type == CHUNK_AUDIO_ONLY )	611:8:10696:10758	6723593	0	True				
ANR	6724994	OrExpression	( chunk_type == CHUNK_VIDEO ) || ( chunk_type == CHUNK_AUDIO_ONLY )		6723593	0		||			
ANR	6724995	EqualityExpression	chunk_type == CHUNK_VIDEO		6723593	0		==			
ANR	6724996	Identifier	chunk_type		6723593	0					
ANR	6724997	Identifier	CHUNK_VIDEO		6723593	1					
ANR	6724998	EqualityExpression	chunk_type == CHUNK_AUDIO_ONLY		6723593	1		==			
ANR	6724999	Identifier	chunk_type		6723593	0					
ANR	6725000	Identifier	CHUNK_AUDIO_ONLY		6723593	1					
ANR	6725001	ExpressionStatement	"chunk_type = load_ipmovie_packet ( s , pb , pkt )"	613:8:10770:10814	6723593	1	True				
ANR	6725002	AssignmentExpression	"chunk_type = load_ipmovie_packet ( s , pb , pkt )"		6723593	0		=			
ANR	6725003	Identifier	chunk_type		6723593	0					
ANR	6725004	CallExpression	"load_ipmovie_packet ( s , pb , pkt )"		6723593	1					
ANR	6725005	Callee	load_ipmovie_packet		6723593	0					
ANR	6725006	Identifier	load_ipmovie_packet		6723593	0					
ANR	6725007	ArgumentList	s		6723593	1					
ANR	6725008	Argument	s		6723593	0					
ANR	6725009	Identifier	s		6723593	0					
ANR	6725010	Argument	pb		6723593	1					
ANR	6725011	Identifier	pb		6723593	0					
ANR	6725012	Argument	pkt		6723593	2					
ANR	6725013	Identifier	pkt		6723593	0					
ANR	6725014	ReturnStatement	return chunk_type ;	617:4:10823:10840	6723593	24	True				
ANR	6725015	Identifier	chunk_type		6723593	0					
ANR	6725016	ReturnType	static int		6723593	1					
ANR	6725017	Identifier	process_ipmovie_chunk		6723593	2					
ANR	6725018	ParameterList	"IPMVEContext * s , AVIOContext * pb , AVPacket * pkt"		6723593	3					
ANR	6725019	Parameter	IPMVEContext * s	1:33:33:47	6723593	0	True				
ANR	6725020	ParameterType	IPMVEContext *		6723593	0					
ANR	6725021	Identifier	s		6723593	1					
ANR	6725022	Parameter	AVIOContext * pb	1:50:50:64	6723593	1	True				
ANR	6725023	ParameterType	AVIOContext *		6723593	0					
ANR	6725024	Identifier	pb		6723593	1					
ANR	6725025	Parameter	AVPacket * pkt	3:4:72:84	6723593	2	True				
ANR	6725026	ParameterType	AVPacket *		6723593	0					
ANR	6725027	Identifier	pkt		6723593	1					
ANR	6725028	CFGEntryNode	ENTRY		6723593		True				
ANR	6725029	CFGExitNode	EXIT		6723593		True				
ANR	6725030	Symbol	chunk_size		6723593						
ANR	6725031	Symbol	s -> changed		6723593						
ANR	6725032	Symbol	url_feof		6723593						
ANR	6725033	Symbol	chunk_preamble		6723593						
ANR	6725034	Symbol	CHUNK_DONE		6723593						
ANR	6725035	Symbol	s -> audio_bits		6723593						
ANR	6725036	Symbol	s -> video_height		6723593						
ANR	6725037	Symbol	opcode_type		6723593						
ANR	6725038	Symbol	height		6723593						
ANR	6725039	Symbol	NULL		6723593						
ANR	6725040	Symbol	s -> frame_pts_inc		6723593						
ANR	6725041	Symbol	* s -> palette		6723593						
ANR	6725042	Symbol	s -> audio_chunk_size		6723593						
ANR	6725043	Symbol	CHUNK_AUDIO_ONLY		6723593						
ANR	6725044	Symbol	scratch		6723593						
ANR	6725045	Symbol	AV_CODEC_ID_INTERPLAY_DPCM		6723593						
ANR	6725046	Symbol	s -> audio_type		6723593						
ANR	6725047	Symbol	CHUNK_VIDEO		6723593						
ANR	6725048	Symbol	AV_CODEC_ID_PCM_S16LE		6723593						
ANR	6725049	Symbol	s -> next_chunk_offset		6723593						
ANR	6725050	Symbol	s -> video_chunk_offset		6723593						
ANR	6725051	Symbol	* scratch		6723593						
ANR	6725052	Symbol	s -> audio_chunk_offset		6723593						
ANR	6725053	Symbol	AV_CODEC_ID_PCM_U8		6723593						
ANR	6725054	Symbol	s -> video_bpp		6723593						
ANR	6725055	Symbol	avio_read		6723593						
ANR	6725056	Symbol	AV_RL16		6723593						
ANR	6725057	Symbol	s -> palette		6723593						
ANR	6725058	Symbol	opcode_preamble		6723593						
ANR	6725059	Symbol	load_ipmovie_packet		6723593						
ANR	6725060	Symbol	s -> video_chunk_size		6723593						
ANR	6725061	Symbol	s -> video_width		6723593						
ANR	6725062	Symbol	s -> decode_map_chunk_offset		6723593						
ANR	6725063	Symbol	CHUNK_PREAMBLE_SIZE		6723593						
ANR	6725064	Symbol	opcode_size		6723593						
ANR	6725065	Symbol	audio_flags		6723593						
ANR	6725066	Symbol	avio_tell		6723593						
ANR	6725067	Symbol	pkt		6723593						
ANR	6725068	Symbol	* * s		6723593						
ANR	6725069	Symbol	s -> audio_channels		6723593						
ANR	6725070	Symbol	s -> decode_map_chunk_size		6723593						
ANR	6725071	Symbol	last_color		6723593						
ANR	6725072	Symbol	chunk_type		6723593						
ANR	6725073	Symbol	* opcode_preamble		6723593						
ANR	6725074	Symbol	first_color		6723593						
ANR	6725075	Symbol	b		6723593						
ANR	6725076	Symbol	CHUNK_BAD		6723593						
ANR	6725077	Symbol	g		6723593						
ANR	6725078	Symbol	opcode_version		6723593						
ANR	6725079	Symbol	i		6723593						
ANR	6725080	Symbol	j		6723593						
ANR	6725081	Symbol	pb		6723593						
ANR	6725082	Symbol	r		6723593						
ANR	6725083	Symbol	s		6723593						
ANR	6725084	Symbol	* i		6723593						
ANR	6725085	Symbol	AV_RL32		6723593						
ANR	6725086	Symbol	width		6723593						
ANR	6725087	Symbol	s -> has_palette		6723593						
ANR	6725088	Symbol	OPCODE_PREAMBLE_SIZE		6723593						
ANR	6725089	Symbol	CHUNK_EOF		6723593						
ANR	6725090	Symbol	s -> audio_sample_rate		6723593						
ANR	6725091	Symbol	* s		6723593						
