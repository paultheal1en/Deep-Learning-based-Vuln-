command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4902771	File	/home/p4ultr4n/workplace/ReVeal/raw_code/init_filter_param_01_0.c								
ANR	4902772	Function	init_filter_param	1:0:0:772							
ANR	4902773	FunctionDef	"init_filter_param (AVFilterContext * ctx , FilterParam * fp , const char * effect_type , int width)"		4902772	0					
ANR	4902774	CompoundStatement		3:0:105:772	4902772	0					
ANR	4902775	IdentifierDeclStatement	int z ;	5:4:112:117	4902772	0	True				
ANR	4902776	IdentifierDecl	z		4902772	0					
ANR	4902777	IdentifierDeclType	int		4902772	0					
ANR	4902778	Identifier	z		4902772	1					
ANR	4902779	IdentifierDeclStatement	"const char * effect = fp -> amount == 0 ? ""none"" : fp -> amount < 0 ? ""blur"" : ""sharpen"" ;"	7:4:124:207	4902772	1	True				
ANR	4902780	IdentifierDecl	"* effect = fp -> amount == 0 ? ""none"" : fp -> amount < 0 ? ""blur"" : ""sharpen"""		4902772	0					
ANR	4902781	IdentifierDeclType	const char *		4902772	0					
ANR	4902782	Identifier	effect		4902772	1					
ANR	4902783	AssignmentExpression	"* effect = fp -> amount == 0 ? ""none"" : fp -> amount < 0 ? ""blur"" : ""sharpen"""		4902772	2		=			
ANR	4902784	Identifier	effect		4902772	0					
ANR	4902785	ConditionalExpression	"fp -> amount == 0 ? ""none"" : fp -> amount < 0 ? ""blur"" : ""sharpen"""		4902772	1					
ANR	4902786	Condition	fp -> amount == 0		4902772	0					
ANR	4902787	EqualityExpression	fp -> amount == 0		4902772	0		==			
ANR	4902788	PtrMemberAccess	fp -> amount		4902772	0					
ANR	4902789	Identifier	fp		4902772	0					
ANR	4902790	Identifier	amount		4902772	1					
ANR	4902791	PrimaryExpression	0		4902772	1					
ANR	4902792	PrimaryExpression	"""none"""		4902772	1					
ANR	4902793	ConditionalExpression	"fp -> amount < 0 ? ""blur"" : ""sharpen"""		4902772	2					
ANR	4902794	Condition	fp -> amount < 0		4902772	0					
ANR	4902795	RelationalExpression	fp -> amount < 0		4902772	0		<			
ANR	4902796	PtrMemberAccess	fp -> amount		4902772	0					
ANR	4902797	Identifier	fp		4902772	0					
ANR	4902798	Identifier	amount		4902772	1					
ANR	4902799	PrimaryExpression	0		4902772	1					
ANR	4902800	PrimaryExpression	"""blur"""		4902772	1					
ANR	4902801	PrimaryExpression	"""sharpen"""		4902772	2					
ANR	4902802	IfStatement	if ( ! ( fp -> msize_x & fp -> msize_y & 1 ) )		4902772	2					
ANR	4902803	Condition	! ( fp -> msize_x & fp -> msize_y & 1 )	11:9:221:252	4902772	0	True				
ANR	4902804	UnaryOperationExpression	! ( fp -> msize_x & fp -> msize_y & 1 )		4902772	0					
ANR	4902805	UnaryOperator	!		4902772	0					
ANR	4902806	BitAndExpression	fp -> msize_x & fp -> msize_y & 1		4902772	1		&			
ANR	4902807	PtrMemberAccess	fp -> msize_x		4902772	0					
ANR	4902808	Identifier	fp		4902772	0					
ANR	4902809	Identifier	msize_x		4902772	1					
ANR	4902810	BitAndExpression	fp -> msize_y & 1		4902772	1		&			
ANR	4902811	PtrMemberAccess	fp -> msize_y		4902772	0					
ANR	4902812	Identifier	fp		4902772	0					
ANR	4902813	Identifier	msize_y		4902772	1					
ANR	4902814	PrimaryExpression	1		4902772	1					
ANR	4902815	CompoundStatement		9:43:149:149	4902772	1					
ANR	4902816	ExpressionStatement	"av_log ( ctx , AV_LOG_ERROR , ""Invalid even size for %s matrix size %dx%d\\n"" , effect_type , fp -> msize_x , fp -> msize_y )"	13:8:266:410	4902772	0	True				
ANR	4902817	CallExpression	"av_log ( ctx , AV_LOG_ERROR , ""Invalid even size for %s matrix size %dx%d\\n"" , effect_type , fp -> msize_x , fp -> msize_y )"		4902772	0					
ANR	4902818	Callee	av_log		4902772	0					
ANR	4902819	Identifier	av_log		4902772	0					
ANR	4902820	ArgumentList	ctx		4902772	1					
ANR	4902821	Argument	ctx		4902772	0					
ANR	4902822	Identifier	ctx		4902772	0					
ANR	4902823	Argument	AV_LOG_ERROR		4902772	1					
ANR	4902824	Identifier	AV_LOG_ERROR		4902772	0					
ANR	4902825	Argument	"""Invalid even size for %s matrix size %dx%d\\n"""		4902772	2					
ANR	4902826	PrimaryExpression	"""Invalid even size for %s matrix size %dx%d\\n"""		4902772	0					
ANR	4902827	Argument	effect_type		4902772	3					
ANR	4902828	Identifier	effect_type		4902772	0					
ANR	4902829	Argument	fp -> msize_x		4902772	4					
ANR	4902830	PtrMemberAccess	fp -> msize_x		4902772	0					
ANR	4902831	Identifier	fp		4902772	0					
ANR	4902832	Identifier	msize_x		4902772	1					
ANR	4902833	Argument	fp -> msize_y		4902772	5					
ANR	4902834	PtrMemberAccess	fp -> msize_y		4902772	0					
ANR	4902835	Identifier	fp		4902772	0					
ANR	4902836	Identifier	msize_y		4902772	1					
ANR	4902837	ReturnStatement	return AVERROR ( EINVAL ) ;	19:8:421:443	4902772	1	True				
ANR	4902838	CallExpression	AVERROR ( EINVAL )		4902772	0					
ANR	4902839	Callee	AVERROR		4902772	0					
ANR	4902840	Identifier	AVERROR		4902772	0					
ANR	4902841	ArgumentList	EINVAL		4902772	1					
ANR	4902842	Argument	EINVAL		4902772	0					
ANR	4902843	Identifier	EINVAL		4902772	0					
ANR	4902844	ExpressionStatement	"av_log ( ctx , AV_LOG_VERBOSE , ""effect:%s type:%s msize_x:%d msize_y:%d amount:%0.2f\\n"" , effect , effect_type , fp -> msize_x , fp -> msize_y , fp -> amount / 65535.0 )"	25:4:459:625	4902772	3	True				
ANR	4902845	CallExpression	"av_log ( ctx , AV_LOG_VERBOSE , ""effect:%s type:%s msize_x:%d msize_y:%d amount:%0.2f\\n"" , effect , effect_type , fp -> msize_x , fp -> msize_y , fp -> amount / 65535.0 )"		4902772	0					
ANR	4902846	Callee	av_log		4902772	0					
ANR	4902847	Identifier	av_log		4902772	0					
ANR	4902848	ArgumentList	ctx		4902772	1					
ANR	4902849	Argument	ctx		4902772	0					
ANR	4902850	Identifier	ctx		4902772	0					
ANR	4902851	Argument	AV_LOG_VERBOSE		4902772	1					
ANR	4902852	Identifier	AV_LOG_VERBOSE		4902772	0					
ANR	4902853	Argument	"""effect:%s type:%s msize_x:%d msize_y:%d amount:%0.2f\\n"""		4902772	2					
ANR	4902854	PrimaryExpression	"""effect:%s type:%s msize_x:%d msize_y:%d amount:%0.2f\\n"""		4902772	0					
ANR	4902855	Argument	effect		4902772	3					
ANR	4902856	Identifier	effect		4902772	0					
ANR	4902857	Argument	effect_type		4902772	4					
ANR	4902858	Identifier	effect_type		4902772	0					
ANR	4902859	Argument	fp -> msize_x		4902772	5					
ANR	4902860	PtrMemberAccess	fp -> msize_x		4902772	0					
ANR	4902861	Identifier	fp		4902772	0					
ANR	4902862	Identifier	msize_x		4902772	1					
ANR	4902863	Argument	fp -> msize_y		4902772	6					
ANR	4902864	PtrMemberAccess	fp -> msize_y		4902772	0					
ANR	4902865	Identifier	fp		4902772	0					
ANR	4902866	Identifier	msize_y		4902772	1					
ANR	4902867	Argument	fp -> amount / 65535.0		4902772	7					
ANR	4902868	MultiplicativeExpression	fp -> amount / 65535.0		4902772	0		/			
ANR	4902869	PtrMemberAccess	fp -> amount		4902772	0					
ANR	4902870	Identifier	fp		4902772	0					
ANR	4902871	Identifier	amount		4902772	1					
ANR	4902872	PrimaryExpression	65535.0		4902772	1					
ANR	4902873	ForStatement	for ( z = 0 ; z < 2 * fp -> steps_y ; z ++ )		4902772	4					
ANR	4902874	ForInit	z = 0 ;	31:9:639:644	4902772	0	True				
ANR	4902875	AssignmentExpression	z = 0		4902772	0		=			
ANR	4902876	Identifier	z		4902772	0					
ANR	4902877	PrimaryExpression	0		4902772	1					
ANR	4902878	Condition	z < 2 * fp -> steps_y	31:16:646:664	4902772	1	True				
ANR	4902879	RelationalExpression	z < 2 * fp -> steps_y		4902772	0		<			
ANR	4902880	Identifier	z		4902772	0					
ANR	4902881	MultiplicativeExpression	2 * fp -> steps_y		4902772	1		*			
ANR	4902882	PrimaryExpression	2		4902772	0					
ANR	4902883	PtrMemberAccess	fp -> steps_y		4902772	1					
ANR	4902884	Identifier	fp		4902772	0					
ANR	4902885	Identifier	steps_y		4902772	1					
ANR	4902886	PostIncDecOperationExpression	z ++	31:37:667:669	4902772	2	True				
ANR	4902887	Identifier	z		4902772	0					
ANR	4902888	IncDec	++		4902772	1					
ANR	4902889	ExpressionStatement	fp -> sc [ z ] = av_malloc ( sizeof ( * ( fp -> sc [ z ] ) ) * ( width + 2 * fp -> steps_x ) )	33:8:681:752	4902772	3	True				
ANR	4902890	AssignmentExpression	fp -> sc [ z ] = av_malloc ( sizeof ( * ( fp -> sc [ z ] ) ) * ( width + 2 * fp -> steps_x ) )		4902772	0		=			
ANR	4902891	ArrayIndexing	fp -> sc [ z ]		4902772	0					
ANR	4902892	PtrMemberAccess	fp -> sc		4902772	0					
ANR	4902893	Identifier	fp		4902772	0					
ANR	4902894	Identifier	sc		4902772	1					
ANR	4902895	Identifier	z		4902772	1					
ANR	4902896	CallExpression	av_malloc ( sizeof ( * ( fp -> sc [ z ] ) ) * ( width + 2 * fp -> steps_x ) )		4902772	1					
ANR	4902897	Callee	av_malloc		4902772	0					
ANR	4902898	Identifier	av_malloc		4902772	0					
ANR	4902899	ArgumentList	sizeof ( * ( fp -> sc [ z ] ) ) * ( width + 2 * fp -> steps_x )		4902772	1					
ANR	4902900	Argument	sizeof ( * ( fp -> sc [ z ] ) ) * ( width + 2 * fp -> steps_x )		4902772	0					
ANR	4902901	MultiplicativeExpression	sizeof ( * ( fp -> sc [ z ] ) ) * ( width + 2 * fp -> steps_x )		4902772	0		*			
ANR	4902902	SizeofExpression	sizeof ( * ( fp -> sc [ z ] ) )		4902772	0					
ANR	4902903	Sizeof	sizeof		4902772	0					
ANR	4902904	UnaryOperationExpression	* ( fp -> sc [ z ] )		4902772	1					
ANR	4902905	UnaryOperator	*		4902772	0					
ANR	4902906	ArrayIndexing	fp -> sc [ z ]		4902772	1					
ANR	4902907	PtrMemberAccess	fp -> sc		4902772	0					
ANR	4902908	Identifier	fp		4902772	0					
ANR	4902909	Identifier	sc		4902772	1					
ANR	4902910	Identifier	z		4902772	1					
ANR	4902911	AdditiveExpression	width + 2 * fp -> steps_x		4902772	1		+			
ANR	4902912	Identifier	width		4902772	0					
ANR	4902913	MultiplicativeExpression	2 * fp -> steps_x		4902772	1		*			
ANR	4902914	PrimaryExpression	2		4902772	0					
ANR	4902915	PtrMemberAccess	fp -> steps_x		4902772	1					
ANR	4902916	Identifier	fp		4902772	0					
ANR	4902917	Identifier	steps_x		4902772	1					
ANR	4902918	ReturnStatement	return 0 ;	37:4:761:769	4902772	5	True				
ANR	4902919	PrimaryExpression	0		4902772	0					
ANR	4902920	ReturnType	static int		4902772	1					
ANR	4902921	Identifier	init_filter_param		4902772	2					
ANR	4902922	ParameterList	"AVFilterContext * ctx , FilterParam * fp , const char * effect_type , int width"		4902772	3					
ANR	4902923	Parameter	AVFilterContext * ctx	1:29:29:48	4902772	0	True				
ANR	4902924	ParameterType	AVFilterContext *		4902772	0					
ANR	4902925	Identifier	ctx		4902772	1					
ANR	4902926	Parameter	FilterParam * fp	1:51:51:65	4902772	1	True				
ANR	4902927	ParameterType	FilterParam *		4902772	0					
ANR	4902928	Identifier	fp		4902772	1					
ANR	4902929	Parameter	const char * effect_type	1:68:68:90	4902772	2	True				
ANR	4902930	ParameterType	const char *		4902772	0					
ANR	4902931	Identifier	effect_type		4902772	1					
ANR	4902932	Parameter	int width	1:93:93:101	4902772	3	True				
ANR	4902933	ParameterType	int		4902772	0					
ANR	4902934	Identifier	width		4902772	1					
ANR	4902935	CFGEntryNode	ENTRY		4902772		True				
ANR	4902936	CFGExitNode	EXIT		4902772		True				
ANR	4902937	Symbol	av_malloc		4902772						
ANR	4902938	Symbol	fp -> steps_x		4902772						
ANR	4902939	Symbol	* fp -> sc		4902772						
ANR	4902940	Symbol	* z		4902772						
ANR	4902941	Symbol	fp -> amount		4902772						
ANR	4902942	Symbol	fp		4902772						
ANR	4902943	Symbol	* * fp -> sc		4902772						
ANR	4902944	Symbol	fp -> steps_y		4902772						
ANR	4902945	Symbol	* * z		4902772						
ANR	4902946	Symbol	* fp		4902772						
ANR	4902947	Symbol	* * * fp		4902772						
ANR	4902948	Symbol	AV_LOG_ERROR		4902772						
ANR	4902949	Symbol	ctx		4902772						
ANR	4902950	Symbol	fp -> msize_y		4902772						
ANR	4902951	Symbol	fp -> msize_x		4902772						
ANR	4902952	Symbol	fp -> sc		4902772						
ANR	4902953	Symbol	effect_type		4902772						
ANR	4902954	Symbol	AV_LOG_VERBOSE		4902772						
ANR	4902955	Symbol	EINVAL		4902772						
ANR	4902956	Symbol	* * fp		4902772						
ANR	4902957	Symbol	effect		4902772						
ANR	4902958	Symbol	width		4902772						
ANR	4902959	Symbol	z		4902772						
ANR	4902960	Symbol	AVERROR		4902772						
ANR	4902961	Symbol	* ( fp -> sc [ z ] )		4902772						
