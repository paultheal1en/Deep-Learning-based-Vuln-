command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	9005009	File	/home/p4ultr4n/workplace/ReVeal/raw_code/vga_update_text_0.c								
ANR	9005010	Function	vga_update_text	1:0:0:5717							
ANR	9005011	FunctionDef	"vga_update_text (void * opaque , console_ch_t * chardata)"		9005010	0					
ANR	9005012	CompoundStatement		3:0:67:5717	9005010	0					
ANR	9005013	IdentifierDeclStatement	VGACommonState * s = opaque ;	5:4:74:101	9005010	0	True				
ANR	9005014	IdentifierDecl	* s = opaque		9005010	0					
ANR	9005015	IdentifierDeclType	VGACommonState *		9005010	0					
ANR	9005016	Identifier	s		9005010	1					
ANR	9005017	AssignmentExpression	* s = opaque		9005010	2		=			
ANR	9005018	Identifier	opaque		9005010	0					
ANR	9005019	Identifier	opaque		9005010	1					
ANR	9005020	IdentifierDeclStatement	"int graphic_mode , i , cursor_offset , cursor_visible ;"	7:4:108:158	9005010	1	True				
ANR	9005021	IdentifierDecl	graphic_mode		9005010	0					
ANR	9005022	IdentifierDeclType	int		9005010	0					
ANR	9005023	Identifier	graphic_mode		9005010	1					
ANR	9005024	IdentifierDecl	i		9005010	1					
ANR	9005025	IdentifierDeclType	int		9005010	0					
ANR	9005026	Identifier	i		9005010	1					
ANR	9005027	IdentifierDecl	cursor_offset		9005010	2					
ANR	9005028	IdentifierDeclType	int		9005010	0					
ANR	9005029	Identifier	cursor_offset		9005010	1					
ANR	9005030	IdentifierDecl	cursor_visible		9005010	3					
ANR	9005031	IdentifierDeclType	int		9005010	0					
ANR	9005032	Identifier	cursor_visible		9005010	1					
ANR	9005033	IdentifierDeclStatement	"int cw , cheight , width , height , size , c_min , c_max ;"	9:4:165:215	9005010	2	True				
ANR	9005034	IdentifierDecl	cw		9005010	0					
ANR	9005035	IdentifierDeclType	int		9005010	0					
ANR	9005036	Identifier	cw		9005010	1					
ANR	9005037	IdentifierDecl	cheight		9005010	1					
ANR	9005038	IdentifierDeclType	int		9005010	0					
ANR	9005039	Identifier	cheight		9005010	1					
ANR	9005040	IdentifierDecl	width		9005010	2					
ANR	9005041	IdentifierDeclType	int		9005010	0					
ANR	9005042	Identifier	width		9005010	1					
ANR	9005043	IdentifierDecl	height		9005010	3					
ANR	9005044	IdentifierDeclType	int		9005010	0					
ANR	9005045	Identifier	height		9005010	1					
ANR	9005046	IdentifierDecl	size		9005010	4					
ANR	9005047	IdentifierDeclType	int		9005010	0					
ANR	9005048	Identifier	size		9005010	1					
ANR	9005049	IdentifierDecl	c_min		9005010	5					
ANR	9005050	IdentifierDeclType	int		9005010	0					
ANR	9005051	Identifier	c_min		9005010	1					
ANR	9005052	IdentifierDecl	c_max		9005010	6					
ANR	9005053	IdentifierDeclType	int		9005010	0					
ANR	9005054	Identifier	c_max		9005010	1					
ANR	9005055	IdentifierDeclStatement	uint32_t * src ;	11:4:222:235	9005010	3	True				
ANR	9005056	IdentifierDecl	* src		9005010	0					
ANR	9005057	IdentifierDeclType	uint32_t *		9005010	0					
ANR	9005058	Identifier	src		9005010	1					
ANR	9005059	IdentifierDeclStatement	"console_ch_t * dst , val ;"	13:4:242:264	9005010	4	True				
ANR	9005060	IdentifierDecl	* dst		9005010	0					
ANR	9005061	IdentifierDeclType	console_ch_t *		9005010	0					
ANR	9005062	Identifier	dst		9005010	1					
ANR	9005063	IdentifierDecl	val		9005010	1					
ANR	9005064	IdentifierDeclType	console_ch_t		9005010	0					
ANR	9005065	Identifier	val		9005010	1					
ANR	9005066	IdentifierDeclStatement	char msg_buffer [ 80 ] ;	15:4:271:290	9005010	5	True				
ANR	9005067	IdentifierDecl	msg_buffer [ 80 ]		9005010	0					
ANR	9005068	IdentifierDeclType	char [ 80 ]		9005010	0					
ANR	9005069	Identifier	msg_buffer		9005010	1					
ANR	9005070	PrimaryExpression	80		9005010	2					
ANR	9005071	IdentifierDeclStatement	int full_update = 0 ;	17:4:297:316	9005010	6	True				
ANR	9005072	IdentifierDecl	full_update = 0		9005010	0					
ANR	9005073	IdentifierDeclType	int		9005010	0					
ANR	9005074	Identifier	full_update		9005010	1					
ANR	9005075	AssignmentExpression	full_update = 0		9005010	2		=			
ANR	9005076	Identifier	full_update		9005010	0					
ANR	9005077	PrimaryExpression	0		9005010	1					
ANR	9005078	ExpressionStatement	qemu_flush_coalesced_mmio_buffer ( )	21:4:325:359	9005010	7	True				
ANR	9005079	CallExpression	qemu_flush_coalesced_mmio_buffer ( )		9005010	0					
ANR	9005080	Callee	qemu_flush_coalesced_mmio_buffer		9005010	0					
ANR	9005081	Identifier	qemu_flush_coalesced_mmio_buffer		9005010	0					
ANR	9005082	ArgumentList			9005010	1					
ANR	9005083	IfStatement	if ( ! ( s -> ar_index & 0x20 ) )		9005010	8					
ANR	9005084	Condition	! ( s -> ar_index & 0x20 )	25:8:372:392	9005010	0	True				
ANR	9005085	UnaryOperationExpression	! ( s -> ar_index & 0x20 )		9005010	0					
ANR	9005086	UnaryOperator	!		9005010	0					
ANR	9005087	BitAndExpression	s -> ar_index & 0x20		9005010	1		&			
ANR	9005088	PtrMemberAccess	s -> ar_index		9005010	0					
ANR	9005089	Identifier	s		9005010	0					
ANR	9005090	Identifier	ar_index		9005010	1					
ANR	9005091	PrimaryExpression	0x20		9005010	1					
ANR	9005092	CompoundStatement		23:31:327:327	9005010	1					
ANR	9005093	ExpressionStatement	graphic_mode = GMODE_BLANK	27:8:406:432	9005010	0	True				
ANR	9005094	AssignmentExpression	graphic_mode = GMODE_BLANK		9005010	0		=			
ANR	9005095	Identifier	graphic_mode		9005010	0					
ANR	9005096	Identifier	GMODE_BLANK		9005010	1					
ANR	9005097	ElseStatement	else		9005010	0					
ANR	9005098	CompoundStatement		27:11:378:378	9005010	0					
ANR	9005099	ExpressionStatement	graphic_mode = s -> gr [ VGA_GFX_MISC ] & VGA_GR06_GRAPHICS_MODE	31:8:457:516	9005010	0	True				
ANR	9005100	AssignmentExpression	graphic_mode = s -> gr [ VGA_GFX_MISC ] & VGA_GR06_GRAPHICS_MODE		9005010	0		=			
ANR	9005101	Identifier	graphic_mode		9005010	0					
ANR	9005102	BitAndExpression	s -> gr [ VGA_GFX_MISC ] & VGA_GR06_GRAPHICS_MODE		9005010	1		&			
ANR	9005103	ArrayIndexing	s -> gr [ VGA_GFX_MISC ]		9005010	0					
ANR	9005104	PtrMemberAccess	s -> gr		9005010	0					
ANR	9005105	Identifier	s		9005010	0					
ANR	9005106	Identifier	gr		9005010	1					
ANR	9005107	Identifier	VGA_GFX_MISC		9005010	1					
ANR	9005108	Identifier	VGA_GR06_GRAPHICS_MODE		9005010	1					
ANR	9005109	IfStatement	if ( graphic_mode != s -> graphic_mode )		9005010	9					
ANR	9005110	Condition	graphic_mode != s -> graphic_mode	35:8:534:564	9005010	0	True				
ANR	9005111	EqualityExpression	graphic_mode != s -> graphic_mode		9005010	0		!=			
ANR	9005112	Identifier	graphic_mode		9005010	0					
ANR	9005113	PtrMemberAccess	s -> graphic_mode		9005010	1					
ANR	9005114	Identifier	s		9005010	0					
ANR	9005115	Identifier	graphic_mode		9005010	1					
ANR	9005116	CompoundStatement		33:41:499:499	9005010	1					
ANR	9005117	ExpressionStatement	s -> graphic_mode = graphic_mode	37:8:578:608	9005010	0	True				
ANR	9005118	AssignmentExpression	s -> graphic_mode = graphic_mode		9005010	0		=			
ANR	9005119	PtrMemberAccess	s -> graphic_mode		9005010	0					
ANR	9005120	Identifier	s		9005010	0					
ANR	9005121	Identifier	graphic_mode		9005010	1					
ANR	9005122	Identifier	graphic_mode		9005010	1					
ANR	9005123	ExpressionStatement	full_update = 1	39:8:619:634	9005010	1	True				
ANR	9005124	AssignmentExpression	full_update = 1		9005010	0		=			
ANR	9005125	Identifier	full_update		9005010	0					
ANR	9005126	PrimaryExpression	1		9005010	1					
ANR	9005127	IfStatement	if ( s -> last_width == - 1 )		9005010	10					
ANR	9005128	Condition	s -> last_width == - 1	43:8:652:670	9005010	0	True				
ANR	9005129	EqualityExpression	s -> last_width == - 1		9005010	0		==			
ANR	9005130	PtrMemberAccess	s -> last_width		9005010	0					
ANR	9005131	Identifier	s		9005010	0					
ANR	9005132	Identifier	last_width		9005010	1					
ANR	9005133	UnaryOperationExpression	- 1		9005010	1					
ANR	9005134	UnaryOperator	-		9005010	0					
ANR	9005135	PrimaryExpression	1		9005010	1					
ANR	9005136	CompoundStatement		41:29:605:605	9005010	1					
ANR	9005137	ExpressionStatement	s -> last_width = 0	45:8:684:701	9005010	0	True				
ANR	9005138	AssignmentExpression	s -> last_width = 0		9005010	0		=			
ANR	9005139	PtrMemberAccess	s -> last_width		9005010	0					
ANR	9005140	Identifier	s		9005010	0					
ANR	9005141	Identifier	last_width		9005010	1					
ANR	9005142	PrimaryExpression	0		9005010	1					
ANR	9005143	ExpressionStatement	full_update = 1	47:8:712:727	9005010	1	True				
ANR	9005144	AssignmentExpression	full_update = 1		9005010	0		=			
ANR	9005145	Identifier	full_update		9005010	0					
ANR	9005146	PrimaryExpression	1		9005010	1					
ANR	9005147	SwitchStatement	switch ( graphic_mode )		9005010	11					
ANR	9005148	Condition	graphic_mode	53:12:751:762	9005010	0	True				
ANR	9005149	Identifier	graphic_mode		9005010	0					
ANR	9005150	CompoundStatement		51:26:697:697	9005010	1					
ANR	9005151	Label	case GMODE_TEXT :	55:4:772:787	9005010	0	True				
ANR	9005152	Identifier	GMODE_TEXT		9005010	0					
ANR	9005153	ExpressionStatement	full_update |= update_basic_params ( s )	59:8:834:871	9005010	1	True				
ANR	9005154	AssignmentExpression	full_update |= update_basic_params ( s )		9005010	0		|=			
ANR	9005155	Identifier	full_update		9005010	0					
ANR	9005156	CallExpression	update_basic_params ( s )		9005010	1					
ANR	9005157	Callee	update_basic_params		9005010	0					
ANR	9005158	Identifier	update_basic_params		9005010	0					
ANR	9005159	ArgumentList	s		9005010	1					
ANR	9005160	Argument	s		9005010	0					
ANR	9005161	Identifier	s		9005010	0					
ANR	9005162	ExpressionStatement	cheight = ( s -> cr [ VGA_CRTC_MAX_SCAN ] & 0x1f ) + 1	65:8:920:967	9005010	2	True				
ANR	9005163	AssignmentExpression	cheight = ( s -> cr [ VGA_CRTC_MAX_SCAN ] & 0x1f ) + 1		9005010	0		=			
ANR	9005164	Identifier	cheight		9005010	0					
ANR	9005165	AdditiveExpression	( s -> cr [ VGA_CRTC_MAX_SCAN ] & 0x1f ) + 1		9005010	1		+			
ANR	9005166	BitAndExpression	s -> cr [ VGA_CRTC_MAX_SCAN ] & 0x1f		9005010	0		&			
ANR	9005167	ArrayIndexing	s -> cr [ VGA_CRTC_MAX_SCAN ]		9005010	0					
ANR	9005168	PtrMemberAccess	s -> cr		9005010	0					
ANR	9005169	Identifier	s		9005010	0					
ANR	9005170	Identifier	cr		9005010	1					
ANR	9005171	Identifier	VGA_CRTC_MAX_SCAN		9005010	1					
ANR	9005172	PrimaryExpression	0x1f		9005010	1					
ANR	9005173	PrimaryExpression	1		9005010	1					
ANR	9005174	ExpressionStatement	cw = 8	67:8:978:984	9005010	3	True				
ANR	9005175	AssignmentExpression	cw = 8		9005010	0		=			
ANR	9005176	Identifier	cw		9005010	0					
ANR	9005177	PrimaryExpression	8		9005010	1					
ANR	9005178	IfStatement	if ( ! ( s -> sr [ VGA_SEQ_CLOCK_MODE ] & VGA_SR01_CHAR_CLK_8DOTS ) )		9005010	4					
ANR	9005179	Condition	! ( s -> sr [ VGA_SEQ_CLOCK_MODE ] & VGA_SR01_CHAR_CLK_8DOTS )	69:12:999:1052	9005010	0	True				
ANR	9005180	UnaryOperationExpression	! ( s -> sr [ VGA_SEQ_CLOCK_MODE ] & VGA_SR01_CHAR_CLK_8DOTS )		9005010	0					
ANR	9005181	UnaryOperator	!		9005010	0					
ANR	9005182	BitAndExpression	s -> sr [ VGA_SEQ_CLOCK_MODE ] & VGA_SR01_CHAR_CLK_8DOTS		9005010	1		&			
ANR	9005183	ArrayIndexing	s -> sr [ VGA_SEQ_CLOCK_MODE ]		9005010	0					
ANR	9005184	PtrMemberAccess	s -> sr		9005010	0					
ANR	9005185	Identifier	s		9005010	0					
ANR	9005186	Identifier	sr		9005010	1					
ANR	9005187	Identifier	VGA_SEQ_CLOCK_MODE		9005010	1					
ANR	9005188	Identifier	VGA_SR01_CHAR_CLK_8DOTS		9005010	1					
ANR	9005189	CompoundStatement		67:68:987:987	9005010	1					
ANR	9005190	ExpressionStatement	cw = 9	71:12:1070:1076	9005010	0	True				
ANR	9005191	AssignmentExpression	cw = 9		9005010	0		=			
ANR	9005192	Identifier	cw		9005010	0					
ANR	9005193	PrimaryExpression	9		9005010	1					
ANR	9005194	IfStatement	if ( s -> sr [ VGA_SEQ_CLOCK_MODE ] & 0x08 )		9005010	5					
ANR	9005195	Condition	s -> sr [ VGA_SEQ_CLOCK_MODE ] & 0x08	75:12:1102:1133	9005010	0	True				
ANR	9005196	BitAndExpression	s -> sr [ VGA_SEQ_CLOCK_MODE ] & 0x08		9005010	0		&			
ANR	9005197	ArrayIndexing	s -> sr [ VGA_SEQ_CLOCK_MODE ]		9005010	0					
ANR	9005198	PtrMemberAccess	s -> sr		9005010	0					
ANR	9005199	Identifier	s		9005010	0					
ANR	9005200	Identifier	sr		9005010	1					
ANR	9005201	Identifier	VGA_SEQ_CLOCK_MODE		9005010	1					
ANR	9005202	PrimaryExpression	0x08		9005010	1					
ANR	9005203	CompoundStatement		73:46:1068:1068	9005010	1					
ANR	9005204	ExpressionStatement	cw = 16	77:12:1151:1158	9005010	0	True				
ANR	9005205	AssignmentExpression	cw = 16		9005010	0		=			
ANR	9005206	Identifier	cw		9005010	0					
ANR	9005207	PrimaryExpression	16		9005010	1					
ANR	9005208	ExpressionStatement	width = ( s -> cr [ VGA_CRTC_H_DISP ] + 1 )	81:8:1209:1245	9005010	6	True				
ANR	9005209	AssignmentExpression	width = ( s -> cr [ VGA_CRTC_H_DISP ] + 1 )		9005010	0		=			
ANR	9005210	Identifier	width		9005010	0					
ANR	9005211	AdditiveExpression	s -> cr [ VGA_CRTC_H_DISP ] + 1		9005010	1		+			
ANR	9005212	ArrayIndexing	s -> cr [ VGA_CRTC_H_DISP ]		9005010	0					
ANR	9005213	PtrMemberAccess	s -> cr		9005010	0					
ANR	9005214	Identifier	s		9005010	0					
ANR	9005215	Identifier	cr		9005010	1					
ANR	9005216	Identifier	VGA_CRTC_H_DISP		9005010	1					
ANR	9005217	PrimaryExpression	1		9005010	1					
ANR	9005218	IfStatement	if ( s -> cr [ VGA_CRTC_V_TOTAL ] == 100 )		9005010	7					
ANR	9005219	Condition	s -> cr [ VGA_CRTC_V_TOTAL ] == 100	83:12:1260:1289	9005010	0	True				
ANR	9005220	EqualityExpression	s -> cr [ VGA_CRTC_V_TOTAL ] == 100		9005010	0		==			
ANR	9005221	ArrayIndexing	s -> cr [ VGA_CRTC_V_TOTAL ]		9005010	0					
ANR	9005222	PtrMemberAccess	s -> cr		9005010	0					
ANR	9005223	Identifier	s		9005010	0					
ANR	9005224	Identifier	cr		9005010	1					
ANR	9005225	Identifier	VGA_CRTC_V_TOTAL		9005010	1					
ANR	9005226	PrimaryExpression	100		9005010	1					
ANR	9005227	CompoundStatement		81:44:1224:1224	9005010	1					
ANR	9005228	ExpressionStatement	height = 100	87:12:1378:1390	9005010	0	True				
ANR	9005229	AssignmentExpression	height = 100		9005010	0		=			
ANR	9005230	Identifier	height		9005010	0					
ANR	9005231	PrimaryExpression	100		9005010	1					
ANR	9005232	ElseStatement	else		9005010	0					
ANR	9005233	CompoundStatement		87:15:1340:1340	9005010	0					
ANR	9005234	ExpressionStatement	height = s -> cr [ VGA_CRTC_V_DISP_END ] | ( ( s -> cr [ VGA_CRTC_OVERFLOW ] & 0x02 ) << 7 ) | ( ( s -> cr [ VGA_CRTC_OVERFLOW ] & 0x40 ) << 3 )	91:12:1423:1578	9005010	0	True				
ANR	9005235	AssignmentExpression	height = s -> cr [ VGA_CRTC_V_DISP_END ] | ( ( s -> cr [ VGA_CRTC_OVERFLOW ] & 0x02 ) << 7 ) | ( ( s -> cr [ VGA_CRTC_OVERFLOW ] & 0x40 ) << 3 )		9005010	0		=			
ANR	9005236	Identifier	height		9005010	0					
ANR	9005237	InclusiveOrExpression	s -> cr [ VGA_CRTC_V_DISP_END ] | ( ( s -> cr [ VGA_CRTC_OVERFLOW ] & 0x02 ) << 7 ) | ( ( s -> cr [ VGA_CRTC_OVERFLOW ] & 0x40 ) << 3 )		9005010	1		|			
ANR	9005238	ArrayIndexing	s -> cr [ VGA_CRTC_V_DISP_END ]		9005010	0					
ANR	9005239	PtrMemberAccess	s -> cr		9005010	0					
ANR	9005240	Identifier	s		9005010	0					
ANR	9005241	Identifier	cr		9005010	1					
ANR	9005242	Identifier	VGA_CRTC_V_DISP_END		9005010	1					
ANR	9005243	InclusiveOrExpression	( ( s -> cr [ VGA_CRTC_OVERFLOW ] & 0x02 ) << 7 ) | ( ( s -> cr [ VGA_CRTC_OVERFLOW ] & 0x40 ) << 3 )		9005010	1		|			
ANR	9005244	ShiftExpression	( s -> cr [ VGA_CRTC_OVERFLOW ] & 0x02 ) << 7		9005010	0		<<			
ANR	9005245	BitAndExpression	s -> cr [ VGA_CRTC_OVERFLOW ] & 0x02		9005010	0		&			
ANR	9005246	ArrayIndexing	s -> cr [ VGA_CRTC_OVERFLOW ]		9005010	0					
ANR	9005247	PtrMemberAccess	s -> cr		9005010	0					
ANR	9005248	Identifier	s		9005010	0					
ANR	9005249	Identifier	cr		9005010	1					
ANR	9005250	Identifier	VGA_CRTC_OVERFLOW		9005010	1					
ANR	9005251	PrimaryExpression	0x02		9005010	1					
ANR	9005252	PrimaryExpression	7		9005010	1					
ANR	9005253	ShiftExpression	( s -> cr [ VGA_CRTC_OVERFLOW ] & 0x40 ) << 3		9005010	1		<<			
ANR	9005254	BitAndExpression	s -> cr [ VGA_CRTC_OVERFLOW ] & 0x40		9005010	0		&			
ANR	9005255	ArrayIndexing	s -> cr [ VGA_CRTC_OVERFLOW ]		9005010	0					
ANR	9005256	PtrMemberAccess	s -> cr		9005010	0					
ANR	9005257	Identifier	s		9005010	0					
ANR	9005258	Identifier	cr		9005010	1					
ANR	9005259	Identifier	VGA_CRTC_OVERFLOW		9005010	1					
ANR	9005260	PrimaryExpression	0x40		9005010	1					
ANR	9005261	PrimaryExpression	3		9005010	1					
ANR	9005262	ExpressionStatement	height = ( height + 1 ) / cheight	97:12:1593:1624	9005010	1	True				
ANR	9005263	AssignmentExpression	height = ( height + 1 ) / cheight		9005010	0		=			
ANR	9005264	Identifier	height		9005010	0					
ANR	9005265	MultiplicativeExpression	( height + 1 ) / cheight		9005010	1		/			
ANR	9005266	AdditiveExpression	height + 1		9005010	0		+			
ANR	9005267	Identifier	height		9005010	0					
ANR	9005268	PrimaryExpression	1		9005010	1					
ANR	9005269	Identifier	cheight		9005010	1					
ANR	9005270	ExpressionStatement	size = ( height * width )	103:8:1648:1671	9005010	8	True				
ANR	9005271	AssignmentExpression	size = ( height * width )		9005010	0		=			
ANR	9005272	Identifier	size		9005010	0					
ANR	9005273	MultiplicativeExpression	height * width		9005010	1		*			
ANR	9005274	Identifier	height		9005010	0					
ANR	9005275	Identifier	width		9005010	1					
ANR	9005276	IfStatement	if ( size > CH_ATTR_SIZE )		9005010	9					
ANR	9005277	Condition	size > CH_ATTR_SIZE	105:12:1686:1704	9005010	0	True				
ANR	9005278	RelationalExpression	size > CH_ATTR_SIZE		9005010	0		>			
ANR	9005279	Identifier	size		9005010	0					
ANR	9005280	Identifier	CH_ATTR_SIZE		9005010	1					
ANR	9005281	CompoundStatement		103:33:1639:1639	9005010	1					
ANR	9005282	IfStatement	if ( ! full_update )		9005010	0					
ANR	9005283	Condition	! full_update	107:16:1726:1737	9005010	0	True				
ANR	9005284	UnaryOperationExpression	! full_update		9005010	0					
ANR	9005285	UnaryOperator	!		9005010	0					
ANR	9005286	Identifier	full_update		9005010	1					
ANR	9005287	ReturnStatement	return ;	109:16:1757:1763	9005010	1	True				
ANR	9005288	ExpressionStatement	"snprintf ( msg_buffer , sizeof ( msg_buffer ) , ""%i x %i Text mode"" , width , height )"	113:12:1780:1878	9005010	1	True				
ANR	9005289	CallExpression	"snprintf ( msg_buffer , sizeof ( msg_buffer ) , ""%i x %i Text mode"" , width , height )"		9005010	0					
ANR	9005290	Callee	snprintf		9005010	0					
ANR	9005291	Identifier	snprintf		9005010	0					
ANR	9005292	ArgumentList	msg_buffer		9005010	1					
ANR	9005293	Argument	msg_buffer		9005010	0					
ANR	9005294	Identifier	msg_buffer		9005010	0					
ANR	9005295	Argument	sizeof ( msg_buffer )		9005010	1					
ANR	9005296	SizeofExpression	sizeof ( msg_buffer )		9005010	0					
ANR	9005297	Sizeof	sizeof		9005010	0					
ANR	9005298	SizeofOperand	msg_buffer		9005010	1					
ANR	9005299	Argument	"""%i x %i Text mode"""		9005010	2					
ANR	9005300	PrimaryExpression	"""%i x %i Text mode"""		9005010	0					
ANR	9005301	Argument	width		9005010	3					
ANR	9005302	Identifier	width		9005010	0					
ANR	9005303	Argument	height		9005010	4					
ANR	9005304	Identifier	height		9005010	0					
ANR	9005305	BreakStatement	break ;	117:12:1893:1898	9005010	2	True				
ANR	9005306	IfStatement	if ( width != s -> last_width || height != s -> last_height || cw != s -> last_cw || cheight != s -> last_ch )		9005010	10					
ANR	9005307	Condition	width != s -> last_width || height != s -> last_height || cw != s -> last_cw || cheight != s -> last_ch	123:12:1926:2033	9005010	0	True				
ANR	9005308	OrExpression	width != s -> last_width || height != s -> last_height || cw != s -> last_cw || cheight != s -> last_ch		9005010	0		||			
ANR	9005309	EqualityExpression	width != s -> last_width		9005010	0		!=			
ANR	9005310	Identifier	width		9005010	0					
ANR	9005311	PtrMemberAccess	s -> last_width		9005010	1					
ANR	9005312	Identifier	s		9005010	0					
ANR	9005313	Identifier	last_width		9005010	1					
ANR	9005314	OrExpression	height != s -> last_height || cw != s -> last_cw || cheight != s -> last_ch		9005010	1		||			
ANR	9005315	EqualityExpression	height != s -> last_height		9005010	0		!=			
ANR	9005316	Identifier	height		9005010	0					
ANR	9005317	PtrMemberAccess	s -> last_height		9005010	1					
ANR	9005318	Identifier	s		9005010	0					
ANR	9005319	Identifier	last_height		9005010	1					
ANR	9005320	OrExpression	cw != s -> last_cw || cheight != s -> last_ch		9005010	1		||			
ANR	9005321	EqualityExpression	cw != s -> last_cw		9005010	0		!=			
ANR	9005322	Identifier	cw		9005010	0					
ANR	9005323	PtrMemberAccess	s -> last_cw		9005010	1					
ANR	9005324	Identifier	s		9005010	0					
ANR	9005325	Identifier	last_cw		9005010	1					
ANR	9005326	EqualityExpression	cheight != s -> last_ch		9005010	1		!=			
ANR	9005327	Identifier	cheight		9005010	0					
ANR	9005328	PtrMemberAccess	s -> last_ch		9005010	1					
ANR	9005329	Identifier	s		9005010	0					
ANR	9005330	Identifier	last_ch		9005010	1					
ANR	9005331	CompoundStatement		123:55:1968:1968	9005010	1					
ANR	9005332	ExpressionStatement	s -> last_scr_width = width * cw	127:12:2051:2081	9005010	0	True				
ANR	9005333	AssignmentExpression	s -> last_scr_width = width * cw		9005010	0		=			
ANR	9005334	PtrMemberAccess	s -> last_scr_width		9005010	0					
ANR	9005335	Identifier	s		9005010	0					
ANR	9005336	Identifier	last_scr_width		9005010	1					
ANR	9005337	MultiplicativeExpression	width * cw		9005010	1		*			
ANR	9005338	Identifier	width		9005010	0					
ANR	9005339	Identifier	cw		9005010	1					
ANR	9005340	ExpressionStatement	s -> last_scr_height = height * cheight	129:12:2096:2133	9005010	1	True				
ANR	9005341	AssignmentExpression	s -> last_scr_height = height * cheight		9005010	0		=			
ANR	9005342	PtrMemberAccess	s -> last_scr_height		9005010	0					
ANR	9005343	Identifier	s		9005010	0					
ANR	9005344	Identifier	last_scr_height		9005010	1					
ANR	9005345	MultiplicativeExpression	height * cheight		9005010	1		*			
ANR	9005346	Identifier	height		9005010	0					
ANR	9005347	Identifier	cheight		9005010	1					
ANR	9005348	ExpressionStatement	"qemu_console_resize ( s -> con , s -> last_scr_width , s -> last_scr_height )"	131:12:2148:2214	9005010	2	True				
ANR	9005349	CallExpression	"qemu_console_resize ( s -> con , s -> last_scr_width , s -> last_scr_height )"		9005010	0					
ANR	9005350	Callee	qemu_console_resize		9005010	0					
ANR	9005351	Identifier	qemu_console_resize		9005010	0					
ANR	9005352	ArgumentList	s -> con		9005010	1					
ANR	9005353	Argument	s -> con		9005010	0					
ANR	9005354	PtrMemberAccess	s -> con		9005010	0					
ANR	9005355	Identifier	s		9005010	0					
ANR	9005356	Identifier	con		9005010	1					
ANR	9005357	Argument	s -> last_scr_width		9005010	1					
ANR	9005358	PtrMemberAccess	s -> last_scr_width		9005010	0					
ANR	9005359	Identifier	s		9005010	0					
ANR	9005360	Identifier	last_scr_width		9005010	1					
ANR	9005361	Argument	s -> last_scr_height		9005010	2					
ANR	9005362	PtrMemberAccess	s -> last_scr_height		9005010	0					
ANR	9005363	Identifier	s		9005010	0					
ANR	9005364	Identifier	last_scr_height		9005010	1					
ANR	9005365	ExpressionStatement	"dpy_text_resize ( s -> con , width , height )"	133:12:2229:2267	9005010	3	True				
ANR	9005366	CallExpression	"dpy_text_resize ( s -> con , width , height )"		9005010	0					
ANR	9005367	Callee	dpy_text_resize		9005010	0					
ANR	9005368	Identifier	dpy_text_resize		9005010	0					
ANR	9005369	ArgumentList	s -> con		9005010	1					
ANR	9005370	Argument	s -> con		9005010	0					
ANR	9005371	PtrMemberAccess	s -> con		9005010	0					
ANR	9005372	Identifier	s		9005010	0					
ANR	9005373	Identifier	con		9005010	1					
ANR	9005374	Argument	width		9005010	1					
ANR	9005375	Identifier	width		9005010	0					
ANR	9005376	Argument	height		9005010	2					
ANR	9005377	Identifier	height		9005010	0					
ANR	9005378	ExpressionStatement	s -> last_depth = 0	135:12:2282:2299	9005010	4	True				
ANR	9005379	AssignmentExpression	s -> last_depth = 0		9005010	0		=			
ANR	9005380	PtrMemberAccess	s -> last_depth		9005010	0					
ANR	9005381	Identifier	s		9005010	0					
ANR	9005382	Identifier	last_depth		9005010	1					
ANR	9005383	PrimaryExpression	0		9005010	1					
ANR	9005384	ExpressionStatement	s -> last_width = width	137:12:2314:2335	9005010	5	True				
ANR	9005385	AssignmentExpression	s -> last_width = width		9005010	0		=			
ANR	9005386	PtrMemberAccess	s -> last_width		9005010	0					
ANR	9005387	Identifier	s		9005010	0					
ANR	9005388	Identifier	last_width		9005010	1					
ANR	9005389	Identifier	width		9005010	1					
ANR	9005390	ExpressionStatement	s -> last_height = height	139:12:2350:2373	9005010	6	True				
ANR	9005391	AssignmentExpression	s -> last_height = height		9005010	0		=			
ANR	9005392	PtrMemberAccess	s -> last_height		9005010	0					
ANR	9005393	Identifier	s		9005010	0					
ANR	9005394	Identifier	last_height		9005010	1					
ANR	9005395	Identifier	height		9005010	1					
ANR	9005396	ExpressionStatement	s -> last_ch = cheight	141:12:2388:2408	9005010	7	True				
ANR	9005397	AssignmentExpression	s -> last_ch = cheight		9005010	0		=			
ANR	9005398	PtrMemberAccess	s -> last_ch		9005010	0					
ANR	9005399	Identifier	s		9005010	0					
ANR	9005400	Identifier	last_ch		9005010	1					
ANR	9005401	Identifier	cheight		9005010	1					
ANR	9005402	ExpressionStatement	s -> last_cw = cw	143:12:2423:2438	9005010	8	True				
ANR	9005403	AssignmentExpression	s -> last_cw = cw		9005010	0		=			
ANR	9005404	PtrMemberAccess	s -> last_cw		9005010	0					
ANR	9005405	Identifier	s		9005010	0					
ANR	9005406	Identifier	last_cw		9005010	1					
ANR	9005407	Identifier	cw		9005010	1					
ANR	9005408	ExpressionStatement	full_update = 1	145:12:2453:2468	9005010	9	True				
ANR	9005409	AssignmentExpression	full_update = 1		9005010	0		=			
ANR	9005410	Identifier	full_update		9005010	0					
ANR	9005411	PrimaryExpression	1		9005010	1					
ANR	9005412	IfStatement	if ( full_update )		9005010	11					
ANR	9005413	Condition	full_update	151:12:2496:2506	9005010	0	True				
ANR	9005414	Identifier	full_update		9005010	0					
ANR	9005415	CompoundStatement		149:25:2441:2441	9005010	1					
ANR	9005416	ExpressionStatement	s -> full_update_gfx = 1	153:12:2524:2546	9005010	0	True				
ANR	9005417	AssignmentExpression	s -> full_update_gfx = 1		9005010	0		=			
ANR	9005418	PtrMemberAccess	s -> full_update_gfx		9005010	0					
ANR	9005419	Identifier	s		9005010	0					
ANR	9005420	Identifier	full_update_gfx		9005010	1					
ANR	9005421	PrimaryExpression	1		9005010	1					
ANR	9005422	IfStatement	if ( s -> full_update_text )		9005010	12					
ANR	9005423	Condition	s -> full_update_text	157:12:2572:2590	9005010	0	True				
ANR	9005424	PtrMemberAccess	s -> full_update_text		9005010	0					
ANR	9005425	Identifier	s		9005010	0					
ANR	9005426	Identifier	full_update_text		9005010	1					
ANR	9005427	CompoundStatement		155:33:2525:2525	9005010	1					
ANR	9005428	ExpressionStatement	s -> full_update_text = 0	159:12:2608:2631	9005010	0	True				
ANR	9005429	AssignmentExpression	s -> full_update_text = 0		9005010	0		=			
ANR	9005430	PtrMemberAccess	s -> full_update_text		9005010	0					
ANR	9005431	Identifier	s		9005010	0					
ANR	9005432	Identifier	full_update_text		9005010	1					
ANR	9005433	PrimaryExpression	0		9005010	1					
ANR	9005434	ExpressionStatement	full_update |= 1	161:12:2646:2662	9005010	1	True				
ANR	9005435	AssignmentExpression	full_update |= 1		9005010	0		|=			
ANR	9005436	Identifier	full_update		9005010	0					
ANR	9005437	PrimaryExpression	1		9005010	1					
ANR	9005438	ExpressionStatement	cursor_offset = ( ( s -> cr [ VGA_CRTC_CURSOR_HI ] << 8 ) | s -> cr [ VGA_CRTC_CURSOR_LO ] ) - s -> start_addr	169:8:2726:2846	9005010	13	True				
ANR	9005439	AssignmentExpression	cursor_offset = ( ( s -> cr [ VGA_CRTC_CURSOR_HI ] << 8 ) | s -> cr [ VGA_CRTC_CURSOR_LO ] ) - s -> start_addr		9005010	0		=			
ANR	9005440	Identifier	cursor_offset		9005010	0					
ANR	9005441	AdditiveExpression	( ( s -> cr [ VGA_CRTC_CURSOR_HI ] << 8 ) | s -> cr [ VGA_CRTC_CURSOR_LO ] ) - s -> start_addr		9005010	1		-			
ANR	9005442	InclusiveOrExpression	( s -> cr [ VGA_CRTC_CURSOR_HI ] << 8 ) | s -> cr [ VGA_CRTC_CURSOR_LO ]		9005010	0		|			
ANR	9005443	ShiftExpression	s -> cr [ VGA_CRTC_CURSOR_HI ] << 8		9005010	0		<<			
ANR	9005444	ArrayIndexing	s -> cr [ VGA_CRTC_CURSOR_HI ]		9005010	0					
ANR	9005445	PtrMemberAccess	s -> cr		9005010	0					
ANR	9005446	Identifier	s		9005010	0					
ANR	9005447	Identifier	cr		9005010	1					
ANR	9005448	Identifier	VGA_CRTC_CURSOR_HI		9005010	1					
ANR	9005449	PrimaryExpression	8		9005010	1					
ANR	9005450	ArrayIndexing	s -> cr [ VGA_CRTC_CURSOR_LO ]		9005010	1					
ANR	9005451	PtrMemberAccess	s -> cr		9005010	0					
ANR	9005452	Identifier	s		9005010	0					
ANR	9005453	Identifier	cr		9005010	1					
ANR	9005454	Identifier	VGA_CRTC_CURSOR_LO		9005010	1					
ANR	9005455	PtrMemberAccess	s -> start_addr		9005010	1					
ANR	9005456	Identifier	s		9005010	0					
ANR	9005457	Identifier	start_addr		9005010	1					
ANR	9005458	IfStatement	if ( cursor_offset != s -> cursor_offset || s -> cr [ VGA_CRTC_CURSOR_START ] != s -> cursor_start || s -> cr [ VGA_CRTC_CURSOR_END ] != s -> cursor_end || full_update )		9005010	14					
ANR	9005459	Condition	cursor_offset != s -> cursor_offset || s -> cr [ VGA_CRTC_CURSOR_START ] != s -> cursor_start || s -> cr [ VGA_CRTC_CURSOR_END ] != s -> cursor_end || full_update	173:12:2861:3032	9005010	0	True				
ANR	9005460	OrExpression	cursor_offset != s -> cursor_offset || s -> cr [ VGA_CRTC_CURSOR_START ] != s -> cursor_start || s -> cr [ VGA_CRTC_CURSOR_END ] != s -> cursor_end || full_update		9005010	0		||			
ANR	9005461	EqualityExpression	cursor_offset != s -> cursor_offset		9005010	0		!=			
ANR	9005462	Identifier	cursor_offset		9005010	0					
ANR	9005463	PtrMemberAccess	s -> cursor_offset		9005010	1					
ANR	9005464	Identifier	s		9005010	0					
ANR	9005465	Identifier	cursor_offset		9005010	1					
ANR	9005466	OrExpression	s -> cr [ VGA_CRTC_CURSOR_START ] != s -> cursor_start || s -> cr [ VGA_CRTC_CURSOR_END ] != s -> cursor_end || full_update		9005010	1		||			
ANR	9005467	EqualityExpression	s -> cr [ VGA_CRTC_CURSOR_START ] != s -> cursor_start		9005010	0		!=			
ANR	9005468	ArrayIndexing	s -> cr [ VGA_CRTC_CURSOR_START ]		9005010	0					
ANR	9005469	PtrMemberAccess	s -> cr		9005010	0					
ANR	9005470	Identifier	s		9005010	0					
ANR	9005471	Identifier	cr		9005010	1					
ANR	9005472	Identifier	VGA_CRTC_CURSOR_START		9005010	1					
ANR	9005473	PtrMemberAccess	s -> cursor_start		9005010	1					
ANR	9005474	Identifier	s		9005010	0					
ANR	9005475	Identifier	cursor_start		9005010	1					
ANR	9005476	OrExpression	s -> cr [ VGA_CRTC_CURSOR_END ] != s -> cursor_end || full_update		9005010	1		||			
ANR	9005477	EqualityExpression	s -> cr [ VGA_CRTC_CURSOR_END ] != s -> cursor_end		9005010	0		!=			
ANR	9005478	ArrayIndexing	s -> cr [ VGA_CRTC_CURSOR_END ]		9005010	0					
ANR	9005479	PtrMemberAccess	s -> cr		9005010	0					
ANR	9005480	Identifier	s		9005010	0					
ANR	9005481	Identifier	cr		9005010	1					
ANR	9005482	Identifier	VGA_CRTC_CURSOR_END		9005010	1					
ANR	9005483	PtrMemberAccess	s -> cursor_end		9005010	1					
ANR	9005484	Identifier	s		9005010	0					
ANR	9005485	Identifier	cursor_end		9005010	1					
ANR	9005486	Identifier	full_update		9005010	1					
ANR	9005487	CompoundStatement		175:72:2967:2967	9005010	1					
ANR	9005488	ExpressionStatement	cursor_visible = ! ( s -> cr [ VGA_CRTC_CURSOR_START ] & 0x20 )	179:12:3050:3105	9005010	0	True				
ANR	9005489	AssignmentExpression	cursor_visible = ! ( s -> cr [ VGA_CRTC_CURSOR_START ] & 0x20 )		9005010	0		=			
ANR	9005490	Identifier	cursor_visible		9005010	0					
ANR	9005491	UnaryOperationExpression	! ( s -> cr [ VGA_CRTC_CURSOR_START ] & 0x20 )		9005010	1					
ANR	9005492	UnaryOperator	!		9005010	0					
ANR	9005493	BitAndExpression	s -> cr [ VGA_CRTC_CURSOR_START ] & 0x20		9005010	1		&			
ANR	9005494	ArrayIndexing	s -> cr [ VGA_CRTC_CURSOR_START ]		9005010	0					
ANR	9005495	PtrMemberAccess	s -> cr		9005010	0					
ANR	9005496	Identifier	s		9005010	0					
ANR	9005497	Identifier	cr		9005010	1					
ANR	9005498	Identifier	VGA_CRTC_CURSOR_START		9005010	1					
ANR	9005499	PrimaryExpression	0x20		9005010	1					
ANR	9005500	IfStatement	if ( cursor_visible && cursor_offset < size && cursor_offset >= 0 )		9005010	1					
ANR	9005501	Condition	cursor_visible && cursor_offset < size && cursor_offset >= 0	181:16:3124:3183	9005010	0	True				
ANR	9005502	AndExpression	cursor_visible && cursor_offset < size && cursor_offset >= 0		9005010	0		&&			
ANR	9005503	Identifier	cursor_visible		9005010	0					
ANR	9005504	AndExpression	cursor_offset < size && cursor_offset >= 0		9005010	1		&&			
ANR	9005505	RelationalExpression	cursor_offset < size		9005010	0		<			
ANR	9005506	Identifier	cursor_offset		9005010	0					
ANR	9005507	Identifier	size		9005010	1					
ANR	9005508	RelationalExpression	cursor_offset >= 0		9005010	1		>=			
ANR	9005509	Identifier	cursor_offset		9005010	0					
ANR	9005510	PrimaryExpression	0		9005010	1					
ANR	9005511	ExpressionStatement	"dpy_text_cursor ( s -> con , TEXTMODE_X ( cursor_offset ) , TEXTMODE_Y ( cursor_offset ) )"	183:16:3203:3346	9005010	1	True				
ANR	9005512	CallExpression	"dpy_text_cursor ( s -> con , TEXTMODE_X ( cursor_offset ) , TEXTMODE_Y ( cursor_offset ) )"		9005010	0					
ANR	9005513	Callee	dpy_text_cursor		9005010	0					
ANR	9005514	Identifier	dpy_text_cursor		9005010	0					
ANR	9005515	ArgumentList	s -> con		9005010	1					
ANR	9005516	Argument	s -> con		9005010	0					
ANR	9005517	PtrMemberAccess	s -> con		9005010	0					
ANR	9005518	Identifier	s		9005010	0					
ANR	9005519	Identifier	con		9005010	1					
ANR	9005520	Argument	TEXTMODE_X ( cursor_offset )		9005010	1					
ANR	9005521	CallExpression	TEXTMODE_X ( cursor_offset )		9005010	0					
ANR	9005522	Callee	TEXTMODE_X		9005010	0					
ANR	9005523	Identifier	TEXTMODE_X		9005010	0					
ANR	9005524	ArgumentList	cursor_offset		9005010	1					
ANR	9005525	Argument	cursor_offset		9005010	0					
ANR	9005526	Identifier	cursor_offset		9005010	0					
ANR	9005527	Argument	TEXTMODE_Y ( cursor_offset )		9005010	2					
ANR	9005528	CallExpression	TEXTMODE_Y ( cursor_offset )		9005010	0					
ANR	9005529	Callee	TEXTMODE_Y		9005010	0					
ANR	9005530	Identifier	TEXTMODE_Y		9005010	0					
ANR	9005531	ArgumentList	cursor_offset		9005010	1					
ANR	9005532	Argument	cursor_offset		9005010	0					
ANR	9005533	Identifier	cursor_offset		9005010	0					
ANR	9005534	ElseStatement	else		9005010	0					
ANR	9005535	ExpressionStatement	"dpy_text_cursor ( s -> con , - 1 , - 1 )"	191:16:3383:3414	9005010	0	True				
ANR	9005536	CallExpression	"dpy_text_cursor ( s -> con , - 1 , - 1 )"		9005010	0					
ANR	9005537	Callee	dpy_text_cursor		9005010	0					
ANR	9005538	Identifier	dpy_text_cursor		9005010	0					
ANR	9005539	ArgumentList	s -> con		9005010	1					
ANR	9005540	Argument	s -> con		9005010	0					
ANR	9005541	PtrMemberAccess	s -> con		9005010	0					
ANR	9005542	Identifier	s		9005010	0					
ANR	9005543	Identifier	con		9005010	1					
ANR	9005544	Argument	- 1		9005010	1					
ANR	9005545	UnaryOperationExpression	- 1		9005010	0					
ANR	9005546	UnaryOperator	-		9005010	0					
ANR	9005547	PrimaryExpression	1		9005010	1					
ANR	9005548	Argument	- 1		9005010	2					
ANR	9005549	UnaryOperationExpression	- 1		9005010	0					
ANR	9005550	UnaryOperator	-		9005010	0					
ANR	9005551	PrimaryExpression	1		9005010	1					
ANR	9005552	ExpressionStatement	s -> cursor_offset = cursor_offset	193:12:3429:3461	9005010	2	True				
ANR	9005553	AssignmentExpression	s -> cursor_offset = cursor_offset		9005010	0		=			
ANR	9005554	PtrMemberAccess	s -> cursor_offset		9005010	0					
ANR	9005555	Identifier	s		9005010	0					
ANR	9005556	Identifier	cursor_offset		9005010	1					
ANR	9005557	Identifier	cursor_offset		9005010	1					
ANR	9005558	ExpressionStatement	s -> cursor_start = s -> cr [ VGA_CRTC_CURSOR_START ]	195:12:3476:3522	9005010	3	True				
ANR	9005559	AssignmentExpression	s -> cursor_start = s -> cr [ VGA_CRTC_CURSOR_START ]		9005010	0		=			
ANR	9005560	PtrMemberAccess	s -> cursor_start		9005010	0					
ANR	9005561	Identifier	s		9005010	0					
ANR	9005562	Identifier	cursor_start		9005010	1					
ANR	9005563	ArrayIndexing	s -> cr [ VGA_CRTC_CURSOR_START ]		9005010	1					
ANR	9005564	PtrMemberAccess	s -> cr		9005010	0					
ANR	9005565	Identifier	s		9005010	0					
ANR	9005566	Identifier	cr		9005010	1					
ANR	9005567	Identifier	VGA_CRTC_CURSOR_START		9005010	1					
ANR	9005568	ExpressionStatement	s -> cursor_end = s -> cr [ VGA_CRTC_CURSOR_END ]	197:12:3537:3579	9005010	4	True				
ANR	9005569	AssignmentExpression	s -> cursor_end = s -> cr [ VGA_CRTC_CURSOR_END ]		9005010	0		=			
ANR	9005570	PtrMemberAccess	s -> cursor_end		9005010	0					
ANR	9005571	Identifier	s		9005010	0					
ANR	9005572	Identifier	cursor_end		9005010	1					
ANR	9005573	ArrayIndexing	s -> cr [ VGA_CRTC_CURSOR_END ]		9005010	1					
ANR	9005574	PtrMemberAccess	s -> cr		9005010	0					
ANR	9005575	Identifier	s		9005010	0					
ANR	9005576	Identifier	cr		9005010	1					
ANR	9005577	Identifier	VGA_CRTC_CURSOR_END		9005010	1					
ANR	9005578	ExpressionStatement	src = ( uint32_t * ) s -> vram_ptr + s -> start_addr	203:8:3603:3649	9005010	15	True				
ANR	9005579	AssignmentExpression	src = ( uint32_t * ) s -> vram_ptr + s -> start_addr		9005010	0		=			
ANR	9005580	Identifier	src		9005010	0					
ANR	9005581	AdditiveExpression	( uint32_t * ) s -> vram_ptr + s -> start_addr		9005010	1		+			
ANR	9005582	CastExpression	( uint32_t * ) s -> vram_ptr		9005010	0					
ANR	9005583	CastTarget	uint32_t *		9005010	0					
ANR	9005584	PtrMemberAccess	s -> vram_ptr		9005010	1					
ANR	9005585	Identifier	s		9005010	0					
ANR	9005586	Identifier	vram_ptr		9005010	1					
ANR	9005587	PtrMemberAccess	s -> start_addr		9005010	1					
ANR	9005588	Identifier	s		9005010	0					
ANR	9005589	Identifier	start_addr		9005010	1					
ANR	9005590	ExpressionStatement	dst = chardata	205:8:3660:3674	9005010	16	True				
ANR	9005591	AssignmentExpression	dst = chardata		9005010	0		=			
ANR	9005592	Identifier	dst		9005010	0					
ANR	9005593	Identifier	chardata		9005010	1					
ANR	9005594	IfStatement	if ( full_update )		9005010	17					
ANR	9005595	Condition	full_update	209:12:3691:3701	9005010	0	True				
ANR	9005596	Identifier	full_update		9005010	0					
ANR	9005597	CompoundStatement		207:25:3636:3636	9005010	1					
ANR	9005598	ForStatement	"for ( i = 0 ; i < size ; src ++ , dst ++ , i ++ )"		9005010	0					
ANR	9005599	ForInit	i = 0 ;	211:17:3724:3729	9005010	0	True				
ANR	9005600	AssignmentExpression	i = 0		9005010	0		=			
ANR	9005601	Identifier	i		9005010	0					
ANR	9005602	PrimaryExpression	0		9005010	1					
ANR	9005603	Condition	i < size	211:24:3731:3738	9005010	1	True				
ANR	9005604	RelationalExpression	i < size		9005010	0		<			
ANR	9005605	Identifier	i		9005010	0					
ANR	9005606	Identifier	size		9005010	1					
ANR	9005607	Expression	"src ++ , dst ++ , i ++"	211:34:3741:3760	9005010	2	True				
ANR	9005608	PostIncDecOperationExpression	src ++		9005010	0					
ANR	9005609	Identifier	src		9005010	0					
ANR	9005610	IncDec	++		9005010	1					
ANR	9005611	Expression	"dst ++ , i ++"		9005010	1					
ANR	9005612	PostIncDecOperationExpression	dst ++		9005010	0					
ANR	9005613	Identifier	dst		9005010	0					
ANR	9005614	IncDec	++		9005010	1					
ANR	9005615	PostIncDecOperationExpression	i ++		9005010	1					
ANR	9005616	Identifier	i		9005010	0					
ANR	9005617	IncDec	++		9005010	1					
ANR	9005618	ExpressionStatement	"console_write_ch ( dst , VMEM2CHTYPE ( le32_to_cpu ( * src ) ) )"	213:16:3780:3833	9005010	3	True				
ANR	9005619	CallExpression	"console_write_ch ( dst , VMEM2CHTYPE ( le32_to_cpu ( * src ) ) )"		9005010	0					
ANR	9005620	Callee	console_write_ch		9005010	0					
ANR	9005621	Identifier	console_write_ch		9005010	0					
ANR	9005622	ArgumentList	dst		9005010	1					
ANR	9005623	Argument	dst		9005010	0					
ANR	9005624	Identifier	dst		9005010	0					
ANR	9005625	Argument	VMEM2CHTYPE ( le32_to_cpu ( * src ) )		9005010	1					
ANR	9005626	CallExpression	VMEM2CHTYPE ( le32_to_cpu ( * src ) )		9005010	0					
ANR	9005627	Callee	VMEM2CHTYPE		9005010	0					
ANR	9005628	Identifier	VMEM2CHTYPE		9005010	0					
ANR	9005629	ArgumentList	le32_to_cpu ( * src )		9005010	1					
ANR	9005630	Argument	le32_to_cpu ( * src )		9005010	0					
ANR	9005631	CallExpression	le32_to_cpu ( * src )		9005010	0					
ANR	9005632	Callee	le32_to_cpu		9005010	0					
ANR	9005633	Identifier	le32_to_cpu		9005010	0					
ANR	9005634	ArgumentList	* src		9005010	1					
ANR	9005635	Argument	* src		9005010	0					
ANR	9005636	UnaryOperationExpression	* src		9005010	0					
ANR	9005637	UnaryOperator	*		9005010	0					
ANR	9005638	Identifier	src		9005010	1					
ANR	9005639	ExpressionStatement	"dpy_text_update ( s -> con , 0 , 0 , width , height )"	217:12:3850:3894	9005010	1	True				
ANR	9005640	CallExpression	"dpy_text_update ( s -> con , 0 , 0 , width , height )"		9005010	0					
ANR	9005641	Callee	dpy_text_update		9005010	0					
ANR	9005642	Identifier	dpy_text_update		9005010	0					
ANR	9005643	ArgumentList	s -> con		9005010	1					
ANR	9005644	Argument	s -> con		9005010	0					
ANR	9005645	PtrMemberAccess	s -> con		9005010	0					
ANR	9005646	Identifier	s		9005010	0					
ANR	9005647	Identifier	con		9005010	1					
ANR	9005648	Argument	0		9005010	1					
ANR	9005649	PrimaryExpression	0		9005010	0					
ANR	9005650	Argument	0		9005010	2					
ANR	9005651	PrimaryExpression	0		9005010	0					
ANR	9005652	Argument	width		9005010	3					
ANR	9005653	Identifier	width		9005010	0					
ANR	9005654	Argument	height		9005010	4					
ANR	9005655	Identifier	height		9005010	0					
ANR	9005656	ElseStatement	else		9005010	0					
ANR	9005657	CompoundStatement		217:15:3844:3844	9005010	0					
ANR	9005658	ExpressionStatement	c_max = 0	221:12:3927:3936	9005010	0	True				
ANR	9005659	AssignmentExpression	c_max = 0		9005010	0		=			
ANR	9005660	Identifier	c_max		9005010	0					
ANR	9005661	PrimaryExpression	0		9005010	1					
ANR	9005662	ForStatement	"for ( i = 0 ; i < size ; src ++ , dst ++ , i ++ )"		9005010	1					
ANR	9005663	ForInit	i = 0 ;	225:17:3958:3963	9005010	0	True				
ANR	9005664	AssignmentExpression	i = 0		9005010	0		=			
ANR	9005665	Identifier	i		9005010	0					
ANR	9005666	PrimaryExpression	0		9005010	1					
ANR	9005667	Condition	i < size	225:24:3965:3972	9005010	1	True				
ANR	9005668	RelationalExpression	i < size		9005010	0		<			
ANR	9005669	Identifier	i		9005010	0					
ANR	9005670	Identifier	size		9005010	1					
ANR	9005671	Expression	"src ++ , dst ++ , i ++"	225:34:3975:3994	9005010	2	True				
ANR	9005672	PostIncDecOperationExpression	src ++		9005010	0					
ANR	9005673	Identifier	src		9005010	0					
ANR	9005674	IncDec	++		9005010	1					
ANR	9005675	Expression	"dst ++ , i ++"		9005010	1					
ANR	9005676	PostIncDecOperationExpression	dst ++		9005010	0					
ANR	9005677	Identifier	dst		9005010	0					
ANR	9005678	IncDec	++		9005010	1					
ANR	9005679	PostIncDecOperationExpression	i ++		9005010	1					
ANR	9005680	Identifier	i		9005010	0					
ANR	9005681	IncDec	++		9005010	1					
ANR	9005682	CompoundStatement		223:56:3929:3929	9005010	3					
ANR	9005683	ExpressionStatement	"console_write_ch ( & val , VMEM2CHTYPE ( le32_to_cpu ( * src ) ) )"	227:16:4016:4070	9005010	0	True				
ANR	9005684	CallExpression	"console_write_ch ( & val , VMEM2CHTYPE ( le32_to_cpu ( * src ) ) )"		9005010	0					
ANR	9005685	Callee	console_write_ch		9005010	0					
ANR	9005686	Identifier	console_write_ch		9005010	0					
ANR	9005687	ArgumentList	& val		9005010	1					
ANR	9005688	Argument	& val		9005010	0					
ANR	9005689	UnaryOperationExpression	& val		9005010	0					
ANR	9005690	UnaryOperator	&		9005010	0					
ANR	9005691	Identifier	val		9005010	1					
ANR	9005692	Argument	VMEM2CHTYPE ( le32_to_cpu ( * src ) )		9005010	1					
ANR	9005693	CallExpression	VMEM2CHTYPE ( le32_to_cpu ( * src ) )		9005010	0					
ANR	9005694	Callee	VMEM2CHTYPE		9005010	0					
ANR	9005695	Identifier	VMEM2CHTYPE		9005010	0					
ANR	9005696	ArgumentList	le32_to_cpu ( * src )		9005010	1					
ANR	9005697	Argument	le32_to_cpu ( * src )		9005010	0					
ANR	9005698	CallExpression	le32_to_cpu ( * src )		9005010	0					
ANR	9005699	Callee	le32_to_cpu		9005010	0					
ANR	9005700	Identifier	le32_to_cpu		9005010	0					
ANR	9005701	ArgumentList	* src		9005010	1					
ANR	9005702	Argument	* src		9005010	0					
ANR	9005703	UnaryOperationExpression	* src		9005010	0					
ANR	9005704	UnaryOperator	*		9005010	0					
ANR	9005705	Identifier	src		9005010	1					
ANR	9005706	IfStatement	if ( * dst != val )		9005010	1					
ANR	9005707	Condition	* dst != val	229:20:4093:4103	9005010	0	True				
ANR	9005708	EqualityExpression	* dst != val		9005010	0		!=			
ANR	9005709	UnaryOperationExpression	* dst		9005010	0					
ANR	9005710	UnaryOperator	*		9005010	0					
ANR	9005711	Identifier	dst		9005010	1					
ANR	9005712	Identifier	val		9005010	1					
ANR	9005713	CompoundStatement		227:33:4038:4038	9005010	1					
ANR	9005714	ExpressionStatement	* dst = val	231:20:4129:4139	9005010	0	True				
ANR	9005715	AssignmentExpression	* dst = val		9005010	0		=			
ANR	9005716	UnaryOperationExpression	* dst		9005010	0					
ANR	9005717	UnaryOperator	*		9005010	0					
ANR	9005718	Identifier	dst		9005010	1					
ANR	9005719	Identifier	val		9005010	1					
ANR	9005720	ExpressionStatement	c_max = i	233:20:4162:4171	9005010	1	True				
ANR	9005721	AssignmentExpression	c_max = i		9005010	0		=			
ANR	9005722	Identifier	c_max		9005010	0					
ANR	9005723	Identifier	i		9005010	1					
ANR	9005724	BreakStatement	break ;	235:20:4194:4199	9005010	2	True				
ANR	9005725	ExpressionStatement	c_min = i	241:12:4248:4257	9005010	2	True				
ANR	9005726	AssignmentExpression	c_min = i		9005010	0		=			
ANR	9005727	Identifier	c_min		9005010	0					
ANR	9005728	Identifier	i		9005010	1					
ANR	9005729	ForStatement	"for ( ; i < size ; src ++ , dst ++ , i ++ )"		9005010	3					
ANR	9005730	Condition	i < size	243:19:4279:4286	9005010	0	True				
ANR	9005731	RelationalExpression	i < size		9005010	0		<			
ANR	9005732	Identifier	i		9005010	0					
ANR	9005733	Identifier	size		9005010	1					
ANR	9005734	Expression	"src ++ , dst ++ , i ++"	243:29:4289:4308	9005010	1	True				
ANR	9005735	PostIncDecOperationExpression	src ++		9005010	0					
ANR	9005736	Identifier	src		9005010	0					
ANR	9005737	IncDec	++		9005010	1					
ANR	9005738	Expression	"dst ++ , i ++"		9005010	1					
ANR	9005739	PostIncDecOperationExpression	dst ++		9005010	0					
ANR	9005740	Identifier	dst		9005010	0					
ANR	9005741	IncDec	++		9005010	1					
ANR	9005742	PostIncDecOperationExpression	i ++		9005010	1					
ANR	9005743	Identifier	i		9005010	0					
ANR	9005744	IncDec	++		9005010	1					
ANR	9005745	CompoundStatement		241:51:4243:4243	9005010	2					
ANR	9005746	ExpressionStatement	"console_write_ch ( & val , VMEM2CHTYPE ( le32_to_cpu ( * src ) ) )"	245:16:4330:4384	9005010	0	True				
ANR	9005747	CallExpression	"console_write_ch ( & val , VMEM2CHTYPE ( le32_to_cpu ( * src ) ) )"		9005010	0					
ANR	9005748	Callee	console_write_ch		9005010	0					
ANR	9005749	Identifier	console_write_ch		9005010	0					
ANR	9005750	ArgumentList	& val		9005010	1					
ANR	9005751	Argument	& val		9005010	0					
ANR	9005752	UnaryOperationExpression	& val		9005010	0					
ANR	9005753	UnaryOperator	&		9005010	0					
ANR	9005754	Identifier	val		9005010	1					
ANR	9005755	Argument	VMEM2CHTYPE ( le32_to_cpu ( * src ) )		9005010	1					
ANR	9005756	CallExpression	VMEM2CHTYPE ( le32_to_cpu ( * src ) )		9005010	0					
ANR	9005757	Callee	VMEM2CHTYPE		9005010	0					
ANR	9005758	Identifier	VMEM2CHTYPE		9005010	0					
ANR	9005759	ArgumentList	le32_to_cpu ( * src )		9005010	1					
ANR	9005760	Argument	le32_to_cpu ( * src )		9005010	0					
ANR	9005761	CallExpression	le32_to_cpu ( * src )		9005010	0					
ANR	9005762	Callee	le32_to_cpu		9005010	0					
ANR	9005763	Identifier	le32_to_cpu		9005010	0					
ANR	9005764	ArgumentList	* src		9005010	1					
ANR	9005765	Argument	* src		9005010	0					
ANR	9005766	UnaryOperationExpression	* src		9005010	0					
ANR	9005767	UnaryOperator	*		9005010	0					
ANR	9005768	Identifier	src		9005010	1					
ANR	9005769	IfStatement	if ( * dst != val )		9005010	1					
ANR	9005770	Condition	* dst != val	247:20:4407:4417	9005010	0	True				
ANR	9005771	EqualityExpression	* dst != val		9005010	0		!=			
ANR	9005772	UnaryOperationExpression	* dst		9005010	0					
ANR	9005773	UnaryOperator	*		9005010	0					
ANR	9005774	Identifier	dst		9005010	1					
ANR	9005775	Identifier	val		9005010	1					
ANR	9005776	CompoundStatement		245:33:4352:4352	9005010	1					
ANR	9005777	ExpressionStatement	* dst = val	249:20:4443:4453	9005010	0	True				
ANR	9005778	AssignmentExpression	* dst = val		9005010	0		=			
ANR	9005779	UnaryOperationExpression	* dst		9005010	0					
ANR	9005780	UnaryOperator	*		9005010	0					
ANR	9005781	Identifier	dst		9005010	1					
ANR	9005782	Identifier	val		9005010	1					
ANR	9005783	ExpressionStatement	c_max = i	251:20:4476:4485	9005010	1	True				
ANR	9005784	AssignmentExpression	c_max = i		9005010	0		=			
ANR	9005785	Identifier	c_max		9005010	0					
ANR	9005786	Identifier	i		9005010	1					
ANR	9005787	IfStatement	if ( c_min <= c_max )		9005010	4					
ANR	9005788	Condition	c_min <= c_max	259:16:4540:4553	9005010	0	True				
ANR	9005789	RelationalExpression	c_min <= c_max		9005010	0		<=			
ANR	9005790	Identifier	c_min		9005010	0					
ANR	9005791	Identifier	c_max		9005010	1					
ANR	9005792	CompoundStatement		257:32:4488:4488	9005010	1					
ANR	9005793	ExpressionStatement	i = TEXTMODE_Y ( c_min )	261:16:4575:4596	9005010	0	True				
ANR	9005794	AssignmentExpression	i = TEXTMODE_Y ( c_min )		9005010	0		=			
ANR	9005795	Identifier	i		9005010	0					
ANR	9005796	CallExpression	TEXTMODE_Y ( c_min )		9005010	1					
ANR	9005797	Callee	TEXTMODE_Y		9005010	0					
ANR	9005798	Identifier	TEXTMODE_Y		9005010	0					
ANR	9005799	ArgumentList	c_min		9005010	1					
ANR	9005800	Argument	c_min		9005010	0					
ANR	9005801	Identifier	c_min		9005010	0					
ANR	9005802	ExpressionStatement	"dpy_text_update ( s -> con , 0 , i , width , TEXTMODE_Y ( c_max ) - i + 1 )"	263:16:4615:4678	9005010	1	True				
ANR	9005803	CallExpression	"dpy_text_update ( s -> con , 0 , i , width , TEXTMODE_Y ( c_max ) - i + 1 )"		9005010	0					
ANR	9005804	Callee	dpy_text_update		9005010	0					
ANR	9005805	Identifier	dpy_text_update		9005010	0					
ANR	9005806	ArgumentList	s -> con		9005010	1					
ANR	9005807	Argument	s -> con		9005010	0					
ANR	9005808	PtrMemberAccess	s -> con		9005010	0					
ANR	9005809	Identifier	s		9005010	0					
ANR	9005810	Identifier	con		9005010	1					
ANR	9005811	Argument	0		9005010	1					
ANR	9005812	PrimaryExpression	0		9005010	0					
ANR	9005813	Argument	i		9005010	2					
ANR	9005814	Identifier	i		9005010	0					
ANR	9005815	Argument	width		9005010	3					
ANR	9005816	Identifier	width		9005010	0					
ANR	9005817	Argument	TEXTMODE_Y ( c_max ) - i + 1		9005010	4					
ANR	9005818	AdditiveExpression	TEXTMODE_Y ( c_max ) - i + 1		9005010	0		-			
ANR	9005819	CallExpression	TEXTMODE_Y ( c_max )		9005010	0					
ANR	9005820	Callee	TEXTMODE_Y		9005010	0					
ANR	9005821	Identifier	TEXTMODE_Y		9005010	0					
ANR	9005822	ArgumentList	c_max		9005010	1					
ANR	9005823	Argument	c_max		9005010	0					
ANR	9005824	Identifier	c_max		9005010	0					
ANR	9005825	AdditiveExpression	i + 1		9005010	1		+			
ANR	9005826	Identifier	i		9005010	0					
ANR	9005827	PrimaryExpression	1		9005010	1					
ANR	9005828	ReturnStatement	return ;	271:8:4717:4723	9005010	18	True				
ANR	9005829	Label	case GMODE_GRAPH :	273:4:4730:4746	9005010	19	True				
ANR	9005830	Identifier	GMODE_GRAPH		9005010	0					
ANR	9005831	IfStatement	if ( ! full_update )		9005010	20					
ANR	9005832	Condition	! full_update	275:12:4761:4772	9005010	0	True				
ANR	9005833	UnaryOperationExpression	! full_update		9005010	0					
ANR	9005834	UnaryOperator	!		9005010	0					
ANR	9005835	Identifier	full_update		9005010	1					
ANR	9005836	ReturnStatement	return ;	277:12:4788:4794	9005010	1	True				
ANR	9005837	ExpressionStatement	"s -> get_resolution ( s , & width , & height )"	281:8:4807:4844	9005010	21	True				
ANR	9005838	CallExpression	"s -> get_resolution ( s , & width , & height )"		9005010	0					
ANR	9005839	Callee	s -> get_resolution		9005010	0					
ANR	9005840	PtrMemberAccess	s -> get_resolution		9005010	0					
ANR	9005841	Identifier	s		9005010	0					
ANR	9005842	Identifier	get_resolution		9005010	1					
ANR	9005843	ArgumentList	s		9005010	1					
ANR	9005844	Argument	s		9005010	0					
ANR	9005845	Identifier	s		9005010	0					
ANR	9005846	Argument	& width		9005010	1					
ANR	9005847	UnaryOperationExpression	& width		9005010	0					
ANR	9005848	UnaryOperator	&		9005010	0					
ANR	9005849	Identifier	width		9005010	1					
ANR	9005850	Argument	& height		9005010	2					
ANR	9005851	UnaryOperationExpression	& height		9005010	0					
ANR	9005852	UnaryOperator	&		9005010	0					
ANR	9005853	Identifier	height		9005010	1					
ANR	9005854	ExpressionStatement	"snprintf ( msg_buffer , sizeof ( msg_buffer ) , ""%i x %i Graphic mode"" , width , height )"	283:8:4855:4952	9005010	22	True				
ANR	9005855	CallExpression	"snprintf ( msg_buffer , sizeof ( msg_buffer ) , ""%i x %i Graphic mode"" , width , height )"		9005010	0					
ANR	9005856	Callee	snprintf		9005010	0					
ANR	9005857	Identifier	snprintf		9005010	0					
ANR	9005858	ArgumentList	msg_buffer		9005010	1					
ANR	9005859	Argument	msg_buffer		9005010	0					
ANR	9005860	Identifier	msg_buffer		9005010	0					
ANR	9005861	Argument	sizeof ( msg_buffer )		9005010	1					
ANR	9005862	SizeofExpression	sizeof ( msg_buffer )		9005010	0					
ANR	9005863	Sizeof	sizeof		9005010	0					
ANR	9005864	SizeofOperand	msg_buffer		9005010	1					
ANR	9005865	Argument	"""%i x %i Graphic mode"""		9005010	2					
ANR	9005866	PrimaryExpression	"""%i x %i Graphic mode"""		9005010	0					
ANR	9005867	Argument	width		9005010	3					
ANR	9005868	Identifier	width		9005010	0					
ANR	9005869	Argument	height		9005010	4					
ANR	9005870	Identifier	height		9005010	0					
ANR	9005871	BreakStatement	break ;	287:8:4963:4968	9005010	23	True				
ANR	9005872	Label	case GMODE_BLANK :	289:4:4975:4991	9005010	24	True				
ANR	9005873	Identifier	GMODE_BLANK		9005010	0					
ANR	9005874	Label	default :	291:4:4998:5005	9005010	25	True				
ANR	9005875	Identifier	default		9005010	0					
ANR	9005876	IfStatement	if ( ! full_update )		9005010	26					
ANR	9005877	Condition	! full_update	293:12:5020:5031	9005010	0	True				
ANR	9005878	UnaryOperationExpression	! full_update		9005010	0					
ANR	9005879	UnaryOperator	!		9005010	0					
ANR	9005880	Identifier	full_update		9005010	1					
ANR	9005881	ReturnStatement	return ;	295:12:5047:5053	9005010	1	True				
ANR	9005882	ExpressionStatement	"snprintf ( msg_buffer , sizeof ( msg_buffer ) , ""VGA Blank mode"" )"	299:8:5066:5124	9005010	27	True				
ANR	9005883	CallExpression	"snprintf ( msg_buffer , sizeof ( msg_buffer ) , ""VGA Blank mode"" )"		9005010	0					
ANR	9005884	Callee	snprintf		9005010	0					
ANR	9005885	Identifier	snprintf		9005010	0					
ANR	9005886	ArgumentList	msg_buffer		9005010	1					
ANR	9005887	Argument	msg_buffer		9005010	0					
ANR	9005888	Identifier	msg_buffer		9005010	0					
ANR	9005889	Argument	sizeof ( msg_buffer )		9005010	1					
ANR	9005890	SizeofExpression	sizeof ( msg_buffer )		9005010	0					
ANR	9005891	Sizeof	sizeof		9005010	0					
ANR	9005892	SizeofOperand	msg_buffer		9005010	1					
ANR	9005893	Argument	"""VGA Blank mode"""		9005010	2					
ANR	9005894	PrimaryExpression	"""VGA Blank mode"""		9005010	0					
ANR	9005895	BreakStatement	break ;	301:8:5135:5140	9005010	28	True				
ANR	9005896	ExpressionStatement	s -> last_width = 60	309:4:5185:5203	9005010	12	True				
ANR	9005897	AssignmentExpression	s -> last_width = 60		9005010	0		=			
ANR	9005898	PtrMemberAccess	s -> last_width		9005010	0					
ANR	9005899	Identifier	s		9005010	0					
ANR	9005900	Identifier	last_width		9005010	1					
ANR	9005901	PrimaryExpression	60		9005010	1					
ANR	9005902	ExpressionStatement	s -> last_height = height = 3	311:4:5210:5237	9005010	13	True				
ANR	9005903	AssignmentExpression	s -> last_height = height = 3		9005010	0		=			
ANR	9005904	PtrMemberAccess	s -> last_height		9005010	0					
ANR	9005905	Identifier	s		9005010	0					
ANR	9005906	Identifier	last_height		9005010	1					
ANR	9005907	AssignmentExpression	height = 3		9005010	1		=			
ANR	9005908	Identifier	height		9005010	0					
ANR	9005909	PrimaryExpression	3		9005010	1					
ANR	9005910	ExpressionStatement	"dpy_text_cursor ( s -> con , - 1 , - 1 )"	313:4:5244:5275	9005010	14	True				
ANR	9005911	CallExpression	"dpy_text_cursor ( s -> con , - 1 , - 1 )"		9005010	0					
ANR	9005912	Callee	dpy_text_cursor		9005010	0					
ANR	9005913	Identifier	dpy_text_cursor		9005010	0					
ANR	9005914	ArgumentList	s -> con		9005010	1					
ANR	9005915	Argument	s -> con		9005010	0					
ANR	9005916	PtrMemberAccess	s -> con		9005010	0					
ANR	9005917	Identifier	s		9005010	0					
ANR	9005918	Identifier	con		9005010	1					
ANR	9005919	Argument	- 1		9005010	1					
ANR	9005920	UnaryOperationExpression	- 1		9005010	0					
ANR	9005921	UnaryOperator	-		9005010	0					
ANR	9005922	PrimaryExpression	1		9005010	1					
ANR	9005923	Argument	- 1		9005010	2					
ANR	9005924	UnaryOperationExpression	- 1		9005010	0					
ANR	9005925	UnaryOperator	-		9005010	0					
ANR	9005926	PrimaryExpression	1		9005010	1					
ANR	9005927	ExpressionStatement	"dpy_text_resize ( s -> con , s -> last_width , height )"	315:4:5282:5328	9005010	15	True				
ANR	9005928	CallExpression	"dpy_text_resize ( s -> con , s -> last_width , height )"		9005010	0					
ANR	9005929	Callee	dpy_text_resize		9005010	0					
ANR	9005930	Identifier	dpy_text_resize		9005010	0					
ANR	9005931	ArgumentList	s -> con		9005010	1					
ANR	9005932	Argument	s -> con		9005010	0					
ANR	9005933	PtrMemberAccess	s -> con		9005010	0					
ANR	9005934	Identifier	s		9005010	0					
ANR	9005935	Identifier	con		9005010	1					
ANR	9005936	Argument	s -> last_width		9005010	1					
ANR	9005937	PtrMemberAccess	s -> last_width		9005010	0					
ANR	9005938	Identifier	s		9005010	0					
ANR	9005939	Identifier	last_width		9005010	1					
ANR	9005940	Argument	height		9005010	2					
ANR	9005941	Identifier	height		9005010	0					
ANR	9005942	ForStatement	"for ( dst = chardata , i = 0 ; i < s -> last_width * height ; i ++ )"		9005010	16					
ANR	9005943	ForInit	"dst = chardata , i = 0 ;"	319:9:5342:5363	9005010	0	True				
ANR	9005944	Expression	"dst = chardata , i = 0"		9005010	0					
ANR	9005945	AssignmentExpression	dst = chardata		9005010	0		=			
ANR	9005946	Identifier	dst		9005010	0					
ANR	9005947	Identifier	chardata		9005010	1					
ANR	9005948	AssignmentExpression	i = 0		9005010	1		=			
ANR	9005949	Identifier	i		9005010	0					
ANR	9005950	PrimaryExpression	0		9005010	1					
ANR	9005951	Condition	i < s -> last_width * height	319:32:5365:5390	9005010	1	True				
ANR	9005952	RelationalExpression	i < s -> last_width * height		9005010	0		<			
ANR	9005953	Identifier	i		9005010	0					
ANR	9005954	MultiplicativeExpression	s -> last_width * height		9005010	1		*			
ANR	9005955	PtrMemberAccess	s -> last_width		9005010	0					
ANR	9005956	Identifier	s		9005010	0					
ANR	9005957	Identifier	last_width		9005010	1					
ANR	9005958	Identifier	height		9005010	1					
ANR	9005959	PostIncDecOperationExpression	i ++	319:60:5393:5396	9005010	2	True				
ANR	9005960	Identifier	i		9005010	0					
ANR	9005961	IncDec	++		9005010	1					
ANR	9005962	ExpressionStatement	"console_write_ch ( dst ++ , ' ' )"	321:8:5408:5437	9005010	3	True				
ANR	9005963	CallExpression	"console_write_ch ( dst ++ , ' ' )"		9005010	0					
ANR	9005964	Callee	console_write_ch		9005010	0					
ANR	9005965	Identifier	console_write_ch		9005010	0					
ANR	9005966	ArgumentList	dst ++		9005010	1					
ANR	9005967	Argument	dst ++		9005010	0					
ANR	9005968	PostIncDecOperationExpression	dst ++		9005010	0					
ANR	9005969	Identifier	dst		9005010	0					
ANR	9005970	IncDec	++		9005010	1					
ANR	9005971	Argument	' '		9005010	1					
ANR	9005972	PrimaryExpression	' '		9005010	0					
ANR	9005973	ExpressionStatement	size = strlen ( msg_buffer )	325:4:5446:5471	9005010	17	True				
ANR	9005974	AssignmentExpression	size = strlen ( msg_buffer )		9005010	0		=			
ANR	9005975	Identifier	size		9005010	0					
ANR	9005976	CallExpression	strlen ( msg_buffer )		9005010	1					
ANR	9005977	Callee	strlen		9005010	0					
ANR	9005978	Identifier	strlen		9005010	0					
ANR	9005979	ArgumentList	msg_buffer		9005010	1					
ANR	9005980	Argument	msg_buffer		9005010	0					
ANR	9005981	Identifier	msg_buffer		9005010	0					
ANR	9005982	ExpressionStatement	width = ( s -> last_width - size ) / 2	327:4:5478:5512	9005010	18	True				
ANR	9005983	AssignmentExpression	width = ( s -> last_width - size ) / 2		9005010	0		=			
ANR	9005984	Identifier	width		9005010	0					
ANR	9005985	MultiplicativeExpression	( s -> last_width - size ) / 2		9005010	1		/			
ANR	9005986	AdditiveExpression	s -> last_width - size		9005010	0		-			
ANR	9005987	PtrMemberAccess	s -> last_width		9005010	0					
ANR	9005988	Identifier	s		9005010	0					
ANR	9005989	Identifier	last_width		9005010	1					
ANR	9005990	Identifier	size		9005010	1					
ANR	9005991	PrimaryExpression	2		9005010	1					
ANR	9005992	ExpressionStatement	dst = chardata + s -> last_width + width	329:4:5519:5557	9005010	19	True				
ANR	9005993	AssignmentExpression	dst = chardata + s -> last_width + width		9005010	0		=			
ANR	9005994	Identifier	dst		9005010	0					
ANR	9005995	AdditiveExpression	chardata + s -> last_width + width		9005010	1		+			
ANR	9005996	Identifier	chardata		9005010	0					
ANR	9005997	AdditiveExpression	s -> last_width + width		9005010	1		+			
ANR	9005998	PtrMemberAccess	s -> last_width		9005010	0					
ANR	9005999	Identifier	s		9005010	0					
ANR	9006000	Identifier	last_width		9005010	1					
ANR	9006001	Identifier	width		9005010	1					
ANR	9006002	ForStatement	for ( i = 0 ; i < size ; i ++ )		9005010	20					
ANR	9006003	ForInit	i = 0 ;	331:9:5569:5574	9005010	0	True				
ANR	9006004	AssignmentExpression	i = 0		9005010	0		=			
ANR	9006005	Identifier	i		9005010	0					
ANR	9006006	PrimaryExpression	0		9005010	1					
ANR	9006007	Condition	i < size	331:16:5576:5583	9005010	1	True				
ANR	9006008	RelationalExpression	i < size		9005010	0		<			
ANR	9006009	Identifier	i		9005010	0					
ANR	9006010	Identifier	size		9005010	1					
ANR	9006011	PostIncDecOperationExpression	i ++	331:26:5586:5589	9005010	2	True				
ANR	9006012	Identifier	i		9005010	0					
ANR	9006013	IncDec	++		9005010	1					
ANR	9006014	ExpressionStatement	"console_write_ch ( dst ++ , 0x00200100 | msg_buffer [ i ] )"	333:8:5601:5653	9005010	3	True				
ANR	9006015	CallExpression	"console_write_ch ( dst ++ , 0x00200100 | msg_buffer [ i ] )"		9005010	0					
ANR	9006016	Callee	console_write_ch		9005010	0					
ANR	9006017	Identifier	console_write_ch		9005010	0					
ANR	9006018	ArgumentList	dst ++		9005010	1					
ANR	9006019	Argument	dst ++		9005010	0					
ANR	9006020	PostIncDecOperationExpression	dst ++		9005010	0					
ANR	9006021	Identifier	dst		9005010	0					
ANR	9006022	IncDec	++		9005010	1					
ANR	9006023	Argument	0x00200100 | msg_buffer [ i ]		9005010	1					
ANR	9006024	InclusiveOrExpression	0x00200100 | msg_buffer [ i ]		9005010	0		|			
ANR	9006025	PrimaryExpression	0x00200100		9005010	0					
ANR	9006026	ArrayIndexing	msg_buffer [ i ]		9005010	1					
ANR	9006027	Identifier	msg_buffer		9005010	0					
ANR	9006028	Identifier	i		9005010	1					
ANR	9006029	ExpressionStatement	"dpy_text_update ( s -> con , 0 , 0 , s -> last_width , height )"	337:4:5662:5714	9005010	21	True				
ANR	9006030	CallExpression	"dpy_text_update ( s -> con , 0 , 0 , s -> last_width , height )"		9005010	0					
ANR	9006031	Callee	dpy_text_update		9005010	0					
ANR	9006032	Identifier	dpy_text_update		9005010	0					
ANR	9006033	ArgumentList	s -> con		9005010	1					
ANR	9006034	Argument	s -> con		9005010	0					
ANR	9006035	PtrMemberAccess	s -> con		9005010	0					
ANR	9006036	Identifier	s		9005010	0					
ANR	9006037	Identifier	con		9005010	1					
ANR	9006038	Argument	0		9005010	1					
ANR	9006039	PrimaryExpression	0		9005010	0					
ANR	9006040	Argument	0		9005010	2					
ANR	9006041	PrimaryExpression	0		9005010	0					
ANR	9006042	Argument	s -> last_width		9005010	3					
ANR	9006043	PtrMemberAccess	s -> last_width		9005010	0					
ANR	9006044	Identifier	s		9005010	0					
ANR	9006045	Identifier	last_width		9005010	1					
ANR	9006046	Argument	height		9005010	4					
ANR	9006047	Identifier	height		9005010	0					
ANR	9006048	ReturnType	static void		9005010	1					
ANR	9006049	Identifier	vga_update_text		9005010	2					
ANR	9006050	ParameterList	"void * opaque , console_ch_t * chardata"		9005010	3					
ANR	9006051	Parameter	void * opaque	1:28:28:39	9005010	0	True				
ANR	9006052	ParameterType	void *		9005010	0					
ANR	9006053	Identifier	opaque		9005010	1					
ANR	9006054	Parameter	console_ch_t * chardata	1:42:42:63	9005010	1	True				
ANR	9006055	ParameterType	console_ch_t *		9005010	0					
ANR	9006056	Identifier	chardata		9005010	1					
ANR	9006057	CFGEntryNode	ENTRY		9005010		True				
ANR	9006058	CFGExitNode	EXIT		9005010		True				
ANR	9006059	Symbol	& val		9005010						
ANR	9006060	Symbol	full_update		9005010						
ANR	9006061	Symbol	cheight		9005010						
ANR	9006062	Symbol	& height		9005010						
ANR	9006063	Symbol	* src		9005010						
ANR	9006064	Symbol	* dst		9005010						
ANR	9006065	Symbol	strlen		9005010						
ANR	9006066	Symbol	s -> last_width		9005010						
ANR	9006067	Symbol	VGA_SR01_CHAR_CLK_8DOTS		9005010						
ANR	9006068	Symbol	VGA_CRTC_CURSOR_HI		9005010						
ANR	9006069	Symbol	VGA_CRTC_CURSOR_LO		9005010						
ANR	9006070	Symbol	chardata		9005010						
ANR	9006071	Symbol	c_max		9005010						
ANR	9006072	Symbol	* VGA_CRTC_MAX_SCAN		9005010						
ANR	9006073	Symbol	* VGA_CRTC_H_DISP		9005010						
ANR	9006074	Symbol	CH_ATTR_SIZE		9005010						
ANR	9006075	Symbol	VGA_CRTC_V_DISP_END		9005010						
ANR	9006076	Symbol	s -> last_scr_width		9005010						
ANR	9006077	Symbol	height		9005010						
ANR	9006078	Symbol	val		9005010						
ANR	9006079	Symbol	s -> last_depth		9005010						
ANR	9006080	Symbol	* s -> cr		9005010						
ANR	9006081	Symbol	* VGA_SEQ_CLOCK_MODE		9005010						
ANR	9006082	Symbol	update_basic_params		9005010						
ANR	9006083	Symbol	* s -> gr		9005010						
ANR	9006084	Symbol	* VGA_CRTC_CURSOR_HI		9005010						
ANR	9006085	Symbol	s -> ar_index		9005010						
ANR	9006086	Symbol	* VGA_GFX_MISC		9005010						
ANR	9006087	Symbol	s -> last_cw		9005010						
ANR	9006088	Symbol	VGA_CRTC_OVERFLOW		9005010						
ANR	9006089	Symbol	s -> last_scr_height		9005010						
ANR	9006090	Symbol	s -> start_addr		9005010						
ANR	9006091	Symbol	size		9005010						
ANR	9006092	Symbol	* s -> sr		9005010						
ANR	9006093	Symbol	* VGA_CRTC_CURSOR_LO		9005010						
ANR	9006094	Symbol	s -> cursor_start		9005010						
ANR	9006095	Symbol	cursor_visible		9005010						
ANR	9006096	Symbol	s -> last_ch		9005010						
ANR	9006097	Symbol	VGA_CRTC_H_DISP		9005010						
ANR	9006098	Symbol	VGA_SEQ_CLOCK_MODE		9005010						
ANR	9006099	Symbol	* VGA_CRTC_V_TOTAL		9005010						
ANR	9006100	Symbol	graphic_mode		9005010						
ANR	9006101	Symbol	dst		9005010						
ANR	9006102	Symbol	* VGA_CRTC_CURSOR_START		9005010						
ANR	9006103	Symbol	& width		9005010						
ANR	9006104	Symbol	VGA_GR06_GRAPHICS_MODE		9005010						
ANR	9006105	Symbol	s -> cr		9005010						
ANR	9006106	Symbol	s -> last_height		9005010						
ANR	9006107	Symbol	s -> con		9005010						
ANR	9006108	Symbol	s -> gr		9005010						
ANR	9006109	Symbol	VMEM2CHTYPE		9005010						
ANR	9006110	Symbol	VGA_CRTC_MAX_SCAN		9005010						
ANR	9006111	Symbol	s -> full_update_gfx		9005010						
ANR	9006112	Symbol	cursor_offset		9005010						
ANR	9006113	Symbol	VGA_GFX_MISC		9005010						
ANR	9006114	Symbol	le32_to_cpu		9005010						
ANR	9006115	Symbol	* msg_buffer		9005010						
ANR	9006116	Symbol	* * s		9005010						
ANR	9006117	Symbol	msg_buffer		9005010						
ANR	9006118	Symbol	VGA_CRTC_V_TOTAL		9005010						
ANR	9006119	Symbol	* VGA_CRTC_CURSOR_END		9005010						
ANR	9006120	Symbol	s -> sr		9005010						
ANR	9006121	Symbol	opaque		9005010						
ANR	9006122	Symbol	src		9005010						
ANR	9006123	Symbol	s -> full_update_text		9005010						
ANR	9006124	Symbol	s -> vram_ptr		9005010						
ANR	9006125	Symbol	i		9005010						
ANR	9006126	Symbol	c_min		9005010						
ANR	9006127	Symbol	s -> cursor_offset		9005010						
ANR	9006128	Symbol	s		9005010						
ANR	9006129	Symbol	s -> graphic_mode		9005010						
ANR	9006130	Symbol	* i		9005010						
ANR	9006131	Symbol	cw		9005010						
ANR	9006132	Symbol	* VGA_CRTC_OVERFLOW		9005010						
ANR	9006133	Symbol	TEXTMODE_X		9005010						
ANR	9006134	Symbol	TEXTMODE_Y		9005010						
ANR	9006135	Symbol	width		9005010						
ANR	9006136	Symbol	VGA_CRTC_CURSOR_END		9005010						
ANR	9006137	Symbol	* VGA_CRTC_V_DISP_END		9005010						
ANR	9006138	Symbol	VGA_CRTC_CURSOR_START		9005010						
ANR	9006139	Symbol	* s		9005010						
ANR	9006140	Symbol	GMODE_BLANK		9005010						
ANR	9006141	Symbol	s -> cursor_end		9005010						
