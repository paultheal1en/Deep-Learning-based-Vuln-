command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8661314	File	/home/p4ultr4n/workplace/ReVeal/raw_code/url_find_protocol_1.c								
ANR	8661315	Function	url_find_protocol	1:0:0:1215							
ANR	8661316	FunctionDef	url_find_protocol (const char * filename)		8661315	0					
ANR	8661317	CompoundStatement		3:0:74:1215	8661315	0					
ANR	8661318	IdentifierDeclStatement	const URLProtocol * * protocols ;	5:4:81:110	8661315	0	True				
ANR	8661319	IdentifierDecl	* * protocols		8661315	0					
ANR	8661320	IdentifierDeclType	const URLProtocol * *		8661315	0					
ANR	8661321	Identifier	protocols		8661315	1					
ANR	8661322	IdentifierDeclStatement	"char proto_str [ 128 ] , proto_nested [ 128 ] , * ptr ;"	7:4:117:161	8661315	1	True				
ANR	8661323	IdentifierDecl	proto_str [ 128 ]		8661315	0					
ANR	8661324	IdentifierDeclType	char [ 128 ]		8661315	0					
ANR	8661325	Identifier	proto_str		8661315	1					
ANR	8661326	PrimaryExpression	128		8661315	2					
ANR	8661327	IdentifierDecl	proto_nested [ 128 ]		8661315	1					
ANR	8661328	IdentifierDeclType	char [ 128 ]		8661315	0					
ANR	8661329	Identifier	proto_nested		8661315	1					
ANR	8661330	PrimaryExpression	128		8661315	2					
ANR	8661331	IdentifierDecl	* ptr		8661315	2					
ANR	8661332	IdentifierDeclType	char *		8661315	0					
ANR	8661333	Identifier	ptr		8661315	1					
ANR	8661334	IdentifierDeclStatement	"size_t proto_len = strspn ( filename , URL_SCHEME_CHARS ) ;"	9:4:168:221	8661315	2	True				
ANR	8661335	IdentifierDecl	"proto_len = strspn ( filename , URL_SCHEME_CHARS )"		8661315	0					
ANR	8661336	IdentifierDeclType	size_t		8661315	0					
ANR	8661337	Identifier	proto_len		8661315	1					
ANR	8661338	AssignmentExpression	"proto_len = strspn ( filename , URL_SCHEME_CHARS )"		8661315	2		=			
ANR	8661339	Identifier	proto_len		8661315	0					
ANR	8661340	CallExpression	"strspn ( filename , URL_SCHEME_CHARS )"		8661315	1					
ANR	8661341	Callee	strspn		8661315	0					
ANR	8661342	Identifier	strspn		8661315	0					
ANR	8661343	ArgumentList	filename		8661315	1					
ANR	8661344	Argument	filename		8661315	0					
ANR	8661345	Identifier	filename		8661315	0					
ANR	8661346	Argument	URL_SCHEME_CHARS		8661315	1					
ANR	8661347	Identifier	URL_SCHEME_CHARS		8661315	0					
ANR	8661348	IdentifierDeclStatement	int i ;	11:4:228:233	8661315	3	True				
ANR	8661349	IdentifierDecl	i		8661315	0					
ANR	8661350	IdentifierDeclType	int		8661315	0					
ANR	8661351	Identifier	i		8661315	1					
ANR	8661352	IfStatement	"if ( filename [ proto_len ] != ':' && ( strncmp ( filename , ""subfile,"" , 8 ) || ! strchr ( filename + proto_len + 1 , ':' ) ) || is_dos_path ( filename ) )"		8661315	4					
ANR	8661353	Condition	"filename [ proto_len ] != ':' && ( strncmp ( filename , ""subfile,"" , 8 ) || ! strchr ( filename + proto_len + 1 , ':' ) ) || is_dos_path ( filename )"	15:8:246:394	8661315	0	True				
ANR	8661354	OrExpression	"filename [ proto_len ] != ':' && ( strncmp ( filename , ""subfile,"" , 8 ) || ! strchr ( filename + proto_len + 1 , ':' ) ) || is_dos_path ( filename )"		8661315	0		||			
ANR	8661355	AndExpression	"filename [ proto_len ] != ':' && ( strncmp ( filename , ""subfile,"" , 8 ) || ! strchr ( filename + proto_len + 1 , ':' ) )"		8661315	0		&&			
ANR	8661356	EqualityExpression	filename [ proto_len ] != ':'		8661315	0		!=			
ANR	8661357	ArrayIndexing	filename [ proto_len ]		8661315	0					
ANR	8661358	Identifier	filename		8661315	0					
ANR	8661359	Identifier	proto_len		8661315	1					
ANR	8661360	PrimaryExpression	':'		8661315	1					
ANR	8661361	OrExpression	"strncmp ( filename , ""subfile,"" , 8 ) || ! strchr ( filename + proto_len + 1 , ':' )"		8661315	1		||			
ANR	8661362	CallExpression	"strncmp ( filename , ""subfile,"" , 8 )"		8661315	0					
ANR	8661363	Callee	strncmp		8661315	0					
ANR	8661364	Identifier	strncmp		8661315	0					
ANR	8661365	ArgumentList	filename		8661315	1					
ANR	8661366	Argument	filename		8661315	0					
ANR	8661367	Identifier	filename		8661315	0					
ANR	8661368	Argument	"""subfile,"""		8661315	1					
ANR	8661369	PrimaryExpression	"""subfile,"""		8661315	0					
ANR	8661370	Argument	8		8661315	2					
ANR	8661371	PrimaryExpression	8		8661315	0					
ANR	8661372	UnaryOperationExpression	"! strchr ( filename + proto_len + 1 , ':' )"		8661315	1					
ANR	8661373	UnaryOperator	!		8661315	0					
ANR	8661374	CallExpression	"strchr ( filename + proto_len + 1 , ':' )"		8661315	1					
ANR	8661375	Callee	strchr		8661315	0					
ANR	8661376	Identifier	strchr		8661315	0					
ANR	8661377	ArgumentList	filename + proto_len + 1		8661315	1					
ANR	8661378	Argument	filename + proto_len + 1		8661315	0					
ANR	8661379	AdditiveExpression	filename + proto_len + 1		8661315	0		+			
ANR	8661380	Identifier	filename		8661315	0					
ANR	8661381	AdditiveExpression	proto_len + 1		8661315	1		+			
ANR	8661382	Identifier	proto_len		8661315	0					
ANR	8661383	PrimaryExpression	1		8661315	1					
ANR	8661384	Argument	':'		8661315	1					
ANR	8661385	PrimaryExpression	':'		8661315	0					
ANR	8661386	CallExpression	is_dos_path ( filename )		8661315	1					
ANR	8661387	Callee	is_dos_path		8661315	0					
ANR	8661388	Identifier	is_dos_path		8661315	0					
ANR	8661389	ArgumentList	filename		8661315	1					
ANR	8661390	Argument	filename		8661315	0					
ANR	8661391	Identifier	filename		8661315	0					
ANR	8661392	ExpressionStatement	"strcpy ( proto_str , ""file"" )"	21:8:406:431	8661315	1	True				
ANR	8661393	CallExpression	"strcpy ( proto_str , ""file"" )"		8661315	0					
ANR	8661394	Callee	strcpy		8661315	0					
ANR	8661395	Identifier	strcpy		8661315	0					
ANR	8661396	ArgumentList	proto_str		8661315	1					
ANR	8661397	Argument	proto_str		8661315	0					
ANR	8661398	Identifier	proto_str		8661315	0					
ANR	8661399	Argument	"""file"""		8661315	1					
ANR	8661400	PrimaryExpression	"""file"""		8661315	0					
ANR	8661401	ElseStatement	else		8661315	0					
ANR	8661402	ExpressionStatement	"av_strlcpy ( proto_str , filename , FFMIN ( proto_len + 1 , sizeof ( proto_str ) ) )"	25:8:452:544	8661315	0	True				
ANR	8661403	CallExpression	"av_strlcpy ( proto_str , filename , FFMIN ( proto_len + 1 , sizeof ( proto_str ) ) )"		8661315	0					
ANR	8661404	Callee	av_strlcpy		8661315	0					
ANR	8661405	Identifier	av_strlcpy		8661315	0					
ANR	8661406	ArgumentList	proto_str		8661315	1					
ANR	8661407	Argument	proto_str		8661315	0					
ANR	8661408	Identifier	proto_str		8661315	0					
ANR	8661409	Argument	filename		8661315	1					
ANR	8661410	Identifier	filename		8661315	0					
ANR	8661411	Argument	"FFMIN ( proto_len + 1 , sizeof ( proto_str ) )"		8661315	2					
ANR	8661412	CallExpression	"FFMIN ( proto_len + 1 , sizeof ( proto_str ) )"		8661315	0					
ANR	8661413	Callee	FFMIN		8661315	0					
ANR	8661414	Identifier	FFMIN		8661315	0					
ANR	8661415	ArgumentList	proto_len + 1		8661315	1					
ANR	8661416	Argument	proto_len + 1		8661315	0					
ANR	8661417	AdditiveExpression	proto_len + 1		8661315	0		+			
ANR	8661418	Identifier	proto_len		8661315	0					
ANR	8661419	PrimaryExpression	1		8661315	1					
ANR	8661420	Argument	sizeof ( proto_str )		8661315	1					
ANR	8661421	SizeofExpression	sizeof ( proto_str )		8661315	0					
ANR	8661422	Sizeof	sizeof		8661315	0					
ANR	8661423	SizeofOperand	proto_str		8661315	1					
ANR	8661424	IfStatement	"if ( ( ptr = strchr ( proto_str , ',' ) ) )"		8661315	5					
ANR	8661425	Condition	"ptr = strchr ( proto_str , ',' )"	31:8:557:586	8661315	0	True				
ANR	8661426	AssignmentExpression	"ptr = strchr ( proto_str , ',' )"		8661315	0		=			
ANR	8661427	Identifier	ptr		8661315	0					
ANR	8661428	CallExpression	"strchr ( proto_str , ',' )"		8661315	1					
ANR	8661429	Callee	strchr		8661315	0					
ANR	8661430	Identifier	strchr		8661315	0					
ANR	8661431	ArgumentList	proto_str		8661315	1					
ANR	8661432	Argument	proto_str		8661315	0					
ANR	8661433	Identifier	proto_str		8661315	0					
ANR	8661434	Argument	"','"		8661315	1					
ANR	8661435	PrimaryExpression	"','"		8661315	0					
ANR	8661436	ExpressionStatement	* ptr = '\\0'	33:8:598:609	8661315	1	True				
ANR	8661437	AssignmentExpression	* ptr = '\\0'		8661315	0		=			
ANR	8661438	UnaryOperationExpression	* ptr		8661315	0					
ANR	8661439	UnaryOperator	*		8661315	0					
ANR	8661440	Identifier	ptr		8661315	1					
ANR	8661441	PrimaryExpression	'\\0'		8661315	1					
ANR	8661442	ExpressionStatement	"av_strlcpy ( proto_nested , proto_str , sizeof ( proto_nested ) )"	35:4:616:673	8661315	6	True				
ANR	8661443	CallExpression	"av_strlcpy ( proto_nested , proto_str , sizeof ( proto_nested ) )"		8661315	0					
ANR	8661444	Callee	av_strlcpy		8661315	0					
ANR	8661445	Identifier	av_strlcpy		8661315	0					
ANR	8661446	ArgumentList	proto_nested		8661315	1					
ANR	8661447	Argument	proto_nested		8661315	0					
ANR	8661448	Identifier	proto_nested		8661315	0					
ANR	8661449	Argument	proto_str		8661315	1					
ANR	8661450	Identifier	proto_str		8661315	0					
ANR	8661451	Argument	sizeof ( proto_nested )		8661315	2					
ANR	8661452	SizeofExpression	sizeof ( proto_nested )		8661315	0					
ANR	8661453	Sizeof	sizeof		8661315	0					
ANR	8661454	SizeofOperand	proto_nested		8661315	1					
ANR	8661455	IfStatement	"if ( ( ptr = strchr ( proto_nested , '+' ) ) )"		8661315	7					
ANR	8661456	Condition	"ptr = strchr ( proto_nested , '+' )"	37:8:684:716	8661315	0	True				
ANR	8661457	AssignmentExpression	"ptr = strchr ( proto_nested , '+' )"		8661315	0		=			
ANR	8661458	Identifier	ptr		8661315	0					
ANR	8661459	CallExpression	"strchr ( proto_nested , '+' )"		8661315	1					
ANR	8661460	Callee	strchr		8661315	0					
ANR	8661461	Identifier	strchr		8661315	0					
ANR	8661462	ArgumentList	proto_nested		8661315	1					
ANR	8661463	Argument	proto_nested		8661315	0					
ANR	8661464	Identifier	proto_nested		8661315	0					
ANR	8661465	Argument	'+'		8661315	1					
ANR	8661466	PrimaryExpression	'+'		8661315	0					
ANR	8661467	ExpressionStatement	* ptr = '\\0'	39:8:728:739	8661315	1	True				
ANR	8661468	AssignmentExpression	* ptr = '\\0'		8661315	0		=			
ANR	8661469	UnaryOperationExpression	* ptr		8661315	0					
ANR	8661470	UnaryOperator	*		8661315	0					
ANR	8661471	Identifier	ptr		8661315	1					
ANR	8661472	PrimaryExpression	'\\0'		8661315	1					
ANR	8661473	ExpressionStatement	"protocols = ffurl_get_protocols ( NULL , NULL )"	43:4:748:791	8661315	8	True				
ANR	8661474	AssignmentExpression	"protocols = ffurl_get_protocols ( NULL , NULL )"		8661315	0		=			
ANR	8661475	Identifier	protocols		8661315	0					
ANR	8661476	CallExpression	"ffurl_get_protocols ( NULL , NULL )"		8661315	1					
ANR	8661477	Callee	ffurl_get_protocols		8661315	0					
ANR	8661478	Identifier	ffurl_get_protocols		8661315	0					
ANR	8661479	ArgumentList	NULL		8661315	1					
ANR	8661480	Argument	NULL		8661315	0					
ANR	8661481	Identifier	NULL		8661315	0					
ANR	8661482	Argument	NULL		8661315	1					
ANR	8661483	Identifier	NULL		8661315	0					
ANR	8661484	ForStatement	for ( i = 0 ; protocols [ i ] ; i ++ )		8661315	9					
ANR	8661485	ForInit	i = 0 ;	47:9:805:810	8661315	0	True				
ANR	8661486	AssignmentExpression	i = 0		8661315	0		=			
ANR	8661487	Identifier	i		8661315	0					
ANR	8661488	PrimaryExpression	0		8661315	1					
ANR	8661489	Condition	protocols [ i ]	47:16:812:823	8661315	1	True				
ANR	8661490	ArrayIndexing	protocols [ i ]		8661315	0					
ANR	8661491	Identifier	protocols		8661315	0					
ANR	8661492	Identifier	i		8661315	1					
ANR	8661493	PostIncDecOperationExpression	i ++	47:30:826:828	8661315	2	True				
ANR	8661494	Identifier	i		8661315	0					
ANR	8661495	IncDec	++		8661315	1					
ANR	8661496	CompoundStatement		47:12:771:807	8661315	3					
ANR	8661497	IdentifierDeclStatement	const URLProtocol * up = protocols [ i ] ;	49:12:846:882	8661315	0	True				
ANR	8661498	IdentifierDecl	* up = protocols [ i ]		8661315	0					
ANR	8661499	IdentifierDeclType	const URLProtocol *		8661315	0					
ANR	8661500	Identifier	up		8661315	1					
ANR	8661501	AssignmentExpression	* up = protocols [ i ]		8661315	2		=			
ANR	8661502	Identifier	up		8661315	0					
ANR	8661503	ArrayIndexing	protocols [ i ]		8661315	1					
ANR	8661504	Identifier	protocols		8661315	0					
ANR	8661505	Identifier	i		8661315	1					
ANR	8661506	IfStatement	"if ( ! strcmp ( proto_str , up -> name ) )"		8661315	1					
ANR	8661507	Condition	"! strcmp ( proto_str , up -> name )"	51:12:897:924	8661315	0	True				
ANR	8661508	UnaryOperationExpression	"! strcmp ( proto_str , up -> name )"		8661315	0					
ANR	8661509	UnaryOperator	!		8661315	0					
ANR	8661510	CallExpression	"strcmp ( proto_str , up -> name )"		8661315	1					
ANR	8661511	Callee	strcmp		8661315	0					
ANR	8661512	Identifier	strcmp		8661315	0					
ANR	8661513	ArgumentList	proto_str		8661315	1					
ANR	8661514	Argument	proto_str		8661315	0					
ANR	8661515	Identifier	proto_str		8661315	0					
ANR	8661516	Argument	up -> name		8661315	1					
ANR	8661517	PtrMemberAccess	up -> name		8661315	0					
ANR	8661518	Identifier	up		8661315	0					
ANR	8661519	Identifier	name		8661315	1					
ANR	8661520	CompoundStatement		49:42:852:852	8661315	1					
ANR	8661521	ExpressionStatement	av_freep ( & protocols )	53:12:942:962	8661315	0	True				
ANR	8661522	CallExpression	av_freep ( & protocols )		8661315	0					
ANR	8661523	Callee	av_freep		8661315	0					
ANR	8661524	Identifier	av_freep		8661315	0					
ANR	8661525	ArgumentList	& protocols		8661315	1					
ANR	8661526	Argument	& protocols		8661315	0					
ANR	8661527	UnaryOperationExpression	& protocols		8661315	0					
ANR	8661528	UnaryOperator	&		8661315	0					
ANR	8661529	Identifier	protocols		8661315	1					
ANR	8661530	ReturnStatement	return up ;	55:12:977:986	8661315	1	True				
ANR	8661531	Identifier	up		8661315	0					
ANR	8661532	IfStatement	"if ( up -> flags & URL_PROTOCOL_FLAG_NESTED_SCHEME && ! strcmp ( proto_nested , up -> name ) )"		8661315	2					
ANR	8661533	Condition	"up -> flags & URL_PROTOCOL_FLAG_NESTED_SCHEME && ! strcmp ( proto_nested , up -> name )"	59:12:1012:1102	8661315	0	True				
ANR	8661534	AndExpression	"up -> flags & URL_PROTOCOL_FLAG_NESTED_SCHEME && ! strcmp ( proto_nested , up -> name )"		8661315	0		&&			
ANR	8661535	BitAndExpression	up -> flags & URL_PROTOCOL_FLAG_NESTED_SCHEME		8661315	0		&			
ANR	8661536	PtrMemberAccess	up -> flags		8661315	0					
ANR	8661537	Identifier	up		8661315	0					
ANR	8661538	Identifier	flags		8661315	1					
ANR	8661539	Identifier	URL_PROTOCOL_FLAG_NESTED_SCHEME		8661315	1					
ANR	8661540	UnaryOperationExpression	"! strcmp ( proto_nested , up -> name )"		8661315	1					
ANR	8661541	UnaryOperator	!		8661315	0					
ANR	8661542	CallExpression	"strcmp ( proto_nested , up -> name )"		8661315	1					
ANR	8661543	Callee	strcmp		8661315	0					
ANR	8661544	Identifier	strcmp		8661315	0					
ANR	8661545	ArgumentList	proto_nested		8661315	1					
ANR	8661546	Argument	proto_nested		8661315	0					
ANR	8661547	Identifier	proto_nested		8661315	0					
ANR	8661548	Argument	up -> name		8661315	1					
ANR	8661549	PtrMemberAccess	up -> name		8661315	0					
ANR	8661550	Identifier	up		8661315	0					
ANR	8661551	Identifier	name		8661315	1					
ANR	8661552	CompoundStatement		59:45:1030:1030	8661315	1					
ANR	8661553	ExpressionStatement	av_freep ( & protocols )	63:12:1120:1140	8661315	0	True				
ANR	8661554	CallExpression	av_freep ( & protocols )		8661315	0					
ANR	8661555	Callee	av_freep		8661315	0					
ANR	8661556	Identifier	av_freep		8661315	0					
ANR	8661557	ArgumentList	& protocols		8661315	1					
ANR	8661558	Argument	& protocols		8661315	0					
ANR	8661559	UnaryOperationExpression	& protocols		8661315	0					
ANR	8661560	UnaryOperator	&		8661315	0					
ANR	8661561	Identifier	protocols		8661315	1					
ANR	8661562	ReturnStatement	return up ;	65:12:1155:1164	8661315	1	True				
ANR	8661563	Identifier	up		8661315	0					
ANR	8661564	ExpressionStatement	av_freep ( & protocols )	71:4:1189:1209	8661315	10	True				
ANR	8661565	CallExpression	av_freep ( & protocols )		8661315	0					
ANR	8661566	Callee	av_freep		8661315	0					
ANR	8661567	Identifier	av_freep		8661315	0					
ANR	8661568	ArgumentList	& protocols		8661315	1					
ANR	8661569	Argument	& protocols		8661315	0					
ANR	8661570	UnaryOperationExpression	& protocols		8661315	0					
ANR	8661571	UnaryOperator	&		8661315	0					
ANR	8661572	Identifier	protocols		8661315	1					
ANR	8661573	ReturnType	static const struct URLProtocol *		8661315	1					
ANR	8661574	Identifier	url_find_protocol		8661315	2					
ANR	8661575	ParameterList	const char * filename		8661315	3					
ANR	8661576	Parameter	const char * filename	1:51:51:70	8661315	0	True				
ANR	8661577	ParameterType	const char *		8661315	0					
ANR	8661578	Identifier	filename		8661315	1					
ANR	8661579	CFGEntryNode	ENTRY		8661315		True				
ANR	8661580	CFGExitNode	EXIT		8661315		True				
ANR	8661581	Symbol	* up		8661315						
ANR	8661582	Symbol	& protocols		8661315						
ANR	8661583	Symbol	strchr		8661315						
ANR	8661584	Symbol	FFMIN		8661315						
ANR	8661585	Symbol	up -> flags		8661315						
ANR	8661586	Symbol	URL_PROTOCOL_FLAG_NESTED_SCHEME		8661315						
ANR	8661587	Symbol	strncmp		8661315						
ANR	8661588	Symbol	ffurl_get_protocols		8661315						
ANR	8661589	Symbol	is_dos_path		8661315						
ANR	8661590	Symbol	* ptr		8661315						
ANR	8661591	Symbol	proto_nested		8661315						
ANR	8661592	Symbol	up		8661315						
ANR	8661593	Symbol	protocols		8661315						
ANR	8661594	Symbol	proto_str		8661315						
ANR	8661595	Symbol	* protocols		8661315						
ANR	8661596	Symbol	strcmp		8661315						
ANR	8661597	Symbol	URL_SCHEME_CHARS		8661315						
ANR	8661598	Symbol	NULL		8661315						
ANR	8661599	Symbol	i		8661315						
ANR	8661600	Symbol	ptr		8661315						
ANR	8661601	Symbol	* proto_len		8661315						
ANR	8661602	Symbol	filename		8661315						
ANR	8661603	Symbol	* filename		8661315						
ANR	8661604	Symbol	* i		8661315						
ANR	8661605	Symbol	strspn		8661315						
ANR	8661606	Symbol	up -> name		8661315						
ANR	8661607	Symbol	proto_len		8661315						
