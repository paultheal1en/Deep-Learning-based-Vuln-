command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	7696001	File	/home/p4ultr4n/workplace/ReVeal/raw_code/sdl_callback_0.c								
ANR	7696002	Function	sdl_callback	1:0:0:1590							
ANR	7696003	FunctionDef	"sdl_callback (void * opaque , Uint8 * buf , int len)"		7696002	0					
ANR	7696004	CompoundStatement		3:0:62:1590	7696002	0					
ANR	7696005	IdentifierDeclStatement	SDLVoiceOut * sdl = opaque ;	5:4:69:94	7696002	0	True				
ANR	7696006	IdentifierDecl	* sdl = opaque		7696002	0					
ANR	7696007	IdentifierDeclType	SDLVoiceOut *		7696002	0					
ANR	7696008	Identifier	sdl		7696002	1					
ANR	7696009	AssignmentExpression	* sdl = opaque		7696002	2		=			
ANR	7696010	Identifier	opaque		7696002	0					
ANR	7696011	Identifier	opaque		7696002	1					
ANR	7696012	IdentifierDeclStatement	SDLAudioState * s = & glob_sdl ;	7:4:101:129	7696002	1	True				
ANR	7696013	IdentifierDecl	* s = & glob_sdl		7696002	0					
ANR	7696014	IdentifierDeclType	SDLAudioState *		7696002	0					
ANR	7696015	Identifier	s		7696002	1					
ANR	7696016	AssignmentExpression	* s = & glob_sdl		7696002	2		=			
ANR	7696017	Identifier	s		7696002	0					
ANR	7696018	UnaryOperationExpression	& glob_sdl		7696002	1					
ANR	7696019	UnaryOperator	&		7696002	0					
ANR	7696020	Identifier	glob_sdl		7696002	1					
ANR	7696021	IdentifierDeclStatement	HWVoiceOut * hw = & sdl -> hw ;	9:4:136:161	7696002	2	True				
ANR	7696022	IdentifierDecl	* hw = & sdl -> hw		7696002	0					
ANR	7696023	IdentifierDeclType	HWVoiceOut *		7696002	0					
ANR	7696024	Identifier	hw		7696002	1					
ANR	7696025	AssignmentExpression	* hw = & sdl -> hw		7696002	2		=			
ANR	7696026	Identifier	hw		7696002	0					
ANR	7696027	UnaryOperationExpression	& sdl -> hw		7696002	1					
ANR	7696028	UnaryOperator	&		7696002	0					
ANR	7696029	PtrMemberAccess	sdl -> hw		7696002	1					
ANR	7696030	Identifier	sdl		7696002	0					
ANR	7696031	Identifier	hw		7696002	1					
ANR	7696032	IdentifierDeclStatement	int samples = len >> hw -> info . shift ;	11:4:168:203	7696002	3	True				
ANR	7696033	IdentifierDecl	samples = len >> hw -> info . shift		7696002	0					
ANR	7696034	IdentifierDeclType	int		7696002	0					
ANR	7696035	Identifier	samples		7696002	1					
ANR	7696036	AssignmentExpression	samples = len >> hw -> info . shift		7696002	2		=			
ANR	7696037	Identifier	samples		7696002	0					
ANR	7696038	ShiftExpression	len >> hw -> info . shift		7696002	1		>>			
ANR	7696039	Identifier	len		7696002	0					
ANR	7696040	MemberAccess	hw -> info . shift		7696002	1					
ANR	7696041	PtrMemberAccess	hw -> info		7696002	0					
ANR	7696042	Identifier	hw		7696002	0					
ANR	7696043	Identifier	info		7696002	1					
ANR	7696044	Identifier	shift		7696002	1					
ANR	7696045	IfStatement	if ( s -> exit )		7696002	4					
ANR	7696046	Condition	s -> exit	15:8:216:222	7696002	0	True				
ANR	7696047	PtrMemberAccess	s -> exit		7696002	0					
ANR	7696048	Identifier	s		7696002	0					
ANR	7696049	Identifier	exit		7696002	1					
ANR	7696050	CompoundStatement		13:17:162:162	7696002	1					
ANR	7696051	ReturnStatement	return ;	17:8:236:242	7696002	0	True				
ANR	7696052	WhileStatement	while ( samples )		7696002	5					
ANR	7696053	Condition	samples	23:11:265:271	7696002	0	True				
ANR	7696054	Identifier	samples		7696002	0					
ANR	7696055	CompoundStatement		23:8:222:238	7696002	1					
ANR	7696056	IdentifierDeclStatement	"int to_mix , decr ;"	25:8:285:301	7696002	0	True				
ANR	7696057	IdentifierDecl	to_mix		7696002	0					
ANR	7696058	IdentifierDeclType	int		7696002	0					
ANR	7696059	Identifier	to_mix		7696002	1					
ANR	7696060	IdentifierDecl	decr		7696002	1					
ANR	7696061	IdentifierDeclType	int		7696002	0					
ANR	7696062	Identifier	decr		7696002	1					
ANR	7696063	ExpressionStatement	"sdl_wait ( s , ""sdl_callback"" )"	31:8:374:402	7696002	1	True				
ANR	7696064	CallExpression	"sdl_wait ( s , ""sdl_callback"" )"		7696002	0					
ANR	7696065	Callee	sdl_wait		7696002	0					
ANR	7696066	Identifier	sdl_wait		7696002	0					
ANR	7696067	ArgumentList	s		7696002	1					
ANR	7696068	Argument	s		7696002	0					
ANR	7696069	Identifier	s		7696002	0					
ANR	7696070	Argument	"""sdl_callback"""		7696002	1					
ANR	7696071	PrimaryExpression	"""sdl_callback"""		7696002	0					
ANR	7696072	IfStatement	if ( s -> exit )		7696002	2					
ANR	7696073	Condition	s -> exit	33:12:417:423	7696002	0	True				
ANR	7696074	PtrMemberAccess	s -> exit		7696002	0					
ANR	7696075	Identifier	s		7696002	0					
ANR	7696076	Identifier	exit		7696002	1					
ANR	7696077	CompoundStatement		31:21:363:363	7696002	1					
ANR	7696078	ReturnStatement	return ;	35:12:441:447	7696002	0	True				
ANR	7696079	IfStatement	"if ( sdl_lock ( s , ""sdl_callback"" ) )"		7696002	3					
ANR	7696080	Condition	"sdl_lock ( s , ""sdl_callback"" )"	41:12:475:502	7696002	0	True				
ANR	7696081	CallExpression	"sdl_lock ( s , ""sdl_callback"" )"		7696002	0					
ANR	7696082	Callee	sdl_lock		7696002	0					
ANR	7696083	Identifier	sdl_lock		7696002	0					
ANR	7696084	ArgumentList	s		7696002	1					
ANR	7696085	Argument	s		7696002	0					
ANR	7696086	Identifier	s		7696002	0					
ANR	7696087	Argument	"""sdl_callback"""		7696002	1					
ANR	7696088	PrimaryExpression	"""sdl_callback"""		7696002	0					
ANR	7696089	CompoundStatement		39:42:442:442	7696002	1					
ANR	7696090	ReturnStatement	return ;	43:12:520:526	7696002	0	True				
ANR	7696091	IfStatement	"if ( audio_bug ( AUDIO_FUNC , sdl -> live < 0 || sdl -> live > hw -> samples ) )"		7696002	4					
ANR	7696092	Condition	"audio_bug ( AUDIO_FUNC , sdl -> live < 0 || sdl -> live > hw -> samples )"	49:12:554:617	7696002	0	True				
ANR	7696093	CallExpression	"audio_bug ( AUDIO_FUNC , sdl -> live < 0 || sdl -> live > hw -> samples )"		7696002	0					
ANR	7696094	Callee	audio_bug		7696002	0					
ANR	7696095	Identifier	audio_bug		7696002	0					
ANR	7696096	ArgumentList	AUDIO_FUNC		7696002	1					
ANR	7696097	Argument	AUDIO_FUNC		7696002	0					
ANR	7696098	Identifier	AUDIO_FUNC		7696002	0					
ANR	7696099	Argument	sdl -> live < 0 || sdl -> live > hw -> samples		7696002	1					
ANR	7696100	OrExpression	sdl -> live < 0 || sdl -> live > hw -> samples		7696002	0		||			
ANR	7696101	RelationalExpression	sdl -> live < 0		7696002	0		<			
ANR	7696102	PtrMemberAccess	sdl -> live		7696002	0					
ANR	7696103	Identifier	sdl		7696002	0					
ANR	7696104	Identifier	live		7696002	1					
ANR	7696105	PrimaryExpression	0		7696002	1					
ANR	7696106	RelationalExpression	sdl -> live > hw -> samples		7696002	1		>			
ANR	7696107	PtrMemberAccess	sdl -> live		7696002	0					
ANR	7696108	Identifier	sdl		7696002	0					
ANR	7696109	Identifier	live		7696002	1					
ANR	7696110	PtrMemberAccess	hw -> samples		7696002	1					
ANR	7696111	Identifier	hw		7696002	0					
ANR	7696112	Identifier	samples		7696002	1					
ANR	7696113	CompoundStatement		47:78:557:557	7696002	1					
ANR	7696114	ExpressionStatement	"dolog ( ""sdl->live=%d hw->samples=%d\\n"" , sdl -> live , hw -> samples )"	51:12:635:718	7696002	0	True				
ANR	7696115	CallExpression	"dolog ( ""sdl->live=%d hw->samples=%d\\n"" , sdl -> live , hw -> samples )"		7696002	0					
ANR	7696116	Callee	dolog		7696002	0					
ANR	7696117	Identifier	dolog		7696002	0					
ANR	7696118	ArgumentList	"""sdl->live=%d hw->samples=%d\\n"""		7696002	1					
ANR	7696119	Argument	"""sdl->live=%d hw->samples=%d\\n"""		7696002	0					
ANR	7696120	PrimaryExpression	"""sdl->live=%d hw->samples=%d\\n"""		7696002	0					
ANR	7696121	Argument	sdl -> live		7696002	1					
ANR	7696122	PtrMemberAccess	sdl -> live		7696002	0					
ANR	7696123	Identifier	sdl		7696002	0					
ANR	7696124	Identifier	live		7696002	1					
ANR	7696125	Argument	hw -> samples		7696002	2					
ANR	7696126	PtrMemberAccess	hw -> samples		7696002	0					
ANR	7696127	Identifier	hw		7696002	0					
ANR	7696128	Identifier	samples		7696002	1					
ANR	7696129	ReturnStatement	return ;	55:12:733:739	7696002	1	True				
ANR	7696130	IfStatement	if ( ! sdl -> live )		7696002	5					
ANR	7696131	Condition	! sdl -> live	61:12:767:776	7696002	0	True				
ANR	7696132	UnaryOperationExpression	! sdl -> live		7696002	0					
ANR	7696133	UnaryOperator	!		7696002	0					
ANR	7696134	PtrMemberAccess	sdl -> live		7696002	1					
ANR	7696135	Identifier	sdl		7696002	0					
ANR	7696136	Identifier	live		7696002	1					
ANR	7696137	CompoundStatement		59:24:716:716	7696002	1					
ANR	7696138	GotoStatement	goto again ;	63:12:794:804	7696002	0	True				
ANR	7696139	Identifier	again		7696002	0					
ANR	7696140	ExpressionStatement	"to_mix = audio_MIN ( samples , sdl -> live )"	71:8:882:921	7696002	6	True				
ANR	7696141	AssignmentExpression	"to_mix = audio_MIN ( samples , sdl -> live )"		7696002	0		=			
ANR	7696142	Identifier	to_mix		7696002	0					
ANR	7696143	CallExpression	"audio_MIN ( samples , sdl -> live )"		7696002	1					
ANR	7696144	Callee	audio_MIN		7696002	0					
ANR	7696145	Identifier	audio_MIN		7696002	0					
ANR	7696146	ArgumentList	samples		7696002	1					
ANR	7696147	Argument	samples		7696002	0					
ANR	7696148	Identifier	samples		7696002	0					
ANR	7696149	Argument	sdl -> live		7696002	1					
ANR	7696150	PtrMemberAccess	sdl -> live		7696002	0					
ANR	7696151	Identifier	sdl		7696002	0					
ANR	7696152	Identifier	live		7696002	1					
ANR	7696153	ExpressionStatement	decr = to_mix	73:8:932:945	7696002	7	True				
ANR	7696154	AssignmentExpression	decr = to_mix		7696002	0		=			
ANR	7696155	Identifier	decr		7696002	0					
ANR	7696156	Identifier	to_mix		7696002	1					
ANR	7696157	WhileStatement	while ( to_mix )		7696002	8					
ANR	7696158	Condition	to_mix	75:15:963:968	7696002	0	True				
ANR	7696159	Identifier	to_mix		7696002	0					
ANR	7696160	CompoundStatement		77:12:992:1033	7696002	1					
ANR	7696161	IdentifierDeclStatement	"int chunk = audio_MIN ( to_mix , hw -> samples - hw -> rpos ) ;"	77:12:986:1040	7696002	0	True				
ANR	7696162	IdentifierDecl	"chunk = audio_MIN ( to_mix , hw -> samples - hw -> rpos )"		7696002	0					
ANR	7696163	IdentifierDeclType	int		7696002	0					
ANR	7696164	Identifier	chunk		7696002	1					
ANR	7696165	AssignmentExpression	"chunk = audio_MIN ( to_mix , hw -> samples - hw -> rpos )"		7696002	2		=			
ANR	7696166	Identifier	chunk		7696002	0					
ANR	7696167	CallExpression	"audio_MIN ( to_mix , hw -> samples - hw -> rpos )"		7696002	1					
ANR	7696168	Callee	audio_MIN		7696002	0					
ANR	7696169	Identifier	audio_MIN		7696002	0					
ANR	7696170	ArgumentList	to_mix		7696002	1					
ANR	7696171	Argument	to_mix		7696002	0					
ANR	7696172	Identifier	to_mix		7696002	0					
ANR	7696173	Argument	hw -> samples - hw -> rpos		7696002	1					
ANR	7696174	AdditiveExpression	hw -> samples - hw -> rpos		7696002	0		-			
ANR	7696175	PtrMemberAccess	hw -> samples		7696002	0					
ANR	7696176	Identifier	hw		7696002	0					
ANR	7696177	Identifier	samples		7696002	1					
ANR	7696178	PtrMemberAccess	hw -> rpos		7696002	1					
ANR	7696179	Identifier	hw		7696002	0					
ANR	7696180	Identifier	rpos		7696002	1					
ANR	7696181	IdentifierDeclStatement	st_sample_t * src = hw -> mix_buf + hw -> rpos ;	79:12:1055:1096	7696002	1	True				
ANR	7696182	IdentifierDecl	* src = hw -> mix_buf + hw -> rpos		7696002	0					
ANR	7696183	IdentifierDeclType	st_sample_t *		7696002	0					
ANR	7696184	Identifier	src		7696002	1					
ANR	7696185	AssignmentExpression	* src = hw -> mix_buf + hw -> rpos		7696002	2		=			
ANR	7696186	Identifier	src		7696002	0					
ANR	7696187	AdditiveExpression	hw -> mix_buf + hw -> rpos		7696002	1		+			
ANR	7696188	PtrMemberAccess	hw -> mix_buf		7696002	0					
ANR	7696189	Identifier	hw		7696002	0					
ANR	7696190	Identifier	mix_buf		7696002	1					
ANR	7696191	PtrMemberAccess	hw -> rpos		7696002	1					
ANR	7696192	Identifier	hw		7696002	0					
ANR	7696193	Identifier	rpos		7696002	1					
ANR	7696194	ExpressionStatement	"hw -> clip ( buf , src , chunk )"	85:12:1192:1218	7696002	2	True				
ANR	7696195	CallExpression	"hw -> clip ( buf , src , chunk )"		7696002	0					
ANR	7696196	Callee	hw -> clip		7696002	0					
ANR	7696197	PtrMemberAccess	hw -> clip		7696002	0					
ANR	7696198	Identifier	hw		7696002	0					
ANR	7696199	Identifier	clip		7696002	1					
ANR	7696200	ArgumentList	buf		7696002	1					
ANR	7696201	Argument	buf		7696002	0					
ANR	7696202	Identifier	buf		7696002	0					
ANR	7696203	Argument	src		7696002	1					
ANR	7696204	Identifier	src		7696002	0					
ANR	7696205	Argument	chunk		7696002	2					
ANR	7696206	Identifier	chunk		7696002	0					
ANR	7696207	ExpressionStatement	sdl -> rpos = ( sdl -> rpos + chunk ) % hw -> samples	87:12:1233:1278	7696002	3	True				
ANR	7696208	AssignmentExpression	sdl -> rpos = ( sdl -> rpos + chunk ) % hw -> samples		7696002	0		=			
ANR	7696209	PtrMemberAccess	sdl -> rpos		7696002	0					
ANR	7696210	Identifier	sdl		7696002	0					
ANR	7696211	Identifier	rpos		7696002	1					
ANR	7696212	MultiplicativeExpression	( sdl -> rpos + chunk ) % hw -> samples		7696002	1		%			
ANR	7696213	AdditiveExpression	sdl -> rpos + chunk		7696002	0		+			
ANR	7696214	PtrMemberAccess	sdl -> rpos		7696002	0					
ANR	7696215	Identifier	sdl		7696002	0					
ANR	7696216	Identifier	rpos		7696002	1					
ANR	7696217	Identifier	chunk		7696002	1					
ANR	7696218	PtrMemberAccess	hw -> samples		7696002	1					
ANR	7696219	Identifier	hw		7696002	0					
ANR	7696220	Identifier	samples		7696002	1					
ANR	7696221	ExpressionStatement	to_mix -= chunk	89:12:1293:1308	7696002	4	True				
ANR	7696222	AssignmentExpression	to_mix -= chunk		7696002	0		-=			
ANR	7696223	Identifier	to_mix		7696002	0					
ANR	7696224	Identifier	chunk		7696002	1					
ANR	7696225	ExpressionStatement	buf += chunk << hw -> info . shift	91:12:1323:1353	7696002	5	True				
ANR	7696226	AssignmentExpression	buf += chunk << hw -> info . shift		7696002	0		+=			
ANR	7696227	Identifier	buf		7696002	0					
ANR	7696228	ShiftExpression	chunk << hw -> info . shift		7696002	1		<<			
ANR	7696229	Identifier	chunk		7696002	0					
ANR	7696230	MemberAccess	hw -> info . shift		7696002	1					
ANR	7696231	PtrMemberAccess	hw -> info		7696002	0					
ANR	7696232	Identifier	hw		7696002	0					
ANR	7696233	Identifier	info		7696002	1					
ANR	7696234	Identifier	shift		7696002	1					
ANR	7696235	ExpressionStatement	samples -= decr	95:8:1375:1390	7696002	9	True				
ANR	7696236	AssignmentExpression	samples -= decr		7696002	0		-=			
ANR	7696237	Identifier	samples		7696002	0					
ANR	7696238	Identifier	decr		7696002	1					
ANR	7696239	ExpressionStatement	sdl -> live -= decr	97:8:1401:1418	7696002	10	True				
ANR	7696240	AssignmentExpression	sdl -> live -= decr		7696002	0		-=			
ANR	7696241	PtrMemberAccess	sdl -> live		7696002	0					
ANR	7696242	Identifier	sdl		7696002	0					
ANR	7696243	Identifier	live		7696002	1					
ANR	7696244	Identifier	decr		7696002	1					
ANR	7696245	ExpressionStatement	sdl -> decr += decr	99:8:1429:1446	7696002	11	True				
ANR	7696246	AssignmentExpression	sdl -> decr += decr		7696002	0		+=			
ANR	7696247	PtrMemberAccess	sdl -> decr		7696002	0					
ANR	7696248	Identifier	sdl		7696002	0					
ANR	7696249	Identifier	decr		7696002	1					
ANR	7696250	Identifier	decr		7696002	1					
ANR	7696251	Label	again :	103:4:1455:1460	7696002	12	True				
ANR	7696252	Identifier	again		7696002	0					
ANR	7696253	IfStatement	"if ( sdl_unlock ( s , ""sdl_callback"" ) )"		7696002	13					
ANR	7696254	Condition	"sdl_unlock ( s , ""sdl_callback"" )"	105:12:1475:1504	7696002	0	True				
ANR	7696255	CallExpression	"sdl_unlock ( s , ""sdl_callback"" )"		7696002	0					
ANR	7696256	Callee	sdl_unlock		7696002	0					
ANR	7696257	Identifier	sdl_unlock		7696002	0					
ANR	7696258	ArgumentList	s		7696002	1					
ANR	7696259	Argument	s		7696002	0					
ANR	7696260	Identifier	s		7696002	0					
ANR	7696261	Argument	"""sdl_callback"""		7696002	1					
ANR	7696262	PrimaryExpression	"""sdl_callback"""		7696002	0					
ANR	7696263	CompoundStatement		103:44:1444:1444	7696002	1					
ANR	7696264	ReturnStatement	return ;	107:12:1522:1528	7696002	0	True				
ANR	7696265	ReturnType	static void		7696002	1					
ANR	7696266	Identifier	sdl_callback		7696002	2					
ANR	7696267	ParameterList	"void * opaque , Uint8 * buf , int len"		7696002	3					
ANR	7696268	Parameter	void * opaque	1:26:26:37	7696002	0	True				
ANR	7696269	ParameterType	void *		7696002	0					
ANR	7696270	Identifier	opaque		7696002	1					
ANR	7696271	Parameter	Uint8 * buf	1:40:40:49	7696002	1	True				
ANR	7696272	ParameterType	Uint8 *		7696002	0					
ANR	7696273	Identifier	buf		7696002	1					
ANR	7696274	Parameter	int len	1:52:52:58	7696002	2	True				
ANR	7696275	ParameterType	int		7696002	0					
ANR	7696276	Identifier	len		7696002	1					
ANR	7696277	CFGEntryNode	ENTRY		7696002		True				
ANR	7696278	CFGExitNode	EXIT		7696002		True				
ANR	7696279	Symbol	& glob_sdl		7696002						
ANR	7696280	Symbol	sdl_unlock		7696002						
ANR	7696281	Symbol	hw -> info . shift		7696002						
ANR	7696282	Symbol	chunk		7696002						
ANR	7696283	Symbol	hw		7696002						
ANR	7696284	Symbol	hw -> mix_buf		7696002						
ANR	7696285	Symbol	len		7696002						
ANR	7696286	Symbol	* hw		7696002						
ANR	7696287	Symbol	& sdl -> hw		7696002						
ANR	7696288	Symbol	s -> exit		7696002						
ANR	7696289	Symbol	decr		7696002						
ANR	7696290	Symbol	sdl_lock		7696002						
ANR	7696291	Symbol	sdl -> rpos		7696002						
ANR	7696292	Symbol	opaque		7696002						
ANR	7696293	Symbol	to_mix		7696002						
ANR	7696294	Symbol	* sdl		7696002						
ANR	7696295	Symbol	src		7696002						
ANR	7696296	Symbol	hw -> samples		7696002						
ANR	7696297	Symbol	hw -> info		7696002						
ANR	7696298	Symbol	hw -> rpos		7696002						
ANR	7696299	Symbol	AUDIO_FUNC		7696002						
ANR	7696300	Symbol	samples		7696002						
ANR	7696301	Symbol	buf		7696002						
ANR	7696302	Symbol	s		7696002						
ANR	7696303	Symbol	audio_MIN		7696002						
ANR	7696304	Symbol	audio_bug		7696002						
ANR	7696305	Symbol	sdl		7696002						
ANR	7696306	Symbol	* s		7696002						
ANR	7696307	Symbol	sdl -> live		7696002						
ANR	7696308	Symbol	sdl -> decr		7696002						
