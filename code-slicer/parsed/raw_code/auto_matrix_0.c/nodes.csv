command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	681365	File	/home/p4ultr4n/workplace/ReVeal/raw_code/auto_matrix_0.c								
ANR	681366	Function	auto_matrix	1:8:8:9492							
ANR	681367	FunctionDef	auto_matrix (SwrContext * s)		681366	0					
ANR	681368	CompoundStatement		3:0:47:9492	681366	0					
ANR	681369	IdentifierDeclStatement	"int i , j , out_i ;"	5:4:54:69	681366	0	True				
ANR	681370	IdentifierDecl	i		681366	0					
ANR	681371	IdentifierDeclType	int		681366	0					
ANR	681372	Identifier	i		681366	1					
ANR	681373	IdentifierDecl	j		681366	1					
ANR	681374	IdentifierDeclType	int		681366	0					
ANR	681375	Identifier	j		681366	1					
ANR	681376	IdentifierDecl	out_i		681366	2					
ANR	681377	IdentifierDeclType	int		681366	0					
ANR	681378	Identifier	out_i		681366	1					
ANR	681379	Statement	double	7:4:76:81	681366	1	True				
ANR	681380	Statement	matrix	7:11:83:88	681366	2	True				
ANR	681381	Statement	[	7:17:89:89	681366	3	True				
ANR	681382	Statement	64	7:18:90:91	681366	4	True				
ANR	681383	Statement	]	7:20:92:92	681366	5	True				
ANR	681384	Statement	[	7:21:93:93	681366	6	True				
ANR	681385	Statement	64	7:22:94:95	681366	7	True				
ANR	681386	Statement	]	7:24:96:96	681366	8	True				
ANR	681387	Statement	=	7:25:97:97	681366	9	True				
ANR	681388	CompoundStatement		5:26:50:50	681366	10					
ANR	681389	CompoundStatement		5:27:51:51	681366	0					
ANR	681390	Statement	0	7:28:100:100	681366	0	True				
ANR	681391	ExpressionStatement		7:31:103:103	681366	11	True				
ANR	681392	IdentifierDeclStatement	"int64_t unaccounted , in_ch_layout , out_ch_layout ;"	9:4:110:158	681366	12	True				
ANR	681393	IdentifierDecl	unaccounted		681366	0					
ANR	681394	IdentifierDeclType	int64_t		681366	0					
ANR	681395	Identifier	unaccounted		681366	1					
ANR	681396	IdentifierDecl	in_ch_layout		681366	1					
ANR	681397	IdentifierDeclType	int64_t		681366	0					
ANR	681398	Identifier	in_ch_layout		681366	1					
ANR	681399	IdentifierDecl	out_ch_layout		681366	2					
ANR	681400	IdentifierDeclType	int64_t		681366	0					
ANR	681401	Identifier	out_ch_layout		681366	1					
ANR	681402	IdentifierDeclStatement	double maxcoef = 0 ;	11:4:165:181	681366	13	True				
ANR	681403	IdentifierDecl	maxcoef = 0		681366	0					
ANR	681404	IdentifierDeclType	double		681366	0					
ANR	681405	Identifier	maxcoef		681366	1					
ANR	681406	AssignmentExpression	maxcoef = 0		681366	2		=			
ANR	681407	Identifier	maxcoef		681366	0					
ANR	681408	PrimaryExpression	0		681366	1					
ANR	681409	IdentifierDeclStatement	char buf [ 128 ] ;	13:4:188:201	681366	14	True				
ANR	681410	IdentifierDecl	buf [ 128 ]		681366	0					
ANR	681411	IdentifierDeclType	char [ 128 ]		681366	0					
ANR	681412	Identifier	buf		681366	1					
ANR	681413	PrimaryExpression	128		681366	2					
ANR	681414	IdentifierDeclStatement	const int matrix_encoding = s -> matrix_encoding ;	15:4:208:254	681366	15	True				
ANR	681415	IdentifierDecl	matrix_encoding = s -> matrix_encoding		681366	0					
ANR	681416	IdentifierDeclType	const int		681366	0					
ANR	681417	Identifier	matrix_encoding		681366	1					
ANR	681418	AssignmentExpression	matrix_encoding = s -> matrix_encoding		681366	2		=			
ANR	681419	Identifier	matrix_encoding		681366	0					
ANR	681420	PtrMemberAccess	s -> matrix_encoding		681366	1					
ANR	681421	Identifier	s		681366	0					
ANR	681422	Identifier	matrix_encoding		681366	1					
ANR	681423	IdentifierDeclStatement	float maxval ;	17:4:261:273	681366	16	True				
ANR	681424	IdentifierDecl	maxval		681366	0					
ANR	681425	IdentifierDeclType	float		681366	0					
ANR	681426	Identifier	maxval		681366	1					
ANR	681427	ExpressionStatement	"in_ch_layout = clean_layout ( s , s -> in_ch_layout )"	21:4:282:329	681366	17	True				
ANR	681428	AssignmentExpression	"in_ch_layout = clean_layout ( s , s -> in_ch_layout )"		681366	0		=			
ANR	681429	Identifier	in_ch_layout		681366	0					
ANR	681430	CallExpression	"clean_layout ( s , s -> in_ch_layout )"		681366	1					
ANR	681431	Callee	clean_layout		681366	0					
ANR	681432	Identifier	clean_layout		681366	0					
ANR	681433	ArgumentList	s		681366	1					
ANR	681434	Argument	s		681366	0					
ANR	681435	Identifier	s		681366	0					
ANR	681436	Argument	s -> in_ch_layout		681366	1					
ANR	681437	PtrMemberAccess	s -> in_ch_layout		681366	0					
ANR	681438	Identifier	s		681366	0					
ANR	681439	Identifier	in_ch_layout		681366	1					
ANR	681440	IfStatement	if ( ! sane_layout ( in_ch_layout ) )		681366	18					
ANR	681441	Condition	! sane_layout ( in_ch_layout )	23:7:339:364	681366	0	True				
ANR	681442	UnaryOperationExpression	! sane_layout ( in_ch_layout )		681366	0					
ANR	681443	UnaryOperator	!		681366	0					
ANR	681444	CallExpression	sane_layout ( in_ch_layout )		681366	1					
ANR	681445	Callee	sane_layout		681366	0					
ANR	681446	Identifier	sane_layout		681366	0					
ANR	681447	ArgumentList	in_ch_layout		681366	1					
ANR	681448	Argument	in_ch_layout		681366	0					
ANR	681449	Identifier	in_ch_layout		681366	0					
ANR	681450	CompoundStatement		21:34:318:318	681366	1					
ANR	681451	ExpressionStatement	"av_get_channel_layout_string ( buf , sizeof ( buf ) , - 1 , s -> in_ch_layout )"	25:8:377:444	681366	0	True				
ANR	681452	CallExpression	"av_get_channel_layout_string ( buf , sizeof ( buf ) , - 1 , s -> in_ch_layout )"		681366	0					
ANR	681453	Callee	av_get_channel_layout_string		681366	0					
ANR	681454	Identifier	av_get_channel_layout_string		681366	0					
ANR	681455	ArgumentList	buf		681366	1					
ANR	681456	Argument	buf		681366	0					
ANR	681457	Identifier	buf		681366	0					
ANR	681458	Argument	sizeof ( buf )		681366	1					
ANR	681459	SizeofExpression	sizeof ( buf )		681366	0					
ANR	681460	Sizeof	sizeof		681366	0					
ANR	681461	SizeofOperand	buf		681366	1					
ANR	681462	Argument	- 1		681366	2					
ANR	681463	UnaryOperationExpression	- 1		681366	0					
ANR	681464	UnaryOperator	-		681366	0					
ANR	681465	PrimaryExpression	1		681366	1					
ANR	681466	Argument	s -> in_ch_layout		681366	3					
ANR	681467	PtrMemberAccess	s -> in_ch_layout		681366	0					
ANR	681468	Identifier	s		681366	0					
ANR	681469	Identifier	in_ch_layout		681366	1					
ANR	681470	ExpressionStatement	"av_log ( s , AV_LOG_ERROR , ""Input channel layout '%s' is not supported\\n"" , buf )"	27:8:455:531	681366	1	True				
ANR	681471	CallExpression	"av_log ( s , AV_LOG_ERROR , ""Input channel layout '%s' is not supported\\n"" , buf )"		681366	0					
ANR	681472	Callee	av_log		681366	0					
ANR	681473	Identifier	av_log		681366	0					
ANR	681474	ArgumentList	s		681366	1					
ANR	681475	Argument	s		681366	0					
ANR	681476	Identifier	s		681366	0					
ANR	681477	Argument	AV_LOG_ERROR		681366	1					
ANR	681478	Identifier	AV_LOG_ERROR		681366	0					
ANR	681479	Argument	"""Input channel layout '%s' is not supported\\n"""		681366	2					
ANR	681480	PrimaryExpression	"""Input channel layout '%s' is not supported\\n"""		681366	0					
ANR	681481	Argument	buf		681366	3					
ANR	681482	Identifier	buf		681366	0					
ANR	681483	ReturnStatement	return AVERROR ( EINVAL ) ;	29:8:542:564	681366	2	True				
ANR	681484	CallExpression	AVERROR ( EINVAL )		681366	0					
ANR	681485	Callee	AVERROR		681366	0					
ANR	681486	Identifier	AVERROR		681366	0					
ANR	681487	ArgumentList	EINVAL		681366	1					
ANR	681488	Argument	EINVAL		681366	0					
ANR	681489	Identifier	EINVAL		681366	0					
ANR	681490	ExpressionStatement	"out_ch_layout = clean_layout ( s , s -> out_ch_layout )"	35:4:580:629	681366	19	True				
ANR	681491	AssignmentExpression	"out_ch_layout = clean_layout ( s , s -> out_ch_layout )"		681366	0		=			
ANR	681492	Identifier	out_ch_layout		681366	0					
ANR	681493	CallExpression	"clean_layout ( s , s -> out_ch_layout )"		681366	1					
ANR	681494	Callee	clean_layout		681366	0					
ANR	681495	Identifier	clean_layout		681366	0					
ANR	681496	ArgumentList	s		681366	1					
ANR	681497	Argument	s		681366	0					
ANR	681498	Identifier	s		681366	0					
ANR	681499	Argument	s -> out_ch_layout		681366	1					
ANR	681500	PtrMemberAccess	s -> out_ch_layout		681366	0					
ANR	681501	Identifier	s		681366	0					
ANR	681502	Identifier	out_ch_layout		681366	1					
ANR	681503	IfStatement	if ( ! sane_layout ( out_ch_layout ) )		681366	20					
ANR	681504	Condition	! sane_layout ( out_ch_layout )	37:7:639:665	681366	0	True				
ANR	681505	UnaryOperationExpression	! sane_layout ( out_ch_layout )		681366	0					
ANR	681506	UnaryOperator	!		681366	0					
ANR	681507	CallExpression	sane_layout ( out_ch_layout )		681366	1					
ANR	681508	Callee	sane_layout		681366	0					
ANR	681509	Identifier	sane_layout		681366	0					
ANR	681510	ArgumentList	out_ch_layout		681366	1					
ANR	681511	Argument	out_ch_layout		681366	0					
ANR	681512	Identifier	out_ch_layout		681366	0					
ANR	681513	CompoundStatement		35:35:619:619	681366	1					
ANR	681514	ExpressionStatement	"av_get_channel_layout_string ( buf , sizeof ( buf ) , - 1 , s -> out_ch_layout )"	39:8:678:746	681366	0	True				
ANR	681515	CallExpression	"av_get_channel_layout_string ( buf , sizeof ( buf ) , - 1 , s -> out_ch_layout )"		681366	0					
ANR	681516	Callee	av_get_channel_layout_string		681366	0					
ANR	681517	Identifier	av_get_channel_layout_string		681366	0					
ANR	681518	ArgumentList	buf		681366	1					
ANR	681519	Argument	buf		681366	0					
ANR	681520	Identifier	buf		681366	0					
ANR	681521	Argument	sizeof ( buf )		681366	1					
ANR	681522	SizeofExpression	sizeof ( buf )		681366	0					
ANR	681523	Sizeof	sizeof		681366	0					
ANR	681524	SizeofOperand	buf		681366	1					
ANR	681525	Argument	- 1		681366	2					
ANR	681526	UnaryOperationExpression	- 1		681366	0					
ANR	681527	UnaryOperator	-		681366	0					
ANR	681528	PrimaryExpression	1		681366	1					
ANR	681529	Argument	s -> out_ch_layout		681366	3					
ANR	681530	PtrMemberAccess	s -> out_ch_layout		681366	0					
ANR	681531	Identifier	s		681366	0					
ANR	681532	Identifier	out_ch_layout		681366	1					
ANR	681533	ExpressionStatement	"av_log ( s , AV_LOG_ERROR , ""Output channel layout '%s' is not supported\\n"" , buf )"	41:8:757:834	681366	1	True				
ANR	681534	CallExpression	"av_log ( s , AV_LOG_ERROR , ""Output channel layout '%s' is not supported\\n"" , buf )"		681366	0					
ANR	681535	Callee	av_log		681366	0					
ANR	681536	Identifier	av_log		681366	0					
ANR	681537	ArgumentList	s		681366	1					
ANR	681538	Argument	s		681366	0					
ANR	681539	Identifier	s		681366	0					
ANR	681540	Argument	AV_LOG_ERROR		681366	1					
ANR	681541	Identifier	AV_LOG_ERROR		681366	0					
ANR	681542	Argument	"""Output channel layout '%s' is not supported\\n"""		681366	2					
ANR	681543	PrimaryExpression	"""Output channel layout '%s' is not supported\\n"""		681366	0					
ANR	681544	Argument	buf		681366	3					
ANR	681545	Identifier	buf		681366	0					
ANR	681546	ReturnStatement	return AVERROR ( EINVAL ) ;	43:8:845:867	681366	2	True				
ANR	681547	CallExpression	AVERROR ( EINVAL )		681366	0					
ANR	681548	Callee	AVERROR		681366	0					
ANR	681549	Identifier	AVERROR		681366	0					
ANR	681550	ArgumentList	EINVAL		681366	1					
ANR	681551	Argument	EINVAL		681366	0					
ANR	681552	Identifier	EINVAL		681366	0					
ANR	681553	ExpressionStatement	"memset ( s -> matrix , 0 , sizeof ( s -> matrix ) )"	49:4:883:922	681366	21	True				
ANR	681554	CallExpression	"memset ( s -> matrix , 0 , sizeof ( s -> matrix ) )"		681366	0					
ANR	681555	Callee	memset		681366	0					
ANR	681556	Identifier	memset		681366	0					
ANR	681557	ArgumentList	s -> matrix		681366	1					
ANR	681558	Argument	s -> matrix		681366	0					
ANR	681559	PtrMemberAccess	s -> matrix		681366	0					
ANR	681560	Identifier	s		681366	0					
ANR	681561	Identifier	matrix		681366	1					
ANR	681562	Argument	0		681366	1					
ANR	681563	PrimaryExpression	0		681366	0					
ANR	681564	Argument	sizeof ( s -> matrix )		681366	2					
ANR	681565	SizeofExpression	sizeof ( s -> matrix )		681366	0					
ANR	681566	Sizeof	sizeof		681366	0					
ANR	681567	PtrMemberAccess	s -> matrix		681366	1					
ANR	681568	Identifier	s		681366	0					
ANR	681569	Identifier	matrix		681366	1					
ANR	681570	ForStatement	for ( i = 0 ; i < 64 ; i ++ )		681366	22					
ANR	681571	ForInit	i = 0 ;	51:8:933:936	681366	0	True				
ANR	681572	AssignmentExpression	i = 0		681366	0		=			
ANR	681573	Identifier	i		681366	0					
ANR	681574	PrimaryExpression	0		681366	1					
ANR	681575	Condition	i < 64	51:13:938:941	681366	1	True				
ANR	681576	RelationalExpression	i < 64		681366	0		<			
ANR	681577	Identifier	i		681366	0					
ANR	681578	PrimaryExpression	64		681366	1					
ANR	681579	PostIncDecOperationExpression	i ++	51:19:944:946	681366	2	True				
ANR	681580	Identifier	i		681366	0					
ANR	681581	IncDec	++		681366	1					
ANR	681582	CompoundStatement		49:23:900:900	681366	3					
ANR	681583	Statement	if	53:8:959:960	681366	0	True				
ANR	681584	Statement	(	53:10:961:961	681366	1	True				
ANR	681585	Statement	in_ch_layout	53:11:962:973	681366	2	True				
ANR	681586	Statement	&	53:24:975:975	681366	3	True				
ANR	681587	Statement	out_ch_layout	53:26:977:989	681366	4	True				
ANR	681588	Statement	&	53:40:991:991	681366	5	True				
ANR	681589	Statement	(	53:42:993:993	681366	6	True				
ANR	681590	Statement	1UL	53:43:994:996	681366	7	True				
ANR	681591	Statement	L	53:46:997:997	681366	8	True				
ANR	681592	Statement	<<	53:47:998:999	681366	9	True				
ANR	681593	Statement	i	53:49:1000:1000	681366	10	True				
ANR	681594	Statement	)	53:50:1001:1001	681366	11	True				
ANR	681595	Statement	)	53:51:1002:1002	681366	12	True				
ANR	681596	ExpressionStatement	matrix [ i ] [ i ] = 1.0	55:12:1017:1034	681366	13	True				
ANR	681597	AssignmentExpression	matrix [ i ] [ i ] = 1.0		681366	0		=			
ANR	681598	ArrayIndexing	matrix [ i ] [ i ]		681366	0					
ANR	681599	ArrayIndexing	matrix [ i ]		681366	0					
ANR	681600	Identifier	matrix		681366	0					
ANR	681601	Identifier	i		681366	1					
ANR	681602	Identifier	i		681366	1					
ANR	681603	PrimaryExpression	1.0		681366	1					
ANR	681604	ExpressionStatement	unaccounted = in_ch_layout & ~out_ch_layout	61:4:1050:1092	681366	23	True				
ANR	681605	AssignmentExpression	unaccounted = in_ch_layout & ~out_ch_layout		681366	0		=			
ANR	681606	Identifier	unaccounted		681366	0					
ANR	681607	BitAndExpression	in_ch_layout & ~out_ch_layout		681366	1		&			
ANR	681608	Identifier	in_ch_layout		681366	0					
ANR	681609	Identifier	~out_ch_layout		681366	1					
ANR	681610	IfStatement	if ( unaccounted & AV_CH_FRONT_CENTER )		681366	24					
ANR	681611	Condition	unaccounted & AV_CH_FRONT_CENTER	73:7:1170:1201	681366	0	True				
ANR	681612	BitAndExpression	unaccounted & AV_CH_FRONT_CENTER		681366	0		&			
ANR	681613	Identifier	unaccounted		681366	0					
ANR	681614	Identifier	AV_CH_FRONT_CENTER		681366	1					
ANR	681615	CompoundStatement		71:40:1155:1155	681366	1					
ANR	681616	IfStatement	if ( ( out_ch_layout & AV_CH_LAYOUT_STEREO ) == AV_CH_LAYOUT_STEREO )		681366	0					
ANR	681617	Condition	( out_ch_layout & AV_CH_LAYOUT_STEREO ) == AV_CH_LAYOUT_STEREO	75:11:1217:1276	681366	0	True				
ANR	681618	EqualityExpression	( out_ch_layout & AV_CH_LAYOUT_STEREO ) == AV_CH_LAYOUT_STEREO		681366	0		==			
ANR	681619	BitAndExpression	out_ch_layout & AV_CH_LAYOUT_STEREO		681366	0		&			
ANR	681620	Identifier	out_ch_layout		681366	0					
ANR	681621	Identifier	AV_CH_LAYOUT_STEREO		681366	1					
ANR	681622	Identifier	AV_CH_LAYOUT_STEREO		681366	1					
ANR	681623	CompoundStatement		73:72:1230:1230	681366	1					
ANR	681624	IfStatement	if ( in_ch_layout & AV_CH_LAYOUT_STEREO )		681366	0					
ANR	681625	Condition	in_ch_layout & AV_CH_LAYOUT_STEREO	77:15:1296:1329	681366	0	True				
ANR	681626	BitAndExpression	in_ch_layout & AV_CH_LAYOUT_STEREO		681366	0		&			
ANR	681627	Identifier	in_ch_layout		681366	0					
ANR	681628	Identifier	AV_CH_LAYOUT_STEREO		681366	1					
ANR	681629	CompoundStatement		75:51:1284:1284	681366	1					
ANR	681630	ExpressionStatement	matrix [ FRONT_LEFT ] [ FRONT_CENTER ] += s -> clev	79:16:1351:1394	681366	0	True				
ANR	681631	AssignmentExpression	matrix [ FRONT_LEFT ] [ FRONT_CENTER ] += s -> clev		681366	0		+=			
ANR	681632	ArrayIndexing	matrix [ FRONT_LEFT ] [ FRONT_CENTER ]		681366	0					
ANR	681633	ArrayIndexing	matrix [ FRONT_LEFT ]		681366	0					
ANR	681634	Identifier	matrix		681366	0					
ANR	681635	Identifier	FRONT_LEFT		681366	1					
ANR	681636	Identifier	FRONT_CENTER		681366	1					
ANR	681637	PtrMemberAccess	s -> clev		681366	1					
ANR	681638	Identifier	s		681366	0					
ANR	681639	Identifier	clev		681366	1					
ANR	681640	ExpressionStatement	matrix [ FRONT_RIGHT ] [ FRONT_CENTER ] += s -> clev	81:16:1413:1456	681366	1	True				
ANR	681641	AssignmentExpression	matrix [ FRONT_RIGHT ] [ FRONT_CENTER ] += s -> clev		681366	0		+=			
ANR	681642	ArrayIndexing	matrix [ FRONT_RIGHT ] [ FRONT_CENTER ]		681366	0					
ANR	681643	ArrayIndexing	matrix [ FRONT_RIGHT ]		681366	0					
ANR	681644	Identifier	matrix		681366	0					
ANR	681645	Identifier	FRONT_RIGHT		681366	1					
ANR	681646	Identifier	FRONT_CENTER		681366	1					
ANR	681647	PtrMemberAccess	s -> clev		681366	1					
ANR	681648	Identifier	s		681366	0					
ANR	681649	Identifier	clev		681366	1					
ANR	681650	ElseStatement	else		681366	0					
ANR	681651	CompoundStatement		81:19:1430:1430	681366	0					
ANR	681652	ExpressionStatement	matrix [ FRONT_LEFT ] [ FRONT_CENTER ] += M_SQRT1_2	85:16:1497:1542	681366	0	True				
ANR	681653	AssignmentExpression	matrix [ FRONT_LEFT ] [ FRONT_CENTER ] += M_SQRT1_2		681366	0		+=			
ANR	681654	ArrayIndexing	matrix [ FRONT_LEFT ] [ FRONT_CENTER ]		681366	0					
ANR	681655	ArrayIndexing	matrix [ FRONT_LEFT ]		681366	0					
ANR	681656	Identifier	matrix		681366	0					
ANR	681657	Identifier	FRONT_LEFT		681366	1					
ANR	681658	Identifier	FRONT_CENTER		681366	1					
ANR	681659	Identifier	M_SQRT1_2		681366	1					
ANR	681660	ExpressionStatement	matrix [ FRONT_RIGHT ] [ FRONT_CENTER ] += M_SQRT1_2	87:16:1561:1606	681366	1	True				
ANR	681661	AssignmentExpression	matrix [ FRONT_RIGHT ] [ FRONT_CENTER ] += M_SQRT1_2		681366	0		+=			
ANR	681662	ArrayIndexing	matrix [ FRONT_RIGHT ] [ FRONT_CENTER ]		681366	0					
ANR	681663	ArrayIndexing	matrix [ FRONT_RIGHT ]		681366	0					
ANR	681664	Identifier	matrix		681366	0					
ANR	681665	Identifier	FRONT_RIGHT		681366	1					
ANR	681666	Identifier	FRONT_CENTER		681366	1					
ANR	681667	Identifier	M_SQRT1_2		681366	1					
ANR	681668	ElseStatement	else		681366	0					
ANR	681669	ExpressionStatement	av_assert0 ( 0 )	93:12:1651:1664	681366	0	True				
ANR	681670	CallExpression	av_assert0 ( 0 )		681366	0					
ANR	681671	Callee	av_assert0		681366	0					
ANR	681672	Identifier	av_assert0		681366	0					
ANR	681673	ArgumentList	0		681366	1					
ANR	681674	Argument	0		681366	0					
ANR	681675	PrimaryExpression	0		681366	0					
ANR	681676	IfStatement	if ( unaccounted & AV_CH_LAYOUT_STEREO )		681366	25					
ANR	681677	Condition	unaccounted & AV_CH_LAYOUT_STEREO	97:7:1681:1713	681366	0	True				
ANR	681678	BitAndExpression	unaccounted & AV_CH_LAYOUT_STEREO		681366	0		&			
ANR	681679	Identifier	unaccounted		681366	0					
ANR	681680	Identifier	AV_CH_LAYOUT_STEREO		681366	1					
ANR	681681	CompoundStatement		95:41:1667:1667	681366	1					
ANR	681682	IfStatement	if ( out_ch_layout & AV_CH_FRONT_CENTER )		681366	0					
ANR	681683	Condition	out_ch_layout & AV_CH_FRONT_CENTER	99:11:1729:1762	681366	0	True				
ANR	681684	BitAndExpression	out_ch_layout & AV_CH_FRONT_CENTER		681366	0		&			
ANR	681685	Identifier	out_ch_layout		681366	0					
ANR	681686	Identifier	AV_CH_FRONT_CENTER		681366	1					
ANR	681687	CompoundStatement		97:46:1716:1716	681366	1					
ANR	681688	ExpressionStatement	matrix [ FRONT_CENTER ] [ FRONT_LEFT ] += M_SQRT1_2	101:12:1779:1824	681366	0	True				
ANR	681689	AssignmentExpression	matrix [ FRONT_CENTER ] [ FRONT_LEFT ] += M_SQRT1_2		681366	0		+=			
ANR	681690	ArrayIndexing	matrix [ FRONT_CENTER ] [ FRONT_LEFT ]		681366	0					
ANR	681691	ArrayIndexing	matrix [ FRONT_CENTER ]		681366	0					
ANR	681692	Identifier	matrix		681366	0					
ANR	681693	Identifier	FRONT_CENTER		681366	1					
ANR	681694	Identifier	FRONT_LEFT		681366	1					
ANR	681695	Identifier	M_SQRT1_2		681366	1					
ANR	681696	ExpressionStatement	matrix [ FRONT_CENTER ] [ FRONT_RIGHT ] += M_SQRT1_2	103:12:1839:1884	681366	1	True				
ANR	681697	AssignmentExpression	matrix [ FRONT_CENTER ] [ FRONT_RIGHT ] += M_SQRT1_2		681366	0		+=			
ANR	681698	ArrayIndexing	matrix [ FRONT_CENTER ] [ FRONT_RIGHT ]		681366	0					
ANR	681699	ArrayIndexing	matrix [ FRONT_CENTER ]		681366	0					
ANR	681700	Identifier	matrix		681366	0					
ANR	681701	Identifier	FRONT_CENTER		681366	1					
ANR	681702	Identifier	FRONT_RIGHT		681366	1					
ANR	681703	Identifier	M_SQRT1_2		681366	1					
ANR	681704	IfStatement	if ( in_ch_layout & AV_CH_FRONT_CENTER )		681366	2					
ANR	681705	Condition	in_ch_layout & AV_CH_FRONT_CENTER	105:15:1902:1934	681366	0	True				
ANR	681706	BitAndExpression	in_ch_layout & AV_CH_FRONT_CENTER		681366	0		&			
ANR	681707	Identifier	in_ch_layout		681366	0					
ANR	681708	Identifier	AV_CH_FRONT_CENTER		681366	1					
ANR	681709	ExpressionStatement	matrix [ FRONT_CENTER ] [ FRONT_CENTER ] = s -> clev * sqrt ( 2 )	107:16:1954:2007	681366	1	True				
ANR	681710	AssignmentExpression	matrix [ FRONT_CENTER ] [ FRONT_CENTER ] = s -> clev * sqrt ( 2 )		681366	0		=			
ANR	681711	ArrayIndexing	matrix [ FRONT_CENTER ] [ FRONT_CENTER ]		681366	0					
ANR	681712	ArrayIndexing	matrix [ FRONT_CENTER ]		681366	0					
ANR	681713	Identifier	matrix		681366	0					
ANR	681714	Identifier	FRONT_CENTER		681366	1					
ANR	681715	Identifier	FRONT_CENTER		681366	1					
ANR	681716	MultiplicativeExpression	s -> clev * sqrt ( 2 )		681366	1		*			
ANR	681717	PtrMemberAccess	s -> clev		681366	0					
ANR	681718	Identifier	s		681366	0					
ANR	681719	Identifier	clev		681366	1					
ANR	681720	CallExpression	sqrt ( 2 )		681366	1					
ANR	681721	Callee	sqrt		681366	0					
ANR	681722	Identifier	sqrt		681366	0					
ANR	681723	ArgumentList	2		681366	1					
ANR	681724	Argument	2		681366	0					
ANR	681725	PrimaryExpression	2		681366	0					
ANR	681726	ElseStatement	else		681366	0					
ANR	681727	ExpressionStatement	av_assert0 ( 0 )	111:12:2037:2050	681366	0	True				
ANR	681728	CallExpression	av_assert0 ( 0 )		681366	0					
ANR	681729	Callee	av_assert0		681366	0					
ANR	681730	Identifier	av_assert0		681366	0					
ANR	681731	ArgumentList	0		681366	1					
ANR	681732	Argument	0		681366	0					
ANR	681733	PrimaryExpression	0		681366	0					
ANR	681734	IfStatement	if ( unaccounted & AV_CH_BACK_CENTER )		681366	26					
ANR	681735	Condition	unaccounted & AV_CH_BACK_CENTER	117:7:2069:2099	681366	0	True				
ANR	681736	BitAndExpression	unaccounted & AV_CH_BACK_CENTER		681366	0		&			
ANR	681737	Identifier	unaccounted		681366	0					
ANR	681738	Identifier	AV_CH_BACK_CENTER		681366	1					
ANR	681739	CompoundStatement		115:39:2053:2053	681366	1					
ANR	681740	IfStatement	if ( out_ch_layout & AV_CH_BACK_LEFT )		681366	0					
ANR	681741	Condition	out_ch_layout & AV_CH_BACK_LEFT	119:11:2115:2145	681366	0	True				
ANR	681742	BitAndExpression	out_ch_layout & AV_CH_BACK_LEFT		681366	0		&			
ANR	681743	Identifier	out_ch_layout		681366	0					
ANR	681744	Identifier	AV_CH_BACK_LEFT		681366	1					
ANR	681745	CompoundStatement		117:43:2099:2099	681366	1					
ANR	681746	ExpressionStatement	matrix [ BACK_LEFT ] [ BACK_CENTER ] += M_SQRT1_2	121:12:2162:2205	681366	0	True				
ANR	681747	AssignmentExpression	matrix [ BACK_LEFT ] [ BACK_CENTER ] += M_SQRT1_2		681366	0		+=			
ANR	681748	ArrayIndexing	matrix [ BACK_LEFT ] [ BACK_CENTER ]		681366	0					
ANR	681749	ArrayIndexing	matrix [ BACK_LEFT ]		681366	0					
ANR	681750	Identifier	matrix		681366	0					
ANR	681751	Identifier	BACK_LEFT		681366	1					
ANR	681752	Identifier	BACK_CENTER		681366	1					
ANR	681753	Identifier	M_SQRT1_2		681366	1					
ANR	681754	ExpressionStatement	matrix [ BACK_RIGHT ] [ BACK_CENTER ] += M_SQRT1_2	123:12:2220:2263	681366	1	True				
ANR	681755	AssignmentExpression	matrix [ BACK_RIGHT ] [ BACK_CENTER ] += M_SQRT1_2		681366	0		+=			
ANR	681756	ArrayIndexing	matrix [ BACK_RIGHT ] [ BACK_CENTER ]		681366	0					
ANR	681757	ArrayIndexing	matrix [ BACK_RIGHT ]		681366	0					
ANR	681758	Identifier	matrix		681366	0					
ANR	681759	Identifier	BACK_RIGHT		681366	1					
ANR	681760	Identifier	BACK_CENTER		681366	1					
ANR	681761	Identifier	M_SQRT1_2		681366	1					
ANR	681762	ElseStatement	else		681366	0					
ANR	681763	IfStatement	if ( out_ch_layout & AV_CH_SIDE_LEFT )		681366	0					
ANR	681764	Condition	out_ch_layout & AV_CH_SIDE_LEFT	125:17:2283:2313	681366	0	True				
ANR	681765	BitAndExpression	out_ch_layout & AV_CH_SIDE_LEFT		681366	0		&			
ANR	681766	Identifier	out_ch_layout		681366	0					
ANR	681767	Identifier	AV_CH_SIDE_LEFT		681366	1					
ANR	681768	CompoundStatement		123:49:2267:2267	681366	1					
ANR	681769	ExpressionStatement	matrix [ SIDE_LEFT ] [ BACK_CENTER ] += M_SQRT1_2	127:12:2330:2373	681366	0	True				
ANR	681770	AssignmentExpression	matrix [ SIDE_LEFT ] [ BACK_CENTER ] += M_SQRT1_2		681366	0		+=			
ANR	681771	ArrayIndexing	matrix [ SIDE_LEFT ] [ BACK_CENTER ]		681366	0					
ANR	681772	ArrayIndexing	matrix [ SIDE_LEFT ]		681366	0					
ANR	681773	Identifier	matrix		681366	0					
ANR	681774	Identifier	SIDE_LEFT		681366	1					
ANR	681775	Identifier	BACK_CENTER		681366	1					
ANR	681776	Identifier	M_SQRT1_2		681366	1					
ANR	681777	ExpressionStatement	matrix [ SIDE_RIGHT ] [ BACK_CENTER ] += M_SQRT1_2	129:12:2388:2431	681366	1	True				
ANR	681778	AssignmentExpression	matrix [ SIDE_RIGHT ] [ BACK_CENTER ] += M_SQRT1_2		681366	0		+=			
ANR	681779	ArrayIndexing	matrix [ SIDE_RIGHT ] [ BACK_CENTER ]		681366	0					
ANR	681780	ArrayIndexing	matrix [ SIDE_RIGHT ]		681366	0					
ANR	681781	Identifier	matrix		681366	0					
ANR	681782	Identifier	SIDE_RIGHT		681366	1					
ANR	681783	Identifier	BACK_CENTER		681366	1					
ANR	681784	Identifier	M_SQRT1_2		681366	1					
ANR	681785	ElseStatement	else		681366	0					
ANR	681786	IfStatement	if ( out_ch_layout & AV_CH_FRONT_LEFT )		681366	0					
ANR	681787	Condition	out_ch_layout & AV_CH_FRONT_LEFT	131:17:2451:2482	681366	0	True				
ANR	681788	BitAndExpression	out_ch_layout & AV_CH_FRONT_LEFT		681366	0		&			
ANR	681789	Identifier	out_ch_layout		681366	0					
ANR	681790	Identifier	AV_CH_FRONT_LEFT		681366	1					
ANR	681791	CompoundStatement		129:50:2436:2436	681366	1					
ANR	681792	IfStatement	if ( matrix_encoding == AV_MATRIX_ENCODING_DOLBY || matrix_encoding == AV_MATRIX_ENCODING_DPLII )		681366	0					
ANR	681793	Condition	matrix_encoding == AV_MATRIX_ENCODING_DOLBY || matrix_encoding == AV_MATRIX_ENCODING_DPLII	133:16:2503:2609	681366	0	True				
ANR	681794	OrExpression	matrix_encoding == AV_MATRIX_ENCODING_DOLBY || matrix_encoding == AV_MATRIX_ENCODING_DPLII		681366	0		||			
ANR	681795	EqualityExpression	matrix_encoding == AV_MATRIX_ENCODING_DOLBY		681366	0		==			
ANR	681796	Identifier	matrix_encoding		681366	0					
ANR	681797	Identifier	AV_MATRIX_ENCODING_DOLBY		681366	1					
ANR	681798	EqualityExpression	matrix_encoding == AV_MATRIX_ENCODING_DPLII		681366	1		==			
ANR	681799	Identifier	matrix_encoding		681366	0					
ANR	681800	Identifier	AV_MATRIX_ENCODING_DPLII		681366	1					
ANR	681801	CompoundStatement		133:61:2564:2564	681366	1					
ANR	681802	IfStatement	if ( unaccounted & ( AV_CH_BACK_LEFT | AV_CH_SIDE_LEFT ) )		681366	0					
ANR	681803	Condition	unaccounted & ( AV_CH_BACK_LEFT | AV_CH_SIDE_LEFT )	137:20:2635:2683	681366	0	True				
ANR	681804	BitAndExpression	unaccounted & ( AV_CH_BACK_LEFT | AV_CH_SIDE_LEFT )		681366	0		&			
ANR	681805	Identifier	unaccounted		681366	0					
ANR	681806	InclusiveOrExpression	AV_CH_BACK_LEFT | AV_CH_SIDE_LEFT		681366	1		|			
ANR	681807	Identifier	AV_CH_BACK_LEFT		681366	0					
ANR	681808	Identifier	AV_CH_SIDE_LEFT		681366	1					
ANR	681809	CompoundStatement		135:71:2638:2638	681366	1					
ANR	681810	ExpressionStatement	matrix [ FRONT_LEFT ] [ BACK_CENTER ] -= s -> slev * M_SQRT1_2	139:20:2709:2764	681366	0	True				
ANR	681811	AssignmentExpression	matrix [ FRONT_LEFT ] [ BACK_CENTER ] -= s -> slev * M_SQRT1_2		681366	0		-=			
ANR	681812	ArrayIndexing	matrix [ FRONT_LEFT ] [ BACK_CENTER ]		681366	0					
ANR	681813	ArrayIndexing	matrix [ FRONT_LEFT ]		681366	0					
ANR	681814	Identifier	matrix		681366	0					
ANR	681815	Identifier	FRONT_LEFT		681366	1					
ANR	681816	Identifier	BACK_CENTER		681366	1					
ANR	681817	MultiplicativeExpression	s -> slev * M_SQRT1_2		681366	1		*			
ANR	681818	PtrMemberAccess	s -> slev		681366	0					
ANR	681819	Identifier	s		681366	0					
ANR	681820	Identifier	slev		681366	1					
ANR	681821	Identifier	M_SQRT1_2		681366	1					
ANR	681822	ExpressionStatement	matrix [ FRONT_RIGHT ] [ BACK_CENTER ] += s -> slev * M_SQRT1_2	141:20:2787:2842	681366	1	True				
ANR	681823	AssignmentExpression	matrix [ FRONT_RIGHT ] [ BACK_CENTER ] += s -> slev * M_SQRT1_2		681366	0		+=			
ANR	681824	ArrayIndexing	matrix [ FRONT_RIGHT ] [ BACK_CENTER ]		681366	0					
ANR	681825	ArrayIndexing	matrix [ FRONT_RIGHT ]		681366	0					
ANR	681826	Identifier	matrix		681366	0					
ANR	681827	Identifier	FRONT_RIGHT		681366	1					
ANR	681828	Identifier	BACK_CENTER		681366	1					
ANR	681829	MultiplicativeExpression	s -> slev * M_SQRT1_2		681366	1		*			
ANR	681830	PtrMemberAccess	s -> slev		681366	0					
ANR	681831	Identifier	s		681366	0					
ANR	681832	Identifier	slev		681366	1					
ANR	681833	Identifier	M_SQRT1_2		681366	1					
ANR	681834	ElseStatement	else		681366	0					
ANR	681835	CompoundStatement		141:23:2820:2820	681366	0					
ANR	681836	ExpressionStatement	matrix [ FRONT_LEFT ] [ BACK_CENTER ] -= s -> slev	145:20:2891:2934	681366	0	True				
ANR	681837	AssignmentExpression	matrix [ FRONT_LEFT ] [ BACK_CENTER ] -= s -> slev		681366	0		-=			
ANR	681838	ArrayIndexing	matrix [ FRONT_LEFT ] [ BACK_CENTER ]		681366	0					
ANR	681839	ArrayIndexing	matrix [ FRONT_LEFT ]		681366	0					
ANR	681840	Identifier	matrix		681366	0					
ANR	681841	Identifier	FRONT_LEFT		681366	1					
ANR	681842	Identifier	BACK_CENTER		681366	1					
ANR	681843	PtrMemberAccess	s -> slev		681366	1					
ANR	681844	Identifier	s		681366	0					
ANR	681845	Identifier	slev		681366	1					
ANR	681846	ExpressionStatement	matrix [ FRONT_RIGHT ] [ BACK_CENTER ] += s -> slev	147:20:2957:3000	681366	1	True				
ANR	681847	AssignmentExpression	matrix [ FRONT_RIGHT ] [ BACK_CENTER ] += s -> slev		681366	0		+=			
ANR	681848	ArrayIndexing	matrix [ FRONT_RIGHT ] [ BACK_CENTER ]		681366	0					
ANR	681849	ArrayIndexing	matrix [ FRONT_RIGHT ]		681366	0					
ANR	681850	Identifier	matrix		681366	0					
ANR	681851	Identifier	FRONT_RIGHT		681366	1					
ANR	681852	Identifier	BACK_CENTER		681366	1					
ANR	681853	PtrMemberAccess	s -> slev		681366	1					
ANR	681854	Identifier	s		681366	0					
ANR	681855	Identifier	slev		681366	1					
ANR	681856	ElseStatement	else		681366	0					
ANR	681857	CompoundStatement		149:19:2993:2993	681366	0					
ANR	681858	ExpressionStatement	matrix [ FRONT_LEFT ] [ BACK_CENTER ] += s -> slev * M_SQRT1_2	153:16:3060:3112	681366	0	True				
ANR	681859	AssignmentExpression	matrix [ FRONT_LEFT ] [ BACK_CENTER ] += s -> slev * M_SQRT1_2		681366	0		+=			
ANR	681860	ArrayIndexing	matrix [ FRONT_LEFT ] [ BACK_CENTER ]		681366	0					
ANR	681861	ArrayIndexing	matrix [ FRONT_LEFT ]		681366	0					
ANR	681862	Identifier	matrix		681366	0					
ANR	681863	Identifier	FRONT_LEFT		681366	1					
ANR	681864	Identifier	BACK_CENTER		681366	1					
ANR	681865	MultiplicativeExpression	s -> slev * M_SQRT1_2		681366	1		*			
ANR	681866	PtrMemberAccess	s -> slev		681366	0					
ANR	681867	Identifier	s		681366	0					
ANR	681868	Identifier	slev		681366	1					
ANR	681869	Identifier	M_SQRT1_2		681366	1					
ANR	681870	ExpressionStatement	matrix [ FRONT_RIGHT ] [ BACK_CENTER ] += s -> slev * M_SQRT1_2	155:16:3131:3183	681366	1	True				
ANR	681871	AssignmentExpression	matrix [ FRONT_RIGHT ] [ BACK_CENTER ] += s -> slev * M_SQRT1_2		681366	0		+=			
ANR	681872	ArrayIndexing	matrix [ FRONT_RIGHT ] [ BACK_CENTER ]		681366	0					
ANR	681873	ArrayIndexing	matrix [ FRONT_RIGHT ]		681366	0					
ANR	681874	Identifier	matrix		681366	0					
ANR	681875	Identifier	FRONT_RIGHT		681366	1					
ANR	681876	Identifier	BACK_CENTER		681366	1					
ANR	681877	MultiplicativeExpression	s -> slev * M_SQRT1_2		681366	1		*			
ANR	681878	PtrMemberAccess	s -> slev		681366	0					
ANR	681879	Identifier	s		681366	0					
ANR	681880	Identifier	slev		681366	1					
ANR	681881	Identifier	M_SQRT1_2		681366	1					
ANR	681882	ElseStatement	else		681366	0					
ANR	681883	IfStatement	if ( out_ch_layout & AV_CH_FRONT_CENTER )		681366	0					
ANR	681884	Condition	out_ch_layout & AV_CH_FRONT_CENTER	159:17:3218:3251	681366	0	True				
ANR	681885	BitAndExpression	out_ch_layout & AV_CH_FRONT_CENTER		681366	0		&			
ANR	681886	Identifier	out_ch_layout		681366	0					
ANR	681887	Identifier	AV_CH_FRONT_CENTER		681366	1					
ANR	681888	CompoundStatement		157:52:3205:3205	681366	1					
ANR	681889	ExpressionStatement	matrix [ FRONT_CENTER ] [ BACK_CENTER ] += s -> slev * M_SQRT1_2	161:12:3268:3322	681366	0	True				
ANR	681890	AssignmentExpression	matrix [ FRONT_CENTER ] [ BACK_CENTER ] += s -> slev * M_SQRT1_2		681366	0		+=			
ANR	681891	ArrayIndexing	matrix [ FRONT_CENTER ] [ BACK_CENTER ]		681366	0					
ANR	681892	ArrayIndexing	matrix [ FRONT_CENTER ]		681366	0					
ANR	681893	Identifier	matrix		681366	0					
ANR	681894	Identifier	FRONT_CENTER		681366	1					
ANR	681895	Identifier	BACK_CENTER		681366	1					
ANR	681896	MultiplicativeExpression	s -> slev * M_SQRT1_2		681366	1		*			
ANR	681897	PtrMemberAccess	s -> slev		681366	0					
ANR	681898	Identifier	s		681366	0					
ANR	681899	Identifier	slev		681366	1					
ANR	681900	Identifier	M_SQRT1_2		681366	1					
ANR	681901	ElseStatement	else		681366	0					
ANR	681902	ExpressionStatement	av_assert0 ( 0 )	165:12:3352:3365	681366	0	True				
ANR	681903	CallExpression	av_assert0 ( 0 )		681366	0					
ANR	681904	Callee	av_assert0		681366	0					
ANR	681905	Identifier	av_assert0		681366	0					
ANR	681906	ArgumentList	0		681366	1					
ANR	681907	Argument	0		681366	0					
ANR	681908	PrimaryExpression	0		681366	0					
ANR	681909	IfStatement	if ( unaccounted & AV_CH_BACK_LEFT )		681366	27					
ANR	681910	Condition	unaccounted & AV_CH_BACK_LEFT	169:7:3382:3410	681366	0	True				
ANR	681911	BitAndExpression	unaccounted & AV_CH_BACK_LEFT		681366	0		&			
ANR	681912	Identifier	unaccounted		681366	0					
ANR	681913	Identifier	AV_CH_BACK_LEFT		681366	1					
ANR	681914	CompoundStatement		167:37:3364:3364	681366	1					
ANR	681915	IfStatement	if ( out_ch_layout & AV_CH_BACK_CENTER )		681366	0					
ANR	681916	Condition	out_ch_layout & AV_CH_BACK_CENTER	171:11:3426:3458	681366	0	True				
ANR	681917	BitAndExpression	out_ch_layout & AV_CH_BACK_CENTER		681366	0		&			
ANR	681918	Identifier	out_ch_layout		681366	0					
ANR	681919	Identifier	AV_CH_BACK_CENTER		681366	1					
ANR	681920	CompoundStatement		169:45:3412:3412	681366	1					
ANR	681921	ExpressionStatement	matrix [ BACK_CENTER ] [ BACK_LEFT ] += M_SQRT1_2	173:12:3475:3518	681366	0	True				
ANR	681922	AssignmentExpression	matrix [ BACK_CENTER ] [ BACK_LEFT ] += M_SQRT1_2		681366	0		+=			
ANR	681923	ArrayIndexing	matrix [ BACK_CENTER ] [ BACK_LEFT ]		681366	0					
ANR	681924	ArrayIndexing	matrix [ BACK_CENTER ]		681366	0					
ANR	681925	Identifier	matrix		681366	0					
ANR	681926	Identifier	BACK_CENTER		681366	1					
ANR	681927	Identifier	BACK_LEFT		681366	1					
ANR	681928	Identifier	M_SQRT1_2		681366	1					
ANR	681929	ExpressionStatement	matrix [ BACK_CENTER ] [ BACK_RIGHT ] += M_SQRT1_2	175:12:3533:3576	681366	1	True				
ANR	681930	AssignmentExpression	matrix [ BACK_CENTER ] [ BACK_RIGHT ] += M_SQRT1_2		681366	0		+=			
ANR	681931	ArrayIndexing	matrix [ BACK_CENTER ] [ BACK_RIGHT ]		681366	0					
ANR	681932	ArrayIndexing	matrix [ BACK_CENTER ]		681366	0					
ANR	681933	Identifier	matrix		681366	0					
ANR	681934	Identifier	BACK_CENTER		681366	1					
ANR	681935	Identifier	BACK_RIGHT		681366	1					
ANR	681936	Identifier	M_SQRT1_2		681366	1					
ANR	681937	ElseStatement	else		681366	0					
ANR	681938	IfStatement	if ( out_ch_layout & AV_CH_SIDE_LEFT )		681366	0					
ANR	681939	Condition	out_ch_layout & AV_CH_SIDE_LEFT	177:17:3596:3626	681366	0	True				
ANR	681940	BitAndExpression	out_ch_layout & AV_CH_SIDE_LEFT		681366	0		&			
ANR	681941	Identifier	out_ch_layout		681366	0					
ANR	681942	Identifier	AV_CH_SIDE_LEFT		681366	1					
ANR	681943	CompoundStatement		175:49:3580:3580	681366	1					
ANR	681944	IfStatement	if ( in_ch_layout & AV_CH_SIDE_LEFT )		681366	0					
ANR	681945	Condition	in_ch_layout & AV_CH_SIDE_LEFT	179:15:3646:3675	681366	0	True				
ANR	681946	BitAndExpression	in_ch_layout & AV_CH_SIDE_LEFT		681366	0		&			
ANR	681947	Identifier	in_ch_layout		681366	0					
ANR	681948	Identifier	AV_CH_SIDE_LEFT		681366	1					
ANR	681949	CompoundStatement		177:46:3629:3629	681366	1					
ANR	681950	ExpressionStatement	matrix [ SIDE_LEFT ] [ BACK_LEFT ] += M_SQRT1_2	181:16:3696:3738	681366	0	True				
ANR	681951	AssignmentExpression	matrix [ SIDE_LEFT ] [ BACK_LEFT ] += M_SQRT1_2		681366	0		+=			
ANR	681952	ArrayIndexing	matrix [ SIDE_LEFT ] [ BACK_LEFT ]		681366	0					
ANR	681953	ArrayIndexing	matrix [ SIDE_LEFT ]		681366	0					
ANR	681954	Identifier	matrix		681366	0					
ANR	681955	Identifier	SIDE_LEFT		681366	1					
ANR	681956	Identifier	BACK_LEFT		681366	1					
ANR	681957	Identifier	M_SQRT1_2		681366	1					
ANR	681958	ExpressionStatement	matrix [ SIDE_RIGHT ] [ BACK_RIGHT ] += M_SQRT1_2	183:16:3757:3799	681366	1	True				
ANR	681959	AssignmentExpression	matrix [ SIDE_RIGHT ] [ BACK_RIGHT ] += M_SQRT1_2		681366	0		+=			
ANR	681960	ArrayIndexing	matrix [ SIDE_RIGHT ] [ BACK_RIGHT ]		681366	0					
ANR	681961	ArrayIndexing	matrix [ SIDE_RIGHT ]		681366	0					
ANR	681962	Identifier	matrix		681366	0					
ANR	681963	Identifier	SIDE_RIGHT		681366	1					
ANR	681964	Identifier	BACK_RIGHT		681366	1					
ANR	681965	Identifier	M_SQRT1_2		681366	1					
ANR	681966	ElseStatement	else		681366	0					
ANR	681967	CompoundStatement		183:17:3771:3771	681366	0					
ANR	681968	ExpressionStatement	matrix [ SIDE_LEFT ] [ BACK_LEFT ] += 1.0	187:12:3834:3870	681366	0	True				
ANR	681969	AssignmentExpression	matrix [ SIDE_LEFT ] [ BACK_LEFT ] += 1.0		681366	0		+=			
ANR	681970	ArrayIndexing	matrix [ SIDE_LEFT ] [ BACK_LEFT ]		681366	0					
ANR	681971	ArrayIndexing	matrix [ SIDE_LEFT ]		681366	0					
ANR	681972	Identifier	matrix		681366	0					
ANR	681973	Identifier	SIDE_LEFT		681366	1					
ANR	681974	Identifier	BACK_LEFT		681366	1					
ANR	681975	PrimaryExpression	1.0		681366	1					
ANR	681976	ExpressionStatement	matrix [ SIDE_RIGHT ] [ BACK_RIGHT ] += 1.0	189:12:3885:3921	681366	1	True				
ANR	681977	AssignmentExpression	matrix [ SIDE_RIGHT ] [ BACK_RIGHT ] += 1.0		681366	0		+=			
ANR	681978	ArrayIndexing	matrix [ SIDE_RIGHT ] [ BACK_RIGHT ]		681366	0					
ANR	681979	ArrayIndexing	matrix [ SIDE_RIGHT ]		681366	0					
ANR	681980	Identifier	matrix		681366	0					
ANR	681981	Identifier	SIDE_RIGHT		681366	1					
ANR	681982	Identifier	BACK_RIGHT		681366	1					
ANR	681983	PrimaryExpression	1.0		681366	1					
ANR	681984	ElseStatement	else		681366	0					
ANR	681985	IfStatement	if ( out_ch_layout & AV_CH_FRONT_LEFT )		681366	0					
ANR	681986	Condition	out_ch_layout & AV_CH_FRONT_LEFT	193:17:3956:3987	681366	0	True				
ANR	681987	BitAndExpression	out_ch_layout & AV_CH_FRONT_LEFT		681366	0		&			
ANR	681988	Identifier	out_ch_layout		681366	0					
ANR	681989	Identifier	AV_CH_FRONT_LEFT		681366	1					
ANR	681990	CompoundStatement		191:50:3941:3941	681366	1					
ANR	681991	IfStatement	if ( matrix_encoding == AV_MATRIX_ENCODING_DOLBY )		681366	0					
ANR	681992	Condition	matrix_encoding == AV_MATRIX_ENCODING_DOLBY	195:16:4008:4050	681366	0	True				
ANR	681993	EqualityExpression	matrix_encoding == AV_MATRIX_ENCODING_DOLBY		681366	0		==			
ANR	681994	Identifier	matrix_encoding		681366	0					
ANR	681995	Identifier	AV_MATRIX_ENCODING_DOLBY		681366	1					
ANR	681996	CompoundStatement		193:61:4005:4005	681366	1					
ANR	681997	ExpressionStatement	matrix [ FRONT_LEFT ] [ BACK_LEFT ] -= s -> slev * M_SQRT1_2	197:16:4072:4126	681366	0	True				
ANR	681998	AssignmentExpression	matrix [ FRONT_LEFT ] [ BACK_LEFT ] -= s -> slev * M_SQRT1_2		681366	0		-=			
ANR	681999	ArrayIndexing	matrix [ FRONT_LEFT ] [ BACK_LEFT ]		681366	0					
ANR	682000	ArrayIndexing	matrix [ FRONT_LEFT ]		681366	0					
ANR	682001	Identifier	matrix		681366	0					
ANR	682002	Identifier	FRONT_LEFT		681366	1					
ANR	682003	Identifier	BACK_LEFT		681366	1					
ANR	682004	MultiplicativeExpression	s -> slev * M_SQRT1_2		681366	1		*			
ANR	682005	PtrMemberAccess	s -> slev		681366	0					
ANR	682006	Identifier	s		681366	0					
ANR	682007	Identifier	slev		681366	1					
ANR	682008	Identifier	M_SQRT1_2		681366	1					
ANR	682009	ExpressionStatement	matrix [ FRONT_LEFT ] [ BACK_RIGHT ] -= s -> slev * M_SQRT1_2	199:16:4145:4199	681366	1	True				
ANR	682010	AssignmentExpression	matrix [ FRONT_LEFT ] [ BACK_RIGHT ] -= s -> slev * M_SQRT1_2		681366	0		-=			
ANR	682011	ArrayIndexing	matrix [ FRONT_LEFT ] [ BACK_RIGHT ]		681366	0					
ANR	682012	ArrayIndexing	matrix [ FRONT_LEFT ]		681366	0					
ANR	682013	Identifier	matrix		681366	0					
ANR	682014	Identifier	FRONT_LEFT		681366	1					
ANR	682015	Identifier	BACK_RIGHT		681366	1					
ANR	682016	MultiplicativeExpression	s -> slev * M_SQRT1_2		681366	1		*			
ANR	682017	PtrMemberAccess	s -> slev		681366	0					
ANR	682018	Identifier	s		681366	0					
ANR	682019	Identifier	slev		681366	1					
ANR	682020	Identifier	M_SQRT1_2		681366	1					
ANR	682021	ExpressionStatement	matrix [ FRONT_RIGHT ] [ BACK_LEFT ] += s -> slev * M_SQRT1_2	201:16:4218:4272	681366	2	True				
ANR	682022	AssignmentExpression	matrix [ FRONT_RIGHT ] [ BACK_LEFT ] += s -> slev * M_SQRT1_2		681366	0		+=			
ANR	682023	ArrayIndexing	matrix [ FRONT_RIGHT ] [ BACK_LEFT ]		681366	0					
ANR	682024	ArrayIndexing	matrix [ FRONT_RIGHT ]		681366	0					
ANR	682025	Identifier	matrix		681366	0					
ANR	682026	Identifier	FRONT_RIGHT		681366	1					
ANR	682027	Identifier	BACK_LEFT		681366	1					
ANR	682028	MultiplicativeExpression	s -> slev * M_SQRT1_2		681366	1		*			
ANR	682029	PtrMemberAccess	s -> slev		681366	0					
ANR	682030	Identifier	s		681366	0					
ANR	682031	Identifier	slev		681366	1					
ANR	682032	Identifier	M_SQRT1_2		681366	1					
ANR	682033	ExpressionStatement	matrix [ FRONT_RIGHT ] [ BACK_RIGHT ] += s -> slev * M_SQRT1_2	203:16:4291:4345	681366	3	True				
ANR	682034	AssignmentExpression	matrix [ FRONT_RIGHT ] [ BACK_RIGHT ] += s -> slev * M_SQRT1_2		681366	0		+=			
ANR	682035	ArrayIndexing	matrix [ FRONT_RIGHT ] [ BACK_RIGHT ]		681366	0					
ANR	682036	ArrayIndexing	matrix [ FRONT_RIGHT ]		681366	0					
ANR	682037	Identifier	matrix		681366	0					
ANR	682038	Identifier	FRONT_RIGHT		681366	1					
ANR	682039	Identifier	BACK_RIGHT		681366	1					
ANR	682040	MultiplicativeExpression	s -> slev * M_SQRT1_2		681366	1		*			
ANR	682041	PtrMemberAccess	s -> slev		681366	0					
ANR	682042	Identifier	s		681366	0					
ANR	682043	Identifier	slev		681366	1					
ANR	682044	Identifier	M_SQRT1_2		681366	1					
ANR	682045	ElseStatement	else		681366	0					
ANR	682046	IfStatement	if ( matrix_encoding == AV_MATRIX_ENCODING_DPLII )		681366	0					
ANR	682047	Condition	matrix_encoding == AV_MATRIX_ENCODING_DPLII	205:23:4371:4413	681366	0	True				
ANR	682048	EqualityExpression	matrix_encoding == AV_MATRIX_ENCODING_DPLII		681366	0		==			
ANR	682049	Identifier	matrix_encoding		681366	0					
ANR	682050	Identifier	AV_MATRIX_ENCODING_DPLII		681366	1					
ANR	682051	CompoundStatement		203:68:4368:4368	681366	1					
ANR	682052	ExpressionStatement	matrix [ FRONT_LEFT ] [ BACK_LEFT ] -= s -> slev * SQRT3_2	207:16:4435:4487	681366	0	True				
ANR	682053	AssignmentExpression	matrix [ FRONT_LEFT ] [ BACK_LEFT ] -= s -> slev * SQRT3_2		681366	0		-=			
ANR	682054	ArrayIndexing	matrix [ FRONT_LEFT ] [ BACK_LEFT ]		681366	0					
ANR	682055	ArrayIndexing	matrix [ FRONT_LEFT ]		681366	0					
ANR	682056	Identifier	matrix		681366	0					
ANR	682057	Identifier	FRONT_LEFT		681366	1					
ANR	682058	Identifier	BACK_LEFT		681366	1					
ANR	682059	MultiplicativeExpression	s -> slev * SQRT3_2		681366	1		*			
ANR	682060	PtrMemberAccess	s -> slev		681366	0					
ANR	682061	Identifier	s		681366	0					
ANR	682062	Identifier	slev		681366	1					
ANR	682063	Identifier	SQRT3_2		681366	1					
ANR	682064	ExpressionStatement	matrix [ FRONT_LEFT ] [ BACK_RIGHT ] -= s -> slev * M_SQRT1_2	209:16:4506:4560	681366	1	True				
ANR	682065	AssignmentExpression	matrix [ FRONT_LEFT ] [ BACK_RIGHT ] -= s -> slev * M_SQRT1_2		681366	0		-=			
ANR	682066	ArrayIndexing	matrix [ FRONT_LEFT ] [ BACK_RIGHT ]		681366	0					
ANR	682067	ArrayIndexing	matrix [ FRONT_LEFT ]		681366	0					
ANR	682068	Identifier	matrix		681366	0					
ANR	682069	Identifier	FRONT_LEFT		681366	1					
ANR	682070	Identifier	BACK_RIGHT		681366	1					
ANR	682071	MultiplicativeExpression	s -> slev * M_SQRT1_2		681366	1		*			
ANR	682072	PtrMemberAccess	s -> slev		681366	0					
ANR	682073	Identifier	s		681366	0					
ANR	682074	Identifier	slev		681366	1					
ANR	682075	Identifier	M_SQRT1_2		681366	1					
ANR	682076	ExpressionStatement	matrix [ FRONT_RIGHT ] [ BACK_LEFT ] += s -> slev * M_SQRT1_2	211:16:4579:4633	681366	2	True				
ANR	682077	AssignmentExpression	matrix [ FRONT_RIGHT ] [ BACK_LEFT ] += s -> slev * M_SQRT1_2		681366	0		+=			
ANR	682078	ArrayIndexing	matrix [ FRONT_RIGHT ] [ BACK_LEFT ]		681366	0					
ANR	682079	ArrayIndexing	matrix [ FRONT_RIGHT ]		681366	0					
ANR	682080	Identifier	matrix		681366	0					
ANR	682081	Identifier	FRONT_RIGHT		681366	1					
ANR	682082	Identifier	BACK_LEFT		681366	1					
ANR	682083	MultiplicativeExpression	s -> slev * M_SQRT1_2		681366	1		*			
ANR	682084	PtrMemberAccess	s -> slev		681366	0					
ANR	682085	Identifier	s		681366	0					
ANR	682086	Identifier	slev		681366	1					
ANR	682087	Identifier	M_SQRT1_2		681366	1					
ANR	682088	ExpressionStatement	matrix [ FRONT_RIGHT ] [ BACK_RIGHT ] += s -> slev * SQRT3_2	213:16:4652:4704	681366	3	True				
ANR	682089	AssignmentExpression	matrix [ FRONT_RIGHT ] [ BACK_RIGHT ] += s -> slev * SQRT3_2		681366	0		+=			
ANR	682090	ArrayIndexing	matrix [ FRONT_RIGHT ] [ BACK_RIGHT ]		681366	0					
ANR	682091	ArrayIndexing	matrix [ FRONT_RIGHT ]		681366	0					
ANR	682092	Identifier	matrix		681366	0					
ANR	682093	Identifier	FRONT_RIGHT		681366	1					
ANR	682094	Identifier	BACK_RIGHT		681366	1					
ANR	682095	MultiplicativeExpression	s -> slev * SQRT3_2		681366	1		*			
ANR	682096	PtrMemberAccess	s -> slev		681366	0					
ANR	682097	Identifier	s		681366	0					
ANR	682098	Identifier	slev		681366	1					
ANR	682099	Identifier	SQRT3_2		681366	1					
ANR	682100	ElseStatement	else		681366	0					
ANR	682101	CompoundStatement		213:19:4678:4678	681366	0					
ANR	682102	ExpressionStatement	matrix [ FRONT_LEFT ] [ BACK_LEFT ] += s -> slev	217:16:4745:4787	681366	0	True				
ANR	682103	AssignmentExpression	matrix [ FRONT_LEFT ] [ BACK_LEFT ] += s -> slev		681366	0		+=			
ANR	682104	ArrayIndexing	matrix [ FRONT_LEFT ] [ BACK_LEFT ]		681366	0					
ANR	682105	ArrayIndexing	matrix [ FRONT_LEFT ]		681366	0					
ANR	682106	Identifier	matrix		681366	0					
ANR	682107	Identifier	FRONT_LEFT		681366	1					
ANR	682108	Identifier	BACK_LEFT		681366	1					
ANR	682109	PtrMemberAccess	s -> slev		681366	1					
ANR	682110	Identifier	s		681366	0					
ANR	682111	Identifier	slev		681366	1					
ANR	682112	ExpressionStatement	matrix [ FRONT_RIGHT ] [ BACK_RIGHT ] += s -> slev	219:16:4806:4848	681366	1	True				
ANR	682113	AssignmentExpression	matrix [ FRONT_RIGHT ] [ BACK_RIGHT ] += s -> slev		681366	0		+=			
ANR	682114	ArrayIndexing	matrix [ FRONT_RIGHT ] [ BACK_RIGHT ]		681366	0					
ANR	682115	ArrayIndexing	matrix [ FRONT_RIGHT ]		681366	0					
ANR	682116	Identifier	matrix		681366	0					
ANR	682117	Identifier	FRONT_RIGHT		681366	1					
ANR	682118	Identifier	BACK_RIGHT		681366	1					
ANR	682119	PtrMemberAccess	s -> slev		681366	1					
ANR	682120	Identifier	s		681366	0					
ANR	682121	Identifier	slev		681366	1					
ANR	682122	ElseStatement	else		681366	0					
ANR	682123	IfStatement	if ( out_ch_layout & AV_CH_FRONT_CENTER )		681366	0					
ANR	682124	Condition	out_ch_layout & AV_CH_FRONT_CENTER	223:17:4883:4916	681366	0	True				
ANR	682125	BitAndExpression	out_ch_layout & AV_CH_FRONT_CENTER		681366	0		&			
ANR	682126	Identifier	out_ch_layout		681366	0					
ANR	682127	Identifier	AV_CH_FRONT_CENTER		681366	1					
ANR	682128	CompoundStatement		221:52:4870:4870	681366	1					
ANR	682129	ExpressionStatement	matrix [ FRONT_CENTER ] [ BACK_LEFT ] += s -> slev * M_SQRT1_2	225:12:4933:4986	681366	0	True				
ANR	682130	AssignmentExpression	matrix [ FRONT_CENTER ] [ BACK_LEFT ] += s -> slev * M_SQRT1_2		681366	0		+=			
ANR	682131	ArrayIndexing	matrix [ FRONT_CENTER ] [ BACK_LEFT ]		681366	0					
ANR	682132	ArrayIndexing	matrix [ FRONT_CENTER ]		681366	0					
ANR	682133	Identifier	matrix		681366	0					
ANR	682134	Identifier	FRONT_CENTER		681366	1					
ANR	682135	Identifier	BACK_LEFT		681366	1					
ANR	682136	MultiplicativeExpression	s -> slev * M_SQRT1_2		681366	1		*			
ANR	682137	PtrMemberAccess	s -> slev		681366	0					
ANR	682138	Identifier	s		681366	0					
ANR	682139	Identifier	slev		681366	1					
ANR	682140	Identifier	M_SQRT1_2		681366	1					
ANR	682141	ExpressionStatement	matrix [ FRONT_CENTER ] [ BACK_RIGHT ] += s -> slev * M_SQRT1_2	227:12:5001:5054	681366	1	True				
ANR	682142	AssignmentExpression	matrix [ FRONT_CENTER ] [ BACK_RIGHT ] += s -> slev * M_SQRT1_2		681366	0		+=			
ANR	682143	ArrayIndexing	matrix [ FRONT_CENTER ] [ BACK_RIGHT ]		681366	0					
ANR	682144	ArrayIndexing	matrix [ FRONT_CENTER ]		681366	0					
ANR	682145	Identifier	matrix		681366	0					
ANR	682146	Identifier	FRONT_CENTER		681366	1					
ANR	682147	Identifier	BACK_RIGHT		681366	1					
ANR	682148	MultiplicativeExpression	s -> slev * M_SQRT1_2		681366	1		*			
ANR	682149	PtrMemberAccess	s -> slev		681366	0					
ANR	682150	Identifier	s		681366	0					
ANR	682151	Identifier	slev		681366	1					
ANR	682152	Identifier	M_SQRT1_2		681366	1					
ANR	682153	ElseStatement	else		681366	0					
ANR	682154	ExpressionStatement	av_assert0 ( 0 )	231:12:5084:5097	681366	0	True				
ANR	682155	CallExpression	av_assert0 ( 0 )		681366	0					
ANR	682156	Callee	av_assert0		681366	0					
ANR	682157	Identifier	av_assert0		681366	0					
ANR	682158	ArgumentList	0		681366	1					
ANR	682159	Argument	0		681366	0					
ANR	682160	PrimaryExpression	0		681366	0					
ANR	682161	IfStatement	if ( unaccounted & AV_CH_SIDE_LEFT )		681366	28					
ANR	682162	Condition	unaccounted & AV_CH_SIDE_LEFT	237:7:5116:5144	681366	0	True				
ANR	682163	BitAndExpression	unaccounted & AV_CH_SIDE_LEFT		681366	0		&			
ANR	682164	Identifier	unaccounted		681366	0					
ANR	682165	Identifier	AV_CH_SIDE_LEFT		681366	1					
ANR	682166	CompoundStatement		235:37:5098:5098	681366	1					
ANR	682167	IfStatement	if ( out_ch_layout & AV_CH_BACK_LEFT )		681366	0					
ANR	682168	Condition	out_ch_layout & AV_CH_BACK_LEFT	239:11:5160:5190	681366	0	True				
ANR	682169	BitAndExpression	out_ch_layout & AV_CH_BACK_LEFT		681366	0		&			
ANR	682170	Identifier	out_ch_layout		681366	0					
ANR	682171	Identifier	AV_CH_BACK_LEFT		681366	1					
ANR	682172	CompoundStatement		237:43:5144:5144	681366	1					
ANR	682173	IfStatement	if ( in_ch_layout & AV_CH_BACK_LEFT )		681366	0					
ANR	682174	Condition	in_ch_layout & AV_CH_BACK_LEFT	245:16:5361:5390	681366	0	True				
ANR	682175	BitAndExpression	in_ch_layout & AV_CH_BACK_LEFT		681366	0		&			
ANR	682176	Identifier	in_ch_layout		681366	0					
ANR	682177	Identifier	AV_CH_BACK_LEFT		681366	1					
ANR	682178	CompoundStatement		243:48:5345:5345	681366	1					
ANR	682179	ExpressionStatement	matrix [ BACK_LEFT ] [ SIDE_LEFT ] += M_SQRT1_2	247:16:5412:5455	681366	0	True				
ANR	682180	AssignmentExpression	matrix [ BACK_LEFT ] [ SIDE_LEFT ] += M_SQRT1_2		681366	0		+=			
ANR	682181	ArrayIndexing	matrix [ BACK_LEFT ] [ SIDE_LEFT ]		681366	0					
ANR	682182	ArrayIndexing	matrix [ BACK_LEFT ]		681366	0					
ANR	682183	Identifier	matrix		681366	0					
ANR	682184	Identifier	BACK_LEFT		681366	1					
ANR	682185	Identifier	SIDE_LEFT		681366	1					
ANR	682186	Identifier	M_SQRT1_2		681366	1					
ANR	682187	ExpressionStatement	matrix [ BACK_RIGHT ] [ SIDE_RIGHT ] += M_SQRT1_2	249:16:5474:5517	681366	1	True				
ANR	682188	AssignmentExpression	matrix [ BACK_RIGHT ] [ SIDE_RIGHT ] += M_SQRT1_2		681366	0		+=			
ANR	682189	ArrayIndexing	matrix [ BACK_RIGHT ] [ SIDE_RIGHT ]		681366	0					
ANR	682190	ArrayIndexing	matrix [ BACK_RIGHT ]		681366	0					
ANR	682191	Identifier	matrix		681366	0					
ANR	682192	Identifier	BACK_RIGHT		681366	1					
ANR	682193	Identifier	SIDE_RIGHT		681366	1					
ANR	682194	Identifier	M_SQRT1_2		681366	1					
ANR	682195	ElseStatement	else		681366	0					
ANR	682196	CompoundStatement		249:19:5491:5491	681366	0					
ANR	682197	ExpressionStatement	matrix [ BACK_LEFT ] [ SIDE_LEFT ] += 1.0	253:16:5558:5595	681366	0	True				
ANR	682198	AssignmentExpression	matrix [ BACK_LEFT ] [ SIDE_LEFT ] += 1.0		681366	0		+=			
ANR	682199	ArrayIndexing	matrix [ BACK_LEFT ] [ SIDE_LEFT ]		681366	0					
ANR	682200	ArrayIndexing	matrix [ BACK_LEFT ]		681366	0					
ANR	682201	Identifier	matrix		681366	0					
ANR	682202	Identifier	BACK_LEFT		681366	1					
ANR	682203	Identifier	SIDE_LEFT		681366	1					
ANR	682204	PrimaryExpression	1.0		681366	1					
ANR	682205	ExpressionStatement	matrix [ BACK_RIGHT ] [ SIDE_RIGHT ] += 1.0	255:16:5614:5651	681366	1	True				
ANR	682206	AssignmentExpression	matrix [ BACK_RIGHT ] [ SIDE_RIGHT ] += 1.0		681366	0		+=			
ANR	682207	ArrayIndexing	matrix [ BACK_RIGHT ] [ SIDE_RIGHT ]		681366	0					
ANR	682208	ArrayIndexing	matrix [ BACK_RIGHT ]		681366	0					
ANR	682209	Identifier	matrix		681366	0					
ANR	682210	Identifier	BACK_RIGHT		681366	1					
ANR	682211	Identifier	SIDE_RIGHT		681366	1					
ANR	682212	PrimaryExpression	1.0		681366	1					
ANR	682213	ElseStatement	else		681366	0					
ANR	682214	IfStatement	if ( out_ch_layout & AV_CH_BACK_CENTER )		681366	0					
ANR	682215	Condition	out_ch_layout & AV_CH_BACK_CENTER	259:17:5686:5718	681366	0	True				
ANR	682216	BitAndExpression	out_ch_layout & AV_CH_BACK_CENTER		681366	0		&			
ANR	682217	Identifier	out_ch_layout		681366	0					
ANR	682218	Identifier	AV_CH_BACK_CENTER		681366	1					
ANR	682219	CompoundStatement		257:51:5672:5672	681366	1					
ANR	682220	ExpressionStatement	matrix [ BACK_CENTER ] [ SIDE_LEFT ] += M_SQRT1_2	261:12:5735:5778	681366	0	True				
ANR	682221	AssignmentExpression	matrix [ BACK_CENTER ] [ SIDE_LEFT ] += M_SQRT1_2		681366	0		+=			
ANR	682222	ArrayIndexing	matrix [ BACK_CENTER ] [ SIDE_LEFT ]		681366	0					
ANR	682223	ArrayIndexing	matrix [ BACK_CENTER ]		681366	0					
ANR	682224	Identifier	matrix		681366	0					
ANR	682225	Identifier	BACK_CENTER		681366	1					
ANR	682226	Identifier	SIDE_LEFT		681366	1					
ANR	682227	Identifier	M_SQRT1_2		681366	1					
ANR	682228	ExpressionStatement	matrix [ BACK_CENTER ] [ SIDE_RIGHT ] += M_SQRT1_2	263:12:5793:5836	681366	1	True				
ANR	682229	AssignmentExpression	matrix [ BACK_CENTER ] [ SIDE_RIGHT ] += M_SQRT1_2		681366	0		+=			
ANR	682230	ArrayIndexing	matrix [ BACK_CENTER ] [ SIDE_RIGHT ]		681366	0					
ANR	682231	ArrayIndexing	matrix [ BACK_CENTER ]		681366	0					
ANR	682232	Identifier	matrix		681366	0					
ANR	682233	Identifier	BACK_CENTER		681366	1					
ANR	682234	Identifier	SIDE_RIGHT		681366	1					
ANR	682235	Identifier	M_SQRT1_2		681366	1					
ANR	682236	ElseStatement	else		681366	0					
ANR	682237	IfStatement	if ( out_ch_layout & AV_CH_FRONT_LEFT )		681366	0					
ANR	682238	Condition	out_ch_layout & AV_CH_FRONT_LEFT	265:17:5856:5887	681366	0	True				
ANR	682239	BitAndExpression	out_ch_layout & AV_CH_FRONT_LEFT		681366	0		&			
ANR	682240	Identifier	out_ch_layout		681366	0					
ANR	682241	Identifier	AV_CH_FRONT_LEFT		681366	1					
ANR	682242	CompoundStatement		263:50:5841:5841	681366	1					
ANR	682243	IfStatement	if ( matrix_encoding == AV_MATRIX_ENCODING_DOLBY )		681366	0					
ANR	682244	Condition	matrix_encoding == AV_MATRIX_ENCODING_DOLBY	267:16:5908:5950	681366	0	True				
ANR	682245	EqualityExpression	matrix_encoding == AV_MATRIX_ENCODING_DOLBY		681366	0		==			
ANR	682246	Identifier	matrix_encoding		681366	0					
ANR	682247	Identifier	AV_MATRIX_ENCODING_DOLBY		681366	1					
ANR	682248	CompoundStatement		265:61:5905:5905	681366	1					
ANR	682249	ExpressionStatement	matrix [ FRONT_LEFT ] [ SIDE_LEFT ] -= s -> slev * M_SQRT1_2	269:16:5972:6026	681366	0	True				
ANR	682250	AssignmentExpression	matrix [ FRONT_LEFT ] [ SIDE_LEFT ] -= s -> slev * M_SQRT1_2		681366	0		-=			
ANR	682251	ArrayIndexing	matrix [ FRONT_LEFT ] [ SIDE_LEFT ]		681366	0					
ANR	682252	ArrayIndexing	matrix [ FRONT_LEFT ]		681366	0					
ANR	682253	Identifier	matrix		681366	0					
ANR	682254	Identifier	FRONT_LEFT		681366	1					
ANR	682255	Identifier	SIDE_LEFT		681366	1					
ANR	682256	MultiplicativeExpression	s -> slev * M_SQRT1_2		681366	1		*			
ANR	682257	PtrMemberAccess	s -> slev		681366	0					
ANR	682258	Identifier	s		681366	0					
ANR	682259	Identifier	slev		681366	1					
ANR	682260	Identifier	M_SQRT1_2		681366	1					
ANR	682261	ExpressionStatement	matrix [ FRONT_LEFT ] [ SIDE_RIGHT ] -= s -> slev * M_SQRT1_2	271:16:6045:6099	681366	1	True				
ANR	682262	AssignmentExpression	matrix [ FRONT_LEFT ] [ SIDE_RIGHT ] -= s -> slev * M_SQRT1_2		681366	0		-=			
ANR	682263	ArrayIndexing	matrix [ FRONT_LEFT ] [ SIDE_RIGHT ]		681366	0					
ANR	682264	ArrayIndexing	matrix [ FRONT_LEFT ]		681366	0					
ANR	682265	Identifier	matrix		681366	0					
ANR	682266	Identifier	FRONT_LEFT		681366	1					
ANR	682267	Identifier	SIDE_RIGHT		681366	1					
ANR	682268	MultiplicativeExpression	s -> slev * M_SQRT1_2		681366	1		*			
ANR	682269	PtrMemberAccess	s -> slev		681366	0					
ANR	682270	Identifier	s		681366	0					
ANR	682271	Identifier	slev		681366	1					
ANR	682272	Identifier	M_SQRT1_2		681366	1					
ANR	682273	ExpressionStatement	matrix [ FRONT_RIGHT ] [ SIDE_LEFT ] += s -> slev * M_SQRT1_2	273:16:6118:6172	681366	2	True				
ANR	682274	AssignmentExpression	matrix [ FRONT_RIGHT ] [ SIDE_LEFT ] += s -> slev * M_SQRT1_2		681366	0		+=			
ANR	682275	ArrayIndexing	matrix [ FRONT_RIGHT ] [ SIDE_LEFT ]		681366	0					
ANR	682276	ArrayIndexing	matrix [ FRONT_RIGHT ]		681366	0					
ANR	682277	Identifier	matrix		681366	0					
ANR	682278	Identifier	FRONT_RIGHT		681366	1					
ANR	682279	Identifier	SIDE_LEFT		681366	1					
ANR	682280	MultiplicativeExpression	s -> slev * M_SQRT1_2		681366	1		*			
ANR	682281	PtrMemberAccess	s -> slev		681366	0					
ANR	682282	Identifier	s		681366	0					
ANR	682283	Identifier	slev		681366	1					
ANR	682284	Identifier	M_SQRT1_2		681366	1					
ANR	682285	ExpressionStatement	matrix [ FRONT_RIGHT ] [ SIDE_RIGHT ] += s -> slev * M_SQRT1_2	275:16:6191:6245	681366	3	True				
ANR	682286	AssignmentExpression	matrix [ FRONT_RIGHT ] [ SIDE_RIGHT ] += s -> slev * M_SQRT1_2		681366	0		+=			
ANR	682287	ArrayIndexing	matrix [ FRONT_RIGHT ] [ SIDE_RIGHT ]		681366	0					
ANR	682288	ArrayIndexing	matrix [ FRONT_RIGHT ]		681366	0					
ANR	682289	Identifier	matrix		681366	0					
ANR	682290	Identifier	FRONT_RIGHT		681366	1					
ANR	682291	Identifier	SIDE_RIGHT		681366	1					
ANR	682292	MultiplicativeExpression	s -> slev * M_SQRT1_2		681366	1		*			
ANR	682293	PtrMemberAccess	s -> slev		681366	0					
ANR	682294	Identifier	s		681366	0					
ANR	682295	Identifier	slev		681366	1					
ANR	682296	Identifier	M_SQRT1_2		681366	1					
ANR	682297	ElseStatement	else		681366	0					
ANR	682298	IfStatement	if ( matrix_encoding == AV_MATRIX_ENCODING_DPLII )		681366	0					
ANR	682299	Condition	matrix_encoding == AV_MATRIX_ENCODING_DPLII	277:23:6271:6313	681366	0	True				
ANR	682300	EqualityExpression	matrix_encoding == AV_MATRIX_ENCODING_DPLII		681366	0		==			
ANR	682301	Identifier	matrix_encoding		681366	0					
ANR	682302	Identifier	AV_MATRIX_ENCODING_DPLII		681366	1					
ANR	682303	CompoundStatement		275:68:6268:6268	681366	1					
ANR	682304	ExpressionStatement	matrix [ FRONT_LEFT ] [ SIDE_LEFT ] -= s -> slev * SQRT3_2	279:16:6335:6387	681366	0	True				
ANR	682305	AssignmentExpression	matrix [ FRONT_LEFT ] [ SIDE_LEFT ] -= s -> slev * SQRT3_2		681366	0		-=			
ANR	682306	ArrayIndexing	matrix [ FRONT_LEFT ] [ SIDE_LEFT ]		681366	0					
ANR	682307	ArrayIndexing	matrix [ FRONT_LEFT ]		681366	0					
ANR	682308	Identifier	matrix		681366	0					
ANR	682309	Identifier	FRONT_LEFT		681366	1					
ANR	682310	Identifier	SIDE_LEFT		681366	1					
ANR	682311	MultiplicativeExpression	s -> slev * SQRT3_2		681366	1		*			
ANR	682312	PtrMemberAccess	s -> slev		681366	0					
ANR	682313	Identifier	s		681366	0					
ANR	682314	Identifier	slev		681366	1					
ANR	682315	Identifier	SQRT3_2		681366	1					
ANR	682316	ExpressionStatement	matrix [ FRONT_LEFT ] [ SIDE_RIGHT ] -= s -> slev * M_SQRT1_2	281:16:6406:6460	681366	1	True				
ANR	682317	AssignmentExpression	matrix [ FRONT_LEFT ] [ SIDE_RIGHT ] -= s -> slev * M_SQRT1_2		681366	0		-=			
ANR	682318	ArrayIndexing	matrix [ FRONT_LEFT ] [ SIDE_RIGHT ]		681366	0					
ANR	682319	ArrayIndexing	matrix [ FRONT_LEFT ]		681366	0					
ANR	682320	Identifier	matrix		681366	0					
ANR	682321	Identifier	FRONT_LEFT		681366	1					
ANR	682322	Identifier	SIDE_RIGHT		681366	1					
ANR	682323	MultiplicativeExpression	s -> slev * M_SQRT1_2		681366	1		*			
ANR	682324	PtrMemberAccess	s -> slev		681366	0					
ANR	682325	Identifier	s		681366	0					
ANR	682326	Identifier	slev		681366	1					
ANR	682327	Identifier	M_SQRT1_2		681366	1					
ANR	682328	ExpressionStatement	matrix [ FRONT_RIGHT ] [ SIDE_LEFT ] += s -> slev * M_SQRT1_2	283:16:6479:6533	681366	2	True				
ANR	682329	AssignmentExpression	matrix [ FRONT_RIGHT ] [ SIDE_LEFT ] += s -> slev * M_SQRT1_2		681366	0		+=			
ANR	682330	ArrayIndexing	matrix [ FRONT_RIGHT ] [ SIDE_LEFT ]		681366	0					
ANR	682331	ArrayIndexing	matrix [ FRONT_RIGHT ]		681366	0					
ANR	682332	Identifier	matrix		681366	0					
ANR	682333	Identifier	FRONT_RIGHT		681366	1					
ANR	682334	Identifier	SIDE_LEFT		681366	1					
ANR	682335	MultiplicativeExpression	s -> slev * M_SQRT1_2		681366	1		*			
ANR	682336	PtrMemberAccess	s -> slev		681366	0					
ANR	682337	Identifier	s		681366	0					
ANR	682338	Identifier	slev		681366	1					
ANR	682339	Identifier	M_SQRT1_2		681366	1					
ANR	682340	ExpressionStatement	matrix [ FRONT_RIGHT ] [ SIDE_RIGHT ] += s -> slev * SQRT3_2	285:16:6552:6604	681366	3	True				
ANR	682341	AssignmentExpression	matrix [ FRONT_RIGHT ] [ SIDE_RIGHT ] += s -> slev * SQRT3_2		681366	0		+=			
ANR	682342	ArrayIndexing	matrix [ FRONT_RIGHT ] [ SIDE_RIGHT ]		681366	0					
ANR	682343	ArrayIndexing	matrix [ FRONT_RIGHT ]		681366	0					
ANR	682344	Identifier	matrix		681366	0					
ANR	682345	Identifier	FRONT_RIGHT		681366	1					
ANR	682346	Identifier	SIDE_RIGHT		681366	1					
ANR	682347	MultiplicativeExpression	s -> slev * SQRT3_2		681366	1		*			
ANR	682348	PtrMemberAccess	s -> slev		681366	0					
ANR	682349	Identifier	s		681366	0					
ANR	682350	Identifier	slev		681366	1					
ANR	682351	Identifier	SQRT3_2		681366	1					
ANR	682352	ElseStatement	else		681366	0					
ANR	682353	CompoundStatement		285:19:6578:6578	681366	0					
ANR	682354	ExpressionStatement	matrix [ FRONT_LEFT ] [ SIDE_LEFT ] += s -> slev	289:16:6645:6687	681366	0	True				
ANR	682355	AssignmentExpression	matrix [ FRONT_LEFT ] [ SIDE_LEFT ] += s -> slev		681366	0		+=			
ANR	682356	ArrayIndexing	matrix [ FRONT_LEFT ] [ SIDE_LEFT ]		681366	0					
ANR	682357	ArrayIndexing	matrix [ FRONT_LEFT ]		681366	0					
ANR	682358	Identifier	matrix		681366	0					
ANR	682359	Identifier	FRONT_LEFT		681366	1					
ANR	682360	Identifier	SIDE_LEFT		681366	1					
ANR	682361	PtrMemberAccess	s -> slev		681366	1					
ANR	682362	Identifier	s		681366	0					
ANR	682363	Identifier	slev		681366	1					
ANR	682364	ExpressionStatement	matrix [ FRONT_RIGHT ] [ SIDE_RIGHT ] += s -> slev	291:16:6706:6748	681366	1	True				
ANR	682365	AssignmentExpression	matrix [ FRONT_RIGHT ] [ SIDE_RIGHT ] += s -> slev		681366	0		+=			
ANR	682366	ArrayIndexing	matrix [ FRONT_RIGHT ] [ SIDE_RIGHT ]		681366	0					
ANR	682367	ArrayIndexing	matrix [ FRONT_RIGHT ]		681366	0					
ANR	682368	Identifier	matrix		681366	0					
ANR	682369	Identifier	FRONT_RIGHT		681366	1					
ANR	682370	Identifier	SIDE_RIGHT		681366	1					
ANR	682371	PtrMemberAccess	s -> slev		681366	1					
ANR	682372	Identifier	s		681366	0					
ANR	682373	Identifier	slev		681366	1					
ANR	682374	ElseStatement	else		681366	0					
ANR	682375	IfStatement	if ( out_ch_layout & AV_CH_FRONT_CENTER )		681366	0					
ANR	682376	Condition	out_ch_layout & AV_CH_FRONT_CENTER	295:17:6783:6816	681366	0	True				
ANR	682377	BitAndExpression	out_ch_layout & AV_CH_FRONT_CENTER		681366	0		&			
ANR	682378	Identifier	out_ch_layout		681366	0					
ANR	682379	Identifier	AV_CH_FRONT_CENTER		681366	1					
ANR	682380	CompoundStatement		293:52:6770:6770	681366	1					
ANR	682381	ExpressionStatement	matrix [ FRONT_CENTER ] [ SIDE_LEFT ] += s -> slev * M_SQRT1_2	297:12:6833:6886	681366	0	True				
ANR	682382	AssignmentExpression	matrix [ FRONT_CENTER ] [ SIDE_LEFT ] += s -> slev * M_SQRT1_2		681366	0		+=			
ANR	682383	ArrayIndexing	matrix [ FRONT_CENTER ] [ SIDE_LEFT ]		681366	0					
ANR	682384	ArrayIndexing	matrix [ FRONT_CENTER ]		681366	0					
ANR	682385	Identifier	matrix		681366	0					
ANR	682386	Identifier	FRONT_CENTER		681366	1					
ANR	682387	Identifier	SIDE_LEFT		681366	1					
ANR	682388	MultiplicativeExpression	s -> slev * M_SQRT1_2		681366	1		*			
ANR	682389	PtrMemberAccess	s -> slev		681366	0					
ANR	682390	Identifier	s		681366	0					
ANR	682391	Identifier	slev		681366	1					
ANR	682392	Identifier	M_SQRT1_2		681366	1					
ANR	682393	ExpressionStatement	matrix [ FRONT_CENTER ] [ SIDE_RIGHT ] += s -> slev * M_SQRT1_2	299:12:6901:6954	681366	1	True				
ANR	682394	AssignmentExpression	matrix [ FRONT_CENTER ] [ SIDE_RIGHT ] += s -> slev * M_SQRT1_2		681366	0		+=			
ANR	682395	ArrayIndexing	matrix [ FRONT_CENTER ] [ SIDE_RIGHT ]		681366	0					
ANR	682396	ArrayIndexing	matrix [ FRONT_CENTER ]		681366	0					
ANR	682397	Identifier	matrix		681366	0					
ANR	682398	Identifier	FRONT_CENTER		681366	1					
ANR	682399	Identifier	SIDE_RIGHT		681366	1					
ANR	682400	MultiplicativeExpression	s -> slev * M_SQRT1_2		681366	1		*			
ANR	682401	PtrMemberAccess	s -> slev		681366	0					
ANR	682402	Identifier	s		681366	0					
ANR	682403	Identifier	slev		681366	1					
ANR	682404	Identifier	M_SQRT1_2		681366	1					
ANR	682405	ElseStatement	else		681366	0					
ANR	682406	ExpressionStatement	av_assert0 ( 0 )	303:12:6984:6997	681366	0	True				
ANR	682407	CallExpression	av_assert0 ( 0 )		681366	0					
ANR	682408	Callee	av_assert0		681366	0					
ANR	682409	Identifier	av_assert0		681366	0					
ANR	682410	ArgumentList	0		681366	1					
ANR	682411	Argument	0		681366	0					
ANR	682412	PrimaryExpression	0		681366	0					
ANR	682413	IfStatement	if ( unaccounted & AV_CH_FRONT_LEFT_OF_CENTER )		681366	29					
ANR	682414	Condition	unaccounted & AV_CH_FRONT_LEFT_OF_CENTER	309:7:7016:7055	681366	0	True				
ANR	682415	BitAndExpression	unaccounted & AV_CH_FRONT_LEFT_OF_CENTER		681366	0		&			
ANR	682416	Identifier	unaccounted		681366	0					
ANR	682417	Identifier	AV_CH_FRONT_LEFT_OF_CENTER		681366	1					
ANR	682418	CompoundStatement		307:48:7009:7009	681366	1					
ANR	682419	IfStatement	if ( out_ch_layout & AV_CH_FRONT_LEFT )		681366	0					
ANR	682420	Condition	out_ch_layout & AV_CH_FRONT_LEFT	311:11:7071:7102	681366	0	True				
ANR	682421	BitAndExpression	out_ch_layout & AV_CH_FRONT_LEFT		681366	0		&			
ANR	682422	Identifier	out_ch_layout		681366	0					
ANR	682423	Identifier	AV_CH_FRONT_LEFT		681366	1					
ANR	682424	CompoundStatement		309:44:7056:7056	681366	1					
ANR	682425	ExpressionStatement	matrix [ FRONT_LEFT ] [ FRONT_LEFT_OF_CENTER ] += 1.0	313:12:7119:7167	681366	0	True				
ANR	682426	AssignmentExpression	matrix [ FRONT_LEFT ] [ FRONT_LEFT_OF_CENTER ] += 1.0		681366	0		+=			
ANR	682427	ArrayIndexing	matrix [ FRONT_LEFT ] [ FRONT_LEFT_OF_CENTER ]		681366	0					
ANR	682428	ArrayIndexing	matrix [ FRONT_LEFT ]		681366	0					
ANR	682429	Identifier	matrix		681366	0					
ANR	682430	Identifier	FRONT_LEFT		681366	1					
ANR	682431	Identifier	FRONT_LEFT_OF_CENTER		681366	1					
ANR	682432	PrimaryExpression	1.0		681366	1					
ANR	682433	ExpressionStatement	matrix [ FRONT_RIGHT ] [ FRONT_RIGHT_OF_CENTER ] += 1.0	315:12:7182:7230	681366	1	True				
ANR	682434	AssignmentExpression	matrix [ FRONT_RIGHT ] [ FRONT_RIGHT_OF_CENTER ] += 1.0		681366	0		+=			
ANR	682435	ArrayIndexing	matrix [ FRONT_RIGHT ] [ FRONT_RIGHT_OF_CENTER ]		681366	0					
ANR	682436	ArrayIndexing	matrix [ FRONT_RIGHT ]		681366	0					
ANR	682437	Identifier	matrix		681366	0					
ANR	682438	Identifier	FRONT_RIGHT		681366	1					
ANR	682439	Identifier	FRONT_RIGHT_OF_CENTER		681366	1					
ANR	682440	PrimaryExpression	1.0		681366	1					
ANR	682441	ElseStatement	else		681366	0					
ANR	682442	IfStatement	if ( out_ch_layout & AV_CH_FRONT_CENTER )		681366	0					
ANR	682443	Condition	out_ch_layout & AV_CH_FRONT_CENTER	317:17:7250:7283	681366	0	True				
ANR	682444	BitAndExpression	out_ch_layout & AV_CH_FRONT_CENTER		681366	0		&			
ANR	682445	Identifier	out_ch_layout		681366	0					
ANR	682446	Identifier	AV_CH_FRONT_CENTER		681366	1					
ANR	682447	CompoundStatement		315:52:7237:7237	681366	1					
ANR	682448	ExpressionStatement	matrix [ FRONT_CENTER ] [ FRONT_LEFT_OF_CENTER ] += M_SQRT1_2	319:12:7300:7356	681366	0	True				
ANR	682449	AssignmentExpression	matrix [ FRONT_CENTER ] [ FRONT_LEFT_OF_CENTER ] += M_SQRT1_2		681366	0		+=			
ANR	682450	ArrayIndexing	matrix [ FRONT_CENTER ] [ FRONT_LEFT_OF_CENTER ]		681366	0					
ANR	682451	ArrayIndexing	matrix [ FRONT_CENTER ]		681366	0					
ANR	682452	Identifier	matrix		681366	0					
ANR	682453	Identifier	FRONT_CENTER		681366	1					
ANR	682454	Identifier	FRONT_LEFT_OF_CENTER		681366	1					
ANR	682455	Identifier	M_SQRT1_2		681366	1					
ANR	682456	ExpressionStatement	matrix [ FRONT_CENTER ] [ FRONT_RIGHT_OF_CENTER ] += M_SQRT1_2	321:12:7371:7427	681366	1	True				
ANR	682457	AssignmentExpression	matrix [ FRONT_CENTER ] [ FRONT_RIGHT_OF_CENTER ] += M_SQRT1_2		681366	0		+=			
ANR	682458	ArrayIndexing	matrix [ FRONT_CENTER ] [ FRONT_RIGHT_OF_CENTER ]		681366	0					
ANR	682459	ArrayIndexing	matrix [ FRONT_CENTER ]		681366	0					
ANR	682460	Identifier	matrix		681366	0					
ANR	682461	Identifier	FRONT_CENTER		681366	1					
ANR	682462	Identifier	FRONT_RIGHT_OF_CENTER		681366	1					
ANR	682463	Identifier	M_SQRT1_2		681366	1					
ANR	682464	ElseStatement	else		681366	0					
ANR	682465	ExpressionStatement	av_assert0 ( 0 )	325:12:7457:7470	681366	0	True				
ANR	682466	CallExpression	av_assert0 ( 0 )		681366	0					
ANR	682467	Callee	av_assert0		681366	0					
ANR	682468	Identifier	av_assert0		681366	0					
ANR	682469	ArgumentList	0		681366	1					
ANR	682470	Argument	0		681366	0					
ANR	682471	PrimaryExpression	0		681366	0					
ANR	682472	IfStatement	if ( unaccounted & AV_CH_LOW_FREQUENCY )		681366	30					
ANR	682473	Condition	unaccounted & AV_CH_LOW_FREQUENCY	331:8:7539:7571	681366	0	True				
ANR	682474	BitAndExpression	unaccounted & AV_CH_LOW_FREQUENCY		681366	0		&			
ANR	682475	Identifier	unaccounted		681366	0					
ANR	682476	Identifier	AV_CH_LOW_FREQUENCY		681366	1					
ANR	682477	CompoundStatement		329:43:7526:7526	681366	1					
ANR	682478	IfStatement	if ( out_ch_layout & AV_CH_FRONT_CENTER )		681366	0					
ANR	682479	Condition	out_ch_layout & AV_CH_FRONT_CENTER	333:12:7589:7622	681366	0	True				
ANR	682480	BitAndExpression	out_ch_layout & AV_CH_FRONT_CENTER		681366	0		&			
ANR	682481	Identifier	out_ch_layout		681366	0					
ANR	682482	Identifier	AV_CH_FRONT_CENTER		681366	1					
ANR	682483	CompoundStatement		331:48:7577:7577	681366	1					
ANR	682484	ExpressionStatement	matrix [ FRONT_CENTER ] [ LOW_FREQUENCY ] += s -> lfe_mix_level	335:12:7640:7695	681366	0	True				
ANR	682485	AssignmentExpression	matrix [ FRONT_CENTER ] [ LOW_FREQUENCY ] += s -> lfe_mix_level		681366	0		+=			
ANR	682486	ArrayIndexing	matrix [ FRONT_CENTER ] [ LOW_FREQUENCY ]		681366	0					
ANR	682487	ArrayIndexing	matrix [ FRONT_CENTER ]		681366	0					
ANR	682488	Identifier	matrix		681366	0					
ANR	682489	Identifier	FRONT_CENTER		681366	1					
ANR	682490	Identifier	LOW_FREQUENCY		681366	1					
ANR	682491	PtrMemberAccess	s -> lfe_mix_level		681366	1					
ANR	682492	Identifier	s		681366	0					
ANR	682493	Identifier	lfe_mix_level		681366	1					
ANR	682494	ElseStatement	else		681366	0					
ANR	682495	IfStatement	if ( out_ch_layout & AV_CH_FRONT_LEFT )		681366	0					
ANR	682496	Condition	out_ch_layout & AV_CH_FRONT_LEFT	337:19:7717:7748	681366	0	True				
ANR	682497	BitAndExpression	out_ch_layout & AV_CH_FRONT_LEFT		681366	0		&			
ANR	682498	Identifier	out_ch_layout		681366	0					
ANR	682499	Identifier	AV_CH_FRONT_LEFT		681366	1					
ANR	682500	CompoundStatement		335:53:7703:7703	681366	1					
ANR	682501	ExpressionStatement	matrix [ FRONT_LEFT ] [ LOW_FREQUENCY ] += s -> lfe_mix_level * M_SQRT1_2	339:12:7766:7832	681366	0	True				
ANR	682502	AssignmentExpression	matrix [ FRONT_LEFT ] [ LOW_FREQUENCY ] += s -> lfe_mix_level * M_SQRT1_2		681366	0		+=			
ANR	682503	ArrayIndexing	matrix [ FRONT_LEFT ] [ LOW_FREQUENCY ]		681366	0					
ANR	682504	ArrayIndexing	matrix [ FRONT_LEFT ]		681366	0					
ANR	682505	Identifier	matrix		681366	0					
ANR	682506	Identifier	FRONT_LEFT		681366	1					
ANR	682507	Identifier	LOW_FREQUENCY		681366	1					
ANR	682508	MultiplicativeExpression	s -> lfe_mix_level * M_SQRT1_2		681366	1		*			
ANR	682509	PtrMemberAccess	s -> lfe_mix_level		681366	0					
ANR	682510	Identifier	s		681366	0					
ANR	682511	Identifier	lfe_mix_level		681366	1					
ANR	682512	Identifier	M_SQRT1_2		681366	1					
ANR	682513	ExpressionStatement	matrix [ FRONT_RIGHT ] [ LOW_FREQUENCY ] += s -> lfe_mix_level * M_SQRT1_2	341:12:7847:7913	681366	1	True				
ANR	682514	AssignmentExpression	matrix [ FRONT_RIGHT ] [ LOW_FREQUENCY ] += s -> lfe_mix_level * M_SQRT1_2		681366	0		+=			
ANR	682515	ArrayIndexing	matrix [ FRONT_RIGHT ] [ LOW_FREQUENCY ]		681366	0					
ANR	682516	ArrayIndexing	matrix [ FRONT_RIGHT ]		681366	0					
ANR	682517	Identifier	matrix		681366	0					
ANR	682518	Identifier	FRONT_RIGHT		681366	1					
ANR	682519	Identifier	LOW_FREQUENCY		681366	1					
ANR	682520	MultiplicativeExpression	s -> lfe_mix_level * M_SQRT1_2		681366	1		*			
ANR	682521	PtrMemberAccess	s -> lfe_mix_level		681366	0					
ANR	682522	Identifier	s		681366	0					
ANR	682523	Identifier	lfe_mix_level		681366	1					
ANR	682524	Identifier	M_SQRT1_2		681366	1					
ANR	682525	ElseStatement	else		681366	0					
ANR	682526	ExpressionStatement	av_assert0 ( 0 )	345:12:7944:7957	681366	0	True				
ANR	682527	CallExpression	av_assert0 ( 0 )		681366	0					
ANR	682528	Callee	av_assert0		681366	0					
ANR	682529	Identifier	av_assert0		681366	0					
ANR	682530	ArgumentList	0		681366	1					
ANR	682531	Argument	0		681366	0					
ANR	682532	PrimaryExpression	0		681366	0					
ANR	682533	ForStatement	for ( out_i = i = 0 ; i < 64 ; i ++ )		681366	31					
ANR	682534	ForInit	out_i = i = 0 ;	351:8:7977:7986	681366	0	True				
ANR	682535	AssignmentExpression	out_i = i = 0		681366	0		=			
ANR	682536	Identifier	out_i		681366	0					
ANR	682537	AssignmentExpression	i = 0		681366	1		=			
ANR	682538	Identifier	i		681366	0					
ANR	682539	PrimaryExpression	0		681366	1					
ANR	682540	Condition	i < 64	351:19:7988:7991	681366	1	True				
ANR	682541	RelationalExpression	i < 64		681366	0		<			
ANR	682542	Identifier	i		681366	0					
ANR	682543	PrimaryExpression	64		681366	1					
ANR	682544	PostIncDecOperationExpression	i ++	351:25:7994:7996	681366	2	True				
ANR	682545	Identifier	i		681366	0					
ANR	682546	IncDec	++		681366	1					
ANR	682547	CompoundStatement		353:8:7984:7994	681366	3					
ANR	682548	IdentifierDeclStatement	double sum = 0 ;	353:8:8009:8021	681366	0	True				
ANR	682549	IdentifierDecl	sum = 0		681366	0					
ANR	682550	IdentifierDeclType	double		681366	0					
ANR	682551	Identifier	sum		681366	1					
ANR	682552	AssignmentExpression	sum = 0		681366	2		=			
ANR	682553	Identifier	sum		681366	0					
ANR	682554	PrimaryExpression	0		681366	1					
ANR	682555	IdentifierDeclStatement	int in_i = 0 ;	355:8:8032:8042	681366	1	True				
ANR	682556	IdentifierDecl	in_i = 0		681366	0					
ANR	682557	IdentifierDeclType	int		681366	0					
ANR	682558	Identifier	in_i		681366	1					
ANR	682559	AssignmentExpression	in_i = 0		681366	2		=			
ANR	682560	Identifier	in_i		681366	0					
ANR	682561	PrimaryExpression	0		681366	1					
ANR	682562	ForStatement	for ( j = 0 ; j < 64 ; j ++ )		681366	2					
ANR	682563	ForInit	j = 0 ;	357:12:8057:8060	681366	0	True				
ANR	682564	AssignmentExpression	j = 0		681366	0		=			
ANR	682565	Identifier	j		681366	0					
ANR	682566	PrimaryExpression	0		681366	1					
ANR	682567	Condition	j < 64	357:17:8062:8065	681366	1	True				
ANR	682568	RelationalExpression	j < 64		681366	0		<			
ANR	682569	Identifier	j		681366	0					
ANR	682570	PrimaryExpression	64		681366	1					
ANR	682571	PostIncDecOperationExpression	j ++	357:23:8068:8070	681366	2	True				
ANR	682572	Identifier	j		681366	0					
ANR	682573	IncDec	++		681366	1					
ANR	682574	CompoundStatement		355:27:8024:8024	681366	3					
ANR	682575	ExpressionStatement	s -> matrix [ out_i ] [ in_i ] = matrix [ i ] [ j ]	359:12:8087:8123	681366	0	True				
ANR	682576	AssignmentExpression	s -> matrix [ out_i ] [ in_i ] = matrix [ i ] [ j ]		681366	0		=			
ANR	682577	ArrayIndexing	s -> matrix [ out_i ] [ in_i ]		681366	0					
ANR	682578	ArrayIndexing	s -> matrix [ out_i ]		681366	0					
ANR	682579	PtrMemberAccess	s -> matrix		681366	0					
ANR	682580	Identifier	s		681366	0					
ANR	682581	Identifier	matrix		681366	1					
ANR	682582	Identifier	out_i		681366	1					
ANR	682583	Identifier	in_i		681366	1					
ANR	682584	ArrayIndexing	matrix [ i ] [ j ]		681366	1					
ANR	682585	ArrayIndexing	matrix [ i ]		681366	0					
ANR	682586	Identifier	matrix		681366	0					
ANR	682587	Identifier	i		681366	1					
ANR	682588	Identifier	j		681366	1					
ANR	682589	IfStatement	if ( matrix [ i ] [ j ] )		681366	1					
ANR	682590	Condition	matrix [ i ] [ j ]	361:15:8141:8152	681366	0	True				
ANR	682591	ArrayIndexing	matrix [ i ] [ j ]		681366	0					
ANR	682592	ArrayIndexing	matrix [ i ]		681366	0					
ANR	682593	Identifier	matrix		681366	0					
ANR	682594	Identifier	i		681366	1					
ANR	682595	Identifier	j		681366	1					
ANR	682596	CompoundStatement		359:28:8106:8106	681366	1					
ANR	682597	ExpressionStatement	sum += fabs ( matrix [ i ] [ j ] )	363:16:8173:8198	681366	0	True				
ANR	682598	AssignmentExpression	sum += fabs ( matrix [ i ] [ j ] )		681366	0		+=			
ANR	682599	Identifier	sum		681366	0					
ANR	682600	CallExpression	fabs ( matrix [ i ] [ j ] )		681366	1					
ANR	682601	Callee	fabs		681366	0					
ANR	682602	Identifier	fabs		681366	0					
ANR	682603	ArgumentList	matrix [ i ] [ j ]		681366	1					
ANR	682604	Argument	matrix [ i ] [ j ]		681366	0					
ANR	682605	ArrayIndexing	matrix [ i ] [ j ]		681366	0					
ANR	682606	ArrayIndexing	matrix [ i ]		681366	0					
ANR	682607	Identifier	matrix		681366	0					
ANR	682608	Identifier	i		681366	1					
ANR	682609	Identifier	j		681366	1					
ANR	682610	Statement	if	367:12:8228:8229	681366	2	True				
ANR	682611	Statement	(	367:14:8230:8230	681366	3	True				
ANR	682612	Statement	in_ch_layout	367:15:8231:8242	681366	4	True				
ANR	682613	Statement	&	367:28:8244:8244	681366	5	True				
ANR	682614	Statement	(	367:30:8246:8246	681366	6	True				
ANR	682615	Statement	1UL	367:31:8247:8249	681366	7	True				
ANR	682616	Statement	L	367:34:8250:8250	681366	8	True				
ANR	682617	Statement	<<	367:35:8251:8252	681366	9	True				
ANR	682618	Statement	j	367:37:8253:8253	681366	10	True				
ANR	682619	Statement	)	367:38:8254:8254	681366	11	True				
ANR	682620	Statement	)	367:39:8255:8255	681366	12	True				
ANR	682621	ExpressionStatement	in_i ++	369:16:8274:8280	681366	13	True				
ANR	682622	PostIncDecOperationExpression	in_i ++		681366	0					
ANR	682623	Identifier	in_i		681366	0					
ANR	682624	IncDec	++		681366	1					
ANR	682625	ExpressionStatement	"maxcoef = FFMAX ( maxcoef , sum )"	373:8:8302:8330	681366	3	True				
ANR	682626	AssignmentExpression	"maxcoef = FFMAX ( maxcoef , sum )"		681366	0		=			
ANR	682627	Identifier	maxcoef		681366	0					
ANR	682628	CallExpression	"FFMAX ( maxcoef , sum )"		681366	1					
ANR	682629	Callee	FFMAX		681366	0					
ANR	682630	Identifier	FFMAX		681366	0					
ANR	682631	ArgumentList	maxcoef		681366	1					
ANR	682632	Argument	maxcoef		681366	0					
ANR	682633	Identifier	maxcoef		681366	0					
ANR	682634	Argument	sum		681366	1					
ANR	682635	Identifier	sum		681366	0					
ANR	682636	Statement	if	375:8:8341:8342	681366	4	True				
ANR	682637	Statement	(	375:10:8343:8343	681366	5	True				
ANR	682638	Statement	out_ch_layout	375:11:8344:8356	681366	6	True				
ANR	682639	Statement	&	375:25:8358:8358	681366	7	True				
ANR	682640	Statement	(	375:27:8360:8360	681366	8	True				
ANR	682641	Statement	1UL	375:28:8361:8363	681366	9	True				
ANR	682642	Statement	L	375:31:8364:8364	681366	10	True				
ANR	682643	Statement	<<	375:32:8365:8366	681366	11	True				
ANR	682644	Statement	i	375:34:8367:8367	681366	12	True				
ANR	682645	Statement	)	375:35:8368:8368	681366	13	True				
ANR	682646	Statement	)	375:36:8369:8369	681366	14	True				
ANR	682647	ExpressionStatement	out_i ++	377:12:8384:8391	681366	15	True				
ANR	682648	PostIncDecOperationExpression	out_i ++		681366	0					
ANR	682649	Identifier	out_i		681366	0					
ANR	682650	IncDec	++		681366	1					
ANR	682651	IfStatement	if ( s -> rematrix_volume < 0 )		681366	32					
ANR	682652	Condition	s -> rematrix_volume < 0	381:7:8408:8430	681366	0	True				
ANR	682653	RelationalExpression	s -> rematrix_volume < 0		681366	0		<			
ANR	682654	PtrMemberAccess	s -> rematrix_volume		681366	0					
ANR	682655	Identifier	s		681366	0					
ANR	682656	Identifier	rematrix_volume		681366	1					
ANR	682657	PrimaryExpression	0		681366	1					
ANR	682658	ExpressionStatement	maxcoef = - s -> rematrix_volume	383:8:8442:8471	681366	1	True				
ANR	682659	AssignmentExpression	maxcoef = - s -> rematrix_volume		681366	0		=			
ANR	682660	Identifier	maxcoef		681366	0					
ANR	682661	UnaryOperationExpression	- s -> rematrix_volume		681366	1					
ANR	682662	UnaryOperator	-		681366	0					
ANR	682663	PtrMemberAccess	s -> rematrix_volume		681366	1					
ANR	682664	Identifier	s		681366	0					
ANR	682665	Identifier	rematrix_volume		681366	1					
ANR	682666	IfStatement	if ( s -> rematrix_maxval > 0 )		681366	33					
ANR	682667	Condition	s -> rematrix_maxval > 0	387:8:8484:8505	681366	0	True				
ANR	682668	RelationalExpression	s -> rematrix_maxval > 0		681366	0		>			
ANR	682669	PtrMemberAccess	s -> rematrix_maxval		681366	0					
ANR	682670	Identifier	s		681366	0					
ANR	682671	Identifier	rematrix_maxval		681366	1					
ANR	682672	PrimaryExpression	0		681366	1					
ANR	682673	CompoundStatement		385:32:8460:8460	681366	1					
ANR	682674	ExpressionStatement	maxval = s -> rematrix_maxval	389:8:8519:8546	681366	0	True				
ANR	682675	AssignmentExpression	maxval = s -> rematrix_maxval		681366	0		=			
ANR	682676	Identifier	maxval		681366	0					
ANR	682677	PtrMemberAccess	s -> rematrix_maxval		681366	1					
ANR	682678	Identifier	s		681366	0					
ANR	682679	Identifier	rematrix_maxval		681366	1					
ANR	682680	ElseStatement	else		681366	0					
ANR	682681	IfStatement	if ( av_get_packed_sample_fmt ( s -> out_sample_fmt ) < AV_SAMPLE_FMT_FLT || av_get_packed_sample_fmt ( s -> int_sample_fmt ) < AV_SAMPLE_FMT_FLT )		681366	0					
ANR	682682	Condition	av_get_packed_sample_fmt ( s -> out_sample_fmt ) < AV_SAMPLE_FMT_FLT || av_get_packed_sample_fmt ( s -> int_sample_fmt ) < AV_SAMPLE_FMT_FLT	391:18:8567:8712	681366	0	True				
ANR	682683	OrExpression	av_get_packed_sample_fmt ( s -> out_sample_fmt ) < AV_SAMPLE_FMT_FLT || av_get_packed_sample_fmt ( s -> int_sample_fmt ) < AV_SAMPLE_FMT_FLT		681366	0		||			
ANR	682684	RelationalExpression	av_get_packed_sample_fmt ( s -> out_sample_fmt ) < AV_SAMPLE_FMT_FLT		681366	0		<			
ANR	682685	CallExpression	av_get_packed_sample_fmt ( s -> out_sample_fmt )		681366	0					
ANR	682686	Callee	av_get_packed_sample_fmt		681366	0					
ANR	682687	Identifier	av_get_packed_sample_fmt		681366	0					
ANR	682688	ArgumentList	s -> out_sample_fmt		681366	1					
ANR	682689	Argument	s -> out_sample_fmt		681366	0					
ANR	682690	PtrMemberAccess	s -> out_sample_fmt		681366	0					
ANR	682691	Identifier	s		681366	0					
ANR	682692	Identifier	out_sample_fmt		681366	1					
ANR	682693	Identifier	AV_SAMPLE_FMT_FLT		681366	1					
ANR	682694	RelationalExpression	av_get_packed_sample_fmt ( s -> int_sample_fmt ) < AV_SAMPLE_FMT_FLT		681366	1		<			
ANR	682695	CallExpression	av_get_packed_sample_fmt ( s -> int_sample_fmt )		681366	0					
ANR	682696	Callee	av_get_packed_sample_fmt		681366	0					
ANR	682697	Identifier	av_get_packed_sample_fmt		681366	0					
ANR	682698	ArgumentList	s -> int_sample_fmt		681366	1					
ANR	682699	Argument	s -> int_sample_fmt		681366	0					
ANR	682700	PtrMemberAccess	s -> int_sample_fmt		681366	0					
ANR	682701	Identifier	s		681366	0					
ANR	682702	Identifier	int_sample_fmt		681366	1					
ANR	682703	Identifier	AV_SAMPLE_FMT_FLT		681366	1					
ANR	682704	CompoundStatement		391:83:8667:8667	681366	1					
ANR	682705	ExpressionStatement	maxval = 1.0	395:8:8726:8738	681366	0	True				
ANR	682706	AssignmentExpression	maxval = 1.0		681366	0		=			
ANR	682707	Identifier	maxval		681366	0					
ANR	682708	PrimaryExpression	1.0		681366	1					
ANR	682709	ElseStatement	else		681366	0					
ANR	682710	ExpressionStatement	maxval = INT_MAX	399:8:8761:8777	681366	0	True				
ANR	682711	AssignmentExpression	maxval = INT_MAX		681366	0		=			
ANR	682712	Identifier	maxval		681366	0					
ANR	682713	Identifier	INT_MAX		681366	1					
ANR	682714	IfStatement	if ( maxcoef > maxval || s -> rematrix_volume < 0 )		681366	34					
ANR	682715	Condition	maxcoef > maxval || s -> rematrix_volume < 0	403:7:8789:8831	681366	0	True				
ANR	682716	OrExpression	maxcoef > maxval || s -> rematrix_volume < 0		681366	0		||			
ANR	682717	RelationalExpression	maxcoef > maxval		681366	0		>			
ANR	682718	Identifier	maxcoef		681366	0					
ANR	682719	Identifier	maxval		681366	1					
ANR	682720	RelationalExpression	s -> rematrix_volume < 0		681366	1		<			
ANR	682721	PtrMemberAccess	s -> rematrix_volume		681366	0					
ANR	682722	Identifier	s		681366	0					
ANR	682723	Identifier	rematrix_volume		681366	1					
ANR	682724	PrimaryExpression	0		681366	1					
ANR	682725	CompoundStatement		401:51:8785:8785	681366	1					
ANR	682726	ExpressionStatement	maxcoef /= maxval	405:8:8844:8861	681366	0	True				
ANR	682727	AssignmentExpression	maxcoef /= maxval		681366	0		/=			
ANR	682728	Identifier	maxcoef		681366	0					
ANR	682729	Identifier	maxval		681366	1					
ANR	682730	ForStatement	for ( i = 0 ; i < SWR_CH_MAX ; i ++ )		681366	1					
ANR	682731	ForInit	i = 0 ;	407:12:8876:8879	681366	0	True				
ANR	682732	AssignmentExpression	i = 0		681366	0		=			
ANR	682733	Identifier	i		681366	0					
ANR	682734	PrimaryExpression	0		681366	1					
ANR	682735	Condition	i < SWR_CH_MAX	407:17:8881:8892	681366	1	True				
ANR	682736	RelationalExpression	i < SWR_CH_MAX		681366	0		<			
ANR	682737	Identifier	i		681366	0					
ANR	682738	Identifier	SWR_CH_MAX		681366	1					
ANR	682739	PostIncDecOperationExpression	i ++	407:31:8895:8897	681366	2	True				
ANR	682740	Identifier	i		681366	0					
ANR	682741	IncDec	++		681366	1					
ANR	682742	ForStatement	for ( j = 0 ; j < SWR_CH_MAX ; j ++ )		681366	3					
ANR	682743	ForInit	j = 0 ;	409:16:8917:8920	681366	0	True				
ANR	682744	AssignmentExpression	j = 0		681366	0		=			
ANR	682745	Identifier	j		681366	0					
ANR	682746	PrimaryExpression	0		681366	1					
ANR	682747	Condition	j < SWR_CH_MAX	409:21:8922:8933	681366	1	True				
ANR	682748	RelationalExpression	j < SWR_CH_MAX		681366	0		<			
ANR	682749	Identifier	j		681366	0					
ANR	682750	Identifier	SWR_CH_MAX		681366	1					
ANR	682751	PostIncDecOperationExpression	j ++	409:35:8936:8938	681366	2	True				
ANR	682752	Identifier	j		681366	0					
ANR	682753	IncDec	++		681366	1					
ANR	682754	CompoundStatement		407:39:8892:8892	681366	3					
ANR	682755	ExpressionStatement	s -> matrix [ i ] [ j ] /= maxcoef	411:16:8959:8985	681366	0	True				
ANR	682756	AssignmentExpression	s -> matrix [ i ] [ j ] /= maxcoef		681366	0		/=			
ANR	682757	ArrayIndexing	s -> matrix [ i ] [ j ]		681366	0					
ANR	682758	ArrayIndexing	s -> matrix [ i ]		681366	0					
ANR	682759	PtrMemberAccess	s -> matrix		681366	0					
ANR	682760	Identifier	s		681366	0					
ANR	682761	Identifier	matrix		681366	1					
ANR	682762	Identifier	i		681366	1					
ANR	682763	Identifier	j		681366	1					
ANR	682764	Identifier	maxcoef		681366	1					
ANR	682765	IfStatement	if ( s -> rematrix_volume > 0 )		681366	35					
ANR	682766	Condition	s -> rematrix_volume > 0	419:7:9019:9040	681366	0	True				
ANR	682767	RelationalExpression	s -> rematrix_volume > 0		681366	0		>			
ANR	682768	PtrMemberAccess	s -> rematrix_volume		681366	0					
ANR	682769	Identifier	s		681366	0					
ANR	682770	Identifier	rematrix_volume		681366	1					
ANR	682771	PrimaryExpression	0		681366	1					
ANR	682772	CompoundStatement		417:30:8994:8994	681366	1					
ANR	682773	ForStatement	for ( i = 0 ; i < SWR_CH_MAX ; i ++ )		681366	0					
ANR	682774	ForInit	i = 0 ;	421:12:9057:9060	681366	0	True				
ANR	682775	AssignmentExpression	i = 0		681366	0		=			
ANR	682776	Identifier	i		681366	0					
ANR	682777	PrimaryExpression	0		681366	1					
ANR	682778	Condition	i < SWR_CH_MAX	421:17:9062:9073	681366	1	True				
ANR	682779	RelationalExpression	i < SWR_CH_MAX		681366	0		<			
ANR	682780	Identifier	i		681366	0					
ANR	682781	Identifier	SWR_CH_MAX		681366	1					
ANR	682782	PostIncDecOperationExpression	i ++	421:31:9076:9078	681366	2	True				
ANR	682783	Identifier	i		681366	0					
ANR	682784	IncDec	++		681366	1					
ANR	682785	ForStatement	for ( j = 0 ; j < SWR_CH_MAX ; j ++ )		681366	3					
ANR	682786	ForInit	j = 0 ;	423:16:9098:9101	681366	0	True				
ANR	682787	AssignmentExpression	j = 0		681366	0		=			
ANR	682788	Identifier	j		681366	0					
ANR	682789	PrimaryExpression	0		681366	1					
ANR	682790	Condition	j < SWR_CH_MAX	423:21:9103:9114	681366	1	True				
ANR	682791	RelationalExpression	j < SWR_CH_MAX		681366	0		<			
ANR	682792	Identifier	j		681366	0					
ANR	682793	Identifier	SWR_CH_MAX		681366	1					
ANR	682794	PostIncDecOperationExpression	j ++	423:35:9117:9119	681366	2	True				
ANR	682795	Identifier	j		681366	0					
ANR	682796	IncDec	++		681366	1					
ANR	682797	CompoundStatement		421:39:9073:9073	681366	3					
ANR	682798	ExpressionStatement	s -> matrix [ i ] [ j ] *= s -> rematrix_volume	425:16:9140:9177	681366	0	True				
ANR	682799	AssignmentExpression	s -> matrix [ i ] [ j ] *= s -> rematrix_volume		681366	0		*=			
ANR	682800	ArrayIndexing	s -> matrix [ i ] [ j ]		681366	0					
ANR	682801	ArrayIndexing	s -> matrix [ i ]		681366	0					
ANR	682802	PtrMemberAccess	s -> matrix		681366	0					
ANR	682803	Identifier	s		681366	0					
ANR	682804	Identifier	matrix		681366	1					
ANR	682805	Identifier	i		681366	1					
ANR	682806	Identifier	j		681366	1					
ANR	682807	PtrMemberAccess	s -> rematrix_volume		681366	1					
ANR	682808	Identifier	s		681366	0					
ANR	682809	Identifier	rematrix_volume		681366	1					
ANR	682810	ForStatement	for ( i = 0 ; i < av_get_channel_layout_nb_channels ( out_ch_layout ) ; i ++ )		681366	36					
ANR	682811	ForInit	i = 0 ;	433:8:9212:9215	681366	0	True				
ANR	682812	AssignmentExpression	i = 0		681366	0		=			
ANR	682813	Identifier	i		681366	0					
ANR	682814	PrimaryExpression	0		681366	1					
ANR	682815	Condition	i < av_get_channel_layout_nb_channels ( out_ch_layout )	433:13:9217:9266	681366	1	True				
ANR	682816	RelationalExpression	i < av_get_channel_layout_nb_channels ( out_ch_layout )		681366	0		<			
ANR	682817	Identifier	i		681366	0					
ANR	682818	CallExpression	av_get_channel_layout_nb_channels ( out_ch_layout )		681366	1					
ANR	682819	Callee	av_get_channel_layout_nb_channels		681366	0					
ANR	682820	Identifier	av_get_channel_layout_nb_channels		681366	0					
ANR	682821	ArgumentList	out_ch_layout		681366	1					
ANR	682822	Argument	out_ch_layout		681366	0					
ANR	682823	Identifier	out_ch_layout		681366	0					
ANR	682824	PostIncDecOperationExpression	i ++	433:65:9269:9271	681366	2	True				
ANR	682825	Identifier	i		681366	0					
ANR	682826	IncDec	++		681366	1					
ANR	682827	CompoundStatement		431:69:9225:9225	681366	3					
ANR	682828	ForStatement	for ( j = 0 ; j < av_get_channel_layout_nb_channels ( in_ch_layout ) ; j ++ )		681366	0					
ANR	682829	ForInit	j = 0 ;	435:12:9288:9291	681366	0	True				
ANR	682830	AssignmentExpression	j = 0		681366	0		=			
ANR	682831	Identifier	j		681366	0					
ANR	682832	PrimaryExpression	0		681366	1					
ANR	682833	Condition	j < av_get_channel_layout_nb_channels ( in_ch_layout )	435:17:9293:9341	681366	1	True				
ANR	682834	RelationalExpression	j < av_get_channel_layout_nb_channels ( in_ch_layout )		681366	0		<			
ANR	682835	Identifier	j		681366	0					
ANR	682836	CallExpression	av_get_channel_layout_nb_channels ( in_ch_layout )		681366	1					
ANR	682837	Callee	av_get_channel_layout_nb_channels		681366	0					
ANR	682838	Identifier	av_get_channel_layout_nb_channels		681366	0					
ANR	682839	ArgumentList	in_ch_layout		681366	1					
ANR	682840	Argument	in_ch_layout		681366	0					
ANR	682841	Identifier	in_ch_layout		681366	0					
ANR	682842	PostIncDecOperationExpression	j ++	435:68:9344:9346	681366	2	True				
ANR	682843	Identifier	j		681366	0					
ANR	682844	IncDec	++		681366	1					
ANR	682845	CompoundStatement		433:72:9300:9300	681366	3					
ANR	682846	ExpressionStatement	"av_log ( NULL , AV_LOG_DEBUG , ""%f "" , s -> matrix [ i ] [ j ] )"	437:12:9363:9413	681366	0	True				
ANR	682847	CallExpression	"av_log ( NULL , AV_LOG_DEBUG , ""%f "" , s -> matrix [ i ] [ j ] )"		681366	0					
ANR	682848	Callee	av_log		681366	0					
ANR	682849	Identifier	av_log		681366	0					
ANR	682850	ArgumentList	NULL		681366	1					
ANR	682851	Argument	NULL		681366	0					
ANR	682852	Identifier	NULL		681366	0					
ANR	682853	Argument	AV_LOG_DEBUG		681366	1					
ANR	682854	Identifier	AV_LOG_DEBUG		681366	0					
ANR	682855	Argument	"""%f """		681366	2					
ANR	682856	PrimaryExpression	"""%f """		681366	0					
ANR	682857	Argument	s -> matrix [ i ] [ j ]		681366	3					
ANR	682858	ArrayIndexing	s -> matrix [ i ] [ j ]		681366	0					
ANR	682859	ArrayIndexing	s -> matrix [ i ]		681366	0					
ANR	682860	PtrMemberAccess	s -> matrix		681366	0					
ANR	682861	Identifier	s		681366	0					
ANR	682862	Identifier	matrix		681366	1					
ANR	682863	Identifier	i		681366	1					
ANR	682864	Identifier	j		681366	1					
ANR	682865	ExpressionStatement	"av_log ( NULL , AV_LOG_DEBUG , ""\\n"" )"	441:8:9435:9467	681366	1	True				
ANR	682866	CallExpression	"av_log ( NULL , AV_LOG_DEBUG , ""\\n"" )"		681366	0					
ANR	682867	Callee	av_log		681366	0					
ANR	682868	Identifier	av_log		681366	0					
ANR	682869	ArgumentList	NULL		681366	1					
ANR	682870	Argument	NULL		681366	0					
ANR	682871	Identifier	NULL		681366	0					
ANR	682872	Argument	AV_LOG_DEBUG		681366	1					
ANR	682873	Identifier	AV_LOG_DEBUG		681366	0					
ANR	682874	Argument	"""\\n"""		681366	2					
ANR	682875	PrimaryExpression	"""\\n"""		681366	0					
ANR	682876	ReturnStatement	return 0 ;	445:4:9481:9489	681366	37	True				
ANR	682877	PrimaryExpression	0		681366	0					
ANR	682878	ReturnType	static int		681366	1					
ANR	682879	Identifier	auto_matrix		681366	2					
ANR	682880	ParameterList	SwrContext * s		681366	3					
ANR	682881	Parameter	SwrContext * s	1:31:31:43	681366	0	True				
ANR	682882	ParameterType	SwrContext *		681366	0					
ANR	682883	Identifier	s		681366	1					
ANR	682884	CFGEntryNode	ENTRY		681366		True				
ANR	682885	CFGExitNode	EXIT		681366		True				
ANR	682886	Symbol	s -> rematrix_volume		681366						
ANR	682887	Symbol	AV_MATRIX_ENCODING_DPLII		681366						
ANR	682888	Symbol	AV_CH_LAYOUT_STEREO		681366						
ANR	682889	Symbol	AV_CH_FRONT_LEFT		681366						
ANR	682890	Symbol	* * s -> matrix		681366						
ANR	682891	Symbol	out_ch_layout		681366						
ANR	682892	Symbol	s -> slev		681366						
ANR	682893	Symbol	AV_CH_BACK_CENTER		681366						
ANR	682894	Symbol	SQRT3_2		681366						
ANR	682895	Symbol	FRONT_RIGHT_OF_CENTER		681366						
ANR	682896	Symbol	s -> out_ch_layout		681366						
ANR	682897	Symbol	~out_ch_layout		681366						
ANR	682898	Symbol	* * SIDE_LEFT		681366						
ANR	682899	Symbol	sqrt		681366						
ANR	682900	Symbol	av_get_packed_sample_fmt		681366						
ANR	682901	Symbol	* FRONT_RIGHT		681366						
ANR	682902	Symbol	* in_i		681366						
ANR	682903	Symbol	AV_CH_BACK_LEFT		681366						
ANR	682904	Symbol	AV_LOG_DEBUG		681366						
ANR	682905	Symbol	matrix_encoding		681366						
ANR	682906	Symbol	BACK_CENTER		681366						
ANR	682907	Symbol	* * BACK_LEFT		681366						
ANR	682908	Symbol	* * i		681366						
ANR	682909	Symbol	AV_CH_FRONT_LEFT_OF_CENTER		681366						
ANR	682910	Symbol	NULL		681366						
ANR	682911	Symbol	* SIDE_LEFT		681366						
ANR	682912	Symbol	FRONT_LEFT		681366						
ANR	682913	Symbol	s -> clev		681366						
ANR	682914	Symbol	maxcoef		681366						
ANR	682915	Symbol	* FRONT_LEFT		681366						
ANR	682916	Symbol	* * FRONT_CENTER		681366						
ANR	682917	Symbol	AV_SAMPLE_FMT_FLT		681366						
ANR	682918	Symbol	FRONT_LEFT_OF_CENTER		681366						
ANR	682919	Symbol	AV_MATRIX_ENCODING_DOLBY		681366						
ANR	682920	Symbol	* LOW_FREQUENCY		681366						
ANR	682921	Symbol	* * * s		681366						
ANR	682922	Symbol	* s -> matrix		681366						
ANR	682923	Symbol	av_get_channel_layout_nb_channels		681366						
ANR	682924	Symbol	* matrix		681366						
ANR	682925	Symbol	* * FRONT_LEFT		681366						
ANR	682926	Symbol	s -> out_sample_fmt		681366						
ANR	682927	Symbol	maxval		681366						
ANR	682928	Symbol	BACK_LEFT		681366						
ANR	682929	Symbol	in_ch_layout		681366						
ANR	682930	Symbol	* FRONT_CENTER		681366						
ANR	682931	Symbol	s -> int_sample_fmt		681366						
ANR	682932	Symbol	FRONT_CENTER		681366						
ANR	682933	Symbol	unaccounted		681366						
ANR	682934	Symbol	sane_layout		681366						
ANR	682935	Symbol	M_SQRT1_2		681366						
ANR	682936	Symbol	s -> rematrix_maxval		681366						
ANR	682937	Symbol	clean_layout		681366						
ANR	682938	Symbol	AV_CH_FRONT_CENTER		681366						
ANR	682939	Symbol	SWR_CH_MAX		681366						
ANR	682940	Symbol	SIDE_LEFT		681366						
ANR	682941	Symbol	sum		681366						
ANR	682942	Symbol	matrix		681366						
ANR	682943	Symbol	* * matrix		681366						
ANR	682944	Symbol	AV_CH_SIDE_LEFT		681366						
ANR	682945	Symbol	FRONT_RIGHT		681366						
ANR	682946	Symbol	* BACK_CENTER		681366						
ANR	682947	Symbol	* FRONT_LEFT_OF_CENTER		681366						
ANR	682948	Symbol	BACK_RIGHT		681366						
ANR	682949	Symbol	* * s		681366						
ANR	682950	Symbol	INT_MAX		681366						
ANR	682951	Symbol	* * FRONT_RIGHT		681366						
ANR	682952	Symbol	s -> lfe_mix_level		681366						
ANR	682953	Symbol	s -> in_ch_layout		681366						
ANR	682954	Symbol	* * BACK_CENTER		681366						
ANR	682955	Symbol	* * out_i		681366						
ANR	682956	Symbol	* FRONT_RIGHT_OF_CENTER		681366						
ANR	682957	Symbol	* * BACK_RIGHT		681366						
ANR	682958	Symbol	fabs		681366						
ANR	682959	Symbol	AV_LOG_ERROR		681366						
ANR	682960	Symbol	* SIDE_RIGHT		681366						
ANR	682961	Symbol	SIDE_RIGHT		681366						
ANR	682962	Symbol	i		681366						
ANR	682963	Symbol	j		681366						
ANR	682964	Symbol	out_i		681366						
ANR	682965	Symbol	s -> matrix		681366						
ANR	682966	Symbol	LOW_FREQUENCY		681366						
ANR	682967	Symbol	EINVAL		681366						
ANR	682968	Symbol	* out_i		681366						
ANR	682969	Symbol	buf		681366						
ANR	682970	Symbol	* * SIDE_RIGHT		681366						
ANR	682971	Symbol	s		681366						
ANR	682972	Symbol	* i		681366						
ANR	682973	Symbol	* j		681366						
ANR	682974	Symbol	* BACK_RIGHT		681366						
ANR	682975	Symbol	* BACK_LEFT		681366						
ANR	682976	Symbol	AVERROR		681366						
ANR	682977	Symbol	* s		681366						
ANR	682978	Symbol	s -> matrix_encoding		681366						
ANR	682979	Symbol	AV_CH_LOW_FREQUENCY		681366						
ANR	682980	Symbol	in_i		681366						
ANR	682981	Symbol	FFMAX		681366						
