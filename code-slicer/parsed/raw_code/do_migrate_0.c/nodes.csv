command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2608373	File	/home/p4ultr4n/workplace/ReVeal/raw_code/do_migrate_0.c								
ANR	2608374	Function	do_migrate	1:0:0:1541							
ANR	2608375	FunctionDef	"do_migrate (Monitor * mon , const QDict * qdict , QObject * * ret_data)"		2608374	0					
ANR	2608376	CompoundStatement		3:0:70:1541	2608374	0					
ANR	2608377	IdentifierDeclStatement	MigrationState * s = migrate_get_current ( ) ;	5:4:77:118	2608374	0	True				
ANR	2608378	IdentifierDecl	* s = migrate_get_current ( )		2608374	0					
ANR	2608379	IdentifierDeclType	MigrationState *		2608374	0					
ANR	2608380	Identifier	s		2608374	1					
ANR	2608381	AssignmentExpression	* s = migrate_get_current ( )		2608374	2		=			
ANR	2608382	Identifier	s		2608374	0					
ANR	2608383	CallExpression	migrate_get_current ( )		2608374	1					
ANR	2608384	Callee	migrate_get_current		2608374	0					
ANR	2608385	Identifier	migrate_get_current		2608374	0					
ANR	2608386	ArgumentList			2608374	1					
ANR	2608387	IdentifierDeclStatement	const char * p ;	7:4:125:138	2608374	1	True				
ANR	2608388	IdentifierDecl	* p		2608374	0					
ANR	2608389	IdentifierDeclType	const char *		2608374	0					
ANR	2608390	Identifier	p		2608374	1					
ANR	2608391	IdentifierDeclStatement	"int detach = qdict_get_try_bool ( qdict , ""detach"" , 0 ) ;"	9:4:145:196	2608374	2	True				
ANR	2608392	IdentifierDecl	"detach = qdict_get_try_bool ( qdict , ""detach"" , 0 )"		2608374	0					
ANR	2608393	IdentifierDeclType	int		2608374	0					
ANR	2608394	Identifier	detach		2608374	1					
ANR	2608395	AssignmentExpression	"detach = qdict_get_try_bool ( qdict , ""detach"" , 0 )"		2608374	2		=			
ANR	2608396	Identifier	detach		2608374	0					
ANR	2608397	CallExpression	"qdict_get_try_bool ( qdict , ""detach"" , 0 )"		2608374	1					
ANR	2608398	Callee	qdict_get_try_bool		2608374	0					
ANR	2608399	Identifier	qdict_get_try_bool		2608374	0					
ANR	2608400	ArgumentList	qdict		2608374	1					
ANR	2608401	Argument	qdict		2608374	0					
ANR	2608402	Identifier	qdict		2608374	0					
ANR	2608403	Argument	"""detach"""		2608374	1					
ANR	2608404	PrimaryExpression	"""detach"""		2608374	0					
ANR	2608405	Argument	0		2608374	2					
ANR	2608406	PrimaryExpression	0		2608374	0					
ANR	2608407	IdentifierDeclStatement	"int blk = qdict_get_try_bool ( qdict , ""blk"" , 0 ) ;"	11:4:203:248	2608374	3	True				
ANR	2608408	IdentifierDecl	"blk = qdict_get_try_bool ( qdict , ""blk"" , 0 )"		2608374	0					
ANR	2608409	IdentifierDeclType	int		2608374	0					
ANR	2608410	Identifier	blk		2608374	1					
ANR	2608411	AssignmentExpression	"blk = qdict_get_try_bool ( qdict , ""blk"" , 0 )"		2608374	2		=			
ANR	2608412	Identifier	blk		2608374	0					
ANR	2608413	CallExpression	"qdict_get_try_bool ( qdict , ""blk"" , 0 )"		2608374	1					
ANR	2608414	Callee	qdict_get_try_bool		2608374	0					
ANR	2608415	Identifier	qdict_get_try_bool		2608374	0					
ANR	2608416	ArgumentList	qdict		2608374	1					
ANR	2608417	Argument	qdict		2608374	0					
ANR	2608418	Identifier	qdict		2608374	0					
ANR	2608419	Argument	"""blk"""		2608374	1					
ANR	2608420	PrimaryExpression	"""blk"""		2608374	0					
ANR	2608421	Argument	0		2608374	2					
ANR	2608422	PrimaryExpression	0		2608374	0					
ANR	2608423	IdentifierDeclStatement	"int inc = qdict_get_try_bool ( qdict , ""inc"" , 0 ) ;"	13:4:255:300	2608374	4	True				
ANR	2608424	IdentifierDecl	"inc = qdict_get_try_bool ( qdict , ""inc"" , 0 )"		2608374	0					
ANR	2608425	IdentifierDeclType	int		2608374	0					
ANR	2608426	Identifier	inc		2608374	1					
ANR	2608427	AssignmentExpression	"inc = qdict_get_try_bool ( qdict , ""inc"" , 0 )"		2608374	2		=			
ANR	2608428	Identifier	inc		2608374	0					
ANR	2608429	CallExpression	"qdict_get_try_bool ( qdict , ""inc"" , 0 )"		2608374	1					
ANR	2608430	Callee	qdict_get_try_bool		2608374	0					
ANR	2608431	Identifier	qdict_get_try_bool		2608374	0					
ANR	2608432	ArgumentList	qdict		2608374	1					
ANR	2608433	Argument	qdict		2608374	0					
ANR	2608434	Identifier	qdict		2608374	0					
ANR	2608435	Argument	"""inc"""		2608374	1					
ANR	2608436	PrimaryExpression	"""inc"""		2608374	0					
ANR	2608437	Argument	0		2608374	2					
ANR	2608438	PrimaryExpression	0		2608374	0					
ANR	2608439	IdentifierDeclStatement	"const char * uri = qdict_get_str ( qdict , ""uri"" ) ;"	15:4:307:352	2608374	5	True				
ANR	2608440	IdentifierDecl	"* uri = qdict_get_str ( qdict , ""uri"" )"		2608374	0					
ANR	2608441	IdentifierDeclType	const char *		2608374	0					
ANR	2608442	Identifier	uri		2608374	1					
ANR	2608443	AssignmentExpression	"* uri = qdict_get_str ( qdict , ""uri"" )"		2608374	2		=			
ANR	2608444	Identifier	uri		2608374	0					
ANR	2608445	CallExpression	"qdict_get_str ( qdict , ""uri"" )"		2608374	1					
ANR	2608446	Callee	qdict_get_str		2608374	0					
ANR	2608447	Identifier	qdict_get_str		2608374	0					
ANR	2608448	ArgumentList	qdict		2608374	1					
ANR	2608449	Argument	qdict		2608374	0					
ANR	2608450	Identifier	qdict		2608374	0					
ANR	2608451	Argument	"""uri"""		2608374	1					
ANR	2608452	PrimaryExpression	"""uri"""		2608374	0					
ANR	2608453	IdentifierDeclStatement	int ret ;	17:4:359:366	2608374	6	True				
ANR	2608454	IdentifierDecl	ret		2608374	0					
ANR	2608455	IdentifierDeclType	int		2608374	0					
ANR	2608456	Identifier	ret		2608374	1					
ANR	2608457	IfStatement	if ( s -> state == MIG_STATE_ACTIVE )		2608374	7					
ANR	2608458	Condition	s -> state == MIG_STATE_ACTIVE	21:8:379:406	2608374	0	True				
ANR	2608459	EqualityExpression	s -> state == MIG_STATE_ACTIVE		2608374	0		==			
ANR	2608460	PtrMemberAccess	s -> state		2608374	0					
ANR	2608461	Identifier	s		2608374	0					
ANR	2608462	Identifier	state		2608374	1					
ANR	2608463	Identifier	MIG_STATE_ACTIVE		2608374	1					
ANR	2608464	CompoundStatement		19:38:338:338	2608374	1					
ANR	2608465	ExpressionStatement	"monitor_printf ( mon , ""migration already in progress\\n"" )"	23:8:420:474	2608374	0	True				
ANR	2608466	CallExpression	"monitor_printf ( mon , ""migration already in progress\\n"" )"		2608374	0					
ANR	2608467	Callee	monitor_printf		2608374	0					
ANR	2608468	Identifier	monitor_printf		2608374	0					
ANR	2608469	ArgumentList	mon		2608374	1					
ANR	2608470	Argument	mon		2608374	0					
ANR	2608471	Identifier	mon		2608374	0					
ANR	2608472	Argument	"""migration already in progress\\n"""		2608374	1					
ANR	2608473	PrimaryExpression	"""migration already in progress\\n"""		2608374	0					
ANR	2608474	ReturnStatement	return - 1 ;	25:8:485:494	2608374	1	True				
ANR	2608475	UnaryOperationExpression	- 1		2608374	0					
ANR	2608476	UnaryOperator	-		2608374	0					
ANR	2608477	PrimaryExpression	1		2608374	1					
ANR	2608478	IfStatement	if ( qemu_savevm_state_blocked ( mon ) )		2608374	8					
ANR	2608479	Condition	qemu_savevm_state_blocked ( mon )	31:8:514:543	2608374	0	True				
ANR	2608480	CallExpression	qemu_savevm_state_blocked ( mon )		2608374	0					
ANR	2608481	Callee	qemu_savevm_state_blocked		2608374	0					
ANR	2608482	Identifier	qemu_savevm_state_blocked		2608374	0					
ANR	2608483	ArgumentList	mon		2608374	1					
ANR	2608484	Argument	mon		2608374	0					
ANR	2608485	Identifier	mon		2608374	0					
ANR	2608486	CompoundStatement		29:40:475:475	2608374	1					
ANR	2608487	ReturnStatement	return - 1 ;	33:8:557:566	2608374	0	True				
ANR	2608488	UnaryOperationExpression	- 1		2608374	0					
ANR	2608489	UnaryOperator	-		2608374	0					
ANR	2608490	PrimaryExpression	1		2608374	1					
ANR	2608491	IfStatement	if ( migration_blockers )		2608374	9					
ANR	2608492	Condition	migration_blockers	39:8:586:603	2608374	0	True				
ANR	2608493	Identifier	migration_blockers		2608374	0					
ANR	2608494	CompoundStatement		39:8:546:583	2608374	1					
ANR	2608495	IdentifierDeclStatement	Error * err = migration_blockers -> data ;	41:8:617:654	2608374	0	True				
ANR	2608496	IdentifierDecl	* err = migration_blockers -> data		2608374	0					
ANR	2608497	IdentifierDeclType	Error *		2608374	0					
ANR	2608498	Identifier	err		2608374	1					
ANR	2608499	AssignmentExpression	* err = migration_blockers -> data		2608374	2		=			
ANR	2608500	Identifier	err		2608374	0					
ANR	2608501	PtrMemberAccess	migration_blockers -> data		2608374	1					
ANR	2608502	Identifier	migration_blockers		2608374	0					
ANR	2608503	Identifier	data		2608374	1					
ANR	2608504	ExpressionStatement	qerror_report_err ( err )	43:8:665:687	2608374	1	True				
ANR	2608505	CallExpression	qerror_report_err ( err )		2608374	0					
ANR	2608506	Callee	qerror_report_err		2608374	0					
ANR	2608507	Identifier	qerror_report_err		2608374	0					
ANR	2608508	ArgumentList	err		2608374	1					
ANR	2608509	Argument	err		2608374	0					
ANR	2608510	Identifier	err		2608374	0					
ANR	2608511	ReturnStatement	return - 1 ;	45:8:698:707	2608374	2	True				
ANR	2608512	UnaryOperationExpression	- 1		2608374	0					
ANR	2608513	UnaryOperator	-		2608374	0					
ANR	2608514	PrimaryExpression	1		2608374	1					
ANR	2608515	ExpressionStatement	"s = migrate_init ( mon , detach , blk , inc )"	51:4:723:762	2608374	10	True				
ANR	2608516	AssignmentExpression	"s = migrate_init ( mon , detach , blk , inc )"		2608374	0		=			
ANR	2608517	Identifier	s		2608374	0					
ANR	2608518	CallExpression	"migrate_init ( mon , detach , blk , inc )"		2608374	1					
ANR	2608519	Callee	migrate_init		2608374	0					
ANR	2608520	Identifier	migrate_init		2608374	0					
ANR	2608521	ArgumentList	mon		2608374	1					
ANR	2608522	Argument	mon		2608374	0					
ANR	2608523	Identifier	mon		2608374	0					
ANR	2608524	Argument	detach		2608374	1					
ANR	2608525	Identifier	detach		2608374	0					
ANR	2608526	Argument	blk		2608374	2					
ANR	2608527	Identifier	blk		2608374	0					
ANR	2608528	Argument	inc		2608374	3					
ANR	2608529	Identifier	inc		2608374	0					
ANR	2608530	IfStatement	"if ( strstart ( uri , ""tcp:"" , & p ) )"		2608374	11					
ANR	2608531	Condition	"strstart ( uri , ""tcp:"" , & p )"	55:8:775:799	2608374	0	True				
ANR	2608532	CallExpression	"strstart ( uri , ""tcp:"" , & p )"		2608374	0					
ANR	2608533	Callee	strstart		2608374	0					
ANR	2608534	Identifier	strstart		2608374	0					
ANR	2608535	ArgumentList	uri		2608374	1					
ANR	2608536	Argument	uri		2608374	0					
ANR	2608537	Identifier	uri		2608374	0					
ANR	2608538	Argument	"""tcp:"""		2608374	1					
ANR	2608539	PrimaryExpression	"""tcp:"""		2608374	0					
ANR	2608540	Argument	& p		2608374	2					
ANR	2608541	UnaryOperationExpression	& p		2608374	0					
ANR	2608542	UnaryOperator	&		2608374	0					
ANR	2608543	Identifier	p		2608374	1					
ANR	2608544	CompoundStatement		53:35:731:731	2608374	1					
ANR	2608545	ExpressionStatement	"ret = tcp_start_outgoing_migration ( s , p )"	57:8:813:853	2608374	0	True				
ANR	2608546	AssignmentExpression	"ret = tcp_start_outgoing_migration ( s , p )"		2608374	0		=			
ANR	2608547	Identifier	ret		2608374	0					
ANR	2608548	CallExpression	"tcp_start_outgoing_migration ( s , p )"		2608374	1					
ANR	2608549	Callee	tcp_start_outgoing_migration		2608374	0					
ANR	2608550	Identifier	tcp_start_outgoing_migration		2608374	0					
ANR	2608551	ArgumentList	s		2608374	1					
ANR	2608552	Argument	s		2608374	0					
ANR	2608553	Identifier	s		2608374	0					
ANR	2608554	Argument	p		2608374	1					
ANR	2608555	Identifier	p		2608374	0					
ANR	2608556	ElseStatement	else		2608374	0					
ANR	2608557	IfStatement	"if ( strstart ( uri , ""exec:"" , & p ) )"		2608374	0					
ANR	2608558	Condition	"strstart ( uri , ""exec:"" , & p )"	61:15:892:917	2608374	0	True				
ANR	2608559	CallExpression	"strstart ( uri , ""exec:"" , & p )"		2608374	0					
ANR	2608560	Callee	strstart		2608374	0					
ANR	2608561	Identifier	strstart		2608374	0					
ANR	2608562	ArgumentList	uri		2608374	1					
ANR	2608563	Argument	uri		2608374	0					
ANR	2608564	Identifier	uri		2608374	0					
ANR	2608565	Argument	"""exec:"""		2608374	1					
ANR	2608566	PrimaryExpression	"""exec:"""		2608374	0					
ANR	2608567	Argument	& p		2608374	2					
ANR	2608568	UnaryOperationExpression	& p		2608374	0					
ANR	2608569	UnaryOperator	&		2608374	0					
ANR	2608570	Identifier	p		2608374	1					
ANR	2608571	CompoundStatement		59:43:849:849	2608374	1					
ANR	2608572	ExpressionStatement	"ret = exec_start_outgoing_migration ( s , p )"	63:8:931:972	2608374	0	True				
ANR	2608573	AssignmentExpression	"ret = exec_start_outgoing_migration ( s , p )"		2608374	0		=			
ANR	2608574	Identifier	ret		2608374	0					
ANR	2608575	CallExpression	"exec_start_outgoing_migration ( s , p )"		2608374	1					
ANR	2608576	Callee	exec_start_outgoing_migration		2608374	0					
ANR	2608577	Identifier	exec_start_outgoing_migration		2608374	0					
ANR	2608578	ArgumentList	s		2608374	1					
ANR	2608579	Argument	s		2608374	0					
ANR	2608580	Identifier	s		2608374	0					
ANR	2608581	Argument	p		2608374	1					
ANR	2608582	Identifier	p		2608374	0					
ANR	2608583	ElseStatement	else		2608374	0					
ANR	2608584	IfStatement	"if ( strstart ( uri , ""unix:"" , & p ) )"		2608374	0					
ANR	2608585	Condition	"strstart ( uri , ""unix:"" , & p )"	65:15:990:1015	2608374	0	True				
ANR	2608586	CallExpression	"strstart ( uri , ""unix:"" , & p )"		2608374	0					
ANR	2608587	Callee	strstart		2608374	0					
ANR	2608588	Identifier	strstart		2608374	0					
ANR	2608589	ArgumentList	uri		2608374	1					
ANR	2608590	Argument	uri		2608374	0					
ANR	2608591	Identifier	uri		2608374	0					
ANR	2608592	Argument	"""unix:"""		2608374	1					
ANR	2608593	PrimaryExpression	"""unix:"""		2608374	0					
ANR	2608594	Argument	& p		2608374	2					
ANR	2608595	UnaryOperationExpression	& p		2608374	0					
ANR	2608596	UnaryOperator	&		2608374	0					
ANR	2608597	Identifier	p		2608374	1					
ANR	2608598	CompoundStatement		63:43:947:947	2608374	1					
ANR	2608599	ExpressionStatement	"ret = unix_start_outgoing_migration ( s , p )"	67:8:1029:1070	2608374	0	True				
ANR	2608600	AssignmentExpression	"ret = unix_start_outgoing_migration ( s , p )"		2608374	0		=			
ANR	2608601	Identifier	ret		2608374	0					
ANR	2608602	CallExpression	"unix_start_outgoing_migration ( s , p )"		2608374	1					
ANR	2608603	Callee	unix_start_outgoing_migration		2608374	0					
ANR	2608604	Identifier	unix_start_outgoing_migration		2608374	0					
ANR	2608605	ArgumentList	s		2608374	1					
ANR	2608606	Argument	s		2608374	0					
ANR	2608607	Identifier	s		2608374	0					
ANR	2608608	Argument	p		2608374	1					
ANR	2608609	Identifier	p		2608374	0					
ANR	2608610	ElseStatement	else		2608374	0					
ANR	2608611	IfStatement	"if ( strstart ( uri , ""fd:"" , & p ) )"		2608374	0					
ANR	2608612	Condition	"strstart ( uri , ""fd:"" , & p )"	69:15:1088:1111	2608374	0	True				
ANR	2608613	CallExpression	"strstart ( uri , ""fd:"" , & p )"		2608374	0					
ANR	2608614	Callee	strstart		2608374	0					
ANR	2608615	Identifier	strstart		2608374	0					
ANR	2608616	ArgumentList	uri		2608374	1					
ANR	2608617	Argument	uri		2608374	0					
ANR	2608618	Identifier	uri		2608374	0					
ANR	2608619	Argument	"""fd:"""		2608374	1					
ANR	2608620	PrimaryExpression	"""fd:"""		2608374	0					
ANR	2608621	Argument	& p		2608374	2					
ANR	2608622	UnaryOperationExpression	& p		2608374	0					
ANR	2608623	UnaryOperator	&		2608374	0					
ANR	2608624	Identifier	p		2608374	1					
ANR	2608625	CompoundStatement		67:41:1043:1043	2608374	1					
ANR	2608626	ExpressionStatement	"ret = fd_start_outgoing_migration ( s , p )"	71:8:1125:1164	2608374	0	True				
ANR	2608627	AssignmentExpression	"ret = fd_start_outgoing_migration ( s , p )"		2608374	0		=			
ANR	2608628	Identifier	ret		2608374	0					
ANR	2608629	CallExpression	"fd_start_outgoing_migration ( s , p )"		2608374	1					
ANR	2608630	Callee	fd_start_outgoing_migration		2608374	0					
ANR	2608631	Identifier	fd_start_outgoing_migration		2608374	0					
ANR	2608632	ArgumentList	s		2608374	1					
ANR	2608633	Argument	s		2608374	0					
ANR	2608634	Identifier	s		2608374	0					
ANR	2608635	Argument	p		2608374	1					
ANR	2608636	Identifier	p		2608374	0					
ANR	2608637	ElseStatement	else		2608374	0					
ANR	2608638	CompoundStatement		73:11:1115:1115	2608374	0					
ANR	2608639	ExpressionStatement	"monitor_printf ( mon , ""unknown migration protocol: %s\\n"" , uri )"	77:8:1197:1257	2608374	0	True				
ANR	2608640	CallExpression	"monitor_printf ( mon , ""unknown migration protocol: %s\\n"" , uri )"		2608374	0					
ANR	2608641	Callee	monitor_printf		2608374	0					
ANR	2608642	Identifier	monitor_printf		2608374	0					
ANR	2608643	ArgumentList	mon		2608374	1					
ANR	2608644	Argument	mon		2608374	0					
ANR	2608645	Identifier	mon		2608374	0					
ANR	2608646	Argument	"""unknown migration protocol: %s\\n"""		2608374	1					
ANR	2608647	PrimaryExpression	"""unknown migration protocol: %s\\n"""		2608374	0					
ANR	2608648	Argument	uri		2608374	2					
ANR	2608649	Identifier	uri		2608374	0					
ANR	2608650	ExpressionStatement	ret = - EINVAL	79:8:1268:1282	2608374	1	True				
ANR	2608651	AssignmentExpression	ret = - EINVAL		2608374	0		=			
ANR	2608652	Identifier	ret		2608374	0					
ANR	2608653	UnaryOperationExpression	- EINVAL		2608374	1					
ANR	2608654	UnaryOperator	-		2608374	0					
ANR	2608655	Identifier	EINVAL		2608374	1					
ANR	2608656	IfStatement	if ( ret < 0 )		2608374	12					
ANR	2608657	Condition	ret < 0	85:8:1302:1308	2608374	0	True				
ANR	2608658	RelationalExpression	ret < 0		2608374	0		<			
ANR	2608659	Identifier	ret		2608374	0					
ANR	2608660	PrimaryExpression	0		2608374	1					
ANR	2608661	CompoundStatement		83:17:1240:1240	2608374	1					
ANR	2608662	ExpressionStatement	"monitor_printf ( mon , ""migration failed: %s\\n"" , strerror ( - ret ) )"	87:8:1322:1383	2608374	0	True				
ANR	2608663	CallExpression	"monitor_printf ( mon , ""migration failed: %s\\n"" , strerror ( - ret ) )"		2608374	0					
ANR	2608664	Callee	monitor_printf		2608374	0					
ANR	2608665	Identifier	monitor_printf		2608374	0					
ANR	2608666	ArgumentList	mon		2608374	1					
ANR	2608667	Argument	mon		2608374	0					
ANR	2608668	Identifier	mon		2608374	0					
ANR	2608669	Argument	"""migration failed: %s\\n"""		2608374	1					
ANR	2608670	PrimaryExpression	"""migration failed: %s\\n"""		2608374	0					
ANR	2608671	Argument	strerror ( - ret )		2608374	2					
ANR	2608672	CallExpression	strerror ( - ret )		2608374	0					
ANR	2608673	Callee	strerror		2608374	0					
ANR	2608674	Identifier	strerror		2608374	0					
ANR	2608675	ArgumentList	- ret		2608374	1					
ANR	2608676	Argument	- ret		2608374	0					
ANR	2608677	UnaryOperationExpression	- ret		2608374	0					
ANR	2608678	UnaryOperator	-		2608374	0					
ANR	2608679	Identifier	ret		2608374	1					
ANR	2608680	ReturnStatement	return ret ;	89:8:1394:1404	2608374	1	True				
ANR	2608681	Identifier	ret		2608374	0					
ANR	2608682	IfStatement	if ( detach )		2608374	13					
ANR	2608683	Condition	detach	95:8:1424:1429	2608374	0	True				
ANR	2608684	Identifier	detach		2608374	0					
ANR	2608685	CompoundStatement		93:16:1361:1361	2608374	1					
ANR	2608686	ExpressionStatement	s -> mon = NULL	97:8:1443:1456	2608374	0	True				
ANR	2608687	AssignmentExpression	s -> mon = NULL		2608374	0		=			
ANR	2608688	PtrMemberAccess	s -> mon		2608374	0					
ANR	2608689	Identifier	s		2608374	0					
ANR	2608690	Identifier	mon		2608374	1					
ANR	2608691	Identifier	NULL		2608374	1					
ANR	2608692	ExpressionStatement	"notifier_list_notify ( & migration_state_notifiers , s )"	103:4:1472:1523	2608374	14	True				
ANR	2608693	CallExpression	"notifier_list_notify ( & migration_state_notifiers , s )"		2608374	0					
ANR	2608694	Callee	notifier_list_notify		2608374	0					
ANR	2608695	Identifier	notifier_list_notify		2608374	0					
ANR	2608696	ArgumentList	& migration_state_notifiers		2608374	1					
ANR	2608697	Argument	& migration_state_notifiers		2608374	0					
ANR	2608698	UnaryOperationExpression	& migration_state_notifiers		2608374	0					
ANR	2608699	UnaryOperator	&		2608374	0					
ANR	2608700	Identifier	migration_state_notifiers		2608374	1					
ANR	2608701	Argument	s		2608374	1					
ANR	2608702	Identifier	s		2608374	0					
ANR	2608703	ReturnStatement	return 0 ;	105:4:1530:1538	2608374	15	True				
ANR	2608704	PrimaryExpression	0		2608374	0					
ANR	2608705	ReturnType	int		2608374	1					
ANR	2608706	Identifier	do_migrate		2608374	2					
ANR	2608707	ParameterList	"Monitor * mon , const QDict * qdict , QObject * * ret_data"		2608374	3					
ANR	2608708	Parameter	Monitor * mon	1:15:15:26	2608374	0	True				
ANR	2608709	ParameterType	Monitor *		2608374	0					
ANR	2608710	Identifier	mon		2608374	1					
ANR	2608711	Parameter	const QDict * qdict	1:29:29:46	2608374	1	True				
ANR	2608712	ParameterType	const QDict *		2608374	0					
ANR	2608713	Identifier	qdict		2608374	1					
ANR	2608714	Parameter	QObject * * ret_data	1:49:49:66	2608374	2	True				
ANR	2608715	ParameterType	QObject * *		2608374	0					
ANR	2608716	Identifier	ret_data		2608374	1					
ANR	2608717	CFGEntryNode	ENTRY		2608374		True				
ANR	2608718	CFGExitNode	EXIT		2608374		True				
ANR	2608719	Symbol	qdict		2608374						
ANR	2608720	Symbol	tcp_start_outgoing_migration		2608374						
ANR	2608721	Symbol	migrate_init		2608374						
ANR	2608722	Symbol	fd_start_outgoing_migration		2608374						
ANR	2608723	Symbol	& migration_state_notifiers		2608374						
ANR	2608724	Symbol	mon		2608374						
ANR	2608725	Symbol	* migration_blockers		2608374						
ANR	2608726	Symbol	qdict_get_try_bool		2608374						
ANR	2608727	Symbol	exec_start_outgoing_migration		2608374						
ANR	2608728	Symbol	migrate_get_current		2608374						
ANR	2608729	Symbol	s -> mon		2608374						
ANR	2608730	Symbol	MIG_STATE_ACTIVE		2608374						
ANR	2608731	Symbol	strstart		2608374						
ANR	2608732	Symbol	inc		2608374						
ANR	2608733	Symbol	blk		2608374						
ANR	2608734	Symbol	ret		2608374						
ANR	2608735	Symbol	NULL		2608374						
ANR	2608736	Symbol	err		2608374						
ANR	2608737	Symbol	s -> state		2608374						
ANR	2608738	Symbol	migration_blockers -> data		2608374						
ANR	2608739	Symbol	qemu_savevm_state_blocked		2608374						
ANR	2608740	Symbol	uri		2608374						
ANR	2608741	Symbol	unix_start_outgoing_migration		2608374						
ANR	2608742	Symbol	p		2608374						
ANR	2608743	Symbol	EINVAL		2608374						
ANR	2608744	Symbol	strerror		2608374						
ANR	2608745	Symbol	s		2608374						
ANR	2608746	Symbol	& p		2608374						
ANR	2608747	Symbol	detach		2608374						
ANR	2608748	Symbol	qdict_get_str		2608374						
ANR	2608749	Symbol	* s		2608374						
ANR	2608750	Symbol	migration_blockers		2608374						
ANR	2608751	Symbol	ret_data		2608374						
