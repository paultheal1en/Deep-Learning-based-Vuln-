command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6302039	File	/home/p4ultr4n/workplace/ReVeal/raw_code/parse_1.c								
ANR	6302040	Function	parse	1:0:0:2394							
ANR	6302041	FunctionDef	"parse (AVCodecParserContext * ctx , AVCodecContext * avctx , const uint8_t * * out_data , int * out_size , const uint8_t * data , int size)"		6302040	0					
ANR	6302042	CompoundStatement		9:0:194:2394	6302040	0					
ANR	6302043	IdentifierDeclStatement	VP9ParseContext * s = ctx -> priv_data ;	11:4:201:236	6302040	0	True				
ANR	6302044	IdentifierDecl	* s = ctx -> priv_data		6302040	0					
ANR	6302045	IdentifierDeclType	VP9ParseContext *		6302040	0					
ANR	6302046	Identifier	s		6302040	1					
ANR	6302047	AssignmentExpression	* s = ctx -> priv_data		6302040	2		=			
ANR	6302048	Identifier	s		6302040	0					
ANR	6302049	PtrMemberAccess	ctx -> priv_data		6302040	1					
ANR	6302050	Identifier	ctx		6302040	0					
ANR	6302051	Identifier	priv_data		6302040	1					
ANR	6302052	IdentifierDeclStatement	int full_size = size ;	13:4:243:263	6302040	1	True				
ANR	6302053	IdentifierDecl	full_size = size		6302040	0					
ANR	6302054	IdentifierDeclType	int		6302040	0					
ANR	6302055	Identifier	full_size		6302040	1					
ANR	6302056	AssignmentExpression	full_size = size		6302040	2		=			
ANR	6302057	Identifier	size		6302040	0					
ANR	6302058	Identifier	size		6302040	1					
ANR	6302059	IdentifierDeclStatement	int marker ;	15:4:270:280	6302040	2	True				
ANR	6302060	IdentifierDecl	marker		6302040	0					
ANR	6302061	IdentifierDeclType	int		6302040	0					
ANR	6302062	Identifier	marker		6302040	1					
ANR	6302063	IfStatement	if ( size <= 0 )		6302040	3					
ANR	6302064	Condition	size <= 0	19:8:293:301	6302040	0	True				
ANR	6302065	RelationalExpression	size <= 0		6302040	0		<=			
ANR	6302066	Identifier	size		6302040	0					
ANR	6302067	PrimaryExpression	0		6302040	1					
ANR	6302068	CompoundStatement		11:19:109:109	6302040	1					
ANR	6302069	ExpressionStatement	* out_size = 0	21:8:315:328	6302040	0	True				
ANR	6302070	AssignmentExpression	* out_size = 0		6302040	0		=			
ANR	6302071	UnaryOperationExpression	* out_size		6302040	0					
ANR	6302072	UnaryOperator	*		6302040	0					
ANR	6302073	Identifier	out_size		6302040	1					
ANR	6302074	PrimaryExpression	0		6302040	1					
ANR	6302075	ExpressionStatement	* out_data = data	23:8:339:355	6302040	1	True				
ANR	6302076	AssignmentExpression	* out_data = data		6302040	0		=			
ANR	6302077	UnaryOperationExpression	* out_data		6302040	0					
ANR	6302078	UnaryOperator	*		6302040	0					
ANR	6302079	Identifier	out_data		6302040	1					
ANR	6302080	Identifier	data		6302040	1					
ANR	6302081	ReturnStatement	return 0 ;	27:8:368:376	6302040	2	True				
ANR	6302082	PrimaryExpression	0		6302040	0					
ANR	6302083	IfStatement	if ( s -> n_frames > 0 )		6302040	4					
ANR	6302084	Condition	s -> n_frames > 0	33:8:396:410	6302040	0	True				
ANR	6302085	RelationalExpression	s -> n_frames > 0		6302040	0		>			
ANR	6302086	PtrMemberAccess	s -> n_frames		6302040	0					
ANR	6302087	Identifier	s		6302040	0					
ANR	6302088	Identifier	n_frames		6302040	1					
ANR	6302089	PrimaryExpression	0		6302040	1					
ANR	6302090	CompoundStatement		25:25:218:218	6302040	1					
ANR	6302091	ExpressionStatement	* out_data = data	35:8:424:440	6302040	0	True				
ANR	6302092	AssignmentExpression	* out_data = data		6302040	0		=			
ANR	6302093	UnaryOperationExpression	* out_data		6302040	0					
ANR	6302094	UnaryOperator	*		6302040	0					
ANR	6302095	Identifier	out_data		6302040	1					
ANR	6302096	Identifier	data		6302040	1					
ANR	6302097	ExpressionStatement	* out_size = s -> size [ -- s -> n_frames ]	37:8:451:485	6302040	1	True				
ANR	6302098	AssignmentExpression	* out_size = s -> size [ -- s -> n_frames ]		6302040	0		=			
ANR	6302099	UnaryOperationExpression	* out_size		6302040	0					
ANR	6302100	UnaryOperator	*		6302040	0					
ANR	6302101	Identifier	out_size		6302040	1					
ANR	6302102	ArrayIndexing	s -> size [ -- s -> n_frames ]		6302040	1					
ANR	6302103	PtrMemberAccess	s -> size		6302040	0					
ANR	6302104	Identifier	s		6302040	0					
ANR	6302105	Identifier	size		6302040	1					
ANR	6302106	UnaryExpression	-- s -> n_frames		6302040	1					
ANR	6302107	IncDec	--		6302040	0					
ANR	6302108	PtrMemberAccess	s -> n_frames		6302040	1					
ANR	6302109	Identifier	s		6302040	0					
ANR	6302110	Identifier	n_frames		6302040	1					
ANR	6302111	ExpressionStatement	"parse_frame ( ctx , * out_data , * out_size )"	39:8:496:534	6302040	2	True				
ANR	6302112	CallExpression	"parse_frame ( ctx , * out_data , * out_size )"		6302040	0					
ANR	6302113	Callee	parse_frame		6302040	0					
ANR	6302114	Identifier	parse_frame		6302040	0					
ANR	6302115	ArgumentList	ctx		6302040	1					
ANR	6302116	Argument	ctx		6302040	0					
ANR	6302117	Identifier	ctx		6302040	0					
ANR	6302118	Argument	* out_data		6302040	1					
ANR	6302119	UnaryOperationExpression	* out_data		6302040	0					
ANR	6302120	UnaryOperator	*		6302040	0					
ANR	6302121	Identifier	out_data		6302040	1					
ANR	6302122	Argument	* out_size		6302040	2					
ANR	6302123	UnaryOperationExpression	* out_size		6302040	0					
ANR	6302124	UnaryOperator	*		6302040	0					
ANR	6302125	Identifier	out_size		6302040	1					
ANR	6302126	ReturnStatement	return s -> n_frames > 0 ? * out_size : size ;	43:8:547:616	6302040	3	True				
ANR	6302127	ConditionalExpression	s -> n_frames > 0 ? * out_size : size		6302040	0					
ANR	6302128	Condition	s -> n_frames > 0		6302040	0					
ANR	6302129	RelationalExpression	s -> n_frames > 0		6302040	0		>			
ANR	6302130	PtrMemberAccess	s -> n_frames		6302040	0					
ANR	6302131	Identifier	s		6302040	0					
ANR	6302132	Identifier	n_frames		6302040	1					
ANR	6302133	PrimaryExpression	0		6302040	1					
ANR	6302134	UnaryOperationExpression	* out_size		6302040	1					
ANR	6302135	UnaryOperator	*		6302040	0					
ANR	6302136	Identifier	out_size		6302040	1					
ANR	6302137	Identifier	size		6302040	2					
ANR	6302138	ExpressionStatement	marker = data [ size - 1 ]	49:4:632:655	6302040	5	True				
ANR	6302139	AssignmentExpression	marker = data [ size - 1 ]		6302040	0		=			
ANR	6302140	Identifier	marker		6302040	0					
ANR	6302141	ArrayIndexing	data [ size - 1 ]		6302040	1					
ANR	6302142	Identifier	data		6302040	0					
ANR	6302143	AdditiveExpression	size - 1		6302040	1		-			
ANR	6302144	Identifier	size		6302040	0					
ANR	6302145	PrimaryExpression	1		6302040	1					
ANR	6302146	IfStatement	if ( ( marker & 0xe0 ) == 0xc0 )		6302040	6					
ANR	6302147	Condition	( marker & 0xe0 ) == 0xc0	51:8:666:688	6302040	0	True				
ANR	6302148	EqualityExpression	( marker & 0xe0 ) == 0xc0		6302040	0		==			
ANR	6302149	BitAndExpression	marker & 0xe0		6302040	0		&			
ANR	6302150	Identifier	marker		6302040	0					
ANR	6302151	PrimaryExpression	0xe0		6302040	1					
ANR	6302152	PrimaryExpression	0xc0		6302040	1					
ANR	6302153	CompoundStatement		47:8:556:621	6302040	1					
ANR	6302154	IdentifierDeclStatement	int nbytes = 1 + ( ( marker >> 3 ) & 0x3 ) ;	53:8:702:740	6302040	0	True				
ANR	6302155	IdentifierDecl	nbytes = 1 + ( ( marker >> 3 ) & 0x3 )		6302040	0					
ANR	6302156	IdentifierDeclType	int		6302040	0					
ANR	6302157	Identifier	nbytes		6302040	1					
ANR	6302158	AssignmentExpression	nbytes = 1 + ( ( marker >> 3 ) & 0x3 )		6302040	2		=			
ANR	6302159	Identifier	nbytes		6302040	0					
ANR	6302160	AdditiveExpression	1 + ( ( marker >> 3 ) & 0x3 )		6302040	1		+			
ANR	6302161	PrimaryExpression	1		6302040	0					
ANR	6302162	BitAndExpression	( marker >> 3 ) & 0x3		6302040	1		&			
ANR	6302163	ShiftExpression	marker >> 3		6302040	0		>>			
ANR	6302164	Identifier	marker		6302040	0					
ANR	6302165	PrimaryExpression	3		6302040	1					
ANR	6302166	PrimaryExpression	0x3		6302040	1					
ANR	6302167	IdentifierDeclStatement	"int n_frames = 1 + ( marker & 0x7 ) , idx_sz = 2 + n_frames * nbytes ;"	55:8:751:816	6302040	1	True				
ANR	6302168	IdentifierDecl	n_frames = 1 + ( marker & 0x7 )		6302040	0					
ANR	6302169	IdentifierDeclType	int		6302040	0					
ANR	6302170	Identifier	n_frames		6302040	1					
ANR	6302171	AssignmentExpression	n_frames = 1 + ( marker & 0x7 )		6302040	2		=			
ANR	6302172	Identifier	n_frames		6302040	0					
ANR	6302173	AdditiveExpression	1 + ( marker & 0x7 )		6302040	1		+			
ANR	6302174	PrimaryExpression	1		6302040	0					
ANR	6302175	BitAndExpression	marker & 0x7		6302040	1		&			
ANR	6302176	Identifier	marker		6302040	0					
ANR	6302177	PrimaryExpression	0x7		6302040	1					
ANR	6302178	IdentifierDecl	idx_sz = 2 + n_frames * nbytes		6302040	1					
ANR	6302179	IdentifierDeclType	int		6302040	0					
ANR	6302180	Identifier	idx_sz		6302040	1					
ANR	6302181	AssignmentExpression	idx_sz = 2 + n_frames * nbytes		6302040	2		=			
ANR	6302182	Identifier	idx_sz		6302040	0					
ANR	6302183	AdditiveExpression	2 + n_frames * nbytes		6302040	1		+			
ANR	6302184	PrimaryExpression	2		6302040	0					
ANR	6302185	MultiplicativeExpression	n_frames * nbytes		6302040	1		*			
ANR	6302186	Identifier	n_frames		6302040	0					
ANR	6302187	Identifier	nbytes		6302040	1					
ANR	6302188	IfStatement	if ( size >= idx_sz && data [ size - idx_sz ] == marker )		6302040	2					
ANR	6302189	Condition	size >= idx_sz && data [ size - idx_sz ] == marker	59:12:833:879	6302040	0	True				
ANR	6302190	AndExpression	size >= idx_sz && data [ size - idx_sz ] == marker		6302040	0		&&			
ANR	6302191	RelationalExpression	size >= idx_sz		6302040	0		>=			
ANR	6302192	Identifier	size		6302040	0					
ANR	6302193	Identifier	idx_sz		6302040	1					
ANR	6302194	EqualityExpression	data [ size - idx_sz ] == marker		6302040	1		==			
ANR	6302195	ArrayIndexing	data [ size - idx_sz ]		6302040	0					
ANR	6302196	Identifier	data		6302040	0					
ANR	6302197	AdditiveExpression	size - idx_sz		6302040	1		-			
ANR	6302198	Identifier	size		6302040	0					
ANR	6302199	Identifier	idx_sz		6302040	1					
ANR	6302200	Identifier	marker		6302040	1					
ANR	6302201	CompoundStatement		55:12:762:775	6302040	1					
ANR	6302202	IdentifierDeclStatement	const uint8_t * idx = data + size + 1 - idx_sz ;	61:12:897:942	6302040	0	True				
ANR	6302203	IdentifierDecl	* idx = data + size + 1 - idx_sz		6302040	0					
ANR	6302204	IdentifierDeclType	const uint8_t *		6302040	0					
ANR	6302205	Identifier	idx		6302040	1					
ANR	6302206	AssignmentExpression	* idx = data + size + 1 - idx_sz		6302040	2		=			
ANR	6302207	Identifier	idx		6302040	0					
ANR	6302208	AdditiveExpression	data + size + 1 - idx_sz		6302040	1		+			
ANR	6302209	Identifier	data		6302040	0					
ANR	6302210	AdditiveExpression	size + 1 - idx_sz		6302040	1		+			
ANR	6302211	Identifier	size		6302040	0					
ANR	6302212	AdditiveExpression	1 - idx_sz		6302040	1		-			
ANR	6302213	PrimaryExpression	1		6302040	0					
ANR	6302214	Identifier	idx_sz		6302040	1					
ANR	6302215	IdentifierDeclStatement	int first = 1 ;	63:12:957:970	6302040	1	True				
ANR	6302216	IdentifierDecl	first = 1		6302040	0					
ANR	6302217	IdentifierDeclType	int		6302040	0					
ANR	6302218	Identifier	first		6302040	1					
ANR	6302219	AssignmentExpression	first = 1		6302040	2		=			
ANR	6302220	Identifier	first		6302040	0					
ANR	6302221	PrimaryExpression	1		6302040	1					
ANR	6302222	SwitchStatement	switch ( nbytes )		6302040	2					
ANR	6302223	Condition	nbytes	67:20:995:1000	6302040	0	True				
ANR	6302224	Identifier	nbytes		6302040	0					
ANR	6302225	CompoundStatement		113:24:1891:1934	6302040	1					
ANR	6302226	Statement	define	69:1:1007:1012	6302040	0	True				
ANR	6302227	Statement	case_n	69:8:1014:1019	6302040	1	True				
ANR	6302228	Statement	(	69:14:1020:1020	6302040	2	True				
ANR	6302229	Statement	a	69:15:1021:1021	6302040	3	True				
ANR	6302230	Statement	","	69:16:1022:1022	6302040	4	True				
ANR	6302231	Statement	rd	69:18:1024:1025	6302040	5	True				
ANR	6302232	Statement	)	69:20:1026:1026	6302040	6	True				
ANR	6302233	Label	case a :	71:12:1043:1049	6302040	7	True				
ANR	6302234	Identifier	a		6302040	0					
ANR	6302235	WhileStatement	while ( n_frames -- )		6302040	8					
ANR	6302236	Condition	n_frames --	73:23:1077:1086	6302040	0	True				
ANR	6302237	PostIncDecOperationExpression	n_frames --		6302040	0					
ANR	6302238	Identifier	n_frames		6302040	0					
ANR	6302239	IncDec	--		6302040	1					
ANR	6302240	CompoundStatement		67:20:919:935	6302040	1					
ANR	6302241	IdentifierDeclStatement	unsigned sz = rd ;	75:20:1114:1130	6302040	0	True				
ANR	6302242	IdentifierDecl	sz = rd		6302040	0					
ANR	6302243	IdentifierDeclType	unsigned		6302040	0					
ANR	6302244	Identifier	sz		6302040	1					
ANR	6302245	AssignmentExpression	sz = rd		6302040	2		=			
ANR	6302246	Identifier	rd		6302040	0					
ANR	6302247	Identifier	rd		6302040	1					
ANR	6302248	ExpressionStatement	idx += a	77:20:1155:1163	6302040	1	True				
ANR	6302249	AssignmentExpression	idx += a		6302040	0		+=			
ANR	6302250	Identifier	idx		6302040	0					
ANR	6302251	Identifier	a		6302040	1					
ANR	6302252	IfStatement	if ( sz > size )		6302040	2					
ANR	6302253	Condition	sz > size	79:24:1192:1200	6302040	0	True				
ANR	6302254	RelationalExpression	sz > size		6302040	0		>			
ANR	6302255	Identifier	sz		6302040	0					
ANR	6302256	Identifier	size		6302040	1					
ANR	6302257	CompoundStatement		71:35:1008:1008	6302040	1					
ANR	6302258	ExpressionStatement	s -> n_frames = 0	81:24:1232:1247	6302040	0	True				
ANR	6302259	AssignmentExpression	s -> n_frames = 0		6302040	0		=			
ANR	6302260	PtrMemberAccess	s -> n_frames		6302040	0					
ANR	6302261	Identifier	s		6302040	0					
ANR	6302262	Identifier	n_frames		6302040	1					
ANR	6302263	PrimaryExpression	0		6302040	1					
ANR	6302264	ExpressionStatement	* out_size = size	83:24:1276:1292	6302040	1	True				
ANR	6302265	AssignmentExpression	* out_size = size		6302040	0		=			
ANR	6302266	UnaryOperationExpression	* out_size		6302040	0					
ANR	6302267	UnaryOperator	*		6302040	0					
ANR	6302268	Identifier	out_size		6302040	1					
ANR	6302269	Identifier	size		6302040	1					
ANR	6302270	ExpressionStatement	* out_data = data	85:24:1321:1337	6302040	2	True				
ANR	6302271	AssignmentExpression	* out_data = data		6302040	0		=			
ANR	6302272	UnaryOperationExpression	* out_data		6302040	0					
ANR	6302273	UnaryOperator	*		6302040	0					
ANR	6302274	Identifier	out_data		6302040	1					
ANR	6302275	Identifier	data		6302040	1					
ANR	6302276	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Superframe packet size too big: %u > %d\\n"" , sz , size )"	87:24:1366:1516	6302040	3	True				
ANR	6302277	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Superframe packet size too big: %u > %d\\n"" , sz , size )"		6302040	0					
ANR	6302278	Callee	av_log		6302040	0					
ANR	6302279	Identifier	av_log		6302040	0					
ANR	6302280	ArgumentList	avctx		6302040	1					
ANR	6302281	Argument	avctx		6302040	0					
ANR	6302282	Identifier	avctx		6302040	0					
ANR	6302283	Argument	AV_LOG_ERROR		6302040	1					
ANR	6302284	Identifier	AV_LOG_ERROR		6302040	0					
ANR	6302285	Argument	"""Superframe packet size too big: %u > %d\\n"""		6302040	2					
ANR	6302286	PrimaryExpression	"""Superframe packet size too big: %u > %d\\n"""		6302040	0					
ANR	6302287	Argument	sz		6302040	3					
ANR	6302288	Identifier	sz		6302040	0					
ANR	6302289	Argument	size		6302040	4					
ANR	6302290	Identifier	size		6302040	0					
ANR	6302291	ReturnStatement	return full_size ;	93:24:1545:1561	6302040	4	True				
ANR	6302292	Identifier	full_size		6302040	0					
ANR	6302293	IfStatement	if ( first )		6302040	3					
ANR	6302294	Condition	first	97:24:1615:1619	6302040	0	True				
ANR	6302295	Identifier	first		6302040	0					
ANR	6302296	CompoundStatement		89:31:1427:1427	6302040	1					
ANR	6302297	ExpressionStatement	first = 0	99:24:1651:1660	6302040	0	True				
ANR	6302298	AssignmentExpression	first = 0		6302040	0		=			
ANR	6302299	Identifier	first		6302040	0					
ANR	6302300	PrimaryExpression	0		6302040	1					
ANR	6302301	ExpressionStatement	* out_data = data	101:24:1689:1705	6302040	1	True				
ANR	6302302	AssignmentExpression	* out_data = data		6302040	0		=			
ANR	6302303	UnaryOperationExpression	* out_data		6302040	0					
ANR	6302304	UnaryOperator	*		6302040	0					
ANR	6302305	Identifier	out_data		6302040	1					
ANR	6302306	Identifier	data		6302040	1					
ANR	6302307	ExpressionStatement	* out_size = sz	103:24:1734:1748	6302040	2	True				
ANR	6302308	AssignmentExpression	* out_size = sz		6302040	0		=			
ANR	6302309	UnaryOperationExpression	* out_size		6302040	0					
ANR	6302310	UnaryOperator	*		6302040	0					
ANR	6302311	Identifier	out_size		6302040	1					
ANR	6302312	Identifier	sz		6302040	1					
ANR	6302313	ExpressionStatement	s -> n_frames = n_frames	105:24:1777:1799	6302040	3	True				
ANR	6302314	AssignmentExpression	s -> n_frames = n_frames		6302040	0		=			
ANR	6302315	PtrMemberAccess	s -> n_frames		6302040	0					
ANR	6302316	Identifier	s		6302040	0					
ANR	6302317	Identifier	n_frames		6302040	1					
ANR	6302318	Identifier	n_frames		6302040	1					
ANR	6302319	ElseStatement	else		6302040	0					
ANR	6302320	CompoundStatement		99:27:1636:1636	6302040	0					
ANR	6302321	ExpressionStatement	s -> size [ n_frames ] = sz	109:24:1860:1882	6302040	0	True				
ANR	6302322	AssignmentExpression	s -> size [ n_frames ] = sz		6302040	0		=			
ANR	6302323	ArrayIndexing	s -> size [ n_frames ]		6302040	0					
ANR	6302324	PtrMemberAccess	s -> size		6302040	0					
ANR	6302325	Identifier	s		6302040	0					
ANR	6302326	Identifier	size		6302040	1					
ANR	6302327	Identifier	n_frames		6302040	1					
ANR	6302328	Identifier	sz		6302040	1					
ANR	6302329	ExpressionStatement	data += sz	113:20:1932:1942	6302040	4	True				
ANR	6302330	AssignmentExpression	data += sz		6302040	0		+=			
ANR	6302331	Identifier	data		6302040	0					
ANR	6302332	Identifier	sz		6302040	1					
ANR	6302333	ExpressionStatement	size -= sz	115:20:1967:1977	6302040	5	True				
ANR	6302334	AssignmentExpression	size -= sz		6302040	0		-=			
ANR	6302335	Identifier	size		6302040	0					
ANR	6302336	Identifier	sz		6302040	1					
ANR	6302337	ExpressionStatement	"parse_frame ( ctx , * out_data , * out_size )"	119:16:2019:2057	6302040	9	True				
ANR	6302338	CallExpression	"parse_frame ( ctx , * out_data , * out_size )"		6302040	0					
ANR	6302339	Callee	parse_frame		6302040	0					
ANR	6302340	Identifier	parse_frame		6302040	0					
ANR	6302341	ArgumentList	ctx		6302040	1					
ANR	6302342	Argument	ctx		6302040	0					
ANR	6302343	Identifier	ctx		6302040	0					
ANR	6302344	Argument	* out_data		6302040	1					
ANR	6302345	UnaryOperationExpression	* out_data		6302040	0					
ANR	6302346	UnaryOperator	*		6302040	0					
ANR	6302347	Identifier	out_data		6302040	1					
ANR	6302348	Argument	* out_size		6302040	2					
ANR	6302349	UnaryOperationExpression	* out_size		6302040	0					
ANR	6302350	UnaryOperator	*		6302040	0					
ANR	6302351	Identifier	out_size		6302040	1					
ANR	6302352	Statement	return	121:16:2078:2083	6302040	10	True				
ANR	6302353	Statement	*	121:23:2085:2085	6302040	11	True				
ANR	6302354	IdentifierDeclStatement	"out_size case_n ( 1 , * idx ) ;"	121:24:2086:2129	6302040	12	True				
ANR	6302355	IdentifierDecl	"case_n ( 1 , * idx )"		6302040	0					
ANR	6302356	IdentifierDeclType	out_size		6302040	0					
ANR	6302357	Identifier	case_n		6302040	1					
ANR	6302358	Expression	"1 , * idx"		6302040	2					
ANR	6302359	PrimaryExpression	1		6302040	0					
ANR	6302360	UnaryOperationExpression	* idx		6302040	1					
ANR	6302361	UnaryOperator	*		6302040	0					
ANR	6302362	Identifier	idx		6302040	1					
ANR	6302363	ExpressionStatement	"case_n ( 2 , AV_RL16 ( idx ) )"	127:16:2148:2171	6302040	13	True				
ANR	6302364	CallExpression	"case_n ( 2 , AV_RL16 ( idx ) )"		6302040	0					
ANR	6302365	Callee	case_n		6302040	0					
ANR	6302366	Identifier	case_n		6302040	0					
ANR	6302367	ArgumentList	2		6302040	1					
ANR	6302368	Argument	2		6302040	0					
ANR	6302369	PrimaryExpression	2		6302040	0					
ANR	6302370	Argument	AV_RL16 ( idx )		6302040	1					
ANR	6302371	CallExpression	AV_RL16 ( idx )		6302040	0					
ANR	6302372	Callee	AV_RL16		6302040	0					
ANR	6302373	Identifier	AV_RL16		6302040	0					
ANR	6302374	ArgumentList	idx		6302040	1					
ANR	6302375	Argument	idx		6302040	0					
ANR	6302376	Identifier	idx		6302040	0					
ANR	6302377	ExpressionStatement	"case_n ( 3 , AV_RL24 ( idx ) )"	129:16:2190:2213	6302040	14	True				
ANR	6302378	CallExpression	"case_n ( 3 , AV_RL24 ( idx ) )"		6302040	0					
ANR	6302379	Callee	case_n		6302040	0					
ANR	6302380	Identifier	case_n		6302040	0					
ANR	6302381	ArgumentList	3		6302040	1					
ANR	6302382	Argument	3		6302040	0					
ANR	6302383	PrimaryExpression	3		6302040	0					
ANR	6302384	Argument	AV_RL24 ( idx )		6302040	1					
ANR	6302385	CallExpression	AV_RL24 ( idx )		6302040	0					
ANR	6302386	Callee	AV_RL24		6302040	0					
ANR	6302387	Identifier	AV_RL24		6302040	0					
ANR	6302388	ArgumentList	idx		6302040	1					
ANR	6302389	Argument	idx		6302040	0					
ANR	6302390	Identifier	idx		6302040	0					
ANR	6302391	ExpressionStatement	"case_n ( 4 , AV_RL32 ( idx ) )"	131:16:2232:2255	6302040	15	True				
ANR	6302392	CallExpression	"case_n ( 4 , AV_RL32 ( idx ) )"		6302040	0					
ANR	6302393	Callee	case_n		6302040	0					
ANR	6302394	Identifier	case_n		6302040	0					
ANR	6302395	ArgumentList	4		6302040	1					
ANR	6302396	Argument	4		6302040	0					
ANR	6302397	PrimaryExpression	4		6302040	0					
ANR	6302398	Argument	AV_RL32 ( idx )		6302040	1					
ANR	6302399	CallExpression	AV_RL32 ( idx )		6302040	0					
ANR	6302400	Callee	AV_RL32		6302040	0					
ANR	6302401	Identifier	AV_RL32		6302040	0					
ANR	6302402	ArgumentList	idx		6302040	1					
ANR	6302403	Argument	idx		6302040	0					
ANR	6302404	Identifier	idx		6302040	0					
ANR	6302405	ExpressionStatement	* out_data = data	141:4:2297:2313	6302040	7	True				
ANR	6302406	AssignmentExpression	* out_data = data		6302040	0		=			
ANR	6302407	UnaryOperationExpression	* out_data		6302040	0					
ANR	6302408	UnaryOperator	*		6302040	0					
ANR	6302409	Identifier	out_data		6302040	1					
ANR	6302410	Identifier	data		6302040	1					
ANR	6302411	ExpressionStatement	* out_size = size	143:4:2320:2336	6302040	8	True				
ANR	6302412	AssignmentExpression	* out_size = size		6302040	0		=			
ANR	6302413	UnaryOperationExpression	* out_size		6302040	0					
ANR	6302414	UnaryOperator	*		6302040	0					
ANR	6302415	Identifier	out_size		6302040	1					
ANR	6302416	Identifier	size		6302040	1					
ANR	6302417	ExpressionStatement	"parse_frame ( ctx , data , size )"	145:4:2343:2371	6302040	9	True				
ANR	6302418	CallExpression	"parse_frame ( ctx , data , size )"		6302040	0					
ANR	6302419	Callee	parse_frame		6302040	0					
ANR	6302420	Identifier	parse_frame		6302040	0					
ANR	6302421	ArgumentList	ctx		6302040	1					
ANR	6302422	Argument	ctx		6302040	0					
ANR	6302423	Identifier	ctx		6302040	0					
ANR	6302424	Argument	data		6302040	1					
ANR	6302425	Identifier	data		6302040	0					
ANR	6302426	Argument	size		6302040	2					
ANR	6302427	Identifier	size		6302040	0					
ANR	6302428	ReturnStatement	return size ;	149:4:2380:2391	6302040	10	True				
ANR	6302429	Identifier	size		6302040	0					
ANR	6302430	ReturnType	static int		6302040	1					
ANR	6302431	Identifier	parse		6302040	2					
ANR	6302432	ParameterList	"AVCodecParserContext * ctx , AVCodecContext * avctx , const uint8_t * * out_data , int * out_size , const uint8_t * data , int size"		6302040	3					
ANR	6302433	Parameter	AVCodecParserContext * ctx	1:17:17:41	6302040	0	True				
ANR	6302434	ParameterType	AVCodecParserContext *		6302040	0					
ANR	6302435	Identifier	ctx		6302040	1					
ANR	6302436	Parameter	AVCodecContext * avctx	3:17:62:82	6302040	1	True				
ANR	6302437	ParameterType	AVCodecContext *		6302040	0					
ANR	6302438	Identifier	avctx		6302040	1					
ANR	6302439	Parameter	const uint8_t * * out_data	5:17:103:126	6302040	2	True				
ANR	6302440	ParameterType	const uint8_t * *		6302040	0					
ANR	6302441	Identifier	out_data		6302040	1					
ANR	6302442	Parameter	int * out_size	5:43:129:141	6302040	3	True				
ANR	6302443	ParameterType	int *		6302040	0					
ANR	6302444	Identifier	out_size		6302040	1					
ANR	6302445	Parameter	const uint8_t * data	7:17:162:180	6302040	4	True				
ANR	6302446	ParameterType	const uint8_t *		6302040	0					
ANR	6302447	Identifier	data		6302040	1					
ANR	6302448	Parameter	int size	7:38:183:190	6302040	5	True				
ANR	6302449	ParameterType	int		6302040	0					
ANR	6302450	Identifier	size		6302040	1					
ANR	6302451	CFGEntryNode	ENTRY		6302040		True				
ANR	6302452	CFGExitNode	EXIT		6302040		True				
ANR	6302453	Symbol	* idx_sz		6302040						
ANR	6302454	Symbol	s -> size		6302040						
ANR	6302455	Symbol	* n_frames		6302040						
ANR	6302456	Symbol	data		6302040						
ANR	6302457	Symbol	* s -> n_frames		6302040						
ANR	6302458	Symbol	ctx -> priv_data		6302040						
ANR	6302459	Symbol	out_data		6302040						
ANR	6302460	Symbol	idx_sz		6302040						
ANR	6302461	Symbol	* out_size		6302040						
ANR	6302462	Symbol	AV_RL24		6302040						
ANR	6302463	Symbol	* size		6302040						
ANR	6302464	Symbol	* * s		6302040						
ANR	6302465	Symbol	avctx		6302040						
ANR	6302466	Symbol	* out_data		6302040						
ANR	6302467	Symbol	a		6302040						
ANR	6302468	Symbol	case_n		6302040						
ANR	6302469	Symbol	n_frames		6302040						
ANR	6302470	Symbol	AV_LOG_ERROR		6302040						
ANR	6302471	Symbol	ctx		6302040						
ANR	6302472	Symbol	sz		6302040						
ANR	6302473	Symbol	out_size		6302040						
ANR	6302474	Symbol	* ctx		6302040						
ANR	6302475	Symbol	nbytes		6302040						
ANR	6302476	Symbol	rd		6302040						
ANR	6302477	Symbol	s		6302040						
ANR	6302478	Symbol	size		6302040						
ANR	6302479	Symbol	AV_RL32		6302040						
ANR	6302480	Symbol	marker		6302040						
ANR	6302481	Symbol	s -> n_frames		6302040						
ANR	6302482	Symbol	* s -> size		6302040						
ANR	6302483	Symbol	full_size		6302040						
ANR	6302484	Symbol	idx		6302040						
ANR	6302485	Symbol	* s		6302040						
ANR	6302486	Symbol	* data		6302040						
ANR	6302487	Symbol	first		6302040						
ANR	6302488	Symbol	AV_RL16		6302040						
