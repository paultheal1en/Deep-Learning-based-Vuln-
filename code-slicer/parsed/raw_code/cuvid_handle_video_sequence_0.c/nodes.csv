command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1609336	File	/home/p4ultr4n/workplace/ReVeal/raw_code/cuvid_handle_video_sequence_0.c								
ANR	1609337	Function	cuvid_handle_video_sequence	1:0:0:6719							
ANR	1609338	FunctionDef	"cuvid_handle_video_sequence (void * opaque , CUVIDEOFORMAT * format)"		1609337	0					
ANR	1609339	CompoundStatement		3:0:85:6719	1609337	0					
ANR	1609340	IdentifierDeclStatement	AVCodecContext * avctx = opaque ;	5:4:92:122	1609337	0	True				
ANR	1609341	IdentifierDecl	* avctx = opaque		1609337	0					
ANR	1609342	IdentifierDeclType	AVCodecContext *		1609337	0					
ANR	1609343	Identifier	avctx		1609337	1					
ANR	1609344	AssignmentExpression	* avctx = opaque		1609337	2		=			
ANR	1609345	Identifier	opaque		1609337	0					
ANR	1609346	Identifier	opaque		1609337	1					
ANR	1609347	IdentifierDeclStatement	CuvidContext * ctx = avctx -> priv_data ;	7:4:129:165	1609337	1	True				
ANR	1609348	IdentifierDecl	* ctx = avctx -> priv_data		1609337	0					
ANR	1609349	IdentifierDeclType	CuvidContext *		1609337	0					
ANR	1609350	Identifier	ctx		1609337	1					
ANR	1609351	AssignmentExpression	* ctx = avctx -> priv_data		1609337	2		=			
ANR	1609352	Identifier	ctx		1609337	0					
ANR	1609353	PtrMemberAccess	avctx -> priv_data		1609337	1					
ANR	1609354	Identifier	avctx		1609337	0					
ANR	1609355	Identifier	priv_data		1609337	1					
ANR	1609356	IdentifierDeclStatement	AVHWFramesContext * hwframe_ctx = ( AVHWFramesContext * ) ctx -> hwframe -> data ;	9:4:172:243	1609337	2	True				
ANR	1609357	IdentifierDecl	* hwframe_ctx = ( AVHWFramesContext * ) ctx -> hwframe -> data		1609337	0					
ANR	1609358	IdentifierDeclType	AVHWFramesContext *		1609337	0					
ANR	1609359	Identifier	hwframe_ctx		1609337	1					
ANR	1609360	AssignmentExpression	* hwframe_ctx = ( AVHWFramesContext * ) ctx -> hwframe -> data		1609337	2		=			
ANR	1609361	Identifier	hwframe_ctx		1609337	0					
ANR	1609362	CastExpression	( AVHWFramesContext * ) ctx -> hwframe -> data		1609337	1					
ANR	1609363	CastTarget	AVHWFramesContext *		1609337	0					
ANR	1609364	PtrMemberAccess	ctx -> hwframe -> data		1609337	1					
ANR	1609365	PtrMemberAccess	ctx -> hwframe		1609337	0					
ANR	1609366	Identifier	ctx		1609337	0					
ANR	1609367	Identifier	hwframe		1609337	1					
ANR	1609368	Identifier	data		1609337	1					
ANR	1609369	IdentifierDeclStatement	CUVIDDECODECREATEINFO cuinfo ;	11:4:250:278	1609337	3	True				
ANR	1609370	IdentifierDecl	cuinfo		1609337	0					
ANR	1609371	IdentifierDeclType	CUVIDDECODECREATEINFO		1609337	0					
ANR	1609372	Identifier	cuinfo		1609337	1					
ANR	1609373	IdentifierDeclStatement	int surface_fmt ;	13:4:285:300	1609337	4	True				
ANR	1609374	IdentifierDecl	surface_fmt		1609337	0					
ANR	1609375	IdentifierDeclType	int		1609337	0					
ANR	1609376	Identifier	surface_fmt		1609337	1					
ANR	1609377	IdentifierDeclStatement	"enum AVPixelFormat pix_fmts [ 3 ] = { AV_PIX_FMT_CUDA , AV_PIX_FMT_NONE , AV_PIX_FMT_NONE } ;"	17:4:309:501	1609337	5	True				
ANR	1609378	IdentifierDecl	"pix_fmts [ 3 ] = { AV_PIX_FMT_CUDA , AV_PIX_FMT_NONE , AV_PIX_FMT_NONE }"		1609337	0					
ANR	1609379	IdentifierDeclType	enum AVPixelFormat [ 3 ]		1609337	0					
ANR	1609380	Identifier	pix_fmts		1609337	1					
ANR	1609381	PrimaryExpression	3		1609337	2					
ANR	1609382	AssignmentExpression	"pix_fmts [ 3 ] = { AV_PIX_FMT_CUDA , AV_PIX_FMT_NONE , AV_PIX_FMT_NONE }"		1609337	3		=			
ANR	1609383	Identifier	pix_fmts		1609337	0					
ANR	1609384	InitializerList	AV_PIX_FMT_CUDA		1609337	1					
ANR	1609385	Identifier	AV_PIX_FMT_CUDA		1609337	0					
ANR	1609386	Identifier	AV_PIX_FMT_NONE		1609337	1					
ANR	1609387	Identifier	AV_PIX_FMT_NONE		1609337	2					
ANR	1609388	ExpressionStatement	"av_log ( avctx , AV_LOG_TRACE , ""pfnSequenceCallback, progressive_sequence=%d\\n"" , format -> progressive_sequence )"	25:4:510:617	1609337	6	True				
ANR	1609389	CallExpression	"av_log ( avctx , AV_LOG_TRACE , ""pfnSequenceCallback, progressive_sequence=%d\\n"" , format -> progressive_sequence )"		1609337	0					
ANR	1609390	Callee	av_log		1609337	0					
ANR	1609391	Identifier	av_log		1609337	0					
ANR	1609392	ArgumentList	avctx		1609337	1					
ANR	1609393	Argument	avctx		1609337	0					
ANR	1609394	Identifier	avctx		1609337	0					
ANR	1609395	Argument	AV_LOG_TRACE		1609337	1					
ANR	1609396	Identifier	AV_LOG_TRACE		1609337	0					
ANR	1609397	Argument	"""pfnSequenceCallback, progressive_sequence=%d\\n"""		1609337	2					
ANR	1609398	PrimaryExpression	"""pfnSequenceCallback, progressive_sequence=%d\\n"""		1609337	0					
ANR	1609399	Argument	format -> progressive_sequence		1609337	3					
ANR	1609400	PtrMemberAccess	format -> progressive_sequence		1609337	0					
ANR	1609401	Identifier	format		1609337	0					
ANR	1609402	Identifier	progressive_sequence		1609337	1					
ANR	1609403	ExpressionStatement	ctx -> internal_error = 0	29:4:626:649	1609337	7	True				
ANR	1609404	AssignmentExpression	ctx -> internal_error = 0		1609337	0		=			
ANR	1609405	PtrMemberAccess	ctx -> internal_error		1609337	0					
ANR	1609406	Identifier	ctx		1609337	0					
ANR	1609407	Identifier	internal_error		1609337	1					
ANR	1609408	PrimaryExpression	0		1609337	1					
ANR	1609409	SwitchStatement	switch ( format -> bit_depth_luma_minus8 )		1609337	8					
ANR	1609410	Condition	format -> bit_depth_luma_minus8	33:12:666:694	1609337	0	True				
ANR	1609411	PtrMemberAccess	format -> bit_depth_luma_minus8		1609337	0					
ANR	1609412	Identifier	format		1609337	0					
ANR	1609413	Identifier	bit_depth_luma_minus8		1609337	1					
ANR	1609414	CompoundStatement		31:43:611:611	1609337	1					
ANR	1609415	Label	case 0 :	35:4:704:710	1609337	0	True				
ANR	1609416	ExpressionStatement	pix_fmts [ 1 ] = AV_PIX_FMT_NV12	37:8:730:759	1609337	1	True				
ANR	1609417	AssignmentExpression	pix_fmts [ 1 ] = AV_PIX_FMT_NV12		1609337	0		=			
ANR	1609418	ArrayIndexing	pix_fmts [ 1 ]		1609337	0					
ANR	1609419	Identifier	pix_fmts		1609337	0					
ANR	1609420	PrimaryExpression	1		1609337	1					
ANR	1609421	Identifier	AV_PIX_FMT_NV12		1609337	1					
ANR	1609422	BreakStatement	break ;	39:8:770:775	1609337	2	True				
ANR	1609423	Label	case 2 :	41:4:782:788	1609337	3	True				
ANR	1609424	ExpressionStatement	pix_fmts [ 1 ] = AV_PIX_FMT_P010	43:8:809:838	1609337	4	True				
ANR	1609425	AssignmentExpression	pix_fmts [ 1 ] = AV_PIX_FMT_P010		1609337	0		=			
ANR	1609426	ArrayIndexing	pix_fmts [ 1 ]		1609337	0					
ANR	1609427	Identifier	pix_fmts		1609337	0					
ANR	1609428	PrimaryExpression	1		1609337	1					
ANR	1609429	Identifier	AV_PIX_FMT_P010		1609337	1					
ANR	1609430	BreakStatement	break ;	45:8:849:854	1609337	5	True				
ANR	1609431	Label	case 4 :	47:4:861:867	1609337	6	True				
ANR	1609432	ExpressionStatement	pix_fmts [ 1 ] = AV_PIX_FMT_P016	49:8:888:917	1609337	7	True				
ANR	1609433	AssignmentExpression	pix_fmts [ 1 ] = AV_PIX_FMT_P016		1609337	0		=			
ANR	1609434	ArrayIndexing	pix_fmts [ 1 ]		1609337	0					
ANR	1609435	Identifier	pix_fmts		1609337	0					
ANR	1609436	PrimaryExpression	1		1609337	1					
ANR	1609437	Identifier	AV_PIX_FMT_P016		1609337	1					
ANR	1609438	BreakStatement	break ;	51:8:928:933	1609337	8	True				
ANR	1609439	Label	default :	53:4:940:947	1609337	9	True				
ANR	1609440	Identifier	default		1609337	0					
ANR	1609441	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""unsupported bit depth: %d\\n"" , format -> bit_depth_luma_minus8 + 8 )"	55:8:958:1067	1609337	10	True				
ANR	1609442	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""unsupported bit depth: %d\\n"" , format -> bit_depth_luma_minus8 + 8 )"		1609337	0					
ANR	1609443	Callee	av_log		1609337	0					
ANR	1609444	Identifier	av_log		1609337	0					
ANR	1609445	ArgumentList	avctx		1609337	1					
ANR	1609446	Argument	avctx		1609337	0					
ANR	1609447	Identifier	avctx		1609337	0					
ANR	1609448	Argument	AV_LOG_ERROR		1609337	1					
ANR	1609449	Identifier	AV_LOG_ERROR		1609337	0					
ANR	1609450	Argument	"""unsupported bit depth: %d\\n"""		1609337	2					
ANR	1609451	PrimaryExpression	"""unsupported bit depth: %d\\n"""		1609337	0					
ANR	1609452	Argument	format -> bit_depth_luma_minus8 + 8		1609337	3					
ANR	1609453	AdditiveExpression	format -> bit_depth_luma_minus8 + 8		1609337	0		+			
ANR	1609454	PtrMemberAccess	format -> bit_depth_luma_minus8		1609337	0					
ANR	1609455	Identifier	format		1609337	0					
ANR	1609456	Identifier	bit_depth_luma_minus8		1609337	1					
ANR	1609457	PrimaryExpression	8		1609337	1					
ANR	1609458	ExpressionStatement	ctx -> internal_error = AVERROR ( EINVAL )	59:8:1078:1115	1609337	11	True				
ANR	1609459	AssignmentExpression	ctx -> internal_error = AVERROR ( EINVAL )		1609337	0		=			
ANR	1609460	PtrMemberAccess	ctx -> internal_error		1609337	0					
ANR	1609461	Identifier	ctx		1609337	0					
ANR	1609462	Identifier	internal_error		1609337	1					
ANR	1609463	CallExpression	AVERROR ( EINVAL )		1609337	1					
ANR	1609464	Callee	AVERROR		1609337	0					
ANR	1609465	Identifier	AVERROR		1609337	0					
ANR	1609466	ArgumentList	EINVAL		1609337	1					
ANR	1609467	Argument	EINVAL		1609337	0					
ANR	1609468	Identifier	EINVAL		1609337	0					
ANR	1609469	ReturnStatement	return 0 ;	61:8:1126:1134	1609337	12	True				
ANR	1609470	PrimaryExpression	0		1609337	0					
ANR	1609471	ExpressionStatement	"surface_fmt = ff_get_format ( avctx , pix_fmts )"	65:4:1148:1192	1609337	9	True				
ANR	1609472	AssignmentExpression	"surface_fmt = ff_get_format ( avctx , pix_fmts )"		1609337	0		=			
ANR	1609473	Identifier	surface_fmt		1609337	0					
ANR	1609474	CallExpression	"ff_get_format ( avctx , pix_fmts )"		1609337	1					
ANR	1609475	Callee	ff_get_format		1609337	0					
ANR	1609476	Identifier	ff_get_format		1609337	0					
ANR	1609477	ArgumentList	avctx		1609337	1					
ANR	1609478	Argument	avctx		1609337	0					
ANR	1609479	Identifier	avctx		1609337	0					
ANR	1609480	Argument	pix_fmts		1609337	1					
ANR	1609481	Identifier	pix_fmts		1609337	0					
ANR	1609482	IfStatement	if ( surface_fmt < 0 )		1609337	10					
ANR	1609483	Condition	surface_fmt < 0	67:8:1203:1217	1609337	0	True				
ANR	1609484	RelationalExpression	surface_fmt < 0		1609337	0		<			
ANR	1609485	Identifier	surface_fmt		1609337	0					
ANR	1609486	PrimaryExpression	0		1609337	1					
ANR	1609487	CompoundStatement		65:25:1134:1134	1609337	1					
ANR	1609488	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""ff_get_format failed: %d\\n"" , surface_fmt )"	69:8:1231:1301	1609337	0	True				
ANR	1609489	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""ff_get_format failed: %d\\n"" , surface_fmt )"		1609337	0					
ANR	1609490	Callee	av_log		1609337	0					
ANR	1609491	Identifier	av_log		1609337	0					
ANR	1609492	ArgumentList	avctx		1609337	1					
ANR	1609493	Argument	avctx		1609337	0					
ANR	1609494	Identifier	avctx		1609337	0					
ANR	1609495	Argument	AV_LOG_ERROR		1609337	1					
ANR	1609496	Identifier	AV_LOG_ERROR		1609337	0					
ANR	1609497	Argument	"""ff_get_format failed: %d\\n"""		1609337	2					
ANR	1609498	PrimaryExpression	"""ff_get_format failed: %d\\n"""		1609337	0					
ANR	1609499	Argument	surface_fmt		1609337	3					
ANR	1609500	Identifier	surface_fmt		1609337	0					
ANR	1609501	ExpressionStatement	ctx -> internal_error = AVERROR ( EINVAL )	71:8:1312:1349	1609337	1	True				
ANR	1609502	AssignmentExpression	ctx -> internal_error = AVERROR ( EINVAL )		1609337	0		=			
ANR	1609503	PtrMemberAccess	ctx -> internal_error		1609337	0					
ANR	1609504	Identifier	ctx		1609337	0					
ANR	1609505	Identifier	internal_error		1609337	1					
ANR	1609506	CallExpression	AVERROR ( EINVAL )		1609337	1					
ANR	1609507	Callee	AVERROR		1609337	0					
ANR	1609508	Identifier	AVERROR		1609337	0					
ANR	1609509	ArgumentList	EINVAL		1609337	1					
ANR	1609510	Argument	EINVAL		1609337	0					
ANR	1609511	Identifier	EINVAL		1609337	0					
ANR	1609512	ReturnStatement	return 0 ;	73:8:1360:1368	1609337	2	True				
ANR	1609513	PrimaryExpression	0		1609337	0					
ANR	1609514	ExpressionStatement	"av_log ( avctx , AV_LOG_VERBOSE , ""Formats: Original: %s | HW: %s | SW: %s\\n"" , av_get_pix_fmt_name ( avctx -> pix_fmt ) , av_get_pix_fmt_name ( surface_fmt ) , av_get_pix_fmt_name ( avctx -> sw_pix_fmt ) )"	79:4:1384:1605	1609337	11	True				
ANR	1609515	CallExpression	"av_log ( avctx , AV_LOG_VERBOSE , ""Formats: Original: %s | HW: %s | SW: %s\\n"" , av_get_pix_fmt_name ( avctx -> pix_fmt ) , av_get_pix_fmt_name ( surface_fmt ) , av_get_pix_fmt_name ( avctx -> sw_pix_fmt ) )"		1609337	0					
ANR	1609516	Callee	av_log		1609337	0					
ANR	1609517	Identifier	av_log		1609337	0					
ANR	1609518	ArgumentList	avctx		1609337	1					
ANR	1609519	Argument	avctx		1609337	0					
ANR	1609520	Identifier	avctx		1609337	0					
ANR	1609521	Argument	AV_LOG_VERBOSE		1609337	1					
ANR	1609522	Identifier	AV_LOG_VERBOSE		1609337	0					
ANR	1609523	Argument	"""Formats: Original: %s | HW: %s | SW: %s\\n"""		1609337	2					
ANR	1609524	PrimaryExpression	"""Formats: Original: %s | HW: %s | SW: %s\\n"""		1609337	0					
ANR	1609525	Argument	av_get_pix_fmt_name ( avctx -> pix_fmt )		1609337	3					
ANR	1609526	CallExpression	av_get_pix_fmt_name ( avctx -> pix_fmt )		1609337	0					
ANR	1609527	Callee	av_get_pix_fmt_name		1609337	0					
ANR	1609528	Identifier	av_get_pix_fmt_name		1609337	0					
ANR	1609529	ArgumentList	avctx -> pix_fmt		1609337	1					
ANR	1609530	Argument	avctx -> pix_fmt		1609337	0					
ANR	1609531	PtrMemberAccess	avctx -> pix_fmt		1609337	0					
ANR	1609532	Identifier	avctx		1609337	0					
ANR	1609533	Identifier	pix_fmt		1609337	1					
ANR	1609534	Argument	av_get_pix_fmt_name ( surface_fmt )		1609337	4					
ANR	1609535	CallExpression	av_get_pix_fmt_name ( surface_fmt )		1609337	0					
ANR	1609536	Callee	av_get_pix_fmt_name		1609337	0					
ANR	1609537	Identifier	av_get_pix_fmt_name		1609337	0					
ANR	1609538	ArgumentList	surface_fmt		1609337	1					
ANR	1609539	Argument	surface_fmt		1609337	0					
ANR	1609540	Identifier	surface_fmt		1609337	0					
ANR	1609541	Argument	av_get_pix_fmt_name ( avctx -> sw_pix_fmt )		1609337	5					
ANR	1609542	CallExpression	av_get_pix_fmt_name ( avctx -> sw_pix_fmt )		1609337	0					
ANR	1609543	Callee	av_get_pix_fmt_name		1609337	0					
ANR	1609544	Identifier	av_get_pix_fmt_name		1609337	0					
ANR	1609545	ArgumentList	avctx -> sw_pix_fmt		1609337	1					
ANR	1609546	Argument	avctx -> sw_pix_fmt		1609337	0					
ANR	1609547	PtrMemberAccess	avctx -> sw_pix_fmt		1609337	0					
ANR	1609548	Identifier	avctx		1609337	0					
ANR	1609549	Identifier	sw_pix_fmt		1609337	1					
ANR	1609550	ExpressionStatement	avctx -> pix_fmt = surface_fmt	89:4:1614:1642	1609337	12	True				
ANR	1609551	AssignmentExpression	avctx -> pix_fmt = surface_fmt		1609337	0		=			
ANR	1609552	PtrMemberAccess	avctx -> pix_fmt		1609337	0					
ANR	1609553	Identifier	avctx		1609337	0					
ANR	1609554	Identifier	pix_fmt		1609337	1					
ANR	1609555	Identifier	surface_fmt		1609337	1					
ANR	1609556	IfStatement	if ( avctx -> hw_frames_ctx )		1609337	13					
ANR	1609557	Condition	avctx -> hw_frames_ctx	95:8:1739:1758	1609337	0	True				
ANR	1609558	PtrMemberAccess	avctx -> hw_frames_ctx		1609337	0					
ANR	1609559	Identifier	avctx		1609337	0					
ANR	1609560	Identifier	hw_frames_ctx		1609337	1					
ANR	1609561	CompoundStatement		93:30:1675:1675	1609337	1					
ANR	1609562	ExpressionStatement	av_buffer_unref ( & ctx -> hwframe )	97:8:1772:1802	1609337	0	True				
ANR	1609563	CallExpression	av_buffer_unref ( & ctx -> hwframe )		1609337	0					
ANR	1609564	Callee	av_buffer_unref		1609337	0					
ANR	1609565	Identifier	av_buffer_unref		1609337	0					
ANR	1609566	ArgumentList	& ctx -> hwframe		1609337	1					
ANR	1609567	Argument	& ctx -> hwframe		1609337	0					
ANR	1609568	UnaryOperationExpression	& ctx -> hwframe		1609337	0					
ANR	1609569	UnaryOperator	&		1609337	0					
ANR	1609570	PtrMemberAccess	ctx -> hwframe		1609337	1					
ANR	1609571	Identifier	ctx		1609337	0					
ANR	1609572	Identifier	hwframe		1609337	1					
ANR	1609573	ExpressionStatement	ctx -> hwframe = av_buffer_ref ( avctx -> hw_frames_ctx )	101:8:1815:1865	1609337	1	True				
ANR	1609574	AssignmentExpression	ctx -> hwframe = av_buffer_ref ( avctx -> hw_frames_ctx )		1609337	0		=			
ANR	1609575	PtrMemberAccess	ctx -> hwframe		1609337	0					
ANR	1609576	Identifier	ctx		1609337	0					
ANR	1609577	Identifier	hwframe		1609337	1					
ANR	1609578	CallExpression	av_buffer_ref ( avctx -> hw_frames_ctx )		1609337	1					
ANR	1609579	Callee	av_buffer_ref		1609337	0					
ANR	1609580	Identifier	av_buffer_ref		1609337	0					
ANR	1609581	ArgumentList	avctx -> hw_frames_ctx		1609337	1					
ANR	1609582	Argument	avctx -> hw_frames_ctx		1609337	0					
ANR	1609583	PtrMemberAccess	avctx -> hw_frames_ctx		1609337	0					
ANR	1609584	Identifier	avctx		1609337	0					
ANR	1609585	Identifier	hw_frames_ctx		1609337	1					
ANR	1609586	IfStatement	if ( ! ctx -> hwframe )		1609337	2					
ANR	1609587	Condition	! ctx -> hwframe	103:12:1880:1892	1609337	0	True				
ANR	1609588	UnaryOperationExpression	! ctx -> hwframe		1609337	0					
ANR	1609589	UnaryOperator	!		1609337	0					
ANR	1609590	PtrMemberAccess	ctx -> hwframe		1609337	1					
ANR	1609591	Identifier	ctx		1609337	0					
ANR	1609592	Identifier	hwframe		1609337	1					
ANR	1609593	CompoundStatement		101:27:1809:1809	1609337	1					
ANR	1609594	ExpressionStatement	ctx -> internal_error = AVERROR ( ENOMEM )	105:12:1910:1947	1609337	0	True				
ANR	1609595	AssignmentExpression	ctx -> internal_error = AVERROR ( ENOMEM )		1609337	0		=			
ANR	1609596	PtrMemberAccess	ctx -> internal_error		1609337	0					
ANR	1609597	Identifier	ctx		1609337	0					
ANR	1609598	Identifier	internal_error		1609337	1					
ANR	1609599	CallExpression	AVERROR ( ENOMEM )		1609337	1					
ANR	1609600	Callee	AVERROR		1609337	0					
ANR	1609601	Identifier	AVERROR		1609337	0					
ANR	1609602	ArgumentList	ENOMEM		1609337	1					
ANR	1609603	Argument	ENOMEM		1609337	0					
ANR	1609604	Identifier	ENOMEM		1609337	0					
ANR	1609605	ReturnStatement	return 0 ;	107:12:1962:1970	1609337	1	True				
ANR	1609606	PrimaryExpression	0		1609337	0					
ANR	1609607	ExpressionStatement	hwframe_ctx = ( AVHWFramesContext * ) ctx -> hwframe -> data	113:8:1994:2046	1609337	3	True				
ANR	1609608	AssignmentExpression	hwframe_ctx = ( AVHWFramesContext * ) ctx -> hwframe -> data		1609337	0		=			
ANR	1609609	Identifier	hwframe_ctx		1609337	0					
ANR	1609610	CastExpression	( AVHWFramesContext * ) ctx -> hwframe -> data		1609337	1					
ANR	1609611	CastTarget	AVHWFramesContext *		1609337	0					
ANR	1609612	PtrMemberAccess	ctx -> hwframe -> data		1609337	1					
ANR	1609613	PtrMemberAccess	ctx -> hwframe		1609337	0					
ANR	1609614	Identifier	ctx		1609337	0					
ANR	1609615	Identifier	hwframe		1609337	1					
ANR	1609616	Identifier	data		1609337	1					
ANR	1609617	ExpressionStatement	avctx -> width = format -> display_area . right	119:4:2062:2103	1609337	14	True				
ANR	1609618	AssignmentExpression	avctx -> width = format -> display_area . right		1609337	0		=			
ANR	1609619	PtrMemberAccess	avctx -> width		1609337	0					
ANR	1609620	Identifier	avctx		1609337	0					
ANR	1609621	Identifier	width		1609337	1					
ANR	1609622	MemberAccess	format -> display_area . right		1609337	1					
ANR	1609623	PtrMemberAccess	format -> display_area		1609337	0					
ANR	1609624	Identifier	format		1609337	0					
ANR	1609625	Identifier	display_area		1609337	1					
ANR	1609626	Identifier	right		1609337	1					
ANR	1609627	ExpressionStatement	avctx -> height = format -> display_area . bottom	121:4:2110:2153	1609337	15	True				
ANR	1609628	AssignmentExpression	avctx -> height = format -> display_area . bottom		1609337	0		=			
ANR	1609629	PtrMemberAccess	avctx -> height		1609337	0					
ANR	1609630	Identifier	avctx		1609337	0					
ANR	1609631	Identifier	height		1609337	1					
ANR	1609632	MemberAccess	format -> display_area . bottom		1609337	1					
ANR	1609633	PtrMemberAccess	format -> display_area		1609337	0					
ANR	1609634	Identifier	format		1609337	0					
ANR	1609635	Identifier	display_area		1609337	1					
ANR	1609636	Identifier	bottom		1609337	1					
ANR	1609637	Statement	ff_set_sar	125:4:2162:2171	1609337	16	True				
ANR	1609638	Statement	(	125:14:2172:2172	1609337	17	True				
ANR	1609639	Statement	avctx	125:15:2173:2177	1609337	18	True				
ANR	1609640	Statement	","	125:20:2178:2178	1609337	19	True				
ANR	1609641	Statement	av_div_q	125:22:2180:2187	1609337	20	True				
ANR	1609642	Statement	(	125:30:2188:2188	1609337	21	True				
ANR	1609643	Statement	(	127:8:2199:2199	1609337	22	True				
ANR	1609644	Statement	AVRational	127:9:2200:2209	1609337	23	True				
ANR	1609645	Statement	)	127:19:2210:2210	1609337	24	True				
ANR	1609646	CompoundStatement		125:20:2125:2125	1609337	25					
ANR	1609647	Statement	format	127:22:2213:2218	1609337	0	True				
ANR	1609648	Statement	->	127:28:2219:2220	1609337	1	True				
ANR	1609649	Statement	display_aspect_ratio	127:30:2221:2240	1609337	2	True				
ANR	1609650	Statement	.	127:50:2241:2241	1609337	3	True				
ANR	1609651	Statement	x	127:51:2242:2242	1609337	4	True				
ANR	1609652	Statement	","	127:52:2243:2243	1609337	5	True				
ANR	1609653	Statement	format	127:54:2245:2250	1609337	6	True				
ANR	1609654	Statement	->	127:60:2251:2252	1609337	7	True				
ANR	1609655	Statement	display_aspect_ratio	127:62:2253:2272	1609337	8	True				
ANR	1609656	Statement	.	127:82:2273:2273	1609337	9	True				
ANR	1609657	Statement	y	127:83:2274:2274	1609337	10	True				
ANR	1609658	Statement	","	127:86:2277:2277	1609337	26	True				
ANR	1609659	Statement	(	129:8:2288:2288	1609337	27	True				
ANR	1609660	Statement	AVRational	129:9:2289:2298	1609337	28	True				
ANR	1609661	Statement	)	129:19:2299:2299	1609337	29	True				
ANR	1609662	CompoundStatement		127:20:2214:2214	1609337	30					
ANR	1609663	Statement	avctx	129:22:2302:2306	1609337	0	True				
ANR	1609664	Statement	->	129:27:2307:2308	1609337	1	True				
ANR	1609665	Statement	width	129:29:2309:2313	1609337	2	True				
ANR	1609666	Statement	","	129:34:2314:2314	1609337	3	True				
ANR	1609667	Statement	avctx	129:36:2316:2320	1609337	4	True				
ANR	1609668	Statement	->	129:41:2321:2322	1609337	5	True				
ANR	1609669	Statement	height	129:43:2323:2328	1609337	6	True				
ANR	1609670	Statement	)	129:51:2331:2331	1609337	31	True				
ANR	1609671	Statement	)	129:52:2332:2332	1609337	32	True				
ANR	1609672	ExpressionStatement		129:53:2333:2333	1609337	33	True				
ANR	1609673	IfStatement	if ( ! format -> progressive_sequence && ctx -> deint_mode == cudaVideoDeinterlaceMode_Weave )		1609337	34					
ANR	1609674	Condition	! format -> progressive_sequence && ctx -> deint_mode == cudaVideoDeinterlaceMode_Weave	133:8:2346:2427	1609337	0	True				
ANR	1609675	AndExpression	! format -> progressive_sequence && ctx -> deint_mode == cudaVideoDeinterlaceMode_Weave		1609337	0		&&			
ANR	1609676	UnaryOperationExpression	! format -> progressive_sequence		1609337	0					
ANR	1609677	UnaryOperator	!		1609337	0					
ANR	1609678	PtrMemberAccess	format -> progressive_sequence		1609337	1					
ANR	1609679	Identifier	format		1609337	0					
ANR	1609680	Identifier	progressive_sequence		1609337	1					
ANR	1609681	EqualityExpression	ctx -> deint_mode == cudaVideoDeinterlaceMode_Weave		1609337	1		==			
ANR	1609682	PtrMemberAccess	ctx -> deint_mode		1609337	0					
ANR	1609683	Identifier	ctx		1609337	0					
ANR	1609684	Identifier	deint_mode		1609337	1					
ANR	1609685	Identifier	cudaVideoDeinterlaceMode_Weave		1609337	1					
ANR	1609686	ExpressionStatement	avctx -> flags |= AV_CODEC_FLAG_INTERLACED_DCT	135:8:2439:2483	1609337	1	True				
ANR	1609687	AssignmentExpression	avctx -> flags |= AV_CODEC_FLAG_INTERLACED_DCT		1609337	0		|=			
ANR	1609688	PtrMemberAccess	avctx -> flags		1609337	0					
ANR	1609689	Identifier	avctx		1609337	0					
ANR	1609690	Identifier	flags		1609337	1					
ANR	1609691	Identifier	AV_CODEC_FLAG_INTERLACED_DCT		1609337	1					
ANR	1609692	ElseStatement	else		1609337	0					
ANR	1609693	ExpressionStatement	avctx -> flags &= ~AV_CODEC_FLAG_INTERLACED_DCT	139:8:2504:2549	1609337	0	True				
ANR	1609694	AssignmentExpression	avctx -> flags &= ~AV_CODEC_FLAG_INTERLACED_DCT		1609337	0		&=			
ANR	1609695	PtrMemberAccess	avctx -> flags		1609337	0					
ANR	1609696	Identifier	avctx		1609337	0					
ANR	1609697	Identifier	flags		1609337	1					
ANR	1609698	Identifier	~AV_CODEC_FLAG_INTERLACED_DCT		1609337	1					
ANR	1609699	IfStatement	if ( format -> video_signal_description . video_full_range_flag )		1609337	35					
ANR	1609700	Condition	format -> video_signal_description . video_full_range_flag	143:8:2562:2615	1609337	0	True				
ANR	1609701	MemberAccess	format -> video_signal_description . video_full_range_flag		1609337	0					
ANR	1609702	PtrMemberAccess	format -> video_signal_description		1609337	0					
ANR	1609703	Identifier	format		1609337	0					
ANR	1609704	Identifier	video_signal_description		1609337	1					
ANR	1609705	Identifier	video_full_range_flag		1609337	1					
ANR	1609706	ExpressionStatement	avctx -> color_range = AVCOL_RANGE_JPEG	145:8:2627:2664	1609337	1	True				
ANR	1609707	AssignmentExpression	avctx -> color_range = AVCOL_RANGE_JPEG		1609337	0		=			
ANR	1609708	PtrMemberAccess	avctx -> color_range		1609337	0					
ANR	1609709	Identifier	avctx		1609337	0					
ANR	1609710	Identifier	color_range		1609337	1					
ANR	1609711	Identifier	AVCOL_RANGE_JPEG		1609337	1					
ANR	1609712	ElseStatement	else		1609337	0					
ANR	1609713	ExpressionStatement	avctx -> color_range = AVCOL_RANGE_MPEG	149:8:2685:2722	1609337	0	True				
ANR	1609714	AssignmentExpression	avctx -> color_range = AVCOL_RANGE_MPEG		1609337	0		=			
ANR	1609715	PtrMemberAccess	avctx -> color_range		1609337	0					
ANR	1609716	Identifier	avctx		1609337	0					
ANR	1609717	Identifier	color_range		1609337	1					
ANR	1609718	Identifier	AVCOL_RANGE_MPEG		1609337	1					
ANR	1609719	ExpressionStatement	avctx -> color_primaries = format -> video_signal_description . color_primaries	153:4:2731:2804	1609337	36	True				
ANR	1609720	AssignmentExpression	avctx -> color_primaries = format -> video_signal_description . color_primaries		1609337	0		=			
ANR	1609721	PtrMemberAccess	avctx -> color_primaries		1609337	0					
ANR	1609722	Identifier	avctx		1609337	0					
ANR	1609723	Identifier	color_primaries		1609337	1					
ANR	1609724	MemberAccess	format -> video_signal_description . color_primaries		1609337	1					
ANR	1609725	PtrMemberAccess	format -> video_signal_description		1609337	0					
ANR	1609726	Identifier	format		1609337	0					
ANR	1609727	Identifier	video_signal_description		1609337	1					
ANR	1609728	Identifier	color_primaries		1609337	1					
ANR	1609729	ExpressionStatement	avctx -> color_trc = format -> video_signal_description . transfer_characteristics	155:4:2811:2887	1609337	37	True				
ANR	1609730	AssignmentExpression	avctx -> color_trc = format -> video_signal_description . transfer_characteristics		1609337	0		=			
ANR	1609731	PtrMemberAccess	avctx -> color_trc		1609337	0					
ANR	1609732	Identifier	avctx		1609337	0					
ANR	1609733	Identifier	color_trc		1609337	1					
ANR	1609734	MemberAccess	format -> video_signal_description . transfer_characteristics		1609337	1					
ANR	1609735	PtrMemberAccess	format -> video_signal_description		1609337	0					
ANR	1609736	Identifier	format		1609337	0					
ANR	1609737	Identifier	video_signal_description		1609337	1					
ANR	1609738	Identifier	transfer_characteristics		1609337	1					
ANR	1609739	ExpressionStatement	avctx -> colorspace = format -> video_signal_description . matrix_coefficients	157:4:2894:2966	1609337	38	True				
ANR	1609740	AssignmentExpression	avctx -> colorspace = format -> video_signal_description . matrix_coefficients		1609337	0		=			
ANR	1609741	PtrMemberAccess	avctx -> colorspace		1609337	0					
ANR	1609742	Identifier	avctx		1609337	0					
ANR	1609743	Identifier	colorspace		1609337	1					
ANR	1609744	MemberAccess	format -> video_signal_description . matrix_coefficients		1609337	1					
ANR	1609745	PtrMemberAccess	format -> video_signal_description		1609337	0					
ANR	1609746	Identifier	format		1609337	0					
ANR	1609747	Identifier	video_signal_description		1609337	1					
ANR	1609748	Identifier	matrix_coefficients		1609337	1					
ANR	1609749	IfStatement	if ( format -> bitrate )		1609337	39					
ANR	1609750	Condition	format -> bitrate	161:8:2979:2993	1609337	0	True				
ANR	1609751	PtrMemberAccess	format -> bitrate		1609337	0					
ANR	1609752	Identifier	format		1609337	0					
ANR	1609753	Identifier	bitrate		1609337	1					
ANR	1609754	ExpressionStatement	avctx -> bit_rate = format -> bitrate	163:8:3005:3038	1609337	1	True				
ANR	1609755	AssignmentExpression	avctx -> bit_rate = format -> bitrate		1609337	0		=			
ANR	1609756	PtrMemberAccess	avctx -> bit_rate		1609337	0					
ANR	1609757	Identifier	avctx		1609337	0					
ANR	1609758	Identifier	bit_rate		1609337	1					
ANR	1609759	PtrMemberAccess	format -> bitrate		1609337	1					
ANR	1609760	Identifier	format		1609337	0					
ANR	1609761	Identifier	bitrate		1609337	1					
ANR	1609762	IfStatement	if ( format -> frame_rate . numerator && format -> frame_rate . denominator )		1609337	40					
ANR	1609763	Condition	format -> frame_rate . numerator && format -> frame_rate . denominator	167:8:3051:3112	1609337	0	True				
ANR	1609764	AndExpression	format -> frame_rate . numerator && format -> frame_rate . denominator		1609337	0		&&			
ANR	1609765	MemberAccess	format -> frame_rate . numerator		1609337	0					
ANR	1609766	PtrMemberAccess	format -> frame_rate		1609337	0					
ANR	1609767	Identifier	format		1609337	0					
ANR	1609768	Identifier	frame_rate		1609337	1					
ANR	1609769	Identifier	numerator		1609337	1					
ANR	1609770	MemberAccess	format -> frame_rate . denominator		1609337	1					
ANR	1609771	PtrMemberAccess	format -> frame_rate		1609337	0					
ANR	1609772	Identifier	format		1609337	0					
ANR	1609773	Identifier	frame_rate		1609337	1					
ANR	1609774	Identifier	denominator		1609337	1					
ANR	1609775	CompoundStatement		165:72:3029:3029	1609337	1					
ANR	1609776	ExpressionStatement	avctx -> framerate . num = format -> frame_rate . numerator	169:8:3126:3177	1609337	0	True				
ANR	1609777	AssignmentExpression	avctx -> framerate . num = format -> frame_rate . numerator		1609337	0		=			
ANR	1609778	MemberAccess	avctx -> framerate . num		1609337	0					
ANR	1609779	PtrMemberAccess	avctx -> framerate		1609337	0					
ANR	1609780	Identifier	avctx		1609337	0					
ANR	1609781	Identifier	framerate		1609337	1					
ANR	1609782	Identifier	num		1609337	1					
ANR	1609783	MemberAccess	format -> frame_rate . numerator		1609337	1					
ANR	1609784	PtrMemberAccess	format -> frame_rate		1609337	0					
ANR	1609785	Identifier	format		1609337	0					
ANR	1609786	Identifier	frame_rate		1609337	1					
ANR	1609787	Identifier	numerator		1609337	1					
ANR	1609788	ExpressionStatement	avctx -> framerate . den = format -> frame_rate . denominator	171:8:3188:3241	1609337	1	True				
ANR	1609789	AssignmentExpression	avctx -> framerate . den = format -> frame_rate . denominator		1609337	0		=			
ANR	1609790	MemberAccess	avctx -> framerate . den		1609337	0					
ANR	1609791	PtrMemberAccess	avctx -> framerate		1609337	0					
ANR	1609792	Identifier	avctx		1609337	0					
ANR	1609793	Identifier	framerate		1609337	1					
ANR	1609794	Identifier	den		1609337	1					
ANR	1609795	MemberAccess	format -> frame_rate . denominator		1609337	1					
ANR	1609796	PtrMemberAccess	format -> frame_rate		1609337	0					
ANR	1609797	Identifier	format		1609337	0					
ANR	1609798	Identifier	frame_rate		1609337	1					
ANR	1609799	Identifier	denominator		1609337	1					
ANR	1609800	IfStatement	if ( ctx -> cudecoder && avctx -> coded_width == format -> coded_width && avctx -> coded_height == format -> coded_height && ctx -> chroma_format == format -> chroma_format && ctx -> codec_type == format -> codec )		1609337	41					
ANR	1609801	Condition	ctx -> cudecoder && avctx -> coded_width == format -> coded_width && avctx -> coded_height == format -> coded_height && ctx -> chroma_format == format -> chroma_format && ctx -> codec_type == format -> codec	177:8:3261:3501	1609337	0	True				
ANR	1609802	AndExpression	ctx -> cudecoder && avctx -> coded_width == format -> coded_width && avctx -> coded_height == format -> coded_height && ctx -> chroma_format == format -> chroma_format && ctx -> codec_type == format -> codec		1609337	0		&&			
ANR	1609803	PtrMemberAccess	ctx -> cudecoder		1609337	0					
ANR	1609804	Identifier	ctx		1609337	0					
ANR	1609805	Identifier	cudecoder		1609337	1					
ANR	1609806	AndExpression	avctx -> coded_width == format -> coded_width && avctx -> coded_height == format -> coded_height && ctx -> chroma_format == format -> chroma_format && ctx -> codec_type == format -> codec		1609337	1		&&			
ANR	1609807	EqualityExpression	avctx -> coded_width == format -> coded_width		1609337	0		==			
ANR	1609808	PtrMemberAccess	avctx -> coded_width		1609337	0					
ANR	1609809	Identifier	avctx		1609337	0					
ANR	1609810	Identifier	coded_width		1609337	1					
ANR	1609811	PtrMemberAccess	format -> coded_width		1609337	1					
ANR	1609812	Identifier	format		1609337	0					
ANR	1609813	Identifier	coded_width		1609337	1					
ANR	1609814	AndExpression	avctx -> coded_height == format -> coded_height && ctx -> chroma_format == format -> chroma_format && ctx -> codec_type == format -> codec		1609337	1		&&			
ANR	1609815	EqualityExpression	avctx -> coded_height == format -> coded_height		1609337	0		==			
ANR	1609816	PtrMemberAccess	avctx -> coded_height		1609337	0					
ANR	1609817	Identifier	avctx		1609337	0					
ANR	1609818	Identifier	coded_height		1609337	1					
ANR	1609819	PtrMemberAccess	format -> coded_height		1609337	1					
ANR	1609820	Identifier	format		1609337	0					
ANR	1609821	Identifier	coded_height		1609337	1					
ANR	1609822	AndExpression	ctx -> chroma_format == format -> chroma_format && ctx -> codec_type == format -> codec		1609337	1		&&			
ANR	1609823	EqualityExpression	ctx -> chroma_format == format -> chroma_format		1609337	0		==			
ANR	1609824	PtrMemberAccess	ctx -> chroma_format		1609337	0					
ANR	1609825	Identifier	ctx		1609337	0					
ANR	1609826	Identifier	chroma_format		1609337	1					
ANR	1609827	PtrMemberAccess	format -> chroma_format		1609337	1					
ANR	1609828	Identifier	format		1609337	0					
ANR	1609829	Identifier	chroma_format		1609337	1					
ANR	1609830	EqualityExpression	ctx -> codec_type == format -> codec		1609337	1		==			
ANR	1609831	PtrMemberAccess	ctx -> codec_type		1609337	0					
ANR	1609832	Identifier	ctx		1609337	0					
ANR	1609833	Identifier	codec_type		1609337	1					
ANR	1609834	PtrMemberAccess	format -> codec		1609337	1					
ANR	1609835	Identifier	format		1609337	0					
ANR	1609836	Identifier	codec		1609337	1					
ANR	1609837	ReturnStatement	return 1 ;	187:8:3513:3521	1609337	1	True				
ANR	1609838	PrimaryExpression	1		1609337	0					
ANR	1609839	IfStatement	if ( ctx -> cudecoder )		1609337	42					
ANR	1609840	Condition	ctx -> cudecoder	191:8:3534:3547	1609337	0	True				
ANR	1609841	PtrMemberAccess	ctx -> cudecoder		1609337	0					
ANR	1609842	Identifier	ctx		1609337	0					
ANR	1609843	Identifier	cudecoder		1609337	1					
ANR	1609844	CompoundStatement		189:24:3464:3464	1609337	1					
ANR	1609845	ExpressionStatement	"av_log ( avctx , AV_LOG_TRACE , ""Re-initializing decoder\\n"" )"	193:8:3561:3617	1609337	0	True				
ANR	1609846	CallExpression	"av_log ( avctx , AV_LOG_TRACE , ""Re-initializing decoder\\n"" )"		1609337	0					
ANR	1609847	Callee	av_log		1609337	0					
ANR	1609848	Identifier	av_log		1609337	0					
ANR	1609849	ArgumentList	avctx		1609337	1					
ANR	1609850	Argument	avctx		1609337	0					
ANR	1609851	Identifier	avctx		1609337	0					
ANR	1609852	Argument	AV_LOG_TRACE		1609337	1					
ANR	1609853	Identifier	AV_LOG_TRACE		1609337	0					
ANR	1609854	Argument	"""Re-initializing decoder\\n"""		1609337	2					
ANR	1609855	PrimaryExpression	"""Re-initializing decoder\\n"""		1609337	0					
ANR	1609856	ExpressionStatement	ctx -> internal_error = CHECK_CU ( ctx -> cvdl -> cuvidDestroyDecoder ( ctx -> cudecoder ) )	195:8:3628:3706	1609337	1	True				
ANR	1609857	AssignmentExpression	ctx -> internal_error = CHECK_CU ( ctx -> cvdl -> cuvidDestroyDecoder ( ctx -> cudecoder ) )		1609337	0		=			
ANR	1609858	PtrMemberAccess	ctx -> internal_error		1609337	0					
ANR	1609859	Identifier	ctx		1609337	0					
ANR	1609860	Identifier	internal_error		1609337	1					
ANR	1609861	CallExpression	CHECK_CU ( ctx -> cvdl -> cuvidDestroyDecoder ( ctx -> cudecoder ) )		1609337	1					
ANR	1609862	Callee	CHECK_CU		1609337	0					
ANR	1609863	Identifier	CHECK_CU		1609337	0					
ANR	1609864	ArgumentList	ctx -> cvdl -> cuvidDestroyDecoder ( ctx -> cudecoder )		1609337	1					
ANR	1609865	Argument	ctx -> cvdl -> cuvidDestroyDecoder ( ctx -> cudecoder )		1609337	0					
ANR	1609866	CallExpression	ctx -> cvdl -> cuvidDestroyDecoder ( ctx -> cudecoder )		1609337	0					
ANR	1609867	Callee	ctx -> cvdl -> cuvidDestroyDecoder		1609337	0					
ANR	1609868	PtrMemberAccess	ctx -> cvdl -> cuvidDestroyDecoder		1609337	0					
ANR	1609869	PtrMemberAccess	ctx -> cvdl		1609337	0					
ANR	1609870	Identifier	ctx		1609337	0					
ANR	1609871	Identifier	cvdl		1609337	1					
ANR	1609872	Identifier	cuvidDestroyDecoder		1609337	1					
ANR	1609873	ArgumentList	ctx -> cudecoder		1609337	1					
ANR	1609874	Argument	ctx -> cudecoder		1609337	0					
ANR	1609875	PtrMemberAccess	ctx -> cudecoder		1609337	0					
ANR	1609876	Identifier	ctx		1609337	0					
ANR	1609877	Identifier	cudecoder		1609337	1					
ANR	1609878	IfStatement	if ( ctx -> internal_error < 0 )		1609337	2					
ANR	1609879	Condition	ctx -> internal_error < 0	197:12:3721:3743	1609337	0	True				
ANR	1609880	RelationalExpression	ctx -> internal_error < 0		1609337	0		<			
ANR	1609881	PtrMemberAccess	ctx -> internal_error		1609337	0					
ANR	1609882	Identifier	ctx		1609337	0					
ANR	1609883	Identifier	internal_error		1609337	1					
ANR	1609884	PrimaryExpression	0		1609337	1					
ANR	1609885	ReturnStatement	return 0 ;	199:12:3759:3767	1609337	1	True				
ANR	1609886	PrimaryExpression	0		1609337	0					
ANR	1609887	ExpressionStatement	ctx -> cudecoder = NULL	201:8:3778:3799	1609337	3	True				
ANR	1609888	AssignmentExpression	ctx -> cudecoder = NULL		1609337	0		=			
ANR	1609889	PtrMemberAccess	ctx -> cudecoder		1609337	0					
ANR	1609890	Identifier	ctx		1609337	0					
ANR	1609891	Identifier	cudecoder		1609337	1					
ANR	1609892	Identifier	NULL		1609337	1					
ANR	1609893	IfStatement	if ( hwframe_ctx -> pool && ( hwframe_ctx -> width < avctx -> width || hwframe_ctx -> height < avctx -> height || hwframe_ctx -> format != AV_PIX_FMT_CUDA || hwframe_ctx -> sw_format != avctx -> sw_pix_fmt ) )		1609337	43					
ANR	1609894	Condition	hwframe_ctx -> pool && ( hwframe_ctx -> width < avctx -> width || hwframe_ctx -> height < avctx -> height || hwframe_ctx -> format != AV_PIX_FMT_CUDA || hwframe_ctx -> sw_format != avctx -> sw_pix_fmt )	207:8:3819:4055	1609337	0	True				
ANR	1609895	AndExpression	hwframe_ctx -> pool && ( hwframe_ctx -> width < avctx -> width || hwframe_ctx -> height < avctx -> height || hwframe_ctx -> format != AV_PIX_FMT_CUDA || hwframe_ctx -> sw_format != avctx -> sw_pix_fmt )		1609337	0		&&			
ANR	1609896	PtrMemberAccess	hwframe_ctx -> pool		1609337	0					
ANR	1609897	Identifier	hwframe_ctx		1609337	0					
ANR	1609898	Identifier	pool		1609337	1					
ANR	1609899	OrExpression	hwframe_ctx -> width < avctx -> width || hwframe_ctx -> height < avctx -> height || hwframe_ctx -> format != AV_PIX_FMT_CUDA || hwframe_ctx -> sw_format != avctx -> sw_pix_fmt		1609337	1		||			
ANR	1609900	RelationalExpression	hwframe_ctx -> width < avctx -> width		1609337	0		<			
ANR	1609901	PtrMemberAccess	hwframe_ctx -> width		1609337	0					
ANR	1609902	Identifier	hwframe_ctx		1609337	0					
ANR	1609903	Identifier	width		1609337	1					
ANR	1609904	PtrMemberAccess	avctx -> width		1609337	1					
ANR	1609905	Identifier	avctx		1609337	0					
ANR	1609906	Identifier	width		1609337	1					
ANR	1609907	OrExpression	hwframe_ctx -> height < avctx -> height || hwframe_ctx -> format != AV_PIX_FMT_CUDA || hwframe_ctx -> sw_format != avctx -> sw_pix_fmt		1609337	1		||			
ANR	1609908	RelationalExpression	hwframe_ctx -> height < avctx -> height		1609337	0		<			
ANR	1609909	PtrMemberAccess	hwframe_ctx -> height		1609337	0					
ANR	1609910	Identifier	hwframe_ctx		1609337	0					
ANR	1609911	Identifier	height		1609337	1					
ANR	1609912	PtrMemberAccess	avctx -> height		1609337	1					
ANR	1609913	Identifier	avctx		1609337	0					
ANR	1609914	Identifier	height		1609337	1					
ANR	1609915	OrExpression	hwframe_ctx -> format != AV_PIX_FMT_CUDA || hwframe_ctx -> sw_format != avctx -> sw_pix_fmt		1609337	1		||			
ANR	1609916	EqualityExpression	hwframe_ctx -> format != AV_PIX_FMT_CUDA		1609337	0		!=			
ANR	1609917	PtrMemberAccess	hwframe_ctx -> format		1609337	0					
ANR	1609918	Identifier	hwframe_ctx		1609337	0					
ANR	1609919	Identifier	format		1609337	1					
ANR	1609920	Identifier	AV_PIX_FMT_CUDA		1609337	1					
ANR	1609921	EqualityExpression	hwframe_ctx -> sw_format != avctx -> sw_pix_fmt		1609337	1		!=			
ANR	1609922	PtrMemberAccess	hwframe_ctx -> sw_format		1609337	0					
ANR	1609923	Identifier	hwframe_ctx		1609337	0					
ANR	1609924	Identifier	sw_format		1609337	1					
ANR	1609925	PtrMemberAccess	avctx -> sw_pix_fmt		1609337	1					
ANR	1609926	Identifier	avctx		1609337	0					
ANR	1609927	Identifier	sw_pix_fmt		1609337	1					
ANR	1609928	CompoundStatement		213:58:3972:3972	1609337	1					
ANR	1609929	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""AVHWFramesContext is already initialized with incompatible parameters\\n"" )"	217:8:4069:4171	1609337	0	True				
ANR	1609930	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""AVHWFramesContext is already initialized with incompatible parameters\\n"" )"		1609337	0					
ANR	1609931	Callee	av_log		1609337	0					
ANR	1609932	Identifier	av_log		1609337	0					
ANR	1609933	ArgumentList	avctx		1609337	1					
ANR	1609934	Argument	avctx		1609337	0					
ANR	1609935	Identifier	avctx		1609337	0					
ANR	1609936	Argument	AV_LOG_ERROR		1609337	1					
ANR	1609937	Identifier	AV_LOG_ERROR		1609337	0					
ANR	1609938	Argument	"""AVHWFramesContext is already initialized with incompatible parameters\\n"""		1609337	2					
ANR	1609939	PrimaryExpression	"""AVHWFramesContext is already initialized with incompatible parameters\\n"""		1609337	0					
ANR	1609940	ExpressionStatement	ctx -> internal_error = AVERROR ( EINVAL )	219:8:4182:4219	1609337	1	True				
ANR	1609941	AssignmentExpression	ctx -> internal_error = AVERROR ( EINVAL )		1609337	0		=			
ANR	1609942	PtrMemberAccess	ctx -> internal_error		1609337	0					
ANR	1609943	Identifier	ctx		1609337	0					
ANR	1609944	Identifier	internal_error		1609337	1					
ANR	1609945	CallExpression	AVERROR ( EINVAL )		1609337	1					
ANR	1609946	Callee	AVERROR		1609337	0					
ANR	1609947	Identifier	AVERROR		1609337	0					
ANR	1609948	ArgumentList	EINVAL		1609337	1					
ANR	1609949	Argument	EINVAL		1609337	0					
ANR	1609950	Identifier	EINVAL		1609337	0					
ANR	1609951	ReturnStatement	return 0 ;	221:8:4230:4238	1609337	2	True				
ANR	1609952	PrimaryExpression	0		1609337	0					
ANR	1609953	IfStatement	if ( format -> chroma_format != cudaVideoChromaFormat_420 )		1609337	44					
ANR	1609954	Condition	format -> chroma_format != cudaVideoChromaFormat_420	227:8:4258:4307	1609337	0	True				
ANR	1609955	EqualityExpression	format -> chroma_format != cudaVideoChromaFormat_420		1609337	0		!=			
ANR	1609956	PtrMemberAccess	format -> chroma_format		1609337	0					
ANR	1609957	Identifier	format		1609337	0					
ANR	1609958	Identifier	chroma_format		1609337	1					
ANR	1609959	Identifier	cudaVideoChromaFormat_420		1609337	1					
ANR	1609960	CompoundStatement		225:60:4224:4224	1609337	1					
ANR	1609961	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Chroma formats other than 420 are not supported\\n"" )"	229:8:4321:4401	1609337	0	True				
ANR	1609962	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Chroma formats other than 420 are not supported\\n"" )"		1609337	0					
ANR	1609963	Callee	av_log		1609337	0					
ANR	1609964	Identifier	av_log		1609337	0					
ANR	1609965	ArgumentList	avctx		1609337	1					
ANR	1609966	Argument	avctx		1609337	0					
ANR	1609967	Identifier	avctx		1609337	0					
ANR	1609968	Argument	AV_LOG_ERROR		1609337	1					
ANR	1609969	Identifier	AV_LOG_ERROR		1609337	0					
ANR	1609970	Argument	"""Chroma formats other than 420 are not supported\\n"""		1609337	2					
ANR	1609971	PrimaryExpression	"""Chroma formats other than 420 are not supported\\n"""		1609337	0					
ANR	1609972	ExpressionStatement	ctx -> internal_error = AVERROR ( EINVAL )	231:8:4412:4449	1609337	1	True				
ANR	1609973	AssignmentExpression	ctx -> internal_error = AVERROR ( EINVAL )		1609337	0		=			
ANR	1609974	PtrMemberAccess	ctx -> internal_error		1609337	0					
ANR	1609975	Identifier	ctx		1609337	0					
ANR	1609976	Identifier	internal_error		1609337	1					
ANR	1609977	CallExpression	AVERROR ( EINVAL )		1609337	1					
ANR	1609978	Callee	AVERROR		1609337	0					
ANR	1609979	Identifier	AVERROR		1609337	0					
ANR	1609980	ArgumentList	EINVAL		1609337	1					
ANR	1609981	Argument	EINVAL		1609337	0					
ANR	1609982	Identifier	EINVAL		1609337	0					
ANR	1609983	ReturnStatement	return 0 ;	233:8:4460:4468	1609337	2	True				
ANR	1609984	PrimaryExpression	0		1609337	0					
ANR	1609985	ExpressionStatement	avctx -> coded_width = format -> coded_width	239:4:4484:4524	1609337	45	True				
ANR	1609986	AssignmentExpression	avctx -> coded_width = format -> coded_width		1609337	0		=			
ANR	1609987	PtrMemberAccess	avctx -> coded_width		1609337	0					
ANR	1609988	Identifier	avctx		1609337	0					
ANR	1609989	Identifier	coded_width		1609337	1					
ANR	1609990	PtrMemberAccess	format -> coded_width		1609337	1					
ANR	1609991	Identifier	format		1609337	0					
ANR	1609992	Identifier	coded_width		1609337	1					
ANR	1609993	ExpressionStatement	avctx -> coded_height = format -> coded_height	241:4:4531:4573	1609337	46	True				
ANR	1609994	AssignmentExpression	avctx -> coded_height = format -> coded_height		1609337	0		=			
ANR	1609995	PtrMemberAccess	avctx -> coded_height		1609337	0					
ANR	1609996	Identifier	avctx		1609337	0					
ANR	1609997	Identifier	coded_height		1609337	1					
ANR	1609998	PtrMemberAccess	format -> coded_height		1609337	1					
ANR	1609999	Identifier	format		1609337	0					
ANR	1610000	Identifier	coded_height		1609337	1					
ANR	1610001	ExpressionStatement	ctx -> chroma_format = format -> chroma_format	245:4:4582:4624	1609337	47	True				
ANR	1610002	AssignmentExpression	ctx -> chroma_format = format -> chroma_format		1609337	0		=			
ANR	1610003	PtrMemberAccess	ctx -> chroma_format		1609337	0					
ANR	1610004	Identifier	ctx		1609337	0					
ANR	1610005	Identifier	chroma_format		1609337	1					
ANR	1610006	PtrMemberAccess	format -> chroma_format		1609337	1					
ANR	1610007	Identifier	format		1609337	0					
ANR	1610008	Identifier	chroma_format		1609337	1					
ANR	1610009	ExpressionStatement	"memset ( & cuinfo , 0 , sizeof ( cuinfo ) )"	249:4:4633:4667	1609337	48	True				
ANR	1610010	CallExpression	"memset ( & cuinfo , 0 , sizeof ( cuinfo ) )"		1609337	0					
ANR	1610011	Callee	memset		1609337	0					
ANR	1610012	Identifier	memset		1609337	0					
ANR	1610013	ArgumentList	& cuinfo		1609337	1					
ANR	1610014	Argument	& cuinfo		1609337	0					
ANR	1610015	UnaryOperationExpression	& cuinfo		1609337	0					
ANR	1610016	UnaryOperator	&		1609337	0					
ANR	1610017	Identifier	cuinfo		1609337	1					
ANR	1610018	Argument	0		1609337	1					
ANR	1610019	PrimaryExpression	0		1609337	0					
ANR	1610020	Argument	sizeof ( cuinfo )		1609337	2					
ANR	1610021	SizeofExpression	sizeof ( cuinfo )		1609337	0					
ANR	1610022	Sizeof	sizeof		1609337	0					
ANR	1610023	SizeofOperand	cuinfo		1609337	1					
ANR	1610024	ExpressionStatement	cuinfo . CodecType = ctx -> codec_type = format -> codec	253:4:4676:4726	1609337	49	True				
ANR	1610025	AssignmentExpression	cuinfo . CodecType = ctx -> codec_type = format -> codec		1609337	0		=			
ANR	1610026	MemberAccess	cuinfo . CodecType		1609337	0					
ANR	1610027	Identifier	cuinfo		1609337	0					
ANR	1610028	Identifier	CodecType		1609337	1					
ANR	1610029	AssignmentExpression	ctx -> codec_type = format -> codec		1609337	1		=			
ANR	1610030	PtrMemberAccess	ctx -> codec_type		1609337	0					
ANR	1610031	Identifier	ctx		1609337	0					
ANR	1610032	Identifier	codec_type		1609337	1					
ANR	1610033	PtrMemberAccess	format -> codec		1609337	1					
ANR	1610034	Identifier	format		1609337	0					
ANR	1610035	Identifier	codec		1609337	1					
ANR	1610036	ExpressionStatement	cuinfo . ChromaFormat = format -> chroma_format	255:4:4733:4776	1609337	50	True				
ANR	1610037	AssignmentExpression	cuinfo . ChromaFormat = format -> chroma_format		1609337	0		=			
ANR	1610038	MemberAccess	cuinfo . ChromaFormat		1609337	0					
ANR	1610039	Identifier	cuinfo		1609337	0					
ANR	1610040	Identifier	ChromaFormat		1609337	1					
ANR	1610041	PtrMemberAccess	format -> chroma_format		1609337	1					
ANR	1610042	Identifier	format		1609337	0					
ANR	1610043	Identifier	chroma_format		1609337	1					
ANR	1610044	SwitchStatement	switch ( avctx -> sw_pix_fmt )		1609337	51					
ANR	1610045	Condition	avctx -> sw_pix_fmt	259:12:4793:4809	1609337	0	True				
ANR	1610046	PtrMemberAccess	avctx -> sw_pix_fmt		1609337	0					
ANR	1610047	Identifier	avctx		1609337	0					
ANR	1610048	Identifier	sw_pix_fmt		1609337	1					
ANR	1610049	CompoundStatement		257:31:4726:4726	1609337	1					
ANR	1610050	Label	case AV_PIX_FMT_NV12 :	261:4:4819:4839	1609337	0	True				
ANR	1610051	Identifier	AV_PIX_FMT_NV12		1609337	0					
ANR	1610052	ExpressionStatement	cuinfo . OutputFormat = cudaVideoSurfaceFormat_NV12	263:8:4850:4899	1609337	1	True				
ANR	1610053	AssignmentExpression	cuinfo . OutputFormat = cudaVideoSurfaceFormat_NV12		1609337	0		=			
ANR	1610054	MemberAccess	cuinfo . OutputFormat		1609337	0					
ANR	1610055	Identifier	cuinfo		1609337	0					
ANR	1610056	Identifier	OutputFormat		1609337	1					
ANR	1610057	Identifier	cudaVideoSurfaceFormat_NV12		1609337	1					
ANR	1610058	BreakStatement	break ;	265:8:4910:4915	1609337	2	True				
ANR	1610059	Label	case AV_PIX_FMT_P010 :	267:4:4922:4942	1609337	3	True				
ANR	1610060	Identifier	AV_PIX_FMT_P010		1609337	0					
ANR	1610061	Label	case AV_PIX_FMT_P016 :	269:4:4949:4969	1609337	4	True				
ANR	1610062	Identifier	AV_PIX_FMT_P016		1609337	0					
ANR	1610063	ExpressionStatement	cuinfo . OutputFormat = cudaVideoSurfaceFormat_P016	271:8:4980:5029	1609337	5	True				
ANR	1610064	AssignmentExpression	cuinfo . OutputFormat = cudaVideoSurfaceFormat_P016		1609337	0		=			
ANR	1610065	MemberAccess	cuinfo . OutputFormat		1609337	0					
ANR	1610066	Identifier	cuinfo		1609337	0					
ANR	1610067	Identifier	OutputFormat		1609337	1					
ANR	1610068	Identifier	cudaVideoSurfaceFormat_P016		1609337	1					
ANR	1610069	BreakStatement	break ;	273:8:5040:5045	1609337	6	True				
ANR	1610070	Label	default :	275:4:5052:5059	1609337	7	True				
ANR	1610071	Identifier	default		1609337	0					
ANR	1610072	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Output formats other than NV12, P010 or P016 are not supported\\n"" )"	277:8:5070:5165	1609337	8	True				
ANR	1610073	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Output formats other than NV12, P010 or P016 are not supported\\n"" )"		1609337	0					
ANR	1610074	Callee	av_log		1609337	0					
ANR	1610075	Identifier	av_log		1609337	0					
ANR	1610076	ArgumentList	avctx		1609337	1					
ANR	1610077	Argument	avctx		1609337	0					
ANR	1610078	Identifier	avctx		1609337	0					
ANR	1610079	Argument	AV_LOG_ERROR		1609337	1					
ANR	1610080	Identifier	AV_LOG_ERROR		1609337	0					
ANR	1610081	Argument	"""Output formats other than NV12, P010 or P016 are not supported\\n"""		1609337	2					
ANR	1610082	PrimaryExpression	"""Output formats other than NV12, P010 or P016 are not supported\\n"""		1609337	0					
ANR	1610083	ExpressionStatement	ctx -> internal_error = AVERROR ( EINVAL )	279:8:5176:5213	1609337	9	True				
ANR	1610084	AssignmentExpression	ctx -> internal_error = AVERROR ( EINVAL )		1609337	0		=			
ANR	1610085	PtrMemberAccess	ctx -> internal_error		1609337	0					
ANR	1610086	Identifier	ctx		1609337	0					
ANR	1610087	Identifier	internal_error		1609337	1					
ANR	1610088	CallExpression	AVERROR ( EINVAL )		1609337	1					
ANR	1610089	Callee	AVERROR		1609337	0					
ANR	1610090	Identifier	AVERROR		1609337	0					
ANR	1610091	ArgumentList	EINVAL		1609337	1					
ANR	1610092	Argument	EINVAL		1609337	0					
ANR	1610093	Identifier	EINVAL		1609337	0					
ANR	1610094	ReturnStatement	return 0 ;	281:8:5224:5232	1609337	10	True				
ANR	1610095	PrimaryExpression	0		1609337	0					
ANR	1610096	ExpressionStatement	cuinfo . ulWidth = avctx -> coded_width	287:4:5248:5283	1609337	52	True				
ANR	1610097	AssignmentExpression	cuinfo . ulWidth = avctx -> coded_width		1609337	0		=			
ANR	1610098	MemberAccess	cuinfo . ulWidth		1609337	0					
ANR	1610099	Identifier	cuinfo		1609337	0					
ANR	1610100	Identifier	ulWidth		1609337	1					
ANR	1610101	PtrMemberAccess	avctx -> coded_width		1609337	1					
ANR	1610102	Identifier	avctx		1609337	0					
ANR	1610103	Identifier	coded_width		1609337	1					
ANR	1610104	ExpressionStatement	cuinfo . ulHeight = avctx -> coded_height	289:4:5290:5327	1609337	53	True				
ANR	1610105	AssignmentExpression	cuinfo . ulHeight = avctx -> coded_height		1609337	0		=			
ANR	1610106	MemberAccess	cuinfo . ulHeight		1609337	0					
ANR	1610107	Identifier	cuinfo		1609337	0					
ANR	1610108	Identifier	ulHeight		1609337	1					
ANR	1610109	PtrMemberAccess	avctx -> coded_height		1609337	1					
ANR	1610110	Identifier	avctx		1609337	0					
ANR	1610111	Identifier	coded_height		1609337	1					
ANR	1610112	ExpressionStatement	cuinfo . ulTargetWidth = cuinfo . ulWidth	291:4:5334:5371	1609337	54	True				
ANR	1610113	AssignmentExpression	cuinfo . ulTargetWidth = cuinfo . ulWidth		1609337	0		=			
ANR	1610114	MemberAccess	cuinfo . ulTargetWidth		1609337	0					
ANR	1610115	Identifier	cuinfo		1609337	0					
ANR	1610116	Identifier	ulTargetWidth		1609337	1					
ANR	1610117	MemberAccess	cuinfo . ulWidth		1609337	1					
ANR	1610118	Identifier	cuinfo		1609337	0					
ANR	1610119	Identifier	ulWidth		1609337	1					
ANR	1610120	ExpressionStatement	cuinfo . ulTargetHeight = cuinfo . ulHeight	293:4:5378:5417	1609337	55	True				
ANR	1610121	AssignmentExpression	cuinfo . ulTargetHeight = cuinfo . ulHeight		1609337	0		=			
ANR	1610122	MemberAccess	cuinfo . ulTargetHeight		1609337	0					
ANR	1610123	Identifier	cuinfo		1609337	0					
ANR	1610124	Identifier	ulTargetHeight		1609337	1					
ANR	1610125	MemberAccess	cuinfo . ulHeight		1609337	1					
ANR	1610126	Identifier	cuinfo		1609337	0					
ANR	1610127	Identifier	ulHeight		1609337	1					
ANR	1610128	ExpressionStatement	cuinfo . target_rect . left = 0	297:4:5426:5453	1609337	56	True				
ANR	1610129	AssignmentExpression	cuinfo . target_rect . left = 0		1609337	0		=			
ANR	1610130	MemberAccess	cuinfo . target_rect . left		1609337	0					
ANR	1610131	MemberAccess	cuinfo . target_rect		1609337	0					
ANR	1610132	Identifier	cuinfo		1609337	0					
ANR	1610133	Identifier	target_rect		1609337	1					
ANR	1610134	Identifier	left		1609337	1					
ANR	1610135	PrimaryExpression	0		1609337	1					
ANR	1610136	ExpressionStatement	cuinfo . target_rect . top = 0	299:4:5460:5486	1609337	57	True				
ANR	1610137	AssignmentExpression	cuinfo . target_rect . top = 0		1609337	0		=			
ANR	1610138	MemberAccess	cuinfo . target_rect . top		1609337	0					
ANR	1610139	MemberAccess	cuinfo . target_rect		1609337	0					
ANR	1610140	Identifier	cuinfo		1609337	0					
ANR	1610141	Identifier	target_rect		1609337	1					
ANR	1610142	Identifier	top		1609337	1					
ANR	1610143	PrimaryExpression	0		1609337	1					
ANR	1610144	ExpressionStatement	cuinfo . target_rect . right = cuinfo . ulWidth	301:4:5493:5534	1609337	58	True				
ANR	1610145	AssignmentExpression	cuinfo . target_rect . right = cuinfo . ulWidth		1609337	0		=			
ANR	1610146	MemberAccess	cuinfo . target_rect . right		1609337	0					
ANR	1610147	MemberAccess	cuinfo . target_rect		1609337	0					
ANR	1610148	Identifier	cuinfo		1609337	0					
ANR	1610149	Identifier	target_rect		1609337	1					
ANR	1610150	Identifier	right		1609337	1					
ANR	1610151	MemberAccess	cuinfo . ulWidth		1609337	1					
ANR	1610152	Identifier	cuinfo		1609337	0					
ANR	1610153	Identifier	ulWidth		1609337	1					
ANR	1610154	ExpressionStatement	cuinfo . target_rect . bottom = cuinfo . ulHeight	303:4:5541:5584	1609337	59	True				
ANR	1610155	AssignmentExpression	cuinfo . target_rect . bottom = cuinfo . ulHeight		1609337	0		=			
ANR	1610156	MemberAccess	cuinfo . target_rect . bottom		1609337	0					
ANR	1610157	MemberAccess	cuinfo . target_rect		1609337	0					
ANR	1610158	Identifier	cuinfo		1609337	0					
ANR	1610159	Identifier	target_rect		1609337	1					
ANR	1610160	Identifier	bottom		1609337	1					
ANR	1610161	MemberAccess	cuinfo . ulHeight		1609337	1					
ANR	1610162	Identifier	cuinfo		1609337	0					
ANR	1610163	Identifier	ulHeight		1609337	1					
ANR	1610164	ExpressionStatement	cuinfo . ulNumDecodeSurfaces = ctx -> nb_surfaces	307:4:5593:5638	1609337	60	True				
ANR	1610165	AssignmentExpression	cuinfo . ulNumDecodeSurfaces = ctx -> nb_surfaces		1609337	0		=			
ANR	1610166	MemberAccess	cuinfo . ulNumDecodeSurfaces		1609337	0					
ANR	1610167	Identifier	cuinfo		1609337	0					
ANR	1610168	Identifier	ulNumDecodeSurfaces		1609337	1					
ANR	1610169	PtrMemberAccess	ctx -> nb_surfaces		1609337	1					
ANR	1610170	Identifier	ctx		1609337	0					
ANR	1610171	Identifier	nb_surfaces		1609337	1					
ANR	1610172	ExpressionStatement	cuinfo . ulNumOutputSurfaces = 1	309:4:5645:5675	1609337	61	True				
ANR	1610173	AssignmentExpression	cuinfo . ulNumOutputSurfaces = 1		1609337	0		=			
ANR	1610174	MemberAccess	cuinfo . ulNumOutputSurfaces		1609337	0					
ANR	1610175	Identifier	cuinfo		1609337	0					
ANR	1610176	Identifier	ulNumOutputSurfaces		1609337	1					
ANR	1610177	PrimaryExpression	1		1609337	1					
ANR	1610178	ExpressionStatement	cuinfo . ulCreationFlags = cudaVideoCreate_PreferCUVID	311:4:5682:5734	1609337	62	True				
ANR	1610179	AssignmentExpression	cuinfo . ulCreationFlags = cudaVideoCreate_PreferCUVID		1609337	0		=			
ANR	1610180	MemberAccess	cuinfo . ulCreationFlags		1609337	0					
ANR	1610181	Identifier	cuinfo		1609337	0					
ANR	1610182	Identifier	ulCreationFlags		1609337	1					
ANR	1610183	Identifier	cudaVideoCreate_PreferCUVID		1609337	1					
ANR	1610184	ExpressionStatement	cuinfo . bitDepthMinus8 = format -> bit_depth_luma_minus8	313:4:5741:5794	1609337	63	True				
ANR	1610185	AssignmentExpression	cuinfo . bitDepthMinus8 = format -> bit_depth_luma_minus8		1609337	0		=			
ANR	1610186	MemberAccess	cuinfo . bitDepthMinus8		1609337	0					
ANR	1610187	Identifier	cuinfo		1609337	0					
ANR	1610188	Identifier	bitDepthMinus8		1609337	1					
ANR	1610189	PtrMemberAccess	format -> bit_depth_luma_minus8		1609337	1					
ANR	1610190	Identifier	format		1609337	0					
ANR	1610191	Identifier	bit_depth_luma_minus8		1609337	1					
ANR	1610192	IfStatement	if ( format -> progressive_sequence )		1609337	64					
ANR	1610193	Condition	format -> progressive_sequence	317:8:5807:5834	1609337	0	True				
ANR	1610194	PtrMemberAccess	format -> progressive_sequence		1609337	0					
ANR	1610195	Identifier	format		1609337	0					
ANR	1610196	Identifier	progressive_sequence		1609337	1					
ANR	1610197	CompoundStatement		315:38:5751:5751	1609337	1					
ANR	1610198	ExpressionStatement	ctx -> deint_mode = cuinfo . DeinterlaceMode = cudaVideoDeinterlaceMode_Weave	319:8:5848:5921	1609337	0	True				
ANR	1610199	AssignmentExpression	ctx -> deint_mode = cuinfo . DeinterlaceMode = cudaVideoDeinterlaceMode_Weave		1609337	0		=			
ANR	1610200	PtrMemberAccess	ctx -> deint_mode		1609337	0					
ANR	1610201	Identifier	ctx		1609337	0					
ANR	1610202	Identifier	deint_mode		1609337	1					
ANR	1610203	AssignmentExpression	cuinfo . DeinterlaceMode = cudaVideoDeinterlaceMode_Weave		1609337	1		=			
ANR	1610204	MemberAccess	cuinfo . DeinterlaceMode		1609337	0					
ANR	1610205	Identifier	cuinfo		1609337	0					
ANR	1610206	Identifier	DeinterlaceMode		1609337	1					
ANR	1610207	Identifier	cudaVideoDeinterlaceMode_Weave		1609337	1					
ANR	1610208	ElseStatement	else		1609337	0					
ANR	1610209	CompoundStatement		319:11:5849:5849	1609337	0					
ANR	1610210	ExpressionStatement	cuinfo . DeinterlaceMode = ctx -> deint_mode	323:8:5946:5986	1609337	0	True				
ANR	1610211	AssignmentExpression	cuinfo . DeinterlaceMode = ctx -> deint_mode		1609337	0		=			
ANR	1610212	MemberAccess	cuinfo . DeinterlaceMode		1609337	0					
ANR	1610213	Identifier	cuinfo		1609337	0					
ANR	1610214	Identifier	DeinterlaceMode		1609337	1					
ANR	1610215	PtrMemberAccess	ctx -> deint_mode		1609337	1					
ANR	1610216	Identifier	ctx		1609337	0					
ANR	1610217	Identifier	deint_mode		1609337	1					
ANR	1610218	IfStatement	if ( ctx -> deint_mode != cudaVideoDeinterlaceMode_Weave )		1609337	65					
ANR	1610219	Condition	ctx -> deint_mode != cudaVideoDeinterlaceMode_Weave	329:8:6006:6054	1609337	0	True				
ANR	1610220	EqualityExpression	ctx -> deint_mode != cudaVideoDeinterlaceMode_Weave		1609337	0		!=			
ANR	1610221	PtrMemberAccess	ctx -> deint_mode		1609337	0					
ANR	1610222	Identifier	ctx		1609337	0					
ANR	1610223	Identifier	deint_mode		1609337	1					
ANR	1610224	Identifier	cudaVideoDeinterlaceMode_Weave		1609337	1					
ANR	1610225	Statement	avctx	331:8:6066:6070	1609337	1	True				
ANR	1610226	Statement	->	331:13:6071:6072	1609337	66	True				
ANR	1610227	Statement	framerate	331:15:6073:6081	1609337	67	True				
ANR	1610228	Statement	=	331:25:6083:6083	1609337	68	True				
ANR	1610229	Statement	av_mul_q	331:27:6085:6092	1609337	69	True				
ANR	1610230	Statement	(	331:35:6093:6093	1609337	70	True				
ANR	1610231	Statement	avctx	331:36:6094:6098	1609337	71	True				
ANR	1610232	Statement	->	331:41:6099:6100	1609337	72	True				
ANR	1610233	Statement	framerate	331:43:6101:6109	1609337	73	True				
ANR	1610234	Statement	","	331:52:6110:6110	1609337	74	True				
ANR	1610235	Statement	(	331:54:6112:6112	1609337	75	True				
ANR	1610236	Statement	AVRational	331:55:6113:6122	1609337	76	True				
ANR	1610237	Statement	)	331:65:6123:6123	1609337	77	True				
ANR	1610238	CompoundStatement		329:66:6038:6038	1609337	78					
ANR	1610239	Statement	2	331:67:6125:6125	1609337	0	True				
ANR	1610240	Statement	","	331:68:6126:6126	1609337	1	True				
ANR	1610241	Statement	1	331:70:6128:6128	1609337	2	True				
ANR	1610242	Statement	)	331:72:6130:6130	1609337	79	True				
ANR	1610243	ExpressionStatement		331:73:6131:6131	1609337	80	True				
ANR	1610244	ExpressionStatement	"ctx -> internal_error = CHECK_CU ( ctx -> cvdl -> cuvidCreateDecoder ( & ctx -> cudecoder , & cuinfo ) )"	335:4:6140:6227	1609337	81	True				
ANR	1610245	AssignmentExpression	"ctx -> internal_error = CHECK_CU ( ctx -> cvdl -> cuvidCreateDecoder ( & ctx -> cudecoder , & cuinfo ) )"		1609337	0		=			
ANR	1610246	PtrMemberAccess	ctx -> internal_error		1609337	0					
ANR	1610247	Identifier	ctx		1609337	0					
ANR	1610248	Identifier	internal_error		1609337	1					
ANR	1610249	CallExpression	"CHECK_CU ( ctx -> cvdl -> cuvidCreateDecoder ( & ctx -> cudecoder , & cuinfo ) )"		1609337	1					
ANR	1610250	Callee	CHECK_CU		1609337	0					
ANR	1610251	Identifier	CHECK_CU		1609337	0					
ANR	1610252	ArgumentList	"ctx -> cvdl -> cuvidCreateDecoder ( & ctx -> cudecoder , & cuinfo )"		1609337	1					
ANR	1610253	Argument	"ctx -> cvdl -> cuvidCreateDecoder ( & ctx -> cudecoder , & cuinfo )"		1609337	0					
ANR	1610254	CallExpression	"ctx -> cvdl -> cuvidCreateDecoder ( & ctx -> cudecoder , & cuinfo )"		1609337	0					
ANR	1610255	Callee	ctx -> cvdl -> cuvidCreateDecoder		1609337	0					
ANR	1610256	PtrMemberAccess	ctx -> cvdl -> cuvidCreateDecoder		1609337	0					
ANR	1610257	PtrMemberAccess	ctx -> cvdl		1609337	0					
ANR	1610258	Identifier	ctx		1609337	0					
ANR	1610259	Identifier	cvdl		1609337	1					
ANR	1610260	Identifier	cuvidCreateDecoder		1609337	1					
ANR	1610261	ArgumentList	& ctx -> cudecoder		1609337	1					
ANR	1610262	Argument	& ctx -> cudecoder		1609337	0					
ANR	1610263	UnaryOperationExpression	& ctx -> cudecoder		1609337	0					
ANR	1610264	UnaryOperator	&		1609337	0					
ANR	1610265	PtrMemberAccess	ctx -> cudecoder		1609337	1					
ANR	1610266	Identifier	ctx		1609337	0					
ANR	1610267	Identifier	cudecoder		1609337	1					
ANR	1610268	Argument	& cuinfo		1609337	1					
ANR	1610269	UnaryOperationExpression	& cuinfo		1609337	0					
ANR	1610270	UnaryOperator	&		1609337	0					
ANR	1610271	Identifier	cuinfo		1609337	1					
ANR	1610272	IfStatement	if ( ctx -> internal_error < 0 )		1609337	82					
ANR	1610273	Condition	ctx -> internal_error < 0	337:8:6238:6260	1609337	0	True				
ANR	1610274	RelationalExpression	ctx -> internal_error < 0		1609337	0		<			
ANR	1610275	PtrMemberAccess	ctx -> internal_error		1609337	0					
ANR	1610276	Identifier	ctx		1609337	0					
ANR	1610277	Identifier	internal_error		1609337	1					
ANR	1610278	PrimaryExpression	0		1609337	1					
ANR	1610279	ReturnStatement	return 0 ;	339:8:6272:6280	1609337	1	True				
ANR	1610280	PrimaryExpression	0		1609337	0					
ANR	1610281	IfStatement	if ( ! hwframe_ctx -> pool )		1609337	83					
ANR	1610282	Condition	! hwframe_ctx -> pool	343:8:6293:6310	1609337	0	True				
ANR	1610283	UnaryOperationExpression	! hwframe_ctx -> pool		1609337	0					
ANR	1610284	UnaryOperator	!		1609337	0					
ANR	1610285	PtrMemberAccess	hwframe_ctx -> pool		1609337	1					
ANR	1610286	Identifier	hwframe_ctx		1609337	0					
ANR	1610287	Identifier	pool		1609337	1					
ANR	1610288	CompoundStatement		341:28:6227:6227	1609337	1					
ANR	1610289	ExpressionStatement	hwframe_ctx -> format = AV_PIX_FMT_CUDA	345:8:6324:6361	1609337	0	True				
ANR	1610290	AssignmentExpression	hwframe_ctx -> format = AV_PIX_FMT_CUDA		1609337	0		=			
ANR	1610291	PtrMemberAccess	hwframe_ctx -> format		1609337	0					
ANR	1610292	Identifier	hwframe_ctx		1609337	0					
ANR	1610293	Identifier	format		1609337	1					
ANR	1610294	Identifier	AV_PIX_FMT_CUDA		1609337	1					
ANR	1610295	ExpressionStatement	hwframe_ctx -> sw_format = avctx -> sw_pix_fmt	347:8:6372:6414	1609337	1	True				
ANR	1610296	AssignmentExpression	hwframe_ctx -> sw_format = avctx -> sw_pix_fmt		1609337	0		=			
ANR	1610297	PtrMemberAccess	hwframe_ctx -> sw_format		1609337	0					
ANR	1610298	Identifier	hwframe_ctx		1609337	0					
ANR	1610299	Identifier	sw_format		1609337	1					
ANR	1610300	PtrMemberAccess	avctx -> sw_pix_fmt		1609337	1					
ANR	1610301	Identifier	avctx		1609337	0					
ANR	1610302	Identifier	sw_pix_fmt		1609337	1					
ANR	1610303	ExpressionStatement	hwframe_ctx -> width = avctx -> width	349:8:6425:6458	1609337	2	True				
ANR	1610304	AssignmentExpression	hwframe_ctx -> width = avctx -> width		1609337	0		=			
ANR	1610305	PtrMemberAccess	hwframe_ctx -> width		1609337	0					
ANR	1610306	Identifier	hwframe_ctx		1609337	0					
ANR	1610307	Identifier	width		1609337	1					
ANR	1610308	PtrMemberAccess	avctx -> width		1609337	1					
ANR	1610309	Identifier	avctx		1609337	0					
ANR	1610310	Identifier	width		1609337	1					
ANR	1610311	ExpressionStatement	hwframe_ctx -> height = avctx -> height	351:8:6469:6504	1609337	3	True				
ANR	1610312	AssignmentExpression	hwframe_ctx -> height = avctx -> height		1609337	0		=			
ANR	1610313	PtrMemberAccess	hwframe_ctx -> height		1609337	0					
ANR	1610314	Identifier	hwframe_ctx		1609337	0					
ANR	1610315	Identifier	height		1609337	1					
ANR	1610316	PtrMemberAccess	avctx -> height		1609337	1					
ANR	1610317	Identifier	avctx		1609337	0					
ANR	1610318	Identifier	height		1609337	1					
ANR	1610319	IfStatement	if ( ( ctx -> internal_error = av_hwframe_ctx_init ( ctx -> hwframe ) ) < 0 )		1609337	4					
ANR	1610320	Condition	( ctx -> internal_error = av_hwframe_ctx_init ( ctx -> hwframe ) ) < 0	355:12:6521:6581	1609337	0	True				
ANR	1610321	RelationalExpression	( ctx -> internal_error = av_hwframe_ctx_init ( ctx -> hwframe ) ) < 0		1609337	0		<			
ANR	1610322	AssignmentExpression	ctx -> internal_error = av_hwframe_ctx_init ( ctx -> hwframe )		1609337	0		=			
ANR	1610323	PtrMemberAccess	ctx -> internal_error		1609337	0					
ANR	1610324	Identifier	ctx		1609337	0					
ANR	1610325	Identifier	internal_error		1609337	1					
ANR	1610326	CallExpression	av_hwframe_ctx_init ( ctx -> hwframe )		1609337	1					
ANR	1610327	Callee	av_hwframe_ctx_init		1609337	0					
ANR	1610328	Identifier	av_hwframe_ctx_init		1609337	0					
ANR	1610329	ArgumentList	ctx -> hwframe		1609337	1					
ANR	1610330	Argument	ctx -> hwframe		1609337	0					
ANR	1610331	PtrMemberAccess	ctx -> hwframe		1609337	0					
ANR	1610332	Identifier	ctx		1609337	0					
ANR	1610333	Identifier	hwframe		1609337	1					
ANR	1610334	PrimaryExpression	0		1609337	1					
ANR	1610335	CompoundStatement		353:75:6498:6498	1609337	1					
ANR	1610336	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""av_hwframe_ctx_init failed\\n"" )"	357:12:6599:6658	1609337	0	True				
ANR	1610337	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""av_hwframe_ctx_init failed\\n"" )"		1609337	0					
ANR	1610338	Callee	av_log		1609337	0					
ANR	1610339	Identifier	av_log		1609337	0					
ANR	1610340	ArgumentList	avctx		1609337	1					
ANR	1610341	Argument	avctx		1609337	0					
ANR	1610342	Identifier	avctx		1609337	0					
ANR	1610343	Argument	AV_LOG_ERROR		1609337	1					
ANR	1610344	Identifier	AV_LOG_ERROR		1609337	0					
ANR	1610345	Argument	"""av_hwframe_ctx_init failed\\n"""		1609337	2					
ANR	1610346	PrimaryExpression	"""av_hwframe_ctx_init failed\\n"""		1609337	0					
ANR	1610347	ReturnStatement	return 0 ;	359:12:6673:6681	1609337	1	True				
ANR	1610348	PrimaryExpression	0		1609337	0					
ANR	1610349	ReturnStatement	return 1 ;	367:4:6708:6716	1609337	84	True				
ANR	1610350	PrimaryExpression	1		1609337	0					
ANR	1610351	ReturnType	static int CUDAAPI		1609337	1					
ANR	1610352	Identifier	cuvid_handle_video_sequence		1609337	2					
ANR	1610353	ParameterList	"void * opaque , CUVIDEOFORMAT * format"		1609337	3					
ANR	1610354	Parameter	void * opaque	1:47:47:58	1609337	0	True				
ANR	1610355	ParameterType	void *		1609337	0					
ANR	1610356	Identifier	opaque		1609337	1					
ANR	1610357	Parameter	CUVIDEOFORMAT * format	1:61:61:81	1609337	1	True				
ANR	1610358	ParameterType	CUVIDEOFORMAT *		1609337	0					
ANR	1610359	Identifier	format		1609337	1					
ANR	1610360	CFGEntryNode	ENTRY		1609337		True				
ANR	1610361	CFGExitNode	EXIT		1609337		True				
ANR	1610362	Symbol	ENOMEM		1609337						
ANR	1610363	Symbol	& ctx -> hwframe		1609337						
ANR	1610364	Symbol	pix_fmts		1609337						
ANR	1610365	Symbol	cuinfo . bitDepthMinus8		1609337						
ANR	1610366	Symbol	avctx -> color_trc		1609337						
ANR	1610367	Symbol	format -> video_signal_description . video_full_range_flag		1609337						
ANR	1610368	Symbol	av_get_pix_fmt_name		1609337						
ANR	1610369	Symbol	hwframe_ctx -> format		1609337						
ANR	1610370	Symbol	avctx -> coded_width		1609337						
ANR	1610371	Symbol	cuinfo . target_rect		1609337						
ANR	1610372	Symbol	ctx		1609337						
ANR	1610373	Symbol	av_hwframe_ctx_init		1609337						
ANR	1610374	Symbol	avctx -> coded_height		1609337						
ANR	1610375	Symbol	format -> video_signal_description		1609337						
ANR	1610376	Symbol	ctx -> nb_surfaces		1609337						
ANR	1610377	Symbol	AV_LOG_VERBOSE		1609337						
ANR	1610378	Symbol	avctx -> hw_frames_ctx		1609337						
ANR	1610379	Symbol	format -> video_signal_description . color_primaries		1609337						
ANR	1610380	Symbol	avctx -> framerate . num		1609337						
ANR	1610381	Symbol	format -> display_area . right		1609337						
ANR	1610382	Symbol	cuinfo . ChromaFormat		1609337						
ANR	1610383	Symbol	AV_PIX_FMT_CUDA		1609337						
ANR	1610384	Symbol	cudaVideoSurfaceFormat_NV12		1609337						
ANR	1610385	Symbol	avctx -> bit_rate		1609337						
ANR	1610386	Symbol	hwframe_ctx -> pool		1609337						
ANR	1610387	Symbol	format -> bit_depth_luma_minus8		1609337						
ANR	1610388	Symbol	avctx -> pix_fmt		1609337						
ANR	1610389	Symbol	ctx -> internal_error		1609337						
ANR	1610390	Symbol	ctx -> chroma_format		1609337						
ANR	1610391	Symbol	avctx -> colorspace		1609337						
ANR	1610392	Symbol	cuinfo . target_rect . right		1609337						
ANR	1610393	Symbol	avctx -> width		1609337						
ANR	1610394	Symbol	format -> display_area		1609337						
ANR	1610395	Symbol	format -> frame_rate		1609337						
ANR	1610396	Symbol	format -> chroma_format		1609337						
ANR	1610397	Symbol	cudaVideoSurfaceFormat_P016		1609337						
ANR	1610398	Symbol	hwframe_ctx -> height		1609337						
ANR	1610399	Symbol	ctx -> deint_mode		1609337						
ANR	1610400	Symbol	av_buffer_ref		1609337						
ANR	1610401	Symbol	AVCOL_RANGE_MPEG		1609337						
ANR	1610402	Symbol	avctx -> color_range		1609337						
ANR	1610403	Symbol	format -> codec		1609337						
ANR	1610404	Symbol	avctx		1609337						
ANR	1610405	Symbol	cudaVideoCreate_PreferCUVID		1609337						
ANR	1610406	Symbol	format -> frame_rate . denominator		1609337						
ANR	1610407	Symbol	AV_LOG_ERROR		1609337						
ANR	1610408	Symbol	ctx -> codec_type		1609337						
ANR	1610409	Symbol	CHECK_CU		1609337						
ANR	1610410	Symbol	cuinfo . target_rect . top		1609337						
ANR	1610411	Symbol	* ctx		1609337						
ANR	1610412	Symbol	EINVAL		1609337						
ANR	1610413	Symbol	* hwframe_ctx		1609337						
ANR	1610414	Symbol	format -> coded_width		1609337						
ANR	1610415	Symbol	cuinfo . ulWidth		1609337						
ANR	1610416	Symbol	ctx -> cvdl		1609337						
ANR	1610417	Symbol	AV_LOG_TRACE		1609337						
ANR	1610418	Symbol	* * ctx		1609337						
ANR	1610419	Symbol	ctx -> cudecoder		1609337						
ANR	1610420	Symbol	cuinfo . ulNumOutputSurfaces		1609337						
ANR	1610421	Symbol	hwframe_ctx -> sw_format		1609337						
ANR	1610422	Symbol	~AV_CODEC_FLAG_INTERLACED_DCT		1609337						
ANR	1610423	Symbol	* ctx -> cvdl		1609337						
ANR	1610424	Symbol	format -> video_signal_description . matrix_coefficients		1609337						
ANR	1610425	Symbol	ctx -> hwframe -> data		1609337						
ANR	1610426	Symbol	cuinfo . target_rect . left		1609337						
ANR	1610427	Symbol	format -> bitrate		1609337						
ANR	1610428	Symbol	avctx -> flags		1609337						
ANR	1610429	Symbol	cuinfo . ulNumDecodeSurfaces		1609337						
ANR	1610430	Symbol	surface_fmt		1609337						
ANR	1610431	Symbol	cuinfo . CodecType		1609337						
ANR	1610432	Symbol	AV_PIX_FMT_P016		1609337						
ANR	1610433	Symbol	& cuinfo		1609337						
ANR	1610434	Symbol	avctx -> color_primaries		1609337						
ANR	1610435	Symbol	NULL		1609337						
ANR	1610436	Symbol	AV_PIX_FMT_P010		1609337						
ANR	1610437	Symbol	format		1609337						
ANR	1610438	Symbol	format -> display_area . bottom		1609337						
ANR	1610439	Symbol	hwframe_ctx		1609337						
ANR	1610440	Symbol	avctx -> framerate . den		1609337						
ANR	1610441	Symbol	cuinfo . ulHeight		1609337						
ANR	1610442	Symbol	cuinfo		1609337						
ANR	1610443	Symbol	cuinfo . ulTargetHeight		1609337						
ANR	1610444	Symbol	* avctx		1609337						
ANR	1610445	Symbol	AVCOL_RANGE_JPEG		1609337						
ANR	1610446	Symbol	format -> coded_height		1609337						
ANR	1610447	Symbol	* format		1609337						
ANR	1610448	Symbol	avctx -> framerate		1609337						
ANR	1610449	Symbol	AV_PIX_FMT_NV12		1609337						
ANR	1610450	Symbol	cuinfo . DeinterlaceMode		1609337						
ANR	1610451	Symbol	format -> progressive_sequence		1609337						
ANR	1610452	Symbol	avctx -> sw_pix_fmt		1609337						
ANR	1610453	Symbol	cuinfo . ulTargetWidth		1609337						
ANR	1610454	Symbol	format -> frame_rate . numerator		1609337						
ANR	1610455	Symbol	avctx -> height		1609337						
ANR	1610456	Symbol	ctx -> cvdl -> cuvidCreateDecoder		1609337						
ANR	1610457	Symbol	format -> video_signal_description . transfer_characteristics		1609337						
ANR	1610458	Symbol	cuinfo . target_rect . bottom		1609337						
ANR	1610459	Symbol	hwframe_ctx -> width		1609337						
ANR	1610460	Symbol	& ctx -> cudecoder		1609337						
ANR	1610461	Symbol	* pix_fmts		1609337						
ANR	1610462	Symbol	ff_get_format		1609337						
ANR	1610463	Symbol	opaque		1609337						
ANR	1610464	Symbol	ctx -> hwframe		1609337						
ANR	1610465	Symbol	cudaVideoChromaFormat_420		1609337						
ANR	1610466	Symbol	AV_PIX_FMT_NONE		1609337						
ANR	1610467	Symbol	ctx -> cvdl -> cuvidDestroyDecoder		1609337						
ANR	1610468	Symbol	avctx -> priv_data		1609337						
ANR	1610469	Symbol	cuinfo . ulCreationFlags		1609337						
ANR	1610470	Symbol	* ctx -> hwframe		1609337						
ANR	1610471	Symbol	AV_CODEC_FLAG_INTERLACED_DCT		1609337						
ANR	1610472	Symbol	AVERROR		1609337						
ANR	1610473	Symbol	cudaVideoDeinterlaceMode_Weave		1609337						
ANR	1610474	Symbol	cuinfo . OutputFormat		1609337						
