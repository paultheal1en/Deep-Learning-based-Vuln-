command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3435879	File	/home/p4ultr4n/workplace/ReVeal/raw_code/ff_h264_queue_decode_slice_1.c								
ANR	3435880	Function	ff_h264_queue_decode_slice	1:0:0:4663							
ANR	3435881	FunctionDef	"ff_h264_queue_decode_slice (H264Context * h , const H2645NAL * nal)"		3435880	0					
ANR	3435882	CompoundStatement		3:0:69:4663	3435880	0					
ANR	3435883	IdentifierDeclStatement	H264SliceContext * sl = h -> slice_ctx + h -> nb_slice_ctx_queued ;	5:4:76:136	3435880	0	True				
ANR	3435884	IdentifierDecl	* sl = h -> slice_ctx + h -> nb_slice_ctx_queued		3435880	0					
ANR	3435885	IdentifierDeclType	H264SliceContext *		3435880	0					
ANR	3435886	Identifier	sl		3435880	1					
ANR	3435887	AssignmentExpression	* sl = h -> slice_ctx + h -> nb_slice_ctx_queued		3435880	2		=			
ANR	3435888	Identifier	sl		3435880	0					
ANR	3435889	AdditiveExpression	h -> slice_ctx + h -> nb_slice_ctx_queued		3435880	1		+			
ANR	3435890	PtrMemberAccess	h -> slice_ctx		3435880	0					
ANR	3435891	Identifier	h		3435880	0					
ANR	3435892	Identifier	slice_ctx		3435880	1					
ANR	3435893	PtrMemberAccess	h -> nb_slice_ctx_queued		3435880	1					
ANR	3435894	Identifier	h		3435880	0					
ANR	3435895	Identifier	nb_slice_ctx_queued		3435880	1					
ANR	3435896	IdentifierDeclStatement	int first_slice = sl == h -> slice_ctx && ! h -> current_slice ;	7:4:143:200	3435880	1	True				
ANR	3435897	IdentifierDecl	first_slice = sl == h -> slice_ctx && ! h -> current_slice		3435880	0					
ANR	3435898	IdentifierDeclType	int		3435880	0					
ANR	3435899	Identifier	first_slice		3435880	1					
ANR	3435900	AssignmentExpression	first_slice = sl == h -> slice_ctx && ! h -> current_slice		3435880	2		=			
ANR	3435901	Identifier	first_slice		3435880	0					
ANR	3435902	AndExpression	sl == h -> slice_ctx && ! h -> current_slice		3435880	1		&&			
ANR	3435903	EqualityExpression	sl == h -> slice_ctx		3435880	0		==			
ANR	3435904	Identifier	sl		3435880	0					
ANR	3435905	PtrMemberAccess	h -> slice_ctx		3435880	1					
ANR	3435906	Identifier	h		3435880	0					
ANR	3435907	Identifier	slice_ctx		3435880	1					
ANR	3435908	UnaryOperationExpression	! h -> current_slice		3435880	1					
ANR	3435909	UnaryOperator	!		3435880	0					
ANR	3435910	PtrMemberAccess	h -> current_slice		3435880	1					
ANR	3435911	Identifier	h		3435880	0					
ANR	3435912	Identifier	current_slice		3435880	1					
ANR	3435913	IdentifierDeclStatement	int ret ;	9:4:207:214	3435880	2	True				
ANR	3435914	IdentifierDecl	ret		3435880	0					
ANR	3435915	IdentifierDeclType	int		3435880	0					
ANR	3435916	Identifier	ret		3435880	1					
ANR	3435917	ExpressionStatement	sl -> gb = nal -> gb	13:4:223:239	3435880	3	True				
ANR	3435918	AssignmentExpression	sl -> gb = nal -> gb		3435880	0		=			
ANR	3435919	PtrMemberAccess	sl -> gb		3435880	0					
ANR	3435920	Identifier	sl		3435880	0					
ANR	3435921	Identifier	gb		3435880	1					
ANR	3435922	PtrMemberAccess	nal -> gb		3435880	1					
ANR	3435923	Identifier	nal		3435880	0					
ANR	3435924	Identifier	gb		3435880	1					
ANR	3435925	ExpressionStatement	"ret = h264_slice_header_parse ( h , sl , nal )"	17:4:248:289	3435880	4	True				
ANR	3435926	AssignmentExpression	"ret = h264_slice_header_parse ( h , sl , nal )"		3435880	0		=			
ANR	3435927	Identifier	ret		3435880	0					
ANR	3435928	CallExpression	"h264_slice_header_parse ( h , sl , nal )"		3435880	1					
ANR	3435929	Callee	h264_slice_header_parse		3435880	0					
ANR	3435930	Identifier	h264_slice_header_parse		3435880	0					
ANR	3435931	ArgumentList	h		3435880	1					
ANR	3435932	Argument	h		3435880	0					
ANR	3435933	Identifier	h		3435880	0					
ANR	3435934	Argument	sl		3435880	1					
ANR	3435935	Identifier	sl		3435880	0					
ANR	3435936	Argument	nal		3435880	2					
ANR	3435937	Identifier	nal		3435880	0					
ANR	3435938	IfStatement	if ( ret < 0 )		3435880	5					
ANR	3435939	Condition	ret < 0	19:8:300:306	3435880	0	True				
ANR	3435940	RelationalExpression	ret < 0		3435880	0		<			
ANR	3435941	Identifier	ret		3435880	0					
ANR	3435942	PrimaryExpression	0		3435880	1					
ANR	3435943	ReturnStatement	return ret ;	21:8:318:328	3435880	1	True				
ANR	3435944	Identifier	ret		3435880	0					
ANR	3435945	IfStatement	if ( sl -> redundant_pic_count > 0 )		3435880	6					
ANR	3435946	Condition	sl -> redundant_pic_count > 0	27:8:376:402	3435880	0	True				
ANR	3435947	RelationalExpression	sl -> redundant_pic_count > 0		3435880	0		>			
ANR	3435948	PtrMemberAccess	sl -> redundant_pic_count		3435880	0					
ANR	3435949	Identifier	sl		3435880	0					
ANR	3435950	Identifier	redundant_pic_count		3435880	1					
ANR	3435951	PrimaryExpression	0		3435880	1					
ANR	3435952	ReturnStatement	return 0 ;	29:8:414:422	3435880	1	True				
ANR	3435953	PrimaryExpression	0		3435880	0					
ANR	3435954	IfStatement	if ( sl -> first_mb_addr == 0 || ! h -> current_slice )		3435880	7					
ANR	3435955	Condition	sl -> first_mb_addr == 0 || ! h -> current_slice	33:8:435:477	3435880	0	True				
ANR	3435956	OrExpression	sl -> first_mb_addr == 0 || ! h -> current_slice		3435880	0		||			
ANR	3435957	EqualityExpression	sl -> first_mb_addr == 0		3435880	0		==			
ANR	3435958	PtrMemberAccess	sl -> first_mb_addr		3435880	0					
ANR	3435959	Identifier	sl		3435880	0					
ANR	3435960	Identifier	first_mb_addr		3435880	1					
ANR	3435961	PrimaryExpression	0		3435880	1					
ANR	3435962	UnaryOperationExpression	! h -> current_slice		3435880	1					
ANR	3435963	UnaryOperator	!		3435880	0					
ANR	3435964	PtrMemberAccess	h -> current_slice		3435880	1					
ANR	3435965	Identifier	h		3435880	0					
ANR	3435966	Identifier	current_slice		3435880	1					
ANR	3435967	CompoundStatement		31:53:410:410	3435880	1					
ANR	3435968	IfStatement	if ( h -> setup_finished )		3435880	0					
ANR	3435969	Condition	h -> setup_finished	35:12:495:511	3435880	0	True				
ANR	3435970	PtrMemberAccess	h -> setup_finished		3435880	0					
ANR	3435971	Identifier	h		3435880	0					
ANR	3435972	Identifier	setup_finished		3435880	1					
ANR	3435973	CompoundStatement		33:31:444:444	3435880	1					
ANR	3435974	ExpressionStatement	"av_log ( h -> avctx , AV_LOG_ERROR , ""Too many fields\\n"" )"	37:12:529:580	3435880	0	True				
ANR	3435975	CallExpression	"av_log ( h -> avctx , AV_LOG_ERROR , ""Too many fields\\n"" )"		3435880	0					
ANR	3435976	Callee	av_log		3435880	0					
ANR	3435977	Identifier	av_log		3435880	0					
ANR	3435978	ArgumentList	h -> avctx		3435880	1					
ANR	3435979	Argument	h -> avctx		3435880	0					
ANR	3435980	PtrMemberAccess	h -> avctx		3435880	0					
ANR	3435981	Identifier	h		3435880	0					
ANR	3435982	Identifier	avctx		3435880	1					
ANR	3435983	Argument	AV_LOG_ERROR		3435880	1					
ANR	3435984	Identifier	AV_LOG_ERROR		3435880	0					
ANR	3435985	Argument	"""Too many fields\\n"""		3435880	2					
ANR	3435986	PrimaryExpression	"""Too many fields\\n"""		3435880	0					
ANR	3435987	ReturnStatement	return AVERROR_INVALIDDATA ;	39:12:595:621	3435880	1	True				
ANR	3435988	Identifier	AVERROR_INVALIDDATA		3435880	0					
ANR	3435989	IfStatement	if ( sl -> first_mb_addr == 0 )		3435880	8					
ANR	3435990	Condition	sl -> first_mb_addr == 0	47:8:652:673	3435880	0	True				
ANR	3435991	EqualityExpression	sl -> first_mb_addr == 0		3435880	0		==			
ANR	3435992	PtrMemberAccess	sl -> first_mb_addr		3435880	0					
ANR	3435993	Identifier	sl		3435880	0					
ANR	3435994	Identifier	first_mb_addr		3435880	1					
ANR	3435995	PrimaryExpression	0		3435880	1					
ANR	3435996	CompoundStatement		45:32:606:606	3435880	1					
ANR	3435997	IfStatement	if ( h -> current_slice )		3435880	0					
ANR	3435998	Condition	h -> current_slice	49:12:732:747	3435880	0	True				
ANR	3435999	PtrMemberAccess	h -> current_slice		3435880	0					
ANR	3436000	Identifier	h		3435880	0					
ANR	3436001	Identifier	current_slice		3435880	1					
ANR	3436002	CompoundStatement		47:30:680:680	3435880	1					
ANR	3436003	IfStatement	if ( h -> nb_slice_ctx_queued )		3435880	0					
ANR	3436004	Condition	h -> nb_slice_ctx_queued	55:16:870:891	3435880	0	True				
ANR	3436005	PtrMemberAccess	h -> nb_slice_ctx_queued		3435880	0					
ANR	3436006	Identifier	h		3435880	0					
ANR	3436007	Identifier	nb_slice_ctx_queued		3435880	1					
ANR	3436008	CompoundStatement		55:16:843:867	3435880	1					
ANR	3436009	IdentifierDeclStatement	H264SliceContext tmp_ctx ;	57:16:913:937	3435880	0	True				
ANR	3436010	IdentifierDecl	tmp_ctx		3435880	0					
ANR	3436011	IdentifierDeclType	H264SliceContext		3435880	0					
ANR	3436012	Identifier	tmp_ctx		3435880	1					
ANR	3436013	ExpressionStatement	ret = ff_h264_execute_decode_slices ( h )	61:16:958:996	3435880	1	True				
ANR	3436014	AssignmentExpression	ret = ff_h264_execute_decode_slices ( h )		3435880	0		=			
ANR	3436015	Identifier	ret		3435880	0					
ANR	3436016	CallExpression	ff_h264_execute_decode_slices ( h )		3435880	1					
ANR	3436017	Callee	ff_h264_execute_decode_slices		3435880	0					
ANR	3436018	Identifier	ff_h264_execute_decode_slices		3435880	0					
ANR	3436019	ArgumentList	h		3435880	1					
ANR	3436020	Argument	h		3435880	0					
ANR	3436021	Identifier	h		3435880	0					
ANR	3436022	IfStatement	if ( ret < 0 && ( h -> avctx -> err_recognition & AV_EF_EXPLODE ) )		3435880	2					
ANR	3436023	Condition	ret < 0 && ( h -> avctx -> err_recognition & AV_EF_EXPLODE )	63:20:1019:1072	3435880	0	True				
ANR	3436024	AndExpression	ret < 0 && ( h -> avctx -> err_recognition & AV_EF_EXPLODE )		3435880	0		&&			
ANR	3436025	RelationalExpression	ret < 0		3435880	0		<			
ANR	3436026	Identifier	ret		3435880	0					
ANR	3436027	PrimaryExpression	0		3435880	1					
ANR	3436028	BitAndExpression	h -> avctx -> err_recognition & AV_EF_EXPLODE		3435880	1		&			
ANR	3436029	PtrMemberAccess	h -> avctx -> err_recognition		3435880	0					
ANR	3436030	PtrMemberAccess	h -> avctx		3435880	0					
ANR	3436031	Identifier	h		3435880	0					
ANR	3436032	Identifier	avctx		3435880	1					
ANR	3436033	Identifier	err_recognition		3435880	1					
ANR	3436034	Identifier	AV_EF_EXPLODE		3435880	1					
ANR	3436035	ReturnStatement	return ret ;	65:20:1096:1106	3435880	1	True				
ANR	3436036	Identifier	ret		3435880	0					
ANR	3436037	ExpressionStatement	"memcpy ( & tmp_ctx , h -> slice_ctx , sizeof ( tmp_ctx ) )"	69:16:1127:1174	3435880	3	True				
ANR	3436038	CallExpression	"memcpy ( & tmp_ctx , h -> slice_ctx , sizeof ( tmp_ctx ) )"		3435880	0					
ANR	3436039	Callee	memcpy		3435880	0					
ANR	3436040	Identifier	memcpy		3435880	0					
ANR	3436041	ArgumentList	& tmp_ctx		3435880	1					
ANR	3436042	Argument	& tmp_ctx		3435880	0					
ANR	3436043	UnaryOperationExpression	& tmp_ctx		3435880	0					
ANR	3436044	UnaryOperator	&		3435880	0					
ANR	3436045	Identifier	tmp_ctx		3435880	1					
ANR	3436046	Argument	h -> slice_ctx		3435880	1					
ANR	3436047	PtrMemberAccess	h -> slice_ctx		3435880	0					
ANR	3436048	Identifier	h		3435880	0					
ANR	3436049	Identifier	slice_ctx		3435880	1					
ANR	3436050	Argument	sizeof ( tmp_ctx )		3435880	2					
ANR	3436051	SizeofExpression	sizeof ( tmp_ctx )		3435880	0					
ANR	3436052	Sizeof	sizeof		3435880	0					
ANR	3436053	SizeofOperand	tmp_ctx		3435880	1					
ANR	3436054	ExpressionStatement	"memcpy ( h -> slice_ctx , sl , sizeof ( tmp_ctx ) )"	71:16:1193:1234	3435880	4	True				
ANR	3436055	CallExpression	"memcpy ( h -> slice_ctx , sl , sizeof ( tmp_ctx ) )"		3435880	0					
ANR	3436056	Callee	memcpy		3435880	0					
ANR	3436057	Identifier	memcpy		3435880	0					
ANR	3436058	ArgumentList	h -> slice_ctx		3435880	1					
ANR	3436059	Argument	h -> slice_ctx		3435880	0					
ANR	3436060	PtrMemberAccess	h -> slice_ctx		3435880	0					
ANR	3436061	Identifier	h		3435880	0					
ANR	3436062	Identifier	slice_ctx		3435880	1					
ANR	3436063	Argument	sl		3435880	1					
ANR	3436064	Identifier	sl		3435880	0					
ANR	3436065	Argument	sizeof ( tmp_ctx )		3435880	2					
ANR	3436066	SizeofExpression	sizeof ( tmp_ctx )		3435880	0					
ANR	3436067	Sizeof	sizeof		3435880	0					
ANR	3436068	SizeofOperand	tmp_ctx		3435880	1					
ANR	3436069	ExpressionStatement	"memcpy ( sl , & tmp_ctx , sizeof ( tmp_ctx ) )"	73:16:1253:1290	3435880	5	True				
ANR	3436070	CallExpression	"memcpy ( sl , & tmp_ctx , sizeof ( tmp_ctx ) )"		3435880	0					
ANR	3436071	Callee	memcpy		3435880	0					
ANR	3436072	Identifier	memcpy		3435880	0					
ANR	3436073	ArgumentList	sl		3435880	1					
ANR	3436074	Argument	sl		3435880	0					
ANR	3436075	Identifier	sl		3435880	0					
ANR	3436076	Argument	& tmp_ctx		3435880	1					
ANR	3436077	UnaryOperationExpression	& tmp_ctx		3435880	0					
ANR	3436078	UnaryOperator	&		3435880	0					
ANR	3436079	Identifier	tmp_ctx		3435880	1					
ANR	3436080	Argument	sizeof ( tmp_ctx )		3435880	2					
ANR	3436081	SizeofExpression	sizeof ( tmp_ctx )		3435880	0					
ANR	3436082	Sizeof	sizeof		3435880	0					
ANR	3436083	SizeofOperand	tmp_ctx		3435880	1					
ANR	3436084	ExpressionStatement	sl = h -> slice_ctx	75:16:1309:1326	3435880	6	True				
ANR	3436085	AssignmentExpression	sl = h -> slice_ctx		3435880	0		=			
ANR	3436086	Identifier	sl		3435880	0					
ANR	3436087	PtrMemberAccess	h -> slice_ctx		3435880	1					
ANR	3436088	Identifier	h		3435880	0					
ANR	3436089	Identifier	slice_ctx		3435880	1					
ANR	3436090	IfStatement	if ( h -> cur_pic_ptr && FIELD_PICTURE ( h ) && h -> first_field )		3435880	1					
ANR	3436091	Condition	h -> cur_pic_ptr && FIELD_PICTURE ( h ) && h -> first_field	81:16:1362:1413	3435880	0	True				
ANR	3436092	AndExpression	h -> cur_pic_ptr && FIELD_PICTURE ( h ) && h -> first_field		3435880	0		&&			
ANR	3436093	PtrMemberAccess	h -> cur_pic_ptr		3435880	0					
ANR	3436094	Identifier	h		3435880	0					
ANR	3436095	Identifier	cur_pic_ptr		3435880	1					
ANR	3436096	AndExpression	FIELD_PICTURE ( h ) && h -> first_field		3435880	1		&&			
ANR	3436097	CallExpression	FIELD_PICTURE ( h )		3435880	0					
ANR	3436098	Callee	FIELD_PICTURE		3435880	0					
ANR	3436099	Identifier	FIELD_PICTURE		3435880	0					
ANR	3436100	ArgumentList	h		3435880	1					
ANR	3436101	Argument	h		3435880	0					
ANR	3436102	Identifier	h		3435880	0					
ANR	3436103	PtrMemberAccess	h -> first_field		3435880	1					
ANR	3436104	Identifier	h		3435880	0					
ANR	3436105	Identifier	first_field		3435880	1					
ANR	3436106	CompoundStatement		79:70:1346:1346	3435880	1					
ANR	3436107	ExpressionStatement	"ret = ff_h264_field_end ( h , h -> slice_ctx , 1 )"	83:16:1435:1478	3435880	0	True				
ANR	3436108	AssignmentExpression	"ret = ff_h264_field_end ( h , h -> slice_ctx , 1 )"		3435880	0		=			
ANR	3436109	Identifier	ret		3435880	0					
ANR	3436110	CallExpression	"ff_h264_field_end ( h , h -> slice_ctx , 1 )"		3435880	1					
ANR	3436111	Callee	ff_h264_field_end		3435880	0					
ANR	3436112	Identifier	ff_h264_field_end		3435880	0					
ANR	3436113	ArgumentList	h		3435880	1					
ANR	3436114	Argument	h		3435880	0					
ANR	3436115	Identifier	h		3435880	0					
ANR	3436116	Argument	h -> slice_ctx		3435880	1					
ANR	3436117	PtrMemberAccess	h -> slice_ctx		3435880	0					
ANR	3436118	Identifier	h		3435880	0					
ANR	3436119	Identifier	slice_ctx		3435880	1					
ANR	3436120	Argument	1		3435880	2					
ANR	3436121	PrimaryExpression	1		3435880	0					
ANR	3436122	IfStatement	if ( ret < 0 )		3435880	1					
ANR	3436123	Condition	ret < 0	85:20:1501:1507	3435880	0	True				
ANR	3436124	RelationalExpression	ret < 0		3435880	0		<			
ANR	3436125	Identifier	ret		3435880	0					
ANR	3436126	PrimaryExpression	0		3435880	1					
ANR	3436127	ReturnStatement	return ret ;	87:20:1531:1541	3435880	1	True				
ANR	3436128	Identifier	ret		3435880	0					
ANR	3436129	ElseStatement	else		3435880	0					
ANR	3436130	IfStatement	if ( h -> cur_pic_ptr && ! FIELD_PICTURE ( h ) && ! h -> first_field && h -> nal_unit_type == H264_NAL_IDR_SLICE )		3435880	0					
ANR	3436131	Condition	h -> cur_pic_ptr && ! FIELD_PICTURE ( h ) && ! h -> first_field && h -> nal_unit_type == H264_NAL_IDR_SLICE	89:23:1567:1663	3435880	0	True				
ANR	3436132	AndExpression	h -> cur_pic_ptr && ! FIELD_PICTURE ( h ) && ! h -> first_field && h -> nal_unit_type == H264_NAL_IDR_SLICE		3435880	0		&&			
ANR	3436133	PtrMemberAccess	h -> cur_pic_ptr		3435880	0					
ANR	3436134	Identifier	h		3435880	0					
ANR	3436135	Identifier	cur_pic_ptr		3435880	1					
ANR	3436136	AndExpression	! FIELD_PICTURE ( h ) && ! h -> first_field && h -> nal_unit_type == H264_NAL_IDR_SLICE		3435880	1		&&			
ANR	3436137	UnaryOperationExpression	! FIELD_PICTURE ( h )		3435880	0					
ANR	3436138	UnaryOperator	!		3435880	0					
ANR	3436139	CallExpression	FIELD_PICTURE ( h )		3435880	1					
ANR	3436140	Callee	FIELD_PICTURE		3435880	0					
ANR	3436141	Identifier	FIELD_PICTURE		3435880	0					
ANR	3436142	ArgumentList	h		3435880	1					
ANR	3436143	Argument	h		3435880	0					
ANR	3436144	Identifier	h		3435880	0					
ANR	3436145	AndExpression	! h -> first_field && h -> nal_unit_type == H264_NAL_IDR_SLICE		3435880	1		&&			
ANR	3436146	UnaryOperationExpression	! h -> first_field		3435880	0					
ANR	3436147	UnaryOperator	!		3435880	0					
ANR	3436148	PtrMemberAccess	h -> first_field		3435880	1					
ANR	3436149	Identifier	h		3435880	0					
ANR	3436150	Identifier	first_field		3435880	1					
ANR	3436151	EqualityExpression	h -> nal_unit_type == H264_NAL_IDR_SLICE		3435880	1		==			
ANR	3436152	PtrMemberAccess	h -> nal_unit_type		3435880	0					
ANR	3436153	Identifier	h		3435880	0					
ANR	3436154	Identifier	nal_unit_type		3435880	1					
ANR	3436155	Identifier	H264_NAL_IDR_SLICE		3435880	1					
ANR	3436156	CompoundStatement		87:122:1596:1596	3435880	1					
ANR	3436157	ExpressionStatement	"av_log ( h , AV_LOG_WARNING , ""Broken frame packetizing\\n"" )"	91:16:1685:1740	3435880	0	True				
ANR	3436158	CallExpression	"av_log ( h , AV_LOG_WARNING , ""Broken frame packetizing\\n"" )"		3435880	0					
ANR	3436159	Callee	av_log		3435880	0					
ANR	3436160	Identifier	av_log		3435880	0					
ANR	3436161	ArgumentList	h		3435880	1					
ANR	3436162	Argument	h		3435880	0					
ANR	3436163	Identifier	h		3435880	0					
ANR	3436164	Argument	AV_LOG_WARNING		3435880	1					
ANR	3436165	Identifier	AV_LOG_WARNING		3435880	0					
ANR	3436166	Argument	"""Broken frame packetizing\\n"""		3435880	2					
ANR	3436167	PrimaryExpression	"""Broken frame packetizing\\n"""		3435880	0					
ANR	3436168	ExpressionStatement	"ret = ff_h264_field_end ( h , h -> slice_ctx , 1 )"	93:16:1759:1802	3435880	1	True				
ANR	3436169	AssignmentExpression	"ret = ff_h264_field_end ( h , h -> slice_ctx , 1 )"		3435880	0		=			
ANR	3436170	Identifier	ret		3435880	0					
ANR	3436171	CallExpression	"ff_h264_field_end ( h , h -> slice_ctx , 1 )"		3435880	1					
ANR	3436172	Callee	ff_h264_field_end		3435880	0					
ANR	3436173	Identifier	ff_h264_field_end		3435880	0					
ANR	3436174	ArgumentList	h		3435880	1					
ANR	3436175	Argument	h		3435880	0					
ANR	3436176	Identifier	h		3435880	0					
ANR	3436177	Argument	h -> slice_ctx		3435880	1					
ANR	3436178	PtrMemberAccess	h -> slice_ctx		3435880	0					
ANR	3436179	Identifier	h		3435880	0					
ANR	3436180	Identifier	slice_ctx		3435880	1					
ANR	3436181	Argument	1		3435880	2					
ANR	3436182	PrimaryExpression	1		3435880	0					
ANR	3436183	ExpressionStatement	"ff_thread_report_progress ( & h -> cur_pic_ptr -> tf , INT_MAX , 0 )"	95:16:1821:1879	3435880	2	True				
ANR	3436184	CallExpression	"ff_thread_report_progress ( & h -> cur_pic_ptr -> tf , INT_MAX , 0 )"		3435880	0					
ANR	3436185	Callee	ff_thread_report_progress		3435880	0					
ANR	3436186	Identifier	ff_thread_report_progress		3435880	0					
ANR	3436187	ArgumentList	& h -> cur_pic_ptr -> tf		3435880	1					
ANR	3436188	Argument	& h -> cur_pic_ptr -> tf		3435880	0					
ANR	3436189	UnaryOperationExpression	& h -> cur_pic_ptr -> tf		3435880	0					
ANR	3436190	UnaryOperator	&		3435880	0					
ANR	3436191	PtrMemberAccess	h -> cur_pic_ptr -> tf		3435880	1					
ANR	3436192	PtrMemberAccess	h -> cur_pic_ptr		3435880	0					
ANR	3436193	Identifier	h		3435880	0					
ANR	3436194	Identifier	cur_pic_ptr		3435880	1					
ANR	3436195	Identifier	tf		3435880	1					
ANR	3436196	Argument	INT_MAX		3435880	1					
ANR	3436197	Identifier	INT_MAX		3435880	0					
ANR	3436198	Argument	0		3435880	2					
ANR	3436199	PrimaryExpression	0		3435880	0					
ANR	3436200	ExpressionStatement	"ff_thread_report_progress ( & h -> cur_pic_ptr -> tf , INT_MAX , 1 )"	97:16:1898:1956	3435880	3	True				
ANR	3436201	CallExpression	"ff_thread_report_progress ( & h -> cur_pic_ptr -> tf , INT_MAX , 1 )"		3435880	0					
ANR	3436202	Callee	ff_thread_report_progress		3435880	0					
ANR	3436203	Identifier	ff_thread_report_progress		3435880	0					
ANR	3436204	ArgumentList	& h -> cur_pic_ptr -> tf		3435880	1					
ANR	3436205	Argument	& h -> cur_pic_ptr -> tf		3435880	0					
ANR	3436206	UnaryOperationExpression	& h -> cur_pic_ptr -> tf		3435880	0					
ANR	3436207	UnaryOperator	&		3435880	0					
ANR	3436208	PtrMemberAccess	h -> cur_pic_ptr -> tf		3435880	1					
ANR	3436209	PtrMemberAccess	h -> cur_pic_ptr		3435880	0					
ANR	3436210	Identifier	h		3435880	0					
ANR	3436211	Identifier	cur_pic_ptr		3435880	1					
ANR	3436212	Identifier	tf		3435880	1					
ANR	3436213	Argument	INT_MAX		3435880	1					
ANR	3436214	Identifier	INT_MAX		3435880	0					
ANR	3436215	Argument	1		3435880	2					
ANR	3436216	PrimaryExpression	1		3435880	0					
ANR	3436217	ExpressionStatement	h -> cur_pic_ptr = NULL	99:16:1975:1996	3435880	4	True				
ANR	3436218	AssignmentExpression	h -> cur_pic_ptr = NULL		3435880	0		=			
ANR	3436219	PtrMemberAccess	h -> cur_pic_ptr		3435880	0					
ANR	3436220	Identifier	h		3435880	0					
ANR	3436221	Identifier	cur_pic_ptr		3435880	1					
ANR	3436222	Identifier	NULL		3435880	1					
ANR	3436223	IfStatement	if ( ret < 0 )		3435880	5					
ANR	3436224	Condition	ret < 0	101:20:2019:2025	3435880	0	True				
ANR	3436225	RelationalExpression	ret < 0		3435880	0		<			
ANR	3436226	Identifier	ret		3435880	0					
ANR	3436227	PrimaryExpression	0		3435880	1					
ANR	3436228	ReturnStatement	return ret ;	103:20:2049:2059	3435880	1	True				
ANR	3436229	Identifier	ret		3435880	0					
ANR	3436230	ElseStatement	else		3435880	0					
ANR	3436231	ReturnStatement	return AVERROR_INVALIDDATA ;	107:16:2098:2124	3435880	0	True				
ANR	3436232	Identifier	AVERROR_INVALIDDATA		3435880	0					
ANR	3436233	IfStatement	if ( ! h -> first_field )		3435880	1					
ANR	3436234	Condition	! h -> first_field	113:12:2152:2166	3435880	0	True				
ANR	3436235	UnaryOperationExpression	! h -> first_field		3435880	0					
ANR	3436236	UnaryOperator	!		3435880	0					
ANR	3436237	PtrMemberAccess	h -> first_field		3435880	1					
ANR	3436238	Identifier	h		3435880	0					
ANR	3436239	Identifier	first_field		3435880	1					
ANR	3436240	CompoundStatement		111:29:2099:2099	3435880	1					
ANR	3436241	IfStatement	if ( h -> cur_pic_ptr && ! h -> droppable )		3435880	0					
ANR	3436242	Condition	h -> cur_pic_ptr && ! h -> droppable	115:16:2188:2218	3435880	0	True				
ANR	3436243	AndExpression	h -> cur_pic_ptr && ! h -> droppable		3435880	0		&&			
ANR	3436244	PtrMemberAccess	h -> cur_pic_ptr		3435880	0					
ANR	3436245	Identifier	h		3435880	0					
ANR	3436246	Identifier	cur_pic_ptr		3435880	1					
ANR	3436247	UnaryOperationExpression	! h -> droppable		3435880	1					
ANR	3436248	UnaryOperator	!		3435880	0					
ANR	3436249	PtrMemberAccess	h -> droppable		3435880	1					
ANR	3436250	Identifier	h		3435880	0					
ANR	3436251	Identifier	droppable		3435880	1					
ANR	3436252	CompoundStatement		113:49:2151:2151	3435880	1					
ANR	3436253	ExpressionStatement	"ff_thread_report_progress ( & h -> cur_pic_ptr -> tf , INT_MAX , h -> picture_structure == PICT_BOTTOM_FIELD )"	117:16:2240:2381	3435880	0	True				
ANR	3436254	CallExpression	"ff_thread_report_progress ( & h -> cur_pic_ptr -> tf , INT_MAX , h -> picture_structure == PICT_BOTTOM_FIELD )"		3435880	0					
ANR	3436255	Callee	ff_thread_report_progress		3435880	0					
ANR	3436256	Identifier	ff_thread_report_progress		3435880	0					
ANR	3436257	ArgumentList	& h -> cur_pic_ptr -> tf		3435880	1					
ANR	3436258	Argument	& h -> cur_pic_ptr -> tf		3435880	0					
ANR	3436259	UnaryOperationExpression	& h -> cur_pic_ptr -> tf		3435880	0					
ANR	3436260	UnaryOperator	&		3435880	0					
ANR	3436261	PtrMemberAccess	h -> cur_pic_ptr -> tf		3435880	1					
ANR	3436262	PtrMemberAccess	h -> cur_pic_ptr		3435880	0					
ANR	3436263	Identifier	h		3435880	0					
ANR	3436264	Identifier	cur_pic_ptr		3435880	1					
ANR	3436265	Identifier	tf		3435880	1					
ANR	3436266	Argument	INT_MAX		3435880	1					
ANR	3436267	Identifier	INT_MAX		3435880	0					
ANR	3436268	Argument	h -> picture_structure == PICT_BOTTOM_FIELD		3435880	2					
ANR	3436269	EqualityExpression	h -> picture_structure == PICT_BOTTOM_FIELD		3435880	0		==			
ANR	3436270	PtrMemberAccess	h -> picture_structure		3435880	0					
ANR	3436271	Identifier	h		3435880	0					
ANR	3436272	Identifier	picture_structure		3435880	1					
ANR	3436273	Identifier	PICT_BOTTOM_FIELD		3435880	1					
ANR	3436274	ExpressionStatement	h -> cur_pic_ptr = NULL	123:12:2411:2432	3435880	1	True				
ANR	3436275	AssignmentExpression	h -> cur_pic_ptr = NULL		3435880	0		=			
ANR	3436276	PtrMemberAccess	h -> cur_pic_ptr		3435880	0					
ANR	3436277	Identifier	h		3435880	0					
ANR	3436278	Identifier	cur_pic_ptr		3435880	1					
ANR	3436279	Identifier	NULL		3435880	1					
ANR	3436280	IfStatement	if ( ! h -> current_slice )		3435880	9					
ANR	3436281	Condition	! h -> current_slice	131:8:2463:2479	3435880	0	True				
ANR	3436282	UnaryOperationExpression	! h -> current_slice		3435880	0					
ANR	3436283	UnaryOperator	!		3435880	0					
ANR	3436284	PtrMemberAccess	h -> current_slice		3435880	1					
ANR	3436285	Identifier	h		3435880	0					
ANR	3436286	Identifier	current_slice		3435880	1					
ANR	3436287	ExpressionStatement	av_assert0 ( sl == h -> slice_ctx )	133:8:2491:2521	3435880	1	True				
ANR	3436288	CallExpression	av_assert0 ( sl == h -> slice_ctx )		3435880	0					
ANR	3436289	Callee	av_assert0		3435880	0					
ANR	3436290	Identifier	av_assert0		3435880	0					
ANR	3436291	ArgumentList	sl == h -> slice_ctx		3435880	1					
ANR	3436292	Argument	sl == h -> slice_ctx		3435880	0					
ANR	3436293	EqualityExpression	sl == h -> slice_ctx		3435880	0		==			
ANR	3436294	Identifier	sl		3435880	0					
ANR	3436295	PtrMemberAccess	h -> slice_ctx		3435880	1					
ANR	3436296	Identifier	h		3435880	0					
ANR	3436297	Identifier	slice_ctx		3435880	1					
ANR	3436298	IfStatement	if ( h -> current_slice == 0 && ! h -> first_field )		3435880	10					
ANR	3436299	Condition	h -> current_slice == 0 && ! h -> first_field	137:8:2534:2573	3435880	0	True				
ANR	3436300	AndExpression	h -> current_slice == 0 && ! h -> first_field		3435880	0		&&			
ANR	3436301	EqualityExpression	h -> current_slice == 0		3435880	0		==			
ANR	3436302	PtrMemberAccess	h -> current_slice		3435880	0					
ANR	3436303	Identifier	h		3435880	0					
ANR	3436304	Identifier	current_slice		3435880	1					
ANR	3436305	PrimaryExpression	0		3435880	1					
ANR	3436306	UnaryOperationExpression	! h -> first_field		3435880	1					
ANR	3436307	UnaryOperator	!		3435880	0					
ANR	3436308	PtrMemberAccess	h -> first_field		3435880	1					
ANR	3436309	Identifier	h		3435880	0					
ANR	3436310	Identifier	first_field		3435880	1					
ANR	3436311	CompoundStatement		135:50:2506:2506	3435880	1					
ANR	3436312	IfStatement	if ( ( h -> avctx -> skip_frame >= AVDISCARD_NONREF && ! h -> nal_ref_idc ) || ( h -> avctx -> skip_frame >= AVDISCARD_BIDIR && sl -> slice_type_nos == AV_PICTURE_TYPE_B ) || ( h -> avctx -> skip_frame >= AVDISCARD_NONINTRA && sl -> slice_type_nos != AV_PICTURE_TYPE_I ) || ( h -> avctx -> skip_frame >= AVDISCARD_NONKEY && h -> nal_unit_type != H264_NAL_IDR_SLICE && h -> sei . recovery_point . recovery_frame_cnt < 0 ) || h -> avctx -> skip_frame >= AVDISCARD_ALL )		3435880	0					
ANR	3436313	Condition	( h -> avctx -> skip_frame >= AVDISCARD_NONREF && ! h -> nal_ref_idc ) || ( h -> avctx -> skip_frame >= AVDISCARD_BIDIR && sl -> slice_type_nos == AV_PICTURE_TYPE_B ) || ( h -> avctx -> skip_frame >= AVDISCARD_NONINTRA && sl -> slice_type_nos != AV_PICTURE_TYPE_I ) || ( h -> avctx -> skip_frame >= AVDISCARD_NONKEY && h -> nal_unit_type != H264_NAL_IDR_SLICE && h -> sei . recovery_point . recovery_frame_cnt < 0 ) || h -> avctx -> skip_frame >= AVDISCARD_ALL	141:12:2605:3074	3435880	0	True				
ANR	3436314	OrExpression	( h -> avctx -> skip_frame >= AVDISCARD_NONREF && ! h -> nal_ref_idc ) || ( h -> avctx -> skip_frame >= AVDISCARD_BIDIR && sl -> slice_type_nos == AV_PICTURE_TYPE_B ) || ( h -> avctx -> skip_frame >= AVDISCARD_NONINTRA && sl -> slice_type_nos != AV_PICTURE_TYPE_I ) || ( h -> avctx -> skip_frame >= AVDISCARD_NONKEY && h -> nal_unit_type != H264_NAL_IDR_SLICE && h -> sei . recovery_point . recovery_frame_cnt < 0 ) || h -> avctx -> skip_frame >= AVDISCARD_ALL		3435880	0		||			
ANR	3436315	AndExpression	h -> avctx -> skip_frame >= AVDISCARD_NONREF && ! h -> nal_ref_idc		3435880	0		&&			
ANR	3436316	RelationalExpression	h -> avctx -> skip_frame >= AVDISCARD_NONREF		3435880	0		>=			
ANR	3436317	PtrMemberAccess	h -> avctx -> skip_frame		3435880	0					
ANR	3436318	PtrMemberAccess	h -> avctx		3435880	0					
ANR	3436319	Identifier	h		3435880	0					
ANR	3436320	Identifier	avctx		3435880	1					
ANR	3436321	Identifier	skip_frame		3435880	1					
ANR	3436322	Identifier	AVDISCARD_NONREF		3435880	1					
ANR	3436323	UnaryOperationExpression	! h -> nal_ref_idc		3435880	1					
ANR	3436324	UnaryOperator	!		3435880	0					
ANR	3436325	PtrMemberAccess	h -> nal_ref_idc		3435880	1					
ANR	3436326	Identifier	h		3435880	0					
ANR	3436327	Identifier	nal_ref_idc		3435880	1					
ANR	3436328	OrExpression	( h -> avctx -> skip_frame >= AVDISCARD_BIDIR && sl -> slice_type_nos == AV_PICTURE_TYPE_B ) || ( h -> avctx -> skip_frame >= AVDISCARD_NONINTRA && sl -> slice_type_nos != AV_PICTURE_TYPE_I ) || ( h -> avctx -> skip_frame >= AVDISCARD_NONKEY && h -> nal_unit_type != H264_NAL_IDR_SLICE && h -> sei . recovery_point . recovery_frame_cnt < 0 ) || h -> avctx -> skip_frame >= AVDISCARD_ALL		3435880	1		||			
ANR	3436329	AndExpression	h -> avctx -> skip_frame >= AVDISCARD_BIDIR && sl -> slice_type_nos == AV_PICTURE_TYPE_B		3435880	0		&&			
ANR	3436330	RelationalExpression	h -> avctx -> skip_frame >= AVDISCARD_BIDIR		3435880	0		>=			
ANR	3436331	PtrMemberAccess	h -> avctx -> skip_frame		3435880	0					
ANR	3436332	PtrMemberAccess	h -> avctx		3435880	0					
ANR	3436333	Identifier	h		3435880	0					
ANR	3436334	Identifier	avctx		3435880	1					
ANR	3436335	Identifier	skip_frame		3435880	1					
ANR	3436336	Identifier	AVDISCARD_BIDIR		3435880	1					
ANR	3436337	EqualityExpression	sl -> slice_type_nos == AV_PICTURE_TYPE_B		3435880	1		==			
ANR	3436338	PtrMemberAccess	sl -> slice_type_nos		3435880	0					
ANR	3436339	Identifier	sl		3435880	0					
ANR	3436340	Identifier	slice_type_nos		3435880	1					
ANR	3436341	Identifier	AV_PICTURE_TYPE_B		3435880	1					
ANR	3436342	OrExpression	( h -> avctx -> skip_frame >= AVDISCARD_NONINTRA && sl -> slice_type_nos != AV_PICTURE_TYPE_I ) || ( h -> avctx -> skip_frame >= AVDISCARD_NONKEY && h -> nal_unit_type != H264_NAL_IDR_SLICE && h -> sei . recovery_point . recovery_frame_cnt < 0 ) || h -> avctx -> skip_frame >= AVDISCARD_ALL		3435880	1		||			
ANR	3436343	AndExpression	h -> avctx -> skip_frame >= AVDISCARD_NONINTRA && sl -> slice_type_nos != AV_PICTURE_TYPE_I		3435880	0		&&			
ANR	3436344	RelationalExpression	h -> avctx -> skip_frame >= AVDISCARD_NONINTRA		3435880	0		>=			
ANR	3436345	PtrMemberAccess	h -> avctx -> skip_frame		3435880	0					
ANR	3436346	PtrMemberAccess	h -> avctx		3435880	0					
ANR	3436347	Identifier	h		3435880	0					
ANR	3436348	Identifier	avctx		3435880	1					
ANR	3436349	Identifier	skip_frame		3435880	1					
ANR	3436350	Identifier	AVDISCARD_NONINTRA		3435880	1					
ANR	3436351	EqualityExpression	sl -> slice_type_nos != AV_PICTURE_TYPE_I		3435880	1		!=			
ANR	3436352	PtrMemberAccess	sl -> slice_type_nos		3435880	0					
ANR	3436353	Identifier	sl		3435880	0					
ANR	3436354	Identifier	slice_type_nos		3435880	1					
ANR	3436355	Identifier	AV_PICTURE_TYPE_I		3435880	1					
ANR	3436356	OrExpression	( h -> avctx -> skip_frame >= AVDISCARD_NONKEY && h -> nal_unit_type != H264_NAL_IDR_SLICE && h -> sei . recovery_point . recovery_frame_cnt < 0 ) || h -> avctx -> skip_frame >= AVDISCARD_ALL		3435880	1		||			
ANR	3436357	AndExpression	h -> avctx -> skip_frame >= AVDISCARD_NONKEY && h -> nal_unit_type != H264_NAL_IDR_SLICE && h -> sei . recovery_point . recovery_frame_cnt < 0		3435880	0		&&			
ANR	3436358	RelationalExpression	h -> avctx -> skip_frame >= AVDISCARD_NONKEY		3435880	0		>=			
ANR	3436359	PtrMemberAccess	h -> avctx -> skip_frame		3435880	0					
ANR	3436360	PtrMemberAccess	h -> avctx		3435880	0					
ANR	3436361	Identifier	h		3435880	0					
ANR	3436362	Identifier	avctx		3435880	1					
ANR	3436363	Identifier	skip_frame		3435880	1					
ANR	3436364	Identifier	AVDISCARD_NONKEY		3435880	1					
ANR	3436365	AndExpression	h -> nal_unit_type != H264_NAL_IDR_SLICE && h -> sei . recovery_point . recovery_frame_cnt < 0		3435880	1		&&			
ANR	3436366	EqualityExpression	h -> nal_unit_type != H264_NAL_IDR_SLICE		3435880	0		!=			
ANR	3436367	PtrMemberAccess	h -> nal_unit_type		3435880	0					
ANR	3436368	Identifier	h		3435880	0					
ANR	3436369	Identifier	nal_unit_type		3435880	1					
ANR	3436370	Identifier	H264_NAL_IDR_SLICE		3435880	1					
ANR	3436371	RelationalExpression	h -> sei . recovery_point . recovery_frame_cnt < 0		3435880	1		<			
ANR	3436372	MemberAccess	h -> sei . recovery_point . recovery_frame_cnt		3435880	0					
ANR	3436373	MemberAccess	h -> sei . recovery_point		3435880	0					
ANR	3436374	PtrMemberAccess	h -> sei		3435880	0					
ANR	3436375	Identifier	h		3435880	0					
ANR	3436376	Identifier	sei		3435880	1					
ANR	3436377	Identifier	recovery_point		3435880	1					
ANR	3436378	Identifier	recovery_frame_cnt		3435880	1					
ANR	3436379	PrimaryExpression	0		3435880	1					
ANR	3436380	RelationalExpression	h -> avctx -> skip_frame >= AVDISCARD_ALL		3435880	1		>=			
ANR	3436381	PtrMemberAccess	h -> avctx -> skip_frame		3435880	0					
ANR	3436382	PtrMemberAccess	h -> avctx		3435880	0					
ANR	3436383	Identifier	h		3435880	0					
ANR	3436384	Identifier	avctx		3435880	1					
ANR	3436385	Identifier	skip_frame		3435880	1					
ANR	3436386	Identifier	AVDISCARD_ALL		3435880	1					
ANR	3436387	CompoundStatement		147:51:3007:3007	3435880	1					
ANR	3436388	ReturnStatement	return 0 ;	151:12:3092:3100	3435880	0	True				
ANR	3436389	PrimaryExpression	0		3435880	0					
ANR	3436390	IfStatement	if ( ! first_slice )		3435880	11					
ANR	3436391	Condition	! first_slice	159:8:3131:3142	3435880	0	True				
ANR	3436392	UnaryOperationExpression	! first_slice		3435880	0					
ANR	3436393	UnaryOperator	!		3435880	0					
ANR	3436394	Identifier	first_slice		3435880	1					
ANR	3436395	CompoundStatement		159:8:3086:3147	3435880	1					
ANR	3436396	IdentifierDeclStatement	const PPS * pps = ( const PPS * ) h -> ps . pps_list [ sl -> pps_id ] -> data ;	161:8:3156:3217	3435880	0	True				
ANR	3436397	IdentifierDecl	* pps = ( const PPS * ) h -> ps . pps_list [ sl -> pps_id ] -> data		3435880	0					
ANR	3436398	IdentifierDeclType	const PPS *		3435880	0					
ANR	3436399	Identifier	pps		3435880	1					
ANR	3436400	AssignmentExpression	* pps = ( const PPS * ) h -> ps . pps_list [ sl -> pps_id ] -> data		3435880	2		=			
ANR	3436401	Identifier	pps		3435880	0					
ANR	3436402	CastExpression	( const PPS * ) h -> ps . pps_list [ sl -> pps_id ] -> data		3435880	1					
ANR	3436403	CastTarget	const PPS *		3435880	0					
ANR	3436404	PtrMemberAccess	h -> ps . pps_list [ sl -> pps_id ] -> data		3435880	1					
ANR	3436405	ArrayIndexing	h -> ps . pps_list [ sl -> pps_id ]		3435880	0					
ANR	3436406	MemberAccess	h -> ps . pps_list		3435880	0					
ANR	3436407	PtrMemberAccess	h -> ps		3435880	0					
ANR	3436408	Identifier	h		3435880	0					
ANR	3436409	Identifier	ps		3435880	1					
ANR	3436410	Identifier	pps_list		3435880	1					
ANR	3436411	PtrMemberAccess	sl -> pps_id		3435880	1					
ANR	3436412	Identifier	sl		3435880	0					
ANR	3436413	Identifier	pps_id		3435880	1					
ANR	3436414	Identifier	data		3435880	1					
ANR	3436415	IfStatement	if ( h -> ps . pps -> sps_id != pps -> sps_id || h -> ps . pps -> transform_8x8_mode != pps -> transform_8x8_mode )		3435880	1					
ANR	3436416	Condition	h -> ps . pps -> sps_id != pps -> sps_id || h -> ps . pps -> transform_8x8_mode != pps -> transform_8x8_mode	165:12:3234:3338	3435880	0	True				
ANR	3436417	OrExpression	h -> ps . pps -> sps_id != pps -> sps_id || h -> ps . pps -> transform_8x8_mode != pps -> transform_8x8_mode		3435880	0		||			
ANR	3436418	EqualityExpression	h -> ps . pps -> sps_id != pps -> sps_id		3435880	0		!=			
ANR	3436419	PtrMemberAccess	h -> ps . pps -> sps_id		3435880	0					
ANR	3436420	MemberAccess	h -> ps . pps		3435880	0					
ANR	3436421	PtrMemberAccess	h -> ps		3435880	0					
ANR	3436422	Identifier	h		3435880	0					
ANR	3436423	Identifier	ps		3435880	1					
ANR	3436424	Identifier	pps		3435880	1					
ANR	3436425	Identifier	sps_id		3435880	1					
ANR	3436426	PtrMemberAccess	pps -> sps_id		3435880	1					
ANR	3436427	Identifier	pps		3435880	0					
ANR	3436428	Identifier	sps_id		3435880	1					
ANR	3436429	EqualityExpression	h -> ps . pps -> transform_8x8_mode != pps -> transform_8x8_mode		3435880	1		!=			
ANR	3436430	PtrMemberAccess	h -> ps . pps -> transform_8x8_mode		3435880	0					
ANR	3436431	MemberAccess	h -> ps . pps		3435880	0					
ANR	3436432	PtrMemberAccess	h -> ps		3435880	0					
ANR	3436433	Identifier	h		3435880	0					
ANR	3436434	Identifier	ps		3435880	1					
ANR	3436435	Identifier	pps		3435880	1					
ANR	3436436	Identifier	transform_8x8_mode		3435880	1					
ANR	3436437	PtrMemberAccess	pps -> transform_8x8_mode		3435880	1					
ANR	3436438	Identifier	pps		3435880	0					
ANR	3436439	Identifier	transform_8x8_mode		3435880	1					
ANR	3436440	CompoundStatement		167:55:3331:3331	3435880	1					
ANR	3436441	ExpressionStatement	"av_log ( h -> avctx , AV_LOG_ERROR , ""PPS changed between slices\\n"" )"	171:12:3416:3478	3435880	0	True				
ANR	3436442	CallExpression	"av_log ( h -> avctx , AV_LOG_ERROR , ""PPS changed between slices\\n"" )"		3435880	0					
ANR	3436443	Callee	av_log		3435880	0					
ANR	3436444	Identifier	av_log		3435880	0					
ANR	3436445	ArgumentList	h -> avctx		3435880	1					
ANR	3436446	Argument	h -> avctx		3435880	0					
ANR	3436447	PtrMemberAccess	h -> avctx		3435880	0					
ANR	3436448	Identifier	h		3435880	0					
ANR	3436449	Identifier	avctx		3435880	1					
ANR	3436450	Argument	AV_LOG_ERROR		3435880	1					
ANR	3436451	Identifier	AV_LOG_ERROR		3435880	0					
ANR	3436452	Argument	"""PPS changed between slices\\n"""		3435880	2					
ANR	3436453	PrimaryExpression	"""PPS changed between slices\\n"""		3435880	0					
ANR	3436454	ReturnStatement	return AVERROR_INVALIDDATA ;	173:12:3493:3519	3435880	1	True				
ANR	3436455	Identifier	AVERROR_INVALIDDATA		3435880	0					
ANR	3436456	IfStatement	if ( h -> ps . sps != ( const SPS * ) h -> ps . sps_list [ h -> ps . pps -> sps_id ] -> data )		3435880	2					
ANR	3436457	Condition	h -> ps . sps != ( const SPS * ) h -> ps . sps_list [ h -> ps . pps -> sps_id ] -> data	177:12:3545:3608	3435880	0	True				
ANR	3436458	EqualityExpression	h -> ps . sps != ( const SPS * ) h -> ps . sps_list [ h -> ps . pps -> sps_id ] -> data		3435880	0		!=			
ANR	3436459	MemberAccess	h -> ps . sps		3435880	0					
ANR	3436460	PtrMemberAccess	h -> ps		3435880	0					
ANR	3436461	Identifier	h		3435880	0					
ANR	3436462	Identifier	ps		3435880	1					
ANR	3436463	Identifier	sps		3435880	1					
ANR	3436464	CastExpression	( const SPS * ) h -> ps . sps_list [ h -> ps . pps -> sps_id ] -> data		3435880	1					
ANR	3436465	CastTarget	const SPS *		3435880	0					
ANR	3436466	PtrMemberAccess	h -> ps . sps_list [ h -> ps . pps -> sps_id ] -> data		3435880	1					
ANR	3436467	ArrayIndexing	h -> ps . sps_list [ h -> ps . pps -> sps_id ]		3435880	0					
ANR	3436468	MemberAccess	h -> ps . sps_list		3435880	0					
ANR	3436469	PtrMemberAccess	h -> ps		3435880	0					
ANR	3436470	Identifier	h		3435880	0					
ANR	3436471	Identifier	ps		3435880	1					
ANR	3436472	Identifier	sps_list		3435880	1					
ANR	3436473	PtrMemberAccess	h -> ps . pps -> sps_id		3435880	1					
ANR	3436474	MemberAccess	h -> ps . pps		3435880	0					
ANR	3436475	PtrMemberAccess	h -> ps		3435880	0					
ANR	3436476	Identifier	h		3435880	0					
ANR	3436477	Identifier	ps		3435880	1					
ANR	3436478	Identifier	pps		3435880	1					
ANR	3436479	Identifier	sps_id		3435880	1					
ANR	3436480	Identifier	data		3435880	1					
ANR	3436481	CompoundStatement		175:78:3541:3541	3435880	1					
ANR	3436482	ExpressionStatement	"av_log ( h -> avctx , AV_LOG_ERROR , ""SPS changed in the middle of the frame\\n"" )"	179:12:3626:3716	3435880	0	True				
ANR	3436483	CallExpression	"av_log ( h -> avctx , AV_LOG_ERROR , ""SPS changed in the middle of the frame\\n"" )"		3435880	0					
ANR	3436484	Callee	av_log		3435880	0					
ANR	3436485	Identifier	av_log		3435880	0					
ANR	3436486	ArgumentList	h -> avctx		3435880	1					
ANR	3436487	Argument	h -> avctx		3435880	0					
ANR	3436488	PtrMemberAccess	h -> avctx		3435880	0					
ANR	3436489	Identifier	h		3435880	0					
ANR	3436490	Identifier	avctx		3435880	1					
ANR	3436491	Argument	AV_LOG_ERROR		3435880	1					
ANR	3436492	Identifier	AV_LOG_ERROR		3435880	0					
ANR	3436493	Argument	"""SPS changed in the middle of the frame\\n"""		3435880	2					
ANR	3436494	PrimaryExpression	"""SPS changed in the middle of the frame\\n"""		3435880	0					
ANR	3436495	ReturnStatement	return AVERROR_INVALIDDATA ;	183:12:3731:3757	3435880	1	True				
ANR	3436496	Identifier	AVERROR_INVALIDDATA		3435880	0					
ANR	3436497	IfStatement	if ( h -> current_slice == 0 )		3435880	12					
ANR	3436498	Condition	h -> current_slice == 0	191:8:3788:3808	3435880	0	True				
ANR	3436499	EqualityExpression	h -> current_slice == 0		3435880	0		==			
ANR	3436500	PtrMemberAccess	h -> current_slice		3435880	0					
ANR	3436501	Identifier	h		3435880	0					
ANR	3436502	Identifier	current_slice		3435880	1					
ANR	3436503	PrimaryExpression	0		3435880	1					
ANR	3436504	CompoundStatement		189:31:3741:3741	3435880	1					
ANR	3436505	ExpressionStatement	"ret = h264_field_start ( h , sl , nal , first_slice )"	193:8:3822:3869	3435880	0	True				
ANR	3436506	AssignmentExpression	"ret = h264_field_start ( h , sl , nal , first_slice )"		3435880	0		=			
ANR	3436507	Identifier	ret		3435880	0					
ANR	3436508	CallExpression	"h264_field_start ( h , sl , nal , first_slice )"		3435880	1					
ANR	3436509	Callee	h264_field_start		3435880	0					
ANR	3436510	Identifier	h264_field_start		3435880	0					
ANR	3436511	ArgumentList	h		3435880	1					
ANR	3436512	Argument	h		3435880	0					
ANR	3436513	Identifier	h		3435880	0					
ANR	3436514	Argument	sl		3435880	1					
ANR	3436515	Identifier	sl		3435880	0					
ANR	3436516	Argument	nal		3435880	2					
ANR	3436517	Identifier	nal		3435880	0					
ANR	3436518	Argument	first_slice		3435880	3					
ANR	3436519	Identifier	first_slice		3435880	0					
ANR	3436520	IfStatement	if ( ret < 0 )		3435880	1					
ANR	3436521	Condition	ret < 0	195:12:3884:3890	3435880	0	True				
ANR	3436522	RelationalExpression	ret < 0		3435880	0		<			
ANR	3436523	Identifier	ret		3435880	0					
ANR	3436524	PrimaryExpression	0		3435880	1					
ANR	3436525	ReturnStatement	return ret ;	197:12:3906:3916	3435880	1	True				
ANR	3436526	Identifier	ret		3435880	0					
ANR	3436527	ElseStatement	else		3435880	0					
ANR	3436528	CompoundStatement		197:11:3860:3860	3435880	0					
ANR	3436529	IfStatement	if ( h -> picture_structure != sl -> picture_structure || h -> droppable != ( nal -> ref_idc == 0 ) )		3435880	0					
ANR	3436530	Condition	h -> picture_structure != sl -> picture_structure || h -> droppable != ( nal -> ref_idc == 0 )	201:12:3945:4049	3435880	0	True				
ANR	3436531	OrExpression	h -> picture_structure != sl -> picture_structure || h -> droppable != ( nal -> ref_idc == 0 )		3435880	0		||			
ANR	3436532	EqualityExpression	h -> picture_structure != sl -> picture_structure		3435880	0		!=			
ANR	3436533	PtrMemberAccess	h -> picture_structure		3435880	0					
ANR	3436534	Identifier	h		3435880	0					
ANR	3436535	Identifier	picture_structure		3435880	1					
ANR	3436536	PtrMemberAccess	sl -> picture_structure		3435880	1					
ANR	3436537	Identifier	sl		3435880	0					
ANR	3436538	Identifier	picture_structure		3435880	1					
ANR	3436539	EqualityExpression	h -> droppable != ( nal -> ref_idc == 0 )		3435880	1		!=			
ANR	3436540	PtrMemberAccess	h -> droppable		3435880	0					
ANR	3436541	Identifier	h		3435880	0					
ANR	3436542	Identifier	droppable		3435880	1					
ANR	3436543	EqualityExpression	nal -> ref_idc == 0		3435880	1		==			
ANR	3436544	PtrMemberAccess	nal -> ref_idc		3435880	0					
ANR	3436545	Identifier	nal		3435880	0					
ANR	3436546	Identifier	ref_idc		3435880	1					
ANR	3436547	PrimaryExpression	0		3435880	1					
ANR	3436548	CompoundStatement		201:57:3982:3982	3435880	1					
ANR	3436549	ExpressionStatement	"av_log ( h -> avctx , AV_LOG_ERROR , ""Changing field mode (%d -> %d) between slices is not allowed\\n"" , h -> picture_structure , sl -> picture_structure )"	205:12:4067:4248	3435880	0	True				
ANR	3436550	CallExpression	"av_log ( h -> avctx , AV_LOG_ERROR , ""Changing field mode (%d -> %d) between slices is not allowed\\n"" , h -> picture_structure , sl -> picture_structure )"		3435880	0					
ANR	3436551	Callee	av_log		3435880	0					
ANR	3436552	Identifier	av_log		3435880	0					
ANR	3436553	ArgumentList	h -> avctx		3435880	1					
ANR	3436554	Argument	h -> avctx		3435880	0					
ANR	3436555	PtrMemberAccess	h -> avctx		3435880	0					
ANR	3436556	Identifier	h		3435880	0					
ANR	3436557	Identifier	avctx		3435880	1					
ANR	3436558	Argument	AV_LOG_ERROR		3435880	1					
ANR	3436559	Identifier	AV_LOG_ERROR		3435880	0					
ANR	3436560	Argument	"""Changing field mode (%d -> %d) between slices is not allowed\\n"""		3435880	2					
ANR	3436561	PrimaryExpression	"""Changing field mode (%d -> %d) between slices is not allowed\\n"""		3435880	0					
ANR	3436562	Argument	h -> picture_structure		3435880	3					
ANR	3436563	PtrMemberAccess	h -> picture_structure		3435880	0					
ANR	3436564	Identifier	h		3435880	0					
ANR	3436565	Identifier	picture_structure		3435880	1					
ANR	3436566	Argument	sl -> picture_structure		3435880	4					
ANR	3436567	PtrMemberAccess	sl -> picture_structure		3435880	0					
ANR	3436568	Identifier	sl		3435880	0					
ANR	3436569	Identifier	picture_structure		3435880	1					
ANR	3436570	ReturnStatement	return AVERROR_INVALIDDATA ;	211:12:4263:4289	3435880	1	True				
ANR	3436571	Identifier	AVERROR_INVALIDDATA		3435880	0					
ANR	3436572	ElseStatement	else		3435880	0					
ANR	3436573	IfStatement	if ( ! h -> cur_pic_ptr )		3435880	0					
ANR	3436574	Condition	! h -> cur_pic_ptr	213:19:4311:4325	3435880	0	True				
ANR	3436575	UnaryOperationExpression	! h -> cur_pic_ptr		3435880	0					
ANR	3436576	UnaryOperator	!		3435880	0					
ANR	3436577	PtrMemberAccess	h -> cur_pic_ptr		3435880	1					
ANR	3436578	Identifier	h		3435880	0					
ANR	3436579	Identifier	cur_pic_ptr		3435880	1					
ANR	3436580	CompoundStatement		211:36:4258:4258	3435880	1					
ANR	3436581	ExpressionStatement	"av_log ( h -> avctx , AV_LOG_ERROR , ""unset cur_pic_ptr on slice %d\\n"" , h -> current_slice + 1 )"	215:12:4343:4470	3435880	0	True				
ANR	3436582	CallExpression	"av_log ( h -> avctx , AV_LOG_ERROR , ""unset cur_pic_ptr on slice %d\\n"" , h -> current_slice + 1 )"		3435880	0					
ANR	3436583	Callee	av_log		3435880	0					
ANR	3436584	Identifier	av_log		3435880	0					
ANR	3436585	ArgumentList	h -> avctx		3435880	1					
ANR	3436586	Argument	h -> avctx		3435880	0					
ANR	3436587	PtrMemberAccess	h -> avctx		3435880	0					
ANR	3436588	Identifier	h		3435880	0					
ANR	3436589	Identifier	avctx		3435880	1					
ANR	3436590	Argument	AV_LOG_ERROR		3435880	1					
ANR	3436591	Identifier	AV_LOG_ERROR		3435880	0					
ANR	3436592	Argument	"""unset cur_pic_ptr on slice %d\\n"""		3435880	2					
ANR	3436593	PrimaryExpression	"""unset cur_pic_ptr on slice %d\\n"""		3435880	0					
ANR	3436594	Argument	h -> current_slice + 1		3435880	3					
ANR	3436595	AdditiveExpression	h -> current_slice + 1		3435880	0		+			
ANR	3436596	PtrMemberAccess	h -> current_slice		3435880	0					
ANR	3436597	Identifier	h		3435880	0					
ANR	3436598	Identifier	current_slice		3435880	1					
ANR	3436599	PrimaryExpression	1		3435880	1					
ANR	3436600	ReturnStatement	return AVERROR_INVALIDDATA ;	221:12:4485:4511	3435880	1	True				
ANR	3436601	Identifier	AVERROR_INVALIDDATA		3435880	0					
ANR	3436602	ExpressionStatement	"ret = h264_slice_init ( h , sl , nal )"	229:4:4538:4571	3435880	13	True				
ANR	3436603	AssignmentExpression	"ret = h264_slice_init ( h , sl , nal )"		3435880	0		=			
ANR	3436604	Identifier	ret		3435880	0					
ANR	3436605	CallExpression	"h264_slice_init ( h , sl , nal )"		3435880	1					
ANR	3436606	Callee	h264_slice_init		3435880	0					
ANR	3436607	Identifier	h264_slice_init		3435880	0					
ANR	3436608	ArgumentList	h		3435880	1					
ANR	3436609	Argument	h		3435880	0					
ANR	3436610	Identifier	h		3435880	0					
ANR	3436611	Argument	sl		3435880	1					
ANR	3436612	Identifier	sl		3435880	0					
ANR	3436613	Argument	nal		3435880	2					
ANR	3436614	Identifier	nal		3435880	0					
ANR	3436615	IfStatement	if ( ret < 0 )		3435880	14					
ANR	3436616	Condition	ret < 0	231:8:4582:4588	3435880	0	True				
ANR	3436617	RelationalExpression	ret < 0		3435880	0		<			
ANR	3436618	Identifier	ret		3435880	0					
ANR	3436619	PrimaryExpression	0		3435880	1					
ANR	3436620	ReturnStatement	return ret ;	233:8:4600:4610	3435880	1	True				
ANR	3436621	Identifier	ret		3435880	0					
ANR	3436622	ExpressionStatement	h -> nb_slice_ctx_queued ++	237:4:4619:4643	3435880	15	True				
ANR	3436623	PostIncDecOperationExpression	h -> nb_slice_ctx_queued ++		3435880	0					
ANR	3436624	PtrMemberAccess	h -> nb_slice_ctx_queued		3435880	0					
ANR	3436625	Identifier	h		3435880	0					
ANR	3436626	Identifier	nb_slice_ctx_queued		3435880	1					
ANR	3436627	IncDec	++		3435880	1					
ANR	3436628	ReturnStatement	return 0 ;	241:4:4652:4660	3435880	16	True				
ANR	3436629	PrimaryExpression	0		3435880	0					
ANR	3436630	ReturnType	int		3435880	1					
ANR	3436631	Identifier	ff_h264_queue_decode_slice		3435880	2					
ANR	3436632	ParameterList	"H264Context * h , const H2645NAL * nal"		3435880	3					
ANR	3436633	Parameter	H264Context * h	1:31:31:44	3435880	0	True				
ANR	3436634	ParameterType	H264Context *		3435880	0					
ANR	3436635	Identifier	h		3435880	1					
ANR	3436636	Parameter	const H2645NAL * nal	1:47:47:65	3435880	1	True				
ANR	3436637	ParameterType	const H2645NAL *		3435880	0					
ANR	3436638	Identifier	nal		3435880	1					
ANR	3436639	CFGEntryNode	ENTRY		3435880		True				
ANR	3436640	CFGExitNode	EXIT		3435880		True				
ANR	3436641	Symbol	* * h -> ps . sps_list		3435880						
ANR	3436642	Symbol	* * h -> ps . pps -> sps_id		3435880						
ANR	3436643	Symbol	h -> picture_structure		3435880						
ANR	3436644	Symbol	h -> ps . pps -> sps_id		3435880						
ANR	3436645	Symbol	* * h -> ps . pps_list		3435880						
ANR	3436646	Symbol	* h -> avctx		3435880						
ANR	3436647	Symbol	* * * * h		3435880						
ANR	3436648	Symbol	first_slice		3435880						
ANR	3436649	Symbol	nal		3435880						
ANR	3436650	Symbol	sl -> slice_type_nos		3435880						
ANR	3436651	Symbol	* sl		3435880						
ANR	3436652	Symbol	AVDISCARD_NONREF		3435880						
ANR	3436653	Symbol	* pps		3435880						
ANR	3436654	Symbol	h -> slice_ctx		3435880						
ANR	3436655	Symbol	ret		3435880						
ANR	3436656	Symbol	* h -> ps . pps_list		3435880						
ANR	3436657	Symbol	* * h		3435880						
ANR	3436658	Symbol	NULL		3435880						
ANR	3436659	Symbol	h -> ps		3435880						
ANR	3436660	Symbol	h -> ps . sps		3435880						
ANR	3436661	Symbol	h -> sei		3435880						
ANR	3436662	Symbol	AVDISCARD_BIDIR		3435880						
ANR	3436663	Symbol	h264_slice_init		3435880						
ANR	3436664	Symbol	sl -> redundant_pic_count		3435880						
ANR	3436665	Symbol	AVDISCARD_NONKEY		3435880						
ANR	3436666	Symbol	h -> cur_pic_ptr		3435880						
ANR	3436667	Symbol	h -> sei . recovery_point . recovery_frame_cnt		3435880						
ANR	3436668	Symbol	nal -> ref_idc		3435880						
ANR	3436669	Symbol	* * * h		3435880						
ANR	3436670	Symbol	* * * h -> ps . pps		3435880						
ANR	3436671	Symbol	* * * h -> ps		3435880						
ANR	3436672	Symbol	h -> ps . pps_list		3435880						
ANR	3436673	Symbol	* h -> ps		3435880						
ANR	3436674	Symbol	h -> avctx		3435880						
ANR	3436675	Symbol	* * * sl		3435880						
ANR	3436676	Symbol	* nal		3435880						
ANR	3436677	Symbol	h -> setup_finished		3435880						
ANR	3436678	Symbol	H264_NAL_IDR_SLICE		3435880						
ANR	3436679	Symbol	* * sl		3435880						
ANR	3436680	Symbol	AV_EF_EXPLODE		3435880						
ANR	3436681	Symbol	AVDISCARD_NONINTRA		3435880						
ANR	3436682	Symbol	h -> ps . pps_list [ sl -> pps_id ] -> data		3435880						
ANR	3436683	Symbol	h -> nal_unit_type		3435880						
ANR	3436684	Symbol	h264_slice_header_parse		3435880						
ANR	3436685	Symbol	pps -> sps_id		3435880						
ANR	3436686	Symbol	h -> first_field		3435880						
ANR	3436687	Symbol	h -> avctx -> err_recognition		3435880						
ANR	3436688	Symbol	h -> nal_ref_idc		3435880						
ANR	3436689	Symbol	* h -> ps . pps		3435880						
ANR	3436690	Symbol	tmp_ctx		3435880						
ANR	3436691	Symbol	h -> droppable		3435880						
ANR	3436692	Symbol	INT_MAX		3435880						
ANR	3436693	Symbol	sl		3435880						
ANR	3436694	Symbol	sl -> gb		3435880						
ANR	3436695	Symbol	pps -> transform_8x8_mode		3435880						
ANR	3436696	Symbol	& h -> cur_pic_ptr -> tf		3435880						
ANR	3436697	Symbol	AV_PICTURE_TYPE_I		3435880						
ANR	3436698	Symbol	AV_PICTURE_TYPE_B		3435880						
ANR	3436699	Symbol	sl -> pps_id		3435880						
ANR	3436700	Symbol	* * h -> ps		3435880						
ANR	3436701	Symbol	AV_LOG_ERROR		3435880						
ANR	3436702	Symbol	h264_field_start		3435880						
ANR	3436703	Symbol	AVDISCARD_ALL		3435880						
ANR	3436704	Symbol	ff_h264_execute_decode_slices		3435880						
ANR	3436705	Symbol	h -> ps . pps		3435880						
ANR	3436706	Symbol	h -> ps . sps_list [ h -> ps . pps -> sps_id ] -> data		3435880						
ANR	3436707	Symbol	h		3435880						
ANR	3436708	Symbol	* h -> ps . sps_list		3435880						
ANR	3436709	Symbol	h -> ps . pps -> transform_8x8_mode		3435880						
ANR	3436710	Symbol	nal -> gb		3435880						
ANR	3436711	Symbol	sl -> first_mb_addr		3435880						
ANR	3436712	Symbol	h -> sei . recovery_point		3435880						
ANR	3436713	Symbol	* h		3435880						
ANR	3436714	Symbol	h -> nb_slice_ctx_queued		3435880						
ANR	3436715	Symbol	pps		3435880						
ANR	3436716	Symbol	sl -> picture_structure		3435880						
ANR	3436717	Symbol	* h -> ps . pps -> sps_id		3435880						
ANR	3436718	Symbol	* sl -> pps_id		3435880						
ANR	3436719	Symbol	h -> current_slice		3435880						
ANR	3436720	Symbol	* * sl -> pps_id		3435880						
ANR	3436721	Symbol	ff_h264_field_end		3435880						
ANR	3436722	Symbol	PICT_BOTTOM_FIELD		3435880						
ANR	3436723	Symbol	AVERROR_INVALIDDATA		3435880						
ANR	3436724	Symbol	AV_LOG_WARNING		3435880						
ANR	3436725	Symbol	h -> ps . sps_list		3435880						
ANR	3436726	Symbol	& tmp_ctx		3435880						
ANR	3436727	Symbol	FIELD_PICTURE		3435880						
ANR	3436728	Symbol	h -> avctx -> skip_frame		3435880						
ANR	3436729	Symbol	* * h -> ps . pps		3435880						
