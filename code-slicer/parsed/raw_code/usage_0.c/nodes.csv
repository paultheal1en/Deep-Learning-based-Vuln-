command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8662793	File	/home/p4ultr4n/workplace/ReVeal/raw_code/usage_0.c								
ANR	8662794	Function	usage	1:0:0:2347							
ANR	8662795	FunctionDef	usage ()		8662794	0					
ANR	8662796	CompoundStatement		3:0:25:2347	8662794	0					
ANR	8662797	IdentifierDeclStatement	const struct qemu_argument * arginfo ;	5:4:32:67	8662794	0	True				
ANR	8662798	IdentifierDecl	* arginfo		8662794	0					
ANR	8662799	IdentifierDeclType	const struct qemu_argument *		8662794	0					
ANR	8662800	Identifier	arginfo		8662794	1					
ANR	8662801	IdentifierDeclStatement	int maxarglen ;	7:4:74:87	8662794	1	True				
ANR	8662802	IdentifierDecl	maxarglen		8662794	0					
ANR	8662803	IdentifierDeclType	int		8662794	0					
ANR	8662804	Identifier	maxarglen		8662794	1					
ANR	8662805	IdentifierDeclStatement	int maxenvlen ;	9:4:94:107	8662794	2	True				
ANR	8662806	IdentifierDecl	maxenvlen		8662794	0					
ANR	8662807	IdentifierDeclType	int		8662794	0					
ANR	8662808	Identifier	maxenvlen		8662794	1					
ANR	8662809	Statement	printf	13:4:116:121	8662794	3	True				
ANR	8662810	Statement	(	13:10:122:122	8662794	4	True				
ANR	8662811	Statement	"""usage: qemu-"""	13:11:123:136	8662794	5	True				
ANR	8662812	Statement	TARGET_ARCH	13:26:138:148	8662794	6	True				
ANR	8662813	Statement	""" [options] program [arguments...]\\n"""	13:38:150:186	8662794	7	True				
ANR	8662814	Statement	"""Linux CPU emulator (compiled for """	15:11:200:234	8662794	8	True				
ANR	8662815	Statement	TARGET_ARCH	15:47:236:246	8662794	9	True				
ANR	8662816	Statement	""" emulation)\\n"""	15:59:248:262	8662794	10	True				
ANR	8662817	Statement	"""\\n"""	17:11:276:279	8662794	11	True				
ANR	8662818	Statement	"""Options and associated environment variables:\\n"""	19:11:293:341	8662794	12	True				
ANR	8662819	Statement	"""\\n"""	21:11:355:358	8662794	13	True				
ANR	8662820	Statement	)	21:15:359:359	8662794	14	True				
ANR	8662821	ExpressionStatement		21:16:360:360	8662794	15	True				
ANR	8662822	ExpressionStatement	maxarglen = maxenvlen = 0	25:4:369:394	8662794	16	True				
ANR	8662823	AssignmentExpression	maxarglen = maxenvlen = 0		8662794	0		=			
ANR	8662824	Identifier	maxarglen		8662794	0					
ANR	8662825	AssignmentExpression	maxenvlen = 0		8662794	1		=			
ANR	8662826	Identifier	maxenvlen		8662794	0					
ANR	8662827	PrimaryExpression	0		8662794	1					
ANR	8662828	ForStatement	for ( arginfo = arg_table ; arginfo -> handle_opt != NULL ; arginfo ++ )		8662794	17					
ANR	8662829	ForInit	arginfo = arg_table ;	29:9:408:427	8662794	0	True				
ANR	8662830	AssignmentExpression	arginfo = arg_table		8662794	0		=			
ANR	8662831	Identifier	arginfo		8662794	0					
ANR	8662832	Identifier	arg_table		8662794	1					
ANR	8662833	Condition	arginfo -> handle_opt != NULL	29:30:429:455	8662794	1	True				
ANR	8662834	EqualityExpression	arginfo -> handle_opt != NULL		8662794	0		!=			
ANR	8662835	PtrMemberAccess	arginfo -> handle_opt		8662794	0					
ANR	8662836	Identifier	arginfo		8662794	0					
ANR	8662837	Identifier	handle_opt		8662794	1					
ANR	8662838	Identifier	NULL		8662794	1					
ANR	8662839	PostIncDecOperationExpression	arginfo ++	29:59:458:466	8662794	2	True				
ANR	8662840	Identifier	arginfo		8662794	0					
ANR	8662841	IncDec	++		8662794	1					
ANR	8662842	CompoundStatement		27:70:443:443	8662794	3					
ANR	8662843	IfStatement	if ( strlen ( arginfo -> env ) > maxenvlen )		8662794	0					
ANR	8662844	Condition	strlen ( arginfo -> env ) > maxenvlen	31:12:484:515	8662794	0	True				
ANR	8662845	RelationalExpression	strlen ( arginfo -> env ) > maxenvlen		8662794	0		>			
ANR	8662846	CallExpression	strlen ( arginfo -> env )		8662794	0					
ANR	8662847	Callee	strlen		8662794	0					
ANR	8662848	Identifier	strlen		8662794	0					
ANR	8662849	ArgumentList	arginfo -> env		8662794	1					
ANR	8662850	Argument	arginfo -> env		8662794	0					
ANR	8662851	PtrMemberAccess	arginfo -> env		8662794	0					
ANR	8662852	Identifier	arginfo		8662794	0					
ANR	8662853	Identifier	env		8662794	1					
ANR	8662854	Identifier	maxenvlen		8662794	1					
ANR	8662855	CompoundStatement		29:46:492:492	8662794	1					
ANR	8662856	ExpressionStatement	maxenvlen = strlen ( arginfo -> env )	33:12:533:565	8662794	0	True				
ANR	8662857	AssignmentExpression	maxenvlen = strlen ( arginfo -> env )		8662794	0		=			
ANR	8662858	Identifier	maxenvlen		8662794	0					
ANR	8662859	CallExpression	strlen ( arginfo -> env )		8662794	1					
ANR	8662860	Callee	strlen		8662794	0					
ANR	8662861	Identifier	strlen		8662794	0					
ANR	8662862	ArgumentList	arginfo -> env		8662794	1					
ANR	8662863	Argument	arginfo -> env		8662794	0					
ANR	8662864	PtrMemberAccess	arginfo -> env		8662794	0					
ANR	8662865	Identifier	arginfo		8662794	0					
ANR	8662866	Identifier	env		8662794	1					
ANR	8662867	IfStatement	if ( strlen ( arginfo -> argv ) > maxarglen )		8662794	1					
ANR	8662868	Condition	strlen ( arginfo -> argv ) > maxarglen	37:12:591:623	8662794	0	True				
ANR	8662869	RelationalExpression	strlen ( arginfo -> argv ) > maxarglen		8662794	0		>			
ANR	8662870	CallExpression	strlen ( arginfo -> argv )		8662794	0					
ANR	8662871	Callee	strlen		8662794	0					
ANR	8662872	Identifier	strlen		8662794	0					
ANR	8662873	ArgumentList	arginfo -> argv		8662794	1					
ANR	8662874	Argument	arginfo -> argv		8662794	0					
ANR	8662875	PtrMemberAccess	arginfo -> argv		8662794	0					
ANR	8662876	Identifier	arginfo		8662794	0					
ANR	8662877	Identifier	argv		8662794	1					
ANR	8662878	Identifier	maxarglen		8662794	1					
ANR	8662879	CompoundStatement		35:47:600:600	8662794	1					
ANR	8662880	ExpressionStatement	maxarglen = strlen ( arginfo -> argv )	39:12:641:674	8662794	0	True				
ANR	8662881	AssignmentExpression	maxarglen = strlen ( arginfo -> argv )		8662794	0		=			
ANR	8662882	Identifier	maxarglen		8662794	0					
ANR	8662883	CallExpression	strlen ( arginfo -> argv )		8662794	1					
ANR	8662884	Callee	strlen		8662794	0					
ANR	8662885	Identifier	strlen		8662794	0					
ANR	8662886	ArgumentList	arginfo -> argv		8662794	1					
ANR	8662887	Argument	arginfo -> argv		8662794	0					
ANR	8662888	PtrMemberAccess	arginfo -> argv		8662794	0					
ANR	8662889	Identifier	arginfo		8662794	0					
ANR	8662890	Identifier	argv		8662794	1					
ANR	8662891	ExpressionStatement	"printf ( ""%-*s%-*sDescription\\n"" , maxarglen + 3 , ""Argument"" , maxenvlen + 1 , ""Env-variable"" )"	47:4:701:799	8662794	18	True				
ANR	8662892	CallExpression	"printf ( ""%-*s%-*sDescription\\n"" , maxarglen + 3 , ""Argument"" , maxenvlen + 1 , ""Env-variable"" )"		8662794	0					
ANR	8662893	Callee	printf		8662794	0					
ANR	8662894	Identifier	printf		8662794	0					
ANR	8662895	ArgumentList	"""%-*s%-*sDescription\\n"""		8662794	1					
ANR	8662896	Argument	"""%-*s%-*sDescription\\n"""		8662794	0					
ANR	8662897	PrimaryExpression	"""%-*s%-*sDescription\\n"""		8662794	0					
ANR	8662898	Argument	maxarglen + 3		8662794	1					
ANR	8662899	AdditiveExpression	maxarglen + 3		8662794	0		+			
ANR	8662900	Identifier	maxarglen		8662794	0					
ANR	8662901	PrimaryExpression	3		8662794	1					
ANR	8662902	Argument	"""Argument"""		8662794	2					
ANR	8662903	PrimaryExpression	"""Argument"""		8662794	0					
ANR	8662904	Argument	maxenvlen + 1		8662794	3					
ANR	8662905	AdditiveExpression	maxenvlen + 1		8662794	0		+			
ANR	8662906	Identifier	maxenvlen		8662794	0					
ANR	8662907	PrimaryExpression	1		8662794	1					
ANR	8662908	Argument	"""Env-variable"""		8662794	4					
ANR	8662909	PrimaryExpression	"""Env-variable"""		8662794	0					
ANR	8662910	ForStatement	for ( arginfo = arg_table ; arginfo -> handle_opt != NULL ; arginfo ++ )		8662794	19					
ANR	8662911	ForInit	arginfo = arg_table ;	53:9:813:832	8662794	0	True				
ANR	8662912	AssignmentExpression	arginfo = arg_table		8662794	0		=			
ANR	8662913	Identifier	arginfo		8662794	0					
ANR	8662914	Identifier	arg_table		8662794	1					
ANR	8662915	Condition	arginfo -> handle_opt != NULL	53:30:834:860	8662794	1	True				
ANR	8662916	EqualityExpression	arginfo -> handle_opt != NULL		8662794	0		!=			
ANR	8662917	PtrMemberAccess	arginfo -> handle_opt		8662794	0					
ANR	8662918	Identifier	arginfo		8662794	0					
ANR	8662919	Identifier	handle_opt		8662794	1					
ANR	8662920	Identifier	NULL		8662794	1					
ANR	8662921	PostIncDecOperationExpression	arginfo ++	53:59:863:871	8662794	2	True				
ANR	8662922	Identifier	arginfo		8662794	0					
ANR	8662923	IncDec	++		8662794	1					
ANR	8662924	CompoundStatement		51:70:848:848	8662794	3					
ANR	8662925	IfStatement	if ( arginfo -> has_arg )		8662794	0					
ANR	8662926	Condition	arginfo -> has_arg	55:12:889:904	8662794	0	True				
ANR	8662927	PtrMemberAccess	arginfo -> has_arg		8662794	0					
ANR	8662928	Identifier	arginfo		8662794	0					
ANR	8662929	Identifier	has_arg		8662794	1					
ANR	8662930	CompoundStatement		53:30:881:881	8662794	1					
ANR	8662931	ExpressionStatement	"printf ( ""-%s %-*s %-*s %s\\n"" , arginfo -> argv , ( int ) ( maxarglen - strlen ( arginfo -> argv ) ) , arginfo -> example , maxenvlen , arginfo -> env , arginfo -> help )"	57:12:922:1105	8662794	0	True				
ANR	8662932	CallExpression	"printf ( ""-%s %-*s %-*s %s\\n"" , arginfo -> argv , ( int ) ( maxarglen - strlen ( arginfo -> argv ) ) , arginfo -> example , maxenvlen , arginfo -> env , arginfo -> help )"		8662794	0					
ANR	8662933	Callee	printf		8662794	0					
ANR	8662934	Identifier	printf		8662794	0					
ANR	8662935	ArgumentList	"""-%s %-*s %-*s %s\\n"""		8662794	1					
ANR	8662936	Argument	"""-%s %-*s %-*s %s\\n"""		8662794	0					
ANR	8662937	PrimaryExpression	"""-%s %-*s %-*s %s\\n"""		8662794	0					
ANR	8662938	Argument	arginfo -> argv		8662794	1					
ANR	8662939	PtrMemberAccess	arginfo -> argv		8662794	0					
ANR	8662940	Identifier	arginfo		8662794	0					
ANR	8662941	Identifier	argv		8662794	1					
ANR	8662942	Argument	( int ) ( maxarglen - strlen ( arginfo -> argv ) )		8662794	2					
ANR	8662943	CastExpression	( int ) ( maxarglen - strlen ( arginfo -> argv ) )		8662794	0					
ANR	8662944	CastTarget	int		8662794	0					
ANR	8662945	AdditiveExpression	maxarglen - strlen ( arginfo -> argv )		8662794	1		-			
ANR	8662946	Identifier	maxarglen		8662794	0					
ANR	8662947	CallExpression	strlen ( arginfo -> argv )		8662794	1					
ANR	8662948	Callee	strlen		8662794	0					
ANR	8662949	Identifier	strlen		8662794	0					
ANR	8662950	ArgumentList	arginfo -> argv		8662794	1					
ANR	8662951	Argument	arginfo -> argv		8662794	0					
ANR	8662952	PtrMemberAccess	arginfo -> argv		8662794	0					
ANR	8662953	Identifier	arginfo		8662794	0					
ANR	8662954	Identifier	argv		8662794	1					
ANR	8662955	Argument	arginfo -> example		8662794	3					
ANR	8662956	PtrMemberAccess	arginfo -> example		8662794	0					
ANR	8662957	Identifier	arginfo		8662794	0					
ANR	8662958	Identifier	example		8662794	1					
ANR	8662959	Argument	maxenvlen		8662794	4					
ANR	8662960	Identifier	maxenvlen		8662794	0					
ANR	8662961	Argument	arginfo -> env		8662794	5					
ANR	8662962	PtrMemberAccess	arginfo -> env		8662794	0					
ANR	8662963	Identifier	arginfo		8662794	0					
ANR	8662964	Identifier	env		8662794	1					
ANR	8662965	Argument	arginfo -> help		8662794	6					
ANR	8662966	PtrMemberAccess	arginfo -> help		8662794	0					
ANR	8662967	Identifier	arginfo		8662794	0					
ANR	8662968	Identifier	help		8662794	1					
ANR	8662969	ElseStatement	else		8662794	0					
ANR	8662970	CompoundStatement		61:15:1097:1097	8662794	0					
ANR	8662971	ExpressionStatement	"printf ( ""-%-*s %-*s %s\\n"" , maxarglen + 1 , arginfo -> argv , maxenvlen , arginfo -> env , arginfo -> help )"	65:12:1138:1273	8662794	0	True				
ANR	8662972	CallExpression	"printf ( ""-%-*s %-*s %s\\n"" , maxarglen + 1 , arginfo -> argv , maxenvlen , arginfo -> env , arginfo -> help )"		8662794	0					
ANR	8662973	Callee	printf		8662794	0					
ANR	8662974	Identifier	printf		8662794	0					
ANR	8662975	ArgumentList	"""-%-*s %-*s %s\\n"""		8662794	1					
ANR	8662976	Argument	"""-%-*s %-*s %s\\n"""		8662794	0					
ANR	8662977	PrimaryExpression	"""-%-*s %-*s %s\\n"""		8662794	0					
ANR	8662978	Argument	maxarglen + 1		8662794	1					
ANR	8662979	AdditiveExpression	maxarglen + 1		8662794	0		+			
ANR	8662980	Identifier	maxarglen		8662794	0					
ANR	8662981	PrimaryExpression	1		8662794	1					
ANR	8662982	Argument	arginfo -> argv		8662794	2					
ANR	8662983	PtrMemberAccess	arginfo -> argv		8662794	0					
ANR	8662984	Identifier	arginfo		8662794	0					
ANR	8662985	Identifier	argv		8662794	1					
ANR	8662986	Argument	maxenvlen		8662794	3					
ANR	8662987	Identifier	maxenvlen		8662794	0					
ANR	8662988	Argument	arginfo -> env		8662794	4					
ANR	8662989	PtrMemberAccess	arginfo -> env		8662794	0					
ANR	8662990	Identifier	arginfo		8662794	0					
ANR	8662991	Identifier	env		8662794	1					
ANR	8662992	Argument	arginfo -> help		8662794	5					
ANR	8662993	PtrMemberAccess	arginfo -> help		8662794	0					
ANR	8662994	Identifier	arginfo		8662794	0					
ANR	8662995	Identifier	help		8662794	1					
ANR	8662996	Statement	printf	77:4:1300:1305	8662794	20	True				
ANR	8662997	Statement	(	77:10:1306:1306	8662794	21	True				
ANR	8662998	Statement	"""\\n"""	77:11:1307:1310	8662794	22	True				
ANR	8662999	Statement	"""Defaults:\\n"""	79:11:1324:1336	8662794	23	True				
ANR	8663000	Statement	"""QEMU_LD_PREFIX  = %s\\n"""	81:11:1350:1373	8662794	24	True				
ANR	8663001	Statement	"""QEMU_STACK_SIZE = %ld byte\\n"""	83:11:1387:1416	8662794	25	True				
ANR	8663002	Statement	","	83:41:1417:1417	8662794	26	True				
ANR	8663003	Statement	interp_prefix	85:11:1431:1443	8662794	27	True				
ANR	8663004	Statement	","	85:24:1444:1444	8662794	28	True				
ANR	8663005	Statement	guest_stack_size	87:11:1458:1473	8662794	29	True				
ANR	8663006	Statement	)	87:27:1474:1474	8662794	30	True				
ANR	8663007	ExpressionStatement		87:28:1475:1475	8662794	31	True				
ANR	8663008	Statement	printf	91:4:1484:1489	8662794	32	True				
ANR	8663009	Statement	(	91:10:1490:1490	8662794	33	True				
ANR	8663010	Statement	"""\\n"""	91:11:1491:1494	8662794	34	True				
ANR	8663011	Statement	"""You can use -E and -U options or the QEMU_SET_ENV and\\n"""	93:11:1508:1564	8662794	35	True				
ANR	8663012	Statement	"""QEMU_UNSET_ENV environment variables to set and unset\\n"""	95:11:1578:1634	8662794	36	True				
ANR	8663013	Statement	"""environment variables for the target process.\\n"""	97:11:1648:1696	8662794	37	True				
ANR	8663014	Statement	"""It is possible to provide several variables by separating them\\n"""	99:11:1710:1775	8662794	38	True				
ANR	8663015	Statement	"""by commas in getsubopt(3) style. Additionally it is possible to\\n"""	101:11:1789:1855	8662794	39	True				
ANR	8663016	Statement	"""provide the -E and -U options multiple times.\\n"""	103:11:1869:1917	8662794	40	True				
ANR	8663017	Statement	"""The following lines are equivalent:\\n"""	105:11:1931:1969	8662794	41	True				
ANR	8663018	Statement	"""    -E var1=val2 -E var2=val2 -U LD_PRELOAD -U LD_DEBUG\\n"""	107:11:1983:2041	8662794	42	True				
ANR	8663019	Statement	"""    -E var1=val2,var2=val2 -U LD_PRELOAD,LD_DEBUG\\n"""	109:11:2055:2107	8662794	43	True				
ANR	8663020	Statement	"""    QEMU_SET_ENV=var1=val2,var2=val2 QEMU_UNSET_ENV=LD_PRELOAD,LD_DEBUG\\n"""	111:11:2121:2195	8662794	44	True				
ANR	8663021	Statement	"""Note that if you provide several changes to a single variable\\n"""	113:11:2209:2273	8662794	45	True				
ANR	8663022	Statement	"""the last change will stay in effect.\\n"""	115:11:2287:2326	8662794	46	True				
ANR	8663023	Statement	)	115:51:2327:2327	8662794	47	True				
ANR	8663024	ExpressionStatement		115:52:2328:2328	8662794	48	True				
ANR	8663025	ExpressionStatement	exit ( 1 )	119:4:2337:2344	8662794	49	True				
ANR	8663026	CallExpression	exit ( 1 )		8662794	0					
ANR	8663027	Callee	exit		8662794	0					
ANR	8663028	Identifier	exit		8662794	0					
ANR	8663029	ArgumentList	1		8662794	1					
ANR	8663030	Argument	1		8662794	0					
ANR	8663031	PrimaryExpression	1		8662794	0					
ANR	8663032	ReturnType	static void		8662794	1					
ANR	8663033	Identifier	usage		8662794	2					
ANR	8663034	ParameterList			8662794	3					
ANR	8663035	CFGEntryNode	ENTRY		8662794		True				
ANR	8663036	CFGExitNode	EXIT		8662794		True				
ANR	8663037	Symbol	NULL		8662794						
ANR	8663038	Symbol	arginfo		8662794						
ANR	8663039	Symbol	arg_table		8662794						
ANR	8663040	Symbol	arginfo -> example		8662794						
ANR	8663041	Symbol	arginfo -> handle_opt		8662794						
ANR	8663042	Symbol	* arginfo		8662794						
ANR	8663043	Symbol	strlen		8662794						
ANR	8663044	Symbol	maxenvlen		8662794						
ANR	8663045	Symbol	arginfo -> env		8662794						
ANR	8663046	Symbol	arginfo -> has_arg		8662794						
ANR	8663047	Symbol	arginfo -> argv		8662794						
ANR	8663048	Symbol	arginfo -> help		8662794						
ANR	8663049	Symbol	maxarglen		8662794						
