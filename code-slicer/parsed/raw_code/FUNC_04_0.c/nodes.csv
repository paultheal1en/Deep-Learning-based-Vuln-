command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	27286	File	/home/p4ultr4n/workplace/ReVeal/raw_code/FUNC_04_0.c								
ANR	27287	Function	hl_decode_mb_444	1:0:0:4164							
ANR	27288	FunctionDef	"hl_decode_mb_444 (H264Context * h , H264SliceContext * sl)"		27287	0					
ANR	27289	CompoundStatement		3:0:86:4164	27287	0					
ANR	27290	IdentifierDeclStatement	const int mb_x = h -> mb_x ;	5:4:93:120	27287	0	True				
ANR	27291	IdentifierDecl	mb_x = h -> mb_x		27287	0					
ANR	27292	IdentifierDeclType	const int		27287	0					
ANR	27293	Identifier	mb_x		27287	1					
ANR	27294	AssignmentExpression	mb_x = h -> mb_x		27287	2		=			
ANR	27295	Identifier	mb_x		27287	0					
ANR	27296	PtrMemberAccess	h -> mb_x		27287	1					
ANR	27297	Identifier	h		27287	0					
ANR	27298	Identifier	mb_x		27287	1					
ANR	27299	IdentifierDeclStatement	const int mb_y = h -> mb_y ;	7:4:127:154	27287	1	True				
ANR	27300	IdentifierDecl	mb_y = h -> mb_y		27287	0					
ANR	27301	IdentifierDeclType	const int		27287	0					
ANR	27302	Identifier	mb_y		27287	1					
ANR	27303	AssignmentExpression	mb_y = h -> mb_y		27287	2		=			
ANR	27304	Identifier	mb_y		27287	0					
ANR	27305	PtrMemberAccess	h -> mb_y		27287	1					
ANR	27306	Identifier	h		27287	0					
ANR	27307	Identifier	mb_y		27287	1					
ANR	27308	IdentifierDeclStatement	const int mb_xy = h -> mb_xy ;	9:4:161:189	27287	2	True				
ANR	27309	IdentifierDecl	mb_xy = h -> mb_xy		27287	0					
ANR	27310	IdentifierDeclType	const int		27287	0					
ANR	27311	Identifier	mb_xy		27287	1					
ANR	27312	AssignmentExpression	mb_xy = h -> mb_xy		27287	2		=			
ANR	27313	Identifier	mb_xy		27287	0					
ANR	27314	PtrMemberAccess	h -> mb_xy		27287	1					
ANR	27315	Identifier	h		27287	0					
ANR	27316	Identifier	mb_xy		27287	1					
ANR	27317	IdentifierDeclStatement	const int mb_type = h -> cur_pic . mb_type [ mb_xy ] ;	11:4:196:241	27287	3	True				
ANR	27318	IdentifierDecl	mb_type = h -> cur_pic . mb_type [ mb_xy ]		27287	0					
ANR	27319	IdentifierDeclType	const int		27287	0					
ANR	27320	Identifier	mb_type		27287	1					
ANR	27321	AssignmentExpression	mb_type = h -> cur_pic . mb_type [ mb_xy ]		27287	2		=			
ANR	27322	Identifier	mb_type		27287	0					
ANR	27323	ArrayIndexing	h -> cur_pic . mb_type [ mb_xy ]		27287	1					
ANR	27324	MemberAccess	h -> cur_pic . mb_type		27287	0					
ANR	27325	PtrMemberAccess	h -> cur_pic		27287	0					
ANR	27326	Identifier	h		27287	0					
ANR	27327	Identifier	cur_pic		27287	1					
ANR	27328	Identifier	mb_type		27287	1					
ANR	27329	Identifier	mb_xy		27287	1					
ANR	27330	IdentifierDeclStatement	uint8_t * dest [ 3 ] ;	13:4:248:264	27287	4	True				
ANR	27331	IdentifierDecl	* dest [ 3 ]		27287	0					
ANR	27332	IdentifierDeclType	uint8_t * [ 3 ]		27287	0					
ANR	27333	Identifier	dest		27287	1					
ANR	27334	PrimaryExpression	3		27287	2					
ANR	27335	IdentifierDeclStatement	int linesize ;	15:4:271:283	27287	5	True				
ANR	27336	IdentifierDecl	linesize		27287	0					
ANR	27337	IdentifierDeclType	int		27287	0					
ANR	27338	Identifier	linesize		27287	1					
ANR	27339	IdentifierDeclStatement	"int i , j , p ;"	17:4:290:301	27287	6	True				
ANR	27340	IdentifierDecl	i		27287	0					
ANR	27341	IdentifierDeclType	int		27287	0					
ANR	27342	Identifier	i		27287	1					
ANR	27343	IdentifierDecl	j		27287	1					
ANR	27344	IdentifierDeclType	int		27287	0					
ANR	27345	Identifier	j		27287	1					
ANR	27346	IdentifierDecl	p		27287	2					
ANR	27347	IdentifierDeclType	int		27287	0					
ANR	27348	Identifier	p		27287	1					
ANR	27349	IdentifierDeclStatement	int * block_offset = & h -> block_offset [ 0 ] ;	19:4:308:347	27287	7	True				
ANR	27350	IdentifierDecl	* block_offset = & h -> block_offset [ 0 ]		27287	0					
ANR	27351	IdentifierDeclType	int *		27287	0					
ANR	27352	Identifier	block_offset		27287	1					
ANR	27353	AssignmentExpression	* block_offset = & h -> block_offset [ 0 ]		27287	2		=			
ANR	27354	Identifier	block_offset		27287	0					
ANR	27355	UnaryOperationExpression	& h -> block_offset [ 0 ]		27287	1					
ANR	27356	UnaryOperator	&		27287	0					
ANR	27357	ArrayIndexing	h -> block_offset [ 0 ]		27287	1					
ANR	27358	PtrMemberAccess	h -> block_offset		27287	0					
ANR	27359	Identifier	h		27287	0					
ANR	27360	Identifier	block_offset		27287	1					
ANR	27361	PrimaryExpression	0		27287	1					
ANR	27362	IdentifierDeclStatement	const int transform_bypass = ! SIMPLE && ( sl -> qscale == 0 && h -> sps . transform_bypass ) ;	21:4:354:438	27287	8	True				
ANR	27363	IdentifierDecl	transform_bypass = ! SIMPLE && ( sl -> qscale == 0 && h -> sps . transform_bypass )		27287	0					
ANR	27364	IdentifierDeclType	const int		27287	0					
ANR	27365	Identifier	transform_bypass		27287	1					
ANR	27366	AssignmentExpression	transform_bypass = ! SIMPLE && ( sl -> qscale == 0 && h -> sps . transform_bypass )		27287	2		=			
ANR	27367	Identifier	transform_bypass		27287	0					
ANR	27368	AndExpression	! SIMPLE && ( sl -> qscale == 0 && h -> sps . transform_bypass )		27287	1		&&			
ANR	27369	UnaryOperationExpression	! SIMPLE		27287	0					
ANR	27370	UnaryOperator	!		27287	0					
ANR	27371	Identifier	SIMPLE		27287	1					
ANR	27372	AndExpression	sl -> qscale == 0 && h -> sps . transform_bypass		27287	1		&&			
ANR	27373	EqualityExpression	sl -> qscale == 0		27287	0		==			
ANR	27374	PtrMemberAccess	sl -> qscale		27287	0					
ANR	27375	Identifier	sl		27287	0					
ANR	27376	Identifier	qscale		27287	1					
ANR	27377	PrimaryExpression	0		27287	1					
ANR	27378	MemberAccess	h -> sps . transform_bypass		27287	1					
ANR	27379	PtrMemberAccess	h -> sps		27287	0					
ANR	27380	Identifier	h		27287	0					
ANR	27381	Identifier	sps		27287	1					
ANR	27382	Identifier	transform_bypass		27287	1					
ANR	27383	IdentifierDeclStatement	const int plane_count = ( SIMPLE || ! CONFIG_GRAY || ! ( h -> flags & CODEC_FLAG_GRAY ) ) ? 3 : 1 ;	23:4:445:539	27287	9	True				
ANR	27384	IdentifierDecl	plane_count = ( SIMPLE || ! CONFIG_GRAY || ! ( h -> flags & CODEC_FLAG_GRAY ) ) ? 3 : 1		27287	0					
ANR	27385	IdentifierDeclType	const int		27287	0					
ANR	27386	Identifier	plane_count		27287	1					
ANR	27387	AssignmentExpression	plane_count = ( SIMPLE || ! CONFIG_GRAY || ! ( h -> flags & CODEC_FLAG_GRAY ) ) ? 3 : 1		27287	2		=			
ANR	27388	Identifier	plane_count		27287	0					
ANR	27389	ConditionalExpression	( SIMPLE || ! CONFIG_GRAY || ! ( h -> flags & CODEC_FLAG_GRAY ) ) ? 3 : 1		27287	1					
ANR	27390	Condition	SIMPLE || ! CONFIG_GRAY || ! ( h -> flags & CODEC_FLAG_GRAY )		27287	0					
ANR	27391	OrExpression	SIMPLE || ! CONFIG_GRAY || ! ( h -> flags & CODEC_FLAG_GRAY )		27287	0		||			
ANR	27392	Identifier	SIMPLE		27287	0					
ANR	27393	OrExpression	! CONFIG_GRAY || ! ( h -> flags & CODEC_FLAG_GRAY )		27287	1		||			
ANR	27394	UnaryOperationExpression	! CONFIG_GRAY		27287	0					
ANR	27395	UnaryOperator	!		27287	0					
ANR	27396	Identifier	CONFIG_GRAY		27287	1					
ANR	27397	UnaryOperationExpression	! ( h -> flags & CODEC_FLAG_GRAY )		27287	1					
ANR	27398	UnaryOperator	!		27287	0					
ANR	27399	BitAndExpression	h -> flags & CODEC_FLAG_GRAY		27287	1		&			
ANR	27400	PtrMemberAccess	h -> flags		27287	0					
ANR	27401	Identifier	h		27287	0					
ANR	27402	Identifier	flags		27287	1					
ANR	27403	Identifier	CODEC_FLAG_GRAY		27287	1					
ANR	27404	PrimaryExpression	3		27287	1					
ANR	27405	PrimaryExpression	1		27287	2					
ANR	27406	ForStatement	for ( p = 0 ; p < plane_count ; p ++ )		27287	10					
ANR	27407	ForInit	p = 0 ;	27:9:553:558	27287	0	True				
ANR	27408	AssignmentExpression	p = 0		27287	0		=			
ANR	27409	Identifier	p		27287	0					
ANR	27410	PrimaryExpression	0		27287	1					
ANR	27411	Condition	p < plane_count	27:16:560:574	27287	1	True				
ANR	27412	RelationalExpression	p < plane_count		27287	0		<			
ANR	27413	Identifier	p		27287	0					
ANR	27414	Identifier	plane_count		27287	1					
ANR	27415	PostIncDecOperationExpression	p ++	27:33:577:579	27287	2	True				
ANR	27416	Identifier	p		27287	0					
ANR	27417	IncDec	++		27287	1					
ANR	27418	CompoundStatement		25:38:495:495	27287	3					
ANR	27419	ExpressionStatement	dest [ p ] = h -> cur_pic . f . data [ p ] + ( ( mb_x << PIXEL_SHIFT ) + mb_y * h -> linesize ) * 16	29:8:593:694	27287	0	True				
ANR	27420	AssignmentExpression	dest [ p ] = h -> cur_pic . f . data [ p ] + ( ( mb_x << PIXEL_SHIFT ) + mb_y * h -> linesize ) * 16		27287	0		=			
ANR	27421	ArrayIndexing	dest [ p ]		27287	0					
ANR	27422	Identifier	dest		27287	0					
ANR	27423	Identifier	p		27287	1					
ANR	27424	AdditiveExpression	h -> cur_pic . f . data [ p ] + ( ( mb_x << PIXEL_SHIFT ) + mb_y * h -> linesize ) * 16		27287	1		+			
ANR	27425	ArrayIndexing	h -> cur_pic . f . data [ p ]		27287	0					
ANR	27426	MemberAccess	h -> cur_pic . f . data		27287	0					
ANR	27427	MemberAccess	h -> cur_pic . f		27287	0					
ANR	27428	PtrMemberAccess	h -> cur_pic		27287	0					
ANR	27429	Identifier	h		27287	0					
ANR	27430	Identifier	cur_pic		27287	1					
ANR	27431	Identifier	f		27287	1					
ANR	27432	Identifier	data		27287	1					
ANR	27433	Identifier	p		27287	1					
ANR	27434	MultiplicativeExpression	( ( mb_x << PIXEL_SHIFT ) + mb_y * h -> linesize ) * 16		27287	1		*			
ANR	27435	AdditiveExpression	( mb_x << PIXEL_SHIFT ) + mb_y * h -> linesize		27287	0		+			
ANR	27436	ShiftExpression	mb_x << PIXEL_SHIFT		27287	0		<<			
ANR	27437	Identifier	mb_x		27287	0					
ANR	27438	Identifier	PIXEL_SHIFT		27287	1					
ANR	27439	MultiplicativeExpression	mb_y * h -> linesize		27287	1		*			
ANR	27440	Identifier	mb_y		27287	0					
ANR	27441	PtrMemberAccess	h -> linesize		27287	1					
ANR	27442	Identifier	h		27287	0					
ANR	27443	Identifier	linesize		27287	1					
ANR	27444	PrimaryExpression	16		27287	1					
ANR	27445	ExpressionStatement	"h -> vdsp . prefetch ( dest [ p ] + ( h -> mb_x & 3 ) * 4 * h -> linesize + ( 64 << PIXEL_SHIFT ) , h -> linesize , 4 )"	33:8:705:828	27287	1	True				
ANR	27446	CallExpression	"h -> vdsp . prefetch ( dest [ p ] + ( h -> mb_x & 3 ) * 4 * h -> linesize + ( 64 << PIXEL_SHIFT ) , h -> linesize , 4 )"		27287	0					
ANR	27447	Callee	h -> vdsp . prefetch		27287	0					
ANR	27448	MemberAccess	h -> vdsp . prefetch		27287	0					
ANR	27449	PtrMemberAccess	h -> vdsp		27287	0					
ANR	27450	Identifier	h		27287	0					
ANR	27451	Identifier	vdsp		27287	1					
ANR	27452	Identifier	prefetch		27287	1					
ANR	27453	ArgumentList	dest [ p ] + ( h -> mb_x & 3 ) * 4 * h -> linesize + ( 64 << PIXEL_SHIFT )		27287	1					
ANR	27454	Argument	dest [ p ] + ( h -> mb_x & 3 ) * 4 * h -> linesize + ( 64 << PIXEL_SHIFT )		27287	0					
ANR	27455	AdditiveExpression	dest [ p ] + ( h -> mb_x & 3 ) * 4 * h -> linesize + ( 64 << PIXEL_SHIFT )		27287	0		+			
ANR	27456	ArrayIndexing	dest [ p ]		27287	0					
ANR	27457	Identifier	dest		27287	0					
ANR	27458	Identifier	p		27287	1					
ANR	27459	AdditiveExpression	( h -> mb_x & 3 ) * 4 * h -> linesize + ( 64 << PIXEL_SHIFT )		27287	1		+			
ANR	27460	MultiplicativeExpression	( h -> mb_x & 3 ) * 4 * h -> linesize		27287	0		*			
ANR	27461	BitAndExpression	h -> mb_x & 3		27287	0		&			
ANR	27462	PtrMemberAccess	h -> mb_x		27287	0					
ANR	27463	Identifier	h		27287	0					
ANR	27464	Identifier	mb_x		27287	1					
ANR	27465	PrimaryExpression	3		27287	1					
ANR	27466	MultiplicativeExpression	4 * h -> linesize		27287	1		*			
ANR	27467	PrimaryExpression	4		27287	0					
ANR	27468	PtrMemberAccess	h -> linesize		27287	1					
ANR	27469	Identifier	h		27287	0					
ANR	27470	Identifier	linesize		27287	1					
ANR	27471	ShiftExpression	64 << PIXEL_SHIFT		27287	1		<<			
ANR	27472	PrimaryExpression	64		27287	0					
ANR	27473	Identifier	PIXEL_SHIFT		27287	1					
ANR	27474	Argument	h -> linesize		27287	1					
ANR	27475	PtrMemberAccess	h -> linesize		27287	0					
ANR	27476	Identifier	h		27287	0					
ANR	27477	Identifier	linesize		27287	1					
ANR	27478	Argument	4		27287	2					
ANR	27479	PrimaryExpression	4		27287	0					
ANR	27480	ExpressionStatement	h -> list_counts [ mb_xy ] = sl -> list_count	41:4:844:882	27287	11	True				
ANR	27481	AssignmentExpression	h -> list_counts [ mb_xy ] = sl -> list_count		27287	0		=			
ANR	27482	ArrayIndexing	h -> list_counts [ mb_xy ]		27287	0					
ANR	27483	PtrMemberAccess	h -> list_counts		27287	0					
ANR	27484	Identifier	h		27287	0					
ANR	27485	Identifier	list_counts		27287	1					
ANR	27486	Identifier	mb_xy		27287	1					
ANR	27487	PtrMemberAccess	sl -> list_count		27287	1					
ANR	27488	Identifier	sl		27287	0					
ANR	27489	Identifier	list_count		27287	1					
ANR	27490	IfStatement	if ( ! SIMPLE && MB_FIELD ( h ) )		27287	12					
ANR	27491	Condition	! SIMPLE && MB_FIELD ( h )	45:8:895:916	27287	0	True				
ANR	27492	AndExpression	! SIMPLE && MB_FIELD ( h )		27287	0		&&			
ANR	27493	UnaryOperationExpression	! SIMPLE		27287	0					
ANR	27494	UnaryOperator	!		27287	0					
ANR	27495	Identifier	SIMPLE		27287	1					
ANR	27496	CallExpression	MB_FIELD ( h )		27287	1					
ANR	27497	Callee	MB_FIELD		27287	0					
ANR	27498	Identifier	MB_FIELD		27287	0					
ANR	27499	ArgumentList	h		27287	1					
ANR	27500	Argument	h		27287	0					
ANR	27501	Identifier	h		27287	0					
ANR	27502	CompoundStatement		43:32:832:832	27287	1					
ANR	27503	ExpressionStatement	linesize = sl -> mb_linesize = sl -> mb_uvlinesize = h -> linesize * 2	47:8:930:998	27287	0	True				
ANR	27504	AssignmentExpression	linesize = sl -> mb_linesize = sl -> mb_uvlinesize = h -> linesize * 2		27287	0		=			
ANR	27505	Identifier	linesize		27287	0					
ANR	27506	AssignmentExpression	sl -> mb_linesize = sl -> mb_uvlinesize = h -> linesize * 2		27287	1		=			
ANR	27507	PtrMemberAccess	sl -> mb_linesize		27287	0					
ANR	27508	Identifier	sl		27287	0					
ANR	27509	Identifier	mb_linesize		27287	1					
ANR	27510	AssignmentExpression	sl -> mb_uvlinesize = h -> linesize * 2		27287	1		=			
ANR	27511	PtrMemberAccess	sl -> mb_uvlinesize		27287	0					
ANR	27512	Identifier	sl		27287	0					
ANR	27513	Identifier	mb_uvlinesize		27287	1					
ANR	27514	MultiplicativeExpression	h -> linesize * 2		27287	1		*			
ANR	27515	PtrMemberAccess	h -> linesize		27287	0					
ANR	27516	Identifier	h		27287	0					
ANR	27517	Identifier	linesize		27287	1					
ANR	27518	PrimaryExpression	2		27287	1					
ANR	27519	ExpressionStatement	block_offset = & h -> block_offset [ 48 ]	49:8:1009:1044	27287	1	True				
ANR	27520	AssignmentExpression	block_offset = & h -> block_offset [ 48 ]		27287	0		=			
ANR	27521	Identifier	block_offset		27287	0					
ANR	27522	UnaryOperationExpression	& h -> block_offset [ 48 ]		27287	1					
ANR	27523	UnaryOperator	&		27287	0					
ANR	27524	ArrayIndexing	h -> block_offset [ 48 ]		27287	1					
ANR	27525	PtrMemberAccess	h -> block_offset		27287	0					
ANR	27526	Identifier	h		27287	0					
ANR	27527	Identifier	block_offset		27287	1					
ANR	27528	PrimaryExpression	48		27287	1					
ANR	27529	IfStatement	if ( mb_y & 1 )		27287	2					
ANR	27530	Condition	mb_y & 1	51:12:1059:1066	27287	0	True				
ANR	27531	BitAndExpression	mb_y & 1		27287	0		&			
ANR	27532	Identifier	mb_y		27287	0					
ANR	27533	PrimaryExpression	1		27287	1					
ANR	27534	ForStatement	for ( p = 0 ; p < 3 ; p ++ )		27287	1					
ANR	27535	ForInit	p = 0 ;	53:17:1123:1128	27287	0	True				
ANR	27536	AssignmentExpression	p = 0		27287	0		=			
ANR	27537	Identifier	p		27287	0					
ANR	27538	PrimaryExpression	0		27287	1					
ANR	27539	Condition	p < 3	53:24:1130:1134	27287	1	True				
ANR	27540	RelationalExpression	p < 3		27287	0		<			
ANR	27541	Identifier	p		27287	0					
ANR	27542	PrimaryExpression	3		27287	1					
ANR	27543	PostIncDecOperationExpression	p ++	53:31:1137:1139	27287	2	True				
ANR	27544	Identifier	p		27287	0					
ANR	27545	IncDec	++		27287	1					
ANR	27546	ExpressionStatement	dest [ p ] -= h -> linesize * 15	55:16:1159:1186	27287	3	True				
ANR	27547	AssignmentExpression	dest [ p ] -= h -> linesize * 15		27287	0		-=			
ANR	27548	ArrayIndexing	dest [ p ]		27287	0					
ANR	27549	Identifier	dest		27287	0					
ANR	27550	Identifier	p		27287	1					
ANR	27551	MultiplicativeExpression	h -> linesize * 15		27287	1		*			
ANR	27552	PtrMemberAccess	h -> linesize		27287	0					
ANR	27553	Identifier	h		27287	0					
ANR	27554	Identifier	linesize		27287	1					
ANR	27555	PrimaryExpression	15		27287	1					
ANR	27556	IfStatement	if ( FRAME_MBAFF ( h ) )		27287	3					
ANR	27557	Condition	FRAME_MBAFF ( h )	57:12:1201:1214	27287	0	True				
ANR	27558	CallExpression	FRAME_MBAFF ( h )		27287	0					
ANR	27559	Callee	FRAME_MBAFF		27287	0					
ANR	27560	Identifier	FRAME_MBAFF		27287	0					
ANR	27561	ArgumentList	h		27287	1					
ANR	27562	Argument	h		27287	0					
ANR	27563	Identifier	h		27287	0					
ANR	27564	CompoundStatement		57:12:1145:1153	27287	1					
ANR	27565	IdentifierDeclStatement	int list ;	59:12:1232:1240	27287	0	True				
ANR	27566	IdentifierDecl	list		27287	0					
ANR	27567	IdentifierDeclType	int		27287	0					
ANR	27568	Identifier	list		27287	1					
ANR	27569	ForStatement	for ( list = 0 ; list < sl -> list_count ; list ++ )		27287	1					
ANR	27570	ForInit	list = 0 ;	61:17:1260:1268	27287	0	True				
ANR	27571	AssignmentExpression	list = 0		27287	0		=			
ANR	27572	Identifier	list		27287	0					
ANR	27573	PrimaryExpression	0		27287	1					
ANR	27574	Condition	list < sl -> list_count	61:27:1270:1290	27287	1	True				
ANR	27575	RelationalExpression	list < sl -> list_count		27287	0		<			
ANR	27576	Identifier	list		27287	0					
ANR	27577	PtrMemberAccess	sl -> list_count		27287	1					
ANR	27578	Identifier	sl		27287	0					
ANR	27579	Identifier	list_count		27287	1					
ANR	27580	PostIncDecOperationExpression	list ++	61:50:1293:1298	27287	2	True				
ANR	27581	Identifier	list		27287	0					
ANR	27582	IncDec	++		27287	1					
ANR	27583	CompoundStatement		59:58:1214:1214	27287	3					
ANR	27584	IfStatement	"if ( ! USES_LIST ( mb_type , list ) )"		27287	0					
ANR	27585	Condition	"! USES_LIST ( mb_type , list )"	63:20:1324:1348	27287	0	True				
ANR	27586	UnaryOperationExpression	"! USES_LIST ( mb_type , list )"		27287	0					
ANR	27587	UnaryOperator	!		27287	0					
ANR	27588	CallExpression	"USES_LIST ( mb_type , list )"		27287	1					
ANR	27589	Callee	USES_LIST		27287	0					
ANR	27590	Identifier	USES_LIST		27287	0					
ANR	27591	ArgumentList	mb_type		27287	1					
ANR	27592	Argument	mb_type		27287	0					
ANR	27593	Identifier	mb_type		27287	0					
ANR	27594	Argument	list		27287	1					
ANR	27595	Identifier	list		27287	0					
ANR	27596	ContinueStatement	continue ;	65:20:1372:1380	27287	1	True				
ANR	27597	IfStatement	if ( IS_16X16 ( mb_type ) )		27287	1					
ANR	27598	Condition	IS_16X16 ( mb_type )	67:20:1403:1419	27287	0	True				
ANR	27599	CallExpression	IS_16X16 ( mb_type )		27287	0					
ANR	27600	Callee	IS_16X16		27287	0					
ANR	27601	Identifier	IS_16X16		27287	0					
ANR	27602	ArgumentList	mb_type		27287	1					
ANR	27603	Argument	mb_type		27287	0					
ANR	27604	Identifier	mb_type		27287	0					
ANR	27605	CompoundStatement		67:20:1358:1402	27287	1					
ANR	27606	IdentifierDeclStatement	int8_t * ref = & sl -> ref_cache [ list ] [ scan8 [ 0 ] ] ;	69:20:1445:1489	27287	0	True				
ANR	27607	IdentifierDecl	* ref = & sl -> ref_cache [ list ] [ scan8 [ 0 ] ]		27287	0					
ANR	27608	IdentifierDeclType	int8_t *		27287	0					
ANR	27609	Identifier	ref		27287	1					
ANR	27610	AssignmentExpression	* ref = & sl -> ref_cache [ list ] [ scan8 [ 0 ] ]		27287	2		=			
ANR	27611	Identifier	ref		27287	0					
ANR	27612	UnaryOperationExpression	& sl -> ref_cache [ list ] [ scan8 [ 0 ] ]		27287	1					
ANR	27613	UnaryOperator	&		27287	0					
ANR	27614	ArrayIndexing	sl -> ref_cache [ list ] [ scan8 [ 0 ] ]		27287	1					
ANR	27615	ArrayIndexing	sl -> ref_cache [ list ]		27287	0					
ANR	27616	PtrMemberAccess	sl -> ref_cache		27287	0					
ANR	27617	Identifier	sl		27287	0					
ANR	27618	Identifier	ref_cache		27287	1					
ANR	27619	Identifier	list		27287	1					
ANR	27620	ArrayIndexing	scan8 [ 0 ]		27287	1					
ANR	27621	Identifier	scan8		27287	0					
ANR	27622	PrimaryExpression	0		27287	1					
ANR	27623	ExpressionStatement	"fill_rectangle ( ref , 4 , 4 , 8 , ( 16 + * ref ) ^ ( h -> mb_y & 1 ) , 1 )"	71:20:1512:1572	27287	1	True				
ANR	27624	CallExpression	"fill_rectangle ( ref , 4 , 4 , 8 , ( 16 + * ref ) ^ ( h -> mb_y & 1 ) , 1 )"		27287	0					
ANR	27625	Callee	fill_rectangle		27287	0					
ANR	27626	Identifier	fill_rectangle		27287	0					
ANR	27627	ArgumentList	ref		27287	1					
ANR	27628	Argument	ref		27287	0					
ANR	27629	Identifier	ref		27287	0					
ANR	27630	Argument	4		27287	1					
ANR	27631	PrimaryExpression	4		27287	0					
ANR	27632	Argument	4		27287	2					
ANR	27633	PrimaryExpression	4		27287	0					
ANR	27634	Argument	8		27287	3					
ANR	27635	PrimaryExpression	8		27287	0					
ANR	27636	Argument	( 16 + * ref ) ^ ( h -> mb_y & 1 )		27287	4					
ANR	27637	ExclusiveOrExpression	( 16 + * ref ) ^ ( h -> mb_y & 1 )		27287	0		^			
ANR	27638	AdditiveExpression	16 + * ref		27287	0		+			
ANR	27639	PrimaryExpression	16		27287	0					
ANR	27640	UnaryOperationExpression	* ref		27287	1					
ANR	27641	UnaryOperator	*		27287	0					
ANR	27642	Identifier	ref		27287	1					
ANR	27643	BitAndExpression	h -> mb_y & 1		27287	1		&			
ANR	27644	PtrMemberAccess	h -> mb_y		27287	0					
ANR	27645	Identifier	h		27287	0					
ANR	27646	Identifier	mb_y		27287	1					
ANR	27647	PrimaryExpression	1		27287	1					
ANR	27648	Argument	1		27287	5					
ANR	27649	PrimaryExpression	1		27287	0					
ANR	27650	ElseStatement	else		27287	0					
ANR	27651	CompoundStatement		71:23:1511:1511	27287	0					
ANR	27652	ForStatement	for ( i = 0 ; i < 16 ; i += 4 )		27287	0					
ANR	27653	ForInit	i = 0 ;	75:25:1626:1631	27287	0	True				
ANR	27654	AssignmentExpression	i = 0		27287	0		=			
ANR	27655	Identifier	i		27287	0					
ANR	27656	PrimaryExpression	0		27287	1					
ANR	27657	Condition	i < 16	75:32:1633:1638	27287	1	True				
ANR	27658	RelationalExpression	i < 16		27287	0		<			
ANR	27659	Identifier	i		27287	0					
ANR	27660	PrimaryExpression	16		27287	1					
ANR	27661	AssignmentExpression	i += 4	75:40:1641:1646	27287	2	True	+=			
ANR	27662	Identifier	i		27287	0					
ANR	27663	PrimaryExpression	4		27287	1					
ANR	27664	CompoundStatement		75:24:1589:1628	27287	3					
ANR	27665	IdentifierDeclStatement	int ref = sl -> ref_cache [ list ] [ scan8 [ i ] ] ;	77:24:1676:1715	27287	0	True				
ANR	27666	IdentifierDecl	ref = sl -> ref_cache [ list ] [ scan8 [ i ] ]		27287	0					
ANR	27667	IdentifierDeclType	int		27287	0					
ANR	27668	Identifier	ref		27287	1					
ANR	27669	AssignmentExpression	ref = sl -> ref_cache [ list ] [ scan8 [ i ] ]		27287	2		=			
ANR	27670	Identifier	ref		27287	0					
ANR	27671	ArrayIndexing	sl -> ref_cache [ list ] [ scan8 [ i ] ]		27287	1					
ANR	27672	ArrayIndexing	sl -> ref_cache [ list ]		27287	0					
ANR	27673	PtrMemberAccess	sl -> ref_cache		27287	0					
ANR	27674	Identifier	sl		27287	0					
ANR	27675	Identifier	ref_cache		27287	1					
ANR	27676	Identifier	list		27287	1					
ANR	27677	ArrayIndexing	scan8 [ i ]		27287	1					
ANR	27678	Identifier	scan8		27287	0					
ANR	27679	Identifier	i		27287	1					
ANR	27680	IfStatement	if ( ref >= 0 )		27287	1					
ANR	27681	Condition	ref >= 0	79:28:1746:1753	27287	0	True				
ANR	27682	RelationalExpression	ref >= 0		27287	0		>=			
ANR	27683	Identifier	ref		27287	0					
ANR	27684	PrimaryExpression	0		27287	1					
ANR	27685	ExpressionStatement	"fill_rectangle ( & sl -> ref_cache [ list ] [ scan8 [ i ] ] , 2 , 2 , 8 , ( 16 + ref ) ^ ( h -> mb_y & 1 ) , 1 )"	81:28:1785:1915	27287	1	True				
ANR	27686	CallExpression	"fill_rectangle ( & sl -> ref_cache [ list ] [ scan8 [ i ] ] , 2 , 2 , 8 , ( 16 + ref ) ^ ( h -> mb_y & 1 ) , 1 )"		27287	0					
ANR	27687	Callee	fill_rectangle		27287	0					
ANR	27688	Identifier	fill_rectangle		27287	0					
ANR	27689	ArgumentList	& sl -> ref_cache [ list ] [ scan8 [ i ] ]		27287	1					
ANR	27690	Argument	& sl -> ref_cache [ list ] [ scan8 [ i ] ]		27287	0					
ANR	27691	UnaryOperationExpression	& sl -> ref_cache [ list ] [ scan8 [ i ] ]		27287	0					
ANR	27692	UnaryOperator	&		27287	0					
ANR	27693	ArrayIndexing	sl -> ref_cache [ list ] [ scan8 [ i ] ]		27287	1					
ANR	27694	ArrayIndexing	sl -> ref_cache [ list ]		27287	0					
ANR	27695	PtrMemberAccess	sl -> ref_cache		27287	0					
ANR	27696	Identifier	sl		27287	0					
ANR	27697	Identifier	ref_cache		27287	1					
ANR	27698	Identifier	list		27287	1					
ANR	27699	ArrayIndexing	scan8 [ i ]		27287	1					
ANR	27700	Identifier	scan8		27287	0					
ANR	27701	Identifier	i		27287	1					
ANR	27702	Argument	2		27287	1					
ANR	27703	PrimaryExpression	2		27287	0					
ANR	27704	Argument	2		27287	2					
ANR	27705	PrimaryExpression	2		27287	0					
ANR	27706	Argument	8		27287	3					
ANR	27707	PrimaryExpression	8		27287	0					
ANR	27708	Argument	( 16 + ref ) ^ ( h -> mb_y & 1 )		27287	4					
ANR	27709	ExclusiveOrExpression	( 16 + ref ) ^ ( h -> mb_y & 1 )		27287	0		^			
ANR	27710	AdditiveExpression	16 + ref		27287	0		+			
ANR	27711	PrimaryExpression	16		27287	0					
ANR	27712	Identifier	ref		27287	1					
ANR	27713	BitAndExpression	h -> mb_y & 1		27287	1		&			
ANR	27714	PtrMemberAccess	h -> mb_y		27287	0					
ANR	27715	Identifier	h		27287	0					
ANR	27716	Identifier	mb_y		27287	1					
ANR	27717	PrimaryExpression	1		27287	1					
ANR	27718	Argument	1		27287	5					
ANR	27719	PrimaryExpression	1		27287	0					
ANR	27720	ElseStatement	else		27287	0					
ANR	27721	CompoundStatement		91:11:1910:1910	27287	0					
ANR	27722	ExpressionStatement	linesize = sl -> mb_linesize = sl -> mb_uvlinesize = h -> linesize	95:8:2008:2068	27287	0	True				
ANR	27723	AssignmentExpression	linesize = sl -> mb_linesize = sl -> mb_uvlinesize = h -> linesize		27287	0		=			
ANR	27724	Identifier	linesize		27287	0					
ANR	27725	AssignmentExpression	sl -> mb_linesize = sl -> mb_uvlinesize = h -> linesize		27287	1		=			
ANR	27726	PtrMemberAccess	sl -> mb_linesize		27287	0					
ANR	27727	Identifier	sl		27287	0					
ANR	27728	Identifier	mb_linesize		27287	1					
ANR	27729	AssignmentExpression	sl -> mb_uvlinesize = h -> linesize		27287	1		=			
ANR	27730	PtrMemberAccess	sl -> mb_uvlinesize		27287	0					
ANR	27731	Identifier	sl		27287	0					
ANR	27732	Identifier	mb_uvlinesize		27287	1					
ANR	27733	PtrMemberAccess	h -> linesize		27287	1					
ANR	27734	Identifier	h		27287	0					
ANR	27735	Identifier	linesize		27287	1					
ANR	27736	IfStatement	if ( ! SIMPLE && IS_INTRA_PCM ( mb_type ) )		27287	13					
ANR	27737	Condition	! SIMPLE && IS_INTRA_PCM ( mb_type )	101:8:2088:2119	27287	0	True				
ANR	27738	AndExpression	! SIMPLE && IS_INTRA_PCM ( mb_type )		27287	0		&&			
ANR	27739	UnaryOperationExpression	! SIMPLE		27287	0					
ANR	27740	UnaryOperator	!		27287	0					
ANR	27741	Identifier	SIMPLE		27287	1					
ANR	27742	CallExpression	IS_INTRA_PCM ( mb_type )		27287	1					
ANR	27743	Callee	IS_INTRA_PCM		27287	0					
ANR	27744	Identifier	IS_INTRA_PCM		27287	0					
ANR	27745	ArgumentList	mb_type		27287	1					
ANR	27746	Argument	mb_type		27287	0					
ANR	27747	Identifier	mb_type		27287	0					
ANR	27748	CompoundStatement		99:42:2035:2035	27287	1					
ANR	27749	IfStatement	if ( PIXEL_SHIFT )		27287	0					
ANR	27750	Condition	PIXEL_SHIFT	103:12:2137:2147	27287	0	True				
ANR	27751	Identifier	PIXEL_SHIFT		27287	0					
ANR	27752	CompoundStatement		105:12:2136:2152	27287	1					
ANR	27753	IdentifierDeclStatement	const int bit_depth = h -> sps . bit_depth_luma ;	105:12:2165:2208	27287	0	True				
ANR	27754	IdentifierDecl	bit_depth = h -> sps . bit_depth_luma		27287	0					
ANR	27755	IdentifierDeclType	const int		27287	0					
ANR	27756	Identifier	bit_depth		27287	1					
ANR	27757	AssignmentExpression	bit_depth = h -> sps . bit_depth_luma		27287	2		=			
ANR	27758	Identifier	bit_depth		27287	0					
ANR	27759	MemberAccess	h -> sps . bit_depth_luma		27287	1					
ANR	27760	PtrMemberAccess	h -> sps		27287	0					
ANR	27761	Identifier	h		27287	0					
ANR	27762	Identifier	sps		27287	1					
ANR	27763	Identifier	bit_depth_luma		27287	1					
ANR	27764	IdentifierDeclStatement	GetBitContext gb ;	107:12:2223:2239	27287	1	True				
ANR	27765	IdentifierDecl	gb		27287	0					
ANR	27766	IdentifierDeclType	GetBitContext		27287	0					
ANR	27767	Identifier	gb		27287	1					
ANR	27768	ExpressionStatement	"init_get_bits ( & gb , sl -> intra_pcm_ptr , 768 * bit_depth )"	109:12:2254:2308	27287	2	True				
ANR	27769	CallExpression	"init_get_bits ( & gb , sl -> intra_pcm_ptr , 768 * bit_depth )"		27287	0					
ANR	27770	Callee	init_get_bits		27287	0					
ANR	27771	Identifier	init_get_bits		27287	0					
ANR	27772	ArgumentList	& gb		27287	1					
ANR	27773	Argument	& gb		27287	0					
ANR	27774	UnaryOperationExpression	& gb		27287	0					
ANR	27775	UnaryOperator	&		27287	0					
ANR	27776	Identifier	gb		27287	1					
ANR	27777	Argument	sl -> intra_pcm_ptr		27287	1					
ANR	27778	PtrMemberAccess	sl -> intra_pcm_ptr		27287	0					
ANR	27779	Identifier	sl		27287	0					
ANR	27780	Identifier	intra_pcm_ptr		27287	1					
ANR	27781	Argument	768 * bit_depth		27287	2					
ANR	27782	MultiplicativeExpression	768 * bit_depth		27287	0		*			
ANR	27783	PrimaryExpression	768		27287	0					
ANR	27784	Identifier	bit_depth		27287	1					
ANR	27785	ForStatement	for ( p = 0 ; p < plane_count ; p ++ )		27287	3					
ANR	27786	ForInit	p = 0 ;	113:17:2330:2335	27287	0	True				
ANR	27787	AssignmentExpression	p = 0		27287	0		=			
ANR	27788	Identifier	p		27287	0					
ANR	27789	PrimaryExpression	0		27287	1					
ANR	27790	Condition	p < plane_count	113:24:2337:2351	27287	1	True				
ANR	27791	RelationalExpression	p < plane_count		27287	0		<			
ANR	27792	Identifier	p		27287	0					
ANR	27793	Identifier	plane_count		27287	1					
ANR	27794	PostIncDecOperationExpression	p ++	113:41:2354:2356	27287	2	True				
ANR	27795	Identifier	p		27287	0					
ANR	27796	IncDec	++		27287	1					
ANR	27797	ForStatement	for ( i = 0 ; i < 16 ; i ++ )		27287	3					
ANR	27798	ForInit	i = 0 ;	115:21:2381:2386	27287	0	True				
ANR	27799	AssignmentExpression	i = 0		27287	0		=			
ANR	27800	Identifier	i		27287	0					
ANR	27801	PrimaryExpression	0		27287	1					
ANR	27802	Condition	i < 16	115:28:2388:2393	27287	1	True				
ANR	27803	RelationalExpression	i < 16		27287	0		<			
ANR	27804	Identifier	i		27287	0					
ANR	27805	PrimaryExpression	16		27287	1					
ANR	27806	PostIncDecOperationExpression	i ++	115:36:2396:2398	27287	2	True				
ANR	27807	Identifier	i		27287	0					
ANR	27808	IncDec	++		27287	1					
ANR	27809	CompoundStatement		115:20:2337:2389	27287	3					
ANR	27810	IdentifierDeclStatement	uint16_t * tmp = ( uint16_t * ) ( dest [ p ] + i * linesize ) ;	117:20:2424:2476	27287	0	True				
ANR	27811	IdentifierDecl	* tmp = ( uint16_t * ) ( dest [ p ] + i * linesize )		27287	0					
ANR	27812	IdentifierDeclType	uint16_t *		27287	0					
ANR	27813	Identifier	tmp		27287	1					
ANR	27814	AssignmentExpression	* tmp = ( uint16_t * ) ( dest [ p ] + i * linesize )		27287	2		=			
ANR	27815	Identifier	tmp		27287	0					
ANR	27816	CastExpression	( uint16_t * ) ( dest [ p ] + i * linesize )		27287	1					
ANR	27817	CastTarget	uint16_t *		27287	0					
ANR	27818	AdditiveExpression	dest [ p ] + i * linesize		27287	1		+			
ANR	27819	ArrayIndexing	dest [ p ]		27287	0					
ANR	27820	Identifier	dest		27287	0					
ANR	27821	Identifier	p		27287	1					
ANR	27822	MultiplicativeExpression	i * linesize		27287	1		*			
ANR	27823	Identifier	i		27287	0					
ANR	27824	Identifier	linesize		27287	1					
ANR	27825	ForStatement	for ( j = 0 ; j < 16 ; j ++ )		27287	1					
ANR	27826	ForInit	j = 0 ;	119:25:2504:2509	27287	0	True				
ANR	27827	AssignmentExpression	j = 0		27287	0		=			
ANR	27828	Identifier	j		27287	0					
ANR	27829	PrimaryExpression	0		27287	1					
ANR	27830	Condition	j < 16	119:32:2511:2516	27287	1	True				
ANR	27831	RelationalExpression	j < 16		27287	0		<			
ANR	27832	Identifier	j		27287	0					
ANR	27833	PrimaryExpression	16		27287	1					
ANR	27834	PostIncDecOperationExpression	j ++	119:40:2519:2521	27287	2	True				
ANR	27835	Identifier	j		27287	0					
ANR	27836	IncDec	++		27287	1					
ANR	27837	ExpressionStatement	"tmp [ j ] = get_bits ( & gb , bit_depth )"	121:24:2549:2582	27287	3	True				
ANR	27838	AssignmentExpression	"tmp [ j ] = get_bits ( & gb , bit_depth )"		27287	0		=			
ANR	27839	ArrayIndexing	tmp [ j ]		27287	0					
ANR	27840	Identifier	tmp		27287	0					
ANR	27841	Identifier	j		27287	1					
ANR	27842	CallExpression	"get_bits ( & gb , bit_depth )"		27287	1					
ANR	27843	Callee	get_bits		27287	0					
ANR	27844	Identifier	get_bits		27287	0					
ANR	27845	ArgumentList	& gb		27287	1					
ANR	27846	Argument	& gb		27287	0					
ANR	27847	UnaryOperationExpression	& gb		27287	0					
ANR	27848	UnaryOperator	&		27287	0					
ANR	27849	Identifier	gb		27287	1					
ANR	27850	Argument	bit_depth		27287	1					
ANR	27851	Identifier	bit_depth		27287	0					
ANR	27852	ElseStatement	else		27287	0					
ANR	27853	CompoundStatement		123:15:2532:2532	27287	0					
ANR	27854	ForStatement	for ( p = 0 ; p < plane_count ; p ++ )		27287	0					
ANR	27855	ForInit	p = 0 ;	127:17:2639:2644	27287	0	True				
ANR	27856	AssignmentExpression	p = 0		27287	0		=			
ANR	27857	Identifier	p		27287	0					
ANR	27858	PrimaryExpression	0		27287	1					
ANR	27859	Condition	p < plane_count	127:24:2646:2660	27287	1	True				
ANR	27860	RelationalExpression	p < plane_count		27287	0		<			
ANR	27861	Identifier	p		27287	0					
ANR	27862	Identifier	plane_count		27287	1					
ANR	27863	PostIncDecOperationExpression	p ++	127:41:2663:2665	27287	2	True				
ANR	27864	Identifier	p		27287	0					
ANR	27865	IncDec	++		27287	1					
ANR	27866	ForStatement	for ( i = 0 ; i < 16 ; i ++ )		27287	3					
ANR	27867	ForInit	i = 0 ;	129:21:2690:2695	27287	0	True				
ANR	27868	AssignmentExpression	i = 0		27287	0		=			
ANR	27869	Identifier	i		27287	0					
ANR	27870	PrimaryExpression	0		27287	1					
ANR	27871	Condition	i < 16	129:28:2697:2702	27287	1	True				
ANR	27872	RelationalExpression	i < 16		27287	0		<			
ANR	27873	Identifier	i		27287	0					
ANR	27874	PrimaryExpression	16		27287	1					
ANR	27875	PostIncDecOperationExpression	i ++	129:36:2705:2707	27287	2	True				
ANR	27876	Identifier	i		27287	0					
ANR	27877	IncDec	++		27287	1					
ANR	27878	ExpressionStatement	"memcpy ( dest [ p ] + i * linesize , sl -> intra_pcm_ptr + p * 256 + i * 16 , 16 )"	131:20:2731:2831	27287	3	True				
ANR	27879	CallExpression	"memcpy ( dest [ p ] + i * linesize , sl -> intra_pcm_ptr + p * 256 + i * 16 , 16 )"		27287	0					
ANR	27880	Callee	memcpy		27287	0					
ANR	27881	Identifier	memcpy		27287	0					
ANR	27882	ArgumentList	dest [ p ] + i * linesize		27287	1					
ANR	27883	Argument	dest [ p ] + i * linesize		27287	0					
ANR	27884	AdditiveExpression	dest [ p ] + i * linesize		27287	0		+			
ANR	27885	ArrayIndexing	dest [ p ]		27287	0					
ANR	27886	Identifier	dest		27287	0					
ANR	27887	Identifier	p		27287	1					
ANR	27888	MultiplicativeExpression	i * linesize		27287	1		*			
ANR	27889	Identifier	i		27287	0					
ANR	27890	Identifier	linesize		27287	1					
ANR	27891	Argument	sl -> intra_pcm_ptr + p * 256 + i * 16		27287	1					
ANR	27892	AdditiveExpression	sl -> intra_pcm_ptr + p * 256 + i * 16		27287	0		+			
ANR	27893	PtrMemberAccess	sl -> intra_pcm_ptr		27287	0					
ANR	27894	Identifier	sl		27287	0					
ANR	27895	Identifier	intra_pcm_ptr		27287	1					
ANR	27896	AdditiveExpression	p * 256 + i * 16		27287	1		+			
ANR	27897	MultiplicativeExpression	p * 256		27287	0		*			
ANR	27898	Identifier	p		27287	0					
ANR	27899	PrimaryExpression	256		27287	1					
ANR	27900	MultiplicativeExpression	i * 16		27287	1		*			
ANR	27901	Identifier	i		27287	0					
ANR	27902	PrimaryExpression	16		27287	1					
ANR	27903	Argument	16		27287	2					
ANR	27904	PrimaryExpression	16		27287	0					
ANR	27905	ElseStatement	else		27287	0					
ANR	27906	CompoundStatement		135:11:2769:2769	27287	0					
ANR	27907	IfStatement	if ( IS_INTRA ( mb_type ) )		27287	0					
ANR	27908	Condition	IS_INTRA ( mb_type )	139:12:2871:2887	27287	0	True				
ANR	27909	CallExpression	IS_INTRA ( mb_type )		27287	0					
ANR	27910	Callee	IS_INTRA		27287	0					
ANR	27911	Identifier	IS_INTRA		27287	0					
ANR	27912	ArgumentList	mb_type		27287	1					
ANR	27913	Argument	mb_type		27287	0					
ANR	27914	Identifier	mb_type		27287	0					
ANR	27915	CompoundStatement		137:31:2803:2803	27287	1					
ANR	27916	IfStatement	if ( h -> deblocking_filter )		27287	0					
ANR	27917	Condition	h -> deblocking_filter	141:16:2909:2928	27287	0	True				
ANR	27918	PtrMemberAccess	h -> deblocking_filter		27287	0					
ANR	27919	Identifier	h		27287	0					
ANR	27920	Identifier	deblocking_filter		27287	1					
ANR	27921	ExpressionStatement	"xchg_mb_border ( h , sl , dest [ 0 ] , dest [ 1 ] , dest [ 2 ] , linesize , linesize , 1 , 1 , SIMPLE , PIXEL_SHIFT )"	143:16:2948:3075	27287	1	True				
ANR	27922	CallExpression	"xchg_mb_border ( h , sl , dest [ 0 ] , dest [ 1 ] , dest [ 2 ] , linesize , linesize , 1 , 1 , SIMPLE , PIXEL_SHIFT )"		27287	0					
ANR	27923	Callee	xchg_mb_border		27287	0					
ANR	27924	Identifier	xchg_mb_border		27287	0					
ANR	27925	ArgumentList	h		27287	1					
ANR	27926	Argument	h		27287	0					
ANR	27927	Identifier	h		27287	0					
ANR	27928	Argument	sl		27287	1					
ANR	27929	Identifier	sl		27287	0					
ANR	27930	Argument	dest [ 0 ]		27287	2					
ANR	27931	ArrayIndexing	dest [ 0 ]		27287	0					
ANR	27932	Identifier	dest		27287	0					
ANR	27933	PrimaryExpression	0		27287	1					
ANR	27934	Argument	dest [ 1 ]		27287	3					
ANR	27935	ArrayIndexing	dest [ 1 ]		27287	0					
ANR	27936	Identifier	dest		27287	0					
ANR	27937	PrimaryExpression	1		27287	1					
ANR	27938	Argument	dest [ 2 ]		27287	4					
ANR	27939	ArrayIndexing	dest [ 2 ]		27287	0					
ANR	27940	Identifier	dest		27287	0					
ANR	27941	PrimaryExpression	2		27287	1					
ANR	27942	Argument	linesize		27287	5					
ANR	27943	Identifier	linesize		27287	0					
ANR	27944	Argument	linesize		27287	6					
ANR	27945	Identifier	linesize		27287	0					
ANR	27946	Argument	1		27287	7					
ANR	27947	PrimaryExpression	1		27287	0					
ANR	27948	Argument	1		27287	8					
ANR	27949	PrimaryExpression	1		27287	0					
ANR	27950	Argument	SIMPLE		27287	9					
ANR	27951	Identifier	SIMPLE		27287	0					
ANR	27952	Argument	PIXEL_SHIFT		27287	10					
ANR	27953	Identifier	PIXEL_SHIFT		27287	0					
ANR	27954	ForStatement	for ( p = 0 ; p < plane_count ; p ++ )		27287	1					
ANR	27955	ForInit	p = 0 ;	149:17:3097:3102	27287	0	True				
ANR	27956	AssignmentExpression	p = 0		27287	0		=			
ANR	27957	Identifier	p		27287	0					
ANR	27958	PrimaryExpression	0		27287	1					
ANR	27959	Condition	p < plane_count	149:24:3104:3118	27287	1	True				
ANR	27960	RelationalExpression	p < plane_count		27287	0		<			
ANR	27961	Identifier	p		27287	0					
ANR	27962	Identifier	plane_count		27287	1					
ANR	27963	PostIncDecOperationExpression	p ++	149:41:3121:3123	27287	2	True				
ANR	27964	Identifier	p		27287	0					
ANR	27965	IncDec	++		27287	1					
ANR	27966	ExpressionStatement	"hl_decode_mb_predict_luma ( h , sl , mb_type , 1 , SIMPLE , transform_bypass , PIXEL_SHIFT , block_offset , linesize , dest [ p ] , p )"	151:16:3143:3348	27287	3	True				
ANR	27967	CallExpression	"hl_decode_mb_predict_luma ( h , sl , mb_type , 1 , SIMPLE , transform_bypass , PIXEL_SHIFT , block_offset , linesize , dest [ p ] , p )"		27287	0					
ANR	27968	Callee	hl_decode_mb_predict_luma		27287	0					
ANR	27969	Identifier	hl_decode_mb_predict_luma		27287	0					
ANR	27970	ArgumentList	h		27287	1					
ANR	27971	Argument	h		27287	0					
ANR	27972	Identifier	h		27287	0					
ANR	27973	Argument	sl		27287	1					
ANR	27974	Identifier	sl		27287	0					
ANR	27975	Argument	mb_type		27287	2					
ANR	27976	Identifier	mb_type		27287	0					
ANR	27977	Argument	1		27287	3					
ANR	27978	PrimaryExpression	1		27287	0					
ANR	27979	Argument	SIMPLE		27287	4					
ANR	27980	Identifier	SIMPLE		27287	0					
ANR	27981	Argument	transform_bypass		27287	5					
ANR	27982	Identifier	transform_bypass		27287	0					
ANR	27983	Argument	PIXEL_SHIFT		27287	6					
ANR	27984	Identifier	PIXEL_SHIFT		27287	0					
ANR	27985	Argument	block_offset		27287	7					
ANR	27986	Identifier	block_offset		27287	0					
ANR	27987	Argument	linesize		27287	8					
ANR	27988	Identifier	linesize		27287	0					
ANR	27989	Argument	dest [ p ]		27287	9					
ANR	27990	ArrayIndexing	dest [ p ]		27287	0					
ANR	27991	Identifier	dest		27287	0					
ANR	27992	Identifier	p		27287	1					
ANR	27993	Argument	p		27287	10					
ANR	27994	Identifier	p		27287	0					
ANR	27995	IfStatement	if ( h -> deblocking_filter )		27287	2					
ANR	27996	Condition	h -> deblocking_filter	159:16:3369:3388	27287	0	True				
ANR	27997	PtrMemberAccess	h -> deblocking_filter		27287	0					
ANR	27998	Identifier	h		27287	0					
ANR	27999	Identifier	deblocking_filter		27287	1					
ANR	28000	ExpressionStatement	"xchg_mb_border ( h , sl , dest [ 0 ] , dest [ 1 ] , dest [ 2 ] , linesize , linesize , 0 , 1 , SIMPLE , PIXEL_SHIFT )"	161:16:3408:3535	27287	1	True				
ANR	28001	CallExpression	"xchg_mb_border ( h , sl , dest [ 0 ] , dest [ 1 ] , dest [ 2 ] , linesize , linesize , 0 , 1 , SIMPLE , PIXEL_SHIFT )"		27287	0					
ANR	28002	Callee	xchg_mb_border		27287	0					
ANR	28003	Identifier	xchg_mb_border		27287	0					
ANR	28004	ArgumentList	h		27287	1					
ANR	28005	Argument	h		27287	0					
ANR	28006	Identifier	h		27287	0					
ANR	28007	Argument	sl		27287	1					
ANR	28008	Identifier	sl		27287	0					
ANR	28009	Argument	dest [ 0 ]		27287	2					
ANR	28010	ArrayIndexing	dest [ 0 ]		27287	0					
ANR	28011	Identifier	dest		27287	0					
ANR	28012	PrimaryExpression	0		27287	1					
ANR	28013	Argument	dest [ 1 ]		27287	3					
ANR	28014	ArrayIndexing	dest [ 1 ]		27287	0					
ANR	28015	Identifier	dest		27287	0					
ANR	28016	PrimaryExpression	1		27287	1					
ANR	28017	Argument	dest [ 2 ]		27287	4					
ANR	28018	ArrayIndexing	dest [ 2 ]		27287	0					
ANR	28019	Identifier	dest		27287	0					
ANR	28020	PrimaryExpression	2		27287	1					
ANR	28021	Argument	linesize		27287	5					
ANR	28022	Identifier	linesize		27287	0					
ANR	28023	Argument	linesize		27287	6					
ANR	28024	Identifier	linesize		27287	0					
ANR	28025	Argument	0		27287	7					
ANR	28026	PrimaryExpression	0		27287	0					
ANR	28027	Argument	1		27287	8					
ANR	28028	PrimaryExpression	1		27287	0					
ANR	28029	Argument	SIMPLE		27287	9					
ANR	28030	Identifier	SIMPLE		27287	0					
ANR	28031	Argument	PIXEL_SHIFT		27287	10					
ANR	28032	Identifier	PIXEL_SHIFT		27287	0					
ANR	28033	ElseStatement	else		27287	0					
ANR	28034	CompoundStatement		163:15:3466:3466	27287	0					
ANR	28035	ExpressionStatement	"FUNC ( hl_motion_444 ) ( h , sl , dest [ 0 ] , dest [ 1 ] , dest [ 2 ] , h -> qpel_put , h -> h264chroma . put_h264_chroma_pixels_tab , h -> qpel_avg , h -> h264chroma . avg_h264_chroma_pixels_tab , h -> h264dsp . weight_h264_pixels_tab , h -> h264dsp . biweight_h264_pixels_tab )"	167:12:3568:3895	27287	0	True				
ANR	28036	CallExpression	"FUNC ( hl_motion_444 ) ( h , sl , dest [ 0 ] , dest [ 1 ] , dest [ 2 ] , h -> qpel_put , h -> h264chroma . put_h264_chroma_pixels_tab , h -> qpel_avg , h -> h264chroma . avg_h264_chroma_pixels_tab , h -> h264dsp . weight_h264_pixels_tab , h -> h264dsp . biweight_h264_pixels_tab )"		27287	0					
ANR	28037	Callee	FUNC ( hl_motion_444 )		27287	0					
ANR	28038	CallExpression	FUNC ( hl_motion_444 )		27287	0					
ANR	28039	Callee	FUNC		27287	0					
ANR	28040	Identifier	FUNC		27287	0					
ANR	28041	ArgumentList	hl_motion_444		27287	1					
ANR	28042	Argument	hl_motion_444		27287	0					
ANR	28043	Identifier	hl_motion_444		27287	0					
ANR	28044	ArgumentList	h		27287	1					
ANR	28045	Argument	h		27287	0					
ANR	28046	Identifier	h		27287	0					
ANR	28047	Argument	sl		27287	1					
ANR	28048	Identifier	sl		27287	0					
ANR	28049	Argument	dest [ 0 ]		27287	2					
ANR	28050	ArrayIndexing	dest [ 0 ]		27287	0					
ANR	28051	Identifier	dest		27287	0					
ANR	28052	PrimaryExpression	0		27287	1					
ANR	28053	Argument	dest [ 1 ]		27287	3					
ANR	28054	ArrayIndexing	dest [ 1 ]		27287	0					
ANR	28055	Identifier	dest		27287	0					
ANR	28056	PrimaryExpression	1		27287	1					
ANR	28057	Argument	dest [ 2 ]		27287	4					
ANR	28058	ArrayIndexing	dest [ 2 ]		27287	0					
ANR	28059	Identifier	dest		27287	0					
ANR	28060	PrimaryExpression	2		27287	1					
ANR	28061	Argument	h -> qpel_put		27287	5					
ANR	28062	PtrMemberAccess	h -> qpel_put		27287	0					
ANR	28063	Identifier	h		27287	0					
ANR	28064	Identifier	qpel_put		27287	1					
ANR	28065	Argument	h -> h264chroma . put_h264_chroma_pixels_tab		27287	6					
ANR	28066	MemberAccess	h -> h264chroma . put_h264_chroma_pixels_tab		27287	0					
ANR	28067	PtrMemberAccess	h -> h264chroma		27287	0					
ANR	28068	Identifier	h		27287	0					
ANR	28069	Identifier	h264chroma		27287	1					
ANR	28070	Identifier	put_h264_chroma_pixels_tab		27287	1					
ANR	28071	Argument	h -> qpel_avg		27287	7					
ANR	28072	PtrMemberAccess	h -> qpel_avg		27287	0					
ANR	28073	Identifier	h		27287	0					
ANR	28074	Identifier	qpel_avg		27287	1					
ANR	28075	Argument	h -> h264chroma . avg_h264_chroma_pixels_tab		27287	8					
ANR	28076	MemberAccess	h -> h264chroma . avg_h264_chroma_pixels_tab		27287	0					
ANR	28077	PtrMemberAccess	h -> h264chroma		27287	0					
ANR	28078	Identifier	h		27287	0					
ANR	28079	Identifier	h264chroma		27287	1					
ANR	28080	Identifier	avg_h264_chroma_pixels_tab		27287	1					
ANR	28081	Argument	h -> h264dsp . weight_h264_pixels_tab		27287	9					
ANR	28082	MemberAccess	h -> h264dsp . weight_h264_pixels_tab		27287	0					
ANR	28083	PtrMemberAccess	h -> h264dsp		27287	0					
ANR	28084	Identifier	h		27287	0					
ANR	28085	Identifier	h264dsp		27287	1					
ANR	28086	Identifier	weight_h264_pixels_tab		27287	1					
ANR	28087	Argument	h -> h264dsp . biweight_h264_pixels_tab		27287	10					
ANR	28088	MemberAccess	h -> h264dsp . biweight_h264_pixels_tab		27287	0					
ANR	28089	PtrMemberAccess	h -> h264dsp		27287	0					
ANR	28090	Identifier	h		27287	0					
ANR	28091	Identifier	h264dsp		27287	1					
ANR	28092	Identifier	biweight_h264_pixels_tab		27287	1					
ANR	28093	ForStatement	for ( p = 0 ; p < plane_count ; p ++ )		27287	1					
ANR	28094	ForInit	p = 0 ;	181:13:3924:3929	27287	0	True				
ANR	28095	AssignmentExpression	p = 0		27287	0		=			
ANR	28096	Identifier	p		27287	0					
ANR	28097	PrimaryExpression	0		27287	1					
ANR	28098	Condition	p < plane_count	181:20:3931:3945	27287	1	True				
ANR	28099	RelationalExpression	p < plane_count		27287	0		<			
ANR	28100	Identifier	p		27287	0					
ANR	28101	Identifier	plane_count		27287	1					
ANR	28102	PostIncDecOperationExpression	p ++	181:37:3948:3950	27287	2	True				
ANR	28103	Identifier	p		27287	0					
ANR	28104	IncDec	++		27287	1					
ANR	28105	ExpressionStatement	"hl_decode_mb_idct_luma ( h , sl , mb_type , 1 , SIMPLE , transform_bypass , PIXEL_SHIFT , block_offset , linesize , dest [ p ] , p )"	183:12:3966:4154	27287	3	True				
ANR	28106	CallExpression	"hl_decode_mb_idct_luma ( h , sl , mb_type , 1 , SIMPLE , transform_bypass , PIXEL_SHIFT , block_offset , linesize , dest [ p ] , p )"		27287	0					
ANR	28107	Callee	hl_decode_mb_idct_luma		27287	0					
ANR	28108	Identifier	hl_decode_mb_idct_luma		27287	0					
ANR	28109	ArgumentList	h		27287	1					
ANR	28110	Argument	h		27287	0					
ANR	28111	Identifier	h		27287	0					
ANR	28112	Argument	sl		27287	1					
ANR	28113	Identifier	sl		27287	0					
ANR	28114	Argument	mb_type		27287	2					
ANR	28115	Identifier	mb_type		27287	0					
ANR	28116	Argument	1		27287	3					
ANR	28117	PrimaryExpression	1		27287	0					
ANR	28118	Argument	SIMPLE		27287	4					
ANR	28119	Identifier	SIMPLE		27287	0					
ANR	28120	Argument	transform_bypass		27287	5					
ANR	28121	Identifier	transform_bypass		27287	0					
ANR	28122	Argument	PIXEL_SHIFT		27287	6					
ANR	28123	Identifier	PIXEL_SHIFT		27287	0					
ANR	28124	Argument	block_offset		27287	7					
ANR	28125	Identifier	block_offset		27287	0					
ANR	28126	Argument	linesize		27287	8					
ANR	28127	Identifier	linesize		27287	0					
ANR	28128	Argument	dest [ p ]		27287	9					
ANR	28129	ArrayIndexing	dest [ p ]		27287	0					
ANR	28130	Identifier	dest		27287	0					
ANR	28131	Identifier	p		27287	1					
ANR	28132	Argument	p		27287	10					
ANR	28133	Identifier	p		27287	0					
ANR	28134	ReturnType	static av_noinline void FUNC		27287	1					
ANR	28135	Identifier	( hl_decode_mb_444 )		27287	2					
ANR	28136	Identifier	hl_decode_mb_444		27287	3					
ANR	28137	ParameterList	"H264Context * h , H264SliceContext * sl"		27287	4					
ANR	28138	Parameter	H264Context * h	1:47:47:60	27287	0	True				
ANR	28139	ParameterType	H264Context *		27287	0					
ANR	28140	Identifier	h		27287	1					
ANR	28141	Parameter	H264SliceContext * sl	1:63:63:82	27287	1	True				
ANR	28142	ParameterType	H264SliceContext *		27287	0					
ANR	28143	Identifier	sl		27287	1					
ANR	28144	CFGEntryNode	ENTRY		27287		True				
ANR	28145	CFGExitNode	EXIT		27287		True				
ANR	28146	Symbol	PIXEL_SHIFT		27287						
ANR	28147	Symbol	IS_INTRA_PCM		27287						
ANR	28148	Symbol	& gb		27287						
ANR	28149	Symbol	* scan8		27287						
ANR	28150	Symbol	get_bits		27287						
ANR	28151	Symbol	h -> mb_x		27287						
ANR	28152	Symbol	h -> mb_y		27287						
ANR	28153	Symbol	dest		27287						
ANR	28154	Symbol	linesize		27287						
ANR	28155	Symbol	ref		27287						
ANR	28156	Symbol	block_offset		27287						
ANR	28157	Symbol	h -> h264dsp . weight_h264_pixels_tab		27287						
ANR	28158	Symbol	tmp		27287						
ANR	28159	Symbol	mb_type		27287						
ANR	28160	Symbol	sl -> ref_cache		27287						
ANR	28161	Symbol	* sl		27287						
ANR	28162	Symbol	MB_FIELD		27287						
ANR	28163	Symbol	IS_16X16		27287						
ANR	28164	Symbol	* * i		27287						
ANR	28165	Symbol	* * h		27287						
ANR	28166	Symbol	h -> block_offset		27287						
ANR	28167	Symbol	h -> deblocking_filter		27287						
ANR	28168	Symbol	* sl -> ref_cache		27287						
ANR	28169	Symbol	FRAME_MBAFF		27287						
ANR	28170	Symbol	list		27287						
ANR	28171	Symbol	* * scan8		27287						
ANR	28172	Symbol	h -> linesize		27287						
ANR	28173	Symbol	* h -> cur_pic . mb_type		27287						
ANR	28174	Symbol	h -> flags		27287						
ANR	28175	Symbol	sl -> list_count		27287						
ANR	28176	Symbol	h -> cur_pic . f		27287						
ANR	28177	Symbol	h -> cur_pic . f . data		27287						
ANR	28178	Symbol	h -> h264dsp . biweight_h264_pixels_tab		27287						
ANR	28179	Symbol	bit_depth		27287						
ANR	28180	Symbol	h -> qpel_put		27287						
ANR	28181	Symbol	plane_count		27287						
ANR	28182	Symbol	* h -> cur_pic		27287						
ANR	28183	Symbol	* * * sl		27287						
ANR	28184	Symbol	* tmp		27287						
ANR	28185	Symbol	* * sl -> ref_cache		27287						
ANR	28186	Symbol	h -> h264chroma		27287						
ANR	28187	Symbol	h -> h264chroma . put_h264_chroma_pixels_tab		27287						
ANR	28188	Symbol	mb_xy		27287						
ANR	28189	Symbol	* dest		27287						
ANR	28190	Symbol	sl -> mb_uvlinesize		27287						
ANR	28191	Symbol	* * sl		27287						
ANR	28192	Symbol	IS_INTRA		27287						
ANR	28193	Symbol	h -> h264dsp		27287						
ANR	28194	Symbol	hl_motion_444		27287						
ANR	28195	Symbol	h -> cur_pic . mb_type		27287						
ANR	28196	Symbol	transform_bypass		27287						
ANR	28197	Symbol	h -> cur_pic		27287						
ANR	28198	Symbol	h -> vdsp		27287						
ANR	28199	Symbol	* * list		27287						
ANR	28200	Symbol	* h -> cur_pic . f . data		27287						
ANR	28201	Symbol	scan8		27287						
ANR	28202	Symbol	sl		27287						
ANR	28203	Symbol	CONFIG_GRAY		27287						
ANR	28204	Symbol	gb		27287						
ANR	28205	Symbol	* h -> list_counts		27287						
ANR	28206	Symbol	h -> sps . bit_depth_luma		27287						
ANR	28207	Symbol	h -> qpel_avg		27287						
ANR	28208	Symbol	h -> list_counts		27287						
ANR	28209	Symbol	sl -> qscale		27287						
ANR	28210	Symbol	* h -> cur_pic . f		27287						
ANR	28211	Symbol	h		27287						
ANR	28212	Symbol	i		27287						
ANR	28213	Symbol	j		27287						
ANR	28214	Symbol	h -> sps . transform_bypass		27287						
ANR	28215	Symbol	sl -> mb_linesize		27287						
ANR	28216	Symbol	sl -> intra_pcm_ptr		27287						
ANR	28217	Symbol	h -> mb_xy		27287						
ANR	28218	Symbol	p		27287						
ANR	28219	Symbol	* h		27287						
ANR	28220	Symbol	* i		27287						
ANR	28221	Symbol	* j		27287						
ANR	28222	Symbol	* list		27287						
ANR	28223	Symbol	h -> h264chroma . avg_h264_chroma_pixels_tab		27287						
ANR	28224	Symbol	SIMPLE		27287						
ANR	28225	Symbol	USES_LIST		27287						
ANR	28226	Symbol	h -> sps		27287						
ANR	28227	Symbol	* p		27287						
ANR	28228	Symbol	* mb_xy		27287						
ANR	28229	Symbol	mb_y		27287						
ANR	28230	Symbol	mb_x		27287						
ANR	28231	Symbol	* ref		27287						
ANR	28232	Symbol	CODEC_FLAG_GRAY		27287						
