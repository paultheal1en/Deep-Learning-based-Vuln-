command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	7311470	File	/home/p4ultr4n/workplace/ReVeal/raw_code/read_packets_0.c								
ANR	7311471	Function	read_packets	1:0:0:542							
ANR	7311472	FunctionDef	"read_packets (WriterContext * w , AVFormatContext * fmt_ctx)"		7311471	0					
ANR	7311473	CompoundStatement		3:0:70:542	7311471	0					
ANR	7311474	IdentifierDeclStatement	"int i , ret = 0 ;"	5:4:77:91	7311471	0	True				
ANR	7311475	IdentifierDecl	i		7311471	0					
ANR	7311476	IdentifierDeclType	int		7311471	0					
ANR	7311477	Identifier	i		7311471	1					
ANR	7311478	IdentifierDecl	ret = 0		7311471	1					
ANR	7311479	IdentifierDeclType	int		7311471	0					
ANR	7311480	Identifier	ret		7311471	1					
ANR	7311481	AssignmentExpression	ret = 0		7311471	2		=			
ANR	7311482	Identifier	ret		7311471	0					
ANR	7311483	PrimaryExpression	0		7311471	1					
ANR	7311484	IdentifierDeclStatement	int64_t cur_ts = fmt_ctx -> start_time ;	7:4:98:134	7311471	1	True				
ANR	7311485	IdentifierDecl	cur_ts = fmt_ctx -> start_time		7311471	0					
ANR	7311486	IdentifierDeclType	int64_t		7311471	0					
ANR	7311487	Identifier	cur_ts		7311471	1					
ANR	7311488	AssignmentExpression	cur_ts = fmt_ctx -> start_time		7311471	2		=			
ANR	7311489	Identifier	cur_ts		7311471	0					
ANR	7311490	PtrMemberAccess	fmt_ctx -> start_time		7311471	1					
ANR	7311491	Identifier	fmt_ctx		7311471	0					
ANR	7311492	Identifier	start_time		7311471	1					
ANR	7311493	IfStatement	if ( read_intervals_nb == 0 )		7311471	2					
ANR	7311494	Condition	read_intervals_nb == 0	11:8:147:168	7311471	0	True				
ANR	7311495	EqualityExpression	read_intervals_nb == 0		7311471	0		==			
ANR	7311496	Identifier	read_intervals_nb		7311471	0					
ANR	7311497	PrimaryExpression	0		7311471	1					
ANR	7311498	CompoundStatement		9:32:100:100	7311471	1					
ANR	7311499	Statement	ReadInterval	13:8:182:193	7311471	0	True				
ANR	7311500	Statement	interval	13:21:195:202	7311471	1	True				
ANR	7311501	Statement	=	13:30:204:204	7311471	2	True				
ANR	7311502	Statement	(	13:32:206:206	7311471	3	True				
ANR	7311503	Statement	ReadInterval	13:33:207:218	7311471	4	True				
ANR	7311504	Statement	)	13:45:219:219	7311471	5	True				
ANR	7311505	CompoundStatement		11:47:150:150	7311471	6					
ANR	7311506	Statement	.	13:49:223:223	7311471	0	True				
ANR	7311507	Statement	has_start	13:50:224:232	7311471	1	True				
ANR	7311508	Statement	=	13:60:234:234	7311471	2	True				
ANR	7311509	Statement	0	13:62:236:236	7311471	3	True				
ANR	7311510	Statement	","	13:63:237:237	7311471	4	True				
ANR	7311511	Statement	.	13:65:239:239	7311471	5	True				
ANR	7311512	Statement	has_end	13:66:240:246	7311471	6	True				
ANR	7311513	Statement	=	13:74:248:248	7311471	7	True				
ANR	7311514	Statement	0	13:76:250:250	7311471	8	True				
ANR	7311515	ExpressionStatement		13:79:253:253	7311471	7	True				
ANR	7311516	ExpressionStatement	"ret = read_interval_packets ( w , fmt_ctx , & interval , & cur_ts )"	15:8:264:323	7311471	8	True				
ANR	7311517	AssignmentExpression	"ret = read_interval_packets ( w , fmt_ctx , & interval , & cur_ts )"		7311471	0		=			
ANR	7311518	Identifier	ret		7311471	0					
ANR	7311519	CallExpression	"read_interval_packets ( w , fmt_ctx , & interval , & cur_ts )"		7311471	1					
ANR	7311520	Callee	read_interval_packets		7311471	0					
ANR	7311521	Identifier	read_interval_packets		7311471	0					
ANR	7311522	ArgumentList	w		7311471	1					
ANR	7311523	Argument	w		7311471	0					
ANR	7311524	Identifier	w		7311471	0					
ANR	7311525	Argument	fmt_ctx		7311471	1					
ANR	7311526	Identifier	fmt_ctx		7311471	0					
ANR	7311527	Argument	& interval		7311471	2					
ANR	7311528	UnaryOperationExpression	& interval		7311471	0					
ANR	7311529	UnaryOperator	&		7311471	0					
ANR	7311530	Identifier	interval		7311471	1					
ANR	7311531	Argument	& cur_ts		7311471	3					
ANR	7311532	UnaryOperationExpression	& cur_ts		7311471	0					
ANR	7311533	UnaryOperator	&		7311471	0					
ANR	7311534	Identifier	cur_ts		7311471	1					
ANR	7311535	ElseStatement	else		7311471	0					
ANR	7311536	CompoundStatement		15:11:266:266	7311471	0					
ANR	7311537	ForStatement	for ( i = 0 ; i < read_intervals_nb ; i ++ )		7311471	0					
ANR	7311538	ForInit	i = 0 ;	19:13:353:358	7311471	0	True				
ANR	7311539	AssignmentExpression	i = 0		7311471	0		=			
ANR	7311540	Identifier	i		7311471	0					
ANR	7311541	PrimaryExpression	0		7311471	1					
ANR	7311542	Condition	i < read_intervals_nb	19:20:360:380	7311471	1	True				
ANR	7311543	RelationalExpression	i < read_intervals_nb		7311471	0		<			
ANR	7311544	Identifier	i		7311471	0					
ANR	7311545	Identifier	read_intervals_nb		7311471	1					
ANR	7311546	PostIncDecOperationExpression	i ++	19:43:383:385	7311471	2	True				
ANR	7311547	Identifier	i		7311471	0					
ANR	7311548	IncDec	++		7311471	1					
ANR	7311549	CompoundStatement		17:48:317:317	7311471	3					
ANR	7311550	ExpressionStatement	"ret = read_interval_packets ( w , fmt_ctx , & read_intervals [ i ] , & cur_ts )"	21:12:403:471	7311471	0	True				
ANR	7311551	AssignmentExpression	"ret = read_interval_packets ( w , fmt_ctx , & read_intervals [ i ] , & cur_ts )"		7311471	0		=			
ANR	7311552	Identifier	ret		7311471	0					
ANR	7311553	CallExpression	"read_interval_packets ( w , fmt_ctx , & read_intervals [ i ] , & cur_ts )"		7311471	1					
ANR	7311554	Callee	read_interval_packets		7311471	0					
ANR	7311555	Identifier	read_interval_packets		7311471	0					
ANR	7311556	ArgumentList	w		7311471	1					
ANR	7311557	Argument	w		7311471	0					
ANR	7311558	Identifier	w		7311471	0					
ANR	7311559	Argument	fmt_ctx		7311471	1					
ANR	7311560	Identifier	fmt_ctx		7311471	0					
ANR	7311561	Argument	& read_intervals [ i ]		7311471	2					
ANR	7311562	UnaryOperationExpression	& read_intervals [ i ]		7311471	0					
ANR	7311563	UnaryOperator	&		7311471	0					
ANR	7311564	ArrayIndexing	read_intervals [ i ]		7311471	1					
ANR	7311565	Identifier	read_intervals		7311471	0					
ANR	7311566	Identifier	i		7311471	1					
ANR	7311567	Argument	& cur_ts		7311471	3					
ANR	7311568	UnaryOperationExpression	& cur_ts		7311471	0					
ANR	7311569	UnaryOperator	&		7311471	0					
ANR	7311570	Identifier	cur_ts		7311471	1					
ANR	7311571	IfStatement	if ( ret < 0 )		7311471	1					
ANR	7311572	Condition	ret < 0	23:16:490:496	7311471	0	True				
ANR	7311573	RelationalExpression	ret < 0		7311471	0		<			
ANR	7311574	Identifier	ret		7311471	0					
ANR	7311575	PrimaryExpression	0		7311471	1					
ANR	7311576	BreakStatement	break ;	25:16:516:521	7311471	1	True				
ANR	7311577	ReturnType	static void		7311471	1					
ANR	7311578	Identifier	read_packets		7311471	2					
ANR	7311579	ParameterList	"WriterContext * w , AVFormatContext * fmt_ctx"		7311471	3					
ANR	7311580	Parameter	WriterContext * w	1:25:25:40	7311471	0	True				
ANR	7311581	ParameterType	WriterContext *		7311471	0					
ANR	7311582	Identifier	w		7311471	1					
ANR	7311583	Parameter	AVFormatContext * fmt_ctx	1:43:43:66	7311471	1	True				
ANR	7311584	ParameterType	AVFormatContext *		7311471	0					
ANR	7311585	Identifier	fmt_ctx		7311471	1					
ANR	7311586	CFGEntryNode	ENTRY		7311471		True				
ANR	7311587	CFGExitNode	EXIT		7311471		True				
ANR	7311588	Symbol	ret		7311471						
ANR	7311589	Symbol	& cur_ts		7311471						
ANR	7311590	Symbol	fmt_ctx -> start_time		7311471						
ANR	7311591	Symbol	* fmt_ctx		7311471						
ANR	7311592	Symbol	w		7311471						
ANR	7311593	Symbol	i		7311471						
ANR	7311594	Symbol	cur_ts		7311471						
ANR	7311595	Symbol	& interval		7311471						
ANR	7311596	Symbol	read_intervals_nb		7311471						
ANR	7311597	Symbol	read_intervals		7311471						
ANR	7311598	Symbol	fmt_ctx		7311471						
ANR	7311599	Symbol	read_interval_packets		7311471						
