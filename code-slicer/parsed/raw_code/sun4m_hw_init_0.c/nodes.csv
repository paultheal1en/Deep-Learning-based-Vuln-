command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8023011	File	/home/p4ultr4n/workplace/ReVeal/raw_code/sun4m_hw_init_0.c								
ANR	8023012	Function	sun4m_hw_init	1:0:0:7767							
ANR	8023013	FunctionDef	"sun4m_hw_init (const struct sun4m_hwdef * hwdef , ram_addr_t RAM_size , const char * boot_device , DisplayState * ds , const char * kernel_filename , const char * kernel_cmdline , const char * initrd_filename , const char * cpu_model)"		8023012	0					
ANR	8023014	CompoundStatement		13:0:343:7767	8023012	0					
ANR	8023015	IdentifierDeclStatement	"CPUState * env , * envs [ MAX_CPUS ] ;"	15:4:350:380	8023012	0	True				
ANR	8023016	IdentifierDecl	* env		8023012	0					
ANR	8023017	IdentifierDeclType	CPUState *		8023012	0					
ANR	8023018	Identifier	env		8023012	1					
ANR	8023019	IdentifierDecl	* envs [ MAX_CPUS ]		8023012	1					
ANR	8023020	IdentifierDeclType	CPUState * [ MAX_CPUS ]		8023012	0					
ANR	8023021	Identifier	envs		8023012	1					
ANR	8023022	Identifier	MAX_CPUS		8023012	2					
ANR	8023023	IdentifierDeclStatement	unsigned int i ;	17:4:387:401	8023012	1	True				
ANR	8023024	IdentifierDecl	i		8023012	0					
ANR	8023025	IdentifierDeclType	unsigned int		8023012	0					
ANR	8023026	Identifier	i		8023012	1					
ANR	8023027	IdentifierDeclStatement	"void * iommu , * espdma , * ledma , * main_esp , * nvram ;"	19:4:408:455	8023012	2	True				
ANR	8023028	IdentifierDecl	* iommu		8023012	0					
ANR	8023029	IdentifierDeclType	void *		8023012	0					
ANR	8023030	Identifier	iommu		8023012	1					
ANR	8023031	IdentifierDecl	* espdma		8023012	1					
ANR	8023032	IdentifierDeclType	void *		8023012	0					
ANR	8023033	Identifier	espdma		8023012	1					
ANR	8023034	IdentifierDecl	* ledma		8023012	2					
ANR	8023035	IdentifierDeclType	void *		8023012	0					
ANR	8023036	Identifier	ledma		8023012	1					
ANR	8023037	IdentifierDecl	* main_esp		8023012	3					
ANR	8023038	IdentifierDeclType	void *		8023012	0					
ANR	8023039	Identifier	main_esp		8023012	1					
ANR	8023040	IdentifierDecl	* nvram		8023012	4					
ANR	8023041	IdentifierDeclType	void *		8023012	0					
ANR	8023042	Identifier	nvram		8023012	1					
ANR	8023043	IdentifierDeclStatement	"qemu_irq * cpu_irqs [ MAX_CPUS ] , * slavio_irq , * slavio_cpu_irq , * espdma_irq , * ledma_irq ;"	21:4:462:554	8023012	3	True				
ANR	8023044	IdentifierDecl	* cpu_irqs [ MAX_CPUS ]		8023012	0					
ANR	8023045	IdentifierDeclType	qemu_irq * [ MAX_CPUS ]		8023012	0					
ANR	8023046	Identifier	cpu_irqs		8023012	1					
ANR	8023047	Identifier	MAX_CPUS		8023012	2					
ANR	8023048	IdentifierDecl	* slavio_irq		8023012	1					
ANR	8023049	IdentifierDeclType	qemu_irq *		8023012	0					
ANR	8023050	Identifier	slavio_irq		8023012	1					
ANR	8023051	IdentifierDecl	* slavio_cpu_irq		8023012	2					
ANR	8023052	IdentifierDeclType	qemu_irq *		8023012	0					
ANR	8023053	Identifier	slavio_cpu_irq		8023012	1					
ANR	8023054	IdentifierDecl	* espdma_irq		8023012	3					
ANR	8023055	IdentifierDeclType	qemu_irq *		8023012	0					
ANR	8023056	Identifier	espdma_irq		8023012	1					
ANR	8023057	IdentifierDecl	* ledma_irq		8023012	4					
ANR	8023058	IdentifierDeclType	qemu_irq *		8023012	0					
ANR	8023059	Identifier	ledma_irq		8023012	1					
ANR	8023060	IdentifierDeclStatement	"qemu_irq * esp_reset , * le_reset ;"	25:4:561:591	8023012	4	True				
ANR	8023061	IdentifierDecl	* esp_reset		8023012	0					
ANR	8023062	IdentifierDeclType	qemu_irq *		8023012	0					
ANR	8023063	Identifier	esp_reset		8023012	1					
ANR	8023064	IdentifierDecl	* le_reset		8023012	1					
ANR	8023065	IdentifierDeclType	qemu_irq *		8023012	0					
ANR	8023066	Identifier	le_reset		8023012	1					
ANR	8023067	IdentifierDeclStatement	qemu_irq * fdc_tc ;	27:4:598:614	8023012	5	True				
ANR	8023068	IdentifierDecl	* fdc_tc		8023012	0					
ANR	8023069	IdentifierDeclType	qemu_irq *		8023012	0					
ANR	8023070	Identifier	fdc_tc		8023012	1					
ANR	8023071	IdentifierDeclStatement	qemu_irq * cpu_halt ;	29:4:621:639	8023012	6	True				
ANR	8023072	IdentifierDecl	* cpu_halt		8023012	0					
ANR	8023073	IdentifierDeclType	qemu_irq *		8023012	0					
ANR	8023074	Identifier	cpu_halt		8023012	1					
ANR	8023075	IdentifierDeclStatement	"ram_addr_t ram_offset , prom_offset , tcx_offset , idreg_offset ;"	31:4:646:706	8023012	7	True				
ANR	8023076	IdentifierDecl	ram_offset		8023012	0					
ANR	8023077	IdentifierDeclType	ram_addr_t		8023012	0					
ANR	8023078	Identifier	ram_offset		8023012	1					
ANR	8023079	IdentifierDecl	prom_offset		8023012	1					
ANR	8023080	IdentifierDeclType	ram_addr_t		8023012	0					
ANR	8023081	Identifier	prom_offset		8023012	1					
ANR	8023082	IdentifierDecl	tcx_offset		8023012	2					
ANR	8023083	IdentifierDeclType	ram_addr_t		8023012	0					
ANR	8023084	Identifier	tcx_offset		8023012	1					
ANR	8023085	IdentifierDecl	idreg_offset		8023012	3					
ANR	8023086	IdentifierDeclType	ram_addr_t		8023012	0					
ANR	8023087	Identifier	idreg_offset		8023012	1					
ANR	8023088	IdentifierDeclStatement	unsigned long kernel_size ;	33:4:713:738	8023012	8	True				
ANR	8023089	IdentifierDecl	kernel_size		8023012	0					
ANR	8023090	IdentifierDeclType	unsigned long		8023012	0					
ANR	8023091	Identifier	kernel_size		8023012	1					
ANR	8023092	IdentifierDeclStatement	int ret ;	35:4:745:752	8023012	9	True				
ANR	8023093	IdentifierDecl	ret		8023012	0					
ANR	8023094	IdentifierDeclType	int		8023012	0					
ANR	8023095	Identifier	ret		8023012	1					
ANR	8023096	IdentifierDeclStatement	char buf [ 1024 ] ;	37:4:759:773	8023012	10	True				
ANR	8023097	IdentifierDecl	buf [ 1024 ]		8023012	0					
ANR	8023098	IdentifierDeclType	char [ 1024 ]		8023012	0					
ANR	8023099	Identifier	buf		8023012	1					
ANR	8023100	PrimaryExpression	1024		8023012	2					
ANR	8023101	IdentifierDeclStatement	BlockDriverState * fd [ MAX_FD ] ;	39:4:780:808	8023012	11	True				
ANR	8023102	IdentifierDecl	* fd [ MAX_FD ]		8023012	0					
ANR	8023103	IdentifierDeclType	BlockDriverState * [ MAX_FD ]		8023012	0					
ANR	8023104	Identifier	fd		8023012	1					
ANR	8023105	Identifier	MAX_FD		8023012	2					
ANR	8023106	IdentifierDeclStatement	int drive_index ;	41:4:815:830	8023012	12	True				
ANR	8023107	IdentifierDecl	drive_index		8023012	0					
ANR	8023108	IdentifierDeclType	int		8023012	0					
ANR	8023109	Identifier	drive_index		8023012	1					
ANR	8023110	IdentifierDeclStatement	void * fw_cfg ;	43:4:837:849	8023012	13	True				
ANR	8023111	IdentifierDecl	* fw_cfg		8023012	0					
ANR	8023112	IdentifierDeclType	void *		8023012	0					
ANR	8023113	Identifier	fw_cfg		8023012	1					
ANR	8023114	IfStatement	if ( ! cpu_model )		8023012	14					
ANR	8023115	Condition	! cpu_model	49:8:883:892	8023012	0	True				
ANR	8023116	UnaryOperationExpression	! cpu_model		8023012	0					
ANR	8023117	UnaryOperator	!		8023012	0					
ANR	8023118	Identifier	cpu_model		8023012	1					
ANR	8023119	ExpressionStatement	cpu_model = hwdef -> default_cpu_model	51:8:904:940	8023012	1	True				
ANR	8023120	AssignmentExpression	cpu_model = hwdef -> default_cpu_model		8023012	0		=			
ANR	8023121	Identifier	cpu_model		8023012	0					
ANR	8023122	PtrMemberAccess	hwdef -> default_cpu_model		8023012	1					
ANR	8023123	Identifier	hwdef		8023012	0					
ANR	8023124	Identifier	default_cpu_model		8023012	1					
ANR	8023125	ForStatement	for ( i = 0 ; i < smp_cpus ; i ++ )		8023012	15					
ANR	8023126	ForInit	i = 0 ;	55:8:953:958	8023012	0	True				
ANR	8023127	AssignmentExpression	i = 0		8023012	0		=			
ANR	8023128	Identifier	i		8023012	0					
ANR	8023129	PrimaryExpression	0		8023012	1					
ANR	8023130	Condition	i < smp_cpus	55:15:960:971	8023012	1	True				
ANR	8023131	RelationalExpression	i < smp_cpus		8023012	0		<			
ANR	8023132	Identifier	i		8023012	0					
ANR	8023133	Identifier	smp_cpus		8023012	1					
ANR	8023134	PostIncDecOperationExpression	i ++	55:29:974:976	8023012	2	True				
ANR	8023135	Identifier	i		8023012	0					
ANR	8023136	IncDec	++		8023012	1					
ANR	8023137	CompoundStatement		43:34:635:635	8023012	3					
ANR	8023138	ExpressionStatement	env = cpu_init ( cpu_model )	57:8:990:1015	8023012	0	True				
ANR	8023139	AssignmentExpression	env = cpu_init ( cpu_model )		8023012	0		=			
ANR	8023140	Identifier	env		8023012	0					
ANR	8023141	CallExpression	cpu_init ( cpu_model )		8023012	1					
ANR	8023142	Callee	cpu_init		8023012	0					
ANR	8023143	Identifier	cpu_init		8023012	0					
ANR	8023144	ArgumentList	cpu_model		8023012	1					
ANR	8023145	Argument	cpu_model		8023012	0					
ANR	8023146	Identifier	cpu_model		8023012	0					
ANR	8023147	IfStatement	if ( ! env )		8023012	1					
ANR	8023148	Condition	! env	59:12:1030:1033	8023012	0	True				
ANR	8023149	UnaryOperationExpression	! env		8023012	0					
ANR	8023150	UnaryOperator	!		8023012	0					
ANR	8023151	Identifier	env		8023012	1					
ANR	8023152	CompoundStatement		47:18:692:692	8023012	1					
ANR	8023153	ExpressionStatement	"fprintf ( stderr , ""qemu: Unable to find Sparc CPU definition\\n"" )"	61:12:1051:1113	8023012	0	True				
ANR	8023154	CallExpression	"fprintf ( stderr , ""qemu: Unable to find Sparc CPU definition\\n"" )"		8023012	0					
ANR	8023155	Callee	fprintf		8023012	0					
ANR	8023156	Identifier	fprintf		8023012	0					
ANR	8023157	ArgumentList	stderr		8023012	1					
ANR	8023158	Argument	stderr		8023012	0					
ANR	8023159	Identifier	stderr		8023012	0					
ANR	8023160	Argument	"""qemu: Unable to find Sparc CPU definition\\n"""		8023012	1					
ANR	8023161	PrimaryExpression	"""qemu: Unable to find Sparc CPU definition\\n"""		8023012	0					
ANR	8023162	ExpressionStatement	exit ( 1 )	63:12:1128:1135	8023012	1	True				
ANR	8023163	CallExpression	exit ( 1 )		8023012	0					
ANR	8023164	Callee	exit		8023012	0					
ANR	8023165	Identifier	exit		8023012	0					
ANR	8023166	ArgumentList	1		8023012	1					
ANR	8023167	Argument	1		8023012	0					
ANR	8023168	PrimaryExpression	1		8023012	0					
ANR	8023169	ExpressionStatement	"cpu_sparc_set_id ( env , i )"	67:8:1157:1181	8023012	2	True				
ANR	8023170	CallExpression	"cpu_sparc_set_id ( env , i )"		8023012	0					
ANR	8023171	Callee	cpu_sparc_set_id		8023012	0					
ANR	8023172	Identifier	cpu_sparc_set_id		8023012	0					
ANR	8023173	ArgumentList	env		8023012	1					
ANR	8023174	Argument	env		8023012	0					
ANR	8023175	Identifier	env		8023012	0					
ANR	8023176	Argument	i		8023012	1					
ANR	8023177	Identifier	i		8023012	0					
ANR	8023178	ExpressionStatement	envs [ i ] = env	69:8:1192:1205	8023012	3	True				
ANR	8023179	AssignmentExpression	envs [ i ] = env		8023012	0		=			
ANR	8023180	ArrayIndexing	envs [ i ]		8023012	0					
ANR	8023181	Identifier	envs		8023012	0					
ANR	8023182	Identifier	i		8023012	1					
ANR	8023183	Identifier	env		8023012	1					
ANR	8023184	IfStatement	if ( i == 0 )		8023012	4					
ANR	8023185	Condition	i == 0	71:12:1220:1225	8023012	0	True				
ANR	8023186	EqualityExpression	i == 0		8023012	0		==			
ANR	8023187	Identifier	i		8023012	0					
ANR	8023188	PrimaryExpression	0		8023012	1					
ANR	8023189	CompoundStatement		59:20:884:884	8023012	1					
ANR	8023190	ExpressionStatement	"qemu_register_reset ( main_cpu_reset , env )"	73:12:1243:1283	8023012	0	True				
ANR	8023191	CallExpression	"qemu_register_reset ( main_cpu_reset , env )"		8023012	0					
ANR	8023192	Callee	qemu_register_reset		8023012	0					
ANR	8023193	Identifier	qemu_register_reset		8023012	0					
ANR	8023194	ArgumentList	main_cpu_reset		8023012	1					
ANR	8023195	Argument	main_cpu_reset		8023012	0					
ANR	8023196	Identifier	main_cpu_reset		8023012	0					
ANR	8023197	Argument	env		8023012	1					
ANR	8023198	Identifier	env		8023012	0					
ANR	8023199	ElseStatement	else		8023012	0					
ANR	8023200	CompoundStatement		63:15:957:957	8023012	0					
ANR	8023201	ExpressionStatement	"qemu_register_reset ( secondary_cpu_reset , env )"	77:12:1316:1361	8023012	0	True				
ANR	8023202	CallExpression	"qemu_register_reset ( secondary_cpu_reset , env )"		8023012	0					
ANR	8023203	Callee	qemu_register_reset		8023012	0					
ANR	8023204	Identifier	qemu_register_reset		8023012	0					
ANR	8023205	ArgumentList	secondary_cpu_reset		8023012	1					
ANR	8023206	Argument	secondary_cpu_reset		8023012	0					
ANR	8023207	Identifier	secondary_cpu_reset		8023012	0					
ANR	8023208	Argument	env		8023012	1					
ANR	8023209	Identifier	env		8023012	0					
ANR	8023210	ExpressionStatement	env -> halted = 1	79:12:1376:1391	8023012	1	True				
ANR	8023211	AssignmentExpression	env -> halted = 1		8023012	0		=			
ANR	8023212	PtrMemberAccess	env -> halted		8023012	0					
ANR	8023213	Identifier	env		8023012	0					
ANR	8023214	Identifier	halted		8023012	1					
ANR	8023215	PrimaryExpression	1		8023012	1					
ANR	8023216	ExpressionStatement	"cpu_irqs [ i ] = qemu_allocate_irqs ( cpu_set_irq , envs [ i ] , MAX_PILS )"	83:8:1413:1477	8023012	5	True				
ANR	8023217	AssignmentExpression	"cpu_irqs [ i ] = qemu_allocate_irqs ( cpu_set_irq , envs [ i ] , MAX_PILS )"		8023012	0		=			
ANR	8023218	ArrayIndexing	cpu_irqs [ i ]		8023012	0					
ANR	8023219	Identifier	cpu_irqs		8023012	0					
ANR	8023220	Identifier	i		8023012	1					
ANR	8023221	CallExpression	"qemu_allocate_irqs ( cpu_set_irq , envs [ i ] , MAX_PILS )"		8023012	1					
ANR	8023222	Callee	qemu_allocate_irqs		8023012	0					
ANR	8023223	Identifier	qemu_allocate_irqs		8023012	0					
ANR	8023224	ArgumentList	cpu_set_irq		8023012	1					
ANR	8023225	Argument	cpu_set_irq		8023012	0					
ANR	8023226	Identifier	cpu_set_irq		8023012	0					
ANR	8023227	Argument	envs [ i ]		8023012	1					
ANR	8023228	ArrayIndexing	envs [ i ]		8023012	0					
ANR	8023229	Identifier	envs		8023012	0					
ANR	8023230	Identifier	i		8023012	1					
ANR	8023231	Argument	MAX_PILS		8023012	2					
ANR	8023232	Identifier	MAX_PILS		8023012	0					
ANR	8023233	ExpressionStatement	env -> prom_addr = hwdef -> slavio_base	85:8:1488:1523	8023012	6	True				
ANR	8023234	AssignmentExpression	env -> prom_addr = hwdef -> slavio_base		8023012	0		=			
ANR	8023235	PtrMemberAccess	env -> prom_addr		8023012	0					
ANR	8023236	Identifier	env		8023012	0					
ANR	8023237	Identifier	prom_addr		8023012	1					
ANR	8023238	PtrMemberAccess	hwdef -> slavio_base		8023012	1					
ANR	8023239	Identifier	hwdef		8023012	0					
ANR	8023240	Identifier	slavio_base		8023012	1					
ANR	8023241	ForStatement	for ( i = smp_cpus ; i < MAX_CPUS ; i ++ )		8023012	16					
ANR	8023242	ForInit	i = smp_cpus ;	91:9:1544:1556	8023012	0	True				
ANR	8023243	AssignmentExpression	i = smp_cpus		8023012	0		=			
ANR	8023244	Identifier	i		8023012	0					
ANR	8023245	Identifier	smp_cpus		8023012	1					
ANR	8023246	Condition	i < MAX_CPUS	91:23:1558:1569	8023012	1	True				
ANR	8023247	RelationalExpression	i < MAX_CPUS		8023012	0		<			
ANR	8023248	Identifier	i		8023012	0					
ANR	8023249	Identifier	MAX_CPUS		8023012	1					
ANR	8023250	PostIncDecOperationExpression	i ++	91:37:1572:1574	8023012	2	True				
ANR	8023251	Identifier	i		8023012	0					
ANR	8023252	IncDec	++		8023012	1					
ANR	8023253	ExpressionStatement	"cpu_irqs [ i ] = qemu_allocate_irqs ( dummy_cpu_set_irq , NULL , MAX_PILS )"	93:8:1586:1653	8023012	3	True				
ANR	8023254	AssignmentExpression	"cpu_irqs [ i ] = qemu_allocate_irqs ( dummy_cpu_set_irq , NULL , MAX_PILS )"		8023012	0		=			
ANR	8023255	ArrayIndexing	cpu_irqs [ i ]		8023012	0					
ANR	8023256	Identifier	cpu_irqs		8023012	0					
ANR	8023257	Identifier	i		8023012	1					
ANR	8023258	CallExpression	"qemu_allocate_irqs ( dummy_cpu_set_irq , NULL , MAX_PILS )"		8023012	1					
ANR	8023259	Callee	qemu_allocate_irqs		8023012	0					
ANR	8023260	Identifier	qemu_allocate_irqs		8023012	0					
ANR	8023261	ArgumentList	dummy_cpu_set_irq		8023012	1					
ANR	8023262	Argument	dummy_cpu_set_irq		8023012	0					
ANR	8023263	Identifier	dummy_cpu_set_irq		8023012	0					
ANR	8023264	Argument	NULL		8023012	1					
ANR	8023265	Identifier	NULL		8023012	0					
ANR	8023266	Argument	MAX_PILS		8023012	2					
ANR	8023267	Identifier	MAX_PILS		8023012	0					
ANR	8023268	IfStatement	if ( ( uint64_t ) RAM_size > hwdef -> max_mem )		8023012	17					
ANR	8023269	Condition	( uint64_t ) RAM_size > hwdef -> max_mem	101:8:1692:1726	8023012	0	True				
ANR	8023270	RelationalExpression	( uint64_t ) RAM_size > hwdef -> max_mem		8023012	0		>			
ANR	8023271	CastExpression	( uint64_t ) RAM_size		8023012	0					
ANR	8023272	CastTarget	uint64_t		8023012	0					
ANR	8023273	Identifier	RAM_size		8023012	1					
ANR	8023274	PtrMemberAccess	hwdef -> max_mem		8023012	1					
ANR	8023275	Identifier	hwdef		8023012	0					
ANR	8023276	Identifier	max_mem		8023012	1					
ANR	8023277	CompoundStatement		89:45:1385:1385	8023012	1					
ANR	8023278	ExpressionStatement	"fprintf ( stderr , ""qemu: Too much memory for this machine: %d, maximum %d\\n"" , ( unsigned int ) ( RAM_size / ( 1024 * 1024 ) ) , ( unsigned int ) ( hwdef -> max_mem / ( 1024 * 1024 ) ) )"	103:8:1740:1956	8023012	0	True				
ANR	8023279	CallExpression	"fprintf ( stderr , ""qemu: Too much memory for this machine: %d, maximum %d\\n"" , ( unsigned int ) ( RAM_size / ( 1024 * 1024 ) ) , ( unsigned int ) ( hwdef -> max_mem / ( 1024 * 1024 ) ) )"		8023012	0					
ANR	8023280	Callee	fprintf		8023012	0					
ANR	8023281	Identifier	fprintf		8023012	0					
ANR	8023282	ArgumentList	stderr		8023012	1					
ANR	8023283	Argument	stderr		8023012	0					
ANR	8023284	Identifier	stderr		8023012	0					
ANR	8023285	Argument	"""qemu: Too much memory for this machine: %d, maximum %d\\n"""		8023012	1					
ANR	8023286	PrimaryExpression	"""qemu: Too much memory for this machine: %d, maximum %d\\n"""		8023012	0					
ANR	8023287	Argument	( unsigned int ) ( RAM_size / ( 1024 * 1024 ) )		8023012	2					
ANR	8023288	CastExpression	( unsigned int ) ( RAM_size / ( 1024 * 1024 ) )		8023012	0					
ANR	8023289	CastTarget	unsigned int		8023012	0					
ANR	8023290	MultiplicativeExpression	RAM_size / ( 1024 * 1024 )		8023012	1		/			
ANR	8023291	Identifier	RAM_size		8023012	0					
ANR	8023292	MultiplicativeExpression	1024 * 1024		8023012	1		*			
ANR	8023293	PrimaryExpression	1024		8023012	0					
ANR	8023294	PrimaryExpression	1024		8023012	1					
ANR	8023295	Argument	( unsigned int ) ( hwdef -> max_mem / ( 1024 * 1024 ) )		8023012	3					
ANR	8023296	CastExpression	( unsigned int ) ( hwdef -> max_mem / ( 1024 * 1024 ) )		8023012	0					
ANR	8023297	CastTarget	unsigned int		8023012	0					
ANR	8023298	MultiplicativeExpression	hwdef -> max_mem / ( 1024 * 1024 )		8023012	1		/			
ANR	8023299	PtrMemberAccess	hwdef -> max_mem		8023012	0					
ANR	8023300	Identifier	hwdef		8023012	0					
ANR	8023301	Identifier	max_mem		8023012	1					
ANR	8023302	MultiplicativeExpression	1024 * 1024		8023012	1		*			
ANR	8023303	PrimaryExpression	1024		8023012	0					
ANR	8023304	PrimaryExpression	1024		8023012	1					
ANR	8023305	ExpressionStatement	exit ( 1 )	111:8:1967:1974	8023012	1	True				
ANR	8023306	CallExpression	exit ( 1 )		8023012	0					
ANR	8023307	Callee	exit		8023012	0					
ANR	8023308	Identifier	exit		8023012	0					
ANR	8023309	ArgumentList	1		8023012	1					
ANR	8023310	Argument	1		8023012	0					
ANR	8023311	PrimaryExpression	1		8023012	0					
ANR	8023312	ExpressionStatement	ram_offset = qemu_ram_alloc ( RAM_size )	115:4:1988:2025	8023012	18	True				
ANR	8023313	AssignmentExpression	ram_offset = qemu_ram_alloc ( RAM_size )		8023012	0		=			
ANR	8023314	Identifier	ram_offset		8023012	0					
ANR	8023315	CallExpression	qemu_ram_alloc ( RAM_size )		8023012	1					
ANR	8023316	Callee	qemu_ram_alloc		8023012	0					
ANR	8023317	Identifier	qemu_ram_alloc		8023012	0					
ANR	8023318	ArgumentList	RAM_size		8023012	1					
ANR	8023319	Argument	RAM_size		8023012	0					
ANR	8023320	Identifier	RAM_size		8023012	0					
ANR	8023321	ExpressionStatement	"cpu_register_physical_memory ( 0 , RAM_size , ram_offset )"	117:4:2032:2085	8023012	19	True				
ANR	8023322	CallExpression	"cpu_register_physical_memory ( 0 , RAM_size , ram_offset )"		8023012	0					
ANR	8023323	Callee	cpu_register_physical_memory		8023012	0					
ANR	8023324	Identifier	cpu_register_physical_memory		8023012	0					
ANR	8023325	ArgumentList	0		8023012	1					
ANR	8023326	Argument	0		8023012	0					
ANR	8023327	PrimaryExpression	0		8023012	0					
ANR	8023328	Argument	RAM_size		8023012	1					
ANR	8023329	Identifier	RAM_size		8023012	0					
ANR	8023330	Argument	ram_offset		8023012	2					
ANR	8023331	Identifier	ram_offset		8023012	0					
ANR	8023332	ExpressionStatement	prom_offset = qemu_ram_alloc ( PROM_SIZE_MAX )	123:4:2120:2163	8023012	20	True				
ANR	8023333	AssignmentExpression	prom_offset = qemu_ram_alloc ( PROM_SIZE_MAX )		8023012	0		=			
ANR	8023334	Identifier	prom_offset		8023012	0					
ANR	8023335	CallExpression	qemu_ram_alloc ( PROM_SIZE_MAX )		8023012	1					
ANR	8023336	Callee	qemu_ram_alloc		8023012	0					
ANR	8023337	Identifier	qemu_ram_alloc		8023012	0					
ANR	8023338	ArgumentList	PROM_SIZE_MAX		8023012	1					
ANR	8023339	Argument	PROM_SIZE_MAX		8023012	0					
ANR	8023340	Identifier	PROM_SIZE_MAX		8023012	0					
ANR	8023341	ExpressionStatement	"cpu_register_physical_memory ( hwdef -> slavio_base , ( PROM_SIZE_MAX + TARGET_PAGE_SIZE - 1 ) & TARGET_PAGE_MASK , prom_offset | IO_MEM_ROM )"	125:4:2170:2405	8023012	21	True				
ANR	8023342	CallExpression	"cpu_register_physical_memory ( hwdef -> slavio_base , ( PROM_SIZE_MAX + TARGET_PAGE_SIZE - 1 ) & TARGET_PAGE_MASK , prom_offset | IO_MEM_ROM )"		8023012	0					
ANR	8023343	Callee	cpu_register_physical_memory		8023012	0					
ANR	8023344	Identifier	cpu_register_physical_memory		8023012	0					
ANR	8023345	ArgumentList	hwdef -> slavio_base		8023012	1					
ANR	8023346	Argument	hwdef -> slavio_base		8023012	0					
ANR	8023347	PtrMemberAccess	hwdef -> slavio_base		8023012	0					
ANR	8023348	Identifier	hwdef		8023012	0					
ANR	8023349	Identifier	slavio_base		8023012	1					
ANR	8023350	Argument	( PROM_SIZE_MAX + TARGET_PAGE_SIZE - 1 ) & TARGET_PAGE_MASK		8023012	1					
ANR	8023351	BitAndExpression	( PROM_SIZE_MAX + TARGET_PAGE_SIZE - 1 ) & TARGET_PAGE_MASK		8023012	0		&			
ANR	8023352	AdditiveExpression	PROM_SIZE_MAX + TARGET_PAGE_SIZE - 1		8023012	0		+			
ANR	8023353	Identifier	PROM_SIZE_MAX		8023012	0					
ANR	8023354	AdditiveExpression	TARGET_PAGE_SIZE - 1		8023012	1		-			
ANR	8023355	Identifier	TARGET_PAGE_SIZE		8023012	0					
ANR	8023356	PrimaryExpression	1		8023012	1					
ANR	8023357	Identifier	TARGET_PAGE_MASK		8023012	1					
ANR	8023358	Argument	prom_offset | IO_MEM_ROM		8023012	2					
ANR	8023359	InclusiveOrExpression	prom_offset | IO_MEM_ROM		8023012	0		|			
ANR	8023360	Identifier	prom_offset		8023012	0					
ANR	8023361	Identifier	IO_MEM_ROM		8023012	1					
ANR	8023362	IfStatement	if ( bios_name == NULL )		8023012	22					
ANR	8023363	Condition	bios_name == NULL	135:8:2418:2434	8023012	0	True				
ANR	8023364	EqualityExpression	bios_name == NULL		8023012	0		==			
ANR	8023365	Identifier	bios_name		8023012	0					
ANR	8023366	Identifier	NULL		8023012	1					
ANR	8023367	ExpressionStatement	bios_name = PROM_FILENAME	137:8:2446:2471	8023012	1	True				
ANR	8023368	AssignmentExpression	bios_name = PROM_FILENAME		8023012	0		=			
ANR	8023369	Identifier	bios_name		8023012	0					
ANR	8023370	Identifier	PROM_FILENAME		8023012	1					
ANR	8023371	ExpressionStatement	"snprintf ( buf , sizeof ( buf ) , ""%s/%s"" , bios_dir , bios_name )"	139:4:2478:2534	8023012	23	True				
ANR	8023372	CallExpression	"snprintf ( buf , sizeof ( buf ) , ""%s/%s"" , bios_dir , bios_name )"		8023012	0					
ANR	8023373	Callee	snprintf		8023012	0					
ANR	8023374	Identifier	snprintf		8023012	0					
ANR	8023375	ArgumentList	buf		8023012	1					
ANR	8023376	Argument	buf		8023012	0					
ANR	8023377	Identifier	buf		8023012	0					
ANR	8023378	Argument	sizeof ( buf )		8023012	1					
ANR	8023379	SizeofExpression	sizeof ( buf )		8023012	0					
ANR	8023380	Sizeof	sizeof		8023012	0					
ANR	8023381	SizeofOperand	buf		8023012	1					
ANR	8023382	Argument	"""%s/%s"""		8023012	2					
ANR	8023383	PrimaryExpression	"""%s/%s"""		8023012	0					
ANR	8023384	Argument	bios_dir		8023012	3					
ANR	8023385	Identifier	bios_dir		8023012	0					
ANR	8023386	Argument	bios_name		8023012	4					
ANR	8023387	Identifier	bios_name		8023012	0					
ANR	8023388	ExpressionStatement	"ret = load_elf ( buf , hwdef -> slavio_base - PROM_VADDR , NULL , NULL , NULL )"	141:4:2541:2611	8023012	24	True				
ANR	8023389	AssignmentExpression	"ret = load_elf ( buf , hwdef -> slavio_base - PROM_VADDR , NULL , NULL , NULL )"		8023012	0		=			
ANR	8023390	Identifier	ret		8023012	0					
ANR	8023391	CallExpression	"load_elf ( buf , hwdef -> slavio_base - PROM_VADDR , NULL , NULL , NULL )"		8023012	1					
ANR	8023392	Callee	load_elf		8023012	0					
ANR	8023393	Identifier	load_elf		8023012	0					
ANR	8023394	ArgumentList	buf		8023012	1					
ANR	8023395	Argument	buf		8023012	0					
ANR	8023396	Identifier	buf		8023012	0					
ANR	8023397	Argument	hwdef -> slavio_base - PROM_VADDR		8023012	1					
ANR	8023398	AdditiveExpression	hwdef -> slavio_base - PROM_VADDR		8023012	0		-			
ANR	8023399	PtrMemberAccess	hwdef -> slavio_base		8023012	0					
ANR	8023400	Identifier	hwdef		8023012	0					
ANR	8023401	Identifier	slavio_base		8023012	1					
ANR	8023402	Identifier	PROM_VADDR		8023012	1					
ANR	8023403	Argument	NULL		8023012	2					
ANR	8023404	Identifier	NULL		8023012	0					
ANR	8023405	Argument	NULL		8023012	3					
ANR	8023406	Identifier	NULL		8023012	0					
ANR	8023407	Argument	NULL		8023012	4					
ANR	8023408	Identifier	NULL		8023012	0					
ANR	8023409	IfStatement	if ( ret < 0 || ret > PROM_SIZE_MAX )		8023012	25					
ANR	8023410	Condition	ret < 0 || ret > PROM_SIZE_MAX	143:8:2622:2651	8023012	0	True				
ANR	8023411	OrExpression	ret < 0 || ret > PROM_SIZE_MAX		8023012	0		||			
ANR	8023412	RelationalExpression	ret < 0		8023012	0		<			
ANR	8023413	Identifier	ret		8023012	0					
ANR	8023414	PrimaryExpression	0		8023012	1					
ANR	8023415	RelationalExpression	ret > PROM_SIZE_MAX		8023012	1		>			
ANR	8023416	Identifier	ret		8023012	0					
ANR	8023417	Identifier	PROM_SIZE_MAX		8023012	1					
ANR	8023418	ExpressionStatement	"ret = load_image_targphys ( buf , hwdef -> slavio_base , PROM_SIZE_MAX )"	145:8:2663:2728	8023012	1	True				
ANR	8023419	AssignmentExpression	"ret = load_image_targphys ( buf , hwdef -> slavio_base , PROM_SIZE_MAX )"		8023012	0		=			
ANR	8023420	Identifier	ret		8023012	0					
ANR	8023421	CallExpression	"load_image_targphys ( buf , hwdef -> slavio_base , PROM_SIZE_MAX )"		8023012	1					
ANR	8023422	Callee	load_image_targphys		8023012	0					
ANR	8023423	Identifier	load_image_targphys		8023012	0					
ANR	8023424	ArgumentList	buf		8023012	1					
ANR	8023425	Argument	buf		8023012	0					
ANR	8023426	Identifier	buf		8023012	0					
ANR	8023427	Argument	hwdef -> slavio_base		8023012	1					
ANR	8023428	PtrMemberAccess	hwdef -> slavio_base		8023012	0					
ANR	8023429	Identifier	hwdef		8023012	0					
ANR	8023430	Identifier	slavio_base		8023012	1					
ANR	8023431	Argument	PROM_SIZE_MAX		8023012	2					
ANR	8023432	Identifier	PROM_SIZE_MAX		8023012	0					
ANR	8023433	IfStatement	if ( ret < 0 || ret > PROM_SIZE_MAX )		8023012	26					
ANR	8023434	Condition	ret < 0 || ret > PROM_SIZE_MAX	147:8:2739:2768	8023012	0	True				
ANR	8023435	OrExpression	ret < 0 || ret > PROM_SIZE_MAX		8023012	0		||			
ANR	8023436	RelationalExpression	ret < 0		8023012	0		<			
ANR	8023437	Identifier	ret		8023012	0					
ANR	8023438	PrimaryExpression	0		8023012	1					
ANR	8023439	RelationalExpression	ret > PROM_SIZE_MAX		8023012	1		>			
ANR	8023440	Identifier	ret		8023012	0					
ANR	8023441	Identifier	PROM_SIZE_MAX		8023012	1					
ANR	8023442	CompoundStatement		135:40:2427:2427	8023012	1					
ANR	8023443	ExpressionStatement	"fprintf ( stderr , ""qemu: could not load prom '%s'\\n"" , buf )"	149:8:2782:2855	8023012	0	True				
ANR	8023444	CallExpression	"fprintf ( stderr , ""qemu: could not load prom '%s'\\n"" , buf )"		8023012	0					
ANR	8023445	Callee	fprintf		8023012	0					
ANR	8023446	Identifier	fprintf		8023012	0					
ANR	8023447	ArgumentList	stderr		8023012	1					
ANR	8023448	Argument	stderr		8023012	0					
ANR	8023449	Identifier	stderr		8023012	0					
ANR	8023450	Argument	"""qemu: could not load prom '%s'\\n"""		8023012	1					
ANR	8023451	PrimaryExpression	"""qemu: could not load prom '%s'\\n"""		8023012	0					
ANR	8023452	Argument	buf		8023012	2					
ANR	8023453	Identifier	buf		8023012	0					
ANR	8023454	ExpressionStatement	exit ( 1 )	153:8:2866:2873	8023012	1	True				
ANR	8023455	CallExpression	exit ( 1 )		8023012	0					
ANR	8023456	Callee	exit		8023012	0					
ANR	8023457	Identifier	exit		8023012	0					
ANR	8023458	ArgumentList	1		8023012	1					
ANR	8023459	Argument	1		8023012	0					
ANR	8023460	PrimaryExpression	1		8023012	0					
ANR	8023461	Statement	slavio_intctl	161:4:2915:2927	8023012	27	True				
ANR	8023462	Statement	=	161:18:2929:2929	8023012	28	True				
ANR	8023463	Statement	slavio_intctl_init	161:20:2931:2948	8023012	29	True				
ANR	8023464	Statement	(	161:38:2949:2949	8023012	30	True				
ANR	8023465	Statement	hwdef	161:39:2950:2954	8023012	31	True				
ANR	8023466	Statement	->	161:44:2955:2956	8023012	32	True				
ANR	8023467	Statement	intctl_base	161:46:2957:2967	8023012	33	True				
ANR	8023468	Statement	","	161:57:2968:2968	8023012	34	True				
ANR	8023469	Statement	hwdef	163:39:3010:3014	8023012	35	True				
ANR	8023470	Statement	->	163:44:3015:3016	8023012	36	True				
ANR	8023471	Statement	intctl_base	163:46:3017:3027	8023012	37	True				
ANR	8023472	Statement	+	163:58:3029:3029	8023012	38	True				
ANR	8023473	Statement	0x10000UL	163:60:3031:3039	8023012	39	True				
ANR	8023474	Statement	L	163:69:3040:3040	8023012	40	True				
ANR	8023475	Statement	","	163:70:3041:3041	8023012	41	True				
ANR	8023476	Statement	&	165:39:3083:3083	8023012	42	True				
ANR	8023477	Statement	hwdef	165:40:3084:3088	8023012	43	True				
ANR	8023478	Statement	->	165:45:3089:3090	8023012	44	True				
ANR	8023479	Statement	intbit_to_level	165:47:3091:3105	8023012	45	True				
ANR	8023480	Statement	[	165:62:3106:3106	8023012	46	True				
ANR	8023481	Statement	0	165:63:3107:3107	8023012	47	True				
ANR	8023482	Statement	]	165:64:3108:3108	8023012	48	True				
ANR	8023483	Statement	","	165:65:3109:3109	8023012	49	True				
ANR	8023484	Statement	&	167:39:3151:3151	8023012	50	True				
ANR	8023485	Statement	slavio_irq	167:40:3152:3161	8023012	51	True				
ANR	8023486	Statement	","	167:50:3162:3162	8023012	52	True				
ANR	8023487	Statement	&	167:52:3164:3164	8023012	53	True				
ANR	8023488	Statement	slavio_cpu_irq	167:53:3165:3178	8023012	54	True				
ANR	8023489	Statement	","	167:67:3179:3179	8023012	55	True				
ANR	8023490	Statement	cpu_irqs	169:39:3221:3228	8023012	56	True				
ANR	8023491	Statement	","	169:47:3229:3229	8023012	57	True				
ANR	8023492	Statement	hwdef	171:39:3271:3275	8023012	58	True				
ANR	8023493	Statement	->	171:44:3276:3277	8023012	59	True				
ANR	8023494	Statement	clock_irq	171:46:3278:3286	8023012	60	True				
ANR	8023495	Statement	)	171:55:3287:3287	8023012	61	True				
ANR	8023496	ExpressionStatement		171:56:3288:3288	8023012	62	True				
ANR	8023497	IfStatement	if ( hwdef -> idreg_base )		8023012	63					
ANR	8023498	Condition	hwdef -> idreg_base	175:8:3301:3317	8023012	0	True				
ANR	8023499	PtrMemberAccess	hwdef -> idreg_base		8023012	0					
ANR	8023500	Identifier	hwdef		8023012	0					
ANR	8023501	Identifier	idreg_base		8023012	1					
ANR	8023502	CompoundStatement		165:15:2994:3049	8023012	1					
ANR	8023503	Statement	static	177:8:3331:3336	8023012	0	True				
ANR	8023504	IdentifierDeclStatement	"const uint8_t idreg_data [ ] = { 0xfe , 0x81 , 0x01 , 0x03 } ;"	177:15:3338:3393	8023012	1	True				
ANR	8023505	IdentifierDecl	"idreg_data [ ] = { 0xfe , 0x81 , 0x01 , 0x03 }"		8023012	0					
ANR	8023506	IdentifierDeclType	const uint8_t [ ]		8023012	0					
ANR	8023507	Identifier	idreg_data		8023012	1					
ANR	8023508	AssignmentExpression	"idreg_data [ ] = { 0xfe , 0x81 , 0x01 , 0x03 }"		8023012	2		=			
ANR	8023509	Identifier	idreg_data		8023012	0					
ANR	8023510	InitializerList	0xfe		8023012	1					
ANR	8023511	PrimaryExpression	0xfe		8023012	0					
ANR	8023512	PrimaryExpression	0x81		8023012	1					
ANR	8023513	PrimaryExpression	0x01		8023012	2					
ANR	8023514	PrimaryExpression	0x03		8023012	3					
ANR	8023515	ExpressionStatement	idreg_offset = qemu_ram_alloc ( sizeof ( idreg_data ) )	181:8:3406:3455	8023012	2	True				
ANR	8023516	AssignmentExpression	idreg_offset = qemu_ram_alloc ( sizeof ( idreg_data ) )		8023012	0		=			
ANR	8023517	Identifier	idreg_offset		8023012	0					
ANR	8023518	CallExpression	qemu_ram_alloc ( sizeof ( idreg_data ) )		8023012	1					
ANR	8023519	Callee	qemu_ram_alloc		8023012	0					
ANR	8023520	Identifier	qemu_ram_alloc		8023012	0					
ANR	8023521	ArgumentList	sizeof ( idreg_data )		8023012	1					
ANR	8023522	Argument	sizeof ( idreg_data )		8023012	0					
ANR	8023523	SizeofExpression	sizeof ( idreg_data )		8023012	0					
ANR	8023524	Sizeof	sizeof		8023012	0					
ANR	8023525	SizeofOperand	idreg_data		8023012	1					
ANR	8023526	ExpressionStatement	"cpu_register_physical_memory ( hwdef -> idreg_base , sizeof ( idreg_data ) , idreg_offset | IO_MEM_ROM )"	183:8:3466:3598	8023012	3	True				
ANR	8023527	CallExpression	"cpu_register_physical_memory ( hwdef -> idreg_base , sizeof ( idreg_data ) , idreg_offset | IO_MEM_ROM )"		8023012	0					
ANR	8023528	Callee	cpu_register_physical_memory		8023012	0					
ANR	8023529	Identifier	cpu_register_physical_memory		8023012	0					
ANR	8023530	ArgumentList	hwdef -> idreg_base		8023012	1					
ANR	8023531	Argument	hwdef -> idreg_base		8023012	0					
ANR	8023532	PtrMemberAccess	hwdef -> idreg_base		8023012	0					
ANR	8023533	Identifier	hwdef		8023012	0					
ANR	8023534	Identifier	idreg_base		8023012	1					
ANR	8023535	Argument	sizeof ( idreg_data )		8023012	1					
ANR	8023536	SizeofExpression	sizeof ( idreg_data )		8023012	0					
ANR	8023537	Sizeof	sizeof		8023012	0					
ANR	8023538	SizeofOperand	idreg_data		8023012	1					
ANR	8023539	Argument	idreg_offset | IO_MEM_ROM		8023012	2					
ANR	8023540	InclusiveOrExpression	idreg_offset | IO_MEM_ROM		8023012	0		|			
ANR	8023541	Identifier	idreg_offset		8023012	0					
ANR	8023542	Identifier	IO_MEM_ROM		8023012	1					
ANR	8023543	ExpressionStatement	"cpu_physical_memory_write_rom ( hwdef -> idreg_base , idreg_data , sizeof ( idreg_data ) )"	187:8:3609:3728	8023012	4	True				
ANR	8023544	CallExpression	"cpu_physical_memory_write_rom ( hwdef -> idreg_base , idreg_data , sizeof ( idreg_data ) )"		8023012	0					
ANR	8023545	Callee	cpu_physical_memory_write_rom		8023012	0					
ANR	8023546	Identifier	cpu_physical_memory_write_rom		8023012	0					
ANR	8023547	ArgumentList	hwdef -> idreg_base		8023012	1					
ANR	8023548	Argument	hwdef -> idreg_base		8023012	0					
ANR	8023549	PtrMemberAccess	hwdef -> idreg_base		8023012	0					
ANR	8023550	Identifier	hwdef		8023012	0					
ANR	8023551	Identifier	idreg_base		8023012	1					
ANR	8023552	Argument	idreg_data		8023012	1					
ANR	8023553	Identifier	idreg_data		8023012	0					
ANR	8023554	Argument	sizeof ( idreg_data )		8023012	2					
ANR	8023555	SizeofExpression	sizeof ( idreg_data )		8023012	0					
ANR	8023556	Sizeof	sizeof		8023012	0					
ANR	8023557	SizeofOperand	idreg_data		8023012	1					
ANR	8023558	ExpressionStatement	"iommu = iommu_init ( hwdef -> iommu_base , hwdef -> iommu_version , slavio_irq [ hwdef -> me_irq ] )"	195:4:3744:3854	8023012	64	True				
ANR	8023559	AssignmentExpression	"iommu = iommu_init ( hwdef -> iommu_base , hwdef -> iommu_version , slavio_irq [ hwdef -> me_irq ] )"		8023012	0		=			
ANR	8023560	Identifier	iommu		8023012	0					
ANR	8023561	CallExpression	"iommu_init ( hwdef -> iommu_base , hwdef -> iommu_version , slavio_irq [ hwdef -> me_irq ] )"		8023012	1					
ANR	8023562	Callee	iommu_init		8023012	0					
ANR	8023563	Identifier	iommu_init		8023012	0					
ANR	8023564	ArgumentList	hwdef -> iommu_base		8023012	1					
ANR	8023565	Argument	hwdef -> iommu_base		8023012	0					
ANR	8023566	PtrMemberAccess	hwdef -> iommu_base		8023012	0					
ANR	8023567	Identifier	hwdef		8023012	0					
ANR	8023568	Identifier	iommu_base		8023012	1					
ANR	8023569	Argument	hwdef -> iommu_version		8023012	1					
ANR	8023570	PtrMemberAccess	hwdef -> iommu_version		8023012	0					
ANR	8023571	Identifier	hwdef		8023012	0					
ANR	8023572	Identifier	iommu_version		8023012	1					
ANR	8023573	Argument	slavio_irq [ hwdef -> me_irq ]		8023012	2					
ANR	8023574	ArrayIndexing	slavio_irq [ hwdef -> me_irq ]		8023012	0					
ANR	8023575	Identifier	slavio_irq		8023012	0					
ANR	8023576	PtrMemberAccess	hwdef -> me_irq		8023012	1					
ANR	8023577	Identifier	hwdef		8023012	0					
ANR	8023578	Identifier	me_irq		8023012	1					
ANR	8023579	ExpressionStatement	"espdma = sparc32_dma_init ( hwdef -> dma_base , slavio_irq [ hwdef -> esp_irq ] , iommu , & espdma_irq , & esp_reset )"	201:4:3863:3996	8023012	65	True				
ANR	8023580	AssignmentExpression	"espdma = sparc32_dma_init ( hwdef -> dma_base , slavio_irq [ hwdef -> esp_irq ] , iommu , & espdma_irq , & esp_reset )"		8023012	0		=			
ANR	8023581	Identifier	espdma		8023012	0					
ANR	8023582	CallExpression	"sparc32_dma_init ( hwdef -> dma_base , slavio_irq [ hwdef -> esp_irq ] , iommu , & espdma_irq , & esp_reset )"		8023012	1					
ANR	8023583	Callee	sparc32_dma_init		8023012	0					
ANR	8023584	Identifier	sparc32_dma_init		8023012	0					
ANR	8023585	ArgumentList	hwdef -> dma_base		8023012	1					
ANR	8023586	Argument	hwdef -> dma_base		8023012	0					
ANR	8023587	PtrMemberAccess	hwdef -> dma_base		8023012	0					
ANR	8023588	Identifier	hwdef		8023012	0					
ANR	8023589	Identifier	dma_base		8023012	1					
ANR	8023590	Argument	slavio_irq [ hwdef -> esp_irq ]		8023012	1					
ANR	8023591	ArrayIndexing	slavio_irq [ hwdef -> esp_irq ]		8023012	0					
ANR	8023592	Identifier	slavio_irq		8023012	0					
ANR	8023593	PtrMemberAccess	hwdef -> esp_irq		8023012	1					
ANR	8023594	Identifier	hwdef		8023012	0					
ANR	8023595	Identifier	esp_irq		8023012	1					
ANR	8023596	Argument	iommu		8023012	2					
ANR	8023597	Identifier	iommu		8023012	0					
ANR	8023598	Argument	& espdma_irq		8023012	3					
ANR	8023599	UnaryOperationExpression	& espdma_irq		8023012	0					
ANR	8023600	UnaryOperator	&		8023012	0					
ANR	8023601	Identifier	espdma_irq		8023012	1					
ANR	8023602	Argument	& esp_reset		8023012	4					
ANR	8023603	UnaryOperationExpression	& esp_reset		8023012	0					
ANR	8023604	UnaryOperator	&		8023012	0					
ANR	8023605	Identifier	esp_reset		8023012	1					
ANR	8023606	Statement	ledma	207:4:4005:4009	8023012	66	True				
ANR	8023607	Statement	=	207:10:4011:4011	8023012	67	True				
ANR	8023608	Statement	sparc32_dma_init	207:12:4013:4028	8023012	68	True				
ANR	8023609	Statement	(	207:28:4029:4029	8023012	69	True				
ANR	8023610	Statement	hwdef	207:29:4030:4034	8023012	70	True				
ANR	8023611	Statement	->	207:34:4035:4036	8023012	71	True				
ANR	8023612	Statement	dma_base	207:36:4037:4044	8023012	72	True				
ANR	8023613	Statement	+	207:45:4046:4046	8023012	73	True				
ANR	8023614	Statement	16UL	207:47:4048:4051	8023012	74	True				
ANR	8023615	Statement	L	207:51:4052:4052	8023012	75	True				
ANR	8023616	Statement	","	207:52:4053:4053	8023012	76	True				
ANR	8023617	Statement	slavio_irq	209:29:4085:4094	8023012	77	True				
ANR	8023618	Statement	[	209:39:4095:4095	8023012	78	True				
ANR	8023619	Statement	hwdef	209:40:4096:4100	8023012	79	True				
ANR	8023620	Statement	->	209:45:4101:4102	8023012	80	True				
ANR	8023621	Statement	le_irq	209:47:4103:4108	8023012	81	True				
ANR	8023622	Statement	]	209:53:4109:4109	8023012	82	True				
ANR	8023623	Statement	","	209:54:4110:4110	8023012	83	True				
ANR	8023624	Statement	iommu	209:56:4112:4116	8023012	84	True				
ANR	8023625	Statement	","	209:61:4117:4117	8023012	85	True				
ANR	8023626	Statement	&	209:63:4119:4119	8023012	86	True				
ANR	8023627	Statement	ledma_irq	209:64:4120:4128	8023012	87	True				
ANR	8023628	Statement	","	209:73:4129:4129	8023012	88	True				
ANR	8023629	Statement	&	211:29:4161:4161	8023012	89	True				
ANR	8023630	Statement	le_reset	211:30:4162:4169	8023012	90	True				
ANR	8023631	Statement	)	211:38:4170:4170	8023012	91	True				
ANR	8023632	ExpressionStatement		211:39:4171:4171	8023012	92	True				
ANR	8023633	IfStatement	if ( graphic_depth != 8 && graphic_depth != 24 )		8023012	93					
ANR	8023634	Condition	graphic_depth != 8 && graphic_depth != 24	215:8:4184:4224	8023012	0	True				
ANR	8023635	AndExpression	graphic_depth != 8 && graphic_depth != 24		8023012	0		&&			
ANR	8023636	EqualityExpression	graphic_depth != 8		8023012	0		!=			
ANR	8023637	Identifier	graphic_depth		8023012	0					
ANR	8023638	PrimaryExpression	8		8023012	1					
ANR	8023639	EqualityExpression	graphic_depth != 24		8023012	1		!=			
ANR	8023640	Identifier	graphic_depth		8023012	0					
ANR	8023641	PrimaryExpression	24		8023012	1					
ANR	8023642	CompoundStatement		203:51:3883:3883	8023012	1					
ANR	8023643	ExpressionStatement	"fprintf ( stderr , ""qemu: Unsupported depth: %d\\n"" , graphic_depth )"	217:8:4238:4301	8023012	0	True				
ANR	8023644	CallExpression	"fprintf ( stderr , ""qemu: Unsupported depth: %d\\n"" , graphic_depth )"		8023012	0					
ANR	8023645	Callee	fprintf		8023012	0					
ANR	8023646	Identifier	fprintf		8023012	0					
ANR	8023647	ArgumentList	stderr		8023012	1					
ANR	8023648	Argument	stderr		8023012	0					
ANR	8023649	Identifier	stderr		8023012	0					
ANR	8023650	Argument	"""qemu: Unsupported depth: %d\\n"""		8023012	1					
ANR	8023651	PrimaryExpression	"""qemu: Unsupported depth: %d\\n"""		8023012	0					
ANR	8023652	Argument	graphic_depth		8023012	2					
ANR	8023653	Identifier	graphic_depth		8023012	0					
ANR	8023654	ExpressionStatement	exit ( 1 )	219:8:4312:4320	8023012	1	True				
ANR	8023655	CallExpression	exit ( 1 )		8023012	0					
ANR	8023656	Callee	exit		8023012	0					
ANR	8023657	Identifier	exit		8023012	0					
ANR	8023658	ArgumentList	1		8023012	1					
ANR	8023659	Argument	1		8023012	0					
ANR	8023660	PrimaryExpression	1		8023012	0					
ANR	8023661	ExpressionStatement	tcx_offset = qemu_ram_alloc ( hwdef -> vram_size )	223:4:4334:4379	8023012	94	True				
ANR	8023662	AssignmentExpression	tcx_offset = qemu_ram_alloc ( hwdef -> vram_size )		8023012	0		=			
ANR	8023663	Identifier	tcx_offset		8023012	0					
ANR	8023664	CallExpression	qemu_ram_alloc ( hwdef -> vram_size )		8023012	1					
ANR	8023665	Callee	qemu_ram_alloc		8023012	0					
ANR	8023666	Identifier	qemu_ram_alloc		8023012	0					
ANR	8023667	ArgumentList	hwdef -> vram_size		8023012	1					
ANR	8023668	Argument	hwdef -> vram_size		8023012	0					
ANR	8023669	PtrMemberAccess	hwdef -> vram_size		8023012	0					
ANR	8023670	Identifier	hwdef		8023012	0					
ANR	8023671	Identifier	vram_size		8023012	1					
ANR	8023672	ExpressionStatement	"tcx_init ( ds , hwdef -> tcx_base , phys_ram_base + tcx_offset , tcx_offset , hwdef -> vram_size , graphic_width , graphic_height , graphic_depth )"	225:4:4386:4533	8023012	95	True				
ANR	8023673	CallExpression	"tcx_init ( ds , hwdef -> tcx_base , phys_ram_base + tcx_offset , tcx_offset , hwdef -> vram_size , graphic_width , graphic_height , graphic_depth )"		8023012	0					
ANR	8023674	Callee	tcx_init		8023012	0					
ANR	8023675	Identifier	tcx_init		8023012	0					
ANR	8023676	ArgumentList	ds		8023012	1					
ANR	8023677	Argument	ds		8023012	0					
ANR	8023678	Identifier	ds		8023012	0					
ANR	8023679	Argument	hwdef -> tcx_base		8023012	1					
ANR	8023680	PtrMemberAccess	hwdef -> tcx_base		8023012	0					
ANR	8023681	Identifier	hwdef		8023012	0					
ANR	8023682	Identifier	tcx_base		8023012	1					
ANR	8023683	Argument	phys_ram_base + tcx_offset		8023012	2					
ANR	8023684	AdditiveExpression	phys_ram_base + tcx_offset		8023012	0		+			
ANR	8023685	Identifier	phys_ram_base		8023012	0					
ANR	8023686	Identifier	tcx_offset		8023012	1					
ANR	8023687	Argument	tcx_offset		8023012	3					
ANR	8023688	Identifier	tcx_offset		8023012	0					
ANR	8023689	Argument	hwdef -> vram_size		8023012	4					
ANR	8023690	PtrMemberAccess	hwdef -> vram_size		8023012	0					
ANR	8023691	Identifier	hwdef		8023012	0					
ANR	8023692	Identifier	vram_size		8023012	1					
ANR	8023693	Argument	graphic_width		8023012	5					
ANR	8023694	Identifier	graphic_width		8023012	0					
ANR	8023695	Argument	graphic_height		8023012	6					
ANR	8023696	Identifier	graphic_height		8023012	0					
ANR	8023697	Argument	graphic_depth		8023012	7					
ANR	8023698	Identifier	graphic_depth		8023012	0					
ANR	8023699	IfStatement	if ( nd_table [ 0 ] . model == NULL )		8023012	96					
ANR	8023700	Condition	nd_table [ 0 ] . model == NULL	231:8:4546:4570	8023012	0	True				
ANR	8023701	EqualityExpression	nd_table [ 0 ] . model == NULL		8023012	0		==			
ANR	8023702	MemberAccess	nd_table [ 0 ] . model		8023012	0					
ANR	8023703	ArrayIndexing	nd_table [ 0 ]		8023012	0					
ANR	8023704	Identifier	nd_table		8023012	0					
ANR	8023705	PrimaryExpression	0		8023012	1					
ANR	8023706	Identifier	model		8023012	1					
ANR	8023707	Identifier	NULL		8023012	1					
ANR	8023708	ExpressionStatement	"nd_table [ 0 ] . model = ""lance"""	233:8:4582:4609	8023012	1	True				
ANR	8023709	AssignmentExpression	"nd_table [ 0 ] . model = ""lance"""		8023012	0		=			
ANR	8023710	MemberAccess	nd_table [ 0 ] . model		8023012	0					
ANR	8023711	ArrayIndexing	nd_table [ 0 ]		8023012	0					
ANR	8023712	Identifier	nd_table		8023012	0					
ANR	8023713	PrimaryExpression	0		8023012	1					
ANR	8023714	Identifier	model		8023012	1					
ANR	8023715	PrimaryExpression	"""lance"""		8023012	1					
ANR	8023716	IfStatement	"if ( strcmp ( nd_table [ 0 ] . model , ""lance"" ) == 0 )"		8023012	97					
ANR	8023717	Condition	"strcmp ( nd_table [ 0 ] . model , ""lance"" ) == 0"	235:8:4620:4658	8023012	0	True				
ANR	8023718	EqualityExpression	"strcmp ( nd_table [ 0 ] . model , ""lance"" ) == 0"		8023012	0		==			
ANR	8023719	CallExpression	"strcmp ( nd_table [ 0 ] . model , ""lance"" )"		8023012	0					
ANR	8023720	Callee	strcmp		8023012	0					
ANR	8023721	Identifier	strcmp		8023012	0					
ANR	8023722	ArgumentList	nd_table [ 0 ] . model		8023012	1					
ANR	8023723	Argument	nd_table [ 0 ] . model		8023012	0					
ANR	8023724	MemberAccess	nd_table [ 0 ] . model		8023012	0					
ANR	8023725	ArrayIndexing	nd_table [ 0 ]		8023012	0					
ANR	8023726	Identifier	nd_table		8023012	0					
ANR	8023727	PrimaryExpression	0		8023012	1					
ANR	8023728	Identifier	model		8023012	1					
ANR	8023729	Argument	"""lance"""		8023012	1					
ANR	8023730	PrimaryExpression	"""lance"""		8023012	0					
ANR	8023731	PrimaryExpression	0		8023012	1					
ANR	8023732	CompoundStatement		223:49:4317:4317	8023012	1					
ANR	8023733	ExpressionStatement	"lance_init ( & nd_table [ 0 ] , hwdef -> le_base , ledma , * ledma_irq , le_reset )"	237:8:4672:4741	8023012	0	True				
ANR	8023734	CallExpression	"lance_init ( & nd_table [ 0 ] , hwdef -> le_base , ledma , * ledma_irq , le_reset )"		8023012	0					
ANR	8023735	Callee	lance_init		8023012	0					
ANR	8023736	Identifier	lance_init		8023012	0					
ANR	8023737	ArgumentList	& nd_table [ 0 ]		8023012	1					
ANR	8023738	Argument	& nd_table [ 0 ]		8023012	0					
ANR	8023739	UnaryOperationExpression	& nd_table [ 0 ]		8023012	0					
ANR	8023740	UnaryOperator	&		8023012	0					
ANR	8023741	ArrayIndexing	nd_table [ 0 ]		8023012	1					
ANR	8023742	Identifier	nd_table		8023012	0					
ANR	8023743	PrimaryExpression	0		8023012	1					
ANR	8023744	Argument	hwdef -> le_base		8023012	1					
ANR	8023745	PtrMemberAccess	hwdef -> le_base		8023012	0					
ANR	8023746	Identifier	hwdef		8023012	0					
ANR	8023747	Identifier	le_base		8023012	1					
ANR	8023748	Argument	ledma		8023012	2					
ANR	8023749	Identifier	ledma		8023012	0					
ANR	8023750	Argument	* ledma_irq		8023012	3					
ANR	8023751	UnaryOperationExpression	* ledma_irq		8023012	0					
ANR	8023752	UnaryOperator	*		8023012	0					
ANR	8023753	Identifier	ledma_irq		8023012	1					
ANR	8023754	Argument	le_reset		8023012	4					
ANR	8023755	Identifier	le_reset		8023012	0					
ANR	8023756	ElseStatement	else		8023012	0					
ANR	8023757	IfStatement	"if ( strcmp ( nd_table [ 0 ] . model , ""?"" ) == 0 )"		8023012	0					
ANR	8023758	Condition	"strcmp ( nd_table [ 0 ] . model , ""?"" ) == 0"	239:15:4759:4793	8023012	0	True				
ANR	8023759	EqualityExpression	"strcmp ( nd_table [ 0 ] . model , ""?"" ) == 0"		8023012	0		==			
ANR	8023760	CallExpression	"strcmp ( nd_table [ 0 ] . model , ""?"" )"		8023012	0					
ANR	8023761	Callee	strcmp		8023012	0					
ANR	8023762	Identifier	strcmp		8023012	0					
ANR	8023763	ArgumentList	nd_table [ 0 ] . model		8023012	1					
ANR	8023764	Argument	nd_table [ 0 ] . model		8023012	0					
ANR	8023765	MemberAccess	nd_table [ 0 ] . model		8023012	0					
ANR	8023766	ArrayIndexing	nd_table [ 0 ]		8023012	0					
ANR	8023767	Identifier	nd_table		8023012	0					
ANR	8023768	PrimaryExpression	0		8023012	1					
ANR	8023769	Identifier	model		8023012	1					
ANR	8023770	Argument	"""?"""		8023012	1					
ANR	8023771	PrimaryExpression	"""?"""		8023012	0					
ANR	8023772	PrimaryExpression	0		8023012	1					
ANR	8023773	CompoundStatement		227:52:4452:4452	8023012	1					
ANR	8023774	ExpressionStatement	"fprintf ( stderr , ""qemu: Supported NICs: lance\\n"" )"	241:8:4807:4855	8023012	0	True				
ANR	8023775	CallExpression	"fprintf ( stderr , ""qemu: Supported NICs: lance\\n"" )"		8023012	0					
ANR	8023776	Callee	fprintf		8023012	0					
ANR	8023777	Identifier	fprintf		8023012	0					
ANR	8023778	ArgumentList	stderr		8023012	1					
ANR	8023779	Argument	stderr		8023012	0					
ANR	8023780	Identifier	stderr		8023012	0					
ANR	8023781	Argument	"""qemu: Supported NICs: lance\\n"""		8023012	1					
ANR	8023782	PrimaryExpression	"""qemu: Supported NICs: lance\\n"""		8023012	0					
ANR	8023783	ExpressionStatement	exit ( 1 )	243:8:4866:4874	8023012	1	True				
ANR	8023784	CallExpression	exit ( 1 )		8023012	0					
ANR	8023785	Callee	exit		8023012	0					
ANR	8023786	Identifier	exit		8023012	0					
ANR	8023787	ArgumentList	1		8023012	1					
ANR	8023788	Argument	1		8023012	0					
ANR	8023789	PrimaryExpression	1		8023012	0					
ANR	8023790	ElseStatement	else		8023012	0					
ANR	8023791	CompoundStatement		233:11:4544:4544	8023012	0					
ANR	8023792	ExpressionStatement	"fprintf ( stderr , ""qemu: Unsupported NIC: %s\\n"" , nd_table [ 0 ] . model )"	247:8:4899:4964	8023012	0	True				
ANR	8023793	CallExpression	"fprintf ( stderr , ""qemu: Unsupported NIC: %s\\n"" , nd_table [ 0 ] . model )"		8023012	0					
ANR	8023794	Callee	fprintf		8023012	0					
ANR	8023795	Identifier	fprintf		8023012	0					
ANR	8023796	ArgumentList	stderr		8023012	1					
ANR	8023797	Argument	stderr		8023012	0					
ANR	8023798	Identifier	stderr		8023012	0					
ANR	8023799	Argument	"""qemu: Unsupported NIC: %s\\n"""		8023012	1					
ANR	8023800	PrimaryExpression	"""qemu: Unsupported NIC: %s\\n"""		8023012	0					
ANR	8023801	Argument	nd_table [ 0 ] . model		8023012	2					
ANR	8023802	MemberAccess	nd_table [ 0 ] . model		8023012	0					
ANR	8023803	ArrayIndexing	nd_table [ 0 ]		8023012	0					
ANR	8023804	Identifier	nd_table		8023012	0					
ANR	8023805	PrimaryExpression	0		8023012	1					
ANR	8023806	Identifier	model		8023012	1					
ANR	8023807	ExpressionStatement	exit ( 1 )	249:8:4975:4983	8023012	1	True				
ANR	8023808	CallExpression	exit ( 1 )		8023012	0					
ANR	8023809	Callee	exit		8023012	0					
ANR	8023810	Identifier	exit		8023012	0					
ANR	8023811	ArgumentList	1		8023012	1					
ANR	8023812	Argument	1		8023012	0					
ANR	8023813	PrimaryExpression	1		8023012	0					
ANR	8023814	ExpressionStatement	"nvram = m48t59_init ( slavio_irq [ 0 ] , hwdef -> nvram_base , 0 , hwdef -> nvram_size , 8 )"	255:4:4999:5102	8023012	98	True				
ANR	8023815	AssignmentExpression	"nvram = m48t59_init ( slavio_irq [ 0 ] , hwdef -> nvram_base , 0 , hwdef -> nvram_size , 8 )"		8023012	0		=			
ANR	8023816	Identifier	nvram		8023012	0					
ANR	8023817	CallExpression	"m48t59_init ( slavio_irq [ 0 ] , hwdef -> nvram_base , 0 , hwdef -> nvram_size , 8 )"		8023012	1					
ANR	8023818	Callee	m48t59_init		8023012	0					
ANR	8023819	Identifier	m48t59_init		8023012	0					
ANR	8023820	ArgumentList	slavio_irq [ 0 ]		8023012	1					
ANR	8023821	Argument	slavio_irq [ 0 ]		8023012	0					
ANR	8023822	ArrayIndexing	slavio_irq [ 0 ]		8023012	0					
ANR	8023823	Identifier	slavio_irq		8023012	0					
ANR	8023824	PrimaryExpression	0		8023012	1					
ANR	8023825	Argument	hwdef -> nvram_base		8023012	1					
ANR	8023826	PtrMemberAccess	hwdef -> nvram_base		8023012	0					
ANR	8023827	Identifier	hwdef		8023012	0					
ANR	8023828	Identifier	nvram_base		8023012	1					
ANR	8023829	Argument	0		8023012	2					
ANR	8023830	PrimaryExpression	0		8023012	0					
ANR	8023831	Argument	hwdef -> nvram_size		8023012	3					
ANR	8023832	PtrMemberAccess	hwdef -> nvram_size		8023012	0					
ANR	8023833	Identifier	hwdef		8023012	0					
ANR	8023834	Identifier	nvram_size		8023012	1					
ANR	8023835	Argument	8		8023012	4					
ANR	8023836	PrimaryExpression	8		8023012	0					
ANR	8023837	ExpressionStatement	"slavio_timer_init_all ( hwdef -> counter_base , slavio_irq [ hwdef -> clock1_irq ] , slavio_cpu_irq , smp_cpus )"	261:4:5111:5237	8023012	99	True				
ANR	8023838	CallExpression	"slavio_timer_init_all ( hwdef -> counter_base , slavio_irq [ hwdef -> clock1_irq ] , slavio_cpu_irq , smp_cpus )"		8023012	0					
ANR	8023839	Callee	slavio_timer_init_all		8023012	0					
ANR	8023840	Identifier	slavio_timer_init_all		8023012	0					
ANR	8023841	ArgumentList	hwdef -> counter_base		8023012	1					
ANR	8023842	Argument	hwdef -> counter_base		8023012	0					
ANR	8023843	PtrMemberAccess	hwdef -> counter_base		8023012	0					
ANR	8023844	Identifier	hwdef		8023012	0					
ANR	8023845	Identifier	counter_base		8023012	1					
ANR	8023846	Argument	slavio_irq [ hwdef -> clock1_irq ]		8023012	1					
ANR	8023847	ArrayIndexing	slavio_irq [ hwdef -> clock1_irq ]		8023012	0					
ANR	8023848	Identifier	slavio_irq		8023012	0					
ANR	8023849	PtrMemberAccess	hwdef -> clock1_irq		8023012	1					
ANR	8023850	Identifier	hwdef		8023012	0					
ANR	8023851	Identifier	clock1_irq		8023012	1					
ANR	8023852	Argument	slavio_cpu_irq		8023012	2					
ANR	8023853	Identifier	slavio_cpu_irq		8023012	0					
ANR	8023854	Argument	smp_cpus		8023012	3					
ANR	8023855	Identifier	smp_cpus		8023012	0					
ANR	8023856	ExpressionStatement	"slavio_serial_ms_kbd_init ( hwdef -> ms_kb_base , slavio_irq [ hwdef -> ms_kb_irq ] , nographic , ESCC_CLOCK , 1 )"	267:4:5246:5377	8023012	100	True				
ANR	8023857	CallExpression	"slavio_serial_ms_kbd_init ( hwdef -> ms_kb_base , slavio_irq [ hwdef -> ms_kb_irq ] , nographic , ESCC_CLOCK , 1 )"		8023012	0					
ANR	8023858	Callee	slavio_serial_ms_kbd_init		8023012	0					
ANR	8023859	Identifier	slavio_serial_ms_kbd_init		8023012	0					
ANR	8023860	ArgumentList	hwdef -> ms_kb_base		8023012	1					
ANR	8023861	Argument	hwdef -> ms_kb_base		8023012	0					
ANR	8023862	PtrMemberAccess	hwdef -> ms_kb_base		8023012	0					
ANR	8023863	Identifier	hwdef		8023012	0					
ANR	8023864	Identifier	ms_kb_base		8023012	1					
ANR	8023865	Argument	slavio_irq [ hwdef -> ms_kb_irq ]		8023012	1					
ANR	8023866	ArrayIndexing	slavio_irq [ hwdef -> ms_kb_irq ]		8023012	0					
ANR	8023867	Identifier	slavio_irq		8023012	0					
ANR	8023868	PtrMemberAccess	hwdef -> ms_kb_irq		8023012	1					
ANR	8023869	Identifier	hwdef		8023012	0					
ANR	8023870	Identifier	ms_kb_irq		8023012	1					
ANR	8023871	Argument	nographic		8023012	2					
ANR	8023872	Identifier	nographic		8023012	0					
ANR	8023873	Argument	ESCC_CLOCK		8023012	3					
ANR	8023874	Identifier	ESCC_CLOCK		8023012	0					
ANR	8023875	Argument	1		8023012	4					
ANR	8023876	PrimaryExpression	1		8023012	0					
ANR	8023877	ExpressionStatement	"escc_init ( hwdef -> serial_base , slavio_irq [ hwdef -> ser_irq ] , serial_hds [ 1 ] , serial_hds [ 0 ] , ESCC_CLOCK , 1 )"	275:4:5533:5650	8023012	101	True				
ANR	8023878	CallExpression	"escc_init ( hwdef -> serial_base , slavio_irq [ hwdef -> ser_irq ] , serial_hds [ 1 ] , serial_hds [ 0 ] , ESCC_CLOCK , 1 )"		8023012	0					
ANR	8023879	Callee	escc_init		8023012	0					
ANR	8023880	Identifier	escc_init		8023012	0					
ANR	8023881	ArgumentList	hwdef -> serial_base		8023012	1					
ANR	8023882	Argument	hwdef -> serial_base		8023012	0					
ANR	8023883	PtrMemberAccess	hwdef -> serial_base		8023012	0					
ANR	8023884	Identifier	hwdef		8023012	0					
ANR	8023885	Identifier	serial_base		8023012	1					
ANR	8023886	Argument	slavio_irq [ hwdef -> ser_irq ]		8023012	1					
ANR	8023887	ArrayIndexing	slavio_irq [ hwdef -> ser_irq ]		8023012	0					
ANR	8023888	Identifier	slavio_irq		8023012	0					
ANR	8023889	PtrMemberAccess	hwdef -> ser_irq		8023012	1					
ANR	8023890	Identifier	hwdef		8023012	0					
ANR	8023891	Identifier	ser_irq		8023012	1					
ANR	8023892	Argument	serial_hds [ 1 ]		8023012	2					
ANR	8023893	ArrayIndexing	serial_hds [ 1 ]		8023012	0					
ANR	8023894	Identifier	serial_hds		8023012	0					
ANR	8023895	PrimaryExpression	1		8023012	1					
ANR	8023896	Argument	serial_hds [ 0 ]		8023012	3					
ANR	8023897	ArrayIndexing	serial_hds [ 0 ]		8023012	0					
ANR	8023898	Identifier	serial_hds		8023012	0					
ANR	8023899	PrimaryExpression	0		8023012	1					
ANR	8023900	Argument	ESCC_CLOCK		8023012	4					
ANR	8023901	Identifier	ESCC_CLOCK		8023012	0					
ANR	8023902	Argument	1		8023012	5					
ANR	8023903	PrimaryExpression	1		8023012	0					
ANR	8023904	ExpressionStatement	"cpu_halt = qemu_allocate_irqs ( cpu_halt_signal , NULL , 1 )"	281:4:5659:5714	8023012	102	True				
ANR	8023905	AssignmentExpression	"cpu_halt = qemu_allocate_irqs ( cpu_halt_signal , NULL , 1 )"		8023012	0		=			
ANR	8023906	Identifier	cpu_halt		8023012	0					
ANR	8023907	CallExpression	"qemu_allocate_irqs ( cpu_halt_signal , NULL , 1 )"		8023012	1					
ANR	8023908	Callee	qemu_allocate_irqs		8023012	0					
ANR	8023909	Identifier	qemu_allocate_irqs		8023012	0					
ANR	8023910	ArgumentList	cpu_halt_signal		8023012	1					
ANR	8023911	Argument	cpu_halt_signal		8023012	0					
ANR	8023912	Identifier	cpu_halt_signal		8023012	0					
ANR	8023913	Argument	NULL		8023012	1					
ANR	8023914	Identifier	NULL		8023012	0					
ANR	8023915	Argument	1		8023012	2					
ANR	8023916	PrimaryExpression	1		8023012	0					
ANR	8023917	ExpressionStatement	"slavio_misc = slavio_misc_init ( hwdef -> slavio_base , hwdef -> apc_base , hwdef -> aux1_base , hwdef -> aux2_base , slavio_irq [ hwdef -> me_irq ] , cpu_halt [ 0 ] , & fdc_tc )"	283:4:5721:5981	8023012	103	True				
ANR	8023918	AssignmentExpression	"slavio_misc = slavio_misc_init ( hwdef -> slavio_base , hwdef -> apc_base , hwdef -> aux1_base , hwdef -> aux2_base , slavio_irq [ hwdef -> me_irq ] , cpu_halt [ 0 ] , & fdc_tc )"		8023012	0		=			
ANR	8023919	Identifier	slavio_misc		8023012	0					
ANR	8023920	CallExpression	"slavio_misc_init ( hwdef -> slavio_base , hwdef -> apc_base , hwdef -> aux1_base , hwdef -> aux2_base , slavio_irq [ hwdef -> me_irq ] , cpu_halt [ 0 ] , & fdc_tc )"		8023012	1					
ANR	8023921	Callee	slavio_misc_init		8023012	0					
ANR	8023922	Identifier	slavio_misc_init		8023012	0					
ANR	8023923	ArgumentList	hwdef -> slavio_base		8023012	1					
ANR	8023924	Argument	hwdef -> slavio_base		8023012	0					
ANR	8023925	PtrMemberAccess	hwdef -> slavio_base		8023012	0					
ANR	8023926	Identifier	hwdef		8023012	0					
ANR	8023927	Identifier	slavio_base		8023012	1					
ANR	8023928	Argument	hwdef -> apc_base		8023012	1					
ANR	8023929	PtrMemberAccess	hwdef -> apc_base		8023012	0					
ANR	8023930	Identifier	hwdef		8023012	0					
ANR	8023931	Identifier	apc_base		8023012	1					
ANR	8023932	Argument	hwdef -> aux1_base		8023012	2					
ANR	8023933	PtrMemberAccess	hwdef -> aux1_base		8023012	0					
ANR	8023934	Identifier	hwdef		8023012	0					
ANR	8023935	Identifier	aux1_base		8023012	1					
ANR	8023936	Argument	hwdef -> aux2_base		8023012	3					
ANR	8023937	PtrMemberAccess	hwdef -> aux2_base		8023012	0					
ANR	8023938	Identifier	hwdef		8023012	0					
ANR	8023939	Identifier	aux2_base		8023012	1					
ANR	8023940	Argument	slavio_irq [ hwdef -> me_irq ]		8023012	4					
ANR	8023941	ArrayIndexing	slavio_irq [ hwdef -> me_irq ]		8023012	0					
ANR	8023942	Identifier	slavio_irq		8023012	0					
ANR	8023943	PtrMemberAccess	hwdef -> me_irq		8023012	1					
ANR	8023944	Identifier	hwdef		8023012	0					
ANR	8023945	Identifier	me_irq		8023012	1					
ANR	8023946	Argument	cpu_halt [ 0 ]		8023012	5					
ANR	8023947	ArrayIndexing	cpu_halt [ 0 ]		8023012	0					
ANR	8023948	Identifier	cpu_halt		8023012	0					
ANR	8023949	PrimaryExpression	0		8023012	1					
ANR	8023950	Argument	& fdc_tc		8023012	6					
ANR	8023951	UnaryOperationExpression	& fdc_tc		8023012	0					
ANR	8023952	UnaryOperator	&		8023012	0					
ANR	8023953	Identifier	fdc_tc		8023012	1					
ANR	8023954	IfStatement	if ( hwdef -> fd_base )		8023012	104					
ANR	8023955	Condition	hwdef -> fd_base	293:8:5994:6007	8023012	0	True				
ANR	8023956	PtrMemberAccess	hwdef -> fd_base		8023012	0					
ANR	8023957	Identifier	hwdef		8023012	0					
ANR	8023958	Identifier	fd_base		8023012	1					
ANR	8023959	CompoundStatement		281:24:5666:5666	8023012	1					
ANR	8023960	ExpressionStatement	"memset ( fd , 0 , sizeof ( fd ) )"	297:8:6070:6095	8023012	0	True				
ANR	8023961	CallExpression	"memset ( fd , 0 , sizeof ( fd ) )"		8023012	0					
ANR	8023962	Callee	memset		8023012	0					
ANR	8023963	Identifier	memset		8023012	0					
ANR	8023964	ArgumentList	fd		8023012	1					
ANR	8023965	Argument	fd		8023012	0					
ANR	8023966	Identifier	fd		8023012	0					
ANR	8023967	Argument	0		8023012	1					
ANR	8023968	PrimaryExpression	0		8023012	0					
ANR	8023969	Argument	sizeof ( fd )		8023012	2					
ANR	8023970	SizeofExpression	sizeof ( fd )		8023012	0					
ANR	8023971	Sizeof	sizeof		8023012	0					
ANR	8023972	SizeofOperand	fd		8023012	1					
ANR	8023973	ExpressionStatement	"drive_index = drive_get_index ( IF_FLOPPY , 0 , 0 )"	299:8:6106:6152	8023012	1	True				
ANR	8023974	AssignmentExpression	"drive_index = drive_get_index ( IF_FLOPPY , 0 , 0 )"		8023012	0		=			
ANR	8023975	Identifier	drive_index		8023012	0					
ANR	8023976	CallExpression	"drive_get_index ( IF_FLOPPY , 0 , 0 )"		8023012	1					
ANR	8023977	Callee	drive_get_index		8023012	0					
ANR	8023978	Identifier	drive_get_index		8023012	0					
ANR	8023979	ArgumentList	IF_FLOPPY		8023012	1					
ANR	8023980	Argument	IF_FLOPPY		8023012	0					
ANR	8023981	Identifier	IF_FLOPPY		8023012	0					
ANR	8023982	Argument	0		8023012	1					
ANR	8023983	PrimaryExpression	0		8023012	0					
ANR	8023984	Argument	0		8023012	2					
ANR	8023985	PrimaryExpression	0		8023012	0					
ANR	8023986	IfStatement	if ( drive_index != - 1 )		8023012	2					
ANR	8023987	Condition	drive_index != - 1	301:12:6167:6183	8023012	0	True				
ANR	8023988	EqualityExpression	drive_index != - 1		8023012	0		!=			
ANR	8023989	Identifier	drive_index		8023012	0					
ANR	8023990	UnaryOperationExpression	- 1		8023012	1					
ANR	8023991	UnaryOperator	-		8023012	0					
ANR	8023992	PrimaryExpression	1		8023012	1					
ANR	8023993	ExpressionStatement	fd [ 0 ] = drives_table [ drive_index ] . bdrv	303:12:6199:6237	8023012	1	True				
ANR	8023994	AssignmentExpression	fd [ 0 ] = drives_table [ drive_index ] . bdrv		8023012	0		=			
ANR	8023995	ArrayIndexing	fd [ 0 ]		8023012	0					
ANR	8023996	Identifier	fd		8023012	0					
ANR	8023997	PrimaryExpression	0		8023012	1					
ANR	8023998	MemberAccess	drives_table [ drive_index ] . bdrv		8023012	1					
ANR	8023999	ArrayIndexing	drives_table [ drive_index ]		8023012	0					
ANR	8024000	Identifier	drives_table		8023012	0					
ANR	8024001	Identifier	drive_index		8023012	1					
ANR	8024002	Identifier	bdrv		8023012	1					
ANR	8024003	ExpressionStatement	"sun4m_fdctrl_init ( slavio_irq [ hwdef -> fd_irq ] , hwdef -> fd_base , fd , fdc_tc )"	307:8:6250:6349	8023012	3	True				
ANR	8024004	CallExpression	"sun4m_fdctrl_init ( slavio_irq [ hwdef -> fd_irq ] , hwdef -> fd_base , fd , fdc_tc )"		8023012	0					
ANR	8024005	Callee	sun4m_fdctrl_init		8023012	0					
ANR	8024006	Identifier	sun4m_fdctrl_init		8023012	0					
ANR	8024007	ArgumentList	slavio_irq [ hwdef -> fd_irq ]		8023012	1					
ANR	8024008	Argument	slavio_irq [ hwdef -> fd_irq ]		8023012	0					
ANR	8024009	ArrayIndexing	slavio_irq [ hwdef -> fd_irq ]		8023012	0					
ANR	8024010	Identifier	slavio_irq		8023012	0					
ANR	8024011	PtrMemberAccess	hwdef -> fd_irq		8023012	1					
ANR	8024012	Identifier	hwdef		8023012	0					
ANR	8024013	Identifier	fd_irq		8023012	1					
ANR	8024014	Argument	hwdef -> fd_base		8023012	1					
ANR	8024015	PtrMemberAccess	hwdef -> fd_base		8023012	0					
ANR	8024016	Identifier	hwdef		8023012	0					
ANR	8024017	Identifier	fd_base		8023012	1					
ANR	8024018	Argument	fd		8023012	2					
ANR	8024019	Identifier	fd		8023012	0					
ANR	8024020	Argument	fdc_tc		8023012	3					
ANR	8024021	Identifier	fdc_tc		8023012	0					
ANR	8024022	IfStatement	if ( drive_get_max_bus ( IF_SCSI ) > 0 )		8023012	105					
ANR	8024023	Condition	drive_get_max_bus ( IF_SCSI ) > 0	315:8:6369:6398	8023012	0	True				
ANR	8024024	RelationalExpression	drive_get_max_bus ( IF_SCSI ) > 0		8023012	0		>			
ANR	8024025	CallExpression	drive_get_max_bus ( IF_SCSI )		8023012	0					
ANR	8024026	Callee	drive_get_max_bus		8023012	0					
ANR	8024027	Identifier	drive_get_max_bus		8023012	0					
ANR	8024028	ArgumentList	IF_SCSI		8023012	1					
ANR	8024029	Argument	IF_SCSI		8023012	0					
ANR	8024030	Identifier	IF_SCSI		8023012	0					
ANR	8024031	PrimaryExpression	0		8023012	1					
ANR	8024032	CompoundStatement		303:40:6057:6057	8023012	1					
ANR	8024033	ExpressionStatement	"fprintf ( stderr , ""qemu: too many SCSI bus\\n"" )"	317:8:6412:6456	8023012	0	True				
ANR	8024034	CallExpression	"fprintf ( stderr , ""qemu: too many SCSI bus\\n"" )"		8023012	0					
ANR	8024035	Callee	fprintf		8023012	0					
ANR	8024036	Identifier	fprintf		8023012	0					
ANR	8024037	ArgumentList	stderr		8023012	1					
ANR	8024038	Argument	stderr		8023012	0					
ANR	8024039	Identifier	stderr		8023012	0					
ANR	8024040	Argument	"""qemu: too many SCSI bus\\n"""		8023012	1					
ANR	8024041	PrimaryExpression	"""qemu: too many SCSI bus\\n"""		8023012	0					
ANR	8024042	ExpressionStatement	exit ( 1 )	319:8:6467:6474	8023012	1	True				
ANR	8024043	CallExpression	exit ( 1 )		8023012	0					
ANR	8024044	Callee	exit		8023012	0					
ANR	8024045	Identifier	exit		8023012	0					
ANR	8024046	ArgumentList	1		8023012	1					
ANR	8024047	Argument	1		8023012	0					
ANR	8024048	PrimaryExpression	1		8023012	0					
ANR	8024049	ExpressionStatement	"main_esp = esp_init ( hwdef -> esp_base , 2 , espdma_memory_read , espdma_memory_write , espdma , * espdma_irq , esp_reset )"	325:4:6490:6652	8023012	106	True				
ANR	8024050	AssignmentExpression	"main_esp = esp_init ( hwdef -> esp_base , 2 , espdma_memory_read , espdma_memory_write , espdma , * espdma_irq , esp_reset )"		8023012	0		=			
ANR	8024051	Identifier	main_esp		8023012	0					
ANR	8024052	CallExpression	"esp_init ( hwdef -> esp_base , 2 , espdma_memory_read , espdma_memory_write , espdma , * espdma_irq , esp_reset )"		8023012	1					
ANR	8024053	Callee	esp_init		8023012	0					
ANR	8024054	Identifier	esp_init		8023012	0					
ANR	8024055	ArgumentList	hwdef -> esp_base		8023012	1					
ANR	8024056	Argument	hwdef -> esp_base		8023012	0					
ANR	8024057	PtrMemberAccess	hwdef -> esp_base		8023012	0					
ANR	8024058	Identifier	hwdef		8023012	0					
ANR	8024059	Identifier	esp_base		8023012	1					
ANR	8024060	Argument	2		8023012	1					
ANR	8024061	PrimaryExpression	2		8023012	0					
ANR	8024062	Argument	espdma_memory_read		8023012	2					
ANR	8024063	Identifier	espdma_memory_read		8023012	0					
ANR	8024064	Argument	espdma_memory_write		8023012	3					
ANR	8024065	Identifier	espdma_memory_write		8023012	0					
ANR	8024066	Argument	espdma		8023012	4					
ANR	8024067	Identifier	espdma		8023012	0					
ANR	8024068	Argument	* espdma_irq		8023012	5					
ANR	8024069	UnaryOperationExpression	* espdma_irq		8023012	0					
ANR	8024070	UnaryOperator	*		8023012	0					
ANR	8024071	Identifier	espdma_irq		8023012	1					
ANR	8024072	Argument	esp_reset		8023012	6					
ANR	8024073	Identifier	esp_reset		8023012	0					
ANR	8024074	ForStatement	for ( i = 0 ; i < ESP_MAX_DEVS ; i ++ )		8023012	107					
ANR	8024075	ForInit	i = 0 ;	333:9:6666:6671	8023012	0	True				
ANR	8024076	AssignmentExpression	i = 0		8023012	0		=			
ANR	8024077	Identifier	i		8023012	0					
ANR	8024078	PrimaryExpression	0		8023012	1					
ANR	8024079	Condition	i < ESP_MAX_DEVS	333:16:6673:6688	8023012	1	True				
ANR	8024080	RelationalExpression	i < ESP_MAX_DEVS		8023012	0		<			
ANR	8024081	Identifier	i		8023012	0					
ANR	8024082	Identifier	ESP_MAX_DEVS		8023012	1					
ANR	8024083	PostIncDecOperationExpression	i ++	333:34:6691:6693	8023012	2	True				
ANR	8024084	Identifier	i		8023012	0					
ANR	8024085	IncDec	++		8023012	1					
ANR	8024086	CompoundStatement		321:39:6352:6352	8023012	3					
ANR	8024087	ExpressionStatement	"drive_index = drive_get_index ( IF_SCSI , 0 , i )"	335:8:6707:6751	8023012	0	True				
ANR	8024088	AssignmentExpression	"drive_index = drive_get_index ( IF_SCSI , 0 , i )"		8023012	0		=			
ANR	8024089	Identifier	drive_index		8023012	0					
ANR	8024090	CallExpression	"drive_get_index ( IF_SCSI , 0 , i )"		8023012	1					
ANR	8024091	Callee	drive_get_index		8023012	0					
ANR	8024092	Identifier	drive_get_index		8023012	0					
ANR	8024093	ArgumentList	IF_SCSI		8023012	1					
ANR	8024094	Argument	IF_SCSI		8023012	0					
ANR	8024095	Identifier	IF_SCSI		8023012	0					
ANR	8024096	Argument	0		8023012	1					
ANR	8024097	PrimaryExpression	0		8023012	0					
ANR	8024098	Argument	i		8023012	2					
ANR	8024099	Identifier	i		8023012	0					
ANR	8024100	IfStatement	if ( drive_index == - 1 )		8023012	1					
ANR	8024101	Condition	drive_index == - 1	337:12:6766:6782	8023012	0	True				
ANR	8024102	EqualityExpression	drive_index == - 1		8023012	0		==			
ANR	8024103	Identifier	drive_index		8023012	0					
ANR	8024104	UnaryOperationExpression	- 1		8023012	1					
ANR	8024105	UnaryOperator	-		8023012	0					
ANR	8024106	PrimaryExpression	1		8023012	1					
ANR	8024107	ContinueStatement	continue ;	339:12:6798:6806	8023012	1	True				
ANR	8024108	ExpressionStatement	"esp_scsi_attach ( main_esp , drives_table [ drive_index ] . bdrv , i )"	341:8:6817:6877	8023012	2	True				
ANR	8024109	CallExpression	"esp_scsi_attach ( main_esp , drives_table [ drive_index ] . bdrv , i )"		8023012	0					
ANR	8024110	Callee	esp_scsi_attach		8023012	0					
ANR	8024111	Identifier	esp_scsi_attach		8023012	0					
ANR	8024112	ArgumentList	main_esp		8023012	1					
ANR	8024113	Argument	main_esp		8023012	0					
ANR	8024114	Identifier	main_esp		8023012	0					
ANR	8024115	Argument	drives_table [ drive_index ] . bdrv		8023012	1					
ANR	8024116	MemberAccess	drives_table [ drive_index ] . bdrv		8023012	0					
ANR	8024117	ArrayIndexing	drives_table [ drive_index ]		8023012	0					
ANR	8024118	Identifier	drives_table		8023012	0					
ANR	8024119	Identifier	drive_index		8023012	1					
ANR	8024120	Identifier	bdrv		8023012	1					
ANR	8024121	Argument	i		8023012	2					
ANR	8024122	Identifier	i		8023012	0					
ANR	8024123	IfStatement	if ( hwdef -> cs_base )		8023012	108					
ANR	8024124	Condition	hwdef -> cs_base	347:8:6897:6910	8023012	0	True				
ANR	8024125	PtrMemberAccess	hwdef -> cs_base		8023012	0					
ANR	8024126	Identifier	hwdef		8023012	0					
ANR	8024127	Identifier	cs_base		8023012	1					
ANR	8024128	ExpressionStatement	"cs_init ( hwdef -> cs_base , hwdef -> cs_irq , slavio_intctl )"	349:8:6922:6975	8023012	1	True				
ANR	8024129	CallExpression	"cs_init ( hwdef -> cs_base , hwdef -> cs_irq , slavio_intctl )"		8023012	0					
ANR	8024130	Callee	cs_init		8023012	0					
ANR	8024131	Identifier	cs_init		8023012	0					
ANR	8024132	ArgumentList	hwdef -> cs_base		8023012	1					
ANR	8024133	Argument	hwdef -> cs_base		8023012	0					
ANR	8024134	PtrMemberAccess	hwdef -> cs_base		8023012	0					
ANR	8024135	Identifier	hwdef		8023012	0					
ANR	8024136	Identifier	cs_base		8023012	1					
ANR	8024137	Argument	hwdef -> cs_irq		8023012	1					
ANR	8024138	PtrMemberAccess	hwdef -> cs_irq		8023012	0					
ANR	8024139	Identifier	hwdef		8023012	0					
ANR	8024140	Identifier	cs_irq		8023012	1					
ANR	8024141	Argument	slavio_intctl		8023012	2					
ANR	8024142	Identifier	slavio_intctl		8023012	0					
ANR	8024143	ExpressionStatement	"kernel_size = sun4m_load_kernel ( kernel_filename , initrd_filename , RAM_size )"	353:4:6984:7096	8023012	109	True				
ANR	8024144	AssignmentExpression	"kernel_size = sun4m_load_kernel ( kernel_filename , initrd_filename , RAM_size )"		8023012	0		=			
ANR	8024145	Identifier	kernel_size		8023012	0					
ANR	8024146	CallExpression	"sun4m_load_kernel ( kernel_filename , initrd_filename , RAM_size )"		8023012	1					
ANR	8024147	Callee	sun4m_load_kernel		8023012	0					
ANR	8024148	Identifier	sun4m_load_kernel		8023012	0					
ANR	8024149	ArgumentList	kernel_filename		8023012	1					
ANR	8024150	Argument	kernel_filename		8023012	0					
ANR	8024151	Identifier	kernel_filename		8023012	0					
ANR	8024152	Argument	initrd_filename		8023012	1					
ANR	8024153	Identifier	initrd_filename		8023012	0					
ANR	8024154	Argument	RAM_size		8023012	2					
ANR	8024155	Identifier	RAM_size		8023012	0					
ANR	8024156	ExpressionStatement	"nvram_init ( nvram , ( uint8_t * ) & nd_table [ 0 ] . macaddr , kernel_cmdline , boot_device , RAM_size , kernel_size , graphic_width , graphic_height , graphic_depth , hwdef -> nvram_machine_id , ""Sun4m"" )"	359:4:7105:7335	8023012	110	True				
ANR	8024157	CallExpression	"nvram_init ( nvram , ( uint8_t * ) & nd_table [ 0 ] . macaddr , kernel_cmdline , boot_device , RAM_size , kernel_size , graphic_width , graphic_height , graphic_depth , hwdef -> nvram_machine_id , ""Sun4m"" )"		8023012	0					
ANR	8024158	Callee	nvram_init		8023012	0					
ANR	8024159	Identifier	nvram_init		8023012	0					
ANR	8024160	ArgumentList	nvram		8023012	1					
ANR	8024161	Argument	nvram		8023012	0					
ANR	8024162	Identifier	nvram		8023012	0					
ANR	8024163	Argument	( uint8_t * ) & nd_table [ 0 ] . macaddr		8023012	1					
ANR	8024164	CastExpression	( uint8_t * ) & nd_table [ 0 ] . macaddr		8023012	0					
ANR	8024165	CastTarget	uint8_t *		8023012	0					
ANR	8024166	UnaryOperationExpression	& nd_table [ 0 ] . macaddr		8023012	1					
ANR	8024167	UnaryOperator	&		8023012	0					
ANR	8024168	MemberAccess	nd_table [ 0 ] . macaddr		8023012	1					
ANR	8024169	ArrayIndexing	nd_table [ 0 ]		8023012	0					
ANR	8024170	Identifier	nd_table		8023012	0					
ANR	8024171	PrimaryExpression	0		8023012	1					
ANR	8024172	Identifier	macaddr		8023012	1					
ANR	8024173	Argument	kernel_cmdline		8023012	2					
ANR	8024174	Identifier	kernel_cmdline		8023012	0					
ANR	8024175	Argument	boot_device		8023012	3					
ANR	8024176	Identifier	boot_device		8023012	0					
ANR	8024177	Argument	RAM_size		8023012	4					
ANR	8024178	Identifier	RAM_size		8023012	0					
ANR	8024179	Argument	kernel_size		8023012	5					
ANR	8024180	Identifier	kernel_size		8023012	0					
ANR	8024181	Argument	graphic_width		8023012	6					
ANR	8024182	Identifier	graphic_width		8023012	0					
ANR	8024183	Argument	graphic_height		8023012	7					
ANR	8024184	Identifier	graphic_height		8023012	0					
ANR	8024185	Argument	graphic_depth		8023012	8					
ANR	8024186	Identifier	graphic_depth		8023012	0					
ANR	8024187	Argument	hwdef -> nvram_machine_id		8023012	9					
ANR	8024188	PtrMemberAccess	hwdef -> nvram_machine_id		8023012	0					
ANR	8024189	Identifier	hwdef		8023012	0					
ANR	8024190	Identifier	nvram_machine_id		8023012	1					
ANR	8024191	Argument	"""Sun4m"""		8023012	10					
ANR	8024192	PrimaryExpression	"""Sun4m"""		8023012	0					
ANR	8024193	IfStatement	if ( hwdef -> ecc_base )		8023012	111					
ANR	8024194	Condition	hwdef -> ecc_base	369:8:7348:7362	8023012	0	True				
ANR	8024195	PtrMemberAccess	hwdef -> ecc_base		8023012	0					
ANR	8024196	Identifier	hwdef		8023012	0					
ANR	8024197	Identifier	ecc_base		8023012	1					
ANR	8024198	ExpressionStatement	"ecc_init ( hwdef -> ecc_base , slavio_irq [ hwdef -> ecc_irq ] , hwdef -> ecc_version )"	371:8:7374:7465	8023012	1	True				
ANR	8024199	CallExpression	"ecc_init ( hwdef -> ecc_base , slavio_irq [ hwdef -> ecc_irq ] , hwdef -> ecc_version )"		8023012	0					
ANR	8024200	Callee	ecc_init		8023012	0					
ANR	8024201	Identifier	ecc_init		8023012	0					
ANR	8024202	ArgumentList	hwdef -> ecc_base		8023012	1					
ANR	8024203	Argument	hwdef -> ecc_base		8023012	0					
ANR	8024204	PtrMemberAccess	hwdef -> ecc_base		8023012	0					
ANR	8024205	Identifier	hwdef		8023012	0					
ANR	8024206	Identifier	ecc_base		8023012	1					
ANR	8024207	Argument	slavio_irq [ hwdef -> ecc_irq ]		8023012	1					
ANR	8024208	ArrayIndexing	slavio_irq [ hwdef -> ecc_irq ]		8023012	0					
ANR	8024209	Identifier	slavio_irq		8023012	0					
ANR	8024210	PtrMemberAccess	hwdef -> ecc_irq		8023012	1					
ANR	8024211	Identifier	hwdef		8023012	0					
ANR	8024212	Identifier	ecc_irq		8023012	1					
ANR	8024213	Argument	hwdef -> ecc_version		8023012	2					
ANR	8024214	PtrMemberAccess	hwdef -> ecc_version		8023012	0					
ANR	8024215	Identifier	hwdef		8023012	0					
ANR	8024216	Identifier	ecc_version		8023012	1					
ANR	8024217	ExpressionStatement	"fw_cfg = fw_cfg_init ( 0 , 0 , CFG_ADDR , CFG_ADDR + 2 )"	377:4:7474:7524	8023012	112	True				
ANR	8024218	AssignmentExpression	"fw_cfg = fw_cfg_init ( 0 , 0 , CFG_ADDR , CFG_ADDR + 2 )"		8023012	0		=			
ANR	8024219	Identifier	fw_cfg		8023012	0					
ANR	8024220	CallExpression	"fw_cfg_init ( 0 , 0 , CFG_ADDR , CFG_ADDR + 2 )"		8023012	1					
ANR	8024221	Callee	fw_cfg_init		8023012	0					
ANR	8024222	Identifier	fw_cfg_init		8023012	0					
ANR	8024223	ArgumentList	0		8023012	1					
ANR	8024224	Argument	0		8023012	0					
ANR	8024225	PrimaryExpression	0		8023012	0					
ANR	8024226	Argument	0		8023012	1					
ANR	8024227	PrimaryExpression	0		8023012	0					
ANR	8024228	Argument	CFG_ADDR		8023012	2					
ANR	8024229	Identifier	CFG_ADDR		8023012	0					
ANR	8024230	Argument	CFG_ADDR + 2		8023012	3					
ANR	8024231	AdditiveExpression	CFG_ADDR + 2		8023012	0		+			
ANR	8024232	Identifier	CFG_ADDR		8023012	0					
ANR	8024233	PrimaryExpression	2		8023012	1					
ANR	8024234	ExpressionStatement	"fw_cfg_add_i32 ( fw_cfg , FW_CFG_ID , 1 )"	379:4:7531:7567	8023012	113	True				
ANR	8024235	CallExpression	"fw_cfg_add_i32 ( fw_cfg , FW_CFG_ID , 1 )"		8023012	0					
ANR	8024236	Callee	fw_cfg_add_i32		8023012	0					
ANR	8024237	Identifier	fw_cfg_add_i32		8023012	0					
ANR	8024238	ArgumentList	fw_cfg		8023012	1					
ANR	8024239	Argument	fw_cfg		8023012	0					
ANR	8024240	Identifier	fw_cfg		8023012	0					
ANR	8024241	Argument	FW_CFG_ID		8023012	1					
ANR	8024242	Identifier	FW_CFG_ID		8023012	0					
ANR	8024243	Argument	1		8023012	2					
ANR	8024244	PrimaryExpression	1		8023012	0					
ANR	8024245	ExpressionStatement	"fw_cfg_add_i64 ( fw_cfg , FW_CFG_RAM_SIZE , ( uint64_t ) ram_size )"	381:4:7574:7633	8023012	114	True				
ANR	8024246	CallExpression	"fw_cfg_add_i64 ( fw_cfg , FW_CFG_RAM_SIZE , ( uint64_t ) ram_size )"		8023012	0					
ANR	8024247	Callee	fw_cfg_add_i64		8023012	0					
ANR	8024248	Identifier	fw_cfg_add_i64		8023012	0					
ANR	8024249	ArgumentList	fw_cfg		8023012	1					
ANR	8024250	Argument	fw_cfg		8023012	0					
ANR	8024251	Identifier	fw_cfg		8023012	0					
ANR	8024252	Argument	FW_CFG_RAM_SIZE		8023012	1					
ANR	8024253	Identifier	FW_CFG_RAM_SIZE		8023012	0					
ANR	8024254	Argument	( uint64_t ) ram_size		8023012	2					
ANR	8024255	CastExpression	( uint64_t ) ram_size		8023012	0					
ANR	8024256	CastTarget	uint64_t		8023012	0					
ANR	8024257	Identifier	ram_size		8023012	1					
ANR	8024258	ExpressionStatement	"fw_cfg_add_i16 ( fw_cfg , FW_CFG_MACHINE_ID , hwdef -> machine_id )"	383:4:7640:7700	8023012	115	True				
ANR	8024259	CallExpression	"fw_cfg_add_i16 ( fw_cfg , FW_CFG_MACHINE_ID , hwdef -> machine_id )"		8023012	0					
ANR	8024260	Callee	fw_cfg_add_i16		8023012	0					
ANR	8024261	Identifier	fw_cfg_add_i16		8023012	0					
ANR	8024262	ArgumentList	fw_cfg		8023012	1					
ANR	8024263	Argument	fw_cfg		8023012	0					
ANR	8024264	Identifier	fw_cfg		8023012	0					
ANR	8024265	Argument	FW_CFG_MACHINE_ID		8023012	1					
ANR	8024266	Identifier	FW_CFG_MACHINE_ID		8023012	0					
ANR	8024267	Argument	hwdef -> machine_id		8023012	2					
ANR	8024268	PtrMemberAccess	hwdef -> machine_id		8023012	0					
ANR	8024269	Identifier	hwdef		8023012	0					
ANR	8024270	Identifier	machine_id		8023012	1					
ANR	8024271	ExpressionStatement	"fw_cfg_add_i16 ( fw_cfg , FW_CFG_SUN4M_DEPTH , graphic_depth )"	385:4:7707:7764	8023012	116	True				
ANR	8024272	CallExpression	"fw_cfg_add_i16 ( fw_cfg , FW_CFG_SUN4M_DEPTH , graphic_depth )"		8023012	0					
ANR	8024273	Callee	fw_cfg_add_i16		8023012	0					
ANR	8024274	Identifier	fw_cfg_add_i16		8023012	0					
ANR	8024275	ArgumentList	fw_cfg		8023012	1					
ANR	8024276	Argument	fw_cfg		8023012	0					
ANR	8024277	Identifier	fw_cfg		8023012	0					
ANR	8024278	Argument	FW_CFG_SUN4M_DEPTH		8023012	1					
ANR	8024279	Identifier	FW_CFG_SUN4M_DEPTH		8023012	0					
ANR	8024280	Argument	graphic_depth		8023012	2					
ANR	8024281	Identifier	graphic_depth		8023012	0					
ANR	8024282	ReturnType	static void		8023012	1					
ANR	8024283	Identifier	sun4m_hw_init		8023012	2					
ANR	8024284	ParameterList	"const struct sun4m_hwdef * hwdef , ram_addr_t RAM_size , const char * boot_device , DisplayState * ds , const char * kernel_filename , const char * kernel_cmdline , const char * initrd_filename , const char * cpu_model"		8023012	3					
ANR	8024285	Parameter	const struct sun4m_hwdef * hwdef	1:26:26:56	8023012	0	True				
ANR	8024286	ParameterType	const struct sun4m_hwdef *		8023012	0					
ANR	8024287	Identifier	hwdef		8023012	1					
ANR	8024288	Parameter	ram_addr_t RAM_size	1:59:59:77	8023012	1	True				
ANR	8024289	ParameterType	ram_addr_t		8023012	0					
ANR	8024290	Identifier	RAM_size		8023012	1					
ANR	8024291	Parameter	const char * boot_device	3:26:107:129	8023012	2	True				
ANR	8024292	ParameterType	const char *		8023012	0					
ANR	8024293	Identifier	boot_device		8023012	1					
ANR	8024294	Parameter	DisplayState * ds	5:26:159:174	8023012	3	True				
ANR	8024295	ParameterType	DisplayState *		8023012	0					
ANR	8024296	Identifier	ds		8023012	1					
ANR	8024297	Parameter	const char * kernel_filename	5:44:177:203	8023012	4	True				
ANR	8024298	ParameterType	const char *		8023012	0					
ANR	8024299	Identifier	kernel_filename		8023012	1					
ANR	8024300	Parameter	const char * kernel_cmdline	7:26:233:258	8023012	5	True				
ANR	8024301	ParameterType	const char *		8023012	0					
ANR	8024302	Identifier	kernel_cmdline		8023012	1					
ANR	8024303	Parameter	const char * initrd_filename	9:26:288:314	8023012	6	True				
ANR	8024304	ParameterType	const char *		8023012	0					
ANR	8024305	Identifier	initrd_filename		8023012	1					
ANR	8024306	Parameter	const char * cpu_model	9:55:317:337	8023012	7	True				
ANR	8024307	ParameterType	const char *		8023012	0					
ANR	8024308	Identifier	cpu_model		8023012	1					
ANR	8024309	CFGEntryNode	ENTRY		8023012		True				
ANR	8024310	CFGExitNode	EXIT		8023012		True				
ANR	8024311	Symbol	* cpu_irqs		8023012						
ANR	8024312	Symbol	graphic_width		8023012						
ANR	8024313	Symbol	envs		8023012						
ANR	8024314	Symbol	hwdef -> slavio_base		8023012						
ANR	8024315	Symbol	IO_MEM_ROM		8023012						
ANR	8024316	Symbol	hwdef -> counter_base		8023012						
ANR	8024317	Symbol	drive_get_max_bus		8023012						
ANR	8024318	Symbol	drive_index		8023012						
ANR	8024319	Symbol	nvram		8023012						
ANR	8024320	Symbol	iommu		8023012						
ANR	8024321	Symbol	PROM_SIZE_MAX		8023012						
ANR	8024322	Symbol	* hwdef -> ecc_irq		8023012						
ANR	8024323	Symbol	fw_cfg_init		8023012						
ANR	8024324	Symbol	ledma_irq		8023012						
ANR	8024325	Symbol	esp_reset		8023012						
ANR	8024326	Symbol	dummy_cpu_set_irq		8023012						
ANR	8024327	Symbol	TARGET_PAGE_SIZE		8023012						
ANR	8024328	Symbol	hwdef -> machine_id		8023012						
ANR	8024329	Symbol	* slavio_irq		8023012						
ANR	8024330	Symbol	m48t59_init		8023012						
ANR	8024331	Symbol	fw_cfg		8023012						
ANR	8024332	Symbol	& fdc_tc		8023012						
ANR	8024333	Symbol	fdc_tc		8023012						
ANR	8024334	Symbol	hwdef -> default_cpu_model		8023012						
ANR	8024335	Symbol	sparc32_dma_init		8023012						
ANR	8024336	Symbol	bios_dir		8023012						
ANR	8024337	Symbol	graphic_depth		8023012						
ANR	8024338	Symbol	PROM_VADDR		8023012						
ANR	8024339	Symbol	phys_ram_base		8023012						
ANR	8024340	Symbol	hwdef -> max_mem		8023012						
ANR	8024341	Symbol	secondary_cpu_reset		8023012						
ANR	8024342	Symbol	ESP_MAX_DEVS		8023012						
ANR	8024343	Symbol	nd_table [ 0 ] . model		8023012						
ANR	8024344	Symbol	hwdef -> le_base		8023012						
ANR	8024345	Symbol	* hwdef -> fd_irq		8023012						
ANR	8024346	Symbol	& esp_reset		8023012						
ANR	8024347	Symbol	* ledma_irq		8023012						
ANR	8024348	Symbol	hwdef -> fd_irq		8023012						
ANR	8024349	Symbol	hwdef -> fd_base		8023012						
ANR	8024350	Symbol	MAX_CPUS		8023012						
ANR	8024351	Symbol	hwdef -> iommu_version		8023012						
ANR	8024352	Symbol	hwdef -> tcx_base		8023012						
ANR	8024353	Symbol	cpu_model		8023012						
ANR	8024354	Symbol	load_image_targphys		8023012						
ANR	8024355	Symbol	hwdef -> dma_base		8023012						
ANR	8024356	Symbol	nd_table		8023012						
ANR	8024357	Symbol	tcx_offset		8023012						
ANR	8024358	Symbol	hwdef -> vram_size		8023012						
ANR	8024359	Symbol	slavio_irq		8023012						
ANR	8024360	Symbol	* drive_index		8023012						
ANR	8024361	Symbol	hwdef -> nvram_base		8023012						
ANR	8024362	Symbol	* hwdef -> ser_irq		8023012						
ANR	8024363	Symbol	hwdef -> ecc_base		8023012						
ANR	8024364	Symbol	esp_init		8023012						
ANR	8024365	Symbol	hwdef -> me_irq		8023012						
ANR	8024366	Symbol	hwdef		8023012						
ANR	8024367	Symbol	hwdef -> aux1_base		8023012						
ANR	8024368	Symbol	* fd		8023012						
ANR	8024369	Symbol	CFG_ADDR		8023012						
ANR	8024370	Symbol	i		8023012						
ANR	8024371	Symbol	drive_get_index		8023012						
ANR	8024372	Symbol	qemu_ram_alloc		8023012						
ANR	8024373	Symbol	qemu_allocate_irqs		8023012						
ANR	8024374	Symbol	* hwdef -> me_irq		8023012						
ANR	8024375	Symbol	drives_table [ drive_index ] . bdrv		8023012						
ANR	8024376	Symbol	espdma_memory_write		8023012						
ANR	8024377	Symbol	le_reset		8023012						
ANR	8024378	Symbol	espdma_irq		8023012						
ANR	8024379	Symbol	* hwdef		8023012						
ANR	8024380	Symbol	ram_size		8023012						
ANR	8024381	Symbol	buf		8023012						
ANR	8024382	Symbol	main_esp		8023012						
ANR	8024383	Symbol	hwdef -> esp_irq		8023012						
ANR	8024384	Symbol	kernel_filename		8023012						
ANR	8024385	Symbol	serial_hds		8023012						
ANR	8024386	Symbol	sun4m_load_kernel		8023012						
ANR	8024387	Symbol	hwdef -> apc_base		8023012						
ANR	8024388	Symbol	espdma_memory_read		8023012						
ANR	8024389	Symbol	hwdef -> nvram_machine_id		8023012						
ANR	8024390	Symbol	env -> halted		8023012						
ANR	8024391	Symbol	* hwdef -> ms_kb_irq		8023012						
ANR	8024392	Symbol	& nd_table [ 0 ] . macaddr		8023012						
ANR	8024393	Symbol	ds		8023012						
ANR	8024394	Symbol	slavio_intctl		8023012						
ANR	8024395	Symbol	* hwdef -> esp_irq		8023012						
ANR	8024396	Symbol	cpu_halt		8023012						
ANR	8024397	Symbol	* * hwdef		8023012						
ANR	8024398	Symbol	hwdef -> iommu_base		8023012						
ANR	8024399	Symbol	kernel_size		8023012						
ANR	8024400	Symbol	IF_FLOPPY		8023012						
ANR	8024401	Symbol	ret		8023012						
ANR	8024402	Symbol	strcmp		8023012						
ANR	8024403	Symbol	smp_cpus		8023012						
ANR	8024404	Symbol	cpu_irqs		8023012						
ANR	8024405	Symbol	NULL		8023012						
ANR	8024406	Symbol	prom_offset		8023012						
ANR	8024407	Symbol	FW_CFG_MACHINE_ID		8023012						
ANR	8024408	Symbol	iommu_init		8023012						
ANR	8024409	Symbol	cpu_init		8023012						
ANR	8024410	Symbol	hwdef -> idreg_base		8023012						
ANR	8024411	Symbol	* env		8023012						
ANR	8024412	Symbol	* hwdef -> clock1_irq		8023012						
ANR	8024413	Symbol	hwdef -> ser_irq		8023012						
ANR	8024414	Symbol	stderr		8023012						
ANR	8024415	Symbol	FW_CFG_SUN4M_DEPTH		8023012						
ANR	8024416	Symbol	idreg_data		8023012						
ANR	8024417	Symbol	cpu_halt_signal		8023012						
ANR	8024418	Symbol	hwdef -> esp_base		8023012						
ANR	8024419	Symbol	boot_device		8023012						
ANR	8024420	Symbol	nographic		8023012						
ANR	8024421	Symbol	env -> prom_addr		8023012						
ANR	8024422	Symbol	& espdma_irq		8023012						
ANR	8024423	Symbol	fd		8023012						
ANR	8024424	Symbol	load_elf		8023012						
ANR	8024425	Symbol	* envs		8023012						
ANR	8024426	Symbol	slavio_cpu_irq		8023012						
ANR	8024427	Symbol	PROM_FILENAME		8023012						
ANR	8024428	Symbol	kernel_cmdline		8023012						
ANR	8024429	Symbol	hwdef -> cs_irq		8023012						
ANR	8024430	Symbol	RAM_size		8023012						
ANR	8024431	Symbol	TARGET_PAGE_MASK		8023012						
ANR	8024432	Symbol	graphic_height		8023012						
ANR	8024433	Symbol	hwdef -> nvram_size		8023012						
ANR	8024434	Symbol	cpu_set_irq		8023012						
ANR	8024435	Symbol	* nd_table		8023012						
ANR	8024436	Symbol	initrd_filename		8023012						
ANR	8024437	Symbol	hwdef -> clock1_irq		8023012						
ANR	8024438	Symbol	main_cpu_reset		8023012						
ANR	8024439	Symbol	hwdef -> ms_kb_base		8023012						
ANR	8024440	Symbol	FW_CFG_RAM_SIZE		8023012						
ANR	8024441	Symbol	bios_name		8023012						
ANR	8024442	Symbol	hwdef -> aux2_base		8023012						
ANR	8024443	Symbol	espdma		8023012						
ANR	8024444	Symbol	* cpu_halt		8023012						
ANR	8024445	Symbol	hwdef -> cs_base		8023012						
ANR	8024446	Symbol	FW_CFG_ID		8023012						
ANR	8024447	Symbol	idreg_offset		8023012						
ANR	8024448	Symbol	MAX_PILS		8023012						
ANR	8024449	Symbol	ESCC_CLOCK		8023012						
ANR	8024450	Symbol	slavio_misc		8023012						
ANR	8024451	Symbol	hwdef -> ms_kb_irq		8023012						
ANR	8024452	Symbol	env		8023012						
ANR	8024453	Symbol	slavio_misc_init		8023012						
ANR	8024454	Symbol	drives_table		8023012						
ANR	8024455	Symbol	hwdef -> serial_base		8023012						
ANR	8024456	Symbol	* serial_hds		8023012						
ANR	8024457	Symbol	hwdef -> ecc_irq		8023012						
ANR	8024458	Symbol	hwdef -> ecc_version		8023012						
ANR	8024459	Symbol	* i		8023012						
ANR	8024460	Symbol	IF_SCSI		8023012						
ANR	8024461	Symbol	* drives_table		8023012						
ANR	8024462	Symbol	* espdma_irq		8023012						
ANR	8024463	Symbol	ram_offset		8023012						
ANR	8024464	Symbol	ledma		8023012						
