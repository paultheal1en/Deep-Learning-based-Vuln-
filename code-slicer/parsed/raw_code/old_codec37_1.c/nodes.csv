command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6133307	File	/home/p4ultr4n/workplace/ReVeal/raw_code/old_codec37_1.c								
ANR	6133308	Function	old_codec37	1:0:0:5995							
ANR	6133309	FunctionDef	"old_codec37 (SANMVideoContext * ctx , int top , int left , int width , int height)"		6133308	0					
ANR	6133310	CompoundStatement		5:0:113:5995	6133308	0					
ANR	6133311	IdentifierDeclStatement	int stride = ctx -> pitch ;	7:4:120:143	6133308	0	True				
ANR	6133312	IdentifierDecl	stride = ctx -> pitch		6133308	0					
ANR	6133313	IdentifierDeclType	int		6133308	0					
ANR	6133314	Identifier	stride		6133308	1					
ANR	6133315	AssignmentExpression	stride = ctx -> pitch		6133308	2		=			
ANR	6133316	Identifier	stride		6133308	0					
ANR	6133317	PtrMemberAccess	ctx -> pitch		6133308	1					
ANR	6133318	Identifier	ctx		6133308	0					
ANR	6133319	Identifier	pitch		6133308	1					
ANR	6133320	IdentifierDeclStatement	"int i , j , k , t ;"	9:4:150:164	6133308	1	True				
ANR	6133321	IdentifierDecl	i		6133308	0					
ANR	6133322	IdentifierDeclType	int		6133308	0					
ANR	6133323	Identifier	i		6133308	1					
ANR	6133324	IdentifierDecl	j		6133308	1					
ANR	6133325	IdentifierDeclType	int		6133308	0					
ANR	6133326	Identifier	j		6133308	1					
ANR	6133327	IdentifierDecl	k		6133308	2					
ANR	6133328	IdentifierDeclType	int		6133308	0					
ANR	6133329	Identifier	k		6133308	1					
ANR	6133330	IdentifierDecl	t		6133308	3					
ANR	6133331	IdentifierDeclType	int		6133308	0					
ANR	6133332	Identifier	t		6133308	1					
ANR	6133333	IdentifierDeclStatement	int skip_run = 0 ;	11:4:171:187	6133308	2	True				
ANR	6133334	IdentifierDecl	skip_run = 0		6133308	0					
ANR	6133335	IdentifierDeclType	int		6133308	0					
ANR	6133336	Identifier	skip_run		6133308	1					
ANR	6133337	AssignmentExpression	skip_run = 0		6133308	2		=			
ANR	6133338	Identifier	skip_run		6133308	0					
ANR	6133339	PrimaryExpression	0		6133308	1					
ANR	6133340	IdentifierDeclStatement	"int compr , mvoff , seq , flags ;"	13:4:194:222	6133308	3	True				
ANR	6133341	IdentifierDecl	compr		6133308	0					
ANR	6133342	IdentifierDeclType	int		6133308	0					
ANR	6133343	Identifier	compr		6133308	1					
ANR	6133344	IdentifierDecl	mvoff		6133308	1					
ANR	6133345	IdentifierDeclType	int		6133308	0					
ANR	6133346	Identifier	mvoff		6133308	1					
ANR	6133347	IdentifierDecl	seq		6133308	2					
ANR	6133348	IdentifierDeclType	int		6133308	0					
ANR	6133349	Identifier	seq		6133308	1					
ANR	6133350	IdentifierDecl	flags		6133308	3					
ANR	6133351	IdentifierDeclType	int		6133308	0					
ANR	6133352	Identifier	flags		6133308	1					
ANR	6133353	IdentifierDeclStatement	uint32_t decoded_size ;	15:4:229:250	6133308	4	True				
ANR	6133354	IdentifierDecl	decoded_size		6133308	0					
ANR	6133355	IdentifierDeclType	uint32_t		6133308	0					
ANR	6133356	Identifier	decoded_size		6133308	1					
ANR	6133357	IdentifierDeclStatement	"uint8_t * dst , * prev ;"	17:4:257:276	6133308	5	True				
ANR	6133358	IdentifierDecl	* dst		6133308	0					
ANR	6133359	IdentifierDeclType	uint8_t *		6133308	0					
ANR	6133360	Identifier	dst		6133308	1					
ANR	6133361	IdentifierDecl	* prev		6133308	1					
ANR	6133362	IdentifierDeclType	uint8_t *		6133308	0					
ANR	6133363	Identifier	prev		6133308	1					
ANR	6133364	ExpressionStatement	compr = bytestream2_get_byte ( & ctx -> gb )	21:4:285:330	6133308	6	True				
ANR	6133365	AssignmentExpression	compr = bytestream2_get_byte ( & ctx -> gb )		6133308	0		=			
ANR	6133366	Identifier	compr		6133308	0					
ANR	6133367	CallExpression	bytestream2_get_byte ( & ctx -> gb )		6133308	1					
ANR	6133368	Callee	bytestream2_get_byte		6133308	0					
ANR	6133369	Identifier	bytestream2_get_byte		6133308	0					
ANR	6133370	ArgumentList	& ctx -> gb		6133308	1					
ANR	6133371	Argument	& ctx -> gb		6133308	0					
ANR	6133372	UnaryOperationExpression	& ctx -> gb		6133308	0					
ANR	6133373	UnaryOperator	&		6133308	0					
ANR	6133374	PtrMemberAccess	ctx -> gb		6133308	1					
ANR	6133375	Identifier	ctx		6133308	0					
ANR	6133376	Identifier	gb		6133308	1					
ANR	6133377	ExpressionStatement	mvoff = bytestream2_get_byte ( & ctx -> gb )	23:4:337:382	6133308	7	True				
ANR	6133378	AssignmentExpression	mvoff = bytestream2_get_byte ( & ctx -> gb )		6133308	0		=			
ANR	6133379	Identifier	mvoff		6133308	0					
ANR	6133380	CallExpression	bytestream2_get_byte ( & ctx -> gb )		6133308	1					
ANR	6133381	Callee	bytestream2_get_byte		6133308	0					
ANR	6133382	Identifier	bytestream2_get_byte		6133308	0					
ANR	6133383	ArgumentList	& ctx -> gb		6133308	1					
ANR	6133384	Argument	& ctx -> gb		6133308	0					
ANR	6133385	UnaryOperationExpression	& ctx -> gb		6133308	0					
ANR	6133386	UnaryOperator	&		6133308	0					
ANR	6133387	PtrMemberAccess	ctx -> gb		6133308	1					
ANR	6133388	Identifier	ctx		6133308	0					
ANR	6133389	Identifier	gb		6133308	1					
ANR	6133390	ExpressionStatement	seq = bytestream2_get_le16 ( & ctx -> gb )	25:4:389:434	6133308	8	True				
ANR	6133391	AssignmentExpression	seq = bytestream2_get_le16 ( & ctx -> gb )		6133308	0		=			
ANR	6133392	Identifier	seq		6133308	0					
ANR	6133393	CallExpression	bytestream2_get_le16 ( & ctx -> gb )		6133308	1					
ANR	6133394	Callee	bytestream2_get_le16		6133308	0					
ANR	6133395	Identifier	bytestream2_get_le16		6133308	0					
ANR	6133396	ArgumentList	& ctx -> gb		6133308	1					
ANR	6133397	Argument	& ctx -> gb		6133308	0					
ANR	6133398	UnaryOperationExpression	& ctx -> gb		6133308	0					
ANR	6133399	UnaryOperator	&		6133308	0					
ANR	6133400	PtrMemberAccess	ctx -> gb		6133308	1					
ANR	6133401	Identifier	ctx		6133308	0					
ANR	6133402	Identifier	gb		6133308	1					
ANR	6133403	ExpressionStatement	decoded_size = bytestream2_get_le32 ( & ctx -> gb )	27:4:441:486	6133308	9	True				
ANR	6133404	AssignmentExpression	decoded_size = bytestream2_get_le32 ( & ctx -> gb )		6133308	0		=			
ANR	6133405	Identifier	decoded_size		6133308	0					
ANR	6133406	CallExpression	bytestream2_get_le32 ( & ctx -> gb )		6133308	1					
ANR	6133407	Callee	bytestream2_get_le32		6133308	0					
ANR	6133408	Identifier	bytestream2_get_le32		6133308	0					
ANR	6133409	ArgumentList	& ctx -> gb		6133308	1					
ANR	6133410	Argument	& ctx -> gb		6133308	0					
ANR	6133411	UnaryOperationExpression	& ctx -> gb		6133308	0					
ANR	6133412	UnaryOperator	&		6133308	0					
ANR	6133413	PtrMemberAccess	ctx -> gb		6133308	1					
ANR	6133414	Identifier	ctx		6133308	0					
ANR	6133415	Identifier	gb		6133308	1					
ANR	6133416	ExpressionStatement	"bytestream2_skip ( & ctx -> gb , 4 )"	29:4:493:522	6133308	10	True				
ANR	6133417	CallExpression	"bytestream2_skip ( & ctx -> gb , 4 )"		6133308	0					
ANR	6133418	Callee	bytestream2_skip		6133308	0					
ANR	6133419	Identifier	bytestream2_skip		6133308	0					
ANR	6133420	ArgumentList	& ctx -> gb		6133308	1					
ANR	6133421	Argument	& ctx -> gb		6133308	0					
ANR	6133422	UnaryOperationExpression	& ctx -> gb		6133308	0					
ANR	6133423	UnaryOperator	&		6133308	0					
ANR	6133424	PtrMemberAccess	ctx -> gb		6133308	1					
ANR	6133425	Identifier	ctx		6133308	0					
ANR	6133426	Identifier	gb		6133308	1					
ANR	6133427	Argument	4		6133308	1					
ANR	6133428	PrimaryExpression	4		6133308	0					
ANR	6133429	ExpressionStatement	flags = bytestream2_get_byte ( & ctx -> gb )	31:4:529:574	6133308	11	True				
ANR	6133430	AssignmentExpression	flags = bytestream2_get_byte ( & ctx -> gb )		6133308	0		=			
ANR	6133431	Identifier	flags		6133308	0					
ANR	6133432	CallExpression	bytestream2_get_byte ( & ctx -> gb )		6133308	1					
ANR	6133433	Callee	bytestream2_get_byte		6133308	0					
ANR	6133434	Identifier	bytestream2_get_byte		6133308	0					
ANR	6133435	ArgumentList	& ctx -> gb		6133308	1					
ANR	6133436	Argument	& ctx -> gb		6133308	0					
ANR	6133437	UnaryOperationExpression	& ctx -> gb		6133308	0					
ANR	6133438	UnaryOperator	&		6133308	0					
ANR	6133439	PtrMemberAccess	ctx -> gb		6133308	1					
ANR	6133440	Identifier	ctx		6133308	0					
ANR	6133441	Identifier	gb		6133308	1					
ANR	6133442	ExpressionStatement	"bytestream2_skip ( & ctx -> gb , 3 )"	33:4:581:610	6133308	12	True				
ANR	6133443	CallExpression	"bytestream2_skip ( & ctx -> gb , 3 )"		6133308	0					
ANR	6133444	Callee	bytestream2_skip		6133308	0					
ANR	6133445	Identifier	bytestream2_skip		6133308	0					
ANR	6133446	ArgumentList	& ctx -> gb		6133308	1					
ANR	6133447	Argument	& ctx -> gb		6133308	0					
ANR	6133448	UnaryOperationExpression	& ctx -> gb		6133308	0					
ANR	6133449	UnaryOperator	&		6133308	0					
ANR	6133450	PtrMemberAccess	ctx -> gb		6133308	1					
ANR	6133451	Identifier	ctx		6133308	0					
ANR	6133452	Identifier	gb		6133308	1					
ANR	6133453	Argument	3		6133308	1					
ANR	6133454	PrimaryExpression	3		6133308	0					
ANR	6133455	IfStatement	if ( decoded_size > height * stride - left - top * stride )		6133308	13					
ANR	6133456	Condition	decoded_size > height * stride - left - top * stride	37:8:623:674	6133308	0	True				
ANR	6133457	RelationalExpression	decoded_size > height * stride - left - top * stride		6133308	0		>			
ANR	6133458	Identifier	decoded_size		6133308	0					
ANR	6133459	AdditiveExpression	height * stride - left - top * stride		6133308	1		-			
ANR	6133460	MultiplicativeExpression	height * stride		6133308	0		*			
ANR	6133461	Identifier	height		6133308	0					
ANR	6133462	Identifier	stride		6133308	1					
ANR	6133463	AdditiveExpression	left - top * stride		6133308	1		-			
ANR	6133464	Identifier	left		6133308	0					
ANR	6133465	MultiplicativeExpression	top * stride		6133308	1		*			
ANR	6133466	Identifier	top		6133308	0					
ANR	6133467	Identifier	stride		6133308	1					
ANR	6133468	CompoundStatement		33:62:563:563	6133308	1					
ANR	6133469	ExpressionStatement	decoded_size = height * stride - left - top * stride	39:8:688:740	6133308	0	True				
ANR	6133470	AssignmentExpression	decoded_size = height * stride - left - top * stride		6133308	0		=			
ANR	6133471	Identifier	decoded_size		6133308	0					
ANR	6133472	AdditiveExpression	height * stride - left - top * stride		6133308	1		-			
ANR	6133473	MultiplicativeExpression	height * stride		6133308	0		*			
ANR	6133474	Identifier	height		6133308	0					
ANR	6133475	Identifier	stride		6133308	1					
ANR	6133476	AdditiveExpression	left - top * stride		6133308	1		-			
ANR	6133477	Identifier	left		6133308	0					
ANR	6133478	MultiplicativeExpression	top * stride		6133308	1		*			
ANR	6133479	Identifier	top		6133308	0					
ANR	6133480	Identifier	stride		6133308	1					
ANR	6133481	ExpressionStatement	"av_log ( ctx -> avctx , AV_LOG_WARNING , ""decoded size is too large\\n"" )"	41:8:751:816	6133308	1	True				
ANR	6133482	CallExpression	"av_log ( ctx -> avctx , AV_LOG_WARNING , ""decoded size is too large\\n"" )"		6133308	0					
ANR	6133483	Callee	av_log		6133308	0					
ANR	6133484	Identifier	av_log		6133308	0					
ANR	6133485	ArgumentList	ctx -> avctx		6133308	1					
ANR	6133486	Argument	ctx -> avctx		6133308	0					
ANR	6133487	PtrMemberAccess	ctx -> avctx		6133308	0					
ANR	6133488	Identifier	ctx		6133308	0					
ANR	6133489	Identifier	avctx		6133308	1					
ANR	6133490	Argument	AV_LOG_WARNING		6133308	1					
ANR	6133491	Identifier	AV_LOG_WARNING		6133308	0					
ANR	6133492	Argument	"""decoded size is too large\\n"""		6133308	2					
ANR	6133493	PrimaryExpression	"""decoded size is too large\\n"""		6133308	0					
ANR	6133494	ExpressionStatement	ctx -> rotate_code = 0	47:4:832:852	6133308	14	True				
ANR	6133495	AssignmentExpression	ctx -> rotate_code = 0		6133308	0		=			
ANR	6133496	PtrMemberAccess	ctx -> rotate_code		6133308	0					
ANR	6133497	Identifier	ctx		6133308	0					
ANR	6133498	Identifier	rotate_code		6133308	1					
ANR	6133499	PrimaryExpression	0		6133308	1					
ANR	6133500	IfStatement	if ( ( ( seq & 1 ) || ! ( flags & 1 ) ) && ( compr && compr != 2 ) )		6133308	15					
ANR	6133501	Condition	( ( seq & 1 ) || ! ( flags & 1 ) ) && ( compr && compr != 2 )	51:8:865:916	6133308	0	True				
ANR	6133502	AndExpression	( ( seq & 1 ) || ! ( flags & 1 ) ) && ( compr && compr != 2 )		6133308	0		&&			
ANR	6133503	OrExpression	( seq & 1 ) || ! ( flags & 1 )		6133308	0		||			
ANR	6133504	BitAndExpression	seq & 1		6133308	0		&			
ANR	6133505	Identifier	seq		6133308	0					
ANR	6133506	PrimaryExpression	1		6133308	1					
ANR	6133507	UnaryOperationExpression	! ( flags & 1 )		6133308	1					
ANR	6133508	UnaryOperator	!		6133308	0					
ANR	6133509	BitAndExpression	flags & 1		6133308	1		&			
ANR	6133510	Identifier	flags		6133308	0					
ANR	6133511	PrimaryExpression	1		6133308	1					
ANR	6133512	AndExpression	compr && compr != 2		6133308	1		&&			
ANR	6133513	Identifier	compr		6133308	0					
ANR	6133514	EqualityExpression	compr != 2		6133308	1		!=			
ANR	6133515	Identifier	compr		6133308	0					
ANR	6133516	PrimaryExpression	2		6133308	1					
ANR	6133517	ExpressionStatement	"rotate_bufs ( ctx , 1 )"	53:8:928:947	6133308	1	True				
ANR	6133518	CallExpression	"rotate_bufs ( ctx , 1 )"		6133308	0					
ANR	6133519	Callee	rotate_bufs		6133308	0					
ANR	6133520	Identifier	rotate_bufs		6133308	0					
ANR	6133521	ArgumentList	ctx		6133308	1					
ANR	6133522	Argument	ctx		6133308	0					
ANR	6133523	Identifier	ctx		6133308	0					
ANR	6133524	Argument	1		6133308	1					
ANR	6133525	PrimaryExpression	1		6133308	0					
ANR	6133526	ExpressionStatement	dst = ( ( uint8_t * ) ctx -> frm0 ) + left + top * stride	57:4:956:1006	6133308	16	True				
ANR	6133527	AssignmentExpression	dst = ( ( uint8_t * ) ctx -> frm0 ) + left + top * stride		6133308	0		=			
ANR	6133528	Identifier	dst		6133308	0					
ANR	6133529	AdditiveExpression	( ( uint8_t * ) ctx -> frm0 ) + left + top * stride		6133308	1		+			
ANR	6133530	CastExpression	( uint8_t * ) ctx -> frm0		6133308	0					
ANR	6133531	CastTarget	uint8_t *		6133308	0					
ANR	6133532	PtrMemberAccess	ctx -> frm0		6133308	1					
ANR	6133533	Identifier	ctx		6133308	0					
ANR	6133534	Identifier	frm0		6133308	1					
ANR	6133535	AdditiveExpression	left + top * stride		6133308	1		+			
ANR	6133536	Identifier	left		6133308	0					
ANR	6133537	MultiplicativeExpression	top * stride		6133308	1		*			
ANR	6133538	Identifier	top		6133308	0					
ANR	6133539	Identifier	stride		6133308	1					
ANR	6133540	ExpressionStatement	prev = ( ( uint8_t * ) ctx -> frm2 ) + left + top * stride	59:4:1013:1063	6133308	17	True				
ANR	6133541	AssignmentExpression	prev = ( ( uint8_t * ) ctx -> frm2 ) + left + top * stride		6133308	0		=			
ANR	6133542	Identifier	prev		6133308	0					
ANR	6133543	AdditiveExpression	( ( uint8_t * ) ctx -> frm2 ) + left + top * stride		6133308	1		+			
ANR	6133544	CastExpression	( uint8_t * ) ctx -> frm2		6133308	0					
ANR	6133545	CastTarget	uint8_t *		6133308	0					
ANR	6133546	PtrMemberAccess	ctx -> frm2		6133308	1					
ANR	6133547	Identifier	ctx		6133308	0					
ANR	6133548	Identifier	frm2		6133308	1					
ANR	6133549	AdditiveExpression	left + top * stride		6133308	1		+			
ANR	6133550	Identifier	left		6133308	0					
ANR	6133551	MultiplicativeExpression	top * stride		6133308	1		*			
ANR	6133552	Identifier	top		6133308	0					
ANR	6133553	Identifier	stride		6133308	1					
ANR	6133554	IfStatement	if ( mvoff > 2 )		6133308	18					
ANR	6133555	Condition	mvoff > 2	63:8:1076:1084	6133308	0	True				
ANR	6133556	RelationalExpression	mvoff > 2		6133308	0		>			
ANR	6133557	Identifier	mvoff		6133308	0					
ANR	6133558	PrimaryExpression	2		6133308	1					
ANR	6133559	CompoundStatement		59:19:973:973	6133308	1					
ANR	6133560	ExpressionStatement	"av_log ( ctx -> avctx , AV_LOG_ERROR , ""invalid motion base value %d\\n"" , mvoff )"	65:8:1098:1171	6133308	0	True				
ANR	6133561	CallExpression	"av_log ( ctx -> avctx , AV_LOG_ERROR , ""invalid motion base value %d\\n"" , mvoff )"		6133308	0					
ANR	6133562	Callee	av_log		6133308	0					
ANR	6133563	Identifier	av_log		6133308	0					
ANR	6133564	ArgumentList	ctx -> avctx		6133308	1					
ANR	6133565	Argument	ctx -> avctx		6133308	0					
ANR	6133566	PtrMemberAccess	ctx -> avctx		6133308	0					
ANR	6133567	Identifier	ctx		6133308	0					
ANR	6133568	Identifier	avctx		6133308	1					
ANR	6133569	Argument	AV_LOG_ERROR		6133308	1					
ANR	6133570	Identifier	AV_LOG_ERROR		6133308	0					
ANR	6133571	Argument	"""invalid motion base value %d\\n"""		6133308	2					
ANR	6133572	PrimaryExpression	"""invalid motion base value %d\\n"""		6133308	0					
ANR	6133573	Argument	mvoff		6133308	3					
ANR	6133574	Identifier	mvoff		6133308	0					
ANR	6133575	ReturnStatement	return AVERROR_INVALIDDATA ;	67:8:1182:1208	6133308	1	True				
ANR	6133576	Identifier	AVERROR_INVALIDDATA		6133308	0					
ANR	6133577	ExpressionStatement	"av_dlog ( ctx -> avctx , ""compression %d\\n"" , compr )"	71:4:1222:1268	6133308	19	True				
ANR	6133578	CallExpression	"av_dlog ( ctx -> avctx , ""compression %d\\n"" , compr )"		6133308	0					
ANR	6133579	Callee	av_dlog		6133308	0					
ANR	6133580	Identifier	av_dlog		6133308	0					
ANR	6133581	ArgumentList	ctx -> avctx		6133308	1					
ANR	6133582	Argument	ctx -> avctx		6133308	0					
ANR	6133583	PtrMemberAccess	ctx -> avctx		6133308	0					
ANR	6133584	Identifier	ctx		6133308	0					
ANR	6133585	Identifier	avctx		6133308	1					
ANR	6133586	Argument	"""compression %d\\n"""		6133308	1					
ANR	6133587	PrimaryExpression	"""compression %d\\n"""		6133308	0					
ANR	6133588	Argument	compr		6133308	2					
ANR	6133589	Identifier	compr		6133308	0					
ANR	6133590	SwitchStatement	switch ( compr )		6133308	20					
ANR	6133591	Condition	compr	73:12:1283:1287	6133308	0	True				
ANR	6133592	Identifier	compr		6133308	0					
ANR	6133593	CompoundStatement		69:19:1176:1176	6133308	1					
ANR	6133594	Label	case 0 :	75:4:1297:1303	6133308	0	True				
ANR	6133595	ForStatement	for ( i = 0 ; i < height ; i ++ )		6133308	1					
ANR	6133596	ForInit	i = 0 ;	77:13:1319:1324	6133308	0	True				
ANR	6133597	AssignmentExpression	i = 0		6133308	0		=			
ANR	6133598	Identifier	i		6133308	0					
ANR	6133599	PrimaryExpression	0		6133308	1					
ANR	6133600	Condition	i < height	77:20:1326:1335	6133308	1	True				
ANR	6133601	RelationalExpression	i < height		6133308	0		<			
ANR	6133602	Identifier	i		6133308	0					
ANR	6133603	Identifier	height		6133308	1					
ANR	6133604	PostIncDecOperationExpression	i ++	77:32:1338:1340	6133308	2	True				
ANR	6133605	Identifier	i		6133308	0					
ANR	6133606	IncDec	++		6133308	1					
ANR	6133607	CompoundStatement		73:37:1229:1229	6133308	3					
ANR	6133608	ExpressionStatement	"bytestream2_get_buffer ( & ctx -> gb , dst , width )"	79:12:1358:1402	6133308	0	True				
ANR	6133609	CallExpression	"bytestream2_get_buffer ( & ctx -> gb , dst , width )"		6133308	0					
ANR	6133610	Callee	bytestream2_get_buffer		6133308	0					
ANR	6133611	Identifier	bytestream2_get_buffer		6133308	0					
ANR	6133612	ArgumentList	& ctx -> gb		6133308	1					
ANR	6133613	Argument	& ctx -> gb		6133308	0					
ANR	6133614	UnaryOperationExpression	& ctx -> gb		6133308	0					
ANR	6133615	UnaryOperator	&		6133308	0					
ANR	6133616	PtrMemberAccess	ctx -> gb		6133308	1					
ANR	6133617	Identifier	ctx		6133308	0					
ANR	6133618	Identifier	gb		6133308	1					
ANR	6133619	Argument	dst		6133308	1					
ANR	6133620	Identifier	dst		6133308	0					
ANR	6133621	Argument	width		6133308	2					
ANR	6133622	Identifier	width		6133308	0					
ANR	6133623	ExpressionStatement	dst += stride	81:12:1417:1430	6133308	1	True				
ANR	6133624	AssignmentExpression	dst += stride		6133308	0		+=			
ANR	6133625	Identifier	dst		6133308	0					
ANR	6133626	Identifier	stride		6133308	1					
ANR	6133627	ExpressionStatement	"memset ( ctx -> frm1 , 0 , ctx -> height * stride )"	85:8:1452:1494	6133308	2	True				
ANR	6133628	CallExpression	"memset ( ctx -> frm1 , 0 , ctx -> height * stride )"		6133308	0					
ANR	6133629	Callee	memset		6133308	0					
ANR	6133630	Identifier	memset		6133308	0					
ANR	6133631	ArgumentList	ctx -> frm1		6133308	1					
ANR	6133632	Argument	ctx -> frm1		6133308	0					
ANR	6133633	PtrMemberAccess	ctx -> frm1		6133308	0					
ANR	6133634	Identifier	ctx		6133308	0					
ANR	6133635	Identifier	frm1		6133308	1					
ANR	6133636	Argument	0		6133308	1					
ANR	6133637	PrimaryExpression	0		6133308	0					
ANR	6133638	Argument	ctx -> height * stride		6133308	2					
ANR	6133639	MultiplicativeExpression	ctx -> height * stride		6133308	0		*			
ANR	6133640	PtrMemberAccess	ctx -> height		6133308	0					
ANR	6133641	Identifier	ctx		6133308	0					
ANR	6133642	Identifier	height		6133308	1					
ANR	6133643	Identifier	stride		6133308	1					
ANR	6133644	ExpressionStatement	"memset ( ctx -> frm2 , 0 , ctx -> height * stride )"	87:8:1505:1547	6133308	3	True				
ANR	6133645	CallExpression	"memset ( ctx -> frm2 , 0 , ctx -> height * stride )"		6133308	0					
ANR	6133646	Callee	memset		6133308	0					
ANR	6133647	Identifier	memset		6133308	0					
ANR	6133648	ArgumentList	ctx -> frm2		6133308	1					
ANR	6133649	Argument	ctx -> frm2		6133308	0					
ANR	6133650	PtrMemberAccess	ctx -> frm2		6133308	0					
ANR	6133651	Identifier	ctx		6133308	0					
ANR	6133652	Identifier	frm2		6133308	1					
ANR	6133653	Argument	0		6133308	1					
ANR	6133654	PrimaryExpression	0		6133308	0					
ANR	6133655	Argument	ctx -> height * stride		6133308	2					
ANR	6133656	MultiplicativeExpression	ctx -> height * stride		6133308	0		*			
ANR	6133657	PtrMemberAccess	ctx -> height		6133308	0					
ANR	6133658	Identifier	ctx		6133308	0					
ANR	6133659	Identifier	height		6133308	1					
ANR	6133660	Identifier	stride		6133308	1					
ANR	6133661	BreakStatement	break ;	89:8:1558:1563	6133308	4	True				
ANR	6133662	Label	case 2 :	91:4:1570:1576	6133308	5	True				
ANR	6133663	IfStatement	"if ( rle_decode ( ctx , dst , decoded_size ) )"		6133308	6					
ANR	6133664	Condition	"rle_decode ( ctx , dst , decoded_size )"	93:12:1591:1624	6133308	0	True				
ANR	6133665	CallExpression	"rle_decode ( ctx , dst , decoded_size )"		6133308	0					
ANR	6133666	Callee	rle_decode		6133308	0					
ANR	6133667	Identifier	rle_decode		6133308	0					
ANR	6133668	ArgumentList	ctx		6133308	1					
ANR	6133669	Argument	ctx		6133308	0					
ANR	6133670	Identifier	ctx		6133308	0					
ANR	6133671	Argument	dst		6133308	1					
ANR	6133672	Identifier	dst		6133308	0					
ANR	6133673	Argument	decoded_size		6133308	2					
ANR	6133674	Identifier	decoded_size		6133308	0					
ANR	6133675	ReturnStatement	return AVERROR_INVALIDDATA ;	95:12:1640:1666	6133308	1	True				
ANR	6133676	Identifier	AVERROR_INVALIDDATA		6133308	0					
ANR	6133677	ExpressionStatement	"memset ( ctx -> frm1 , 0 , ctx -> frm1_size )"	97:8:1677:1713	6133308	7	True				
ANR	6133678	CallExpression	"memset ( ctx -> frm1 , 0 , ctx -> frm1_size )"		6133308	0					
ANR	6133679	Callee	memset		6133308	0					
ANR	6133680	Identifier	memset		6133308	0					
ANR	6133681	ArgumentList	ctx -> frm1		6133308	1					
ANR	6133682	Argument	ctx -> frm1		6133308	0					
ANR	6133683	PtrMemberAccess	ctx -> frm1		6133308	0					
ANR	6133684	Identifier	ctx		6133308	0					
ANR	6133685	Identifier	frm1		6133308	1					
ANR	6133686	Argument	0		6133308	1					
ANR	6133687	PrimaryExpression	0		6133308	0					
ANR	6133688	Argument	ctx -> frm1_size		6133308	2					
ANR	6133689	PtrMemberAccess	ctx -> frm1_size		6133308	0					
ANR	6133690	Identifier	ctx		6133308	0					
ANR	6133691	Identifier	frm1_size		6133308	1					
ANR	6133692	ExpressionStatement	"memset ( ctx -> frm2 , 0 , ctx -> frm2_size )"	99:8:1724:1760	6133308	8	True				
ANR	6133693	CallExpression	"memset ( ctx -> frm2 , 0 , ctx -> frm2_size )"		6133308	0					
ANR	6133694	Callee	memset		6133308	0					
ANR	6133695	Identifier	memset		6133308	0					
ANR	6133696	ArgumentList	ctx -> frm2		6133308	1					
ANR	6133697	Argument	ctx -> frm2		6133308	0					
ANR	6133698	PtrMemberAccess	ctx -> frm2		6133308	0					
ANR	6133699	Identifier	ctx		6133308	0					
ANR	6133700	Identifier	frm2		6133308	1					
ANR	6133701	Argument	0		6133308	1					
ANR	6133702	PrimaryExpression	0		6133308	0					
ANR	6133703	Argument	ctx -> frm2_size		6133308	2					
ANR	6133704	PtrMemberAccess	ctx -> frm2_size		6133308	0					
ANR	6133705	Identifier	ctx		6133308	0					
ANR	6133706	Identifier	frm2_size		6133308	1					
ANR	6133707	BreakStatement	break ;	101:8:1771:1776	6133308	9	True				
ANR	6133708	Label	case 3 :	103:4:1783:1789	6133308	10	True				
ANR	6133709	Label	case 4 :	105:4:1796:1802	6133308	11	True				
ANR	6133710	IfStatement	if ( flags & 4 )		6133308	12					
ANR	6133711	Condition	flags & 4	107:12:1817:1825	6133308	0	True				
ANR	6133712	BitAndExpression	flags & 4		6133308	0		&			
ANR	6133713	Identifier	flags		6133308	0					
ANR	6133714	PrimaryExpression	4		6133308	1					
ANR	6133715	CompoundStatement		103:23:1714:1714	6133308	1					
ANR	6133716	ForStatement	for ( j = 0 ; j < height ; j += 4 )		6133308	0					
ANR	6133717	ForInit	j = 0 ;	109:17:1848:1853	6133308	0	True				
ANR	6133718	AssignmentExpression	j = 0		6133308	0		=			
ANR	6133719	Identifier	j		6133308	0					
ANR	6133720	PrimaryExpression	0		6133308	1					
ANR	6133721	Condition	j < height	109:24:1855:1864	6133308	1	True				
ANR	6133722	RelationalExpression	j < height		6133308	0		<			
ANR	6133723	Identifier	j		6133308	0					
ANR	6133724	Identifier	height		6133308	1					
ANR	6133725	AssignmentExpression	j += 4	109:36:1867:1872	6133308	2	True	+=			
ANR	6133726	Identifier	j		6133308	0					
ANR	6133727	PrimaryExpression	4		6133308	1					
ANR	6133728	CompoundStatement		105:44:1761:1761	6133308	3					
ANR	6133729	ForStatement	for ( i = 0 ; i < width ; i += 4 )		6133308	0					
ANR	6133730	ForInit	i = 0 ;	111:21:1899:1904	6133308	0	True				
ANR	6133731	AssignmentExpression	i = 0		6133308	0		=			
ANR	6133732	Identifier	i		6133308	0					
ANR	6133733	PrimaryExpression	0		6133308	1					
ANR	6133734	Condition	i < width	111:28:1906:1914	6133308	1	True				
ANR	6133735	RelationalExpression	i < width		6133308	0		<			
ANR	6133736	Identifier	i		6133308	0					
ANR	6133737	Identifier	width		6133308	1					
ANR	6133738	AssignmentExpression	i += 4	111:39:1917:1922	6133308	2	True	+=			
ANR	6133739	Identifier	i		6133308	0					
ANR	6133740	PrimaryExpression	4		6133308	1					
ANR	6133741	CompoundStatement		109:20:1834:1842	6133308	3					
ANR	6133742	IdentifierDeclStatement	int code ;	113:20:1948:1956	6133308	0	True				
ANR	6133743	IdentifierDecl	code		6133308	0					
ANR	6133744	IdentifierDeclType	int		6133308	0					
ANR	6133745	Identifier	code		6133308	1					
ANR	6133746	IfStatement	if ( skip_run )		6133308	1					
ANR	6133747	Condition	skip_run	115:24:1983:1990	6133308	0	True				
ANR	6133748	Identifier	skip_run		6133308	0					
ANR	6133749	CompoundStatement		111:34:1879:1879	6133308	1					
ANR	6133750	ExpressionStatement	skip_run --	117:24:2020:2030	6133308	0	True				
ANR	6133751	PostIncDecOperationExpression	skip_run --		6133308	0					
ANR	6133752	Identifier	skip_run		6133308	0					
ANR	6133753	IncDec	--		6133308	1					
ANR	6133754	ExpressionStatement	"copy_block4 ( dst + i , prev + i , stride , stride , 4 )"	119:24:2057:2106	6133308	1	True				
ANR	6133755	CallExpression	"copy_block4 ( dst + i , prev + i , stride , stride , 4 )"		6133308	0					
ANR	6133756	Callee	copy_block4		6133308	0					
ANR	6133757	Identifier	copy_block4		6133308	0					
ANR	6133758	ArgumentList	dst + i		6133308	1					
ANR	6133759	Argument	dst + i		6133308	0					
ANR	6133760	AdditiveExpression	dst + i		6133308	0		+			
ANR	6133761	Identifier	dst		6133308	0					
ANR	6133762	Identifier	i		6133308	1					
ANR	6133763	Argument	prev + i		6133308	1					
ANR	6133764	AdditiveExpression	prev + i		6133308	0		+			
ANR	6133765	Identifier	prev		6133308	0					
ANR	6133766	Identifier	i		6133308	1					
ANR	6133767	Argument	stride		6133308	2					
ANR	6133768	Identifier	stride		6133308	0					
ANR	6133769	Argument	stride		6133308	3					
ANR	6133770	Identifier	stride		6133308	0					
ANR	6133771	Argument	4		6133308	4					
ANR	6133772	PrimaryExpression	4		6133308	0					
ANR	6133773	ContinueStatement	continue ;	121:24:2133:2141	6133308	2	True				
ANR	6133774	IfStatement	if ( bytestream2_get_bytes_left ( & ctx -> gb ) < 1 )		6133308	2					
ANR	6133775	Condition	bytestream2_get_bytes_left ( & ctx -> gb ) < 1	125:24:2191:2230	6133308	0	True				
ANR	6133776	RelationalExpression	bytestream2_get_bytes_left ( & ctx -> gb ) < 1		6133308	0		<			
ANR	6133777	CallExpression	bytestream2_get_bytes_left ( & ctx -> gb )		6133308	0					
ANR	6133778	Callee	bytestream2_get_bytes_left		6133308	0					
ANR	6133779	Identifier	bytestream2_get_bytes_left		6133308	0					
ANR	6133780	ArgumentList	& ctx -> gb		6133308	1					
ANR	6133781	Argument	& ctx -> gb		6133308	0					
ANR	6133782	UnaryOperationExpression	& ctx -> gb		6133308	0					
ANR	6133783	UnaryOperator	&		6133308	0					
ANR	6133784	PtrMemberAccess	ctx -> gb		6133308	1					
ANR	6133785	Identifier	ctx		6133308	0					
ANR	6133786	Identifier	gb		6133308	1					
ANR	6133787	PrimaryExpression	1		6133308	1					
ANR	6133788	ReturnStatement	return AVERROR_INVALIDDATA ;	127:24:2258:2284	6133308	1	True				
ANR	6133789	Identifier	AVERROR_INVALIDDATA		6133308	0					
ANR	6133790	ExpressionStatement	code = bytestream2_get_byteu ( & ctx -> gb )	129:20:2307:2345	6133308	3	True				
ANR	6133791	AssignmentExpression	code = bytestream2_get_byteu ( & ctx -> gb )		6133308	0		=			
ANR	6133792	Identifier	code		6133308	0					
ANR	6133793	CallExpression	bytestream2_get_byteu ( & ctx -> gb )		6133308	1					
ANR	6133794	Callee	bytestream2_get_byteu		6133308	0					
ANR	6133795	Identifier	bytestream2_get_byteu		6133308	0					
ANR	6133796	ArgumentList	& ctx -> gb		6133308	1					
ANR	6133797	Argument	& ctx -> gb		6133308	0					
ANR	6133798	UnaryOperationExpression	& ctx -> gb		6133308	0					
ANR	6133799	UnaryOperator	&		6133308	0					
ANR	6133800	PtrMemberAccess	ctx -> gb		6133308	1					
ANR	6133801	Identifier	ctx		6133308	0					
ANR	6133802	Identifier	gb		6133308	1					
ANR	6133803	SwitchStatement	switch ( code )		6133308	4					
ANR	6133804	Condition	code	131:28:2376:2379	6133308	0	True				
ANR	6133805	Identifier	code		6133308	0					
ANR	6133806	CompoundStatement		127:34:2268:2268	6133308	1					
ANR	6133807	Label	case 0xFF :	133:20:2405:2414	6133308	0	True				
ANR	6133808	IfStatement	if ( bytestream2_get_bytes_left ( & ctx -> gb ) < 16 )		6133308	1					
ANR	6133809	Condition	bytestream2_get_bytes_left ( & ctx -> gb ) < 16	135:28:2445:2485	6133308	0	True				
ANR	6133810	RelationalExpression	bytestream2_get_bytes_left ( & ctx -> gb ) < 16		6133308	0		<			
ANR	6133811	CallExpression	bytestream2_get_bytes_left ( & ctx -> gb )		6133308	0					
ANR	6133812	Callee	bytestream2_get_bytes_left		6133308	0					
ANR	6133813	Identifier	bytestream2_get_bytes_left		6133308	0					
ANR	6133814	ArgumentList	& ctx -> gb		6133308	1					
ANR	6133815	Argument	& ctx -> gb		6133308	0					
ANR	6133816	UnaryOperationExpression	& ctx -> gb		6133308	0					
ANR	6133817	UnaryOperator	&		6133308	0					
ANR	6133818	PtrMemberAccess	ctx -> gb		6133308	1					
ANR	6133819	Identifier	ctx		6133308	0					
ANR	6133820	Identifier	gb		6133308	1					
ANR	6133821	PrimaryExpression	16		6133308	1					
ANR	6133822	ReturnStatement	return AVERROR_INVALIDDATA ;	137:28:2517:2543	6133308	1	True				
ANR	6133823	Identifier	AVERROR_INVALIDDATA		6133308	0					
ANR	6133824	ForStatement	for ( k = 0 ; k < 4 ; k ++ )		6133308	2					
ANR	6133825	ForInit	k = 0 ;	139:29:2575:2580	6133308	0	True				
ANR	6133826	AssignmentExpression	k = 0		6133308	0		=			
ANR	6133827	Identifier	k		6133308	0					
ANR	6133828	PrimaryExpression	0		6133308	1					
ANR	6133829	Condition	k < 4	139:36:2582:2586	6133308	1	True				
ANR	6133830	RelationalExpression	k < 4		6133308	0		<			
ANR	6133831	Identifier	k		6133308	0					
ANR	6133832	PrimaryExpression	4		6133308	1					
ANR	6133833	PostIncDecOperationExpression	k ++	139:43:2589:2591	6133308	2	True				
ANR	6133834	Identifier	k		6133308	0					
ANR	6133835	IncDec	++		6133308	1					
ANR	6133836	ExpressionStatement	"bytestream2_get_bufferu ( & ctx -> gb , dst + i + k * stride , 4 )"	141:28:2623:2681	6133308	3	True				
ANR	6133837	CallExpression	"bytestream2_get_bufferu ( & ctx -> gb , dst + i + k * stride , 4 )"		6133308	0					
ANR	6133838	Callee	bytestream2_get_bufferu		6133308	0					
ANR	6133839	Identifier	bytestream2_get_bufferu		6133308	0					
ANR	6133840	ArgumentList	& ctx -> gb		6133308	1					
ANR	6133841	Argument	& ctx -> gb		6133308	0					
ANR	6133842	UnaryOperationExpression	& ctx -> gb		6133308	0					
ANR	6133843	UnaryOperator	&		6133308	0					
ANR	6133844	PtrMemberAccess	ctx -> gb		6133308	1					
ANR	6133845	Identifier	ctx		6133308	0					
ANR	6133846	Identifier	gb		6133308	1					
ANR	6133847	Argument	dst + i + k * stride		6133308	1					
ANR	6133848	AdditiveExpression	dst + i + k * stride		6133308	0		+			
ANR	6133849	Identifier	dst		6133308	0					
ANR	6133850	AdditiveExpression	i + k * stride		6133308	1		+			
ANR	6133851	Identifier	i		6133308	0					
ANR	6133852	MultiplicativeExpression	k * stride		6133308	1		*			
ANR	6133853	Identifier	k		6133308	0					
ANR	6133854	Identifier	stride		6133308	1					
ANR	6133855	Argument	4		6133308	2					
ANR	6133856	PrimaryExpression	4		6133308	0					
ANR	6133857	BreakStatement	break ;	143:24:2708:2713	6133308	3	True				
ANR	6133858	Label	case 0xFE :	145:20:2736:2745	6133308	4	True				
ANR	6133859	IfStatement	if ( bytestream2_get_bytes_left ( & ctx -> gb ) < 4 )		6133308	5					
ANR	6133860	Condition	bytestream2_get_bytes_left ( & ctx -> gb ) < 4	147:28:2776:2815	6133308	0	True				
ANR	6133861	RelationalExpression	bytestream2_get_bytes_left ( & ctx -> gb ) < 4		6133308	0		<			
ANR	6133862	CallExpression	bytestream2_get_bytes_left ( & ctx -> gb )		6133308	0					
ANR	6133863	Callee	bytestream2_get_bytes_left		6133308	0					
ANR	6133864	Identifier	bytestream2_get_bytes_left		6133308	0					
ANR	6133865	ArgumentList	& ctx -> gb		6133308	1					
ANR	6133866	Argument	& ctx -> gb		6133308	0					
ANR	6133867	UnaryOperationExpression	& ctx -> gb		6133308	0					
ANR	6133868	UnaryOperator	&		6133308	0					
ANR	6133869	PtrMemberAccess	ctx -> gb		6133308	1					
ANR	6133870	Identifier	ctx		6133308	0					
ANR	6133871	Identifier	gb		6133308	1					
ANR	6133872	PrimaryExpression	4		6133308	1					
ANR	6133873	ReturnStatement	return AVERROR_INVALIDDATA ;	149:28:2847:2873	6133308	1	True				
ANR	6133874	Identifier	AVERROR_INVALIDDATA		6133308	0					
ANR	6133875	ForStatement	for ( k = 0 ; k < 4 ; k ++ )		6133308	6					
ANR	6133876	ForInit	k = 0 ;	151:29:2905:2910	6133308	0	True				
ANR	6133877	AssignmentExpression	k = 0		6133308	0		=			
ANR	6133878	Identifier	k		6133308	0					
ANR	6133879	PrimaryExpression	0		6133308	1					
ANR	6133880	Condition	k < 4	151:36:2912:2916	6133308	1	True				
ANR	6133881	RelationalExpression	k < 4		6133308	0		<			
ANR	6133882	Identifier	k		6133308	0					
ANR	6133883	PrimaryExpression	4		6133308	1					
ANR	6133884	PostIncDecOperationExpression	k ++	151:43:2919:2921	6133308	2	True				
ANR	6133885	Identifier	k		6133308	0					
ANR	6133886	IncDec	++		6133308	1					
ANR	6133887	ExpressionStatement	"memset ( dst + i + k * stride , bytestream2_get_byteu ( & ctx -> gb ) , 4 )"	153:28:2953:3017	6133308	3	True				
ANR	6133888	CallExpression	"memset ( dst + i + k * stride , bytestream2_get_byteu ( & ctx -> gb ) , 4 )"		6133308	0					
ANR	6133889	Callee	memset		6133308	0					
ANR	6133890	Identifier	memset		6133308	0					
ANR	6133891	ArgumentList	dst + i + k * stride		6133308	1					
ANR	6133892	Argument	dst + i + k * stride		6133308	0					
ANR	6133893	AdditiveExpression	dst + i + k * stride		6133308	0		+			
ANR	6133894	Identifier	dst		6133308	0					
ANR	6133895	AdditiveExpression	i + k * stride		6133308	1		+			
ANR	6133896	Identifier	i		6133308	0					
ANR	6133897	MultiplicativeExpression	k * stride		6133308	1		*			
ANR	6133898	Identifier	k		6133308	0					
ANR	6133899	Identifier	stride		6133308	1					
ANR	6133900	Argument	bytestream2_get_byteu ( & ctx -> gb )		6133308	1					
ANR	6133901	CallExpression	bytestream2_get_byteu ( & ctx -> gb )		6133308	0					
ANR	6133902	Callee	bytestream2_get_byteu		6133308	0					
ANR	6133903	Identifier	bytestream2_get_byteu		6133308	0					
ANR	6133904	ArgumentList	& ctx -> gb		6133308	1					
ANR	6133905	Argument	& ctx -> gb		6133308	0					
ANR	6133906	UnaryOperationExpression	& ctx -> gb		6133308	0					
ANR	6133907	UnaryOperator	&		6133308	0					
ANR	6133908	PtrMemberAccess	ctx -> gb		6133308	1					
ANR	6133909	Identifier	ctx		6133308	0					
ANR	6133910	Identifier	gb		6133308	1					
ANR	6133911	Argument	4		6133308	2					
ANR	6133912	PrimaryExpression	4		6133308	0					
ANR	6133913	BreakStatement	break ;	155:24:3044:3049	6133308	7	True				
ANR	6133914	Label	case 0xFD :	157:20:3072:3081	6133308	8	True				
ANR	6133915	IfStatement	if ( bytestream2_get_bytes_left ( & ctx -> gb ) < 1 )		6133308	9					
ANR	6133916	Condition	bytestream2_get_bytes_left ( & ctx -> gb ) < 1	159:28:3112:3151	6133308	0	True				
ANR	6133917	RelationalExpression	bytestream2_get_bytes_left ( & ctx -> gb ) < 1		6133308	0		<			
ANR	6133918	CallExpression	bytestream2_get_bytes_left ( & ctx -> gb )		6133308	0					
ANR	6133919	Callee	bytestream2_get_bytes_left		6133308	0					
ANR	6133920	Identifier	bytestream2_get_bytes_left		6133308	0					
ANR	6133921	ArgumentList	& ctx -> gb		6133308	1					
ANR	6133922	Argument	& ctx -> gb		6133308	0					
ANR	6133923	UnaryOperationExpression	& ctx -> gb		6133308	0					
ANR	6133924	UnaryOperator	&		6133308	0					
ANR	6133925	PtrMemberAccess	ctx -> gb		6133308	1					
ANR	6133926	Identifier	ctx		6133308	0					
ANR	6133927	Identifier	gb		6133308	1					
ANR	6133928	PrimaryExpression	1		6133308	1					
ANR	6133929	ReturnStatement	return AVERROR_INVALIDDATA ;	161:28:3183:3209	6133308	1	True				
ANR	6133930	Identifier	AVERROR_INVALIDDATA		6133308	0					
ANR	6133931	ExpressionStatement	t = bytestream2_get_byteu ( & ctx -> gb )	163:24:3236:3271	6133308	10	True				
ANR	6133932	AssignmentExpression	t = bytestream2_get_byteu ( & ctx -> gb )		6133308	0		=			
ANR	6133933	Identifier	t		6133308	0					
ANR	6133934	CallExpression	bytestream2_get_byteu ( & ctx -> gb )		6133308	1					
ANR	6133935	Callee	bytestream2_get_byteu		6133308	0					
ANR	6133936	Identifier	bytestream2_get_byteu		6133308	0					
ANR	6133937	ArgumentList	& ctx -> gb		6133308	1					
ANR	6133938	Argument	& ctx -> gb		6133308	0					
ANR	6133939	UnaryOperationExpression	& ctx -> gb		6133308	0					
ANR	6133940	UnaryOperator	&		6133308	0					
ANR	6133941	PtrMemberAccess	ctx -> gb		6133308	1					
ANR	6133942	Identifier	ctx		6133308	0					
ANR	6133943	Identifier	gb		6133308	1					
ANR	6133944	ForStatement	for ( k = 0 ; k < 4 ; k ++ )		6133308	11					
ANR	6133945	ForInit	k = 0 ;	165:29:3303:3308	6133308	0	True				
ANR	6133946	AssignmentExpression	k = 0		6133308	0		=			
ANR	6133947	Identifier	k		6133308	0					
ANR	6133948	PrimaryExpression	0		6133308	1					
ANR	6133949	Condition	k < 4	165:36:3310:3314	6133308	1	True				
ANR	6133950	RelationalExpression	k < 4		6133308	0		<			
ANR	6133951	Identifier	k		6133308	0					
ANR	6133952	PrimaryExpression	4		6133308	1					
ANR	6133953	PostIncDecOperationExpression	k ++	165:43:3317:3319	6133308	2	True				
ANR	6133954	Identifier	k		6133308	0					
ANR	6133955	IncDec	++		6133308	1					
ANR	6133956	ExpressionStatement	"memset ( dst + i + k * stride , t , 4 )"	167:28:3351:3385	6133308	3	True				
ANR	6133957	CallExpression	"memset ( dst + i + k * stride , t , 4 )"		6133308	0					
ANR	6133958	Callee	memset		6133308	0					
ANR	6133959	Identifier	memset		6133308	0					
ANR	6133960	ArgumentList	dst + i + k * stride		6133308	1					
ANR	6133961	Argument	dst + i + k * stride		6133308	0					
ANR	6133962	AdditiveExpression	dst + i + k * stride		6133308	0		+			
ANR	6133963	Identifier	dst		6133308	0					
ANR	6133964	AdditiveExpression	i + k * stride		6133308	1		+			
ANR	6133965	Identifier	i		6133308	0					
ANR	6133966	MultiplicativeExpression	k * stride		6133308	1		*			
ANR	6133967	Identifier	k		6133308	0					
ANR	6133968	Identifier	stride		6133308	1					
ANR	6133969	Argument	t		6133308	1					
ANR	6133970	Identifier	t		6133308	0					
ANR	6133971	Argument	4		6133308	2					
ANR	6133972	PrimaryExpression	4		6133308	0					
ANR	6133973	BreakStatement	break ;	169:24:3412:3417	6133308	12	True				
ANR	6133974	Label	default :	171:20:3440:3447	6133308	13	True				
ANR	6133975	Identifier	default		6133308	0					
ANR	6133976	IfStatement	if ( compr == 4 && ! code )		6133308	14					
ANR	6133977	Condition	compr == 4 && ! code	173:28:3478:3496	6133308	0	True				
ANR	6133978	AndExpression	compr == 4 && ! code		6133308	0		&&			
ANR	6133979	EqualityExpression	compr == 4		6133308	0		==			
ANR	6133980	Identifier	compr		6133308	0					
ANR	6133981	PrimaryExpression	4		6133308	1					
ANR	6133982	UnaryOperationExpression	! code		6133308	1					
ANR	6133983	UnaryOperator	!		6133308	0					
ANR	6133984	Identifier	code		6133308	1					
ANR	6133985	CompoundStatement		169:49:3385:3385	6133308	1					
ANR	6133986	IfStatement	if ( bytestream2_get_bytes_left ( & ctx -> gb ) < 1 )		6133308	0					
ANR	6133987	Condition	bytestream2_get_bytes_left ( & ctx -> gb ) < 1	175:32:3534:3573	6133308	0	True				
ANR	6133988	RelationalExpression	bytestream2_get_bytes_left ( & ctx -> gb ) < 1		6133308	0		<			
ANR	6133989	CallExpression	bytestream2_get_bytes_left ( & ctx -> gb )		6133308	0					
ANR	6133990	Callee	bytestream2_get_bytes_left		6133308	0					
ANR	6133991	Identifier	bytestream2_get_bytes_left		6133308	0					
ANR	6133992	ArgumentList	& ctx -> gb		6133308	1					
ANR	6133993	Argument	& ctx -> gb		6133308	0					
ANR	6133994	UnaryOperationExpression	& ctx -> gb		6133308	0					
ANR	6133995	UnaryOperator	&		6133308	0					
ANR	6133996	PtrMemberAccess	ctx -> gb		6133308	1					
ANR	6133997	Identifier	ctx		6133308	0					
ANR	6133998	Identifier	gb		6133308	1					
ANR	6133999	PrimaryExpression	1		6133308	1					
ANR	6134000	ReturnStatement	return AVERROR_INVALIDDATA ;	177:32:3609:3635	6133308	1	True				
ANR	6134001	Identifier	AVERROR_INVALIDDATA		6133308	0					
ANR	6134002	ExpressionStatement	skip_run = bytestream2_get_byteu ( & ctx -> gb ) + 1	179:28:3666:3712	6133308	1	True				
ANR	6134003	AssignmentExpression	skip_run = bytestream2_get_byteu ( & ctx -> gb ) + 1		6133308	0		=			
ANR	6134004	Identifier	skip_run		6133308	0					
ANR	6134005	AdditiveExpression	bytestream2_get_byteu ( & ctx -> gb ) + 1		6133308	1		+			
ANR	6134006	CallExpression	bytestream2_get_byteu ( & ctx -> gb )		6133308	0					
ANR	6134007	Callee	bytestream2_get_byteu		6133308	0					
ANR	6134008	Identifier	bytestream2_get_byteu		6133308	0					
ANR	6134009	ArgumentList	& ctx -> gb		6133308	1					
ANR	6134010	Argument	& ctx -> gb		6133308	0					
ANR	6134011	UnaryOperationExpression	& ctx -> gb		6133308	0					
ANR	6134012	UnaryOperator	&		6133308	0					
ANR	6134013	PtrMemberAccess	ctx -> gb		6133308	1					
ANR	6134014	Identifier	ctx		6133308	0					
ANR	6134015	Identifier	gb		6133308	1					
ANR	6134016	PrimaryExpression	1		6133308	1					
ANR	6134017	ExpressionStatement	i -= 4	181:28:3743:3749	6133308	2	True				
ANR	6134018	AssignmentExpression	i -= 4		6133308	0		-=			
ANR	6134019	Identifier	i		6133308	0					
ANR	6134020	PrimaryExpression	4		6133308	1					
ANR	6134021	ElseStatement	else		6133308	0					
ANR	6134022	CompoundStatement		181:28:3700:3710	6133308	0					
ANR	6134023	IdentifierDeclStatement	"int mx , my ;"	185:28:3814:3824	6133308	0	True				
ANR	6134024	IdentifierDecl	mx		6133308	0					
ANR	6134025	IdentifierDeclType	int		6133308	0					
ANR	6134026	Identifier	mx		6133308	1					
ANR	6134027	IdentifierDecl	my		6133308	1					
ANR	6134028	IdentifierDeclType	int		6133308	0					
ANR	6134029	Identifier	my		6133308	1					
ANR	6134030	ExpressionStatement	mx = c37_mv [ ( mvoff * 255 + code ) * 2 ]	189:28:3857:3898	6133308	1	True				
ANR	6134031	AssignmentExpression	mx = c37_mv [ ( mvoff * 255 + code ) * 2 ]		6133308	0		=			
ANR	6134032	Identifier	mx		6133308	0					
ANR	6134033	ArrayIndexing	c37_mv [ ( mvoff * 255 + code ) * 2 ]		6133308	1					
ANR	6134034	Identifier	c37_mv		6133308	0					
ANR	6134035	MultiplicativeExpression	( mvoff * 255 + code ) * 2		6133308	1		*			
ANR	6134036	AdditiveExpression	mvoff * 255 + code		6133308	0		+			
ANR	6134037	MultiplicativeExpression	mvoff * 255		6133308	0		*			
ANR	6134038	Identifier	mvoff		6133308	0					
ANR	6134039	PrimaryExpression	255		6133308	1					
ANR	6134040	Identifier	code		6133308	1					
ANR	6134041	PrimaryExpression	2		6133308	1					
ANR	6134042	ExpressionStatement	my = c37_mv [ ( mvoff * 255 + code ) * 2 + 1 ]	191:28:3929:3970	6133308	2	True				
ANR	6134043	AssignmentExpression	my = c37_mv [ ( mvoff * 255 + code ) * 2 + 1 ]		6133308	0		=			
ANR	6134044	Identifier	my		6133308	0					
ANR	6134045	ArrayIndexing	c37_mv [ ( mvoff * 255 + code ) * 2 + 1 ]		6133308	1					
ANR	6134046	Identifier	c37_mv		6133308	0					
ANR	6134047	AdditiveExpression	( mvoff * 255 + code ) * 2 + 1		6133308	1		+			
ANR	6134048	MultiplicativeExpression	( mvoff * 255 + code ) * 2		6133308	0		*			
ANR	6134049	AdditiveExpression	mvoff * 255 + code		6133308	0		+			
ANR	6134050	MultiplicativeExpression	mvoff * 255		6133308	0		*			
ANR	6134051	Identifier	mvoff		6133308	0					
ANR	6134052	PrimaryExpression	255		6133308	1					
ANR	6134053	Identifier	code		6133308	1					
ANR	6134054	PrimaryExpression	2		6133308	1					
ANR	6134055	PrimaryExpression	1		6133308	1					
ANR	6134056	ExpressionStatement	"codec37_mv ( dst + i , prev + i + mx + my * stride , ctx -> height , stride , i + mx , j + my )"	193:28:4001:4126	6133308	3	True				
ANR	6134057	CallExpression	"codec37_mv ( dst + i , prev + i + mx + my * stride , ctx -> height , stride , i + mx , j + my )"		6133308	0					
ANR	6134058	Callee	codec37_mv		6133308	0					
ANR	6134059	Identifier	codec37_mv		6133308	0					
ANR	6134060	ArgumentList	dst + i		6133308	1					
ANR	6134061	Argument	dst + i		6133308	0					
ANR	6134062	AdditiveExpression	dst + i		6133308	0		+			
ANR	6134063	Identifier	dst		6133308	0					
ANR	6134064	Identifier	i		6133308	1					
ANR	6134065	Argument	prev + i + mx + my * stride		6133308	1					
ANR	6134066	AdditiveExpression	prev + i + mx + my * stride		6133308	0		+			
ANR	6134067	Identifier	prev		6133308	0					
ANR	6134068	AdditiveExpression	i + mx + my * stride		6133308	1		+			
ANR	6134069	Identifier	i		6133308	0					
ANR	6134070	AdditiveExpression	mx + my * stride		6133308	1		+			
ANR	6134071	Identifier	mx		6133308	0					
ANR	6134072	MultiplicativeExpression	my * stride		6133308	1		*			
ANR	6134073	Identifier	my		6133308	0					
ANR	6134074	Identifier	stride		6133308	1					
ANR	6134075	Argument	ctx -> height		6133308	2					
ANR	6134076	PtrMemberAccess	ctx -> height		6133308	0					
ANR	6134077	Identifier	ctx		6133308	0					
ANR	6134078	Identifier	height		6133308	1					
ANR	6134079	Argument	stride		6133308	3					
ANR	6134080	Identifier	stride		6133308	0					
ANR	6134081	Argument	i + mx		6133308	4					
ANR	6134082	AdditiveExpression	i + mx		6133308	0		+			
ANR	6134083	Identifier	i		6133308	0					
ANR	6134084	Identifier	mx		6133308	1					
ANR	6134085	Argument	j + my		6133308	5					
ANR	6134086	AdditiveExpression	j + my		6133308	0		+			
ANR	6134087	Identifier	j		6133308	0					
ANR	6134088	Identifier	my		6133308	1					
ANR	6134089	ExpressionStatement	dst += stride * 4	203:16:4214:4232	6133308	1	True				
ANR	6134090	AssignmentExpression	dst += stride * 4		6133308	0		+=			
ANR	6134091	Identifier	dst		6133308	0					
ANR	6134092	MultiplicativeExpression	stride * 4		6133308	1		*			
ANR	6134093	Identifier	stride		6133308	0					
ANR	6134094	PrimaryExpression	4		6133308	1					
ANR	6134095	ExpressionStatement	prev += stride * 4	205:16:4251:4269	6133308	2	True				
ANR	6134096	AssignmentExpression	prev += stride * 4		6133308	0		+=			
ANR	6134097	Identifier	prev		6133308	0					
ANR	6134098	MultiplicativeExpression	stride * 4		6133308	1		*			
ANR	6134099	Identifier	stride		6133308	0					
ANR	6134100	PrimaryExpression	4		6133308	1					
ANR	6134101	ElseStatement	else		6133308	0					
ANR	6134102	CompoundStatement		205:15:4188:4188	6133308	0					
ANR	6134103	ForStatement	for ( j = 0 ; j < height ; j += 4 )		6133308	0					
ANR	6134104	ForInit	j = 0 ;	211:17:4322:4327	6133308	0	True				
ANR	6134105	AssignmentExpression	j = 0		6133308	0		=			
ANR	6134106	Identifier	j		6133308	0					
ANR	6134107	PrimaryExpression	0		6133308	1					
ANR	6134108	Condition	j < height	211:24:4329:4338	6133308	1	True				
ANR	6134109	RelationalExpression	j < height		6133308	0		<			
ANR	6134110	Identifier	j		6133308	0					
ANR	6134111	Identifier	height		6133308	1					
ANR	6134112	AssignmentExpression	j += 4	211:36:4341:4346	6133308	2	True	+=			
ANR	6134113	Identifier	j		6133308	0					
ANR	6134114	PrimaryExpression	4		6133308	1					
ANR	6134115	CompoundStatement		207:44:4235:4235	6133308	3					
ANR	6134116	ForStatement	for ( i = 0 ; i < width ; i += 4 )		6133308	0					
ANR	6134117	ForInit	i = 0 ;	213:21:4373:4378	6133308	0	True				
ANR	6134118	AssignmentExpression	i = 0		6133308	0		=			
ANR	6134119	Identifier	i		6133308	0					
ANR	6134120	PrimaryExpression	0		6133308	1					
ANR	6134121	Condition	i < width	213:28:4380:4388	6133308	1	True				
ANR	6134122	RelationalExpression	i < width		6133308	0		<			
ANR	6134123	Identifier	i		6133308	0					
ANR	6134124	Identifier	width		6133308	1					
ANR	6134125	AssignmentExpression	i += 4	213:39:4391:4396	6133308	2	True	+=			
ANR	6134126	Identifier	i		6133308	0					
ANR	6134127	PrimaryExpression	4		6133308	1					
ANR	6134128	CompoundStatement		211:20:4308:4316	6133308	3					
ANR	6134129	IdentifierDeclStatement	int code ;	215:20:4422:4430	6133308	0	True				
ANR	6134130	IdentifierDecl	code		6133308	0					
ANR	6134131	IdentifierDeclType	int		6133308	0					
ANR	6134132	Identifier	code		6133308	1					
ANR	6134133	IfStatement	if ( skip_run )		6133308	1					
ANR	6134134	Condition	skip_run	217:24:4457:4464	6133308	0	True				
ANR	6134135	Identifier	skip_run		6133308	0					
ANR	6134136	CompoundStatement		213:34:4353:4353	6133308	1					
ANR	6134137	ExpressionStatement	skip_run --	219:24:4494:4504	6133308	0	True				
ANR	6134138	PostIncDecOperationExpression	skip_run --		6133308	0					
ANR	6134139	Identifier	skip_run		6133308	0					
ANR	6134140	IncDec	--		6133308	1					
ANR	6134141	ExpressionStatement	"copy_block4 ( dst + i , prev + i , stride , stride , 4 )"	221:24:4531:4580	6133308	1	True				
ANR	6134142	CallExpression	"copy_block4 ( dst + i , prev + i , stride , stride , 4 )"		6133308	0					
ANR	6134143	Callee	copy_block4		6133308	0					
ANR	6134144	Identifier	copy_block4		6133308	0					
ANR	6134145	ArgumentList	dst + i		6133308	1					
ANR	6134146	Argument	dst + i		6133308	0					
ANR	6134147	AdditiveExpression	dst + i		6133308	0		+			
ANR	6134148	Identifier	dst		6133308	0					
ANR	6134149	Identifier	i		6133308	1					
ANR	6134150	Argument	prev + i		6133308	1					
ANR	6134151	AdditiveExpression	prev + i		6133308	0		+			
ANR	6134152	Identifier	prev		6133308	0					
ANR	6134153	Identifier	i		6133308	1					
ANR	6134154	Argument	stride		6133308	2					
ANR	6134155	Identifier	stride		6133308	0					
ANR	6134156	Argument	stride		6133308	3					
ANR	6134157	Identifier	stride		6133308	0					
ANR	6134158	Argument	4		6133308	4					
ANR	6134159	PrimaryExpression	4		6133308	0					
ANR	6134160	ContinueStatement	continue ;	223:24:4607:4615	6133308	2	True				
ANR	6134161	ExpressionStatement	code = bytestream2_get_byte ( & ctx -> gb )	227:20:4661:4698	6133308	2	True				
ANR	6134162	AssignmentExpression	code = bytestream2_get_byte ( & ctx -> gb )		6133308	0		=			
ANR	6134163	Identifier	code		6133308	0					
ANR	6134164	CallExpression	bytestream2_get_byte ( & ctx -> gb )		6133308	1					
ANR	6134165	Callee	bytestream2_get_byte		6133308	0					
ANR	6134166	Identifier	bytestream2_get_byte		6133308	0					
ANR	6134167	ArgumentList	& ctx -> gb		6133308	1					
ANR	6134168	Argument	& ctx -> gb		6133308	0					
ANR	6134169	UnaryOperationExpression	& ctx -> gb		6133308	0					
ANR	6134170	UnaryOperator	&		6133308	0					
ANR	6134171	PtrMemberAccess	ctx -> gb		6133308	1					
ANR	6134172	Identifier	ctx		6133308	0					
ANR	6134173	Identifier	gb		6133308	1					
ANR	6134174	IfStatement	if ( code == 0xFF )		6133308	3					
ANR	6134175	Condition	code == 0xFF	229:24:4725:4736	6133308	0	True				
ANR	6134176	EqualityExpression	code == 0xFF		6133308	0		==			
ANR	6134177	Identifier	code		6133308	0					
ANR	6134178	PrimaryExpression	0xFF		6133308	1					
ANR	6134179	CompoundStatement		225:38:4625:4625	6133308	1					
ANR	6134180	IfStatement	if ( bytestream2_get_bytes_left ( & ctx -> gb ) < 16 )		6133308	0					
ANR	6134181	Condition	bytestream2_get_bytes_left ( & ctx -> gb ) < 16	231:28:4770:4810	6133308	0	True				
ANR	6134182	RelationalExpression	bytestream2_get_bytes_left ( & ctx -> gb ) < 16		6133308	0		<			
ANR	6134183	CallExpression	bytestream2_get_bytes_left ( & ctx -> gb )		6133308	0					
ANR	6134184	Callee	bytestream2_get_bytes_left		6133308	0					
ANR	6134185	Identifier	bytestream2_get_bytes_left		6133308	0					
ANR	6134186	ArgumentList	& ctx -> gb		6133308	1					
ANR	6134187	Argument	& ctx -> gb		6133308	0					
ANR	6134188	UnaryOperationExpression	& ctx -> gb		6133308	0					
ANR	6134189	UnaryOperator	&		6133308	0					
ANR	6134190	PtrMemberAccess	ctx -> gb		6133308	1					
ANR	6134191	Identifier	ctx		6133308	0					
ANR	6134192	Identifier	gb		6133308	1					
ANR	6134193	PrimaryExpression	16		6133308	1					
ANR	6134194	ReturnStatement	return AVERROR_INVALIDDATA ;	233:28:4842:4868	6133308	1	True				
ANR	6134195	Identifier	AVERROR_INVALIDDATA		6133308	0					
ANR	6134196	ForStatement	for ( k = 0 ; k < 4 ; k ++ )		6133308	1					
ANR	6134197	ForInit	k = 0 ;	235:29:4900:4905	6133308	0	True				
ANR	6134198	AssignmentExpression	k = 0		6133308	0		=			
ANR	6134199	Identifier	k		6133308	0					
ANR	6134200	PrimaryExpression	0		6133308	1					
ANR	6134201	Condition	k < 4	235:36:4907:4911	6133308	1	True				
ANR	6134202	RelationalExpression	k < 4		6133308	0		<			
ANR	6134203	Identifier	k		6133308	0					
ANR	6134204	PrimaryExpression	4		6133308	1					
ANR	6134205	PostIncDecOperationExpression	k ++	235:43:4914:4916	6133308	2	True				
ANR	6134206	Identifier	k		6133308	0					
ANR	6134207	IncDec	++		6133308	1					
ANR	6134208	ExpressionStatement	"bytestream2_get_bufferu ( & ctx -> gb , dst + i + k * stride , 4 )"	237:28:4948:5006	6133308	3	True				
ANR	6134209	CallExpression	"bytestream2_get_bufferu ( & ctx -> gb , dst + i + k * stride , 4 )"		6133308	0					
ANR	6134210	Callee	bytestream2_get_bufferu		6133308	0					
ANR	6134211	Identifier	bytestream2_get_bufferu		6133308	0					
ANR	6134212	ArgumentList	& ctx -> gb		6133308	1					
ANR	6134213	Argument	& ctx -> gb		6133308	0					
ANR	6134214	UnaryOperationExpression	& ctx -> gb		6133308	0					
ANR	6134215	UnaryOperator	&		6133308	0					
ANR	6134216	PtrMemberAccess	ctx -> gb		6133308	1					
ANR	6134217	Identifier	ctx		6133308	0					
ANR	6134218	Identifier	gb		6133308	1					
ANR	6134219	Argument	dst + i + k * stride		6133308	1					
ANR	6134220	AdditiveExpression	dst + i + k * stride		6133308	0		+			
ANR	6134221	Identifier	dst		6133308	0					
ANR	6134222	AdditiveExpression	i + k * stride		6133308	1		+			
ANR	6134223	Identifier	i		6133308	0					
ANR	6134224	MultiplicativeExpression	k * stride		6133308	1		*			
ANR	6134225	Identifier	k		6133308	0					
ANR	6134226	Identifier	stride		6133308	1					
ANR	6134227	Argument	4		6133308	2					
ANR	6134228	PrimaryExpression	4		6133308	0					
ANR	6134229	ElseStatement	else		6133308	0					
ANR	6134230	IfStatement	if ( compr == 4 && ! code )		6133308	0					
ANR	6134231	Condition	compr == 4 && ! code	239:31:5040:5058	6133308	0	True				
ANR	6134232	AndExpression	compr == 4 && ! code		6133308	0		&&			
ANR	6134233	EqualityExpression	compr == 4		6133308	0		==			
ANR	6134234	Identifier	compr		6133308	0					
ANR	6134235	PrimaryExpression	4		6133308	1					
ANR	6134236	UnaryOperationExpression	! code		6133308	1					
ANR	6134237	UnaryOperator	!		6133308	0					
ANR	6134238	Identifier	code		6133308	1					
ANR	6134239	CompoundStatement		235:52:4947:4947	6133308	1					
ANR	6134240	IfStatement	if ( bytestream2_get_bytes_left ( & ctx -> gb ) < 1 )		6133308	0					
ANR	6134241	Condition	bytestream2_get_bytes_left ( & ctx -> gb ) < 1	241:28:5092:5131	6133308	0	True				
ANR	6134242	RelationalExpression	bytestream2_get_bytes_left ( & ctx -> gb ) < 1		6133308	0		<			
ANR	6134243	CallExpression	bytestream2_get_bytes_left ( & ctx -> gb )		6133308	0					
ANR	6134244	Callee	bytestream2_get_bytes_left		6133308	0					
ANR	6134245	Identifier	bytestream2_get_bytes_left		6133308	0					
ANR	6134246	ArgumentList	& ctx -> gb		6133308	1					
ANR	6134247	Argument	& ctx -> gb		6133308	0					
ANR	6134248	UnaryOperationExpression	& ctx -> gb		6133308	0					
ANR	6134249	UnaryOperator	&		6133308	0					
ANR	6134250	PtrMemberAccess	ctx -> gb		6133308	1					
ANR	6134251	Identifier	ctx		6133308	0					
ANR	6134252	Identifier	gb		6133308	1					
ANR	6134253	PrimaryExpression	1		6133308	1					
ANR	6134254	ReturnStatement	return AVERROR_INVALIDDATA ;	243:28:5163:5189	6133308	1	True				
ANR	6134255	Identifier	AVERROR_INVALIDDATA		6133308	0					
ANR	6134256	ExpressionStatement	skip_run = bytestream2_get_byteu ( & ctx -> gb ) + 1	245:24:5216:5262	6133308	1	True				
ANR	6134257	AssignmentExpression	skip_run = bytestream2_get_byteu ( & ctx -> gb ) + 1		6133308	0		=			
ANR	6134258	Identifier	skip_run		6133308	0					
ANR	6134259	AdditiveExpression	bytestream2_get_byteu ( & ctx -> gb ) + 1		6133308	1		+			
ANR	6134260	CallExpression	bytestream2_get_byteu ( & ctx -> gb )		6133308	0					
ANR	6134261	Callee	bytestream2_get_byteu		6133308	0					
ANR	6134262	Identifier	bytestream2_get_byteu		6133308	0					
ANR	6134263	ArgumentList	& ctx -> gb		6133308	1					
ANR	6134264	Argument	& ctx -> gb		6133308	0					
ANR	6134265	UnaryOperationExpression	& ctx -> gb		6133308	0					
ANR	6134266	UnaryOperator	&		6133308	0					
ANR	6134267	PtrMemberAccess	ctx -> gb		6133308	1					
ANR	6134268	Identifier	ctx		6133308	0					
ANR	6134269	Identifier	gb		6133308	1					
ANR	6134270	PrimaryExpression	1		6133308	1					
ANR	6134271	ExpressionStatement	i -= 4	247:24:5289:5295	6133308	2	True				
ANR	6134272	AssignmentExpression	i -= 4		6133308	0		-=			
ANR	6134273	Identifier	i		6133308	0					
ANR	6134274	PrimaryExpression	4		6133308	1					
ANR	6134275	ElseStatement	else		6133308	0					
ANR	6134276	CompoundStatement		247:24:5238:5248	6133308	0					
ANR	6134277	IdentifierDeclStatement	"int mx , my ;"	251:24:5352:5362	6133308	0	True				
ANR	6134278	IdentifierDecl	mx		6133308	0					
ANR	6134279	IdentifierDeclType	int		6133308	0					
ANR	6134280	Identifier	mx		6133308	1					
ANR	6134281	IdentifierDecl	my		6133308	1					
ANR	6134282	IdentifierDeclType	int		6133308	0					
ANR	6134283	Identifier	my		6133308	1					
ANR	6134284	ExpressionStatement	mx = c37_mv [ ( mvoff * 255 + code ) * 2 ]	255:24:5391:5428	6133308	1	True				
ANR	6134285	AssignmentExpression	mx = c37_mv [ ( mvoff * 255 + code ) * 2 ]		6133308	0		=			
ANR	6134286	Identifier	mx		6133308	0					
ANR	6134287	ArrayIndexing	c37_mv [ ( mvoff * 255 + code ) * 2 ]		6133308	1					
ANR	6134288	Identifier	c37_mv		6133308	0					
ANR	6134289	MultiplicativeExpression	( mvoff * 255 + code ) * 2		6133308	1		*			
ANR	6134290	AdditiveExpression	mvoff * 255 + code		6133308	0		+			
ANR	6134291	MultiplicativeExpression	mvoff * 255		6133308	0		*			
ANR	6134292	Identifier	mvoff		6133308	0					
ANR	6134293	PrimaryExpression	255		6133308	1					
ANR	6134294	Identifier	code		6133308	1					
ANR	6134295	PrimaryExpression	2		6133308	1					
ANR	6134296	ExpressionStatement	my = c37_mv [ ( mvoff * 255 + code ) * 2 + 1 ]	257:24:5455:5496	6133308	2	True				
ANR	6134297	AssignmentExpression	my = c37_mv [ ( mvoff * 255 + code ) * 2 + 1 ]		6133308	0		=			
ANR	6134298	Identifier	my		6133308	0					
ANR	6134299	ArrayIndexing	c37_mv [ ( mvoff * 255 + code ) * 2 + 1 ]		6133308	1					
ANR	6134300	Identifier	c37_mv		6133308	0					
ANR	6134301	AdditiveExpression	( mvoff * 255 + code ) * 2 + 1		6133308	1		+			
ANR	6134302	MultiplicativeExpression	( mvoff * 255 + code ) * 2		6133308	0		*			
ANR	6134303	AdditiveExpression	mvoff * 255 + code		6133308	0		+			
ANR	6134304	MultiplicativeExpression	mvoff * 255		6133308	0		*			
ANR	6134305	Identifier	mvoff		6133308	0					
ANR	6134306	PrimaryExpression	255		6133308	1					
ANR	6134307	Identifier	code		6133308	1					
ANR	6134308	PrimaryExpression	2		6133308	1					
ANR	6134309	PrimaryExpression	1		6133308	1					
ANR	6134310	ExpressionStatement	"codec37_mv ( dst + i , prev + i + mx + my * stride , ctx -> height , stride , i + mx , j + my )"	259:24:5523:5644	6133308	3	True				
ANR	6134311	CallExpression	"codec37_mv ( dst + i , prev + i + mx + my * stride , ctx -> height , stride , i + mx , j + my )"		6133308	0					
ANR	6134312	Callee	codec37_mv		6133308	0					
ANR	6134313	Identifier	codec37_mv		6133308	0					
ANR	6134314	ArgumentList	dst + i		6133308	1					
ANR	6134315	Argument	dst + i		6133308	0					
ANR	6134316	AdditiveExpression	dst + i		6133308	0		+			
ANR	6134317	Identifier	dst		6133308	0					
ANR	6134318	Identifier	i		6133308	1					
ANR	6134319	Argument	prev + i + mx + my * stride		6133308	1					
ANR	6134320	AdditiveExpression	prev + i + mx + my * stride		6133308	0		+			
ANR	6134321	Identifier	prev		6133308	0					
ANR	6134322	AdditiveExpression	i + mx + my * stride		6133308	1		+			
ANR	6134323	Identifier	i		6133308	0					
ANR	6134324	AdditiveExpression	mx + my * stride		6133308	1		+			
ANR	6134325	Identifier	mx		6133308	0					
ANR	6134326	MultiplicativeExpression	my * stride		6133308	1		*			
ANR	6134327	Identifier	my		6133308	0					
ANR	6134328	Identifier	stride		6133308	1					
ANR	6134329	Argument	ctx -> height		6133308	2					
ANR	6134330	PtrMemberAccess	ctx -> height		6133308	0					
ANR	6134331	Identifier	ctx		6133308	0					
ANR	6134332	Identifier	height		6133308	1					
ANR	6134333	Argument	stride		6133308	3					
ANR	6134334	Identifier	stride		6133308	0					
ANR	6134335	Argument	i + mx		6133308	4					
ANR	6134336	AdditiveExpression	i + mx		6133308	0		+			
ANR	6134337	Identifier	i		6133308	0					
ANR	6134338	Identifier	mx		6133308	1					
ANR	6134339	Argument	j + my		6133308	5					
ANR	6134340	AdditiveExpression	j + my		6133308	0		+			
ANR	6134341	Identifier	j		6133308	0					
ANR	6134342	Identifier	my		6133308	1					
ANR	6134343	ExpressionStatement	dst += stride * 4	267:16:5705:5723	6133308	1	True				
ANR	6134344	AssignmentExpression	dst += stride * 4		6133308	0		+=			
ANR	6134345	Identifier	dst		6133308	0					
ANR	6134346	MultiplicativeExpression	stride * 4		6133308	1		*			
ANR	6134347	Identifier	stride		6133308	0					
ANR	6134348	PrimaryExpression	4		6133308	1					
ANR	6134349	ExpressionStatement	prev += stride * 4	269:16:5742:5760	6133308	2	True				
ANR	6134350	AssignmentExpression	prev += stride * 4		6133308	0		+=			
ANR	6134351	Identifier	prev		6133308	0					
ANR	6134352	MultiplicativeExpression	stride * 4		6133308	1		*			
ANR	6134353	Identifier	stride		6133308	0					
ANR	6134354	PrimaryExpression	4		6133308	1					
ANR	6134355	BreakStatement	break ;	275:8:5797:5802	6133308	13	True				
ANR	6134356	Label	default :	277:4:5809:5816	6133308	14	True				
ANR	6134357	Identifier	default		6133308	0					
ANR	6134358	ExpressionStatement	"av_log ( ctx -> avctx , AV_LOG_ERROR , ""subcodec 37 compression %d not implemented\\n"" , compr )"	279:8:5827:5930	6133308	15	True				
ANR	6134359	CallExpression	"av_log ( ctx -> avctx , AV_LOG_ERROR , ""subcodec 37 compression %d not implemented\\n"" , compr )"		6133308	0					
ANR	6134360	Callee	av_log		6133308	0					
ANR	6134361	Identifier	av_log		6133308	0					
ANR	6134362	ArgumentList	ctx -> avctx		6133308	1					
ANR	6134363	Argument	ctx -> avctx		6133308	0					
ANR	6134364	PtrMemberAccess	ctx -> avctx		6133308	0					
ANR	6134365	Identifier	ctx		6133308	0					
ANR	6134366	Identifier	avctx		6133308	1					
ANR	6134367	Argument	AV_LOG_ERROR		6133308	1					
ANR	6134368	Identifier	AV_LOG_ERROR		6133308	0					
ANR	6134369	Argument	"""subcodec 37 compression %d not implemented\\n"""		6133308	2					
ANR	6134370	PrimaryExpression	"""subcodec 37 compression %d not implemented\\n"""		6133308	0					
ANR	6134371	Argument	compr		6133308	3					
ANR	6134372	Identifier	compr		6133308	0					
ANR	6134373	ReturnStatement	return AVERROR_PATCHWELCOME ;	283:8:5941:5968	6133308	16	True				
ANR	6134374	Identifier	AVERROR_PATCHWELCOME		6133308	0					
ANR	6134375	ReturnStatement	return 0 ;	289:4:5984:5992	6133308	21	True				
ANR	6134376	PrimaryExpression	0		6133308	0					
ANR	6134377	ReturnType	static int		6133308	1					
ANR	6134378	Identifier	old_codec37		6133308	2					
ANR	6134379	ParameterList	"SANMVideoContext * ctx , int top , int left , int width , int height"		6133308	3					
ANR	6134380	Parameter	SANMVideoContext * ctx	1:23:23:43	6133308	0	True				
ANR	6134381	ParameterType	SANMVideoContext *		6133308	0					
ANR	6134382	Identifier	ctx		6133308	1					
ANR	6134383	Parameter	int top	1:46:46:52	6133308	1	True				
ANR	6134384	ParameterType	int		6133308	0					
ANR	6134385	Identifier	top		6133308	1					
ANR	6134386	Parameter	int left	3:23:79:86	6133308	2	True				
ANR	6134387	ParameterType	int		6133308	0					
ANR	6134388	Identifier	left		6133308	1					
ANR	6134389	Parameter	int width	3:33:89:97	6133308	3	True				
ANR	6134390	ParameterType	int		6133308	0					
ANR	6134391	Identifier	width		6133308	1					
ANR	6134392	Parameter	int height	3:44:100:109	6133308	4	True				
ANR	6134393	ParameterType	int		6133308	0					
ANR	6134394	Identifier	height		6133308	1					
ANR	6134395	CFGEntryNode	ENTRY		6133308		True				
ANR	6134396	CFGExitNode	EXIT		6133308		True				
ANR	6134397	Symbol	code		6133308						
ANR	6134398	Symbol	dst		6133308						
ANR	6134399	Symbol	* c37_mv		6133308						
ANR	6134400	Symbol	prev		6133308						
ANR	6134401	Symbol	flags		6133308						
ANR	6134402	Symbol	& ctx -> gb		6133308						
ANR	6134403	Symbol	stride		6133308						
ANR	6134404	Symbol	ctx -> rotate_code		6133308						
ANR	6134405	Symbol	ctx -> frm1_size		6133308						
ANR	6134406	Symbol	mvoff		6133308						
ANR	6134407	Symbol	top		6133308						
ANR	6134408	Symbol	AVERROR_PATCHWELCOME		6133308						
ANR	6134409	Symbol	bytestream2_get_bytes_left		6133308						
ANR	6134410	Symbol	seq		6133308						
ANR	6134411	Symbol	height		6133308						
ANR	6134412	Symbol	ctx -> height		6133308						
ANR	6134413	Symbol	bytestream2_get_le16		6133308						
ANR	6134414	Symbol	bytestream2_get_byteu		6133308						
ANR	6134415	Symbol	compr		6133308						
ANR	6134416	Symbol	AV_LOG_ERROR		6133308						
ANR	6134417	Symbol	ctx		6133308						
ANR	6134418	Symbol	bytestream2_get_le32		6133308						
ANR	6134419	Symbol	* mvoff		6133308						
ANR	6134420	Symbol	i		6133308						
ANR	6134421	Symbol	j		6133308						
ANR	6134422	Symbol	k		6133308						
ANR	6134423	Symbol	mx		6133308						
ANR	6134424	Symbol	ctx -> frm0		6133308						
ANR	6134425	Symbol	my		6133308						
ANR	6134426	Symbol	* ctx		6133308						
ANR	6134427	Symbol	skip_run		6133308						
ANR	6134428	Symbol	ctx -> frm2		6133308						
ANR	6134429	Symbol	ctx -> frm1		6133308						
ANR	6134430	Symbol	ctx -> avctx		6133308						
ANR	6134431	Symbol	t		6133308						
ANR	6134432	Symbol	left		6133308						
ANR	6134433	Symbol	ctx -> frm2_size		6133308						
ANR	6134434	Symbol	ctx -> pitch		6133308						
ANR	6134435	Symbol	width		6133308						
ANR	6134436	Symbol	decoded_size		6133308						
ANR	6134437	Symbol	c37_mv		6133308						
ANR	6134438	Symbol	AVERROR_INVALIDDATA		6133308						
ANR	6134439	Symbol	bytestream2_get_byte		6133308						
ANR	6134440	Symbol	AV_LOG_WARNING		6133308						
ANR	6134441	Symbol	rle_decode		6133308						
ANR	6134442	Symbol	* code		6133308						
