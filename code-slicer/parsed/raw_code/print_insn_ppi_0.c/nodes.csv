command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6687259	File	/home/p4ultr4n/workplace/ReVeal/raw_code/print_insn_ppi_0.c								
ANR	6687260	Function	print_insn_ppi	1:0:0:3478							
ANR	6687261	FunctionDef	"print_insn_ppi (int field_b , struct disassemble_info * info)"		6687260	0					
ANR	6687262	CompoundStatement		3:0:61:3478	6687260	0					
ANR	6687263	Statement	static	5:2:66:71	6687260	0	True				
ANR	6687264	IdentifierDeclStatement	"const char * sx_tab [ ] = { ""x0"" , ""x1"" , ""a0"" , ""a1"" } ;"	5:9:73:122	6687260	1	True				
ANR	6687265	IdentifierDecl	"* sx_tab [ ] = { ""x0"" , ""x1"" , ""a0"" , ""a1"" }"		6687260	0					
ANR	6687266	IdentifierDeclType	const char * [ ]		6687260	0					
ANR	6687267	Identifier	sx_tab		6687260	1					
ANR	6687268	AssignmentExpression	"* sx_tab [ ] = { ""x0"" , ""x1"" , ""a0"" , ""a1"" }"		6687260	2		=			
ANR	6687269	Identifier	sx_tab		6687260	0					
ANR	6687270	InitializerList	"""x0"""		6687260	1					
ANR	6687271	PrimaryExpression	"""x0"""		6687260	0					
ANR	6687272	PrimaryExpression	"""x1"""		6687260	1					
ANR	6687273	PrimaryExpression	"""a0"""		6687260	2					
ANR	6687274	PrimaryExpression	"""a1"""		6687260	3					
ANR	6687275	Statement	static	7:2:127:132	6687260	2	True				
ANR	6687276	IdentifierDeclStatement	"const char * sy_tab [ ] = { ""y0"" , ""y1"" , ""m0"" , ""m1"" } ;"	7:9:134:183	6687260	3	True				
ANR	6687277	IdentifierDecl	"* sy_tab [ ] = { ""y0"" , ""y1"" , ""m0"" , ""m1"" }"		6687260	0					
ANR	6687278	IdentifierDeclType	const char * [ ]		6687260	0					
ANR	6687279	Identifier	sy_tab		6687260	1					
ANR	6687280	AssignmentExpression	"* sy_tab [ ] = { ""y0"" , ""y1"" , ""m0"" , ""m1"" }"		6687260	2		=			
ANR	6687281	Identifier	sy_tab		6687260	0					
ANR	6687282	InitializerList	"""y0"""		6687260	1					
ANR	6687283	PrimaryExpression	"""y0"""		6687260	0					
ANR	6687284	PrimaryExpression	"""y1"""		6687260	1					
ANR	6687285	PrimaryExpression	"""m0"""		6687260	2					
ANR	6687286	PrimaryExpression	"""m1"""		6687260	3					
ANR	6687287	IdentifierDeclStatement	fprintf_ftype fprintf_fn = info -> fprintf_func ;	9:2:188:233	6687260	4	True				
ANR	6687288	IdentifierDecl	fprintf_fn = info -> fprintf_func		6687260	0					
ANR	6687289	IdentifierDeclType	fprintf_ftype		6687260	0					
ANR	6687290	Identifier	fprintf_fn		6687260	1					
ANR	6687291	AssignmentExpression	fprintf_fn = info -> fprintf_func		6687260	2		=			
ANR	6687292	Identifier	fprintf_fn		6687260	0					
ANR	6687293	PtrMemberAccess	info -> fprintf_func		6687260	1					
ANR	6687294	Identifier	info		6687260	0					
ANR	6687295	Identifier	fprintf_func		6687260	1					
ANR	6687296	IdentifierDeclStatement	void * stream = info -> stream ;	11:2:238:265	6687260	5	True				
ANR	6687297	IdentifierDecl	* stream = info -> stream		6687260	0					
ANR	6687298	IdentifierDeclType	void *		6687260	0					
ANR	6687299	Identifier	stream		6687260	1					
ANR	6687300	AssignmentExpression	* stream = info -> stream		6687260	2		=			
ANR	6687301	Identifier	stream		6687260	0					
ANR	6687302	PtrMemberAccess	info -> stream		6687260	1					
ANR	6687303	Identifier	info		6687260	0					
ANR	6687304	Identifier	stream		6687260	1					
ANR	6687305	IdentifierDeclStatement	"unsigned int nib1 , nib2 , nib3 ;"	13:2:270:299	6687260	6	True				
ANR	6687306	IdentifierDecl	nib1		6687260	0					
ANR	6687307	IdentifierDeclType	unsigned int		6687260	0					
ANR	6687308	Identifier	nib1		6687260	1					
ANR	6687309	IdentifierDecl	nib2		6687260	1					
ANR	6687310	IdentifierDeclType	unsigned int		6687260	0					
ANR	6687311	Identifier	nib2		6687260	1					
ANR	6687312	IdentifierDecl	nib3		6687260	2					
ANR	6687313	IdentifierDeclType	unsigned int		6687260	0					
ANR	6687314	Identifier	nib3		6687260	1					
ANR	6687315	IdentifierDeclStatement	"unsigned int altnib1 , nib4 ;"	15:2:304:330	6687260	7	True				
ANR	6687316	IdentifierDecl	altnib1		6687260	0					
ANR	6687317	IdentifierDeclType	unsigned int		6687260	0					
ANR	6687318	Identifier	altnib1		6687260	1					
ANR	6687319	IdentifierDecl	nib4		6687260	1					
ANR	6687320	IdentifierDeclType	unsigned int		6687260	0					
ANR	6687321	Identifier	nib4		6687260	1					
ANR	6687322	IdentifierDeclStatement	const char * dc = NULL ;	17:2:335:356	6687260	8	True				
ANR	6687323	IdentifierDecl	* dc = NULL		6687260	0					
ANR	6687324	IdentifierDeclType	const char *		6687260	0					
ANR	6687325	Identifier	dc		6687260	1					
ANR	6687326	AssignmentExpression	* dc = NULL		6687260	2		=			
ANR	6687327	Identifier	NULL		6687260	0					
ANR	6687328	Identifier	NULL		6687260	1					
ANR	6687329	IdentifierDeclStatement	const sh_opcode_info * op ;	19:2:361:385	6687260	9	True				
ANR	6687330	IdentifierDecl	* op		6687260	0					
ANR	6687331	IdentifierDeclType	const sh_opcode_info *		6687260	0					
ANR	6687332	Identifier	op		6687260	1					
ANR	6687333	IfStatement	if ( ( field_b & 0xe800 ) == 0 )		6687260	10					
ANR	6687334	Condition	( field_b & 0xe800 ) == 0	23:6:396:418	6687260	0	True				
ANR	6687335	EqualityExpression	( field_b & 0xe800 ) == 0		6687260	0		==			
ANR	6687336	BitAndExpression	field_b & 0xe800		6687260	0		&			
ANR	6687337	Identifier	field_b		6687260	0					
ANR	6687338	PrimaryExpression	0xe800		6687260	1					
ANR	6687339	PrimaryExpression	0		6687260	1					
ANR	6687340	CompoundStatement		23:4:364:364	6687260	1					
ANR	6687341	ExpressionStatement	"fprintf_fn ( stream , ""psh%c\\t#%d,"" , field_b & 0x1000 ? 'a' : 'l' , ( field_b >> 4 ) & 127 )"	27:6:435:531	6687260	0	True				
ANR	6687342	CallExpression	"fprintf_fn ( stream , ""psh%c\\t#%d,"" , field_b & 0x1000 ? 'a' : 'l' , ( field_b >> 4 ) & 127 )"		6687260	0					
ANR	6687343	Callee	fprintf_fn		6687260	0					
ANR	6687344	Identifier	fprintf_fn		6687260	0					
ANR	6687345	ArgumentList	stream		6687260	1					
ANR	6687346	Argument	stream		6687260	0					
ANR	6687347	Identifier	stream		6687260	0					
ANR	6687348	Argument	"""psh%c\\t#%d,"""		6687260	1					
ANR	6687349	PrimaryExpression	"""psh%c\\t#%d,"""		6687260	0					
ANR	6687350	Argument	field_b & 0x1000 ? 'a' : 'l'		6687260	2					
ANR	6687351	ConditionalExpression	field_b & 0x1000 ? 'a' : 'l'		6687260	0					
ANR	6687352	Condition	field_b & 0x1000		6687260	0					
ANR	6687353	BitAndExpression	field_b & 0x1000		6687260	0		&			
ANR	6687354	Identifier	field_b		6687260	0					
ANR	6687355	PrimaryExpression	0x1000		6687260	1					
ANR	6687356	PrimaryExpression	'a'		6687260	1					
ANR	6687357	PrimaryExpression	'l'		6687260	2					
ANR	6687358	Argument	( field_b >> 4 ) & 127		6687260	3					
ANR	6687359	BitAndExpression	( field_b >> 4 ) & 127		6687260	0		&			
ANR	6687360	ShiftExpression	field_b >> 4		6687260	0		>>			
ANR	6687361	Identifier	field_b		6687260	0					
ANR	6687362	PrimaryExpression	4		6687260	1					
ANR	6687363	PrimaryExpression	127		6687260	1					
ANR	6687364	ExpressionStatement	"print_dsp_reg ( field_b & 0xf , fprintf_fn , stream )"	33:6:540:589	6687260	1	True				
ANR	6687365	CallExpression	"print_dsp_reg ( field_b & 0xf , fprintf_fn , stream )"		6687260	0					
ANR	6687366	Callee	print_dsp_reg		6687260	0					
ANR	6687367	Identifier	print_dsp_reg		6687260	0					
ANR	6687368	ArgumentList	field_b & 0xf		6687260	1					
ANR	6687369	Argument	field_b & 0xf		6687260	0					
ANR	6687370	BitAndExpression	field_b & 0xf		6687260	0		&			
ANR	6687371	Identifier	field_b		6687260	0					
ANR	6687372	PrimaryExpression	0xf		6687260	1					
ANR	6687373	Argument	fprintf_fn		6687260	1					
ANR	6687374	Identifier	fprintf_fn		6687260	0					
ANR	6687375	Argument	stream		6687260	2					
ANR	6687376	Identifier	stream		6687260	0					
ANR	6687377	ReturnStatement	return ;	35:6:598:604	6687260	2	True				
ANR	6687378	IfStatement	if ( ( field_b & 0xc000 ) == 0x4000 && ( field_b & 0x3000 ) != 0x1000 )		6687260	11					
ANR	6687379	Condition	( field_b & 0xc000 ) == 0x4000 && ( field_b & 0x3000 ) != 0x1000	39:6:620:679	6687260	0	True				
ANR	6687380	AndExpression	( field_b & 0xc000 ) == 0x4000 && ( field_b & 0x3000 ) != 0x1000		6687260	0		&&			
ANR	6687381	EqualityExpression	( field_b & 0xc000 ) == 0x4000		6687260	0		==			
ANR	6687382	BitAndExpression	field_b & 0xc000		6687260	0		&			
ANR	6687383	Identifier	field_b		6687260	0					
ANR	6687384	PrimaryExpression	0xc000		6687260	1					
ANR	6687385	PrimaryExpression	0x4000		6687260	1					
ANR	6687386	EqualityExpression	( field_b & 0x3000 ) != 0x1000		6687260	1		!=			
ANR	6687387	BitAndExpression	field_b & 0x3000		6687260	0		&			
ANR	6687388	Identifier	field_b		6687260	0					
ANR	6687389	PrimaryExpression	0x3000		6687260	1					
ANR	6687390	PrimaryExpression	0x1000		6687260	1					
ANR	6687391	CompoundStatement		47:13:836:885	6687260	1					
ANR	6687392	Statement	static	43:6:696:701	6687260	0	True				
ANR	6687393	IdentifierDeclStatement	"const char * du_tab [ ] = { ""x0"" , ""y0"" , ""a0"" , ""a1"" } ;"	43:13:703:752	6687260	1	True				
ANR	6687394	IdentifierDecl	"* du_tab [ ] = { ""x0"" , ""y0"" , ""a0"" , ""a1"" }"		6687260	0					
ANR	6687395	IdentifierDeclType	const char * [ ]		6687260	0					
ANR	6687396	Identifier	du_tab		6687260	1					
ANR	6687397	AssignmentExpression	"* du_tab [ ] = { ""x0"" , ""y0"" , ""a0"" , ""a1"" }"		6687260	2		=			
ANR	6687398	Identifier	du_tab		6687260	0					
ANR	6687399	InitializerList	"""x0"""		6687260	1					
ANR	6687400	PrimaryExpression	"""x0"""		6687260	0					
ANR	6687401	PrimaryExpression	"""y0"""		6687260	1					
ANR	6687402	PrimaryExpression	"""a0"""		6687260	2					
ANR	6687403	PrimaryExpression	"""a1"""		6687260	3					
ANR	6687404	Statement	static	45:6:761:766	6687260	2	True				
ANR	6687405	IdentifierDeclStatement	"const char * se_tab [ ] = { ""x0"" , ""x1"" , ""y0"" , ""a1"" } ;"	45:13:768:817	6687260	3	True				
ANR	6687406	IdentifierDecl	"* se_tab [ ] = { ""x0"" , ""x1"" , ""y0"" , ""a1"" }"		6687260	0					
ANR	6687407	IdentifierDeclType	const char * [ ]		6687260	0					
ANR	6687408	Identifier	se_tab		6687260	1					
ANR	6687409	AssignmentExpression	"* se_tab [ ] = { ""x0"" , ""x1"" , ""y0"" , ""a1"" }"		6687260	2		=			
ANR	6687410	Identifier	se_tab		6687260	0					
ANR	6687411	InitializerList	"""x0"""		6687260	1					
ANR	6687412	PrimaryExpression	"""x0"""		6687260	0					
ANR	6687413	PrimaryExpression	"""x1"""		6687260	1					
ANR	6687414	PrimaryExpression	"""y0"""		6687260	2					
ANR	6687415	PrimaryExpression	"""a1"""		6687260	3					
ANR	6687416	Statement	static	47:6:826:831	6687260	4	True				
ANR	6687417	IdentifierDeclStatement	"const char * sf_tab [ ] = { ""y0"" , ""y1"" , ""x0"" , ""a1"" } ;"	47:13:833:882	6687260	5	True				
ANR	6687418	IdentifierDecl	"* sf_tab [ ] = { ""y0"" , ""y1"" , ""x0"" , ""a1"" }"		6687260	0					
ANR	6687419	IdentifierDeclType	const char * [ ]		6687260	0					
ANR	6687420	Identifier	sf_tab		6687260	1					
ANR	6687421	AssignmentExpression	"* sf_tab [ ] = { ""y0"" , ""y1"" , ""x0"" , ""a1"" }"		6687260	2		=			
ANR	6687422	Identifier	sf_tab		6687260	0					
ANR	6687423	InitializerList	"""y0"""		6687260	1					
ANR	6687424	PrimaryExpression	"""y0"""		6687260	0					
ANR	6687425	PrimaryExpression	"""y1"""		6687260	1					
ANR	6687426	PrimaryExpression	"""x0"""		6687260	2					
ANR	6687427	PrimaryExpression	"""a1"""		6687260	3					
ANR	6687428	Statement	static	49:6:891:896	6687260	6	True				
ANR	6687429	IdentifierDeclStatement	"const char * sg_tab [ ] = { ""m0"" , ""m1"" , ""a0"" , ""a1"" } ;"	49:13:898:947	6687260	7	True				
ANR	6687430	IdentifierDecl	"* sg_tab [ ] = { ""m0"" , ""m1"" , ""a0"" , ""a1"" }"		6687260	0					
ANR	6687431	IdentifierDeclType	const char * [ ]		6687260	0					
ANR	6687432	Identifier	sg_tab		6687260	1					
ANR	6687433	AssignmentExpression	"* sg_tab [ ] = { ""m0"" , ""m1"" , ""a0"" , ""a1"" }"		6687260	2		=			
ANR	6687434	Identifier	sg_tab		6687260	0					
ANR	6687435	InitializerList	"""m0"""		6687260	1					
ANR	6687436	PrimaryExpression	"""m0"""		6687260	0					
ANR	6687437	PrimaryExpression	"""m1"""		6687260	1					
ANR	6687438	PrimaryExpression	"""a0"""		6687260	2					
ANR	6687439	PrimaryExpression	"""a1"""		6687260	3					
ANR	6687440	IfStatement	if ( field_b & 0x2000 )		6687260	8					
ANR	6687441	Condition	field_b & 0x2000	53:10:962:977	6687260	0	True				
ANR	6687442	BitAndExpression	field_b & 0x2000		6687260	0		&			
ANR	6687443	Identifier	field_b		6687260	0					
ANR	6687444	PrimaryExpression	0x2000		6687260	1					
ANR	6687445	CompoundStatement		53:1:920:920	6687260	1					
ANR	6687446	ExpressionStatement	"fprintf_fn ( stream , ""p%s %s,%s,%s\\t"" , ( field_b & 0x1000 ) ? ""add"" : ""sub"" , sx_tab [ ( field_b >> 6 ) & 3 ] , sy_tab [ ( field_b >> 4 ) & 3 ] , du_tab [ ( field_b >> 0 ) & 3 ] )"	57:3:988:1181	6687260	0	True				
ANR	6687447	CallExpression	"fprintf_fn ( stream , ""p%s %s,%s,%s\\t"" , ( field_b & 0x1000 ) ? ""add"" : ""sub"" , sx_tab [ ( field_b >> 6 ) & 3 ] , sy_tab [ ( field_b >> 4 ) & 3 ] , du_tab [ ( field_b >> 0 ) & 3 ] )"		6687260	0					
ANR	6687448	Callee	fprintf_fn		6687260	0					
ANR	6687449	Identifier	fprintf_fn		6687260	0					
ANR	6687450	ArgumentList	stream		6687260	1					
ANR	6687451	Argument	stream		6687260	0					
ANR	6687452	Identifier	stream		6687260	0					
ANR	6687453	Argument	"""p%s %s,%s,%s\\t"""		6687260	1					
ANR	6687454	PrimaryExpression	"""p%s %s,%s,%s\\t"""		6687260	0					
ANR	6687455	Argument	"( field_b & 0x1000 ) ? ""add"" : ""sub"""		6687260	2					
ANR	6687456	ConditionalExpression	"( field_b & 0x1000 ) ? ""add"" : ""sub"""		6687260	0					
ANR	6687457	Condition	field_b & 0x1000		6687260	0					
ANR	6687458	BitAndExpression	field_b & 0x1000		6687260	0		&			
ANR	6687459	Identifier	field_b		6687260	0					
ANR	6687460	PrimaryExpression	0x1000		6687260	1					
ANR	6687461	PrimaryExpression	"""add"""		6687260	1					
ANR	6687462	PrimaryExpression	"""sub"""		6687260	2					
ANR	6687463	Argument	sx_tab [ ( field_b >> 6 ) & 3 ]		6687260	3					
ANR	6687464	ArrayIndexing	sx_tab [ ( field_b >> 6 ) & 3 ]		6687260	0					
ANR	6687465	Identifier	sx_tab		6687260	0					
ANR	6687466	BitAndExpression	( field_b >> 6 ) & 3		6687260	1		&			
ANR	6687467	ShiftExpression	field_b >> 6		6687260	0		>>			
ANR	6687468	Identifier	field_b		6687260	0					
ANR	6687469	PrimaryExpression	6		6687260	1					
ANR	6687470	PrimaryExpression	3		6687260	1					
ANR	6687471	Argument	sy_tab [ ( field_b >> 4 ) & 3 ]		6687260	4					
ANR	6687472	ArrayIndexing	sy_tab [ ( field_b >> 4 ) & 3 ]		6687260	0					
ANR	6687473	Identifier	sy_tab		6687260	0					
ANR	6687474	BitAndExpression	( field_b >> 4 ) & 3		6687260	1		&			
ANR	6687475	ShiftExpression	field_b >> 4		6687260	0		>>			
ANR	6687476	Identifier	field_b		6687260	0					
ANR	6687477	PrimaryExpression	4		6687260	1					
ANR	6687478	PrimaryExpression	3		6687260	1					
ANR	6687479	Argument	du_tab [ ( field_b >> 0 ) & 3 ]		6687260	5					
ANR	6687480	ArrayIndexing	du_tab [ ( field_b >> 0 ) & 3 ]		6687260	0					
ANR	6687481	Identifier	du_tab		6687260	0					
ANR	6687482	BitAndExpression	( field_b >> 0 ) & 3		6687260	1		&			
ANR	6687483	ShiftExpression	field_b >> 0		6687260	0		>>			
ANR	6687484	Identifier	field_b		6687260	0					
ANR	6687485	PrimaryExpression	0		6687260	1					
ANR	6687486	PrimaryExpression	3		6687260	1					
ANR	6687487	ElseStatement	else		6687260	0					
ANR	6687488	IfStatement	if ( ( field_b & 0xf0 ) == 0x10 && info -> mach != bfd_mach_sh_dsp && info -> mach != bfd_mach_sh3_dsp )		6687260	0					
ANR	6687489	Condition	( field_b & 0xf0 ) == 0x10 && info -> mach != bfd_mach_sh_dsp && info -> mach != bfd_mach_sh3_dsp	69:15:1203:1311	6687260	0	True				
ANR	6687490	AndExpression	( field_b & 0xf0 ) == 0x10 && info -> mach != bfd_mach_sh_dsp && info -> mach != bfd_mach_sh3_dsp		6687260	0		&&			
ANR	6687491	EqualityExpression	( field_b & 0xf0 ) == 0x10		6687260	0		==			
ANR	6687492	BitAndExpression	field_b & 0xf0		6687260	0		&			
ANR	6687493	Identifier	field_b		6687260	0					
ANR	6687494	PrimaryExpression	0xf0		6687260	1					
ANR	6687495	PrimaryExpression	0x10		6687260	1					
ANR	6687496	AndExpression	info -> mach != bfd_mach_sh_dsp && info -> mach != bfd_mach_sh3_dsp		6687260	1		&&			
ANR	6687497	EqualityExpression	info -> mach != bfd_mach_sh_dsp		6687260	0		!=			
ANR	6687498	PtrMemberAccess	info -> mach		6687260	0					
ANR	6687499	Identifier	info		6687260	0					
ANR	6687500	Identifier	mach		6687260	1					
ANR	6687501	Identifier	bfd_mach_sh_dsp		6687260	1					
ANR	6687502	EqualityExpression	info -> mach != bfd_mach_sh3_dsp		6687260	1		!=			
ANR	6687503	PtrMemberAccess	info -> mach		6687260	0					
ANR	6687504	Identifier	info		6687260	0					
ANR	6687505	Identifier	mach		6687260	1					
ANR	6687506	Identifier	bfd_mach_sh3_dsp		6687260	1					
ANR	6687507	CompoundStatement		73:1:1254:1254	6687260	1					
ANR	6687508	ExpressionStatement	"fprintf_fn ( stream , ""pclr %s \\t"" , du_tab [ ( field_b >> 0 ) & 3 ] )"	77:3:1322:1383	6687260	0	True				
ANR	6687509	CallExpression	"fprintf_fn ( stream , ""pclr %s \\t"" , du_tab [ ( field_b >> 0 ) & 3 ] )"		6687260	0					
ANR	6687510	Callee	fprintf_fn		6687260	0					
ANR	6687511	Identifier	fprintf_fn		6687260	0					
ANR	6687512	ArgumentList	stream		6687260	1					
ANR	6687513	Argument	stream		6687260	0					
ANR	6687514	Identifier	stream		6687260	0					
ANR	6687515	Argument	"""pclr %s \\t"""		6687260	1					
ANR	6687516	PrimaryExpression	"""pclr %s \\t"""		6687260	0					
ANR	6687517	Argument	du_tab [ ( field_b >> 0 ) & 3 ]		6687260	2					
ANR	6687518	ArrayIndexing	du_tab [ ( field_b >> 0 ) & 3 ]		6687260	0					
ANR	6687519	Identifier	du_tab		6687260	0					
ANR	6687520	BitAndExpression	( field_b >> 0 ) & 3		6687260	1		&			
ANR	6687521	ShiftExpression	field_b >> 0		6687260	0		>>			
ANR	6687522	Identifier	field_b		6687260	0					
ANR	6687523	PrimaryExpression	0		6687260	1					
ANR	6687524	PrimaryExpression	3		6687260	1					
ANR	6687525	ElseStatement	else		6687260	0					
ANR	6687526	IfStatement	if ( ( field_b & 0xf3 ) != 0 )		6687260	0					
ANR	6687527	Condition	( field_b & 0xf3 ) != 0	81:15:1405:1425	6687260	0	True				
ANR	6687528	EqualityExpression	( field_b & 0xf3 ) != 0		6687260	0		!=			
ANR	6687529	BitAndExpression	field_b & 0xf3		6687260	0		&			
ANR	6687530	Identifier	field_b		6687260	0					
ANR	6687531	PrimaryExpression	0xf3		6687260	1					
ANR	6687532	PrimaryExpression	0		6687260	1					
ANR	6687533	CompoundStatement		81:1:1368:1368	6687260	1					
ANR	6687534	ExpressionStatement	"fprintf_fn ( stream , "".word 0x%x\\t"" , field_b )"	85:3:1436:1480	6687260	0	True				
ANR	6687535	CallExpression	"fprintf_fn ( stream , "".word 0x%x\\t"" , field_b )"		6687260	0					
ANR	6687536	Callee	fprintf_fn		6687260	0					
ANR	6687537	Identifier	fprintf_fn		6687260	0					
ANR	6687538	ArgumentList	stream		6687260	1					
ANR	6687539	Argument	stream		6687260	0					
ANR	6687540	Identifier	stream		6687260	0					
ANR	6687541	Argument	""".word 0x%x\\t"""		6687260	1					
ANR	6687542	PrimaryExpression	""".word 0x%x\\t"""		6687260	0					
ANR	6687543	Argument	field_b		6687260	2					
ANR	6687544	Identifier	field_b		6687260	0					
ANR	6687545	ExpressionStatement	"fprintf_fn ( stream , ""pmuls%c%s,%s,%s"" , field_b & 0x2000 ? ' ' : '\\t' , se_tab [ ( field_b >> 10 ) & 3 ] , sf_tab [ ( field_b >> 8 ) & 3 ] , sg_tab [ ( field_b >> 2 ) & 3 ] )"	89:6:1493:1669	6687260	9	True				
ANR	6687546	CallExpression	"fprintf_fn ( stream , ""pmuls%c%s,%s,%s"" , field_b & 0x2000 ? ' ' : '\\t' , se_tab [ ( field_b >> 10 ) & 3 ] , sf_tab [ ( field_b >> 8 ) & 3 ] , sg_tab [ ( field_b >> 2 ) & 3 ] )"		6687260	0					
ANR	6687547	Callee	fprintf_fn		6687260	0					
ANR	6687548	Identifier	fprintf_fn		6687260	0					
ANR	6687549	ArgumentList	stream		6687260	1					
ANR	6687550	Argument	stream		6687260	0					
ANR	6687551	Identifier	stream		6687260	0					
ANR	6687552	Argument	"""pmuls%c%s,%s,%s"""		6687260	1					
ANR	6687553	PrimaryExpression	"""pmuls%c%s,%s,%s"""		6687260	0					
ANR	6687554	Argument	field_b & 0x2000 ? ' ' : '\\t'		6687260	2					
ANR	6687555	ConditionalExpression	field_b & 0x2000 ? ' ' : '\\t'		6687260	0					
ANR	6687556	Condition	field_b & 0x2000		6687260	0					
ANR	6687557	BitAndExpression	field_b & 0x2000		6687260	0		&			
ANR	6687558	Identifier	field_b		6687260	0					
ANR	6687559	PrimaryExpression	0x2000		6687260	1					
ANR	6687560	PrimaryExpression	' '		6687260	1					
ANR	6687561	PrimaryExpression	'\\t'		6687260	2					
ANR	6687562	Argument	se_tab [ ( field_b >> 10 ) & 3 ]		6687260	3					
ANR	6687563	ArrayIndexing	se_tab [ ( field_b >> 10 ) & 3 ]		6687260	0					
ANR	6687564	Identifier	se_tab		6687260	0					
ANR	6687565	BitAndExpression	( field_b >> 10 ) & 3		6687260	1		&			
ANR	6687566	ShiftExpression	field_b >> 10		6687260	0		>>			
ANR	6687567	Identifier	field_b		6687260	0					
ANR	6687568	PrimaryExpression	10		6687260	1					
ANR	6687569	PrimaryExpression	3		6687260	1					
ANR	6687570	Argument	sf_tab [ ( field_b >> 8 ) & 3 ]		6687260	4					
ANR	6687571	ArrayIndexing	sf_tab [ ( field_b >> 8 ) & 3 ]		6687260	0					
ANR	6687572	Identifier	sf_tab		6687260	0					
ANR	6687573	BitAndExpression	( field_b >> 8 ) & 3		6687260	1		&			
ANR	6687574	ShiftExpression	field_b >> 8		6687260	0		>>			
ANR	6687575	Identifier	field_b		6687260	0					
ANR	6687576	PrimaryExpression	8		6687260	1					
ANR	6687577	PrimaryExpression	3		6687260	1					
ANR	6687578	Argument	sg_tab [ ( field_b >> 2 ) & 3 ]		6687260	5					
ANR	6687579	ArrayIndexing	sg_tab [ ( field_b >> 2 ) & 3 ]		6687260	0					
ANR	6687580	Identifier	sg_tab		6687260	0					
ANR	6687581	BitAndExpression	( field_b >> 2 ) & 3		6687260	1		&			
ANR	6687582	ShiftExpression	field_b >> 2		6687260	0		>>			
ANR	6687583	Identifier	field_b		6687260	0					
ANR	6687584	PrimaryExpression	2		6687260	1					
ANR	6687585	PrimaryExpression	3		6687260	1					
ANR	6687586	ReturnStatement	return ;	99:6:1678:1684	6687260	10	True				
ANR	6687587	ExpressionStatement	nib1 = PPIC	105:2:1698:1709	6687260	12	True				
ANR	6687588	AssignmentExpression	nib1 = PPIC		6687260	0		=			
ANR	6687589	Identifier	nib1		6687260	0					
ANR	6687590	Identifier	PPIC		6687260	1					
ANR	6687591	ExpressionStatement	nib2 = field_b >> 12 & 0xf	107:2:1714:1740	6687260	13	True				
ANR	6687592	AssignmentExpression	nib2 = field_b >> 12 & 0xf		6687260	0		=			
ANR	6687593	Identifier	nib2		6687260	0					
ANR	6687594	BitAndExpression	field_b >> 12 & 0xf		6687260	1		&			
ANR	6687595	ShiftExpression	field_b >> 12		6687260	0		>>			
ANR	6687596	Identifier	field_b		6687260	0					
ANR	6687597	PrimaryExpression	12		6687260	1					
ANR	6687598	PrimaryExpression	0xf		6687260	1					
ANR	6687599	ExpressionStatement	nib3 = field_b >> 8 & 0xf	109:2:1745:1770	6687260	14	True				
ANR	6687600	AssignmentExpression	nib3 = field_b >> 8 & 0xf		6687260	0		=			
ANR	6687601	Identifier	nib3		6687260	0					
ANR	6687602	BitAndExpression	field_b >> 8 & 0xf		6687260	1		&			
ANR	6687603	ShiftExpression	field_b >> 8		6687260	0		>>			
ANR	6687604	Identifier	field_b		6687260	0					
ANR	6687605	PrimaryExpression	8		6687260	1					
ANR	6687606	PrimaryExpression	0xf		6687260	1					
ANR	6687607	ExpressionStatement	nib4 = field_b >> 4 & 0xf	111:2:1775:1800	6687260	15	True				
ANR	6687608	AssignmentExpression	nib4 = field_b >> 4 & 0xf		6687260	0		=			
ANR	6687609	Identifier	nib4		6687260	0					
ANR	6687610	BitAndExpression	field_b >> 4 & 0xf		6687260	1		&			
ANR	6687611	ShiftExpression	field_b >> 4		6687260	0		>>			
ANR	6687612	Identifier	field_b		6687260	0					
ANR	6687613	PrimaryExpression	4		6687260	1					
ANR	6687614	PrimaryExpression	0xf		6687260	1					
ANR	6687615	SwitchStatement	switch ( nib3 & 0x3 )		6687260	16					
ANR	6687616	Condition	nib3 & 0x3	113:10:1813:1822	6687260	0	True				
ANR	6687617	BitAndExpression	nib3 & 0x3		6687260	0		&			
ANR	6687618	Identifier	nib3		6687260	0					
ANR	6687619	PrimaryExpression	0x3		6687260	1					
ANR	6687620	CompoundStatement		113:4:1768:1768	6687260	1					
ANR	6687621	Label	case 0 :	117:4:1837:1843	6687260	0	True				
ANR	6687622	ExpressionStatement	"dc = """""	119:6:1852:1859	6687260	1	True				
ANR	6687623	AssignmentExpression	"dc = """""		6687260	0		=			
ANR	6687624	Identifier	dc		6687260	0					
ANR	6687625	PrimaryExpression	""""""		6687260	1					
ANR	6687626	ExpressionStatement	nib1 = PPI3	121:6:1868:1879	6687260	2	True				
ANR	6687627	AssignmentExpression	nib1 = PPI3		6687260	0		=			
ANR	6687628	Identifier	nib1		6687260	0					
ANR	6687629	Identifier	PPI3		6687260	1					
ANR	6687630	BreakStatement	break ;	123:6:1888:1893	6687260	3	True				
ANR	6687631	Label	case 1 :	125:4:1900:1906	6687260	4	True				
ANR	6687632	ExpressionStatement	"dc = """""	127:6:1915:1922	6687260	5	True				
ANR	6687633	AssignmentExpression	"dc = """""		6687260	0		=			
ANR	6687634	Identifier	dc		6687260	0					
ANR	6687635	PrimaryExpression	""""""		6687260	1					
ANR	6687636	BreakStatement	break ;	129:6:1931:1936	6687260	6	True				
ANR	6687637	Label	case 2 :	131:4:1943:1949	6687260	7	True				
ANR	6687638	ExpressionStatement	"dc = ""dct """	133:6:1958:1969	6687260	8	True				
ANR	6687639	AssignmentExpression	"dc = ""dct """		6687260	0		=			
ANR	6687640	Identifier	dc		6687260	0					
ANR	6687641	PrimaryExpression	"""dct """		6687260	1					
ANR	6687642	ExpressionStatement	nib3 -= 1	135:6:1978:1987	6687260	9	True				
ANR	6687643	AssignmentExpression	nib3 -= 1		6687260	0		-=			
ANR	6687644	Identifier	nib3		6687260	0					
ANR	6687645	PrimaryExpression	1		6687260	1					
ANR	6687646	BreakStatement	break ;	137:6:1996:2001	6687260	10	True				
ANR	6687647	Label	case 3 :	139:4:2008:2014	6687260	11	True				
ANR	6687648	ExpressionStatement	"dc = ""dcf """	141:6:2023:2034	6687260	12	True				
ANR	6687649	AssignmentExpression	"dc = ""dcf """		6687260	0		=			
ANR	6687650	Identifier	dc		6687260	0					
ANR	6687651	PrimaryExpression	"""dcf """		6687260	1					
ANR	6687652	ExpressionStatement	nib3 -= 2	143:6:2043:2052	6687260	13	True				
ANR	6687653	AssignmentExpression	nib3 -= 2		6687260	0		-=			
ANR	6687654	Identifier	nib3		6687260	0					
ANR	6687655	PrimaryExpression	2		6687260	1					
ANR	6687656	BreakStatement	break ;	145:6:2061:2066	6687260	14	True				
ANR	6687657	IfStatement	if ( nib1 == PPI3 )		6687260	17					
ANR	6687658	Condition	nib1 == PPI3	149:6:2082:2093	6687260	0	True				
ANR	6687659	EqualityExpression	nib1 == PPI3		6687260	0		==			
ANR	6687660	Identifier	nib1		6687260	0					
ANR	6687661	Identifier	PPI3		6687260	1					
ANR	6687662	ExpressionStatement	altnib1 = PPI3NC	151:4:2101:2117	6687260	1	True				
ANR	6687663	AssignmentExpression	altnib1 = PPI3NC		6687260	0		=			
ANR	6687664	Identifier	altnib1		6687260	0					
ANR	6687665	Identifier	PPI3NC		6687260	1					
ANR	6687666	ElseStatement	else		6687260	0					
ANR	6687667	ExpressionStatement	altnib1 = nib1	155:4:2132:2146	6687260	0	True				
ANR	6687668	AssignmentExpression	altnib1 = nib1		6687260	0		=			
ANR	6687669	Identifier	altnib1		6687260	0					
ANR	6687670	Identifier	nib1		6687260	1					
ANR	6687671	ForStatement	for ( op = sh_table ; op -> name ; op ++ )		6687260	18					
ANR	6687672	ForInit	op = sh_table ;	157:7:2156:2169	6687260	0	True				
ANR	6687673	AssignmentExpression	op = sh_table		6687260	0		=			
ANR	6687674	Identifier	op		6687260	0					
ANR	6687675	Identifier	sh_table		6687260	1					
ANR	6687676	Condition	op -> name	157:22:2171:2178	6687260	1	True				
ANR	6687677	PtrMemberAccess	op -> name		6687260	0					
ANR	6687678	Identifier	op		6687260	0					
ANR	6687679	Identifier	name		6687260	1					
ANR	6687680	PostIncDecOperationExpression	op ++	157:32:2181:2184	6687260	2	True				
ANR	6687681	Identifier	op		6687260	0					
ANR	6687682	IncDec	++		6687260	1					
ANR	6687683	CompoundStatement		157:4:2130:2130	6687260	3					
ANR	6687684	IfStatement	if ( ( op -> nibbles [ 1 ] == nib1 || op -> nibbles [ 1 ] == altnib1 ) && op -> nibbles [ 2 ] == nib2 && op -> nibbles [ 3 ] == nib3 )		6687260	0					
ANR	6687685	Condition	( op -> nibbles [ 1 ] == nib1 || op -> nibbles [ 1 ] == altnib1 ) && op -> nibbles [ 2 ] == nib2 && op -> nibbles [ 3 ] == nib3	161:10:2205:2317	6687260	0	True				
ANR	6687686	AndExpression	( op -> nibbles [ 1 ] == nib1 || op -> nibbles [ 1 ] == altnib1 ) && op -> nibbles [ 2 ] == nib2 && op -> nibbles [ 3 ] == nib3		6687260	0		&&			
ANR	6687687	OrExpression	op -> nibbles [ 1 ] == nib1 || op -> nibbles [ 1 ] == altnib1		6687260	0		||			
ANR	6687688	EqualityExpression	op -> nibbles [ 1 ] == nib1		6687260	0		==			
ANR	6687689	ArrayIndexing	op -> nibbles [ 1 ]		6687260	0					
ANR	6687690	PtrMemberAccess	op -> nibbles		6687260	0					
ANR	6687691	Identifier	op		6687260	0					
ANR	6687692	Identifier	nibbles		6687260	1					
ANR	6687693	PrimaryExpression	1		6687260	1					
ANR	6687694	Identifier	nib1		6687260	1					
ANR	6687695	EqualityExpression	op -> nibbles [ 1 ] == altnib1		6687260	1		==			
ANR	6687696	ArrayIndexing	op -> nibbles [ 1 ]		6687260	0					
ANR	6687697	PtrMemberAccess	op -> nibbles		6687260	0					
ANR	6687698	Identifier	op		6687260	0					
ANR	6687699	Identifier	nibbles		6687260	1					
ANR	6687700	PrimaryExpression	1		6687260	1					
ANR	6687701	Identifier	altnib1		6687260	1					
ANR	6687702	AndExpression	op -> nibbles [ 2 ] == nib2 && op -> nibbles [ 3 ] == nib3		6687260	1		&&			
ANR	6687703	EqualityExpression	op -> nibbles [ 2 ] == nib2		6687260	0		==			
ANR	6687704	ArrayIndexing	op -> nibbles [ 2 ]		6687260	0					
ANR	6687705	PtrMemberAccess	op -> nibbles		6687260	0					
ANR	6687706	Identifier	op		6687260	0					
ANR	6687707	Identifier	nibbles		6687260	1					
ANR	6687708	PrimaryExpression	2		6687260	1					
ANR	6687709	Identifier	nib2		6687260	1					
ANR	6687710	EqualityExpression	op -> nibbles [ 3 ] == nib3		6687260	1		==			
ANR	6687711	ArrayIndexing	op -> nibbles [ 3 ]		6687260	0					
ANR	6687712	PtrMemberAccess	op -> nibbles		6687260	0					
ANR	6687713	Identifier	op		6687260	0					
ANR	6687714	Identifier	nibbles		6687260	1					
ANR	6687715	PrimaryExpression	3		6687260	1					
ANR	6687716	Identifier	nib3		6687260	1					
ANR	6687717	CompoundStatement		167:3:2266:2271	6687260	1					
ANR	6687718	IdentifierDeclStatement	int n ;	169:3:2328:2333	6687260	0	True				
ANR	6687719	IdentifierDecl	n		6687260	0					
ANR	6687720	IdentifierDeclType	int		6687260	0					
ANR	6687721	Identifier	n		6687260	1					
ANR	6687722	SwitchStatement	switch ( op -> nibbles [ 4 ] )		6687260	1					
ANR	6687723	Condition	op -> nibbles [ 4 ]	173:11:2349:2362	6687260	0	True				
ANR	6687724	ArrayIndexing	op -> nibbles [ 4 ]		6687260	0					
ANR	6687725	PtrMemberAccess	op -> nibbles		6687260	0					
ANR	6687726	Identifier	op		6687260	0					
ANR	6687727	Identifier	nibbles		6687260	1					
ANR	6687728	PrimaryExpression	4		6687260	1					
ANR	6687729	CompoundStatement		173:5:2309:2309	6687260	1					
ANR	6687730	Label	case HEX_0 :	177:5:2379:2389	6687260	0	True				
ANR	6687731	Identifier	HEX_0		6687260	0					
ANR	6687732	BreakStatement	break ;	179:7:2399:2404	6687260	1	True				
ANR	6687733	Label	case HEX_XX00 :	181:5:2412:2425	6687260	2	True				
ANR	6687734	Identifier	HEX_XX00		6687260	0					
ANR	6687735	IfStatement	if ( ( nib4 & 3 ) != 0 )		6687260	3					
ANR	6687736	Condition	( nib4 & 3 ) != 0	183:11:2439:2453	6687260	0	True				
ANR	6687737	EqualityExpression	( nib4 & 3 ) != 0		6687260	0		!=			
ANR	6687738	BitAndExpression	nib4 & 3		6687260	0		&			
ANR	6687739	Identifier	nib4		6687260	0					
ANR	6687740	PrimaryExpression	3		6687260	1					
ANR	6687741	PrimaryExpression	0		6687260	1					
ANR	6687742	ContinueStatement	continue ;	185:2:2459:2467	6687260	1	True				
ANR	6687743	BreakStatement	break ;	187:7:2477:2482	6687260	4	True				
ANR	6687744	Label	case HEX_1 :	189:5:2490:2500	6687260	5	True				
ANR	6687745	Identifier	HEX_1		6687260	0					
ANR	6687746	IfStatement	if ( ( nib4 & 3 ) != 1 )		6687260	6					
ANR	6687747	Condition	( nib4 & 3 ) != 1	191:11:2514:2528	6687260	0	True				
ANR	6687748	EqualityExpression	( nib4 & 3 ) != 1		6687260	0		!=			
ANR	6687749	BitAndExpression	nib4 & 3		6687260	0		&			
ANR	6687750	Identifier	nib4		6687260	0					
ANR	6687751	PrimaryExpression	3		6687260	1					
ANR	6687752	PrimaryExpression	1		6687260	1					
ANR	6687753	ContinueStatement	continue ;	193:2:2534:2542	6687260	1	True				
ANR	6687754	BreakStatement	break ;	195:7:2552:2557	6687260	7	True				
ANR	6687755	Label	case HEX_00YY :	197:5:2565:2578	6687260	8	True				
ANR	6687756	Identifier	HEX_00YY		6687260	0					
ANR	6687757	IfStatement	if ( ( nib4 & 0xc ) != 0 )		6687260	9					
ANR	6687758	Condition	( nib4 & 0xc ) != 0	199:11:2592:2608	6687260	0	True				
ANR	6687759	EqualityExpression	( nib4 & 0xc ) != 0		6687260	0		!=			
ANR	6687760	BitAndExpression	nib4 & 0xc		6687260	0		&			
ANR	6687761	Identifier	nib4		6687260	0					
ANR	6687762	PrimaryExpression	0xc		6687260	1					
ANR	6687763	PrimaryExpression	0		6687260	1					
ANR	6687764	ContinueStatement	continue ;	201:2:2614:2622	6687260	1	True				
ANR	6687765	BreakStatement	break ;	203:7:2632:2637	6687260	10	True				
ANR	6687766	Label	case HEX_4 :	205:5:2645:2655	6687260	11	True				
ANR	6687767	Identifier	HEX_4		6687260	0					
ANR	6687768	IfStatement	if ( ( nib4 & 0xc ) != 4 )		6687260	12					
ANR	6687769	Condition	( nib4 & 0xc ) != 4	207:11:2669:2685	6687260	0	True				
ANR	6687770	EqualityExpression	( nib4 & 0xc ) != 4		6687260	0		!=			
ANR	6687771	BitAndExpression	nib4 & 0xc		6687260	0		&			
ANR	6687772	Identifier	nib4		6687260	0					
ANR	6687773	PrimaryExpression	0xc		6687260	1					
ANR	6687774	PrimaryExpression	4		6687260	1					
ANR	6687775	ContinueStatement	continue ;	209:2:2691:2699	6687260	1	True				
ANR	6687776	BreakStatement	break ;	211:7:2709:2714	6687260	13	True				
ANR	6687777	Label	default :	213:5:2722:2729	6687260	14	True				
ANR	6687778	Identifier	default		6687260	0					
ANR	6687779	ExpressionStatement	abort ( )	215:7:2739:2747	6687260	15	True				
ANR	6687780	CallExpression	abort ( )		6687260	0					
ANR	6687781	Callee	abort		6687260	0					
ANR	6687782	Identifier	abort		6687260	0					
ANR	6687783	ArgumentList			6687260	1					
ANR	6687784	ExpressionStatement	"fprintf_fn ( stream , ""%s%s\\t"" , dc , op -> name )"	219:3:2761:2804	6687260	2	True				
ANR	6687785	CallExpression	"fprintf_fn ( stream , ""%s%s\\t"" , dc , op -> name )"		6687260	0					
ANR	6687786	Callee	fprintf_fn		6687260	0					
ANR	6687787	Identifier	fprintf_fn		6687260	0					
ANR	6687788	ArgumentList	stream		6687260	1					
ANR	6687789	Argument	stream		6687260	0					
ANR	6687790	Identifier	stream		6687260	0					
ANR	6687791	Argument	"""%s%s\\t"""		6687260	1					
ANR	6687792	PrimaryExpression	"""%s%s\\t"""		6687260	0					
ANR	6687793	Argument	dc		6687260	2					
ANR	6687794	Identifier	dc		6687260	0					
ANR	6687795	Argument	op -> name		6687260	3					
ANR	6687796	PtrMemberAccess	op -> name		6687260	0					
ANR	6687797	Identifier	op		6687260	0					
ANR	6687798	Identifier	name		6687260	1					
ANR	6687799	ForStatement	for ( n = 0 ; n < 3 && op -> arg [ n ] != A_END ; n ++ )		6687260	3					
ANR	6687800	ForInit	n = 0 ;	221:8:2815:2820	6687260	0	True				
ANR	6687801	AssignmentExpression	n = 0		6687260	0		=			
ANR	6687802	Identifier	n		6687260	0					
ANR	6687803	PrimaryExpression	0		6687260	1					
ANR	6687804	Condition	n < 3 && op -> arg [ n ] != A_END	221:15:2822:2849	6687260	1	True				
ANR	6687805	AndExpression	n < 3 && op -> arg [ n ] != A_END		6687260	0		&&			
ANR	6687806	RelationalExpression	n < 3		6687260	0		<			
ANR	6687807	Identifier	n		6687260	0					
ANR	6687808	PrimaryExpression	3		6687260	1					
ANR	6687809	EqualityExpression	op -> arg [ n ] != A_END		6687260	1		!=			
ANR	6687810	ArrayIndexing	op -> arg [ n ]		6687260	0					
ANR	6687811	PtrMemberAccess	op -> arg		6687260	0					
ANR	6687812	Identifier	op		6687260	0					
ANR	6687813	Identifier	arg		6687260	1					
ANR	6687814	Identifier	n		6687260	1					
ANR	6687815	Identifier	A_END		6687260	1					
ANR	6687816	PostIncDecOperationExpression	n ++	221:45:2852:2854	6687260	2	True				
ANR	6687817	Identifier	n		6687260	0					
ANR	6687818	IncDec	++		6687260	1					
ANR	6687819	CompoundStatement		221:5:2801:2801	6687260	3					
ANR	6687820	IfStatement	if ( n && op -> arg [ 1 ] != A_END )		6687260	0					
ANR	6687821	Condition	n && op -> arg [ 1 ] != A_END	225:11:2877:2900	6687260	0	True				
ANR	6687822	AndExpression	n && op -> arg [ 1 ] != A_END		6687260	0		&&			
ANR	6687823	Identifier	n		6687260	0					
ANR	6687824	EqualityExpression	op -> arg [ 1 ] != A_END		6687260	1		!=			
ANR	6687825	ArrayIndexing	op -> arg [ 1 ]		6687260	0					
ANR	6687826	PtrMemberAccess	op -> arg		6687260	0					
ANR	6687827	Identifier	op		6687260	0					
ANR	6687828	Identifier	arg		6687260	1					
ANR	6687829	PrimaryExpression	1		6687260	1					
ANR	6687830	Identifier	A_END		6687260	1					
ANR	6687831	ExpressionStatement	"fprintf_fn ( stream , "","" )"	227:2:2906:2930	6687260	1	True				
ANR	6687832	CallExpression	"fprintf_fn ( stream , "","" )"		6687260	0					
ANR	6687833	Callee	fprintf_fn		6687260	0					
ANR	6687834	Identifier	fprintf_fn		6687260	0					
ANR	6687835	ArgumentList	stream		6687260	1					
ANR	6687836	Argument	stream		6687260	0					
ANR	6687837	Identifier	stream		6687260	0					
ANR	6687838	Argument	""","""		6687260	1					
ANR	6687839	PrimaryExpression	""","""		6687260	0					
ANR	6687840	SwitchStatement	switch ( op -> arg [ n ] )		6687260	1					
ANR	6687841	Condition	op -> arg [ n ]	229:15:2948:2957	6687260	0	True				
ANR	6687842	ArrayIndexing	op -> arg [ n ]		6687260	0					
ANR	6687843	PtrMemberAccess	op -> arg		6687260	0					
ANR	6687844	Identifier	op		6687260	0					
ANR	6687845	Identifier	arg		6687260	1					
ANR	6687846	Identifier	n		6687260	1					
ANR	6687847	CompoundStatement		229:2:2901:2901	6687260	1					
ANR	6687848	Label	case DSP_REG_N :	233:2:2968:2982	6687260	0	True				
ANR	6687849	Identifier	DSP_REG_N		6687260	0					
ANR	6687850	ExpressionStatement	"print_dsp_reg ( field_b & 0xf , fprintf_fn , stream )"	235:4:2989:3038	6687260	1	True				
ANR	6687851	CallExpression	"print_dsp_reg ( field_b & 0xf , fprintf_fn , stream )"		6687260	0					
ANR	6687852	Callee	print_dsp_reg		6687260	0					
ANR	6687853	Identifier	print_dsp_reg		6687260	0					
ANR	6687854	ArgumentList	field_b & 0xf		6687260	1					
ANR	6687855	Argument	field_b & 0xf		6687260	0					
ANR	6687856	BitAndExpression	field_b & 0xf		6687260	0		&			
ANR	6687857	Identifier	field_b		6687260	0					
ANR	6687858	PrimaryExpression	0xf		6687260	1					
ANR	6687859	Argument	fprintf_fn		6687260	1					
ANR	6687860	Identifier	fprintf_fn		6687260	0					
ANR	6687861	Argument	stream		6687260	2					
ANR	6687862	Identifier	stream		6687260	0					
ANR	6687863	BreakStatement	break ;	237:4:3045:3050	6687260	2	True				
ANR	6687864	Label	case DSP_REG_X :	239:2:3055:3069	6687260	3	True				
ANR	6687865	Identifier	DSP_REG_X		6687260	0					
ANR	6687866	ExpressionStatement	"fprintf_fn ( stream , sx_tab [ ( field_b >> 6 ) & 3 ] )"	241:4:3076:3123	6687260	4	True				
ANR	6687867	CallExpression	"fprintf_fn ( stream , sx_tab [ ( field_b >> 6 ) & 3 ] )"		6687260	0					
ANR	6687868	Callee	fprintf_fn		6687260	0					
ANR	6687869	Identifier	fprintf_fn		6687260	0					
ANR	6687870	ArgumentList	stream		6687260	1					
ANR	6687871	Argument	stream		6687260	0					
ANR	6687872	Identifier	stream		6687260	0					
ANR	6687873	Argument	sx_tab [ ( field_b >> 6 ) & 3 ]		6687260	1					
ANR	6687874	ArrayIndexing	sx_tab [ ( field_b >> 6 ) & 3 ]		6687260	0					
ANR	6687875	Identifier	sx_tab		6687260	0					
ANR	6687876	BitAndExpression	( field_b >> 6 ) & 3		6687260	1		&			
ANR	6687877	ShiftExpression	field_b >> 6		6687260	0		>>			
ANR	6687878	Identifier	field_b		6687260	0					
ANR	6687879	PrimaryExpression	6		6687260	1					
ANR	6687880	PrimaryExpression	3		6687260	1					
ANR	6687881	BreakStatement	break ;	243:4:3130:3135	6687260	5	True				
ANR	6687882	Label	case DSP_REG_Y :	245:2:3140:3154	6687260	6	True				
ANR	6687883	Identifier	DSP_REG_Y		6687260	0					
ANR	6687884	ExpressionStatement	"fprintf_fn ( stream , sy_tab [ ( field_b >> 4 ) & 3 ] )"	247:4:3161:3208	6687260	7	True				
ANR	6687885	CallExpression	"fprintf_fn ( stream , sy_tab [ ( field_b >> 4 ) & 3 ] )"		6687260	0					
ANR	6687886	Callee	fprintf_fn		6687260	0					
ANR	6687887	Identifier	fprintf_fn		6687260	0					
ANR	6687888	ArgumentList	stream		6687260	1					
ANR	6687889	Argument	stream		6687260	0					
ANR	6687890	Identifier	stream		6687260	0					
ANR	6687891	Argument	sy_tab [ ( field_b >> 4 ) & 3 ]		6687260	1					
ANR	6687892	ArrayIndexing	sy_tab [ ( field_b >> 4 ) & 3 ]		6687260	0					
ANR	6687893	Identifier	sy_tab		6687260	0					
ANR	6687894	BitAndExpression	( field_b >> 4 ) & 3		6687260	1		&			
ANR	6687895	ShiftExpression	field_b >> 4		6687260	0		>>			
ANR	6687896	Identifier	field_b		6687260	0					
ANR	6687897	PrimaryExpression	4		6687260	1					
ANR	6687898	PrimaryExpression	3		6687260	1					
ANR	6687899	BreakStatement	break ;	249:4:3215:3220	6687260	8	True				
ANR	6687900	Label	case A_MACH :	251:2:3225:3236	6687260	9	True				
ANR	6687901	Identifier	A_MACH		6687260	0					
ANR	6687902	ExpressionStatement	"fprintf_fn ( stream , ""mach"" )"	253:4:3243:3270	6687260	10	True				
ANR	6687903	CallExpression	"fprintf_fn ( stream , ""mach"" )"		6687260	0					
ANR	6687904	Callee	fprintf_fn		6687260	0					
ANR	6687905	Identifier	fprintf_fn		6687260	0					
ANR	6687906	ArgumentList	stream		6687260	1					
ANR	6687907	Argument	stream		6687260	0					
ANR	6687908	Identifier	stream		6687260	0					
ANR	6687909	Argument	"""mach"""		6687260	1					
ANR	6687910	PrimaryExpression	"""mach"""		6687260	0					
ANR	6687911	BreakStatement	break ;	255:4:3277:3282	6687260	11	True				
ANR	6687912	Label	case A_MACL :	257:2:3287:3298	6687260	12	True				
ANR	6687913	Identifier	A_MACL		6687260	0					
ANR	6687914	ExpressionStatement	"fprintf_fn ( stream , ""macl"" )"	259:4:3305:3332	6687260	13	True				
ANR	6687915	CallExpression	"fprintf_fn ( stream , ""macl"" )"		6687260	0					
ANR	6687916	Callee	fprintf_fn		6687260	0					
ANR	6687917	Identifier	fprintf_fn		6687260	0					
ANR	6687918	ArgumentList	stream		6687260	1					
ANR	6687919	Argument	stream		6687260	0					
ANR	6687920	Identifier	stream		6687260	0					
ANR	6687921	Argument	"""macl"""		6687260	1					
ANR	6687922	PrimaryExpression	"""macl"""		6687260	0					
ANR	6687923	BreakStatement	break ;	261:4:3339:3344	6687260	14	True				
ANR	6687924	Label	default :	263:2:3349:3356	6687260	15	True				
ANR	6687925	Identifier	default		6687260	0					
ANR	6687926	ExpressionStatement	abort ( )	265:4:3363:3371	6687260	16	True				
ANR	6687927	CallExpression	abort ( )		6687260	0					
ANR	6687928	Callee	abort		6687260	0					
ANR	6687929	Identifier	abort		6687260	0					
ANR	6687930	ArgumentList			6687260	1					
ANR	6687931	ReturnStatement	return ;	271:3:3390:3396	6687260	4	True				
ANR	6687932	ExpressionStatement	"fprintf_fn ( stream , "".word 0x%x"" , field_b )"	279:2:3433:3475	6687260	19	True				
ANR	6687933	CallExpression	"fprintf_fn ( stream , "".word 0x%x"" , field_b )"		6687260	0					
ANR	6687934	Callee	fprintf_fn		6687260	0					
ANR	6687935	Identifier	fprintf_fn		6687260	0					
ANR	6687936	ArgumentList	stream		6687260	1					
ANR	6687937	Argument	stream		6687260	0					
ANR	6687938	Identifier	stream		6687260	0					
ANR	6687939	Argument	""".word 0x%x"""		6687260	1					
ANR	6687940	PrimaryExpression	""".word 0x%x"""		6687260	0					
ANR	6687941	Argument	field_b		6687260	2					
ANR	6687942	Identifier	field_b		6687260	0					
ANR	6687943	Identifier	print_insn_ppi		6687260	1					
ANR	6687944	ParameterList	"int field_b , struct disassemble_info * info"		6687260	2					
ANR	6687945	Parameter	int field_b	1:16:16:26	6687260	0	True				
ANR	6687946	ParameterType	int		6687260	0					
ANR	6687947	Identifier	field_b		6687260	1					
ANR	6687948	Parameter	struct disassemble_info * info	1:29:29:57	6687260	1	True				
ANR	6687949	ParameterType	struct disassemble_info *		6687260	0					
ANR	6687950	Identifier	info		6687260	1					
ANR	6687951	CFGEntryNode	ENTRY		6687260		True				
ANR	6687952	CFGExitNode	EXIT		6687260		True				
ANR	6687953	Symbol	op -> nibbles		6687260						
ANR	6687954	Symbol	* op		6687260						
ANR	6687955	Symbol	info -> stream		6687260						
ANR	6687956	Symbol	info -> fprintf_func		6687260						
ANR	6687957	Symbol	bfd_mach_sh3_dsp		6687260						
ANR	6687958	Symbol	bfd_mach_sh_dsp		6687260						
ANR	6687959	Symbol	* sx_tab		6687260						
ANR	6687960	Symbol	* * op		6687260						
ANR	6687961	Symbol	se_tab		6687260						
ANR	6687962	Symbol	stream		6687260						
ANR	6687963	Symbol	info		6687260						
ANR	6687964	Symbol	* sf_tab		6687260						
ANR	6687965	Symbol	* op -> nibbles		6687260						
ANR	6687966	Symbol	op		6687260						
ANR	6687967	Symbol	NULL		6687260						
ANR	6687968	Symbol	du_tab		6687260						
ANR	6687969	Symbol	* du_tab		6687260						
ANR	6687970	Symbol	fprintf_fn		6687260						
ANR	6687971	Symbol	info -> mach		6687260						
ANR	6687972	Symbol	* se_tab		6687260						
ANR	6687973	Symbol	altnib1		6687260						
ANR	6687974	Symbol	* field_b		6687260						
ANR	6687975	Symbol	sf_tab		6687260						
ANR	6687976	Symbol	* sg_tab		6687260						
ANR	6687977	Symbol	n		6687260						
ANR	6687978	Symbol	sy_tab		6687260						
ANR	6687979	Symbol	PPI3		6687260						
ANR	6687980	Symbol	PPI3NC		6687260						
ANR	6687981	Symbol	op -> name		6687260						
ANR	6687982	Symbol	field_b		6687260						
ANR	6687983	Symbol	nib2		6687260						
ANR	6687984	Symbol	* n		6687260						
ANR	6687985	Symbol	nib1		6687260						
ANR	6687986	Symbol	* info		6687260						
ANR	6687987	Symbol	op -> arg		6687260						
ANR	6687988	Symbol	A_END		6687260						
ANR	6687989	Symbol	sx_tab		6687260						
ANR	6687990	Symbol	nib4		6687260						
ANR	6687991	Symbol	* sy_tab		6687260						
ANR	6687992	Symbol	* op -> arg		6687260						
ANR	6687993	Symbol	nib3		6687260						
ANR	6687994	Symbol	dc		6687260						
ANR	6687995	Symbol	sg_tab		6687260						
ANR	6687996	Symbol	PPIC		6687260						
ANR	6687997	Symbol	sh_table		6687260						
