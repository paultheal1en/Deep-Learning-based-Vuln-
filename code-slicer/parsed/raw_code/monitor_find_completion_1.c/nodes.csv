command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5562257	File	/home/p4ultr4n/workplace/ReVeal/raw_code/monitor_find_completion_1.c								
ANR	5562258	Function	monitor_find_completion	1:0:0:3438							
ANR	5562259	FunctionDef	"monitor_find_completion (Monitor * mon , const char * cmdline)"		5562258	0					
ANR	5562260	CompoundStatement		5:0:109:3438	5562258	0					
ANR	5562261	IdentifierDeclStatement	const char * cmdname ;	7:4:116:135	5562258	0	True				
ANR	5562262	IdentifierDecl	* cmdname		5562258	0					
ANR	5562263	IdentifierDeclType	const char *		5562258	0					
ANR	5562264	Identifier	cmdname		5562258	1					
ANR	5562265	IdentifierDeclStatement	char * args [ MAX_ARGS ] ;	9:4:142:162	5562258	1	True				
ANR	5562266	IdentifierDecl	* args [ MAX_ARGS ]		5562258	0					
ANR	5562267	IdentifierDeclType	char * [ MAX_ARGS ]		5562258	0					
ANR	5562268	Identifier	args		5562258	1					
ANR	5562269	Identifier	MAX_ARGS		5562258	2					
ANR	5562270	IdentifierDeclStatement	"int nb_args , i , len ;"	11:4:169:188	5562258	2	True				
ANR	5562271	IdentifierDecl	nb_args		5562258	0					
ANR	5562272	IdentifierDeclType	int		5562258	0					
ANR	5562273	Identifier	nb_args		5562258	1					
ANR	5562274	IdentifierDecl	i		5562258	1					
ANR	5562275	IdentifierDeclType	int		5562258	0					
ANR	5562276	Identifier	i		5562258	1					
ANR	5562277	IdentifierDecl	len		5562258	2					
ANR	5562278	IdentifierDeclType	int		5562258	0					
ANR	5562279	Identifier	len		5562258	1					
ANR	5562280	IdentifierDeclStatement	"const char * ptype , * str ;"	13:4:195:218	5562258	3	True				
ANR	5562281	IdentifierDecl	* ptype		5562258	0					
ANR	5562282	IdentifierDeclType	const char *		5562258	0					
ANR	5562283	Identifier	ptype		5562258	1					
ANR	5562284	IdentifierDecl	* str		5562258	1					
ANR	5562285	IdentifierDeclType	const char *		5562258	0					
ANR	5562286	Identifier	str		5562258	1					
ANR	5562287	IdentifierDeclStatement	const mon_cmd_t * cmd ;	15:4:225:245	5562258	4	True				
ANR	5562288	IdentifierDecl	* cmd		5562258	0					
ANR	5562289	IdentifierDeclType	const mon_cmd_t *		5562258	0					
ANR	5562290	Identifier	cmd		5562258	1					
ANR	5562291	IdentifierDeclStatement	MonitorBlockComplete mbs ;	17:4:252:276	5562258	5	True				
ANR	5562292	IdentifierDecl	mbs		5562258	0					
ANR	5562293	IdentifierDeclType	MonitorBlockComplete		5562258	0					
ANR	5562294	Identifier	mbs		5562258	1					
ANR	5562295	ExpressionStatement	"parse_cmdline ( cmdline , & nb_args , args )"	21:4:285:323	5562258	6	True				
ANR	5562296	CallExpression	"parse_cmdline ( cmdline , & nb_args , args )"		5562258	0					
ANR	5562297	Callee	parse_cmdline		5562258	0					
ANR	5562298	Identifier	parse_cmdline		5562258	0					
ANR	5562299	ArgumentList	cmdline		5562258	1					
ANR	5562300	Argument	cmdline		5562258	0					
ANR	5562301	Identifier	cmdline		5562258	0					
ANR	5562302	Argument	& nb_args		5562258	1					
ANR	5562303	UnaryOperationExpression	& nb_args		5562258	0					
ANR	5562304	UnaryOperator	&		5562258	0					
ANR	5562305	Identifier	nb_args		5562258	1					
ANR	5562306	Argument	args		5562258	2					
ANR	5562307	Identifier	args		5562258	0					
ANR	5562308	ForStatement	for ( i = 0 ; i < nb_args ; i ++ )		5562258	7					
ANR	5562309	ForInit	i = 0 ;	25:9:360:365	5562258	0	True				
ANR	5562310	AssignmentExpression	i = 0		5562258	0		=			
ANR	5562311	Identifier	i		5562258	0					
ANR	5562312	PrimaryExpression	0		5562258	1					
ANR	5562313	Condition	i < nb_args	25:16:367:377	5562258	1	True				
ANR	5562314	RelationalExpression	i < nb_args		5562258	0		<			
ANR	5562315	Identifier	i		5562258	0					
ANR	5562316	Identifier	nb_args		5562258	1					
ANR	5562317	PostIncDecOperationExpression	i ++	25:29:380:382	5562258	2	True				
ANR	5562318	Identifier	i		5562258	0					
ANR	5562319	IncDec	++		5562258	1					
ANR	5562320	CompoundStatement		21:34:275:275	5562258	3					
ANR	5562321	ExpressionStatement	"monitor_printf ( mon , ""arg%d = '%s'\\n"" , i , args [ i ] )"	27:8:396:445	5562258	0	True				
ANR	5562322	CallExpression	"monitor_printf ( mon , ""arg%d = '%s'\\n"" , i , args [ i ] )"		5562258	0					
ANR	5562323	Callee	monitor_printf		5562258	0					
ANR	5562324	Identifier	monitor_printf		5562258	0					
ANR	5562325	ArgumentList	mon		5562258	1					
ANR	5562326	Argument	mon		5562258	0					
ANR	5562327	Identifier	mon		5562258	0					
ANR	5562328	Argument	"""arg%d = '%s'\\n"""		5562258	1					
ANR	5562329	PrimaryExpression	"""arg%d = '%s'\\n"""		5562258	0					
ANR	5562330	Argument	i		5562258	2					
ANR	5562331	Identifier	i		5562258	0					
ANR	5562332	Argument	args [ i ]		5562258	3					
ANR	5562333	ArrayIndexing	args [ i ]		5562258	0					
ANR	5562334	Identifier	args		5562258	0					
ANR	5562335	Identifier	i		5562258	1					
ANR	5562336	ExpressionStatement	len = strlen ( cmdline )	39:4:561:582	5562258	8	True				
ANR	5562337	AssignmentExpression	len = strlen ( cmdline )		5562258	0		=			
ANR	5562338	Identifier	len		5562258	0					
ANR	5562339	CallExpression	strlen ( cmdline )		5562258	1					
ANR	5562340	Callee	strlen		5562258	0					
ANR	5562341	Identifier	strlen		5562258	0					
ANR	5562342	ArgumentList	cmdline		5562258	1					
ANR	5562343	Argument	cmdline		5562258	0					
ANR	5562344	Identifier	cmdline		5562258	0					
ANR	5562345	IfStatement	if ( len > 0 && qemu_isspace ( cmdline [ len - 1 ] ) )		5562258	9					
ANR	5562346	Condition	len > 0 && qemu_isspace ( cmdline [ len - 1 ] )	41:8:593:633	5562258	0	True				
ANR	5562347	AndExpression	len > 0 && qemu_isspace ( cmdline [ len - 1 ] )		5562258	0		&&			
ANR	5562348	RelationalExpression	len > 0		5562258	0		>			
ANR	5562349	Identifier	len		5562258	0					
ANR	5562350	PrimaryExpression	0		5562258	1					
ANR	5562351	CallExpression	qemu_isspace ( cmdline [ len - 1 ] )		5562258	1					
ANR	5562352	Callee	qemu_isspace		5562258	0					
ANR	5562353	Identifier	qemu_isspace		5562258	0					
ANR	5562354	ArgumentList	cmdline [ len - 1 ]		5562258	1					
ANR	5562355	Argument	cmdline [ len - 1 ]		5562258	0					
ANR	5562356	ArrayIndexing	cmdline [ len - 1 ]		5562258	0					
ANR	5562357	Identifier	cmdline		5562258	0					
ANR	5562358	AdditiveExpression	len - 1		5562258	1		-			
ANR	5562359	Identifier	len		5562258	0					
ANR	5562360	PrimaryExpression	1		5562258	1					
ANR	5562361	CompoundStatement		37:51:526:526	5562258	1					
ANR	5562362	IfStatement	if ( nb_args >= MAX_ARGS )		5562258	0					
ANR	5562363	Condition	nb_args >= MAX_ARGS	43:12:651:669	5562258	0	True				
ANR	5562364	RelationalExpression	nb_args >= MAX_ARGS		5562258	0		>=			
ANR	5562365	Identifier	nb_args		5562258	0					
ANR	5562366	Identifier	MAX_ARGS		5562258	1					
ANR	5562367	CompoundStatement		39:33:562:562	5562258	1					
ANR	5562368	GotoStatement	goto cleanup ;	45:12:687:699	5562258	0	True				
ANR	5562369	Identifier	cleanup		5562258	0					
ANR	5562370	ExpressionStatement	"args [ nb_args ++ ] = g_strdup ( """" )"	49:8:721:751	5562258	1	True				
ANR	5562371	AssignmentExpression	"args [ nb_args ++ ] = g_strdup ( """" )"		5562258	0		=			
ANR	5562372	ArrayIndexing	args [ nb_args ++ ]		5562258	0					
ANR	5562373	Identifier	args		5562258	0					
ANR	5562374	PostIncDecOperationExpression	nb_args ++		5562258	1					
ANR	5562375	Identifier	nb_args		5562258	0					
ANR	5562376	IncDec	++		5562258	1					
ANR	5562377	CallExpression	"g_strdup ( """" )"		5562258	1					
ANR	5562378	Callee	g_strdup		5562258	0					
ANR	5562379	Identifier	g_strdup		5562258	0					
ANR	5562380	ArgumentList	""""""		5562258	1					
ANR	5562381	Argument	""""""		5562258	0					
ANR	5562382	PrimaryExpression	""""""		5562258	0					
ANR	5562383	IfStatement	if ( nb_args <= 1 )		5562258	10					
ANR	5562384	Condition	nb_args <= 1	53:8:769:780	5562258	0	True				
ANR	5562385	RelationalExpression	nb_args <= 1		5562258	0		<=			
ANR	5562386	Identifier	nb_args		5562258	0					
ANR	5562387	PrimaryExpression	1		5562258	1					
ANR	5562388	CompoundStatement		49:22:673:673	5562258	1					
ANR	5562389	IfStatement	if ( nb_args == 0 )		5562258	0					
ANR	5562390	Condition	nb_args == 0	57:12:832:843	5562258	0	True				
ANR	5562391	EqualityExpression	nb_args == 0		5562258	0		==			
ANR	5562392	Identifier	nb_args		5562258	0					
ANR	5562393	PrimaryExpression	0		5562258	1					
ANR	5562394	ExpressionStatement	"cmdname = """""	59:12:859:871	5562258	1	True				
ANR	5562395	AssignmentExpression	"cmdname = """""		5562258	0		=			
ANR	5562396	Identifier	cmdname		5562258	0					
ANR	5562397	PrimaryExpression	""""""		5562258	1					
ANR	5562398	ElseStatement	else		5562258	0					
ANR	5562399	ExpressionStatement	cmdname = args [ 0 ]	63:12:900:917	5562258	0	True				
ANR	5562400	AssignmentExpression	cmdname = args [ 0 ]		5562258	0		=			
ANR	5562401	Identifier	cmdname		5562258	0					
ANR	5562402	ArrayIndexing	args [ 0 ]		5562258	1					
ANR	5562403	Identifier	args		5562258	0					
ANR	5562404	PrimaryExpression	0		5562258	1					
ANR	5562405	ExpressionStatement	"readline_set_completion_index ( mon -> rs , strlen ( cmdname ) )"	65:8:928:983	5562258	1	True				
ANR	5562406	CallExpression	"readline_set_completion_index ( mon -> rs , strlen ( cmdname ) )"		5562258	0					
ANR	5562407	Callee	readline_set_completion_index		5562258	0					
ANR	5562408	Identifier	readline_set_completion_index		5562258	0					
ANR	5562409	ArgumentList	mon -> rs		5562258	1					
ANR	5562410	Argument	mon -> rs		5562258	0					
ANR	5562411	PtrMemberAccess	mon -> rs		5562258	0					
ANR	5562412	Identifier	mon		5562258	0					
ANR	5562413	Identifier	rs		5562258	1					
ANR	5562414	Argument	strlen ( cmdname )		5562258	1					
ANR	5562415	CallExpression	strlen ( cmdname )		5562258	0					
ANR	5562416	Callee	strlen		5562258	0					
ANR	5562417	Identifier	strlen		5562258	0					
ANR	5562418	ArgumentList	cmdname		5562258	1					
ANR	5562419	Argument	cmdname		5562258	0					
ANR	5562420	Identifier	cmdname		5562258	0					
ANR	5562421	ForStatement	for ( cmd = mon -> cmd_table ; cmd -> name != NULL ; cmd ++ )		5562258	2					
ANR	5562422	ForInit	cmd = mon -> cmd_table ;	67:13:999:1019	5562258	0	True				
ANR	5562423	AssignmentExpression	cmd = mon -> cmd_table		5562258	0		=			
ANR	5562424	Identifier	cmd		5562258	0					
ANR	5562425	PtrMemberAccess	mon -> cmd_table		5562258	1					
ANR	5562426	Identifier	mon		5562258	0					
ANR	5562427	Identifier	cmd_table		5562258	1					
ANR	5562428	Condition	cmd -> name != NULL	67:35:1021:1037	5562258	1	True				
ANR	5562429	EqualityExpression	cmd -> name != NULL		5562258	0		!=			
ANR	5562430	PtrMemberAccess	cmd -> name		5562258	0					
ANR	5562431	Identifier	cmd		5562258	0					
ANR	5562432	Identifier	name		5562258	1					
ANR	5562433	Identifier	NULL		5562258	1					
ANR	5562434	PostIncDecOperationExpression	cmd ++	67:54:1040:1044	5562258	2	True				
ANR	5562435	Identifier	cmd		5562258	0					
ANR	5562436	IncDec	++		5562258	1					
ANR	5562437	CompoundStatement		63:61:937:937	5562258	3					
ANR	5562438	ExpressionStatement	"cmd_completion ( mon , cmdname , cmd -> name )"	69:12:1062:1101	5562258	0	True				
ANR	5562439	CallExpression	"cmd_completion ( mon , cmdname , cmd -> name )"		5562258	0					
ANR	5562440	Callee	cmd_completion		5562258	0					
ANR	5562441	Identifier	cmd_completion		5562258	0					
ANR	5562442	ArgumentList	mon		5562258	1					
ANR	5562443	Argument	mon		5562258	0					
ANR	5562444	Identifier	mon		5562258	0					
ANR	5562445	Argument	cmdname		5562258	1					
ANR	5562446	Identifier	cmdname		5562258	0					
ANR	5562447	Argument	cmd -> name		5562258	2					
ANR	5562448	PtrMemberAccess	cmd -> name		5562258	0					
ANR	5562449	Identifier	cmd		5562258	0					
ANR	5562450	Identifier	name		5562258	1					
ANR	5562451	ElseStatement	else		5562258	0					
ANR	5562452	CompoundStatement		69:11:1016:1016	5562258	0					
ANR	5562453	ForStatement	for ( cmd = mon -> cmd_table ; cmd -> name != NULL ; cmd ++ )		5562258	0					
ANR	5562454	ForInit	cmd = mon -> cmd_table ;	77:13:1174:1194	5562258	0	True				
ANR	5562455	AssignmentExpression	cmd = mon -> cmd_table		5562258	0		=			
ANR	5562456	Identifier	cmd		5562258	0					
ANR	5562457	PtrMemberAccess	mon -> cmd_table		5562258	1					
ANR	5562458	Identifier	mon		5562258	0					
ANR	5562459	Identifier	cmd_table		5562258	1					
ANR	5562460	Condition	cmd -> name != NULL	77:35:1196:1212	5562258	1	True				
ANR	5562461	EqualityExpression	cmd -> name != NULL		5562258	0		!=			
ANR	5562462	PtrMemberAccess	cmd -> name		5562258	0					
ANR	5562463	Identifier	cmd		5562258	0					
ANR	5562464	Identifier	name		5562258	1					
ANR	5562465	Identifier	NULL		5562258	1					
ANR	5562466	PostIncDecOperationExpression	cmd ++	77:54:1215:1219	5562258	2	True				
ANR	5562467	Identifier	cmd		5562258	0					
ANR	5562468	IncDec	++		5562258	1					
ANR	5562469	CompoundStatement		73:61:1112:1112	5562258	3					
ANR	5562470	IfStatement	"if ( compare_cmd ( args [ 0 ] , cmd -> name ) )"		5562258	0					
ANR	5562471	Condition	"compare_cmd ( args [ 0 ] , cmd -> name )"	79:16:1241:1271	5562258	0	True				
ANR	5562472	CallExpression	"compare_cmd ( args [ 0 ] , cmd -> name )"		5562258	0					
ANR	5562473	Callee	compare_cmd		5562258	0					
ANR	5562474	Identifier	compare_cmd		5562258	0					
ANR	5562475	ArgumentList	args [ 0 ]		5562258	1					
ANR	5562476	Argument	args [ 0 ]		5562258	0					
ANR	5562477	ArrayIndexing	args [ 0 ]		5562258	0					
ANR	5562478	Identifier	args		5562258	0					
ANR	5562479	PrimaryExpression	0		5562258	1					
ANR	5562480	Argument	cmd -> name		5562258	1					
ANR	5562481	PtrMemberAccess	cmd -> name		5562258	0					
ANR	5562482	Identifier	cmd		5562258	0					
ANR	5562483	Identifier	name		5562258	1					
ANR	5562484	CompoundStatement		75:49:1164:1164	5562258	1					
ANR	5562485	BreakStatement	break ;	81:16:1293:1298	5562258	0	True				
ANR	5562486	IfStatement	if ( ! cmd -> name )		5562258	1					
ANR	5562487	Condition	! cmd -> name	87:12:1339:1348	5562258	0	True				
ANR	5562488	UnaryOperationExpression	! cmd -> name		5562258	0					
ANR	5562489	UnaryOperator	!		5562258	0					
ANR	5562490	PtrMemberAccess	cmd -> name		5562258	1					
ANR	5562491	Identifier	cmd		5562258	0					
ANR	5562492	Identifier	name		5562258	1					
ANR	5562493	CompoundStatement		83:24:1241:1241	5562258	1					
ANR	5562494	GotoStatement	goto cleanup ;	89:12:1366:1378	5562258	0	True				
ANR	5562495	Identifier	cleanup		5562258	0					
ANR	5562496	ExpressionStatement	ptype = next_arg_type ( cmd -> args_type )	95:8:1402:1439	5562258	2	True				
ANR	5562497	AssignmentExpression	ptype = next_arg_type ( cmd -> args_type )		5562258	0		=			
ANR	5562498	Identifier	ptype		5562258	0					
ANR	5562499	CallExpression	next_arg_type ( cmd -> args_type )		5562258	1					
ANR	5562500	Callee	next_arg_type		5562258	0					
ANR	5562501	Identifier	next_arg_type		5562258	0					
ANR	5562502	ArgumentList	cmd -> args_type		5562258	1					
ANR	5562503	Argument	cmd -> args_type		5562258	0					
ANR	5562504	PtrMemberAccess	cmd -> args_type		5562258	0					
ANR	5562505	Identifier	cmd		5562258	0					
ANR	5562506	Identifier	args_type		5562258	1					
ANR	5562507	ForStatement	for ( i = 0 ; i < nb_args - 2 ; i ++ )		5562258	3					
ANR	5562508	ForInit	i = 0 ;	97:12:1454:1459	5562258	0	True				
ANR	5562509	AssignmentExpression	i = 0		5562258	0		=			
ANR	5562510	Identifier	i		5562258	0					
ANR	5562511	PrimaryExpression	0		5562258	1					
ANR	5562512	Condition	i < nb_args - 2	97:19:1461:1475	5562258	1	True				
ANR	5562513	RelationalExpression	i < nb_args - 2		5562258	0		<			
ANR	5562514	Identifier	i		5562258	0					
ANR	5562515	AdditiveExpression	nb_args - 2		5562258	1		-			
ANR	5562516	Identifier	nb_args		5562258	0					
ANR	5562517	PrimaryExpression	2		5562258	1					
ANR	5562518	PostIncDecOperationExpression	i ++	97:36:1478:1480	5562258	2	True				
ANR	5562519	Identifier	i		5562258	0					
ANR	5562520	IncDec	++		5562258	1					
ANR	5562521	CompoundStatement		93:41:1373:1373	5562258	3					
ANR	5562522	IfStatement	if ( * ptype != '\\0' )		5562258	0					
ANR	5562523	Condition	* ptype != '\\0'	99:16:1502:1515	5562258	0	True				
ANR	5562524	EqualityExpression	* ptype != '\\0'		5562258	0		!=			
ANR	5562525	UnaryOperationExpression	* ptype		5562258	0					
ANR	5562526	UnaryOperator	*		5562258	0					
ANR	5562527	Identifier	ptype		5562258	1					
ANR	5562528	PrimaryExpression	'\\0'		5562258	1					
ANR	5562529	CompoundStatement		95:32:1408:1408	5562258	1					
ANR	5562530	ExpressionStatement	ptype = next_arg_type ( ptype )	101:16:1537:1565	5562258	0	True				
ANR	5562531	AssignmentExpression	ptype = next_arg_type ( ptype )		5562258	0		=			
ANR	5562532	Identifier	ptype		5562258	0					
ANR	5562533	CallExpression	next_arg_type ( ptype )		5562258	1					
ANR	5562534	Callee	next_arg_type		5562258	0					
ANR	5562535	Identifier	next_arg_type		5562258	0					
ANR	5562536	ArgumentList	ptype		5562258	1					
ANR	5562537	Argument	ptype		5562258	0					
ANR	5562538	Identifier	ptype		5562258	0					
ANR	5562539	WhileStatement	while ( * ptype == '?' )		5562258	1					
ANR	5562540	Condition	* ptype == '?'	103:23:1591:1603	5562258	0	True				
ANR	5562541	EqualityExpression	* ptype == '?'		5562258	0		==			
ANR	5562542	UnaryOperationExpression	* ptype		5562258	0					
ANR	5562543	UnaryOperator	*		5562258	0					
ANR	5562544	Identifier	ptype		5562258	1					
ANR	5562545	PrimaryExpression	'?'		5562258	1					
ANR	5562546	ExpressionStatement	ptype = next_arg_type ( ptype )	105:20:1627:1655	5562258	1	True				
ANR	5562547	AssignmentExpression	ptype = next_arg_type ( ptype )		5562258	0		=			
ANR	5562548	Identifier	ptype		5562258	0					
ANR	5562549	CallExpression	next_arg_type ( ptype )		5562258	1					
ANR	5562550	Callee	next_arg_type		5562258	0					
ANR	5562551	Identifier	next_arg_type		5562258	0					
ANR	5562552	ArgumentList	ptype		5562258	1					
ANR	5562553	Argument	ptype		5562258	0					
ANR	5562554	Identifier	ptype		5562258	0					
ANR	5562555	ExpressionStatement	str = args [ nb_args - 1 ]	111:8:1692:1715	5562258	4	True				
ANR	5562556	AssignmentExpression	str = args [ nb_args - 1 ]		5562258	0		=			
ANR	5562557	Identifier	str		5562258	0					
ANR	5562558	ArrayIndexing	args [ nb_args - 1 ]		5562258	1					
ANR	5562559	Identifier	args		5562258	0					
ANR	5562560	AdditiveExpression	nb_args - 1		5562258	1		-			
ANR	5562561	Identifier	nb_args		5562258	0					
ANR	5562562	PrimaryExpression	1		5562258	1					
ANR	5562563	IfStatement	if ( * ptype == '-' && ptype [ 1 ] != '\\0' )		5562258	5					
ANR	5562564	Condition	* ptype == '-' && ptype [ 1 ] != '\\0'	113:12:1730:1762	5562258	0	True				
ANR	5562565	AndExpression	* ptype == '-' && ptype [ 1 ] != '\\0'		5562258	0		&&			
ANR	5562566	EqualityExpression	* ptype == '-'		5562258	0		==			
ANR	5562567	UnaryOperationExpression	* ptype		5562258	0					
ANR	5562568	UnaryOperator	*		5562258	0					
ANR	5562569	Identifier	ptype		5562258	1					
ANR	5562570	PrimaryExpression	'-'		5562258	1					
ANR	5562571	EqualityExpression	ptype [ 1 ] != '\\0'		5562258	1		!=			
ANR	5562572	ArrayIndexing	ptype [ 1 ]		5562258	0					
ANR	5562573	Identifier	ptype		5562258	0					
ANR	5562574	PrimaryExpression	1		5562258	1					
ANR	5562575	PrimaryExpression	'\\0'		5562258	1					
ANR	5562576	CompoundStatement		109:47:1655:1655	5562258	1					
ANR	5562577	ExpressionStatement	ptype = next_arg_type ( ptype )	115:12:1780:1808	5562258	0	True				
ANR	5562578	AssignmentExpression	ptype = next_arg_type ( ptype )		5562258	0		=			
ANR	5562579	Identifier	ptype		5562258	0					
ANR	5562580	CallExpression	next_arg_type ( ptype )		5562258	1					
ANR	5562581	Callee	next_arg_type		5562258	0					
ANR	5562582	Identifier	next_arg_type		5562258	0					
ANR	5562583	ArgumentList	ptype		5562258	1					
ANR	5562584	Argument	ptype		5562258	0					
ANR	5562585	Identifier	ptype		5562258	0					
ANR	5562586	SwitchStatement	switch ( * ptype )		5562258	6					
ANR	5562587	Condition	* ptype	119:15:1837:1842	5562258	0	True				
ANR	5562588	UnaryOperationExpression	* ptype		5562258	0					
ANR	5562589	UnaryOperator	*		5562258	0					
ANR	5562590	Identifier	ptype		5562258	1					
ANR	5562591	CompoundStatement		115:23:1735:1735	5562258	1					
ANR	5562592	Label	case 'F' :	121:8:1856:1864	5562258	0	True				
ANR	5562593	ExpressionStatement	"readline_set_completion_index ( mon -> rs , strlen ( str ) )"	125:12:1914:1965	5562258	1	True				
ANR	5562594	CallExpression	"readline_set_completion_index ( mon -> rs , strlen ( str ) )"		5562258	0					
ANR	5562595	Callee	readline_set_completion_index		5562258	0					
ANR	5562596	Identifier	readline_set_completion_index		5562258	0					
ANR	5562597	ArgumentList	mon -> rs		5562258	1					
ANR	5562598	Argument	mon -> rs		5562258	0					
ANR	5562599	PtrMemberAccess	mon -> rs		5562258	0					
ANR	5562600	Identifier	mon		5562258	0					
ANR	5562601	Identifier	rs		5562258	1					
ANR	5562602	Argument	strlen ( str )		5562258	1					
ANR	5562603	CallExpression	strlen ( str )		5562258	0					
ANR	5562604	Callee	strlen		5562258	0					
ANR	5562605	Identifier	strlen		5562258	0					
ANR	5562606	ArgumentList	str		5562258	1					
ANR	5562607	Argument	str		5562258	0					
ANR	5562608	Identifier	str		5562258	0					
ANR	5562609	ExpressionStatement	"file_completion ( mon , str )"	127:12:1980:2005	5562258	2	True				
ANR	5562610	CallExpression	"file_completion ( mon , str )"		5562258	0					
ANR	5562611	Callee	file_completion		5562258	0					
ANR	5562612	Identifier	file_completion		5562258	0					
ANR	5562613	ArgumentList	mon		5562258	1					
ANR	5562614	Argument	mon		5562258	0					
ANR	5562615	Identifier	mon		5562258	0					
ANR	5562616	Argument	str		5562258	1					
ANR	5562617	Identifier	str		5562258	0					
ANR	5562618	BreakStatement	break ;	129:12:2020:2025	5562258	3	True				
ANR	5562619	Label	case 'B' :	131:8:2036:2044	5562258	4	True				
ANR	5562620	ExpressionStatement	mbs . mon = mon	135:12:2107:2120	5562258	5	True				
ANR	5562621	AssignmentExpression	mbs . mon = mon		5562258	0		=			
ANR	5562622	MemberAccess	mbs . mon		5562258	0					
ANR	5562623	Identifier	mbs		5562258	0					
ANR	5562624	Identifier	mon		5562258	1					
ANR	5562625	Identifier	mon		5562258	1					
ANR	5562626	ExpressionStatement	mbs . input = str	137:12:2135:2150	5562258	6	True				
ANR	5562627	AssignmentExpression	mbs . input = str		5562258	0		=			
ANR	5562628	MemberAccess	mbs . input		5562258	0					
ANR	5562629	Identifier	mbs		5562258	0					
ANR	5562630	Identifier	input		5562258	1					
ANR	5562631	Identifier	str		5562258	1					
ANR	5562632	ExpressionStatement	"readline_set_completion_index ( mon -> rs , strlen ( str ) )"	139:12:2165:2216	5562258	7	True				
ANR	5562633	CallExpression	"readline_set_completion_index ( mon -> rs , strlen ( str ) )"		5562258	0					
ANR	5562634	Callee	readline_set_completion_index		5562258	0					
ANR	5562635	Identifier	readline_set_completion_index		5562258	0					
ANR	5562636	ArgumentList	mon -> rs		5562258	1					
ANR	5562637	Argument	mon -> rs		5562258	0					
ANR	5562638	PtrMemberAccess	mon -> rs		5562258	0					
ANR	5562639	Identifier	mon		5562258	0					
ANR	5562640	Identifier	rs		5562258	1					
ANR	5562641	Argument	strlen ( str )		5562258	1					
ANR	5562642	CallExpression	strlen ( str )		5562258	0					
ANR	5562643	Callee	strlen		5562258	0					
ANR	5562644	Identifier	strlen		5562258	0					
ANR	5562645	ArgumentList	str		5562258	1					
ANR	5562646	Argument	str		5562258	0					
ANR	5562647	Identifier	str		5562258	0					
ANR	5562648	ExpressionStatement	"bdrv_iterate ( block_completion_it , & mbs )"	141:12:2231:2270	5562258	8	True				
ANR	5562649	CallExpression	"bdrv_iterate ( block_completion_it , & mbs )"		5562258	0					
ANR	5562650	Callee	bdrv_iterate		5562258	0					
ANR	5562651	Identifier	bdrv_iterate		5562258	0					
ANR	5562652	ArgumentList	block_completion_it		5562258	1					
ANR	5562653	Argument	block_completion_it		5562258	0					
ANR	5562654	Identifier	block_completion_it		5562258	0					
ANR	5562655	Argument	& mbs		5562258	1					
ANR	5562656	UnaryOperationExpression	& mbs		5562258	0					
ANR	5562657	UnaryOperator	&		5562258	0					
ANR	5562658	Identifier	mbs		5562258	1					
ANR	5562659	BreakStatement	break ;	143:12:2285:2290	5562258	9	True				
ANR	5562660	Label	case 's' :	145:8:2301:2309	5562258	10	True				
ANR	5562661	IfStatement	"if ( ! strcmp ( cmd -> name , ""info"" ) )"		5562258	11					
ANR	5562662	Condition	"! strcmp ( cmd -> name , ""info"" )"	149:16:2367:2392	5562258	0	True				
ANR	5562663	UnaryOperationExpression	"! strcmp ( cmd -> name , ""info"" )"		5562258	0					
ANR	5562664	UnaryOperator	!		5562258	0					
ANR	5562665	CallExpression	"strcmp ( cmd -> name , ""info"" )"		5562258	1					
ANR	5562666	Callee	strcmp		5562258	0					
ANR	5562667	Identifier	strcmp		5562258	0					
ANR	5562668	ArgumentList	cmd -> name		5562258	1					
ANR	5562669	Argument	cmd -> name		5562258	0					
ANR	5562670	PtrMemberAccess	cmd -> name		5562258	0					
ANR	5562671	Identifier	cmd		5562258	0					
ANR	5562672	Identifier	name		5562258	1					
ANR	5562673	Argument	"""info"""		5562258	1					
ANR	5562674	PrimaryExpression	"""info"""		5562258	0					
ANR	5562675	CompoundStatement		145:44:2285:2285	5562258	1					
ANR	5562676	ExpressionStatement	"readline_set_completion_index ( mon -> rs , strlen ( str ) )"	151:16:2414:2465	5562258	0	True				
ANR	5562677	CallExpression	"readline_set_completion_index ( mon -> rs , strlen ( str ) )"		5562258	0					
ANR	5562678	Callee	readline_set_completion_index		5562258	0					
ANR	5562679	Identifier	readline_set_completion_index		5562258	0					
ANR	5562680	ArgumentList	mon -> rs		5562258	1					
ANR	5562681	Argument	mon -> rs		5562258	0					
ANR	5562682	PtrMemberAccess	mon -> rs		5562258	0					
ANR	5562683	Identifier	mon		5562258	0					
ANR	5562684	Identifier	rs		5562258	1					
ANR	5562685	Argument	strlen ( str )		5562258	1					
ANR	5562686	CallExpression	strlen ( str )		5562258	0					
ANR	5562687	Callee	strlen		5562258	0					
ANR	5562688	Identifier	strlen		5562258	0					
ANR	5562689	ArgumentList	str		5562258	1					
ANR	5562690	Argument	str		5562258	0					
ANR	5562691	Identifier	str		5562258	0					
ANR	5562692	ForStatement	for ( cmd = info_cmds ; cmd -> name != NULL ; cmd ++ )		5562258	1					
ANR	5562693	ForInit	cmd = info_cmds ;	153:20:2488:2503	5562258	0	True				
ANR	5562694	AssignmentExpression	cmd = info_cmds		5562258	0		=			
ANR	5562695	Identifier	cmd		5562258	0					
ANR	5562696	Identifier	info_cmds		5562258	1					
ANR	5562697	Condition	cmd -> name != NULL	153:37:2505:2521	5562258	1	True				
ANR	5562698	EqualityExpression	cmd -> name != NULL		5562258	0		!=			
ANR	5562699	PtrMemberAccess	cmd -> name		5562258	0					
ANR	5562700	Identifier	cmd		5562258	0					
ANR	5562701	Identifier	name		5562258	1					
ANR	5562702	Identifier	NULL		5562258	1					
ANR	5562703	PostIncDecOperationExpression	cmd ++	153:56:2524:2528	5562258	2	True				
ANR	5562704	Identifier	cmd		5562258	0					
ANR	5562705	IncDec	++		5562258	1					
ANR	5562706	CompoundStatement		149:63:2421:2421	5562258	3					
ANR	5562707	ExpressionStatement	"cmd_completion ( mon , str , cmd -> name )"	155:20:2554:2589	5562258	0	True				
ANR	5562708	CallExpression	"cmd_completion ( mon , str , cmd -> name )"		5562258	0					
ANR	5562709	Callee	cmd_completion		5562258	0					
ANR	5562710	Identifier	cmd_completion		5562258	0					
ANR	5562711	ArgumentList	mon		5562258	1					
ANR	5562712	Argument	mon		5562258	0					
ANR	5562713	Identifier	mon		5562258	0					
ANR	5562714	Argument	str		5562258	1					
ANR	5562715	Identifier	str		5562258	0					
ANR	5562716	Argument	cmd -> name		5562258	2					
ANR	5562717	PtrMemberAccess	cmd -> name		5562258	0					
ANR	5562718	Identifier	cmd		5562258	0					
ANR	5562719	Identifier	name		5562258	1					
ANR	5562720	ElseStatement	else		5562258	0					
ANR	5562721	IfStatement	"if ( ! strcmp ( cmd -> name , ""sendkey"" ) )"		5562258	0					
ANR	5562722	Condition	"! strcmp ( cmd -> name , ""sendkey"" )"	159:23:2634:2662	5562258	0	True				
ANR	5562723	UnaryOperationExpression	"! strcmp ( cmd -> name , ""sendkey"" )"		5562258	0					
ANR	5562724	UnaryOperator	!		5562258	0					
ANR	5562725	CallExpression	"strcmp ( cmd -> name , ""sendkey"" )"		5562258	1					
ANR	5562726	Callee	strcmp		5562258	0					
ANR	5562727	Identifier	strcmp		5562258	0					
ANR	5562728	ArgumentList	cmd -> name		5562258	1					
ANR	5562729	Argument	cmd -> name		5562258	0					
ANR	5562730	PtrMemberAccess	cmd -> name		5562258	0					
ANR	5562731	Identifier	cmd		5562258	0					
ANR	5562732	Identifier	name		5562258	1					
ANR	5562733	Argument	"""sendkey"""		5562258	1					
ANR	5562734	PrimaryExpression	"""sendkey"""		5562258	0					
ANR	5562735	CompoundStatement		157:16:2574:2603	5562258	1					
ANR	5562736	IdentifierDeclStatement	"char * sep = strrchr ( str , '-' ) ;"	161:16:2684:2713	5562258	0	True				
ANR	5562737	IdentifierDecl	"* sep = strrchr ( str , '-' )"		5562258	0					
ANR	5562738	IdentifierDeclType	char *		5562258	0					
ANR	5562739	Identifier	sep		5562258	1					
ANR	5562740	AssignmentExpression	"* sep = strrchr ( str , '-' )"		5562258	2		=			
ANR	5562741	Identifier	sep		5562258	0					
ANR	5562742	CallExpression	"strrchr ( str , '-' )"		5562258	1					
ANR	5562743	Callee	strrchr		5562258	0					
ANR	5562744	Identifier	strrchr		5562258	0					
ANR	5562745	ArgumentList	str		5562258	1					
ANR	5562746	Argument	str		5562258	0					
ANR	5562747	Identifier	str		5562258	0					
ANR	5562748	Argument	'-'		5562258	1					
ANR	5562749	PrimaryExpression	'-'		5562258	0					
ANR	5562750	IfStatement	if ( sep )		5562258	1					
ANR	5562751	Condition	sep	163:20:2736:2738	5562258	0	True				
ANR	5562752	Identifier	sep		5562258	0					
ANR	5562753	ExpressionStatement	str = sep + 1	165:20:2762:2775	5562258	1	True				
ANR	5562754	AssignmentExpression	str = sep + 1		5562258	0		=			
ANR	5562755	Identifier	str		5562258	0					
ANR	5562756	AdditiveExpression	sep + 1		5562258	1		+			
ANR	5562757	Identifier	sep		5562258	0					
ANR	5562758	PrimaryExpression	1		5562258	1					
ANR	5562759	ExpressionStatement	"readline_set_completion_index ( mon -> rs , strlen ( str ) )"	167:16:2794:2845	5562258	2	True				
ANR	5562760	CallExpression	"readline_set_completion_index ( mon -> rs , strlen ( str ) )"		5562258	0					
ANR	5562761	Callee	readline_set_completion_index		5562258	0					
ANR	5562762	Identifier	readline_set_completion_index		5562258	0					
ANR	5562763	ArgumentList	mon -> rs		5562258	1					
ANR	5562764	Argument	mon -> rs		5562258	0					
ANR	5562765	PtrMemberAccess	mon -> rs		5562258	0					
ANR	5562766	Identifier	mon		5562258	0					
ANR	5562767	Identifier	rs		5562258	1					
ANR	5562768	Argument	strlen ( str )		5562258	1					
ANR	5562769	CallExpression	strlen ( str )		5562258	0					
ANR	5562770	Callee	strlen		5562258	0					
ANR	5562771	Identifier	strlen		5562258	0					
ANR	5562772	ArgumentList	str		5562258	1					
ANR	5562773	Argument	str		5562258	0					
ANR	5562774	Identifier	str		5562258	0					
ANR	5562775	ForStatement	for ( i = 0 ; i < Q_KEY_CODE_MAX ; i ++ )		5562258	3					
ANR	5562776	ForInit	i = 0 ;	169:21:2869:2874	5562258	0	True				
ANR	5562777	AssignmentExpression	i = 0		5562258	0		=			
ANR	5562778	Identifier	i		5562258	0					
ANR	5562779	PrimaryExpression	0		5562258	1					
ANR	5562780	Condition	i < Q_KEY_CODE_MAX	169:28:2876:2893	5562258	1	True				
ANR	5562781	RelationalExpression	i < Q_KEY_CODE_MAX		5562258	0		<			
ANR	5562782	Identifier	i		5562258	0					
ANR	5562783	Identifier	Q_KEY_CODE_MAX		5562258	1					
ANR	5562784	PostIncDecOperationExpression	i ++	169:48:2896:2898	5562258	2	True				
ANR	5562785	Identifier	i		5562258	0					
ANR	5562786	IncDec	++		5562258	1					
ANR	5562787	CompoundStatement		165:53:2791:2791	5562258	3					
ANR	5562788	ExpressionStatement	"cmd_completion ( mon , str , QKeyCode_lookup [ i ] )"	171:20:2924:2968	5562258	0	True				
ANR	5562789	CallExpression	"cmd_completion ( mon , str , QKeyCode_lookup [ i ] )"		5562258	0					
ANR	5562790	Callee	cmd_completion		5562258	0					
ANR	5562791	Identifier	cmd_completion		5562258	0					
ANR	5562792	ArgumentList	mon		5562258	1					
ANR	5562793	Argument	mon		5562258	0					
ANR	5562794	Identifier	mon		5562258	0					
ANR	5562795	Argument	str		5562258	1					
ANR	5562796	Identifier	str		5562258	0					
ANR	5562797	Argument	QKeyCode_lookup [ i ]		5562258	2					
ANR	5562798	ArrayIndexing	QKeyCode_lookup [ i ]		5562258	0					
ANR	5562799	Identifier	QKeyCode_lookup		5562258	0					
ANR	5562800	Identifier	i		5562258	1					
ANR	5562801	ElseStatement	else		5562258	0					
ANR	5562802	IfStatement	"if ( ! strcmp ( cmd -> name , ""help|?"" ) )"		5562258	0					
ANR	5562803	Condition	"! strcmp ( cmd -> name , ""help|?"" )"	175:23:3013:3040	5562258	0	True				
ANR	5562804	UnaryOperationExpression	"! strcmp ( cmd -> name , ""help|?"" )"		5562258	0					
ANR	5562805	UnaryOperator	!		5562258	0					
ANR	5562806	CallExpression	"strcmp ( cmd -> name , ""help|?"" )"		5562258	1					
ANR	5562807	Callee	strcmp		5562258	0					
ANR	5562808	Identifier	strcmp		5562258	0					
ANR	5562809	ArgumentList	cmd -> name		5562258	1					
ANR	5562810	Argument	cmd -> name		5562258	0					
ANR	5562811	PtrMemberAccess	cmd -> name		5562258	0					
ANR	5562812	Identifier	cmd		5562258	0					
ANR	5562813	Identifier	name		5562258	1					
ANR	5562814	Argument	"""help|?"""		5562258	1					
ANR	5562815	PrimaryExpression	"""help|?"""		5562258	0					
ANR	5562816	CompoundStatement		171:53:2933:2933	5562258	1					
ANR	5562817	ExpressionStatement	"readline_set_completion_index ( mon -> rs , strlen ( str ) )"	177:16:3062:3113	5562258	0	True				
ANR	5562818	CallExpression	"readline_set_completion_index ( mon -> rs , strlen ( str ) )"		5562258	0					
ANR	5562819	Callee	readline_set_completion_index		5562258	0					
ANR	5562820	Identifier	readline_set_completion_index		5562258	0					
ANR	5562821	ArgumentList	mon -> rs		5562258	1					
ANR	5562822	Argument	mon -> rs		5562258	0					
ANR	5562823	PtrMemberAccess	mon -> rs		5562258	0					
ANR	5562824	Identifier	mon		5562258	0					
ANR	5562825	Identifier	rs		5562258	1					
ANR	5562826	Argument	strlen ( str )		5562258	1					
ANR	5562827	CallExpression	strlen ( str )		5562258	0					
ANR	5562828	Callee	strlen		5562258	0					
ANR	5562829	Identifier	strlen		5562258	0					
ANR	5562830	ArgumentList	str		5562258	1					
ANR	5562831	Argument	str		5562258	0					
ANR	5562832	Identifier	str		5562258	0					
ANR	5562833	ForStatement	for ( cmd = mon -> cmd_table ; cmd -> name != NULL ; cmd ++ )		5562258	1					
ANR	5562834	ForInit	cmd = mon -> cmd_table ;	179:21:3137:3157	5562258	0	True				
ANR	5562835	AssignmentExpression	cmd = mon -> cmd_table		5562258	0		=			
ANR	5562836	Identifier	cmd		5562258	0					
ANR	5562837	PtrMemberAccess	mon -> cmd_table		5562258	1					
ANR	5562838	Identifier	mon		5562258	0					
ANR	5562839	Identifier	cmd_table		5562258	1					
ANR	5562840	Condition	cmd -> name != NULL	179:43:3159:3175	5562258	1	True				
ANR	5562841	EqualityExpression	cmd -> name != NULL		5562258	0		!=			
ANR	5562842	PtrMemberAccess	cmd -> name		5562258	0					
ANR	5562843	Identifier	cmd		5562258	0					
ANR	5562844	Identifier	name		5562258	1					
ANR	5562845	Identifier	NULL		5562258	1					
ANR	5562846	PostIncDecOperationExpression	cmd ++	179:62:3178:3182	5562258	2	True				
ANR	5562847	Identifier	cmd		5562258	0					
ANR	5562848	IncDec	++		5562258	1					
ANR	5562849	CompoundStatement		175:69:3075:3075	5562258	3					
ANR	5562850	ExpressionStatement	"cmd_completion ( mon , str , cmd -> name )"	181:20:3208:3243	5562258	0	True				
ANR	5562851	CallExpression	"cmd_completion ( mon , str , cmd -> name )"		5562258	0					
ANR	5562852	Callee	cmd_completion		5562258	0					
ANR	5562853	Identifier	cmd_completion		5562258	0					
ANR	5562854	ArgumentList	mon		5562258	1					
ANR	5562855	Argument	mon		5562258	0					
ANR	5562856	Identifier	mon		5562258	0					
ANR	5562857	Argument	str		5562258	1					
ANR	5562858	Identifier	str		5562258	0					
ANR	5562859	Argument	cmd -> name		5562258	2					
ANR	5562860	PtrMemberAccess	cmd -> name		5562258	0					
ANR	5562861	Identifier	cmd		5562258	0					
ANR	5562862	Identifier	name		5562258	1					
ANR	5562863	BreakStatement	break ;	187:12:3292:3297	5562258	12	True				
ANR	5562864	Label	default :	189:8:3308:3315	5562258	13	True				
ANR	5562865	Identifier	default		5562258	0					
ANR	5562866	BreakStatement	break ;	191:12:3330:3335	5562258	14	True				
ANR	5562867	Label	cleanup :	199:0:3358:3365	5562258	11	True				
ANR	5562868	Identifier	cleanup		5562258	0					
ANR	5562869	ForStatement	for ( i = 0 ; i < nb_args ; i ++ )		5562258	12					
ANR	5562870	ForInit	i = 0 ;	201:9:3377:3382	5562258	0	True				
ANR	5562871	AssignmentExpression	i = 0		5562258	0		=			
ANR	5562872	Identifier	i		5562258	0					
ANR	5562873	PrimaryExpression	0		5562258	1					
ANR	5562874	Condition	i < nb_args	201:16:3384:3394	5562258	1	True				
ANR	5562875	RelationalExpression	i < nb_args		5562258	0		<			
ANR	5562876	Identifier	i		5562258	0					
ANR	5562877	Identifier	nb_args		5562258	1					
ANR	5562878	PostIncDecOperationExpression	i ++	201:29:3397:3399	5562258	2	True				
ANR	5562879	Identifier	i		5562258	0					
ANR	5562880	IncDec	++		5562258	1					
ANR	5562881	CompoundStatement		197:34:3292:3292	5562258	3					
ANR	5562882	ExpressionStatement	g_free ( args [ i ] )	203:8:3413:3428	5562258	0	True				
ANR	5562883	CallExpression	g_free ( args [ i ] )		5562258	0					
ANR	5562884	Callee	g_free		5562258	0					
ANR	5562885	Identifier	g_free		5562258	0					
ANR	5562886	ArgumentList	args [ i ]		5562258	1					
ANR	5562887	Argument	args [ i ]		5562258	0					
ANR	5562888	ArrayIndexing	args [ i ]		5562258	0					
ANR	5562889	Identifier	args		5562258	0					
ANR	5562890	Identifier	i		5562258	1					
ANR	5562891	ReturnType	static void		5562258	1					
ANR	5562892	Identifier	monitor_find_completion		5562258	2					
ANR	5562893	ParameterList	"Monitor * mon , const char * cmdline"		5562258	3					
ANR	5562894	Parameter	Monitor * mon	1:36:36:47	5562258	0	True				
ANR	5562895	ParameterType	Monitor *		5562258	0					
ANR	5562896	Identifier	mon		5562258	1					
ANR	5562897	Parameter	const char * cmdline	3:36:87:105	5562258	1	True				
ANR	5562898	ParameterType	const char *		5562258	0					
ANR	5562899	Identifier	cmdline		5562258	1					
ANR	5562900	CFGEntryNode	ENTRY		5562258		True				
ANR	5562901	CFGExitNode	EXIT		5562258		True				
ANR	5562902	Symbol	QKeyCode_lookup		5562258						
ANR	5562903	Symbol	mon -> cmd_table		5562258						
ANR	5562904	Symbol	Q_KEY_CODE_MAX		5562258						
ANR	5562905	Symbol	ptype		5562258						
ANR	5562906	Symbol	MAX_ARGS		5562258						
ANR	5562907	Symbol	info_cmds		5562258						
ANR	5562908	Symbol	mon		5562258						
ANR	5562909	Symbol	mbs . mon		5562258						
ANR	5562910	Symbol	* args		5562258						
ANR	5562911	Symbol	compare_cmd		5562258						
ANR	5562912	Symbol	& nb_args		5562258						
ANR	5562913	Symbol	strlen		5562258						
ANR	5562914	Symbol	* QKeyCode_lookup		5562258						
ANR	5562915	Symbol	cmdline		5562258						
ANR	5562916	Symbol	len		5562258						
ANR	5562917	Symbol	nb_args		5562258						
ANR	5562918	Symbol	g_strdup		5562258						
ANR	5562919	Symbol	mon -> rs		5562258						
ANR	5562920	Symbol	* cmd		5562258						
ANR	5562921	Symbol	next_arg_type		5562258						
ANR	5562922	Symbol	sep		5562258						
ANR	5562923	Symbol	strcmp		5562258						
ANR	5562924	Symbol	* nb_args		5562258						
ANR	5562925	Symbol	NULL		5562258						
ANR	5562926	Symbol	mbs . input		5562258						
ANR	5562927	Symbol	& mbs		5562258						
ANR	5562928	Symbol	* cmdline		5562258						
ANR	5562929	Symbol	cmd -> name		5562258						
ANR	5562930	Symbol	i		5562258						
ANR	5562931	Symbol	block_completion_it		5562258						
ANR	5562932	Symbol	qemu_isspace		5562258						
ANR	5562933	Symbol	args		5562258						
ANR	5562934	Symbol	str		5562258						
ANR	5562935	Symbol	* i		5562258						
ANR	5562936	Symbol	* ptype		5562258						
ANR	5562937	Symbol	* mon		5562258						
ANR	5562938	Symbol	strrchr		5562258						
ANR	5562939	Symbol	cmdname		5562258						
ANR	5562940	Symbol	cmd		5562258						
ANR	5562941	Symbol	cmd -> args_type		5562258						
ANR	5562942	Symbol	mbs		5562258						
ANR	5562943	Symbol	* len		5562258						
