command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5168468	File	/home/p4ultr4n/workplace/ReVeal/raw_code/lag_decode_zero_run_line_02_1.c								
ANR	5168469	Function	lag_decode_zero_run_line	1:0:0:1176							
ANR	5168470	FunctionDef	"lag_decode_zero_run_line (LagarithContext * l , uint8_t * dst , const uint8_t * src , int width , int esc_count)"		5168469	0					
ANR	5168471	CompoundStatement		7:0:191:1176	5168469	0					
ANR	5168472	IdentifierDeclStatement	int i = 0 ;	9:4:198:207	5168469	0	True				
ANR	5168473	IdentifierDecl	i = 0		5168469	0					
ANR	5168474	IdentifierDeclType	int		5168469	0					
ANR	5168475	Identifier	i		5168469	1					
ANR	5168476	AssignmentExpression	i = 0		5168469	2		=			
ANR	5168477	Identifier	i		5168469	0					
ANR	5168478	PrimaryExpression	0		5168469	1					
ANR	5168479	IdentifierDeclStatement	int count ;	11:4:214:223	5168469	1	True				
ANR	5168480	IdentifierDecl	count		5168469	0					
ANR	5168481	IdentifierDeclType	int		5168469	0					
ANR	5168482	Identifier	count		5168469	1					
ANR	5168483	IdentifierDeclStatement	uint8_t zero_run = 0 ;	13:4:230:250	5168469	2	True				
ANR	5168484	IdentifierDecl	zero_run = 0		5168469	0					
ANR	5168485	IdentifierDeclType	uint8_t		5168469	0					
ANR	5168486	Identifier	zero_run		5168469	1					
ANR	5168487	AssignmentExpression	zero_run = 0		5168469	2		=			
ANR	5168488	Identifier	zero_run		5168469	0					
ANR	5168489	PrimaryExpression	0		5168469	1					
ANR	5168490	IdentifierDeclStatement	const uint8_t * start = src ;	15:4:257:283	5168469	3	True				
ANR	5168491	IdentifierDecl	* start = src		5168469	0					
ANR	5168492	IdentifierDeclType	const uint8_t *		5168469	0					
ANR	5168493	Identifier	start		5168469	1					
ANR	5168494	AssignmentExpression	* start = src		5168469	2		=			
ANR	5168495	Identifier	src		5168469	0					
ANR	5168496	Identifier	src		5168469	1					
ANR	5168497	IdentifierDeclStatement	uint8_t mask1 = - ( esc_count < 2 ) ;	17:4:290:322	5168469	4	True				
ANR	5168498	IdentifierDecl	mask1 = - ( esc_count < 2 )		5168469	0					
ANR	5168499	IdentifierDeclType	uint8_t		5168469	0					
ANR	5168500	Identifier	mask1		5168469	1					
ANR	5168501	AssignmentExpression	mask1 = - ( esc_count < 2 )		5168469	2		=			
ANR	5168502	Identifier	mask1		5168469	0					
ANR	5168503	UnaryOperationExpression	- ( esc_count < 2 )		5168469	1					
ANR	5168504	UnaryOperator	-		5168469	0					
ANR	5168505	RelationalExpression	esc_count < 2		5168469	1		<			
ANR	5168506	Identifier	esc_count		5168469	0					
ANR	5168507	PrimaryExpression	2		5168469	1					
ANR	5168508	IdentifierDeclStatement	uint8_t mask2 = - ( esc_count < 3 ) ;	19:4:329:361	5168469	5	True				
ANR	5168509	IdentifierDecl	mask2 = - ( esc_count < 3 )		5168469	0					
ANR	5168510	IdentifierDeclType	uint8_t		5168469	0					
ANR	5168511	Identifier	mask2		5168469	1					
ANR	5168512	AssignmentExpression	mask2 = - ( esc_count < 3 )		5168469	2		=			
ANR	5168513	Identifier	mask2		5168469	0					
ANR	5168514	UnaryOperationExpression	- ( esc_count < 3 )		5168469	1					
ANR	5168515	UnaryOperator	-		5168469	0					
ANR	5168516	RelationalExpression	esc_count < 3		5168469	1		<			
ANR	5168517	Identifier	esc_count		5168469	0					
ANR	5168518	PrimaryExpression	3		5168469	1					
ANR	5168519	IdentifierDeclStatement	uint8_t * end = dst + ( width - 2 ) ;	21:4:368:400	5168469	6	True				
ANR	5168520	IdentifierDecl	* end = dst + ( width - 2 )		5168469	0					
ANR	5168521	IdentifierDeclType	uint8_t *		5168469	0					
ANR	5168522	Identifier	end		5168469	1					
ANR	5168523	AssignmentExpression	* end = dst + ( width - 2 )		5168469	2		=			
ANR	5168524	Identifier	end		5168469	0					
ANR	5168525	AdditiveExpression	dst + ( width - 2 )		5168469	1		+			
ANR	5168526	Identifier	dst		5168469	0					
ANR	5168527	AdditiveExpression	width - 2		5168469	1		-			
ANR	5168528	Identifier	width		5168469	0					
ANR	5168529	PrimaryExpression	2		5168469	1					
ANR	5168530	Label	output_zeros :	25:0:405:417	5168469	7	True				
ANR	5168531	Identifier	output_zeros		5168469	0					
ANR	5168532	IfStatement	if ( l -> zeros_rem )		5168469	8					
ANR	5168533	Condition	l -> zeros_rem	27:8:428:439	5168469	0	True				
ANR	5168534	PtrMemberAccess	l -> zeros_rem		5168469	0					
ANR	5168535	Identifier	l		5168469	0					
ANR	5168536	Identifier	zeros_rem		5168469	1					
ANR	5168537	CompoundStatement		21:22:250:250	5168469	1					
ANR	5168538	ExpressionStatement	"count = FFMIN ( l -> zeros_rem , width - i )"	29:8:453:491	5168469	0	True				
ANR	5168539	AssignmentExpression	"count = FFMIN ( l -> zeros_rem , width - i )"		5168469	0		=			
ANR	5168540	Identifier	count		5168469	0					
ANR	5168541	CallExpression	"FFMIN ( l -> zeros_rem , width - i )"		5168469	1					
ANR	5168542	Callee	FFMIN		5168469	0					
ANR	5168543	Identifier	FFMIN		5168469	0					
ANR	5168544	ArgumentList	l -> zeros_rem		5168469	1					
ANR	5168545	Argument	l -> zeros_rem		5168469	0					
ANR	5168546	PtrMemberAccess	l -> zeros_rem		5168469	0					
ANR	5168547	Identifier	l		5168469	0					
ANR	5168548	Identifier	zeros_rem		5168469	1					
ANR	5168549	Argument	width - i		5168469	1					
ANR	5168550	AdditiveExpression	width - i		5168469	0		-			
ANR	5168551	Identifier	width		5168469	0					
ANR	5168552	Identifier	i		5168469	1					
ANR	5168553	ExpressionStatement	"memset ( dst , 0 , count )"	31:8:502:523	5168469	1	True				
ANR	5168554	CallExpression	"memset ( dst , 0 , count )"		5168469	0					
ANR	5168555	Callee	memset		5168469	0					
ANR	5168556	Identifier	memset		5168469	0					
ANR	5168557	ArgumentList	dst		5168469	1					
ANR	5168558	Argument	dst		5168469	0					
ANR	5168559	Identifier	dst		5168469	0					
ANR	5168560	Argument	0		5168469	1					
ANR	5168561	PrimaryExpression	0		5168469	0					
ANR	5168562	Argument	count		5168469	2					
ANR	5168563	Identifier	count		5168469	0					
ANR	5168564	ExpressionStatement	l -> zeros_rem -= count	33:8:534:555	5168469	2	True				
ANR	5168565	AssignmentExpression	l -> zeros_rem -= count		5168469	0		-=			
ANR	5168566	PtrMemberAccess	l -> zeros_rem		5168469	0					
ANR	5168567	Identifier	l		5168469	0					
ANR	5168568	Identifier	zeros_rem		5168469	1					
ANR	5168569	Identifier	count		5168469	1					
ANR	5168570	ExpressionStatement	dst += count	35:8:566:578	5168469	3	True				
ANR	5168571	AssignmentExpression	dst += count		5168469	0		+=			
ANR	5168572	Identifier	dst		5168469	0					
ANR	5168573	Identifier	count		5168469	1					
ANR	5168574	WhileStatement	while ( dst < end )		5168469	9					
ANR	5168575	Condition	dst < end	41:11:601:609	5168469	0	True				
ANR	5168576	RelationalExpression	dst < end		5168469	0		<			
ANR	5168577	Identifier	dst		5168469	0					
ANR	5168578	Identifier	end		5168469	1					
ANR	5168579	CompoundStatement		35:22:420:420	5168469	1					
ANR	5168580	ExpressionStatement	i = 0	43:8:623:628	5168469	0	True				
ANR	5168581	AssignmentExpression	i = 0		5168469	0		=			
ANR	5168582	Identifier	i		5168469	0					
ANR	5168583	PrimaryExpression	0		5168469	1					
ANR	5168584	WhileStatement	while ( ! zero_run && dst + i < end )		5168469	1					
ANR	5168585	Condition	! zero_run && dst + i < end	45:15:646:671	5168469	0	True				
ANR	5168586	AndExpression	! zero_run && dst + i < end		5168469	0		&&			
ANR	5168587	UnaryOperationExpression	! zero_run		5168469	0					
ANR	5168588	UnaryOperator	!		5168469	0					
ANR	5168589	Identifier	zero_run		5168469	1					
ANR	5168590	RelationalExpression	dst + i < end		5168469	1		<			
ANR	5168591	AdditiveExpression	dst + i		5168469	0		+			
ANR	5168592	Identifier	dst		5168469	0					
ANR	5168593	Identifier	i		5168469	1					
ANR	5168594	Identifier	end		5168469	1					
ANR	5168595	CompoundStatement		39:43:482:482	5168469	1					
ANR	5168596	ExpressionStatement	i ++	47:12:689:692	5168469	0	True				
ANR	5168597	PostIncDecOperationExpression	i ++		5168469	0					
ANR	5168598	Identifier	i		5168469	0					
ANR	5168599	IncDec	++		5168469	1					
ANR	5168600	ExpressionStatement	zero_run = ! ( src [ i ] | ( src [ i + 1 ] & mask1 ) | ( src [ i + 2 ] & mask2 ) )	49:12:707:790	5168469	1	True				
ANR	5168601	AssignmentExpression	zero_run = ! ( src [ i ] | ( src [ i + 1 ] & mask1 ) | ( src [ i + 2 ] & mask2 ) )		5168469	0		=			
ANR	5168602	Identifier	zero_run		5168469	0					
ANR	5168603	UnaryOperationExpression	! ( src [ i ] | ( src [ i + 1 ] & mask1 ) | ( src [ i + 2 ] & mask2 ) )		5168469	1					
ANR	5168604	UnaryOperator	!		5168469	0					
ANR	5168605	InclusiveOrExpression	src [ i ] | ( src [ i + 1 ] & mask1 ) | ( src [ i + 2 ] & mask2 )		5168469	1		|			
ANR	5168606	ArrayIndexing	src [ i ]		5168469	0					
ANR	5168607	Identifier	src		5168469	0					
ANR	5168608	Identifier	i		5168469	1					
ANR	5168609	InclusiveOrExpression	( src [ i + 1 ] & mask1 ) | ( src [ i + 2 ] & mask2 )		5168469	1		|			
ANR	5168610	BitAndExpression	src [ i + 1 ] & mask1		5168469	0		&			
ANR	5168611	ArrayIndexing	src [ i + 1 ]		5168469	0					
ANR	5168612	Identifier	src		5168469	0					
ANR	5168613	AdditiveExpression	i + 1		5168469	1		+			
ANR	5168614	Identifier	i		5168469	0					
ANR	5168615	PrimaryExpression	1		5168469	1					
ANR	5168616	Identifier	mask1		5168469	1					
ANR	5168617	BitAndExpression	src [ i + 2 ] & mask2		5168469	1		&			
ANR	5168618	ArrayIndexing	src [ i + 2 ]		5168469	0					
ANR	5168619	Identifier	src		5168469	0					
ANR	5168620	AdditiveExpression	i + 2		5168469	1		+			
ANR	5168621	Identifier	i		5168469	0					
ANR	5168622	PrimaryExpression	2		5168469	1					
ANR	5168623	Identifier	mask2		5168469	1					
ANR	5168624	IfStatement	if ( zero_run )		5168469	2					
ANR	5168625	Condition	zero_run	55:12:816:823	5168469	0	True				
ANR	5168626	Identifier	zero_run		5168469	0					
ANR	5168627	CompoundStatement		49:22:634:634	5168469	1					
ANR	5168628	ExpressionStatement	zero_run = 0	57:12:841:853	5168469	0	True				
ANR	5168629	AssignmentExpression	zero_run = 0		5168469	0		=			
ANR	5168630	Identifier	zero_run		5168469	0					
ANR	5168631	PrimaryExpression	0		5168469	1					
ANR	5168632	ExpressionStatement	i += esc_count	59:12:868:882	5168469	1	True				
ANR	5168633	AssignmentExpression	i += esc_count		5168469	0		+=			
ANR	5168634	Identifier	i		5168469	0					
ANR	5168635	Identifier	esc_count		5168469	1					
ANR	5168636	ExpressionStatement	"memcpy ( dst , src , i )"	61:12:897:916	5168469	2	True				
ANR	5168637	CallExpression	"memcpy ( dst , src , i )"		5168469	0					
ANR	5168638	Callee	memcpy		5168469	0					
ANR	5168639	Identifier	memcpy		5168469	0					
ANR	5168640	ArgumentList	dst		5168469	1					
ANR	5168641	Argument	dst		5168469	0					
ANR	5168642	Identifier	dst		5168469	0					
ANR	5168643	Argument	src		5168469	1					
ANR	5168644	Identifier	src		5168469	0					
ANR	5168645	Argument	i		5168469	2					
ANR	5168646	Identifier	i		5168469	0					
ANR	5168647	ExpressionStatement	dst += i	63:12:931:939	5168469	3	True				
ANR	5168648	AssignmentExpression	dst += i		5168469	0		+=			
ANR	5168649	Identifier	dst		5168469	0					
ANR	5168650	Identifier	i		5168469	1					
ANR	5168651	ExpressionStatement	l -> zeros_rem = lag_calc_zero_run ( src [ i ] )	65:12:954:994	5168469	4	True				
ANR	5168652	AssignmentExpression	l -> zeros_rem = lag_calc_zero_run ( src [ i ] )		5168469	0		=			
ANR	5168653	PtrMemberAccess	l -> zeros_rem		5168469	0					
ANR	5168654	Identifier	l		5168469	0					
ANR	5168655	Identifier	zeros_rem		5168469	1					
ANR	5168656	CallExpression	lag_calc_zero_run ( src [ i ] )		5168469	1					
ANR	5168657	Callee	lag_calc_zero_run		5168469	0					
ANR	5168658	Identifier	lag_calc_zero_run		5168469	0					
ANR	5168659	ArgumentList	src [ i ]		5168469	1					
ANR	5168660	Argument	src [ i ]		5168469	0					
ANR	5168661	ArrayIndexing	src [ i ]		5168469	0					
ANR	5168662	Identifier	src		5168469	0					
ANR	5168663	Identifier	i		5168469	1					
ANR	5168664	ExpressionStatement	src += i + 1	69:12:1011:1023	5168469	5	True				
ANR	5168665	AssignmentExpression	src += i + 1		5168469	0		+=			
ANR	5168666	Identifier	src		5168469	0					
ANR	5168667	AdditiveExpression	i + 1		5168469	1		+			
ANR	5168668	Identifier	i		5168469	0					
ANR	5168669	PrimaryExpression	1		5168469	1					
ANR	5168670	GotoStatement	goto output_zeros ;	71:12:1038:1055	5168469	6	True				
ANR	5168671	Identifier	output_zeros		5168469	0					
ANR	5168672	ElseStatement	else		5168469	0					
ANR	5168673	CompoundStatement		67:15:881:881	5168469	0					
ANR	5168674	ExpressionStatement	"memcpy ( dst , src , i )"	75:12:1088:1107	5168469	0	True				
ANR	5168675	CallExpression	"memcpy ( dst , src , i )"		5168469	0					
ANR	5168676	Callee	memcpy		5168469	0					
ANR	5168677	Identifier	memcpy		5168469	0					
ANR	5168678	ArgumentList	dst		5168469	1					
ANR	5168679	Argument	dst		5168469	0					
ANR	5168680	Identifier	dst		5168469	0					
ANR	5168681	Argument	src		5168469	1					
ANR	5168682	Identifier	src		5168469	0					
ANR	5168683	Argument	i		5168469	2					
ANR	5168684	Identifier	i		5168469	0					
ANR	5168685	ExpressionStatement	src += i	77:12:1122:1130	5168469	1	True				
ANR	5168686	AssignmentExpression	src += i		5168469	0		+=			
ANR	5168687	Identifier	src		5168469	0					
ANR	5168688	Identifier	i		5168469	1					
ANR	5168689	ReturnStatement	return start - src ;	83:4:1155:1173	5168469	10	True				
ANR	5168690	AdditiveExpression	start - src		5168469	0		-			
ANR	5168691	Identifier	start		5168469	0					
ANR	5168692	Identifier	src		5168469	1					
ANR	5168693	ReturnType	static int		5168469	1					
ANR	5168694	Identifier	lag_decode_zero_run_line		5168469	2					
ANR	5168695	ParameterList	"LagarithContext * l , uint8_t * dst , const uint8_t * src , int width , int esc_count"		5168469	3					
ANR	5168696	Parameter	LagarithContext * l	1:36:36:53	5168469	0	True				
ANR	5168697	ParameterType	LagarithContext *		5168469	0					
ANR	5168698	Identifier	l		5168469	1					
ANR	5168699	Parameter	uint8_t * dst	1:56:56:67	5168469	1	True				
ANR	5168700	ParameterType	uint8_t *		5168469	0					
ANR	5168701	Identifier	dst		5168469	1					
ANR	5168702	Parameter	const uint8_t * src	3:36:107:124	5168469	2	True				
ANR	5168703	ParameterType	const uint8_t *		5168469	0					
ANR	5168704	Identifier	src		5168469	1					
ANR	5168705	Parameter	int width	3:56:127:135	5168469	3	True				
ANR	5168706	ParameterType	int		5168469	0					
ANR	5168707	Identifier	width		5168469	1					
ANR	5168708	Parameter	int esc_count	5:36:175:187	5168469	4	True				
ANR	5168709	ParameterType	int		5168469	0					
ANR	5168710	Identifier	esc_count		5168469	1					
ANR	5168711	CFGEntryNode	ENTRY		5168469		True				
ANR	5168712	CFGExitNode	EXIT		5168469		True				
ANR	5168713	Symbol	zero_run		5168469						
ANR	5168714	Symbol	dst		5168469						
ANR	5168715	Symbol	src		5168469						
ANR	5168716	Symbol	count		5168469						
ANR	5168717	Symbol	start		5168469						
ANR	5168718	Symbol	mask1		5168469						
ANR	5168719	Symbol	i		5168469						
ANR	5168720	Symbol	l -> zeros_rem		5168469						
ANR	5168721	Symbol	FFMIN		5168469						
ANR	5168722	Symbol	mask2		5168469						
ANR	5168723	Symbol	l		5168469						
ANR	5168724	Symbol	lag_calc_zero_run		5168469						
ANR	5168725	Symbol	* src		5168469						
ANR	5168726	Symbol	* i		5168469						
ANR	5168727	Symbol	esc_count		5168469						
ANR	5168728	Symbol	* l		5168469						
ANR	5168729	Symbol	width		5168469						
ANR	5168730	Symbol	end		5168469						
