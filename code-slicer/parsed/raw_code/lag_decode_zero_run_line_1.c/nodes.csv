command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5168731	File	/home/p4ultr4n/workplace/ReVeal/raw_code/lag_decode_zero_run_line_1.c								
ANR	5168732	Function	lag_decode_zero_run_line	1:0:0:1426							
ANR	5168733	FunctionDef	"lag_decode_zero_run_line (LagarithContext * l , uint8_t * dst , const uint8_t * src , const uint8_t * src_end , int width , int esc_count)"		5168732	0					
ANR	5168734	CompoundStatement		4:0:212:1426	5168732	0					
ANR	5168735	IdentifierDeclStatement	int i = 0 ;	5:4:218:227	5168732	0	True				
ANR	5168736	IdentifierDecl	i = 0		5168732	0					
ANR	5168737	IdentifierDeclType	int		5168732	0					
ANR	5168738	Identifier	i		5168732	1					
ANR	5168739	AssignmentExpression	i = 0		5168732	2		=			
ANR	5168740	Identifier	i		5168732	0					
ANR	5168741	PrimaryExpression	0		5168732	1					
ANR	5168742	IdentifierDeclStatement	int count ;	6:4:233:242	5168732	1	True				
ANR	5168743	IdentifierDecl	count		5168732	0					
ANR	5168744	IdentifierDeclType	int		5168732	0					
ANR	5168745	Identifier	count		5168732	1					
ANR	5168746	IdentifierDeclStatement	uint8_t zero_run = 0 ;	7:4:248:268	5168732	2	True				
ANR	5168747	IdentifierDecl	zero_run = 0		5168732	0					
ANR	5168748	IdentifierDeclType	uint8_t		5168732	0					
ANR	5168749	Identifier	zero_run		5168732	1					
ANR	5168750	AssignmentExpression	zero_run = 0		5168732	2		=			
ANR	5168751	Identifier	zero_run		5168732	0					
ANR	5168752	PrimaryExpression	0		5168732	1					
ANR	5168753	IdentifierDeclStatement	const uint8_t * src_start = src ;	8:4:274:304	5168732	3	True				
ANR	5168754	IdentifierDecl	* src_start = src		5168732	0					
ANR	5168755	IdentifierDeclType	const uint8_t *		5168732	0					
ANR	5168756	Identifier	src_start		5168732	1					
ANR	5168757	AssignmentExpression	* src_start = src		5168732	2		=			
ANR	5168758	Identifier	src		5168732	0					
ANR	5168759	Identifier	src		5168732	1					
ANR	5168760	IdentifierDeclStatement	uint8_t mask1 = - ( esc_count < 2 ) ;	9:4:310:342	5168732	4	True				
ANR	5168761	IdentifierDecl	mask1 = - ( esc_count < 2 )		5168732	0					
ANR	5168762	IdentifierDeclType	uint8_t		5168732	0					
ANR	5168763	Identifier	mask1		5168732	1					
ANR	5168764	AssignmentExpression	mask1 = - ( esc_count < 2 )		5168732	2		=			
ANR	5168765	Identifier	mask1		5168732	0					
ANR	5168766	UnaryOperationExpression	- ( esc_count < 2 )		5168732	1					
ANR	5168767	UnaryOperator	-		5168732	0					
ANR	5168768	RelationalExpression	esc_count < 2		5168732	1		<			
ANR	5168769	Identifier	esc_count		5168732	0					
ANR	5168770	PrimaryExpression	2		5168732	1					
ANR	5168771	IdentifierDeclStatement	uint8_t mask2 = - ( esc_count < 3 ) ;	10:4:348:380	5168732	5	True				
ANR	5168772	IdentifierDecl	mask2 = - ( esc_count < 3 )		5168732	0					
ANR	5168773	IdentifierDeclType	uint8_t		5168732	0					
ANR	5168774	Identifier	mask2		5168732	1					
ANR	5168775	AssignmentExpression	mask2 = - ( esc_count < 3 )		5168732	2		=			
ANR	5168776	Identifier	mask2		5168732	0					
ANR	5168777	UnaryOperationExpression	- ( esc_count < 3 )		5168732	1					
ANR	5168778	UnaryOperator	-		5168732	0					
ANR	5168779	RelationalExpression	esc_count < 3		5168732	1		<			
ANR	5168780	Identifier	esc_count		5168732	0					
ANR	5168781	PrimaryExpression	3		5168732	1					
ANR	5168782	IdentifierDeclStatement	uint8_t * end = dst + ( width - 2 ) ;	11:4:386:418	5168732	6	True				
ANR	5168783	IdentifierDecl	* end = dst + ( width - 2 )		5168732	0					
ANR	5168784	IdentifierDeclType	uint8_t *		5168732	0					
ANR	5168785	Identifier	end		5168732	1					
ANR	5168786	AssignmentExpression	* end = dst + ( width - 2 )		5168732	2		=			
ANR	5168787	Identifier	end		5168732	0					
ANR	5168788	AdditiveExpression	dst + ( width - 2 )		5168732	1		+			
ANR	5168789	Identifier	dst		5168732	0					
ANR	5168790	AdditiveExpression	width - 2		5168732	1		-			
ANR	5168791	Identifier	width		5168732	0					
ANR	5168792	PrimaryExpression	2		5168732	1					
ANR	5168793	Label	output_zeros :	12:0:420:432	5168732	7	True				
ANR	5168794	Identifier	output_zeros		5168732	0					
ANR	5168795	IfStatement	if ( l -> zeros_rem )		5168732	8					
ANR	5168796	Condition	l -> zeros_rem	13:8:442:453	5168732	0	True				
ANR	5168797	PtrMemberAccess	l -> zeros_rem		5168732	0					
ANR	5168798	Identifier	l		5168732	0					
ANR	5168799	Identifier	zeros_rem		5168732	1					
ANR	5168800	CompoundStatement		10:22:243:243	5168732	1					
ANR	5168801	ExpressionStatement	"count = FFMIN ( l -> zeros_rem , width - i )"	14:8:466:504	5168732	0	True				
ANR	5168802	AssignmentExpression	"count = FFMIN ( l -> zeros_rem , width - i )"		5168732	0		=			
ANR	5168803	Identifier	count		5168732	0					
ANR	5168804	CallExpression	"FFMIN ( l -> zeros_rem , width - i )"		5168732	1					
ANR	5168805	Callee	FFMIN		5168732	0					
ANR	5168806	Identifier	FFMIN		5168732	0					
ANR	5168807	ArgumentList	l -> zeros_rem		5168732	1					
ANR	5168808	Argument	l -> zeros_rem		5168732	0					
ANR	5168809	PtrMemberAccess	l -> zeros_rem		5168732	0					
ANR	5168810	Identifier	l		5168732	0					
ANR	5168811	Identifier	zeros_rem		5168732	1					
ANR	5168812	Argument	width - i		5168732	1					
ANR	5168813	AdditiveExpression	width - i		5168732	0		-			
ANR	5168814	Identifier	width		5168732	0					
ANR	5168815	Identifier	i		5168732	1					
ANR	5168816	IfStatement	if ( end - dst < count )		5168732	1					
ANR	5168817	Condition	end - dst < count	15:12:518:534	5168732	0	True				
ANR	5168818	RelationalExpression	end - dst < count		5168732	0		<			
ANR	5168819	AdditiveExpression	end - dst		5168732	0		-			
ANR	5168820	Identifier	end		5168732	0					
ANR	5168821	Identifier	dst		5168732	1					
ANR	5168822	Identifier	count		5168732	1					
ANR	5168823	CompoundStatement		12:31:324:324	5168732	1					
ANR	5168824	ExpressionStatement	"av_log ( l -> avctx , AV_LOG_ERROR , ""Too many zeros remaining.\\n"" )"	16:12:551:612	5168732	0	True				
ANR	5168825	CallExpression	"av_log ( l -> avctx , AV_LOG_ERROR , ""Too many zeros remaining.\\n"" )"		5168732	0					
ANR	5168826	Callee	av_log		5168732	0					
ANR	5168827	Identifier	av_log		5168732	0					
ANR	5168828	ArgumentList	l -> avctx		5168732	1					
ANR	5168829	Argument	l -> avctx		5168732	0					
ANR	5168830	PtrMemberAccess	l -> avctx		5168732	0					
ANR	5168831	Identifier	l		5168732	0					
ANR	5168832	Identifier	avctx		5168732	1					
ANR	5168833	Argument	AV_LOG_ERROR		5168732	1					
ANR	5168834	Identifier	AV_LOG_ERROR		5168732	0					
ANR	5168835	Argument	"""Too many zeros remaining.\\n"""		5168732	2					
ANR	5168836	PrimaryExpression	"""Too many zeros remaining.\\n"""		5168732	0					
ANR	5168837	ReturnStatement	return AVERROR_INVALIDDATA ;	17:12:626:652	5168732	1	True				
ANR	5168838	Identifier	AVERROR_INVALIDDATA		5168732	0					
ANR	5168839	ExpressionStatement	"memset ( dst , 0 , count )"	19:8:672:693	5168732	2	True				
ANR	5168840	CallExpression	"memset ( dst , 0 , count )"		5168732	0					
ANR	5168841	Callee	memset		5168732	0					
ANR	5168842	Identifier	memset		5168732	0					
ANR	5168843	ArgumentList	dst		5168732	1					
ANR	5168844	Argument	dst		5168732	0					
ANR	5168845	Identifier	dst		5168732	0					
ANR	5168846	Argument	0		5168732	1					
ANR	5168847	PrimaryExpression	0		5168732	0					
ANR	5168848	Argument	count		5168732	2					
ANR	5168849	Identifier	count		5168732	0					
ANR	5168850	ExpressionStatement	l -> zeros_rem -= count	20:8:703:724	5168732	3	True				
ANR	5168851	AssignmentExpression	l -> zeros_rem -= count		5168732	0		-=			
ANR	5168852	PtrMemberAccess	l -> zeros_rem		5168732	0					
ANR	5168853	Identifier	l		5168732	0					
ANR	5168854	Identifier	zeros_rem		5168732	1					
ANR	5168855	Identifier	count		5168732	1					
ANR	5168856	ExpressionStatement	dst += count	21:8:734:746	5168732	4	True				
ANR	5168857	AssignmentExpression	dst += count		5168732	0		+=			
ANR	5168858	Identifier	dst		5168732	0					
ANR	5168859	Identifier	count		5168732	1					
ANR	5168860	WhileStatement	while ( dst < end )		5168732	9					
ANR	5168861	Condition	dst < end	23:11:765:773	5168732	0	True				
ANR	5168862	RelationalExpression	dst < end		5168732	0		<			
ANR	5168863	Identifier	dst		5168732	0					
ANR	5168864	Identifier	end		5168732	1					
ANR	5168865	CompoundStatement		20:22:563:563	5168732	1					
ANR	5168866	ExpressionStatement	i = 0	24:8:786:791	5168732	0	True				
ANR	5168867	AssignmentExpression	i = 0		5168732	0		=			
ANR	5168868	Identifier	i		5168732	0					
ANR	5168869	PrimaryExpression	0		5168732	1					
ANR	5168870	WhileStatement	while ( ! zero_run && dst + i < end )		5168732	1					
ANR	5168871	Condition	! zero_run && dst + i < end	25:15:808:833	5168732	0	True				
ANR	5168872	AndExpression	! zero_run && dst + i < end		5168732	0		&&			
ANR	5168873	UnaryOperationExpression	! zero_run		5168732	0					
ANR	5168874	UnaryOperator	!		5168732	0					
ANR	5168875	Identifier	zero_run		5168732	1					
ANR	5168876	RelationalExpression	dst + i < end		5168732	1		<			
ANR	5168877	AdditiveExpression	dst + i		5168732	0		+			
ANR	5168878	Identifier	dst		5168732	0					
ANR	5168879	Identifier	i		5168732	1					
ANR	5168880	Identifier	end		5168732	1					
ANR	5168881	CompoundStatement		22:43:623:623	5168732	1					
ANR	5168882	ExpressionStatement	i ++	26:12:850:853	5168732	0	True				
ANR	5168883	PostIncDecOperationExpression	i ++		5168732	0					
ANR	5168884	Identifier	i		5168732	0					
ANR	5168885	IncDec	++		5168732	1					
ANR	5168886	IfStatement	if ( i + 2 >= src_end - src )		5168732	1					
ANR	5168887	Condition	i + 2 >= src_end - src	27:16:871:890	5168732	0	True				
ANR	5168888	RelationalExpression	i + 2 >= src_end - src		5168732	0		>=			
ANR	5168889	AdditiveExpression	i + 2		5168732	0		+			
ANR	5168890	Identifier	i		5168732	0					
ANR	5168891	PrimaryExpression	2		5168732	1					
ANR	5168892	AdditiveExpression	src_end - src		5168732	1		-			
ANR	5168893	Identifier	src_end		5168732	0					
ANR	5168894	Identifier	src		5168732	1					
ANR	5168895	ReturnStatement	return AVERROR_INVALIDDATA ;	28:16:909:935	5168732	1	True				
ANR	5168896	Identifier	AVERROR_INVALIDDATA		5168732	0					
ANR	5168897	ExpressionStatement	zero_run = ! ( src [ i ] | ( src [ i + 1 ] & mask1 ) | ( src [ i + 2 ] & mask2 ) )	29:12:949:1031	5168732	2	True				
ANR	5168898	AssignmentExpression	zero_run = ! ( src [ i ] | ( src [ i + 1 ] & mask1 ) | ( src [ i + 2 ] & mask2 ) )		5168732	0		=			
ANR	5168899	Identifier	zero_run		5168732	0					
ANR	5168900	UnaryOperationExpression	! ( src [ i ] | ( src [ i + 1 ] & mask1 ) | ( src [ i + 2 ] & mask2 ) )		5168732	1					
ANR	5168901	UnaryOperator	!		5168732	0					
ANR	5168902	InclusiveOrExpression	src [ i ] | ( src [ i + 1 ] & mask1 ) | ( src [ i + 2 ] & mask2 )		5168732	1		|			
ANR	5168903	ArrayIndexing	src [ i ]		5168732	0					
ANR	5168904	Identifier	src		5168732	0					
ANR	5168905	Identifier	i		5168732	1					
ANR	5168906	InclusiveOrExpression	( src [ i + 1 ] & mask1 ) | ( src [ i + 2 ] & mask2 )		5168732	1		|			
ANR	5168907	BitAndExpression	src [ i + 1 ] & mask1		5168732	0		&			
ANR	5168908	ArrayIndexing	src [ i + 1 ]		5168732	0					
ANR	5168909	Identifier	src		5168732	0					
ANR	5168910	AdditiveExpression	i + 1		5168732	1		+			
ANR	5168911	Identifier	i		5168732	0					
ANR	5168912	PrimaryExpression	1		5168732	1					
ANR	5168913	Identifier	mask1		5168732	1					
ANR	5168914	BitAndExpression	src [ i + 2 ] & mask2		5168732	1		&			
ANR	5168915	ArrayIndexing	src [ i + 2 ]		5168732	0					
ANR	5168916	Identifier	src		5168732	0					
ANR	5168917	AdditiveExpression	i + 2		5168732	1		+			
ANR	5168918	Identifier	i		5168732	0					
ANR	5168919	PrimaryExpression	2		5168732	1					
ANR	5168920	Identifier	mask2		5168732	1					
ANR	5168921	IfStatement	if ( zero_run )		5168732	2					
ANR	5168922	Condition	zero_run	32:12:1055:1062	5168732	0	True				
ANR	5168923	Identifier	zero_run		5168732	0					
ANR	5168924	CompoundStatement		29:22:852:852	5168732	1					
ANR	5168925	ExpressionStatement	zero_run = 0	33:12:1079:1091	5168732	0	True				
ANR	5168926	AssignmentExpression	zero_run = 0		5168732	0		=			
ANR	5168927	Identifier	zero_run		5168732	0					
ANR	5168928	PrimaryExpression	0		5168732	1					
ANR	5168929	ExpressionStatement	i += esc_count	34:12:1105:1119	5168732	1	True				
ANR	5168930	AssignmentExpression	i += esc_count		5168732	0		+=			
ANR	5168931	Identifier	i		5168732	0					
ANR	5168932	Identifier	esc_count		5168732	1					
ANR	5168933	ExpressionStatement	"memcpy ( dst , src , i )"	35:12:1133:1152	5168732	2	True				
ANR	5168934	CallExpression	"memcpy ( dst , src , i )"		5168732	0					
ANR	5168935	Callee	memcpy		5168732	0					
ANR	5168936	Identifier	memcpy		5168732	0					
ANR	5168937	ArgumentList	dst		5168732	1					
ANR	5168938	Argument	dst		5168732	0					
ANR	5168939	Identifier	dst		5168732	0					
ANR	5168940	Argument	src		5168732	1					
ANR	5168941	Identifier	src		5168732	0					
ANR	5168942	Argument	i		5168732	2					
ANR	5168943	Identifier	i		5168732	0					
ANR	5168944	ExpressionStatement	dst += i	36:12:1166:1174	5168732	3	True				
ANR	5168945	AssignmentExpression	dst += i		5168732	0		+=			
ANR	5168946	Identifier	dst		5168732	0					
ANR	5168947	Identifier	i		5168732	1					
ANR	5168948	ExpressionStatement	l -> zeros_rem = lag_calc_zero_run ( src [ i ] )	37:12:1188:1228	5168732	4	True				
ANR	5168949	AssignmentExpression	l -> zeros_rem = lag_calc_zero_run ( src [ i ] )		5168732	0		=			
ANR	5168950	PtrMemberAccess	l -> zeros_rem		5168732	0					
ANR	5168951	Identifier	l		5168732	0					
ANR	5168952	Identifier	zeros_rem		5168732	1					
ANR	5168953	CallExpression	lag_calc_zero_run ( src [ i ] )		5168732	1					
ANR	5168954	Callee	lag_calc_zero_run		5168732	0					
ANR	5168955	Identifier	lag_calc_zero_run		5168732	0					
ANR	5168956	ArgumentList	src [ i ]		5168732	1					
ANR	5168957	Argument	src [ i ]		5168732	0					
ANR	5168958	ArrayIndexing	src [ i ]		5168732	0					
ANR	5168959	Identifier	src		5168732	0					
ANR	5168960	Identifier	i		5168732	1					
ANR	5168961	ExpressionStatement	src += i + 1	38:12:1242:1254	5168732	5	True				
ANR	5168962	AssignmentExpression	src += i + 1		5168732	0		+=			
ANR	5168963	Identifier	src		5168732	0					
ANR	5168964	AdditiveExpression	i + 1		5168732	1		+			
ANR	5168965	Identifier	i		5168732	0					
ANR	5168966	PrimaryExpression	1		5168732	1					
ANR	5168967	GotoStatement	goto output_zeros ;	39:12:1268:1285	5168732	6	True				
ANR	5168968	Identifier	output_zeros		5168732	0					
ANR	5168969	ElseStatement	else		5168732	0					
ANR	5168970	CompoundStatement		37:15:1089:1089	5168732	0					
ANR	5168971	ExpressionStatement	"memcpy ( dst , src , i )"	41:12:1316:1335	5168732	0	True				
ANR	5168972	CallExpression	"memcpy ( dst , src , i )"		5168732	0					
ANR	5168973	Callee	memcpy		5168732	0					
ANR	5168974	Identifier	memcpy		5168732	0					
ANR	5168975	ArgumentList	dst		5168732	1					
ANR	5168976	Argument	dst		5168732	0					
ANR	5168977	Identifier	dst		5168732	0					
ANR	5168978	Argument	src		5168732	1					
ANR	5168979	Identifier	src		5168732	0					
ANR	5168980	Argument	i		5168732	2					
ANR	5168981	Identifier	i		5168732	0					
ANR	5168982	ExpressionStatement	src += i	42:12:1349:1357	5168732	1	True				
ANR	5168983	AssignmentExpression	src += i		5168732	0		+=			
ANR	5168984	Identifier	src		5168732	0					
ANR	5168985	Identifier	i		5168732	1					
ANR	5168986	ExpressionStatement	dst += i	43:12:1371:1379	5168732	2	True				
ANR	5168987	AssignmentExpression	dst += i		5168732	0		+=			
ANR	5168988	Identifier	dst		5168732	0					
ANR	5168989	Identifier	i		5168732	1					
ANR	5168990	ReturnStatement	return src - src_start ;	46:4:1401:1424	5168732	10	True				
ANR	5168991	AdditiveExpression	src - src_start		5168732	0		-			
ANR	5168992	Identifier	src		5168732	0					
ANR	5168993	Identifier	src_start		5168732	1					
ANR	5168994	ReturnType	static int		5168732	1					
ANR	5168995	Identifier	lag_decode_zero_run_line		5168732	2					
ANR	5168996	ParameterList	"LagarithContext * l , uint8_t * dst , const uint8_t * src , const uint8_t * src_end , int width , int esc_count"		5168732	3					
ANR	5168997	Parameter	LagarithContext * l	1:36:36:53	5168732	0	True				
ANR	5168998	ParameterType	LagarithContext *		5168732	0					
ANR	5168999	Identifier	l		5168732	1					
ANR	5169000	Parameter	uint8_t * dst	1:56:56:67	5168732	1	True				
ANR	5169001	ParameterType	uint8_t *		5168732	0					
ANR	5169002	Identifier	dst		5168732	1					
ANR	5169003	Parameter	const uint8_t * src	2:36:106:123	5168732	2	True				
ANR	5169004	ParameterType	const uint8_t *		5168732	0					
ANR	5169005	Identifier	src		5168732	1					
ANR	5169006	Parameter	const uint8_t * src_end	2:56:126:147	5168732	3	True				
ANR	5169007	ParameterType	const uint8_t *		5168732	0					
ANR	5169008	Identifier	src_end		5168732	1					
ANR	5169009	Parameter	int width	3:36:186:194	5168732	4	True				
ANR	5169010	ParameterType	int		5168732	0					
ANR	5169011	Identifier	width		5168732	1					
ANR	5169012	Parameter	int esc_count	3:47:197:209	5168732	5	True				
ANR	5169013	ParameterType	int		5168732	0					
ANR	5169014	Identifier	esc_count		5168732	1					
ANR	5169015	CFGEntryNode	ENTRY		5168732		True				
ANR	5169016	CFGExitNode	EXIT		5168732		True				
ANR	5169017	Symbol	zero_run		5168732						
ANR	5169018	Symbol	dst		5168732						
ANR	5169019	Symbol	AV_LOG_ERROR		5168732						
ANR	5169020	Symbol	src		5168732						
ANR	5169021	Symbol	count		5168732						
ANR	5169022	Symbol	mask1		5168732						
ANR	5169023	Symbol	i		5168732						
ANR	5169024	Symbol	l -> zeros_rem		5168732						
ANR	5169025	Symbol	FFMIN		5168732						
ANR	5169026	Symbol	mask2		5168732						
ANR	5169027	Symbol	l		5168732						
ANR	5169028	Symbol	lag_calc_zero_run		5168732						
ANR	5169029	Symbol	* src		5168732						
ANR	5169030	Symbol	* i		5168732						
ANR	5169031	Symbol	src_end		5168732						
ANR	5169032	Symbol	src_start		5168732						
ANR	5169033	Symbol	esc_count		5168732						
ANR	5169034	Symbol	* l		5168732						
ANR	5169035	Symbol	width		5168732						
ANR	5169036	Symbol	end		5168732						
ANR	5169037	Symbol	AVERROR_INVALIDDATA		5168732						
ANR	5169038	Symbol	l -> avctx		5168732						
