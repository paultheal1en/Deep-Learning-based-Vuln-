command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6166741	File	/home/p4ultr4n/workplace/ReVeal/raw_code/omap_mcbsp_source_tick_0.c								
ANR	6166742	Function	omap_mcbsp_source_tick	1:0:0:507							
ANR	6166743	FunctionDef	omap_mcbsp_source_tick (void * opaque)		6166742	0					
ANR	6166744	CompoundStatement		3:0:50:507	6166742	0					
ANR	6166745	IdentifierDeclStatement	struct omap_mcbsp_s * s = ( struct omap_mcbsp_s * ) opaque ;	5:4:57:112	6166742	0	True				
ANR	6166746	IdentifierDecl	* s = ( struct omap_mcbsp_s * ) opaque		6166742	0					
ANR	6166747	IdentifierDeclType	struct omap_mcbsp_s *		6166742	0					
ANR	6166748	Identifier	s		6166742	1					
ANR	6166749	AssignmentExpression	* s = ( struct omap_mcbsp_s * ) opaque		6166742	2		=			
ANR	6166750	Identifier	s		6166742	0					
ANR	6166751	CastExpression	( struct omap_mcbsp_s * ) opaque		6166742	1					
ANR	6166752	CastTarget	struct omap_mcbsp_s *		6166742	0					
ANR	6166753	Identifier	opaque		6166742	1					
ANR	6166754	Statement	static	7:4:119:124	6166742	1	True				
ANR	6166755	IdentifierDeclStatement	"const int bps [ 8 ] = { 0 , 1 , 1 , 2 , 2 , 2 , - 255 , - 255 } ;"	7:11:126:177	6166742	2	True				
ANR	6166756	IdentifierDecl	"bps [ 8 ] = { 0 , 1 , 1 , 2 , 2 , 2 , - 255 , - 255 }"		6166742	0					
ANR	6166757	IdentifierDeclType	const int [ 8 ]		6166742	0					
ANR	6166758	Identifier	bps		6166742	1					
ANR	6166759	PrimaryExpression	8		6166742	2					
ANR	6166760	AssignmentExpression	"bps [ 8 ] = { 0 , 1 , 1 , 2 , 2 , 2 , - 255 , - 255 }"		6166742	3		=			
ANR	6166761	Identifier	bps		6166742	0					
ANR	6166762	InitializerList	0		6166742	1					
ANR	6166763	PrimaryExpression	0		6166742	0					
ANR	6166764	PrimaryExpression	1		6166742	1					
ANR	6166765	PrimaryExpression	1		6166742	2					
ANR	6166766	PrimaryExpression	2		6166742	3					
ANR	6166767	PrimaryExpression	2		6166742	4					
ANR	6166768	PrimaryExpression	2		6166742	5					
ANR	6166769	UnaryOperationExpression	- 255		6166742	6					
ANR	6166770	UnaryOperator	-		6166742	0					
ANR	6166771	PrimaryExpression	255		6166742	1					
ANR	6166772	UnaryOperationExpression	- 255		6166742	7					
ANR	6166773	UnaryOperator	-		6166742	0					
ANR	6166774	PrimaryExpression	255		6166742	1					
ANR	6166775	IfStatement	if ( ! s -> rx_rate )		6166742	3					
ANR	6166776	Condition	! s -> rx_rate	11:8:190:200	6166742	0	True				
ANR	6166777	UnaryOperationExpression	! s -> rx_rate		6166742	0					
ANR	6166778	UnaryOperator	!		6166742	0					
ANR	6166779	PtrMemberAccess	s -> rx_rate		6166742	1					
ANR	6166780	Identifier	s		6166742	0					
ANR	6166781	Identifier	rx_rate		6166742	1					
ANR	6166782	ReturnStatement	return ;	13:8:212:218	6166742	1	True				
ANR	6166783	IfStatement	if ( s -> rx_req )		6166742	4					
ANR	6166784	Condition	s -> rx_req	15:8:229:237	6166742	0	True				
ANR	6166785	PtrMemberAccess	s -> rx_req		6166742	0					
ANR	6166786	Identifier	s		6166742	0					
ANR	6166787	Identifier	rx_req		6166742	1					
ANR	6166788	ExpressionStatement	"printf ( ""%s: Rx FIFO overrun\\n"" , __FUNCTION__ )"	17:8:249:294	6166742	1	True				
ANR	6166789	CallExpression	"printf ( ""%s: Rx FIFO overrun\\n"" , __FUNCTION__ )"		6166742	0					
ANR	6166790	Callee	printf		6166742	0					
ANR	6166791	Identifier	printf		6166742	0					
ANR	6166792	ArgumentList	"""%s: Rx FIFO overrun\\n"""		6166742	1					
ANR	6166793	Argument	"""%s: Rx FIFO overrun\\n"""		6166742	0					
ANR	6166794	PrimaryExpression	"""%s: Rx FIFO overrun\\n"""		6166742	0					
ANR	6166795	Argument	__FUNCTION__		6166742	1					
ANR	6166796	Identifier	__FUNCTION__		6166742	0					
ANR	6166797	ExpressionStatement	s -> rx_req = s -> rx_rate << bps [ ( s -> rcr [ 0 ] >> 5 ) & 7 ]	21:4:303:354	6166742	5	True				
ANR	6166798	AssignmentExpression	s -> rx_req = s -> rx_rate << bps [ ( s -> rcr [ 0 ] >> 5 ) & 7 ]		6166742	0		=			
ANR	6166799	PtrMemberAccess	s -> rx_req		6166742	0					
ANR	6166800	Identifier	s		6166742	0					
ANR	6166801	Identifier	rx_req		6166742	1					
ANR	6166802	ShiftExpression	s -> rx_rate << bps [ ( s -> rcr [ 0 ] >> 5 ) & 7 ]		6166742	1		<<			
ANR	6166803	PtrMemberAccess	s -> rx_rate		6166742	0					
ANR	6166804	Identifier	s		6166742	0					
ANR	6166805	Identifier	rx_rate		6166742	1					
ANR	6166806	ArrayIndexing	bps [ ( s -> rcr [ 0 ] >> 5 ) & 7 ]		6166742	1					
ANR	6166807	Identifier	bps		6166742	0					
ANR	6166808	BitAndExpression	( s -> rcr [ 0 ] >> 5 ) & 7		6166742	1		&			
ANR	6166809	ShiftExpression	s -> rcr [ 0 ] >> 5		6166742	0		>>			
ANR	6166810	ArrayIndexing	s -> rcr [ 0 ]		6166742	0					
ANR	6166811	PtrMemberAccess	s -> rcr		6166742	0					
ANR	6166812	Identifier	s		6166742	0					
ANR	6166813	Identifier	rcr		6166742	1					
ANR	6166814	PrimaryExpression	0		6166742	1					
ANR	6166815	PrimaryExpression	5		6166742	1					
ANR	6166816	PrimaryExpression	7		6166742	1					
ANR	6166817	ExpressionStatement	omap_mcbsp_rx_newdata ( s )	25:4:363:387	6166742	6	True				
ANR	6166818	CallExpression	omap_mcbsp_rx_newdata ( s )		6166742	0					
ANR	6166819	Callee	omap_mcbsp_rx_newdata		6166742	0					
ANR	6166820	Identifier	omap_mcbsp_rx_newdata		6166742	0					
ANR	6166821	ArgumentList	s		6166742	1					
ANR	6166822	Argument	s		6166742	0					
ANR	6166823	Identifier	s		6166742	0					
ANR	6166824	ExpressionStatement	"timer_mod ( s -> source_timer , qemu_clock_get_ns ( QEMU_CLOCK_VIRTUAL ) + NANOSECONDS_PER_SECOND )"	27:4:394:504	6166742	7	True				
ANR	6166825	CallExpression	"timer_mod ( s -> source_timer , qemu_clock_get_ns ( QEMU_CLOCK_VIRTUAL ) + NANOSECONDS_PER_SECOND )"		6166742	0					
ANR	6166826	Callee	timer_mod		6166742	0					
ANR	6166827	Identifier	timer_mod		6166742	0					
ANR	6166828	ArgumentList	s -> source_timer		6166742	1					
ANR	6166829	Argument	s -> source_timer		6166742	0					
ANR	6166830	PtrMemberAccess	s -> source_timer		6166742	0					
ANR	6166831	Identifier	s		6166742	0					
ANR	6166832	Identifier	source_timer		6166742	1					
ANR	6166833	Argument	qemu_clock_get_ns ( QEMU_CLOCK_VIRTUAL ) + NANOSECONDS_PER_SECOND		6166742	1					
ANR	6166834	AdditiveExpression	qemu_clock_get_ns ( QEMU_CLOCK_VIRTUAL ) + NANOSECONDS_PER_SECOND		6166742	0		+			
ANR	6166835	CallExpression	qemu_clock_get_ns ( QEMU_CLOCK_VIRTUAL )		6166742	0					
ANR	6166836	Callee	qemu_clock_get_ns		6166742	0					
ANR	6166837	Identifier	qemu_clock_get_ns		6166742	0					
ANR	6166838	ArgumentList	QEMU_CLOCK_VIRTUAL		6166742	1					
ANR	6166839	Argument	QEMU_CLOCK_VIRTUAL		6166742	0					
ANR	6166840	Identifier	QEMU_CLOCK_VIRTUAL		6166742	0					
ANR	6166841	Identifier	NANOSECONDS_PER_SECOND		6166742	1					
ANR	6166842	ReturnType	static void		6166742	1					
ANR	6166843	Identifier	omap_mcbsp_source_tick		6166742	2					
ANR	6166844	ParameterList	void * opaque		6166742	3					
ANR	6166845	Parameter	void * opaque	1:35:35:46	6166742	0	True				
ANR	6166846	ParameterType	void *		6166742	0					
ANR	6166847	Identifier	opaque		6166742	1					
ANR	6166848	CFGEntryNode	ENTRY		6166742		True				
ANR	6166849	CFGExitNode	EXIT		6166742		True				
ANR	6166850	Symbol	opaque		6166742						
ANR	6166851	Symbol	* * s -> rcr		6166742						
ANR	6166852	Symbol	bps		6166742						
ANR	6166853	Symbol	NANOSECONDS_PER_SECOND		6166742						
ANR	6166854	Symbol	qemu_clock_get_ns		6166742						
ANR	6166855	Symbol	QEMU_CLOCK_VIRTUAL		6166742						
ANR	6166856	Symbol	s -> rcr		6166742						
ANR	6166857	Symbol	s -> source_timer		6166742						
ANR	6166858	Symbol	__FUNCTION__		6166742						
ANR	6166859	Symbol	* * * s		6166742						
ANR	6166860	Symbol	* bps		6166742						
ANR	6166861	Symbol	s		6166742						
ANR	6166862	Symbol	s -> rx_req		6166742						
ANR	6166863	Symbol	s -> rx_rate		6166742						
ANR	6166864	Symbol	* * s		6166742						
ANR	6166865	Symbol	* s -> rcr		6166742						
ANR	6166866	Symbol	* s		6166742						
