command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8661083	File	/home/p4ultr4n/workplace/ReVeal/raw_code/url_find_protocol_01_1.c								
ANR	8661084	Function	url_find_protocol	1:0:0:971							
ANR	8661085	FunctionDef	url_find_protocol (const char * filename)		8661084	0					
ANR	8661086	CompoundStatement		3:0:68:971	8661084	0					
ANR	8661087	IdentifierDeclStatement	URLProtocol * up = NULL ;	5:4:75:97	8661084	0	True				
ANR	8661088	IdentifierDecl	* up = NULL		8661084	0					
ANR	8661089	IdentifierDeclType	URLProtocol *		8661084	0					
ANR	8661090	Identifier	up		8661084	1					
ANR	8661091	AssignmentExpression	* up = NULL		8661084	2		=			
ANR	8661092	Identifier	NULL		8661084	0					
ANR	8661093	Identifier	NULL		8661084	1					
ANR	8661094	IdentifierDeclStatement	"char proto_str [ 128 ] , proto_nested [ 128 ] , * ptr ;"	7:4:104:148	8661084	1	True				
ANR	8661095	IdentifierDecl	proto_str [ 128 ]		8661084	0					
ANR	8661096	IdentifierDeclType	char [ 128 ]		8661084	0					
ANR	8661097	Identifier	proto_str		8661084	1					
ANR	8661098	PrimaryExpression	128		8661084	2					
ANR	8661099	IdentifierDecl	proto_nested [ 128 ]		8661084	1					
ANR	8661100	IdentifierDeclType	char [ 128 ]		8661084	0					
ANR	8661101	Identifier	proto_nested		8661084	1					
ANR	8661102	PrimaryExpression	128		8661084	2					
ANR	8661103	IdentifierDecl	* ptr		8661084	2					
ANR	8661104	IdentifierDeclType	char *		8661084	0					
ANR	8661105	Identifier	ptr		8661084	1					
ANR	8661106	IdentifierDeclStatement	"size_t proto_len = strspn ( filename , URL_SCHEME_CHARS ) ;"	9:4:155:208	8661084	2	True				
ANR	8661107	IdentifierDecl	"proto_len = strspn ( filename , URL_SCHEME_CHARS )"		8661084	0					
ANR	8661108	IdentifierDeclType	size_t		8661084	0					
ANR	8661109	Identifier	proto_len		8661084	1					
ANR	8661110	AssignmentExpression	"proto_len = strspn ( filename , URL_SCHEME_CHARS )"		8661084	2		=			
ANR	8661111	Identifier	proto_len		8661084	0					
ANR	8661112	CallExpression	"strspn ( filename , URL_SCHEME_CHARS )"		8661084	1					
ANR	8661113	Callee	strspn		8661084	0					
ANR	8661114	Identifier	strspn		8661084	0					
ANR	8661115	ArgumentList	filename		8661084	1					
ANR	8661116	Argument	filename		8661084	0					
ANR	8661117	Identifier	filename		8661084	0					
ANR	8661118	Argument	URL_SCHEME_CHARS		8661084	1					
ANR	8661119	Identifier	URL_SCHEME_CHARS		8661084	0					
ANR	8661120	IfStatement	"if ( filename [ proto_len ] != ':' && ( filename [ proto_len ] != ',' || ! strchr ( filename + proto_len + 1 , ':' ) ) || is_dos_path ( filename ) )"		8661084	3					
ANR	8661121	Condition	"filename [ proto_len ] != ':' && ( filename [ proto_len ] != ',' || ! strchr ( filename + proto_len + 1 , ':' ) ) || is_dos_path ( filename )"	13:8:221:363	8661084	0	True				
ANR	8661122	OrExpression	"filename [ proto_len ] != ':' && ( filename [ proto_len ] != ',' || ! strchr ( filename + proto_len + 1 , ':' ) ) || is_dos_path ( filename )"		8661084	0		||			
ANR	8661123	AndExpression	"filename [ proto_len ] != ':' && ( filename [ proto_len ] != ',' || ! strchr ( filename + proto_len + 1 , ':' ) )"		8661084	0		&&			
ANR	8661124	EqualityExpression	filename [ proto_len ] != ':'		8661084	0		!=			
ANR	8661125	ArrayIndexing	filename [ proto_len ]		8661084	0					
ANR	8661126	Identifier	filename		8661084	0					
ANR	8661127	Identifier	proto_len		8661084	1					
ANR	8661128	PrimaryExpression	':'		8661084	1					
ANR	8661129	OrExpression	"filename [ proto_len ] != ',' || ! strchr ( filename + proto_len + 1 , ':' )"		8661084	1		||			
ANR	8661130	EqualityExpression	"filename [ proto_len ] != ','"		8661084	0		!=			
ANR	8661131	ArrayIndexing	filename [ proto_len ]		8661084	0					
ANR	8661132	Identifier	filename		8661084	0					
ANR	8661133	Identifier	proto_len		8661084	1					
ANR	8661134	PrimaryExpression	"','"		8661084	1					
ANR	8661135	UnaryOperationExpression	"! strchr ( filename + proto_len + 1 , ':' )"		8661084	1					
ANR	8661136	UnaryOperator	!		8661084	0					
ANR	8661137	CallExpression	"strchr ( filename + proto_len + 1 , ':' )"		8661084	1					
ANR	8661138	Callee	strchr		8661084	0					
ANR	8661139	Identifier	strchr		8661084	0					
ANR	8661140	ArgumentList	filename + proto_len + 1		8661084	1					
ANR	8661141	Argument	filename + proto_len + 1		8661084	0					
ANR	8661142	AdditiveExpression	filename + proto_len + 1		8661084	0		+			
ANR	8661143	Identifier	filename		8661084	0					
ANR	8661144	AdditiveExpression	proto_len + 1		8661084	1		+			
ANR	8661145	Identifier	proto_len		8661084	0					
ANR	8661146	PrimaryExpression	1		8661084	1					
ANR	8661147	Argument	':'		8661084	1					
ANR	8661148	PrimaryExpression	':'		8661084	0					
ANR	8661149	CallExpression	is_dos_path ( filename )		8661084	1					
ANR	8661150	Callee	is_dos_path		8661084	0					
ANR	8661151	Identifier	is_dos_path		8661084	0					
ANR	8661152	ArgumentList	filename		8661084	1					
ANR	8661153	Argument	filename		8661084	0					
ANR	8661154	Identifier	filename		8661084	0					
ANR	8661155	ExpressionStatement	"strcpy ( proto_str , ""file"" )"	19:8:375:400	8661084	1	True				
ANR	8661156	CallExpression	"strcpy ( proto_str , ""file"" )"		8661084	0					
ANR	8661157	Callee	strcpy		8661084	0					
ANR	8661158	Identifier	strcpy		8661084	0					
ANR	8661159	ArgumentList	proto_str		8661084	1					
ANR	8661160	Argument	proto_str		8661084	0					
ANR	8661161	Identifier	proto_str		8661084	0					
ANR	8661162	Argument	"""file"""		8661084	1					
ANR	8661163	PrimaryExpression	"""file"""		8661084	0					
ANR	8661164	ElseStatement	else		8661084	0					
ANR	8661165	ExpressionStatement	"av_strlcpy ( proto_str , filename , FFMIN ( proto_len + 1 , sizeof ( proto_str ) ) )"	23:8:421:513	8661084	0	True				
ANR	8661166	CallExpression	"av_strlcpy ( proto_str , filename , FFMIN ( proto_len + 1 , sizeof ( proto_str ) ) )"		8661084	0					
ANR	8661167	Callee	av_strlcpy		8661084	0					
ANR	8661168	Identifier	av_strlcpy		8661084	0					
ANR	8661169	ArgumentList	proto_str		8661084	1					
ANR	8661170	Argument	proto_str		8661084	0					
ANR	8661171	Identifier	proto_str		8661084	0					
ANR	8661172	Argument	filename		8661084	1					
ANR	8661173	Identifier	filename		8661084	0					
ANR	8661174	Argument	"FFMIN ( proto_len + 1 , sizeof ( proto_str ) )"		8661084	2					
ANR	8661175	CallExpression	"FFMIN ( proto_len + 1 , sizeof ( proto_str ) )"		8661084	0					
ANR	8661176	Callee	FFMIN		8661084	0					
ANR	8661177	Identifier	FFMIN		8661084	0					
ANR	8661178	ArgumentList	proto_len + 1		8661084	1					
ANR	8661179	Argument	proto_len + 1		8661084	0					
ANR	8661180	AdditiveExpression	proto_len + 1		8661084	0		+			
ANR	8661181	Identifier	proto_len		8661084	0					
ANR	8661182	PrimaryExpression	1		8661084	1					
ANR	8661183	Argument	sizeof ( proto_str )		8661084	1					
ANR	8661184	SizeofExpression	sizeof ( proto_str )		8661084	0					
ANR	8661185	Sizeof	sizeof		8661084	0					
ANR	8661186	SizeofOperand	proto_str		8661084	1					
ANR	8661187	IfStatement	"if ( ( ptr = strchr ( proto_str , ',' ) ) )"		8661084	4					
ANR	8661188	Condition	"ptr = strchr ( proto_str , ',' )"	29:8:526:555	8661084	0	True				
ANR	8661189	AssignmentExpression	"ptr = strchr ( proto_str , ',' )"		8661084	0		=			
ANR	8661190	Identifier	ptr		8661084	0					
ANR	8661191	CallExpression	"strchr ( proto_str , ',' )"		8661084	1					
ANR	8661192	Callee	strchr		8661084	0					
ANR	8661193	Identifier	strchr		8661084	0					
ANR	8661194	ArgumentList	proto_str		8661084	1					
ANR	8661195	Argument	proto_str		8661084	0					
ANR	8661196	Identifier	proto_str		8661084	0					
ANR	8661197	Argument	"','"		8661084	1					
ANR	8661198	PrimaryExpression	"','"		8661084	0					
ANR	8661199	ExpressionStatement	* ptr = '\\0'	31:8:567:578	8661084	1	True				
ANR	8661200	AssignmentExpression	* ptr = '\\0'		8661084	0		=			
ANR	8661201	UnaryOperationExpression	* ptr		8661084	0					
ANR	8661202	UnaryOperator	*		8661084	0					
ANR	8661203	Identifier	ptr		8661084	1					
ANR	8661204	PrimaryExpression	'\\0'		8661084	1					
ANR	8661205	ExpressionStatement	"av_strlcpy ( proto_nested , proto_str , sizeof ( proto_nested ) )"	33:4:585:642	8661084	5	True				
ANR	8661206	CallExpression	"av_strlcpy ( proto_nested , proto_str , sizeof ( proto_nested ) )"		8661084	0					
ANR	8661207	Callee	av_strlcpy		8661084	0					
ANR	8661208	Identifier	av_strlcpy		8661084	0					
ANR	8661209	ArgumentList	proto_nested		8661084	1					
ANR	8661210	Argument	proto_nested		8661084	0					
ANR	8661211	Identifier	proto_nested		8661084	0					
ANR	8661212	Argument	proto_str		8661084	1					
ANR	8661213	Identifier	proto_str		8661084	0					
ANR	8661214	Argument	sizeof ( proto_nested )		8661084	2					
ANR	8661215	SizeofExpression	sizeof ( proto_nested )		8661084	0					
ANR	8661216	Sizeof	sizeof		8661084	0					
ANR	8661217	SizeofOperand	proto_nested		8661084	1					
ANR	8661218	IfStatement	"if ( ( ptr = strchr ( proto_nested , '+' ) ) )"		8661084	6					
ANR	8661219	Condition	"ptr = strchr ( proto_nested , '+' )"	35:8:653:685	8661084	0	True				
ANR	8661220	AssignmentExpression	"ptr = strchr ( proto_nested , '+' )"		8661084	0		=			
ANR	8661221	Identifier	ptr		8661084	0					
ANR	8661222	CallExpression	"strchr ( proto_nested , '+' )"		8661084	1					
ANR	8661223	Callee	strchr		8661084	0					
ANR	8661224	Identifier	strchr		8661084	0					
ANR	8661225	ArgumentList	proto_nested		8661084	1					
ANR	8661226	Argument	proto_nested		8661084	0					
ANR	8661227	Identifier	proto_nested		8661084	0					
ANR	8661228	Argument	'+'		8661084	1					
ANR	8661229	PrimaryExpression	'+'		8661084	0					
ANR	8661230	ExpressionStatement	* ptr = '\\0'	37:8:697:708	8661084	1	True				
ANR	8661231	AssignmentExpression	* ptr = '\\0'		8661084	0		=			
ANR	8661232	UnaryOperationExpression	* ptr		8661084	0					
ANR	8661233	UnaryOperator	*		8661084	0					
ANR	8661234	Identifier	ptr		8661084	1					
ANR	8661235	PrimaryExpression	'\\0'		8661084	1					
ANR	8661236	WhileStatement	while ( up = ffurl_protocol_next ( up ) )		8661084	7					
ANR	8661237	Condition	up = ffurl_protocol_next ( up )	41:11:724:751	8661084	0	True				
ANR	8661238	AssignmentExpression	up = ffurl_protocol_next ( up )		8661084	0		=			
ANR	8661239	Identifier	up		8661084	0					
ANR	8661240	CallExpression	ffurl_protocol_next ( up )		8661084	1					
ANR	8661241	Callee	ffurl_protocol_next		8661084	0					
ANR	8661242	Identifier	ffurl_protocol_next		8661084	0					
ANR	8661243	ArgumentList	up		8661084	1					
ANR	8661244	Argument	up		8661084	0					
ANR	8661245	Identifier	up		8661084	0					
ANR	8661246	CompoundStatement		39:41:685:685	8661084	1					
ANR	8661247	IfStatement	"if ( ! strcmp ( proto_str , up -> name ) )"		8661084	0					
ANR	8661248	Condition	"! strcmp ( proto_str , up -> name )"	43:12:769:796	8661084	0	True				
ANR	8661249	UnaryOperationExpression	"! strcmp ( proto_str , up -> name )"		8661084	0					
ANR	8661250	UnaryOperator	!		8661084	0					
ANR	8661251	CallExpression	"strcmp ( proto_str , up -> name )"		8661084	1					
ANR	8661252	Callee	strcmp		8661084	0					
ANR	8661253	Identifier	strcmp		8661084	0					
ANR	8661254	ArgumentList	proto_str		8661084	1					
ANR	8661255	Argument	proto_str		8661084	0					
ANR	8661256	Identifier	proto_str		8661084	0					
ANR	8661257	Argument	up -> name		8661084	1					
ANR	8661258	PtrMemberAccess	up -> name		8661084	0					
ANR	8661259	Identifier	up		8661084	0					
ANR	8661260	Identifier	name		8661084	1					
ANR	8661261	BreakStatement	break ;	45:12:812:817	8661084	1	True				
ANR	8661262	IfStatement	"if ( up -> flags & URL_PROTOCOL_FLAG_NESTED_SCHEME && ! strcmp ( proto_nested , up -> name ) )"		8661084	1					
ANR	8661263	Condition	"up -> flags & URL_PROTOCOL_FLAG_NESTED_SCHEME && ! strcmp ( proto_nested , up -> name )"	47:12:832:922	8661084	0	True				
ANR	8661264	AndExpression	"up -> flags & URL_PROTOCOL_FLAG_NESTED_SCHEME && ! strcmp ( proto_nested , up -> name )"		8661084	0		&&			
ANR	8661265	BitAndExpression	up -> flags & URL_PROTOCOL_FLAG_NESTED_SCHEME		8661084	0		&			
ANR	8661266	PtrMemberAccess	up -> flags		8661084	0					
ANR	8661267	Identifier	up		8661084	0					
ANR	8661268	Identifier	flags		8661084	1					
ANR	8661269	Identifier	URL_PROTOCOL_FLAG_NESTED_SCHEME		8661084	1					
ANR	8661270	UnaryOperationExpression	"! strcmp ( proto_nested , up -> name )"		8661084	1					
ANR	8661271	UnaryOperator	!		8661084	0					
ANR	8661272	CallExpression	"strcmp ( proto_nested , up -> name )"		8661084	1					
ANR	8661273	Callee	strcmp		8661084	0					
ANR	8661274	Identifier	strcmp		8661084	0					
ANR	8661275	ArgumentList	proto_nested		8661084	1					
ANR	8661276	Argument	proto_nested		8661084	0					
ANR	8661277	Identifier	proto_nested		8661084	0					
ANR	8661278	Argument	up -> name		8661084	1					
ANR	8661279	PtrMemberAccess	up -> name		8661084	0					
ANR	8661280	Identifier	up		8661084	0					
ANR	8661281	Identifier	name		8661084	1					
ANR	8661282	BreakStatement	break ;	51:12:938:943	8661084	1	True				
ANR	8661283	ReturnStatement	return up ;	57:4:959:968	8661084	8	True				
ANR	8661284	Identifier	up		8661084	0					
ANR	8661285	ReturnType	static struct URLProtocol *		8661084	1					
ANR	8661286	Identifier	url_find_protocol		8661084	2					
ANR	8661287	ParameterList	const char * filename		8661084	3					
ANR	8661288	Parameter	const char * filename	1:45:45:64	8661084	0	True				
ANR	8661289	ParameterType	const char *		8661084	0					
ANR	8661290	Identifier	filename		8661084	1					
ANR	8661291	CFGEntryNode	ENTRY		8661084		True				
ANR	8661292	CFGExitNode	EXIT		8661084		True				
ANR	8661293	Symbol	strcmp		8661084						
ANR	8661294	Symbol	URL_SCHEME_CHARS		8661084						
ANR	8661295	Symbol	* up		8661084						
ANR	8661296	Symbol	NULL		8661084						
ANR	8661297	Symbol	strchr		8661084						
ANR	8661298	Symbol	FFMIN		8661084						
ANR	8661299	Symbol	up -> flags		8661084						
ANR	8661300	Symbol	ffurl_protocol_next		8661084						
ANR	8661301	Symbol	URL_PROTOCOL_FLAG_NESTED_SCHEME		8661084						
ANR	8661302	Symbol	ptr		8661084						
ANR	8661303	Symbol	* proto_len		8661084						
ANR	8661304	Symbol	filename		8661084						
ANR	8661305	Symbol	* filename		8661084						
ANR	8661306	Symbol	is_dos_path		8661084						
ANR	8661307	Symbol	strspn		8661084						
ANR	8661308	Symbol	up -> name		8661084						
ANR	8661309	Symbol	* ptr		8661084						
ANR	8661310	Symbol	proto_nested		8661084						
ANR	8661311	Symbol	up		8661084						
ANR	8661312	Symbol	proto_len		8661084						
ANR	8661313	Symbol	proto_str		8661084						
