command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1297105	File	/home/p4ultr4n/workplace/ReVeal/raw_code/chs_assemble_msbs_lsbs_1.c								
ANR	1297106	Function	chs_assemble_msbs_lsbs	1:0:0:771							
ANR	1297107	FunctionDef	"chs_assemble_msbs_lsbs (DCAXllDecoder * s , DCAXllChSet * c , int band)"		1297106	0					
ANR	1297108	CompoundStatement		3:0:80:771	1297106	0					
ANR	1297109	IdentifierDeclStatement	DCAXllBand * b = & c -> bands [ band ] ;	5:4:87:118	1297106	0	True				
ANR	1297110	IdentifierDecl	* b = & c -> bands [ band ]		1297106	0					
ANR	1297111	IdentifierDeclType	DCAXllBand *		1297106	0					
ANR	1297112	Identifier	b		1297106	1					
ANR	1297113	AssignmentExpression	* b = & c -> bands [ band ]		1297106	2		=			
ANR	1297114	Identifier	b		1297106	0					
ANR	1297115	UnaryOperationExpression	& c -> bands [ band ]		1297106	1					
ANR	1297116	UnaryOperator	&		1297106	0					
ANR	1297117	ArrayIndexing	c -> bands [ band ]		1297106	1					
ANR	1297118	PtrMemberAccess	c -> bands		1297106	0					
ANR	1297119	Identifier	c		1297106	0					
ANR	1297120	Identifier	bands		1297106	1					
ANR	1297121	Identifier	band		1297106	1					
ANR	1297122	IdentifierDeclStatement	"int n , ch , nsamples = s -> nframesamples ;"	7:4:125:163	1297106	1	True				
ANR	1297123	IdentifierDecl	n		1297106	0					
ANR	1297124	IdentifierDeclType	int		1297106	0					
ANR	1297125	Identifier	n		1297106	1					
ANR	1297126	IdentifierDecl	ch		1297106	1					
ANR	1297127	IdentifierDeclType	int		1297106	0					
ANR	1297128	Identifier	ch		1297106	1					
ANR	1297129	IdentifierDecl	nsamples = s -> nframesamples		1297106	2					
ANR	1297130	IdentifierDeclType	int		1297106	0					
ANR	1297131	Identifier	nsamples		1297106	1					
ANR	1297132	AssignmentExpression	nsamples = s -> nframesamples		1297106	2		=			
ANR	1297133	Identifier	nsamples		1297106	0					
ANR	1297134	PtrMemberAccess	s -> nframesamples		1297106	1					
ANR	1297135	Identifier	s		1297106	0					
ANR	1297136	Identifier	nframesamples		1297106	1					
ANR	1297137	ForStatement	for ( ch = 0 ; ch < c -> nchannels ; ch ++ )		1297106	2					
ANR	1297138	ForInit	ch = 0 ;	11:9:177:183	1297106	0	True				
ANR	1297139	AssignmentExpression	ch = 0		1297106	0		=			
ANR	1297140	Identifier	ch		1297106	0					
ANR	1297141	PrimaryExpression	0		1297106	1					
ANR	1297142	Condition	ch < c -> nchannels	11:17:185:201	1297106	1	True				
ANR	1297143	RelationalExpression	ch < c -> nchannels		1297106	0		<			
ANR	1297144	Identifier	ch		1297106	0					
ANR	1297145	PtrMemberAccess	c -> nchannels		1297106	1					
ANR	1297146	Identifier	c		1297106	0					
ANR	1297147	Identifier	nchannels		1297106	1					
ANR	1297148	PostIncDecOperationExpression	ch ++	11:36:204:207	1297106	2	True				
ANR	1297149	Identifier	ch		1297106	0					
ANR	1297150	IncDec	++		1297106	1					
ANR	1297151	CompoundStatement		11:8:140:185	1297106	3					
ANR	1297152	IdentifierDeclStatement	"int shift = chs_get_lsb_width ( s , c , band , ch ) ;"	13:8:221:266	1297106	0	True				
ANR	1297153	IdentifierDecl	"shift = chs_get_lsb_width ( s , c , band , ch )"		1297106	0					
ANR	1297154	IdentifierDeclType	int		1297106	0					
ANR	1297155	Identifier	shift		1297106	1					
ANR	1297156	AssignmentExpression	"shift = chs_get_lsb_width ( s , c , band , ch )"		1297106	2		=			
ANR	1297157	Identifier	shift		1297106	0					
ANR	1297158	CallExpression	"chs_get_lsb_width ( s , c , band , ch )"		1297106	1					
ANR	1297159	Callee	chs_get_lsb_width		1297106	0					
ANR	1297160	Identifier	chs_get_lsb_width		1297106	0					
ANR	1297161	ArgumentList	s		1297106	1					
ANR	1297162	Argument	s		1297106	0					
ANR	1297163	Identifier	s		1297106	0					
ANR	1297164	Argument	c		1297106	1					
ANR	1297165	Identifier	c		1297106	0					
ANR	1297166	Argument	band		1297106	2					
ANR	1297167	Identifier	band		1297106	0					
ANR	1297168	Argument	ch		1297106	3					
ANR	1297169	Identifier	ch		1297106	0					
ANR	1297170	IfStatement	if ( shift )		1297106	1					
ANR	1297171	Condition	shift	15:12:281:285	1297106	0	True				
ANR	1297172	Identifier	shift		1297106	0					
ANR	1297173	CompoundStatement		15:12:222:261	1297106	1					
ANR	1297174	IdentifierDeclStatement	int32_t * msb = b -> msb_sample_buffer [ ch ] ;	17:12:303:342	1297106	0	True				
ANR	1297175	IdentifierDecl	* msb = b -> msb_sample_buffer [ ch ]		1297106	0					
ANR	1297176	IdentifierDeclType	int32_t *		1297106	0					
ANR	1297177	Identifier	msb		1297106	1					
ANR	1297178	AssignmentExpression	* msb = b -> msb_sample_buffer [ ch ]		1297106	2		=			
ANR	1297179	Identifier	msb		1297106	0					
ANR	1297180	ArrayIndexing	b -> msb_sample_buffer [ ch ]		1297106	1					
ANR	1297181	PtrMemberAccess	b -> msb_sample_buffer		1297106	0					
ANR	1297182	Identifier	b		1297106	0					
ANR	1297183	Identifier	msb_sample_buffer		1297106	1					
ANR	1297184	Identifier	ch		1297106	1					
ANR	1297185	IfStatement	if ( b -> nscalablelsbs [ ch ] )		1297106	1					
ANR	1297186	Condition	b -> nscalablelsbs [ ch ]	19:16:361:380	1297106	0	True				
ANR	1297187	ArrayIndexing	b -> nscalablelsbs [ ch ]		1297106	0					
ANR	1297188	PtrMemberAccess	b -> nscalablelsbs		1297106	0					
ANR	1297189	Identifier	b		1297106	0					
ANR	1297190	Identifier	nscalablelsbs		1297106	1					
ANR	1297191	Identifier	ch		1297106	1					
ANR	1297192	CompoundStatement		21:16:379:412	1297106	1					
ANR	1297193	IdentifierDeclStatement	int32_t * lsb = b -> lsb_sample_buffer [ ch ] ;	21:16:402:441	1297106	0	True				
ANR	1297194	IdentifierDecl	* lsb = b -> lsb_sample_buffer [ ch ]		1297106	0					
ANR	1297195	IdentifierDeclType	int32_t *		1297106	0					
ANR	1297196	Identifier	lsb		1297106	1					
ANR	1297197	AssignmentExpression	* lsb = b -> lsb_sample_buffer [ ch ]		1297106	2		=			
ANR	1297198	Identifier	lsb		1297106	0					
ANR	1297199	ArrayIndexing	b -> lsb_sample_buffer [ ch ]		1297106	1					
ANR	1297200	PtrMemberAccess	b -> lsb_sample_buffer		1297106	0					
ANR	1297201	Identifier	b		1297106	0					
ANR	1297202	Identifier	lsb_sample_buffer		1297106	1					
ANR	1297203	Identifier	ch		1297106	1					
ANR	1297204	IdentifierDeclStatement	int adj = b -> bit_width_adjust [ ch ] ;	23:16:460:493	1297106	1	True				
ANR	1297205	IdentifierDecl	adj = b -> bit_width_adjust [ ch ]		1297106	0					
ANR	1297206	IdentifierDeclType	int		1297106	0					
ANR	1297207	Identifier	adj		1297106	1					
ANR	1297208	AssignmentExpression	adj = b -> bit_width_adjust [ ch ]		1297106	2		=			
ANR	1297209	Identifier	adj		1297106	0					
ANR	1297210	ArrayIndexing	b -> bit_width_adjust [ ch ]		1297106	1					
ANR	1297211	PtrMemberAccess	b -> bit_width_adjust		1297106	0					
ANR	1297212	Identifier	b		1297106	0					
ANR	1297213	Identifier	bit_width_adjust		1297106	1					
ANR	1297214	Identifier	ch		1297106	1					
ANR	1297215	ForStatement	for ( n = 0 ; n < nsamples ; n ++ )		1297106	2					
ANR	1297216	ForInit	n = 0 ;	25:21:517:522	1297106	0	True				
ANR	1297217	AssignmentExpression	n = 0		1297106	0		=			
ANR	1297218	Identifier	n		1297106	0					
ANR	1297219	PrimaryExpression	0		1297106	1					
ANR	1297220	Condition	n < nsamples	25:28:524:535	1297106	1	True				
ANR	1297221	RelationalExpression	n < nsamples		1297106	0		<			
ANR	1297222	Identifier	n		1297106	0					
ANR	1297223	Identifier	nsamples		1297106	1					
ANR	1297224	PostIncDecOperationExpression	n ++	25:42:538:540	1297106	2	True				
ANR	1297225	Identifier	n		1297106	0					
ANR	1297226	IncDec	++		1297106	1					
ANR	1297227	ExpressionStatement	msb [ n ] = msb [ n ] * ( 1 << shift ) + ( lsb [ n ] << adj )	27:20:564:612	1297106	3	True				
ANR	1297228	AssignmentExpression	msb [ n ] = msb [ n ] * ( 1 << shift ) + ( lsb [ n ] << adj )		1297106	0		=			
ANR	1297229	ArrayIndexing	msb [ n ]		1297106	0					
ANR	1297230	Identifier	msb		1297106	0					
ANR	1297231	Identifier	n		1297106	1					
ANR	1297232	AdditiveExpression	msb [ n ] * ( 1 << shift ) + ( lsb [ n ] << adj )		1297106	1		+			
ANR	1297233	MultiplicativeExpression	msb [ n ] * ( 1 << shift )		1297106	0		*			
ANR	1297234	ArrayIndexing	msb [ n ]		1297106	0					
ANR	1297235	Identifier	msb		1297106	0					
ANR	1297236	Identifier	n		1297106	1					
ANR	1297237	ShiftExpression	1 << shift		1297106	1		<<			
ANR	1297238	PrimaryExpression	1		1297106	0					
ANR	1297239	Identifier	shift		1297106	1					
ANR	1297240	ShiftExpression	lsb [ n ] << adj		1297106	1		<<			
ANR	1297241	ArrayIndexing	lsb [ n ]		1297106	0					
ANR	1297242	Identifier	lsb		1297106	0					
ANR	1297243	Identifier	n		1297106	1					
ANR	1297244	Identifier	adj		1297106	1					
ANR	1297245	ElseStatement	else		1297106	0					
ANR	1297246	CompoundStatement		27:19:553:553	1297106	0					
ANR	1297247	ForStatement	for ( n = 0 ; n < nsamples ; n ++ )		1297106	0					
ANR	1297248	ForInit	n = 0 ;	31:21:658:663	1297106	0	True				
ANR	1297249	AssignmentExpression	n = 0		1297106	0		=			
ANR	1297250	Identifier	n		1297106	0					
ANR	1297251	PrimaryExpression	0		1297106	1					
ANR	1297252	Condition	n < nsamples	31:28:665:676	1297106	1	True				
ANR	1297253	RelationalExpression	n < nsamples		1297106	0		<			
ANR	1297254	Identifier	n		1297106	0					
ANR	1297255	Identifier	nsamples		1297106	1					
ANR	1297256	PostIncDecOperationExpression	n ++	31:42:679:681	1297106	2	True				
ANR	1297257	Identifier	n		1297106	0					
ANR	1297258	IncDec	++		1297106	1					
ANR	1297259	ExpressionStatement	msb [ n ] = msb [ n ] * ( 1 << shift )	33:20:705:735	1297106	3	True				
ANR	1297260	AssignmentExpression	msb [ n ] = msb [ n ] * ( 1 << shift )		1297106	0		=			
ANR	1297261	ArrayIndexing	msb [ n ]		1297106	0					
ANR	1297262	Identifier	msb		1297106	0					
ANR	1297263	Identifier	n		1297106	1					
ANR	1297264	MultiplicativeExpression	msb [ n ] * ( 1 << shift )		1297106	1		*			
ANR	1297265	ArrayIndexing	msb [ n ]		1297106	0					
ANR	1297266	Identifier	msb		1297106	0					
ANR	1297267	Identifier	n		1297106	1					
ANR	1297268	ShiftExpression	1 << shift		1297106	1		<<			
ANR	1297269	PrimaryExpression	1		1297106	0					
ANR	1297270	Identifier	shift		1297106	1					
ANR	1297271	ReturnType	static void		1297106	1					
ANR	1297272	Identifier	chs_assemble_msbs_lsbs		1297106	2					
ANR	1297273	ParameterList	"DCAXllDecoder * s , DCAXllChSet * c , int band"		1297106	3					
ANR	1297274	Parameter	DCAXllDecoder * s	1:35:35:50	1297106	0	True				
ANR	1297275	ParameterType	DCAXllDecoder *		1297106	0					
ANR	1297276	Identifier	s		1297106	1					
ANR	1297277	Parameter	DCAXllChSet * c	1:53:53:66	1297106	1	True				
ANR	1297278	ParameterType	DCAXllChSet *		1297106	0					
ANR	1297279	Identifier	c		1297106	1					
ANR	1297280	Parameter	int band	1:69:69:76	1297106	2	True				
ANR	1297281	ParameterType	int		1297106	0					
ANR	1297282	Identifier	band		1297106	1					
ANR	1297283	CFGEntryNode	ENTRY		1297106		True				
ANR	1297284	CFGExitNode	EXIT		1297106		True				
ANR	1297285	Symbol	shift		1297106						
ANR	1297286	Symbol	* ch		1297106						
ANR	1297287	Symbol	chs_get_lsb_width		1297106						
ANR	1297288	Symbol	* b -> nscalablelsbs		1297106						
ANR	1297289	Symbol	c -> nchannels		1297106						
ANR	1297290	Symbol	* b -> lsb_sample_buffer		1297106						
ANR	1297291	Symbol	b -> msb_sample_buffer		1297106						
ANR	1297292	Symbol	band		1297106						
ANR	1297293	Symbol	b -> bit_width_adjust		1297106						
ANR	1297294	Symbol	b		1297106						
ANR	1297295	Symbol	c		1297106						
ANR	1297296	Symbol	ch		1297106						
ANR	1297297	Symbol	* lsb		1297106						
ANR	1297298	Symbol	adj		1297106						
ANR	1297299	Symbol	* msb		1297106						
ANR	1297300	Symbol	* b -> bit_width_adjust		1297106						
ANR	1297301	Symbol	* * b		1297106						
ANR	1297302	Symbol	* b		1297106						
ANR	1297303	Symbol	* c		1297106						
ANR	1297304	Symbol	b -> lsb_sample_buffer		1297106						
ANR	1297305	Symbol	n		1297106						
ANR	1297306	Symbol	s -> nframesamples		1297106						
ANR	1297307	Symbol	s		1297106						
ANR	1297308	Symbol	nsamples		1297106						
ANR	1297309	Symbol	c -> bands		1297106						
ANR	1297310	Symbol	* n		1297106						
ANR	1297311	Symbol	lsb		1297106						
ANR	1297312	Symbol	* b -> msb_sample_buffer		1297106						
ANR	1297313	Symbol	* s		1297106						
ANR	1297314	Symbol	msb		1297106						
ANR	1297315	Symbol	b -> nscalablelsbs		1297106						
