command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6345764	File	/home/p4ultr4n/workplace/ReVeal/raw_code/parse_numa_opts_0.c								
ANR	6345765	Function	parse_numa_opts	1:0:0:3235							
ANR	6345766	FunctionDef	parse_numa_opts (MachineClass * mc)		6345765	0					
ANR	6345767	CompoundStatement		3:0:40:3235	6345765	0					
ANR	6345768	IdentifierDeclStatement	int i ;	5:4:47:52	6345765	0	True				
ANR	6345769	IdentifierDecl	i		6345765	0					
ANR	6345770	IdentifierDeclType	int		6345765	0					
ANR	6345771	Identifier	i		6345765	1					
ANR	6345772	IfStatement	"if ( qemu_opts_foreach ( qemu_find_opts ( ""numa"" ) , parse_numa , NULL , NULL ) )"		6345765	1					
ANR	6345773	Condition	"qemu_opts_foreach ( qemu_find_opts ( ""numa"" ) , parse_numa , NULL , NULL )"	9:8:65:129	6345765	0	True				
ANR	6345774	CallExpression	"qemu_opts_foreach ( qemu_find_opts ( ""numa"" ) , parse_numa , NULL , NULL )"		6345765	0					
ANR	6345775	Callee	qemu_opts_foreach		6345765	0					
ANR	6345776	Identifier	qemu_opts_foreach		6345765	0					
ANR	6345777	ArgumentList	"qemu_find_opts ( ""numa"" )"		6345765	1					
ANR	6345778	Argument	"qemu_find_opts ( ""numa"" )"		6345765	0					
ANR	6345779	CallExpression	"qemu_find_opts ( ""numa"" )"		6345765	0					
ANR	6345780	Callee	qemu_find_opts		6345765	0					
ANR	6345781	Identifier	qemu_find_opts		6345765	0					
ANR	6345782	ArgumentList	"""numa"""		6345765	1					
ANR	6345783	Argument	"""numa"""		6345765	0					
ANR	6345784	PrimaryExpression	"""numa"""		6345765	0					
ANR	6345785	Argument	parse_numa		6345765	1					
ANR	6345786	Identifier	parse_numa		6345765	0					
ANR	6345787	Argument	NULL		6345765	2					
ANR	6345788	Identifier	NULL		6345765	0					
ANR	6345789	Argument	NULL		6345765	3					
ANR	6345790	Identifier	NULL		6345765	0					
ANR	6345791	CompoundStatement		7:75:91:91	6345765	1					
ANR	6345792	ExpressionStatement	exit ( 1 )	11:8:143:150	6345765	0	True				
ANR	6345793	CallExpression	exit ( 1 )		6345765	0					
ANR	6345794	Callee	exit		6345765	0					
ANR	6345795	Identifier	exit		6345765	0					
ANR	6345796	ArgumentList	1		6345765	1					
ANR	6345797	Argument	1		6345765	0					
ANR	6345798	PrimaryExpression	1		6345765	0					
ANR	6345799	ExpressionStatement	assert ( max_numa_nodeid <= MAX_NODES )	17:4:166:202	6345765	2	True				
ANR	6345800	CallExpression	assert ( max_numa_nodeid <= MAX_NODES )		6345765	0					
ANR	6345801	Callee	assert		6345765	0					
ANR	6345802	Identifier	assert		6345765	0					
ANR	6345803	ArgumentList	max_numa_nodeid <= MAX_NODES		6345765	1					
ANR	6345804	Argument	max_numa_nodeid <= MAX_NODES		6345765	0					
ANR	6345805	RelationalExpression	max_numa_nodeid <= MAX_NODES		6345765	0		<=			
ANR	6345806	Identifier	max_numa_nodeid		6345765	0					
ANR	6345807	Identifier	MAX_NODES		6345765	1					
ANR	6345808	ForStatement	for ( i = max_numa_nodeid - 1 ; i >= 0 ; i -- )		6345765	3					
ANR	6345809	ForInit	i = max_numa_nodeid - 1 ;	23:9:268:291	6345765	0	True				
ANR	6345810	AssignmentExpression	i = max_numa_nodeid - 1		6345765	0		=			
ANR	6345811	Identifier	i		6345765	0					
ANR	6345812	AdditiveExpression	max_numa_nodeid - 1		6345765	1		-			
ANR	6345813	Identifier	max_numa_nodeid		6345765	0					
ANR	6345814	PrimaryExpression	1		6345765	1					
ANR	6345815	Condition	i >= 0	23:34:293:298	6345765	1	True				
ANR	6345816	RelationalExpression	i >= 0		6345765	0		>=			
ANR	6345817	Identifier	i		6345765	0					
ANR	6345818	PrimaryExpression	0		6345765	1					
ANR	6345819	PostIncDecOperationExpression	i --	23:42:301:303	6345765	2	True				
ANR	6345820	Identifier	i		6345765	0					
ANR	6345821	IncDec	--		6345765	1					
ANR	6345822	CompoundStatement		21:47:265:265	6345765	3					
ANR	6345823	IfStatement	if ( ! numa_info [ i ] . present )		6345765	0					
ANR	6345824	Condition	! numa_info [ i ] . present	27:12:397:417	6345765	0	True				
ANR	6345825	UnaryOperationExpression	! numa_info [ i ] . present		6345765	0					
ANR	6345826	UnaryOperator	!		6345765	0					
ANR	6345827	MemberAccess	numa_info [ i ] . present		6345765	1					
ANR	6345828	ArrayIndexing	numa_info [ i ]		6345765	0					
ANR	6345829	Identifier	numa_info		6345765	0					
ANR	6345830	Identifier	i		6345765	1					
ANR	6345831	Identifier	present		6345765	1					
ANR	6345832	CompoundStatement		25:35:379:379	6345765	1					
ANR	6345833	ExpressionStatement	"error_report ( ""numa: Node ID missing: %d"" , i )"	29:12:435:479	6345765	0	True				
ANR	6345834	CallExpression	"error_report ( ""numa: Node ID missing: %d"" , i )"		6345765	0					
ANR	6345835	Callee	error_report		6345765	0					
ANR	6345836	Identifier	error_report		6345765	0					
ANR	6345837	ArgumentList	"""numa: Node ID missing: %d"""		6345765	1					
ANR	6345838	Argument	"""numa: Node ID missing: %d"""		6345765	0					
ANR	6345839	PrimaryExpression	"""numa: Node ID missing: %d"""		6345765	0					
ANR	6345840	Argument	i		6345765	1					
ANR	6345841	Identifier	i		6345765	0					
ANR	6345842	ExpressionStatement	exit ( 1 )	31:12:494:501	6345765	1	True				
ANR	6345843	CallExpression	exit ( 1 )		6345765	0					
ANR	6345844	Callee	exit		6345765	0					
ANR	6345845	Identifier	exit		6345765	0					
ANR	6345846	ArgumentList	1		6345765	1					
ANR	6345847	Argument	1		6345765	0					
ANR	6345848	PrimaryExpression	1		6345765	0					
ANR	6345849	ExpressionStatement	assert ( nb_numa_nodes == max_numa_nodeid )	41:4:590:630	6345765	4	True				
ANR	6345850	CallExpression	assert ( nb_numa_nodes == max_numa_nodeid )		6345765	0					
ANR	6345851	Callee	assert		6345765	0					
ANR	6345852	Identifier	assert		6345765	0					
ANR	6345853	ArgumentList	nb_numa_nodes == max_numa_nodeid		6345765	1					
ANR	6345854	Argument	nb_numa_nodes == max_numa_nodeid		6345765	0					
ANR	6345855	EqualityExpression	nb_numa_nodes == max_numa_nodeid		6345765	0		==			
ANR	6345856	Identifier	nb_numa_nodes		6345765	0					
ANR	6345857	Identifier	max_numa_nodeid		6345765	1					
ANR	6345858	IfStatement	if ( nb_numa_nodes > 0 )		6345765	5					
ANR	6345859	Condition	nb_numa_nodes > 0	45:8:643:659	6345765	0	True				
ANR	6345860	RelationalExpression	nb_numa_nodes > 0		6345765	0		>			
ANR	6345861	Identifier	nb_numa_nodes		6345765	0					
ANR	6345862	PrimaryExpression	0		6345765	1					
ANR	6345863	CompoundStatement		45:8:632:651	6345765	1					
ANR	6345864	IdentifierDeclStatement	uint64_t numa_total ;	47:8:673:692	6345765	0	True				
ANR	6345865	IdentifierDecl	numa_total		6345765	0					
ANR	6345866	IdentifierDeclType	uint64_t		6345765	0					
ANR	6345867	Identifier	numa_total		6345765	1					
ANR	6345868	IfStatement	if ( nb_numa_nodes > MAX_NODES )		6345765	1					
ANR	6345869	Condition	nb_numa_nodes > MAX_NODES	51:12:709:733	6345765	0	True				
ANR	6345870	RelationalExpression	nb_numa_nodes > MAX_NODES		6345765	0		>			
ANR	6345871	Identifier	nb_numa_nodes		6345765	0					
ANR	6345872	Identifier	MAX_NODES		6345765	1					
ANR	6345873	CompoundStatement		49:39:695:695	6345765	1					
ANR	6345874	ExpressionStatement	nb_numa_nodes = MAX_NODES	53:12:751:776	6345765	0	True				
ANR	6345875	AssignmentExpression	nb_numa_nodes = MAX_NODES		6345765	0		=			
ANR	6345876	Identifier	nb_numa_nodes		6345765	0					
ANR	6345877	Identifier	MAX_NODES		6345765	1					
ANR	6345878	ForStatement	for ( i = 0 ; i < nb_numa_nodes ; i ++ )		6345765	2					
ANR	6345879	ForInit	i = 0 ;	65:13:968:973	6345765	0	True				
ANR	6345880	AssignmentExpression	i = 0		6345765	0		=			
ANR	6345881	Identifier	i		6345765	0					
ANR	6345882	PrimaryExpression	0		6345765	1					
ANR	6345883	Condition	i < nb_numa_nodes	65:20:975:991	6345765	1	True				
ANR	6345884	RelationalExpression	i < nb_numa_nodes		6345765	0		<			
ANR	6345885	Identifier	i		6345765	0					
ANR	6345886	Identifier	nb_numa_nodes		6345765	1					
ANR	6345887	PostIncDecOperationExpression	i ++	65:39:994:996	6345765	2	True				
ANR	6345888	Identifier	i		6345765	0					
ANR	6345889	IncDec	++		6345765	1					
ANR	6345890	CompoundStatement		63:44:958:958	6345765	3					
ANR	6345891	IfStatement	if ( numa_info [ i ] . node_mem != 0 )		6345765	0					
ANR	6345892	Condition	numa_info [ i ] . node_mem != 0	67:16:1018:1043	6345765	0	True				
ANR	6345893	EqualityExpression	numa_info [ i ] . node_mem != 0		6345765	0		!=			
ANR	6345894	MemberAccess	numa_info [ i ] . node_mem		6345765	0					
ANR	6345895	ArrayIndexing	numa_info [ i ]		6345765	0					
ANR	6345896	Identifier	numa_info		6345765	0					
ANR	6345897	Identifier	i		6345765	1					
ANR	6345898	Identifier	node_mem		6345765	1					
ANR	6345899	PrimaryExpression	0		6345765	1					
ANR	6345900	CompoundStatement		65:44:1005:1005	6345765	1					
ANR	6345901	BreakStatement	break ;	69:16:1065:1070	6345765	0	True				
ANR	6345902	IfStatement	if ( i == nb_numa_nodes )		6345765	3					
ANR	6345903	Condition	i == nb_numa_nodes	75:12:1111:1128	6345765	0	True				
ANR	6345904	EqualityExpression	i == nb_numa_nodes		6345765	0		==			
ANR	6345905	Identifier	i		6345765	0					
ANR	6345906	Identifier	nb_numa_nodes		6345765	1					
ANR	6345907	CompoundStatement		75:12:1105:1125	6345765	1					
ANR	6345908	IdentifierDeclStatement	uint64_t usedmem = 0 ;	77:12:1146:1166	6345765	0	True				
ANR	6345909	IdentifierDecl	usedmem = 0		6345765	0					
ANR	6345910	IdentifierDeclType	uint64_t		6345765	0					
ANR	6345911	Identifier	usedmem		6345765	1					
ANR	6345912	AssignmentExpression	usedmem = 0		6345765	2		=			
ANR	6345913	Identifier	usedmem		6345765	0					
ANR	6345914	PrimaryExpression	0		6345765	1					
ANR	6345915	ForStatement	for ( i = 0 ; i < nb_numa_nodes - 1 ; i ++ )		6345765	1					
ANR	6345916	ForInit	i = 0 ;	87:17:1319:1324	6345765	0	True				
ANR	6345917	AssignmentExpression	i = 0		6345765	0		=			
ANR	6345918	Identifier	i		6345765	0					
ANR	6345919	PrimaryExpression	0		6345765	1					
ANR	6345920	Condition	i < nb_numa_nodes - 1	87:24:1326:1346	6345765	1	True				
ANR	6345921	RelationalExpression	i < nb_numa_nodes - 1		6345765	0		<			
ANR	6345922	Identifier	i		6345765	0					
ANR	6345923	AdditiveExpression	nb_numa_nodes - 1		6345765	1		-			
ANR	6345924	Identifier	nb_numa_nodes		6345765	0					
ANR	6345925	PrimaryExpression	1		6345765	1					
ANR	6345926	PostIncDecOperationExpression	i ++	87:47:1349:1351	6345765	2	True				
ANR	6345927	Identifier	i		6345765	0					
ANR	6345928	IncDec	++		6345765	1					
ANR	6345929	CompoundStatement		85:52:1313:1313	6345765	3					
ANR	6345930	ExpressionStatement	numa_info [ i ] . node_mem = ( ram_size / nb_numa_nodes ) & ~ ( ( 1 << 23UL ) - 1 )	89:16:1373:1485	6345765	0	True				
ANR	6345931	AssignmentExpression	numa_info [ i ] . node_mem = ( ram_size / nb_numa_nodes ) & ~ ( ( 1 << 23UL ) - 1 )		6345765	0		=			
ANR	6345932	MemberAccess	numa_info [ i ] . node_mem		6345765	0					
ANR	6345933	ArrayIndexing	numa_info [ i ]		6345765	0					
ANR	6345934	Identifier	numa_info		6345765	0					
ANR	6345935	Identifier	i		6345765	1					
ANR	6345936	Identifier	node_mem		6345765	1					
ANR	6345937	BitAndExpression	( ram_size / nb_numa_nodes ) & ~ ( ( 1 << 23UL ) - 1 )		6345765	1		&			
ANR	6345938	MultiplicativeExpression	ram_size / nb_numa_nodes		6345765	0		/			
ANR	6345939	Identifier	ram_size		6345765	0					
ANR	6345940	Identifier	nb_numa_nodes		6345765	1					
ANR	6345941	UnaryOperationExpression	~ ( ( 1 << 23UL ) - 1 )		6345765	1					
ANR	6345942	UnaryOperator	~		6345765	0					
ANR	6345943	AdditiveExpression	( 1 << 23UL ) - 1		6345765	1		-			
ANR	6345944	ShiftExpression	1 << 23UL		6345765	0		<<			
ANR	6345945	PrimaryExpression	1		6345765	0					
ANR	6345946	PrimaryExpression	23UL		6345765	1					
ANR	6345947	PrimaryExpression	1		6345765	1					
ANR	6345948	ExpressionStatement	usedmem += numa_info [ i ] . node_mem	93:16:1504:1536	6345765	1	True				
ANR	6345949	AssignmentExpression	usedmem += numa_info [ i ] . node_mem		6345765	0		+=			
ANR	6345950	Identifier	usedmem		6345765	0					
ANR	6345951	MemberAccess	numa_info [ i ] . node_mem		6345765	1					
ANR	6345952	ArrayIndexing	numa_info [ i ]		6345765	0					
ANR	6345953	Identifier	numa_info		6345765	0					
ANR	6345954	Identifier	i		6345765	1					
ANR	6345955	Identifier	node_mem		6345765	1					
ANR	6345956	ExpressionStatement	numa_info [ i ] . node_mem = ram_size - usedmem	97:12:1566:1608	6345765	2	True				
ANR	6345957	AssignmentExpression	numa_info [ i ] . node_mem = ram_size - usedmem		6345765	0		=			
ANR	6345958	MemberAccess	numa_info [ i ] . node_mem		6345765	0					
ANR	6345959	ArrayIndexing	numa_info [ i ]		6345765	0					
ANR	6345960	Identifier	numa_info		6345765	0					
ANR	6345961	Identifier	i		6345765	1					
ANR	6345962	Identifier	node_mem		6345765	1					
ANR	6345963	AdditiveExpression	ram_size - usedmem		6345765	1		-			
ANR	6345964	Identifier	ram_size		6345765	0					
ANR	6345965	Identifier	usedmem		6345765	1					
ANR	6345966	ExpressionStatement	numa_total = 0	103:8:1632:1646	6345765	4	True				
ANR	6345967	AssignmentExpression	numa_total = 0		6345765	0		=			
ANR	6345968	Identifier	numa_total		6345765	0					
ANR	6345969	PrimaryExpression	0		6345765	1					
ANR	6345970	ForStatement	for ( i = 0 ; i < nb_numa_nodes ; i ++ )		6345765	5					
ANR	6345971	ForInit	i = 0 ;	105:13:1662:1667	6345765	0	True				
ANR	6345972	AssignmentExpression	i = 0		6345765	0		=			
ANR	6345973	Identifier	i		6345765	0					
ANR	6345974	PrimaryExpression	0		6345765	1					
ANR	6345975	Condition	i < nb_numa_nodes	105:20:1669:1685	6345765	1	True				
ANR	6345976	RelationalExpression	i < nb_numa_nodes		6345765	0		<			
ANR	6345977	Identifier	i		6345765	0					
ANR	6345978	Identifier	nb_numa_nodes		6345765	1					
ANR	6345979	PostIncDecOperationExpression	i ++	105:39:1688:1690	6345765	2	True				
ANR	6345980	Identifier	i		6345765	0					
ANR	6345981	IncDec	++		6345765	1					
ANR	6345982	CompoundStatement		103:44:1652:1652	6345765	3					
ANR	6345983	ExpressionStatement	numa_total += numa_info [ i ] . node_mem	107:12:1708:1743	6345765	0	True				
ANR	6345984	AssignmentExpression	numa_total += numa_info [ i ] . node_mem		6345765	0		+=			
ANR	6345985	Identifier	numa_total		6345765	0					
ANR	6345986	MemberAccess	numa_info [ i ] . node_mem		6345765	1					
ANR	6345987	ArrayIndexing	numa_info [ i ]		6345765	0					
ANR	6345988	Identifier	numa_info		6345765	0					
ANR	6345989	Identifier	i		6345765	1					
ANR	6345990	Identifier	node_mem		6345765	1					
ANR	6345991	IfStatement	if ( numa_total != ram_size )		6345765	6					
ANR	6345992	Condition	numa_total != ram_size	111:12:1769:1790	6345765	0	True				
ANR	6345993	EqualityExpression	numa_total != ram_size		6345765	0		!=			
ANR	6345994	Identifier	numa_total		6345765	0					
ANR	6345995	Identifier	ram_size		6345765	1					
ANR	6345996	CompoundStatement		109:36:1752:1752	6345765	1					
ANR	6345997	Statement	error_report	113:12:1808:1819	6345765	0	True				
ANR	6345998	Statement	(	113:24:1820:1820	6345765	1	True				
ANR	6345999	Statement	"""total memory for NUMA nodes (0x%"""	113:25:1821:1854	6345765	2	True				
ANR	6346000	Statement	PRIx64	113:60:1856:1861	6345765	3	True				
ANR	6346001	Statement	""")"""	113:67:1863:1865	6345765	4	True				
ANR	6346002	Statement	""" should equal RAM size (0x"""	115:25:1893:1920	6345765	5	True				
ANR	6346003	Statement	RAM_ADDR_FMT	115:54:1922:1933	6345765	6	True				
ANR	6346004	Statement	""")"""	115:67:1935:1937	6345765	7	True				
ANR	6346005	Statement	","	115:70:1938:1938	6345765	8	True				
ANR	6346006	Statement	numa_total	117:25:1966:1975	6345765	9	True				
ANR	6346007	Statement	","	117:35:1976:1976	6345765	10	True				
ANR	6346008	Statement	ram_size	117:37:1978:1985	6345765	11	True				
ANR	6346009	Statement	)	117:45:1986:1986	6345765	12	True				
ANR	6346010	ExpressionStatement		117:46:1987:1987	6345765	13	True				
ANR	6346011	ExpressionStatement	exit ( 1 )	119:12:2002:2009	6345765	14	True				
ANR	6346012	CallExpression	exit ( 1 )		6345765	0					
ANR	6346013	Callee	exit		6345765	0					
ANR	6346014	Identifier	exit		6345765	0					
ANR	6346015	ArgumentList	1		6345765	1					
ANR	6346016	Argument	1		6345765	0					
ANR	6346017	PrimaryExpression	1		6345765	0					
ANR	6346018	ForStatement	for ( i = 0 ; i < nb_numa_nodes ; i ++ )		6345765	7					
ANR	6346019	ForInit	i = 0 ;	125:13:2038:2043	6345765	0	True				
ANR	6346020	AssignmentExpression	i = 0		6345765	0		=			
ANR	6346021	Identifier	i		6345765	0					
ANR	6346022	PrimaryExpression	0		6345765	1					
ANR	6346023	Condition	i < nb_numa_nodes	125:20:2045:2061	6345765	1	True				
ANR	6346024	RelationalExpression	i < nb_numa_nodes		6345765	0		<			
ANR	6346025	Identifier	i		6345765	0					
ANR	6346026	Identifier	nb_numa_nodes		6345765	1					
ANR	6346027	PostIncDecOperationExpression	i ++	125:39:2064:2066	6345765	2	True				
ANR	6346028	Identifier	i		6345765	0					
ANR	6346029	IncDec	++		6345765	1					
ANR	6346030	CompoundStatement		123:44:2028:2028	6345765	3					
ANR	6346031	ExpressionStatement	QLIST_INIT ( & numa_info [ i ] . addr )	127:12:2084:2114	6345765	0	True				
ANR	6346032	CallExpression	QLIST_INIT ( & numa_info [ i ] . addr )		6345765	0					
ANR	6346033	Callee	QLIST_INIT		6345765	0					
ANR	6346034	Identifier	QLIST_INIT		6345765	0					
ANR	6346035	ArgumentList	& numa_info [ i ] . addr		6345765	1					
ANR	6346036	Argument	& numa_info [ i ] . addr		6345765	0					
ANR	6346037	UnaryOperationExpression	& numa_info [ i ] . addr		6345765	0					
ANR	6346038	UnaryOperator	&		6345765	0					
ANR	6346039	MemberAccess	numa_info [ i ] . addr		6345765	1					
ANR	6346040	ArrayIndexing	numa_info [ i ]		6345765	0					
ANR	6346041	Identifier	numa_info		6345765	0					
ANR	6346042	Identifier	i		6345765	1					
ANR	6346043	Identifier	addr		6345765	1					
ANR	6346044	ExpressionStatement	numa_set_mem_ranges ( )	133:8:2138:2159	6345765	8	True				
ANR	6346045	CallExpression	numa_set_mem_ranges ( )		6345765	0					
ANR	6346046	Callee	numa_set_mem_ranges		6345765	0					
ANR	6346047	Identifier	numa_set_mem_ranges		6345765	0					
ANR	6346048	ArgumentList			6345765	1					
ANR	6346049	ForStatement	for ( i = 0 ; i < nb_numa_nodes ; i ++ )		6345765	9					
ANR	6346050	ForInit	i = 0 ;	137:13:2177:2182	6345765	0	True				
ANR	6346051	AssignmentExpression	i = 0		6345765	0		=			
ANR	6346052	Identifier	i		6345765	0					
ANR	6346053	PrimaryExpression	0		6345765	1					
ANR	6346054	Condition	i < nb_numa_nodes	137:20:2184:2200	6345765	1	True				
ANR	6346055	RelationalExpression	i < nb_numa_nodes		6345765	0		<			
ANR	6346056	Identifier	i		6345765	0					
ANR	6346057	Identifier	nb_numa_nodes		6345765	1					
ANR	6346058	PostIncDecOperationExpression	i ++	137:39:2203:2205	6345765	2	True				
ANR	6346059	Identifier	i		6345765	0					
ANR	6346060	IncDec	++		6345765	1					
ANR	6346061	CompoundStatement		135:44:2167:2167	6345765	3					
ANR	6346062	IfStatement	"if ( ! bitmap_empty ( numa_info [ i ] . node_cpu , MAX_CPUMASK_BITS ) )"		6345765	0					
ANR	6346063	Condition	"! bitmap_empty ( numa_info [ i ] . node_cpu , MAX_CPUMASK_BITS )"	139:16:2227:2280	6345765	0	True				
ANR	6346064	UnaryOperationExpression	"! bitmap_empty ( numa_info [ i ] . node_cpu , MAX_CPUMASK_BITS )"		6345765	0					
ANR	6346065	UnaryOperator	!		6345765	0					
ANR	6346066	CallExpression	"bitmap_empty ( numa_info [ i ] . node_cpu , MAX_CPUMASK_BITS )"		6345765	1					
ANR	6346067	Callee	bitmap_empty		6345765	0					
ANR	6346068	Identifier	bitmap_empty		6345765	0					
ANR	6346069	ArgumentList	numa_info [ i ] . node_cpu		6345765	1					
ANR	6346070	Argument	numa_info [ i ] . node_cpu		6345765	0					
ANR	6346071	MemberAccess	numa_info [ i ] . node_cpu		6345765	0					
ANR	6346072	ArrayIndexing	numa_info [ i ]		6345765	0					
ANR	6346073	Identifier	numa_info		6345765	0					
ANR	6346074	Identifier	i		6345765	1					
ANR	6346075	Identifier	node_cpu		6345765	1					
ANR	6346076	Argument	MAX_CPUMASK_BITS		6345765	1					
ANR	6346077	Identifier	MAX_CPUMASK_BITS		6345765	0					
ANR	6346078	CompoundStatement		137:72:2242:2242	6345765	1					
ANR	6346079	BreakStatement	break ;	141:16:2302:2307	6345765	0	True				
ANR	6346080	IfStatement	if ( i == nb_numa_nodes )		6345765	10					
ANR	6346081	Condition	i == nb_numa_nodes	161:12:2776:2793	6345765	0	True				
ANR	6346082	EqualityExpression	i == nb_numa_nodes		6345765	0		==			
ANR	6346083	Identifier	i		6345765	0					
ANR	6346084	Identifier	nb_numa_nodes		6345765	1					
ANR	6346085	CompoundStatement		159:32:2755:2755	6345765	1					
ANR	6346086	ForStatement	for ( i = 0 ; i < max_cpus ; i ++ )		6345765	0					
ANR	6346087	ForInit	i = 0 ;	163:17:2816:2821	6345765	0	True				
ANR	6346088	AssignmentExpression	i = 0		6345765	0		=			
ANR	6346089	Identifier	i		6345765	0					
ANR	6346090	PrimaryExpression	0		6345765	1					
ANR	6346091	Condition	i < max_cpus	163:24:2823:2834	6345765	1	True				
ANR	6346092	RelationalExpression	i < max_cpus		6345765	0		<			
ANR	6346093	Identifier	i		6345765	0					
ANR	6346094	Identifier	max_cpus		6345765	1					
ANR	6346095	PostIncDecOperationExpression	i ++	163:38:2837:2839	6345765	2	True				
ANR	6346096	Identifier	i		6345765	0					
ANR	6346097	IncDec	++		6345765	1					
ANR	6346098	CompoundStatement		163:16:2820:2856	6345765	3					
ANR	6346099	IdentifierDeclStatement	unsigned node_id = i % nb_numa_nodes ;	165:16:2861:2897	6345765	0	True				
ANR	6346100	IdentifierDecl	node_id = i % nb_numa_nodes		6345765	0					
ANR	6346101	IdentifierDeclType	unsigned		6345765	0					
ANR	6346102	Identifier	node_id		6345765	1					
ANR	6346103	AssignmentExpression	node_id = i % nb_numa_nodes		6345765	2		=			
ANR	6346104	Identifier	node_id		6345765	0					
ANR	6346105	MultiplicativeExpression	i % nb_numa_nodes		6345765	1		%			
ANR	6346106	Identifier	i		6345765	0					
ANR	6346107	Identifier	nb_numa_nodes		6345765	1					
ANR	6346108	IfStatement	if ( mc -> cpu_index_to_socket_id )		6345765	1					
ANR	6346109	Condition	mc -> cpu_index_to_socket_id	167:20:2920:2945	6345765	0	True				
ANR	6346110	PtrMemberAccess	mc -> cpu_index_to_socket_id		6345765	0					
ANR	6346111	Identifier	mc		6345765	0					
ANR	6346112	Identifier	cpu_index_to_socket_id		6345765	1					
ANR	6346113	CompoundStatement		165:48:2907:2907	6345765	1					
ANR	6346114	ExpressionStatement	node_id = mc -> cpu_index_to_socket_id ( i ) % nb_numa_nodes	169:20:2971:3026	6345765	0	True				
ANR	6346115	AssignmentExpression	node_id = mc -> cpu_index_to_socket_id ( i ) % nb_numa_nodes		6345765	0		=			
ANR	6346116	Identifier	node_id		6345765	0					
ANR	6346117	MultiplicativeExpression	mc -> cpu_index_to_socket_id ( i ) % nb_numa_nodes		6345765	1		%			
ANR	6346118	CallExpression	mc -> cpu_index_to_socket_id ( i )		6345765	0					
ANR	6346119	Callee	mc -> cpu_index_to_socket_id		6345765	0					
ANR	6346120	PtrMemberAccess	mc -> cpu_index_to_socket_id		6345765	0					
ANR	6346121	Identifier	mc		6345765	0					
ANR	6346122	Identifier	cpu_index_to_socket_id		6345765	1					
ANR	6346123	ArgumentList	i		6345765	1					
ANR	6346124	Argument	i		6345765	0					
ANR	6346125	Identifier	i		6345765	0					
ANR	6346126	Identifier	nb_numa_nodes		6345765	1					
ANR	6346127	ExpressionStatement	"set_bit ( i , numa_info [ node_id ] . node_cpu )"	175:16:3066:3105	6345765	2	True				
ANR	6346128	CallExpression	"set_bit ( i , numa_info [ node_id ] . node_cpu )"		6345765	0					
ANR	6346129	Callee	set_bit		6345765	0					
ANR	6346130	Identifier	set_bit		6345765	0					
ANR	6346131	ArgumentList	i		6345765	1					
ANR	6346132	Argument	i		6345765	0					
ANR	6346133	Identifier	i		6345765	0					
ANR	6346134	Argument	numa_info [ node_id ] . node_cpu		6345765	1					
ANR	6346135	MemberAccess	numa_info [ node_id ] . node_cpu		6345765	0					
ANR	6346136	ArrayIndexing	numa_info [ node_id ]		6345765	0					
ANR	6346137	Identifier	numa_info		6345765	0					
ANR	6346138	Identifier	node_id		6345765	1					
ANR	6346139	Identifier	node_cpu		6345765	1					
ANR	6346140	ExpressionStatement	validate_numa_cpus ( )	183:8:3144:3164	6345765	11	True				
ANR	6346141	CallExpression	validate_numa_cpus ( )		6345765	0					
ANR	6346142	Callee	validate_numa_cpus		6345765	0					
ANR	6346143	Identifier	validate_numa_cpus		6345765	0					
ANR	6346144	ArgumentList			6345765	1					
ANR	6346145	ElseStatement	else		6345765	0					
ANR	6346146	CompoundStatement		183:11:3137:3137	6345765	0					
ANR	6346147	ExpressionStatement	"numa_set_mem_node_id ( 0 , ram_size , 0 )"	187:8:3189:3225	6345765	0	True				
ANR	6346148	CallExpression	"numa_set_mem_node_id ( 0 , ram_size , 0 )"		6345765	0					
ANR	6346149	Callee	numa_set_mem_node_id		6345765	0					
ANR	6346150	Identifier	numa_set_mem_node_id		6345765	0					
ANR	6346151	ArgumentList	0		6345765	1					
ANR	6346152	Argument	0		6345765	0					
ANR	6346153	PrimaryExpression	0		6345765	0					
ANR	6346154	Argument	ram_size		6345765	1					
ANR	6346155	Identifier	ram_size		6345765	0					
ANR	6346156	Argument	0		6345765	2					
ANR	6346157	PrimaryExpression	0		6345765	0					
ANR	6346158	ReturnType	void		6345765	1					
ANR	6346159	Identifier	parse_numa_opts		6345765	2					
ANR	6346160	ParameterList	MachineClass * mc		6345765	3					
ANR	6346161	Parameter	MachineClass * mc	1:21:21:36	6345765	0	True				
ANR	6346162	ParameterType	MachineClass *		6345765	0					
ANR	6346163	Identifier	mc		6345765	1					
ANR	6346164	CFGEntryNode	ENTRY		6345765		True				
ANR	6346165	CFGExitNode	EXIT		6345765		True				
ANR	6346166	Symbol	qemu_find_opts		6345765						
ANR	6346167	Symbol	nb_numa_nodes		6345765						
ANR	6346168	Symbol	numa_total		6345765						
ANR	6346169	Symbol	MAX_CPUMASK_BITS		6345765						
ANR	6346170	Symbol	usedmem		6345765						
ANR	6346171	Symbol	max_cpus		6345765						
ANR	6346172	Symbol	numa_info [ i ] . node_mem		6345765						
ANR	6346173	Symbol	mc		6345765						
ANR	6346174	Symbol	numa_info		6345765						
ANR	6346175	Symbol	numa_info [ node_id ] . node_cpu		6345765						
ANR	6346176	Symbol	bitmap_empty		6345765						
ANR	6346177	Symbol	* mc		6345765						
ANR	6346178	Symbol	mc -> cpu_index_to_socket_id		6345765						
ANR	6346179	Symbol	* numa_info		6345765						
ANR	6346180	Symbol	NULL		6345765						
ANR	6346181	Symbol	MAX_NODES		6345765						
ANR	6346182	Symbol	* node_id		6345765						
ANR	6346183	Symbol	i		6345765						
ANR	6346184	Symbol	parse_numa		6345765						
ANR	6346185	Symbol	max_numa_nodeid		6345765						
ANR	6346186	Symbol	& numa_info [ i ] . addr		6345765						
ANR	6346187	Symbol	numa_info [ i ] . node_cpu		6345765						
ANR	6346188	Symbol	ram_size		6345765						
ANR	6346189	Symbol	* i		6345765						
ANR	6346190	Symbol	numa_info [ i ] . present		6345765						
ANR	6346191	Symbol	qemu_opts_foreach		6345765						
ANR	6346192	Symbol	node_id		6345765						
