command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	9536897	File	/home/p4ultr4n/workplace/ReVeal/raw_code/xen_pt_exp_rom_bar_reg_write_0.c								
ANR	9536898	Function	xen_pt_exp_rom_bar_reg_write	1:0:0:1135							
ANR	9536899	FunctionDef	"xen_pt_exp_rom_bar_reg_write (XenPCIPassthroughState * s , XenPTReg * cfg_entry , uint32_t * val , uint32_t dev_value , uint32_t valid_mask)"		9536898	0					
ANR	9536900	CompoundStatement		7:0:227:1135	9536898	0					
ANR	9536901	IdentifierDeclStatement	XenPTRegInfo * reg = cfg_entry -> reg ;	9:4:234:268	9536898	0	True				
ANR	9536902	IdentifierDecl	* reg = cfg_entry -> reg		9536898	0					
ANR	9536903	IdentifierDeclType	XenPTRegInfo *		9536898	0					
ANR	9536904	Identifier	reg		9536898	1					
ANR	9536905	AssignmentExpression	* reg = cfg_entry -> reg		9536898	2		=			
ANR	9536906	Identifier	reg		9536898	0					
ANR	9536907	PtrMemberAccess	cfg_entry -> reg		9536898	1					
ANR	9536908	Identifier	cfg_entry		9536898	0					
ANR	9536909	Identifier	reg		9536898	1					
ANR	9536910	IdentifierDeclStatement	XenPTRegion * base = NULL ;	11:4:275:299	9536898	1	True				
ANR	9536911	IdentifierDecl	* base = NULL		9536898	0					
ANR	9536912	IdentifierDeclType	XenPTRegion *		9536898	0					
ANR	9536913	Identifier	base		9536898	1					
ANR	9536914	AssignmentExpression	* base = NULL		9536898	2		=			
ANR	9536915	Identifier	NULL		9536898	0					
ANR	9536916	Identifier	NULL		9536898	1					
ANR	9536917	IdentifierDeclStatement	PCIDevice * d = ( PCIDevice * ) & s -> dev ;	13:4:306:341	9536898	2	True				
ANR	9536918	IdentifierDecl	* d = ( PCIDevice * ) & s -> dev		9536898	0					
ANR	9536919	IdentifierDeclType	PCIDevice *		9536898	0					
ANR	9536920	Identifier	d		9536898	1					
ANR	9536921	AssignmentExpression	* d = ( PCIDevice * ) & s -> dev		9536898	2		=			
ANR	9536922	Identifier	d		9536898	0					
ANR	9536923	CastExpression	( PCIDevice * ) & s -> dev		9536898	1					
ANR	9536924	CastTarget	PCIDevice *		9536898	0					
ANR	9536925	UnaryOperationExpression	& s -> dev		9536898	1					
ANR	9536926	UnaryOperator	&		9536898	0					
ANR	9536927	PtrMemberAccess	s -> dev		9536898	1					
ANR	9536928	Identifier	s		9536898	0					
ANR	9536929	Identifier	dev		9536898	1					
ANR	9536930	IdentifierDeclStatement	uint32_t writable_mask = 0 ;	15:4:348:374	9536898	3	True				
ANR	9536931	IdentifierDecl	writable_mask = 0		9536898	0					
ANR	9536932	IdentifierDeclType	uint32_t		9536898	0					
ANR	9536933	Identifier	writable_mask		9536898	1					
ANR	9536934	AssignmentExpression	writable_mask = 0		9536898	2		=			
ANR	9536935	Identifier	writable_mask		9536898	0					
ANR	9536936	PrimaryExpression	0		9536898	1					
ANR	9536937	IdentifierDeclStatement	"uint32_t throughable_mask = get_throughable_mask ( s , reg , valid_mask ) ;"	17:4:381:449	9536898	4	True				
ANR	9536938	IdentifierDecl	"throughable_mask = get_throughable_mask ( s , reg , valid_mask )"		9536898	0					
ANR	9536939	IdentifierDeclType	uint32_t		9536898	0					
ANR	9536940	Identifier	throughable_mask		9536898	1					
ANR	9536941	AssignmentExpression	"throughable_mask = get_throughable_mask ( s , reg , valid_mask )"		9536898	2		=			
ANR	9536942	Identifier	throughable_mask		9536898	0					
ANR	9536943	CallExpression	"get_throughable_mask ( s , reg , valid_mask )"		9536898	1					
ANR	9536944	Callee	get_throughable_mask		9536898	0					
ANR	9536945	Identifier	get_throughable_mask		9536898	0					
ANR	9536946	ArgumentList	s		9536898	1					
ANR	9536947	Argument	s		9536898	0					
ANR	9536948	Identifier	s		9536898	0					
ANR	9536949	Argument	reg		9536898	1					
ANR	9536950	Identifier	reg		9536898	0					
ANR	9536951	Argument	valid_mask		9536898	2					
ANR	9536952	Identifier	valid_mask		9536898	0					
ANR	9536953	IdentifierDeclStatement	pcibus_t r_size = 0 ;	19:4:456:475	9536898	5	True				
ANR	9536954	IdentifierDecl	r_size = 0		9536898	0					
ANR	9536955	IdentifierDeclType	pcibus_t		9536898	0					
ANR	9536956	Identifier	r_size		9536898	1					
ANR	9536957	AssignmentExpression	r_size = 0		9536898	2		=			
ANR	9536958	Identifier	r_size		9536898	0					
ANR	9536959	PrimaryExpression	0		9536898	1					
ANR	9536960	IdentifierDeclStatement	uint32_t bar_ro_mask = 0 ;	21:4:482:506	9536898	6	True				
ANR	9536961	IdentifierDecl	bar_ro_mask = 0		9536898	0					
ANR	9536962	IdentifierDeclType	uint32_t		9536898	0					
ANR	9536963	Identifier	bar_ro_mask		9536898	1					
ANR	9536964	AssignmentExpression	bar_ro_mask = 0		9536898	2		=			
ANR	9536965	Identifier	bar_ro_mask		9536898	0					
ANR	9536966	PrimaryExpression	0		9536898	1					
ANR	9536967	ExpressionStatement	r_size = d -> io_regions [ PCI_ROM_SLOT ] . size	25:4:515:556	9536898	7	True				
ANR	9536968	AssignmentExpression	r_size = d -> io_regions [ PCI_ROM_SLOT ] . size		9536898	0		=			
ANR	9536969	Identifier	r_size		9536898	0					
ANR	9536970	MemberAccess	d -> io_regions [ PCI_ROM_SLOT ] . size		9536898	1					
ANR	9536971	ArrayIndexing	d -> io_regions [ PCI_ROM_SLOT ]		9536898	0					
ANR	9536972	PtrMemberAccess	d -> io_regions		9536898	0					
ANR	9536973	Identifier	d		9536898	0					
ANR	9536974	Identifier	io_regions		9536898	1					
ANR	9536975	Identifier	PCI_ROM_SLOT		9536898	1					
ANR	9536976	Identifier	size		9536898	1					
ANR	9536977	ExpressionStatement	base = & s -> bases [ PCI_ROM_SLOT ]	27:4:563:593	9536898	8	True				
ANR	9536978	AssignmentExpression	base = & s -> bases [ PCI_ROM_SLOT ]		9536898	0		=			
ANR	9536979	Identifier	base		9536898	0					
ANR	9536980	UnaryOperationExpression	& s -> bases [ PCI_ROM_SLOT ]		9536898	1					
ANR	9536981	UnaryOperator	&		9536898	0					
ANR	9536982	ArrayIndexing	s -> bases [ PCI_ROM_SLOT ]		9536898	1					
ANR	9536983	PtrMemberAccess	s -> bases		9536898	0					
ANR	9536984	Identifier	s		9536898	0					
ANR	9536985	Identifier	bases		9536898	1					
ANR	9536986	Identifier	PCI_ROM_SLOT		9536898	1					
ANR	9536987	ExpressionStatement	"r_size = xen_pt_get_emul_size ( base -> bar_flag , r_size )"	31:4:643:696	9536898	9	True				
ANR	9536988	AssignmentExpression	"r_size = xen_pt_get_emul_size ( base -> bar_flag , r_size )"		9536898	0		=			
ANR	9536989	Identifier	r_size		9536898	0					
ANR	9536990	CallExpression	"xen_pt_get_emul_size ( base -> bar_flag , r_size )"		9536898	1					
ANR	9536991	Callee	xen_pt_get_emul_size		9536898	0					
ANR	9536992	Identifier	xen_pt_get_emul_size		9536898	0					
ANR	9536993	ArgumentList	base -> bar_flag		9536898	1					
ANR	9536994	Argument	base -> bar_flag		9536898	0					
ANR	9536995	PtrMemberAccess	base -> bar_flag		9536898	0					
ANR	9536996	Identifier	base		9536898	0					
ANR	9536997	Identifier	bar_flag		9536898	1					
ANR	9536998	Argument	r_size		9536898	1					
ANR	9536999	Identifier	r_size		9536898	0					
ANR	9537000	ExpressionStatement	bar_ro_mask = ( reg -> ro_mask | ( r_size - 1 ) ) & ~PCI_ROM_ADDRESS_ENABLE	37:4:752:821	9536898	10	True				
ANR	9537001	AssignmentExpression	bar_ro_mask = ( reg -> ro_mask | ( r_size - 1 ) ) & ~PCI_ROM_ADDRESS_ENABLE		9536898	0		=			
ANR	9537002	Identifier	bar_ro_mask		9536898	0					
ANR	9537003	BitAndExpression	( reg -> ro_mask | ( r_size - 1 ) ) & ~PCI_ROM_ADDRESS_ENABLE		9536898	1		&			
ANR	9537004	InclusiveOrExpression	reg -> ro_mask | ( r_size - 1 )		9536898	0		|			
ANR	9537005	PtrMemberAccess	reg -> ro_mask		9536898	0					
ANR	9537006	Identifier	reg		9536898	0					
ANR	9537007	Identifier	ro_mask		9536898	1					
ANR	9537008	AdditiveExpression	r_size - 1		9536898	1		-			
ANR	9537009	Identifier	r_size		9536898	0					
ANR	9537010	PrimaryExpression	1		9536898	1					
ANR	9537011	Identifier	~PCI_ROM_ADDRESS_ENABLE		9536898	1					
ANR	9537012	ExpressionStatement	writable_mask = ~bar_ro_mask & valid_mask	43:4:865:906	9536898	11	True				
ANR	9537013	AssignmentExpression	writable_mask = ~bar_ro_mask & valid_mask		9536898	0		=			
ANR	9537014	Identifier	writable_mask		9536898	0					
ANR	9537015	BitAndExpression	~bar_ro_mask & valid_mask		9536898	1		&			
ANR	9537016	Identifier	~bar_ro_mask		9536898	0					
ANR	9537017	Identifier	valid_mask		9536898	1					
ANR	9537018	ExpressionStatement	"cfg_entry -> data = XEN_PT_MERGE_VALUE ( * val , cfg_entry -> data , writable_mask )"	45:4:913:987	9536898	12	True				
ANR	9537019	AssignmentExpression	"cfg_entry -> data = XEN_PT_MERGE_VALUE ( * val , cfg_entry -> data , writable_mask )"		9536898	0		=			
ANR	9537020	PtrMemberAccess	cfg_entry -> data		9536898	0					
ANR	9537021	Identifier	cfg_entry		9536898	0					
ANR	9537022	Identifier	data		9536898	1					
ANR	9537023	CallExpression	"XEN_PT_MERGE_VALUE ( * val , cfg_entry -> data , writable_mask )"		9536898	1					
ANR	9537024	Callee	XEN_PT_MERGE_VALUE		9536898	0					
ANR	9537025	Identifier	XEN_PT_MERGE_VALUE		9536898	0					
ANR	9537026	ArgumentList	* val		9536898	1					
ANR	9537027	Argument	* val		9536898	0					
ANR	9537028	UnaryOperationExpression	* val		9536898	0					
ANR	9537029	UnaryOperator	*		9536898	0					
ANR	9537030	Identifier	val		9536898	1					
ANR	9537031	Argument	cfg_entry -> data		9536898	1					
ANR	9537032	PtrMemberAccess	cfg_entry -> data		9536898	0					
ANR	9537033	Identifier	cfg_entry		9536898	0					
ANR	9537034	Identifier	data		9536898	1					
ANR	9537035	Argument	writable_mask		9536898	2					
ANR	9537036	Identifier	writable_mask		9536898	0					
ANR	9537037	ExpressionStatement	"* val = XEN_PT_MERGE_VALUE ( * val , dev_value , throughable_mask )"	51:4:1055:1115	9536898	13	True				
ANR	9537038	AssignmentExpression	"* val = XEN_PT_MERGE_VALUE ( * val , dev_value , throughable_mask )"		9536898	0		=			
ANR	9537039	UnaryOperationExpression	* val		9536898	0					
ANR	9537040	UnaryOperator	*		9536898	0					
ANR	9537041	Identifier	val		9536898	1					
ANR	9537042	CallExpression	"XEN_PT_MERGE_VALUE ( * val , dev_value , throughable_mask )"		9536898	1					
ANR	9537043	Callee	XEN_PT_MERGE_VALUE		9536898	0					
ANR	9537044	Identifier	XEN_PT_MERGE_VALUE		9536898	0					
ANR	9537045	ArgumentList	* val		9536898	1					
ANR	9537046	Argument	* val		9536898	0					
ANR	9537047	UnaryOperationExpression	* val		9536898	0					
ANR	9537048	UnaryOperator	*		9536898	0					
ANR	9537049	Identifier	val		9536898	1					
ANR	9537050	Argument	dev_value		9536898	1					
ANR	9537051	Identifier	dev_value		9536898	0					
ANR	9537052	Argument	throughable_mask		9536898	2					
ANR	9537053	Identifier	throughable_mask		9536898	0					
ANR	9537054	ReturnStatement	return 0 ;	55:4:1124:1132	9536898	14	True				
ANR	9537055	PrimaryExpression	0		9536898	0					
ANR	9537056	ReturnType	static int		9536898	1					
ANR	9537057	Identifier	xen_pt_exp_rom_bar_reg_write		9536898	2					
ANR	9537058	ParameterList	"XenPCIPassthroughState * s , XenPTReg * cfg_entry , uint32_t * val , uint32_t dev_value , uint32_t valid_mask"		9536898	3					
ANR	9537059	Parameter	XenPCIPassthroughState * s	1:40:40:64	9536898	0	True				
ANR	9537060	ParameterType	XenPCIPassthroughState *		9536898	0					
ANR	9537061	Identifier	s		9536898	1					
ANR	9537062	Parameter	XenPTReg * cfg_entry	3:40:108:126	9536898	1	True				
ANR	9537063	ParameterType	XenPTReg *		9536898	0					
ANR	9537064	Identifier	cfg_entry		9536898	1					
ANR	9537065	Parameter	uint32_t * val	3:61:129:141	9536898	2	True				
ANR	9537066	ParameterType	uint32_t *		9536898	0					
ANR	9537067	Identifier	val		9536898	1					
ANR	9537068	Parameter	uint32_t dev_value	5:40:185:202	9536898	3	True				
ANR	9537069	ParameterType	uint32_t		9536898	0					
ANR	9537070	Identifier	dev_value		9536898	1					
ANR	9537071	Parameter	uint32_t valid_mask	5:60:205:223	9536898	4	True				
ANR	9537072	ParameterType	uint32_t		9536898	0					
ANR	9537073	Identifier	valid_mask		9536898	1					
ANR	9537074	CFGEntryNode	ENTRY		9536898		True				
ANR	9537075	CFGExitNode	EXIT		9536898		True				
ANR	9537076	Symbol	* cfg_entry		9536898						
ANR	9537077	Symbol	bar_ro_mask		9536898						
ANR	9537078	Symbol	cfg_entry -> data		9536898						
ANR	9537079	Symbol	* d -> io_regions		9536898						
ANR	9537080	Symbol	valid_mask		9536898						
ANR	9537081	Symbol	cfg_entry -> reg		9536898						
ANR	9537082	Symbol	get_throughable_mask		9536898						
ANR	9537083	Symbol	& s -> dev		9536898						
ANR	9537084	Symbol	writable_mask		9536898						
ANR	9537085	Symbol	* val		9536898						
ANR	9537086	Symbol	reg -> ro_mask		9536898						
ANR	9537087	Symbol	d -> io_regions		9536898						
ANR	9537088	Symbol	XEN_PT_MERGE_VALUE		9536898						
ANR	9537089	Symbol	reg		9536898						
ANR	9537090	Symbol	~PCI_ROM_ADDRESS_ENABLE		9536898						
ANR	9537091	Symbol	r_size		9536898						
ANR	9537092	Symbol	* base		9536898						
ANR	9537093	Symbol	val		9536898						
ANR	9537094	Symbol	* PCI_ROM_SLOT		9536898						
ANR	9537095	Symbol	NULL		9536898						
ANR	9537096	Symbol	d		9536898						
ANR	9537097	Symbol	xen_pt_get_emul_size		9536898						
ANR	9537098	Symbol	cfg_entry		9536898						
ANR	9537099	Symbol	* * d		9536898						
ANR	9537100	Symbol	d -> io_regions [ PCI_ROM_SLOT ] . size		9536898						
ANR	9537101	Symbol	* d		9536898						
ANR	9537102	Symbol	throughable_mask		9536898						
ANR	9537103	Symbol	s -> bases		9536898						
ANR	9537104	Symbol	~bar_ro_mask		9536898						
ANR	9537105	Symbol	s		9536898						
ANR	9537106	Symbol	base -> bar_flag		9536898						
ANR	9537107	Symbol	dev_value		9536898						
ANR	9537108	Symbol	* s		9536898						
ANR	9537109	Symbol	PCI_ROM_SLOT		9536898						
ANR	9537110	Symbol	* reg		9536898						
ANR	9537111	Symbol	base		9536898						
