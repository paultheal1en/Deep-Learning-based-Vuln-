command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4018805	File	/home/p4ultr4n/workplace/ReVeal/raw_code/frei0r_init_0.c								
ANR	4018806	Function	frei0r_init	1:0:0:3962							
ANR	4018807	FunctionDef	"frei0r_init (AVFilterContext * ctx , const char * dl_name , int type)"		4018806	0					
ANR	4018808	CompoundStatement		5:0:117:3962	4018806	0					
ANR	4018809	IdentifierDeclStatement	Frei0rContext * frei0r = ctx -> priv ;	7:4:124:157	4018806	0	True				
ANR	4018810	IdentifierDecl	* frei0r = ctx -> priv		4018806	0					
ANR	4018811	IdentifierDeclType	Frei0rContext *		4018806	0					
ANR	4018812	Identifier	frei0r		4018806	1					
ANR	4018813	AssignmentExpression	* frei0r = ctx -> priv		4018806	2		=			
ANR	4018814	Identifier	frei0r		4018806	0					
ANR	4018815	PtrMemberAccess	ctx -> priv		4018806	1					
ANR	4018816	Identifier	ctx		4018806	0					
ANR	4018817	Identifier	priv		4018806	1					
ANR	4018818	IdentifierDeclStatement	f0r_init_f f0r_init ;	9:4:164:194	4018806	1	True				
ANR	4018819	IdentifierDecl	f0r_init		4018806	0					
ANR	4018820	IdentifierDeclType	f0r_init_f		4018806	0					
ANR	4018821	Identifier	f0r_init		4018806	1					
ANR	4018822	IdentifierDeclStatement	f0r_get_plugin_info_f f0r_get_plugin_info ;	11:4:201:242	4018806	2	True				
ANR	4018823	IdentifierDecl	f0r_get_plugin_info		4018806	0					
ANR	4018824	IdentifierDeclType	f0r_get_plugin_info_f		4018806	0					
ANR	4018825	Identifier	f0r_get_plugin_info		4018806	1					
ANR	4018826	IdentifierDeclStatement	f0r_plugin_info_t * pi ;	13:4:249:270	4018806	3	True				
ANR	4018827	IdentifierDecl	* pi		4018806	0					
ANR	4018828	IdentifierDeclType	f0r_plugin_info_t *		4018806	0					
ANR	4018829	Identifier	pi		4018806	1					
ANR	4018830	IdentifierDeclStatement	char * path ;	15:4:277:287	4018806	4	True				
ANR	4018831	IdentifierDecl	* path		4018806	0					
ANR	4018832	IdentifierDeclType	char *		4018806	0					
ANR	4018833	Identifier	path		4018806	1					
ANR	4018834	IdentifierDeclStatement	int ret = 0 ;	17:4:294:305	4018806	5	True				
ANR	4018835	IdentifierDecl	ret = 0		4018806	0					
ANR	4018836	IdentifierDeclType	int		4018806	0					
ANR	4018837	Identifier	ret		4018806	1					
ANR	4018838	AssignmentExpression	ret = 0		4018806	2		=			
ANR	4018839	Identifier	ret		4018806	0					
ANR	4018840	PrimaryExpression	0		4018806	1					
ANR	4018841	IfStatement	"if ( ( path = av_strdup ( getenv ( ""FREI0R_PATH"" ) ) ) )"		4018806	6					
ANR	4018842	Condition	"path = av_strdup ( getenv ( ""FREI0R_PATH"" ) )"	23:8:396:436	4018806	0	True				
ANR	4018843	AssignmentExpression	"path = av_strdup ( getenv ( ""FREI0R_PATH"" ) )"		4018806	0		=			
ANR	4018844	Identifier	path		4018806	0					
ANR	4018845	CallExpression	"av_strdup ( getenv ( ""FREI0R_PATH"" ) )"		4018806	1					
ANR	4018846	Callee	av_strdup		4018806	0					
ANR	4018847	Identifier	av_strdup		4018806	0					
ANR	4018848	ArgumentList	"getenv ( ""FREI0R_PATH"" )"		4018806	1					
ANR	4018849	Argument	"getenv ( ""FREI0R_PATH"" )"		4018806	0					
ANR	4018850	CallExpression	"getenv ( ""FREI0R_PATH"" )"		4018806	0					
ANR	4018851	Callee	getenv		4018806	0					
ANR	4018852	Identifier	getenv		4018806	0					
ANR	4018853	ArgumentList	"""FREI0R_PATH"""		4018806	1					
ANR	4018854	Argument	"""FREI0R_PATH"""		4018806	0					
ANR	4018855	PrimaryExpression	"""FREI0R_PATH"""		4018806	0					
ANR	4018856	CompoundStatement		31:8:438:458	4018806	1					
ANR	4018857	IdentifierDeclStatement	"const char * separator = "";"" ;"	27:8:465:492	4018806	0	True				
ANR	4018858	IdentifierDecl	"* separator = "";"""		4018806	0					
ANR	4018859	IdentifierDeclType	const char *		4018806	0					
ANR	4018860	Identifier	separator		4018806	1					
ANR	4018861	AssignmentExpression	"* separator = "";"""		4018806	2		=			
ANR	4018862	Identifier	separator		4018806	0					
ANR	4018863	PrimaryExpression	""";"""		4018806	1					
ANR	4018864	IdentifierDeclStatement	"char * p , * ptr = NULL ;"	35:8:556:576	4018806	1	True				
ANR	4018865	IdentifierDecl	* p		4018806	0					
ANR	4018866	IdentifierDeclType	char *		4018806	0					
ANR	4018867	Identifier	p		4018806	1					
ANR	4018868	IdentifierDecl	* ptr = NULL		4018806	1					
ANR	4018869	IdentifierDeclType	char *		4018806	0					
ANR	4018870	Identifier	ptr		4018806	1					
ANR	4018871	AssignmentExpression	* ptr = NULL		4018806	2		=			
ANR	4018872	Identifier	NULL		4018806	0					
ANR	4018873	Identifier	NULL		4018806	1					
ANR	4018874	ForStatement	"for ( p = path ; p = av_strtok ( p , separator , & ptr ) ; p = NULL )"		4018806	2					
ANR	4018875	ForInit	p = path ;	37:13:592:600	4018806	0	True				
ANR	4018876	AssignmentExpression	p = path		4018806	0		=			
ANR	4018877	Identifier	p		4018806	0					
ANR	4018878	Identifier	path		4018806	1					
ANR	4018879	Condition	"p = av_strtok ( p , separator , & ptr )"	37:23:602:634	4018806	1	True				
ANR	4018880	AssignmentExpression	"p = av_strtok ( p , separator , & ptr )"		4018806	0		=			
ANR	4018881	Identifier	p		4018806	0					
ANR	4018882	CallExpression	"av_strtok ( p , separator , & ptr )"		4018806	1					
ANR	4018883	Callee	av_strtok		4018806	0					
ANR	4018884	Identifier	av_strtok		4018806	0					
ANR	4018885	ArgumentList	p		4018806	1					
ANR	4018886	Argument	p		4018806	0					
ANR	4018887	Identifier	p		4018806	0					
ANR	4018888	Argument	separator		4018806	1					
ANR	4018889	Identifier	separator		4018806	0					
ANR	4018890	Argument	& ptr		4018806	2					
ANR	4018891	UnaryOperationExpression	& ptr		4018806	0					
ANR	4018892	UnaryOperator	&		4018806	0					
ANR	4018893	Identifier	ptr		4018806	1					
ANR	4018894	AssignmentExpression	p = NULL	37:58:637:644	4018806	2	True	=			
ANR	4018895	Identifier	p		4018806	0					
ANR	4018896	Identifier	NULL		4018806	1					
ANR	4018897	CompoundStatement		37:12:615:647	4018806	3					
ANR	4018898	IdentifierDeclStatement	"char * p1 = av_asprintf ( ""%s/"" , p ) ;"	41:12:733:765	4018806	0	True				
ANR	4018899	IdentifierDecl	"* p1 = av_asprintf ( ""%s/"" , p )"		4018806	0					
ANR	4018900	IdentifierDeclType	char *		4018806	0					
ANR	4018901	Identifier	p1		4018806	1					
ANR	4018902	AssignmentExpression	"* p1 = av_asprintf ( ""%s/"" , p )"		4018806	2		=			
ANR	4018903	Identifier	p1		4018806	0					
ANR	4018904	CallExpression	"av_asprintf ( ""%s/"" , p )"		4018806	1					
ANR	4018905	Callee	av_asprintf		4018806	0					
ANR	4018906	Identifier	av_asprintf		4018806	0					
ANR	4018907	ArgumentList	"""%s/"""		4018806	1					
ANR	4018908	Argument	"""%s/"""		4018806	0					
ANR	4018909	PrimaryExpression	"""%s/"""		4018806	0					
ANR	4018910	Argument	p		4018806	1					
ANR	4018911	Identifier	p		4018806	0					
ANR	4018912	IfStatement	if ( ! p1 )		4018806	1					
ANR	4018913	Condition	! p1	43:16:784:786	4018806	0	True				
ANR	4018914	UnaryOperationExpression	! p1		4018806	0					
ANR	4018915	UnaryOperator	!		4018806	0					
ANR	4018916	Identifier	p1		4018806	1					
ANR	4018917	CompoundStatement		39:21:671:671	4018806	1					
ANR	4018918	ExpressionStatement	av_free ( path )	45:16:808:821	4018806	0	True				
ANR	4018919	CallExpression	av_free ( path )		4018806	0					
ANR	4018920	Callee	av_free		4018806	0					
ANR	4018921	Identifier	av_free		4018806	0					
ANR	4018922	ArgumentList	path		4018806	1					
ANR	4018923	Argument	path		4018806	0					
ANR	4018924	Identifier	path		4018806	0					
ANR	4018925	ReturnStatement	return AVERROR ( ENOMEM ) ;	47:16:840:862	4018806	1	True				
ANR	4018926	CallExpression	AVERROR ( ENOMEM )		4018806	0					
ANR	4018927	Callee	AVERROR		4018806	0					
ANR	4018928	Identifier	AVERROR		4018806	0					
ANR	4018929	ArgumentList	ENOMEM		4018806	1					
ANR	4018930	Argument	ENOMEM		4018806	0					
ANR	4018931	Identifier	ENOMEM		4018806	0					
ANR	4018932	ExpressionStatement	"ret = load_path ( ctx , & frei0r -> dl_handle , p1 , dl_name )"	51:12:892:945	4018806	2	True				
ANR	4018933	AssignmentExpression	"ret = load_path ( ctx , & frei0r -> dl_handle , p1 , dl_name )"		4018806	0		=			
ANR	4018934	Identifier	ret		4018806	0					
ANR	4018935	CallExpression	"load_path ( ctx , & frei0r -> dl_handle , p1 , dl_name )"		4018806	1					
ANR	4018936	Callee	load_path		4018806	0					
ANR	4018937	Identifier	load_path		4018806	0					
ANR	4018938	ArgumentList	ctx		4018806	1					
ANR	4018939	Argument	ctx		4018806	0					
ANR	4018940	Identifier	ctx		4018806	0					
ANR	4018941	Argument	& frei0r -> dl_handle		4018806	1					
ANR	4018942	UnaryOperationExpression	& frei0r -> dl_handle		4018806	0					
ANR	4018943	UnaryOperator	&		4018806	0					
ANR	4018944	PtrMemberAccess	frei0r -> dl_handle		4018806	1					
ANR	4018945	Identifier	frei0r		4018806	0					
ANR	4018946	Identifier	dl_handle		4018806	1					
ANR	4018947	Argument	p1		4018806	2					
ANR	4018948	Identifier	p1		4018806	0					
ANR	4018949	Argument	dl_name		4018806	3					
ANR	4018950	Identifier	dl_name		4018806	0					
ANR	4018951	ExpressionStatement	av_free ( p1 )	53:12:960:971	4018806	3	True				
ANR	4018952	CallExpression	av_free ( p1 )		4018806	0					
ANR	4018953	Callee	av_free		4018806	0					
ANR	4018954	Identifier	av_free		4018806	0					
ANR	4018955	ArgumentList	p1		4018806	1					
ANR	4018956	Argument	p1		4018806	0					
ANR	4018957	Identifier	p1		4018806	0					
ANR	4018958	IfStatement	if ( ret < 0 )		4018806	4					
ANR	4018959	Condition	ret < 0	55:16:990:996	4018806	0	True				
ANR	4018960	RelationalExpression	ret < 0		4018806	0		<			
ANR	4018961	Identifier	ret		4018806	0					
ANR	4018962	PrimaryExpression	0		4018806	1					
ANR	4018963	CompoundStatement		51:25:881:881	4018806	1					
ANR	4018964	ExpressionStatement	av_free ( path )	57:16:1018:1031	4018806	0	True				
ANR	4018965	CallExpression	av_free ( path )		4018806	0					
ANR	4018966	Callee	av_free		4018806	0					
ANR	4018967	Identifier	av_free		4018806	0					
ANR	4018968	ArgumentList	path		4018806	1					
ANR	4018969	Argument	path		4018806	0					
ANR	4018970	Identifier	path		4018806	0					
ANR	4018971	ReturnStatement	return ret ;	59:16:1050:1060	4018806	1	True				
ANR	4018972	Identifier	ret		4018806	0					
ANR	4018973	IfStatement	if ( frei0r -> dl_handle )		4018806	5					
ANR	4018974	Condition	frei0r -> dl_handle	63:16:1094:1110	4018806	0	True				
ANR	4018975	PtrMemberAccess	frei0r -> dl_handle		4018806	0					
ANR	4018976	Identifier	frei0r		4018806	0					
ANR	4018977	Identifier	dl_handle		4018806	1					
ANR	4018978	BreakStatement	break ;	65:16:1130:1135	4018806	1	True				
ANR	4018979	ExpressionStatement	av_free ( path )	69:8:1157:1170	4018806	3	True				
ANR	4018980	CallExpression	av_free ( path )		4018806	0					
ANR	4018981	Callee	av_free		4018806	0					
ANR	4018982	Identifier	av_free		4018806	0					
ANR	4018983	ArgumentList	path		4018806	1					
ANR	4018984	Argument	path		4018806	0					
ANR	4018985	Identifier	path		4018806	0					
ANR	4018986	IfStatement	"if ( ! frei0r -> dl_handle && ( path = getenv ( ""HOME"" ) ) )"		4018806	7					
ANR	4018987	Condition	"! frei0r -> dl_handle && ( path = getenv ( ""HOME"" ) )"	73:8:1188:1232	4018806	0	True				
ANR	4018988	AndExpression	"! frei0r -> dl_handle && ( path = getenv ( ""HOME"" ) )"		4018806	0		&&			
ANR	4018989	UnaryOperationExpression	! frei0r -> dl_handle		4018806	0					
ANR	4018990	UnaryOperator	!		4018806	0					
ANR	4018991	PtrMemberAccess	frei0r -> dl_handle		4018806	1					
ANR	4018992	Identifier	frei0r		4018806	0					
ANR	4018993	Identifier	dl_handle		4018806	1					
ANR	4018994	AssignmentExpression	"path = getenv ( ""HOME"" )"		4018806	1		=			
ANR	4018995	Identifier	path		4018806	0					
ANR	4018996	CallExpression	"getenv ( ""HOME"" )"		4018806	1					
ANR	4018997	Callee	getenv		4018806	0					
ANR	4018998	Identifier	getenv		4018806	0					
ANR	4018999	ArgumentList	"""HOME"""		4018806	1					
ANR	4019000	Argument	"""HOME"""		4018806	0					
ANR	4019001	PrimaryExpression	"""HOME"""		4018806	0					
ANR	4019002	CompoundStatement		71:8:1128:1181	4018806	1					
ANR	4019003	IdentifierDeclStatement	"char * prefix = av_asprintf ( ""%s/.frei0r-1/lib/"" , path ) ;"	75:8:1246:1299	4018806	0	True				
ANR	4019004	IdentifierDecl	"* prefix = av_asprintf ( ""%s/.frei0r-1/lib/"" , path )"		4018806	0					
ANR	4019005	IdentifierDeclType	char *		4018806	0					
ANR	4019006	Identifier	prefix		4018806	1					
ANR	4019007	AssignmentExpression	"* prefix = av_asprintf ( ""%s/.frei0r-1/lib/"" , path )"		4018806	2		=			
ANR	4019008	Identifier	prefix		4018806	0					
ANR	4019009	CallExpression	"av_asprintf ( ""%s/.frei0r-1/lib/"" , path )"		4018806	1					
ANR	4019010	Callee	av_asprintf		4018806	0					
ANR	4019011	Identifier	av_asprintf		4018806	0					
ANR	4019012	ArgumentList	"""%s/.frei0r-1/lib/"""		4018806	1					
ANR	4019013	Argument	"""%s/.frei0r-1/lib/"""		4018806	0					
ANR	4019014	PrimaryExpression	"""%s/.frei0r-1/lib/"""		4018806	0					
ANR	4019015	Argument	path		4018806	1					
ANR	4019016	Identifier	path		4018806	0					
ANR	4019017	IfStatement	if ( ! prefix )		4018806	1					
ANR	4019018	Condition	! prefix	77:12:1314:1320	4018806	0	True				
ANR	4019019	UnaryOperationExpression	! prefix		4018806	0					
ANR	4019020	UnaryOperator	!		4018806	0					
ANR	4019021	Identifier	prefix		4018806	1					
ANR	4019022	ReturnStatement	return AVERROR ( ENOMEM ) ;	79:12:1336:1358	4018806	1	True				
ANR	4019023	CallExpression	AVERROR ( ENOMEM )		4018806	0					
ANR	4019024	Callee	AVERROR		4018806	0					
ANR	4019025	Identifier	AVERROR		4018806	0					
ANR	4019026	ArgumentList	ENOMEM		4018806	1					
ANR	4019027	Argument	ENOMEM		4018806	0					
ANR	4019028	Identifier	ENOMEM		4018806	0					
ANR	4019029	ExpressionStatement	"ret = load_path ( ctx , & frei0r -> dl_handle , prefix , dl_name )"	81:8:1369:1426	4018806	2	True				
ANR	4019030	AssignmentExpression	"ret = load_path ( ctx , & frei0r -> dl_handle , prefix , dl_name )"		4018806	0		=			
ANR	4019031	Identifier	ret		4018806	0					
ANR	4019032	CallExpression	"load_path ( ctx , & frei0r -> dl_handle , prefix , dl_name )"		4018806	1					
ANR	4019033	Callee	load_path		4018806	0					
ANR	4019034	Identifier	load_path		4018806	0					
ANR	4019035	ArgumentList	ctx		4018806	1					
ANR	4019036	Argument	ctx		4018806	0					
ANR	4019037	Identifier	ctx		4018806	0					
ANR	4019038	Argument	& frei0r -> dl_handle		4018806	1					
ANR	4019039	UnaryOperationExpression	& frei0r -> dl_handle		4018806	0					
ANR	4019040	UnaryOperator	&		4018806	0					
ANR	4019041	PtrMemberAccess	frei0r -> dl_handle		4018806	1					
ANR	4019042	Identifier	frei0r		4018806	0					
ANR	4019043	Identifier	dl_handle		4018806	1					
ANR	4019044	Argument	prefix		4018806	2					
ANR	4019045	Identifier	prefix		4018806	0					
ANR	4019046	Argument	dl_name		4018806	3					
ANR	4019047	Identifier	dl_name		4018806	0					
ANR	4019048	ExpressionStatement	av_free ( prefix )	83:8:1437:1452	4018806	3	True				
ANR	4019049	CallExpression	av_free ( prefix )		4018806	0					
ANR	4019050	Callee	av_free		4018806	0					
ANR	4019051	Identifier	av_free		4018806	0					
ANR	4019052	ArgumentList	prefix		4018806	1					
ANR	4019053	Argument	prefix		4018806	0					
ANR	4019054	Identifier	prefix		4018806	0					
ANR	4019055	IfStatement	if ( ret < 0 )		4018806	4					
ANR	4019056	Condition	ret < 0	85:12:1467:1473	4018806	0	True				
ANR	4019057	RelationalExpression	ret < 0		4018806	0		<			
ANR	4019058	Identifier	ret		4018806	0					
ANR	4019059	PrimaryExpression	0		4018806	1					
ANR	4019060	ReturnStatement	return ret ;	87:12:1489:1499	4018806	1	True				
ANR	4019061	Identifier	ret		4018806	0					
ANR	4019062	IfStatement	if ( ! frei0r -> dl_handle )		4018806	8					
ANR	4019063	Condition	! frei0r -> dl_handle	91:8:1517:1534	4018806	0	True				
ANR	4019064	UnaryOperationExpression	! frei0r -> dl_handle		4018806	0					
ANR	4019065	UnaryOperator	!		4018806	0					
ANR	4019066	PtrMemberAccess	frei0r -> dl_handle		4018806	1					
ANR	4019067	Identifier	frei0r		4018806	0					
ANR	4019068	Identifier	dl_handle		4018806	1					
ANR	4019069	CompoundStatement		87:28:1419:1419	4018806	1					
ANR	4019070	ExpressionStatement	"ret = load_path ( ctx , & frei0r -> dl_handle , ""/usr/local/lib/frei0r-1/"" , dl_name )"	93:8:1548:1625	4018806	0	True				
ANR	4019071	AssignmentExpression	"ret = load_path ( ctx , & frei0r -> dl_handle , ""/usr/local/lib/frei0r-1/"" , dl_name )"		4018806	0		=			
ANR	4019072	Identifier	ret		4018806	0					
ANR	4019073	CallExpression	"load_path ( ctx , & frei0r -> dl_handle , ""/usr/local/lib/frei0r-1/"" , dl_name )"		4018806	1					
ANR	4019074	Callee	load_path		4018806	0					
ANR	4019075	Identifier	load_path		4018806	0					
ANR	4019076	ArgumentList	ctx		4018806	1					
ANR	4019077	Argument	ctx		4018806	0					
ANR	4019078	Identifier	ctx		4018806	0					
ANR	4019079	Argument	& frei0r -> dl_handle		4018806	1					
ANR	4019080	UnaryOperationExpression	& frei0r -> dl_handle		4018806	0					
ANR	4019081	UnaryOperator	&		4018806	0					
ANR	4019082	PtrMemberAccess	frei0r -> dl_handle		4018806	1					
ANR	4019083	Identifier	frei0r		4018806	0					
ANR	4019084	Identifier	dl_handle		4018806	1					
ANR	4019085	Argument	"""/usr/local/lib/frei0r-1/"""		4018806	2					
ANR	4019086	PrimaryExpression	"""/usr/local/lib/frei0r-1/"""		4018806	0					
ANR	4019087	Argument	dl_name		4018806	3					
ANR	4019088	Identifier	dl_name		4018806	0					
ANR	4019089	IfStatement	if ( ret < 0 )		4018806	1					
ANR	4019090	Condition	ret < 0	95:12:1640:1646	4018806	0	True				
ANR	4019091	RelationalExpression	ret < 0		4018806	0		<			
ANR	4019092	Identifier	ret		4018806	0					
ANR	4019093	PrimaryExpression	0		4018806	1					
ANR	4019094	ReturnStatement	return ret ;	97:12:1662:1672	4018806	1	True				
ANR	4019095	Identifier	ret		4018806	0					
ANR	4019096	IfStatement	if ( ! frei0r -> dl_handle )		4018806	9					
ANR	4019097	Condition	! frei0r -> dl_handle	101:8:1690:1707	4018806	0	True				
ANR	4019098	UnaryOperationExpression	! frei0r -> dl_handle		4018806	0					
ANR	4019099	UnaryOperator	!		4018806	0					
ANR	4019100	PtrMemberAccess	frei0r -> dl_handle		4018806	1					
ANR	4019101	Identifier	frei0r		4018806	0					
ANR	4019102	Identifier	dl_handle		4018806	1					
ANR	4019103	CompoundStatement		97:28:1592:1592	4018806	1					
ANR	4019104	ExpressionStatement	"ret = load_path ( ctx , & frei0r -> dl_handle , ""/usr/lib/frei0r-1/"" , dl_name )"	103:8:1721:1792	4018806	0	True				
ANR	4019105	AssignmentExpression	"ret = load_path ( ctx , & frei0r -> dl_handle , ""/usr/lib/frei0r-1/"" , dl_name )"		4018806	0		=			
ANR	4019106	Identifier	ret		4018806	0					
ANR	4019107	CallExpression	"load_path ( ctx , & frei0r -> dl_handle , ""/usr/lib/frei0r-1/"" , dl_name )"		4018806	1					
ANR	4019108	Callee	load_path		4018806	0					
ANR	4019109	Identifier	load_path		4018806	0					
ANR	4019110	ArgumentList	ctx		4018806	1					
ANR	4019111	Argument	ctx		4018806	0					
ANR	4019112	Identifier	ctx		4018806	0					
ANR	4019113	Argument	& frei0r -> dl_handle		4018806	1					
ANR	4019114	UnaryOperationExpression	& frei0r -> dl_handle		4018806	0					
ANR	4019115	UnaryOperator	&		4018806	0					
ANR	4019116	PtrMemberAccess	frei0r -> dl_handle		4018806	1					
ANR	4019117	Identifier	frei0r		4018806	0					
ANR	4019118	Identifier	dl_handle		4018806	1					
ANR	4019119	Argument	"""/usr/lib/frei0r-1/"""		4018806	2					
ANR	4019120	PrimaryExpression	"""/usr/lib/frei0r-1/"""		4018806	0					
ANR	4019121	Argument	dl_name		4018806	3					
ANR	4019122	Identifier	dl_name		4018806	0					
ANR	4019123	IfStatement	if ( ret < 0 )		4018806	1					
ANR	4019124	Condition	ret < 0	105:12:1807:1813	4018806	0	True				
ANR	4019125	RelationalExpression	ret < 0		4018806	0		<			
ANR	4019126	Identifier	ret		4018806	0					
ANR	4019127	PrimaryExpression	0		4018806	1					
ANR	4019128	ReturnStatement	return ret ;	107:12:1829:1839	4018806	1	True				
ANR	4019129	Identifier	ret		4018806	0					
ANR	4019130	IfStatement	if ( ! frei0r -> dl_handle )		4018806	10					
ANR	4019131	Condition	! frei0r -> dl_handle	111:8:1857:1874	4018806	0	True				
ANR	4019132	UnaryOperationExpression	! frei0r -> dl_handle		4018806	0					
ANR	4019133	UnaryOperator	!		4018806	0					
ANR	4019134	PtrMemberAccess	frei0r -> dl_handle		4018806	1					
ANR	4019135	Identifier	frei0r		4018806	0					
ANR	4019136	Identifier	dl_handle		4018806	1					
ANR	4019137	CompoundStatement		107:28:1759:1759	4018806	1					
ANR	4019138	ExpressionStatement	"av_log ( ctx , AV_LOG_ERROR , ""Could not find module '%s'\\n"" , dl_name )"	113:8:1888:1954	4018806	0	True				
ANR	4019139	CallExpression	"av_log ( ctx , AV_LOG_ERROR , ""Could not find module '%s'\\n"" , dl_name )"		4018806	0					
ANR	4019140	Callee	av_log		4018806	0					
ANR	4019141	Identifier	av_log		4018806	0					
ANR	4019142	ArgumentList	ctx		4018806	1					
ANR	4019143	Argument	ctx		4018806	0					
ANR	4019144	Identifier	ctx		4018806	0					
ANR	4019145	Argument	AV_LOG_ERROR		4018806	1					
ANR	4019146	Identifier	AV_LOG_ERROR		4018806	0					
ANR	4019147	Argument	"""Could not find module '%s'\\n"""		4018806	2					
ANR	4019148	PrimaryExpression	"""Could not find module '%s'\\n"""		4018806	0					
ANR	4019149	Argument	dl_name		4018806	3					
ANR	4019150	Identifier	dl_name		4018806	0					
ANR	4019151	ReturnStatement	return AVERROR ( EINVAL ) ;	115:8:1965:1987	4018806	1	True				
ANR	4019152	CallExpression	AVERROR ( EINVAL )		4018806	0					
ANR	4019153	Callee	AVERROR		4018806	0					
ANR	4019154	Identifier	AVERROR		4018806	0					
ANR	4019155	ArgumentList	EINVAL		4018806	1					
ANR	4019156	Argument	EINVAL		4018806	0					
ANR	4019157	Identifier	EINVAL		4018806	0					
ANR	4019158	IfStatement	"if ( ! ( f0r_init = load_sym ( ctx , ""f0r_init"" ) ) || ! ( f0r_get_plugin_info = load_sym ( ctx , ""f0r_get_plugin_info"" ) ) || ! ( frei0r -> get_param_info = load_sym ( ctx , ""f0r_get_param_info"" ) ) || ! ( frei0r -> get_param_value = load_sym ( ctx , ""f0r_get_param_value"" ) ) || ! ( frei0r -> set_param_value = load_sym ( ctx , ""f0r_set_param_value"" ) ) || ! ( frei0r -> update = load_sym ( ctx , ""f0r_update"" ) ) || ! ( frei0r -> construct = load_sym ( ctx , ""f0r_construct"" ) ) || ! ( frei0r -> destruct = load_sym ( ctx , ""f0r_destruct"" ) ) || ! ( frei0r -> deinit = load_sym ( ctx , ""f0r_deinit"" ) ) )"		4018806	11					
ANR	4019159	Condition	"! ( f0r_init = load_sym ( ctx , ""f0r_init"" ) ) || ! ( f0r_get_plugin_info = load_sym ( ctx , ""f0r_get_plugin_info"" ) ) || ! ( frei0r -> get_param_info = load_sym ( ctx , ""f0r_get_param_info"" ) ) || ! ( frei0r -> get_param_value = load_sym ( ctx , ""f0r_get_param_value"" ) ) || ! ( frei0r -> set_param_value = load_sym ( ctx , ""f0r_set_param_value"" ) ) || ! ( frei0r -> update = load_sym ( ctx , ""f0r_update"" ) ) || ! ( frei0r -> construct = load_sym ( ctx , ""f0r_construct"" ) ) || ! ( frei0r -> destruct = load_sym ( ctx , ""f0r_destruct"" ) ) || ! ( frei0r -> deinit = load_sym ( ctx , ""f0r_deinit"" ) )"	121:8:2007:2695	4018806	0	True				
ANR	4019160	OrExpression	"! ( f0r_init = load_sym ( ctx , ""f0r_init"" ) ) || ! ( f0r_get_plugin_info = load_sym ( ctx , ""f0r_get_plugin_info"" ) ) || ! ( frei0r -> get_param_info = load_sym ( ctx , ""f0r_get_param_info"" ) ) || ! ( frei0r -> get_param_value = load_sym ( ctx , ""f0r_get_param_value"" ) ) || ! ( frei0r -> set_param_value = load_sym ( ctx , ""f0r_set_param_value"" ) ) || ! ( frei0r -> update = load_sym ( ctx , ""f0r_update"" ) ) || ! ( frei0r -> construct = load_sym ( ctx , ""f0r_construct"" ) ) || ! ( frei0r -> destruct = load_sym ( ctx , ""f0r_destruct"" ) ) || ! ( frei0r -> deinit = load_sym ( ctx , ""f0r_deinit"" ) )"		4018806	0		||			
ANR	4019161	UnaryOperationExpression	"! ( f0r_init = load_sym ( ctx , ""f0r_init"" ) )"		4018806	0					
ANR	4019162	UnaryOperator	!		4018806	0					
ANR	4019163	AssignmentExpression	"f0r_init = load_sym ( ctx , ""f0r_init"" )"		4018806	1		=			
ANR	4019164	Identifier	f0r_init		4018806	0					
ANR	4019165	CallExpression	"load_sym ( ctx , ""f0r_init"" )"		4018806	1					
ANR	4019166	Callee	load_sym		4018806	0					
ANR	4019167	Identifier	load_sym		4018806	0					
ANR	4019168	ArgumentList	ctx		4018806	1					
ANR	4019169	Argument	ctx		4018806	0					
ANR	4019170	Identifier	ctx		4018806	0					
ANR	4019171	Argument	"""f0r_init"""		4018806	1					
ANR	4019172	PrimaryExpression	"""f0r_init"""		4018806	0					
ANR	4019173	OrExpression	"! ( f0r_get_plugin_info = load_sym ( ctx , ""f0r_get_plugin_info"" ) ) || ! ( frei0r -> get_param_info = load_sym ( ctx , ""f0r_get_param_info"" ) ) || ! ( frei0r -> get_param_value = load_sym ( ctx , ""f0r_get_param_value"" ) ) || ! ( frei0r -> set_param_value = load_sym ( ctx , ""f0r_set_param_value"" ) ) || ! ( frei0r -> update = load_sym ( ctx , ""f0r_update"" ) ) || ! ( frei0r -> construct = load_sym ( ctx , ""f0r_construct"" ) ) || ! ( frei0r -> destruct = load_sym ( ctx , ""f0r_destruct"" ) ) || ! ( frei0r -> deinit = load_sym ( ctx , ""f0r_deinit"" ) )"		4018806	1		||			
ANR	4019174	UnaryOperationExpression	"! ( f0r_get_plugin_info = load_sym ( ctx , ""f0r_get_plugin_info"" ) )"		4018806	0					
ANR	4019175	UnaryOperator	!		4018806	0					
ANR	4019176	AssignmentExpression	"f0r_get_plugin_info = load_sym ( ctx , ""f0r_get_plugin_info"" )"		4018806	1		=			
ANR	4019177	Identifier	f0r_get_plugin_info		4018806	0					
ANR	4019178	CallExpression	"load_sym ( ctx , ""f0r_get_plugin_info"" )"		4018806	1					
ANR	4019179	Callee	load_sym		4018806	0					
ANR	4019180	Identifier	load_sym		4018806	0					
ANR	4019181	ArgumentList	ctx		4018806	1					
ANR	4019182	Argument	ctx		4018806	0					
ANR	4019183	Identifier	ctx		4018806	0					
ANR	4019184	Argument	"""f0r_get_plugin_info"""		4018806	1					
ANR	4019185	PrimaryExpression	"""f0r_get_plugin_info"""		4018806	0					
ANR	4019186	OrExpression	"! ( frei0r -> get_param_info = load_sym ( ctx , ""f0r_get_param_info"" ) ) || ! ( frei0r -> get_param_value = load_sym ( ctx , ""f0r_get_param_value"" ) ) || ! ( frei0r -> set_param_value = load_sym ( ctx , ""f0r_set_param_value"" ) ) || ! ( frei0r -> update = load_sym ( ctx , ""f0r_update"" ) ) || ! ( frei0r -> construct = load_sym ( ctx , ""f0r_construct"" ) ) || ! ( frei0r -> destruct = load_sym ( ctx , ""f0r_destruct"" ) ) || ! ( frei0r -> deinit = load_sym ( ctx , ""f0r_deinit"" ) )"		4018806	1		||			
ANR	4019187	UnaryOperationExpression	"! ( frei0r -> get_param_info = load_sym ( ctx , ""f0r_get_param_info"" ) )"		4018806	0					
ANR	4019188	UnaryOperator	!		4018806	0					
ANR	4019189	AssignmentExpression	"frei0r -> get_param_info = load_sym ( ctx , ""f0r_get_param_info"" )"		4018806	1		=			
ANR	4019190	PtrMemberAccess	frei0r -> get_param_info		4018806	0					
ANR	4019191	Identifier	frei0r		4018806	0					
ANR	4019192	Identifier	get_param_info		4018806	1					
ANR	4019193	CallExpression	"load_sym ( ctx , ""f0r_get_param_info"" )"		4018806	1					
ANR	4019194	Callee	load_sym		4018806	0					
ANR	4019195	Identifier	load_sym		4018806	0					
ANR	4019196	ArgumentList	ctx		4018806	1					
ANR	4019197	Argument	ctx		4018806	0					
ANR	4019198	Identifier	ctx		4018806	0					
ANR	4019199	Argument	"""f0r_get_param_info"""		4018806	1					
ANR	4019200	PrimaryExpression	"""f0r_get_param_info"""		4018806	0					
ANR	4019201	OrExpression	"! ( frei0r -> get_param_value = load_sym ( ctx , ""f0r_get_param_value"" ) ) || ! ( frei0r -> set_param_value = load_sym ( ctx , ""f0r_set_param_value"" ) ) || ! ( frei0r -> update = load_sym ( ctx , ""f0r_update"" ) ) || ! ( frei0r -> construct = load_sym ( ctx , ""f0r_construct"" ) ) || ! ( frei0r -> destruct = load_sym ( ctx , ""f0r_destruct"" ) ) || ! ( frei0r -> deinit = load_sym ( ctx , ""f0r_deinit"" ) )"		4018806	1		||			
ANR	4019202	UnaryOperationExpression	"! ( frei0r -> get_param_value = load_sym ( ctx , ""f0r_get_param_value"" ) )"		4018806	0					
ANR	4019203	UnaryOperator	!		4018806	0					
ANR	4019204	AssignmentExpression	"frei0r -> get_param_value = load_sym ( ctx , ""f0r_get_param_value"" )"		4018806	1		=			
ANR	4019205	PtrMemberAccess	frei0r -> get_param_value		4018806	0					
ANR	4019206	Identifier	frei0r		4018806	0					
ANR	4019207	Identifier	get_param_value		4018806	1					
ANR	4019208	CallExpression	"load_sym ( ctx , ""f0r_get_param_value"" )"		4018806	1					
ANR	4019209	Callee	load_sym		4018806	0					
ANR	4019210	Identifier	load_sym		4018806	0					
ANR	4019211	ArgumentList	ctx		4018806	1					
ANR	4019212	Argument	ctx		4018806	0					
ANR	4019213	Identifier	ctx		4018806	0					
ANR	4019214	Argument	"""f0r_get_param_value"""		4018806	1					
ANR	4019215	PrimaryExpression	"""f0r_get_param_value"""		4018806	0					
ANR	4019216	OrExpression	"! ( frei0r -> set_param_value = load_sym ( ctx , ""f0r_set_param_value"" ) ) || ! ( frei0r -> update = load_sym ( ctx , ""f0r_update"" ) ) || ! ( frei0r -> construct = load_sym ( ctx , ""f0r_construct"" ) ) || ! ( frei0r -> destruct = load_sym ( ctx , ""f0r_destruct"" ) ) || ! ( frei0r -> deinit = load_sym ( ctx , ""f0r_deinit"" ) )"		4018806	1		||			
ANR	4019217	UnaryOperationExpression	"! ( frei0r -> set_param_value = load_sym ( ctx , ""f0r_set_param_value"" ) )"		4018806	0					
ANR	4019218	UnaryOperator	!		4018806	0					
ANR	4019219	AssignmentExpression	"frei0r -> set_param_value = load_sym ( ctx , ""f0r_set_param_value"" )"		4018806	1		=			
ANR	4019220	PtrMemberAccess	frei0r -> set_param_value		4018806	0					
ANR	4019221	Identifier	frei0r		4018806	0					
ANR	4019222	Identifier	set_param_value		4018806	1					
ANR	4019223	CallExpression	"load_sym ( ctx , ""f0r_set_param_value"" )"		4018806	1					
ANR	4019224	Callee	load_sym		4018806	0					
ANR	4019225	Identifier	load_sym		4018806	0					
ANR	4019226	ArgumentList	ctx		4018806	1					
ANR	4019227	Argument	ctx		4018806	0					
ANR	4019228	Identifier	ctx		4018806	0					
ANR	4019229	Argument	"""f0r_set_param_value"""		4018806	1					
ANR	4019230	PrimaryExpression	"""f0r_set_param_value"""		4018806	0					
ANR	4019231	OrExpression	"! ( frei0r -> update = load_sym ( ctx , ""f0r_update"" ) ) || ! ( frei0r -> construct = load_sym ( ctx , ""f0r_construct"" ) ) || ! ( frei0r -> destruct = load_sym ( ctx , ""f0r_destruct"" ) ) || ! ( frei0r -> deinit = load_sym ( ctx , ""f0r_deinit"" ) )"		4018806	1		||			
ANR	4019232	UnaryOperationExpression	"! ( frei0r -> update = load_sym ( ctx , ""f0r_update"" ) )"		4018806	0					
ANR	4019233	UnaryOperator	!		4018806	0					
ANR	4019234	AssignmentExpression	"frei0r -> update = load_sym ( ctx , ""f0r_update"" )"		4018806	1		=			
ANR	4019235	PtrMemberAccess	frei0r -> update		4018806	0					
ANR	4019236	Identifier	frei0r		4018806	0					
ANR	4019237	Identifier	update		4018806	1					
ANR	4019238	CallExpression	"load_sym ( ctx , ""f0r_update"" )"		4018806	1					
ANR	4019239	Callee	load_sym		4018806	0					
ANR	4019240	Identifier	load_sym		4018806	0					
ANR	4019241	ArgumentList	ctx		4018806	1					
ANR	4019242	Argument	ctx		4018806	0					
ANR	4019243	Identifier	ctx		4018806	0					
ANR	4019244	Argument	"""f0r_update"""		4018806	1					
ANR	4019245	PrimaryExpression	"""f0r_update"""		4018806	0					
ANR	4019246	OrExpression	"! ( frei0r -> construct = load_sym ( ctx , ""f0r_construct"" ) ) || ! ( frei0r -> destruct = load_sym ( ctx , ""f0r_destruct"" ) ) || ! ( frei0r -> deinit = load_sym ( ctx , ""f0r_deinit"" ) )"		4018806	1		||			
ANR	4019247	UnaryOperationExpression	"! ( frei0r -> construct = load_sym ( ctx , ""f0r_construct"" ) )"		4018806	0					
ANR	4019248	UnaryOperator	!		4018806	0					
ANR	4019249	AssignmentExpression	"frei0r -> construct = load_sym ( ctx , ""f0r_construct"" )"		4018806	1		=			
ANR	4019250	PtrMemberAccess	frei0r -> construct		4018806	0					
ANR	4019251	Identifier	frei0r		4018806	0					
ANR	4019252	Identifier	construct		4018806	1					
ANR	4019253	CallExpression	"load_sym ( ctx , ""f0r_construct"" )"		4018806	1					
ANR	4019254	Callee	load_sym		4018806	0					
ANR	4019255	Identifier	load_sym		4018806	0					
ANR	4019256	ArgumentList	ctx		4018806	1					
ANR	4019257	Argument	ctx		4018806	0					
ANR	4019258	Identifier	ctx		4018806	0					
ANR	4019259	Argument	"""f0r_construct"""		4018806	1					
ANR	4019260	PrimaryExpression	"""f0r_construct"""		4018806	0					
ANR	4019261	OrExpression	"! ( frei0r -> destruct = load_sym ( ctx , ""f0r_destruct"" ) ) || ! ( frei0r -> deinit = load_sym ( ctx , ""f0r_deinit"" ) )"		4018806	1		||			
ANR	4019262	UnaryOperationExpression	"! ( frei0r -> destruct = load_sym ( ctx , ""f0r_destruct"" ) )"		4018806	0					
ANR	4019263	UnaryOperator	!		4018806	0					
ANR	4019264	AssignmentExpression	"frei0r -> destruct = load_sym ( ctx , ""f0r_destruct"" )"		4018806	1		=			
ANR	4019265	PtrMemberAccess	frei0r -> destruct		4018806	0					
ANR	4019266	Identifier	frei0r		4018806	0					
ANR	4019267	Identifier	destruct		4018806	1					
ANR	4019268	CallExpression	"load_sym ( ctx , ""f0r_destruct"" )"		4018806	1					
ANR	4019269	Callee	load_sym		4018806	0					
ANR	4019270	Identifier	load_sym		4018806	0					
ANR	4019271	ArgumentList	ctx		4018806	1					
ANR	4019272	Argument	ctx		4018806	0					
ANR	4019273	Identifier	ctx		4018806	0					
ANR	4019274	Argument	"""f0r_destruct"""		4018806	1					
ANR	4019275	PrimaryExpression	"""f0r_destruct"""		4018806	0					
ANR	4019276	UnaryOperationExpression	"! ( frei0r -> deinit = load_sym ( ctx , ""f0r_deinit"" ) )"		4018806	1					
ANR	4019277	UnaryOperator	!		4018806	0					
ANR	4019278	AssignmentExpression	"frei0r -> deinit = load_sym ( ctx , ""f0r_deinit"" )"		4018806	1		=			
ANR	4019279	PtrMemberAccess	frei0r -> deinit		4018806	0					
ANR	4019280	Identifier	frei0r		4018806	0					
ANR	4019281	Identifier	deinit		4018806	1					
ANR	4019282	CallExpression	"load_sym ( ctx , ""f0r_deinit"" )"		4018806	1					
ANR	4019283	Callee	load_sym		4018806	0					
ANR	4019284	Identifier	load_sym		4018806	0					
ANR	4019285	ArgumentList	ctx		4018806	1					
ANR	4019286	Argument	ctx		4018806	0					
ANR	4019287	Identifier	ctx		4018806	0					
ANR	4019288	Argument	"""f0r_deinit"""		4018806	1					
ANR	4019289	PrimaryExpression	"""f0r_deinit"""		4018806	0					
ANR	4019290	ReturnStatement	return AVERROR ( EINVAL ) ;	139:8:2707:2729	4018806	1	True				
ANR	4019291	CallExpression	AVERROR ( EINVAL )		4018806	0					
ANR	4019292	Callee	AVERROR		4018806	0					
ANR	4019293	Identifier	AVERROR		4018806	0					
ANR	4019294	ArgumentList	EINVAL		4018806	1					
ANR	4019295	Argument	EINVAL		4018806	0					
ANR	4019296	Identifier	EINVAL		4018806	0					
ANR	4019297	IfStatement	if ( f0r_init ( ) < 0 )		4018806	12					
ANR	4019298	Condition	f0r_init ( ) < 0	143:8:2742:2755	4018806	0	True				
ANR	4019299	RelationalExpression	f0r_init ( ) < 0		4018806	0		<			
ANR	4019300	CallExpression	f0r_init ( )		4018806	0					
ANR	4019301	Callee	f0r_init		4018806	0					
ANR	4019302	Identifier	f0r_init		4018806	0					
ANR	4019303	ArgumentList			4018806	1					
ANR	4019304	PrimaryExpression	0		4018806	1					
ANR	4019305	CompoundStatement		139:24:2640:2640	4018806	1					
ANR	4019306	ExpressionStatement	"av_log ( ctx , AV_LOG_ERROR , ""Could not init the frei0r module\\n"" )"	145:8:2769:2832	4018806	0	True				
ANR	4019307	CallExpression	"av_log ( ctx , AV_LOG_ERROR , ""Could not init the frei0r module\\n"" )"		4018806	0					
ANR	4019308	Callee	av_log		4018806	0					
ANR	4019309	Identifier	av_log		4018806	0					
ANR	4019310	ArgumentList	ctx		4018806	1					
ANR	4019311	Argument	ctx		4018806	0					
ANR	4019312	Identifier	ctx		4018806	0					
ANR	4019313	Argument	AV_LOG_ERROR		4018806	1					
ANR	4019314	Identifier	AV_LOG_ERROR		4018806	0					
ANR	4019315	Argument	"""Could not init the frei0r module\\n"""		4018806	2					
ANR	4019316	PrimaryExpression	"""Could not init the frei0r module\\n"""		4018806	0					
ANR	4019317	ReturnStatement	return AVERROR ( EINVAL ) ;	147:8:2843:2865	4018806	1	True				
ANR	4019318	CallExpression	AVERROR ( EINVAL )		4018806	0					
ANR	4019319	Callee	AVERROR		4018806	0					
ANR	4019320	Identifier	AVERROR		4018806	0					
ANR	4019321	ArgumentList	EINVAL		4018806	1					
ANR	4019322	Argument	EINVAL		4018806	0					
ANR	4019323	Identifier	EINVAL		4018806	0					
ANR	4019324	ExpressionStatement	f0r_get_plugin_info ( & frei0r -> plugin_info )	153:4:2881:2922	4018806	13	True				
ANR	4019325	CallExpression	f0r_get_plugin_info ( & frei0r -> plugin_info )		4018806	0					
ANR	4019326	Callee	f0r_get_plugin_info		4018806	0					
ANR	4019327	Identifier	f0r_get_plugin_info		4018806	0					
ANR	4019328	ArgumentList	& frei0r -> plugin_info		4018806	1					
ANR	4019329	Argument	& frei0r -> plugin_info		4018806	0					
ANR	4019330	UnaryOperationExpression	& frei0r -> plugin_info		4018806	0					
ANR	4019331	UnaryOperator	&		4018806	0					
ANR	4019332	PtrMemberAccess	frei0r -> plugin_info		4018806	1					
ANR	4019333	Identifier	frei0r		4018806	0					
ANR	4019334	Identifier	plugin_info		4018806	1					
ANR	4019335	ExpressionStatement	pi = & frei0r -> plugin_info	155:4:2929:2954	4018806	14	True				
ANR	4019336	AssignmentExpression	pi = & frei0r -> plugin_info		4018806	0		=			
ANR	4019337	Identifier	pi		4018806	0					
ANR	4019338	UnaryOperationExpression	& frei0r -> plugin_info		4018806	1					
ANR	4019339	UnaryOperator	&		4018806	0					
ANR	4019340	PtrMemberAccess	frei0r -> plugin_info		4018806	1					
ANR	4019341	Identifier	frei0r		4018806	0					
ANR	4019342	Identifier	plugin_info		4018806	1					
ANR	4019343	IfStatement	if ( pi -> plugin_type != type )		4018806	15					
ANR	4019344	Condition	pi -> plugin_type != type	157:8:2965:2987	4018806	0	True				
ANR	4019345	EqualityExpression	pi -> plugin_type != type		4018806	0		!=			
ANR	4019346	PtrMemberAccess	pi -> plugin_type		4018806	0					
ANR	4019347	Identifier	pi		4018806	0					
ANR	4019348	Identifier	plugin_type		4018806	1					
ANR	4019349	Identifier	type		4018806	1					
ANR	4019350	CompoundStatement		153:33:2872:2872	4018806	1					
ANR	4019351	ExpressionStatement	"av_log ( ctx , AV_LOG_ERROR , ""Invalid type '%s' for the plugin\\n"" , pi -> plugin_type == F0R_PLUGIN_TYPE_FILTER ? ""filter"" : pi -> plugin_type == F0R_PLUGIN_TYPE_SOURCE ? ""source"" : pi -> plugin_type == F0R_PLUGIN_TYPE_MIXER2 ? ""mixer2"" : pi -> plugin_type == F0R_PLUGIN_TYPE_MIXER3 ? ""mixer3"" : ""unknown"" )"	159:8:3001:3375	4018806	0	True				
ANR	4019352	CallExpression	"av_log ( ctx , AV_LOG_ERROR , ""Invalid type '%s' for the plugin\\n"" , pi -> plugin_type == F0R_PLUGIN_TYPE_FILTER ? ""filter"" : pi -> plugin_type == F0R_PLUGIN_TYPE_SOURCE ? ""source"" : pi -> plugin_type == F0R_PLUGIN_TYPE_MIXER2 ? ""mixer2"" : pi -> plugin_type == F0R_PLUGIN_TYPE_MIXER3 ? ""mixer3"" : ""unknown"" )"		4018806	0					
ANR	4019353	Callee	av_log		4018806	0					
ANR	4019354	Identifier	av_log		4018806	0					
ANR	4019355	ArgumentList	ctx		4018806	1					
ANR	4019356	Argument	ctx		4018806	0					
ANR	4019357	Identifier	ctx		4018806	0					
ANR	4019358	Argument	AV_LOG_ERROR		4018806	1					
ANR	4019359	Identifier	AV_LOG_ERROR		4018806	0					
ANR	4019360	Argument	"""Invalid type '%s' for the plugin\\n"""		4018806	2					
ANR	4019361	PrimaryExpression	"""Invalid type '%s' for the plugin\\n"""		4018806	0					
ANR	4019362	Argument	"pi -> plugin_type == F0R_PLUGIN_TYPE_FILTER ? ""filter"" : pi -> plugin_type == F0R_PLUGIN_TYPE_SOURCE ? ""source"" : pi -> plugin_type == F0R_PLUGIN_TYPE_MIXER2 ? ""mixer2"" : pi -> plugin_type == F0R_PLUGIN_TYPE_MIXER3 ? ""mixer3"" : ""unknown"""		4018806	3					
ANR	4019363	ConditionalExpression	"pi -> plugin_type == F0R_PLUGIN_TYPE_FILTER ? ""filter"" : pi -> plugin_type == F0R_PLUGIN_TYPE_SOURCE ? ""source"" : pi -> plugin_type == F0R_PLUGIN_TYPE_MIXER2 ? ""mixer2"" : pi -> plugin_type == F0R_PLUGIN_TYPE_MIXER3 ? ""mixer3"" : ""unknown"""		4018806	0					
ANR	4019364	Condition	pi -> plugin_type == F0R_PLUGIN_TYPE_FILTER		4018806	0					
ANR	4019365	EqualityExpression	pi -> plugin_type == F0R_PLUGIN_TYPE_FILTER		4018806	0		==			
ANR	4019366	PtrMemberAccess	pi -> plugin_type		4018806	0					
ANR	4019367	Identifier	pi		4018806	0					
ANR	4019368	Identifier	plugin_type		4018806	1					
ANR	4019369	Identifier	F0R_PLUGIN_TYPE_FILTER		4018806	1					
ANR	4019370	PrimaryExpression	"""filter"""		4018806	1					
ANR	4019371	ConditionalExpression	"pi -> plugin_type == F0R_PLUGIN_TYPE_SOURCE ? ""source"" : pi -> plugin_type == F0R_PLUGIN_TYPE_MIXER2 ? ""mixer2"" : pi -> plugin_type == F0R_PLUGIN_TYPE_MIXER3 ? ""mixer3"" : ""unknown"""		4018806	2					
ANR	4019372	Condition	pi -> plugin_type == F0R_PLUGIN_TYPE_SOURCE		4018806	0					
ANR	4019373	EqualityExpression	pi -> plugin_type == F0R_PLUGIN_TYPE_SOURCE		4018806	0		==			
ANR	4019374	PtrMemberAccess	pi -> plugin_type		4018806	0					
ANR	4019375	Identifier	pi		4018806	0					
ANR	4019376	Identifier	plugin_type		4018806	1					
ANR	4019377	Identifier	F0R_PLUGIN_TYPE_SOURCE		4018806	1					
ANR	4019378	PrimaryExpression	"""source"""		4018806	1					
ANR	4019379	ConditionalExpression	"pi -> plugin_type == F0R_PLUGIN_TYPE_MIXER2 ? ""mixer2"" : pi -> plugin_type == F0R_PLUGIN_TYPE_MIXER3 ? ""mixer3"" : ""unknown"""		4018806	2					
ANR	4019380	Condition	pi -> plugin_type == F0R_PLUGIN_TYPE_MIXER2		4018806	0					
ANR	4019381	EqualityExpression	pi -> plugin_type == F0R_PLUGIN_TYPE_MIXER2		4018806	0		==			
ANR	4019382	PtrMemberAccess	pi -> plugin_type		4018806	0					
ANR	4019383	Identifier	pi		4018806	0					
ANR	4019384	Identifier	plugin_type		4018806	1					
ANR	4019385	Identifier	F0R_PLUGIN_TYPE_MIXER2		4018806	1					
ANR	4019386	PrimaryExpression	"""mixer2"""		4018806	1					
ANR	4019387	ConditionalExpression	"pi -> plugin_type == F0R_PLUGIN_TYPE_MIXER3 ? ""mixer3"" : ""unknown"""		4018806	2					
ANR	4019388	Condition	pi -> plugin_type == F0R_PLUGIN_TYPE_MIXER3		4018806	0					
ANR	4019389	EqualityExpression	pi -> plugin_type == F0R_PLUGIN_TYPE_MIXER3		4018806	0		==			
ANR	4019390	PtrMemberAccess	pi -> plugin_type		4018806	0					
ANR	4019391	Identifier	pi		4018806	0					
ANR	4019392	Identifier	plugin_type		4018806	1					
ANR	4019393	Identifier	F0R_PLUGIN_TYPE_MIXER3		4018806	1					
ANR	4019394	PrimaryExpression	"""mixer3"""		4018806	1					
ANR	4019395	PrimaryExpression	"""unknown"""		4018806	2					
ANR	4019396	ReturnStatement	return AVERROR ( EINVAL ) ;	171:8:3386:3408	4018806	1	True				
ANR	4019397	CallExpression	AVERROR ( EINVAL )		4018806	0					
ANR	4019398	Callee	AVERROR		4018806	0					
ANR	4019399	Identifier	AVERROR		4018806	0					
ANR	4019400	ArgumentList	EINVAL		4018806	1					
ANR	4019401	Argument	EINVAL		4018806	0					
ANR	4019402	Identifier	EINVAL		4018806	0					
ANR	4019403	Statement	av_log	177:4:3424:3429	4018806	16	True				
ANR	4019404	Statement	(	177:10:3430:3430	4018806	17	True				
ANR	4019405	Statement	ctx	177:11:3431:3433	4018806	18	True				
ANR	4019406	Statement	","	177:14:3434:3434	4018806	19	True				
ANR	4019407	Statement	AV_LOG_VERBOSE	177:16:3436:3449	4018806	20	True				
ANR	4019408	Statement	","	177:30:3450:3450	4018806	21	True				
ANR	4019409	Statement	"""name:%s author:'%s' explanation:'%s' color_model:%s """	179:11:3464:3517	4018806	22	True				
ANR	4019410	Statement	"""frei0r_version:%d version:%d.%d num_params:%d\\n"""	181:11:3531:3579	4018806	23	True				
ANR	4019411	Statement	","	181:60:3580:3580	4018806	24	True				
ANR	4019412	Statement	pi	183:11:3594:3595	4018806	25	True				
ANR	4019413	Statement	->	183:13:3596:3597	4018806	26	True				
ANR	4019414	Statement	name	183:15:3598:3601	4018806	27	True				
ANR	4019415	Statement	","	183:19:3602:3602	4018806	28	True				
ANR	4019416	Statement	pi	183:21:3604:3605	4018806	29	True				
ANR	4019417	Statement	->	183:23:3606:3607	4018806	30	True				
ANR	4019418	Statement	author	183:25:3608:3613	4018806	31	True				
ANR	4019419	Statement	","	183:31:3614:3614	4018806	32	True				
ANR	4019420	Statement	pi	183:33:3616:3617	4018806	33	True				
ANR	4019421	Statement	->	183:35:3618:3619	4018806	34	True				
ANR	4019422	Statement	explanation	183:37:3620:3630	4018806	35	True				
ANR	4019423	Statement	","	183:48:3631:3631	4018806	36	True				
ANR	4019424	Statement	pi	185:11:3645:3646	4018806	37	True				
ANR	4019425	Statement	->	185:13:3647:3648	4018806	38	True				
ANR	4019426	Statement	color_model	185:15:3649:3659	4018806	39	True				
ANR	4019427	Statement	==	185:27:3661:3662	4018806	40	True				
ANR	4019428	Statement	F0R_COLOR_MODEL_BGRA8888	185:30:3664:3687	4018806	41	True				
ANR	4019429	Statement	?	185:55:3689:3689	4018806	42	True				
ANR	4019430	Statement	"""bgra8888"""	185:57:3691:3700	4018806	43	True				
ANR	4019431	Statement	:	185:68:3702:3702	4018806	44	True				
ANR	4019432	Statement	pi	187:11:3716:3717	4018806	45	True				
ANR	4019433	Statement	->	187:13:3718:3719	4018806	46	True				
ANR	4019434	Statement	color_model	187:15:3720:3730	4018806	47	True				
ANR	4019435	Statement	==	187:27:3732:3733	4018806	48	True				
ANR	4019436	Statement	F0R_COLOR_MODEL_RGBA8888	187:30:3735:3758	4018806	49	True				
ANR	4019437	Statement	?	187:55:3760:3760	4018806	50	True				
ANR	4019438	Statement	"""rgba8888"""	187:57:3762:3771	4018806	51	True				
ANR	4019439	Statement	:	187:68:3773:3773	4018806	52	True				
ANR	4019440	Statement	pi	189:11:3787:3788	4018806	53	True				
ANR	4019441	Statement	->	189:13:3789:3790	4018806	54	True				
ANR	4019442	Statement	color_model	189:15:3791:3801	4018806	55	True				
ANR	4019443	Statement	==	189:27:3803:3804	4018806	56	True				
ANR	4019444	Statement	F0R_COLOR_MODEL_PACKED32	189:30:3806:3829	4018806	57	True				
ANR	4019445	Statement	?	189:55:3831:3831	4018806	58	True				
ANR	4019446	Statement	"""packed32"""	189:57:3833:3842	4018806	59	True				
ANR	4019447	Statement	:	189:68:3844:3844	4018806	60	True				
ANR	4019448	Statement	"""unknown"""	189:70:3846:3854	4018806	61	True				
ANR	4019449	Statement	","	189:79:3855:3855	4018806	62	True				
ANR	4019450	Statement	pi	191:11:3869:3870	4018806	63	True				
ANR	4019451	Statement	->	191:13:3871:3872	4018806	64	True				
ANR	4019452	Statement	frei0r_version	191:15:3873:3886	4018806	65	True				
ANR	4019453	Statement	","	191:29:3887:3887	4018806	66	True				
ANR	4019454	Statement	pi	191:31:3889:3890	4018806	67	True				
ANR	4019455	Statement	->	191:33:3891:3892	4018806	68	True				
ANR	4019456	Statement	major_version	191:35:3893:3905	4018806	69	True				
ANR	4019457	Statement	","	191:48:3906:3906	4018806	70	True				
ANR	4019458	Statement	pi	191:50:3908:3909	4018806	71	True				
ANR	4019459	Statement	->	191:52:3910:3911	4018806	72	True				
ANR	4019460	Statement	minor_version	191:54:3912:3924	4018806	73	True				
ANR	4019461	Statement	","	191:67:3925:3925	4018806	74	True				
ANR	4019462	Statement	pi	191:69:3927:3928	4018806	75	True				
ANR	4019463	Statement	->	191:71:3929:3930	4018806	76	True				
ANR	4019464	Statement	num_params	191:73:3931:3940	4018806	77	True				
ANR	4019465	Statement	)	191:83:3941:3941	4018806	78	True				
ANR	4019466	ExpressionStatement		191:84:3942:3942	4018806	79	True				
ANR	4019467	ReturnStatement	return 0 ;	195:4:3951:3959	4018806	80	True				
ANR	4019468	PrimaryExpression	0		4018806	0					
ANR	4019469	ReturnType	static av_cold int		4018806	1					
ANR	4019470	Identifier	frei0r_init		4018806	2					
ANR	4019471	ParameterList	"AVFilterContext * ctx , const char * dl_name , int type"		4018806	3					
ANR	4019472	Parameter	AVFilterContext * ctx	1:31:31:50	4018806	0	True				
ANR	4019473	ParameterType	AVFilterContext *		4018806	0					
ANR	4019474	Identifier	ctx		4018806	1					
ANR	4019475	Parameter	const char * dl_name	3:31:85:103	4018806	1	True				
ANR	4019476	ParameterType	const char *		4018806	0					
ANR	4019477	Identifier	dl_name		4018806	1					
ANR	4019478	Parameter	int type	3:52:106:113	4018806	2	True				
ANR	4019479	ParameterType	int		4018806	0					
ANR	4019480	Identifier	type		4018806	1					
ANR	4019481	CFGEntryNode	ENTRY		4018806		True				
ANR	4019482	CFGExitNode	EXIT		4018806		True				
ANR	4019483	Symbol	p1		4018806						
ANR	4019484	Symbol	ENOMEM		4018806						
ANR	4019485	Symbol	frei0r -> get_param_info		4018806						
ANR	4019486	Symbol	F0R_PLUGIN_TYPE_SOURCE		4018806						
ANR	4019487	Symbol	av_strdup		4018806						
ANR	4019488	Symbol	prefix		4018806						
ANR	4019489	Symbol	dl_name		4018806						
ANR	4019490	Symbol	type		4018806						
ANR	4019491	Symbol	frei0r -> dl_handle		4018806						
ANR	4019492	Symbol	load_path		4018806						
ANR	4019493	Symbol	f0r_init		4018806						
ANR	4019494	Symbol	path		4018806						
ANR	4019495	Symbol	frei0r -> deinit		4018806						
ANR	4019496	Symbol	& ptr		4018806						
ANR	4019497	Symbol	frei0r -> update		4018806						
ANR	4019498	Symbol	* frei0r		4018806						
ANR	4019499	Symbol	getenv		4018806						
ANR	4019500	Symbol	ret		4018806						
ANR	4019501	Symbol	NULL		4018806						
ANR	4019502	Symbol	pi -> plugin_type		4018806						
ANR	4019503	Symbol	AV_LOG_ERROR		4018806						
ANR	4019504	Symbol	frei0r -> set_param_value		4018806						
ANR	4019505	Symbol	F0R_PLUGIN_TYPE_MIXER3		4018806						
ANR	4019506	Symbol	ctx		4018806						
ANR	4019507	Symbol	& frei0r -> dl_handle		4018806						
ANR	4019508	Symbol	F0R_PLUGIN_TYPE_MIXER2		4018806						
ANR	4019509	Symbol	load_sym		4018806						
ANR	4019510	Symbol	av_asprintf		4018806						
ANR	4019511	Symbol	frei0r -> get_param_value		4018806						
ANR	4019512	Symbol	frei0r -> destruct		4018806						
ANR	4019513	Symbol	f0r_get_plugin_info		4018806						
ANR	4019514	Symbol	ctx -> priv		4018806						
ANR	4019515	Symbol	separator		4018806						
ANR	4019516	Symbol	* ctx		4018806						
ANR	4019517	Symbol	ptr		4018806						
ANR	4019518	Symbol	F0R_PLUGIN_TYPE_FILTER		4018806						
ANR	4019519	Symbol	p		4018806						
ANR	4019520	Symbol	EINVAL		4018806						
ANR	4019521	Symbol	frei0r -> construct		4018806						
ANR	4019522	Symbol	frei0r		4018806						
ANR	4019523	Symbol	av_strtok		4018806						
ANR	4019524	Symbol	& frei0r -> plugin_info		4018806						
ANR	4019525	Symbol	pi		4018806						
ANR	4019526	Symbol	AVERROR		4018806						
ANR	4019527	Symbol	* pi		4018806						
