command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5688311	File	/home/p4ultr4n/workplace/ReVeal/raw_code/mp3info_1.c								
ANR	5688312	Function	mp3info	1:0:0:1585							
ANR	5688313	FunctionDef	"mp3info (void * data , int * byteSize , int * samplesPerFrame , int * sampleRate , int * isMono)"		5688312	0					
ANR	5688314	CompoundStatement		3:0:100:1585	5688312	0					
ANR	5688315	IdentifierDeclStatement	uint8_t * dataTmp = ( uint8_t * ) data ;	5:4:107:141	5688312	0	True				
ANR	5688316	IdentifierDecl	* dataTmp = ( uint8_t * ) data		5688312	0					
ANR	5688317	IdentifierDeclType	uint8_t *		5688312	0					
ANR	5688318	Identifier	dataTmp		5688312	1					
ANR	5688319	AssignmentExpression	* dataTmp = ( uint8_t * ) data		5688312	2		=			
ANR	5688320	Identifier	dataTmp		5688312	0					
ANR	5688321	CastExpression	( uint8_t * ) data		5688312	1					
ANR	5688322	CastTarget	uint8_t *		5688312	0					
ANR	5688323	Identifier	data		5688312	1					
ANR	5688324	IdentifierDeclStatement	uint32_t header = ( ( uint32_t ) dataTmp [ 0 ] << 24 ) | ( ( uint32_t ) dataTmp [ 1 ] << 16 ) | ( ( uint32_t ) dataTmp [ 2 ] << 8 ) | ( uint32_t ) dataTmp [ 3 ] ;	7:4:148:284	5688312	1	True				
ANR	5688325	IdentifierDecl	header = ( ( uint32_t ) dataTmp [ 0 ] << 24 ) | ( ( uint32_t ) dataTmp [ 1 ] << 16 ) | ( ( uint32_t ) dataTmp [ 2 ] << 8 ) | ( uint32_t ) dataTmp [ 3 ]		5688312	0					
ANR	5688326	IdentifierDeclType	uint32_t		5688312	0					
ANR	5688327	Identifier	header		5688312	1					
ANR	5688328	AssignmentExpression	header = ( ( uint32_t ) dataTmp [ 0 ] << 24 ) | ( ( uint32_t ) dataTmp [ 1 ] << 16 ) | ( ( uint32_t ) dataTmp [ 2 ] << 8 ) | ( uint32_t ) dataTmp [ 3 ]		5688312	2		=			
ANR	5688329	Identifier	header		5688312	0					
ANR	5688330	InclusiveOrExpression	( ( uint32_t ) dataTmp [ 0 ] << 24 ) | ( ( uint32_t ) dataTmp [ 1 ] << 16 ) | ( ( uint32_t ) dataTmp [ 2 ] << 8 ) | ( uint32_t ) dataTmp [ 3 ]		5688312	1		|			
ANR	5688331	ShiftExpression	( uint32_t ) dataTmp [ 0 ] << 24		5688312	0		<<			
ANR	5688332	CastExpression	( uint32_t ) dataTmp [ 0 ]		5688312	0					
ANR	5688333	CastTarget	uint32_t		5688312	0					
ANR	5688334	ArrayIndexing	dataTmp [ 0 ]		5688312	1					
ANR	5688335	Identifier	dataTmp		5688312	0					
ANR	5688336	PrimaryExpression	0		5688312	1					
ANR	5688337	PrimaryExpression	24		5688312	1					
ANR	5688338	InclusiveOrExpression	( ( uint32_t ) dataTmp [ 1 ] << 16 ) | ( ( uint32_t ) dataTmp [ 2 ] << 8 ) | ( uint32_t ) dataTmp [ 3 ]		5688312	1		|			
ANR	5688339	ShiftExpression	( uint32_t ) dataTmp [ 1 ] << 16		5688312	0		<<			
ANR	5688340	CastExpression	( uint32_t ) dataTmp [ 1 ]		5688312	0					
ANR	5688341	CastTarget	uint32_t		5688312	0					
ANR	5688342	ArrayIndexing	dataTmp [ 1 ]		5688312	1					
ANR	5688343	Identifier	dataTmp		5688312	0					
ANR	5688344	PrimaryExpression	1		5688312	1					
ANR	5688345	PrimaryExpression	16		5688312	1					
ANR	5688346	InclusiveOrExpression	( ( uint32_t ) dataTmp [ 2 ] << 8 ) | ( uint32_t ) dataTmp [ 3 ]		5688312	1		|			
ANR	5688347	ShiftExpression	( uint32_t ) dataTmp [ 2 ] << 8		5688312	0		<<			
ANR	5688348	CastExpression	( uint32_t ) dataTmp [ 2 ]		5688312	0					
ANR	5688349	CastTarget	uint32_t		5688312	0					
ANR	5688350	ArrayIndexing	dataTmp [ 2 ]		5688312	1					
ANR	5688351	Identifier	dataTmp		5688312	0					
ANR	5688352	PrimaryExpression	2		5688312	1					
ANR	5688353	PrimaryExpression	8		5688312	1					
ANR	5688354	CastExpression	( uint32_t ) dataTmp [ 3 ]		5688312	1					
ANR	5688355	CastTarget	uint32_t		5688312	0					
ANR	5688356	ArrayIndexing	dataTmp [ 3 ]		5688312	1					
ANR	5688357	Identifier	dataTmp		5688312	0					
ANR	5688358	PrimaryExpression	3		5688312	1					
ANR	5688359	IdentifierDeclStatement	int layerID = 3 - ( ( header >> 17 ) & 0x03 ) ;	9:4:291:332	5688312	2	True				
ANR	5688360	IdentifierDecl	layerID = 3 - ( ( header >> 17 ) & 0x03 )		5688312	0					
ANR	5688361	IdentifierDeclType	int		5688312	0					
ANR	5688362	Identifier	layerID		5688312	1					
ANR	5688363	AssignmentExpression	layerID = 3 - ( ( header >> 17 ) & 0x03 )		5688312	2		=			
ANR	5688364	Identifier	layerID		5688312	0					
ANR	5688365	AdditiveExpression	3 - ( ( header >> 17 ) & 0x03 )		5688312	1		-			
ANR	5688366	PrimaryExpression	3		5688312	0					
ANR	5688367	BitAndExpression	( header >> 17 ) & 0x03		5688312	1		&			
ANR	5688368	ShiftExpression	header >> 17		5688312	0		>>			
ANR	5688369	Identifier	header		5688312	0					
ANR	5688370	PrimaryExpression	17		5688312	1					
ANR	5688371	PrimaryExpression	0x03		5688312	1					
ANR	5688372	IdentifierDeclStatement	int bitRateID = ( ( header >> 12 ) & 0x0f ) ;	11:4:339:378	5688312	3	True				
ANR	5688373	IdentifierDecl	bitRateID = ( ( header >> 12 ) & 0x0f )		5688312	0					
ANR	5688374	IdentifierDeclType	int		5688312	0					
ANR	5688375	Identifier	bitRateID		5688312	1					
ANR	5688376	AssignmentExpression	bitRateID = ( ( header >> 12 ) & 0x0f )		5688312	2		=			
ANR	5688377	Identifier	bitRateID		5688312	0					
ANR	5688378	BitAndExpression	( header >> 12 ) & 0x0f		5688312	1		&			
ANR	5688379	ShiftExpression	header >> 12		5688312	0		>>			
ANR	5688380	Identifier	header		5688312	0					
ANR	5688381	PrimaryExpression	12		5688312	1					
ANR	5688382	PrimaryExpression	0x0f		5688312	1					
ANR	5688383	IdentifierDeclStatement	int sampleRateID = ( ( header >> 10 ) & 0x03 ) ;	13:4:385:427	5688312	4	True				
ANR	5688384	IdentifierDecl	sampleRateID = ( ( header >> 10 ) & 0x03 )		5688312	0					
ANR	5688385	IdentifierDeclType	int		5688312	0					
ANR	5688386	Identifier	sampleRateID		5688312	1					
ANR	5688387	AssignmentExpression	sampleRateID = ( ( header >> 10 ) & 0x03 )		5688312	2		=			
ANR	5688388	Identifier	sampleRateID		5688312	0					
ANR	5688389	BitAndExpression	( header >> 10 ) & 0x03		5688312	1		&			
ANR	5688390	ShiftExpression	header >> 10		5688312	0		>>			
ANR	5688391	Identifier	header		5688312	0					
ANR	5688392	PrimaryExpression	10		5688312	1					
ANR	5688393	PrimaryExpression	0x03		5688312	1					
ANR	5688394	IdentifierDeclStatement	int bitRate = 0 ;	15:4:434:449	5688312	5	True				
ANR	5688395	IdentifierDecl	bitRate = 0		5688312	0					
ANR	5688396	IdentifierDeclType	int		5688312	0					
ANR	5688397	Identifier	bitRate		5688312	1					
ANR	5688398	AssignmentExpression	bitRate = 0		5688312	2		=			
ANR	5688399	Identifier	bitRate		5688312	0					
ANR	5688400	PrimaryExpression	0		5688312	1					
ANR	5688401	IdentifierDeclStatement	int bitsPerSlot = sBitsPerSlot [ layerID ] ;	17:4:456:495	5688312	6	True				
ANR	5688402	IdentifierDecl	bitsPerSlot = sBitsPerSlot [ layerID ]		5688312	0					
ANR	5688403	IdentifierDeclType	int		5688312	0					
ANR	5688404	Identifier	bitsPerSlot		5688312	1					
ANR	5688405	AssignmentExpression	bitsPerSlot = sBitsPerSlot [ layerID ]		5688312	2		=			
ANR	5688406	Identifier	bitsPerSlot		5688312	0					
ANR	5688407	ArrayIndexing	sBitsPerSlot [ layerID ]		5688312	1					
ANR	5688408	Identifier	sBitsPerSlot		5688312	0					
ANR	5688409	Identifier	layerID		5688312	1					
ANR	5688410	IdentifierDeclStatement	int isPadded = ( ( header >> 9 ) & 0x01 ) ;	19:4:502:539	5688312	7	True				
ANR	5688411	IdentifierDecl	isPadded = ( ( header >> 9 ) & 0x01 )		5688312	0					
ANR	5688412	IdentifierDeclType	int		5688312	0					
ANR	5688413	Identifier	isPadded		5688312	1					
ANR	5688414	AssignmentExpression	isPadded = ( ( header >> 9 ) & 0x01 )		5688312	2		=			
ANR	5688415	Identifier	isPadded		5688312	0					
ANR	5688416	BitAndExpression	( header >> 9 ) & 0x01		5688312	1		&			
ANR	5688417	ShiftExpression	header >> 9		5688312	0		>>			
ANR	5688418	Identifier	header		5688312	0					
ANR	5688419	PrimaryExpression	9		5688312	1					
ANR	5688420	PrimaryExpression	0x01		5688312	1					
ANR	5688421	IfStatement	if ( ( ( header >> 21 ) & 0x7ff ) != 0x7ff )		5688312	8					
ANR	5688422	Condition	( ( header >> 21 ) & 0x7ff ) != 0x7ff	23:9:553:587	5688312	0	True				
ANR	5688423	EqualityExpression	( ( header >> 21 ) & 0x7ff ) != 0x7ff		5688312	0		!=			
ANR	5688424	BitAndExpression	( header >> 21 ) & 0x7ff		5688312	0		&			
ANR	5688425	ShiftExpression	header >> 21		5688312	0		>>			
ANR	5688426	Identifier	header		5688312	0					
ANR	5688427	PrimaryExpression	21		5688312	1					
ANR	5688428	PrimaryExpression	0x7ff		5688312	1					
ANR	5688429	PrimaryExpression	0x7ff		5688312	1					
ANR	5688430	CompoundStatement		21:47:490:490	5688312	1					
ANR	5688431	ReturnStatement	return 0 ;	25:8:602:610	5688312	0	True				
ANR	5688432	PrimaryExpression	0		5688312	0					
ANR	5688433	IfStatement	if ( ! isPadded )		5688312	9					
ANR	5688434	Condition	! isPadded	31:9:631:639	5688312	0	True				
ANR	5688435	UnaryOperationExpression	! isPadded		5688312	0					
ANR	5688436	UnaryOperator	!		5688312	0					
ANR	5688437	Identifier	isPadded		5688312	1					
ANR	5688438	CompoundStatement		29:21:542:542	5688312	1					
ANR	5688439	ExpressionStatement	"printf ( ""Fatal error: mp3 data is not padded!\\n"" )"	33:8:654:702	5688312	0	True				
ANR	5688440	CallExpression	"printf ( ""Fatal error: mp3 data is not padded!\\n"" )"		5688312	0					
ANR	5688441	Callee	printf		5688312	0					
ANR	5688442	Identifier	printf		5688312	0					
ANR	5688443	ArgumentList	"""Fatal error: mp3 data is not padded!\\n"""		5688312	1					
ANR	5688444	Argument	"""Fatal error: mp3 data is not padded!\\n"""		5688312	0					
ANR	5688445	PrimaryExpression	"""Fatal error: mp3 data is not padded!\\n"""		5688312	0					
ANR	5688446	ExpressionStatement	exit ( 0 )	35:8:713:720	5688312	1	True				
ANR	5688447	CallExpression	exit ( 0 )		5688312	0					
ANR	5688448	Callee	exit		5688312	0					
ANR	5688449	Identifier	exit		5688312	0					
ANR	5688450	ArgumentList	0		5688312	1					
ANR	5688451	Argument	0		5688312	0					
ANR	5688452	PrimaryExpression	0		5688312	0					
ANR	5688453	ExpressionStatement	* isMono = ( ( header >> 6 ) & 0x03 ) == 0x03	41:4:736:777	5688312	10	True				
ANR	5688454	AssignmentExpression	* isMono = ( ( header >> 6 ) & 0x03 ) == 0x03		5688312	0		=			
ANR	5688455	UnaryOperationExpression	* isMono		5688312	0					
ANR	5688456	UnaryOperator	*		5688312	0					
ANR	5688457	Identifier	isMono		5688312	1					
ANR	5688458	EqualityExpression	( ( header >> 6 ) & 0x03 ) == 0x03		5688312	1		==			
ANR	5688459	BitAndExpression	( header >> 6 ) & 0x03		5688312	0		&			
ANR	5688460	ShiftExpression	header >> 6		5688312	0		>>			
ANR	5688461	Identifier	header		5688312	0					
ANR	5688462	PrimaryExpression	6		5688312	1					
ANR	5688463	PrimaryExpression	0x03		5688312	1					
ANR	5688464	PrimaryExpression	0x03		5688312	1					
ANR	5688465	IfStatement	if ( ( header >> 19 ) & 0x01 )		5688312	11					
ANR	5688466	Condition	( header >> 19 ) & 0x01	45:9:791:812	5688312	0	True				
ANR	5688467	BitAndExpression	( header >> 19 ) & 0x01		5688312	0		&			
ANR	5688468	ShiftExpression	header >> 19		5688312	0		>>			
ANR	5688469	Identifier	header		5688312	0					
ANR	5688470	PrimaryExpression	19		5688312	1					
ANR	5688471	PrimaryExpression	0x01		5688312	1					
ANR	5688472	CompoundStatement		43:34:715:715	5688312	1					
ANR	5688473	ExpressionStatement	* sampleRate = sSampleRates [ 0 ] [ sampleRateID ]	47:8:827:870	5688312	0	True				
ANR	5688474	AssignmentExpression	* sampleRate = sSampleRates [ 0 ] [ sampleRateID ]		5688312	0		=			
ANR	5688475	UnaryOperationExpression	* sampleRate		5688312	0					
ANR	5688476	UnaryOperator	*		5688312	0					
ANR	5688477	Identifier	sampleRate		5688312	1					
ANR	5688478	ArrayIndexing	sSampleRates [ 0 ] [ sampleRateID ]		5688312	1					
ANR	5688479	ArrayIndexing	sSampleRates [ 0 ]		5688312	0					
ANR	5688480	Identifier	sSampleRates		5688312	0					
ANR	5688481	PrimaryExpression	0		5688312	1					
ANR	5688482	Identifier	sampleRateID		5688312	1					
ANR	5688483	ExpressionStatement	bitRate = sBitRates [ 0 ] [ layerID ] [ bitRateID ] * 1000	49:8:881:930	5688312	1	True				
ANR	5688484	AssignmentExpression	bitRate = sBitRates [ 0 ] [ layerID ] [ bitRateID ] * 1000		5688312	0		=			
ANR	5688485	Identifier	bitRate		5688312	0					
ANR	5688486	MultiplicativeExpression	sBitRates [ 0 ] [ layerID ] [ bitRateID ] * 1000		5688312	1		*			
ANR	5688487	ArrayIndexing	sBitRates [ 0 ] [ layerID ] [ bitRateID ]		5688312	0					
ANR	5688488	ArrayIndexing	sBitRates [ 0 ] [ layerID ]		5688312	0					
ANR	5688489	ArrayIndexing	sBitRates [ 0 ]		5688312	0					
ANR	5688490	Identifier	sBitRates		5688312	0					
ANR	5688491	PrimaryExpression	0		5688312	1					
ANR	5688492	Identifier	layerID		5688312	1					
ANR	5688493	Identifier	bitRateID		5688312	1					
ANR	5688494	PrimaryExpression	1000		5688312	1					
ANR	5688495	ExpressionStatement	* samplesPerFrame = sSamplesPerFrame [ 0 ] [ layerID ]	51:8:941:988	5688312	2	True				
ANR	5688496	AssignmentExpression	* samplesPerFrame = sSamplesPerFrame [ 0 ] [ layerID ]		5688312	0		=			
ANR	5688497	UnaryOperationExpression	* samplesPerFrame		5688312	0					
ANR	5688498	UnaryOperator	*		5688312	0					
ANR	5688499	Identifier	samplesPerFrame		5688312	1					
ANR	5688500	ArrayIndexing	sSamplesPerFrame [ 0 ] [ layerID ]		5688312	1					
ANR	5688501	ArrayIndexing	sSamplesPerFrame [ 0 ]		5688312	0					
ANR	5688502	Identifier	sSamplesPerFrame		5688312	0					
ANR	5688503	PrimaryExpression	0		5688312	1					
ANR	5688504	Identifier	layerID		5688312	1					
ANR	5688505	ElseStatement	else		5688312	0					
ANR	5688506	CompoundStatement		53:11:903:903	5688312	0					
ANR	5688507	IfStatement	if ( ( header >> 20 ) & 0x01 )		5688312	0					
ANR	5688508	Condition	( header >> 20 ) & 0x01	57:13:1020:1040	5688312	0	True				
ANR	5688509	BitAndExpression	( header >> 20 ) & 0x01		5688312	0		&			
ANR	5688510	ShiftExpression	header >> 20		5688312	0		>>			
ANR	5688511	Identifier	header		5688312	0					
ANR	5688512	PrimaryExpression	20		5688312	1					
ANR	5688513	PrimaryExpression	0x01		5688312	1					
ANR	5688514	CompoundStatement		55:37:943:943	5688312	1					
ANR	5688515	ExpressionStatement	* sampleRate = sSampleRates [ 1 ] [ sampleRateID ]	59:12:1059:1102	5688312	0	True				
ANR	5688516	AssignmentExpression	* sampleRate = sSampleRates [ 1 ] [ sampleRateID ]		5688312	0		=			
ANR	5688517	UnaryOperationExpression	* sampleRate		5688312	0					
ANR	5688518	UnaryOperator	*		5688312	0					
ANR	5688519	Identifier	sampleRate		5688312	1					
ANR	5688520	ArrayIndexing	sSampleRates [ 1 ] [ sampleRateID ]		5688312	1					
ANR	5688521	ArrayIndexing	sSampleRates [ 1 ]		5688312	0					
ANR	5688522	Identifier	sSampleRates		5688312	0					
ANR	5688523	PrimaryExpression	1		5688312	1					
ANR	5688524	Identifier	sampleRateID		5688312	1					
ANR	5688525	ExpressionStatement	bitRate = sBitRates [ 1 ] [ layerID ] [ bitRateID ] * 1000	61:12:1117:1166	5688312	1	True				
ANR	5688526	AssignmentExpression	bitRate = sBitRates [ 1 ] [ layerID ] [ bitRateID ] * 1000		5688312	0		=			
ANR	5688527	Identifier	bitRate		5688312	0					
ANR	5688528	MultiplicativeExpression	sBitRates [ 1 ] [ layerID ] [ bitRateID ] * 1000		5688312	1		*			
ANR	5688529	ArrayIndexing	sBitRates [ 1 ] [ layerID ] [ bitRateID ]		5688312	0					
ANR	5688530	ArrayIndexing	sBitRates [ 1 ] [ layerID ]		5688312	0					
ANR	5688531	ArrayIndexing	sBitRates [ 1 ]		5688312	0					
ANR	5688532	Identifier	sBitRates		5688312	0					
ANR	5688533	PrimaryExpression	1		5688312	1					
ANR	5688534	Identifier	layerID		5688312	1					
ANR	5688535	Identifier	bitRateID		5688312	1					
ANR	5688536	PrimaryExpression	1000		5688312	1					
ANR	5688537	ExpressionStatement	* samplesPerFrame = sSamplesPerFrame [ 1 ] [ layerID ]	63:12:1181:1228	5688312	2	True				
ANR	5688538	AssignmentExpression	* samplesPerFrame = sSamplesPerFrame [ 1 ] [ layerID ]		5688312	0		=			
ANR	5688539	UnaryOperationExpression	* samplesPerFrame		5688312	0					
ANR	5688540	UnaryOperator	*		5688312	0					
ANR	5688541	Identifier	samplesPerFrame		5688312	1					
ANR	5688542	ArrayIndexing	sSamplesPerFrame [ 1 ] [ layerID ]		5688312	1					
ANR	5688543	ArrayIndexing	sSamplesPerFrame [ 1 ]		5688312	0					
ANR	5688544	Identifier	sSamplesPerFrame		5688312	0					
ANR	5688545	PrimaryExpression	1		5688312	1					
ANR	5688546	Identifier	layerID		5688312	1					
ANR	5688547	ElseStatement	else		5688312	0					
ANR	5688548	CompoundStatement		63:15:1145:1145	5688312	0					
ANR	5688549	ExpressionStatement	* sampleRate = sSampleRates [ 2 ] [ sampleRateID ]	67:12:1261:1304	5688312	0	True				
ANR	5688550	AssignmentExpression	* sampleRate = sSampleRates [ 2 ] [ sampleRateID ]		5688312	0		=			
ANR	5688551	UnaryOperationExpression	* sampleRate		5688312	0					
ANR	5688552	UnaryOperator	*		5688312	0					
ANR	5688553	Identifier	sampleRate		5688312	1					
ANR	5688554	ArrayIndexing	sSampleRates [ 2 ] [ sampleRateID ]		5688312	1					
ANR	5688555	ArrayIndexing	sSampleRates [ 2 ]		5688312	0					
ANR	5688556	Identifier	sSampleRates		5688312	0					
ANR	5688557	PrimaryExpression	2		5688312	1					
ANR	5688558	Identifier	sampleRateID		5688312	1					
ANR	5688559	ExpressionStatement	bitRate = sBitRates [ 1 ] [ layerID ] [ bitRateID ] * 1000	69:12:1319:1368	5688312	1	True				
ANR	5688560	AssignmentExpression	bitRate = sBitRates [ 1 ] [ layerID ] [ bitRateID ] * 1000		5688312	0		=			
ANR	5688561	Identifier	bitRate		5688312	0					
ANR	5688562	MultiplicativeExpression	sBitRates [ 1 ] [ layerID ] [ bitRateID ] * 1000		5688312	1		*			
ANR	5688563	ArrayIndexing	sBitRates [ 1 ] [ layerID ] [ bitRateID ]		5688312	0					
ANR	5688564	ArrayIndexing	sBitRates [ 1 ] [ layerID ]		5688312	0					
ANR	5688565	ArrayIndexing	sBitRates [ 1 ]		5688312	0					
ANR	5688566	Identifier	sBitRates		5688312	0					
ANR	5688567	PrimaryExpression	1		5688312	1					
ANR	5688568	Identifier	layerID		5688312	1					
ANR	5688569	Identifier	bitRateID		5688312	1					
ANR	5688570	PrimaryExpression	1000		5688312	1					
ANR	5688571	ExpressionStatement	* samplesPerFrame = sSamplesPerFrame [ 2 ] [ layerID ]	71:12:1383:1430	5688312	2	True				
ANR	5688572	AssignmentExpression	* samplesPerFrame = sSamplesPerFrame [ 2 ] [ layerID ]		5688312	0		=			
ANR	5688573	UnaryOperationExpression	* samplesPerFrame		5688312	0					
ANR	5688574	UnaryOperator	*		5688312	0					
ANR	5688575	Identifier	samplesPerFrame		5688312	1					
ANR	5688576	ArrayIndexing	sSamplesPerFrame [ 2 ] [ layerID ]		5688312	1					
ANR	5688577	ArrayIndexing	sSamplesPerFrame [ 2 ]		5688312	0					
ANR	5688578	Identifier	sSamplesPerFrame		5688312	0					
ANR	5688579	PrimaryExpression	2		5688312	1					
ANR	5688580	Identifier	layerID		5688312	1					
ANR	5688581	ExpressionStatement	* byteSize = ( ( ( ( * samplesPerFrame * ( bitRate / bitsPerSlot ) ) / * sampleRate ) + isPadded ) * bitsPerSlot )	79:4:1457:1565	5688312	12	True				
ANR	5688582	AssignmentExpression	* byteSize = ( ( ( ( * samplesPerFrame * ( bitRate / bitsPerSlot ) ) / * sampleRate ) + isPadded ) * bitsPerSlot )		5688312	0		=			
ANR	5688583	UnaryOperationExpression	* byteSize		5688312	0					
ANR	5688584	UnaryOperator	*		5688312	0					
ANR	5688585	Identifier	byteSize		5688312	1					
ANR	5688586	MultiplicativeExpression	( ( ( * samplesPerFrame * ( bitRate / bitsPerSlot ) ) / * sampleRate ) + isPadded ) * bitsPerSlot		5688312	1		*			
ANR	5688587	AdditiveExpression	( ( * samplesPerFrame * ( bitRate / bitsPerSlot ) ) / * sampleRate ) + isPadded		5688312	0		+			
ANR	5688588	MultiplicativeExpression	( * samplesPerFrame * ( bitRate / bitsPerSlot ) ) / * sampleRate		5688312	0		/			
ANR	5688589	MultiplicativeExpression	* samplesPerFrame * ( bitRate / bitsPerSlot )		5688312	0		*			
ANR	5688590	UnaryOperationExpression	* samplesPerFrame		5688312	0					
ANR	5688591	UnaryOperator	*		5688312	0					
ANR	5688592	Identifier	samplesPerFrame		5688312	1					
ANR	5688593	MultiplicativeExpression	bitRate / bitsPerSlot		5688312	1		/			
ANR	5688594	Identifier	bitRate		5688312	0					
ANR	5688595	Identifier	bitsPerSlot		5688312	1					
ANR	5688596	UnaryOperationExpression	* sampleRate		5688312	1					
ANR	5688597	UnaryOperator	*		5688312	0					
ANR	5688598	Identifier	sampleRate		5688312	1					
ANR	5688599	Identifier	isPadded		5688312	1					
ANR	5688600	Identifier	bitsPerSlot		5688312	1					
ANR	5688601	ReturnStatement	return 1 ;	83:4:1574:1582	5688312	13	True				
ANR	5688602	PrimaryExpression	1		5688312	0					
ANR	5688603	ReturnType	static int		5688312	1					
ANR	5688604	Identifier	mp3info		5688312	2					
ANR	5688605	ParameterList	"void * data , int * byteSize , int * samplesPerFrame , int * sampleRate , int * isMono"		5688312	3					
ANR	5688606	Parameter	void * data	1:19:19:28	5688312	0	True				
ANR	5688607	ParameterType	void *		5688312	0					
ANR	5688608	Identifier	data		5688312	1					
ANR	5688609	Parameter	int * byteSize	1:31:31:43	5688312	1	True				
ANR	5688610	ParameterType	int *		5688312	0					
ANR	5688611	Identifier	byteSize		5688312	1					
ANR	5688612	Parameter	int * samplesPerFrame	1:46:46:65	5688312	2	True				
ANR	5688613	ParameterType	int *		5688312	0					
ANR	5688614	Identifier	samplesPerFrame		5688312	1					
ANR	5688615	Parameter	int * sampleRate	1:68:68:82	5688312	3	True				
ANR	5688616	ParameterType	int *		5688312	0					
ANR	5688617	Identifier	sampleRate		5688312	1					
ANR	5688618	Parameter	int * isMono	1:85:85:95	5688312	4	True				
ANR	5688619	ParameterType	int *		5688312	0					
ANR	5688620	Identifier	isMono		5688312	1					
ANR	5688621	CFGEntryNode	ENTRY		5688312		True				
ANR	5688622	CFGExitNode	EXIT		5688312		True				
ANR	5688623	Symbol	data		5688312						
ANR	5688624	Symbol	byteSize		5688312						
ANR	5688625	Symbol	sBitRates		5688312						
ANR	5688626	Symbol	* sampleRateID		5688312						
ANR	5688627	Symbol	dataTmp		5688312						
ANR	5688628	Symbol	* * * sBitRates		5688312						
ANR	5688629	Symbol	* * sSamplesPerFrame		5688312						
ANR	5688630	Symbol	isMono		5688312						
ANR	5688631	Symbol	isPadded		5688312						
ANR	5688632	Symbol	sSampleRates		5688312						
ANR	5688633	Symbol	* sBitsPerSlot		5688312						
ANR	5688634	Symbol	* sSampleRates		5688312						
ANR	5688635	Symbol	layerID		5688312						
ANR	5688636	Symbol	* * layerID		5688312						
ANR	5688637	Symbol	bitRate		5688312						
ANR	5688638	Symbol	* byteSize		5688312						
ANR	5688639	Symbol	bitsPerSlot		5688312						
ANR	5688640	Symbol	* sampleRate		5688312						
ANR	5688641	Symbol	* sSamplesPerFrame		5688312						
ANR	5688642	Symbol	samplesPerFrame		5688312						
ANR	5688643	Symbol	sBitsPerSlot		5688312						
ANR	5688644	Symbol	* layerID		5688312						
ANR	5688645	Symbol	* * sBitRates		5688312						
ANR	5688646	Symbol	sampleRate		5688312						
ANR	5688647	Symbol	* dataTmp		5688312						
ANR	5688648	Symbol	sSamplesPerFrame		5688312						
ANR	5688649	Symbol	bitRateID		5688312						
ANR	5688650	Symbol	* sBitRates		5688312						
ANR	5688651	Symbol	* samplesPerFrame		5688312						
ANR	5688652	Symbol	header		5688312						
ANR	5688653	Symbol	* * sSampleRates		5688312						
ANR	5688654	Symbol	sampleRateID		5688312						
ANR	5688655	Symbol	* bitRateID		5688312						
ANR	5688656	Symbol	* isMono		5688312						
