command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1066088	File	/home/p4ultr4n/workplace/ReVeal/raw_code/blkdebug_co_pwritev_0.c								
ANR	1066089	Function	blkdebug_co_pwritev	1:0:0:917							
ANR	1066090	FunctionDef	"blkdebug_co_pwritev (BlockDriverState * bs , uint64_t offset , uint64_t bytes , QEMUIOVector * qiov , int flags)"		1066089	0					
ANR	1066091	CompoundStatement		5:0:128:917	1066089	0					
ANR	1066092	IdentifierDeclStatement	BDRVBlkdebugState * s = bs -> opaque ;	7:4:135:168	1066089	0	True				
ANR	1066093	IdentifierDecl	* s = bs -> opaque		1066089	0					
ANR	1066094	IdentifierDeclType	BDRVBlkdebugState *		1066089	0					
ANR	1066095	Identifier	s		1066089	1					
ANR	1066096	AssignmentExpression	* s = bs -> opaque		1066089	2		=			
ANR	1066097	Identifier	s		1066089	0					
ANR	1066098	PtrMemberAccess	bs -> opaque		1066089	1					
ANR	1066099	Identifier	bs		1066089	0					
ANR	1066100	Identifier	opaque		1066089	1					
ANR	1066101	IdentifierDeclStatement	BlkdebugRule * rule = NULL ;	9:4:175:200	1066089	1	True				
ANR	1066102	IdentifierDecl	* rule = NULL		1066089	0					
ANR	1066103	IdentifierDeclType	BlkdebugRule *		1066089	0					
ANR	1066104	Identifier	rule		1066089	1					
ANR	1066105	AssignmentExpression	* rule = NULL		1066089	2		=			
ANR	1066106	Identifier	NULL		1066089	0					
ANR	1066107	Identifier	NULL		1066089	1					
ANR	1066108	ExpressionStatement	"assert ( QEMU_IS_ALIGNED ( offset , bs -> bl . request_alignment ) )"	15:4:256:313	1066089	2	True				
ANR	1066109	CallExpression	"assert ( QEMU_IS_ALIGNED ( offset , bs -> bl . request_alignment ) )"		1066089	0					
ANR	1066110	Callee	assert		1066089	0					
ANR	1066111	Identifier	assert		1066089	0					
ANR	1066112	ArgumentList	"QEMU_IS_ALIGNED ( offset , bs -> bl . request_alignment )"		1066089	1					
ANR	1066113	Argument	"QEMU_IS_ALIGNED ( offset , bs -> bl . request_alignment )"		1066089	0					
ANR	1066114	CallExpression	"QEMU_IS_ALIGNED ( offset , bs -> bl . request_alignment )"		1066089	0					
ANR	1066115	Callee	QEMU_IS_ALIGNED		1066089	0					
ANR	1066116	Identifier	QEMU_IS_ALIGNED		1066089	0					
ANR	1066117	ArgumentList	offset		1066089	1					
ANR	1066118	Argument	offset		1066089	0					
ANR	1066119	Identifier	offset		1066089	0					
ANR	1066120	Argument	bs -> bl . request_alignment		1066089	1					
ANR	1066121	MemberAccess	bs -> bl . request_alignment		1066089	0					
ANR	1066122	PtrMemberAccess	bs -> bl		1066089	0					
ANR	1066123	Identifier	bs		1066089	0					
ANR	1066124	Identifier	bl		1066089	1					
ANR	1066125	Identifier	request_alignment		1066089	1					
ANR	1066126	ExpressionStatement	"assert ( QEMU_IS_ALIGNED ( bytes , bs -> bl . request_alignment ) )"	17:4:320:376	1066089	3	True				
ANR	1066127	CallExpression	"assert ( QEMU_IS_ALIGNED ( bytes , bs -> bl . request_alignment ) )"		1066089	0					
ANR	1066128	Callee	assert		1066089	0					
ANR	1066129	Identifier	assert		1066089	0					
ANR	1066130	ArgumentList	"QEMU_IS_ALIGNED ( bytes , bs -> bl . request_alignment )"		1066089	1					
ANR	1066131	Argument	"QEMU_IS_ALIGNED ( bytes , bs -> bl . request_alignment )"		1066089	0					
ANR	1066132	CallExpression	"QEMU_IS_ALIGNED ( bytes , bs -> bl . request_alignment )"		1066089	0					
ANR	1066133	Callee	QEMU_IS_ALIGNED		1066089	0					
ANR	1066134	Identifier	QEMU_IS_ALIGNED		1066089	0					
ANR	1066135	ArgumentList	bytes		1066089	1					
ANR	1066136	Argument	bytes		1066089	0					
ANR	1066137	Identifier	bytes		1066089	0					
ANR	1066138	Argument	bs -> bl . request_alignment		1066089	1					
ANR	1066139	MemberAccess	bs -> bl . request_alignment		1066089	0					
ANR	1066140	PtrMemberAccess	bs -> bl		1066089	0					
ANR	1066141	Identifier	bs		1066089	0					
ANR	1066142	Identifier	bl		1066089	1					
ANR	1066143	Identifier	request_alignment		1066089	1					
ANR	1066144	IfStatement	if ( bs -> bl . max_transfer )		1066089	4					
ANR	1066145	Condition	bs -> bl . max_transfer	19:8:387:405	1066089	0	True				
ANR	1066146	MemberAccess	bs -> bl . max_transfer		1066089	0					
ANR	1066147	PtrMemberAccess	bs -> bl		1066089	0					
ANR	1066148	Identifier	bs		1066089	0					
ANR	1066149	Identifier	bl		1066089	1					
ANR	1066150	Identifier	max_transfer		1066089	1					
ANR	1066151	CompoundStatement		15:29:279:279	1066089	1					
ANR	1066152	ExpressionStatement	assert ( bytes <= bs -> bl . max_transfer )	21:8:419:455	1066089	0	True				
ANR	1066153	CallExpression	assert ( bytes <= bs -> bl . max_transfer )		1066089	0					
ANR	1066154	Callee	assert		1066089	0					
ANR	1066155	Identifier	assert		1066089	0					
ANR	1066156	ArgumentList	bytes <= bs -> bl . max_transfer		1066089	1					
ANR	1066157	Argument	bytes <= bs -> bl . max_transfer		1066089	0					
ANR	1066158	RelationalExpression	bytes <= bs -> bl . max_transfer		1066089	0		<=			
ANR	1066159	Identifier	bytes		1066089	0					
ANR	1066160	MemberAccess	bs -> bl . max_transfer		1066089	1					
ANR	1066161	PtrMemberAccess	bs -> bl		1066089	0					
ANR	1066162	Identifier	bs		1066089	0					
ANR	1066163	Identifier	bl		1066089	1					
ANR	1066164	Identifier	max_transfer		1066089	1					
ANR	1066165	Statement	QSIMPLEQ_FOREACH	27:4:471:486	1066089	5	True				
ANR	1066166	Statement	(	27:20:487:487	1066089	6	True				
ANR	1066167	Statement	rule	27:21:488:491	1066089	7	True				
ANR	1066168	Statement	","	27:25:492:492	1066089	8	True				
ANR	1066169	Statement	&	27:27:494:494	1066089	9	True				
ANR	1066170	Statement	s	27:28:495:495	1066089	10	True				
ANR	1066171	Statement	->	27:29:496:497	1066089	11	True				
ANR	1066172	Statement	active_rules	27:31:498:509	1066089	12	True				
ANR	1066173	Statement	","	27:43:510:510	1066089	13	True				
ANR	1066174	Statement	active_next	27:45:512:522	1066089	14	True				
ANR	1066175	Statement	)	27:56:523:523	1066089	15	True				
ANR	1066176	CompoundStatement		25:8:407:459	1066089	16					
ANR	1066177	IdentifierDeclStatement	uint64_t inject_offset = rule -> options . inject . offset ;	29:8:536:588	1066089	0	True				
ANR	1066178	IdentifierDecl	inject_offset = rule -> options . inject . offset		1066089	0					
ANR	1066179	IdentifierDeclType	uint64_t		1066089	0					
ANR	1066180	Identifier	inject_offset		1066089	1					
ANR	1066181	AssignmentExpression	inject_offset = rule -> options . inject . offset		1066089	2		=			
ANR	1066182	Identifier	inject_offset		1066089	0					
ANR	1066183	MemberAccess	rule -> options . inject . offset		1066089	1					
ANR	1066184	MemberAccess	rule -> options . inject		1066089	0					
ANR	1066185	PtrMemberAccess	rule -> options		1066089	0					
ANR	1066186	Identifier	rule		1066089	0					
ANR	1066187	Identifier	options		1066089	1					
ANR	1066188	Identifier	inject		1066089	1					
ANR	1066189	Identifier	offset		1066089	1					
ANR	1066190	IfStatement	if ( inject_offset == - 1 || ( inject_offset >= offset && inject_offset < offset + bytes ) )		1066089	1					
ANR	1066191	Condition	inject_offset == - 1 || ( inject_offset >= offset && inject_offset < offset + bytes )	33:12:605:699	1066089	0	True				
ANR	1066192	OrExpression	inject_offset == - 1 || ( inject_offset >= offset && inject_offset < offset + bytes )		1066089	0		||			
ANR	1066193	EqualityExpression	inject_offset == - 1		1066089	0		==			
ANR	1066194	Identifier	inject_offset		1066089	0					
ANR	1066195	UnaryOperationExpression	- 1		1066089	1					
ANR	1066196	UnaryOperator	-		1066089	0					
ANR	1066197	PrimaryExpression	1		1066089	1					
ANR	1066198	AndExpression	inject_offset >= offset && inject_offset < offset + bytes		1066089	1		&&			
ANR	1066199	RelationalExpression	inject_offset >= offset		1066089	0		>=			
ANR	1066200	Identifier	inject_offset		1066089	0					
ANR	1066201	Identifier	offset		1066089	1					
ANR	1066202	RelationalExpression	inject_offset < offset + bytes		1066089	1		<			
ANR	1066203	Identifier	inject_offset		1066089	0					
ANR	1066204	AdditiveExpression	offset + bytes		1066089	1		+			
ANR	1066205	Identifier	offset		1066089	0					
ANR	1066206	Identifier	bytes		1066089	1					
ANR	1066207	CompoundStatement		33:8:582:582	1066089	1					
ANR	1066208	BreakStatement	break ;	39:12:726:731	1066089	0	True				
ANR	1066209	IfStatement	if ( rule && rule -> options . inject . error )		1066089	17					
ANR	1066210	Condition	rule && rule -> options . inject . error	47:8:762:795	1066089	0	True				
ANR	1066211	AndExpression	rule && rule -> options . inject . error		1066089	0		&&			
ANR	1066212	Identifier	rule		1066089	0					
ANR	1066213	MemberAccess	rule -> options . inject . error		1066089	1					
ANR	1066214	MemberAccess	rule -> options . inject		1066089	0					
ANR	1066215	PtrMemberAccess	rule -> options		1066089	0					
ANR	1066216	Identifier	rule		1066089	0					
ANR	1066217	Identifier	options		1066089	1					
ANR	1066218	Identifier	inject		1066089	1					
ANR	1066219	Identifier	error		1066089	1					
ANR	1066220	CompoundStatement		43:44:669:669	1066089	1					
ANR	1066221	ReturnStatement	"return inject_error ( bs , rule ) ;"	49:8:809:838	1066089	0	True				
ANR	1066222	CallExpression	"inject_error ( bs , rule )"		1066089	0					
ANR	1066223	Callee	inject_error		1066089	0					
ANR	1066224	Identifier	inject_error		1066089	0					
ANR	1066225	ArgumentList	bs		1066089	1					
ANR	1066226	Argument	bs		1066089	0					
ANR	1066227	Identifier	bs		1066089	0					
ANR	1066228	Argument	rule		1066089	1					
ANR	1066229	Identifier	rule		1066089	0					
ANR	1066230	ReturnStatement	"return bdrv_co_pwritev ( bs -> file , offset , bytes , qiov , flags ) ;"	55:4:854:914	1066089	18	True				
ANR	1066231	CallExpression	"bdrv_co_pwritev ( bs -> file , offset , bytes , qiov , flags )"		1066089	0					
ANR	1066232	Callee	bdrv_co_pwritev		1066089	0					
ANR	1066233	Identifier	bdrv_co_pwritev		1066089	0					
ANR	1066234	ArgumentList	bs -> file		1066089	1					
ANR	1066235	Argument	bs -> file		1066089	0					
ANR	1066236	PtrMemberAccess	bs -> file		1066089	0					
ANR	1066237	Identifier	bs		1066089	0					
ANR	1066238	Identifier	file		1066089	1					
ANR	1066239	Argument	offset		1066089	1					
ANR	1066240	Identifier	offset		1066089	0					
ANR	1066241	Argument	bytes		1066089	2					
ANR	1066242	Identifier	bytes		1066089	0					
ANR	1066243	Argument	qiov		1066089	3					
ANR	1066244	Identifier	qiov		1066089	0					
ANR	1066245	Argument	flags		1066089	4					
ANR	1066246	Identifier	flags		1066089	0					
ANR	1066247	Identifier	blkdebug_co_pwritev		1066089	1					
ANR	1066248	ParameterList	"BlockDriverState * bs , uint64_t offset , uint64_t bytes , QEMUIOVector * qiov , int flags"		1066089	2					
ANR	1066249	Parameter	BlockDriverState * bs	1:20:20:39	1066089	0	True				
ANR	1066250	ParameterType	BlockDriverState *		1066089	0					
ANR	1066251	Identifier	bs		1066089	1					
ANR	1066252	Parameter	uint64_t offset	1:42:42:56	1066089	1	True				
ANR	1066253	ParameterType	uint64_t		1066089	0					
ANR	1066254	Identifier	offset		1066089	1					
ANR	1066255	Parameter	uint64_t bytes	1:59:59:72	1066089	2	True				
ANR	1066256	ParameterType	uint64_t		1066089	0					
ANR	1066257	Identifier	bytes		1066089	1					
ANR	1066258	Parameter	QEMUIOVector * qiov	3:20:96:113	1066089	3	True				
ANR	1066259	ParameterType	QEMUIOVector *		1066089	0					
ANR	1066260	Identifier	qiov		1066089	1					
ANR	1066261	Parameter	int flags	3:40:116:124	1066089	4	True				
ANR	1066262	ParameterType	int		1066089	0					
ANR	1066263	Identifier	flags		1066089	1					
ANR	1066264	CFGEntryNode	ENTRY		1066089		True				
ANR	1066265	CFGExitNode	EXIT		1066089		True				
ANR	1066266	CFGErrorNode	ERROR		1066089		True				
ANR	1066267	Symbol	QEMU_IS_ALIGNED		1066089						
ANR	1066268	Symbol	bs -> bl . max_transfer		1066089						
ANR	1066269	Symbol	NULL		1066089						
ANR	1066270	Symbol	offset		1066089						
ANR	1066271	Symbol	bs -> opaque		1066089						
ANR	1066272	Symbol	inject_offset		1066089						
ANR	1066273	Symbol	bs -> file		1066089						
ANR	1066274	Symbol	rule -> options . inject . error		1066089						
ANR	1066275	Symbol	flags		1066089						
ANR	1066276	Symbol	inject_error		1066089						
ANR	1066277	Symbol	rule		1066089						
ANR	1066278	Symbol	bs -> bl . request_alignment		1066089						
ANR	1066279	Symbol	rule -> options . inject		1066089						
ANR	1066280	Symbol	qiov		1066089						
ANR	1066281	Symbol	bs		1066089						
ANR	1066282	Symbol	bdrv_co_pwritev		1066089						
ANR	1066283	Symbol	s		1066089						
ANR	1066284	Symbol	* bs		1066089						
ANR	1066285	Symbol	bytes		1066089						
ANR	1066286	Symbol	* rule		1066089						
ANR	1066287	Symbol	bs -> bl		1066089						
ANR	1066288	Symbol	rule -> options . inject . offset		1066089						
ANR	1066289	Symbol	rule -> options		1066089						
