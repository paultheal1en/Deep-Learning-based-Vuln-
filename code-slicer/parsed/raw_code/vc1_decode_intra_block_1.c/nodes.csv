command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8845429	File	/home/p4ultr4n/workplace/ReVeal/raw_code/vc1_decode_intra_block_1.c								
ANR	8845430	Function	vc1_decode_intra_block	1:0:0:7488							
ANR	8845431	FunctionDef	"vc1_decode_intra_block (VC1Context * v , int16_t block [ 64 ] , int n , int coded , int mquant , int codingset)"		8845430	0					
ANR	8845432	CompoundStatement		5:0:149:7488	8845430	0					
ANR	8845433	IdentifierDeclStatement	GetBitContext * gb = & v -> s . gb ;	7:4:156:184	8845430	0	True				
ANR	8845434	IdentifierDecl	* gb = & v -> s . gb		8845430	0					
ANR	8845435	IdentifierDeclType	GetBitContext *		8845430	0					
ANR	8845436	Identifier	gb		8845430	1					
ANR	8845437	AssignmentExpression	* gb = & v -> s . gb		8845430	2		=			
ANR	8845438	Identifier	gb		8845430	0					
ANR	8845439	UnaryOperationExpression	& v -> s . gb		8845430	1					
ANR	8845440	UnaryOperator	&		8845430	0					
ANR	8845441	MemberAccess	v -> s . gb		8845430	1					
ANR	8845442	PtrMemberAccess	v -> s		8845430	0					
ANR	8845443	Identifier	v		8845430	0					
ANR	8845444	Identifier	s		8845430	1					
ANR	8845445	Identifier	gb		8845430	1					
ANR	8845446	IdentifierDeclStatement	MpegEncContext * s = & v -> s ;	9:4:191:216	8845430	1	True				
ANR	8845447	IdentifierDecl	* s = & v -> s		8845430	0					
ANR	8845448	IdentifierDeclType	MpegEncContext *		8845430	0					
ANR	8845449	Identifier	s		8845430	1					
ANR	8845450	AssignmentExpression	* s = & v -> s		8845430	2		=			
ANR	8845451	Identifier	s		8845430	0					
ANR	8845452	UnaryOperationExpression	& v -> s		8845430	1					
ANR	8845453	UnaryOperator	&		8845430	0					
ANR	8845454	PtrMemberAccess	v -> s		8845430	1					
ANR	8845455	Identifier	v		8845430	0					
ANR	8845456	Identifier	s		8845430	1					
ANR	8845457	IdentifierDeclStatement	int dc_pred_dir = 0 ;	11:4:223:242	8845430	2	True				
ANR	8845458	IdentifierDecl	dc_pred_dir = 0		8845430	0					
ANR	8845459	IdentifierDeclType	int		8845430	0					
ANR	8845460	Identifier	dc_pred_dir		8845430	1					
ANR	8845461	AssignmentExpression	dc_pred_dir = 0		8845430	2		=			
ANR	8845462	Identifier	dc_pred_dir		8845430	0					
ANR	8845463	PrimaryExpression	0		8845430	1					
ANR	8845464	IdentifierDeclStatement	int i ;	13:4:291:296	8845430	3	True				
ANR	8845465	IdentifierDecl	i		8845430	0					
ANR	8845466	IdentifierDeclType	int		8845430	0					
ANR	8845467	Identifier	i		8845430	1					
ANR	8845468	IdentifierDeclStatement	int16_t * dc_val ;	15:4:303:318	8845430	4	True				
ANR	8845469	IdentifierDecl	* dc_val		8845430	0					
ANR	8845470	IdentifierDeclType	int16_t *		8845430	0					
ANR	8845471	Identifier	dc_val		8845430	1					
ANR	8845472	IdentifierDeclStatement	"int16_t * ac_val , * ac_val2 ;"	17:4:325:350	8845430	5	True				
ANR	8845473	IdentifierDecl	* ac_val		8845430	0					
ANR	8845474	IdentifierDeclType	int16_t *		8845430	0					
ANR	8845475	Identifier	ac_val		8845430	1					
ANR	8845476	IdentifierDecl	* ac_val2		8845430	1					
ANR	8845477	IdentifierDeclType	int16_t *		8845430	0					
ANR	8845478	Identifier	ac_val2		8845430	1					
ANR	8845479	IdentifierDeclStatement	int dcdiff ;	19:4:357:367	8845430	6	True				
ANR	8845480	IdentifierDecl	dcdiff		8845430	0					
ANR	8845481	IdentifierDeclType	int		8845430	0					
ANR	8845482	Identifier	dcdiff		8845430	1					
ANR	8845483	IdentifierDeclStatement	int mb_pos = s -> mb_x + s -> mb_y * s -> mb_stride ;	21:4:374:419	8845430	7	True				
ANR	8845484	IdentifierDecl	mb_pos = s -> mb_x + s -> mb_y * s -> mb_stride		8845430	0					
ANR	8845485	IdentifierDeclType	int		8845430	0					
ANR	8845486	Identifier	mb_pos		8845430	1					
ANR	8845487	AssignmentExpression	mb_pos = s -> mb_x + s -> mb_y * s -> mb_stride		8845430	2		=			
ANR	8845488	Identifier	mb_pos		8845430	0					
ANR	8845489	AdditiveExpression	s -> mb_x + s -> mb_y * s -> mb_stride		8845430	1		+			
ANR	8845490	PtrMemberAccess	s -> mb_x		8845430	0					
ANR	8845491	Identifier	s		8845430	0					
ANR	8845492	Identifier	mb_x		8845430	1					
ANR	8845493	MultiplicativeExpression	s -> mb_y * s -> mb_stride		8845430	1		*			
ANR	8845494	PtrMemberAccess	s -> mb_y		8845430	0					
ANR	8845495	Identifier	s		8845430	0					
ANR	8845496	Identifier	mb_y		8845430	1					
ANR	8845497	PtrMemberAccess	s -> mb_stride		8845430	1					
ANR	8845498	Identifier	s		8845430	0					
ANR	8845499	Identifier	mb_stride		8845430	1					
ANR	8845500	IdentifierDeclStatement	"int a_avail = v -> a_avail , c_avail = v -> c_avail ;"	23:4:426:472	8845430	8	True				
ANR	8845501	IdentifierDecl	a_avail = v -> a_avail		8845430	0					
ANR	8845502	IdentifierDeclType	int		8845430	0					
ANR	8845503	Identifier	a_avail		8845430	1					
ANR	8845504	AssignmentExpression	a_avail = v -> a_avail		8845430	2		=			
ANR	8845505	Identifier	a_avail		8845430	0					
ANR	8845506	PtrMemberAccess	v -> a_avail		8845430	1					
ANR	8845507	Identifier	v		8845430	0					
ANR	8845508	Identifier	a_avail		8845430	1					
ANR	8845509	IdentifierDecl	c_avail = v -> c_avail		8845430	1					
ANR	8845510	IdentifierDeclType	int		8845430	0					
ANR	8845511	Identifier	c_avail		8845430	1					
ANR	8845512	AssignmentExpression	c_avail = v -> c_avail		8845430	2		=			
ANR	8845513	Identifier	c_avail		8845430	0					
ANR	8845514	PtrMemberAccess	v -> c_avail		8845430	1					
ANR	8845515	Identifier	v		8845430	0					
ANR	8845516	Identifier	c_avail		8845430	1					
ANR	8845517	IdentifierDeclStatement	int use_pred = s -> ac_pred ;	25:4:479:504	8845430	9	True				
ANR	8845518	IdentifierDecl	use_pred = s -> ac_pred		8845430	0					
ANR	8845519	IdentifierDeclType	int		8845430	0					
ANR	8845520	Identifier	use_pred		8845430	1					
ANR	8845521	AssignmentExpression	use_pred = s -> ac_pred		8845430	2		=			
ANR	8845522	Identifier	use_pred		8845430	0					
ANR	8845523	PtrMemberAccess	s -> ac_pred		8845430	1					
ANR	8845524	Identifier	s		8845430	0					
ANR	8845525	Identifier	ac_pred		8845430	1					
ANR	8845526	IdentifierDeclStatement	int scale ;	27:4:511:520	8845430	10	True				
ANR	8845527	IdentifierDecl	scale		8845430	0					
ANR	8845528	IdentifierDeclType	int		8845430	0					
ANR	8845529	Identifier	scale		8845430	1					
ANR	8845530	IdentifierDeclStatement	"int q1 , q2 = 0 ;"	29:4:527:541	8845430	11	True				
ANR	8845531	IdentifierDecl	q1		8845430	0					
ANR	8845532	IdentifierDeclType	int		8845430	0					
ANR	8845533	Identifier	q1		8845430	1					
ANR	8845534	IdentifierDecl	q2 = 0		8845430	1					
ANR	8845535	IdentifierDeclType	int		8845430	0					
ANR	8845536	Identifier	q2		8845430	1					
ANR	8845537	AssignmentExpression	q2 = 0		8845430	2		=			
ANR	8845538	Identifier	q2		8845430	0					
ANR	8845539	PrimaryExpression	0		8845430	1					
ANR	8845540	ExpressionStatement	s -> dsp . clear_block ( block )	33:4:550:575	8845430	12	True				
ANR	8845541	CallExpression	s -> dsp . clear_block ( block )		8845430	0					
ANR	8845542	Callee	s -> dsp . clear_block		8845430	0					
ANR	8845543	MemberAccess	s -> dsp . clear_block		8845430	0					
ANR	8845544	PtrMemberAccess	s -> dsp		8845430	0					
ANR	8845545	Identifier	s		8845430	0					
ANR	8845546	Identifier	dsp		8845430	1					
ANR	8845547	Identifier	clear_block		8845430	1					
ANR	8845548	ArgumentList	block		8845430	1					
ANR	8845549	Argument	block		8845430	0					
ANR	8845550	Identifier	block		8845430	0					
ANR	8845551	ExpressionStatement	mquant = ( mquant < 1 ) ? 0 : ( ( mquant > 31 ) ? 31 : mquant )	39:4:636:693	8845430	13	True				
ANR	8845552	AssignmentExpression	mquant = ( mquant < 1 ) ? 0 : ( ( mquant > 31 ) ? 31 : mquant )		8845430	0		=			
ANR	8845553	Identifier	mquant		8845430	0					
ANR	8845554	ConditionalExpression	( mquant < 1 ) ? 0 : ( ( mquant > 31 ) ? 31 : mquant )		8845430	1					
ANR	8845555	Condition	mquant < 1		8845430	0					
ANR	8845556	RelationalExpression	mquant < 1		8845430	0		<			
ANR	8845557	Identifier	mquant		8845430	0					
ANR	8845558	PrimaryExpression	1		8845430	1					
ANR	8845559	PrimaryExpression	0		8845430	1					
ANR	8845560	ConditionalExpression	( mquant > 31 ) ? 31 : mquant		8845430	2					
ANR	8845561	Condition	mquant > 31		8845430	0					
ANR	8845562	RelationalExpression	mquant > 31		8845430	0		>			
ANR	8845563	Identifier	mquant		8845430	0					
ANR	8845564	PrimaryExpression	31		8845430	1					
ANR	8845565	PrimaryExpression	31		8845430	1					
ANR	8845566	Identifier	mquant		8845430	2					
ANR	8845567	ExpressionStatement	s -> y_dc_scale = s -> y_dc_scale_table [ mquant ]	45:4:749:792	8845430	14	True				
ANR	8845568	AssignmentExpression	s -> y_dc_scale = s -> y_dc_scale_table [ mquant ]		8845430	0		=			
ANR	8845569	PtrMemberAccess	s -> y_dc_scale		8845430	0					
ANR	8845570	Identifier	s		8845430	0					
ANR	8845571	Identifier	y_dc_scale		8845430	1					
ANR	8845572	ArrayIndexing	s -> y_dc_scale_table [ mquant ]		8845430	1					
ANR	8845573	PtrMemberAccess	s -> y_dc_scale_table		8845430	0					
ANR	8845574	Identifier	s		8845430	0					
ANR	8845575	Identifier	y_dc_scale_table		8845430	1					
ANR	8845576	Identifier	mquant		8845430	1					
ANR	8845577	ExpressionStatement	s -> c_dc_scale = s -> c_dc_scale_table [ mquant ]	47:4:799:842	8845430	15	True				
ANR	8845578	AssignmentExpression	s -> c_dc_scale = s -> c_dc_scale_table [ mquant ]		8845430	0		=			
ANR	8845579	PtrMemberAccess	s -> c_dc_scale		8845430	0					
ANR	8845580	Identifier	s		8845430	0					
ANR	8845581	Identifier	c_dc_scale		8845430	1					
ANR	8845582	ArrayIndexing	s -> c_dc_scale_table [ mquant ]		8845430	1					
ANR	8845583	PtrMemberAccess	s -> c_dc_scale_table		8845430	0					
ANR	8845584	Identifier	s		8845430	0					
ANR	8845585	Identifier	c_dc_scale_table		8845430	1					
ANR	8845586	Identifier	mquant		8845430	1					
ANR	8845587	IfStatement	if ( n < 4 )		8845430	16					
ANR	8845588	Condition	n < 4	53:8:886:890	8845430	0	True				
ANR	8845589	RelationalExpression	n < 4		8845430	0		<			
ANR	8845590	Identifier	n		8845430	0					
ANR	8845591	PrimaryExpression	4		8845430	1					
ANR	8845592	CompoundStatement		49:15:743:743	8845430	1					
ANR	8845593	ExpressionStatement	"dcdiff = get_vlc2 ( & s -> gb , ff_msmp4_dc_luma_vlc [ s -> dc_table_index ] . table , DC_VLC_BITS , 3 )"	55:8:904:992	8845430	0	True				
ANR	8845594	AssignmentExpression	"dcdiff = get_vlc2 ( & s -> gb , ff_msmp4_dc_luma_vlc [ s -> dc_table_index ] . table , DC_VLC_BITS , 3 )"		8845430	0		=			
ANR	8845595	Identifier	dcdiff		8845430	0					
ANR	8845596	CallExpression	"get_vlc2 ( & s -> gb , ff_msmp4_dc_luma_vlc [ s -> dc_table_index ] . table , DC_VLC_BITS , 3 )"		8845430	1					
ANR	8845597	Callee	get_vlc2		8845430	0					
ANR	8845598	Identifier	get_vlc2		8845430	0					
ANR	8845599	ArgumentList	& s -> gb		8845430	1					
ANR	8845600	Argument	& s -> gb		8845430	0					
ANR	8845601	UnaryOperationExpression	& s -> gb		8845430	0					
ANR	8845602	UnaryOperator	&		8845430	0					
ANR	8845603	PtrMemberAccess	s -> gb		8845430	1					
ANR	8845604	Identifier	s		8845430	0					
ANR	8845605	Identifier	gb		8845430	1					
ANR	8845606	Argument	ff_msmp4_dc_luma_vlc [ s -> dc_table_index ] . table		8845430	1					
ANR	8845607	MemberAccess	ff_msmp4_dc_luma_vlc [ s -> dc_table_index ] . table		8845430	0					
ANR	8845608	ArrayIndexing	ff_msmp4_dc_luma_vlc [ s -> dc_table_index ]		8845430	0					
ANR	8845609	Identifier	ff_msmp4_dc_luma_vlc		8845430	0					
ANR	8845610	PtrMemberAccess	s -> dc_table_index		8845430	1					
ANR	8845611	Identifier	s		8845430	0					
ANR	8845612	Identifier	dc_table_index		8845430	1					
ANR	8845613	Identifier	table		8845430	1					
ANR	8845614	Argument	DC_VLC_BITS		8845430	2					
ANR	8845615	Identifier	DC_VLC_BITS		8845430	0					
ANR	8845616	Argument	3		8845430	3					
ANR	8845617	PrimaryExpression	3		8845430	0					
ANR	8845618	ElseStatement	else		8845430	0					
ANR	8845619	CompoundStatement		53:11:856:856	8845430	0					
ANR	8845620	ExpressionStatement	"dcdiff = get_vlc2 ( & s -> gb , ff_msmp4_dc_chroma_vlc [ s -> dc_table_index ] . table , DC_VLC_BITS , 3 )"	59:8:1017:1107	8845430	0	True				
ANR	8845621	AssignmentExpression	"dcdiff = get_vlc2 ( & s -> gb , ff_msmp4_dc_chroma_vlc [ s -> dc_table_index ] . table , DC_VLC_BITS , 3 )"		8845430	0		=			
ANR	8845622	Identifier	dcdiff		8845430	0					
ANR	8845623	CallExpression	"get_vlc2 ( & s -> gb , ff_msmp4_dc_chroma_vlc [ s -> dc_table_index ] . table , DC_VLC_BITS , 3 )"		8845430	1					
ANR	8845624	Callee	get_vlc2		8845430	0					
ANR	8845625	Identifier	get_vlc2		8845430	0					
ANR	8845626	ArgumentList	& s -> gb		8845430	1					
ANR	8845627	Argument	& s -> gb		8845430	0					
ANR	8845628	UnaryOperationExpression	& s -> gb		8845430	0					
ANR	8845629	UnaryOperator	&		8845430	0					
ANR	8845630	PtrMemberAccess	s -> gb		8845430	1					
ANR	8845631	Identifier	s		8845430	0					
ANR	8845632	Identifier	gb		8845430	1					
ANR	8845633	Argument	ff_msmp4_dc_chroma_vlc [ s -> dc_table_index ] . table		8845430	1					
ANR	8845634	MemberAccess	ff_msmp4_dc_chroma_vlc [ s -> dc_table_index ] . table		8845430	0					
ANR	8845635	ArrayIndexing	ff_msmp4_dc_chroma_vlc [ s -> dc_table_index ]		8845430	0					
ANR	8845636	Identifier	ff_msmp4_dc_chroma_vlc		8845430	0					
ANR	8845637	PtrMemberAccess	s -> dc_table_index		8845430	1					
ANR	8845638	Identifier	s		8845430	0					
ANR	8845639	Identifier	dc_table_index		8845430	1					
ANR	8845640	Identifier	table		8845430	1					
ANR	8845641	Argument	DC_VLC_BITS		8845430	2					
ANR	8845642	Identifier	DC_VLC_BITS		8845430	0					
ANR	8845643	Argument	3		8845430	3					
ANR	8845644	PrimaryExpression	3		8845430	0					
ANR	8845645	IfStatement	if ( dcdiff < 0 )		8845430	17					
ANR	8845646	Condition	dcdiff < 0	63:8:1125:1134	8845430	0	True				
ANR	8845647	RelationalExpression	dcdiff < 0		8845430	0		<			
ANR	8845648	Identifier	dcdiff		8845430	0					
ANR	8845649	PrimaryExpression	0		8845430	1					
ANR	8845650	CompoundStatement		59:20:987:987	8845430	1					
ANR	8845651	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_ERROR , ""Illegal DC VLC\\n"" )"	65:8:1148:1198	8845430	0	True				
ANR	8845652	CallExpression	"av_log ( s -> avctx , AV_LOG_ERROR , ""Illegal DC VLC\\n"" )"		8845430	0					
ANR	8845653	Callee	av_log		8845430	0					
ANR	8845654	Identifier	av_log		8845430	0					
ANR	8845655	ArgumentList	s -> avctx		8845430	1					
ANR	8845656	Argument	s -> avctx		8845430	0					
ANR	8845657	PtrMemberAccess	s -> avctx		8845430	0					
ANR	8845658	Identifier	s		8845430	0					
ANR	8845659	Identifier	avctx		8845430	1					
ANR	8845660	Argument	AV_LOG_ERROR		8845430	1					
ANR	8845661	Identifier	AV_LOG_ERROR		8845430	0					
ANR	8845662	Argument	"""Illegal DC VLC\\n"""		8845430	2					
ANR	8845663	PrimaryExpression	"""Illegal DC VLC\\n"""		8845430	0					
ANR	8845664	ReturnStatement	return - 1 ;	67:8:1209:1218	8845430	1	True				
ANR	8845665	UnaryOperationExpression	- 1		8845430	0					
ANR	8845666	UnaryOperator	-		8845430	0					
ANR	8845667	PrimaryExpression	1		8845430	1					
ANR	8845668	IfStatement	if ( dcdiff )		8845430	18					
ANR	8845669	Condition	dcdiff	71:8:1236:1241	8845430	0	True				
ANR	8845670	Identifier	dcdiff		8845430	0					
ANR	8845671	CompoundStatement		67:16:1094:1094	8845430	1					
ANR	8845672	IfStatement	if ( dcdiff == 119 )		8845430	0					
ANR	8845673	Condition	dcdiff == 119	73:12:1259:1271	8845430	0	True				
ANR	8845674	EqualityExpression	dcdiff == 119		8845430	0		==			
ANR	8845675	Identifier	dcdiff		8845430	0					
ANR	8845676	PrimaryExpression	119		8845430	1					
ANR	8845677	CompoundStatement		69:49:1146:1146	8845430	1					
ANR	8845678	IfStatement	if ( mquant == 1 )		8845430	0					
ANR	8845679	Condition	mquant == 1	77:16:1349:1359	8845430	0	True				
ANR	8845680	EqualityExpression	mquant == 1		8845430	0		==			
ANR	8845681	Identifier	mquant		8845430	0					
ANR	8845682	PrimaryExpression	1		8845430	1					
ANR	8845683	ExpressionStatement	"dcdiff = get_bits ( gb , 10 )"	77:34:1367:1392	8845430	1	True				
ANR	8845684	AssignmentExpression	"dcdiff = get_bits ( gb , 10 )"		8845430	0		=			
ANR	8845685	Identifier	dcdiff		8845430	0					
ANR	8845686	CallExpression	"get_bits ( gb , 10 )"		8845430	1					
ANR	8845687	Callee	get_bits		8845430	0					
ANR	8845688	Identifier	get_bits		8845430	0					
ANR	8845689	ArgumentList	gb		8845430	1					
ANR	8845690	Argument	gb		8845430	0					
ANR	8845691	Identifier	gb		8845430	0					
ANR	8845692	Argument	10		8845430	1					
ANR	8845693	PrimaryExpression	10		8845430	0					
ANR	8845694	ElseStatement	else		8845430	0					
ANR	8845695	IfStatement	if ( mquant == 2 )		8845430	0					
ANR	8845696	Condition	mquant == 2	79:21:1416:1426	8845430	0	True				
ANR	8845697	EqualityExpression	mquant == 2		8845430	0		==			
ANR	8845698	Identifier	mquant		8845430	0					
ANR	8845699	PrimaryExpression	2		8845430	1					
ANR	8845700	ExpressionStatement	"dcdiff = get_bits ( gb , 9 )"	79:34:1429:1453	8845430	1	True				
ANR	8845701	AssignmentExpression	"dcdiff = get_bits ( gb , 9 )"		8845430	0		=			
ANR	8845702	Identifier	dcdiff		8845430	0					
ANR	8845703	CallExpression	"get_bits ( gb , 9 )"		8845430	1					
ANR	8845704	Callee	get_bits		8845430	0					
ANR	8845705	Identifier	get_bits		8845430	0					
ANR	8845706	ArgumentList	gb		8845430	1					
ANR	8845707	Argument	gb		8845430	0					
ANR	8845708	Identifier	gb		8845430	0					
ANR	8845709	Argument	9		8845430	1					
ANR	8845710	PrimaryExpression	9		8845430	0					
ANR	8845711	ElseStatement	else		8845430	0					
ANR	8845712	ExpressionStatement	"dcdiff = get_bits ( gb , 8 )"	81:34:1490:1514	8845430	0	True				
ANR	8845713	AssignmentExpression	"dcdiff = get_bits ( gb , 8 )"		8845430	0		=			
ANR	8845714	Identifier	dcdiff		8845430	0					
ANR	8845715	CallExpression	"get_bits ( gb , 8 )"		8845430	1					
ANR	8845716	Callee	get_bits		8845430	0					
ANR	8845717	Identifier	get_bits		8845430	0					
ANR	8845718	ArgumentList	gb		8845430	1					
ANR	8845719	Argument	gb		8845430	0					
ANR	8845720	Identifier	gb		8845430	0					
ANR	8845721	Argument	8		8845430	1					
ANR	8845722	PrimaryExpression	8		8845430	0					
ANR	8845723	ElseStatement	else		8845430	0					
ANR	8845724	CompoundStatement		79:15:1382:1382	8845430	0					
ANR	8845725	IfStatement	if ( mquant == 1 )		8845430	0					
ANR	8845726	Condition	mquant == 1	85:16:1551:1561	8845430	0	True				
ANR	8845727	EqualityExpression	mquant == 1		8845430	0		==			
ANR	8845728	Identifier	mquant		8845430	0					
ANR	8845729	PrimaryExpression	1		8845430	1					
ANR	8845730	ExpressionStatement	"dcdiff = ( dcdiff << 2 ) + get_bits ( gb , 2 ) - 3"	87:16:1581:1625	8845430	1	True				
ANR	8845731	AssignmentExpression	"dcdiff = ( dcdiff << 2 ) + get_bits ( gb , 2 ) - 3"		8845430	0		=			
ANR	8845732	Identifier	dcdiff		8845430	0					
ANR	8845733	AdditiveExpression	"( dcdiff << 2 ) + get_bits ( gb , 2 ) - 3"		8845430	1		+			
ANR	8845734	ShiftExpression	dcdiff << 2		8845430	0		<<			
ANR	8845735	Identifier	dcdiff		8845430	0					
ANR	8845736	PrimaryExpression	2		8845430	1					
ANR	8845737	AdditiveExpression	"get_bits ( gb , 2 ) - 3"		8845430	1		-			
ANR	8845738	CallExpression	"get_bits ( gb , 2 )"		8845430	0					
ANR	8845739	Callee	get_bits		8845430	0					
ANR	8845740	Identifier	get_bits		8845430	0					
ANR	8845741	ArgumentList	gb		8845430	1					
ANR	8845742	Argument	gb		8845430	0					
ANR	8845743	Identifier	gb		8845430	0					
ANR	8845744	Argument	2		8845430	1					
ANR	8845745	PrimaryExpression	2		8845430	0					
ANR	8845746	PrimaryExpression	3		8845430	1					
ANR	8845747	ElseStatement	else		8845430	0					
ANR	8845748	IfStatement	if ( mquant == 2 )		8845430	0					
ANR	8845749	Condition	mquant == 2	89:21:1649:1659	8845430	0	True				
ANR	8845750	EqualityExpression	mquant == 2		8845430	0		==			
ANR	8845751	Identifier	mquant		8845430	0					
ANR	8845752	PrimaryExpression	2		8845430	1					
ANR	8845753	ExpressionStatement	dcdiff = ( dcdiff << 1 ) + get_bits1 ( gb ) - 1	91:16:1679:1723	8845430	1	True				
ANR	8845754	AssignmentExpression	dcdiff = ( dcdiff << 1 ) + get_bits1 ( gb ) - 1		8845430	0		=			
ANR	8845755	Identifier	dcdiff		8845430	0					
ANR	8845756	AdditiveExpression	( dcdiff << 1 ) + get_bits1 ( gb ) - 1		8845430	1		+			
ANR	8845757	ShiftExpression	dcdiff << 1		8845430	0		<<			
ANR	8845758	Identifier	dcdiff		8845430	0					
ANR	8845759	PrimaryExpression	1		8845430	1					
ANR	8845760	AdditiveExpression	get_bits1 ( gb ) - 1		8845430	1		-			
ANR	8845761	CallExpression	get_bits1 ( gb )		8845430	0					
ANR	8845762	Callee	get_bits1		8845430	0					
ANR	8845763	Identifier	get_bits1		8845430	0					
ANR	8845764	ArgumentList	gb		8845430	1					
ANR	8845765	Argument	gb		8845430	0					
ANR	8845766	Identifier	gb		8845430	0					
ANR	8845767	PrimaryExpression	1		8845430	1					
ANR	8845768	IfStatement	if ( get_bits1 ( gb ) )		8845430	1					
ANR	8845769	Condition	get_bits1 ( gb )	95:12:1749:1761	8845430	0	True				
ANR	8845770	CallExpression	get_bits1 ( gb )		8845430	0					
ANR	8845771	Callee	get_bits1		8845430	0					
ANR	8845772	Identifier	get_bits1		8845430	0					
ANR	8845773	ArgumentList	gb		8845430	1					
ANR	8845774	Argument	gb		8845430	0					
ANR	8845775	Identifier	gb		8845430	0					
ANR	8845776	ExpressionStatement	dcdiff = - dcdiff	97:12:1777:1793	8845430	1	True				
ANR	8845777	AssignmentExpression	dcdiff = - dcdiff		8845430	0		=			
ANR	8845778	Identifier	dcdiff		8845430	0					
ANR	8845779	UnaryOperationExpression	- dcdiff		8845430	1					
ANR	8845780	UnaryOperator	-		8845430	0					
ANR	8845781	Identifier	dcdiff		8845430	1					
ANR	8845782	ExpressionStatement	"dcdiff += vc1_pred_dc ( & v -> s , v -> overlap , mquant , n , a_avail , c_avail , & dc_val , & dc_pred_dir )"	105:4:1831:1923	8845430	19	True				
ANR	8845783	AssignmentExpression	"dcdiff += vc1_pred_dc ( & v -> s , v -> overlap , mquant , n , a_avail , c_avail , & dc_val , & dc_pred_dir )"		8845430	0		+=			
ANR	8845784	Identifier	dcdiff		8845430	0					
ANR	8845785	CallExpression	"vc1_pred_dc ( & v -> s , v -> overlap , mquant , n , a_avail , c_avail , & dc_val , & dc_pred_dir )"		8845430	1					
ANR	8845786	Callee	vc1_pred_dc		8845430	0					
ANR	8845787	Identifier	vc1_pred_dc		8845430	0					
ANR	8845788	ArgumentList	& v -> s		8845430	1					
ANR	8845789	Argument	& v -> s		8845430	0					
ANR	8845790	UnaryOperationExpression	& v -> s		8845430	0					
ANR	8845791	UnaryOperator	&		8845430	0					
ANR	8845792	PtrMemberAccess	v -> s		8845430	1					
ANR	8845793	Identifier	v		8845430	0					
ANR	8845794	Identifier	s		8845430	1					
ANR	8845795	Argument	v -> overlap		8845430	1					
ANR	8845796	PtrMemberAccess	v -> overlap		8845430	0					
ANR	8845797	Identifier	v		8845430	0					
ANR	8845798	Identifier	overlap		8845430	1					
ANR	8845799	Argument	mquant		8845430	2					
ANR	8845800	Identifier	mquant		8845430	0					
ANR	8845801	Argument	n		8845430	3					
ANR	8845802	Identifier	n		8845430	0					
ANR	8845803	Argument	a_avail		8845430	4					
ANR	8845804	Identifier	a_avail		8845430	0					
ANR	8845805	Argument	c_avail		8845430	5					
ANR	8845806	Identifier	c_avail		8845430	0					
ANR	8845807	Argument	& dc_val		8845430	6					
ANR	8845808	UnaryOperationExpression	& dc_val		8845430	0					
ANR	8845809	UnaryOperator	&		8845430	0					
ANR	8845810	Identifier	dc_val		8845430	1					
ANR	8845811	Argument	& dc_pred_dir		8845430	7					
ANR	8845812	UnaryOperationExpression	& dc_pred_dir		8845430	0					
ANR	8845813	UnaryOperator	&		8845430	0					
ANR	8845814	Identifier	dc_pred_dir		8845430	1					
ANR	8845815	ExpressionStatement	* dc_val = dcdiff	107:4:1930:1946	8845430	20	True				
ANR	8845816	AssignmentExpression	* dc_val = dcdiff		8845430	0		=			
ANR	8845817	UnaryOperationExpression	* dc_val		8845430	0					
ANR	8845818	UnaryOperator	*		8845430	0					
ANR	8845819	Identifier	dc_val		8845430	1					
ANR	8845820	Identifier	dcdiff		8845430	1					
ANR	8845821	IfStatement	if ( n < 4 )		8845430	21					
ANR	8845822	Condition	n < 4	115:8:2022:2026	8845430	0	True				
ANR	8845823	RelationalExpression	n < 4		8845430	0		<			
ANR	8845824	Identifier	n		8845430	0					
ANR	8845825	PrimaryExpression	4		8845430	1					
ANR	8845826	CompoundStatement		111:15:1879:1879	8845430	1					
ANR	8845827	ExpressionStatement	block [ 0 ] = dcdiff * s -> y_dc_scale	117:8:2040:2073	8845430	0	True				
ANR	8845828	AssignmentExpression	block [ 0 ] = dcdiff * s -> y_dc_scale		8845430	0		=			
ANR	8845829	ArrayIndexing	block [ 0 ]		8845430	0					
ANR	8845830	Identifier	block		8845430	0					
ANR	8845831	PrimaryExpression	0		8845430	1					
ANR	8845832	MultiplicativeExpression	dcdiff * s -> y_dc_scale		8845430	1		*			
ANR	8845833	Identifier	dcdiff		8845430	0					
ANR	8845834	PtrMemberAccess	s -> y_dc_scale		8845430	1					
ANR	8845835	Identifier	s		8845430	0					
ANR	8845836	Identifier	y_dc_scale		8845430	1					
ANR	8845837	ElseStatement	else		8845430	0					
ANR	8845838	CompoundStatement		115:11:1937:1937	8845430	0					
ANR	8845839	ExpressionStatement	block [ 0 ] = dcdiff * s -> c_dc_scale	121:8:2098:2131	8845430	0	True				
ANR	8845840	AssignmentExpression	block [ 0 ] = dcdiff * s -> c_dc_scale		8845430	0		=			
ANR	8845841	ArrayIndexing	block [ 0 ]		8845430	0					
ANR	8845842	Identifier	block		8845430	0					
ANR	8845843	PrimaryExpression	0		8845430	1					
ANR	8845844	MultiplicativeExpression	dcdiff * s -> c_dc_scale		8845430	1		*			
ANR	8845845	Identifier	dcdiff		8845430	0					
ANR	8845846	PtrMemberAccess	s -> c_dc_scale		8845430	1					
ANR	8845847	Identifier	s		8845430	0					
ANR	8845848	Identifier	c_dc_scale		8845430	1					
ANR	8845849	ExpressionStatement	i = 1	129:4:2166:2171	8845430	22	True				
ANR	8845850	AssignmentExpression	i = 1		8845430	0		=			
ANR	8845851	Identifier	i		8845430	0					
ANR	8845852	PrimaryExpression	1		8845430	1					
ANR	8845853	IfStatement	if ( ! a_avail )		8845430	23					
ANR	8845854	Condition	! a_avail	135:8:2255:2262	8845430	0	True				
ANR	8845855	UnaryOperationExpression	! a_avail		8845430	0					
ANR	8845856	UnaryOperator	!		8845430	0					
ANR	8845857	Identifier	a_avail		8845430	1					
ANR	8845858	ExpressionStatement	dc_pred_dir = 1	135:18:2265:2280	8845430	1	True				
ANR	8845859	AssignmentExpression	dc_pred_dir = 1		8845430	0		=			
ANR	8845860	Identifier	dc_pred_dir		8845430	0					
ANR	8845861	PrimaryExpression	1		8845430	1					
ANR	8845862	IfStatement	if ( ! c_avail )		8845430	24					
ANR	8845863	Condition	! c_avail	137:8:2291:2298	8845430	0	True				
ANR	8845864	UnaryOperationExpression	! c_avail		8845430	0					
ANR	8845865	UnaryOperator	!		8845430	0					
ANR	8845866	Identifier	c_avail		8845430	1					
ANR	8845867	ExpressionStatement	dc_pred_dir = 0	137:18:2301:2316	8845430	1	True				
ANR	8845868	AssignmentExpression	dc_pred_dir = 0		8845430	0		=			
ANR	8845869	Identifier	dc_pred_dir		8845430	0					
ANR	8845870	PrimaryExpression	0		8845430	1					
ANR	8845871	IfStatement	if ( ! a_avail && ! c_avail )		8845430	25					
ANR	8845872	Condition	! a_avail && ! c_avail	139:8:2327:2346	8845430	0	True				
ANR	8845873	AndExpression	! a_avail && ! c_avail		8845430	0		&&			
ANR	8845874	UnaryOperationExpression	! a_avail		8845430	0					
ANR	8845875	UnaryOperator	!		8845430	0					
ANR	8845876	Identifier	a_avail		8845430	1					
ANR	8845877	UnaryOperationExpression	! c_avail		8845430	1					
ANR	8845878	UnaryOperator	!		8845430	0					
ANR	8845879	Identifier	c_avail		8845430	1					
ANR	8845880	ExpressionStatement	use_pred = 0	139:30:2349:2361	8845430	1	True				
ANR	8845881	AssignmentExpression	use_pred = 0		8845430	0		=			
ANR	8845882	Identifier	use_pred		8845430	0					
ANR	8845883	PrimaryExpression	0		8845430	1					
ANR	8845884	ExpressionStatement	ac_val = s -> ac_val [ 0 ] [ 0 ] + s -> block_index [ n ] * 16	141:4:2368:2417	8845430	26	True				
ANR	8845885	AssignmentExpression	ac_val = s -> ac_val [ 0 ] [ 0 ] + s -> block_index [ n ] * 16		8845430	0		=			
ANR	8845886	Identifier	ac_val		8845430	0					
ANR	8845887	AdditiveExpression	s -> ac_val [ 0 ] [ 0 ] + s -> block_index [ n ] * 16		8845430	1		+			
ANR	8845888	ArrayIndexing	s -> ac_val [ 0 ] [ 0 ]		8845430	0					
ANR	8845889	ArrayIndexing	s -> ac_val [ 0 ]		8845430	0					
ANR	8845890	PtrMemberAccess	s -> ac_val		8845430	0					
ANR	8845891	Identifier	s		8845430	0					
ANR	8845892	Identifier	ac_val		8845430	1					
ANR	8845893	PrimaryExpression	0		8845430	1					
ANR	8845894	PrimaryExpression	0		8845430	1					
ANR	8845895	MultiplicativeExpression	s -> block_index [ n ] * 16		8845430	1		*			
ANR	8845896	ArrayIndexing	s -> block_index [ n ]		8845430	0					
ANR	8845897	PtrMemberAccess	s -> block_index		8845430	0					
ANR	8845898	Identifier	s		8845430	0					
ANR	8845899	Identifier	block_index		8845430	1					
ANR	8845900	Identifier	n		8845430	1					
ANR	8845901	PrimaryExpression	16		8845430	1					
ANR	8845902	ExpressionStatement	ac_val2 = ac_val	143:4:2424:2440	8845430	27	True				
ANR	8845903	AssignmentExpression	ac_val2 = ac_val		8845430	0		=			
ANR	8845904	Identifier	ac_val2		8845430	0					
ANR	8845905	Identifier	ac_val		8845430	1					
ANR	8845906	ExpressionStatement	scale = mquant * 2 + v -> halfpq	147:4:2449:2479	8845430	28	True				
ANR	8845907	AssignmentExpression	scale = mquant * 2 + v -> halfpq		8845430	0		=			
ANR	8845908	Identifier	scale		8845430	0					
ANR	8845909	AdditiveExpression	mquant * 2 + v -> halfpq		8845430	1		+			
ANR	8845910	MultiplicativeExpression	mquant * 2		8845430	0		*			
ANR	8845911	Identifier	mquant		8845430	0					
ANR	8845912	PrimaryExpression	2		8845430	1					
ANR	8845913	PtrMemberAccess	v -> halfpq		8845430	1					
ANR	8845914	Identifier	v		8845430	0					
ANR	8845915	Identifier	halfpq		8845430	1					
ANR	8845916	IfStatement	if ( dc_pred_dir )		8845430	29					
ANR	8845917	Condition	dc_pred_dir	151:8:2492:2502	8845430	0	True				
ANR	8845918	Identifier	dc_pred_dir		8845430	0					
ANR	8845919	ExpressionStatement	ac_val -= 16	153:8:2521:2533	8845430	1	True				
ANR	8845920	AssignmentExpression	ac_val -= 16		8845430	0		-=			
ANR	8845921	Identifier	ac_val		8845430	0					
ANR	8845922	PrimaryExpression	16		8845430	1					
ANR	8845923	ElseStatement	else		8845430	0					
ANR	8845924	ExpressionStatement	ac_val -= 16 * s -> block_wrap [ n ]	157:8:2560:2591	8845430	0	True				
ANR	8845925	AssignmentExpression	ac_val -= 16 * s -> block_wrap [ n ]		8845430	0		-=			
ANR	8845926	Identifier	ac_val		8845430	0					
ANR	8845927	MultiplicativeExpression	16 * s -> block_wrap [ n ]		8845430	1		*			
ANR	8845928	PrimaryExpression	16		8845430	0					
ANR	8845929	ArrayIndexing	s -> block_wrap [ n ]		8845430	1					
ANR	8845930	PtrMemberAccess	s -> block_wrap		8845430	0					
ANR	8845931	Identifier	s		8845430	0					
ANR	8845932	Identifier	block_wrap		8845430	1					
ANR	8845933	Identifier	n		8845430	1					
ANR	8845934	ExpressionStatement	q1 = s -> current_picture . f . qscale_table [ mb_pos ]	161:4:2600:2646	8845430	30	True				
ANR	8845935	AssignmentExpression	q1 = s -> current_picture . f . qscale_table [ mb_pos ]		8845430	0		=			
ANR	8845936	Identifier	q1		8845430	0					
ANR	8845937	ArrayIndexing	s -> current_picture . f . qscale_table [ mb_pos ]		8845430	1					
ANR	8845938	MemberAccess	s -> current_picture . f . qscale_table		8845430	0					
ANR	8845939	MemberAccess	s -> current_picture . f		8845430	0					
ANR	8845940	PtrMemberAccess	s -> current_picture		8845430	0					
ANR	8845941	Identifier	s		8845430	0					
ANR	8845942	Identifier	current_picture		8845430	1					
ANR	8845943	Identifier	f		8845430	1					
ANR	8845944	Identifier	qscale_table		8845430	1					
ANR	8845945	Identifier	mb_pos		8845430	1					
ANR	8845946	IfStatement	if ( dc_pred_dir && c_avail && mb_pos )		8845430	31					
ANR	8845947	Condition	dc_pred_dir && c_avail && mb_pos	163:8:2657:2688	8845430	0	True				
ANR	8845948	AndExpression	dc_pred_dir && c_avail && mb_pos		8845430	0		&&			
ANR	8845949	Identifier	dc_pred_dir		8845430	0					
ANR	8845950	AndExpression	c_avail && mb_pos		8845430	1		&&			
ANR	8845951	Identifier	c_avail		8845430	0					
ANR	8845952	Identifier	mb_pos		8845430	1					
ANR	8845953	ExpressionStatement	q2 = s -> current_picture . f . qscale_table [ mb_pos - 1 ]	165:8:2700:2750	8845430	1	True				
ANR	8845954	AssignmentExpression	q2 = s -> current_picture . f . qscale_table [ mb_pos - 1 ]		8845430	0		=			
ANR	8845955	Identifier	q2		8845430	0					
ANR	8845956	ArrayIndexing	s -> current_picture . f . qscale_table [ mb_pos - 1 ]		8845430	1					
ANR	8845957	MemberAccess	s -> current_picture . f . qscale_table		8845430	0					
ANR	8845958	MemberAccess	s -> current_picture . f		8845430	0					
ANR	8845959	PtrMemberAccess	s -> current_picture		8845430	0					
ANR	8845960	Identifier	s		8845430	0					
ANR	8845961	Identifier	current_picture		8845430	1					
ANR	8845962	Identifier	f		8845430	1					
ANR	8845963	Identifier	qscale_table		8845430	1					
ANR	8845964	AdditiveExpression	mb_pos - 1		8845430	1		-			
ANR	8845965	Identifier	mb_pos		8845430	0					
ANR	8845966	PrimaryExpression	1		8845430	1					
ANR	8845967	IfStatement	if ( ! dc_pred_dir && a_avail && mb_pos >= s -> mb_stride )		8845430	32					
ANR	8845968	Condition	! dc_pred_dir && a_avail && mb_pos >= s -> mb_stride	167:8:2761:2809	8845430	0	True				
ANR	8845969	AndExpression	! dc_pred_dir && a_avail && mb_pos >= s -> mb_stride		8845430	0		&&			
ANR	8845970	UnaryOperationExpression	! dc_pred_dir		8845430	0					
ANR	8845971	UnaryOperator	!		8845430	0					
ANR	8845972	Identifier	dc_pred_dir		8845430	1					
ANR	8845973	AndExpression	a_avail && mb_pos >= s -> mb_stride		8845430	1		&&			
ANR	8845974	Identifier	a_avail		8845430	0					
ANR	8845975	RelationalExpression	mb_pos >= s -> mb_stride		8845430	1		>=			
ANR	8845976	Identifier	mb_pos		8845430	0					
ANR	8845977	PtrMemberAccess	s -> mb_stride		8845430	1					
ANR	8845978	Identifier	s		8845430	0					
ANR	8845979	Identifier	mb_stride		8845430	1					
ANR	8845980	ExpressionStatement	q2 = s -> current_picture . f . qscale_table [ mb_pos - s -> mb_stride ]	169:8:2821:2882	8845430	1	True				
ANR	8845981	AssignmentExpression	q2 = s -> current_picture . f . qscale_table [ mb_pos - s -> mb_stride ]		8845430	0		=			
ANR	8845982	Identifier	q2		8845430	0					
ANR	8845983	ArrayIndexing	s -> current_picture . f . qscale_table [ mb_pos - s -> mb_stride ]		8845430	1					
ANR	8845984	MemberAccess	s -> current_picture . f . qscale_table		8845430	0					
ANR	8845985	MemberAccess	s -> current_picture . f		8845430	0					
ANR	8845986	PtrMemberAccess	s -> current_picture		8845430	0					
ANR	8845987	Identifier	s		8845430	0					
ANR	8845988	Identifier	current_picture		8845430	1					
ANR	8845989	Identifier	f		8845430	1					
ANR	8845990	Identifier	qscale_table		8845430	1					
ANR	8845991	AdditiveExpression	mb_pos - s -> mb_stride		8845430	1		-			
ANR	8845992	Identifier	mb_pos		8845430	0					
ANR	8845993	PtrMemberAccess	s -> mb_stride		8845430	1					
ANR	8845994	Identifier	s		8845430	0					
ANR	8845995	Identifier	mb_stride		8845430	1					
ANR	8845996	IfStatement	if ( dc_pred_dir && n == 1 )		8845430	33					
ANR	8845997	Condition	dc_pred_dir && n == 1	171:9:2894:2914	8845430	0	True				
ANR	8845998	AndExpression	dc_pred_dir && n == 1		8845430	0		&&			
ANR	8845999	Identifier	dc_pred_dir		8845430	0					
ANR	8846000	EqualityExpression	n == 1		8845430	1		==			
ANR	8846001	Identifier	n		8845430	0					
ANR	8846002	PrimaryExpression	1		8845430	1					
ANR	8846003	ExpressionStatement	q2 = q1	173:8:2926:2933	8845430	1	True				
ANR	8846004	AssignmentExpression	q2 = q1		8845430	0		=			
ANR	8846005	Identifier	q2		8845430	0					
ANR	8846006	Identifier	q1		8845430	1					
ANR	8846007	IfStatement	if ( ! dc_pred_dir && n == 2 )		8845430	34					
ANR	8846008	Condition	! dc_pred_dir && n == 2	175:8:2944:2965	8845430	0	True				
ANR	8846009	AndExpression	! dc_pred_dir && n == 2		8845430	0		&&			
ANR	8846010	UnaryOperationExpression	! dc_pred_dir		8845430	0					
ANR	8846011	UnaryOperator	!		8845430	0					
ANR	8846012	Identifier	dc_pred_dir		8845430	1					
ANR	8846013	EqualityExpression	n == 2		8845430	1		==			
ANR	8846014	Identifier	n		8845430	0					
ANR	8846015	PrimaryExpression	2		8845430	1					
ANR	8846016	ExpressionStatement	q2 = q1	177:8:2977:2984	8845430	1	True				
ANR	8846017	AssignmentExpression	q2 = q1		8845430	0		=			
ANR	8846018	Identifier	q2		8845430	0					
ANR	8846019	Identifier	q1		8845430	1					
ANR	8846020	IfStatement	if ( n == 3 )		8845430	35					
ANR	8846021	Condition	n == 3	179:8:2995:3000	8845430	0	True				
ANR	8846022	EqualityExpression	n == 3		8845430	0		==			
ANR	8846023	Identifier	n		8845430	0					
ANR	8846024	PrimaryExpression	3		8845430	1					
ANR	8846025	ExpressionStatement	q2 = q1	179:16:3003:3010	8845430	1	True				
ANR	8846026	AssignmentExpression	q2 = q1		8845430	0		=			
ANR	8846027	Identifier	q2		8845430	0					
ANR	8846028	Identifier	q1		8845430	1					
ANR	8846029	IfStatement	if ( coded )		8845430	36					
ANR	8846030	Condition	coded	183:8:3023:3027	8845430	0	True				
ANR	8846031	Identifier	coded		8845430	0					
ANR	8846032	CompoundStatement		183:8:2927:2932	8845430	1					
ANR	8846033	IdentifierDeclStatement	"int last = 0 , skip , value ;"	185:8:3041:3066	8845430	0	True				
ANR	8846034	IdentifierDecl	last = 0		8845430	0					
ANR	8846035	IdentifierDeclType	int		8845430	0					
ANR	8846036	Identifier	last		8845430	1					
ANR	8846037	AssignmentExpression	last = 0		8845430	2		=			
ANR	8846038	Identifier	last		8845430	0					
ANR	8846039	PrimaryExpression	0		8845430	1					
ANR	8846040	IdentifierDecl	skip		8845430	1					
ANR	8846041	IdentifierDeclType	int		8845430	0					
ANR	8846042	Identifier	skip		8845430	1					
ANR	8846043	IdentifierDecl	value		8845430	2					
ANR	8846044	IdentifierDeclType	int		8845430	0					
ANR	8846045	Identifier	value		8845430	1					
ANR	8846046	IdentifierDeclStatement	int k ;	187:8:3077:3082	8845430	1	True				
ANR	8846047	IdentifierDecl	k		8845430	0					
ANR	8846048	IdentifierDeclType	int		8845430	0					
ANR	8846049	Identifier	k		8845430	1					
ANR	8846050	WhileStatement	while ( ! last )		8845430	2					
ANR	8846051	Condition	! last	191:15:3102:3106	8845430	0	True				
ANR	8846052	UnaryOperationExpression	! last		8845430	0					
ANR	8846053	UnaryOperator	!		8845430	0					
ANR	8846054	Identifier	last		8845430	1					
ANR	8846055	CompoundStatement		187:22:2959:2959	8845430	1					
ANR	8846056	ExpressionStatement	"vc1_decode_ac_coeff ( v , & last , & skip , & value , codingset )"	193:12:3124:3179	8845430	0	True				
ANR	8846057	CallExpression	"vc1_decode_ac_coeff ( v , & last , & skip , & value , codingset )"		8845430	0					
ANR	8846058	Callee	vc1_decode_ac_coeff		8845430	0					
ANR	8846059	Identifier	vc1_decode_ac_coeff		8845430	0					
ANR	8846060	ArgumentList	v		8845430	1					
ANR	8846061	Argument	v		8845430	0					
ANR	8846062	Identifier	v		8845430	0					
ANR	8846063	Argument	& last		8845430	1					
ANR	8846064	UnaryOperationExpression	& last		8845430	0					
ANR	8846065	UnaryOperator	&		8845430	0					
ANR	8846066	Identifier	last		8845430	1					
ANR	8846067	Argument	& skip		8845430	2					
ANR	8846068	UnaryOperationExpression	& skip		8845430	0					
ANR	8846069	UnaryOperator	&		8845430	0					
ANR	8846070	Identifier	skip		8845430	1					
ANR	8846071	Argument	& value		8845430	3					
ANR	8846072	UnaryOperationExpression	& value		8845430	0					
ANR	8846073	UnaryOperator	&		8845430	0					
ANR	8846074	Identifier	value		8845430	1					
ANR	8846075	Argument	codingset		8845430	4					
ANR	8846076	Identifier	codingset		8845430	0					
ANR	8846077	ExpressionStatement	i += skip	195:12:3194:3203	8845430	1	True				
ANR	8846078	AssignmentExpression	i += skip		8845430	0		+=			
ANR	8846079	Identifier	i		8845430	0					
ANR	8846080	Identifier	skip		8845430	1					
ANR	8846081	IfStatement	if ( i > 63 )		8845430	2					
ANR	8846082	Condition	i > 63	197:16:3222:3227	8845430	0	True				
ANR	8846083	RelationalExpression	i > 63		8845430	0		>			
ANR	8846084	Identifier	i		8845430	0					
ANR	8846085	PrimaryExpression	63		8845430	1					
ANR	8846086	BreakStatement	break ;	199:16:3247:3252	8845430	1	True				
ANR	8846087	IfStatement	if ( v -> fcm == PROGRESSIVE )		8845430	3					
ANR	8846088	Condition	v -> fcm == PROGRESSIVE	201:16:3271:3291	8845430	0	True				
ANR	8846089	EqualityExpression	v -> fcm == PROGRESSIVE		8845430	0		==			
ANR	8846090	PtrMemberAccess	v -> fcm		8845430	0					
ANR	8846091	Identifier	v		8845430	0					
ANR	8846092	Identifier	fcm		8845430	1					
ANR	8846093	Identifier	PROGRESSIVE		8845430	1					
ANR	8846094	ExpressionStatement	block [ v -> zz_8x8 [ 0 ] [ i ++ ] ] = value	203:16:3311:3343	8845430	1	True				
ANR	8846095	AssignmentExpression	block [ v -> zz_8x8 [ 0 ] [ i ++ ] ] = value		8845430	0		=			
ANR	8846096	ArrayIndexing	block [ v -> zz_8x8 [ 0 ] [ i ++ ] ]		8845430	0					
ANR	8846097	Identifier	block		8845430	0					
ANR	8846098	ArrayIndexing	v -> zz_8x8 [ 0 ] [ i ++ ]		8845430	1					
ANR	8846099	ArrayIndexing	v -> zz_8x8 [ 0 ]		8845430	0					
ANR	8846100	PtrMemberAccess	v -> zz_8x8		8845430	0					
ANR	8846101	Identifier	v		8845430	0					
ANR	8846102	Identifier	zz_8x8		8845430	1					
ANR	8846103	PrimaryExpression	0		8845430	1					
ANR	8846104	PostIncDecOperationExpression	i ++		8845430	1					
ANR	8846105	Identifier	i		8845430	0					
ANR	8846106	IncDec	++		8845430	1					
ANR	8846107	Identifier	value		8845430	1					
ANR	8846108	ElseStatement	else		8845430	0					
ANR	8846109	CompoundStatement		201:17:3213:3213	8845430	0					
ANR	8846110	IfStatement	if ( use_pred && ( v -> fcm == ILACE_FRAME ) )		8845430	0					
ANR	8846111	Condition	use_pred && ( v -> fcm == ILACE_FRAME )	207:20:3386:3420	8845430	0	True				
ANR	8846112	AndExpression	use_pred && ( v -> fcm == ILACE_FRAME )		8845430	0		&&			
ANR	8846113	Identifier	use_pred		8845430	0					
ANR	8846114	EqualityExpression	v -> fcm == ILACE_FRAME		8845430	1		==			
ANR	8846115	PtrMemberAccess	v -> fcm		8845430	0					
ANR	8846116	Identifier	v		8845430	0					
ANR	8846117	Identifier	fcm		8845430	1					
ANR	8846118	Identifier	ILACE_FRAME		8845430	1					
ANR	8846119	CompoundStatement		203:57:3273:3273	8845430	1					
ANR	8846120	IfStatement	if ( ! dc_pred_dir )		8845430	0					
ANR	8846121	Condition	! dc_pred_dir	209:24:3450:3461	8845430	0	True				
ANR	8846122	UnaryOperationExpression	! dc_pred_dir		8845430	0					
ANR	8846123	UnaryOperator	!		8845430	0					
ANR	8846124	Identifier	dc_pred_dir		8845430	1					
ANR	8846125	ExpressionStatement	block [ v -> zz_8x8 [ 2 ] [ i ++ ] ] = value	211:24:3496:3528	8845430	1	True				
ANR	8846126	AssignmentExpression	block [ v -> zz_8x8 [ 2 ] [ i ++ ] ] = value		8845430	0		=			
ANR	8846127	ArrayIndexing	block [ v -> zz_8x8 [ 2 ] [ i ++ ] ]		8845430	0					
ANR	8846128	Identifier	block		8845430	0					
ANR	8846129	ArrayIndexing	v -> zz_8x8 [ 2 ] [ i ++ ]		8845430	1					
ANR	8846130	ArrayIndexing	v -> zz_8x8 [ 2 ]		8845430	0					
ANR	8846131	PtrMemberAccess	v -> zz_8x8		8845430	0					
ANR	8846132	Identifier	v		8845430	0					
ANR	8846133	Identifier	zz_8x8		8845430	1					
ANR	8846134	PrimaryExpression	2		8845430	1					
ANR	8846135	PostIncDecOperationExpression	i ++		8845430	1					
ANR	8846136	Identifier	i		8845430	0					
ANR	8846137	IncDec	++		8845430	1					
ANR	8846138	Identifier	value		8845430	1					
ANR	8846139	ElseStatement	else		8845430	0					
ANR	8846140	ExpressionStatement	block [ v -> zz_8x8 [ 3 ] [ i ++ ] ] = value	215:24:3589:3621	8845430	0	True				
ANR	8846141	AssignmentExpression	block [ v -> zz_8x8 [ 3 ] [ i ++ ] ] = value		8845430	0		=			
ANR	8846142	ArrayIndexing	block [ v -> zz_8x8 [ 3 ] [ i ++ ] ]		8845430	0					
ANR	8846143	Identifier	block		8845430	0					
ANR	8846144	ArrayIndexing	v -> zz_8x8 [ 3 ] [ i ++ ]		8845430	1					
ANR	8846145	ArrayIndexing	v -> zz_8x8 [ 3 ]		8845430	0					
ANR	8846146	PtrMemberAccess	v -> zz_8x8		8845430	0					
ANR	8846147	Identifier	v		8845430	0					
ANR	8846148	Identifier	zz_8x8		8845430	1					
ANR	8846149	PrimaryExpression	3		8845430	1					
ANR	8846150	PostIncDecOperationExpression	i ++		8845430	1					
ANR	8846151	Identifier	i		8845430	0					
ANR	8846152	IncDec	++		8845430	1					
ANR	8846153	Identifier	value		8845430	1					
ANR	8846154	ElseStatement	else		8845430	0					
ANR	8846155	CompoundStatement		213:23:3497:3497	8845430	0					
ANR	8846156	ExpressionStatement	block [ v -> zzi_8x8 [ i ++ ] ] = value	219:20:3670:3700	8845430	0	True				
ANR	8846157	AssignmentExpression	block [ v -> zzi_8x8 [ i ++ ] ] = value		8845430	0		=			
ANR	8846158	ArrayIndexing	block [ v -> zzi_8x8 [ i ++ ] ]		8845430	0					
ANR	8846159	Identifier	block		8845430	0					
ANR	8846160	ArrayIndexing	v -> zzi_8x8 [ i ++ ]		8845430	1					
ANR	8846161	PtrMemberAccess	v -> zzi_8x8		8845430	0					
ANR	8846162	Identifier	v		8845430	0					
ANR	8846163	Identifier	zzi_8x8		8845430	1					
ANR	8846164	PostIncDecOperationExpression	i ++		8845430	1					
ANR	8846165	Identifier	i		8845430	0					
ANR	8846166	IncDec	++		8845430	1					
ANR	8846167	Identifier	value		8845430	1					
ANR	8846168	IfStatement	if ( use_pred )		8845430	3					
ANR	8846169	Condition	use_pred	231:12:3807:3814	8845430	0	True				
ANR	8846170	Identifier	use_pred		8845430	0					
ANR	8846171	CompoundStatement		227:22:3667:3667	8845430	1					
ANR	8846172	IfStatement	if ( q2 && q1 != q2 )		8845430	0					
ANR	8846173	Condition	q2 && q1 != q2	235:16:3881:3894	8845430	0	True				
ANR	8846174	AndExpression	q2 && q1 != q2		8845430	0		&&			
ANR	8846175	Identifier	q2		8845430	0					
ANR	8846176	EqualityExpression	q1 != q2		8845430	1		!=			
ANR	8846177	Identifier	q1		8845430	0					
ANR	8846178	Identifier	q2		8845430	1					
ANR	8846179	CompoundStatement		231:32:3747:3747	8845430	1					
ANR	8846180	ExpressionStatement	q1 = q1 * 2 + ( ( q1 == v -> pq ) ? v -> halfpq : 0 ) - 1	237:16:3916:3965	8845430	0	True				
ANR	8846181	AssignmentExpression	q1 = q1 * 2 + ( ( q1 == v -> pq ) ? v -> halfpq : 0 ) - 1		8845430	0		=			
ANR	8846182	Identifier	q1		8845430	0					
ANR	8846183	AdditiveExpression	q1 * 2 + ( ( q1 == v -> pq ) ? v -> halfpq : 0 ) - 1		8845430	1		+			
ANR	8846184	MultiplicativeExpression	q1 * 2		8845430	0		*			
ANR	8846185	Identifier	q1		8845430	0					
ANR	8846186	PrimaryExpression	2		8845430	1					
ANR	8846187	AdditiveExpression	( ( q1 == v -> pq ) ? v -> halfpq : 0 ) - 1		8845430	1		-			
ANR	8846188	ConditionalExpression	( q1 == v -> pq ) ? v -> halfpq : 0		8845430	0					
ANR	8846189	Condition	q1 == v -> pq		8845430	0					
ANR	8846190	EqualityExpression	q1 == v -> pq		8845430	0		==			
ANR	8846191	Identifier	q1		8845430	0					
ANR	8846192	PtrMemberAccess	v -> pq		8845430	1					
ANR	8846193	Identifier	v		8845430	0					
ANR	8846194	Identifier	pq		8845430	1					
ANR	8846195	PtrMemberAccess	v -> halfpq		8845430	1					
ANR	8846196	Identifier	v		8845430	0					
ANR	8846197	Identifier	halfpq		8845430	1					
ANR	8846198	PrimaryExpression	0		8845430	2					
ANR	8846199	PrimaryExpression	1		8845430	1					
ANR	8846200	ExpressionStatement	q2 = q2 * 2 + ( ( q2 == v -> pq ) ? v -> halfpq : 0 ) - 1	239:16:3984:4033	8845430	1	True				
ANR	8846201	AssignmentExpression	q2 = q2 * 2 + ( ( q2 == v -> pq ) ? v -> halfpq : 0 ) - 1		8845430	0		=			
ANR	8846202	Identifier	q2		8845430	0					
ANR	8846203	AdditiveExpression	q2 * 2 + ( ( q2 == v -> pq ) ? v -> halfpq : 0 ) - 1		8845430	1		+			
ANR	8846204	MultiplicativeExpression	q2 * 2		8845430	0		*			
ANR	8846205	Identifier	q2		8845430	0					
ANR	8846206	PrimaryExpression	2		8845430	1					
ANR	8846207	AdditiveExpression	( ( q2 == v -> pq ) ? v -> halfpq : 0 ) - 1		8845430	1		-			
ANR	8846208	ConditionalExpression	( q2 == v -> pq ) ? v -> halfpq : 0		8845430	0					
ANR	8846209	Condition	q2 == v -> pq		8845430	0					
ANR	8846210	EqualityExpression	q2 == v -> pq		8845430	0		==			
ANR	8846211	Identifier	q2		8845430	0					
ANR	8846212	PtrMemberAccess	v -> pq		8845430	1					
ANR	8846213	Identifier	v		8845430	0					
ANR	8846214	Identifier	pq		8845430	1					
ANR	8846215	PtrMemberAccess	v -> halfpq		8845430	1					
ANR	8846216	Identifier	v		8845430	0					
ANR	8846217	Identifier	halfpq		8845430	1					
ANR	8846218	PrimaryExpression	0		8845430	2					
ANR	8846219	PrimaryExpression	1		8845430	1					
ANR	8846220	IfStatement	if ( q1 < 1 )		8845430	2					
ANR	8846221	Condition	q1 < 1	243:20:4058:4063	8845430	0	True				
ANR	8846222	RelationalExpression	q1 < 1		8845430	0		<			
ANR	8846223	Identifier	q1		8845430	0					
ANR	8846224	PrimaryExpression	1		8845430	1					
ANR	8846225	ReturnStatement	return AVERROR_INVALIDDATA ;	245:20:4087:4113	8845430	1	True				
ANR	8846226	Identifier	AVERROR_INVALIDDATA		8845430	0					
ANR	8846227	IfStatement	if ( dc_pred_dir )		8845430	3					
ANR	8846228	Condition	dc_pred_dir	247:20:4136:4146	8845430	0	True				
ANR	8846229	Identifier	dc_pred_dir		8845430	0					
ANR	8846230	CompoundStatement		243:33:3999:3999	8845430	1					
ANR	8846231	ForStatement	for ( k = 1 ; k < 8 ; k ++ )		8845430	0					
ANR	8846232	ForInit	k = 1 ;	249:25:4185:4190	8845430	0	True				
ANR	8846233	AssignmentExpression	k = 1		8845430	0		=			
ANR	8846234	Identifier	k		8845430	0					
ANR	8846235	PrimaryExpression	1		8845430	1					
ANR	8846236	Condition	k < 8	249:32:4192:4196	8845430	1	True				
ANR	8846237	RelationalExpression	k < 8		8845430	0		<			
ANR	8846238	Identifier	k		8845430	0					
ANR	8846239	PrimaryExpression	8		8845430	1					
ANR	8846240	PostIncDecOperationExpression	k ++	249:39:4199:4201	8845430	2	True				
ANR	8846241	Identifier	k		8845430	0					
ANR	8846242	IncDec	++		8845430	1					
ANR	8846243	ExpressionStatement	block [ k << v -> left_blk_sh ] += ( ac_val [ k ] * q2 * ff_vc1_dqscale [ q1 - 1 ] + 0x20000 ) >> 18	251:24:4229:4316	8845430	3	True				
ANR	8846244	AssignmentExpression	block [ k << v -> left_blk_sh ] += ( ac_val [ k ] * q2 * ff_vc1_dqscale [ q1 - 1 ] + 0x20000 ) >> 18		8845430	0		+=			
ANR	8846245	ArrayIndexing	block [ k << v -> left_blk_sh ]		8845430	0					
ANR	8846246	Identifier	block		8845430	0					
ANR	8846247	ShiftExpression	k << v -> left_blk_sh		8845430	1		<<			
ANR	8846248	Identifier	k		8845430	0					
ANR	8846249	PtrMemberAccess	v -> left_blk_sh		8845430	1					
ANR	8846250	Identifier	v		8845430	0					
ANR	8846251	Identifier	left_blk_sh		8845430	1					
ANR	8846252	ShiftExpression	( ac_val [ k ] * q2 * ff_vc1_dqscale [ q1 - 1 ] + 0x20000 ) >> 18		8845430	1		>>			
ANR	8846253	AdditiveExpression	ac_val [ k ] * q2 * ff_vc1_dqscale [ q1 - 1 ] + 0x20000		8845430	0		+			
ANR	8846254	MultiplicativeExpression	ac_val [ k ] * q2 * ff_vc1_dqscale [ q1 - 1 ]		8845430	0		*			
ANR	8846255	ArrayIndexing	ac_val [ k ]		8845430	0					
ANR	8846256	Identifier	ac_val		8845430	0					
ANR	8846257	Identifier	k		8845430	1					
ANR	8846258	MultiplicativeExpression	q2 * ff_vc1_dqscale [ q1 - 1 ]		8845430	1		*			
ANR	8846259	Identifier	q2		8845430	0					
ANR	8846260	ArrayIndexing	ff_vc1_dqscale [ q1 - 1 ]		8845430	1					
ANR	8846261	Identifier	ff_vc1_dqscale		8845430	0					
ANR	8846262	AdditiveExpression	q1 - 1		8845430	1		-			
ANR	8846263	Identifier	q1		8845430	0					
ANR	8846264	PrimaryExpression	1		8845430	1					
ANR	8846265	PrimaryExpression	0x20000		8845430	1					
ANR	8846266	PrimaryExpression	18		8845430	1					
ANR	8846267	ElseStatement	else		8845430	0					
ANR	8846268	CompoundStatement		249:23:4192:4192	8845430	0					
ANR	8846269	ForStatement	for ( k = 1 ; k < 8 ; k ++ )		8845430	0					
ANR	8846270	ForInit	k = 1 ;	255:25:4376:4381	8845430	0	True				
ANR	8846271	AssignmentExpression	k = 1		8845430	0		=			
ANR	8846272	Identifier	k		8845430	0					
ANR	8846273	PrimaryExpression	1		8845430	1					
ANR	8846274	Condition	k < 8	255:32:4383:4387	8845430	1	True				
ANR	8846275	RelationalExpression	k < 8		8845430	0		<			
ANR	8846276	Identifier	k		8845430	0					
ANR	8846277	PrimaryExpression	8		8845430	1					
ANR	8846278	PostIncDecOperationExpression	k ++	255:39:4390:4392	8845430	2	True				
ANR	8846279	Identifier	k		8845430	0					
ANR	8846280	IncDec	++		8845430	1					
ANR	8846281	ExpressionStatement	block [ k << v -> top_blk_sh ] += ( ac_val [ k + 8 ] * q2 * ff_vc1_dqscale [ q1 - 1 ] + 0x20000 ) >> 18	257:24:4420:4510	8845430	3	True				
ANR	8846282	AssignmentExpression	block [ k << v -> top_blk_sh ] += ( ac_val [ k + 8 ] * q2 * ff_vc1_dqscale [ q1 - 1 ] + 0x20000 ) >> 18		8845430	0		+=			
ANR	8846283	ArrayIndexing	block [ k << v -> top_blk_sh ]		8845430	0					
ANR	8846284	Identifier	block		8845430	0					
ANR	8846285	ShiftExpression	k << v -> top_blk_sh		8845430	1		<<			
ANR	8846286	Identifier	k		8845430	0					
ANR	8846287	PtrMemberAccess	v -> top_blk_sh		8845430	1					
ANR	8846288	Identifier	v		8845430	0					
ANR	8846289	Identifier	top_blk_sh		8845430	1					
ANR	8846290	ShiftExpression	( ac_val [ k + 8 ] * q2 * ff_vc1_dqscale [ q1 - 1 ] + 0x20000 ) >> 18		8845430	1		>>			
ANR	8846291	AdditiveExpression	ac_val [ k + 8 ] * q2 * ff_vc1_dqscale [ q1 - 1 ] + 0x20000		8845430	0		+			
ANR	8846292	MultiplicativeExpression	ac_val [ k + 8 ] * q2 * ff_vc1_dqscale [ q1 - 1 ]		8845430	0		*			
ANR	8846293	ArrayIndexing	ac_val [ k + 8 ]		8845430	0					
ANR	8846294	Identifier	ac_val		8845430	0					
ANR	8846295	AdditiveExpression	k + 8		8845430	1		+			
ANR	8846296	Identifier	k		8845430	0					
ANR	8846297	PrimaryExpression	8		8845430	1					
ANR	8846298	MultiplicativeExpression	q2 * ff_vc1_dqscale [ q1 - 1 ]		8845430	1		*			
ANR	8846299	Identifier	q2		8845430	0					
ANR	8846300	ArrayIndexing	ff_vc1_dqscale [ q1 - 1 ]		8845430	1					
ANR	8846301	Identifier	ff_vc1_dqscale		8845430	0					
ANR	8846302	AdditiveExpression	q1 - 1		8845430	1		-			
ANR	8846303	Identifier	q1		8845430	0					
ANR	8846304	PrimaryExpression	1		8845430	1					
ANR	8846305	PrimaryExpression	0x20000		8845430	1					
ANR	8846306	PrimaryExpression	18		8845430	1					
ANR	8846307	ElseStatement	else		8845430	0					
ANR	8846308	CompoundStatement		257:19:4401:4401	8845430	0					
ANR	8846309	IfStatement	if ( dc_pred_dir )		8845430	0					
ANR	8846310	Condition	dc_pred_dir	263:20:4574:4584	8845430	0	True				
ANR	8846311	Identifier	dc_pred_dir		8845430	0					
ANR	8846312	CompoundStatement		259:33:4437:4437	8845430	1					
ANR	8846313	ForStatement	for ( k = 1 ; k < 8 ; k ++ )		8845430	0					
ANR	8846314	ForInit	k = 1 ;	265:25:4623:4628	8845430	0	True				
ANR	8846315	AssignmentExpression	k = 1		8845430	0		=			
ANR	8846316	Identifier	k		8845430	0					
ANR	8846317	PrimaryExpression	1		8845430	1					
ANR	8846318	Condition	k < 8	265:32:4630:4634	8845430	1	True				
ANR	8846319	RelationalExpression	k < 8		8845430	0		<			
ANR	8846320	Identifier	k		8845430	0					
ANR	8846321	PrimaryExpression	8		8845430	1					
ANR	8846322	PostIncDecOperationExpression	k ++	265:39:4637:4639	8845430	2	True				
ANR	8846323	Identifier	k		8845430	0					
ANR	8846324	IncDec	++		8845430	1					
ANR	8846325	ExpressionStatement	block [ k << v -> left_blk_sh ] += ac_val [ k ]	267:24:4667:4706	8845430	3	True				
ANR	8846326	AssignmentExpression	block [ k << v -> left_blk_sh ] += ac_val [ k ]		8845430	0		+=			
ANR	8846327	ArrayIndexing	block [ k << v -> left_blk_sh ]		8845430	0					
ANR	8846328	Identifier	block		8845430	0					
ANR	8846329	ShiftExpression	k << v -> left_blk_sh		8845430	1		<<			
ANR	8846330	Identifier	k		8845430	0					
ANR	8846331	PtrMemberAccess	v -> left_blk_sh		8845430	1					
ANR	8846332	Identifier	v		8845430	0					
ANR	8846333	Identifier	left_blk_sh		8845430	1					
ANR	8846334	ArrayIndexing	ac_val [ k ]		8845430	1					
ANR	8846335	Identifier	ac_val		8845430	0					
ANR	8846336	Identifier	k		8845430	1					
ANR	8846337	ElseStatement	else		8845430	0					
ANR	8846338	CompoundStatement		265:23:4582:4582	8845430	0					
ANR	8846339	ForStatement	for ( k = 1 ; k < 8 ; k ++ )		8845430	0					
ANR	8846340	ForInit	k = 1 ;	271:25:4767:4772	8845430	0	True				
ANR	8846341	AssignmentExpression	k = 1		8845430	0		=			
ANR	8846342	Identifier	k		8845430	0					
ANR	8846343	PrimaryExpression	1		8845430	1					
ANR	8846344	Condition	k < 8	271:32:4774:4778	8845430	1	True				
ANR	8846345	RelationalExpression	k < 8		8845430	0		<			
ANR	8846346	Identifier	k		8845430	0					
ANR	8846347	PrimaryExpression	8		8845430	1					
ANR	8846348	PostIncDecOperationExpression	k ++	271:39:4781:4783	8845430	2	True				
ANR	8846349	Identifier	k		8845430	0					
ANR	8846350	IncDec	++		8845430	1					
ANR	8846351	ExpressionStatement	block [ k << v -> top_blk_sh ] += ac_val [ k + 8 ]	273:24:4811:4853	8845430	3	True				
ANR	8846352	AssignmentExpression	block [ k << v -> top_blk_sh ] += ac_val [ k + 8 ]		8845430	0		+=			
ANR	8846353	ArrayIndexing	block [ k << v -> top_blk_sh ]		8845430	0					
ANR	8846354	Identifier	block		8845430	0					
ANR	8846355	ShiftExpression	k << v -> top_blk_sh		8845430	1		<<			
ANR	8846356	Identifier	k		8845430	0					
ANR	8846357	PtrMemberAccess	v -> top_blk_sh		8845430	1					
ANR	8846358	Identifier	v		8845430	0					
ANR	8846359	Identifier	top_blk_sh		8845430	1					
ANR	8846360	ArrayIndexing	ac_val [ k + 8 ]		8845430	1					
ANR	8846361	Identifier	ac_val		8845430	0					
ANR	8846362	AdditiveExpression	k + 8		8845430	1		+			
ANR	8846363	Identifier	k		8845430	0					
ANR	8846364	PrimaryExpression	8		8845430	1					
ANR	8846365	ForStatement	for ( k = 1 ; k < 8 ; k ++ )		8845430	4					
ANR	8846366	ForInit	k = 1 ;	283:13:4967:4972	8845430	0	True				
ANR	8846367	AssignmentExpression	k = 1		8845430	0		=			
ANR	8846368	Identifier	k		8845430	0					
ANR	8846369	PrimaryExpression	1		8845430	1					
ANR	8846370	Condition	k < 8	283:20:4974:4978	8845430	1	True				
ANR	8846371	RelationalExpression	k < 8		8845430	0		<			
ANR	8846372	Identifier	k		8845430	0					
ANR	8846373	PrimaryExpression	8		8845430	1					
ANR	8846374	PostIncDecOperationExpression	k ++	283:27:4981:4983	8845430	2	True				
ANR	8846375	Identifier	k		8845430	0					
ANR	8846376	IncDec	++		8845430	1					
ANR	8846377	CompoundStatement		279:32:4836:4836	8845430	3					
ANR	8846378	ExpressionStatement	ac_val2 [ k ] = block [ k << v -> left_blk_sh ]	285:12:5001:5044	8845430	0	True				
ANR	8846379	AssignmentExpression	ac_val2 [ k ] = block [ k << v -> left_blk_sh ]		8845430	0		=			
ANR	8846380	ArrayIndexing	ac_val2 [ k ]		8845430	0					
ANR	8846381	Identifier	ac_val2		8845430	0					
ANR	8846382	Identifier	k		8845430	1					
ANR	8846383	ArrayIndexing	block [ k << v -> left_blk_sh ]		8845430	1					
ANR	8846384	Identifier	block		8845430	0					
ANR	8846385	ShiftExpression	k << v -> left_blk_sh		8845430	1		<<			
ANR	8846386	Identifier	k		8845430	0					
ANR	8846387	PtrMemberAccess	v -> left_blk_sh		8845430	1					
ANR	8846388	Identifier	v		8845430	0					
ANR	8846389	Identifier	left_blk_sh		8845430	1					
ANR	8846390	ExpressionStatement	ac_val2 [ k + 8 ] = block [ k << v -> top_blk_sh ]	287:12:5059:5101	8845430	1	True				
ANR	8846391	AssignmentExpression	ac_val2 [ k + 8 ] = block [ k << v -> top_blk_sh ]		8845430	0		=			
ANR	8846392	ArrayIndexing	ac_val2 [ k + 8 ]		8845430	0					
ANR	8846393	Identifier	ac_val2		8845430	0					
ANR	8846394	AdditiveExpression	k + 8		8845430	1		+			
ANR	8846395	Identifier	k		8845430	0					
ANR	8846396	PrimaryExpression	8		8845430	1					
ANR	8846397	ArrayIndexing	block [ k << v -> top_blk_sh ]		8845430	1					
ANR	8846398	Identifier	block		8845430	0					
ANR	8846399	ShiftExpression	k << v -> top_blk_sh		8845430	1		<<			
ANR	8846400	Identifier	k		8845430	0					
ANR	8846401	PtrMemberAccess	v -> top_blk_sh		8845430	1					
ANR	8846402	Identifier	v		8845430	0					
ANR	8846403	Identifier	top_blk_sh		8845430	1					
ANR	8846404	ForStatement	for ( k = 1 ; k < 64 ; k ++ )		8845430	5					
ANR	8846405	ForInit	k = 1 ;	295:13:5161:5166	8845430	0	True				
ANR	8846406	AssignmentExpression	k = 1		8845430	0		=			
ANR	8846407	Identifier	k		8845430	0					
ANR	8846408	PrimaryExpression	1		8845430	1					
ANR	8846409	Condition	k < 64	295:20:5168:5173	8845430	1	True				
ANR	8846410	RelationalExpression	k < 64		8845430	0		<			
ANR	8846411	Identifier	k		8845430	0					
ANR	8846412	PrimaryExpression	64		8845430	1					
ANR	8846413	PostIncDecOperationExpression	k ++	295:28:5176:5178	8845430	2	True				
ANR	8846414	Identifier	k		8845430	0					
ANR	8846415	IncDec	++		8845430	1					
ANR	8846416	IfStatement	if ( block [ k ] )		8845430	3					
ANR	8846417	Condition	block [ k ]	297:16:5198:5205	8845430	0	True				
ANR	8846418	ArrayIndexing	block [ k ]		8845430	0					
ANR	8846419	Identifier	block		8845430	0					
ANR	8846420	Identifier	k		8845430	1					
ANR	8846421	CompoundStatement		293:26:5058:5058	8845430	1					
ANR	8846422	ExpressionStatement	block [ k ] *= scale	299:16:5227:5244	8845430	0	True				
ANR	8846423	AssignmentExpression	block [ k ] *= scale		8845430	0		*=			
ANR	8846424	ArrayIndexing	block [ k ]		8845430	0					
ANR	8846425	Identifier	block		8845430	0					
ANR	8846426	Identifier	k		8845430	1					
ANR	8846427	Identifier	scale		8845430	1					
ANR	8846428	IfStatement	if ( ! v -> pquantizer )		8845430	1					
ANR	8846429	Condition	! v -> pquantizer	301:20:5267:5280	8845430	0	True				
ANR	8846430	UnaryOperationExpression	! v -> pquantizer		8845430	0					
ANR	8846431	UnaryOperator	!		8845430	0					
ANR	8846432	PtrMemberAccess	v -> pquantizer		8845430	1					
ANR	8846433	Identifier	v		8845430	0					
ANR	8846434	Identifier	pquantizer		8845430	1					
ANR	8846435	ExpressionStatement	block [ k ] += ( block [ k ] < 0 ) ? - mquant : mquant	303:20:5304:5349	8845430	1	True				
ANR	8846436	AssignmentExpression	block [ k ] += ( block [ k ] < 0 ) ? - mquant : mquant		8845430	0		+=			
ANR	8846437	ArrayIndexing	block [ k ]		8845430	0					
ANR	8846438	Identifier	block		8845430	0					
ANR	8846439	Identifier	k		8845430	1					
ANR	8846440	ConditionalExpression	( block [ k ] < 0 ) ? - mquant : mquant		8845430	1					
ANR	8846441	Condition	block [ k ] < 0		8845430	0					
ANR	8846442	RelationalExpression	block [ k ] < 0		8845430	0		<			
ANR	8846443	ArrayIndexing	block [ k ]		8845430	0					
ANR	8846444	Identifier	block		8845430	0					
ANR	8846445	Identifier	k		8845430	1					
ANR	8846446	PrimaryExpression	0		8845430	1					
ANR	8846447	UnaryOperationExpression	- mquant		8845430	1					
ANR	8846448	UnaryOperator	-		8845430	0					
ANR	8846449	Identifier	mquant		8845430	1					
ANR	8846450	Identifier	mquant		8845430	2					
ANR	8846451	IfStatement	if ( use_pred )		8845430	6					
ANR	8846452	Condition	use_pred	309:12:5381:5388	8845430	0	True				
ANR	8846453	Identifier	use_pred		8845430	0					
ANR	8846454	ExpressionStatement	i = 63	309:22:5391:5397	8845430	1	True				
ANR	8846455	AssignmentExpression	i = 63		8845430	0		=			
ANR	8846456	Identifier	i		8845430	0					
ANR	8846457	PrimaryExpression	63		8845430	1					
ANR	8846458	ElseStatement	else		8845430	0					
ANR	8846459	CompoundStatement		309:8:5288:5293	8845430	0					
ANR	8846460	IdentifierDeclStatement	int k ;	313:8:5438:5443	8845430	0	True				
ANR	8846461	IdentifierDecl	k		8845430	0					
ANR	8846462	IdentifierDeclType	int		8845430	0					
ANR	8846463	Identifier	k		8845430	1					
ANR	8846464	ExpressionStatement	"memset ( ac_val2 , 0 , 16 * 2 )"	317:8:5456:5482	8845430	1	True				
ANR	8846465	CallExpression	"memset ( ac_val2 , 0 , 16 * 2 )"		8845430	0					
ANR	8846466	Callee	memset		8845430	0					
ANR	8846467	Identifier	memset		8845430	0					
ANR	8846468	ArgumentList	ac_val2		8845430	1					
ANR	8846469	Argument	ac_val2		8845430	0					
ANR	8846470	Identifier	ac_val2		8845430	0					
ANR	8846471	Argument	0		8845430	1					
ANR	8846472	PrimaryExpression	0		8845430	0					
ANR	8846473	Argument	16 * 2		8845430	2					
ANR	8846474	MultiplicativeExpression	16 * 2		8845430	0		*			
ANR	8846475	PrimaryExpression	16		8845430	0					
ANR	8846476	PrimaryExpression	2		8845430	1					
ANR	8846477	IfStatement	if ( dc_pred_dir )		8845430	2					
ANR	8846478	Condition	dc_pred_dir	319:12:5497:5507	8845430	0	True				
ANR	8846479	Identifier	dc_pred_dir		8845430	0					
ANR	8846480	CompoundStatement		315:25:5360:5360	8845430	1					
ANR	8846481	IfStatement	if ( use_pred )		8845430	0					
ANR	8846482	Condition	use_pred	321:16:5537:5544	8845430	0	True				
ANR	8846483	Identifier	use_pred		8845430	0					
ANR	8846484	CompoundStatement		317:26:5397:5397	8845430	1					
ANR	8846485	ExpressionStatement	"memcpy ( ac_val2 , ac_val , 8 * 2 )"	323:16:5566:5596	8845430	0	True				
ANR	8846486	CallExpression	"memcpy ( ac_val2 , ac_val , 8 * 2 )"		8845430	0					
ANR	8846487	Callee	memcpy		8845430	0					
ANR	8846488	Identifier	memcpy		8845430	0					
ANR	8846489	ArgumentList	ac_val2		8845430	1					
ANR	8846490	Argument	ac_val2		8845430	0					
ANR	8846491	Identifier	ac_val2		8845430	0					
ANR	8846492	Argument	ac_val		8845430	1					
ANR	8846493	Identifier	ac_val		8845430	0					
ANR	8846494	Argument	8 * 2		8845430	2					
ANR	8846495	MultiplicativeExpression	8 * 2		8845430	0		*			
ANR	8846496	PrimaryExpression	8		8845430	0					
ANR	8846497	PrimaryExpression	2		8845430	1					
ANR	8846498	IfStatement	if ( q2 && q1 != q2 )		8845430	1					
ANR	8846499	Condition	q2 && q1 != q2	325:20:5619:5632	8845430	0	True				
ANR	8846500	AndExpression	q2 && q1 != q2		8845430	0		&&			
ANR	8846501	Identifier	q2		8845430	0					
ANR	8846502	EqualityExpression	q1 != q2		8845430	1		!=			
ANR	8846503	Identifier	q1		8845430	0					
ANR	8846504	Identifier	q2		8845430	1					
ANR	8846505	CompoundStatement		321:36:5485:5485	8845430	1					
ANR	8846506	ExpressionStatement	q1 = q1 * 2 + ( ( q1 == v -> pq ) ? v -> halfpq : 0 ) - 1	327:20:5658:5707	8845430	0	True				
ANR	8846507	AssignmentExpression	q1 = q1 * 2 + ( ( q1 == v -> pq ) ? v -> halfpq : 0 ) - 1		8845430	0		=			
ANR	8846508	Identifier	q1		8845430	0					
ANR	8846509	AdditiveExpression	q1 * 2 + ( ( q1 == v -> pq ) ? v -> halfpq : 0 ) - 1		8845430	1		+			
ANR	8846510	MultiplicativeExpression	q1 * 2		8845430	0		*			
ANR	8846511	Identifier	q1		8845430	0					
ANR	8846512	PrimaryExpression	2		8845430	1					
ANR	8846513	AdditiveExpression	( ( q1 == v -> pq ) ? v -> halfpq : 0 ) - 1		8845430	1		-			
ANR	8846514	ConditionalExpression	( q1 == v -> pq ) ? v -> halfpq : 0		8845430	0					
ANR	8846515	Condition	q1 == v -> pq		8845430	0					
ANR	8846516	EqualityExpression	q1 == v -> pq		8845430	0		==			
ANR	8846517	Identifier	q1		8845430	0					
ANR	8846518	PtrMemberAccess	v -> pq		8845430	1					
ANR	8846519	Identifier	v		8845430	0					
ANR	8846520	Identifier	pq		8845430	1					
ANR	8846521	PtrMemberAccess	v -> halfpq		8845430	1					
ANR	8846522	Identifier	v		8845430	0					
ANR	8846523	Identifier	halfpq		8845430	1					
ANR	8846524	PrimaryExpression	0		8845430	2					
ANR	8846525	PrimaryExpression	1		8845430	1					
ANR	8846526	ExpressionStatement	q2 = q2 * 2 + ( ( q2 == v -> pq ) ? v -> halfpq : 0 ) - 1	329:20:5730:5779	8845430	1	True				
ANR	8846527	AssignmentExpression	q2 = q2 * 2 + ( ( q2 == v -> pq ) ? v -> halfpq : 0 ) - 1		8845430	0		=			
ANR	8846528	Identifier	q2		8845430	0					
ANR	8846529	AdditiveExpression	q2 * 2 + ( ( q2 == v -> pq ) ? v -> halfpq : 0 ) - 1		8845430	1		+			
ANR	8846530	MultiplicativeExpression	q2 * 2		8845430	0		*			
ANR	8846531	Identifier	q2		8845430	0					
ANR	8846532	PrimaryExpression	2		8845430	1					
ANR	8846533	AdditiveExpression	( ( q2 == v -> pq ) ? v -> halfpq : 0 ) - 1		8845430	1		-			
ANR	8846534	ConditionalExpression	( q2 == v -> pq ) ? v -> halfpq : 0		8845430	0					
ANR	8846535	Condition	q2 == v -> pq		8845430	0					
ANR	8846536	EqualityExpression	q2 == v -> pq		8845430	0		==			
ANR	8846537	Identifier	q2		8845430	0					
ANR	8846538	PtrMemberAccess	v -> pq		8845430	1					
ANR	8846539	Identifier	v		8845430	0					
ANR	8846540	Identifier	pq		8845430	1					
ANR	8846541	PtrMemberAccess	v -> halfpq		8845430	1					
ANR	8846542	Identifier	v		8845430	0					
ANR	8846543	Identifier	halfpq		8845430	1					
ANR	8846544	PrimaryExpression	0		8845430	2					
ANR	8846545	PrimaryExpression	1		8845430	1					
ANR	8846546	IfStatement	if ( q1 < 1 )		8845430	2					
ANR	8846547	Condition	q1 < 1	331:24:5806:5811	8845430	0	True				
ANR	8846548	RelationalExpression	q1 < 1		8845430	0		<			
ANR	8846549	Identifier	q1		8845430	0					
ANR	8846550	PrimaryExpression	1		8845430	1					
ANR	8846551	ReturnStatement	return AVERROR_INVALIDDATA ;	333:24:5839:5865	8845430	1	True				
ANR	8846552	Identifier	AVERROR_INVALIDDATA		8845430	0					
ANR	8846553	ForStatement	for ( k = 1 ; k < 8 ; k ++ )		8845430	3					
ANR	8846554	ForInit	k = 1 ;	335:25:5893:5898	8845430	0	True				
ANR	8846555	AssignmentExpression	k = 1		8845430	0		=			
ANR	8846556	Identifier	k		8845430	0					
ANR	8846557	PrimaryExpression	1		8845430	1					
ANR	8846558	Condition	k < 8	335:32:5900:5904	8845430	1	True				
ANR	8846559	RelationalExpression	k < 8		8845430	0		<			
ANR	8846560	Identifier	k		8845430	0					
ANR	8846561	PrimaryExpression	8		8845430	1					
ANR	8846562	PostIncDecOperationExpression	k ++	335:39:5907:5909	8845430	2	True				
ANR	8846563	Identifier	k		8845430	0					
ANR	8846564	IncDec	++		8845430	1					
ANR	8846565	ExpressionStatement	ac_val2 [ k ] = ( ac_val2 [ k ] * q2 * ff_vc1_dqscale [ q1 - 1 ] + 0x20000 ) >> 18	337:24:5937:6008	8845430	3	True				
ANR	8846566	AssignmentExpression	ac_val2 [ k ] = ( ac_val2 [ k ] * q2 * ff_vc1_dqscale [ q1 - 1 ] + 0x20000 ) >> 18		8845430	0		=			
ANR	8846567	ArrayIndexing	ac_val2 [ k ]		8845430	0					
ANR	8846568	Identifier	ac_val2		8845430	0					
ANR	8846569	Identifier	k		8845430	1					
ANR	8846570	ShiftExpression	( ac_val2 [ k ] * q2 * ff_vc1_dqscale [ q1 - 1 ] + 0x20000 ) >> 18		8845430	1		>>			
ANR	8846571	AdditiveExpression	ac_val2 [ k ] * q2 * ff_vc1_dqscale [ q1 - 1 ] + 0x20000		8845430	0		+			
ANR	8846572	MultiplicativeExpression	ac_val2 [ k ] * q2 * ff_vc1_dqscale [ q1 - 1 ]		8845430	0		*			
ANR	8846573	ArrayIndexing	ac_val2 [ k ]		8845430	0					
ANR	8846574	Identifier	ac_val2		8845430	0					
ANR	8846575	Identifier	k		8845430	1					
ANR	8846576	MultiplicativeExpression	q2 * ff_vc1_dqscale [ q1 - 1 ]		8845430	1		*			
ANR	8846577	Identifier	q2		8845430	0					
ANR	8846578	ArrayIndexing	ff_vc1_dqscale [ q1 - 1 ]		8845430	1					
ANR	8846579	Identifier	ff_vc1_dqscale		8845430	0					
ANR	8846580	AdditiveExpression	q1 - 1		8845430	1		-			
ANR	8846581	Identifier	q1		8845430	0					
ANR	8846582	PrimaryExpression	1		8845430	1					
ANR	8846583	PrimaryExpression	0x20000		8845430	1					
ANR	8846584	PrimaryExpression	18		8845430	1					
ANR	8846585	ElseStatement	else		8845430	0					
ANR	8846586	CompoundStatement		339:15:5910:5910	8845430	0					
ANR	8846587	IfStatement	if ( use_pred )		8845430	0					
ANR	8846588	Condition	use_pred	345:16:6086:6093	8845430	0	True				
ANR	8846589	Identifier	use_pred		8845430	0					
ANR	8846590	CompoundStatement		341:26:5946:5946	8845430	1					
ANR	8846591	ExpressionStatement	"memcpy ( ac_val2 + 8 , ac_val + 8 , 8 * 2 )"	347:16:6115:6153	8845430	0	True				
ANR	8846592	CallExpression	"memcpy ( ac_val2 + 8 , ac_val + 8 , 8 * 2 )"		8845430	0					
ANR	8846593	Callee	memcpy		8845430	0					
ANR	8846594	Identifier	memcpy		8845430	0					
ANR	8846595	ArgumentList	ac_val2 + 8		8845430	1					
ANR	8846596	Argument	ac_val2 + 8		8845430	0					
ANR	8846597	AdditiveExpression	ac_val2 + 8		8845430	0		+			
ANR	8846598	Identifier	ac_val2		8845430	0					
ANR	8846599	PrimaryExpression	8		8845430	1					
ANR	8846600	Argument	ac_val + 8		8845430	1					
ANR	8846601	AdditiveExpression	ac_val + 8		8845430	0		+			
ANR	8846602	Identifier	ac_val		8845430	0					
ANR	8846603	PrimaryExpression	8		8845430	1					
ANR	8846604	Argument	8 * 2		8845430	2					
ANR	8846605	MultiplicativeExpression	8 * 2		8845430	0		*			
ANR	8846606	PrimaryExpression	8		8845430	0					
ANR	8846607	PrimaryExpression	2		8845430	1					
ANR	8846608	IfStatement	if ( q2 && q1 != q2 )		8845430	1					
ANR	8846609	Condition	q2 && q1 != q2	349:20:6176:6189	8845430	0	True				
ANR	8846610	AndExpression	q2 && q1 != q2		8845430	0		&&			
ANR	8846611	Identifier	q2		8845430	0					
ANR	8846612	EqualityExpression	q1 != q2		8845430	1		!=			
ANR	8846613	Identifier	q1		8845430	0					
ANR	8846614	Identifier	q2		8845430	1					
ANR	8846615	CompoundStatement		345:36:6042:6042	8845430	1					
ANR	8846616	ExpressionStatement	q1 = q1 * 2 + ( ( q1 == v -> pq ) ? v -> halfpq : 0 ) - 1	351:20:6215:6264	8845430	0	True				
ANR	8846617	AssignmentExpression	q1 = q1 * 2 + ( ( q1 == v -> pq ) ? v -> halfpq : 0 ) - 1		8845430	0		=			
ANR	8846618	Identifier	q1		8845430	0					
ANR	8846619	AdditiveExpression	q1 * 2 + ( ( q1 == v -> pq ) ? v -> halfpq : 0 ) - 1		8845430	1		+			
ANR	8846620	MultiplicativeExpression	q1 * 2		8845430	0		*			
ANR	8846621	Identifier	q1		8845430	0					
ANR	8846622	PrimaryExpression	2		8845430	1					
ANR	8846623	AdditiveExpression	( ( q1 == v -> pq ) ? v -> halfpq : 0 ) - 1		8845430	1		-			
ANR	8846624	ConditionalExpression	( q1 == v -> pq ) ? v -> halfpq : 0		8845430	0					
ANR	8846625	Condition	q1 == v -> pq		8845430	0					
ANR	8846626	EqualityExpression	q1 == v -> pq		8845430	0		==			
ANR	8846627	Identifier	q1		8845430	0					
ANR	8846628	PtrMemberAccess	v -> pq		8845430	1					
ANR	8846629	Identifier	v		8845430	0					
ANR	8846630	Identifier	pq		8845430	1					
ANR	8846631	PtrMemberAccess	v -> halfpq		8845430	1					
ANR	8846632	Identifier	v		8845430	0					
ANR	8846633	Identifier	halfpq		8845430	1					
ANR	8846634	PrimaryExpression	0		8845430	2					
ANR	8846635	PrimaryExpression	1		8845430	1					
ANR	8846636	ExpressionStatement	q2 = q2 * 2 + ( ( q2 == v -> pq ) ? v -> halfpq : 0 ) - 1	353:20:6287:6336	8845430	1	True				
ANR	8846637	AssignmentExpression	q2 = q2 * 2 + ( ( q2 == v -> pq ) ? v -> halfpq : 0 ) - 1		8845430	0		=			
ANR	8846638	Identifier	q2		8845430	0					
ANR	8846639	AdditiveExpression	q2 * 2 + ( ( q2 == v -> pq ) ? v -> halfpq : 0 ) - 1		8845430	1		+			
ANR	8846640	MultiplicativeExpression	q2 * 2		8845430	0		*			
ANR	8846641	Identifier	q2		8845430	0					
ANR	8846642	PrimaryExpression	2		8845430	1					
ANR	8846643	AdditiveExpression	( ( q2 == v -> pq ) ? v -> halfpq : 0 ) - 1		8845430	1		-			
ANR	8846644	ConditionalExpression	( q2 == v -> pq ) ? v -> halfpq : 0		8845430	0					
ANR	8846645	Condition	q2 == v -> pq		8845430	0					
ANR	8846646	EqualityExpression	q2 == v -> pq		8845430	0		==			
ANR	8846647	Identifier	q2		8845430	0					
ANR	8846648	PtrMemberAccess	v -> pq		8845430	1					
ANR	8846649	Identifier	v		8845430	0					
ANR	8846650	Identifier	pq		8845430	1					
ANR	8846651	PtrMemberAccess	v -> halfpq		8845430	1					
ANR	8846652	Identifier	v		8845430	0					
ANR	8846653	Identifier	halfpq		8845430	1					
ANR	8846654	PrimaryExpression	0		8845430	2					
ANR	8846655	PrimaryExpression	1		8845430	1					
ANR	8846656	IfStatement	if ( q1 < 1 )		8845430	2					
ANR	8846657	Condition	q1 < 1	355:24:6363:6368	8845430	0	True				
ANR	8846658	RelationalExpression	q1 < 1		8845430	0		<			
ANR	8846659	Identifier	q1		8845430	0					
ANR	8846660	PrimaryExpression	1		8845430	1					
ANR	8846661	ReturnStatement	return AVERROR_INVALIDDATA ;	357:24:6396:6422	8845430	1	True				
ANR	8846662	Identifier	AVERROR_INVALIDDATA		8845430	0					
ANR	8846663	ForStatement	for ( k = 1 ; k < 8 ; k ++ )		8845430	3					
ANR	8846664	ForInit	k = 1 ;	359:25:6450:6455	8845430	0	True				
ANR	8846665	AssignmentExpression	k = 1		8845430	0		=			
ANR	8846666	Identifier	k		8845430	0					
ANR	8846667	PrimaryExpression	1		8845430	1					
ANR	8846668	Condition	k < 8	359:32:6457:6461	8845430	1	True				
ANR	8846669	RelationalExpression	k < 8		8845430	0		<			
ANR	8846670	Identifier	k		8845430	0					
ANR	8846671	PrimaryExpression	8		8845430	1					
ANR	8846672	PostIncDecOperationExpression	k ++	359:39:6464:6466	8845430	2	True				
ANR	8846673	Identifier	k		8845430	0					
ANR	8846674	IncDec	++		8845430	1					
ANR	8846675	ExpressionStatement	ac_val2 [ k + 8 ] = ( ac_val2 [ k + 8 ] * q2 * ff_vc1_dqscale [ q1 - 1 ] + 0x20000 ) >> 18	361:24:6494:6573	8845430	3	True				
ANR	8846676	AssignmentExpression	ac_val2 [ k + 8 ] = ( ac_val2 [ k + 8 ] * q2 * ff_vc1_dqscale [ q1 - 1 ] + 0x20000 ) >> 18		8845430	0		=			
ANR	8846677	ArrayIndexing	ac_val2 [ k + 8 ]		8845430	0					
ANR	8846678	Identifier	ac_val2		8845430	0					
ANR	8846679	AdditiveExpression	k + 8		8845430	1		+			
ANR	8846680	Identifier	k		8845430	0					
ANR	8846681	PrimaryExpression	8		8845430	1					
ANR	8846682	ShiftExpression	( ac_val2 [ k + 8 ] * q2 * ff_vc1_dqscale [ q1 - 1 ] + 0x20000 ) >> 18		8845430	1		>>			
ANR	8846683	AdditiveExpression	ac_val2 [ k + 8 ] * q2 * ff_vc1_dqscale [ q1 - 1 ] + 0x20000		8845430	0		+			
ANR	8846684	MultiplicativeExpression	ac_val2 [ k + 8 ] * q2 * ff_vc1_dqscale [ q1 - 1 ]		8845430	0		*			
ANR	8846685	ArrayIndexing	ac_val2 [ k + 8 ]		8845430	0					
ANR	8846686	Identifier	ac_val2		8845430	0					
ANR	8846687	AdditiveExpression	k + 8		8845430	1		+			
ANR	8846688	Identifier	k		8845430	0					
ANR	8846689	PrimaryExpression	8		8845430	1					
ANR	8846690	MultiplicativeExpression	q2 * ff_vc1_dqscale [ q1 - 1 ]		8845430	1		*			
ANR	8846691	Identifier	q2		8845430	0					
ANR	8846692	ArrayIndexing	ff_vc1_dqscale [ q1 - 1 ]		8845430	1					
ANR	8846693	Identifier	ff_vc1_dqscale		8845430	0					
ANR	8846694	AdditiveExpression	q1 - 1		8845430	1		-			
ANR	8846695	Identifier	q1		8845430	0					
ANR	8846696	PrimaryExpression	1		8845430	1					
ANR	8846697	PrimaryExpression	0x20000		8845430	1					
ANR	8846698	PrimaryExpression	18		8845430	1					
ANR	8846699	IfStatement	if ( use_pred )		8845430	3					
ANR	8846700	Condition	use_pred	373:12:6680:6687	8845430	0	True				
ANR	8846701	Identifier	use_pred		8845430	0					
ANR	8846702	CompoundStatement		369:22:6540:6540	8845430	1					
ANR	8846703	IfStatement	if ( dc_pred_dir )		8845430	0					
ANR	8846704	Condition	dc_pred_dir	375:16:6709:6719	8845430	0	True				
ANR	8846705	Identifier	dc_pred_dir		8845430	0					
ANR	8846706	CompoundStatement		371:29:6572:6572	8845430	1					
ANR	8846707	ForStatement	for ( k = 1 ; k < 8 ; k ++ )		8845430	0					
ANR	8846708	ForInit	k = 1 ;	377:21:6754:6759	8845430	0	True				
ANR	8846709	AssignmentExpression	k = 1		8845430	0		=			
ANR	8846710	Identifier	k		8845430	0					
ANR	8846711	PrimaryExpression	1		8845430	1					
ANR	8846712	Condition	k < 8	377:28:6761:6765	8845430	1	True				
ANR	8846713	RelationalExpression	k < 8		8845430	0		<			
ANR	8846714	Identifier	k		8845430	0					
ANR	8846715	PrimaryExpression	8		8845430	1					
ANR	8846716	PostIncDecOperationExpression	k ++	377:35:6768:6770	8845430	2	True				
ANR	8846717	Identifier	k		8845430	0					
ANR	8846718	IncDec	++		8845430	1					
ANR	8846719	CompoundStatement		373:40:6623:6623	8845430	3					
ANR	8846720	ExpressionStatement	block [ k << v -> left_blk_sh ] = ac_val2 [ k ] * scale	379:20:6796:6843	8845430	0	True				
ANR	8846721	AssignmentExpression	block [ k << v -> left_blk_sh ] = ac_val2 [ k ] * scale		8845430	0		=			
ANR	8846722	ArrayIndexing	block [ k << v -> left_blk_sh ]		8845430	0					
ANR	8846723	Identifier	block		8845430	0					
ANR	8846724	ShiftExpression	k << v -> left_blk_sh		8845430	1		<<			
ANR	8846725	Identifier	k		8845430	0					
ANR	8846726	PtrMemberAccess	v -> left_blk_sh		8845430	1					
ANR	8846727	Identifier	v		8845430	0					
ANR	8846728	Identifier	left_blk_sh		8845430	1					
ANR	8846729	MultiplicativeExpression	ac_val2 [ k ] * scale		8845430	1		*			
ANR	8846730	ArrayIndexing	ac_val2 [ k ]		8845430	0					
ANR	8846731	Identifier	ac_val2		8845430	0					
ANR	8846732	Identifier	k		8845430	1					
ANR	8846733	Identifier	scale		8845430	1					
ANR	8846734	IfStatement	if ( ! v -> pquantizer && block [ k << v -> left_blk_sh ] )		8845430	1					
ANR	8846735	Condition	! v -> pquantizer && block [ k << v -> left_blk_sh ]	381:24:6870:6913	8845430	0	True				
ANR	8846736	AndExpression	! v -> pquantizer && block [ k << v -> left_blk_sh ]		8845430	0		&&			
ANR	8846737	UnaryOperationExpression	! v -> pquantizer		8845430	0					
ANR	8846738	UnaryOperator	!		8845430	0					
ANR	8846739	PtrMemberAccess	v -> pquantizer		8845430	1					
ANR	8846740	Identifier	v		8845430	0					
ANR	8846741	Identifier	pquantizer		8845430	1					
ANR	8846742	ArrayIndexing	block [ k << v -> left_blk_sh ]		8845430	1					
ANR	8846743	Identifier	block		8845430	0					
ANR	8846744	ShiftExpression	k << v -> left_blk_sh		8845430	1		<<			
ANR	8846745	Identifier	k		8845430	0					
ANR	8846746	PtrMemberAccess	v -> left_blk_sh		8845430	1					
ANR	8846747	Identifier	v		8845430	0					
ANR	8846748	Identifier	left_blk_sh		8845430	1					
ANR	8846749	ExpressionStatement	block [ k << v -> left_blk_sh ] += ( block [ k << v -> left_blk_sh ] < 0 ) ? - mquant : mquant	383:24:6941:7022	8845430	1	True				
ANR	8846750	AssignmentExpression	block [ k << v -> left_blk_sh ] += ( block [ k << v -> left_blk_sh ] < 0 ) ? - mquant : mquant		8845430	0		+=			
ANR	8846751	ArrayIndexing	block [ k << v -> left_blk_sh ]		8845430	0					
ANR	8846752	Identifier	block		8845430	0					
ANR	8846753	ShiftExpression	k << v -> left_blk_sh		8845430	1		<<			
ANR	8846754	Identifier	k		8845430	0					
ANR	8846755	PtrMemberAccess	v -> left_blk_sh		8845430	1					
ANR	8846756	Identifier	v		8845430	0					
ANR	8846757	Identifier	left_blk_sh		8845430	1					
ANR	8846758	ConditionalExpression	( block [ k << v -> left_blk_sh ] < 0 ) ? - mquant : mquant		8845430	1					
ANR	8846759	Condition	block [ k << v -> left_blk_sh ] < 0		8845430	0					
ANR	8846760	RelationalExpression	block [ k << v -> left_blk_sh ] < 0		8845430	0		<			
ANR	8846761	ArrayIndexing	block [ k << v -> left_blk_sh ]		8845430	0					
ANR	8846762	Identifier	block		8845430	0					
ANR	8846763	ShiftExpression	k << v -> left_blk_sh		8845430	1		<<			
ANR	8846764	Identifier	k		8845430	0					
ANR	8846765	PtrMemberAccess	v -> left_blk_sh		8845430	1					
ANR	8846766	Identifier	v		8845430	0					
ANR	8846767	Identifier	left_blk_sh		8845430	1					
ANR	8846768	PrimaryExpression	0		8845430	1					
ANR	8846769	UnaryOperationExpression	- mquant		8845430	1					
ANR	8846770	UnaryOperator	-		8845430	0					
ANR	8846771	Identifier	mquant		8845430	1					
ANR	8846772	Identifier	mquant		8845430	2					
ANR	8846773	ElseStatement	else		8845430	0					
ANR	8846774	CompoundStatement		383:19:6913:6913	8845430	0					
ANR	8846775	ForStatement	for ( k = 1 ; k < 8 ; k ++ )		8845430	0					
ANR	8846776	ForInit	k = 1 ;	389:21:7094:7099	8845430	0	True				
ANR	8846777	AssignmentExpression	k = 1		8845430	0		=			
ANR	8846778	Identifier	k		8845430	0					
ANR	8846779	PrimaryExpression	1		8845430	1					
ANR	8846780	Condition	k < 8	389:28:7101:7105	8845430	1	True				
ANR	8846781	RelationalExpression	k < 8		8845430	0		<			
ANR	8846782	Identifier	k		8845430	0					
ANR	8846783	PrimaryExpression	8		8845430	1					
ANR	8846784	PostIncDecOperationExpression	k ++	389:35:7108:7110	8845430	2	True				
ANR	8846785	Identifier	k		8845430	0					
ANR	8846786	IncDec	++		8845430	1					
ANR	8846787	CompoundStatement		385:40:6963:6963	8845430	3					
ANR	8846788	ExpressionStatement	block [ k << v -> top_blk_sh ] = ac_val2 [ k + 8 ] * scale	391:20:7136:7186	8845430	0	True				
ANR	8846789	AssignmentExpression	block [ k << v -> top_blk_sh ] = ac_val2 [ k + 8 ] * scale		8845430	0		=			
ANR	8846790	ArrayIndexing	block [ k << v -> top_blk_sh ]		8845430	0					
ANR	8846791	Identifier	block		8845430	0					
ANR	8846792	ShiftExpression	k << v -> top_blk_sh		8845430	1		<<			
ANR	8846793	Identifier	k		8845430	0					
ANR	8846794	PtrMemberAccess	v -> top_blk_sh		8845430	1					
ANR	8846795	Identifier	v		8845430	0					
ANR	8846796	Identifier	top_blk_sh		8845430	1					
ANR	8846797	MultiplicativeExpression	ac_val2 [ k + 8 ] * scale		8845430	1		*			
ANR	8846798	ArrayIndexing	ac_val2 [ k + 8 ]		8845430	0					
ANR	8846799	Identifier	ac_val2		8845430	0					
ANR	8846800	AdditiveExpression	k + 8		8845430	1		+			
ANR	8846801	Identifier	k		8845430	0					
ANR	8846802	PrimaryExpression	8		8845430	1					
ANR	8846803	Identifier	scale		8845430	1					
ANR	8846804	IfStatement	if ( ! v -> pquantizer && block [ k << v -> top_blk_sh ] )		8845430	1					
ANR	8846805	Condition	! v -> pquantizer && block [ k << v -> top_blk_sh ]	393:24:7213:7255	8845430	0	True				
ANR	8846806	AndExpression	! v -> pquantizer && block [ k << v -> top_blk_sh ]		8845430	0		&&			
ANR	8846807	UnaryOperationExpression	! v -> pquantizer		8845430	0					
ANR	8846808	UnaryOperator	!		8845430	0					
ANR	8846809	PtrMemberAccess	v -> pquantizer		8845430	1					
ANR	8846810	Identifier	v		8845430	0					
ANR	8846811	Identifier	pquantizer		8845430	1					
ANR	8846812	ArrayIndexing	block [ k << v -> top_blk_sh ]		8845430	1					
ANR	8846813	Identifier	block		8845430	0					
ANR	8846814	ShiftExpression	k << v -> top_blk_sh		8845430	1		<<			
ANR	8846815	Identifier	k		8845430	0					
ANR	8846816	PtrMemberAccess	v -> top_blk_sh		8845430	1					
ANR	8846817	Identifier	v		8845430	0					
ANR	8846818	Identifier	top_blk_sh		8845430	1					
ANR	8846819	ExpressionStatement	block [ k << v -> top_blk_sh ] += ( block [ k << v -> top_blk_sh ] < 0 ) ? - mquant : mquant	395:24:7283:7362	8845430	1	True				
ANR	8846820	AssignmentExpression	block [ k << v -> top_blk_sh ] += ( block [ k << v -> top_blk_sh ] < 0 ) ? - mquant : mquant		8845430	0		+=			
ANR	8846821	ArrayIndexing	block [ k << v -> top_blk_sh ]		8845430	0					
ANR	8846822	Identifier	block		8845430	0					
ANR	8846823	ShiftExpression	k << v -> top_blk_sh		8845430	1		<<			
ANR	8846824	Identifier	k		8845430	0					
ANR	8846825	PtrMemberAccess	v -> top_blk_sh		8845430	1					
ANR	8846826	Identifier	v		8845430	0					
ANR	8846827	Identifier	top_blk_sh		8845430	1					
ANR	8846828	ConditionalExpression	( block [ k << v -> top_blk_sh ] < 0 ) ? - mquant : mquant		8845430	1					
ANR	8846829	Condition	block [ k << v -> top_blk_sh ] < 0		8845430	0					
ANR	8846830	RelationalExpression	block [ k << v -> top_blk_sh ] < 0		8845430	0		<			
ANR	8846831	ArrayIndexing	block [ k << v -> top_blk_sh ]		8845430	0					
ANR	8846832	Identifier	block		8845430	0					
ANR	8846833	ShiftExpression	k << v -> top_blk_sh		8845430	1		<<			
ANR	8846834	Identifier	k		8845430	0					
ANR	8846835	PtrMemberAccess	v -> top_blk_sh		8845430	1					
ANR	8846836	Identifier	v		8845430	0					
ANR	8846837	Identifier	top_blk_sh		8845430	1					
ANR	8846838	PrimaryExpression	0		8845430	1					
ANR	8846839	UnaryOperationExpression	- mquant		8845430	1					
ANR	8846840	UnaryOperator	-		8845430	0					
ANR	8846841	Identifier	mquant		8845430	1					
ANR	8846842	Identifier	mquant		8845430	2					
ANR	8846843	ExpressionStatement	i = 63	401:12:7411:7417	8845430	1	True				
ANR	8846844	AssignmentExpression	i = 63		8845430	0		=			
ANR	8846845	Identifier	i		8845430	0					
ANR	8846846	PrimaryExpression	63		8845430	1					
ANR	8846847	ExpressionStatement	s -> block_last_index [ n ] = i	407:4:7442:7468	8845430	37	True				
ANR	8846848	AssignmentExpression	s -> block_last_index [ n ] = i		8845430	0		=			
ANR	8846849	ArrayIndexing	s -> block_last_index [ n ]		8845430	0					
ANR	8846850	PtrMemberAccess	s -> block_last_index		8845430	0					
ANR	8846851	Identifier	s		8845430	0					
ANR	8846852	Identifier	block_last_index		8845430	1					
ANR	8846853	Identifier	n		8845430	1					
ANR	8846854	Identifier	i		8845430	1					
ANR	8846855	ReturnStatement	return 0 ;	411:4:7477:7485	8845430	38	True				
ANR	8846856	PrimaryExpression	0		8845430	0					
ANR	8846857	ReturnType	static int		8845430	1					
ANR	8846858	Identifier	vc1_decode_intra_block		8845430	2					
ANR	8846859	ParameterList	"VC1Context * v , int16_t block [ 64 ] , int n , int coded , int mquant , int codingset"		8845430	3					
ANR	8846860	Parameter	VC1Context * v	1:34:34:46	8845430	0	True				
ANR	8846861	ParameterType	VC1Context *		8845430	0					
ANR	8846862	Identifier	v		8845430	1					
ANR	8846863	Parameter	int16_t block [ 64 ]	1:49:49:65	8845430	1	True				
ANR	8846864	ParameterType	int16_t [ 64 ]		8845430	0					
ANR	8846865	Identifier	block		8845430	1					
ANR	8846866	Parameter	int n	1:68:68:72	8845430	2	True				
ANR	8846867	ParameterType	int		8845430	0					
ANR	8846868	Identifier	n		8845430	1					
ANR	8846869	Parameter	int coded	3:34:110:118	8845430	3	True				
ANR	8846870	ParameterType	int		8845430	0					
ANR	8846871	Identifier	coded		8845430	1					
ANR	8846872	Parameter	int mquant	3:45:121:130	8845430	4	True				
ANR	8846873	ParameterType	int		8845430	0					
ANR	8846874	Identifier	mquant		8845430	1					
ANR	8846875	Parameter	int codingset	3:57:133:145	8845430	5	True				
ANR	8846876	ParameterType	int		8845430	0					
ANR	8846877	Identifier	codingset		8845430	1					
ANR	8846878	CFGEntryNode	ENTRY		8845430		True				
ANR	8846879	CFGExitNode	EXIT		8845430		True				
ANR	8846880	Symbol	& v -> s		8845430						
ANR	8846881	Symbol	* v		8845430						
ANR	8846882	Symbol	v -> left_blk_sh		8845430						
ANR	8846883	Symbol	s -> block_wrap		8845430						
ANR	8846884	Symbol	v -> top_blk_sh		8845430						
ANR	8846885	Symbol	v -> a_avail		8845430						
ANR	8846886	Symbol	s -> current_picture		8845430						
ANR	8846887	Symbol	* v -> left_blk_sh		8845430						
ANR	8846888	Symbol	s -> ac_val		8845430						
ANR	8846889	Symbol	* s -> block_wrap		8845430						
ANR	8846890	Symbol	block		8845430						
ANR	8846891	Symbol	v -> s		8845430						
ANR	8846892	Symbol	dc_pred_dir		8845430						
ANR	8846893	Symbol	* v -> zz_8x8		8845430						
ANR	8846894	Symbol	* s -> current_picture . f		8845430						
ANR	8846895	Symbol	dc_val		8845430						
ANR	8846896	Symbol	* mb_pos		8845430						
ANR	8846897	Symbol	* v -> zzi_8x8		8845430						
ANR	8846898	Symbol	* * * v		8845430						
ANR	8846899	Symbol	* v -> top_blk_sh		8845430						
ANR	8846900	Symbol	s -> dsp		8845430						
ANR	8846901	Symbol	* * * s		8845430						
ANR	8846902	Symbol	* * s -> ac_val		8845430						
ANR	8846903	Symbol	& s -> gb		8845430						
ANR	8846904	Symbol	s -> current_picture . f . qscale_table		8845430						
ANR	8846905	Symbol	* s -> y_dc_scale_table		8845430						
ANR	8846906	Symbol	mb_pos		8845430						
ANR	8846907	Symbol	vc1_pred_dc		8845430						
ANR	8846908	Symbol	* s -> current_picture . f . qscale_table		8845430						
ANR	8846909	Symbol	dcdiff		8845430						
ANR	8846910	Symbol	v -> c_avail		8845430						
ANR	8846911	Symbol	skip		8845430						
ANR	8846912	Symbol	* * v		8845430						
ANR	8846913	Symbol	* * s		8845430						
ANR	8846914	Symbol	* * v -> zz_8x8		8845430						
ANR	8846915	Symbol	* * v -> zzi_8x8		8845430						
ANR	8846916	Symbol	s -> y_dc_scale_table		8845430						
ANR	8846917	Symbol	AV_LOG_ERROR		8845430						
ANR	8846918	Symbol	* s -> current_picture		8845430						
ANR	8846919	Symbol	s -> current_picture . f		8845430						
ANR	8846920	Symbol	& v -> s . gb		8845430						
ANR	8846921	Symbol	v -> halfpq		8845430						
ANR	8846922	Symbol	i		8845430						
ANR	8846923	Symbol	k		8845430						
ANR	8846924	Symbol	* s -> ac_val		8845430						
ANR	8846925	Symbol	n		8845430						
ANR	8846926	Symbol	ff_msmp4_dc_luma_vlc		8845430						
ANR	8846927	Symbol	s -> block_last_index		8845430						
ANR	8846928	Symbol	DC_VLC_BITS		8845430						
ANR	8846929	Symbol	s -> dc_table_index		8845430						
ANR	8846930	Symbol	s		8845430						
ANR	8846931	Symbol	v		8845430						
ANR	8846932	Symbol	a_avail		8845430						
ANR	8846933	Symbol	AVERROR_INVALIDDATA		8845430						
ANR	8846934	Symbol	get_vlc2		8845430						
ANR	8846935	Symbol	s -> c_dc_scale_table		8845430						
ANR	8846936	Symbol	* ff_msmp4_dc_chroma_vlc		8845430						
ANR	8846937	Symbol	* * * * v		8845430						
ANR	8846938	Symbol	& value		8845430						
ANR	8846939	Symbol	* mquant		8845430						
ANR	8846940	Symbol	s -> block_index		8845430						
ANR	8846941	Symbol	* q1		8845430						
ANR	8846942	Symbol	get_bits		8845430						
ANR	8846943	Symbol	s -> c_dc_scale		8845430						
ANR	8846944	Symbol	* s -> block_index		8845430						
ANR	8846945	Symbol	* s -> mb_stride		8845430						
ANR	8846946	Symbol	mquant		8845430						
ANR	8846947	Symbol	v -> zz_8x8		8845430						
ANR	8846948	Symbol	& last		8845430						
ANR	8846949	Symbol	v -> fcm		8845430						
ANR	8846950	Symbol	c_avail		8845430						
ANR	8846951	Symbol	ac_val		8845430						
ANR	8846952	Symbol	last		8845430						
ANR	8846953	Symbol	get_bits1		8845430						
ANR	8846954	Symbol	v -> zzi_8x8		8845430						
ANR	8846955	Symbol	s -> mb_x		8845430						
ANR	8846956	Symbol	PROGRESSIVE		8845430						
ANR	8846957	Symbol	s -> mb_y		8845430						
ANR	8846958	Symbol	coded		8845430						
ANR	8846959	Symbol	ac_val2		8845430						
ANR	8846960	Symbol	* * * v -> zz_8x8		8845430						
ANR	8846961	Symbol	s -> avctx		8845430						
ANR	8846962	Symbol	ff_msmp4_dc_luma_vlc [ s -> dc_table_index ] . table		8845430						
ANR	8846963	Symbol	ff_msmp4_dc_chroma_vlc		8845430						
ANR	8846964	Symbol	* ac_val2		8845430						
ANR	8846965	Symbol	use_pred		8845430						
ANR	8846966	Symbol	s -> mb_stride		8845430						
ANR	8846967	Symbol	* ff_msmp4_dc_luma_vlc		8845430						
ANR	8846968	Symbol	scale		8845430						
ANR	8846969	Symbol	* s -> dc_table_index		8845430						
ANR	8846970	Symbol	ff_msmp4_dc_chroma_vlc [ s -> dc_table_index ] . table		8845430						
ANR	8846971	Symbol	codingset		8845430						
ANR	8846972	Symbol	v -> overlap		8845430						
ANR	8846973	Symbol	* s -> c_dc_scale_table		8845430						
ANR	8846974	Symbol	ILACE_FRAME		8845430						
ANR	8846975	Symbol	v -> pquantizer		8845430						
ANR	8846976	Symbol	s -> y_dc_scale		8845430						
ANR	8846977	Symbol	gb		8845430						
ANR	8846978	Symbol	s -> ac_pred		8845430						
ANR	8846979	Symbol	value		8845430						
ANR	8846980	Symbol	q1		8845430						
ANR	8846981	Symbol	q2		8845430						
ANR	8846982	Symbol	* s -> block_last_index		8845430						
ANR	8846983	Symbol	& dc_val		8845430						
ANR	8846984	Symbol	* ff_vc1_dqscale		8845430						
ANR	8846985	Symbol	* ac_val		8845430						
ANR	8846986	Symbol	& skip		8845430						
ANR	8846987	Symbol	* dc_val		8845430						
ANR	8846988	Symbol	& dc_pred_dir		8845430						
ANR	8846989	Symbol	* block		8845430						
ANR	8846990	Symbol	* k		8845430						
ANR	8846991	Symbol	v -> pq		8845430						
ANR	8846992	Symbol	* n		8845430						
ANR	8846993	Symbol	ff_vc1_dqscale		8845430						
ANR	8846994	Symbol	* s		8845430						
