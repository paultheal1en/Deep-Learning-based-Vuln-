command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1621028	File	/home/p4ultr4n/workplace/ReVeal/raw_code/dca_decode_frame_01_1.c								
ANR	1621029	Function	dca_decode_frame	1:0:0:15949							
ANR	1621030	FunctionDef	"dca_decode_frame (AVCodecContext * avctx , void * data , int * got_frame_ptr , AVPacket * avpkt)"		1621029	0					
ANR	1621031	CompoundStatement		5:0:130:15949	1621029	0					
ANR	1621032	IdentifierDeclStatement	const uint8_t * buf = avpkt -> data ;	7:4:137:169	1621029	0	True				
ANR	1621033	IdentifierDecl	* buf = avpkt -> data		1621029	0					
ANR	1621034	IdentifierDeclType	const uint8_t *		1621029	0					
ANR	1621035	Identifier	buf		1621029	1					
ANR	1621036	AssignmentExpression	* buf = avpkt -> data		1621029	2		=			
ANR	1621037	Identifier	buf		1621029	0					
ANR	1621038	PtrMemberAccess	avpkt -> data		1621029	1					
ANR	1621039	Identifier	avpkt		1621029	0					
ANR	1621040	Identifier	data		1621029	1					
ANR	1621041	IdentifierDeclStatement	int buf_size = avpkt -> size ;	9:4:176:202	1621029	1	True				
ANR	1621042	IdentifierDecl	buf_size = avpkt -> size		1621029	0					
ANR	1621043	IdentifierDeclType	int		1621029	0					
ANR	1621044	Identifier	buf_size		1621029	1					
ANR	1621045	AssignmentExpression	buf_size = avpkt -> size		1621029	2		=			
ANR	1621046	Identifier	buf_size		1621029	0					
ANR	1621047	PtrMemberAccess	avpkt -> size		1621029	1					
ANR	1621048	Identifier	avpkt		1621029	0					
ANR	1621049	Identifier	size		1621029	1					
ANR	1621050	IdentifierDeclStatement	int channel_mask ;	11:4:209:225	1621029	2	True				
ANR	1621051	IdentifierDecl	channel_mask		1621029	0					
ANR	1621052	IdentifierDeclType	int		1621029	0					
ANR	1621053	Identifier	channel_mask		1621029	1					
ANR	1621054	IdentifierDeclStatement	int channel_layout ;	13:4:232:250	1621029	3	True				
ANR	1621055	IdentifierDecl	channel_layout		1621029	0					
ANR	1621056	IdentifierDeclType	int		1621029	0					
ANR	1621057	Identifier	channel_layout		1621029	1					
ANR	1621058	IdentifierDeclStatement	int lfe_samples ;	15:4:257:272	1621029	4	True				
ANR	1621059	IdentifierDecl	lfe_samples		1621029	0					
ANR	1621060	IdentifierDeclType	int		1621029	0					
ANR	1621061	Identifier	lfe_samples		1621029	1					
ANR	1621062	IdentifierDeclStatement	int num_core_channels = 0 ;	17:4:279:304	1621029	5	True				
ANR	1621063	IdentifierDecl	num_core_channels = 0		1621029	0					
ANR	1621064	IdentifierDeclType	int		1621029	0					
ANR	1621065	Identifier	num_core_channels		1621029	1					
ANR	1621066	AssignmentExpression	num_core_channels = 0		1621029	2		=			
ANR	1621067	Identifier	num_core_channels		1621029	0					
ANR	1621068	PrimaryExpression	0		1621029	1					
ANR	1621069	IdentifierDeclStatement	"int i , ret ;"	19:4:311:321	1621029	6	True				
ANR	1621070	IdentifierDecl	i		1621029	0					
ANR	1621071	IdentifierDeclType	int		1621029	0					
ANR	1621072	Identifier	i		1621029	1					
ANR	1621073	IdentifierDecl	ret		1621029	1					
ANR	1621074	IdentifierDeclType	int		1621029	0					
ANR	1621075	Identifier	ret		1621029	1					
ANR	1621076	IdentifierDeclStatement	float * * samples_flt ;	21:4:328:347	1621029	7	True				
ANR	1621077	IdentifierDecl	* * samples_flt		1621029	0					
ANR	1621078	IdentifierDeclType	float * *		1621029	0					
ANR	1621079	Identifier	samples_flt		1621029	1					
ANR	1621080	IdentifierDeclStatement	float * src_chan ;	23:4:354:369	1621029	8	True				
ANR	1621081	IdentifierDecl	* src_chan		1621029	0					
ANR	1621082	IdentifierDeclType	float *		1621029	0					
ANR	1621083	Identifier	src_chan		1621029	1					
ANR	1621084	IdentifierDeclStatement	float * dst_chan ;	25:4:376:391	1621029	9	True				
ANR	1621085	IdentifierDecl	* dst_chan		1621029	0					
ANR	1621086	IdentifierDeclType	float *		1621029	0					
ANR	1621087	Identifier	dst_chan		1621029	1					
ANR	1621088	IdentifierDeclStatement	DCAContext * s = avctx -> priv_data ;	27:4:398:430	1621029	10	True				
ANR	1621089	IdentifierDecl	* s = avctx -> priv_data		1621029	0					
ANR	1621090	IdentifierDeclType	DCAContext *		1621029	0					
ANR	1621091	Identifier	s		1621029	1					
ANR	1621092	AssignmentExpression	* s = avctx -> priv_data		1621029	2		=			
ANR	1621093	Identifier	s		1621029	0					
ANR	1621094	PtrMemberAccess	avctx -> priv_data		1621029	1					
ANR	1621095	Identifier	avctx		1621029	0					
ANR	1621096	Identifier	priv_data		1621029	1					
ANR	1621097	IdentifierDeclStatement	int core_ss_end ;	29:4:437:452	1621029	11	True				
ANR	1621098	IdentifierDecl	core_ss_end		1621029	0					
ANR	1621099	IdentifierDeclType	int		1621029	0					
ANR	1621100	Identifier	core_ss_end		1621029	1					
ANR	1621101	IdentifierDeclStatement	"int channels , full_channels ;"	31:4:459:486	1621029	12	True				
ANR	1621102	IdentifierDecl	channels		1621029	0					
ANR	1621103	IdentifierDeclType	int		1621029	0					
ANR	1621104	Identifier	channels		1621029	1					
ANR	1621105	IdentifierDecl	full_channels		1621029	1					
ANR	1621106	IdentifierDeclType	int		1621029	0					
ANR	1621107	Identifier	full_channels		1621029	1					
ANR	1621108	IdentifierDeclStatement	float scale ;	33:4:493:504	1621029	13	True				
ANR	1621109	IdentifierDecl	scale		1621029	0					
ANR	1621110	IdentifierDeclType	float		1621029	0					
ANR	1621111	Identifier	scale		1621029	1					
ANR	1621112	IdentifierDeclStatement	int achan ;	35:4:511:520	1621029	14	True				
ANR	1621113	IdentifierDecl	achan		1621029	0					
ANR	1621114	IdentifierDeclType	int		1621029	0					
ANR	1621115	Identifier	achan		1621029	1					
ANR	1621116	IdentifierDeclStatement	int chset ;	37:4:527:536	1621029	15	True				
ANR	1621117	IdentifierDecl	chset		1621029	0					
ANR	1621118	IdentifierDeclType	int		1621029	0					
ANR	1621119	Identifier	chset		1621029	1					
ANR	1621120	IdentifierDeclStatement	int mask ;	39:4:543:551	1621029	16	True				
ANR	1621121	IdentifierDecl	mask		1621029	0					
ANR	1621122	IdentifierDeclType	int		1621029	0					
ANR	1621123	Identifier	mask		1621029	1					
ANR	1621124	IdentifierDeclStatement	int lavc ;	41:4:558:566	1621029	17	True				
ANR	1621125	IdentifierDecl	lavc		1621029	0					
ANR	1621126	IdentifierDeclType	int		1621029	0					
ANR	1621127	Identifier	lavc		1621029	1					
ANR	1621128	IdentifierDeclStatement	int posn ;	43:4:573:581	1621029	18	True				
ANR	1621129	IdentifierDecl	posn		1621029	0					
ANR	1621130	IdentifierDeclType	int		1621029	0					
ANR	1621131	Identifier	posn		1621029	1					
ANR	1621132	IdentifierDeclStatement	"int j , k ;"	45:4:588:596	1621029	19	True				
ANR	1621133	IdentifierDecl	j		1621029	0					
ANR	1621134	IdentifierDeclType	int		1621029	0					
ANR	1621135	Identifier	j		1621029	1					
ANR	1621136	IdentifierDecl	k		1621029	1					
ANR	1621137	IdentifierDeclType	int		1621029	0					
ANR	1621138	Identifier	k		1621029	1					
ANR	1621139	IdentifierDeclStatement	int endch ;	47:4:603:612	1621029	20	True				
ANR	1621140	IdentifierDecl	endch		1621029	0					
ANR	1621141	IdentifierDeclType	int		1621029	0					
ANR	1621142	Identifier	endch		1621029	1					
ANR	1621143	ExpressionStatement	s -> xch_present = 0	51:4:621:639	1621029	21	True				
ANR	1621144	AssignmentExpression	s -> xch_present = 0		1621029	0		=			
ANR	1621145	PtrMemberAccess	s -> xch_present		1621029	0					
ANR	1621146	Identifier	s		1621029	0					
ANR	1621147	Identifier	xch_present		1621029	1					
ANR	1621148	PrimaryExpression	0		1621029	1					
ANR	1621149	ExpressionStatement	"s -> dca_buffer_size = ff_dca_convert_bitstream ( buf , buf_size , s -> dca_buffer , DCA_MAX_FRAME_SIZE + DCA_MAX_EXSS_HEADER_SIZE )"	55:4:648:821	1621029	22	True				
ANR	1621150	AssignmentExpression	"s -> dca_buffer_size = ff_dca_convert_bitstream ( buf , buf_size , s -> dca_buffer , DCA_MAX_FRAME_SIZE + DCA_MAX_EXSS_HEADER_SIZE )"		1621029	0		=			
ANR	1621151	PtrMemberAccess	s -> dca_buffer_size		1621029	0					
ANR	1621152	Identifier	s		1621029	0					
ANR	1621153	Identifier	dca_buffer_size		1621029	1					
ANR	1621154	CallExpression	"ff_dca_convert_bitstream ( buf , buf_size , s -> dca_buffer , DCA_MAX_FRAME_SIZE + DCA_MAX_EXSS_HEADER_SIZE )"		1621029	1					
ANR	1621155	Callee	ff_dca_convert_bitstream		1621029	0					
ANR	1621156	Identifier	ff_dca_convert_bitstream		1621029	0					
ANR	1621157	ArgumentList	buf		1621029	1					
ANR	1621158	Argument	buf		1621029	0					
ANR	1621159	Identifier	buf		1621029	0					
ANR	1621160	Argument	buf_size		1621029	1					
ANR	1621161	Identifier	buf_size		1621029	0					
ANR	1621162	Argument	s -> dca_buffer		1621029	2					
ANR	1621163	PtrMemberAccess	s -> dca_buffer		1621029	0					
ANR	1621164	Identifier	s		1621029	0					
ANR	1621165	Identifier	dca_buffer		1621029	1					
ANR	1621166	Argument	DCA_MAX_FRAME_SIZE + DCA_MAX_EXSS_HEADER_SIZE		1621029	3					
ANR	1621167	AdditiveExpression	DCA_MAX_FRAME_SIZE + DCA_MAX_EXSS_HEADER_SIZE		1621029	0		+			
ANR	1621168	Identifier	DCA_MAX_FRAME_SIZE		1621029	0					
ANR	1621169	Identifier	DCA_MAX_EXSS_HEADER_SIZE		1621029	1					
ANR	1621170	IfStatement	if ( s -> dca_buffer_size == AVERROR_INVALIDDATA )		1621029	23					
ANR	1621171	Condition	s -> dca_buffer_size == AVERROR_INVALIDDATA	59:8:832:872	1621029	0	True				
ANR	1621172	EqualityExpression	s -> dca_buffer_size == AVERROR_INVALIDDATA		1621029	0		==			
ANR	1621173	PtrMemberAccess	s -> dca_buffer_size		1621029	0					
ANR	1621174	Identifier	s		1621029	0					
ANR	1621175	Identifier	dca_buffer_size		1621029	1					
ANR	1621176	Identifier	AVERROR_INVALIDDATA		1621029	1					
ANR	1621177	CompoundStatement		55:51:744:744	1621029	1					
ANR	1621178	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Not a valid DCA frame\\n"" )"	61:8:886:940	1621029	0	True				
ANR	1621179	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Not a valid DCA frame\\n"" )"		1621029	0					
ANR	1621180	Callee	av_log		1621029	0					
ANR	1621181	Identifier	av_log		1621029	0					
ANR	1621182	ArgumentList	avctx		1621029	1					
ANR	1621183	Argument	avctx		1621029	0					
ANR	1621184	Identifier	avctx		1621029	0					
ANR	1621185	Argument	AV_LOG_ERROR		1621029	1					
ANR	1621186	Identifier	AV_LOG_ERROR		1621029	0					
ANR	1621187	Argument	"""Not a valid DCA frame\\n"""		1621029	2					
ANR	1621188	PrimaryExpression	"""Not a valid DCA frame\\n"""		1621029	0					
ANR	1621189	ExpressionStatement	"init_get_bits ( & s -> gb , s -> dca_buffer , s -> dca_buffer_size * 8 )"	68:4:957:1017	1621029	24	True				
ANR	1621190	CallExpression	"init_get_bits ( & s -> gb , s -> dca_buffer , s -> dca_buffer_size * 8 )"		1621029	0					
ANR	1621191	Callee	init_get_bits		1621029	0					
ANR	1621192	Identifier	init_get_bits		1621029	0					
ANR	1621193	ArgumentList	& s -> gb		1621029	1					
ANR	1621194	Argument	& s -> gb		1621029	0					
ANR	1621195	UnaryOperationExpression	& s -> gb		1621029	0					
ANR	1621196	UnaryOperator	&		1621029	0					
ANR	1621197	PtrMemberAccess	s -> gb		1621029	1					
ANR	1621198	Identifier	s		1621029	0					
ANR	1621199	Identifier	gb		1621029	1					
ANR	1621200	Argument	s -> dca_buffer		1621029	1					
ANR	1621201	PtrMemberAccess	s -> dca_buffer		1621029	0					
ANR	1621202	Identifier	s		1621029	0					
ANR	1621203	Identifier	dca_buffer		1621029	1					
ANR	1621204	Argument	s -> dca_buffer_size * 8		1621029	2					
ANR	1621205	MultiplicativeExpression	s -> dca_buffer_size * 8		1621029	0		*			
ANR	1621206	PtrMemberAccess	s -> dca_buffer_size		1621029	0					
ANR	1621207	Identifier	s		1621029	0					
ANR	1621208	Identifier	dca_buffer_size		1621029	1					
ANR	1621209	PrimaryExpression	8		1621029	1					
ANR	1621210	IfStatement	if ( ( ret = dca_parse_frame_header ( s ) ) < 0 )		1621029	25					
ANR	1621211	Condition	( ret = dca_parse_frame_header ( s ) ) < 0	70:8:1028:1064	1621029	0	True				
ANR	1621212	RelationalExpression	( ret = dca_parse_frame_header ( s ) ) < 0		1621029	0		<			
ANR	1621213	AssignmentExpression	ret = dca_parse_frame_header ( s )		1621029	0		=			
ANR	1621214	Identifier	ret		1621029	0					
ANR	1621215	CallExpression	dca_parse_frame_header ( s )		1621029	1					
ANR	1621216	Callee	dca_parse_frame_header		1621029	0					
ANR	1621217	Identifier	dca_parse_frame_header		1621029	0					
ANR	1621218	ArgumentList	s		1621029	1					
ANR	1621219	Argument	s		1621029	0					
ANR	1621220	Identifier	s		1621029	0					
ANR	1621221	PrimaryExpression	0		1621029	1					
ANR	1621222	CompoundStatement		66:47:936:936	1621029	1					
ANR	1621223	ReturnStatement	return ret ;	74:8:1144:1154	1621029	0	True				
ANR	1621224	Identifier	ret		1621029	0					
ANR	1621225	ExpressionStatement	avctx -> sample_rate = s -> sample_rate	80:4:1211:1246	1621029	26	True				
ANR	1621226	AssignmentExpression	avctx -> sample_rate = s -> sample_rate		1621029	0		=			
ANR	1621227	PtrMemberAccess	avctx -> sample_rate		1621029	0					
ANR	1621228	Identifier	avctx		1621029	0					
ANR	1621229	Identifier	sample_rate		1621029	1					
ANR	1621230	PtrMemberAccess	s -> sample_rate		1621029	1					
ANR	1621231	Identifier	s		1621029	0					
ANR	1621232	Identifier	sample_rate		1621029	1					
ANR	1621233	ExpressionStatement	avctx -> bit_rate = s -> bit_rate	82:4:1253:1285	1621029	27	True				
ANR	1621234	AssignmentExpression	avctx -> bit_rate = s -> bit_rate		1621029	0		=			
ANR	1621235	PtrMemberAccess	avctx -> bit_rate		1621029	0					
ANR	1621236	Identifier	avctx		1621029	0					
ANR	1621237	Identifier	bit_rate		1621029	1					
ANR	1621238	PtrMemberAccess	s -> bit_rate		1621029	1					
ANR	1621239	Identifier	s		1621029	0					
ANR	1621240	Identifier	bit_rate		1621029	1					
ANR	1621241	ExpressionStatement	s -> profile = FF_PROFILE_DTS	86:4:1294:1321	1621029	28	True				
ANR	1621242	AssignmentExpression	s -> profile = FF_PROFILE_DTS		1621029	0		=			
ANR	1621243	PtrMemberAccess	s -> profile		1621029	0					
ANR	1621244	Identifier	s		1621029	0					
ANR	1621245	Identifier	profile		1621029	1					
ANR	1621246	Identifier	FF_PROFILE_DTS		1621029	1					
ANR	1621247	ForStatement	for ( i = 0 ; i < ( s -> sample_blocks / 8 ) ; i ++ )		1621029	29					
ANR	1621248	ForInit	i = 0 ;	90:9:1335:1340	1621029	0	True				
ANR	1621249	AssignmentExpression	i = 0		1621029	0		=			
ANR	1621250	Identifier	i		1621029	0					
ANR	1621251	PrimaryExpression	0		1621029	1					
ANR	1621252	Condition	i < ( s -> sample_blocks / 8 )	90:16:1342:1367	1621029	1	True				
ANR	1621253	RelationalExpression	i < ( s -> sample_blocks / 8 )		1621029	0		<			
ANR	1621254	Identifier	i		1621029	0					
ANR	1621255	MultiplicativeExpression	s -> sample_blocks / 8		1621029	1		/			
ANR	1621256	PtrMemberAccess	s -> sample_blocks		1621029	0					
ANR	1621257	Identifier	s		1621029	0					
ANR	1621258	Identifier	sample_blocks		1621029	1					
ANR	1621259	PrimaryExpression	8		1621029	1					
ANR	1621260	PostIncDecOperationExpression	i ++	90:44:1370:1372	1621029	2	True				
ANR	1621261	Identifier	i		1621029	0					
ANR	1621262	IncDec	++		1621029	1					
ANR	1621263	CompoundStatement		86:49:1244:1244	1621029	3					
ANR	1621264	IfStatement	"if ( ( ret = dca_decode_block ( s , 0 , i ) ) )"		1621029	0					
ANR	1621265	Condition	"ret = dca_decode_block ( s , 0 , i )"	92:12:1390:1422	1621029	0	True				
ANR	1621266	AssignmentExpression	"ret = dca_decode_block ( s , 0 , i )"		1621029	0		=			
ANR	1621267	Identifier	ret		1621029	0					
ANR	1621268	CallExpression	"dca_decode_block ( s , 0 , i )"		1621029	1					
ANR	1621269	Callee	dca_decode_block		1621029	0					
ANR	1621270	Identifier	dca_decode_block		1621029	0					
ANR	1621271	ArgumentList	s		1621029	1					
ANR	1621272	Argument	s		1621029	0					
ANR	1621273	Identifier	s		1621029	0					
ANR	1621274	Argument	0		1621029	1					
ANR	1621275	PrimaryExpression	0		1621029	0					
ANR	1621276	Argument	i		1621029	2					
ANR	1621277	Identifier	i		1621029	0					
ANR	1621278	CompoundStatement		88:47:1294:1294	1621029	1					
ANR	1621279	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""error decoding block\\n"" )"	94:12:1440:1493	1621029	0	True				
ANR	1621280	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""error decoding block\\n"" )"		1621029	0					
ANR	1621281	Callee	av_log		1621029	0					
ANR	1621282	Identifier	av_log		1621029	0					
ANR	1621283	ArgumentList	avctx		1621029	1					
ANR	1621284	Argument	avctx		1621029	0					
ANR	1621285	Identifier	avctx		1621029	0					
ANR	1621286	Argument	AV_LOG_ERROR		1621029	1					
ANR	1621287	Identifier	AV_LOG_ERROR		1621029	0					
ANR	1621288	Argument	"""error decoding block\\n"""		1621029	2					
ANR	1621289	PrimaryExpression	"""error decoding block\\n"""		1621029	0					
ANR	1621290	ReturnStatement	return ret ;	96:12:1508:1518	1621029	1	True				
ANR	1621291	Identifier	ret		1621029	0					
ANR	1621292	ExpressionStatement	num_core_channels = s -> prim_channels	106:4:1631:1667	1621029	30	True				
ANR	1621293	AssignmentExpression	num_core_channels = s -> prim_channels		1621029	0		=			
ANR	1621294	Identifier	num_core_channels		1621029	0					
ANR	1621295	PtrMemberAccess	s -> prim_channels		1621029	1					
ANR	1621296	Identifier	s		1621029	0					
ANR	1621297	Identifier	prim_channels		1621029	1					
ANR	1621298	IfStatement	if ( s -> ext_coding )		1621029	31					
ANR	1621299	Condition	s -> ext_coding	110:8:1680:1692	1621029	0	True				
ANR	1621300	PtrMemberAccess	s -> ext_coding		1621029	0					
ANR	1621301	Identifier	s		1621029	0					
ANR	1621302	Identifier	ext_coding		1621029	1					
ANR	1621303	ExpressionStatement	s -> core_ext_mask = dca_ext_audio_descr_mask [ s -> ext_descr ]	112:8:1704:1761	1621029	1	True				
ANR	1621304	AssignmentExpression	s -> core_ext_mask = dca_ext_audio_descr_mask [ s -> ext_descr ]		1621029	0		=			
ANR	1621305	PtrMemberAccess	s -> core_ext_mask		1621029	0					
ANR	1621306	Identifier	s		1621029	0					
ANR	1621307	Identifier	core_ext_mask		1621029	1					
ANR	1621308	ArrayIndexing	dca_ext_audio_descr_mask [ s -> ext_descr ]		1621029	1					
ANR	1621309	Identifier	dca_ext_audio_descr_mask		1621029	0					
ANR	1621310	PtrMemberAccess	s -> ext_descr		1621029	1					
ANR	1621311	Identifier	s		1621029	0					
ANR	1621312	Identifier	ext_descr		1621029	1					
ANR	1621313	ElseStatement	else		1621029	0					
ANR	1621314	ExpressionStatement	s -> core_ext_mask = 0	116:8:1782:1802	1621029	0	True				
ANR	1621315	AssignmentExpression	s -> core_ext_mask = 0		1621029	0		=			
ANR	1621316	PtrMemberAccess	s -> core_ext_mask		1621029	0					
ANR	1621317	Identifier	s		1621029	0					
ANR	1621318	Identifier	core_ext_mask		1621029	1					
ANR	1621319	PrimaryExpression	0		1621029	1					
ANR	1621320	ExpressionStatement	"core_ss_end = FFMIN ( s -> frame_size , s -> dca_buffer_size ) * 8"	120:4:1811:1869	1621029	32	True				
ANR	1621321	AssignmentExpression	"core_ss_end = FFMIN ( s -> frame_size , s -> dca_buffer_size ) * 8"		1621029	0		=			
ANR	1621322	Identifier	core_ss_end		1621029	0					
ANR	1621323	MultiplicativeExpression	"FFMIN ( s -> frame_size , s -> dca_buffer_size ) * 8"		1621029	1		*			
ANR	1621324	CallExpression	"FFMIN ( s -> frame_size , s -> dca_buffer_size )"		1621029	0					
ANR	1621325	Callee	FFMIN		1621029	0					
ANR	1621326	Identifier	FFMIN		1621029	0					
ANR	1621327	ArgumentList	s -> frame_size		1621029	1					
ANR	1621328	Argument	s -> frame_size		1621029	0					
ANR	1621329	PtrMemberAccess	s -> frame_size		1621029	0					
ANR	1621330	Identifier	s		1621029	0					
ANR	1621331	Identifier	frame_size		1621029	1					
ANR	1621332	Argument	s -> dca_buffer_size		1621029	1					
ANR	1621333	PtrMemberAccess	s -> dca_buffer_size		1621029	0					
ANR	1621334	Identifier	s		1621029	0					
ANR	1621335	Identifier	dca_buffer_size		1621029	1					
ANR	1621336	PrimaryExpression	8		1621029	1					
ANR	1621337	IfStatement	if ( s -> core_ext_mask < 0 || s -> core_ext_mask & ( DCA_EXT_XCH | DCA_EXT_XXCH ) )		1621029	33					
ANR	1621338	Condition	s -> core_ext_mask < 0 || s -> core_ext_mask & ( DCA_EXT_XCH | DCA_EXT_XXCH )	128:8:1990:2060	1621029	0	True				
ANR	1621339	OrExpression	s -> core_ext_mask < 0 || s -> core_ext_mask & ( DCA_EXT_XCH | DCA_EXT_XXCH )		1621029	0		||			
ANR	1621340	RelationalExpression	s -> core_ext_mask < 0		1621029	0		<			
ANR	1621341	PtrMemberAccess	s -> core_ext_mask		1621029	0					
ANR	1621342	Identifier	s		1621029	0					
ANR	1621343	Identifier	core_ext_mask		1621029	1					
ANR	1621344	PrimaryExpression	0		1621029	1					
ANR	1621345	BitAndExpression	s -> core_ext_mask & ( DCA_EXT_XCH | DCA_EXT_XXCH )		1621029	1		&			
ANR	1621346	PtrMemberAccess	s -> core_ext_mask		1621029	0					
ANR	1621347	Identifier	s		1621029	0					
ANR	1621348	Identifier	core_ext_mask		1621029	1					
ANR	1621349	InclusiveOrExpression	DCA_EXT_XCH | DCA_EXT_XXCH		1621029	1		|			
ANR	1621350	Identifier	DCA_EXT_XCH		1621029	0					
ANR	1621351	Identifier	DCA_EXT_XXCH		1621029	1					
ANR	1621352	CompoundStatement		124:81:1932:1932	1621029	1					
ANR	1621353	ExpressionStatement	"s -> core_ext_mask = FFMAX ( s -> core_ext_mask , 0 )"	136:8:2195:2240	1621029	0	True				
ANR	1621354	AssignmentExpression	"s -> core_ext_mask = FFMAX ( s -> core_ext_mask , 0 )"		1621029	0		=			
ANR	1621355	PtrMemberAccess	s -> core_ext_mask		1621029	0					
ANR	1621356	Identifier	s		1621029	0					
ANR	1621357	Identifier	core_ext_mask		1621029	1					
ANR	1621358	CallExpression	"FFMAX ( s -> core_ext_mask , 0 )"		1621029	1					
ANR	1621359	Callee	FFMAX		1621029	0					
ANR	1621360	Identifier	FFMAX		1621029	0					
ANR	1621361	ArgumentList	s -> core_ext_mask		1621029	1					
ANR	1621362	Argument	s -> core_ext_mask		1621029	0					
ANR	1621363	PtrMemberAccess	s -> core_ext_mask		1621029	0					
ANR	1621364	Identifier	s		1621029	0					
ANR	1621365	Identifier	core_ext_mask		1621029	1					
ANR	1621366	Argument	0		1621029	1					
ANR	1621367	PrimaryExpression	0		1621029	0					
ANR	1621368	ExpressionStatement	"skip_bits_long ( & s -> gb , ( - get_bits_count ( & s -> gb ) ) & 31 )"	142:8:2321:2375	1621029	1	True				
ANR	1621369	CallExpression	"skip_bits_long ( & s -> gb , ( - get_bits_count ( & s -> gb ) ) & 31 )"		1621029	0					
ANR	1621370	Callee	skip_bits_long		1621029	0					
ANR	1621371	Identifier	skip_bits_long		1621029	0					
ANR	1621372	ArgumentList	& s -> gb		1621029	1					
ANR	1621373	Argument	& s -> gb		1621029	0					
ANR	1621374	UnaryOperationExpression	& s -> gb		1621029	0					
ANR	1621375	UnaryOperator	&		1621029	0					
ANR	1621376	PtrMemberAccess	s -> gb		1621029	1					
ANR	1621377	Identifier	s		1621029	0					
ANR	1621378	Identifier	gb		1621029	1					
ANR	1621379	Argument	( - get_bits_count ( & s -> gb ) ) & 31		1621029	1					
ANR	1621380	BitAndExpression	( - get_bits_count ( & s -> gb ) ) & 31		1621029	0		&			
ANR	1621381	UnaryOperationExpression	- get_bits_count ( & s -> gb )		1621029	0					
ANR	1621382	UnaryOperator	-		1621029	0					
ANR	1621383	CallExpression	get_bits_count ( & s -> gb )		1621029	1					
ANR	1621384	Callee	get_bits_count		1621029	0					
ANR	1621385	Identifier	get_bits_count		1621029	0					
ANR	1621386	ArgumentList	& s -> gb		1621029	1					
ANR	1621387	Argument	& s -> gb		1621029	0					
ANR	1621388	UnaryOperationExpression	& s -> gb		1621029	0					
ANR	1621389	UnaryOperator	&		1621029	0					
ANR	1621390	PtrMemberAccess	s -> gb		1621029	1					
ANR	1621391	Identifier	s		1621029	0					
ANR	1621392	Identifier	gb		1621029	1					
ANR	1621393	PrimaryExpression	31		1621029	1					
ANR	1621394	WhileStatement	while ( core_ss_end - get_bits_count ( & s -> gb ) >= 32 )		1621029	2					
ANR	1621395	Condition	core_ss_end - get_bits_count ( & s -> gb ) >= 32	146:15:2395:2436	1621029	0	True				
ANR	1621396	RelationalExpression	core_ss_end - get_bits_count ( & s -> gb ) >= 32		1621029	0		>=			
ANR	1621397	AdditiveExpression	core_ss_end - get_bits_count ( & s -> gb )		1621029	0		-			
ANR	1621398	Identifier	core_ss_end		1621029	0					
ANR	1621399	CallExpression	get_bits_count ( & s -> gb )		1621029	1					
ANR	1621400	Callee	get_bits_count		1621029	0					
ANR	1621401	Identifier	get_bits_count		1621029	0					
ANR	1621402	ArgumentList	& s -> gb		1621029	1					
ANR	1621403	Argument	& s -> gb		1621029	0					
ANR	1621404	UnaryOperationExpression	& s -> gb		1621029	0					
ANR	1621405	UnaryOperator	&		1621029	0					
ANR	1621406	PtrMemberAccess	s -> gb		1621029	1					
ANR	1621407	Identifier	s		1621029	0					
ANR	1621408	Identifier	gb		1621029	1					
ANR	1621409	PrimaryExpression	32		1621029	1					
ANR	1621410	CompoundStatement		144:12:2323:2364	1621029	1					
ANR	1621411	IdentifierDeclStatement	"uint32_t bits = get_bits_long ( & s -> gb , 32 ) ;"	148:12:2454:2495	1621029	0	True				
ANR	1621412	IdentifierDecl	"bits = get_bits_long ( & s -> gb , 32 )"		1621029	0					
ANR	1621413	IdentifierDeclType	uint32_t		1621029	0					
ANR	1621414	Identifier	bits		1621029	1					
ANR	1621415	AssignmentExpression	"bits = get_bits_long ( & s -> gb , 32 )"		1621029	2		=			
ANR	1621416	Identifier	bits		1621029	0					
ANR	1621417	CallExpression	"get_bits_long ( & s -> gb , 32 )"		1621029	1					
ANR	1621418	Callee	get_bits_long		1621029	0					
ANR	1621419	Identifier	get_bits_long		1621029	0					
ANR	1621420	ArgumentList	& s -> gb		1621029	1					
ANR	1621421	Argument	& s -> gb		1621029	0					
ANR	1621422	UnaryOperationExpression	& s -> gb		1621029	0					
ANR	1621423	UnaryOperator	&		1621029	0					
ANR	1621424	PtrMemberAccess	s -> gb		1621029	1					
ANR	1621425	Identifier	s		1621029	0					
ANR	1621426	Identifier	gb		1621029	1					
ANR	1621427	Argument	32		1621029	1					
ANR	1621428	PrimaryExpression	32		1621029	0					
ANR	1621429	SwitchStatement	switch ( bits )		1621029	1					
ANR	1621430	Condition	bits	152:20:2520:2523	1621029	0	True				
ANR	1621431	Identifier	bits		1621029	0					
ANR	1621432	CompoundStatement		148:26:2395:2395	1621029	1					
ANR	1621433	Label	case 0x5a5a5a5a :	154:12:2541:2556	1621029	0	True				
ANR	1621434	CompoundStatement		152:16:2446:2470	1621029	1					
ANR	1621435	IdentifierDeclStatement	"int ext_amode , xch_fsize ;"	156:16:2577:2601	1621029	0	True				
ANR	1621436	IdentifierDecl	ext_amode		1621029	0					
ANR	1621437	IdentifierDeclType	int		1621029	0					
ANR	1621438	Identifier	ext_amode		1621029	1					
ANR	1621439	IdentifierDecl	xch_fsize		1621029	1					
ANR	1621440	IdentifierDeclType	int		1621029	0					
ANR	1621441	Identifier	xch_fsize		1621029	1					
ANR	1621442	ExpressionStatement	s -> xch_base_channel = s -> prim_channels	160:16:2622:2660	1621029	1	True				
ANR	1621443	AssignmentExpression	s -> xch_base_channel = s -> prim_channels		1621029	0		=			
ANR	1621444	PtrMemberAccess	s -> xch_base_channel		1621029	0					
ANR	1621445	Identifier	s		1621029	0					
ANR	1621446	Identifier	xch_base_channel		1621029	1					
ANR	1621447	PtrMemberAccess	s -> prim_channels		1621029	1					
ANR	1621448	Identifier	s		1621029	0					
ANR	1621449	Identifier	prim_channels		1621029	1					
ANR	1621450	ExpressionStatement	"xch_fsize = show_bits ( & s -> gb , 10 )"	166:16:2744:2777	1621029	2	True				
ANR	1621451	AssignmentExpression	"xch_fsize = show_bits ( & s -> gb , 10 )"		1621029	0		=			
ANR	1621452	Identifier	xch_fsize		1621029	0					
ANR	1621453	CallExpression	"show_bits ( & s -> gb , 10 )"		1621029	1					
ANR	1621454	Callee	show_bits		1621029	0					
ANR	1621455	Identifier	show_bits		1621029	0					
ANR	1621456	ArgumentList	& s -> gb		1621029	1					
ANR	1621457	Argument	& s -> gb		1621029	0					
ANR	1621458	UnaryOperationExpression	& s -> gb		1621029	0					
ANR	1621459	UnaryOperator	&		1621029	0					
ANR	1621460	PtrMemberAccess	s -> gb		1621029	1					
ANR	1621461	Identifier	s		1621029	0					
ANR	1621462	Identifier	gb		1621029	1					
ANR	1621463	Argument	10		1621029	1					
ANR	1621464	PrimaryExpression	10		1621029	0					
ANR	1621465	IfStatement	if ( ( s -> frame_size != ( get_bits_count ( & s -> gb ) >> 3 ) - 4 + xch_fsize ) && ( s -> frame_size != ( get_bits_count ( & s -> gb ) >> 3 ) - 4 + xch_fsize + 1 ) )		1621029	3					
ANR	1621466	Condition	( s -> frame_size != ( get_bits_count ( & s -> gb ) >> 3 ) - 4 + xch_fsize ) && ( s -> frame_size != ( get_bits_count ( & s -> gb ) >> 3 ) - 4 + xch_fsize + 1 )	168:20:2800:2956	1621029	0	True				
ANR	1621467	AndExpression	( s -> frame_size != ( get_bits_count ( & s -> gb ) >> 3 ) - 4 + xch_fsize ) && ( s -> frame_size != ( get_bits_count ( & s -> gb ) >> 3 ) - 4 + xch_fsize + 1 )		1621029	0		&&			
ANR	1621468	EqualityExpression	s -> frame_size != ( get_bits_count ( & s -> gb ) >> 3 ) - 4 + xch_fsize		1621029	0		!=			
ANR	1621469	PtrMemberAccess	s -> frame_size		1621029	0					
ANR	1621470	Identifier	s		1621029	0					
ANR	1621471	Identifier	frame_size		1621029	1					
ANR	1621472	AdditiveExpression	( get_bits_count ( & s -> gb ) >> 3 ) - 4 + xch_fsize		1621029	1		-			
ANR	1621473	ShiftExpression	get_bits_count ( & s -> gb ) >> 3		1621029	0		>>			
ANR	1621474	CallExpression	get_bits_count ( & s -> gb )		1621029	0					
ANR	1621475	Callee	get_bits_count		1621029	0					
ANR	1621476	Identifier	get_bits_count		1621029	0					
ANR	1621477	ArgumentList	& s -> gb		1621029	1					
ANR	1621478	Argument	& s -> gb		1621029	0					
ANR	1621479	UnaryOperationExpression	& s -> gb		1621029	0					
ANR	1621480	UnaryOperator	&		1621029	0					
ANR	1621481	PtrMemberAccess	s -> gb		1621029	1					
ANR	1621482	Identifier	s		1621029	0					
ANR	1621483	Identifier	gb		1621029	1					
ANR	1621484	PrimaryExpression	3		1621029	1					
ANR	1621485	AdditiveExpression	4 + xch_fsize		1621029	1		+			
ANR	1621486	PrimaryExpression	4		1621029	0					
ANR	1621487	Identifier	xch_fsize		1621029	1					
ANR	1621488	EqualityExpression	s -> frame_size != ( get_bits_count ( & s -> gb ) >> 3 ) - 4 + xch_fsize + 1		1621029	1		!=			
ANR	1621489	PtrMemberAccess	s -> frame_size		1621029	0					
ANR	1621490	Identifier	s		1621029	0					
ANR	1621491	Identifier	frame_size		1621029	1					
ANR	1621492	AdditiveExpression	( get_bits_count ( & s -> gb ) >> 3 ) - 4 + xch_fsize + 1		1621029	1		-			
ANR	1621493	ShiftExpression	get_bits_count ( & s -> gb ) >> 3		1621029	0		>>			
ANR	1621494	CallExpression	get_bits_count ( & s -> gb )		1621029	0					
ANR	1621495	Callee	get_bits_count		1621029	0					
ANR	1621496	Identifier	get_bits_count		1621029	0					
ANR	1621497	ArgumentList	& s -> gb		1621029	1					
ANR	1621498	Argument	& s -> gb		1621029	0					
ANR	1621499	UnaryOperationExpression	& s -> gb		1621029	0					
ANR	1621500	UnaryOperator	&		1621029	0					
ANR	1621501	PtrMemberAccess	s -> gb		1621029	1					
ANR	1621502	Identifier	s		1621029	0					
ANR	1621503	Identifier	gb		1621029	1					
ANR	1621504	PrimaryExpression	3		1621029	1					
ANR	1621505	AdditiveExpression	4 + xch_fsize + 1		1621029	1		+			
ANR	1621506	PrimaryExpression	4		1621029	0					
ANR	1621507	AdditiveExpression	xch_fsize + 1		1621029	1		+			
ANR	1621508	Identifier	xch_fsize		1621029	0					
ANR	1621509	PrimaryExpression	1		1621029	1					
ANR	1621510	ContinueStatement	continue ;	172:20:2980:2988	1621029	1	True				
ANR	1621511	ExpressionStatement	"skip_bits ( & s -> gb , 10 )"	178:16:3081:3102	1621029	4	True				
ANR	1621512	CallExpression	"skip_bits ( & s -> gb , 10 )"		1621029	0					
ANR	1621513	Callee	skip_bits		1621029	0					
ANR	1621514	Identifier	skip_bits		1621029	0					
ANR	1621515	ArgumentList	& s -> gb		1621029	1					
ANR	1621516	Argument	& s -> gb		1621029	0					
ANR	1621517	UnaryOperationExpression	& s -> gb		1621029	0					
ANR	1621518	UnaryOperator	&		1621029	0					
ANR	1621519	PtrMemberAccess	s -> gb		1621029	1					
ANR	1621520	Identifier	s		1621029	0					
ANR	1621521	Identifier	gb		1621029	1					
ANR	1621522	Argument	10		1621029	1					
ANR	1621523	PrimaryExpression	10		1621029	0					
ANR	1621524	ExpressionStatement	s -> core_ext_mask |= DCA_EXT_XCH	182:16:3123:3154	1621029	5	True				
ANR	1621525	AssignmentExpression	s -> core_ext_mask |= DCA_EXT_XCH		1621029	0		|=			
ANR	1621526	PtrMemberAccess	s -> core_ext_mask		1621029	0					
ANR	1621527	Identifier	s		1621029	0					
ANR	1621528	Identifier	core_ext_mask		1621029	1					
ANR	1621529	Identifier	DCA_EXT_XCH		1621029	1					
ANR	1621530	IfStatement	"if ( ( ext_amode = get_bits ( & s -> gb , 4 ) ) != 1 )"		1621029	6					
ANR	1621531	Condition	"( ext_amode = get_bits ( & s -> gb , 4 ) ) != 1"	190:20:3326:3363	1621029	0	True				
ANR	1621532	EqualityExpression	"( ext_amode = get_bits ( & s -> gb , 4 ) ) != 1"		1621029	0		!=			
ANR	1621533	AssignmentExpression	"ext_amode = get_bits ( & s -> gb , 4 )"		1621029	0		=			
ANR	1621534	Identifier	ext_amode		1621029	0					
ANR	1621535	CallExpression	"get_bits ( & s -> gb , 4 )"		1621029	1					
ANR	1621536	Callee	get_bits		1621029	0					
ANR	1621537	Identifier	get_bits		1621029	0					
ANR	1621538	ArgumentList	& s -> gb		1621029	1					
ANR	1621539	Argument	& s -> gb		1621029	0					
ANR	1621540	UnaryOperationExpression	& s -> gb		1621029	0					
ANR	1621541	UnaryOperator	&		1621029	0					
ANR	1621542	PtrMemberAccess	s -> gb		1621029	1					
ANR	1621543	Identifier	s		1621029	0					
ANR	1621544	Identifier	gb		1621029	1					
ANR	1621545	Argument	4		1621029	1					
ANR	1621546	PrimaryExpression	4		1621029	0					
ANR	1621547	PrimaryExpression	1		1621029	1					
ANR	1621548	CompoundStatement		186:60:3235:3235	1621029	1					
ANR	1621549	Statement	av_log	192:20:3389:3394	1621029	0	True				
ANR	1621550	Statement	(	192:26:3395:3395	1621029	1	True				
ANR	1621551	Statement	avctx	192:27:3396:3400	1621029	2	True				
ANR	1621552	Statement	","	192:32:3401:3401	1621029	3	True				
ANR	1621553	Statement	AV_LOG_ERROR	192:34:3403:3414	1621029	4	True				
ANR	1621554	Statement	","	192:46:3415:3415	1621029	5	True				
ANR	1621555	Statement	"""XCh extension amode %d not"""	192:48:3417:3444	1621029	6	True				
ANR	1621556	Statement	""" supported!\\n"""	194:27:3474:3488	1621029	7	True				
ANR	1621557	Statement	","	194:42:3489:3489	1621029	8	True				
ANR	1621558	Statement	ext_amode	194:44:3491:3499	1621029	9	True				
ANR	1621559	Statement	)	194:53:3500:3500	1621029	10	True				
ANR	1621560	ExpressionStatement		194:54:3501:3501	1621029	11	True				
ANR	1621561	ContinueStatement	continue ;	196:20:3524:3532	1621029	12	True				
ANR	1621562	IfStatement	if ( s -> xch_base_channel < 2 )		1621029	7					
ANR	1621563	Condition	s -> xch_base_channel < 2	202:20:3576:3598	1621029	0	True				
ANR	1621564	RelationalExpression	s -> xch_base_channel < 2		1621029	0		<			
ANR	1621565	PtrMemberAccess	s -> xch_base_channel		1621029	0					
ANR	1621566	Identifier	s		1621029	0					
ANR	1621567	Identifier	xch_base_channel		1621029	1					
ANR	1621568	PrimaryExpression	2		1621029	1					
ANR	1621569	CompoundStatement		198:45:3470:3470	1621029	1					
ANR	1621570	ExpressionStatement	"av_log_ask_for_sample ( avctx , ""XCh with fewer than 2 base channels is not supported\\n"" )"	204:20:3624:3710	1621029	0	True				
ANR	1621571	CallExpression	"av_log_ask_for_sample ( avctx , ""XCh with fewer than 2 base channels is not supported\\n"" )"		1621029	0					
ANR	1621572	Callee	av_log_ask_for_sample		1621029	0					
ANR	1621573	Identifier	av_log_ask_for_sample		1621029	0					
ANR	1621574	ArgumentList	avctx		1621029	1					
ANR	1621575	Argument	avctx		1621029	0					
ANR	1621576	Identifier	avctx		1621029	0					
ANR	1621577	Argument	"""XCh with fewer than 2 base channels is not supported\\n"""		1621029	1					
ANR	1621578	PrimaryExpression	"""XCh with fewer than 2 base channels is not supported\\n"""		1621029	0					
ANR	1621579	ContinueStatement	continue ;	206:20:3733:3741	1621029	1	True				
ANR	1621580	ExpressionStatement	"dca_parse_audio_coding_header ( s , s -> xch_base_channel , 0 )"	214:16:3847:3903	1621029	8	True				
ANR	1621581	CallExpression	"dca_parse_audio_coding_header ( s , s -> xch_base_channel , 0 )"		1621029	0					
ANR	1621582	Callee	dca_parse_audio_coding_header		1621029	0					
ANR	1621583	Identifier	dca_parse_audio_coding_header		1621029	0					
ANR	1621584	ArgumentList	s		1621029	1					
ANR	1621585	Argument	s		1621029	0					
ANR	1621586	Identifier	s		1621029	0					
ANR	1621587	Argument	s -> xch_base_channel		1621029	1					
ANR	1621588	PtrMemberAccess	s -> xch_base_channel		1621029	0					
ANR	1621589	Identifier	s		1621029	0					
ANR	1621590	Identifier	xch_base_channel		1621029	1					
ANR	1621591	Argument	0		1621029	2					
ANR	1621592	PrimaryExpression	0		1621029	0					
ANR	1621593	ForStatement	for ( i = 0 ; i < ( s -> sample_blocks / 8 ) ; i ++ )		1621029	9					
ANR	1621594	ForInit	i = 0 ;	218:21:3929:3934	1621029	0	True				
ANR	1621595	AssignmentExpression	i = 0		1621029	0		=			
ANR	1621596	Identifier	i		1621029	0					
ANR	1621597	PrimaryExpression	0		1621029	1					
ANR	1621598	Condition	i < ( s -> sample_blocks / 8 )	218:28:3936:3961	1621029	1	True				
ANR	1621599	RelationalExpression	i < ( s -> sample_blocks / 8 )		1621029	0		<			
ANR	1621600	Identifier	i		1621029	0					
ANR	1621601	MultiplicativeExpression	s -> sample_blocks / 8		1621029	1		/			
ANR	1621602	PtrMemberAccess	s -> sample_blocks		1621029	0					
ANR	1621603	Identifier	s		1621029	0					
ANR	1621604	Identifier	sample_blocks		1621029	1					
ANR	1621605	PrimaryExpression	8		1621029	1					
ANR	1621606	PostIncDecOperationExpression	i ++	218:56:3964:3966	1621029	2	True				
ANR	1621607	Identifier	i		1621029	0					
ANR	1621608	IncDec	++		1621029	1					
ANR	1621609	IfStatement	"if ( ( ret = dca_decode_block ( s , s -> xch_base_channel , i ) ) )"		1621029	3					
ANR	1621610	Condition	"ret = dca_decode_block ( s , s -> xch_base_channel , i )"	220:24:3994:4044	1621029	0	True				
ANR	1621611	AssignmentExpression	"ret = dca_decode_block ( s , s -> xch_base_channel , i )"		1621029	0		=			
ANR	1621612	Identifier	ret		1621029	0					
ANR	1621613	CallExpression	"dca_decode_block ( s , s -> xch_base_channel , i )"		1621029	1					
ANR	1621614	Callee	dca_decode_block		1621029	0					
ANR	1621615	Identifier	dca_decode_block		1621029	0					
ANR	1621616	ArgumentList	s		1621029	1					
ANR	1621617	Argument	s		1621029	0					
ANR	1621618	Identifier	s		1621029	0					
ANR	1621619	Argument	s -> xch_base_channel		1621029	1					
ANR	1621620	PtrMemberAccess	s -> xch_base_channel		1621029	0					
ANR	1621621	Identifier	s		1621029	0					
ANR	1621622	Identifier	xch_base_channel		1621029	1					
ANR	1621623	Argument	i		1621029	2					
ANR	1621624	Identifier	i		1621029	0					
ANR	1621625	CompoundStatement		216:77:3916:3916	1621029	1					
ANR	1621626	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""error decoding XCh extension\\n"" )"	222:24:4074:4135	1621029	0	True				
ANR	1621627	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""error decoding XCh extension\\n"" )"		1621029	0					
ANR	1621628	Callee	av_log		1621029	0					
ANR	1621629	Identifier	av_log		1621029	0					
ANR	1621630	ArgumentList	avctx		1621029	1					
ANR	1621631	Argument	avctx		1621029	0					
ANR	1621632	Identifier	avctx		1621029	0					
ANR	1621633	Argument	AV_LOG_ERROR		1621029	1					
ANR	1621634	Identifier	AV_LOG_ERROR		1621029	0					
ANR	1621635	Argument	"""error decoding XCh extension\\n"""		1621029	2					
ANR	1621636	PrimaryExpression	"""error decoding XCh extension\\n"""		1621029	0					
ANR	1621637	ContinueStatement	continue ;	224:24:4162:4170	1621029	1	True				
ANR	1621638	ExpressionStatement	s -> xch_present = 1	230:16:4214:4232	1621029	10	True				
ANR	1621639	AssignmentExpression	s -> xch_present = 1		1621029	0		=			
ANR	1621640	PtrMemberAccess	s -> xch_present		1621029	0					
ANR	1621641	Identifier	s		1621029	0					
ANR	1621642	Identifier	xch_present		1621029	1					
ANR	1621643	PrimaryExpression	1		1621029	1					
ANR	1621644	BreakStatement	break ;	232:16:4251:4256	1621029	11	True				
ANR	1621645	Label	case 0x47004a03 :	236:12:4286:4301	1621029	2	True				
ANR	1621646	ExpressionStatement	s -> core_ext_mask |= DCA_EXT_XXCH	244:16:4529:4561	1621029	3	True				
ANR	1621647	AssignmentExpression	s -> core_ext_mask |= DCA_EXT_XXCH		1621029	0		|=			
ANR	1621648	PtrMemberAccess	s -> core_ext_mask		1621029	0					
ANR	1621649	Identifier	s		1621029	0					
ANR	1621650	Identifier	core_ext_mask		1621029	1					
ANR	1621651	Identifier	DCA_EXT_XXCH		1621029	1					
ANR	1621652	ExpressionStatement	dca_xxch_decode_frame ( s )	246:16:4580:4604	1621029	4	True				
ANR	1621653	CallExpression	dca_xxch_decode_frame ( s )		1621029	0					
ANR	1621654	Callee	dca_xxch_decode_frame		1621029	0					
ANR	1621655	Identifier	dca_xxch_decode_frame		1621029	0					
ANR	1621656	ArgumentList	s		1621029	1					
ANR	1621657	Argument	s		1621029	0					
ANR	1621658	Identifier	s		1621029	0					
ANR	1621659	BreakStatement	break ;	248:16:4623:4628	1621029	5	True				
ANR	1621660	Label	case 0x1d95f262 :	252:12:4645:4660	1621029	6	True				
ANR	1621661	CompoundStatement		250:16:4550:4589	1621029	7					
ANR	1621662	IdentifierDeclStatement	"int fsize96 = show_bits ( & s -> gb , 12 ) + 1 ;"	254:16:4681:4720	1621029	0	True				
ANR	1621663	IdentifierDecl	"fsize96 = show_bits ( & s -> gb , 12 ) + 1"		1621029	0					
ANR	1621664	IdentifierDeclType	int		1621029	0					
ANR	1621665	Identifier	fsize96		1621029	1					
ANR	1621666	AssignmentExpression	"fsize96 = show_bits ( & s -> gb , 12 ) + 1"		1621029	2		=			
ANR	1621667	Identifier	fsize96		1621029	0					
ANR	1621668	AdditiveExpression	"show_bits ( & s -> gb , 12 ) + 1"		1621029	1		+			
ANR	1621669	CallExpression	"show_bits ( & s -> gb , 12 )"		1621029	0					
ANR	1621670	Callee	show_bits		1621029	0					
ANR	1621671	Identifier	show_bits		1621029	0					
ANR	1621672	ArgumentList	& s -> gb		1621029	1					
ANR	1621673	Argument	& s -> gb		1621029	0					
ANR	1621674	UnaryOperationExpression	& s -> gb		1621029	0					
ANR	1621675	UnaryOperator	&		1621029	0					
ANR	1621676	PtrMemberAccess	s -> gb		1621029	1					
ANR	1621677	Identifier	s		1621029	0					
ANR	1621678	Identifier	gb		1621029	1					
ANR	1621679	Argument	12		1621029	1					
ANR	1621680	PrimaryExpression	12		1621029	0					
ANR	1621681	PrimaryExpression	1		1621029	1					
ANR	1621682	IfStatement	if ( s -> frame_size != ( get_bits_count ( & s -> gb ) >> 3 ) - 4 + fsize96 )		1621029	1					
ANR	1621683	Condition	s -> frame_size != ( get_bits_count ( & s -> gb ) >> 3 ) - 4 + fsize96	256:20:4743:4802	1621029	0	True				
ANR	1621684	EqualityExpression	s -> frame_size != ( get_bits_count ( & s -> gb ) >> 3 ) - 4 + fsize96		1621029	0		!=			
ANR	1621685	PtrMemberAccess	s -> frame_size		1621029	0					
ANR	1621686	Identifier	s		1621029	0					
ANR	1621687	Identifier	frame_size		1621029	1					
ANR	1621688	AdditiveExpression	( get_bits_count ( & s -> gb ) >> 3 ) - 4 + fsize96		1621029	1		-			
ANR	1621689	ShiftExpression	get_bits_count ( & s -> gb ) >> 3		1621029	0		>>			
ANR	1621690	CallExpression	get_bits_count ( & s -> gb )		1621029	0					
ANR	1621691	Callee	get_bits_count		1621029	0					
ANR	1621692	Identifier	get_bits_count		1621029	0					
ANR	1621693	ArgumentList	& s -> gb		1621029	1					
ANR	1621694	Argument	& s -> gb		1621029	0					
ANR	1621695	UnaryOperationExpression	& s -> gb		1621029	0					
ANR	1621696	UnaryOperator	&		1621029	0					
ANR	1621697	PtrMemberAccess	s -> gb		1621029	1					
ANR	1621698	Identifier	s		1621029	0					
ANR	1621699	Identifier	gb		1621029	1					
ANR	1621700	PrimaryExpression	3		1621029	1					
ANR	1621701	AdditiveExpression	4 + fsize96		1621029	1		+			
ANR	1621702	PrimaryExpression	4		1621029	0					
ANR	1621703	Identifier	fsize96		1621029	1					
ANR	1621704	ContinueStatement	continue ;	258:20:4826:4834	1621029	1	True				
ANR	1621705	ExpressionStatement	"av_log ( avctx , AV_LOG_DEBUG , ""X96 extension found at %d bits\\n"" , get_bits_count ( & s -> gb ) )"	262:16:4855:4966	1621029	2	True				
ANR	1621706	CallExpression	"av_log ( avctx , AV_LOG_DEBUG , ""X96 extension found at %d bits\\n"" , get_bits_count ( & s -> gb ) )"		1621029	0					
ANR	1621707	Callee	av_log		1621029	0					
ANR	1621708	Identifier	av_log		1621029	0					
ANR	1621709	ArgumentList	avctx		1621029	1					
ANR	1621710	Argument	avctx		1621029	0					
ANR	1621711	Identifier	avctx		1621029	0					
ANR	1621712	Argument	AV_LOG_DEBUG		1621029	1					
ANR	1621713	Identifier	AV_LOG_DEBUG		1621029	0					
ANR	1621714	Argument	"""X96 extension found at %d bits\\n"""		1621029	2					
ANR	1621715	PrimaryExpression	"""X96 extension found at %d bits\\n"""		1621029	0					
ANR	1621716	Argument	get_bits_count ( & s -> gb )		1621029	3					
ANR	1621717	CallExpression	get_bits_count ( & s -> gb )		1621029	0					
ANR	1621718	Callee	get_bits_count		1621029	0					
ANR	1621719	Identifier	get_bits_count		1621029	0					
ANR	1621720	ArgumentList	& s -> gb		1621029	1					
ANR	1621721	Argument	& s -> gb		1621029	0					
ANR	1621722	UnaryOperationExpression	& s -> gb		1621029	0					
ANR	1621723	UnaryOperator	&		1621029	0					
ANR	1621724	PtrMemberAccess	s -> gb		1621029	1					
ANR	1621725	Identifier	s		1621029	0					
ANR	1621726	Identifier	gb		1621029	1					
ANR	1621727	ExpressionStatement	"skip_bits ( & s -> gb , 12 )"	266:16:4985:5006	1621029	3	True				
ANR	1621728	CallExpression	"skip_bits ( & s -> gb , 12 )"		1621029	0					
ANR	1621729	Callee	skip_bits		1621029	0					
ANR	1621730	Identifier	skip_bits		1621029	0					
ANR	1621731	ArgumentList	& s -> gb		1621029	1					
ANR	1621732	Argument	& s -> gb		1621029	0					
ANR	1621733	UnaryOperationExpression	& s -> gb		1621029	0					
ANR	1621734	UnaryOperator	&		1621029	0					
ANR	1621735	PtrMemberAccess	s -> gb		1621029	1					
ANR	1621736	Identifier	s		1621029	0					
ANR	1621737	Identifier	gb		1621029	1					
ANR	1621738	Argument	12		1621029	1					
ANR	1621739	PrimaryExpression	12		1621029	0					
ANR	1621740	ExpressionStatement	"av_log ( avctx , AV_LOG_DEBUG , ""FSIZE96 = %d bytes\\n"" , fsize96 )"	268:16:5025:5085	1621029	4	True				
ANR	1621741	CallExpression	"av_log ( avctx , AV_LOG_DEBUG , ""FSIZE96 = %d bytes\\n"" , fsize96 )"		1621029	0					
ANR	1621742	Callee	av_log		1621029	0					
ANR	1621743	Identifier	av_log		1621029	0					
ANR	1621744	ArgumentList	avctx		1621029	1					
ANR	1621745	Argument	avctx		1621029	0					
ANR	1621746	Identifier	avctx		1621029	0					
ANR	1621747	Argument	AV_LOG_DEBUG		1621029	1					
ANR	1621748	Identifier	AV_LOG_DEBUG		1621029	0					
ANR	1621749	Argument	"""FSIZE96 = %d bytes\\n"""		1621029	2					
ANR	1621750	PrimaryExpression	"""FSIZE96 = %d bytes\\n"""		1621029	0					
ANR	1621751	Argument	fsize96		1621029	3					
ANR	1621752	Identifier	fsize96		1621029	0					
ANR	1621753	ExpressionStatement	"av_log ( avctx , AV_LOG_DEBUG , ""REVNO = %d\\n"" , get_bits ( & s -> gb , 4 ) )"	270:16:5104:5168	1621029	5	True				
ANR	1621754	CallExpression	"av_log ( avctx , AV_LOG_DEBUG , ""REVNO = %d\\n"" , get_bits ( & s -> gb , 4 ) )"		1621029	0					
ANR	1621755	Callee	av_log		1621029	0					
ANR	1621756	Identifier	av_log		1621029	0					
ANR	1621757	ArgumentList	avctx		1621029	1					
ANR	1621758	Argument	avctx		1621029	0					
ANR	1621759	Identifier	avctx		1621029	0					
ANR	1621760	Argument	AV_LOG_DEBUG		1621029	1					
ANR	1621761	Identifier	AV_LOG_DEBUG		1621029	0					
ANR	1621762	Argument	"""REVNO = %d\\n"""		1621029	2					
ANR	1621763	PrimaryExpression	"""REVNO = %d\\n"""		1621029	0					
ANR	1621764	Argument	"get_bits ( & s -> gb , 4 )"		1621029	3					
ANR	1621765	CallExpression	"get_bits ( & s -> gb , 4 )"		1621029	0					
ANR	1621766	Callee	get_bits		1621029	0					
ANR	1621767	Identifier	get_bits		1621029	0					
ANR	1621768	ArgumentList	& s -> gb		1621029	1					
ANR	1621769	Argument	& s -> gb		1621029	0					
ANR	1621770	UnaryOperationExpression	& s -> gb		1621029	0					
ANR	1621771	UnaryOperator	&		1621029	0					
ANR	1621772	PtrMemberAccess	s -> gb		1621029	1					
ANR	1621773	Identifier	s		1621029	0					
ANR	1621774	Identifier	gb		1621029	1					
ANR	1621775	Argument	4		1621029	1					
ANR	1621776	PrimaryExpression	4		1621029	0					
ANR	1621777	ExpressionStatement	s -> core_ext_mask |= DCA_EXT_X96	274:16:5189:5220	1621029	6	True				
ANR	1621778	AssignmentExpression	s -> core_ext_mask |= DCA_EXT_X96		1621029	0		|=			
ANR	1621779	PtrMemberAccess	s -> core_ext_mask		1621029	0					
ANR	1621780	Identifier	s		1621029	0					
ANR	1621781	Identifier	core_ext_mask		1621029	1					
ANR	1621782	Identifier	DCA_EXT_X96		1621029	1					
ANR	1621783	BreakStatement	break ;	276:16:5239:5244	1621029	7	True				
ANR	1621784	ExpressionStatement	"skip_bits_long ( & s -> gb , ( - get_bits_count ( & s -> gb ) ) & 31 )"	284:12:5291:5345	1621029	2	True				
ANR	1621785	CallExpression	"skip_bits_long ( & s -> gb , ( - get_bits_count ( & s -> gb ) ) & 31 )"		1621029	0					
ANR	1621786	Callee	skip_bits_long		1621029	0					
ANR	1621787	Identifier	skip_bits_long		1621029	0					
ANR	1621788	ArgumentList	& s -> gb		1621029	1					
ANR	1621789	Argument	& s -> gb		1621029	0					
ANR	1621790	UnaryOperationExpression	& s -> gb		1621029	0					
ANR	1621791	UnaryOperator	&		1621029	0					
ANR	1621792	PtrMemberAccess	s -> gb		1621029	1					
ANR	1621793	Identifier	s		1621029	0					
ANR	1621794	Identifier	gb		1621029	1					
ANR	1621795	Argument	( - get_bits_count ( & s -> gb ) ) & 31		1621029	1					
ANR	1621796	BitAndExpression	( - get_bits_count ( & s -> gb ) ) & 31		1621029	0		&			
ANR	1621797	UnaryOperationExpression	- get_bits_count ( & s -> gb )		1621029	0					
ANR	1621798	UnaryOperator	-		1621029	0					
ANR	1621799	CallExpression	get_bits_count ( & s -> gb )		1621029	1					
ANR	1621800	Callee	get_bits_count		1621029	0					
ANR	1621801	Identifier	get_bits_count		1621029	0					
ANR	1621802	ArgumentList	& s -> gb		1621029	1					
ANR	1621803	Argument	& s -> gb		1621029	0					
ANR	1621804	UnaryOperationExpression	& s -> gb		1621029	0					
ANR	1621805	UnaryOperator	&		1621029	0					
ANR	1621806	PtrMemberAccess	s -> gb		1621029	1					
ANR	1621807	Identifier	s		1621029	0					
ANR	1621808	Identifier	gb		1621029	1					
ANR	1621809	PrimaryExpression	31		1621029	1					
ANR	1621810	ElseStatement	else		1621029	0					
ANR	1621811	CompoundStatement		284:11:5239:5239	1621029	0					
ANR	1621812	ExpressionStatement	"skip_bits_long ( & s -> gb , core_ss_end - get_bits_count ( & s -> gb ) )"	292:8:5457:5517	1621029	0	True				
ANR	1621813	CallExpression	"skip_bits_long ( & s -> gb , core_ss_end - get_bits_count ( & s -> gb ) )"		1621029	0					
ANR	1621814	Callee	skip_bits_long		1621029	0					
ANR	1621815	Identifier	skip_bits_long		1621029	0					
ANR	1621816	ArgumentList	& s -> gb		1621029	1					
ANR	1621817	Argument	& s -> gb		1621029	0					
ANR	1621818	UnaryOperationExpression	& s -> gb		1621029	0					
ANR	1621819	UnaryOperator	&		1621029	0					
ANR	1621820	PtrMemberAccess	s -> gb		1621029	1					
ANR	1621821	Identifier	s		1621029	0					
ANR	1621822	Identifier	gb		1621029	1					
ANR	1621823	Argument	core_ss_end - get_bits_count ( & s -> gb )		1621029	1					
ANR	1621824	AdditiveExpression	core_ss_end - get_bits_count ( & s -> gb )		1621029	0		-			
ANR	1621825	Identifier	core_ss_end		1621029	0					
ANR	1621826	CallExpression	get_bits_count ( & s -> gb )		1621029	1					
ANR	1621827	Callee	get_bits_count		1621029	0					
ANR	1621828	Identifier	get_bits_count		1621029	0					
ANR	1621829	ArgumentList	& s -> gb		1621029	1					
ANR	1621830	Argument	& s -> gb		1621029	0					
ANR	1621831	UnaryOperationExpression	& s -> gb		1621029	0					
ANR	1621832	UnaryOperator	&		1621029	0					
ANR	1621833	PtrMemberAccess	s -> gb		1621029	1					
ANR	1621834	Identifier	s		1621029	0					
ANR	1621835	Identifier	gb		1621029	1					
ANR	1621836	IfStatement	if ( s -> core_ext_mask & DCA_EXT_X96 )		1621029	34					
ANR	1621837	Condition	s -> core_ext_mask & DCA_EXT_X96	298:8:5537:5566	1621029	0	True				
ANR	1621838	BitAndExpression	s -> core_ext_mask & DCA_EXT_X96		1621029	0		&			
ANR	1621839	PtrMemberAccess	s -> core_ext_mask		1621029	0					
ANR	1621840	Identifier	s		1621029	0					
ANR	1621841	Identifier	core_ext_mask		1621029	1					
ANR	1621842	Identifier	DCA_EXT_X96		1621029	1					
ANR	1621843	ExpressionStatement	s -> profile = FF_PROFILE_DTS_96_24	300:8:5578:5611	1621029	1	True				
ANR	1621844	AssignmentExpression	s -> profile = FF_PROFILE_DTS_96_24		1621029	0		=			
ANR	1621845	PtrMemberAccess	s -> profile		1621029	0					
ANR	1621846	Identifier	s		1621029	0					
ANR	1621847	Identifier	profile		1621029	1					
ANR	1621848	Identifier	FF_PROFILE_DTS_96_24		1621029	1					
ANR	1621849	ElseStatement	else		1621029	0					
ANR	1621850	IfStatement	if ( s -> core_ext_mask & ( DCA_EXT_XCH | DCA_EXT_XXCH ) )		1621029	0					
ANR	1621851	Condition	s -> core_ext_mask & ( DCA_EXT_XCH | DCA_EXT_XXCH )	302:13:5627:5673	1621029	0	True				
ANR	1621852	BitAndExpression	s -> core_ext_mask & ( DCA_EXT_XCH | DCA_EXT_XXCH )		1621029	0		&			
ANR	1621853	PtrMemberAccess	s -> core_ext_mask		1621029	0					
ANR	1621854	Identifier	s		1621029	0					
ANR	1621855	Identifier	core_ext_mask		1621029	1					
ANR	1621856	InclusiveOrExpression	DCA_EXT_XCH | DCA_EXT_XXCH		1621029	1		|			
ANR	1621857	Identifier	DCA_EXT_XCH		1621029	0					
ANR	1621858	Identifier	DCA_EXT_XXCH		1621029	1					
ANR	1621859	ExpressionStatement	s -> profile = FF_PROFILE_DTS_ES	304:8:5685:5715	1621029	1	True				
ANR	1621860	AssignmentExpression	s -> profile = FF_PROFILE_DTS_ES		1621029	0		=			
ANR	1621861	PtrMemberAccess	s -> profile		1621029	0					
ANR	1621862	Identifier	s		1621029	0					
ANR	1621863	Identifier	profile		1621029	1					
ANR	1621864	Identifier	FF_PROFILE_DTS_ES		1621029	1					
ANR	1621865	IfStatement	"if ( s -> dca_buffer_size - s -> frame_size > 32 && get_bits_long ( & s -> gb , 32 ) == DCA_HD_MARKER )"		1621029	35					
ANR	1621866	Condition	"s -> dca_buffer_size - s -> frame_size > 32 && get_bits_long ( & s -> gb , 32 ) == DCA_HD_MARKER"	310:8:5764:5857	1621029	0	True				
ANR	1621867	AndExpression	"s -> dca_buffer_size - s -> frame_size > 32 && get_bits_long ( & s -> gb , 32 ) == DCA_HD_MARKER"		1621029	0		&&			
ANR	1621868	RelationalExpression	s -> dca_buffer_size - s -> frame_size > 32		1621029	0		>			
ANR	1621869	AdditiveExpression	s -> dca_buffer_size - s -> frame_size		1621029	0		-			
ANR	1621870	PtrMemberAccess	s -> dca_buffer_size		1621029	0					
ANR	1621871	Identifier	s		1621029	0					
ANR	1621872	Identifier	dca_buffer_size		1621029	1					
ANR	1621873	PtrMemberAccess	s -> frame_size		1621029	1					
ANR	1621874	Identifier	s		1621029	0					
ANR	1621875	Identifier	frame_size		1621029	1					
ANR	1621876	PrimaryExpression	32		1621029	1					
ANR	1621877	EqualityExpression	"get_bits_long ( & s -> gb , 32 ) == DCA_HD_MARKER"		1621029	1		==			
ANR	1621878	CallExpression	"get_bits_long ( & s -> gb , 32 )"		1621029	0					
ANR	1621879	Callee	get_bits_long		1621029	0					
ANR	1621880	Identifier	get_bits_long		1621029	0					
ANR	1621881	ArgumentList	& s -> gb		1621029	1					
ANR	1621882	Argument	& s -> gb		1621029	0					
ANR	1621883	UnaryOperationExpression	& s -> gb		1621029	0					
ANR	1621884	UnaryOperator	&		1621029	0					
ANR	1621885	PtrMemberAccess	s -> gb		1621029	1					
ANR	1621886	Identifier	s		1621029	0					
ANR	1621887	Identifier	gb		1621029	1					
ANR	1621888	Argument	32		1621029	1					
ANR	1621889	PrimaryExpression	32		1621029	0					
ANR	1621890	Identifier	DCA_HD_MARKER		1621029	1					
ANR	1621891	ExpressionStatement	dca_exss_parse_header ( s )	314:8:5869:5893	1621029	1	True				
ANR	1621892	CallExpression	dca_exss_parse_header ( s )		1621029	0					
ANR	1621893	Callee	dca_exss_parse_header		1621029	0					
ANR	1621894	Identifier	dca_exss_parse_header		1621029	0					
ANR	1621895	ArgumentList	s		1621029	1					
ANR	1621896	Argument	s		1621029	0					
ANR	1621897	Identifier	s		1621029	0					
ANR	1621898	ExpressionStatement	avctx -> profile = s -> profile	318:4:5902:5929	1621029	36	True				
ANR	1621899	AssignmentExpression	avctx -> profile = s -> profile		1621029	0		=			
ANR	1621900	PtrMemberAccess	avctx -> profile		1621029	0					
ANR	1621901	Identifier	avctx		1621029	0					
ANR	1621902	Identifier	profile		1621029	1					
ANR	1621903	PtrMemberAccess	s -> profile		1621029	1					
ANR	1621904	Identifier	s		1621029	0					
ANR	1621905	Identifier	profile		1621029	1					
ANR	1621906	ExpressionStatement	full_channels = channels = s -> prim_channels + ! ! s -> lfe	322:4:5938:5992	1621029	37	True				
ANR	1621907	AssignmentExpression	full_channels = channels = s -> prim_channels + ! ! s -> lfe		1621029	0		=			
ANR	1621908	Identifier	full_channels		1621029	0					
ANR	1621909	AssignmentExpression	channels = s -> prim_channels + ! ! s -> lfe		1621029	1		=			
ANR	1621910	Identifier	channels		1621029	0					
ANR	1621911	AdditiveExpression	s -> prim_channels + ! ! s -> lfe		1621029	1		+			
ANR	1621912	PtrMemberAccess	s -> prim_channels		1621029	0					
ANR	1621913	Identifier	s		1621029	0					
ANR	1621914	Identifier	prim_channels		1621029	1					
ANR	1621915	UnaryOperationExpression	! ! s -> lfe		1621029	1					
ANR	1621916	UnaryOperator	!		1621029	0					
ANR	1621917	UnaryOperationExpression	! s -> lfe		1621029	1					
ANR	1621918	UnaryOperator	!		1621029	0					
ANR	1621919	PtrMemberAccess	s -> lfe		1621029	1					
ANR	1621920	Identifier	s		1621029	0					
ANR	1621921	Identifier	lfe		1621029	1					
ANR	1621922	IfStatement	if ( ! ( s -> core_ext_mask & DCA_EXT_XXCH ) || ( s -> core_ext_mask & DCA_EXT_XXCH && avctx -> request_channels > 0 && avctx -> request_channels < num_core_channels + ! ! s -> lfe + s -> xxch_chset_nch [ 0 ] ) )		1621029	38					
ANR	1621923	Condition	! ( s -> core_ext_mask & DCA_EXT_XXCH ) || ( s -> core_ext_mask & DCA_EXT_XXCH && avctx -> request_channels > 0 && avctx -> request_channels < num_core_channels + ! ! s -> lfe + s -> xxch_chset_nch [ 0 ] )	330:8:6144:6361	1621029	0	True				
ANR	1621924	OrExpression	! ( s -> core_ext_mask & DCA_EXT_XXCH ) || ( s -> core_ext_mask & DCA_EXT_XXCH && avctx -> request_channels > 0 && avctx -> request_channels < num_core_channels + ! ! s -> lfe + s -> xxch_chset_nch [ 0 ] )		1621029	0		||			
ANR	1621925	UnaryOperationExpression	! ( s -> core_ext_mask & DCA_EXT_XXCH )		1621029	0					
ANR	1621926	UnaryOperator	!		1621029	0					
ANR	1621927	BitAndExpression	s -> core_ext_mask & DCA_EXT_XXCH		1621029	1		&			
ANR	1621928	PtrMemberAccess	s -> core_ext_mask		1621029	0					
ANR	1621929	Identifier	s		1621029	0					
ANR	1621930	Identifier	core_ext_mask		1621029	1					
ANR	1621931	Identifier	DCA_EXT_XXCH		1621029	1					
ANR	1621932	AndExpression	s -> core_ext_mask & DCA_EXT_XXCH && avctx -> request_channels > 0 && avctx -> request_channels < num_core_channels + ! ! s -> lfe + s -> xxch_chset_nch [ 0 ]		1621029	1		&&			
ANR	1621933	BitAndExpression	s -> core_ext_mask & DCA_EXT_XXCH		1621029	0		&			
ANR	1621934	PtrMemberAccess	s -> core_ext_mask		1621029	0					
ANR	1621935	Identifier	s		1621029	0					
ANR	1621936	Identifier	core_ext_mask		1621029	1					
ANR	1621937	Identifier	DCA_EXT_XXCH		1621029	1					
ANR	1621938	AndExpression	avctx -> request_channels > 0 && avctx -> request_channels < num_core_channels + ! ! s -> lfe + s -> xxch_chset_nch [ 0 ]		1621029	1		&&			
ANR	1621939	RelationalExpression	avctx -> request_channels > 0		1621029	0		>			
ANR	1621940	PtrMemberAccess	avctx -> request_channels		1621029	0					
ANR	1621941	Identifier	avctx		1621029	0					
ANR	1621942	Identifier	request_channels		1621029	1					
ANR	1621943	PrimaryExpression	0		1621029	1					
ANR	1621944	RelationalExpression	avctx -> request_channels < num_core_channels + ! ! s -> lfe + s -> xxch_chset_nch [ 0 ]		1621029	1		<			
ANR	1621945	PtrMemberAccess	avctx -> request_channels		1621029	0					
ANR	1621946	Identifier	avctx		1621029	0					
ANR	1621947	Identifier	request_channels		1621029	1					
ANR	1621948	AdditiveExpression	num_core_channels + ! ! s -> lfe + s -> xxch_chset_nch [ 0 ]		1621029	1		+			
ANR	1621949	Identifier	num_core_channels		1621029	0					
ANR	1621950	AdditiveExpression	! ! s -> lfe + s -> xxch_chset_nch [ 0 ]		1621029	1		+			
ANR	1621951	UnaryOperationExpression	! ! s -> lfe		1621029	0					
ANR	1621952	UnaryOperator	!		1621029	0					
ANR	1621953	UnaryOperationExpression	! s -> lfe		1621029	1					
ANR	1621954	UnaryOperator	!		1621029	0					
ANR	1621955	PtrMemberAccess	s -> lfe		1621029	1					
ANR	1621956	Identifier	s		1621029	0					
ANR	1621957	Identifier	lfe		1621029	1					
ANR	1621958	ArrayIndexing	s -> xxch_chset_nch [ 0 ]		1621029	1					
ANR	1621959	PtrMemberAccess	s -> xxch_chset_nch		1621029	0					
ANR	1621960	Identifier	s		1621029	0					
ANR	1621961	Identifier	xxch_chset_nch		1621029	1					
ANR	1621962	PrimaryExpression	0		1621029	1					
ANR	1621963	CompoundStatement		334:4:6238:6238	1621029	1					
ANR	1621964	IfStatement	if ( s -> amode < 16 )		1621029	0					
ANR	1621965	Condition	s -> amode < 16	340:12:6423:6435	1621029	0	True				
ANR	1621966	RelationalExpression	s -> amode < 16		1621029	0		<			
ANR	1621967	PtrMemberAccess	s -> amode		1621029	0					
ANR	1621968	Identifier	s		1621029	0					
ANR	1621969	Identifier	amode		1621029	1					
ANR	1621970	PrimaryExpression	16		1621029	1					
ANR	1621971	CompoundStatement		336:27:6307:6307	1621029	1					
ANR	1621972	ExpressionStatement	avctx -> channel_layout = dca_core_channel_layout [ s -> amode ]	342:12:6453:6510	1621029	0	True				
ANR	1621973	AssignmentExpression	avctx -> channel_layout = dca_core_channel_layout [ s -> amode ]		1621029	0		=			
ANR	1621974	PtrMemberAccess	avctx -> channel_layout		1621029	0					
ANR	1621975	Identifier	avctx		1621029	0					
ANR	1621976	Identifier	channel_layout		1621029	1					
ANR	1621977	ArrayIndexing	dca_core_channel_layout [ s -> amode ]		1621029	1					
ANR	1621978	Identifier	dca_core_channel_layout		1621029	0					
ANR	1621979	PtrMemberAccess	s -> amode		1621029	1					
ANR	1621980	Identifier	s		1621029	0					
ANR	1621981	Identifier	amode		1621029	1					
ANR	1621982	IfStatement	if ( s -> xch_present && ( ! avctx -> request_channels || avctx -> request_channels > num_core_channels + ! ! s -> lfe ) )		1621029	1					
ANR	1621983	Condition	s -> xch_present && ( ! avctx -> request_channels || avctx -> request_channels > num_core_channels + ! ! s -> lfe )	346:16:6531:6704	1621029	0	True				
ANR	1621984	AndExpression	s -> xch_present && ( ! avctx -> request_channels || avctx -> request_channels > num_core_channels + ! ! s -> lfe )		1621029	0		&&			
ANR	1621985	PtrMemberAccess	s -> xch_present		1621029	0					
ANR	1621986	Identifier	s		1621029	0					
ANR	1621987	Identifier	xch_present		1621029	1					
ANR	1621988	OrExpression	! avctx -> request_channels || avctx -> request_channels > num_core_channels + ! ! s -> lfe		1621029	1		||			
ANR	1621989	UnaryOperationExpression	! avctx -> request_channels		1621029	0					
ANR	1621990	UnaryOperator	!		1621029	0					
ANR	1621991	PtrMemberAccess	avctx -> request_channels		1621029	1					
ANR	1621992	Identifier	avctx		1621029	0					
ANR	1621993	Identifier	request_channels		1621029	1					
ANR	1621994	RelationalExpression	avctx -> request_channels > num_core_channels + ! ! s -> lfe		1621029	1		>			
ANR	1621995	PtrMemberAccess	avctx -> request_channels		1621029	0					
ANR	1621996	Identifier	avctx		1621029	0					
ANR	1621997	Identifier	request_channels		1621029	1					
ANR	1621998	AdditiveExpression	num_core_channels + ! ! s -> lfe		1621029	1		+			
ANR	1621999	Identifier	num_core_channels		1621029	0					
ANR	1622000	UnaryOperationExpression	! ! s -> lfe		1621029	1					
ANR	1622001	UnaryOperator	!		1621029	0					
ANR	1622002	UnaryOperationExpression	! s -> lfe		1621029	1					
ANR	1622003	UnaryOperator	!		1621029	0					
ANR	1622004	PtrMemberAccess	s -> lfe		1621029	1					
ANR	1622005	Identifier	s		1621029	0					
ANR	1622006	Identifier	lfe		1621029	1					
ANR	1622007	CompoundStatement		346:68:6576:6576	1621029	1					
ANR	1622008	ExpressionStatement	avctx -> channel_layout |= AV_CH_BACK_CENTER	352:16:6726:6768	1621029	0	True				
ANR	1622009	AssignmentExpression	avctx -> channel_layout |= AV_CH_BACK_CENTER		1621029	0		|=			
ANR	1622010	PtrMemberAccess	avctx -> channel_layout		1621029	0					
ANR	1622011	Identifier	avctx		1621029	0					
ANR	1622012	Identifier	channel_layout		1621029	1					
ANR	1622013	Identifier	AV_CH_BACK_CENTER		1621029	1					
ANR	1622014	IfStatement	if ( s -> lfe )		1621029	1					
ANR	1622015	Condition	s -> lfe	354:20:6791:6796	1621029	0	True				
ANR	1622016	PtrMemberAccess	s -> lfe		1621029	0					
ANR	1622017	Identifier	s		1621029	0					
ANR	1622018	Identifier	lfe		1621029	1					
ANR	1622019	CompoundStatement		350:28:6668:6668	1621029	1					
ANR	1622020	ExpressionStatement	avctx -> channel_layout |= AV_CH_LOW_FREQUENCY	356:20:6822:6866	1621029	0	True				
ANR	1622021	AssignmentExpression	avctx -> channel_layout |= AV_CH_LOW_FREQUENCY		1621029	0		|=			
ANR	1622022	PtrMemberAccess	avctx -> channel_layout		1621029	0					
ANR	1622023	Identifier	avctx		1621029	0					
ANR	1622024	Identifier	channel_layout		1621029	1					
ANR	1622025	Identifier	AV_CH_LOW_FREQUENCY		1621029	1					
ANR	1622026	ExpressionStatement	s -> channel_order_tab = dca_channel_reorder_lfe_xch [ s -> amode ]	358:20:6889:6949	1621029	1	True				
ANR	1622027	AssignmentExpression	s -> channel_order_tab = dca_channel_reorder_lfe_xch [ s -> amode ]		1621029	0		=			
ANR	1622028	PtrMemberAccess	s -> channel_order_tab		1621029	0					
ANR	1622029	Identifier	s		1621029	0					
ANR	1622030	Identifier	channel_order_tab		1621029	1					
ANR	1622031	ArrayIndexing	dca_channel_reorder_lfe_xch [ s -> amode ]		1621029	1					
ANR	1622032	Identifier	dca_channel_reorder_lfe_xch		1621029	0					
ANR	1622033	PtrMemberAccess	s -> amode		1621029	1					
ANR	1622034	Identifier	s		1621029	0					
ANR	1622035	Identifier	amode		1621029	1					
ANR	1622036	ElseStatement	else		1621029	0					
ANR	1622037	CompoundStatement		356:23:6844:6844	1621029	0					
ANR	1622038	ExpressionStatement	s -> channel_order_tab = dca_channel_reorder_nolfe_xch [ s -> amode ]	362:20:6998:7060	1621029	0	True				
ANR	1622039	AssignmentExpression	s -> channel_order_tab = dca_channel_reorder_nolfe_xch [ s -> amode ]		1621029	0		=			
ANR	1622040	PtrMemberAccess	s -> channel_order_tab		1621029	0					
ANR	1622041	Identifier	s		1621029	0					
ANR	1622042	Identifier	channel_order_tab		1621029	1					
ANR	1622043	ArrayIndexing	dca_channel_reorder_nolfe_xch [ s -> amode ]		1621029	1					
ANR	1622044	Identifier	dca_channel_reorder_nolfe_xch		1621029	0					
ANR	1622045	PtrMemberAccess	s -> amode		1621029	1					
ANR	1622046	Identifier	s		1621029	0					
ANR	1622047	Identifier	amode		1621029	1					
ANR	1622048	ElseStatement	else		1621029	0					
ANR	1622049	CompoundStatement		364:19:6972:6972	1621029	0					
ANR	1622050	ExpressionStatement	channels = num_core_channels + ! ! s -> lfe	370:16:7122:7161	1621029	0	True				
ANR	1622051	AssignmentExpression	channels = num_core_channels + ! ! s -> lfe		1621029	0		=			
ANR	1622052	Identifier	channels		1621029	0					
ANR	1622053	AdditiveExpression	num_core_channels + ! ! s -> lfe		1621029	1		+			
ANR	1622054	Identifier	num_core_channels		1621029	0					
ANR	1622055	UnaryOperationExpression	! ! s -> lfe		1621029	1					
ANR	1622056	UnaryOperator	!		1621029	0					
ANR	1622057	UnaryOperationExpression	! s -> lfe		1621029	1					
ANR	1622058	UnaryOperator	!		1621029	0					
ANR	1622059	PtrMemberAccess	s -> lfe		1621029	1					
ANR	1622060	Identifier	s		1621029	0					
ANR	1622061	Identifier	lfe		1621029	1					
ANR	1622062	ExpressionStatement	s -> xch_present = 0	372:16:7180:7198	1621029	1	True				
ANR	1622063	AssignmentExpression	s -> xch_present = 0		1621029	0		=			
ANR	1622064	PtrMemberAccess	s -> xch_present		1621029	0					
ANR	1622065	Identifier	s		1621029	0					
ANR	1622066	Identifier	xch_present		1621029	1					
ANR	1622067	PrimaryExpression	0		1621029	1					
ANR	1622068	IfStatement	if ( s -> lfe )		1621029	2					
ANR	1622069	Condition	s -> lfe	374:20:7258:7263	1621029	0	True				
ANR	1622070	PtrMemberAccess	s -> lfe		1621029	0					
ANR	1622071	Identifier	s		1621029	0					
ANR	1622072	Identifier	lfe		1621029	1					
ANR	1622073	CompoundStatement		370:28:7135:7135	1621029	1					
ANR	1622074	ExpressionStatement	avctx -> channel_layout |= AV_CH_LOW_FREQUENCY	376:20:7289:7333	1621029	0	True				
ANR	1622075	AssignmentExpression	avctx -> channel_layout |= AV_CH_LOW_FREQUENCY		1621029	0		|=			
ANR	1622076	PtrMemberAccess	avctx -> channel_layout		1621029	0					
ANR	1622077	Identifier	avctx		1621029	0					
ANR	1622078	Identifier	channel_layout		1621029	1					
ANR	1622079	Identifier	AV_CH_LOW_FREQUENCY		1621029	1					
ANR	1622080	ExpressionStatement	s -> channel_order_tab = dca_channel_reorder_lfe [ s -> amode ]	378:20:7356:7412	1621029	1	True				
ANR	1622081	AssignmentExpression	s -> channel_order_tab = dca_channel_reorder_lfe [ s -> amode ]		1621029	0		=			
ANR	1622082	PtrMemberAccess	s -> channel_order_tab		1621029	0					
ANR	1622083	Identifier	s		1621029	0					
ANR	1622084	Identifier	channel_order_tab		1621029	1					
ANR	1622085	ArrayIndexing	dca_channel_reorder_lfe [ s -> amode ]		1621029	1					
ANR	1622086	Identifier	dca_channel_reorder_lfe		1621029	0					
ANR	1622087	PtrMemberAccess	s -> amode		1621029	1					
ANR	1622088	Identifier	s		1621029	0					
ANR	1622089	Identifier	amode		1621029	1					
ANR	1622090	ElseStatement	else		1621029	0					
ANR	1622091	ExpressionStatement	s -> channel_order_tab = dca_channel_reorder_nolfe [ s -> amode ]	382:20:7459:7517	1621029	0	True				
ANR	1622092	AssignmentExpression	s -> channel_order_tab = dca_channel_reorder_nolfe [ s -> amode ]		1621029	0		=			
ANR	1622093	PtrMemberAccess	s -> channel_order_tab		1621029	0					
ANR	1622094	Identifier	s		1621029	0					
ANR	1622095	Identifier	channel_order_tab		1621029	1					
ANR	1622096	ArrayIndexing	dca_channel_reorder_nolfe [ s -> amode ]		1621029	1					
ANR	1622097	Identifier	dca_channel_reorder_nolfe		1621029	0					
ANR	1622098	PtrMemberAccess	s -> amode		1621029	1					
ANR	1622099	Identifier	s		1621029	0					
ANR	1622100	Identifier	amode		1621029	1					
ANR	1622101	IfStatement	if ( channels > ! ! s -> lfe && s -> channel_order_tab [ channels - 1 - ! ! s -> lfe ] < 0 )		1621029	2					
ANR	1622102	Condition	channels > ! ! s -> lfe && s -> channel_order_tab [ channels - 1 - ! ! s -> lfe ] < 0	388:16:7553:7641	1621029	0	True				
ANR	1622103	AndExpression	channels > ! ! s -> lfe && s -> channel_order_tab [ channels - 1 - ! ! s -> lfe ] < 0		1621029	0		&&			
ANR	1622104	RelationalExpression	channels > ! ! s -> lfe		1621029	0		>			
ANR	1622105	Identifier	channels		1621029	0					
ANR	1622106	UnaryOperationExpression	! ! s -> lfe		1621029	1					
ANR	1622107	UnaryOperator	!		1621029	0					
ANR	1622108	UnaryOperationExpression	! s -> lfe		1621029	1					
ANR	1622109	UnaryOperator	!		1621029	0					
ANR	1622110	PtrMemberAccess	s -> lfe		1621029	1					
ANR	1622111	Identifier	s		1621029	0					
ANR	1622112	Identifier	lfe		1621029	1					
ANR	1622113	RelationalExpression	s -> channel_order_tab [ channels - 1 - ! ! s -> lfe ] < 0		1621029	1		<			
ANR	1622114	ArrayIndexing	s -> channel_order_tab [ channels - 1 - ! ! s -> lfe ]		1621029	0					
ANR	1622115	PtrMemberAccess	s -> channel_order_tab		1621029	0					
ANR	1622116	Identifier	s		1621029	0					
ANR	1622117	Identifier	channel_order_tab		1621029	1					
ANR	1622118	AdditiveExpression	channels - 1 - ! ! s -> lfe		1621029	1		-			
ANR	1622119	Identifier	channels		1621029	0					
ANR	1622120	AdditiveExpression	1 - ! ! s -> lfe		1621029	1		-			
ANR	1622121	PrimaryExpression	1		1621029	0					
ANR	1622122	UnaryOperationExpression	! ! s -> lfe		1621029	1					
ANR	1622123	UnaryOperator	!		1621029	0					
ANR	1622124	UnaryOperationExpression	! s -> lfe		1621029	1					
ANR	1622125	UnaryOperator	!		1621029	0					
ANR	1622126	PtrMemberAccess	s -> lfe		1621029	1					
ANR	1622127	Identifier	s		1621029	0					
ANR	1622128	Identifier	lfe		1621029	1					
ANR	1622129	PrimaryExpression	0		1621029	1					
ANR	1622130	IfStatement	if ( av_get_channel_layout_nb_channels ( avctx -> channel_layout ) != channels )		1621029	1					
ANR	1622131	Condition	av_get_channel_layout_nb_channels ( avctx -> channel_layout ) != channels	395:16:7664:7731	1621029	0	True				
ANR	1622132	EqualityExpression	av_get_channel_layout_nb_channels ( avctx -> channel_layout ) != channels		1621029	0		!=			
ANR	1622133	CallExpression	av_get_channel_layout_nb_channels ( avctx -> channel_layout )		1621029	0					
ANR	1622134	Callee	av_get_channel_layout_nb_channels		1621029	0					
ANR	1622135	Identifier	av_get_channel_layout_nb_channels		1621029	0					
ANR	1622136	ArgumentList	avctx -> channel_layout		1621029	1					
ANR	1622137	Argument	avctx -> channel_layout		1621029	0					
ANR	1622138	PtrMemberAccess	avctx -> channel_layout		1621029	0					
ANR	1622139	Identifier	avctx		1621029	0					
ANR	1622140	Identifier	channel_layout		1621029	1					
ANR	1622141	Identifier	channels		1621029	1					
ANR	1622142	CompoundStatement		391:86:7603:7603	1621029	1					
ANR	1622143	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Number of channels %d mismatches layout %d\\n"" , channels , av_get_channel_layout_nb_channels ( avctx -> channel_layout ) )"	397:16:7753:7896	1621029	0	True				
ANR	1622144	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Number of channels %d mismatches layout %d\\n"" , channels , av_get_channel_layout_nb_channels ( avctx -> channel_layout ) )"		1621029	0					
ANR	1622145	Callee	av_log		1621029	0					
ANR	1622146	Identifier	av_log		1621029	0					
ANR	1622147	ArgumentList	avctx		1621029	1					
ANR	1622148	Argument	avctx		1621029	0					
ANR	1622149	Identifier	avctx		1621029	0					
ANR	1622150	Argument	AV_LOG_ERROR		1621029	1					
ANR	1622151	Identifier	AV_LOG_ERROR		1621029	0					
ANR	1622152	Argument	"""Number of channels %d mismatches layout %d\\n"""		1621029	2					
ANR	1622153	PrimaryExpression	"""Number of channels %d mismatches layout %d\\n"""		1621029	0					
ANR	1622154	Argument	channels		1621029	3					
ANR	1622155	Identifier	channels		1621029	0					
ANR	1622156	Argument	av_get_channel_layout_nb_channels ( avctx -> channel_layout )		1621029	4					
ANR	1622157	CallExpression	av_get_channel_layout_nb_channels ( avctx -> channel_layout )		1621029	0					
ANR	1622158	Callee	av_get_channel_layout_nb_channels		1621029	0					
ANR	1622159	Identifier	av_get_channel_layout_nb_channels		1621029	0					
ANR	1622160	ArgumentList	avctx -> channel_layout		1621029	1					
ANR	1622161	Argument	avctx -> channel_layout		1621029	0					
ANR	1622162	PtrMemberAccess	avctx -> channel_layout		1621029	0					
ANR	1622163	Identifier	avctx		1621029	0					
ANR	1622164	Identifier	channel_layout		1621029	1					
ANR	1622165	IfStatement	if ( avctx -> request_channels == 2 && s -> prim_channels > 2 )		1621029	3					
ANR	1622166	Condition	avctx -> request_channels == 2 && s -> prim_channels > 2	404:16:7933:7984	1621029	0	True				
ANR	1622167	AndExpression	avctx -> request_channels == 2 && s -> prim_channels > 2		1621029	0		&&			
ANR	1622168	EqualityExpression	avctx -> request_channels == 2		1621029	0		==			
ANR	1622169	PtrMemberAccess	avctx -> request_channels		1621029	0					
ANR	1622170	Identifier	avctx		1621029	0					
ANR	1622171	Identifier	request_channels		1621029	1					
ANR	1622172	PrimaryExpression	2		1621029	1					
ANR	1622173	RelationalExpression	s -> prim_channels > 2		1621029	1		>			
ANR	1622174	PtrMemberAccess	s -> prim_channels		1621029	0					
ANR	1622175	Identifier	s		1621029	0					
ANR	1622176	Identifier	prim_channels		1621029	1					
ANR	1622177	PrimaryExpression	2		1621029	1					
ANR	1622178	CompoundStatement		400:70:7856:7856	1621029	1					
ANR	1622179	ExpressionStatement	channels = 2	406:16:8006:8018	1621029	0	True				
ANR	1622180	AssignmentExpression	channels = 2		1621029	0		=			
ANR	1622181	Identifier	channels		1621029	0					
ANR	1622182	PrimaryExpression	2		1621029	1					
ANR	1622183	ExpressionStatement	s -> output = DCA_STEREO	408:16:8037:8059	1621029	1	True				
ANR	1622184	AssignmentExpression	s -> output = DCA_STEREO		1621029	0		=			
ANR	1622185	PtrMemberAccess	s -> output		1621029	0					
ANR	1622186	Identifier	s		1621029	0					
ANR	1622187	Identifier	output		1621029	1					
ANR	1622188	Identifier	DCA_STEREO		1621029	1					
ANR	1622189	ExpressionStatement	avctx -> channel_layout = AV_CH_LAYOUT_STEREO	410:16:8078:8121	1621029	2	True				
ANR	1622190	AssignmentExpression	avctx -> channel_layout = AV_CH_LAYOUT_STEREO		1621029	0		=			
ANR	1622191	PtrMemberAccess	avctx -> channel_layout		1621029	0					
ANR	1622192	Identifier	avctx		1621029	0					
ANR	1622193	Identifier	channel_layout		1621029	1					
ANR	1622194	Identifier	AV_CH_LAYOUT_STEREO		1621029	1					
ANR	1622195	ElseStatement	else		1621029	0					
ANR	1622196	IfStatement	if ( avctx -> request_channel_layout & AV_CH_LAYOUT_NATIVE )		1621029	0					
ANR	1622197	Condition	avctx -> request_channel_layout & AV_CH_LAYOUT_NATIVE	414:21:8160:8210	1621029	0	True				
ANR	1622198	BitAndExpression	avctx -> request_channel_layout & AV_CH_LAYOUT_NATIVE		1621029	0		&			
ANR	1622199	PtrMemberAccess	avctx -> request_channel_layout		1621029	0					
ANR	1622200	Identifier	avctx		1621029	0					
ANR	1622201	Identifier	request_channel_layout		1621029	1					
ANR	1622202	Identifier	AV_CH_LAYOUT_NATIVE		1621029	1					
ANR	1622203	CompoundStatement		412:23:8108:8180	1621029	1					
ANR	1622204	Statement	static	416:16:8232:8237	1621029	0	True				
ANR	1622205	IdentifierDeclStatement	"const int8_t dca_channel_order_native [ 9 ] = { 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 } ;"	416:23:8239:8311	1621029	1	True				
ANR	1622206	IdentifierDecl	"dca_channel_order_native [ 9 ] = { 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 }"		1621029	0					
ANR	1622207	IdentifierDeclType	const int8_t [ 9 ]		1621029	0					
ANR	1622208	Identifier	dca_channel_order_native		1621029	1					
ANR	1622209	PrimaryExpression	9		1621029	2					
ANR	1622210	AssignmentExpression	"dca_channel_order_native [ 9 ] = { 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 }"		1621029	3		=			
ANR	1622211	Identifier	dca_channel_order_native		1621029	0					
ANR	1622212	InitializerList	0		1621029	1					
ANR	1622213	PrimaryExpression	0		1621029	0					
ANR	1622214	PrimaryExpression	1		1621029	1					
ANR	1622215	PrimaryExpression	2		1621029	2					
ANR	1622216	PrimaryExpression	3		1621029	3					
ANR	1622217	PrimaryExpression	4		1621029	4					
ANR	1622218	PrimaryExpression	5		1621029	5					
ANR	1622219	PrimaryExpression	6		1621029	6					
ANR	1622220	PrimaryExpression	7		1621029	7					
ANR	1622221	PrimaryExpression	8		1621029	8					
ANR	1622222	ExpressionStatement	s -> channel_order_tab = dca_channel_order_native	418:16:8330:8377	1621029	2	True				
ANR	1622223	AssignmentExpression	s -> channel_order_tab = dca_channel_order_native		1621029	0		=			
ANR	1622224	PtrMemberAccess	s -> channel_order_tab		1621029	0					
ANR	1622225	Identifier	s		1621029	0					
ANR	1622226	Identifier	channel_order_tab		1621029	1					
ANR	1622227	Identifier	dca_channel_order_native		1621029	1					
ANR	1622228	ExpressionStatement	s -> lfe_index = dca_lfe_index [ s -> amode ]	422:12:8407:8445	1621029	4	True				
ANR	1622229	AssignmentExpression	s -> lfe_index = dca_lfe_index [ s -> amode ]		1621029	0		=			
ANR	1622230	PtrMemberAccess	s -> lfe_index		1621029	0					
ANR	1622231	Identifier	s		1621029	0					
ANR	1622232	Identifier	lfe_index		1621029	1					
ANR	1622233	ArrayIndexing	dca_lfe_index [ s -> amode ]		1621029	1					
ANR	1622234	Identifier	dca_lfe_index		1621029	0					
ANR	1622235	PtrMemberAccess	s -> amode		1621029	1					
ANR	1622236	Identifier	s		1621029	0					
ANR	1622237	Identifier	amode		1621029	1					
ANR	1622238	ElseStatement	else		1621029	0					
ANR	1622239	CompoundStatement		420:15:8332:8332	1621029	0					
ANR	1622240	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Non standard configuration %d !\\n"" , s -> amode )"	426:12:8478:8572	1621029	0	True				
ANR	1622241	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Non standard configuration %d !\\n"" , s -> amode )"		1621029	0					
ANR	1622242	Callee	av_log		1621029	0					
ANR	1622243	Identifier	av_log		1621029	0					
ANR	1622244	ArgumentList	avctx		1621029	1					
ANR	1622245	Argument	avctx		1621029	0					
ANR	1622246	Identifier	avctx		1621029	0					
ANR	1622247	Argument	AV_LOG_ERROR		1621029	1					
ANR	1622248	Identifier	AV_LOG_ERROR		1621029	0					
ANR	1622249	Argument	"""Non standard configuration %d !\\n"""		1621029	2					
ANR	1622250	PrimaryExpression	"""Non standard configuration %d !\\n"""		1621029	0					
ANR	1622251	Argument	s -> amode		1621029	3					
ANR	1622252	PtrMemberAccess	s -> amode		1621029	0					
ANR	1622253	Identifier	s		1621029	0					
ANR	1622254	Identifier	amode		1621029	1					
ANR	1622255	ExpressionStatement	s -> xxch_dmix_embedded = 0	435:8:8597:8622	1621029	1	True				
ANR	1622256	AssignmentExpression	s -> xxch_dmix_embedded = 0		1621029	0		=			
ANR	1622257	PtrMemberAccess	s -> xxch_dmix_embedded		1621029	0					
ANR	1622258	Identifier	s		1621029	0					
ANR	1622259	Identifier	xxch_dmix_embedded		1621029	1					
ANR	1622260	PrimaryExpression	0		1621029	1					
ANR	1622261	ElseStatement	else		1621029	0					
ANR	1622262	CompoundStatement		433:11:8505:8505	1621029	0					
ANR	1622263	ExpressionStatement	channel_mask = s -> xxch_core_spkmask	441:8:8726:8761	1621029	0	True				
ANR	1622264	AssignmentExpression	channel_mask = s -> xxch_core_spkmask		1621029	0		=			
ANR	1622265	Identifier	channel_mask		1621029	0					
ANR	1622266	PtrMemberAccess	s -> xxch_core_spkmask		1621029	1					
ANR	1622267	Identifier	s		1621029	0					
ANR	1622268	Identifier	xxch_core_spkmask		1621029	1					
ANR	1622269	IfStatement	if ( avctx -> request_channels > 0 && avctx -> request_channels < s -> prim_channels )		1621029	1					
ANR	1622270	Condition	avctx -> request_channels > 0 && avctx -> request_channels < s -> prim_channels	445:12:8778:8863	1621029	0	True				
ANR	1622271	AndExpression	avctx -> request_channels > 0 && avctx -> request_channels < s -> prim_channels		1621029	0		&&			
ANR	1622272	RelationalExpression	avctx -> request_channels > 0		1621029	0		>			
ANR	1622273	PtrMemberAccess	avctx -> request_channels		1621029	0					
ANR	1622274	Identifier	avctx		1621029	0					
ANR	1622275	Identifier	request_channels		1621029	1					
ANR	1622276	PrimaryExpression	0		1621029	1					
ANR	1622277	RelationalExpression	avctx -> request_channels < s -> prim_channels		1621029	1		<			
ANR	1622278	PtrMemberAccess	avctx -> request_channels		1621029	0					
ANR	1622279	Identifier	avctx		1621029	0					
ANR	1622280	Identifier	request_channels		1621029	1					
ANR	1622281	PtrMemberAccess	s -> prim_channels		1621029	1					
ANR	1622282	Identifier	s		1621029	0					
ANR	1622283	Identifier	prim_channels		1621029	1					
ANR	1622284	CompoundStatement		443:59:8735:8735	1621029	1					
ANR	1622285	ExpressionStatement	channels = num_core_channels + ! ! s -> lfe	449:12:8881:8920	1621029	0	True				
ANR	1622286	AssignmentExpression	channels = num_core_channels + ! ! s -> lfe		1621029	0		=			
ANR	1622287	Identifier	channels		1621029	0					
ANR	1622288	AdditiveExpression	num_core_channels + ! ! s -> lfe		1621029	1		+			
ANR	1622289	Identifier	num_core_channels		1621029	0					
ANR	1622290	UnaryOperationExpression	! ! s -> lfe		1621029	1					
ANR	1622291	UnaryOperator	!		1621029	0					
ANR	1622292	UnaryOperationExpression	! s -> lfe		1621029	1					
ANR	1622293	UnaryOperator	!		1621029	0					
ANR	1622294	PtrMemberAccess	s -> lfe		1621029	1					
ANR	1622295	Identifier	s		1621029	0					
ANR	1622296	Identifier	lfe		1621029	1					
ANR	1622297	ForStatement	for ( i = 0 ; i < s -> xxch_chset && channels + s -> xxch_chset_nch [ i ] <= avctx -> request_channels ; i ++ )		1621029	1					
ANR	1622298	ForInit	i = 0 ;	451:17:8940:8945	1621029	0	True				
ANR	1622299	AssignmentExpression	i = 0		1621029	0		=			
ANR	1622300	Identifier	i		1621029	0					
ANR	1622301	PrimaryExpression	0		1621029	1					
ANR	1622302	Condition	i < s -> xxch_chset && channels + s -> xxch_chset_nch [ i ] <= avctx -> request_channels	451:24:8947:9072	1621029	1	True				
ANR	1622303	AndExpression	i < s -> xxch_chset && channels + s -> xxch_chset_nch [ i ] <= avctx -> request_channels		1621029	0		&&			
ANR	1622304	RelationalExpression	i < s -> xxch_chset		1621029	0		<			
ANR	1622305	Identifier	i		1621029	0					
ANR	1622306	PtrMemberAccess	s -> xxch_chset		1621029	1					
ANR	1622307	Identifier	s		1621029	0					
ANR	1622308	Identifier	xxch_chset		1621029	1					
ANR	1622309	RelationalExpression	channels + s -> xxch_chset_nch [ i ] <= avctx -> request_channels		1621029	1		<=			
ANR	1622310	AdditiveExpression	channels + s -> xxch_chset_nch [ i ]		1621029	0		+			
ANR	1622311	Identifier	channels		1621029	0					
ANR	1622312	ArrayIndexing	s -> xxch_chset_nch [ i ]		1621029	1					
ANR	1622313	PtrMemberAccess	s -> xxch_chset_nch		1621029	0					
ANR	1622314	Identifier	s		1621029	0					
ANR	1622315	Identifier	xxch_chset_nch		1621029	1					
ANR	1622316	Identifier	i		1621029	1					
ANR	1622317	PtrMemberAccess	avctx -> request_channels		1621029	1					
ANR	1622318	Identifier	avctx		1621029	0					
ANR	1622319	Identifier	request_channels		1621029	1					
ANR	1622320	PostIncDecOperationExpression	i ++	453:74:9075:9077	1621029	2	True				
ANR	1622321	Identifier	i		1621029	0					
ANR	1622322	IncDec	++		1621029	1					
ANR	1622323	CompoundStatement		449:79:8949:8949	1621029	3					
ANR	1622324	ExpressionStatement	channels += s -> xxch_chset_nch [ i ]	455:16:9099:9131	1621029	0	True				
ANR	1622325	AssignmentExpression	channels += s -> xxch_chset_nch [ i ]		1621029	0		+=			
ANR	1622326	Identifier	channels		1621029	0					
ANR	1622327	ArrayIndexing	s -> xxch_chset_nch [ i ]		1621029	1					
ANR	1622328	PtrMemberAccess	s -> xxch_chset_nch		1621029	0					
ANR	1622329	Identifier	s		1621029	0					
ANR	1622330	Identifier	xxch_chset_nch		1621029	1					
ANR	1622331	Identifier	i		1621029	1					
ANR	1622332	ExpressionStatement	channel_mask |= s -> xxch_spk_masks [ i ]	457:16:9150:9186	1621029	1	True				
ANR	1622333	AssignmentExpression	channel_mask |= s -> xxch_spk_masks [ i ]		1621029	0		|=			
ANR	1622334	Identifier	channel_mask		1621029	0					
ANR	1622335	ArrayIndexing	s -> xxch_spk_masks [ i ]		1621029	1					
ANR	1622336	PtrMemberAccess	s -> xxch_spk_masks		1621029	0					
ANR	1622337	Identifier	s		1621029	0					
ANR	1622338	Identifier	xxch_spk_masks		1621029	1					
ANR	1622339	Identifier	i		1621029	1					
ANR	1622340	ElseStatement	else		1621029	0					
ANR	1622341	CompoundStatement		457:15:9088:9088	1621029	0					
ANR	1622342	ExpressionStatement	channels = s -> prim_channels + ! ! s -> lfe	463:12:9234:9272	1621029	0	True				
ANR	1622343	AssignmentExpression	channels = s -> prim_channels + ! ! s -> lfe		1621029	0		=			
ANR	1622344	Identifier	channels		1621029	0					
ANR	1622345	AdditiveExpression	s -> prim_channels + ! ! s -> lfe		1621029	1		+			
ANR	1622346	PtrMemberAccess	s -> prim_channels		1621029	0					
ANR	1622347	Identifier	s		1621029	0					
ANR	1622348	Identifier	prim_channels		1621029	1					
ANR	1622349	UnaryOperationExpression	! ! s -> lfe		1621029	1					
ANR	1622350	UnaryOperator	!		1621029	0					
ANR	1622351	UnaryOperationExpression	! s -> lfe		1621029	1					
ANR	1622352	UnaryOperator	!		1621029	0					
ANR	1622353	PtrMemberAccess	s -> lfe		1621029	1					
ANR	1622354	Identifier	s		1621029	0					
ANR	1622355	Identifier	lfe		1621029	1					
ANR	1622356	ForStatement	for ( i = 0 ; i < s -> xxch_chset ; i ++ )		1621029	1					
ANR	1622357	ForInit	i = 0 ;	465:17:9292:9297	1621029	0	True				
ANR	1622358	AssignmentExpression	i = 0		1621029	0		=			
ANR	1622359	Identifier	i		1621029	0					
ANR	1622360	PrimaryExpression	0		1621029	1					
ANR	1622361	Condition	i < s -> xxch_chset	465:24:9299:9315	1621029	1	True				
ANR	1622362	RelationalExpression	i < s -> xxch_chset		1621029	0		<			
ANR	1622363	Identifier	i		1621029	0					
ANR	1622364	PtrMemberAccess	s -> xxch_chset		1621029	1					
ANR	1622365	Identifier	s		1621029	0					
ANR	1622366	Identifier	xxch_chset		1621029	1					
ANR	1622367	PostIncDecOperationExpression	i ++	465:43:9318:9320	1621029	2	True				
ANR	1622368	Identifier	i		1621029	0					
ANR	1622369	IncDec	++		1621029	1					
ANR	1622370	CompoundStatement		461:48:9192:9192	1621029	3					
ANR	1622371	ExpressionStatement	channel_mask |= s -> xxch_spk_masks [ i ]	467:16:9342:9378	1621029	0	True				
ANR	1622372	AssignmentExpression	channel_mask |= s -> xxch_spk_masks [ i ]		1621029	0		|=			
ANR	1622373	Identifier	channel_mask		1621029	0					
ANR	1622374	ArrayIndexing	s -> xxch_spk_masks [ i ]		1621029	1					
ANR	1622375	PtrMemberAccess	s -> xxch_spk_masks		1621029	0					
ANR	1622376	Identifier	s		1621029	0					
ANR	1622377	Identifier	xxch_spk_masks		1621029	1					
ANR	1622378	Identifier	i		1621029	1					
ANR	1622379	ExpressionStatement	channel_layout = 0	477:8:9496:9514	1621029	2	True				
ANR	1622380	AssignmentExpression	channel_layout = 0		1621029	0		=			
ANR	1622381	Identifier	channel_layout		1621029	0					
ANR	1622382	PrimaryExpression	0		1621029	1					
ANR	1622383	ForStatement	for ( i = 0 ; i < s -> xxch_nbits_spk_mask ; ++ i )		1621029	3					
ANR	1622384	ForInit	i = 0 ;	479:13:9530:9535	1621029	0	True				
ANR	1622385	AssignmentExpression	i = 0		1621029	0		=			
ANR	1622386	Identifier	i		1621029	0					
ANR	1622387	PrimaryExpression	0		1621029	1					
ANR	1622388	Condition	i < s -> xxch_nbits_spk_mask	479:20:9537:9562	1621029	1	True				
ANR	1622389	RelationalExpression	i < s -> xxch_nbits_spk_mask		1621029	0		<			
ANR	1622390	Identifier	i		1621029	0					
ANR	1622391	PtrMemberAccess	s -> xxch_nbits_spk_mask		1621029	1					
ANR	1622392	Identifier	s		1621029	0					
ANR	1622393	Identifier	xxch_nbits_spk_mask		1621029	1					
ANR	1622394	UnaryExpression	++ i	479:48:9565:9567	1621029	2	True				
ANR	1622395	IncDec	++		1621029	0					
ANR	1622396	Identifier	i		1621029	1					
ANR	1622397	CompoundStatement		475:53:9439:9439	1621029	3					
ANR	1622398	IfStatement	if ( channel_mask & ( 1 << i ) )		1621029	0					
ANR	1622399	Condition	channel_mask & ( 1 << i )	481:16:9589:9611	1621029	0	True				
ANR	1622400	BitAndExpression	channel_mask & ( 1 << i )		1621029	0		&			
ANR	1622401	Identifier	channel_mask		1621029	0					
ANR	1622402	ShiftExpression	1 << i		1621029	1		<<			
ANR	1622403	PrimaryExpression	1		1621029	0					
ANR	1622404	Identifier	i		1621029	1					
ANR	1622405	CompoundStatement		477:41:9483:9483	1621029	1					
ANR	1622406	ExpressionStatement	channel_layout |= map_xxch_to_native [ i ]	483:16:9633:9672	1621029	0	True				
ANR	1622407	AssignmentExpression	channel_layout |= map_xxch_to_native [ i ]		1621029	0		|=			
ANR	1622408	Identifier	channel_layout		1621029	0					
ANR	1622409	ArrayIndexing	map_xxch_to_native [ i ]		1621029	1					
ANR	1622410	Identifier	map_xxch_to_native		1621029	0					
ANR	1622411	Identifier	i		1621029	1					
ANR	1622412	IfStatement	if ( av_popcount ( channel_mask ) != av_popcount ( channel_layout ) )		1621029	4					
ANR	1622413	Condition	av_popcount ( channel_mask ) != av_popcount ( channel_layout )	495:12:9876:9931	1621029	0	True				
ANR	1622414	EqualityExpression	av_popcount ( channel_mask ) != av_popcount ( channel_layout )		1621029	0		!=			
ANR	1622415	CallExpression	av_popcount ( channel_mask )		1621029	0					
ANR	1622416	Callee	av_popcount		1621029	0					
ANR	1622417	Identifier	av_popcount		1621029	0					
ANR	1622418	ArgumentList	channel_mask		1621029	1					
ANR	1622419	Argument	channel_mask		1621029	0					
ANR	1622420	Identifier	channel_mask		1621029	0					
ANR	1622421	CallExpression	av_popcount ( channel_layout )		1621029	1					
ANR	1622422	Callee	av_popcount		1621029	0					
ANR	1622423	Identifier	av_popcount		1621029	0					
ANR	1622424	ArgumentList	channel_layout		1621029	1					
ANR	1622425	Argument	channel_layout		1621029	0					
ANR	1622426	Identifier	channel_layout		1621029	0					
ANR	1622427	CompoundStatement		491:70:9803:9803	1621029	1					
ANR	1622428	ExpressionStatement	"av_log ( avctx , AV_LOG_DEBUG , ""DTS-XXCH: Inconsistant avcodec/dts channel layouts\\n"" )"	497:12:9949:10052	1621029	0	True				
ANR	1622429	CallExpression	"av_log ( avctx , AV_LOG_DEBUG , ""DTS-XXCH: Inconsistant avcodec/dts channel layouts\\n"" )"		1621029	0					
ANR	1622430	Callee	av_log		1621029	0					
ANR	1622431	Identifier	av_log		1621029	0					
ANR	1622432	ArgumentList	avctx		1621029	1					
ANR	1622433	Argument	avctx		1621029	0					
ANR	1622434	Identifier	avctx		1621029	0					
ANR	1622435	Argument	AV_LOG_DEBUG		1621029	1					
ANR	1622436	Identifier	AV_LOG_DEBUG		1621029	0					
ANR	1622437	Argument	"""DTS-XXCH: Inconsistant avcodec/dts channel layouts\\n"""		1621029	2					
ANR	1622438	PrimaryExpression	"""DTS-XXCH: Inconsistant avcodec/dts channel layouts\\n"""		1621029	0					
ANR	1622439	ExpressionStatement	avctx -> channel_layout = channel_layout	506:8:10077:10115	1621029	5	True				
ANR	1622440	AssignmentExpression	avctx -> channel_layout = channel_layout		1621029	0		=			
ANR	1622441	PtrMemberAccess	avctx -> channel_layout		1621029	0					
ANR	1622442	Identifier	avctx		1621029	0					
ANR	1622443	Identifier	channel_layout		1621029	1					
ANR	1622444	Identifier	channel_layout		1621029	1					
ANR	1622445	IfStatement	if ( ! ( avctx -> request_channel_layout & AV_CH_LAYOUT_NATIVE ) )		1621029	6					
ANR	1622446	Condition	! ( avctx -> request_channel_layout & AV_CH_LAYOUT_NATIVE )	510:12:10132:10185	1621029	0	True				
ANR	1622447	UnaryOperationExpression	! ( avctx -> request_channel_layout & AV_CH_LAYOUT_NATIVE )		1621029	0					
ANR	1622448	UnaryOperator	!		1621029	0					
ANR	1622449	BitAndExpression	avctx -> request_channel_layout & AV_CH_LAYOUT_NATIVE		1621029	1		&			
ANR	1622450	PtrMemberAccess	avctx -> request_channel_layout		1621029	0					
ANR	1622451	Identifier	avctx		1621029	0					
ANR	1622452	Identifier	request_channel_layout		1621029	1					
ANR	1622453	Identifier	AV_CH_LAYOUT_NATIVE		1621029	1					
ANR	1622454	CompoundStatement		506:68:10057:10057	1621029	1					
ANR	1622455	ForStatement	"for ( chset = - 1 , j = 0 ; chset < s -> xxch_chset ; ++ chset )"		1621029	0					
ANR	1622456	ForInit	"chset = - 1 , j = 0 ;"	514:17:10267:10284	1621029	0	True				
ANR	1622457	Expression	"chset = - 1 , j = 0"		1621029	0					
ANR	1622458	AssignmentExpression	chset = - 1		1621029	0		=			
ANR	1622459	Identifier	chset		1621029	0					
ANR	1622460	UnaryOperationExpression	- 1		1621029	1					
ANR	1622461	UnaryOperator	-		1621029	0					
ANR	1622462	PrimaryExpression	1		1621029	1					
ANR	1622463	AssignmentExpression	j = 0		1621029	1		=			
ANR	1622464	Identifier	j		1621029	0					
ANR	1622465	PrimaryExpression	0		1621029	1					
ANR	1622466	Condition	chset < s -> xxch_chset	514:36:10286:10306	1621029	1	True				
ANR	1622467	RelationalExpression	chset < s -> xxch_chset		1621029	0		<			
ANR	1622468	Identifier	chset		1621029	0					
ANR	1622469	PtrMemberAccess	s -> xxch_chset		1621029	1					
ANR	1622470	Identifier	s		1621029	0					
ANR	1622471	Identifier	xxch_chset		1621029	1					
ANR	1622472	UnaryExpression	++ chset	514:59:10309:10315	1621029	2	True				
ANR	1622473	IncDec	++		1621029	0					
ANR	1622474	Identifier	chset		1621029	1					
ANR	1622475	CompoundStatement		510:68:10187:10187	1621029	3					
ANR	1622476	ExpressionStatement	mask = chset >= 0 ? s -> xxch_spk_masks [ chset ] : s -> xxch_core_spkmask	516:16:10337:10439	1621029	0	True				
ANR	1622477	AssignmentExpression	mask = chset >= 0 ? s -> xxch_spk_masks [ chset ] : s -> xxch_core_spkmask		1621029	0		=			
ANR	1622478	Identifier	mask		1621029	0					
ANR	1622479	ConditionalExpression	chset >= 0 ? s -> xxch_spk_masks [ chset ] : s -> xxch_core_spkmask		1621029	1					
ANR	1622480	Condition	chset >= 0		1621029	0					
ANR	1622481	RelationalExpression	chset >= 0		1621029	0		>=			
ANR	1622482	Identifier	chset		1621029	0					
ANR	1622483	PrimaryExpression	0		1621029	1					
ANR	1622484	ArrayIndexing	s -> xxch_spk_masks [ chset ]		1621029	1					
ANR	1622485	PtrMemberAccess	s -> xxch_spk_masks		1621029	0					
ANR	1622486	Identifier	s		1621029	0					
ANR	1622487	Identifier	xxch_spk_masks		1621029	1					
ANR	1622488	Identifier	chset		1621029	1					
ANR	1622489	PtrMemberAccess	s -> xxch_core_spkmask		1621029	2					
ANR	1622490	Identifier	s		1621029	0					
ANR	1622491	Identifier	xxch_core_spkmask		1621029	1					
ANR	1622492	ForStatement	for ( i = 0 ; i < s -> xxch_nbits_spk_mask ; i ++ )		1621029	1					
ANR	1622493	ForInit	i = 0 ;	520:21:10463:10468	1621029	0	True				
ANR	1622494	AssignmentExpression	i = 0		1621029	0		=			
ANR	1622495	Identifier	i		1621029	0					
ANR	1622496	PrimaryExpression	0		1621029	1					
ANR	1622497	Condition	i < s -> xxch_nbits_spk_mask	520:28:10470:10495	1621029	1	True				
ANR	1622498	RelationalExpression	i < s -> xxch_nbits_spk_mask		1621029	0		<			
ANR	1622499	Identifier	i		1621029	0					
ANR	1622500	PtrMemberAccess	s -> xxch_nbits_spk_mask		1621029	1					
ANR	1622501	Identifier	s		1621029	0					
ANR	1622502	Identifier	xxch_nbits_spk_mask		1621029	1					
ANR	1622503	PostIncDecOperationExpression	i ++	520:56:10498:10500	1621029	2	True				
ANR	1622504	Identifier	i		1621029	0					
ANR	1622505	IncDec	++		1621029	1					
ANR	1622506	CompoundStatement		516:61:10372:10372	1621029	3					
ANR	1622507	IfStatement	if ( mask & ~ ( DCA_XXCH_LFE1 | DCA_XXCH_LFE2 ) & ( 1 << i ) )		1621029	0					
ANR	1622508	Condition	mask & ~ ( DCA_XXCH_LFE1 | DCA_XXCH_LFE2 ) & ( 1 << i )	522:24:10530:10579	1621029	0	True				
ANR	1622509	BitAndExpression	mask & ~ ( DCA_XXCH_LFE1 | DCA_XXCH_LFE2 ) & ( 1 << i )		1621029	0		&			
ANR	1622510	Identifier	mask		1621029	0					
ANR	1622511	BitAndExpression	~ ( DCA_XXCH_LFE1 | DCA_XXCH_LFE2 ) & ( 1 << i )		1621029	1		&			
ANR	1622512	UnaryOperationExpression	~ ( DCA_XXCH_LFE1 | DCA_XXCH_LFE2 )		1621029	0					
ANR	1622513	UnaryOperator	~		1621029	0					
ANR	1622514	InclusiveOrExpression	DCA_XXCH_LFE1 | DCA_XXCH_LFE2		1621029	1		|			
ANR	1622515	Identifier	DCA_XXCH_LFE1		1621029	0					
ANR	1622516	Identifier	DCA_XXCH_LFE2		1621029	1					
ANR	1622517	ShiftExpression	1 << i		1621029	1		<<			
ANR	1622518	PrimaryExpression	1		1621029	0					
ANR	1622519	Identifier	i		1621029	1					
ANR	1622520	CompoundStatement		518:76:10451:10451	1621029	1					
ANR	1622521	ExpressionStatement	lavc = map_xxch_to_native [ i ]	524:24:10609:10637	1621029	0	True				
ANR	1622522	AssignmentExpression	lavc = map_xxch_to_native [ i ]		1621029	0		=			
ANR	1622523	Identifier	lavc		1621029	0					
ANR	1622524	ArrayIndexing	map_xxch_to_native [ i ]		1621029	1					
ANR	1622525	Identifier	map_xxch_to_native		1621029	0					
ANR	1622526	Identifier	i		1621029	1					
ANR	1622527	ExpressionStatement	posn = av_popcount ( channel_layout & ( lavc - 1 ) )	526:24:10664:10711	1621029	1	True				
ANR	1622528	AssignmentExpression	posn = av_popcount ( channel_layout & ( lavc - 1 ) )		1621029	0		=			
ANR	1622529	Identifier	posn		1621029	0					
ANR	1622530	CallExpression	av_popcount ( channel_layout & ( lavc - 1 ) )		1621029	1					
ANR	1622531	Callee	av_popcount		1621029	0					
ANR	1622532	Identifier	av_popcount		1621029	0					
ANR	1622533	ArgumentList	channel_layout & ( lavc - 1 )		1621029	1					
ANR	1622534	Argument	channel_layout & ( lavc - 1 )		1621029	0					
ANR	1622535	BitAndExpression	channel_layout & ( lavc - 1 )		1621029	0		&			
ANR	1622536	Identifier	channel_layout		1621029	0					
ANR	1622537	AdditiveExpression	lavc - 1		1621029	1		-			
ANR	1622538	Identifier	lavc		1621029	0					
ANR	1622539	PrimaryExpression	1		1621029	1					
ANR	1622540	ExpressionStatement	s -> xxch_order_tab [ j ++ ] = posn	528:24:10738:10767	1621029	2	True				
ANR	1622541	AssignmentExpression	s -> xxch_order_tab [ j ++ ] = posn		1621029	0		=			
ANR	1622542	ArrayIndexing	s -> xxch_order_tab [ j ++ ]		1621029	0					
ANR	1622543	PtrMemberAccess	s -> xxch_order_tab		1621029	0					
ANR	1622544	Identifier	s		1621029	0					
ANR	1622545	Identifier	xxch_order_tab		1621029	1					
ANR	1622546	PostIncDecOperationExpression	j ++		1621029	1					
ANR	1622547	Identifier	j		1621029	0					
ANR	1622548	IncDec	++		1621029	1					
ANR	1622549	Identifier	posn		1621029	1					
ANR	1622550	ExpressionStatement	s -> lfe_index = av_popcount ( channel_layout & ( AV_CH_LOW_FREQUENCY - 1 ) )	538:12:10841:10909	1621029	1	True				
ANR	1622551	AssignmentExpression	s -> lfe_index = av_popcount ( channel_layout & ( AV_CH_LOW_FREQUENCY - 1 ) )		1621029	0		=			
ANR	1622552	PtrMemberAccess	s -> lfe_index		1621029	0					
ANR	1622553	Identifier	s		1621029	0					
ANR	1622554	Identifier	lfe_index		1621029	1					
ANR	1622555	CallExpression	av_popcount ( channel_layout & ( AV_CH_LOW_FREQUENCY - 1 ) )		1621029	1					
ANR	1622556	Callee	av_popcount		1621029	0					
ANR	1622557	Identifier	av_popcount		1621029	0					
ANR	1622558	ArgumentList	channel_layout & ( AV_CH_LOW_FREQUENCY - 1 )		1621029	1					
ANR	1622559	Argument	channel_layout & ( AV_CH_LOW_FREQUENCY - 1 )		1621029	0					
ANR	1622560	BitAndExpression	channel_layout & ( AV_CH_LOW_FREQUENCY - 1 )		1621029	0		&			
ANR	1622561	Identifier	channel_layout		1621029	0					
ANR	1622562	AdditiveExpression	AV_CH_LOW_FREQUENCY - 1		1621029	1		-			
ANR	1622563	Identifier	AV_CH_LOW_FREQUENCY		1621029	0					
ANR	1622564	PrimaryExpression	1		1621029	1					
ANR	1622565	ElseStatement	else		1621029	0					
ANR	1622566	CompoundStatement		536:15:10796:10796	1621029	0					
ANR	1622567	ForStatement	for ( i = 0 ; i < channels ; i ++ )		1621029	0					
ANR	1622568	ForInit	i = 0 ;	542:17:10969:10974	1621029	0	True				
ANR	1622569	AssignmentExpression	i = 0		1621029	0		=			
ANR	1622570	Identifier	i		1621029	0					
ANR	1622571	PrimaryExpression	0		1621029	1					
ANR	1622572	Condition	i < channels	542:24:10976:10987	1621029	1	True				
ANR	1622573	RelationalExpression	i < channels		1621029	0		<			
ANR	1622574	Identifier	i		1621029	0					
ANR	1622575	Identifier	channels		1621029	1					
ANR	1622576	PostIncDecOperationExpression	i ++	542:38:10990:10992	1621029	2	True				
ANR	1622577	Identifier	i		1621029	0					
ANR	1622578	IncDec	++		1621029	1					
ANR	1622579	ExpressionStatement	s -> xxch_order_tab [ i ] = i	544:16:11012:11036	1621029	3	True				
ANR	1622580	AssignmentExpression	s -> xxch_order_tab [ i ] = i		1621029	0		=			
ANR	1622581	ArrayIndexing	s -> xxch_order_tab [ i ]		1621029	0					
ANR	1622582	PtrMemberAccess	s -> xxch_order_tab		1621029	0					
ANR	1622583	Identifier	s		1621029	0					
ANR	1622584	Identifier	xxch_order_tab		1621029	1					
ANR	1622585	Identifier	i		1621029	1					
ANR	1622586	Identifier	i		1621029	1					
ANR	1622587	ExpressionStatement	s -> lfe_index = channels - 1	548:12:11053:11080	1621029	1	True				
ANR	1622588	AssignmentExpression	s -> lfe_index = channels - 1		1621029	0		=			
ANR	1622589	PtrMemberAccess	s -> lfe_index		1621029	0					
ANR	1622590	Identifier	s		1621029	0					
ANR	1622591	Identifier	lfe_index		1621029	1					
ANR	1622592	AdditiveExpression	channels - 1		1621029	1		-			
ANR	1622593	Identifier	channels		1621029	0					
ANR	1622594	PrimaryExpression	1		1621029	1					
ANR	1622595	ExpressionStatement	s -> channel_order_tab = s -> xxch_order_tab	554:8:11104:11144	1621029	7	True				
ANR	1622596	AssignmentExpression	s -> channel_order_tab = s -> xxch_order_tab		1621029	0		=			
ANR	1622597	PtrMemberAccess	s -> channel_order_tab		1621029	0					
ANR	1622598	Identifier	s		1621029	0					
ANR	1622599	Identifier	channel_order_tab		1621029	1					
ANR	1622600	PtrMemberAccess	s -> xxch_order_tab		1621029	1					
ANR	1622601	Identifier	s		1621029	0					
ANR	1622602	Identifier	xxch_order_tab		1621029	1					
ANR	1622603	IfStatement	if ( avctx -> channels != channels )		1621029	39					
ANR	1622604	Condition	avctx -> channels != channels	560:8:11164:11190	1621029	0	True				
ANR	1622605	EqualityExpression	avctx -> channels != channels		1621029	0		!=			
ANR	1622606	PtrMemberAccess	avctx -> channels		1621029	0					
ANR	1622607	Identifier	avctx		1621029	0					
ANR	1622608	Identifier	channels		1621029	1					
ANR	1622609	Identifier	channels		1621029	1					
ANR	1622610	CompoundStatement		556:37:11062:11062	1621029	1					
ANR	1622611	IfStatement	if ( avctx -> channels )		1621029	0					
ANR	1622612	Condition	avctx -> channels	562:12:11208:11222	1621029	0	True				
ANR	1622613	PtrMemberAccess	avctx -> channels		1621029	0					
ANR	1622614	Identifier	avctx		1621029	0					
ANR	1622615	Identifier	channels		1621029	1					
ANR	1622616	ExpressionStatement	"av_log ( avctx , AV_LOG_INFO , ""Number of channels changed in DCA decoder (%d -> %d)\\n"" , avctx -> channels , channels )"	564:12:11238:11349	1621029	1	True				
ANR	1622617	CallExpression	"av_log ( avctx , AV_LOG_INFO , ""Number of channels changed in DCA decoder (%d -> %d)\\n"" , avctx -> channels , channels )"		1621029	0					
ANR	1622618	Callee	av_log		1621029	0					
ANR	1622619	Identifier	av_log		1621029	0					
ANR	1622620	ArgumentList	avctx		1621029	1					
ANR	1622621	Argument	avctx		1621029	0					
ANR	1622622	Identifier	avctx		1621029	0					
ANR	1622623	Argument	AV_LOG_INFO		1621029	1					
ANR	1622624	Identifier	AV_LOG_INFO		1621029	0					
ANR	1622625	Argument	"""Number of channels changed in DCA decoder (%d -> %d)\\n"""		1621029	2					
ANR	1622626	PrimaryExpression	"""Number of channels changed in DCA decoder (%d -> %d)\\n"""		1621029	0					
ANR	1622627	Argument	avctx -> channels		1621029	3					
ANR	1622628	PtrMemberAccess	avctx -> channels		1621029	0					
ANR	1622629	Identifier	avctx		1621029	0					
ANR	1622630	Identifier	channels		1621029	1					
ANR	1622631	Argument	channels		1621029	4					
ANR	1622632	Identifier	channels		1621029	0					
ANR	1622633	ExpressionStatement	avctx -> channels = channels	566:8:11360:11386	1621029	1	True				
ANR	1622634	AssignmentExpression	avctx -> channels = channels		1621029	0		=			
ANR	1622635	PtrMemberAccess	avctx -> channels		1621029	0					
ANR	1622636	Identifier	avctx		1621029	0					
ANR	1622637	Identifier	channels		1621029	1					
ANR	1622638	Identifier	channels		1621029	1					
ANR	1622639	ExpressionStatement	s -> frame . nb_samples = 256 * ( s -> sample_blocks / 8 )	574:4:11431:11481	1621029	40	True				
ANR	1622640	AssignmentExpression	s -> frame . nb_samples = 256 * ( s -> sample_blocks / 8 )		1621029	0		=			
ANR	1622641	MemberAccess	s -> frame . nb_samples		1621029	0					
ANR	1622642	PtrMemberAccess	s -> frame		1621029	0					
ANR	1622643	Identifier	s		1621029	0					
ANR	1622644	Identifier	frame		1621029	1					
ANR	1622645	Identifier	nb_samples		1621029	1					
ANR	1622646	MultiplicativeExpression	256 * ( s -> sample_blocks / 8 )		1621029	1		*			
ANR	1622647	PrimaryExpression	256		1621029	0					
ANR	1622648	MultiplicativeExpression	s -> sample_blocks / 8		1621029	1		/			
ANR	1622649	PtrMemberAccess	s -> sample_blocks		1621029	0					
ANR	1622650	Identifier	s		1621029	0					
ANR	1622651	Identifier	sample_blocks		1621029	1					
ANR	1622652	PrimaryExpression	8		1621029	1					
ANR	1622653	IfStatement	"if ( ( ret = ff_get_buffer ( avctx , & s -> frame ) ) < 0 )"		1621029	41					
ANR	1622654	Condition	"( ret = ff_get_buffer ( avctx , & s -> frame ) ) < 0"	576:8:11492:11534	1621029	0	True				
ANR	1622655	RelationalExpression	"( ret = ff_get_buffer ( avctx , & s -> frame ) ) < 0"		1621029	0		<			
ANR	1622656	AssignmentExpression	"ret = ff_get_buffer ( avctx , & s -> frame )"		1621029	0		=			
ANR	1622657	Identifier	ret		1621029	0					
ANR	1622658	CallExpression	"ff_get_buffer ( avctx , & s -> frame )"		1621029	1					
ANR	1622659	Callee	ff_get_buffer		1621029	0					
ANR	1622660	Identifier	ff_get_buffer		1621029	0					
ANR	1622661	ArgumentList	avctx		1621029	1					
ANR	1622662	Argument	avctx		1621029	0					
ANR	1622663	Identifier	avctx		1621029	0					
ANR	1622664	Argument	& s -> frame		1621029	1					
ANR	1622665	UnaryOperationExpression	& s -> frame		1621029	0					
ANR	1622666	UnaryOperator	&		1621029	0					
ANR	1622667	PtrMemberAccess	s -> frame		1621029	1					
ANR	1622668	Identifier	s		1621029	0					
ANR	1622669	Identifier	frame		1621029	1					
ANR	1622670	PrimaryExpression	0		1621029	1					
ANR	1622671	CompoundStatement		572:53:11406:11406	1621029	1					
ANR	1622672	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""get_buffer() failed\\n"" )"	578:8:11548:11600	1621029	0	True				
ANR	1622673	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""get_buffer() failed\\n"" )"		1621029	0					
ANR	1622674	Callee	av_log		1621029	0					
ANR	1622675	Identifier	av_log		1621029	0					
ANR	1622676	ArgumentList	avctx		1621029	1					
ANR	1622677	Argument	avctx		1621029	0					
ANR	1622678	Identifier	avctx		1621029	0					
ANR	1622679	Argument	AV_LOG_ERROR		1621029	1					
ANR	1622680	Identifier	AV_LOG_ERROR		1621029	0					
ANR	1622681	Argument	"""get_buffer() failed\\n"""		1621029	2					
ANR	1622682	PrimaryExpression	"""get_buffer() failed\\n"""		1621029	0					
ANR	1622683	ReturnStatement	return ret ;	580:8:11611:11621	1621029	1	True				
ANR	1622684	Identifier	ret		1621029	0					
ANR	1622685	ExpressionStatement	samples_flt = ( float * * ) s -> frame . extended_data	584:4:11635:11683	1621029	42	True				
ANR	1622686	AssignmentExpression	samples_flt = ( float * * ) s -> frame . extended_data		1621029	0		=			
ANR	1622687	Identifier	samples_flt		1621029	0					
ANR	1622688	CastExpression	( float * * ) s -> frame . extended_data		1621029	1					
ANR	1622689	CastTarget	float * *		1621029	0					
ANR	1622690	MemberAccess	s -> frame . extended_data		1621029	1					
ANR	1622691	PtrMemberAccess	s -> frame		1621029	0					
ANR	1622692	Identifier	s		1621029	0					
ANR	1622693	Identifier	frame		1621029	1					
ANR	1622694	Identifier	extended_data		1621029	1					
ANR	1622695	IfStatement	if ( avctx -> channels < full_channels )		1621029	43					
ANR	1622696	Condition	avctx -> channels < full_channels	590:8:11756:11786	1621029	0	True				
ANR	1622697	RelationalExpression	avctx -> channels < full_channels		1621029	0		<			
ANR	1622698	PtrMemberAccess	avctx -> channels		1621029	0					
ANR	1622699	Identifier	avctx		1621029	0					
ANR	1622700	Identifier	channels		1621029	1					
ANR	1622701	Identifier	full_channels		1621029	1					
ANR	1622702	CompoundStatement		586:41:11658:11658	1621029	1					
ANR	1622703	ExpressionStatement	"ret = av_samples_get_buffer_size ( NULL , full_channels - channels , s -> frame . nb_samples , avctx -> sample_fmt , 0 )"	592:8:11800:11991	1621029	0	True				
ANR	1622704	AssignmentExpression	"ret = av_samples_get_buffer_size ( NULL , full_channels - channels , s -> frame . nb_samples , avctx -> sample_fmt , 0 )"		1621029	0		=			
ANR	1622705	Identifier	ret		1621029	0					
ANR	1622706	CallExpression	"av_samples_get_buffer_size ( NULL , full_channels - channels , s -> frame . nb_samples , avctx -> sample_fmt , 0 )"		1621029	1					
ANR	1622707	Callee	av_samples_get_buffer_size		1621029	0					
ANR	1622708	Identifier	av_samples_get_buffer_size		1621029	0					
ANR	1622709	ArgumentList	NULL		1621029	1					
ANR	1622710	Argument	NULL		1621029	0					
ANR	1622711	Identifier	NULL		1621029	0					
ANR	1622712	Argument	full_channels - channels		1621029	1					
ANR	1622713	AdditiveExpression	full_channels - channels		1621029	0		-			
ANR	1622714	Identifier	full_channels		1621029	0					
ANR	1622715	Identifier	channels		1621029	1					
ANR	1622716	Argument	s -> frame . nb_samples		1621029	2					
ANR	1622717	MemberAccess	s -> frame . nb_samples		1621029	0					
ANR	1622718	PtrMemberAccess	s -> frame		1621029	0					
ANR	1622719	Identifier	s		1621029	0					
ANR	1622720	Identifier	frame		1621029	1					
ANR	1622721	Identifier	nb_samples		1621029	1					
ANR	1622722	Argument	avctx -> sample_fmt		1621029	3					
ANR	1622723	PtrMemberAccess	avctx -> sample_fmt		1621029	0					
ANR	1622724	Identifier	avctx		1621029	0					
ANR	1622725	Identifier	sample_fmt		1621029	1					
ANR	1622726	Argument	0		1621029	4					
ANR	1622727	PrimaryExpression	0		1621029	0					
ANR	1622728	IfStatement	if ( ret < 0 )		1621029	1					
ANR	1622729	Condition	ret < 0	598:12:12006:12012	1621029	0	True				
ANR	1622730	RelationalExpression	ret < 0		1621029	0		<			
ANR	1622731	Identifier	ret		1621029	0					
ANR	1622732	PrimaryExpression	0		1621029	1					
ANR	1622733	ReturnStatement	return ret ;	600:12:12028:12038	1621029	1	True				
ANR	1622734	Identifier	ret		1621029	0					
ANR	1622735	ExpressionStatement	"av_fast_malloc ( & s -> extra_channels_buffer , & s -> extra_channels_buffer_size , ret )"	604:8:12051:12153	1621029	2	True				
ANR	1622736	CallExpression	"av_fast_malloc ( & s -> extra_channels_buffer , & s -> extra_channels_buffer_size , ret )"		1621029	0					
ANR	1622737	Callee	av_fast_malloc		1621029	0					
ANR	1622738	Identifier	av_fast_malloc		1621029	0					
ANR	1622739	ArgumentList	& s -> extra_channels_buffer		1621029	1					
ANR	1622740	Argument	& s -> extra_channels_buffer		1621029	0					
ANR	1622741	UnaryOperationExpression	& s -> extra_channels_buffer		1621029	0					
ANR	1622742	UnaryOperator	&		1621029	0					
ANR	1622743	PtrMemberAccess	s -> extra_channels_buffer		1621029	1					
ANR	1622744	Identifier	s		1621029	0					
ANR	1622745	Identifier	extra_channels_buffer		1621029	1					
ANR	1622746	Argument	& s -> extra_channels_buffer_size		1621029	1					
ANR	1622747	UnaryOperationExpression	& s -> extra_channels_buffer_size		1621029	0					
ANR	1622748	UnaryOperator	&		1621029	0					
ANR	1622749	PtrMemberAccess	s -> extra_channels_buffer_size		1621029	1					
ANR	1622750	Identifier	s		1621029	0					
ANR	1622751	Identifier	extra_channels_buffer_size		1621029	1					
ANR	1622752	Argument	ret		1621029	2					
ANR	1622753	Identifier	ret		1621029	0					
ANR	1622754	IfStatement	if ( ! s -> extra_channels_buffer )		1621029	3					
ANR	1622755	Condition	! s -> extra_channels_buffer	608:12:12168:12192	1621029	0	True				
ANR	1622756	UnaryOperationExpression	! s -> extra_channels_buffer		1621029	0					
ANR	1622757	UnaryOperator	!		1621029	0					
ANR	1622758	PtrMemberAccess	s -> extra_channels_buffer		1621029	1					
ANR	1622759	Identifier	s		1621029	0					
ANR	1622760	Identifier	extra_channels_buffer		1621029	1					
ANR	1622761	ReturnStatement	return AVERROR ( ENOMEM ) ;	610:12:12208:12230	1621029	1	True				
ANR	1622762	CallExpression	AVERROR ( ENOMEM )		1621029	0					
ANR	1622763	Callee	AVERROR		1621029	0					
ANR	1622764	Identifier	AVERROR		1621029	0					
ANR	1622765	ArgumentList	ENOMEM		1621029	1					
ANR	1622766	Argument	ENOMEM		1621029	0					
ANR	1622767	Identifier	ENOMEM		1621029	0					
ANR	1622768	ExpressionStatement	"ret = av_samples_fill_arrays ( ( uint8_t * * ) s -> extra_channels , NULL , s -> extra_channels_buffer , full_channels - channels , s -> frame . nb_samples , avctx -> sample_fmt , 0 )"	614:8:12243:12517	1621029	4	True				
ANR	1622769	AssignmentExpression	"ret = av_samples_fill_arrays ( ( uint8_t * * ) s -> extra_channels , NULL , s -> extra_channels_buffer , full_channels - channels , s -> frame . nb_samples , avctx -> sample_fmt , 0 )"		1621029	0		=			
ANR	1622770	Identifier	ret		1621029	0					
ANR	1622771	CallExpression	"av_samples_fill_arrays ( ( uint8_t * * ) s -> extra_channels , NULL , s -> extra_channels_buffer , full_channels - channels , s -> frame . nb_samples , avctx -> sample_fmt , 0 )"		1621029	1					
ANR	1622772	Callee	av_samples_fill_arrays		1621029	0					
ANR	1622773	Identifier	av_samples_fill_arrays		1621029	0					
ANR	1622774	ArgumentList	( uint8_t * * ) s -> extra_channels		1621029	1					
ANR	1622775	Argument	( uint8_t * * ) s -> extra_channels		1621029	0					
ANR	1622776	CastExpression	( uint8_t * * ) s -> extra_channels		1621029	0					
ANR	1622777	CastTarget	uint8_t * *		1621029	0					
ANR	1622778	PtrMemberAccess	s -> extra_channels		1621029	1					
ANR	1622779	Identifier	s		1621029	0					
ANR	1622780	Identifier	extra_channels		1621029	1					
ANR	1622781	Argument	NULL		1621029	1					
ANR	1622782	Identifier	NULL		1621029	0					
ANR	1622783	Argument	s -> extra_channels_buffer		1621029	2					
ANR	1622784	PtrMemberAccess	s -> extra_channels_buffer		1621029	0					
ANR	1622785	Identifier	s		1621029	0					
ANR	1622786	Identifier	extra_channels_buffer		1621029	1					
ANR	1622787	Argument	full_channels - channels		1621029	3					
ANR	1622788	AdditiveExpression	full_channels - channels		1621029	0		-			
ANR	1622789	Identifier	full_channels		1621029	0					
ANR	1622790	Identifier	channels		1621029	1					
ANR	1622791	Argument	s -> frame . nb_samples		1621029	4					
ANR	1622792	MemberAccess	s -> frame . nb_samples		1621029	0					
ANR	1622793	PtrMemberAccess	s -> frame		1621029	0					
ANR	1622794	Identifier	s		1621029	0					
ANR	1622795	Identifier	frame		1621029	1					
ANR	1622796	Identifier	nb_samples		1621029	1					
ANR	1622797	Argument	avctx -> sample_fmt		1621029	5					
ANR	1622798	PtrMemberAccess	avctx -> sample_fmt		1621029	0					
ANR	1622799	Identifier	avctx		1621029	0					
ANR	1622800	Identifier	sample_fmt		1621029	1					
ANR	1622801	Argument	0		1621029	6					
ANR	1622802	PrimaryExpression	0		1621029	0					
ANR	1622803	IfStatement	if ( ret < 0 )		1621029	5					
ANR	1622804	Condition	ret < 0	622:12:12532:12538	1621029	0	True				
ANR	1622805	RelationalExpression	ret < 0		1621029	0		<			
ANR	1622806	Identifier	ret		1621029	0					
ANR	1622807	PrimaryExpression	0		1621029	1					
ANR	1622808	ReturnStatement	return ret ;	624:12:12554:12564	1621029	1	True				
ANR	1622809	Identifier	ret		1621029	0					
ANR	1622810	ForStatement	for ( i = 0 ; i < ( s -> sample_blocks / 8 ) ; i ++ )		1621029	44					
ANR	1622811	ForInit	i = 0 ;	632:9:12623:12628	1621029	0	True				
ANR	1622812	AssignmentExpression	i = 0		1621029	0		=			
ANR	1622813	Identifier	i		1621029	0					
ANR	1622814	PrimaryExpression	0		1621029	1					
ANR	1622815	Condition	i < ( s -> sample_blocks / 8 )	632:16:12630:12655	1621029	1	True				
ANR	1622816	RelationalExpression	i < ( s -> sample_blocks / 8 )		1621029	0		<			
ANR	1622817	Identifier	i		1621029	0					
ANR	1622818	MultiplicativeExpression	s -> sample_blocks / 8		1621029	1		/			
ANR	1622819	PtrMemberAccess	s -> sample_blocks		1621029	0					
ANR	1622820	Identifier	s		1621029	0					
ANR	1622821	Identifier	sample_blocks		1621029	1					
ANR	1622822	PrimaryExpression	8		1621029	1					
ANR	1622823	PostIncDecOperationExpression	i ++	632:44:12658:12660	1621029	2	True				
ANR	1622824	Identifier	i		1621029	0					
ANR	1622825	IncDec	++		1621029	1					
ANR	1622826	CompoundStatement		630:8:12543:12549	1621029	3					
ANR	1622827	IdentifierDeclStatement	int ch ;	634:8:12674:12680	1621029	0	True				
ANR	1622828	IdentifierDecl	ch		1621029	0					
ANR	1622829	IdentifierDeclType	int		1621029	0					
ANR	1622830	Identifier	ch		1621029	1					
ANR	1622831	ForStatement	for ( ch = 0 ; ch < channels ; ch ++ )		1621029	1					
ANR	1622832	ForInit	ch = 0 ;	638:13:12698:12704	1621029	0	True				
ANR	1622833	AssignmentExpression	ch = 0		1621029	0		=			
ANR	1622834	Identifier	ch		1621029	0					
ANR	1622835	PrimaryExpression	0		1621029	1					
ANR	1622836	Condition	ch < channels	638:21:12706:12718	1621029	1	True				
ANR	1622837	RelationalExpression	ch < channels		1621029	0		<			
ANR	1622838	Identifier	ch		1621029	0					
ANR	1622839	Identifier	channels		1621029	1					
ANR	1622840	PostIncDecOperationExpression	ch ++	638:36:12721:12724	1621029	2	True				
ANR	1622841	Identifier	ch		1621029	0					
ANR	1622842	IncDec	++		1621029	1					
ANR	1622843	ExpressionStatement	s -> samples_chanptr [ ch ] = samples_flt [ ch ] + i * 256	640:12:12740:12790	1621029	3	True				
ANR	1622844	AssignmentExpression	s -> samples_chanptr [ ch ] = samples_flt [ ch ] + i * 256		1621029	0		=			
ANR	1622845	ArrayIndexing	s -> samples_chanptr [ ch ]		1621029	0					
ANR	1622846	PtrMemberAccess	s -> samples_chanptr		1621029	0					
ANR	1622847	Identifier	s		1621029	0					
ANR	1622848	Identifier	samples_chanptr		1621029	1					
ANR	1622849	Identifier	ch		1621029	1					
ANR	1622850	AdditiveExpression	samples_flt [ ch ] + i * 256		1621029	1		+			
ANR	1622851	ArrayIndexing	samples_flt [ ch ]		1621029	0					
ANR	1622852	Identifier	samples_flt		1621029	0					
ANR	1622853	Identifier	ch		1621029	1					
ANR	1622854	MultiplicativeExpression	i * 256		1621029	1		*			
ANR	1622855	Identifier	i		1621029	0					
ANR	1622856	PrimaryExpression	256		1621029	1					
ANR	1622857	ForStatement	for ( ; ch < full_channels ; ch ++ )		1621029	2					
ANR	1622858	Condition	ch < full_channels	642:15:12808:12825	1621029	0	True				
ANR	1622859	RelationalExpression	ch < full_channels		1621029	0		<			
ANR	1622860	Identifier	ch		1621029	0					
ANR	1622861	Identifier	full_channels		1621029	1					
ANR	1622862	PostIncDecOperationExpression	ch ++	642:35:12828:12831	1621029	1	True				
ANR	1622863	Identifier	ch		1621029	0					
ANR	1622864	IncDec	++		1621029	1					
ANR	1622865	ExpressionStatement	s -> samples_chanptr [ ch ] = s -> extra_channels [ ch - channels ] + i * 256	644:12:12847:12914	1621029	2	True				
ANR	1622866	AssignmentExpression	s -> samples_chanptr [ ch ] = s -> extra_channels [ ch - channels ] + i * 256		1621029	0		=			
ANR	1622867	ArrayIndexing	s -> samples_chanptr [ ch ]		1621029	0					
ANR	1622868	PtrMemberAccess	s -> samples_chanptr		1621029	0					
ANR	1622869	Identifier	s		1621029	0					
ANR	1622870	Identifier	samples_chanptr		1621029	1					
ANR	1622871	Identifier	ch		1621029	1					
ANR	1622872	AdditiveExpression	s -> extra_channels [ ch - channels ] + i * 256		1621029	1		+			
ANR	1622873	ArrayIndexing	s -> extra_channels [ ch - channels ]		1621029	0					
ANR	1622874	PtrMemberAccess	s -> extra_channels		1621029	0					
ANR	1622875	Identifier	s		1621029	0					
ANR	1622876	Identifier	extra_channels		1621029	1					
ANR	1622877	AdditiveExpression	ch - channels		1621029	1		-			
ANR	1622878	Identifier	ch		1621029	0					
ANR	1622879	Identifier	channels		1621029	1					
ANR	1622880	MultiplicativeExpression	i * 256		1621029	1		*			
ANR	1622881	Identifier	i		1621029	0					
ANR	1622882	PrimaryExpression	256		1621029	1					
ANR	1622883	ExpressionStatement	"dca_filter_channels ( s , i )"	648:8:12927:12952	1621029	3	True				
ANR	1622884	CallExpression	"dca_filter_channels ( s , i )"		1621029	0					
ANR	1622885	Callee	dca_filter_channels		1621029	0					
ANR	1622886	Identifier	dca_filter_channels		1621029	0					
ANR	1622887	ArgumentList	s		1621029	1					
ANR	1622888	Argument	s		1621029	0					
ANR	1622889	Identifier	s		1621029	0					
ANR	1622890	Argument	i		1621029	1					
ANR	1622891	Identifier	i		1621029	0					
ANR	1622892	IfStatement	if ( ( s -> source_pcm_res & 1 ) && s -> xch_present )		1621029	4					
ANR	1622893	Condition	( s -> source_pcm_res & 1 ) && s -> xch_present	656:12:13123:13163	1621029	0	True				
ANR	1622894	AndExpression	( s -> source_pcm_res & 1 ) && s -> xch_present		1621029	0		&&			
ANR	1622895	BitAndExpression	s -> source_pcm_res & 1		1621029	0		&			
ANR	1622896	PtrMemberAccess	s -> source_pcm_res		1621029	0					
ANR	1622897	Identifier	s		1621029	0					
ANR	1622898	Identifier	source_pcm_res		1621029	1					
ANR	1622899	PrimaryExpression	1		1621029	1					
ANR	1622900	PtrMemberAccess	s -> xch_present		1621029	1					
ANR	1622901	Identifier	s		1621029	0					
ANR	1622902	Identifier	xch_present		1621029	1					
ANR	1622903	CompoundStatement		658:12:13244:13328	1621029	1					
ANR	1622904	IdentifierDeclStatement	float * back_chan = s -> samples_chanptr [ s -> channel_order_tab [ s -> xch_base_channel ] ] ;	658:12:13181:13261	1621029	0	True				
ANR	1622905	IdentifierDecl	* back_chan = s -> samples_chanptr [ s -> channel_order_tab [ s -> xch_base_channel ] ]		1621029	0					
ANR	1622906	IdentifierDeclType	float *		1621029	0					
ANR	1622907	Identifier	back_chan		1621029	1					
ANR	1622908	AssignmentExpression	* back_chan = s -> samples_chanptr [ s -> channel_order_tab [ s -> xch_base_channel ] ]		1621029	2		=			
ANR	1622909	Identifier	back_chan		1621029	0					
ANR	1622910	ArrayIndexing	s -> samples_chanptr [ s -> channel_order_tab [ s -> xch_base_channel ] ]		1621029	1					
ANR	1622911	PtrMemberAccess	s -> samples_chanptr		1621029	0					
ANR	1622912	Identifier	s		1621029	0					
ANR	1622913	Identifier	samples_chanptr		1621029	1					
ANR	1622914	ArrayIndexing	s -> channel_order_tab [ s -> xch_base_channel ]		1621029	1					
ANR	1622915	PtrMemberAccess	s -> channel_order_tab		1621029	0					
ANR	1622916	Identifier	s		1621029	0					
ANR	1622917	Identifier	channel_order_tab		1621029	1					
ANR	1622918	PtrMemberAccess	s -> xch_base_channel		1621029	1					
ANR	1622919	Identifier	s		1621029	0					
ANR	1622920	Identifier	xch_base_channel		1621029	1					
ANR	1622921	IdentifierDeclStatement	float * lt_chan = s -> samples_chanptr [ s -> channel_order_tab [ s -> xch_base_channel - 2 ] ] ;	660:12:13276:13360	1621029	1	True				
ANR	1622922	IdentifierDecl	* lt_chan = s -> samples_chanptr [ s -> channel_order_tab [ s -> xch_base_channel - 2 ] ]		1621029	0					
ANR	1622923	IdentifierDeclType	float *		1621029	0					
ANR	1622924	Identifier	lt_chan		1621029	1					
ANR	1622925	AssignmentExpression	* lt_chan = s -> samples_chanptr [ s -> channel_order_tab [ s -> xch_base_channel - 2 ] ]		1621029	2		=			
ANR	1622926	Identifier	lt_chan		1621029	0					
ANR	1622927	ArrayIndexing	s -> samples_chanptr [ s -> channel_order_tab [ s -> xch_base_channel - 2 ] ]		1621029	1					
ANR	1622928	PtrMemberAccess	s -> samples_chanptr		1621029	0					
ANR	1622929	Identifier	s		1621029	0					
ANR	1622930	Identifier	samples_chanptr		1621029	1					
ANR	1622931	ArrayIndexing	s -> channel_order_tab [ s -> xch_base_channel - 2 ]		1621029	1					
ANR	1622932	PtrMemberAccess	s -> channel_order_tab		1621029	0					
ANR	1622933	Identifier	s		1621029	0					
ANR	1622934	Identifier	channel_order_tab		1621029	1					
ANR	1622935	AdditiveExpression	s -> xch_base_channel - 2		1621029	1		-			
ANR	1622936	PtrMemberAccess	s -> xch_base_channel		1621029	0					
ANR	1622937	Identifier	s		1621029	0					
ANR	1622938	Identifier	xch_base_channel		1621029	1					
ANR	1622939	PrimaryExpression	2		1621029	1					
ANR	1622940	IdentifierDeclStatement	float * rt_chan = s -> samples_chanptr [ s -> channel_order_tab [ s -> xch_base_channel - 1 ] ] ;	662:12:13375:13459	1621029	2	True				
ANR	1622941	IdentifierDecl	* rt_chan = s -> samples_chanptr [ s -> channel_order_tab [ s -> xch_base_channel - 1 ] ]		1621029	0					
ANR	1622942	IdentifierDeclType	float *		1621029	0					
ANR	1622943	Identifier	rt_chan		1621029	1					
ANR	1622944	AssignmentExpression	* rt_chan = s -> samples_chanptr [ s -> channel_order_tab [ s -> xch_base_channel - 1 ] ]		1621029	2		=			
ANR	1622945	Identifier	rt_chan		1621029	0					
ANR	1622946	ArrayIndexing	s -> samples_chanptr [ s -> channel_order_tab [ s -> xch_base_channel - 1 ] ]		1621029	1					
ANR	1622947	PtrMemberAccess	s -> samples_chanptr		1621029	0					
ANR	1622948	Identifier	s		1621029	0					
ANR	1622949	Identifier	samples_chanptr		1621029	1					
ANR	1622950	ArrayIndexing	s -> channel_order_tab [ s -> xch_base_channel - 1 ]		1621029	1					
ANR	1622951	PtrMemberAccess	s -> channel_order_tab		1621029	0					
ANR	1622952	Identifier	s		1621029	0					
ANR	1622953	Identifier	channel_order_tab		1621029	1					
ANR	1622954	AdditiveExpression	s -> xch_base_channel - 1		1621029	1		-			
ANR	1622955	PtrMemberAccess	s -> xch_base_channel		1621029	0					
ANR	1622956	Identifier	s		1621029	0					
ANR	1622957	Identifier	xch_base_channel		1621029	1					
ANR	1622958	PrimaryExpression	1		1621029	1					
ANR	1622959	ExpressionStatement	"s -> fdsp . vector_fmac_scalar ( lt_chan , back_chan , - M_SQRT1_2 , 256 )"	664:12:13474:13537	1621029	3	True				
ANR	1622960	CallExpression	"s -> fdsp . vector_fmac_scalar ( lt_chan , back_chan , - M_SQRT1_2 , 256 )"		1621029	0					
ANR	1622961	Callee	s -> fdsp . vector_fmac_scalar		1621029	0					
ANR	1622962	MemberAccess	s -> fdsp . vector_fmac_scalar		1621029	0					
ANR	1622963	PtrMemberAccess	s -> fdsp		1621029	0					
ANR	1622964	Identifier	s		1621029	0					
ANR	1622965	Identifier	fdsp		1621029	1					
ANR	1622966	Identifier	vector_fmac_scalar		1621029	1					
ANR	1622967	ArgumentList	lt_chan		1621029	1					
ANR	1622968	Argument	lt_chan		1621029	0					
ANR	1622969	Identifier	lt_chan		1621029	0					
ANR	1622970	Argument	back_chan		1621029	1					
ANR	1622971	Identifier	back_chan		1621029	0					
ANR	1622972	Argument	- M_SQRT1_2		1621029	2					
ANR	1622973	UnaryOperationExpression	- M_SQRT1_2		1621029	0					
ANR	1622974	UnaryOperator	-		1621029	0					
ANR	1622975	Identifier	M_SQRT1_2		1621029	1					
ANR	1622976	Argument	256		1621029	3					
ANR	1622977	PrimaryExpression	256		1621029	0					
ANR	1622978	ExpressionStatement	"s -> fdsp . vector_fmac_scalar ( rt_chan , back_chan , - M_SQRT1_2 , 256 )"	666:12:13552:13615	1621029	4	True				
ANR	1622979	CallExpression	"s -> fdsp . vector_fmac_scalar ( rt_chan , back_chan , - M_SQRT1_2 , 256 )"		1621029	0					
ANR	1622980	Callee	s -> fdsp . vector_fmac_scalar		1621029	0					
ANR	1622981	MemberAccess	s -> fdsp . vector_fmac_scalar		1621029	0					
ANR	1622982	PtrMemberAccess	s -> fdsp		1621029	0					
ANR	1622983	Identifier	s		1621029	0					
ANR	1622984	Identifier	fdsp		1621029	1					
ANR	1622985	Identifier	vector_fmac_scalar		1621029	1					
ANR	1622986	ArgumentList	rt_chan		1621029	1					
ANR	1622987	Argument	rt_chan		1621029	0					
ANR	1622988	Identifier	rt_chan		1621029	0					
ANR	1622989	Argument	back_chan		1621029	1					
ANR	1622990	Identifier	back_chan		1621029	0					
ANR	1622991	Argument	- M_SQRT1_2		1621029	2					
ANR	1622992	UnaryOperationExpression	- M_SQRT1_2		1621029	0					
ANR	1622993	UnaryOperator	-		1621029	0					
ANR	1622994	Identifier	M_SQRT1_2		1621029	1					
ANR	1622995	Argument	256		1621029	3					
ANR	1622996	PrimaryExpression	256		1621029	0					
ANR	1622997	IfStatement	if ( s -> xxch_dmix_embedded )		1621029	5					
ANR	1622998	Condition	s -> xxch_dmix_embedded	674:12:13725:13745	1621029	0	True				
ANR	1622999	PtrMemberAccess	s -> xxch_dmix_embedded		1621029	0					
ANR	1623000	Identifier	s		1621029	0					
ANR	1623001	Identifier	xxch_dmix_embedded		1621029	1					
ANR	1623002	CompoundStatement		670:35:13617:13617	1621029	1					
ANR	1623003	ExpressionStatement	ch = num_core_channels	678:12:13813:13835	1621029	0	True				
ANR	1623004	AssignmentExpression	ch = num_core_channels		1621029	0		=			
ANR	1623005	Identifier	ch		1621029	0					
ANR	1623006	Identifier	num_core_channels		1621029	1					
ANR	1623007	ForStatement	for ( chset = 0 ; chset < s -> xxch_chset ; chset ++ )		1621029	1					
ANR	1623008	ForInit	chset = 0 ;	680:17:13855:13864	1621029	0	True				
ANR	1623009	AssignmentExpression	chset = 0		1621029	0		=			
ANR	1623010	Identifier	chset		1621029	0					
ANR	1623011	PrimaryExpression	0		1621029	1					
ANR	1623012	Condition	chset < s -> xxch_chset	680:28:13866:13886	1621029	1	True				
ANR	1623013	RelationalExpression	chset < s -> xxch_chset		1621029	0		<			
ANR	1623014	Identifier	chset		1621029	0					
ANR	1623015	PtrMemberAccess	s -> xxch_chset		1621029	1					
ANR	1623016	Identifier	s		1621029	0					
ANR	1623017	Identifier	xxch_chset		1621029	1					
ANR	1623018	PostIncDecOperationExpression	chset ++	680:51:13889:13895	1621029	2	True				
ANR	1623019	Identifier	chset		1621029	0					
ANR	1623020	IncDec	++		1621029	1					
ANR	1623021	CompoundStatement		676:60:13767:13767	1621029	3					
ANR	1623022	ExpressionStatement	endch = ch + s -> xxch_chset_nch [ chset ]	682:16:13917:13954	1621029	0	True				
ANR	1623023	AssignmentExpression	endch = ch + s -> xxch_chset_nch [ chset ]		1621029	0		=			
ANR	1623024	Identifier	endch		1621029	0					
ANR	1623025	AdditiveExpression	ch + s -> xxch_chset_nch [ chset ]		1621029	1		+			
ANR	1623026	Identifier	ch		1621029	0					
ANR	1623027	ArrayIndexing	s -> xxch_chset_nch [ chset ]		1621029	1					
ANR	1623028	PtrMemberAccess	s -> xxch_chset_nch		1621029	0					
ANR	1623029	Identifier	s		1621029	0					
ANR	1623030	Identifier	xxch_chset_nch		1621029	1					
ANR	1623031	Identifier	chset		1621029	1					
ANR	1623032	ExpressionStatement	mask = s -> xxch_dmix_embedded	684:16:13973:14001	1621029	1	True				
ANR	1623033	AssignmentExpression	mask = s -> xxch_dmix_embedded		1621029	0		=			
ANR	1623034	Identifier	mask		1621029	0					
ANR	1623035	PtrMemberAccess	s -> xxch_dmix_embedded		1621029	1					
ANR	1623036	Identifier	s		1621029	0					
ANR	1623037	Identifier	xxch_dmix_embedded		1621029	1					
ANR	1623038	ForStatement	for ( j = ch ; j < endch ; j ++ )		1621029	2					
ANR	1623039	ForInit	j = ch ;	690:21:14063:14069	1621029	0	True				
ANR	1623040	AssignmentExpression	j = ch		1621029	0		=			
ANR	1623041	Identifier	j		1621029	0					
ANR	1623042	Identifier	ch		1621029	1					
ANR	1623043	Condition	j < endch	690:29:14071:14079	1621029	1	True				
ANR	1623044	RelationalExpression	j < endch		1621029	0		<			
ANR	1623045	Identifier	j		1621029	0					
ANR	1623046	Identifier	endch		1621029	1					
ANR	1623047	PostIncDecOperationExpression	j ++	690:40:14082:14084	1621029	2	True				
ANR	1623048	Identifier	j		1621029	0					
ANR	1623049	IncDec	++		1621029	1					
ANR	1623050	CompoundStatement		686:45:13956:13956	1621029	3					
ANR	1623051	IfStatement	if ( mask & ( 1 << j ) )		1621029	0					
ANR	1623052	Condition	mask & ( 1 << j )	692:24:14114:14128	1621029	0	True				
ANR	1623053	BitAndExpression	mask & ( 1 << j )		1621029	0		&			
ANR	1623054	Identifier	mask		1621029	0					
ANR	1623055	ShiftExpression	1 << j		1621029	1		<<			
ANR	1623056	PrimaryExpression	1		1621029	0					
ANR	1623057	Identifier	j		1621029	1					
ANR	1623058	CompoundStatement		688:41:14000:14000	1621029	1					
ANR	1623059	ExpressionStatement	src_chan = s -> samples_chanptr [ s -> channel_order_tab [ j ] ]	694:24:14196:14250	1621029	0	True				
ANR	1623060	AssignmentExpression	src_chan = s -> samples_chanptr [ s -> channel_order_tab [ j ] ]		1621029	0		=			
ANR	1623061	Identifier	src_chan		1621029	0					
ANR	1623062	ArrayIndexing	s -> samples_chanptr [ s -> channel_order_tab [ j ] ]		1621029	1					
ANR	1623063	PtrMemberAccess	s -> samples_chanptr		1621029	0					
ANR	1623064	Identifier	s		1621029	0					
ANR	1623065	Identifier	samples_chanptr		1621029	1					
ANR	1623066	ArrayIndexing	s -> channel_order_tab [ j ]		1621029	1					
ANR	1623067	PtrMemberAccess	s -> channel_order_tab		1621029	0					
ANR	1623068	Identifier	s		1621029	0					
ANR	1623069	Identifier	channel_order_tab		1621029	1					
ANR	1623070	Identifier	j		1621029	1					
ANR	1623071	ForStatement	for ( k = 0 ; k < endch ; k ++ )		1621029	1					
ANR	1623072	ForInit	k = 0 ;	696:29:14282:14287	1621029	0	True				
ANR	1623073	AssignmentExpression	k = 0		1621029	0		=			
ANR	1623074	Identifier	k		1621029	0					
ANR	1623075	PrimaryExpression	0		1621029	1					
ANR	1623076	Condition	k < endch	696:36:14289:14297	1621029	1	True				
ANR	1623077	RelationalExpression	k < endch		1621029	0		<			
ANR	1623078	Identifier	k		1621029	0					
ANR	1623079	Identifier	endch		1621029	1					
ANR	1623080	PostIncDecOperationExpression	k ++	696:47:14300:14302	1621029	2	True				
ANR	1623081	Identifier	k		1621029	0					
ANR	1623082	IncDec	++		1621029	1					
ANR	1623083	CompoundStatement		692:52:14174:14174	1621029	3					
ANR	1623084	ExpressionStatement	achan = s -> channel_order_tab [ k ]	698:28:14336:14367	1621029	0	True				
ANR	1623085	AssignmentExpression	achan = s -> channel_order_tab [ k ]		1621029	0		=			
ANR	1623086	Identifier	achan		1621029	0					
ANR	1623087	ArrayIndexing	s -> channel_order_tab [ k ]		1621029	1					
ANR	1623088	PtrMemberAccess	s -> channel_order_tab		1621029	0					
ANR	1623089	Identifier	s		1621029	0					
ANR	1623090	Identifier	channel_order_tab		1621029	1					
ANR	1623091	Identifier	k		1621029	1					
ANR	1623092	ExpressionStatement	scale = s -> xxch_dmix_coeff [ j ] [ k ]	700:28:14398:14430	1621029	1	True				
ANR	1623093	AssignmentExpression	scale = s -> xxch_dmix_coeff [ j ] [ k ]		1621029	0		=			
ANR	1623094	Identifier	scale		1621029	0					
ANR	1623095	ArrayIndexing	s -> xxch_dmix_coeff [ j ] [ k ]		1621029	1					
ANR	1623096	ArrayIndexing	s -> xxch_dmix_coeff [ j ]		1621029	0					
ANR	1623097	PtrMemberAccess	s -> xxch_dmix_coeff		1621029	0					
ANR	1623098	Identifier	s		1621029	0					
ANR	1623099	Identifier	xxch_dmix_coeff		1621029	1					
ANR	1623100	Identifier	j		1621029	1					
ANR	1623101	Identifier	k		1621029	1					
ANR	1623102	IfStatement	if ( scale != 0.0 )		1621029	2					
ANR	1623103	Condition	scale != 0.0	702:32:14465:14476	1621029	0	True				
ANR	1623104	EqualityExpression	scale != 0.0		1621029	0		!=			
ANR	1623105	Identifier	scale		1621029	0					
ANR	1623106	PrimaryExpression	0.0		1621029	1					
ANR	1623107	CompoundStatement		698:46:14348:14348	1621029	1					
ANR	1623108	ExpressionStatement	dst_chan = s -> samples_chanptr [ achan ]	704:32:14514:14550	1621029	0	True				
ANR	1623109	AssignmentExpression	dst_chan = s -> samples_chanptr [ achan ]		1621029	0		=			
ANR	1623110	Identifier	dst_chan		1621029	0					
ANR	1623111	ArrayIndexing	s -> samples_chanptr [ achan ]		1621029	1					
ANR	1623112	PtrMemberAccess	s -> samples_chanptr		1621029	0					
ANR	1623113	Identifier	s		1621029	0					
ANR	1623114	Identifier	samples_chanptr		1621029	1					
ANR	1623115	Identifier	achan		1621029	1					
ANR	1623116	ExpressionStatement	"s -> fdsp . vector_fmac_scalar ( dst_chan , src_chan , - scale , 256 )"	706:32:14585:14704	1621029	1	True				
ANR	1623117	CallExpression	"s -> fdsp . vector_fmac_scalar ( dst_chan , src_chan , - scale , 256 )"		1621029	0					
ANR	1623118	Callee	s -> fdsp . vector_fmac_scalar		1621029	0					
ANR	1623119	MemberAccess	s -> fdsp . vector_fmac_scalar		1621029	0					
ANR	1623120	PtrMemberAccess	s -> fdsp		1621029	0					
ANR	1623121	Identifier	s		1621029	0					
ANR	1623122	Identifier	fdsp		1621029	1					
ANR	1623123	Identifier	vector_fmac_scalar		1621029	1					
ANR	1623124	ArgumentList	dst_chan		1621029	1					
ANR	1623125	Argument	dst_chan		1621029	0					
ANR	1623126	Identifier	dst_chan		1621029	0					
ANR	1623127	Argument	src_chan		1621029	1					
ANR	1623128	Identifier	src_chan		1621029	0					
ANR	1623129	Argument	- scale		1621029	2					
ANR	1623130	UnaryOperationExpression	- scale		1621029	0					
ANR	1623131	UnaryOperator	-		1621029	0					
ANR	1623132	Identifier	scale		1621029	1					
ANR	1623133	Argument	256		1621029	3					
ANR	1623134	PrimaryExpression	256		1621029	0					
ANR	1623135	IfStatement	if ( ( mask & ( 1 << ch ) ) && s -> xxch_dmix_sf [ chset ] != 1.0f )		1621029	3					
ANR	1623136	Condition	( mask & ( 1 << ch ) ) && s -> xxch_dmix_sf [ chset ] != 1.0f	722:20:14909:14960	1621029	0	True				
ANR	1623137	AndExpression	( mask & ( 1 << ch ) ) && s -> xxch_dmix_sf [ chset ] != 1.0f		1621029	0		&&			
ANR	1623138	BitAndExpression	mask & ( 1 << ch )		1621029	0		&			
ANR	1623139	Identifier	mask		1621029	0					
ANR	1623140	ShiftExpression	1 << ch		1621029	1		<<			
ANR	1623141	PrimaryExpression	1		1621029	0					
ANR	1623142	Identifier	ch		1621029	1					
ANR	1623143	EqualityExpression	s -> xxch_dmix_sf [ chset ] != 1.0f		1621029	1		!=			
ANR	1623144	ArrayIndexing	s -> xxch_dmix_sf [ chset ]		1621029	0					
ANR	1623145	PtrMemberAccess	s -> xxch_dmix_sf		1621029	0					
ANR	1623146	Identifier	s		1621029	0					
ANR	1623147	Identifier	xxch_dmix_sf		1621029	1					
ANR	1623148	Identifier	chset		1621029	1					
ANR	1623149	PrimaryExpression	1.0f		1621029	1					
ANR	1623150	CompoundStatement		718:74:14832:14832	1621029	1					
ANR	1623151	ExpressionStatement	scale = s -> xxch_dmix_sf [ chset ]	724:20:14986:15016	1621029	0	True				
ANR	1623152	AssignmentExpression	scale = s -> xxch_dmix_sf [ chset ]		1621029	0		=			
ANR	1623153	Identifier	scale		1621029	0					
ANR	1623154	ArrayIndexing	s -> xxch_dmix_sf [ chset ]		1621029	1					
ANR	1623155	PtrMemberAccess	s -> xxch_dmix_sf		1621029	0					
ANR	1623156	Identifier	s		1621029	0					
ANR	1623157	Identifier	xxch_dmix_sf		1621029	1					
ANR	1623158	Identifier	chset		1621029	1					
ANR	1623159	ForStatement	for ( j = 0 ; j < ch ; j ++ )		1621029	1					
ANR	1623160	ForInit	j = 0 ;	728:25:15046:15051	1621029	0	True				
ANR	1623161	AssignmentExpression	j = 0		1621029	0		=			
ANR	1623162	Identifier	j		1621029	0					
ANR	1623163	PrimaryExpression	0		1621029	1					
ANR	1623164	Condition	j < ch	728:32:15053:15058	1621029	1	True				
ANR	1623165	RelationalExpression	j < ch		1621029	0		<			
ANR	1623166	Identifier	j		1621029	0					
ANR	1623167	Identifier	ch		1621029	1					
ANR	1623168	PostIncDecOperationExpression	j ++	728:40:15061:15063	1621029	2	True				
ANR	1623169	Identifier	j		1621029	0					
ANR	1623170	IncDec	++		1621029	1					
ANR	1623171	CompoundStatement		724:45:14935:14935	1621029	3					
ANR	1623172	ExpressionStatement	src_chan = s -> samples_chanptr [ s -> channel_order_tab [ j ] ]	730:24:15093:15147	1621029	0	True				
ANR	1623173	AssignmentExpression	src_chan = s -> samples_chanptr [ s -> channel_order_tab [ j ] ]		1621029	0		=			
ANR	1623174	Identifier	src_chan		1621029	0					
ANR	1623175	ArrayIndexing	s -> samples_chanptr [ s -> channel_order_tab [ j ] ]		1621029	1					
ANR	1623176	PtrMemberAccess	s -> samples_chanptr		1621029	0					
ANR	1623177	Identifier	s		1621029	0					
ANR	1623178	Identifier	samples_chanptr		1621029	1					
ANR	1623179	ArrayIndexing	s -> channel_order_tab [ j ]		1621029	1					
ANR	1623180	PtrMemberAccess	s -> channel_order_tab		1621029	0					
ANR	1623181	Identifier	s		1621029	0					
ANR	1623182	Identifier	channel_order_tab		1621029	1					
ANR	1623183	Identifier	j		1621029	1					
ANR	1623184	ForStatement	for ( k = 0 ; k < 256 ; k ++ )		1621029	1					
ANR	1623185	ForInit	k = 0 ;	732:29:15179:15184	1621029	0	True				
ANR	1623186	AssignmentExpression	k = 0		1621029	0		=			
ANR	1623187	Identifier	k		1621029	0					
ANR	1623188	PrimaryExpression	0		1621029	1					
ANR	1623189	Condition	k < 256	732:36:15186:15192	1621029	1	True				
ANR	1623190	RelationalExpression	k < 256		1621029	0		<			
ANR	1623191	Identifier	k		1621029	0					
ANR	1623192	PrimaryExpression	256		1621029	1					
ANR	1623193	PostIncDecOperationExpression	k ++	732:45:15195:15197	1621029	2	True				
ANR	1623194	Identifier	k		1621029	0					
ANR	1623195	IncDec	++		1621029	1					
ANR	1623196	ExpressionStatement	src_chan [ k ] *= scale	734:28:15229:15249	1621029	3	True				
ANR	1623197	AssignmentExpression	src_chan [ k ] *= scale		1621029	0		*=			
ANR	1623198	ArrayIndexing	src_chan [ k ]		1621029	0					
ANR	1623199	Identifier	src_chan		1621029	0					
ANR	1623200	Identifier	k		1621029	1					
ANR	1623201	Identifier	scale		1621029	1					
ANR	1623202	IfStatement	if ( s -> lfe )		1621029	2					
ANR	1623203	Condition	s -> lfe	742:24:15383:15388	1621029	0	True				
ANR	1623204	PtrMemberAccess	s -> lfe		1621029	0					
ANR	1623205	Identifier	s		1621029	0					
ANR	1623206	Identifier	lfe		1621029	1					
ANR	1623207	CompoundStatement		738:32:15260:15260	1621029	1					
ANR	1623208	ExpressionStatement	src_chan = s -> samples_chanptr [ s -> lfe_index ]	744:24:15418:15461	1621029	0	True				
ANR	1623209	AssignmentExpression	src_chan = s -> samples_chanptr [ s -> lfe_index ]		1621029	0		=			
ANR	1623210	Identifier	src_chan		1621029	0					
ANR	1623211	ArrayIndexing	s -> samples_chanptr [ s -> lfe_index ]		1621029	1					
ANR	1623212	PtrMemberAccess	s -> samples_chanptr		1621029	0					
ANR	1623213	Identifier	s		1621029	0					
ANR	1623214	Identifier	samples_chanptr		1621029	1					
ANR	1623215	PtrMemberAccess	s -> lfe_index		1621029	1					
ANR	1623216	Identifier	s		1621029	0					
ANR	1623217	Identifier	lfe_index		1621029	1					
ANR	1623218	ForStatement	for ( k = 0 ; k < 256 ; k ++ )		1621029	1					
ANR	1623219	ForInit	k = 0 ;	746:29:15493:15498	1621029	0	True				
ANR	1623220	AssignmentExpression	k = 0		1621029	0		=			
ANR	1623221	Identifier	k		1621029	0					
ANR	1623222	PrimaryExpression	0		1621029	1					
ANR	1623223	Condition	k < 256	746:36:15500:15506	1621029	1	True				
ANR	1623224	RelationalExpression	k < 256		1621029	0		<			
ANR	1623225	Identifier	k		1621029	0					
ANR	1623226	PrimaryExpression	256		1621029	1					
ANR	1623227	PostIncDecOperationExpression	k ++	746:45:15509:15511	1621029	2	True				
ANR	1623228	Identifier	k		1621029	0					
ANR	1623229	IncDec	++		1621029	1					
ANR	1623230	ExpressionStatement	src_chan [ k ] *= scale	748:28:15543:15563	1621029	3	True				
ANR	1623231	AssignmentExpression	src_chan [ k ] *= scale		1621029	0		*=			
ANR	1623232	ArrayIndexing	src_chan [ k ]		1621029	0					
ANR	1623233	Identifier	src_chan		1621029	0					
ANR	1623234	Identifier	k		1621029	1					
ANR	1623235	Identifier	scale		1621029	1					
ANR	1623236	ExpressionStatement	ch = endch	756:16:15626:15636	1621029	4	True				
ANR	1623237	AssignmentExpression	ch = endch		1621029	0		=			
ANR	1623238	Identifier	ch		1621029	0					
ANR	1623239	Identifier	endch		1621029	1					
ANR	1623240	ExpressionStatement	lfe_samples = 2 * s -> lfe * ( s -> sample_blocks / 8 )	770:4:15710:15759	1621029	45	True				
ANR	1623241	AssignmentExpression	lfe_samples = 2 * s -> lfe * ( s -> sample_blocks / 8 )		1621029	0		=			
ANR	1623242	Identifier	lfe_samples		1621029	0					
ANR	1623243	MultiplicativeExpression	2 * s -> lfe * ( s -> sample_blocks / 8 )		1621029	1		*			
ANR	1623244	PrimaryExpression	2		1621029	0					
ANR	1623245	MultiplicativeExpression	s -> lfe * ( s -> sample_blocks / 8 )		1621029	1		*			
ANR	1623246	PtrMemberAccess	s -> lfe		1621029	0					
ANR	1623247	Identifier	s		1621029	0					
ANR	1623248	Identifier	lfe		1621029	1					
ANR	1623249	MultiplicativeExpression	s -> sample_blocks / 8		1621029	1		/			
ANR	1623250	PtrMemberAccess	s -> sample_blocks		1621029	0					
ANR	1623251	Identifier	s		1621029	0					
ANR	1623252	Identifier	sample_blocks		1621029	1					
ANR	1623253	PrimaryExpression	8		1621029	1					
ANR	1623254	ForStatement	for ( i = 0 ; i < 2 * s -> lfe * 4 ; i ++ )		1621029	46					
ANR	1623255	ForInit	i = 0 ;	772:9:15771:15776	1621029	0	True				
ANR	1623256	AssignmentExpression	i = 0		1621029	0		=			
ANR	1623257	Identifier	i		1621029	0					
ANR	1623258	PrimaryExpression	0		1621029	1					
ANR	1623259	Condition	i < 2 * s -> lfe * 4	772:16:15778:15795	1621029	1	True				
ANR	1623260	RelationalExpression	i < 2 * s -> lfe * 4		1621029	0		<			
ANR	1623261	Identifier	i		1621029	0					
ANR	1623262	MultiplicativeExpression	2 * s -> lfe * 4		1621029	1		*			
ANR	1623263	PrimaryExpression	2		1621029	0					
ANR	1623264	MultiplicativeExpression	s -> lfe * 4		1621029	1		*			
ANR	1623265	PtrMemberAccess	s -> lfe		1621029	0					
ANR	1623266	Identifier	s		1621029	0					
ANR	1623267	Identifier	lfe		1621029	1					
ANR	1623268	PrimaryExpression	4		1621029	1					
ANR	1623269	PostIncDecOperationExpression	i ++	772:36:15798:15800	1621029	2	True				
ANR	1623270	Identifier	i		1621029	0					
ANR	1623271	IncDec	++		1621029	1					
ANR	1623272	ExpressionStatement	s -> lfe_data [ i ] = s -> lfe_data [ i + lfe_samples ]	774:8:15812:15857	1621029	3	True				
ANR	1623273	AssignmentExpression	s -> lfe_data [ i ] = s -> lfe_data [ i + lfe_samples ]		1621029	0		=			
ANR	1623274	ArrayIndexing	s -> lfe_data [ i ]		1621029	0					
ANR	1623275	PtrMemberAccess	s -> lfe_data		1621029	0					
ANR	1623276	Identifier	s		1621029	0					
ANR	1623277	Identifier	lfe_data		1621029	1					
ANR	1623278	Identifier	i		1621029	1					
ANR	1623279	ArrayIndexing	s -> lfe_data [ i + lfe_samples ]		1621029	1					
ANR	1623280	PtrMemberAccess	s -> lfe_data		1621029	0					
ANR	1623281	Identifier	s		1621029	0					
ANR	1623282	Identifier	lfe_data		1621029	1					
ANR	1623283	AdditiveExpression	i + lfe_samples		1621029	1		+			
ANR	1623284	Identifier	i		1621029	0					
ANR	1623285	Identifier	lfe_samples		1621029	1					
ANR	1623286	ExpressionStatement	* got_frame_ptr = 1	778:4:15866:15887	1621029	47	True				
ANR	1623287	AssignmentExpression	* got_frame_ptr = 1		1621029	0		=			
ANR	1623288	UnaryOperationExpression	* got_frame_ptr		1621029	0					
ANR	1623289	UnaryOperator	*		1621029	0					
ANR	1623290	Identifier	got_frame_ptr		1621029	1					
ANR	1623291	PrimaryExpression	1		1621029	1					
ANR	1623292	ExpressionStatement	* ( AVFrame * ) data = s -> frame	780:4:15894:15922	1621029	48	True				
ANR	1623293	AssignmentExpression	* ( AVFrame * ) data = s -> frame		1621029	0		=			
ANR	1623294	UnaryOperationExpression	* ( AVFrame * ) data		1621029	0					
ANR	1623295	UnaryOperator	*		1621029	0					
ANR	1623296	CastExpression	( AVFrame * ) data		1621029	1					
ANR	1623297	CastTarget	AVFrame *		1621029	0					
ANR	1623298	Identifier	data		1621029	1					
ANR	1623299	PtrMemberAccess	s -> frame		1621029	1					
ANR	1623300	Identifier	s		1621029	0					
ANR	1623301	Identifier	frame		1621029	1					
ANR	1623302	ReturnStatement	return buf_size ;	784:4:15931:15946	1621029	49	True				
ANR	1623303	Identifier	buf_size		1621029	0					
ANR	1623304	ReturnType	static int		1621029	1					
ANR	1623305	Identifier	dca_decode_frame		1621029	2					
ANR	1623306	ParameterList	"AVCodecContext * avctx , void * data , int * got_frame_ptr , AVPacket * avpkt"		1621029	3					
ANR	1623307	Parameter	AVCodecContext * avctx	1:28:28:48	1621029	0	True				
ANR	1623308	ParameterType	AVCodecContext *		1621029	0					
ANR	1623309	Identifier	avctx		1621029	1					
ANR	1623310	Parameter	void * data	1:51:51:60	1621029	1	True				
ANR	1623311	ParameterType	void *		1621029	0					
ANR	1623312	Identifier	data		1621029	1					
ANR	1623313	Parameter	int * got_frame_ptr	3:28:92:109	1621029	2	True				
ANR	1623314	ParameterType	int *		1621029	0					
ANR	1623315	Identifier	got_frame_ptr		1621029	1					
ANR	1623316	Parameter	AVPacket * avpkt	3:48:112:126	1621029	3	True				
ANR	1623317	ParameterType	AVPacket *		1621029	0					
ANR	1623318	Identifier	avpkt		1621029	1					
ANR	1623319	CFGEntryNode	ENTRY		1621029		True				
ANR	1623320	CFGExitNode	EXIT		1621029		True				
ANR	1623321	Symbol	ENOMEM		1621029						
ANR	1623322	Symbol	FF_PROFILE_DTS_96_24		1621029						
ANR	1623323	Symbol	* s -> xxch_dmix_sf		1621029						
ANR	1623324	Symbol	AV_CH_LAYOUT_STEREO		1621029						
ANR	1623325	Symbol	s -> xxch_core_spkmask		1621029						
ANR	1623326	Symbol	* ch		1621029						
ANR	1623327	Symbol	* dca_ext_audio_descr_mask		1621029						
ANR	1623328	Symbol	map_xxch_to_native		1621029						
ANR	1623329	Symbol	got_frame_ptr		1621029						
ANR	1623330	Symbol	avpkt		1621029						
ANR	1623331	Symbol	samples_flt		1621029						
ANR	1623332	Symbol	* dca_lfe_index		1621029						
ANR	1623333	Symbol	DCA_EXT_XCH		1621029						
ANR	1623334	Symbol	* * s -> xch_base_channel		1621029						
ANR	1623335	Symbol	* s -> xxch_order_tab		1621029						
ANR	1623336	Symbol	s -> frame		1621029						
ANR	1623337	Symbol	av_samples_get_buffer_size		1621029						
ANR	1623338	Symbol	AV_LOG_DEBUG		1621029						
ANR	1623339	Symbol	* dca_channel_reorder_lfe_xch		1621029						
ANR	1623340	Symbol	* s -> ext_descr		1621029						
ANR	1623341	Symbol	avctx -> sample_fmt		1621029						
ANR	1623342	Symbol	ff_dca_convert_bitstream		1621029						
ANR	1623343	Symbol	full_channels		1621029						
ANR	1623344	Symbol	xch_fsize		1621029						
ANR	1623345	Symbol	back_chan		1621029						
ANR	1623346	Symbol	* s -> xch_base_channel		1621029						
ANR	1623347	Symbol	bits		1621029						
ANR	1623348	Symbol	av_popcount		1621029						
ANR	1623349	Symbol	av_get_channel_layout_nb_channels		1621029						
ANR	1623350	Symbol	* * * s		1621029						
ANR	1623351	Symbol	& s -> gb		1621029						
ANR	1623352	Symbol	dst_chan		1621029						
ANR	1623353	Symbol	avctx -> bit_rate		1621029						
ANR	1623354	Symbol	s -> extra_channels_buffer		1621029						
ANR	1623355	Symbol	s -> frame . extended_data		1621029						
ANR	1623356	Symbol	s -> ext_descr		1621029						
ANR	1623357	Symbol	fsize96		1621029						
ANR	1623358	Symbol	* * s -> xxch_dmix_coeff		1621029						
ANR	1623359	Symbol	AV_LOG_INFO		1621029						
ANR	1623360	Symbol	M_SQRT1_2		1621029						
ANR	1623361	Symbol	dca_channel_reorder_lfe_xch		1621029						
ANR	1623362	Symbol	endch		1621029						
ANR	1623363	Symbol	s -> extra_channels		1621029						
ANR	1623364	Symbol	DCA_EXT_XXCH		1621029						
ANR	1623365	Symbol	& s -> extra_channels_buffer_size		1621029						
ANR	1623366	Symbol	* s -> samples_chanptr		1621029						
ANR	1623367	Symbol	s -> xxch_nbits_spk_mask		1621029						
ANR	1623368	Symbol	& s -> extra_channels_buffer		1621029						
ANR	1623369	Symbol	* s -> xxch_dmix_coeff		1621029						
ANR	1623370	Symbol	get_bits_long		1621029						
ANR	1623371	Symbol	* * s		1621029						
ANR	1623372	Symbol	* achan		1621029						
ANR	1623373	Symbol	avctx		1621029						
ANR	1623374	Symbol	* dca_channel_reorder_lfe		1621029						
ANR	1623375	Symbol	s -> xxch_dmix_sf		1621029						
ANR	1623376	Symbol	DCA_STEREO		1621029						
ANR	1623377	Symbol	ext_amode		1621029						
ANR	1623378	Symbol	* chset		1621029						
ANR	1623379	Symbol	AV_LOG_ERROR		1621029						
ANR	1623380	Symbol	ch		1621029						
ANR	1623381	Symbol	s -> xch_present		1621029						
ANR	1623382	Symbol	* got_frame_ptr		1621029						
ANR	1623383	Symbol	i		1621029						
ANR	1623384	Symbol	avctx -> channel_layout		1621029						
ANR	1623385	Symbol	dca_channel_reorder_lfe		1621029						
ANR	1623386	Symbol	j		1621029						
ANR	1623387	Symbol	s -> amode		1621029						
ANR	1623388	Symbol	s -> samples_chanptr		1621029						
ANR	1623389	Symbol	k		1621029						
ANR	1623390	Symbol	DCA_MAX_EXSS_HEADER_SIZE		1621029						
ANR	1623391	Symbol	avctx -> sample_rate		1621029						
ANR	1623392	Symbol	FF_PROFILE_DTS		1621029						
ANR	1623393	Symbol	buf		1621029						
ANR	1623394	Symbol	* s -> xxch_spk_masks		1621029						
ANR	1623395	Symbol	s		1621029						
ANR	1623396	Symbol	* s -> lfe		1621029						
ANR	1623397	Symbol	DCA_EXT_X96		1621029						
ANR	1623398	Symbol	* dca_channel_reorder_nolfe_xch		1621029						
ANR	1623399	Symbol	chset		1621029						
ANR	1623400	Symbol	AVERROR_INVALIDDATA		1621029						
ANR	1623401	Symbol	AV_CH_LOW_FREQUENCY		1621029						
ANR	1623402	Symbol	s -> xxch_dmix_embedded		1621029						
ANR	1623403	Symbol	* data		1621029						
ANR	1623404	Symbol	dca_channel_order_native		1621029						
ANR	1623405	Symbol	FFMAX		1621029						
ANR	1623406	Symbol	lfe_samples		1621029						
ANR	1623407	Symbol	data		1621029						
ANR	1623408	Symbol	s -> ext_coding		1621029						
ANR	1623409	Symbol	get_bits		1621029						
ANR	1623410	Symbol	FFMIN		1621029						
ANR	1623411	Symbol	channel_layout		1621029						
ANR	1623412	Symbol	s -> dca_buffer		1621029						
ANR	1623413	Symbol	show_bits		1621029						
ANR	1623414	Symbol	s -> xxch_dmix_coeff		1621029						
ANR	1623415	Symbol	channel_mask		1621029						
ANR	1623416	Symbol	AV_CH_BACK_CENTER		1621029						
ANR	1623417	Symbol	dca_parse_frame_header		1621029						
ANR	1623418	Symbol	avctx -> channels		1621029						
ANR	1623419	Symbol	s -> xxch_chset_nch		1621029						
ANR	1623420	Symbol	dca_ext_audio_descr_mask		1621029						
ANR	1623421	Symbol	s -> channel_order_tab		1621029						
ANR	1623422	Symbol	ff_get_buffer		1621029						
ANR	1623423	Symbol	s -> profile		1621029						
ANR	1623424	Symbol	s -> core_ext_mask		1621029						
ANR	1623425	Symbol	* s -> extra_channels		1621029						
ANR	1623426	Symbol	ret		1621029						
ANR	1623427	Symbol	* * j		1621029						
ANR	1623428	Symbol	* src_chan		1621029						
ANR	1623429	Symbol	NULL		1621029						
ANR	1623430	Symbol	* samples_flt		1621029						
ANR	1623431	Symbol	buf_size		1621029						
ANR	1623432	Symbol	s -> prim_channels		1621029						
ANR	1623433	Symbol	s -> xxch_chset		1621029						
ANR	1623434	Symbol	s -> bit_rate		1621029						
ANR	1623435	Symbol	get_bits_count		1621029						
ANR	1623436	Symbol	posn		1621029						
ANR	1623437	Symbol	av_samples_fill_arrays		1621029						
ANR	1623438	Symbol	avctx -> request_channels		1621029						
ANR	1623439	Symbol	s -> xch_base_channel		1621029						
ANR	1623440	Symbol	s -> output		1621029						
ANR	1623441	Symbol	AV_CH_LAYOUT_NATIVE		1621029						
ANR	1623442	Symbol	s -> sample_rate		1621029						
ANR	1623443	Symbol	* avctx		1621029						
ANR	1623444	Symbol	avctx -> request_channel_layout		1621029						
ANR	1623445	Symbol	channels		1621029						
ANR	1623446	Symbol	* s -> channel_order_tab		1621029						
ANR	1623447	Symbol	achan		1621029						
ANR	1623448	Symbol	* s -> xxch_chset_nch		1621029						
ANR	1623449	Symbol	s -> lfe_data		1621029						
ANR	1623450	Symbol	dca_channel_reorder_nolfe		1621029						
ANR	1623451	Symbol	avpkt -> data		1621029						
ANR	1623452	Symbol	s -> frame_size		1621029						
ANR	1623453	Symbol	s -> lfe		1621029						
ANR	1623454	Symbol	* dca_channel_reorder_nolfe		1621029						
ANR	1623455	Symbol	DCA_HD_MARKER		1621029						
ANR	1623456	Symbol	dca_core_channel_layout		1621029						
ANR	1623457	Symbol	& s -> frame		1621029						
ANR	1623458	Symbol	* * s -> channel_order_tab		1621029						
ANR	1623459	Symbol	scale		1621029						
ANR	1623460	Symbol	src_chan		1621029						
ANR	1623461	Symbol	DCA_XXCH_LFE1		1621029						
ANR	1623462	Symbol	dca_lfe_index		1621029						
ANR	1623463	Symbol	DCA_XXCH_LFE2		1621029						
ANR	1623464	Symbol	s -> lfe_index		1621029						
ANR	1623465	Symbol	rt_chan		1621029						
ANR	1623466	Symbol	lavc		1621029						
ANR	1623467	Symbol	dca_channel_reorder_nolfe_xch		1621029						
ANR	1623468	Symbol	s -> source_pcm_res		1621029						
ANR	1623469	Symbol	lt_chan		1621029						
ANR	1623470	Symbol	s -> frame . nb_samples		1621029						
ANR	1623471	Symbol	* lfe_samples		1621029						
ANR	1623472	Symbol	avpkt -> size		1621029						
ANR	1623473	Symbol	num_core_channels		1621029						
ANR	1623474	Symbol	s -> xxch_spk_masks		1621029						
ANR	1623475	Symbol	core_ss_end		1621029						
ANR	1623476	Symbol	* s -> amode		1621029						
ANR	1623477	Symbol	* map_xxch_to_native		1621029						
ANR	1623478	Symbol	mask		1621029						
ANR	1623479	Symbol	avctx -> profile		1621029						
ANR	1623480	Symbol	* avpkt		1621029						
ANR	1623481	Symbol	s -> sample_blocks		1621029						
ANR	1623482	Symbol	s -> xxch_order_tab		1621029						
ANR	1623483	Symbol	s -> fdsp		1621029						
ANR	1623484	Symbol	FF_PROFILE_DTS_ES		1621029						
ANR	1623485	Symbol	DCA_MAX_FRAME_SIZE		1621029						
ANR	1623486	Symbol	avctx -> priv_data		1621029						
ANR	1623487	Symbol	* i		1621029						
ANR	1623488	Symbol	* j		1621029						
ANR	1623489	Symbol	* k		1621029						
ANR	1623490	Symbol	s -> dca_buffer_size		1621029						
ANR	1623491	Symbol	dca_decode_block		1621029						
ANR	1623492	Symbol	* channels		1621029						
ANR	1623493	Symbol	* dca_core_channel_layout		1621029						
ANR	1623494	Symbol	AVERROR		1621029						
ANR	1623495	Symbol	* s -> lfe_data		1621029						
ANR	1623496	Symbol	* ( AVFrame * ) data		1621029						
ANR	1623497	Symbol	* s		1621029						
ANR	1623498	Symbol	* s -> lfe_index		1621029						
