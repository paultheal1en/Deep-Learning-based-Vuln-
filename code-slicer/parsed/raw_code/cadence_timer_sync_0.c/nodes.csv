command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1199765	File	/home/p4ultr4n/workplace/ReVeal/raw_code/cadence_timer_sync_0.c								
ANR	1199766	Function	cadence_timer_sync	1:0:0:1418							
ANR	1199767	FunctionDef	cadence_timer_sync (CadenceTimerState * s)		1199766	0					
ANR	1199768	CompoundStatement		3:0:54:1418	1199766	0					
ANR	1199769	IdentifierDeclStatement	int i ;	5:4:61:66	1199766	0	True				
ANR	1199770	IdentifierDecl	i		1199766	0					
ANR	1199771	IdentifierDeclType	int		1199766	0					
ANR	1199772	Identifier	i		1199766	1					
ANR	1199773	IdentifierDeclStatement	"int64_t r , x ;"	7:4:73:85	1199766	1	True				
ANR	1199774	IdentifierDecl	r		1199766	0					
ANR	1199775	IdentifierDeclType	int64_t		1199766	0					
ANR	1199776	Identifier	r		1199766	1					
ANR	1199777	IdentifierDecl	x		1199766	1					
ANR	1199778	IdentifierDeclType	int64_t		1199766	0					
ANR	1199779	Identifier	x		1199766	1					
ANR	1199780	Statement	int64_t	9:4:92:98	1199766	2	True				
ANR	1199781	Statement	interval	9:12:100:107	1199766	3	True				
ANR	1199782	Statement	=	9:21:109:109	1199766	4	True				
ANR	1199783	Statement	(	9:23:111:111	1199766	5	True				
ANR	1199784	Statement	(	9:24:112:112	1199766	6	True				
ANR	1199785	Statement	s	9:25:113:113	1199766	7	True				
ANR	1199786	Statement	->	9:26:114:115	1199766	8	True				
ANR	1199787	Statement	reg_count	9:28:116:124	1199766	9	True				
ANR	1199788	Statement	&	9:38:126:126	1199766	10	True				
ANR	1199789	Statement	COUNTER_CTRL_INT	9:40:128:143	1199766	11	True				
ANR	1199790	Statement	)	9:56:144:144	1199766	12	True				
ANR	1199791	Statement	?	9:58:146:146	1199766	13	True				
ANR	1199792	Statement	(	11:12:161:161	1199766	14	True				
ANR	1199793	Statement	int64_t	11:13:162:168	1199766	15	True				
ANR	1199794	Statement	)	11:20:169:169	1199766	16	True				
ANR	1199795	Statement	s	11:21:170:170	1199766	17	True				
ANR	1199796	Statement	->	11:22:171:172	1199766	18	True				
ANR	1199797	Statement	reg_interval	11:24:173:184	1199766	19	True				
ANR	1199798	Statement	+	11:37:186:186	1199766	20	True				
ANR	1199799	Label	1 :	11:39:188:190	1199766	21	True				
ANR	1199800	Statement	0x10000UL	11:43:192:200	1199766	22	True				
ANR	1199801	Statement	L	11:52:201:201	1199766	23	True				
ANR	1199802	Statement	)	11:53:202:202	1199766	24	True				
ANR	1199803	Statement	<<	11:55:204:205	1199766	25	True				
ANR	1199804	ExpressionStatement	16	11:58:207:209	1199766	26	True				
ANR	1199805	PrimaryExpression	16		1199766	0					
ANR	1199806	IdentifierDeclStatement	uint64_t old_time = s -> cpu_time ;	13:4:216:247	1199766	27	True				
ANR	1199807	IdentifierDecl	old_time = s -> cpu_time		1199766	0					
ANR	1199808	IdentifierDeclType	uint64_t		1199766	0					
ANR	1199809	Identifier	old_time		1199766	1					
ANR	1199810	AssignmentExpression	old_time = s -> cpu_time		1199766	2		=			
ANR	1199811	Identifier	old_time		1199766	0					
ANR	1199812	PtrMemberAccess	s -> cpu_time		1199766	1					
ANR	1199813	Identifier	s		1199766	0					
ANR	1199814	Identifier	cpu_time		1199766	1					
ANR	1199815	ExpressionStatement	s -> cpu_time = qemu_clock_get_ns ( QEMU_CLOCK_VIRTUAL )	17:4:256:307	1199766	28	True				
ANR	1199816	AssignmentExpression	s -> cpu_time = qemu_clock_get_ns ( QEMU_CLOCK_VIRTUAL )		1199766	0		=			
ANR	1199817	PtrMemberAccess	s -> cpu_time		1199766	0					
ANR	1199818	Identifier	s		1199766	0					
ANR	1199819	Identifier	cpu_time		1199766	1					
ANR	1199820	CallExpression	qemu_clock_get_ns ( QEMU_CLOCK_VIRTUAL )		1199766	1					
ANR	1199821	Callee	qemu_clock_get_ns		1199766	0					
ANR	1199822	Identifier	qemu_clock_get_ns		1199766	0					
ANR	1199823	ArgumentList	QEMU_CLOCK_VIRTUAL		1199766	1					
ANR	1199824	Argument	QEMU_CLOCK_VIRTUAL		1199766	0					
ANR	1199825	Identifier	QEMU_CLOCK_VIRTUAL		1199766	0					
ANR	1199826	ExpressionStatement	"DB_PRINT ( ""cpu time: %lld ns\\n"" , ( long long ) old_time )"	19:4:314:366	1199766	29	True				
ANR	1199827	CallExpression	"DB_PRINT ( ""cpu time: %lld ns\\n"" , ( long long ) old_time )"		1199766	0					
ANR	1199828	Callee	DB_PRINT		1199766	0					
ANR	1199829	Identifier	DB_PRINT		1199766	0					
ANR	1199830	ArgumentList	"""cpu time: %lld ns\\n"""		1199766	1					
ANR	1199831	Argument	"""cpu time: %lld ns\\n"""		1199766	0					
ANR	1199832	PrimaryExpression	"""cpu time: %lld ns\\n"""		1199766	0					
ANR	1199833	Argument	( long long ) old_time		1199766	1					
ANR	1199834	CastExpression	( long long ) old_time		1199766	0					
ANR	1199835	CastTarget	long long		1199766	0					
ANR	1199836	Identifier	old_time		1199766	1					
ANR	1199837	IfStatement	if ( ! s -> cpu_time_valid || old_time == s -> cpu_time )		1199766	30					
ANR	1199838	Condition	! s -> cpu_time_valid || old_time == s -> cpu_time	23:8:379:423	1199766	0	True				
ANR	1199839	OrExpression	! s -> cpu_time_valid || old_time == s -> cpu_time		1199766	0		||			
ANR	1199840	UnaryOperationExpression	! s -> cpu_time_valid		1199766	0					
ANR	1199841	UnaryOperator	!		1199766	0					
ANR	1199842	PtrMemberAccess	s -> cpu_time_valid		1199766	1					
ANR	1199843	Identifier	s		1199766	0					
ANR	1199844	Identifier	cpu_time_valid		1199766	1					
ANR	1199845	EqualityExpression	old_time == s -> cpu_time		1199766	1		==			
ANR	1199846	Identifier	old_time		1199766	0					
ANR	1199847	PtrMemberAccess	s -> cpu_time		1199766	1					
ANR	1199848	Identifier	s		1199766	0					
ANR	1199849	Identifier	cpu_time		1199766	1					
ANR	1199850	CompoundStatement		21:55:371:371	1199766	1					
ANR	1199851	ExpressionStatement	s -> cpu_time_valid = 1	25:8:437:458	1199766	0	True				
ANR	1199852	AssignmentExpression	s -> cpu_time_valid = 1		1199766	0		=			
ANR	1199853	PtrMemberAccess	s -> cpu_time_valid		1199766	0					
ANR	1199854	Identifier	s		1199766	0					
ANR	1199855	Identifier	cpu_time_valid		1199766	1					
ANR	1199856	PrimaryExpression	1		1199766	1					
ANR	1199857	ReturnStatement	return ;	27:8:469:475	1199766	1	True				
ANR	1199858	ExpressionStatement	"r = ( int64_t ) cadence_timer_get_steps ( s , s -> cpu_time - old_time )"	33:4:491:554	1199766	31	True				
ANR	1199859	AssignmentExpression	"r = ( int64_t ) cadence_timer_get_steps ( s , s -> cpu_time - old_time )"		1199766	0		=			
ANR	1199860	Identifier	r		1199766	0					
ANR	1199861	CastExpression	"( int64_t ) cadence_timer_get_steps ( s , s -> cpu_time - old_time )"		1199766	1					
ANR	1199862	CastTarget	int64_t		1199766	0					
ANR	1199863	CallExpression	"cadence_timer_get_steps ( s , s -> cpu_time - old_time )"		1199766	1					
ANR	1199864	Callee	cadence_timer_get_steps		1199766	0					
ANR	1199865	Identifier	cadence_timer_get_steps		1199766	0					
ANR	1199866	ArgumentList	s		1199766	1					
ANR	1199867	Argument	s		1199766	0					
ANR	1199868	Identifier	s		1199766	0					
ANR	1199869	Argument	s -> cpu_time - old_time		1199766	1					
ANR	1199870	AdditiveExpression	s -> cpu_time - old_time		1199766	0		-			
ANR	1199871	PtrMemberAccess	s -> cpu_time		1199766	0					
ANR	1199872	Identifier	s		1199766	0					
ANR	1199873	Identifier	cpu_time		1199766	1					
ANR	1199874	Identifier	old_time		1199766	1					
ANR	1199875	ExpressionStatement	x = ( int64_t ) s -> reg_value + ( ( s -> reg_count & COUNTER_CTRL_DEC ) ? - r : r )	35:4:561:633	1199766	32	True				
ANR	1199876	AssignmentExpression	x = ( int64_t ) s -> reg_value + ( ( s -> reg_count & COUNTER_CTRL_DEC ) ? - r : r )		1199766	0		=			
ANR	1199877	Identifier	x		1199766	0					
ANR	1199878	AdditiveExpression	( int64_t ) s -> reg_value + ( ( s -> reg_count & COUNTER_CTRL_DEC ) ? - r : r )		1199766	1		+			
ANR	1199879	CastExpression	( int64_t ) s -> reg_value		1199766	0					
ANR	1199880	CastTarget	int64_t		1199766	0					
ANR	1199881	PtrMemberAccess	s -> reg_value		1199766	1					
ANR	1199882	Identifier	s		1199766	0					
ANR	1199883	Identifier	reg_value		1199766	1					
ANR	1199884	ConditionalExpression	( s -> reg_count & COUNTER_CTRL_DEC ) ? - r : r		1199766	1					
ANR	1199885	Condition	s -> reg_count & COUNTER_CTRL_DEC		1199766	0					
ANR	1199886	BitAndExpression	s -> reg_count & COUNTER_CTRL_DEC		1199766	0		&			
ANR	1199887	PtrMemberAccess	s -> reg_count		1199766	0					
ANR	1199888	Identifier	s		1199766	0					
ANR	1199889	Identifier	reg_count		1199766	1					
ANR	1199890	Identifier	COUNTER_CTRL_DEC		1199766	1					
ANR	1199891	UnaryOperationExpression	- r		1199766	1					
ANR	1199892	UnaryOperator	-		1199766	0					
ANR	1199893	Identifier	r		1199766	1					
ANR	1199894	Identifier	r		1199766	2					
ANR	1199895	ForStatement	for ( i = 0 ; i < 3 ; ++ i )		1199766	33					
ANR	1199896	ForInit	i = 0 ;	39:9:647:652	1199766	0	True				
ANR	1199897	AssignmentExpression	i = 0		1199766	0		=			
ANR	1199898	Identifier	i		1199766	0					
ANR	1199899	PrimaryExpression	0		1199766	1					
ANR	1199900	Condition	i < 3	39:16:654:658	1199766	1	True				
ANR	1199901	RelationalExpression	i < 3		1199766	0		<			
ANR	1199902	Identifier	i		1199766	0					
ANR	1199903	PrimaryExpression	3		1199766	1					
ANR	1199904	UnaryExpression	++ i	39:23:661:663	1199766	2	True				
ANR	1199905	IncDec	++		1199766	0					
ANR	1199906	Identifier	i		1199766	1					
ANR	1199907	CompoundStatement		39:8:622:664	1199766	3					
ANR	1199908	IdentifierDeclStatement	int64_t m = ( int64_t ) s -> reg_match [ i ] << 16 ;	41:8:677:719	1199766	0	True				
ANR	1199909	IdentifierDecl	m = ( int64_t ) s -> reg_match [ i ] << 16		1199766	0					
ANR	1199910	IdentifierDeclType	int64_t		1199766	0					
ANR	1199911	Identifier	m		1199766	1					
ANR	1199912	AssignmentExpression	m = ( int64_t ) s -> reg_match [ i ] << 16		1199766	2		=			
ANR	1199913	Identifier	m		1199766	0					
ANR	1199914	ShiftExpression	( int64_t ) s -> reg_match [ i ] << 16		1199766	1		<<			
ANR	1199915	CastExpression	( int64_t ) s -> reg_match [ i ]		1199766	0					
ANR	1199916	CastTarget	int64_t		1199766	0					
ANR	1199917	ArrayIndexing	s -> reg_match [ i ]		1199766	1					
ANR	1199918	PtrMemberAccess	s -> reg_match		1199766	0					
ANR	1199919	Identifier	s		1199766	0					
ANR	1199920	Identifier	reg_match		1199766	1					
ANR	1199921	Identifier	i		1199766	1					
ANR	1199922	PrimaryExpression	16		1199766	1					
ANR	1199923	IfStatement	if ( m > interval )		1199766	1					
ANR	1199924	Condition	m > interval	43:12:734:745	1199766	0	True				
ANR	1199925	RelationalExpression	m > interval		1199766	0		>			
ANR	1199926	Identifier	m		1199766	0					
ANR	1199927	Identifier	interval		1199766	1					
ANR	1199928	CompoundStatement		41:26:693:693	1199766	1					
ANR	1199929	ContinueStatement	continue ;	45:12:763:771	1199766	0	True				
ANR	1199930	IfStatement	"if ( is_between ( m , s -> reg_value , x ) || is_between ( m + interval , s -> reg_value , x ) || is_between ( m - interval , s -> reg_value , x ) )"		1199766	2					
ANR	1199931	Condition	"is_between ( m , s -> reg_value , x ) || is_between ( m + interval , s -> reg_value , x ) || is_between ( m - interval , s -> reg_value , x )"	53:12:936:1081	1199766	0	True				
ANR	1199932	OrExpression	"is_between ( m , s -> reg_value , x ) || is_between ( m + interval , s -> reg_value , x ) || is_between ( m - interval , s -> reg_value , x )"		1199766	0		||			
ANR	1199933	CallExpression	"is_between ( m , s -> reg_value , x )"		1199766	0					
ANR	1199934	Callee	is_between		1199766	0					
ANR	1199935	Identifier	is_between		1199766	0					
ANR	1199936	ArgumentList	m		1199766	1					
ANR	1199937	Argument	m		1199766	0					
ANR	1199938	Identifier	m		1199766	0					
ANR	1199939	Argument	s -> reg_value		1199766	1					
ANR	1199940	PtrMemberAccess	s -> reg_value		1199766	0					
ANR	1199941	Identifier	s		1199766	0					
ANR	1199942	Identifier	reg_value		1199766	1					
ANR	1199943	Argument	x		1199766	2					
ANR	1199944	Identifier	x		1199766	0					
ANR	1199945	OrExpression	"is_between ( m + interval , s -> reg_value , x ) || is_between ( m - interval , s -> reg_value , x )"		1199766	1		||			
ANR	1199946	CallExpression	"is_between ( m + interval , s -> reg_value , x )"		1199766	0					
ANR	1199947	Callee	is_between		1199766	0					
ANR	1199948	Identifier	is_between		1199766	0					
ANR	1199949	ArgumentList	m + interval		1199766	1					
ANR	1199950	Argument	m + interval		1199766	0					
ANR	1199951	AdditiveExpression	m + interval		1199766	0		+			
ANR	1199952	Identifier	m		1199766	0					
ANR	1199953	Identifier	interval		1199766	1					
ANR	1199954	Argument	s -> reg_value		1199766	1					
ANR	1199955	PtrMemberAccess	s -> reg_value		1199766	0					
ANR	1199956	Identifier	s		1199766	0					
ANR	1199957	Identifier	reg_value		1199766	1					
ANR	1199958	Argument	x		1199766	2					
ANR	1199959	Identifier	x		1199766	0					
ANR	1199960	CallExpression	"is_between ( m - interval , s -> reg_value , x )"		1199766	1					
ANR	1199961	Callee	is_between		1199766	0					
ANR	1199962	Identifier	is_between		1199766	0					
ANR	1199963	ArgumentList	m - interval		1199766	1					
ANR	1199964	Argument	m - interval		1199766	0					
ANR	1199965	AdditiveExpression	m - interval		1199766	0		-			
ANR	1199966	Identifier	m		1199766	0					
ANR	1199967	Identifier	interval		1199766	1					
ANR	1199968	Argument	s -> reg_value		1199766	1					
ANR	1199969	PtrMemberAccess	s -> reg_value		1199766	0					
ANR	1199970	Identifier	s		1199766	0					
ANR	1199971	Identifier	reg_value		1199766	1					
ANR	1199972	Argument	x		1199766	2					
ANR	1199973	Identifier	x		1199766	0					
ANR	1199974	CompoundStatement		55:55:1029:1029	1199766	1					
ANR	1199975	ExpressionStatement	s -> reg_intr |= ( 2 << i )	59:12:1099:1122	1199766	0	True				
ANR	1199976	AssignmentExpression	s -> reg_intr |= ( 2 << i )		1199766	0		|=			
ANR	1199977	PtrMemberAccess	s -> reg_intr		1199766	0					
ANR	1199978	Identifier	s		1199766	0					
ANR	1199979	Identifier	reg_intr		1199766	1					
ANR	1199980	ShiftExpression	2 << i		1199766	1		<<			
ANR	1199981	PrimaryExpression	2		1199766	0					
ANR	1199982	Identifier	i		1199766	1					
ANR	1199983	WhileStatement	while ( x < 0 )		1199766	34					
ANR	1199984	Condition	x < 0	65:11:1154:1158	1199766	0	True				
ANR	1199985	RelationalExpression	x < 0		1199766	0		<			
ANR	1199986	Identifier	x		1199766	0					
ANR	1199987	PrimaryExpression	0		1199766	1					
ANR	1199988	CompoundStatement		63:18:1106:1106	1199766	1					
ANR	1199989	ExpressionStatement	x += interval	67:8:1172:1185	1199766	0	True				
ANR	1199990	AssignmentExpression	x += interval		1199766	0		+=			
ANR	1199991	Identifier	x		1199766	0					
ANR	1199992	Identifier	interval		1199766	1					
ANR	1199993	ExpressionStatement	s -> reg_value = ( uint32_t ) ( x % interval )	71:4:1199:1238	1199766	35	True				
ANR	1199994	AssignmentExpression	s -> reg_value = ( uint32_t ) ( x % interval )		1199766	0		=			
ANR	1199995	PtrMemberAccess	s -> reg_value		1199766	0					
ANR	1199996	Identifier	s		1199766	0					
ANR	1199997	Identifier	reg_value		1199766	1					
ANR	1199998	CastExpression	( uint32_t ) ( x % interval )		1199766	1					
ANR	1199999	CastTarget	uint32_t		1199766	0					
ANR	1200000	MultiplicativeExpression	x % interval		1199766	1		%			
ANR	1200001	Identifier	x		1199766	0					
ANR	1200002	Identifier	interval		1199766	1					
ANR	1200003	IfStatement	if ( s -> reg_value != x )		1199766	36					
ANR	1200004	Condition	s -> reg_value != x	75:8:1251:1267	1199766	0	True				
ANR	1200005	EqualityExpression	s -> reg_value != x		1199766	0		!=			
ANR	1200006	PtrMemberAccess	s -> reg_value		1199766	0					
ANR	1200007	Identifier	s		1199766	0					
ANR	1200008	Identifier	reg_value		1199766	1					
ANR	1200009	Identifier	x		1199766	1					
ANR	1200010	CompoundStatement		73:27:1215:1215	1199766	1					
ANR	1200011	ExpressionStatement	s -> reg_intr |= ( s -> reg_count & COUNTER_CTRL_INT ) ? COUNTER_INTR_IV : COUNTER_INTR_OV	77:8:1281:1378	1199766	0	True				
ANR	1200012	AssignmentExpression	s -> reg_intr |= ( s -> reg_count & COUNTER_CTRL_INT ) ? COUNTER_INTR_IV : COUNTER_INTR_OV		1199766	0		|=			
ANR	1200013	PtrMemberAccess	s -> reg_intr		1199766	0					
ANR	1200014	Identifier	s		1199766	0					
ANR	1200015	Identifier	reg_intr		1199766	1					
ANR	1200016	ConditionalExpression	( s -> reg_count & COUNTER_CTRL_INT ) ? COUNTER_INTR_IV : COUNTER_INTR_OV		1199766	1					
ANR	1200017	Condition	s -> reg_count & COUNTER_CTRL_INT		1199766	0					
ANR	1200018	BitAndExpression	s -> reg_count & COUNTER_CTRL_INT		1199766	0		&			
ANR	1200019	PtrMemberAccess	s -> reg_count		1199766	0					
ANR	1200020	Identifier	s		1199766	0					
ANR	1200021	Identifier	reg_count		1199766	1					
ANR	1200022	Identifier	COUNTER_CTRL_INT		1199766	1					
ANR	1200023	Identifier	COUNTER_INTR_IV		1199766	1					
ANR	1200024	Identifier	COUNTER_INTR_OV		1199766	2					
ANR	1200025	ExpressionStatement	cadence_timer_update ( s )	83:4:1392:1415	1199766	37	True				
ANR	1200026	CallExpression	cadence_timer_update ( s )		1199766	0					
ANR	1200027	Callee	cadence_timer_update		1199766	0					
ANR	1200028	Identifier	cadence_timer_update		1199766	0					
ANR	1200029	ArgumentList	s		1199766	1					
ANR	1200030	Argument	s		1199766	0					
ANR	1200031	Identifier	s		1199766	0					
ANR	1200032	ReturnType	static void		1199766	1					
ANR	1200033	Identifier	cadence_timer_sync		1199766	2					
ANR	1200034	ParameterList	CadenceTimerState * s		1199766	3					
ANR	1200035	Parameter	CadenceTimerState * s	1:31:31:50	1199766	0	True				
ANR	1200036	ParameterType	CadenceTimerState *		1199766	0					
ANR	1200037	Identifier	s		1199766	1					
ANR	1200038	CFGEntryNode	ENTRY		1199766		True				
ANR	1200039	CFGExitNode	EXIT		1199766		True				
ANR	1200040	Symbol	s -> reg_count		1199766						
ANR	1200041	Symbol	s -> cpu_time_valid		1199766						
ANR	1200042	Symbol	qemu_clock_get_ns		1199766						
ANR	1200043	Symbol	* s -> reg_match		1199766						
ANR	1200044	Symbol	* * s		1199766						
ANR	1200045	Symbol	COUNTER_CTRL_DEC		1199766						
ANR	1200046	Symbol	s -> cpu_time		1199766						
ANR	1200047	Symbol	i		1199766						
ANR	1200048	Symbol	QEMU_CLOCK_VIRTUAL		1199766						
ANR	1200049	Symbol	s -> reg_value		1199766						
ANR	1200050	Symbol	m		1199766						
ANR	1200051	Symbol	is_between		1199766						
ANR	1200052	Symbol	COUNTER_CTRL_INT		1199766						
ANR	1200053	Symbol	r		1199766						
ANR	1200054	Symbol	s -> reg_match		1199766						
ANR	1200055	Symbol	s		1199766						
ANR	1200056	Symbol	* i		1199766						
ANR	1200057	Symbol	s -> reg_intr		1199766						
ANR	1200058	Symbol	x		1199766						
ANR	1200059	Symbol	COUNTER_INTR_OV		1199766						
ANR	1200060	Symbol	cadence_timer_get_steps		1199766						
ANR	1200061	Symbol	interval		1199766						
ANR	1200062	Symbol	old_time		1199766						
ANR	1200063	Symbol	* s		1199766						
ANR	1200064	Symbol	COUNTER_INTR_IV		1199766						
