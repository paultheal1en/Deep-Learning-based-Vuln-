command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3006116	File	/home/p4ultr4n/workplace/ReVeal/raw_code/encode_mode_01_1.c								
ANR	3006117	Function	encode_mode	1:0:0:4686							
ANR	3006118	FunctionDef	"encode_mode (CinepakEncContext * s , int h , AVPicture * scratch_pict , AVPicture * last_pict , strip_info * info , unsigned char * buf)"		3006117	0					
ANR	3006119	CompoundStatement		3:0:138:4686	3006117	0					
ANR	3006120	IdentifierDeclStatement	"int x , y , z , flags , bits , temp_size , header_ofs , ret = 0 , mb_count = s -> w * h / MB_AREA ;"	5:4:145:232	3006117	0	True				
ANR	3006121	IdentifierDecl	x		3006117	0					
ANR	3006122	IdentifierDeclType	int		3006117	0					
ANR	3006123	Identifier	x		3006117	1					
ANR	3006124	IdentifierDecl	y		3006117	1					
ANR	3006125	IdentifierDeclType	int		3006117	0					
ANR	3006126	Identifier	y		3006117	1					
ANR	3006127	IdentifierDecl	z		3006117	2					
ANR	3006128	IdentifierDeclType	int		3006117	0					
ANR	3006129	Identifier	z		3006117	1					
ANR	3006130	IdentifierDecl	flags		3006117	3					
ANR	3006131	IdentifierDeclType	int		3006117	0					
ANR	3006132	Identifier	flags		3006117	1					
ANR	3006133	IdentifierDecl	bits		3006117	4					
ANR	3006134	IdentifierDeclType	int		3006117	0					
ANR	3006135	Identifier	bits		3006117	1					
ANR	3006136	IdentifierDecl	temp_size		3006117	5					
ANR	3006137	IdentifierDeclType	int		3006117	0					
ANR	3006138	Identifier	temp_size		3006117	1					
ANR	3006139	IdentifierDecl	header_ofs		3006117	6					
ANR	3006140	IdentifierDeclType	int		3006117	0					
ANR	3006141	Identifier	header_ofs		3006117	1					
ANR	3006142	IdentifierDecl	ret = 0		3006117	7					
ANR	3006143	IdentifierDeclType	int		3006117	0					
ANR	3006144	Identifier	ret		3006117	1					
ANR	3006145	AssignmentExpression	ret = 0		3006117	2		=			
ANR	3006146	Identifier	ret		3006117	0					
ANR	3006147	PrimaryExpression	0		3006117	1					
ANR	3006148	IdentifierDecl	mb_count = s -> w * h / MB_AREA		3006117	8					
ANR	3006149	IdentifierDeclType	int		3006117	0					
ANR	3006150	Identifier	mb_count		3006117	1					
ANR	3006151	AssignmentExpression	mb_count = s -> w * h / MB_AREA		3006117	2		=			
ANR	3006152	Identifier	mb_count		3006117	0					
ANR	3006153	MultiplicativeExpression	s -> w * h / MB_AREA		3006117	1		*			
ANR	3006154	PtrMemberAccess	s -> w		3006117	0					
ANR	3006155	Identifier	s		3006117	0					
ANR	3006156	Identifier	w		3006117	1					
ANR	3006157	MultiplicativeExpression	h / MB_AREA		3006117	1		/			
ANR	3006158	Identifier	h		3006117	0					
ANR	3006159	Identifier	MB_AREA		3006117	1					
ANR	3006160	IdentifierDeclStatement	"int needs_extra_bit , should_write_temp ;"	7:4:239:277	3006117	1	True				
ANR	3006161	IdentifierDecl	needs_extra_bit		3006117	0					
ANR	3006162	IdentifierDeclType	int		3006117	0					
ANR	3006163	Identifier	needs_extra_bit		3006117	1					
ANR	3006164	IdentifierDecl	should_write_temp		3006117	1					
ANR	3006165	IdentifierDeclType	int		3006117	0					
ANR	3006166	Identifier	should_write_temp		3006117	1					
ANR	3006167	IdentifierDeclStatement	unsigned char temp [ 64 ] ;	9:4:284:306	3006117	2	True				
ANR	3006168	IdentifierDecl	temp [ 64 ]		3006117	0					
ANR	3006169	IdentifierDeclType	unsigned char [ 64 ]		3006117	0					
ANR	3006170	Identifier	temp		3006117	1					
ANR	3006171	PrimaryExpression	64		3006117	2					
ANR	3006172	IdentifierDeclStatement	mb_info * mb ;	11:4:355:366	3006117	3	True				
ANR	3006173	IdentifierDecl	* mb		3006117	0					
ANR	3006174	IdentifierDeclType	mb_info *		3006117	0					
ANR	3006175	Identifier	mb		3006117	1					
ANR	3006176	IdentifierDeclStatement	"AVPicture sub_scratch , sub_last ;"	13:4:373:404	3006117	4	True				
ANR	3006177	IdentifierDecl	sub_scratch		3006117	0					
ANR	3006178	IdentifierDeclType	AVPicture		3006117	0					
ANR	3006179	Identifier	sub_scratch		3006117	1					
ANR	3006180	IdentifierDecl	sub_last		3006117	1					
ANR	3006181	IdentifierDeclType	AVPicture		3006117	0					
ANR	3006182	Identifier	sub_last		3006117	1					
ANR	3006183	IfStatement	if ( info -> v4_size || ! s -> skip_empty_cb )		3006117	5					
ANR	3006184	Condition	info -> v4_size || ! s -> skip_empty_cb	25:7:649:682	3006117	0	True				
ANR	3006185	OrExpression	info -> v4_size || ! s -> skip_empty_cb		3006117	0		||			
ANR	3006186	PtrMemberAccess	info -> v4_size		3006117	0					
ANR	3006187	Identifier	info		3006117	0					
ANR	3006188	Identifier	v4_size		3006117	1					
ANR	3006189	UnaryOperationExpression	! s -> skip_empty_cb		3006117	1					
ANR	3006190	UnaryOperator	!		3006117	0					
ANR	3006191	PtrMemberAccess	s -> skip_empty_cb		3006117	1					
ANR	3006192	Identifier	s		3006117	0					
ANR	3006193	Identifier	skip_empty_cb		3006117	1					
ANR	3006194	ExpressionStatement	"ret += encode_codebook ( s , info -> v4_codebook , info -> v4_size , 0x20 , 0x24 , buf + ret )"	27:8:694:776	3006117	1	True				
ANR	3006195	AssignmentExpression	"ret += encode_codebook ( s , info -> v4_codebook , info -> v4_size , 0x20 , 0x24 , buf + ret )"		3006117	0		+=			
ANR	3006196	Identifier	ret		3006117	0					
ANR	3006197	CallExpression	"encode_codebook ( s , info -> v4_codebook , info -> v4_size , 0x20 , 0x24 , buf + ret )"		3006117	1					
ANR	3006198	Callee	encode_codebook		3006117	0					
ANR	3006199	Identifier	encode_codebook		3006117	0					
ANR	3006200	ArgumentList	s		3006117	1					
ANR	3006201	Argument	s		3006117	0					
ANR	3006202	Identifier	s		3006117	0					
ANR	3006203	Argument	info -> v4_codebook		3006117	1					
ANR	3006204	PtrMemberAccess	info -> v4_codebook		3006117	0					
ANR	3006205	Identifier	info		3006117	0					
ANR	3006206	Identifier	v4_codebook		3006117	1					
ANR	3006207	Argument	info -> v4_size		3006117	2					
ANR	3006208	PtrMemberAccess	info -> v4_size		3006117	0					
ANR	3006209	Identifier	info		3006117	0					
ANR	3006210	Identifier	v4_size		3006117	1					
ANR	3006211	Argument	0x20		3006117	3					
ANR	3006212	PrimaryExpression	0x20		3006117	0					
ANR	3006213	Argument	0x24		3006117	4					
ANR	3006214	PrimaryExpression	0x24		3006117	0					
ANR	3006215	Argument	buf + ret		3006117	5					
ANR	3006216	AdditiveExpression	buf + ret		3006117	0		+			
ANR	3006217	Identifier	buf		3006117	0					
ANR	3006218	Identifier	ret		3006117	1					
ANR	3006219	IfStatement	if ( info -> v1_size || ! s -> skip_empty_cb )		3006117	6					
ANR	3006220	Condition	info -> v1_size || ! s -> skip_empty_cb	31:7:788:821	3006117	0	True				
ANR	3006221	OrExpression	info -> v1_size || ! s -> skip_empty_cb		3006117	0		||			
ANR	3006222	PtrMemberAccess	info -> v1_size		3006117	0					
ANR	3006223	Identifier	info		3006117	0					
ANR	3006224	Identifier	v1_size		3006117	1					
ANR	3006225	UnaryOperationExpression	! s -> skip_empty_cb		3006117	1					
ANR	3006226	UnaryOperator	!		3006117	0					
ANR	3006227	PtrMemberAccess	s -> skip_empty_cb		3006117	1					
ANR	3006228	Identifier	s		3006117	0					
ANR	3006229	Identifier	skip_empty_cb		3006117	1					
ANR	3006230	ExpressionStatement	"ret += encode_codebook ( s , info -> v1_codebook , info -> v1_size , 0x22 , 0x26 , buf + ret )"	33:8:833:915	3006117	1	True				
ANR	3006231	AssignmentExpression	"ret += encode_codebook ( s , info -> v1_codebook , info -> v1_size , 0x22 , 0x26 , buf + ret )"		3006117	0		+=			
ANR	3006232	Identifier	ret		3006117	0					
ANR	3006233	CallExpression	"encode_codebook ( s , info -> v1_codebook , info -> v1_size , 0x22 , 0x26 , buf + ret )"		3006117	1					
ANR	3006234	Callee	encode_codebook		3006117	0					
ANR	3006235	Identifier	encode_codebook		3006117	0					
ANR	3006236	ArgumentList	s		3006117	1					
ANR	3006237	Argument	s		3006117	0					
ANR	3006238	Identifier	s		3006117	0					
ANR	3006239	Argument	info -> v1_codebook		3006117	1					
ANR	3006240	PtrMemberAccess	info -> v1_codebook		3006117	0					
ANR	3006241	Identifier	info		3006117	0					
ANR	3006242	Identifier	v1_codebook		3006117	1					
ANR	3006243	Argument	info -> v1_size		3006117	2					
ANR	3006244	PtrMemberAccess	info -> v1_size		3006117	0					
ANR	3006245	Identifier	info		3006117	0					
ANR	3006246	Identifier	v1_size		3006117	1					
ANR	3006247	Argument	0x22		3006117	3					
ANR	3006248	PrimaryExpression	0x22		3006117	0					
ANR	3006249	Argument	0x26		3006117	4					
ANR	3006250	PrimaryExpression	0x26		3006117	0					
ANR	3006251	Argument	buf + ret		3006117	5					
ANR	3006252	AdditiveExpression	buf + ret		3006117	0		+			
ANR	3006253	Identifier	buf		3006117	0					
ANR	3006254	Identifier	ret		3006117	1					
ANR	3006255	ForStatement	for ( z = y = 0 ; y < h ; y += MB_SIZE )		3006117	7					
ANR	3006256	ForInit	z = y = 0 ;	39:8:958:967	3006117	0	True				
ANR	3006257	AssignmentExpression	z = y = 0		3006117	0		=			
ANR	3006258	Identifier	z		3006117	0					
ANR	3006259	AssignmentExpression	y = 0		3006117	1		=			
ANR	3006260	Identifier	y		3006117	0					
ANR	3006261	PrimaryExpression	0		3006117	1					
ANR	3006262	Condition	y < h	39:19:969:973	3006117	1	True				
ANR	3006263	RelationalExpression	y < h		3006117	0		<			
ANR	3006264	Identifier	y		3006117	0					
ANR	3006265	Identifier	h		3006117	1					
ANR	3006266	AssignmentExpression	y += MB_SIZE	39:26:976:987	3006117	2	True	+=			
ANR	3006267	Identifier	y		3006117	0					
ANR	3006268	Identifier	MB_SIZE		3006117	1					
ANR	3006269	CompoundStatement		37:40:851:851	3006117	3					
ANR	3006270	ForStatement	"for ( x = 0 ; x < s -> w ; x += MB_SIZE , z ++ )"		3006117	0					
ANR	3006271	ForInit	x = 0 ;	41:12:1005:1010	3006117	0	True				
ANR	3006272	AssignmentExpression	x = 0		3006117	0		=			
ANR	3006273	Identifier	x		3006117	0					
ANR	3006274	PrimaryExpression	0		3006117	1					
ANR	3006275	Condition	x < s -> w	41:19:1012:1019	3006117	1	True				
ANR	3006276	RelationalExpression	x < s -> w		3006117	0		<			
ANR	3006277	Identifier	x		3006117	0					
ANR	3006278	PtrMemberAccess	s -> w		3006117	1					
ANR	3006279	Identifier	s		3006117	0					
ANR	3006280	Identifier	w		3006117	1					
ANR	3006281	Expression	"x += MB_SIZE , z ++"	41:29:1022:1038	3006117	2	True				
ANR	3006282	AssignmentExpression	x += MB_SIZE		3006117	0		+=			
ANR	3006283	Identifier	x		3006117	0					
ANR	3006284	Identifier	MB_SIZE		3006117	1					
ANR	3006285	PostIncDecOperationExpression	z ++		3006117	1					
ANR	3006286	Identifier	z		3006117	0					
ANR	3006287	IncDec	++		3006117	1					
ANR	3006288	CompoundStatement		39:48:902:902	3006117	3					
ANR	3006289	ExpressionStatement	mb = & s -> mb [ z ]	43:12:1056:1070	3006117	0	True				
ANR	3006290	AssignmentExpression	mb = & s -> mb [ z ]		3006117	0		=			
ANR	3006291	Identifier	mb		3006117	0					
ANR	3006292	UnaryOperationExpression	& s -> mb [ z ]		3006117	1					
ANR	3006293	UnaryOperator	&		3006117	0					
ANR	3006294	ArrayIndexing	s -> mb [ z ]		3006117	1					
ANR	3006295	PtrMemberAccess	s -> mb		3006117	0					
ANR	3006296	Identifier	s		3006117	0					
ANR	3006297	Identifier	mb		3006117	1					
ANR	3006298	Identifier	z		3006117	1					
ANR	3006299	ExpressionStatement	"get_sub_picture ( s , x , y , scratch_pict , & sub_scratch )"	47:12:1087:1139	3006117	1	True				
ANR	3006300	CallExpression	"get_sub_picture ( s , x , y , scratch_pict , & sub_scratch )"		3006117	0					
ANR	3006301	Callee	get_sub_picture		3006117	0					
ANR	3006302	Identifier	get_sub_picture		3006117	0					
ANR	3006303	ArgumentList	s		3006117	1					
ANR	3006304	Argument	s		3006117	0					
ANR	3006305	Identifier	s		3006117	0					
ANR	3006306	Argument	x		3006117	1					
ANR	3006307	Identifier	x		3006117	0					
ANR	3006308	Argument	y		3006117	2					
ANR	3006309	Identifier	y		3006117	0					
ANR	3006310	Argument	scratch_pict		3006117	3					
ANR	3006311	Identifier	scratch_pict		3006117	0					
ANR	3006312	Argument	& sub_scratch		3006117	4					
ANR	3006313	UnaryOperationExpression	& sub_scratch		3006117	0					
ANR	3006314	UnaryOperator	&		3006117	0					
ANR	3006315	Identifier	sub_scratch		3006117	1					
ANR	3006316	IfStatement	if ( info -> mode == MODE_MC && mb -> best_encoding == ENC_SKIP )		3006117	2					
ANR	3006317	Condition	info -> mode == MODE_MC && mb -> best_encoding == ENC_SKIP	51:15:1159:1212	3006117	0	True				
ANR	3006318	AndExpression	info -> mode == MODE_MC && mb -> best_encoding == ENC_SKIP		3006117	0		&&			
ANR	3006319	EqualityExpression	info -> mode == MODE_MC		3006117	0		==			
ANR	3006320	PtrMemberAccess	info -> mode		3006117	0					
ANR	3006321	Identifier	info		3006117	0					
ANR	3006322	Identifier	mode		3006117	1					
ANR	3006323	Identifier	MODE_MC		3006117	1					
ANR	3006324	EqualityExpression	mb -> best_encoding == ENC_SKIP		3006117	1		==			
ANR	3006325	PtrMemberAccess	mb -> best_encoding		3006117	0					
ANR	3006326	Identifier	mb		3006117	0					
ANR	3006327	Identifier	best_encoding		3006117	1					
ANR	3006328	Identifier	ENC_SKIP		3006117	1					
ANR	3006329	CompoundStatement		49:71:1076:1076	3006117	1					
ANR	3006330	ExpressionStatement	"get_sub_picture ( s , x , y , last_pict , & sub_last )"	53:16:1234:1280	3006117	0	True				
ANR	3006331	CallExpression	"get_sub_picture ( s , x , y , last_pict , & sub_last )"		3006117	0					
ANR	3006332	Callee	get_sub_picture		3006117	0					
ANR	3006333	Identifier	get_sub_picture		3006117	0					
ANR	3006334	ArgumentList	s		3006117	1					
ANR	3006335	Argument	s		3006117	0					
ANR	3006336	Identifier	s		3006117	0					
ANR	3006337	Argument	x		3006117	1					
ANR	3006338	Identifier	x		3006117	0					
ANR	3006339	Argument	y		3006117	2					
ANR	3006340	Identifier	y		3006117	0					
ANR	3006341	Argument	last_pict		3006117	3					
ANR	3006342	Identifier	last_pict		3006117	0					
ANR	3006343	Argument	& sub_last		3006117	4					
ANR	3006344	UnaryOperationExpression	& sub_last		3006117	0					
ANR	3006345	UnaryOperator	&		3006117	0					
ANR	3006346	Identifier	sub_last		3006117	1					
ANR	3006347	ExpressionStatement	"copy_mb ( s , & sub_scratch , & sub_last )"	55:16:1299:1334	3006117	1	True				
ANR	3006348	CallExpression	"copy_mb ( s , & sub_scratch , & sub_last )"		3006117	0					
ANR	3006349	Callee	copy_mb		3006117	0					
ANR	3006350	Identifier	copy_mb		3006117	0					
ANR	3006351	ArgumentList	s		3006117	1					
ANR	3006352	Argument	s		3006117	0					
ANR	3006353	Identifier	s		3006117	0					
ANR	3006354	Argument	& sub_scratch		3006117	1					
ANR	3006355	UnaryOperationExpression	& sub_scratch		3006117	0					
ANR	3006356	UnaryOperator	&		3006117	0					
ANR	3006357	Identifier	sub_scratch		3006117	1					
ANR	3006358	Argument	& sub_last		3006117	2					
ANR	3006359	UnaryOperationExpression	& sub_last		3006117	0					
ANR	3006360	UnaryOperator	&		3006117	0					
ANR	3006361	Identifier	sub_last		3006117	1					
ANR	3006362	ElseStatement	else		3006117	0					
ANR	3006363	IfStatement	if ( info -> mode == MODE_V1_ONLY || mb -> best_encoding == ENC_V1 )		3006117	0					
ANR	3006364	Condition	info -> mode == MODE_V1_ONLY || mb -> best_encoding == ENC_V1	57:22:1359:1415	3006117	0	True				
ANR	3006365	OrExpression	info -> mode == MODE_V1_ONLY || mb -> best_encoding == ENC_V1		3006117	0		||			
ANR	3006366	EqualityExpression	info -> mode == MODE_V1_ONLY		3006117	0		==			
ANR	3006367	PtrMemberAccess	info -> mode		3006117	0					
ANR	3006368	Identifier	info		3006117	0					
ANR	3006369	Identifier	mode		3006117	1					
ANR	3006370	Identifier	MODE_V1_ONLY		3006117	1					
ANR	3006371	EqualityExpression	mb -> best_encoding == ENC_V1		3006117	1		==			
ANR	3006372	PtrMemberAccess	mb -> best_encoding		3006117	0					
ANR	3006373	Identifier	mb		3006117	0					
ANR	3006374	Identifier	best_encoding		3006117	1					
ANR	3006375	Identifier	ENC_V1		3006117	1					
ANR	3006376	ExpressionStatement	"decode_v1_vector ( s , & sub_scratch , mb -> v1_vector , info )"	59:16:1435:1489	3006117	1	True				
ANR	3006377	CallExpression	"decode_v1_vector ( s , & sub_scratch , mb -> v1_vector , info )"		3006117	0					
ANR	3006378	Callee	decode_v1_vector		3006117	0					
ANR	3006379	Identifier	decode_v1_vector		3006117	0					
ANR	3006380	ArgumentList	s		3006117	1					
ANR	3006381	Argument	s		3006117	0					
ANR	3006382	Identifier	s		3006117	0					
ANR	3006383	Argument	& sub_scratch		3006117	1					
ANR	3006384	UnaryOperationExpression	& sub_scratch		3006117	0					
ANR	3006385	UnaryOperator	&		3006117	0					
ANR	3006386	Identifier	sub_scratch		3006117	1					
ANR	3006387	Argument	mb -> v1_vector		3006117	2					
ANR	3006388	PtrMemberAccess	mb -> v1_vector		3006117	0					
ANR	3006389	Identifier	mb		3006117	0					
ANR	3006390	Identifier	v1_vector		3006117	1					
ANR	3006391	Argument	info		3006117	3					
ANR	3006392	Identifier	info		3006117	0					
ANR	3006393	ElseStatement	else		3006117	0					
ANR	3006394	ExpressionStatement	"decode_v4_vector ( s , & sub_scratch , mb -> v4_vector , info )"	63:16:1526:1580	3006117	0	True				
ANR	3006395	CallExpression	"decode_v4_vector ( s , & sub_scratch , mb -> v4_vector , info )"		3006117	0					
ANR	3006396	Callee	decode_v4_vector		3006117	0					
ANR	3006397	Identifier	decode_v4_vector		3006117	0					
ANR	3006398	ArgumentList	s		3006117	1					
ANR	3006399	Argument	s		3006117	0					
ANR	3006400	Identifier	s		3006117	0					
ANR	3006401	Argument	& sub_scratch		3006117	1					
ANR	3006402	UnaryOperationExpression	& sub_scratch		3006117	0					
ANR	3006403	UnaryOperator	&		3006117	0					
ANR	3006404	Identifier	sub_scratch		3006117	1					
ANR	3006405	Argument	mb -> v4_vector		3006117	2					
ANR	3006406	PtrMemberAccess	mb -> v4_vector		3006117	0					
ANR	3006407	Identifier	mb		3006117	0					
ANR	3006408	Identifier	v4_vector		3006117	1					
ANR	3006409	Argument	info		3006117	3					
ANR	3006410	Identifier	info		3006117	0					
ANR	3006411	SwitchStatement	switch ( info -> mode )		3006117	8					
ANR	3006412	Condition	info -> mode	71:11:1614:1623	3006117	0	True				
ANR	3006413	PtrMemberAccess	info -> mode		3006117	0					
ANR	3006414	Identifier	info		3006117	0					
ANR	3006415	Identifier	mode		3006117	1					
ANR	3006416	CompoundStatement		69:23:1487:1487	3006117	1					
ANR	3006417	Label	case MODE_V1_ONLY :	73:4:1633:1650	3006117	0	True				
ANR	3006418	Identifier	MODE_V1_ONLY		3006117	0					
ANR	3006419	ExpressionStatement	"ret += write_chunk_header ( buf + ret , 0x32 , mb_count )"	77:8:1732:1784	3006117	1	True				
ANR	3006420	AssignmentExpression	"ret += write_chunk_header ( buf + ret , 0x32 , mb_count )"		3006117	0		+=			
ANR	3006421	Identifier	ret		3006117	0					
ANR	3006422	CallExpression	"write_chunk_header ( buf + ret , 0x32 , mb_count )"		3006117	1					
ANR	3006423	Callee	write_chunk_header		3006117	0					
ANR	3006424	Identifier	write_chunk_header		3006117	0					
ANR	3006425	ArgumentList	buf + ret		3006117	1					
ANR	3006426	Argument	buf + ret		3006117	0					
ANR	3006427	AdditiveExpression	buf + ret		3006117	0		+			
ANR	3006428	Identifier	buf		3006117	0					
ANR	3006429	Identifier	ret		3006117	1					
ANR	3006430	Argument	0x32		3006117	1					
ANR	3006431	PrimaryExpression	0x32		3006117	0					
ANR	3006432	Argument	mb_count		3006117	2					
ANR	3006433	Identifier	mb_count		3006117	0					
ANR	3006434	ForStatement	for ( x = 0 ; x < mb_count ; x ++ )		3006117	2					
ANR	3006435	ForInit	x = 0 ;	81:12:1801:1806	3006117	0	True				
ANR	3006436	AssignmentExpression	x = 0		3006117	0		=			
ANR	3006437	Identifier	x		3006117	0					
ANR	3006438	PrimaryExpression	0		3006117	1					
ANR	3006439	Condition	x < mb_count	81:19:1808:1819	3006117	1	True				
ANR	3006440	RelationalExpression	x < mb_count		3006117	0		<			
ANR	3006441	Identifier	x		3006117	0					
ANR	3006442	Identifier	mb_count		3006117	1					
ANR	3006443	PostIncDecOperationExpression	x ++	81:33:1822:1824	3006117	2	True				
ANR	3006444	Identifier	x		3006117	0					
ANR	3006445	IncDec	++		3006117	1					
ANR	3006446	ExpressionStatement	buf [ ret ++ ] = s -> mb [ x ] . v1_vector	83:12:1840:1871	3006117	3	True				
ANR	3006447	AssignmentExpression	buf [ ret ++ ] = s -> mb [ x ] . v1_vector		3006117	0		=			
ANR	3006448	ArrayIndexing	buf [ ret ++ ]		3006117	0					
ANR	3006449	Identifier	buf		3006117	0					
ANR	3006450	PostIncDecOperationExpression	ret ++		3006117	1					
ANR	3006451	Identifier	ret		3006117	0					
ANR	3006452	IncDec	++		3006117	1					
ANR	3006453	MemberAccess	s -> mb [ x ] . v1_vector		3006117	1					
ANR	3006454	ArrayIndexing	s -> mb [ x ]		3006117	0					
ANR	3006455	PtrMemberAccess	s -> mb		3006117	0					
ANR	3006456	Identifier	s		3006117	0					
ANR	3006457	Identifier	mb		3006117	1					
ANR	3006458	Identifier	x		3006117	1					
ANR	3006459	Identifier	v1_vector		3006117	1					
ANR	3006460	BreakStatement	break ;	87:8:1884:1889	3006117	3	True				
ANR	3006461	Label	case MODE_V1_V4 :	89:4:1896:1911	3006117	4	True				
ANR	3006462	Identifier	MODE_V1_V4		3006117	0					
ANR	3006463	ExpressionStatement	header_ofs = ret	93:8:1958:1974	3006117	5	True				
ANR	3006464	AssignmentExpression	header_ofs = ret		3006117	0		=			
ANR	3006465	Identifier	header_ofs		3006117	0					
ANR	3006466	Identifier	ret		3006117	1					
ANR	3006467	ExpressionStatement	ret += CHUNK_HEADER_SIZE	95:8:1985:2009	3006117	6	True				
ANR	3006468	AssignmentExpression	ret += CHUNK_HEADER_SIZE		3006117	0		+=			
ANR	3006469	Identifier	ret		3006117	0					
ANR	3006470	Identifier	CHUNK_HEADER_SIZE		3006117	1					
ANR	3006471	ForStatement	for ( x = 0 ; x < mb_count ; x += 32 )		3006117	7					
ANR	3006472	ForInit	x = 0 ;	99:12:2026:2031	3006117	0	True				
ANR	3006473	AssignmentExpression	x = 0		3006117	0		=			
ANR	3006474	Identifier	x		3006117	0					
ANR	3006475	PrimaryExpression	0		3006117	1					
ANR	3006476	Condition	x < mb_count	99:19:2033:2044	3006117	1	True				
ANR	3006477	RelationalExpression	x < mb_count		3006117	0		<			
ANR	3006478	Identifier	x		3006117	0					
ANR	3006479	Identifier	mb_count		3006117	1					
ANR	3006480	AssignmentExpression	x += 32	99:33:2047:2053	3006117	2	True	+=			
ANR	3006481	Identifier	x		3006117	0					
ANR	3006482	PrimaryExpression	32		3006117	1					
ANR	3006483	CompoundStatement		97:42:1917:1917	3006117	3					
ANR	3006484	ExpressionStatement	flags = 0	101:12:2071:2080	3006117	0	True				
ANR	3006485	AssignmentExpression	flags = 0		3006117	0		=			
ANR	3006486	Identifier	flags		3006117	0					
ANR	3006487	PrimaryExpression	0		3006117	1					
ANR	3006488	ForStatement	"for ( y = x ; y < FFMIN ( x + 32 , mb_count ) ; y ++ )"		3006117	1					
ANR	3006489	ForInit	y = x ;	103:16:2099:2104	3006117	0	True				
ANR	3006490	AssignmentExpression	y = x		3006117	0		=			
ANR	3006491	Identifier	y		3006117	0					
ANR	3006492	Identifier	x		3006117	1					
ANR	3006493	Condition	"y < FFMIN ( x + 32 , mb_count )"	103:23:2106:2130	3006117	1	True				
ANR	3006494	RelationalExpression	"y < FFMIN ( x + 32 , mb_count )"		3006117	0		<			
ANR	3006495	Identifier	y		3006117	0					
ANR	3006496	CallExpression	"FFMIN ( x + 32 , mb_count )"		3006117	1					
ANR	3006497	Callee	FFMIN		3006117	0					
ANR	3006498	Identifier	FFMIN		3006117	0					
ANR	3006499	ArgumentList	x + 32		3006117	1					
ANR	3006500	Argument	x + 32		3006117	0					
ANR	3006501	AdditiveExpression	x + 32		3006117	0		+			
ANR	3006502	Identifier	x		3006117	0					
ANR	3006503	PrimaryExpression	32		3006117	1					
ANR	3006504	Argument	mb_count		3006117	1					
ANR	3006505	Identifier	mb_count		3006117	0					
ANR	3006506	PostIncDecOperationExpression	y ++	103:50:2133:2135	3006117	2	True				
ANR	3006507	Identifier	y		3006117	0					
ANR	3006508	IncDec	++		3006117	1					
ANR	3006509	IfStatement	if ( s -> mb [ y ] . best_encoding == ENC_V4 )		3006117	3					
ANR	3006510	Condition	s -> mb [ y ] . best_encoding == ENC_V4	105:19:2158:2189	3006117	0	True				
ANR	3006511	EqualityExpression	s -> mb [ y ] . best_encoding == ENC_V4		3006117	0		==			
ANR	3006512	MemberAccess	s -> mb [ y ] . best_encoding		3006117	0					
ANR	3006513	ArrayIndexing	s -> mb [ y ]		3006117	0					
ANR	3006514	PtrMemberAccess	s -> mb		3006117	0					
ANR	3006515	Identifier	s		3006117	0					
ANR	3006516	Identifier	mb		3006117	1					
ANR	3006517	Identifier	y		3006117	1					
ANR	3006518	Identifier	best_encoding		3006117	1					
ANR	3006519	Identifier	ENC_V4		3006117	1					
ANR	3006520	ExpressionStatement	flags |= 1 << ( 31 - y + x )	107:20:2213:2239	3006117	1	True				
ANR	3006521	AssignmentExpression	flags |= 1 << ( 31 - y + x )		3006117	0		|=			
ANR	3006522	Identifier	flags		3006117	0					
ANR	3006523	ShiftExpression	1 << ( 31 - y + x )		3006117	1		<<			
ANR	3006524	PrimaryExpression	1		3006117	0					
ANR	3006525	AdditiveExpression	31 - y + x		3006117	1		-			
ANR	3006526	PrimaryExpression	31		3006117	0					
ANR	3006527	AdditiveExpression	y + x		3006117	1		+			
ANR	3006528	Identifier	y		3006117	0					
ANR	3006529	Identifier	x		3006117	1					
ANR	3006530	ExpressionStatement	"AV_WB32 ( & buf [ ret ] , flags )"	111:12:2256:2281	3006117	2	True				
ANR	3006531	CallExpression	"AV_WB32 ( & buf [ ret ] , flags )"		3006117	0					
ANR	3006532	Callee	AV_WB32		3006117	0					
ANR	3006533	Identifier	AV_WB32		3006117	0					
ANR	3006534	ArgumentList	& buf [ ret ]		3006117	1					
ANR	3006535	Argument	& buf [ ret ]		3006117	0					
ANR	3006536	UnaryOperationExpression	& buf [ ret ]		3006117	0					
ANR	3006537	UnaryOperator	&		3006117	0					
ANR	3006538	ArrayIndexing	buf [ ret ]		3006117	1					
ANR	3006539	Identifier	buf		3006117	0					
ANR	3006540	Identifier	ret		3006117	1					
ANR	3006541	Argument	flags		3006117	1					
ANR	3006542	Identifier	flags		3006117	0					
ANR	3006543	ExpressionStatement	ret += 4	113:12:2296:2304	3006117	3	True				
ANR	3006544	AssignmentExpression	ret += 4		3006117	0		+=			
ANR	3006545	Identifier	ret		3006117	0					
ANR	3006546	PrimaryExpression	4		3006117	1					
ANR	3006547	ForStatement	"for ( y = x ; y < FFMIN ( x + 32 , mb_count ) ; y ++ )"		3006117	4					
ANR	3006548	ForInit	y = x ;	117:16:2325:2330	3006117	0	True				
ANR	3006549	AssignmentExpression	y = x		3006117	0		=			
ANR	3006550	Identifier	y		3006117	0					
ANR	3006551	Identifier	x		3006117	1					
ANR	3006552	Condition	"y < FFMIN ( x + 32 , mb_count )"	117:23:2332:2356	3006117	1	True				
ANR	3006553	RelationalExpression	"y < FFMIN ( x + 32 , mb_count )"		3006117	0		<			
ANR	3006554	Identifier	y		3006117	0					
ANR	3006555	CallExpression	"FFMIN ( x + 32 , mb_count )"		3006117	1					
ANR	3006556	Callee	FFMIN		3006117	0					
ANR	3006557	Identifier	FFMIN		3006117	0					
ANR	3006558	ArgumentList	x + 32		3006117	1					
ANR	3006559	Argument	x + 32		3006117	0					
ANR	3006560	AdditiveExpression	x + 32		3006117	0		+			
ANR	3006561	Identifier	x		3006117	0					
ANR	3006562	PrimaryExpression	32		3006117	1					
ANR	3006563	Argument	mb_count		3006117	1					
ANR	3006564	Identifier	mb_count		3006117	0					
ANR	3006565	PostIncDecOperationExpression	y ++	117:50:2359:2361	3006117	2	True				
ANR	3006566	Identifier	y		3006117	0					
ANR	3006567	IncDec	++		3006117	1					
ANR	3006568	CompoundStatement		115:55:2225:2225	3006117	3					
ANR	3006569	ExpressionStatement	mb = & s -> mb [ y ]	119:16:2383:2397	3006117	0	True				
ANR	3006570	AssignmentExpression	mb = & s -> mb [ y ]		3006117	0		=			
ANR	3006571	Identifier	mb		3006117	0					
ANR	3006572	UnaryOperationExpression	& s -> mb [ y ]		3006117	1					
ANR	3006573	UnaryOperator	&		3006117	0					
ANR	3006574	ArrayIndexing	s -> mb [ y ]		3006117	1					
ANR	3006575	PtrMemberAccess	s -> mb		3006117	0					
ANR	3006576	Identifier	s		3006117	0					
ANR	3006577	Identifier	mb		3006117	1					
ANR	3006578	Identifier	y		3006117	1					
ANR	3006579	IfStatement	if ( mb -> best_encoding == ENC_V1 )		3006117	1					
ANR	3006580	Condition	mb -> best_encoding == ENC_V1	123:19:2421:2447	3006117	0	True				
ANR	3006581	EqualityExpression	mb -> best_encoding == ENC_V1		3006117	0		==			
ANR	3006582	PtrMemberAccess	mb -> best_encoding		3006117	0					
ANR	3006583	Identifier	mb		3006117	0					
ANR	3006584	Identifier	best_encoding		3006117	1					
ANR	3006585	Identifier	ENC_V1		3006117	1					
ANR	3006586	ExpressionStatement	buf [ ret ++ ] = mb -> v1_vector	125:20:2471:2497	3006117	1	True				
ANR	3006587	AssignmentExpression	buf [ ret ++ ] = mb -> v1_vector		3006117	0		=			
ANR	3006588	ArrayIndexing	buf [ ret ++ ]		3006117	0					
ANR	3006589	Identifier	buf		3006117	0					
ANR	3006590	PostIncDecOperationExpression	ret ++		3006117	1					
ANR	3006591	Identifier	ret		3006117	0					
ANR	3006592	IncDec	++		3006117	1					
ANR	3006593	PtrMemberAccess	mb -> v1_vector		3006117	1					
ANR	3006594	Identifier	mb		3006117	0					
ANR	3006595	Identifier	v1_vector		3006117	1					
ANR	3006596	ElseStatement	else		3006117	0					
ANR	3006597	ForStatement	for ( z = 0 ; z < 4 ; z ++ )		3006117	0					
ANR	3006598	ForInit	z = 0 ;	129:24:2546:2551	3006117	0	True				
ANR	3006599	AssignmentExpression	z = 0		3006117	0		=			
ANR	3006600	Identifier	z		3006117	0					
ANR	3006601	PrimaryExpression	0		3006117	1					
ANR	3006602	Condition	z < 4	129:31:2553:2557	3006117	1	True				
ANR	3006603	RelationalExpression	z < 4		3006117	0		<			
ANR	3006604	Identifier	z		3006117	0					
ANR	3006605	PrimaryExpression	4		3006117	1					
ANR	3006606	PostIncDecOperationExpression	z ++	129:38:2560:2562	3006117	2	True				
ANR	3006607	Identifier	z		3006117	0					
ANR	3006608	IncDec	++		3006117	1					
ANR	3006609	ExpressionStatement	buf [ ret ++ ] = mb -> v4_vector [ z ]	131:24:2590:2619	3006117	3	True				
ANR	3006610	AssignmentExpression	buf [ ret ++ ] = mb -> v4_vector [ z ]		3006117	0		=			
ANR	3006611	ArrayIndexing	buf [ ret ++ ]		3006117	0					
ANR	3006612	Identifier	buf		3006117	0					
ANR	3006613	PostIncDecOperationExpression	ret ++		3006117	1					
ANR	3006614	Identifier	ret		3006117	0					
ANR	3006615	IncDec	++		3006117	1					
ANR	3006616	ArrayIndexing	mb -> v4_vector [ z ]		3006117	1					
ANR	3006617	PtrMemberAccess	mb -> v4_vector		3006117	0					
ANR	3006618	Identifier	mb		3006117	0					
ANR	3006619	Identifier	v4_vector		3006117	1					
ANR	3006620	Identifier	z		3006117	1					
ANR	3006621	ExpressionStatement	"write_chunk_header ( buf + header_ofs , 0x30 , ret - header_ofs - CHUNK_HEADER_SIZE )"	139:8:2658:2738	3006117	8	True				
ANR	3006622	CallExpression	"write_chunk_header ( buf + header_ofs , 0x30 , ret - header_ofs - CHUNK_HEADER_SIZE )"		3006117	0					
ANR	3006623	Callee	write_chunk_header		3006117	0					
ANR	3006624	Identifier	write_chunk_header		3006117	0					
ANR	3006625	ArgumentList	buf + header_ofs		3006117	1					
ANR	3006626	Argument	buf + header_ofs		3006117	0					
ANR	3006627	AdditiveExpression	buf + header_ofs		3006117	0		+			
ANR	3006628	Identifier	buf		3006117	0					
ANR	3006629	Identifier	header_ofs		3006117	1					
ANR	3006630	Argument	0x30		3006117	1					
ANR	3006631	PrimaryExpression	0x30		3006117	0					
ANR	3006632	Argument	ret - header_ofs - CHUNK_HEADER_SIZE		3006117	2					
ANR	3006633	AdditiveExpression	ret - header_ofs - CHUNK_HEADER_SIZE		3006117	0		-			
ANR	3006634	Identifier	ret		3006117	0					
ANR	3006635	AdditiveExpression	header_ofs - CHUNK_HEADER_SIZE		3006117	1		-			
ANR	3006636	Identifier	header_ofs		3006117	0					
ANR	3006637	Identifier	CHUNK_HEADER_SIZE		3006117	1					
ANR	3006638	BreakStatement	break ;	143:8:2751:2756	3006117	9	True				
ANR	3006639	Label	case MODE_MC :	145:4:2763:2775	3006117	10	True				
ANR	3006640	Identifier	MODE_MC		3006117	0					
ANR	3006641	ExpressionStatement	header_ofs = ret	149:8:2822:2838	3006117	11	True				
ANR	3006642	AssignmentExpression	header_ofs = ret		3006117	0		=			
ANR	3006643	Identifier	header_ofs		3006117	0					
ANR	3006644	Identifier	ret		3006117	1					
ANR	3006645	ExpressionStatement	ret += CHUNK_HEADER_SIZE	151:8:2849:2873	3006117	12	True				
ANR	3006646	AssignmentExpression	ret += CHUNK_HEADER_SIZE		3006117	0		+=			
ANR	3006647	Identifier	ret		3006117	0					
ANR	3006648	Identifier	CHUNK_HEADER_SIZE		3006117	1					
ANR	3006649	ExpressionStatement	flags = bits = temp_size = 0	153:8:2884:2912	3006117	13	True				
ANR	3006650	AssignmentExpression	flags = bits = temp_size = 0		3006117	0		=			
ANR	3006651	Identifier	flags		3006117	0					
ANR	3006652	AssignmentExpression	bits = temp_size = 0		3006117	1		=			
ANR	3006653	Identifier	bits		3006117	0					
ANR	3006654	AssignmentExpression	temp_size = 0		3006117	1		=			
ANR	3006655	Identifier	temp_size		3006117	0					
ANR	3006656	PrimaryExpression	0		3006117	1					
ANR	3006657	ForStatement	for ( x = 0 ; x < mb_count ; x ++ )		3006117	14					
ANR	3006658	ForInit	x = 0 ;	157:12:2929:2934	3006117	0	True				
ANR	3006659	AssignmentExpression	x = 0		3006117	0		=			
ANR	3006660	Identifier	x		3006117	0					
ANR	3006661	PrimaryExpression	0		3006117	1					
ANR	3006662	Condition	x < mb_count	157:19:2936:2947	3006117	1	True				
ANR	3006663	RelationalExpression	x < mb_count		3006117	0		<			
ANR	3006664	Identifier	x		3006117	0					
ANR	3006665	Identifier	mb_count		3006117	1					
ANR	3006666	PostIncDecOperationExpression	x ++	157:33:2950:2952	3006117	2	True				
ANR	3006667	Identifier	x		3006117	0					
ANR	3006668	IncDec	++		3006117	1					
ANR	3006669	CompoundStatement		155:38:2816:2816	3006117	3					
ANR	3006670	ExpressionStatement	mb = & s -> mb [ x ]	159:12:2970:2984	3006117	0	True				
ANR	3006671	AssignmentExpression	mb = & s -> mb [ x ]		3006117	0		=			
ANR	3006672	Identifier	mb		3006117	0					
ANR	3006673	UnaryOperationExpression	& s -> mb [ x ]		3006117	1					
ANR	3006674	UnaryOperator	&		3006117	0					
ANR	3006675	ArrayIndexing	s -> mb [ x ]		3006117	1					
ANR	3006676	PtrMemberAccess	s -> mb		3006117	0					
ANR	3006677	Identifier	s		3006117	0					
ANR	3006678	Identifier	mb		3006117	1					
ANR	3006679	Identifier	x		3006117	1					
ANR	3006680	ExpressionStatement	flags |= ( mb -> best_encoding != ENC_SKIP ) << ( 31 - bits ++ )	161:12:2999:3056	3006117	1	True				
ANR	3006681	AssignmentExpression	flags |= ( mb -> best_encoding != ENC_SKIP ) << ( 31 - bits ++ )		3006117	0		|=			
ANR	3006682	Identifier	flags		3006117	0					
ANR	3006683	ShiftExpression	( mb -> best_encoding != ENC_SKIP ) << ( 31 - bits ++ )		3006117	1		<<			
ANR	3006684	EqualityExpression	mb -> best_encoding != ENC_SKIP		3006117	0		!=			
ANR	3006685	PtrMemberAccess	mb -> best_encoding		3006117	0					
ANR	3006686	Identifier	mb		3006117	0					
ANR	3006687	Identifier	best_encoding		3006117	1					
ANR	3006688	Identifier	ENC_SKIP		3006117	1					
ANR	3006689	AdditiveExpression	31 - bits ++		3006117	1		-			
ANR	3006690	PrimaryExpression	31		3006117	0					
ANR	3006691	PostIncDecOperationExpression	bits ++		3006117	1					
ANR	3006692	Identifier	bits		3006117	0					
ANR	3006693	IncDec	++		3006117	1					
ANR	3006694	ExpressionStatement	needs_extra_bit = 0	163:12:3071:3090	3006117	2	True				
ANR	3006695	AssignmentExpression	needs_extra_bit = 0		3006117	0		=			
ANR	3006696	Identifier	needs_extra_bit		3006117	0					
ANR	3006697	PrimaryExpression	0		3006117	1					
ANR	3006698	ExpressionStatement	should_write_temp = 0	165:12:3105:3126	3006117	3	True				
ANR	3006699	AssignmentExpression	should_write_temp = 0		3006117	0		=			
ANR	3006700	Identifier	should_write_temp		3006117	0					
ANR	3006701	PrimaryExpression	0		3006117	1					
ANR	3006702	IfStatement	if ( mb -> best_encoding != ENC_SKIP )		3006117	4					
ANR	3006703	Condition	mb -> best_encoding != ENC_SKIP	169:15:3146:3174	3006117	0	True				
ANR	3006704	EqualityExpression	mb -> best_encoding != ENC_SKIP		3006117	0		!=			
ANR	3006705	PtrMemberAccess	mb -> best_encoding		3006117	0					
ANR	3006706	Identifier	mb		3006117	0					
ANR	3006707	Identifier	best_encoding		3006117	1					
ANR	3006708	Identifier	ENC_SKIP		3006117	1					
ANR	3006709	CompoundStatement		167:46:3038:3038	3006117	1					
ANR	3006710	IfStatement	if ( bits < 32 )		3006117	0					
ANR	3006711	Condition	bits < 32	171:19:3199:3207	3006117	0	True				
ANR	3006712	RelationalExpression	bits < 32		3006117	0		<			
ANR	3006713	Identifier	bits		3006117	0					
ANR	3006714	PrimaryExpression	32		3006117	1					
ANR	3006715	ExpressionStatement	flags |= ( mb -> best_encoding == ENC_V4 ) << ( 31 - bits ++ )	173:20:3231:3286	3006117	1	True				
ANR	3006716	AssignmentExpression	flags |= ( mb -> best_encoding == ENC_V4 ) << ( 31 - bits ++ )		3006117	0		|=			
ANR	3006717	Identifier	flags		3006117	0					
ANR	3006718	ShiftExpression	( mb -> best_encoding == ENC_V4 ) << ( 31 - bits ++ )		3006117	1		<<			
ANR	3006719	EqualityExpression	mb -> best_encoding == ENC_V4		3006117	0		==			
ANR	3006720	PtrMemberAccess	mb -> best_encoding		3006117	0					
ANR	3006721	Identifier	mb		3006117	0					
ANR	3006722	Identifier	best_encoding		3006117	1					
ANR	3006723	Identifier	ENC_V4		3006117	1					
ANR	3006724	AdditiveExpression	31 - bits ++		3006117	1		-			
ANR	3006725	PrimaryExpression	31		3006117	0					
ANR	3006726	PostIncDecOperationExpression	bits ++		3006117	1					
ANR	3006727	Identifier	bits		3006117	0					
ANR	3006728	IncDec	++		3006117	1					
ANR	3006729	ElseStatement	else		3006117	0					
ANR	3006730	ExpressionStatement	needs_extra_bit = 1	177:20:3331:3350	3006117	0	True				
ANR	3006731	AssignmentExpression	needs_extra_bit = 1		3006117	0		=			
ANR	3006732	Identifier	needs_extra_bit		3006117	0					
ANR	3006733	PrimaryExpression	1		3006117	1					
ANR	3006734	IfStatement	if ( bits == 32 )		3006117	5					
ANR	3006735	Condition	bits == 32	183:15:3385:3394	3006117	0	True				
ANR	3006736	EqualityExpression	bits == 32		3006117	0		==			
ANR	3006737	Identifier	bits		3006117	0					
ANR	3006738	PrimaryExpression	32		3006117	1					
ANR	3006739	CompoundStatement		181:27:3258:3258	3006117	1					
ANR	3006740	ExpressionStatement	"AV_WB32 ( & buf [ ret ] , flags )"	185:16:3416:3441	3006117	0	True				
ANR	3006741	CallExpression	"AV_WB32 ( & buf [ ret ] , flags )"		3006117	0					
ANR	3006742	Callee	AV_WB32		3006117	0					
ANR	3006743	Identifier	AV_WB32		3006117	0					
ANR	3006744	ArgumentList	& buf [ ret ]		3006117	1					
ANR	3006745	Argument	& buf [ ret ]		3006117	0					
ANR	3006746	UnaryOperationExpression	& buf [ ret ]		3006117	0					
ANR	3006747	UnaryOperator	&		3006117	0					
ANR	3006748	ArrayIndexing	buf [ ret ]		3006117	1					
ANR	3006749	Identifier	buf		3006117	0					
ANR	3006750	Identifier	ret		3006117	1					
ANR	3006751	Argument	flags		3006117	1					
ANR	3006752	Identifier	flags		3006117	0					
ANR	3006753	ExpressionStatement	ret += 4	187:16:3460:3468	3006117	1	True				
ANR	3006754	AssignmentExpression	ret += 4		3006117	0		+=			
ANR	3006755	Identifier	ret		3006117	0					
ANR	3006756	PrimaryExpression	4		3006117	1					
ANR	3006757	ExpressionStatement	flags = bits = 0	189:16:3487:3503	3006117	2	True				
ANR	3006758	AssignmentExpression	flags = bits = 0		3006117	0		=			
ANR	3006759	Identifier	flags		3006117	0					
ANR	3006760	AssignmentExpression	bits = 0		3006117	1		=			
ANR	3006761	Identifier	bits		3006117	0					
ANR	3006762	PrimaryExpression	0		3006117	1					
ANR	3006763	IfStatement	if ( mb -> best_encoding == ENC_SKIP || needs_extra_bit )		3006117	3					
ANR	3006764	Condition	mb -> best_encoding == ENC_SKIP || needs_extra_bit	193:19:3527:3574	3006117	0	True				
ANR	3006765	OrExpression	mb -> best_encoding == ENC_SKIP || needs_extra_bit		3006117	0		||			
ANR	3006766	EqualityExpression	mb -> best_encoding == ENC_SKIP		3006117	0		==			
ANR	3006767	PtrMemberAccess	mb -> best_encoding		3006117	0					
ANR	3006768	Identifier	mb		3006117	0					
ANR	3006769	Identifier	best_encoding		3006117	1					
ANR	3006770	Identifier	ENC_SKIP		3006117	1					
ANR	3006771	Identifier	needs_extra_bit		3006117	1					
ANR	3006772	CompoundStatement		191:69:3438:3438	3006117	1					
ANR	3006773	ExpressionStatement	"memcpy ( & buf [ ret ] , temp , temp_size )"	195:20:3600:3634	3006117	0	True				
ANR	3006774	CallExpression	"memcpy ( & buf [ ret ] , temp , temp_size )"		3006117	0					
ANR	3006775	Callee	memcpy		3006117	0					
ANR	3006776	Identifier	memcpy		3006117	0					
ANR	3006777	ArgumentList	& buf [ ret ]		3006117	1					
ANR	3006778	Argument	& buf [ ret ]		3006117	0					
ANR	3006779	UnaryOperationExpression	& buf [ ret ]		3006117	0					
ANR	3006780	UnaryOperator	&		3006117	0					
ANR	3006781	ArrayIndexing	buf [ ret ]		3006117	1					
ANR	3006782	Identifier	buf		3006117	0					
ANR	3006783	Identifier	ret		3006117	1					
ANR	3006784	Argument	temp		3006117	1					
ANR	3006785	Identifier	temp		3006117	0					
ANR	3006786	Argument	temp_size		3006117	2					
ANR	3006787	Identifier	temp_size		3006117	0					
ANR	3006788	ExpressionStatement	ret += temp_size	197:20:3657:3673	3006117	1	True				
ANR	3006789	AssignmentExpression	ret += temp_size		3006117	0		+=			
ANR	3006790	Identifier	ret		3006117	0					
ANR	3006791	Identifier	temp_size		3006117	1					
ANR	3006792	ExpressionStatement	temp_size = 0	199:20:3696:3709	3006117	2	True				
ANR	3006793	AssignmentExpression	temp_size = 0		3006117	0		=			
ANR	3006794	Identifier	temp_size		3006117	0					
ANR	3006795	PrimaryExpression	0		3006117	1					
ANR	3006796	ElseStatement	else		3006117	0					
ANR	3006797	ExpressionStatement	should_write_temp = 1	203:20:3756:3777	3006117	0	True				
ANR	3006798	AssignmentExpression	should_write_temp = 1		3006117	0		=			
ANR	3006799	Identifier	should_write_temp		3006117	0					
ANR	3006800	PrimaryExpression	1		3006117	1					
ANR	3006801	IfStatement	if ( needs_extra_bit )		3006117	6					
ANR	3006802	Condition	needs_extra_bit	209:15:3812:3826	3006117	0	True				
ANR	3006803	Identifier	needs_extra_bit		3006117	0					
ANR	3006804	CompoundStatement		207:32:3690:3690	3006117	1					
ANR	3006805	ExpressionStatement	flags = ( mb -> best_encoding == ENC_V4 ) << 31	211:16:3848:3891	3006117	0	True				
ANR	3006806	AssignmentExpression	flags = ( mb -> best_encoding == ENC_V4 ) << 31		3006117	0		=			
ANR	3006807	Identifier	flags		3006117	0					
ANR	3006808	ShiftExpression	( mb -> best_encoding == ENC_V4 ) << 31		3006117	1		<<			
ANR	3006809	EqualityExpression	mb -> best_encoding == ENC_V4		3006117	0		==			
ANR	3006810	PtrMemberAccess	mb -> best_encoding		3006117	0					
ANR	3006811	Identifier	mb		3006117	0					
ANR	3006812	Identifier	best_encoding		3006117	1					
ANR	3006813	Identifier	ENC_V4		3006117	1					
ANR	3006814	PrimaryExpression	31		3006117	1					
ANR	3006815	ExpressionStatement	bits = 1	213:16:3910:3918	3006117	1	True				
ANR	3006816	AssignmentExpression	bits = 1		3006117	0		=			
ANR	3006817	Identifier	bits		3006117	0					
ANR	3006818	PrimaryExpression	1		3006117	1					
ANR	3006819	IfStatement	if ( mb -> best_encoding == ENC_V1 )		3006117	7					
ANR	3006820	Condition	mb -> best_encoding == ENC_V1	219:15:3953:3979	3006117	0	True				
ANR	3006821	EqualityExpression	mb -> best_encoding == ENC_V1		3006117	0		==			
ANR	3006822	PtrMemberAccess	mb -> best_encoding		3006117	0					
ANR	3006823	Identifier	mb		3006117	0					
ANR	3006824	Identifier	best_encoding		3006117	1					
ANR	3006825	Identifier	ENC_V1		3006117	1					
ANR	3006826	ExpressionStatement	temp [ temp_size ++ ] = mb -> v1_vector	221:16:3999:4032	3006117	1	True				
ANR	3006827	AssignmentExpression	temp [ temp_size ++ ] = mb -> v1_vector		3006117	0		=			
ANR	3006828	ArrayIndexing	temp [ temp_size ++ ]		3006117	0					
ANR	3006829	Identifier	temp		3006117	0					
ANR	3006830	PostIncDecOperationExpression	temp_size ++		3006117	1					
ANR	3006831	Identifier	temp_size		3006117	0					
ANR	3006832	IncDec	++		3006117	1					
ANR	3006833	PtrMemberAccess	mb -> v1_vector		3006117	1					
ANR	3006834	Identifier	mb		3006117	0					
ANR	3006835	Identifier	v1_vector		3006117	1					
ANR	3006836	ElseStatement	else		3006117	0					
ANR	3006837	IfStatement	if ( mb -> best_encoding == ENC_V4 )		3006117	0					
ANR	3006838	Condition	mb -> best_encoding == ENC_V4	223:20:4055:4081	3006117	0	True				
ANR	3006839	EqualityExpression	mb -> best_encoding == ENC_V4		3006117	0		==			
ANR	3006840	PtrMemberAccess	mb -> best_encoding		3006117	0					
ANR	3006841	Identifier	mb		3006117	0					
ANR	3006842	Identifier	best_encoding		3006117	1					
ANR	3006843	Identifier	ENC_V4		3006117	1					
ANR	3006844	ForStatement	for ( z = 0 ; z < 4 ; z ++ )		3006117	1					
ANR	3006845	ForInit	z = 0 ;	225:20:4105:4110	3006117	0	True				
ANR	3006846	AssignmentExpression	z = 0		3006117	0		=			
ANR	3006847	Identifier	z		3006117	0					
ANR	3006848	PrimaryExpression	0		3006117	1					
ANR	3006849	Condition	z < 4	225:27:4112:4116	3006117	1	True				
ANR	3006850	RelationalExpression	z < 4		3006117	0		<			
ANR	3006851	Identifier	z		3006117	0					
ANR	3006852	PrimaryExpression	4		3006117	1					
ANR	3006853	PostIncDecOperationExpression	z ++	225:34:4119:4121	3006117	2	True				
ANR	3006854	Identifier	z		3006117	0					
ANR	3006855	IncDec	++		3006117	1					
ANR	3006856	ExpressionStatement	temp [ temp_size ++ ] = mb -> v4_vector [ z ]	227:20:4145:4181	3006117	3	True				
ANR	3006857	AssignmentExpression	temp [ temp_size ++ ] = mb -> v4_vector [ z ]		3006117	0		=			
ANR	3006858	ArrayIndexing	temp [ temp_size ++ ]		3006117	0					
ANR	3006859	Identifier	temp		3006117	0					
ANR	3006860	PostIncDecOperationExpression	temp_size ++		3006117	1					
ANR	3006861	Identifier	temp_size		3006117	0					
ANR	3006862	IncDec	++		3006117	1					
ANR	3006863	ArrayIndexing	mb -> v4_vector [ z ]		3006117	1					
ANR	3006864	PtrMemberAccess	mb -> v4_vector		3006117	0					
ANR	3006865	Identifier	mb		3006117	0					
ANR	3006866	Identifier	v4_vector		3006117	1					
ANR	3006867	Identifier	z		3006117	1					
ANR	3006868	IfStatement	if ( should_write_temp )		3006117	8					
ANR	3006869	Condition	should_write_temp	231:15:4201:4217	3006117	0	True				
ANR	3006870	Identifier	should_write_temp		3006117	0					
ANR	3006871	CompoundStatement		229:34:4081:4081	3006117	1					
ANR	3006872	ExpressionStatement	"memcpy ( & buf [ ret ] , temp , temp_size )"	233:16:4239:4273	3006117	0	True				
ANR	3006873	CallExpression	"memcpy ( & buf [ ret ] , temp , temp_size )"		3006117	0					
ANR	3006874	Callee	memcpy		3006117	0					
ANR	3006875	Identifier	memcpy		3006117	0					
ANR	3006876	ArgumentList	& buf [ ret ]		3006117	1					
ANR	3006877	Argument	& buf [ ret ]		3006117	0					
ANR	3006878	UnaryOperationExpression	& buf [ ret ]		3006117	0					
ANR	3006879	UnaryOperator	&		3006117	0					
ANR	3006880	ArrayIndexing	buf [ ret ]		3006117	1					
ANR	3006881	Identifier	buf		3006117	0					
ANR	3006882	Identifier	ret		3006117	1					
ANR	3006883	Argument	temp		3006117	1					
ANR	3006884	Identifier	temp		3006117	0					
ANR	3006885	Argument	temp_size		3006117	2					
ANR	3006886	Identifier	temp_size		3006117	0					
ANR	3006887	ExpressionStatement	ret += temp_size	235:16:4292:4308	3006117	1	True				
ANR	3006888	AssignmentExpression	ret += temp_size		3006117	0		+=			
ANR	3006889	Identifier	ret		3006117	0					
ANR	3006890	Identifier	temp_size		3006117	1					
ANR	3006891	ExpressionStatement	temp_size = 0	237:16:4327:4340	3006117	2	True				
ANR	3006892	AssignmentExpression	temp_size = 0		3006117	0		=			
ANR	3006893	Identifier	temp_size		3006117	0					
ANR	3006894	PrimaryExpression	0		3006117	1					
ANR	3006895	IfStatement	if ( bits > 0 )		3006117	15					
ANR	3006896	Condition	bits > 0	245:11:4382:4389	3006117	0	True				
ANR	3006897	RelationalExpression	bits > 0		3006117	0		>			
ANR	3006898	Identifier	bits		3006117	0					
ANR	3006899	PrimaryExpression	0		3006117	1					
ANR	3006900	CompoundStatement		243:21:4253:4253	3006117	1					
ANR	3006901	ExpressionStatement	"AV_WB32 ( & buf [ ret ] , flags )"	247:12:4407:4432	3006117	0	True				
ANR	3006902	CallExpression	"AV_WB32 ( & buf [ ret ] , flags )"		3006117	0					
ANR	3006903	Callee	AV_WB32		3006117	0					
ANR	3006904	Identifier	AV_WB32		3006117	0					
ANR	3006905	ArgumentList	& buf [ ret ]		3006117	1					
ANR	3006906	Argument	& buf [ ret ]		3006117	0					
ANR	3006907	UnaryOperationExpression	& buf [ ret ]		3006117	0					
ANR	3006908	UnaryOperator	&		3006117	0					
ANR	3006909	ArrayIndexing	buf [ ret ]		3006117	1					
ANR	3006910	Identifier	buf		3006117	0					
ANR	3006911	Identifier	ret		3006117	1					
ANR	3006912	Argument	flags		3006117	1					
ANR	3006913	Identifier	flags		3006117	0					
ANR	3006914	ExpressionStatement	ret += 4	249:12:4447:4455	3006117	1	True				
ANR	3006915	AssignmentExpression	ret += 4		3006117	0		+=			
ANR	3006916	Identifier	ret		3006117	0					
ANR	3006917	PrimaryExpression	4		3006117	1					
ANR	3006918	ExpressionStatement	"memcpy ( & buf [ ret ] , temp , temp_size )"	251:12:4470:4504	3006117	2	True				
ANR	3006919	CallExpression	"memcpy ( & buf [ ret ] , temp , temp_size )"		3006117	0					
ANR	3006920	Callee	memcpy		3006117	0					
ANR	3006921	Identifier	memcpy		3006117	0					
ANR	3006922	ArgumentList	& buf [ ret ]		3006117	1					
ANR	3006923	Argument	& buf [ ret ]		3006117	0					
ANR	3006924	UnaryOperationExpression	& buf [ ret ]		3006117	0					
ANR	3006925	UnaryOperator	&		3006117	0					
ANR	3006926	ArrayIndexing	buf [ ret ]		3006117	1					
ANR	3006927	Identifier	buf		3006117	0					
ANR	3006928	Identifier	ret		3006117	1					
ANR	3006929	Argument	temp		3006117	1					
ANR	3006930	Identifier	temp		3006117	0					
ANR	3006931	Argument	temp_size		3006117	2					
ANR	3006932	Identifier	temp_size		3006117	0					
ANR	3006933	ExpressionStatement	ret += temp_size	253:12:4519:4535	3006117	3	True				
ANR	3006934	AssignmentExpression	ret += temp_size		3006117	0		+=			
ANR	3006935	Identifier	ret		3006117	0					
ANR	3006936	Identifier	temp_size		3006117	1					
ANR	3006937	ExpressionStatement	"write_chunk_header ( buf + header_ofs , 0x31 , ret - header_ofs - CHUNK_HEADER_SIZE )"	259:8:4559:4639	3006117	16	True				
ANR	3006938	CallExpression	"write_chunk_header ( buf + header_ofs , 0x31 , ret - header_ofs - CHUNK_HEADER_SIZE )"		3006117	0					
ANR	3006939	Callee	write_chunk_header		3006117	0					
ANR	3006940	Identifier	write_chunk_header		3006117	0					
ANR	3006941	ArgumentList	buf + header_ofs		3006117	1					
ANR	3006942	Argument	buf + header_ofs		3006117	0					
ANR	3006943	AdditiveExpression	buf + header_ofs		3006117	0		+			
ANR	3006944	Identifier	buf		3006117	0					
ANR	3006945	Identifier	header_ofs		3006117	1					
ANR	3006946	Argument	0x31		3006117	1					
ANR	3006947	PrimaryExpression	0x31		3006117	0					
ANR	3006948	Argument	ret - header_ofs - CHUNK_HEADER_SIZE		3006117	2					
ANR	3006949	AdditiveExpression	ret - header_ofs - CHUNK_HEADER_SIZE		3006117	0		-			
ANR	3006950	Identifier	ret		3006117	0					
ANR	3006951	AdditiveExpression	header_ofs - CHUNK_HEADER_SIZE		3006117	1		-			
ANR	3006952	Identifier	header_ofs		3006117	0					
ANR	3006953	Identifier	CHUNK_HEADER_SIZE		3006117	1					
ANR	3006954	BreakStatement	break ;	263:8:4652:4657	3006117	17	True				
ANR	3006955	ReturnStatement	return ret ;	269:4:4673:4683	3006117	9	True				
ANR	3006956	Identifier	ret		3006117	0					
ANR	3006957	ReturnType	static int		3006117	1					
ANR	3006958	Identifier	encode_mode		3006117	2					
ANR	3006959	ParameterList	"CinepakEncContext * s , int h , AVPicture * scratch_pict , AVPicture * last_pict , strip_info * info , unsigned char * buf"		3006117	3					
ANR	3006960	Parameter	CinepakEncContext * s	1:23:23:42	3006117	0	True				
ANR	3006961	ParameterType	CinepakEncContext *		3006117	0					
ANR	3006962	Identifier	s		3006117	1					
ANR	3006963	Parameter	int h	1:45:45:49	3006117	1	True				
ANR	3006964	ParameterType	int		3006117	0					
ANR	3006965	Identifier	h		3006117	1					
ANR	3006966	Parameter	AVPicture * scratch_pict	1:52:52:74	3006117	2	True				
ANR	3006967	ParameterType	AVPicture *		3006117	0					
ANR	3006968	Identifier	scratch_pict		3006117	1					
ANR	3006969	Parameter	AVPicture * last_pict	1:77:77:96	3006117	3	True				
ANR	3006970	ParameterType	AVPicture *		3006117	0					
ANR	3006971	Identifier	last_pict		3006117	1					
ANR	3006972	Parameter	strip_info * info	1:99:99:114	3006117	4	True				
ANR	3006973	ParameterType	strip_info *		3006117	0					
ANR	3006974	Identifier	info		3006117	1					
ANR	3006975	Parameter	unsigned char * buf	1:117:117:134	3006117	5	True				
ANR	3006976	ParameterType	unsigned char *		3006117	0					
ANR	3006977	Identifier	buf		3006117	1					
ANR	3006978	CFGEntryNode	ENTRY		3006117		True				
ANR	3006979	CFGExitNode	EXIT		3006117		True				
ANR	3006980	Symbol	* x		3006117						
ANR	3006981	Symbol	* y		3006117						
ANR	3006982	Symbol	* * mb		3006117						
ANR	3006983	Symbol	* z		3006117						
ANR	3006984	Symbol	& sub_scratch		3006117						
ANR	3006985	Symbol	FFMIN		3006117						
ANR	3006986	Symbol	mb -> best_encoding		3006117						
ANR	3006987	Symbol	& sub_last		3006117						
ANR	3006988	Symbol	s -> mb [ x ] . v1_vector		3006117						
ANR	3006989	Symbol	mb		3006117						
ANR	3006990	Symbol	scratch_pict		3006117						
ANR	3006991	Symbol	info		3006117						
ANR	3006992	Symbol	ret		3006117						
ANR	3006993	Symbol	* buf		3006117						
ANR	3006994	Symbol	mb_count		3006117						
ANR	3006995	Symbol	sub_scratch		3006117						
ANR	3006996	Symbol	bits		3006117						
ANR	3006997	Symbol	header_ofs		3006117						
ANR	3006998	Symbol	MB_SIZE		3006117						
ANR	3006999	Symbol	mb -> v1_vector		3006117						
ANR	3007000	Symbol	* temp		3006117						
ANR	3007001	Symbol	info -> mode		3006117						
ANR	3007002	Symbol	sub_last		3006117						
ANR	3007003	Symbol	s -> w		3006117						
ANR	3007004	Symbol	* mb -> v4_vector		3006117						
ANR	3007005	Symbol	flags		3006117						
ANR	3007006	Symbol	last_pict		3006117						
ANR	3007007	Symbol	MB_AREA		3006117						
ANR	3007008	Symbol	encode_codebook		3006117						
ANR	3007009	Symbol	write_chunk_header		3006117						
ANR	3007010	Symbol	* mb		3006117						
ANR	3007011	Symbol	* * s		3006117						
ANR	3007012	Symbol	info -> v1_codebook		3006117						
ANR	3007013	Symbol	MODE_MC		3006117						
ANR	3007014	Symbol	temp		3006117						
ANR	3007015	Symbol	s -> skip_empty_cb		3006117						
ANR	3007016	Symbol	CHUNK_HEADER_SIZE		3006117						
ANR	3007017	Symbol	temp_size		3006117						
ANR	3007018	Symbol	info -> v1_size		3006117						
ANR	3007019	Symbol	info -> v4_codebook		3006117						
ANR	3007020	Symbol	h		3006117						
ANR	3007021	Symbol	s -> mb		3006117						
ANR	3007022	Symbol	ENC_SKIP		3006117						
ANR	3007023	Symbol	ENC_V1		3006117						
ANR	3007024	Symbol	ENC_V4		3006117						
ANR	3007025	Symbol	MODE_V1_ONLY		3006117						
ANR	3007026	Symbol	s -> mb [ y ] . best_encoding		3006117						
ANR	3007027	Symbol	info -> v4_size		3006117						
ANR	3007028	Symbol	should_write_temp		3006117						
ANR	3007029	Symbol	mb -> v4_vector		3006117						
ANR	3007030	Symbol	buf		3006117						
ANR	3007031	Symbol	s		3006117						
ANR	3007032	Symbol	x		3006117						
ANR	3007033	Symbol	y		3006117						
ANR	3007034	Symbol	z		3006117						
ANR	3007035	Symbol	needs_extra_bit		3006117						
ANR	3007036	Symbol	* info		3006117						
ANR	3007037	Symbol	* s		3006117						
ANR	3007038	Symbol	* s -> mb		3006117						
