command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5232847	File	/home/p4ultr4n/workplace/ReVeal/raw_code/load_elf_0.c								
ANR	5232848	Function	load_elf	1:0:0:1003							
ANR	5232849	FunctionDef	"load_elf (const char * filename , int64_t virt_to_phys_addend , uint64_t * pentry)"		5232848	0					
ANR	5232850	CompoundStatement		5:0:97:1003	5232848	0					
ANR	5232851	IdentifierDeclStatement	"int fd , data_order , must_swab , ret ;"	7:4:104:138	5232848	0	True				
ANR	5232852	IdentifierDecl	fd		5232848	0					
ANR	5232853	IdentifierDeclType	int		5232848	0					
ANR	5232854	Identifier	fd		5232848	1					
ANR	5232855	IdentifierDecl	data_order		5232848	1					
ANR	5232856	IdentifierDeclType	int		5232848	0					
ANR	5232857	Identifier	data_order		5232848	1					
ANR	5232858	IdentifierDecl	must_swab		5232848	2					
ANR	5232859	IdentifierDeclType	int		5232848	0					
ANR	5232860	Identifier	must_swab		5232848	1					
ANR	5232861	IdentifierDecl	ret		5232848	3					
ANR	5232862	IdentifierDeclType	int		5232848	0					
ANR	5232863	Identifier	ret		5232848	1					
ANR	5232864	IdentifierDeclStatement	uint8_t e_ident [ EI_NIDENT ] ;	9:4:145:171	5232848	1	True				
ANR	5232865	IdentifierDecl	e_ident [ EI_NIDENT ]		5232848	0					
ANR	5232866	IdentifierDeclType	uint8_t [ EI_NIDENT ]		5232848	0					
ANR	5232867	Identifier	e_ident		5232848	1					
ANR	5232868	Identifier	EI_NIDENT		5232848	2					
ANR	5232869	ExpressionStatement	"fd = open ( filename , O_RDONLY | O_BINARY )"	13:4:180:220	5232848	2	True				
ANR	5232870	AssignmentExpression	"fd = open ( filename , O_RDONLY | O_BINARY )"		5232848	0		=			
ANR	5232871	Identifier	fd		5232848	0					
ANR	5232872	CallExpression	"open ( filename , O_RDONLY | O_BINARY )"		5232848	1					
ANR	5232873	Callee	open		5232848	0					
ANR	5232874	Identifier	open		5232848	0					
ANR	5232875	ArgumentList	filename		5232848	1					
ANR	5232876	Argument	filename		5232848	0					
ANR	5232877	Identifier	filename		5232848	0					
ANR	5232878	Argument	O_RDONLY | O_BINARY		5232848	1					
ANR	5232879	InclusiveOrExpression	O_RDONLY | O_BINARY		5232848	0		|			
ANR	5232880	Identifier	O_RDONLY		5232848	0					
ANR	5232881	Identifier	O_BINARY		5232848	1					
ANR	5232882	IfStatement	if ( fd < 0 )		5232848	3					
ANR	5232883	Condition	fd < 0	15:8:231:236	5232848	0	True				
ANR	5232884	RelationalExpression	fd < 0		5232848	0		<			
ANR	5232885	Identifier	fd		5232848	0					
ANR	5232886	PrimaryExpression	0		5232848	1					
ANR	5232887	CompoundStatement		11:16:141:141	5232848	1					
ANR	5232888	ExpressionStatement	perror ( filename )	17:8:250:266	5232848	0	True				
ANR	5232889	CallExpression	perror ( filename )		5232848	0					
ANR	5232890	Callee	perror		5232848	0					
ANR	5232891	Identifier	perror		5232848	0					
ANR	5232892	ArgumentList	filename		5232848	1					
ANR	5232893	Argument	filename		5232848	0					
ANR	5232894	Identifier	filename		5232848	0					
ANR	5232895	ReturnStatement	return - 1 ;	19:8:277:286	5232848	1	True				
ANR	5232896	UnaryOperationExpression	- 1		5232848	0					
ANR	5232897	UnaryOperator	-		5232848	0					
ANR	5232898	PrimaryExpression	1		5232848	1					
ANR	5232899	IfStatement	"if ( read ( fd , e_ident , sizeof ( e_ident ) ) != sizeof ( e_ident ) )"		5232848	4					
ANR	5232900	Condition	"read ( fd , e_ident , sizeof ( e_ident ) ) != sizeof ( e_ident )"	23:8:304:356	5232848	0	True				
ANR	5232901	EqualityExpression	"read ( fd , e_ident , sizeof ( e_ident ) ) != sizeof ( e_ident )"		5232848	0		!=			
ANR	5232902	CallExpression	"read ( fd , e_ident , sizeof ( e_ident ) )"		5232848	0					
ANR	5232903	Callee	read		5232848	0					
ANR	5232904	Identifier	read		5232848	0					
ANR	5232905	ArgumentList	fd		5232848	1					
ANR	5232906	Argument	fd		5232848	0					
ANR	5232907	Identifier	fd		5232848	0					
ANR	5232908	Argument	e_ident		5232848	1					
ANR	5232909	Identifier	e_ident		5232848	0					
ANR	5232910	Argument	sizeof ( e_ident )		5232848	2					
ANR	5232911	SizeofExpression	sizeof ( e_ident )		5232848	0					
ANR	5232912	Sizeof	sizeof		5232848	0					
ANR	5232913	SizeofOperand	e_ident		5232848	1					
ANR	5232914	SizeofExpression	sizeof ( e_ident )		5232848	1					
ANR	5232915	Sizeof	sizeof		5232848	0					
ANR	5232916	SizeofOperand	e_ident		5232848	1					
ANR	5232917	GotoStatement	goto fail ;	25:8:368:377	5232848	1	True				
ANR	5232918	Identifier	fail		5232848	0					
ANR	5232919	IfStatement	if ( e_ident [ 0 ] != ELFMAG0 || e_ident [ 1 ] != ELFMAG1 || e_ident [ 2 ] != ELFMAG2 || e_ident [ 3 ] != ELFMAG3 )		5232848	5					
ANR	5232920	Condition	e_ident [ 0 ] != ELFMAG0 || e_ident [ 1 ] != ELFMAG1 || e_ident [ 2 ] != ELFMAG2 || e_ident [ 3 ] != ELFMAG3	27:8:388:510	5232848	0	True				
ANR	5232921	OrExpression	e_ident [ 0 ] != ELFMAG0 || e_ident [ 1 ] != ELFMAG1 || e_ident [ 2 ] != ELFMAG2 || e_ident [ 3 ] != ELFMAG3		5232848	0		||			
ANR	5232922	EqualityExpression	e_ident [ 0 ] != ELFMAG0		5232848	0		!=			
ANR	5232923	ArrayIndexing	e_ident [ 0 ]		5232848	0					
ANR	5232924	Identifier	e_ident		5232848	0					
ANR	5232925	PrimaryExpression	0		5232848	1					
ANR	5232926	Identifier	ELFMAG0		5232848	1					
ANR	5232927	OrExpression	e_ident [ 1 ] != ELFMAG1 || e_ident [ 2 ] != ELFMAG2 || e_ident [ 3 ] != ELFMAG3		5232848	1		||			
ANR	5232928	EqualityExpression	e_ident [ 1 ] != ELFMAG1		5232848	0		!=			
ANR	5232929	ArrayIndexing	e_ident [ 1 ]		5232848	0					
ANR	5232930	Identifier	e_ident		5232848	0					
ANR	5232931	PrimaryExpression	1		5232848	1					
ANR	5232932	Identifier	ELFMAG1		5232848	1					
ANR	5232933	OrExpression	e_ident [ 2 ] != ELFMAG2 || e_ident [ 3 ] != ELFMAG3		5232848	1		||			
ANR	5232934	EqualityExpression	e_ident [ 2 ] != ELFMAG2		5232848	0		!=			
ANR	5232935	ArrayIndexing	e_ident [ 2 ]		5232848	0					
ANR	5232936	Identifier	e_ident		5232848	0					
ANR	5232937	PrimaryExpression	2		5232848	1					
ANR	5232938	Identifier	ELFMAG2		5232848	1					
ANR	5232939	EqualityExpression	e_ident [ 3 ] != ELFMAG3		5232848	1		!=			
ANR	5232940	ArrayIndexing	e_ident [ 3 ]		5232848	0					
ANR	5232941	Identifier	e_ident		5232848	0					
ANR	5232942	PrimaryExpression	3		5232848	1					
ANR	5232943	Identifier	ELFMAG3		5232848	1					
ANR	5232944	GotoStatement	goto fail ;	35:8:522:531	5232848	1	True				
ANR	5232945	Identifier	fail		5232848	0					
ANR	5232946	ExpressionStatement	data_order = ELFDATA2MSB	39:4:562:586	5232848	6	True				
ANR	5232947	AssignmentExpression	data_order = ELFDATA2MSB		5232848	0		=			
ANR	5232948	Identifier	data_order		5232848	0					
ANR	5232949	Identifier	ELFDATA2MSB		5232848	1					
ANR	5232950	ExpressionStatement	must_swab = data_order != e_ident [ EI_DATA ]	47:4:639:681	5232848	7	True				
ANR	5232951	AssignmentExpression	must_swab = data_order != e_ident [ EI_DATA ]		5232848	0		=			
ANR	5232952	Identifier	must_swab		5232848	0					
ANR	5232953	EqualityExpression	data_order != e_ident [ EI_DATA ]		5232848	1		!=			
ANR	5232954	Identifier	data_order		5232848	0					
ANR	5232955	ArrayIndexing	e_ident [ EI_DATA ]		5232848	1					
ANR	5232956	Identifier	e_ident		5232848	0					
ANR	5232957	Identifier	EI_DATA		5232848	1					
ANR	5232958	ExpressionStatement	"lseek ( fd , 0 , SEEK_SET )"	51:4:694:716	5232848	8	True				
ANR	5232959	CallExpression	"lseek ( fd , 0 , SEEK_SET )"		5232848	0					
ANR	5232960	Callee	lseek		5232848	0					
ANR	5232961	Identifier	lseek		5232848	0					
ANR	5232962	ArgumentList	fd		5232848	1					
ANR	5232963	Argument	fd		5232848	0					
ANR	5232964	Identifier	fd		5232848	0					
ANR	5232965	Argument	0		5232848	1					
ANR	5232966	PrimaryExpression	0		5232848	0					
ANR	5232967	Argument	SEEK_SET		5232848	2					
ANR	5232968	Identifier	SEEK_SET		5232848	0					
ANR	5232969	IfStatement	if ( e_ident [ EI_CLASS ] == ELFCLASS64 )		5232848	9					
ANR	5232970	Condition	e_ident [ EI_CLASS ] == ELFCLASS64	53:8:727:757	5232848	0	True				
ANR	5232971	EqualityExpression	e_ident [ EI_CLASS ] == ELFCLASS64		5232848	0		==			
ANR	5232972	ArrayIndexing	e_ident [ EI_CLASS ]		5232848	0					
ANR	5232973	Identifier	e_ident		5232848	0					
ANR	5232974	Identifier	EI_CLASS		5232848	1					
ANR	5232975	Identifier	ELFCLASS64		5232848	1					
ANR	5232976	CompoundStatement		49:41:662:662	5232848	1					
ANR	5232977	ExpressionStatement	"ret = load_elf64 ( fd , virt_to_phys_addend , must_swab , pentry )"	55:8:771:831	5232848	0	True				
ANR	5232978	AssignmentExpression	"ret = load_elf64 ( fd , virt_to_phys_addend , must_swab , pentry )"		5232848	0		=			
ANR	5232979	Identifier	ret		5232848	0					
ANR	5232980	CallExpression	"load_elf64 ( fd , virt_to_phys_addend , must_swab , pentry )"		5232848	1					
ANR	5232981	Callee	load_elf64		5232848	0					
ANR	5232982	Identifier	load_elf64		5232848	0					
ANR	5232983	ArgumentList	fd		5232848	1					
ANR	5232984	Argument	fd		5232848	0					
ANR	5232985	Identifier	fd		5232848	0					
ANR	5232986	Argument	virt_to_phys_addend		5232848	1					
ANR	5232987	Identifier	virt_to_phys_addend		5232848	0					
ANR	5232988	Argument	must_swab		5232848	2					
ANR	5232989	Identifier	must_swab		5232848	0					
ANR	5232990	Argument	pentry		5232848	3					
ANR	5232991	Identifier	pentry		5232848	0					
ANR	5232992	ElseStatement	else		5232848	0					
ANR	5232993	CompoundStatement		53:11:747:747	5232848	0					
ANR	5232994	ExpressionStatement	"ret = load_elf32 ( fd , virt_to_phys_addend , must_swab , pentry )"	59:8:856:916	5232848	0	True				
ANR	5232995	AssignmentExpression	"ret = load_elf32 ( fd , virt_to_phys_addend , must_swab , pentry )"		5232848	0		=			
ANR	5232996	Identifier	ret		5232848	0					
ANR	5232997	CallExpression	"load_elf32 ( fd , virt_to_phys_addend , must_swab , pentry )"		5232848	1					
ANR	5232998	Callee	load_elf32		5232848	0					
ANR	5232999	Identifier	load_elf32		5232848	0					
ANR	5233000	ArgumentList	fd		5232848	1					
ANR	5233001	Argument	fd		5232848	0					
ANR	5233002	Identifier	fd		5232848	0					
ANR	5233003	Argument	virt_to_phys_addend		5232848	1					
ANR	5233004	Identifier	virt_to_phys_addend		5232848	0					
ANR	5233005	Argument	must_swab		5232848	2					
ANR	5233006	Identifier	must_swab		5232848	0					
ANR	5233007	Argument	pentry		5232848	3					
ANR	5233008	Identifier	pentry		5232848	0					
ANR	5233009	ExpressionStatement	close ( fd )	65:4:932:941	5232848	10	True				
ANR	5233010	CallExpression	close ( fd )		5232848	0					
ANR	5233011	Callee	close		5232848	0					
ANR	5233012	Identifier	close		5232848	0					
ANR	5233013	ArgumentList	fd		5232848	1					
ANR	5233014	Argument	fd		5232848	0					
ANR	5233015	Identifier	fd		5232848	0					
ANR	5233016	ReturnStatement	return ret ;	67:4:948:958	5232848	11	True				
ANR	5233017	Identifier	ret		5232848	0					
ANR	5233018	Label	fail :	71:1:964:968	5232848	12	True				
ANR	5233019	Identifier	fail		5232848	0					
ANR	5233020	ExpressionStatement	close ( fd )	73:4:975:984	5232848	13	True				
ANR	5233021	CallExpression	close ( fd )		5232848	0					
ANR	5233022	Callee	close		5232848	0					
ANR	5233023	Identifier	close		5232848	0					
ANR	5233024	ArgumentList	fd		5232848	1					
ANR	5233025	Argument	fd		5232848	0					
ANR	5233026	Identifier	fd		5232848	0					
ANR	5233027	ReturnStatement	return - 1 ;	75:4:991:1000	5232848	14	True				
ANR	5233028	UnaryOperationExpression	- 1		5232848	0					
ANR	5233029	UnaryOperator	-		5232848	0					
ANR	5233030	PrimaryExpression	1		5232848	1					
ANR	5233031	ReturnType	int		5232848	1					
ANR	5233032	Identifier	load_elf		5232848	2					
ANR	5233033	ParameterList	"const char * filename , int64_t virt_to_phys_addend , uint64_t * pentry"		5232848	3					
ANR	5233034	Parameter	const char * filename	1:13:13:32	5232848	0	True				
ANR	5233035	ParameterType	const char *		5232848	0					
ANR	5233036	Identifier	filename		5232848	1					
ANR	5233037	Parameter	int64_t virt_to_phys_addend	1:35:35:61	5232848	1	True				
ANR	5233038	ParameterType	int64_t		5232848	0					
ANR	5233039	Identifier	virt_to_phys_addend		5232848	1					
ANR	5233040	Parameter	uint64_t * pentry	3:13:78:93	5232848	2	True				
ANR	5233041	ParameterType	uint64_t *		5232848	0					
ANR	5233042	Identifier	pentry		5232848	1					
ANR	5233043	CFGEntryNode	ENTRY		5232848		True				
ANR	5233044	CFGExitNode	EXIT		5232848		True				
ANR	5233045	Symbol	load_elf64		5232848						
ANR	5233046	Symbol	O_BINARY		5232848						
ANR	5233047	Symbol	* EI_CLASS		5232848						
ANR	5233048	Symbol	EI_DATA		5232848						
ANR	5233049	Symbol	ret		5232848						
ANR	5233050	Symbol	ELFMAG0		5232848						
ANR	5233051	Symbol	SEEK_SET		5232848						
ANR	5233052	Symbol	ELFMAG1		5232848						
ANR	5233053	Symbol	ELFMAG2		5232848						
ANR	5233054	Symbol	load_elf32		5232848						
ANR	5233055	Symbol	virt_to_phys_addend		5232848						
ANR	5233056	Symbol	pentry		5232848						
ANR	5233057	Symbol	read		5232848						
ANR	5233058	Symbol	ELFMAG3		5232848						
ANR	5233059	Symbol	ELFDATA2MSB		5232848						
ANR	5233060	Symbol	must_swab		5232848						
ANR	5233061	Symbol	* e_ident		5232848						
ANR	5233062	Symbol	data_order		5232848						
ANR	5233063	Symbol	ELFCLASS64		5232848						
ANR	5233064	Symbol	filename		5232848						
ANR	5233065	Symbol	O_RDONLY		5232848						
ANR	5233066	Symbol	* EI_DATA		5232848						
ANR	5233067	Symbol	EI_CLASS		5232848						
ANR	5233068	Symbol	fd		5232848						
ANR	5233069	Symbol	e_ident		5232848						
ANR	5233070	Symbol	open		5232848						
