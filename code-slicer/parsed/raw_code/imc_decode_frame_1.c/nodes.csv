command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4819302	File	/home/p4ultr4n/workplace/ReVeal/raw_code/imc_decode_frame_1.c								
ANR	4819303	Function	imc_decode_frame	1:0:0:1314							
ANR	4819304	FunctionDef	"imc_decode_frame (AVCodecContext * avctx , void * data , int * got_frame_ptr , AVPacket * avpkt)"		4819303	0					
ANR	4819305	CompoundStatement		5:0:130:1314	4819303	0					
ANR	4819306	IdentifierDeclStatement	AVFrame * frame = data ;	7:4:137:162	4819303	0	True				
ANR	4819307	IdentifierDecl	* frame = data		4819303	0					
ANR	4819308	IdentifierDeclType	AVFrame *		4819303	0					
ANR	4819309	Identifier	frame		4819303	1					
ANR	4819310	AssignmentExpression	* frame = data		4819303	2		=			
ANR	4819311	Identifier	data		4819303	0					
ANR	4819312	Identifier	data		4819303	1					
ANR	4819313	IdentifierDeclStatement	const uint8_t * buf = avpkt -> data ;	9:4:169:201	4819303	1	True				
ANR	4819314	IdentifierDecl	* buf = avpkt -> data		4819303	0					
ANR	4819315	IdentifierDeclType	const uint8_t *		4819303	0					
ANR	4819316	Identifier	buf		4819303	1					
ANR	4819317	AssignmentExpression	* buf = avpkt -> data		4819303	2		=			
ANR	4819318	Identifier	buf		4819303	0					
ANR	4819319	PtrMemberAccess	avpkt -> data		4819303	1					
ANR	4819320	Identifier	avpkt		4819303	0					
ANR	4819321	Identifier	data		4819303	1					
ANR	4819322	IdentifierDeclStatement	int buf_size = avpkt -> size ;	11:4:208:234	4819303	2	True				
ANR	4819323	IdentifierDecl	buf_size = avpkt -> size		4819303	0					
ANR	4819324	IdentifierDeclType	int		4819303	0					
ANR	4819325	Identifier	buf_size		4819303	1					
ANR	4819326	AssignmentExpression	buf_size = avpkt -> size		4819303	2		=			
ANR	4819327	Identifier	buf_size		4819303	0					
ANR	4819328	PtrMemberAccess	avpkt -> size		4819303	1					
ANR	4819329	Identifier	avpkt		4819303	0					
ANR	4819330	Identifier	size		4819303	1					
ANR	4819331	IdentifierDeclStatement	"int ret , i ;"	13:4:241:251	4819303	3	True				
ANR	4819332	IdentifierDecl	ret		4819303	0					
ANR	4819333	IdentifierDeclType	int		4819303	0					
ANR	4819334	Identifier	ret		4819303	1					
ANR	4819335	IdentifierDecl	i		4819303	1					
ANR	4819336	IdentifierDeclType	int		4819303	0					
ANR	4819337	Identifier	i		4819303	1					
ANR	4819338	IdentifierDeclStatement	IMCContext * q = avctx -> priv_data ;	17:4:260:292	4819303	4	True				
ANR	4819339	IdentifierDecl	* q = avctx -> priv_data		4819303	0					
ANR	4819340	IdentifierDeclType	IMCContext *		4819303	0					
ANR	4819341	Identifier	q		4819303	1					
ANR	4819342	AssignmentExpression	* q = avctx -> priv_data		4819303	2		=			
ANR	4819343	Identifier	q		4819303	0					
ANR	4819344	PtrMemberAccess	avctx -> priv_data		4819303	1					
ANR	4819345	Identifier	avctx		4819303	0					
ANR	4819346	Identifier	priv_data		4819303	1					
ANR	4819347	Statement	LOCAL_ALIGNED_16	21:4:301:316	4819303	5	True				
ANR	4819348	Statement	(	21:20:317:317	4819303	6	True				
ANR	4819349	Statement	uint16_t	21:21:318:325	4819303	7	True				
ANR	4819350	Statement	","	21:29:326:326	4819303	8	True				
ANR	4819351	Statement	buf16	21:31:328:332	4819303	9	True				
ANR	4819352	Statement	","	21:36:333:333	4819303	10	True				
ANR	4819353	Statement	[	21:38:335:335	4819303	11	True				
ANR	4819354	Statement	IMC_BLOCK_SIZE	21:39:336:349	4819303	12	True				
ANR	4819355	Statement	/	21:54:351:351	4819303	13	True				
ANR	4819356	Statement	2	21:56:353:353	4819303	14	True				
ANR	4819357	Statement	]	21:57:354:354	4819303	15	True				
ANR	4819358	Statement	)	21:58:355:355	4819303	16	True				
ANR	4819359	ExpressionStatement		21:59:356:356	4819303	17	True				
ANR	4819360	IfStatement	if ( buf_size < IMC_BLOCK_SIZE * avctx -> channels )		4819303	18					
ANR	4819361	Condition	buf_size < IMC_BLOCK_SIZE * avctx -> channels	25:8:369:411	4819303	0	True				
ANR	4819362	RelationalExpression	buf_size < IMC_BLOCK_SIZE * avctx -> channels		4819303	0		<			
ANR	4819363	Identifier	buf_size		4819303	0					
ANR	4819364	MultiplicativeExpression	IMC_BLOCK_SIZE * avctx -> channels		4819303	1		*			
ANR	4819365	Identifier	IMC_BLOCK_SIZE		4819303	0					
ANR	4819366	PtrMemberAccess	avctx -> channels		4819303	1					
ANR	4819367	Identifier	avctx		4819303	0					
ANR	4819368	Identifier	channels		4819303	1					
ANR	4819369	CompoundStatement		21:53:283:283	4819303	1					
ANR	4819370	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""frame too small!\\n"" )"	27:8:425:474	4819303	0	True				
ANR	4819371	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""frame too small!\\n"" )"		4819303	0					
ANR	4819372	Callee	av_log		4819303	0					
ANR	4819373	Identifier	av_log		4819303	0					
ANR	4819374	ArgumentList	avctx		4819303	1					
ANR	4819375	Argument	avctx		4819303	0					
ANR	4819376	Identifier	avctx		4819303	0					
ANR	4819377	Argument	AV_LOG_ERROR		4819303	1					
ANR	4819378	Identifier	AV_LOG_ERROR		4819303	0					
ANR	4819379	Argument	"""frame too small!\\n"""		4819303	2					
ANR	4819380	PrimaryExpression	"""frame too small!\\n"""		4819303	0					
ANR	4819381	ReturnStatement	return AVERROR_INVALIDDATA ;	29:8:485:511	4819303	1	True				
ANR	4819382	Identifier	AVERROR_INVALIDDATA		4819303	0					
ANR	4819383	ExpressionStatement	frame -> nb_samples = COEFFS	37:4:556:582	4819303	19	True				
ANR	4819384	AssignmentExpression	frame -> nb_samples = COEFFS		4819303	0		=			
ANR	4819385	PtrMemberAccess	frame -> nb_samples		4819303	0					
ANR	4819386	Identifier	frame		4819303	0					
ANR	4819387	Identifier	nb_samples		4819303	1					
ANR	4819388	Identifier	COEFFS		4819303	1					
ANR	4819389	IfStatement	"if ( ( ret = ff_get_buffer ( avctx , frame , 0 ) ) < 0 )"		4819303	20					
ANR	4819390	Condition	"( ret = ff_get_buffer ( avctx , frame , 0 ) ) < 0"	39:8:593:634	4819303	0	True				
ANR	4819391	RelationalExpression	"( ret = ff_get_buffer ( avctx , frame , 0 ) ) < 0"		4819303	0		<			
ANR	4819392	AssignmentExpression	"ret = ff_get_buffer ( avctx , frame , 0 )"		4819303	0		=			
ANR	4819393	Identifier	ret		4819303	0					
ANR	4819394	CallExpression	"ff_get_buffer ( avctx , frame , 0 )"		4819303	1					
ANR	4819395	Callee	ff_get_buffer		4819303	0					
ANR	4819396	Identifier	ff_get_buffer		4819303	0					
ANR	4819397	ArgumentList	avctx		4819303	1					
ANR	4819398	Argument	avctx		4819303	0					
ANR	4819399	Identifier	avctx		4819303	0					
ANR	4819400	Argument	frame		4819303	1					
ANR	4819401	Identifier	frame		4819303	0					
ANR	4819402	Argument	0		4819303	2					
ANR	4819403	PrimaryExpression	0		4819303	0					
ANR	4819404	PrimaryExpression	0		4819303	1					
ANR	4819405	ReturnStatement	return ret ;	41:8:646:656	4819303	1	True				
ANR	4819406	Identifier	ret		4819303	0					
ANR	4819407	ForStatement	for ( i = 0 ; i < avctx -> channels ; i ++ )		4819303	21					
ANR	4819408	ForInit	i = 0 ;	45:9:670:675	4819303	0	True				
ANR	4819409	AssignmentExpression	i = 0		4819303	0		=			
ANR	4819410	Identifier	i		4819303	0					
ANR	4819411	PrimaryExpression	0		4819303	1					
ANR	4819412	Condition	i < avctx -> channels	45:16:677:695	4819303	1	True				
ANR	4819413	RelationalExpression	i < avctx -> channels		4819303	0		<			
ANR	4819414	Identifier	i		4819303	0					
ANR	4819415	PtrMemberAccess	avctx -> channels		4819303	1					
ANR	4819416	Identifier	avctx		4819303	0					
ANR	4819417	Identifier	channels		4819303	1					
ANR	4819418	PostIncDecOperationExpression	i ++	45:37:698:700	4819303	2	True				
ANR	4819419	Identifier	i		4819303	0					
ANR	4819420	IncDec	++		4819303	1					
ANR	4819421	CompoundStatement		41:42:572:572	4819303	3					
ANR	4819422	ExpressionStatement	q -> out_samples = ( float * ) frame -> extended_data [ i ]	47:8:714:763	4819303	0	True				
ANR	4819423	AssignmentExpression	q -> out_samples = ( float * ) frame -> extended_data [ i ]		4819303	0		=			
ANR	4819424	PtrMemberAccess	q -> out_samples		4819303	0					
ANR	4819425	Identifier	q		4819303	0					
ANR	4819426	Identifier	out_samples		4819303	1					
ANR	4819427	CastExpression	( float * ) frame -> extended_data [ i ]		4819303	1					
ANR	4819428	CastTarget	float *		4819303	0					
ANR	4819429	ArrayIndexing	frame -> extended_data [ i ]		4819303	1					
ANR	4819430	PtrMemberAccess	frame -> extended_data		4819303	0					
ANR	4819431	Identifier	frame		4819303	0					
ANR	4819432	Identifier	extended_data		4819303	1					
ANR	4819433	Identifier	i		4819303	1					
ANR	4819434	ExpressionStatement	"q -> bdsp . bswap16_buf ( buf16 , ( const uint16_t * ) buf , IMC_BLOCK_SIZE / 2 )"	51:8:776:846	4819303	1	True				
ANR	4819435	CallExpression	"q -> bdsp . bswap16_buf ( buf16 , ( const uint16_t * ) buf , IMC_BLOCK_SIZE / 2 )"		4819303	0					
ANR	4819436	Callee	q -> bdsp . bswap16_buf		4819303	0					
ANR	4819437	MemberAccess	q -> bdsp . bswap16_buf		4819303	0					
ANR	4819438	PtrMemberAccess	q -> bdsp		4819303	0					
ANR	4819439	Identifier	q		4819303	0					
ANR	4819440	Identifier	bdsp		4819303	1					
ANR	4819441	Identifier	bswap16_buf		4819303	1					
ANR	4819442	ArgumentList	buf16		4819303	1					
ANR	4819443	Argument	buf16		4819303	0					
ANR	4819444	Identifier	buf16		4819303	0					
ANR	4819445	Argument	( const uint16_t * ) buf		4819303	1					
ANR	4819446	CastExpression	( const uint16_t * ) buf		4819303	0					
ANR	4819447	CastTarget	const uint16_t *		4819303	0					
ANR	4819448	Identifier	buf		4819303	1					
ANR	4819449	Argument	IMC_BLOCK_SIZE / 2		4819303	2					
ANR	4819450	MultiplicativeExpression	IMC_BLOCK_SIZE / 2		4819303	0		/			
ANR	4819451	Identifier	IMC_BLOCK_SIZE		4819303	0					
ANR	4819452	PrimaryExpression	2		4819303	1					
ANR	4819453	ExpressionStatement	"init_get_bits ( & q -> gb , ( const uint8_t * ) buf16 , IMC_BLOCK_SIZE * 8 )"	55:8:859:923	4819303	2	True				
ANR	4819454	CallExpression	"init_get_bits ( & q -> gb , ( const uint8_t * ) buf16 , IMC_BLOCK_SIZE * 8 )"		4819303	0					
ANR	4819455	Callee	init_get_bits		4819303	0					
ANR	4819456	Identifier	init_get_bits		4819303	0					
ANR	4819457	ArgumentList	& q -> gb		4819303	1					
ANR	4819458	Argument	& q -> gb		4819303	0					
ANR	4819459	UnaryOperationExpression	& q -> gb		4819303	0					
ANR	4819460	UnaryOperator	&		4819303	0					
ANR	4819461	PtrMemberAccess	q -> gb		4819303	1					
ANR	4819462	Identifier	q		4819303	0					
ANR	4819463	Identifier	gb		4819303	1					
ANR	4819464	Argument	( const uint8_t * ) buf16		4819303	1					
ANR	4819465	CastExpression	( const uint8_t * ) buf16		4819303	0					
ANR	4819466	CastTarget	const uint8_t *		4819303	0					
ANR	4819467	Identifier	buf16		4819303	1					
ANR	4819468	Argument	IMC_BLOCK_SIZE * 8		4819303	2					
ANR	4819469	MultiplicativeExpression	IMC_BLOCK_SIZE * 8		4819303	0		*			
ANR	4819470	Identifier	IMC_BLOCK_SIZE		4819303	0					
ANR	4819471	PrimaryExpression	8		4819303	1					
ANR	4819472	ExpressionStatement	buf += IMC_BLOCK_SIZE	59:8:936:957	4819303	3	True				
ANR	4819473	AssignmentExpression	buf += IMC_BLOCK_SIZE		4819303	0		+=			
ANR	4819474	Identifier	buf		4819303	0					
ANR	4819475	Identifier	IMC_BLOCK_SIZE		4819303	1					
ANR	4819476	IfStatement	"if ( ( ret = imc_decode_block ( avctx , q , i ) ) < 0 )"		4819303	4					
ANR	4819477	Condition	"( ret = imc_decode_block ( avctx , q , i ) ) < 0"	63:12:974:1014	4819303	0	True				
ANR	4819478	RelationalExpression	"( ret = imc_decode_block ( avctx , q , i ) ) < 0"		4819303	0		<			
ANR	4819479	AssignmentExpression	"ret = imc_decode_block ( avctx , q , i )"		4819303	0		=			
ANR	4819480	Identifier	ret		4819303	0					
ANR	4819481	CallExpression	"imc_decode_block ( avctx , q , i )"		4819303	1					
ANR	4819482	Callee	imc_decode_block		4819303	0					
ANR	4819483	Identifier	imc_decode_block		4819303	0					
ANR	4819484	ArgumentList	avctx		4819303	1					
ANR	4819485	Argument	avctx		4819303	0					
ANR	4819486	Identifier	avctx		4819303	0					
ANR	4819487	Argument	q		4819303	1					
ANR	4819488	Identifier	q		4819303	0					
ANR	4819489	Argument	i		4819303	2					
ANR	4819490	Identifier	i		4819303	0					
ANR	4819491	PrimaryExpression	0		4819303	1					
ANR	4819492	ReturnStatement	return ret ;	65:12:1030:1040	4819303	1	True				
ANR	4819493	Identifier	ret		4819303	0					
ANR	4819494	IfStatement	if ( avctx -> channels == 2 )		4819303	22					
ANR	4819495	Condition	avctx -> channels == 2	71:8:1060:1079	4819303	0	True				
ANR	4819496	EqualityExpression	avctx -> channels == 2		4819303	0		==			
ANR	4819497	PtrMemberAccess	avctx -> channels		4819303	0					
ANR	4819498	Identifier	avctx		4819303	0					
ANR	4819499	Identifier	channels		4819303	1					
ANR	4819500	PrimaryExpression	2		4819303	1					
ANR	4819501	CompoundStatement		67:30:951:951	4819303	1					
ANR	4819502	ExpressionStatement	"q -> fdsp . butterflies_float ( ( float * ) frame -> extended_data [ 0 ] , ( float * ) frame -> extended_data [ 1 ] , COEFFS )"	73:8:1093:1229	4819303	0	True				
ANR	4819503	CallExpression	"q -> fdsp . butterflies_float ( ( float * ) frame -> extended_data [ 0 ] , ( float * ) frame -> extended_data [ 1 ] , COEFFS )"		4819303	0					
ANR	4819504	Callee	q -> fdsp . butterflies_float		4819303	0					
ANR	4819505	MemberAccess	q -> fdsp . butterflies_float		4819303	0					
ANR	4819506	PtrMemberAccess	q -> fdsp		4819303	0					
ANR	4819507	Identifier	q		4819303	0					
ANR	4819508	Identifier	fdsp		4819303	1					
ANR	4819509	Identifier	butterflies_float		4819303	1					
ANR	4819510	ArgumentList	( float * ) frame -> extended_data [ 0 ]		4819303	1					
ANR	4819511	Argument	( float * ) frame -> extended_data [ 0 ]		4819303	0					
ANR	4819512	CastExpression	( float * ) frame -> extended_data [ 0 ]		4819303	0					
ANR	4819513	CastTarget	float *		4819303	0					
ANR	4819514	ArrayIndexing	frame -> extended_data [ 0 ]		4819303	1					
ANR	4819515	PtrMemberAccess	frame -> extended_data		4819303	0					
ANR	4819516	Identifier	frame		4819303	0					
ANR	4819517	Identifier	extended_data		4819303	1					
ANR	4819518	PrimaryExpression	0		4819303	1					
ANR	4819519	Argument	( float * ) frame -> extended_data [ 1 ]		4819303	1					
ANR	4819520	CastExpression	( float * ) frame -> extended_data [ 1 ]		4819303	0					
ANR	4819521	CastTarget	float *		4819303	0					
ANR	4819522	ArrayIndexing	frame -> extended_data [ 1 ]		4819303	1					
ANR	4819523	PtrMemberAccess	frame -> extended_data		4819303	0					
ANR	4819524	Identifier	frame		4819303	0					
ANR	4819525	Identifier	extended_data		4819303	1					
ANR	4819526	PrimaryExpression	1		4819303	1					
ANR	4819527	Argument	COEFFS		4819303	2					
ANR	4819528	Identifier	COEFFS		4819303	0					
ANR	4819529	ExpressionStatement	* got_frame_ptr = 1	81:4:1245:1263	4819303	23	True				
ANR	4819530	AssignmentExpression	* got_frame_ptr = 1		4819303	0		=			
ANR	4819531	UnaryOperationExpression	* got_frame_ptr		4819303	0					
ANR	4819532	UnaryOperator	*		4819303	0					
ANR	4819533	Identifier	got_frame_ptr		4819303	1					
ANR	4819534	PrimaryExpression	1		4819303	1					
ANR	4819535	ReturnStatement	return IMC_BLOCK_SIZE * avctx -> channels ;	85:4:1272:1311	4819303	24	True				
ANR	4819536	MultiplicativeExpression	IMC_BLOCK_SIZE * avctx -> channels		4819303	0		*			
ANR	4819537	Identifier	IMC_BLOCK_SIZE		4819303	0					
ANR	4819538	PtrMemberAccess	avctx -> channels		4819303	1					
ANR	4819539	Identifier	avctx		4819303	0					
ANR	4819540	Identifier	channels		4819303	1					
ANR	4819541	ReturnType	static int		4819303	1					
ANR	4819542	Identifier	imc_decode_frame		4819303	2					
ANR	4819543	ParameterList	"AVCodecContext * avctx , void * data , int * got_frame_ptr , AVPacket * avpkt"		4819303	3					
ANR	4819544	Parameter	AVCodecContext * avctx	1:28:28:48	4819303	0	True				
ANR	4819545	ParameterType	AVCodecContext *		4819303	0					
ANR	4819546	Identifier	avctx		4819303	1					
ANR	4819547	Parameter	void * data	1:51:51:60	4819303	1	True				
ANR	4819548	ParameterType	void *		4819303	0					
ANR	4819549	Identifier	data		4819303	1					
ANR	4819550	Parameter	int * got_frame_ptr	3:28:92:109	4819303	2	True				
ANR	4819551	ParameterType	int *		4819303	0					
ANR	4819552	Identifier	got_frame_ptr		4819303	1					
ANR	4819553	Parameter	AVPacket * avpkt	3:48:112:126	4819303	3	True				
ANR	4819554	ParameterType	AVPacket *		4819303	0					
ANR	4819555	Identifier	avpkt		4819303	1					
ANR	4819556	CFGEntryNode	ENTRY		4819303		True				
ANR	4819557	CFGExitNode	EXIT		4819303		True				
ANR	4819558	Symbol	buf16		4819303						
ANR	4819559	Symbol	data		4819303						
ANR	4819560	Symbol	* frame		4819303						
ANR	4819561	Symbol	q -> out_samples		4819303						
ANR	4819562	Symbol	got_frame_ptr		4819303						
ANR	4819563	Symbol	avpkt		4819303						
ANR	4819564	Symbol	avctx -> channels		4819303						
ANR	4819565	Symbol	* * frame		4819303						
ANR	4819566	Symbol	ff_get_buffer		4819303						
ANR	4819567	Symbol	COEFFS		4819303						
ANR	4819568	Symbol	avpkt -> size		4819303						
ANR	4819569	Symbol	avctx		4819303						
ANR	4819570	Symbol	* frame -> extended_data		4819303						
ANR	4819571	Symbol	ret		4819303						
ANR	4819572	Symbol	* avpkt		4819303						
ANR	4819573	Symbol	& q -> gb		4819303						
ANR	4819574	Symbol	frame -> nb_samples		4819303						
ANR	4819575	Symbol	AV_LOG_ERROR		4819303						
ANR	4819576	Symbol	buf_size		4819303						
ANR	4819577	Symbol	* got_frame_ptr		4819303						
ANR	4819578	Symbol	i		4819303						
ANR	4819579	Symbol	imc_decode_block		4819303						
ANR	4819580	Symbol	q -> fdsp		4819303						
ANR	4819581	Symbol	avctx -> priv_data		4819303						
ANR	4819582	Symbol	IMC_BLOCK_SIZE		4819303						
ANR	4819583	Symbol	q -> bdsp		4819303						
ANR	4819584	Symbol	q		4819303						
ANR	4819585	Symbol	buf		4819303						
ANR	4819586	Symbol	* avctx		4819303						
ANR	4819587	Symbol	* i		4819303						
ANR	4819588	Symbol	frame -> extended_data		4819303						
ANR	4819589	Symbol	AVERROR_INVALIDDATA		4819303						
ANR	4819590	Symbol	avpkt -> data		4819303						
ANR	4819591	Symbol	* q		4819303						
ANR	4819592	Symbol	frame		4819303						
