command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	7004706	File	/home/p4ultr4n/workplace/ReVeal/raw_code/qemu_opts_print_02_0.c								
ANR	7004707	Function	qemu_opts_print	1:0:0:887							
ANR	7004708	FunctionDef	qemu_opts_print (QemuOpts * opts)		7004707	0					
ANR	7004709	CompoundStatement		3:0:38:887	7004707	0					
ANR	7004710	IdentifierDeclStatement	QemuOpt * opt ;	5:4:45:57	7004707	0	True				
ANR	7004711	IdentifierDecl	* opt		7004707	0					
ANR	7004712	IdentifierDeclType	QemuOpt *		7004707	0					
ANR	7004713	Identifier	opt		7004707	1					
ANR	7004714	IdentifierDeclStatement	QemuOptDesc * desc = opts -> list -> desc ;	7:4:64:100	7004707	1	True				
ANR	7004715	IdentifierDecl	* desc = opts -> list -> desc		7004707	0					
ANR	7004716	IdentifierDeclType	QemuOptDesc *		7004707	0					
ANR	7004717	Identifier	desc		7004707	1					
ANR	7004718	AssignmentExpression	* desc = opts -> list -> desc		7004707	2		=			
ANR	7004719	Identifier	desc		7004707	0					
ANR	7004720	PtrMemberAccess	opts -> list -> desc		7004707	1					
ANR	7004721	PtrMemberAccess	opts -> list		7004707	0					
ANR	7004722	Identifier	opts		7004707	0					
ANR	7004723	Identifier	list		7004707	1					
ANR	7004724	Identifier	desc		7004707	1					
ANR	7004725	IfStatement	if ( desc [ 0 ] . name == NULL )		7004707	2					
ANR	7004726	Condition	desc [ 0 ] . name == NULL	11:8:113:132	7004707	0	True				
ANR	7004727	EqualityExpression	desc [ 0 ] . name == NULL		7004707	0		==			
ANR	7004728	MemberAccess	desc [ 0 ] . name		7004707	0					
ANR	7004729	ArrayIndexing	desc [ 0 ]		7004707	0					
ANR	7004730	Identifier	desc		7004707	0					
ANR	7004731	PrimaryExpression	0		7004707	1					
ANR	7004732	Identifier	name		7004707	1					
ANR	7004733	Identifier	NULL		7004707	1					
ANR	7004734	CompoundStatement		9:30:96:96	7004707	1					
ANR	7004735	Statement	QTAILQ_FOREACH	13:8:146:159	7004707	0	True				
ANR	7004736	Statement	(	13:22:160:160	7004707	1	True				
ANR	7004737	Statement	opt	13:23:161:163	7004707	2	True				
ANR	7004738	Statement	","	13:26:164:164	7004707	3	True				
ANR	7004739	Statement	&	13:28:166:166	7004707	4	True				
ANR	7004740	Statement	opts	13:29:167:170	7004707	5	True				
ANR	7004741	Statement	->	13:33:171:172	7004707	6	True				
ANR	7004742	Statement	head	13:35:173:176	7004707	7	True				
ANR	7004743	Statement	","	13:39:177:177	7004707	8	True				
ANR	7004744	Statement	next	13:41:179:182	7004707	9	True				
ANR	7004745	Statement	)	13:45:183:183	7004707	10	True				
ANR	7004746	CompoundStatement		11:47:146:146	7004707	11					
ANR	7004747	ExpressionStatement	"printf ( ""%s=\\""%s\\"" "" , opt -> name , opt -> str )"	15:12:200:241	7004707	0	True				
ANR	7004748	CallExpression	"printf ( ""%s=\\""%s\\"" "" , opt -> name , opt -> str )"		7004707	0					
ANR	7004749	Callee	printf		7004707	0					
ANR	7004750	Identifier	printf		7004707	0					
ANR	7004751	ArgumentList	"""%s=\\""%s\\"" """		7004707	1					
ANR	7004752	Argument	"""%s=\\""%s\\"" """		7004707	0					
ANR	7004753	PrimaryExpression	"""%s=\\""%s\\"" """		7004707	0					
ANR	7004754	Argument	opt -> name		7004707	1					
ANR	7004755	PtrMemberAccess	opt -> name		7004707	0					
ANR	7004756	Identifier	opt		7004707	0					
ANR	7004757	Identifier	name		7004707	1					
ANR	7004758	Argument	opt -> str		7004707	2					
ANR	7004759	PtrMemberAccess	opt -> str		7004707	0					
ANR	7004760	Identifier	opt		7004707	0					
ANR	7004761	Identifier	str		7004707	1					
ANR	7004762	ReturnStatement	return ;	19:8:263:269	7004707	12	True				
ANR	7004763	ForStatement	for ( ; desc && desc -> name ; desc ++ )		7004707	3					
ANR	7004764	Condition	desc && desc -> name	23:11:290:307	7004707	0	True				
ANR	7004765	AndExpression	desc && desc -> name		7004707	0		&&			
ANR	7004766	Identifier	desc		7004707	0					
ANR	7004767	PtrMemberAccess	desc -> name		7004707	1					
ANR	7004768	Identifier	desc		7004707	0					
ANR	7004769	Identifier	name		7004707	1					
ANR	7004770	PostIncDecOperationExpression	desc ++	23:31:310:315	7004707	1	True				
ANR	7004771	Identifier	desc		7004707	0					
ANR	7004772	IncDec	++		7004707	1					
ANR	7004773	CompoundStatement		25:8:318:364	7004707	2					
ANR	7004774	IdentifierDeclStatement	const char * value ;	25:8:329:346	7004707	0	True				
ANR	7004775	IdentifierDecl	* value		7004707	0					
ANR	7004776	IdentifierDeclType	const char *		7004707	0					
ANR	7004777	Identifier	value		7004707	1					
ANR	7004778	IdentifierDeclStatement	"QemuOpt * opt = qemu_opt_find ( opts , desc -> name ) ;"	27:8:357:403	7004707	1	True				
ANR	7004779	IdentifierDecl	"* opt = qemu_opt_find ( opts , desc -> name )"		7004707	0					
ANR	7004780	IdentifierDeclType	QemuOpt *		7004707	0					
ANR	7004781	Identifier	opt		7004707	1					
ANR	7004782	AssignmentExpression	"* opt = qemu_opt_find ( opts , desc -> name )"		7004707	2		=			
ANR	7004783	Identifier	opt		7004707	0					
ANR	7004784	CallExpression	"qemu_opt_find ( opts , desc -> name )"		7004707	1					
ANR	7004785	Callee	qemu_opt_find		7004707	0					
ANR	7004786	Identifier	qemu_opt_find		7004707	0					
ANR	7004787	ArgumentList	opts		7004707	1					
ANR	7004788	Argument	opts		7004707	0					
ANR	7004789	Identifier	opts		7004707	0					
ANR	7004790	Argument	desc -> name		7004707	1					
ANR	7004791	PtrMemberAccess	desc -> name		7004707	0					
ANR	7004792	Identifier	desc		7004707	0					
ANR	7004793	Identifier	name		7004707	1					
ANR	7004794	ExpressionStatement	value = opt ? opt -> str : desc -> def_value_str	31:8:416:460	7004707	2	True				
ANR	7004795	AssignmentExpression	value = opt ? opt -> str : desc -> def_value_str		7004707	0		=			
ANR	7004796	Identifier	value		7004707	0					
ANR	7004797	ConditionalExpression	opt ? opt -> str : desc -> def_value_str		7004707	1					
ANR	7004798	Condition	opt		7004707	0					
ANR	7004799	Identifier	opt		7004707	0					
ANR	7004800	PtrMemberAccess	opt -> str		7004707	1					
ANR	7004801	Identifier	opt		7004707	0					
ANR	7004802	Identifier	str		7004707	1					
ANR	7004803	PtrMemberAccess	desc -> def_value_str		7004707	2					
ANR	7004804	Identifier	desc		7004707	0					
ANR	7004805	Identifier	def_value_str		7004707	1					
ANR	7004806	IfStatement	if ( ! value )		7004707	3					
ANR	7004807	Condition	! value	33:12:475:480	7004707	0	True				
ANR	7004808	UnaryOperationExpression	! value		7004707	0					
ANR	7004809	UnaryOperator	!		7004707	0					
ANR	7004810	Identifier	value		7004707	1					
ANR	7004811	CompoundStatement		31:20:444:444	7004707	1					
ANR	7004812	ContinueStatement	continue ;	35:12:498:506	7004707	0	True				
ANR	7004813	IfStatement	if ( desc -> type == QEMU_OPT_STRING )		7004707	4					
ANR	7004814	Condition	desc -> type == QEMU_OPT_STRING	39:12:532:560	7004707	0	True				
ANR	7004815	EqualityExpression	desc -> type == QEMU_OPT_STRING		7004707	0		==			
ANR	7004816	PtrMemberAccess	desc -> type		7004707	0					
ANR	7004817	Identifier	desc		7004707	0					
ANR	7004818	Identifier	type		7004707	1					
ANR	7004819	Identifier	QEMU_OPT_STRING		7004707	1					
ANR	7004820	CompoundStatement		37:43:524:524	7004707	1					
ANR	7004821	ExpressionStatement	"printf ( ""%s='%s' "" , desc -> name , value )"	41:12:578:615	7004707	0	True				
ANR	7004822	CallExpression	"printf ( ""%s='%s' "" , desc -> name , value )"		7004707	0					
ANR	7004823	Callee	printf		7004707	0					
ANR	7004824	Identifier	printf		7004707	0					
ANR	7004825	ArgumentList	"""%s='%s' """		7004707	1					
ANR	7004826	Argument	"""%s='%s' """		7004707	0					
ANR	7004827	PrimaryExpression	"""%s='%s' """		7004707	0					
ANR	7004828	Argument	desc -> name		7004707	1					
ANR	7004829	PtrMemberAccess	desc -> name		7004707	0					
ANR	7004830	Identifier	desc		7004707	0					
ANR	7004831	Identifier	name		7004707	1					
ANR	7004832	Argument	value		7004707	2					
ANR	7004833	Identifier	value		7004707	0					
ANR	7004834	ElseStatement	else		7004707	0					
ANR	7004835	IfStatement	if ( ( desc -> type == QEMU_OPT_SIZE || desc -> type == QEMU_OPT_NUMBER ) && opt )		7004707	0					
ANR	7004836	Condition	( desc -> type == QEMU_OPT_SIZE || desc -> type == QEMU_OPT_NUMBER ) && opt	43:19:637:726	7004707	0	True				
ANR	7004837	AndExpression	( desc -> type == QEMU_OPT_SIZE || desc -> type == QEMU_OPT_NUMBER ) && opt		7004707	0		&&			
ANR	7004838	OrExpression	desc -> type == QEMU_OPT_SIZE || desc -> type == QEMU_OPT_NUMBER		7004707	0		||			
ANR	7004839	EqualityExpression	desc -> type == QEMU_OPT_SIZE		7004707	0		==			
ANR	7004840	PtrMemberAccess	desc -> type		7004707	0					
ANR	7004841	Identifier	desc		7004707	0					
ANR	7004842	Identifier	type		7004707	1					
ANR	7004843	Identifier	QEMU_OPT_SIZE		7004707	1					
ANR	7004844	EqualityExpression	desc -> type == QEMU_OPT_NUMBER		7004707	1		==			
ANR	7004845	PtrMemberAccess	desc -> type		7004707	0					
ANR	7004846	Identifier	desc		7004707	0					
ANR	7004847	Identifier	type		7004707	1					
ANR	7004848	Identifier	QEMU_OPT_NUMBER		7004707	1					
ANR	7004849	Identifier	opt		7004707	1					
ANR	7004850	CompoundStatement		43:59:690:690	7004707	1					
ANR	7004851	Statement	printf	47:12:744:749	7004707	0	True				
ANR	7004852	Statement	(	47:18:750:750	7004707	1	True				
ANR	7004853	Statement	"""%s=%"""	47:19:751:756	7004707	2	True				
ANR	7004854	Statement	PRId64	47:26:758:763	7004707	3	True				
ANR	7004855	Statement	""" """	47:33:765:767	7004707	4	True				
ANR	7004856	Statement	","	47:36:768:768	7004707	5	True				
ANR	7004857	Statement	desc	47:38:770:773	7004707	6	True				
ANR	7004858	Statement	->	47:42:774:775	7004707	7	True				
ANR	7004859	Statement	name	47:44:776:779	7004707	8	True				
ANR	7004860	Statement	","	47:48:780:780	7004707	9	True				
ANR	7004861	Statement	opt	47:50:782:784	7004707	10	True				
ANR	7004862	Statement	->	47:53:785:786	7004707	11	True				
ANR	7004863	Statement	value	47:55:787:791	7004707	12	True				
ANR	7004864	Statement	.	47:60:792:792	7004707	13	True				
ANR	7004865	Statement	uint	47:61:793:796	7004707	14	True				
ANR	7004866	Statement	)	47:65:797:797	7004707	15	True				
ANR	7004867	ExpressionStatement		47:66:798:798	7004707	16	True				
ANR	7004868	ElseStatement	else		7004707	0					
ANR	7004869	CompoundStatement		47:15:777:777	7004707	0					
ANR	7004870	ExpressionStatement	"printf ( ""%s=%s "" , desc -> name , value )"	51:12:831:866	7004707	0	True				
ANR	7004871	CallExpression	"printf ( ""%s=%s "" , desc -> name , value )"		7004707	0					
ANR	7004872	Callee	printf		7004707	0					
ANR	7004873	Identifier	printf		7004707	0					
ANR	7004874	ArgumentList	"""%s=%s """		7004707	1					
ANR	7004875	Argument	"""%s=%s """		7004707	0					
ANR	7004876	PrimaryExpression	"""%s=%s """		7004707	0					
ANR	7004877	Argument	desc -> name		7004707	1					
ANR	7004878	PtrMemberAccess	desc -> name		7004707	0					
ANR	7004879	Identifier	desc		7004707	0					
ANR	7004880	Identifier	name		7004707	1					
ANR	7004881	Argument	value		7004707	2					
ANR	7004882	Identifier	value		7004707	0					
ANR	7004883	ReturnType	void		7004707	1					
ANR	7004884	Identifier	qemu_opts_print		7004707	2					
ANR	7004885	ParameterList	QemuOpts * opts		7004707	3					
ANR	7004886	Parameter	QemuOpts * opts	1:21:21:34	7004707	0	True				
ANR	7004887	ParameterType	QemuOpts *		7004707	0					
ANR	7004888	Identifier	opts		7004707	1					
ANR	7004889	CFGEntryNode	ENTRY		7004707		True				
ANR	7004890	CFGExitNode	EXIT		7004707		True				
ANR	7004891	Symbol	QEMU_OPT_SIZE		7004707						
ANR	7004892	Symbol	NULL		7004707						
ANR	7004893	Symbol	opt -> name		7004707						
ANR	7004894	Symbol	opts -> list -> desc		7004707						
ANR	7004895	Symbol	desc -> type		7004707						
ANR	7004896	Symbol	opt		7004707						
ANR	7004897	Symbol	desc [ 0 ] . name		7004707						
ANR	7004898	Symbol	opt -> str		7004707						
ANR	7004899	Symbol	qemu_opt_find		7004707						
ANR	7004900	Symbol	opts		7004707						
ANR	7004901	Symbol	* opts		7004707						
ANR	7004902	Symbol	* * opts		7004707						
ANR	7004903	Symbol	opts -> list		7004707						
ANR	7004904	Symbol	desc -> def_value_str		7004707						
ANR	7004905	Symbol	* desc		7004707						
ANR	7004906	Symbol	QEMU_OPT_NUMBER		7004707						
ANR	7004907	Symbol	* opts -> list		7004707						
ANR	7004908	Symbol	* opt		7004707						
ANR	7004909	Symbol	value		7004707						
ANR	7004910	Symbol	QEMU_OPT_STRING		7004707						
ANR	7004911	Symbol	desc		7004707						
ANR	7004912	Symbol	desc -> name		7004707						
