command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6566755	File	/home/p4ultr4n/workplace/ReVeal/raw_code/postcopy_ram_enable_notify_0.c								
ANR	6566756	Function	postcopy_ram_enable_notify	1:0:0:1639							
ANR	6566757	FunctionDef	postcopy_ram_enable_notify (MigrationIncomingState * mis)		6566756	0					
ANR	6566758	CompoundStatement		3:0:61:1639	6566756	0					
ANR	6566759	ExpressionStatement	"mis -> userfault_fd = syscall ( __NR_userfaultfd , O_CLOEXEC | O_NONBLOCK )"	7:4:128:197	6566756	0	True				
ANR	6566760	AssignmentExpression	"mis -> userfault_fd = syscall ( __NR_userfaultfd , O_CLOEXEC | O_NONBLOCK )"		6566756	0		=			
ANR	6566761	PtrMemberAccess	mis -> userfault_fd		6566756	0					
ANR	6566762	Identifier	mis		6566756	0					
ANR	6566763	Identifier	userfault_fd		6566756	1					
ANR	6566764	CallExpression	"syscall ( __NR_userfaultfd , O_CLOEXEC | O_NONBLOCK )"		6566756	1					
ANR	6566765	Callee	syscall		6566756	0					
ANR	6566766	Identifier	syscall		6566756	0					
ANR	6566767	ArgumentList	__NR_userfaultfd		6566756	1					
ANR	6566768	Argument	__NR_userfaultfd		6566756	0					
ANR	6566769	Identifier	__NR_userfaultfd		6566756	0					
ANR	6566770	Argument	O_CLOEXEC | O_NONBLOCK		6566756	1					
ANR	6566771	InclusiveOrExpression	O_CLOEXEC | O_NONBLOCK		6566756	0		|			
ANR	6566772	Identifier	O_CLOEXEC		6566756	0					
ANR	6566773	Identifier	O_NONBLOCK		6566756	1					
ANR	6566774	IfStatement	if ( mis -> userfault_fd == - 1 )		6566756	1					
ANR	6566775	Condition	mis -> userfault_fd == - 1	9:8:208:230	6566756	0	True				
ANR	6566776	EqualityExpression	mis -> userfault_fd == - 1		6566756	0		==			
ANR	6566777	PtrMemberAccess	mis -> userfault_fd		6566756	0					
ANR	6566778	Identifier	mis		6566756	0					
ANR	6566779	Identifier	userfault_fd		6566756	1					
ANR	6566780	UnaryOperationExpression	- 1		6566756	1					
ANR	6566781	UnaryOperator	-		6566756	0					
ANR	6566782	PrimaryExpression	1		6566756	1					
ANR	6566783	CompoundStatement		7:33:171:171	6566756	1					
ANR	6566784	ExpressionStatement	"error_report ( ""%s: Failed to open userfault fd: %s"" , __func__ , strerror ( errno ) )"	11:8:244:344	6566756	0	True				
ANR	6566785	CallExpression	"error_report ( ""%s: Failed to open userfault fd: %s"" , __func__ , strerror ( errno ) )"		6566756	0					
ANR	6566786	Callee	error_report		6566756	0					
ANR	6566787	Identifier	error_report		6566756	0					
ANR	6566788	ArgumentList	"""%s: Failed to open userfault fd: %s"""		6566756	1					
ANR	6566789	Argument	"""%s: Failed to open userfault fd: %s"""		6566756	0					
ANR	6566790	PrimaryExpression	"""%s: Failed to open userfault fd: %s"""		6566756	0					
ANR	6566791	Argument	__func__		6566756	1					
ANR	6566792	Identifier	__func__		6566756	0					
ANR	6566793	Argument	strerror ( errno )		6566756	2					
ANR	6566794	CallExpression	strerror ( errno )		6566756	0					
ANR	6566795	Callee	strerror		6566756	0					
ANR	6566796	Identifier	strerror		6566756	0					
ANR	6566797	ArgumentList	errno		6566756	1					
ANR	6566798	Argument	errno		6566756	0					
ANR	6566799	Identifier	errno		6566756	0					
ANR	6566800	ReturnStatement	return - 1 ;	15:8:355:364	6566756	1	True				
ANR	6566801	UnaryOperationExpression	- 1		6566756	0					
ANR	6566802	UnaryOperator	-		6566756	0					
ANR	6566803	PrimaryExpression	1		6566756	1					
ANR	6566804	IfStatement	if ( ! ufd_version_check ( mis -> userfault_fd ) )		6566756	2					
ANR	6566805	Condition	! ufd_version_check ( mis -> userfault_fd )	29:8:530:566	6566756	0	True				
ANR	6566806	UnaryOperationExpression	! ufd_version_check ( mis -> userfault_fd )		6566756	0					
ANR	6566807	UnaryOperator	!		6566756	0					
ANR	6566808	CallExpression	ufd_version_check ( mis -> userfault_fd )		6566756	1					
ANR	6566809	Callee	ufd_version_check		6566756	0					
ANR	6566810	Identifier	ufd_version_check		6566756	0					
ANR	6566811	ArgumentList	mis -> userfault_fd		6566756	1					
ANR	6566812	Argument	mis -> userfault_fd		6566756	0					
ANR	6566813	PtrMemberAccess	mis -> userfault_fd		6566756	0					
ANR	6566814	Identifier	mis		6566756	0					
ANR	6566815	Identifier	userfault_fd		6566756	1					
ANR	6566816	CompoundStatement		27:47:507:507	6566756	1					
ANR	6566817	ReturnStatement	return - 1 ;	31:8:580:589	6566756	0	True				
ANR	6566818	UnaryOperationExpression	- 1		6566756	0					
ANR	6566819	UnaryOperator	-		6566756	0					
ANR	6566820	PrimaryExpression	1		6566756	1					
ANR	6566821	ExpressionStatement	"mis -> userfault_quit_fd = eventfd ( 0 , EFD_CLOEXEC )"	39:4:671:719	6566756	3	True				
ANR	6566822	AssignmentExpression	"mis -> userfault_quit_fd = eventfd ( 0 , EFD_CLOEXEC )"		6566756	0		=			
ANR	6566823	PtrMemberAccess	mis -> userfault_quit_fd		6566756	0					
ANR	6566824	Identifier	mis		6566756	0					
ANR	6566825	Identifier	userfault_quit_fd		6566756	1					
ANR	6566826	CallExpression	"eventfd ( 0 , EFD_CLOEXEC )"		6566756	1					
ANR	6566827	Callee	eventfd		6566756	0					
ANR	6566828	Identifier	eventfd		6566756	0					
ANR	6566829	ArgumentList	0		6566756	1					
ANR	6566830	Argument	0		6566756	0					
ANR	6566831	PrimaryExpression	0		6566756	0					
ANR	6566832	Argument	EFD_CLOEXEC		6566756	1					
ANR	6566833	Identifier	EFD_CLOEXEC		6566756	0					
ANR	6566834	IfStatement	if ( mis -> userfault_quit_fd == - 1 )		6566756	4					
ANR	6566835	Condition	mis -> userfault_quit_fd == - 1	41:8:730:757	6566756	0	True				
ANR	6566836	EqualityExpression	mis -> userfault_quit_fd == - 1		6566756	0		==			
ANR	6566837	PtrMemberAccess	mis -> userfault_quit_fd		6566756	0					
ANR	6566838	Identifier	mis		6566756	0					
ANR	6566839	Identifier	userfault_quit_fd		6566756	1					
ANR	6566840	UnaryOperationExpression	- 1		6566756	1					
ANR	6566841	UnaryOperator	-		6566756	0					
ANR	6566842	PrimaryExpression	1		6566756	1					
ANR	6566843	CompoundStatement		39:38:698:698	6566756	1					
ANR	6566844	ExpressionStatement	"error_report ( ""%s: Opening userfault_quit_fd: %s"" , __func__ , strerror ( errno ) )"	43:8:771:869	6566756	0	True				
ANR	6566845	CallExpression	"error_report ( ""%s: Opening userfault_quit_fd: %s"" , __func__ , strerror ( errno ) )"		6566756	0					
ANR	6566846	Callee	error_report		6566756	0					
ANR	6566847	Identifier	error_report		6566756	0					
ANR	6566848	ArgumentList	"""%s: Opening userfault_quit_fd: %s"""		6566756	1					
ANR	6566849	Argument	"""%s: Opening userfault_quit_fd: %s"""		6566756	0					
ANR	6566850	PrimaryExpression	"""%s: Opening userfault_quit_fd: %s"""		6566756	0					
ANR	6566851	Argument	__func__		6566756	1					
ANR	6566852	Identifier	__func__		6566756	0					
ANR	6566853	Argument	strerror ( errno )		6566756	2					
ANR	6566854	CallExpression	strerror ( errno )		6566756	0					
ANR	6566855	Callee	strerror		6566756	0					
ANR	6566856	Identifier	strerror		6566756	0					
ANR	6566857	ArgumentList	errno		6566756	1					
ANR	6566858	Argument	errno		6566756	0					
ANR	6566859	Identifier	errno		6566756	0					
ANR	6566860	ExpressionStatement	close ( mis -> userfault_fd )	47:8:880:904	6566756	1	True				
ANR	6566861	CallExpression	close ( mis -> userfault_fd )		6566756	0					
ANR	6566862	Callee	close		6566756	0					
ANR	6566863	Identifier	close		6566756	0					
ANR	6566864	ArgumentList	mis -> userfault_fd		6566756	1					
ANR	6566865	Argument	mis -> userfault_fd		6566756	0					
ANR	6566866	PtrMemberAccess	mis -> userfault_fd		6566756	0					
ANR	6566867	Identifier	mis		6566756	0					
ANR	6566868	Identifier	userfault_fd		6566756	1					
ANR	6566869	ReturnStatement	return - 1 ;	49:8:915:924	6566756	2	True				
ANR	6566870	UnaryOperationExpression	- 1		6566756	0					
ANR	6566871	UnaryOperator	-		6566756	0					
ANR	6566872	PrimaryExpression	1		6566756	1					
ANR	6566873	ExpressionStatement	"qemu_sem_init ( & mis -> fault_thread_sem , 0 )"	55:4:940:980	6566756	5	True				
ANR	6566874	CallExpression	"qemu_sem_init ( & mis -> fault_thread_sem , 0 )"		6566756	0					
ANR	6566875	Callee	qemu_sem_init		6566756	0					
ANR	6566876	Identifier	qemu_sem_init		6566756	0					
ANR	6566877	ArgumentList	& mis -> fault_thread_sem		6566756	1					
ANR	6566878	Argument	& mis -> fault_thread_sem		6566756	0					
ANR	6566879	UnaryOperationExpression	& mis -> fault_thread_sem		6566756	0					
ANR	6566880	UnaryOperator	&		6566756	0					
ANR	6566881	PtrMemberAccess	mis -> fault_thread_sem		6566756	1					
ANR	6566882	Identifier	mis		6566756	0					
ANR	6566883	Identifier	fault_thread_sem		6566756	1					
ANR	6566884	Argument	0		6566756	1					
ANR	6566885	PrimaryExpression	0		6566756	0					
ANR	6566886	ExpressionStatement	"qemu_thread_create ( & mis -> fault_thread , ""postcopy/fault"" , postcopy_ram_fault_thread , mis , QEMU_THREAD_JOINABLE )"	57:4:987:1121	6566756	6	True				
ANR	6566887	CallExpression	"qemu_thread_create ( & mis -> fault_thread , ""postcopy/fault"" , postcopy_ram_fault_thread , mis , QEMU_THREAD_JOINABLE )"		6566756	0					
ANR	6566888	Callee	qemu_thread_create		6566756	0					
ANR	6566889	Identifier	qemu_thread_create		6566756	0					
ANR	6566890	ArgumentList	& mis -> fault_thread		6566756	1					
ANR	6566891	Argument	& mis -> fault_thread		6566756	0					
ANR	6566892	UnaryOperationExpression	& mis -> fault_thread		6566756	0					
ANR	6566893	UnaryOperator	&		6566756	0					
ANR	6566894	PtrMemberAccess	mis -> fault_thread		6566756	1					
ANR	6566895	Identifier	mis		6566756	0					
ANR	6566896	Identifier	fault_thread		6566756	1					
ANR	6566897	Argument	"""postcopy/fault"""		6566756	1					
ANR	6566898	PrimaryExpression	"""postcopy/fault"""		6566756	0					
ANR	6566899	Argument	postcopy_ram_fault_thread		6566756	2					
ANR	6566900	Identifier	postcopy_ram_fault_thread		6566756	0					
ANR	6566901	Argument	mis		6566756	3					
ANR	6566902	Identifier	mis		6566756	0					
ANR	6566903	Argument	QEMU_THREAD_JOINABLE		6566756	4					
ANR	6566904	Identifier	QEMU_THREAD_JOINABLE		6566756	0					
ANR	6566905	ExpressionStatement	qemu_sem_wait ( & mis -> fault_thread_sem )	61:4:1128:1165	6566756	7	True				
ANR	6566906	CallExpression	qemu_sem_wait ( & mis -> fault_thread_sem )		6566756	0					
ANR	6566907	Callee	qemu_sem_wait		6566756	0					
ANR	6566908	Identifier	qemu_sem_wait		6566756	0					
ANR	6566909	ArgumentList	& mis -> fault_thread_sem		6566756	1					
ANR	6566910	Argument	& mis -> fault_thread_sem		6566756	0					
ANR	6566911	UnaryOperationExpression	& mis -> fault_thread_sem		6566756	0					
ANR	6566912	UnaryOperator	&		6566756	0					
ANR	6566913	PtrMemberAccess	mis -> fault_thread_sem		6566756	1					
ANR	6566914	Identifier	mis		6566756	0					
ANR	6566915	Identifier	fault_thread_sem		6566756	1					
ANR	6566916	ExpressionStatement	qemu_sem_destroy ( & mis -> fault_thread_sem )	63:4:1172:1212	6566756	8	True				
ANR	6566917	CallExpression	qemu_sem_destroy ( & mis -> fault_thread_sem )		6566756	0					
ANR	6566918	Callee	qemu_sem_destroy		6566756	0					
ANR	6566919	Identifier	qemu_sem_destroy		6566756	0					
ANR	6566920	ArgumentList	& mis -> fault_thread_sem		6566756	1					
ANR	6566921	Argument	& mis -> fault_thread_sem		6566756	0					
ANR	6566922	UnaryOperationExpression	& mis -> fault_thread_sem		6566756	0					
ANR	6566923	UnaryOperator	&		6566756	0					
ANR	6566924	PtrMemberAccess	mis -> fault_thread_sem		6566756	1					
ANR	6566925	Identifier	mis		6566756	0					
ANR	6566926	Identifier	fault_thread_sem		6566756	1					
ANR	6566927	ExpressionStatement	mis -> have_fault_thread = true	65:4:1219:1248	6566756	9	True				
ANR	6566928	AssignmentExpression	mis -> have_fault_thread = true		6566756	0		=			
ANR	6566929	PtrMemberAccess	mis -> have_fault_thread		6566756	0					
ANR	6566930	Identifier	mis		6566756	0					
ANR	6566931	Identifier	have_fault_thread		6566756	1					
ANR	6566932	Identifier	true		6566756	1					
ANR	6566933	IfStatement	"if ( qemu_ram_foreach_block ( ram_block_enable_notify , mis ) )"		6566756	10					
ANR	6566934	Condition	"qemu_ram_foreach_block ( ram_block_enable_notify , mis )"	71:8:1332:1383	6566756	0	True				
ANR	6566935	CallExpression	"qemu_ram_foreach_block ( ram_block_enable_notify , mis )"		6566756	0					
ANR	6566936	Callee	qemu_ram_foreach_block		6566756	0					
ANR	6566937	Identifier	qemu_ram_foreach_block		6566756	0					
ANR	6566938	ArgumentList	ram_block_enable_notify		6566756	1					
ANR	6566939	Argument	ram_block_enable_notify		6566756	0					
ANR	6566940	Identifier	ram_block_enable_notify		6566756	0					
ANR	6566941	Argument	mis		6566756	1					
ANR	6566942	Identifier	mis		6566756	0					
ANR	6566943	CompoundStatement		69:62:1324:1324	6566756	1					
ANR	6566944	ReturnStatement	return - 1 ;	73:8:1397:1406	6566756	0	True				
ANR	6566945	UnaryOperationExpression	- 1		6566756	0					
ANR	6566946	UnaryOperator	-		6566756	0					
ANR	6566947	PrimaryExpression	1		6566756	1					
ANR	6566948	ExpressionStatement	qemu_balloon_inhibit ( true )	87:4:1550:1576	6566756	11	True				
ANR	6566949	CallExpression	qemu_balloon_inhibit ( true )		6566756	0					
ANR	6566950	Callee	qemu_balloon_inhibit		6566756	0					
ANR	6566951	Identifier	qemu_balloon_inhibit		6566756	0					
ANR	6566952	ArgumentList	true		6566756	1					
ANR	6566953	Argument	true		6566756	0					
ANR	6566954	Identifier	true		6566756	0					
ANR	6566955	ExpressionStatement	trace_postcopy_ram_enable_notify ( )	91:4:1585:1619	6566756	12	True				
ANR	6566956	CallExpression	trace_postcopy_ram_enable_notify ( )		6566756	0					
ANR	6566957	Callee	trace_postcopy_ram_enable_notify		6566756	0					
ANR	6566958	Identifier	trace_postcopy_ram_enable_notify		6566756	0					
ANR	6566959	ArgumentList			6566756	1					
ANR	6566960	ReturnStatement	return 0 ;	95:4:1628:1636	6566756	13	True				
ANR	6566961	PrimaryExpression	0		6566756	0					
ANR	6566962	ReturnType	int		6566756	1					
ANR	6566963	Identifier	postcopy_ram_enable_notify		6566756	2					
ANR	6566964	ParameterList	MigrationIncomingState * mis		6566756	3					
ANR	6566965	Parameter	MigrationIncomingState * mis	1:31:31:57	6566756	0	True				
ANR	6566966	ParameterType	MigrationIncomingState *		6566756	0					
ANR	6566967	Identifier	mis		6566756	1					
ANR	6566968	CFGEntryNode	ENTRY		6566756		True				
ANR	6566969	CFGExitNode	EXIT		6566756		True				
ANR	6566970	Symbol	mis -> userfault_quit_fd		6566756						
ANR	6566971	Symbol	syscall		6566756						
ANR	6566972	Symbol	* mis		6566756						
ANR	6566973	Symbol	errno		6566756						
ANR	6566974	Symbol	ufd_version_check		6566756						
ANR	6566975	Symbol	O_NONBLOCK		6566756						
ANR	6566976	Symbol	eventfd		6566756						
ANR	6566977	Symbol	QEMU_THREAD_JOINABLE		6566756						
ANR	6566978	Symbol	qemu_ram_foreach_block		6566756						
ANR	6566979	Symbol	__NR_userfaultfd		6566756						
ANR	6566980	Symbol	& mis -> fault_thread		6566756						
ANR	6566981	Symbol	strerror		6566756						
ANR	6566982	Symbol	mis -> have_fault_thread		6566756						
ANR	6566983	Symbol	ram_block_enable_notify		6566756						
ANR	6566984	Symbol	mis -> userfault_fd		6566756						
ANR	6566985	Symbol	mis		6566756						
ANR	6566986	Symbol	__func__		6566756						
ANR	6566987	Symbol	true		6566756						
ANR	6566988	Symbol	EFD_CLOEXEC		6566756						
ANR	6566989	Symbol	postcopy_ram_fault_thread		6566756						
ANR	6566990	Symbol	O_CLOEXEC		6566756						
ANR	6566991	Symbol	& mis -> fault_thread_sem		6566756						
