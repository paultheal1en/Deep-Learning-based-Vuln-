command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	833235	File	/home/p4ultr4n/workplace/ReVeal/raw_code/avcodec_open_01_0.c								
ANR	833236	Function	avcodec_open	1:0:0:1010							
ANR	833237	FunctionDef	"avcodec_open (AVCodecContext * avctx , AVCodec * codec)"		833236	0					
ANR	833238	CompoundStatement		3:0:57:1010	833236	0					
ANR	833239	IdentifierDeclStatement	int ret ;	5:4:64:71	833236	0	True				
ANR	833240	IdentifierDecl	ret		833236	0					
ANR	833241	IdentifierDeclType	int		833236	0					
ANR	833242	Identifier	ret		833236	1					
ANR	833243	IfStatement	if ( avctx -> codec )		833236	1					
ANR	833244	Condition	avctx -> codec	9:7:83:94	833236	0	True				
ANR	833245	PtrMemberAccess	avctx -> codec		833236	0					
ANR	833246	Identifier	avctx		833236	0					
ANR	833247	Identifier	codec		833236	1					
ANR	833248	ReturnStatement	return - 1 ;	11:8:106:115	833236	1	True				
ANR	833249	UnaryOperationExpression	- 1		833236	0					
ANR	833250	UnaryOperator	-		833236	0					
ANR	833251	PrimaryExpression	1		833236	1					
ANR	833252	ExpressionStatement	avctx -> codec = codec	15:4:124:144	833236	2	True				
ANR	833253	AssignmentExpression	avctx -> codec = codec		833236	0		=			
ANR	833254	PtrMemberAccess	avctx -> codec		833236	0					
ANR	833255	Identifier	avctx		833236	0					
ANR	833256	Identifier	codec		833236	1					
ANR	833257	Identifier	codec		833236	1					
ANR	833258	ExpressionStatement	avctx -> codec_id = codec -> id	17:4:151:178	833236	3	True				
ANR	833259	AssignmentExpression	avctx -> codec_id = codec -> id		833236	0		=			
ANR	833260	PtrMemberAccess	avctx -> codec_id		833236	0					
ANR	833261	Identifier	avctx		833236	0					
ANR	833262	Identifier	codec_id		833236	1					
ANR	833263	PtrMemberAccess	codec -> id		833236	1					
ANR	833264	Identifier	codec		833236	0					
ANR	833265	Identifier	id		833236	1					
ANR	833266	ExpressionStatement	avctx -> frame_number = 0	19:4:185:208	833236	4	True				
ANR	833267	AssignmentExpression	avctx -> frame_number = 0		833236	0		=			
ANR	833268	PtrMemberAccess	avctx -> frame_number		833236	0					
ANR	833269	Identifier	avctx		833236	0					
ANR	833270	Identifier	frame_number		833236	1					
ANR	833271	PrimaryExpression	0		833236	1					
ANR	833272	IfStatement	if ( codec -> priv_data_size > 0 )		833236	5					
ANR	833273	Condition	codec -> priv_data_size > 0	21:8:219:243	833236	0	True				
ANR	833274	RelationalExpression	codec -> priv_data_size > 0		833236	0		>			
ANR	833275	PtrMemberAccess	codec -> priv_data_size		833236	0					
ANR	833276	Identifier	codec		833236	0					
ANR	833277	Identifier	priv_data_size		833236	1					
ANR	833278	PrimaryExpression	0		833236	1					
ANR	833279	CompoundStatement		19:35:188:188	833236	1					
ANR	833280	ExpressionStatement	avctx -> priv_data = av_mallocz ( codec -> priv_data_size )	23:8:257:309	833236	0	True				
ANR	833281	AssignmentExpression	avctx -> priv_data = av_mallocz ( codec -> priv_data_size )		833236	0		=			
ANR	833282	PtrMemberAccess	avctx -> priv_data		833236	0					
ANR	833283	Identifier	avctx		833236	0					
ANR	833284	Identifier	priv_data		833236	1					
ANR	833285	CallExpression	av_mallocz ( codec -> priv_data_size )		833236	1					
ANR	833286	Callee	av_mallocz		833236	0					
ANR	833287	Identifier	av_mallocz		833236	0					
ANR	833288	ArgumentList	codec -> priv_data_size		833236	1					
ANR	833289	Argument	codec -> priv_data_size		833236	0					
ANR	833290	PtrMemberAccess	codec -> priv_data_size		833236	0					
ANR	833291	Identifier	codec		833236	0					
ANR	833292	Identifier	priv_data_size		833236	1					
ANR	833293	IfStatement	if ( ! avctx -> priv_data )		833236	1					
ANR	833294	Condition	! avctx -> priv_data	25:12:324:340	833236	0	True				
ANR	833295	UnaryOperationExpression	! avctx -> priv_data		833236	0					
ANR	833296	UnaryOperator	!		833236	0					
ANR	833297	PtrMemberAccess	avctx -> priv_data		833236	1					
ANR	833298	Identifier	avctx		833236	0					
ANR	833299	Identifier	priv_data		833236	1					
ANR	833300	ReturnStatement	return - ENOMEM ;	27:12:357:371	833236	1	True				
ANR	833301	UnaryOperationExpression	- ENOMEM		833236	0					
ANR	833302	UnaryOperator	-		833236	0					
ANR	833303	Identifier	ENOMEM		833236	1					
ANR	833304	ElseStatement	else		833236	0					
ANR	833305	CompoundStatement		27:11:327:327	833236	0					
ANR	833306	ExpressionStatement	avctx -> priv_data = NULL	31:8:396:419	833236	0	True				
ANR	833307	AssignmentExpression	avctx -> priv_data = NULL		833236	0		=			
ANR	833308	PtrMemberAccess	avctx -> priv_data		833236	0					
ANR	833309	Identifier	avctx		833236	0					
ANR	833310	Identifier	priv_data		833236	1					
ANR	833311	Identifier	NULL		833236	1					
ANR	833312	IfStatement	if ( avctx -> coded_width && avctx -> coded_height )		833236	6					
ANR	833313	Condition	avctx -> coded_width && avctx -> coded_height	37:7:438:478	833236	0	True				
ANR	833314	AndExpression	avctx -> coded_width && avctx -> coded_height		833236	0		&&			
ANR	833315	PtrMemberAccess	avctx -> coded_width		833236	0					
ANR	833316	Identifier	avctx		833236	0					
ANR	833317	Identifier	coded_width		833236	1					
ANR	833318	PtrMemberAccess	avctx -> coded_height		833236	1					
ANR	833319	Identifier	avctx		833236	0					
ANR	833320	Identifier	coded_height		833236	1					
ANR	833321	ExpressionStatement	"avcodec_set_dimensions ( avctx , avctx -> coded_width , avctx -> coded_height )"	39:8:490:560	833236	1	True				
ANR	833322	CallExpression	"avcodec_set_dimensions ( avctx , avctx -> coded_width , avctx -> coded_height )"		833236	0					
ANR	833323	Callee	avcodec_set_dimensions		833236	0					
ANR	833324	Identifier	avcodec_set_dimensions		833236	0					
ANR	833325	ArgumentList	avctx		833236	1					
ANR	833326	Argument	avctx		833236	0					
ANR	833327	Identifier	avctx		833236	0					
ANR	833328	Argument	avctx -> coded_width		833236	1					
ANR	833329	PtrMemberAccess	avctx -> coded_width		833236	0					
ANR	833330	Identifier	avctx		833236	0					
ANR	833331	Identifier	coded_width		833236	1					
ANR	833332	Argument	avctx -> coded_height		833236	2					
ANR	833333	PtrMemberAccess	avctx -> coded_height		833236	0					
ANR	833334	Identifier	avctx		833236	0					
ANR	833335	Identifier	coded_height		833236	1					
ANR	833336	ElseStatement	else		833236	0					
ANR	833337	IfStatement	if ( avctx -> width && avctx -> height )		833236	0					
ANR	833338	Condition	avctx -> width && avctx -> height	41:12:575:603	833236	0	True				
ANR	833339	AndExpression	avctx -> width && avctx -> height		833236	0		&&			
ANR	833340	PtrMemberAccess	avctx -> width		833236	0					
ANR	833341	Identifier	avctx		833236	0					
ANR	833342	Identifier	width		833236	1					
ANR	833343	PtrMemberAccess	avctx -> height		833236	1					
ANR	833344	Identifier	avctx		833236	0					
ANR	833345	Identifier	height		833236	1					
ANR	833346	ExpressionStatement	"avcodec_set_dimensions ( avctx , avctx -> width , avctx -> height )"	43:8:615:673	833236	1	True				
ANR	833347	CallExpression	"avcodec_set_dimensions ( avctx , avctx -> width , avctx -> height )"		833236	0					
ANR	833348	Callee	avcodec_set_dimensions		833236	0					
ANR	833349	Identifier	avcodec_set_dimensions		833236	0					
ANR	833350	ArgumentList	avctx		833236	1					
ANR	833351	Argument	avctx		833236	0					
ANR	833352	Identifier	avctx		833236	0					
ANR	833353	Argument	avctx -> width		833236	1					
ANR	833354	PtrMemberAccess	avctx -> width		833236	0					
ANR	833355	Identifier	avctx		833236	0					
ANR	833356	Identifier	width		833236	1					
ANR	833357	Argument	avctx -> height		833236	2					
ANR	833358	PtrMemberAccess	avctx -> height		833236	0					
ANR	833359	Identifier	avctx		833236	0					
ANR	833360	Identifier	height		833236	1					
ANR	833361	IfStatement	"if ( ( avctx -> coded_width || avctx -> coded_height ) && avcodec_check_dimensions ( avctx , avctx -> coded_width , avctx -> coded_height ) )"		833236	7					
ANR	833362	Condition	"( avctx -> coded_width || avctx -> coded_height ) && avcodec_check_dimensions ( avctx , avctx -> coded_width , avctx -> coded_height )"	47:7:685:799	833236	0	True				
ANR	833363	AndExpression	"( avctx -> coded_width || avctx -> coded_height ) && avcodec_check_dimensions ( avctx , avctx -> coded_width , avctx -> coded_height )"		833236	0		&&			
ANR	833364	OrExpression	avctx -> coded_width || avctx -> coded_height		833236	0		||			
ANR	833365	PtrMemberAccess	avctx -> coded_width		833236	0					
ANR	833366	Identifier	avctx		833236	0					
ANR	833367	Identifier	coded_width		833236	1					
ANR	833368	PtrMemberAccess	avctx -> coded_height		833236	1					
ANR	833369	Identifier	avctx		833236	0					
ANR	833370	Identifier	coded_height		833236	1					
ANR	833371	CallExpression	"avcodec_check_dimensions ( avctx , avctx -> coded_width , avctx -> coded_height )"		833236	1					
ANR	833372	Callee	avcodec_check_dimensions		833236	0					
ANR	833373	Identifier	avcodec_check_dimensions		833236	0					
ANR	833374	ArgumentList	avctx		833236	1					
ANR	833375	Argument	avctx		833236	0					
ANR	833376	Identifier	avctx		833236	0					
ANR	833377	Argument	avctx -> coded_width		833236	1					
ANR	833378	PtrMemberAccess	avctx -> coded_width		833236	0					
ANR	833379	Identifier	avctx		833236	0					
ANR	833380	Identifier	coded_width		833236	1					
ANR	833381	Argument	avctx -> coded_height		833236	2					
ANR	833382	PtrMemberAccess	avctx -> coded_height		833236	0					
ANR	833383	Identifier	avctx		833236	0					
ANR	833384	Identifier	coded_height		833236	1					
ANR	833385	CompoundStatement		45:123:743:743	833236	1					
ANR	833386	ExpressionStatement	av_freep ( & avctx -> priv_data )	49:8:812:839	833236	0	True				
ANR	833387	CallExpression	av_freep ( & avctx -> priv_data )		833236	0					
ANR	833388	Callee	av_freep		833236	0					
ANR	833389	Identifier	av_freep		833236	0					
ANR	833390	ArgumentList	& avctx -> priv_data		833236	1					
ANR	833391	Argument	& avctx -> priv_data		833236	0					
ANR	833392	UnaryOperationExpression	& avctx -> priv_data		833236	0					
ANR	833393	UnaryOperator	&		833236	0					
ANR	833394	PtrMemberAccess	avctx -> priv_data		833236	1					
ANR	833395	Identifier	avctx		833236	0					
ANR	833396	Identifier	priv_data		833236	1					
ANR	833397	ReturnStatement	return - 1 ;	51:8:850:859	833236	1	True				
ANR	833398	UnaryOperationExpression	- 1		833236	0					
ANR	833399	UnaryOperator	-		833236	0					
ANR	833400	PrimaryExpression	1		833236	1					
ANR	833401	ExpressionStatement	ret = avctx -> codec -> init ( avctx )	57:4:875:906	833236	8	True				
ANR	833402	AssignmentExpression	ret = avctx -> codec -> init ( avctx )		833236	0		=			
ANR	833403	Identifier	ret		833236	0					
ANR	833404	CallExpression	avctx -> codec -> init ( avctx )		833236	1					
ANR	833405	Callee	avctx -> codec -> init		833236	0					
ANR	833406	PtrMemberAccess	avctx -> codec -> init		833236	0					
ANR	833407	PtrMemberAccess	avctx -> codec		833236	0					
ANR	833408	Identifier	avctx		833236	0					
ANR	833409	Identifier	codec		833236	1					
ANR	833410	Identifier	init		833236	1					
ANR	833411	ArgumentList	avctx		833236	1					
ANR	833412	Argument	avctx		833236	0					
ANR	833413	Identifier	avctx		833236	0					
ANR	833414	IfStatement	if ( ret < 0 )		833236	9					
ANR	833415	Condition	ret < 0	59:8:917:923	833236	0	True				
ANR	833416	RelationalExpression	ret < 0		833236	0		<			
ANR	833417	Identifier	ret		833236	0					
ANR	833418	PrimaryExpression	0		833236	1					
ANR	833419	CompoundStatement		57:17:868:868	833236	1					
ANR	833420	ExpressionStatement	av_freep ( & avctx -> priv_data )	61:8:937:964	833236	0	True				
ANR	833421	CallExpression	av_freep ( & avctx -> priv_data )		833236	0					
ANR	833422	Callee	av_freep		833236	0					
ANR	833423	Identifier	av_freep		833236	0					
ANR	833424	ArgumentList	& avctx -> priv_data		833236	1					
ANR	833425	Argument	& avctx -> priv_data		833236	0					
ANR	833426	UnaryOperationExpression	& avctx -> priv_data		833236	0					
ANR	833427	UnaryOperator	&		833236	0					
ANR	833428	PtrMemberAccess	avctx -> priv_data		833236	1					
ANR	833429	Identifier	avctx		833236	0					
ANR	833430	Identifier	priv_data		833236	1					
ANR	833431	ReturnStatement	return ret ;	63:8:975:985	833236	1	True				
ANR	833432	Identifier	ret		833236	0					
ANR	833433	ReturnStatement	return 0 ;	67:4:999:1007	833236	10	True				
ANR	833434	PrimaryExpression	0		833236	0					
ANR	833435	ReturnType	int		833236	1					
ANR	833436	Identifier	avcodec_open		833236	2					
ANR	833437	ParameterList	"AVCodecContext * avctx , AVCodec * codec"		833236	3					
ANR	833438	Parameter	AVCodecContext * avctx	1:17:17:37	833236	0	True				
ANR	833439	ParameterType	AVCodecContext *		833236	0					
ANR	833440	Identifier	avctx		833236	1					
ANR	833441	Parameter	AVCodec * codec	1:40:40:53	833236	1	True				
ANR	833442	ParameterType	AVCodec *		833236	0					
ANR	833443	Identifier	codec		833236	1					
ANR	833444	CFGEntryNode	ENTRY		833236		True				
ANR	833445	CFGExitNode	EXIT		833236		True				
ANR	833446	Symbol	ret		833236						
ANR	833447	Symbol	avctx -> coded_width		833236						
ANR	833448	Symbol	ENOMEM		833236						
ANR	833449	Symbol	avctx -> codec_id		833236						
ANR	833450	Symbol	avctx -> codec		833236						
ANR	833451	Symbol	NULL		833236						
ANR	833452	Symbol	* codec		833236						
ANR	833453	Symbol	av_mallocz		833236						
ANR	833454	Symbol	avctx -> width		833236						
ANR	833455	Symbol	avcodec_check_dimensions		833236						
ANR	833456	Symbol	* * avctx		833236						
ANR	833457	Symbol	codec -> priv_data_size		833236						
ANR	833458	Symbol	avctx -> coded_height		833236						
ANR	833459	Symbol	avctx -> priv_data		833236						
ANR	833460	Symbol	codec		833236						
ANR	833461	Symbol	* avctx		833236						
ANR	833462	Symbol	avctx -> height		833236						
ANR	833463	Symbol	& avctx -> priv_data		833236						
ANR	833464	Symbol	codec -> id		833236						
ANR	833465	Symbol	avctx -> codec -> init		833236						
ANR	833466	Symbol	* avctx -> codec		833236						
ANR	833467	Symbol	avctx -> frame_number		833236						
ANR	833468	Symbol	avctx		833236						
