command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	9540077	File	/home/p4ultr4n/workplace/ReVeal/raw_code/xen_pt_msixctrl_reg_init_0.c								
ANR	9540078	Function	xen_pt_msixctrl_reg_init	1:0:0:716							
ANR	9540079	FunctionDef	"xen_pt_msixctrl_reg_init (XenPCIPassthroughState * s , XenPTRegInfo * reg , uint32_t real_offset , uint32_t * data)"		9540078	0					
ANR	9540080	CompoundStatement		7:0:195:716	9540078	0					
ANR	9540081	IdentifierDeclStatement	PCIDevice * d = & s -> dev ;	9:4:202:224	9540078	0	True				
ANR	9540082	IdentifierDecl	* d = & s -> dev		9540078	0					
ANR	9540083	IdentifierDeclType	PCIDevice *		9540078	0					
ANR	9540084	Identifier	d		9540078	1					
ANR	9540085	AssignmentExpression	* d = & s -> dev		9540078	2		=			
ANR	9540086	Identifier	d		9540078	0					
ANR	9540087	UnaryOperationExpression	& s -> dev		9540078	1					
ANR	9540088	UnaryOperator	&		9540078	0					
ANR	9540089	PtrMemberAccess	s -> dev		9540078	1					
ANR	9540090	Identifier	s		9540078	0					
ANR	9540091	Identifier	dev		9540078	1					
ANR	9540092	IdentifierDeclStatement	uint16_t reg_field = 0 ;	11:4:231:253	9540078	1	True				
ANR	9540093	IdentifierDecl	reg_field = 0		9540078	0					
ANR	9540094	IdentifierDeclType	uint16_t		9540078	0					
ANR	9540095	Identifier	reg_field		9540078	1					
ANR	9540096	AssignmentExpression	reg_field = 0		9540078	2		=			
ANR	9540097	Identifier	reg_field		9540078	0					
ANR	9540098	PrimaryExpression	0		9540078	1					
ANR	9540099	ExpressionStatement	reg_field = pci_get_word ( d -> config + real_offset )	17:4:322:371	9540078	2	True				
ANR	9540100	AssignmentExpression	reg_field = pci_get_word ( d -> config + real_offset )		9540078	0		=			
ANR	9540101	Identifier	reg_field		9540078	0					
ANR	9540102	CallExpression	pci_get_word ( d -> config + real_offset )		9540078	1					
ANR	9540103	Callee	pci_get_word		9540078	0					
ANR	9540104	Identifier	pci_get_word		9540078	0					
ANR	9540105	ArgumentList	d -> config + real_offset		9540078	1					
ANR	9540106	Argument	d -> config + real_offset		9540078	0					
ANR	9540107	AdditiveExpression	d -> config + real_offset		9540078	0		+			
ANR	9540108	PtrMemberAccess	d -> config		9540078	0					
ANR	9540109	Identifier	d		9540078	0					
ANR	9540110	Identifier	config		9540078	1					
ANR	9540111	Identifier	real_offset		9540078	1					
ANR	9540112	IfStatement	if ( reg_field & PCI_MSIX_FLAGS_ENABLE )		9540078	3					
ANR	9540113	Condition	reg_field & PCI_MSIX_FLAGS_ENABLE	21:8:384:416	9540078	0	True				
ANR	9540114	BitAndExpression	reg_field & PCI_MSIX_FLAGS_ENABLE		9540078	0		&			
ANR	9540115	Identifier	reg_field		9540078	0					
ANR	9540116	Identifier	PCI_MSIX_FLAGS_ENABLE		9540078	1					
ANR	9540117	CompoundStatement		15:43:223:223	9540078	1					
ANR	9540118	ExpressionStatement	"XEN_PT_LOG ( d , ""MSIX already enabled, disabling it first\\n"" )"	23:8:430:489	9540078	0	True				
ANR	9540119	CallExpression	"XEN_PT_LOG ( d , ""MSIX already enabled, disabling it first\\n"" )"		9540078	0					
ANR	9540120	Callee	XEN_PT_LOG		9540078	0					
ANR	9540121	Identifier	XEN_PT_LOG		9540078	0					
ANR	9540122	ArgumentList	d		9540078	1					
ANR	9540123	Argument	d		9540078	0					
ANR	9540124	Identifier	d		9540078	0					
ANR	9540125	Argument	"""MSIX already enabled, disabling it first\\n"""		9540078	1					
ANR	9540126	PrimaryExpression	"""MSIX already enabled, disabling it first\\n"""		9540078	0					
ANR	9540127	ExpressionStatement	"xen_host_pci_set_word ( & s -> real_device , real_offset , reg_field & ~PCI_MSIX_FLAGS_ENABLE )"	25:8:500:618	9540078	1	True				
ANR	9540128	CallExpression	"xen_host_pci_set_word ( & s -> real_device , real_offset , reg_field & ~PCI_MSIX_FLAGS_ENABLE )"		9540078	0					
ANR	9540129	Callee	xen_host_pci_set_word		9540078	0					
ANR	9540130	Identifier	xen_host_pci_set_word		9540078	0					
ANR	9540131	ArgumentList	& s -> real_device		9540078	1					
ANR	9540132	Argument	& s -> real_device		9540078	0					
ANR	9540133	UnaryOperationExpression	& s -> real_device		9540078	0					
ANR	9540134	UnaryOperator	&		9540078	0					
ANR	9540135	PtrMemberAccess	s -> real_device		9540078	1					
ANR	9540136	Identifier	s		9540078	0					
ANR	9540137	Identifier	real_device		9540078	1					
ANR	9540138	Argument	real_offset		9540078	1					
ANR	9540139	Identifier	real_offset		9540078	0					
ANR	9540140	Argument	reg_field & ~PCI_MSIX_FLAGS_ENABLE		9540078	2					
ANR	9540141	BitAndExpression	reg_field & ~PCI_MSIX_FLAGS_ENABLE		9540078	0		&			
ANR	9540142	Identifier	reg_field		9540078	0					
ANR	9540143	Identifier	~PCI_MSIX_FLAGS_ENABLE		9540078	1					
ANR	9540144	ExpressionStatement	s -> msix -> ctrl_offset = real_offset	33:4:634:668	9540078	4	True				
ANR	9540145	AssignmentExpression	s -> msix -> ctrl_offset = real_offset		9540078	0		=			
ANR	9540146	PtrMemberAccess	s -> msix -> ctrl_offset		9540078	0					
ANR	9540147	PtrMemberAccess	s -> msix		9540078	0					
ANR	9540148	Identifier	s		9540078	0					
ANR	9540149	Identifier	msix		9540078	1					
ANR	9540150	Identifier	ctrl_offset		9540078	1					
ANR	9540151	Identifier	real_offset		9540078	1					
ANR	9540152	ExpressionStatement	* data = reg -> init_val	37:4:677:698	9540078	5	True				
ANR	9540153	AssignmentExpression	* data = reg -> init_val		9540078	0		=			
ANR	9540154	UnaryOperationExpression	* data		9540078	0					
ANR	9540155	UnaryOperator	*		9540078	0					
ANR	9540156	Identifier	data		9540078	1					
ANR	9540157	PtrMemberAccess	reg -> init_val		9540078	1					
ANR	9540158	Identifier	reg		9540078	0					
ANR	9540159	Identifier	init_val		9540078	1					
ANR	9540160	ReturnStatement	return 0 ;	39:4:705:713	9540078	6	True				
ANR	9540161	PrimaryExpression	0		9540078	0					
ANR	9540162	ReturnType	static int		9540078	1					
ANR	9540163	Identifier	xen_pt_msixctrl_reg_init		9540078	2					
ANR	9540164	ParameterList	"XenPCIPassthroughState * s , XenPTRegInfo * reg , uint32_t real_offset , uint32_t * data"		9540078	3					
ANR	9540165	Parameter	XenPCIPassthroughState * s	1:36:36:60	9540078	0	True				
ANR	9540166	ParameterType	XenPCIPassthroughState *		9540078	0					
ANR	9540167	Identifier	s		9540078	1					
ANR	9540168	Parameter	XenPTRegInfo * reg	3:36:100:116	9540078	1	True				
ANR	9540169	ParameterType	XenPTRegInfo *		9540078	0					
ANR	9540170	Identifier	reg		9540078	1					
ANR	9540171	Parameter	uint32_t real_offset	3:55:119:138	9540078	2	True				
ANR	9540172	ParameterType	uint32_t		9540078	0					
ANR	9540173	Identifier	real_offset		9540078	1					
ANR	9540174	Parameter	uint32_t * data	5:36:178:191	9540078	3	True				
ANR	9540175	ParameterType	uint32_t *		9540078	0					
ANR	9540176	Identifier	data		9540078	1					
ANR	9540177	CFGEntryNode	ENTRY		9540078		True				
ANR	9540178	CFGExitNode	EXIT		9540078		True				
ANR	9540179	Symbol	s -> msix -> ctrl_offset		9540078						
ANR	9540180	Symbol	data		9540078						
ANR	9540181	Symbol	d		9540078						
ANR	9540182	Symbol	reg -> init_val		9540078						
ANR	9540183	Symbol	s -> msix		9540078						
ANR	9540184	Symbol	& s -> dev		9540078						
ANR	9540185	Symbol	~PCI_MSIX_FLAGS_ENABLE		9540078						
ANR	9540186	Symbol	* d		9540078						
ANR	9540187	Symbol	d -> config		9540078						
ANR	9540188	Symbol	real_offset		9540078						
ANR	9540189	Symbol	& s -> real_device		9540078						
ANR	9540190	Symbol	s		9540078						
ANR	9540191	Symbol	reg_field		9540078						
ANR	9540192	Symbol	* s -> msix		9540078						
ANR	9540193	Symbol	reg		9540078						
ANR	9540194	Symbol	* * s		9540078						
ANR	9540195	Symbol	pci_get_word		9540078						
ANR	9540196	Symbol	* s		9540078						
ANR	9540197	Symbol	* data		9540078						
ANR	9540198	Symbol	* reg		9540078						
ANR	9540199	Symbol	PCI_MSIX_FLAGS_ENABLE		9540078						
