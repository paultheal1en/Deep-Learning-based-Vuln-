command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6261123	File	/home/p4ultr4n/workplace/ReVeal/raw_code/os_host_main_loop_wait_05_0.c								
ANR	6261124	Function	os_host_main_loop_wait	1:0:0:1549							
ANR	6261125	FunctionDef	os_host_main_loop_wait (int * timeout)		6261124	0					
ANR	6261126	CompoundStatement		3:0:43:1549	6261124	0					
ANR	6261127	IdentifierDeclStatement	"int ret , ret2 , i ;"	5:4:50:66	6261124	0	True				
ANR	6261128	IdentifierDecl	ret		6261124	0					
ANR	6261129	IdentifierDeclType	int		6261124	0					
ANR	6261130	Identifier	ret		6261124	1					
ANR	6261131	IdentifierDecl	ret2		6261124	1					
ANR	6261132	IdentifierDeclType	int		6261124	0					
ANR	6261133	Identifier	ret2		6261124	1					
ANR	6261134	IdentifierDecl	i		6261124	2					
ANR	6261135	IdentifierDeclType	int		6261124	0					
ANR	6261136	Identifier	i		6261124	1					
ANR	6261137	IdentifierDeclStatement	PollingEntry * pe ;	7:4:73:89	6261124	1	True				
ANR	6261138	IdentifierDecl	* pe		6261124	0					
ANR	6261139	IdentifierDeclType	PollingEntry *		6261124	0					
ANR	6261140	Identifier	pe		6261124	1					
ANR	6261141	ExpressionStatement	ret = 0	13:4:168:175	6261124	2	True				
ANR	6261142	AssignmentExpression	ret = 0		6261124	0		=			
ANR	6261143	Identifier	ret		6261124	0					
ANR	6261144	PrimaryExpression	0		6261124	1					
ANR	6261145	ForStatement	for ( pe = first_polling_entry ; pe != NULL ; pe = pe -> next )		6261124	3					
ANR	6261146	ForInit	pe = first_polling_entry ;	15:8:186:210	6261124	0	True				
ANR	6261147	AssignmentExpression	pe = first_polling_entry		6261124	0		=			
ANR	6261148	Identifier	pe		6261124	0					
ANR	6261149	Identifier	first_polling_entry		6261124	1					
ANR	6261150	Condition	pe != NULL	15:34:212:221	6261124	1	True				
ANR	6261151	EqualityExpression	pe != NULL		6261124	0		!=			
ANR	6261152	Identifier	pe		6261124	0					
ANR	6261153	Identifier	NULL		6261124	1					
ANR	6261154	AssignmentExpression	pe = pe -> next	15:46:224:236	6261124	2	True	=			
ANR	6261155	Identifier	pe		6261124	0					
ANR	6261156	PtrMemberAccess	pe -> next		6261124	1					
ANR	6261157	Identifier	pe		6261124	0					
ANR	6261158	Identifier	next		6261124	1					
ANR	6261159	CompoundStatement		13:61:195:195	6261124	3					
ANR	6261160	ExpressionStatement	ret |= pe -> func ( pe -> opaque )	17:8:250:277	6261124	0	True				
ANR	6261161	AssignmentExpression	ret |= pe -> func ( pe -> opaque )		6261124	0		|=			
ANR	6261162	Identifier	ret		6261124	0					
ANR	6261163	CallExpression	pe -> func ( pe -> opaque )		6261124	1					
ANR	6261164	Callee	pe -> func		6261124	0					
ANR	6261165	PtrMemberAccess	pe -> func		6261124	0					
ANR	6261166	Identifier	pe		6261124	0					
ANR	6261167	Identifier	func		6261124	1					
ANR	6261168	ArgumentList	pe -> opaque		6261124	1					
ANR	6261169	Argument	pe -> opaque		6261124	0					
ANR	6261170	PtrMemberAccess	pe -> opaque		6261124	0					
ANR	6261171	Identifier	pe		6261124	0					
ANR	6261172	Identifier	opaque		6261124	1					
ANR	6261173	IfStatement	if ( ret == 0 )		6261124	4					
ANR	6261174	Condition	ret == 0	21:8:295:302	6261124	0	True				
ANR	6261175	EqualityExpression	ret == 0		6261124	0		==			
ANR	6261176	Identifier	ret		6261124	0					
ANR	6261177	PrimaryExpression	0		6261124	1					
ANR	6261178	CompoundStatement		23:8:290:320	6261124	1					
ANR	6261179	IdentifierDeclStatement	int err ;	23:8:316:323	6261124	0	True				
ANR	6261180	IdentifierDecl	err		6261124	0					
ANR	6261181	IdentifierDeclType	int		6261124	0					
ANR	6261182	Identifier	err		6261124	1					
ANR	6261183	IdentifierDeclStatement	WaitObjects * w = & wait_objects ;	25:8:334:364	6261124	1	True				
ANR	6261184	IdentifierDecl	* w = & wait_objects		6261124	0					
ANR	6261185	IdentifierDeclType	WaitObjects *		6261124	0					
ANR	6261186	Identifier	w		6261124	1					
ANR	6261187	AssignmentExpression	* w = & wait_objects		6261124	2		=			
ANR	6261188	Identifier	w		6261124	0					
ANR	6261189	UnaryOperationExpression	& wait_objects		6261124	1					
ANR	6261190	UnaryOperator	&		6261124	0					
ANR	6261191	Identifier	wait_objects		6261124	1					
ANR	6261192	ExpressionStatement	qemu_mutex_unlock_iothread ( )	29:8:377:405	6261124	2	True				
ANR	6261193	CallExpression	qemu_mutex_unlock_iothread ( )		6261124	0					
ANR	6261194	Callee	qemu_mutex_unlock_iothread		6261124	0					
ANR	6261195	Identifier	qemu_mutex_unlock_iothread		6261124	0					
ANR	6261196	ArgumentList			6261124	1					
ANR	6261197	ExpressionStatement	"ret = WaitForMultipleObjects ( w -> num , w -> events , FALSE , * timeout )"	31:8:416:480	6261124	3	True				
ANR	6261198	AssignmentExpression	"ret = WaitForMultipleObjects ( w -> num , w -> events , FALSE , * timeout )"		6261124	0		=			
ANR	6261199	Identifier	ret		6261124	0					
ANR	6261200	CallExpression	"WaitForMultipleObjects ( w -> num , w -> events , FALSE , * timeout )"		6261124	1					
ANR	6261201	Callee	WaitForMultipleObjects		6261124	0					
ANR	6261202	Identifier	WaitForMultipleObjects		6261124	0					
ANR	6261203	ArgumentList	w -> num		6261124	1					
ANR	6261204	Argument	w -> num		6261124	0					
ANR	6261205	PtrMemberAccess	w -> num		6261124	0					
ANR	6261206	Identifier	w		6261124	0					
ANR	6261207	Identifier	num		6261124	1					
ANR	6261208	Argument	w -> events		6261124	1					
ANR	6261209	PtrMemberAccess	w -> events		6261124	0					
ANR	6261210	Identifier	w		6261124	0					
ANR	6261211	Identifier	events		6261124	1					
ANR	6261212	Argument	FALSE		6261124	2					
ANR	6261213	Identifier	FALSE		6261124	0					
ANR	6261214	Argument	* timeout		6261124	3					
ANR	6261215	UnaryOperationExpression	* timeout		6261124	0					
ANR	6261216	UnaryOperator	*		6261124	0					
ANR	6261217	Identifier	timeout		6261124	1					
ANR	6261218	ExpressionStatement	qemu_mutex_lock_iothread ( )	33:8:491:517	6261124	4	True				
ANR	6261219	CallExpression	qemu_mutex_lock_iothread ( )		6261124	0					
ANR	6261220	Callee	qemu_mutex_lock_iothread		6261124	0					
ANR	6261221	Identifier	qemu_mutex_lock_iothread		6261124	0					
ANR	6261222	ArgumentList			6261124	1					
ANR	6261223	IfStatement	if ( WAIT_OBJECT_0 + 0 <= ret && ret <= WAIT_OBJECT_0 + w -> num - 1 )		6261124	5					
ANR	6261224	Condition	WAIT_OBJECT_0 + 0 <= ret && ret <= WAIT_OBJECT_0 + w -> num - 1	35:12:532:592	6261124	0	True				
ANR	6261225	AndExpression	WAIT_OBJECT_0 + 0 <= ret && ret <= WAIT_OBJECT_0 + w -> num - 1		6261124	0		&&			
ANR	6261226	RelationalExpression	WAIT_OBJECT_0 + 0 <= ret		6261124	0		<=			
ANR	6261227	AdditiveExpression	WAIT_OBJECT_0 + 0		6261124	0		+			
ANR	6261228	Identifier	WAIT_OBJECT_0		6261124	0					
ANR	6261229	PrimaryExpression	0		6261124	1					
ANR	6261230	Identifier	ret		6261124	1					
ANR	6261231	RelationalExpression	ret <= WAIT_OBJECT_0 + w -> num - 1		6261124	1		<=			
ANR	6261232	Identifier	ret		6261124	0					
ANR	6261233	AdditiveExpression	WAIT_OBJECT_0 + w -> num - 1		6261124	1		+			
ANR	6261234	Identifier	WAIT_OBJECT_0		6261124	0					
ANR	6261235	AdditiveExpression	w -> num - 1		6261124	1		-			
ANR	6261236	PtrMemberAccess	w -> num		6261124	0					
ANR	6261237	Identifier	w		6261124	0					
ANR	6261238	Identifier	num		6261124	1					
ANR	6261239	PrimaryExpression	1		6261124	1					
ANR	6261240	CompoundStatement		33:75:551:551	6261124	1					
ANR	6261241	IfStatement	if ( w -> func [ ret - WAIT_OBJECT_0 ] )		6261124	0					
ANR	6261242	Condition	w -> func [ ret - WAIT_OBJECT_0 ]	37:16:614:641	6261124	0	True				
ANR	6261243	ArrayIndexing	w -> func [ ret - WAIT_OBJECT_0 ]		6261124	0					
ANR	6261244	PtrMemberAccess	w -> func		6261124	0					
ANR	6261245	Identifier	w		6261124	0					
ANR	6261246	Identifier	func		6261124	1					
ANR	6261247	AdditiveExpression	ret - WAIT_OBJECT_0		6261124	1		-			
ANR	6261248	Identifier	ret		6261124	0					
ANR	6261249	Identifier	WAIT_OBJECT_0		6261124	1					
ANR	6261250	ExpressionStatement	w -> func [ ret - WAIT_OBJECT_0 ] ( w -> opaque [ ret - WAIT_OBJECT_0 ] )	39:16:661:721	6261124	1	True				
ANR	6261251	CallExpression	w -> func [ ret - WAIT_OBJECT_0 ] ( w -> opaque [ ret - WAIT_OBJECT_0 ] )		6261124	0					
ANR	6261252	Callee	w -> func [ ret - WAIT_OBJECT_0 ]		6261124	0					
ANR	6261253	ArrayIndexing	w -> func [ ret - WAIT_OBJECT_0 ]		6261124	0					
ANR	6261254	PtrMemberAccess	w -> func		6261124	0					
ANR	6261255	Identifier	w		6261124	0					
ANR	6261256	Identifier	func		6261124	1					
ANR	6261257	AdditiveExpression	ret - WAIT_OBJECT_0		6261124	1		-			
ANR	6261258	Identifier	ret		6261124	0					
ANR	6261259	Identifier	WAIT_OBJECT_0		6261124	1					
ANR	6261260	ArgumentList	w -> opaque [ ret - WAIT_OBJECT_0 ]		6261124	1					
ANR	6261261	Argument	w -> opaque [ ret - WAIT_OBJECT_0 ]		6261124	0					
ANR	6261262	ArrayIndexing	w -> opaque [ ret - WAIT_OBJECT_0 ]		6261124	0					
ANR	6261263	PtrMemberAccess	w -> opaque		6261124	0					
ANR	6261264	Identifier	w		6261124	0					
ANR	6261265	Identifier	opaque		6261124	1					
ANR	6261266	AdditiveExpression	ret - WAIT_OBJECT_0		6261124	1		-			
ANR	6261267	Identifier	ret		6261124	0					
ANR	6261268	Identifier	WAIT_OBJECT_0		6261124	1					
ANR	6261269	ForStatement	for ( i = ( ret - WAIT_OBJECT_0 + 1 ) ; i < w -> num ; i ++ )		6261124	1					
ANR	6261270	ForInit	i = ( ret - WAIT_OBJECT_0 + 1 ) ;	45:16:798:827	6261124	0	True				
ANR	6261271	AssignmentExpression	i = ( ret - WAIT_OBJECT_0 + 1 )		6261124	0		=			
ANR	6261272	Identifier	i		6261124	0					
ANR	6261273	AdditiveExpression	ret - WAIT_OBJECT_0 + 1		6261124	1		-			
ANR	6261274	Identifier	ret		6261124	0					
ANR	6261275	AdditiveExpression	WAIT_OBJECT_0 + 1		6261124	1		+			
ANR	6261276	Identifier	WAIT_OBJECT_0		6261124	0					
ANR	6261277	PrimaryExpression	1		6261124	1					
ANR	6261278	Condition	i < w -> num	45:47:829:838	6261124	1	True				
ANR	6261279	RelationalExpression	i < w -> num		6261124	0		<			
ANR	6261280	Identifier	i		6261124	0					
ANR	6261281	PtrMemberAccess	w -> num		6261124	1					
ANR	6261282	Identifier	w		6261124	0					
ANR	6261283	Identifier	num		6261124	1					
ANR	6261284	PostIncDecOperationExpression	i ++	45:59:841:843	6261124	2	True				
ANR	6261285	Identifier	i		6261124	0					
ANR	6261286	IncDec	++		6261124	1					
ANR	6261287	CompoundStatement		43:64:802:802	6261124	3					
ANR	6261288	ExpressionStatement	"ret2 = WaitForSingleObject ( w -> events [ i ] , 0 )"	51:16:917:960	6261124	0	True				
ANR	6261289	AssignmentExpression	"ret2 = WaitForSingleObject ( w -> events [ i ] , 0 )"		6261124	0		=			
ANR	6261290	Identifier	ret2		6261124	0					
ANR	6261291	CallExpression	"WaitForSingleObject ( w -> events [ i ] , 0 )"		6261124	1					
ANR	6261292	Callee	WaitForSingleObject		6261124	0					
ANR	6261293	Identifier	WaitForSingleObject		6261124	0					
ANR	6261294	ArgumentList	w -> events [ i ]		6261124	1					
ANR	6261295	Argument	w -> events [ i ]		6261124	0					
ANR	6261296	ArrayIndexing	w -> events [ i ]		6261124	0					
ANR	6261297	PtrMemberAccess	w -> events		6261124	0					
ANR	6261298	Identifier	w		6261124	0					
ANR	6261299	Identifier	events		6261124	1					
ANR	6261300	Identifier	i		6261124	1					
ANR	6261301	Argument	0		6261124	1					
ANR	6261302	PrimaryExpression	0		6261124	0					
ANR	6261303	IfStatement	if ( ret2 == WAIT_OBJECT_0 )		6261124	1					
ANR	6261304	Condition	ret2 == WAIT_OBJECT_0	53:19:982:1002	6261124	0	True				
ANR	6261305	EqualityExpression	ret2 == WAIT_OBJECT_0		6261124	0		==			
ANR	6261306	Identifier	ret2		6261124	0					
ANR	6261307	Identifier	WAIT_OBJECT_0		6261124	1					
ANR	6261308	CompoundStatement		51:42:961:961	6261124	1					
ANR	6261309	IfStatement	if ( w -> func [ i ] )		6261124	0					
ANR	6261310	Condition	w -> func [ i ]	55:24:1032:1041	6261124	0	True				
ANR	6261311	ArrayIndexing	w -> func [ i ]		6261124	0					
ANR	6261312	PtrMemberAccess	w -> func		6261124	0					
ANR	6261313	Identifier	w		6261124	0					
ANR	6261314	Identifier	func		6261124	1					
ANR	6261315	Identifier	i		6261124	1					
ANR	6261316	ExpressionStatement	w -> func [ i ] ( w -> opaque [ i ] )	57:24:1069:1093	6261124	1	True				
ANR	6261317	CallExpression	w -> func [ i ] ( w -> opaque [ i ] )		6261124	0					
ANR	6261318	Callee	w -> func [ i ]		6261124	0					
ANR	6261319	ArrayIndexing	w -> func [ i ]		6261124	0					
ANR	6261320	PtrMemberAccess	w -> func		6261124	0					
ANR	6261321	Identifier	w		6261124	0					
ANR	6261322	Identifier	func		6261124	1					
ANR	6261323	Identifier	i		6261124	1					
ANR	6261324	ArgumentList	w -> opaque [ i ]		6261124	1					
ANR	6261325	Argument	w -> opaque [ i ]		6261124	0					
ANR	6261326	ArrayIndexing	w -> opaque [ i ]		6261124	0					
ANR	6261327	PtrMemberAccess	w -> opaque		6261124	0					
ANR	6261328	Identifier	w		6261124	0					
ANR	6261329	Identifier	opaque		6261124	1					
ANR	6261330	Identifier	i		6261124	1					
ANR	6261331	ElseStatement	else		6261124	0					
ANR	6261332	IfStatement	if ( ret2 == WAIT_TIMEOUT )		6261124	0					
ANR	6261333	Condition	ret2 == WAIT_TIMEOUT	59:27:1123:1142	6261124	0	True				
ANR	6261334	EqualityExpression	ret2 == WAIT_TIMEOUT		6261124	0		==			
ANR	6261335	Identifier	ret2		6261124	0					
ANR	6261336	Identifier	WAIT_TIMEOUT		6261124	1					
ANR	6261337	CompoundStatement		57:49:1101:1101	6261124	1					
ANR	6261338	ElseStatement	else		6261124	0					
ANR	6261339	CompoundStatement		59:23:1127:1127	6261124	0					
ANR	6261340	ExpressionStatement	err = GetLastError ( )	63:20:1194:1214	6261124	0	True				
ANR	6261341	AssignmentExpression	err = GetLastError ( )		6261124	0		=			
ANR	6261342	Identifier	err		6261124	0					
ANR	6261343	CallExpression	GetLastError ( )		6261124	1					
ANR	6261344	Callee	GetLastError		6261124	0					
ANR	6261345	Identifier	GetLastError		6261124	0					
ANR	6261346	ArgumentList			6261124	1					
ANR	6261347	ExpressionStatement	"fprintf ( stderr , ""WaitForSingleObject error %d %d\\n"" , i , err )"	65:20:1237:1297	6261124	1	True				
ANR	6261348	CallExpression	"fprintf ( stderr , ""WaitForSingleObject error %d %d\\n"" , i , err )"		6261124	0					
ANR	6261349	Callee	fprintf		6261124	0					
ANR	6261350	Identifier	fprintf		6261124	0					
ANR	6261351	ArgumentList	stderr		6261124	1					
ANR	6261352	Argument	stderr		6261124	0					
ANR	6261353	Identifier	stderr		6261124	0					
ANR	6261354	Argument	"""WaitForSingleObject error %d %d\\n"""		6261124	1					
ANR	6261355	PrimaryExpression	"""WaitForSingleObject error %d %d\\n"""		6261124	0					
ANR	6261356	Argument	i		6261124	2					
ANR	6261357	Identifier	i		6261124	0					
ANR	6261358	Argument	err		6261124	3					
ANR	6261359	Identifier	err		6261124	0					
ANR	6261360	ElseStatement	else		6261124	0					
ANR	6261361	IfStatement	if ( ret == WAIT_TIMEOUT )		6261124	0					
ANR	6261362	Condition	ret == WAIT_TIMEOUT	71:19:1353:1371	6261124	0	True				
ANR	6261363	EqualityExpression	ret == WAIT_TIMEOUT		6261124	0		==			
ANR	6261364	Identifier	ret		6261124	0					
ANR	6261365	Identifier	WAIT_TIMEOUT		6261124	1					
ANR	6261366	CompoundStatement		69:40:1330:1330	6261124	1					
ANR	6261367	ElseStatement	else		6261124	0					
ANR	6261368	CompoundStatement		71:15:1348:1348	6261124	0					
ANR	6261369	ExpressionStatement	err = GetLastError ( )	75:12:1407:1427	6261124	0	True				
ANR	6261370	AssignmentExpression	err = GetLastError ( )		6261124	0		=			
ANR	6261371	Identifier	err		6261124	0					
ANR	6261372	CallExpression	GetLastError ( )		6261124	1					
ANR	6261373	Callee	GetLastError		6261124	0					
ANR	6261374	Identifier	GetLastError		6261124	0					
ANR	6261375	ArgumentList			6261124	1					
ANR	6261376	ExpressionStatement	"fprintf ( stderr , ""WaitForMultipleObjects error %d %d\\n"" , ret , err )"	77:12:1442:1507	6261124	1	True				
ANR	6261377	CallExpression	"fprintf ( stderr , ""WaitForMultipleObjects error %d %d\\n"" , ret , err )"		6261124	0					
ANR	6261378	Callee	fprintf		6261124	0					
ANR	6261379	Identifier	fprintf		6261124	0					
ANR	6261380	ArgumentList	stderr		6261124	1					
ANR	6261381	Argument	stderr		6261124	0					
ANR	6261382	Identifier	stderr		6261124	0					
ANR	6261383	Argument	"""WaitForMultipleObjects error %d %d\\n"""		6261124	1					
ANR	6261384	PrimaryExpression	"""WaitForMultipleObjects error %d %d\\n"""		6261124	0					
ANR	6261385	Argument	ret		6261124	2					
ANR	6261386	Identifier	ret		6261124	0					
ANR	6261387	Argument	err		6261124	3					
ANR	6261388	Identifier	err		6261124	0					
ANR	6261389	ExpressionStatement	* timeout = 0	85:4:1534:1546	6261124	5	True				
ANR	6261390	AssignmentExpression	* timeout = 0		6261124	0		=			
ANR	6261391	UnaryOperationExpression	* timeout		6261124	0					
ANR	6261392	UnaryOperator	*		6261124	0					
ANR	6261393	Identifier	timeout		6261124	1					
ANR	6261394	PrimaryExpression	0		6261124	1					
ANR	6261395	ReturnType	void		6261124	1					
ANR	6261396	Identifier	os_host_main_loop_wait		6261124	2					
ANR	6261397	ParameterList	int * timeout		6261124	3					
ANR	6261398	Parameter	int * timeout	1:28:28:39	6261124	0	True				
ANR	6261399	ParameterType	int *		6261124	0					
ANR	6261400	Identifier	timeout		6261124	1					
ANR	6261401	CFGEntryNode	ENTRY		6261124		True				
ANR	6261402	CFGExitNode	EXIT		6261124		True				
ANR	6261403	Symbol	* w		6261124						
ANR	6261404	Symbol	ret2		6261124						
ANR	6261405	Symbol	w -> func		6261124						
ANR	6261406	Symbol	& wait_objects		6261124						
ANR	6261407	Symbol	* ret		6261124						
ANR	6261408	Symbol	timeout		6261124						
ANR	6261409	Symbol	w -> opaque		6261124						
ANR	6261410	Symbol	WaitForSingleObject		6261124						
ANR	6261411	Symbol	* w -> func		6261124						
ANR	6261412	Symbol	* * w		6261124						
ANR	6261413	Symbol	pe -> next		6261124						
ANR	6261414	Symbol	pe -> func		6261124						
ANR	6261415	Symbol	w -> num		6261124						
ANR	6261416	Symbol	WAIT_TIMEOUT		6261124						
ANR	6261417	Symbol	WAIT_OBJECT_0		6261124						
ANR	6261418	Symbol	* w -> events		6261124						
ANR	6261419	Symbol	* w -> opaque		6261124						
ANR	6261420	Symbol	* WAIT_OBJECT_0		6261124						
ANR	6261421	Symbol	WaitForMultipleObjects		6261124						
ANR	6261422	Symbol	ret		6261124						
ANR	6261423	Symbol	NULL		6261124						
ANR	6261424	Symbol	w -> events		6261124						
ANR	6261425	Symbol	err		6261124						
ANR	6261426	Symbol	* timeout		6261124						
ANR	6261427	Symbol	first_polling_entry		6261124						
ANR	6261428	Symbol	i		6261124						
ANR	6261429	Symbol	stderr		6261124						
ANR	6261430	Symbol	* i		6261124						
ANR	6261431	Symbol	pe		6261124						
ANR	6261432	Symbol	GetLastError		6261124						
ANR	6261433	Symbol	w		6261124						
ANR	6261434	Symbol	* pe		6261124						
ANR	6261435	Symbol	FALSE		6261124						
ANR	6261436	Symbol	pe -> opaque		6261124						
